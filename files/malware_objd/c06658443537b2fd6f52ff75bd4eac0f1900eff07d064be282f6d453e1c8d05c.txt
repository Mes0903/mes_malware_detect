
c06658443537b2fd6f52ff75bd4eac0f1900eff07d064be282f6d453e1c8d05c.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	mov    DWORD PTR [ebp-0x48],0x0
  40100d:	mov    DWORD PTR [ebp-0x18],0x0
  401014:	mov    DWORD PTR [ebp-0x70],0x0
  40101b:	mov    DWORD PTR [ebp-0x60],0x0
  401022:	mov    DWORD PTR [ebp-0x8],0x0
  401029:	mov    DWORD PTR [ebp-0x6c],0x0
  401030:	mov    DWORD PTR [ebp-0x68],0x0
  401037:	mov    DWORD PTR [ebp-0x14],0x0
  40103e:	mov    DWORD PTR [ebp-0x4c],0x0
  401045:	mov    DWORD PTR [ebp-0x10],0x0
  40104c:	mov    DWORD PTR [ebp-0x58],0x0
  401053:	mov    DWORD PTR [ebp-0x4],0x0
  40105a:	mov    DWORD PTR [ebp-0x5c],0x0
  401061:	mov    DWORD PTR [ebp-0x30],0x0
  401068:	mov    DWORD PTR [ebp-0x54],0x0
  40106f:	mov    DWORD PTR [ebp-0x2c],0x0
  401076:	mov    DWORD PTR [ebp-0x50],0x0
  40107d:	mov    DWORD PTR [ebp-0xc],0x0
  401084:	mov    eax,ds:0x448fa8
  401089:	mov    DWORD PTR [ebp-0x28],eax
  40108c:	mov    ecx,DWORD PTR ds:0x448fac
  401092:	mov    DWORD PTR [ebp-0x24],ecx
  401095:	mov    edx,DWORD PTR ds:0x448fb0
  40109b:	mov    DWORD PTR [ebp-0x20],edx
  40109e:	mov    al,ds:0x448fb4
  4010a3:	mov    BYTE PTR [ebp-0x1c],al
  4010a6:	mov    ecx,DWORD PTR ds:0x448fb8
  4010ac:	mov    DWORD PTR [ebp-0x40],ecx
  4010af:	mov    edx,DWORD PTR ds:0x448fbc
  4010b5:	mov    DWORD PTR [ebp-0x3c],edx
  4010b8:	mov    eax,ds:0x448fc0
  4010bd:	mov    DWORD PTR [ebp-0x38],eax
  4010c0:	mov    cx,WORD PTR ds:0x448fc4
  4010c7:	mov    WORD PTR [ebp-0x34],cx
  4010cb:	mov    dl,BYTE PTR ds:0x448fc6
  4010d1:	mov    BYTE PTR [ebp-0x32],dl
  4010d4:	mov    DWORD PTR [ebp-0x30],0x40
  4010db:	lea    eax,[ebp-0x40]
  4010de:	push   eax
  4010df:	lea    ecx,[ebp-0x10]
  4010e2:	push   ecx
  4010e3:	call   DWORD PTR ds:0x417000
  4010e9:	test   eax,eax
  4010eb:	je     0x4152d6
  4010f1:	mov    edx,DWORD PTR [ebp-0x10]
  4010f4:	add    edx,0x1
  4010f7:	mov    DWORD PTR [ebp-0x10],edx
  4010fa:	scas   al,BYTE PTR es:[edi]
  4010fb:	fstp   DWORD PTR [eax]
  4010fd:	or     DWORD PTR [esi-0x2e],esi
  401100:	dec    edx
  401101:	out    0x8e,eax
  401103:	mov    BYTE PTR [ebp+0x67],al
  401106:	cmp    edi,DWORD PTR ss:[ebp-0xb]
  40110a:	and    BYTE PTR [eax],bh
  40110c:	mov    ?,WORD PTR [edx]
  40110e:	mov    ecx,0x5396481e
  401113:	xor    al,0x18
  401115:	sub    eax,0x89913e49
  40111a:	mov    ds:0x333d8618,eax
  40111f:	sub    dh,BYTE PTR [esi*4+0x447739ff]
  401126:	push   ss
  401127:	adc    ebp,edx
  401129:	mov    al,ds:0x1dc0aec7
  40112e:	cs enter 0x59b4,0x9f
  401133:	adc    bl,ah
  401135:	stos   BYTE PTR es:[edi],al
  401136:	pop    ds
  401137:	pop    ebp
  401138:	dec    esp
  401139:	data16 jp 0x4010ef
  40113c:	xchg   esi,eax
  40113d:	and    BYTE PTR [esi],cl
  40113f:	add    al,0x4e
  401141:	(bad)  
  401142:	mov    bl,0xc3
  401144:	dec    eax
  401145:	jmp    0x1fc0:0xf7f6510b
  40114c:	dec    ecx
  40114d:	mov    bl,BYTE PTR [eax-0x28803b65]
  401153:	ins    DWORD PTR es:[edi],dx
  401154:	add    al,0xfd
  401156:	or     ebp,DWORD PTR [edx-0x52]
  401159:	nop
  40115a:	aaa    
  40115b:	sbb    eax,DWORD PTR [edi]
  40115d:	leave  
  40115e:	xchg   edi,eax
  40115f:	(bad)  
  401160:	mov    ebx,0xd607ee37
  401165:	sbb    dh,BYTE PTR [edx]
  401167:	inc    esi
  401168:	cwde   
  401169:	rcr    BYTE PTR [edx-0x44],1
  40116c:	mov    cl,0x72
  40116e:	push   0xb895b50e
  401173:	iret   
  401174:	cmp    DWORD PTR [ebx],ebp
  401176:	mov    al,ds:0x86db559f
  40117b:	mov    bh,0x4a
  40117d:	jns    0x40116f
  40117f:	data16 scas al,BYTE PTR es:[edi]
  401181:	mul    ch
  401183:	or     DWORD PTR [edx],ecx
  401185:	scas   eax,DWORD PTR es:[edi]
  401186:	leave  
  401187:	xor    al,BYTE PTR [edi+0x76c29fae]
  40118d:	mov    dh,0x0
  40118f:	scas   al,BYTE PTR es:[edi]
  401190:	add    al,0x94
  401192:	lods   al,BYTE PTR ds:[esi]
  401193:	and    BYTE PTR [edx+0x21],0x29
  401197:	sub    eax,0x8af0e57b
  40119c:	xor    eax,0x22f3529a
  4011a1:	push   ebp
  4011a2:	cli    
  4011a3:	push   0x8c1d401f
  4011a8:	loope  0x4011a6
  4011aa:	push   edi
  4011ab:	out    dx,eax
  4011ac:	into   
  4011ad:	out    dx,al
  4011ae:	aad    0xf5
  4011b0:	dec    esi
  4011b1:	adc    DWORD PTR [esi-0xc23ec03],eax
  4011b7:	adc    eax,0x906aaa4e
  4011bc:	add    ebp,DWORD PTR [eax]
  4011be:	push   ds
  4011bf:	sbb    edx,eax
  4011c1:	xor    al,0xf0
  4011c3:	sub    BYTE PTR [ebp+0xed7332a],cl
  4011c9:	and    esi,DWORD PTR [ecx+0x46]
  4011cc:	jg     0x401158
  4011ce:	out    dx,al
  4011cf:	cli    
  4011d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4011d1:	call   0xbd41ddf2
  4011d6:	adc    cl,BYTE PTR [edx+0x34bd861a]
  4011dc:	test   esp,0x71c3061
  4011e2:	add    ch,BYTE PTR [edx-0x26]
  4011e5:	sbb    BYTE PTR [eax+0x5ad011b2],al
  4011eb:	mov    BYTE PTR [edx+0x2ded3dff],dh
  4011f1:	pusha  
  4011f2:	jo     0x4011a4
  4011f4:	jp     0x401181
  4011f6:	inc    ecx
  4011f7:	cmp    ebx,DWORD PTR [ebx+0x45b14fd]
  4011fd:	jmp    0x4011c4
  4011ff:	inc    ebx
  401200:	retf   0x80fc
  401203:	pop    esi
  401204:	push   0xfffffff4
  401206:	push   eax
  401207:	mov    eax,DWORD PTR [esi]
  401209:	inc    esp
  40120a:	add    al,0x5
  40120c:	shl    DWORD PTR [edi+edx*1+0x55],1
  401210:	imul   edx,DWORD PTR [edx+0x36],0xdfc61028
  401217:	dec    eax
  401218:	test   esp,eax
  40121a:	dec    edi
  40121b:	bnd jl 0x4011f1
  40121e:	jmp    0x9bb5a8e4
  401223:	loope  0x401253
  401225:	jns    0x401208
  401227:	(bad)  
  401228:	in     eax,0x45
  40122a:	and    DWORD PTR [esi-0xf],eax
  40122d:	es aad 0xe8
  401230:	inc    esi
  401231:	xchg   edx,eax
  401232:	daa    
  401233:	push   edx
  401234:	jmp    0x4011c4
  401236:	stos   DWORD PTR es:[edi],eax
  401237:	pop    ds
  401238:	xor    DWORD PTR [edx+0x268c3053],edi
  40123e:	xchg   edx,eax
  40123f:	push   0x36
  401241:	mov    edx,0x8cc50731
  401246:	mov    eax,ds:0x20300fdd
  40124b:	pop    esi
  40124c:	and    al,0xe1
  40124e:	inc    edx
  40124f:	iret   
  401250:	add    al,0x1b
  401252:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401253:	call   DWORD PTR [ebp+ebx*8+0x50]
  401257:	dec    ebx
  401258:	inc    ebp
  401259:	lods   eax,DWORD PTR ds:[esi]
  40125a:	or     BYTE PTR [eax+edi*4+0x1f],bl
  40125e:	cli    
  40125f:	and    BYTE PTR [ebp+0x5db3ecc4],al
  401265:	mov    dh,0x46
  401267:	mov    dh,0x3d
  401269:	rol    DWORD PTR ds:0xa80b46f4,0x26
  401270:	fist   DWORD PTR [ecx+eax*2-0x9]
  401274:	fst    DWORD PTR [esi-0x23]
  401277:	call   0xd310:0x82ddf4f
  40127e:	jae    0x4012ce
  401280:	cmp    BYTE PTR [ebx+eiz*2+0x725755bf],ch
  401287:	sbb    eax,0xb499d84b
  40128c:	adc    BYTE PTR [ecx],cl
  40128e:	and    eax,0x588f039e
  401293:	add    dl,BYTE PTR [edi]
  401295:	int    0x7f
  401297:	sub    BYTE PTR [esi],dh
  401299:	fist   DWORD PTR [edi+0x20]
  40129c:	and    al,0x11
  40129e:	jecxz  0x401278
  4012a0:	mov    BYTE PTR [ebx],bl
  4012a2:	jnp    0x401313
  4012a4:	pop    esp
  4012a5:	xor    cl,BYTE PTR [ebx]
  4012a7:	jns    0x40126a
  4012a9:	fidivr DWORD PTR [ecx+0x76dee9a9]
  4012af:	lods   eax,DWORD PTR ds:[esi]
  4012b0:	scas   al,BYTE PTR es:[edi]
  4012b1:	imul   esi,DWORD PTR ds:0xf9c07315,0x635b667e
  4012bb:	sbb    BYTE PTR [ebx],bl
  4012bd:	in     eax,dx
  4012be:	and    BYTE PTR [eax-0x1e6eec38],al
  4012c4:	xchg   edi,eax
  4012c5:	add    eax,0x997b5942
  4012ca:	lods   al,BYTE PTR ds:[esi]
  4012cb:	adc    eax,0xf75fa73d
  4012d0:	inc    DWORD PTR [ebp-0x7d]
  4012d3:	sti    
  4012d4:	push   cs
  4012d5:	sbb    eax,0xb311bd68
  4012da:	pop    edi
  4012db:	push   0x8c697039
  4012e0:	ret    
  4012e1:	fucomi st,st(3)
  4012e3:	push   ecx
  4012e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4012e5:	cmp    al,0xcf
  4012e7:	dec    edi
  4012e8:	push   esp
  4012e9:	mov    bh,0xf4
  4012eb:	add    eax,eax
  4012ed:	pop    esp
  4012ee:	dec    ebp
  4012ef:	dec    eax
  4012f0:	test   DWORD PTR [ebx+0x29],esi
  4012f3:	pop    ebx
  4012f4:	adc    DWORD PTR [edx+0x307c731],edx
  4012fa:	dec    esi
  4012fb:	fld    DWORD PTR [ebx-0x3c010680]
  401301:	inc    esp
  401302:	mov    dl,0x1f
  401304:	cmp    DWORD PTR [ebx+ebp*2-0x7af69b08],0x7b328775
  40130f:	dec    esp
  401310:	ins    DWORD PTR es:[edi],dx
  401311:	call   0x6bf5e567
  401316:	dec    eax
  401317:	adc    eax,0x7830480c
  40131c:	xchg   esi,eax
  40131d:	pop    eax
  40131e:	leave  
  40131f:	pop    ds
  401320:	pop    ecx
  401321:	mul    DWORD PTR [ebx-0x3b]
  401324:	aam    0x9e
  401326:	jb     0x4012db
  401328:	lea    edx,[edi-0x7]
  40132b:	mov    ebp,0xc1c7e10a
  401330:	repnz pop ebp
  401332:	(bad)  [ecx-0x21]
  401335:	pop    esi
  401336:	out    dx,al
  401337:	push   ebp
  401338:	mov    ecx,0x7e52def8
  40133d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40133e:	jge    0x401384
  401340:	mov    edi,0x9a84c39f
  401345:	(bad)  
  401346:	data16 hlt 
  401348:	rol    BYTE PTR [ecx+0x6a],1
  40134b:	stos   BYTE PTR es:[edi],al
  40134c:	(bad)  
  40134d:	sar    BYTE PTR [ebx],cl
  40134f:	aas    
  401350:	popa   
  401351:	jne    0x401327
  401353:	mov    edx,0x56893a99
  401358:	xchg   esp,eax
  401359:	push   edi
  40135a:	push   ebx
  40135c:	fld    QWORD PTR [ecx]
  40135e:	adc    BYTE PTR [eax-0x15],bl
  401361:	mov    dh,BYTE PTR [eax]
  401363:	test   eax,0xb96963a
  401368:	or     al,0x51
  40136a:	fisubr DWORD PTR [ebx+0x37e08dee]
  401370:	or     BYTE PTR [ebx-0x46],dl
  401373:	(bad)  
  401374:	adc    al,0x5a
  401376:	sbb    DWORD PTR [ebp-0x15],ebx
  401379:	loopne 0x401314
  40137b:	sub    bl,BYTE PTR [ebp-0x74c11619]
  401381:	idiv   DWORD PTR [edx+0x0]
  401384:	ins    BYTE PTR es:[edi],dx
  401385:	mov    ah,0xa
  401387:	pop    edi
  401388:	xor    DWORD PTR [edx+0x25],0xa56ddd8a
  40138f:	adc    al,0x2d
  401391:	cdq    
  401392:	int3   
  401393:	sbb    eax,0xe6a3e0eb
  401398:	ss xchg edi,eax
  40139a:	lods   al,BYTE PTR ds:[esi]
  40139b:	xor    al,0x39
  40139d:	aam    0xbe
  40139f:	cmc    
  4013a0:	loop   0x4013a5
  4013a2:	je     0x401373
  4013a4:	sub    al,0x1f
  4013a6:	inc    edx
  4013a7:	add    DWORD PTR [ebp+0x401d384a],esi
  4013ad:	ret    
  4013ae:	imul   esi,ecx,0xffffffd4
  4013b1:	adc    al,0x67
  4013b3:	std    
  4013b4:	jns    0x401339
  4013b6:	jns    0x40135d
  4013b8:	cmp    DWORD PTR [ebp-0x5aee81ea],esi
  4013be:	push   ss
  4013bf:	(bad)  
  4013c0:	xor    ebx,DWORD PTR [ecx+0xd55694f]
  4013c6:	in     al,dx
  4013c7:	cld    
  4013c8:	fmul   QWORD PTR cs:[ecx+ecx*2-0x33f29c37]
  4013d0:	in     al,dx
  4013d1:	push   ebp
  4013d2:	jns    0x401377
  4013d4:	int3   
  4013d5:	jg     0x4013f3
  4013d7:	xor    BYTE PTR [edi+0x3272004d],0x53
  4013de:	ret    
  4013df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4013e0:	dec    edi
  4013e1:	jl     0x4013d7
  4013e3:	jl     0x4013ef
  4013e5:	mov    cl,0x5c
  4013e7:	jne    0x40138e
  4013e9:	(bad)  
  4013eb:	push   esp
  4013ec:	ds xor edx,esi
  4013ef:	retf   
  4013f0:	add    eax,0xbedf0875
  4013f5:	cdq    
  4013f6:	mov    WORD PTR [edx-0x3f],?
  4013f9:	inc    esp
  4013fa:	cmc    
  4013fb:	adc    BYTE PTR [esp+ebx*2],dh
  4013fe:	scas   eax,DWORD PTR es:[edi]
  4013ff:	push   0x2
  401401:	bound  ebx,QWORD PTR [esi-0x10fd7e11]
  401407:	add    DWORD PTR [edx+0x4a],ebx
  40140a:	or     ebp,DWORD PTR [esi+0x2bdbe159]
  401410:	retf   0x1e7b
  401413:	xchg   si,ax
  401415:	div    BYTE PTR [ecx-0x5a]
  401418:	imul   edx,DWORD PTR [esi],0x3ae096e9
  40141e:	inc    edi
  40141f:	mov    ah,ah
  401421:	je     0x4013ec
  401423:	jp     0x4013e2
  401425:	int3   
  401426:	stc    
  401427:	es jmp 0x64ed652f
  40142d:	test   ch,dh
  40142f:	out    dx,eax
  401430:	call   0x5438:0x9aa42903
  401437:	inc    ecx
  401438:	cmp    esi,DWORD PTR [ecx-0x30]
  40143b:	enter  0xcd47,0xae
  40143f:	and    DWORD PTR [ecx+0x769a2d6e],ebp
  401445:	pop    eax
  401446:	pushf  
  401447:	and    eax,0x787fb3e
  40144c:	clc    
  40144d:	and    esp,DWORD PTR [edx+0x4f]
  401450:	imul   esp,DWORD PTR [ecx+0x3f],0x33f5c1a9
  401457:	ds aam 0xec
  40145a:	les    esp,FWORD PTR [eax]
  40145c:	scas   eax,DWORD PTR es:[edi]
  40145d:	(bad)  [edi]
  40145f:	push   ss
  401460:	ret    0x9ac5
  401463:	xchg   edi,eax
  401464:	jecxz  0x40142e
  401466:	out    dx,al
  401467:	jae    0x4014a1
  401469:	cmp    al,0xc8
  40146b:	iret   
  40146c:	cmp    dl,bh
  40146e:	ins    BYTE PTR es:[edi],dx
  40146f:	adc    al,0xb0
  401471:	pop    ecx
  401472:	cmp    BYTE PTR [edi+edi*8-0x741e1237],dh
  401479:	stos   BYTE PTR es:[edi],al
  40147a:	fdivr  st(0),st
  40147c:	and    cl,BYTE PTR [edx]
  40147e:	in     al,0x35
  401480:	mov    ah,0xc
  401482:	adc    edi,ecx
  401484:	sub    al,0xbc
  401486:	js     0x4014f7
  401488:	imul   BYTE PTR [esi+0x48]
  40148b:	adc    ebp,DWORD PTR [eax-0x6c]
  40148e:	sub    DWORD PTR [ebp-0x3e],edi
  401491:	or     ecx,DWORD PTR [esi-0x52]
  401494:	dec    ecx
  401495:	sbb    esi,0xffffffe7
  401498:	test   al,0x6d
  40149a:	jge    0x4014bf
  40149c:	mov    ah,0xd9
  40149e:	scas   al,BYTE PTR es:[edi]
  40149f:	mov    ch,0xf3
  4014a1:	cmp    eax,0x90dfd915
  4014a6:	adc    bl,BYTE PTR [esp+edx*2-0x570af76d]
  4014ad:	jl     0x401520
  4014af:	ins    BYTE PTR es:[edi],dx
  4014b0:	inc    eax
  4014b1:	pop    ecx
  4014b2:	mov    ebx,0x71214429
  4014b7:	inc    esi
  4014b8:	push   edi
  4014b9:	dec    ebx
  4014ba:	mov    ecx,0x7d169712
  4014bf:	jbe    0x4014a2
  4014c1:	and    eax,ebx
  4014c3:	xchg   ebp,eax
  4014c4:	popf   
  4014c5:	add    al,0x7e
  4014c7:	cdq    
  4014c8:	or     bl,BYTE PTR [eax+0x68]
  4014cb:	or     eax,0x922ecc16
  4014d0:	mov    esi,DWORD PTR [eax]
  4014d2:	shl    esi,0x81
  4014d5:	and    BYTE PTR [ebp-0x670b1726],dl
  4014db:	sub    al,0xa2
  4014dd:	pop    ecx
  4014de:	repnz out dx,al
  4014e0:	adc    al,0xd
  4014e2:	cmp    BYTE PTR [esi],0x7e
  4014e5:	adc    DWORD PTR [ecx+0x68],ebp
  4014e8:	dec    edx
  4014e9:	mov    ah,0x3c
  4014eb:	imul   eax,DWORD PTR [edx+edx*2+0x11],0xffffffa8
  4014f0:	mov    WORD PTR [ebx+0x5e49c51b],?
  4014f6:	mov    eax,ds:0xed4aa030
  4014fb:	xchg   edi,eax
  4014fc:	inc    edi
  4014fd:	scas   al,BYTE PTR es:[edi]
  4014fe:	mov    cl,0x89
  401500:	mov    esi,0x5c0c9334
  401505:	add    cl,BYTE PTR [ebx+ebx*2+0x73]
  401509:	fwait
  40150a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40150b:	sub    BYTE PTR [ebx+0x30],ch
  40150e:	cdq    
  40150f:	adc    eax,0x4075fed9
  401514:	add    eax,0xe5284c4b
  401519:	lods   al,BYTE PTR ds:[esi]
  40151a:	in     eax,0x63
  40151c:	and    bh,BYTE PTR [esi*8+0x7faf99c3]
  401523:	jl     0x401550
  401525:	inc    BYTE PTR [ebp+edi*4-0x55]
  401529:	scas   eax,DWORD PTR es:[edi]
  40152a:	ins    DWORD PTR es:[edi],dx
  40152b:	lahf   
  40152c:	sub    al,0x5d
  40152e:	xchg   esp,eax
  40152f:	pop    eax
  401530:	jl     0x40151b
  401532:	xchg   DWORD PTR [ebx+0x11],edx
  401535:	add    dl,BYTE PTR [esi-0x155b7aa8]
  40153b:	xor    bh,dl
  40153d:	sbb    BYTE PTR [edi],dl
  40153f:	add    bl,al
  401541:	cli    
  401542:	popf   
  401543:	aam    0x4c
  401545:	or     ah,dl
  401547:	mov    ch,0x3e
  401549:	sbb    ah,BYTE PTR [ecx+0x33ae5f3d]
  40154f:	arpl   WORD PTR [ebx-0x49188ce2],bp
  401555:	shl    ecx,1
  401557:	ds pop edi
  401559:	test   eax,0x69db36d5
  40155e:	push   ss
  40155f:	ja     0x401518
  401561:	nop
  401562:	inc    eax
  401563:	xchg   esp,eax
  401564:	lahf   
  401565:	mov    DWORD PTR [ebp+0x2e],edx
  401568:	add    DWORD PTR [ebp+0x823d50],edx
  40156e:	inc    ebp
  40156f:	out    0xa5,eax
  401571:	sbb    DWORD PTR [edi-0x50dea7ac],ebp
  401577:	stc    
  401578:	es push ebx
  40157a:	dec    ebp
  40157b:	enter  0xc7c,0xa
  40157f:	pop    ebx
  401580:	mov    WORD PTR [eax+0x6b],?
  401583:	push   esi
  401584:	xor    ebp,ecx
  401586:	mov    edx,0x36dba599
  40158b:	cmc    
  40158c:	fstp   QWORD PTR [edi+0x1e197fad]
  401592:	push   edx
  401593:	xchg   edx,eax
  401594:	es scas eax,DWORD PTR es:[edi]
  401596:	sti    
  401597:	adc    al,0x3e
  401599:	(bad)  
  40159a:	pop    ebx
  40159b:	scas   eax,DWORD PTR es:[edi]
  40159c:	pop    esi
  40159d:	add    bh,cl
  40159f:	mov    esi,ebp
  4015a1:	cmp    al,0x88
  4015a3:	icebp  
  4015a4:	lahf   
  4015a5:	int3   
  4015a6:	int    0x4e
  4015a8:	leave  
  4015a9:	xor    ebx,0xeaa6eee3
  4015af:	pop    ebp
  4015b0:	or     al,0x4d
  4015b2:	into   
  4015b3:	pop    edi
  4015b4:	mov    edi,0xb0086f1f
  4015b9:	mov    es,WORD PTR [esi-0x66cd9f15]
  4015bf:	retf   
  4015c0:	jne    0x4015d2
  4015c2:	sbb    BYTE PTR [esi-0x51],bl
  4015c5:	cmp    al,0x8b
  4015c7:	xchg   ecx,eax
  4015c8:	push   eax
  4015c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4015ca:	and    BYTE PTR [edi-0x25],bh
  4015cd:	or     BYTE PTR [ebp+0x58677591],ch
  4015d3:	(bad)  
  4015d4:	outs   dx,BYTE PTR ds:[esi]
  4015d5:	mov    BYTE PTR [esi-0x16313b66],bl
  4015db:	adc    eax,0xc0ad28af
  4015e0:	dec    esi
  4015e1:	clc    
  4015e2:	and    al,0xc9
  4015e4:	out    0xd4,al
  4015e6:	mov    DWORD PTR [ecx-0x27],eax
  4015e9:	sar    DWORD PTR [ebp-0x4e943730],cl
  4015ef:	cld    
  4015f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4015f1:	icebp  
  4015f2:	inc    esp
  4015f3:	test   BYTE PTR [ebp+0x51139467],cl
  4015f9:	mov    fs,WORD PTR [edi+0x37]
  4015fc:	or     eax,DWORD PTR [ebp+0x16]
  4015ff:	dec    eax
  401600:	or     DWORD PTR [esi],eax
  401602:	pop    ss
  401603:	mov    bl,0x47
  401605:	jnp    0x4015ad
  401607:	das    
  401608:	and    dl,BYTE PTR [edx]
  40160a:	sub    ebx,DWORD PTR [eax]
  40160c:	cwde   
  40160d:	jns    0x4015f0
  40160f:	icebp  
  401610:	lods   al,BYTE PTR ds:[esi]
  401611:	push   cs
  401612:	mov    edx,0x6b484868
  401617:	sbb    DWORD PTR [edx-0x4600dc9],eax
  40161d:	int    0x28
  40161f:	add    DWORD PTR [ecx],ecx
  401621:	pop    ds
  401622:	inc    esi
  401623:	and    BYTE PTR [ebx-0x26],0x87
  401627:	mov    eax,0x10c54d3a
  40162c:	lds    edi,FWORD PTR [eax-0x1ebc8577]
  401632:	mov    edi,0x7b0e80be
  401637:	and    al,0x68
  401639:	mov    ah,0x48
  40163b:	dec    eax
  40163c:	adc    BYTE PTR [esi+0x36e743d7],al
  401642:	lahf   
  401643:	icebp  
  401644:	mov    ebx,0xcfc994fe
  401649:	sbb    BYTE PTR [eax-0x7a],cl
  40164c:	and    eax,0x76679fb4
  401651:	cmp    eax,0x3e6a7fd9
  401656:	fisttp DWORD PTR [ebx-0x4a]
  401659:	pop    ds
  40165a:	stos   BYTE PTR es:[edi],al
  40165b:	add    al,0x5
  40165d:	pop    edi
  40165e:	in     al,0xc8
  401660:	or     BYTE PTR [edi+0x62],0x29
  401664:	scas   al,BYTE PTR es:[edi]
  401665:	xchg   edx,eax
  401666:	(bad)  
  401667:	out    dx,eax
  401668:	dec    ebp
  401669:	js     0x4016cf
  40166b:	or     DWORD PTR [edx+0x1e],edx
  40166e:	xchg   ecx,eax
  40166f:	sub    cl,al
  401671:	in     eax,dx
  401672:	push   ebx
  401673:	int    0x74
  401675:	pmuludq mm0,mm5
  401678:	and    ah,BYTE PTR [edx-0x15f4cbcb]
  40167e:	push   0x912c8d04
  401683:	xor    dl,BYTE PTR [ebx]
  401685:	mov    BYTE PTR [eax+0x76cb43c6],ch
  40168b:	inc    ebp
  40168c:	repnz sahf 
  40168e:	aam    0x4a
  401690:	std    
  401691:	leave  
  401692:	call   0x8196:0x4c82af90
  401699:	clc    
  40169a:	dec    edx
  40169b:	enter  0x702f,0xae
  40169f:	add    al,cl
  4016a1:	lods   al,BYTE PTR ds:[esi]
  4016a2:	push   esp
  4016a3:	enter  0xd93,0x10
  4016a7:	out    dx,eax
  4016a8:	(bad)  
  4016aa:	daa    
  4016ab:	call   0x339f:0x98e4a899
  4016b2:	retf   
  4016b3:	push   eax
  4016b4:	test   BYTE PTR [eax],0x8a
  4016b7:	jecxz  0x401677
  4016b9:	ret    
  4016ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016bb:	push   eax
  4016bc:	in     eax,dx
  4016bd:	jae    0x4016ec
  4016bf:	dec    ecx
  4016c0:	out    0xdc,eax
  4016c2:	mov    ecx,?
  4016c4:	in     al,dx
  4016c5:	sub    BYTE PTR [ebx+0x73907657],dl
  4016cb:	and    cl,bh
  4016cd:	ficom  DWORD PTR es:[eax-0x449c61ff]
  4016d4:	shl    BYTE PTR [ebx],0xdf
  4016d7:	(bad)  
  4016d8:	aad    0x7e
  4016da:	jg     0x40171d
  4016dc:	or     eax,0x76e38d59
  4016e1:	out    dx,eax
  4016e2:	stc    
  4016e3:	jnp    0x4016f8
  4016e5:	xchg   DWORD PTR [eax-0x240f1590],edx
  4016eb:	lahf   
  4016ec:	jne    0x401740
  4016ee:	adc    BYTE PTR [ecx-0x60],dl
  4016f1:	jne    0x4016c9
  4016f3:	aad    0xb3
  4016f5:	or     ch,bh
  4016f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016f8:	mov    eax,ds:0xdec1aa1c
  4016fd:	xchg   BYTE PTR [esi+ebx*1-0x336dd388],dh
  401704:	ins    BYTE PTR es:[edi],dx
  401705:	dec    edi
  401706:	sbb    esp,esi
  401708:	xchg   edx,eax
  401709:	push   edx
  40170a:	push   cs
  40170b:	test   bl,dh
  40170d:	xor    BYTE PTR [esi*2+0x20e09a0f],al
  401714:	es xor al,0xa5
  401717:	or     cl,BYTE PTR [esi-0x59bf86ea]
  40171d:	jp     0x40172d
  40171f:	scas   eax,DWORD PTR es:[edi]
  401720:	aaa    
  401721:	jmp    0xc827988c
  401726:	punpckhdq mm3,mm3
  401729:	outs   dx,DWORD PTR ds:[esi]
  40172a:	les    edi,FWORD PTR [ebp-0x1d269154]
  401730:	jl     0x401768
  401732:	fild   DWORD PTR [esi+ebp*1]
  401735:	xor    DWORD PTR [ebp+0x58],ebp
  401738:	xor    al,0x42
  40173a:	pop    edi
  40173b:	rep ins BYTE PTR es:[edi],dx
  40173d:	(bad)  
  40173e:	shl    BYTE PTR [edi-0x3eee5c4d],0x8c
  401745:	xchg   ebp,eax
  401746:	clc    
  401747:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401748:	sbb    DWORD PTR [ebx],edx
  40174a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40174b:	pop    edi
  40174c:	shl    DWORD PTR [ecx-0x6c],1
  40174f:	in     eax,0x1e
  401751:	inc    esp
  401752:	xchg   esi,eax
  401753:	add    eax,0xc7a47f21
  401758:	sub    eax,0xc1093bfe
  40175d:	sub    DWORD PTR [esi+0x4423dcab],esi
  401763:	lahf   
  401764:	jbe    0x4016f8
  401766:	sub    BYTE PTR [ecx-0x7e],bh
  401769:	and    DWORD PTR [edi+ebp*8+0x14],edx
  40176d:	pop    esp
  40176e:	cs cld 
  401770:	retf   
  401771:	stos   BYTE PTR es:[edi],al
  401772:	(bad)  
  401774:	sbb    eax,0x9e3b1f37
  401779:	dec    al
  40177b:	jmp    0xd92d1c59
  401780:	push   esp
  401781:	hlt    
  401782:	sbb    esi,DWORD PTR [esi+0x1d]
  401785:	xchg   ebp,eax
  401786:	sub    al,0xa7
  401788:	rol    DWORD PTR [ecx+0x62bf7e28],0xf3
  40178f:	sub    DWORD PTR ds:0x3dde4d19,edx
  401795:	sbb    ch,BYTE PTR [edx]
  401797:	push   edx
  401798:	retf   
  401799:	fisubr WORD PTR [ecx-0x4d]
  40179c:	add    dh,0x24
  40179f:	dec    edx
  4017a0:	enter  0x1eea,0xd5
  4017a4:	cmp    bh,0xa2
  4017a7:	or     DWORD PTR [ebx+0x2cd4ca8d],eax
  4017ad:	stc    
  4017ae:	jle    0x4017ac
  4017b0:	fsubp  st(2),st
  4017b2:	into   
  4017b3:	sub    ebx,DWORD PTR [ecx+0x1c7d12ab]
  4017b9:	hlt    
  4017ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4017bb:	xchg   esi,eax
  4017bc:	repz stc 
  4017be:	leave  
  4017bf:	mov    esp,0xdbe518ee
  4017c4:	fmul   st(2),st
  4017c6:	add    eax,0x858c83ef
  4017cb:	xor    DWORD PTR [edi+0x5ac318cf],ebx
  4017d1:	cdq    
  4017d2:	push   ecx
  4017d3:	iret   
  4017d4:	xor    eax,0x3607a066
  4017d9:	pusha  
  4017da:	or     edi,edi
  4017dc:	and    bl,BYTE PTR es:[ebp-0x1b]
  4017e0:	adc    edx,0xffffffd3
  4017e3:	popa   
  4017e4:	arpl   WORD PTR [ecx-0x35ae0dfa],ax
  4017ea:	and    edx,ebp
  4017ec:	call   0xe95a6ac1
  4017f1:	lock icebp 
  4017f3:	(bad)  
  4017f4:	pop    ss
  4017f5:	and    BYTE PTR [ebp+esi*4-0x72],ch
  4017f9:	mov    esp,0xb966125f
  4017fe:	pop    edi
  4017ff:	and    edx,eax
  401801:	shl    BYTE PTR [edx+0x2c98ca8f],1
  401807:	(bad)  
  401808:	clc    
  401809:	fadd   DWORD PTR [eax+0x7e395d41]
  40180f:	(bad)  
  401810:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401811:	out    0xad,eax
  401813:	sbb    ch,al
  401815:	pusha  
  401816:	and    al,0x99
  401818:	out    dx,al
  401819:	fcomp  DWORD PTR [esi]
  40181b:	imul   ebx,DWORD PTR [eax-0x25],0xf
  40181f:	pop    esi
  401820:	inc    edi
  401821:	push   edx
  401822:	pop    ecx
  401823:	mov    eax,ds:0x604a1716
  401828:	into   
  401829:	xlat   BYTE PTR ds:[ebx]
  40182a:	pop    edx
  40182b:	retf   0x6949
  40182e:	pop    esi
  40182f:	hlt    
  401830:	pusha  
  401831:	xor    BYTE PTR [ecx-0x184c4709],cl
  401837:	mov    esi,0x7b7c8aa1
  40183c:	dec    edx
  40183d:	mov    ds,WORD PTR [ebp+0x55]
  401840:	sub    BYTE PTR [edx+0x3a2d870c],ah
  401846:	push   ss
  401847:	scas   eax,DWORD PTR es:[edi]
  401848:	and    eax,0xde9a046b
  40184d:	cmp    al,0x2a
  40184f:	sti    
  401850:	dec    eax
  401851:	xchg   esi,eax
  401852:	(bad)  
  401853:	dec    esp
  401854:	xor    al,0x77
  401856:	not    BYTE PTR [esi-0xb]
  401859:	mov    eax,ds:0x4f59555c
  40185e:	and    eax,0x72559318
  401863:	adc    al,BYTE PTR [eax-0x22b7a164]
  401869:	lds    ebx,FWORD PTR [edi+0x1a]
  40186c:	and    eax,0x252fb650
  401871:	sar    al,cl
  401873:	cmp    eax,0x887afcc8
  401878:	out    0x22,al
  40187a:	jb     0x40180c
  40187c:	xchg   ecx,eax
  40187d:	fnsave [esi]
  40187f:	leave  
  401880:	mov    al,BYTE PTR [edx+0x19]
  401883:	cmp    BYTE PTR [ebx-0x7b],bh
  401886:	or     eax,0x6eb86cff
  40188b:	dec    esi
  40188c:	jno    0x4018a2
  40188e:	inc    esp
  40188f:	mov    esi,0x9ccacff5
  401894:	out    dx,eax
  401895:	mov    eax,0xc8e6d35c
  40189a:	ds mov bh,0x8
  40189d:	jae    0x401881
  40189f:	std    
  4018a0:	cwde   
  4018a1:	cmp    eax,0x40e83aad
  4018a6:	push   0xa06d628f
  4018ab:	push   esi
  4018ac:	fistp  QWORD PTR [edx+0x2ea6fb8]
  4018b2:	and    ah,BYTE PTR [ebp-0x60427916]
  4018b8:	push   ds
  4018b9:	pop    edx
  4018ba:	mov    ebp,0x8cbf2cb8
  4018bf:	mov    esi,ecx
  4018c1:	cmp    BYTE PTR [eax+0x75db656f],bl
  4018c7:	cdq    
  4018c8:	scas   eax,DWORD PTR es:[edi]
  4018c9:	pushf  
  4018ca:	sub    bl,al
  4018cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4018cd:	fild   DWORD PTR [ebx+0x1ba9f5f5]
  4018d3:	shl    DWORD PTR [esi],0x9f
  4018d6:	sub    al,0x8d
  4018d8:	mov    esi,0x7d202437
  4018dd:	sub    dl,BYTE PTR [edi]
  4018df:	in     al,0x55
  4018e1:	xchg   edx,eax
  4018e2:	cmp    bl,BYTE PTR [edx-0x44]
  4018e5:	jno    0x3e9d9b45
  4018eb:	sub    edx,ecx
  4018ed:	mov    al,ds:0x3cbd16c1
  4018f2:	add    DWORD PTR [ebp+0x36],esp
  4018f5:	xor    BYTE PTR ss:[ecx],0x32
  4018f9:	pop    edi
  4018fa:	dec    eax
  4018fb:	out    dx,al
  4018fc:	repz js 0x40189c
  4018ff:	adc    BYTE PTR [ebx+0x25],bl
  401902:	ret    
  401903:	xchg   esi,eax
  401904:	sbb    ebp,esi
  401906:	loop   0x4018c0
  401908:	jmp    0x558c:0x655673d9
  40190f:	test   al,0xfb
  401911:	pop    es
  401912:	ja     0x4018ad
  401914:	stos   BYTE PTR es:[edi],al
  401915:	repnz cmp bh,BYTE PTR [esi-0xc]
  401919:	loopne 0x40193d
  40191b:	arpl   WORD PTR ds:0xc5a7e7cb,ax
  401921:	sub    DWORD PTR [ecx+0x3e76d674],ecx
  401927:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401928:	sbb    BYTE PTR [ebx-0x45],al
  40192b:	xlat   BYTE PTR ds:[ebx]
  40192c:	xchg   ebx,eax
  40192d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40192e:	inc    edx
  40192f:	out    dx,eax
  401930:	mov    al,0x65
  401932:	xor    DWORD PTR [eax],0x4e
  401935:	loop   0x4019ac
  401937:	imul   eax,DWORD PTR [eax+esi*4-0x16e7e7b3],0x71745519
  401942:	pop    eax
  401943:	cmp    BYTE PTR [ebx-0x42cc9eed],bl
  401949:	daa    
  40194a:	jbe    0x4019a4
  40194c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40194d:	es jg  0x401934
  401950:	or     al,0x1a
  401952:	or     dl,BYTE PTR [esi+0x38735e56]
  401958:	ret    0x79b7
  40195b:	adc    al,0x3f
  40195d:	xchg   ecx,eax
  40195e:	cli    
  40195f:	pop    edx
  401960:	mov    ds:0x3d6f492c,al
  401965:	mov    bh,0x9f
  401967:	mov    dl,0x24
  401969:	mov    ebx,0x458196f6
  40196e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40196f:	and    esi,DWORD PTR [eax+ecx*4-0x782de205]
  401976:	sub    esi,eax
  401978:	pop    esi
  401979:	sub    DWORD PTR [esi-0x72],ecx
  40197c:	jl     0x40199d
  40197e:	mov    bl,BYTE PTR [edx-0x3eecb7f7]
  401984:	jb     0x40198b
  401986:	add    dh,bl
  401988:	xor    al,cl
  40198a:	add    BYTE PTR [edx+esi*1],dl
  40198d:	aad    0x19
  40198f:	ror    BYTE PTR [eax],1
  401991:	and    eax,0x4ffe232f
  401996:	nop
  401997:	xor    bh,BYTE PTR [edi+0x7f]
  40199a:	xchg   esi,edi
  40199c:	loope  0x40198c
  40199e:	push   ebp
  40199f:	repz sub al,0x8f
  4019a2:	test   BYTE PTR [ebx],ah
  4019a4:	icebp  
  4019a5:	retf   
  4019a6:	and    dl,BYTE PTR [eax+esi*2]
  4019a9:	inc    ebp
  4019aa:	inc    esp
  4019ab:	jp     0x401a1d
  4019ad:	or     esp,DWORD PTR [edi]
  4019af:	ss push ss
  4019b1:	ins    DWORD PTR es:[edi],dx
  4019b2:	push   cs
  4019b3:	loop   0x401a15
  4019b5:	pop    edx
  4019b6:	mov    BYTE PTR [edx+0x69ef6502],0x19
  4019bd:	(bad)  
  4019be:	xchg   ecx,eax
  4019bf:	scas   al,BYTE PTR es:[edi]
  4019c0:	sti    
  4019c1:	fnstenv [ebx]
  4019c3:	cld    
  4019c4:	data16 add al,0x2a
  4019c7:	(bad)  
  4019c8:	(bad)  
  4019c9:	sub    bl,ah
  4019cb:	mov    ds:0x314c0769,al
  4019d0:	es cli 
  4019d2:	fstp   DWORD PTR [ebx]
  4019d4:	inc    edi
  4019d5:	or     DWORD PTR gs:[esi+0x5a],esp
  4019d9:	sbb    dl,BYTE PTR [ecx+0x7c]
  4019dc:	xchg   esp,eax
  4019dd:	and    al,BYTE PTR [edx+0x37]
  4019e0:	dec    eax
  4019e1:	cmp    DWORD PTR [esi+ecx*8+0x23],ecx
  4019e5:	shr    DWORD PTR [edx],0x57
  4019e8:	or     ebp,edx
  4019ea:	xchg   ebx,eax
  4019eb:	sub    esi,DWORD PTR [edx]
  4019ed:	jne    0x4019c9
  4019ef:	dec    ebx
  4019f0:	xchg   edi,eax
  4019f1:	pop    eax
  4019f2:	test   al,0x1a
  4019f4:	add    eax,0xb3ee4d6a
  4019f9:	xchg   DWORD PTR ds:0x2f389544,eax
  4019ff:	sbb    eax,0x4af8eaab
  401a04:	or     al,0x60
  401a06:	push   eax
  401a07:	push   ecx
  401a08:	sbb    BYTE PTR [ebx-0xeef844f],ch
  401a0e:	sub    DWORD PTR [ebp+0x6],0xe9e674a3
  401a15:	fnstenv [edx]
  401a17:	loope  0x4019b0
  401a19:	sbb    al,0x26
  401a1b:	jb     0x4019e9
  401a1d:	pop    esi
  401a1e:	stos   BYTE PTR es:[edi],al
  401a1f:	pop    edi
  401a20:	jnp    0x401a67
  401a22:	push   eax
  401a23:	xchg   esp,eax
  401a24:	nop
  401a25:	mov    dh,0x53
  401a27:	jne    0x4019e1
  401a29:	sub    eax,0x11fe1b21
  401a2e:	aaa    
  401a2f:	hlt    
  401a30:	loopne 0x401a7a
  401a32:	mov    esp,0xd5f670c9
  401a37:	pushf  
  401a38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a39:	pop    DWORD PTR [eax]
  401a3b:	js     0x401a7e
  401a3d:	or     DWORD PTR [esi-0x7d],eax
  401a40:	sti    
  401a41:	push   esi
  401a42:	push   edi
  401a43:	mov    es,WORD PTR fs:[edx]
  401a46:	push   es
  401a47:	mov    ch,0x21
  401a49:	sub    bl,0xdb
  401a4c:	inc    ecx
  401a4d:	xor    BYTE PTR [eax],ch
  401a4f:	push   0xffffff92
  401a51:	js     0x401abd
  401a53:	out    dx,eax
  401a54:	neg    DWORD PTR [edx]
  401a56:	adc    DWORD PTR [esi+0x4a],ebx
  401a59:	and    al,0x72
  401a5b:	xchg   ecx,eax
  401a5c:	push   0x81fd628f
  401a61:	add    eax,0x167a3a74
  401a66:	mov    ecx,0x6bd48e5d
  401a6b:	mov    ebp,0x223a638d
  401a70:	push   esi
  401a71:	pop    ecx
  401a72:	mov    ds:0x56abd308,eax
  401a77:	cmp    al,0x7
  401a79:	push   0xb4fef543
  401a7e:	xchg   BYTE PTR [edi+esi*2-0x1eff7948],bh
  401a85:	test   al,0x68
  401a87:	sbb    BYTE PTR [ebx-0x1a],0xc5
  401a8b:	mov    dl,0xe6
  401a8d:	cli    
  401a8e:	mov    al,0x3
  401a90:	dec    eax
  401a91:	addr16 int3 
  401a93:	or     eax,0x93e01b57
  401a98:	sbb    BYTE PTR [edi],0x18
  401a9b:	inc    ebx
  401a9c:	gs icebp 
  401a9e:	fdivr  st(2),st
  401aa0:	mul    BYTE PTR [esi+0x5d1fff62]
  401aa6:	push   ebx
  401aa7:	and    esi,DWORD PTR [ebp+0x9]
  401aaa:	and    al,0x34
  401aac:	ficom  DWORD PTR [edi+0x31]
  401aaf:	test   eax,0x41dcb357
  401ab4:	and    al,0xa
  401ab6:	push   0x6f
  401ab8:	pop    ds
  401ab9:	int3   
  401aba:	dec    edx
  401abb:	icebp  
  401abc:	call   0x55fde363
  401ac1:	sbb    eax,0x748a22d6
  401ac6:	js     0x401a50
  401ac8:	sub    bl,bh
  401aca:	push   edi
  401acb:	dec    ebp
  401acc:	sub    eax,0x12f31bde
  401ad1:	push   ds
  401ad2:	outs   dx,BYTE PTR ds:[esi]
  401ad3:	loope  0x401a96
  401ad5:	xchg   ecx,eax
  401ad6:	outs   dx,BYTE PTR ds:[esi]
  401ad7:	and    bh,BYTE PTR [edx]
  401ad9:	push   ecx
  401ada:	mov    ebx,0x46d246d2
  401adf:	cli    
  401ae0:	rcr    eax,cl
  401ae2:	sbb    eax,0x7f5d021f
  401ae7:	cli    
  401ae8:	mov    dh,0x59
  401aea:	fsub   QWORD PTR [edi-0x1e]
  401aed:	fwait
  401aee:	cwde   
  401aef:	inc    ebx
  401af0:	mov    ebx,0xb0cb1583
  401af5:	dec    esi
  401af6:	add    BYTE PTR [edx],dh
  401af8:	sbb    BYTE PTR [ebp+0x3155c7eb],ah
  401afe:	repz add bh,BYTE PTR [ebx+0xc3e1204]
  401b05:	or     esi,edi
  401b07:	push   0x71
  401b09:	call   0x5572:0x500f94e0
  401b10:	or     eax,0xf69d25bc
  401b15:	fbstp  TBYTE PTR [ebx+0x4b81c407]
  401b1b:	sbb    BYTE PTR fs:[edx+esi*4+0x32be1eb2],0x4a
  401b24:	fadd   DWORD PTR [eax]
  401b26:	inc    edi
  401b27:	jo     0x401ace
  401b29:	mov    ebx,0x25262e
  401b2e:	repz fsubr DWORD PTR [edx+edi*2]
  401b32:	jp     0x6bc9d77d
  401b38:	mov    WORD PTR [eax-0x34969c78],cs
  401b3e:	or     BYTE PTR [ebx],ah
  401b40:	mov    ch,0xf1
  401b42:	sbb    dh,BYTE PTR [esi-0x4920ece9]
  401b48:	lds    edi,FWORD PTR [ebp+edi*4-0x333ecbe8]
  401b4f:	pop    esp
  401b50:	mov    BYTE PTR [ebp+0x4b],ah
  401b53:	repnz mov ss,WORD PTR [ebx-0x4ebd014]
  401b5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b5b:	mov    esi,DWORD PTR [ecx-0x19e83a53]
  401b61:	cdq    
  401b62:	ins    BYTE PTR es:[edi],dx
  401b63:	lea    ebp,[ebx]
  401b65:	outs   dx,BYTE PTR ds:[esi]
  401b66:	sbb    al,0xe7
  401b68:	inc    eax
  401b69:	std    
  401b6a:	xchg   ebp,eax
  401b6b:	or     eax,DWORD PTR [esi+0x2e]
  401b6e:	(bad)  
  401b6f:	enter  0x8e3d,0x41
  401b73:	mov    ?,ecx
  401b75:	mov    edi,0x32715f79
  401b7a:	push   edi
  401b7b:	jg     0x401b0f
  401b7d:	sub    eax,0x6376d94
  401b82:	mov    ebx,0xfc328071
  401b87:	jns    0x401bbd
  401b89:	xchg   edi,eax
  401b8a:	enter  0x5db,0x97
  401b8e:	outs   dx,DWORD PTR ds:[esi]
  401b8f:	inc    eax
  401b90:	aaa    
  401b91:	mov    edx,DWORD PTR [esi-0x5d20801d]
  401b97:	out    0xb3,al
  401b99:	call   0x3eab13fc
  401b9e:	dec    ebx
  401b9f:	add    DWORD PTR [edi],edi
  401ba1:	ins    BYTE PTR es:[edi],dx
  401ba2:	and    BYTE PTR [ebp-0x13d2135],cl
  401ba8:	inc    edx
  401ba9:	fwait
  401baa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401bab:	int    0x45
  401bad:	loope  0x401bb6
  401baf:	sbb    eax,0xb261715e
  401bb4:	add    al,0xf1
  401bb6:	dec    ebp
  401bb7:	sbb    eax,0xb2dd5c17
  401bbc:	sub    BYTE PTR ds:0x64ec8262,dl
  401bc2:	pushf  
  401bc3:	mov    bl,0x41
  401bc5:	stc    
  401bc6:	sub    ch,BYTE PTR [ecx]
  401bc8:	or     ch,BYTE PTR [ebp-0x41be5fe1]
  401bce:	es test bh,dl
  401bd1:	adc    al,0x91
  401bd3:	xchg   edx,eax
  401bd4:	push   eax
  401bd5:	mov    ebp,0xded217be
  401bda:	(bad)  
  401bdc:	hlt    
  401bdd:	pushf  
  401bde:	dec    DWORD PTR [edi+0x35601904]
  401be4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401be5:	out    dx,al
  401be6:	into   
  401be7:	int    0x85
  401be9:	and    eax,0xb9169001
  401bee:	jne    0x401c5c
  401bf0:	push   cs
  401bf1:	je     0x401bc9
  401bf3:	call   0xc825:0xaa11e4c
  401bfa:	adc    BYTE PTR [ecx],bl
  401bfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401bfd:	ret    0x5890
  401c00:	jecxz  0x401bf3
  401c02:	popf   
  401c03:	out    0x8d,eax
  401c05:	and    BYTE PTR [ebx+esi*1-0x6a8ffa90],dh
  401c0c:	adc    eax,0x89bf519e
  401c11:	sar    BYTE PTR [esi],0xef
  401c14:	jmp    0x401bfb
  401c16:	jb     0x401c0a
  401c18:	je     0x401c88
  401c1a:	jg     0x401c45
  401c1c:	lea    ecx,[edi-0x7ba321c9]
  401c22:	sub    DWORD PTR [esi+0x68],esp
  401c25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c27:	clc    
  401c28:	jp     0x401c3a
  401c2a:	in     al,0x31
  401c2c:	add    al,0xbb
  401c2e:	push   ss
  401c2f:	xchg   BYTE PTR [esi+0x414faacb],dl
  401c35:	rcl    DWORD PTR [esi+edi*4+0x7c7db65c],cl
  401c3c:	cmp    DWORD PTR [ebp+0x5802b491],0x229e0a9e
  401c46:	or     ch,BYTE PTR [ebp+0x4fd4d9a6]
  401c4c:	lock ss xchg ecx,eax
  401c4f:	outs   dx,DWORD PTR ds:[esi]
  401c50:	xchg   edi,eax
  401c51:	xchg   ebx,eax
  401c52:	dec    DWORD PTR [edx+ecx*4-0x26]
  401c56:	test   eax,0x1dce814f
  401c5b:	rol    DWORD PTR [esi+0x43],cl
  401c5e:	mov    bh,0x8a
  401c60:	xchg   ebx,eax
  401c61:	mov    bl,cl
  401c63:	xchg   ebx,eax
  401c64:	int3   
  401c65:	(bad)  
  401c66:	jnp    0x401c4c
  401c68:	(bad)  
  401c69:	push   ds
  401c6a:	jnp    0x401c30
  401c6c:	cdq    
  401c6d:	xchg   ebp,eax
  401c6e:	ror    DWORD PTR [ebx+edi*4+0x27],cl
  401c72:	inc    ax
  401c74:	dec    eax
  401c75:	enter  0xd901,0x84
  401c79:	xor    BYTE PTR [edi],dl
  401c7b:	xchg   ebp,eax
  401c7c:	loop   0x401cdd
  401c7e:	and    al,0x5
  401c80:	test   al,0xf4
  401c82:	dec    edx
  401c83:	jle    0x401c09
  401c85:	mov    eax,ds:0xa1a20aba
  401c8a:	enterw 0x44ec,0xee
  401c8f:	fisub  DWORD PTR [ebp+0x52]
  401c92:	mov    edi,DWORD PTR [ecx-0x7b]
  401c95:	in     al,0xc6
  401c97:	pop    ebp
  401c98:	aaa    
  401c99:	xor    BYTE PTR [edx+ebx*4+0x4b],0x76
  401c9e:	fcomp  DWORD PTR [ebx+edx*4]
  401ca1:	pop    sp
  401ca3:	adc    al,0x31
  401ca5:	xchg   esi,ebx
  401ca7:	inc    edi
  401ca8:	(bad)  
  401ca9:	xchg   edi,eax
  401caa:	nop
  401cab:	push   0x6e
  401cad:	xchg   edx,eax
  401cae:	xor    BYTE PTR [eax],ah
  401cb0:	fistp  DWORD PTR [ebx-0x59]
  401cb3:	pop    ecx
  401cb4:	push   edx
  401cb5:	sub    BYTE PTR [edi-0x73f96e62],al
  401cbb:	out    0x8a,eax
  401cbd:	fisubr DWORD PTR [edx]
  401cbf:	mov    ds:0x375040d3,eax
  401cc4:	xor    ecx,DWORD PTR es:0x7e7e4bd4
  401ccb:	gs pop ecx
  401ccd:	bswap  eax
  401ccf:	das    
  401cd0:	loopne 0x401d07
  401cd2:	leave  
  401cd3:	jg     0x401d1d
  401cd5:	and    al,BYTE PTR [eax]
  401cd7:	and    ebp,DWORD PTR [esi+0x282cfa05]
  401cdd:	sub    eax,0x794870cf
  401ce2:	or     DWORD PTR [ecx+0x39],0x52
  401ce6:	out    dx,eax
  401ce7:	push   0xf237f2ae
  401cec:	pushf  
  401ced:	dec    esi
  401cee:	es out 0x8d,al
  401cf1:	sar    BYTE PTR [eax],cl
  401cf3:	test   eax,0xa20916bb
  401cf8:	sar    DWORD PTR [edx+edi*1],1
  401cfb:	xor    eax,DWORD PTR [edi-0x4b]
  401cfe:	cmp    eax,0xe31a34b3
  401d03:	dec    edx
  401d04:	test   al,0x1e
  401d06:	daa    
  401d07:	jmp    0xe86:0x5b404556
  401d0e:	sbb    al,ah
  401d10:	fnstsw WORD PTR [eax-0x3b]
  401d13:	jns    0x401cde
  401d15:	xor    ah,BYTE PTR [ecx+0x22bb7d89]
  401d1b:	mov    ds:0xc769ad6e,eax
  401d20:	mov    edi,0x8f8d237c
  401d25:	enter  0x2d2a,0xd7
  401d29:	lahf   
  401d2a:	or     ebx,esp
  401d2c:	xor    eax,DWORD PTR [edx+0x630d8fb1]
  401d32:	push   ds
  401d33:	cmp    al,0x50
  401d35:	jo     0x401cff
  401d37:	dec    edi
  401d38:	mov    eax,0xac260c42
  401d3d:	inc    ecx
  401d3e:	push   ss
  401d3f:	jb     0x401d8d
  401d41:	mov    ebp,0x21c0176a
  401d47:	pop    edx
  401d48:	ins    DWORD PTR es:[edi],dx
  401d49:	aaa    
  401d4a:	outs   dx,BYTE PTR ds:[esi]
  401d4b:	in     al,0x9f
  401d4d:	aam    0x9e
  401d4f:	sbb    bl,BYTE PTR [esi]
  401d51:	out    dx,eax
  401d52:	je     0x401cec
  401d54:	jmp    0x401d4b
  401d56:	mov    ah,0xba
  401d58:	retf   0x538c
  401d5b:	xchg   ecx,eax
  401d5c:	jne    0x401d40
  401d5e:	mov    ch,0x88
  401d60:	loope  0x401db6
  401d62:	xor    al,0xdb
  401d64:	imul   edx,DWORD PTR [ebx],0x6f880245
  401d6a:	and    ah,0x46
  401d6d:	add    eax,0x7c16dcde
  401d72:	aaa    
  401d73:	push   ebp
  401d74:	lods   eax,DWORD PTR ds:[esi]
  401d75:	outs   dx,BYTE PTR ds:[esi]
  401d76:	out    dx,eax
  401d77:	mov    al,ds:0x7f7f46a4
  401d7c:	pusha  
  401d7d:	sbb    DWORD PTR [edx-0x35],0xa4f76075
  401d84:	xchg   edx,eax
  401d85:	adc    ecx,edi
  401d87:	pushf  
  401d88:	call   0xb73f:0xe27ce95f
  401d8f:	lods   al,BYTE PTR ds:[esi]
  401d90:	test   DWORD PTR ds:0xcc7827d,eax
  401d96:	data16 sti 
  401d98:	imul   ebp,DWORD PTR [eax],0x3930888b
  401d9e:	jl     0x401d71
  401da0:	push   es
  401da1:	or     al,0xde
  401da3:	dec    ebx
  401da4:	dec    edx
  401da5:	repnz fst DWORD PTR [edx]
  401da8:	dec    edi
  401da9:	repnz int 0x8a
  401dac:	jmp    FWORD PTR [edi]
  401dae:	dec    esp
  401daf:	jne    0x401d5b
  401db1:	arpl   WORD PTR [edi],bx
  401db3:	mov    eax,ds:0x59146daa
  401db8:	mov    al,ds:0x2d9f9458
  401dbd:	(bad)  
  401dbe:	iret   
  401dbf:	repz pop ebx
  401dc1:	and    eax,0x7dcaa776
  401dc6:	and    DWORD PTR [eax+edi*4-0x3a5ef8a6],ebp
  401dcd:	scas   eax,DWORD PTR es:[edi]
  401dce:	or     BYTE PTR [eax-0x7c9ce764],bh
  401dd4:	sahf   
  401dd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401dd6:	push   ebx
  401dd7:	mov    eax,ds:0x2a05f54f
  401ddc:	ficom  DWORD PTR [edx+0x57aba13f]
  401de2:	xchg   ebp,eax
  401de3:	cmp    cl,ah
  401de5:	or     al,0xe8
  401de7:	stos   DWORD PTR es:[edi],eax
  401de8:	mov    ?,WORD PTR ss:[eax-0x2cb69ca3]
  401def:	dec    edx
  401df0:	jns    0x401e51
  401df2:	jb     0x401d7f
  401df4:	pop    ds
  401df5:	or     al,bl
  401df7:	out    dx,eax
  401df8:	adc    al,0xad
  401dfa:	inc    ebp
  401dfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401dfc:	scas   eax,DWORD PTR es:[edi]
  401dfd:	cmc    
  401dfe:	mov    eax,ds:0x47532ee3
  401e03:	pop    ebx
  401e04:	iret   
  401e05:	mov    dh,0xae
  401e07:	ret    0x55b8
  401e0a:	adc    ch,BYTE PTR [ebp-0x183d9165]
  401e10:	popa   
  401e11:	pushf  
  401e12:	shl    ebx,0x1e
  401e15:	or     edx,DWORD PTR [ecx]
  401e17:	loop   0x401e15
  401e19:	mov    bh,0xc2
  401e1b:	stos   DWORD PTR es:[edi],eax
  401e1c:	sbb    al,0x6b
  401e1e:	cli    
  401e1f:	stos   DWORD PTR es:[edi],eax
  401e20:	pushf  
  401e21:	and    ebx,0xd0d873ca
  401e27:	jne    0x401e0c
  401e29:	mov    ah,BYTE PTR ds:0x3654589d
  401e2f:	sub    BYTE PTR [ecx+0x6af8aaae],dh
  401e35:	clc    
  401e36:	in     eax,0x20
  401e38:	add    ebp,DWORD PTR [esi+edi*8]
  401e3b:	adc    al,0xf0
  401e3d:	mov    al,ds:0xf8043fed
  401e42:	xchg   ebp,edi
  401e44:	push   cs
  401e45:	call   0xe457:0xb43e7314
  401e4c:	or     al,0xdb
  401e4e:	mov    ch,0xe5
  401e51:	aas    
  401e52:	sbb    DWORD PTR [edx+0x55],esi
  401e55:	pop    esp
  401e56:	sub    al,0xc1
  401e58:	jne    0x401e73
  401e5a:	adc    bl,BYTE PTR [ecx-0x21]
  401e5d:	pop    ebx
  401e5e:	lods   al,BYTE PTR ds:[esi]
  401e5f:	cld    
  401e60:	mov    dh,0x30
  401e62:	ret    0x6d75
  401e65:	sbb    edx,esi
  401e67:	jo     0x401e30
  401e69:	sub    al,0x88
  401e6b:	ss daa 
  401e6d:	sbb    DWORD PTR [edx],esi
  401e6f:	jge    0x401ec8
  401e71:	push   esp
  401e72:	or     ebx,ecx
  401e74:	div    DWORD PTR [eax-0x70]
  401e77:	mul    BYTE PTR [edi+0x12049825]
  401e7d:	add    eax,0xa29af365
  401e82:	arpl   WORD PTR [edi],dx
  401e84:	push   cs
  401e85:	jae    0x401e6a
  401e87:	dec    ebp
  401e88:	ja     0x401ec7
  401e8a:	xor    ebx,DWORD PTR [ecx]
  401e8c:	pop    edi
  401e8d:	scas   al,BYTE PTR es:[edi]
  401e8e:	fild   DWORD PTR [ecx-0x68]
  401e91:	in     eax,dx
  401e92:	sbb    cl,0x97
  401e95:	and    ebx,DWORD PTR [ebx-0x32]
  401e98:	pushf  
  401e99:	inc    ebx
  401e9a:	es adc eax,0x37f4fd0d
  401ea0:	lea    edi,[ecx]
  401ea2:	mov    ds:0x99aba001,eax
  401ea7:	mov    esi,0x73718640
  401eac:	xchg   ecx,eax
  401ead:	mov    ah,BYTE PTR [edi-0x17812df6]
  401eb3:	jo     0x401eb6
  401eb5:	xchg   ebx,eax
  401eb6:	sub    edx,DWORD PTR [edx-0x262f756f]
  401ebc:	lds    eax,FWORD PTR [ebx-0x62]
  401ebf:	ja     0x401edb
  401ec1:	enter  0x3e9b,0xd2
  401ec5:	imul   ecx,DWORD PTR [edi],0x18
  401ec8:	adc    al,BYTE PTR [edi]
  401eca:	xchg   esp,eax
  401ecb:	mov    ecx,0x5c0eb6d2
  401ed0:	rol    ebp,1
  401ed2:	lods   al,BYTE PTR ds:[esi]
  401ed3:	mov    ds:0x985d3062,eax
  401ed8:	adc    eax,0x20fc786
  401edd:	cs jo  0x401f07
  401ee0:	push   ss
  401ee1:	adc    cl,BYTE PTR [ebx]
  401ee3:	std    
  401ee4:	in     eax,dx
  401ee5:	(bad)  
  401ee6:	aam    0xc5
  401ee8:	fst    QWORD PTR [ecx]
  401eea:	mov    al,BYTE PTR [ebp+eax*8+0x23dbaa37]
  401ef1:	and    BYTE PTR [ecx+0x20],0xbb
  401ef5:	test   eax,0x3cf15b3e
  401efa:	(bad)  
  401efb:	call   0xb54ec372
  401f00:	cmp    al,0xd2
  401f02:	les    ebp,FWORD PTR [esi+0x2f]
  401f05:	inc    ecx
  401f06:	cli    
  401f07:	cwde   
  401f08:	retf   
  401f09:	mov    dh,0x89
  401f0b:	or     BYTE PTR [esi],bh
  401f0d:	xor    bl,BYTE PTR cs:0x8d90517e
  401f14:	int    0x42
  401f16:	test   eax,0x3c365b8c
  401f1b:	dec    edx
  401f1c:	stc    
  401f1d:	push   ss
  401f1e:	es push ds
  401f20:	adc    dh,BYTE PTR [eax-0x26]
  401f23:	ss sub al,0x81
  401f26:	in     eax,0xe0
  401f28:	cdq    
  401f29:	add    DWORD PTR [edx],ebx
  401f2b:	aas    
  401f2c:	xchg   edx,eax
  401f2d:	add    eax,0xb0b52508
  401f32:	leave  
  401f33:	or     eax,ebp
  401f35:	xor    cl,bh
  401f37:	fbstp  TBYTE PTR [esi-0x66b842a3]
  401f3d:	cwde   
  401f3e:	(bad)  
  401f3f:	bound  edx,QWORD PTR [edi-0x36611421]
  401f45:	lods   eax,DWORD PTR ds:[esi]
  401f46:	stos   DWORD PTR es:[edi],eax
  401f47:	nop
  401f48:	aad    0x7
  401f4a:	jo     0x401ef7
  401f4c:	push   edx
  401f4d:	pop    edx
  401f4e:	popa   
  401f4f:	out    0xed,eax
  401f51:	sbb    eax,0x8dbac792
  401f56:	adc    eax,0x17ea0edf
  401f5b:	adc    BYTE PTR [esi-0x2a],0x12
  401f5f:	xor    eax,ecx
  401f61:	mov    edx,0x6f8f3a1d
  401f66:	mov    ds:0xc8bbe94b,al
  401f6b:	xchg   edx,eax
  401f6c:	test   eax,0x75d2e609
  401f71:	popf   
  401f72:	je     0x401fa0
  401f74:	ins    BYTE PTR es:[edi],dx
  401f75:	in     al,dx
  401f76:	inc    ebp
  401f77:	mov    eax,ds:0x21814106
  401f7c:	fdiv   st,st(7)
  401f7e:	out    0xf0,al
  401f80:	fisttp QWORD PTR [ebx]
  401f82:	dec    esp
  401f83:	sbb    BYTE PTR [ecx+0x75f50c04],cl
  401f89:	xchg   edx,eax
  401f8a:	out    dx,al
  401f8b:	dec    esp
  401f8c:	stos   BYTE PTR es:[edi],al
  401f8d:	mov    edi,0xdcb8e702
  401f92:	adc    BYTE PTR [edi-0x139b215b],cl
  401f98:	ret    0xb1f9
  401f9b:	aas    
  401f9c:	daa    
  401f9d:	lods   al,BYTE PTR ds:[esi]
  401f9e:	jl     0x401fcc
  401fa0:	mov    edx,0x8ab6118a
  401fa5:	sub    ch,BYTE PTR [eax+0x4f4af422]
  401fab:	shl    ah,1
  401fad:	data16 or bl,BYTE PTR [edx]
  401fb0:	(bad)  
  401fb1:	cs push 0x3a
  401fb4:	sbb    eax,0x5cbcf113
  401fb9:	hlt    
  401fba:	push   0x33
  401fbc:	ds call 0x45fb4f5f
  401fc2:	pop    ebx
  401fc3:	pop    ecx
  401fc4:	pop    ds
  401fc5:	and    BYTE PTR [ecx+edx*1-0x52323ec0],0xdf
  401fcd:	jecxz  0x401fa8
  401fcf:	push   cs
  401fd0:	push   edi
  401fd1:	(bad)  
  401fd2:	in     al,0xb1
  401fd4:	pop    ss
  401fd5:	or     edx,ebp
  401fd7:	push   es
  401fd8:	push   es
  401fd9:	push   ebp
  401fda:	xchg   ecx,eax
  401fdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401fdc:	jnp    0x401f64
  401fde:	out    0x48,eax
  401fe0:	and    ebp,edi
  401fe2:	ins    BYTE PTR es:[edi],dx
  401fe3:	push   eax
  401fe4:	push   0x618de688
  401fe9:	jecxz  0x402006
  401feb:	js     0x401f87
  401fed:	dec    eax
  401fee:	push   eax
  401fef:	ss add al,0xd
  401ff2:	inc    ebp
  401ff3:	daa    
  401ff4:	out    0x4f,eax
  401ff6:	je     0x402059
  401ff8:	adc    DWORD PTR [ebx+0x454fdf42],edi
  401ffe:	pop    edx
  401fff:	and    edi,DWORD PTR [eax+0x44]
  402002:	aaa    
  402003:	test   al,0x5c
  402005:	out    dx,al
  402006:	jbe    0x401fc2
  402008:	adc    ebx,DWORD PTR ds:0x84da081
  40200e:	shl    BYTE PTR [esi+0x3b],cl
  402011:	fwait
  402012:	xor    al,0xa5
  402014:	xor    BYTE PTR [edx+0x2c05cdde],ch
  40201a:	(bad)  
  40201b:	out    dx,al
  40201c:	sbb    al,0xb3
  40201e:	dec    ebx
  40201f:	call   0x23e0:0x360ee799
  402026:	mov    dl,0xb2
  402028:	les    esp,FWORD PTR [ebx-0x76]
  40202b:	mov    cl,0x21
  40202d:	fisubr WORD PTR [ecx+0x66d2f222]
  402033:	cmp    DWORD PTR [edi],eax
  402035:	out    dx,eax
  402036:	mov    WORD PTR [ebx],ds
  402038:	cwde   
  402039:	addr16 (bad) 
  40203b:	pop    esp
  40203c:	out    0x24,eax
  40203e:	fsubr  DWORD PTR [edi+eiz*2]
  402041:	sbb    ecx,esp
  402043:	xchg   ecx,esi
  402045:	adc    al,0x37
  402047:	and    ecx,DWORD PTR [ebx]
  402049:	dec    esi
  40204a:	dec    eax
  40204b:	test   eax,0xd57aa9d3
  402050:	enter  0x15dc,0x64
  402054:	mov    eax,ds:0xc09410b1
  402059:	ret    
  40205a:	lds    ecx,FWORD PTR [esi-0x52]
  40205d:	in     al,0x9
  40205f:	and    ebp,DWORD PTR [ebx+0x5ef803e5]
  402065:	ror    ebp,1
  402067:	cmp    BYTE PTR [eax+0x48],al
  40206a:	cmp    DWORD PTR [edx+eiz*2],esi
  40206d:	clc    
  40206e:	call   0xbc89:0xefc0b493
  402075:	jp     0x402032
  402077:	mov    eax,ds:0x7f0ab6cd
  40207c:	repz aad 0x6d
  40207f:	cmp    BYTE PTR [edx-0x2],0x6d
  402083:	sbb    DWORD PTR [eax+0x27c5fc52],ebx
  402089:	popa   
  40208a:	(bad)  
  40208b:	imul   edx,DWORD PTR [edx+0x0],0x38
  40208f:	jne    0x4020f1
  402091:	cmp    DWORD PTR [ebp+0x46],ebp
  402094:	jmp    0x7ff5:0xb43fa44a
  40209b:	shl    BYTE PTR [ebx],cl
  40209d:	in     eax,dx
  40209e:	(bad)  
  40209f:	cs das 
  4020a1:	div    BYTE PTR [esi]
  4020a3:	test   esi,esp
  4020a5:	les    ecx,FWORD PTR [edx+0x6cb20fc9]
  4020ab:	xlat   BYTE PTR ds:[ebx]
  4020ac:	sub    al,0x19
  4020ae:	lds    edx,FWORD PTR [edi-0x51]
  4020b1:	lds    ebx,FWORD PTR [esi-0x35b2bf90]
  4020b7:	test   dh,dh
  4020b9:	sbb    eax,0xe8104d6e
  4020be:	hlt    
  4020bf:	js     0x4020ce
  4020c1:	iret   
  4020c2:	fs cwde 
  4020c4:	mov    eax,0x790b552a
  4020c9:	pop    es
  4020ca:	iret   
  4020cb:	mov    esp,0xa28aae0
  4020d0:	or     eax,0x72ab7a5d
  4020d5:	call   0xe936c17d
  4020da:	mov    ebp,0xcf9b9c22
  4020df:	retf   
  4020e0:	sar    BYTE PTR [edi-0x6a0875b6],cl
  4020e6:	rcr    BYTE PTR [ecx+0x51db5091],0xd
  4020ed:	jmp    0x4020d3
  4020ef:	lea    edx,[esi+0x48487e7f]
  4020f5:	jl     0x4020a4
  4020f7:	cmp    DWORD PTR [eax],0x6d
  4020fa:	and    eax,esp
  4020fc:	pop    esp
  4020fd:	or     bh,BYTE PTR [eax-0x48042e24]
  402103:	mov    bh,0x9
  402105:	sub    bl,cl
  402107:	jmp    0x5e99:0x757dddc5
  40210e:	pop    ss
  40210f:	scas   al,BYTE PTR es:[edi]
  402110:	dec    esp
  402111:	inc    ebx
  402112:	mov    al,0x9f
  402114:	mov    dl,BYTE PTR gs:[ebx-0x4f0bdcd7]
  40211b:	sbb    al,0x75
  40211d:	jecxz  0x402113
  40211f:	sub    ch,ah
  402121:	jne    0x40216d
  402123:	mul    BYTE PTR [edx]
  402125:	xchg   edi,eax
  402126:	and    al,0x79
  402128:	mov    dl,0xcb
  40212a:	sbb    al,0x7b
  40212c:	cmp    al,0xf4
  40212e:	mov    ah,0xab
  402130:	xor    cl,BYTE PTR [eax+eax*1]
  402133:	leave  
  402134:	ds aaa 
  402136:	push   es
  402137:	je     0x402195
  402139:	shl    DWORD PTR [ecx],1
  40213b:	popf   
  40213c:	lods   al,BYTE PTR ds:[esi]
  40213d:	out    0xf8,al
  40213f:	dec    eax
  402140:	sub    bl,BYTE PTR [esi-0x26f5915e]
  402146:	jl     0x402188
  402148:	adc    edx,0x60139b1f
  40214e:	mov    cl,0xb7
  402150:	fs aaa 
  402152:	sbb    ch,ch
  402154:	bsr    edi,DWORD PTR [edx]
  402157:	sub    DWORD PTR [esi-0xfb41fac],edx
  40215d:	xchg   dx,ax
  40215f:	sub    BYTE PTR [edi],al
  402161:	cmp    eax,0xa2180f0c
  402166:	xor    DWORD PTR [edi+0x4367bf68],0x36
  40216d:	adc    DWORD PTR [esi],0xf2bd7fed
  402173:	dec    esp
  402174:	push   edi
  402175:	popf   
  402176:	fnstcw WORD PTR [ecx]
  402178:	pop    edi
  402179:	ret    
  40217a:	test   al,0xa9
  40217c:	adc    edx,0xffffff9a
  40217f:	mov    ah,0x1b
  402181:	in     al,0x14
  402183:	(bad)  
  402184:	pop    edi
  402185:	sub    esi,esi
  402187:	popf   
  402188:	loope  0x40211a
  40218a:	pop    edx
  40218b:	mov    al,ds:0x53a50504
  402190:	push   0xa6df7639
  402195:	add    eax,0xc3e033d1
  40219a:	inc    esp
  40219b:	jmp    0x4ad2:0xf62e72d2
  4021a2:	cmp    cl,dh
  4021a4:	sbb    BYTE PTR [edi-0x5a7312eb],bh
  4021aa:	div    DWORD PTR [ecx+0x79bfab01]
  4021b0:	aam    0x28
  4021b2:	jbe    0x40214f
  4021b4:	push   0xffffff9e
  4021b6:	add    DWORD PTR [eax],eax
  4021b8:	test   BYTE PTR [edi+0x36],al
  4021bb:	mov    dl,0xc5
  4021bd:	inc    ecx
  4021be:	add    cl,bl
  4021c0:	mov    eax,es
  4021c2:	push   eax
  4021c3:	mov    ebx,0xd5f439d4
  4021c8:	or     esi,DWORD PTR [esi-0x2e]
  4021cb:	jecxz  0x40218a
  4021cd:	dec    esp
  4021ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021cf:	mov    edi,0x2f31feb9
  4021d4:	pusha  
  4021d5:	mov    bl,0x9
  4021d7:	(bad)  
  4021d9:	push   esi
  4021da:	inc    esp
  4021db:	pushf  
  4021dc:	int3   
  4021dd:	sbb    esp,0x34
  4021e0:	lods   eax,DWORD PTR ds:[esi]
  4021e1:	xor    dl,al
  4021e3:	leave  
  4021e4:	mov    bl,al
  4021e6:	lds    edi,FWORD PTR [edi+0x6]
  4021e9:	loopne 0x4021b4
  4021eb:	mov    cl,0x2
  4021ed:	scas   al,BYTE PTR es:[edi]
  4021ee:	call   0x3e1a:0x39265d06
  4021f5:	push   ecx
  4021f6:	add    DWORD PTR [edi+0x377b764d],ebx
  4021fc:	aaa    
  4021fd:	test   al,0xa0
  4021ff:	repnz xor BYTE PTR [ebx],0xbd
  402203:	fild   WORD PTR [eax-0x3c2015a7]
  402209:	dec    edi
  40220a:	shl    esi,0x3a
  40220d:	xchg   ecx,eax
  40220e:	lods   eax,DWORD PTR ds:[esi]
  40220f:	add    edi,DWORD PTR ds:0x5d247f70
  402215:	ds out dx,eax
  402217:	mov    bh,0xa9
  402219:	or     DWORD PTR [esi+0x389a7e4f],edx
  40221f:	mov    cs,WORD PTR [ecx+0x2c04d93c]
  402225:	and    eax,0x266908e5
  40222a:	fisttp QWORD PTR [eax+eiz*4-0x4d]
  40222e:	xchg   BYTE PTR [ebp-0x4e],ch
  402231:	jno    0x402207
  402233:	jle    0x4021bf
  402235:	mov    eax,ds:0x82f93083
  40223a:	arpl   WORD PTR [ebx-0x72],di
  40223d:	xor    ah,BYTE PTR [ebp+0x5a86eec]
  402243:	not    DWORD PTR [edx+edi*8+0x658e8015]
  40224a:	add    ebp,0xf
  40224d:	mov    ebp,0x9fe227f7
  402252:	jg     0x402222
  402254:	shl    BYTE PTR [edx+0x354f1ef8],0x68
  40225b:	int    0x4b
  40225d:	in     eax,0x28
  40225f:	in     al,dx
  402260:	fstp   DWORD PTR [ebx+0x13]
  402263:	pushf  
  402264:	push   es
  402265:	sub    dl,BYTE PTR [ecx+0x1301679d]
  40226b:	xor    cl,BYTE PTR [ebp+0x4a]
  40226e:	mov    esi,0x707654d9
  402273:	div    DWORD PTR [ecx+0x10]
  402276:	push   edx
  402277:	mov    fs,WORD PTR [ebx+0x35]
  40227a:	push   ebp
  40227b:	inc    esi
  40227c:	add    BYTE PTR [ebx-0x4d],ch
  40227f:	rol    DWORD PTR [ebp+0x5a630ab1],cl
  402285:	push   edx
  402286:	sbb    ebx,DWORD PTR [ebx+0x1b]
  402289:	call   0x175b:0x49a00045
  402290:	clc    
  402291:	loope  0x402277
  402293:	mov    ds,WORD PTR [edx]
  402295:	repz cli 
  402297:	leave  
  402298:	sbb    BYTE PTR [edx+edx*4-0x7a],al
  40229c:	jns    0x402228
  40229e:	iret   
  40229f:	sub    eax,0x93b659a3
  4022a4:	pop    edx
  4022a5:	push   es
  4022a6:	or     ah,BYTE PTR [edi]
  4022a8:	dec    edx
  4022a9:	lods   eax,DWORD PTR ds:[esi]
  4022aa:	push   0xf
  4022ac:	dec    esi
  4022ad:	inc    sp
  4022af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022b0:	mov    al,0x59
  4022b2:	ins    DWORD PTR es:[edi],dx
  4022b3:	pushf  
  4022b4:	pop    edx
  4022b5:	repnz xor al,0x5e
  4022b8:	cld    
  4022b9:	add    edx,esi
  4022bb:	int    0x1b
  4022bd:	mov    al,ds:0x6c6c96a7
  4022c2:	std    
  4022c3:	xor    eax,0xcbf77f2f
  4022c8:	mov    ds:0x58b65409,eax
  4022cd:	mov    esp,0x20f9f011
  4022d2:	pusha  
  4022d3:	imul   ebx,DWORD PTR [esi],0xa03bd40f
  4022d9:	pop    edi
  4022da:	scas   eax,DWORD PTR es:[edi]
  4022db:	es pusha 
  4022dd:	test   al,0x7f
  4022df:	ror    ecx,0xec
  4022e2:	lea    esi,ds:0xbd63404e
  4022e8:	or     eax,0xce455ebe
  4022ed:	pop    ebx
  4022ee:	push   ss
  4022ef:	test   eax,0xb48abf04
  4022f4:	shl    esp,1
  4022f6:	mov    esp,0x9af2326
  4022fb:	out    dx,eax
  4022fc:	jg     0x4022e5
  4022fe:	outs   dx,DWORD PTR ds:[esi]
  4022ff:	mov    eax,0x2d5dcc9a
  402304:	dec    esp
  402305:	adc    al,0xa9
  402307:	sub    eax,esp
  402309:	adc    cl,0x72
  40230c:	sub    BYTE PTR [edi],0x2
  40230f:	add    ch,BYTE PTR [ebp-0x1d3dbdb]
  402315:	das    
  402316:	pusha  
  402317:	mov    ecx,0x51e4438a
  40231c:	scas   al,BYTE PTR es:[edi]
  40231d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40231e:	rcr    BYTE PTR [eax+0x1b13b156],1
  402324:	mov    eax,0x8826a90b
  402329:	cmp    esi,edx
  40232b:	mov    bh,bh
  40232d:	mov    bh,0x44
  40232f:	pop    esp
  402330:	gs mov dh,0x9d
  402333:	pop    ebp
  402334:	xor    BYTE PTR [eax-0x4a],0x23
  402338:	mov    cl,0xc8
  40233a:	fcmovb st,st(6)
  40233c:	call   0xf71bb518
  402341:	mov    ch,0x79
  402343:	dec    edi
  402344:	aad    0xc1
  402346:	adc    eax,0xcf0d40ee
  40234b:	cmp    eax,0xb04b6750
  402350:	lock xchg BYTE PTR [edi],cl
  402353:	cmp    edx,DWORD PTR [ecx]
  402355:	xor    BYTE PTR [ecx+ecx*1+0x56],ch
  402359:	sar    BYTE PTR [eax-0x48405955],1
  40235f:	out    dx,al
  402360:	xchg   edi,eax
  402361:	hlt    
  402362:	clc    
  402363:	cwde   
  402364:	fnstsw WORD PTR [edx-0x4925a334]
  40236a:	mov    ecx,0xb7f4cf4
  40236f:	test   al,0x3b
  402371:	push   ds
  402372:	mov    edx,0xdc0ad939
  402377:	fucom  st(2)
  402379:	ret    0xaa18
  40237c:	sti    
  40237d:	std    
  40237e:	xor    eax,0xd8292ac3
  402383:	inc    ebx
  402384:	clc    
  402385:	inc    esp
  402386:	in     al,0xb
  402388:	jno    0x4023e8
  40238a:	add    DWORD PTR [eax],0x3adce59d
  402390:	jle    0x4023ec
  402392:	test   cl,dh
  402394:	in     al,0x7d
  402396:	icebp  
  402397:	pop    eax
  402398:	xor    ah,cl
  40239a:	in     eax,dx
  40239b:	lock arpl WORD PTR [ebp+0x52085a19],sp
  4023a2:	and    eax,0x8aa0e3f
  4023a7:	inc    edi
  4023a8:	pop    esp
  4023a9:	ss sub eax,ecx
  4023ac:	leave  
  4023ad:	dec    esi
  4023ae:	sbb    dl,ch
  4023b0:	in     eax,0xc2
  4023b2:	add    DWORD PTR [edi],esp
  4023b4:	(bad)
  4023b7:	or     al,0x28
  4023b9:	mov    cl,0xb8
  4023bb:	fstp   QWORD PTR [edi-0x70ccd615]
  4023c1:	cld    
  4023c2:	add    DWORD PTR [ecx-0x4b3d481],0xffffff86
  4023c9:	es jns 0x402442
  4023cc:	xor    al,0x74
  4023ce:	or     eax,0x65659488
  4023d3:	jno    0x402359
  4023d5:	or     edi,DWORD PTR [ecx]
  4023d7:	inc    ecx
  4023d8:	push   ds
  4023d9:	dec    esi
  4023da:	aad    0x6
  4023dc:	cdq    
  4023dd:	and    BYTE PTR [ebx+0x143e2c0c],al
  4023e3:	push   0x8b33a4ca
  4023e8:	loopne 0x4023e0
  4023ea:	xor    ecx,DWORD PTR [edx+0x1e]
  4023ed:	push   eax
  4023ee:	cs es jb 0x402420
  4023f2:	je     0x4023c0
  4023f4:	add    BYTE PTR [edi],ch
  4023f6:	push   ebp
  4023f7:	push   es
  4023f8:	jp     0x4023af
  4023fa:	mov    al,0x86
  4023fc:	pop    ebp
  4023fd:	mov    BYTE PTR [eax],0x8e
  402400:	je     0x40238c
  402402:	jb     0x4023b4
  402404:	out    0x40,al
  402406:	pop    ss
  402407:	pop    eax
  402408:	pop    edx
  402409:	sub    eax,0x9bca322b
  40240e:	sub    ah,BYTE PTR [esi+eiz*8]
  402411:	daa    
  402412:	sub    al,0xf9
  402414:	je     0x402480
  402416:	ror    BYTE PTR [ebp-0x7e],1
  402419:	fmul   st,st(5)
  40241b:	retf   0xc875
  40241e:	shr    BYTE PTR [eax-0x78],cl
  402421:	repz cmp DWORD PTR [ebp-0x3f],ebp
  402425:	outs   dx,BYTE PTR ds:[esi]
  402426:	mov    ?,WORD PTR [ecx+0x42]
  402429:	lods   eax,DWORD PTR ds:[esi]
  40242a:	push   esp
  40242b:	cmp    eax,0x8fc091dd
  402430:	dec    ecx
  402431:	test   eax,0x65c0787e
  402436:	in     eax,0x34
  402438:	jnp    0x402405
  40243a:	inc    eax
  40243b:	pop    eax
  40243c:	bound  ecx,QWORD PTR [edi-0x11742994]
  402442:	popa   
  402443:	bound  esi,QWORD PTR [ecx-0x1a4790b2]
  402449:	call   FWORD PTR [ecx*1+0x69abf57d]
  402450:	out    dx,eax
  402451:	mov    ebx,0xf23aeac5
  402456:	xchg   ecx,eax
  402457:	ret    
  402458:	out    0x1c,eax
  40245a:	lock rcl BYTE PTR [ebp+0x6d],0x8
  40245f:	jp     0x4024c6
  402461:	ror    edx,cl
  402463:	sbb    bh,BYTE PTR [ebx]
  402465:	dec    edx
  402466:	or     ebp,DWORD PTR [ebp+0x7544d9ec]
  40246c:	mov    ecx,0xa567c649
  402471:	pushf  
  402472:	popa   
  402473:	(bad)  
  402474:	push   ebx
  402475:	(bad)  
  402477:	enter  0x314a,0xaf
  40247b:	xchg   ebp,eax
  40247c:	jl     0x4024f3
  40247e:	inc    edx
  40247f:	rol    DWORD PTR [ebp+0x68558767],cl
  402485:	xor    al,0xa4
  402487:	stos   BYTE PTR es:[edi],al
  402488:	jp     0x40243b
  40248a:	jo     0x402461
  40248c:	or     eax,0xae2e293e
  402491:	dec    edi
  402492:	xchg   ecx,eax
  402493:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402494:	adc    DWORD PTR [ebp+0x48],esp
  402497:	pop    esi
  402498:	aam    0xa1
  40249a:	jg     0x4024d4
  40249c:	adc    BYTE PTR [eax+ebx*2-0x13],0xae
  4024a1:	mov    edi,0x56bf98fc
  4024a6:	test   eax,0xbb017a7e
  4024ab:	mov    esp,0x6d544204
  4024b0:	jo     0x402465
  4024b2:	jnp    0x4024ba
  4024b4:	jg     0x402522
  4024b6:	fcomp  QWORD PTR [ebp+edi*2+0x494b135b]
  4024bd:	iret   
  4024be:	sub    DWORD PTR [ecx-0x7fc50e05],esp
  4024c4:	mov    bh,0xa5
  4024c6:	test   eax,0xae119e50
  4024cb:	jg     0x4024cc
  4024cd:	dec    edi
  4024ce:	cmp    DWORD PTR [edx+edx*1],edx
  4024d1:	(bad)  
  4024d2:	hlt    
  4024d3:	out    0xd0,al
  4024d5:	js     0x402548
  4024d7:	aad    0xc9
  4024d9:	xchg   esi,eax
  4024da:	jmp    0x5ba:0x43a33f3
  4024e1:	xchg   edx,eax
  4024e2:	xchg   ecx,eax
  4024e3:	mov    BYTE PTR [ecx],ch
  4024e5:	push   es
  4024e6:	dec    ebp
  4024e7:	mov    esi,0xbb8d5d06
  4024ec:	dec    ecx
  4024ed:	fs push edx
  4024ef:	stos   DWORD PTR es:[edi],eax
  4024f0:	dec    edx
  4024f1:	xor    eax,0xbb7daf06
  4024f6:	xchg   ebp,eax
  4024f7:	cmp    BYTE PTR [edx+0x13b063d5],ah
  4024fd:	cs pop esp
  4024ff:	test   eax,0x8685881e
  402504:	push   esp
  402505:	pop    ds
  402506:	test   DWORD PTR [esi+0x709e5e07],ecx
  40250c:	adc    BYTE PTR gs:[ebp+0x44],cl
  402510:	jecxz  0x402579
  402512:	jne    0x4024fb
  402514:	hlt    
  402515:	iret   
  402516:	add    eax,0xf0c6f2b
  40251b:	jle    0x402524
  40251d:	gs jle 0x40252a
  402520:	add    edx,DWORD PTR [ecx-0x7c]
  402523:	arpl   WORD PTR [edx-0x26],cx
  402526:	xor    bh,BYTE PTR [edi-0x52]
  402529:	nop
  40252a:	and    ecx,DWORD PTR [esi+ecx*1-0x14]
  40252e:	aam    0xee
  402530:	push   ds
  402531:	cwde   
  402532:	loop   0x402550
  402534:	cmp    eax,0x4e181e4
  402539:	in     eax,dx
  40253a:	lods   al,BYTE PTR ds:[esi]
  40253b:	retf   
  40253c:	rcr    BYTE PTR [edx],cl
  40253e:	sti    
  40253f:	xchg   esi,eax
  402540:	cmp    eax,0xb05a7623
  402545:	add    al,0xfe
  402547:	fstp   TBYTE PTR [ebx-0x5912bdca]
  40254d:	mov    dl,bl
  40254f:	sbb    esi,DWORD PTR [edi-0x68]
  402552:	nop
  402553:	data16 mov ds:0x8f200ddb,al
  402559:	push   eax
  40255a:	repz dec eax
  40255c:	and    al,BYTE PTR [ebp+0x1b]
  40255f:	test   DWORD PTR [ebx-0x3f1b4dcf],esi
  402565:	shl    DWORD PTR es:[ecx],cl
  402568:	pop    eax
  402569:	out    0x93,al
  40256b:	or     BYTE PTR [ebp-0x2b9c480d],bl
  402571:	addr16 (bad) 
  402573:	ds push ebp
  402575:	dec    ebp
  402576:	loopne 0x402547
  402578:	xchg   ebx,eax
  402579:	ret    
  40257a:	fprem1 
  40257c:	scas   eax,DWORD PTR es:[edi]
  40257d:	mov    WORD PTR [ebp+0x5e],es
  402580:	mov    ds:0x84f0955a,al
  402585:	fst    DWORD PTR [edi-0x6d4ad668]
  40258b:	dec    eax
  40258c:	in     eax,0x0
  40258e:	and    DWORD PTR [ecx-0x2e1e9b84],edi
  402594:	mov    ds:0xd4fe7f50,al
  402599:	add    al,0x11
  40259b:	enter  0xce32,0x93
  40259f:	into   
  4025a0:	fabs   
  4025a2:	mov    bl,0x1b
  4025a4:	mov    edi,DWORD PTR [ecx+esi*1-0x6c]
  4025a8:	sti    
  4025a9:	mov    ebp,0xe63e4e3c
  4025ae:	dec    eax
  4025af:	sti    
  4025b0:	loop   0x40262b
  4025b2:	pop    ds
  4025b3:	scas   eax,DWORD PTR es:[edi]
  4025b4:	not    eax
  4025b6:	aad    0xee
  4025b8:	mov    WORD PTR [ecx],cs
  4025ba:	jmp    0x6ce0:0xbec0f572
  4025c1:	popf   
  4025c2:	mov    eax,ds:0xd962df2
  4025c7:	call   0x7895:0x98c68398
  4025ce:	add    ch,dh
  4025d0:	sbb    eax,0x1337d90f
  4025d5:	cmp    BYTE PTR [edi],al
  4025d7:	jle    0x40261b
  4025d9:	mov    ebp,ebx
  4025db:	jne    0x402614
  4025dd:	out    dx,eax
  4025de:	lock push cs
  4025e0:	mov    dh,0xf9
  4025e2:	add    esp,DWORD PTR [ebp+0x59]
  4025e5:	mov    DWORD PTR [esi-0x46a82ca5],edx
  4025eb:	xchg   DWORD PTR [ecx],eax
  4025ed:	cli    
  4025ee:	iret   
  4025ef:	pop    ecx
  4025f0:	lods   eax,DWORD PTR ds:[esi]
  4025f1:	ss cmps BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4025f4:	fild   DWORD PTR [edi-0x1f]
  4025f7:	out    dx,eax
  4025f8:	lods   al,BYTE PTR ds:[esi]
  4025f9:	push   eax
  4025fa:	push   cs
  4025fb:	sub    ch,BYTE PTR [ebx-0xa]
  4025fe:	ins    DWORD PTR es:[edi],dx
  4025ff:	fnop   
  402601:	pop    ss
  402602:	repz sub BYTE PTR ds:0xdf21dc20,ah
  402609:	pop    edx
  40260a:	xor    al,BYTE PTR ds:0x37ae66b7
  402610:	std    
  402611:	ins    DWORD PTR es:[edi],dx
  402612:	stos   DWORD PTR es:[edi],eax
  402613:	lock jle 0x402638
  402616:	cmp    DWORD PTR [ecx],ebp
  402618:	push   es
  402619:	mov    es,WORD PTR [esi+esi*2-0x40befce5]
  402620:	int3   
  402621:	clc    
  402622:	jmp    0x40260a
  402624:	pop    esp
  402625:	(bad)  
  402626:	mov    DWORD PTR [ebp+eax*1-0x4177d7],ebx
  40262d:	push   ebx
  40262e:	mov    ebp,0x1967d967
  402633:	test   DWORD PTR [edi+0xad65a34],esi
  402639:	or     DWORD PTR [ebp+0x664bbb9c],0xaf7882b5
  402643:	jge    0x42108f69
  402649:	dec    edi
  40264a:	ja     0x4025f7
  40264c:	inc    eax
  40264d:	mov    edx,0x7885ff52
  402652:	popa   
  402653:	test   ebp,edx
  402655:	and    eax,0x15038fd0
  40265a:	push   eax
  40265b:	ins    BYTE PTR es:[edi],dx
  40265c:	push   ecx
  40265d:	inc    edx
  40265e:	gs (bad) 
  402660:	outs   dx,DWORD PTR ds:[esi]
  402661:	aam    0x9d
  402663:	dec    ebx
  402664:	jb     0x402690
  402666:	xchg   esi,eax
  402667:	inc    edi
  402668:	ret    0x1073
  40266b:	jns    0x402659
  40266d:	sbb    al,0xf0
  40266f:	jnp    0x4026a5
  402671:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402672:	mov    bl,BYTE PTR [edx+0x532db907]
  402678:	lahf   
  402679:	mov    dh,0xd3
  40267b:	imul   ecx,eax,0xfffffff9
  40267e:	dec    esp
  40267f:	pop    es
  402680:	adc    al,0x4f
  402682:	sub    DWORD PTR [edx],esp
  402684:	or     al,0xbe
  402686:	adc    DWORD PTR ss:[ecx],edx
  402689:	cmp    al,0xe1
  40268b:	mov    ds:0x8692b651,al
  402690:	(bad)  
  402691:	push   esp
  402692:	aad    0xca
  402694:	mov    eax,0x39354c90
  402699:	add    BYTE PTR [esi-0x36],dh
  40269c:	pop    ds
  40269d:	fsub   QWORD PTR [ebp-0xc3f4100]
  4026a3:	fcmovne st,st(2)
  4026a5:	in     al,dx
  4026a6:	outs   dx,DWORD PTR ds:[esi]
  4026a7:	clc    
  4026a8:	jmp    0x40268a
  4026aa:	mov    bh,BYTE PTR [ecx+eax*1]
  4026ad:	scas   eax,DWORD PTR es:[edi]
  4026ae:	and    si,WORD PTR [esi+0x36]
  4026b2:	stos   BYTE PTR es:[edi],al
  4026b3:	xchg   ecx,eax
  4026b4:	icebp  
  4026b5:	pushf  
  4026b6:	popa   
  4026b7:	jmp    0x2ee8c503
  4026bc:	jmp    0x6944bb3e
  4026c1:	and    eax,0x816237a1
  4026c6:	out    0x7b,eax
  4026c8:	xchg   DWORD PTR [edx+0x2c7ebe94],esp
  4026ce:	add    al,0x3
  4026d0:	push   0x0
  4026d2:	mov    esp,0xcff0c21
  4026d7:	mov    ebp,0x3b9a7933
  4026dc:	(bad)  
  4026dd:	out    0x2c,eax
  4026df:	xchg   esi,eax
  4026e0:	mov    DWORD PTR [ecx],0x5c0dbcd0
  4026e6:	jp     0x40268e
  4026e8:	mov    cl,0x6e
  4026ea:	xchg   esp,eax
  4026eb:	fadd   QWORD PTR [ebp-0x976d2f3]
  4026f1:	call   0x3d118bac
  4026f6:	mov    eax,ds:0xabc37e9
  4026fb:	jb     0x402741
  4026fd:	call   0x5fab584
  402702:	and    esp,DWORD PTR [ebx-0x68c3bf5a]
  402708:	jl     0x402732
  40270a:	sbb    bh,bl
  40270c:	xchg   ebp,eax
  40270d:	adc    ecx,DWORD PTR [esi-0x4c8fddb7]
  402713:	jnp    0x40274a
  402715:	mov    al,BYTE PTR [eax]
  402717:	add    BYTE PTR [edx+0x4d],ah
  40271a:	xor    esi,esp
  40271c:	jg     0x402726
  40271e:	lods   eax,DWORD PTR ds:[esi]
  40271f:	cmp    BYTE PTR [ebp+0x74],cl
  402722:	ss leave 
  402724:	stos   BYTE PTR es:[edi],al
  402725:	pusha  
  402726:	popa   
  402727:	fadd   st,st(2)
  402729:	ja     0x40270d
  40272b:	and    DWORD PTR [ebx-0xe],ebx
  40272e:	mov    eax,0x25da2e41
  402733:	js     0x40274f
  402735:	leave  
  402736:	fcomi  st,st(7)
  402738:	push   0xb1172281
  40273d:	pop    ebx
  40273e:	sbb    ebx,ecx
  402740:	mov    dh,0xc3
  402742:	sbb    bh,BYTE PTR [edi]
  402744:	mov    dh,0x56
  402746:	fwait
  402747:	mov    ebp,DWORD PTR [edi+eiz*8-0x7ca5ea91]
  40274e:	mov    al,ds:0xcdfb5cf0
  402753:	cdq    
  402754:	fs mov esi,0x53494687
  40275a:	push   eax
  40275b:	dec    ebx
  40275c:	cmp    esp,DWORD PTR [esi+0x71]
  40275f:	inc    ebx
  402760:	out    0xcd,eax
  402762:	stos   BYTE PTR es:[edi],al
  402763:	ss pop ss
  402765:	pop    edx
  402766:	xchg   DWORD PTR [ebp+0x7116ef66],ebp
  40276c:	dec    ecx
  40276d:	loop   0x4027b6
  40276f:	leave  
  402770:	fistp  QWORD PTR [ebx-0x64]
  402773:	pop    ebp
  402774:	sbb    BYTE PTR [esi-0x77d87385],0x60
  40277b:	icebp  
  40277c:	imul   eax,DWORD PTR ds:[edi],0x83b47d05
  402783:	jg     0x402742
  402785:	pop    ds
  402786:	sub    edi,edi
  402788:	dec    edi
  402789:	das    
  40278a:	xchg   ecx,eax
  40278b:	sub    al,0xe4
  40278d:	in     eax,0x19
  40278f:	outs   dx,BYTE PTR ds:[esi]
  402790:	jbe    0x402751
  402792:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402793:	add    bl,BYTE PTR ds:0x8e62d5e2
  402799:	mov    eax,esp
  40279b:	hlt    
  40279c:	outs   dx,DWORD PTR ds:[esi]
  40279d:	jl     0x4027b3
  40279f:	sbb    DWORD PTR [esi+edi*8+0x45f27754],edi
  4027a6:	add    eax,0x31baf46e
  4027ab:	pop    esp
  4027ac:	dec    eax
  4027ad:	jns    0x4027e3
  4027af:	mov    ds:0x86438853,al
  4027b4:	jg     0x40274f
  4027b6:	les    ecx,FWORD PTR [ecx+0x4e3bbad5]
  4027bc:	nop
  4027bd:	mov    ch,0xde
  4027bf:	lock adc ecx,DWORD PTR [ebx]
  4027c2:	dec    edi
  4027c3:	sbb    eax,DWORD PTR [eax-0x5bb614ae]
  4027c9:	jmp    0x40277d
  4027cb:	int3   
  4027cc:	sbb    ah,BYTE PTR [ebx+0x57]
  4027cf:	or     DWORD PTR [edi],esi
  4027d1:	pop    ebx
  4027d2:	push   edx
  4027d3:	lahf   
  4027d4:	pushf  
  4027d5:	xor    al,0x3e
  4027d7:	leave  
  4027d8:	pop    esp
  4027d9:	or     eax,0xd3803541
  4027de:	mov    ds:0x1e1c41f,al
  4027e3:	cmp    esp,DWORD PTR [edx]
  4027e5:	lahf   
  4027e6:	leave  
  4027e7:	test   eax,0x73e8a08a
  4027ec:	dec    esi
  4027ed:	mov    ebx,0x81a340a2
  4027f2:	sbb    al,0xac
  4027f4:	mov    ebp,0x747714f2
  4027f9:	hlt    
  4027fa:	cdq    
  4027fb:	jp     0x4027c6
  4027fd:	fadd   QWORD PTR [ecx+0x2c33dff6]
  402803:	xchg   edi,eax
  402804:	push   esi
  402805:	rcr    DWORD PTR [eax],cl
  402807:	int3   
  402808:	scas   eax,DWORD PTR es:[edi]
  402809:	out    0x78,al
  40280b:	add    eax,0x8874dbae
  402810:	out    0x83,eax
  402812:	fs ret 
  402814:	sbb    eax,DWORD PTR [edi+ebx*2-0x15]
  402818:	inc    eax
  402819:	(bad)  
  40281a:	dec    ecx
  40281b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40281c:	lods   eax,DWORD PTR ds:[esi]
  40281d:	push   ss
  40281e:	add    BYTE PTR [esp+ebp*8+0x20009e7c],al
  402825:	jns    0x4027c8
  402827:	and    DWORD PTR [edi+0x65],0x70df1ae9
  40282e:	mov    bh,0x0
  402830:	mov    ebx,0x951e275e
  402835:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402836:	das    
  402837:	cld    
  402838:	xchg   esp,eax
  402839:	fnstsw WORD PTR [edx+0x2ada8d3]
  40283f:	test   eax,0x309363aa
  402844:	cmp    al,0x93
  402846:	mov    ecx,0x6d247e9f
  40284b:	dec    ebp
  40284c:	pop    eax
  40284d:	xchg   ecx,eax
  40284e:	inc    esp
  40284f:	sar    ah,0x79
  402852:	hlt    
  402853:	mov    dl,0x5b
  402855:	fsqrt  
  402857:	scas   al,BYTE PTR es:[edi]
  402858:	hlt    
  402859:	int3   
  40285a:	xor    eax,0xa4558c47
  40285f:	test   BYTE PTR [edi-0x65516ad4],dh
  402865:	mov    DWORD PTR [esi-0x39],ebx
  402868:	sbb    DWORD PTR [edx+0x49502ff6],ebx
  40286e:	xchg   esp,eax
  40286f:	clc    
  402870:	cmp    eax,0x95d38760
  402875:	pmaxsw mm1,QWORD PTR [ebx-0x42]
  402879:	fisub  WORD PTR [edi-0x59299767]
  40287f:	js     0x402816
  402881:	clc    
  402882:	inc    ecx
  402883:	repnz mov bl,0x19
  402886:	adc    edi,esp
  402888:	and    DWORD PTR ss:[ebx+0x552a10e6],ebp
  40288f:	cld    
  402890:	mov    WORD PTR [ebx+0x5d],?
  402893:	jne    0x40289c
  402895:	lods   eax,DWORD PTR ds:[esi]
  402896:	push   esi
  402897:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402898:	xor    al,0xbf
  40289a:	mov    edi,0x26ed91df
  40289f:	adc    al,0xdf
  4028a1:	inc    eax
  4028a2:	xchg   ebp,eax
  4028a3:	fcmovne st,st(4)
  4028a5:	pop    edx
  4028a6:	add    esi,DWORD PTR [edx+0x77379bb2]
  4028ac:	inc    esi
  4028ad:	ins    BYTE PTR es:[edi],dx
  4028ae:	add    al,0x9e
  4028b0:	push   edi
  4028b1:	mov    ah,0xf2
  4028b3:	sar    BYTE PTR [ebp-0xd],cl
  4028b6:	xor    esi,DWORD PTR [edx+ebp*8-0x68]
  4028ba:	adc    cl,0xe3
  4028bd:	retf   
  4028be:	(bad)  
  4028bf:	out    dx,eax
  4028c0:	stos   DWORD PTR es:[edi],eax
  4028c1:	das    
  4028c2:	in     eax,0x4c
  4028c4:	xor    al,0x8f
  4028c6:	out    dx,al
  4028c7:	call   FWORD PTR ds:0xdaa4394b
  4028cd:	dec    ecx
  4028ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028cf:	jno    0x402930
  4028d1:	ret    0xe3fb
  4028d4:	inc    ebp
  4028d5:	mov    esp,0x105b0a1d
  4028da:	push   edx
  4028db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028dc:	sub    cl,al
  4028de:	sahf   
  4028df:	enter  0x9f9d,0xbb
  4028e3:	push   0xffffffb4
  4028e5:	daa    
  4028e6:	in     eax,0xf8
  4028e8:	lods   eax,DWORD PTR ds:[esi]
  4028e9:	js     0x40290b
  4028eb:	addr16 dec ecx
  4028ed:	in     al,0x8e
  4028ef:	push   edi
  4028f0:	scas   eax,DWORD PTR es:[edi]
  4028f1:	dec    esp
  4028f2:	stc    
  4028f3:	js     0x4028aa
  4028f5:	and    edi,DWORD PTR [ecx+0x61a07578]
  4028fb:	int3   
  4028fc:	mov    ds:0x7a7dfa2e,al
  402901:	or     DWORD PTR [ebp+0x261d7669],0xffffffcd
  402908:	and    eax,0x79f585ee
  40290d:	outs   dx,BYTE PTR ds:[esi]
  40290e:	xor    eax,0xa6620ffa
  402913:	add    ebx,ecx
  402915:	int    0x4f
  402917:	sub    eax,0xbe128c92
  40291c:	xor    ah,bl
  40291e:	xchg   ecx,eax
  40291f:	push   edx
  402920:	pop    ecx
  402921:	adc    BYTE PTR [esi-0x17],0xa0
  402925:	pcmpgtb mm2,QWORD PTR [ebp-0x5ddbd32c]
  40292c:	dec    ebx
  40292d:	sbb    ah,BYTE PTR [ecx+eiz*1]
  402930:	ficomp WORD PTR [edx+0x4dcd78a1]
  402936:	cdq    
  402937:	ret    0x1ab4
  40293a:	push   edx
  40293b:	dec    eax
  40293c:	repz into 
  40293e:	xor    al,0x15
  402940:	ror    BYTE PTR [eax+0x5976eb9c],0x33
  402947:	xor    eax,0xf6642f34
  40294c:	pop    esp
  40294d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40294e:	mov    dl,BYTE PTR [edx+0x40f7eeea]
  402954:	xlat   BYTE PTR ds:[ebx]
  402955:	rcr    DWORD PTR [esi+eax*8+0xf12ed09],1
  40295c:	ds dec esp
  40295e:	retf   0x420e
  402961:	scas   eax,DWORD PTR es:[edi]
  402962:	mov    al,ds:0x179d171
  402967:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402968:	(bad)  
  402969:	leave  
  40296a:	cmc    
  40296b:	cmc    
  40296c:	jge    0x402964
  40296e:	cmp    bl,ch
  402970:	sub    esi,DWORD PTR [eax-0x15ada5b4]
  402976:	lods   al,BYTE PTR ds:[esi]
  402977:	jmp    0x402994
  402979:	mov    ch,0x10
  40297b:	or     DWORD PTR [ebp-0x6389faaf],ebp
  402981:	mov    ah,0xbb
  402983:	cmp    edx,0xfffffff7
  402986:	shr    BYTE PTR [esi-0x579ac1e0],1
  40298c:	(bad)  
  40298d:	mov    esp,DWORD PTR [edi-0x2a]
  402990:	adc    DWORD PTR [esi-0x4],0xffffffd5
  402994:	sti    
  402995:	mov    ?,WORD PTR [ecx*1-0x68fcd659]
  40299c:	dec    esi
  40299d:	pop    ds
  40299e:	push   cs
  40299f:	mov    esi,0xc3328ade
  4029a4:	sar    BYTE PTR [eax+0xf5f366e],cl
  4029aa:	repnz fistp DWORD PTR [edx-0x1030cac7]
  4029b1:	sbb    BYTE PTR [edi],0x70
  4029b4:	cli    
  4029b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029b6:	inc    esi
  4029b7:	imul   ecx,DWORD PTR [ebx+0x44b4e6f1],0x59064f40
  4029c1:	mov    edx,0x74c2e301
  4029c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029c7:	popf   
  4029c8:	stos   BYTE PTR es:[edi],al
  4029c9:	sbb    edi,DWORD PTR [ebp-0x17]
  4029cc:	stc    
  4029cd:	dec    ebx
  4029ce:	fild   DWORD PTR [edi-0x21]
  4029d1:	and    DWORD PTR [ebx],edx
  4029d3:	xor    al,0xf8
  4029d5:	outs   dx,BYTE PTR ds:[esi]
  4029d6:	mov    ecx,DWORD PTR [ebp+ebp*8-0x37]
  4029da:	and    ecx,ecx
  4029dc:	addr16 dec esp
  4029de:	pop    ds
  4029df:	pop    es
  4029e0:	call   0xa522:0xe7766fc8
  4029e7:	iret   
  4029e8:	jbe    0x402a68
  4029ea:	xchg   ch,al
  4029ec:	repz fist DWORD PTR [edi-0x33f408c4]
  4029f3:	dec    eax
  4029f4:	mov    dh,0x25
  4029f6:	lods   eax,DWORD PTR ds:[esi]
  4029f7:	or     DWORD PTR [edi+0x3771e08c],ecx
  4029fd:	mov    esp,0xf207c10f
  402a02:	add    ah,BYTE PTR [ebx]
  402a04:	test   eax,0x7939086d
  402a09:	aam    0xfa
  402a0b:	fs push ds
  402a0d:	fcom   QWORD PTR [ebx+0x23]
  402a10:	loope  0x402a30
  402a12:	fstp   TBYTE PTR [edi]
  402a14:	or     al,0xcc
  402a16:	mov    bl,0x87
  402a18:	mov    DWORD PTR [ecx+0x9],esp
  402a1b:	xor    esp,DWORD PTR [ebp+0x13]
  402a1e:	data16 fwait
  402a20:	popa   
  402a21:	not    DWORD PTR [eax]
  402a23:	xor    eax,0x9b1ade84
  402a28:	mov    al,0xeb
  402a2a:	cmp    al,0x64
  402a2c:	and    eax,0x1b2748b2
  402a31:	mov    WORD PTR [ebx+edi*4],?
  402a34:	out    dx,al
  402a35:	or     dl,BYTE PTR [edx+0x2e]
  402a38:	sbb    ecx,DWORD PTR [ebx+edi*4+0x5cbe4379]
  402a3f:	xor    eax,0xb3517725
  402a44:	retf   0xbdd9
  402a47:	hlt    
  402a48:	and    ch,al
  402a4a:	sub    al,0xe0
  402a4c:	aaa    
  402a4d:	loope  0x402a90
  402a4f:	gs jl  0x402ab0
  402a52:	inc    ebp
  402a53:	pop    esi
  402a54:	push   es
  402a55:	dec    ebx
  402a56:	ins    BYTE PTR es:[edi],dx
  402a57:	mov    BYTE PTR [di],ch
  402a5a:	sbb    ch,al
  402a5c:	rcl    BYTE PTR [eax],0xa5
  402a5f:	adc    eax,0xffffff8d
  402a62:	mov    ds:0xef91fec6,al
  402a67:	ror    BYTE PTR [ecx],1
  402a69:	(bad)  
  402a6a:	and    DWORD PTR [eax-0x204bce35],edx
  402a70:	loop   0x402a5b
  402a72:	mov    eax,0x6831105c
  402a77:	stos   DWORD PTR es:[edi],eax
  402a78:	and    BYTE PTR [edx],dh
  402a7a:	repnz xchg esi,eax
  402a7c:	mov    al,0x23
  402a7e:	push   es
  402a7f:	push   ebp
  402a80:	mov    al,0xbb
  402a82:	adc    esi,edx
  402a84:	sbb    bl,BYTE PTR ds:0xcc38abc9
  402a8a:	push   ds
  402a8b:	icebp  
  402a8c:	jae    0x402a25
  402a8e:	xchg   edi,esi
  402a90:	pop    edx
  402a91:	outs   dx,BYTE PTR ds:[esi]
  402a92:	in     eax,0x15
  402a94:	(bad)  
  402a95:	cmp    al,0xb7
  402a97:	xlat   BYTE PTR ds:[ebx]
  402a98:	cmp    eax,0xdf1255f1
  402a9d:	rol    BYTE PTR [ecx],cl
  402a9f:	mov    DWORD PTR ds:0xee7baae9,eax
  402aa5:	mov    ebx,0x11bb741e
  402aaa:	pop    ecx
  402aab:	inc    ecx
  402aac:	cmp    esi,DWORD PTR [ecx-0x3113cd70]
  402ab2:	and    BYTE PTR [edx],dh
  402ab4:	mov    bl,0x4c
  402ab6:	jg     0x402a9c
  402ab8:	add    BYTE PTR [edi+0x6],ch
  402abb:	jl     0x402ac5
  402abd:	and    eax,0x477e8d8c
  402ac2:	cdq    
  402ac3:	mov    eax,ebp
  402ac5:	aam    0x5d
  402ac7:	das    
  402ac8:	out    0x99,eax
  402aca:	or     al,0xa1
  402acc:	scas   al,BYTE PTR es:[edi]
  402acd:	and    ecx,esi
  402acf:	dec    ebx
  402ad0:	jle    0x402ad9
  402ad2:	mov    ds:0x4a8091d5,al
  402ad7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ad8:	jecxz  0x402b4b
  402ada:	jg     0x402a60
  402adc:	mov    al,ds:0x938f5edb
  402ae1:	jmp    0x1ab35e31
  402ae6:	stos   BYTE PTR es:[edi],al
  402ae7:	or     DWORD PTR [edi],esp
  402ae9:	xchg   DWORD PTR [esi],ebp
  402aeb:	imul   BYTE PTR [edx-0x60]
  402aee:	push   esi
  402aef:	mov    cl,0x55
  402af1:	push   eax
  402af2:	inc    esp
  402af3:	sub    DWORD PTR [ebp+0x4f],edx
  402af6:	cmp    ecx,eax
  402af8:	pop    ss
  402af9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402afa:	mov    edi,DWORD PTR [ebx+0x16]
  402afd:	or     edi,DWORD PTR ss:[edx+eiz*4+0x39]
  402b02:	mov    eax,ds:0xd1eaf5d3
  402b07:	inc    edx
  402b08:	mov    ebp,0xc27b2126
  402b0d:	mov    al,ds:0x69b68f12
  402b12:	sbb    DWORD PTR [esi*8-0x4075c0a9],eax
  402b19:	pusha  
  402b1a:	cmp    DWORD PTR [esi+0x1a],esi
  402b1d:	(bad)  
  402b1e:	cli    
  402b1f:	and    ecx,DWORD PTR [ecx+0x78d26ebd]
  402b25:	int    0x89
  402b27:	jp     0x402afd
  402b29:	inc    esi
  402b2a:	mov    ebp,0x6bfb8f57
  402b2f:	stos   BYTE PTR es:[edi],al
  402b30:	mov    ds:0xe263e1d8,al
  402b35:	cwde   
  402b36:	arpl   WORD PTR [ebp-0xc99c3c],sp
  402b3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b3d:	clc    
  402b3e:	cmp    al,0xb4
  402b40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b41:	dec    BYTE PTR [edi]
  402b43:	data16 jl 0x402ae4
  402b46:	xchg   esp,eax
  402b47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b48:	loop   0x402bb3
  402b4a:	sbb    esp,DWORD PTR [edi]
  402b4c:	(bad)  
  402b4d:	in     eax,0xa7
  402b4f:	(bad)  
  402b52:	(bad)  
  402b54:	mov    ebp,0xe14dd3f5
  402b59:	gs int 0x2c
  402b5c:	sub    DWORD PTR [edi+0xa8220d9],esp
  402b62:	fst    QWORD PTR [ebx]
  402b64:	add    al,0xd9
  402b66:	sbb    ebx,esp
  402b68:	in     eax,dx
  402b69:	sbb    eax,0x27d112f6
  402b6e:	or     al,0xf5
  402b70:	inc    edx
  402b71:	dec    esp
  402b72:	das    
  402b73:	push   es
  402b74:	fcomp  QWORD PTR [eax]
  402b76:	das    
  402b77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b78:	mov    cl,0xc2
  402b7a:	dec    ecx
  402b7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b7c:	adc    al,0x82
  402b7e:	mov    ah,0x22
  402b80:	fsubr  QWORD PTR [ebx-0x1fbe8cfe]
  402b86:	lock fdiv DWORD PTR [edx+0x11822bd1]
  402b8d:	sbb    eax,0x77643e82
  402b92:	lea    ecx,[ebx-0x6f]
  402b95:	(bad)  
  402b96:	ins    DWORD PTR es:[edi],dx
  402b97:	jge    0x402b34
  402b99:	pop    edi
  402b9a:	xchg   DWORD PTR [ecx+0x3a],ebx
  402b9d:	cld    
  402b9e:	test   ebp,eax
  402ba0:	or     ebx,DWORD PTR [edx+0x1cdb869]
  402ba6:	cmp    BYTE PTR [esp+eiz*2+0x7d91d6dd],0x76
  402bae:	loope  0x402c03
  402bb0:	(bad)  
  402bb1:	push   ss
  402bb2:	push   cs
  402bb3:	jl     0x402c14
  402bb5:	add    al,0xe7
  402bb7:	pop    esi
  402bb8:	jb     0x402bab
  402bba:	in     eax,0xac
  402bbc:	cmp    eax,0x165c53b1
  402bc1:	pop    esi
  402bc2:	or     bh,BYTE PTR [edx+0x72370992]
  402bc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402bc9:	mov    ebx,0xb18c5a89
  402bce:	add    DWORD PTR [esp+eiz*2+0x4c6160c8],edx
  402bd5:	sahf   
  402bd6:	fst    DWORD PTR [esi+0x75805b39]
  402bdc:	add    BYTE PTR [ecx-0x73],bh
  402bdf:	cmp    eax,0xbbb2d5aa
  402be4:	push   cs
  402be5:	jb     0x402b88
  402be7:	push   esp
  402be8:	scas   al,BYTE PTR es:[edi]
  402be9:	dec    esp
  402bea:	mov    dl,0xf7
  402bec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402bed:	loopne 0x402bff
  402bef:	adc    dh,BYTE PTR [ebx]
  402bf1:	(bad)  
  402bf2:	es mov bh,0x1
  402bf5:	xchg   ebx,eax
  402bf6:	int    0x7f
  402bf8:	jecxz  0x402b7f
  402bfa:	xchg   edx,eax
  402bfb:	imul   ecx,eax,0x23
  402bfe:	ja     0x402c75
  402c00:	in     eax,dx
  402c01:	mov    ch,dh
  402c03:	in     al,0xf6
  402c05:	gs std 
  402c07:	push   esi
  402c08:	loopne 0x402bf2
  402c0a:	leave  
  402c0b:	jecxz  0x402c00
  402c0d:	mov    WORD PTR [edi-0x4f],cs
  402c10:	sbb    ah,BYTE PTR [ecx-0x67]
  402c13:	dec    ecx
  402c14:	hlt    
  402c15:	fnsave [eax]
  402c17:	pop    edx
  402c18:	test   eax,0x4e4877e9
  402c1d:	into   
  402c1e:	jne    0x402c0e
  402c20:	jecxz  0x402be7
  402c22:	and    edx,ebx
  402c24:	and    DWORD PTR [eax+0x3cce01ea],0xffffffb6
  402c2b:	repnz imul DWORD PTR [ebp-0x5687836c]
  402c32:	icebp  
  402c33:	add    esi,DWORD PTR [edi]
  402c35:	push   cs
  402c36:	(bad)  
  402c37:	leave  
  402c38:	add    esp,DWORD PTR [esi]
  402c3a:	dec    ebp
  402c3b:	sahf   
  402c3c:	mov    eax,ds:0xc709c95
  402c41:	enter  0xc446,0xe6
  402c45:	ret    
  402c46:	jns    0x402cb5
  402c48:	sub    al,0x2f
  402c4a:	ds jno 0x402cbc
  402c4d:	(bad)  
  402c4e:	pop    DWORD PTR [esi-0x80]
  402c51:	stos   BYTE PTR es:[edi],al
  402c52:	test   eax,0x83a76e8d
  402c57:	mov    DWORD PTR [ebp+0x52],eax
  402c5a:	xlat   BYTE PTR ds:[ebx]
  402c5b:	(bad)  
  402c5c:	adc    DWORD PTR [esi],esp
  402c5e:	or     DWORD PTR [ecx+ebp*4-0x53e0bbc5],0x3ac266ad
  402c69:	sbb    al,BYTE PTR [edi+0x6c13292e]
  402c6f:	mov    esi,0xf1cd4e9e
  402c74:	mov    ch,0x45
  402c76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c77:	sti    
  402c78:	push   0x9ef269f0
  402c7d:	cwde   
  402c7e:	add    eax,0xe85a45bb
  402c83:	inc    edx
  402c84:	loope  0x402c08
  402c86:	pop    es
  402c87:	cmp    edx,DWORD PTR [ecx]
  402c89:	and    al,0xb8
  402c8b:	and    eax,0x96dcb2f6
  402c90:	(bad)  
  402c91:	sub    eax,0x530d98fd
  402c96:	shl    BYTE PTR [ecx+0x3f],0xd6
  402c9a:	not    esp
  402c9c:	loop   0x402d13
  402c9e:	xor    edx,DWORD PTR [esi]
  402ca0:	ins    DWORD PTR es:[edi],dx
  402ca1:	ret    
  402ca2:	pop    ebp
  402ca3:	scas   al,BYTE PTR es:[edi]
  402ca4:	inc    ebp
  402ca5:	cmp    ebp,edi
  402ca7:	cmc    
  402ca8:	and    eax,0x127c4f96
  402cad:	xchg   esi,eax
  402cae:	lock retf 0xa46c
  402cb2:	lods   eax,DWORD PTR ds:[esi]
  402cb3:	xchg   esp,eax
  402cb4:	not    ecx
  402cb6:	mov    ah,BYTE PTR [edx-0x2e1e8804]
  402cbc:	push   cs
  402cbd:	push   esp
  402cbe:	popa   
  402cbf:	(bad)  
  402cc0:	pop    edx
  402cc1:	inc    edi
  402cc2:	rcr    ebx,1
  402cc4:	es pop esi
  402cc6:	mov    dl,0xc2
  402cc8:	dec    ebp
  402cc9:	stos   BYTE PTR es:[edi],al
  402cca:	dec    esi
  402ccb:	out    dx,eax
  402ccc:	pop    ebp
  402ccd:	mov    ebp,0xc10604cb
  402cd2:	push   esp
  402cd3:	adc    eax,0xaddf90db
  402cd8:	dec    edi
  402cd9:	jecxz  0x402cbe
  402cdb:	sbb    al,0xef
  402cdd:	xchg   esp,eax
  402cde:	mov    ecx,DWORD PTR [ecx+eiz*1]
  402ce1:	and    BYTE PTR [edx-0x42],0xc1
  402ce5:	and    al,0xca
  402ce7:	ins    DWORD PTR es:[edi],dx
  402ce8:	cwde   
  402ce9:	mov    ds:0x2d959a5f,al
  402cee:	xor    ah,ah
  402cf0:	or     eax,0x65bed1ad
  402cf5:	lahf   
  402cf6:	dec    ebp
  402cf7:	psubq  mm1,QWORD PTR [edi-0x62]
  402cfb:	mov    ds:0x88acdf8,eax
  402d00:	jl     0x402d48
  402d02:	jl     0x402d1e
  402d04:	int    0xcc
  402d06:	lock cmp ebp,DWORD PTR [ebx+0x33]
  402d0a:	arpl   WORD PTR [edi],bx
  402d0c:	in     eax,0x4
  402d0e:	fnstsw WORD PTR [eax]
  402d10:	imul   ebp,DWORD PTR [ecx+eax*2+0x172bde5d],0xffffffeb
  402d18:	jmp    0x402d8b
  402d1a:	mov    ch,0xf0
  402d1c:	ja     0x402d80
  402d1e:	mov    ebx,0x954c78d0
  402d23:	fist   WORD PTR [edx]
  402d25:	add    eax,0xeff8dac9
  402d2a:	inc    edi
  402d2b:	xor    al,0xde
  402d2d:	mov    ebp,0x14d4be71
  402d32:	rol    DWORD PTR [ebp-0x26c0ead1],cl
  402d38:	dec    DWORD PTR [ebx]
  402d3a:	jno    0x402d00
  402d3c:	or     ebp,esp
  402d3e:	sub    DWORD PTR cs:[ecx-0xce249a6],esp
  402d45:	ins    BYTE PTR es:[edi],dx
  402d46:	sbb    al,0xd3
  402d48:	jecxz  0x402d9f
  402d4a:	popa   
  402d4b:	add    DWORD PTR ds:0xaa05ae40,edi
  402d51:	dec    esp
  402d52:	ss test eax,0x66d6978b
  402d58:	dec    eax
  402d59:	aad    0x5e
  402d5b:	xchg   ebx,eax
  402d5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d5d:	popf   
  402d5e:	push   ds
  402d5f:	fwait
  402d60:	push   ss
  402d61:	inc    esp
  402d62:	enter  0xd43,0xc6
  402d66:	mov    bl,0x89
  402d68:	sar    BYTE PTR [ecx+0x11],cl
  402d6b:	rol    DWORD PTR [eax],0xbf
  402d6e:	adc    DWORD PTR [esi],ebx
  402d70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d71:	dec    edi
  402d72:	arpl   WORD PTR [ecx],ax
  402d74:	dec    ecx
  402d75:	jmp    0xa68f:0xbe4812ab
  402d7c:	enter  0xce0c,0xe5
  402d80:	ja     0x402d30
  402d82:	inc    eax
  402d83:	outs   dx,DWORD PTR ds:[esi]
  402d84:	ja     0x402dbd
  402d86:	sbb    ah,BYTE PTR [ebp+edi*1-0x58]
  402d8a:	push   0x5f
  402d8c:	and    edi,ebp
  402d8e:	(bad)  
  402d8f:	mov    DWORD PTR [edi+0x424c8c4a],eax
  402d95:	fsubr  QWORD PTR [ebx+ebp*2+0x2d793b]
  402d9c:	jmp    0x720990d3
  402da1:	pop    ecx
  402da2:	add    dh,BYTE PTR [ecx+edx*2+0x4a]
  402da6:	jmp    0x4b473bb6
  402dab:	push   esi
  402dac:	pop    edx
  402dad:	loop   0x402e2a
  402daf:	loopne 0x402d54
  402db1:	pusha  
  402db2:	fwait
  402db3:	call   DWORD PTR [esi]
  402db5:	sbb    ebx,DWORD PTR [ebx-0x2ccb455b]
  402dbb:	js     0x402df8
  402dbd:	jno    0x402e36
  402dbf:	push   ecx
  402dc0:	lods   eax,DWORD PTR ds:[esi]
  402dc1:	mov    edi,0x5428407
  402dc6:	addr16 in al,dx
  402dc8:	xlat   BYTE PTR ds:[ebx]
  402dc9:	jnp    0x402d4d
  402dcb:	jge    0x402e1e
  402dcd:	push   ebx
  402dce:	or     esp,edx
  402dd0:	cmp    BYTE PTR [ebp+0x48aeda9f],0x11
  402dd7:	js     0x402e47
  402dd9:	pop    edx
  402dda:	dec    esp
  402ddb:	test   eax,0xa1a33f89
  402de0:	into   
  402de1:	icebp  
  402de2:	lahf   
  402de3:	les    ebx,FWORD PTR [esi+ecx*8-0x3c]
  402de7:	call   0xad31:0xebe6012b
  402dee:	bound  ecx,QWORD PTR [eax-0x1ff2e063]
  402df4:	dec    edx
  402df5:	ja     0x402e4e
  402df7:	cwde   
  402df8:	addr16 mov bh,0x57
  402dfb:	add    eax,0xd1a5799d
  402e00:	xchg   ebx,eax
  402e01:	and    DWORD PTR gs:[ebp-0x1e],edx
  402e05:	jmp    0x402dae
  402e07:	pop    ss
  402e08:	stc    
  402e09:	jnp    0x402e40
  402e0b:	push   ecx
  402e0c:	ja     0x402e51
  402e0e:	pop    esi
  402e0f:	push   ss
  402e10:	sahf   
  402e11:	or     al,0x97
  402e13:	retf   0x90e0
  402e16:	lea    edi,[ecx+0x69]
  402e19:	imul   ebp,DWORD PTR [edi+0x63],0xf73c840
  402e20:	jle    0x402e28
  402e22:	(bad)  
  402e23:	out    0xde,eax
  402e25:	or     al,0x36
  402e27:	add    BYTE PTR [esi+ecx*4-0x12],0x86
  402e2c:	test   DWORD PTR [edi-0x64],esi
  402e2f:	mov    BYTE PTR [eax-0x515ec830],bh
  402e35:	dec    edx
  402e36:	mov    esi,0xcd234e48
  402e3b:	mov    ds:0xa98ce187,eax
  402e40:	and    bl,ah
  402e42:	add    al,0x8c
  402e44:	sbb    eax,0xfb8ca984
  402e49:	xchg   edx,eax
  402e4a:	bound  ebp,QWORD PTR [eax+edx*2-0x5]
  402e4e:	or     edi,DWORD PTR ds:0x79941b5f
  402e54:	cmc    
  402e55:	jbe    0x402ec7
  402e57:	pusha  
  402e58:	(bad)  
  402e59:	stos   DWORD PTR es:[edi],eax
  402e5a:	in     al,dx
  402e5b:	xchg   ecx,eax
  402e5c:	push   ebx
  402e5d:	fnstenv [ebp+0x52]
  402e60:	inc    ecx
  402e61:	or     eax,0xf6200d30
  402e66:	inc    ebx
  402e67:	clc    
  402e68:	sub    eax,edi
  402e6a:	in     al,0xc5
  402e6c:	pop    edi
  402e6d:	cmp    BYTE PTR [esp+eiz*8-0xb],0x84
  402e72:	pushf  
  402e73:	outs   dx,DWORD PTR ds:[esi]
  402e74:	(bad)  
  402e75:	data16 js 0x402e65
  402e78:	out    dx,eax
  402e79:	adc    ecx,ebp
  402e7b:	or     bl,dl
  402e7d:	iret   
  402e7e:	cwde   
  402e7f:	xchg   ecx,eax
  402e80:	jno    0x402e63
  402e82:	and    edx,DWORD PTR [edi+0x3b195f45]
  402e88:	sti    
  402e89:	ficomp DWORD PTR [ecx+0x4eb9196d]
  402e8f:	scas   eax,DWORD PTR es:[edi]
  402e90:	jns    0x402e59
  402e92:	nop
  402e93:	xchg   edi,eax
  402e94:	fst    DWORD PTR [esi+0x449fa00d]
  402e9a:	(bad)  
  402e9b:	cld    
  402e9c:	adc    BYTE PTR ss:[edi-0x4b],dh
  402ea0:	out    dx,eax
  402ea1:	and    eax,DWORD PTR [ecx+0x6c24031a]
  402ea7:	dec    esp
  402ea8:	test   BYTE PTR [eax+0x19],cl
  402eab:	mov    esi,0x93e8c8c1
  402eb0:	mov    edx,0x638bc3c2
  402eb5:	fsubr  QWORD PTR [esi]
  402eb7:	pop    ss
  402eb8:	call   0x75d6:0x3aaa8deb
  402ebf:	mov    ebp,0x9559e49b
  402ec4:	mov    ebp,eax
  402ec6:	in     eax,dx
  402ec7:	std    
  402ec8:	mov    BYTE PTR [edi+0x26],bh
  402ecb:	leave  
  402ecc:	sahf   
  402ecd:	jmp    0x62512e30
  402ed2:	addr16 gs loopne 0x402f14
  402ed6:	xchg   ecx,eax
  402ed7:	push   esp
  402ed8:	retf   
  402ed9:	jb     0x402e81
  402edb:	xlat   BYTE PTR ds:[ebx]
  402edc:	xor    BYTE PTR [edi+ebp*2-0x7d73d7de],dh
  402ee3:	and    BYTE PTR [esi+0x14ab09be],ch
  402ee9:	ja     0x402f1e
  402eeb:	pop    es
  402eec:	mov    bh,0x60
  402eee:	add    ebx,DWORD PTR [ebp-0x5e9b8851]
  402ef4:	dec    edi
  402ef5:	mov    ah,0x30
  402ef7:	jno    0x402f4b
  402ef9:	xchg   ebp,eax
  402efa:	jmp    0x402efa
  402efc:	inc    ebp
  402efd:	out    dx,al
  402efe:	dec    ecx
  402eff:	jg     0x402f32
  402f01:	call   0xa8873421
  402f06:	dec    esi
  402f07:	ins    DWORD PTR es:[edi],dx
  402f08:	popf   
  402f09:	inc    esi
  402f0a:	mov    DWORD PTR [esi],eax
  402f0c:	mov    eax,0x266cec2d
  402f11:	xchg   edi,eax
  402f12:	ret    
  402f13:	inc    esp
  402f14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f15:	pop    ds
  402f16:	into   
  402f17:	dec    ebx
  402f18:	test   bl,bh
  402f1a:	xchg   edx,eax
  402f1b:	dec    edx
  402f1c:	inc    edi
  402f1d:	add    BYTE PTR [esi-0x1c3dfa60],0x30
  402f24:	loopne 0x402fa4
  402f26:	psubw  mm1,mm6
  402f29:	out    dx,eax
  402f2a:	jne    0x402ec8
  402f2c:	out    dx,eax
  402f2d:	xor    eax,0xe2147484
  402f32:	mov    al,0x2c
  402f34:	dec    ebp
  402f35:	push   0xffffff87
  402f37:	ins    DWORD PTR es:[edi],dx
  402f38:	push   cs
  402f39:	scas   eax,DWORD PTR es:[edi]
  402f3a:	std    
  402f3b:	jo     0x402f03
  402f3d:	iret   
  402f3e:	push   0xd70c28ca
  402f43:	mov    ds:0x874a8894,al
  402f48:	mov    dl,0x6e
  402f4a:	dec    eax
  402f4b:	jno    0x402f72
  402f4d:	and    BYTE PTR [edi+0x11],ah
  402f50:	into   
  402f51:	add    dl,BYTE PTR [edx]
  402f53:	and    al,0x5d
  402f55:	xchg   DWORD PTR [esi],ebx
  402f57:	pop    es
  402f58:	das    
  402f59:	sub    eax,0xe3103fee
  402f5e:	pusha  
  402f5f:	xchg   edx,eax
  402f60:	add    DWORD PTR [ecx-0x46dba846],edi
  402f66:	xchg   ecx,eax
  402f67:	das    
  402f68:	mov    dh,0xa9
  402f6a:	es fadd st,st(1)
  402f6d:	adc    BYTE PTR [ebp-0x200d029a],dl
  402f73:	add    eax,0xa05a099c
  402f78:	rcl    ecx,cl
  402f7a:	push   edx
  402f7b:	ret    
  402f7c:	xor    DWORD PTR [esi+ebx*2],esp
  402f7f:	sbb    eax,0x97d28a43
  402f84:	mov    al,0x70
  402f86:	iret   
  402f87:	pop    eax
  402f88:	cmp    al,0x65
  402f8a:	dec    ebp
  402f8b:	mov    ds:0x4d8e2dca,al
  402f90:	or     BYTE PTR ds:0xf33880ac,bh
  402f96:	xchg   edi,eax
  402f97:	adc    al,0x4f
  402f99:	xchg   ebp,eax
  402f9a:	enter  0xcbd4,0x4f
  402f9e:	in     eax,0xa9
  402fa0:	das    
  402fa1:	nop
  402fa2:	inc    eax
  402fa3:	bound  edi,QWORD PTR [ecx]
  402fa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402fa6:	push   ds
  402fa7:	(bad)  
  402fa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402fa9:	xor    bh,ch
  402fab:	imul   edi
  402fad:	cld    
  402fae:	(bad)  
  402faf:	fbld   TBYTE PTR [ecx+0x3a883200]
  402fb5:	out    dx,eax
  402fb6:	xchg   ecx,eax
  402fb7:	push   edx
  402fb8:	stc    
  402fb9:	fwait
  402fba:	mov    al,0xb6
  402fbc:	mov    ecx,DWORD PTR [edi-0x34]
  402fbf:	add    al,0x62
  402fc1:	sahf   
  402fc2:	(bad)
  402fc6:	call   0xbd845f4d
  402fcb:	call   0xe6f9:0xbe3b8c4b
  402fd2:	daa    
  402fd3:	jge    0x402f92
  402fd5:	adc    al,BYTE PTR [edi]
  402fd7:	into   
  402fd8:	cmp    eax,0x792e5b5e
  402fdd:	push   ds
  402fde:	sbb    BYTE PTR [edi-0x5b],cl
  402fe1:	sub    eax,0x622aa350
  402fe6:	nop
  402fe7:	loop   0x40304f
  402fe9:	push   ecx
  402fea:	and    eax,0x332a1f5
  402fef:	add    BYTE PTR [edx],al
  402ff1:	dec    esi
  402ff2:	loop   0x40301b
  402ff4:	or     BYTE PTR [ebx-0x6a],0x76
  402ff8:	clc    
  402ff9:	mov    al,ds:0x7a720bc9
  402ffe:	daa    
  402fff:	push   ss
  403000:	cwde   
  403001:	jnp    0x402fd2
  403003:	fs pop esi
  403005:	sti    
  403006:	xchg   esp,ebx
  403008:	or     eax,0x5438ba5f
  40300d:	fidiv  WORD PTR [ebp+ecx*4+0x56]
  403011:	out    0xe7,al
  403013:	cs inc edx
  403015:	or     BYTE PTR [esi-0x1fa90a65],dh
  40301b:	data16 lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40301e:	inc    edi
  40301f:	loope  0x402fb7
  403021:	sbb    ecx,edi
  403023:	fild   DWORD PTR [ecx+0x6ced5618]
  403029:	adc    DWORD PTR [ebp-0x3e],esp
  40302c:	ins    DWORD PTR es:[edi],dx
  40302d:	jp     0x40307e
  40302f:	xchg   esi,eax
  403030:	xchg   ebx,eax
  403031:	pop    es
  403032:	push   0x942fa7b0
  403037:	cld    
  403038:	jo     0x402ffd
  40303a:	fs pop ecx
  40303c:	es call 0x1042:0x6a6e84d6
  403044:	adc    esi,DWORD PTR [ecx-0x25]
  403047:	call   0xb302:0xed93915c
  40304e:	je     0x4030b9
  403050:	pop    ecx
  403051:	jge    0x403036
  403053:	push   edi
  403054:	push   ebx
  403055:	nop
  403056:	mov    ecx,0x8603ecef
  40305b:	xor    ch,al
  40305d:	fsub   QWORD PTR [ebp+0x6ad44fb9]
  403063:	mov    WORD PTR [ecx+0x3c4999b2],ds
  403069:	sbb    al,0xb4
  40306b:	xor    eax,DWORD PTR [ebp+0x56]
  40306e:	aas    
  40306f:	dec    edi
  403070:	dec    edx
  403071:	xor    al,0xf8
  403073:	add    al,0x9b
  403075:	cdq    
  403076:	mov    BYTE PTR ds:0x36112ab5,ch
  40307c:	jmp    0x4030c8
  40307e:	imul   edx,DWORD PTR [edi],0x65
  403081:	push   0x4d19c868
  403086:	mov    al,0xaa
  403088:	or     bh,BYTE PTR [eax]
  40308a:	fdiv   st,st(4)
  40308c:	inc    esp
  40308d:	xchg   esi,eax
  40308e:	ret    
  40308f:	mov    ebx,0x241ae1f6
  403094:	pop    eax
  403095:	aad    0x61
  403097:	jecxz  0x4030a6
  403099:	mov    edi,0xd1d00468
  40309e:	mov    eax,0x9e3db383
  4030a3:	xchg   DWORD PTR [ecx-0x12ef477e],eax
  4030a9:	jmp    0xe324:0xc13262a3
  4030b0:	lods   al,BYTE PTR ds:[esi]
  4030b1:	out    0x8a,al
  4030b3:	inc    edx
  4030b4:	mov    ds:0xdbf1aed7,al
  4030b9:	pop    es
  4030ba:	je     0x40308d
  4030bc:	inc    esp
  4030bd:	leave  
  4030be:	jmp    0x4030e8
  4030c0:	xchg   esi,eax
  4030c1:	test   bh,0x56
  4030c4:	lds    esp,FWORD PTR [ecx-0x37]
  4030c7:	stc    
  4030c8:	(bad)  
  4030c9:	je     0x4030ab
  4030cb:	pop    esp
  4030cc:	in     eax,dx
  4030cd:	ret    0x5925
  4030d0:	jl     0x403137
  4030d2:	xchg   edi,eax
  4030d3:	adc    al,0x6e
  4030d5:	jecxz  0x403096
  4030d7:	sbb    ebx,DWORD PTR [ecx+0x78]
  4030da:	and    eax,0x986f6d9f
  4030df:	test   eax,0x9b7f0a1
  4030e4:	push   es
  4030e5:	jl     0x40311a
  4030e7:	repz aaa 
  4030e9:	or     DWORD PTR [ebp-0x73],esi
  4030ec:	pop    eax
  4030ed:	or     dh,BYTE PTR [eax+0x78]
  4030f0:	into   
  4030f1:	leave  
  4030f2:	test   eax,0x44cc6836
  4030f7:	adc    BYTE PTR [eax+0xb],al
  4030fa:	pop    esi
  4030fb:	stos   BYTE PTR es:[edi],al
  4030fc:	and    DWORD PTR [esi+0x16a20e1a],0x4e5164a9
  403106:	lock mov eax,ds:0xc5c44d26
  40310c:	push   esp
  40310d:	add    BYTE PTR ss:[eax+0x68],ah
  403111:	jmp    0xe361:0xbfc33b6e
  403118:	pop    eax
  403119:	sbb    BYTE PTR [ebp+0x11e165f8],al
  40311f:	jbe    0x403180
  403121:	es inc edx
  403123:	xchg   esp,eax
  403124:	shr    cl,1
  403126:	sub    BYTE PTR [edi+eax*8-0x63bfdcb9],ch
  40312d:	push   0x1650f812
  403132:	fcomp  QWORD PTR [ebx+esi*2]
  403135:	fstp   TBYTE PTR [edx]
  403137:	push   0xbee01cae
  40313c:	fwait
  40313d:	lods   eax,DWORD PTR ds:[esi]
  40313e:	mov    al,0x6c
  403140:	(bad)  
  403141:	out    0xe4,al
  403143:	or     eax,0xd19a9159
  403148:	scas   eax,DWORD PTR es:[edi]
  403149:	mov    esi,ecx
  40314b:	inc    esi
  40314c:	in     al,dx
  40314d:	cli    
  40314e:	xor    ecx,DWORD PTR [esi-0x34c323f4]
  403154:	retf   0x6dd3
  403157:	push   esp
  403158:	push   0x5b6a5ca0
  40315d:	jp     0x4031cb
  40315f:	dec    ecx
  403160:	sub    BYTE PTR [ebx+0x68],cl
  403163:	mov    al,ds:0xbad5cf5e
  403168:	dec    eax
  403169:	sub    esp,ebp
  40316b:	and    ebx,DWORD PTR [ebp-0x676f40a9]
  403171:	lea    edi,[esi+0x495189d6]
  403177:	repz es (bad) 
  40317a:	aam    0x5
  40317c:	xor    DWORD PTR ds:0x7e707f55,0xffffff90
  403183:	adc    BYTE PTR [ebx],0x6e
  403186:	outs   dx,DWORD PTR ds:[esi]
  403187:	push   ss
  403188:	stc    
  403189:	sar    BYTE PTR [edx-0x561cacd8],0xcd
  403190:	jnp    0x403166
  403192:	imul   esi,DWORD PTR [esi-0x72],0x53
  403196:	push   ss
  403197:	retf   0x20d3
  40319a:	cli    
  40319b:	sar    ecx,cl
  40319d:	mov    dl,0x56
  40319f:	fwait
  4031a0:	xchg   esp,eax
  4031a1:	push   ebp
  4031a2:	sub    BYTE PTR [ecx],dh
  4031a4:	sub    esp,DWORD PTR [edi]
  4031a6:	or     eax,0x93d44dba
  4031ab:	mov    edi,0x9534e89c
  4031b0:	or     esp,esi
  4031b2:	out    dx,eax
  4031b3:	clc    
  4031b4:	jne    0x403168
  4031b6:	test   eax,0x129f2403
  4031bb:	inc    edx
  4031bc:	mov    dh,0xb9
  4031be:	inc    esi
  4031bf:	jmp    0x67fd:0xfe58cda8
  4031c6:	dec    ebp
  4031c7:	loopne 0x403235
  4031c9:	fimul  WORD PTR [esi-0x2b792500]
  4031cf:	cmc    
  4031d0:	ret    
  4031d1:	or     dh,BYTE PTR [ebx-0x4524ca46]
  4031d7:	or     eax,DWORD PTR [edi+ebp*8]
  4031da:	data16 mov cl,0x32
  4031dd:	dec    esi
  4031de:	xchg   esi,eax
  4031df:	add    al,0x6a
  4031e1:	xchg   esp,eax
  4031e2:	ins    DWORD PTR es:[edi],dx
  4031e3:	xor    edi,DWORD PTR [edx-0x3acf7d90]
  4031e9:	jb     0x403182
  4031eb:	inc    BYTE PTR [ebx-0x1c]
  4031ee:	push   esp
  4031ef:	jne    0x4031e1
  4031f1:	push   edi
  4031f2:	xor    eax,0x2cf22347
  4031f7:	enter  0x3c8a,0x1c
  4031fb:	cdq    
  4031fc:	scas   al,BYTE PTR es:[edi]
  4031fd:	cmp    al,0x83
  4031ff:	adc    ebx,ebx
  403201:	popfw  
  403203:	stos   BYTE PTR es:[edi],al
  403204:	lods   eax,DWORD PTR ds:[esi]
  403205:	sub    BYTE PTR [edx-0x4adc3ea2],0x31
  40320c:	mov    bh,0x48
  40320e:	call   0x64ab678d
  403213:	clc    
  403214:	in     al,dx
  403215:	dec    eax
  403216:	jecxz  0x403244
  403218:	pop    edx
  403219:	adc    DWORD PTR [ecx-0xdd2abb2],esp
  40321f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403220:	cmc    
  403221:	jbe    0x4031e9
  403223:	pop    eax
  403224:	ret    0x1a51
  403227:	cmp    BYTE PTR [ebp+0x39],ch
  40322a:	xor    al,0x8c
  40322c:	in     al,0xfd
  40322e:	cmc    
  40322f:	mov    DWORD PTR [eax-0x547e6c51],esi
  403235:	push   ecx
  403236:	mov    BYTE PTR [ebx-0x397d14e7],0x6a
  40323d:	cld    
  40323e:	inc    DWORD PTR [ecx+0x72]
  403241:	xlat   BYTE PTR ds:[ebx]
  403242:	imul   edi,DWORD PTR [ebx-0x53],0xf45258cc
  403249:	in     al,dx
  40324a:	aad    0xd0
  40324c:	adc    DWORD PTR ds:0x520025ac,esi
  403252:	cld    
  403253:	lods   eax,DWORD PTR ds:[esi]
  403254:	cmp    eax,0x7a5d62e0
  403259:	push   0x6c
  40325b:	mov    cl,bl
  40325d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40325e:	sub    BYTE PTR [edx+0x43822f9f],dh
  403264:	bound  edx,QWORD PTR [ecx+0x17ff39e7]
  40326a:	outs   dx,BYTE PTR ds:[esi]
  40326b:	jmp    0x8ac5:0xf6e0f78f
  403272:	pop    ecx
  403273:	retf   0xd126
  403276:	mov    ds:0xabb293cc,eax
  40327b:	sahf   
  40327c:	add    BYTE PTR [edx+0x48],cl
  40327f:	arpl   WORD PTR [edi+0x29],sp
  403282:	fidiv  DWORD PTR [ecx]
  403284:	inc    edi
  403285:	sbb    ebp,eax
  403287:	xor    eax,0x1e4ff8df
  40328c:	(bad)  
  40328d:	push   esi
  40328e:	inc    esp
  40328f:	push   cs
  403290:	mov    ds,eax
  403292:	pop    ss
  403293:	mov    ds:0x93b3ea0c,eax
  403298:	ffree  st(1)
  40329a:	mov    WORD PTR [ebx],ds
  40329c:	xchg   esi,eax
  40329d:	cs inc edx
  40329f:	pop    eax
  4032a0:	or     al,BYTE PTR [eax+0x35926487]
  4032a6:	xchg   edi,eax
  4032a7:	push   cs
  4032a8:	(bad)  
  4032a9:	mov    gs:0xefd2ad21,al
  4032af:	sbb    edi,eax
  4032b1:	loopne 0x403315
  4032b3:	cmp    eax,0x46cd27c1
  4032b8:	add    DWORD PTR [eax],edi
  4032ba:	jmp    0x403250
  4032bc:	mov    eax,0xb659b1d0
  4032c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032c2:	lods   eax,DWORD PTR ds:[esi]
  4032c3:	clc    
  4032c4:	adc    al,0x2b
  4032c6:	fld    TBYTE PTR [esi-0x23]
  4032c9:	lods   al,BYTE PTR ds:[esi]
  4032ca:	outs   dx,BYTE PTR ds:[esi]
  4032cb:	xchg   ecx,eax
  4032cc:	daa    
  4032cd:	outs   dx,BYTE PTR ds:[esi]
  4032ce:	push   esp
  4032cf:	ret    
  4032d0:	aas    
  4032d1:	imul   BYTE PTR [ebx+eax*2]
  4032d4:	or     al,bl
  4032d6:	iret   
  4032d7:	dec    edx
  4032d8:	popa   
  4032d9:	push   ds
  4032da:	sub    bl,BYTE PTR [edx]
  4032dc:	mov    ds:0xe1cf66f5,eax
  4032e1:	test   eax,0xf94de65a
  4032e6:	js     0x403278
  4032e8:	mov    eax,ds:0xd96850af
  4032ed:	push   esi
  4032ee:	pop    edx
  4032ef:	mov    ds:0x26a62b9,eax
  4032f4:	mov    bh,0xa2
  4032f6:	xchg   DWORD PTR [ebx],ebx
  4032f8:	mov    dh,0x1d
  4032fa:	in     eax,0xe1
  4032fc:	and    dl,ah
  4032fe:	icebp  
  4032ff:	jb     0x403348
  403301:	sbb    eax,0xd466c15c
  403306:	sti    
  403307:	and    eax,0xd52a5465
  40330c:	sti    
  40330d:	inc    esi
  40330e:	ins    BYTE PTR es:[edi],dx
  40330f:	stos   DWORD PTR es:[edi],eax
  403310:	mov    al,ds:0x5784538c
  403315:	inc    ebp
  403316:	pop    ss
  403317:	sub    al,0x56
  403319:	dec    ebp
  40331a:	cmp    al,0xf6
  40331c:	stos   BYTE PTR es:[edi],al
  40331d:	jnp    0x4032c6
  40331f:	lea    eax,[ebx-0x2f]
  403322:	hlt    
  403323:	dec    eax
  403324:	cwde   
  403325:	popa   
  403326:	pop    es
  403327:	fdiv   st,st(5)
  403329:	icebp  
  40332a:	jmp    0xbdc6:0xd5c62a61
  403331:	fdiv   DWORD PTR [ebx]
  403333:	aas    
  403334:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403335:	sub    ch,BYTE PTR [edx+0x8]
  403338:	jae    0x403305
  40333a:	in     eax,0xb
  40333c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40333d:	and    bl,BYTE PTR [edi]
  40333f:	inc    esp
  403340:	dec    esp
  403341:	call   0xe0dbb25a
  403346:	sti    
  403347:	cdq    
  403348:	lods   eax,DWORD PTR ds:[esi]
  403349:	adc    edx,esi
  40334b:	add    BYTE PTR [edx+0x5],ch
  40334e:	sbb    eax,0x517fe525
  403353:	pop    ebx
  403354:	jmp    0x276b:0x2fec5c78
  40335b:	push   esi
  40335c:	in     eax,dx
  40335d:	add    BYTE PTR [eax+0x1a389c6d],ah
  403363:	jns    0x403392
  403365:	cdq    
  403366:	pop    es
  403367:	xchg   edi,eax
  403368:	jle    0x403387
  40336a:	pop    ss
  40336b:	sub    cl,BYTE PTR [eax]
  40336d:	loopne 0x4033ab
  40336f:	rol    BYTE PTR [esi+0x59c25b70],0xa6
  403376:	adc    eax,0xbb4900c3
  40337b:	mov    bl,0xbb
  40337d:	jle    0x4033e4
  40337f:	call   0xf2ac4b0e
  403384:	pop    ss
  403385:	stc    
  403386:	or     BYTE PTR [ebx+0x7e],ch
  403389:	mov    esp,0x7f45749
  40338e:	fs test al,0xb3
  403391:	jl     0x40331a
  403393:	ds push eax
  403395:	outs   dx,BYTE PTR ds:[esi]
  403396:	inc    esi
  403397:	enter  0x1ef4,0xc2
  40339b:	mov    ecx,DWORD PTR [edi-0x220025de]
  4033a1:	imul   eax,DWORD PTR ds:0xd82e02d0,0x2f
  4033a8:	test   al,0x94
  4033aa:	xor    edx,ebp
  4033ac:	sub    BYTE PTR [esi+0x24b57854],al
  4033b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033b3:	out    0xf8,al
  4033b5:	(bad)  
  4033b6:	mov    ch,0x83
  4033b8:	sub    BYTE PTR [ecx+0x439c85ac],bh
  4033be:	add    DWORD PTR [ecx+0x2c],esi
  4033c1:	das    
  4033c2:	ror    dh,cl
  4033c4:	add    DWORD PTR [esi+0xd],esp
  4033c7:	pusha  
  4033c8:	sbb    al,0xf3
  4033ca:	bnd jnp 0x4033ea
  4033cd:	mov    dh,0x3e
  4033cf:	fisub  DWORD PTR [eax+0x99376a3]
  4033d5:	push   ecx
  4033d6:	and    eax,0xd4c119b
  4033db:	push   ss
  4033dc:	mov    ds:0xd863a0e7,eax
  4033e1:	add    al,0xb
  4033e3:	push   esi
  4033e4:	and    bh,BYTE PTR cs:[esi+0x5f]
  4033e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033e9:	cmp    esi,DWORD PTR ds:0xbb74666d
  4033ef:	push   esi
  4033f0:	ins    DWORD PTR es:[edi],dx
  4033f1:	in     al,0xc3
  4033f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033f4:	iret   
  4033f5:	cmp    eax,0x2c60ffb0
  4033fa:	jge    0x4033d9
  4033fc:	or     BYTE PTR [edx-0x4c35c3d1],al
  403402:	sub    al,0x3f
  403404:	push   esp
  403405:	into   
  403406:	dec    ebp
  403407:	ffreep st(3)
  403409:	rol    BYTE PTR [ebx],cl
  40340b:	add    DWORD PTR [esi],edx
  40340d:	adc    BYTE PTR [ecx-0x9],0x0
  403411:	jmp    0x4033df
  403413:	mov    dh,0x49
  403415:	popa   
  403416:	add    BYTE PTR [eax-0x1d],dh
  403419:	outs   dx,DWORD PTR ds:[esi]
  40341a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40341b:	aad    0x75
  40341d:	das    
  40341e:	retf   
  40341f:	adc    al,0x68
  403421:	jmp    0x9c7ced9d
  403426:	and    BYTE PTR [edx],dl
  403428:	ret    
  403429:	bound  ecx,QWORD PTR [ebx+esi*8+0x79cf10b6]
  403430:	pop    es
  403431:	jp     0x4033e8
  403433:	(bad)  
  403434:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403435:	cmp    bl,BYTE PTR [esi]
  403437:	or     ch,dl
  403439:	mov    ebp,DWORD PTR [ebx]
  40343b:	fisubr WORD PTR [ecx+0x37a413c3]
  403441:	in     al,0xfd
  403443:	fbld   TBYTE PTR [ebx]
  403445:	add    al,0xf2
  403447:	xor    DWORD PTR [edi],edi
  403449:	scas   eax,DWORD PTR es:[edi]
  40344a:	sahf   
  40344b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40344c:	xlat   BYTE PTR ds:[ebx]
  40344d:	xor    BYTE PTR [esi+0x35],0xa1
  403451:	adc    al,0x76
  403453:	fild   QWORD PTR [esi-0x51]
  403456:	sti    
  403457:	std    
  403458:	push   ebp
  403459:	or     BYTE PTR [eax+eiz*2-0x478b820c],dh
  403460:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403461:	adc    al,0x65
  403463:	mov    cl,dh
  403465:	or     esi,DWORD PTR [eax+0x1a130f0d]
  40346b:	inc    esi
  40346c:	add    al,0x5c
  40346e:	jbe    0x4034df
  403470:	enter  0x4f42,0xc6
  403474:	fwait
  403475:	(bad)  
  403476:	bound  edi,QWORD PTR [ecx+0x18310761]
  40347c:	jnp    0x4034bb
  40347e:	adc    esi,esi
  403480:	pop    ss
  403481:	xchg   esi,eax
  403482:	cwde   
  403483:	bound  edi,QWORD PTR [ecx-0x56]
  403486:	ins    DWORD PTR es:[edi],dx
  403487:	jae    0x4034a6
  403489:	or     esi,0x7a0f885c
  40348f:	jp     0x403490
  403491:	imul   esp,DWORD PTR ds:0xa8ab9ef3,0x875f195a
  40349b:	mov    dl,BYTE PTR gs:[edi]
  40349e:	out    0xdd,al
  4034a0:	mov    ebx,0x1f797963
  4034a5:	sub    ch,al
  4034a7:	test   al,0x9a
  4034a9:	xor    DWORD PTR [ecx-0x39245ff6],edx
  4034af:	add    ebx,DWORD PTR [ebp+0x33]
  4034b2:	ins    DWORD PTR es:[edi],dx
  4034b3:	shr    BYTE PTR [eax-0xc4adf3e],cl
  4034b9:	fwait
  4034ba:	jle    0x40351e
  4034bc:	mov    edi,edi
  4034be:	pop    edi
  4034bf:	or     ebx,DWORD PTR [eax-0x73]
  4034c2:	inc    edx
  4034c3:	shl    ebx,cl
  4034c5:	dec    esp
  4034c6:	stos   DWORD PTR es:[edi],eax
  4034c7:	mov    edx,0xa98e39e8
  4034cc:	or     DWORD PTR [ebx-0x72dd78c5],0xffffffcb
  4034d3:	fild   DWORD PTR [esi+0x20df95b5]
  4034d9:	jl     0x403492
  4034db:	jmp    0xe2c6:0x869a5d0e
  4034e2:	mov    eax,gs
  4034e4:	xchg   edx,eax
  4034e5:	adc    dh,BYTE PTR [ebx+0x76066e57]
  4034eb:	add    al,0x19
  4034ed:	sub    BYTE PTR [esi],dl
  4034ef:	fist   DWORD PTR [ebx]
  4034f1:	rcr    BYTE PTR [eax+0x26],0xfe
  4034f5:	and    dl,BYTE PTR [edi-0x251edb7]
  4034fb:	(bad)  
  4034fc:	out    dx,al
  4034fd:	mov    esi,0x81a56728
  403502:	pop    ds
  403503:	mov    eax,ds:0xc246cf2a
  403508:	pop    ss
  403509:	push   es
  40350a:	jle    0x403530
  40350c:	push   esp
  40350d:	cld    
  40350e:	out    0x62,eax
  403510:	sub    BYTE PTR [ebx],bl
  403512:	loopne 0x4034fe
  403514:	scas   al,BYTE PTR es:[edi]
  403515:	push   edx
  403516:	mov    esi,0x24d60513
  40351b:	mov    al,ds:0x7c5d8159
  403520:	push   ds
  403521:	jno    0x4034ca
  403523:	call   0xcafb:0x4be12be5
  40352a:	mov    esp,0x50322eec
  40352f:	jmp    0x403574
  403531:	sub    eax,0xcd9671ab
  403536:	pop    ss
  403537:	popa   
  403538:	xchg   ebp,eax
  403539:	cmp    al,0xc6
  40353b:	and    eax,0xc058b4b2
  403540:	ret    0x6066
  403543:	and    esi,DWORD PTR [esp+edx*2+0x6a]
  403547:	pop    ds
  403548:	adc    DWORD PTR [edi+0x41dd9754],ecx
  40354e:	jbe    0x4034de
  403550:	dec    ecx
  403551:	mov    bh,0xc4
  403553:	int    0xb0
  403555:	inc    edx
  403556:	mov    ecx,0x21b6193b
  40355b:	xchg   BYTE PTR [eax+0x4a534e42],bh
  403561:	call   0xe6195923
  403566:	push   ebx
  403567:	inc    edx
  403568:	pop    ecx
  403569:	fs ins DWORD PTR es:[edi],dx
  40356b:	rcl    bh,cl
  40356d:	in     eax,0xda
  40356f:	push   0x4287bc59
  403574:	sbb    ch,dl
  403576:	push   0xfa62c105
  40357b:	mov    WORD PTR [esi-0x57],fs
  40357e:	jb     0x403509
  403580:	sbb    al,0x50
  403582:	out    dx,al
  403583:	push   ecx
  403584:	pusha  
  403585:	gs lahf 
  403587:	fld    DWORD PTR [esi+0x27]
  40358a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40358b:	(bad)  
  40358c:	bound  esi,QWORD PTR [edx+0x56653a78]
  403592:	neg    DWORD PTR [eax]
  403594:	xor    esp,DWORD PTR [ecx]
  403596:	or     esp,DWORD PTR [esi]
  403598:	loopne 0x4035b6
  40359a:	mov    ebp,0xab689aea
  40359f:	sub    BYTE PTR [eax+0x76bfdf7],bh
  4035a5:	mov    DWORD PTR [edi-0x50],ebp
  4035a8:	xchg   esp,eax
  4035a9:	and    BYTE PTR [edx+0x68],dh
  4035ac:	mov    ecx,cs
  4035ae:	repz pop edx
  4035b0:	mov    eax,0xe749aecf
  4035b5:	stos   BYTE PTR es:[edi],al
  4035b6:	stc    
  4035b7:	or     ebp,DWORD PTR [ebx+0x2e]
  4035ba:	add    dh,cl
  4035bc:	xchg   bh,bl
  4035be:	mov    ch,0xf7
  4035c0:	repz or al,0xef
  4035c3:	out    0x86,eax
  4035c5:	dec    ecx
  4035c6:	imul   ebp,DWORD PTR [edi+0x2b],0xc8bac440
  4035cd:	xor    edi,edx
  4035cf:	inc    edx
  4035d0:	ficomp WORD PTR [ebx+0x77]
  4035d3:	mov    edx,0x72a2874c
  4035d8:	sbb    bh,BYTE PTR [eax]
  4035da:	adc    ebx,DWORD PTR [esi-0x29]
  4035dd:	ret    0x2c36
  4035e0:	xchg   edx,eax
  4035e1:	aam    0xce
  4035e3:	dec    esp
  4035e4:	lea    eax,[ecx+ecx*4]
  4035e7:	out    0x1b,eax
  4035e9:	inc    esp
  4035ea:	aas    
  4035eb:	push   edx
  4035ec:	jp     0x40359d
  4035ee:	shl    DWORD PTR [esi],cl
  4035f0:	xchg   ebx,eax
  4035f1:	jg     0x403656
  4035f3:	imul   esi,DWORD PTR [eax],0x53435439
  4035f9:	push   0x6d81935e
  4035fe:	sbb    al,0x36
  403600:	sbb    BYTE PTR [eax],0xf
  403603:	xor    DWORD PTR [edi-0x23],0x5e6b7c6
  40360a:	pop    esi
  40360b:	inc    eax
  40360c:	sub    ah,dh
  40360e:	adc    al,0x23
  403610:	fwait
  403611:	cwde   
  403612:	add    ebx,DWORD PTR [eax+ebx*1+0x74]
  403616:	push   ecx
  403617:	repnz stc 
  403619:	inc    edi
  40361a:	push   ecx
  40361b:	and    bl,bl
  40361d:	mov    cl,0x4a
  40361f:	aaa    
  403620:	dec    ebx
  403621:	and    al,0x6e
  403623:	jns    0x40369f
  403625:	sbb    eax,0x139f5914
  40362a:	push   es
  40362b:	mov    ebp,0xc1e5ac73
  403630:	pop    esi
  403631:	(bad)  
  403632:	and    DWORD PTR [ecx],ebx
  403634:	xchg   esi,eax
  403635:	or     eax,DWORD PTR [esi+eax*1]
  403638:	push   cs
  403639:	fs jle 0x4036ba
  40363c:	adc    dh,BYTE PTR [edi-0x1c]
  40363f:	push   ebx
  403640:	rcl    DWORD PTR [edx-0x157ab256],0xc6
  403647:	out    dx,eax
  403648:	shr    BYTE PTR [esi+eiz*1-0x7c3ea2c7],0xfc
  403650:	hlt    
  403651:	dec    edi
  403652:	les    edx,FWORD PTR [edx+0x6c1976eb]
  403658:	int    0x16
  40365a:	imul   esi,DWORD PTR [ebp-0x64],0x12744bcc
  403661:	push   ds
  403662:	push   ebx
  403663:	int    0x7e
  403665:	ins    DWORD PTR es:[edi],dx
  403666:	mov    edi,DWORD PTR [ebx+ebx*8-0x6db46387]
  40366d:	div    BYTE PTR es:[edi]
  403670:	jno    0x40363e
  403672:	das    
  403673:	jae    0x4036c9
  403675:	mov    bl,0x6c
  403677:	imul   DWORD PTR [ebx-0x50f719a3]
  40367d:	in     al,dx
  40367e:	(bad)  
  40367f:	sub    al,0xd7
  403681:	xchg   ebx,eax
  403682:	mov    ?,esp
  403684:	sub    BYTE PTR [ebx],0x87
  403687:	push   esi
  403688:	xchg   DWORD PTR ds:0xc2e5b99f,eax
  40368e:	push   ebp
  40368f:	imul   esp,DWORD PTR [ebx+esi*4+0x4e],0x2af91571
  403697:	cmp    al,0x9f
  403699:	cwde   
  40369a:	or     edi,DWORD PTR [ebp+0x6981a8b2]
  4036a0:	in     eax,0xee
  4036a2:	pop    edi
  4036a3:	cmp    ah,dl
  4036a5:	add    eax,0xe4ee5393
  4036aa:	mov    ch,0x79
  4036ac:	push   esp
  4036ad:	fidiv  DWORD PTR [ebx-0x43c6cd19]
  4036b3:	shl    DWORD PTR [eax+0x61],1
  4036b6:	in     al,dx
  4036b7:	xchg   bl,bl
  4036b9:	fiadd  WORD PTR [edx+0x43]
  4036bc:	xor    ah,BYTE PTR [edx+ecx*2-0x1a]
  4036c0:	jl     0x4036e7
  4036c2:	pop    esi
  4036c3:	jmp    0x403689
  4036c5:	arpl   WORD PTR [edx],bp
  4036c7:	push   ss
  4036c8:	ins    DWORD PTR es:[edi],dx
  4036c9:	gs (bad) 
  4036cc:	push   ebx
  4036cd:	add    bh,BYTE PTR [esi-0x39]
  4036d0:	mov    eax,ds:0x38ddfe4d
  4036d5:	lds    edx,FWORD PTR [edi+edi*8+0x481face0]
  4036dc:	jl     0x40370a
  4036de:	call   0x53b68b99
  4036e3:	mov    esp,0x2cd548f
  4036e8:	adc    DWORD PTR [eax-0x65961960],ecx
  4036ee:	jne    0x4036a5
  4036f0:	ret    
  4036f1:	xchg   esi,eax
  4036f2:	jecxz  0x40370d
  4036f4:	adc    bl,BYTE PTR [edi]
  4036f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036f7:	push   eax
  4036f8:	scas   eax,DWORD PTR es:[edi]
  4036f9:	imul   ebx,DWORD PTR [ecx-0x65],0x5019c400
  403700:	es sahf 
  403702:	sub    eax,0xa2306359
  403707:	jns    0x403782
  403709:	rcr    DWORD PTR [edi+0x4b139f9b],1
  40370f:	cwde   
  403710:	dec    esp
  403711:	push   cs
  403712:	je     0x403760
  403714:	adc    DWORD PTR [edi-0x38e0ab46],esi
  40371a:	ja     0x403720
  40371c:	jno    0x403712
  40371e:	mov    ch,0xd3
  403720:	dec    edx
  403721:	sbb    edx,DWORD PTR [ebx+0x5554447b]
  403727:	pop    ebx
  403728:	or     ebp,DWORD PTR [eax]
  40372a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40372b:	xlat   BYTE PTR ds:[ebx]
  40372c:	xchg   ebp,eax
  40372d:	sbb    al,0xb2
  40372f:	test   BYTE PTR [edx],bh
  403731:	cmp    eax,DWORD PTR [esi]
  403733:	call   0xfaee98e3
  403738:	mov    dl,0xe3
  40373a:	scas   eax,DWORD PTR es:[edi]
  40373b:	inc    edx
  40373c:	loope  0x40373f
  40373e:	leave  
  40373f:	lock inc eax
  403741:	dec    esp
  403742:	inc    esi
  403743:	or     al,0x15
  403745:	repnz xchg ebp,eax
  403747:	xchg   esi,eax
  403748:	push   edi
  403749:	jmp    0x4036e6
  40374b:	ret    
  40374c:	call   0xf768:0xc17456c2
  403753:	fwait
  403754:	shr    BYTE PTR [ecx+0x4f],1
  403757:	jne    0x40370e
  403759:	dec    edx
  40375a:	push   0x7b
  40375c:	xchg   ebx,eax
  40375d:	aad    0x75
  40375f:	inc    ecx
  403760:	jo     0x40370d
  403762:	cmp    al,BYTE PTR [edx]
  403764:	push   ebp
  403765:	pusha  
  403766:	fsub   DWORD PTR [ebx]
  403768:	cmp    eax,0x74db446a
  40376d:	cmp    DWORD PTR [esi+esi*8+0x7a],esp
  403771:	add    al,0xa2
  403773:	mov    ah,0x9f
  403775:	(bad)  
  403776:	in     al,dx
  403777:	cmp    al,0x13
  403779:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40377a:	sub    bl,ah
  40377c:	imul   ebx,esi,0x1e1d7efb
  403782:	fnstsw WORD PTR [eax+0x28]
  403785:	scas   al,BYTE PTR es:[edi]
  403786:	xor    BYTE PTR [esi-0x6002f054],ah
  40378c:	ss in  eax,0x93
  40378f:	ds pop eax
  403791:	inc    ecx
  403792:	sub    eax,0x32449da1
  403797:	push   eax
  403798:	fistp  DWORD PTR [esi]
  40379a:	xor    cl,al
  40379c:	mov    dl,0x9f
  40379e:	adc    DWORD PTR ds:0xd5ef1862,ecx
  4037a4:	and    al,0x5c
  4037a6:	ss pop edi
  4037a8:	inc    di
  4037aa:	or     ebx,DWORD PTR [eax+0x5ae32a18]
  4037b0:	add    edi,DWORD PTR [esi]
  4037b2:	add    al,0xd4
  4037b4:	pop    eax
  4037b5:	sbb    al,0x5e
  4037b7:	in     eax,0x16
  4037b9:	cmc    
  4037ba:	add    al,0x74
  4037bc:	or     DWORD PTR [edx],eax
  4037be:	daa    
  4037bf:	push   ds
  4037c0:	mov    eax,ds:0x55ccea
  4037c5:	adc    BYTE PTR [ebp+eax*2-0x16],bl
  4037c9:	loop   0x4037a8
  4037cb:	mov    ebx,0x4cb952c7
  4037d0:	aaa    
  4037d1:	cmp    edi,ebx
  4037d3:	sbb    ch,al
  4037d5:	loope  0x403822
  4037d7:	pop    es
  4037d8:	mov    al,0x9
  4037da:	pop    eax
  4037db:	popf   
  4037dc:	adc    bl,0x26
  4037df:	or     BYTE PTR [esi-0x3bee9bd],ah
  4037e5:	jbe    0x40377d
  4037e7:	(bad)  
  4037e8:	mov    edx,0x3cac12a4
  4037ed:	imul   edx,esp,0x5d1db69a
  4037f3:	inc    edx
  4037f4:	repnz out dx,eax
  4037f6:	js     0x4037c9
  4037f8:	popa   
  4037f9:	mov    ecx,DWORD PTR ss:[ecx+0x149f789c]
  403800:	aas    
  403801:	or     eax,DWORD PTR [ebx]
  403803:	mov    al,ds:0x6efdfb56
  403808:	ret    
  403809:	clc    
  40380a:	ret    
  40380b:	cmp    dl,ch
  40380d:	mov    ah,0x7c
  40380f:	xchg   ebx,eax
  403810:	and    al,0xf4
  403812:	sub    al,0xac
  403814:	sbb    eax,DWORD PTR [eax-0x5e]
  403817:	out    0x1b,eax
  403819:	rcr    BYTE PTR [edx],cl
  40381b:	xchg   ecx,eax
  40381c:	imul   ebp,DWORD PTR [esi-0x967370c],0xb0b54192
  403826:	dec    esp
  403827:	dec    edx
  403828:	xor    dl,BYTE PTR [edx]
  40382a:	cmp    cl,cl
  40382c:	cmp    ch,bh
  40382e:	dec    esi
  40382f:	xor    DWORD PTR [eax+0x2d],ebp
  403832:	shr    ah,1
  403834:	in     eax,dx
  403835:	mov    edx,0x43bf1a2b
  40383a:	lds    esi,FWORD PTR [ebx+0x2d]
  40383d:	mov    dh,0xb5
  40383f:	mov    dl,0x11
  403841:	add    eax,0x3d5a77b6
  403846:	(bad)  
  403848:	sbb    al,0x5e
  40384a:	mov    WORD PTR [ecx-0x5f],es
  40384d:	xor    al,0x15
  40384f:	pop    ds
  403850:	lods   al,BYTE PTR ds:[esi]
  403851:	and    edi,ecx
  403853:	mov    edx,0x907070d9
  403858:	shl    DWORD PTR [ebp-0x1f],1
  40385b:	sbb    eax,0xf2f171c2
  403860:	mov    cl,0xd
  403862:	cmp    DWORD PTR ds:0x82e48904,esp
  403868:	mov    BYTE PTR [di-0x6f19],dl
  40386d:	push   esp
  40386e:	retf   0xbd9d
  403871:	jp     0x4038b7
  403873:	test   al,0xae
  403875:	pop    ds
  403876:	mov    BYTE PTR [ecx+0x70],ch
  403879:	xlat   BYTE PTR ds:[ebx]
  40387a:	xor    dl,al
  40387c:	outs   dx,BYTE PTR ds:[esi]
  40387d:	imul   esi,DWORD PTR [eax+0x4337f5d1],0xeee70171
  403887:	mov    eax,0xc9749b65
  40388c:	mov    bh,0xa1
  40388e:	jae    0x4038a4
  403890:	or     dl,BYTE PTR [edx-0x4679fefe]
  403896:	loop   0x4038e5
  403898:	out    0x13,al
  40389a:	les    edx,FWORD PTR [edi+0x72b293d9]
  4038a0:	mov    dh,0x75
  4038a2:	fwait
  4038a3:	jle    0x403904
  4038a5:	out    dx,al
  4038a6:	or     DWORD PTR [ecx],edx
  4038a8:	mov    al,0x33
  4038aa:	jns    0x4038f1
  4038ac:	jmp    0x403909
  4038ae:	mov    eax,ds:0xe6a93fc0
  4038b3:	xchg   esp,eax
  4038b4:	ss adc eax,0xa12c245b
  4038ba:	mov    BYTE PTR [edx],bh
  4038bc:	jl     0x4038c8
  4038be:	and    BYTE PTR [edx],cl
  4038c0:	leave  
  4038c1:	mov    edi,0xcba8154d
  4038c6:	dec    edx
  4038c7:	imul   edi,DWORD PTR ds:0xecb63ef,0x8c4dd586
  4038d1:	aad    0x7d
  4038d3:	sub    al,0xaf
  4038d5:	push   0xd43b8249
  4038da:	mov    ds:0x378633a2,al
  4038df:	fmul   st(5),st
  4038e1:	mov    bh,0xc9
  4038e3:	and    ch,BYTE PTR [ecx-0x3dc33cef]
  4038e9:	mov    ch,0xd1
  4038eb:	xor    al,0x3
  4038ed:	jecxz  0x40396b
  4038ef:	push   esp
  4038f0:	jge    0x4038ed
  4038f2:	scas   eax,DWORD PTR es:[edi]
  4038f3:	and    BYTE PTR [ecx],0x9c
  4038f6:	adc    DWORD PTR [edi+edx*4],ebx
  4038f9:	push   ecx
  4038fa:	adc    eax,ebp
  4038fc:	sbb    cl,BYTE PTR [edi]
  4038fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038ff:	dec    eax
  403900:	jmp    0x403950
  403902:	stos   DWORD PTR es:[edi],eax
  403903:	icebp  
  403904:	mov    esi,0x9fa64566
  403909:	sbb    al,0x7
  40390b:	ror    BYTE PTR [eax-0x43d3739e],cl
  403911:	imul   esp,DWORD PTR [esi+0x720011ad],0x725fb862
  40391b:	mov    edi,0x9c8b5208
  403920:	and    BYTE PTR [eax+0x7a558134],dl
  403926:	sti    
  403927:	mov    al,0xb3
  403929:	(bad)  
  40392a:	int    0x6e
  40392c:	lea    edx,[edi]
  40392e:	inc    ecx
  40392f:	jmp    0x2bd0:0xb2e39db7
  403936:	pop    es
  403937:	fsub   DWORD PTR [esp+eiz*4+0x5]
  40393b:	cmp    al,0x74
  40393d:	pop    ds
  40393e:	mov    ebp,0x54682f36
  403943:	sbb    ecx,0x55
  403946:	aad    0xad
  403948:	ds mov cl,0xe8
  40394b:	lahf   
  40394c:	ins    BYTE PTR es:[edi],dx
  40394d:	cmp    al,0xd3
  40394f:	mov    edi,ebx
  403951:	jno    0x40391c
  403953:	cdq    
  403954:	cmp    eax,0xb54dc58c
  403959:	icebp  
  40395a:	lock xchg ebp,eax
  40395c:	(bad)  
  403960:	dec    edx
  403961:	cmp    DWORD PTR [edx+0x75c0202b],esp
  403967:	out    0x4e,eax
  403969:	inc    edx
  40396a:	mov    ds:0x1f3aea05,eax
  40396f:	mov    edi,0xc07d4ecc
  403974:	out    dx,eax
  403975:	call   0xe4f9:0x47c41a9b
  40397c:	and    al,0x8c
  40397e:	sub    edi,DWORD PTR ds:[esi+0x26]
  403982:	(bad)  
  403983:	mov    al,0x22
  403985:	add    eax,0x918fd9f4
  40398a:	xchg   esi,eax
  40398b:	xor    ecx,ebx
  40398d:	push   esp
  40398e:	mov    al,ds:0xc433ad0a
  403993:	gs inc esi
  403995:	jbe    0x403920
  403997:	adc    ah,BYTE PTR [ecx+0x5b]
  40399a:	sahf   
  40399b:	push   edx
  40399c:	ins    DWORD PTR es:[edi],dx
  40399d:	jle    0x403a16
  40399f:	mov    edx,ds
  4039a1:	xchg   ebx,eax
  4039a2:	in     al,dx
  4039a3:	pop    ebx
  4039a4:	retf   
  4039a5:	mov    ds:0x7010229a,al
  4039aa:	xchg   edx,eax
  4039ab:	sti    
  4039ac:	push   edi
  4039ad:	and    ebx,DWORD PTR [edi-0x4885dceb]
  4039b3:	and    dl,BYTE PTR ds:0xc6ebb90e
  4039b9:	add    bh,dl
  4039bb:	ins    BYTE PTR es:[edi],dx
  4039bc:	push   0xef504438
  4039c1:	sbb    DWORD PTR [eax-0x25ab9cdf],ebp
  4039c7:	add    DWORD PTR [ecx+esi*2+0x7d],0x8bc6bf02
  4039cf:	push   DWORD PTR [eax+edx*1-0x7d]
  4039d3:	arpl   WORD PTR [esi+0x8e5ff96],bx
  4039d9:	dec    esi
  4039da:	push   ss
  4039db:	xor    esi,esi
  4039dd:	imul   edx,DWORD PTR [ebx-0x12],0x5
  4039e1:	inc    edi
  4039e2:	es pop edx
  4039e4:	jmp    0x4039b2
  4039e6:	sub    esp,DWORD PTR [ebx]
  4039e8:	xor    DWORD PTR [ebx+0x524621d8],0xd5578f1b
  4039f2:	jbe    0x4039ec
  4039f4:	xor    DWORD PTR [eax+0x6d],esp
  4039f7:	dec    edi
  4039f8:	pop    ecx
  4039f9:	mov    dl,0xb6
  4039fb:	inc    edx
  4039fc:	push   0x46
  4039fe:	pop    ecx
  4039ff:	xor    DWORD PTR [ebx+0x2b],ebp
  403a02:	xchg   ebp,eax
  403a03:	lock test al,0x94
  403a06:	cld    
  403a07:	jne    0x403a75
  403a09:	inc    esp
  403a0a:	and    BYTE PTR [edi],ch
  403a0c:	test   DWORD PTR ds:0xf6b8303b,esp
  403a12:	inc    ebp
  403a13:	push   ebp
  403a14:	jne    0x403a38
  403a16:	dec    ecx
  403a17:	and    bl,al
  403a19:	and    eax,0x341e611f
  403a1e:	xchg   edi,eax
  403a1f:	push   esi
  403a20:	and    BYTE PTR [ecx-0x3],0xb9
  403a24:	pop    esp
  403a25:	dec    ebx
  403a26:	pop    ebx
  403a27:	mov    dl,0xcc
  403a29:	dec    eax
  403a2a:	inc    ecx
  403a2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a2c:	bound  ebp,QWORD PTR ds:0x97e27541
  403a32:	adc    bl,BYTE PTR [edi+0x3a]
  403a35:	fs jl  0x4039c4
  403a38:	adc    al,BYTE PTR [eax-0x4946075c]
  403a3e:	pop    ebx
  403a3f:	add    eax,0x18fc2f38
  403a44:	loop   0x403a41
  403a46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a47:	mov    dl,0x81
  403a49:	out    dx,al
  403a4a:	scas   al,BYTE PTR es:[edi]
  403a4b:	and    al,0x6b
  403a4d:	cmp    BYTE PTR [ebx+0x543a7b0c],bl
  403a53:	inc    eax
  403a54:	sbb    DWORD PTR [edx-0x52d1ecec],edx
  403a5a:	rcr    DWORD PTR [eax-0x7681633b],1
  403a60:	stc    
  403a61:	neg    BYTE PTR [edx+0x5eb1799b]
  403a67:	add    DWORD PTR [ecx+0x669b2b9f],ebx
  403a6d:	arpl   WORD PTR [eax+0x7aebef74],dx
  403a73:	gs es fwait
  403a76:	add    BYTE PTR [esi],cl
  403a78:	push   edx
  403a79:	jne    0x403ae7
  403a7b:	sbb    dl,BYTE PTR [edi]
  403a7d:	sub    al,0x87
  403a7f:	pop    ecx
  403a80:	xchg   ecx,eax
  403a81:	cmc    
  403a82:	mov    ebx,0x9d0983d9
  403a87:	addr16 imul esi,ebx,0xffffffd1
  403a8b:	icebp  
  403a8c:	cs lahf 
  403a8e:	push   ecx
  403a8f:	test   eax,0x15f9120d
  403a94:	(bad)  
  403a95:	dec    ebp
  403a96:	xchg   ebp,eax
  403a97:	jge    0x403a1d
  403a99:	(bad)  [edx]
  403a9b:	aaa    
  403a9c:	sub    DWORD PTR [esp+ebp*4-0x31],edi
  403aa0:	pop    esi
  403aa1:	shl    DWORD PTR [edx-0x3a49fa8],1
  403aa7:	cwde   
  403aa8:	mov    WORD PTR [ebp+ebx*1-0x5a],gs
  403aac:	retf   0xcc84
  403aaf:	stos   BYTE PTR es:[edi],al
  403ab0:	adc    al,dh
  403ab2:	lods   al,BYTE PTR ds:[esi]
  403ab3:	cmc    
  403ab4:	les    ebp,FWORD PTR [edi+0x6ecebf69]
  403aba:	xchg   ch,dl
  403abc:	adc    DWORD PTR [edi],ecx
  403abe:	push   es
  403abf:	or     cl,BYTE PTR [ebp+0x6a]
  403ac2:	adc    BYTE PTR [eax-0x9],ah
  403ac5:	jae    0x403b3a
  403ac7:	xchg   ecx,eax
  403ac8:	ficom  WORD PTR [ecx]
  403aca:	jecxz  0x403a77
  403acc:	cmp    DWORD PTR [esi-0xc],edx
  403acf:	ret    
  403ad0:	sbb    BYTE PTR [esi-0x45e88706],dh
  403ad6:	shr    DWORD PTR [edx+0x44],0xd5
  403ada:	jmp    0x513:0x8f4b5cd4
  403ae1:	inc    edx
  403ae2:	lods   al,BYTE PTR ds:[esi]
  403ae3:	cmp    dl,BYTE PTR [ebp+0x64]
  403ae6:	mov    WORD PTR [ecx+0x38d8500e],?
  403aec:	mov    ebx,0xe853c10f
  403af1:	jns    0x403b31
  403af3:	dec    esi
  403af4:	sbb    DWORD PTR [ebp-0x78da3b7d],ebp
  403afa:	jbe    0x403abf
  403afc:	pop    edi
  403afd:	cmp    eax,DWORD PTR ds:0xe23431cb
  403b03:	adc    edx,0x876a1f5a
  403b09:	mov    edi,0x54047843
  403b0e:	(bad)
  403b13:	bound  edi,QWORD PTR [ebx-0x409436e8]
  403b19:	cmp    al,0x5b
  403b1b:	mov    fs,WORD PTR [ebp+ebx*2+0x29]
  403b1f:	imul   ecx,DWORD PTR [edx-0x478faadd],0xffffffda
  403b26:	pop    es
  403b27:	stc    
  403b28:	jg     0x403b21
  403b2a:	lea    edi,[edx]
  403b2c:	add    BYTE PTR [ecx+0x1],bh
  403b2f:	shl    bh,cl
  403b31:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  403b33:	xor    eax,0x8d09aaa1
  403b38:	or     bl,BYTE PTR [ebp+0x3d]
  403b3b:	sar    BYTE PTR [esi-0x2bde26b4],cl
  403b41:	ds sub eax,0x1ed180a1
  403b47:	jae    0x403acf
  403b49:	fstp   DWORD PTR [edi-0x1]
  403b4c:	call   0x6e0c:0xdf7620dd
  403b53:	nop
  403b54:	ins    BYTE PTR es:[edi],dx
  403b55:	jecxz  0x403b6c
  403b57:	sub    eax,DWORD PTR [edx]
  403b59:	jmp    0x403b3e
  403b5b:	mov    bh,0x66
  403b5d:	cmp    ebx,DWORD PTR [edi+0x455727c3]
  403b63:	mov    eax,ds:0xbd0de67
  403b68:	xchg   edx,eax
  403b69:	adc    al,0x44
  403b6b:	push   ecx
  403b6c:	rol    BYTE PTR [eax+0x5d],0x2
  403b70:	vpxor  xmm7,xmm5,XMMWORD PTR [eax+0x5f]
  403b75:	es or  eax,0xd17fc600
  403b7b:	mov    DWORD PTR [eax-0x6c],0x6650327f
  403b82:	addr16 std 
  403b84:	arpl   bp,bx
  403b86:	popa   
  403b87:	cmp    BYTE PTR [eax],al
  403b89:	adc    DWORD PTR [ebx],ebp
  403b8b:	xor    eax,DWORD PTR [esi]
  403b8d:	xchg   DWORD PTR [edx+edi*2+0x23a447ad],esi
  403b94:	jne    0x403c12
  403b96:	mov    ds:0x23614ed9,al
  403b9b:	repnz push ebx
  403b9d:	sub    eax,0xdf8395d9
  403ba2:	loopne 0x403bee
  403ba4:	je     0x403b4a
  403ba6:	adc    ecx,DWORD PTR [ecx]
  403ba8:	mov    eax,0x8fbd1523
  403bad:	pop    esi
  403bae:	sbb    ah,BYTE PTR [esi]
  403bb0:	scas   eax,DWORD PTR es:[edi]
  403bb1:	(bad)  
  403bb2:	enter  0xdef9,0x97
  403bb6:	or     al,0x87
  403bb8:	dec    ebp
  403bb9:	sub    eax,0xed7a066b
  403bbe:	retf   0x1c55
  403bc1:	and    BYTE PTR [edx+eiz*4],ch
  403bc4:	into   
  403bc5:	adc    al,0x23
  403bc7:	jbe    0x403b92
  403bc9:	jbe    0x403c1c
  403bcb:	jbe    0x403b8c
  403bcd:	outs   dx,BYTE PTR ds:[esi]
  403bce:	xlat   BYTE PTR ds:[ebx]
  403bcf:	dec    ebp
  403bd0:	setle  cl
  403bd3:	add    dl,BYTE PTR [esi]
  403bd5:	mov    fs,WORD PTR [eax]
  403bd7:	loope  0x403c2d
  403bd9:	and    BYTE PTR [edi+0x695bb970],ah
  403bdf:	enter  0xe86c,0x63
  403be3:	or     dh,BYTE PTR [ecx]
  403be5:	ficomp WORD PTR [edi]
  403be7:	fs sub ecx,esp
  403bea:	fst    QWORD PTR [edi+0x6b]
  403bed:	mov    cl,0xe8
  403bef:	scas   eax,DWORD PTR es:[edi]
  403bf0:	sar    BYTE PTR [esi],0x82
  403bf3:	test   DWORD PTR cs:[edx+eax*4+0x53],ebp
  403bf8:	dec    edi
  403bf9:	loopne 0x403c50
  403bfb:	(bad)  
  403bfc:	xchg   esp,eax
  403bfd:	les    edi,FWORD PTR [edx]
  403bff:	js     0x403b82
  403c01:	rcr    BYTE PTR ds:0xb5238ad5,0x42
  403c08:	sub    eax,0xe51d046a
  403c0d:	enter  0x4ab,0x27
  403c11:	int3   
  403c12:	sbb    al,0x18
  403c14:	mov    bl,0x4
  403c16:	pop    edi
  403c17:	gs push ecx
  403c19:	ror    BYTE PTR [eax-0x65],cl
  403c1c:	mov    BYTE PTR [eax],ch
  403c1e:	int    0xa6
  403c20:	xchg   BYTE PTR [edx+0x68],dl
  403c23:	or     ecx,DWORD PTR [edi+0x47e28712]
  403c29:	fpatan 
  403c2b:	ins    BYTE PTR es:[edi],dx
  403c2c:	xlat   BYTE PTR ds:[ebx]
  403c2d:	pop    esp
  403c2e:	inc    DWORD PTR [esi-0x2307e0c]
  403c34:	add    eax,DWORD PTR [eax+0x4034e1c]
  403c3a:	mov    bl,0xd0
  403c3c:	test   DWORD PTR [eax-0x27737b5f],ebx
  403c42:	loop   0x403bc4
  403c44:	clc    
  403c45:	adc    al,0x63
  403c47:	(bad)  
  403c48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c49:	add    eax,ebx
  403c4b:	push   esp
  403c4c:	mov    ch,0x0
  403c4e:	cwde   
  403c4f:	jg     0x403c8d
  403c51:	mov    esi,eax
  403c53:	sub    cl,BYTE PTR [ebp+0x18cf361]
  403c59:	in     eax,dx
  403c5a:	lds    ebx,FWORD PTR ds:0x72733618
  403c60:	(bad)  
  403c61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c62:	mov    ch,0xb1
  403c64:	add    eax,0x957cd57d
  403c69:	test   eax,0x3a63073a
  403c6e:	outs   dx,DWORD PTR ds:[esi]
  403c6f:	cmp    bh,ah
  403c71:	pop    ebx
  403c72:	push   es
  403c73:	(bad)  [eax-0x3f1d2d7d]
  403c79:	ins    BYTE PTR es:[edi],dx
  403c7a:	test   eax,0x12ece730
  403c7f:	xor    BYTE PTR [ebx+0x3b],0x7b
  403c83:	icebp  
  403c84:	push   esp
  403c85:	xchg   ebp,eax
  403c86:	scas   al,BYTE PTR es:[edi]
  403c87:	arpl   WORD PTR [ecx-0x7d],dx
  403c8a:	mov    eax,ds:0x5c280eac
  403c8f:	cdq    
  403c90:	fstp   TBYTE PTR [ebx+0x7e]
  403c93:	fs popf 
  403c95:	or     ebp,DWORD PTR [ecx+0x44346a64]
  403c9b:	and    BYTE PTR ss:[ebp-0x5bb6044b],bh
  403ca2:	and    eax,0xf2ed339
  403ca7:	mov    WORD PTR [edx+0x62dd5b40],?
  403cad:	xchg   ebx,eax
  403cae:	test   eax,0x710566c3
  403cb3:	add    BYTE PTR [edi+0x66b4de21],dh
  403cb9:	or     BYTE PTR [ecx],ch
  403cbb:	or     eax,0xa3baaaec
  403cc0:	out    dx,al
  403cc1:	test   eax,0x12c8d846
  403cc6:	fist   WORD PTR [ebp+0x44]
  403cc9:	sub    BYTE PTR [edi+0xd],bl
  403ccc:	stc    
  403ccd:	xchg   ebx,eax
  403cce:	push   es
  403ccf:	ss jle 0x403d00
  403cd2:	mov    eax,0x7571dcd1
  403cd7:	sub    cl,BYTE PTR [esp+ecx*1+0xf]
  403cdb:	mov    eax,ds:0x2dd4f551
  403ce0:	dec    eax
  403ce1:	push   eax
  403ce2:	push   0x4031e115
  403ce7:	jp     0x403cc1
  403ce9:	div    BYTE PTR [esi-0x12565c8c]
  403cef:	push   ds
  403cf0:	inc    edx
  403cf1:	stos   BYTE PTR es:[edi],al
  403cf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403cf3:	sbb    DWORD PTR [ebx+0x373e7609],0xd
  403cfa:	and    al,0x47
  403cfc:	cmp    cl,cl
  403cfe:	popf   
  403cff:	push   ds
  403d00:	mov    fs,edx
  403d02:	sti    
  403d03:	mov    dl,0xa8
  403d05:	cmp    BYTE PTR [ebx+0xa],ah
  403d08:	repz out 0x27,eax
  403d0b:	daa    
  403d0c:	sti    
  403d0d:	ins    BYTE PTR es:[edi],dx
  403d0e:	fdiv   QWORD PTR [ebx+0x40]
  403d11:	mov    BYTE PTR [eax+0x2ad19ef0],bh
  403d17:	sub    DWORD PTR ds:0xecf51d90,0x47fe7dcd
  403d21:	fist   DWORD PTR [edx-0x2d5421ec]
  403d27:	(bad)  
  403d28:	cmp    al,0xc
  403d2a:	pop    esp
  403d2b:	mov    dh,0x9a
  403d2d:	jnp    0x403d02
  403d2f:	call   0x40d9:0x24814064
  403d36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d37:	push   ebp
  403d38:	mov    esi,0xabded6e1
  403d3d:	dec    ecx
  403d3e:	loop   0x403db8
  403d40:	or     DWORD PTR [ecx],eax
  403d42:	mov    bh,0xd2
  403d44:	jle    0x403cff
  403d46:	(bad)  
  403d47:	push   edi
  403d48:	cld    
  403d49:	and    al,0x79
  403d4b:	jb     0x403d40
  403d4d:	xchg   DWORD PTR [ecx+0x27d04f88],edx
  403d53:	mov    dh,0xdb
  403d55:	mov    al,ds:0xcbfa9e45
  403d5a:	mov    edx,0xc8d08032
  403d5f:	sar    DWORD PTR [esi+0x1e],0xc0
  403d63:	in     al,0x45
  403d65:	aad    0x4
  403d67:	das    
  403d68:	loope  0x403db9
  403d6a:	clc    
  403d6b:	cwde   
  403d6c:	xchg   ebx,eax
  403d6d:	jmp    0xad4c0329
  403d72:	jnp    0x403da1
  403d74:	(bad)  
  403d76:	in     eax,dx
  403d77:	mov    edi,0xc501ba3d
  403d7c:	pop    ds
  403d7d:	xchg   BYTE PTR [edx-0x5e],bh
  403d80:	cmp    BYTE PTR [ecx],bl
  403d82:	push   es
  403d83:	in     ax,dx
  403d85:	imul   ecx,DWORD PTR [ebp-0x2149baaa],0x5
  403d8c:	in     al,0xd0
  403d8e:	fld    DWORD PTR [eax-0x1e]
  403d91:	mov    DWORD PTR [edx+eax*2+0x358f6269],eax
  403d98:	rcr    DWORD PTR [eax],cl
  403d9a:	mov    DWORD PTR [edi],eax
  403d9c:	xor    al,0x3b
  403d9e:	adc    BYTE PTR [ecx],0xf6
  403da1:	cmp    al,0xdf
  403da3:	mov    cl,0xb6
  403da5:	(bad)  
  403da6:	sub    al,0x3
  403da8:	add    ebp,DWORD PTR [ebx]
  403daa:	retf   0x1d5e
  403dad:	int3   
  403dae:	cld    
  403daf:	xor    ebp,ebx
  403db1:	iret   
  403db2:	add    cl,BYTE PTR [ecx-0x33]
  403db5:	inc    edi
  403db6:	enter  0x3b7b,0x8b
  403dba:	mov    eax,ds:0xc0d013d8
  403dbf:	repnz and ch,BYTE PTR [edi+0x33]
  403dc3:	icebp  
  403dc4:	push   es
  403dc5:	push   esp
  403dc6:	mov    BYTE PTR [ebp+0x1],bl
  403dc9:	fld    TBYTE PTR [esi+0x21]
  403dcc:	dec    esp
  403dcd:	mov    ds,ebp
  403dcf:	dec    edx
  403dd0:	popa   
  403dd1:	add    eax,0xd214f725
  403dd6:	out    dx,al
  403dd7:	leave  
  403dd8:	ds test al,0x24
  403ddb:	arpl   bx,cx
  403ddd:	retf   0xd3e
  403de0:	or     BYTE PTR [eax+eax*2-0xb3966e1],ch
  403de7:	int    0xfb
  403de9:	cdq    
  403dea:	inc    ecx
  403deb:	cli    
  403dec:	mov    esi,0x25862642
  403df1:	or     WORD PTR [edi-0xd],ax
  403df5:	shl    BYTE PTR [esp+eax*8-0x42],cl
  403df9:	pop    edi
  403dfa:	sub    BYTE PTR [ecx+0x1107bbe3],ch
  403e00:	shl    BYTE PTR [ecx],cl
  403e02:	rcl    DWORD PTR [ecx-0x5beab9fa],cl
  403e08:	lock mov edi,0x3efacd4e
  403e0e:	(bad)  
  403e0f:	and    DWORD PTR [ebx-0x71],edx
  403e12:	or     cl,BYTE PTR [esi+0x61]
  403e15:	in     eax,0x7f
  403e17:	call   0xf6174bbd
  403e1c:	mov    bh,0xd3
  403e1e:	or     dl,BYTE PTR [esi+0x10]
  403e21:	jns    0x403e63
  403e23:	push   esp
  403e24:	ja     0x403e6a
  403e26:	aam    0x4e
  403e28:	xor    edi,DWORD PTR [edi+eiz*2-0x5d]
  403e2c:	adc    eax,0x822ec00
  403e31:	(bad)  
  403e32:	hlt    
  403e33:	repz dec edx
  403e35:	add    eax,0x5cff5272
  403e3a:	jae    0x403e20
  403e3c:	or     al,0x87
  403e3e:	jmp    0x22b37696
  403e43:	mov    ?,ecx
  403e45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e46:	inc    DWORD PTR [eax+0x41]
  403e49:	add    edx,DWORD PTR [eax-0x75d7208]
  403e4f:	inc    ebp
  403e50:	mov    edx,DWORD PTR [edi-0x17]
  403e53:	push   ebp
  403e54:	mov    eax,0x55784666
  403e59:	mov    eax,ds:0xf2a13660
  403e5e:	sbb    eax,0xbfaa3ad
  403e63:	inc    ecx
  403e64:	mov    dl,cl
  403e66:	stc    
  403e67:	lahf   
  403e68:	mov    eax,ds:0x1d82fb90
  403e6d:	cld    
  403e6e:	or     al,0x65
  403e70:	ds ffree st(1)
  403e73:	jnp    0x403e89
  403e75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e76:	in     eax,dx
  403e77:	js     0x403e91
  403e79:	sub    al,0x2
  403e7b:	adc    eax,DWORD PTR [edi+0x69]
  403e7e:	xchg   esi,eax
  403e7f:	mov    DWORD PTR [edi-0x558ffab],ecx
  403e85:	loop   0x403e1c
  403e87:	in     al,dx
  403e88:	fcomp  st(0)
  403e8a:	add    al,0x1a
  403e8c:	clc    
  403e8d:	clc    
  403e8e:	into   
  403e8f:	pop    ecx
  403e90:	nop
  403e91:	pop    ss
  403e92:	xor    ebp,DWORD PTR gs:[edx]
  403e95:	push   edi
  403e96:	pop    es
  403e97:	in     eax,0x10
  403e99:	std    
  403e9a:	in     eax,dx
  403e9b:	xor    DWORD PTR [ebx+0x60ced62],0xffffff9f
  403ea2:	aad    0x39
  403ea4:	jae    0x403e41
  403ea6:	or     edi,DWORD PTR [ebp+0x6d]
  403ea9:	test   eax,0x94d18acc
  403eae:	fst    st(5)
  403eb0:	jno    0x403ef9
  403eb2:	pop    edi
  403eb3:	inc    ebx
  403eb4:	xchg   edx,eax
  403eb5:	test   DWORD PTR [edx+esi*1],eax
  403eb8:	test   eax,0x684926bd
  403ebd:	out    0xdd,eax
  403ebf:	mov    ah,0x70
  403ec1:	xor    esi,esi
  403ec3:	daa    
  403ec4:	sbb    bh,BYTE PTR [eax]
  403ec6:	cmp    eax,0xe7d99542
  403ecb:	mov    gs,WORD PTR [ecx]
  403ecd:	(bad)  
  403ece:	shl    edx,1
  403ed0:	stc    
  403ed1:	jae    0x403f0a
  403ed3:	jg     0x403efd
  403ed5:	sahf   
  403ed6:	and    DWORD PTR [ebp+0x606acd44],esi
  403edc:	push   esp
  403edd:	mov    cs,ebx
  403edf:	jae    0x403e8a
  403ee1:	ja     0x403f19
  403ee3:	or     ch,BYTE PTR [ecx+0x24c77e05]
  403ee9:	xor    BYTE PTR [edx],al
  403eeb:	adc    BYTE PTR [ebx],dh
  403eed:	outs   dx,BYTE PTR ds:[esi]
  403eee:	mov    ah,0xf3
  403ef0:	add    DWORD PTR [eax+0x6b24e61],eax
  403ef6:	inc    ebx
  403ef7:	aaa    
  403ef8:	xor    edx,DWORD PTR [ecx-0x318a3db]
  403efe:	add    al,0x5e
  403f00:	or     BYTE PTR [eax],dh
  403f02:	inc    ebx
  403f03:	scas   eax,DWORD PTR es:[edi]
  403f04:	sub    al,bl
  403f06:	mov    BYTE PTR [ecx+0x66],ch
  403f09:	xor    bl,bl
  403f0b:	pop    ss
  403f0c:	inc    ebp
  403f0d:	in     al,0x2d
  403f0f:	or     esp,esp
  403f11:	cmp    ebp,esi
  403f13:	inc    edx
  403f14:	(bad)  
  403f15:	in     eax,dx
  403f16:	mov    edi,0xfda0eec3
  403f1b:	and    dl,BYTE PTR [ebx]
  403f1d:	add    al,BYTE PTR [ebx]
  403f1f:	mov    eax,ds:0xabbf35a2
  403f24:	mov    eax,0x3cdd8793
  403f29:	push   ss
  403f2a:	rcl    eax,1
  403f2c:	lock retf 0xf664
  403f30:	xor    eax,0x3901f60a
  403f35:	out    dx,al
  403f36:	or     dl,BYTE PTR [eax-0x53]
  403f39:	in     eax,0x7b
  403f3b:	mov    dl,0x62
  403f3d:	lods   al,BYTE PTR ds:[esi]
  403f3e:	int3   
  403f3f:	inc    esi
  403f40:	shl    BYTE PTR [edi+0x78],0x0
  403f44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f45:	jmp    0x403fb2
  403f47:	push   eax
  403f48:	gs mov bl,0x9c
  403f4b:	fisubr DWORD PTR [edi+0x44]
  403f4e:	loopne 0x403f56
  403f50:	into   
  403f51:	mov    eax,0x24a6e9f8
  403f56:	fstp   st(2)
  403f58:	stos   BYTE PTR es:[edi],al
  403f59:	ds jmp 0x403ee9
  403f5c:	(bad)  
  403f5d:	aam    0x3
  403f5f:	jo     0x403fcb
  403f61:	test   eax,0xdd7e464b
  403f66:	(bad)  
  403f67:	pop    edx
  403f68:	sub    eax,0x599a0877
  403f6d:	push   esi
  403f6e:	imul   ebx,edi,0x7b
  403f71:	mov    ah,0x7
  403f73:	scas   eax,DWORD PTR es:[edi]
  403f74:	pop    ss
  403f75:	(bad)  
  403f76:	sahf   
  403f77:	jle    0x403f0d
  403f79:	adc    al,0x1b
  403f7b:	sti    
  403f7c:	mov    ds:0x5c64fae5,al
  403f81:	xchg   ecx,eax
  403f82:	and    DWORD PTR [edx+0x26d57940],edi
  403f88:	outs   dx,BYTE PTR ds:[esi]
  403f89:	sbb    BYTE PTR [ebp+ebx*2-0x24],0xc6
  403f8e:	jge    0x403f11
  403f90:	test   eax,0x5ba58458
  403f95:	jmp    0x94a8:0x1fa870ba
  403f9c:	jl     0x403fa4
  403f9e:	sub    eax,0x617bea85
  403fa3:	sub    BYTE PTR [eax],dl
  403fa5:	retf   0x2110
  403fa8:	or     ecx,DWORD PTR [ecx-0x2c33b40]
  403fae:	adc    eax,0xa8aa30d6
  403fb3:	and    esp,DWORD PTR [edi+0x1f]
  403fb6:	cmp    esi,esp
  403fb8:	out    0x1a,eax
  403fba:	push   ds
  403fbb:	adc    cl,BYTE PTR [ebp+0xdf5810]
  403fc1:	inc    ecx
  403fc2:	jno    0x403fb5
  403fc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fc5:	jge    0x404033
  403fc7:	aas    
  403fc8:	jmp    0x403fef
  403fca:	pop    es
  403fcb:	sub    ebx,eax
  403fcd:	shl    DWORD PTR [edx],0x12
  403fd0:	push   es
  403fd1:	fnsave [edi+0x5a930d64]
  403fd7:	or     al,0xb1
  403fd9:	push   ebx
  403fda:	add    al,0x3f
  403fdc:	jmp    0x4837:0xc99f5abc
  403fe3:	imul   BYTE PTR [edx]
  403fe5:	push   edx
  403fe6:	in     al,dx
  403fe7:	push   ss
  403fe8:	dec    edx
  403fe9:	pop    es
  403fea:	push   cs
  403feb:	es adc eax,0x378a610e
  403ff1:	sbb    ah,BYTE PTR [esi-0x2f]
  403ff4:	or     DWORD PTR [esi+0x2f1ad781],edx
  403ffa:	sub    BYTE PTR [edi],bl
  403ffc:	mov    dl,0xc5
  403ffe:	add    al,0xaf
  404000:	mul    edi
  404002:	ins    DWORD PTR es:[edi],dx
  404003:	pushw  cs
  404005:	and    DWORD PTR [esi+eiz*2+0x58a10edf],edi
  40400c:	jg     0x404001
  40400e:	fcom   QWORD PTR [ebx+0x53]
  404011:	int3   
  404012:	nop
  404013:	or     al,0x54
  404015:	jp     0x40407c
  404017:	adc    cl,BYTE PTR [esi-0x5c]
  40401a:	outs   dx,DWORD PTR ds:[esi]
  40401b:	push   ebx
  40401c:	push   edi
  40401d:	aas    
  40401e:	push   ebp
  40401f:	xchg   ebp,eax
  404020:	jecxz  0x404003
  404022:	jmp    DWORD PTR [ecx]
  404024:	test   cl,dl
  404026:	imul   esi,DWORD PTR [ecx-0x98f681a],0x352017b3
  404030:	mov    cl,0x5b
  404032:	xor    ecx,DWORD PTR [ecx-0x6e]
  404035:	pop    ds
  404036:	mov    bh,0xab
  404038:	call   0xddc4334e
  40403d:	adc    eax,0x6ce38c30
  404042:	test   BYTE PTR [ecx],0x37
  404045:	icebp  
  404046:	jae    0x404000
  404048:	mov    bh,0x9b
  40404a:	shl    ch,0x8c
  40404d:	jb     0x403fea
  40404f:	or     esp,esp
  404051:	imul   ecx,ecx,0xb1ee9955
  404057:	test   dh,bl
  404059:	inc    ecx
  40405a:	cmp    edi,DWORD PTR [esp+edi*2-0x7f]
  40405e:	and    ebp,esi
  404060:	or     ebp,DWORD PTR [edi+0x2c0a2037]
  404066:	fs dec esp
  404068:	fsubr  DWORD PTR [esi]
  40406a:	pop    ebx
  40406b:	or     cl,al
  40406d:	or     BYTE PTR [eax+0x6c7aeda9],0xc3
  404074:	inc    edx
  404075:	push   cs
  404076:	and    ch,bh
  404078:	push   es
  404079:	adc    eax,0xaa5f3337
  40407e:	adc    DWORD PTR [ebx],edx
  404080:	rcr    edi,1
  404082:	fdivr  QWORD PTR [ecx+0x5557ddfd]
  404088:	pxor   mm6,QWORD PTR [edx+0x491c474a]
  40408f:	sub    ebp,DWORD PTR [edx]
  404091:	mov    ch,0xde
  404093:	(bad)  
  404094:	cmp    BYTE PTR [esi-0x4d],0xb0
  404098:	ins    BYTE PTR es:[edi],dx
  404099:	sar    BYTE PTR [esi],0xd0
  40409c:	mov    WORD PTR [edi+0x3a],gs
  40409f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040a0:	jmp    0x32f96c57
  4040a5:	sub    esi,DWORD PTR [ebp-0x3425e4d6]
  4040ab:	sbb    al,BYTE PTR [ecx+0x6a]
  4040ae:	and    DWORD PTR [edx-0x5a47f5aa],ebx
  4040b4:	in     al,0x6a
  4040b6:	dec    ebp
  4040b7:	xor    eax,edi
  4040b9:	ins    BYTE PTR es:[edi],dx
  4040ba:	xor    edi,DWORD PTR [eax+0x5e4a4894]
  4040c0:	adc    esp,DWORD PTR [esi+edx*4+0xd]
  4040c4:	ins    DWORD PTR es:[edi],dx
  4040c5:	rcr    BYTE PTR [ebp+eax*2-0x7937c38c],cl
  4040cc:	loope  0x40405a
  4040ce:	push   cs
  4040cf:	(bad)  
  4040d0:	test   DWORD PTR [esp+ebp*8],0x42978752
  4040d7:	xchg   ecx,eax
  4040d8:	mov    ah,ah
  4040da:	or     eax,esp
  4040dc:	gs mov ch,0xf
  4040df:	cdq    
  4040e0:	push   ecx
  4040e1:	mov    ds:0x465ba0eb,al
  4040e6:	js     0x4040d4
  4040e8:	popf   
  4040e9:	sub    eax,0x45acdca6
  4040ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040ef:	mov    eax,ds:0x7ffbdd14
  4040f4:	jle    0x404120
  4040f6:	ret    
  4040f7:	ret    
  4040f8:	stos   BYTE PTR es:[edi],al
  4040f9:	or     eax,edi
  4040fb:	inc    ecx
  4040fc:	arpl   WORD PTR [ecx],ax
  4040fe:	ds iret 
  404100:	xor    bl,cl
  404102:	iret   
  404103:	jmp    0x4478:0x9b18be32
  40410a:	sbb    al,0x84
  40410c:	in     al,dx
  40410d:	jmp    0x32bd:0xb2066f97
  404114:	jmp    0x82e1f6f9
  404119:	xchg   DWORD PTR [eax+0x667b9b2d],ebp
  40411f:	mov    edx,0xf03e4eba
  404124:	xchg   esi,eax
  404125:	outs   dx,BYTE PTR ds:[esi]
  404126:	push   cs
  404127:	or     eax,ebp
  404129:	and    dl,BYTE PTR [eax]
  40412b:	retf   
  40412c:	pushf  
  40412d:	adc    edi,DWORD PTR ss:[ecx]
  404130:	dec    edi
  404131:	mov    ah,0xb4
  404133:	mov    BYTE PTR ds:0x92bcd9b7,ch
  404139:	cwde   
  40413a:	stc    
  40413b:	xor    al,0x4c
  40413d:	mov    ah,0x38
  40413f:	loop   0x404144
  404141:	popf   
  404142:	xchg   DWORD PTR [esi],edi
  404144:	dec    edx
  404145:	call   0x95b58564
  40414a:	std    
  40414b:	pop    esp
  40414c:	daa    
  40414d:	clc    
  40414e:	loopne 0x40417e
  404150:	icebp  
  404151:	and    bh,bh
  404153:	outs   dx,DWORD PTR ds:[esi]
  404154:	out    dx,al
  404155:	aas    
  404156:	int3   
  404157:	push   es
  404158:	cmp    al,0x24
  40415a:	shl    BYTE PTR [ecx+0x1b],1
  40415d:	xor    BYTE PTR [edx],cl
  40415f:	push   ebx
  404160:	jbe    0x4041c7
  404162:	loope  0x4041d5
  404164:	dec    ebp
  404165:	fs and eax,0x133ded4f
  40416b:	aaa    
  40416c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40416d:	pop    edi
  40416e:	or     al,0x57
  404170:	int    0xf4
  404172:	clc    
  404173:	stos   DWORD PTR es:[edi],eax
  404174:	repnz in eax,0xf0
  404177:	push   eax
  404178:	xor    eax,0xbf524f36
  40417d:	xchg   esi,eax
  40417e:	sbb    BYTE PTR [ebx+0x7a],cl
  404181:	das    
  404182:	push   eax
  404183:	or     BYTE PTR [esi],0xd6
  404186:	inc    ecx
  404187:	push   es
  404188:	ficom  DWORD PTR [eax+0x1b]
  40418b:	iret   
  40418c:	ret    
  40418d:	scas   al,BYTE PTR es:[edi]
  40418e:	or     DWORD PTR [edx],ecx
  404190:	mov    al,bh
  404192:	lock lahf 
  404194:	vpsubd ymm3,ymm3,YMMWORD PTR [edi+eiz*2]
  404199:	xchg   esi,eax
  40419a:	inc    eax
  40419b:	jnp    0x404166
  40419d:	and    DWORD PTR [ecx],esp
  40419f:	push   ebx
  4041a0:	iret   
  4041a1:	test   al,0x15
  4041a3:	mov    fs,eax
  4041a5:	mov    edi,0xbfb09dc2
  4041aa:	push   ebx
  4041ab:	outs   dx,DWORD PTR ds:[esi]
  4041ac:	jno    0x404221
  4041ae:	pop    ss
  4041af:	and    al,ch
  4041b1:	stc    
  4041b2:	pop    ds
  4041b3:	inc    esp
  4041b4:	pop    esp
  4041b5:	mov    edi,0x47f6c8a1
  4041ba:	out    0xc4,al
  4041bc:	ror    BYTE PTR [esi],cl
  4041be:	lea    eax,[ebx]
  4041c0:	(bad)
  4041c5:	(bad)  [esi]
  4041c7:	icebp  
  4041c8:	mov    BYTE PTR [esi-0x1fee9b7f],ch
  4041ce:	inc    edx
  4041cf:	sbb    al,0xe2
  4041d1:	xchg   al,dl
  4041d3:	dec    ebx
  4041d4:	xor    al,0x96
  4041d6:	push   eax
  4041d7:	(bad)  
  4041d8:	push   ss
  4041d9:	pop    ss
  4041da:	cmp    al,0x56
  4041dc:	clc    
  4041dd:	fistp  DWORD PTR [edi-0x38]
  4041e0:	mov    DWORD PTR [edi],edi
  4041e2:	into   
  4041e3:	(bad)  [ecx+0x26de7166]
  4041e9:	push   0x58cd7880
  4041ee:	push   esp
  4041ef:	lea    eax,[esi+0x3c]
  4041f2:	jnp    0x40424c
  4041f4:	call   0xf629:0x161dab29
  4041fb:	cmp    DWORD PTR [eax-0x64],edx
  4041fe:	outs   dx,DWORD PTR ds:[esi]
  4041ff:	jbe    0x40423c
  404201:	int    0x10
  404203:	shl    BYTE PTR [eax+0x4040d1e9],cl
  404209:	mov    bl,0xc0
  40420b:	fwait
  40420c:	mov    esi,0x9538a9ed
  404211:	dec    esp
  404212:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404213:	lea    edx,[ecx+0x77]
  404216:	or     edi,DWORD PTR [ebx+0x33c1b254]
  40421c:	xchg   DWORD PTR [ebp-0x103c04ab],esi
  404222:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404223:	jbe    0x404299
  404225:	mov    al,ds:0xaa74e271
  40422a:	and    DWORD PTR [edi],0xffffff8d
  40422d:	dec    esi
  40422e:	hlt    
  40422f:	mov    al,0xfc
  404231:	jp     0x40427b
  404233:	pop    ebp
  404234:	xchg   esi,eax
  404235:	fs jne 0x40420b
  404238:	push   ebx
  404239:	mov    eax,0xf5dc2335
  40423e:	mov    edx,DWORD PTR [esi+0x5d]
  404241:	data16 add dl,BYTE PTR [ebp+0x3c]
  404245:	sub    eax,0x79d0983f
  40424a:	xor    esi,DWORD PTR [ebx]
  40424c:	mov    dh,BYTE PTR es:[eax+0x7ccb8d5e]
  404253:	enter  0x414e,0x44
  404257:	leave  
  404258:	pop    esp
  404259:	icebp  
  40425a:	and    bh,BYTE PTR [ecx-0x4c]
  40425d:	xchg   ecx,eax
  40425e:	es pop ebx
  404260:	fld    QWORD PTR [edx+edx*8-0x753ef1b5]
  404267:	xchg   ecx,eax
  404268:	or     ah,al
  40426a:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40426c:	push   esp
  40426d:	fwait
  40426e:	ror    eax,1
  404270:	and    al,0x7f
  404272:	push   es
  404273:	adc    BYTE PTR ds:0xb93abc,dl
  404279:	xchg   BYTE PTR [esi-0x342442e5],ch
  40427f:	sbb    DWORD PTR [esi-0x97d932a],edx
  404285:	inc    esp
  404286:	pop    esi
  404287:	sub    BYTE PTR [ebx],dl
  404289:	sub    ebx,ecx
  40428b:	jmp    0x4042b9
  40428d:	(bad)  
  40428e:	sbb    ebp,DWORD PTR [edi]
  404290:	daa    
  404291:	dec    esp
  404292:	mov    gs,WORD PTR [edi]
  404294:	and    eax,ecx
  404296:	mov    BYTE PTR [edi-0x3f],dh
  404299:	ins    DWORD PTR es:[edi],dx
  40429a:	xchg   edi,eax
  40429b:	scas   al,BYTE PTR es:[edi]
  40429c:	xor    esi,DWORD PTR [edi]
  40429e:	jo     0x4042dc
  4042a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042a1:	aaa    
  4042a2:	push   ds
  4042a3:	jl     0x4042af
  4042a5:	mov    eax,ds:0x5167079f
  4042aa:	jecxz  0x4042ca
  4042ac:	mov    BYTE PTR [ebx-0x37706b35],bh
  4042b2:	mov    dh,BYTE PTR [edx-0x1f25e0ca]
  4042b8:	cld    
  4042b9:	jbe    0x404323
  4042bb:	sti    
  4042bc:	adc    al,0xc4
  4042be:	cli    
  4042bf:	(bad)  
  4042c0:	imul   ebx,DWORD PTR [ebx+ebp*1-0x54],0xfffffff1
  4042c5:	or     edx,DWORD PTR ds:0xcff7419e
  4042cb:	jle    0x40429c
  4042cd:	sub    BYTE PTR [ebx],0x4d
  4042d0:	sub    bh,dh
  4042d2:	cmp    DWORD PTR [eax],0x9847d7fe
  4042d8:	mov    ecx,0xbf003bf8
  4042dd:	scas   al,BYTE PTR es:[edi]
  4042de:	sti    
  4042df:	cmc    
  4042e0:	shl    DWORD PTR [ebx-0x23],0x5c
  4042e4:	mov    bh,0xde
  4042e6:	out    dx,al
  4042e7:	and    DWORD PTR [ebx+eax*8-0x31f9bcdc],esi
  4042ee:	pop    ecx
  4042ef:	fisubr DWORD PTR [ebp+0x36042a01]
  4042f5:	sbb    esp,DWORD PTR [edi+0x13]
  4042f8:	ret    
  4042f9:	mov    eax,ds:0xcf8dba23
  4042fe:	(bad)  
  4042ff:	cli    
  404300:	xchg   ebp,eax
  404301:	test   ch,ch
  404303:	sahf   
  404304:	daa    
  404305:	ret    0x5f04
  404308:	cmp    dh,BYTE PTR [esi]
  40430a:	retf   0x457d
  40430d:	adc    ch,BYTE PTR [edx]
  40430f:	fs mov esi,0x12332e64
  404315:	stc    
  404316:	push   dx
  404318:	or     esi,DWORD PTR [ebp-0x4]
  40431b:	daa    
  40431c:	pop    esp
  40431d:	sub    eax,0xb96a40b2
  404322:	inc    ebp
  404323:	xchg   esi,eax
  404324:	and    DWORD PTR [edx+edx*4+0x31],esi
  404328:	pushf  
  404329:	test   DWORD PTR [edx],0x9aa8b6f0
  40432f:	call   0xc27c000d
  404334:	push   eax
  404335:	pop    ds
  404336:	ja     0x40436c
  404338:	clc    
  404339:	fisubr DWORD PTR [ebx]
  40433b:	add    al,0xe8
  40433d:	pusha  
  40433e:	ins    BYTE PTR es:[edi],dx
  40433f:	rcr    DWORD PTR [ebx],1
  404341:	das    
  404342:	sbb    DWORD PTR [ecx],edx
  404344:	(bad)  
  404346:	movd   mm1,DWORD PTR [ebx+ebx*1+0x7d61d014]
  40434e:	lock ins DWORD PTR es:[edi],dx
  404350:	scas   eax,DWORD PTR es:[edi]
  404351:	daa    
  404352:	das    
  404353:	arpl   WORD PTR [esi+0x25],bp
  404356:	and    DWORD PTR [edi-0xc],eax
  404359:	call   0x332d6094
  40435e:	and    esi,DWORD PTR [ecx]
  404360:	ret    0x9bfc
  404363:	mov    al,ds:0x9f335e46
  404368:	(bad)  
  404369:	mov    esp,0x5592d13
  40436e:	dec    ebp
  40436f:	xlat   BYTE PTR ds:[ebx]
  404370:	mov    edi,0x91ef4ee8
  404375:	pop    ds
  404376:	inc    ebx
  404377:	sbb    eax,0xee0ddf54
  40437c:	jl     0x404304
  40437e:	xchg   ebp,ebx
  404380:	push   esi
  404381:	test   BYTE PTR [esi],bl
  404383:	push   ss
  404384:	imul   ebp,DWORD PTR [edi-0x624b429a],0x18d398a6
  40438e:	mov    edx,0x53e47376
  404393:	test   edi,0xbfc6dc03
  404399:	and    al,0xf
  40439b:	adc    esp,0x7a
  40439e:	mov    ds:0x918a5c16,eax
  4043a3:	xchg   esi,eax
  4043a4:	sub    DWORD PTR [eax-0x1],0xb314a0c5
  4043ab:	les    ebx,FWORD PTR [edx+ebp*2]
  4043ae:	jbe    0x404427
  4043b0:	mov    dh,0x7f
  4043b2:	mov    ah,dl
  4043b4:	or     esi,eax
  4043b6:	mov    al,BYTE PTR [edi]
  4043b8:	dec    esp
  4043b9:	and    BYTE PTR [eax+0x467282f6],dh
  4043bf:	push   cs
  4043c0:	retf   0x7c00
  4043c3:	sbb    eax,0x7a994473
  4043c8:	imul   eax,DWORD PTR [ebp+0x4],0x22
  4043cc:	sub    ebp,0x97823160
  4043d2:	jo     0x4043d8
  4043d4:	inc    ebx
  4043d5:	add    bh,0x7
  4043d8:	sub    esi,DWORD PTR [ecx+0x42]
  4043db:	mov    esi,0xdda70bb9
  4043e0:	in     eax,0x65
  4043e2:	int    0x31
  4043e4:	jecxz  0x4043b1
  4043e6:	pop    edx
  4043e7:	fsub   DWORD PTR [eax]
  4043e9:	jns    0x4043fe
  4043eb:	sub    eax,0xd3e2a4e4
  4043f0:	stos   DWORD PTR es:[edi],eax
  4043f1:	xor    edi,DWORD PTR [eax+0x17]
  4043f4:	sti    
  4043f5:	jns    0x404456
  4043f7:	push   eax
  4043f8:	xchg   edi,eax
  4043f9:	jae    0x4043f8
  4043fb:	(bad)  
  4043fc:	cs jp  0x4043b6
  4043ff:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404401:	xchg   ebx,eax
  404402:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  404404:	jmp    0xe88455ca
  404409:	ficomp WORD PTR [edx+0x67]
  40440c:	loope  0x4043e8
  40440e:	push   cs
  40440f:	hlt    
  404410:	or     al,0xc1
  404412:	add    eax,0xc380082c
  404417:	mov    BYTE PTR [ebx+0x44865bbe],dh
  40441d:	loop   0x4043af
  40441f:	xchg   ecx,eax
  404420:	xor    DWORD PTR [ebp+0x70c255e2],esi
  404426:	(bad)  [ecx-0x4f06e06f]
  40442c:	rcl    DWORD PTR [esi-0x764d37c6],cl
  404432:	and    al,0xd8
  404434:	adc    esp,DWORD PTR [ecx+0x1b]
  404437:	in     eax,dx
  404438:	dec    esp
  404439:	repz dec edi
  40443b:	lds    edx,FWORD PTR [edi]
  40443d:	outs   dx,BYTE PTR ds:[esi]
  40443e:	jl     0x4044bd
  404440:	scas   al,BYTE PTR es:[edi]
  404441:	xchg   ecx,eax
  404442:	call   0xa17077cf
  404447:	sbb    ebp,0x416762de
  40444d:	mov    ch,0xe6
  40444f:	pop    ebp
  404450:	mov    ebx,0x45c3b302
  404455:	mov    edx,0x7a46da68
  40445a:	pop    es
  40445b:	div    DWORD PTR [ecx]
  40445d:	xor    bh,ah
  40445f:	mov    DWORD PTR [eax-0x5],ecx
  404462:	jmp    0xbb1e:0x675b426b
  404469:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40446a:	es adc ebx,ebp
  40446d:	shl    DWORD PTR ds:0x8388fe65,cl
  404473:	add    BYTE PTR [edx+edx*8],0xe1
  404477:	push   ebp
  404478:	jle    0x4044cf
  40447a:	pop    ds
  40447b:	fimul  WORD PTR [edi-0x44015032]
  404481:	add    eax,0x67bea4d3
  404486:	inc    esi
  404487:	xchg   BYTE PTR ss:[ebx-0x19],bl
  40448b:	or     BYTE PTR [ebx],dh
  40448d:	into   
  40448e:	dec    edx
  40448f:	cmp    al,bh
  404491:	xor    al,0x6d
  404493:	jnp    0x40446c
  404495:	rcl    BYTE PTR [ecx-0x70],1
  404498:	out    dx,eax
  404499:	inc    ecx
  40449a:	arpl   si,sp
  40449c:	cmp    cl,bh
  40449e:	adc    al,0x15
  4044a0:	js     0x4044a6
  4044a2:	icebp  
  4044a3:	cmp    DWORD PTR [edi+ebx*4],eax
  4044a6:	sub    ah,ch
  4044a8:	mov    dl,0x10
  4044aa:	mov    ebp,0x65c9469
  4044af:	push   ds
  4044b0:	xlat   BYTE PTR ds:[ebx]
  4044b1:	pop    eax
  4044b2:	hlt    
  4044b3:	push   ebp
  4044b4:	sub    DWORD PTR [ecx+0x53],ebp
  4044b7:	add    esp,DWORD PTR [ecx+0xc]
  4044ba:	test   eax,0x57d36b02
  4044bf:	dec    esi
  4044c0:	xchg   edx,eax
  4044c1:	popf   
  4044c2:	rcr    DWORD PTR [ebx],1
  4044c4:	dec    esp
  4044c5:	inc    eax
  4044c6:	inc    edx
  4044c7:	jmp    0x4044f4
  4044c9:	push   cs
  4044ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044cb:	inc    esi
  4044cc:	adc    esp,DWORD PTR [ecx+0x78]
  4044cf:	jg     0x4044d2
  4044d1:	inc    eax
  4044d2:	inc    eax
  4044d3:	mov    ch,0x52
  4044d5:	imul   eax,ecx,0x79
  4044d8:	mov    eax,0x133c76a5
  4044dd:	retf   0x8be3
  4044e0:	cmp    eax,0xc2acb372
  4044e5:	cmp    dl,BYTE PTR [ecx]
  4044e7:	retf   0xf1d
  4044ea:	mov    bh,0xe8
  4044ec:	sti    
  4044ed:	into   
  4044ee:	data16 adc BYTE PTR ds:0xc337ed7b,dh
  4044f5:	pop    es
  4044f6:	aam    0x7b
  4044f8:	mov    ebx,0xe77b001e
  4044fd:	mov    ecx,0xf3f8e507
  404502:	mov    ds:0xaf29023b,al
  404507:	(bad)  [ecx+0x651dfa13]
  40450d:	adc    al,BYTE PTR [ecx+0x4a160f50]
  404513:	repnz stc 
  404515:	popa   
  404516:	mov    eax,ds:0xe2443db8
  40451b:	dec    ebx
  40451c:	cmc    
  40451d:	out    0x79,al
  40451f:	cmp    DWORD PTR [edi+0x86ba180],ebx
  404525:	push   0xfffffffc
  404527:	nop
  404528:	mov    cl,0x95
  40452a:	jae    0x4044bb
  40452c:	aad    0xbc
  40452e:	out    dx,eax
  40452f:	cmp    al,0x96
  404531:	dec    ecx
  404532:	out    dx,al
  404533:	dec    ecx
  404534:	(bad)  
  404535:	and    DWORD PTR [edi+0x35c736f5],ebp
  40453b:	mov    esp,0x43cd1318
  404540:	push   ds
  404541:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404542:	outs   dx,DWORD PTR ds:[esi]
  404543:	inc    ebp
  404544:	xor    ebx,esi
  404546:	das    
  404547:	loope  0x404571
  404549:	jmp    0x1aa7:0x44c6185a
  404550:	sub    BYTE PTR [edi+edx*1-0x29],dl
  404554:	aad    0xee
  404556:	jo     0x404538
  404558:	dec    esp
  404559:	sar    DWORD PTR [edi],1
  40455b:	imul   edi,DWORD PTR [ebx-0x7b],0x5e8e4be9
  404562:	inc    esp
  404563:	out    0x63,eax
  404565:	cs sbb eax,0x4e5de8d0
  40456b:	iret   
  40456c:	xor    al,BYTE PTR [ebx]
  40456e:	dec    ecx
  40456f:	int    0xb9
  404571:	pop    eax
  404572:	imul   esp,DWORD PTR [esi-0x643feff2],0xffffffbd
  404579:	sbb    BYTE PTR [eax+0x1c84757a],bl
  40457f:	(bad)  
  404580:	push   ebp
  404581:	add    ebp,DWORD PTR [ecx-0x746198a8]
  404587:	dec    ebx
  404588:	mov    ebp,0xf620801
  40458d:	ss jne 0x40454b
  404590:	cmp    ah,al
  404592:	or     BYTE PTR [ecx+eiz*4+0x32],cl
  404596:	sbb    DWORD PTR [ebx+0x3f],eax
  404599:	test   DWORD PTR [eax-0x71],ebx
  40459c:	fdiv   st,st(4)
  40459e:	(bad)  
  4045a0:	push   es
  4045a1:	mov    gs,ecx
  4045a3:	shl    DWORD PTR [esi+0x32e35c50],0x7b
  4045aa:	retf   0x8c50
  4045ad:	lea    edx,[ecx]
  4045af:	(bad)  
  4045b1:	xchg   al,bh
  4045b3:	in     eax,0x59
  4045b5:	jg     0x404547
  4045b7:	in     al,dx
  4045b8:	fiadd  DWORD PTR [ecx-0x203c6433]
  4045be:	push   eax
  4045bf:	iret   
  4045c0:	push   ebp
  4045c1:	sub    DWORD PTR [edi],eax
  4045c3:	fs mov esi,0xa0f41106
  4045c9:	sub    cl,BYTE PTR [edx]
  4045cb:	nop
  4045cc:	xchg   BYTE PTR [eax],bl
  4045ce:	push   0x57
  4045d0:	ja     0x404580
  4045d2:	dec    eax
  4045d3:	jmp    0x139b:0xdba19a06
  4045da:	call   0x1d9d:0xf2950184
  4045e1:	sub    esp,DWORD PTR [ecx]
  4045e3:	cdq    
  4045e4:	xchg   edi,eax
  4045e5:	dec    esi
  4045e6:	xchg   BYTE PTR [esi-0x2a],bl
  4045e9:	dec    ebp
  4045ea:	int3   
  4045eb:	dec    ebp
  4045ec:	std    
  4045ed:	inc    eax
  4045ee:	ss or  al,0xbc
  4045f1:	ret    0x6977
  4045f4:	outs   dx,BYTE PTR ds:[esi]
  4045f5:	dec    ecx
  4045f6:	jbe    0x4045c4
  4045f8:	addr16 inc edi
  4045fa:	cmp    DWORD PTR [ebx],0xffffffa4
  4045fd:	xchg   ebx,eax
  4045fe:	push   ss
  4045ff:	ror    edi,1
  404601:	xor    ebp,DWORD PTR [ebp+0x4f]
  404604:	dec    eax
  404605:	lds    edi,FWORD PTR [edx+ebx*8+0x6c]
  404609:	pop    ebp
  40460a:	jle    0x40460c
  40460c:	xchg   esp,eax
  40460d:	rol    DWORD PTR [edx],cl
  40460f:	ins    DWORD PTR es:[edi],dx
  404610:	pop    edx
  404611:	mov    ebp,0x15367627
  404616:	or     eax,0xb7522c51
  40461b:	int3   
  40461c:	lahf   
  40461d:	mov    cl,0x5
  40461f:	fadd   st(7),st
  404621:	int3   
  404622:	jnp    0x404620
  404624:	adc    BYTE PTR [ebx],0x40
  404627:	stos   DWORD PTR es:[edi],eax
  404628:	pop    ds
  404629:	clc    
  40462a:	push   0x5a
  40462c:	xor    eax,DWORD PTR [ecx+ecx*8-0x23fa383]
  404633:	sahf   
  404634:	push   eax
  404635:	mov    dl,0x57
  404637:	fs imul ebx,esp,0x9ecd9aa4
  40463e:	mov    dl,0x38
  404640:	mov    cl,0x41
  404642:	mov    DWORD PTR [edx-0x75e5240d],esi
  404648:	cdq    
  404649:	cs pop esp
  40464b:	popa   
  40464c:	in     eax,0x45
  40464e:	(bad)  
  40464f:	mov    WORD PTR [edi+0x20],?
  404652:	shl    BYTE PTR [ecx-0x4cbf37b5],1
  404658:	push   esp
  404659:	aas    
  40465a:	mov    gs,WORD PTR [ebx]
  40465c:	push   es
  40465d:	dec    edx
  40465e:	pop    ss
  40465f:	mov    al,BYTE PTR [ebx+0x32]
  404662:	imul   ebx,DWORD PTR [ebp+0x3d],0x8ba477f1
  404669:	mov    ebx,0x1f704b07
  40466e:	mov    bl,0x1d
  404670:	sar    BYTE PTR [ebx],0x54
  404673:	xchg   DWORD PTR [ecx+0x16],ebp
  404676:	popa   
  404677:	mov    ebp,DWORD PTR [ebp+0x7adb19ce]
  40467d:	dec    edx
  40467e:	(bad)  
  40467f:	aas    
  404680:	test   eax,0xd108fd63
  404685:	and    al,0xa6
  404687:	sub    eax,ebx
  404689:	mov    ecx,0x7c77d848
  40468e:	adc    esp,edx
  404690:	ud1    edx,esi
  404693:	stos   DWORD PTR es:[edi],eax
  404694:	push   ecx
  404695:	mov    edx,0x796e2c82
  40469a:	inc    edx
  40469b:	jp     0x404681
  40469d:	add    eax,0x3e77870
  4046a2:	test   eax,0x88dc11ea
  4046a7:	ds lahf 
  4046a9:	aas    
  4046aa:	clc    
  4046ab:	sub    DWORD PTR [eax],0x21
  4046ae:	pop    esp
  4046af:	int3   
  4046b0:	dec    ebx
  4046b1:	add    ebx,DWORD PTR [edx-0x55]
  4046b4:	in     al,0xe0
  4046b6:	fs cwde 
  4046b8:	test   eax,0x1beb21b2
  4046bd:	loop   0x4046ac
  4046bf:	xlat   BYTE PTR ds:[ebx]
  4046c0:	or     ah,BYTE PTR [edx-0x84b9489]
  4046c6:	mov    al,0x76
  4046c8:	push   es
  4046c9:	ds dec esp
  4046cb:	fs data16 add dl,dl
  4046cf:	xchg   edx,eax
  4046d0:	in     eax,dx
  4046d1:	das    
  4046d2:	ss idiv cl
  4046d5:	stos   DWORD PTR es:[edi],eax
  4046d6:	inc    edi
  4046d7:	pushf  
  4046d8:	and    ecx,ecx
  4046da:	dec    edi
  4046db:	std    
  4046dc:	ror    BYTE PTR [edi-0x2b],1
  4046df:	jne    0x4046bc
  4046e1:	jp     0x4046b1
  4046e3:	adc    esp,esi
  4046e5:	in     eax,0x8f
  4046e7:	jae    0x404722
  4046e9:	int    0xa5
  4046eb:	push   ds
  4046ec:	xchg   ebx,eax
  4046ed:	fnsave [edi-0x11dba149]
  4046f3:	out    0x22,al
  4046f5:	(bad)  [esi+0x72b0ba8b]
  4046fb:	pop    ss
  4046fc:	xor    esi,eax
  4046fe:	jo     0x4046df
  404700:	(bad)  
  404701:	sbb    BYTE PTR [esi],al
  404703:	dec    ebx
  404704:	out    dx,al
  404705:	sub    ebp,DWORD PTR ds:0x374b1a2a
  40470b:	or     al,0xce
  40470d:	jg     0x4046ff
  40470f:	add    al,0x5
  404711:	sub    bh,bl
  404713:	push   ds
  404714:	mov    dh,0xa5
  404716:	test   al,0x9d
  404718:	dec    edi
  404719:	sahf   
  40471a:	aad    0x8d
  40471c:	pop    esp
  40471d:	mov    esp,0x57e74fcd
  404722:	pop    ebx
  404723:	push   eax
  404724:	jbe    0x404712
  404726:	mov    bl,ah
  404728:	(bad)  
  404729:	mov    edi,0xccc3db04
  40472e:	sub    esi,DWORD PTR [ecx-0x387f8f41]
  404734:	out    0xbd,al
  404736:	xor    al,0xb
  404738:	mov    al,ds:0xfbeb134d
  40473d:	mov    bh,0x8d
  40473f:	jecxz  0x404751
  404741:	mov    esi,0x37466858
  404746:	inc    ecx
  404747:	sti    
  404748:	and    esp,ebx
  40474a:	popf   
  40474b:	xor    dl,BYTE PTR [eax]
  40474d:	xlat   BYTE PTR ds:[ebx]
  40474e:	mov    ah,al
  404750:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404751:	test   al,0x3f
  404753:	or     BYTE PTR [esi+0x5],bh
  404756:	add    eax,0xa4aa85b6
  40475b:	rcl    ecx,0x91
  40475e:	sbb    al,0x5c
  404760:	xabort 0xfb
  404763:	xchg   ecx,eax
  404764:	stc    
  404765:	aas    
  404766:	cmp    BYTE PTR [eax],bl
  404768:	test   al,0xea
  40476a:	xchg   edi,eax
  40476b:	fidiv  DWORD PTR [esi+0x2f18a44f]
  404771:	jns    0x40475f
  404773:	jle    0x40475a
  404775:	sti    
  404776:	push   cs
  404777:	fidivr WORD PTR [ecx]
  404779:	inc    edi
  40477a:	bound  ebp,QWORD PTR [ecx-0x52b6e56b]
  404780:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404781:	int    0x36
  404783:	ja     0x40477a
  404785:	push   cs
  404786:	loope  0x40474d
  404788:	jg     0x4047b9
  40478a:	pop    eax
  40478b:	push   cs
  40478c:	gs loopne 0x404719
  40478f:	test   DWORD PTR [ecx],esi
  404791:	xchg   ebx,eax
  404792:	aam    0xaa
  404794:	jecxz  0x40477c
  404796:	stos   DWORD PTR es:[edi],eax
  404797:	shl    BYTE PTR gs:[edi-0x52],0x3f
  40479c:	(bad)  
  40479d:	rol    dh,1
  40479f:	mul    ebx
  4047a1:	retf   0xafd9
  4047a4:	aam    0x6e
  4047a6:	stos   BYTE PTR es:[edi],al
  4047a7:	mov    ss,WORD PTR [ebx]
  4047a9:	iret   
  4047aa:	inc    ebp
  4047ab:	in     eax,0x41
  4047ad:	jns    0x404747
  4047af:	push   esi
  4047b0:	iret   
  4047b1:	lahf   
  4047b2:	jle    0x404787
  4047b4:	cwde   
  4047b5:	inc    eax
  4047b6:	and    eax,0x385d324b
  4047bb:	jl     0x404760
  4047bd:	or     DWORD PTR [edx-0x29652e5],esi
  4047c3:	stos   DWORD PTR es:[edi],eax
  4047c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047c5:	push   ss
  4047c6:	jnp    0x404823
  4047c8:	mov    ?,WORD PTR [esp+ecx*4-0x53466bd2]
  4047cf:	lds    ecx,FWORD PTR [esi+0x4a]
  4047d2:	rcr    BYTE PTR [esi+0x32],1
  4047d5:	fdivr  DWORD PTR [esi+0x50]
  4047d8:	add    eax,0x94dced87
  4047dd:	push   esp
  4047de:	in     al,0x73
  4047e0:	adc    DWORD PTR [edx+0x6b],esi
  4047e3:	push   es
  4047e4:	jne    0x40485d
  4047e6:	sub    eax,0x95b83b75
  4047eb:	or     eax,0x700bbc00
  4047f0:	int    0x9
  4047f2:	add    eax,DWORD PTR [ecx]
  4047f4:	push   ebx
  4047f5:	sahf   
  4047f6:	mov    ecx,0x1ef6b61e
  4047fb:	push   eax
  4047fc:	lea    esi,[ebp-0x7021d3b1]
  404802:	adc    DWORD PTR [esp+ebp*4+0x0],ebp
  404806:	jae    0x404869
  404808:	mov    cl,0x35
  40480a:	xor    ch,BYTE PTR [eax+eiz*2]
  40480d:	sub    DWORD PTR [ebp-0x3fecbb80],ebx
  404813:	aas    
  404814:	into   
  404815:	fstp   TBYTE PTR [edi+0x6]
  404818:	add    eax,0x8dbf42d5
  40481d:	and    DWORD PTR [edi-0x9],esi
  404820:	ror    DWORD PTR [edx-0x2889f262],cl
  404826:	jmp    0x4047f2
  404828:	push   edi
  404829:	push   ebp
  40482a:	cmp    eax,0xf7e0c91e
  40482f:	in     al,dx
  404830:	outs   dx,DWORD PTR ds:[esi]
  404831:	jmp    0xfa03237d
  404836:	jnp    0x40485e
  404838:	pop    ds
  404839:	mov    dl,0x5c
  40483b:	lods   eax,DWORD PTR ds:[esi]
  40483c:	add    al,0x27
  40483e:	out    dx,eax
  40483f:	je     0x4047d5
  404841:	pop    es
  404842:	in     al,0x90
  404844:	scas   eax,DWORD PTR es:[edi]
  404845:	ret    0x5f72
  404848:	sar    BYTE PTR [eax-0x55085da6],1
  40484e:	ins    BYTE PTR es:[edi],dx
  40484f:	imul   esi,DWORD PTR [eax-0x1ed982c5],0xffffffb0
  404856:	push   0xc22c904b
  40485b:	mov    fs,WORD PTR [ebx+0x59]
  40485e:	not    dh
  404860:	or     al,0x87
  404862:	and    cl,BYTE PTR [ecx+eax*8-0x2bffac10]
  404869:	jns    0x404819
  40486b:	add    dh,BYTE PTR [ecx+0x6f0765]
  404871:	adc    eax,0x10b1b968
  404876:	mov    ebx,0xf3935f97
  40487b:	jmp    0x4048b5
  40487d:	jl     0x4048ea
  40487f:	cmp    esp,edi
  404881:	fidiv  WORD PTR [esi+0x3ecc0417]
  404887:	mov    eax,0xb45ea5f1
  40488c:	into   
  40488d:	lock mov bl,0xf1
  404890:	adc    al,0xa1
  404892:	dec    edx
  404893:	cmp    ecx,DWORD PTR [edi+0x3d]
  404896:	popa   
  404897:	mov    ah,0x6
  404899:	add    DWORD PTR [edi],esp
  40489b:	xchg   ebx,eax
  40489c:	repnz std 
  40489e:	adc    bl,BYTE PTR [edi+0x11188592]
  4048a4:	xchg   BYTE PTR [esi],dh
  4048a6:	retf   
  4048a7:	lea    ebx,[esi-0x4bb50fba]
  4048ad:	mov    esp,ebp
  4048af:	jmp    0xc6f0189a
  4048b4:	arpl   WORD PTR [edx],dx
  4048b6:	xchg   esi,eax
  4048b7:	cmp    eax,0x2796225e
  4048bc:	les    ecx,FWORD PTR [esi+eax*2+0x67]
  4048c0:	outs   dx,BYTE PTR ds:[esi]
  4048c1:	push   edx
  4048c2:	xchg   DWORD PTR [esi],esp
  4048c4:	jnp    0x40486d
  4048c6:	push   ss
  4048c7:	pushf  
  4048c8:	jne    0x4048ed
  4048ca:	imul   ch
  4048cc:	jmp    0xb573:0x2e2472b6
  4048d3:	imul   ebp,DWORD PTR [ebp-0x25],0x9aff815f
  4048da:	add    ah,BYTE PTR [edi]
  4048dc:	mov    edi,ebx
  4048de:	mov    dh,0x4a
  4048e0:	ds repz ds leave 
  4048e4:	gs dec eax
  4048e6:	jmp    0x404913
  4048e8:	outs   dx,BYTE PTR ds:[esi]
  4048e9:	adc    ebx,DWORD PTR [eax+0x76]
  4048ec:	xlat   BYTE PTR ds:[ebx]
  4048ee:	stos   DWORD PTR es:[edi],eax
  4048ef:	std    
  4048f0:	jae    0x404964
  4048f2:	xor    BYTE PTR [edx],ch
  4048f4:	or     DWORD PTR [esi],ecx
  4048f6:	bound  edi,QWORD PTR [edx]
  4048f8:	jo     0x4048f1
  4048fa:	sbb    BYTE PTR [edi],bl
  4048fc:	sbb    eax,0x9079e57a
  404901:	out    0x77,al
  404903:	jmp    0x644f:0xa9dc8090
  40490a:	(bad)  
  40490c:	mov    bl,0x37
  40490e:	dec    edx
  40490f:	sti    
  404910:	mov    edx,0x492e3ba7
  404915:	lods   al,BYTE PTR ds:[esi]
  404916:	inc    ecx
  404917:	fist   DWORD PTR [edx+edx*1-0xbd60bdc]
  40491e:	aaa    
  40491f:	push   ecx
  404920:	push   esi
  404921:	inc    ebx
  404922:	sar    DWORD PTR [edi-0x3c566a35],1
  404928:	push   ecx
  404929:	int3   
  40492a:	mov    bl,0x49
  40492c:	gs mov ebx,0x9292cee4
  404932:	daa    
  404933:	inc    esi
  404934:	and    BYTE PTR [esi-0x11ee4837],al
  40493a:	jae    0x4048d5
  40493c:	jns    0x4049bb
  40493e:	cmp    al,0x7d
  404940:	int    0x95
  404942:	sbb    ch,BYTE PTR [ebp-0x6]
  404945:	scas   eax,DWORD PTR es:[edi]
  404946:	mov    ah,0x26
  404948:	ret    0xa5a1
  40494b:	pusha  
  40494c:	sub    edx,ecx
  40494e:	xchg   esp,eax
  40494f:	sahf   
  404950:	xor    edx,eax
  404952:	mov    ds:0xb123776a,al
  404957:	adc    ebx,DWORD PTR ds:0x6e37aecc
  40495d:	retf   0x1022
  404960:	jp     0x4049da
  404962:	iret   
  404963:	mov    bl,0xf8
  404965:	jb     0x404937
  404967:	icebp  
  404968:	push   edi
  404969:	xlat   BYTE PTR ds:[ebx]
  40496a:	enter  0x5eae,0xff
  40496e:	imul   ebp,DWORD PTR [ecx],0x45
  404971:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404972:	clc    
  404973:	jne    0x4049cb
  404975:	mov    ecx,0x4153fb2
  40497a:	rcl    BYTE PTR [edx],cl
  40497c:	rol    ch,1
  40497e:	mov    ecx,0xd297554
  404983:	test   al,0xfb
  404985:	mov    ch,0xa3
  404987:	fcomp  DWORD PTR [eax+ebp*4+0x6bb754a2]
  40498e:	dec    ebx
  40498f:	dec    ebx
  404990:	push   esi
  404991:	push   edi
  404992:	in     eax,0x20
  404994:	xchg   ecx,eax
  404995:	std    
  404996:	int    0x19
  404998:	push   ebp
  404999:	add    eax,0xf046c98a
  40499e:	jne    0x4049b4
  4049a0:	out    dx,al
  4049a1:	push   0x244fafb3
  4049a6:	aam    0x5e
  4049a8:	sbb    dh,bl
  4049aa:	sbb    eax,0x6e4b7c87
  4049af:	retf   0x6454
  4049b2:	inc    edx
  4049b3:	or     DWORD PTR [edx+0x23],ebx
  4049b6:	pop    esp
  4049b7:	fsub   st(7),st
  4049b9:	loop   0x4049b0
  4049bb:	or     eax,0xd992172b
  4049c0:	sub    eax,0x2de0722c
  4049c5:	int3   
  4049c6:	add    DWORD PTR [ebx+0x5f],ebx
  4049c9:	pop    es
  4049ca:	cmp    edi,edx
  4049cc:	mov    ch,0x3a
  4049ce:	call   0x31f8:0xf50103fd
  4049d5:	pop    es
  4049d6:	(bad)  [eax-0x7f]
  4049d9:	hlt    
  4049da:	jns    0x404a40
  4049dc:	sub    al,0xf8
  4049de:	(bad)  
  4049e0:	clc    
  4049e1:	cli    
  4049e2:	ja     0x404965
  4049e4:	std    
  4049e5:	enter  0xd97c,0xf3
  4049e9:	push   esp
  4049ea:	(bad)  
  4049eb:	test   al,0x6
  4049ed:	mov    ecx,0x9eeed4f6
  4049f2:	(bad)  
  4049f3:	sub    al,0x4b
  4049f5:	call   0xd498db
  4049fa:	inc    ebp
  4049fb:	jne    0x4049ef
  4049fd:	xor    eax,edx
  4049ff:	rcr    BYTE PTR [edx],cl
  404a01:	xchg   ebp,eax
  404a02:	out    dx,eax
  404a03:	add    al,BYTE PTR [esi-0x81249fb]
  404a09:	sti    
  404a0a:	sahf   
  404a0b:	mov    dl,0xbc
  404a0d:	in     al,dx
  404a0e:	fild   WORD PTR [ebp+0x393e5d75]
  404a14:	sub    ebx,edx
  404a16:	mov    eax,fs:0x9838311a
  404a1c:	test   BYTE PTR [edx],dh
  404a1e:	pop    esp
  404a1f:	in     al,0x4a
  404a21:	inc    esp
  404a22:	stos   BYTE PTR es:[edi],al
  404a23:	int    0x6f
  404a25:	jbe    0x404a37
  404a27:	xchg   edi,eax
  404a28:	out    0xcf,eax
  404a2a:	in     eax,0x12
  404a2c:	xor    ah,BYTE PTR ds:0x84b629ea
  404a32:	in     eax,0xb3
  404a34:	pop    ss
  404a35:	add    al,cl
  404a37:	sbb    DWORD PTR [ecx+0xcaceba4],ebp
  404a3d:	sbb    edi,DWORD PTR [edi+eax*2+0x5a0b3f6a]
  404a44:	les    esp,FWORD PTR [edi-0xf9f47a3]
  404a4a:	call   0x99525d1e
  404a4f:	push   eax
  404a50:	jp     0x404a1b
  404a52:	xchg   DWORD PTR [ecx+ebp*1+0x7f10f859],eax
  404a59:	xor    DWORD PTR [eax+0x2e85c7d4],esi
  404a5f:	adc    BYTE PTR [ebp+ecx*1-0x1d],ch
  404a63:	mov    WORD PTR [ecx],?
  404a65:	jno    0x404ae2
  404a67:	or     dl,BYTE PTR [eax+0x48]
  404a6a:	xchg   ebp,eax
  404a6b:	addr16 xor al,ch
  404a6e:	jg     0x404a38
  404a70:	mov    DWORD PTR [ebp+eax*4-0x71411d15],ebp
  404a77:	sbb    BYTE PTR [edx+0x5cc1b4df],bh
  404a7d:	std    
  404a7e:	sub    eax,0xa2074b14
  404a83:	push   0x0
  404a85:	scas   al,BYTE PTR es:[edi]
  404a86:	enter  0xf296,0x41
  404a8a:	cmp    edx,ebp
  404a8c:	pushf  
  404a8d:	or     BYTE PTR [edi+0x32b3caf],al
  404a93:	stc    
  404a94:	inc    esp
  404a95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a96:	test   BYTE PTR [edx+eiz*2],0x6a
  404a9a:	fsub   DWORD PTR [ecx+0x74]
  404a9d:	stc    
  404a9e:	inc    eax
  404a9f:	retf   
  404aa0:	jb     0x404b0a
  404aa2:	out    dx,al
  404aa3:	addr16 lahf 
  404aa5:	jb     0x404a92
  404aa7:	int3   
  404aa8:	dec    esp
  404aa9:	sahf   
  404aaa:	push   ecx
  404aab:	frstor [edi]
  404aad:	int3   
  404aae:	mov    DWORD PTR [ecx-0x3b],ebp
  404ab1:	pop    ebp
  404ab2:	inc    ecx
  404ab3:	cmp    dl,ch
  404ab5:	sub    esi,edx
  404ab7:	jne    0x404a9b
  404ab9:	cmp    al,0xd1
  404abb:	mov    esp,0x1782ecdc
  404ac0:	ror    BYTE PTR [ebx],cl
  404ac2:	sbb    DWORD PTR [ecx+0x6cfa846e],edx
  404ac8:	jo     0x404b27
  404aca:	in     eax,dx
  404acb:	jl     0x404a65
  404acd:	mov    bl,0xb5
  404acf:	sbb    cl,BYTE PTR [edx+0x20]
  404ad2:	dec    edi
  404ad3:	push   es
  404ad4:	mov    esi,DWORD PTR [ebp-0x7e356181]
  404ada:	clc    
  404adb:	out    dx,eax
  404adc:	sub    BYTE PTR [edi-0x31],ch
  404adf:	pop    es
  404ae0:	pop    ds
  404ae1:	ret    0xe237
  404ae4:	mov    dh,0xb7
  404ae6:	test   eax,0x80a6b37b
  404aeb:	pop    es
  404aec:	sbb    eax,0xc60841c8
  404af1:	push   ds
  404af2:	xlat   BYTE PTR ds:[ebx]
  404af4:	xor    eax,DWORD PTR [ebx]
  404af6:	sahf   
  404af7:	jle    0x404b1a
  404af9:	sub    BYTE PTR ds:0x1543702b,ah
  404aff:	repnz call 0xbcb3:0x21a730a1
  404b07:	jno    0x404ad3
  404b09:	lods   eax,DWORD PTR ds:[esi]
  404b0a:	arpl   bx,bx
  404b0c:	jo     0x404b82
  404b0e:	pop    esp
  404b0f:	test   eax,0x53b4331f
  404b14:	pop    edx
  404b15:	bound  ecx,QWORD PTR [esp+edi*1-0x547c9f08]
  404b1c:	loop   0x404b14
  404b1e:	out    dx,eax
  404b1f:	cwde   
  404b20:	lea    edx,[eax-0x15]
  404b23:	call   0x3630:0xfbf22772
  404b2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b2b:	push   cs
  404b2c:	cs mov bh,0xf3
  404b2f:	and    ebx,DWORD PTR [ebx]
  404b31:	and    DWORD PTR [ecx+0x21],ebx
  404b34:	(bad)  
  404b36:	dec    eax
  404b37:	(bad)  
  404b38:	mov    esp,0x5792d632
  404b3d:	adc    al,0xd6
  404b3f:	jmp    0xaf06:0xad726796
  404b46:	sub    esi,ebp
  404b48:	mov    dl,0x70
  404b4a:	or     BYTE PTR [edx-0x38],dh
  404b4d:	adc    BYTE PTR [edx],cl
  404b4f:	inc    edx
  404b50:	push   ss
  404b51:	push   cs
  404b52:	adc    al,0xa3
  404b54:	dec    esi
  404b55:	scas   al,BYTE PTR es:[edi]
  404b56:	mov    ebp,0x1ba5e8b9
  404b5b:	out    dx,eax
  404b5c:	adc    BYTE PTR [ebp+edi*8-0x336b19fe],ch
  404b63:	mov    dl,0x8b
  404b65:	in     al,0xe5
  404b67:	sbb    al,0x78
  404b69:	add    eax,0xcb64ce6f
  404b6e:	push   ebp
  404b6f:	push   ebx
  404b70:	ret    
  404b71:	scas   eax,DWORD PTR es:[edi]
  404b72:	scas   eax,DWORD PTR es:[edi]
  404b73:	dec    ebp
  404b74:	pop    ds
  404b75:	add    DWORD PTR [esp+eiz*4],0x67bc5806
  404b7c:	inc    esp
  404b7d:	scas   al,BYTE PTR es:[edi]
  404b7e:	jne    0x404b29
  404b80:	mov    ds:0xdc7b883c,eax
  404b85:	push   ebx
  404b86:	in     eax,dx
  404b87:	pop    es
  404b88:	xor    edx,edx
  404b8a:	xchg   esi,eax
  404b8b:	mov    dh,0xe7
  404b8d:	jl     0x404bde
  404b8f:	jmp    0x404b67
  404b91:	out    dx,eax
  404b92:	xchg   esi,eax
  404b93:	jg     0x404bac
  404b95:	cld    
  404b96:	cmp    ah,cl
  404b98:	pop    ds
  404b99:	clc    
  404b9a:	cdq    
  404b9b:	arpl   WORD PTR [ecx],si
  404b9d:	lea    ecx,[edx-0x6ff73cce]
  404ba3:	jecxz  0x404b49
  404ba5:	xchg   BYTE PTR [eax+0x1dd87a93],cl
  404bab:	mov    ebx,DWORD PTR [eax+edx*2]
  404bae:	or     ch,BYTE PTR [ebp-0x5c]
  404bb1:	pop    ebp
  404bb2:	push   esi
  404bb3:	cs jae 0x404bea
  404bb6:	xchg   edi,eax
  404bb7:	int3   
  404bb8:	popf   
  404bb9:	fld    TBYTE PTR [edx-0xd]
  404bbc:	add    edx,DWORD PTR [ecx+0x7354cc8a]
  404bc2:	fcmovbe st,st(3)
  404bc4:	push   edi
  404bc5:	cs mov cl,0x30
  404bc8:	retf   
  404bc9:	cmp    BYTE PTR [ecx],dh
  404bcb:	xor    ebx,0x1
  404bce:	cmp    DWORD PTR [esi-0x2],ebp
  404bd1:	adc    BYTE PTR [esi],dl
  404bd3:	push   ebx
  404bd4:	push   edx
  404bd5:	mov    esi,?
  404bd7:	mov    cl,0x5f
  404bd9:	lods   eax,DWORD PTR ds:[esi]
  404bda:	mov    bh,0x1b
  404bdc:	cwde   
  404bdd:	cwde   
  404bde:	dec    esi
  404bdf:	xor    edx,DWORD PTR ds:0x89d1845f
  404be5:	dec    esp
  404be6:	cwde   
  404be7:	xchg   DWORD PTR [eax],esi
  404be9:	fstp   DWORD PTR [ebx+0x10]
  404bec:	cmp    dh,al
  404bee:	int3   
  404bef:	(bad)  
  404bf0:	or     al,0x8
  404bf2:	cmp    al,0x5f
  404bf4:	mov    ds:0x5b90894c,al
  404bf9:	or     eax,0x2a2e46cf
  404bfe:	jg     0x404bbd
  404c00:	xor    al,0x1d
  404c02:	pop    ecx
  404c03:	data16 adc BYTE PTR ds:0xb2929788,ch
  404c0a:	adc    BYTE PTR [ebx],dh
  404c0c:	test   al,0xf2
  404c0e:	xchg   esi,eax
  404c0f:	outs   dx,BYTE PTR ds:[esi]
  404c10:	call   0x89b84490
  404c15:	jb     0x404c6e
  404c17:	xchg   esi,eax
  404c18:	cmp    eax,0x332216aa
  404c1d:	mov    edi,0x68a98477
  404c22:	xlat   BYTE PTR ds:[ebx]
  404c23:	add    BYTE PTR [ecx+0x15],0xf
  404c27:	adc    BYTE PTR [ecx],dh
  404c29:	bound  edi,QWORD PTR [ebp-0x558b670a]
  404c2f:	jmp    0x404c03
  404c31:	scas   al,BYTE PTR es:[edi]
  404c32:	lea    ebx,[ebp+0x5]
  404c35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c36:	prefetcht1 BYTE PTR [esi-0x1a]
  404c3a:	lods   eax,DWORD PTR ds:[esi]
  404c3b:	loop   0x404c12
  404c3d:	mov    ah,0x76
  404c3f:	adc    esi,ebp
  404c41:	test   DWORD PTR [edx-0x10],esi
  404c44:	and    al,0xed
  404c46:	push   ecx
  404c47:	rcl    BYTE PTR [ebx],1
  404c49:	sub    eax,0xc9a8327
  404c4e:	outs   dx,BYTE PTR ds:[esi]
  404c4f:	aam    0x9e
  404c51:	push   0xa2008b43
  404c56:	fisubr DWORD PTR [ebx+0x42]
  404c59:	and    al,0x98
  404c5b:	ret    0x3536
  404c5e:	xor    cl,bl
  404c60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c61:	aam    0xe8
  404c63:	sbb    esi,esi
  404c65:	lods   al,BYTE PTR ds:[esi]
  404c66:	or     ecx,edx
  404c68:	xchg   esi,eax
  404c69:	test   BYTE PTR [edx-0x7f],0x2b
  404c6d:	jne    0x404cdf
  404c6f:	(bad)  
  404c70:	pushf  
  404c71:	xor    cl,ch
  404c73:	addr16 pop edx
  404c75:	retf   
  404c76:	pop    esp
  404c77:	test   eax,0xe71d7ab9
  404c7c:	jmp    0x927b866e
  404c81:	dec    ecx
  404c82:	and    edx,DWORD PTR [eax+0x4c183d1c]
  404c88:	sbb    esp,DWORD PTR [eax+esi*1]
  404c8b:	add    al,0x94
  404c8d:	add    al,0xf7
  404c8f:	jnp    0x404c7b
  404c91:	cmp    ecx,DWORD PTR [eax+0x25ed164d]
  404c97:	je     0x404c85
  404c99:	push   gs
  404c9b:	pop    ecx
  404c9c:	pop    edx
  404c9d:	pop    eax
  404c9e:	inc    edi
  404c9f:	xchg   ecx,eax
  404ca0:	aad    0xdd
  404ca2:	and    BYTE PTR [ebx+0x44],al
  404ca5:	das    
  404ca6:	in     eax,0xc0
  404ca8:	push   ds
  404ca9:	xchg   esp,eax
  404caa:	cmp    DWORD PTR [edi],edi
  404cac:	xchg   edi,eax
  404cad:	arpl   WORD PTR [edx],di
  404caf:	mov    edx,gs
  404cb1:	mov    DWORD PTR [eax],edx
  404cb3:	(bad)  
  404cb4:	popf   
  404cb5:	inc    edx
  404cb6:	in     al,0xf3
  404cb8:	dec    ebp
  404cb9:	or     DWORD PTR [ecx-0x15],ebx
  404cbc:	push   edx
  404cbd:	popa   
  404cbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cbf:	cmp    ebp,DWORD PTR [ecx-0xa07f088]
  404cc5:	psllq  mm2,QWORD PTR [ebp-0x41a656f9]
  404ccc:	arpl   WORD PTR [esi+0x32],sp
  404ccf:	push   ss
  404cd0:	in     eax,dx
  404cd1:	mov    edx,DWORD PTR [ebx]
  404cd3:	or     eax,0x49496307
  404cd8:	jg     0x404c6d
  404cda:	dec    ebx
  404cdb:	out    0x33,al
  404cdd:	xchg   esp,eax
  404cde:	cmc    
  404cdf:	mov    ds:0x20ed04df,al
  404ce4:	int3   
  404ce5:	ja     0x404c7d
  404ce7:	shr    BYTE PTR [ecx+0xb],cl
  404cea:	jle    0x404cbf
  404cec:	bound  edi,QWORD PTR [esi-0x7c]
  404cef:	call   0xc064c490
  404cf4:	push   ebx
  404cf5:	sbb    DWORD PTR [ebx-0x61],ecx
  404cf8:	cdq    
  404cf9:	js     0x404d5b
  404cfb:	je     0x404cd0
  404cfd:	sar    DWORD PTR ds:0x7dd5e9b0,cl
  404d03:	dec    ebp
  404d04:	fxtract 
  404d06:	inc    edx
  404d07:	lds    edx,FWORD PTR [ecx-0x18]
  404d0a:	std    
  404d0b:	or     al,0x2
  404d0d:	aas    
  404d0e:	sbb    BYTE PTR [edx+0x75],cl
  404d11:	jp     0x404cb8
  404d13:	sub    eax,0x97238d06
  404d18:	xor    eax,0xcb3e6229
  404d1d:	mov    ds:0x83159ce8,al
  404d22:	adc    edx,esi
  404d24:	mov    ah,BYTE PTR [edx+0x35]
  404d27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d28:	jle    0x404d97
  404d2a:	mov    ebx,0xfd4bf3fb
  404d2f:	pop    ebp
  404d30:	mov    dl,0xb2
  404d32:	mov    ds:0xd14784b,eax
  404d37:	ins    BYTE PTR es:[edi],dx
  404d38:	fistp  WORD PTR [edi-0x14]
  404d3b:	dec    esp
  404d3c:	lea    ecx,[esi-0x20]
  404d3f:	scas   eax,DWORD PTR es:[edi]
  404d40:	mov    esp,0xeb78edf5
  404d45:	data16 rcr bl,cl
  404d48:	or     ch,BYTE PTR [esi+0x4c]
  404d4b:	xchg   esp,eax
  404d4c:	test   DWORD PTR [eax],ecx
  404d4e:	jmp    0x5a1:0x13e33809
  404d55:	shl    DWORD PTR [esi+0x6c],cl
  404d58:	xchg   bl,al
  404d5a:	and    BYTE PTR [esi+eiz*8],dh
  404d5d:	es jns 0x404d83
  404d60:	sbb    BYTE PTR [ecx+0x74],dh
  404d63:	jne    0x404d26
  404d65:	sub    ecx,DWORD PTR [edx+0x40]
  404d68:	es dec ebx
  404d6a:	jp     0x6adeea3a
  404d70:	mov    al,ds:0x6ebc4ba8
  404d75:	mov    ds,WORD PTR [ecx-0x46]
  404d78:	loope  0x404d06
  404d7a:	sub    eax,0xbcab1e45
  404d7f:	std    
  404d80:	and    edi,DWORD PTR [esi]
  404d82:	xor    BYTE PTR [ecx+ecx*8-0x29],0x7a
  404d87:	mov    esp,0x9db183d0
  404d8c:	adc    al,0x9c
  404d8e:	fs inc eax
  404d90:	jecxz  0x404dab
  404d92:	mov    ds:0xd66395be,eax
  404d97:	mov    BYTE PTR [edx],bh
  404d99:	add    bl,BYTE PTR [edx+0x7b77a9d6]
  404d9f:	pop    ebp
  404da0:	xor    ebx,DWORD PTR [esi+0x23]
  404da3:	or     al,0xe1
  404da5:	and    eax,DWORD PTR [eax-0x21f431cf]
  404dab:	ins    BYTE PTR es:[edi],dx
  404dac:	xchg   esi,eax
  404dad:	jge    0x404d30
  404daf:	sbb    DWORD PTR [ebp+0x44],edx
  404db2:	mov    ds:0x9c9e0d3b,al
  404db7:	fsubr  QWORD PTR [eax+0x7e]
  404dba:	call   0xe328:0x31b0d4df
  404dc1:	mov    ds:0x2ada5c2a,al
  404dc6:	mov    ebp,0x197cf711
  404dcb:	dec    esp
  404dcc:	popf   
  404dcd:	aaa    
  404dce:	ds jo  0x404d6a
  404dd1:	sti    
  404dd2:	push   0xba8ab7f5
  404dd7:	or     ebx,DWORD PTR [edi+0x638cc26f]
  404ddd:	pop    ebx
  404dde:	ss shl esi,0x5e
  404de2:	call   0xaa875bdf
  404de7:	cmp    esp,DWORD PTR [edi]
  404de9:	dec    DWORD PTR [edx-0x2]
  404dec:	or     BYTE PTR [ebp+0x33],ah
  404def:	retf   
  404df0:	int3   
  404df1:	jmp    0xf9d5:0xe1086108
  404df8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404df9:	inc    ebx
  404dfa:	test   bh,bh
  404dfc:	rol    DWORD PTR [ebx+0x284c068e],0x1b
  404e03:	sub    ebx,DWORD PTR [ebx-0x47]
  404e06:	mov    ds:0x59e2f0d2,eax
  404e0b:	cmp    DWORD PTR [edi-0x5d],ebp
  404e0e:	sbb    BYTE PTR [ebx+esi*4],cl
  404e11:	ret    
  404e12:	mov    ds:0xdc9d6870,eax
  404e17:	loopne 0x404e75
  404e19:	les    edi,FWORD PTR [edi+0x58fb9178]
  404e1f:	sbb    eax,0xe2790f9b
  404e24:	sbb    al,BYTE PTR [edx]
  404e26:	mov    esp,0x7516b1b
  404e2b:	(bad)  
  404e2c:	jne    0x404e1b
  404e2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e2f:	leave  
  404e30:	std    
  404e31:	bswap  edx
  404e33:	pop    ss
  404e34:	int    0x8c
  404e36:	(bad)
  404e3a:	pop    ecx
  404e3b:	aaa    
  404e3c:	test   ebx,edx
  404e3e:	adc    eax,ebp
  404e40:	loop   0x404e6f
  404e42:	xchg   edi,eax
  404e43:	pop    esp
  404e44:	lahf   
  404e45:	xor    DWORD PTR [ebx+0x6c],esp
  404e48:	jne    0x404df4
  404e4a:	lods   al,BYTE PTR ds:[esi]
  404e4b:	dec    eax
  404e4c:	push   sp
  404e4e:	outs   dx,BYTE PTR ds:[esi]
  404e4f:	jl     0x404e26
  404e51:	dec    eax
  404e52:	mov    al,0xfe
  404e54:	hlt    
  404e55:	dec    ebp
  404e56:	test   BYTE PTR fs:[esi-0x502b56f],cl
  404e5d:	das    
  404e5e:	lods   eax,DWORD PTR ds:[esi]
  404e5f:	fild   QWORD PTR [ecx-0x52951227]
  404e65:	dec    edi
  404e66:	shl    BYTE PTR [si+0x1228],cl
  404e6b:	(bad)  
  404e6c:	sbb    BYTE PTR [ebx],bh
  404e6e:	mov    esi,0x3fe8c38c
  404e73:	sub    al,0x43
  404e75:	sub    ah,BYTE PTR [esi+0x723489d3]
  404e7b:	out    dx,al
  404e7c:	cmp    BYTE PTR [edi+0x50],0x5b
  404e80:	push   edi
  404e81:	sub    DWORD PTR [eax],edx
  404e83:	and    BYTE PTR [ecx],0x3c
  404e86:	inc    eax
  404e87:	cmp    al,dh
  404e89:	gs lahf 
  404e8b:	pop    edx
  404e8c:	xchg   edx,eax
  404e8d:	push   edx
  404e8e:	xlat   BYTE PTR ds:[ebx]
  404e8f:	mov    edi,DWORD PTR [eax]
  404e91:	jmp    0x3daae808
  404e96:	das    
  404e97:	push   ebx
  404e98:	adc    al,0x50
  404e9a:	aad    0x5c
  404e9c:	or     eax,0x70b6b8e2
  404ea1:	mov    eax,ds:0xe9c00226
  404ea6:	xacquire xchg DWORD PTR [ebx],edi
  404ea9:	fsub   QWORD PTR [esi+0x34]
  404eac:	mov    esp,DWORD PTR [eax]
  404eae:	adc    BYTE PTR [edi],bh
  404eb0:	adc    esi,edi
  404eb2:	pop    ds
  404eb3:	outs   dx,BYTE PTR ds:[esi]
  404eb4:	mov    DWORD PTR [edx],ecx
  404eb6:	lahf   
  404eb7:	add    DWORD PTR [ebx-0x4f2e46c5],edx
  404ebd:	or     eax,0x2bf321c4
  404ec2:	ja     0x404f18
  404ec4:	lods   al,BYTE PTR ds:[esi]
  404ec5:	sti    
  404ec6:	cdq    
  404ec7:	out    dx,eax
  404ec8:	shl    BYTE PTR [edi-0x17256a50],cl
  404ece:	jns    0x404e9e
  404ed0:	sti    
  404ed1:	dec    ecx
  404ed2:	mov    al,ds:0x48808836
  404ed7:	js     0x404f17
  404ed9:	jno    0x404f28
  404edb:	add    ecx,DWORD PTR ss:[ecx-0x28cbcb84]
  404ee2:	dec    eax
  404ee3:	popa   
  404ee4:	xchg   BYTE PTR [esi+0x44],bl
  404ee7:	xor    eax,edi
  404ee9:	outs   dx,BYTE PTR cs:[esi]
  404eeb:	dec    edi
  404eec:	in     al,dx
  404eed:	inc    edi
  404eee:	addr16 and bh,al
  404ef1:	dec    edi
  404ef2:	retf   0xcee2
  404ef5:	or     al,0x36
  404ef7:	nop
  404ef8:	ds and ebp,edx
  404efb:	and    DWORD PTR [esi+edx*2-0x46],ebx
  404eff:	xor    DWORD PTR [edx+0x3501eb6e],ebx
  404f05:	jmp    0xf463:0x252b1290
  404f0c:	or     DWORD PTR [ebp+eax*1-0x1e],ebp
  404f10:	pop    edi
  404f11:	(bad)  
  404f12:	cmc    
  404f13:	dec    eax
  404f14:	mov    dh,0x25
  404f16:	das    
  404f17:	dec    ebp
  404f18:	add    bl,BYTE PTR [ebx]
  404f1a:	clc    
  404f1b:	mov    ebx,0xd6910d9c
  404f20:	(bad)  
  404f21:	cmp    DWORD PTR [edx+0x61],ebx
  404f24:	jb     0x404f82
  404f26:	dec    esi
  404f27:	mov    bh,0x33
  404f29:	fcmovu st,st(2)
  404f2b:	(bad)  
  404f2d:	jmp    0xcda6a905
  404f32:	out    dx,eax
  404f33:	test   DWORD PTR [edi+edx*1],eax
  404f36:	repnz lock cwde 
  404f39:	ins    DWORD PTR es:[edi],dx
  404f3a:	sahf   
  404f3b:	pop    edx
  404f3c:	sahf   
  404f3d:	push   edi
  404f3e:	je     0x404fad
  404f40:	test   BYTE PTR ds:0x4c8e7142,0xac
  404f47:	xlat   BYTE PTR ds:[ebx]
  404f48:	add    eax,0xffffff8b
  404f4b:	stc    
  404f4c:	iret   
  404f4d:	xchg   bl,bl
  404f4f:	mov    ecx,0x8d365cd7
  404f54:	xor    dl,BYTE PTR [edi-0x7957d7cf]
  404f5a:	ss js  0x404f0b
  404f5d:	sbb    DWORD PTR [esi+edx*4+0x19],ebp
  404f61:	aas    
  404f62:	pop    ss
  404f63:	mov    eax,ds:0xbf9b4510
  404f68:	push   esp
  404f69:	jecxz  0x404f8d
  404f6b:	xchg   ah,cl
  404f6d:	rcr    BYTE PTR gs:[ebp+0x5c],1
  404f71:	sahf   
  404f72:	mov    al,0xce
  404f74:	mov    bl,0xc5
  404f76:	sbb    BYTE PTR [eax],dh
  404f78:	scas   al,BYTE PTR es:[edi]
  404f79:	cs mov ch,0x50
  404f7c:	fdivr  QWORD PTR ds:0x10331d76
  404f82:	into   
  404f83:	jnp    0x404f88
  404f85:	push   0xffffffc6
  404f87:	xchg   edx,eax
  404f88:	gs sbb eax,0x554cc292
  404f8e:	jmp    0x1767:0x47aed1f9
  404f95:	clc    
  404f96:	call   0x4b8d:0x4f89a6b9
  404f9d:	cld    
  404f9e:	ror    DWORD PTR [edx-0x7b],1
  404fa1:	mov    ds:0xb551c4a4,al
  404fa6:	int3   
  404fa7:	jp     0x404f73
  404fa9:	or     eax,0xab46bbce
  404fae:	aad    0x76
  404fb0:	push   ss
  404fb1:	add    al,BYTE PTR [ecx+0x6b]
  404fb4:	fadd   DWORD PTR [eax+0x42]
  404fb7:	dec    edi
  404fb8:	dec    ecx
  404fb9:	imul   eax,DWORD PTR [ebx-0x4c],0xf0057ef3
  404fc0:	clc    
  404fc1:	xlat   BYTE PTR ds:[ebx]
  404fc2:	cmp    bl,BYTE PTR [eax]
  404fc4:	dec    esi
  404fc5:	push   esp
  404fc6:	push   ecx
  404fc7:	repnz retf 
  404fc9:	jno    0x40503f
  404fcb:	out    dx,al
  404fcc:	push   ds
  404fcd:	dec    edx
  404fce:	aad    0x44
  404fd0:	pusha  
  404fd1:	cmp    DWORD PTR [edx],ebx
  404fd3:	jecxz  0x404fdd
  404fd5:	loope  0x404f6d
  404fd7:	add    DWORD PTR [ebx],0x7b81cfdf
  404fdd:	jno    0x404fb1
  404fdf:	jnp    0x405022
  404fe1:	mov    esi,0x424edb38
  404fe6:	inc    ebp
  404fe7:	mov    ah,0x59
  404fe9:	ins    BYTE PTR es:[edi],dx
  404fea:	pop    edx
  404feb:	stos   BYTE PTR es:[edi],al
  404fec:	retf   0xce0b
  404fef:	dec    edi
  404ff0:	cs cld 
  404ff2:	aas    
  404ff3:	mov    esi,0xb140d3f5
  404ff8:	shr    ebx,cl
  404ffa:	mov    eax,ds:0xcbd2fd04
  404fff:	sbb    ebp,DWORD PTR [edi-0x2f]
  405002:	aad    0x80
  405004:	pop    es
  405005:	mov    bh,0x70
  405007:	pop    ebx
  405008:	retf   
  405009:	xor    edi,DWORD PTR [ebp+0x3b]
  40500c:	int3   
  40500d:	nop
  40500e:	ret    0x34a5
  405011:	cmp    BYTE PTR [ebp-0x80c1c6c],0x56
  405018:	mov    ebx,0x1d1d2947
  40501d:	push   eax
  40501e:	pop    ebx
  40501f:	cmp    ah,BYTE PTR ds:0x6229160d
  405025:	sub    ecx,DWORD PTR [ebp-0x40]
  405028:	add    DWORD PTR fs:[edx-0x73],ebp
  40502c:	fucomip st,st(4)
  40502e:	lods   al,BYTE PTR ds:[esi]
  40502f:	mov    DWORD PTR [ebx-0x49b174b6],edi
  405035:	push   0xd1a0dd45
  40503a:	int3   
  40503b:	inc    ebx
  40503d:	(bad)  
  40503e:	jecxz  0x405089
  405040:	inc    ebp
  405041:	and    BYTE PTR [esp+ecx*8-0x636fcc24],dh
  405048:	and    ah,BYTE PTR [eax-0x70e232df]
  40504e:	adc    esi,DWORD PTR [ebp-0x20]
  405051:	test   eax,0x87b0dcdf
  405056:	rol    esi,0xdd
  405059:	xchg   ebx,eax
  40505a:	or     DWORD PTR [ecx],esp
  40505c:	pop    sp
  40505e:	shl    dl,cl
  405060:	mov    dh,bl
  405062:	cmp    eax,ecx
  405064:	sti    
  405065:	aas    
  405066:	mov    esp,0xbb749271
  40506b:	dec    BYTE PTR [ecx-0x396fb750]
  405071:	mov    ebp,ecx
  405073:	imul   esp,esi,0x10
  405076:	jle    0x4050df
  405078:	popa   
  405079:	aaa    
  40507a:	(bad)  
  40507c:	jmp    0x336f:0x2aa68945
  405083:	inc    ebx
  405084:	mov    ebx,0x6aad3fad
  405089:	pop    ss
  40508a:	add    BYTE PTR [edi-0x5d],bh
  40508d:	or     BYTE PTR [ebx-0x572fd6d6],cl
  405093:	xchg   esi,eax
  405094:	pop    esi
  405095:	fldenv [ecx-0x45e846ce]
  40509b:	xor    eax,0x2208858e
  4050a0:	xor    edi,esp
  4050a2:	dec    esp
  4050a3:	add    DWORD PTR [esi],ecx
  4050a5:	icebp  
  4050a6:	mov    bl,0xcd
  4050a8:	cld    
  4050a9:	sbb    dl,ah
  4050ab:	stos   DWORD PTR es:[edi],eax
  4050ac:	leave  
  4050ad:	mov    edx,0x85cfde44
  4050b2:	je     0x4050f2
  4050b4:	fs int3 
  4050b6:	in     eax,0xf3
  4050b8:	push   cs
  4050b9:	xchg   esp,eax
  4050ba:	mov    ecx,0x317dc577
  4050bf:	pushf  
  4050c0:	imul   ecx,edx,0x15f3ff9f
  4050c6:	out    0xa8,al
  4050c8:	xor    al,0x72
  4050ca:	push   ds
  4050cb:	aas    
  4050cc:	leave  
  4050cd:	dec    ebp
  4050ce:	dec    esi
  4050cf:	mov    ah,dl
  4050d1:	scas   eax,DWORD PTR es:[edi]
  4050d2:	jae    0x40505b
  4050d4:	push   edi
  4050d5:	pmaxub mm2,QWORD PTR [ecx+0x60afff22]
  4050dc:	pop    ecx
  4050dd:	mov    al,ds:0xf78bae47
  4050e2:	ds aad 0x28
  4050e5:	dec    esi
  4050e6:	in     eax,dx
  4050e7:	pop    esp
  4050e8:	(bad)  
  4050e9:	dec    esp
  4050ea:	jp     0x405111
  4050ec:	test   BYTE PTR [ebp+0x1f6e58e1],dl
  4050f2:	push   es
  4050f3:	mov    ebx,0xd8647ec6
  4050f8:	in     eax,dx
  4050f9:	adc    eax,0x42d769f2
  4050fe:	shl    DWORD PTR [esi-0x6a],0xa1
  405102:	and    bh,ch
  405104:	pop    ecx
  405105:	dec    ebx
  405106:	daa    
  405107:	aaa    
  405108:	leave  
  405109:	add    dl,dh
  40510b:	scas   al,BYTE PTR es:[edi]
  40510c:	fild   WORD PTR [edi+0x38]
  40510f:	loopne 0x40509e
  405111:	cmp    ebp,DWORD PTR [ebx]
  405113:	mov    ds:0x829dcf57,eax
  405118:	adc    ecx,DWORD PTR [edx-0x77]
  40511b:	pusha  
  40511c:	into   
  40511d:	rcl    DWORD PTR [ecx-0x5e86dbfa],1
  405123:	sub    eax,0x470aebc5
  405128:	stc    
  405129:	pop    ecx
  40512a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40512b:	mov    al,0x2b
  40512d:	mov    DWORD PTR [edx-0x20],esi
  405130:	jg     0x4050c9
  405132:	dec    ebp
  405133:	pop    es
  405134:	pop    ebp
  405135:	mov    bl,0xd0
  405137:	js     0x405120
  405139:	lahf   
  40513a:	push   edi
  40513b:	lock fnstsw WORD PTR [eax+0x5b]
  40513f:	scas   eax,DWORD PTR es:[edi]
  405140:	scas   eax,DWORD PTR es:[edi]
  405141:	jns    0x4050ed
  405143:	repz scas eax,DWORD PTR es:[edi]
  405145:	pop    ebp
  405146:	sbb    eax,DWORD PTR [eax]
  405148:	add    al,0xcf
  40514a:	push   edi
  40514b:	mul    ch
  40514d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40514e:	xor    dl,BYTE PTR [ecx]
  405150:	cwde   
  405151:	pop    es
  405152:	ret    0x46e5
  405155:	test   eax,0xf40408eb
  40515a:	fwait
  40515b:	pop    edx
  40515c:	xchg   ecx,eax
  40515d:	push   esp
  40515e:	out    0xe3,eax
  405160:	jnp    0x405153
  405162:	inc    ebp
  405163:	pop    edx
  405164:	ss fs sub esi,esp
  405168:	nop
  405169:	lahf   
  40516a:	call   FWORD PTR [ebp+0x74]
  40516d:	sub    DWORD PTR [ecx-0x1e5818],0xffffffa7
  405174:	loop   0x40511d
  405176:	sbb    ebp,DWORD PTR [esp+ebx*8+0x2c]
  40517a:	sub    ecx,DWORD PTR [ebp+ebx*1+0x4d4c86f6]
  405181:	xchg   BYTE PTR ss:[eax+0x6dec14cf],cl
  405188:	adc    al,0x5e
  40518a:	xchg   DWORD PTR [eax],ebp
  40518c:	repz (bad) [edi+0x5d9c4feb]
  405193:	push   ss
  405194:	enter  0x6c41,0x84
  405198:	popf   
  405199:	fdivr  QWORD PTR [edx+ebx*1-0x395c15e1]
  4051a0:	mov    ds:0xcdf455a1,al
  4051a5:	xchg   ecx,eax
  4051a6:	jl     0x405131
  4051a8:	pop    esi
  4051a9:	out    0x60,al
  4051ab:	out    dx,al
  4051ac:	mov    ecx,0x93385a79
  4051b1:	je     0x40514b
  4051b3:	push   esp
  4051b4:	xchg   BYTE PTR ds:0x3f4d64,cl
  4051ba:	dec    edx
  4051bb:	outs   dx,DWORD PTR ds:[esi]
  4051bc:	cmp    al,0xe2
  4051be:	pop    eax
  4051bf:	xabort 0xbf
  4051c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051c3:	jno    0x40517f
  4051c5:	mov    ds:0x91bc1906,eax
  4051ca:	fdivr  QWORD PTR [edi-0x3e3a1af3]
  4051d0:	loope  0x4051f8
  4051d2:	ror    ecx,0x6d
  4051d5:	pop    ds
  4051d6:	xchg   esp,eax
  4051d7:	sbb    esp,0x1d8811ec
  4051dd:	cdq    
  4051de:	mov    dl,BYTE PTR [edi]
  4051e0:	pop    ebp
  4051e1:	(bad)  
  4051e2:	jg     0x40525b
  4051e4:	test   ebx,ebp
  4051e6:	fwait
  4051e7:	imul   esi,DWORD PTR [edi+0x13],0xffffffdf
  4051eb:	sbb    al,0x95
  4051ed:	adc    eax,0xda88dc35
  4051f2:	lahf   
  4051f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051f4:	in     al,0xf2
  4051f6:	fdiv   QWORD PTR [ebp+0x716d3f95]
  4051fc:	mov    edi,cs
  4051fe:	dec    esi
  4051ff:	jo     0x405203
  405201:	sahf   
  405202:	cwde   
  405203:	adc    BYTE PTR [ecx-0x63],ah
  405206:	sbb    DWORD PTR [ecx],ebp
  405208:	mov    al,BYTE PTR [ebp-0x5d5929b9]
  40520e:	ret    
  40520f:	sbb    DWORD PTR [ebx+ebp*8-0x7e67f31f],ebp
  405216:	iret   
  405217:	and    DWORD PTR [ecx],ebp
  405219:	iret   
  40521a:	aam    0x8b
  40521c:	in     al,0x70
  40521e:	xor    BYTE PTR [ebx],0xb9
  405221:	sub    bl,BYTE PTR [edi]
  405223:	gs ins DWORD PTR es:[edi],dx
  405225:	cmp    BYTE PTR [ebp-0x1d53b411],dl
  40522b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40522c:	cmp    edx,ebp
  40522e:	inc    ebp
  40522f:	aaa    
  405230:	inc    esi
  405231:	cmp    bl,BYTE PTR [ebp+0x29975d3c]
  405237:	xchg   BYTE PTR [esi-0x6b],cl
  40523a:	jp     0x40521a
  40523c:	in     al,0x34
  40523e:	inc    ebp
  40523f:	addr16 jmp 0x4052a8
  405242:	rcr    BYTE PTR [ecx],0x1c
  405245:	(bad)  
  405246:	cmp    bh,ah
  405248:	jnp    0x4051e4
  40524a:	outs   dx,DWORD PTR ds:[esi]
  40524b:	jo     0x4051ce
  40524d:	ror    BYTE PTR [eax-0x32],cl
  405250:	or     eax,0x35295cc2
  405255:	lahf   
  405256:	cmc    
  405257:	jmp    0x13f5:0x43cd33d0
  40525e:	in     eax,dx
  40525f:	aaa    
  405260:	jle    0x405276
  405262:	mov    edx,0xe898d6da
  405267:	jb     0x405291
  405269:	mov    ch,0x67
  40526b:	data16 (bad) 
  40526f:	arpl   WORD PTR [ebp+0x2],si
  405272:	sub    edi,DWORD PTR [ebp-0x61]
  405275:	in     al,0x42
  405277:	pop    esi
  405278:	pushf  
  405279:	xor    ch,BYTE PTR [edx]
  40527b:	daa    
  40527c:	sub    al,0x1f
  40527e:	test   al,0x10
  405280:	push   eax
  405281:	push   ds
  405282:	outs   dx,DWORD PTR ds:[esi]
  405283:	mov    DWORD PTR [eax],ebx
  405285:	dec    eax
  405286:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405287:	out    0x22,al
  405289:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40528a:	dec    eax
  40528b:	add    dh,0xf8
  40528e:	es mov edi,0xcec24cce
  405294:	lods   eax,DWORD PTR ds:[esi]
  405295:	jne    0x405299
  405297:	cdq    
  405298:	and    eax,eax
  40529a:	imul   edi
  40529c:	ja     0x40527e
  40529e:	sbb    al,0xf1
  4052a0:	mov    ecx,0x18f357c7
  4052a5:	in     eax,dx
  4052a6:	nop
  4052a7:	adc    eax,0x58dc07eb
  4052ac:	xor    al,0x1f
  4052ae:	xchg   BYTE PTR [ecx-0x21],ah
  4052b1:	or     dl,cl
  4052b3:	sub    DWORD PTR [edx+0x106ba0ba],esp
  4052b9:	mov    dh,0xb
  4052bb:	or     ebp,DWORD PTR [edi+0x4b]
  4052be:	fldz   
  4052c0:	icebp  
  4052c1:	bound  edi,QWORD PTR [ecx-0x1b68637]
  4052c7:	jne    0x4052c8
  4052c9:	addr16 or al,0x80
  4052cc:	inc    ah
  4052ce:	pop    eax
  4052cf:	test   al,0x5c
  4052d1:	fwait
  4052d2:	push   esi
  4052d3:	adc    al,BYTE PTR [edx]
  4052d5:	cmp    DWORD PTR [edi],ecx
  4052d7:	xor    BYTE PTR [eax-0x64],dh
  4052da:	adc    al,BYTE PTR [ebp-0x28fbe1db]
  4052e0:	pop    edi
  4052e1:	mov    ebx,DWORD PTR [ebx+0x2f5d5790]
  4052e7:	sub    BYTE PTR [edx+0xc4efa5f],0x4b
  4052ee:	rol    BYTE PTR [edx-0xc565064],1
  4052f4:	sbb    BYTE PTR es:[edx],dh
  4052f7:	out    0x9a,al
  4052f9:	(bad)  
  4052fa:	push   esp
  4052fb:	pop    edi
  4052fc:	add    ch,BYTE PTR [edi]
  4052fe:	ret    0xd26c
  405301:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405302:	aaa    
  405303:	in     al,0x6c
  405305:	shr    BYTE PTR [esi+0x2c39cfaa],1
  40530b:	in     al,dx
  40530c:	ja     0x40532c
  40530e:	loop   0x4052d8
  405310:	jmp    DWORD PTR [ebx+0x4961143]
  405316:	xchg   BYTE PTR [edx],cl
  405318:	sub    eax,0x85a4376b
  40531d:	push   ss
  40531e:	xchg   bl,al
  405320:	bound  esp,QWORD PTR [ecx+ebp*1]
  405323:	xor    cl,BYTE PTR [eax-0x39]
  405326:	jo     0x40532b
  405328:	push   eax
  405329:	(bad)  
  40532c:	(bad)  
  40532d:	pop    edx
  40532e:	loope  0x405343
  405330:	cmp    dh,BYTE PTR [edi+esi*4-0x47]
  405334:	int    0x98
  405336:	pop    edx
  405337:	arpl   si,di
  405339:	or     BYTE PTR [edx],0xae
  40533c:	call   0x6e63:0x5d9fad4b
  405343:	enter  0x3c21,0x6b
  405347:	push   ebx
  405348:	mov    edi,ebp
  40534a:	enter  0xd4d6,0xa8
  40534e:	fimul  DWORD PTR [edi+eax*4+0x69]
  405352:	adc    BYTE PTR ds:0x866d2f2d,bh
  405358:	(bad)  
  405359:	out    dx,al
  40535a:	sub    BYTE PTR [ebx],bh
  40535c:	dec    edi
  40535d:	push   ebx
  40535e:	loope  0x4052fd
  405360:	aam    0x55
  405362:	pushf  
  405363:	inc    ebp
  405364:	nop
  405365:	xchg   ecx,eax
  405366:	in     eax,dx
  405367:	adc    edx,DWORD PTR [eax-0x1c47e8b4]
  40536d:	sub    bh,BYTE PTR [edx-0x6c509e72]
  405373:	sbb    ah,BYTE PTR [eax+0x5a]
  405376:	push   ss
  405377:	into   
  405378:	sbb    BYTE PTR ds:0xabbd631f,0x19
  40537f:	scas   al,BYTE PTR es:[edi]
  405380:	dec    eax
  405381:	fwait
  405382:	test   eax,0x62109f5e
  405387:	add    BYTE PTR [eax-0x4ccf9a77],0xa6
  40538e:	mov    bl,0x6
  405390:	dec    ebp
  405391:	xchg   esp,eax
  405392:	push   esp
  405393:	dec    edi
  405394:	and    eax,0xce82fb51
  405399:	push   eax
  40539a:	leave  
  40539b:	ret    0x4696
  40539e:	loope  0x40537c
  4053a0:	fisubr WORD PTR [eax+esi*1+0x2e]
  4053a4:	(bad)  
  4053a5:	loope  0x40533e
  4053a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053a8:	xlat   BYTE PTR ds:[ebx]
  4053a9:	mov    dh,0x43
  4053ab:	imul   ecx,DWORD PTR ds:0xcdaea8e3,0x5c
  4053b2:	mov    edx,ebp
  4053b4:	fstp   TBYTE PTR [ecx]
  4053b6:	arpl   WORD PTR [ecx-0x4451b68b],si
  4053bc:	call   0x361dd945
  4053c1:	shl    DWORD PTR [ebp-0x50],cl
  4053c4:	popf   
  4053c5:	retf   
  4053c6:	or     ebx,DWORD PTR [ecx+edi*8-0x26afb37]
  4053cd:	ret    0xd3c5
  4053d0:	test   al,0xb8
  4053d2:	iret   
  4053d3:	cmc    
  4053d4:	cmp    BYTE PTR [edx-0x545db1cf],0xd8
  4053db:	inc    eax
  4053dc:	jmp    0xaedf:0xf13cf450
  4053e3:	jecxz  0x405403
  4053e5:	call   FWORD PTR [ecx]
  4053e7:	aad    0x6
  4053e9:	jbe    0x4053d4
  4053eb:	or     esi,DWORD PTR [edi]
  4053ed:	sbb    BYTE PTR [ecx],bh
  4053ef:	pop    edi
  4053f0:	fiadd  DWORD PTR [edi]
  4053f2:	sahf   
  4053f3:	inc    ebp
  4053f4:	mov    edi,0x5405eb06
  4053f9:	inc    ebx
  4053fa:	fidivr WORD PTR [edi+0x71]
  4053fd:	scas   eax,DWORD PTR es:[edi]
  4053fe:	xchg   esi,eax
  4053ff:	mov    esi,0x8088184b
  405404:	scas   al,BYTE PTR es:[edi]
  405405:	sub    DWORD PTR [esi+0x6],ebx
  405408:	aas    
  405409:	hlt    
  40540a:	loopne 0x40541e
  40540c:	jle    0x40540f
  40540e:	(bad)  
  40540f:	and    eax,0x45aa8ed6
  405414:	mov    ebx,0xcb63bd3e
  405419:	loope  0x405481
  40541b:	mov    eax,DWORD PTR [esi-0x2fe01ada]
  405421:	out    dx,eax
  405422:	inc    ebx
  405423:	mov    eax,ds:0xe6d7b2d6
  405428:	jmp    0x88c2:0x8476e1a5
  40542f:	pop    edx
  405430:	ds cdq 
  405432:	shr    DWORD PTR [edx],0x5
  405435:	jg     0x405422
  405437:	sar    DWORD PTR [ebx+eiz*4+0x7059c28f],0x70
  40543f:	ficomp DWORD PTR ds:0x4e6d5a4d
  405445:	repz test eax,0x7693529d
  40544b:	xchg   ebp,eax
  40544c:	xor    ebx,DWORD PTR [edi-0x15]
  40544f:	dec    edx
  405450:	mov    cl,0x8
  405452:	inc    ecx
  405453:	int3   
  405454:	dec    edi
  405455:	sub    BYTE PTR [eax],al
  405457:	pop    esp
  405458:	inc    esi
  405459:	stc    
  40545a:	jo     0x40542f
  40545c:	fs addr16 inc esp
  40545f:	(bad)  
  405460:	dec    eax
  405461:	mov    edx,0xb7717ca8
  405466:	int    0x2e
  405468:	outs   dx,BYTE PTR ds:[esi]
  405469:	push   ss
  40546a:	lods   eax,DWORD PTR ds:[esi]
  40546b:	pushf  
  40546c:	test   al,0x61
  40546e:	inc    eax
  40546f:	lds    ecx,FWORD PTR [edx]
  405471:	and    al,0x33
  405473:	mov    ?,WORD PTR [esi+ebx*2+0x75bc5f20]
  40547a:	out    dx,eax
  40547b:	sahf   
  40547c:	(bad)  
  40547d:	sbb    DWORD PTR [eax-0x5f232cc],ebx
  405483:	ror    ebx,0x69
  405486:	popf   
  405487:	rol    DWORD PTR [ebx+0x47450818],cl
  40548d:	clc    
  40548e:	ins    BYTE PTR es:[edi],dx
  40548f:	dec    esp
  405490:	shl    bh,1
  405492:	gs int 0x30
  405495:	inc    ebx
  405496:	inc    ecx
  405497:	mov    esp,edi
  405499:	jp     0x40541b
  40549b:	mov    ebx,0xac37c3d8
  4054a0:	dec    ebx
  4054a1:	test   DWORD PTR [eax-0x4c],ebp
  4054a4:	(bad)  [edx+0x71651ab9]
  4054aa:	pop    ebx
  4054ab:	loop   0x405521
  4054ad:	dec    ebx
  4054ae:	out    0x92,eax
  4054b0:	mov    ebp,0x175d7964
  4054b5:	cs xchg ebp,eax
  4054b7:	xchg   esp,eax
  4054b8:	imul   edi,DWORD PTR [esi+0x4a06341c],0xffffff95
  4054bf:	pop    ecx
  4054c0:	push   ds
  4054c1:	mov    bl,0x13
  4054c3:	out    dx,eax
  4054c4:	shr    DWORD PTR [ebp+0x54],0x3b
  4054c8:	ret    
  4054c9:	movzx  ebp,WORD PTR [esi+0x62]
  4054cd:	mov    ds:0xd2930d0d,al
  4054d2:	cdq    
  4054d3:	sti    
  4054d4:	jmp    0x4054e1
  4054d6:	push   ds
  4054d7:	cmp    ecx,DWORD PTR [esi+0x70]
  4054da:	test   DWORD PTR [edx],ebp
  4054dc:	dec    ebp
  4054dd:	out    dx,eax
  4054de:	xchg   esi,eax
  4054df:	in     al,dx
  4054e0:	loope  0x40552b
  4054e2:	xchg   ebp,eax
  4054e3:	lock jmp FWORD PTR [edi]
  4054e6:	mov    ebp,0xdeb17173
  4054eb:	scas   eax,DWORD PTR es:[edi]
  4054ec:	lock jne 0x405563
  4054ef:	aam    0xd5
  4054f1:	test   BYTE PTR [edi-0x2a],0x86
  4054f5:	pop    esi
  4054f6:	mov    DWORD PTR [eax+esi*2],ebx
  4054f9:	or     eax,0xee3397b4
  4054fe:	push   esp
  4054ff:	inc    edi
  405500:	inc    ebx
  405501:	call   0x62da7c63
  405506:	push   ecx
  405507:	mov    eax,0xbff2287c
  40550c:	sub    BYTE PTR [eax+0x69],ch
  40550f:	cld    
  405510:	dec    edi
  405511:	test   BYTE PTR [edi],dh
  405513:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  405515:	mov    al,0xf7
  405517:	shl    BYTE PTR [edx+esi*1],0xd7
  40551b:	sub    ah,dl
  40551d:	jb     0x4054dc
  40551f:	test   BYTE PTR [ebx+ebp*2-0x74bf6a66],bl
  405526:	addr16 mov eax,ds:0x8dc7
  40552a:	mov    ebp,0x7c9db998
  40552f:	mov    al,bh
  405531:	mov    ecx,eax
  405533:	push   0x50561b87
  405538:	gs mov cl,0x16
  40553b:	xchg   ebp,eax
  40553c:	(bad)  
  40553d:	cmp    esp,ebx
  40553f:	xchg   edi,eax
  405540:	mov    ecx,DWORD PTR ds:0x3141d82c
  405546:	add    DWORD PTR [ecx],ebx
  405548:	xor    DWORD PTR [edx+ebp*8],edi
  40554b:	push   eax
  40554c:	mov    esi,0x46c46396
  405551:	fild   DWORD PTR [edx+edi*8+0x3c]
  405555:	inc    eax
  405556:	(bad)  
  405557:	popa   
  405558:	jo     0x40557c
  40555a:	ret    0x1a5b
  40555d:	fld    DWORD PTR [esi+edx*2-0x4]
  405561:	test   eax,0x2a1311c8
  405566:	inc    esi
  405567:	pop    ebx
  405568:	and    eax,0xf3f6acb6
  40556d:	lea    esp,[ebx]
  40556f:	dec    ecx
  405570:	mov    ds:0x8e7dd18,al
  405575:	popa   
  405576:	jle    0x4054fe
  405578:	hlt    
  405579:	xchg   DWORD PTR ds:0x5e0d18d5,ebx
  40557f:	es imul ecx
  405582:	inc    ebx
  405583:	adc    al,BYTE PTR [esi+0x54f1d0a3]
  405589:	mov    edx,0x1c4e4cca
  40558e:	xor    edi,0xfffffff0
  405591:	add    DWORD PTR [edi-0x6e],0x3e
  405595:	cld    
  405596:	sbb    bl,BYTE PTR [ebx]
  405598:	(bad)  
  405599:	jmp    0x1662:0x811d3704
  4055a0:	(bad)  
  4055a1:	or     eax,0xfce7bd28
  4055a6:	cwde   
  4055a7:	mov    bl,0x3c
  4055a9:	pop    edi
  4055aa:	in     al,dx
  4055ab:	fisttp WORD PTR [edi+0x678ea27a]
  4055b1:	call   0x7e45048a
  4055b6:	dec    ebp
  4055b7:	dec    eax
  4055b8:	mov    al,BYTE PTR [eax-0x7650ef0a]
  4055be:	loope  0x405614
  4055c0:	jl     0x40556b
  4055c2:	cld    
  4055c3:	mov    dl,0x7b
  4055c5:	scas   eax,DWORD PTR es:[edi]
  4055c6:	dec    esp
  4055c7:	jle    0x40559b
  4055c9:	xchg   ecx,eax
  4055ca:	fistp  QWORD PTR [eax]
  4055cc:	jns    0x4055cc
  4055ce:	(bad)
  4055d2:	aam    0xf8
  4055d4:	or     DWORD PTR [esi+0x7897f2ba],edi
  4055da:	stc    
  4055db:	repz mov al,ds:0x23934ca6
  4055e1:	cmp    eax,0xadbf9576
  4055e6:	mov    bl,0x2f
  4055e8:	mov    cl,BYTE PTR [ecx+eax*2]
  4055eb:	cdq    
  4055ec:	sbb    al,0xf6
  4055ee:	push   esp
  4055ef:	mov    BYTE PTR [ebp-0x1e],cl
  4055f2:	cmp    eax,0xb249887e
  4055f7:	mov    fs,WORD PTR [ebp+0x2f8ad497]
  4055fd:	mov    eax,0x196f39c9
  405602:	xchg   edi,eax
  405603:	and    BYTE PTR [ebx-0x6a],0xaf
  405607:	mov    al,0x2b
  405609:	xor    DWORD PTR [ebx],ecx
  40560b:	retf   
  40560c:	xor    eax,0x9fb7965
  405611:	outs   dx,DWORD PTR ds:[esi]
  405612:	nop
  405613:	addr16 mov dl,0x60
  405616:	xchg   ecx,eax
  405617:	stos   BYTE PTR es:[edi],al
  405618:	push   ds
  405619:	fs inc ecx
  40561b:	int    0x1c
  40561d:	mov    esp,0x532d7f42
  405622:	dec    esi
  405623:	mov    dh,bl
  405625:	je     0x4055f1
  405627:	sar    BYTE PTR [eax-0x79],1
  40562a:	packuswb mm4,QWORD PTR [ebp+0x5e]
  40562e:	int    0xc5
  405630:	or     DWORD PTR [ebx],0xffffffca
  405633:	ficomp WORD PTR [edi+edi*1]
  405636:	sbb    dh,bl
  405638:	push   esi
  405639:	not    DWORD PTR [ecx]
  40563b:	jmp    0x40563d
  40563d:	and    BYTE PTR [esi],bh
  40563f:	jp     0x40562b
  405641:	pop    ecx
  405642:	sub    eax,0x7083af28
  405647:	test   eax,0xbf3f6886
  40564d:	sti    
  40564e:	or     edx,DWORD PTR [edx-0x56]
  405651:	inc    edi
  405652:	push   0xfe20f0f3
  405657:	cld    
  405658:	test   BYTE PTR [edi+0x2cc59025],ch
  40565e:	das    
  40565f:	out    dx,al
  405660:	adc    BYTE PTR [edx],dh
  405662:	in     al,dx
  405663:	fmul   QWORD PTR [ebp-0x11]
  405666:	pop    eax
  405667:	jo     0x40569b
  405669:	or     DWORD PTR [esp+eax*4-0x14],0xffffffd2
  40566e:	mov    cs,WORD PTR [ecx-0x4]
  405671:	xor    eax,0xedfea977
  405676:	ret    0xde7
  405679:	cli    
  40567a:	mov    DWORD PTR [ebx],ecx
  40567c:	(bad)
  40567f:	or     al,0x96
  405681:	nop
  405682:	and    ebx,DWORD PTR [ebp-0x2845ed67]
  405688:	mov    al,0x69
  40568a:	dec    eax
  40568b:	push   ebx
  40568c:	xor    BYTE PTR [ebp-0x50],bh
  40568f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405690:	pop    ebp
  405691:	jne    0x405627
  405693:	push   esp
  405694:	pop    ecx
  405695:	xchg   ebp,eax
  405697:	dec    esp
  405698:	cld    
  405699:	mov    dl,BYTE PTR [eax-0x21]
  40569c:	lahf   
  40569d:	ds and edi,edx
  4056a0:	push   es
  4056a1:	stc    
  4056a2:	sar    ah,cl
  4056a4:	xchg   edi,eax
  4056a5:	mov    edi,gs
  4056a7:	cdq    
  4056a8:	outs   dx,DWORD PTR ds:[esi]
  4056a9:	std    
  4056aa:	mov    ch,0x4
  4056ac:	pop    ebp
  4056ad:	pop    esi
  4056ae:	cwde   
  4056af:	push   esp
  4056b0:	popf   
  4056b1:	daa    
  4056b2:	push   cs
  4056b3:	jmp    0x19f491b5
  4056b8:	mov    cl,bh
  4056ba:	mov    ah,0xcf
  4056bc:	pop    edi
  4056bd:	loop   0x40573d
  4056bf:	push   es
  4056c0:	xchg   ecx,eax
  4056c1:	pop    ecx
  4056c2:	inc    ebp
  4056c3:	pop    edx
  4056c4:	xchg   esp,eax
  4056c5:	adc    edi,ebx
  4056c7:	inc    edx
  4056c8:	mov    al,ds:0x48d62518
  4056cd:	and    eax,0x43b14320
  4056d2:	pop    edi
  4056d3:	jns    0x40573b
  4056d5:	push   edx
  4056d6:	jge    0x4056dc
  4056d8:	loopne 0x405716
  4056da:	mov    ecx,0x66afa5a2
  4056df:	jmp    0x26f03e3
  4056e4:	repnz inc ebx
  4056e6:	into   
  4056e7:	lods   eax,DWORD PTR ds:[esi]
  4056e8:	ins    BYTE PTR es:[edi],dx
  4056e9:	pop    ecx
  4056ea:	fsub   DWORD PTR [esi]
  4056ec:	dec    esp
  4056ed:	pop    ss
  4056ee:	sub    BYTE PTR [ecx+eax*8+0x55],cl
  4056f2:	lods   eax,DWORD PTR ds:[esi]
  4056f3:	jno    0x4056f8
  4056f5:	stc    
  4056f6:	lock add al,0x75
  4056f9:	add    bh,BYTE PTR [ebp+0x11]
  4056fc:	call   0x2cb9:0xe47350ca
  405703:	adc    eax,0x49c2894c
  405708:	push   eax
  405709:	fadd   QWORD PTR [edx+0x46]
  40570c:	(bad)  
  40570d:	push   ds
  40570e:	or     DWORD PTR [edi],ecx
  405710:	into   
  405711:	pushf  
  405712:	aam    0x68
  405714:	push   ss
  405715:	or     BYTE PTR [edx],bl
  405717:	inc    eax
  405718:	aad    0xaf
  40571a:	addr16 or eax,0x66ebc96b
  405720:	pusha  
  405721:	adc    al,0x36
  405723:	shr    BYTE PTR [ebx],0x50
  405726:	call   0xb339:0x23c7cb28
  40572d:	ja     0x4056d8
  40572f:	fs mov ebx,0xcc07740b
  405736:	push   ss
  405737:	mov    ecx,0xa7abd008
  40573c:	es push ds
  40573e:	enter  0x35d5,0xfe
  405742:	push   ss
  405743:	mov    ecx,ebp
  405745:	shl    DWORD PTR [eax-0x4c8d158d],1
  40574b:	xor    edi,DWORD PTR [ecx+0xd]
  40574e:	pop    gs
  405750:	out    0xb6,eax
  405752:	mov    edi,0x5008b4da
  405757:	outs   dx,BYTE PTR ds:[esi]
  405758:	sti    
  405759:	call   DWORD PTR [esi+0x1b4bb7a7]
  40575f:	cli    
  405760:	mov    ch,0xac
  405762:	mov    bh,0xfc
  405764:	and    eax,0xbdbc4893
  405769:	adc    al,0xdb
  40576b:	pop    ebx
  40576c:	fisubr WORD PTR [esi+eax*4]
  40576f:	gs loopne 0x4057b8
  405772:	lock pop ebx
  405774:	mov    dl,0x52
  405776:	jo     0x4057df
  405778:	push   0xffffffc9
  40577a:	pop    esi
  40577b:	or     eax,0x2c999113
  405780:	loopne 0x405783
  405782:	mov    bl,0xa3
  405784:	ss mov bh,0x77
  405787:	imul   eax,DWORD PTR [esi+edi*2],0xab8f84c6
  40578e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40578f:	loop   0x40579d
  405791:	xchg   ebp,eax
  405792:	pop    esi
  405793:	(bad)  
  405795:	or     DWORD PTR [edx],0x10
  405798:	stc    
  405799:	jge    0x40578f
  40579b:	mov    ch,0x2f
  40579d:	cmc    
  40579e:	adc    DWORD PTR [eax+0x1b],esp
  4057a1:	fbld   TBYTE PTR [edi]
  4057a3:	jle    0x405760
  4057a5:	je     0x4057ef
  4057a7:	xor    eax,0xa2b34be
  4057ac:	pop    edi
  4057ad:	call   0x36abbfdc
  4057b2:	dec    ecx
  4057b3:	or     dl,BYTE PTR [edi+0x16]
  4057b6:	cmp    al,0x33
  4057b8:	push   edi
  4057b9:	repz gs sti 
  4057bc:	sub    cl,BYTE PTR [ebx]
  4057be:	ja     0x405824
  4057c0:	mov    dl,0xa9
  4057c2:	ins    DWORD PTR es:[edi],dx
  4057c3:	add    DWORD PTR [ebp-0x1b],eax
  4057c6:	inc    edx
  4057c7:	cmp    al,0x9a
  4057c9:	scas   al,BYTE PTR es:[edi]
  4057ca:	sub    DWORD PTR [eax+ebp*2-0x1d9f73a6],ebx
  4057d1:	stos   BYTE PTR es:[edi],al
  4057d2:	jl     0x40578f
  4057d4:	and    esp,esi
  4057d6:	inc    edx
  4057d7:	pop    ebp
  4057d8:	jo     0x40575a
  4057da:	xchg   DWORD PTR [edi],ebx
  4057dc:	pop    ss
  4057dd:	ja     0x4057ac
  4057df:	xchg   ecx,eax
  4057e0:	out    dx,al
  4057e1:	je     0x4057c9
  4057e3:	cs xchg esi,eax
  4057e5:	dec    ebp
  4057e6:	push   ebp
  4057e7:	fst    QWORD PTR [ecx-0xa]
  4057ea:	sbb    BYTE PTR [ecx+0x130c3a39],al
  4057f0:	xor    eax,ebx
  4057f2:	leave  
  4057f3:	loop   0x40585b
  4057f5:	stc    
  4057f6:	pop    ss
  4057f7:	xor    eax,0xd539983b
  4057fc:	xor    ch,dl
  4057fe:	xchg   esi,eax
  4057ff:	inc    edx
  405800:	retf   0xcdbc
  405803:	and    DWORD PTR [edx+0x7a],esp
  405806:	xchg   esp,eax
  405807:	outs   dx,BYTE PTR ds:[esi]
  405808:	pop    ecx
  405809:	mov    cl,BYTE PTR [ebx+0xc]
  40580c:	loope  0x4057cf
  40580e:	leave  
  40580f:	xchg   edi,eax
  405810:	shr    esi,cl
  405812:	shl    BYTE PTR [eax-0x1a],0x3d
  405816:	ins    DWORD PTR es:[edi],dx
  405817:	cli    
  405818:	inc    edi
  405819:	shr    DWORD PTR [ebp-0x24],1
  40581c:	pinsrw mm6,WORD PTR [ecx+0x39621a65],0xfc
  405824:	(bad)  
  405826:	xor    DWORD PTR [ecx+ecx*4+0x1eaf9c0f],ebx
  40582d:	jge    0x4057f3
  40582f:	inc    ebp
  405830:	sbb    DWORD PTR [ecx],esi
  405832:	cs ins DWORD PTR es:[edi],dx
  405834:	outs   dx,BYTE PTR ds:[esi]
  405835:	push   esp
  405836:	jecxz  0x4058a4
  405838:	or     edi,ecx
  40583a:	jnp    0x405864
  40583c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40583d:	das    
  40583e:	mov    edi,ebp
  405840:	push   ds
  405841:	dec    eax
  405842:	sub    ah,BYTE PTR es:[ecx]
  405845:	and    eax,0x60644b05
  40584a:	call   0x29022eda
  40584f:	lds    ebx,FWORD PTR [ecx+edi*8]
  405852:	cmp    edi,edx
  405854:	adc    eax,0xa3331bff
  405859:	xchg   ebx,eax
  40585a:	cmc    
  40585b:	fnsave [ebp-0x2d]
  40585e:	mov    al,0xe9
  405860:	cwde   
  405861:	adc    DWORD PTR [eax-0x6b],esp
  405864:	xchg   ebx,eax
  405865:	lea    ebp,[edi+ecx*8]
  405868:	push   edx
  405869:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40586a:	jmp    0x4058d2
  40586c:	jecxz  0x4058a3
  40586e:	loop   0x405816
  405870:	sub    BYTE PTR [edx],bh
  405872:	cmp    BYTE PTR [esi+eiz*1-0x80],0xae
  405877:	adc    eax,0x41adbfc0
  40587c:	xor    ecx,ebp
  40587e:	fild   DWORD PTR [edx]
  405880:	hlt    
  405881:	dec    edi
  405882:	push   es
  405883:	shl    DWORD PTR [esi+0x1a018991],cl
  405889:	les    esp,FWORD PTR [eax+0x60]
  40588c:	inc    edi
  40588d:	stc    
  40588e:	ins    DWORD PTR es:[edi],dx
  40588f:	push   ds
  405890:	out    dx,eax
  405891:	jmp    0x405821
  405893:	cmp    al,0xc9
  405895:	ins    BYTE PTR es:[edi],dx
  405896:	pop    esi
  405897:	xor    edi,edx
  405899:	test   DWORD PTR [ebp-0x33d3f28c],ebp
  40589f:	jle    0x3e746e7f
  4058a5:	inc    edi
  4058a6:	jecxz  0x40582f
  4058a8:	pop    ebp
  4058a9:	ret    
  4058aa:	cmp    ch,BYTE PTR [edi+0x5e7ee094]
  4058b0:	mov    dl,0xde
  4058b2:	inc    ecx
  4058b3:	push   esi
  4058b4:	cs mov edi,0x6e52334b
  4058ba:	pop    es
  4058bb:	add    esp,ebp
  4058bd:	shl    BYTE PTR [edx+0x1d],1
  4058c0:	push   ebp
  4058c1:	imul   ebp,DWORD PTR [eax-0x63bae167],0x7e2d65d6
  4058cb:	mov    ds:0xdad7aa57,al
  4058d0:	std    
  4058d1:	jbe    0x4058ef
  4058d3:	and    al,0xb5
  4058d5:	jae    0x4058d4
  4058d7:	sbb    dl,BYTE PTR [ebx-0x41]
  4058da:	jl     0x40585d
  4058dc:	push   ds
  4058dd:	mov    edi,0x7595e5d8
  4058e2:	fs dec ebp
  4058e4:	pop    ecx
  4058e5:	jg     0x405872
  4058e7:	pop    es
  4058e8:	dec    edx
  4058e9:	aad    0xaf
  4058eb:	sub    al,0xa4
  4058ed:	adc    al,BYTE PTR [ebx+0x50d1170d]
  4058f3:	pop    ecx
  4058f4:	or     DWORD PTR [edi+0x564a0885],ebx
  4058fa:	scas   eax,DWORD PTR es:[edi]
  4058fb:	pusha  
  4058fc:	loop   0x4058d7
  4058fe:	pop    edi
  4058ff:	cs xchg esp,eax
  405901:	inc    edi
  405902:	clc    
  405903:	push   cs
  405904:	and    edi,edx
  405906:	sub    bh,BYTE PTR [esi+0x5c562f03]
  40590c:	xor    eax,0xaf6be88d
  405911:	cmp    DWORD PTR [esi],ebp
  405913:	test   eax,0xcdcf49db
  405918:	mov    cl,0x7d
  40591a:	adc    al,0x87
  40591c:	in     eax,dx
  40591d:	xor    BYTE PTR ds:0x3bcab428,dl
  405923:	adc    DWORD PTR [ebx+eax*4],esp
  405926:	das    
  405927:	ss enter 0x6361,0x8c
  40592c:	mov    al,0x84
  40592e:	aad    0xfa
  405930:	cs pop edi
  405932:	push   esp
  405933:	aas    
  405934:	jmp    0xcb55:0xbffb3800
  40593b:	bound  edx,QWORD PTR [edi]
  40593d:	add    eax,ebp
  40593f:	dec    eax
  405940:	add    DWORD PTR [ecx-0x72c36d9f],0x62787b7
  40594a:	sub    ebx,DWORD PTR [ecx]
  40594c:	mov    ebx,0xf74b15ef
  405951:	push   ebp
  405952:	adc    BYTE PTR ss:[edi-0x5b1c58af],bh
  405959:	push   ebx
  40595a:	int    0x91
  40595c:	add    edi,DWORD PTR [ebx-0x5ecfa2f5]
  405962:	jecxz  0x405900
  405964:	jp     0x405917
  405966:	cwde   
  405967:	lods   al,BYTE PTR ds:[esi]
  405968:	push   cs
  405969:	mov    cl,0xff
  40596b:	(bad)  
  40596c:	scas   al,BYTE PTR es:[edi]
  40596d:	scas   eax,DWORD PTR es:[edi]
  40596e:	pop    es
  40596f:	shl    BYTE PTR [ecx-0x2d],0xde
  405973:	int    0x4c
  405975:	out    dx,eax
  405976:	fs cdq 
  405978:	dec    esi
  405979:	loope  0x4059ef
  40597b:	in     eax,0x88
  40597d:	xchg   ebp,eax
  40597e:	inc    ebx
  40597f:	mov    dh,0x0
  405981:	mov    edx,0xa814ea1f
  405986:	xchg   ebx,eax
  405987:	leave  
  405988:	fcom   QWORD PTR [ebx-0x641cd839]
  40598e:	aas    
  40598f:	dec    eax
  405990:	dec    eax
  405991:	data16 stc 
  405993:	adc    al,0x6b
  405995:	push   0x87dc67fd
  40599a:	fs jmp 0xd050:0x6d58f48c
  4059a2:	or     BYTE PTR [ecx-0x514f6423],ah
  4059a8:	repz mov edi,0x12d9d721
  4059ae:	lds    ebx,FWORD PTR [edx-0x1d]
  4059b1:	cdq    
  4059b2:	jg     0x4059fc
  4059b4:	sub    eax,esi
  4059b6:	scas   eax,DWORD PTR es:[edi]
  4059b7:	sub    DWORD PTR [ebp-0x20],0xffffffb6
  4059bb:	mov    edi,0xdfc14064
  4059c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059c1:	jg     0x405982
  4059c3:	call   0x7fa2:0x537ae866
  4059ca:	or     eax,0x6c072a1
  4059cf:	in     al,0x10
  4059d1:	(bad)  
  4059d2:	dec    ebp
  4059d3:	pusha  
  4059d4:	add    cl,BYTE PTR [esi-0x78]
  4059d7:	adc    BYTE PTR [ebx],0x83
  4059da:	pushf  
  4059db:	je     0x4059d2
  4059dd:	les    edx,FWORD PTR [esi+0x76]
  4059e0:	add    bh,cl
  4059e2:	cdq    
  4059e3:	retf   0x52bf
  4059e6:	dec    ebp
  4059e7:	stos   DWORD PTR es:[edi],eax
  4059e8:	pop    eax
  4059e9:	(bad)  
  4059eb:	in     al,0x3c
  4059ed:	dec    eax
  4059ee:	jno    0x405a4d
  4059f0:	jl     0x4059b9
  4059f2:	addr16 gs cld 
  4059f5:	lods   eax,DWORD PTR ds:[esi]
  4059f6:	xchg   BYTE PTR [ebp+0x5b],ah
  4059f9:	scas   eax,DWORD PTR es:[edi]
  4059fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059fb:	shr    BYTE PTR [ecx],0x35
  4059fe:	int    0xeb
  405a00:	(bad)  
  405a01:	sub    dl,BYTE PTR [edi]
  405a03:	pop    ecx
  405a04:	(bad)  
  405a05:	or     bl,BYTE PTR [ebp+0x6d]
  405a08:	adc    bl,cl
  405a0a:	xor    ebp,esi
  405a0c:	cmp    bh,BYTE PTR ss:[esi+0x4612fd32]
  405a13:	xor    BYTE PTR [eax-0x2],ch
  405a16:	repnz and BYTE PTR [ebp-0x59f57837],al
  405a1d:	mov    bh,0x23
  405a1f:	mov    bl,0x33
  405a21:	sbb    BYTE PTR [ebx],0x6
  405a24:	xor    eax,0x13b14f72
  405a29:	and    ah,BYTE PTR [esi+ebx*4+0x78]
  405a2d:	adc    ah,ch
  405a2f:	(bad)  
  405a30:	xlat   BYTE PTR ds:[ebx]
  405a31:	and    edi,DWORD PTR [ecx*2+0x66c8d775]
  405a38:	fwait
  405a39:	push   esi
  405a3a:	lods   al,BYTE PTR ds:[esi]
  405a3b:	pop    eax
  405a3c:	mov    eax,ds:0xee759b31
  405a41:	cmp    DWORD PTR ds:0x882bc432,esi
  405a47:	jno    0x405a27
  405a49:	fcomp  st(6)
  405a4b:	arpl   di,sp
  405a4d:	xchg   ebp,eax
  405a4e:	mov    edi,0x20557028
  405a53:	fs push 0x78acaea
  405a59:	jo     0x4059ff
  405a5b:	mov    esp,0xfdc8dd4f
  405a60:	and    al,0xda
  405a62:	pop    ds
  405a63:	pop    eax
  405a64:	jmp    0x6dd1:0xf0a1708b
  405a6b:	ss inc ebx
  405a6d:	xchg   esp,eax
  405a6e:	adc    edx,DWORD PTR [edi-0x1af71249]
  405a74:	lea    esi,[edx-0x3b]
  405a77:	mov    WORD PTR [esi-0xa],ss
  405a7a:	cld    
  405a7b:	push   esp
  405a7c:	int    0xd6
  405a7e:	iret   
  405a7f:	imul   ecx,DWORD PTR [edx],0xc5d1543c
  405a85:	mov    ah,0x87
  405a87:	pop    ebx
  405a88:	mov    edi,0x3c25efa7
  405a8d:	nop
  405a8e:	sub    eax,0x76b2b4fa
  405a93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a94:	add    al,0xfe
  405a96:	pushf  
  405a97:	dec    edi
  405a98:	loop   0x405b07
  405a9a:	mov    ebx,0x715e9189
  405a9f:	sbb    DWORD PTR [eax-0xf],esi
  405aa2:	arpl   WORD PTR [ecx-0x71],di
  405aa5:	outs   dx,BYTE PTR ds:[esi]
  405aa6:	push   es
  405aa7:	addr16 mov ebx,0x68ffd58c
  405aad:	pop    esi
  405aae:	fcompp 
  405ab0:	dec    eax
  405ab1:	retf   0xb108
  405ab4:	(bad)  
  405ab5:	out    0x9b,al
  405ab7:	jge    0x405ace
  405ab9:	(bad)  
  405aba:	push   edi
  405abb:	or     DWORD PTR [ebp+0x4a],ebx
  405abe:	mov    al,ds:0x61b01663
  405ac3:	push   0xa707a4c
  405ac8:	es push ss
  405aca:	int    0xba
  405acc:	jb     0x405aa6
  405ace:	in     eax,dx
  405acf:	mov    gs,WORD PTR [esi+ebx*8+0x3e]
  405ad3:	mov    cl,0xe8
  405ad5:	push   es
  405ad6:	fwait
  405ad7:	aas    
  405ad8:	neg    DWORD PTR [edi+esi*2+0x662f48a8]
  405adf:	dec    ebp
  405ae0:	scas   al,BYTE PTR es:[edi]
  405ae1:	inc    ecx
  405ae2:	sahf   
  405ae3:	arpl   WORD PTR [edi+0x12],ax
  405ae6:	adc    BYTE PTR [edx-0x3b44f2b6],dl
  405aec:	xchg   ecx,eax
  405aed:	je     0x405b50
  405aef:	mov    eax,ds:0x35535906
  405af4:	xchg   ebp,eax
  405af5:	mov    al,0x51
  405af7:	sub    ecx,edi
  405af9:	add    ch,BYTE PTR [ecx-0x64]
  405afc:	fdivr  st,st(1)
  405afe:	leave  
  405aff:	jle    0x405a8e
  405b01:	cmp    ebx,DWORD PTR [eax+0x223f0e7b]
  405b07:	in     al,dx
  405b08:	test   bl,0x83
  405b0b:	jne    0x405a9d
  405b0d:	lods   eax,DWORD PTR ds:[esi]
  405b0e:	pop    eax
  405b0f:	or     esi,DWORD PTR [edi+ecx*2+0x2277b1d2]
  405b16:	out    0x2b,al
  405b18:	xchg   DWORD PTR [ecx],eax
  405b1a:	dec    ebx
  405b1b:	sahf   
  405b1c:	push   edx
  405b1d:	jmp    0x6cc8ecc1
  405b22:	loopne 0x405b0a
  405b24:	or     ecx,DWORD PTR [edi+0x26e1d670]
  405b2a:	ins    BYTE PTR es:[edi],dx
  405b2b:	fld    QWORD PTR [esi]
  405b2d:	jle    0x405b44
  405b2f:	and    bl,ah
  405b31:	loopne 0x405b5c
  405b33:	(bad)  
  405b34:	iret   
  405b35:	jg     0x405b1b
  405b37:	not    DWORD PTR [ecx-0x71]
  405b3a:	jp     0x405b2d
  405b3c:	inc    edi
  405b3d:	xchg   ecx,eax
  405b3e:	jne    0x405b56
  405b40:	jecxz  0x405bab
  405b42:	sbb    BYTE PTR [edi],dl
  405b44:	sar    DWORD PTR [edi+0x1ec5c1e8],cl
  405b4a:	aaa    
  405b4b:	xlat   BYTE PTR ds:[ebx]
  405b4c:	and    cl,BYTE PTR [eax+0x314f54f9]
  405b52:	in     eax,0x21
  405b54:	enter  0x1f96,0x5b
  405b58:	(bad)  
  405b59:	nop
  405b5a:	fadd   QWORD PTR [edi+0x3a750f13]
  405b60:	sub    BYTE PTR [edi+0x36b083a2],al
  405b66:	and    eax,0x8b156b46
  405b6b:	xchg   esi,eax
  405b6c:	mov    dl,0x7f
  405b6e:	adc    eax,0x4d70a066
  405b73:	ss dec ebx
  405b75:	mov    bl,0xad
  405b77:	sar    BYTE PTR [edi],1
  405b79:	add    edx,DWORD PTR [ecx-0x5114f831]
  405b7f:	pop    ds
  405b80:	fild   QWORD PTR [ebp+0x2187f547]
  405b86:	repz pop esp
  405b88:	add    al,0xc
  405b8a:	adc    bh,cl
  405b8c:	in     al,0xa1
  405b8e:	jae    0x405b4a
  405b90:	xor    BYTE PTR [edi+0x164efa79],0xdf
  405b97:	pop    ebp
  405b98:	sbb    BYTE PTR [ebp-0x72],cl
  405b9b:	pop    ecx
  405b9c:	clc    
  405b9d:	in     al,dx
  405b9e:	lods   al,BYTE PTR ds:[esi]
  405b9f:	jp     0x405b77
  405ba1:	mov    ebx,0xe55b673f
  405ba6:	inc    ecx
  405ba7:	in     eax,0x3b
  405ba9:	pop    eax
  405baa:	std    
  405bab:	push   eax
  405bac:	into   
  405bad:	push   0x78
  405baf:	inc    ebp
  405bb0:	cmp    al,0x7c
  405bb2:	jns    0x405bb1
  405bb4:	addr16 lahf 
  405bb6:	mov    DWORD PTR [ecx+esi*1+0xf76d54f],edi
  405bbd:	loopne 0x405b64
  405bbf:	xchg   edx,eax
  405bc0:	retf   0x7c95
  405bc3:	out    dx,eax
  405bc4:	ins    BYTE PTR es:[edi],dx
  405bc5:	jb     0x405b6e
  405bc7:	pop    edx
  405bc8:	jecxz  0x405bd9
  405bca:	loop   0x405b71
  405bcc:	loopne 0x405b7a
  405bce:	outs   dx,DWORD PTR ds:[esi]
  405bcf:	add    esi,ebx
  405bd1:	in     al,0xa8
  405bd3:	mov    bh,0x19
  405bd5:	data16 mov al,ds:0xf826a2f8
  405bdb:	loop   0x405b7e
  405bdd:	adc    al,0xb1
  405bdf:	outs   dx,BYTE PTR ds:[esi]
  405be0:	sub    ah,BYTE PTR [esi+0x38554663]
  405be6:	push   esp
  405be7:	pop    esi
  405be8:	jnp    0x405bea
  405bea:	pop    ds
  405beb:	mov    DWORD PTR cs:[edx+0x1ff2ea84],edx
  405bf2:	(bad)  
  405bf3:	neg    edx
  405bf5:	sbb    al,0x7
  405bf7:	push   esp
  405bf8:	imul   ebx,DWORD PTR [eax],0x851b3e2
  405bfe:	sti    
  405bff:	add    ah,BYTE PTR [edx+0x18]
  405c02:	mov    bh,cl
  405c04:	xchg   esp,eax
  405c05:	mov    ebp,0x5c3447be
  405c0a:	rol    BYTE PTR ss:[esi],1
  405c0d:	xchg   ecx,eax
  405c0e:	pop    ebp
  405c0f:	or     ah,BYTE PTR [edi-0x4e61339b]
  405c15:	mov    ecx,0xef4a6206
  405c1a:	stc    
  405c1b:	xchg   BYTE PTR [ebx-0x12],cl
  405c1e:	ret    
  405c1f:	fs pop esi
  405c21:	lods   al,BYTE PTR ds:[esi]
  405c22:	cmp    al,0xdf
  405c24:	ja     0x405c47
  405c26:	addr16 push ss
  405c28:	xor    BYTE PTR [edx],0x7b
  405c2b:	fiadd  WORD PTR ds:0x927d8836
  405c31:	stos   DWORD PTR es:[edi],eax
  405c32:	xor    ecx,DWORD PTR [esp+esi*2]
  405c35:	dec    edx
  405c36:	mov    edi,0x7eb937e1
  405c3b:	retfw  
  405c3d:	adc    DWORD PTR [edi-0x6b],edi
  405c40:	ins    BYTE PTR es:[edi],dx
  405c41:	jae    0x405c5e
  405c43:	data16 sbb al,0x60
  405c46:	cmp    DWORD PTR [ebx+0x6c],edi
  405c49:	rol    DWORD PTR [esi-0x3f],0xdc
  405c4d:	test   eax,0x360bd6bd
  405c52:	inc    ebp
  405c53:	sbb    ecx,DWORD PTR [edx]
  405c55:	mov    esi,0x28873004
  405c5a:	aad    0xc4
  405c5c:	mov    ds:0x65fbba86,eax
  405c61:	icebp  
  405c62:	cld    
  405c63:	mov    ebx,0xb443f3cd
  405c68:	(bad)  [ebx-0x1e]
  405c6b:	sbb    cl,BYTE PTR [edx+eiz*4-0x49fc9e20]
  405c72:	mov    ch,dh
  405c74:	or     al,0x29
  405c76:	leave  
  405c77:	xchg   edi,eax
  405c78:	xchg   esp,eax
  405c79:	sub    DWORD PTR [esi+0x3c],esp
  405c7c:	test   bl,bl
  405c7e:	xchg   esi,eax
  405c7f:	out    dx,eax
  405c80:	ss mov dl,0x46
  405c83:	lods   eax,DWORD PTR ds:[esi]
  405c84:	push   eax
  405c85:	mov    bl,0xfd
  405c87:	adc    eax,0x8f2bf237
  405c8c:	cs ja  0x405c91
  405c8f:	adc    DWORD PTR [esi+0x18],eax
  405c92:	fiadd  DWORD PTR [ebx+0x17f12fd2]
  405c98:	fldcw  WORD PTR [esi]
  405c9a:	add    al,0xd1
  405c9c:	push   ss
  405c9d:	xchg   esi,eax
  405c9e:	jo     0x405c61
  405ca0:	out    dx,al
  405ca1:	push   cs
  405ca2:	jg     0x405d12
  405ca4:	jle    0x405c78
  405ca6:	mov    ds:0xe0e0db4,al
  405cab:	cmp    ecx,edx
  405cad:	(bad)  
  405cae:	mov    esi,0x74cb149d
  405cb3:	dec    ebx
  405cb4:	mov    ds:0x2c198449,al
  405cb9:	sub    eax,0xcc7fb6cf
  405cbe:	sub    cl,BYTE PTR [ebx-0x68]
  405cc1:	es repz sbb al,0x36
  405cc5:	cmp    BYTE PTR [ebx],ch
  405cc7:	inc    edi
  405cc8:	call   DWORD PTR [eax-0x2d4cb632]
  405cce:	sub    al,0x79
  405cd0:	ret    0xdd10
  405cd3:	push   0x23
  405cd5:	xchg   BYTE PTR [esi+ebx*4-0x52e1d9be],dl
  405cdc:	emms   
  405cde:	mov    cl,0x3c
  405ce0:	fwait
  405ce1:	pop    ebp
  405ce2:	mov    eax,es:0xdd838810
  405ce8:	(bad)  
  405ce9:	js     0x405d68
  405ceb:	mov    dl,0x75
  405ced:	or     DWORD PTR [ebx-0x44594678],0xffffffca
  405cf4:	mov    edi,0x6017abbc
  405cf9:	pop    DWORD PTR [eax]
  405cfb:	lea    edx,[ebx-0x319db80b]
  405d01:	dec    esp
  405d02:	sbb    DWORD PTR ds:0x41fa8708,edx
  405d08:	pop    edi
  405d09:	repz dec ebp
  405d0b:	out    0xbd,al
  405d0d:	dec    esp
  405d0e:	in     al,dx
  405d0f:	xor    DWORD PTR [edx+0x36],esp
  405d12:	outs   dx,BYTE PTR ds:[esi]
  405d13:	jmp    0x405d14
  405d15:	dec    edi
  405d16:	popa   
  405d17:	(bad)  
  405d18:	fstp   TBYTE PTR [ebp+0x11cbf911]
  405d1e:	sbb    BYTE PTR [eax+esi*4+0x64],dl
  405d22:	rcr    BYTE PTR [eax+ebp*1],0xd
  405d26:	cli    
  405d27:	inc    ecx
  405d28:	mov    eax,0xd8dfd2a
  405d2d:	sbb    BYTE PTR [ebp+0x5b4d2421],ah
  405d33:	ds xchg esi,eax
  405d35:	gs into 
  405d37:	or     al,al
  405d39:	dec    esi
  405d3a:	je     0x405d60
  405d3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d3d:	add    eax,0x93ae42c1
  405d42:	pusha  
  405d43:	mov    eax,ds:0x22abdcd8
  405d48:	frstor [edx+0x66]
  405d4b:	leave  
  405d4c:	outs   dx,DWORD PTR ds:[esi]
  405d4d:	into   
  405d4e:	jns    0x405d40
  405d50:	aas    
  405d51:	(bad)  
  405d52:	fnstsw WORD PTR [edx+0x518256aa]
  405d58:	cmp    DWORD PTR [eax],edx
  405d5a:	ss pop ecx
  405d5c:	inc    edi
  405d5d:	add    al,0xb0
  405d5f:	inc    esi
  405d61:	loopne 0x405d0f
  405d63:	cli    
  405d64:	jg     0x405d74
  405d66:	loopne 0x405cfc
  405d68:	ror    BYTE PTR [ecx-0x3f],0xf9
  405d6c:	jnp    0x405cf3
  405d6e:	cli    
  405d6f:	pop    ecx
  405d70:	pop    ecx
  405d71:	test   cl,bl
  405d73:	sub    al,0x9a
  405d75:	push   es
  405d76:	ja     0x405de3
  405d78:	adc    BYTE PTR [ecx-0x74],bl
  405d7b:	mov    edi,0xf8e816e7
  405d80:	(bad)  
  405d81:	in     eax,0x7
  405d83:	push   cs
  405d84:	fistp  DWORD PTR [edx]
  405d86:	std    
  405d87:	xor    DWORD PTR [edx+edx*1-0x4bcd029a],ebx
  405d8e:	sub    DWORD PTR [edi],eax
  405d90:	es mov al,0xe
  405d93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d94:	into   
  405d95:	jle    0x405d9a
  405d97:	lea    edi,[ebx+0x1c867c97]
  405d9d:	(bad)  
  405d9f:	mov    BYTE PTR [ebp-0x5e],dh
  405da2:	push   ebx
  405da3:	mov    dh,0xd2
  405da5:	sbb    al,0xfb
  405da7:	adc    al,0xcb
  405da9:	inc    eax
  405daa:	enter  0xb915,0x99
  405dae:	or     BYTE PTR [esi+0x197184f1],dl
  405db4:	shl    DWORD PTR [edi],1
  405db6:	jg     0x405dde
  405db8:	sbb    al,ah
  405dba:	arpl   WORD PTR [eax],sp
  405dbc:	add    eax,0x9c6c3cb7
  405dc1:	cmp    eax,0x47f27722
  405dc6:	inc    ecx
  405dc7:	mov    al,0xf9
  405dc9:	xchg   dh,dh
  405dcb:	pop    ds
  405dcc:	fbld   TBYTE PTR [esi]
  405dce:	jo     0x405d7a
  405dd0:	mov    ebx,0xc88c9f13
  405dd5:	pop    edi
  405dd6:	sahf   
  405dd7:	stos   BYTE PTR es:[edi],al
  405dd8:	mov    BYTE PTR [eax],dl
  405dda:	dec    ebx
  405ddb:	stos   BYTE PTR es:[edi],al
  405ddc:	pop    esp
  405ddd:	xor    BYTE PTR [ecx+ecx*8-0x2786bf0a],ch
  405de4:	cmp    ebx,DWORD PTR [ecx]
  405de6:	mov    edi,0xe1467a98
  405deb:	cmp    eax,0xeec6970a
  405df0:	xchg   edx,eax
  405df1:	rol    BYTE PTR [edi+0x4d70c15e],1
  405df7:	jmp    0x4320:0x84697277
  405dfe:	bound  eax,QWORD PTR [ecx-0x31]
  405e01:	fdivp  st(6),st
  405e03:	lock pushf 
  405e05:	je     0x405e2a
  405e07:	adc    bh,BYTE PTR [ecx-0x4c3168cc]
  405e0d:	out    dx,al
  405e0e:	stc    
  405e0f:	inc    esp
  405e10:	sbb    al,BYTE PTR [esi-0x6d]
  405e13:	adc    eax,0x51c5f21e
  405e18:	or     BYTE PTR [esi],ch
  405e1a:	and    esi,edi
  405e1c:	test   DWORD PTR [edx-0x54ce8ab3],0x9742b384
  405e26:	in     eax,0x14
  405e28:	lds    ebx,FWORD PTR [ebx+0x0]
  405e2b:	pop    eax
  405e2c:	mov    ah,0x24
  405e2e:	lahf   
  405e2f:	lock push es
  405e31:	in     eax,0xe1
  405e33:	jle    0x405e40
  405e35:	cmp    dh,BYTE PTR [edi]
  405e37:	les    ebp,FWORD PTR [ebp+0x8ad87a1]
  405e3d:	mov    cl,0x91
  405e3f:	xchg   esp,eax
  405e40:	aaa    
  405e41:	cdq    
  405e42:	pop    esp
  405e43:	ss pop ebp
  405e45:	mov    edx,0xc3ebaa82
  405e4a:	add    DWORD PTR [ecx],edi
  405e4c:	shr    DWORD PTR [ebp-0x6c9a23b3],1
  405e52:	or     bl,cl
  405e54:	sbb    DWORD PTR [esp+edi*1-0x3c],0x7e
  405e59:	jne    0x405ed3
  405e5b:	inc    DWORD PTR [ebx+0x2d]
  405e5e:	arpl   si,bx
  405e60:	arpl   di,bx
  405e62:	adc    DWORD PTR [edx],eax
  405e64:	fwait
  405e65:	jl     0x405ece
  405e67:	sar    DWORD PTR [edx-0x18bd9e76],0xf8
  405e6e:	xlat   BYTE PTR ds:[ebx]
  405e6f:	cld    
  405e70:	xor    DWORD PTR [edx-0x5c],esi
  405e73:	outs   dx,BYTE PTR ds:[esi]
  405e74:	pop    edx
  405e75:	cli    
  405e76:	cmp    BYTE PTR [edx],ch
  405e78:	cli    
  405e79:	fcomp  DWORD PTR [edi-0xf]
  405e7c:	sub    BYTE PTR [edx],ah
  405e7e:	jmp    0x405ecc
  405e80:	cmp    ebx,ebx
  405e82:	repz fwait
  405e84:	adc    BYTE PTR [edx-0x57ce57d4],dl
  405e8a:	adc    ecx,DWORD PTR [esi]
  405e8c:	lods   eax,DWORD PTR ds:[esi]
  405e8d:	hlt    
  405e8e:	add    DWORD PTR [ecx],ebp
  405e90:	inc    ebp
  405e91:	(bad)  
  405e92:	out    dx,eax
  405e93:	mov    edx,0x33afeb7b
  405e98:	and    BYTE PTR [ecx],bh
  405e9a:	ins    BYTE PTR es:[edi],dx
  405e9b:	rcl    BYTE PTR [esi-0x710c6b0],cl
  405ea1:	sahf   
  405ea2:	dec    edi
  405ea3:	push   0x0
  405ea5:	popa   
  405ea6:	xor    ecx,esi
  405ea8:	and    al,0x50
  405eaa:	psubsb mm3,QWORD PTR [ecx+0x19]
  405eae:	add    esp,eax
  405eb0:	jmp    0x68e4:0x15d6c914
  405eb7:	inc    ebp
  405eb8:	(bad)  
  405eb9:	out    dx,eax
  405eba:	push   es
  405ebb:	sub    dl,dh
  405ebd:	call   0xcc1d4196
  405ec2:	inc    ecx
  405ec3:	fsub   QWORD PTR [edx+0x20aa62aa]
  405ec9:	shl    DWORD PTR [esp+edx*4+0x21fbbd05],1
  405ed0:	lods   al,BYTE PTR ds:[esi]
  405ed1:	push   es
  405ed2:	xchg   ebx,eax
  405ed3:	mov    ds:0x35815b87,al
  405ed8:	mov    eax,0xeafa4465
  405edd:	and    bl,bl
  405edf:	or     eax,0x58b5ba12
  405ee4:	sti    
  405ee5:	xchg   ebx,eax
  405ee6:	scas   eax,DWORD PTR es:[edi]
  405ee7:	dec    esp
  405ee8:	pop    ebx
  405ee9:	(bad)  
  405eea:	dec    edi
  405eeb:	mov    al,ds:0x5f17b96b
  405ef0:	mul    bh
  405ef2:	test   BYTE PTR [ebx-0x5c3e194c],bh
  405ef8:	dec    edx
  405ef9:	xchg   ecx,eax
  405efa:	mov    WORD PTR [edi+edx*2+0x2d],?
  405efe:	daa    
  405eff:	mov    ecx,?
  405f01:	jmp    0x405eee
  405f03:	sbb    DWORD PTR [edi-0x38],ebx
  405f06:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  405f08:	push   edi
  405f09:	mov    bh,0x1c
  405f0b:	(bad)  
  405f0c:	jmp    0xa30c:0x8da49a48
  405f13:	and    eax,DWORD PTR [esi+edi*4-0x59b6e4b2]
  405f1a:	arpl   WORD PTR ds:0x86fff4de,bx
  405f20:	call   0xbef4a7d
  405f25:	leave  
  405f26:	jb     0x405f17
  405f28:	xchg   ecx,eax
  405f29:	dec    ebx
  405f2a:	mov    ebp,0x937d6ac6
  405f2f:	mov    ds:0x917d368d,al
  405f34:	jno    0x405ed4
  405f36:	loop   0x405f49
  405f38:	out    0x19,eax
  405f3a:	(bad)  [ebp-0x1467eb29]
  405f40:	aam    0xfb
  405f42:	pop    edx
  405f43:	add    al,0xa8
  405f45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f46:	xabort 0xd5
  405f49:	add    DWORD PTR [edi],ebx
  405f4b:	enter  0x990f,0xd6
  405f4f:	dec    esi
  405f50:	dec    edx
  405f51:	mov    gs,WORD PTR [ecx-0x25e01814]
  405f57:	mov    edx,0x30bdb570
  405f5c:	repnz loop 0x405fa9
  405f5f:	enter  0x70cd,0x17
  405f63:	in     eax,dx
  405f64:	adc    DWORD PTR [edx+eax*1-0x779b4b35],esp
  405f6b:	fnstcw WORD PTR [edx+0x52]
  405f6e:	xlat   BYTE PTR ds:[ebx]
  405f6f:	stos   BYTE PTR es:[edi],al
  405f70:	fistp  DWORD PTR ds:0x8c3eb803
  405f76:	or     eax,0xe01eb577
  405f7b:	inc    esi
  405f7c:	jae    0x405f77
  405f7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f7f:	addr16 iret 
  405f81:	rcr    BYTE PTR [ebx+0x1bc7312b],1
  405f87:	loope  0x405f38
  405f89:	out    dx,eax
  405f8a:	outs   dx,DWORD PTR ds:[esi]
  405f8b:	out    dx,eax
  405f8c:	js     0x405f95
  405f8e:	pop    ds
  405f8f:	icebp  
  405f90:	or     DWORD PTR ds:0x371616f4,ebp
  405f96:	adc    DWORD PTR [ebx+0x6773ae7e],eax
  405f9c:	retf   
  405f9d:	and    al,BYTE PTR [eax+0x2941c7a5]
  405fa3:	xchg   BYTE PTR [esi+esi*8-0xf201fab],al
  405faa:	add    eax,0xcbce3e44
  405faf:	int    0x6d
  405fb1:	cmp    BYTE PTR [ebp+0x9],ch
  405fb4:	sub    al,0x7a
  405fb6:	xor    eax,0xa0851990
  405fbb:	mov    ecx,0xc70768d4
  405fc0:	dec    eax
  405fc1:	out    0xb,al
  405fc3:	push   ecx
  405fc4:	aam    0xd5
  405fc6:	jmp    0x405fa6
  405fc8:	and    eax,0x773ee918
  405fcd:	mov    edx,0xbc3e5860
  405fd2:	fdivr  QWORD PTR [edi+edx*1]
  405fd5:	imul   esi,DWORD PTR [eax+0x59],0x948b1256
  405fdc:	jmp    0x1664a0ab
  405fe1:	cs cmp al,0x34
  405fe4:	pop    esp
  405fe5:	fs jne 0x406063
  405fe8:	mov    edi,0x33fe0b9c
  405fed:	rcr    DWORD PTR [ebp-0x78],0xfa
  405ff1:	jo     0x405fd8
  405ff3:	shl    BYTE PTR [ebp-0x23906053],1
  405ff9:	jmp    DWORD PTR [esi+0x46e1d54d]
  405fff:	dec    edi
  406000:	(bad)  
  406001:	adc    al,BYTE PTR [eax+0x763fd82c]
  406007:	cld    
  406008:	sahf   
  406009:	and    eax,0x2a77cb97
  40600e:	jle    0x40604a
  406010:	mov    ecx,0xb319f008
  406015:	out    dx,eax
  406016:	dec    eax
  406017:	mov    ah,0x8f
  406019:	aad    0x61
  40601b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40601c:	and    al,0x79
  40601e:	push   edi
  40601f:	sbb    eax,0xd0dae802
  406024:	btr    ebx,edx
  406027:	pop    ds
  406028:	xchg   esp,eax
  406029:	imul   edx,DWORD PTR [esi-0x4e37a3cc],0x6
  406030:	fwait
  406031:	adc    bl,dl
  406033:	adc    eax,0x8630686a
  406038:	shl    bl,0x74
  40603b:	push   ds
  40603c:	inc    edi
  40603d:	lahf   
  40603e:	mov    ds:0xb1e0ffea,eax
  406043:	sahf   
  406044:	xor    eax,DWORD PTR [esi+0x745b0909]
  40604a:	xor    eax,0xca083012
  406050:	jbe    0x4060a3
  406052:	fadd   QWORD PTR [eax-0x2eaed24c]
  406058:	mov    dh,0xda
  40605a:	or     eax,edi
  40605c:	aam    0xde
  40605e:	sub    ebp,DWORD PTR [edx]
  406060:	pop    esp
  406061:	xor    eax,0xdc9dde6c
  406066:	out    0xd6,eax
  406068:	repz adc al,0xab
  40606b:	je     0x406054
  40606d:	mov    al,0x2d
  40606f:	jge    0x406082
  406071:	xchg   ebp,eax
  406072:	idiv   DWORD PTR [edx+0x2f56bcab]
  406078:	daa    
  406079:	in     eax,0x2b
  40607b:	adc    esi,esi
  40607d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40607e:	ret    
  40607f:	loope  0x406020
  406081:	jne    0x4060aa
  406083:	mov    ch,0xd9
  406085:	jae    0x4060c9
  406087:	jae    0x406054
  406089:	push   ecx
  40608a:	repz rol DWORD PTR [edi+0x141f316e],0xe5
  406092:	lds    eax,FWORD PTR ds:0xe714c8c2
  406098:	test   al,0xaa
  40609a:	jecxz  0x4060e5
  40609c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40609d:	bnd call 0x758b7f07
  4060a3:	mov    al,BYTE PTR [eax+0x48386ebe]
  4060a9:	or     eax,DWORD PTR [esi]
  4060ab:	stos   BYTE PTR es:[edi],al
  4060ac:	inc    eax
  4060ad:	sbb    dl,cl
  4060af:	fsub   st(5),st
  4060b1:	dec    esp
  4060b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060b3:	add    dl,dh
  4060b5:	jg     0x406076
  4060b7:	xchg   esp,eax
  4060b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060b9:	dec    edx
  4060ba:	xor    al,0x8d
  4060bc:	pop    eax
  4060bd:	mov    dh,0x49
  4060bf:	mov    eax,0x539a10ff
  4060c4:	call   0x44a9:0xf54a3751
  4060cb:	add    cl,BYTE PTR [ecx-0x7cd06a12]
  4060d1:	inc    esi
  4060d2:	inc    ebx
  4060d3:	sub    eax,0xaf68824
  4060d8:	dec    esi
  4060d9:	(bad)  
  4060da:	and    eax,0xb554c1f6
  4060df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060e0:	sbb    al,0xe9
  4060e2:	sbb    eax,0x1cfa306a
  4060e7:	cli    
  4060e8:	retf   0x643e
  4060eb:	jno    0x406136
  4060ed:	shl    esp,1
  4060ef:	cli    
  4060f0:	pop    ss
  4060f1:	(bad)  
  4060f2:	and    bh,ch
  4060f4:	xchg   esi,eax
  4060f5:	mov    cl,0xae
  4060f7:	xchg   esi,eax
  4060f8:	stc    
  4060f9:	aaa    
  4060fa:	or     BYTE PTR [ecx+0x51f75905],dl
  406100:	mov    esi,0x933ed0d
  406105:	xchg   ecx,eax
  406106:	int3   
  406107:	xchg   esi,esp
  406109:	shr    BYTE PTR [esi],cl
  40610b:	push   edx
  40610c:	mov    bh,0x19
  40610e:	mov    BYTE PTR ds:0xc7327137,cl
  406114:	mov    es,WORD PTR fs:[esi+0x68]
  406118:	inc    edx
  406119:	mov    ds,WORD PTR [edi]
  40611b:	and    esi,DWORD PTR [esp+esi*4-0xa95090e]
  406122:	leave  
  406123:	sub    eax,0x9e95a3d0
  406128:	sti    
  406129:	mov    bh,0x2a
  40612b:	mov    ebp,DWORD PTR [eax+eiz*8]
  40612e:	pop    esp
  40612f:	jg     0x4061a5
  406131:	das    
  406132:	mov    cl,BYTE PTR [esi+eiz*2]
  406135:	jno    0x4060d1
  406137:	xchg   esi,eax
  406138:	lahf   
  406139:	push   ecx
  40613a:	pop    esp
  40613b:	and    ecx,ecx
  40613d:	leave  
  40613e:	mov    ecx,esp
  406140:	sbb    DWORD PTR [edi-0x2078ff32],esp
  406146:	stos   DWORD PTR es:[edi],eax
  406147:	ins    DWORD PTR es:[edi],dx
  406148:	fucomi st,st(2)
  40614a:	(bad)  [eax-0xa]
  40614d:	adc    BYTE PTR [edi+esi*8+0x6],bh
  406151:	lods   eax,DWORD PTR ds:[esi]
  406152:	dec    esi
  406153:	xchg   edi,eax
  406154:	adc    al,0x6e
  406156:	ins    DWORD PTR es:[edi],dx
  406157:	inc    esp
  406158:	or     BYTE PTR [edi+0x56700a25],dl
  40615e:	push   DWORD PTR [ecx]
  406160:	and    ebx,DWORD PTR [esi+ebx*2+0x17]
  406164:	or     eax,0x14fc8475
  406169:	dec    ebp
  40616a:	retf   0x5212
  40616d:	pop    eax
  40616e:	mov    ebx,0x360fbc6a
  406173:	jno    0x406171
  406175:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406176:	dec    esp
  406177:	cmp    DWORD PTR [edx-0x703d5abd],ecx
  40617d:	cwde   
  40617e:	jo     0x406185
  406180:	cmp    bl,ch
  406182:	in     al,dx
  406183:	jg     0x4061a7
  406185:	(bad)  
  406186:	loop   0x4061d7
  406188:	lods   al,BYTE PTR ds:[esi]
  406189:	push   ecx
  40618a:	cmp    al,0xc4
  40618c:	nop
  40618d:	mov    gs,WORD PTR [ebx]
  40618f:	xchg   ebp,eax
  406190:	fadd   st,st(6)
  406192:	xchg   BYTE PTR [ebx-0x38],bl
  406195:	inc    eax
  406196:	cmp    BYTE PTR [esi+ecx*4],ah
  406199:	pop    edi
  40619a:	ror    DWORD PTR [ecx+0x5e886978],0xe9
  4061a1:	(bad)  
  4061a2:	push   cs
  4061a3:	dec    ebp
  4061a4:	or     eax,0xec1afb48
  4061a9:	clc    
  4061aa:	mov    ds:0x5999f49f,al
  4061af:	adc    ebx,DWORD PTR [ebp+0x74]
  4061b2:	jae    0x40617b
  4061b4:	out    dx,al
  4061b5:	xchg   ebp,eax
  4061b6:	hlt    
  4061b7:	xlat   BYTE PTR ds:[ebx]
  4061b8:	xchg   edi,eax
  4061b9:	mov    bh,0xb3
  4061bb:	push   ebp
  4061bc:	adc    edx,edi
  4061be:	iret   
  4061bf:	call   0xeaa6:0xa38cd24
  4061c6:	pop    ecx
  4061c7:	pop    eax
  4061c8:	push   esp
  4061c9:	sub    ch,BYTE PTR [ecx+0x66]
  4061cc:	mov    dl,0xe7
  4061ce:	and    esi,DWORD PTR [esi+0x48]
  4061d1:	jg     0x406192
  4061d3:	inc    DWORD PTR [ebx-0x61]
  4061d6:	test   al,0xc7
  4061d8:	adc    DWORD PTR [ebp+0x2b],0xfffffff0
  4061dc:	clc    
  4061dd:	xor    edx,DWORD PTR [ecx]
  4061df:	and    eax,0xb92f1a6f
  4061e4:	sub    al,0x9b
  4061e6:	in     al,0xd8
  4061e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061e9:	dec    ebp
  4061ea:	or     eax,0x181e1000
  4061ef:	pop    ds
  4061f0:	out    dx,eax
  4061f1:	sti    
  4061f2:	pop    ds
  4061f3:	xchg   edx,eax
  4061f4:	cmp    eax,0xf7a20ccb
  4061f9:	cmp    DWORD PTR [eax-0xb290af6],0x6f
  406200:	pop    ecx
  406201:	jae    0x406245
  406203:	dec    ebp
  406204:	sti    
  406205:	xchg   BYTE PTR [edi-0x26dcc1d1],cl
  40620b:	xor    bl,BYTE PTR [esi-0x66]
  40620e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40620f:	or     al,0xbf
  406211:	push   0x49
  406213:	mov    edi,0xb043480a
  406218:	sub    BYTE PTR ds:0xc037980d,dh
  40621e:	stos   BYTE PTR es:[edi],al
  40621f:	arpl   WORD PTR [ecx+ebp*1+0x31],si
  406223:	fistp  DWORD PTR [ebp-0x41]
  406226:	sbb    al,0x70
  406228:	cmovns ecx,DWORD PTR [esi]
  40622b:	sbb    al,0x19
  40622d:	jb     0x406286
  40622f:	add    eax,0x51c5d4a0
  406234:	les    ecx,FWORD PTR [eax]
  406236:	popf   
  406237:	jb     0x4061e3
  406239:	push   di
  40623b:	mov    al,0x2
  40623d:	in     eax,dx
  40623e:	adc    ebp,DWORD PTR [ebx]
  406240:	mov    ?,WORD PTR [edi+0x7024f1c]
  406246:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406247:	jnp    0x4061e2
  406249:	jbe    0x4062a7
  40624b:	and    ah,BYTE PTR [ebx-0x33]
  40624e:	pop    esp
  40624f:	xchg   esp,eax
  406250:	(bad)  
  406251:	mov    eax,0xd9d3fe52
  406256:	or     BYTE PTR [ecx+0x7f],bl
  406259:	shl    DWORD PTR [eax-0x416da921],1
  40625f:	ror    BYTE PTR [esi+0x17],cl
  406262:	inc    ebp
  406263:	mov    al,ds:0x1153de5
  406268:	fcmovne st,st(6)
  40626a:	mov    WORD PTR [edi-0x7b90d79a],gs
  406270:	sti    
  406271:	imul   ecx,DWORD PTR [edi],0xb
  406274:	ins    DWORD PTR es:[edi],dx
  406275:	dec    ecx
  406276:	sub    bh,BYTE PTR [ebx+0x2cfd087]
  40627c:	je     0x4062a1
  40627e:	enter  0x3542,0xba
  406282:	retf   0xde14
  406285:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406286:	dec    esp
  406287:	inc    edi
  406288:	add    eax,0x31b786ea
  40628d:	repz push ecx
  40628f:	scas   al,BYTE PTR es:[edi]
  406290:	retf   0x6d66
  406293:	push   ss
  406294:	ds and ecx,esi
  406297:	cwde   
  406298:	dec    ebx
  406299:	dec    esi
  40629a:	les    ebx,FWORD PTR [edx+edi*2+0x3866ec92]
  4062a1:	stos   BYTE PTR es:[edi],al
  4062a2:	jl     0x406265
  4062a4:	push   ecx
  4062a5:	int    0x30
  4062a7:	pusha  
  4062a8:	add    cl,BYTE PTR [ecx-0x77504321]
  4062ae:	mov    cl,0xfc
  4062b0:	lods   eax,DWORD PTR ds:[si]
  4062b2:	pusha  
  4062b3:	jo     0x4062e6
  4062b5:	pop    esp
  4062b6:	fisttp QWORD PTR [esi+0x2731a9c8]
  4062bc:	lock push edx
  4062be:	xchg   ebp,eax
  4062bf:	clc    
  4062c0:	add    edx,edx
  4062c2:	xchg   esi,eax
  4062c3:	mov    ds:0xff283d5e,eax
  4062c8:	(bad)  
  4062c9:	mov    ebx,0x793588f9
  4062ce:	inc    esp
  4062cf:	jle    0x4062b0
  4062d1:	das    
  4062d2:	adc    edi,DWORD PTR [edi]
  4062d4:	pushf  
  4062d5:	loop   0x40634d
  4062d7:	or     edx,DWORD PTR [eax-0x65]
  4062da:	les    esi,FWORD PTR [ebp+0x3e66c775]
  4062e0:	sar    ecx,1
  4062e2:	stos   BYTE PTR es:[edi],al
  4062e3:	int3   
  4062e4:	push   ebx
  4062e5:	cli    
  4062e6:	inc    edi
  4062e7:	dec    ebp
  4062e8:	and    BYTE PTR [ecx],0xf1
  4062eb:	add    al,0x95
  4062ed:	(bad)  
  4062ee:	sti    
  4062ef:	inc    ecx
  4062f0:	mov    dh,0x8f
  4062f2:	inc    edx
  4062f3:	lds    ecx,FWORD PTR [edi-0x70]
  4062f6:	lds    ebp,FWORD PTR [ebx-0x64d88281]
  4062fc:	mov    WORD PTR ds:0x35c9d914,ss
  406303:	cwde   
  406304:	arpl   ax,di
  406306:	pop    edx
  406307:	shl    BYTE PTR [ebx+0x75fe155e],1
  40630d:	or     eax,0x3fa5b2c4
  406312:	mov    ch,0x9d
  406314:	add    dl,dl
  406316:	mov    ecx,0xb050290a
  40631b:	popa   
  40631c:	add    al,0x94
  40631e:	jns    0x406318
  406320:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406321:	and    esi,ecx
  406323:	xchg   ecx,eax
  406324:	popf   
  406325:	stos   BYTE PTR es:[edi],al
  406326:	jg     0x4062f4
  406328:	cmp    al,0xdf
  40632a:	or     ebp,DWORD PTR [ecx-0x32]
  40632d:	pusha  
  40632e:	adc    al,0x5e
  406330:	cmp    al,cl
  406332:	jmp    0x2370c94f
  406337:	fwait
  406338:	lods   al,BYTE PTR ds:[esi]
  406339:	sub    DWORD PTR [edx],esp
  40633b:	mov    ds:0x30270171,eax
  406340:	cmp    ebx,DWORD PTR [edx]
  406342:	xchg   esi,eax
  406343:	and    DWORD PTR [eax-0x11],ebp
  406346:	(bad)  
  406347:	hlt    
  406348:	fs add ah,ch
  40634b:	fisttp WORD PTR [edx]
  40634d:	push   ecx
  40634f:	xchg   al,dl
  406351:	sub    eax,DWORD PTR [esi]
  406353:	out    0xb6,eax
  406355:	mov    BYTE PTR ds:0x3898ebc5,0xac
  40635c:	or     dh,dh
  40635e:	add    dh,ah
  406360:	pop    edi
  406361:	fwait
  406362:	cwde   
  406363:	xchg   ecx,eax
  406364:	cmp    esp,edi
  406366:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406367:	mov    ss:0x7e13e1d7,eax
  40636d:	push   ecx
  40636e:	daa    
  40636f:	loopne 0x406324
  406371:	push   eax
  406372:	and    al,0xee
  406374:	inc    esi
  406375:	in     al,dx
  406376:	shr    dh,cl
  406378:	sbb    al,0xcf
  40637a:	cmp    ecx,ecx
  40637c:	mov    edx,0xfa4586db
  406381:	sti    
  406382:	(bad)  
  406383:	pop    ebx
  406384:	jecxz  0x406378
  406386:	mov    BYTE PTR [ebp+0x7b43ec07],ah
  40638c:	(bad)  
  40638d:	push   eax
  40638e:	imul   edx,DWORD PTR [edx],0x2151b5f3
  406394:	es popf 
  406396:	dec    ecx
  406397:	fst    QWORD PTR [ebx+0x41]
  40639a:	shl    DWORD PTR [ecx-0x3184fa42],cl
  4063a0:	loope  0x4063d9
  4063a2:	cmp    al,0xae
  4063a4:	stc    
  4063a5:	xor    edi,DWORD PTR [esi-0x2106a9f5]
  4063ab:	pop    es
  4063ac:	in     eax,dx
  4063ad:	push   0xffffffaf
  4063af:	pop    ds
  4063b0:	(bad)  
  4063b1:	rol    ecx,cl
  4063b3:	push   0xa3f73c0b
  4063b8:	sub    bl,BYTE PTR [esi]
  4063ba:	jge    0x406397
  4063bc:	jp     0x4063bd
  4063be:	in     eax,0x4e
  4063c0:	mov    ch,0x16
  4063c2:	in     eax,0x97
  4063c4:	mov    al,0xc9
  4063c6:	push   ecx
  4063c7:	pusha  
  4063c8:	(bad)  
  4063c9:	cmp    bl,ah
  4063cb:	mov    cl,0xf9
  4063cd:	and    al,0x9e
  4063cf:	adc    eax,0xc3b1535a
  4063d4:	pop    esi
  4063d5:	jae    0x4063c4
  4063d7:	rcl    DWORD PTR [ecx+edi*4],1
  4063da:	or     esp,DWORD PTR [esi-0x7]
  4063dd:	mov    ds:0xc70cd587,eax
  4063e2:	lods   al,BYTE PTR ds:[esi]
  4063e3:	int3   
  4063e4:	xchg   edi,eax
  4063e5:	xchg   ebp,eax
  4063e6:	stos   DWORD PTR es:[edi],eax
  4063e7:	call   0x9bbe:0xb9ab
  4063ed:	add    BYTE PTR [esi+0x2679286b],bh
  4063f3:	xchg   BYTE PTR [ecx],ch
  4063f5:	ins    DWORD PTR es:[edi],dx
  4063f6:	in     eax,dx
  4063f7:	stos   DWORD PTR es:[edi],eax
  4063f8:	jae    0x4063b5
  4063fa:	xor    al,0x11
  4063fc:	push   esi
  4063fd:	in     al,dx
  4063fe:	inc    esi
  4063ff:	js     0x40647e
  406401:	call   0xbf8d0cc9
  406406:	pop    edi
  406407:	sar    ebp,cl
  406409:	mov    edx,0x7dacfb27
  40640e:	test   BYTE PTR [esi+0x38],cl
  406411:	mov    edi,cs
  406413:	mov    dl,0x53
  406415:	xlat   BYTE PTR ds:[ebx]
  406416:	mov    cl,0xb6
  406418:	xchg   edx,eax
  406419:	mov    ah,0x43
  40641b:	jecxz  0x4063ac
  40641d:	mov    al,dh
  40641f:	cli    
  406420:	loop   0x406409
  406422:	and    DWORD PTR [eax],esi
  406424:	and    DWORD PTR [edx+ebp*8],ebp
  406427:	stc    
  406428:	or     al,0x40
  40642a:	clc    
  40642b:	dec    esp
  40642c:	xchg   esp,eax
  40642d:	push   ecx
  40642e:	clc    
  40642f:	(bad)  
  406430:	mov    cl,0xd3
  406432:	mov    esi,0xdc2ef63d
  406437:	xchg   ebp,eax
  406438:	pop    ecx
  406439:	gs (bad) 
  40643b:	pop    ebx
  40643c:	repz push 0xf7a1cf02
  406442:	add    DWORD PTR [eax],edx
  406444:	cmp    ecx,DWORD PTR [edx-0x59]
  406447:	icebp  
  406448:	mov    al,0x37
  40644a:	fisubr WORD PTR [edx]
  40644c:	shr    DWORD PTR [ecx+0x53],cl
  40644f:	mov    ebp,0x226a3916
  406454:	push   ss
  406455:	and    al,0x8c
  406457:	popf   
  406458:	or     eax,0xbc81467f
  40645d:	nop
  40645e:	and    al,0xf8
  406460:	jp     0x4064df
  406462:	test   DWORD PTR [edx-0x1c7456a7],eax
  406468:	inc    edi
  406469:	jno    0x406477
  40646b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40646c:	xchg   ebx,eax
  40646d:	int3   
  40646e:	xchg   DWORD PTR [ecx+0x7b],esp
  406471:	jno    0x4063fd
  406473:	sbb    bh,BYTE PTR [ebp+0x19]
  406476:	jae    0x406441
  406478:	mov    esi,0xa719051d
  40647d:	loope  0x4064fe
  40647f:	clc    
  406480:	mov    dh,0xfa
  406482:	sbb    al,0x4f
  406484:	test   BYTE PTR [edx],0x98
  406487:	cs in  eax,0x0
  40648a:	xor    DWORD PTR [ebp+0x3f78d5be],edx
  406490:	sub    BYTE PTR [ebx],bl
  406492:	push   eax
  406493:	dec    esp
  406494:	xor    al,0xbd
  406496:	nop
  406497:	out    0x81,eax
  406499:	cli    
  40649a:	mov    al,ds:0x125101a7
  40649f:	enter  0x833,0x68
  4064a3:	sub    ebp,eax
  4064a5:	jl     0x406501
  4064a7:	cli    
  4064a8:	and    BYTE PTR [esi-0x3d041036],bh
  4064ae:	cs jmp 0x8959ce74
  4064b4:	test   al,0x20
  4064b6:	xor    DWORD PTR [esi-0x7637aeba],esp
  4064bc:	add    ah,BYTE PTR [ebp+0x40]
  4064bf:	scas   al,BYTE PTR es:[edi]
  4064c0:	scas   eax,DWORD PTR es:[edi]
  4064c1:	xor    al,0x89
  4064c3:	pop    esi
  4064c4:	test   eax,0xe88736cc
  4064c9:	in     eax,dx
  4064ca:	mov    BYTE PTR [esi+0x3cc4de87],dh
  4064d0:	inc    esi
  4064d1:	or     BYTE PTR [ebx+eax*8-0x62],0x86
  4064d6:	test   BYTE PTR [esi-0x11276ee2],bh
  4064dc:	push   ds
  4064dd:	xor    ebp,DWORD PTR [edx]
  4064df:	(bad)  
  4064e0:	icebp  
  4064e1:	stc    
  4064e2:	inc    ebp
  4064e3:	das    
  4064e4:	in     eax,0x78
  4064e6:	push   ebx
  4064e7:	xchg   esp,eax
  4064e8:	mov    edi,0x2c08324
  4064ed:	je     0x4064f3
  4064ef:	and    DWORD PTR [edi-0x6aa8a268],ecx
  4064f5:	mov    ah,0xe5
  4064f7:	pop    ecx
  4064f8:	fimul  WORD PTR [edx+edx*4]
  4064fb:	mov    ss,WORD PTR [edx]
  4064fd:	sbb    BYTE PTR [ecx-0x2002785e],0x5f
  406504:	rcr    DWORD PTR [ebx],1
  406506:	sub    al,0x75
  406508:	mov    WORD PTR [ebx],ss
  40650a:	div    DWORD PTR [esi+0x5a]
  40650d:	in     eax,dx
  40650e:	adc    al,0xd
  406510:	nop
  406511:	pop    ss
  406512:	push   ecx
  406513:	js     0x406549
  406515:	adc    BYTE PTR [edi-0x415d4ebb],cl
  40651b:	test   eax,0xb48c29d2
  406520:	pop    ebp
  406521:	loop   0x406594
  406523:	ja     0x4064f1
  406525:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406526:	ret    0x7cbd
  406529:	pop    ebp
  40652a:	push   es
  40652b:	sbb    ebx,DWORD PTR [esi]
  40652d:	push   0xfd98a286
  406532:	jge    0x40650c
  406534:	shl    BYTE PTR [esi+0x16],1
  406537:	scas   al,BYTE PTR es:[edi]
  406538:	mov    cl,0xfe
  40653a:	shl    BYTE PTR ds:0xe00fbc0e,1
  406540:	push   ebp
  406541:	nop
  406542:	shl    dl,1
  406544:	pop    ss
  406545:	cmp    BYTE PTR [ecx-0x2a21d3ad],bl
  40654b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40654c:	push   0x7c
  40654e:	xchg   ecx,eax
  40654f:	jecxz  0x4064ef
  406551:	cmp    ebx,edi
  406553:	imul   eax,eax,0x62613c98
  406559:	int3   
  40655a:	sub    eax,0xba28e41a
  40655f:	iret   
  406560:	add    al,bl
  406562:	cmp    eax,0xbd447374
  406567:	jp     0x4065d3
  406569:	add    eax,0xd91b625b
  40656e:	and    ecx,DWORD PTR [edx-0x1e4435d1]
  406574:	jb     0x4065a3
  406576:	les    ecx,FWORD PTR [eax+0x5a685011]
  40657c:	inc    edx
  40657d:	(bad)  
  40657e:	icebp  
  40657f:	xchg   BYTE PTR ds:0x41def1d7,dh
  406585:	ss and al,0xdc
  406588:	jmp    0x2c24:0xc782d53e
  40658f:	and    eax,0x775d762f
  406594:	rol    edi,1
  406596:	mov    WORD PTR [ebp+0x117c20e],cs
  40659c:	loopne 0x406556
  40659e:	ins    DWORD PTR es:[edi],dx
  40659f:	nop
  4065a0:	xchg   edi,eax
  4065a1:	test   DWORD PTR [ecx+0x7d],ebx
  4065a4:	or     DWORD PTR [esi],ebp
  4065a6:	or     al,0xf6
  4065a8:	call   0xf614eb84
  4065ad:	mov    edi,0x67112d75
  4065b2:	push   esp
  4065b3:	stc    
  4065b4:	inc    ecx
  4065b5:	sub    al,0x49
  4065b7:	fisubr WORD PTR [edx*2-0x14456b48]
  4065be:	or     eax,0x26b71b12
  4065c3:	jno    0x4065e6
  4065c5:	xor    DWORD PTR [ebx+0x15],eax
  4065c8:	mov    al,0x1d
  4065ca:	pop    esp
  4065cb:	or     al,BYTE PTR [edx]
  4065cd:	cmp    BYTE PTR [esi+0x11],bl
  4065d0:	and    bl,BYTE PTR ds:0x92aea912
  4065d6:	and    esp,DWORD PTR [ecx+edx*2]
  4065d9:	push   es
  4065da:	ja     0x4065b7
  4065dc:	(bad)  
  4065dd:	rol    ecx,1
  4065df:	sub    al,0xfe
  4065e1:	jnp    0x4065fb
  4065e3:	adc    esi,DWORD PTR [eax+edi*1]
  4065e6:	pop    edi
  4065e7:	xchg   esp,eax
  4065e8:	shr    DWORD PTR [ecx-0xc],cl
  4065eb:	je     0x4065ab
  4065ed:	xor    al,0x90
  4065ef:	pop    edx
  4065f0:	scas   al,BYTE PTR es:[edi]
  4065f1:	not    esp
  4065f3:	xchg   ebx,eax
  4065f4:	push   esi
  4065f5:	sub    al,0x5f
  4065f7:	test   ebp,0xd3be6d16
  4065fd:	enter  0xcdca,0xb5
  406601:	xchg   DWORD PTR [ebp+0x4f27429b],ebx
  406607:	fbstp  TBYTE PTR ds:0x9afbda58
  40660d:	leave  
  40660e:	and    eax,0xa28100e8
  406613:	lahf   
  406614:	mov    al,0xd3
  406616:	jg     0x406652
  406618:	mov    ds:0x6b8d53b6,al
  40661d:	mov    ecx,0xae93cd6
  406622:	(bad)  
  406623:	push   esi
  406624:	je     0x406661
  406626:	aad    0xe9
  406628:	cld    
  406629:	xchg   ecx,eax
  40662a:	mov    bh,0xaa
  40662c:	mov    al,0xd1
  40662e:	mov    dh,0xd0
  406630:	or     eax,0xbde09610
  406635:	add    eax,edx
  406637:	add    dh,BYTE PTR [edx+0x2]
  40663a:	ret    
  40663b:	aas    
  40663c:	xor    al,0x59
  40663e:	push   esp
  40663f:	addr16 out 0xcc,eax
  406642:	xor    edx,DWORD PTR [edx-0x8]
  406645:	dec    edi
  406646:	xchg   ebx,eax
  406647:	pop    ebp
  406648:	sbb    esi,ecx
  40664a:	push   0xe812be8
  40664f:	xchg   esi,eax
  406650:	psadbw mm6,QWORD PTR [edx-0x70f126b6]
  406657:	daa    
  406658:	mov    bl,0x6
  40665a:	xchg   esp,eax
  40665b:	aad    0x97
  40665d:	outs   dx,BYTE PTR ds:[esi]
  40665e:	mov    DWORD PTR [edi-0x40],edx
  406661:	pop    ecx
  406662:	scas   al,BYTE PTR es:[edi]
  406663:	xor    edx,DWORD PTR [ecx+edi*1+0x28]
  406667:	sbb    ecx,DWORD PTR [edx-0x19]
  40666a:	mov    es,WORD PTR [ecx+0x28]
  40666d:	fisubr WORD PTR [eax-0x2300e19d]
  406673:	mov    ch,0x45
  406675:	les    ebx,FWORD PTR [ebp-0x4f9912c1]
  40667b:	cmp    BYTE PTR [eax-0x74],dh
  40667e:	mov    bl,0x10
  406680:	loopne 0x4066c0
  406682:	jne    0x40668d
  406684:	mov    ecx,0xe250fa66
  406689:	jmp    0x2e5dff1a
  40668e:	loop   0x406645
  406690:	mov    BYTE PTR [esi-0x6429aaaa],dl
  406696:	adc    eax,0xd5e82e08
  40669b:	outs   dx,DWORD PTR ds:[esi]
  40669c:	inc    ebx
  40669d:	mov    eax,ds:0xfea79706
  4066a2:	xchg   DWORD PTR [edi],ebp
  4066a4:	jo     0x4066ef
  4066a6:	fsubr  QWORD PTR [ecx+ebx*2-0x6c]
  4066aa:	in     al,dx
  4066ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066ac:	mov    bh,BYTE PTR ds:0x913d3f7d
  4066b2:	dec    esp
  4066b3:	sti    
  4066b4:	(bad)  
  4066b6:	hlt    
  4066b7:	cwde   
  4066b8:	mov    edx,0xb3f00a4e
  4066bd:	fcom   QWORD PTR [esi-0x2b]
  4066c0:	jg     0x406713
  4066c2:	sbb    DWORD PTR [ebx-0x30b337a4],ecx
  4066c8:	jg     0x406712
  4066ca:	fidivr WORD PTR [edx+0x1b]
  4066cd:	stos   DWORD PTR es:[edi],eax
  4066ce:	test   dh,bl
  4066d0:	sub    dh,BYTE PTR [ecx]
  4066d2:	sahf   
  4066d3:	add    al,ch
  4066d5:	daa    
  4066d6:	lock scas al,BYTE PTR es:[edi]
  4066d8:	jp     0x40666b
  4066da:	(bad)  
  4066db:	jae    0x406664
  4066dd:	xchg   ebp,eax
  4066de:	dec    bx
  4066e0:	es cdq 
  4066e2:	push   ebx
  4066e3:	sbb    al,0x62
  4066e5:	imul   ebp,DWORD PTR [ecx],0xffffffda
  4066e8:	fdivr  st(1),st
  4066ea:	outs   dx,DWORD PTR ds:[esi]
  4066eb:	call   0x935f:0xd630b444
  4066f2:	daa    
  4066f3:	fs nop
  4066f5:	pop    eax
  4066f6:	add    al,0x3d
  4066f8:	dec    ebp
  4066f9:	pop    ebx
  4066fa:	xchg   ebx,eax
  4066fb:	push   ecx
  4066fc:	add    ecx,edi
  4066fe:	and    al,0xdf
  406700:	mov    DWORD PTR [eax-0xb],ebp
  406703:	sub    DWORD PTR [eax-0x32],ebx
  406706:	rcl    BYTE PTR [edi-0xe],0x78
  40670a:	sbb    cl,BYTE PTR [esi]
  40670c:	dec    edx
  40670d:	xchg   esp,eax
  40670e:	push   eax
  40670f:	push   esi
  406710:	(bad)  
  406711:	pop    esp
  406712:	xor    al,BYTE PTR [edi+ebp*1+0xc5723a]
  406719:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40671a:	std    
  40671b:	fild   DWORD PTR [eax]
  40671d:	xor    eax,0xf0204429
  406722:	in     al,0x25
  406724:	push   ecx
  406725:	and    al,0x88
  406727:	sub    dl,BYTE PTR [esi*8+0x18fc6adf]
  40672e:	(bad)  
  40672f:	int    0xf1
  406731:	loop   0x40673d
  406733:	ja     0x4066f4
  406735:	in     eax,0x1
  406737:	cdq    
  406738:	xlat   BYTE PTR ds:[ebx]
  406739:	jp     0x406702
  40673b:	lds    edi,FWORD PTR [edx-0x3a]
  40673e:	cs sub ebp,ecx
  406741:	xor    eax,0xd9fa290f
  406746:	jmp    0x1c1bdbbb
  40674b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40674c:	push   cs
  40674d:	or     bh,0xdc
  406750:	adc    edx,DWORD PTR [esi+esi*4]
  406753:	ss retf 0xf92
  406757:	mov    bl,0x6
  406759:	xlat   BYTE PTR ds:[ebx]
  40675a:	scas   eax,DWORD PTR es:[edi]
  40675b:	call   0x6928:0xa4877be4
  406762:	mov    cl,0x71
  406764:	jmp    0xce2545e1
  406769:	sub    BYTE PTR [edx+0x35],bh
  40676c:	jle    0x406708
  40676e:	sbb    BYTE PTR [esi],cl
  406770:	stos   BYTE PTR es:[edi],al
  406771:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406772:	or     al,0x21
  406774:	xchg   BYTE PTR [edi],dl
  406776:	mov    ds:0x7d48fb20,al
  40677b:	nop
  40677c:	aaa    
  40677d:	adc    BYTE PTR [ebx+0xa2900c0],dh
  406783:	and    esp,esp
  406785:	dec    esp
  406786:	jle    0x406758
  406788:	out    dx,eax
  406789:	das    
  40678a:	sbb    eax,0xab4f495e
  40678f:	pop    es
  406790:	add    eax,0x3fad5d44
  406795:	or     eax,0xfd7d47
  40679a:	cmp    al,0x99
  40679c:	(bad)  
  40679d:	test   eax,0x985c22d3
  4067a2:	retf   0x82b3
  4067a5:	das    
  4067a6:	sub    BYTE PTR [ebx+0x12cd77f8],al
  4067ac:	icebp  
  4067ad:	mov    edi,0x8dd27734
  4067b2:	dec    edx
  4067b3:	int    0x81
  4067b5:	lahf   
  4067b6:	dec    ebp
  4067b7:	xchg   edi,eax
  4067b8:	pop    ss
  4067b9:	mov    esi,0x8e2fbdb3
  4067be:	test   DWORD PTR [ecx+0x44],ecx
  4067c1:	sub    DWORD PTR [eax-0x48],esp
  4067c4:	out    dx,eax
  4067c5:	lahf   
  4067c6:	stos   BYTE PTR es:[edi],al
  4067c7:	sti    
  4067c8:	in     al,dx
  4067c9:	test   DWORD PTR [ebp+0x5a78f43d],0x3545450a
  4067d3:	add    eax,0xbbfc8d25
  4067d8:	je     0x406765
  4067da:	xchg   ecx,eax
  4067db:	in     al,0x35
  4067dd:	popa   
  4067de:	mov    esi,0x45614606
  4067e3:	in     al,0x3f
  4067e5:	adc    edx,DWORD PTR [esi+0x72]
  4067e8:	cmp    al,0xd1
  4067ea:	fadd   DWORD PTR [ebp+0x2]
  4067ed:	test   eax,0xe9186735
  4067f2:	data16 xor ah,ah
  4067f5:	arpl   si,di
  4067f7:	sbb    edi,ecx
  4067f9:	(bad)  
  4067fa:	mov    esi,0x5d6f2474
  4067ff:	xor    bl,BYTE PTR [ebp+0x1d]
  406802:	dec    ebp
  406803:	xor    cl,BYTE PTR [edi+0x16bdb381]
  406809:	aaa    
  40680a:	add    DWORD PTR [esi+0x3dab4ec4],esi
  406810:	lock sahf 
  406812:	mov    ?,WORD PTR [edx+ecx*2+0x10]
  406816:	pusha  
  406817:	push   0xffffffff
  406819:	loop   0x4067d6
  40681b:	pop    esp
  40681c:	mov    WORD PTR [edx+0x48],?
  40681f:	mov    es:0xb1876d00,eax
  406825:	push   esp
  406826:	out    dx,eax
  406827:	ja     0x406897
  406829:	pop    es
  40682a:	push   cs
  40682b:	push   ebp
  40682c:	xor    bl,BYTE PTR [eax+edx*4]
  40682f:	add    al,BYTE PTR [ecx+0x727fdbfe]
  406835:	and    eax,0x97df089c
  40683a:	pavgb  mm0,mm4
  40683d:	cmp    al,0x73
  40683f:	sbb    BYTE PTR [esi],bl
  406841:	jmp    FWORD PTR gs:[eax+0x253d6959]
  406848:	ja     0x406869
  40684a:	rcl    BYTE PTR [esi-0x63e3fed9],cl
  406850:	add    dl,BYTE PTR [esi-0x62fe83a7]
  406856:	scas   al,BYTE PTR es:[edi]
  406857:	stos   DWORD PTR es:[edi],eax
  406858:	sahf   
  406859:	sbb    BYTE PTR [eax+0x30b8b0c9],ah
  40685f:	cli    
  406860:	sbb    al,0x52
  406862:	out    0x98,eax
  406864:	test   eax,0x24da4a96
  406869:	push   edi
  40686a:	aam    0x6f
  40686c:	cld    
  40686d:	jle    0x406855
  40686f:	push   eax
  406870:	sub    BYTE PTR [eax-0x1b4457f8],bh
  406876:	mul    DWORD PTR [edi]
  406878:	ret    
  406879:	jecxz  0x406820
  40687b:	scas   al,BYTE PTR es:[edi]
  40687c:	addr16 ret 
  40687e:	addr16 mov esi,0x5ebb973e
  406884:	mov    edx,0x4c99693e
  406889:	sbb    ebp,DWORD PTR [ecx]
  40688b:	(bad)  
  40688c:	push   ecx
  40688d:	les    ebp,FWORD PTR [edi]
  40688f:	jb     0x406829
  406891:	(bad)  
  406893:	mov    bh,0x32
  406895:	pop    ebp
  406896:	fwait
  406897:	pop    esp
  406898:	enter  0x6400,0xae
  40689c:	add    eax,0x5a2993bd
  4068a1:	sub    eax,0x15a7052f
  4068a6:	bound  eax,QWORD PTR [eax+edx*8]
  4068a9:	stc    
  4068aa:	data16 xor al,0x4
  4068ad:	adc    eax,0xff4416fd
  4068b2:	and    BYTE PTR [edi+ebx*4+0x17],bh
  4068b6:	or     ah,ah
  4068b8:	loopne 0x406854
  4068ba:	call   0xaa394154
  4068bf:	jmp    0x2b05:0x39ffc487
  4068c6:	das    
  4068c7:	scas   al,BYTE PTR es:[edi]
  4068c8:	xlat   BYTE PTR ds:[ebx]
  4068c9:	sub    eax,0x93255e90
  4068ce:	dec    edi
  4068cf:	jge    0x4068c6
  4068d1:	sbb    DWORD PTR [ebx],edi
  4068d3:	xchg   ecx,eax
  4068d4:	(bad)  
  4068d5:	pusha  
  4068d6:	jl     0x4068e4
  4068d8:	sub    al,0x10
  4068da:	retf   0x80e0
  4068dd:	mov    ah,0xdf
  4068df:	ja     0x4068bb
  4068e1:	add    al,0xc0
  4068e3:	pop    ss
  4068e4:	and    DWORD PTR [edi-0x50],eax
  4068e7:	xor    edi,DWORD PTR [ebp-0x45]
  4068ea:	xlat   BYTE PTR ds:[ebx]
  4068eb:	sbb    bl,0x72
  4068ee:	cmp    dl,cl
  4068f0:	(bad)  
  4068f1:	sub    BYTE PTR [ecx+0x5aa312dd],bh
  4068f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068f8:	add    eax,ecx
  4068fa:	in     eax,dx
  4068fb:	bswap  ebx
  4068fd:	loope  0x406943
  4068ff:	fnsave [esi-0x1efcba5]
  406905:	jnp    0x406940
  406907:	in     eax,0x6e
  406909:	scas   eax,DWORD PTR es:[edi]
  40690a:	data16 jae 0x40694e
  40690d:	pop    eax
  40690e:	or     eax,0xdba6fc89
  406913:	pop    ebx
  406914:	pop    ss
  406915:	aaa    
  406916:	pop    ebx
  406917:	mov    ds:0x201255bc,al
  40691c:	cs cli 
  40691e:	nop
  40691f:	out    0xf,eax
  406921:	inc    edi
  406922:	xor    dh,BYTE PTR [ebx-0x2cbbef0f]
  406928:	test   DWORD PTR [edi*8+0x62fab057],edi
  40692f:	(bad)  
  406930:	and    BYTE PTR [eax-0x43b29698],dh
  406936:	xor    DWORD PTR [ebp-0xef7f5e1],edi
  40693c:	or     BYTE PTR [ecx+0x1f861469],dl
  406942:	and    BYTE PTR [ebx+0x54b80ab3],dh
  406948:	retf   
  406949:	scas   eax,DWORD PTR es:[edi]
  40694a:	mov    dl,0xc4
  40694c:	cmp    eax,0x87798732
  406951:	dec    ecx
  406952:	jl     0x406927
  406954:	adc    eax,0xfebc9189
  406959:	jle    0x406943
  40695b:	dec    edx
  40695c:	cmc    
  40695d:	xor    BYTE PTR [edi-0x70],0x57
  406961:	adc    dh,BYTE PTR [eax-0x6b11f501]
  406967:	pop    eax
  406968:	lods   eax,DWORD PTR ds:[esi]
  406969:	pusha  
  40696a:	rcr    DWORD PTR [esi],cl
  40696c:	test   DWORD PTR [ebp-0x1],edi
  40696f:	xor    dl,ch
  406971:	mov    WORD PTR cs:[edx+0x4b],cs
  406975:	(bad)  
  406976:	dec    ebx
  406977:	mov    esi,0x4b3aeab8
  40697c:	pop    es
  40697d:	imul   ecx,DWORD PTR [ebp+0x394f14d1],0x25
  406984:	dec    ebp
  406985:	jb     0x4069bb
  406987:	dec    esi
  406988:	jnp    0x406915
  40698a:	out    dx,eax
  40698b:	push   ss
  40698c:	xchg   edi,eax
  40698d:	jmp    DWORD PTR [edx-0xb]
  406990:	inc    ebx
  406991:	repz jns 0x406958
  406994:	add    cl,BYTE PTR [ecx-0x10c63066]
  40699a:	pop    esi
  40699b:	int    0xd6
  40699d:	bound  edx,QWORD PTR [esi]
  40699f:	ror    BYTE PTR [ebp+0x1b],cl
  4069a2:	inc    edx
  4069a3:	mov    fs,edi
  4069a5:	lock (bad) 
  4069a7:	rol    BYTE PTR [ecx-0x44],1
  4069aa:	test   al,0xd8
  4069ac:	mov    BYTE PTR [esi+0x8658c01],dh
  4069b2:	mov    eax,esi
  4069b4:	in     eax,0x4d
  4069b6:	mov    ebp,0x8c1dcd5c
  4069bb:	push   0xd182d93a
  4069c0:	div    DWORD PTR [ebp*1+0xb408a11]
  4069c7:	(bad)  
  4069c8:	lds    esi,FWORD PTR [ebx-0x14]
  4069cb:	xchg   ebp,eax
  4069cc:	cmp    BYTE PTR [esi+0x1b],al
  4069cf:	cmp    DWORD PTR [ecx],ebx
  4069d1:	pop    ebp
  4069d2:	inc    esi
  4069d3:	mov    bh,0x5
  4069d5:	xlat   BYTE PTR ds:[ebx]
  4069d6:	pop    eax
  4069d7:	dec    ebp
  4069d8:	and    eax,0xfe0a811f
  4069dd:	stc    
  4069de:	add    al,0x33
  4069e0:	shl    esp,cl
  4069e2:	int    0x5f
  4069e4:	stc    
  4069e5:	aad    0x16
  4069e7:	and    bh,dh
  4069e9:	xchg   ebp,eax
  4069ea:	into   
  4069eb:	xchg   BYTE PTR [edx],dh
  4069ed:	shl    BYTE PTR [esi-0x77397b0f],0x37
  4069f4:	sub    ch,bl
  4069f6:	or     esi,edi
  4069f8:	repz mov es,WORD PTR gs:[edx-0x29bf2dde]
  406a00:	dec    ebp
  406a01:	xchg   edx,eax
  406a02:	mov    ah,0xba
  406a04:	or     BYTE PTR [edi],al
  406a06:	aaa    
  406a07:	sar    esp,0x8e
  406a0a:	(bad)  
  406a0b:	(bad)  
  406a0c:	jg     0x406a38
  406a0e:	out    0xe9,eax
  406a10:	dec    esp
  406a11:	jns    0x406a92
  406a13:	add    al,0xa
  406a15:	mov    eax,ds:0xdef80835
  406a1a:	fadd   DWORD PTR [ecx-0x3bf4d7d9]
  406a20:	gs jae 0x406a1e
  406a23:	mov    ds:0x2d8b7887,eax
  406a28:	dec    ebx
  406a29:	jmp    0x6d4c549f
  406a2e:	stc    
  406a2f:	(bad)  
  406a30:	arpl   WORD PTR [edx],dx
  406a32:	pop    ebp
  406a33:	out    0x87,al
  406a35:	stos   BYTE PTR es:[edi],al
  406a36:	mov    edi,0xe6d6cad5
  406a3b:	in     eax,dx
  406a3c:	lahf   
  406a3d:	add    ebp,eax
  406a3f:	clc    
  406a40:	add    eax,0x3c82baa6
  406a45:	pusha  
  406a46:	and    eax,0x4ab4bc1f
  406a4b:	jae    0x406a9d
  406a4d:	dec    edx
  406a4e:	mov    BYTE PTR [ebp-0x3d],0x8c
  406a52:	scas   al,BYTE PTR es:[edi]
  406a53:	cmp    bl,al
  406a55:	aad    0x32
  406a57:	jnp    0x4069f5
  406a59:	bound  eax,QWORD PTR [esi+0x6035f279]
  406a5f:	mov    al,0x35
  406a61:	pop    ds
  406a62:	jge    0x406a66
  406a64:	rol    BYTE PTR [edx],1
  406a66:	(bad)  
  406a67:	aaa    
  406a68:	repz mov bl,0x28
  406a6b:	nop
  406a6c:	sbb    al,0x47
  406a6e:	sahf   
  406a6f:	push   edx
  406a70:	jge    0x406a12
  406a72:	paddusw mm7,QWORD PTR [ebp-0x1c]
  406a76:	out    0xd0,eax
  406a78:	lds    esi,FWORD PTR [esi+0x784bec01]
  406a7e:	inc    eax
  406a7f:	loope  0x406a0e
  406a81:	cmp    BYTE PTR [eax+0x2049ba96],ch
  406a87:	jmp    0xa7d22ca4
  406a8c:	nop
  406a8d:	push   ebp
  406a8e:	dec    ecx
  406a8f:	enter  0x6139,0xd6
  406a93:	xor    bh,0x7f
  406a96:	pop    edx
  406a97:	mov    ebx,0x9d9689f8
  406a9c:	sub    DWORD PTR [ebx],esi
  406a9e:	sbb    BYTE PTR [ecx+0x1ca2b501],0xa4
  406aa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406aa6:	or     bh,ch
  406aa8:	xor    al,0x4f
  406aaa:	dec    ebx
  406aab:	imul   edx,DWORD PTR [ecx-0x38],0xd4e73411
  406ab2:	pop    edx
  406ab3:	xchg   BYTE PTR [ebp+eax*4+0x2747de67],bh
  406aba:	mov    cl,0x2d
  406abc:	cmp    bh,BYTE PTR [edx+0x6bd52560]
  406ac2:	loope  0x406a55
  406ac4:	cmc    
  406ac5:	imul   ebp,DWORD PTR [edx+0xc],0xfe40f504
  406acc:	dec    edi
  406acd:	inc    ebx
  406ace:	add    ch,BYTE PTR [edx]
  406ad0:	dec    esi
  406ad1:	test   DWORD PTR ds:0x431fd59a,eax
  406ad7:	loope  0x406aed
  406ad9:	pop    edx
  406ada:	inc    esi
  406adb:	std    
  406adc:	dec    ecx
  406add:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ade:	ror    DWORD PTR [ebp+ebx*2+0x28],cl
  406ae2:	out    dx,al
  406ae3:	test   ah,dl
  406ae5:	push   ss
  406ae6:	aam    0xd7
  406ae8:	pushf  
  406ae9:	sbb    cl,ah
  406aeb:	in     eax,0x68
  406aed:	fcom   QWORD PTR [edi-0x25]
  406af0:	dec    esp
  406af1:	pop    ss
  406af2:	inc    esp
  406af3:	push   esi
  406af4:	lods   al,BYTE PTR ds:[esi]
  406af5:	ds push 0x47
  406af8:	add    al,ch
  406afa:	dec    ebp
  406afb:	or     BYTE PTR [ebx],al
  406afd:	push   eax
  406afe:	adc    al,0x95
  406b00:	xor    BYTE PTR [eax-0x6d2b2bd0],ah
  406b06:	in     al,0x6a
  406b08:	mov    al,ds:0x9bf616f0
  406b0d:	dec    esp
  406b0e:	mov    al,ds:0x507e0f03
  406b13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b14:	mov    DWORD PTR [edi+ebp*2-0x48cd3d6a],ebx
  406b1b:	gs adc al,0xeb
  406b1e:	push   esp
  406b1f:	jae    0x406b91
  406b21:	les    eax,FWORD PTR [ebp+0x51]
  406b24:	mov    bx,0xb9cf
  406b28:	imul   esp,DWORD PTR fs:[edi],0xe52c9bcd
  406b2f:	pop    ebp
  406b30:	and    eax,edx
  406b32:	dec    ebp
  406b33:	ret    
  406b34:	js     0x406af0
  406b36:	xor    al,0xf3
  406b38:	pop    edx
  406b39:	dec    ebp
  406b3a:	xor    BYTE PTR [ebp-0x12],bh
  406b3d:	mov    cl,0xaf
  406b3f:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  406b41:	inc    ecx
  406b42:	pushf  
  406b43:	jg     0x406b60
  406b45:	pop    esi
  406b46:	xchg   edi,eax
  406b47:	xchg   ebp,eax
  406b48:	inc    edi
  406b49:	mov    eax,ds:0x658050be
  406b4e:	ss clc 
  406b50:	xor    BYTE PTR [ecx-0x57],0x55
  406b54:	stos   DWORD PTR es:[edi],eax
  406b55:	pop    edx
  406b56:	daa    
  406b57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b58:	jnp    0x406b0c
  406b5a:	icebp  
  406b5b:	das    
  406b5c:	xchg   esi,eax
  406b5d:	dec    ebx
  406b5e:	jae    0x406b70
  406b60:	adc    eax,0xb1f3b4a8
  406b65:	loop   0x406bd1
  406b67:	xchg   BYTE PTR [eax+0x44],cl
  406b6a:	out    dx,eax
  406b6b:	push   0xffffffd1
  406b6d:	daa    
  406b6e:	inc    edx
  406b6f:	out    dx,al
  406b70:	outs   dx,BYTE PTR ds:[esi]
  406b71:	out    0x62,eax
  406b73:	push   esi
  406b74:	fwait
  406b75:	mov    es,WORD PTR ds:[esi-0x718c5f22]
  406b7c:	sub    BYTE PTR [edx-0x5d],0xc0
  406b80:	leave  
  406b81:	(bad)  
  406b82:	aam    0x43
  406b84:	mov    eax,ds:0xe3c3255a
  406b89:	retf   0x7b8a
  406b8c:	sbb    al,0xfd
  406b8e:	call   0xab14:0x3850cdf3
  406b95:	sbb    ecx,DWORD PTR [edi-0x48]
  406b98:	add    DWORD PTR [eax+0x71f66226],edi
  406b9e:	xchg   BYTE PTR [edi+0x7e],ch
  406ba1:	sahf   
  406ba2:	xor    eax,0x4c68f0fa
  406ba7:	test   BYTE PTR [esp+ebp*2+0x6f02588e],bl
  406bae:	mov    ecx,0x4093050a
  406bb3:	pop    edi
  406bb4:	jo     0x406c2e
  406bb6:	push   ss
  406bb7:	(bad)  
  406bb8:	mov    bh,0x65
  406bba:	add    edi,DWORD PTR [esi-0xa]
  406bbd:	gs inc edi
  406bbf:	jmp    0x406b41
  406bc1:	xchg   esp,eax
  406bc2:	fmul   QWORD PTR [edx-0x35ab1fc8]
  406bc8:	mov    edx,0xe6bc12e7
  406bcd:	lods   al,BYTE PTR ds:[esi]
  406bce:	add    DWORD PTR [edi-0x489c1867],ebp
  406bd4:	cmc    
  406bd5:	mov    WORD PTR [edi+0x4f],ds
  406bd8:	adc    al,0xf8
  406bda:	pusha  
  406bdb:	xor    BYTE PTR [edi],bh
  406bdd:	sub    ch,0xa2
  406be0:	jbe    0x406c0f
  406be2:	push   0x68
  406be4:	inc    edx
  406be5:	jecxz  0x406bdb
  406be7:	out    dx,al
  406be8:	jnp    0x406b89
  406bea:	sub    eax,0xdea92525
  406bef:	and    bh,BYTE PTR [ecx+0x4e]
  406bf2:	push   ebp
  406bf3:	dec    eax
  406bf4:	pop    edi
  406bf5:	out    dx,al
  406bf6:	pop    esp
  406bf7:	iret   
  406bf8:	push   es
  406bf9:	mov    edi,0x83730f9b
  406bfe:	repnz or BYTE PTR [edi+0x38fcb046],bl
  406c05:	jne    0x406c33
  406c07:	mov    bl,0x9d
  406c09:	mov    ecx,0x3a7f117b
  406c0e:	lea    esp,[esi-0x643ba5f]
  406c14:	inc    ebx
  406c15:	sbb    BYTE PTR [edx],ah
  406c17:	ret    0x8fbf
  406c1a:	fadd   QWORD PTR [ebx+0x74]
  406c1d:	push   edi
  406c1e:	arpl   WORD PTR [edi],si
  406c20:	mov    eax,0xef32b8cb
  406c25:	add    al,0xee
  406c27:	push   ds
  406c28:	sub    dh,dl
  406c2a:	ja     0x406bda
  406c2c:	addr16 push cs
  406c2e:	aaa    
  406c2f:	lods   al,BYTE PTR ds:[esi]
  406c30:	ret    
  406c31:	mov    eax,0xb5dc90d6
  406c36:	sbb    al,0x6
  406c38:	xor    bl,BYTE PTR [eax+eiz*2]
  406c3b:	fimul  DWORD PTR [ecx]
  406c3d:	mov    cl,0xc8
  406c3f:	sbb    bl,BYTE PTR [edi]
  406c41:	pop    esi
  406c42:	mov    dl,0x45
  406c44:	inc    DWORD PTR [edx+0x5c]
  406c47:	sbb    eax,0xff49d6b
  406c4c:	sti    
  406c4d:	xchg   DWORD PTR ss:[eax+ebx*2+0x3a],ecx
  406c52:	or     eax,0x2f22fce1
  406c57:	cdq    
  406c58:	clc    
  406c59:	call   0x38e8a87c
  406c5e:	mov    dl,0x6a
  406c60:	out    dx,al
  406c61:	aas    
  406c62:	rcl    cl,0xd5
  406c65:	imul   ecx,DWORD PTR [edx]
  406c68:	add    BYTE PTR [ebx+0x6c],0x36
  406c6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c6d:	stos   DWORD PTR es:[edi],eax
  406c6e:	cmp    eax,0x9784cb1
  406c73:	pop    es
  406c74:	xor    BYTE PTR [edi-0x3ea2be8],ch
  406c7a:	sbb    al,0xd5
  406c7c:	cmp    al,0x1d
  406c7e:	retf   
  406c7f:	sbb    edx,DWORD PTR [edi-0x1e]
  406c82:	cmp    DWORD PTR [edi],eax
  406c84:	lods   eax,DWORD PTR ds:[esi]
  406c85:	pop    esp
  406c86:	out    dx,al
  406c87:	aam    0x1b
  406c89:	daa    
  406c8a:	push   esp
  406c8b:	fxch   st(6)
  406c8d:	mov    BYTE PTR [esi+eax*8+0x7],dl
  406c91:	jmp    0x406c39
  406c93:	repnz sar DWORD PTR ds:[edi+esi*2],cl
  406c98:	shr    BYTE PTR [edx-0x5415e179],cl
  406c9e:	or     eax,0xe9e39bf
  406ca3:	jmp    0xcc2:0xe2cc99dd
  406caa:	addr16 dec edi
  406cac:	mov    ebp,0xd482fff7
  406cb1:	mov    bh,0x36
  406cb3:	ror    BYTE PTR [edi],0x51
  406cb6:	nop
  406cb7:	cmp    cl,0xcb
  406cba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cbb:	push   cs
  406cbc:	sbb    dl,BYTE PTR [esi+eiz*8]
  406cbf:	je     0x406d21
  406cc1:	int3   
  406cc2:	or     eax,0x4023300a
  406cc7:	stos   BYTE PTR es:[edi],al
  406cc8:	mov    bl,al
  406cca:	push   ebp
  406ccb:	ins    DWORD PTR es:[edi],dx
  406ccc:	repnz pop ecx
  406cce:	mov    ebp,0xf84e79f1
  406cd3:	mov    bl,cl
  406cd5:	xchg   ecx,eax
  406cd6:	and    BYTE PTR [esi-0x65],dl
  406cd9:	pop    ss
  406cda:	jl     0x406cf0
  406cdc:	mov    ebp,0xf4bf8c32
  406ce1:	bound  esp,QWORD PTR [ecx+0x6e]
  406ce4:	icebp  
  406ce5:	xchg   edx,ebx
  406ce7:	add    al,0x49
  406ce9:	pop    esp
  406cea:	xor    eax,0x1c61eb47
  406cef:	retf   0x3dba
  406cf2:	imul   edx,DWORD PTR [ebp+0x39dc3a09],0xffffffb7
  406cf9:	mov    esp,0x8710435b
  406cfe:	xchg   ebx,eax
  406cff:	popa   
  406d00:	aad    0xb1
  406d02:	int    0x8e
  406d04:	mov    esp,0x63d4e093
  406d09:	test   eax,0x9395d664
  406d0e:	pop    ebx
  406d0f:	in     eax,0xc7
  406d11:	add    BYTE PTR [ebp+0x9],al
  406d14:	fistp  WORD PTR [ebp-0xe]
  406d17:	outs   dx,WORD PTR ds:[esi]
  406d19:	xlat   BYTE PTR ds:[ebx]
  406d1a:	test   eax,0x793400a7
  406d1f:	sti    
  406d20:	fucomp st(0)
  406d22:	mov    ds:0x158fdc,al
  406d27:	out    dx,al
  406d28:	push   edx
  406d29:	addr16 mov eax,?
  406d2c:	push   ebx
  406d2d:	add    BYTE PTR [ebp-0x2a],0xea
  406d31:	inc    ecx
  406d32:	cdq    
  406d33:	push   edx
  406d34:	cdq    
  406d35:	das    
  406d36:	ss dec ebp
  406d38:	inc    ebx
  406d39:	leave  
  406d3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d3b:	dec    ebx
  406d3c:	xchg   edi,eax
  406d3d:	mov    BYTE PTR [esi+ebx*4],al
  406d40:	ins    DWORD PTR es:[edi],dx
  406d41:	cdq    
  406d42:	push   edx
  406d43:	popa   
  406d44:	xor    DWORD PTR [eax-0x461ef2ba],0xffffffed
  406d4b:	sbb    ch,BYTE PTR [ebx-0x63a3ee77]
  406d51:	add    eax,0x638ec382
  406d56:	xlat   BYTE PTR ds:[ebx]
  406d57:	lahf   
  406d58:	lock retf 0xef40
  406d5c:	xlat   BYTE PTR ds:[ebx]
  406d5d:	or     eax,0xb66af96f
  406d62:	mov    edi,0xa00bf0bb
  406d67:	sbb    DWORD PTR [eax+0x4b],0x8b43c4e6
  406d6e:	fwait
  406d6f:	bound  esi,QWORD PTR [ebx+0x79]
  406d72:	xchg   esi,eax
  406d73:	das    
  406d74:	ins    BYTE PTR es:[edi],dx
  406d75:	into   
  406d76:	sbb    esi,DWORD PTR [edi+0x2a]
  406d79:	repz push edi
  406d7b:	xchg   DWORD PTR [edi],ebp
  406d7d:	add    al,0xd0
  406d7f:	pusha  
  406d80:	shl    bh,cl
  406d82:	add    DWORD PTR ds:0x9e3e7850,edx
  406d88:	test   BYTE PTR [edx],cl
  406d8a:	out    0x93,eax
  406d8c:	xchg   esp,eax
  406d8d:	sub    esp,DWORD PTR [eax]
  406d8f:	sbb    dh,BYTE PTR ds:0xb27883cb
  406d95:	rcl    BYTE PTR [ebx],cl
  406d97:	es mov esp,0xb29e022
  406d9d:	div    BYTE PTR [ecx+0x40]
  406da0:	push   ebx
  406da1:	adc    BYTE PTR [esi+0x21a491b6],bl
  406da7:	cmp    eax,0xbd70f794
  406dac:	sbb    esi,ebp
  406dae:	imul   esp,ebp,0xd5c835b5
  406db4:	call   0x46b1b6b2
  406db9:	inc    ecx
  406dba:	pop    esi
  406dbb:	adc    DWORD PTR [ecx+ebx*2+0x5b8041b7],ebp
  406dc2:	inc    ebx
  406dc3:	sbb    ebx,DWORD PTR [edi-0x2a]
  406dc6:	jge    0x406dbc
  406dc8:	dec    edi
  406dc9:	pop    ebp
  406dca:	(bad)  [ecx+0x79851288]
  406dd0:	xor    DWORD PTR [eax],ecx
  406dd2:	and    al,0xc0
  406dd4:	cmp    BYTE PTR [edi+0x7],0x2a
  406dd8:	inc    edx
  406dd9:	imul   esp,ebx,0xa8f9a8f1
  406ddf:	sbb    dl,BYTE PTR [eax+eax*4]
  406de2:	dec    esi
  406de3:	retf   
  406de4:	ds mov ah,0x6e
  406de7:	idiv   dl
  406de9:	cmp    eax,0xb6037acb
  406dee:	cmp    eax,0x2d567544
  406df3:	pop    eax
  406df4:	pusha  
  406df5:	jmp    0x406d88
  406df7:	or     dh,BYTE PTR [eax-0x7e6828be]
  406dfd:	stos   BYTE PTR es:[edi],al
  406dfe:	sub    eax,0x787cadba
  406e03:	loope  0x406e50
  406e05:	ds rol eax,cl
  406e08:	int    0xe8
  406e0a:	arpl   WORD PTR [esi],si
  406e0c:	pop    edx
  406e0d:	add    eax,DWORD PTR [esp+ecx*4]
  406e10:	mul    BYTE PTR [eax]
  406e12:	cmp    ah,BYTE PTR [edi+0x5c5ca6bb]
  406e18:	ret    
  406e19:	aad    0xf2
  406e1b:	loop   0x406e2b
  406e1d:	mov    edx,ecx
  406e1f:	and    eax,0xee09b6cc
  406e24:	pop    edi
  406e25:	xchg   ebp,eax
  406e26:	aad    0x53
  406e28:	dec    edx
  406e29:	jb     0x406dc3
  406e2b:	ja     0x406dfe
  406e2d:	mov    eax,ds:0x9777082c
  406e32:	repnz nop
  406e34:	shl    esp,0xc4
  406e37:	jp     0x406e4f
  406e39:	and    BYTE PTR [edi+0x1bb99df3],0x8
  406e40:	inc    esp
  406e41:	jns    0x406e20
  406e43:	rcl    BYTE PTR [esi],1
  406e45:	sub    bl,BYTE PTR [esi+0x32]
  406e48:	rcr    edi,1
  406e4a:	jle    0x406dfd
  406e4c:	mov    edi,0x2a84ef3
  406e51:	cmp    al,0xa2
  406e53:	test   BYTE PTR [edx+0x3243ca82],cl
  406e59:	pop    ds
  406e5a:	mov    eax,ds:0x98973a24
  406e5f:	test   eax,0xf6d6cf87
  406e64:	cmc    
  406e65:	push   es
  406e66:	adc    eax,0x816b0820
  406e6b:	add    eax,0x320ac798
  406e70:	dec    esp
  406e71:	pop    eax
  406e72:	fs ja  0x406e52
  406e75:	sbb    eax,0x4ef6a3ec
  406e7a:	xor    edx,DWORD PTR [edi-0x69f4bda]
  406e80:	dec    edx
  406e81:	or     ebp,DWORD PTR [edi+0x38e80641]
  406e87:	lahf   
  406e88:	out    0x2f,ax
  406e8b:	mov    ah,0x4c
  406e8d:	pushf  
  406e8e:	outs   dx,BYTE PTR ds:[esi]
  406e8f:	int3   
  406e90:	adc    eax,0x4c19f695
  406e95:	mov    ecx,0x75fd0072
  406e9a:	shr    BYTE PTR [ecx-0x1fa89aec],1
  406ea0:	push   cs
  406ea1:	sub    ch,BYTE PTR [esi+ebx*1]
  406ea4:	push   edx
  406ea5:	ins    DWORD PTR es:[edi],dx
  406ea6:	ds adc edi,ecx
  406ea9:	sub    dh,BYTE PTR [edi-0x5e]
  406eac:	in     al,0x30
  406eae:	push   cs
  406eaf:	imul   eax,esp,0xfffffff7
  406eb2:	(bad)
  406eb6:	cld    
  406eb7:	inc    edi
  406eb8:	je     0x406e94
  406eba:	add    esp,ebp
  406ebc:	gs or  eax,ebx
  406ebf:	sub    al,0x1a
  406ec1:	add    DWORD PTR [edx+0x47],ebp
  406ec4:	stos   DWORD PTR es:[edi],eax
  406ec5:	cli    
  406ec6:	and    BYTE PTR [ecx+eiz*1+0x61],cl
  406eca:	and    esp,DWORD PTR [eax]
  406ecc:	and    BYTE PTR [ebp+0x11],bl
  406ecf:	stos   BYTE PTR es:[edi],al
  406ed0:	mov    WORD PTR [eax-0x2],gs
  406ed3:	mov    cl,0x73
  406ed5:	cld    
  406ed6:	add    DWORD PTR [eax+0x6d],ebx
  406ed9:	add    DWORD PTR [esi+eiz*8],ebx
  406edc:	aaa    
  406edd:	retf   0x7900
  406ee0:	jle    0x406f04
  406ee2:	and    dl,BYTE PTR [edx+ecx*4+0x1c681704]
  406ee9:	or     esp,esp
  406eeb:	ffreep st(3)
  406eed:	clc    
  406eee:	xchg   ebp,eax
  406eef:	pushf  
  406ef0:	push   ecx
  406ef1:	jmp    0x58c5896a
  406ef6:	and    al,0x9
  406ef8:	call   0x45fadfdc
  406efd:	jae    0x406ec7
  406eff:	lahf   
  406f00:	jne    0x406f46
  406f02:	dec    eax
  406f03:	add    BYTE PTR ds:0x66cd076f,ah
  406f09:	jno    0x406e97
  406f0b:	push   ecx
  406f0c:	mov    al,0x56
  406f0e:	jno    0x406f23
  406f10:	stc    
  406f11:	inc    esp
  406f12:	aad    0x79
  406f14:	hlt    
  406f15:	gs xor edx,DWORD PTR es:[esp+eax*2+0x5]
  406f1b:	xchg   ecx,eax
  406f1c:	retf   
  406f1d:	mov    ah,0x4c
  406f1f:	movntq QWORD PTR [ebx-0x2c],mm5
  406f23:	xchg   ecx,eax
  406f24:	mov    al,ds:0x6329ee8a
  406f29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f2a:	xchg   ecx,eax
  406f2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f2c:	loop   0x406f0d
  406f2e:	cmp    cl,BYTE PTR [ecx+0x46842500]
  406f34:	lods   eax,DWORD PTR ds:[esi]
  406f35:	cmp    BYTE PTR [ebp-0x23],ch
  406f38:	fsubr  DWORD PTR [edx+0x7a9a4c71]
  406f3e:	jge    0x406ed8
  406f40:	stos   DWORD PTR es:[edi],eax
  406f41:	popf   
  406f42:	push   esi
  406f43:	aas    
  406f44:	loope  0x406f77
  406f46:	pushf  
  406f47:	or     eax,0x8b51f599
  406f4c:	mov    edi,0x397e8bbc
  406f51:	in     al,dx
  406f52:	inc    ebp
  406f53:	jp     0x406efb
  406f55:	mov    BYTE PTR [edx],ch
  406f57:	pop    esp
  406f58:	mov    bh,0x3b
  406f5a:	lock test BYTE PTR [ebp+edi*8-0x2d],0x4e
  406f60:	dec    ebx
  406f61:	sub    dh,BYTE PTR ds:0x139df635
  406f67:	mov    eax,0x2f0eb72d
  406f6c:	or     ch,BYTE PTR [ecx+ebp*4]
  406f6f:	sti    
  406f70:	fisubr DWORD PTR [edi+0x397d53d9]
  406f76:	mov    esi,0x36d124c9
  406f7b:	pop    ss
  406f7c:	dec    esp
  406f7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f7e:	inc    esi
  406f7f:	iret   
  406f80:	popf   
  406f81:	outs   dx,BYTE PTR ds:[esi]
  406f82:	jnp    0x406f95
  406f84:	ins    DWORD PTR es:[edi],dx
  406f85:	arpl   WORD PTR ds:0x24796d24,si
  406f8b:	adc    eax,0xe4b29701
  406f90:	lods   eax,DWORD PTR ds:[esi]
  406f91:	pop    es
  406f92:	xchg   ecx,eax
  406f93:	sbb    DWORD PTR [eax-0x26],ebp
  406f96:	outs   dx,DWORD PTR ds:[esi]
  406f97:	and    DWORD PTR [edx],eax
  406f99:	push   ebp
  406f9a:	mov    esp,DWORD PTR [edi+edx*2-0x58850e8d]
  406fa1:	ins    DWORD PTR es:[edi],dx
  406fa2:	rcl    BYTE PTR [ecx+0x14],cl
  406fa5:	add    edi,DWORD PTR [eax-0x44284b23]
  406fab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fac:	push   ecx
  406fad:	loope  0x406f4c
  406faf:	xchg   esp,edi
  406fb1:	arpl   WORD PTR [ebx],cx
  406fb3:	mov    ?,WORD PTR [ebp+edx*1+0x41]
  406fb7:	popa   
  406fb8:	retf   
  406fb9:	jp     0x406fd9
  406fbb:	pop    edi
  406fbc:	push   eax
  406fbd:	pop    edx
  406fbe:	or     cl,BYTE PTR [edx]
  406fc0:	mov    al,0xaf
  406fc2:	stos   BYTE PTR es:[edi],al
  406fc3:	cmc    
  406fc4:	dec    ecx
  406fc5:	dec    ebp
  406fc6:	ret    0xdf1d
  406fc9:	in     eax,0xf3
  406fcb:	pop    edi
  406fcc:	les    ebp,FWORD PTR [edx+0x54]
  406fcf:	std    
  406fd0:	xor    al,0x63
  406fd2:	mov    ds:0xbbaf1ef0,eax
  406fd7:	imul   edx,DWORD PTR [ebp+ebp*8+0x10],0xffffff96
  406fdc:	imul   eax,ebx,0x184f5e76
  406fe2:	sub    ecx,DWORD PTR [eax-0x741516b6]
  406fe8:	cmp    al,0xd1
  406fea:	mov    DWORD PTR [ebx+0x769d29d8],esi
  406ff0:	sbb    DWORD PTR gs:[eax+0x2a37ef9e],0x29270385
  406ffb:	js     0x406ff1
  406ffd:	push   esi
  406ffe:	push   ds
  406fff:	(bad)  
  407000:	mov    eax,ebp
  407002:	test   DWORD PTR [edi+eiz*4],esi
  407005:	lahf   
  407006:	std    
  407007:	loop   0x407078
  407009:	inc    esp
  40700a:	mov    edx,0x94445729
  40700f:	div    dl
  407011:	dec    ebx
  407012:	arpl   WORD PTR [edi-0x39208f41],ax
  407018:	psrlq  mm0,mm4
  40701b:	cli    
  40701c:	push   ebx
  40701d:	mov    edi,0x3732e54e
  407022:	push   ecx
  407023:	gs mov ebx,0xc4529744
  407029:	cmp    al,0xfb
  40702b:	dec    edx
  40702c:	or     BYTE PTR [ebp+0x0],ah
  40702f:	inc    edx
  407030:	ins    BYTE PTR es:[edi],dx
  407031:	cdq    
  407032:	bound  ecx,QWORD PTR [eax-0x2c]
  407035:	pop    edi
  407036:	enter  0x4d3b,0xc8
  40703a:	add    ah,BYTE PTR es:[ebx+0x3ffe1377]
  407041:	pop    ds
  407042:	push   edi
  407043:	sbb    ch,BYTE PTR [eax]
  407045:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407046:	dec    eax
  407047:	cdq    
  407048:	test   DWORD PTR [edi],edx
  40704a:	pop    edi
  40704b:	add    ah,dh
  40704d:	pop    ecx
  40704e:	aas    
  40704f:	inc    eax
  407050:	push   ebx
  407051:	mov    ds:0xc6338199,al
  407056:	inc    ebp
  407057:	push   edi
  407058:	push   ss
  407059:	shr    DWORD PTR [ebx-0x25e9597f],cl
  40705f:	cmp    BYTE PTR [ecx],bl
  407061:	es out dx,al
  407063:	xor    dl,BYTE PTR [esi]
  407065:	jbe    0x407065
  407067:	sub    cl,dl
  407069:	pop    ebp
  40706a:	mov    dh,BYTE PTR [ecx-0x57]
  40706d:	ss add al,0xfd
  407070:	mov    eax,ds:0x82985106
  407075:	lea    edx,[esi+edx*8]
  407078:	or     esi,ecx
  40707a:	(bad)  
  40707b:	out    dx,al
  40707c:	mov    al,ds:0x2b5b6e59
  407081:	fnstenv ds:0xa2ccad63
  407087:	popa   
  407088:	test   BYTE PTR [ecx-0x27552fa],0xa3
  40708f:	adc    ebp,0x285e568a
  407095:	inc    ebx
  407096:	aas    
  407097:	mov    bh,0x94
  407099:	mov    cx,0x399e
  40709d:	xchg   ch,bh
  40709f:	clc    
  4070a0:	ds jp  0x4070bb
  4070a3:	stos   BYTE PTR es:[edi],al
  4070a4:	xor    dl,bh
  4070a6:	test   DWORD PTR [ebx-0x37],0xd61e1881
  4070ad:	in     al,dx
  4070ae:	or     al,0xfb
  4070b0:	dec    esi
  4070b1:	popf   
  4070b2:	push   ss
  4070b3:	pop    edx
  4070b4:	pop    eax
  4070b5:	fldcw  WORD PTR [eax]
  4070b7:	mov    edx,0x8cbfa78c
  4070bc:	push   esp
  4070bd:	loope  0x40709a
  4070bf:	jmp    0x1366:0x364ed672
  4070c6:	inc    ebx
  4070c7:	test   eax,0x7f1c19c7
  4070cc:	lahf   
  4070cd:	jle    0x4070f8
  4070cf:	lock adc DWORD PTR gs:[edi],ecx
  4070d3:	cmpxchg DWORD PTR [ecx+0x7a3a5763],ebp
  4070da:	dec    ebp
  4070db:	outs   dx,BYTE PTR ds:[esi]
  4070dc:	dec    ecx
  4070dd:	int    0xc3
  4070df:	rcr    edi,cl
  4070e1:	sbb    al,0x61
  4070e3:	mov    bl,0x2c
  4070e5:	push   0xca086101
  4070ea:	xor    DWORD PTR [esi+0x42],esi
  4070ed:	or     eax,0xfa88a923
  4070f2:	loopne 0x4070b6
  4070f4:	sar    bh,cl
  4070f6:	mov    WORD PTR [ebp-0x326ba09a],ss
  4070fc:	sbb    DWORD PTR [edi+edi*4+0x11],ecx
  407100:	mov    ds:0x3a6c7eb2,eax
  407105:	fidivr WORD PTR [edi+0x4]
  407108:	jmp    0x4070e1
  40710a:	imul   DWORD PTR [ecx-0x60f98efc]
  407110:	mov    edi,0xfb13a5a4
  407115:	sbb    al,0xea
  407117:	iret   
  407118:	jmp    DWORD PTR ds:0xc9c62988
  40711e:	or     esi,DWORD PTR es:[ebp-0x40f0a3a5]
  407125:	mov    edx,0x71ba275c
  40712a:	jno    0x40710f
  40712c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40712d:	mov    ch,0xf3
  40712f:	popf   
  407130:	arpl   WORD PTR [edx],ax
  407132:	imul   esp,DWORD PTR [ebx-0x6bec5319],0x90ded59e
  40713c:	ss xor al,0xe8
  40713f:	inc    ecx
  407140:	inc    ecx
  407141:	fsincos 
  407143:	xor    bl,BYTE PTR [edx+edx*2-0x5fa3401c]
  40714a:	ins    BYTE PTR es:[edi],dx
  40714b:	pop    eax
  40714c:	out    0x6a,eax
  40714e:	push   0xe315d2f3
  407153:	mov    BYTE PTR [edi-0x7d36eafd],0x6a
  40715a:	out    0x57,eax
  40715c:	int3   
  40715d:	mov    edx,0xfe1ace0d
  407162:	ja     0x407154
  407164:	repnz xchg ebx,eax
  407166:	mov    dh,0x85
  407168:	adc    eax,0xa4909c66
  40716d:	fwait
  40716e:	inc    esi
  40716f:	(bad)  
  407170:	adc    dh,cl
  407172:	retf   0xa171
  407175:	xor    DWORD PTR [edx-0x1d73971c],ebx
  40717b:	push   esi
  40717c:	adc    al,BYTE PTR ss:[esi]
  40717f:	retf   0xc7b9
  407182:	adc    ch,0x67
  407185:	xchg   edi,eax
  407186:	adc    BYTE PTR [esi+0x40],bh
  407189:	sub    cl,dh
  40718b:	xor    bh,BYTE PTR [edx+0x6498e222]
  407191:	and    eax,0x7590f755
  407196:	add    al,0x54
  407198:	sbb    esi,DWORD PTR [esi-0x68d205c0]
  40719e:	fnstcw WORD PTR [esi+edx*8-0x2e]
  4071a2:	mov    al,ds:0x9510c145
  4071a7:	fiadd  DWORD PTR [esi+0x3bdcc6e1]
  4071ad:	jmp    0x5d004317
  4071b2:	mov    dh,0x24
  4071b4:	(bad)  
  4071b5:	imul   ebx,DWORD PTR [esi],0x4ad6ac3d
  4071bb:	fnstsw WORD PTR [ebx-0x44]
  4071be:	xor    esp,DWORD PTR [esi+0x123876bc]
  4071c4:	jb     0x4071a8
  4071c6:	ror    DWORD PTR [ebx+eax*1+0x2a],cl
  4071ca:	cmp    cl,BYTE PTR [ecx]
  4071cc:	adc    ah,BYTE PTR [edi]
  4071ce:	xor    eax,0xdc0af6bf
  4071d3:	(bad)  
  4071d4:	shl    DWORD PTR [ecx],1
  4071d6:	pushf  
  4071d7:	push   eax
  4071d8:	sti    
  4071d9:	ja     0x4071c3
  4071db:	jl     0x4071e8
  4071dd:	shr    ecx,cl
  4071df:	ret    
  4071e0:	adc    esp,ebx
  4071e2:	mov    esp,0x6b414deb
  4071e7:	pop    esp
  4071e8:	push   ebx
  4071e9:	dec    edx
  4071ea:	inc    edi
  4071eb:	push   0xf3ba7a4d
  4071f0:	mov    ecx,ss
  4071f2:	lds    edx,FWORD PTR [ebp+eax*2-0x8]
  4071f6:	sbb    DWORD PTR es:[eax-0x67],ebp
  4071fa:	cmp    BYTE PTR [ecx-0x43279721],ch
  407200:	dec    esi
  407201:	cli    
  407202:	jp     0x4071ad
  407204:	repz popw es
  407207:	aaa    
  407208:	pop    esi
  407209:	adc    cl,cl
  40720b:	sub    bh,ch
  40720d:	xchg   DWORD PTR [edi+eax*2-0x1b34364],ebx
  407214:	movs   WORD PTR es:[edi],WORD PTR ss:[esi]
  407217:	sub    DWORD PTR [esi-0x29c1cb22],0xf9361132
  407221:	sub    ebp,DWORD PTR [ecx+0x25]
  407224:	mov    eax,eax
  407226:	imul   edi,eax,0x6d06512e
  40722c:	lods   eax,DWORD PTR ds:[esi]
  40722d:	gs dec ecx
  407230:	or     al,0xf
  407232:	sbb    edi,DWORD PTR [edi-0x4835c479]
  407238:	xor    dl,cl
  40723a:	mov    ecx,0x6c703df7
  40723f:	sbb    al,0x39
  407241:	push   eax
  407242:	push   0xfffffff0
  407244:	pop    DWORD PTR [edi]
  407246:	dec    ecx
  407247:	cmp    BYTE PTR [ebp-0x59],bl
  40724a:	or     al,0xa
  40724c:	mov    ah,0x14
  40724e:	lock cmp bl,BYTE PTR [ebx-0x4af3d93b]
  407255:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407256:	mov    cs,WORD PTR [ebx+0x36963627]
  40725c:	test   al,0x2a
  40725e:	gs in  al,0x5e
  407261:	and    DWORD PTR [esi-0x7],0xeb80b28
  407268:	add    BYTE PTR [eax-0x16],bh
  40726b:	sub    DWORD PTR [eax+esi*2+0x18],edi
  40726f:	or     BYTE PTR [edi-0x1f],ch
  407272:	mov    ah,0xe9
  407274:	dec    eax
  407275:	out    dx,eax
  407276:	pop    ecx
  407277:	adc    DWORD PTR [ecx+eiz*1+0x55],edi
  40727b:	jge    0x40727a
  40727d:	retf   
  40727e:	inc    ebx
  40727f:	scas   eax,DWORD PTR es:[edi]
  407280:	ins    BYTE PTR es:[edi],dx
  407281:	inc    ecx
  407282:	sub    eax,0x36361c09
  407287:	retf   
  407288:	push   edx
  407289:	dec    esp
  40728a:	pop    ebp
  40728b:	add    edi,edi
  40728d:	xor    esi,ecx
  40728f:	mov    WORD PTR [ecx-0x37303737],?
  407295:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407296:	stos   DWORD PTR es:[edi],eax
  407297:	loop   0x40728d
  407299:	and    eax,0xe817db1d
  40729e:	pop    ecx
  40729f:	cdq    
  4072a0:	dec    eax
  4072a1:	push   ebx
  4072a2:	stc    
  4072a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072a4:	fild   DWORD PTR [ebp-0x5ff70217]
  4072aa:	mov    WORD PTR [esi+0x797d82e],?
  4072b0:	dec    ebx
  4072b1:	das    
  4072b2:	add    al,0x92
  4072b4:	jns    0x407250
  4072b6:	mov    ds:0x87a4f86a,eax
  4072bb:	ins    BYTE PTR es:[edi],dx
  4072bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072bd:	and    DWORD PTR ds:[ecx-0x50],edi
  4072c1:	push   edi
  4072c2:	sub    dl,BYTE PTR [ecx-0x72]
  4072c5:	test   eax,0x3b5c49ef
  4072ca:	jmp    0x407291
  4072cc:	cli    
  4072cd:	dec    eax
  4072ce:	cmp    ah,dh
  4072d0:	test   al,0x9f
  4072d2:	loop   0x4072d1
  4072d4:	out    0xef,eax
  4072d6:	mov    esi,0xeebe06ac
  4072db:	icebp  
  4072dc:	mov    eax,0xdbc3d5e0
  4072e1:	ret    0x19d2
  4072e4:	stos   DWORD PTR es:[edi],eax
  4072e5:	dec    esp
  4072e6:	jnp    0x407308
  4072e8:	xchg   esi,eax
  4072e9:	cs jp  0x4072b8
  4072ec:	out    0x9b,eax
  4072ee:	lock lds ecx,FWORD PTR [esi+0x6]
  4072f2:	mov    ecx,0x900562d
  4072f7:	sar    DWORD PTR [edi-0x53842dc2],cl
  4072fd:	pusha  
  4072fe:	in     eax,dx
  4072ff:	scas   al,BYTE PTR es:[edi]
  407300:	outs   dx,DWORD PTR ds:[esi]
  407301:	cld    
  407302:	addr16 cdq 
  407304:	inc    edi
  407305:	in     al,0xae
  407307:	push   eax
  407308:	jb     0x4072d4
  40730a:	das    
  40730b:	jle    0x4072d5
  40730d:	dec    eax
  40730e:	aam    0x6
  407310:	and    ch,dl
  407312:	mov    al,0x28
  407314:	lock pop edi
  407316:	mov    ds:0x5a569014,eax
  40731b:	into   
  40731c:	fcomp  DWORD PTR [ebx-0xb]
  40731f:	push   ss
  407320:	and    eax,0xd4d1a917
  407325:	sub    eax,0x6ba32aa8
  40732a:	(bad)  
  40732b:	xchg   edi,eax
  40732c:	jecxz  0x407382
  40732e:	rcl    BYTE PTR [ecx+0x189f9bae],1
  407334:	ret    0x92cd
  407337:	pusha  
  407338:	imul   ebx,eax,0xfeb82795
  40733e:	jmp    0x582814b9
  407343:	inc    esp
  407344:	jl     0x4072e5
  407346:	xchg   edx,eax
  407347:	dec    ebp
  407348:	adc    eax,0xf95f9779
  40734d:	test   eax,0xb8268cb1
  407352:	das    
  407353:	xor    ebp,DWORD PTR [eax+0x6c]
  407356:	cmp    ebx,DWORD PTR [eax-0x525f36dc]
  40735c:	push   edx
  40735d:	jp     0x407319
  40735f:	daa    
  407360:	icebp  
  407361:	hlt    
  407362:	aam    0x24
  407364:	mov    ds:0xeeec34fa,eax
  407369:	jae    0x407386
  40736b:	cld    
  40736c:	(bad)  
  40736d:	jnp    0x4073c6
  40736f:	test   eax,0x84ad3963
  407374:	cmp    ah,BYTE PTR [eax-0x5d]
  407377:	int    0x88
  407379:	or     edx,edi
  40737b:	jb     0x407363
  40737d:	mov    al,ds:0xd1468856
  407382:	gs push eax
  407384:	dec    esi
  407385:	jmp    0x5deff2f6
  40738a:	hlt    
  40738b:	sar    ecx,0x13
  40738e:	cmp    eax,0x46552dd2
  407393:	loopne 0x407380
  407395:	es cmp edi,ecx
  407398:	in     al,0xd5
  40739a:	popf   
  40739b:	cmp    BYTE PTR [edi-0x3292c69d],ch
  4073a1:	js     0x40735a
  4073a3:	pop    es
  4073a4:	enter  0xac06,0x42
  4073a8:	(bad)  
  4073aa:	jns    0x407376
  4073ac:	and    eax,0x1d5ca088
  4073b1:	data16 cmp al,0xc
  4073b4:	addr16 imul edx,ebx,0x8a387542
  4073bb:	retf   0xe5c2
  4073be:	pop    ss
  4073bf:	test   al,0x5d
  4073c1:	aaa    
  4073c2:	(bad)  
  4073c3:	or     ebp,edx
  4073c5:	fiadd  DWORD PTR [eax-0x40ceb349]
  4073cb:	out    0x59,eax
  4073cd:	mov    ah,0x3b
  4073cf:	push   ebx
  4073d0:	hlt    
  4073d1:	sub    ah,BYTE PTR [ebp+0xe]
  4073d4:	ss retf 0xfbf8
  4073d8:	jno    0x40735c
  4073da:	arpl   WORD PTR [ecx+eax*2-0x50],bx
  4073de:	fcmovnu st,st(6)
  4073e0:	cli    
  4073e1:	fwait
  4073e2:	sbb    esp,DWORD PTR [eax]
  4073e4:	push   ss
  4073e5:	pushf  
  4073e6:	addr16 sbb al,cl
  4073e9:	xchg   BYTE PTR [esi+0x1e],ah
  4073ec:	cdq    
  4073ed:	(bad)  
  4073ee:	stc    
  4073ef:	test   DWORD PTR [eax],edx
  4073f1:	aad    0xca
  4073f3:	adc    al,0x56
  4073f5:	mov    eax,0xc053bb9d
  4073fa:	ins    BYTE PTR es:[edi],dx
  4073fb:	(bad)  
  4073fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073fe:	dec    ebp
  4073ff:	in     eax,dx
  407400:	push   ebx
  407401:	fadd   QWORD PTR [ecx+0x45]
  407404:	lock call 0x14e54061
  40740a:	fild   DWORD PTR [ecx+0x3b]
  40740d:	push   eax
  40740e:	rol    BYTE PTR [esp+ebx*4-0x1e],1
  407412:	hlt    
  407413:	cs jecxz 0x40740d
  407416:	fist   DWORD PTR [ecx]
  407418:	jne    0x4073ae
  40741a:	jp     0x4073cf
  40741c:	lea    edx,[ebp+0x21]
  40741f:	mov    esi,ebp
  407421:	cmp    BYTE PTR ds:0xb287fba0,0xce
  407428:	dec    edx
  407429:	out    dx,al
  40742a:	imul   eax,DWORD PTR [eax-0x75eaa78f],0x5666cbb
  407434:	ins    BYTE PTR es:[edi],dx
  407435:	mov    esi,0x39ad58a2
  40743a:	cmp    BYTE PTR [ebp-0x34f7fb48],ah
  407440:	adc    bh,al
  407442:	sub    BYTE PTR [ebx+0x6e],dl
  407445:	push   ss
  407446:	enter  0x43bd,0xd6
  40744a:	ds xchg esi,eax
  40744c:	je     0x4074bd
  40744e:	and    eax,0x37e4d70e
  407453:	mov    esp,0x73a0fb4c
  407458:	icebp  
  407459:	popa   
  40745a:	or     eax,0xc706e3c6
  40745f:	xor    dh,ah
  407461:	sub    eax,0x3e0e38f4
  407466:	repnz lods eax,DWORD PTR ds:[esi]
  407468:	daa    
  407469:	in     al,0x62
  40746b:	cwde   
  40746c:	aad    0x8a
  40746e:	(bad)  
  40746f:	mov    ecx,0x58438a4e
  407474:	(bad)  
  407475:	push   eax
  407476:	push   ebx
  407477:	mov    ecx,0x9181e91a
  40747c:	dec    ecx
  40747d:	push   esp
  40747e:	dec    edi
  40747f:	(bad)  
  407480:	and    eax,0xe2c57d4
  407485:	(bad)  
  407487:	cmp    ah,0xa4
  40748a:	imul   edx,ebx,0xfb0535de
  407490:	push   ss
  407491:	pop    esi
  407492:	and    DWORD PTR [eax-0x2e778e35],edi
  407498:	cmp    DWORD PTR [edi+0x7c],ecx
  40749b:	ins    DWORD PTR es:[edi],dx
  40749c:	push   edi
  40749d:	ret    
  40749e:	mov    bl,0xf3
  4074a0:	or     ah,BYTE PTR [edi+0xbf1dd50]
  4074a6:	jmp    0xb93e:0xf9ff6bc1
  4074ad:	pop    es
  4074ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074af:	jns    0x4074d4
  4074b1:	xchg   esp,eax
  4074b2:	mov    bl,0xba
  4074b4:	data16 sbb ch,BYTE PTR [eax+0x2e2574ca]
  4074bb:	sbb    dl,BYTE PTR [eax]
  4074bd:	add    ebp,0x2c025a34
  4074c3:	push   ecx
  4074c4:	sbb    BYTE PTR [edi-0xdcdaad9],ch
  4074ca:	xor    bl,BYTE PTR [ecx]
  4074cc:	push   edi
  4074cd:	movhps xmm4,QWORD PTR [ecx-0x59]
  4074d1:	ins    DWORD PTR es:[edi],dx
  4074d2:	sti    
  4074d3:	test   eax,0x1b0435cc
  4074d8:	inc    esi
  4074d9:	push   0xc7428028
  4074de:	and    al,BYTE PTR [eax+edi*1]
  4074e1:	(bad)  
  4074e2:	xor    DWORD PTR [ebx-0x1992a33f],ecx
  4074e8:	mov    DWORD PTR [edi],esp
  4074ea:	mov    edx,0x292d7e4d
  4074ef:	pop    esp
  4074f0:	jae    0x4074ca
  4074f2:	not    DWORD PTR [eax]
  4074f4:	fxch   st(6)
  4074f6:	clc    
  4074f7:	cld    
  4074f8:	(bad)  
  4074f9:	loopne 0x407573
  4074fb:	add    al,0x74
  4074fd:	push   ebx
  4074fe:	int    0x38
  407500:	sub    eax,0x7194e322
  407505:	outs   dx,BYTE PTR ds:[esi]
  407506:	sub    eax,0x5daa7d2f
  40750b:	arpl   dx,si
  40750d:	popf   
  40750e:	dec    ecx
  40750f:	repz popf 
  407511:	in     eax,dx
  407512:	stos   DWORD PTR es:[edi],eax
  407513:	adc    ch,ah
  407515:	add    al,0x68
  407517:	inc    esi
  407518:	mov    ebp,0xbc9d1643
  40751d:	cli    
  40751e:	add    DWORD PTR [ecx+ecx*4-0x13ecca0a],0xb1ef3ed
  407529:	nop
  40752a:	xlat   BYTE PTR ds:[ebx]
  40752b:	sub    al,0x46
  40752d:	int3   
  40752e:	pusha  
  40752f:	jge    0x40751e
  407531:	jmp    0xad74:0x323254a4
  407538:	sti    
  407539:	cwde   
  40753a:	mov    ecx,DWORD PTR [edi-0x1]
  40753d:	shl    BYTE PTR [edi],1
  40753f:	and    ah,BYTE PTR [edi+0x5b]
  407542:	xor    al,BYTE PTR [edi]
  407544:	xor    eax,esi
  407546:	int    0x6c
  407548:	push   ecx
  407549:	into   
  40754a:	xchg   edx,eax
  40754b:	test   cl,cl
  40754d:	ret    0x394f
  407550:	ins    BYTE PTR es:[edi],dx
  407551:	jle    0x4075b2
  407553:	inc    esp
  407554:	in     eax,dx
  407555:	in     eax,dx
  407556:	sub    ah,bh
  407558:	jge    0x4075be
  40755a:	fwait
  40755b:	js     0x4074ea
  40755d:	popa   
  40755e:	sub    BYTE PTR [eax],0x4b
  407561:	mov    al,ds:0x5a44e7fc
  407566:	fwait
  407567:	jmp    0x407577
  407569:	ret    0x6bc
  40756c:	or     ch,BYTE PTR ds:[edx]
  40756f:	inc    edi
  407570:	popa   
  407571:	aad    0xb5
  407573:	sbb    BYTE PTR [ecx-0x1918ba82],al
  407579:	mov    esp,0xbc11f504
  40757e:	out    dx,eax
  40757f:	fmul   st,st(4)
  407581:	fdivr  st(1),st
  407583:	imul   ecx,DWORD PTR [edi-0x5aaccc97],0xffffffb9
  40758a:	or     DWORD PTR [ebp-0x127c7817],esi
  407590:	(bad)  
  407592:	lahf   
  407593:	lea    edi,[ecx+0x60]
  407596:	cmp    al,0x19
  407598:	cmp    al,0xbe
  40759a:	mov    dh,BYTE PTR [edi-0x51]
  40759d:	lea    ebx,[esi+0x73]
  4075a0:	push   ebp
  4075a1:	sub    eax,0xadb1dbaf
  4075a6:	jbe    0x40759a
  4075a8:	rcr    DWORD PTR [esi-0x31],cl
  4075ab:	xor    al,0xb2
  4075ad:	xchg   edx,eax
  4075ae:	pop    edx
  4075af:	mov    ebp,0x15ab9a3d
  4075b4:	(bad)  
  4075b5:	sub    al,0x5
  4075b7:	cld    
  4075b8:	cmc    
  4075b9:	leave  
  4075ba:	ror    DWORD PTR ds:0x1dc85a68,cl
  4075c0:	mov    dh,al
  4075c2:	sub    bl,bh
  4075c4:	dec    edx
  4075c5:	xchg   edi,eax
  4075c6:	test   eax,0x229d7b12
  4075cc:	cli    
  4075cd:	(bad)  
  4075ce:	pop    esp
  4075cf:	fisub  DWORD PTR [esi+0x3551a18b]
  4075d5:	xor    eax,0xff29d078
  4075da:	pop    es
  4075db:	in     eax,dx
  4075dc:	rcr    bh,0x3c
  4075df:	xor    bh,BYTE PTR [ebp+0x22]
  4075e2:	fdivr  DWORD PTR [eax+0x34e2b37f]
  4075e8:	jge    0x4075dc
  4075ea:	or     eax,0x54059bb5
  4075ef:	out    dx,eax
  4075f0:	pop    ebp
  4075f1:	retf   
  4075f2:	push   ss
  4075f3:	xchg   ecx,eax
  4075f4:	imul   ebp
  4075f6:	mov    ds:0x5baf4865,eax
  4075fb:	sbb    eax,0xb667d01
  407600:	or     ch,dl
  407602:	push   ds
  407603:	data16 add al,0x7e
  407606:	fisub  DWORD PTR [esi]
  407608:	popa   
  407609:	hlt    
  40760a:	jmp    0x40767f
  40760c:	(bad)  
  40760d:	call   0x77a3:0xd817fb
  407614:	aaa    
  407615:	dec    ebp
  407616:	xchg   edx,eax
  407617:	xlat   BYTE PTR ds:[ebx]
  407618:	fistp  DWORD PTR [eax]
  40761a:	paddusw mm2,QWORD PTR [ebx]
  40761d:	mov    ebx,0xa7bbcc9
  407622:	in     al,0x77
  407624:	mov    ah,0xf
  407626:	test   DWORD PTR [ebx+eiz*8+0x4fb95651],ebx
  40762d:	ror    BYTE PTR [edi+eax*2-0x4e],0xe0
  407632:	in     al,0x86
  407634:	fcomp  QWORD PTR [eax-0x1f]
  407637:	pop    ecx
  407638:	jo     0x4075ca
  40763a:	add    ch,BYTE PTR [esi-0xf6cc14a]
  407640:	leave  
  407641:	and    al,0xe1
  407643:	test   BYTE PTR [esi],ch
  407645:	imul   ecx,DWORD PTR [edx],0xe
  407648:	mov    bl,0x33
  40764a:	xor    ah,BYTE PTR [edi+0x19bd9bc9]
  407650:	mov    edi,0x6f656896
  407655:	ins    DWORD PTR es:[edi],dx
  407656:	cwde   
  407657:	adc    ebp,DWORD PTR [esi+0x39]
  40765a:	adc    edi,0x70
  40765d:	pop    ss
  40765e:	inc    eax
  40765f:	adc    eax,0x8e1eaa42
  407664:	or     BYTE PTR [ebx],al
  407666:	sbb    al,0x42
  407668:	(bad)  
  407669:	sahf   
  40766a:	push   esp
  40766b:	mov    DWORD PTR [edi+ecx*4+0x56bbaa32],esi
  407672:	adc    al,0xbc
  407674:	sbb    al,0x78
  407677:	dec    ebp
  407678:	dec    esi
  407679:	outs   dx,DWORD PTR ds:[esi]
  40767a:	sbb    BYTE PTR [esi+0x31ce9963],bh
  407680:	fidivr WORD PTR [edx+0x49]
  407683:	adc    edx,eax
  407685:	adc    ch,BYTE PTR [ecx+0x4e]
  407688:	push   esi
  407689:	daa    
  40768a:	cmp    al,0x3a
  40768c:	jg     0x40765c
  40768e:	or     eax,0xc0324410
  407693:	les    ebp,FWORD PTR [eax]
  407695:	jae    0x4076c8
  407697:	(bad)  
  407698:	push   eax
  407699:	jo     0x40763e
  40769b:	gs stos DWORD PTR es:[edi],eax
  40769d:	push   edi
  40769e:	stos   BYTE PTR es:[edi],al
  40769f:	pop    esi
  4076a0:	gs push es
  4076a2:	pusha  
  4076a3:	aas    
  4076a4:	sbb    DWORD PTR [edx],ecx
  4076a6:	and    ebp,DWORD PTR [ebx+ebp*8-0x3b1c403a]
  4076ad:	frstor [ecx]
  4076af:	test   DWORD PTR [esp+edi*1-0x1e708d41],eax
  4076b6:	shl    BYTE PTR [esi+0x5daf06c3],0x7b
  4076bd:	clc    
  4076be:	adc    DWORD PTR [edi+0x2b],edx
  4076c1:	cmp    eax,0xb8b19f23
  4076c6:	jnp    0x407693
  4076c8:	cli    
  4076c9:	test   eax,0xaf7a6200
  4076ce:	inc    ebx
  4076cf:	sbb    ebx,ebx
  4076d1:	dec    esi
  4076d2:	ins    BYTE PTR es:[edi],dx
  4076d3:	ja     0x4076d3
  4076d5:	add    esi,0x6a9266f4
  4076db:	xchg   esi,eax
  4076dc:	mov    esi,0x7dac441b
  4076e1:	push   es
  4076e2:	xchg   edx,eax
  4076e3:	sbb    esi,edx
  4076e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076e6:	add    DWORD PTR [edx+0x7d],0xffffffe6
  4076ea:	es and al,0x3d
  4076ed:	sbb    eax,DWORD PTR [ecx+0x6164f042]
  4076f3:	xchg   esp,eax
  4076f4:	hlt    
  4076f5:	repnz mov ah,0xec
  4076f8:	jno    0x40773b
  4076fa:	mov    ecx,0x544bbb14
  4076ff:	stos   BYTE PTR es:[edi],al
  407700:	pop    ecx
  407701:	add    BYTE PTR [ebx-0x1d],ch
  407704:	bt     DWORD PTR [edx-0x39],edx
  407708:	scas   eax,DWORD PTR es:[edi]
  407709:	adc    edi,DWORD PTR [ecx-0x36]
  40770c:	xchg   esi,eax
  40770d:	xor    bl,ch
  40770f:	fbstp  TBYTE PTR [eax]
  407711:	idiv   BYTE PTR [ecx-0x57]
  407714:	push   0xffffffd6
  407716:	(bad)  
  407717:	jae    0x4076bb
  407719:	mov    edi,0x25f7bb0c
  40771e:	mov    esi,gs
  407720:	inc    edi
  407721:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407722:	jmp    0xae580843
  407727:	and    al,ah
  407729:	inc    edx
  40772a:	cli    
  40772b:	mov    esi,DWORD PTR [esi+0x67b626b8]
  407731:	sub    eax,0x73c79801
  407736:	iret   
  407737:	addr16 dec ebx
  407739:	aaa    
  40773a:	in     eax,0x62
  40773c:	fs push ds
  40773e:	pop    edi
  40773f:	call   FWORD PTR [edi]
  407741:	push   0xed41b273
  407746:	xor    eax,DWORD PTR [esi+0x72]
  407749:	je     0x407791
  40774b:	retf   0xe869
  40774e:	xchg   ebp,eax
  40774f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407750:	adc    esi,DWORD PTR [ecx]
  407752:	push   ss
  407753:	add    ebx,ebx
  407755:	test   eax,0x19453a46
  40775a:	inc    eax
  40775b:	sub    DWORD PTR [edx],esi
  40775d:	push   ds
  40775e:	xlat   BYTE PTR ds:[ebx]
  40775f:	xchg   edx,eax
  407760:	int3   
  407761:	cmp    al,BYTE PTR [edi+0x17]
  407764:	fisubr DWORD PTR cs:[esp+edi*2]
  407768:	pop    ebp
  407769:	mov    bh,0x93
  40776b:	mov    esp,0x605a49b6
  407770:	push   0xffffffca
  407772:	xchg   ebx,eax
  407773:	xchg   ecx,eax
  407774:	sbb    ch,BYTE PTR [esi+0x6b215c99]
  40777a:	adc    edx,DWORD PTR [eax-0x6f]
  40777d:	sub    eax,0x5e37a549
  407782:	in     eax,dx
  407783:	js     0x4077fa
  407785:	add    DWORD PTR [eax],ebx
  407787:	dec    esp
  407788:	adc    bl,al
  40778a:	scas   al,BYTE PTR es:[edi]
  40778b:	aad    0xae
  40778d:	and    eax,0x6186a44f
  407792:	sar    eax,0x11
  407795:	cs cmp al,0x46
  407798:	mov    esp,0xd29686f0
  40779d:	rcr    BYTE PTR ds:0xedc87cfb,cl
  4077a3:	popa   
  4077a4:	call   0x1ef2:0x263ddaea
  4077ab:	and    ah,ah
  4077ad:	jle    0x407808
  4077af:	fisubr WORD PTR [edx-0x35]
  4077b2:	jmp    0xee0c:0xeca7649b
  4077b9:	lock xlat BYTE PTR ds:[ebx]
  4077bb:	pop    ecx
  4077bc:	loope  0x4077eb
  4077be:	loopne 0x4077ed
  4077c0:	xchg   ebx,edx
  4077c2:	fdivr  DWORD PTR [edi-0x3867ce2b]
  4077c8:	in     al,dx
  4077c9:	adc    DWORD PTR [ecx+edx*8+0x25],0xffffffdd
  4077ce:	mov    esp,0x383d917d
  4077d3:	xchg   ecx,eax
  4077d4:	popfw  
  4077d6:	out    dx,eax
  4077d7:	or     esi,DWORD PTR [edi-0x821d2da]
  4077dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077de:	sub    bl,cl
  4077e0:	and    bl,ch
  4077e2:	inc    esi
  4077e3:	and    eax,0x518d182c
  4077e8:	leave  
  4077e9:	fstp   DWORD PTR [edi-0x568a205c]
  4077ef:	mov    ds:0x9820cd2c,eax
  4077f4:	push   ss
  4077f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077f6:	mov    eax,ds:0xbb04da81
  4077fb:	xor    ch,BYTE PTR [ebx-0x254ea5cf]
  407801:	stc    
  407802:	pop    ecx
  407803:	and    dh,BYTE PTR [edx-0x31]
  407806:	dec    edx
  407807:	jl     0x4077e9
  407809:	pop    esi
  40780a:	inc    ecx
  40780b:	and    DWORD PTR [edx+ecx*1-0x2a169c4],ebp
  407812:	shl    edx,cl
  407814:	cwde   
  407815:	imul   edi,edi,0xffffffa4
  407818:	iret   
  407819:	adc    eax,0x104099c9
  40781e:	jg     0x4077e6
  407820:	xor    DWORD PTR [edi+0x18],ebp
  407823:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407824:	in     eax,0x76
  407826:	pushf  
  407827:	test   al,0x6e
  407829:	(bad)  
  40782a:	ins    BYTE PTR es:[edi],dx
  40782b:	push   ebp
  40782c:	shl    DWORD PTR [ebp+0x962db96],cl
  407832:	mov    cl,0x7a
  407834:	adc    al,0x4
  407836:	push   0x9d421f37
  40783b:	fidivr DWORD PTR [esi+0x9]
  40783e:	sub    dl,BYTE PTR [eax-0x3b23f83]
  407844:	xchg   ebx,eax
  407845:	push   ebp
  407846:	push   ss
  407847:	xchg   ebp,eax
  407848:	pop    edx
  407849:	fild   DWORD PTR [ebx-0x6e]
  40784c:	inc    esp
  40784d:	es fwait
  40784f:	or     dl,BYTE PTR [eax-0x276a38eb]
  407855:	int3   
  407856:	sub    eax,0xd8d12aa7
  40785b:	pop    edx
  40785c:	test   eax,0x70043eeb
  407861:	adc    al,0x49
  407863:	into   
  407864:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407865:	test   edx,0xf8607514
  40786b:	jbe    0x407830
  40786d:	jecxz  0x4078ed
  40786f:	das    
  407870:	xor    ch,al
  407872:	sbb    ebp,0xc0634381
  407878:	sub    dl,0xee
  40787b:	repnz adc edx,ecx
  40787e:	add    esp,edi
  407880:	pop    ds
  407881:	in     eax,0xcb
  407883:	dec    ebx
  407884:	repz dec DWORD PTR [edx]
  407887:	in     eax,dx
  407888:	jne    0x4078ab
  40788a:	shr    BYTE PTR [edi],cl
  40788c:	push   dx
  40788e:	nop
  40788f:	add    al,0x3e
  407891:	jae    0x4078b7
  407893:	pop    esi
  407894:	mov    ecx,0xd27c4143
  407899:	cmp    eax,0xe415732b
  40789e:	aam    0xae
  4078a0:	test   al,0x96
  4078a2:	jb     0x4078be
  4078a4:	and    BYTE PTR [ebx-0x7b4faa0b],0xca
  4078ab:	cmp    esi,DWORD PTR [edx-0x73]
  4078ae:	mov    bl,0xdd
  4078b0:	sbb    BYTE PTR [ebx-0x7e],dh
  4078b3:	(bad)
  4078b6:	mov    eax,ds:0xd4e6544c
  4078bb:	xchg   BYTE PTR [esi-0x3e],al
  4078be:	or     BYTE PTR [eax],ch
  4078c0:	and    BYTE PTR [eax+0x56],0xa6
  4078c4:	das    
  4078c5:	add    edx,DWORD PTR [edi]
  4078c7:	loopne 0x40787d
  4078c9:	inc    edx
  4078ca:	(bad)  
  4078cb:	jo     0x4078f4
  4078cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078ce:	dec    esp
  4078cf:	push   ecx
  4078d0:	stc    
  4078d1:	loope  0x4078b1
  4078d3:	adc    al,0x16
  4078d5:	push   ecx
  4078d6:	shl    BYTE PTR [eax],cl
  4078d8:	xchg   DWORD PTR [edi],esi
  4078da:	hlt    
  4078db:	cmp    cl,BYTE PTR ds:0x9dbfaab4
  4078e1:	(bad)  
  4078e3:	test   BYTE PTR [edx],ah
  4078e5:	inc    edi
  4078e6:	and    DWORD PTR [edi+0x2d],0xdd586d46
  4078ed:	aad    0xf
  4078ef:	inc    esp
  4078f0:	pop    ebp
  4078f1:	push   ss
  4078f2:	sbb    ch,bh
  4078f4:	sahf   
  4078f5:	or     al,0x12
  4078f7:	mov    esi,0xa3a7800f
  4078fc:	ins    DWORD PTR es:[edi],dx
  4078fd:	push   ebp
  4078fe:	dec    ebp
  4078ff:	xchg   edi,eax
  407900:	ret    0x41e3
  407903:	bound  esp,QWORD PTR [esi]
  407905:	fidiv  WORD PTR [ebp-0x151f6bf8]
  40790b:	sbb    dh,BYTE PTR [edi-0x69]
  40790e:	stos   DWORD PTR es:[edi],eax
  40790f:	(bad)  
  407910:	xor    esp,DWORD PTR [esi+eax*1-0x33]
  407914:	mov    ecx,0x219d0037
  407919:	ja     0x407909
  40791b:	jo     0x40797e
  40791d:	nop
  40791e:	nop
  40791f:	and    DWORD PTR [ecx-0x4f],eax
  407922:	dec    ebx
  407923:	xchg   esi,eax
  407924:	iret   
  407925:	xor    ebp,DWORD PTR gs:[esi-0x39]
  407929:	fisub  DWORD PTR [edx]
  40792b:	mov    eax,ds:0xb834be75
  407930:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407931:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407932:	mov    bh,0x60
  407934:	in     eax,0xfc
  407936:	and    ebx,DWORD PTR [ebp+0x29]
  407939:	out    dx,ax
  40793b:	fs sbb eax,0x397ce43
  407941:	or     al,0x93
  407943:	lahf   
  407944:	fild   DWORD PTR [esi]
  407946:	rcr    BYTE PTR [ebx-0x42d0ce67],cl
  40794c:	(bad)  
  40794d:	mov    WORD PTR [edx-0x574a928f],?
  407953:	jns    0x407964
  407955:	imul   eax,DWORD PTR [ecx-0x55],0xffffffed
  407959:	push   0x25
  40795b:	push   edx
  40795c:	cs (bad) 
  40795e:	adc    ebp,DWORD PTR [edx+0x78bd954c]
  407964:	sub    eax,0x8b459289
  407969:	jp     0x407945
  40796b:	sbb    al,0xa6
  40796d:	dec    ebx
  40796e:	pop    ecx
  40796f:	push   edi
  407970:	add    esp,DWORD PTR [eax]
  407972:	pop    ecx
  407973:	xor    DWORD PTR ss:[esi+ebx*8],edi
  407977:	mov    eax,ds:0xe2583f78
  40797c:	leave  
  40797d:	lock add BYTE PTR [edx+0x5c],cl
  407981:	and    DWORD PTR [edx],ebp
  407983:	(bad)  
  407984:	stos   DWORD PTR es:[edi],eax
  407985:	or     BYTE PTR [edi-0x30e6f6f8],dl
  40798b:	icebp  
  40798c:	cmp    esp,DWORD PTR [edx]
  40798e:	loope  0x407976
  407990:	pop    esi
  407991:	jmp    FWORD PTR [ebp+ebp*1+0x54]
  407995:	dec    edx
  407996:	jb     0x4079d4
  407998:	jmp    0x5978567c
  40799d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40799e:	push   cs
  40799f:	adc    DWORD PTR [ebp+0x41],esp
  4079a2:	push   es
  4079a3:	ror    BYTE PTR [ecx+0x5f584c9],0xfd
  4079aa:	cmp    ch,BYTE PTR [eax-0x10]
  4079ad:	cmp    DWORD PTR [esi-0xe],esp
  4079b0:	lods   eax,DWORD PTR ds:[esi]
  4079b1:	call   0x6188506a
  4079b6:	sbb    al,0xcf
  4079b8:	sbb    eax,DWORD PTR [eax-0x7d502065]
  4079be:	pop    edi
  4079bf:	jo     0x4079ce
  4079c1:	mov    ebp,0x6f2ba3c2
  4079c6:	stos   BYTE PTR es:[edi],al
  4079c7:	xor    DWORD PTR [edi],edx
  4079c9:	dec    esp
  4079ca:	lahf   
  4079cb:	xchg   ebp,eax
  4079cc:	leave  
  4079cd:	dec    esi
  4079ce:	(bad)  
  4079cf:	cmc    
  4079d0:	iret   
  4079d1:	lods   eax,DWORD PTR ds:[esi]
  4079d2:	fnstenv [edx]
  4079d4:	outs   dx,BYTE PTR ds:[esi]
  4079d5:	jl     0x40797a
  4079d7:	pop    ss
  4079d8:	repz sub eax,0xbefc03f4
  4079de:	icebp  
  4079df:	xor    al,0xd2
  4079e1:	stc    
  4079e2:	push   esi
  4079e3:	push   ss
  4079e4:	mov    ?,esi
  4079e6:	jns    0x4079dc
  4079e8:	pop    esp
  4079e9:	test   eax,0x9dd27fc7
  4079ee:	push   cs
  4079ef:	call   0x3569:0xb1d83da3
  4079f6:	xor    al,0x50
  4079f8:	jbe    0x407a10
  4079fa:	je     0x407a17
  4079fc:	mov    bl,0xaf
  4079fe:	mov    esp,ebp
  407a00:	(bad)  
  407a01:	jno    0x4079a5
  407a03:	mov    WORD PTR ds:0xdf84725f,?
  407a09:	mov    esp,0x943f2411
  407a0e:	mov    DWORD PTR [esp+eax*8],0xcff0cbbe
  407a15:	fwait
  407a16:	mov    DWORD PTR [ebx+0x70],ebp
  407a19:	enter  0xec22,0x5f
  407a1d:	pop    esp
  407a1e:	fldenvw [ebp-0x5676ba1b]
  407a25:	sbb    al,0xee
  407a27:	or     DWORD PTR [ecx+0x6a],0x2f
  407a2b:	pop    es
  407a2c:	push   edi
  407a2d:	cld    
  407a2e:	jg     0x407a91
  407a30:	cdq    
  407a31:	or     BYTE PTR ds:0x7bd7ee64,0xe4
  407a38:	pop    ebp
  407a39:	mov    ecx,0x147eb984
  407a3e:	iret   
  407a3f:	clc    
  407a40:	xchg   edx,eax
  407a41:	dec    edi
  407a42:	jo     0x407a12
  407a44:	int3   
  407a45:	lods   al,BYTE PTR ds:[esi]
  407a46:	fcomp  DWORD PTR [ebp-0x77]
  407a49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a4a:	imul   eax,DWORD PTR [esi-0x5ef6c14c],0x3f5b5be3
  407a54:	xchg   edi,eax
  407a55:	sbb    eax,0x524f50f
  407a5a:	loop   0x407acf
  407a5c:	jo     0x407a73
  407a5e:	ror    BYTE PTR [ecx-0x63],1
  407a61:	push   ss
  407a62:	aad    0x69
  407a64:	cld    
  407a65:	loope  0x407ab0
  407a67:	imul   ecx,DWORD PTR [ebx+0x2b8cf64b],0x48c84afb
  407a71:	adc    eax,0x23eb864c
  407a76:	xor    eax,0xa1546048
  407a7b:	das    
  407a7c:	imul   edi,DWORD PTR [ebp+ebp*2+0x5c4332b2],0x14
  407a84:	jmp    0x631c486
  407a89:	dec    esp
  407a8a:	popa   
  407a8b:	xchg   esi,eax
  407a8c:	push   0xb58e1b9f
  407a91:	js     0x407a98
  407a93:	xchg   edi,eax
  407a94:	out    dx,al
  407a95:	dec    edx
  407a96:	das    
  407a97:	call   0xc95f:0xa892fb52
  407a9e:	imul   ebx,DWORD PTR [ecx+eiz*4+0x21],0xe2f1cad9
  407aa6:	inc    ebx
  407aa7:	ins    DWORD PTR es:[edi],dx
  407aa8:	test   ecx,0x2f0fedc7
  407aae:	ja     0x407a85
  407ab0:	daa    
  407ab1:	jnp    0x407a85
  407ab3:	outs   dx,BYTE PTR ds:[esi]
  407ab4:	sbb    BYTE PTR [ebx],0x70
  407ab7:	dec    ebp
  407ab8:	mov    cl,0xc4
  407aba:	pop    esi
  407abb:	data16 jg 0x407ad2
  407abe:	gs je  0x407a90
  407ac1:	gs pop edx
  407ac3:	into   
  407ac4:	push   es
  407ac5:	out    dx,al
  407ac6:	ins    BYTE PTR es:[edi],dx
  407ac7:	xor    eax,DWORD PTR ss:[ebx-0x69]
  407acb:	mov    eax,0xcb80c40f
  407ad0:	shr    DWORD PTR [esi+ebx*4+0x17b0c822],0x44
  407ad8:	push   ebx
  407ad9:	adc    DWORD PTR [ecx],esp
  407adb:	sbb    BYTE PTR [eax-0x49],al
  407ade:	mov    ah,0xaa
  407ae0:	add    al,0x4d
  407ae2:	push   eax
  407ae3:	mov    bh,0xb1
  407ae5:	shr    BYTE PTR [edi-0x258034d4],1
  407aeb:	sar    BYTE PTR [edi],cl
  407aed:	imul   BYTE PTR [ecx+0x9]
  407af0:	in     eax,dx
  407af1:	cmp    ecx,eax
  407af3:	rcr    DWORD PTR [ebx-0x47],0x67
  407af7:	jae    0x407b4d
  407af9:	inc    eax
  407afa:	pop    ebx
  407afb:	sbb    al,0x7b
  407afd:	pusha  
  407afe:	dec    edi
  407aff:	int    0x7e
  407b01:	out    dx,al
  407b02:	inc    edx
  407b03:	std    
  407b04:	xor    eax,0xb8c2a496
  407b09:	jmp    0x10f2:0xb9b6928
  407b10:	push   edi
  407b11:	shl    DWORD PTR [esi],1
  407b13:	jae    0x407ad0
  407b15:	sbb    eax,DWORD PTR [edi-0x3002b670]
  407b1b:	nop
  407b1c:	ja     0x407adf
  407b1e:	jg     0x407b65
  407b20:	jmp    0x71bf8547
  407b25:	adc    BYTE PTR [edi-0x4425389b],al
  407b2b:	xor    DWORD PTR [edi-0x1954aca4],edi
  407b31:	int3   
  407b32:	in     al,0x87
  407b34:	inc    edx
  407b35:	mov    WORD PTR [esi+edi*2+0x79],?
  407b39:	push   esp
  407b3a:	mov    ecx,0xc4f71493
  407b3f:	into   
  407b40:	xchg   DWORD PTR [esi],eax
  407b42:	sahf   
  407b43:	fdivp  st(2),st
  407b45:	or     BYTE PTR [ecx-0x15],al
  407b48:	and    cl,BYTE PTR [edx+0x6cd9f3c8]
  407b4e:	mov    eax,ds:0x9281288a
  407b53:	dec    edi
  407b54:	in     eax,dx
  407b55:	sbb    al,0x36
  407b57:	pop    es
  407b58:	inc    eax
  407b59:	jmp    0x65cb:0x576c9b8d
  407b60:	xor    DWORD PTR ds:0x16bc1048,edx
  407b66:	jmp    0x830cb532
  407b6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b6c:	cmp    DWORD PTR [ecx+esi*4],edi
  407b6f:	xchg   ebx,eax
  407b70:	outs   dx,DWORD PTR ds:[esi]
  407b71:	ins    BYTE PTR es:[edi],dx
  407b72:	je     0x407bbe
  407b74:	add    esp,eax
  407b76:	pop    edi
  407b77:	shl    DWORD PTR [esi],1
  407b79:	sub    eax,0x65219063
  407b7e:	(bad)  
  407b7f:	addr16 lock dec esi
  407b82:	in     eax,dx
  407b83:	(bad)  
  407b84:	xor    al,0x6d
  407b86:	fcomip st,st(0)
  407b88:	jle    0x407c04
  407b8a:	test   DWORD PTR [edx+0x39],eax
  407b8d:	lock cmp al,0xfb
  407b90:	nop
  407b91:	push   cs
  407b92:	jl     0x407bdf
  407b94:	mov    dl,0x5b
  407b96:	pop    ss
  407b97:	jmp    0x407bc3
  407b99:	mov    dh,0xd1
  407b9b:	int3   
  407b9c:	or     DWORD PTR [esi],ecx
  407b9e:	rol    cl,0x27
  407ba1:	out    dx,eax
  407ba2:	pop    eax
  407ba3:	dec    esi
  407ba4:	stos   DWORD PTR es:[edi],eax
  407ba5:	xchg   esi,eax
  407ba6:	sti    
  407ba7:	xor    dl,al
  407ba9:	push   ecx
  407baa:	fiadd  DWORD PTR [ecx+0x460d65e7]
  407bb0:	xor    edi,DWORD PTR [esi-0x7ff8e9f9]
  407bb6:	or     BYTE PTR [edx],al
  407bb8:	fild   DWORD PTR [edi+0x66]
  407bbb:	leave  
  407bbc:	push   esi
  407bbd:	sar    DWORD PTR [eax],1
  407bbf:	add    eax,0xc9d6a811
  407bc4:	xchg   esp,eax
  407bc5:	pop    ecx
  407bc6:	std    
  407bc7:	push   ss
  407bc8:	inc    esi
  407bc9:	fcomp  DWORD PTR [edi]
  407bcb:	dec    esi
  407bcc:	xchg   ecx,eax
  407bcd:	push   ds
  407bce:	scas   eax,DWORD PTR es:[edi]
  407bcf:	mov    ds:0x8a241669,eax
  407bd4:	call   0xdf73:0xcb58912d
  407bdb:	in     eax,0x42
  407bdd:	stos   DWORD PTR es:[edi],eax
  407bde:	repnz push cs
  407be0:	xor    edx,ebp
  407be2:	cmp    BYTE PTR [ebp+0x3e],cl
  407be5:	repnz bound esp,QWORD PTR [edx+ebx*4]
  407be9:	push   esi
  407bea:	retf   0x1fe7
  407bed:	lds    eax,FWORD PTR [ecx-0x6]
  407bf0:	ficomp WORD PTR [esp+esi*4+0x78]
  407bf4:	inc    ebx
  407bf5:	aas    
  407bf6:	inc    edi
  407bf7:	aas    
  407bf8:	jecxz  0x407bd9
  407bfa:	cli    
  407bfb:	out    dx,al
  407bfc:	inc    esp
  407bfd:	pusha  
  407bfe:	dec    ecx
  407bff:	fs ins BYTE PTR es:[edi],dx
  407c01:	pop    eax
  407c02:	ins    DWORD PTR es:[edi],dx
  407c03:	cmc    
  407c04:	cwde   
  407c05:	hlt    
  407c06:	push   eax
  407c07:	inc    esp
  407c08:	pusha  
  407c09:	jecxz  0x407c22
  407c0b:	movnti DWORD PTR ds:0x1694b223,ebp
  407c12:	mov    bh,0x63
  407c14:	outs   dx,DWORD PTR ds:[esi]
  407c15:	shr    ch,0x7b
  407c18:	gs mov ecx,0x605574ec
  407c1e:	xlat   BYTE PTR ds:[ebx]
  407c1f:	cmp    DWORD PTR [ebp+0xe],esp
  407c22:	es scas al,BYTE PTR es:[edi]
  407c24:	add    DWORD PTR [ebx+0x57],edi
  407c27:	ja     0x407c11
  407c29:	cdq    
  407c2a:	in     eax,0x48
  407c2c:	call   0xd2f9:0x2298c3eb
  407c33:	sub    al,0xa7
  407c35:	stos   BYTE PTR es:[edi],al
  407c36:	cld    
  407c37:	dec    esp
  407c38:	repz push ecx
  407c3a:	or     al,0xa5
  407c3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c3d:	jnp    0x407ca9
  407c3f:	pop    edi
  407c40:	xor    esp,DWORD PTR [eax]
  407c42:	sub    al,0x8a
  407c44:	push   edx
  407c45:	sbb    BYTE PTR [ecx],al
  407c47:	mov    ecx,0xbacf9223
  407c4c:	lods   eax,DWORD PTR ds:[esi]
  407c4d:	fisttp WORD PTR [eax+0x50fed9ba]
  407c53:	lock rcl ecx,0xc4
  407c57:	dec    edx
  407c58:	or     al,0xff
  407c5a:	sub    bh,cl
  407c5c:	rcl    DWORD PTR [edx+edx*1],cl
  407c5f:	xchg   edx,eax
  407c60:	mov    esi,DWORD PTR [eax+ecx*2+0x54]
  407c64:	mov    ecx,0xb1e96796
  407c69:	adc    al,bl
  407c6b:	or     BYTE PTR [ebx-0x70],bl
  407c6e:	sti    
  407c6f:	lock sub al,0x78
  407c72:	pop    ss
  407c73:	outs   dx,DWORD PTR ds:[esi]
  407c74:	dec    ebp
  407c75:	push   es
  407c76:	stc    
  407c77:	std    
  407c78:	jns    0x407c4a
  407c7a:	sub    al,0x64
  407c7c:	cmp    eax,0xcbad873e
  407c81:	pop    edi
  407c82:	mov    ecx,0xf9036c62
  407c87:	xchg   BYTE PTR [edi-0x12],bh
  407c8a:	(bad)  
  407c8b:	test   eax,0xc58d30fa
  407c90:	das    
  407c91:	xor    eax,0x91f2c47f
  407c96:	mov    ecx,0x858348a3
  407c9b:	sbb    eax,0xbd64b625
  407ca0:	leave  
  407ca1:	lods   eax,DWORD PTR ds:[esi]
  407ca2:	mov    esi,edx
  407ca4:	pop    edi
  407ca5:	inc    eax
  407ca6:	int    0x0
  407ca8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ca9:	xchg   edi,eax
  407caa:	cmp    DWORD PTR [edx+0x50],esp
  407cad:	retf   
  407cae:	pop    ss
  407caf:	push   esp
  407cb0:	sbb    bl,BYTE PTR [esi+0x43]
  407cb3:	imul   esp,ebx,0xffffff91
  407cb6:	scas   al,BYTE PTR es:[edi]
  407cb7:	in     al,dx
  407cb8:	je     0x407cd1
  407cba:	call   0xa1c3:0x7b7300be
  407cc1:	call   FWORD PTR [esi+eiz*2+0x1a]
  407cc5:	aaa    
  407cc6:	dec    edx
  407cc7:	push   0x4a
  407cc9:	mov    cl,BYTE PTR [esi-0x7d]
  407ccc:	adc    DWORD PTR es:[edx+ebp*4-0x50d8b12d],esp
  407cd4:	imul   ecx,DWORD PTR [esi],0xffffffbd
  407cd7:	sbb    cl,BYTE PTR [ebx]
  407cd9:	dec    ecx
  407cda:	inc    edx
  407cdb:	xchg   DWORD PTR [ecx+esi*2+0x2f],eax
  407cdf:	dec    eax
  407ce0:	mov    bh,0x24
  407ce2:	scas   eax,DWORD PTR es:[edi]
  407ce3:	scas   al,BYTE PTR es:[edi]
  407ce4:	rcr    cl,0xbd
  407ce7:	push   0x6d756db9
  407cec:	lahf   
  407ced:	or     DWORD PTR [ebp-0x71b67466],edi
  407cf3:	inc    ebp
  407cf4:	fmul   st(3),st
  407cf6:	push   eax
  407cf7:	or     DWORD PTR ds:0x38f04e4f,ebp
  407cfd:	lds    esi,FWORD PTR [eax]
  407cff:	jnp    0x407d11
  407d01:	or     bl,BYTE PTR [ebp+0x551d236f]
  407d07:	cmp    eax,DWORD PTR [ecx+0xc]
  407d0a:	and    ah,ch
  407d0c:	lods   al,BYTE PTR ds:[esi]
  407d0d:	sub    dl,BYTE PTR [edx-0x55f65ddf]
  407d13:	(bad)  
  407d14:	push   edx
  407d15:	add    bh,BYTE PTR [edi+esi*1-0x58]
  407d19:	sahf   
  407d1a:	rcl    BYTE PTR [ebx-0x5c],0xb4
  407d1e:	ss dec ecx
  407d20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d21:	imul   edi,DWORD PTR [edx],0x86cefaca
  407d27:	repz sub BYTE PTR [edx],dl
  407d2a:	or     cl,ah
  407d2c:	sbb    bl,BYTE PTR [esi+0x6a]
  407d2f:	loopne 0x407d75
  407d31:	jnp    0x407d3f
  407d33:	xchg   esp,eax
  407d34:	or     ebp,DWORD PTR [eax+0x4f]
  407d37:	jae    0x407ce9
  407d39:	mov    dl,0x79
  407d3b:	in     eax,dx
  407d3c:	(bad)  
  407d3d:	aaa    
  407d3e:	lods   al,BYTE PTR ds:[esi]
  407d3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d40:	push   ds
  407d41:	cli    
  407d42:	(bad)  
  407d43:	popa   
  407d44:	pop    DWORD PTR [edi+0x7e]
  407d47:	popf   
  407d48:	add    edi,DWORD PTR [esi+edi*8+0x5e6a561f]
  407d4f:	push   edx
  407d50:	fsubr  QWORD PTR [ecx]
  407d52:	sbb    ebx,DWORD PTR [esi]
  407d54:	cmp    BYTE PTR [ebp-0x62],0x5f
  407d58:	fs (bad) 
  407d5a:	and    DWORD PTR [eax+0x16],ebx
  407d5d:	leave  
  407d5e:	sub    bl,BYTE PTR [ebp-0x56]
  407d61:	cmp    al,BYTE PTR [ecx-0x3e489c5a]
  407d67:	and    eax,0x3de8dce9
  407d6c:	lahf   
  407d6d:	cwde   
  407d6e:	arpl   WORD PTR [edx+0x5d],ax
  407d71:	dec    eax
  407d72:	cmp    DWORD PTR [eax+0x4a],eax
  407d75:	loop   0x407de0
  407d77:	add    al,0x9a
  407d79:	pop    esp
  407d7a:	in     al,0x0
  407d7c:	jmp    0xe9ec61f0
  407d81:	push   ebp
  407d82:	jmp    0x407ddd
  407d84:	outs   dx,BYTE PTR ds:[esi]
  407d85:	cmc    
  407d86:	jnp    0x407d42
  407d88:	or     esp,DWORD PTR [esi+0xa]
  407d8b:	in     al,dx
  407d8c:	es mov bl,0x32
  407d8f:	adc    dl,BYTE PTR [esi-0x439d8b73]
  407d95:	jecxz  0x407ddf
  407d97:	(bad)  
  407d98:	call   0xbd7bfab9
  407d9d:	add    al,0x84
  407d9f:	add    DWORD PTR [ecx],eax
  407da1:	lods   al,BYTE PTR ds:[esi]
  407da2:	mov    ebx,0x4c091aae
  407da7:	into   
  407da8:	push   ecx
  407da9:	pop    ebp
  407daa:	jle    0x407dfa
  407dac:	mov    bl,BYTE PTR [esi-0x7d523a14]
  407db2:	mov    al,ds:0x22c1b6e3
  407db7:	outs   dx,BYTE PTR ds:[esi]
  407db8:	jae    0x407de8
  407dba:	ins    DWORD PTR es:[edi],dx
  407dbb:	pop    ebp
  407dbc:	addr16 ss add eax,0xb09d6ae8
  407dc3:	push   cs
  407dc4:	mov    ebx,0xf8457d21
  407dc9:	test   eax,0xf8ae7e51
  407dce:	mov    ch,BYTE PTR [ebp+0x55]
  407dd1:	add    DWORD PTR [edx-0x16],0x1a
  407dd5:	js     0x407db9
  407dd7:	inc    esi
  407dd8:	loope  0x407da0
  407dda:	scas   al,BYTE PTR es:[edi]
  407ddb:	rol    BYTE PTR [edi],1
  407ddd:	int    0xda
  407ddf:	add    eax,0xbc619412
  407de4:	push   eax
  407de5:	dec    esp
  407de6:	or     edi,DWORD PTR [edi-0x7b]
  407de9:	cmp    ch,BYTE PTR [bx+di-0x6492]
  407dee:	ins    DWORD PTR es:[edi],dx
  407def:	cdq    
  407df0:	xchg   DWORD PTR [ebx+edi*8+0x50707338],ebx
  407df7:	jg     0x407e57
  407df9:	dec    esi
  407dfa:	sub    eax,0xf6204de2
  407dff:	(bad)  
  407e00:	dec    edi
  407e01:	inc    eax
  407e02:	shl    DWORD PTR [esi],cl
  407e04:	xchg   ebp,eax
  407e05:	adc    bh,BYTE PTR [esi+0x1196bb24]
  407e0b:	jnp    0x407de5
  407e0d:	lea    eax,[esi]
  407e0f:	dec    eax
  407e10:	add    esi,edx
  407e12:	shr    edx,cl
  407e14:	ds jge 0x407e59
  407e17:	xchg   edi,eax
  407e18:	dec    ebx
  407e19:	call   0xba2b:0xeac1a792
  407e20:	or     eax,0x7df73f2d
  407e25:	fst    DWORD PTR [eax+esi*4+0x74]
  407e29:	in     eax,dx
  407e2a:	inc    esp
  407e2b:	out    dx,al
  407e2c:	xor    bh,BYTE PTR [edx+0x7b68ac7e]
  407e32:	pop    es
  407e33:	adc    dh,dl
  407e35:	and    al,0x3a
  407e37:	test   eax,0xeaca1ba7
  407e3c:	mov    esi,0x5303f501
  407e41:	dec    edx
  407e42:	inc    ecx
  407e43:	xchg   edx,eax
  407e44:	popa   
  407e45:	inc    esp
  407e46:	mov    ah,BYTE PTR [ecx+ecx*4]
  407e49:	rcl    BYTE PTR [ecx+0x34472417],0x46
  407e50:	cli    
  407e51:	fidiv  DWORD PTR [ecx-0xe]
  407e54:	out    dx,al
  407e55:	(bad)  
  407e56:	jmp    0x407ea9
  407e58:	adc    ch,bh
  407e5a:	mov    edx,0x218cc416
  407e5f:	xor    al,0x19
  407e61:	push   0xffffffe6
  407e63:	aaa    
  407e64:	inc    ebp
  407e65:	scas   eax,DWORD PTR es:[edi]
  407e66:	stos   BYTE PTR es:[edi],al
  407e67:	pop    edx
  407e68:	and    esi,ecx
  407e6a:	push   esi
  407e6b:	push   edi
  407e6c:	retf   
  407e6d:	or     DWORD PTR [ecx+0x2a],ecx
  407e70:	in     al,0x30
  407e72:	xchg   edx,eax
  407e73:	jg     0x407e2b
  407e75:	xchg   ebx,eax
  407e76:	cs fst st(2)
  407e79:	add    DWORD PTR [esi],ecx
  407e7b:	and    ebp,DWORD PTR [ebp-0x347abd7]
  407e81:	aad    0x6f
  407e83:	std    
  407e84:	fisub  DWORD PTR [edx+0x5a]
  407e87:	and    dh,ah
  407e89:	mov    bl,0xe0
  407e8b:	int3   
  407e8c:	dec    esi
  407e8d:	(bad)  
  407e8f:	scas   eax,DWORD PTR es:[edi]
  407e90:	stos   DWORD PTR es:[edi],eax
  407e91:	fnstsw WORD PTR [edx]
  407e93:	inc    ecx
  407e94:	out    0x78,eax
  407e96:	popf   
  407e97:	xor    BYTE PTR [esi],bl
  407e99:	out    0x8a,al
  407e9b:	mov    cl,dh
  407e9d:	repz pop esp
  407e9f:	mov    ebp,0x3f3f298d
  407ea4:	js     0x407e47
  407ea6:	pushf  
  407ea7:	sti    
  407ea8:	xchg   esp,eax
  407ea9:	pop    es
  407eaa:	xchg   edx,eax
  407eab:	std    
  407eac:	adc    al,ch
  407eae:	mov    ds:0xf9fdb842,eax
  407eb3:	cdq    
  407eb4:	sub    eax,0xeb670c75
  407eb9:	pop    esi
  407eba:	outs   dx,BYTE PTR ds:[esi]
  407ebb:	inc    edi
  407ebc:	dec    edi
  407ebd:	pop    esi
  407ebe:	pop    es
  407ebf:	dec    edx
  407ec0:	mov    esp,0xa273bf89
  407ec5:	xor    DWORD PTR [edx],edx
  407ec7:	(bad)  
  407ec8:	loop   0x407e84
  407eca:	mov    eax,0x7324682d
  407ecf:	ins    BYTE PTR es:[edi],dx
  407ed0:	fdivr  st(4),st
  407ed2:	push   esi
  407ed3:	enter  0xd2a9,0x25
  407ed7:	and    al,0x9a
  407ed9:	and    BYTE PTR ds:0x11d03b86,al
  407edf:	ins    DWORD PTR es:[edi],dx
  407ee0:	inc    ebp
  407ee1:	dec    edi
  407ee2:	les    esp,FWORD PTR [ecx-0x21]
  407ee5:	xor    eax,0xb87f725c
  407eea:	fldcw  WORD PTR [ecx]
  407eec:	sub    dh,ch
  407eee:	ja     0x407f4f
  407ef0:	aaa    
  407ef1:	mov    ebp,0x3a800523
  407ef6:	(bad)  
  407ef7:	or     eax,0x3413d80f
  407efc:	outs   dx,DWORD PTR ds:[esi]
  407efd:	push   edx
  407efe:	mov    ds:0xb62ade56,eax
  407f03:	push   ds
  407f04:	mov    esi,0x39a7143c
  407f09:	mov    ch,0xf2
  407f0b:	std    
  407f0c:	pop    ss
  407f0d:	outs   dx,DWORD PTR ds:[esi]
  407f0e:	and    ah,BYTE PTR [si+0x109c]
  407f13:	push   esi
  407f14:	bound  esi,QWORD PTR [eax-0x2]
  407f17:	test   BYTE PTR [ecx],dl
  407f19:	mov    al,0xa5
  407f1b:	std    
  407f1c:	jge    0x407ea1
  407f1e:	stc    
  407f1f:	call   0x5d7eec51
  407f24:	xor    ch,dh
  407f26:	int    0xf0
  407f28:	rcl    ch,0x6e
  407f2b:	sbb    al,0x9b
  407f2d:	(bad)  
  407f2e:	jmp    0x231a:0xec8ee545
  407f35:	cld    
  407f36:	mov    cl,0x4c
  407f38:	data16 sti 
  407f3a:	iret   
  407f3b:	cmp    DWORD PTR [eax+0x52],eax
  407f3e:	ins    DWORD PTR es:[edi],dx
  407f3f:	fs test eax,0xdd2a0e56
  407f45:	mul    al
  407f47:	pop    ebx
  407f48:	and    eax,0x1d83874e
  407f4d:	mov    ds,WORD PTR [edi+0x50d1051a]
  407f53:	mov    eax,ds:0xbe59838e
  407f58:	mov    bl,BYTE PTR [eax+0x37]
  407f5b:	mov    al,ds:0x52660827
  407f60:	mov    esi,eax
  407f62:	dec    ecx
  407f63:	stc    
  407f64:	pavgw  mm2,QWORD PTR [ecx+0x180c7667]
  407f6b:	ret    0x3cd3
  407f6e:	mov    eax,DWORD PTR [ecx-0x7c]
  407f71:	ret    0xedfe
  407f74:	call   0xb0f49b9e
  407f79:	jge    0x407f94
  407f7b:	(bad)
  407f7f:	cmp    DWORD PTR [eax],edi
  407f81:	stos   BYTE PTR es:[edi],al
  407f82:	nop
  407f83:	popf   
  407f84:	gs repnz cmps DWORD PTR es:[esi],DWORD PTR es:[edi]
  407f88:	and    dh,0x18
  407f8b:	mov    esi,0x6aa97555
  407f90:	inc    eax
  407f91:	cs add al,0x51
  407f94:	fisub  DWORD PTR ds:0xb23b5d1f
  407f9a:	in     al,0xd6
  407f9c:	pop    ebp
  407f9d:	outs   dx,BYTE PTR ds:[esi]
  407f9e:	dec    eax
  407f9f:	aaa    
  407fa0:	test   al,0x4a
  407fa2:	mov    ds:0x9e19d233,al
  407fa7:	push   edi
  407fa8:	les    esp,FWORD PTR [ebx]
  407faa:	cmp    ebp,DWORD PTR [edi+0x53]
  407fad:	in     eax,0xd8
  407faf:	jmp    0xef83:0xe25f5577
  407fb6:	xchg   DWORD PTR [ebp+0x29],ebx
  407fb9:	adc    BYTE PTR [esp+ebx*2-0x1f],0x8d
  407fbe:	(bad)
  407fc1:	add    DWORD PTR [esi],0x2bdcd3cb
  407fc7:	popf   
  407fc8:	mov    DWORD PTR [ebp-0x2e],ebx
  407fcb:	scas   eax,DWORD PTR es:[edi]
  407fcc:	adc    eax,0xdd08d4c6
  407fd1:	pushf  
  407fd2:	lock mov cs,WORD PTR [edi]
  407fd5:	push   ecx
  407fd6:	in     al,dx
  407fd7:	test   BYTE PTR [edi-0x34],0x46
  407fdb:	adc    ecx,edi
  407fdd:	xlat   BYTE PTR ds:[ebx]
  407fde:	pop    edx
  407fdf:	push   es
  407fe0:	and    esi,DWORD PTR gs:0xa05af7e3
  407fe7:	fdivr  QWORD PTR [ebx+0x2a7e2fbb]
  407fed:	je     0x407f8e
  407fef:	stos   DWORD PTR es:[edi],eax
  407ff0:	scas   eax,DWORD PTR es:[edi]
  407ff1:	lds    ebx,FWORD PTR [edi+0x2fedbf9d]
  407ff7:	add    DWORD PTR [edi],eax
  407ff9:	push   eax
  407ffa:	add    BYTE PTR [eax-0x42],dl
  407ffd:	bound  eax,QWORD PTR [edi+0x74a7ca35]
  408003:	pop    eax
  408004:	fisttp WORD PTR [ebx-0x5f]
  408007:	addr16 mov edx,0x4708bb31
  40800d:	lahf   
  40800e:	in     al,dx
  40800f:	jecxz  0x407fb8
  408011:	sub    dl,BYTE PTR [ebp+0x3d]
  408014:	dec    esp
  408015:	or     eax,0x877487d0
  40801a:	jmp    0x62f6:0x60230689
  408021:	xor    BYTE PTR [ebp+0x24e50fc7],0xe2
  408028:	jecxz  0x40800e
  40802a:	or     BYTE PTR [edi-0x7d4de029],bh
  408030:	nop
  408031:	mov    al,0xc3
  408033:	xor    bl,BYTE PTR [edx+0x6375469e]
  408039:	sar    ah,1
  40803b:	pop    esi
  40803c:	retf   
  40803d:	mov    bl,0x4e
  40803f:	(bad)  
  408040:	jge    0x4080a9
  408042:	shr    DWORD PTR [edx+0x2b],1
  408045:	pushf  
  408046:	pop    edi
  408047:	and    al,0x31
  408049:	in     al,dx
  40804a:	inc    edx
  40804b:	jmp    0xe3b240f8
  408050:	dec    edi
  408051:	inc    ebx
  408052:	pop    es
  408053:	aaa    
  408054:	fdiv   DWORD PTR [edi+0x31]
  408057:	add    eax,0xdea140b9
  40805c:	int    0xdc
  40805e:	jno    0x408003
  408060:	inc    eax
  408061:	jne    0x408007
  408063:	rcr    ch,1
  408065:	inc    edx
  408066:	adc    DWORD PTR [esi],ebx
  408068:	outs   dx,BYTE PTR ds:[esi]
  408069:	or     eax,0x433a34ef
  40806e:	lds    ebp,FWORD PTR [esi]
  408070:	sti    
  408071:	and    DWORD PTR [ebp-0x27],ebp
  408074:	test   BYTE PTR [ecx+0x410cc817],dh
  40807a:	ds aam 0xbc
  40807d:	fs pop es
  40807f:	mov    ds:0x1070f50a,al
  408084:	ja     0x4080a4
  408086:	mov    bl,0x76
  408088:	inc    edx
  408089:	mov    bh,0x1
  40808b:	inc    esp
  40808c:	adc    ecx,DWORD PTR [eax-0x12f925b4]
  408092:	or     al,0x97
  408094:	fisub  DWORD PTR [ebx+0x1a2b5262]
  40809a:	or     eax,0xa8181e1b
  40809f:	sub    eax,DWORD PTR [esi+edi*2-0x1]
  4080a3:	aad    0xc
  4080a5:	jo     0x4080aa
  4080a7:	fild   QWORD PTR [ebp+eax*2+0x4b]
  4080ab:	mov    bh,0x98
  4080ad:	repz lock or eax,0x299ddea2
  4080b4:	jle    0x4080cc
  4080b6:	xchg   ebp,eax
  4080b7:	cmp    BYTE PTR [esi],al
  4080b9:	addr16 addr16 xchg ebx,eax
  4080bc:	repz jl 0x4080d6
  4080bf:	push   0xb8b46dc8
  4080c4:	call   0x3fff:0xc2a6f320
  4080cb:	adc    BYTE PTR [ecx-0x5c57d445],ch
  4080d1:	adc    ebp,edi
  4080d3:	push   ds
  4080d4:	fdivr  DWORD PTR [ebp-0x17]
  4080d7:	add    eax,0xf733125e
  4080dc:	xchg   esp,eax
  4080dd:	bound  esi,QWORD PTR [ecx+0xa31a96c]
  4080e3:	jmp    0x65adcc81
  4080e8:	cmp    BYTE PTR [eax-0xd9ed199],al
  4080ee:	jno    0x408146
  4080f0:	mov    cl,0xc
  4080f2:	ror    BYTE PTR [eax],0x8e
  4080f5:	lods   eax,DWORD PTR ds:[esi]
  4080f6:	mov    bh,0xf7
  4080f8:	push   edx
  4080f9:	mov    edx,0x5c96526
  4080fe:	in     eax,0xc3
  408100:	rol    BYTE PTR [ebp-0x1ba7bed4],cl
  408106:	gs daa 
  408108:	add    eax,0xe7e80b2b
  40810d:	gs fcmovu st,st(3)
  408110:	les    ebp,FWORD PTR [ecx-0x50]
  408113:	out    0x64,al
  408115:	pop    edx
  408116:	inc    ecx
  408117:	ret    
  408118:	fistp  DWORD PTR [esi+ebx*4-0x6e]
  40811c:	mov    cl,0x57
  40811e:	jl     0x4080ca
  408120:	mov    ds:0x223ae01b,eax
  408125:	into   
  408126:	inc    esp
  408127:	sub    BYTE PTR [ecx],dh
  408129:	cmp    eax,0xc486fcae
  40812e:	xor    DWORD PTR [ecx-0x2da1635c],edx
  408134:	jae    0x408145
  408136:	fdiv   st(0),st
  408138:	jp     0x4080fe
  40813a:	or     dl,BYTE PTR [ebp-0x53dcd0f]
  408140:	pop    ebp
  408141:	jo     0x4080f1
  408143:	push   0xffffffc3
  408145:	adc    DWORD PTR es:[eax],0x4f773142
  40814c:	repz neg eax
  40814f:	clc    
  408150:	dec    esi
  408151:	push   0x6b33115d
  408156:	cmp    eax,edx
  408158:	ret    0xc361
  40815b:	inc    ebp
  40815c:	mov    dl,0x75
  40815e:	cmpxchg BYTE PTR [ebx+0x4c],cl
  408162:	js     0x408152
  408164:	mov    edi,0x5454de5e
  408169:	add    al,0xab
  40816b:	stos   BYTE PTR es:[edi],al
  40816c:	xchg   DWORD PTR [ecx+0x1f85a93c],ecx
  408172:	ds int 0xc2
  408175:	icebp  
  408176:	adc    eax,0x3c972ad8
  40817b:	xchg   ebx,eax
  40817c:	sub    esi,edi
  40817e:	xchg   esp,eax
  40817f:	scas   al,BYTE PTR es:[edi]
  408180:	fs or  eax,0x2d62559b
  408186:	inc    edi
  408187:	xchg   esi,eax
  408188:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408189:	mov    ebx,0x3edabc96
  40818e:	add    eax,0x3b779d2f
  408193:	jp     0x4081a0
  408195:	dec    ebp
  408196:	dec    esp
  408197:	add    DWORD PTR [ebx],ebp
  408199:	repz jb 0x4081dd
  40819c:	mov    ah,0x2d
  40819e:	adc    ecx,ebx
  4081a0:	mov    dh,0x94
  4081a2:	and    al,0xb3
  4081a4:	lea    edx,[edi]
  4081a6:	jns    0x408193
  4081a8:	inc    ebp
  4081a9:	sbb    BYTE PTR [eax],dl
  4081ab:	jae    0x408177
  4081ad:	sub    edx,DWORD PTR [eiz*1-0x5ffe6dae]
  4081b4:	xchg   edi,eax
  4081b5:	xor    eax,0xdf54b3c5
  4081ba:	imul   BYTE PTR [ebx]
  4081bc:	stc    
  4081bd:	cmc    
  4081be:	adc    BYTE PTR [eax-0x65d8e138],dh
  4081c4:	(bad)  
  4081c6:	push   ebx
  4081c7:	mov    bl,0x1
  4081c9:	jmp    0x4081cf
  4081cb:	fnstsw WORD PTR [ebx-0x404a2e41]
  4081d1:	fadd   DWORD PTR [edi+0x54]
  4081d4:	gs adc cl,dl
  4081d7:	test   bh,bh
  4081d9:	xchg   edx,eax
  4081da:	(bad)  
  4081db:	mov    DWORD PTR [esi],esp
  4081dd:	cld    
  4081de:	pop    ds
  4081df:	xchg   esp,eax
  4081e1:	stos   BYTE PTR es:[edi],al
  4081e2:	sti    
  4081e3:	jp     0x4081df
  4081e5:	cmc    
  4081e6:	cmp    DWORD PTR [edx+0x62ffc5cd],0xffffffc8
  4081ed:	aad    0x73
  4081ef:	std    
  4081f0:	sbb    al,0xca
  4081f2:	std    
  4081f3:	inc    edi
  4081f4:	ins    DWORD PTR es:[edi],dx
  4081f5:	sub    eax,0xc2d72fb8
  4081fa:	out    0xbf,eax
  4081fc:	arpl   dx,ax
  4081fe:	add    al,0xaf
  408200:	ret    0x88df
  408203:	ja     0x408283
  408205:	pop    edx
  408206:	mov    esi,0x9d871122
  40820b:	mov    esi,0x24955609
  408210:	rcr    BYTE PTR [edi+edx*4],cl
  408213:	fidivr WORD PTR [ebp-0x7d]
  408216:	in     al,0x83
  408218:	outs   dx,DWORD PTR ds:[esi]
  408219:	sbb    al,0x83
  40821b:	scas   al,BYTE PTR es:[edi]
  40821c:	push   ds
  40821d:	ja     0x408272
  40821f:	or     DWORD PTR gs:[ebp-0x1e],ebp
  408223:	cmp    BYTE PTR [edi-0x3e],bh
  408226:	dec    esi
  408227:	mov    al,ds:0x8cd18c6d
  40822c:	and    BYTE PTR [ebx-0x54bff365],cl
  408232:	inc    ebx
  408233:	aas    
  408234:	mov    ds:0xc6d930ed,eax
  408239:	(bad)  [edi+0x2b61618d]
  40823f:	sbb    DWORD PTR [ecx],esp
  408241:	mov    ebp,0x80718514
  408246:	sbb    edx,ecx
  408248:	adc    BYTE PTR [edx-0x6dd0741a],dh
  40824e:	sub    edi,DWORD PTR [edx+0x26d22c21]
  408254:	push   esp
  408255:	mov    cl,0x82
  408257:	mov    al,0x56
  408259:	into   
  40825a:	jmp    0x4ee0:0x71c89ac2
  408261:	jecxz  0x4082d4
  408263:	repz dec esi
  408265:	sub    al,0xcc
  408267:	xor    bl,BYTE PTR [esi+0x19]
  40826a:	push   eax
  40826b:	pop    esi
  40826c:	jecxz  0x4082c7
  40826e:	push   ebx
  40826f:	add    edi,DWORD PTR [ebx+0x29dec83f]
  408275:	dec    ebx
  408276:	push   edi
  408277:	loopne 0x40828f
  408279:	hlt    
  40827a:	jo     0x4082ef
  40827c:	and    cl,al
  40827e:	gs mov eax,0xc58f40d9
  408284:	lds    ecx,FWORD PTR [esi]
  408286:	sbb    eax,0x89eb15e1
  40828b:	xor    DWORD PTR [edx-0x3e20a993],0xfffffff6
  408292:	out    dx,eax
  408293:	xor    BYTE PTR [ecx+0x53],al
  408296:	scas   al,BYTE PTR es:[edi]
  408297:	nop
  408298:	inc    edi
  408299:	pop    ecx
  40829a:	mov    esp,0x6b68837f
  40829f:	mov    ah,0xfa
  4082a1:	inc    esi
  4082a2:	jno    0x408257
  4082a4:	cli    
  4082a5:	jmp    0x4082ea
  4082a7:	cld    
  4082a8:	dec    edi
  4082a9:	xor    eax,0x2aebe90b
  4082ae:	idiv   BYTE PTR [eax+ebx*8]
  4082b1:	(bad)  
  4082b2:	aam    0x98
  4082b4:	jno    0x4082c1
  4082b6:	push   esp
  4082b7:	mov    edi,0x73e1192f
  4082bc:	push   eax
  4082bd:	arpl   WORD PTR [esp+ebp*2+0x17],bx
  4082c1:	imul   dh
  4082c3:	test   eax,0x592d148a
  4082c8:	jne    0x408279
  4082ca:	dec    eax
  4082cb:	xor    al,0x16
  4082cd:	sub    BYTE PTR [edi+0x29b80bfe],ah
  4082d3:	and    al,0x92
  4082d5:	das    
  4082d6:	dec    edi
  4082d7:	lock loope 0x4082d3
  4082da:	loop   0x40832f
  4082dc:	js     0x40834a
  4082de:	add    ch,dl
  4082e0:	pop    ds
  4082e1:	sub    eax,0xb6da05bd
  4082e6:	sub    DWORD PTR [edi-0x337daf63],edx
  4082ec:	jae    0x408310
  4082ee:	pop    eax
  4082ef:	les    eax,FWORD PTR [esi+ecx*2-0x7b95d865]
  4082f6:	rcl    BYTE PTR [ecx+edx*1-0x51],cl
  4082fa:	inc    eax
  4082fb:	jmp    FWORD PTR [ebp-0x30]
  4082fe:	push   es
  4082ff:	fidivr DWORD PTR [eax]
  408301:	loop   0x408287
  408303:	mov    cl,0x67
  408305:	ret    
  408306:	push   edi
  408307:	mov    ebx,0xc5fcf1bb
  40830c:	out    dx,al
  40830d:	jns    0x408367
  40830f:	call   FWORD PTR [esi]
  408311:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408312:	scas   al,BYTE PTR es:[edi]
  408313:	sbb    al,0x12
  408315:	jmp    FWORD PTR [ebx+0x3a]
  408318:	sbb    edi,DWORD PTR [ebp-0x3098db2]
  40831e:	dec    eax
  40831f:	xchg   edi,eax
  408320:	cmp    eax,0xe04ff64d
  408325:	jae    0x4082d2
  408327:	aad    0xa6
  408329:	mov    bl,BYTE PTR [esi]
  40832b:	jecxz  0x4082d7
  40832d:	mov    bh,0x82
  40832f:	js     0x40830f
  408331:	xchg   edx,eax
  408332:	pop    es
  408333:	push   eax
  408334:	ins    BYTE PTR es:[edi],dx
  408335:	mov    edx,0xb35d224a
  40833a:	jne    0x4083a5
  40833c:	inc    esp
  40833d:	lock mov ebx,0xaa3c305c
  408343:	xchg   dh,cl
  408345:	call   0xa746:0xb0e0a307
  40834c:	xor    ecx,DWORD PTR [bp+si]
  40834f:	or     ah,BYTE PTR ds:0x31ab94b7
  408355:	mov    BYTE PTR [bp+di+0x1e],bl
  408359:	xchg   esi,eax
  40835a:	daa    
  40835b:	and    DWORD PTR [esi+0xc],0xffffff9b
  40835f:	add    al,0xc6
  408361:	hlt    
  408362:	mov    ebp,0xfac23189
  408367:	leave  
  408368:	out    0x8e,eax
  40836a:	jle    0x4082f1
  40836c:	sbb    DWORD PTR [ebx+0x39958b01],eax
  408372:	jb     0x408396
  408374:	push   ebp
  408375:	inc    esi
  408376:	jge    0x4083ec
  408378:	sbb    al,0x57
  40837a:	div    al
  40837c:	cli    
  40837d:	lods   al,BYTE PTR ds:[esi]
  40837e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40837f:	adc    BYTE PTR [edx],0x56
  408382:	aam    0x6
  408384:	sub    al,0x4a
  408386:	or     esi,DWORD PTR [edx]
  408388:	loopne 0x408319
  40838a:	imul   ebp,DWORD PTR [edx-0x1e],0xb0be359e
  408391:	js     0x408325
  408393:	icebp  
  408394:	push   ds
  408395:	test   al,0x9e
  408397:	jmp    0x7d75dcfa
  40839c:	cld    
  40839d:	push   edx
  40839e:	mov    cl,al
  4083a0:	ret    
  4083a1:	add    eax,0xb72af1bf
  4083a6:	push   esi
  4083a7:	xor    al,0xba
  4083a9:	sub    al,0xa2
  4083ab:	call   0xd6e8f658
  4083b0:	pushf  
  4083b1:	xchg   ebx,eax
  4083b2:	stos   BYTE PTR es:[edi],al
  4083b3:	pop    ds
  4083b4:	and    eax,DWORD PTR [esi-0x5]
  4083b7:	or     BYTE PTR [esi+0x483492eb],0x6c
  4083be:	xchg   edi,eax
  4083bf:	repnz stos BYTE PTR es:[edi],al
  4083c1:	fisttp DWORD PTR [edx-0x42]
  4083c4:	or     DWORD PTR [edx-0x35],ecx
  4083c7:	imul   ebp,DWORD PTR [edi],0xffffff95
  4083ca:	leave  
  4083cb:	ret    
  4083cc:	xchg   ebp,eax
  4083cd:	adc    eax,0xf0c06125
  4083d2:	mov    edi,DWORD PTR [eax-0x40]
  4083d5:	fild   DWORD PTR [edx-0x7f]
  4083d8:	lods   al,BYTE PTR ds:[esi]
  4083d9:	retf   0x4e68
  4083dc:	pop    ebp
  4083dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083de:	dec    esp
  4083df:	xchg   ebx,ebx
  4083e1:	or     eax,0xf4db23d
  4083e6:	in     al,dx
  4083e7:	nop
  4083e8:	outs   dx,DWORD PTR ds:[esi]
  4083e9:	jle    0x408389
  4083eb:	adc    ebp,esi
  4083ed:	std    
  4083ee:	jge    0x4083e6
  4083f0:	into   
  4083f1:	xchg   DWORD PTR [ecx+ebx*8-0x6c],edx
  4083f5:	mov    ch,0xd1
  4083f7:	sbb    BYTE PTR [edi],ah
  4083f9:	jmp    0x408416
  4083fb:	(bad)  
  4083fc:	fmul   QWORD PTR [ecx+esi*2-0x29]
  408400:	xor    dl,BYTE PTR [ecx+eax*2-0x63]
  408404:	cs push esi
  408406:	xchg   esp,eax
  408407:	or     dh,bl
  408409:	xor    DWORD PTR [edx+eax*4+0x4c],0x48a25091
  408411:	pop    esp
  408412:	pop    ebx
  408413:	mov    al,0xc2
  408415:	xchg   DWORD PTR [edi],ebx
  408417:	jmp    0xb5a:0x6c5bbf7e
  40841e:	call   0xc140:0x9247e925
  408425:	dec    edi
  408426:	ret    0xd99b
  408429:	neg    BYTE PTR [edx+0x1]
  40842c:	adc    BYTE PTR [edx-0x4d],0x98
  408430:	jl     0x4083cf
  408432:	icebp  
  408433:	int    0xaf
  408435:	mov    dl,BYTE PTR ds:0x896bb310
  40843b:	out    0x1f,eax
  40843d:	cmp    esp,esi
  40843f:	xchg   edi,eax
  408440:	popf   
  408441:	popf   
  408442:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408443:	push   0x2c
  408445:	mov    edi,0x8d7cd169
  40844a:	cwde   
  40844b:	sbb    ebx,DWORD PTR [edx]
  40844d:	call   0x7f34e715
  408452:	push   esi
  408453:	jo     0x40841a
  408455:	stc    
  408456:	or     BYTE PTR [ecx],0x5a
  408459:	imul   edi,DWORD PTR [eax],0xb9abc43b
  40845f:	(bad)  
  408460:	out    0x6,al
  408462:	mov    dh,0xd4
  408464:	out    dx,al
  408465:	push   es
  408466:	add    eax,esi
  408468:	out    dx,eax
  408469:	jb     0x4084b0
  40846b:	jnp    0x408435
  40846d:	add    bl,BYTE PTR [edx-0x4f]
  408470:	aaa    
  408471:	pop    ds
  408472:	repz xchg ecx,eax
  408474:	aaa    
  408475:	jp     0x40848b
  408477:	in     eax,dx
  408478:	std    
  408479:	inc    eax
  40847a:	inc    ebp
  40847b:	loope  0x40849f
  40847d:	inc    edx
  40847e:	xchg   edx,eax
  40847f:	rcl    DWORD PTR [eax-0xc0926d7],0x96
  408486:	pop    ecx
  408487:	pop    ss
  408488:	aas    
  408489:	and    eax,0x87ab6813
  40848e:	xor    eax,0xe52dbf6d
  408493:	mov    ds:0xd95fa46e,al
  408498:	sahf   
  408499:	mov    dh,0xf9
  40849b:	xchg   ecx,eax
  40849c:	adc    DWORD PTR [eax-0x80],ebp
  40849f:	jmp    0x82964e80
  4084a4:	clc    
  4084a5:	in     al,dx
  4084a6:	sbb    dl,cl
  4084a8:	inc    ebx
  4084a9:	aaa    
  4084aa:	inc    esp
  4084ab:	xor    BYTE PTR [ebp+0x7ba2ef24],al
  4084b1:	clc    
  4084b2:	int    0xfa
  4084b4:	xchg   ecx,eax
  4084b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084b6:	inc    esp
  4084b7:	xor    eax,0xdb735b5c
  4084bc:	jno    0x40845b
  4084be:	mov    ds:0xf5279b93,al
  4084c3:	popf   
  4084c4:	jl     0x4084a5
  4084c6:	imul   ebx,DWORD PTR [ebx],0x9864b2b3
  4084cc:	inc    edx
  4084cd:	or     al,ch
  4084cf:	sar    BYTE PTR [ecx],0xda
  4084d2:	sub    ebp,0xfffffff9
  4084d5:	jecxz  0x4084f2
  4084d7:	lods   al,BYTE PTR ds:[esi]
  4084d8:	xchg   bl,ch
  4084da:	inc    esi
  4084db:	scas   eax,DWORD PTR es:[edi]
  4084dc:	and    eax,DWORD PTR [eax+ebx*1]
  4084df:	fcomp  DWORD PTR [esi-0x77fa2e3a]
  4084e5:	imul   ebp,DWORD PTR [ecx+0x58],0x71
  4084e9:	add    eax,0x35b55856
  4084ee:	sti    
  4084ef:	sbb    BYTE PTR [eax],dh
  4084f1:	fwait
  4084f2:	jno    0x4084bd
  4084f4:	loop   0x40854e
  4084f6:	push   esp
  4084f7:	sub    BYTE PTR [ebp-0x3a],dl
  4084fa:	push   es
  4084fb:	rcr    DWORD PTR [ecx-0x6fd19fc3],1
  408501:	mov    dl,0x7e
  408503:	pop    esp
  408504:	mov    ecx,0x40a0dc2d
  408509:	out    0xb9,eax
  40850b:	xor    BYTE PTR [ebx],al
  40850d:	in     al,0xf
  40850f:	test   eax,0xd32255b2
  408514:	jns    0x4084fd
  408516:	ret    0x7cc7
  408519:	out    dx,eax
  40851a:	loopne 0x408557
  40851c:	arpl   WORD PTR [edx],sp
  40851e:	xchg   esi,eax
  40851f:	mov    edx,0x80ba33eb
  408524:	(bad)  
  408525:	pop    eax
  408526:	xchg   esi,eax
  408527:	mul    dl
  408529:	sti    
  40852a:	push   ebx
  40852b:	add    cl,bh
  40852d:	inc    ecx
  40852e:	sti    
  40852f:	mov    bh,0x8
  408531:	out    dx,eax
  408532:	(bad)
  408535:	mov    ss,WORD PTR [ebx+eax*1-0x43]
  408539:	add    ecx,DWORD PTR [ebx-0x7a4a949c]
  40853f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408540:	emms   
  408542:	test   eax,0x5d17c8fb
  408547:	pop    edi
  408548:	addr16 in eax,dx
  40854a:	cmc    
  40854b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40854c:	mov    edx,DWORD PTR [esi+0x93c7263]
  408552:	rcr    ecx,0xb9
  408555:	mov    ecx,0x67fc8dce
  40855a:	rcl    dh,1
  40855c:	adc    al,0x82
  40855e:	xchg   ebx,eax
  40855f:	xchg   ecx,eax
  408560:	dec    ecx
  408561:	sbb    ebx,DWORD PTR ds:0x84f8cfa
  408567:	inc    ebp
  408568:	add    ch,dl
  40856a:	inc    edx
  40856b:	mov    dh,0xa4
  40856d:	nop
  40856e:	es scas eax,DWORD PTR es:[edi]
  408570:	mov    ecx,0xc42c9341
  408575:	or     ebp,DWORD PTR [ecx-0x79b53bdc]
  40857b:	xor    BYTE PTR [edx+0x4d],dl
  40857e:	les    esi,FWORD PTR [edi-0x74e6537b]
  408584:	ficom  WORD PTR [ecx]
  408586:	xchg   edx,eax
  408587:	push   ds
  408588:	push   ebx
  408589:	xor    DWORD PTR [edx+0x30cb6931],0x44a95fe5
  408593:	mov    dh,0xd5
  408595:	inc    ebx
  408596:	pop    ss
  408597:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408598:	cs ins BYTE PTR es:[edi],dx
  40859a:	lods   al,BYTE PTR ds:[esi]
  40859b:	dec    edx
  40859c:	sub    BYTE PTR [edi+0x56],0x26
  4085a0:	fild   WORD PTR [ecx]
  4085a2:	dec    edi
  4085a3:	lock pop eax
  4085a5:	test   eax,0xe11c88ae
  4085aa:	ret    0x9509
  4085ad:	ret    0xe2a5
  4085b0:	lods   eax,DWORD PTR ds:[esi]
  4085b1:	mov    al,0x37
  4085b3:	test   eax,0x8b96c7e5
  4085b8:	xor    DWORD PTR [edi-0xf],0xce0be4a4
  4085bf:	ror    BYTE PTR [eax+0x36],0xc5
  4085c3:	out    0x83,al
  4085c5:	jp     0x408572
  4085c7:	add    ah,BYTE PTR [ecx-0x37b2bbaf]
  4085cd:	mov    esp,0xe92001f4
  4085d2:	sbb    ch,BYTE PTR [eax+0x7b]
  4085d5:	aam    0x2e
  4085d7:	inc    ecx
  4085d9:	cmc    
  4085da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085db:	push   ecx
  4085dc:	std    
  4085dd:	xor    al,0x1
  4085df:	sahf   
  4085e0:	cmp    eax,0xd9b01a54
  4085e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085e6:	inc    esp
  4085e7:	xor    eax,0xed846f0e
  4085ec:	scas   eax,DWORD PTR es:[edi]
  4085ed:	mov    edi,0xe3978643
  4085f2:	retf   0xa2f4
  4085f5:	shl    bl,1
  4085f7:	dec    edi
  4085f8:	push   ecx
  4085f9:	(bad)  
  4085fa:	sbb    al,BYTE PTR [edi]
  4085fc:	jge    0x4085eb
  4085fe:	push   edx
  4085ff:	lods   al,BYTE PTR ds:[esi]
  408600:	ins    DWORD PTR es:[edi],dx
  408601:	or     eax,0x53510e62
  408606:	or     edx,edx
  408608:	sub    al,BYTE PTR [esi]
  40860a:	cs inc ecx
  40860c:	pop    es
  40860d:	out    dx,eax
  40860e:	and    ah,BYTE PTR [edi-0x43]
  408611:	cld    
  408612:	jl     0x408608
  408614:	cli    
  408615:	mov    ch,0xbb
  408617:	xor    ecx,DWORD PTR [ebx]
  408619:	ds sub al,0x33
  40861c:	xchg   ebx,eax
  40861d:	ret    0x28f9
  408620:	adc    DWORD PTR [ebx],eax
  408622:	jo     0x4085cc
  408624:	push   eax
  408625:	sahf   
  408626:	xchg   edi,eax
  408627:	jns    0x4085df
  408629:	jl     0x40866b
  40862b:	jbe    0x40867c
  40862d:	loopne 0x408611
  40862f:	inc    ebx
  408630:	sahf   
  408631:	jmp    0x408637
  408633:	leave  
  408634:	jns    0x408653
  408636:	push   ss
  408637:	dec    edi
  408638:	(bad)  
  408639:	mov    ebx,0xe03e55d9
  40863e:	adc    eax,0xa4a316b1
  408643:	jno    0x4086c3
  408645:	sar    DWORD PTR [ecx],0xb4
  408648:	int3   
  408649:	fild   DWORD PTR [eax+ebx*8-0x6147349a]
  408650:	cmp    DWORD PTR [edx+0x66],ebp
  408653:	into   
  408654:	inc    eax
  408655:	sbb    dh,BYTE PTR [ecx+edi*1+0x0]
  408659:	add    al,0x8b
  40865b:	fwait
  40865c:	mov    cl,0xf6
  40865e:	jl     0x40865d
  408660:	dec    ebx
  408661:	scas   al,BYTE PTR es:[edi]
  408662:	jno    0x408654
  408664:	idiv   BYTE PTR [ebx-0x69486315]
  40866a:	push   eax
  40866b:	push   ds
  40866c:	popf   
  40866d:	iret   
  40866e:	push   edi
  40866f:	push   es
  408670:	(bad)  
  408671:	adc    BYTE PTR [edx+0x1e],bl
  408674:	push   esi
  408675:	stos   DWORD PTR es:[edi],eax
  408676:	test   BYTE PTR [ecx],ch
  408678:	mov    esp,0xe508cda
  40867d:	cmp    DWORD PTR [esi-0x5a],ebp
  408680:	inc    ecx
  408681:	mov    dl,0xf5
  408683:	fadd   st(6),st
  408685:	inc    edx
  408686:	pop    ds
  408687:	in     al,0x87
  408689:	push   esi
  40868a:	xor    DWORD PTR [ecx*4-0x1bbef130],edi
  408691:	sbb    ch,cl
  408693:	fidivr DWORD PTR [ebp-0x7b7b08d5]
  408699:	push   ebp
  40869a:	les    esp,FWORD PTR [esi*2-0x6f706b97]
  4086a1:	and    al,bl
  4086a3:	dec    ebp
  4086a4:	and    DWORD PTR [edi+0x3c4641bc],ebp
  4086aa:	mov    ds:0xdcdd9794,al
  4086af:	add    BYTE PTR [eax+0x31],0x12
  4086b3:	outs   dx,DWORD PTR ds:[esi]
  4086b4:	jae    0x40870a
  4086b6:	adc    edi,DWORD PTR [eax+eax*2-0x2be82cb7]
  4086bd:	mov    es:0x4bbd1852,al
  4086c3:	ja     0x408734
  4086c5:	in     eax,0x77
  4086c7:	jno    0x4086fc
  4086c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086ca:	dec    eax
  4086cb:	retf   0x3828
  4086ce:	add    DWORD PTR [ebp+0x44],0x67b1e562
  4086d5:	mov    eax,0x3165ca47
  4086da:	ins    DWORD PTR es:[edi],dx
  4086db:	jae    0x40874a
  4086dd:	xor    BYTE PTR [esi],ch
  4086df:	lods   eax,DWORD PTR ds:[esi]
  4086e0:	mov    edx,DWORD PTR [ebx-0x14]
  4086e3:	nop
  4086e4:	dec    ebp
  4086e5:	push   ebx
  4086e6:	mul    BYTE PTR [edx-0x6]
  4086e9:	repz fwait
  4086eb:	shl    DWORD PTR [ebx-0x1c],0x62
  4086ef:	mov    al,0xc0
  4086f1:	stos   DWORD PTR es:[edi],eax
  4086f2:	or     edi,DWORD PTR [eax]
  4086f4:	xchg   esp,eax
  4086f5:	repz lock pop esp
  4086f8:	in     eax,dx
  4086f9:	fsubr  QWORD PTR [edi-0x4e]
  4086fc:	xor    eax,0x8bb2b89b
  408701:	adc    al,0x44
  408703:	adc    bh,BYTE PTR ds:0xb05ec71c
  408709:	mov    al,0x95
  40870b:	jb     0x408765
  40870d:	or     eax,0x420bd8fd
  408712:	fsubr  DWORD PTR [eax-0x5f]
  408715:	mov    dh,BYTE PTR [eax*2-0x2f56b6e4]
  40871c:	inc    eax
  40871e:	adc    esi,DWORD PTR [ecx]
  408720:	ja     0x4086a5
  408722:	jnp    0x40877e
  408724:	mov    edi,0xe9fef011
  408729:	cmp    esi,DWORD PTR ds:[edi+0x2e4cf7d0]
  408730:	mov    al,ds:0x347fd7d2
  408735:	mov    bl,0x2c
  408737:	push   edi
  408738:	pop    esp
  408739:	or     ebp,DWORD PTR [ebx-0x59]
  40873c:	sbb    eax,0xc18ceef4
  408741:	call   0x60ab:0x6a17793
  408748:	jle    0x40878b
  40874a:	pop    ebx
  40874b:	xchg   esi,eax
  40874c:	mov    WORD PTR [eax+0x624467f6],es
  408752:	mov    al,ds:0x2aca2a2f
  408757:	cdq    
  408758:	add    ebp,eax
  40875a:	dec    BYTE PTR [ebx+0x6f4013ec]
  408760:	xchg   ecx,eax
  408761:	jne    0x4087c9
  408763:	popf   
  408764:	cs mov cl,0xe2
  408767:	inc    ecx
  408768:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408769:	fisubr WORD PTR [eax+0x5de4ff95]
  40876f:	cmp    eax,0x18ff8df4
  408774:	pop    esp
  408775:	jg     0x40873d
  408777:	lock int 0x48
  40877a:	sbb    ecx,eax
  40877c:	les    eax,FWORD PTR [edi+0x28]
  40877f:	test   eax,0x405f535f
  408784:	fwait
  408785:	jecxz  0x408720
  408787:	pop    edx
  408788:	lods   eax,DWORD PTR ds:[esi]
  408789:	mov    dl,0x80
  40878b:	nop
  40878c:	ror    DWORD PTR [ecx],1
  40878e:	mov    ds:0xdf2100e1,al
  408793:	inc    ebx
  408794:	sub    BYTE PTR [edx+0x3ae9b30c],bh
  40879a:	sub    ecx,DWORD PTR [edi]
  40879c:	dec    ebx
  40879d:	jmp    0x40878c
  40879f:	popf   
  4087a0:	inc    ecx
  4087a1:	or     ecx,DWORD PTR [edi-0x6e]
  4087a4:	adc    edx,DWORD PTR [eax-0x21]
  4087a7:	nop
  4087a8:	add    al,0xc3
  4087aa:	xchg   ebx,eax
  4087ab:	test   al,0xfb
  4087ad:	sbb    cl,ch
  4087af:	sbb    ebp,DWORD PTR [ebx+0x13675ad]
  4087b5:	push   esi
  4087b6:	and    bl,BYTE PTR [eax+0x727dc754]
  4087bc:	mov    ecx,?
  4087be:	outs   dx,BYTE PTR ds:[esi]
  4087bf:	les    esp,FWORD PTR ds:0xa0d8e53c
  4087c5:	(bad)  
  4087c7:	dec    esi
  4087c8:	mov    ch,0xb6
  4087ca:	cmc    
  4087cb:	in     eax,0x6f
  4087cd:	xor    esi,esi
  4087cf:	call   0xee59:0x9020b39
  4087d6:	fwait
  4087d7:	xchg   BYTE PTR [ebx],bl
  4087d9:	inc    ebx
  4087da:	mov    BYTE PTR [edi],dh
  4087dc:	dec    ebx
  4087dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087de:	shl    BYTE PTR [edi-0x16e70c88],1
  4087e4:	(bad)  
  4087e5:	mov    ebp,DWORD PTR [ecx]
  4087e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087e8:	fdivr  DWORD PTR ds:0xeacb0763
  4087ee:	ds xor al,0x6a
  4087f1:	inc    ebp
  4087f2:	sbb    eax,0x9e7920f1
  4087f7:	xor    ah,cl
  4087f9:	jb     0x4087b7
  4087fb:	lea    edx,[eax+0x3dca61f2]
  408801:	jae    0x4087d4
  408803:	mov    ds:0x4f274dae,eax
  408808:	inc    edx
  408809:	aaa    
  40880a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40880b:	fsub   QWORD PTR [ecx-0x39]
  40880e:	xchg   esi,eax
  40880f:	ret    0x1e09
  408812:	sub    ecx,DWORD PTR ds:0x13256382
  408818:	repnz sar DWORD PTR [ebx-0x40c98e20],1
  40881f:	jmp    0xbfc8033a
  408824:	daa    
  408825:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  408827:	pop    ebp
  408828:	push   ss
  408829:	dec    BYTE PTR [ebx+edi*8-0x3]
  40882d:	retf   
  40882e:	out    0x76,eax
  408830:	sub    al,0x50
  408832:	inc    ecx
  408833:	mov    dl,0x79
  408835:	sub    edx,ebx
  408837:	retf   0xbf5e
  40883a:	push   esp
  40883b:	add    al,0xbd
  40883d:	frstor [edi+0x68]
  408840:	jne    0x408899
  408842:	pop    es
  408843:	je     0x40881b
  408845:	sti    
  408846:	add    al,0x86
  408848:	out    0x0,al
  40884a:	std    
  40884b:	mov    esp,0x452ed9d6
  408850:	push   ebp
  408851:	sub    BYTE PTR [edi-0x399d5c86],al
  408857:	push   edi
  408858:	in     al,0x1c
  40885a:	pop    eax
  40885b:	mov    bh,0x20
  40885d:	lea    ebp,[edi-0x62]
  408860:	cs adc al,0x60
  408863:	cs pop eax
  408865:	push   esp
  408866:	jmp    0x6c08474c
  40886b:	repnz repz lock mov ah,0xb8
  408870:	sbb    eax,0x2b99b888
  408875:	jg     0x408885
  408877:	ins    BYTE PTR es:[edi],dx
  408878:	mov    bh,BYTE PTR [ebx]
  40887a:	pop    esp
  40887b:	popa   
  40887c:	ins    DWORD PTR es:[edi],dx
  40887d:	pop    es
  40887e:	jge    0x408836
  408880:	add    eax,0x28abc4f2
  408885:	and    eax,0xf316290e
  40888a:	xchg   edi,eax
  40888b:	nop
  40888c:	rcr    DWORD PTR [ebp+0x39],0xc8
  408890:	mov    ebp,0xe9e208dd
  408895:	pop    ebx
  408896:	sub    BYTE PTR [edx-0x50],ch
  408899:	cmp    al,0x3c
  40889b:	aam    0x9
  40889d:	enter  0x1fed,0x79
  4088a1:	fucomp st(1)
  4088a3:	xchg   edi,eax
  4088a4:	mov    eax,0x29db0efc
  4088a9:	mov    esp,0x6381a0f5
  4088ae:	push   0xaeb36ca2
  4088b3:	xor    edx,DWORD PTR [edx]
  4088b5:	adc    bh,al
  4088b7:	les    edi,FWORD PTR [eax]
  4088b9:	in     al,dx
  4088ba:	or     DWORD PTR [edi+0x5e],esi
  4088bd:	outs   dx,BYTE PTR ds:[esi]
  4088be:	sbb    al,0x8
  4088c0:	out    dx,eax
  4088c1:	cmp    al,0xe2
  4088c3:	jmp    0x40888f
  4088c5:	out    0x41,al
  4088c7:	aas    
  4088c8:	rcr    ebx,0xad
  4088cb:	lods   eax,DWORD PTR ds:[esi]
  4088cc:	pop    esp
  4088cd:	ror    BYTE PTR [ebx-0x4233083],cl
  4088d3:	adc    eax,0x87854c55
  4088d8:	imul   esi,DWORD PTR [eax+0x29],0xffffffb3
  4088dc:	sbb    DWORD PTR [edi-0x7f],esp
  4088df:	out    dx,al
  4088e0:	(bad)  
  4088e2:	jl     0x408932
  4088e4:	xchg   edx,eax
  4088e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088e6:	ds jnp 0x40891b
  4088e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088ea:	and    BYTE PTR [eax+0x56],bh
  4088ed:	jg     0x40887d
  4088ef:	dec    esp
  4088f0:	adc    BYTE PTR ss:[eax+0x4],bh
  4088f4:	mov    edi,0x866402fb
  4088f9:	lods   eax,DWORD PTR ds:[esi]
  4088fa:	sub    DWORD PTR [edi+0x4b961253],0x52c7fa52
  408904:	loop   0x408955
  408906:	frstor [ecx]
  408908:	cmp    BYTE PTR [eax+0x77],bh
  40890b:	fisttp WORD PTR [eax+ecx*1-0x51]
  40890f:	and    BYTE PTR ss:0x6a00c7c6,0x6
  408917:	lds    eax,FWORD PTR [ecx]
  408919:	jae    0x408935
  40891b:	bound  esp,QWORD PTR [edi]
  40891d:	aaa    
  40891e:	(bad)  
  40891f:	daa    
  408920:	dec    esi
  408921:	lea    edx,[ebx+0x54f74d09]
  408927:	jns    0x408902
  408929:	mov    esp,0x3ad2e807
  40892e:	pop    ebp
  40892f:	retf   0xfece
  408932:	aaa    
  408933:	xor    eax,0x8077b92d
  408938:	and    al,0xda
  40893a:	addr16 fdivrp st(1),st
  40893d:	ds aad 0xd9
  408940:	gs pusha 
  408942:	les    esi,FWORD PTR [esi-0x23bad266]
  408948:	cmp    eax,0x868a1eb3
  40894d:	xor    ecx,0xd5828cae
  408953:	xchg   dh,bl
  408955:	sub    bh,BYTE PTR [esi]
  408957:	(bad)  
  408958:	icebp  
  408959:	ret    
  40895a:	fs adc ch,bl
  40895d:	jp     0x4089a7
  40895f:	enter  0xf286,0xe5
  408963:	dec    ebp
  408964:	std    
  408965:	xor    al,0xe5
  408967:	fucomp st(1)
  408969:	fst    DWORD PTR [ecx+0x51c5301f]
  40896f:	retf   0xbcd
  408972:	jae    0x40892b
  408974:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408975:	lds    ebx,FWORD PTR [ebx]
  408977:	das    
  408978:	call   0x8eca:0x476cd41
  40897f:	and    DWORD PTR [ecx+edi*4-0x73749202],edi
  408986:	sahf   
  408987:	shl    esp,0xc7
  40898a:	out    0xde,al
  40898c:	xchg   esp,eax
  40898d:	es mov eax,0x1cd9768b
  408993:	mov    BYTE PTR [eax+0x2dbd8562],ah
  408999:	mov    cl,0xf
  40899b:	test   BYTE PTR [ebx-0x1aaa97e0],ch
  4089a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089a2:	out    0x52,eax
  4089a4:	push   0xffffffde
  4089a6:	cmp    eax,0xc7353f20
  4089ab:	cdq    
  4089ac:	push   eax
  4089ad:	sbb    esi,ebx
  4089af:	pop    ecx
  4089b0:	pop    ss
  4089b1:	cli    
  4089b2:	int    0xbf
  4089b4:	jge    0x408982
  4089b6:	cmp    BYTE PTR [esi+0x7102c3c],cl
  4089bc:	mov    ?,esi
  4089be:	sub    al,BYTE PTR [ebp-0x26]
  4089c1:	jle    0x4089ff
  4089c3:	xlat   BYTE PTR ds:[ebx]
  4089c4:	fist   WORD PTR [ebx+ebp*4-0x20]
  4089c8:	ret    
  4089c9:	test   BYTE PTR [ebx],al
  4089cb:	in     al,0x20
  4089cd:	or     DWORD PTR [esi+edi*4],ebx
  4089d0:	inc    edi
  4089d1:	push   ecx
  4089d2:	xchg   ecx,eax
  4089d3:	out    0x5e,eax
  4089d5:	out    0xf6,al
  4089d7:	mov    al,ds:0xde6f2c8d
  4089dc:	clc    
  4089dd:	or     al,0xf6
  4089df:	or     cl,BYTE PTR [eax]
  4089e1:	(bad)  
  4089e2:	aad    0x97
  4089e4:	(bad)  
  4089e5:	mov    bl,0x36
  4089e7:	cli    
  4089e8:	push   cs
  4089e9:	xchg   BYTE PTR [eax-0x3e],dh
  4089ec:	adc    ebx,DWORD PTR [ecx+0x3c2016bc]
  4089f2:	inc    esp
  4089f3:	rol    BYTE PTR [edx-0x481b71bf],cl
  4089f9:	inc    edi
  4089fa:	(bad)
  4089fe:	shr    dl,cl
  408a00:	mov    WORD PTR [ebx],cs
  408a02:	ss iret 
  408a04:	fild   DWORD PTR [edi+0x47f45598]
  408a0a:	mov    esp,0x2f3e7165
  408a0f:	sahf   
  408a10:	ins    BYTE PTR es:[edi],dx
  408a11:	cmc    
  408a12:	lea    edi,[edx]
  408a14:	jmp    0x408a5c
  408a16:	ja     0x408a54
  408a18:	mov    al,0xdb
  408a1a:	or     DWORD PTR ds:0xf9625c2e,edi
  408a20:	cld    
  408a21:	test   eax,0x33b93370
  408a26:	jmp    0xc1a:0x4d19e44
  408a2d:	enter  0xa11d,0x10
  408a31:	lahf   
  408a32:	dec    edx
  408a33:	ror    BYTE PTR [eax-0x78150194],1
  408a39:	pop    ds
  408a3a:	dec    edi
  408a3b:	and    ch,BYTE PTR [edi-0x58694413]
  408a41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a42:	rcr    DWORD PTR [ecx],0x37
  408a45:	inc    ebp
  408a46:	xchg   edi,eax
  408a47:	out    0x9f,eax
  408a49:	scas   eax,DWORD PTR es:[edi]
  408a4a:	xchg   edx,eax
  408a4b:	pusha  
  408a4c:	repnz pop esp
  408a4e:	fsubp  st(7),st
  408a50:	jne    0x408a3e
  408a52:	pop    DWORD PTR [edi-0x6120de0c]
  408a58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a59:	add    dl,BYTE PTR [eax+0x39]
  408a5c:	jmp    0x29043d2a
  408a61:	cmp    al,0x36
  408a63:	(bad)  
  408a64:	mov    eax,0x984f0ec2
  408a69:	test   al,0x43
  408a6b:	cmp    BYTE PTR [esi+0x24bc8501],bl
  408a71:	xor    DWORD PTR [esi],0x14
  408a74:	xor    ebp,DWORD PTR ds:0x1202946e
  408a7a:	mov    al,ds:0x44632b2f
  408a7f:	sbb    BYTE PTR [edi+ebx*2-0x7a21408f],dh
  408a86:	gs scas eax,DWORD PTR es:[edi]
  408a88:	dec    edi
  408a89:	mov    eax,ds:0xe894d9e3
  408a8e:	cmp    bl,BYTE PTR [eax]
  408a90:	retf   
  408a91:	dec    edi
  408a92:	enter  0x6eab,0xcd
  408a96:	push   edi
  408a97:	mov    ?,WORD PTR [ecx+0x18791679]
  408a9d:	out    0x92,eax
  408a9f:	mov    edi,0xa9e956f4
  408aa4:	push   cs
  408aa5:	adc    eax,0x359e95f7
  408aaa:	add    eax,DWORD PTR [eax+0x49]
  408aad:	data16 out 0xe0,al
  408ab0:	and    eax,0xa20f5a9c
  408ab5:	lahf   
  408ab6:	mov    ah,0x2
  408ab8:	push   esp
  408ab9:	dec    esi
  408aba:	push   edi
  408abb:	push   eax
  408abc:	stos   DWORD PTR es:[edi],eax
  408abd:	jecxz  0x408abf
  408abf:	cmp    BYTE PTR [eax],bl
  408ac1:	push   cs
  408ac2:	jb     0x408b0b
  408ac4:	cmp    DWORD PTR [eax+0x31a2d3a9],ebp
  408aca:	push   ebp
  408acb:	cwde   
  408acc:	aas    
  408acd:	aam    0xe9
  408acf:	imul   ebp,esi,0x77
  408ad2:	aam    0x14
  408ad4:	jmp    0x9cbd:0xcfc91324
  408adb:	fcom   QWORD PTR [ebx+0x158d79e3]
  408ae1:	fadd   QWORD PTR [edi-0x1283fb1d]
  408ae7:	in     al,0xb0
  408ae9:	inc    esi
  408aea:	fidivr DWORD PTR [esi+0x29]
  408aed:	sbb    edx,edi
  408aef:	mov    dl,0xd1
  408af1:	rcr    DWORD PTR [edi+0x5eea5296],cl
  408af7:	push   edi
  408af8:	sub    ah,cl
  408afa:	rcl    dh,cl
  408afc:	lods   eax,DWORD PTR ds:[esi]
  408afd:	sub    eax,0x7b01d53a
  408b02:	popf   
  408b03:	int3   
  408b04:	fdivr  DWORD PTR [edx+0x5aa7d549]
  408b0a:	pop    ebp
  408b0b:	xchg   ebx,eax
  408b0c:	nop
  408b0d:	and    al,0x8d
  408b0f:	in     al,0x84
  408b11:	xchg   edi,eax
  408b12:	clc    
  408b13:	stos   BYTE PTR es:[edi],al
  408b14:	aam    0x75
  408b16:	pop    eax
  408b17:	ins    DWORD PTR es:[edi],dx
  408b18:	je     0x408b94
  408b1a:	dec    ecx
  408b1b:	fwait
  408b1c:	cs adc dl,bh
  408b1f:	mov    ebx,0x1dc26bbc
  408b24:	repz bound edx,QWORD PTR [ecx+0x2d]
  408b28:	(bad)  
  408b29:	loop   0x408b55
  408b2b:	mov    ds:0xe1402d4f,al
  408b30:	push   esi
  408b31:	push   edi
  408b32:	dec    edi
  408b33:	loopne 0x408ba1
  408b35:	add    ecx,DWORD PTR [ecx]
  408b37:	inc    ecx
  408b38:	ss lock inc ecx
  408b3b:	(bad)  
  408b3d:	gs cmps DWORD PTR ss:[esi],DWORD PTR es:[edi]
  408b40:	xchg   esp,eax
  408b41:	mov    ds:0x83b4f95d,eax
  408b46:	fxch   st(4)
  408b48:	out    dx,eax
  408b49:	sub    esi,DWORD PTR [esi+edi*2]
  408b4c:	imul   ebx,DWORD PTR [ecx+esi*4],0xd70966d
  408b53:	jg     0x408afc
  408b55:	fidiv  DWORD PTR [edx+ebp*8+0x19]
  408b59:	mov    eax,0xb37c7aaf
  408b5e:	loopne 0x408b74
  408b60:	mov    ds:0x5ecfc731,eax
  408b65:	mov    bh,BYTE PTR [ecx-0x2a2acdf1]
  408b6b:	int    0xc3
  408b6d:	es jge 0x408b8b
  408b70:	gs stc 
  408b72:	dec    edx
  408b73:	fsub   DWORD PTR [eax+ebp*2+0x67]
  408b77:	call   0x4d86:0x6f6d88a6
  408b7e:	imul   esi,DWORD PTR [eax+esi*1+0x51],0xffffffc6
  408b83:	outs   dx,DWORD PTR ds:[esi]
  408b84:	xor    al,0xbf
  408b86:	xchg   ecx,eax
  408b87:	shl    DWORD PTR [edx+eax*2],0xd0
  408b8b:	jl     0x408bbc
  408b8d:	jo     0x408c04
  408b8f:	jecxz  0x408b98
  408b91:	(bad)  
  408b92:	push   ebp
  408b93:	in     al,dx
  408b94:	sub    al,BYTE PTR ds:0x34cc717c
  408b9a:	mov    al,0x5f
  408b9c:	lock push esp
  408b9e:	jmp    0x408c0c
  408ba0:	retf   0x9314
  408ba3:	retf   0x8b4a
  408ba6:	push   eax
  408ba7:	setne  BYTE PTR [edi+0x2e]
  408bab:	pop    edx
  408bac:	xlat   BYTE PTR ds:[ebx]
  408bad:	dec    edi
  408bae:	dec    esi
  408baf:	sar    DWORD PTR [ecx],0x1f
  408bb2:	cmp    BYTE PTR [eax+0x56],0xe2
  408bb6:	in     eax,0xc0
  408bb8:	dec    eax
  408bb9:	test   DWORD PTR [edi],ebx
  408bbb:	mov    esp,0x3c992829
  408bc0:	push   0xffffff83
  408bc2:	out    0x26,al
  408bc4:	jg     0x408bb3
  408bc6:	outs   dx,BYTE PTR ds:[esi]
  408bc7:	pop    eax
  408bc8:	or     eax,0xfa4d579a
  408bcd:	not    bl
  408bcf:	sbb    ecx,DWORD PTR [ebx+eax*1-0x32cd3114]
  408bd6:	or     eax,0xb4ece322
  408bdb:	cmp    al,0xf
  408bdd:	fdivp  st(2),st
  408bdf:	add    eax,0x6ce16efa
  408be4:	int3   
  408be5:	pop    edx
  408be6:	mov    WORD PTR [ebp+ecx*1+0x7bbdb0fb],es
  408bed:	adc    BYTE PTR [eax+0x2b],0x39
  408bf1:	mov    WORD PTR [ebp+0x6ebad720],cs
  408bf7:	mov    BYTE PTR [ebx+0x7a54069c],0x7c
  408bfe:	aas    
  408bff:	fwait
  408c00:	sub    al,0x65
  408c02:	test   BYTE PTR [esp+ebx*8-0x16],ch
  408c06:	xchg   ebx,eax
  408c07:	xor    BYTE PTR [edi+0x4],ch
  408c0a:	cmp    cl,ah
  408c0c:	jbe    0x408c13
  408c0e:	fld    DWORD PTR [ecx]
  408c10:	mov    esi,esi
  408c12:	lea    ecx,[edi]
  408c14:	inc    edx
  408c15:	add    al,0x57
  408c17:	mov    ebp,0x3319f678
  408c1c:	push   es
  408c1d:	inc    ecx
  408c1e:	xchg   dh,al
  408c20:	push   edi
  408c21:	xchg   esi,eax
  408c22:	scas   eax,DWORD PTR es:[edi]
  408c23:	in     eax,0xf2
  408c25:	push   ebp
  408c26:	add    edi,DWORD PTR [edx+0x281febc9]
  408c2c:	sti    
  408c2d:	stos   BYTE PTR es:[edi],al
  408c2e:	cmp    al,0xd3
  408c30:	ret    0xda13
  408c33:	dec    ebp
  408c34:	push   cs
  408c35:	mov    ah,0x9b
  408c37:	xor    eax,DWORD PTR [ebp-0x653a485e]
  408c3d:	jbe    0x408c40
  408c3f:	mov    dl,bl
  408c41:	stc    
  408c42:	int    0x0
  408c44:	or     bh,BYTE PTR [ebx+0x1c38637f]
  408c4a:	dec    esi
  408c4b:	mov    eax,ds:0xf8acc3ad
  408c50:	mov    WORD PTR [edi*8-0xd13a5c7],fs
  408c57:	mov    edx,ebx
  408c59:	sbb    dl,BYTE PTR [ecx]
  408c5b:	shl    DWORD PTR [eax],cl
  408c5d:	(bad)  
  408c5e:	outs   dx,DWORD PTR ds:[esi]
  408c5f:	daa    
  408c60:	stc    
  408c61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c62:	xchg   BYTE PTR [edx+0x5ca66956],dh
  408c68:	jmp    0x408c54
  408c6a:	shr    bh,0x74
  408c6d:	dec    ebx
  408c6e:	sbb    dh,bl
  408c70:	fwait
  408c71:	hlt    
  408c72:	jle    0x408c77
  408c74:	stos   BYTE PTR es:[edi],al
  408c75:	loope  0x408cd3
  408c77:	sar    DWORD PTR [esi],cl
  408c79:	jmp    0x6686beb9
  408c7e:	aad    0x67
  408c80:	inc    ebp
  408c81:	mov    ds:0x1191ccaa,al
  408c86:	repz aaa 
  408c88:	mov    dl,0xe2
  408c8a:	mov    edi,DWORD PTR [edi]
  408c8c:	mov    edi,0xb1ba95dc
  408c91:	addr16 jge 0x408c2d
  408c94:	add    edx,edi
  408c96:	lahf   
  408c97:	lock dec ebx
  408c99:	lds    ebx,FWORD PTR [ecx-0x51a13f3f]
  408c9f:	dec    ebx
  408ca0:	cdq    
  408ca1:	inc    BYTE PTR [ebx+0x6c]
  408ca4:	fdiv   QWORD PTR [edx]
  408ca6:	pop    esi
  408ca7:	mov    ebp,0x25470644
  408cac:	mov    BYTE PTR [esi+0x54],al
  408caf:	cwde   
  408cb0:	ins    DWORD PTR es:[edi],dx
  408cb1:	enter  0x9f2a,0xf9
  408cb5:	pop    edi
  408cb6:	adc    al,0x82
  408cb8:	fcmove st,st(6)
  408cba:	push   edx
  408cbb:	jno    0x408ca7
  408cbd:	xor    al,0x49
  408cbf:	mov    dl,0x4b
  408cc1:	dec    ecx
  408cc2:	rol    BYTE PTR [ebx+edx*2],cl
  408cc5:	ds inc edx
  408cc7:	push   ebp
  408cc8:	fiadd  WORD PTR [esp+edx*1-0x57e1fdc5]
  408ccf:	cmp    ch,BYTE PTR ds:0xaf034ac3
  408cd5:	jecxz  0x408c66
  408cd7:	fneni(8087 only) 
  408cd9:	mov    ch,0xbc
  408cdb:	pop    esp
  408cdc:	mov    BYTE PTR [esp+ecx*1+0x69],ch
  408ce0:	adc    al,0xe7
  408ce2:	pop    esp
  408ce3:	jmp    0x408c86
  408ce5:	setg   BYTE PTR [ecx]
  408ce8:	sub    eax,0x2f37cd30
  408ced:	inc    ecx
  408cee:	inc    ebx
  408cef:	je     0x408cc3
  408cf1:	sbb    eax,DWORD PTR [eax]
  408cf3:	test   DWORD PTR [esi*4+0x1f51d39],esp
  408cfa:	pushf  
  408cfb:	stc    
  408cfc:	lea    edx,[eax]
  408cfe:	push   edx
  408cff:	or     bl,BYTE PTR [ebp-0x5fee28e]
  408d05:	jp     0x408d60
  408d07:	imul   edi,ecx,0xffffffcf
  408d0a:	pop    eax
  408d0b:	or     ebp,DWORD PTR [edx]
  408d0d:	jne    0x408d62
  408d0f:	pop    ebx
  408d11:	dec    esp
  408d12:	or     al,0x92
  408d14:	and    eax,0x3041a81d
  408d19:	mov    ch,0x1f
  408d1b:	xchg   BYTE PTR [ebx],cl
  408d1d:	aas    
  408d1e:	push   esi
  408d1f:	out    dx,al
  408d20:	aaa    
  408d21:	arpl   WORD PTR [ebp-0x72],bx
  408d24:	push   0xdf60e610
  408d29:	scas   al,BYTE PTR es:[edi]
  408d2a:	inc    edi
  408d2b:	stc    
  408d2c:	dec    edi
  408d2d:	aas    
  408d2e:	es push esp
  408d30:	outs   dx,BYTE PTR ds:[esi]
  408d31:	jae    0x408d4e
  408d33:	inc    esi
  408d34:	imul   edi,DWORD PTR [eax],0xe91ce93
  408d3a:	div    DWORD PTR [ebp+0x21d8ee9b]
  408d40:	scas   al,BYTE PTR es:[edi]
  408d41:	pop    eax
  408d42:	(bad)  
  408d45:	bound  edi,QWORD PTR [esi]
  408d47:	xchg   edi,eax
  408d48:	mov    edx,0x1413520a
  408d4d:	mov    cl,0x49
  408d4f:	push   ebx
  408d50:	dec    esp
  408d51:	loopne 0x408dca
  408d53:	test   al,0x33
  408d55:	lods   eax,DWORD PTR ds:[esi]
  408d56:	aas    
  408d57:	mov    bh,0x9e
  408d59:	outs   dx,BYTE PTR ds:[esi]
  408d5a:	ret    0x67b
  408d5d:	mov    ds,WORD PTR [ebx+ecx*1]
  408d60:	sbb    DWORD PTR [esi-0x5c],esi
  408d63:	jo     0x408da0
  408d65:	jecxz  0x408d93
  408d67:	push   esi
  408d68:	bound  ebp,QWORD PTR [edi-0x49]
  408d6b:	ror    DWORD PTR [esi-0x7ad20b8c],1
  408d71:	out    dx,al
  408d72:	fisttp DWORD PTR [ecx-0x2a]
  408d75:	lods   eax,DWORD PTR ds:[esi]
  408d76:	(bad)  
  408d78:	sbb    al,BYTE PTR [eax]
  408d7a:	ret    
  408d7b:	pop    esi
  408d7c:	sbb    ah,BYTE PTR [ebp-0x5c]
  408d7f:	ret    
  408d80:	fst    QWORD PTR [edx+0xf]
  408d83:	inc    ebx
  408d84:	mov    bh,0xee
  408d86:	lock or eax,0x63bc4673
  408d8c:	ja     0x408dd3
  408d8e:	push   eax
  408d8f:	xchg   edx,eax
  408d90:	shr    DWORD PTR [edi-0x2f],1
  408d93:	jecxz  0x408d9e
  408d95:	and    al,0xc
  408d97:	adc    DWORD PTR [ebp-0x5c],ebx
  408d9a:	jl     0x408d3b
  408d9c:	jecxz  0x408d79
  408d9e:	imul   eax,ebp,0xc06d94f5
  408da4:	out    dx,eax
  408da5:	mov    eax,ds:0x56041ea7
  408daa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408dab:	cmp    bl,dh
  408dad:	xor    BYTE PTR [edx+0x343b7bf],bh
  408db3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408db4:	pop    ss
  408db5:	sbb    eax,esp
  408db7:	aam    0xca
  408db9:	xchg   ebp,eax
  408dba:	test   eax,0x8a450770
  408dbf:	adc    ch,BYTE PTR [ebp+edi*2+0x42fa033e]
  408dc6:	or     BYTE PTR [edi-0x5],bl
  408dc9:	shl    DWORD PTR [edi],0x3a
  408dcc:	aad    0x3
  408dce:	sbb    BYTE PTR [ebp+ecx*2+0x69],al
  408dd2:	imul   edi,DWORD PTR [edi-0x34c3d768],0x79341a2
  408ddc:	cs sbb eax,0xd5207234
  408de2:	ins    DWORD PTR es:[edi],dx
  408de3:	adc    BYTE PTR [ebx],dh
  408de5:	pop    ebp
  408de6:	cmp    eax,0x290193a2
  408deb:	addr16 mov eax,ds:0xae44
  408def:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408df0:	sbb    eax,0x62f7aa23
  408df5:	sub    BYTE PTR [eax-0x6c],dl
  408df8:	push   ebx
  408df9:	push   ds
  408dfa:	nop
  408dfb:	xchg   esi,eax
  408dfc:	lods   eax,DWORD PTR ds:[esi]
  408dfd:	mov    ebp,0xc8ccb0ca
  408e02:	push   cs
  408e03:	mov    ah,0x9
  408e05:	mov    ebx,0x4692109b
  408e0a:	mov    esp,0x159cec84
  408e0f:	loope  0x408e6e
  408e11:	mov    esp,0x696b38df
  408e16:	ret    0xb2a9
  408e19:	lahf   
  408e1a:	add    BYTE PTR [ecx],ah
  408e1c:	loope  0x408e12
  408e1e:	lahf   
  408e1f:	std    
  408e20:	out    dx,al
  408e21:	push   ebp
  408e22:	mov    eax,DWORD PTR [eax]
  408e24:	inc    ebx
  408e25:	xor    dh,dl
  408e27:	call   0x8cee04e1
  408e2c:	mov    al,0x22
  408e2e:	mov    ah,0xb7
  408e30:	mov    esp,0x4b454eba
  408e35:	or     al,0xcf
  408e37:	xchg   ebp,eax
  408e38:	arpl   WORD PTR [edi],cx
  408e3a:	jg     0x408ea5
  408e3c:	mov    ch,0x69
  408e3e:	cld    
  408e3f:	cdq    
  408e40:	xchg   esp,eax
  408e41:	stc    
  408e42:	push   esi
  408e43:	cld    
  408e44:	mov    WORD PTR ds:0x2080fa10,fs
  408e4a:	mov    WORD PTR [eax-0x1a],gs
  408e4d:	popa   
  408e4e:	outs   dx,DWORD PTR ds:[esi]
  408e4f:	jecxz  0x408ebe
  408e51:	idiv   DWORD PTR [edx+0xd]
  408e54:	(bad)  
  408e55:	xlat   BYTE PTR ds:[ebx]
  408e56:	idiv   ch
  408e58:	pop    ss
  408e59:	(bad)  
  408e5a:	adc    esi,DWORD PTR [esi-0x7fa0522c]
  408e60:	clc    
  408e61:	mov    ebp,0x3febd9b1
  408e66:	js     0x408ec1
  408e68:	ret    
  408e69:	or     al,0x37
  408e6b:	dec    edi
  408e6c:	jecxz  0x408e3a
  408e6e:	sub    ch,BYTE PTR [ecx+0x713696fa]
  408e74:	stos   BYTE PTR es:[edi],al
  408e75:	push   edi
  408e76:	or     DWORD PTR [esi],ebx
  408e78:	xchg   ecx,eax
  408e79:	nop
  408e7a:	inc    edx
  408e7b:	lahf   
  408e7c:	push   cs
  408e7d:	push   edi
  408e7e:	mov    cl,0x58
  408e80:	inc    eax
  408e81:	xor    edx,esi
  408e83:	outs   dx,BYTE PTR ds:[esi]
  408e84:	cmp    bh,bl
  408e86:	bound  edi,QWORD PTR gs:[ecx+0x7af15396]
  408e8d:	mov    esp,0x61708758
  408e92:	cmp    edx,ecx
  408e94:	and    DWORD PTR [ebx],esp
  408e96:	add    ecx,DWORD PTR [ecx+0x7b]
  408e99:	(bad)  
  408e9a:	(bad)  
  408e9b:	arpl   WORD PTR [eax],cx
  408e9d:	popf   
  408e9e:	cmp    al,0x8d
  408ea0:	repz and DWORD PTR [eax+edi*4+0x9],esi
  408ea5:	hlt    
  408ea6:	outs   dx,BYTE PTR ds:[esi]
  408ea7:	jge    0x408f23
  408ea9:	xrelease mov BYTE PTR [ecx-0x1d],ah
  408ead:	mov    al,ds:0xff39eeec
  408eb2:	xchg   edx,eax
  408eb3:	call   0xbddca93b
  408eb8:	xor    eax,0x9780c27d
  408ebd:	loop   0x408e7a
  408ebf:	jge    0x408e8d
  408ec1:	cld    
  408ec2:	mov    ds:0xb8b4a987,eax
  408ec7:	outs   dx,DWORD PTR ds:[esi]
  408ec8:	leave  
  408ec9:	sub    BYTE PTR [ebp+ebx*4-0x50f5f2e],bl
  408ed0:	clc    
  408ed1:	cmp    DWORD PTR [esp+edi*1],esi
  408ed4:	mov    ?,WORD PTR [esi+eax*1]
  408ed7:	jnp    0x408f53
  408ed9:	mov    ecx,0xaad57e16
  408ede:	vpmacssdql ymm7,ymm7,ymm7,YMMWORD PTR [edx+0x5cab4981]
  408ee8:	scas   al,BYTE PTR es:[edi]
  408ee9:	mov    al,0xe3
  408eeb:	mov    al,0xe7
  408eed:	adc    BYTE PTR [ecx-0x10],dl
  408ef0:	out    0xa3,eax
  408ef2:	adc    BYTE PTR [edx-0x545a1c68],ah
  408ef8:	adc    dh,dh
  408efa:	sbb    DWORD PTR [ebx-0x490d04f4],eax
  408f00:	jns    0x408eed
  408f02:	(bad)
  408f05:	daa    
  408f06:	mov    dh,0x90
  408f08:	retf   0x1055
  408f0b:	sub    edi,DWORD PTR [esi]
  408f0d:	fdiv   QWORD PTR [esi+esi*1]
  408f10:	jecxz  0x408f43
  408f12:	add    al,0x46
  408f14:	clc    
  408f15:	push   ss
  408f16:	dec    edx
  408f17:	and    BYTE PTR [ebx],ah
  408f19:	loop   0x408ea2
  408f1b:	pop    esi
  408f1c:	call   0x895048b2
  408f21:	xchg   esi,eax
  408f22:	std    
  408f23:	inc    esp
  408f24:	mov    ebx,0xd6292787
  408f29:	sbb    DWORD PTR [edx-0x7d],0xd103351a
  408f30:	pop    ebp
  408f31:	popf   
  408f32:	in     eax,dx
  408f33:	cmp    edx,DWORD PTR [ebp-0x12]
  408f36:	mov    al,0xd2
  408f38:	scas   al,BYTE PTR es:[edi]
  408f39:	(bad)  
  408f3a:	cli    
  408f3b:	xor    al,0x64
  408f3d:	fsub   DWORD PTR [edx-0x685d63dd]
  408f43:	xchg   ebp,eax
  408f44:	loopne 0x408fa0
  408f46:	inc    eax
  408f47:	in     al,0x84
  408f49:	mov    ebx,0xf88b0b24
  408f4e:	mov    edx,0x4efd65c9
  408f53:	jno    0x408f7b
  408f55:	push   ss
  408f56:	int3   
  408f57:	xchg   ecx,eax
  408f58:	sahf   
  408f59:	push   ebx
  408f5a:	mov    ds:0x3f764345,al
  408f5f:	pop    ebp
  408f60:	pop    ds
  408f61:	push   esi
  408f62:	test   DWORD PTR [ecx],eax
  408f64:	jae    0x408fb3
  408f66:	ja     0x408f55
  408f68:	and    edx,edi
  408f6a:	ja     0x408f7d
  408f6c:	push   edi
  408f6d:	cs sbb eax,0xe605a50b
  408f73:	xor    DWORD PTR [esi+0x122d786b],ecx
  408f79:	cs das 
  408f7b:	push   edx
  408f7c:	aas    
  408f7d:	fwait
  408f7e:	nop
  408f7f:	hlt    
  408f80:	mov    al,ds:0x453c1391
  408f85:	and    DWORD PTR [eax+esi*1+0x7f],0x0
  408f8a:	sbb    BYTE PTR ds:[eax+0x3d1464f8],dh
  408f91:	jbe    0x408f3d
  408f93:	and    ebx,DWORD PTR ds:0x342d1fc6
  408f99:	lods   eax,DWORD PTR ds:[esi]
  408f9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f9b:	jecxz  0x408ff3
  408f9d:	jo     0x408f67
  408f9f:	and    al,0x73
  408fa1:	xchg   BYTE PTR [ebp-0x7a6b63e6],bl
  408fa7:	stc    
  408fa8:	xor    eax,0xe46de7b1
  408fad:	lods   al,BYTE PTR ds:[esi]
  408fae:	xchg   edi,eax
  408faf:	jmp    0x419c:0xed87a1b7
  408fb6:	inc    ecx
  408fb7:	mov    bl,0xdd
  408fb9:	adc    eax,0xaf660839
  408fbe:	imul   ecx,DWORD PTR [ebp-0x3d],0x506dd14b
  408fc5:	inc    ecx
  408fc6:	mov    ds:0xa19d1806,eax
  408fcb:	jg     0x408fdc
  408fcd:	pop    esi
  408fce:	sar    edi,cl
  408fd0:	mov    esp,0x5e57195d
  408fd5:	pop    esp
  408fd6:	mov    edi,0xa038b82
  408fdb:	sti    
  408fdc:	dec    esp
  408fdd:	mov    ss,ebp
  408fdf:	and    ecx,DWORD PTR [ecx+0x189dc143]
  408fe5:	sti    
  408fe6:	mov    ch,0xb8
  408fe8:	mov    bl,0x6
  408fea:	sub    al,BYTE PTR [ebp+0x4fb5bf1f]
  408ff0:	adc    DWORD PTR [ecx],esp
  408ff2:	in     al,dx
  408ff3:	cs fs ins BYTE PTR es:[edi],dx
  408ff6:	pushw  0x41
  408ff9:	xor    BYTE PTR [ecx+0x28],ch
  408ffc:	(bad)  
  408ffd:	int3   
  408ffe:	mov    al,0x98
  409000:	icebp  
  409001:	call   0x244f:0x9cbce3c4
  409008:	aas    
  409009:	loopne 0x409007
  40900b:	mov    dl,0x3c
  40900d:	je     0x409085
  40900f:	fmul   st,st(6)
  409011:	add    eax,ebx
  409013:	test   eax,0xea037a3b
  409018:	rol    BYTE PTR [eax+0x7e16fec3],cl
  40901e:	sahf   
  40901f:	icebp  
  409020:	dec    ebx
  409021:	das    
  409022:	push   ecx
  409023:	adc    eax,ecx
  409025:	xchg   ebx,eax
  409026:	jmp    0x92df:0x710617cf
  40902d:	xor    esi,DWORD PTR [ebx+0xb6ca39d]
  409033:	jecxz  0x409010
  409035:	inc    edx
  409036:	add    ecx,esi
  409038:	xor    dl,dh
  40903a:	add    BYTE PTR [edx-0x35a35f26],0x44
  409041:	(bad)
  409045:	leave  
  409046:	mov    WORD PTR [ebp+0x72ef14c1],ds
  40904c:	dec    esi
  40904d:	sub    ecx,DWORD PTR [ebx+0x38]
  409050:	sub    al,0x19
  409052:	pop    ebx
  409053:	mov    edi,DWORD PTR [edi-0x1b]
  409056:	xor    esi,DWORD PTR [ebx+0x30]
  409059:	lods   eax,DWORD PTR ds:[esi]
  40905a:	xchg   ebp,eax
  40905b:	push   0xffffff9d
  40905d:	imul   ecx,ebp,0xffffff9e
  409060:	dec    eax
  409061:	jmp    0xf522e44b
  409066:	sahf   
  409067:	lahf   
  409068:	pushf  
  409069:	xchg   ebx,eax
  40906a:	mov    eax,ds:0xae69b299
  40906f:	pop    esp
  409070:	stc    
  409071:	add    ch,BYTE PTR [edi+0x30]
  409074:	lds    ebp,FWORD PTR [eax-0x3f]
  409077:	push   edx
  409078:	adc    bl,BYTE PTR [eax+0x4b]
  40907b:	ins    BYTE PTR es:[edi],dx
  40907c:	retf   
  40907d:	pusha  
  40907e:	psrlw  mm1,QWORD PTR [ebp-0x439af4ac]
  409085:	test   BYTE PTR [edx+0x70],0x23
  409089:	push   0xe58d1ff3
  40908e:	and    DWORD PTR [edi],ecx
  409090:	inc    edx
  409091:	mov    edx,0x31e2bab1
  409096:	mov    DWORD PTR [ecx-0x3c56be17],eax
  40909c:	fdivr  DWORD PTR ss:[edx+0x22]
  4090a0:	sbb    eax,0xe2028674
  4090a5:	int    0x4c
  4090a7:	xchg   esp,eax
  4090a8:	ret    
  4090a9:	dec    ebp
  4090aa:	(bad)  
  4090ab:	(bad)  
  4090ac:	jno    0x4090a3
  4090ae:	imul   edx,ebp,0x7
  4090b1:	cmp    ecx,DWORD PTR [ebx]
  4090b3:	add    ch,cl
  4090b5:	adc    DWORD PTR [ecx+0x45],esp
  4090b8:	repz mov esp,0x813e12c1
  4090be:	pusha  
  4090bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090c0:	hlt    
  4090c1:	pop    edi
  4090c2:	lock mov ?,esp
  4090c5:	mov    al,0xdf
  4090c7:	jo     0x409114
  4090c9:	jl     0x409093
  4090cb:	jo     0x409111
  4090cd:	mov    gs,WORD PTR [ecx]
  4090cf:	pop    ebx
  4090d0:	(bad)  
  4090d1:	push   ecx
  4090d2:	pop    ecx
  4090d3:	sub    eax,0xa7c58739
  4090d8:	push   ecx
  4090d9:	(bad)  
  4090da:	out    0x4e,eax
  4090dc:	cmp    DWORD PTR [edi+0x28],eax
  4090df:	mov    ss,WORD PTR [ebp+edi*8+0x42fe53b6]
  4090e6:	je     0x409159
  4090e8:	push   ds
  4090e9:	sbb    ch,BYTE PTR [edx]
  4090eb:	ds sbb al,ah
  4090ee:	jns    0x40912d
  4090f0:	or     eax,0xcb7cad35
  4090f5:	int    0xd6
  4090f7:	push   esi
  4090f8:	ss nop
  4090fa:	shr    BYTE PTR [eax-0x2ba0fad5],0x89
  409101:	sbb    bh,BYTE PTR [edi]
  409103:	mov    esp,0x743ff986
  409108:	scas   eax,DWORD PTR es:[edi]
  409109:	hlt    
  40910a:	sbb    esp,eax
  40910c:	shl    DWORD PTR [ebx+esi*2],0xb1
  409110:	lds    edi,FWORD PTR [ebx]
  409112:	lds    esp,FWORD PTR [eax]
  409114:	dec    eax
  409115:	shl    al,1
  409117:	ja     0x409123
  409119:	xor    ch,al
  40911b:	stos   DWORD PTR es:[edi],eax
  40911c:	(bad)  
  40911d:	mov    cl,0x93
  40911f:	shl    DWORD PTR [eax+0x76757914],1
  409125:	xor    eax,0xbedd5bf5
  40912a:	stos   BYTE PTR es:[edi],al
  40912b:	in     al,dx
  40912c:	stc    
  40912d:	adc    al,0x44
  40912f:	rcl    DWORD PTR [ecx],0xdb
  409132:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409133:	dec    ecx
  409134:	mov    eax,ds:0x4d089259
  409139:	mov    ah,0x1d
  40913b:	imul   eax,DWORD PTR [ebx+0x26a6be2d],0xffffffaa
  409142:	(bad)  
  409143:	fdivr  DWORD PTR [ebp-0xb62ea90]
  409149:	into   
  40914a:	jno    0x409122
  40914c:	xlat   BYTE PTR ds:[ebx]
  40914d:	push   cs
  40914e:	hlt    
  40914f:	int    0x85
  409151:	lea    ebx,[esi]
  409153:	stos   DWORD PTR es:[edi],eax
  409154:	fmul   DWORD PTR [esi]
  409156:	xchg   ebp,eax
  409157:	adc    DWORD PTR [eax+0x6f],esi
  40915a:	pusha  
  40915b:	cmovo  esi,DWORD PTR [eax+0x21]
  40915f:	lea    ecx,[edi]
  409161:	retf   
  409162:	or     ch,cl
  409164:	cmp    al,0xc7
  409166:	retf   
  409167:	scas   eax,DWORD PTR es:[edi]
  409168:	fimul  DWORD PTR [edx]
  40916a:	dec    edx
  40916b:	xchg   esi,eax
  40916c:	lahf   
  40916d:	daa    
  40916e:	aaa    
  40916f:	jmp    0x409173
  409171:	and    BYTE PTR [esi+0x73916c06],ch
  409177:	mov    WORD PTR [ebx-0x3c964cec],fs
  40917d:	clc    
  40917e:	fmul   DWORD PTR [eax-0x6b]
  409181:	adc    ah,0xfc
  409184:	rol    BYTE PTR [ebp+ecx*1-0x245334af],0x7f
  40918c:	cmp    eax,0xed5e3469
  409191:	pop    esp
  409192:	mov    ebp,0xa6f9d9c9
  409197:	mov    BYTE PTR [edi],ah
  409199:	sbb    esi,edi
  40919b:	fwait
  40919c:	bound  eax,QWORD PTR [edi+0xee2b6b9]
  4091a2:	sub    ah,BYTE PTR [ebp+0x7b51bfee]
  4091a8:	add    esp,DWORD PTR [eax-0x151d8d8c]
  4091ae:	retf   0x813d
  4091b1:	push   edx
  4091b2:	lea    ecx,[edi-0x1feba648]
  4091b8:	xchg   esp,eax
  4091b9:	mov    esi,0xed9fe4bf
  4091be:	int3   
  4091bf:	sub    BYTE PTR [ecx],al
  4091c1:	jmp    0x3a61921d
  4091c6:	sub    DWORD PTR [ecx],ecx
  4091c8:	mov    ss,WORD PTR [esi+ebx*4]
  4091cb:	and    eax,0x2883e04a
  4091d0:	js     0x409247
  4091d2:	add    eax,0x13715910
  4091d7:	and    al,0xa0
  4091da:	or     esi,DWORD PTR [ebp-0x49]
  4091dd:	fnsave [ecx+0x580e5559]
  4091e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091e4:	jo     0x409202
  4091e6:	jbe    0x4091a5
  4091e8:	out    0xa6,eax
  4091ea:	dec    ebx
  4091eb:	sub    cl,BYTE PTR [ebx]
  4091ed:	int3   
  4091ee:	cmp    bh,al
  4091f0:	mov    bh,0xf1
  4091f2:	ins    DWORD PTR es:[edi],dx
  4091f3:	enter  0xfd23,0xc8
  4091f7:	(bad)  
  4091f8:	xor    al,0xde
  4091fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091fb:	inc    esi
  4091fc:	adc    ebp,DWORD PTR ds:0x9e868dfc
  409202:	add    edx,DWORD PTR [eax]
  409204:	cld    
  409205:	and    bl,BYTE PTR [edi-0x598a0edb]
  40920b:	add    al,0xce
  40920d:	mov    al,ds:0xcd08c7f8
  409212:	xor    al,0x9e
  409214:	push   eax
  409215:	sub    eax,DWORD PTR [ebp+0x48]
  409218:	ins    BYTE PTR es:[edi],dx
  409219:	sti    
  40921a:	xchg   esp,eax
  40921b:	xlat   BYTE PTR ds:[ebx]
  40921c:	pop    ecx
  40921d:	jo     0x4091b6
  40921f:	(bad)  
  409220:	nop
  409221:	inc    esi
  409222:	and    esp,DWORD PTR [ecx+0x7c6a0157]
  409228:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409229:	fld    DWORD PTR [edi-0x2a7f1c49]
  40922f:	mov    dl,0x42
  409231:	lahf   
  409232:	cmp    edx,ebx
  409234:	out    0xa8,eax
  409236:	mov    ds:0x5a46542b,al
  40923b:	pop    es
  40923c:	and    eax,0x24712e75
  409241:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409242:	test   al,0xd0
  409244:	sub    esi,ecx
  409246:	mov    ebp,0x306ed919
  40924b:	(bad)  
  40924c:	and    BYTE PTR [esi+0x5d8a3d95],al
  409252:	adc    edx,eax
  409254:	out    0xe8,al
  409256:	cli    
  409257:	inc    ebx
  409258:	fwait
  409259:	jne    0x409213
  40925b:	jmp    0xbe2a:0xfc65ea1e
  409262:	dec    ebp
  409263:	jge    0x4091fc
  409265:	test   BYTE PTR [eax+0x73],dh
  409268:	jmp    0xc9ffecff
  40926d:	(bad)  
  40926e:	push   ebp
  40926f:	leave  
  409270:	push   esi
  409271:	jae    0x409244
  409273:	(bad)  
  409274:	mov    al,ds:0x82b2fdef
  409279:	hlt    
  40927a:	xchg   esp,eax
  40927b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40927c:	jno    0x409209
  40927e:	add    BYTE PTR [eax+0x32b31080],dh
  409284:	inc    eax
  409285:	mov    ds:0xa731045e,eax
  40928a:	lods   al,BYTE PTR ds:[esi]
  40928b:	fsub   st(2),st
  40928d:	mov    ds:0x38ddcdef,al
  409292:	retf   
  409293:	inc    esi
  409294:	jo     0x40929b
  409296:	and    al,0x56
  409298:	test   edi,edx
  40929a:	enter  0x612e,0x6e
  40929e:	fs cmp ah,cl
  4092a1:	cdq    
  4092a2:	and    edx,esi
  4092a4:	dec    ecx
  4092a5:	pop    edx
  4092a6:	rol    DWORD PTR [esi-0x78],0x78
  4092aa:	xor    BYTE PTR [esi*8-0x5cd217a4],0xd5
  4092b2:	jmp    0xa00f50d9
  4092b7:	jns    0x4092f9
  4092b9:	and    BYTE PTR [edi+0x6e],al
  4092bc:	ja     0x409300
  4092be:	jno    0x409264
  4092c0:	xchg   ebp,eax
  4092c1:	ds jge 0x409323
  4092c4:	(bad)  
  4092c5:	push   edi
  4092c6:	push   esp
  4092c7:	or     BYTE PTR [edi+0x73c2e04],dl
  4092cd:	push   ebp
  4092ce:	add    eax,0x92d1926a
  4092d3:	ror    DWORD PTR [eax],1
  4092d5:	push   es
  4092d6:	and    eax,0xeaff4002
  4092db:	setl   BYTE PTR [edi+0x17e1c32]
  4092e2:	into   
  4092e3:	rcl    BYTE PTR [edi+0x57],cl
  4092e6:	and    esi,esp
  4092e8:	push   edi
  4092e9:	mov    dl,0xec
  4092eb:	pop    ebx
  4092ec:	sub    DWORD PTR [ebp+eax*8-0x65f53f98],ecx
  4092f3:	scas   al,BYTE PTR es:[edi]
  4092f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092f5:	inc    eax
  4092f6:	scas   eax,DWORD PTR es:[edi]
  4092f7:	or     esi,edx
  4092f9:	xor    BYTE PTR [ecx+0x7f],dh
  4092fc:	push   ds
  4092fd:	adc    DWORD PTR [edi+0x70],ebx
  409300:	xor    edx,edi
  409302:	call   0xb11f0ecd
  409307:	shr    WORD PTR [ebp+0x51],1
  40930b:	mov    ebx,0x19ba509e
  409310:	and    DWORD PTR [ebp-0x2a],esi
  409313:	outs   dx,BYTE PTR ds:[esi]
  409314:	ret    
  409315:	and    edi,0xffffffc2
  409318:	sbb    BYTE PTR [esi],bh
  40931a:	mov    ah,0x19
  40931c:	fldpi  
  40931e:	test   BYTE PTR [ecx-0x72e1ea8],dl
  409324:	add    DWORD PTR [edi+0xebcd56e],0x6e0134e6
  40932e:	cdq    
  40932f:	popf   
  409330:	xchg   DWORD PTR [edi+0x71c9f48c],ebx
  409336:	add    al,BYTE PTR [ecx]
  409338:	mov    bh,0x24
  40933a:	retf   
  40933b:	(bad)  
  40933c:	in     eax,dx
  40933d:	stos   BYTE PTR es:[edi],al
  40933e:	jmp    0x74f1:0xdacb91c7
  409345:	mov    dh,BYTE PTR [ebx-0x1e]
  409348:	lock jge 0x409306
  40934b:	stos   BYTE PTR es:[edi],al
  40934c:	fadd   st,st(3)
  40934e:	inc    cx
  409350:	std    
  409351:	loop   0x40932c
  409353:	mov    ebx,0xe115ef93
  409358:	push   ebx
  409359:	daa    
  40935a:	out    dx,al
  40935b:	scas   al,BYTE PTR es:[edi]
  40935c:	jge    0x4093d4
  40935e:	rcr    edx,cl
  409360:	aad    0xce
  409362:	add    ch,BYTE PTR [edi-0x6847e662]
  409368:	dec    ebx
  409369:	xchg   esi,eax
  40936a:	xchg   esi,eax
  40936b:	imul   edi,DWORD PTR [eax-0x43],0x3
  40936f:	xchg   ebp,eax
  409370:	pop    ds
  409371:	jecxz  0x40932b
  409373:	mov    al,0x2f
  409375:	push   edx
  409376:	mov    ah,0x8f
  409378:	mov    ecx,0x67285e42
  40937d:	aaa    
  40937e:	repnz pop ss
  409380:	pushf  
  409381:	inc    esp
  409382:	fldenv [eax-0x1c]
  409385:	(bad)  
  409386:	das    
  409387:	shr    BYTE PTR [ecx],cl
  409389:	jecxz  0x409342
  40938b:	mov    ebx,0x4d027127
  409390:	cmp    DWORD PTR [ebx-0x4043b1f4],0x2f963a96
  40939a:	jb     0x4093f2
  40939c:	arpl   sp,dx
  40939e:	dec    edi
  40939f:	jl     0x409341
  4093a1:	dec    ebx
  4093a2:	xchg   edx,eax
  4093a3:	es in  eax,0x36
  4093a6:	mov    ch,0xad
  4093a8:	es sbb eax,0xb3c8dde8
  4093ae:	jae    0x409426
  4093b0:	(bad)  
  4093b2:	int    0x31
  4093b4:	dec    ebx
  4093b5:	rcr    BYTE PTR [edx+0x3d],1
  4093b8:	in     eax,dx
  4093b9:	and    bh,BYTE PTR [esi+ecx*2]
  4093bc:	mov    al,ds:0x4931716a
  4093c1:	and    DWORD PTR [edx+0x52],eax
  4093c4:	addr16 aam 0x4c
  4093c7:	dec    ebx
  4093c8:	popa   
  4093c9:	clc    
  4093ca:	or     ch,BYTE PTR [ebx]
  4093cc:	mov    ebp,0xb9a5efbe
  4093d1:	mov    ds:0x146adfce,al
  4093d6:	ds and al,0xf4
  4093d9:	pop    ds
  4093da:	stc    
  4093db:	rol    BYTE PTR [esi],1
  4093dd:	push   eax
  4093de:	or     edi,DWORD PTR [esi-0x20]
  4093e1:	dec    ebp
  4093e2:	ja     0x409382
  4093e4:	lock mov ah,0x8c
  4093e7:	addr16 dec eax
  4093e9:	jno    0x4093d4
  4093eb:	test   esi,ecx
  4093ed:	or     BYTE PTR [edx+0x7d],dl
  4093f0:	mov    ds:0xe8097d02,eax
  4093f5:	lods   eax,DWORD PTR ds:[esi]
  4093f6:	les    ebp,FWORD PTR [edx]
  4093f8:	test   al,0x87
  4093fa:	xchg   esp,eax
  4093fb:	adc    dh,bl
  4093fd:	imul   ecx,esi,0x43
  409400:	sahf   
  409401:	dec    eax
  409402:	inc    eax
  409403:	xchg   ebx,eax
  409404:	mov    al,ds:0xbd0403d0
  409409:	push   eax
  40940a:	les    edx,FWORD PTR [edx-0x21d96085]
  409410:	xchg   edi,eax
  409411:	inc    esi
  409412:	adc    eax,0xc7d85418
  409417:	xchg   di,ax
  409419:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40941a:	jno    0x409489
  40941c:	adc    bl,BYTE PTR [esi+0x49]
  40941f:	lods   al,BYTE PTR ds:[esi]
  409420:	pop    edi
  409421:	or     al,0xbb
  409423:	mov    esp,0x98983504
  409428:	mov    dh,0xbe
  40942a:	add    BYTE PTR [esi*1+0x5fc2b4bc],dh
  409431:	gs retf 
  409433:	or     ch,BYTE PTR [edi+0x39]
  409436:	mov    dl,0x85
  409438:	add    eax,0xabb1b51b
  40943d:	clc    
  40943e:	sub    DWORD PTR [ebx+0x48275118],0xfffffff9
  409445:	mov    WORD PTR [eax-0x3c],cs
  409448:	adc    al,0x26
  40944a:	pop    ss
  40944b:	aad    0xc1
  40944d:	aam    0x7e
  40944f:	dec    edi
  409450:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409451:	je     0x4094d2
  409453:	fdivr  DWORD PTR [ebx-0x78]
  409456:	shr    BYTE PTR [esi+eax*2+0x29],cl
  40945a:	mov    ah,al
  40945c:	sub    eax,0x9d5750b4
  409461:	bound  esi,QWORD PTR [ebx-0x42]
  409464:	jl     0x4093f7
  409466:	stc    
  409467:	xchg   DWORD PTR [ebx-0xe],eax
  40946a:	or     BYTE PTR [edi],bh
  40946c:	test   DWORD PTR [eax-0x6b],ebp
  40946f:	or     eax,0xd6bcde9e
  409474:	(bad)  
  409475:	pop    eax
  409476:	and    DWORD PTR [edi+0x3cdff8b0],ebx
  40947c:	retf   
  40947d:	in     eax,0xe9
  40947f:	push   ss
  409480:	outs   dx,DWORD PTR ds:[esi]
  409481:	mov    esi,0x799b5288
  409486:	cmp    BYTE PTR [ecx-0x367e5a01],bh
  40948c:	(bad)  
  40948d:	push   0xe85121c0
  409492:	(bad)  
  409493:	xlat   BYTE PTR ds:[ebx]
  409494:	xchg   ebx,eax
  409495:	out    dx,al
  409496:	push   ds
  409497:	retf   
  409498:	push   edx
  409499:	popf   
  40949a:	sub    eax,0x5ed861e2
  40949f:	out    dx,al
  4094a0:	adc    BYTE PTR [ebp-0x45a3c764],ah
  4094a6:	repz or dh,ch
  4094a9:	inc    ecx
  4094aa:	adc    eax,0x6ee4b301
  4094af:	jge    0x4094fc
  4094b1:	int3   
  4094b2:	imul   esp,ebp,0xfffffff6
  4094b5:	fcomp  DWORD PTR [ebx-0x26]
  4094b8:	pop    ecx
  4094b9:	push   edx
  4094ba:	mov    dl,0xc1
  4094bc:	test   BYTE PTR [ecx+0xa],al
  4094bf:	adc    DWORD PTR ds:[edx],ebp
  4094c2:	xor    eax,0xb2b8ee6
  4094c7:	or     al,0xb8
  4094c9:	mov    esi,edx
  4094cb:	aam    0xe2
  4094cd:	clc    
  4094ce:	enter  0xcb9c,0xb
  4094d2:	sbb    eax,0x16e9985b
  4094d7:	idiv   DWORD PTR ds:0x41d709e0
  4094dd:	pushf  
  4094de:	outs   dx,BYTE PTR ds:[esi]
  4094df:	jmp    0xc511d7d1
  4094e4:	in     al,0x64
  4094e6:	pop    ebp
  4094e7:	fiadd  DWORD PTR [ebx-0x7ca11fdb]
  4094ed:	pop    ss
  4094ee:	mov    esi,0xd3132e6
  4094f3:	mov    dh,0x93
  4094f5:	hlt    
  4094f6:	mov    eax,ds:0xfbba9ab9
  4094fb:	pop    eax
  4094fc:	loope  0x40953d
  4094fe:	or     eax,0x8ed6388d
  409503:	ja     0x40956f
  409505:	lods   al,BYTE PTR ds:[esi]
  409506:	adc    cl,ch
  409508:	xor    esp,DWORD PTR [edx+0x27e7e92f]
  40950e:	mov    ch,BYTE PTR [edi-0x64]
  409511:	xchg   ebx,eax
  409512:	shl    DWORD PTR [ebx],1
  409514:	aam    0xc1
  409516:	adc    DWORD PTR [ebx-0x32],ebx
  409519:	ins    DWORD PTR es:[edi],dx
  40951a:	dec    esp
  40951b:	lock outs dx,DWORD PTR ds:[esi]
  40951d:	inc    esi
  40951e:	jmp    0x40956f
  409520:	push   0x3b4babac
  409525:	or     al,BYTE PTR [esi+ebp*1+0x36]
  409529:	pop    edx
  40952a:	xor    dh,al
  40952c:	retf   0xb1f3
  40952f:	mov    bl,ah
  409531:	mov    DWORD PTR [edx+ebp*8-0x2f],esp
  409535:	je     0x409512
  409537:	xchg   ecx,eax
  409538:	pop    ecx
  409539:	mov    BYTE PTR [esi-0x52],bl
  40953c:	retf   0xe52c
  40953f:	hlt    
  409540:	add    DWORD PTR [ebp-0x52],edx
  409543:	call   0xf54f:0x77509013
  40954a:	stos   DWORD PTR es:[edi],eax
  40954b:	push   ecx
  40954c:	out    dx,al
  40954d:	addr16 push es
  40954f:	jo     0x4095c6
  409551:	aas    
  409552:	inc    edx
  409553:	adc    ebx,DWORD PTR [ebx-0x1d]
  409556:	lahf   
  409557:	push   ecx
  409558:	dec    edi
  409559:	xchg   DWORD PTR [edx],edx
  40955b:	div    BYTE PTR [edi+0x44c095f3]
  409561:	mov    ds:0x681ba064,al
  409566:	mov    al,0x86
  409568:	jmp    0xaf8bf577
  40956d:	fsubr  QWORD PTR [edx-0x717585e6]
  409573:	mov    bl,0xda
  409575:	inc    esi
  409576:	dec    ecx
  409577:	pop    ss
  409578:	ret    0xfbfa
  40957b:	int    0x9a
  40957d:	or     esi,ebp
  40957f:	jge    0x4095e0
  409581:	or     dl,ch
  409583:	pop    esi
  409584:	dec    edi
  409585:	cmp    al,0xa6
  409587:	mov    ds:0x80cce4f0,eax
  40958c:	mov    eax,ds:0xee9578b9
  409591:	jno    0x4095f1
  409593:	jmp    FWORD PTR ds:0x4911926b
  409599:	fsub   QWORD PTR [ebx]
  40959b:	xchg   edi,eax
  40959c:	dec    DWORD PTR [edx+ebx*2-0x65afe9fe]
  4095a3:	inc    edx
  4095a4:	cmp    ebp,esp
  4095a6:	adc    BYTE PTR [eax+0x2],dh
  4095a9:	jnp    0x4095bb
  4095ab:	pushf  
  4095ac:	mov    dl,0xa9
  4095ae:	dec    ebp
  4095af:	clc    
  4095b0:	xchg   edi,eax
  4095b1:	push   0x1
  4095b3:	mov    ds:0xc7de9b79,eax
  4095b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095b9:	jle    0x40956c
  4095bb:	xchg   esi,eax
  4095bc:	(bad)  
  4095bd:	int    0xe3
  4095bf:	jo     0x4095b9
  4095c1:	mov    ebx,0xeae15851
  4095c6:	pop    ecx
  4095c7:	xchg   BYTE PTR [edi],dh
  4095c9:	gs mov esp,0x8cc870e
  4095cf:	and    al,0x14
  4095d1:	add    esp,ebx
  4095d3:	sti    
  4095d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095d5:	std    
  4095d6:	sbb    DWORD PTR [edx+0x244a5290],edi
  4095dc:	jmp    0x4095c2
  4095de:	shr    BYTE PTR [ebx+edx*8-0x50],1
  4095e2:	jg     0x409661
  4095e4:	dec    edi
  4095e5:	pop    ebp
  4095e6:	popf   
  4095e7:	and    dl,cl
  4095e9:	mov    BYTE PTR [ebx-0x7b68782f],ch
  4095ef:	lock or DWORD PTR [edi-0x39],eax
  4095f3:	pop    ss
  4095f4:	push   ebp
  4095f5:	adc    esp,DWORD PTR [edx-0x43]
  4095f8:	lahf   
  4095f9:	xchg   BYTE PTR [ecx],dl
  4095fb:	loop   0x4095fc
  4095fd:	out    0xec,eax
  4095ff:	adc    BYTE PTR [ebx-0x31],bl
  409602:	sbb    ecx,eax
  409604:	and    cl,BYTE PTR [esi-0x2e875345]
  40960a:	clc    
  40960b:	sub    cl,ch
  40960d:	mov    WORD PTR [edi-0x56],ss
  409610:	hlt    
  409611:	mov    ebx,0x2a87adf
  409616:	and    DWORD PTR [ecx+0x24d9aace],edx
  40961c:	mov    ds:0x8e4c8cc5,al
  409621:	pop    ecx
  409622:	ds (bad) 
  409624:	loopne 0x4095ca
  409626:	sub    DWORD PTR [ecx],edi
  409628:	or     cl,BYTE PTR [esi+ecx*1]
  40962b:	inc    ebp
  40962c:	add    ch,BYTE PTR [ebx-0x4d]
  40962f:	add    dl,BYTE PTR es:[edi]
  409632:	mov    ebx,0xab9378a4
  409637:	adc    al,0xcd
  409639:	aaa    
  40963a:	mov    ebp,0x57759c0e
  40963f:	inc    edx
  409640:	(bad)  
  409641:	int3   
  409642:	sbb    eax,0xaff8b990
  409647:	loop   0x409606
  409649:	fwait
  40964a:	cdq    
  40964b:	add    ecx,DWORD PTR [edi]
  40964d:	scas   al,BYTE PTR es:[edi]
  40964e:	div    BYTE PTR [edi+0x68e992b9]
  409654:	arpl   sp,ax
  409656:	sbb    ah,0xcf
  409659:	imul   ebp,esp,0x42be9da9
  40965f:	mov    bl,BYTE PTR [edx-0x38c1aa96]
  409665:	or     DWORD PTR [esi-0x1d],ecx
  409668:	aam    0xa4
  40966a:	xchg   ecx,eax
  40966b:	js     0x409610
  40966d:	pop    eax
  40966e:	inc    eax
  40966f:	shl    BYTE PTR [eax-0x33],0x52
  409673:	pop    ebp
  409674:	xor    DWORD PTR [ebp-0x3d389e5e],eax
  40967a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40967b:	pusha  
  40967c:	jo     0x4096fa
  40967e:	dec    DWORD PTR [edi]
  409680:	test   al,0xea
  409682:	or     al,0x10
  409684:	inc    ebx
  409685:	clc    
  409686:	cmp    BYTE PTR [eax+0x2cd15d2e],ah
  40968c:	ins    BYTE PTR es:[edi],dx
  40968d:	cmp    esi,DWORD PTR [ebp*2+0x7736db54]
  409694:	xchg   edx,eax
  409695:	loopne 0x409664
  409697:	xchg   BYTE PTR [eax-0x1e8151f4],bl
  40969d:	packssdw mm0,QWORD PTR [eax+0x41bd18f8]
  4096a4:	addr16 mul edx
  4096a7:	push   edx
  4096a8:	and    cl,BYTE PTR [ebx]
  4096aa:	out    0x75,eax
  4096ac:	push   ds
  4096ad:	cmp    ah,bl
  4096af:	addr16 enter 0x8d89,0x83
  4096b4:	and    DWORD PTR ds:0xe28ae0a6,ebx
  4096ba:	or     edi,DWORD PTR [edx+0x174b31f0]
  4096c0:	test   BYTE PTR [ebx-0x7e],ch
  4096c3:	imul   DWORD PTR [eax]
  4096c5:	aam    0xfb
  4096c7:	imul   esi,DWORD PTR [ecx],0xd
  4096ca:	ds cmc 
  4096cc:	mov    cl,0x9d
  4096ce:	adc    dl,BYTE PTR [edi+0x31d7887a]
  4096d4:	and    BYTE PTR [edx-0x18],dh
  4096d7:	clc    
  4096d8:	popf   
  4096d9:	ss cld 
  4096db:	ins    DWORD PTR es:[edi],dx
  4096dc:	adc    edi,esp
  4096de:	xor    eax,0x25cc5bb8
  4096e3:	ins    DWORD PTR es:[edi],dx
  4096e4:	test   eax,0xb4b99af6
  4096e9:	cmp    eax,0x83b25f1d
  4096ee:	xchg   esp,eax
  4096ef:	xor    dh,BYTE PTR [esi+ebp*8+0x5e]
  4096f3:	mov    al,0x3
  4096f5:	and    esi,esi
  4096f7:	scas   al,BYTE PTR es:[edi]
  4096f8:	fstp   DWORD PTR [edx-0x582491d]
  4096fe:	jmp    0x51bd:0x287a1959
  409705:	scas   eax,DWORD PTR es:[edi]
  409706:	inc    ecx
  409707:	test   al,0xf0
  409709:	inc    eax
  40970a:	push   ss
  40970b:	push   0xde7dd60a
  409710:	enter  0xaa82,0x35
  409714:	xchg   ebp,eax
  409715:	and    eax,0xefa12816
  40971a:	es jo  0x409777
  40971d:	xor    eax,0x84cb6e1c
  409722:	aam    0x19
  409724:	mov    DWORD PTR [ecx+0xd],ebx
  409727:	mov    ecx,0xa5e7e7b2
  40972c:	inc    edi
  40972d:	mov    ebx,0x6b822e9
  409732:	div    ebx
  409734:	les    ebx,FWORD PTR [edx+0x28b6ff5a]
  40973a:	pop    edx
  40973b:	mov    ds:0xbbca882e,al
  409740:	(bad)  
  409741:	in     eax,0x7d
  409743:	repnz cmc 
  409745:	fistp  QWORD PTR [edx-0x2f]
  409748:	retf   0x1602
  40974b:	inc    ecx
  40974c:	or     esp,0xbb7c00b2
  409752:	dec    edi
  409753:	lea    esi,[eax]
  409755:	jmp    0x409713
  409757:	xor    ch,BYTE PTR [ecx+0x19]
  40975a:	cmp    al,BYTE PTR ds:[eax]
  40975d:	jno    0x4097ad
  40975f:	push   0xffffffd6
  409761:	add    eax,0x995696cd
  409766:	xchg   edx,eax
  409767:	push   0xffffff9e
  409769:	xor    dl,ch
  40976b:	mov    ecx,0x913c26b7
  409770:	xchg   ecx,eax
  409771:	inc    ecx
  409772:	lods   eax,DWORD PTR ds:[esi]
  409773:	dec    ebp
  409774:	hlt    
  409775:	xchg   ecx,eax
  409776:	shl    BYTE PTR [edx+0x6dd2a9f3],0x9a
  40977d:	mov    cl,0x87
  40977f:	rcr    BYTE PTR [esi+0x757750fd],1
  409785:	int    0xfd
  409787:	xchg   edi,eax
  409788:	mov    bh,0x3a
  40978a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40978b:	adc    ebp,esp
  40978d:	xchg   BYTE PTR [ebx],cl
  40978f:	or     eax,0x30dcc74c
  409794:	adc    BYTE PTR [ecx-0x4446f3c8],dl
  40979a:	je     0x409752
  40979c:	test   BYTE PTR [eax+0xd319634],0x99
  4097a3:	outs   dx,BYTE PTR ds:[esi]
  4097a4:	jb     0x409757
  4097a6:	lods   eax,DWORD PTR ds:[esi]
  4097a7:	mov    ds:0xa11413ab,al
  4097ac:	xchg   edi,eax
  4097ad:	fisubr WORD PTR [ebp-0x32]
  4097b0:	mov    ch,0xd2
  4097b2:	inc    edx
  4097b3:	cmp    eax,0x10ca8ce
  4097b8:	repnz push es
  4097ba:	mov    dl,0xd7
  4097bc:	xchg   edi,eax
  4097bd:	addr16 push esi
  4097bf:	popf   
  4097c0:	pusha  
  4097c1:	popf   
  4097c2:	dec    edx
  4097c3:	xchg   ebp,eax
  4097c4:	packuswb mm4,QWORD PTR ds:0x8bc398b6
  4097cb:	fcom   QWORD PTR [edi]
  4097cd:	pushf  
  4097ce:	mov    ds:0xbdb06e06,eax
  4097d3:	fidivr WORD PTR [edi]
  4097d5:	je     0x409831
  4097d7:	jg     0x409801
  4097d9:	fs and al,0xc0
  4097dc:	mov    esp,0x5007f3ac
  4097e1:	not    DWORD PTR [edi]
  4097e3:	inc    ebx
  4097e4:	or     ebp,DWORD PTR [ebp+0x44]
  4097e7:	push   0x2fc8cfc7
  4097ec:	test   DWORD PTR [esi+0x65e3c848],ecx
  4097f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097f3:	faddp  st(6),st
  4097f5:	push   esp
  4097f6:	jmp    0x409791
  4097f8:	rcl    BYTE PTR [ecx],cl
  4097fa:	aaa    
  4097fb:	xchg   esi,eax
  4097fc:	repnz push esi
  4097fe:	aaa    
  4097ff:	and    ecx,0x166f8e3
  409805:	push   0x8ec9846a
  40980a:	sub    al,0xb6
  40980c:	ror    DWORD PTR [eax+edx*2],0xd0
  409810:	rcl    BYTE PTR ds:0x5f74174a,1
  409816:	mov    ah,0x1f
  409818:	xchg   DWORD PTR [ebx+0x6d],eax
  40981b:	mov    ch,0x7b
  40981d:	scas   eax,DWORD PTR es:[edi]
  40981e:	xchg   esi,eax
  40981f:	adc    DWORD PTR ds:0xd408e888,eax
  409825:	mov    bl,0xb4
  409827:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409828:	and    al,0x21
  40982a:	adc    DWORD PTR [edx],esp
  40982c:	jge    0x4097da
  40982e:	js     0x409828
  409830:	ss mov edi,0xa85834a5
  409836:	inc    DWORD PTR [esp+edx*4-0x22bd86fa]
  40983d:	add    ch,BYTE PTR [ebp-0x55]
  409840:	loop   0x4098a8
  409842:	jae    0x4097ee
  409844:	stos   BYTE PTR es:[edi],al
  409845:	inc    eax
  409846:	mov    eax,0x65bce95e
  40984b:	aaa    
  40984c:	cmp    ah,BYTE PTR [ecx+0x67fb5aa0]
  409852:	pop    es
  409853:	push   cs
  409854:	adc    al,0x12
  409856:	cmovs  edx,DWORD PTR [ecx+0x4e]
  40985a:	cmp    eax,0xe6f4c29b
  40985f:	cli    
  409860:	mov    ebp,0xac77646a
  409865:	rol    DWORD PTR [edx],cl
  409867:	push   esp
  409868:	into   
  409869:	int3   
  40986a:	repz call 0xef51a180
  409870:	scas   eax,DWORD PTR es:[edi]
  409871:	cmp    bl,BYTE PTR [eax]
  409873:	rol    DWORD PTR [ebx+ebx*2],1
  409876:	aaa    
  409877:	mov    al,ds:0x2b9b4bee
  40987c:	xchg   esp,eax
  40987d:	and    esi,DWORD PTR [ebp-0x29ca0ea3]
  409883:	mov    esp,0x3bf8f6d6
  409888:	mov    esp,0x726658a2
  40988d:	cdq    
  40988e:	mov    ebp,0x1716d3d0
  409893:	jae    0x409874
  409895:	push   edx
  409896:	(bad)  
  409897:	jb     0x40986f
  409899:	in     al,0x8
  40989b:	cmp    eax,0xafc9cbb7
  4098a0:	nop
  4098a1:	xchg   ebx,eax
  4098a2:	mov    esi,0x33605c60
  4098a7:	xchg   esp,eax
  4098a8:	leave  
  4098a9:	xor    DWORD PTR [eax+0x389fe011],0x84020173
  4098b3:	or     eax,0x6f9ca2b3
  4098b8:	in     eax,0xa0
  4098ba:	jnp    0x409903
  4098bc:	jne    0x409875
  4098be:	pop    edi
  4098bf:	sub    al,0xf3
  4098c1:	xchg   esi,eax
  4098c2:	js     0x409909
  4098c4:	and    BYTE PTR [edi+0x5],dl
  4098c7:	je     0x40992d
  4098c9:	daa    
  4098ca:	add    al,BYTE PTR [ebx]
  4098cc:	iret   
  4098cd:	mov    bl,0x94
  4098cf:	pop    edx
  4098d0:	outs   dx,BYTE PTR ds:[esi]
  4098d1:	xchg   ecx,eax
  4098d2:	mov    cl,0xc6
  4098d4:	ds pushf 
  4098d6:	xor    eax,0x7b8d01d7
  4098db:	dec    ebx
  4098dc:	iret   
  4098dd:	mov    bh,0x4d
  4098df:	add    DWORD PTR [eax],esi
  4098e1:	fwait
  4098e2:	mov    dh,0xf5
  4098e4:	dec    eax
  4098e5:	and    eax,0x2cb9eb7a
  4098ea:	mov    ds:0x4ce8af4e,eax
  4098ef:	cwde   
  4098f0:	fs push edi
  4098f2:	sub    BYTE PTR [edx-0x7fc12bb],dl
  4098f8:	mov    dl,0x85
  4098fa:	popf   
  4098fb:	leave  
  4098fc:	std    
  4098fd:	sub    eax,0x9980855a
  409902:	(bad)  
  409903:	or     BYTE PTR gs:[ebx+0x7d655f18],bh
  40990a:	xlat   BYTE PTR ds:[ebx]
  40990b:	lods   eax,DWORD PTR ds:[esi]
  40990c:	rcr    BYTE PTR [eax+0x7f7e4a5e],cl
  409912:	ret    
  409913:	mov    dh,0xc2
  409915:	or     al,0x7c
  409917:	pop    es
  409918:	or     eax,0x143bef7d
  40991d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40991e:	add    al,0x7a
  409920:	pushf  
  409921:	mov    DWORD PTR [esi+0x9],ebx
  409924:	stos   DWORD PTR es:[edi],eax
  409925:	ror    BYTE PTR [ebx],1
  409927:	fiadd  DWORD PTR [edi+esi*1]
  40992a:	or     eax,ebx
  40992c:	aaa    
  40992d:	fs adc al,0xb4
  409930:	push   esi
  409931:	in     eax,0xef
  409933:	mov    ah,0x31
  409935:	mov    ecx,0x88d35e1e
  40993a:	jle    0x409907
  40993c:	mov    ebx,0x55e963db
  409941:	dec    ecx
  409942:	repnz (bad) 
  409944:	out    dx,al
  409945:	push   ecx
  409946:	add    ah,cl
  409948:	aam    0xcf
  40994a:	sbb    BYTE PTR [eax],ah
  40994c:	pop    esp
  40994d:	inc    esp
  40994e:	add    DWORD PTR [edi+0x299f662a],ebp
  409954:	mov    esp,0xcf9cc74a
  409959:	jmp    FWORD PTR [edi+0x26a7e0dc]
  40995f:	repnz xchg ebp,eax
  409961:	mov    bh,0x54
  409963:	dec    esi
  409964:	push   edi
  409965:	mov    esp,0x5d1d5996
  40996a:	addr16 (bad) 
  40996e:	push   edi
  40996f:	jl     0x409998
  409971:	push   ss
  409972:	lea    ecx,[ecx-0x4f8e4602]
  409978:	(bad)  
  40997a:	jae    0x409935
  40997c:	add    BYTE PTR [edx+edi*4],bh
  40997f:	dec    ecx
  409980:	icebp  
  409981:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  409983:	push   esi
  409984:	loope  0x409935
  409986:	(bad)  
  409988:	aam    0xdf
  40998a:	jno    0x4099de
  40998c:	mov    dl,0x49
  40998e:	pop    ecx
  40998f:	repz (bad) 
  409991:	lea    ebp,[edi+0x76c3de69]
  409997:	sbb    ah,bl
  409999:	xor    dl,BYTE PTR [edx-0x3c]
  40999c:	push   0xb7d37f6e
  4099a1:	rcl    DWORD PTR [ebp+0x31d11473],cl
  4099a7:	jns    0x409a18
  4099a9:	inc    edx
  4099aa:	push   edx
  4099ab:	or     al,0x71
  4099ad:	std    
  4099ae:	jp     0x409a01
  4099b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099b1:	(bad)  
  4099b2:	out    0xbf,eax
  4099b4:	mov    ds:0x8027fd4a,eax
  4099b9:	jno    0x409948
  4099bb:	sbb    al,0x85
  4099bd:	popa   
  4099be:	sbb    eax,0x9069be23
  4099c3:	push   eax
  4099c4:	aaa    
  4099c5:	cmp    edx,DWORD PTR [ecx+0x3c]
  4099c8:	or     ch,ch
  4099ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099cb:	mov    edx,edx
  4099cd:	ret    
  4099ce:	adc    DWORD PTR [ebx+edx*2+0x3a],esp
  4099d2:	out    dx,eax
  4099d3:	stos   BYTE PTR es:[edi],al
  4099d4:	adc    al,0x4c
  4099d6:	mov    esp,0x94022e8c
  4099db:	sbb    al,0x59
  4099dd:	(bad)  
  4099de:	dec    esp
  4099df:	push   esp
  4099e0:	inc    eax
  4099e1:	test   eax,0x5b271f1e
  4099e6:	popf   
  4099e7:	xor    BYTE PTR [ebp-0x73f270f0],bh
  4099ed:	sbb    DWORD PTR ss:[edi],esi
  4099f0:	inc    ecx
  4099f1:	pusha  
  4099f2:	lods   al,BYTE PTR ds:[esi]
  4099f3:	sub    al,0x7
  4099f5:	add    esi,DWORD PTR [esi+0x4f80b26e]
  4099fb:	push   ebx
  4099fc:	sbb    al,0xc0
  4099fe:	gs pop ds
  409a00:	inc    edx
  409a01:	in     al,0x6f
  409a03:	push   0xffffffe2
  409a05:	frstor [esi]
  409a07:	out    0xb5,al
  409a09:	adc    DWORD PTR [edx],esi
  409a0b:	jbe    0x409a79
  409a0d:	mov    ah,bh
  409a0f:	into   
  409a10:	push   edx
  409a11:	jg     0x409a06
  409a13:	sub    eax,0x478fa20e
  409a18:	jmp    0x686e4e6f
  409a1d:	add    al,dh
  409a1f:	mov    dl,0x98
  409a21:	jp     0x409a05
  409a23:	dec    esp
  409a24:	clc    
  409a25:	or     BYTE PTR [esi+0x30],cl
  409a28:	pop    ebx
  409a29:	into   
  409a2a:	seto   BYTE PTR [ebx]
  409a2d:	(bad)  
  409a2f:	lahf   
  409a30:	lods   eax,DWORD PTR ds:[esi]
  409a31:	stos   DWORD PTR es:[edi],eax
  409a32:	jg     0x409a3e
  409a34:	sub    al,0x69
  409a36:	mov    BYTE PTR [esi+0x47813fe],cl
  409a3c:	dec    esi
  409a3d:	add    al,0x70
  409a3f:	std    
  409a40:	cmp    ah,dh
  409a42:	dec    eax
  409a43:	(bad)  
  409a44:	jae    0x4099ed
  409a46:	sbb    BYTE PTR [ecx+0x50246fb3],cl
  409a4c:	aas    
  409a4d:	cmp    eax,0x32df8b00
  409a52:	out    0x95,eax
  409a54:	or     esi,DWORD PTR [ebp-0x6f5a1aad]
  409a5a:	dec    esi
  409a5b:	lods   eax,DWORD PTR ds:[esi]
  409a5c:	retfw  
  409a5e:	and    al,0x11
  409a60:	inc    ebx
  409a61:	xor    bl,bh
  409a63:	push   cs
  409a64:	pop    fs
  409a66:	xadd   ah,bl
  409a69:	jb     0xf85a1203
  409a6f:	in     al,dx
  409a70:	sbb    BYTE PTR [ecx+0x226cbd12],0x19
  409a77:	push   edi
  409a78:	add    dl,BYTE PTR [ebp-0x62]
  409a7b:	lods   al,BYTE PTR ds:[esi]
  409a7c:	sub    eax,0x686d9ea
  409a81:	sub    ecx,DWORD PTR [eax+ebx*4]
  409a84:	pop    esi
  409a85:	or     eax,0x4b6847f1
  409a8a:	ror    esi,0x41
  409a8d:	mov    eax,0x334b9403
  409a92:	push   0xbf214e79
  409a97:	fcmovb st,st(5)
  409a99:	push   esi
  409a9a:	and    DWORD PTR [esi-0x7e],edx
  409a9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a9e:	cmp    al,0x9f
  409aa0:	inc    ebp
  409aa1:	adc    ah,BYTE PTR [esi-0x80]
  409aa4:	fcmovnu st,st(6)
  409aa6:	(bad)  
  409aa7:	mov    cl,0x12
  409aa9:	jne    0x409a8e
  409aab:	or     al,0x2a
  409aad:	out    dx,eax
  409aae:	jle    0x409a7c
  409ab0:	rcr    BYTE PTR ss:[ebx],0x1d
  409ab4:	and    bl,ah
  409ab6:	xor    DWORD PTR [esi+0xc],esp
  409ab9:	pusha  
  409aba:	jnp    0x409b09
  409abc:	jae    0x409aa0
  409abe:	shl    BYTE PTR [edi-0x3a9db80d],cl
  409ac4:	gs test eax,0x9b8f353b
  409aca:	jmp    0x22632997
  409acf:	add    DWORD PTR [ecx],eax
  409ad1:	xlat   BYTE PTR ds:[ebx]
  409ad2:	aaa    
  409ad3:	push   ds
  409ad4:	cmp    ch,BYTE PTR [ecx+0x29b101c]
  409ada:	sub    DWORD PTR [esi],ebp
  409adc:	dec    ecx
  409add:	dec    ecx
  409ade:	ja     0x409a7d
  409ae0:	mov    edx,0x4ac160a4
  409ae5:	push   ss
  409ae6:	ror    BYTE PTR [esi+0x74],cl
  409ae9:	arpl   WORD PTR [edi+0x6c],dx
  409aec:	pop    eax
  409aed:	in     eax,dx
  409aee:	sub    ecx,DWORD PTR [ebp-0x3b]
  409af1:	xor    eax,0x1e4e220d
  409af6:	jnp    0x409b16
  409af8:	cli    
  409af9:	push   ds
  409afa:	xchg   edi,eax
  409afb:	lock sub BYTE PTR [ecx+0x74399630],ah
  409b02:	in     al,0xf9
  409b04:	int    0xf5
  409b06:	push   es
  409b07:	fcmovnu st,st(4)
  409b09:	jecxz  0x409ab2
  409b0b:	mov    cl,bh
  409b0d:	mov    DWORD PTR [eax+ebp*4+0x2cd49303],ebx
  409b14:	or     DWORD PTR [ebp-0x418c9958],edi
  409b1a:	push   es
  409b1b:	xchg   edx,eax
  409b1c:	out    dx,al
  409b1d:	in     eax,0xc0
  409b1f:	pusha  
  409b20:	cld    
  409b21:	sbb    BYTE PTR [ebp+edi*2+0xa],dh
  409b25:	nop
  409b26:	fcmovnbe st,st(5)
  409b28:	mov    ah,0x2b
  409b2a:	gs in  eax,0xc9
  409b2d:	mov    edx,0x7f3f9ae0
  409b32:	scas   eax,DWORD PTR es:[edi]
  409b33:	mov    ds:0xa7075347,eax
  409b38:	mov    ecx,0xa903430f
  409b3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b3e:	mov    edi,0xac5fc07a
  409b43:	mov    ebx,0xd6810e4e
  409b48:	mov    dh,0x31
  409b4a:	jns    0x409b02
  409b4c:	aad    0x53
  409b4e:	sti    
  409b4f:	push   0xffffffee
  409b51:	call   0x5e0c4704
  409b56:	out    dx,al
  409b57:	loopne 0x409b28
  409b59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b5a:	mov    esi,DWORD PTR [ecx+0x46]
  409b5d:	mov    edi,0xdf281629
  409b62:	jge    0x409b8a
  409b64:	sbb    DWORD PTR [ebx+ebp*1-0x58],ebx
  409b68:	int3   
  409b69:	outs   dx,DWORD PTR ds:[esi]
  409b6a:	les    eax,FWORD PTR [ebp+edx*2-0x41d35056]
  409b71:	mov    ebx,0x1cebd420
  409b76:	push   cs
  409b77:	pop    ecx
  409b78:	push   esi
  409b79:	int3   
  409b7a:	dec    ebp
  409b7b:	jbe    0x409bc2
  409b7d:	dec    BYTE PTR [ebp+0x50]
  409b80:	mov    eax,ds:0x2686736
  409b85:	fcomp  DWORD PTR [ebx-0x314397cb]
  409b8b:	adc    dh,BYTE PTR [edx-0x62]
  409b8e:	mov    DWORD PTR [esi+0x6dc757c5],ebp
  409b94:	xlat   BYTE PTR ds:[ebx]
  409b95:	pop    es
  409b96:	scas   eax,DWORD PTR es:[edi]
  409b97:	fcomp  QWORD PTR [eax-0x199c1fe0]
  409b9d:	popa   
  409b9e:	inc    eax
  409b9f:	mov    cl,0xf1
  409ba1:	outs   dx,DWORD PTR ds:[esi]
  409ba2:	sbb    al,0xf6
  409ba4:	or     eax,0xe0f391b5
  409ba9:	ins    DWORD PTR es:[edi],dx
  409baa:	pop    esp
  409bab:	fwait
  409bac:	rcl    DWORD PTR [eax],cl
  409bae:	xor    BYTE PTR [esi-0x1da5c4e6],0x42
  409bb5:	fisubr WORD PTR [edx]
  409bb7:	stc    
  409bb8:	dec    ecx
  409bb9:	and    DWORD PTR [edi+0x748bd639],esi
  409bbf:	ins    DWORD PTR es:[edi],dx
  409bc0:	push   es
  409bc1:	mov    bh,0xe2
  409bc3:	pop    ebx
  409bc4:	test   eax,0xf5b783a7
  409bc9:	cmp    DWORD PTR [edx],ebx
  409bcb:	shl    BYTE PTR [ecx+0x58],0xd3
  409bcf:	xor    BYTE PTR [ecx-0x3321ae74],0xa
  409bd6:	and    esp,edx
  409bd8:	in     al,dx
  409bd9:	jg     0x409bd8
  409bdb:	jb     0x409b6c
  409bdd:	push   ds
  409bde:	das    
  409bdf:	pop    edx
  409be0:	push   eax
  409be2:	ret    
  409be3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409be4:	mov    ah,0xd
  409be6:	fild   WORD PTR ds:[eax]
  409be9:	in     eax,dx
  409bea:	cdq    
  409beb:	jecxz  0x409c30
  409bed:	or     al,0x6c
  409bef:	sbb    dh,BYTE PTR [ebp+0x6c]
  409bf2:	cs mov ah,0xc7
  409bf5:	pop    ss
  409bf6:	sbb    BYTE PTR ds:0x943a5dee,ah
  409bfc:	ret    
  409bfd:	mov    cs,WORD PTR [ebx-0x6]
  409c00:	test   al,0x4a
  409c02:	mov    edx,0xa6fcf4dc
  409c07:	retf   
  409c08:	jle    0x409c1e
  409c0a:	enter  0xe1fa,0x7b
  409c0e:	pop    esi
  409c0f:	lock xchg ebx,eax
  409c11:	imul   eax,ecx,0xe2a7f23c
  409c17:	add    BYTE PTR [esi-0x6],dl
  409c1a:	(bad)  [eax-0x417b030]
  409c20:	rep lods eax,DWORD PTR ds:[esi]
  409c22:	xor    al,0xaa
  409c24:	fist   WORD PTR [edx+0x6b53bde9]
  409c2a:	adc    al,0x5
  409c2c:	dec    edx
  409c2d:	cmp    ecx,DWORD PTR [eax-0x3213ff1c]
  409c33:	dec    esi
  409c34:	xchg   edx,eax
  409c35:	es sub ebx,ecx
  409c38:	or     eax,0x487d2c60
  409c3d:	push   ds
  409c3e:	daa    
  409c3f:	ins    DWORD PTR es:[edi],dx
  409c40:	sbb    eax,0xa0389f79
  409c45:	jne    0x409c5f
  409c47:	(bad)  
  409c48:	adc    BYTE PTR [edi-0x4d5b1c2b],bl
  409c4e:	iret   
  409c4f:	das    
  409c50:	and    BYTE PTR [eax+0x8a4aa6b],ch
  409c56:	loop   0x409c86
  409c58:	ret    
  409c59:	sar    DWORD PTR [ecx],0xe3
  409c5c:	or     ax,0xff43
  409c60:	repz dec eax
  409c62:	jae    0x409cd0
  409c64:	aad    0x46
  409c66:	iret   
  409c67:	sbb    BYTE PTR [esi-0x74205f0c],ah
  409c6d:	cmp    ecx,eax
  409c6f:	pop    ebx
  409c70:	add    eax,0x25506ae9
  409c75:	leave  
  409c76:	xchg   dh,al
  409c78:	push   cs
  409c79:	(bad)  [ebx+esi*2]
  409c7c:	push   edi
  409c7d:	xchg   esp,eax
  409c7e:	call   0xa3878e31
  409c83:	dec    esi
  409c84:	sbb    edx,DWORD PTR [ebx]
  409c86:	add    al,0xed
  409c88:	call   0xa3e5:0xe36823b9
  409c8f:	mov    ds:0xd4415ee7,al
  409c94:	aam    0xf9
  409c96:	push   cs
  409c97:	xor    al,0xdc
  409c99:	and    DWORD PTR [ebx-0x2e4cb63f],ebx
  409c9f:	shl    DWORD PTR [edi+0x309ecb71],cl
  409ca5:	mov    ah,0xea
  409ca7:	push   ecx
  409ca8:	stc    
  409ca9:	out    dx,al
  409caa:	mov    esi,0x2052a395
  409caf:	dec    ebp
  409cb0:	push   ecx
  409cb1:	pop    esp
  409cb3:	out    dx,al
  409cb4:	xlat   BYTE PTR ds:[ebx]
  409cb5:	jl     0x409c61
  409cb7:	inc    ebx
  409cb8:	push   ecx
  409cb9:	push   0x1
  409cbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cbc:	xor    eax,edx
  409cbe:	bound  ebx,QWORD PTR [eax]
  409cc0:	pop    ebx
  409cc1:	and    BYTE PTR [edx+0x23],0xec
  409cc5:	add    BYTE PTR [eax],ah
  409cc7:	mov    WORD PTR [ebp+esi*4-0x8],fs
  409ccb:	(bad)  
  409ccc:	xchg   ebp,eax
  409ccd:	and    al,0xdf
  409ccf:	pushf  
  409cd0:	sar    BYTE PTR ds:0xf171fec2,cl
  409cd6:	push   ecx
  409cd7:	jge    0x409d16
  409cd9:	pop    esi
  409cda:	xor    DWORD PTR [ecx+0x55af0847],edx
  409ce0:	dec    eax
  409ce1:	lods   al,BYTE PTR ds:[esi]
  409ce2:	push   edx
  409ce3:	pop    edx
  409ce4:	lods   eax,DWORD PTR ds:[esi]
  409ce5:	lahf   
  409ce6:	mov    ebx,0x82b67134
  409ceb:	adc    BYTE PTR ds:0x1e514272,ch
  409cf1:	(bad)  
  409cf2:	and    edi,DWORD PTR [esi]
  409cf4:	shl    DWORD PTR [esp+eiz*4-0x765a42f9],cl
  409cfb:	(bad)  [eax+0x13]
  409cfe:	fneni(8087 only) 
  409d00:	jnp    0x409d31
  409d02:	or     dl,BYTE PTR [esi-0x41e9f29c]
  409d08:	mov    BYTE PTR [edi+0x59],al
  409d0b:	enter  0xb23d,0x7e
  409d0f:	dec    ebx
  409d10:	imul   edi,DWORD PTR [edi+0x7],0xf2b39f5d
  409d17:	lock dec edx
  409d19:	fidiv  WORD PTR [esi]
  409d1b:	addr16 out dx,al
  409d1d:	mov    eax,ds:0xdee09c20
  409d22:	push   0x2e27cf2a
  409d27:	(bad)  
  409d28:	jmp    0x62d820ee
  409d2d:	stc    
  409d2e:	and    DWORD PTR [edx],ebp
  409d30:	jg     0x409d3e
  409d32:	out    0xb6,eax
  409d34:	repz popa 
  409d36:	imul   edx,DWORD PTR [edx],0x40
  409d39:	or     esi,0xffffffd5
  409d3c:	adc    edx,DWORD PTR [edx]
  409d3e:	mov    dl,0x39
  409d40:	ins    BYTE PTR es:[edi],dx
  409d41:	ss push 0xffffff82
  409d44:	mov    al,ds:0x23f9a5c0
  409d49:	push   esi
  409d4a:	aam    0x78
  409d4c:	cs jns 0x409d72
  409d4f:	shl    DWORD PTR [edx],cl
  409d51:	ds jmp 0x219f40b9
  409d57:	mov    edi,0xd2d949ad
  409d5c:	fstp   TBYTE PTR [edx-0x7c]
  409d5f:	in     al,dx
  409d60:	les    ebp,FWORD PTR [esi+0x1f704ff0]
  409d66:	sub    al,0x4a
  409d68:	in     eax,dx
  409d69:	aas    
  409d6a:	test   DWORD PTR [eax+0x74],edx
  409d6d:	mov    edx,0xdc44678b
  409d72:	push   0x1e
  409d74:	push   0x76dcce4b
  409d79:	pop    ss
  409d7a:	(bad)  
  409d7b:	cwde   
  409d7c:	sub    ecx,ecx
  409d7e:	(bad)  
  409d7f:	pop    eax
  409d80:	outs   dx,BYTE PTR ds:[esi]
  409d81:	and    BYTE PTR [eax-0x7ec5a456],dh
  409d87:	imul   edi,DWORD PTR [ebx],0x8d4ab510
  409d8d:	es dec esi
  409d8f:	(bad)  
  409d90:	add    DWORD PTR [edi+eax*8],edi
  409d93:	int3   
  409d94:	stos   BYTE PTR es:[edi],al
  409d95:	lahf   
  409d96:	popa   
  409d97:	push   ebp
  409d98:	jbe    0x409d6b
  409d9a:	push   ebx
  409d9b:	cmp    bl,BYTE PTR [eax]
  409d9d:	cmp    al,0x13
  409d9f:	aaa    
  409da0:	or     al,0xcf
  409da2:	pop    esp
  409da3:	cmp    al,0xfe
  409da5:	sub    eax,0x8fa8c307
  409daa:	fst    DWORD PTR [ebx]
  409dac:	ror    DWORD PTR [ecx],cl
  409dae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409daf:	jno    0x409d44
  409db1:	inc    esi
  409db2:	sub    DWORD PTR [ebx+0xda8b633],0xc5555bf9
  409dbc:	clc    
  409dbd:	out    0x66,al
  409dbf:	repz je 0x409e3a
  409dc2:	add    DWORD PTR [edi+0x5e04c237],ebx
  409dc8:	outs   dx,BYTE PTR ds:[esi]
  409dc9:	out    dx,eax
  409dca:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409dcc:	mov    ch,0x40
  409dce:	imul   ebx,DWORD PTR [esi-0x28],0xffffff82
  409dd2:	je     0x409e47
  409dd4:	jp     0x409e1d
  409dd6:	retf   0xf47f
  409dd9:	cli    
  409dda:	sti    
  409ddb:	sbb    al,0xf2
  409ddd:	cs xor al,0x12
  409de0:	ds sub al,0x65
  409de3:	add    ebp,edx
  409de5:	lock push esi
  409de7:	imul   DWORD PTR [esp+edx*1-0x90930f2]
  409dee:	xlat   BYTE PTR ds:[ebx]
  409def:	call   0x4232:0x5b7a68f9
  409df6:	sti    
  409df7:	lahf   
  409df8:	push   ebx
  409df9:	das    
  409dfa:	pop    ebx
  409dfb:	cmp    BYTE PTR [edi-0x466d5cbe],bh
  409e01:	sub    ebx,DWORD PTR ds:0x84afdaef
  409e07:	push   ds
  409e08:	scas   al,BYTE PTR es:[edi]
  409e09:	test   eax,0x3251cc60
  409e0e:	dec    esi
  409e0f:	popf   
  409e10:	(bad)  
  409e11:	xor    esi,DWORD PTR [ebp-0x33]
  409e14:	outs   dx,DWORD PTR ds:[esi]
  409e15:	xchg   ebx,eax
  409e16:	mov    al,ds:0x4d35fefa
  409e1b:	psubusw mm2,QWORD PTR [ebx]
  409e1e:	ins    DWORD PTR es:[edi],dx
  409e1f:	mov    al,0xe1
  409e21:	stos   BYTE PTR es:[edi],al
  409e22:	xchg   edx,eax
  409e23:	xchg   edi,eax
  409e24:	into   
  409e25:	and    eax,ecx
  409e27:	sti    
  409e28:	jp     0x409e66
  409e2a:	(bad)  
  409e2b:	mul    ebx
  409e2d:	loope  0x409e80
  409e2f:	cld    
  409e30:	cmc    
  409e31:	jmp    0x409ea2
  409e33:	stos   DWORD PTR es:[edi],eax
  409e34:	test   BYTE PTR [ebx-0x6a],bl
  409e37:	mov    dl,0x1e
  409e39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e3a:	lea    ecx,gs:[edx-0x7f2af87]
  409e41:	je     0x409e5f
  409e43:	scas   al,BYTE PTR es:[edi]
  409e44:	jmp    0x409ddf
  409e46:	ror    ch,0xae
  409e49:	stc    
  409e4a:	xor    eax,0x13f93b3a
  409e4f:	or     eax,DWORD PTR [edi-0x2d4c4c6f]
  409e55:	in     al,dx
  409e56:	pop    esi
  409e57:	out    0x87,al
  409e59:	call   0xd5e5ec8d
  409e5e:	ds sub ch,ch
  409e61:	fwait
  409e62:	sub    edx,edx
  409e64:	dec    esp
  409e65:	fist   DWORD PTR [edi+ebx*2-0x2]
  409e69:	xchg   DWORD PTR es:[edx],ecx
  409e6c:	sbb    BYTE PTR [eax-0x45],ch
  409e6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e70:	push   eax
  409e71:	sbb    eax,0xbb7a6bb6
  409e76:	and    al,0x8
  409e78:	lods   al,BYTE PTR ds:[esi]
  409e79:	jg     0x409ec6
  409e7b:	pop    ebx
  409e7c:	outs   dx,DWORD PTR ds:[esi]
  409e7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e7e:	xor    al,0x41
  409e80:	jp     0x409e64
  409e82:	mov    eax,ds:0xfdd9817e
  409e87:	outs   dx,BYTE PTR ds:[esi]
  409e88:	push   0xc29fd60b
  409e8d:	sbb    al,0x42
  409e8f:	es push edx
  409e91:	repz mov ebx,ebx
  409e94:	mov    dl,0x63
  409e96:	or     ecx,edi
  409e98:	dec    ecx
  409e99:	sub    DWORD PTR [edx+0x3c],edx
  409e9c:	jb     0x409e99
  409e9e:	cdq    
  409e9f:	je     0x409e2f
  409ea1:	adc    BYTE PTR [edx],dh
  409ea3:	pop    edi
  409ea4:	mov    cl,BYTE PTR ds:0x3b71f811
  409eaa:	adc    bl,BYTE PTR [ebx-0xa]
  409ead:	(bad)  
  409eae:	in     al,0x10
  409eb0:	cwde   
  409eb1:	and    eax,0x23dc791c
  409eb6:	and    dl,ah
  409eb8:	add    edx,ebx
  409eba:	push   cs
  409ebb:	add    ch,BYTE PTR [ebx]
  409ebd:	hlt    
  409ebe:	adc    eax,0x6baf00a8
  409ec3:	fwait
  409ec4:	leave  
  409ec5:	icebp  
  409ec6:	xchg   edx,eax
  409ec7:	mov    ch,0x7f
  409ec9:	test   eax,0x918abf1d
  409ece:	cli    
  409ecf:	or     al,0x34
  409ed1:	cmp    al,ah
  409ed3:	push   0xc2d2c9d2
  409ed8:	mov    edx,0xfa3084f0
  409edd:	mov    eax,0xabe6747c
  409ee2:	pop    ss
  409ee3:	push   0xf1933510
  409ee8:	adc    eax,0x3a303e5b
  409eed:	(bad)  
  409eef:	mov    DWORD PTR [edi+esi*2],esi
  409ef2:	inc    ebp
  409ef3:	xchg   esi,eax
  409ef4:	adc    al,0x2d
  409ef6:	add    ah,BYTE PTR [edi-0x6dc13d4]
  409efc:	mov    ds:0x4e1c2701,al
  409f01:	stos   BYTE PTR es:[edi],al
  409f02:	in     al,dx
  409f03:	addr16 mov ds:0xf6a4,al
  409f07:	xchg   ebx,eax
  409f08:	xor    DWORD PTR [esi],esi
  409f0a:	cld    
  409f0b:	jmp    0x409f15
  409f0d:	popf   
  409f0e:	or     BYTE PTR [edi*8-0x4daf0831],cl
  409f15:	lock xchg BYTE PTR [esi],ah
  409f18:	jae    0x409f3f
  409f1a:	or     ch,BYTE PTR [esi]
  409f1c:	addr16 jl 0x409f65
  409f1f:	sub    dl,BYTE PTR [esi]
  409f21:	add    al,0x17
  409f23:	loope  0x409f60
  409f25:	int3   
  409f26:	jae    0x409f8a
  409f28:	fwait
  409f29:	xchg   ebx,eax
  409f2a:	dec    ebp
  409f2b:	idiv   edi
  409f2d:	pop    ss
  409f2e:	cdq    
  409f2f:	cmc    
  409f30:	cmp    BYTE PTR [ebp+eax*2-0x76a93067],al
  409f37:	aad    0xf5
  409f39:	jnp    0x409f2d
  409f3b:	jbe    0x409f6b
  409f3d:	fmul   QWORD PTR [edx+eiz*1-0x15ec3635]
  409f44:	mov    ds:0x4043761b,eax
  409f49:	inc    edx
  409f4a:	js     0x409f9a
  409f4c:	sub    DWORD PTR [edx],edi
  409f4e:	jbe    0x409fa0
  409f50:	sbb    al,0x1b
  409f52:	push   ebx
  409f53:	(bad)  
  409f54:	in     al,dx
  409f55:	jl     0x409f61
  409f57:	push   edx
  409f58:	fsub   DWORD PTR [esi-0x55]
  409f5b:	out    dx,al
  409f5c:	scas   al,BYTE PTR es:[edi]
  409f5d:	stos   BYTE PTR es:[edi],al
  409f5e:	add    al,0xc0
  409f60:	out    dx,al
  409f61:	xor    BYTE PTR [ebx-0x3013d963],al
  409f67:	sbb    al,0xf1
  409f69:	jmp    0xe058a316
  409f6e:	and    al,0x61
  409f70:	into   
  409f71:	mov    cl,0x90
  409f73:	jne    0x409fcc
  409f75:	loop   0x409fa2
  409f77:	clc    
  409f78:	call   0xcf4e:0xb1199d14
  409f7f:	sub    edi,DWORD PTR [eax]
  409f81:	cld    
  409f82:	jmp    0x409f2b
  409f84:	add    eax,0x4809e3ac
  409f89:	push   ds
  409f8a:	pushf  
  409f8b:	call   0x877d:0xde4d3a30
  409f92:	or     ebx,esi
  409f94:	xchg   esp,eax
  409f95:	or     al,0xc5
  409f97:	stos   BYTE PTR es:[edi],al
  409f98:	aas    
  409f99:	ins    DWORD PTR es:[edi],dx
  409f9a:	push   es
  409f9b:	test   eax,0x8a7675
  409fa0:	cmp    eax,0x78ad1894
  409fa5:	stos   DWORD PTR es:[edi],eax
  409fa6:	mov    eax,ds:0x555d5f7e
  409fab:	dec    edx
  409fac:	das    
  409fad:	jle    0x409f75
  409faf:	fsubr  st,st(5)
  409fb1:	gs push ebp
  409fb3:	stos   BYTE PTR es:[edi],al
  409fb4:	in     al,0x43
  409fb6:	retf   0x6fd1
  409fb9:	jmp    0x409fdf
  409fbb:	lods   eax,DWORD PTR ds:[esi]
  409fbc:	aaa    
  409fbd:	pop    es
  409fbe:	adc    al,0x1c
  409fc0:	call   0xc751:0xf14bfd44
  409fc7:	stc    
  409fc8:	dec    esp
  409fc9:	lods   eax,DWORD PTR ds:[esi]
  409fca:	add    BYTE PTR [edx-0x5b1edc2b],dl
  409fd0:	repnz lods eax,DWORD PTR ds:[esi]
  409fd2:	inc    edx
  409fd3:	push   esi
  409fd4:	sub    cl,BYTE PTR [edx-0x47]
  409fd7:	cwde   
  409fd8:	mov    BYTE PTR [ebx+0x54433b78],al
  409fde:	out    dx,al
  409fdf:	shl    BYTE PTR [ecx],0x73
  409fe2:	mov    ecx,0x39b9ede7
  409fe7:	inc    ebx
  409fe8:	inc    edi
  409fe9:	sahf   
  409fea:	leave  
  409feb:	sbb    edi,DWORD PTR [ebp+0x16]
  409fee:	mov    esi,0xec9d104
  409ff3:	mov    al,0x26
  409ff5:	push   0xbfc8e3f7
  409ffa:	cmp    eax,0x42b0e52a
  409fff:	rcr    bh,0x3a
  40a002:	mov    dl,0x97
  40a004:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40a006:	(bad)  [eax+esi*4]
  40a009:	je     0x40a049
  40a00b:	rcl    BYTE PTR [edx-0x78],1
  40a00e:	outs   dx,DWORD PTR ds:[esi]
  40a00f:	repz jb 0x40a07a
  40a012:	xchg   ebx,eax
  40a013:	lods   al,BYTE PTR ds:[esi]
  40a014:	push   ebp
  40a015:	inc    ecx
  40a016:	cmp    DWORD PTR [ecx+0x57b51922],esi
  40a01c:	mov    ch,0x9f
  40a01e:	cmp    bh,BYTE PTR [edx+0x41]
  40a021:	pop    esi
  40a022:	test   BYTE PTR [edx-0x33],ch
  40a025:	dec    ecx
  40a026:	mov    DWORD PTR [edi+eiz*1],0xb4ee662d
  40a02d:	sbb    dl,BYTE PTR [ebx+0x2f]
  40a030:	mov    ds:0x31fdcede,al
  40a035:	cmp    eax,0x735e2b02
  40a03a:	(bad)  
  40a03b:	xchg   ebp,eax
  40a03c:	mov    BYTE PTR [ebx+ecx*4],bh
  40a03f:	sub    eax,0xd91c245d
  40a044:	lahf   
  40a045:	jae    0x40a013
  40a047:	xor    DWORD PTR [ecx],edx
  40a049:	inc    esi
  40a04a:	ret    
  40a04b:	adc    cl,dh
  40a04d:	adc    esi,DWORD PTR [si-0x10]
  40a051:	push   es
  40a052:	rcr    BYTE PTR [ebx],cl
  40a054:	mov    edi,esi
  40a056:	pop    esp
  40a057:	enter  0xfe37,0x15
  40a05b:	pop    ds
  40a05c:	iret   
  40a05d:	inc    ebx
  40a05e:	inc    edi
  40a05f:	and    BYTE PTR [edx+edi*2+0x69],bl
  40a063:	cmp    al,0x47
  40a065:	jecxz  0x40a07a
  40a067:	mov    ds:0x19af42e1,al
  40a06c:	ins    DWORD PTR es:[edi],dx
  40a06d:	(bad)  
  40a06e:	hlt    
  40a06f:	nop
  40a070:	mov    esi,0x6330f99f
  40a075:	loopne 0x40a0d5
  40a077:	into   
  40a078:	xor    edx,0x672f8614
  40a07e:	enter  0xbc8d,0xec
  40a082:	jnp    0x40a0cc
  40a084:	xchg   edx,eax
  40a085:	fcmovne st,st(0)
  40a087:	dec    esi
  40a088:	sub    dh,BYTE PTR [esi+0x4d6a22e8]
  40a08e:	pop    ebx
  40a08f:	mov    ds:0xb5474b3c,al
  40a094:	mov    DWORD PTR [ecx-0x593c4a8e],esi
  40a09a:	cmp    bl,dl
  40a09c:	in     al,0x98
  40a09e:	les    ebp,FWORD PTR [esi-0x322edaca]
  40a0a4:	call   0x94d7ce02
  40a0a9:	jbe    0x40a05a
  40a0ab:	mov    eax,0x39cefbb2
  40a0b0:	xchg   edx,eax
  40a0b1:	xor    al,0x46
  40a0b3:	jnp    0x40a0c5
  40a0b5:	ins    BYTE PTR es:[edi],dx
  40a0b6:	rcr    DWORD PTR [edx],cl
  40a0b8:	jecxz  0x40a126
  40a0ba:	cdq    
  40a0bb:	imul   ecx,ecx,0xffffff83
  40a0be:	pop    ebp
  40a0bf:	mov    al,ds:0xb4e431ef
  40a0c4:	out    0xe6,eax
  40a0c6:	ficom  DWORD PTR [esi+eax*8+0x65]
  40a0ca:	ins    BYTE PTR es:[edi],dx
  40a0cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0cc:	jmp    0x40a0f6
  40a0ce:	push   ss
  40a0cf:	sar    BYTE PTR [esi-0x78],cl
  40a0d2:	xchg   ebp,eax
  40a0d3:	out    0x5b,eax
  40a0d5:	test   BYTE PTR [ebx+edx*2],0x92
  40a0d9:	push   es
  40a0da:	pop    edi
  40a0db:	sbb    edi,DWORD PTR [esi+0x5338f538]
  40a0e1:	mov    ebx,0x68222962
  40a0e6:	pop    eax
  40a0e7:	sbb    al,0x43
  40a0e9:	stos   BYTE PTR es:[edi],al
  40a0ea:	iret   
  40a0eb:	fucomi st,st(6)
  40a0ed:	xchg   ecx,eax
  40a0ee:	jbe    0x40a0ef
  40a0f0:	lock xchg ecx,eax
  40a0f2:	add    DWORD PTR [ebp+0x53],edx
  40a0f5:	je     0x40a16f
  40a0f7:	cmc    
  40a0f8:	jb     0x40a14b
  40a0fa:	dec    ecx
  40a0fb:	add    ch,BYTE PTR [ebp+0x43299585]
  40a101:	add    ebp,DWORD PTR [ecx]
  40a103:	inc    edx
  40a104:	cdq    
  40a105:	pop    eax
  40a106:	nop
  40a107:	push   ebp
  40a108:	inc    ecx
  40a109:	(bad)  
  40a10b:	les    esi,FWORD PTR [esi+0x64]
  40a10e:	aam    0xbc
  40a110:	call   0xa640:0x27fe1c69
  40a117:	sub    eax,0xed2622a6
  40a11c:	iret   
  40a11d:	xor    eax,0xb7210d7e
  40a122:	scas   al,BYTE PTR es:[edi]
  40a123:	add    al,0x10
  40a125:	mov    ebx,0xe64bb0a0
  40a12a:	pusha  
  40a12b:	push   ss
  40a12c:	loopne 0x40a166
  40a12e:	adc    al,0xdb
  40a130:	pop    ebx
  40a131:	scas   al,BYTE PTR es:[edi]
  40a132:	arpl   WORD PTR [ecx],cx
  40a134:	imul   esi,DWORD PTR [edi],0x18418ee1
  40a13a:	add    BYTE PTR [edi],0xc8
  40a13d:	jmp    DWORD PTR [edx-0x63bc956f]
  40a143:	sbb    al,0x43
  40a145:	pop    ebx
  40a146:	fs shl ecx,1
  40a149:	sahf   
  40a14a:	add    ebp,DWORD PTR [ebp-0x3b21c6ab]
  40a150:	sahf   
  40a151:	and    eax,ebp
  40a153:	lea    eax,[ebx-0x75]
  40a156:	jecxz  0x40a1d5
  40a158:	sbb    DWORD PTR [ebp-0x24],esp
  40a15b:	in     eax,dx
  40a15c:	int3   
  40a15d:	daa    
  40a15e:	out    dx,al
  40a15f:	adc    al,0x4b
  40a161:	xchg   edi,eax
  40a162:	(bad)  
  40a163:	mov    bh,0xc9
  40a165:	sub    al,0x47
  40a167:	adc    eax,0x4b56b001
  40a16c:	add    al,0x53
  40a16e:	mov    al,ds:0x925c7498
  40a173:	stos   BYTE PTR es:[edi],al
  40a174:	sub    al,0x1d
  40a176:	scas   eax,DWORD PTR es:[edi]
  40a177:	pop    ss
  40a178:	xchg   DWORD PTR [edx+0x65d4a7df],eax
  40a17e:	lods   eax,DWORD PTR ds:[esi]
  40a17f:	and    eax,0xc5437b20
  40a184:	inc    ebp
  40a185:	clc    
  40a186:	das    
  40a187:	sub    edx,esi
  40a189:	outs   dx,BYTE PTR ds:[esi]
  40a18a:	fstp   QWORD PTR [edx-0x3f]
  40a18d:	push   cs
  40a18e:	sbb    ecx,ecx
  40a190:	fmul   DWORD PTR [ecx]
  40a192:	mov    ecx,0xdbdd9af2
  40a197:	jg     0x40a18d
  40a199:	inc    edi
  40a19a:	xor    dh,BYTE PTR [edi+0x7bc094c5]
  40a1a0:	mov    ds:0xff168b89,eax
  40a1a5:	jl     0x40a1d4
  40a1a7:	daa    
  40a1a8:	sbb    edi,ebx
  40a1aa:	lahf   
  40a1ab:	leave  
  40a1ac:	fimul  WORD PTR [ecx]
  40a1ae:	sbb    DWORD PTR [esi-0x4f0f089d],eax
  40a1b4:	mov    bx,0xab48
  40a1b8:	in     al,0xba
  40a1ba:	scas   eax,DWORD PTR es:[edi]
  40a1bb:	ins    BYTE PTR es:[edi],dx
  40a1bc:	pop    ebx
  40a1bd:	aad    0x9b
  40a1bf:	or     eax,0x6c51c2ac
  40a1c4:	div    BYTE PTR [ebx+0x4a]
  40a1c7:	pop    esp
  40a1c8:	leave  
  40a1c9:	and    DWORD PTR [eax],edx
  40a1cb:	and    DWORD PTR [edx+0x44a5328d],ebx
  40a1d1:	outs   dx,BYTE PTR ds:[esi]
  40a1d2:	pop    esi
  40a1d3:	hlt    
  40a1d4:	(bad)  
  40a1d5:	ror    edi,1
  40a1d7:	push   ebp
  40a1d8:	inc    edi
  40a1d9:	es aad 0x6b
  40a1dc:	push   edi
  40a1dd:	sub    BYTE PTR [edi+0x1db23d7e],bl
  40a1e3:	fwait
  40a1e4:	cli    
  40a1e5:	push   edi
  40a1e6:	and    esi,edx
  40a1e8:	loopne 0x40a1e3
  40a1ea:	js     0x40a246
  40a1ec:	out    0x9a,al
  40a1ee:	nop
  40a1ef:	loop   0x40a1fa
  40a1f1:	fcomi  st,st(2)
  40a1f3:	gs into 
  40a1f5:	dec    ebx
  40a1f6:	pop    eax
  40a1f7:	sub    ecx,esp
  40a1f9:	fdivr  QWORD PTR [ebx]
  40a1fb:	add    edx,edi
  40a1fd:	cli    
  40a1fe:	and    DWORD PTR [esi+0x77],edi
  40a201:	mov    edx,esp
  40a203:	loopne 0x40a1f9
  40a205:	adc    dh,BYTE PTR [ebx-0x35]
  40a208:	jge    0x40a1fd
  40a20a:	and    eax,0x213f5f43
  40a20f:	xchg   DWORD PTR [ebp+0x40c692a1],eax
  40a215:	imul   eax,ecx,0x63
  40a218:	jno    0x40a223
  40a21a:	push   edi
  40a21b:	pop    ecx
  40a21c:	(bad)  
  40a21d:	iret   
  40a21e:	push   cs
  40a21f:	jae    0x40a221
  40a221:	xchg   esi,eax
  40a222:	stc    
  40a223:	xchg   ebx,eax
  40a224:	sbb    eax,DWORD PTR [edi+0x7c]
  40a227:	out    0x97,eax
  40a229:	stos   DWORD PTR es:[edi],eax
  40a22a:	jo     0x40a24a
  40a22c:	jp     0x40a220
  40a22e:	mov    cl,0x7
  40a230:	stos   DWORD PTR es:[edi],eax
  40a231:	pop    ebp
  40a232:	add    dh,0x45
  40a235:	mov    eax,ds:0xa4eb5013
  40a23a:	aad    0x5d
  40a23c:	jae    0x40a2a4
  40a23e:	mov    ds:0xfa133f73,eax
  40a243:	xchg   ebp,eax
  40a244:	jge    0x40a247
  40a246:	(bad)  
  40a247:	nop    DWORD PTR [ecx+eax*8]
  40a24b:	loopne 0x40a1f3
  40a24d:	sbb    eax,0xef858abe
  40a252:	loopne 0x40a215
  40a254:	jne    0x40a2aa
  40a256:	mov    ebp,DWORD PTR [edx+0x2cebec51]
  40a25c:	inc    esi
  40a25d:	loop   0x40a24e
  40a25f:	call   0x638492a9
  40a264:	adc    DWORD PTR [ecx-0x3e],0x7cc86ed
  40a26b:	shr    DWORD PTR [esi+0xc],0x52
  40a26f:	mov    WORD PTR [edi+edi*8+0xb9ce9a5],?
  40a276:	or     bh,BYTE PTR [ecx-0x20]
  40a279:	sub    bl,BYTE PTR fs:[esi]
  40a27c:	es pop esp
  40a27e:	or     dh,0x47
  40a281:	jl     0x40a27f
  40a283:	mov    ebx,0xdd682377
  40a288:	adc    ecx,DWORD PTR ds:0xa7070954
  40a28e:	je     0x40a259
  40a290:	je     0x40a243
  40a292:	pop    ecx
  40a293:	mov    al,ds:0x8039c638
  40a298:	jae    0x40a2fb
  40a29a:	inc    esp
  40a29b:	test   bh,bl
  40a29d:	and    DWORD PTR [ebp+0x30],ecx
  40a2a0:	in     al,dx
  40a2a1:	dec    BYTE PTR [ebp-0x75d426a1]
  40a2a7:	xchg   edx,eax
  40a2a8:	jp     0x40a31a
  40a2aa:	mov    edi,0x129ddc0
  40a2af:	fisub  WORD PTR [edi+0x10]
  40a2b2:	(bad)  
  40a2b3:	int    0x4e
  40a2b5:	test   BYTE PTR ds:0x3b54e913,dl
  40a2bb:	fcom   QWORD PTR [edi+edi*8]
  40a2be:	outs   dx,DWORD PTR ds:[esi]
  40a2bf:	pop    eax
  40a2c0:	aaa    
  40a2c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2c2:	dec    edx
  40a2c3:	shl    ebx,cl
  40a2c5:	(bad)  
  40a2c7:	lock sbb BYTE PTR [edi],0xb8
  40a2cb:	and    al,0x6c
  40a2cd:	ins    DWORD PTR es:[edi],dx
  40a2ce:	push   0xffffffec
  40a2d0:	and    BYTE PTR [edx],cl
  40a2d2:	push   edi
  40a2d3:	in     al,dx
  40a2d4:	neg    ebx
  40a2d6:	and    edx,edx
  40a2d8:	test   DWORD PTR [ebp+0x8c6eb92],edx
  40a2de:	jl     0x40a2fe
  40a2e0:	aad    0x87
  40a2e2:	pop    edi
  40a2e3:	fisubr DWORD PTR [ecx+0x5d]
  40a2e6:	fcomp  QWORD PTR [esp+edx*8]
  40a2e9:	pop    edx
  40a2ea:	shr    DWORD PTR [esi],1
  40a2ec:	nop
  40a2ed:	outs   dx,DWORD PTR ds:[esi]
  40a2ee:	shr    esp,1
  40a2f0:	inc    ecx
  40a2f1:	sti    
  40a2f2:	pop    ds
  40a2f3:	dec    ecx
  40a2f4:	adc    ch,BYTE PTR [edx-0x306506f5]
  40a2fa:	mov    eax,ds:0x24d1169b
  40a2ff:	vpcmpgtd ymm7,ymm3,YMMWORD PTR [ebp-0x2c]
  40a304:	rcr    bl,1
  40a306:	add    DWORD PTR gs:[ebx-0x2b],ecx
  40a30a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a30b:	inc    edx
  40a30c:	sbb    si,WORD PTR [eax-0x5e1a33f0]
  40a313:	test   BYTE PTR [esi-0x6d],0xd1
  40a317:	xor    bl,BYTE PTR [esi+0x17]
  40a31a:	sbb    BYTE PTR [ecx+esi*8+0x38],ah
  40a31e:	shl    BYTE PTR [ebx],cl
  40a320:	jecxz  0x40a332
  40a322:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a323:	out    0x66,al
  40a325:	hlt    
  40a326:	cdq    
  40a327:	add    ecx,DWORD PTR [eax+0x4f]
  40a32a:	repnz inc eax
  40a32c:	xchg   edi,eax
  40a32d:	out    0xe5,eax
  40a32f:	or     BYTE PTR [ebx+0x48],bh
  40a332:	arpl   WORD PTR [esi-0x54],sp
  40a335:	sub    DWORD PTR [eax-0x6c68d7d8],ebp
  40a33b:	out    dx,al
  40a33c:	addr16 popf 
  40a33e:	bound  ebp,QWORD PTR [eax+0x4035fb3c]
  40a344:	pop    ebx
  40a345:	mov    fs,edx
  40a347:	push   edx
  40a348:	dec    eax
  40a34a:	es cwde 
  40a34c:	mov    ds:0x7e64aa88,al
  40a351:	jmp    0x8616a176
  40a356:	in     eax,0xc3
  40a358:	ins    DWORD PTR es:[edi],dx
  40a359:	xchg   DWORD PTR [edx+0x360e2b41],ecx
  40a35f:	xor    bl,BYTE PTR [edi-0x1e18ef78]
  40a365:	(bad)  [ebp+0x59b603d2]
  40a36b:	sti    
  40a36c:	mov    dh,0xdb
  40a36e:	nop
  40a36f:	out    dx,eax
  40a370:	jne    0x40a3ae
  40a372:	pop    ebp
  40a374:	pop    esi
  40a375:	call   0xd1e3:0x99818bb6
  40a37c:	jo     0x40a32c
  40a37e:	xor    eax,0xa8ed306e
  40a383:	ja     0x40a33e
  40a385:	outs   dx,BYTE PTR ds:[esi]
  40a386:	outs   dx,BYTE PTR ds:[esi]
  40a387:	cmp    DWORD PTR [esi],edx
  40a389:	in     eax,dx
  40a38a:	aad    0x6
  40a38c:	loopne 0x40a38a
  40a38e:	push   ds
  40a38f:	dec    edi
  40a390:	(bad)  
  40a391:	lods   al,BYTE PTR ds:[esi]
  40a392:	adc    al,BYTE PTR [ecx+eax*1-0x67]
  40a396:	pop    ss
  40a397:	mov    eax,esi
  40a399:	xchg   edx,eax
  40a39a:	shl    DWORD PTR [edx+ebp*4-0x6b74496e],1
  40a3a1:	jae    0x40a349
  40a3a3:	stos   DWORD PTR es:[edi],eax
  40a3a4:	xor    edx,DWORD PTR [edi+0x29863936]
  40a3aa:	pop    ebp
  40a3ab:	jns    0x40a3fb
  40a3ad:	outs   dx,DWORD PTR ds:[esi]
  40a3ae:	add    BYTE PTR [ebx*8-0x299810e],cl
  40a3b5:	push   ecx
  40a3b6:	sti    
  40a3b7:	xor    al,0xdf
  40a3b9:	xor    eax,0xad2091e1
  40a3be:	push   0xffffffb3
  40a3c0:	in     al,dx
  40a3c1:	in     al,dx
  40a3c2:	lds    esp,FWORD PTR [ecx-0x67]
  40a3c5:	test   BYTE PTR [eax-0x4bc71bcf],ch
  40a3cb:	xor    DWORD PTR [eax-0x51],ecx
  40a3ce:	sbb    BYTE PTR [edx+ecx*1],bl
  40a3d1:	sub    edi,esi
  40a3d3:	(bad)  
  40a3d4:	jno    0x40a37c
  40a3d6:	sbb    al,0xe8
  40a3d8:	std    
  40a3d9:	adc    eax,0x339a8a4
  40a3de:	(bad)  
  40a3df:	aam    0x1a
  40a3e1:	pop    ecx
  40a3e2:	sbb    eax,0xc87d1490
  40a3e7:	lock cmc 
  40a3e9:	je     0x40a419
  40a3eb:	hlt    
  40a3ec:	out    0x41,eax
  40a3ee:	(bad)  [ebx+edi*1+0x69fe1aaa]
  40a3f5:	out    0x62,eax
  40a3f7:	xor    esi,DWORD PTR [esi+0x24]
  40a3fa:	xchg   edx,eax
  40a3fb:	div    esp
  40a3fd:	stc    
  40a3fe:	jne    0x40a3a4
  40a400:	mov    dl,0x14
  40a402:	jns    0x40a395
  40a404:	mov    ds,WORD PTR [edi+0x25]
  40a407:	sbb    edx,DWORD PTR [ecx+0x52adc519]
  40a40d:	aas    
  40a40e:	repnz pop esi
  40a410:	ret    0xd793
  40a413:	in     al,dx
  40a414:	test   eax,0xbdf87fd1
  40a419:	xlat   BYTE PTR ds:[ebx]
  40a41a:	gs inc ebp
  40a41c:	adc    bl,dh
  40a41e:	lock (bad) 
  40a420:	xchg   ebp,eax
  40a421:	sbb    al,0x8e
  40a423:	xchg   ebp,eax
  40a424:	imul   ebp,DWORD PTR [ebx+ebx*1-0x714cca75],0x318f6d86
  40a42f:	jns    0x40a405
  40a431:	add    al,BYTE PTR [ecx-0x51]
  40a434:	cs jne 0x40a4a0
  40a437:	outs   dx,BYTE PTR ds:[esi]
  40a438:	jno    0x40a3d6
  40a43a:	rcr    BYTE PTR [eax],cl
  40a43c:	arpl   WORD PTR [esi],di
  40a43e:	lods   al,BYTE PTR ds:[esi]
  40a43f:	push   cs
  40a440:	xor    eax,0x11feb029
  40a445:	xor    al,0x88
  40a447:	adc    ebx,DWORD PTR [ebx]
  40a449:	push   0x31a0b254
  40a44e:	and    eax,0x8a11b26b
  40a453:	pop    edi
  40a454:	cli    
  40a455:	sahf   
  40a456:	mov    ebp,0x55916c5f
  40a45b:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a45d:	jo     0x40a3e7
  40a45f:	int3   
  40a460:	stos   BYTE PTR es:[edi],al
  40a461:	jno    0x40a48e
  40a463:	jnp    0x40a46d
  40a465:	inc    eax
  40a466:	outs   dx,DWORD PTR ds:[esi]
  40a467:	and    edx,DWORD PTR [edi+ebp*2]
  40a46a:	mov    ch,0x5
  40a46c:	lods   eax,DWORD PTR ds:[esi]
  40a46d:	test   eax,eax
  40a46f:	in     al,dx
  40a470:	cmp    al,0x15
  40a472:	push   esi
  40a473:	push   eax
  40a474:	inc    esi
  40a475:	or     ch,dl
  40a477:	sbb    DWORD PTR [ecx-0x34],edx
  40a47a:	push   ds
  40a47b:	repnz cmp ecx,esi
  40a47e:	out    0xf7,eax
  40a480:	jmp    0x40a4bb
  40a482:	lahf   
  40a483:	lods   al,BYTE PTR ds:[esi]
  40a484:	push   0x13
  40a486:	out    dx,al
  40a487:	or     DWORD PTR [edi+0x74354ddc],ebx
  40a48d:	aam    0xe9
  40a48f:	pop    edx
  40a490:	and    eax,0x2bca75e3
  40a495:	inc    ecx
  40a496:	(bad)  
  40a497:	call   0xa10341a
  40a49c:	or     eax,0x6fea6be3
  40a4a1:	pop    es
  40a4a2:	jle    0x40a4dc
  40a4a4:	xor    al,BYTE PTR ds:0x463445f0
  40a4aa:	pop    edx
  40a4ab:	mov    cl,0x2a
  40a4ad:	pushf  
  40a4ae:	pop    ecx
  40a4af:	xor    eax,0x8fb66378
  40a4b4:	sbb    edx,DWORD PTR [ecx+0x69cf002]
  40a4ba:	test   edi,edi
  40a4bc:	nop
  40a4bd:	pop    ecx
  40a4be:	sub    dl,BYTE PTR [ebp-0x7a]
  40a4c1:	in     al,0xbd
  40a4c3:	outs   dx,DWORD PTR ds:[esi]
  40a4c4:	mov    ecx,0x2a630eb1
  40a4c9:	xlat   BYTE PTR ds:[ebx]
  40a4ca:	cmp    edi,DWORD PTR [edx]
  40a4cc:	rcl    ebx,cl
  40a4ce:	or     BYTE PTR [edi],0x38
  40a4d1:	jne    0x40a528
  40a4d3:	inc    esp
  40a4d4:	add    dl,BYTE PTR [esi+edx*2+0x445863af]
  40a4db:	arpl   WORD PTR [ebx+0x7b],si
  40a4de:	pushf  
  40a4df:	addr16 cmp eax,0x7c58feca
  40a4e5:	(bad)  
  40a4e6:	clc    
  40a4e7:	setb   BYTE PTR [ebx]
  40a4ea:	call   0x43fcae0b
  40a4ef:	in     al,0x69
  40a4f1:	mov    ch,0xe7
  40a4f3:	int3   
  40a4f4:	push   edi
  40a4f5:	jbe    0x40a47d
  40a4f7:	pop    ebx
  40a4f8:	xor    bh,BYTE PTR [eax-0x18]
  40a4fb:	data16 jg 0x40a574
  40a4fe:	sbb    eax,0xa65eba61
  40a503:	das    
  40a504:	push   0xa
  40a506:	cs pop esp
  40a508:	(bad)  
  40a50a:	dec    ecx
  40a50b:	or     al,0xf2
  40a50d:	in     eax,dx
  40a50e:	icebp  
  40a50f:	jne    0x40a514
  40a511:	ja     0x40a4be
  40a513:	jne    0x40a573
  40a515:	pusha  
  40a516:	sub    DWORD PTR ds:0xc13086f1,esp
  40a51c:	mov    ebx,0xe3d35f38
  40a521:	stc    
  40a522:	push   0xff5941ba
  40a527:	adc    eax,0xb72d2095
  40a52c:	inc    ebp
  40a52d:	add    dl,BYTE PTR [esi]
  40a52f:	cmp    ecx,esi
  40a531:	add    esi,DWORD PTR [esi+0x1d]
  40a534:	xchg   DWORD PTR [edi],eax
  40a536:	mov    DWORD PTR [esp+eiz*2],esi
  40a539:	int3   
  40a53a:	jg     0x40a4f9
  40a53c:	jbe    0x40a58a
  40a53e:	push   ds
  40a53f:	rol    DWORD PTR [ebp+0x48e5e0d1],0x6e
  40a546:	cmp    eax,0xdd47dcfe
  40a54b:	sahf   
  40a54c:	dec    ebx
  40a54d:	and    DWORD PTR [edi-0x4b9bd493],esp
  40a553:	push   edi
  40a554:	push   ebp
  40a555:	xchg   edx,eax
  40a556:	lds    ebp,FWORD PTR [esi]
  40a558:	add    DWORD PTR [ebp-0x6b],ebp
  40a55b:	pop    esi
  40a55c:	or     eax,0xec4f45c0
  40a561:	out    0x4d,al
  40a563:	inc    si
  40a565:	or     DWORD PTR [edx-0x73fd3066],ebx
  40a56b:	push   ds
  40a56c:	cmp    BYTE PTR [eax+eax*4-0x60],ch
  40a570:	mov    dl,0x74
  40a572:	std    
  40a573:	inc    eax
  40a574:	in     eax,0x6a
  40a576:	adc    eax,0xa847e1bc
  40a57b:	xchg   ebp,eax
  40a57c:	or     ebx,DWORD PTR [esi+0x524b07c8]
  40a582:	adc    BYTE PTR [ebx+0x2cfc9407],0xa9
  40a589:	fild   DWORD PTR [eax+0x456066b0]
  40a58f:	push   es
  40a590:	or     BYTE PTR [ebp+0x39b65d38],al
  40a596:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a597:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a598:	xor    al,0xa1
  40a59a:	sbb    ecx,DWORD PTR [eax+0x3b9a89d9]
  40a5a0:	aad    0xb5
  40a5a2:	in     al,dx
  40a5a3:	lods   eax,DWORD PTR ds:[esi]
  40a5a4:	arpl   bp,bx
  40a5a6:	mov    edx,0xf034ff55
  40a5ab:	js     0x40a611
  40a5ad:	(bad)  
  40a5ae:	sub    dh,bl
  40a5b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5b1:	fmulp  st(1),st
  40a5b3:	out    0x99,eax
  40a5b5:	or     cl,BYTE PTR [edi+0x63a31eb0]
  40a5bb:	mov    edx,0xbf8c3f3e
  40a5c0:	dec    ecx
  40a5c1:	out    0x5a,al
  40a5c3:	xor    al,0xf9
  40a5c5:	mov    BYTE PTR [ecx],cl
  40a5c7:	or     al,0xe2
  40a5c9:	sub    DWORD PTR [ebx-0x33b561ce],esi
  40a5cf:	or     dh,0xd3
  40a5d2:	dec    edx
  40a5d3:	xchg   ebx,eax
  40a5d4:	sub    DWORD PTR [edx-0x16d8229c],esp
  40a5da:	jne    0x40a621
  40a5dc:	(bad)  
  40a5dd:	aas    
  40a5de:	adc    bl,BYTE PTR [edi-0x64]
  40a5e1:	mov    edx,0xcf669c5c
  40a5e6:	mov    cl,0x34
  40a5e8:	into   
  40a5e9:	cld    
  40a5ea:	cmp    BYTE PTR es:[esi+0x7a],dh
  40a5ee:	jnp    0x40a64f
  40a5f0:	cmc    
  40a5f1:	or     edi,DWORD PTR [esi+ebp*4+0x538bce46]
  40a5f8:	sar    DWORD PTR [edi],0xf3
  40a5fb:	inc    eax
  40a5fc:	sbb    dl,BYTE PTR [esi+0x129514a2]
  40a602:	test   eax,0xf6e5ab76
  40a607:	sbb    BYTE PTR [ebx+0xf6aba89],bl
  40a60d:	out    dx,eax
  40a60e:	in     eax,0xf
  40a610:	or     dl,cl
  40a612:	(bad)
  40a617:	sbb    DWORD PTR [edi],ebx
  40a619:	lods   eax,DWORD PTR ds:[esi]
  40a61a:	xor    eax,esi
  40a61c:	sar    BYTE PTR [ebx],1
  40a61e:	or     DWORD PTR [eax],ebx
  40a620:	fstp   DWORD PTR [esi+0x3c82efa9]
  40a626:	in     al,0x4e
  40a628:	add    esp,esi
  40a62a:	pop    ss
  40a62b:	repz jecxz 0x40a61c
  40a62e:	std    
  40a62f:	rol    DWORD PTR [ecx+eiz*4-0x6183bfc5],0xd6
  40a637:	nop
  40a638:	ror    esp,0xca
  40a63b:	mov    esp,0x57030d21
  40a640:	pop    esi
  40a641:	in     al,0xe8
  40a643:	nop
  40a644:	push   0xffffffd7
  40a646:	imul   ecx,DWORD PTR [esi+0x5fe428de],0x30b95815
  40a650:	cmp    DWORD PTR [ecx],esp
  40a652:	push   edi
  40a653:	(bad)  
  40a654:	mov    ebp,DWORD PTR [eax+0x12]
  40a657:	outs   dx,BYTE PTR ds:[esi]
  40a658:	popa   
  40a659:	push   edx
  40a65a:	push   0xffffff8e
  40a65c:	inc    ecx
  40a65d:	adc    ah,BYTE PTR ds:0x97eebe71
  40a663:	adc    eax,0x941ad0ec
  40a668:	adc    al,BYTE PTR [edx]
  40a66a:	call   FWORD PTR [ebp-0x80]
  40a66d:	adc    eax,0xfc619fb5
  40a672:	outs   dx,DWORD PTR ds:[esi]
  40a673:	lods   al,BYTE PTR ds:[esi]
  40a674:	mov    esp,DWORD PTR [edi+0x3b]
  40a677:	sub    DWORD PTR [ecx+0x7650afd9],0xffffffb2
  40a67e:	ins    DWORD PTR es:[edi],dx
  40a67f:	push   cs
  40a680:	mov    WORD PTR [edi-0x8a03d6a],ds
  40a686:	lea    edx,[edx*4-0x274f7ad2]
  40a68d:	jmp    0x6cd2b31
  40a692:	dec    esp
  40a693:	hlt    
  40a694:	mov    ebp,0x72e8bf5a
  40a699:	jmp    0x40a6e6
  40a69b:	out    dx,eax
  40a69c:	sbb    al,0xda
  40a69e:	(bad)  
  40a69f:	(bad)  
  40a6a1:	stc    
  40a6a2:	into   
  40a6a3:	dec    eax
  40a6a4:	pop    eax
  40a6a5:	imul   edi,DWORD PTR [edx],0xd9d656d6
  40a6ab:	jne    0x40a6dc
  40a6ad:	cmc    
  40a6ae:	xor    BYTE PTR [ebx+edi*2],cl
  40a6b1:	xchg   ecx,eax
  40a6b2:	fcomip st,st(1)
  40a6b4:	dec    edi
  40a6b5:	lods   eax,DWORD PTR ds:[esi]
  40a6b6:	lahf   
  40a6b7:	mov    edx,0xbda613e5
  40a6bc:	and    DWORD PTR [ebp+0x37b88a32],esi
  40a6c2:	mov    eax,0x4d9348de
  40a6c7:	mov    cl,0x72
  40a6c9:	cli    
  40a6ca:	pop    ebp
  40a6cb:	sub    esp,esi
  40a6cd:	(bad)  
  40a6ce:	sub    ah,BYTE PTR [edi-0x4e]
  40a6d1:	into   
  40a6d2:	push   es
  40a6d3:	in     al,0xb2
  40a6d5:	push   ss
  40a6d6:	push   ss
  40a6d7:	pop    eax
  40a6d8:	ret    0xbeb
  40a6db:	inc    ebx
  40a6dc:	mov    WORD PTR [edx],ss
  40a6de:	xor    al,bl
  40a6e0:	(bad)  
  40a6e1:	arpl   cx,bx
  40a6e3:	stos   DWORD PTR es:[edi],eax
  40a6e4:	adc    BYTE PTR [edx],dh
  40a6e6:	mov    al,0x99
  40a6e8:	mov    ebp,fs
  40a6ea:	jo     0x40a720
  40a6ec:	and    BYTE PTR [edi+0x12583c72],dh
  40a6f2:	stos   DWORD PTR es:[edi],eax
  40a6f3:	rcl    BYTE PTR [esi-0x76c1471a],0xb9
  40a6fa:	sbb    eax,0x4f0ea082
  40a6ff:	push   cs
  40a700:	fcmovu st,st(2)
  40a702:	xor    dh,0x16
  40a705:	cmp    BYTE PTR [edx+0x21],al
  40a708:	outs   dx,DWORD PTR ds:[esi]
  40a709:	mov    ds:0xaa00c784,al
  40a70e:	push   0x20de8d38
  40a713:	push   ss
  40a714:	in     eax,dx
  40a715:	fsub   DWORD PTR [ebx-0x255f8fd1]
  40a71b:	jmp    0x40a73c
  40a71d:	sub    ebx,DWORD PTR [edx]
  40a71f:	inc    esi
  40a720:	loop   0x40a6c8
  40a722:	hlt    
  40a723:	dec    edi
  40a724:	in     al,0x19
  40a726:	imul   esp,DWORD PTR [eax],0x45d5b0e8
  40a72c:	mov    ds:0x1161fbf6,eax
  40a731:	bound  eax,QWORD PTR [edx-0x4b]
  40a734:	jge    0x40a6de
  40a736:	fisttp WORD PTR [edi]
  40a738:	nop
  40a739:	clc    
  40a73a:	mov    BYTE PTR [edx],bh
  40a73c:	rol    al,1
  40a73e:	and    ebp,DWORD PTR [esi+ebp*8]
  40a741:	add    eax,0x247c0f1f
  40a746:	adc    BYTE PTR ds:0xa3ea389c,0x3a
  40a74d:	loope  0x40a76d
  40a74f:	imul   edx,DWORD PTR [edx-0x12989dce],0xc8896d3d
  40a759:	inc    ebp
  40a75a:	das    
  40a75b:	xchg   esi,eax
  40a75c:	int3   
  40a75d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a75e:	jge    0x40a7df
  40a760:	xor    al,0x48
  40a762:	and    BYTE PTR [eax-0x3578b3de],dh
  40a768:	jl     0x40a755
  40a76a:	jmp    0x40a7cc
  40a76c:	jo     0x40a6fd
  40a76e:	out    dx,eax
  40a76f:	gs xor bh,dh
  40a772:	test   BYTE PTR [ebp-0x2309993e],0x56
  40a779:	addr16 aam 0x2c
  40a77c:	test   al,0x74
  40a77e:	stos   BYTE PTR es:[edi],al
  40a77f:	xor    esi,DWORD PTR [edx+esi*2+0x101123ab]
  40a786:	data16 fiadd WORD PTR [ecx+0x7abbd51c]
  40a78d:	call   0x5294:0xbb493f7
  40a794:	imul   ebp
  40a796:	test   al,0x42
  40a798:	daa    
  40a799:	sub    BYTE PTR ds:0x25ac737e,ch
  40a79f:	pop    es
  40a7a0:	push   ebp
  40a7a1:	ret    0xc0fa
  40a7a4:	mov    esp,0xc016ffb6
  40a7a9:	les    esi,FWORD PTR [esi+0x1db2524f]
  40a7af:	cmp    BYTE PTR [edi],al
  40a7b1:	xor    eax,0xa9b195b7
  40a7b6:	scas   al,BYTE PTR es:[edi]
  40a7b7:	scas   al,BYTE PTR es:[edi]
  40a7b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7b9:	xchg   edx,eax
  40a7ba:	dec    ebx
  40a7bb:	sub    esp,DWORD PTR [ebx]
  40a7bd:	add    bl,BYTE PTR [ebp+0x44505c8e]
  40a7c3:	sub    BYTE PTR [ebp+0x5c],bl
  40a7c6:	(bad)  
  40a7c7:	fdivr  st(6),st
  40a7c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7ca:	jno    0x40a7c0
  40a7cc:	sub    ah,BYTE PTR [esi+0x63ae8b76]
  40a7d2:	(bad)  
  40a7d4:	pushf  
  40a7d5:	loopne 0x40a7c1
  40a7d7:	and    al,0x34
  40a7d9:	(bad)  
  40a7da:	outs   dx,BYTE PTR ds:[esi]
  40a7db:	fisubr DWORD PTR [eax+0x3076bb3]
  40a7e1:	push   ebp
  40a7e2:	or     DWORD PTR [ecx+0x5a],0xaf64f01d
  40a7e9:	xchg   esp,eax
  40a7ea:	les    ecx,FWORD PTR [ecx+0x3a6590e8]
  40a7f0:	xor    al,0x4
  40a7f2:	add    al,0xaa
  40a7f4:	or     eax,DWORD PTR [esp+ecx*8+0x756b3733]
  40a7fb:	jo     0x40a80e
  40a7fd:	sub    esp,ebx
  40a7ff:	dec    ecx
  40a800:	add    edx,DWORD PTR [edi-0x7c0d6e25]
  40a806:	mov    dl,0x6f
  40a808:	pop    edx
  40a809:	add    dl,ah
  40a80b:	mov    ebp,0x514f9e1c
  40a810:	pop    ecx
  40a811:	in     al,0xf8
  40a813:	gs ds aas 
  40a816:	adc    eax,0x3311d8b
  40a81b:	pop    edx
  40a81c:	or     dl,BYTE PTR [ecx-0x26]
  40a81f:	xchg   ebp,eax
  40a820:	outs   dx,BYTE PTR ds:[esi]
  40a821:	jl     0x40a7be
  40a823:	int    0xe0
  40a825:	mov    ch,0xd3
  40a827:	dec    edx
  40a828:	mov    ebx,0xe42ed78
  40a82d:	retf   0xd3d3
  40a830:	mov    esp,0x2d6514b0
  40a835:	das    
  40a836:	xchg   ebp,eax
  40a837:	inc    ecx
  40a838:	inc    esp
  40a839:	and    eax,0x93daf620
  40a83e:	jae    0x40a7ce
  40a840:	xchg   BYTE PTR [ebx-0x1663fe09],al
  40a846:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a847:	in     al,0x4c
  40a849:	mov    DWORD PTR [ecx+0x42c14ac4],ecx
  40a84f:	jne    0x40a802
  40a851:	popa   
  40a852:	sbb    al,0x51
  40a854:	out    dx,al
  40a855:	jnp    0x40a863
  40a857:	ss gs dec edi
  40a85a:	push   eax
  40a85b:	into   
  40a85c:	lods   al,BYTE PTR ds:[esi]
  40a85d:	sub    cl,BYTE PTR [esi+edi*8]
  40a860:	cmc    
  40a861:	push   0xffffffca
  40a863:	cmp    eax,DWORD PTR [ecx+0x65]
  40a866:	ret    0xbd09
  40a869:	xchg   ebp,eax
  40a86a:	imul   ch
  40a86c:	js     0x40a7f7
  40a86e:	lods   eax,DWORD PTR ds:[esi]
  40a86f:	popa   
  40a870:	sbb    BYTE PTR [eax-0x7a],ah
  40a873:	std    
  40a874:	int    0xb9
  40a876:	and    ch,ah
  40a878:	jl     0x40a83c
  40a87a:	vpermi2ps zmm4{k3},zmm6,DWORD PTR [ebp+0x587d19d0]{1to16}
  40a884:	jno    0x40a889
  40a886:	add    DWORD PTR [eax+0x25bfed3f],edi
  40a88c:	ss aad 0x17
  40a88f:	retf   0xdf61
  40a892:	inc    eax
  40a893:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a894:	pop    eax
  40a895:	cmp    DWORD PTR [ebp+eiz*2-0x25],ecx
  40a899:	mov    dl,dh
  40a89b:	sti    
  40a89c:	add    bh,dh
  40a89e:	sbb    al,0x76
  40a8a0:	ret    0x8bf9
  40a8a3:	sbb    dl,BYTE PTR [ebp-0x3f4249af]
  40a8a9:	stc    
  40a8aa:	and    DWORD PTR [esi+0x1a],0x4a
  40a8ae:	popa   
  40a8af:	mov    ecx,0x8e83a124
  40a8b4:	in     al,0xb2
  40a8b6:	dec    ebx
  40a8b7:	stc    
  40a8b8:	out    dx,eax
  40a8b9:	pop    ds
  40a8ba:	jb     0x40a86c
  40a8bc:	sar    edi,cl
  40a8be:	xchg   ecx,eax
  40a8bf:	aas    
  40a8c0:	nop
  40a8c1:	push   edx
  40a8c2:	outs   dx,BYTE PTR ds:[esi]
  40a8c3:	push   ebx
  40a8c4:	and    al,0x54
  40a8c6:	pop    esi
  40a8c7:	xchg   esi,eax
  40a8c8:	inc    ebx
  40a8c9:	mov    ah,BYTE PTR [edx-0x44f60538]
  40a8cf:	and    edx,edx
  40a8d1:	(bad)  
  40a8d2:	stc    
  40a8d3:	xor    al,BYTE PTR [edx]
  40a8d5:	and    ch,BYTE PTR [edi-0x55d3b26a]
  40a8db:	ds mov esi,0x1f5c5877
  40a8e1:	mov    esi,0x350f4549
  40a8e6:	shr    BYTE PTR [edx],0xa8
  40a8e9:	lock mov ebx,0xc2be5b8a
  40a8ef:	dec    esi
  40a8f0:	hlt    
  40a8f1:	mov    ebp,0x863f37eb
  40a8f6:	dec    ebx
  40a8f7:	inc    ebp
  40a8f8:	scas   al,BYTE PTR es:[edi]
  40a8f9:	jge    0x40a8e9
  40a8fb:	test   BYTE PTR [ebp-0x604c5ff],dl
  40a901:	js     0x40a94f
  40a903:	stos   BYTE PTR es:[edi],al
  40a904:	mov    DWORD PTR ss:[edx+0x78f14a0],0xa55c1774
  40a90f:	push   0x4617fefc
  40a914:	xchg   ebx,eax
  40a915:	retf   0x5e4d
  40a918:	sub    BYTE PTR [ecx+0x59e21e06],bl
  40a91e:	(bad)  
  40a91f:	mov    edx,0x7cd4e8b0
  40a924:	(bad)  
  40a925:	leave  
  40a926:	dec    eax
  40a927:	(bad)  
  40a928:	stos   DWORD PTR es:[edi],eax
  40a929:	(bad)  
  40a92b:	pushf  
  40a92c:	clc    
  40a92d:	adc    ah,BYTE PTR [edx]
  40a92f:	sbb    eax,0x1a3c99f8
  40a934:	mov    ecx,0x5f6c22e9
  40a939:	and    ebx,eax
  40a93b:	ror    DWORD PTR [ecx-0x5dfe77e2],0x95
  40a942:	mov    dh,0x92
  40a944:	xchg   esi,eax
  40a945:	fiadd  WORD PTR [edi-0x2ef7bfc7]
  40a94b:	imul   edx,DWORD PTR [edx+0x2a],0x6e4994bc
  40a952:	ror    DWORD PTR [ebx-0x3c939ca8],0xbe
  40a959:	mov    al,0x1
  40a95b:	or     ah,BYTE PTR [eax]
  40a95d:	add    DWORD PTR [edi-0x68],eax
  40a960:	inc    esi
  40a961:	mov    ebp,0xb6c6df17
  40a966:	push   cs
  40a967:	sahf   
  40a968:	jle    0x40a9e5
  40a96a:	cmp    al,0x6a
  40a96c:	fimul  DWORD PTR [ebx]
  40a96e:	mov    BYTE PTR [esi+eax*8-0x40],bl
  40a972:	outs   dx,DWORD PTR ds:[esi]
  40a973:	fild   WORD PTR [eax+0x7628d579]
  40a979:	es pop esi
  40a97b:	cs stos BYTE PTR es:[edi],al
  40a97d:	pop    esi
  40a97e:	nop
  40a97f:	xor    dl,ch
  40a981:	cmp    eax,0x50b46c36
  40a986:	gs scas al,BYTE PTR es:[edi]
  40a988:	and    BYTE PTR [ebx],al
  40a98a:	mov    cl,dl
  40a98c:	push   edi
  40a98d:	sub    BYTE PTR [eax],dh
  40a98f:	fs in  eax,dx
  40a991:	inc    esi
  40a992:	pop    ebx
  40a993:	fnstenv [edi+0x3199eeb9]
  40a999:	or     ebp,ecx
  40a99b:	out    0x66,eax
  40a99d:	mov    eax,ds:0x989543a9
  40a9a2:	and    eax,DWORD PTR [eax]
  40a9a4:	jge    0x40a9ea
  40a9a6:	sbb    BYTE PTR [ebp+0x50159132],cl
  40a9ac:	xchg   ebp,eax
  40a9ad:	jne    0x40a9b5
  40a9af:	dec    edi
  40a9b0:	push   DWORD PTR [esi+0x6b]
  40a9b3:	push   es
  40a9b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9b5:	mov    BYTE PTR [ecx+0x3bc22d0b],al
  40a9bb:	pop    esp
  40a9bd:	jns    0x40aa0f
  40a9bf:	pop    eax
  40a9c0:	and    cl,BYTE PTR [ebx-0x4d540bbc]
  40a9c6:	push   esi
  40a9c7:	out    0x0,eax
  40a9c9:	mov    bl,0xde
  40a9cb:	bound  esp,QWORD PTR [eax+0x2b]
  40a9ce:	sub    esp,eax
  40a9d0:	js     0x40a987
  40a9d2:	mov    eax,0xf969b8be
  40a9d7:	xchg   ecx,eax
  40a9d8:	mov    bl,0x8a
  40a9da:	out    0xf0,al
  40a9dc:	lods   eax,DWORD PTR ds:[esi]
  40a9dd:	jb     0x40a99e
  40a9df:	sbb    bh,BYTE PTR [edx-0x699c6b58]
  40a9e5:	sbb    BYTE PTR [edx-0x10332137],dh
  40a9eb:	inc    ebp
  40a9ec:	ds cmc 
  40a9ee:	mov    cl,0x1c
  40a9f0:	stc    
  40a9f1:	pop    edi
  40a9f2:	leave  
  40a9f3:	add    dh,bh
  40a9f5:	stos   BYTE PTR es:[edi],al
  40a9f6:	aaa    
  40a9f7:	jns    0x40a9d5
  40a9f9:	xchg   cl,dl
  40a9fb:	add    esi,DWORD PTR [edi-0x2d8971bf]
  40aa01:	popf   
  40aa02:	loope  0x40aa22
  40aa04:	dec    eax
  40aa05:	rol    DWORD PTR [edi+0x53],cl
  40aa08:	push   0x7c
  40aa0a:	sub    DWORD PTR [eax],0x52
  40aa0d:	fcom   DWORD PTR [ebp-0x21]
  40aa10:	mov    ah,0x1
  40aa12:	push   ebx
  40aa13:	pop    ecx
  40aa14:	js     0x40a9a4
  40aa16:	pusha  
  40aa17:	xor    DWORD PTR [edi-0x1a0a8272],esi
  40aa1d:	mov    dh,0x4c
  40aa1f:	(bad)  
  40aa20:	xchg   esi,eax
  40aa21:	jmp    0x8f1:0x8a8c23e3
  40aa28:	aad    0xf5
  40aa2a:	outs   dx,DWORD PTR ds:[esi]
  40aa2b:	rcl    DWORD PTR [ecx],cl
  40aa2d:	fmulp  st(7),st
  40aa2f:	ins    BYTE PTR es:[edi],dx
  40aa30:	dec    ecx
  40aa31:	inc    edi
  40aa32:	jbe    0x40a9e5
  40aa34:	cmp    dl,BYTE PTR [ebp+0x7a299aff]
  40aa3a:	push   esi
  40aa3b:	or     ah,0xe8
  40aa3e:	or     DWORD PTR [edx],0xd30c47ac
  40aa44:	(bad)  
  40aa45:	lds    ebx,FWORD PTR [ebx+0x7ed69e3]
  40aa4b:	cmc    
  40aa4c:	cmp    al,0x30
  40aa4e:	jmp    0xef6ce36c
  40aa53:	shl    DWORD PTR [eax+0x79],1
  40aa56:	sub    ebp,DWORD PTR [edx]
  40aa58:	gs xchg ecx,eax
  40aa5a:	push   ds
  40aa5b:	xor    al,0xd4
  40aa5d:	outs   dx,BYTE PTR ds:[esi]
  40aa5e:	sbb    al,0x22
  40aa60:	es mov dl,0x73
  40aa63:	mov    bh,0x39
  40aa65:	jge    0x40aac9
  40aa67:	sbb    bl,BYTE PTR [edx+0x10c47ec3]
  40aa6d:	dec    BYTE PTR [edx-0x80]
  40aa70:	mov    esp,ecx
  40aa72:	mov    bl,0xc1
  40aa74:	cmp    DWORD PTR [eax],ecx
  40aa76:	(bad)  
  40aa77:	rol    BYTE PTR [esp+ebp*1+0x2d],cl
  40aa7b:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa7d:	les    esi,FWORD PTR [ebx-0x3784320c]
  40aa83:	test   BYTE PTR [ebx],al
  40aa85:	fidiv  WORD PTR [edi]
  40aa87:	bound  esp,QWORD PTR [ecx+0x5a]
  40aa8a:	cdq    
  40aa8b:	sbb    eax,0x11e87c3b
  40aa90:	pop    eax
  40aa91:	jmp    0x40aa96
  40aa93:	fstp   DWORD PTR [edx]
  40aa95:	fistp  QWORD PTR [esi-0x26]
  40aa98:	jb     0x40aa2b
  40aa9a:	jecxz  0x40aa5d
  40aa9c:	cmp    al,0x51
  40aa9e:	mov    ds:0x1eb802a0,eax
  40aaa3:	xchg   esp,eax
  40aaa4:	xchg   esp,eax
  40aaa5:	sub    BYTE PTR [esi],bl
  40aaa7:	jle    0x40aa7e
  40aaa9:	test   esp,esp
  40aaab:	adc    edx,ebx
  40aaad:	les    edx,FWORD PTR [ecx]
  40aaaf:	inc    edi
  40aab0:	push   esi
  40aab1:	loop   0x40aac3
  40aab3:	(bad)  
  40aab4:	pop    edx
  40aab5:	sub    bl,BYTE PTR [eax+eax*4+0x3fb7178]
  40aabc:	or     eax,0x98ec227a
  40aac1:	cmp    DWORD PTR [ebp+0x287edbde],edx
  40aac7:	daa    
  40aac8:	ficomp DWORD PTR [ebx+0x475a9205]
  40aace:	adc    DWORD PTR ds:0xdb7874c7,ebx
  40aad4:	push   ebp
  40aad5:	addr16 pusha 
  40aad7:	or     eax,0xe0021d8d
  40aadc:	call   0x11621dee
  40aae1:	jbe    0x40aaa9
  40aae3:	jo     0x40ab5b
  40aae5:	jnp    0x40ab47
  40aae7:	pop    ecx
  40aae8:	gs mov dh,0x80
  40aaeb:	loop   0x40ab38
  40aaed:	jg     0x40aa8d
  40aaef:	xchg   edi,eax
  40aaf0:	fucom  st(2)
  40aaf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aaf3:	test   BYTE PTR [esi-0x248829f8],dl
  40aaf9:	imul   esp,DWORD PTR [esi-0x5cfd1565],0x60a6f739
  40ab03:	push   ecx
  40ab04:	sahf   
  40ab05:	adc    ecx,DWORD PTR [edi+0x61]
  40ab08:	xchg   ecx,eax
  40ab09:	cmc    
  40ab0a:	jecxz  0x40aae6
  40ab0c:	pop    ecx
  40ab0d:	lods   eax,DWORD PTR ds:[esi]
  40ab0e:	or     ecx,DWORD PTR [edx+0x665893f2]
  40ab14:	cmp    ah,BYTE PTR [ebp-0x48]
  40ab17:	mov    bl,0x4e
  40ab19:	cmc    
  40ab1a:	sti    
  40ab1b:	xchg   ecx,eax
  40ab1c:	ja     0x40ab99
  40ab1e:	jbe    0x40ab09
  40ab20:	imul   eax,DWORD PTR [eax-0x543385ea],0xe63279f2
  40ab2a:	fidiv  DWORD PTR [edx]
  40ab2c:	adc    eax,0xf6eab134
  40ab31:	shl    BYTE PTR [esi-0x5d],1
  40ab34:	push   edi
  40ab35:	dec    ebx
  40ab36:	mov    dh,0x4e
  40ab38:	mov    cl,0xf4
  40ab3a:	les    edx,FWORD PTR [edx]
  40ab3c:	mov    ah,0xc7
  40ab3e:	mov    al,0xe0
  40ab40:	lea    esi,[ebx]
  40ab42:	jl     0x40ab3f
  40ab44:	scas   eax,DWORD PTR es:[edi]
  40ab45:	push   esi
  40ab46:	in     eax,dx
  40ab47:	not    BYTE PTR [ecx-0x44d240f0]
  40ab4d:	inc    edi
  40ab4e:	std    
  40ab4f:	push   edx
  40ab50:	(bad)  
  40ab51:	jg     0x40abb1
  40ab53:	out    0x6,eax
  40ab55:	mov    BYTE PTR [ecx],ah
  40ab57:	xchg   ebx,eax
  40ab58:	and    bh,BYTE PTR [ebx]
  40ab5a:	jno    0x40ab84
  40ab5c:	dec    BYTE PTR [edi+eax*1+0x61479190]
  40ab63:	jo     0x40aba3
  40ab65:	retf   0x12db
  40ab68:	or     BYTE PTR [ebx+ebx*1+0x38],dh
  40ab6c:	fsub   QWORD PTR ds:0x49be540f
  40ab72:	in     eax,dx
  40ab73:	dec    esp
  40ab74:	jmp    0x2c19:0xc37f8d25
  40ab7b:	pop    edi
  40ab7c:	jnp    0x40ab4a
  40ab7e:	gs adc eax,0x3d30869a
  40ab84:	pop    eax
  40ab85:	outs   dx,DWORD PTR ds:[esi]
  40ab86:	lock cs push cs
  40ab89:	aaa    
  40ab8a:	inc    edx
  40ab8b:	mov    al,0x53
  40ab8d:	adc    DWORD PTR [ecx-0x3f],ecx
  40ab90:	arpl   WORD PTR [ebx-0x4e],sp
  40ab93:	fcom   DWORD PTR [ebp+0x2]
  40ab96:	jmp    0x39b2f5b9
  40ab9b:	das    
  40ab9c:	lods   al,BYTE PTR ds:[esi]
  40ab9d:	(bad)  
  40ab9e:	jnp    0x40ab52
  40aba0:	jmp    0xc7acef89
  40aba5:	sub    bh,BYTE PTR [esi+esi*8+0x15906733]
  40abac:	mov    bl,0x3e
  40abae:	and    bh,bl
  40abb0:	(bad)  
  40abb1:	pop    edx
  40abb2:	jp     0x40abca
  40abb4:	mov    WORD PTR [ebx-0x1f],ss
  40abb7:	in     eax,0x9d
  40abb9:	fs inc edx
  40abbb:	mov    dl,0x48
  40abbd:	lods   al,BYTE PTR ds:[esi]
  40abbe:	fldcw  WORD PTR [eax+0x756ee991]
  40abc4:	sub    eax,0xa22161e1
  40abca:	mov    dh,0x92
  40abcc:	xchg   edx,ecx
  40abce:	xchg   ecx,eax
  40abcf:	out    0xdc,al
  40abd1:	adc    al,0x4a
  40abd3:	jl     0x40ac38
  40abd5:	or     BYTE PTR [ebx-0x6d6e002d],dh
  40abdb:	sub    al,0x3d
  40abdd:	aaa    
  40abde:	mov    al,0xec
  40abe0:	shl    BYTE PTR [edi+esi*2+0x4e],cl
  40abe4:	adc    BYTE PTR [ecx+0x25f492ce],bh
  40abea:	out    dx,al
  40abeb:	xor    al,BYTE PTR [edi+eiz*4+0x2c1bbeec]
  40abf2:	xchg   ecx,eax
  40abf3:	ror    DWORD PTR [ecx+0x75970121],0xa7
  40abfa:	xlat   BYTE PTR ds:[ebx]
  40abfb:	adc    edi,edx
  40abfd:	sbb    DWORD PTR [bp+si],eax
  40ac00:	aas    
  40ac01:	dec    esp
  40ac02:	push   edx
  40ac03:	sub    al,0x5f
  40ac05:	pop    ebp
  40ac06:	fldcw  WORD PTR [ebx-0x76259a4d]
  40ac0c:	adc    ecx,edi
  40ac0e:	dec    esp
  40ac0f:	out    0xab,al
  40ac11:	jg     0x40abdb
  40ac13:	or     eax,0xa658aa9e
  40ac18:	(bad)  
  40ac19:	mov    ebx,0x766bebdc
  40ac1e:	push   esp
  40ac1f:	push   esp
  40ac20:	psllq  mm1,QWORD PTR [ebp-0x666caa62]
  40ac27:	mov    ah,0xb8
  40ac29:	push   0xffffffc1
  40ac2b:	pop    ebp
  40ac2c:	and    DWORD PTR [edx-0x211c7e42],esi
  40ac32:	movzx  eax,BYTE PTR [edi]
  40ac35:	and    al,0x20
  40ac37:	aad    0x3b
  40ac39:	cmp    BYTE PTR [esi+0xf6364af],0x4e
  40ac40:	fsub   DWORD PTR [ebx+0x78]
  40ac43:	scas   al,BYTE PTR es:[edi]
  40ac44:	neg    BYTE PTR [ecx-0x70]
  40ac47:	rcl    BYTE PTR [eax+0x47],cl
  40ac4a:	(bad)  [esi-0x2d]
  40ac4d:	ins    BYTE PTR es:[edi],dx
  40ac4e:	push   eax
  40ac4f:	rol    bl,0x67
  40ac52:	pop    edi
  40ac53:	or     eax,DWORD PTR [ebp-0x286df90f]
  40ac59:	test   bl,ah
  40ac5b:	mov    eax,ds:0x85e51ffb
  40ac60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac61:	mov    dl,0x91
  40ac63:	mov    cl,bh
  40ac65:	sahf   
  40ac66:	sbb    al,BYTE PTR [ecx-0x31]
  40ac69:	fisttp QWORD PTR [esp+ebp*8+0x3f022643]
  40ac70:	mov    ch,0xd1
  40ac72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac73:	pop    esp
  40ac74:	jns    0x40acf2
  40ac76:	fwait
  40ac77:	and    eax,0x1e1d3137
  40ac7c:	dec    ebp
  40ac7d:	dec    eax
  40ac7e:	pop    ebp
  40ac7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac80:	pop    edi
  40ac81:	inc    edi
  40ac82:	aas    
  40ac83:	das    
  40ac84:	xchg   ebp,eax
  40ac85:	imul   DWORD PTR [ebp-0x36e35e18]
  40ac8b:	push   es
  40ac8c:	xchg   ebp,eax
  40ac8d:	outs   dx,BYTE PTR ds:[esi]
  40ac8e:	push   ebp
  40ac8f:	jge    0x40ac54
  40ac91:	in     al,dx
  40ac92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac93:	scas   eax,DWORD PTR es:[edi]
  40ac94:	repnz jmp 0xa1ff:0xfcb77cb2
  40ac9c:	push   edx
  40ac9d:	lock dec edi
  40ac9f:	add    ch,BYTE PTR ds:0xb33ba38
  40aca5:	cmp    DWORD PTR [ecx],esi
  40aca7:	xor    BYTE PTR [ecx+ebp*1+0x5ee516],cl
  40acae:	outs   dx,DWORD PTR ds:[esi]
  40acaf:	scas   eax,DWORD PTR es:[edi]
  40acb0:	mov    ebp,0x428bdcf8
  40acb5:	les    ecx,FWORD PTR [edx+eiz*8]
  40acb8:	cmp    ecx,ebp
  40acba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40acbb:	dec    esi
  40acbc:	clc    
  40acbd:	pop    ds
  40acbe:	aad    0xc0
  40acc0:	imul   esi,ebp,0x19
  40acc3:	in     al,dx
  40acc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40acc5:	xor    al,0x1a
  40acc7:	in     eax,dx
  40acc8:	mov    eax,ds:0xb0b2f075
  40accd:	add    al,ch
  40accf:	imul   ebp,esi,0x6f9eda0e
  40acd5:	inc    esp
  40acd6:	mov    edi,0xeecbc1cc
  40acdb:	jne    0x40ac64
  40acdd:	mov    dh,0x37
  40acdf:	js     0x40ad4c
  40ace1:	and    eax,0xfbb06fa6
  40ace6:	fwait
  40ace7:	jp     0x40acdf
  40ace9:	add    eax,0xf94d3683
  40acee:	or     al,BYTE PTR [ebx]
  40acf0:	or     ecx,DWORD PTR [eax+ecx*1]
  40acf3:	ret    0x1eba
  40acf6:	out    0xbc,eax
  40acf8:	pop    edx
  40acf9:	xor    BYTE PTR [eax+0x78573482],ch
  40acff:	inc    ebx
  40ad00:	jno    0x40acaf
  40ad02:	pmullw mm7,mm2
  40ad05:	push   es
  40ad06:	cwde   
  40ad07:	xchg   edi,eax
  40ad08:	pop    ebp
  40ad09:	xchg   DWORD PTR [edi+0x6c],esi
  40ad0c:	imul   edi,ebx,0x1c
  40ad0f:	stos   BYTE PTR es:[edi],al
  40ad10:	sub    DWORD PTR [eax-0x3c],eax
  40ad13:	out    dx,eax
  40ad14:	mov    WORD PTR [ebp+ecx*8+0x7],ss
  40ad18:	mov    ebp,0x3af08edc
  40ad1d:	mov    esi,0x11549f6e
  40ad22:	mov    esp,0xdbee2932
  40ad27:	xchg   edx,eax
  40ad28:	out    0x17,eax
  40ad2a:	jmp    0xdf7caa43
  40ad2f:	mov    ebx,0x31a2df72
  40ad34:	or     edi,ecx
  40ad36:	add    ch,BYTE PTR [edx-0x68384ccc]
  40ad3c:	into   
  40ad3d:	and    bh,cl
  40ad3f:	xor    ebp,DWORD PTR [eax]
  40ad41:	pop    ebx
  40ad42:	or     eax,0xdb941be
  40ad47:	sub    al,0x60
  40ad49:	jmp    0x40ad3a
  40ad4b:	mov    dh,0xa9
  40ad4d:	jns    0x40ace5
  40ad4f:	lds    esi,FWORD PTR [ebx+0xc]
  40ad52:	dec    esp
  40ad53:	dec    ebx
  40ad54:	push   es
  40ad55:	popa   
  40ad56:	lods   al,BYTE PTR ds:[esi]
  40ad57:	sub    ch,BYTE PTR [ebp+0x584de337]
  40ad5d:	xor    al,0x49
  40ad5f:	add    eax,0x1c13cbff
  40ad64:	push   0x3
  40ad66:	dec    eax
  40ad67:	xchg   ecx,eax
  40ad68:	push   0x38
  40ad6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad6b:	cmc    
  40ad6c:	sar    edi,1
  40ad6e:	lods   al,BYTE PTR ds:[esi]
  40ad6f:	scas   al,BYTE PTR es:[edi]
  40ad70:	pop    ebp
  40ad71:	stc    
  40ad72:	push   0xffffff9f
  40ad74:	es aas 
  40ad76:	xor    eax,0x83895954
  40ad7b:	fstp   DWORD PTR [edx]
  40ad7d:	xchg   esp,eax
  40ad7e:	lock int3 
  40ad80:	add    ah,BYTE PTR [ebx]
  40ad82:	push   eax
  40ad83:	mov    cl,0xca
  40ad85:	cli    
  40ad86:	jl     0x40ad87
  40ad88:	in     al,0xb9
  40ad8a:	or     dl,BYTE PTR [ebx+0x4a]
  40ad8d:	je     0x40ad4b
  40ad8f:	ins    BYTE PTR es:[edi],dx
  40ad90:	xor    al,0x2e
  40ad92:	in     eax,dx
  40ad93:	add    al,0x25
  40ad95:	out    dx,al
  40ad96:	pusha  
  40ad97:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40ad99:	xchg   ebp,eax
  40ad9a:	xchg   ebp,esp
  40ad9c:	jns    0x40ada9
  40ad9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad9f:	fcmovnb st,st(7)
  40ada1:	std    
  40ada2:	ins    BYTE PTR es:[edi],dx
  40ada3:	les    edi,FWORD PTR [edx]
  40ada5:	repz xchg edx,eax
  40ada7:	dec    esi
  40ada8:	mov    ebp,0x258a347c
  40adad:	jb     0x40ae02
  40adaf:	pop    ecx
  40adb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40adb1:	and    bp,si
  40adb4:	inc    eax
  40adb5:	imul   DWORD PTR [edx+0x4f]
  40adb8:	int3   
  40adb9:	push   0xd5a039ab
  40adbe:	jmp    0xecd74240
  40adc3:	loop   0x40ad96
  40adc5:	stos   BYTE PTR es:[edi],al
  40adc6:	call   0x991518e
  40adcb:	cmp    al,0x92
  40adcd:	adc    esi,DWORD PTR [ecx]
  40adcf:	rcr    BYTE PTR [esp+edi*1],cl
  40add2:	loop   0x40ade0
  40add4:	pop    ecx
  40add5:	sbb    al,al
  40add7:	out    dx,eax
  40add8:	sbb    ah,dl
  40adda:	mov    ds:0x258d893,al
  40addf:	iret   
  40ade0:	jl     0x40ad65
  40ade2:	cmp    al,dl
  40ade4:	jnp    0x40ad69
  40ade6:	jbe    0x40ad8b
  40ade8:	cmc    
  40ade9:	mov    dh,ch
  40adeb:	daa    
  40adec:	add    DWORD PTR [esi+0x6ef7f12f],esi
  40adf2:	pop    esp
  40adf3:	pushf  
  40adf4:	jmp    0x473043a6
  40adf9:	xor    DWORD PTR [ebx+0x636a3780],esp
  40adff:	lods   al,BYTE PTR ds:[esi]
  40ae00:	lods   eax,DWORD PTR ds:[esi]
  40ae01:	retf   0xd6de
  40ae04:	mov    esp,0xa046e556
  40ae09:	add    ecx,esp
  40ae0b:	and    bh,bh
  40ae0d:	mov    ebx,esp
  40ae0f:	xchg   esi,eax
  40ae10:	dec    edx
  40ae11:	and    ebx,DWORD PTR ds:0x4f8a6b39
  40ae17:	int3   
  40ae18:	jo     0x40adb5
  40ae1a:	inc    edi
  40ae1b:	sub    DWORD PTR [edi],ebx
  40ae1d:	inc    edx
  40ae1e:	jae    0x40ae78
  40ae20:	push   ds
  40ae21:	(bad)  
  40ae22:	ret    0xad3f
  40ae25:	adc    ebp,edi
  40ae27:	inc    esi
  40ae28:	jmp    0x4a41eb97
  40ae2d:	or     BYTE PTR [ebp-0x27],al
  40ae30:	bnd js 0x40ae75
  40ae33:	inc    ebx
  40ae34:	je     0x40adfb
  40ae36:	dec    esi
  40ae37:	xlat   BYTE PTR ds:[ebx]
  40ae38:	pop    edi
  40ae39:	sub    BYTE PTR [ecx],bh
  40ae3b:	pop    esi
  40ae3c:	fs in  eax,dx
  40ae3e:	pop    ecx
  40ae3f:	test   DWORD PTR [edx+0x4f],ebp
  40ae42:	cmc    
  40ae43:	jne    0x40ae65
  40ae45:	cmp    BYTE PTR [edx+0x7e57bbaf],dh
  40ae4b:	push   0xffffffc9
  40ae4d:	jnp    0x40ae6e
  40ae4f:	sbb    DWORD PTR [edi+0x1520dcc0],edx
  40ae55:	jnp    0xf3b9440d
  40ae5b:	call   0x2b23:0xc12ffd45
  40ae62:	cmp    al,0x58
  40ae64:	cmp    eax,0xd70ae47f
  40ae69:	xchg   edx,eax
  40ae6a:	mov    BYTE PTR [ecx],bl
  40ae6c:	shl    DWORD PTR [ecx+eiz*8],1
  40ae6f:	retf   0x9610
  40ae72:	(bad)  
  40ae73:	jb     0x40aee9
  40ae75:	or     DWORD PTR [esi+0x77d128f1],ebp
  40ae7b:	mov    eax,0xd29a72a7
  40ae80:	add    BYTE PTR [ebp+0x9],bl
  40ae83:	pusha  
  40ae84:	and    eax,0x50197967
  40ae89:	cmc    
  40ae8a:	jns    0x40ae22
  40ae8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae8d:	mov    cl,0xf8
  40ae8f:	iret   
  40ae90:	inc    edi
  40ae91:	test   eax,0xa5ef3248
  40ae96:	rcr    BYTE PTR [edx+0x35],cl
  40ae99:	or     eax,0x1f7220b2
  40ae9e:	aas    
  40ae9f:	mov    eax,0xe38a4694
  40aea4:	xchg   edx,eax
  40aea5:	xor    DWORD PTR [ebx+0xac3a99],esp
  40aeab:	mov    ah,0x84
  40aead:	repz mov ebp,0x6ddd4126
  40aeb3:	fwait
  40aeb4:	lds    ebx,FWORD PTR [edi+0x7a]
  40aeb7:	push   edx
  40aeb8:	cld    
  40aeb9:	pop    es
  40aeba:	pop    ecx
  40aebb:	in     eax,dx
  40aebc:	mov    esp,0xcf35dfc5
  40aec1:	cmp    BYTE PTR [eax+0x73],bh
  40aec4:	pop    eax
  40aec5:	sub    dl,BYTE PTR [ebp-0x6c53111b]
  40aecb:	idiv   bh
  40aecd:	mov    ds:0xf896ca62,eax
  40aed2:	rcr    ecx,cl
  40aed4:	mov    ecx,0x281d4cf3
  40aed9:	outs   dx,DWORD PTR ds:[esi]
  40aeda:	nop
  40aedb:	loopne 0x40ae5f
  40aedd:	or     al,0x33
  40aedf:	scas   al,BYTE PTR es:[edi]
  40aee0:	adc    al,0x19
  40aee2:	inc    ecx
  40aee3:	inc    edi
  40aee4:	dec    ebp
  40aee5:	mov    dh,0x46
  40aee7:	inc    edi
  40aee8:	pushf  
  40aee9:	and    bh,BYTE PTR [eax-0x79]
  40aeec:	jb     0x40ae97
  40aeee:	ret    0x5950
  40aef1:	adc    al,0xfa
  40aef3:	sbb    BYTE PTR [ebx],bh
  40aef5:	repnz mov DWORD PTR [edx],ecx
  40aef8:	call   0x2430:0x80d535fa
  40aeff:	and    BYTE PTR [edx+ebx*8-0x6a98c202],dh
  40af06:	cmp    DWORD PTR [esi],esp
  40af08:	fimul  WORD PTR [ecx]
  40af0a:	imul   eax,DWORD PTR [edi],0xd
  40af0d:	loop   0x40aed9
  40af0f:	xchg   ebx,eax
  40af10:	ret    0x99a3
  40af13:	clc    
  40af14:	test   edx,esp
  40af16:	push   eax
  40af17:	pop    es
  40af18:	inc    edi
  40af19:	mov    ecx,0x2eee0a25
  40af1e:	jno    0x40af70
  40af20:	ret    
  40af21:	out    0x90,eax
  40af23:	sbb    edi,DWORD PTR [edx-0x71415db8]
  40af29:	call   ebx
  40af2b:	or     ebx,0x47
  40af2e:	lods   eax,DWORD PTR ds:[esi]
  40af2f:	cwde   
  40af30:	push   esi
  40af31:	push   ecx
  40af32:	ins    BYTE PTR es:[edi],dx
  40af33:	push   edi
  40af34:	cmp    eax,0x59a5807e
  40af39:	into   
  40af3a:	jns    0x40aeef
  40af3c:	inc    si
  40af3e:	mov    eax,0x334f4949
  40af43:	pop    edx
  40af44:	das    
  40af45:	jp     0x40af5d
  40af47:	aad    0x2a
  40af49:	mov    WORD PTR [ebx],gs
  40af4b:	jp     0x40af14
  40af4d:	adc    eax,0xd9eb4394
  40af52:	cmp    BYTE PTR [edx+ebp*4],dl
  40af55:	sub    BYTE PTR ds:0x539fdb87,dh
  40af5b:	iret   
  40af5c:	cli    
  40af5d:	nop
  40af5e:	and    al,0x1
  40af60:	dec    ebx
  40af61:	stc    
  40af62:	push   esp
  40af63:	rol    DWORD PTR [ecx],1
  40af65:	(bad)  
  40af66:	sbb    esp,esi
  40af68:	jbe    0x40afa1
  40af6a:	add    al,0x86
  40af6c:	pop    eax
  40af6d:	div    dl
  40af6f:	or     edx,esp
  40af71:	data16 js 0x40afe5
  40af74:	popa   
  40af75:	pop    edi
  40af76:	dec    ebx
  40af77:	pop    ecx
  40af78:	gs in  al,dx
  40af7a:	les    ebx,FWORD PTR [eax+0x505a0d5f]
  40af80:	and    edi,DWORD PTR [ebp+esi*8+0x42]
  40af84:	dec    ebp
  40af85:	int3   
  40af86:	mov    edx,0xb5d80e32
  40af8b:	push   edi
  40af8c:	jl     0x40af7e
  40af8e:	mov    ecx,0xb19edc7
  40af93:	sub    DWORD PTR [eax-0x43],eax
  40af96:	mov    ?,WORD PTR [ecx]
  40af98:	retf   0x122f
  40af9b:	pusha  
  40af9c:	pop    ds
  40af9d:	mov    esp,0x1acdc1a5
  40afa2:	inc    esp
  40afa3:	in     al,dx
  40afa4:	xor    eax,edx
  40afa6:	xchg   edi,eax
  40afa7:	fisub  DWORD PTR [eax-0x44]
  40afaa:	int3   
  40afab:	(bad)  
  40afac:	fidiv  WORD PTR [ebx+ecx*4]
  40afaf:	fidivr WORD PTR [eax-0x46]
  40afb2:	arpl   WORD PTR [eax],cx
  40afb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afb5:	add    eax,0x7b4bf1ca
  40afba:	xor    ebx,edx
  40afbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afbd:	xchg   edi,eax
  40afbe:	dec    esp
  40afbf:	add    al,0xe1
  40afc1:	cmp    BYTE PTR [eax],0x3d
  40afc4:	iret   
  40afc5:	mov    dh,0xf2
  40afc7:	sbb    BYTE PTR ds:0xd111817b,al
  40afcd:	in     eax,dx
  40afce:	(bad)  [ebx-0x2c967837]
  40afd4:	leave  
  40afd5:	mov    edi,edx
  40afd7:	or     BYTE PTR [eax],ch
  40afd9:	or     ecx,edx
  40afdb:	add    DWORD PTR [ebp+0x59],edx
  40afde:	mov    edi,0xec395e0e
  40afe3:	add    al,0xd7
  40afe5:	scas   eax,DWORD PTR es:[edi]
  40afe6:	mov    esp,0xe587b67f
  40afeb:	sbb    DWORD PTR [ebx+eiz*4],ebp
  40afee:	jmp    0xe8bb:0x8430cdd8
  40aff5:	dec    edi
  40aff6:	inc    ecx
  40aff7:	lds    ebp,FWORD PTR [edx]
  40aff9:	enter  0x47c7,0x90
  40affd:	dec    esp
  40affe:	or     DWORD PTR [edi],0xfffffff3
  40b001:	lds    ecx,FWORD PTR [edi+eax*8+0x2606b1ed]
  40b008:	ror    DWORD PTR [ecx+0x6f],1
  40b00b:	rcl    bh,1
  40b00d:	int    0x61
  40b00f:	in     al,0x3
  40b011:	fwait
  40b012:	(bad)  
  40b013:	addr16 loop 0x40b000
  40b016:	ficomp DWORD PTR [ecx-0x21]
  40b019:	add    ebp,0x7e
  40b01c:	or     al,0xde
  40b01e:	push   ss
  40b01f:	push   0x70974a18
  40b024:	mov    edi,DWORD PTR [eax+0x4f82c41b]
  40b02a:	cwde   
  40b02b:	iret   
  40b02c:	jno    0x40b00a
  40b02e:	adc    BYTE PTR [ebx],al
  40b030:	imul   ebp,DWORD PTR [ecx+edx*4+0x1c24b8],0xd1277489
  40b03b:	hlt    
  40b03c:	popa   
  40b03d:	or     dh,0x6f
  40b040:	mov    eax,ds:0xc24d936d
  40b045:	or     eax,0xe03ebca
  40b04a:	inc    ecx
  40b04b:	or     BYTE PTR [edi+0x15],0x42
  40b04f:	(bad)  
  40b051:	mov    bl,0x78
  40b053:	jecxz  0x40b0c9
  40b055:	mov    edx,0x8710a0a6
  40b05a:	dec    esi
  40b05b:	and    al,0x80
  40b05d:	mov    dl,0x83
  40b05f:	and    esi,edi
  40b061:	mov    ds:0xa884bbb7,eax
  40b066:	ins    DWORD PTR es:[edi],dx
  40b067:	sub    eax,0x745c6eab
  40b06c:	clc    
  40b06d:	or     al,0x59
  40b06f:	cmp    ah,BYTE PTR [ebx+0x676bc8d1]
  40b075:	int3   
  40b076:	add    dl,BYTE PTR [eax-0x14]
  40b079:	lds    edi,FWORD PTR [esi+0x33]
  40b07c:	adc    al,0xca
  40b07e:	and    DWORD PTR [edx],esi
  40b080:	fsub   DWORD PTR [esi]
  40b082:	fstp   DWORD PTR [esi+0x36]
  40b085:	shl    BYTE PTR [eax-0x3e],cl
  40b088:	cli    
  40b089:	enter  0xb0e6,0x3
  40b08d:	sub    eax,0xeda22443
  40b092:	mov    bh,0x90
  40b094:	cmp    al,0x2f
  40b096:	pusha  
  40b097:	fldenv [ecx+0x7f]
  40b09a:	call   0x5bfdb4ce
  40b09f:	adc    DWORD PTR [ebp-0x72d23910],esi
  40b0a5:	jae    0x40b05f
  40b0a7:	sbb    bh,BYTE PTR [bx+di-0x3c]
  40b0ab:	sbb    DWORD PTR gs:[ecx],esi
  40b0ae:	jecxz  0x40b12d
  40b0b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0b1:	aaa    
  40b0b2:	cmp    DWORD PTR [ebx+0x176f8cdf],edi
  40b0b8:	mov    al,ds:0xfeeba58
  40b0bd:	sahf   
  40b0be:	nop
  40b0bf:	mov    dh,0x2c
  40b0c1:	rol    BYTE PTR [ebx+0x8619451],1
  40b0c7:	push   esp
  40b0c8:	xor    DWORD PTR [edx],ebp
  40b0ca:	loopne 0x40b0c9
  40b0cc:	imul   edx,edx,0x6a
  40b0cf:	std    
  40b0d0:	(bad)  
  40b0d1:	sbb    eax,0x7e319de0
  40b0d6:	pop    eax
  40b0d7:	(bad)  
  40b0d9:	push   es
  40b0da:	xor    DWORD PTR [eax+0x55],0xffffff8f
  40b0de:	jle    0x40b14d
  40b0e0:	out    0x64,eax
  40b0e2:	lods   eax,DWORD PTR ds:[esi]
  40b0e3:	sti    
  40b0e4:	pushf  
  40b0e5:	pop    edx
  40b0e6:	bound  ecx,QWORD PTR [edi-0x1b]
  40b0e9:	lea    ecx,[bx+si]
  40b0ec:	loope  0x40b0f0
  40b0ee:	shl    DWORD PTR [edx+0x359812d6],1
  40b0f4:	jl     0x40b0a9
  40b0f6:	pop    edx
  40b0f7:	jecxz  0x40b10b
  40b0f9:	lock jmp 0xff62285e
  40b0ff:	inc    esi
  40b100:	xchg   edi,eax
  40b101:	inc    ebp
  40b102:	scas   eax,DWORD PTR es:[edi]
  40b103:	mov    bl,0x67
  40b105:	sbb    bh,BYTE PTR [eax+0x59]
  40b108:	sbb    eax,0x85956672
  40b10d:	mov    ds:0xcb86b61a,al
  40b112:	js     0x40b10e
  40b114:	pusha  
  40b115:	mov    ds:0xef9cc28d,eax
  40b11a:	fcom   DWORD PTR [edx+ecx*4]
  40b11d:	inc    eax
  40b11e:	out    0x7c,eax
  40b120:	inc    edx
  40b121:	gs dec edx
  40b123:	xor    eax,DWORD PTR [esi+eax*1]
  40b126:	mov    edx,0xb3e39a4e
  40b12b:	aad    0xa2
  40b12d:	outs   dx,DWORD PTR ds:[esi]
  40b12e:	adc    esp,esi
  40b130:	or     BYTE PTR ds:0x30e2f29,bl
  40b136:	push   edi
  40b137:	mov    ebp,0x59240739
  40b13c:	push   esp
  40b13d:	test   eax,0xf36b0d5b
  40b142:	xchg   DWORD PTR [ecx],edx
  40b144:	pushf  
  40b145:	aam    0xe9
  40b147:	jge    0x40b150
  40b149:	sahf   
  40b14a:	lock (bad) 
  40b14c:	and    edi,DWORD PTR [ebp+edx*8+0x41210977]
  40b153:	lea    ebx,[edx+0x796beb86]
  40b159:	sub    ebp,DWORD PTR [edi-0x54]
  40b15c:	xor    edi,DWORD PTR [edi]
  40b15e:	xor    ebp,DWORD PTR [esi-0x4d7dbda]
  40b164:	adc    DWORD PTR [ebp+ebp*8-0x68a9c804],0xe5c3b7c3
  40b16f:	das    
  40b170:	xchg   ecx,eax
  40b171:	or     eax,0xd4d6570a
  40b176:	adc    esp,DWORD PTR [ebp+0x70c18a53]
  40b17c:	popf   
  40b17d:	dec    ecx
  40b17e:	push   esi
  40b17f:	jmp    0x40b17e
  40b181:	jecxz  0x40b1c3
  40b183:	pop    ss
  40b184:	push   esp
  40b185:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b186:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b187:	cmp    ch,ah
  40b189:	xchg   ecx,eax
  40b18a:	fiadd  WORD PTR ds:0xe1a9d141
  40b190:	clc    
  40b191:	jg     0x40b16a
  40b193:	pop    ecx
  40b194:	fdivr  QWORD PTR [esi-0x4d]
  40b197:	std    
  40b198:	jecxz  0x40b1d6
  40b19a:	test   al,0xf9
  40b19c:	mov    WORD PTR [edx],?
  40b19e:	cwde   
  40b19f:	repz das 
  40b1a1:	adc    BYTE PTR [ebp+0x1181fd0c],0x61
  40b1a8:	loope  0x40b186
  40b1aa:	fidivr WORD PTR [ebx+eax*1-0x5f66d33e]
  40b1b1:	push   ds
  40b1b2:	ds adc ebx,edx
  40b1b5:	popf   
  40b1b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1b7:	(bad)
  40b1ba:	xor    dl,cl
  40b1bc:	rcl    DWORD PTR [ebp+eiz*4-0x44fef144],0x34
  40b1c4:	outs   dx,BYTE PTR ds:[esi]
  40b1c5:	(bad)  
  40b1c6:	cmp    edi,DWORD PTR [edx]
  40b1c8:	ins    BYTE PTR es:[edi],dx
  40b1c9:	pop    DWORD PTR [ecx+0x65]
  40b1cc:	sbb    BYTE PTR [ecx+0x67e1683d],dl
  40b1d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1d3:	shl    BYTE PTR [esi+ebx*4-0x59],1
  40b1d7:	cwde   
  40b1d8:	lock mov edx,DWORD PTR [eax+0xc19db9b]
  40b1df:	mov    al,0x1d
  40b1e1:	mov    WORD PTR [edx+0x22],?
  40b1e4:	lahf   
  40b1e5:	or     edi,DWORD PTR [edx+ebp*2-0x52]
  40b1e9:	or     eax,0xefea2f4f
  40b1ee:	and    eax,0x102a0dd9
  40b1f3:	push   0x46c57c72
  40b1f8:	int3   
  40b1f9:	sub    bl,bh
  40b1fb:	or     edx,DWORD PTR [ebp-0x51d02cc7]
  40b201:	push   ss
  40b202:	xchg   ebp,eax
  40b203:	push   ebx
  40b204:	call   0x797c7358
  40b209:	mov    ch,0xa4
  40b20b:	push   esp
  40b20c:	mov    edx,0x19fde333
  40b211:	imul   edi,DWORD PTR [ecx+edi*1-0x11cd6d3e],0x7c2a8af6
  40b21c:	dec    ebp
  40b21d:	std    
  40b21e:	pop    esp
  40b21f:	cwde   
  40b220:	pop    eax
  40b221:	mov    DWORD PTR [ebx-0x61],esi
  40b224:	fidivr WORD PTR [ebp+0x77]
  40b227:	cli    
  40b228:	in     al,dx
  40b229:	sbb    edi,DWORD PTR [edx-0x5a264bd1]
  40b22f:	sub    bh,al
  40b231:	xchg   edi,eax
  40b232:	or     BYTE PTR [edx],0x99
  40b235:	fldcw  WORD PTR [ecx+0x1377dfa7]
  40b23b:	shl    DWORD PTR [ebx+edi*1+0x1b2b65e],0xdd
  40b243:	(bad)  
  40b245:	cmp    BYTE PTR [ebx],al
  40b247:	addr16 push esi
  40b249:	stos   BYTE PTR es:[edi],al
  40b24a:	jmp    0xab80fc63
  40b24f:	imul   edi,ecx,0x66
  40b252:	es sub ecx,esi
  40b255:	push   edi
  40b256:	or     eax,0x4be4746d
  40b25b:	jecxz  0x40b2a6
  40b25d:	mul    BYTE PTR [edi-0x72]
  40b260:	pop    ecx
  40b261:	xchg   ecx,eax
  40b262:	sbb    eax,0x8a423e44
  40b267:	mov    cl,0x1f
  40b269:	or     BYTE PTR [esi-0x1d02645b],al
  40b26f:	adc    DWORD PTR [ebx+eax*4-0x65a33732],ebp
  40b276:	fwait
  40b277:	std    
  40b278:	xor    al,0xf7
  40b27a:	adc    al,0xc9
  40b27c:	mov    dl,0xeb
  40b27e:	mov    ebp,0x82f724db
  40b283:	enter  0xb2d8,0x89
  40b287:	ja     0x40b2d2
  40b289:	test   DWORD PTR [esi],edi
  40b28b:	fstp   DWORD PTR [eax+0x3e]
  40b28e:	and    al,0x41
  40b290:	inc    BYTE PTR [esi]
  40b292:	ja     0x40b23b
  40b294:	into   
  40b295:	idiv   BYTE PTR cs:[edi-0x1a]
  40b299:	push   ebp
  40b29a:	cmc    
  40b29b:	sub    BYTE PTR [edx],bl
  40b29d:	rcr    DWORD PTR ds:0xf3504155,cl
  40b2a3:	lock sti 
  40b2a5:	pop    esp
  40b2a6:	sub    BYTE PTR es:[esi-0x59f32a9f],ch
  40b2ad:	jno    0x40b266
  40b2af:	inc    ecx
  40b2b0:	mov    ?,WORD PTR [edi]
  40b2b2:	or     dh,BYTE PTR [eax]
  40b2b4:	mov    al,0x4a
  40b2b6:	outs   dx,BYTE PTR ds:[esi]
  40b2b7:	jo     0x40b24b
  40b2b9:	push   ds
  40b2ba:	push   edi
  40b2bb:	ja     0x40b297
  40b2bd:	adc    BYTE PTR [edx+0x480b707d],cl
  40b2c3:	push   ebp
  40b2c4:	(bad)  
  40b2c5:	cli    
  40b2c6:	mov    ah,dh
  40b2c8:	jg     0x40b280
  40b2ca:	jle    0x40b2dd
  40b2cc:	in     al,0x6c
  40b2ce:	push   ebp
  40b2cf:	aas    
  40b2d0:	enter  0x80a7,0xad
  40b2d4:	nop
  40b2d5:	popf   
  40b2d6:	(bad)  
  40b2d7:	mov    ebx,0x916c1274
  40b2dc:	leave  
  40b2dd:	scas   eax,DWORD PTR es:[edi]
  40b2de:	inc    esi
  40b2df:	ret    0x6be9
  40b2e2:	fadd   QWORD PTR [edx]
  40b2e4:	enter  0x3992,0x8f
  40b2e8:	imul   ebp,DWORD PTR [eax],0x39
  40b2eb:	cs pop ecx
  40b2ed:	daa    
  40b2ee:	repz dec eax
  40b2f0:	popf   
  40b2f1:	mov    bh,0xe7
  40b2f3:	sti    
  40b2f4:	scas   eax,DWORD PTR es:[edi]
  40b2f5:	jno    0x40b31b
  40b2f7:	mov    esi,0xc6b9b9f
  40b2fc:	pushf  
  40b2fd:	fwait
  40b2fe:	add    cl,BYTE PTR [esi-0x57536e2a]
  40b304:	sbb    eax,0xb5ad36f
  40b309:	xchg   BYTE PTR [edx],al
  40b30b:	mov    ecx,0xdff46a32
  40b310:	add    bh,BYTE PTR [ebx-0x78]
  40b313:	add    al,0xb2
  40b315:	fimul  WORD PTR [edi-0x19]
  40b318:	lock pop edx
  40b31a:	cmp    ebx,DWORD PTR [edi]
  40b31c:	arpl   WORD PTR [ebx+0x721cdcc9],cx
  40b322:	pop    ebx
  40b323:	or     DWORD PTR [edx+0x16],ecx
  40b326:	mov    ecx,0xf5dfe6e8
  40b32b:	daa    
  40b32c:	ins    BYTE PTR es:[edi],dx
  40b32d:	xor    DWORD PTR [ebp-0x7b17cb0b],edx
  40b333:	imul   ebp,DWORD PTR [edx+0x64852373],0x5
  40b33a:	xchg   edi,eax
  40b33b:	inc    esi
  40b33c:	and    DWORD PTR [ebp+0x43],edi
  40b33f:	pop    ds
  40b340:	xor    eax,0xe4337602
  40b345:	je     0x40b384
  40b347:	je     0x40b2fb
  40b349:	sbb    ah,BYTE PTR [ecx+0x76b84dcf]
  40b34f:	outs   dx,BYTE PTR ds:[esi]
  40b350:	sub    ebp,esi
  40b352:	(bad)  
  40b353:	idiv   DWORD PTR [esi-0x75]
  40b356:	arpl   WORD PTR [edx],dx
  40b358:	das    
  40b359:	jae    0x40b3cb
  40b35b:	mov    dl,0x9d
  40b35d:	out    dx,eax
  40b35e:	mov    esi,0xb71dc8
  40b363:	aad    0x6d
  40b365:	and    al,0xb4
  40b367:	dec    eax
  40b368:	sahf   
  40b369:	xchg   DWORD PTR [esi-0x3283f011],ebp
  40b36f:	cmp    DWORD PTR [ebx-0x64],eax
  40b372:	test   BYTE PTR [edx],bl
  40b374:	ins    DWORD PTR es:[edi],dx
  40b375:	loopne 0x40b32b
  40b377:	lock push ss
  40b379:	sti    
  40b37a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b37b:	sub    DWORD PTR [ebx-0x2379cb7f],edx
  40b381:	adc    eax,0xe2e3840
  40b386:	xchg   ebp,esi
  40b388:	(bad)  
  40b389:	mov    dh,0x1a
  40b38b:	xchg   ebp,eax
  40b38c:	jbe    0x40b31a
  40b38e:	shl    BYTE PTR [edx-0x30],1
  40b391:	cdq    
  40b392:	das    
  40b393:	mov    esp,?
  40b395:	xchg   edi,eax
  40b396:	(bad)  
  40b397:	ds inc ecx
  40b399:	ror    DWORD PTR [ebx-0x65],0x40
  40b39d:	xor    eax,0x7f781f0
  40b3a2:	in     eax,dx
  40b3a3:	cli    
  40b3a4:	or     DWORD PTR [eax-0x69],esp
  40b3a7:	nop
  40b3a8:	push   ebp
  40b3a9:	jno    0x40b335
  40b3ab:	push   esp
  40b3ac:	vpmacsdql ymm3,ymm5,YMMWORD PTR [edi],ymm7
  40b3b2:	mov    esp,0xd6d54344
  40b3b7:	jg     0x40b425
  40b3b9:	add    ch,BYTE PTR [ecx+0x4e4c1de0]
  40b3bf:	cld    
  40b3c0:	aas    
  40b3c1:	shl    DWORD PTR [edi],1
  40b3c3:	or     al,0xd0
  40b3c5:	shl    BYTE PTR [edi],0x34
  40b3c8:	push   ds
  40b3c9:	mov    ah,0x5a
  40b3cb:	xor    edi,DWORD PTR [ecx-0x4f]
  40b3ce:	pop    esp
  40b3cf:	mov    ch,0x94
  40b3d1:	pop    es
  40b3d2:	adc    edi,ebp
  40b3d4:	jno    0x40b386
  40b3d6:	sbb    esp,DWORD PTR [edx]
  40b3d8:	in     al,dx
  40b3d9:	add    DWORD PTR [ebp+0x7a],edx
  40b3dc:	sbb    edx,DWORD PTR [edx]
  40b3de:	jae    0x40b45f
  40b3e0:	add    edi,DWORD PTR [esi-0x47]
  40b3e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3e4:	pop    eax
  40b3e5:	ret    
  40b3e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3e7:	out    0x39,al
  40b3e9:	xor    eax,0xcdef9bbc
  40b3ee:	push   cs
  40b3ef:	push   esi
  40b3f0:	mov    bl,0x78
  40b3f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3f3:	lods   eax,DWORD PTR ds:[esi]
  40b3f4:	xlat   BYTE PTR ds:[ebx]
  40b3f5:	stos   DWORD PTR es:[edi],eax
  40b3f6:	out    dx,eax
  40b3f7:	retf   
  40b3f8:	fistp  WORD PTR [ebx+0x55]
  40b3fb:	or     ecx,DWORD PTR [eax-0x7a]
  40b3fe:	push   ebx
  40b3ff:	enter  0xc9bb,0xf
  40b403:	or     DWORD PTR [ecx],0xc27431dc
  40b409:	add    ah,BYTE PTR [edx+0x2e6d1fa4]
  40b40f:	js     0x40b3b1
  40b411:	inc    esi
  40b412:	ficom  DWORD PTR [ebx+0x64]
  40b415:	ficom  DWORD PTR [bp-0x3d38]
  40b41a:	jp     0x40b493
  40b41c:	std    
  40b41d:	out    0xac,eax
  40b41f:	xchg   esi,eax
  40b420:	xchg   esi,eax
  40b421:	mov    eax,ds:0x3e0df5f7
  40b426:	xchg   esi,eax
  40b427:	pop    eax
  40b428:	and    DWORD PTR [esi+0x17],ecx
  40b42b:	inc    edx
  40b42c:	adc    al,0xab
  40b42e:	cwde   
  40b42f:	scas   al,BYTE PTR es:[edi]
  40b430:	std    
  40b431:	loope  0x40b480
  40b433:	mov    ecx,0xe78155f3
  40b438:	ret    
  40b439:	pop    eax
  40b43a:	pop    ebp
  40b43b:	pop    ebp
  40b43c:	je     0x40b449
  40b43e:	ror    DWORD PTR [eax-0x1d],1
  40b441:	not    BYTE PTR [ecx+0x55]
  40b444:	mov    ch,BYTE PTR [esi+0x59872e8c]
  40b44a:	or     eax,0x40d48bac
  40b44f:	pop    edi
  40b450:	push   edi
  40b451:	(bad)  
  40b452:	out    dx,eax
  40b453:	add    al,0x5
  40b455:	mov    ebp,0xe7fcb4f4
  40b45a:	fnstenv [eax-0x4de8fcab]
  40b460:	cs push 0xdec8ad84
  40b466:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b467:	aas    
  40b468:	bound  ebp,QWORD PTR [edx+esi*2-0x7b]
  40b46c:	xor    eax,0xb9405af5
  40b471:	sahf   
  40b472:	xchg   ebx,eax
  40b473:	or     al,0x2a
  40b475:	adc    BYTE PTR [edi-0x32d571d1],bl
  40b47b:	imul   esi,ebp,0xffffffbe
  40b47e:	inc    ecx
  40b47f:	adc    al,0x7d
  40b481:	dec    edi
  40b482:	xor    ah,BYTE PTR ds:0x50727f36
  40b488:	pop    ss
  40b489:	xchg   edx,eax
  40b48a:	mov    bl,0x26
  40b48c:	ja     0x40b463
  40b48e:	mov    bh,dl
  40b490:	pop    esp
  40b491:	jmp    0x9a8a:0x5e0c7d08
  40b498:	lods   al,BYTE PTR ds:[esi]
  40b499:	adc    al,0x5e
  40b49b:	arpl   WORD PTR [edi+0x19d0781b],di
  40b4a1:	adc    DWORD PTR [esi+ebx*8+0x1dbf6061],0xc4e8f890
  40b4ac:	inc    esp
  40b4ad:	jnp    0x40b49b
  40b4af:	stos   DWORD PTR es:[edi],eax
  40b4b0:	add    BYTE PTR [eax],dl
  40b4b2:	mov    ebp,0x1f0de87
  40b4b7:	loop   0x40b4f4
  40b4b9:	xchg   DWORD PTR [edi+0x798e44fc],esi
  40b4bf:	cmc    
  40b4c0:	imul   edi,DWORD PTR [ebp-0x712d3c50],0xffffff9f
  40b4c7:	out    0xe6,al
  40b4c9:	outs   dx,BYTE PTR es:[esi]
  40b4cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4cc:	push   edi
  40b4cd:	jge    0x40b463
  40b4cf:	mov    esi,0xd8aa8ce3
  40b4d5:	loopne 0x40b480
  40b4d7:	sub    al,0xea
  40b4d9:	(bad)  
  40b4db:	mov    dh,BYTE PTR [edx+0x68]
  40b4de:	xchg   ecx,eax
  40b4df:	mov    eax,ds:0x302caa67
  40b4e4:	es ja  0x40b508
  40b4e7:	sub    BYTE PTR [edi+0x64],ah
  40b4ea:	es push esp
  40b4ec:	ja     0x40b4a5
  40b4ee:	inc    ecx
  40b4ef:	dec    ebx
  40b4f0:	or     eax,DWORD PTR [esp+ecx*4]
  40b4f3:	xor    al,0x8d
  40b4f5:	push   eax
  40b4f6:	(bad)  
  40b4f7:	int3   
  40b4f8:	scas   al,BYTE PTR es:[edi]
  40b4f9:	and    BYTE PTR [eax],ch
  40b4fb:	mov    dl,0x3e
  40b4fd:	push   es
  40b4fe:	arpl   WORD PTR [eax],sp
  40b500:	in     al,dx
  40b501:	retf   
  40b502:	dec    esi
  40b503:	mov    ah,0x95
  40b505:	pop    ecx
  40b506:	bound  esi,QWORD PTR [edi-0x54f74196]
  40b50c:	or     ch,bh
  40b50e:	scas   al,BYTE PTR es:[edi]
  40b50f:	jns    0x40b546
  40b511:	mov    eax,ds:0xc5086c9
  40b516:	bswap  ecx
  40b518:	cmp    al,0x3d
  40b51a:	sub    ah,BYTE PTR [ecx*1-0xc364772]
  40b521:	popa   
  40b522:	lods   al,BYTE PTR ds:[esi]
  40b523:	gs dec ebp
  40b525:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b526:	ret    
  40b527:	es or  eax,0x78956d09
  40b52d:	add    BYTE PTR [ecx+0x64],al
  40b530:	(bad)  
  40b531:	clc    
  40b532:	dec    ebx
  40b533:	xor    ecx,esp
  40b535:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b536:	stc    
  40b537:	arpl   WORD PTR [esi+0x19b8e68f],ax
  40b53d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b53e:	or     eax,0xe1b5346e
  40b543:	mov    ch,0xd7
  40b545:	adc    al,0x9
  40b547:	test   eax,0xdd1b7192
  40b54c:	fbstp  TBYTE PTR [eax-0x156e4f73]
  40b552:	lock loope 0x40b510
  40b555:	(bad)  
  40b557:	push   esp
  40b558:	dec    ebx
  40b559:	(bad)  
  40b55a:	sub    esp,DWORD PTR [ecx+0x36]
  40b55d:	leave  
  40b55e:	std    
  40b55f:	les    ebx,FWORD PTR [edx+0x6f]
  40b562:	mov    eax,ds:0x8487ad2a
  40b567:	dec    ebx
  40b568:	pushf  
  40b569:	xor    al,0x8
  40b56b:	shl    BYTE PTR [edx+0x73],0x80
  40b56f:	leave  
  40b570:	ret    
  40b571:	jb     0x40b5a8
  40b573:	je     0x40b532
  40b575:	scas   al,BYTE PTR es:[edi]
  40b576:	shl    DWORD PTR [esi-0x1172ab55],1
  40b57c:	or     bh,BYTE PTR [ebp-0x638974d2]
  40b582:	jecxz  0x40b551
  40b584:	add    al,0x9
  40b586:	fbstp  TBYTE PTR [esi]
  40b588:	dec    DWORD PTR [esi+0x2140db18]
  40b58e:	xchg   edx,eax
  40b58f:	iret   
  40b590:	and    BYTE PTR [edx-0x47d3fe12],ch
  40b596:	dec    ecx
  40b597:	nop
  40b598:	and    eax,ecx
  40b59a:	fnstsw WORD PTR [ebx-0x2a]
  40b59d:	jecxz  0x40b601
  40b59f:	stc    
  40b5a0:	jae    0x40b531
  40b5a2:	pop    eax
  40b5a3:	mov    dl,0x5b
  40b5a5:	leave  
  40b5a6:	and    al,0x31
  40b5a8:	imul   ecx,eax,0x7259705f
  40b5ae:	(bad)  [edx+0x3b7ab837]
  40b5b4:	retf   0xd68b
  40b5b7:	test   bl,dl
  40b5b9:	sub    BYTE PTR [ebp-0x1910c732],bh
  40b5bf:	pminsw mm5,mm5
  40b5c2:	and    esp,edi
  40b5c4:	mov    eax,ds:0x822be390
  40b5c9:	test   DWORD PTR [edx],ecx
  40b5cb:	out    dx,eax
  40b5cc:	outs   dx,BYTE PTR ds:[esi]
  40b5cd:	dec    eax
  40b5ce:	mov    cl,0xb
  40b5d0:	mov    eax,ds:0xd4cd5e7a
  40b5d5:	test   al,0x6f
  40b5d7:	pop    esi
  40b5d8:	mov    edi,0xf86d519
  40b5dd:	jb     0x40b5f9
  40b5df:	ret    0xa8f9
  40b5e2:	stos   BYTE PTR es:[edi],al
  40b5e3:	add    ebx,DWORD PTR [eax+0x39]
  40b5e6:	loope  0x40b5ce
  40b5e8:	mov    al,0xb9
  40b5ea:	gs aaa 
  40b5ec:	xchg   esp,eax
  40b5ed:	xchg   edx,eax
  40b5ee:	adc    ch,BYTE PTR [ebx]
  40b5f0:	push   edi
  40b5f1:	std    
  40b5f2:	jb     0x40b57b
  40b5f4:	sbb    al,0x38
  40b5f6:	jmp    0x4962:0xbef20903
  40b5fd:	push   edi
  40b5fe:	dec    eax
  40b5ff:	xor    ecx,DWORD PTR [edx]
  40b601:	lods   al,BYTE PTR ds:[esi]
  40b602:	adc    eax,0x8eb960c7
  40b607:	add    BYTE PTR [ecx-0x2a817838],al
  40b60d:	add    ebx,0xffffffd8
  40b610:	cmc    
  40b611:	pop    ecx
  40b612:	adc    eax,0x10e3e18f
  40b617:	dec    edx
  40b618:	repnz lahf 
  40b61a:	cmp    al,0xdd
  40b61c:	dec    esp
  40b61d:	arpl   WORD PTR [edi+eax*4+0x62],bx
  40b621:	and    cl,dl
  40b623:	dec    edi
  40b624:	pushf  
  40b625:	lds    ebx,FWORD PTR [edi-0xb]
  40b628:	lahf   
  40b629:	(bad)  
  40b62a:	ror    al,1
  40b62c:	shr    DWORD PTR [ebx],0xf5
  40b62f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b630:	mov    ebp,0x844e6da8
  40b635:	shl    DWORD PTR [ecx-0x30],1
  40b638:	xor    dl,BYTE PTR [eax+0x26]
  40b63b:	call   0x385c34bd
  40b640:	inc    edx
  40b641:	adc    esi,esp
  40b643:	mov    ds:0xfc505100,al
  40b648:	or     ch,BYTE PTR [esi]
  40b64a:	pop    esp
  40b64b:	aaa    
  40b64c:	or     al,al
  40b64e:	jbe    0x40b60f
  40b650:	jge    0x40b6ce
  40b652:	in     eax,0x48
  40b654:	out    dx,eax
  40b655:	stos   DWORD PTR es:[edi],eax
  40b656:	cmp    DWORD PTR [edx+0x6],ecx
  40b659:	ins    DWORD PTR es:[edi],dx
  40b65a:	loop   0x40b5ec
  40b65c:	pop    edi
  40b65d:	or     al,0x2d
  40b65f:	(bad)  
  40b660:	mov    dh,0xfb
  40b662:	cmc    
  40b663:	push   ebp
  40b664:	push   ebx
  40b665:	test   DWORD PTR [eax-0x14],0x538bc6bb
  40b66c:	mov    esp,0xb951a1a7
  40b671:	sub    ebx,DWORD PTR [esi+0x3bea8d59]
  40b677:	outs   dx,DWORD PTR ds:[esi]
  40b678:	sti    
  40b679:	cld    
  40b67a:	pop    ss
  40b67b:	lock loop 0x40b6bf
  40b67e:	mov    ch,0xfc
  40b680:	xchg   esi,eax
  40b681:	pop    edi
  40b682:	xchg   ebp,eax
  40b683:	cmp    eax,0x1b9fcfd1
  40b688:	xchg   ebp,eax
  40b689:	in     al,0x6a
  40b68b:	add    al,0x6a
  40b68d:	popa   
  40b68e:	fild   QWORD PTR [eax+0x1d]
  40b691:	dec    ebx
  40b692:	js     0x40b69d
  40b694:	cwde   
  40b695:	cmp    ah,dh
  40b697:	xor    ch,dl
  40b699:	lock mov bl,0xee
  40b69c:	jmp    0xb629:0xa6862981
  40b6a3:	call   0x8b2d:0xb8a6c8c4
  40b6aa:	push   edi
  40b6ab:	enter  0xf591,0xc
  40b6af:	xor    dh,dl
  40b6b1:	or     al,0x48
  40b6b3:	xchg   esp,eax
  40b6b4:	push   esp
  40b6b5:	pop    ds
  40b6b6:	outs   dx,DWORD PTR ds:[esi]
  40b6b7:	and    eax,0x44aadad7
  40b6bc:	les    edx,FWORD PTR [ebx-0x4960e6c1]
  40b6c2:	imul   bh
  40b6c4:	add    esp,DWORD PTR [edx]
  40b6c6:	mov    esp,0x1d47da5d
  40b6cb:	sub    al,0x1c
  40b6cd:	mov    bh,bh
  40b6cf:	aad    0x3f
  40b6d1:	dec    ebx
  40b6d2:	or     eax,0xd59605b7
  40b6d7:	lds    edx,FWORD PTR [eax+ecx*1+0x69]
  40b6db:	xchg   edi,eax
  40b6dc:	mov    al,0x42
  40b6de:	int3   
  40b6df:	je     0x40b711
  40b6e1:	sahf   
  40b6e2:	inc    esi
  40b6e3:	add    eax,0x767df177
  40b6e8:	int    0x71
  40b6ea:	mov    al,0xd
  40b6ec:	aas    
  40b6ed:	call   0x4fb66ac4
  40b6f2:	retf   
  40b6f3:	loop   0x40b716
  40b6f5:	pop    ebp
  40b6f6:	(bad)  
  40b6f7:	mov    bh,0xc7
  40b6f9:	mov    ds:0x6565fcb6,al
  40b6fe:	repnz mov DWORD PTR [ebp+0x316c4e91],eax
  40b705:	outs   dx,BYTE PTR ds:[esi]
  40b706:	push   ds
  40b707:	mov    ebp,0xaf14c98
  40b70c:	gs nop
  40b70e:	xchg   esp,eax
  40b70f:	xchg   ebp,eax
  40b710:	pop    esp
  40b711:	bound  ecx,QWORD PTR [edi]
  40b713:	rol    DWORD PTR [ebp-0x63b102e9],0x5b
  40b71a:	sbb    ah,BYTE PTR [ebx+0x2d]
  40b71d:	adc    DWORD PTR [edi-0x8],ebx
  40b720:	stos   DWORD PTR es:[edi],eax
  40b721:	dec    ebx
  40b722:	mov    BYTE PTR ds:0x7c76502,dh
  40b729:	adc    eax,0xadea0cb4
  40b72e:	mov    cl,0x5d
  40b730:	fbld   TBYTE PTR [edx]
  40b732:	cmp    DWORD PTR [ebx+0x1a],esi
  40b735:	xchg   ecx,eax
  40b736:	imul   edi,eax,0xfffffffd
  40b739:	out    dx,al
  40b73a:	or     esi,esi
  40b73c:	out    0xb3,eax
  40b73e:	cmp    DWORD PTR [ebx],0x4b347775
  40b744:	setb   BYTE PTR [edi]
  40b747:	mov    DWORD PTR [ecx+esi*2+0x51],ebx
  40b74b:	imul   ebp,DWORD PTR [eax],0xffffff9f
  40b74e:	xchg   BYTE PTR [esi+0x21],al
  40b751:	and    eax,0xd418bd62
  40b756:	sub    edi,DWORD PTR [eax+0x6788ba5b]
  40b75c:	push   edi
  40b75d:	into   
  40b75e:	pop    eax
  40b75f:	xor    esi,edi
  40b761:	push   edx
  40b762:	lea    edi,[edx-0x7101c99a]
  40b768:	sahf   
  40b769:	pop    ds
  40b76a:	inc    ebp
  40b76b:	mov    edx,ecx
  40b76d:	mov    eax,ds:0x6e8542d8
  40b772:	dec    eax
  40b773:	add    DWORD PTR [ebp+0x629a49f7],ebx
  40b779:	int3   
  40b77a:	dec    ebx
  40b77b:	pop    ss
  40b77c:	add    al,0x66
  40b77e:	or     bh,BYTE PTR ds:0xb3753093
  40b784:	or     DWORD PTR [ebx-0x732e8dc3],esp
  40b78a:	pop    esi
  40b78b:	cmp    al,0x75
  40b78d:	sub    eax,0xcb776f61
  40b792:	in     al,dx
  40b793:	sbb    BYTE PTR [ecx+0x7b96573d],bl
  40b799:	(bad)  
  40b79a:	in     al,dx
  40b79b:	(bad)  
  40b79c:	xor    eax,0x7a4e87b
  40b7a1:	fisttp QWORD PTR ds:0x90158bb1
  40b7a7:	fisubr DWORD PTR [eax+0x54]
  40b7aa:	test   DWORD PTR [edx],0x8e6c9be5
  40b7b0:	fadd   st(0),st
  40b7b2:	jmp    0xe004f46c
  40b7b7:	mov    ebx,0x3c3bfb74
  40b7bc:	fwait
  40b7bd:	mov    ecx,?
  40b7bf:	pop    ecx
  40b7c0:	int3   
  40b7c1:	arpl   WORD PTR [ebx],ax
  40b7c3:	fwait
  40b7c4:	aaa    
  40b7c5:	pop    ecx
  40b7c6:	cs (bad) 
  40b7c8:	push   ecx
  40b7c9:	pop    es
  40b7ca:	ret    0xa252
  40b7cd:	dec    ecx
  40b7ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7cf:	std    
  40b7d0:	inc    ecx
  40b7d1:	jbe    0x40b832
  40b7d3:	sbb    eax,0x8fa2dd12
  40b7d8:	xchg   esp,eax
  40b7d9:	mov    BYTE PTR [ecx+0x63],ah
  40b7dc:	in     al,0x90
  40b7de:	pop    edi
  40b7df:	and    DWORD PTR [ecx-0x10],esp
  40b7e2:	cmp    al,0x7c
  40b7e4:	dec    esi
  40b7e5:	add    eax,0x4b26f5e0
  40b7ea:	jbe    0x40b82a
  40b7ec:	adc    ebx,DWORD PTR [ebx-0x29]
  40b7ef:	dec    ebx
  40b7f0:	xor    ch,BYTE PTR [edi*2+0x277b45f3]
  40b7f7:	xchg   edi,eax
  40b7f8:	or     BYTE PTR [ebp-0x35],0xa0
  40b7fc:	nop
  40b7fd:	xchg   edi,eax
  40b7fe:	scas   al,BYTE PTR es:[edi]
  40b7ff:	or     eax,0xc3f04f1f
  40b804:	test   BYTE PTR [ecx+0x23],dl
  40b807:	enter  0xb693,0x78
  40b80b:	and    al,0xf9
  40b80d:	sahf   
  40b80e:	xor    eax,0x924056a3
  40b813:	rcr    cl,cl
  40b815:	push   edx
  40b816:	mov    cl,0x48
  40b818:	xor    al,BYTE PTR [ebp-0x70]
  40b81b:	sbb    eax,0xe52834a1
  40b820:	sub    al,0x9d
  40b822:	pop    ebp
  40b823:	inc    eax
  40b824:	push   es
  40b825:	adc    al,0xdf
  40b827:	test   al,0x3d
  40b829:	popf   
  40b82a:	pop    ebp
  40b82b:	mov    dl,0x4f
  40b82d:	(bad)  
  40b82e:	gs push esi
  40b830:	xchg   ebx,eax
  40b831:	jne    0x40b850
  40b833:	sbb    edi,DWORD PTR [edx+0x3e]
  40b836:	enter  0xafa1,0x42
  40b83a:	popa   
  40b83b:	xor    edx,ebp
  40b83d:	or     eax,0x5a20b31f
  40b843:	inc    ebx
  40b844:	and    BYTE PTR [ecx+0x41a9f372],dl
  40b84a:	in     al,dx
  40b84b:	test   DWORD PTR [ecx+0x64572920],0x4b1a6a95
  40b855:	mov    cl,0xe
  40b857:	sub    edx,esp
  40b859:	pop    es
  40b85a:	jne    0x40b833
  40b85c:	sbb    eax,0x7ed760d4
  40b861:	test   BYTE PTR [edi],ah
  40b863:	rol    ecx,cl
  40b865:	jp     0x40b84a
  40b867:	outs   dx,DWORD PTR ds:[esi]
  40b868:	in     eax,dx
  40b869:	lods   eax,DWORD PTR ds:[esi]
  40b86a:	sub    eax,0xf19aecd4
  40b86f:	adc    BYTE PTR [ecx-0x41057d8],0x39
  40b876:	js     0x40b847
  40b878:	push   esi
  40b879:	imul   si,dx,0xffb0
  40b87d:	push   ebp
  40b87e:	adc    eax,0xfaf33cd8
  40b883:	and    BYTE PTR [edx],dh
  40b885:	jno    0x40b853
  40b887:	cdq    
  40b888:	or     DWORD PTR [esi-0x4d],ebx
  40b88b:	mov    cl,bl
  40b88d:	pop    ss
  40b88e:	fs pushf 
  40b890:	ds inc ecx
  40b892:	(bad)  
  40b893:	call   DWORD PTR [esi+0x3]
  40b896:	pushf  
  40b897:	pop    ss
  40b898:	cmp    DWORD PTR ds:0x7c61784a,ebx
  40b89e:	mov    ?,WORD PTR [eax+0x66]
  40b8a1:	mov    edx,0x80734a03
  40b8a6:	sbb    al,0xfc
  40b8a8:	mov    al,ds:0x18f37bbc
  40b8ad:	and    BYTE PTR [ebx-0x1d],dh
  40b8b0:	sub    eax,0x3814df64
  40b8b5:	call   0x730afeb3
  40b8ba:	call   0x63c5bd3a
  40b8bf:	xlat   BYTE PTR ds:[ebx]
  40b8c0:	mov    dh,0x94
  40b8c2:	aas    
  40b8c3:	and    ah,BYTE PTR [edi-0x75]
  40b8c6:	xchg   esi,eax
  40b8c7:	int    0x97
  40b8c9:	mov    bh,0xac
  40b8cb:	test   eax,0xa8362265
  40b8d0:	push   ss
  40b8d1:	neg    dh
  40b8d3:	fwait
  40b8d4:	in     al,0xce
  40b8d6:	mov    al,0x83
  40b8d8:	mov    dl,0x45
  40b8da:	and    ch,ah
  40b8dc:	cmp    eax,0xe737b513
  40b8e1:	push   eax
  40b8e2:	mov    ebp,0x655fea06
  40b8e7:	mov    dh,0x6c
  40b8e9:	mov    dh,0x91
  40b8eb:	lock inc eax
  40b8ed:	mov    al,0xd2
  40b8ef:	cmc    
  40b8f0:	(bad)  
  40b8f1:	dec    esp
  40b8f2:	fwait
  40b8f3:	xchg   edx,eax
  40b8f4:	out    0xa9,eax
  40b8f6:	lods   eax,DWORD PTR ds:[esi]
  40b8f7:	mov    fs,WORD PTR [ecx+ecx*1+0x38a35c11]
  40b8fe:	push   eax
  40b8ff:	jge    0x40b8fb
  40b901:	dec    ebp
  40b902:	push   ds
  40b903:	es or  eax,0x63a8c68
  40b909:	rol    DWORD PTR [edi],1
  40b90b:	fidiv  WORD PTR [eax+0xa]
  40b90e:	mov    ds:0xcbacd9e7,eax
  40b913:	push   edx
  40b914:	adc    edi,0x68
  40b917:	mov    ch,0xc6
  40b919:	sub    edi,DWORD PTR [eax+ebx*4+0x1f]
  40b91d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b91e:	jle    0x40b91b
  40b920:	in     al,dx
  40b921:	enter  0x388a,0x7a
  40b925:	sub    eax,0xbe1c34c1
  40b92a:	add    al,0x61
  40b92c:	int    0x58
  40b92e:	or     al,BYTE PTR ds:0xcf872813
  40b934:	mov    ebx,0x4f3fbb46
  40b939:	out    0x95,al
  40b93b:	xor    eax,0xcba2e976
  40b940:	push   cs
  40b941:	sbb    eax,0x948b48bf
  40b946:	push   ebp
  40b947:	in     eax,0xca
  40b949:	pop    es
  40b94a:	pop    esi
  40b94b:	sti    
  40b94c:	mov    ebx,0x91ac6c38
  40b951:	dec    edx
  40b952:	inc    esp
  40b953:	cs das 
  40b955:	ja     0x40b901
  40b957:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b958:	sbb    DWORD PTR ds:0xe07ef5b0,ebx
  40b95e:	inc    edi
  40b95f:	sub    eax,0x46942bf6
  40b964:	add    cl,bl
  40b966:	push   ds
  40b967:	call   0xebbea136
  40b96c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b96d:	adc    esp,DWORD PTR [esi]
  40b96f:	pop    ss
  40b970:	mov    al,ds:0x3196dd78
  40b975:	dec    eax
  40b976:	xchg   DWORD PTR ds:0xc62090ee,ecx
  40b97c:	push   0xa10d5bcd
  40b981:	stc    
  40b982:	mov    eax,ds:0x7d1e1e2e
  40b987:	xchg   esp,eax
  40b988:	sbb    esp,DWORD PTR [ebx]
  40b98a:	ss (bad) 
  40b98d:	xchg   ebp,edi
  40b98f:	pop    edx
  40b990:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b992:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b993:	scas   al,BYTE PTR es:[edi]
  40b994:	sbb    al,0xb3
  40b996:	jl     0x40b91b
  40b998:	push   eax
  40b999:	icebp  
  40b99a:	sub    DWORD PTR [esi+0x6b40ea20],eax
  40b9a0:	lods   eax,DWORD PTR ds:[esi]
  40b9a1:	lock cmc 
  40b9a3:	fbstp  TBYTE PTR [esi+0x5e]
  40b9a6:	outs   dx,DWORD PTR ds:[esi]
  40b9a7:	xor    BYTE PTR [eax+0x51],dl
  40b9aa:	mov    eax,ds:0x55bd1154
  40b9af:	and    eax,0xff842019
  40b9b4:	mov    ds:0xa0b803dc,eax
  40b9b9:	mov    dh,0xfd
  40b9bb:	or     eax,DWORD PTR ss:[edx]
  40b9be:	or     esi,esi
  40b9c0:	sahf   
  40b9c1:	dec    ebp
  40b9c2:	push   esp
  40b9c3:	ja     0x40b9a8
  40b9c5:	in     al,0xe7
  40b9c7:	std    
  40b9c8:	(bad)  
  40b9c9:	sub    BYTE PTR [ebp-0x35],dh
  40b9cc:	xor    eax,0x91ccd545
  40b9d1:	mov    edi,0xf4d8c21c
  40b9d6:	mov    dh,dh
  40b9d8:	jecxz  0x40ba51
  40b9da:	mov    ebp,ecx
  40b9dc:	mov    ecx,0xf657b0a0
  40b9e1:	adc    bh,BYTE PTR [ebx+0x9]
  40b9e4:	or     ch,BYTE PTR [ebx+0x57669e2c]
  40b9ea:	hlt    
  40b9eb:	dec    esi
  40b9ec:	gs add eax,ecx
  40b9ef:	xchg   ebp,eax
  40b9f0:	jl     0x40b9a5
  40b9f2:	jecxz  0x40ba52
  40b9f4:	and    al,0x39
  40b9f6:	fwait
  40b9f7:	and    BYTE PTR [ecx],ch
  40b9f9:	js     0x40b9da
  40b9fb:	cdq    
  40b9fc:	js     0x40b9e8
  40b9fe:	fwait
  40b9ff:	dec    ebx
  40ba00:	xor    eax,0x53e18483
  40ba05:	out    0xe6,eax
  40ba07:	ins    DWORD PTR es:[edi],dx
  40ba08:	jge    0x40b994
  40ba0a:	nop
  40ba0b:	dec    ebx
  40ba0c:	mov    eax,0xe2d9edb5
  40ba11:	push   es
  40ba12:	and    BYTE PTR [edi-0x3988e3b5],dh
  40ba18:	loop   0x40ba5d
  40ba1a:	jecxz  0x40ba4a
  40ba1c:	sub    DWORD PTR [eax-0xc],esi
  40ba1f:	popf   
  40ba20:	sub    ebx,ecx
  40ba22:	mov    cl,0x8f
  40ba24:	and    eax,0x7c43babb
  40ba29:	inc    ecx
  40ba2a:	xor    eax,0x55eb0a7a
  40ba2f:	ja     0x40ba05
  40ba31:	fistp  QWORD PTR [edi]
  40ba33:	xchg   ecx,eax
  40ba34:	scas   eax,DWORD PTR es:[edi]
  40ba35:	mov    ds:0x60fe97d7,eax
  40ba3a:	mov    DWORD PTR [esi+edi*4+0xa8a5a6a],edi
  40ba41:	or     DWORD PTR [edi-0x58cf767d],edx
  40ba47:	sub    DWORD PTR [ebx],ecx
  40ba49:	sub    BYTE PTR [ebx],0x99
  40ba4c:	lds    eax,FWORD PTR [eax+edi*2]
  40ba4f:	add    ebp,DWORD PTR es:[eax+0x4532592c]
  40ba56:	ret    0xcafc
  40ba59:	adc    al,0xee
  40ba5b:	inc    esi
  40ba5c:	and    edx,DWORD PTR [ecx+0x10]
  40ba5f:	dec    eax
  40ba60:	retf   
  40ba61:	inc    edi
  40ba62:	sub    DWORD PTR [eax+edx*8-0x3],esp
  40ba66:	cmp    esi,DWORD PTR [ecx]
  40ba68:	ins    BYTE PTR es:[edi],dx
  40ba69:	jmp    0x40ba05
  40ba6b:	aaa    
  40ba6c:	mov    dh,0xc7
  40ba6e:	(bad)  
  40ba6f:	cli    
  40ba70:	(bad)  
  40ba71:	int    0xb
  40ba73:	cld    
  40ba74:	leave  
  40ba75:	ret    0xedfb
  40ba78:	sbb    dh,BYTE PTR [eax+0x2f]
  40ba7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba7c:	inc    ebx
  40ba7d:	test   al,0xde
  40ba7f:	dec    edi
  40ba80:	enter  0xe200,0x2b
  40ba84:	cmp    DWORD PTR [ecx-0x33],0x6de4f2aa
  40ba8b:	pop    es
  40ba8c:	push   ebp
  40ba8d:	dec    ecx
  40ba8e:	das    
  40ba8f:	mov    al,ds:0xcad51465
  40ba94:	adc    ebp,0xffffff9c
  40ba97:	or     ebp,DWORD PTR [edx-0x12fc1285]
  40ba9d:	addr16 mov eax,0x41d69160
  40baa3:	std    
  40baa4:	dec    ebx
  40baa5:	sub    eax,esi
  40baa7:	ror    edi,0x52
  40baaa:	mov    BYTE PTR [ecx],bh
  40baac:	fisub  DWORD PTR ds:0x122448d
  40bab2:	push   edx
  40bab3:	inc    eax
  40bab4:	in     al,0xd
  40bab6:	iret   
  40bab7:	pop    eax
  40bab8:	test   DWORD PTR [ebx-0x2ff68c72],0x89fd6a72
  40bac2:	aam    0x85
  40bac4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bac5:	inc    ebx
  40bac6:	sub    eax,0x7d596e44
  40bacb:	in     eax,0x7c
  40bacd:	loop   0x40ba9d
  40bacf:	pop    ss
  40bad0:	sti    
  40bad1:	mov    DWORD PTR [ecx+0x74bf2895],ebp
  40bad7:	adc    DWORD PTR [eax+0x4e109dfc],esp
  40badd:	mov    fs,esp
  40badf:	fimul  DWORD PTR [ecx+0x677a609a]
  40bae5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bae6:	sub    eax,0xddfb76d7
  40baeb:	int3   
  40baec:	dec    edx
  40baed:	push   0xa6799e0a
  40baf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40baf3:	stos   BYTE PTR es:[edi],al
  40baf4:	test   DWORD PTR [ebp+ebp*1+0x4b],ebp
  40baf8:	xchg   DWORD PTR ds:[esi+0x37],ebx
  40bafc:	mov    ah,BYTE PTR [edx]
  40bafe:	test   BYTE PTR [eax-0x69],ch
  40bb01:	fs das 
  40bb03:	sub    ebx,DWORD PTR [eax+0x6a]
  40bb06:	xor    ecx,0x4afaf5f
  40bb0c:	inc    ebp
  40bb0d:	imul   eax,DWORD PTR [esi+edx*1+0x7c],0x40
  40bb12:	xchg   esi,eax
  40bb13:	scas   al,BYTE PTR es:[edi]
  40bb14:	mov    ch,0x77
  40bb16:	sbb    BYTE PTR ds:[edi+edx*1+0x3],cl
  40bb1b:	in     eax,0x85
  40bb1d:	add    eax,0x65031b93
  40bb22:	pusha  
  40bb23:	popf   
  40bb24:	mov    al,0x5e
  40bb26:	xor    DWORD PTR [ebp+0x285a23a8],edi
  40bb2c:	xchg   DWORD PTR ds:0x1587f972,ebx
  40bb32:	out    0x9a,eax
  40bb34:	aas    
  40bb35:	dec    esi
  40bb36:	loop   0x40bb4b
  40bb38:	out    0x6d,eax
  40bb3a:	pop    eax
  40bb3b:	fidiv  WORD PTR [ebx+0x67]
  40bb3e:	mov    eax,0x781c828e
  40bb43:	mov    ebx,0xa0b7bcc
  40bb48:	(bad)  
  40bb49:	call   DWORD PTR [edi-0x1434bd33]
  40bb4f:	out    dx,eax
  40bb50:	jp     0x40bba3
  40bb52:	mov    al,0xb7
  40bb54:	jp     0x40bb41
  40bb56:	xlat   BYTE PTR ds:[ebx]
  40bb57:	pop    ebp
  40bb58:	push   edx
  40bb59:	adc    al,0x8c
  40bb5b:	mov    edi,0x12db1fd9
  40bb60:	xlat   BYTE PTR ds:[ebx]
  40bb61:	add    edi,DWORD PTR [ebx+0x4c]
  40bb64:	ds xor al,0x76
  40bb67:	pop    DWORD PTR ds:0x21c49e38
  40bb6d:	fadd   DWORD PTR [ebx-0x6381eef4]
  40bb73:	out    dx,al
  40bb74:	adc    ch,ah
  40bb76:	jg     0x40bbe3
  40bb78:	and    edx,DWORD PTR [edx+0x2d4b471c]
  40bb7e:	fbstp  TBYTE PTR [edi+0x18ed176a]
  40bb84:	jbe    0x40bbda
  40bb86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb87:	dec    edx
  40bb88:	cmp    bl,bl
  40bb8a:	fistp  DWORD PTR [edx]
  40bb8c:	pop    ss
  40bb8d:	and    bl,BYTE PTR [ebx-0x7f7ea718]
  40bb93:	std    
  40bb94:	xchg   esp,eax
  40bb95:	sti    
  40bb96:	ins    DWORD PTR es:[edi],dx
  40bb97:	pop    ds
  40bb98:	sahf   
  40bb99:	test   DWORD PTR [ecx-0x1830791a],0x905af249
  40bba3:	mov    ebx,DWORD PTR [ebp+0x66ef806]
  40bba9:	stos   DWORD PTR es:[edi],eax
  40bbaa:	lea    edi,[edx-0x6e8fdff5]
  40bbb0:	sub    eax,0x10eef999
  40bbb5:	shr    bl,0x2
  40bbb8:	cs jmp 0x40bb7b
  40bbbb:	mov    ebx,0x70350a05
  40bbc0:	mov    es,WORD PTR [ebp*4+0xa8c8700]
  40bbc7:	jge    0x40bb9f
  40bbc9:	xlat   BYTE PTR ds:[ebx]
  40bbca:	call   0xe3ca4994
  40bbcf:	data16 hlt 
  40bbd1:	leave  
  40bbd2:	js     0x40bba1
  40bbd4:	jb     0x40bb93
  40bbd6:	clc    
  40bbd7:	fdivr  QWORD PTR [ecx]
  40bbd9:	push   ecx
  40bbda:	out    dx,eax
  40bbdb:	cdq    
  40bbdc:	test   al,0xb0
  40bbde:	test   al,0xff
  40bbe0:	shr    BYTE PTR [ebx-0x4f8b35ca],0x35
  40bbe7:	pop    es
  40bbe8:	sahf   
  40bbe9:	pop    ecx
  40bbea:	out    0x6f,al
  40bbec:	pop    ebx
  40bbed:	add    al,0x1f
  40bbef:	and    ebp,DWORD PTR [esi]
  40bbf1:	scas   al,BYTE PTR es:[edi]
  40bbf2:	inc    edx
  40bbf3:	addr16 inc esi
  40bbf5:	xchg   DWORD PTR ds:0xe948133c,esi
  40bbfb:	xlat   BYTE PTR ds:[ebx]
  40bbfc:	in     al,0x4e
  40bbfe:	jl     0x40bc06
  40bc00:	add    al,0x89
  40bc02:	leave  
  40bc03:	adc    BYTE PTR [esp+edi*2+0x47],ah
  40bc07:	inc    edx
  40bc08:	mov    ecx,ebp
  40bc0a:	fidiv  DWORD PTR [ebp-0x626d6371]
  40bc10:	mov    al,0x19
  40bc12:	xchg   esp,eax
  40bc13:	or     DWORD PTR [eax],ecx
  40bc15:	mov    ah,0x31
  40bc17:	dec    esi
  40bc18:	dec    BYTE PTR [eax-0x2c]
  40bc1b:	pop    esp
  40bc1c:	imul   ebp,DWORD PTR [edx+0x561477fa],0x3c887c6d
  40bc26:	out    dx,al
  40bc27:	scas   eax,DWORD PTR es:[edi]
  40bc28:	mov    BYTE PTR [edx+ebx*8],bh
  40bc2b:	std    
  40bc2c:	adc    eax,0xa42e641f
  40bc31:	stc    
  40bc32:	dec    edx
  40bc33:	std    
  40bc34:	add    DWORD PTR [eax+ebx*4-0x2c7886c1],eax
  40bc3b:	fwait
  40bc3c:	jbe    0x40bcba
  40bc3e:	inc    esp
  40bc3f:	outs   dx,DWORD PTR ds:[esi]
  40bc40:	out    0xd2,al
  40bc42:	push   esi
  40bc43:	xor    al,0x8f
  40bc45:	jbe    0x40bc96
  40bc47:	int3   
  40bc48:	jl     0x40bc56
  40bc4a:	add    al,0xd0
  40bc4c:	dec    ecx
  40bc4d:	adc    BYTE PTR [esi-0x24d2c34c],cl
  40bc53:	pop    es
  40bc54:	das    
  40bc55:	nop
  40bc56:	dec    edx
  40bc57:	mov    esi,DWORD PTR [esi-0x4e]
  40bc5a:	mov    bh,0x9b
  40bc5c:	and    DWORD PTR [edi+0x2dc5818d],ebx
  40bc62:	jbe    0x40bcbe
  40bc64:	cmp    BYTE PTR [edx+esi*8+0x57],cl
  40bc68:	xor    edx,ebx
  40bc6a:	scas   al,BYTE PTR es:[edi]
  40bc6b:	jmp    FWORD PTR [eax+0x1cba01d9]
  40bc71:	mov    bl,0xab
  40bc73:	(bad)
  40bc77:	mov    ebx,0xa6cefcfd
  40bc7c:	imul   edx,esi,0xffffffa2
  40bc7f:	out    0x64,eax
  40bc81:	loopne 0x40bc4f
  40bc83:	retf   
  40bc84:	fst    QWORD PTR ds:0x615c694a
  40bc8a:	loopne 0x40bc3b
  40bc8c:	add    al,0x6d
  40bc8e:	xchg   esp,eax
  40bc8f:	pop    es
  40bc90:	add    eax,0x79596b26
  40bc95:	push   es
  40bc96:	mov    BYTE PTR [edi+eax*1],al
  40bc99:	sub    ebx,DWORD PTR [eax-0x72]
  40bc9c:	and    ebx,edi
  40bc9e:	stc    
  40bc9f:	je     0x40bc6d
  40bca1:	push   edx
  40bca2:	sub    dl,dl
  40bca4:	push   ebp
  40bca5:	retf   0x9d51
  40bca8:	(bad)  
  40bca9:	not    BYTE PTR [ebx]
  40bcab:	fsubp  st(1),st
  40bcad:	push   cs
  40bcae:	xchg   edx,eax
  40bcaf:	cs stos DWORD PTR es:[edi],eax
  40bcb1:	dec    edx
  40bcb2:	(bad)  
  40bcb3:	mov    al,0xcd
  40bcb5:	add    BYTE PTR [ebx-0x2473cc32],ch
  40bcbb:	add    ecx,DWORD PTR [edx-0x278c7c54]
  40bcc1:	jmp    0x1823:0x5a4aaa30
  40bcc8:	cmp    BYTE PTR [esi-0x2d],bh
  40bccb:	retf   0xdfdb
  40bcce:	xchg   esi,eax
  40bccf:	push   ss
  40bcd0:	mov    gs:0xa55e466e,eax
  40bcd6:	(bad)  [ecx]
  40bcd8:	jns    0x40bc70
  40bcda:	inc    edx
  40bcdb:	call   0x925cd29a
  40bce0:	loope  0x40bcd2
  40bce2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bce3:	cld    
  40bce4:	test   esp,ebx
  40bce6:	imul   eax,DWORD PTR [ecx],0x2e
  40bce9:	inc    edx
  40bcea:	sbb    DWORD PTR [ebx],ecx
  40bcec:	lods   eax,DWORD PTR ds:[esi]
  40bced:	(bad)  ds:0xddfcad47
  40bcf3:	jno    0x40bd4c
  40bcf5:	scas   al,BYTE PTR es:[edi]
  40bcf6:	scas   al,BYTE PTR es:[edi]
  40bcf7:	cmp    al,0x8d
  40bcf9:	ins    BYTE PTR es:[edi],dx
  40bcfa:	outs   dx,DWORD PTR ds:[esi]
  40bcfb:	mov    bl,0x76
  40bcfd:	ret    
  40bcfe:	or     BYTE PTR [ebx],0x45
  40bd01:	fmul   DWORD PTR [esi-0x46]
  40bd04:	xchg   edi,eax
  40bd05:	xchg   ecx,eax
  40bd06:	jmp    0x64925709
  40bd0b:	ret    0x96c7
  40bd0e:	pop    ds
  40bd0f:	dec    eax
  40bd10:	dec    edx
  40bd11:	xchg   edx,eax
  40bd12:	xor    dh,BYTE PTR [ebp+0x16e15921]
  40bd18:	fs mov esi,0xf306a0f0
  40bd1e:	mov    al,ds:0x51e1937
  40bd23:	xchg   esi,eax
  40bd24:	push   ebx
  40bd25:	sbb    BYTE PTR [eax-0x6c],dl
  40bd28:	jle    0x40bcda
  40bd2a:	fwait
  40bd2b:	jp     0x40bd04
  40bd2d:	add    eax,0x3d2341f3
  40bd32:	out    0x8d,eax
  40bd34:	pop    esi
  40bd35:	jae    0x40bcd5
  40bd37:	imul   esi,DWORD PTR [esi+0x1ad574e4],0xfffffff0
  40bd3e:	repz std 
  40bd40:	lahf   
  40bd41:	fsubr  DWORD PTR [esi]
  40bd43:	in     al,0xac
  40bd45:	sub    eax,0x7bba3ab5
  40bd4a:	cmp    eax,DWORD PTR [ebx+0x78]
  40bd4d:	ss ins DWORD PTR es:[edi],dx
  40bd4f:	xchg   esi,eax
  40bd50:	add    al,0x52
  40bd52:	mov    bl,0xf5
  40bd54:	psubusw mm7,QWORD PTR [ebx-0x45006ad1]
  40bd5b:	out    0xfd,eax
  40bd5d:	mov    ds:0xfa353420,al
  40bd62:	push   es
  40bd63:	xor    al,0xa3
  40bd65:	outs   dx,BYTE PTR ds:[esi]
  40bd66:	pop    edx
  40bd67:	jmp    0x5c34:0xfc96b55e
  40bd6e:	(bad)
  40bd71:	pop    esp
  40bd72:	mov    ch,0x5e
  40bd74:	retf   0x2a4e
  40bd77:	and    eax,edx
  40bd79:	inc    edi
  40bd7a:	add    eax,0xa94218
  40bd7f:	in     al,dx
  40bd80:	std    
  40bd81:	mov    al,ds:0x7430d4bd
  40bd86:	sbb    bl,BYTE PTR [eax+0x14]
  40bd89:	inc    esp
  40bd8a:	test   eax,0x599d232a
  40bd8f:	shr    DWORD PTR [eax+edx*1-0x1b],cl
  40bd93:	sbb    eax,0x11e34142
  40bd98:	add    BYTE PTR [edi],ch
  40bd9a:	pushf  
  40bd9b:	jae    0x40bd74
  40bd9d:	stc    
  40bd9e:	push   esi
  40bd9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bda0:	xchg   bh,ch
  40bda2:	aad    0xea
  40bda4:	mov    ch,0x4
  40bda6:	fist   WORD PTR [ecx-0x61d3008]
  40bdac:	sti    
  40bdad:	and    dh,dh
  40bdaf:	mov    ebx,0xee68af41
  40bdb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdb5:	inc    ecx
  40bdb6:	enter  0xf14e,0x21
  40bdba:	inc    edi
  40bdbb:	loope  0x40bd63
  40bdbd:	std    
  40bdbe:	and    bl,BYTE PTR [ecx-0x38db8831]
  40bdc4:	xchg   BYTE PTR es:[ebx+0x5a2e92d8],al
  40bdcb:	push   0xffffff85
  40bdcd:	pop    edi
  40bdce:	jecxz  0x40bde2
  40bdd0:	and    al,0x34
  40bdd2:	cmp    DWORD PTR [eax],0x3
  40bdd5:	cmp    DWORD PTR [eax-0x61],edi
  40bdd8:	dec    ebx
  40bdd9:	mov    bh,0x6e
  40bddb:	out    dx,eax
  40bddc:	xor    eax,0x28939055
  40bde1:	jno    0x40bda6
  40bde3:	add    esp,DWORD PTR [edx-0x5b3b22df]
  40bde9:	push   eax
  40bdea:	bound  esi,QWORD PTR [eax]
  40bdec:	jp     0x40be26
  40bdee:	adc    al,0x9a
  40bdf0:	sub    eax,0xe835a
  40bdf5:	daa    
  40bdf6:	inc    ebx
  40bdf7:	fisub  DWORD PTR [ebx+0x223d2fbf]
  40bdfd:	popf   
  40bdfe:	add    cl,BYTE PTR [ebx+0x5d]
  40be01:	jp     0x40be0e
  40be03:	inc    ebx
  40be04:	int    0x2c
  40be06:	pop    edi
  40be07:	jmp    0x67e168ef
  40be0c:	inc    esi
  40be0d:	bound  esi,QWORD PTR [edi+0x4b]
  40be10:	inc    ebx
  40be11:	lods   eax,DWORD PTR ds:[esi]
  40be12:	js     0x40bde2
  40be14:	inc    eax
  40be15:	das    
  40be16:	xchg   edx,eax
  40be17:	sub    ch,BYTE PTR [ecx]
  40be19:	xlat   BYTE PTR ds:[ebx]
  40be1a:	adc    BYTE PTR [ebx],cl
  40be1c:	out    dx,eax
  40be1d:	stc    
  40be1e:	push   esi
  40be1f:	ret    0xcee
  40be22:	mov    ds:0xbe2458d9,eax
  40be27:	and    esp,esp
  40be29:	aam    0xca
  40be2b:	dec    edi
  40be2c:	pop    edi
  40be2d:	and    eax,0xd9ece12e
  40be32:	int    0x58
  40be34:	div    ah
  40be36:	sahf   
  40be37:	push   es
  40be38:	mov    bl,0x9c
  40be3a:	nop
  40be3b:	push   ebp
  40be3c:	xor    eax,0x2910e33a
  40be41:	cmc    
  40be42:	push   ds
  40be43:	lods   al,BYTE PTR ds:[esi]
  40be44:	ss ins BYTE PTR es:[edi],dx
  40be46:	fnsave ds:0xce31b82e
  40be4c:	inc    edi
  40be4d:	adc    ebp,0xd87ea7dd
  40be53:	shl    DWORD PTR [edi-0x383860d1],1
  40be59:	xor    BYTE PTR [ebp+0x3a],bh
  40be5c:	test   ch,cl
  40be5e:	jmp    0x217be49f
  40be63:	retf   
  40be64:	sub    eax,0xf87ecf15
  40be69:	mov    edi,0xe25760d5
  40be6e:	inc    edx
  40be6f:	mul    DWORD PTR [ecx+0x36831cc8]
  40be75:	jp     0x40bec7
  40be77:	xchg   edi,eax
  40be78:	stc    
  40be79:	dec    eax
  40be7a:	sub    eax,0x73d55828
  40be7f:	loop   0x40be2f
  40be81:	ins    DWORD PTR es:[edi],dx
  40be82:	or     eax,0x13c53ccf
  40be87:	adc    eax,0x8a60d73f
  40be8c:	sub    DWORD PTR [edi+0x4c74b60f],ebx
  40be92:	sbb    al,bh
  40be94:	ja     0x40be7a
  40be96:	xor    esp,edi
  40be98:	pop    ds
  40be99:	int    0x67
  40be9b:	pop    esi
  40be9c:	cmp    al,0x3a
  40be9e:	popf   
  40be9f:	dec    dh
  40bea1:	daa    
  40bea2:	out    dx,al
  40bea3:	jmp    0x40bec8
  40bea5:	rcr    cl,cl
  40bea7:	nop/reserved BYTE PTR [eax+0x51e1fa16]
  40beae:	cmc    
  40beaf:	std    
  40beb0:	cmove  ebx,DWORD PTR [edx+0x6]
  40beb4:	nop
  40beb5:	test   eax,0xbd5a931
  40beba:	push   DWORD PTR [eax]
  40bebc:	mov    al,0x83
  40bebe:	mov    ds:0xa8f19225,eax
  40bec3:	cmp    eax,0x5d992f29
  40bec8:	jnp    0x40be74
  40beca:	scas   al,BYTE PTR es:[edi]
  40becb:	dec    edi
  40becc:	push   ds
  40becd:	cwde   
  40bece:	pop    edi
  40becf:	mov    ebp,0xcc7139d6
  40bed4:	jmp    0x40bed9
  40bed6:	sub    eax,0xaa3dcad2
  40bedb:	mov    ds:0x59c30f8,eax
  40bee0:	rcr    DWORD PTR [ebx+0x2c83b8e8],0x50
  40bee7:	into   
  40bee8:	mov    esp,0xa1c40ec7
  40beed:	push   edi
  40beee:	mov    WORD PTR [ebp-0xfb581d5],gs
  40bef4:	mov    esi,0x48c975f5
  40bef9:	ja     0x40beb0
  40befb:	sub    eax,0xbd75e370
  40bf00:	inc    ecx
  40bf01:	ret    0xaa4b
  40bf04:	inc    edi
  40bf05:	mov    ds:0x79c8d4c5,al
  40bf0a:	pop    edi
  40bf0b:	sti    
  40bf0c:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40bf0e:	push   edi
  40bf0f:	inc    ebx
  40bf10:	bound  esp,QWORD PTR [edx-0x4c493e97]
  40bf16:	fwait
  40bf17:	or     BYTE PTR [ebp+0x57c5cf0d],0xad
  40bf1e:	sbb    ah,BYTE PTR [ebp-0x589ed7e4]
  40bf24:	(bad)  
  40bf25:	rol    BYTE PTR [esi-0x53e6eb46],cl
  40bf2b:	int    0x72
  40bf2d:	rol    BYTE PTR [ecx-0x5a82d589],0x5e
  40bf34:	into   
  40bf35:	in     eax,dx
  40bf36:	push   edi
  40bf37:	and    dh,BYTE PTR [eax+0x501c62e0]
  40bf3d:	mul    BYTE PTR [edi]
  40bf3f:	arpl   WORD PTR [ebx-0x58acb2a2],cx
  40bf45:	xor    ch,BYTE PTR [eax+0x146fdc1c]
  40bf4b:	mov    dh,0xd2
  40bf4d:	add    BYTE PTR [ebx+0x60],ah
  40bf50:	mov    esp,0xa1c25911
  40bf55:	(bad)  
  40bf56:	or     al,0xbf
  40bf58:	and    esi,DWORD PTR [ecx+ebx*2]
  40bf5b:	(bad)  
  40bf5c:	retf   0xba64
  40bf5f:	bound  edi,QWORD PTR [eax+0x32]
  40bf62:	popa   
  40bf63:	sub    eax,eax
  40bf65:	in     al,0xfe
  40bf67:	out    dx,eax
  40bf68:	pop    ds
  40bf69:	push   eax
  40bf6a:	cmp    bh,BYTE PTR [ebx-0xfd2b3bc]
  40bf70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf71:	test   al,0x65
  40bf73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf74:	rcl    BYTE PTR [eax+0x3ae96500],1
  40bf7a:	jmp    0x40bf56
  40bf7c:	dec    ecx
  40bf7d:	add    edi,DWORD PTR [edi+eax*1+0xacdf74d]
  40bf84:	mov    ebx,cs
  40bf86:	icebp  
  40bf87:	fdiv   st(5),st
  40bf89:	(bad)  
  40bf8a:	dec    ebp
  40bf8b:	or     bl,BYTE PTR [eax]
  40bf8d:	and    al,0xce
  40bf8f:	clc    
  40bf90:	sub    eax,0x6beb071
  40bf95:	mov    ebp,0x756bd5b1
  40bf9a:	cmp    al,0xf2
  40bf9c:	jmp    0x40bf5a
  40bf9e:	pop    esi
  40bf9f:	js     0x40c01b
  40bfa1:	inc    edx
  40bfa2:	out    dx,eax
  40bfa3:	ds adc BYTE PTR fs:[esi],bh
  40bfa7:	mov    al,ds:0x68c78b15
  40bfac:	mov    eax,ds:0x1f24474e
  40bfb1:	mov    BYTE PTR ds:0xa784e02a,bl
  40bfb7:	inc    ecx
  40bfb8:	fwait
  40bfb9:	sub    BYTE PTR [edi-0x46],ah
  40bfbc:	dec    esi
  40bfbd:	inc    edi
  40bfbe:	iret   
  40bfbf:	sbb    al,0x1
  40bfc1:	adc    dh,BYTE PTR [esi-0x4d]
  40bfc4:	jb     0x40c01a
  40bfc6:	inc    DWORD PTR [ebp-0x2d]
  40bfc9:	push   eax
  40bfca:	cmp    DWORD PTR [ecx+esi*8],edx
  40bfcd:	xchg   ebx,eax
  40bfce:	push   ebx
  40bfcf:	mov    bh,0x77
  40bfd1:	cmp    BYTE PTR [ecx-0x7f26d919],bl
  40bfd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfd8:	dec    esi
  40bfd9:	pop    edx
  40bfda:	mov    bl,0x21
  40bfdc:	pushf  
  40bfdd:	aaa    
  40bfde:	xchg   edi,eax
  40bfdf:	jae    0x40bf87
  40bfe1:	sbb    eax,0x66ad6fdf
  40bfe6:	fcomp  st(5)
  40bfe8:	jmp    0x29e6:0x4172a9b5
  40bfef:	imul   ecx,DWORD PTR [esi+0x4899ced6],0xfbc94a6f
  40bff9:	or     al,0xe8
  40bffb:	and    DWORD PTR gs:[edx+0x4c],0xbce6f65a
  40c003:	icebp  
  40c004:	in     al,0xcc
  40c006:	clc    
  40c007:	or     BYTE PTR [esi],al
  40c009:	and    BYTE PTR [eax],dh
  40c00b:	add    ecx,DWORD PTR [edx+0x4]
  40c00e:	jb     0x40bfbe
  40c010:	or     eax,0xf723dcf9
  40c015:	aaa    
  40c016:	mov    WORD PTR [esi-0x42],?
  40c019:	and    bh,BYTE PTR [ebx+0x114f126f]
  40c01f:	xor    al,0xc5
  40c021:	iret   
  40c022:	dec    eax
  40c023:	xchg   edi,eax
  40c024:	push   0x952c7271
  40c029:	retf   0x5b7a
  40c02c:	cdq    
  40c02d:	mov    eax,ds:0xdda8dde4
  40c032:	adc    DWORD PTR [ecx-0xf],esp
  40c035:	jns    0x40c088
  40c037:	push   ebp
  40c038:	jns    0x40bfe8
  40c03a:	push   edx
  40c03b:	rcl    DWORD PTR [ebp+0x12d970d5],1
  40c041:	clc    
  40c042:	pop    esp
  40c043:	fidivr WORD PTR [esp+ebx*1+0x53]
  40c047:	mov    edi,0x630bacf7
  40c04c:	sar    BYTE PTR [eax+0x44],1
  40c04f:	push   0xfffffff1
  40c051:	cmp    BYTE PTR [edi],bl
  40c053:	scas   al,BYTE PTR es:[edi]
  40c054:	sub    ecx,edi
  40c056:	jns    0x40c00b
  40c058:	daa    
  40c059:	and    ebp,DWORD PTR [esi+ebx*1]
  40c05c:	scas   al,BYTE PTR es:[edi]
  40c05d:	jp     0x40c086
  40c05f:	sbb    al,ah
  40c061:	dec    esp
  40c062:	loop   0x40bfed
  40c064:	call   0x5173b69
  40c069:	lahf   
  40c06a:	xchg   ebx,eax
  40c06b:	in     al,dx
  40c06c:	sbb    ch,BYTE PTR [ebp-0x55331a61]
  40c072:	retf   
  40c073:	loop   0x40c08d
  40c075:	(bad)  
  40c076:	jns    0x40c042
  40c078:	mov    ebp,0x7f4038da
  40c07d:	pop    eax
  40c07e:	pusha  
  40c07f:	cdq    
  40c080:	mov    WORD PTR [eax-0x3d],cs
  40c083:	xor    eax,0xfbb5c16c
  40c088:	xor    edx,esp
  40c08a:	pop    esi
  40c08b:	std    
  40c08c:	scas   al,BYTE PTR es:[edi]
  40c08d:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40c08f:	and    ecx,DWORD PTR [esi+ebp*2]
  40c092:	or     eax,0x4a824244
  40c097:	test   eax,0x6a9c745e
  40c09c:	or     BYTE PTR [edx-0x47],bh
  40c09f:	fld1   
  40c0a1:	test   al,ch
  40c0a3:	es inc ecx
  40c0a5:	(bad)  
  40c0a6:	cmp    dh,al
  40c0a8:	mov    eax,ds:0xe5352779
  40c0ad:	jg     0x40c095
  40c0af:	mov    eax,0x523d5e3c
  40c0b4:	push   cs
  40c0b5:	pop    esp
  40c0b6:	loop   0x40c058
  40c0b8:	into   
  40c0b9:	popa   
  40c0ba:	sub    BYTE PTR [edx+0x477a90de],ch
  40c0c0:	(bad)  
  40c0c1:	loope  0x40c061
  40c0c3:	inc    esi
  40c0c4:	inc    ecx
  40c0c5:	out    0xc,al
  40c0c7:	push   esi
  40c0c8:	push   esp
  40c0c9:	into   
  40c0ca:	sahf   
  40c0cb:	int3   
  40c0cc:	sub    DWORD PTR [esi+0x45],ebx
  40c0cf:	pushf  
  40c0d0:	mov    eax,ds:0xf4719761
  40c0d5:	jp     0x40c080
  40c0d7:	or     BYTE PTR [edi-0x157cfbb],0xe9
  40c0de:	or     BYTE PTR ds:0xbc4c5eaa,dh
  40c0e4:	shr    DWORD PTR [esp+eax*2+0x48a85fcf],cl
  40c0eb:	mov    cl,0xa
  40c0ed:	in     eax,0xaf
  40c0ef:	test   eax,0xd2f23908
  40c0f4:	es sti 
  40c0f6:	add    BYTE PTR [ebx-0xc],ah
  40c0f9:	mov    bl,0x9c
  40c0fb:	sahf   
  40c0fc:	ins    DWORD PTR es:[edi],dx
  40c0fd:	push   cs
  40c0fe:	ds iret 
  40c100:	es mov edi,0x956d7ca2
  40c106:	mov    ds:0xea63c630,eax
  40c10b:	outs   dx,BYTE PTR ds:[esi]
  40c10c:	jmp    0x40c138
  40c10e:	jle    0x40c093
  40c110:	mov    al,ds:0x7cca5376
  40c115:	inc    esi
  40c116:	fdivp  st(1),st
  40c118:	add    eax,0xf3e3aede
  40c11d:	push   cs
  40c11e:	and    DWORD PTR [edx-0x1d],0x15
  40c122:	jp     0x40c18a
  40c124:	rol    DWORD PTR [edi+ebx*2-0x2cb3612],1
  40c12b:	cmp    dl,dh
  40c12d:	or     BYTE PTR ds:0x8ad105e8,al
  40c133:	les    edi,FWORD PTR [edx+0x514baad0]
  40c139:	and    BYTE PTR [esp+esi*4],dl
  40c13c:	cs jnp 0x40c1be
  40c13f:	adc    BYTE PTR ds:[ebp-0x1],dh
  40c143:	sub    ch,cl
  40c145:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c146:	out    dx,al
  40c147:	add    cl,BYTE PTR [edx-0x61136299]
  40c14d:	dec    esp
  40c14e:	mov    edi,0xf97da1ef
  40c153:	out    dx,eax
  40c154:	push   esp
  40c155:	xor    ecx,ecx
  40c157:	add    al,bh
  40c159:	pop    ss
  40c15a:	sbb    eax,0xe870879e
  40c15f:	pop    edx
  40c160:	adc    esp,edi
  40c162:	jbe    0x40c147
  40c164:	daa    
  40c165:	adc    dh,BYTE PTR [edx+0x42]
  40c168:	out    dx,al
  40c169:	xchg   edi,eax
  40c16a:	mov    dl,0x8a
  40c16c:	fld    QWORD PTR [ecx-0xf02cd76]
  40c172:	div    BYTE PTR [esi]
  40c174:	xor    bl,BYTE PTR [edx+edx*4+0x37]
  40c178:	dec    edx
  40c179:	pop    es
  40c17a:	dec    ebp
  40c17b:	sub    al,0xfa
  40c17d:	xchg   esi,eax
  40c17e:	lods   eax,DWORD PTR ds:[esi]
  40c17f:	call   0xdf8e:0x76937deb
  40c186:	iret   
  40c187:	jo     0x40c1df
  40c189:	loopne 0x40c1ce
  40c18b:	call   DWORD PTR [edi+0x48]
  40c18e:	shl    BYTE PTR [edx-0x54],1
  40c191:	mov    ebp,0x8b1aa94
  40c196:	(bad)  
  40c197:	pop    ss
  40c198:	dec    ebp
  40c199:	jg     0x40c171
  40c19b:	mov    ch,0x45
  40c19d:	pop    ds
  40c19e:	pop    es
  40c19f:	cmp    esi,DWORD PTR [esi-0x67ea2ba7]
  40c1a5:	mov    eax,ds:0xe3ab3487
  40c1aa:	pushw  cs
  40c1ac:	enter  0xc1e3,0x4e
  40c1b0:	fwait
  40c1b1:	push   cs
  40c1b2:	ins    BYTE PTR es:[edi],dx
  40c1b3:	in     al,0x1e
  40c1b5:	xchg   edx,eax
  40c1b6:	jns    0x40c1e1
  40c1b8:	out    dx,eax
  40c1b9:	rol    BYTE PTR [ebp-0x2],1
  40c1bc:	int3   
  40c1bd:	fdiv   DWORD PTR [edi+eax*8]
  40c1c0:	ret    
  40c1c1:	mov    eax,ds:0x6fb10b3c
  40c1c6:	test   eax,0x285f4aa7
  40c1cb:	ficom  WORD PTR [edx-0x5db1cf0d]
  40c1d1:	xlat   BYTE PTR ds:[ebx]
  40c1d2:	xor    eax,esi
  40c1d4:	dec    esp
  40c1d5:	mov    edi,0x127fba9b
  40c1da:	cdq    
  40c1db:	inc    ebx
  40c1dc:	lods   eax,DWORD PTR ds:[esi]
  40c1dd:	cmp    ebp,DWORD PTR [edx+0x42d7e064]
  40c1e3:	jmp    0x34fb:0xda7a90a3
  40c1ea:	pushw  0x3b
  40c1ed:	fwait
  40c1ee:	outs   dx,DWORD PTR ds:[esi]
  40c1ef:	inc    esp
  40c1f0:	pop    ebp
  40c1f1:	icebp  
  40c1f2:	push   eax
  40c1f3:	adc    al,0xc9
  40c1f5:	dec    edx
  40c1f6:	adc    DWORD PTR [ebx],ebx
  40c1f8:	test   DWORD PTR [ebx+0x649cfc72],ecx
  40c1fe:	sub    bh,0x42
  40c201:	stc    
  40c202:	and    al,0x5c
  40c204:	aam    0x7c
  40c206:	inc    edi
  40c207:	push   0xcb0c6145
  40c20c:	and    eax,DWORD PTR [ecx+0x47a9b21d]
  40c212:	xor    eax,0xd8aea512
  40c217:	and    eax,0xa79437b7
  40c21c:	sahf   
  40c21d:	lods   al,BYTE PTR ds:[esi]
  40c21e:	jo     0x40c1da
  40c220:	mov    cl,0xda
  40c222:	mov    bh,0x9b
  40c224:	call   0x7a07:0x4f0ea49d
  40c22b:	push   esp
  40c22c:	or     DWORD PTR es:[edx-0x48],esi
  40c230:	xor    eax,0xbad240a6
  40c235:	pusha  
  40c236:	cmp    dh,BYTE PTR [ecx-0x26]
  40c239:	test   BYTE PTR [ebx+0x6e51d4e3],bh
  40c23f:	pop    eax
  40c240:	lock icebp 
  40c242:	push   ss
  40c243:	xlat   BYTE PTR ds:[ebx]
  40c244:	cli    
  40c245:	fstp   st(1)
  40c247:	xchg   ecx,eax
  40c248:	xor    bh,BYTE PTR es:[edi]
  40c24b:	cli    
  40c24c:	or     esi,DWORD PTR [esi]
  40c24e:	dec    esp
  40c24f:	fsub   st,st(2)
  40c251:	xchg   esi,eax
  40c252:	jmp    0x40c28f
  40c254:	outs   dx,DWORD PTR ds:[esi]
  40c255:	sub    eax,0x529cbe14
  40c25a:	pop    ds
  40c25b:	mov    al,ds:0x5081009
  40c260:	mov    ?,WORD PTR [ebx]
  40c262:	cmp    ah,BYTE PTR [edx]
  40c264:	xor    esi,DWORD PTR [esi+eiz*4-0x38]
  40c268:	sub    al,0xe3
  40c26a:	retf   
  40c26b:	lahf   
  40c26c:	push   esp
  40c26d:	xor    bh,bl
  40c26f:	(bad)  
  40c270:	repnz mov eax,ebp
  40c273:	sahf   
  40c274:	push   edi
  40c275:	pop    esp
  40c276:	push   eax
  40c277:	jp     0x40c26f
  40c279:	jmp    0x47060819
  40c27e:	xchg   DWORD PTR [eax-0x1e95d684],edi
  40c284:	jle    0x40c302
  40c286:	stos   DWORD PTR es:[edi],eax
  40c287:	mov    ebp,0x872e570b
  40c28c:	inc    esi
  40c28d:	xchg   ebx,eax
  40c28e:	mov    ebp,esp
  40c290:	jmp    0x3608:0xeb084ea7
  40c297:	or     ecx,DWORD PTR [ebp+0x3f21b9a6]
  40c29d:	pop    edi
  40c29e:	sbb    eax,0xc1ca6de8
  40c2a3:	sbb    al,0x4b
  40c2a5:	add    al,0x97
  40c2a7:	sub    al,0x4
  40c2a9:	push   ebx
  40c2aa:	test   BYTE PTR [edi-0x7c32f086],bh
  40c2b0:	cmp    al,0x2d
  40c2b2:	xchg   edx,eax
  40c2b3:	lds    esi,FWORD PTR [eax-0x6ad0a587]
  40c2b9:	and    esp,edi
  40c2bb:	ret    0x1f86
  40c2be:	ins    DWORD PTR es:[edi],dx
  40c2bf:	sub    eax,esi
  40c2c1:	arpl   WORD PTR [ebx+0x361f3261],bx
  40c2c7:	mov    eax,0x2cea73bb
  40c2cc:	add    DWORD PTR [ebx-0x3a5b1f85],0xffffffe1
  40c2d3:	leave  
  40c2d4:	hlt    
  40c2d5:	inc    edx
  40c2d6:	add    BYTE PTR [eax+0x3e],0xd
  40c2da:	repnz ins DWORD PTR es:[edi],dx
  40c2dc:	sub    eax,0x42df1f0a
  40c2e1:	add    eax,0x311d07b8
  40c2e6:	inc    esi
  40c2e7:	pop    es
  40c2e8:	cli    
  40c2e9:	loop   0x40c326
  40c2eb:	stos   BYTE PTR es:[edi],al
  40c2ec:	jmp    FWORD PTR [esi-0x13]
  40c2ef:	xor    esi,DWORD PTR [esi+0x3d5746db]
  40c2f5:	xchg   ebp,eax
  40c2f6:	and    al,0x55
  40c2f8:	fistp  WORD PTR [ecx+ebx*1+0x61]
  40c2fc:	dec    eax
  40c2fd:	jl     0x40c37d
  40c2ff:	aad    0xac
  40c301:	adc    DWORD PTR [ecx-0x32],edi
  40c304:	xlat   BYTE PTR ds:[ebx]
  40c305:	xlat   BYTE PTR ds:[ebx]
  40c306:	jnp    0x40c369
  40c308:	or     DWORD PTR [eax+0x2f],esp
  40c30b:	jge    0x40c2f0
  40c30d:	jle    0x40c2b1
  40c30f:	cmp    dh,bh
  40c311:	ret    
  40c312:	mov    dl,0xb5
  40c314:	push   ds
  40c315:	jb     0x40c2e7
  40c317:	push   cs
  40c318:	sub    ebp,esi
  40c31a:	dec    eax
  40c31b:	std    
  40c31c:	ret    
  40c31d:	mov    ch,BYTE PTR [esi+0x768467e6]
  40c323:	sbb    DWORD PTR [esi+0x6cfd2c1f],edi
  40c329:	xor    BYTE PTR [ecx-0x37],0xdd
  40c32d:	stc    
  40c32e:	push   eax
  40c32f:	sub    DWORD PTR [eax],0xbf155df6
  40c335:	pop    ecx
  40c336:	jno    0x40c37e
  40c338:	jmp    0x40c332
  40c33a:	mov    edi,0x79588230
  40c33f:	outs   dx,DWORD PTR ds:[esi]
  40c340:	mov    ah,0x97
  40c342:	mov    ds:0x34a83f7b,eax
  40c347:	sbb    al,0x81
  40c349:	cli    
  40c34a:	xchg   DWORD PTR [eax+0x10],edx
  40c34d:	out    dx,eax
  40c34e:	push   ebp
  40c34f:	sti    
  40c350:	jno    0x40c39d
  40c352:	inc    edx
  40c353:	and    al,0xbb
  40c355:	das    
  40c356:	jle    0x40c382
  40c358:	sub    BYTE PTR [edx-0x243d5d35],bl
  40c35e:	pop    eax
  40c35f:	push   ebp
  40c360:	fdivr  DWORD PTR [esi]
  40c362:	push   edx
  40c363:	(bad)  
  40c364:	in     eax,0xe1
  40c366:	cmp    eax,0xa7ec9c1c
  40c36b:	mov    dl,0xf5
  40c36d:	add    DWORD PTR ds:0x74879443,edx
  40c373:	sbb    DWORD PTR [esi-0x40],edx
  40c376:	stc    
  40c377:	adc    ah,BYTE PTR [esi]
  40c379:	int3   
  40c37a:	sbb    eax,ecx
  40c37c:	jns    0x40c350
  40c37e:	stos   BYTE PTR es:[edi],al
  40c37f:	aad    0x3b
  40c381:	mov    edx,0xe947b100
  40c386:	lock movs BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40c389:	les    esi,FWORD PTR [eax-0x5464fc48]
  40c38f:	jmp    0x4ac1:0xf6ab073
  40c396:	adc    BYTE PTR [ebp-0x80],0x5c
  40c39a:	fs xor eax,esp
  40c39d:	push   edx
  40c39e:	addr16 js 0x40c392
  40c3a1:	test   eax,0x20b62ab
  40c3a6:	fistp  DWORD PTR [ecx]
  40c3a8:	sub    DWORD PTR [ebx+0x6e],ebx
  40c3ab:	(bad)  
  40c3ac:	mov    ebp,0x86c9757e
  40c3b1:	das    
  40c3b2:	fild   DWORD PTR [ecx+0x1f245269]
  40c3b8:	sbb    BYTE PTR [eax+edi*8+0x31],al
  40c3bc:	dec    eax
  40c3bd:	inc    ebx
  40c3be:	adc    ah,0x18
  40c3c1:	add    eax,0x251111ac
  40c3c6:	dec    ecx
  40c3c7:	shl    BYTE PTR [ecx+0x69],1
  40c3ca:	xor    BYTE PTR [ecx+0x4ca008f3],al
  40c3d0:	inc    ebp
  40c3d1:	ror    DWORD PTR [ebx-0x2417c09d],1
  40c3d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3d8:	lods   eax,DWORD PTR ds:[esi]
  40c3d9:	bound  esi,QWORD PTR [ebp+0x6f971453]
  40c3df:	xor    eax,0x968b48c
  40c3e4:	lods   al,BYTE PTR ds:[esi]
  40c3e5:	scas   al,BYTE PTR es:[edi]
  40c3e6:	xchg   DWORD PTR [eax+0x1340c145],edi
  40c3ec:	and    ebx,DWORD PTR [ebx-0x5d]
  40c3ef:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40c3f1:	pop    ds
  40c3f2:	ret    0x2c56
  40c3f5:	sub    eax,0xcc738af6
  40c3fa:	push   0xf2df181a
  40c3ff:	out    dx,eax
  40c400:	ret    0x8071
  40c403:	ficomp DWORD PTR [edx+0x585cebe]
  40c409:	pusha  
  40c40a:	mov    bl,0x54
  40c40c:	test   DWORD PTR [edi-0x6b],0xb451df13
  40c413:	jge    0x40c486
  40c415:	mov    bh,0xd9
  40c417:	in     eax,0x6
  40c419:	sub    ah,BYTE PTR [ebx+0x59]
  40c41c:	and    al,0x10
  40c41e:	shr    BYTE PTR [edx+0x26],cl
  40c421:	scas   eax,DWORD PTR es:[edi]
  40c422:	jnp    0x459902e3
  40c428:	jbe    0x40c445
  40c42a:	cmc    
  40c42b:	lods   eax,DWORD PTR ds:[esi]
  40c42c:	jo     0x40c46f
  40c42e:	inc    ebp
  40c42f:	pusha  
  40c430:	push   0xffffff9a
  40c432:	cld    
  40c433:	jp     0x40c3fb
  40c435:	or     BYTE PTR [edi+edx*8+0x35],bl
  40c439:	xor    BYTE PTR [edx+eax*4+0x3db7fbc],ch
  40c440:	dec    edx
  40c441:	cmp    al,0xf4
  40c443:	jne    0x40c3dc
  40c445:	lods   eax,DWORD PTR ds:[esi]
  40c446:	stc    
  40c447:	outs   dx,DWORD PTR ds:[esi]
  40c448:	push   ss
  40c449:	inc    DWORD PTR [ebx+ecx*2+0x5e93d543]
  40c450:	or     eax,0xa31f8917
  40c455:	fs in  al,0xf0
  40c458:	jl     0x40c441
  40c45a:	cmp    eax,0x4ae4a19a
  40c45f:	mov    eax,0x40280015
  40c464:	cmp    eax,0xb1fda664
  40c469:	cmp    al,0xbd
  40c46b:	loopne 0x40c448
  40c46d:	pop    ss
  40c46e:	(bad)  
  40c46f:	xor    edx,ebp
  40c471:	sub    dl,0x7e
  40c474:	pop    ecx
  40c475:	inc    ecx
  40c476:	lds    edx,FWORD PTR [ebp+0x58]
  40c479:	das    
  40c47a:	mov    ah,0x12
  40c47c:	rcr    DWORD PTR [edx-0x48],cl
  40c47f:	outs   dx,DWORD PTR ds:[esi]
  40c480:	outs   dx,DWORD PTR ds:[esi]
  40c481:	dec    ebp
  40c482:	cmc    
  40c483:	inc    edi
  40c484:	add    al,0x69
  40c486:	xchg   BYTE PTR [edx],ah
  40c488:	xchg   edx,eax
  40c489:	sub    bl,BYTE PTR [eax]
  40c48b:	inc    esi
  40c48c:	xor    DWORD PTR [esi-0x64],eax
  40c48f:	sbb    ebx,ebp
  40c491:	pop    esp
  40c492:	xchg   DWORD PTR [ebx-0x50],ebx
  40c495:	addr16 push esi
  40c497:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40c499:	div    dl
  40c49b:	mov    ch,0xb2
  40c49d:	in     al,0xcf
  40c49f:	call   0xe79a:0x1ed2062a
  40c4a6:	dec    edi
  40c4a7:	pop    edi
  40c4a8:	in     al,0x8a
  40c4aa:	or     ah,BYTE PTR [esi]
  40c4ac:	and    BYTE PTR [ebx-0x3b],0xa7
  40c4b0:	sub    eax,DWORD PTR ds:0xf91f6411
  40c4b6:	and    ebp,DWORD PTR [eax+0x7b]
  40c4b9:	imul   edi,DWORD PTR [ebx],0x18
  40c4bc:	xchg   ecx,eax
  40c4bd:	cli    
  40c4be:	mov    dl,0xef
  40c4c0:	rcl    DWORD PTR [ebx+eiz*1+0x449a9589],cl
  40c4c7:	imul   ebx,ecx,0x466ab1cf
  40c4cd:	and    al,0x1e
  40c4cf:	rcr    eax,1
  40c4d1:	leave  
  40c4d2:	jno    0x40c4ae
  40c4d4:	(bad)  
  40c4d5:	mov    ch,0x2
  40c4d7:	mov    edx,DWORD PTR [esi+0x20109e3d]
  40c4dd:	icebp  
  40c4de:	mov    DWORD PTR [edx+0x11],eax
  40c4e1:	lods   al,BYTE PTR ds:[esi]
  40c4e2:	outs   dx,DWORD PTR ds:[esi]
  40c4e3:	pop    es
  40c4e4:	ret    
  40c4e5:	cs pop edi
  40c4e7:	xchg   esi,eax
  40c4e8:	pushf  
  40c4e9:	fadd   QWORD PTR [edi+0x15d9a692]
  40c4ef:	ror    BYTE PTR [edx-0x51],1
  40c4f2:	jl     0x40c51c
  40c4f4:	jns    0x40c4ba
  40c4f6:	sub    bh,BYTE PTR [esi-0x7a457a5e]
  40c4fc:	jno    0x40c4ad
  40c4fe:	jge    0x40c50d
  40c500:	cld    
  40c501:	dec    ecx
  40c502:	and    al,0xb5
  40c504:	mov    edx,0xd8b7724f
  40c509:	stos   BYTE PTR es:[edi],al
  40c50a:	in     al,0xd
  40c50c:	sub    DWORD PTR [edx-0x2e],edx
  40c50f:	das    
  40c510:	jns    0x40c49f
  40c512:	es add ebp,esi
  40c515:	mov    eax,0xa90b9472
  40c51a:	push   eax
  40c51b:	fistp  DWORD PTR [eax-0x24]
  40c51e:	test   DWORD PTR ds:0xbe17d3f0,esi
  40c524:	sub    ch,BYTE PTR [ebx+eiz*4-0x61]
  40c528:	inc    esp
  40c529:	scas   al,BYTE PTR es:[edi]
  40c52a:	pushf  
  40c52b:	test   eax,0x8eb03928
  40c530:	mov    ebp,0x6f23599a
  40c535:	push   0x49
  40c537:	jns    0x40c561
  40c539:	pop    edi
  40c53a:	fbld   TBYTE PTR [eax+0x106ad12a]
  40c540:	addr16 daa 
  40c542:	inc    DWORD PTR [edi-0x78]
  40c545:	(bad)  
  40c546:	xchg   ecx,eax
  40c547:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c548:	addr16 aam 0x2b
  40c54b:	(bad)  
  40c54c:	call   DWORD PTR [ecx+0x99ab01f]
  40c552:	pop    ds
  40c553:	daa    
  40c554:	or     al,0xd2
  40c556:	and    al,0xda
  40c558:	jle    0x40c58a
  40c55a:	xchg   edi,eax
  40c55b:	(bad)  
  40c55c:	xor    ah,BYTE PTR [eax+0x472bb02d]
  40c562:	mov    eax,ds:0xb722987b
  40c567:	outs   dx,BYTE PTR ds:[esi]
  40c568:	mov    dh,0x87
  40c56a:	jbe    0x40c5d4
  40c56c:	scas   eax,DWORD PTR es:[edi]
  40c56d:	jg     0x40c4f4
  40c56f:	push   ebx
  40c570:	pop    ss
  40c571:	pop    ebx
  40c572:	cmp    ch,ah
  40c574:	scas   al,BYTE PTR es:[edi]
  40c575:	pop    ecx
  40c576:	daa    
  40c577:	stc    
  40c578:	xchg   ebp,eax
  40c579:	into   
  40c57a:	pop    esi
  40c57b:	cdq    
  40c57c:	jp     0x40c58a
  40c57e:	inc    edx
  40c57f:	es jne 0x40c509
  40c582:	push   cs
  40c583:	aad    0x98
  40c585:	or     BYTE PTR [edi-0x7f],dl
  40c588:	pop    ss
  40c589:	mov    cl,0xb3
  40c58b:	push   eax
  40c58c:	mov    ss,ecx
  40c58e:	daa    
  40c58f:	inc    eax
  40c590:	ficomp DWORD PTR [edx+0xb]
  40c593:	ja     0x40c5ee
  40c595:	mov    ds:0x4c6425f3,al
  40c59a:	bound  edi,QWORD PTR [esp+esi*8]
  40c59d:	add    eax,0x57e598b3
  40c5a2:	cmp    ebx,ebp
  40c5a4:	addr16 in eax,dx
  40c5a6:	sub    bl,ah
  40c5a8:	jae    0x40c52f
  40c5aa:	fild   DWORD PTR [esi+eax*8+0x79]
  40c5ae:	inc    edx
  40c5af:	enter  0xcd9a,0x74
  40c5b3:	cdq    
  40c5b4:	rol    DWORD PTR [edx+eiz*4-0x5d],1
  40c5b8:	inc    esp
  40c5b9:	push   esp
  40c5ba:	cld    
  40c5bb:	fbld   TBYTE PTR [eax-0x665c6232]
  40c5c1:	test   BYTE PTR [esp+edi*8],0x9f
  40c5c5:	pop    edi
  40c5c6:	loopne 0x40c5df
  40c5c8:	push   esp
  40c5c9:	ss xchg ecx,eax
  40c5cb:	push   0x544ae1d4
  40c5d0:	mov    bh,0x1
  40c5d2:	xor    al,0x16
  40c5d4:	add    eax,0xb7067983
  40c5d9:	add    dh,BYTE PTR [eax-0x1b]
  40c5dc:	xor    DWORD PTR [eax-0x2008ca6f],ecx
  40c5e2:	xor    DWORD PTR [ecx-0x69],ecx
  40c5e5:	and    esp,DWORD PTR [esi-0x51]
  40c5e8:	dec    esp
  40c5e9:	mov    ebx,0x5a601790
  40c5ee:	pop    esi
  40c5ef:	cmp    al,0x21
  40c5f1:	jge    0x40c5b0
  40c5f3:	inc    ebx
  40c5f4:	cmp    BYTE PTR [ebx+0x671d6dc2],bl
  40c5fa:	stos   DWORD PTR es:[edi],eax
  40c5fb:	dec    ebx
  40c5fc:	and    DWORD PTR ds:0xf7e8320,eax
  40c602:	xchg   ebp,eax
  40c603:	lods   eax,DWORD PTR ds:[esi]
  40c604:	lods   eax,DWORD PTR ds:[esi]
  40c605:	or     eax,0xcc300835
  40c60a:	sub    eax,0x815e072
  40c60f:	pop    eax
  40c610:	mov    esi,DWORD PTR [edi-0x3ddfd98e]
  40c616:	push   esi
  40c617:	sbb    esp,0x66
  40c61a:	push   esp
  40c61b:	imul   ebp,ebx,0x4e04ae46
  40c621:	sahf   
  40c622:	stc    
  40c623:	nop
  40c624:	fbstp  TBYTE PTR [ecx]
  40c626:	in     al,0x3e
  40c628:	cli    
  40c629:	adc    eax,0x65c143f6
  40c62e:	fcmovnu st,st(0)
  40c630:	jg     0x40c61c
  40c632:	xchg   esp,eax
  40c633:	fdivr  QWORD PTR [edx-0x14]
  40c636:	mov    BYTE PTR [esi+0x14],ah
  40c639:	mov    ah,0x4a
  40c63b:	movlps QWORD PTR [ebx-0x16],xmm7
  40c63f:	add    edx,eax
  40c641:	add    eax,0x95d04a3f
  40c646:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c647:	xchg   edx,eax
  40c648:	clc    
  40c649:	cld    
  40c64a:	clc    
  40c64b:	add    dl,bh
  40c64d:	and    BYTE PTR [edi],ch
  40c64f:	retf   
  40c650:	jns    0x40c62a
  40c652:	loop   0x40c64c
  40c654:	jg     0x40c5db
  40c656:	icebp  
  40c657:	adc    ebx,edx
  40c659:	out    dx,al
  40c65a:	push   cs
  40c65b:	add    eax,0x89dc3c6d
  40c660:	xchg   edx,eax
  40c661:	test   eax,0x278c603
  40c666:	cld    
  40c667:	push   edi
  40c668:	add    DWORD PTR [esi-0x74],0x59
  40c66c:	or     dl,BYTE PTR [ecx+0x56]
  40c66f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c670:	push   eax
  40c671:	sbb    cl,bh
  40c673:	cs xchg bh,ch
  40c676:	mov    dh,BYTE PTR [ecx+0x6bc82fa8]
  40c67c:	sub    al,0x60
  40c67e:	aam    0x88
  40c680:	clc    
  40c681:	icebp  
  40c682:	mov    bh,0xe7
  40c684:	cmc    
  40c685:	xor    al,BYTE PTR [edi-0x7f]
  40c688:	push   ss
  40c689:	jmp    0x40c6cf
  40c68b:	and    BYTE PTR ds:0xeffe68a5,dl
  40c691:	test   DWORD PTR ds:0x318d371a,edx
  40c697:	sahf   
  40c698:	in     al,dx
  40c699:	or     DWORD PTR [esp+edi*4-0x71b20766],edi
  40c6a0:	outs   dx,BYTE PTR ds:[esi]
  40c6a1:	and    ah,BYTE PTR [eax-0xea6da76]
  40c6a7:	push   0x28
  40c6a9:	jl     0x40c6a5
  40c6ab:	fld    TBYTE PTR [edi-0x71870182]
  40c6b1:	jo     0x40c694
  40c6b3:	inc    ecx
  40c6b4:	lods   eax,DWORD PTR ds:[esi]
  40c6b5:	into   
  40c6b6:	dec    edi
  40c6b7:	pop    edx
  40c6b8:	mov    bl,0x3a
  40c6ba:	ja     0x40c671
  40c6bc:	or     eax,0x1b73c75f
  40c6c1:	pushf  
  40c6c2:	ins    DWORD PTR es:[edi],dx
  40c6c3:	dec    BYTE PTR [ecx-0x6085c5c4]
  40c6c9:	xadd   DWORD PTR [edi-0x11],esi
  40c6cd:	fdiv   QWORD PTR [edi]
  40c6cf:	jg     0x40c6c6
  40c6d1:	fnstsw WORD PTR [edx]
  40c6d3:	dec    ecx
  40c6d4:	cs enter 0xa71f,0x42
  40c6d9:	out    dx,al
  40c6da:	in     eax,dx
  40c6db:	dec    ebp
  40c6dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6dd:	push   eax
  40c6de:	or     esi,ebx
  40c6e0:	call   0x8c0:0xe083f08c
  40c6e7:	pop    ss
  40c6e8:	cdq    
  40c6e9:	out    0xe6,al
  40c6eb:	mov    ecx,0xb0ee96ae
  40c6f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6f1:	dec    DWORD PTR [edi-0x1f]
  40c6f4:	mov    DWORD PTR [ebp+0x66],ebx
  40c6f7:	jge    0x40c67c
  40c6f9:	jl     0x40c76e
  40c6fb:	sub    eax,0x1d099889
  40c700:	jg     0x40c75a
  40c702:	popa   
  40c703:	inc    ecx
  40c704:	jp     0x40c782
  40c706:	(bad)  
  40c707:	bound  ebx,QWORD PTR [eax]
  40c709:	mov    cl,0x7f
  40c70b:	mov    bl,0x5d
  40c70d:	data16 sahf 
  40c70f:	push   ebx
  40c710:	cwde   
  40c711:	stos   BYTE PTR es:[edi],al
  40c712:	cmp    DWORD PTR [edx],0x74bdcf76
  40c718:	or     al,0x79
  40c71a:	stos   BYTE PTR es:[edi],al
  40c71b:	adc    eax,0x809c2c67
  40c720:	sub    ah,BYTE PTR [ecx+ebx*1+0x640fd28b]
  40c727:	mov    al,ds:0x393dcd45
  40c72c:	std    
  40c72d:	jge    0x40c756
  40c72f:	loopne 0x40c6d5
  40c731:	(bad)  
  40c733:	pop    edx
  40c734:	mov    ah,0xe7
  40c736:	mov    bl,0x1c
  40c738:	sbb    eax,DWORD PTR [edx-0x3a]
  40c73b:	cdq    
  40c73c:	cdq    
  40c73d:	sbb    DWORD PTR [edi],0xfffffff5
  40c740:	xor    ebx,ecx
  40c742:	in     eax,dx
  40c743:	retf   
  40c744:	add    al,0x63
  40c746:	mov    edx,0x8a9b7115
  40c74b:	mov    esp,0x6587f84
  40c750:	daa    
  40c751:	cmc    
  40c752:	call   0xd16be583
  40c757:	or     BYTE PTR [ebp-0x23],0x1
  40c75b:	mov    ebx,DWORD PTR [edi]
  40c75d:	cmp    ch,BYTE PTR ds:0xb75eefb1
  40c763:	adc    eax,0x291dcbad
  40c768:	in     eax,0xae
  40c76a:	push   edx
  40c76b:	fwait
  40c76c:	jge    0x40c719
  40c76e:	adc    al,0x20
  40c770:	dec    edx
  40c771:	adc    al,0xc6
  40c773:	lahf   
  40c774:	jmp    0xd101:0x66a26a93
  40c77b:	xor    BYTE PTR [edx],0x12
  40c77e:	mov    ebx,0x81df5d53
  40c783:	jne    0x40c7c1
  40c785:	psadbw mm4,mm3
  40c788:	fnsave [ebx-0x148bd261]
  40c78e:	test   al,0xe6
  40c790:	add    DWORD PTR [eax],ebx
  40c792:	mov    ds:0x6bb8e02e,al
  40c797:	xor    bh,BYTE PTR [esi+0x25a68c46]
  40c79d:	rcr    BYTE PTR [edx+0x33],0x6e
  40c7a1:	mov    cl,0x8
  40c7a3:	fdiv   st(2),st
  40c7a5:	cdq    
  40c7a6:	add    eax,0x59989152
  40c7ab:	xchg   ebx,eax
  40c7ac:	add    al,0x23
  40c7ae:	xor    ch,ah
  40c7b0:	ror    BYTE PTR [esi+0x2f4c915e],cl
  40c7b6:	in     al,dx
  40c7b7:	in     eax,0xfd
  40c7b9:	mov    esi,0xeb3b15d9
  40c7be:	adc    al,0x68
  40c7c0:	pop    ebp
  40c7c1:	xor    ch,BYTE PTR [edx-0xb85b1e2]
  40c7c7:	pop    esi
  40c7c8:	scas   eax,DWORD PTR es:[edi]
  40c7c9:	lahf   
  40c7ca:	mov    bl,0x2f
  40c7cc:	loope  0x40c76d
  40c7ce:	mov    bl,0xf8
  40c7d0:	jnp    0x40c792
  40c7d2:	jb     0x40c785
  40c7d4:	scas   al,BYTE PTR es:[edi]
  40c7d5:	cmp    ebp,DWORD PTR [ebp-0x4db1725d]
  40c7db:	dec    esp
  40c7dc:	cmp    BYTE PTR [edx],al
  40c7de:	in     al,0xcb
  40c7e0:	sub    esp,DWORD PTR [ebx+0x7b946616]
  40c7e6:	pop    esi
  40c7e7:	xchg   edx,eax
  40c7e8:	loope  0x40c7e9
  40c7ea:	dec    esp
  40c7eb:	mov    WORD PTR [edx],ds
  40c7ed:	hlt    
  40c7ee:	call   DWORD PTR [ecx+0x78]
  40c7f1:	fadd   DWORD PTR [esi+0x1965b3de]
  40c7f7:	push   es
  40c7f8:	cmp    ah,BYTE PTR [edx-0x17c0b373]
  40c7fe:	adc    eax,0x8f6dd395
  40c803:	add    ah,BYTE PTR [eax+0x51]
  40c806:	sbb    al,BYTE PTR [ebx-0x20]
  40c809:	hlt    
  40c80a:	xor    BYTE PTR [ecx+0x1c],bl
  40c80d:	nop    DWORD PTR [edx+0x45]
  40c811:	mov    DWORD PTR [edx+0x53],ebx
  40c814:	dec    BYTE PTR [edx-0x6f430969]
  40c81a:	(bad)  
  40c81c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c81d:	cwde   
  40c81e:	mov    edi,edx
  40c820:	retf   0xc817
  40c823:	mov    ebx,0x57ae0de9
  40c828:	adc    DWORD PTR [esi-0x23],edi
  40c82b:	adc    edi,edx
  40c82d:	icebp  
  40c82e:	xor    esi,DWORD PTR [eax]
  40c830:	or     cl,BYTE PTR [edi-0x8]
  40c833:	lods   ax,WORD PTR ds:[esi]
  40c835:	retf   
  40c836:	mov    ah,0x4b
  40c838:	dec    ebx
  40c839:	aaa    
  40c83a:	(bad)  
  40c83b:	imul   eax,DWORD PTR [ebx],0xc83a5212
  40c841:	inc    esp
  40c842:	xor    eax,0xfa39916c
  40c847:	test   DWORD PTR [esp+eiz*2-0x7f1f3e85],0x4b427d5d
  40c852:	retf   0x24e7
  40c855:	xor    al,0xe4
  40c857:	adc    al,0x73
  40c859:	imul   edi,DWORD PTR [esi-0x5ee5a7cf],0xffffffc8
  40c860:	fistp  DWORD PTR [edx-0x8e73ca9]
  40c866:	xchg   edi,eax
  40c867:	pop    ds
  40c868:	sub    eax,0xbd2b78c4
  40c86d:	test   DWORD PTR [ebx],ebx
  40c86f:	cmp    eax,DWORD PTR [edi+0x34f40171]
  40c875:	and    edi,DWORD PTR [ecx+0x7b]
  40c878:	in     eax,dx
  40c879:	iret   
  40c87a:	ret    0x6417
  40c87d:	ja     0x40c846
  40c87f:	imul   edx,DWORD PTR [eax],0xffffffb0
  40c882:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c883:	faddp  st(6),st
  40c885:	ins    BYTE PTR es:[edi],dx
  40c886:	mov    bh,0x43
  40c888:	fs loope 0x40c8ca
  40c88b:	and    al,0xe0
  40c88d:	ret    0xf8f3
  40c890:	xor    esi,ebp
  40c892:	pop    es
  40c893:	aad    0x6a
  40c895:	inc    esp
  40c896:	fs das 
  40c898:	dec    edx
  40c899:	push   edi
  40c89a:	fisttp QWORD PTR [eax]
  40c89c:	cld    
  40c89d:	mov    edx,0xfff2f855
  40c8a2:	mov    WORD PTR [ebp-0x3e],gs
  40c8a5:	ds inc ecx
  40c8a7:	aam    0xc7
  40c8a9:	bound  eax,QWORD PTR [edi]
  40c8ab:	add    DWORD PTR [edx+0x7444464e],0x55
  40c8b2:	out    0xc0,eax
  40c8b4:	pop    ss
  40c8b5:	ja     0x40c8e4
  40c8b7:	out    0xff,eax
  40c8b9:	push   esi
  40c8ba:	jp     0x40c840
  40c8bc:	cmp    dl,BYTE PTR [ecx]
  40c8be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8bf:	pop    eax
  40c8c0:	adc    esp,DWORD PTR [esi]
  40c8c2:	call   edi
  40c8c4:	sbb    dl,0x34
  40c8c7:	(bad)  
  40c8c8:	pop    edx
  40c8c9:	xchg   esi,eax
  40c8ca:	test   eax,0x3baa4c0f
  40c8cf:	lahf   
  40c8d0:	clc    
  40c8d1:	mov    ds:0x941d0020,al
  40c8d6:	push   es
  40c8d7:	and    ch,ah
  40c8d9:	or     al,0x3c
  40c8db:	mov    edi,0xfd8996ec
  40c8e0:	inc    eax
  40c8e1:	sbb    al,0x8e
  40c8e3:	and    al,0x3f
  40c8e5:	loop   0x40c89b
  40c8e7:	mov    cl,0x12
  40c8e9:	jmp    0xc3dc312c
  40c8ee:	lahf   
  40c8ef:	jecxz  0x40c91d
  40c8f1:	xchg   edi,eax
  40c8f2:	pop    es
  40c8f3:	es pop ss
  40c8f5:	sub    eax,0x20a5dc7d
  40c8fa:	fdiv   DWORD PTR [edx-0x5b5be16b]
  40c900:	fidiv  WORD PTR [eax+0x25]
  40c903:	cli    
  40c904:	push   eax
  40c905:	outs   dx,DWORD PTR ds:[esi]
  40c906:	mov    bl,0xcf
  40c908:	sbb    dl,BYTE PTR [edi-0x7b20aedc]
  40c90e:	ss xchg ecx,eax
  40c910:	push   es
  40c911:	stos   BYTE PTR es:[edi],al
  40c912:	and    ah,BYTE PTR [edx]
  40c914:	pop    ds
  40c915:	cmp    esp,edx
  40c917:	fs jecxz 0x40c89f
  40c91a:	mov    dl,0xa0
  40c91c:	sbb    BYTE PTR [ebx],al
  40c91e:	fild   QWORD PTR [edi+0xb035606]
  40c924:	rcl    DWORD PTR [eax-0x1],1
  40c927:	sar    DWORD PTR ds:0xf8eaf146,0x33
  40c92e:	pop    ebx
  40c92f:	out    dx,eax
  40c930:	push   ebp
  40c931:	rcr    DWORD PTR [eax-0x41],cl
  40c934:	adc    DWORD PTR [edx-0x6c],ebx
  40c937:	jo     0x40c944
  40c939:	push   ebx
  40c93a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c93b:	adc    al,0x1d
  40c93d:	xchg   esp,eax
  40c93e:	jg     0x40c9bc
  40c940:	mov    edi,0x7c6e2439
  40c945:	xchg   ebp,eax
  40c946:	int    0xa9
  40c948:	jno    0x40c9b2
  40c94a:	imul   eax,DWORD PTR [eax],0xffffffe6
  40c94d:	and    DWORD PTR [ecx-0x1359bac8],edi
  40c953:	pop    ds
  40c954:	aas    
  40c955:	aaa    
  40c956:	cmc    
  40c957:	jmp    0xc455:0xa5340704
  40c95e:	mov    ebx,0x5fefc157
  40c963:	push   0x3c
  40c965:	adc    eax,DWORD PTR [ebx]
  40c967:	xor    al,0xd8
  40c969:	mov    ah,0x6b
  40c96b:	daa    
  40c96c:	sub    ah,cl
  40c96e:	loopne 0x40c943
  40c970:	inc    BYTE PTR [ebp+ecx*8-0x36f8b681]
  40c977:	stc    
  40c978:	mov    al,0x9b
  40c97a:	dec    edi
  40c97b:	mov    ds:0x91536d5a,eax
  40c980:	aas    
  40c981:	fsubr  QWORD PTR [esp-0x1b19c64b]
  40c988:	cli    
  40c989:	mov    ebx,0x9ef19bf3
  40c98e:	aam    0xd6
  40c990:	push   ds
  40c991:	mov    edi,0xd2f444dc
  40c996:	cmp    BYTE PTR [esi-0x32d15959],cl
  40c99c:	mov    bl,BYTE PTR [ebx-0x3fc6e03c]
  40c9a2:	xlat   BYTE PTR ds:[ebx]
  40c9a3:	mov    dh,0xab
  40c9a5:	pop    es
  40c9a6:	inc    ecx
  40c9a7:	lods   al,BYTE PTR ds:[esi]
  40c9a8:	sar    BYTE PTR [ecx+0x67aede70],cl
  40c9ae:	arpl   di,cx
  40c9b0:	inc    ecx
  40c9b1:	aas    
  40c9b2:	dec    esi
  40c9b3:	cmp    DWORD PTR [ecx],esp
  40c9b5:	scas   eax,DWORD PTR es:[edi]
  40c9b6:	daa    
  40c9b7:	push   0x36181cce
  40c9bc:	stos   DWORD PTR es:[edi],eax
  40c9bd:	jnp    0x40c99a
  40c9bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9c0:	adc    al,0x2f
  40c9c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9c3:	int    0x7c
  40c9c5:	mov    eax,0x593d8ce8
  40c9ca:	or     bl,ch
  40c9cc:	into   
  40c9cd:	sub    cl,0xec
  40c9d0:	outs   dx,BYTE PTR ds:[esi]
  40c9d1:	push   0xffffffcc
  40c9d3:	inc    edi
  40c9d4:	jp     0x40ca47
  40c9d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9d7:	mov    edi,0xc5aac815
  40c9dc:	shl    DWORD PTR [esi+0x68948bfc],0x62
  40c9e3:	add    esp,DWORD PTR [esi]
  40c9e5:	xchg   esi,eax
  40c9e6:	pop    ebx
  40c9e7:	loope  0x40c9e7
  40c9e9:	mov    esi,0xc7272972
  40c9ee:	or     BYTE PTR [ebx+ebx*8-0x30],0x77
  40c9f3:	jb     0x40ca0f
  40c9f5:	push   0x565ce4a2
  40c9fa:	jnp    0x40c9f8
  40c9fc:	push   esi
  40c9fd:	push   cs
  40c9fe:	jmp    0x40ca75
  40ca00:	and    bh,BYTE PTR [edx+0x18]
  40ca03:	retf   
  40ca04:	cmp    DWORD PTR [ebx+0x5a],eax
  40ca07:	repnz and esi,DWORD PTR [ecx-0x5321306c]
  40ca0e:	xchg   al,bh
  40ca10:	add    al,0x1d
  40ca12:	add    al,0xc5
  40ca14:	(bad)  
  40ca15:	loopne 0x40ca6b
  40ca17:	sti    
  40ca18:	mov    cl,0x47
  40ca1a:	out    0x73,al
  40ca1c:	and    al,0xe1
  40ca1e:	mov    esi,0x6e16933e
  40ca23:	test   BYTE PTR [bx+0x6b62],bh
  40ca28:	push   edx
  40ca29:	sub    BYTE PTR [ecx],0x12
  40ca2c:	fcom   DWORD PTR [eax+0xfb5f9ac]
  40ca32:	add    al,0x84
  40ca34:	push   DWORD PTR [eax]
  40ca36:	mov    dl,0x52
  40ca38:	enter  0x5795,0xa4
  40ca3c:	mov    esp,0xb4615ff9
  40ca41:	mov    bh,0xf
  40ca43:	ror    BYTE PTR gs:[edi],1
  40ca46:	es pop ss
  40ca48:	rcl    DWORD PTR [eax-0x5acae5f5],0xd9
  40ca4f:	add    edi,esi
  40ca51:	inc    esp
  40ca52:	mov    esi,0xf98d2373
  40ca57:	mov    ebx,0xeea0c4b1
  40ca5c:	fdivr  DWORD PTR [edx]
  40ca5e:	jp     0x40caab
  40ca60:	mov    DWORD PTR [ebx-0x28],ecx
  40ca63:	dec    edi
  40ca64:	push   edi
  40ca65:	(bad)  
  40ca66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca67:	sub    al,ah
  40ca69:	lods   al,BYTE PTR ds:[esi]
  40ca6a:	lods   al,BYTE PTR ds:[esi]
  40ca6b:	push   esi
  40ca6c:	je     0x40ca96
  40ca6e:	lea    ebp,[esi]
  40ca70:	scas   al,BYTE PTR es:[edi]
  40ca71:	inc    ecx
  40ca72:	xor    al,0xc8
  40ca74:	inc    esi
  40ca75:	mov    WORD PTR [ecx-0x319922a],fs
  40ca7b:	popa   
  40ca7c:	les    ecx,FWORD PTR [ebx+0x3c]
  40ca7f:	pushf  
  40ca80:	in     al,0x31
  40ca82:	adc    cl,BYTE PTR [edx-0x1e]
  40ca85:	cs in  eax,0x94
  40ca88:	call   0x58b9:0x3c767f12
  40ca8f:	ins    DWORD PTR es:[edi],dx
  40ca90:	xchg   edi,eax
  40ca91:	out    0xf4,eax
  40ca93:	std    
  40ca94:	push   esi
  40ca95:	and    esp,ebx
  40ca97:	data16 mov dl,0x81
  40ca9b:	pop    ds
  40ca9c:	inc    ebx
  40ca9d:	and    al,0xcd
  40ca9f:	inc    esi
  40caa0:	cmp    al,0x9f
  40caa2:	mov    edi,0x53dce4d1
  40caa7:	ret    
  40caa8:	add    bl,BYTE PTR [eax-0x35409413]
  40caae:	movaps XMMWORD PTR [ebx+ecx*4+0x729bcc4b],xmm5
  40cab6:	sbb    dl,BYTE PTR [eax-0x5ddc0df2]
  40cabc:	sbb    al,0x81
  40cabe:	add    eax,0xffdce0e1
  40cac3:	xchg   edx,eax
  40cac4:	lahf   
  40cac5:	out    dx,eax
  40cac6:	xchg   ebp,eax
  40cac7:	pop    ds
  40cac8:	dec    ecx
  40cac9:	jl     0x40ca6d
  40cacb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cacc:	dec    edx
  40cacd:	clc    
  40cace:	lods   eax,DWORD PTR ds:[esi]
  40cacf:	fistp  DWORD PTR [esi-0x347d6dbe]
  40cad5:	jns    0x40cb14
  40cad7:	mov    ecx,0x96f240a5
  40cadc:	adc    ebp,ecx
  40cade:	sbb    DWORD PTR es:0x8c8eb06d,0x7df7412e
  40cae9:	(bad)  
  40caea:	mov    esi,0x80ec214c
  40caef:	adc    al,0x8b
  40caf1:	call   0xdf436056
  40caf6:	push   edi
  40caf7:	aaa    
  40caf8:	(bad)  
  40caf9:	jg     0x40ca7d
  40cafb:	xor    al,0x21
  40cafd:	stos   BYTE PTR es:[edi],al
  40cafe:	and    edx,DWORD PTR [esi+eiz*4-0x4737aa5e]
  40cb05:	(bad)  
  40cb06:	fist   DWORD PTR [ebx]
  40cb08:	pusha  
  40cb09:	sub    DWORD PTR [esi-0x2350e660],0xffffffe5
  40cb10:	rcl    BYTE PTR [ebp-0x3bfb62aa],cl
  40cb16:	les    ebp,FWORD PTR [edi+0x596f9fad]
  40cb1c:	add    eax,0xcc16d07
  40cb21:	test   al,0x8
  40cb23:	gs lahf 
  40cb25:	mov    edx,0x30577509
  40cb2a:	lds    edi,FWORD PTR [eax+0x1b]
  40cb2d:	test   eax,0x982f3b2b
  40cb32:	ret    0x642b
  40cb35:	fidiv  WORD PTR [esi+0x1060ad76]
  40cb3b:	mov    DWORD PTR [ecx+eax*8-0x1f268793],edi
  40cb42:	loopne 0x40cb7e
  40cb44:	inc    edi
  40cb45:	inc    edx
  40cb46:	test   DWORD PTR [ebx+esi*8+0x495e62bd],0xcdaa48dc
  40cb51:	mov    ah,0x7b
  40cb53:	and    eax,ebx
  40cb55:	es adc bl,dh
  40cb58:	ins    DWORD PTR es:[edi],dx
  40cb59:	sbb    al,0xb2
  40cb5b:	inc    eax
  40cb5c:	jbe    0x40cbd5
  40cb5e:	scas   eax,DWORD PTR es:[edi]
  40cb5f:	fcomp  QWORD PTR [ecx+0x38]
  40cb62:	data16 mov cl,0xb2
  40cb65:	imul   ebp,DWORD PTR [eax],0x72
  40cb68:	sbb    eax,0x2d8b7398
  40cb6d:	mov    edx,0xc8d97a83
  40cb72:	mov    edx,0x7b8f56e3
  40cb77:	lock or al,0x75
  40cb7a:	popa   
  40cb7b:	jmp    0x16e8:0xd37ad1db
  40cb82:	in     eax,dx
  40cb83:	mov    edi,0xc9cf6a36
  40cb88:	cmc    
  40cb89:	enter  0x8fae,0xba
  40cb8d:	inc    ecx
  40cb8e:	mov    dl,0xcc
  40cb90:	adc    DWORD PTR [eax-0x109dd8f2],ebx
  40cb96:	push   0x5667c79a
  40cb9b:	(bad)  
  40cb9c:	aam    0xb0
  40cb9e:	shr    DWORD PTR [ebx+0x5c],cl
  40cba1:	mov    edi,0x1b64d322
  40cba6:	and    dl,BYTE PTR [esi+0x75]
  40cba9:	ret    0xa1fc
  40cbac:	and    edx,DWORD PTR [ebx+0x7bdb025b]
  40cbb2:	sti    
  40cbb3:	mov    cs,eax
  40cbb5:	lahf   
  40cbb6:	mov    esp,0x4e22a257
  40cbbb:	mov    dh,0xdb
  40cbbd:	jnp    0x40cc0c
  40cbbf:	dec    esi
  40cbc0:	mov    ds:0x5047ddd4,al
  40cbc5:	mov    eax,ds:0xdb2ae2fc
  40cbca:	jge    0x40cc11
  40cbcc:	dec    ebp
  40cbcd:	mov    bl,0x81
  40cbcf:	xchg   esi,eax
  40cbd0:	outs   dx,BYTE PTR ds:[esi]
  40cbd1:	sbb    bl,cl
  40cbd3:	dec    edi
  40cbd4:	mov    cl,0xae
  40cbd6:	pop    ds
  40cbd7:	mov    al,ds:0xecf7b8d7
  40cbdc:	jne    0x40cb79
  40cbde:	sub    dh,BYTE PTR [edx]
  40cbe0:	call   0x6f28:0xebf3f986
  40cbe7:	jmp    0x40cbb1
  40cbe9:	jmp    DWORD PTR [eax]
  40cbeb:	jno    0x40cbd9
  40cbed:	jne    0x40cc6a
  40cbef:	sbb    al,dh
  40cbf1:	sbb    esi,DWORD PTR [esi-0x396b3c40]
  40cbf7:	dec    esi
  40cbf8:	jnp    0x40cc77
  40cbfa:	jp     0x40cbb6
  40cbfc:	mov    ds:0xb2c19a58,al
  40cc01:	pop    ss
  40cc02:	inc    ecx
  40cc03:	(bad)  
  40cc04:	data16 aas 
  40cc06:	fwait
  40cc07:	stc    
  40cc08:	fadd   DWORD PTR [edx+0x69f6a743]
  40cc0e:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40cc10:	adc    BYTE PTR [eax+0x6d],0xef
  40cc14:	mov    ebp,0x1469c0d9
  40cc19:	icebp  
  40cc1a:	push   ds
  40cc1b:	xchg   edx,eax
  40cc1c:	mov    gs,WORD PTR [ebx+0x5c]
  40cc1f:	dec    ebx
  40cc20:	mov    ds:0xa40fe10b,eax
  40cc25:	clc    
  40cc26:	nop
  40cc27:	jne    0x40cca0
  40cc29:	dec    esp
  40cc2a:	inc    edi
  40cc2b:	lahf   
  40cc2c:	jmp    0xc69f71bb
  40cc31:	and    BYTE PTR [esi],bh
  40cc33:	std    
  40cc34:	addr16 je 0x40cc5a
  40cc37:	or     DWORD PTR [edx],0x8fc421c2
  40cc3d:	mov    eax,0xb3bfcd85
  40cc42:	xchg   esp,eax
  40cc43:	inc    edi
  40cc44:	imul   esi,DWORD PTR [edx],0x93e2e760
  40cc4a:	xchg   BYTE PTR [edi],cl
  40cc4c:	jns    0x40ccc6
  40cc4e:	and    eax,esi
  40cc50:	loop   0x40cc9a
  40cc52:	pop    esi
  40cc53:	add    bh,dh
  40cc55:	pop    esp
  40cc56:	sub    al,0xd1
  40cc58:	xchg   esi,eax
  40cc5a:	mov    edx,0x610ad271
  40cc5f:	int    0x6c
  40cc61:	fwait
  40cc62:	pop    ds
  40cc63:	inc    esp
  40cc64:	mov    dl,0xc6
  40cc66:	jno    0x40cc0e
  40cc68:	inc    DWORD PTR [esi-0x74]
  40cc6b:	inc    ebp
  40cc6c:	(bad)  
  40cc6d:	adc    cl,BYTE PTR [ebp-0xcf949be]
  40cc73:	lock inc ecx
  40cc75:	leave  
  40cc76:	fdiv   DWORD PTR [edx-0x50]
  40cc79:	je     0x40ccf6
  40cc7b:	jmp    0x53b3cb0e
  40cc80:	hlt    
  40cc81:	outs   dx,BYTE PTR ds:[esi]
  40cc82:	fwait
  40cc83:	xchg   esp,eax
  40cc84:	add    BYTE PTR [ecx],al
  40cc86:	stos   BYTE PTR es:[edi],al
  40cc87:	mov    ah,0x5e
  40cc89:	mov    eax,0xedd17e6f
  40cc8e:	(bad)  
  40cc8f:	and    BYTE PTR [eax-0x26],bh
  40cc92:	and    DWORD PTR [ecx],edx
  40cc94:	lahf   
  40cc95:	mov    esp,0xf8c85d4d
  40cc9a:	inc    ebx
  40cc9b:	push   0xffffffa2
  40cc9d:	sbb    DWORD PTR [ecx-0xa93a933],ebp
  40cca3:	scas   al,BYTE PTR es:[edi]
  40cca4:	xchg   BYTE PTR [ecx+0x54066066],ah
  40ccaa:	add    dh,BYTE PTR [ecx]
  40ccac:	mov    al,ds:0xe43973c9
  40ccb1:	je     0x40cc50
  40ccb3:	mov    dh,0x1f
  40ccb5:	mov    edi,0x55c1edf
  40ccba:	add    BYTE PTR [esi+0x74],dl
  40ccbd:	icebp  
  40ccbe:	data16 sub al,0x1d
  40ccc1:	(bad)  
  40ccc2:	jo     0x40ccdc
  40ccc4:	add    ch,ah
  40ccc6:	pop    ss
  40ccc7:	xlat   BYTE PTR ds:[ebx]
  40ccc8:	(bad)  
  40ccc9:	jo     0x40cc81
  40cccb:	dec    eax
  40cccc:	fsub   st,st(6)
  40ccce:	test   DWORD PTR [edi+0x42],eax
  40ccd1:	sub    esp,ecx
  40ccd3:	mov    dh,0x73
  40ccd5:	or     bh,BYTE PTR [edx-0x2763ff3a]
  40ccdb:	aam    0x50
  40ccdd:	and    BYTE PTR [ebx-0x46],dl
  40cce0:	push   eax
  40cce1:	pop    ecx
  40cce2:	push   ds
  40cce3:	mul    DWORD PTR [edi]
  40cce5:	xor    eax,esi
  40cce7:	out    dx,eax
  40cce8:	in     al,0x69
  40ccea:	add    DWORD PTR ds:0x4c85f121,0xffffffef
  40ccf1:	loop   0x40cd3d
  40ccf3:	adc    DWORD PTR [eax-0x5f957ad6],esp
  40ccf9:	ja     0x40ccd7
  40ccfb:	icebp  
  40ccfc:	(bad)  [ecx-0x4f730b5]
  40cd02:	push   ss
  40cd03:	(bad)  
  40cd04:	lahf   
  40cd05:	bound  ecx,QWORD PTR [esi-0x54]
  40cd08:	xchg   edi,eax
  40cd09:	add    DWORD PTR [ebp-0x29],ecx
  40cd0c:	sti    
  40cd0d:	jb     0x40cd60
  40cd0f:	or     BYTE PTR [ebx+0x2a],dh
  40cd12:	mov    edx,ebx
  40cd14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd15:	mov    dh,0x7
  40cd17:	pop    ecx
  40cd18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd19:	call   0x77ef:0xeceab54a
  40cd20:	push   ss
  40cd21:	leave  
  40cd22:	in     eax,0x18
  40cd24:	test   al,0xb4
  40cd26:	gs fwait
  40cd28:	push   ss
  40cd29:	imul   ecx,DWORD PTR [edi+0x6],0x2
  40cd2d:	in     eax,0xb9
  40cd2f:	mov    al,ds:0x64e4c773
  40cd34:	int3   
  40cd35:	sbb    edi,DWORD PTR [ecx+esi*8+0x6f]
  40cd39:	dec    edx
  40cd3a:	ins    BYTE PTR es:[edi],dx
  40cd3b:	cli    
  40cd3c:	out    dx,eax
  40cd3d:	sub    BYTE PTR [ebx-0x6b],0xdd
  40cd41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd42:	outs   dx,BYTE PTR ds:[esi]
  40cd43:	repz imul eax,DWORD PTR ds:0x854be638,0xffffffa6
  40cd4b:	mov    al,BYTE PTR [edx-0x61474698]
  40cd51:	aad    0x7a
  40cd53:	ss daa 
  40cd55:	push   eax
  40cd56:	rcl    BYTE PTR [esi],0xb5
  40cd59:	in     al,0x42
  40cd5b:	mov    al,0x7d
  40cd5e:	dec    esi
  40cd5f:	dec    ebx
  40cd60:	and    bl,dh
  40cd62:	ss cld 
  40cd64:	pushf  
  40cd65:	sbb    BYTE PTR [edi],ch
  40cd67:	or     bh,ah
  40cd69:	push   eax
  40cd6a:	(bad)  
  40cd6b:	fldenv [edx+ebx*4+0x60482f76]
  40cd72:	retf   
  40cd73:	rcr    BYTE PTR [ebx-0xebf0288],0x3d
  40cd7a:	ret    0x635
  40cd7d:	jo     0x40cde3
  40cd7f:	fisubr WORD PTR [esi-0x62456fbd]
  40cd85:	dec    esp
  40cd86:	sahf   
  40cd87:	rol    edi,cl
  40cd89:	hlt    
  40cd8a:	ds jb  0x40cd17
  40cd8d:	cmp    ecx,0xe544a4cc
  40cd93:	pop    esp
  40cd94:	pop    ds
  40cd95:	mov    ?,ebp
  40cd97:	jb     0x40cd94
  40cd99:	xor    al,0x35
  40cd9b:	sahf   
  40cd9c:	push   esi
  40cd9d:	lods   eax,DWORD PTR ds:[esi]
  40cd9e:	out    0x25,eax
  40cda0:	in     eax,0x61
  40cda2:	(bad)  
  40cda3:	movsx  eax,di
  40cda6:	mov    ah,0x2e
  40cda8:	adc    esi,ebx
  40cdaa:	pop    esp
  40cdab:	sub    edx,esi
  40cdad:	popfw  
  40cdaf:	fimul  WORD PTR [edx+eiz*8+0x3850a416]
  40cdb6:	mov    ss,eax
  40cdb8:	push   0xa9d9b8a4
  40cdbd:	pop    edx
  40cdbe:	aad    0xc0
  40cdc0:	mov    ah,0x53
  40cdc2:	btr    eax,esp
  40cdc5:	xchg   BYTE PTR [ebp+ebp*2+0x7f07424a],ch
  40cdcc:	pop    edx
  40cdcd:	ss sbb esp,0x2b
  40cdd1:	test   eax,0x6a89865e
  40cdd6:	aad    0x50
  40cdd8:	scas   eax,DWORD PTR es:[edi]
  40cdd9:	xchg   esi,eax
  40cdda:	fidiv  WORD PTR [edx]
  40cddc:	inc    ecx
  40cddd:	jmp    0x2c63:0x45c161e2
  40cde4:	aad    0x57
  40cde6:	adc    dl,ch
  40cde8:	xchg   edi,eax
  40cde9:	je     0x40ce1a
  40cdeb:	inc    eax
  40cdec:	xor    DWORD PTR [ebp-0x1f],esp
  40cdef:	pop    edi
  40cdf0:	scas   eax,DWORD PTR es:[edi]
  40cdf1:	outs   dx,DWORD PTR ds:[esi]
  40cdf2:	icebp  
  40cdf3:	imul   esp,DWORD PTR [ebx+0x37f7c629],0xfffffff7
  40cdfa:	push   esi
  40cdfb:	lea    ebx,[eax]
  40cdfd:	sbb    BYTE PTR [eax+0x28],bh
  40ce00:	(bad)  
  40ce01:	popf   
  40ce02:	mov    ebx,0x8525ba76
  40ce07:	or     DWORD PTR [esi+0x6cc19a79],esi
  40ce0d:	or     dl,BYTE PTR [ebp-0x27]
  40ce10:	scas   al,BYTE PTR es:[edi]
  40ce11:	jmp    0x40cdb7
  40ce13:	adc    al,0x3f
  40ce15:	jg     0x40ce80
  40ce17:	(bad)  
  40ce18:	sbb    eax,ebx
  40ce1a:	mov    ch,0x6f
  40ce1c:	xchg   edx,eax
  40ce1d:	int    0x4
  40ce1f:	jo     0x40ce8b
  40ce21:	aad    0xe8
  40ce23:	sub    eax,0x9eee3ebb
  40ce28:	bound  ebx,QWORD PTR [edx]
  40ce2a:	and    al,0x57
  40ce2c:	(bad)  
  40ce2d:	inc    bl
  40ce2f:	mov    esp,DWORD PTR [ecx]
  40ce31:	cmp    BYTE PTR [edi],dh
  40ce33:	xor    DWORD PTR [esi-0x22],ebp
  40ce36:	push   cs
  40ce37:	adc    esp,ecx
  40ce39:	jnp    0x40ce19
  40ce3b:	cmp    eax,0x1cb39c21
  40ce40:	bound  edx,QWORD PTR [eax+0x21]
  40ce43:	lock dec esp
  40ce45:	dec    edi
  40ce46:	mov    dh,0xd
  40ce48:	cdq    
  40ce49:	repnz mov esi,0x2f8206e7
  40ce4f:	js     0x40ce4b
  40ce51:	test   DWORD PTR [ebx-0x73a77c1d],edi
  40ce57:	inc    edx
  40ce58:	in     al,dx
  40ce59:	lds    ebp,FWORD PTR [ebx]
  40ce5b:	adc    dl,ch
  40ce5d:	push   edi
  40ce5e:	test   BYTE PTR [ebx-0x4f],0x45
  40ce62:	ss test eax,0x398bf820
  40ce68:	ds in  al,0x7
  40ce6b:	cs repz leave 
  40ce6e:	(bad)  
  40ce70:	add    DWORD PTR [ebx],0x5e
  40ce73:	out    dx,al
  40ce74:	div    BYTE PTR [esi-0x1]
  40ce77:	sahf   
  40ce78:	fdivr  st(3),st
  40ce7a:	mov    ds:0x2af452b0,al
  40ce7f:	imul   di,WORD PTR [eax+0x57],0xffe6
  40ce84:	dec    ebx
  40ce85:	or     eax,0x69fa7c00
  40ce8a:	dec    ebp
  40ce8b:	inc    BYTE PTR [edx-0x2eb0fdfc]
  40ce91:	xchg   esi,eax
  40ce92:	and    dl,cl
  40ce94:	in     al,dx
  40ce95:	dec    ebx
  40ce96:	cmp    BYTE PTR [eax+0x6aef6b54],al
  40ce9c:	adc    dl,al
  40ce9e:	pop    edx
  40ce9f:	mul    BYTE PTR [esi+0x6e]
  40cea2:	loopne 0x40ce55
  40cea4:	or     esi,DWORD PTR [ebx+0x40d1487b]
  40ceaa:	test   BYTE PTR [esi+0xad9e1aa],ah
  40ceb0:	into   
  40ceb1:	push   0xfffffff3
  40ceb3:	jno    0x40cf16
  40ceb5:	aam    0x48
  40ceb7:	adc    esi,esp
  40ceb9:	pop    ds
  40ceba:	cmp    DWORD PTR [ecx],esp
  40cebc:	lods   al,BYTE PTR ds:[esi]
  40cebd:	and    bl,BYTE PTR [eax-0x39]
  40cec0:	xchg   esp,eax
  40cec1:	sub    al,0x1d
  40cec3:	mov    bl,0x62
  40cec5:	adc    ch,BYTE PTR [esi+0x70301662]
  40cecb:	ss inc esp
  40cecd:	push   cs
  40cece:	jmp    0xa6e15a5d
  40ced3:	call   0x1c4f128d
  40ced8:	or     al,0x57
  40ceda:	mov    ch,0x97
  40cedc:	adc    al,0x6a
  40cede:	retf   0x96d3
  40cee1:	mov    bh,BYTE PTR [ecx]
  40cee3:	gs (bad) 
  40cee5:	ficomp WORD PTR [edi]
  40cee7:	mov    ds:0x33d332e2,al
  40ceec:	shl    DWORD PTR [ecx+0x71dae639],1
  40cef2:	sbb    DWORD PTR [edi-0x4e],ebx
  40cef5:	push   ecx
  40cef6:	inc    esi
  40cef7:	in     al,0x49
  40cef9:	or     eax,0x6d745a33
  40cefe:	sub    al,0xd0
  40cf00:	or     ebp,DWORD PTR [ebx]
  40cf02:	pop    esp
  40cf03:	xchg   esi,eax
  40cf04:	pop    eax
  40cf05:	lods   eax,DWORD PTR ds:[esi]
  40cf06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf07:	pop    ecx
  40cf08:	(bad)  
  40cf09:	or     al,cl
  40cf0b:	addr16 sub eax,0xfac3d4a6
  40cf11:	and    cl,al
  40cf13:	sbb    edx,DWORD PTR [ecx+esi*2]
  40cf16:	adc    DWORD PTR [esp+edi*8],esp
  40cf19:	lds    ebx,FWORD PTR [edx]
  40cf1b:	inc    esp
  40cf1c:	dec    ecx
  40cf1d:	enter  0xcb8d,0x18
  40cf21:	dec    eax
  40cf22:	xor    eax,0xc38208dc
  40cf27:	sar    BYTE PTR ds:0x390f5787,1
  40cf2d:	xchg   esi,eax
  40cf2e:	out    dx,eax
  40cf2f:	push   ecx
  40cf30:	mov    esi,0xe7805bf6
  40cf35:	rdpmc  
  40cf37:	aad    0xe1
  40cf39:	faddp  st(6),st
  40cf3b:	sub    DWORD PTR [ecx-0x7d01c997],0x38
  40cf42:	fisubr DWORD PTR [eax]
  40cf44:	inc    ebp
  40cf45:	popf   
  40cf46:	int3   
  40cf47:	pop    es
  40cf48:	sbb    al,0xb1
  40cf4a:	neg    BYTE PTR [edi+0x29]
  40cf4d:	xor    BYTE PTR [edi-0x2d],bh
  40cf50:	xchg   ecx,eax
  40cf51:	rcr    dh,cl
  40cf53:	in     eax,0x19
  40cf55:	mov    ?,WORD PTR [edx+0xf]
  40cf58:	mov    ds:0x736ef2f1,al
  40cf5d:	pop    ds
  40cf5e:	aam    0xb0
  40cf60:	jl     0x40cf7b
  40cf62:	mov    DWORD PTR [eax+0x3755361f],esi
  40cf68:	inc    ebx
  40cf69:	xchg   cl,cl
  40cf6b:	dec    ebp
  40cf6c:	icebp  
  40cf6d:	inc    BYTE PTR [ebp+0x5d]
  40cf70:	pop    ss
  40cf71:	adc    dl,BYTE PTR [edx-0x46]
  40cf74:	adc    BYTE PTR [ecx-0x55],bh
  40cf77:	cs push 0x6775c6d7
  40cf7d:	(bad)  
  40cf7e:	sbb    BYTE PTR ds:0x286651d4,al
  40cf84:	mov    edi,0xead686ff
  40cf89:	inc    ebp
  40cf8a:	jmp    0x40cf0f
  40cf8c:	push   cs
  40cf8d:	loop   0x40cfcf
  40cf8f:	push   ecx
  40cf90:	mov    eax,0xcd10f4d5
  40cf95:	scas   al,BYTE PTR es:[edi]
  40cf96:	scas   eax,DWORD PTR es:[edi]
  40cf97:	leave  
  40cf98:	std    
  40cf99:	test   eax,0x99f1ce6
  40cf9e:	fcmovnu st,st(1)
  40cfa0:	aad    0x8e
  40cfa2:	or     al,dl
  40cfa4:	sti    
  40cfa5:	rcl    BYTE PTR [ecx-0x71],0x5a
  40cfa9:	inc    edx
  40cfaa:	pop    esp
  40cfab:	push   edx
  40cfac:	add    DWORD PTR [ebx+0x9],ecx
  40cfaf:	jle    0x40cfb8
  40cfb1:	xor    esp,DWORD PTR [edx+0x19cd157]
  40cfb7:	dec    edi
  40cfb8:	cli    
  40cfb9:	pop    esi
  40cfba:	sub    al,0x62
  40cfbc:	outs   dx,BYTE PTR ds:[esi]
  40cfbd:	inc    esi
  40cfbe:	inc    esi
  40cfbf:	mov    ch,0xb7
  40cfc1:	or     cl,BYTE PTR [ebp+0x197afc5e]
  40cfc7:	cwde   
  40cfc8:	jb     0x40cf98
  40cfca:	retf   
  40cfcb:	adc    DWORD PTR [esp+eiz*2+0x29],esp
  40cfcf:	push   ebp
  40cfd0:	repz inc eax
  40cfd2:	outs   dx,DWORD PTR ds:[esi]
  40cfd3:	dec    edx
  40cfd4:	push   cs
  40cfd5:	add    ah,BYTE PTR [ecx-0x3e1fb125]
  40cfdb:	ret    0x5c08
  40cfde:	das    
  40cfdf:	mov    ah,BYTE PTR [esi+0xd]
  40cfe2:	outs   dx,BYTE PTR ds:[esi]
  40cfe3:	mov    al,ds:0x7c68d364
  40cfe8:	xor    dl,cl
  40cfea:	xchg   ebp,eax
  40cfeb:	sbb    eax,0xadbbf586
  40cff0:	scas   eax,DWORD PTR es:[edi]
  40cff1:	mov    al,0x6e
  40cff3:	sbb    ecx,DWORD PTR [esi+0x20]
  40cff6:	cmp    ecx,DWORD PTR [esi-0x61]
  40cff9:	xchg   esi,eax
  40cffa:	mov    cs,WORD PTR [ebx]
  40cffc:	rcr    DWORD PTR [ebx+eiz*1+0x42c14c16],cl
  40d003:	pop    ebx
  40d004:	shl    DWORD PTR [ebx-0x48],cl
  40d007:	cmc    
  40d008:	push   ebx
  40d009:	fadd   st,st(7)
  40d00b:	fwait
  40d00c:	(bad)  
  40d00d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d00e:	(bad)  
  40d00f:	popf   
  40d010:	adc    edx,eax
  40d012:	add    esp,DWORD PTR [eax]
  40d014:	rol    BYTE PTR [eax],0xcf
  40d017:	cwde   
  40d018:	test   BYTE PTR [ecx+0x6f211263],dl
  40d01e:	jmp    0x40d07b
  40d020:	mov    ch,0xc4
  40d022:	fdivrp st(1),st
  40d024:	lds    ebx,FWORD PTR [ebx-0x7bd793d0]
  40d02a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d02b:	ja     0x40cfc9
  40d02d:	or     al,0x60
  40d02f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d030:	cmp    BYTE PTR [ecx],ch
  40d032:	outs   dx,BYTE PTR ds:[esi]
  40d033:	(bad)  
  40d035:	fmul   QWORD PTR [ecx+0x3167cabb]
  40d03b:	ret    0xe004
  40d03e:	fs or  al,0xfb
  40d041:	paddsw mm5,mm3
  40d044:	pop    ebx
  40d045:	pop    ss
  40d046:	cld    
  40d047:	xor    al,0x5d
  40d049:	fistp  DWORD PTR [edx+0x55]
  40d04c:	inc    ebx
  40d04d:	or     ch,bl
  40d04f:	or     DWORD PTR [esi-0x42],edx
  40d052:	xor    eax,0x600e3754
  40d057:	ret    
  40d058:	popa   
  40d059:	data16 add al,0xc1
  40d05c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d05d:	inc    esp
  40d05e:	pop    edi
  40d05f:	pop    edi
  40d060:	in     al,0x1a
  40d062:	nop
  40d063:	and    DWORD PTR [edi-0x5476db6a],edi
  40d069:	imul   esi,DWORD PTR [edi],0xffffffab
  40d06c:	loopne 0x40d093
  40d06e:	rcr    BYTE PTR [ebp+0x771a7d46],1
  40d074:	sbb    eax,0xc2232d9
  40d079:	test   al,0xa9
  40d07b:	aas    
  40d07c:	aad    0xb5
  40d07e:	xor    al,0xf4
  40d080:	inc    esi
  40d081:	and    eax,0xc50bc998
  40d086:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d087:	mov    ds,WORD PTR [ebx+0x1f]
  40d08a:	inc    ebx
  40d08b:	ror    BYTE PTR [ecx+0x15],0xcb
  40d08f:	mov    gs,WORD PTR [ecx]
  40d091:	lahf   
  40d092:	add    eax,0xb45da596
  40d097:	sahf   
  40d098:	mov    esi,0xe1539570
  40d09d:	add    dl,BYTE PTR [ebp+edx*8+0x63]
  40d0a1:	mov    edx,0xa7857628
  40d0a6:	fidivr WORD PTR [ebx-0x32]
  40d0a9:	fwait
  40d0aa:	retf   0x554f
  40d0ad:	stos   BYTE PTR es:[edi],al
  40d0ae:	push   0x69e49641
  40d0b3:	mov    ebp,0x9fb89339
  40d0b8:	jb     0x40d12e
  40d0ba:	sti    
  40d0bb:	jns    0x40d137
  40d0bd:	jnp    0x40d0fc
  40d0bf:	jbe    0x40d088
  40d0c1:	push   esi
  40d0c2:	not    al
  40d0c4:	fwait
  40d0c5:	call   FWORD PTR [esi]
  40d0c7:	xchg   ebx,eax
  40d0c8:	stos   DWORD PTR es:[edi],eax
  40d0c9:	add    eax,0x77b46ebe
  40d0ce:	stos   BYTE PTR es:[edi],al
  40d0cf:	mov    edi,cs
  40d0d1:	push   eax
  40d0d2:	es sbb eax,0xebaf9141
  40d0d8:	add    bh,BYTE PTR ds:[edi+ebp*8]
  40d0dc:	repz add bh,BYTE PTR [edi+0x3c4655ea]
  40d0e3:	sti    
  40d0e4:	mov    cl,0x44
  40d0e6:	sar    esp,cl
  40d0e8:	xchg   DWORD PTR [ebx+eiz*1+0x24add3f9],ecx
  40d0ef:	pop    ebx
  40d0f0:	das    
  40d0f1:	jecxz  0x40d08a
  40d0f3:	int    0xab
  40d0f5:	hlt    
  40d0f6:	ins    DWORD PTR es:[edi],dx
  40d0f7:	aas    
  40d0f8:	and    eax,0x89d47746
  40d0fd:	mov    edx,0x1b31af9c
  40d102:	adc    edi,esi
  40d104:	pop    ss
  40d105:	test   al,0xbf
  40d107:	jmp    0x40d0cb
  40d109:	inc    ebx
  40d10a:	mov    esi,0xae924580
  40d10f:	cmp    ch,BYTE PTR [edx+edi*4+0x2d03ff55]
  40d116:	pop    edi
  40d117:	adc    ah,bl
  40d119:	sbb    esi,DWORD PTR [esi-0x4119452b]
  40d11f:	pop    edi
  40d120:	pop    edx
  40d121:	and    al,0x67
  40d123:	stos   DWORD PTR es:[edi],eax
  40d124:	and    edi,DWORD PTR [edi-0x1c]
  40d127:	repz repz addr16 mov ds:0x9c7e,al
  40d12d:	scas   eax,DWORD PTR es:[edi]
  40d12e:	call   0x43c:0xa986c388
  40d135:	rcr    BYTE PTR [edi+eax*4],0xd8
  40d139:	mov    bh,0x69
  40d13b:	call   0xa4b88043
  40d140:	popa   
  40d141:	pop    esp
  40d142:	mov    ds:0x3c6a5719,eax
  40d147:	rcr    DWORD PTR [edx],1
  40d149:	push   eax
  40d14a:	and    ch,cl
  40d14c:	ret    
  40d14d:	dec    ebx
  40d14e:	cmp    ah,0x1f
  40d151:	in     al,dx
  40d152:	xor    BYTE PTR [ebx+edi*8+0x2f6d13e0],ah
  40d159:	mov    ebx,0x1abb5fe9
  40d15e:	in     eax,dx
  40d15f:	inc    eax
  40d160:	scas   al,BYTE PTR es:[edi]
  40d161:	jb     0x40d197
  40d163:	cmp    esi,esp
  40d165:	push   ss
  40d166:	lods   al,BYTE PTR ds:[esi]
  40d167:	or     cl,BYTE PTR [eax-0x75aa1d61]
  40d16d:	rcl    dh,0xd6
  40d170:	xchg   ebp,eax
  40d171:	pop    eax
  40d172:	or     al,0x5f
  40d174:	aam    0xc7
  40d176:	add    BYTE PTR [edi],0xf5
  40d179:	(bad)  
  40d17a:	pop    esi
  40d17b:	(bad)  
  40d17c:	cld    
  40d17d:	pop    ss
  40d17e:	iret   
  40d17f:	addr16 into 
  40d181:	push   esp
  40d182:	sahf   
  40d183:	jno    0x40d18b
  40d185:	je     0x40d116
  40d187:	fs scas al,BYTE PTR es:[edi]
  40d189:	xor    DWORD PTR [edi+0x3db67a0b],esp
  40d18f:	mov    bh,0xe3
  40d191:	sub    BYTE PTR [esi-0x3232e196],bl
  40d197:	add    al,0x86
  40d199:	test   al,0xb8
  40d19b:	mov    ch,0x8a
  40d19d:	(bad)  
  40d19e:	(bad)  
  40d19f:	pop    esp
  40d1a0:	fs pop ecx
  40d1a2:	fcomp  DWORD PTR [eax+0x2d7794e6]
  40d1a8:	xchg   ebp,eax
  40d1a9:	dec    edx
  40d1aa:	enter  0xf9c,0x26
  40d1ae:	and    DWORD PTR [ecx+0x68],edx
  40d1b1:	stc    
  40d1b2:	fiadd  DWORD PTR [ecx-0x4378c509]
  40d1b8:	pop    esi
  40d1b9:	jno    0x40d22b
  40d1bb:	je     0x40d1f9
  40d1bd:	cmc    
  40d1be:	dec    edx
  40d1bf:	or     bh,cl
  40d1c1:	into   
  40d1c2:	and    al,0x95
  40d1c4:	mov    esi,0x72696c55
  40d1c9:	leave  
  40d1ca:	push   ss
  40d1cb:	cli    
  40d1cc:	loopne 0x40d1d8
  40d1ce:	ins    BYTE PTR es:[edi],dx
  40d1cf:	call   0xf4fab09d
  40d1d4:	dec    esp
  40d1d5:	daa    
  40d1d6:	jg     0x40d20f
  40d1d8:	push   edi
  40d1d9:	jg     0x40d1ea
  40d1db:	cmc    
  40d1dc:	out    dx,al
  40d1dd:	das    
  40d1de:	xchg   DWORD PTR [edi+esi*2],ebx
  40d1e1:	in     al,0xaf
  40d1e3:	or     edi,esp
  40d1e5:	aad    0xfc
  40d1e7:	xchg   ebp,eax
  40d1e8:	jne    0x40d1a5
  40d1ea:	mov    DWORD PTR [ecx],0x46b4dbf
  40d1f0:	mov    esp,0x9225bf1d
  40d1f5:	call   0xffd00bb5
  40d1fa:	push   0x102fbe6b
  40d1ff:	push   es
  40d200:	add    ecx,DWORD PTR [edx+0x3b]
  40d203:	jmp    0x40d1e7
  40d205:	or     ecx,eax
  40d207:	pop    cx
  40d209:	pop    esi
  40d20a:	(bad)  
  40d20b:	scas   al,BYTE PTR es:[edi]
  40d20c:	aas    
  40d20d:	sub    esi,ecx
  40d20f:	inc    ecx
  40d210:	stos   BYTE PTR es:[edi],al
  40d211:	das    
  40d212:	inc    ecx
  40d213:	inc    esi
  40d214:	fidivr WORD PTR [ebp+0x68]
  40d217:	cmp    ch,BYTE PTR [ebp+0x6101733b]
  40d21d:	push   0x20d5897f
  40d222:	mov    bh,0xb6
  40d224:	inc    ecx
  40d225:	adc    al,0xfc
  40d227:	inc    edi
  40d228:	jg     0x40d238
  40d22a:	ds push cs
  40d22c:	fsub   QWORD PTR [esi+ebx*2-0x5e]
  40d230:	sti    
  40d231:	cmp    eax,0xf687832e
  40d236:	jbe    0x40d206
  40d238:	xchg   ebx,eax
  40d239:	inc    ebp
  40d23a:	push   es
  40d23b:	(bad)  
  40d23c:	bound  ebx,QWORD PTR [ebx-0x63]
  40d23f:	ins    DWORD PTR es:[edi],dx
  40d240:	and    ch,0x5e
  40d243:	mov    ah,0x1f
  40d245:	fsub   QWORD PTR [ecx+0x2a]
  40d248:	repz les edx,FWORD PTR [ebx]
  40d24b:	jnp    0x40d27d
  40d24d:	cdq    
  40d24e:	fiadd  DWORD PTR [ecx+0x74]
  40d251:	imul   edx,esp,0x507f9cfe
  40d257:	cwde   
  40d258:	out    0x41,al
  40d25a:	sbb    ebp,ebx
  40d25c:	fwait
  40d25d:	ins    DWORD PTR es:[edi],dx
  40d25e:	push   cs
  40d25f:	cmp    ah,BYTE PTR [ebx-0x35405e94]
  40d265:	adc    eax,0xa9c00a01
  40d26a:	xor    BYTE PTR [edi],ah
  40d26c:	xor    cl,dh
  40d26e:	mov    eax,ds:0xdd233c4d
  40d273:	mov    ebx,0xe4affa31
  40d278:	ffree  st(6)
  40d27a:	sbb    al,0xe3
  40d27c:	repz dec edx
  40d27e:	int3   
  40d27f:	push   edi
  40d280:	dec    ebx
  40d281:	xchg   ebx,eax
  40d282:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d283:	xchg   BYTE PTR [edi],al
  40d285:	dec    edi
  40d286:	dec    edi
  40d287:	rcr    BYTE PTR [edx-0xf],cl
  40d28a:	mov    ebx,gs
  40d28c:	xchg   edi,eax
  40d28d:	mov    ch,0x93
  40d28f:	sbb    esp,ecx
  40d291:	xchg   ebp,eax
  40d292:	clc    
  40d293:	cs pop es
  40d295:	pop    ebp
  40d296:	shl    dl,1
  40d298:	cmp    al,0xfc
  40d29a:	jp     0x40d2a0
  40d29c:	xor    ch,BYTE PTR [eax+eax*8-0x21]
  40d2a0:	inc    ebx
  40d2a1:	xchg   esp,eax
  40d2a2:	loope  0x40d27f
  40d2a4:	mov    cl,0xdd
  40d2a6:	push   ecx
  40d2a7:	mov    dl,0xab
  40d2a9:	daa    
  40d2aa:	jge    0x40d2b8
  40d2ac:	imul   esp,DWORD PTR [edx],0x5f15a2db
  40d2b2:	vprotd xmm6,xmm1,[esi-0x3a289009]
  40d2bb:	add    dl,ch
  40d2bd:	mov    bl,0xbe
  40d2bf:	mov    cl,0xcc
  40d2c1:	xor    al,0x1a
  40d2c3:	js     0x40d337
  40d2c5:	pop    ds
  40d2c6:	mov    BYTE PTR [ecx],bh
  40d2c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2c9:	pusha  
  40d2ca:	mul    BYTE PTR [ebp+0x4a]
  40d2cd:	in     eax,dx
  40d2ce:	jb     0x40d347
  40d2d0:	or     DWORD PTR ds:0x68a74878,ebx
  40d2d6:	jbe    0x40d321
  40d2d8:	jnp    0x40d30b
  40d2da:	hlt    
  40d2db:	fistp  WORD PTR [edx+0x6a]
  40d2de:	xchg   ecx,eax
  40d2df:	jmp    0x32af:0x4c46bdb4
  40d2e6:	inc    esi
  40d2e7:	pminub mm0,QWORD PTR [ecx-0x6ea8fa4b]
  40d2ee:	fdivr  QWORD PTR [edx]
  40d2f0:	xchg   esi,eax
  40d2f1:	ficom  WORD PTR [eax]
  40d2f3:	dec    di
  40d2f5:	dec    edi
  40d2f6:	push   es
  40d2f7:	sar    ebx,cl
  40d2f9:	cld    
  40d2fa:	arpl   sp,ax
  40d2fc:	popf   
  40d2fd:	ins    BYTE PTR es:[edi],dx
  40d2fe:	dec    esi
  40d2ff:	pop    ds
  40d300:	inc    esi
  40d301:	int    0xd7
  40d303:	jmp    0xfe18:0xa22d4ecc
  40d30a:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d30c:	xchg   esi,eax
  40d30d:	jmp    0xb0b:0x54f94c58
  40d314:	xor    al,0x51
  40d316:	jp     0x40d318
  40d318:	jmp    0xd9b2b693
  40d31d:	pop    ebx
  40d31e:	sub    al,0x75
  40d321:	jbe    0x40d2ff
  40d323:	das    
  40d324:	sub    esp,ebp
  40d326:	fidivr DWORD PTR [edx]
  40d328:	test   eax,0xdfda43e0
  40d32d:	ds mov edx,0x2f973b3f
  40d333:	in     al,dx
  40d334:	dec    edi
  40d335:	fcomp  DWORD PTR [edx]
  40d337:	mov    al,0xa8
  40d339:	push   0xd35b7388
  40d33e:	push   edx
  40d33f:	mov    BYTE PTR [edx-0x1a75e2aa],bh
  40d345:	fstp   DWORD PTR [esi+ecx*1-0x7c0b801]
  40d34c:	js     0x40d2f4
  40d34e:	cmp    DWORD PTR [esp+esi*2-0x40],ecx
  40d352:	and    edx,DWORD PTR [edx+0x54]
  40d355:	leave  
  40d356:	repnz dec ebx
  40d358:	jnp    0x40d2fd
  40d35a:	iret   
  40d35b:	imul   DWORD PTR [edi+0x39]
  40d35e:	add    eax,ecx
  40d360:	jo     0x40d3da
  40d362:	mov    ah,0x99
  40d364:	dec    esp
  40d365:	addr16 loop 0x40d30b
  40d368:	push   es
  40d369:	mov    bl,ah
  40d36b:	ret    
  40d36c:	stos   BYTE PTR es:[edi],al
  40d36d:	cmp    al,0xec
  40d36f:	into   
  40d370:	add    eax,0xb55a2388
  40d375:	jne    0x40d35e
  40d377:	sbb    al,0x6d
  40d379:	cli    
  40d37a:	shl    DWORD PTR [edx-0x6cf29d81],1
  40d380:	out    0x88,eax
  40d382:	int    0xea
  40d384:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d385:	dec    ebx
  40d386:	(bad)  
  40d387:	cmc    
  40d388:	mov    edi,0x6899f6b1
  40d38d:	outs   dx,BYTE PTR ds:[esi]
  40d38e:	mov    es,WORD PTR [ebx-0x2a]
  40d391:	std    
  40d392:	jp     0x40d378
  40d394:	mov    al,0x32
  40d396:	mov    dh,0x8
  40d398:	in     eax,dx
  40d399:	adc    cl,dl
  40d39b:	test   DWORD PTR [esi-0x18fcd451],ebx
  40d3a1:	push   es
  40d3a2:	xor    eax,0x2ee458a
  40d3a7:	xor    edx,ebp
  40d3a9:	aad    0x8
  40d3ab:	nop
  40d3ac:	sahf   
  40d3ad:	loope  0x40d418
  40d3af:	scas   al,BYTE PTR es:[edi]
  40d3b0:	jbe    0x40d427
  40d3b2:	cmp    al,0x73
  40d3b4:	mov    ds:0x27fc2c11,al
  40d3b9:	sahf   
  40d3ba:	hlt    
  40d3bb:	dec    esp
  40d3bc:	(bad)  
  40d3bd:	mov    al,ds:0x96ec525a
  40d3c2:	or     edi,DWORD PTR [ecx+0x9800bf4]
  40d3c8:	test   BYTE PTR [ebp+0x2d],dl
  40d3cb:	imul   eax,esp,0xd81948e1
  40d3d1:	call   0x975e9c2d
  40d3d6:	clc    
  40d3d7:	xor    bh,BYTE PTR [edi+edi*2+0x351caf3a]
  40d3de:	add    eax,0xff62b61a
  40d3e3:	lds    esp,FWORD PTR [bx+0x2541]
  40d3e8:	push   es
  40d3e9:	in     eax,dx
  40d3ea:	dec    esp
  40d3eb:	sub    al,0xfd
  40d3ed:	(bad)  
  40d3ee:	cmp    bl,BYTE PTR [ebp+eax*8+0x6cb7eec4]
  40d3f5:	mov    esp,0xe4c2d478
  40d3fa:	clc    
  40d3fb:	lock sbb DWORD PTR [ebp+0x57],ebp
  40d3ff:	and    DWORD PTR ds:0x39ea71a5,ecx
  40d405:	rcl    BYTE PTR [ebx],0xb6
  40d408:	shl    DWORD PTR [ecx-0x344ca64f],cl
  40d40e:	fdiv   QWORD PTR [ebx-0x7e]
  40d411:	(bad)  
  40d412:	mov    eax,0x5d024e35
  40d417:	pop    esp
  40d418:	(bad)  
  40d419:	mov    eax,0x1f708247
  40d41e:	mov    al,0x31
  40d420:	imul   ecx,DWORD PTR [esp+ebp*4+0x3b],0xacf6b270
  40d428:	pop    esp
  40d429:	jnp    0x40d46a
  40d42b:	popa   
  40d42c:	xchg   DWORD PTR [eax+0x6b90f0e6],esi
  40d432:	sbb    DWORD PTR ds:0x5e9f82a8,esi
  40d438:	jo     0x40d47b
  40d43a:	cdq    
  40d43b:	hlt    
  40d43c:	outs   dx,BYTE PTR ds:[esi]
  40d43d:	push   ebx
  40d43e:	jno    0x40d3ef
  40d440:	mov    edx,0x44ef0a68
  40d445:	stos   BYTE PTR es:[edi],al
  40d446:	inc    ebp
  40d447:	jl     0x40d449
  40d449:	inc    edx
  40d44a:	xor    esi,esi
  40d44c:	push   ds
  40d44d:	cdq    
  40d44e:	loop   0x40d4bf
  40d450:	mov    bh,0xda
  40d452:	pusha  
  40d453:	dec    edx
  40d454:	pop    esp
  40d455:	xchg   bh,dl
  40d457:	mov    ah,0x4
  40d459:	pop    ebp
  40d45a:	add    DWORD PTR ds:0xc4376618,edi
  40d460:	push   ss
  40d461:	mov    bh,0x1e
  40d463:	stos   BYTE PTR es:[edi],al
  40d464:	and    esp,DWORD PTR [edi-0x3b]
  40d467:	pop    edi
  40d468:	mov    dl,0xe6
  40d46a:	mov    ds:0x5a05e26,eax
  40d46f:	lods   al,BYTE PTR ds:[esi]
  40d470:	xor    bh,BYTE PTR [eax+esi*8+0x63]
  40d474:	mov    al,ds:0x6df47ffb
  40d479:	arpl   WORD PTR [eax],cx
  40d47b:	sbb    BYTE PTR ds:0x401ac78d,0xcb
  40d482:	or     eax,0xd0cd2191
  40d487:	cdq    
  40d488:	xchg   esi,eax
  40d489:	pmaddwd mm7,QWORD PTR [eax+edx*4]
  40d48d:	retf   0x286c
  40d490:	add    bl,al
  40d492:	ss loope 0x40d418
  40d495:	daa    
  40d496:	add    al,0x4f
  40d498:	mov    esi,0xa291af35
  40d49d:	aaa    
  40d49e:	iret   
  40d49f:	das    
  40d4a0:	aas    
  40d4a1:	out    0x1f,eax
  40d4a3:	aam    0x96
  40d4a5:	outs   dx,BYTE PTR ds:[esi]
  40d4a6:	cli    
  40d4a7:	shr    dl,1
  40d4a9:	pop    es
  40d4aa:	cwde   
  40d4ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4ac:	stc    
  40d4ad:	dec    esi
  40d4ae:	pop    edx
  40d4af:	jnp    0x40d496
  40d4b1:	xor    ch,ch
  40d4b3:	push   esi
  40d4b4:	inc    esi
  40d4b5:	cs inc edi
  40d4b7:	xor    al,0x4b
  40d4b9:	push   ebp
  40d4ba:	xchg   ebx,eax
  40d4bb:	fcom   DWORD PTR [esi]
  40d4bd:	push   esp
  40d4be:	leave  
  40d4bf:	repnz rol ah,0xd1
  40d4c3:	ja     0x40d449
  40d4c5:	xor    ebp,eax
  40d4c7:	int    0xb1
  40d4c9:	call   0x7cb8:0xd282bf7f
  40d4d0:	in     al,0xc6
  40d4d2:	pop    edx
  40d4d3:	xchg   ecx,eax
  40d4d4:	and    BYTE PTR [ecx-0x229224b8],cl
  40d4da:	cmp    edx,DWORD PTR [edi-0x757bd6ff]
  40d4e0:	dec    ebx
  40d4e1:	ret    0xe8e
  40d4e4:	lahf   
  40d4e5:	inc    ecx
  40d4e6:	and    al,0xa5
  40d4e8:	stos   DWORD PTR es:[edi],eax
  40d4e9:	fmul   QWORD PTR [esi]
  40d4eb:	fcomp  DWORD PTR [eax-0x21]
  40d4ee:	les    ebp,FWORD PTR [ecx+0x5f]
  40d4f1:	ja     0x40d4d0
  40d4f3:	jne    0x40d4eb
  40d4f5:	sub    cl,BYTE PTR [edi+0x347a4740]
  40d4fb:	pop    ebp
  40d4fc:	outs   dx,BYTE PTR ds:[esi]
  40d4fd:	loopne 0x40d547
  40d4ff:	aas    
  40d500:	cmp    eax,0x3fb3fa93
  40d505:	in     eax,0x80
  40d507:	xor    eax,0xb4749123
  40d50c:	shl    BYTE PTR [ebp+0x1daeff6e],1
  40d512:	mov    al,0x25
  40d514:	stos   DWORD PTR es:[edi],eax
  40d515:	jne    0x40d56e
  40d517:	sub    bh,BYTE PTR [edx+0x64]
  40d51a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d51b:	cmp    bl,dl
  40d51d:	jmp    0x40d549
  40d51f:	cmc    
  40d520:	stos   BYTE PTR es:[edi],al
  40d521:	pop    es
  40d522:	mov    cl,BYTE PTR [eax+0x5b71d4ae]
  40d528:	addr16 std 
  40d52a:	xor    ch,BYTE PTR [edi+0xd5ff7d3]
  40d530:	mov    ds:0x762fad42,al
  40d535:	add    DWORD PTR [eax-0x44798832],esi
  40d53b:	mov    bh,0xb5
  40d53d:	sbb    ebp,ebx
  40d53f:	inc    ebp
  40d540:	adc    eax,0xe25fc177
  40d545:	leave  
  40d546:	out    dx,eax
  40d547:	cwde   
  40d548:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d549:	push   eax
  40d54a:	out    dx,eax
  40d54b:	and    BYTE PTR [ebx-0x54],bl
  40d54e:	mov    ch,0x4e
  40d550:	outs   dx,BYTE PTR ds:[esi]
  40d551:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d552:	daa    
  40d553:	test   al,0xba
  40d555:	popa   
  40d556:	test   DWORD PTR [ebp+0x5c],esp
  40d559:	data16 or al,BYTE PTR [edx-0x3f]
  40d55d:	call   0xe85a:0x3a4b8c87
  40d564:	call   0x737:0x59aa3330
  40d56b:	sbb    BYTE PTR [ecx-0x647dac1e],0x86
  40d572:	fs data16 fsub st,st(7)
  40d576:	pusha  
  40d577:	xchg   edi,eax
  40d578:	jb     0x40d576
  40d57a:	shl    BYTE PTR ds:0x1c780001,1
  40d580:	xchg   edx,eax
  40d581:	jecxz  0x40d601
  40d583:	fidivr WORD PTR [ecx-0x3f]
  40d586:	xchg   dx,ax
  40d588:	pop    ds
  40d589:	and    ebx,DWORD PTR [ebx+0x3145b7f6]
  40d58f:	dec    ebp
  40d590:	dec    eax
  40d591:	inc    ecx
  40d592:	test   DWORD PTR [esp+edi*2+0x408566e4],esi
  40d599:	js     0x40d5ad
  40d59b:	jecxz  0x40d609
  40d59d:	mov    DWORD PTR [edx+0x31],esi
  40d5a0:	xor    BYTE PTR [eax],cl
  40d5a2:	ins    DWORD PTR es:[edi],dx
  40d5a3:	jne    0x40d590
  40d5a5:	cmp    DWORD PTR [eax-0x3],esp
  40d5a8:	out    0x7a,eax
  40d5aa:	mov    edx,0x7c91ef0f
  40d5af:	push   esi
  40d5b0:	fwait
  40d5b1:	cmp    DWORD PTR [edx+0x63],0x382298a5
  40d5b8:	lods   eax,DWORD PTR ds:[esi]
  40d5b9:	mov    cl,0xae
  40d5bb:	pop    edi
  40d5bc:	nop
  40d5bd:	mov    eax,0x404046e4
  40d5c2:	stc    
  40d5c3:	adc    ah,BYTE PTR [eax+0x33]
  40d5c6:	jp     0x40d5ed
  40d5c8:	out    0xa4,eax
  40d5ca:	cmc    
  40d5cb:	mov    dh,0x57
  40d5cd:	scas   al,BYTE PTR es:[edi]
  40d5ce:	scas   eax,DWORD PTR es:[edi]
  40d5cf:	sub    BYTE PTR [edi],0x20
  40d5d2:	std    
  40d5d3:	mov    ebp,0x562bfe70
  40d5d8:	test   BYTE PTR [ecx-0x65],0xef
  40d5dc:	inc    BYTE PTR [ecx]
  40d5de:	pop    ss
  40d5df:	clc    
  40d5e0:	(bad)  
  40d5e1:	or     al,BYTE PTR [esi-0x4d]
  40d5e4:	jecxz  0x40d638
  40d5e6:	sbb    edx,DWORD PTR [ebx+esi*4-0xb0fcf0a]
  40d5ed:	mov    edi,DWORD PTR [eax+0x5a]
  40d5f0:	retf   0x2ab7
  40d5f3:	or     ecx,esp
  40d5f5:	jbe    0x40d5a5
  40d5f7:	jmp    0x40d5f6
  40d5f9:	add    al,0xd5
  40d5fb:	cs repz xchg ebp,eax
  40d5fe:	dec    eax
  40d5ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d600:	add    BYTE PTR [edi-0x69],dl
  40d603:	jmp    0x5d5a205d
  40d608:	ins    DWORD PTR es:[edi],dx
  40d609:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d60a:	jl     0x40d649
  40d60c:	in     al,dx
  40d60d:	sar    BYTE PTR [esi+0x3e6977c7],0x18
  40d614:	repnz sar eax,cl
  40d617:	ror    DWORD PTR [ebx-0x37],0x6d
  40d61b:	lods   al,BYTE PTR ds:[esi]
  40d61c:	pop    esi
  40d61d:	ret    0x4a2d
  40d620:	push   edx
  40d621:	das    
  40d622:	xor    DWORD PTR [eax-0x1d],0x50
  40d626:	adc    eax,0x4cfe7081
  40d62b:	in     al,dx
  40d62c:	(bad)
  40d62f:	mov    DWORD PTR [edx],esi
  40d631:	sub    eax,0xd0aeaf68
  40d636:	fld    DWORD PTR [edx-0x60034d2b]
  40d63c:	and    BYTE PTR [esi+ebp*8],0x5a
  40d640:	pop    ebx
  40d641:	test   al,0x66
  40d643:	pop    ss
  40d644:	sub    eax,0xe866c86c
  40d649:	pop    ds
  40d64a:	and    BYTE PTR ss:[ebx+eax*8-0x2a7ca498],dh
  40d652:	int3   
  40d653:	(bad)
  40d657:	pop    ebx
  40d658:	cmp    BYTE PTR [edi+0x57],0x82
  40d65c:	gs mov dl,0x18
  40d65f:	inc    esi
  40d660:	(bad)  
  40d661:	cmc    
  40d662:	aad    0xce
  40d664:	mov    al,0x84
  40d666:	setns  cl
  40d669:	cld    
  40d66a:	sub    al,0xd6
  40d66c:	clc    
  40d66d:	aaa    
  40d66e:	dec    esp
  40d66f:	inc    eax
  40d670:	pop    ebp
  40d671:	call   0x13f11f95
  40d676:	retf   0x1038
  40d679:	ja     0x40d64a
  40d67b:	cs out dx,al
  40d67d:	cld    
  40d67e:	inc    esp
  40d67f:	or     al,0xb7
  40d681:	fiadd  DWORD PTR [ecx]
  40d683:	sbb    DWORD PTR [ebx],ebx
  40d685:	je     0x40d68b
  40d687:	stos   DWORD PTR es:[edi],eax
  40d688:	ins    BYTE PTR es:[edi],dx
  40d689:	mov    DWORD PTR [ebx-0x55],edx
  40d68c:	std    
  40d68d:	jno    0x40d6be
  40d68f:	sbb    ebp,edi
  40d691:	in     eax,dx
  40d692:	inc    ebx
  40d693:	retf   0x8e5c
  40d696:	push   ebx
  40d697:	fimul  WORD PTR [edx+ecx*1]
  40d69a:	mov    ecx,DWORD PTR [edi]
  40d69c:	test   ebp,esp
  40d69e:	inc    DWORD PTR [ecx+0x4b]
  40d6a1:	gs inc ebx
  40d6a3:	sbb    cl,BYTE PTR [esi-0x54527a97]
  40d6a9:	(bad)  
  40d6aa:	mov    WORD PTR [edx-0x3cfc273f],?
  40d6b0:	mov    ah,0x53
  40d6b2:	outs   dx,BYTE PTR ds:[esi]
  40d6b3:	mov    ecx,0x3d2b29c0
  40d6b8:	ins    BYTE PTR es:[edi],dx
  40d6b9:	ss repz jecxz 0x40d673
  40d6bd:	jne    0x40d65b
  40d6bf:	test   BYTE PTR [esi],cl
  40d6c1:	adc    eax,0xb84bccdb
  40d6c6:	ds popf 
  40d6c8:	cmp    esi,ebp
  40d6ca:	cmp    ebp,DWORD PTR [ebx-0x1f3fd5bd]
  40d6d0:	lock scas eax,DWORD PTR es:[edi]
  40d6d2:	xchg   DWORD PTR [edx-0x2a],esp
  40d6d5:	call   0xbe0b73db
  40d6da:	add    DWORD PTR [edi],0xffffffef
  40d6dd:	push   edx
  40d6de:	mov    ds:0xac5bdead,al
  40d6e3:	pop    ebx
  40d6e4:	mov    eax,0x8895f37b
  40d6e9:	mov    DWORD PTR [ebx+0x51487621],edi
  40d6ef:	mov    bh,0xbc
  40d6f1:	sub    cl,bh
  40d6f3:	addr16 pusha 
  40d6f5:	lds    ebp,FWORD PTR [eax+ebp*2]
  40d6f8:	pop    ecx
  40d6f9:	out    0x52,eax
  40d6fb:	and    DWORD PTR [ecx-0x31],0x4c
  40d6ff:	int    0x5a
  40d701:	push   esi
  40d702:	bound  esi,QWORD PTR [ecx+ecx*2]
  40d705:	lods   eax,DWORD PTR ds:[esi]
  40d706:	test   BYTE PTR [ebp+ebp*2-0x75ca3da6],cl
  40d70d:	ret    
  40d70e:	inc    edi
  40d70f:	xchg   edx,eax
  40d710:	jle    0x40d6b5
  40d712:	fsub   QWORD PTR [edi]
  40d714:	lods   al,BYTE PTR ds:[esi]
  40d715:	sub    DWORD PTR [ebp+0x6a4c2e25],edx
  40d71b:	mov    dh,0xd0
  40d71d:	in     al,0xfe
  40d71f:	jno    0x40d784
  40d721:	je     0x40d761
  40d723:	or     BYTE PTR [edi+edx*8+0x7cb12bf3],ch
  40d72a:	push   esi
  40d72b:	or     ebx,eax
  40d72d:	popf   
  40d72e:	lahf   
  40d72f:	pop    es
  40d730:	pop    ebp
  40d731:	dec    ebp
  40d732:	lds    ebx,FWORD PTR [ebx]
  40d734:	test   edi,0xfc3646f3
  40d73a:	mov    WORD PTR [edi+0x32c9ec26],es
  40d740:	push   cs
  40d741:	dec    esp
  40d742:	cwde   
  40d743:	stos   DWORD PTR es:[edi],eax
  40d744:	adc    BYTE PTR [edi+0x3e30908],cl
  40d74a:	nop
  40d74b:	aam    0x6b
  40d74d:	ja     0x40d767
  40d74f:	push   0x5c9f3ede
  40d754:	lds    edi,FWORD PTR [ebp+0x4e072c1c]
  40d75a:	adc    DWORD PTR [edi-0x238b48e4],edi
  40d760:	inc    ebp
  40d761:	aas    
  40d762:	mov    edx,0x322d332d
  40d767:	jmp    0x40d712
  40d769:	push   ebx
  40d76a:	add    eax,0xf115a50
  40d76f:	(bad)  
  40d770:	sub    al,0x81
  40d772:	mov    cl,0xef
  40d774:	sbb    al,BYTE PTR [ecx+0x5d748e73]
  40d77a:	pop    edi
  40d77b:	and    al,0x42
  40d77d:	aam    0x3a
  40d77f:	in     al,dx
  40d780:	xchg   ecx,eax
  40d781:	lahf   
  40d782:	xor    ebx,DWORD PTR [esi]
  40d784:	adc    BYTE PTR [esp+edi*4],0xe
  40d788:	add    eax,0x139abb80
  40d78d:	sbb    ah,ch
  40d78f:	(bad)  
  40d790:	adc    al,0x4a
  40d792:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d793:	mov    ch,0x67
  40d795:	or     BYTE PTR [ecx-0x48580de1],ah
  40d79b:	pop    eax
  40d79c:	jno    0x40d7e8
  40d79e:	mov    ch,0xa1
  40d7a0:	inc    edi
  40d7a1:	mov    bl,0xad
  40d7a3:	xor    bh,BYTE PTR [ebx+0x52c9aeca]
  40d7a9:	repz xchg esp,eax
  40d7ab:	orps   xmm0,XMMWORD PTR [ecx-0x3cfc844]
  40d7b2:	sub    ebx,DWORD PTR [edi]
  40d7b4:	sbb    eax,0xbe38a09b
  40d7b9:	cmp    BYTE PTR [edi],bl
  40d7bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7bc:	xchg   ebp,eax
  40d7bd:	aam    0x30
  40d7bf:	xchg   ebp,eax
  40d7c0:	mov    al,ds:0xbfec6698
  40d7c5:	outs   dx,DWORD PTR ds:[esi]
  40d7c6:	pop    eax
  40d7c7:	imul   ecx,DWORD PTR [ebp+0x72d9e0b3],0xe
  40d7ce:	dec    esi
  40d7cf:	leave  
  40d7d0:	mov    cs,ebp
  40d7d2:	cs not ecx
  40d7d5:	int3   
  40d7d6:	mov    ebp,ecx
  40d7d8:	xor    al,0x27
  40d7da:	and    eax,0x57a1de04
  40d7df:	and    ebp,edx
  40d7e1:	jl     0x40d7a8
  40d7e3:	daa    
  40d7e4:	pop    es
  40d7e5:	pop    eax
  40d7e6:	popa   
  40d7e7:	mov    dh,0xf5
  40d7e9:	out    dx,al
  40d7ea:	mov    edi,0xbcc31618
  40d7ef:	outs   dx,BYTE PTR ds:[esi]
  40d7f0:	mov    ds:0xa4023ced,al
  40d7f5:	adc    edx,DWORD PTR [ebx-0xa9eb473]
  40d7fb:	cwde   
  40d7fc:	pop    esi
  40d7fd:	jns    0x40d7a9
  40d7ff:	cmp    DWORD PTR [ecx],eax
  40d801:	leave  
  40d802:	arpl   WORD PTR [esi+eax*4-0x25],bx
  40d806:	iret   
  40d807:	test   eax,0xa585ffa6
  40d80c:	test   al,0x74
  40d80e:	in     al,0x4d
  40d810:	pop    eax
  40d811:	mov    BYTE PTR ds:0x5a319ecd,ah
  40d817:	inc    edx
  40d818:	lds    ebx,FWORD PTR ds:0x62ccc936
  40d81e:	push   ecx
  40d81f:	repz cmp eax,0xe63a2c87
  40d825:	jbe    0x40d80f
  40d827:	sub    al,0x29
  40d829:	ds mov ah,0x6d
  40d82c:	inc    ebp
  40d82d:	lea    ecx,[edx]
  40d82f:	clc    
  40d830:	pop    ds
  40d831:	mov    ebx,0xf6934e6b
  40d836:	inc    esp
  40d837:	repz jmp 0x53326980
  40d83d:	outs   dx,DWORD PTR ds:[esi]
  40d83e:	pop    edx
  40d83f:	shr    BYTE PTR [esp+ebx*1-0x21da9ec4],cl
  40d846:	or     eax,0x1b5aefac
  40d84b:	or     eax,0x29ed65f
  40d850:	jmp    0x40d7e2
  40d852:	sub    esi,DWORD PTR [ecx]
  40d854:	xchg   ebp,eax
  40d855:	clc    
  40d856:	das    
  40d857:	mov    ebp,0x7410c2e9
  40d85c:	sti    
  40d85d:	push   ebx
  40d85e:	pop    es
  40d85f:	ins    DWORD PTR es:[edi],dx
  40d860:	imul   edx,esi,0x3bf523e2
  40d866:	idiv   BYTE PTR [edx+ecx*2]
  40d869:	rol    DWORD PTR [eax],1
  40d86b:	inc    ebx
  40d86c:	cmp    BYTE PTR [esi+0x6],0x1
  40d870:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d871:	cmp    bl,ah
  40d873:	xlat   BYTE PTR ds:[ebx]
  40d874:	push   ebp
  40d875:	nop
  40d876:	and    ah,BYTE PTR [edi-0x37078c0]
  40d87c:	dec    ecx
  40d87d:	jnp    0x40d8e9
  40d87f:	push   edi
  40d880:	sbb    eax,0xcd5d629a
  40d885:	rol    DWORD PTR fs:[edx+eax*2-0x38],1
  40d88a:	popf   
  40d88b:	add    BYTE PTR [edx],cl
  40d88d:	in     eax,dx
  40d88e:	pop    es
  40d88f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d890:	or     al,0x85
  40d892:	loop   0x40d829
  40d894:	dec    ebx
  40d895:	sub    esp,0xffffffea
  40d898:	xchg   edx,eax
  40d899:	je     0x40d88a
  40d89b:	pop    ss
  40d89c:	dec    esp
  40d89d:	push   ebp
  40d89e:	in     al,dx
  40d89f:	test   eax,0xaf5d815f
  40d8a4:	je     0x40d912
  40d8a6:	fild   DWORD PTR [eax+0x7e]
  40d8a9:	out    dx,al
  40d8aa:	or     esp,ebp
  40d8ac:	cmc    
  40d8ad:	xor    eax,0x4ad1804
  40d8b2:	outs   dx,DWORD PTR ds:[esi]
  40d8b3:	je     0x40d8e5
  40d8b5:	fs cli 
  40d8b7:	add    BYTE PTR [ecx-0x6d],ch
  40d8ba:	test   eax,0x9fc2552a
  40d8bf:	cmp    DWORD PTR [esi+0x473a18f7],edx
  40d8c5:	jne    0x40d8f9
  40d8c7:	mov    bl,0x5a
  40d8c9:	(bad)  
  40d8ca:	mov    DWORD PTR [ebx-0x57],esi
  40d8cd:	ins    DWORD PTR es:[edi],dx
  40d8ce:	xchg   DWORD PTR [ebx+0x59e2305d],eax
  40d8d4:	inc    edx
  40d8d5:	mov    bh,0x4f
  40d8d7:	jmp    DWORD PTR [eax]
  40d8d9:	mov    bl,0xc1
  40d8db:	fs test al,0x8c
  40d8de:	in     al,dx
  40d8df:	arpl   WORD PTR [esi],sp
  40d8e1:	lods   eax,DWORD PTR ss:[esi]
  40d8e3:	mov    ch,0xa3
  40d8e5:	jae    0x40d869
  40d8e7:	adc    eax,0x88caec4c
  40d8ec:	fs jp  0x40d946
  40d8ef:	push   ecx
  40d8f0:	test   al,0x6b
  40d8f2:	mov    ah,0xa4
  40d8f4:	je     0x40d96c
  40d8f6:	daa    
  40d8f7:	ret    
  40d8f8:	sub    cl,BYTE PTR [edi]
  40d8fa:	mov    dl,0x91
  40d8fc:	pop    esi
  40d8fd:	jnp    0x40d8c0
  40d8ff:	add    BYTE PTR [esi-0x3a],al
  40d902:	inc    edi
  40d903:	lock xchg ebx,eax
  40d905:	pop    es
  40d906:	cmp    eax,0x3227cb6b
  40d90b:	in     eax,dx
  40d90c:	xor    BYTE PTR ds:0x65594a37,ah
  40d912:	and    eax,0x53cea72
  40d917:	ror    DWORD PTR [esi],cl
  40d919:	(bad)  
  40d91b:	fwait
  40d91c:	dec    esp
  40d91d:	fcmovnu st,st(3)
  40d91f:	rep outs dx,BYTE PTR ds:[esi]
  40d921:	jo     0x40d986
  40d923:	sub    ebx,DWORD PTR [ecx+0x3b]
  40d926:	adc    BYTE PTR [eax-0x2f79eb53],0xff
  40d92d:	xchg   ecx,eax
  40d92e:	inc    eax
  40d92f:	lea    di,[edx+0xd]
  40d933:	psubd  mm6,QWORD PTR [esi-0x34cfd559]
  40d93a:	stos   DWORD PTR es:[edi],eax
  40d93b:	inc    eax
  40d93c:	jp     0x40d8d9
  40d93e:	add    edi,ebp
  40d940:	pop    ebp
  40d941:	xor    al,0x2a
  40d943:	inc    edi
  40d944:	fs mov al,0x9c
  40d947:	sbb    al,0x29
  40d949:	mov    esi,0x3dfad2c3
  40d94e:	jle    0x40d921
  40d950:	outs   dx,BYTE PTR ds:[esi]
  40d951:	push   ecx
  40d952:	out    0x91,eax
  40d954:	fbstp  TBYTE PTR [ebx+0x782eb009]
  40d95a:	cdq    
  40d95b:	nop
  40d95c:	dec    esi
  40d95d:	xlat   BYTE PTR ds:[ebx]
  40d95e:	xor    cl,0x3a
  40d961:	data16 stc 
  40d963:	inc    ecx
  40d964:	adc    al,0x30
  40d966:	cmp    al,0xef
  40d968:	sbb    cl,dl
  40d96a:	and    bl,bl
  40d96c:	in     eax,dx
  40d96d:	dec    eax
  40d96e:	adc    al,0x79
  40d970:	inc    esp
  40d971:	sbb    BYTE PTR [ebp+0x7e],bl
  40d974:	repnz repnz adc al,0xfe
  40d978:	(bad)  
  40d979:	dec    ecx
  40d97a:	pop    es
  40d97b:	loop   0x40d915
  40d97d:	xchg   ebx,eax
  40d97e:	aas    
  40d97f:	sbb    ah,dl
  40d981:	mov    ch,al
  40d983:	lods   eax,DWORD PTR ds:[esi]
  40d984:	push   0xa424609
  40d989:	pop    esp
  40d98a:	ds pushf 
  40d98c:	call   0xde17ec48
  40d991:	sbb    BYTE PTR [ebx+0x427d8f35],bh
  40d997:	into   
  40d998:	jo     0x40d968
  40d99a:	push   edi
  40d99b:	sub    al,0x67
  40d99d:	mov    ds:0x7e214350,al
  40d9a2:	xchg   ebp,eax
  40d9a3:	stos   BYTE PTR es:[edi],al
  40d9a4:	or     esp,edx
  40d9a6:	rol    DWORD PTR [esp+edx*4-0x6a],0x33
  40d9ab:	jecxz  0x40d961
  40d9ad:	enter  0xe537,0x1c
  40d9b1:	ins    BYTE PTR es:[edi],dx
  40d9b2:	pop    ebx
  40d9b3:	mov    ds:0x69caddaf,al
  40d9b8:	dec    ax
  40d9ba:	stos   DWORD PTR es:[edi],eax
  40d9bb:	bound  esp,QWORD PTR [ebx+0x4b]
  40d9be:	outs   dx,DWORD PTR ds:[esi]
  40d9bf:	mov    ch,0xa4
  40d9c1:	sbb    al,0x8d
  40d9c3:	or     bh,BYTE PTR [eax-0x4d]
  40d9c6:	sbb    al,0x52
  40d9c8:	je     0x40d968
  40d9ca:	leave  
  40d9cb:	fild   DWORD PTR [ecx]
  40d9cd:	mov    ds:0x5c8c62a9,eax
  40d9d2:	pop    ss
  40d9d3:	mov    eax,ebx
  40d9d5:	shl    BYTE PTR [esi+edi*4-0x6325cc9a],0x83
  40d9dd:	xor    esp,DWORD PTR [edi+0x6c]
  40d9e0:	ja     0x40da3e
  40d9e2:	dec    edx
  40d9e3:	jae    0x40d9d6
  40d9e5:	or     al,0x56
  40d9e7:	pusha  
  40d9e8:	inc    ecx
  40d9e9:	ror    DWORD PTR [eax],1
  40d9eb:	clc    
  40d9ec:	icebp  
  40d9ed:	or     DWORD PTR [esi],ecx
  40d9ef:	hlt    
  40d9f0:	or     cl,dl
  40d9f2:	je     0x40d976
  40d9f4:	fnstsw WORD PTR [eax-0x1c]
  40d9f7:	sti    
  40d9f8:	out    0x82,al
  40d9fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9fc:	loop   0x40d9a0
  40d9fe:	daa    
  40d9ff:	ret    
  40da00:	call   0xb30bca73
  40da05:	aaa    
  40da06:	addr16 stc 
  40da08:	or     edi,edi
  40da0a:	nop
  40da0b:	idiv   DWORD PTR [esi-0x5298c789]
  40da11:	(bad)  
  40da12:	mov    edi,0xc1968ddf
  40da17:	repz mov esi,ds
  40da1a:	inc    ebx
  40da1b:	pop    ds
  40da1c:	sbb    BYTE PTR [edx+0x4409a923],al
  40da22:	jle    0x40da39
  40da24:	(bad)  
  40da26:	xchg   esp,eax
  40da27:	dec    ecx
  40da28:	jg     0x40d9fe
  40da2a:	scas   al,BYTE PTR es:[edi]
  40da2b:	ins    BYTE PTR es:[edi],dx
  40da2c:	sub    eax,0x6eae9a92
  40da31:	inc    ecx
  40da32:	fbstp  TBYTE PTR [ebx-0x7d0b45a8]
  40da38:	dec    esi
  40da39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da3a:	and    al,0x41
  40da3c:	mov    edi,0xd4b01fbe
  40da41:	(bad)  
  40da43:	mov    ds:0xb06a85b,eax
  40da48:	and    al,BYTE PTR [ebx-0x2c]
  40da4b:	fild   WORD PTR [ebp+0x24]
  40da4e:	fdiv   QWORD PTR [edx+0x10]
  40da51:	shl    DWORD PTR [eax],cl
  40da53:	or     ebp,DWORD PTR [eax]
  40da55:	mov    dh,0xa6
  40da57:	in     al,dx
  40da58:	popa   
  40da59:	test   BYTE PTR [esi+0x2fa4cd0c],dl
  40da5f:	cli    
  40da60:	ror    DWORD PTR [edi-0x24dbed33],1
  40da66:	pop    ds
  40da67:	stos   DWORD PTR es:[edi],eax
  40da68:	(bad)  
  40da69:	adc    BYTE PTR [esi],dh
  40da6b:	iret   
  40da6c:	rcl    DWORD PTR [esi-0x10],cl
  40da6f:	iret   
  40da70:	hlt    
  40da71:	push   ebp
  40da72:	scas   eax,DWORD PTR es:[edi]
  40da73:	aas    
  40da74:	imul   ecx,DWORD PTR [ebx],0xffffffc8
  40da77:	ja     0x40da46
  40da79:	mov    ebx,0x76cc3956
  40da7e:	pop    edx
  40da7f:	gs adc esi,ebp
  40da82:	cdq    
  40da83:	inc    esi
  40da84:	lds    esi,FWORD PTR [ecx+0x144c6cc7]
  40da8a:	sbb    esi,DWORD PTR [ebp+ecx*8+0x516a4819]
  40da91:	imul   edx,DWORD PTR [edx+ecx*4+0x60],0x61
  40da96:	stos   BYTE PTR es:[edi],al
  40da97:	test   eax,0x4c095937
  40da9c:	(bad)  
  40da9d:	out    dx,al
  40da9e:	mov    esi,DWORD PTR [esi+0xf]
  40daa1:	add    eax,0xd28719a1
  40daa6:	sub    edx,DWORD PTR [edx+0x24bdeab6]
  40daac:	push   ds
  40daad:	scas   al,BYTE PTR es:[edi]
  40daae:	cli    
  40daaf:	jp     0x40dad8
  40dab1:	mov    es,WORD PTR [edi+0x3]
  40dab4:	add    ah,BYTE PTR [edi+0x2203f7b2]
  40daba:	stos   DWORD PTR es:[edi],eax
  40dabb:	push   0xbe13cffe
  40dac0:	jno    0x40dad2
  40dac2:	sub    al,0x4a
  40dac4:	std    
  40dac5:	stc    
  40dac6:	and    DWORD PTR [edi+0x5e],eax
  40dac9:	inc    edi
  40daca:	out    0xb2,eax
  40dacc:	adc    edi,DWORD PTR [esi-0x4c]
  40dacf:	push   esp
  40dad0:	sub    DWORD PTR [ecx-0x1471355f],eax
  40dad6:	fcmovbe st,st(0)
  40dad8:	mov    al,ds:0x9ffd1480
  40dadd:	xchg   esi,eax
  40dade:	ins    DWORD PTR es:[edi],dx
  40dadf:	xor    cl,al
  40dae1:	cdq    
  40dae2:	xchg   esi,eax
  40dae3:	xlat   BYTE PTR ds:[ebx]
  40dae4:	addr16 jno 0x40db48
  40dae7:	clc    
  40dae8:	loop   0x40db17
  40daea:	xchg   ecx,eax
  40daeb:	sti    
  40daec:	inc    esp
  40daed:	das    
  40daee:	mov    edx,0x5be4000e
  40daf3:	outs   dx,BYTE PTR ds:[esi]
  40daf4:	push   ebx
  40daf5:	pop    ebp
  40daf6:	mov    eax,0xa12f0dfa
  40dafb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dafc:	and    eax,edx
  40dafe:	mov    al,0xbc
  40db00:	sub    BYTE PTR [ecx],dh
  40db02:	sub    al,0xc
  40db04:	pmaddwd mm3,QWORD PTR [eax]
  40db07:	jmp    0xe30f:0x517aa1a3
  40db0e:	xor    BYTE PTR [edi],dl
  40db10:	adc    BYTE PTR [ebx+0x3d63b280],cl
  40db16:	shl    DWORD PTR [edx],0x2
  40db19:	data16 mov bl,al
  40db1c:	and    DWORD PTR [edx-0x1d],0x186a15b6
  40db23:	sub    eax,0x846c4f86
  40db28:	retf   
  40db29:	(bad)  
  40db2b:	sahf   
  40db2c:	js     0x40dac4
  40db2e:	cs fs aam 0x74
  40db32:	xchg   ebp,eax
  40db33:	arpl   WORD PTR [ebx-0x4e],bp
  40db36:	cmp    ebx,DWORD PTR [ebx-0x79]
  40db39:	jle    0x40db49
  40db3b:	pop    esp
  40db3c:	mov    al,0xd3
  40db3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db3f:	pushf  
  40db40:	icebp  
  40db41:	xlat   BYTE PTR ds:[ebx]
  40db42:	fs and al,0xf2
  40db45:	push   edx
  40db46:	ret    
  40db47:	add    edi,DWORD PTR [edi+0x1e56bb9a]
  40db4d:	addr16 mov ch,0x98
  40db50:	mov    eax,0x8c36fbb5
  40db55:	inc    ebp
  40db56:	add    bh,BYTE PTR [esi-0x48]
  40db59:	stos   BYTE PTR es:[edi],al
  40db5a:	inc    esi
  40db5b:	(bad)  
  40db5c:	dec    ebx
  40db5d:	popa   
  40db5e:	fld    TBYTE PTR [edi+0x6e]
  40db61:	clc    
  40db62:	int3   
  40db63:	xlat   BYTE PTR ds:[ebx]
  40db64:	in     al,dx
  40db65:	jns    0x40daef
  40db67:	pop    esp
  40db68:	imul   edi,esi,0x52
  40db6b:	pop    edx
  40db6c:	mov    ds:0x7b3cbb6a,eax
  40db71:	push   eax
  40db72:	fcomp  DWORD PTR [esi]
  40db74:	lds    ebp,FWORD PTR [eax-0x31b1df5a]
  40db7a:	outs   dx,BYTE PTR ds:[esi]
  40db7b:	dec    eax
  40db7c:	or     ebp,DWORD PTR [ecx-0x7bdad73b]
  40db82:	sbb    al,0xe9
  40db84:	gs cmp esp,DWORD PTR gs:[ecx-0x73c51a54]
  40db8c:	dec    esp
  40db8d:	cmp    bh,BYTE PTR [ebp+esi*4+0x3fe608ea]
  40db94:	dec    ebx
  40db95:	aad    0x69
  40db97:	icebp  
  40db98:	dec    edi
  40db99:	loop   0x40db29
  40db9b:	xchg   DWORD PTR [ebp+0x1879f1ff],ebx
  40dba1:	push   eax
  40dba2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dba3:	aad    0xe9
  40dba5:	mov    ebx,0x5c65bd87
  40dbaa:	pop    eax
  40dbab:	fidiv  DWORD PTR [edi]
  40dbad:	add    DWORD PTR [edx+edi*8],esi
  40dbb0:	mov    ebx,esp
  40dbb2:	jbe    0x40dc23
  40dbb4:	pop    ss
  40dbb5:	mov    ebx,0xcedd6161
  40dbba:	pop    esp
  40dbbb:	or     DWORD PTR [ecx],ebx
  40dbbd:	icebp  
  40dbbe:	cmp    ebp,DWORD PTR [edi-0x60]
  40dbc1:	xor    BYTE PTR [edx+eiz*4-0x44],ah
  40dbc5:	mov    es,esi
  40dbc7:	mov    ah,0x72
  40dbc9:	dec    esp
  40dbca:	shr    DWORD PTR [eax],cl
  40dbcc:	out    0xf6,al
  40dbce:	cmp    esp,esi
  40dbd0:	std    
  40dbd1:	inc    esp
  40dbd2:	rep ins BYTE PTR es:[edi],dx
  40dbd4:	jae    0x40dc0b
  40dbd6:	xchg   edi,eax
  40dbd7:	ficomp WORD PTR [edi-0x46]
  40dbda:	test   BYTE PTR [eax+0x1e2fbdc7],0xbb
  40dbe1:	lods   al,BYTE PTR ds:[esi]
  40dbe2:	shl    BYTE PTR [edi+edi*8+0x12],1
  40dbe6:	xchg   ebp,eax
  40dbe7:	push   ecx
  40dbe8:	rcl    BYTE PTR [eax],1
  40dbea:	push   edi
  40dbeb:	and    cl,BYTE PTR [eax+0x41]
  40dbee:	out    0xe2,eax
  40dbf0:	sbb    DWORD PTR [ebx+0x22],ebx
  40dbf3:	iret   
  40dbf4:	(bad)  [edx+0x380ef54b]
  40dbfa:	mov    esp,DWORD PTR [eax-0x4d]
  40dbfd:	add    BYTE PTR [eax-0x43],ch
  40dc00:	add    BYTE PTR [ecx+esi*4],dh
  40dc03:	dec    esp
  40dc04:	sub    ah,BYTE PTR [ecx-0x30f7fe7c]
  40dc0a:	hlt    
  40dc0b:	pop    ecx
  40dc0c:	fcom   QWORD PTR [eax+eiz*1-0x7ff3dfa2]
  40dc13:	adc    al,0xb2
  40dc15:	ja     0x40dc44
  40dc17:	push   ecx
  40dc18:	pop    ss
  40dc19:	jb     0x40dc77
  40dc1b:	ret    0x350c
  40dc1e:	repz (bad) 
  40dc20:	and    dl,BYTE PTR [edx]
  40dc22:	(bad)  
  40dc23:	pop    ds
  40dc24:	dec    eax
  40dc25:	pop    ss
  40dc26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc27:	bound  esi,QWORD PTR [eax+0x14]
  40dc2a:	pop    ecx
  40dc2b:	jb     0x40dc01
  40dc2d:	push   0xffffffde
  40dc2f:	push   esp
  40dc30:	clc    
  40dc31:	sbb    esi,DWORD PTR [ebx+0x3341b1e8]
  40dc37:	div    DWORD PTR [edi+0x13]
  40dc3a:	dec    eax
  40dc3b:	cmc    
  40dc3c:	jg     0x40dc58
  40dc3e:	dec    eax
  40dc3f:	jle    0x40dc82
  40dc41:	call   0x3c580238
  40dc46:	scas   eax,DWORD PTR es:[edi]
  40dc47:	aad    0x89
  40dc49:	inc    esp
  40dc4a:	sbb    ebx,DWORD PTR [ebp+0x637854c9]
  40dc50:	pop    ebx
  40dc51:	mov    edx,0xf8fe4e9a
  40dc56:	add    DWORD PTR [eax-0x6a],esp
  40dc59:	neg    DWORD PTR [ebp-0xf]
  40dc5c:	sar    ch,0x67
  40dc5f:	ss dec ebp
  40dc61:	call   0x77c5:0x249c9200
  40dc68:	add    ebp,DWORD PTR [esi+0x2dded786]
  40dc6e:	and    bl,al
  40dc70:	xchg   BYTE PTR [edx-0x722a6733],bh
  40dc76:	push   esi
  40dc77:	cmp    edi,DWORD PTR [ecx]
  40dc79:	inc    DWORD PTR [edx-0x40]
  40dc7c:	addr16 gs mov ch,0xff
  40dc80:	add    eax,0x3895fcf1
  40dc85:	inc    esi
  40dc86:	imul   edi,ebx,0x73
  40dc89:	fsubr  QWORD PTR [esi-0x7f]
  40dc8c:	dec    ebx
  40dc8d:	inc    esp
  40dc8e:	cmc    
  40dc8f:	out    dx,al
  40dc90:	lock sbb BYTE PTR [esp+edi*1],0x16
  40dc95:	cmp    eax,0x93e2333f
  40dc9a:	loop   0x40dc94
  40dc9c:	jb     0x40dc22
  40dc9e:	ret    0xb6d2
  40dca1:	push   ss
  40dca2:	jmp    0xd86617ee
  40dca7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dca8:	ret    
  40dca9:	(bad)  
  40dcaa:	or     eax,0x616c2fa1
  40dcaf:	inc    ebx
  40dcb0:	xchg   edi,eax
  40dcb1:	cmp    DWORD PTR [ebp+0x32ec2778],ecx
  40dcb7:	rcr    ebx,1
  40dcb9:	shr    DWORD PTR [eax+ecx*1],cl
  40dcbc:	sub    DWORD PTR [edi+0x332b5c26],0x8d3f2f38
  40dcc6:	cmc    
  40dcc7:	sub    ch,BYTE PTR [esi]
  40dcc9:	and    BYTE PTR [edx+0x403bff41],cl
  40dccf:	inc    ebx
  40dcd0:	xor    eax,0xcc4e3af4
  40dcd5:	stc    
  40dcd6:	daa    
  40dcd7:	mov    ch,0x44
  40dcd9:	jns    0x40dd4c
  40dcdb:	fcmovb st,st(2)
  40dcdd:	or     edi,DWORD PTR [edi]
  40dcdf:	out    dx,eax
  40dce0:	mov    ds:0x6598021a,al
  40dce5:	sub    dh,BYTE PTR [ebx+0x57]
  40dce8:	cmp    BYTE PTR [esi+0x47530f11],0x41
  40dcef:	sub    DWORD PTR [eax],esi
  40dcf1:	cmp    bh,BYTE PTR [eax-0x41ff2975]
  40dcf7:	jno    0x40dcca
  40dcf9:	aad    0xac
  40dcfb:	jle    0x40dd6e
  40dcfd:	or     cl,0x12
  40dd00:	call   0xc40e22cb
  40dd05:	sbb    eax,0xfee954e4
  40dd0a:	mov    al,ds:0x84193fca
  40dd0f:	ins    BYTE PTR es:[edi],dx
  40dd10:	push   es
  40dd11:	xchg   ebp,eax
  40dd12:	mov    DWORD PTR [edi+0x37],ebx
  40dd15:	jg     0x40dd13
  40dd17:	push   ebp
  40dd18:	mov    ch,0x99
  40dd1a:	fsub   st(0),st
  40dd1c:	cwde   
  40dd1d:	fwait
  40dd1e:	add    eax,eax
  40dd20:	aaa    
  40dd21:	sub    DWORD PTR [ebx+edx*8],ebp
  40dd24:	xchg   esi,eax
  40dd25:	in     eax,dx
  40dd26:	sub    BYTE PTR [edx],bh
  40dd28:	test   eax,0xeb38920e
  40dd2d:	ret    0xb220
  40dd30:	cld    
  40dd31:	xchg   edx,eax
  40dd32:	hlt    
  40dd33:	and    eax,0x70365086
  40dd38:	mov    esi,0x5efef2d2
  40dd3d:	or     DWORD PTR [ebp-0x4f47f291],ebx
  40dd43:	dec    esp
  40dd44:	outs   dx,DWORD PTR ds:[esi]
  40dd45:	sar    DWORD PTR [ebx+0x2a],cl
  40dd48:	mov    esp,0x8dff1344
  40dd4d:	mov    eax,ds:0xdcf4263
  40dd52:	add    DWORD PTR [edi+edx*4],ebp
  40dd55:	lds    ebp,FWORD PTR [esi+0x3f]
  40dd58:	xchg   edx,eax
  40dd59:	push   eax
  40dd5a:	(bad)  [ecx-0x7b]
  40dd5d:	(bad)  
  40dd5e:	xchg   esp,eax
  40dd5f:	xor    edi,edx
  40dd61:	in     eax,0x2c
  40dd63:	mov    eax,DWORD PTR ds:0x282e889f
  40dd69:	(bad)  
  40dd6a:	xchg   esp,eax
  40dd6b:	sub    ah,ch
  40dd6d:	xor    ebp,edi
  40dd6f:	fdivr  DWORD PTR [edx-0x6b]
  40dd72:	bound  edi,QWORD PTR ss:[ecx]
  40dd75:	(bad)  
  40dd77:	lock mov bl,0xa5
  40dd7a:	mov    DWORD PTR [ecx+eax*4-0x6a],esp
  40dd7e:	adc    ebx,DWORD PTR [ecx+eax*4+0x3bb4a6b6]
  40dd85:	cmp    esi,DWORD PTR [ecx]
  40dd87:	cmp    BYTE PTR [ebx+0x69],dl
  40dd8a:	ja     0x40dd0d
  40dd8c:	iret   
  40dd8d:	(bad)  
  40dd8f:	push   cs
  40dd90:	shr    BYTE PTR [eax-0x9],0xfe
  40dd94:	xchg   DWORD PTR [ecx-0xe],edi
  40dd97:	add    esp,DWORD PTR [edx]
  40dd99:	mov    edi,0x8e9ed4e1
  40dd9e:	shl    BYTE PTR [esi+0x56],cl
  40dda1:	les    esp,FWORD PTR [ebx-0x29]
  40dda4:	cmp    edx,edi
  40dda6:	loopne 0x40dd8c
  40dda8:	push   es
  40dda9:	gs out 0x0,al
  40ddac:	shr    DWORD PTR [edx-0x13111593],cl
  40ddb2:	les    ebx,FWORD PTR [ecx+eax*1-0x69]
  40ddb6:	test   eax,0x1cd37e1f
  40ddbb:	add    DWORD PTR [esi],edx
  40ddbd:	adc    DWORD PTR [ecx],esi
  40ddbf:	dec    edx
  40ddc0:	lods   al,BYTE PTR ds:[esi]
  40ddc1:	jne    0x40de07
  40ddc3:	cwde   
  40ddc4:	xor    ah,BYTE PTR [esi]
  40ddc6:	jmp    0x5372:0x878543a1
  40ddcd:	(bad)  
  40ddce:	sub    al,0x13
  40ddd0:	iret   
  40ddd1:	dec    eax
  40ddd2:	or     BYTE PTR [eax],dh
  40ddd4:	fild   DWORD PTR [ecx]
  40ddd6:	cmp    bl,dl
  40ddd8:	ret    
  40ddd9:	push   ebx
  40ddda:	xchg   edx,eax
  40dddb:	jne    0x40ddbe
  40dddd:	jnp    0x40de10
  40dddf:	xchg   ebx,eax
  40dde0:	sub    DWORD PTR [ebx],edx
  40dde2:	fnstenv [edi]
  40dde4:	sbb    DWORD PTR ds:0x801f77e2,esi
  40ddea:	fs push esp
  40ddec:	xor    DWORD PTR [edx-0x5d],edi
  40ddef:	cdq    
  40ddf0:	loope  0x40dddd
  40ddf2:	cmp    esi,ecx
  40ddf4:	sub    BYTE PTR [edi+0x31],bl
  40ddf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ddf8:	mov    esp,0xb45d3e95
  40ddfd:	mov    dl,0x21
  40ddff:	outs   dx,DWORD PTR ds:[esi]
  40de00:	enter  0x6381,0xd0
  40de04:	popa   
  40de05:	xchg   esi,eax
  40de06:	sub    dh,ch
  40de08:	xchg   bl,bh
  40de0a:	je     0x40de87
  40de0c:	jp     0x40ddd2
  40de0e:	sub    eax,DWORD PTR [esi]
  40de10:	push   esi
  40de11:	or     eax,0x3f06c6bd
  40de16:	dec    edx
  40de17:	or     esp,DWORD PTR [ecx+edx*8]
  40de1a:	(bad)  
  40de1b:	mov    al,0x28
  40de1d:	and    ebp,DWORD PTR [edi]
  40de1f:	cmp    BYTE PTR [edi],ch
  40de21:	sahf   
  40de22:	sbb    ch,dl
  40de24:	jo     0x40de1f
  40de26:	cdq    
  40de27:	mov    ds:0xe90f47a2,al
  40de2c:	pop    ss
  40de2d:	xor    eax,0xa68d9807
  40de32:	fs rcr esp,1
  40de35:	pop    edi
  40de36:	pop    esp
  40de37:	pop    edx
  40de38:	ins    BYTE PTR es:[edi],dx
  40de39:	xchg   ebp,eax
  40de3a:	cmp    ah,dh
  40de3c:	fisubr WORD PTR [eax+ebx*1]
  40de3f:	and    DWORD PTR [edi],ecx
  40de41:	sub    ebp,esp
  40de43:	in     eax,0x5
  40de45:	loop   0x40de2d
  40de47:	loopne 0x40de2d
  40de49:	(bad)  
  40de4b:	mov    ds:0x70239560,al
  40de50:	cmp    edx,DWORD PTR [edi-0x60]
  40de53:	cdq    
  40de54:	shl    BYTE PTR [esi+0x2b36c6dd],0x54
  40de5b:	hlt    
  40de5c:	mov    eax,ds:0xa3b1164c
  40de61:	fsubr  DWORD PTR [ecx+esi*1+0xd]
  40de65:	mov    bl,0x60
  40de67:	pop    ds
  40de68:	fdiv   DWORD PTR [ebx]
  40de6a:	push   ebx
  40de6b:	fidiv  WORD PTR [edi+0x1e48afa1]
  40de71:	cmp    al,0x73
  40de73:	ss xchg esi,eax
  40de75:	pushf  
  40de76:	or     BYTE PTR [eax+0x4d],dl
  40de79:	mov    ebp,0xfbfb12ec
  40de7e:	aas    
  40de7f:	shl    BYTE PTR [esi+0x5316f1e2],0x33
  40de86:	setl   BYTE PTR [edi+0x2b1c8169]
  40de8d:	adc    eax,0x233f69d5
  40de92:	jo     0x40de43
  40de94:	push   0x54
  40de96:	xchg   esp,eax
  40de97:	aad    0x2
  40de99:	add    ebx,ebp
  40de9b:	aam    0xdd
  40de9d:	(bad)  
  40de9e:	push   esp
  40de9f:	jmp    0x171cc3b2
  40dea4:	scas   eax,DWORD PTR es:[edi]
  40dea5:	out    dx,eax
  40dea6:	xor    eax,0x283e41b3
  40deab:	cld    
  40deac:	pusha  
  40dead:	imul   eax,DWORD PTR [edi-0x62537ef1],0x20
  40deb4:	dec    ebx
  40deb5:	pop    ebx
  40deb6:	lock repnz dec ebp
  40deb9:	scas   eax,DWORD PTR es:[edi]
  40deba:	test   al,0xd0
  40debc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40debd:	pop    edx
  40debe:	dec    ecx
  40debf:	add    DWORD PTR [ebx+0xd],esi
  40dec2:	stos   DWORD PTR es:[edi],eax
  40dec3:	pop    esp
  40dec4:	outs   dx,DWORD PTR ds:[esi]
  40dec5:	cmp    ch,BYTE PTR [esp+ecx*2-0x36405bc5]
  40decc:	je     0x40deb1
  40dece:	inc    ecx
  40decf:	rcr    BYTE PTR [ecx],cl
  40ded1:	push   esp
  40ded2:	adc    BYTE PTR [edi-0x58],ch
  40ded5:	jb     0x40df16
  40ded7:	clc    
  40ded8:	xor    DWORD PTR [eax+ebp*4-0x2d9c61a7],0xe9175dcb
  40dee3:	repnz fcomp DWORD PTR [edx]
  40dee6:	ins    DWORD PTR es:[edi],dx
  40dee7:	dec    DWORD PTR [edi+eax*8+0x6c]
  40deeb:	(bad)
  40deef:	push   ebp
  40def0:	or     dh,BYTE PTR [ebx-0x1ecb5453]
  40def6:	rcr    BYTE PTR [eax-0x7],0xcf
  40defa:	jl     0x40deb3
  40defc:	and    BYTE PTR [ecx],dh
  40defe:	(bad)
  40df02:	add    eax,0xe8c4d11d
  40df07:	adc    esp,eax
  40df09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df0a:	test   dl,0x6a
  40df0d:	scas   eax,DWORD PTR es:[edi]
  40df0e:	mov    bh,0x14
  40df10:	xor    eax,0xc95151ab
  40df15:	daa    
  40df16:	dec    ebx
  40df17:	loop   0x40df98
  40df19:	xor    DWORD PTR [edi-0x22ff5583],edi
  40df1f:	mov    edx,0xf9c0912f
  40df24:	test   eax,0x1c8a77f
  40df29:	jp     0x40deff
  40df2b:	xor    ecx,DWORD PTR [eax+0x6b61f165]
  40df31:	sbb    ah,ah
  40df33:	push   ecx
  40df34:	xchg   edi,eax
  40df35:	adc    dl,ch
  40df37:	in     al,dx
  40df38:	cmc    
  40df39:	pop    edi
  40df3a:	or     al,0xdd
  40df3c:	aam    0xe9
  40df3e:	in     al,dx
  40df3f:	shr    ebx,1
  40df41:	loope  0x40df3d
  40df43:	and    ch,BYTE PTR [esi+0x8f5f686]
  40df49:	cmp    DWORD PTR [ebx+eiz*2+0x71],eax
  40df4d:	ins    DWORD PTR es:[edi],dx
  40df4e:	lea    eax,[edx+0xe]
  40df51:	aas    
  40df52:	cmp    edx,DWORD PTR [ecx+0x73ed42b7]
  40df58:	jne    0x40df95
  40df5a:	xor    dl,BYTE PTR [esi-0x2f]
  40df5d:	or     al,0xe
  40df5f:	cmp    DWORD PTR [ecx-0x54e07d28],0x66
  40df66:	pop    ebx
  40df67:	sub    al,0xf4
  40df69:	cs mov dl,0x63
  40df6c:	sub    eax,0x27045c1d
  40df71:	clc    
  40df72:	popa   
  40df73:	mov    BYTE PTR [esi-0x70],0x10
  40df77:	inc    eax
  40df78:	adc    edx,DWORD PTR [eax-0x66]
  40df7b:	imul   ebp,DWORD PTR [ecx-0x4ef3ad0e],0xa88855fe
  40df85:	push   esi
  40df86:	(bad)  
  40df87:	ds push 0xba23fc9c
  40df8d:	dec    ebp
  40df8e:	pop    edi
  40df8f:	pop    edi
  40df90:	enter  0x4f02,0xd7
  40df94:	mov    esp,0xf0065e7b
  40df99:	push   0xcfcee775
  40df9e:	fs jp  0x40e007
  40dfa1:	xchg   ebp,eax
  40dfa2:	fdivr  DWORD PTR [ecx-0xf]
  40dfa5:	test   al,0xa5
  40dfa7:	mov    ds:0x818606ef,al
  40dfac:	ins    DWORD PTR es:[edi],dx
  40dfad:	mov    dl,0x54
  40dfaf:	jecxz  0x40dfc1
  40dfb1:	lds    edx,FWORD PTR [eax+ecx*2+0x4557355d]
  40dfb8:	sub    dl,BYTE PTR [esi+0x2b]
  40dfbb:	mov    dh,bl
  40dfbd:	test   al,0x27
  40dfbf:	fdiv   st,st(2)
  40dfc1:	icebp  
  40dfc2:	jmp    0xeffd:0x5ac1ea8c
  40dfc9:	cs or  eax,0x5206d354
  40dfcf:	in     al,0x81
  40dfd1:	fstp   TBYTE PTR [eax]
  40dfd3:	popf   
  40dfd4:	mov    eax,0xc632e3a9
  40dfd9:	in     eax,dx
  40dfda:	rcr    BYTE PTR [ebp+ebp*8+0x5a],cl
  40dfde:	popa   
  40dfdf:	pop    ebx
  40dfe0:	test   al,0xe5
  40dfe2:	inc    ebx
  40dfe3:	ins    BYTE PTR es:[edi],dx
  40dfe4:	call   0xdd025bcc
  40dfe9:	sub    al,0x7c
  40dfeb:	addr16 js 0x40dfc5
  40dfee:	(bad)  
  40dfef:	popf   
  40dff0:	int    0x8d
  40dff2:	dec    ebx
  40dff3:	xor    DWORD PTR [esi+esi*4-0x66],eax
  40dff7:	clc    
  40dff8:	or     DWORD PTR [esi-0x1ce2e5f5],0x69fc68c4
  40e002:	std    
  40e003:	sub    BYTE PTR [ebp+0x5e090067],0x82
  40e00a:	add    edi,edx
  40e00c:	(bad)  
  40e00e:	sbb    DWORD PTR [ebx+edi*1],esi
  40e011:	imul   edi,DWORD PTR ds:0xfefb,0x20
  40e017:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e018:	pushf  
  40e019:	jg     0x40e043
  40e01b:	(bad)  
  40e01c:	adc    BYTE PTR ds:0x46e389cd,dl
  40e022:	jnp    0x40dfc5
  40e024:	or     ch,BYTE PTR [ecx]
  40e026:	ins    BYTE PTR es:[edi],dx
  40e027:	fld    DWORD PTR [ebx+0x426f5ef]
  40e02d:	das    
  40e02e:	or     al,0x79
  40e030:	mov    BYTE PTR [esi],dh
  40e032:	add    ebp,DWORD PTR cs:[edx-0x1f401ae7]
  40e039:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e03a:	and    edi,DWORD PTR [ebp+eiz*8-0x78]
  40e03e:	push   0x21
  40e040:	test   al,0xa1
  40e042:	sub    eax,0x314c9804
  40e047:	test   eax,0x29e40185
  40e04c:	and    BYTE PTR [ebx-0x637f1cfe],bl
  40e052:	xchg   bl,ch
  40e054:	scas   al,BYTE PTR es:[edi]
  40e055:	sbb    ecx,DWORD PTR [ebx-0x5b]
  40e058:	aam    0xb8
  40e05a:	mov    cl,0x93
  40e05c:	inc    esp
  40e05d:	jbe    0x40e0bb
  40e05f:	xor    ebp,DWORD PTR [si+0x189e]
  40e064:	pop    ebx
  40e065:	dec    esi
  40e066:	stc    
  40e067:	dec    ebp
  40e068:	loopne 0x40e0a8
  40e06a:	pop    edx
  40e06b:	mov    edi,0x22b22798
  40e070:	test   DWORD PTR [ecx],0xb463c769
  40e076:	mov    edi,0xa3a4f700
  40e07b:	inc    ebx
  40e07c:	cmp    BYTE PTR [ebx+0x2d],al
  40e07f:	jmp    FWORD PTR [edx]
  40e081:	call   0xe17fb6db
  40e086:	test   BYTE PTR [edx+esi*4+0x2c],cl
  40e08a:	stos   BYTE PTR es:[edi],al
  40e08b:	push   edi
  40e08c:	lock mov esp,0xfee90664
  40e092:	inc    eax
  40e093:	cmc    
  40e094:	or     al,0x7e
  40e096:	fstp   DWORD PTR [edx]
  40e098:	int3   
  40e099:	push   ebx
  40e09a:	jmp    0xbaec0210
  40e09f:	mov    al,0x77
  40e0a1:	inc    eax
  40e0a2:	sub    ebp,DWORD PTR [eax+0x23]
  40e0a5:	aam    0x44
  40e0a7:	jle    0x40e100
  40e0a9:	jnp    0x40e073
  40e0ab:	or     DWORD PTR [edx-0xcd54563],ebp
  40e0b1:	push   ecx
  40e0b2:	jmp    0xb84774d
  40e0b7:	and    dl,cl
  40e0b9:	dec    esp
  40e0ba:	(bad)  
  40e0bb:	shl    BYTE PTR [eax-0x73],cl
  40e0be:	jbe    0x40e136
  40e0c0:	in     al,0x6
  40e0c2:	and    ah,ah
  40e0c4:	push   eax
  40e0c5:	mov    DWORD PTR [edx+0x7d],edx
  40e0c8:	into   
  40e0c9:	sub    eax,0x97b807b7
  40e0ce:	jae    0x40e109
  40e0d0:	div    ch
  40e0d2:	inc    esi
  40e0d3:	daa    
  40e0d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0d5:	(bad)  
  40e0d6:	scas   eax,DWORD PTR es:[edi]
  40e0d7:	imul   esp,ebx,0x76
  40e0da:	sahf   
  40e0db:	and    ah,BYTE PTR [edx-0x7e]
  40e0de:	addr16 push ds
  40e0e0:	sub    ebp,ebp
  40e0e2:	popa   
  40e0e3:	adc    esi,ebp
  40e0e5:	lods   eax,DWORD PTR ds:[esi]
  40e0e6:	adc    eax,ebp
  40e0e8:	xor    ah,BYTE PTR [edx+0x6403e4e0]
  40e0ee:	jmp    FWORD PTR ds:0xbe92e59a
  40e0f4:	shr    DWORD PTR [esi-0x11],0xef
  40e0f8:	mov    edi,0x1ab80725
  40e0fd:	mov    eax,0x9f35faaa
  40e102:	mov    al,ds:0x7f001222
  40e107:	cmp    BYTE PTR [esi+0x3d6ceecd],ch
  40e10d:	inc    eax
  40e10e:	(bad)  
  40e10f:	xchg   esp,eax
  40e110:	cmp    eax,0x139b5f80
  40e115:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e116:	out    dx,eax
  40e117:	sbb    DWORD PTR [esi-0x2fcb8f78],edi
  40e11d:	fidivr WORD PTR [ecx]
  40e11f:	aad    0xe0
  40e121:	jmp    0x40e185
  40e123:	mov    bl,BYTE PTR [edi]
  40e125:	dec    ecx
  40e126:	mov    al,0x8d
  40e128:	retf   
  40e129:	aaa    
  40e12a:	dec    esi
  40e12b:	sbb    esi,DWORD PTR cs:0x12d48c2b
  40e132:	mov    ebp,0xe1168d2
  40e137:	xchg   ebx,ebp
  40e139:	xchg   ebx,eax
  40e13a:	and    ecx,0xc5949731
  40e140:	lea    ecx,ds:0xd3e48a77
  40e146:	pop    ebx
  40e147:	and    DWORD PTR [esi+0x547aee5b],edx
  40e14d:	ds push ecx
  40e14f:	fsubrp st(7),st
  40e151:	pop    ecx
  40e152:	(bad)  
  40e155:	mov    esp,0x97acd50a
  40e15b:	jno    0x40e1cb
  40e15d:	dec    ebp
  40e15e:	mov    esp,0x8dfe363
  40e163:	sub    edx,DWORD PTR [ebx-0x6e]
  40e166:	int    0x2c
  40e168:	pop    eax
  40e169:	inc    ebx
  40e16a:	push   edx
  40e16b:	call   0x660d:0x6aa83c21
  40e172:	and    ch,bl
  40e174:	fist   DWORD PTR [ebx-0x62]
  40e177:	test   BYTE PTR [edi],cl
  40e179:	fsub   QWORD PTR [edi]
  40e17b:	inc    ebp
  40e17c:	and    ebx,eax
  40e17e:	or     eax,0x528b39
  40e183:	jb     0x40e163
  40e185:	stos   DWORD PTR es:[edi],eax
  40e186:	fistp  QWORD PTR [eax+esi*4]
  40e189:	cmp    ecx,0xffffffa1
  40e18c:	daa    
  40e18d:	jmp    0xf67d3cae
  40e192:	adc    DWORD PTR [ebx],esi
  40e194:	stc    
  40e195:	icebp  
  40e196:	or     ecx,edx
  40e198:	mov    ebp,0x7fc8b4cd
  40e19d:	stos   BYTE PTR es:[edi],al
  40e19e:	in     al,0x31
  40e1a0:	cwde   
  40e1a1:	lods   eax,DWORD PTR ds:[esi]
  40e1a2:	jno    0x40e1f4
  40e1a4:	and    BYTE PTR ds:0x8c14626d,cl
  40e1aa:	push   eax
  40e1ab:	mov    ds:0x2ffd9a11,eax
  40e1b0:	int3   
  40e1b1:	popa   
  40e1b2:	push   ss
  40e1b3:	mov    es,WORD PTR [edx]
  40e1b5:	mov    bh,0x1b
  40e1b7:	jno    0x40e15e
  40e1b9:	add    esp,DWORD PTR [ecx]
  40e1bb:	mov    eax,ds:0xdcaa2b64
  40e1c0:	sub    DWORD PTR [eax],edx
  40e1c2:	mov    ch,0x23
  40e1c4:	adc    DWORD PTR [ecx+edx*1+0x1f],edx
  40e1c8:	icebp  
  40e1c9:	pop    ecx
  40e1ca:	mov    esi,0x676fb5f
  40e1cf:	fadd   st(5),st
  40e1d1:	nop
  40e1d2:	lahf   
  40e1d3:	push   cs
  40e1d4:	in     al,dx
  40e1d5:	mov    cl,BYTE PTR [ebp-0x692376c5]
  40e1db:	ins    BYTE PTR es:[edi],dx
  40e1dc:	mov    bl,0xa0
  40e1de:	adc    BYTE PTR [eax+0x70],0xcc
  40e1e2:	xor    al,0xaf
  40e1e4:	rcl    esi,cl
  40e1e6:	inc    ecx
  40e1e7:	sub    BYTE PTR [eax+ebx*2],ah
  40e1ea:	push   es
  40e1eb:	sar    DWORD PTR [edx-0x1388210b],1
  40e1f1:	push   edx
  40e1f2:	scas   eax,DWORD PTR es:[edi]
  40e1f3:	jbe    0x40e26a
  40e1f5:	pop    es
  40e1f6:	inc    esi
  40e1f7:	lods   al,BYTE PTR ds:[esi]
  40e1f8:	mov    ebp,0xa0dbf523
  40e1fd:	push   ecx
  40e1fe:	add    al,0xe2
  40e200:	dec    eax
  40e201:	xchg   ebp,eax
  40e202:	adc    BYTE PTR [ebx],dl
  40e204:	mov    ebp,0x71e7993a
  40e209:	shl    BYTE PTR [edi+ebx*8-0x57e8d14d],0x87
  40e211:	ficom  WORD PTR [esi]
  40e213:	loopne 0x40e1c0
  40e215:	mov    esi,0xc6df23da
  40e21a:	imul   eax,DWORD PTR [ecx-0x76],0x59d2eee1
  40e221:	test   eax,0x1b5c87a1
  40e226:	mov    ebp,0x8926b6ca
  40e22b:	nop
  40e22c:	jne    0x40e1c2
  40e22e:	mov    bl,0x4c
  40e230:	mov    bl,0x2b
  40e232:	cwde   
  40e233:	(bad)  
  40e234:	mov    edi,DWORD PTR [ecx]
  40e236:	pushf  
  40e237:	mov    eax,gs
  40e239:	test   al,0x1
  40e23b:	(bad)  
  40e23d:	mov    al,ds:0x9bb5bbe7
  40e242:	sub    esi,DWORD PTR [ebp-0x16]
  40e245:	fstp   QWORD PTR [ecx+edi*4+0x36d9e53b]
  40e24c:	adc    ebx,DWORD PTR [esi]
  40e24e:	lock das 
  40e250:	pop    ebp
  40e251:	mov    bl,0x34
  40e253:	inc    eax
  40e254:	aaa    
  40e255:	data16 xor al,0x7b
  40e258:	sti    
  40e259:	rcr    BYTE PTR [ecx],cl
  40e25b:	scas   al,BYTE PTR es:[edi]
  40e25c:	jne    0x40e288
  40e25e:	pop    edx
  40e25f:	mov    esp,ss
  40e261:	adc    ch,dh
  40e263:	adc    al,0xc
  40e265:	(bad)  
  40e266:	mov    dl,0x31
  40e268:	cli    
  40e269:	dec    esi
  40e26a:	in     eax,dx
  40e26b:	hlt    
  40e26c:	fnstsw WORD PTR [ecx+ebx*8-0x4d]
  40e270:	pop    ds
  40e271:	jmp    0x40e224
  40e273:	adc    al,0xd6
  40e275:	lods   al,BYTE PTR ds:[esi]
  40e276:	jne    0x40e20b
  40e278:	sub    esi,DWORD PTR [esi+0x56]
  40e27b:	sti    
  40e27c:	sub    BYTE PTR [esi-0x25],ch
  40e27f:	mov    esp,0xdada0677
  40e284:	test   al,0x53
  40e286:	pusha  
  40e287:	test   DWORD PTR [edx-0x6a],edi
  40e28a:	cdq    
  40e28b:	imul   esp,eax,0x30863c70
  40e291:	int3   
  40e292:	mov    eax,esp
  40e294:	mov    bh,0xaf
  40e296:	inc    edx
  40e297:	jb     0x40e283
  40e299:	push   esp
  40e29a:	jb     0x40e27f
  40e29c:	leave  
  40e29d:	dec    edi
  40e29e:	ficom  WORD PTR [esi-0x33eee2c9]
  40e2a4:	jno    0x40e265
  40e2a6:	mov    ah,0x3a
  40e2a8:	cmp    eax,ebp
  40e2aa:	loopne 0x40e262
  40e2ac:	pop    ds
  40e2ad:	push   ds
  40e2ae:	inc    ebx
  40e2af:	jge    0x40e2ee
  40e2b1:	les    eax,FWORD PTR [ebx-0x71]
  40e2b4:	mov    edi,0x3688b793
  40e2b9:	(bad)  
  40e2ba:	fisttp WORD PTR [esi-0x53]
  40e2bd:	add    BYTE PTR [eax+0x4e9cca52],bh
  40e2c3:	jg     0x40e2be
  40e2c5:	sbb    eax,DWORD PTR [ebp+0x16]
  40e2c8:	pop    edx
  40e2c9:	add    dh,al
  40e2cb:	outs   dx,DWORD PTR ds:[esi]
  40e2cc:	xor    DWORD PTR [esi+0x3d],ecx
  40e2cf:	pushf  
  40e2d0:	mov    esp,0x9fb8e6f2
  40e2d5:	repz fild QWORD PTR [esi-0x43]
  40e2d9:	xchg   edi,eax
  40e2da:	repnz push ecx
  40e2dc:	cwde   
  40e2dd:	mov    ch,0xe7
  40e2df:	inc    ebp
  40e2e0:	out    0xf6,eax
  40e2e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2e3:	out    0x61,al
  40e2e5:	cmp    ah,ah
  40e2e7:	push   eax
  40e2e8:	jno    0x40e290
  40e2ea:	ins    DWORD PTR es:[edi],dx
  40e2eb:	inc    ebp
  40e2ec:	mov    ecx,DWORD PTR [edx+0x21]
  40e2ef:	jge    0x40e275
  40e2f1:	jb     0x40e2fd
  40e2f3:	out    0x15,al
  40e2f5:	push   es
  40e2f6:	lock xor esi,DWORD PTR [esi]
  40e2f9:	xchg   esi,eax
  40e2fa:	jle    0x40e2d2
  40e2fc:	das    
  40e2fd:	jo     0x40e28c
  40e2ff:	leave  
  40e300:	mov    bh,0x7f
  40e302:	adc    BYTE PTR [eax+0xce4c4dd],bl
  40e308:	jmp    0x4951e32f
  40e30d:	xchg   DWORD PTR [esi+0x7ab5dcd3],ebx
  40e313:	retf   
  40e314:	and    cl,BYTE PTR [esi]
  40e316:	mov    ebp,DWORD PTR [edi]
  40e318:	loopne 0x40e323
  40e31a:	cmp    BYTE PTR [edx],al
  40e31c:	in     eax,0x68
  40e31e:	mov    dh,0x55
  40e320:	das    
  40e321:	outs   dx,DWORD PTR ds:[esi]
  40e322:	inc    ebx
  40e323:	ret    0x2a27
  40e326:	pop    ds
  40e327:	mov    dl,BYTE PTR [edx-0x39]
  40e32a:	cmp    ebp,DWORD PTR [edx-0x20e82d03]
  40e330:	jle    0x40e330
  40e332:	repnz sub DWORD PTR [ebx-0x6f522a55],ebx
  40e339:	xchg   esp,eax
  40e33a:	out    0x4f,al
  40e33c:	jne    0x40e30d
  40e33e:	test   DWORD PTR ds:0x31ef7ec0,ecx
  40e344:	stc    
  40e345:	mov    ah,0x1c
  40e347:	in     eax,0xa
  40e349:	call   0x346b:0x9b47e5e
  40e350:	jmp    0xf7a4:0xdd078480
  40e357:	test   al,0x3e
  40e359:	jecxz  0x40e363
  40e35b:	mov    dl,BYTE PTR [eax]
  40e35d:	xor    DWORD PTR [edx-0x42],ebp
  40e360:	push   0x8974a8a8
  40e365:	xchg   ebp,eax
  40e366:	test   eax,0xb436661a
  40e36b:	lods   eax,DWORD PTR ds:[esi]
  40e36c:	and    ecx,ebx
  40e36e:	test   dl,dl
  40e370:	outs   dx,DWORD PTR ds:[esi]
  40e371:	arpl   WORD PTR [ebx-0x18],bp
  40e374:	cmp    eax,0x4b481196
  40e379:	push   ds
  40e37a:	fisub  DWORD PTR [ecx+0x1b]
  40e37d:	pop    es
  40e37e:	mov    dh,0x87
  40e380:	cmc    
  40e381:	mov    bl,BYTE PTR [ebx+ecx*4+0x31]
  40e385:	std    
  40e386:	pop    ds
  40e387:	lock pop eax
  40e389:	or     al,0xa4
  40e38b:	xchg   esp,eax
  40e38c:	mov    bl,BYTE PTR [edx+ebx*4+0x46]
  40e390:	or     esi,ebx
  40e392:	test   bh,dl
  40e394:	or     BYTE PTR [esi],al
  40e396:	inc    ecx
  40e397:	ss jcxz 0x40e35e
  40e39b:	and    eax,0x6fa326d5
  40e3a0:	jnp    0x40e3bc
  40e3a2:	mov    ah,0x3c
  40e3a4:	in     eax,dx
  40e3a5:	loopne 0x40e3a2
  40e3a7:	clc    
  40e3a8:	pop    es
  40e3a9:	cmp    ebx,0xffffffca
  40e3ac:	mov    BYTE PTR [edx-0x71187d24],bl
  40e3b2:	jecxz  0x40e3ca
  40e3b4:	mov    eax,0x5c3a63d6
  40e3b9:	sahf   
  40e3ba:	mov    ebx,0x8efda186
  40e3bf:	cmc    
  40e3c0:	and    al,0x51
  40e3c2:	jmp    0x7d96b5dd
  40e3c7:	ret    0x3798
  40e3ca:	push   edi
  40e3cb:	inc    eax
  40e3cc:	jns    0x40e3fd
  40e3ce:	cs dec ecx
  40e3d0:	repnz cmp al,0x4d
  40e3d3:	ins    DWORD PTR es:[edi],dx
  40e3d4:	sub    eax,0xcdf35be9
  40e3d9:	ins    DWORD PTR es:[edi],dx
  40e3da:	dec    ecx
  40e3db:	xor    al,0x38
  40e3dd:	mov    al,ds:0xe25eb167
  40e3e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3e3:	mov    DWORD PTR [edx+0x6b521580],esi
  40e3e9:	std    
  40e3ea:	loope  0x40e3b6
  40e3ec:	pop    ss
  40e3ed:	stos   BYTE PTR es:[edi],al
  40e3ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3ef:	hlt    
  40e3f0:	jle    0x40e3ae
  40e3f2:	enter  0x7d54,0xe4
  40e3f6:	gs repz clc 
  40e3f9:	xor    bh,BYTE PTR [edx]
  40e3fb:	sub    eax,0x6a75631
  40e400:	ret    0xfc63
  40e403:	outs   dx,BYTE PTR ds:[esi]
  40e404:	test   eax,0xff729404
  40e409:	call   0x7114:0xaaa0ed3a
  40e410:	mov    WORD PTR [eax],ss
  40e412:	dec    bp
  40e414:	je     0x40e411
  40e416:	jl     0x40e40a
  40e418:	jmp    0xbb6c:0x762ba256
  40e41f:	loope  0x40e3cf
  40e421:	cmp    DWORD PTR [ecx-0xeee8dee],edi
  40e427:	fist   WORD PTR [edi+ebp*4+0x3c004ecf]
  40e42e:	data16 mov al,0xa7
  40e431:	jnp    0x40e499
  40e433:	loop   0x40e453
  40e435:	adc    al,dh
  40e437:	mov    edi,DWORD PTR [edx-0x6f]
  40e43a:	mov    ds:0xc6ac0834,eax
  40e43f:	(bad)  
  40e440:	add    eax,0x6acd342e
  40e445:	out    0x97,eax
  40e447:	jne    0x40e49a
  40e449:	mov    ebx,0x3b70c8b9
  40e44e:	test   DWORD PTR [edi+ebp*8],esp
  40e451:	sbb    ah,BYTE PTR [ebp+0x0]
  40e454:	sahf   
  40e455:	add    ah,BYTE PTR [esi]
  40e457:	out    0x26,eax
  40e459:	pop    ebp
  40e45a:	xchg   ebx,eax
  40e45b:	outs   dx,DWORD PTR ds:[esi]
  40e45c:	mov    ebp,0x6209b217
  40e461:	cmp    bh,BYTE PTR [eax+ecx*1]
  40e464:	mov    dh,0x56
  40e466:	jmp    ebp
  40e468:	xchg   edi,eax
  40e469:	into   
  40e46a:	xchg   ebx,eax
  40e46b:	dec    ebx
  40e46c:	adc    DWORD PTR [ecx],esp
  40e46e:	mov    ebx,0xb1f3ac16
  40e473:	jb     0x40e480
  40e475:	xchg   edi,eax
  40e476:	mov    ds:0xdafcb3ee,eax
  40e47b:	mov    edx,0x303f85e2
  40e480:	push   ss
  40e481:	sub    eax,0xf20862af
  40e486:	mov    bl,0xbf
  40e488:	dec    ebx
  40e489:	push   0x4f
  40e48b:	push   es
  40e48c:	mov    cs,WORD PTR [edx+0x20b8a5c7]
  40e492:	xor    eax,0xa6fff286
  40e497:	in     eax,0x9b
  40e499:	add    al,0x25
  40e49b:	adc    DWORD PTR [edx-0x4f],eax
  40e49e:	daa    
  40e49f:	dec    edi
  40e4a0:	dec    edx
  40e4a1:	adc    eax,0x84960f23
  40e4a6:	and    esi,DWORD PTR [ebp-0x15]
  40e4a9:	sbb    eax,0xf8ac506e
  40e4ae:	mov    ds:0x6f45ca3c,eax
  40e4b3:	and    esi,DWORD PTR [eax]
  40e4b5:	jne    0x40e48d
  40e4b7:	inc    esp
  40e4b8:	(bad)  
  40e4b9:	rcr    DWORD PTR [ebx+0x36],1
  40e4bc:	das    
  40e4bd:	mov    al,ds:0x15d61752
  40e4c2:	mov    ah,0xf0
  40e4c4:	xlat   BYTE PTR ds:[ebx]
  40e4c5:	mov    DWORD PTR [ebx-0x20eeb4fa],eax
  40e4cb:	pop    es
  40e4cc:	(bad)  
  40e4ce:	pop    ebx
  40e4cf:	sbb    al,0x37
  40e4d1:	int    0xc9
  40e4d3:	out    0xa9,al
  40e4d5:	daa    
  40e4d6:	fcomi  st,st(7)
  40e4d8:	mov    esi,0x964fe5af
  40e4dd:	das    
  40e4de:	leave  
  40e4df:	fadd   DWORD PTR [ebx+0x1f]
  40e4e2:	lds    ecx,FWORD PTR [ebp-0x3e]
  40e4e5:	mov    fs,WORD PTR [edx]
  40e4e7:	xchg   esi,eax
  40e4e8:	shl    dh,1
  40e4ea:	mov    edx,0xcf8ddf90
  40e4ef:	ret    
  40e4f0:	add    eax,0x58544f52
  40e4f5:	pop    esp
  40e4f6:	lahf   
  40e4f7:	das    
  40e4f8:	mov    bh,0x82
  40e4fa:	ja     0x40e4d4
  40e4fc:	push   0x40
  40e4fe:	(bad)  
  40e4ff:	mov    bl,0x5
  40e501:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40e503:	dec    ebx
  40e504:	xchg   DWORD PTR [esi],ecx
  40e506:	mov    ecx,0x7a84f313
  40e50b:	dec    eax
  40e50c:	jmp    0x2676:0xf55c7b7a
  40e513:	push   esp
  40e514:	sbb    al,0x58
  40e516:	xchg   ebp,eax
  40e517:	sub    BYTE PTR [esi-0x3f],bh
  40e51a:	mov    ds:0xd6331e94,al
  40e51f:	daa    
  40e520:	out    dx,al
  40e521:	mov    ebx,0xa2b1035c
  40e526:	mov    ecx,esi
  40e528:	fimul  WORD PTR [edx+0xeda3588]
  40e52e:	arpl   WORD PTR [edi-0x707e71e2],di
  40e534:	rcl    BYTE PTR [edx+ebx*8+0x5751e6d6],1
  40e53b:	shl    DWORD PTR [eax+0x60],0x6c
  40e53f:	and    DWORD PTR [eax],esp
  40e541:	jge    0x40e4d6
  40e543:	add    al,0x7d
  40e545:	daa    
  40e546:	arpl   WORD PTR [edi-0xe],si
  40e549:	jae    0x40e541
  40e54b:	pop    esp
  40e54c:	iret   
  40e54d:	aad    0xaf
  40e54f:	adc    esi,ebp
  40e551:	out    0xdf,al
  40e553:	loope  0x40e55d
  40e555:	ds cs ins BYTE PTR es:[edi],dx
  40e558:	push   cs
  40e559:	mov    dl,0x4a
  40e55b:	sbb    BYTE PTR [edi],bh
  40e55d:	aad    0x5f
  40e55f:	psubq  mm2,QWORD PTR ds:0x2819287c
  40e566:	imul   ebx,DWORD PTR [edx+edx*2],0x50
  40e56a:	cmc    
  40e56b:	dec    edx
  40e56c:	adc    ch,ch
  40e56e:	xchg   DWORD PTR [esi+0x64],ebx
  40e571:	adc    BYTE PTR [edx],al
  40e573:	int3   
  40e574:	sub    DWORD PTR [ebx+0x2477e38b],esp
  40e57a:	xor    dh,BYTE PTR [edx]
  40e57c:	fimul  DWORD PTR [edi+0x7cb5c482]
  40e582:	into   
  40e583:	shl    ah,0xfe
  40e586:	and    BYTE PTR [ecx-0x80],bl
  40e589:	mov    ds:0x284d4ca1,ax
  40e58f:	imul   ebx,esi,0x17104dd5
  40e595:	or     DWORD PTR [ebp+esi*4-0x56],ebp
  40e599:	pop    esp
  40e59a:	packuswb mm0,QWORD PTR [eax+0x7a5b16fe]
  40e5a1:	fisttp WORD PTR [ebp+0xb628efe]
  40e5a7:	mov    ds:0x4693e946,eax
  40e5ac:	js     0x40e5df
  40e5ae:	mov    esi,DWORD PTR [esi]
  40e5b0:	fwait
  40e5b1:	enter  0x6ac2,0xd
  40e5b5:	pop    ebx
  40e5b6:	test   eax,0x9697f827
  40e5bb:	call   0xaf0a:0x62e1c046
  40e5c2:	mov    BYTE PTR [edi+ecx*8-0x48637631],0x7d
  40e5ca:	mov    bl,0x93
  40e5cc:	xchg   edi,eax
  40e5cd:	push   esp
  40e5ce:	into   
  40e5cf:	mov    dl,BYTE PTR [edi-0x229fa059]
  40e5d5:	sub    eax,0x186774ee
  40e5da:	mov    edi,DWORD PTR [eax-0x18]
  40e5dd:	mov    eax,0x2496977b
  40e5e2:	add    eax,0x67499b1c
  40e5e7:	jmp    0xe31c7f03
  40e5ec:	xchg   ebx,eax
  40e5ed:	add    ah,BYTE PTR [edx-0x2552ced]
  40e5f3:	mov    esp,0xacfebc94
  40e5f8:	repz popf 
  40e5fa:	sti    
  40e5fb:	jmp    0x40e657
  40e5fd:	and    bh,bh
  40e5ff:	int3   
  40e600:	(bad)  [edi+0x40132ab9]
  40e606:	shl    DWORD PTR [ecx-0x6d],cl
  40e609:	and    eax,0x8ccd3c6
  40e60e:	pushf  
  40e60f:	mov    al,ds:0x6c232ab
  40e614:	sbb    cl,ah
  40e616:	out    dx,eax
  40e617:	xchg   esp,eax
  40e618:	pop    edi
  40e619:	push   edx
  40e61a:	arpl   si,si
  40e61c:	xor    DWORD PTR [edi-0x27],edi
  40e61f:	das    
  40e620:	punpcklbw mm2,DWORD PTR [ebx+0x59939d24]
  40e627:	rcl    DWORD PTR [edx],cl
  40e629:	or     dh,dl
  40e62b:	pop    ebp
  40e62c:	out    0xd2,al
  40e62e:	sbb    eax,DWORD PTR [ebx-0x5c]
  40e631:	in     al,0x6e
  40e633:	mov    WORD PTR [edx],ss
  40e635:	(bad)  
  40e636:	(bad)  
  40e637:	mov    ebx,0xe5070f75
  40e63c:	popf   
  40e63d:	xor    cl,al
  40e63f:	ins    DWORD PTR es:[edi],dx
  40e640:	daa    
  40e641:	dec    eax
  40e642:	add    eax,0xc2fa78fa
  40e647:	xchg   ebx,eax
  40e648:	into   
  40e649:	xchg   esi,eax
  40e64a:	jno    0x40e5e8
  40e64c:	shl    al,0x9f
  40e64f:	test   ebp,ecx
  40e651:	xchg   ebp,eax
  40e652:	inc    esi
  40e653:	push   ebx
  40e654:	popa   
  40e655:	sub    BYTE PTR [edx-0xa],dh
  40e658:	push   0x1b317a71
  40e65d:	inc    ecx
  40e65e:	es jle 0x40e68a
  40e661:	cmovp  edi,DWORD PTR [ebx]
  40e664:	loopne 0x40e5fa
  40e666:	mov    esi,0x820a0129
  40e66b:	push   cs
  40e66c:	adc    esi,ebx
  40e66e:	jg     0x40e6e4
  40e670:	fstp   QWORD PTR [eax]
  40e672:	jge    0x40e6a9
  40e674:	faddp  st(7),st
  40e676:	cmp    edx,DWORD PTR [ebp+0x29]
  40e679:	fwait
  40e67a:	inc    ecx
  40e67b:	push   ds
  40e67c:	(bad)  
  40e67d:	(bad)  
  40e67e:	das    
  40e67f:	xor    al,0xd5
  40e681:	test   al,0x20
  40e683:	push   esp
  40e684:	pop    edx
  40e685:	pop    ecx
  40e686:	(bad)  
  40e687:	dec    edx
  40e688:	inc    ebx
  40e689:	(bad)  
  40e68b:	scas   al,BYTE PTR es:[edi]
  40e68c:	add    ecx,0xffffffa1
  40e68f:	leave  
  40e690:	xchg   esp,eax
  40e691:	mov    cl,0x6c
  40e693:	stos   BYTE PTR es:[edi],al
  40e694:	or     al,BYTE PTR [eax]
  40e696:	int    0x86
  40e698:	jmp    0x40e6ea
  40e69a:	or     ebx,DWORD PTR [ecx-0x770480a]
  40e6a0:	(bad)  
  40e6a1:	jae    0x40e649
  40e6a3:	pop    eax
  40e6a4:	and    esi,DWORD PTR [esi+0x48]
  40e6a7:	call   FWORD PTR [edx+ebx*8]
  40e6aa:	mov    ds,WORD PTR [ebx+0x20]
  40e6ad:	test   DWORD PTR [eax],edx
  40e6af:	jmp    0xf5df2f55
  40e6b4:	push   ds
  40e6b5:	mov    edx,0x666330a
  40e6ba:	out    0xaa,eax
  40e6bc:	or     edi,DWORD PTR [ebx-0x179162fd]
  40e6c2:	sub    DWORD PTR [ecx-0x24876b00],0xf794a53f
  40e6cc:	int3   
  40e6cd:	jp     0x40e66e
  40e6cf:	gs leave 
  40e6d1:	adc    BYTE PTR [esi-0x66da22d9],ah
  40e6d7:	popf   
  40e6d8:	sbb    ebp,DWORD PTR [esi-0x7e8a1a60]
  40e6de:	shr    cl,1
  40e6e0:	or     al,0x3
  40e6e2:	rcr    DWORD PTR [edi+0x15],cl
  40e6e5:	data16 adc BYTE PTR [ebx+0x72],dl
  40e6e9:	retf   
  40e6ea:	cld    
  40e6eb:	dec    esi
  40e6ec:	call   0x1093:0xdc658421
  40e6f3:	cwde   
  40e6f4:	sub    DWORD PTR [ecx],edi
  40e6f6:	idiv   BYTE PTR [esi+0x455468bd]
  40e6fc:	mov    ch,0x28
  40e6fe:	mov    edi,0xcb19f59d
  40e703:	nop
  40e704:	lds    esi,FWORD PTR [ebx-0x87ba32f]
  40e70a:	(bad)  
  40e70b:	call   0x1af95a18
  40e710:	dec    esi
  40e711:	cmp    eax,0xd87777aa
  40e716:	call   0x44047b17
  40e71b:	gs icebp 
  40e71d:	repz mov ebp,0x4b4d0621
  40e723:	mov    dl,0x96
  40e725:	cli    
  40e726:	sub    esi,edx
  40e728:	mov    cl,0x10
  40e72a:	sti    
  40e72b:	aad    0xc6
  40e72d:	adc    esp,DWORD PTR ds:0xd8eb7f45
  40e733:	les    eax,FWORD PTR ds:0xc2fd0fea
  40e739:	dec    edi
  40e73a:	inc    edx
  40e73b:	sahf   
  40e73c:	cli    
  40e73d:	dec    ax
  40e73f:	adc    esp,DWORD PTR [ecx]
  40e741:	fsubr  DWORD PTR [edx+0xd9ae0a5]
  40e747:	inc    ecx
  40e748:	loope  0x40e749
  40e74a:	(bad)  
  40e74b:	retf   0x885
  40e74e:	out    dx,eax
  40e74f:	scas   eax,DWORD PTR es:[edi]
  40e750:	mov    ah,0x19
  40e752:	mov    al,ds:0x79f1d252
  40e757:	sub    BYTE PTR [ebx+0x20e2cd02],0xe8
  40e75e:	jle    0x40e7be
  40e760:	add    esp,DWORD PTR [edi-0x36]
  40e763:	dec    eax
  40e764:	mov    eax,0xc9687064
  40e769:	or     eax,0xce599068
  40e76e:	jmp    0xe32:0x20648f37
  40e775:	arpl   cx,di
  40e777:	aaa    
  40e778:	xchg   BYTE PTR [edx],bl
  40e77a:	mov    ecx,0x7f1f5c2d
  40e77f:	sbb    al,0x29
  40e781:	int    0x9f
  40e783:	(bad)  
  40e784:	pop    esp
  40e785:	pop    ecx
  40e786:	add    al,0x27
  40e788:	repz mov ecx,0x233db49a
  40e78e:	sub    DWORD PTR [esi],edx
  40e790:	fwait
  40e791:	jnp    0x40e77d
  40e793:	fidivr DWORD PTR [esi+0x1775038a]
  40e799:	cmc    
  40e79a:	push   cs
  40e79b:	fwait
  40e79c:	lds    edi,FWORD PTR [eax-0x29]
  40e79f:	sub    BYTE PTR [ebx-0x55dc647e],0x1d
  40e7a6:	xchg   edi,eax
  40e7a7:	dec    esp
  40e7a8:	jns    0x40e81e
  40e7aa:	sub    eax,0xb2ace769
  40e7af:	xchg   edx,esp
  40e7b1:	push   ebp
  40e7b2:	and    al,0xdb
  40e7b4:	jne    0x40e808
  40e7b6:	add    DWORD PTR [esi],0xffffffbc
  40e7b9:	mov    BYTE PTR [esp+edx*2+0x17],bh
  40e7bd:	popa   
  40e7be:	add    DWORD PTR [edx+0x1b5c8ae9],ecx
  40e7c4:	or     edx,DWORD PTR [edi]
  40e7c6:	adc    esp,DWORD PTR [ecx]
  40e7c8:	test   al,0xfb
  40e7ca:	pushf  
  40e7cb:	fst    st(3)
  40e7cd:	data16 sub al,0x7d
  40e7d0:	repnz push es
  40e7d2:	fdivr  st,st(6)
  40e7d4:	and    al,0xe8
  40e7d6:	mov    WORD PTR [esi],gs
  40e7d8:	cdq    
  40e7d9:	pushf  
  40e7da:	outs   dx,DWORD PTR ds:[esi]
  40e7db:	fadd   st,st(5)
  40e7dd:	or     al,0x88
  40e7df:	aad    0xc4
  40e7e1:	pop    esi
  40e7e2:	ss jno 0x40e7d7
  40e7e5:	retf   0x5b95
  40e7e8:	test   eax,0xe7ec4d36
  40e7ed:	dec    ecx
  40e7ee:	pop    es
  40e7ef:	sar    BYTE PTR [ecx-0xfc92ea1],cl
  40e7f5:	clc    
  40e7f6:	aaa    
  40e7f7:	xor    eax,0x240387db
  40e7fc:	repz mov bl,0xaf
  40e7ff:	cdq    
  40e800:	sub    ebp,edi
  40e802:	xchg   esp,eax
  40e803:	jno    0x40e7e1
  40e805:	sbb    DWORD PTR [eax+ebx*4-0x1d6017ba],esi
  40e80c:	int    0x8
  40e80e:	xchg   esi,eax
  40e80f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e810:	shl    DWORD PTR [ebx+ecx*4-0x1b],0xd7
  40e815:	imul   eax,DWORD PTR [edx-0x41c81735],0xccfb9420
  40e81f:	mov    eax,ds:0xde8d77f
  40e824:	jmp    0xe346:0x79cc53a9
  40e82b:	call   FWORD PTR [ecx+0x8]
  40e82e:	hlt    
  40e82f:	push   0x95dd8a75
  40e834:	or     al,0x8f
  40e836:	lahf   
  40e837:	cmp    ebx,edi
  40e839:	retf   0x353
  40e83c:	idiv   BYTE PTR [ebx-0x49f69f79]
  40e842:	fstp   DWORD PTR [eax+0x5f]
  40e845:	xor    al,0x6a
  40e847:	call   0xb6ffc9e6
  40e84c:	(bad)  
  40e84d:	fcom   DWORD PTR [ecx]
  40e84f:	rol    BYTE PTR [edi],0xa2
  40e852:	rol    ecx,0xe9
  40e855:	(bad)  
  40e856:	xchg   edx,eax
  40e857:	xor    dl,BYTE PTR [edx+eax*1+0xa]
  40e85b:	xor    cl,BYTE PTR [edi+0x5d]
  40e85e:	mov    ah,0xf3
  40e860:	(bad)  
  40e861:	dec    si
  40e863:	sbb    dl,BYTE PTR [ebp-0x4bd44b8b]
  40e869:	cmp    BYTE PTR [edi+edi*4-0x47],0xd
  40e86e:	aas    
  40e86f:	sti    
  40e870:	jae    0x40e86f
  40e872:	cmp    eax,0x6580c6fa
  40e877:	retf   
  40e878:	pop    edi
  40e879:	mov    ebx,0xa13e3ce9
  40e87e:	cmp    eax,ebx
  40e880:	fsubr  QWORD PTR [edi]
  40e882:	hlt    
  40e883:	jns    0x40e857
  40e885:	xchg   ebp,eax
  40e886:	daa    
  40e887:	jecxz  0x40e81d
  40e889:	dec    ebx
  40e88a:	pop    esp
  40e88b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e88c:	cmp    al,0xff
  40e88e:	loop   0x40e8d6
  40e890:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e891:	adc    BYTE PTR [edi+0x36],cl
  40e894:	or     al,0xa8
  40e896:	xlat   BYTE PTR ds:[ebx]
  40e897:	(bad)  
  40e899:	lods   eax,DWORD PTR ds:[esi]
  40e89a:	xor    ebx,DWORD PTR [esi-0x59a858a3]
  40e8a0:	mov    ebp,0xf47c9314
  40e8a5:	push   ebx
  40e8a6:	push   0x73
  40e8a8:	adc    ecx,DWORD PTR [ebx-0x5b]
  40e8ab:	cmp    BYTE PTR [ebx-0xb5f20cb],bl
  40e8b1:	(bad)  
  40e8b2:	inc    edx
  40e8b3:	jo     0x40e83c
  40e8b5:	pop    ebp
  40e8b6:	jb     0x40e86d
  40e8b8:	or     esi,DWORD PTR [edi+0x5c]
  40e8bb:	std    
  40e8bc:	shl    DWORD PTR [eax-0x3a],cl
  40e8bf:	cmp    bh,BYTE PTR [ecx]
  40e8c1:	or     BYTE PTR [ecx],dh
  40e8c3:	and    DWORD PTR [ebx+0x39],edx
  40e8c6:	nop
  40e8c7:	cmp    al,BYTE PTR [edi+0x45cec487]
  40e8cd:	sbb    DWORD PTR [edx+0x74],esp
  40e8d0:	push   ebp
  40e8d1:	inc    esp
  40e8d2:	jmp    0x7b82:0x49dc595d
  40e8d9:	(bad)  
  40e8da:	pushf  
  40e8db:	ror    DWORD PTR [edx],0x8
  40e8de:	jp     0x40e913
  40e8e0:	fcom   QWORD PTR [esi]
  40e8e2:	mov    bl,0x2d
  40e8e4:	dec    esi
  40e8e5:	fisubr WORD PTR [ebp+edi*4+0x614fa05d]
  40e8ec:	daa    
  40e8ed:	push   cs
  40e8ee:	call   0x32e555f0
  40e8f3:	pop    ss
  40e8f4:	psubw  mm6,mm3
  40e8f7:	adc    al,0xd3
  40e8f9:	rol    DWORD PTR [eax+0x615e06a1],1
  40e8ff:	mov    edi,0xc8b7d597
  40e904:	jmp    0x40e95c
  40e906:	jno    0x40e939
  40e908:	(bad)  
  40e909:	in     eax,dx
  40e90a:	call   0x92d7:0x2c6df9e6
  40e911:	sub    ah,bl
  40e913:	sub    dl,BYTE PTR ds:0x6a9be438
  40e919:	out    dx,eax
  40e91a:	mov    eax,ds:0x78782847
  40e91f:	pop    ecx
  40e920:	mov    BYTE PTR [esi],al
  40e922:	ret    0xb422
  40e925:	add    eax,DWORD PTR [eax+0x44]
  40e928:	jle    0x40e971
  40e92a:	test   edi,esp
  40e92c:	test   DWORD PTR [eax],edi
  40e92e:	cmp    BYTE PTR [ecx+esi*4],0x57
  40e932:	pop    edi
  40e933:	pop    ebx
  40e934:	sub    ah,ch
  40e936:	cs ins BYTE PTR es:[edi],dx
  40e938:	fsub   DWORD PTR [ecx]
  40e93a:	pusha  
  40e93b:	leave  
  40e93c:	in     eax,dx
  40e93d:	cdq    
  40e93e:	fcomi  st,st(2)
  40e940:	pop    edx
  40e941:	sub    al,0xb9
  40e943:	lahf   
  40e944:	in     al,0x19
  40e946:	(bad)  
  40e947:	xor    al,0x2b
  40e949:	dec    esp
  40e94a:	mov    dl,0x62
  40e94c:	js     0x40e924
  40e94e:	inc    ebx
  40e94f:	cmp    al,0x5
  40e951:	mul    BYTE PTR [ecx+0x58]
  40e954:	sbb    ch,BYTE PTR [edx+0x46f15292]
  40e95a:	adc    BYTE PTR [eax],bh
  40e95c:	dec    esp
  40e95d:	fwait
  40e95e:	int    0x1f
  40e960:	push   ebx
  40e961:	mov    ebp,0xfe8b73f6
  40e966:	cdq    
  40e967:	das    
  40e968:	xchg   ebp,eax
  40e969:	outs   dx,DWORD PTR ds:[esi]
  40e96a:	out    dx,eax
  40e96b:	mov    DWORD PTR [ebx+0x2b6f552c],eax
  40e971:	loop   0x40e944
  40e973:	xchg   DWORD PTR [esi-0x59],ebx
  40e976:	gs sub eax,0xfbbbfff9
  40e97c:	add    esp,DWORD PTR [eax+0x55859204]
  40e982:	sbb    dh,BYTE PTR [edi]
  40e984:	cmp    cl,dh
  40e986:	(bad)  
  40e987:	mov    ch,0x58
  40e989:	pop    ecx
  40e98a:	repz int3 
  40e98c:	xchg   ecx,eax
  40e98d:	int3   
  40e98e:	je     0x40e9d7
  40e990:	dec    eax
  40e991:	iret   
  40e992:	hlt    
  40e993:	cld    
  40e994:	xchg   DWORD PTR [edi],eax
  40e996:	pop    esi
  40e997:	xchg   ecx,eax
  40e998:	jecxz  0x40e9b5
  40e99a:	lods   eax,DWORD PTR ds:[esi]
  40e99b:	sahf   
  40e99c:	fcomp  st(2)
  40e99e:	pop    eax
  40e99f:	or     ch,BYTE PTR [edi+0x73]
  40e9a2:	sbb    ah,BYTE PTR [edi-0x114f980]
  40e9a8:	daa    
  40e9a9:	jp     0x40e96c
  40e9ab:	lods   eax,DWORD PTR ds:[esi]
  40e9ac:	addr16 inc edi
  40e9ae:	in     al,dx
  40e9af:	lods   eax,DWORD PTR ds:[esi]
  40e9b0:	mov    BYTE PTR [eax],bh
  40e9b2:	pop    edi
  40e9b3:	mov    al,BYTE PTR ds:0x14416b5d
  40e9b9:	add    dl,BYTE PTR [ebp-0x46]
  40e9bc:	and    al,0xf4
  40e9be:	and    DWORD PTR [ecx-0x70c806a9],0xc9714d9
  40e9c8:	das    
  40e9c9:	push   es
  40e9ca:	fild   DWORD PTR [edi]
  40e9cc:	push   ecx
  40e9cd:	nop
  40e9ce:	mov    dh,BYTE PTR [edi]
  40e9d0:	out    dx,eax
  40e9d1:	dec    eax
  40e9d2:	out    0xd1,al
  40e9d4:	in     al,dx
  40e9d5:	add    ebx,DWORD PTR [ecx]
  40e9d7:	hlt    
  40e9d8:	and    esp,edi
  40e9da:	in     eax,dx
  40e9db:	xchg   esi,eax
  40e9dc:	shr    bh,cl
  40e9de:	test   DWORD PTR [esi+0xe],esi
  40e9e1:	ficom  DWORD PTR [eax-0x3d38e51a]
  40e9e7:	pop    ds
  40e9e8:	inc    edx
  40e9e9:	xor    bp,WORD PTR [ecx]
  40e9ec:	xchg   edi,eax
  40e9ed:	xchg   DWORD PTR [eax],esp
  40e9ef:	sub    cl,BYTE PTR [edx+0x7d]
  40e9f2:	fwait
  40e9f3:	ins    BYTE PTR es:[edi],dx
  40e9f4:	div    BYTE PTR [edi+0x41]
  40e9f7:	jne    0x40e9c9
  40e9f9:	and    ebp,ebx
  40e9fb:	inc    edi
  40e9fc:	cli    
  40e9fd:	cmp    al,BYTE PTR [esi-0xf]
  40ea00:	mov    cl,0x2e
  40ea02:	mov    edx,0xd32ef6e
  40ea07:	dec    ebp
  40ea08:	sar    DWORD PTR [esi],cl
  40ea0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea0b:	psllq  mm2,QWORD PTR [ebp+0x46b9149c]
  40ea12:	loopne 0x40e9aa
  40ea14:	push   eax
  40ea15:	loop   0x40e9db
  40ea17:	pushf  
  40ea18:	mov    ds:0xf92114db,eax
  40ea1d:	pop    ds
  40ea1e:	loopne 0x40ea65
  40ea20:	mov    ah,0x70
  40ea22:	stos   BYTE PTR es:[edi],al
  40ea23:	out    dx,al
  40ea24:	ins    BYTE PTR es:[edi],dx
  40ea25:	lock push eax
  40ea27:	mov    eax,DWORD PTR [ebp+0xd]
  40ea2a:	or     eax,DWORD PTR [edi+0x64]
  40ea2d:	add    edx,edx
  40ea2f:	and    ebp,edx
  40ea31:	stc    
  40ea32:	or     DWORD PTR [ebx+0x12],ecx
  40ea35:	out    0x61,al
  40ea37:	mov    dl,0x46
  40ea39:	cmc    
  40ea3a:	iret   
  40ea3b:	es jae 0x40ea88
  40ea3e:	sbb    al,0x5c
  40ea40:	jg     0x40ea1d
  40ea42:	push   ebp
  40ea43:	mov    bl,0x5f
  40ea45:	repnz push edx
  40ea47:	push   cs
  40ea48:	sbb    cl,ah
  40ea4a:	jno    0x40eabf
  40ea4c:	sub    BYTE PTR [ebp+ecx*8-0x61883041],bl
  40ea53:	imul   esi,DWORD PTR [eax],0xffffffb3
  40ea56:	mov    cl,0x1a
  40ea58:	imul   ebx,DWORD PTR [ebp+eiz*4+0x3d],0x3d
  40ea5d:	jge    0x40ea24
  40ea5f:	fucomi st,st(0)
  40ea61:	into   
  40ea62:	dec    esp
  40ea63:	push   edx
  40ea64:	ins    DWORD PTR es:[edi],dx
  40ea65:	mov    esi,DWORD PTR fs:[eax+0x64]
  40ea69:	(bad)  
  40ea6a:	sub    al,0x48
  40ea6c:	dec    edx
  40ea6d:	jge    0x40eab3
  40ea6f:	je     0x40ea90
  40ea71:	rol    DWORD PTR [ecx+0x575d1b62],cl
  40ea77:	(bad)  
  40ea78:	(bad)  [ecx+0x3f]
  40ea7b:	or     ch,BYTE PTR [edx+0x74]
  40ea7e:	and    eax,0x106bf56e
  40ea83:	pop    edx
  40ea84:	mov    ds:0x8ae1d1fe,al
  40ea89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea8a:	adc    BYTE PTR [eax+ebx*4-0x4b9c6d70],al
  40ea91:	xchg   DWORD PTR [edx-0x14a11fc2],eax
  40ea97:	arpl   WORD PTR [ecx+ecx*1-0x36],sp
  40ea9b:	leave  
  40ea9c:	outs   dx,DWORD PTR ds:[esi]
  40ea9d:	push   edx
  40ea9e:	out    0x2d,eax
  40eaa0:	(bad)  
  40eaa1:	(bad)  
  40eaa2:	xchg   ebp,eax
  40eaa3:	loop   0x40ea7c
  40eaa5:	in     al,0x2e
  40eaa7:	pop    ecx
  40eaa8:	mov    ds:0xe4c4112d,al
  40eaad:	pusha  
  40eaae:	stc    
  40eaaf:	dec    edx
  40eab0:	adc    ebp,DWORD PTR [esi]
  40eab2:	(bad)  
  40eab3:	mov    bl,al
  40eab5:	mov    esi,0x4dd1386f
  40eaba:	cmc    
  40eabb:	imul   ebx,DWORD PTR [eax+0xd235df7],0x5f
  40eac2:	pop    edx
  40eac3:	cli    
  40eac4:	outs   dx,BYTE PTR ds:[esi]
  40eac5:	push   eax
  40eac6:	xor    cl,BYTE PTR [edx]
  40eac8:	enter  0x86d3,0x54
  40eacc:	(bad)  
  40eacd:	cmc    
  40eace:	sbb    DWORD PTR [ecx*2+0x6cb73989],esi
  40ead5:	ret    0xba9c
  40ead8:	adc    DWORD PTR [edi+0x28],edi
  40eadb:	lock jnp 0x40eb4f
  40eade:	xchg   ebx,eax
  40eadf:	(bad)  
  40eae1:	push   0x73
  40eae3:	scas   al,BYTE PTR es:[edi]
  40eae4:	jne    0x40eb36
  40eae6:	js     0x40eaa5
  40eae8:	inc    esi
  40eae9:	inc    edi
  40eaea:	inc    ecx
  40eaeb:	push   eax
  40eaec:	xor    ch,0x93
  40eaef:	loopne 0x40eb68
  40eaf1:	pop    edi
  40eaf2:	shr    DWORD PTR [edx-0x501dfbcb],0x46
  40eaf9:	in     al,dx
  40eafa:	outs   dx,DWORD PTR ds:[esi]
  40eafb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eafc:	pop    esp
  40eafd:	(bad)  
  40eafe:	bnd ja 0x40eabe
  40eb01:	gs push ecx
  40eb03:	popf   
  40eb04:	stos   BYTE PTR es:[edi],al
  40eb05:	mov    ebx,DWORD PTR [edi-0x32387275]
  40eb0b:	xchg   edi,eax
  40eb0c:	sub    DWORD PTR [edx],ebx
  40eb0e:	nop
  40eb0f:	in     al,0x59
  40eb11:	jno    0x40eb49
  40eb13:	sbb    BYTE PTR [ebx+0x3913563c],cl
  40eb19:	imul   ebx,DWORD PTR [ebx],0x47
  40eb1c:	xchg   esi,eax
  40eb1d:	sar    edi,cl
  40eb1f:	ror    DWORD PTR [edx+esi*2],1
  40eb22:	jnp    0x40eaaf
  40eb24:	dec    ebp
  40eb25:	push   edi
  40eb26:	leave  
  40eb27:	sub    al,BYTE PTR [edx+0x4d898d88]
  40eb2d:	push   ds
  40eb2e:	jg     0x40eb01
  40eb30:	stos   DWORD PTR es:[edi],eax
  40eb31:	loop   0x40eaf6
  40eb33:	xchg   ebx,eax
  40eb34:	jle    0x40eac9
  40eb36:	int3   
  40eb37:	stos   DWORD PTR es:[edi],eax
  40eb38:	int3   
  40eb39:	scas   eax,DWORD PTR es:[edi]
  40eb3a:	jmp    0x5ce9e988
  40eb3f:	cmp    DWORD PTR [eax+0x4c],ebx
  40eb42:	and    BYTE PTR [eax-0x7c],ch
  40eb45:	xor    BYTE PTR [eax+0x19721cb9],0xf8
  40eb4c:	adc    eax,0xaaefb7b6
  40eb51:	nop
  40eb52:	imul   edx,DWORD PTR [ecx],0x75313f2
  40eb58:	push   esp
  40eb59:	xchg   esi,eax
  40eb5a:	adc    ecx,DWORD PTR [ebx]
  40eb5c:	sbb    bl,ah
  40eb5e:	jno    0x40ebaa
  40eb60:	data16 ja 0x40eafc
  40eb63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb64:	or     al,0xd4
  40eb66:	pop    ebp
  40eb67:	stc    
  40eb68:	test   dl,0x85
  40eb6b:	adc    DWORD PTR [ecx+0x7],ecx
  40eb6e:	inc    esi
  40eb6f:	xchg   DWORD PTR [ebx-0x44],esi
  40eb72:	push   ebx
  40eb73:	jle    0x40ebe8
  40eb75:	es xchg edi,eax
  40eb77:	xor    ebp,DWORD PTR [ebp+0x1e]
  40eb7a:	clc    
  40eb7b:	xor    bl,ah
  40eb7d:	xor    BYTE PTR [ebp+0x53],ch
  40eb80:	dec    esi
  40eb81:	sbb    dl,al
  40eb83:	adc    bh,bh
  40eb85:	mov    ds:0xb5a8e68b,eax
  40eb8a:	xchg   BYTE PTR [ebp+0x408cc86e],ch
  40eb90:	jg     0x40eb77
  40eb92:	cmp    bl,0x27
  40eb95:	push   ebx
  40eb96:	cs dec edi
  40eb98:	pop    es
  40eb99:	mov    al,0xe6
  40eb9b:	and    eax,0x7a0ddd9c
  40eba0:	ja     0x40eb5e
  40eba2:	mov    BYTE PTR [eax+ecx*4],al
  40eba5:	fwait
  40eba6:	in     al,0x69
  40eba8:	jp     0x40ec16
  40ebaa:	adc    eax,0xd8833a0
  40ebaf:	enter  0x2c30,0x7a
  40ebb3:	lods   eax,DWORD PTR ds:[esi]
  40ebb4:	ins    DWORD PTR es:[edi],dx
  40ebb5:	out    0x72,eax
  40ebb7:	and    al,0x23
  40ebb9:	xchg   ebp,eax
  40ebba:	(bad)  
  40ebbb:	rol    BYTE PTR [ecx-0x52],cl
  40ebbe:	aas    
  40ebbf:	test   DWORD PTR [ecx+0x2b094e86],edi
  40ebc5:	xchg   edx,eax
  40ebc6:	lods   al,BYTE PTR ds:[esi]
  40ebc7:	int3   
  40ebc8:	push   edx
  40ebc9:	mov    al,0x5f
  40ebcb:	sar    BYTE PTR [ebx+0x1875603c],1
  40ebd1:	dec    ecx
  40ebd2:	dec    eax
  40ebd3:	pop    eax
  40ebd4:	adc    DWORD PTR [ecx+edi*8-0x1d],0xffffffcb
  40ebd9:	fistp  QWORD PTR [edx+esi*8+0x15e3c844]
  40ebe0:	adc    BYTE PTR [esi-0x64],ch
  40ebe3:	ficomp WORD PTR [ebp-0x59]
  40ebe6:	add    DWORD PTR [edx+0x5551307b],esp
  40ebec:	jg     0x40ec37
  40ebee:	pop    esi
  40ebef:	das    
  40ebf0:	clc    
  40ebf1:	pop    esp
  40ebf2:	jl     0x40eba7
  40ebf4:	jecxz  0x40ec58
  40ebf6:	sbb    DWORD PTR [edi],esi
  40ebf8:	rcr    cl,0xd9
  40ebfb:	mov    ecx,DWORD PTR [ecx+0x30]
  40ebfe:	test   DWORD PTR [ebp+ecx*1+0x54],edi
  40ec02:	lods   al,BYTE PTR ds:[esi]
  40ec03:	test   DWORD PTR [edi+0x39],ecx
  40ec06:	js     0x40ebec
  40ec08:	gs xor edx,ecx
  40ec0b:	adc    bh,BYTE PTR [eax]
  40ec0d:	sar    edi,1
  40ec0f:	jmp    0xd9f24189
  40ec14:	fdivr  st,st(3)
  40ec16:	mov    ds:0xdbf7e46b,al
  40ec1b:	mov    al,ds:0x34aff266
  40ec20:	sub    al,BYTE PTR [ecx+0x3d]
  40ec23:	outs   dx,BYTE PTR ds:[esi]
  40ec24:	fcmovnbe st,st(7)
  40ec26:	popa   
  40ec27:	cmc    
  40ec28:	dec    edx
  40ec29:	scas   eax,DWORD PTR es:[edi]
  40ec2a:	int    0xbc
  40ec2c:	(bad)  
  40ec2d:	or     eax,0xb7663856
  40ec32:	adc    bh,BYTE PTR [esi-0xb73d8a4]
  40ec38:	xor    bh,BYTE PTR [ecx-0x51]
  40ec3b:	pop    ebx
  40ec3c:	shl    BYTE PTR [edi],0x3a
  40ec3f:	jb     0x40ec4c
  40ec41:	in     al,0x7
  40ec43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec44:	(bad)  
  40ec45:	sbb    ecx,DWORD PTR [eax+0xf8568fa]
  40ec4b:	(bad)  
  40ec4c:	fdiv   st,st(5)
  40ec4e:	xor    al,al
  40ec50:	sub    al,0xc6
  40ec52:	fistp  QWORD PTR [esi]
  40ec54:	xor    al,0xf9
  40ec56:	push   esp
  40ec57:	shr    esp,0x61
  40ec5a:	xchg   esi,eax
  40ec5b:	in     eax,dx
  40ec5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec5d:	cmp    dl,ch
  40ec5f:	inc    ecx
  40ec60:	mov    bh,bh
  40ec62:	pop    eax
  40ec63:	aaa    
  40ec64:	or     DWORD PTR [ebx],ebx
  40ec66:	pop    ebp
  40ec67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec68:	xchg   edx,esp
  40ec6a:	cs scas al,BYTE PTR es:[edi]
  40ec6c:	sbb    BYTE PTR [eax+0x0],bh
  40ec6f:	imul   esp,DWORD PTR [esp+ecx*1]
  40ec73:	test   DWORD PTR [eax+eiz*4-0x1c],ecx
  40ec77:	push   es
  40ec78:	sub    edi,edi
  40ec7a:	pop    eax
  40ec7b:	call   0xe0d:0x9bd60913
  40ec82:	push   eax
  40ec83:	sub    eax,0xbb9cdfce
  40ec88:	inc    esi
  40ec89:	call   DWORD PTR [ecx-0x77]
  40ec8c:	aam    0x83
  40ec8e:	(bad)  
  40ec8f:	jge    0x40ec8a
  40ec91:	out    dx,al
  40ec92:	mov    esp,0xf901964
  40ec97:	(bad)  
  40ec98:	cdq    
  40ec99:	pop    ss
  40ec9a:	add    DWORD PTR [eax],edx
  40ec9c:	std    
  40ec9d:	push   esi
  40ec9e:	retf   0xd069
  40eca1:	imul   edx,DWORD PTR [esi+0x84e9a20],0xfffffff5
  40eca8:	jmp    0x40ecab
  40ecaa:	mov    edx,0x716d2885
  40ecaf:	mov    WORD PTR [edi],fs
  40ecb1:	adc    BYTE PTR ds:0xcc8cefbf,dl
  40ecb7:	ins    DWORD PTR es:[edi],dx
  40ecb8:	mov    dl,dh
  40ecba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ecbb:	pushf  
  40ecbc:	jb     0x40ed01
  40ecbe:	push   es
  40ecbf:	inc    ebp
  40ecc1:	cdq    
  40ecc2:	jmp    0x13d886d0
  40ecc7:	fs or  dl,dh
  40ecca:	mov    ch,0xd8
  40eccc:	dec    ebx
  40eccd:	inc    esp
  40ecce:	pop    ds
  40eccf:	add    al,0x18
  40ecd1:	push   esi
  40ecd2:	push   ss
  40ecd3:	xlat   BYTE PTR gs:[ebx]
  40ecd5:	stc    
  40ecd6:	stc    
  40ecd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ecd8:	dec    esi
  40ecd9:	daa    
  40ecda:	ins    BYTE PTR es:[edi],dx
  40ecdb:	imul   esp,esi,0xffffff82
  40ecde:	mov    ebp,0xe972911e
  40ece3:	dec    BYTE PTR [ecx+ecx*4-0x57]
  40ece7:	rcr    bh,cl
  40ece9:	jno    0x40ed29
  40eceb:	inc    ebx
  40ecec:	sub    BYTE PTR [ebx+0x175cb4ea],ah
  40ecf2:	sub    DWORD PTR [edx+0x1f],esi
  40ecf5:	and    ch,BYTE PTR [edx-0x26]
  40ecf8:	ret    0x81d
  40ecfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ecfc:	mov    eax,ds:0x1a987a76
  40ed01:	(bad)  
  40ed02:	jbe    0x40ed2a
  40ed04:	sbb    al,0x38
  40ed06:	ss rcl dl,cl
  40ed09:	sbb    DWORD PTR [esi-0x36],esi
  40ed0c:	aam    0x68
  40ed0e:	xchg   esi,eax
  40ed0f:	inc    ebx
  40ed10:	std    
  40ed11:	or     edx,edi
  40ed13:	push   0xe7aae4f
  40ed18:	dec    ebx
  40ed19:	mov    bh,0x48
  40ed1b:	inc    esi
  40ed1c:	or     BYTE PTR [esi-0x1ce1d3ce],bl
  40ed22:	xchg   ecx,eax
  40ed23:	das    
  40ed24:	daa    
  40ed25:	in     eax,dx
  40ed26:	sbb    edx,DWORD PTR [ebx]
  40ed28:	adc    DWORD PTR [edx+edi*1],ecx
  40ed2b:	push   esi
  40ed2c:	repz (bad) [esi-0x38724290]
  40ed33:	(bad)  
  40ed34:	mov    ebx,0x73c2691a
  40ed39:	lds    esi,FWORD PTR [ebp-0x14]
  40ed3c:	jae    0x40ecd5
  40ed3e:	bound  eax,QWORD PTR [eax+0x6ed5040d]
  40ed44:	int3   
  40ed45:	retf   
  40ed46:	jle    0x40ed02
  40ed48:	(bad)  
  40ed4a:	xor    eax,DWORD PTR [edx+0x6e48aad4]
  40ed50:	pop    edi
  40ed51:	or     DWORD PTR [edx+0x5808eb60],esp
  40ed57:	hlt    
  40ed58:	popf   
  40ed59:	aam    0xfd
  40ed5b:	mov    ah,0x79
  40ed5d:	jge    0x40edae
  40ed5f:	cmp    al,0xe8
  40ed61:	sbb    DWORD PTR fs:[ebx+0x1d725155],edi
  40ed68:	mov    WORD PTR [ebp-0x14992180],gs
  40ed6e:	or     ah,bl
  40ed70:	dec    edi
  40ed71:	sysenter 
  40ed73:	rol    DWORD PTR [esi],cl
  40ed75:	push   cs
  40ed76:	(bad)  
  40ed77:	stos   DWORD PTR es:[edi],eax
  40ed78:	inc    edx
  40ed79:	in     al,0xea
  40ed7b:	cli    
  40ed7c:	adc    al,0x4b
  40ed7e:	jle    0x40ed57
  40ed80:	ins    BYTE PTR es:[edi],dx
  40ed81:	or     esp,ecx
  40ed83:	mov    ds:0x7c80b767,eax
  40ed88:	ss push esi
  40ed8a:	fiadd  DWORD PTR [edx]
  40ed8d:	sbb    eax,0x792b80f3
  40ed92:	push   ecx
  40ed93:	lds    ebx,FWORD PTR [esp+edx*8-0x22c305c7]
  40ed9a:	mov    dl,0x78
  40ed9c:	lahf   
  40ed9d:	push   ds
  40ed9e:	aas    
  40ed9f:	push   edi
  40eda0:	and    al,0x81
  40eda2:	and    cl,al
  40eda4:	(bad)  
  40eda5:	daa    
  40eda6:	fdiv   QWORD PTR ds:0x327ea714
  40edac:	shr    BYTE PTR [esi],cl
  40edae:	mov    al,0x1
  40edb0:	dec    esi
  40edb1:	call   0x3904b5ef
  40edb6:	cmp    DWORD PTR [esi-0x7e],edi
  40edb9:	mov    ds:0x88b4dd2d,al
  40edbe:	and    eax,0x848d4810
  40edc3:	daa    
  40edc4:	xchg   esi,eax
  40edc5:	call   0xca37758b
  40edca:	inc    esp
  40edcb:	mov    ebx,0xd3671f6d
  40edd0:	pop    ebp
  40edd1:	sbb    ch,BYTE PTR [esi-0x77e4abde]
  40edd7:	jle    0x40ee48
  40edd9:	(bad)  
  40edda:	out    0x7e,al
  40eddc:	mov    ecx,0x92ce3c52
  40ede1:	test   al,0x8
  40ede3:	push   ss
  40ede4:	sbb    DWORD PTR [edx],edi
  40ede6:	pushf  
  40ede7:	mov    esi,0x614cceb
  40edec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eded:	push   ebx
  40edee:	in     eax,0x32
  40edf0:	pop    ebp
  40edf1:	loopne 0x40ee5b
  40edf3:	das    
  40edf4:	and    al,0x41
  40edf6:	lods   eax,DWORD PTR ds:[esi]
  40edf7:	pop    edx
  40edf8:	stos   BYTE PTR es:[edi],al
  40edf9:	inc    esi
  40edfa:	add    DWORD PTR [ebp-0x69],edx
  40edfd:	aam    0x25
  40edff:	or     ch,0xcf
  40ee02:	dec    edx
  40ee04:	mov    edx,0xd4915386
  40ee09:	in     al,0x71
  40ee0b:	sub    DWORD PTR [ecx-0x75],ebx
  40ee0e:	jl     0x40edd0
  40ee10:	in     eax,0x1d
  40ee12:	adc    eax,0xfd46a2ff
  40ee17:	inc    ecx
  40ee18:	sub    ecx,DWORD PTR [eax+0x3c47ac7b]
  40ee1e:	xor    bh,dl
  40ee20:	mov    ds:0xd20d21b0,eax
  40ee25:	jb     0x40edf8
  40ee27:	sbb    bl,BYTE PTR [eax+0x2cf737a1]
  40ee2d:	xor    al,0xbe
  40ee2f:	push   eax
  40ee30:	sahf   
  40ee31:	push   esp
  40ee32:	sbb    ebx,DWORD PTR [esp+eax*8+0x6a13b683]
  40ee39:	sbb    al,0x90
  40ee3b:	push   ebx
  40ee3c:	aaa    
  40ee3d:	xchg   ecx,eax
  40ee3e:	xchg   edx,eax
  40ee3f:	sub    eax,esi
  40ee41:	ror    bh,cl
  40ee43:	div    BYTE PTR [esi]
  40ee45:	dec    esp
  40ee46:	push   edi
  40ee47:	jno    0x40eeb9
  40ee49:	hlt    
  40ee4a:	(bad)  
  40ee4b:	push   ds
  40ee4c:	xor    al,0x72
  40ee4e:	push   0x18
  40ee50:	jmp    DWORD PTR [ebx-0x48]
  40ee53:	jl     0x40ee1f
  40ee55:	mov    edx,DWORD PTR [ebp-0x6a]
  40ee58:	fsubr  DWORD PTR [ecx-0x3]
  40ee5b:	daa    
  40ee5c:	push   edi
  40ee5d:	mov    eax,ds:0xf0f7e351
  40ee62:	mov    bh,0xd2
  40ee64:	inc    ebx
  40ee65:	mov    eax,edx
  40ee67:	mov    ah,0x7d
  40ee69:	fimul  WORD PTR [ebx]
  40ee6b:	cmp    al,0x3f
  40ee6d:	cld    
  40ee6e:	push   cs
  40ee6f:	push   edx
  40ee70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee71:	adc    ah,BYTE PTR [ebp+0x3545ac6b]
  40ee77:	div    BYTE PTR [ebx+eiz*8-0x7]
  40ee7b:	les    esi,FWORD PTR [eax+0x2f2d6302]
  40ee81:	xchg   esp,eax
  40ee82:	xchg   edi,eax
  40ee83:	and    BYTE PTR [edx-0x5ff3382e],ch
  40ee89:	shr    DWORD PTR ds:0x3b0c6dc4,0x8a
  40ee90:	pop    ds
  40ee91:	pusha  
  40ee92:	cld    
  40ee93:	pcmpgtw mm5,QWORD PTR ds:0x41a795f2
  40ee9a:	retf   
  40ee9b:	jns    0x40ee27
  40ee9d:	adc    DWORD PTR [edi],ecx
  40ee9f:	loopne 0x40ee7c
  40eea1:	or     ah,BYTE PTR [ebp-0x3f]
  40eea4:	aam    0xa0
  40eea6:	add    dh,al
  40eea8:	daa    
  40eea9:	leave  
  40eeaa:	sti    
  40eeab:	inc    edx
  40eeac:	pop    esi
  40eead:	ins    DWORD PTR es:[edi],dx
  40eeae:	xor    eax,0xb118f229
  40eeb3:	outs   dx,BYTE PTR ds:[esi]
  40eeb4:	mov    ebx,esi
  40eeb6:	sub    al,0x9
  40eeb8:	add    eax,0x98907c1d
  40eebd:	mov    DWORD PTR gs:[esi-0xd7a3837],edi
  40eec4:	mov    BYTE PTR [esi+0x7ba2dccd],al
  40eeca:	cmc    
  40eecb:	mov    ah,0x8a
  40eecd:	inc    ebp
  40eece:	pop    ebp
  40eecf:	dec    eax
  40eed0:	push   eax
  40eed1:	aaa    
  40eed2:	inc    ecx
  40eed3:	test   al,0xe2
  40eed5:	cli    
  40eed6:	cs ins BYTE PTR es:[edi],dx
  40eed8:	call   0xd2519cf1
  40eedd:	add    eax,0xd480036f
  40eee2:	mov    dh,0x19
  40eee4:	inc    esi
  40eee5:	idiv   DWORD PTR [edx-0x494c03a8]
  40eeeb:	or     al,0xca
  40eeed:	pushf  
  40eeee:	adc    al,0xef
  40eef0:	int    0xda
  40eef2:	sub    bh,BYTE PTR [edi-0x48]
  40eef5:	add    bl,bl
  40eef7:	sbb    eax,0xde2e2ee7
  40eefc:	(bad)  
  40eefd:	xor    eax,0x42997e66
  40ef02:	inc    esp
  40ef03:	imul   eax,ecx,0xd968f5e2
  40ef09:	int3   
  40ef0a:	mov    bl,0x1b
  40ef0c:	sub    eax,0xfba49245
  40ef11:	cs iret 
  40ef13:	(bad)  
  40ef14:	pop    ss
  40ef15:	data16 jns 0x40ef00
  40ef18:	test   DWORD PTR [ecx-0x6f1ad317],ecx
  40ef1e:	js     0x40ef03
  40ef20:	xchg   esp,eax
  40ef21:	jnp    0x40ef55
  40ef23:	shr    eax,cl
  40ef25:	loope  0x40eef3
  40ef27:	add    al,BYTE PTR [edx-0x40]
  40ef2a:	cdq    
  40ef2b:	adc    al,0x60
  40ef2d:	cmc    
  40ef2e:	stc    
  40ef2f:	stc    
  40ef30:	outs   dx,BYTE PTR ds:[esi]
  40ef31:	dec    ebx
  40ef32:	sbb    BYTE PTR [edi+0x6606e368],ch
  40ef38:	and    edx,DWORD PTR [eax]
  40ef3a:	xor    edi,edi
  40ef3c:	ins    BYTE PTR es:[edi],dx
  40ef3d:	pushf  
  40ef3e:	ja     0x40ef59
  40ef40:	cdq    
  40ef41:	mov    ebp,0x25533e40
  40ef46:	outs   dx,DWORD PTR ds:[esi]
  40ef47:	nop
  40ef48:	clc    
  40ef49:	(bad)  
  40ef4a:	inc    ecx
  40ef4b:	xchg   edx,eax
  40ef4c:	adc    ah,BYTE PTR [eax+ecx*1+0x434d2e60]
  40ef53:	es push ebx
  40ef55:	mov    ?,WORD PTR [ebx-0x71076c32]
  40ef5b:	xchg   BYTE PTR [ebx-0x44cb7bce],dl
  40ef61:	(bad)  
  40ef62:	ret    
  40ef63:	lods   eax,DWORD PTR ds:[esi]
  40ef64:	pop    eax
  40ef65:	(bad)  
  40ef66:	xor    al,0xf4
  40ef68:	outs   dx,BYTE PTR ds:[esi]
  40ef69:	mov    ch,0x10
  40ef6b:	sbb    ah,BYTE PTR [eax+0x60b8ec74]
  40ef71:	mov    al,ds:0xe0d0febf
  40ef76:	push   ebx
  40ef77:	cmp    BYTE PTR [esi+0x2eab3997],dh
  40ef7d:	fwait
  40ef7e:	push   ecx
  40ef7f:	push   esp
  40ef80:	test   DWORD PTR [ebp+0x52df6f46],ebx
  40ef86:	mov    bl,0x34
  40ef88:	pop    ss
  40ef89:	xchg   esi,eax
  40ef8a:	lock xchg edi,eax
  40ef8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef8d:	sub    al,0xf3
  40ef8f:	loop   0x40ef9e
  40ef91:	mov    ah,BYTE PTR [ebx]
  40ef93:	xchg   BYTE PTR [edx-0x4c316fde],ah
  40ef99:	inc    ecx
  40ef9a:	rol    BYTE PTR ds:0xb884442d,0x56
  40efa1:	mov    edx,DWORD PTR [esi-0x6d]
  40efa4:	push   ebx
  40efa5:	xor    esp,DWORD PTR ds:0x15d144c6
  40efab:	mov    edi,0xa28b39f6
  40efb0:	fcmovnbe st,st(6)
  40efb2:	(bad)  
  40efb3:	ja     0x40eff5
  40efb5:	shl    BYTE PTR [eax+0x27],0xbd
  40efb9:	push   ecx
  40efba:	jecxz  0x40efb1
  40efbc:	aad    0x9a
  40efbe:	mov    ah,0x70
  40efc0:	mov    cl,0xaa
  40efc2:	cmc    
  40efc3:	and    edi,esi
  40efc5:	or     esp,0x88ca9b3f
  40efcb:	add    BYTE PTR [edi],dl
  40efcd:	pop    edi
  40efce:	mov    edi,0xad67c2af
  40efd3:	call   0x4d46:0x7e6b6b27
  40efda:	xor    eax,ebp
  40efdc:	add    al,0x96
  40efde:	xchg   DWORD PTR [eax+0x69],esi
  40efe1:	call   0xc33f:0x8876dfb9
  40efe8:	jmp    0xf77d5c47
  40efed:	mov    eax,ds:0x46a596a
  40eff2:	fs sub ebx,ebx
  40eff5:	jp     0x40f071
  40eff7:	retf   
  40eff8:	rol    BYTE PTR [ecx+0x8eb2927],1
  40effe:	sbb    BYTE PTR [edx],bl
  40f000:	inc    ecx
  40f001:	xlat   BYTE PTR ds:[ebx]
  40f002:	int3   
  40f003:	fwait
  40f004:	lahf   
  40f005:	rcl    DWORD PTR [edi],1
  40f007:	sub    eax,0x66aefb55
  40f00c:	xor    al,0x3b
  40f00e:	mov    ecx,0xc4ec9d79
  40f013:	outs   dx,DWORD PTR ds:[esi]
  40f014:	pushf  
  40f015:	(bad)  
  40f016:	fstp   TBYTE PTR [edx+0x4d53bc3]
  40f01c:	and    eax,0x1a758c20
  40f021:	push   edi
  40f022:	ret    0x55ef
  40f025:	mov    dl,0x44
  40f027:	xchg   esi,eax
  40f028:	loope  0x40f070
  40f02a:	call   0x1d05:0xf1b9c3c0
  40f031:	test   DWORD PTR [esi+0x2b],ebx
  40f034:	rol    DWORD PTR [edi],1
  40f036:	xor    BYTE PTR ds:0x8eae4b04,bh
  40f03c:	mov    esi,0x655e1508
  40f041:	sbb    al,0x15
  40f043:	pop    edx
  40f044:	mov    cl,0x1
  40f046:	es mov dh,0x77
  40f049:	mov    ecx,0x6fbb9182
  40f04e:	dec    edi
  40f04f:	jecxz  0x40f092
  40f051:	imul   eax,ebx,0x79
  40f054:	cdq    
  40f055:	int3   
  40f056:	or     eax,0xf75b1a16
  40f05b:	mov    ch,0xd7
  40f05d:	dec    edi
  40f05e:	add    DWORD PTR [ebp-0x8],ebp
  40f061:	aad    0x80
  40f063:	dec    ebx
  40f064:	jmp    0x2b81b218
  40f069:	mov    esp,0x5523660f
  40f06e:	jmp    0xa2c73abc
  40f073:	mov    bh,0x96
  40f075:	ss iret 
  40f077:	push   0x43
  40f079:	pop    eax
  40f07a:	pop    edx
  40f07b:	outs   dx,DWORD PTR ds:[esi]
  40f07c:	retf   0x85e3
  40f07f:	xchg   ebx,eax
  40f080:	mov    ebx,0x72f77ac
  40f085:	out    0xb8,al
  40f087:	xchg   esp,eax
  40f088:	int3   
  40f089:	mov    eax,ds:0x38ad4d33
  40f08e:	and    BYTE PTR ds:0x2baca441,0x20
  40f095:	(bad)  
  40f096:	pop    ecx
  40f097:	pop    ebp
  40f098:	sub    al,0x34
  40f09a:	jbe    0x40f0b1
  40f09c:	push   0x55a112c5
  40f0a1:	fcmovnbe st,st(0)
  40f0a3:	mov    BYTE PTR [eax],al
  40f0a5:	mov    eax,ds:0xbb5e10de
  40f0aa:	dec    esp
  40f0ab:	gs (bad) 
  40f0ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0ae:	cmc    
  40f0af:	int3   
  40f0b0:	scas   eax,DWORD PTR es:[edi]
  40f0b1:	jmp    0xa4dbdcdd
  40f0b6:	sti    
  40f0b7:	mov    eax,0x5c630735
  40f0bc:	mov    edi,0x5bd8880c
  40f0c1:	stos   DWORD PTR es:[edi],eax
  40f0c2:	mov    ebx,0xf0ef754e
  40f0c7:	push   esp
  40f0c8:	or     edx,DWORD PTR [eax]
  40f0ca:	add    ebx,DWORD PTR [ecx+0x49]
  40f0cd:	out    0xeb,eax
  40f0cf:	mov    eax,0x6cee008c
  40f0d4:	inc    esi
  40f0d5:	gs ja  0x40f066
  40f0d8:	std    
  40f0d9:	call   0x14c0b2
  40f0de:	inc    edx
  40f0df:	sbb    eax,0x84058425
  40f0e4:	and    BYTE PTR [edi],ch
  40f0e6:	popf   
  40f0e7:	sub    BYTE PTR [eax-0x2e3340c4],dh
  40f0ed:	popa   
  40f0ee:	jnp    0x40f073
  40f0f0:	jnp    0x40f148
  40f0f2:	dec    ebx
  40f0f3:	inc    edx
  40f0f4:	sbb    ebp,eax
  40f0f6:	or     BYTE PTR [ebp+0x36],cl
  40f0f9:	repnz pop ss
  40f0fb:	cmp    eax,0x443dad1f
  40f100:	pop    es
  40f101:	push   0x93b0cb3d
  40f106:	jno    0x40f0f1
  40f108:	adc    eax,0xd803c0d
  40f10d:	repnz pop eax
  40f10f:	sbb    eax,0xcb71f04d
  40f114:	fmul   DWORD PTR [ebx+0x16]
  40f117:	int3   
  40f118:	adc    dl,cl
  40f11a:	and    dh,BYTE PTR [ebx+0x5e3561f7]
  40f120:	icebp  
  40f121:	repz xchg ebp,eax
  40f123:	outs   dx,DWORD PTR ds:[esi]
  40f124:	xor    cl,bh
  40f126:	sbb    esi,DWORD PTR [eax]
  40f128:	sub    BYTE PTR [ebp-0x16],dl
  40f12b:	in     al,dx
  40f12c:	fild   QWORD PTR [edi-0x61bce645]
  40f132:	add    dl,bl
  40f134:	inc    edx
  40f135:	cmp    eax,0x14e2389f
  40f13a:	cwde   
  40f13b:	push   es
  40f13c:	int    0xc6
  40f13e:	lock mov bl,0x82
  40f141:	push   edx
  40f142:	stc    
  40f143:	push   di
  40f145:	xor    DWORD PTR [ecx+0x20],ecx
  40f148:	fdiv   QWORD PTR [esi]
  40f14a:	cwde   
  40f14b:	pop    ebx
  40f14c:	adc    bp,ax
  40f14f:	ss stc 
  40f151:	clc    
  40f152:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f153:	in     eax,0x52
  40f155:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f156:	mov    eax,0xc8c9e945
  40f15b:	lds    edi,FWORD PTR [edi-0x56bee402]
  40f161:	retf   
  40f162:	repz push esi
  40f164:	int3   
  40f165:	cmp    al,BYTE PTR [eax]
  40f167:	mov    bh,0x39
  40f169:	dec    ecx
  40f16a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f16b:	jmp    0x40f14a
  40f16d:	ins    BYTE PTR es:[edi],dx
  40f16e:	inc    esp
  40f16f:	ins    BYTE PTR es:[edi],dx
  40f170:	je     0x40f19e
  40f172:	xor    al,0x8f
  40f175:	push   cs
  40f176:	retf   
  40f177:	fild   DWORD PTR ds:0x48772995
  40f17d:	std    
  40f17e:	mov    ebx,es
  40f180:	jecxz  0x40f155
  40f182:	xchg   edx,eax
  40f183:	add    edx,DWORD PTR [ebx]
  40f185:	mov    esp,0xe46bd853
  40f18a:	jo     0x40f1c3
  40f18c:	call   0x151b:0x9fe0f126
  40f193:	add    edi,DWORD PTR [ecx+0x66]
  40f196:	mov    ds:0xd251a580,eax
  40f19b:	xor    dl,BYTE PTR ds:0x98c6cdf6
  40f1a1:	jbe    0x40f1a3
  40f1a3:	jnp    0x40f1b3
  40f1a5:	stos   DWORD PTR es:[edi],eax
  40f1a6:	mov    ch,0x88
  40f1a8:	retf   
  40f1a9:	xchg   DWORD PTR cs:[ecx],ebp
  40f1ac:	push   ebx
  40f1ad:	fwait
  40f1ae:	cmc    
  40f1af:	fcmovnbe st,st(5)
  40f1b1:	adc    al,0xbc
  40f1b3:	call   0x46b2b830
  40f1b8:	jmp    0x40f211
  40f1ba:	dec    ebp
  40f1bb:	jbe    0x40f1fb
  40f1bd:	xchg   esp,edi
  40f1bf:	push   esi
  40f1c0:	out    0xf4,eax
  40f1c2:	shl    BYTE PTR [edx-0x3d8cd538],cl
  40f1c8:	mov    eax,0x63fa4758
  40f1cd:	jae    0x40f1f4
  40f1cf:	pop    ebp
  40f1d0:	dec    eax
  40f1d1:	xchg   esi,eax
  40f1d2:	and    esi,edi
  40f1d4:	imul   esp,DWORD PTR [ecx],0x7ba0073b
  40f1da:	jb     0x40f1b0
  40f1dc:	xchg   ecx,eax
  40f1dd:	lods   al,BYTE PTR ds:[esi]
  40f1de:	rol    DWORD PTR [ebp-0x5e],1
  40f1e1:	cmp    DWORD PTR [ecx+ecx*1+0x76],0xbce7e69b
  40f1e9:	add    eax,0xe3479db
  40f1ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1ef:	mov    edi,0xd8fb5f68
  40f1f4:	dec    ecx
  40f1f5:	js     0x40f21a
  40f1f7:	in     al,0x43
  40f1f9:	js     0x40f277
  40f1fb:	sbb    esp,DWORD PTR [eax-0x6a]
  40f1fe:	sub    DWORD PTR [ebp+0x7e],eax
  40f201:	mov    ecx,0x8c8aa3fa
  40f206:	iret   
  40f207:	push   ecx
  40f208:	mov    esp,0x6606c7d4
  40f20d:	fsub   DWORD PTR [eax]
  40f20f:	jb     0x40f1a1
  40f211:	shr    edi,1
  40f213:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f214:	xor    edi,0x8929245d
  40f21a:	inc    bp
  40f21c:	fidiv  DWORD PTR ds:0xfb2e0b7b
  40f222:	adc    eax,DWORD PTR [edi+ebx*4+0x43]
  40f226:	push   eax
  40f227:	fbld   TBYTE PTR [esi+0x5646ce8d]
  40f22d:	retf   
  40f22e:	imul   ecx,DWORD PTR [eax-0x5],0x43
  40f232:	xlat   BYTE PTR ds:[ebx]
  40f233:	pop    esi
  40f234:	icebp  
  40f235:	jmp    DWORD PTR [ecx]
  40f237:	pop    esp
  40f238:	xor    edx,eax
  40f23a:	outs   dx,BYTE PTR ds:[esi]
  40f23b:	and    DWORD PTR [ebp+0x61],esp
  40f23e:	shr    DWORD PTR [ecx],cl
  40f240:	bound  esi,QWORD PTR [edi+0x38]
  40f243:	ss cdq 
  40f245:	jno    0x40f241
  40f247:	mov    edx,0xe23cd844
  40f24c:	aas    
  40f24d:	mov    ch,0xac
  40f24f:	or     al,0xc1
  40f251:	add    BYTE PTR [edi+0x5],dl
  40f254:	mov    ds:0xfca105bd,al
  40f259:	sbb    eax,0xe382488d
  40f25e:	rcl    DWORD PTR [edx+0x5bb44c],1
  40f264:	inc    esp
  40f265:	shr    BYTE PTR [eax+0xc51ba05],0xfd
  40f26c:	mov    bh,0x92
  40f26e:	inc    edi
  40f26f:	popa   
  40f270:	imul   ecx,DWORD PTR [ebx-0x80],0xd615b8d
  40f277:	sahf   
  40f278:	xor    al,0xe0
  40f27a:	bound  ebp,QWORD PTR [ebx+0x32578442]
  40f280:	xchg   edx,eax
  40f281:	aaa    
  40f282:	xchg   esi,eax
  40f283:	rcr    DWORD PTR [ecx+0x4d076f3],1
  40f289:	add    DWORD PTR [esi-0x4d],esi
  40f28c:	test   eax,0xdb768be7
  40f291:	retf   
  40f292:	in     al,0x4a
  40f294:	into   
  40f295:	sbb    DWORD PTR [edx-0x3ad55132],ebx
  40f29b:	or     esi,edi
  40f29d:	in     al,dx
  40f29e:	adc    BYTE PTR [eax+0x45687f70],dh
  40f2a4:	xchg   ebx,eax
  40f2a5:	(bad)  
  40f2a6:	inc    ebp
  40f2a7:	sar    DWORD PTR [ebp-0x2dd607e3],1
  40f2ad:	pop    esi
  40f2ae:	sub    ecx,eax
  40f2b0:	ins    DWORD PTR es:[edi],dx
  40f2b1:	fsub   QWORD PTR [ecx-0x77]
  40f2b4:	mov    ch,0xa0
  40f2b6:	sti    
  40f2b7:	pop    edi
  40f2b8:	or     DWORD PTR [ebx-0x372b68be],eax
  40f2be:	fisttp QWORD PTR [edx-0x40]
  40f2c1:	dec    edi
  40f2c2:	cmp    al,0x46
  40f2c4:	ds iret 
  40f2c6:	arpl   bp,ax
  40f2c8:	daa    
  40f2c9:	adc    eax,0x62ab94cc
  40f2ce:	stc    
  40f2cf:	dec    esi
  40f2d0:	out    0x57,al
  40f2d2:	dec    edx
  40f2d3:	ds mov bh,0x8b
  40f2d6:	pop    edi
  40f2d7:	addr16 mov eax,ds:0x1859
  40f2db:	mov    al,ds:0x65f7b4d6
  40f2e0:	rcl    DWORD PTR [ebx+ecx*1+0x56],cl
  40f2e4:	push   ds
  40f2e5:	loope  0x40f31b
  40f2e7:	fwait
  40f2e8:	or     ebp,DWORD PTR [esi+0x6b]
  40f2eb:	adc    al,0xaf
  40f2ed:	mov    ds:0xd437ef9f,al
  40f2f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2f3:	adc    ebx,edi
  40f2f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2f6:	or     al,0xa6
  40f2f8:	ror    esi,1
  40f2fa:	aad    0xaf
  40f2fc:	adc    edx,DWORD PTR [eax]
  40f2fe:	sub    BYTE PTR [edx+0x26],0x9e
  40f302:	xlat   BYTE PTR ds:[ebx]
  40f303:	icebp  
  40f304:	pop    ds
  40f305:	daa    
  40f306:	loopne 0x40f2a6
  40f308:	mov    ch,BYTE PTR [edx]
  40f30a:	aaa    
  40f30b:	sub    al,0x99
  40f30d:	cmc    
  40f30e:	out    dx,al
  40f30f:	cmc    
  40f310:	stos   BYTE PTR es:[edi],al
  40f311:	retf   0x7e73
  40f314:	data16 cmp al,0x1c
  40f317:	popf   
  40f318:	and    edi,DWORD PTR [edi-0x7a]
  40f31b:	shl    edi,cl
  40f31d:	arpl   WORD PTR [esi],sp
  40f31f:	stos   BYTE PTR es:[edi],al
  40f320:	out    0x94,al
  40f322:	dec    edx
  40f323:	cmp    BYTE PTR [edi+ecx*4-0x2a8d324a],dl
  40f32a:	ss stos DWORD PTR es:[edi],eax
  40f32c:	xchg   ebp,eax
  40f32d:	mov    edi,0x350f4fe8
  40f332:	inc    esp
  40f333:	inc    esp
  40f334:	idiv   BYTE PTR [ecx+0x77b5cf51]
  40f33a:	lds    esp,FWORD PTR [edi-0x7d]
  40f33d:	je     0x40f2c4
  40f33f:	mov    al,0xd0
  40f341:	arpl   WORD PTR [ebx],bx
  40f343:	sbb    eax,0x9b7adf4b
  40f348:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f349:	popa   
  40f34a:	and    DWORD PTR [eax-0x38c63432],esi
  40f350:	fsubr  DWORD PTR [ebx]
  40f352:	stc    
  40f353:	mov    eax,ds:0x4f163748
  40f358:	shl    DWORD PTR [esp+ebx*2+0x268bc3c0],1
  40f35f:	frstor [esi+0x5a981f80]
  40f365:	dec    DWORD PTR [edi+0x23]
  40f368:	fcomp  DWORD PTR [edi+0xc]
  40f36b:	retf   0xbe15
  40f36e:	adc    esp,edi
  40f370:	jns    0x40f322
  40f372:	test   DWORD PTR [edx-0x5],ebx
  40f375:	jge    0x40f397
  40f377:	mov    esp,0x1470e993
  40f37c:	mov    ebx,DWORD PTR [ecx+0x49]
  40f37f:	or     al,0x20
  40f381:	cmp    dl,bl
  40f383:	repnz das 
  40f385:	mov    esi,0x241f6439
  40f38a:	test   DWORD PTR [edx],0xceb37263
  40f390:	cmp    bh,BYTE PTR [edx+0x20e958b2]
  40f396:	dec    edx
  40f397:	cmp    al,0x85
  40f399:	fsubrp st(7),st
  40f39b:	and    eax,0xf5b0d307
  40f3a0:	sbb    dl,BYTE PTR [edi+0x37]
  40f3a3:	in     eax,dx
  40f3a4:	push   ecx
  40f3a5:	mov    ebp,0xa7dc7305
  40f3aa:	push   DWORD PTR [ebp+0x23efbe32]
  40f3b0:	sbb    al,0xf1
  40f3b2:	fld    TBYTE PTR [ecx-0x4aee21d9]
  40f3b8:	pop    es
  40f3b9:	shl    DWORD PTR [ebp+0x6a],1
  40f3bc:	out    dx,eax
  40f3bd:	sahf   
  40f3be:	(bad)  
  40f3bf:	test   DWORD PTR [edi+0x67802d7f],0xbff04e4c
  40f3c9:	and    BYTE PTR [edx+0x5f],al
  40f3cc:	sub    al,0x8c
  40f3ce:	push   edi
  40f3cf:	outs   dx,DWORD PTR ds:[esi]
  40f3d0:	pop    edi
  40f3d1:	mov    esp,0x53b8284d
  40f3d6:	arpl   cx,di
  40f3d8:	inc    ecx
  40f3d9:	pop    ds
  40f3da:	xchg   edi,eax
  40f3db:	dec    ebx
  40f3dc:	enter  0x5769,0xa4
  40f3e0:	cmp    BYTE PTR ds:0x19793373,dh
  40f3e6:	mov    ebx,0xa4ee56bc
  40f3eb:	les    ebp,FWORD PTR [ecx-0x60b6b1e]
  40f3f1:	mov    ebp,0x7b30da2a
  40f3f6:	mov    al,0xb2
  40f3f8:	xchg   esi,eax
  40f3f9:	cmp    BYTE PTR [esi],bh
  40f3fb:	mov    al,0x77
  40f3fd:	lahf   
  40f3fe:	leave  
  40f3ff:	jnp    0x40f43f
  40f401:	add    eax,0x439220ae
  40f407:	and    al,0x8d
  40f409:	leave  
  40f40a:	pop    ds
  40f40b:	imul   ebp,DWORD PTR [edx+ebp*2-0x54],0xffffffbf
  40f410:	pop    esp
  40f411:	pop    ebx
  40f412:	mov    dh,0xdf
  40f414:	stos   DWORD PTR es:[edi],eax
  40f415:	pop    es
  40f416:	push   esi
  40f417:	in     eax,dx
  40f418:	mov    eax,ds:0xe556cdf5
  40f41d:	cwde   
  40f41e:	cmp    ebp,ebp
  40f420:	jne    0x40f483
  40f422:	hlt    
  40f423:	xlat   BYTE PTR ds:[ebx]
  40f424:	pop    edx
  40f425:	or     ebx,edx
  40f427:	lock shl BYTE PTR [ebp-0x6c],0x65
  40f42c:	loope  0x40f450
  40f42e:	iret   
  40f42f:	cmp    dh,BYTE PTR [edx-0x3c]
  40f432:	fst    QWORD PTR ds:0xaa405dec
  40f438:	add    DWORD PTR [esi+edi*1-0x5f],edx
  40f43c:	int    0x6a
  40f43e:	out    0x53,al
  40f440:	pop    esp
  40f441:	add    edi,DWORD PTR [eax+0x279ec5dd]
  40f447:	push   ds
  40f448:	lds    eax,FWORD PTR [ebx+edx*8-0x4fe280cb]
  40f44f:	aaa    
  40f450:	mov    ah,0xf7
  40f452:	push   eax
  40f453:	xchg   ebx,eax
  40f454:	inc    eax
  40f455:	call   eax
  40f457:	sar    BYTE PTR [ebx+0x41],cl
  40f45a:	in     al,0x4
  40f45c:	adc    al,0x9e
  40f45e:	xor    DWORD PTR cs:[eax+esi*8-0x218e8612],ecx
  40f466:	cmp    eax,DWORD PTR [edi-0x762c4ea1]
  40f46c:	repz mov dh,0x96
  40f46f:	push   0xfffffffc
  40f471:	jle    0x40f463
  40f473:	add    ah,BYTE PTR [esi]
  40f475:	outs   dx,DWORD PTR ds:[esi]
  40f476:	lahf   
  40f477:	lock sbb esi,DWORD PTR [esi]
  40f47a:	es mov ah,0xd0
  40f47d:	int    0xe8
  40f47f:	cmp    al,0xc0
  40f481:	cs mov esp,0x2d1c6fe2
  40f487:	cmp    DWORD PTR [ebp+0x151b7d6c],edx
  40f48d:	inc    edi
  40f48e:	lds    ecx,FWORD PTR [eax-0x4a4f826b]
  40f494:	xor    eax,0x69032be1
  40f499:	mov    WORD PTR ds:0x6caa0162,fs
  40f49f:	or     al,0xbf
  40f4a1:	or     eax,0xa7fe93ef
  40f4a6:	add    BYTE PTR [ecx-0x79],cl
  40f4a9:	inc    ebp
  40f4aa:	mov    ebp,0xc1a57960
  40f4af:	nop
  40f4b0:	scas   al,BYTE PTR es:[edi]
  40f4b1:	out    0xd6,al
  40f4b3:	push   esp
  40f4b4:	ins    BYTE PTR es:[edi],dx
  40f4b5:	into   
  40f4b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4b7:	mov    ds:0x6fe5de47,eax
  40f4bc:	aas    
  40f4bd:	daa    
  40f4be:	rcr    BYTE PTR [esi+0x3e16bb1a],cl
  40f4c4:	cmp    ebp,ebp
  40f4c6:	ja     0x40f49c
  40f4c8:	push   cs
  40f4c9:	pop    eax
  40f4ca:	push   ss
  40f4cb:	add    eax,0xcb8c54dc
  40f4d0:	push   ss
  40f4d1:	lahf   
  40f4d2:	jae    0x40f4c1
  40f4d4:	fnstcw WORD PTR [ebx+edx*8+0x66]
  40f4d8:	inc    ebp
  40f4d9:	(bad)  
  40f4da:	test   BYTE PTR [ebx+eax*8],al
  40f4dd:	fucomp st(5)
  40f4df:	clc    
  40f4e0:	ret    0x6922
  40f4e3:	push   0x297d5782
  40f4e8:	emms   
  40f4ea:	pop    esp
  40f4eb:	fcomp  st(1)
  40f4ed:	push   edx
  40f4ee:	cld    
  40f4ef:	je     0x40f4e2
  40f4f1:	cmp    ebx,DWORD PTR [edx+0xe2091ca]
  40f4f7:	loop   0x40f55f
  40f4f9:	jl     0x40f4ec
  40f4fb:	push   esi
  40f4fc:	and    DWORD PTR [ebp-0x77],esp
  40f4ff:	jae    0x40f518
  40f501:	pop    ds
  40f502:	fistp  DWORD PTR [edi-0x42]
  40f505:	pop    es
  40f506:	sub    eax,0xb0306a80
  40f50b:	add    bl,dl
  40f50d:	add    DWORD PTR [edi+0x42257962],ecx
  40f513:	mov    esp,0x6ba84ab5
  40f518:	rcl    esi,0xc1
  40f51b:	sti    
  40f51c:	sbb    dl,cl
  40f51e:	(bad)  [eax-0x59833aee]
  40f524:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f525:	rcr    DWORD PTR [edx-0x5],0x8
  40f529:	and    al,BYTE PTR [edi+0x6ef00c5e]
  40f52f:	dec    edi
  40f530:	cmp    bh,al
  40f532:	out    0xf9,eax
  40f534:	jae    0x40f562
  40f536:	add    BYTE PTR [edx],dl
  40f538:	xchg   ebx,eax
  40f539:	push   0xffffff80
  40f53b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f53c:	or     DWORD PTR [edx-0x7d],0x33
  40f540:	fcmovnb st,st(7)
  40f542:	sub    ch,bl
  40f544:	call   0x2c67f23d
  40f549:	bound  ecx,QWORD PTR [ebp-0x497ceac4]
  40f54f:	adc    eax,0xc6c69b86
  40f554:	dec    edx
  40f555:	shl    BYTE PTR [esi+eax*4],cl
  40f558:	push   eax
  40f559:	push   eax
  40f55a:	xchg   DWORD PTR [edi],edi
  40f55c:	in     al,dx
  40f55d:	mov    dh,0xbc
  40f55f:	adc    BYTE PTR [eax+eiz*4],0x8a
  40f563:	mov    esp,0x37b055e
  40f568:	or     eax,0x27f6d3dd
  40f56d:	dec    ebx
  40f56e:	push   eax
  40f56f:	inc    eax
  40f570:	fistp  QWORD PTR ds:0x50b06fe0
  40f576:	shl    BYTE PTR [ecx-0x36],1
  40f579:	rcl    DWORD PTR [ebp+esi*1+0x26e1c742],0xf3
  40f581:	lods   al,BYTE PTR ds:[esi]
  40f582:	mov    DWORD PTR [ebx],eax
  40f584:	out    0x81,al
  40f586:	es pop edi
  40f588:	mov    bl,0x3b
  40f58a:	jno    0x40f534
  40f58c:	and    bl,BYTE PTR [edx]
  40f58e:	pop    ds
  40f58f:	add    DWORD PTR [ebp+0x4e],0x7f
  40f593:	xor    BYTE PTR [ebx+eiz*8],cl
  40f596:	mov    BYTE PTR [edi],bl
  40f598:	inc    esi
  40f599:	sub    bh,BYTE PTR [esi+0x5f]
  40f59c:	push   esi
  40f59d:	xlat   BYTE PTR ds:[ebx]
  40f59e:	add    bh,BYTE PTR [edx]
  40f5a0:	mov    eax,ebx
  40f5a2:	jno    0x40f554
  40f5a4:	mov    al,0xe5
  40f5a6:	aaa    
  40f5a7:	mov    ds:0x14596d7d,eax
  40f5ac:	pop    edi
  40f5ad:	pusha  
  40f5ae:	add    al,BYTE PTR [ebx+0x63]
  40f5b1:	cld    
  40f5b2:	xor    al,0xe1
  40f5b4:	mov    BYTE PTR [edi-0x36],ch
  40f5b7:	mov    ah,0xce
  40f5b9:	push   0xdf418967
  40f5be:	sub    bl,BYTE PTR [eax]
  40f5c0:	(bad)  
  40f5c1:	xor    eax,0x5aa973e6
  40f5c6:	sub    DWORD PTR [edi],eax
  40f5c8:	inc    eax
  40f5c9:	mov    ecx,0xafd0655a
  40f5ce:	out    dx,al
  40f5cf:	(bad)  [ebx+ebx*1+0x73]
  40f5d3:	out    0x7f,eax
  40f5d5:	push   es
  40f5d6:	add    bl,BYTE PTR [esi-0x50]
  40f5d9:	int    0x64
  40f5db:	retf   
  40f5dc:	les    esi,FWORD PTR [esi+0x49]
  40f5df:	scas   al,BYTE PTR es:[edi]
  40f5e0:	fcom   QWORD PTR [eax]
  40f5e2:	mov    ebp,0xd4592760
  40f5e7:	add    eax,DWORD PTR ds:0xef3a3e5d
  40f5ed:	imul   edx,DWORD PTR [eax+0x61],0x35
  40f5f1:	neg    DWORD PTR [ecx-0x2f]
  40f5f4:	fdiv   DWORD PTR [ecx]
  40f5f6:	mov    eax,0xab78d9fa
  40f5fb:	aad    0x0
  40f5fd:	nop
  40f5fe:	test   BYTE PTR [eax],0xc9
  40f601:	push   0x998a1771
  40f606:	jp     0x40f5fe
  40f608:	mov    bl,0xa6
  40f60a:	sub    ebx,edi
  40f60c:	into   
  40f60d:	push   ebx
  40f60e:	adc    eax,DWORD PTR [eax+0x296ef74]
  40f614:	out    0x17,al
  40f616:	js     0x40f672
  40f618:	ss retf 
  40f61a:	scas   al,BYTE PTR es:[edi]
  40f61b:	lods   eax,DWORD PTR ds:[esi]
  40f61c:	popf   
  40f61d:	sbb    esi,DWORD PTR [ecx+0x2401c726]
  40f623:	add    bl,BYTE PTR [edx+0x128d8d86]
  40f629:	dec    ebx
  40f62a:	xchg   edx,eax
  40f62b:	mov    DWORD PTR [ecx+0x68],edx
  40f62e:	rcl    dh,1
  40f630:	and    al,0x6d
  40f632:	dec    esi
  40f633:	xchg   BYTE PTR [esi-0x761343b9],cl
  40f639:	jne    0x40f60e
  40f63b:	inc    ebx
  40f63c:	out    0x3c,eax
  40f63e:	jae    0x40f68b
  40f640:	outs   dx,BYTE PTR ds:[esi]
  40f641:	call   0x9089:0x8f6a65d3
  40f648:	mov    DWORD PTR [edi+0x1d4f0ecb],eax
  40f64e:	jnp    0x40f678
  40f650:	in     eax,dx
  40f651:	or     BYTE PTR [eax],bl
  40f653:	in     al,dx
  40f654:	or     al,0x26
  40f656:	inc    eax
  40f657:	cmp    eax,DWORD PTR [ebp-0x54bb4f59]
  40f65d:	test   eax,0x3c8c0951
  40f662:	enter  0xb36,0x3f
  40f666:	enter  0xffcd,0xa4
  40f66a:	loop   0x40f691
  40f66c:	jne    0x40f6d9
  40f66e:	cmp    al,0x16
  40f670:	mov    ecx,0x671b9045
  40f675:	jmp    0x870e0ce1
  40f67a:	pop    ss
  40f67b:	(bad)  
  40f67c:	dec    ebx
  40f67d:	or     al,0xd9
  40f67f:	xchg   BYTE PTR [edi+0x27],dh
  40f682:	imul   esi,DWORD PTR [esi-0x35],0xff92c7c1
  40f689:	pusha  
  40f68a:	mov    ebp,0xefbcc316
  40f68f:	cli    
  40f690:	test   ch,bh
  40f692:	stos   BYTE PTR es:[edi],al
  40f693:	adc    edi,eax
  40f695:	dec    dx
  40f697:	bound  eax,QWORD PTR [esi]
  40f699:	and    al,0xb0
  40f69b:	mov    dh,0x8c
  40f69d:	mov    ah,0x7f
  40f69f:	inc    edi
  40f6a0:	ret    0x95af
  40f6a3:	iret   
  40f6a4:	sub    al,0xfc
  40f6a6:	ins    BYTE PTR es:[edi],dx
  40f6a7:	pop    ecx
  40f6a8:	xchg   edi,eax
  40f6a9:	xor    al,0x38
  40f6ab:	lods   al,BYTE PTR ds:[esi]
  40f6ac:	aas    
  40f6ad:	imul   esi,DWORD PTR [eax],0x8
  40f6b0:	sub    eax,0xf6ad6e64
  40f6b5:	jo     0x40f712
  40f6b7:	mov    esp,ecx
  40f6b9:	in     eax,0xc1
  40f6bb:	fwait
  40f6bc:	push   es
  40f6bd:	retf   
  40f6be:	retf   0x4e92
  40f6c1:	cmp    DWORD PTR [ebx-0x29],edx
  40f6c4:	das    
  40f6c5:	mov    edi,0xd9144c26
  40f6ca:	frstor [edx+esi*4]
  40f6cd:	sbb    DWORD PTR [ebx+0x3e],ebx
  40f6d0:	(bad)  
  40f6d1:	sahf   
  40f6d2:	sbb    bl,BYTE PTR [eax]
  40f6d4:	sub    al,0x9d
  40f6d6:	cwde   
  40f6d7:	test   eax,0x258cb45f
  40f6dc:	mov    BYTE PTR [eax],dh
  40f6de:	ds push ebx
  40f6e0:	bound  esi,QWORD PTR [ebx+0xe]
  40f6e3:	push   cs
  40f6e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f6e5:	cmc    
  40f6e6:	(bad)  [ebx+0x6271b62d]
  40f6ec:	xor    bh,BYTE PTR [ebp+eax*8+0x1b23859d]
  40f6f3:	scas   eax,DWORD PTR es:[edi]
  40f6f4:	(bad)  
  40f6f5:	xor    al,0x1c
  40f6f7:	xor    eax,0xad7d501c
  40f6fc:	cwde   
  40f6fd:	sti    
  40f6fe:	cmp    esp,eax
  40f700:	sub    ah,bl
  40f702:	vmwrite ecx,DWORD PTR [edi]
  40f705:	mov    ah,0x9f
  40f707:	pop    ds
  40f708:	jge    0x40f6a5
  40f70a:	in     al,0x1b
  40f70c:	shl    DWORD PTR [esi+0x461760d4],cl
  40f712:	in     al,0x84
  40f714:	imul   eax,DWORD PTR [edi],0xa5e3d382
  40f71a:	or     al,0xd7
  40f71c:	jg     0x40f6d0
  40f71e:	mov    ch,0xc
  40f720:	das    
  40f721:	(bad)  
  40f723:	cdq    
  40f724:	and    eax,0x670c389
  40f729:	hlt    
  40f72a:	dec    ebp
  40f72b:	or     eax,0x27da275a
  40f730:	lds    ebx,FWORD PTR [ecx-0x5c]
  40f733:	(bad)  
  40f734:	int    0x11
  40f736:	xor    BYTE PTR [esi+0x7cb4c374],dh
  40f73c:	pop    ebx
  40f73d:	mov    dh,0x44
  40f73f:	or     dl,dh
  40f741:	aas    
  40f742:	cmp    eax,ecx
  40f744:	and    edi,ebx
  40f746:	and    ebp,ebx
  40f748:	pop    eax
  40f749:	das    
  40f74a:	or     BYTE PTR [eax+0x1d],ah
  40f74d:	call   0x1bfd7df7
  40f752:	mov    edi,0xa7339061
  40f757:	xor    BYTE PTR [esi+0x69cc6c96],al
  40f75d:	ror    DWORD PTR ds:0x20e7e242,cl
  40f763:	pop    esp
  40f764:	jae    0x40f748
  40f766:	sbb    eax,0x3469f83b
  40f76b:	sub    al,0xbd
  40f76d:	lods   eax,DWORD PTR ds:[esi]
  40f76e:	test   eax,0xf15db729
  40f773:	cmp    eax,0x5017e5b8
  40f778:	pop    esp
  40f779:	dec    edx
  40f77a:	dec    edx
  40f77b:	imul   eax,DWORD PTR [edx+0x727052d6],0x3c69bb69
  40f785:	stc    
  40f786:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f787:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f788:	ins    DWORD PTR es:[edi],dx
  40f789:	stc    
  40f78a:	pusha  
  40f78b:	jle    0x40f807
  40f78d:	fidivr DWORD PTR [ebx-0x16aed83]
  40f793:	iret   
  40f794:	scas   eax,DWORD PTR es:[edi]
  40f795:	ret    0xd617
  40f798:	mov    dh,0x9f
  40f79a:	scas   eax,DWORD PTR es:[edi]
  40f79b:	mov    ecx,0xb684ed85
  40f7a0:	mov    ecx,0x80e5fe32
  40f7a5:	inc    esp
  40f7a6:	push   ds
  40f7a7:	hlt    
  40f7a8:	jl     0x40f777
  40f7aa:	mov    ecx,DWORD PTR [esi]
  40f7ac:	add    DWORD PTR [edx-0xd],esi
  40f7af:	push   0x24
  40f7b1:	mov    al,ds:0x63f217ef
  40f7b6:	mov    cl,0xa0
  40f7b8:	sbb    esi,DWORD PTR [ebp-0x45]
  40f7bb:	aad    0x73
  40f7bd:	in     al,dx
  40f7be:	cmp    BYTE PTR [edx+0x4d3f0a43],dh
  40f7c4:	mov    al,ch
  40f7c6:	jb     0x40f842
  40f7c8:	add    BYTE PTR [esi],0xd0
  40f7cb:	xchg   ecx,eax
  40f7cc:	sahf   
  40f7cd:	and    DWORD PTR [edx+0x2e9eff09],esi
  40f7d3:	lock stos DWORD PTR es:[edi],eax
  40f7d5:	mov    ebx,0xc9aaa969
  40f7da:	or     al,0x6c
  40f7dc:	in     al,0x22
  40f7de:	jne    0x40f7a7
  40f7e0:	jbe    0x40f82c
  40f7e2:	xchg   ecx,eax
  40f7e3:	cdq    
  40f7e4:	icebp  
  40f7e5:	adc    cl,ch
  40f7e7:	xchg   esi,eax
  40f7e8:	xor    esp,ecx
  40f7ea:	xor    DWORD PTR [ebp+0x40],edx
  40f7ed:	outs   dx,BYTE PTR ds:[esi]
  40f7ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7ef:	jmp    0x40f838
  40f7f1:	mov    eax,0x9f71ac1
  40f7f6:	mov    bh,0x3
  40f7f8:	pop    esi
  40f7f9:	cmp    DWORD PTR [eax],0x77e055b6
  40f7ff:	jo     0x40f832
  40f801:	fisubr WORD PTR es:[ecx]
  40f804:	jns    0x40f7ba
  40f806:	sub    eax,0xb510f1bd
  40f80b:	addr16 in al,dx
  40f80d:	jo     0x40f7b8
  40f80f:	idiv   DWORD PTR [ecx-0x27]
  40f812:	jecxz  0x40f847
  40f814:	aas    
  40f815:	push   0x5d5ee845
  40f81a:	xchg   edi,eax
  40f81b:	mov    al,ds:0x47e9ddb6
  40f820:	or     eax,0xa0196af7
  40f825:	out    dx,eax
  40f826:	leave  
  40f827:	mov    esi,0xa455cd91
  40f82c:	ja     0x40f883
  40f82e:	cmp    esi,DWORD PTR [esi]
  40f830:	dec    edx
  40f831:	sbb    cl,BYTE PTR [edi]
  40f833:	and    dl,ah
  40f835:	lahf   
  40f836:	adc    al,0xc
  40f838:	jo     0x40f832
  40f83a:	xchg   esp,eax
  40f83b:	jle    0x40f818
  40f83d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f83e:	cmp    DWORD PTR [eax],ebx
  40f840:	pop    ss
  40f841:	mov    ds:0x3b919c1c,eax
  40f846:	adc    BYTE PTR ds:0xe569426c,al
  40f84c:	and    ah,al
  40f84e:	push   ecx
  40f84f:	out    dx,al
  40f850:	aam    0xde
  40f852:	loope  0x40f80a
  40f854:	retf   
  40f855:	mov    ds:0x57a95313,al
  40f85a:	ins    BYTE PTR es:[edi],dx
  40f85b:	fdivrp st(1),st
  40f85d:	aaa    
  40f85e:	mov    ds:0x2295c67b,al
  40f863:	push   cs
  40f864:	jp     0x40f86a
  40f866:	mov    ds:0x8530f872,al
  40f86b:	ins    DWORD PTR es:[edi],dx
  40f86c:	mov    ecx,0x8d1e310
  40f871:	aad    0x1e
  40f873:	xor    BYTE PTR [ebp+0x2c],ah
  40f876:	dec    eax
  40f877:	retf   0x8237
  40f87a:	inc    dh
  40f87c:	pop    ebp
  40f87d:	aad    0xa
  40f87f:	sbb    BYTE PTR [ebx+0x53],bl
  40f882:	je     0x40f8e0
  40f884:	aas    
  40f885:	popa   
  40f886:	aaa    
  40f887:	jno    0x40f870
  40f889:	iret   
  40f88a:	retf   
  40f88b:	xchg   ecx,eax
  40f88c:	ret    0x857e
  40f88f:	cmp    BYTE PTR [edi-0x56c0c481],ah
  40f895:	enter  0xc0c8,0xe8
  40f899:	xchg   edi,eax
  40f89a:	cmp    edi,DWORD PTR [esi-0x174f8680]
  40f8a0:	repnz (bad) 
  40f8a2:	out    dx,eax
  40f8a3:	ins    DWORD PTR es:[edi],dx
  40f8a4:	xchg   ecx,eax
  40f8a5:	icebp  
  40f8a6:	add    BYTE PTR [esi+0x59bac7a0],0x17
  40f8ad:	push   esi
  40f8ae:	xor    al,0x5c
  40f8b0:	xchg   BYTE PTR [edx+0x1f],bl
  40f8b3:	pop    esi
  40f8b4:	xor    eax,0x896f36fa
  40f8b9:	js     0x40f88e
  40f8bb:	mov    ebp,0x696cd5c6
  40f8c0:	mov    ah,al
  40f8c2:	pop    edx
  40f8c3:	and    edi,DWORD PTR [ebp-0x9c81209]
  40f8c9:	pop    ebp
  40f8ca:	ins    BYTE PTR es:[edi],dx
  40f8cb:	arpl   WORD PTR [esi-0x15],bx
  40f8ce:	call   0xe8dd87
  40f8d3:	cdq    
  40f8d4:	jae    0x40f856
  40f8d6:	inc    ebp
  40f8d7:	mov    dl,0x3f
  40f8d9:	mov    dl,0x65
  40f8db:	sbb    eax,0x123e08f1
  40f8e0:	pop    ecx
  40f8e1:	scas   eax,DWORD PTR es:[edi]
  40f8e2:	mov    bh,0x51
  40f8e4:	xchg   edi,eax
  40f8e5:	in     al,0xdf
  40f8e7:	iret   
  40f8e8:	add    eax,0xbd63c1c2
  40f8ed:	xchg   esp,eax
  40f8ee:	fs adc ebx,edx
  40f8f1:	mov    edi,0xa64869d7
  40f8f6:	repz sbb DWORD PTR [ecx-0x7d657e39],eax
  40f8fd:	mov    ah,0x2b
  40f8ff:	ret    0x66f
  40f902:	push   eax
  40f903:	cmp    BYTE PTR [esi+edi*2],ch
  40f906:	or     edx,DWORD PTR [eax+0x221fabce]
  40f90c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f90d:	cld    
  40f90e:	ret    
  40f90f:	push   ss
  40f910:	mov    DWORD PTR [ebp+esi*4+0x38],edx
  40f914:	test   eax,0xff39e73f
  40f919:	jl     0x40f90d
  40f91b:	mov    edx,0x2ec998e8
  40f920:	push   ebx
  40f921:	mov    ds:0x9b8b1671,eax
  40f926:	aam    0xd5
  40f928:	xchg   ebp,ecx
  40f92a:	pop    ds
  40f92b:	cmp    edx,0xffffffc1
  40f92e:	adc    edi,eax
  40f930:	scas   eax,DWORD PTR es:[edi]
  40f931:	mov    WORD PTR [edx-0x1afe44fa],ds
  40f937:	(bad)  
  40f938:	jo     0x40f8bd
  40f93a:	adc    DWORD PTR [edx-0x1a],esi
  40f93d:	push   ss
  40f93e:	dec    eax
  40f93f:	jbe    0x40f978
  40f941:	xchg   DWORD PTR [edx+ebx*1+0x44],edx
  40f945:	cmp    dh,BYTE PTR [edx+eax*2-0x74ddb81f]
  40f94c:	xor    BYTE PTR [edx+0x1559c7be],dl
  40f952:	cdq    
  40f953:	fistp  QWORD PTR [eax]
  40f955:	test   BYTE PTR [ebx],0xb
  40f958:	add    DWORD PTR ds:0xa0eb302,ebp
  40f95e:	xlat   BYTE PTR ds:[ebx]
  40f95f:	mov    bl,0x64
  40f961:	xchg   ebx,eax
  40f962:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40f964:	aam    0x1
  40f966:	add    DWORD PTR [esi],ebp
  40f968:	mov    dl,0x0
  40f96a:	or     DWORD PTR [esi+ebp*4+0x6f],esp
  40f96e:	rcl    ebp,cl
  40f970:	jbe    0x40f8f8
  40f972:	and    ch,bl
  40f974:	jo     0x40f914
  40f976:	in     al,dx
  40f977:	inc    eax
  40f978:	pop    ds
  40f979:	and    ebp,DWORD PTR [ebx-0x7f]
  40f97c:	xchg   ecx,eax
  40f97d:	(bad)  
  40f97e:	fstp   TBYTE PTR [edx]
  40f980:	lock add BYTE PTR [ecx-0x674dd8d9],ah
  40f987:	les    edx,FWORD PTR [edi-0x19317023]
  40f98d:	rol    DWORD PTR [ebp+0x59],0x3c
  40f991:	and    esi,DWORD PTR [eax]
  40f993:	mov    ebx,0xd93c0a81
  40f998:	mov    eax,ds:0xadc2f3cf
  40f99d:	mov    esi,?
  40f99f:	jmp    0x34c8b159
  40f9a4:	mov    al,0x3b
  40f9a6:	pop    ebp
  40f9a7:	retf   
  40f9a8:	leave  
  40f9a9:	outs   dx,DWORD PTR ds:[esi]
  40f9aa:	jno    0x40f961
  40f9ac:	xchg   BYTE PTR [ebx+0x13],ah
  40f9af:	and    DWORD PTR [eax-0x69764169],ebx
  40f9b5:	sub    ecx,edi
  40f9b7:	and    eax,0xcad6d453
  40f9bc:	sbb    al,0x40
  40f9be:	outs   dx,DWORD PTR ds:[esi]
  40f9bf:	aad    0x29
  40f9c1:	xor    edx,ecx
  40f9c3:	fwait
  40f9c4:	push   ecx
  40f9c5:	mov    ecx,0x53800c44
  40f9ca:	or     eax,0x60e71761
  40f9cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9d0:	pop    eax
  40f9d1:	jp     0x40fa08
  40f9d3:	pop    es
  40f9d4:	mov    ds:0x3d1d4cfd,al
  40f9d9:	frndint 
  40f9db:	jmp    0xa88b5e0f
  40f9e0:	mov    gs,WORD PTR [ebx]
  40f9e2:	das    
  40f9e3:	inc    edx
  40f9e4:	out    0x88,eax
  40f9e6:	push   esp
  40f9e7:	or     ebp,DWORD PTR [edx+ecx*2-0x7d]
  40f9eb:	mov    edi,0xdb6a70b3
  40f9f0:	sbb    edi,ebx
  40f9f2:	gs pop ebp
  40f9f4:	in     eax,0x3e
  40f9f6:	popa   
  40f9f7:	push   esp
  40f9f8:	dec    esp
  40f9f9:	mov    DWORD PTR [ecx],ecx
  40f9fb:	mov    esp,0xc3bb07ba
  40fa00:	(bad)  
  40fa01:	sbb    eax,DWORD PTR [edx]
  40fa03:	sub    BYTE PTR [edi+0x50],cl
  40fa06:	in     al,0x10
  40fa08:	mov    ah,0x2b
  40fa0a:	adc    eax,0x4c6c835b
  40fa0f:	sub    esi,DWORD PTR [eax-0x57c5b6aa]
  40fa15:	outs   dx,DWORD PTR ds:[esi]
  40fa16:	adc    DWORD PTR [esi+0x5f],ebp
  40fa19:	mov    al,0x7b
  40fa1b:	and    BYTE PTR [ecx+0x34],0x19
  40fa1f:	push   ebp
  40fa20:	sbb    al,0x4c
  40fa22:	dec    eax
  40fa23:	arpl   WORD PTR [edi+eax*8+0x72128b2c],dx
  40fa2a:	retf   0xa9d3
  40fa2d:	lods   al,BYTE PTR ds:[esi]
  40fa2e:	imul   ecx,DWORD PTR [ebp+0x33a93bec],0x7b7ea451
  40fa38:	mov    ah,0x8d
  40fa3a:	or     cl,BYTE PTR [ebx+0x4]
  40fa3d:	push   ecx
  40fa3e:	sbb    eax,0x1b7d2ee5
  40fa43:	jge    0x40fa38
  40fa45:	adc    dl,dh
  40fa47:	fmul   DWORD PTR [bx-0x39b6]
  40fa4c:	pop    esp
  40fa4d:	fsubrp st(3),st
  40fa4f:	enter  0xb4c2,0xd3
  40fa53:	out    dx,al
  40fa54:	popf   
  40fa55:	nop
  40fa56:	stc    
  40fa57:	push   ss
  40fa58:	jno    0x40fa7e
  40fa5a:	mov    gs,WORD PTR [ecx+eiz*8]
  40fa5d:	cmp    dh,BYTE PTR [esp+ebx*8+0x3e]
  40fa61:	outs   dx,DWORD PTR ds:[esi]
  40fa62:	xor    eax,0x57b90f65
  40fa67:	call   0x478c674d
  40fa6c:	jge    0x40fa21
  40fa6e:	(bad)  
  40fa6f:	adc    eax,0x722befd2
  40fa74:	mov    bl,0x5d
  40fa76:	add    DWORD PTR [ecx+0x635d2f03],esp
  40fa7c:	data16 aaa 
  40fa7e:	in     al,0xa6
  40fa80:	jae    0x40fa81
  40fa82:	les    edi,FWORD PTR [edi+0x7de1ad18]
  40fa88:	in     eax,dx
  40fa89:	mov    ch,0x2f
  40fa8b:	adc    eax,0xea65d63
  40fa90:	sub    bl,BYTE PTR [edx]
  40fa92:	pop    ds
  40fa93:	sbb    al,0xb4
  40fa95:	icebp  
  40fa96:	mov    ch,0x60
  40fa98:	push   ebx
  40fa99:	arpl   WORD PTR [ebp+0xa],di
  40fa9c:	mov    bh,0xfc
  40fa9e:	add    al,0xee
  40faa0:	outs   dx,BYTE PTR ds:[esi]
  40faa1:	or     eax,0xe27d2832
  40faa6:	rcl    esi,1
  40faa8:	xor    ebp,eax
  40faaa:	push   ecx
  40faab:	add    al,0x5b
  40faad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40faae:	sar    BYTE PTR [ebp-0x4e],1
  40fab1:	hlt    
  40fab2:	outs   dx,BYTE PTR ds:[esi]
  40fab3:	sub    eax,0x2cf0eb7e
  40fab8:	dec    esp
  40fab9:	loope  0x40fabf
  40fabb:	mov    al,0x29
  40fabd:	(bad)  [edx+0x3e]
  40fac0:	jmp    0x40fa7c
  40fac2:	enter  0xda6e,0x81
  40fac6:	cld    
  40fac7:	adc    DWORD PTR [ecx+ebp*1],edx
  40faca:	jne    0x40faa9
  40facc:	fisttp QWORD PTR [eax-0x7d]
  40facf:	pop    eax
  40fad0:	popa   
  40fad1:	cmp    BYTE PTR [ebx-0x7d],dh
  40fad4:	dec    edx
  40fad5:	nop
  40fad6:	es es js 0x40fb23
  40fada:	push   ss
  40fadb:	push   ds
  40fadc:	lods   eax,DWORD PTR ds:[esi]
  40fadd:	fistp  DWORD PTR [esi-0x4a]
  40fae0:	(bad)  
  40fae1:	mov    ecx,0x7ee3bd6d
  40fae6:	push   es
  40fae7:	nop
  40fae8:	icebp  
  40fae9:	int    0x40
  40faeb:	and    dl,0xdd
  40faee:	jnp    0x40fb2e
  40faf0:	jb     0x40fb6d
  40faf2:	add    esp,DWORD PTR ds:0x21e029e7
  40faf8:	in     eax,dx
  40faf9:	hlt    
  40fafa:	arpl   WORD PTR [edi+ecx*8],dx
  40fafd:	pop    esi
  40fafe:	mov    dh,0x83
  40fb00:	jmp    0x5e35:0x2c199a00
  40fb07:	rcr    BYTE PTR [edx+eiz*4+0x5a040afb],cl
  40fb0e:	cli    
  40fb0f:	mov    dh,0x25
  40fb11:	loopne 0x40fb0f
  40fb13:	std    
  40fb14:	mov    ah,0x2d
  40fb16:	out    0xa2,eax
  40fb18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb19:	repnz ss mov eax,0x232c4db
  40fb20:	retf   
  40fb21:	xchg   esi,eax
  40fb22:	dec    edx
  40fb23:	dec    eax
  40fb24:	sub    ecx,DWORD PTR [ebx-0x20]
  40fb27:	or     ch,dl
  40fb29:	dec    esi
  40fb2a:	mov    edi,ebp
  40fb2c:	inc    ecx
  40fb2d:	and    DWORD PTR [eax+ecx*2+0x29],edi
  40fb31:	cmp    dl,BYTE PTR [esi+esi*8-0xc0a2238]
  40fb38:	xor    BYTE PTR [ecx],dl
  40fb3a:	aaa    
  40fb3b:	adc    eax,0xa3c1d364
  40fb40:	arpl   WORD PTR [eax+0x5f],si
  40fb43:	leave  
  40fb44:	cmp    BYTE PTR [ecx],ah
  40fb46:	jg     0x40fb37
  40fb48:	fwait
  40fb49:	sub    eax,0xef3a7366
  40fb4e:	adc    esp,eax
  40fb50:	xchg   ecx,eax
  40fb51:	mov    al,ds:0xb76435f3
  40fb56:	popf   
  40fb57:	jle    0x40fb71
  40fb59:	xchg   edx,eax
  40fb5a:	aad    0xe8
  40fb5c:	xchg   DWORD PTR [eax-0x435f0639],ebp
  40fb62:	(bad)  [edx]
  40fb64:	xor    DWORD PTR [edi],0x35
  40fb67:	aaa    
  40fb68:	or     bl,BYTE PTR [edx+ebp*2-0x13f4967c]
  40fb6f:	cmp    bl,ch
  40fb71:	mov    ah,0x79
  40fb73:	int    0xda
  40fb75:	xor    eax,0x970449bb
  40fb7a:	mov    ah,0xea
  40fb7c:	push   cs
  40fb7d:	mov    cl,0xa
  40fb7f:	push   cs
  40fb80:	jmp    0xd55abddb
  40fb85:	dec    esi
  40fb86:	jbe    0xe940cea
  40fb8c:	cmp    DWORD PTR [edx-0x46e30f40],ebx
  40fb92:	push   ebp
  40fb93:	inc    ebx
  40fb94:	xchg   DWORD PTR [eax-0x11],edi
  40fb97:	xchg   edi,eax
  40fb98:	xchg   esp,eax
  40fb99:	mov    fs,WORD PTR [edi+0x15]
  40fb9c:	xchg   BYTE PTR [eax],bl
  40fb9e:	mov    ecx,0xaedc36b4
  40fba3:	cmp    eax,0xf35a9037
  40fba8:	shr    DWORD PTR [ecx],cl
  40fbaa:	cld    
  40fbab:	and    eax,0x16e91189
  40fbb0:	mov    dh,0x70
  40fbb2:	fcmovu st,st(1)
  40fbb4:	xor    bl,cl
  40fbb6:	test   eax,0x17cc4c6b
  40fbbb:	les    ecx,FWORD PTR [ecx+edi*4-0x69]
  40fbbf:	mov    esi,ebp
  40fbc1:	pop    ecx
  40fbc2:	cmp    edi,DWORD PTR [ebx]
  40fbc4:	lea    ebp,[ebx-0x25f0b2f1]
  40fbca:	and    BYTE PTR [eax-0x1c2bc444],bh
  40fbd0:	(bad)  
  40fbd1:	into   
  40fbd2:	fcomp  st(7)
  40fbd4:	je     0x40fba6
  40fbd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fbd7:	(bad)  
  40fbd9:	ficomp DWORD PTR [esi]
  40fbdb:	jl     0x40fc38
  40fbdd:	fs stos DWORD PTR es:[edi],eax
  40fbdf:	mov    WORD PTR ds:0xd7d9b04e,es
  40fbe5:	xor    BYTE PTR [edx+0x8dfbdcf],0x3c
  40fbec:	imul   esp,DWORD PTR [edx-0x2],0xffffff99
  40fbf0:	jle    0x40fbdb
  40fbf2:	push   edx
  40fbf3:	xchg   ebx,eax
  40fbf4:	retf   
  40fbf5:	mov    ds:0x5c0b9f52,al
  40fbfa:	inc    ebx
  40fbfb:	mov    ebx,0xa33d8080
  40fc00:	ja     0x40fba5
  40fc02:	cmp    DWORD PTR [eax+0x36],ebx
  40fc05:	add    eax,0xc96f71c1
  40fc0a:	in     eax,dx
  40fc0b:	out    dx,eax
  40fc0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc0d:	mov    gs,WORD PTR [edx]
  40fc0f:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40fc11:	jge    0x40fc04
  40fc13:	cmp    cl,BYTE PTR [esp+ebx*1-0x6a]
  40fc17:	lds    ebp,FWORD PTR [eax+0x4d42ad8c]
  40fc1d:	mov    WORD PTR [edx-0xb],?
  40fc20:	sar    DWORD PTR [edx],cl
  40fc22:	xchg   ecx,eax
  40fc23:	lods   eax,DWORD PTR ds:[esi]
  40fc24:	mov    esi,0x7b1f3537
  40fc29:	gs mov ebp,0xbc919bb3
  40fc2f:	sub    al,0x5d
  40fc31:	fisttp DWORD PTR [edi+0x3af9df70]
  40fc37:	adc    eax,0x3600dd9d
  40fc3c:	ret    0xc92a
  40fc3f:	lods   al,BYTE PTR ds:[esi]
  40fc40:	sub    DWORD PTR [edi+0x43],ebx
  40fc43:	dec    esi
  40fc44:	cmp    al,0x45
  40fc46:	cmp    BYTE PTR [edx+0x7af44088],dl
  40fc4c:	and    DWORD PTR [ebx+ecx*2+0x1dd3f733],ebx
  40fc53:	or     al,0xc
  40fc55:	fabs   
  40fc57:	add    DWORD PTR [ebp+0x3a],esi
  40fc5a:	mov    eax,ds:0x3dc74657
  40fc5f:	xchg   esi,eax
  40fc60:	push   0x7bcd814d
  40fc65:	fistp  DWORD PTR [edi+0x563fdb67]
  40fc6b:	pop    es
  40fc6c:	lock stos DWORD PTR es:[edi],eax
  40fc6e:	or     ah,cl
  40fc70:	push   ss
  40fc71:	out    dx,al
  40fc72:	test   al,0xc0
  40fc74:	sub    eax,0x4bcd4a3c
  40fc79:	push   ecx
  40fc7a:	add    al,0xc8
  40fc7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc7d:	outs   dx,BYTE PTR ds:[esi]
  40fc7e:	cli    
  40fc7f:	jmp    0x9b1b897a
  40fc84:	adc    BYTE PTR [ecx],0x51
  40fc87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc88:	repnz out 0x9b,al
  40fc8b:	in     eax,dx
  40fc8c:	iret   
  40fc8d:	and    DWORD PTR [edx],ebx
  40fc8f:	imul   edx,DWORD PTR [ebx-0x5171c651],0xffffffec
  40fc96:	ret    
  40fc97:	scas   al,BYTE PTR es:[edi]
  40fc98:	mov    ds:0xc35e2eca,eax
  40fc9d:	(bad)  
  40fc9e:	and    BYTE PTR [ebp-0x2b],dh
  40fca1:	shl    ebp,1
  40fca3:	int3   
  40fca4:	pop    ss
  40fca5:	xchg   ecx,eax
  40fca6:	adc    eax,0xf27b10a5
  40fcab:	cmp    DWORD PTR [ebp-0x8b13b08],ebp
  40fcb1:	shl    DWORD PTR [esi+esi*1-0x6b],1
  40fcb5:	(bad)  
  40fcb6:	(bad)  
  40fcb7:	scas   al,BYTE PTR es:[edi]
  40fcb8:	inc    ebx
  40fcb9:	add    edi,ebp
  40fcbb:	lods   al,BYTE PTR ds:[esi]
  40fcbc:	gs std 
  40fcbe:	inc    esp
  40fcbf:	in     eax,0x59
  40fcc1:	fbld   TBYTE PTR [ecx+edi*1]
  40fcc4:	loopne 0x40fceb
  40fcc6:	repnz xchg esi,eax
  40fcc8:	data16 loopne 0x40fd11
  40fccb:	je     0x40fc53
  40fccd:	adc    al,BYTE PTR [edx+0x31]
  40fcd0:	mov    bl,0x27
  40fcd2:	pop    edi
  40fcd3:	sbb    DWORD PTR [edi],edi
  40fcd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fcd6:	dec    edi
  40fcd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcd8:	dec    edx
  40fcd9:	sub    ch,0xa6
  40fcdc:	lods   eax,DWORD PTR ds:[esi]
  40fcdd:	jp     0x40fc8d
  40fcdf:	fbld   TBYTE PTR [esi+eax*2-0x26253e49]
  40fce6:	js     0x40fcdf
  40fce8:	and    bl,BYTE PTR [esi]
  40fcea:	xor    DWORD PTR [edx-0x720a221d],ebx
  40fcf0:	neg    DWORD PTR [edi]
  40fcf2:	or     cl,ah
  40fcf4:	into   
  40fcf5:	add    cl,BYTE PTR [edi-0x7b]
  40fcf8:	adc    al,bh
  40fcfa:	pop    ss
  40fcfb:	cmp    al,0x15
  40fcfd:	inc    ebx
  40fcfe:	cli    
  40fcff:	(bad)  [edi+0x6b]
  40fd02:	and    al,0x6d
  40fd04:	and    eax,DWORD PTR [ebx]
  40fd06:	inc    ecx
  40fd07:	ffree  st(3)
  40fd09:	mov    dl,0x86
  40fd0b:	ja     0x40fcfd
  40fd0d:	and    eax,0x8661bb77
  40fd12:	jno    0x40fd5b
  40fd14:	dec    ecx
  40fd15:	sahf   
  40fd16:	sbb    BYTE PTR [edi+0x7c],cl
  40fd19:	loop   0x40fd1c
  40fd1b:	pop    edi
  40fd1c:	popa   
  40fd1d:	out    0xf6,al
  40fd1f:	jno    0x40fcba
  40fd21:	outs   dx,BYTE PTR ds:[esi]
  40fd22:	adc    eax,0x795fd65e
  40fd27:	fisttp QWORD PTR [edx-0x14b476d2]
  40fd2d:	push   ss
  40fd2e:	sbb    bh,ch
  40fd30:	mov    cl,0x60
  40fd32:	inc    edx
  40fd33:	dec    edx
  40fd34:	aad    0xcd
  40fd36:	stos   DWORD PTR es:[edi],eax
  40fd37:	pop    ebp
  40fd38:	push   ebp
  40fd39:	jns    0x40fccd
  40fd3b:	mov    al,ds:0x4efe4dfd
  40fd40:	sbb    ah,dh
  40fd42:	mov    edi,0xc3017300
  40fd47:	aad    0x45
  40fd49:	mov    ch,0xad
  40fd4b:	push   ss
  40fd4c:	mov    ds:0xe1ee11bb,al
  40fd51:	jae    0x40fd45
  40fd53:	dec    edi
  40fd54:	dec    ecx
  40fd55:	cmp    esi,DWORD PTR [ebp+0x6b]
  40fd58:	lods   al,BYTE PTR ds:[esi]
  40fd59:	pushf  
  40fd5a:	stc    
  40fd5b:	sbb    ch,ch
  40fd5d:	mov    al,ds:0xa38152ca
  40fd62:	test   BYTE PTR [edi-0x7d],al
  40fd65:	cld    
  40fd66:	out    dx,eax
  40fd67:	sub    ebx,DWORD PTR [ebx]
  40fd69:	cld    
  40fd6a:	push   0x2d
  40fd6c:	or     ecx,DWORD PTR [esi-0x116c2f3d]
  40fd72:	mov    ebx,0xf5c7bbee
  40fd77:	jb     0x40fddd
  40fd79:	jae    0x40fd10
  40fd7b:	push   edx
  40fd7c:	sbb    DWORD PTR [ebx-0x3f64fcfa],edi
  40fd82:	mov    esi,0xa03ae2ce
  40fd87:	rol    DWORD PTR [ebx],0x17
  40fd8a:	jnp    0x40fd60
  40fd8c:	ins    BYTE PTR es:[edi],dx
  40fd8d:	bound  edi,QWORD PTR [esi]
  40fd8f:	loop   0x40fdf1
  40fd91:	xor    BYTE PTR [ecx+edi*8-0x12372f97],ah
  40fd98:	sti    
  40fd99:	mov    BYTE PTR [ebp-0x35],cl
  40fd9c:	test   dh,bh
  40fd9e:	adc    eax,0x2b5dd68e
  40fda3:	aam    0x6d
  40fda5:	retf   0xfb87
  40fda8:	xchg   BYTE PTR [ecx],ch
  40fdaa:	xchg   ebx,eax
  40fdab:	mov    cl,0xda
  40fdad:	imul   ebp,DWORD PTR [eax],0x48
  40fdb0:	xor    DWORD PTR [ebp-0x66],0xffffffb0
  40fdb4:	fcmove st,st(1)
  40fdb6:	bound  ebx,QWORD PTR [edx-0x73]
  40fdb9:	cmp    eax,0x512e4495
  40fdbe:	sbb    DWORD PTR [ebx+0x65426bb5],ebp
  40fdc4:	scas   al,BYTE PTR es:[edi]
  40fdc5:	xchg   esi,eax
  40fdc6:	loope  0x40fd60
  40fdc8:	mov    cl,0x9f
  40fdca:	fstp   TBYTE PTR [ebx-0x50]
  40fdcd:	(bad)  
  40fdce:	clc    
  40fdcf:	mov    es,WORD PTR [ecx+0x1e61fe2a]
  40fdd5:	nop
  40fdd6:	sub    edi,ecx
  40fdd8:	dec    edx
  40fdd9:	fmul   DWORD PTR [edx+0x6c1690af]
  40fddf:	jmp    0xf1f1:0xf4be5a8b
  40fde6:	cli    
  40fde7:	adc    al,0x95
  40fde9:	out    0xc7,eax
  40fdeb:	and    cl,bh
  40fded:	and    al,0x1e
  40fdef:	pusha  
  40fdf0:	sub    BYTE PTR [ebp-0x28],al
  40fdf3:	sub    DWORD PTR [ecx],esi
  40fdf5:	loop   0x40fddb
  40fdf7:	inc    esp
  40fdf8:	inc    ecx
  40fdf9:	ins    DWORD PTR es:[edi],dx
  40fdfa:	mov    fs,WORD PTR [edx+ebx*8+0x2a]
  40fdfe:	test   BYTE PTR [edi+0x6f7c0750],bl
  40fe04:	mov    esi,0xad6789cc
  40fe09:	leave  
  40fe0a:	and    ah,BYTE PTR [edx+0x668d8222]
  40fe10:	pop    ebx
  40fe11:	mov    edx,0x54e7167e
  40fe16:	sar    BYTE PTR [ebx+ebp*2],cl
  40fe19:	cmp    eax,DWORD PTR ss:[edx-0x63]
  40fe1d:	call   0xa9be:0x872c27bc
  40fe24:	gs pop es
  40fe26:	inc    esi
  40fe27:	mul    BYTE PTR [eax]
  40fe29:	pop    edx
  40fe2a:	xor    esi,DWORD PTR [esi]
  40fe2c:	(bad)  
  40fe2d:	imul   esi,esp,0x2b1b7745
  40fe33:	into   
  40fe34:	mov    edx,0xd00a3ba8
  40fe39:	sbb    ch,BYTE PTR [edx+0x48f2e3ae]
  40fe3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe40:	je     0x40fe0e
  40fe42:	mov    bl,0x6d
  40fe44:	mov    DWORD PTR [edx-0x51],ebp
  40fe47:	out    dx,al
  40fe48:	(bad)  [ebp-0x3ac0343d]
  40fe4e:	leave  
  40fe4f:	leave  
  40fe50:	xlat   BYTE PTR ds:[ebx]
  40fe51:	jb     0x40feae
  40fe53:	nop
  40fe54:	mov    ds:0x23ffec50,eax
  40fe59:	stos   DWORD PTR es:[edi],eax
  40fe5a:	mov    ch,0x3d
  40fe5c:	or     al,0xde
  40fe5e:	(bad)  
  40fe5f:	es and eax,0xdbe5ad3f
  40fe65:	inc    esp
  40fe66:	xor    ecx,DWORD PTR [ecx+0x5f702611]
  40fe6c:	jge    0x40fe45
  40fe6e:	adc    ah,BYTE PTR [esi-0x4c]
  40fe71:	jecxz  0x40fe0d
  40fe73:	retf   0xd129
  40fe76:	mov    dl,0x56
  40fe78:	cmp    ebp,0x4ddb55d5
  40fe7e:	mov    edi,0x4ba41589
  40fe83:	fdiv   DWORD PTR [edx]
  40fe85:	mov    ebx,0xfec9360
  40fe8a:	sub    ecx,edx
  40fe8c:	mov    dl,0x68
  40fe8e:	jns    0x40fea5
  40fe90:	sbb    eax,0x226da48b
  40fe95:	lahf   
  40fe96:	inc    ebp
  40fe97:	jne    0x40feff
  40fe99:	pusha  
  40fe9a:	add    BYTE PTR [ebx-0x4439a1e1],0x1c
  40fea1:	xor    dh,BYTE PTR [edx+0x3a1bb98f]
  40fea7:	xor    DWORD PTR [esi-0x23],0xd8022556
  40feae:	pop    es
  40feaf:	cmc    
  40feb0:	add    esi,ecx
  40feb2:	xchg   ebx,eax
  40feb3:	stos   DWORD PTR es:[edi],eax
  40feb4:	jge    0x40ff11
  40feb6:	sub    eax,0x2ca94716
  40febb:	cwde   
  40febc:	pop    ecx
  40febd:	dec    ebp
  40febe:	xor    BYTE PTR gs:[eax+0x3c0c7bc1],0x31
  40fec6:	(bad)  
  40fec7:	cwde   
  40fec8:	aad    0xae
  40feca:	mov    ch,0x91
  40fecc:	xchg   ebx,eax
  40fecd:	test   BYTE PTR [edx-0x19457143],ah
  40fed3:	mov    dl,BYTE PTR [edx-0x74]
  40fed6:	inc    ebx
  40fed7:	add    eax,edx
  40fed9:	push   ebp
  40feda:	dec    ebp
  40fedb:	loope  0x40ff1b
  40fedd:	cld    
  40fede:	pop    edx
  40fedf:	imul   esi,DWORD PTR [edi-0x257a81ea],0x8136aad8
  40fee9:	(bad)  
  40feea:	jne    0x40ff00
  40feec:	leave  
  40feed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40feee:	mov    cl,0x77
  40fef0:	dec    ebx
  40fef1:	rcl    DWORD PTR ds:0x83a6fcde,cl
  40fef7:	adc    al,dl
  40fef9:	add    BYTE PTR ds:0xf32ad5f6,0x55
  40ff00:	xchg   ecx,eax
  40ff01:	dec    esp
  40ff02:	into   
  40ff03:	fstp   QWORD PTR [ecx+0x1cea49fe]
  40ff09:	or     BYTE PTR fs:[ecx-0x15ecc200],0x21
  40ff11:	mov    dh,0x8a
  40ff13:	cmp    BYTE PTR [edx-0x39],ch
  40ff16:	push   ebx
  40ff17:	out    0xbe,al
  40ff19:	jns    0x40ff88
  40ff1b:	retf   0xcbc
  40ff1e:	mov    dl,0xd7
  40ff20:	mov    ah,0x22
  40ff22:	test   BYTE PTR [eax],dh
  40ff24:	and    al,0x82
  40ff26:	dec    eax
  40ff27:	data16 fwait
  40ff29:	popa   
  40ff2a:	ds jbe 0x40ff85
  40ff2d:	dec    edi
  40ff2e:	jge    0x40ff7e
  40ff30:	xchg   DWORD PTR ds:[esp+ebp*1],ebx
  40ff34:	fstp   DWORD PTR [ebx]
  40ff36:	test   BYTE PTR [esi-0x3041a988],cl
  40ff3c:	fdiv   DWORD PTR [edi+0x3ed4a597]
  40ff42:	pop    esp
  40ff43:	clc    
  40ff44:	cmp    DWORD PTR ds:0x1ccb3388,ebx
  40ff4a:	jb     0x40ff05
  40ff4c:	jb     0x40ff8c
  40ff4e:	repz dec BYTE PTR [eax+eax*2+0x756126c0]
  40ff56:	sahf   
  40ff57:	scas   eax,DWORD PTR es:[edi]
  40ff58:	xor    BYTE PTR [edi],bl
  40ff5a:	pop    eax
  40ff5b:	(bad)  
  40ff5c:	std    
  40ff5d:	cdq    
  40ff5e:	or     al,0xa3
  40ff60:	dec    esp
  40ff61:	in     eax,0xb0
  40ff63:	push   0xd38993b8
  40ff68:	fndisi(8087 only) 
  40ff6a:	xor    DWORD PTR [ecx-0x5e],edi
  40ff6d:	adc    eax,0x869e5ec9
  40ff72:	in     eax,dx
  40ff73:	xchg   BYTE PTR [edi+0x47],bh
  40ff76:	sbb    esp,DWORD PTR [ebx-0x459cbb08]
  40ff7c:	or     al,0x3a
  40ff7e:	inc    ebp
  40ff7f:	pop    ebp
  40ff80:	jb     0x40ff3e
  40ff82:	inc    ebx
  40ff83:	or     BYTE PTR [eax+0x2d],ch
  40ff86:	pop    ebx
  40ff87:	dec    edx
  40ff88:	push   ss
  40ff89:	cwde   
  40ff8a:	jo     0x410008
  40ff8c:	(bad)  
  40ff8d:	push   0x48
  40ff8f:	shl    DWORD PTR [edi+eiz*8-0x38d16fd2],1
  40ff96:	and    BYTE PTR [edi+0x3c],al
  40ff99:	xchg   ebp,eax
  40ff9a:	jl     0x40ff86
  40ff9c:	push   es
  40ff9d:	mov    al,ch
  40ff9f:	fs jnp 0x40ff3b
  40ffa2:	push   0xf04f400a
  40ffa7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffa8:	add    esp,DWORD PTR [eax]
  40ffaa:	addr16 jmp 0xc63d:0xc3b15b08
  40ffb2:	out    dx,eax
  40ffb3:	aam    0x55
  40ffb5:	pop    esp
  40ffb6:	sub    ebp,DWORD PTR [ebx+0x7f]
  40ffb9:	into   
  40ffba:	dec    edx
  40ffbb:	ins    DWORD PTR es:[edi],dx
  40ffbc:	addr16 icebp 
  40ffbe:	out    0x12,eax
  40ffc0:	mov    al,ds:0xbe76d569
  40ffc5:	in     eax,0x52
  40ffc7:	add    DWORD PTR [edx+0x69460753],eax
  40ffcd:	ficom  WORD PTR [edi-0x29dff5c0]
  40ffd3:	push   es
  40ffd4:	xchg   edx,eax
  40ffd5:	pop    esp
  40ffd6:	jno    0x40ffd8
  40ffd8:	test   eax,0x346303a4
  40ffdd:	xchg   edx,eax
  40ffde:	mov    ebx,0xdf3d1dd
  40ffe3:	shr    DWORD PTR [ecx-0x7d],1
  40ffe6:	or     DWORD PTR [esi+0x2f04a906],eax
  40ffec:	pop    eax
  40ffed:	or     ecx,DWORD PTR [ebx+0x35e2e07a]
  40fff3:	cmp    BYTE PTR ds:0xb3929c7,dl
  40fff9:	outs   dx,BYTE PTR ds:[esi]
  40fffa:	and    bh,BYTE PTR [ecx+0x69]
  40fffd:	jae    0x40ffa2
  40ffff:	jne    0x410000
  410001:	enter  0x2b1f,0x5f
  410005:	add    dl,BYTE PTR [edx+eax*1+0x40]
  410009:	jae    0x40ff99
  41000b:	(bad)  
  41000d:	cmc    
  41000e:	jb     0x40fffa
  410010:	(bad)  
  410011:	(bad)  [ebx]
  410013:	fdivr  DWORD PTR [ecx+0x21]
  410016:	jl     0x410084
  410018:	cld    
  410019:	xchg   ebx,eax
  41001a:	enter  0xcd37,0x99
  41001e:	in     eax,dx
  41001f:	aas    
  410020:	push   es
  410021:	inc    esp
  410022:	test   al,0xcc
  410024:	rol    BYTE PTR [eax],cl
  410026:	aas    
  410027:	imul   esp,DWORD PTR [ecx-0x49a6d7cd],0xdde0bc17
  410031:	adc    dl,BYTE PTR [ebx+0x1f]
  410034:	cs mov dh,0xf8
  410037:	mov    al,0xaa
  410039:	cwde   
  41003a:	jo     0x4100af
  41003c:	or     DWORD PTR [esi+ecx*2-0x20fb2789],edi
  410043:	push   es
  410044:	inc    ebp
  410045:	mov    esp,0x61c083bb
  41004a:	or     ch,BYTE PTR [eax-0x608442f]
  410050:	into   
  410051:	add    BYTE PTR [ecx+esi*2-0x692ebdc6],cl
  410058:	pop    ss
  410059:	push   ds
  41005a:	and    DWORD PTR [esi],0xffffffb9
  41005d:	add    ebp,DWORD PTR [eax-0x13]
  410060:	(bad)  
  410061:	mov    esp,0x3b608f
  410066:	test   al,0x72
  410068:	out    0xe6,eax
  41006a:	jmp    0xee18cb3e
  41006f:	sub    BYTE PTR [ebp+edx*1+0x340c2d65],dh
  410076:	cmp    eax,0x83c4580
  41007b:	inc    esi
  41007c:	lahf   
  41007d:	push   edx
  41007e:	test   al,0xb2
  410080:	sub    esp,edx
  410082:	inc    esi
  410083:	jp     0x410027
  410085:	pop    es
  410086:	and    eax,0xdea05561
  41008b:	popa   
  41008c:	out    0x25,al
  41008e:	imul   esi,DWORD PTR [eax-0x42b6e5de],0x75
  410095:	mov    WORD PTR [edx],fs
  410097:	sbb    esi,esi
  410099:	add    edi,esi
  41009b:	arpl   WORD PTR ds:0x6003fb9b,sp
  4100a1:	ret    
  4100a2:	fs leave 
  4100a4:	cs dec edx
  4100a6:	push   ds
  4100a7:	cmp    ebp,0x57
  4100aa:	inc    eax
  4100ab:	(bad)  
  4100ac:	(bad)  
  4100ad:	clc    
  4100ae:	pop    eax
  4100af:	call   0x1e7c:0xe0823f4
  4100b6:	push   cs
  4100b7:	das    
  4100b8:	ins    DWORD PTR es:[edi],dx
  4100b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100ba:	(bad)  
  4100bb:	mov    esi,0xaaa588de
  4100c0:	mov    cl,0x52
  4100c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100c3:	add    BYTE PTR [edx+0x2a04ee15],dl
  4100c9:	leave  
  4100ca:	fiadd  WORD PTR [ebx]
  4100cc:	inc    edx
  4100cd:	scas   eax,DWORD PTR es:[edi]
  4100ce:	je     0x410086
  4100d0:	lahf   
  4100d1:	mov    edi,0xcf5ea910
  4100d6:	sbb    DWORD PTR ds:0x1634aee7,edx
  4100dc:	lods   eax,DWORD PTR ds:[esi]
  4100dd:	cmp    BYTE PTR [eax-0x33],0x26
  4100e1:	adc    BYTE PTR [esp+edi*2-0x4cce13e3],bh
  4100e8:	ret    0xd84f
  4100eb:	fcom   QWORD PTR [edx-0x6]
  4100ee:	int3   
  4100ef:	mov    BYTE PTR [ebx],dh
  4100f1:	test   DWORD PTR [ebp+0x267bace5],0xe90c2301
  4100fb:	int3   
  4100fc:	sub    eax,0x829ee1d8
  410101:	rol    DWORD PTR [ebx+0x67],1
  410104:	pop    ebx
  410105:	jns    0x410150
  410107:	jo     0x410154
  410109:	jno    0x410184
  41010b:	ins    BYTE PTR es:[edi],dx
  41010c:	mov    cl,0xee
  41010e:	add    BYTE PTR [ebp-0x5239af52],dl
  410114:	mov    ch,0x88
  410116:	sub    BYTE PTR [edx+0x5a79115d],ah
  41011c:	mov    esi,esp
  41011e:	sub    eax,0xdac99062
  410123:	sub    eax,0x731e8dad
  410128:	ss sub eax,0x2c1225a4
  41012e:	mov    ecx,ebp
  410130:	xchg   esi,eax
  410131:	dec    ebp
  410132:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410133:	lahf   
  410134:	jmp    0xafc2:0xa1871f57
  41013b:	sbb    BYTE PTR [ecx+ebp*1-0x17],dl
  41013f:	add    eax,0xa359f626
  410144:	sti    
  410145:	dec    eax
  410146:	or     BYTE PTR [edx],dl
  410148:	pop    edi
  410149:	add    al,al
  41014b:	push   cs
  41014c:	mov    bh,0x2e
  41014e:	adc    DWORD PTR ds:0x4fc17aa0,0x2fc48662
  410158:	gs inc ebp
  41015a:	sahf   
  41015b:	in     eax,dx
  41015c:	repz xchg edi,eax
  41015e:	xchg   ebp,eax
  41015f:	mov    ds:0x1a948a28,eax
  410164:	xchg   edi,eax
  410165:	xlat   BYTE PTR ds:[ebx]
  410166:	(bad)  
  410167:	dec    edi
  410168:	push   es
  410169:	sahf   
  41016a:	sub    eax,0x19e4cb8c
  41016f:	ret    
  410170:	lods   eax,DWORD PTR ds:[esi]
  410171:	inc    eax
  410172:	and    DWORD PTR [esi+0x4d],esp
  410175:	nop
  410176:	mov    ecx,0xf3cbf297
  41017b:	inc    esi
  41017c:	test   ebx,ebp
  41017e:	or     DWORD PTR ds:0x95dcd7b6,0xffffffab
  410185:	and    eax,0x6f9f94a3
  41018a:	dec    ebx
  41018b:	pop    ds
  41018c:	aad    0x66
  41018e:	inc    ebp
  41018f:	push   ss
  410190:	jnp    0x41011a
  410192:	sub    ch,BYTE PTR [esi]
  410194:	xor    eax,0xba0e5cce
  410199:	hlt    
  41019a:	je     0x410172
  41019c:	daa    
  41019d:	stos   BYTE PTR es:[edi],al
  41019e:	shr    BYTE PTR [edi+esi*8],cl
  4101a1:	imul   ecx,DWORD PTR [eax+0x66601c15],0x8dbdfb65
  4101ab:	icebp  
  4101ac:	mov    eax,ebx
  4101ae:	sbb    BYTE PTR [ebx+eax*1],cl
  4101b1:	dec    ecx
  4101b2:	and    DWORD PTR [edi+0x74dc7bd7],ebx
  4101b8:	inc    eax
  4101b9:	adc    eax,0x1519ccde
  4101be:	jb     0x4101e4
  4101c0:	dec    esp
  4101c1:	js     0x41016a
  4101c3:	(bad)  
  4101c5:	xchg   ebp,eax
  4101c6:	fistp  WORD PTR [edi-0x47e1e082]
  4101cc:	outs   dx,BYTE PTR ds:[esi]
  4101cd:	lods   eax,DWORD PTR ds:[esi]
  4101ce:	or     al,0x2b
  4101d0:	ss dec ecx
  4101d2:	cli    
  4101d3:	mov    dh,0x29
  4101d5:	sub    bl,BYTE PTR ds:0x36d73a0e
  4101db:	test   eax,0x284489e0
  4101e0:	call   FWORD PTR [ebx-0x2]
  4101e3:	cmc    
  4101e4:	sbb    DWORD PTR [edi+0x174a4586],ecx
  4101ea:	(bad)  
  4101eb:	fnstenv [ebx]
  4101ed:	imul   esp,DWORD PTR [ecx+0x18],0x7
  4101f1:	nop
  4101f2:	or     ebx,DWORD PTR [ebx]
  4101f4:	inc    edi
  4101f5:	xor    eax,0x8f8a0e70
  4101fa:	test   al,0x15
  4101fc:	punpcklbw mm6,DWORD PTR [edi+0x3b1a0328]
  410203:	aaa    
  410204:	xor    eax,eax
  410206:	pop    ecx
  410207:	pop    ebx
  410208:	mov    ds:0x9961d337,al
  41020d:	jecxz  0x4101af
  41020f:	xchg   ebp,eax
  410210:	(bad)  
  410211:	cmp    ecx,DWORD PTR [ebp+0x69]
  410214:	adc    BYTE PTR [edi],bh
  410216:	push   ss
  410217:	sub    al,0x3f
  410219:	xor    edi,DWORD PTR [esi]
  41021b:	mov    dh,0xba
  41021d:	xor    bl,cl
  41021f:	(bad)  
  410220:	xchg   ebx,eax
  410221:	push   es
  410222:	(bad)  
  410223:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410224:	or     bh,BYTE PTR [esi+0x6add540c]
  41022a:	adc    dl,bl
  41022c:	sbb    ebp,edi
  41022e:	jne    0x41025e
  410230:	sbb    eax,0x9edd4bd
  410235:	mov    esi,0x427ea5a1
  41023a:	lods   al,BYTE PTR ds:[esi]
  41023b:	and    al,0xb5
  41023d:	fnstenv [ebp-0x7c63f929]
  410243:	imul   ecx,DWORD PTR [ebx-0x16],0x2ec0878e
  41024a:	je     0x41024f
  41024c:	addr16 test eax,0x3cae489c
  410252:	inc    ecx
  410253:	scas   eax,DWORD PTR es:[edi]
  410254:	pop    eax
  410255:	das    
  410256:	iret   
  410257:	and    eax,0x27f1ab0a
  41025c:	sbb    ah,BYTE PTR [esi+eiz*1-0x58]
  410260:	add    ebx,DWORD PTR [ebx+0x2d2bafc2]
  410266:	push   0x25
  410268:	scas   al,BYTE PTR es:[edi]
  410269:	inc    edx
  41026a:	jbe    0x4102b4
  41026c:	aas    
  41026d:	and    esp,DWORD PTR [esi]
  41026f:	pop    ds
  410270:	ins    BYTE PTR es:[edi],dx
  410271:	push   cs
  410272:	fidiv  WORD PTR ds:0xa54e24bc
  410278:	push   ebx
  410279:	mov    eax,0xa0bc39e1
  41027e:	pop    esi
  41027f:	pusha  
  410280:	xor    eax,0xed62b857
  410285:	dec    edx
  410286:	aam    0xa6
  410288:	cmp    esi,DWORD PTR [edx+0x33e0501]
  41028e:	pop    ecx
  41028f:	pop    es
  410290:	sbb    BYTE PTR [ebx+0x4bbc9538],cl
  410296:	mov    dl,0x35
  410298:	test   al,0xb1
  41029a:	xchg   ebx,eax
  41029b:	jns    0x410249
  41029d:	fld    DWORD PTR [edx+0x3d]
  4102a0:	sub    eax,DWORD PTR [edi+0x60]
  4102a3:	dec    esi
  4102a4:	iret   
  4102a5:	push   ebp
  4102a6:	jne    0x410260
  4102a8:	pop    ds
  4102a9:	aas    
  4102aa:	push   edx
  4102ab:	ror    BYTE PTR [esi],cl
  4102ad:	scas   al,BYTE PTR es:[edi]
  4102ae:	jecxz  0x4102f5
  4102b0:	push   es
  4102b1:	xor    DWORD PTR [ebp+0x7f],ebp
  4102b4:	nop
  4102b5:	xchg   edx,eax
  4102b6:	dec    esp
  4102b7:	pop    edx
  4102b8:	lahf   
  4102b9:	sub    DWORD PTR [edx-0x7f21db04],edi
  4102bf:	sar    BYTE PTR [eax+0x6f7abb33],0x15
  4102c6:	dec    ebx
  4102c7:	sbb    DWORD PTR [esi-0x1fb1dc4a],esp
  4102cd:	call   0x679a2814
  4102d2:	idiv   DWORD PTR [esi]
  4102d4:	sub    DWORD PTR [ecx],esp
  4102d6:	pop    ds
  4102d7:	lods   eax,DWORD PTR ds:[esi]
  4102d8:	inc    ebp
  4102d9:	adc    DWORD PTR [eax],ecx
  4102db:	retf   0x91d1
  4102de:	sbb    eax,0x698fda9a
  4102e3:	pop    ss
  4102e4:	sbb    al,0x71
  4102e6:	loope  0x4102b0
  4102e8:	in     al,dx
  4102e9:	jo     0x410280
  4102eb:	mov    dh,bh
  4102ed:	fidivr WORD PTR [esi-0x2ec4e7f6]
  4102f3:	mov    ?,WORD PTR [edx+0x3e]
  4102f6:	ret    0x2b2a
  4102f9:	xor    al,0x17
  4102fb:	retf   0xfc89
  4102fe:	(bad)  
  4102ff:	js     0x4102bb
  410301:	fcmovnbe st,st(5)
  410303:	retf   
  410304:	aaa    
  410305:	add    BYTE PTR [ebx+0x71],ch
  410308:	out    0xd8,eax
  41030a:	pop    esp
  41030b:	sbb    ch,BYTE PTR [edx+ebp*1-0x1a]
  41030f:	push   eax
  410310:	in     al,0xc5
  410312:	and    al,0xb2
  410314:	adc    eax,0x14907bf6
  410319:	mov    ds:0xb52b69fb,al
  41031e:	mov    dh,0x79
  410320:	and    al,0xde
  410322:	jmp    0x127a4eb8
  410327:	jecxz  0x4103a6
  410329:	xchg   edx,eax
  41032a:	test   BYTE PTR [esi+0x357c054a],bh
  410330:	test   eax,0x24e7f5ee
  410335:	mov    esi,0x128f610b
  41033a:	rol    DWORD PTR [esi+edx*1-0xb1c8dce],1
  410341:	xorps  xmm7,XMMWORD PTR [eax+0x2]
  410345:	repz iret 
  410347:	dec    esp
  410348:	dec    edi
  410349:	jle    0x41034a
  41034b:	hlt    
  41034c:	repz int3 
  41034e:	jae    0x410341
  410350:	fistp  WORD PTR [ebx+esi*2+0x2a]
  410354:	imul   ch
  410356:	inc    esi
  410357:	sub    BYTE PTR [ebp+0x7fe8ec96],bl
  41035d:	test   al,0xdc
  41035f:	ja     0x410392
  410361:	into   
  410362:	xor    edi,ebx
  410364:	cs jg  0x4103d3
  410367:	int3   
  410368:	scas   eax,DWORD PTR es:[edi]
  410369:	jo     0x41036d
  41036b:	mov    dh,0x76
  41036d:	jmp    0x410349
  41036f:	mov    ebp,0x460f8c9d
  410374:	sar    BYTE PTR [ebp+ecx*4+0x1b1a45f5],0x76
  41037c:	push   ds
  41037d:	dec    ebp
  41037e:	mov    dh,BYTE PTR [esi-0x45]
  410381:	xlat   BYTE PTR ds:[ebx]
  410382:	dec    ecx
  410383:	mov    eax,ds:0x34579da9
  410388:	xor    BYTE PTR [esi+0x61],cl
  41038b:	ss daa 
  41038d:	les    ebx,FWORD PTR [eax+0x70]
  410390:	enter  0x606f,0x53
  410394:	mov    ebp,0xcf216599
  410399:	repnz mov edx,0xe4560c2d
  41039f:	or     ah,bh
  4103a1:	sub    bl,0x79
  4103a4:	fistp  QWORD PTR [eax-0x48]
  4103a7:	xchg   esi,eax
  4103a8:	jl     0x41039c
  4103aa:	repnz ins BYTE PTR es:[edi],dx
  4103ac:	push   ds
  4103ad:	pop    ecx
  4103ae:	push   es
  4103af:	out    0xfb,al
  4103b1:	lea    edi,[edi]
  4103b3:	mov    dh,0xd0
  4103b5:	mov    edi,DWORD PTR [esp+eiz*4]
  4103b8:	jno    0x4103bf
  4103ba:	leave  
  4103bb:	retf   0x4ef2
  4103be:	pop    edx
  4103bf:	or     eax,0x8202044f
  4103c4:	out    0xa,eax
  4103c6:	ins    DWORD PTR es:[edi],dx
  4103c7:	adc    eax,0x57a78bf6
  4103cc:	(bad)  
  4103cd:	xor    eax,0xc37f86d4
  4103d2:	inc    ecx
  4103d3:	shl    DWORD PTR [edx],0xdb
  4103d6:	fistp  WORD PTR [edx-0x46]
  4103d9:	js     0x4103bf
  4103db:	dec    esi
  4103dc:	hlt    
  4103dd:	mov    BYTE PTR [edx+0x30],0x27
  4103e1:	sbb    DWORD PTR [ecx],esi
  4103e3:	(bad)  
  4103e4:	mov    ah,0x99
  4103e6:	jl     0x41037e
  4103e8:	lds    ecx,FWORD PTR [eax]
  4103ea:	not    DWORD PTR [ebx-0x1701b811]
  4103f0:	dec    ebp
  4103f1:	adc    BYTE PTR [edx],bl
  4103f3:	popa   
  4103f4:	or     BYTE PTR [ebx+esi*2],bh
  4103f7:	lock ins DWORD PTR es:[edi],dx
  4103f9:	ficom  WORD PTR [eax-0xf6676c0]
  4103ff:	jle    0x4103a6
  410401:	ret    
  410402:	cmp    BYTE PTR [eax],ah
  410404:	pop    ebx
  410405:	xchg   esp,eax
  410406:	popf   
  410407:	popa   
  410408:	pushfw 
  41040a:	dec    edi
  41040b:	xor    dl,BYTE PTR [esi-0x1eff180b]
  410411:	mov    bh,0x19
  410413:	pop    edi
  410414:	pop    es
  410415:	and    eax,0xa73a801a
  41041a:	lods   eax,DWORD PTR ds:[esi]
  41041b:	icebp  
  41041c:	mov    bl,cl
  41041e:	ins    DWORD PTR es:[edi],dx
  41041f:	or     edi,DWORD PTR [edi+0x2a]
  410422:	xor    al,0xe9
  410424:	jp     0x410430
  410426:	cld    
  410427:	mov    ds:0x7d165215,eax
  41042c:	pop    esi
  41042d:	jnp    0x410482
  41042f:	(bad)  
  410430:	mov    dh,0x20
  410432:	fmul   QWORD PTR [esi-0x54]
  410435:	jbe    0x4103c8
  410437:	inc    ecx
  410438:	jne    0x4103c9
  41043a:	lods   eax,DWORD PTR ds:[esi]
  41043b:	and    edx,0xa583915
  410441:	outs   dx,DWORD PTR ds:[esi]
  410442:	lock mov ecx,0x3485541a
  410448:	sbb    eax,0x322886d2
  41044d:	(bad)  
  41044e:	in     al,0x62
  410450:	popa   
  410451:	sbb    eax,0xc38cd57b
  410456:	call   0x2a4:0x9526c99b
  41045d:	ror    DWORD PTR ds:0xd8a6ae5d,0x49
  410464:	cmp    al,0x24
  410466:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410467:	mov    ?,WORD PTR [eax+0x1f]
  41046a:	stc    
  41046b:	mov    edx,0x46d7fb81
  410470:	mov    al,ds:0x4d915f5c
  410475:	paddd  mm7,QWORD PTR [ecx-0x303ae26e]
  41047c:	rcl    ecx,cl
  41047e:	push   ds
  41047f:	push   ecx
  410480:	jmp    0x41048a
  410482:	or     al,cl
  410484:	xchg   ebx,eax
  410485:	loop   0x410475
  410487:	fidiv  WORD PTR [edx-0x4faab4f7]
  41048d:	cmp    BYTE PTR [ebx],0x56
  410490:	dec    edi
  410491:	lock inc esp
  410493:	mov    ds:0x28911440,al
  410498:	mov    eax,0x3db080f1
  41049d:	out    dx,eax
  41049e:	inc    edi
  41049f:	fld    TBYTE PTR [edi+eax*1]
  4104a2:	fs jnp 0x4104bb
  4104a5:	or     al,0x23
  4104a7:	sbb    esp,DWORD PTR [esi+0x26]
  4104aa:	mov    ebx,0x2e7691d9
  4104af:	aad    0x4d
  4104b1:	inc    esi
  4104b2:	jl     0x4104af
  4104b4:	mov    al,ds:0xfb3e1d16
  4104b9:	es or  eax,0x1a8161f4
  4104bf:	push   ds
  4104c0:	mov    esi,0xbed81e6a
  4104c5:	ja     0x410455
  4104c7:	mov    ?,WORD PTR ds:0x14902301
  4104cd:	pop    edi
  4104ce:	out    0xef,al
  4104d0:	icebp  
  4104d1:	das    
  4104d2:	dec    esp
  4104d3:	aas    
  4104d4:	mov    ecx,0xadbb3bc6
  4104d9:	leave  
  4104da:	fwait
  4104db:	mov    al,0xdb
  4104dd:	lahf   
  4104de:	cld    
  4104df:	out    dx,al
  4104e0:	mov    ch,0x6e
  4104e2:	sahf   
  4104e3:	mov    DWORD PTR [ecx+edx*2+0x68],eax
  4104e7:	les    ecx,FWORD PTR [ecx+0x5d]
  4104ea:	scas   al,BYTE PTR es:[edi]
  4104eb:	and    bl,ch
  4104ed:	test   eax,0x3c36e514
  4104f2:	stos   BYTE PTR es:[edi],al
  4104f3:	jo     0x4104e4
  4104f5:	push   esi
  4104f6:	xchg   edx,eax
  4104f7:	sbb    ecx,0xffffffff
  4104fa:	sti    
  4104fb:	neg    BYTE PTR [ebp+0x66]
  4104fe:	neg    BYTE PTR [ecx+eiz*8-0x12]
  410502:	cwde   
  410503:	cmp    al,0x38
  410505:	jne    0x41054d
  410507:	scas   eax,DWORD PTR es:[edi]
  410508:	ins    BYTE PTR es:[edi],dx
  410509:	cmp    al,0x22
  41050b:	mov    ch,BYTE PTR [edx+0x7]
  41050e:	jnp    0x4104f4
  410510:	inc    edi
  410511:	jl     0x410508
  410513:	jge    0x4104b2
  410515:	fdecstp 
  410517:	mov    dh,cl
  410519:	ss xor ebp,esi
  41051c:	iret   
  41051d:	mov    ebx,0xbac39d2
  410522:	jmp    0x410540
  410524:	push   cs
  410525:	setg   ah
  410528:	addr16 mov ecx,0x4cd767dd
  41052e:	cli    
  41052f:	pop    ecx
  410530:	js     0x4105af
  410532:	dec    ecx
  410533:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410534:	sub    DWORD PTR [ecx+eax*4+0x73773b12],ecx
  41053b:	jmp    0x41054e
  41053d:	aam    0xff
  41053f:	cmp    eax,0x819c3ad6
  410544:	push   edx
  410545:	pop    ebp
  410546:	jle    0x4104e0
  410548:	in     al,dx
  410549:	add    edi,DWORD PTR [ecx]
  41054b:	xchg   edi,eax
  41054c:	mov    al,ds:0x23e451a2
  410551:	aad    0xa3
  410553:	mov    ecx,0x684510ae
  410558:	and    ch,ah
  41055a:	cmc    
  41055b:	aaa    
  41055c:	inc    edx
  41055d:	cmp    al,0xfe
  41055f:	or     al,0xa0
  410561:	mov    ah,BYTE PTR [edx+0x59]
  410564:	mov    edx,0x2ed28ac4
  410569:	xchg   eax,ecx
  41056b:	cdq    
  41056c:	push   ss
  41056d:	imul   eax,edi,0x1f21c750
  410573:	int3   
  410574:	adc    DWORD PTR [edx-0x54],0x61
  410578:	or     BYTE PTR ds:0x141cfe11,bh
  41057e:	fwait
  41057f:	cmp    eax,0x59e436f3
  410584:	scas   eax,DWORD PTR es:[edi]
  410585:	pop    esp
  410586:	or     DWORD PTR [edi],eax
  410588:	dec    edx
  410589:	mov    ebx,0x208b35df
  41058e:	or     bl,BYTE PTR [esi-0x62]
  410591:	dec    ecx
  410592:	cmc    
  410593:	xor    BYTE PTR [eax],dh
  410595:	adc    eax,0xdf5f6597
  41059a:	add    DWORD PTR [eax+0x51b038d4],ecx
  4105a0:	push   0xffffff8f
  4105a2:	loope  0x4105f5
  4105a4:	jno    0x410563
  4105a6:	jbe    0x41053f
  4105a8:	popa   
  4105a9:	scas   al,BYTE PTR es:[edi]
  4105aa:	sqrtps xmm1,XMMWORD PTR [edi-0x475126bf]
  4105b1:	int    0x9d
  4105b3:	es jmp 0x64b2:0xe2b714b3
  4105bb:	ror    DWORD PTR [esi-0x15cb3109],cl
  4105c1:	jecxz  0x4105cf
  4105c3:	les    edi,FWORD PTR [esi+0x2d8a908]
  4105c9:	inc    ebx
  4105ca:	pusha  
  4105cb:	mov    dl,0xa5
  4105cd:	test   al,0x17
  4105cf:	test   al,0xf1
  4105d1:	inc    esi
  4105d2:	dec    eax
  4105d3:	rol    DWORD PTR [esi+0x29475123],0x98
  4105da:	(bad)
  4105de:	ins    BYTE PTR es:[edi],dx
  4105df:	push   esp
  4105e0:	fidiv  DWORD PTR [eax]
  4105e2:	retf   0x5177
  4105e5:	or     ah,BYTE PTR [eax+0x689017b1]
  4105eb:	add    eax,DWORD PTR [edx-0x70ea8c2d]
  4105f1:	not    esi
  4105f3:	cmove  eax,eax
  4105f6:	test   ecx,esp
  4105f8:	xchg   ebp,eax
  4105f9:	inc    esi
  4105fa:	loop   0x41067b
  4105fc:	pop    esi
  4105fd:	pop    es
  4105fe:	rcr    DWORD PTR [ecx],0xf
  410601:	dec    ebp
  410602:	pop    ecx
  410603:	in     eax,0xcb
  410605:	stos   BYTE PTR es:[edi],al
  410606:	jno    0x410652
  410608:	iret   
  410609:	xchg   esi,eax
  41060a:	cmp    DWORD PTR [edx-0x15],edi
  41060d:	pusha  
  41060e:	inc    esp
  41060f:	xor    eax,0x54156b03
  410614:	hlt    
  410615:	dec    eax
  410616:	add    DWORD PTR [ebx-0x68a965f0],ebp
  41061c:	fadd   DWORD PTR [ebp-0x5c]
  41061f:	iret   
  410620:	sub    al,0xe3
  410622:	mov    dh,0x7d
  410624:	repz ret 
  410626:	repz push 0x38
  410629:	dec    edi
  41062a:	sub    DWORD PTR [ebx+0x7482871a],edx
  410630:	xor    ah,dh
  410632:	lahf   
  410633:	inc    edx
  410634:	scas   eax,DWORD PTR es:[edi]
  410635:	jg     0x410604
  410637:	shl    DWORD PTR [ecx+0x73c7ba1a],1
  41063d:	fwait
  41063e:	outs   dx,BYTE PTR ds:[esi]
  41063f:	in     al,0x74
  410641:	jns    0x4106c1
  410643:	jp     0x41061c
  410645:	fcomp  DWORD PTR [ebp-0x113de6e1]
  41064b:	cwde   
  41064c:	lock popa 
  41064e:	add    ebx,DWORD PTR [eax+ecx*4]
  410651:	inc    edi
  410652:	dec    ebp
  410653:	adc    eax,DWORD PTR [edx+eiz*1+0x70]
  410657:	push   cs
  410658:	dec    eax
  410659:	hlt    
  41065a:	jg     0x410679
  41065c:	enter  0x43,0x5f
  410660:	enter  0xbd56,0x42
  410664:	or     eax,0x83fb75a7
  410669:	add    BYTE PTR ds:0xcd88ff7,bh
  41066f:	xor    ebx,DWORD PTR [edi-0x7a]
  410672:	sub    dh,dh
  410674:	push   0xffffffde
  410676:	es jne 0x41067e
  410679:	sub    ch,al
  41067b:	(bad)  
  41067d:	fld    DWORD PTR [eax+0x46]
  410680:	adc    dh,BYTE PTR [edx+0x5bf4ec80]
  410686:	stc    
  410687:	call   0x75d26f60
  41068c:	pusha  
  41068d:	cmp    esi,0xffffffeb
  410690:	cs mov dl,0x50
  410693:	dec    eax
  410694:	call   0x7b54:0x1321981
  41069b:	sbb    BYTE PTR ds:0x2f23887b,cl
  4106a1:	inc    ebx
  4106a2:	mov    esi,0x6d3056a9
  4106a7:	fldcw  WORD PTR [edx+0x65]
  4106aa:	add    esi,DWORD PTR [edi+0x7ae02cbb]
  4106b0:	mov    al,ds:0x3f7e878f
  4106b5:	(bad)  
  4106b6:	sbb    BYTE PTR [ebp-0x577c0800],al
  4106bc:	mov    ebx,0x6d13814e
  4106c1:	les    edi,FWORD PTR [ebx-0x1c1546c1]
  4106c7:	enter  0xb7c1,0x62
  4106cb:	cmp    esp,DWORD PTR [ebp+0x68]
  4106ce:	and    BYTE PTR [ebx-0x2d],al
  4106d1:	add    DWORD PTR [ebp+0x5dee1d41],esp
  4106d7:	push   0x6
  4106d9:	enter  0xc8f5,0x98
  4106dd:	or     bl,BYTE PTR cs:[ebx+eax*2]
  4106e1:	add    eax,0x2f423208
  4106e6:	add    ah,BYTE PTR [ecx+edx*2]
  4106e9:	jmp    0xa520dc3a
  4106ee:	mov    eax,0x53e23dd2
  4106f3:	dec    esi
  4106f4:	adc    BYTE PTR [ecx+0x5ffa61c6],bl
  4106fa:	stos   BYTE PTR es:[edi],al
  4106fb:	mov    fs,WORD PTR [eax]
  4106fd:	imul   ebp,DWORD PTR [eax],0xbd9afde5
  410703:	dec    esp
  410704:	jbe    0x4106a6
  410706:	hlt    
  410707:	data16 sahf 
  410709:	xchg   ecx,edi
  41070b:	jns    0x4106a2
  41070d:	mov    es,WORD PTR [ebp-0x17efd3c6]
  410713:	mov    ds,WORD PTR [ebp+0x52]
  410716:	dec    eax
  410717:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410718:	mov    ch,0x37
  41071a:	les    edx,FWORD PTR [ebp+0x6c9a37a]
  410720:	pop    edx
  410721:	(bad)
  410725:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410726:	into   
  410727:	in     eax,0xa
  410729:	ret    0xaa68
  41072c:	push   eax
  41072d:	jo     0x41070f
  41072f:	sub    BYTE PTR [edx+0xc],cl
  410732:	mov    cl,0xf7
  410734:	add    al,0xe5
  410736:	retf   0x3aff
  410739:	pop    ds
  41073a:	xor    eax,DWORD PTR [eax-0x52]
  41073d:	das    
  41073e:	xchg   ebp,eax
  41073f:	and    al,0x88
  410741:	aad    0x48
  410743:	inc    ebx
  410744:	ins    BYTE PTR es:[edi],dx
  410745:	test   eax,0x6cfd2118
  41074a:	pushf  
  41074b:	clc    
  41074c:	data16 mov BYTE PTR [esi+0x50],0x33
  410751:	idiv   BYTE PTR ds:0x5cca5613
  410757:	loop   0x41077b
  410759:	daa    
  41075a:	in     al,0x1c
  41075c:	xor    eax,0x37393991
  410761:	jnp    0x4106f8
  410763:	fsubr  DWORD PTR [esi-0x24]
  410766:	or     DWORD PTR [esi],edx
  410768:	jae    0x4106f4
  41076a:	adc    BYTE PTR [edi],dl
  41076c:	mov    ch,0xa7
  41076e:	jne    0x41078e
  410770:	sub    ecx,esp
  410772:	push   eax
  410773:	je     0x4106f5
  410775:	mov    esp,0x963f168e
  41077a:	mov    edi,0x86c056c8
  41077f:	adc    DWORD PTR [ecx],0x83a2f788
  410785:	add    DWORD PTR [esi-0x4a],edx
  410788:	repnz mov cl,0x4c
  41078b:	jmp    0xa50d:0x6c8c93dd
  410792:	xchg   DWORD PTR [ecx-0x6fca776e],esp
  410798:	mov    eax,ds:0x29c87210
  41079d:	mov    esp,0x361b59bd
  4107a2:	xchg   DWORD PTR [edx+0xa],ebp
  4107a5:	cs inc esp
  4107a7:	inc    ebp
  4107a8:	data16 fist DWORD PTR [edi+0x280f9600]
  4107af:	sub    edi,ecx
  4107b1:	dec    eax
  4107b2:	test   ah,bh
  4107b4:	stc    
  4107b5:	sub    bl,bh
  4107b7:	out    dx,al
  4107b8:	test   ebp,edx
  4107ba:	hlt    
  4107bb:	pop    ebx
  4107bc:	cmp    eax,0x91c95f28
  4107c1:	cmp    BYTE PTR [ebx-0x5722b5f4],cl
  4107c7:	sub    al,BYTE PTR [ebx-0x5f]
  4107ca:	adc    eax,0xde3c4e77
  4107cf:	mov    edi,0x13610a6a
  4107d4:	retf   0x9880
  4107d7:	xchg   edi,eax
  4107d8:	push   ebp
  4107d9:	push   eax
  4107da:	mov    ebp,0xc27567e0
  4107df:	mov    dh,0xad
  4107e1:	out    dx,eax
  4107e2:	loop   0x410830
  4107e4:	in     eax,0x9b
  4107e6:	ss or  al,0xc4
  4107e9:	outs   dx,BYTE PTR ds:[esi]
  4107ea:	dec    edx
  4107eb:	aam    0xf2
  4107ed:	dec    ebp
  4107ee:	mov    DWORD PTR [ebx],ebx
  4107f0:	lds    esp,FWORD PTR [ecx+0x29]
  4107f3:	aam    0x23
  4107f5:	ins    DWORD PTR es:[edi],dx
  4107f6:	adc    al,0x69
  4107f8:	fadd   QWORD PTR [ebx-0x9]
  4107fb:	daa    
  4107fc:	gs pop esp
  4107fe:	dec    bl
  410800:	add    al,0xa0
  410802:	ins    DWORD PTR es:[edi],dx
  410803:	push   ebx
  410804:	mov    ds:0x389372ab,al
  410809:	clc    
  41080a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41080c:	sbb    eax,DWORD PTR [eax]
  41080e:	push   eax
  41080f:	ret    0xbf5d
  410812:	retf   0x59f7
  410815:	cmp    ebp,DWORD PTR [ecx-0x3ba89478]
  41081b:	ins    BYTE PTR es:[edi],dx
  41081c:	in     eax,0xf9
  41081e:	pop    eax
  41081f:	jg     0x410890
  410821:	rcr    DWORD PTR [eax],1
  410823:	dec    ebx
  410824:	sub    BYTE PTR [eax+0x36],cl
  410827:	lods   al,BYTE PTR ds:[esi]
  410828:	stos   DWORD PTR es:[edi],eax
  410829:	push   eax
  41082a:	add    BYTE PTR [edx-0x47ac15a],ah
  410830:	int3   
  410831:	sbb    esi,DWORD PTR [edi+0x64]
  410834:	mov    ds:0x60f2ac0e,al
  410839:	inc    esi
  41083a:	mov    dl,0x77
  41083c:	inc    ebp
  41083d:	push   ebx
  41083e:	sub    eax,0x26cb02ce
  410843:	fist   DWORD PTR [edx]
  410845:	sub    cl,BYTE PTR [ebx]
  410847:	pop    edx
  410848:	retf   0x524e
  41084b:	icebp  
  41084c:	jp     0x410825
  41084e:	mov    al,ds:0x951be906
  410853:	outs   dx,DWORD PTR ds:[esi]
  410854:	add    al,0xf8
  410856:	xchg   ecx,eax
  410857:	dec    esp
  410858:	pop    eax
  410859:	(bad)  
  41085a:	add    eax,0x2023e9e4
  41085f:	test   al,0x52
  410861:	or     ch,ah
  410863:	xchg   esi,eax
  410864:	les    ecx,FWORD PTR [ecx+0x20]
  410867:	adc    dh,BYTE PTR [ecx]
  410869:	mov    ebx,0x88335d88
  41086e:	mov    BYTE PTR ds:0xc351235e,bh
  410874:	sbb    al,0x9
  410876:	imul   eax,DWORD PTR [esi-0x13],0xffffffb5
  41087a:	in     eax,0x39
  41087c:	sub    cl,BYTE PTR [esi]
  41087e:	fidivr DWORD PTR ds:0xbb7d83f
  410884:	mov    cl,bl
  410886:	imul   ebp,DWORD PTR [edi+0x55],0xc9f127e0
  41088d:	jp     0x410814
  41088f:	cld    
  410890:	(bad)  
  410891:	loop   0x41082a
  410893:	mov    ebx,0x5395c591
  410898:	pop    eax
  410899:	or     eax,0x42078c6c
  41089e:	das    
  41089f:	imul   edi,DWORD PTR [esi-0x48],0xb61e1c79
  4108a6:	dec    edi
  4108a7:	lods   eax,DWORD PTR ds:[esi]
  4108a8:	sub    eax,ebx
  4108aa:	jg     0x410864
  4108ac:	fcmovne st,st(7)
  4108ae:	arpl   WORD PTR [esi+0x15],cx
  4108b1:	push   esi
  4108b2:	das    
  4108b3:	cld    
  4108b4:	test   eax,0x95814d03
  4108b9:	jge    0x41085b
  4108bb:	aaa    
  4108bc:	xchg   eax,eax
  4108be:	pop    eax
  4108bf:	lods   eax,DWORD PTR ds:[esi]
  4108c0:	lahf   
  4108c1:	cld    
  4108c2:	dec    edi
  4108c3:	fyl2xp1 
  4108c5:	ds rcl ah,1
  4108c8:	push   esp
  4108c9:	inc    edi
  4108ca:	scas   eax,DWORD PTR es:[edi]
  4108cb:	push   esp
  4108cc:	adc    al,0x1e
  4108ce:	mov    bl,0x5a
  4108d0:	adc    BYTE PTR [esi],0xe6
  4108d3:	stos   BYTE PTR es:[edi],al
  4108d4:	inc    ebp
  4108d5:	int3   
  4108d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108d7:	add    cl,cl
  4108d9:	jp     0x4108f1
  4108db:	popa   
  4108dc:	push   eax
  4108dd:	xor    eax,0x68dfdac7
  4108e2:	retf   0x8ff4
  4108e5:	gs push cs
  4108e7:	sub    dl,BYTE PTR [ebx+0x76c951c4]
  4108ed:	test   eax,0x9befff1c
  4108f2:	icebp  
  4108f3:	daa    
  4108f4:	cmp    al,BYTE PTR [ebp+0x51]
  4108f7:	lods   eax,DWORD PTR ds:[esi]
  4108f8:	ins    DWORD PTR es:[edi],dx
  4108f9:	test   DWORD PTR [esi+esi*4],0xd8f0fbea
  410900:	jg     0x4108bd
  410902:	dec    ecx
  410903:	jg     0x41096f
  410905:	jl     0x410887
  410907:	jnp    0x410979
  410909:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41090a:	mov    ebx,DWORD PTR [ebx]
  41090c:	cmp    ch,BYTE PTR [esi]
  41090e:	cli    
  41090f:	int3   
  410910:	div    esi
  410912:	sub    BYTE PTR [edi-0x4007bc7f],ah
  410918:	rep lods eax,DWORD PTR ds:[esi]
  41091a:	lock push ss
  41091c:	pop    esi
  41091d:	adc    al,0x90
  41091f:	std    
  410920:	push   cs
  410921:	ret    
  410922:	and    al,0x3e
  410924:	fsubr  st,st(2)
  410926:	jno    0x41094a
  410928:	sbb    esi,DWORD PTR [edx+0x51]
  41092b:	cmp    al,0xd9
  41092d:	push   es
  41092e:	dec    ebp
  41092f:	fidiv  WORD PTR [esi]
  410931:	pop    eax
  410932:	pop    esp
  410933:	ins    BYTE PTR es:[edi],dx
  410934:	cmp    BYTE PTR [ecx],dl
  410936:	mov    eax,ds:0xa33f182a
  41093b:	add    BYTE PTR [ebp+0x57],dl
  41093e:	jns    0x4108c9
  410940:	mov    ebp,0xc04e621c
  410945:	sub    al,0xc
  410947:	sahf   
  410948:	jmp    0x41092f
  41094a:	and    al,0x24
  41094c:	pushf  
  41094d:	inc    esp
  41094e:	pop    ecx
  41094f:	in     eax,dx
  410950:	add    eax,0x3b7b94da
  410955:	repnz not edi
  410958:	scas   eax,DWORD PTR es:[edi]
  410959:	mov    ah,0x39
  41095b:	bound  esp,QWORD PTR [edx+0x6a]
  41095e:	adc    eax,0xc0e42c02
  410963:	(bad)  
  410964:	jl     0x4108f4
  410966:	fisubr DWORD PTR [ebp-0x27]
  410969:	dec    edx
  41096a:	sbb    eax,DWORD PTR [ebx+0x11]
  41096d:	pop    ecx
  41096e:	sub    DWORD PTR [edi-0x60],0x59
  410972:	sub    bh,BYTE PTR [ebp+edx*1-0x3b]
  410976:	fnsave [ebx]
  410978:	and    ebx,DWORD PTR [esi-0x592576d0]
  41097e:	mov    WORD PTR [esi-0xe09df50],ds
  410984:	mov    ds:0xbeebc607,eax
  410989:	push   0x246f0c33
  41098e:	or     ch,BYTE PTR [edi+0x55ac78c]
  410994:	clc    
  410995:	fnsave ds:0x28aff3d3
  41099b:	jmp    0xd332:0xfc79d626
  4109a2:	inc    eax
  4109a3:	dec    ecx
  4109a4:	inc    ebx
  4109a5:	xchg   esp,eax
  4109a6:	loop   0x410968
  4109a8:	ficomp DWORD PTR [ebp+0x26]
  4109ab:	mov    ss,WORD PTR [ecx-0x7da8d215]
  4109b1:	cld    
  4109b2:	aas    
  4109b3:	xchg   ecx,eax
  4109b4:	loopne 0x41094b
  4109b6:	mov    WORD PTR [edx+0xb],fs
  4109b9:	xor    eax,0xf7e311e6
  4109be:	std    
  4109bf:	jmp    0x410991
  4109c1:	aad    0x6
  4109c3:	scas   al,BYTE PTR es:[edi]
  4109c4:	bound  ebx,QWORD PTR [ecx-0xe]
  4109c7:	jecxz  0x410997
  4109c9:	ror    DWORD PTR [edi+0x39],0xe3
  4109cd:	das    
  4109ce:	lods   eax,DWORD PTR ds:[esi]
  4109cf:	jb     0x410992
  4109d1:	push   ds
  4109d2:	ret    
  4109d3:	ds jge 0x4109ab
  4109d6:	mov    esp,0x18a6402d
  4109db:	xchg   edx,eax
  4109dc:	inc    edi
  4109dd:	sub    eax,0x30776be8
  4109e2:	dec    esp
  4109e3:	jg     0x410a35
  4109e5:	inc    esi
  4109e6:	mov    BYTE PTR [esi+0x67],dh
  4109e9:	mov    esp,0x2e48885b
  4109ee:	adc    eax,0x45158fe2
  4109f3:	std    
  4109f4:	out    dx,eax
  4109f5:	(bad)  
  4109f7:	cmp    BYTE PTR [edx+0x71],dl
  4109fa:	retf   
  4109fb:	fimul  DWORD PTR [edi-0x735db03e]
  410a01:	popa   
  410a02:	fistp  DWORD PTR [edi-0x57]
  410a05:	xchg   edx,eax
  410a06:	(bad)  
  410a07:	pop    edx
  410a08:	dec    ebp
  410a09:	lahf   
  410a0a:	cmp    al,bh
  410a0c:	cmp    DWORD PTR [ebp+ebx*8-0x7abe781d],esi
  410a13:	(bad)  
  410a14:	repnz out dx,eax
  410a16:	adc    BYTE PTR [edx],al
  410a18:	add    DWORD PTR [ecx-0x6c],ebp
  410a1b:	daa    
  410a1c:	push   ebp
  410a1d:	outs   dx,DWORD PTR ds:[esi]
  410a1e:	pop    ebp
  410a1f:	jo     0x4109c0
  410a21:	arpl   WORD PTR [edx+esi*8],bx
  410a24:	ficomp WORD PTR cs:[eax-0x16efc76e]
  410a2b:	ins    BYTE PTR es:[edi],dx
  410a2c:	nop
  410a2d:	out    dx,al
  410a2e:	cmp    BYTE PTR [ebx-0x5e833b62],dh
  410a34:	mov    esp,DWORD PTR [eax+0x247ba5b0]
  410a3a:	sbb    WORD PTR [ecx-0x47eaad55],ax
  410a41:	xchg   edi,eax
  410a42:	cmp    DWORD PTR [ecx-0x6],esi
  410a45:	jbe    0x410ac4
  410a47:	and    eax,0x6339d361
  410a4c:	popf   
  410a4d:	mov    edi,0x7352765e
  410a52:	xor    dh,0x71
  410a55:	loope  0x410a9a
  410a57:	out    dx,al
  410a58:	pop    ss
  410a59:	lods   eax,DWORD PTR ds:[esi]
  410a5a:	push   0x26b32aea
  410a5f:	mov    dh,0x65
  410a61:	(bad)  
  410a62:	fld    DWORD PTR [edi+0x6a133f8c]
  410a68:	(bad)  
  410a69:	jbe    0x410a62
  410a6b:	xchg   edi,eax
  410a6c:	ficom  WORD PTR ds:0x1436828
  410a72:	dec    eax
  410a73:	int3   
  410a74:	dec    esi
  410a75:	fcomp  DWORD PTR [ebx]
  410a77:	and    DWORD PTR [ebx+0x660035bc],edx
  410a7d:	jae    0x410ab5
  410a7f:	or     cl,dl
  410a81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a82:	pop    ds
  410a83:	in     eax,0x9f
  410a85:	jns    0x410a20
  410a87:	pusha  
  410a88:	popa   
  410a89:	fdivr  QWORD PTR [ecx]
  410a8b:	shl    BYTE PTR [esi+0x33847863],1
  410a91:	pop    eax
  410a92:	mov    ds:0x6512599a,eax
  410a97:	cmp    bl,al
  410a99:	clc    
  410a9a:	stos   DWORD PTR es:[edi],eax
  410a9b:	add    DWORD PTR [ebx],edx
  410a9d:	and    eax,0x69fa694c
  410aa2:	daa    
  410aa3:	and    al,0xd8
  410aa5:	xchg   edx,eax
  410aa6:	ds hlt 
  410aa8:	addr16 mov bh,cl
  410aab:	mov    DWORD PTR [ebx],ecx
  410aad:	sar    BYTE PTR [ebx+0x19],cl
  410ab0:	xor    BYTE PTR [edx-0x138107d8],ah
  410ab6:	leave  
  410ab7:	or     eax,0x187c6ee9
  410abc:	retf   
  410abd:	in     eax,0x4f
  410abf:	xor    ecx,ebp
  410ac1:	loopne 0x410aa0
  410ac3:	gs pop ebx
  410ac5:	lahf   
  410ac6:	xor    eax,0xb7ee8c3f
  410acb:	neg    BYTE PTR [ecx-0x78]
  410ace:	mov    cl,0xb0
  410ad0:	and    edi,ecx
  410ad2:	cs clc 
  410ad4:	stos   BYTE PTR es:[edi],al
  410ad5:	push   0xf23fe985
  410ada:	repnz or BYTE PTR [ecx+0x2a202be4],ah
  410ae1:	push   ds
  410ae2:	xor    BYTE PTR [edx+0x6bdf2b96],dh
  410ae8:	sub    dl,BYTE PTR [ecx]
  410aea:	and    edi,DWORD PTR [ebx]
  410aec:	cdq    
  410aed:	imul   ecx,edi,0xffffffa7
  410af0:	xchg   BYTE PTR [edi-0x5153ab34],ah
  410af6:	xchg   ebx,eax
  410af7:	lock dec edx
  410af9:	mov    ecx,0x2c407d27
  410afe:	mov    eax,ds:0xa73be840
  410b03:	fmul   st(1),st
  410b05:	imul   ebp,DWORD PTR [ecx+ebx*4+0x235e1de2],0x20
  410b0d:	push   0xffffffbd
  410b0f:	jns    0x410abd
  410b11:	sbb    DWORD PTR [edx],ebp
  410b13:	dec    ecx
  410b14:	adc    eax,esp
  410b16:	mov    DWORD PTR [ecx-0x65bbba19],ebx
  410b1c:	mov    eax,0x732c2842
  410b21:	pop    esp
  410b22:	add    eax,0xf1d76bbf
  410b27:	pop    ds
  410b28:	adc    DWORD PTR [ecx-0x1e79cbfb],0xc0224b36
  410b32:	xor    DWORD PTR [esi-0x6a740ed0],0xffffffaf
  410b39:	sub    ebx,DWORD PTR [ebp-0x12]
  410b3c:	data16 jno 0x410b59
  410b3f:	shr    DWORD PTR [ecx],cl
  410b41:	out    0xe6,al
  410b43:	lea    esp,[eax+0x5731ec33]
  410b49:	mov    ch,0x44
  410b4b:	cwde   
  410b4c:	sub    DWORD PTR [esi-0x6d7797f2],edi
  410b52:	inc    esp
  410b53:	or     BYTE PTR [edx],dh
  410b55:	mov    edi,0xefd004f9
  410b5a:	add    BYTE PTR [edi],dh
  410b5c:	in     eax,0x91
  410b5e:	mov    ah,0x3e
  410b60:	dec    eax
  410b61:	or     al,0xed
  410b63:	inc    ecx
  410b64:	outs   dx,BYTE PTR ds:[esi]
  410b65:	loope  0x410b8c
  410b67:	in     al,0xc5
  410b69:	test   DWORD PTR [ebx+0x60],ebp
  410b6c:	and    al,0x71
  410b6e:	or     BYTE PTR [edx+esi*1],dl
  410b71:	push   ebx
  410b72:	xor    eax,DWORD PTR [ebx]
  410b74:	jp     0x410b21
  410b76:	loope  0x410b3b
  410b78:	arpl   WORD PTR [ebp-0x9],ax
  410b7b:	xchg   esi,eax
  410b7c:	jp     0x410b9b
  410b7e:	xor    BYTE PTR [edx+edx*1+0x7d],bl
  410b82:	push   esp
  410b83:	sbb    bl,BYTE PTR [edx-0x429d1971]
  410b89:	jns    0x410b9b
  410b8b:	out    dx,eax
  410b8c:	inc    ebp
  410b8d:	into   
  410b8e:	push   ebx
  410b8f:	add    eax,0x5225da4d
  410b94:	or     DWORD PTR [edi],esp
  410b96:	cmp    esp,DWORD PTR [edi-0x8]
  410b99:	shr    DWORD PTR [ebx-0x7],1
  410b9c:	jae    0x410b47
  410b9e:	xchg   ecx,eax
  410b9f:	mov    bh,0xc4
  410ba1:	enter  0xa9bf,0x94
  410ba5:	xor    edx,DWORD PTR [ebp+edx*4-0x613479ea]
  410bac:	test   BYTE PTR [edx-0x671ae6a2],cl
  410bb2:	shl    dh,1
  410bb4:	inc    edx
  410bb5:	fnstenv es:[esi+eiz*1+0x47]
  410bba:	cmp    al,0xf9
  410bbc:	repz rcl ebx,0x62
  410bc0:	jnp    0x410b4d
  410bc2:	lock mov bh,0x87
  410bc5:	push   edx
  410bc6:	retf   0x8ade
  410bc9:	movlps xmm2,QWORD PTR [ecx]
  410bcc:	fwait
  410bcd:	repz lock mov ds:0xa469958b,al
  410bd4:	xchg   edx,eax
  410bd5:	xor    DWORD PTR [edx-0x71b34297],edx
  410bdb:	addr16 in al,0x60
  410bde:	sbb    al,0x5d
  410be0:	fld    TBYTE PTR [edx+edi*1-0x286d30da]
  410be7:	mov    BYTE PTR [eax+0x32],0xf
  410beb:	cs test eax,0x651d5f07
  410bf1:	xor    BYTE PTR [edx-0x7d],0x56
  410bf5:	div    BYTE PTR [eax-0x48daa5aa]
  410bfb:	cwde   
  410bfc:	xor    al,0x95
  410bff:	gs cmp ecx,esi
  410c02:	stos   BYTE PTR es:[edi],al
  410c03:	pop    es
  410c04:	mov    ch,0xb9
  410c06:	jno    0x410b9a
  410c08:	loopne 0x410c79
  410c0a:	xor    bh,BYTE PTR [ecx+0x2df2ba14]
  410c10:	mov    cl,0x26
  410c12:	neg    bl
  410c14:	icebp  
  410c15:	xor    al,0x54
  410c17:	es cwde 
  410c19:	add    dl,bl
  410c1b:	ds fs inc edi
  410c1e:	dec    ecx
  410c1f:	push   ebp
  410c20:	xchg   ebx,eax
  410c21:	mov    al,0xfc
  410c23:	test   al,0xf4
  410c25:	in     al,dx
  410c26:	nop
  410c27:	dec    ebx
  410c28:	je     0x410c0e
  410c2a:	mov    eax,0x6ea23662
  410c2f:	push   esi
  410c30:	ror    DWORD PTR [esi],0xe3
  410c33:	add    dl,BYTE PTR [ebx-0x68]
  410c36:	xor    eax,0x3eb30b3a
  410c3b:	popf   
  410c3c:	mov    dl,BYTE PTR [edx+0x57]
  410c3f:	push   eax
  410c40:	cld    
  410c41:	lods   al,BYTE PTR ds:[esi]
  410c42:	clc    
  410c43:	div    DWORD PTR [esi+ebx*4]
  410c46:	inc    ecx
  410c47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c48:	repz adc bl,BYTE PTR [edx]
  410c4b:	scas   eax,DWORD PTR es:[edi]
  410c4c:	in     eax,0x3b
  410c4e:	stos   BYTE PTR es:[edi],al
  410c4f:	sbb    cl,BYTE PTR [esi]
  410c51:	bound  ebp,QWORD PTR [esi+0x1]
  410c54:	pop    edx
  410c55:	dec    ecx
  410c56:	xchg   edx,eax
  410c57:	in     al,dx
  410c58:	hlt    
  410c59:	pop    es
  410c5a:	das    
  410c5b:	or     edi,DWORD PTR [edx+0x24]
  410c5e:	jnp    0x410c75
  410c60:	add    ah,BYTE PTR [ecx+0x7b]
  410c63:	mov    al,ds:0x267411ce
  410c68:	ins    DWORD PTR es:[edi],dx
  410c69:	outs   dx,DWORD PTR ds:[esi]
  410c6a:	out    dx,eax
  410c6b:	clc    
  410c6c:	fwait
  410c6d:	mov    al,0x77
  410c6f:	dec    eax
  410c70:	call   0xfdef140c
  410c75:	ja     0x410c94
  410c77:	sbb    DWORD PTR [ecx],esi
  410c79:	cwde   
  410c7a:	fbld   TBYTE PTR [ebp+0x52]
  410c7d:	pop    ebx
  410c7e:	call   0x71d4:0xb2441afa
  410c85:	call   0x7b9604e3
  410c8a:	idiv   BYTE PTR [esi+0x78f4566]
  410c90:	cs retf 
  410c92:	mov    edi,0xfbaf5904
  410c97:	and    ebx,esi
  410c99:	call   0x8c0e2940
  410c9e:	fnstenv [edi]
  410ca0:	je     0x410c4e
  410ca2:	dec    esi
  410ca3:	or     eax,0x85e4fa30
  410ca8:	pop    esi
  410ca9:	popa   
  410caa:	and    ah,bl
  410cac:	popa   
  410cad:	ret    0x6bfa
  410cb0:	mov    ch,0x21
  410cb2:	add    eax,0x8b56e81f
  410cb7:	xchg   BYTE PTR [edi-0x46d96c76],dh
  410cbd:	test   DWORD PTR [ecx-0x43],ebp
  410cc0:	repz and ch,dl
  410cc3:	fidiv  DWORD PTR [edx-0x2788e8d5]
  410cc9:	sub    edi,ecx
  410ccb:	pop    esp
  410ccc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ccd:	lods   eax,DWORD PTR ds:[esi]
  410cce:	les    esp,FWORD PTR [esi]
  410cd0:	push   0xffffff86
  410cd2:	jl     0x410c8a
  410cd4:	fstp   QWORD PTR [ebx-0x64623f93]
  410cda:	jo     0x410d52
  410cdc:	mov    dl,dl
  410cde:	mov    esi,0xf5af83bc
  410ce3:	pushf  
  410ce4:	xor    al,0xb0
  410ce6:	hlt    
  410ce7:	imul   edx,esi,0xdca263b2
  410ced:	(bad)  
  410cee:	cmp    ecx,DWORD PTR [edx+eiz*1]
  410cf1:	addr16 enter 0xee93,0x77
  410cf6:	pop    ebx
  410cf7:	test   eax,0xe0bcab16
  410cfc:	in     eax,0xc0
  410cfe:	or     DWORD PTR [edx+0x1ad7f973],edi
  410d04:	aaa    
  410d05:	mov    esp,DWORD PTR [edx]
  410d07:	jns    0x410d06
  410d09:	pop    ecx
  410d0a:	mov    al,0xd9
  410d0c:	mov    edx,0x6c33d775
  410d11:	xchg   ebx,eax
  410d12:	stos   BYTE PTR es:[edi],al
  410d13:	leave  
  410d14:	cdq    
  410d15:	into   
  410d16:	mov    DWORD PTR [edx+0x4e],ebp
  410d19:	xor    cl,al
  410d1b:	ds inc esi
  410d1d:	sbb    eax,0xa7b3a596
  410d22:	test   BYTE PTR [edx-0x1b4d5041],al
  410d28:	pop    DWORD PTR [ecx+ebx*4-0x1a85fc23]
  410d2f:	in     eax,0x9a
  410d31:	or     eax,0x738230c
  410d36:	mov    DWORD PTR [eax],0x8a6136b
  410d3c:	or     ch,BYTE PTR [edx-0x65]
  410d3f:	push   esi
  410d40:	outs   dx,BYTE PTR ds:[esi]
  410d41:	mov    esi,0xa8ee24f2
  410d46:	repz fisttp DWORD PTR [ebx+0x4d08f1b]
  410d4d:	mov    edi,0x42a88942
  410d52:	leave  
  410d53:	or     eax,0x424c1305
  410d58:	stc    
  410d59:	mov    dl,0xb9
  410d5b:	not    BYTE PTR [ebx]
  410d5d:	ret    
  410d5e:	std    
  410d5f:	add    BYTE PTR [edx+0x32fb22ce],0xd2
  410d66:	es mov dh,0xad
  410d69:	dec    edi
  410d6a:	add    esi,DWORD PTR [edi]
  410d6c:	adc    BYTE PTR [ebx-0x2ec2a7fa],0x2b
  410d73:	mov    edi,0x54f7f3e4
  410d78:	xor    ah,BYTE PTR [esi]
  410d7a:	mov    bh,0x62
  410d7c:	mov    ebp,0x1febdbe5
  410d81:	shl    DWORD PTR [ecx-0x7f380d56],0xa8
  410d88:	bound  esi,QWORD PTR [edx+0x1a4da17e]
  410d8e:	sub    DWORD PTR [edx-0x34],esp
  410d91:	nop
  410d92:	test   DWORD PTR [esi],ecx
  410d94:	repnz cli 
  410d96:	nop
  410d97:	fnstsw WORD PTR [ebp-0x1c12ae48]
  410d9d:	ins    DWORD PTR es:[edi],dx
  410d9e:	ja     0x410db2
  410da0:	adc    ch,ch
  410da2:	and    esp,DWORD PTR [edx]
  410da4:	sub    ch,dh
  410da6:	cmp    eax,0x2fb3bd1b
  410dab:	ss mov bl,0x74
  410dae:	int3   
  410daf:	mov    esi,0xe4dbab5e
  410db4:	enter  0xa2f4,0xe3
  410db8:	jecxz  0x410d6b
  410dba:	push   ecx
  410dbb:	aam    0x2a
  410dbd:	xchg   edx,eax
  410dbe:	push   edx
  410dbf:	xchg   esi,eax
  410dc0:	fcom   QWORD PTR [edx+0x2b]
  410dc3:	ret    
  410dc4:	shl    BYTE PTR [ebx],0xb2
  410dc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410dc8:	dec    esp
  410dc9:	or     esp,DWORD PTR [ebp-0x1d068f70]
  410dcf:	das    
  410dd0:	fwait
  410dd1:	call   0xe07d:0xc4600d6
  410dd8:	imul   ecx,DWORD PTR [esi-0x5e],0xf192009f
  410ddf:	aas    
  410de0:	sbb    ah,al
  410de2:	arpl   WORD PTR [edi],bx
  410de4:	imul   esp,ebx,0xfffffff7
  410de7:	xchg   esp,eax
  410de8:	loop   0x410dd3
  410dea:	rcl    BYTE PTR [ecx],0xb6
  410ded:	ror    BYTE PTR [esi+0xacc27ff],0x1c
  410df4:	sbb    edx,edi
  410df6:	xor    ebp,DWORD PTR es:[eax]
  410df9:	or     al,0x49
  410dfb:	out    0x71,eax
  410dfd:	pop    eax
  410dfe:	jmp    0xaf7d:0x6265f12
  410e05:	imul   eax,edx,0xa327114
  410e0b:	pop    edx
  410e0c:	cs mov ecx,0x2eb4e070
  410e12:	js     0x410deb
  410e14:	addr16 nop
  410e16:	dec    ebp
  410e17:	pop    ds
  410e18:	ins    BYTE PTR es:[edi],dx
  410e19:	add    al,0xc9
  410e1b:	dec    edi
  410e1c:	das    
  410e1d:	pop    ds
  410e1e:	push   ebp
  410e1f:	sbb    eax,0x5270199d
  410e24:	add    eax,0x114a2e8f
  410e29:	arpl   WORD PTR [eax-0x7be1d71c],cx
  410e2f:	pop    edi
  410e30:	(bad)  
  410e31:	out    0xcf,eax
  410e33:	enter  0xe85,0x9c
  410e37:	mov    ds,WORD PTR [ebx-0x7b0efe76]
  410e3d:	test   eax,0xefa5f49d
  410e42:	pop    ebp
  410e43:	mov    edi,0x3c9ac407
  410e48:	fisttp DWORD PTR [ebx-0x7d]
  410e4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e4c:	jne    0x410e84
  410e4e:	and    eax,0x1fc6f7cf
  410e53:	lods   al,BYTE PTR ds:[esi]
  410e54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e55:	stc    
  410e56:	mov    ebx,0xce4384a1
  410e5b:	(bad)  [ebx+0x7c]
  410e5e:	adc    DWORD PTR [eax-0x3adc06e1],esp
  410e64:	jp     0x410ed1
  410e66:	adc    DWORD PTR [edi+ebx*1],0x70
  410e6a:	inc    edx
  410e6b:	pushf  
  410e6c:	les    edi,FWORD PTR [edx]
  410e6e:	adc    DWORD PTR [esi],esi
  410e70:	(bad)  
  410e72:	cmp    al,0xe3
  410e74:	sbb    eax,0x5e29a10e
  410e79:	and    DWORD PTR ds:0x477bf27b,0xc0c0d765
  410e83:	add    ah,bh
  410e85:	jl     0x410e36
  410e87:	mov    eax,0x22ce4c60
  410e8c:	sbb    DWORD PTR [ebx-0x4b],edi
  410e8f:	dec    eax
  410e90:	mov    ds:0x58dec6a0,eax
  410e95:	or     dh,BYTE PTR [edx+0x17]
  410e98:	sti    
  410e99:	mov    DWORD PTR [esp+esi*2],ebp
  410e9c:	mov    edi,0xa62c24ac
  410ea1:	cli    
  410ea2:	call   0x761:0xeaa28404
  410ea9:	or     al,0xb8
  410eab:	jo     0x410eff
  410ead:	mov    ds,WORD PTR [bp+di+0x4190]
  410eb2:	rcl    BYTE PTR [ebx-0x7d],1
  410eb5:	aad    0x45
  410eb7:	pop    ebp
  410eb8:	mov    eax,ds:0xb2224aac
  410ebd:	xor    eax,0xf0d577
  410ec2:	jbe    0x410f39
  410ec4:	or     edi,ecx
  410ec6:	pop    eax
  410ec7:	in     eax,dx
  410ec8:	aaa    
  410ec9:	in     eax,dx
  410eca:	inc    ecx
  410ecb:	shr    DWORD PTR [eax],1
  410ecd:	retf   0x95b5
  410ed0:	lahf   
  410ed1:	jl     0x410e61
  410ed3:	ret    
  410ed4:	cmp    eax,0xac8cd16
  410ed9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410eda:	cdq    
  410edb:	xor    esp,DWORD PTR [edx-0x1087a2d3]
  410ee1:	cmp    ecx,DWORD PTR [eax+0x5b]
  410ee4:	adc    DWORD PTR [edi+0x5c1a0dea],0x6d
  410eeb:	add    bh,BYTE PTR [eax*1+0xd71f5db]
  410ef2:	std    
  410ef3:	retf   
  410ef4:	sub    edx,DWORD PTR [ebp+0x59]
  410ef7:	xchg   esi,eax
  410ef8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ef9:	mov    BYTE PTR ds:0x698355e8,cl
  410eff:	fnstenv [esi-0x706d332f]
  410f05:	dec    eax
  410f06:	push   0xffffffeb
  410f08:	call   0xf7630af0
  410f0d:	inc    ecx
  410f0e:	jnp    0x410f1e
  410f10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f11:	mul    BYTE PTR [ecx-0x5b4204db]
  410f17:	add    eax,0x92644240
  410f1c:	dec    edx
  410f1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f1e:	mov    BYTE PTR [ecx-0x21be4fc0],bh
  410f24:	adc    al,0x79
  410f26:	out    dx,al
  410f27:	sbb    dl,BYTE PTR [edi+0x27d9f3ef]
  410f2d:	mov    ch,0x6c
  410f2f:	bound  ebx,QWORD PTR [ebx]
  410f31:	test   DWORD PTR [eax+edx*2+0x49eeb7ce],ebp
  410f38:	jecxz  0x410f5b
  410f3a:	ins    BYTE PTR es:[edi],dx
  410f3b:	pop    ss
  410f3c:	cmp    esi,DWORD PTR [ecx]
  410f3e:	jge    0x410f38
  410f40:	in     eax,dx
  410f41:	stos   BYTE PTR es:[edi],al
  410f42:	push   ebp
  410f43:	loope  0x410f13
  410f45:	(bad)  
  410f46:	out    dx,eax
  410f47:	mov    ds,WORD PTR [esi+0x53]
  410f4a:	gs dec eax
  410f4c:	xchg   ebx,eax
  410f4d:	call   0xb81e:0x119fcfdf
  410f54:	push   edi
  410f55:	and    eax,ecx
  410f57:	lods   al,BYTE PTR ds:[esi]
  410f59:	push   0xffffffaa
  410f5b:	mov    dl,0x21
  410f5d:	aaa    
  410f5e:	imul   eax,esi,0xfffffff6
  410f61:	dec    ecx
  410f62:	jbe    0x410f9b
  410f64:	ja     0x410f49
  410f66:	(bad)  
  410f68:	or     al,0xdc
  410f6a:	scas   al,BYTE PTR es:[edi]
  410f6b:	fistp  WORD PTR [ecx+esi*1-0x1b8b57ac]
  410f72:	add    dl,bl
  410f74:	mov    bl,0x55
  410f76:	call   0xe2fe6770
  410f7b:	retf   
  410f7c:	ja     0x410fd1
  410f7e:	and    al,0x11
  410f80:	int    0x4e
  410f82:	mov    ds:0x94057e1f,eax
  410f87:	sbb    eax,0x24be9da5
  410f8c:	sbb    eax,0x7939c47c
  410f91:	xor    ecx,DWORD PTR [ebx+0x56]
  410f94:	ss or  ebx,ecx
  410f97:	xchg   ebp,eax
  410f98:	outs   dx,DWORD PTR ds:[esi]
  410f99:	aam    0x8c
  410f9b:	jmp    0x5f78a9f2
  410fa0:	rcr    bh,1
  410fa2:	clc    
  410fa3:	mov    ds:0x268ce393,eax
  410fa8:	(bad)  
  410fa9:	mov    ecx,0x53eeaf0b
  410fae:	aad    0x84
  410fb0:	mov    ss,eax
  410fb2:	loopne 0x411002
  410fb4:	call   0xfa9901b9
  410fb9:	push   esp
  410fba:	shl    ebx,cl
  410fbc:	jne    0x410fa5
  410fbe:	mov    ecx,DWORD PTR [ecx+0x71ec7123]
  410fc4:	sub    dh,BYTE PTR [ebx-0x722255d5]
  410fca:	xchg   ebp,eax
  410fcb:	fild   WORD PTR [edi-0x10]
  410fce:	xchg   DWORD PTR [ecx+esi*1+0x2b8ffc76],ebp
  410fd5:	or     DWORD PTR [ebx-0x222999e7],ebp
  410fdb:	mov    BYTE PTR [ecx+0x56479ca],al
  410fe1:	je     0x41103c
  410fe3:	pusha  
  410fe4:	cmp    eax,0x954264c5
  410fe9:	hlt    
  410fea:	ror    ebp,0x9f
  410fed:	fsubr  QWORD PTR ds:0x9404b04f
  410ff3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ff4:	scas   eax,DWORD PTR es:[edi]
  410ff5:	cmc    
  410ff6:	(bad)  
  410ff7:	out    0xd1,eax
  410ff9:	push   ss
  410ffa:	push   0x53d07b6
  410fff:	(bad)  [ebx]
  411001:	push   eax
  411002:	mov    ebp,0x617b7bf
  411007:	mov    al,0x51
  411009:	stc    
  41100a:	or     eax,0x50513f
  41100f:	or     esp,0x692557cc
  411015:	ret    
  411016:	scas   eax,DWORD PTR es:[edi]
  411017:	xchg   ebp,eax
  411018:	in     eax,dx
  411019:	arpl   bp,di
  41101b:	imul   ecx,DWORD PTR [ecx],0x7a
  41101e:	jae    0x410ff2
  411020:	fcomp  DWORD PTR [edi+0x1c]
  411023:	cmc    
  411024:	fdiv   QWORD PTR [edx-0xa]
  411027:	lods   al,BYTE PTR ds:[esi]
  411028:	xchg   ebx,eax
  411029:	iret   
  41102a:	icebp  
  41102b:	pushf  
  41102c:	sahf   
  41102d:	mov    ah,BYTE PTR [eax-0x12]
  411030:	add    DWORD PTR [ebp-0x8695380],esp
  411036:	dec    DWORD PTR [edx-0x21fa6e85]
  41103c:	mov    ecx,0x7a9ea493
  411041:	lock xor BYTE PTR ds:0xdfd5912c,ah
  411048:	or     cl,dh
  41104a:	add    ebx,ebx
  41104c:	xor    al,0xcd
  41104e:	nop
  41104f:	adc    al,bl
  411051:	jae    0x411011
  411053:	or     DWORD PTR [ebx],0x1fd2b67b
  411059:	sbb    BYTE PTR [ebx-0x3ceb520f],dh
  41105f:	xchg   BYTE PTR [ebx+0x79],dl
  411062:	loopne 0x411064
  411064:	mov    esi,0x9bf21691
  411069:	punpckhwd mm3,mm4
  41106c:	and    ebx,ebx
  41106e:	lods   eax,DWORD PTR ds:[esi]
  41106f:	int    0xb4
  411071:	jb     0x41107d
  411073:	pop    esi
  411074:	jae    0x411064
  411076:	popf   
  411077:	cli    
  411078:	stos   DWORD PTR es:[edi],eax
  411079:	and    eax,0x7d0184e2
  41107e:	fcomp  DWORD PTR [edx+0x77]
  411081:	xchg   edx,eax
  411082:	dec    eax
  411083:	mov    cl,BYTE PTR [ebx+edi*8]
  411086:	(bad)  
  411087:	xchg   ecx,eax
  411088:	jnp    0x4110ad
  41108a:	fldcw  WORD PTR ds:[eax]
  41108d:	iret   
  41108e:	push   0x5ec70b5a
  411093:	pop    eax
  411094:	cmp    bl,BYTE PTR ds:0x9930ba44
  41109a:	cs loopne 0x4110a4
  41109d:	push   0x44
  41109f:	sub    eax,0x398946f3
  4110a4:	push   ebp
  4110a5:	xchg   BYTE PTR [ecx-0x140615a7],ah
  4110ab:	xchg   DWORD PTR [edi+0x74],edx
  4110ae:	or     ecx,ebx
  4110b0:	pop    ecx
  4110b1:	cmp    al,0xc1
  4110b3:	ror    DWORD PTR [edi+edx*1-0xc],1
  4110b7:	cs aas 
  4110b9:	pop    edi
  4110ba:	clc    
  4110bb:	jne    0x411097
  4110bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110be:	inc    edx
  4110bf:	movhps xmm1,QWORD PTR [esi-0x38]
  4110c3:	jno    0x4110f0
  4110c5:	retf   0xeec6
  4110c8:	call   0x4b6abb23
  4110cd:	jle    0x4110c5
  4110cf:	pop    ebx
  4110d0:	dec    eax
  4110d1:	pushf  
  4110d2:	jle    0x411140
  4110d4:	inc    ecx
  4110d5:	dec    esp
  4110d6:	gs mov edi,0xf04e4aee
  4110dc:	mov    esi,0xc838c12c
  4110e1:	xchg   ebp,eax
  4110e2:	xor    eax,0x7c4189f2
  4110e7:	daa    
  4110e8:	sub    ch,BYTE PTR [ecx+edi*4-0x63]
  4110ec:	test   BYTE PTR [edi-0x16],dl
  4110ef:	adc    al,0x6c
  4110f1:	mov    ebp,DWORD PTR [edx]
  4110f3:	icebp  
  4110f4:	std    
  4110f5:	in     eax,dx
  4110f6:	imul   ecx,DWORD PTR [esi-0x5fc7cc7b],0xb8245c7d
  411100:	(bad)  
  411102:	sbb    al,BYTE PTR [eax-0x65774937]
  411108:	push   edx
  411109:	jb     0x411172
  41110b:	or     eax,0xd5b4336a
  411110:	pop    edx
  411111:	fistp  QWORD PTR [eax]
  411113:	mov    ds:0xbdc66285,al
  411118:	sahf   
  411119:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41111a:	pop    ecx
  41111b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41111c:	fucomi st,st(7)
  41111e:	icebp  
  41111f:	fild   WORD PTR [ebp+0x3b51cd79]
  411125:	fstp   TBYTE PTR [ebp+0x24]
  411128:	mov    cl,BYTE PTR [esi]
  41112a:	dec    edx
  41112c:	and    edi,DWORD PTR [esi+0x695ff382]
  411132:	stos   BYTE PTR es:[edi],al
  411133:	rcr    DWORD PTR [ecx-0x59b5bf67],cl
  411139:	mov    ds:0x4836609a,al
  41113e:	addr16 cmp ch,0x16
  411142:	jne    0x4110dc
  411144:	mov    ch,0x97
  411146:	inc    ebp
  411147:	out    0x89,al
  411149:	mov    ds:0x3c79d0b7,eax
  41114e:	push   ecx
  41114f:	sbb    DWORD PTR [eax],edi
  411151:	and    bh,dl
  411153:	jmp    0x7c6d056f
  411158:	js     0x41119d
  41115a:	jno    0x411126
  41115c:	jmp    0xb75a97f0
  411161:	icebp  
  411162:	and    DWORD PTR [ebp-0x66],0xb0851e4d
  411169:	ss jmp 0x2e966faf
  41116f:	(bad)  
  411170:	jmp    0xe32bb0ba
  411175:	pusha  
  411176:	dec    esi
  411177:	clc    
  411178:	adc    DWORD PTR ss:[esi+edi*4],ebx
  41117c:	xchg   DWORD PTR [ebx],edx
  41117e:	gs sub ebp,edx
  411181:	inc    ebp
  411182:	xchg   ecx,eax
  411183:	jne    0x4111cf
  411185:	rcr    BYTE PTR [edx+0x1948aa80],cl
  41118b:	dec    esp
  41118c:	jg     0x41119d
  41118e:	test   al,0x93
  411190:	cmp    esp,DWORD PTR [eax-0x4a9907dd]
  411196:	mov    bh,0x16
  411198:	retf   
  411199:	cs xchg esi,eax
  41119b:	inc    edi
  41119c:	dec    edx
  41119d:	xchg   esp,eax
  41119e:	shl    BYTE PTR ds:0xe842e1ca,1
  4111a4:	add    DWORD PTR [ecx],edi
  4111a6:	xchg   ebx,eax
  4111a7:	push   ss
  4111a8:	sub    BYTE PTR [esi+0x47],ch
  4111ab:	stos   DWORD PTR es:[edi],eax
  4111ac:	jnp    0x41116f
  4111ae:	dec    ecx
  4111af:	js     0x41114a
  4111b1:	mov    dl,dl
  4111b3:	(bad)  
  4111b4:	dec    esi
  4111b5:	fsub   QWORD PTR [ebp+edx*1+0x46d48c2a]
  4111bc:	add    al,0x2f
  4111be:	jmp    0xda1af356
  4111c3:	dec    esp
  4111c4:	loope  0x411231
  4111c6:	pop    ebx
  4111c7:	test   BYTE PTR [edi],al
  4111c9:	push   es
  4111ca:	arpl   WORD PTR [edx-0x40],bp
  4111cd:	add    DWORD PTR cs:[ebp+0x2c],ecx
  4111d1:	out    dx,eax
  4111d2:	hlt    
  4111d3:	add    ah,BYTE PTR [eax+0x23]
  4111d6:	cdq    
  4111d7:	or     esi,DWORD PTR [edi-0x29]
  4111da:	cmc    
  4111db:	cmp    al,0xc8
  4111dd:	add    eax,0x1d072c4c
  4111e2:	cmp    DWORD PTR [edx+eiz*8+0x283ed461],edx
  4111e9:	or     DWORD PTR [ecx+0x3fcbe7],0x8
  4111f0:	mov    ecx,0x27840a38
  4111f5:	push   ss
  4111f6:	push   ebx
  4111f7:	xchg   edi,eax
  4111f8:	mov    ecx,0xb62adf7b
  4111fd:	jl     0x411209
  4111ff:	aam    0xa8
  411201:	bnd jmp 0x41124e
  411204:	int3   
  411205:	mov    bl,bl
  411207:	je     0x411269
  411209:	add    ch,BYTE PTR [edi]
  41120b:	mov    ch,BYTE PTR [eax+0x5a45d2f3]
  411211:	add    eax,edx
  411213:	retf   0x7df1
  411216:	sub    ch,BYTE PTR [esi]
  411218:	enter  0xf78e,0x59
  41121c:	jns    0x41121d
  41121e:	mov    eax,ds:0x2c97ebfd
  411223:	sbb    BYTE PTR [ebx+0x2f],al
  411226:	fistp  DWORD PTR [eax-0x4a]
  411229:	mov    cl,0xd7
  41122b:	sar    DWORD PTR [ebx+0x61],0x8e
  41122f:	pop    ebx
  411230:	push   esi
  411231:	rol    BYTE PTR [esi],0x71
  411234:	test   eax,0x1355a2d0
  411239:	mov    bl,0xba
  41123b:	stos   DWORD PTR es:[edi],eax
  41123c:	dec    ecx
  41123d:	push   esp
  41123e:	je     0x411204
  411240:	mov    WORD PTR [ebx],fs
  411242:	daa    
  411243:	pop    eax
  411244:	loope  0x4111fd
  411246:	mov    ebp,0x81819aaa
  41124b:	ret    
  41124c:	stos   DWORD PTR es:[edi],eax
  41124d:	scas   al,BYTE PTR es:[edi]
  41124e:	hlt    
  41124f:	js     0x4112b6
  411251:	xor    ah,BYTE PTR [edi-0x8]
  411254:	push   es
  411255:	gs and al,0xaf
  411258:	pop    esp
  411259:	lahf   
  41125a:	push   edx
  41125b:	xor    DWORD PTR [eax],edi
  41125d:	movq   mm6,QWORD PTR [ebx]
  411260:	out    0xa5,al
  411262:	xor    DWORD PTR [ebp-0x483d417],edi
  411268:	in     al,dx
  411269:	adc    al,0x2d
  41126b:	ss jno 0x411252
  41126e:	push   edx
  41126f:	jb     0x4112e5
  411271:	or     al,0xad
  411273:	hlt    
  411274:	sbb    BYTE PTR [esi-0x4ad07e2b],ch
  41127a:	add    eax,0x1c6672e8
  41127f:	in     al,dx
  411280:	mov    dl,0xc
  411282:	fmul   st(4),st
  411284:	xor    eax,0x2df12fb5
  411289:	sbb    DWORD PTR [ebp-0x629b119c],ebx
  41128f:	mov    esp,0xd1fa5c5a
  411294:	bound  ebx,QWORD PTR [eax+edi*1]
  411297:	cli    
  411298:	push   edx
  411299:	mov    ch,0x2d
  41129b:	(bad)  
  41129c:	outs   dx,DWORD PTR ds:[esi]
  41129d:	(bad)  
  41129e:	mov    WORD PTR [edx+0x12],gs
  4112a1:	jg     0x411312
  4112a3:	jno    0x411292
  4112a5:	in     al,dx
  4112a6:	or     al,0x52
  4112a8:	call   0x7f5c:0xa933d90a
  4112af:	call   0xdb8e4e28
  4112b4:	sti    
  4112b5:	cmp    ebp,eax
  4112b7:	and    cl,BYTE PTR [ebx+0x42c76168]
  4112bd:	cmp    al,0xdf
  4112bf:	pop    es
  4112c0:	in     eax,0x8
  4112c2:	outs   dx,BYTE PTR ds:[esi]
  4112c3:	icebp  
  4112c4:	pop    esp
  4112c5:	pop    ss
  4112c6:	cs mov ebx,0xdfe0a4c
  4112cc:	call   eax
  4112ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112cf:	cmp    al,0x31
  4112d1:	jge    0x41129e
  4112d3:	add    edi,DWORD PTR [ecx+edx*4]
  4112d6:	fucomi st,st(2)
  4112d8:	push   eax
  4112d9:	push   eax
  4112da:	jb     0x41132f
  4112dc:	int3   
  4112dd:	inc    ebx
  4112de:	jnp    0x411271
  4112e0:	sub    DWORD PTR [ebx+ebp*4],edi
  4112e3:	sbb    al,0x6f
  4112e5:	pop    ebp
  4112e6:	push   gs
  4112e8:	into   
  4112e9:	std    
  4112ea:	lods   al,BYTE PTR ds:[esi]
  4112eb:	das    
  4112ec:	push   ss
  4112ed:	jnp    0x4112dd
  4112ef:	test   eax,0xf25b4c6a
  4112f4:	mov    DWORD PTR [esi+0x7],ebp
  4112f7:	fidivr WORD PTR [ebp+0x69636a27]
  4112fd:	mov    edi,DWORD PTR [edi]
  4112ff:	sub    BYTE PTR [ebx],al
  411301:	outs   dx,DWORD PTR ds:[esi]
  411302:	or     ah,dl
  411304:	and    DWORD PTR [eax+0x8c9e04a],edi
  41130a:	ficomp DWORD PTR [eax+0x2c4675bc]
  411310:	in     eax,0x93
  411312:	ds enter 0x450e,0x28
  411317:	std    
  411318:	fdivr  QWORD PTR [edx+eiz*4+0x531c03c2]
  41131f:	mov    bh,0x3b
  411321:	push   0xffffffa5
  411323:	push   bp
  411325:	popa   
  411326:	int3   
  411327:	jp     0x41138e
  411329:	(bad)  
  41132b:	push   ds
  41132c:	push   0xffffffc0
  41132e:	add    eax,0x122144c7
  411333:	out    0xb3,eax
  411335:	pusha  
  411336:	cld    
  411337:	out    dx,al
  411338:	clc    
  411339:	mov    DWORD PTR [esi+ebp*8+0x24],edi
  41133d:	sti    
  41133e:	stc    
  41133f:	mov    WORD PTR [esi],fs
  411341:	nop
  411342:	ins    BYTE PTR es:[edi],dx
  411343:	jmp    0xa264:0x75d44708
  41134a:	mov    BYTE PTR [ebp+0x41],dh
  41134d:	popa   
  41134e:	ret    
  41134f:	adc    al,0xd6
  411351:	cdq    
  411352:	jns    0x41136e
  411354:	sub    BYTE PTR [edx+ebp*1],cl
  411357:	jmp    0x77a0:0x325ed3c7
  41135e:	or     BYTE PTR [edi],dh
  411360:	and    ebx,edx
  411362:	test   eax,0xd9709544
  411367:	cmp    al,0x88
  411369:	mov    ah,0x56
  41136b:	and    eax,0x2ad2ba6f
  411370:	stos   DWORD PTR es:[edi],eax
  411371:	and    edx,edi
  411373:	retf   
  411374:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411375:	push   ss
  411376:	xor    al,0x5c
  411378:	hlt    
  411379:	scas   al,BYTE PTR es:[di]
  41137b:	sbb    al,al
  41137d:	pushf  
  41137e:	fwait
  41137f:	push   0x42
  411381:	in     al,0x4
  411383:	mov    ebx,0x27f8c42f
  411388:	mov    edx,DWORD PTR [esi-0x2b]
  41138b:	jle    0x411404
  41138d:	pop    ds
  41138e:	aad    0xa6
  411390:	(bad)  
  411391:	ss mov ecx,0x13e9d09d
  411397:	add    ebx,edi
  411399:	imul   ebp,DWORD PTR ds:0xcb4a6365,0xffffffd5
  4113a0:	idiv   BYTE PTR [edx]
  4113a2:	jp     0x4113b3
  4113a4:	pop    edi
  4113a5:	inc    edx
  4113a6:	lock imul ebx,DWORD PTR [edi+edx*2],0x7
  4113ab:	dec    edi
  4113ac:	shl    ch,1
  4113ae:	dec    eax
  4113af:	and    BYTE PTR [edx],dh
  4113b1:	or     eax,0xe42a1e9a
  4113b6:	ret    0xfbbf
  4113b9:	mov    ch,0x69
  4113bb:	enter  0xb218,0x8b
  4113bf:	sub    BYTE PTR [ecx],0x28
  4113c2:	or     bh,BYTE PTR [edi+0x1d76a424]
  4113c8:	lahf   
  4113c9:	das    
  4113ca:	jl     0x4113da
  4113cc:	sub    BYTE PTR [ebx],al
  4113ce:	jle    0x4113ea
  4113d0:	mov    edi,0xe05c6fc6
  4113d5:	icebp  
  4113d6:	dec    edi
  4113d7:	jo     0x41143e
  4113d9:	pop    esp
  4113da:	jnp    0x41143f
  4113dc:	out    dx,al
  4113dd:	ja     0x411437
  4113df:	sbb    al,0x80
  4113e1:	jns    0x41140b
  4113e3:	mov    gs,WORD PTR [ebx+eiz*2]
  4113e6:	rcr    DWORD PTR [ebx],cl
  4113e8:	cmp    ax,0xcfce
  4113ec:	mov    al,0x27
  4113ee:	cwde   
  4113ef:	sub    al,0xcf
  4113f1:	mov    eax,0x5e387def
  4113f6:	mov    dh,0xb4
  4113f8:	dec    esi
  4113f9:	cmp    BYTE PTR [edi+eiz*1],0x90
  4113fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113fe:	loope  0x4113a8
  411400:	lock mov dh,0xa9
  411403:	jne    0x4113a7
  411405:	(bad)  
  411406:	out    dx,eax
  411407:	jno    0x4113a7
  411409:	retf   0xff5a
  41140c:	jns    0x41142c
  41140e:	ffreep st(3)
  411410:	mov    DWORD PTR [eax-0x3c],ebx
  411413:	mov    ebx,DWORD PTR [edi+0x56]
  411416:	xchg   edi,eax
  411417:	sub    cl,BYTE PTR ss:[ebp-0x73a11a7b]
  41141e:	shl    DWORD PTR [esi-0x39],cl
  411421:	jecxz  0x41140a
  411423:	xchg   esi,eax
  411424:	aad    0x87
  411426:	dec    esp
  411427:	xor    al,0x56
  411429:	pop    ebx
  41142a:	dec    esi
  41142b:	xchg   esi,ebp
  41142d:	add    DWORD PTR [esi-0x27837de2],esp
  411433:	test   eax,0x15617d8f
  411438:	mov    esp,0xd90a3d00
  41143d:	mov    esi,0xb3efc7c6
  411442:	mov    DWORD PTR [eax],eax
  411444:	pop    ecx
  411445:	mov    dh,0xe7
  411447:	or     eax,0x3aa71f86
  41144c:	int3   
  41144d:	sub    bl,BYTE PTR [esi-0x60624cb]
  411453:	cdq    
  411454:	bnd jl 0x411463
  411457:	adc    DWORD PTR ds:0xca9c854b,ecx
  41145d:	dec    esi
  41145e:	dec    ebx
  41145f:	mov    esi,0x2bc8e7ce
  411464:	ins    BYTE PTR es:[edi],dx
  411465:	jae    0x4114d9
  411467:	cli    
  411468:	cmp    al,0xe
  41146a:	imul   eax,DWORD PTR [ecx],0x5765ce0a
  411470:	pop    ss
  411471:	cdq    
  411472:	cmp    esp,DWORD PTR fs:[edx-0x4ca55e07]
  411479:	stc    
  41147a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41147b:	lods   al,BYTE PTR ds:[esi]
  41147c:	mov    dh,0xa8
  41147e:	shl    BYTE PTR [edi-0x61469713],0xe1
  411485:	inc    esi
  411486:	iret   
  411487:	sbb    DWORD PTR [ebp+0x77],eax
  41148a:	jnp    0x411488
  41148c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41148d:	jnp    0x411490
  41148f:	sbb    BYTE PTR [esi-0x34cd633d],ch
  411495:	out    0xe4,eax
  411497:	aas    
  411498:	imul   edi,DWORD PTR [edi-0x6db417ec],0xffffffdc
  41149f:	fninit 
  4114a1:	mov    ch,0x9b
  4114a3:	lock sbb eax,0x5244c7f5
  4114a9:	leave  
  4114aa:	inc    esp
  4114ab:	mov    esi,0xc5842496
  4114b0:	int    0x2e
  4114b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114b3:	dec    ecx
  4114b4:	mov    eax,ds:0xcc4dfcd9
  4114b9:	inc    esp
  4114ba:	and    al,0xdc
  4114bc:	test   al,0x3c
  4114be:	inc    ebp
  4114bf:	and    bl,dl
  4114c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114c2:	jns    0x41149c
  4114c4:	adc    al,0x89
  4114c6:	dec    ebp
  4114c7:	mov    ecx,0x4a3fb9
  4114cc:	cmp    BYTE PTR [ebp+0x25],bh
  4114cf:	into   
  4114d0:	sbb    DWORD PTR [bp+di+0x3b],ecx
  4114d4:	add    ah,ah
  4114d6:	addr16 xchg edx,eax
  4114d8:	sub    al,0xdb
  4114da:	es jmp 0x41148f
  4114dd:	jb     0x411477
  4114df:	iret   
  4114e0:	jg     0x4114c8
  4114e2:	retf   0x48dc
  4114e5:	adc    DWORD PTR [eax-0x6],eax
  4114e8:	xor    dh,ch
  4114ea:	and    BYTE PTR [ebx-0x70],bl
  4114ed:	das    
  4114ee:	and    BYTE PTR [edx-0x774f40c7],0xaa
  4114f5:	popa   
  4114f6:	fidivr WORD PTR [esi+0x5765ff94]
  4114fc:	shl    DWORD PTR es:[ebx+edx*2],1
  411500:	arpl   WORD PTR [eax+0x1b8ad333],ax
  411506:	push   ss
  411507:	add    eax,ebx
  411509:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41150b:	jb     0x4114b0
  41150d:	inc    esp
  41150e:	call   0xe9ce903
  411513:	and    DWORD PTR [esp+ebp*4],edi
  411516:	mov    esp,0xebe11fa7
  41151b:	push   edx
  41151c:	xchg   edx,eax
  41151d:	pusha  
  41151e:	mov    WORD PTR [ecx],?
  411520:	shr    DWORD PTR [eax],0x93
  411523:	stos   BYTE PTR es:[edi],al
  411524:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411525:	jns    0x4114bd
  411527:	cwde   
  411528:	push   0x7a9ffd99
  41152d:	enter  0xabd3,0xd0
  411531:	cmp    al,0xc7
  411533:	mov    ch,0x76
  411535:	pop    esp
  411536:	mov    bl,BYTE PTR [edi+0x4b8bd98d]
  41153c:	cmp    eax,0x507f2a1f
  411541:	jmp    0x8dc:0x1f2acc0b
  411548:	jne    0x411583
  41154a:	iret   
  41154b:	addr16 or dl,0x86
  41154f:	call   0xc9252887
  411554:	mov    ds:0x538e4fde,eax
  411559:	mov    al,0x42
  41155b:	loop   0x41152b
  41155d:	cmp    ah,BYTE PTR [ebx]
  41155f:	inc    edi
  411560:	test   BYTE PTR [eax],ah
  411562:	xor    esi,esi
  411564:	retf   0x2cd
  411567:	inc    ebx
  411568:	mov    ah,0x36
  41156a:	jns    0x411503
  41156c:	mov    ebx,0x158f32be
  411571:	imul   ebp,DWORD PTR [ebx+0x7d],0xffffff8c
  411575:	gs js  0x411552
  411578:	loop   0x411578
  41157a:	icebp  
  41157b:	scas   eax,DWORD PTR es:[edi]
  41157c:	or     ebp,DWORD PTR [ebx]
  41157e:	nop
  41157f:	pop    edi
  411580:	dec    edi
  411581:	(bad)  
  411582:	or     bh,BYTE PTR ds:0xfcfaba30
  411588:	sbb    bh,BYTE PTR [edi-0x3a]
  41158b:	cmp    eax,edx
  41158d:	mov    ebp,0x70277de3
  411592:	and    BYTE PTR [edx],ch
  411594:	mov    ds:0xf53080d7,eax
  411599:	pop    ss
  41159a:	jge    0x411550
  41159c:	cdq    
  41159d:	mov    bh,0xcc
  41159f:	mov    bl,0x7f
  4115a1:	and    ebp,DWORD PTR [esi]
  4115a3:	xchg   BYTE PTR [eax],cl
  4115a5:	mov    cl,0x20
  4115a7:	add    BYTE PTR ds:0x831e3d10,cl
  4115ad:	cmp    eax,0xde4a15a7
  4115b2:	inc    edx
  4115b3:	ins    DWORD PTR es:[edi],dx
  4115b4:	call   0xf280:0x8ef1fcdb
  4115bb:	data16 cmp bl,BYTE PTR [eax]
  4115be:	cmc    
  4115bf:	or     al,0x29
  4115c1:	in     eax,0x9b
  4115c3:	dec    eax
  4115c4:	inc    esp
  4115c5:	inc    eax
  4115c6:	pop    edi
  4115c7:	ins    DWORD PTR es:[edi],dx
  4115c8:	push   ecx
  4115c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115ca:	sahf   
  4115cb:	sti    
  4115cc:	hlt    
  4115cd:	xor    BYTE PTR [ebp-0x767907ea],ch
  4115d3:	xor    eax,0xb264215a
  4115d8:	xor    BYTE PTR [esi+0x24],ah
  4115db:	mov    eax,0x2542f653
  4115e0:	or     eax,0x3f1c8491
  4115e5:	or     ecx,DWORD PTR [ebx+ecx*4-0x16ecdfc9]
  4115ec:	out    0xa4,al
  4115ee:	mov    esp,DWORD PTR [esi]
  4115f0:	inc    eax
  4115f1:	sub    eax,0x6953ec52
  4115f6:	xor    cl,BYTE PTR [edi+0x345851cc]
  4115fc:	cmp    BYTE PTR [edx-0x66c1acdc],al
  411602:	or     al,0x7b
  411604:	rcl    BYTE PTR [ecx+0x75],cl
  411607:	fchs   
  411609:	iret   
  41160a:	sub    al,0xe8
  41160c:	out    dx,eax
  41160d:	clc    
  41160e:	mov    cl,bl
  411610:	pop    eax
  411611:	loopne 0x41163a
  411613:	mov    ch,0xfe
  411615:	sbb    al,0xda
  411617:	icebp  
  411618:	mov    edx,0x23b9f946
  41161d:	push   es
  41161e:	mov    cl,0x31
  411620:	mov    dl,0xd3
  411622:	mov    ?,WORD PTR [ecx+0x34]
  411625:	clc    
  411626:	mov    DWORD PTR [ebx-0x3f],edi
  411629:	jns    0x41163a
  41162b:	mov    eax,ds:0x39ca17db
  411630:	mov    ah,0x1c
  411632:	aas    
  411633:	add    ch,bl
  411635:	ds adc BYTE PTR cs:[eax-0x2515a678],0x51
  41163e:	int    0xca
  411640:	jb     0x4115e5
  411642:	mov    ebp,0x38c68642
  411647:	jno    0x4115e2
  411649:	and    al,0xaa
  41164b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41164c:	add    dh,dl
  41164e:	add    DWORD PTR [ecx-0x7c272124],edi
  411654:	mov    eax,ds:0xb71ee889
  41165a:	lods   al,BYTE PTR ds:[esi]
  41165b:	or     BYTE PTR [edx],bl
  41165d:	addr16 aaa 
  41165f:	(bad)  
  411660:	jmp    0x755a:0x78395b58
  411667:	jmp    0x9d34:0xdaae1167
  41166e:	test   eax,0xdc0c5eb4
  411673:	mov    cs,edx
  411675:	push   0x275a136c
  41167a:	test   DWORD PTR [ebp-0x59],ebp
  41167d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41167e:	(bad)  
  41167f:	jb     0x41169a
  411681:	push   ds
  411682:	(bad)  
  411683:	mov    ds:0x3a4ff10f,eax
  411688:	fld    DWORD PTR [edi+0x2b]
  41168b:	aad    0xdf
  41168d:	jne    0x411688
  41168f:	shr    eax,1
  411691:	cdq    
  411692:	lea    edi,ds:0x1331c5a9
  411698:	adc    ecx,DWORD PTR [ebx+eiz*2]
  41169b:	jecxz  0x411718
  41169d:	jmp    0x5b39:0x1c1361c5
  4116a4:	pop    ds
  4116a5:	bnd call 0x82c0d217
  4116ab:	xchg   edx,eax
  4116ac:	or     al,0xe8
  4116ae:	push   cs
  4116af:	jecxz  0x411688
  4116b1:	imul   ecx,DWORD PTR [eax-0x15d40e20],0xffffff8e
  4116b8:	rol    ecx,0x39
  4116bb:	lock jge 0x411694
  4116be:	daa    
  4116bf:	or     eax,0x76df0464
  4116c4:	setb   BYTE PTR [eax+0x39]
  4116c8:	dec    ecx
  4116c9:	sbb    ah,BYTE PTR [esi+0x15a7f0c9]
  4116cf:	cmp    dh,BYTE PTR es:[eax+0x76]
  4116d3:	jne    0x4116f5
  4116d5:	les    edx,FWORD PTR [ebx]
  4116d7:	mov    WORD PTR [eax+eiz*8+0x1a],gs
  4116db:	call   0xe254424c
  4116e0:	push   ebx
  4116e1:	lods   al,BYTE PTR ds:[esi]
  4116e2:	sub    eax,0x71051b61
  4116e7:	pop    ebx
  4116e8:	cli    
  4116e9:	ss dec edx
  4116eb:	stc    
  4116ec:	pop    ds
  4116ed:	mov    ecx,0xef1329ae
  4116f2:	stc    
  4116f3:	imul   eax,DWORD PTR [ebx+0xa],0x307ebc39
  4116fa:	add    bh,bl
  4116fc:	push   eax
  4116fd:	sbb    eax,0xfea6745c
  411702:	pop    edi
  411703:	mov    ebx,0x8733a052
  411708:	in     eax,0xe
  41170a:	int    0xa5
  41170c:	xor    DWORD PTR [edx-0x2f],ebx
  41170f:	xchg   DWORD PTR [eax-0x6ddeb6a],esp
  411715:	inc    ebp
  411716:	sti    
  411717:	add    DWORD PTR [eax],edi
  411719:	jne    0x411739
  41171b:	jae    0x41177a
  41171d:	lods   eax,DWORD PTR ds:[esi]
  41171e:	xchg   esi,eax
  41171f:	dec    eax
  411720:	hlt    
  411721:	jle    0x41179e
  411723:	push   ebx
  411724:	clc    
  411725:	ret    0xa82c
  411728:	and    DWORD PTR ds:0x192699f1,0x7f
  41172f:	adc    bh,0x64
  411732:	fs in  al,0xe7
  411735:	imul   ebx,DWORD PTR [ecx+0x8],0x1d9bf709
  41173c:	fs pop ecx
  41173e:	push   esi
  41173f:	popa   
  411740:	xor    al,0x7b
  411742:	in     al,0xed
  411744:	clc    
  411745:	mov    ebp,0xf3c966b5
  41174a:	leave  
  41174b:	cmp    ch,BYTE PTR [eax+0x560094fc]
  411751:	mov    edx,0x3627bde2
  411756:	pop    ecx
  411757:	enter  0x1bee,0x49
  41175b:	sub    DWORD PTR [ebp-0x35133d59],eax
  411761:	pop    ebx
  411762:	aam    0x86
  411764:	cmp    bh,BYTE PTR [ebx]
  411766:	pop    edi
  411767:	nop
  411768:	sbb    al,0x41
  41176a:	and    eax,DWORD PTR [edi]
  41176c:	(bad)  
  41176d:	push   ss
  41176e:	je     0x4117e2
  411770:	push   cs
  411771:	xchg   ebx,eax
  411772:	xchg   edi,ecx
  411774:	jbe    0x41171c
  411776:	icebp  
  411777:	cmp    bh,BYTE PTR [ebp+0xda6b759]
  41177d:	xchg   BYTE PTR [ecx],dh
  41177f:	loop   0x411761
  411781:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411782:	xor    ebx,ebp
  411784:	sub    ch,BYTE PTR [ecx+ebp*8]
  411787:	adc    DWORD PTR [ecx-0x6cd8406a],0xe2518720
  411791:	push   es
  411792:	pop    ss
  411793:	ret    0xe02c
  411796:	aam    0x21
  411798:	mov    eax,0xbaa15b52
  41179d:	mov    ds:0xd369b3c8,eax
  4117a2:	mov    BYTE PTR [edi-0x50],bl
  4117a5:	(bad)  
  4117a6:	ins    DWORD PTR es:[edi],dx
  4117a7:	push   ebp
  4117a8:	rol    DWORD PTR [edi+0x7f],0x2e
  4117ac:	jne    0x411746
  4117ae:	sbb    DWORD PTR [ebp-0x6d],edi
  4117b1:	or     ah,BYTE PTR [eax+0x3a8309b6]
  4117b7:	out    dx,eax
  4117b8:	das    
  4117b9:	out    dx,al
  4117ba:	and    BYTE PTR ds:0xea61cf4c,al
  4117c0:	ret    
  4117c1:	out    0xef,eax
  4117c3:	lock or BYTE PTR [edi-0xeae0365],dl
  4117ca:	add    DWORD PTR [ebp-0x1a],ebp
  4117cd:	in     eax,dx
  4117ce:	cmp    bl,BYTE PTR [esi-0x7a]
  4117d1:	mov    bl,0x6a
  4117d3:	ror    BYTE PTR [ecx-0x76760055],cl
  4117d9:	scas   al,BYTE PTR es:[edi]
  4117da:	ins    BYTE PTR es:[edi],dx
  4117db:	out    dx,eax
  4117dc:	fwait
  4117dd:	shl    DWORD PTR gs:0x12286914,1
  4117e4:	dec    esi
  4117e5:	add    al,BYTE PTR [ebx-0x6b]
  4117e8:	outs   dx,BYTE PTR ds:[esi]
  4117e9:	stos   DWORD PTR es:[edi],eax
  4117ea:	push   ss
  4117eb:	or     al,0x8
  4117ed:	or     DWORD PTR [ebx+0x26b073f6],edi
  4117f3:	pop    ds
  4117f4:	js     0x41182f
  4117f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117f7:	test   eax,0xde68a8f3
  4117fc:	shl    al,1
  4117fe:	jmp    0x411853
  411800:	retf   0x3afe
  411803:	push   ecx
  411804:	ds sub ebx,ecx
  411807:	jmp    0xe598:0x43d1a385
  41180e:	lds    esi,FWORD PTR [esi-0x7c875330]
  411814:	inc    esp
  411815:	jg     0x41182a
  411817:	jb     0x41187e
  411819:	pop    ds
  41181a:	lods   eax,DWORD PTR ds:[esi]
  41181b:	inc    esi
  41181c:	pop    ss
  41181d:	mov    WORD PTR [ebx],gs
  41181f:	bnd jmp 0xb11bef21
  411825:	loope  0x4117b8
  411827:	cld    
  411828:	imul   edx,DWORD PTR [eax],0x53
  41182b:	inc    ecx
  41182c:	in     al,dx
  41182d:	call   0x2906:0x40e21c4a
  411834:	push   0xbbb6b031
  411839:	sbb    BYTE PTR [edi+0x7bee1cc8],bh
  41183f:	xor    eax,0x7f766554
  411844:	nop
  411845:	not    BYTE PTR [ebx]
  411847:	test   ecx,esp
  411849:	test   eax,0x3747aa6c
  41184e:	fisttp QWORD PTR [ebp+ecx*2+0x55]
  411852:	adc    cl,BYTE PTR [edi+0x42b43b17]
  411858:	xchg   esi,eax
  411859:	mov    bl,ah
  41185b:	ja     0x41180a
  41185d:	loop   0x411847
  41185f:	retf   0x4ecd
  411862:	or     eax,0xd6aebfa5
  411867:	(bad)  
  411868:	imul   BYTE PTR [ebx+ebx*1+0x68]
  41186c:	hlt    
  41186d:	add    ebp,DWORD PTR [eax-0x74e242dc]
  411873:	xchg   edi,eax
  411874:	aad    0x41
  411876:	test   DWORD PTR [ecx-0x16],edi
  411879:	or     BYTE PTR [esi+esi*8],0x24
  41187d:	cmp    BYTE PTR [esp+edx*1-0x582eb5c8],ch
  411884:	and    DWORD PTR [ecx],0x35b11811
  41188a:	lock fisubr WORD PTR [eax]
  41188d:	or     ebp,DWORD PTR [eax]
  41188f:	fucomi st,st(2)
  411891:	sbb    eax,DWORD PTR [ecx+edx*4]
  411894:	jle    0x41185d
  411896:	dec    edi
  411897:	cmp    edx,edi
  411899:	mov    esi,0x95c47580
  41189e:	mov    eax,0x4422de59
  4118a3:	mov    dl,0x77
  4118a5:	int    0x52
  4118a7:	xchg   DWORD PTR ds:0x8177a319,edi
  4118ad:	inc    ebp
  4118ae:	pusha  
  4118af:	jb     0x4118b1
  4118b1:	push   0x53
  4118b3:	mov    ch,0x85
  4118b5:	int3   
  4118b6:	stc    
  4118b7:	pop    ebx
  4118b8:	icebp  
  4118b9:	push   ebp
  4118ba:	sub    al,0x99
  4118bc:	mov    ds:0x610a61ed,eax
  4118c1:	dec    esi
  4118c2:	nop
  4118c3:	pop    esi
  4118c4:	test   DWORD PTR [esi],eax
  4118c6:	retf   
  4118c7:	pop    edi
  4118c8:	stc    
  4118c9:	adc    DWORD PTR [edi],edx
  4118cb:	aam    0x8e
  4118cd:	mov    cl,0xc7
  4118cf:	fprem  
  4118d1:	ins    BYTE PTR es:[edi],dx
  4118d2:	push   edx
  4118d3:	xchg   esi,eax
  4118d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118d5:	pop    edx
  4118d6:	leave  
  4118d7:	mov    esi,0xe68f4466
  4118dc:	dec    eax
  4118dd:	repz inc si
  4118e0:	jmp    0x41190a
  4118e2:	mov    ds:0x98b5e66a,al
  4118e7:	mov    eax,0xad2c8543
  4118ec:	and    eax,0xeac945c4
  4118f1:	mov    ch,0xa6
  4118f3:	mov    ebp,0xf499156
  4118f8:	cmp    ch,BYTE PTR [ecx]
  4118fa:	pop    ds
  4118fb:	clc    
  4118fc:	popa   
  4118fd:	push   0xc91dab20
  411902:	xchg   DWORD PTR [ebx-0x23d4da40],eax
  411908:	sub    eax,0x6c1327c0
  41190d:	push   0xeaf2c5ea
  411912:	mov    edx,0x6cdf0409
  411917:	xchg   ebx,eax
  411918:	sub    eax,0x3c9fbb8e
  41191d:	and    DWORD PTR [esi],0xffffffb6
  411920:	ss aam 0xb7
  411923:	sbb    edx,0xffffffd6
  411926:	jnp    0x411943
  411928:	push   es
  411929:	jne    0x411944
  41192b:	bound  edx,QWORD PTR [esi]
  41192d:	enter  0xf2e0,0x3
  411931:	js     0x4119a3
  411933:	jno    0x41194e
  411935:	push   ebx
  411936:	sahf   
  411937:	adc    DWORD PTR [ebx],ebp
  411939:	push   eax
  41193a:	add    cl,dl
  41193c:	shr    DWORD PTR ds:0xd27b515a,cl
  411942:	nop
  411943:	dec    esi
  411944:	scas   al,BYTE PTR es:[edi]
  411945:	mov    eax,ds:0xfc213b33
  41194a:	mov    al,0xd9
  41194c:	popf   
  41194d:	scas   eax,DWORD PTR es:[edi]
  41194e:	out    0x19,al
  411950:	mov    eax,0x248ba313
  411955:	pop    ss
  411956:	mov    bh,0x63
  411958:	xor    bh,BYTE PTR [eax+0x60]
  41195b:	add    eax,0x1a56c4e1
  411960:	inc    ebp
  411961:	lods   al,BYTE PTR ds:[esi]
  411962:	mov    eax,0xb48bb46f
  411967:	es jae 0x4119e1
  41196a:	leave  
  41196b:	mov    dl,0xe
  41196d:	jmp    0xef57de24
  411972:	pop    esi
  411973:	add    eax,0xab53aa8f
  411978:	sbb    DWORD PTR [esi+0x732a5f8c],ecx
  41197e:	ins    DWORD PTR es:[edi],dx
  41197f:	aaa    
  411980:	outs   dx,BYTE PTR ds:[esi]
  411981:	repz mov WORD PTR [ecx+0x12],gs
  411985:	mov    edx,0xd9eb125b
  41198a:	fnstenv [esp+edi*2]
  41198d:	push   0xffffffb0
  41198f:	aam    0xdd
  411991:	lds    eax,FWORD PTR ds:0x54298740
  411997:	lahf   
  411998:	inc    ecx
  411999:	imul   edx,DWORD PTR [edx+0x65b6a2d5],0xc5efdd52
  4119a3:	sbb    DWORD PTR [eax+0xd289d52],esp
  4119a9:	int3   
  4119aa:	retf   
  4119ab:	inc    ebp
  4119ac:	std    
  4119ad:	hlt    
  4119ae:	ficom  DWORD PTR [ebp+eax*1+0x3c]
  4119b2:	mov    eax,ds:0x1e3173b0
  4119b7:	cmc    
  4119b8:	shl    eax,1
  4119ba:	mov    ch,0x40
  4119bc:	shr    bl,cl
  4119be:	mov    ?,WORD PTR ds:0x5910dd2d
  4119c4:	mov    al,0xbb
  4119c6:	neg    DWORD PTR [ebx-0x6e]
  4119c9:	mov    eax,0x80ec3550
  4119ce:	or     eax,0x70f4c858
  4119d3:	hlt    
  4119d4:	shl    cl,1
  4119d6:	jmp    0x4119fc
  4119d8:	jecxz  0x411984
  4119da:	in     eax,dx
  4119db:	jb     0x411995
  4119dd:	xor    BYTE PTR [ebp+0x409f0b82],cl
  4119e3:	jg     0x411a44
  4119e5:	xor    cl,al
  4119e7:	addr16 retf 0x315f
  4119eb:	jmp    0xfa90:0x5319a169
  4119f2:	xchg   esp,eax
  4119f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119f4:	inc    ecx
  4119f5:	xchg   ecx,eax
  4119f6:	(bad)  
  4119f7:	fisub  WORD PTR [ebx+0x574e29b8]
  4119fd:	icebp  
  4119fe:	push   ss
  4119ff:	add    cl,BYTE PTR gs:[edx]
  411a02:	ret    
  411a03:	jno    0x411a6e
  411a05:	leave  
  411a06:	pop    eax
  411a07:	call   0xe034:0x36d1e633
  411a0e:	mov    esi,esi
  411a10:	push   ebx
  411a11:	(bad)  
  411a12:	int    0x22
  411a14:	out    dx,al
  411a15:	(bad)  
  411a16:	fwait
  411a17:	scas   eax,DWORD PTR es:[edi]
  411a18:	xchg   esp,eax
  411a19:	jge    0x4119bb
  411a1b:	cmp    dh,dl
  411a1d:	inc    edi
  411a1e:	pop    esi
  411a1f:	fcmovbe st,st(2)
  411a21:	and    bh,BYTE PTR [ebx-0x5c]
  411a24:	push   ebx
  411a25:	mov    edi,0xd5309e25
  411a2a:	aam    0xef
  411a2c:	pop    esp
  411a2d:	sbb    dh,BYTE PTR [esi-0x7d]
  411a30:	pushf  
  411a31:	push   0x6e
  411a33:	mov    ds:0x9b0ef1a8,al
  411a38:	lods   eax,DWORD PTR ds:[esi]
  411a39:	stc    
  411a3a:	daa    
  411a3b:	retf   
  411a3c:	call   0x19a0e96b
  411a41:	mov    edx,0x663e53fd
  411a46:	adc    dl,bh
  411a48:	jns    0x411aab
  411a4a:	bound  ebp,QWORD PTR [ebx+0x40]
  411a4d:	std    
  411a4e:	loop   0x411a87
  411a50:	and    esi,DWORD PTR [ebx+0x5c]
  411a53:	pop    eax
  411a54:	adc    cl,BYTE PTR [ebx-0x50]
  411a57:	or     ch,bl
  411a59:	and    eax,0x2b386892
  411a5e:	idiv   BYTE PTR [esi]
  411a60:	iret   
  411a61:	jmp    0x8bd4:0xb7b2934e
  411a68:	test   eax,0x10a33638
  411a6d:	popf   
  411a6e:	aas    
  411a6f:	dec    edi
  411a70:	pop    ebp
  411a71:	out    dx,eax
  411a72:	xchg   DWORD PTR [edx+edi*1],ebx
  411a75:	cmp    al,BYTE PTR [eax-0x3f]
  411a78:	cmp    ebp,DWORD PTR [esi-0x6238b377]
  411a7e:	jno    0x411a50
  411a80:	mov    ds:0xf08d1fd3,al
  411a85:	push   edi
  411a86:	sub    al,0x2c
  411a88:	mov    al,0x5e
  411a8a:	inc    esp
  411a8b:	pop    ss
  411a8c:	inc    edx
  411a8d:	jmp    FWORD PTR [ebx]
  411a8f:	xchg   ecx,eax
  411a90:	dec    BYTE PTR [eax]
  411a92:	jge    0x411a25
  411a94:	ror    DWORD PTR [ebx+0x2b],cl
  411a97:	loopne 0x411a69
  411a99:	fistp  DWORD PTR [ebx]
  411a9b:	mov    bh,0xfa
  411a9d:	packssdw mm2,QWORD PTR [esi-0x60]
  411aa1:	in     al,dx
  411aa2:	mov    edx,0x2992f5c7
  411aa7:	fwait
  411aa8:	movhlps xmm0,xmm7
  411aab:	pop    edx
  411aac:	adc    BYTE PTR [ecx+0xf61756],ah
  411ab2:	adc    al,0x8d
  411ab4:	push   ebp
  411ab5:	push   ebp
  411ab6:	mov    bh,BYTE PTR [ebx+0x22]
  411ab9:	retf   0x54a5
  411abc:	bound  esi,QWORD PTR [ecx+0x12a84257]
  411ac2:	sti    
  411ac3:	pop    ss
  411ac4:	aam    0xac
  411ac6:	and    BYTE PTR [edx+0x47c56a18],bh
  411acc:	dec    esp
  411acd:	les    edi,FWORD PTR [ebx+0x2f3bf258]
  411ad3:	mov    edi,0xd5a76317
  411ad8:	outs   dx,BYTE PTR ds:[esi]
  411ad9:	ins    DWORD PTR es:[edi],dx
  411ada:	adc    al,0x2f
  411adc:	nop
  411add:	iret   
  411ade:	inc    edi
  411adf:	arpl   WORD PTR [esi-0x3d],ax
  411ae2:	retf   0xd437
  411ae5:	or     edx,0xffffffbd
  411ae8:	jmp    0xefc5:0x722b8759
  411aef:	std    
  411af0:	sub    al,0xc3
  411af2:	loope  0x411acf
  411af4:	sub    eax,0xcb25b0ab
  411af9:	mov    edx,0xa52d3cc
  411afe:	pop    edi
  411aff:	cmc    
  411b00:	js     0x411b37
  411b02:	and    dl,BYTE PTR [ecx-0x5a4bd9bc]
  411b08:	cmc    
  411b09:	mov    ch,0x36
  411b0b:	adc    eax,0x448a990e
  411b10:	pusha  
  411b11:	(bad)  
  411b12:	call   0xa621:0x87383d9b
  411b19:	(bad)  
  411b1a:	pop    ecx
  411b1b:	lea    eax,[ecx-0x10]
  411b1e:	push   esp
  411b1f:	jmp    0x684698d3
  411b24:	cmc    
  411b25:	mov    ch,0x1d
  411b27:	cmp    esp,ebp
  411b29:	and    dl,cl
  411b2b:	fsub   DWORD PTR [esi]
  411b2d:	push   esi
  411b2e:	popa   
  411b2f:	pop    ecx
  411b30:	dec    ebp
  411b31:	mov    esi,0x22cb01d7
  411b36:	dec    eax
  411b37:	mov    ah,0xa1
  411b39:	leave  
  411b3a:	mov    bh,0xdf
  411b3c:	mov    cl,0xd9
  411b3e:	pop    eax
  411b3f:	mov    eax,ds:0x580c5521
  411b44:	and    dh,BYTE PTR [eax]
  411b46:	xor    bl,BYTE PTR [ecx]
  411b48:	add    BYTE PTR [eax-0x56b56b40],bh
  411b4e:	imul   bl
  411b50:	adc    ebx,DWORD PTR [eax]
  411b52:	addr16 mov ds:0x9a49,eax
  411b56:	out    0x63,ax
  411b59:	xlat   BYTE PTR ds:[ebx]
  411b5a:	repnz inc eax
  411b5c:	sub    esi,eax
  411b5e:	loop   0x411b2c
  411b60:	shl    DWORD PTR [edi],1
  411b62:	mov    DWORD PTR [ebx-0x1],eax
  411b65:	data16 jl 0x411b0d
  411b68:	or     BYTE PTR [esi],0x6c
  411b6b:	push   esi
  411b6c:	int3   
  411b6d:	pop    edi
  411b6e:	push   eax
  411b6f:	aaa    
  411b70:	mov    ah,0x6b
  411b72:	mov    bh,bl
  411b74:	mov    ?,edx
  411b76:	mov    eax,ds:0xe4a99d20
  411b7b:	cmp    eax,0x6ffb4e7b
  411b80:	fst    st(7)
  411b82:	jae    0x411bc0
  411b84:	mov    BYTE PTR [eax],cl
  411b86:	inc    edi
  411b87:	pushf  
  411b88:	ins    BYTE PTR es:[edi],dx
  411b89:	jmp    0x411b69
  411b8b:	mov    edi,0x259b34bb
  411b90:	fimul  WORD PTR [ebp-0x11]
  411b93:	add    ebp,DWORD PTR [edx+0x17]
  411b96:	xor    DWORD PTR [ebp-0x27],esp
  411b99:	xor    ecx,edx
  411b9b:	outs   dx,DWORD PTR ds:[esi]
  411b9c:	and    eax,DWORD PTR [eax]
  411b9e:	add    al,BYTE PTR [ebx+ebx*2]
  411ba1:	jbe    0x411b68
  411ba3:	mov    BYTE PTR [edi+0x1d],ah
  411ba6:	or     DWORD PTR [eax],esp
  411ba8:	(bad)  
  411ba9:	xchg   ebp,eax
  411baa:	jecxz  0x411c02
  411bac:	xchg   esi,eax
  411bad:	test   al,0x9c
  411baf:	push   eax
  411bb0:	(bad)  
  411bb1:	in     al,0x7c
  411bb3:	inc    ebx
  411bb4:	adc    cl,bl
  411bb6:	xlat   BYTE PTR ds:[ebx]
  411bb7:	imul   ebx,DWORD PTR [edi],0xffffff96
  411bba:	(bad)  
  411bbb:	stos   DWORD PTR es:[edi],eax
  411bbc:	in     al,dx
  411bbd:	mov    esi,0xc45cebc7
  411bc2:	fld    TBYTE PTR [edi-0x613ecf3e]
  411bc8:	loopne 0x411c48
  411bca:	outs   dx,BYTE PTR ds:[esi]
  411bcb:	das    
  411bcc:	adc    bl,bh
  411bce:	lea    esp,[edi]
  411bd0:	add    al,0x14
  411bd2:	sub    eax,DWORD PTR [edx]
  411bd4:	outs   dx,DWORD PTR ds:[esi]
  411bd5:	dec    ebx
  411bd6:	bound  eax,QWORD PTR [ebp-0x56]
  411bd9:	jg     0x411c2e
  411bdb:	adc    al,0x9c
  411bdd:	clc    
  411bde:	sub    eax,0xad73368f
  411be3:	prefetch (bad)
  411be4:	or     eax,0x5b591e5
  411be9:	shl    BYTE PTR [eax],1
  411beb:	mov    bh,0x58
  411bed:	inc    eax
  411bee:	mov    ebp,0xd50342ae
  411bf3:	pop    ds
  411bf4:	mov    al,ds:0x190d038f
  411bf9:	xchg   ebp,eax
  411bfa:	fmul   DWORD PTR [ebp+0x37]
  411bfd:	(bad)  
  411bfe:	cmp    al,0x28
  411c00:	mov    dh,BYTE PTR [ebp-0x24ef54a4]
  411c06:	addr16 jne 0x411bc7
  411c09:	jle    0x411c37
  411c0b:	sub    BYTE PTR [eax-0x5aebcfe0],ah
  411c11:	sub    DWORD PTR [eax-0x618094d2],edi
  411c17:	dec    ecx
  411c18:	push   ebp
  411c19:	fcmovnbe st,st(3)
  411c1b:	cld    
  411c1c:	mov    dl,0x7d
  411c1e:	movq   mm0,mm3
  411c21:	outs   dx,BYTE PTR ds:[esi]
  411c22:	pop    esi
  411c23:	retf   0x2a5f
  411c26:	xor    ebx,DWORD PTR [ebp+0x40dbfb1b]
  411c2c:	and    dl,ah
  411c2e:	push   edi
  411c2f:	mov    ebp,edi
  411c31:	dec    eax
  411c32:	loop   0x411c9d
  411c34:	sbb    ebx,DWORD PTR [ebp-0x669c0c9f]
  411c3a:	jmp    0x411bf6
  411c3c:	and    eax,0xecf1cc4a
  411c41:	cld    
  411c42:	pop    ebx
  411c43:	lea    ebp,ds:0x9280d8af
  411c49:	or     eax,0xad5bf86e
  411c4e:	fwait
  411c4f:	(bad)  
  411c50:	js     0x411c8a
  411c52:	sub    DWORD PTR [ebx-0x1c81a5fc],eax
  411c58:	or     al,0x1b
  411c5a:	sti    
  411c5b:	outs   dx,BYTE PTR ds:[esi]
  411c5c:	stos   BYTE PTR es:[edi],al
  411c5d:	pop    ds
  411c5e:	sub    DWORD PTR [esi-0x5534cc20],ecx
  411c64:	jno    0x411c21
  411c66:	xor    BYTE PTR [esi-0x3],0xaf
  411c6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c6b:	cwde   
  411c6c:	lods   eax,DWORD PTR ds:[esi]
  411c6d:	cmp    BYTE PTR [eax],al
  411c6f:	jnp    0x411c43
  411c71:	idiv   BYTE PTR [esi]
  411c73:	jmp    0x1573:0xb820caeb
  411c7a:	stc    
  411c7b:	shl    BYTE PTR [edi+0x4d3e78d1],1
  411c81:	(bad)  
  411c82:	sbb    eax,0xb517cb62
  411c87:	push   ss
  411c88:	sbb    esi,esi
  411c8a:	pop    esi
  411c8b:	mov    bh,0x30
  411c8d:	add    eax,0xcbf97ff7
  411c92:	adc    BYTE PTR [esp+ecx*4-0x8ffd90b],0x78
  411c9a:	inc    ecx
  411c9b:	xor    eax,DWORD PTR [edx-0x65]
  411c9e:	and    ebx,DWORD PTR [edx]
  411ca0:	xor    al,0x60
  411ca2:	call   0x42e7c810
  411ca7:	in     al,0x41
  411ca9:	pusha  
  411caa:	and    DWORD PTR [esi-0x1424786c],edx
  411cb0:	jl     0x411c42
  411cb2:	xchg   BYTE PTR [edi-0x5b147cfc],dl
  411cb8:	mov    esi,0x1a65712d
  411cbd:	cmp    cl,BYTE PTR [ebp+0x6f]
  411cc0:	call   0x6f56:0x70742368
  411cc7:	xchg   esi,eax
  411cc8:	(bad)  
  411cc9:	push   esi
  411cca:	mov    ebx,0x6d52bbd
  411ccf:	mov    ch,0xf1
  411cd1:	neg    BYTE PTR [edi+eiz*2]
  411cd4:	(bad)  
  411cd5:	lds    eax,FWORD PTR [esi-0x1e]
  411cd8:	sahf   
  411cd9:	mov    ecx,0x7dc97fb9
  411cde:	cmp    cl,BYTE PTR [ebx-0x5e]
  411ce1:	dec    bp
  411ce3:	or     dh,BYTE PTR [ebp+0x1c2c291a]
  411ce9:	fbld   TBYTE PTR [edi]
  411ceb:	sbb    eax,DWORD PTR [ecx+0x18]
  411cee:	fdecstp 
  411cf0:	(bad)  
  411cf1:	call   0x14ba7051
  411cf6:	mov    dl,cl
  411cf8:	cdq    
  411cf9:	sub    bh,BYTE PTR [eax+eax*2-0x3]
  411cfd:	(bad)  [esi]
  411cff:	dec    edi
  411d00:	or     BYTE PTR [esi-0x32],0x8b
  411d04:	jmp    0x4e4f:0x963457a
  411d0b:	fcomi  st,st(2)
  411d0d:	sti    
  411d0e:	jl     0x411d40
  411d10:	out    dx,eax
  411d11:	stos   BYTE PTR es:[edi],al
  411d12:	mov    dl,0x27
  411d14:	push   ebx
  411d15:	or     al,0xac
  411d17:	push   esp
  411d18:	hlt    
  411d19:	xlat   BYTE PTR ds:[ebx]
  411d1a:	or     eax,0x410ce682
  411d1f:	jbe    0x411d16
  411d21:	stos   BYTE PTR es:[edi],al
  411d22:	outs   dx,DWORD PTR ds:[esi]
  411d23:	push   0xffffffdc
  411d25:	push   ds
  411d26:	push   es
  411d27:	(bad)  
  411d28:	sti    
  411d29:	or     BYTE PTR [esi+0x4a38df37],bl
  411d2f:	(bad)  
  411d30:	pop    ds
  411d31:	sub    esp,DWORD PTR [edx-0x3ecfa91a]
  411d37:	inc    ebx
  411d38:	jmp    0xbae5:0xe67908a5
  411d3f:	dec    eax
  411d40:	push   ecx
  411d41:	xor    ecx,DWORD PTR ds:0xc4471229
  411d47:	mov    bl,0x5c
  411d49:	retf   0xfe9f
  411d4c:	mov    dl,0x78
  411d4e:	in     al,dx
  411d4f:	lahf   
  411d50:	ret    0x39c5
  411d53:	add    al,BYTE PTR [eax+edi*8+0x3c]
  411d57:	inc    edx
  411d58:	fwait
  411d59:	mov    al,0x90
  411d5b:	mov    eax,0x62783ce4
  411d60:	add    edx,ecx
  411d62:	push   es
  411d63:	fcmovbe st,st(0)
  411d65:	enter  0xb5fc,0xe0
  411d69:	sti    
  411d6a:	or     DWORD PTR [ecx-0x5a26c022],0xf
  411d71:	jl     0x411d9c
  411d73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d74:	loope  0x411d9f
  411d76:	xchg   ebx,eax
  411d77:	sbb    ch,BYTE PTR [edx]
  411d79:	rcl    DWORD PTR [edx-0x23bee199],cl
  411d7f:	dec    esp
  411d80:	loop   0x411dfc
  411d82:	sbb    eax,DWORD PTR [ecx-0x4f]
  411d85:	and    eax,0xae463cda
  411d8a:	loopne 0x411d34
  411d8c:	repnz adc eax,DWORD PTR [edx+0x19]
  411d90:	pop    ebp
  411d91:	dec    ecx
  411d92:	outs   dx,DWORD PTR ds:[esi]
  411d93:	mov    eax,0x4b5f4652
  411d98:	xor    BYTE PTR [ecx+0x19dc354c],0x17
  411d9f:	jnp    0x411d8c
  411da1:	mov    ebx,0xc132d3aa
  411da6:	jmp    0x9411a26
  411dab:	and    ebx,ebp
  411dad:	pop    edi
  411dae:	aaa    
  411daf:	inc    edx
  411db0:	add    ah,0x45
  411db3:	add    dl,BYTE PTR [edi+0x56]
  411db6:	jne    0x411d6a
  411db8:	jge    0x411d52
  411dba:	and    eax,0xfb8922e0
  411dbf:	xchg   esp,eax
  411dc0:	xor    dh,al
  411dc2:	inc    eax
  411dc3:	dec    esi
  411dc4:	mov    ah,0xda
  411dc6:	jbe    0x411d96
  411dc8:	int    0x44
  411dca:	dec    ecx
  411dcb:	aaa    
  411dcc:	or     ebx,esp
  411dce:	cmp    esp,DWORD PTR [edi+0x1286d404]
  411dd4:	loope  0x411dd0
  411dd6:	jo     0x411d8c
  411dd8:	shl    DWORD PTR [ecx+ecx*4+0x15],0x8e
  411ddd:	shl    esp,1
  411ddf:	add    DWORD PTR [eax+0x1099f230],ebp
  411de5:	xchg   ebx,eax
  411de6:	fwait
  411de7:	int3   
  411de8:	and    dl,BYTE PTR [edi-0x3e4ac904]
  411dee:	mov    al,0xbc
  411df0:	mov    bl,0x5d
  411df2:	in     al,0xad
  411df4:	mov    eax,ds:0xc0b361b7
  411df9:	jp     0x411e26
  411dfb:	xor    DWORD PTR [ebx],edi
  411dfd:	je     0x411e7e
  411dff:	mov    esp,0x7bd5813a
  411e04:	or     dh,BYTE PTR ds:0xd65daf7b
  411e0a:	mov    cl,BYTE PTR [ecx-0x522a81ca]
  411e10:	xchg   ebx,eax
  411e11:	in     eax,0x5d
  411e13:	ficom  WORD PTR [ebp+0x720ac32a]
  411e19:	xor    bl,dh
  411e1b:	jno    0x411e3d
  411e1d:	ret    0xc3cb
  411e20:	cmp    eax,0xfe251887
  411e25:	aaa    
  411e26:	cmp    al,0x18
  411e28:	jo     0x411daf
  411e2a:	pop    edi
  411e2b:	sub    eax,0x84f32a7c
  411e30:	mov    ecx,0x6dfdec17
  411e35:	in     eax,0x2c
  411e37:	xchg   edi,eax
  411e38:	push   ecx
  411e39:	or     al,BYTE PTR [ecx-0x78]
  411e3c:	and    edi,DWORD PTR [eax+edi*8]
  411e3f:	mov    al,0x5d
  411e41:	mov    ch,BYTE PTR [ecx]
  411e43:	lds    esp,FWORD PTR [esi+0xa62f3e1]
  411e49:	mov    bl,0x3a
  411e4b:	ret    0xd9d4
  411e4e:	adc    DWORD PTR [edx+ecx*8],edx
  411e51:	outs   dx,DWORD PTR ds:[esi]
  411e52:	enter  0xfc3a,0xe
  411e56:	push   ebp
  411e57:	cli    
  411e58:	or     al,BYTE PTR [edx-0x194e6433]
  411e5e:	sahf   
  411e5f:	cmc    
  411e60:	cmp    eax,0x2f90a96e
  411e65:	icebp  
  411e66:	int    0x13
  411e68:	push   edx
  411e69:	popf   
  411e6a:	daa    
  411e6b:	sub    al,0x2d
  411e6d:	dec    esp
  411e6e:	jo     0x411e3d
  411e70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e71:	test   al,0x9a
  411e73:	mov    bh,0x54
  411e75:	es call 0xf4cc29cd
  411e7b:	std    
  411e7c:	lea    edx,[ebx+0x5914d625]
  411e82:	cdq    
  411e83:	stos   DWORD PTR es:[edi],eax
  411e84:	scas   eax,DWORD PTR es:[edi]
  411e85:	and    al,bh
  411e87:	fmul   st,st(2)
  411e89:	mov    al,ds:0x794bb431
  411e8e:	mov    ebp,0xf28bbb99
  411e93:	and    edx,esi
  411e95:	dec    ebp
  411e96:	and    ah,dh
  411e98:	add    ebx,ebp
  411e9a:	sub    eax,0x3b66d47c
  411e9f:	dec    esp
  411ea0:	je     0x411eba
  411ea2:	aaa    
  411ea3:	mov    ds:0xe6765980,eax
  411ea8:	jmp    0x60dc:0x62ff08ba
  411eaf:	bound  ecx,QWORD PTR [esi]
  411eb1:	sub    esp,DWORD PTR [eax]
  411eb3:	inc    ecx
  411eb4:	pop    ss
  411eb5:	jmp    0x4105:0x7c4f2f83
  411ebc:	and    dl,ah
  411ebe:	sub    al,0xdf
  411ec0:	jmp    0xef5c26d5
  411ec5:	sub    eax,0x10dcf89c
  411eca:	jl     0x411e8c
  411ecc:	mov    al,ds:0x21d7657
  411ed1:	in     al,0xa8
  411ed3:	leave  
  411ed4:	add    edx,DWORD PTR [eax-0x1b]
  411ed7:	outs   dx,DWORD PTR ds:[esi]
  411ed8:	dec    eax
  411ed9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411eda:	popf   
  411edb:	test   al,0x61
  411edd:	push   ebp
  411ede:	sub    BYTE PTR [ebp+0x1a],0x5c
  411ee2:	rol    DWORD PTR [edx-0x1f5a589c],0xe2
  411ee9:	sub    eax,0xe8263881
  411eee:	cld    
  411eef:	jns    0x411e7c
  411ef1:	(bad)  
  411ef2:	xchg   ecx,eax
  411ef3:	jno    0x411f2e
  411ef5:	jns    0x411f24
  411ef7:	daa    
  411ef8:	(bad)  
  411efa:	iret   
  411efb:	inc    esi
  411efc:	jne    0x411edb
  411efe:	loop   0x411f10
  411f00:	pusha  
  411f01:	sbb    al,BYTE PTR [ebx+eiz*4]
  411f04:	and    dh,ch
  411f06:	cmp    DWORD PTR ds:0xcfc384a0,0x1a
  411f0d:	test   BYTE PTR [edi],dl
  411f0f:	pop    edi
  411f10:	jg     0x411eda
  411f12:	stos   BYTE PTR es:[edi],al
  411f13:	div    DWORD PTR [edx-0x10]
  411f16:	xchg   ecx,eax
  411f17:	add    eax,0x91125276
  411f1c:	cdq    
  411f1d:	mov    edx,0xfebc67dd
  411f22:	or     DWORD PTR [eax+0x3],esi
  411f25:	add    dh,BYTE PTR ds:0x4b5f9f9e
  411f2b:	inc    eax
  411f2c:	jle    0x411f0b
  411f2e:	xchg   ecx,eax
  411f2f:	inc    ebp
  411f30:	fwait
  411f31:	and    BYTE PTR [edi],bh
  411f33:	stos   DWORD PTR es:[edi],eax
  411f34:	fsubr  DWORD PTR es:[esi]
  411f37:	dec    edi
  411f38:	cmp    ebp,ebx
  411f3a:	loopne 0x411f36
  411f3c:	mov    ch,0x98
  411f3e:	add    edi,DWORD PTR [eax]
  411f40:	sahf   
  411f41:	push   ecx
  411f42:	mov    esi,0x124e19e7
  411f47:	jo     0x411f05
  411f49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f4a:	mov    ebx,DWORD PTR [ecx+0x700a5147]
  411f50:	push   0xffffffef
  411f52:	(bad)  [ebp-0x9]
  411f55:	jnp    0x411fa3
  411f57:	rcl    BYTE PTR [eax+ebx*2+0x57f03576],1
  411f5e:	jl     0x411fa2
  411f60:	nop
  411f61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f62:	jne    0x411f14
  411f64:	mov    al,BYTE PTR [esi-0x6f]
  411f67:	adc    BYTE PTR [esi-0x7b87ba6f],cl
  411f6d:	js     0x411fe5
  411f6f:	add    eax,ecx
  411f71:	dec    ebp
  411f72:	pop    ebp
  411f73:	ja     0x411f5e
  411f75:	repnz ds adc esp,edi
  411f79:	jle    0x411f74
  411f7b:	cdq    
  411f7c:	ret    
  411f7d:	stc    
  411f7e:	repnz mov esi,0x17a4540e
  411f84:	inc    edi
  411f85:	lds    ebp,FWORD PTR [esi+ebx*8+0x3a]
  411f89:	dec    ebp
  411f8a:	mov    ah,0x5c
  411f8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f8d:	sbb    ch,bl
  411f8f:	adc    al,0xbc
  411f91:	xchg   ebx,eax
  411f92:	sub    BYTE PTR [eax],bh
  411f94:	cli    
  411f95:	std    
  411f96:	(bad)  
  411f97:	retf   0x3d4
  411f9a:	test   al,0x3
  411f9c:	adc    eax,0xf953468b
  411fa1:	popa   
  411fa2:	push   es
  411fa3:	sti    
  411fa4:	dec    edi
  411fa5:	or     BYTE PTR [ecx],dh
  411fa7:	inc    edi
  411fa8:	int    0x1b
  411faa:	inc    edx
  411fab:	cld    
  411fac:	lock jmp 0x8ff18844
  411fb2:	sbb    esi,DWORD PTR [esi]
  411fb4:	xchg   ch,cl
  411fb6:	imul   edi
  411fb8:	push   0xb7822acb
  411fbd:	stc    
  411fbe:	inc    esp
  411fbf:	(bad)  
  411fc1:	inc    edx
  411fc2:	(bad)  
  411fc3:	mov    eax,0x53bff9bc
  411fc8:	pop    ds
  411fc9:	mov    tr7,edx
  411fcc:	push   ecx
  411fcd:	mov    al,ds:0xc1ea5cce
  411fd2:	inc    edi
  411fd3:	not    BYTE PTR [edi+ebp*8-0x511ab54c]
  411fda:	pusha  
  411fdb:	test   BYTE PTR [esi+0x79d11dbc],0x3f
  411fe2:	sub    al,0x7f
  411fe4:	inc    esi
  411fe5:	shr    BYTE PTR [ecx+0x1b5943fd],1
  411feb:	add    BYTE PTR [ecx],ch
  411fed:	mov    es,ebx
  411fef:	add    eax,0xa22425e2
  411ff4:	retf   0x5e77
  411ff7:	inc    esp
  411ff8:	sbb    dl,0x98
  411ffb:	pop    edx
  411ffc:	push   ebp
  411ffd:	test   dh,dl
  411fff:	ret    
  412000:	js     0x412056
  412002:	push   ebp
  412003:	aas    
  412004:	xor    ebx,DWORD PTR [edx-0x342cba63]
  41200a:	popf   
  41200b:	loope  0x412000
  41200d:	sbb    ebp,DWORD PTR [edi+0x19ec90e5]
  412013:	sub    al,0x4b
  412015:	xchg   esi,eax
  412016:	dec    ecx
  412017:	sub    BYTE PTR [ebx],0xe4
  41201a:	vpshaw ymm12,xmm1,[eax]
  41201f:	push   ecx
  412020:	adc    eax,ecx
  412022:	mov    bl,0x1e
  412024:	test   edi,ebx
  412026:	mov    al,0x92
  412028:	lea    esi,[ebp+0x4ee6d20f]
  41202e:	(bad)  
  41202f:	int    0x91
  412031:	imul   ecx,ebp,0xffffffba
  412034:	imul   esi,eax,0x194dc270
  41203a:	clc    
  41203b:	scas   eax,DWORD PTR es:[edi]
  41203c:	and    eax,0xd96d7348
  412041:	call   0x7909:0xa579dc8c
  412048:	cld    
  412049:	cmp    DWORD PTR [ecx],0xaecfc4dc
  41204f:	imul   ebp,ebx,0xffffffd3
  412052:	mov    edi,ds
  412054:	jbe    0x412064
  412056:	push   edx
  412057:	popa   
  412058:	pop    edx
  412059:	push   es
  41205a:	mov    bl,bl
  41205c:	stc    
  41205d:	sub    esp,edx
  41205f:	sbb    ah,BYTE PTR fs:[edx+0x78]
  412063:	or     ah,BYTE PTR [ebx]
  412065:	or     esi,eax
  412067:	add    ebx,DWORD PTR [ebx-0x75]
  41206a:	pop    esi
  41206b:	mov    dh,BYTE PTR [edx]
  41206d:	adc    eax,0x8e1ef46f
  412072:	cdq    
  412073:	and    al,0x5c
  412075:	in     al,dx
  412076:	outs   dx,BYTE PTR ds:[esi]
  412077:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412078:	cmp    ah,BYTE PTR [esp+eax*1]
  41207b:	or     BYTE PTR [eax],dl
  41207d:	iret   
  41207e:	jmp    0xb3b0:0xdf633abd
  412085:	jg     0x4120ab
  412087:	xor    DWORD PTR [eax-0x1a1c9434],ebp
  41208d:	xchg   ebx,eax
  41208e:	dec    eax
  41208f:	or     BYTE PTR [esi],0x5d
  412092:	mov    WORD PTR [ebp+0x67],?
  412095:	inc    edx
  412096:	cmp    esi,edx
  412098:	sti    
  412099:	mov    bh,0x67
  41209b:	mov    WORD PTR [ebx+0x3e81937c],es
  4120a1:	dec    esp
  4120a2:	xor    eax,0x6a59a4b9
  4120a7:	shl    DWORD PTR [ebx+0x24],cl
  4120aa:	and    bl,BYTE PTR [ecx]
  4120ac:	stc    
  4120ad:	pop    ebx
  4120ae:	xchg   ebp,eax
  4120af:	jne    0x412084
  4120b1:	enter  0x8e68,0x89
  4120b5:	mov    ebx,0x5f317d50
  4120ba:	push   es
  4120bb:	or     DWORD PTR [eax],esp
  4120bd:	ds (bad) 
  4120bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120c0:	xchg   ebx,eax
  4120c1:	and    al,0x35
  4120c3:	cmp    bh,BYTE PTR [esi+0x83a82f6]
  4120c9:	call   0xfc91504
  4120ce:	mov    DWORD PTR [esi+0x34],ebp
  4120d1:	mov    eax,0xc8833304
  4120d6:	int3   
  4120d7:	push   cs
  4120d8:	leave  
  4120d9:	jbe    0x4120e4
  4120db:	sub    al,BYTE PTR [edi+0x7d]
  4120de:	inc    esp
  4120df:	sbb    dl,BYTE PTR [esi+0x4f5c09bf]
  4120e5:	mov    ebx,0x19fc021c
  4120ea:	mov    dl,0x96
  4120ec:	push   esi
  4120ed:	out    dx,al
  4120ee:	aam    0xc5
  4120f0:	mov    eax,0x5359fea4
  4120f5:	pop    esp
  4120f6:	pop    ebp
  4120f7:	call   0x8fcc6935
  4120fc:	jle    0x412106
  4120fe:	mov    eax,ds:0xdb2f990b
  412103:	add    dl,ch
  412105:	inc    ebp
  412106:	sub    DWORD PTR [eax+eax*2],0xffffffa1
  41210a:	mov    esi,DWORD PTR [ebx+0x4f]
  41210d:	pop    esi
  41210e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41210f:	pop    ecx
  412110:	das    
  412111:	push   ss
  412112:	outs   dx,DWORD PTR ds:[esi]
  412113:	mov    DWORD PTR [esi-0x68],ecx
  412116:	aad    0xaa
  412118:	scas   al,BYTE PTR es:[edi]
  412119:	lock dec edi
  41211b:	jae    0x412194
  41211d:	in     al,0x92
  41211f:	pop    edx
  412120:	xor    cl,BYTE PTR [ebx-0x705a3ec2]
  412126:	in     eax,dx
  412127:	push   edi
  412128:	ret    0xdcde
  41212b:	xchg   BYTE PTR [esi+0x778f0670],bh
  412131:	aam    0xff
  412133:	cmp    eax,0x4756edb5
  412138:	push   ebx
  412139:	pop    eax
  41213a:	mov    ah,0xb6
  41213c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41213d:	dec    ebx
  41213e:	arpl   sp,dx
  412140:	pop    eax
  412141:	retf   0x7bb4
  412144:	jmp    0xbecb0304
  412149:	mov    ah,0x88
  41214b:	retf   0x4b2
  41214e:	inc    ebp
  41214f:	jp     0x412169
  412151:	adc    cl,ah
  412153:	repnz sbb BYTE PTR [eax+0x30796807],bh
  41215a:	stc    
  41215b:	loopne 0x41214f
  41215d:	and    BYTE PTR [eax+eiz*4-0xb02dd6e],dh
  412164:	(bad)  
  412165:	dec    DWORD PTR [esi-0x2c9c400]
  41216b:	or     ebp,DWORD PTR [eax+0x4aa0b25d]
  412171:	jno    0x4120f8
  412173:	or     esp,DWORD PTR [edi]
  412175:	jno    0x4121c7
  412177:	cmp    BYTE PTR [edx+0x71360401],dl
  41217d:	sahf   
  41217e:	sbb    BYTE PTR [ebx-0x7d],0xde
  412182:	xor    al,0x42
  412184:	fs adc ecx,esp
  412187:	shr    bl,1
  412189:	push   ecx
  41218a:	test   BYTE PTR ds:0x91977f56,0x45
  412191:	int    0x66
  412193:	cmp    BYTE PTR [ebp-0x6e119b95],0xd9
  41219a:	xor    eax,0x2b02ad1d
  41219f:	xor    ebp,edx
  4121a1:	mov    esp,es
  4121a3:	stos   DWORD PTR es:[edi],eax
  4121a4:	add    edi,DWORD PTR [ecx+0x27]
  4121a7:	sbb    DWORD PTR [ebx],edx
  4121a9:	stos   DWORD PTR es:[edi],eax
  4121aa:	mov    bl,0xd0
  4121ac:	lds    esi,FWORD PTR [edi-0x5a]
  4121af:	mov    ebx,edx
  4121b1:	lahf   
  4121b2:	push   ds
  4121b3:	repz jp 0x412136
  4121b6:	loop   0x4121e2
  4121b8:	jne    0x41221b
  4121ba:	ja     0x4121ae
  4121bc:	stc    
  4121bd:	adc    ebx,DWORD PTR [edx-0x6e]
  4121c0:	mov    WORD PTR [esi+0x7a30cf60],es
  4121c6:	jns    0x4121a4
  4121c8:	mov    dh,0xc0
  4121ca:	inc    edx
  4121cb:	pop    ss
  4121cc:	xchg   BYTE PTR [eax],al
  4121ce:	sbb    edx,0x4e
  4121d1:	cs (bad) 
  4121d3:	pop    ebx
  4121d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121d5:	sub    ebx,DWORD PTR [eax]
  4121d7:	(bad)  
  4121d8:	mov    al,0xb2
  4121da:	addr16 mov ebx,0x11781a6a
  4121e0:	pop    edi
  4121e1:	int    0x7b
  4121e3:	jecxz  0x412167
  4121e5:	add    eax,0x4284779e
  4121ea:	fwait
  4121eb:	aad    0xde
  4121ed:	push   0x4ca11eb0
  4121f2:	fs pop ebp
  4121f4:	xor    eax,0x60218e2e
  4121f9:	jmp    0x412251
  4121fb:	sahf   
  4121fc:	test   BYTE PTR [edi+0x68065ab1],ah
  412202:	pop    eax
  412203:	into   
  412204:	adc    DWORD PTR [ebx+esi*2],ecx
  412207:	cmp    DWORD PTR [edx+ecx*8-0x2e82c3c9],ebx
  41220e:	ja     0x4121e5
  412210:	and    DWORD PTR [ebp-0x20],0x28
  412214:	jbe    0x412285
  412216:	sbb    cl,BYTE PTR [edx-0x2c]
  412219:	shr    BYTE PTR ds:[ecx-0x9],cl
  41221d:	and    al,0xe8
  41221f:	cdq    
  412220:	aad    0x96
  412222:	push   cs
  412223:	(bad)  
  412224:	pop    ecx
  412225:	loop   0x412247
  412227:	scas   al,BYTE PTR es:[edi]
  412228:	xchg   esp,eax
  412229:	pop    edi
  41222a:	add    eax,DWORD PTR [edx-0x6a]
  41222d:	test   eax,0x80ee3e75
  412232:	mul    DWORD PTR [edx+0x36cf16a]
  412238:	jno    0x412200
  41223a:	inc    eax
  41223b:	xchg   edi,eax
  41223c:	aas    
  41223d:	and    dl,al
  41223f:	mov    ch,BYTE PTR [ecx+0x2]
  412242:	gs xor bh,cl
  412245:	shl    BYTE PTR ds:0x3b284f2b,cl
  41224b:	dec    edi
  41224c:	cmp    al,0xff
  41224e:	jl     0x4121fe
  412250:	inc    ebp
  412251:	jmp    FWORD PTR [edi]
  412253:	loopne 0x4122a9
  412255:	xchg   ebx,eax
  412256:	push   0xffffffe2
  412258:	fadd   DWORD PTR [esi]
  41225a:	into   
  41225b:	mov    ebx,0xc5adea41
  412260:	fwait
  412261:	loopne 0x412213
  412263:	ds pushf 
  412265:	mov    ds:0x8dc05ef8,eax
  41226a:	rol    DWORD PTR [ebx],cl
  41226c:	fcmovb st,st(7)
  41226e:	das    
  41226f:	or     al,0x52
  412271:	adc    al,0x30
  412273:	int    0xc4
  412275:	inc    esp
  412276:	jnp    0x412226
  412278:	xor    BYTE PTR ds:0x9f2eff37,0xe3
  41227f:	mov    dh,0xaa
  412281:	mul    DWORD PTR [ecx+0x31]
  412284:	push   0xc60ac8f3
  412289:	inc    edi
  41228a:	call   0xeefb8fff
  41228f:	repnz (bad) 
  412291:	fldenv [ecx+0xe9759ad]
  412297:	mov    ebx,esp
  412299:	mov    ebx,0xc3ead321
  41229e:	jbe    0x41227b
  4122a0:	icebp  
  4122a1:	dec    esp
  4122a2:	mov    ecx,0xc3bf7647
  4122a7:	lahf   
  4122a8:	and    edx,DWORD PTR [edx+0xa]
  4122ab:	sbb    ecx,ebx
  4122ad:	pop    ebx
  4122ae:	in     al,0x9b
  4122b0:	xchg   ebp,edi
  4122b2:	jg     0x41232a
  4122b4:	mov    ebp,0xfd2599b3
  4122b9:	or     eax,0xb0fa0b3d
  4122be:	mov    ch,0x1d
  4122c0:	adc    ebp,DWORD PTR [edx-0x4f]
  4122c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122c4:	jb     0x4122f1
  4122c6:	arpl   WORD PTR [ecx-0x23c03c8f],dx
  4122cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122cd:	fmul   QWORD PTR [eax+0x22]
  4122d0:	ret    0xecee
  4122d3:	add    eax,0x7463d09d
  4122d8:	jno    0x41233c
  4122da:	push   es
  4122db:	in     al,0x38
  4122dd:	shl    BYTE PTR [esi],1
  4122df:	js     0x4122b3
  4122e1:	aam    0xe8
  4122e3:	js     0x41233e
  4122e5:	mov    BYTE PTR [edx+edi*4-0x29],dh
  4122e9:	cmp    ebx,eax
  4122eb:	(bad)  
  4122ec:	cdq    
  4122ed:	or     BYTE PTR [edi],0x7f
  4122f0:	ins    DWORD PTR es:[edi],dx
  4122f1:	or     ebx,ecx
  4122f3:	lods   al,BYTE PTR ds:[si]
  4122f5:	call   DWORD PTR ds:0x67f6653f
  4122fb:	(bad)  
  4122fc:	jae    0x4122d9
  4122fe:	sbb    esp,DWORD PTR [eax]
  412300:	mov    ebp,0x18874cb4
  412305:	push   ebx
  412306:	aad    0x65
  412308:	push   cs
  412309:	mov    ecx,0xb894805d
  41230e:	or     eax,0xf56474e
  412313:	adc    al,BYTE PTR ds:0x68b2afc1
  412319:	(bad)  
  41231a:	in     eax,dx
  41231b:	icebp  
  41231c:	(bad)  [ebp-0x3e]
  41231f:	ins    DWORD PTR es:[edi],dx
  412320:	fwait
  412321:	popa   
  412322:	ret    
  412323:	aam    0xa3
  412325:	std    
  412326:	cmc    
  412327:	out    0x4d,al
  412329:	mov    eax,0x879af3c3
  41232e:	ss push 0x3b
  412331:	mov    ds:0xacf89dce,eax
  412336:	xchg   esp,eax
  412337:	jmp    0x1d6fd487
  41233c:	inc    ebx
  41233d:	jns    0x4122d7
  41233f:	sahf   
  412340:	jecxz  0x41230e
  412342:	sub    al,0x7f
  412344:	fdivr  QWORD PTR [ebx+ebp*8-0x184422fa]
  41234b:	xor    bl,bh
  41234d:	jle    0x412334
  41234f:	dec    ecx
  412350:	(bad)  
  412352:	xor    dh,0xa6
  412355:	pop    DWORD PTR [ecx+0x617980d]
  41235b:	jnp    0x412344
  41235d:	dec    ebx
  41235e:	push   ecx
  41235f:	xor    edx,DWORD PTR [ecx+0x3e]
  412362:	dec    edx
  412363:	pop    edi
  412364:	fisttp QWORD PTR [edi-0xd]
  412367:	dec    ebp
  412368:	sub    cl,BYTE PTR [edi+0x7c359cac]
  41236e:	fbstp  TBYTE PTR [edi-0x1c1a785]
  412374:	ffree  st(7)
  412376:	mov    edx,0xdcb955a0
  41237b:	jb     0x412382
  41237d:	push   ds
  41237e:	rcr    ebp,0x97
  412381:	jmp    0x412387
  412383:	push   esi
  412384:	jmp    0x4716f9a9
  412389:	push   ds
  41238a:	int3   
  41238b:	and    ch,ah
  41238d:	fdiv   DWORD PTR [edx]
  41238f:	mov    DWORD PTR [eax-0x40],ecx
  412392:	imul   edi,ebp,0x97bbcadd
  412398:	adc    eax,0x436beb99
  41239d:	imul   ecx,DWORD PTR [eax+0x3568ff01],0xf99fbe5f
  4123a7:	jg     0x4123fd
  4123a9:	mov    dl,0x8a
  4123ab:	int3   
  4123ac:	add    BYTE PTR [ebp+0x23f36303],0x11
  4123b3:	std    
  4123b4:	fcom   DWORD PTR [ebx+0x40524bf6]
  4123ba:	aaa    
  4123bb:	das    
  4123bc:	mov    bh,0x1c
  4123be:	(bad)  
  4123bf:	push   ecx
  4123c0:	or     eax,0x376e3380
  4123c5:	and    bl,BYTE PTR [ecx+0x69]
  4123c8:	mov    DWORD PTR [esi-0x62ba86a2],ebp
  4123ce:	jle    0x412369
  4123d0:	mov    ebp,0x9f0a914e
  4123d5:	adc    ebp,DWORD PTR [ecx+0x355e5e24]
  4123db:	inc    edx
  4123dc:	mov    bl,0x91
  4123de:	out    dx,al
  4123df:	popa   
  4123e0:	ss aaa 
  4123e2:	iret   
  4123e3:	mov    DWORD PTR [edx],ebx
  4123e5:	mov    ds:0x97fc9fd2,eax
  4123ea:	clc    
  4123eb:	cli    
  4123ec:	dec    esi
  4123ed:	cmp    al,0xca
  4123ef:	xor    edi,DWORD PTR [ebp+0x63]
  4123f2:	mov    eax,DWORD PTR ds:0x9dff5c79
  4123f8:	jo     0x412401
  4123fa:	ret    
  4123fb:	push   eax
  4123fc:	cmp    bl,BYTE PTR [ebp-0x6d60e6bd]
  412402:	addr16 js 0x4123ec
  412405:	dec    edx
  412406:	mov    esi,0x1b75926e
  41240b:	mov    ebx,0x2df41c11
  412410:	pop    ecx
  412411:	mul    BYTE PTR [esi+eax*2]
  412414:	xchg   esp,eax
  412415:	(bad)  
  412416:	aam    0x3e
  412418:	pop    esi
  412419:	xor    eax,0x2253f1ec
  41241e:	jg     0x412494
  412420:	mov    eax,edi
  412422:	rcr    DWORD PTR [ebx+0x7e],1
  412425:	fs gs inc esi
  412428:	in     eax,0x50
  41242a:	xor    BYTE PTR [edi+0x3cacb721],0xa7
  412431:	push   ecx
  412432:	test   BYTE PTR [ecx+0x2794f74d],0xda
  412439:	mov    al,0x21
  41243b:	sbb    edi,DWORD PTR [esi-0x388b954d]
  412441:	js     0x412422
  412443:	and    bh,BYTE PTR [ebx-0x27b58189]
  412449:	xor    eax,DWORD PTR [ecx]
  41244b:	shr    BYTE PTR [ebx-0x3b8be2b4],cl
  412451:	test   DWORD PTR [ebp+0x6d],eax
  412454:	xchg   esi,eax
  412455:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412456:	dec    edx
  412457:	push   0xffffffa2
  412459:	and    BYTE PTR [edi-0x50d3dea3],ch
  41245f:	cmp    BYTE PTR [eax-0x61fe77b3],ch
  412465:	pop    edx
  412466:	pop    eax
  412467:	jmp    0x40a7026d
  41246c:	popf   
  41246d:	scas   eax,DWORD PTR es:[edi]
  41246e:	bound  ebp,QWORD PTR [eax-0x1d2743d5]
  412474:	out    dx,eax
  412475:	cwde   
  412476:	pushf  
  412477:	push   ss
  412478:	pop    ecx
  412479:	out    0xc7,eax
  41247b:	cdq    
  41247c:	nop
  41247d:	inc    esi
  41247e:	mov    cl,bl
  412480:	js     0x4124c4
  412482:	and    ebp,DWORD PTR [esi-0x46]
  412485:	mov    ch,0x9c
  412487:	sub    BYTE PTR [edi],0xa9
  41248a:	jnp    0x4124d9
  41248c:	mov    ds:0xb16e7904,al
  412491:	sub    BYTE PTR [edx+eiz*1],ch
  412494:	addr16 cwde 
  412496:	aaa    
  412497:	out    0xe4,eax
  412499:	inc    edx
  41249a:	mov    ebx,esp
  41249c:	iret   
  41249d:	mov    dl,0xb8
  41249f:	xchg   ebp,eax
  4124a0:	and    ecx,edi
  4124a2:	adc    dh,BYTE PTR [edi-0x3ac5998]
  4124a8:	adc    BYTE PTR [edi+0x38c4d329],0x3d
  4124af:	mov    eax,?
  4124b1:	mov    ah,0x66
  4124b3:	ret    0x2f70
  4124b6:	xchg   ebp,eax
  4124b7:	add    al,0x52
  4124b9:	shl    BYTE PTR [ebp+0x3fa0120e],cl
  4124bf:	mov    eax,ds:0x698dcf4e
  4124c4:	pop    ecx
  4124c5:	pop    esi
  4124c6:	cmp    eax,0xf7b28466
  4124cb:	mov    bl,0xd
  4124cd:	hlt    
  4124ce:	pop    es
  4124cf:	fimul  DWORD PTR [edx-0x6f]
  4124d2:	mov    eax,ds:0xcc02e1d2
  4124d7:	ret    0x661a
  4124da:	(bad)  
  4124db:	pop    edi
  4124dc:	fmulp  st(6),st
  4124de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124df:	data16 lahf 
  4124e1:	hlt    
  4124e2:	xor    al,0x8
  4124e4:	std    
  4124e5:	repnz inc edi
  4124e7:	xchg   ch,bh
  4124e9:	jbe    0x41253b
  4124eb:	mov    ds:0xb4e8c0dc,eax
  4124f0:	fldenv ds:0x4008061d
  4124f6:	mov    al,0x1c
  4124f8:	icebp  
  4124f9:	jbe    0x41248b
  4124fb:	xchg   ebp,eax
  4124fc:	mov    WORD PTR [ebx],?
  4124fe:	mov    al,0xeb
  412500:	sti    
  412501:	out    0x9b,al
  412503:	cmp    DWORD PTR ds:0x4adc201b,edx
  412509:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41250a:	add    BYTE PTR [edi],cl
  41250c:	pop    esi
  41250d:	mov    eax,ds:0x1a81c800
  412512:	lock loopne 0x4124b4
  412515:	adc    ebp,DWORD PTR [edx-0x34a1895d]
  41251b:	hlt    
  41251c:	jb     0x41259b
  41251e:	fwait
  41251f:	xchg   cl,ah
  412521:	and    al,0xe5
  412523:	cmp    edx,DWORD PTR [ecx]
  412525:	pop    ds
  412526:	push   0xfffffffd
  412528:	lods   eax,DWORD PTR ds:[esi]
  412529:	ficomp DWORD PTR [edi]
  41252b:	dec    edx
  41252c:	jl     0x4125ab
  41252e:	jle    0x4124d7
  412530:	push   esi
  412531:	ror    BYTE PTR [edi],0xde
  412534:	pusha  
  412535:	xor    eax,0xe8620422
  41253a:	jo     0x4124bf
  41253c:	sbb    ch,BYTE PTR [edx]
  41253e:	jae    0x41257e
  412540:	jmp    0x8d00:0x3d007d40
  412547:	sbb    DWORD PTR [ecx+0x3f],esi
  41254a:	xchg   BYTE PTR [ecx+0xc1355b4],dh
  412550:	add    al,0x19
  412552:	xor    eax,0x58b59a1e
  412557:	mov    BYTE PTR [ecx],al
  412559:	cmp    eax,0x83607ca
  41255e:	sti    
  41255f:	sbb    eax,0xf65862ee
  412564:	repnz adc ebx,DWORD PTR [ebx-0x8]
  412568:	xor    ebx,DWORD PTR [edx]
  41256a:	lock pop ds
  41256c:	sub    ecx,DWORD PTR ds:0x578329b1
  412572:	sub    bl,ah
  412574:	mov    dl,0x4d
  412576:	or     al,0xfe
  412578:	or     eax,0x96ee87eb
  41257d:	jmp    0x31887cba
  412582:	mov    dh,0xdc
  412584:	fadd   DWORD PTR [esi+0x581714b9]
  41258a:	ret    0xd12a
  41258d:	push   0x59
  41258f:	xor    BYTE PTR [eax],bh
  412591:	sub    al,0x62
  412593:	and    bh,BYTE PTR [eax+eiz*8]
  412596:	adc    cl,BYTE PTR [esi-0x1c]
  412599:	jle    0x4125bf
  41259b:	mov    dh,0x9f
  41259d:	xor    BYTE PTR [edx+0x5bbcaf3],0xa1
  4125a4:	add    al,0x41
  4125a6:	xchg   esi,eax
  4125a7:	push   edi
  4125a8:	fwait
  4125a9:	pop    edx
  4125aa:	js     0x41260e
  4125ac:	pop    ss
  4125ad:	jl     0x4125be
  4125af:	push   edx
  4125b0:	rcr    BYTE PTR [ebp+0xbc9cf35],0xe5
  4125b7:	jp     0x41262d
  4125b9:	xchg   esp,eax
  4125ba:	cmp    eax,0x2d4d9fdc
  4125bf:	xor    BYTE PTR [eax-0x69],ch
  4125c2:	loop   0x412603
  4125c4:	dec    ecx
  4125c5:	test   DWORD PTR [esp+edx*1],0x34696f19
  4125cc:	cmp    eax,0x13c54a92
  4125d1:	and    esi,ebx
  4125d3:	pop    es
  4125d4:	out    0x44,eax
  4125d6:	jnp    0x412574
  4125d8:	scas   eax,DWORD PTR es:[edi]
  4125d9:	jle    0x4125fd
  4125db:	push   ebp
  4125dc:	outs   dx,DWORD PTR ds:[esi]
  4125dd:	jmp    0xecf2:0xe72bd22a
  4125e4:	and    DWORD PTR [eax+0x2f],0xe32fd7d
  4125eb:	inc    eax
  4125ec:	fist   WORD PTR [esi+0x3e]
  4125ef:	fadd   st,st(7)
  4125f1:	repz imul ecx,ecx,0x202e38c2
  4125f8:	repz push edi
  4125fa:	aam    0x20
  4125fc:	pop    ss
  4125fd:	and    esp,0x448d07bc
  412603:	inc    eax
  412604:	shl    DWORD PTR [ebx-0x6a],1
  412607:	into   
  412608:	add    eax,0xce11a233
  41260d:	mov    al,0x6e
  41260f:	mov    BYTE PTR [ebx+0x7edfc995],ah
  412615:	fcmove st,st(6)
  412617:	dec    esi
  412618:	sbb    DWORD PTR [ebp+0x52a71bac],edi
  41261e:	out    0x88,al
  412620:	mov    edx,0xfae47d9
  412625:	push   eax
  412626:	dec    ecx
  412627:	fild   DWORD PTR [ebx-0x63]
  41262a:	or     dh,bl
  41262c:	and    BYTE PTR [eax-0x6c4575f0],ch
  412632:	data16 ja 0x412677
  412635:	xor    esp,DWORD PTR [eax-0x572aefbf]
  41263b:	das    
  41263c:	ret    0x4636
  41263f:	xchg   ecx,eax
  412640:	test   ch,bl
  412642:	adc    al,0x59
  412644:	mov    ch,0x9e
  412646:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412647:	or     al,0x42
  412649:	retf   0x41de
  41264c:	cld    
  41264d:	(bad)  
  41264e:	jmp    0xaaa3:0x5c932e7c
  412655:	pop    esi
  412656:	jle    0x412696
  412658:	ret    0x25d5
  41265b:	cmp    DWORD PTR [ebp+0x33],0xbbdcc011
  412662:	jne    0x4126d2
  412664:	xchg   edi,eax
  412665:	pop    edx
  412666:	xor    BYTE PTR [edi-0xb9bd080],dh
  41266c:	add    BYTE PTR [ebx],cl
  41266e:	loopne 0x4126c9
  412670:	pop    edx
  412671:	outs   dx,BYTE PTR ds:[esi]
  412672:	in     eax,0xf0
  412674:	adc    dl,BYTE PTR ds:0x24116e8b
  41267a:	outs   dx,DWORD PTR ds:[esi]
  41267b:	out    0x97,eax
  41267d:	daa    
  41267e:	in     al,dx
  41267f:	pop    ebp
  412680:	xchg   ebx,eax
  412681:	hlt    
  412682:	dec    ecx
  412683:	(bad)  
  412684:	data16 jmp 0x4126eb
  412687:	cs test al,0x50
  41268a:	(bad)  
  41268b:	fistp  WORD PTR [edx+0x17a19fbe]
  412691:	add    eax,0x824cc7a5
  412696:	aam    0xbf
  412698:	jno    0x412681
  41269a:	xor    al,0xae
  41269c:	and    ecx,DWORD PTR [ecx+eax*2+0x302e02e4]
  4126a3:	inc    esi
  4126a4:	jns    0x412652
  4126a6:	mov    esp,0x9fba2359
  4126ab:	cmp    DWORD PTR [eax+0x76],edx
  4126ae:	adc    dl,BYTE PTR [edi]
  4126b0:	or     eax,0xc512a2be
  4126b5:	mov    ?,WORD PTR ds:0x34466598
  4126bb:	cld    
  4126bc:	in     eax,0x5a
  4126be:	ret    0xf21
  4126c1:	xchg   BYTE PTR [ebx+0x79],al
  4126c4:	jb     0x4126b4
  4126c6:	jl     0x4126ed
  4126c8:	rcl    DWORD PTR [edx-0x3d161654],0x85
  4126cf:	cmp    ah,BYTE PTR [edx-0x15]
  4126d2:	aas    
  4126d3:	cmp    ecx,DWORD PTR [ebx-0xc]
  4126d6:	adc    dl,BYTE PTR [eax-0x7b]
  4126d9:	add    ah,BYTE PTR [edi+0x7cb07cb8]
  4126df:	mov    ds:0x22fffc7a,al
  4126e4:	scas   eax,DWORD PTR es:[edi]
  4126e5:	or     BYTE PTR [edx],ah
  4126e7:	or     al,cl
  4126e9:	in     eax,0x20
  4126eb:	pop    ebp
  4126ec:	mov    ecx,0xa6a9c798
  4126f1:	jb     0x41276c
  4126f3:	daa    
  4126f4:	inc    ecx
  4126f5:	fisub  DWORD PTR ds:[edi+esi*4-0x53]
  4126fa:	jnp    0x41269c
  4126fc:	lods   eax,DWORD PTR ds:[esi]
  4126fd:	mov    cl,0x84
  4126ff:	cmp    al,bl
  412701:	adc    ebx,esp
  412703:	les    esi,FWORD PTR [ebx]
  412705:	movlps xmm0,QWORD PTR [ebp+0x3e1fa88b]
  41270c:	push   ebx
  41270d:	mov    esp,0x709f834b
  412712:	jecxz  0x4126b4
  412714:	aad    0xf8
  412716:	xor    DWORD PTR [eax+0x1c],esi
  412719:	inc    eax
  41271a:	and    ah,BYTE PTR ds:0x6d9d60f4
  412720:	jge    0x412757
  412722:	mov    ah,0x21
  412724:	jmp    0x4126ea
  412726:	(bad)  
  412727:	cmp    al,0x96
  412729:	lock dec ebx
  41272b:	or     DWORD PTR [ecx-0x33eb696c],ebp
  412731:	fisttp QWORD PTR [ebx+0x7]
  412734:	imul   esp,ecx,0x6462e65f
  41273a:	pop    ds
  41273b:	xchg   ecx,eax
  41273c:	les    edi,FWORD PTR [ebx+ecx*4]
  41273f:	je     0x41270c
  412741:	out    dx,al
  412742:	push   ecx
  412743:	cmp    DWORD PTR [eax+0x652f4059],edx
  412749:	inc    esi
  41274a:	and    BYTE PTR [esi+0x66fe4265],ah
  412750:	sub    BYTE PTR [ecx],dl
  412752:	inc    esi
  412753:	(bad)  
  412755:	mov    BYTE PTR [edx-0x376c8065],bl
  41275b:	cld    
  41275c:	repz stc 
  41275e:	mov    DWORD PTR [esi+0xf],ebp
  412761:	jnp    0x4127cb
  412763:	mov    ebx,0xe472338c
  412768:	jmp    0x41274d
  41276a:	sub    esi,DWORD PTR [eax]
  41276c:	call   0xef13b7cf
  412771:	fcomp  QWORD PTR ds:[edx+0x4377c518]
  412779:	mov    edi,0x33eb4f11
  41277e:	mov    ds:0xb48ba1eb,eax
  412783:	ins    BYTE PTR es:[edi],dx
  412784:	jecxz  0x4127fa
  412786:	neg    DWORD PTR [edx]
  412788:	pop    ss
  412789:	add    eax,0x45c3a02d
  41278e:	pop    edi
  41278f:	push   ss
  412790:	mov    ebx,0x3eb704f5
  412795:	adc    DWORD PTR [ebp+0x54823e7f],esi
  41279b:	pop    edx
  41279c:	mov    bl,0xff
  41279e:	scas   al,BYTE PTR es:[edi]
  41279f:	cmp    al,0xa7
  4127a1:	or     al,0x42
  4127a3:	(bad)  
  4127a4:	loope  0x41279a
  4127a6:	mov    bh,0x1a
  4127a8:	mov    dh,0x67
  4127aa:	push   ecx
  4127ab:	dec    edx
  4127ac:	shl    cl,1
  4127ae:	lods   eax,DWORD PTR ds:[esi]
  4127af:	push   ebp
  4127b0:	dec    ebp
  4127b1:	enter  0x6e36,0xb9
  4127b5:	push   ss
  4127b6:	stc    
  4127b7:	jae    0x41274b
  4127b9:	sub    eax,0xdb244cbe
  4127be:	fcmovnbe st,st(6)
  4127c0:	lods   eax,DWORD PTR ds:[esi]
  4127c1:	outs   dx,BYTE PTR ds:[esi]
  4127c2:	enter  0x27aa,0xc1
  4127c6:	dec    esi
  4127c7:	mov    WORD PTR [ebx+eax*4+0x69],es
  4127cb:	sbb    al,0x62
  4127cd:	jo     0x4127f1
  4127cf:	and    DWORD PTR [edi-0x8],edi
  4127d2:	shr    edi,cl
  4127d4:	mov    al,0xd7
  4127d6:	ins    DWORD PTR es:[edi],dx
  4127d7:	pop    esi
  4127d8:	adc    dh,BYTE PTR gs:[esi+0x2796f80b]
  4127df:	push   eax
  4127e0:	cmp    ebp,ecx
  4127e2:	jmp    0x41280f
  4127e4:	in     al,dx
  4127e5:	jmp    0xe28c:0x2704de8e
  4127ec:	xor    DWORD PTR [edi+edx*2],ecx
  4127ef:	neg    BYTE PTR [edi+0x1]
  4127f2:	cmp    edi,0xffffffb2
  4127f5:	mov    WORD PTR [ebx-0x9],gs
  4127f8:	xchg   ebx,eax
  4127f9:	out    0xe3,al
  4127fb:	in     al,0xc9
  4127fd:	cwde   
  4127fe:	loop   0x4127c0
  412800:	adc    edx,ebp
  412802:	pop    ebx
  412803:	dec    esp
  412804:	adc    DWORD PTR [edx+0xc],esi
  412807:	sahf   
  412808:	aas    
  412809:	dec    edx
  41280a:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41280c:	jo     0x412836
  41280e:	shl    BYTE PTR [eax],1
  412810:	pop    edx
  412811:	loopne 0x4127ed
  412813:	lods   eax,DWORD PTR ds:[esi]
  412814:	push   ds
  412815:	jg     0x41281c
  412817:	and    edi,ebx
  412819:	(bad)  
  41281a:	sbb    ecx,DWORD PTR [ebx-0x18]
  41281d:	int    0xc9
  41281f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412820:	imul   ebx,DWORD PTR [edx],0xd31446a0
  412826:	mov    eax,ds:0xe3617e0b
  41282b:	adc    al,0x62
  41282d:	mov    ecx,0x9d0bbddb
  412832:	sub    dl,BYTE PTR [eax+0x6f461071]
  412838:	call   0xd4b887fa
  41283d:	xchg   edi,eax
  41283e:	push   cs
  41283f:	mov    eax,ds:0x5dedf6ca
  412844:	aaa    
  412845:	scas   al,BYTE PTR es:[edi]
  412846:	and    BYTE PTR ds:0xcaa7b11d,cl
  41284c:	ins    BYTE PTR es:[edi],dx
  41284d:	jmp    0x4c9626ba
  412852:	daa    
  412853:	sbb    edi,edx
  412855:	hlt    
  412856:	jl     0x4128ab
  412858:	out    dx,al
  412859:	nop
  41285a:	sti    
  41285b:	jmp    0x1ca60199
  412860:	pop    ebx
  412861:	mov    al,ds:0x3a57dceb
  412866:	dec    edx
  412867:	fdiv   st(5),st
  412869:	push   ebp
  41286a:	mov    al,BYTE PTR [eax-0x19]
  41286d:	mov    edx,0x3aea16b8
  412872:	(bad)  [edi-0x137c3bc7]
  412878:	mov    cs,WORD PTR [eax+0x1f]
  41287b:	stc    
  41287c:	mov    eax,ds:0x805ea3ff
  412881:	add    eax,0x73c92889
  412886:	sbb    al,0x4c
  412888:	fwait
  412889:	add    DWORD PTR [edx-0x20],ebp
  41288c:	mov    ds:0x341e414a,al
  412891:	cmp    al,0x34
  412893:	jne    0x4128b2
  412895:	xchg   edi,eax
  412896:	retf   0xa668
  412899:	arpl   WORD PTR [ebp+0xc],bx
  41289c:	inc    edi
  41289d:	cmp    al,0xe
  41289f:	gs mov dl,0x86
  4128a2:	addr16 push ds
  4128a4:	mov    ds:0x423d6216,al
  4128a9:	dec    edx
  4128aa:	mov    ds:0xb6dbeca4,al
  4128af:	cmp    BYTE PTR ds:0x4e6235a4,0xab
  4128b6:	mov    dh,0x5c
  4128b8:	and    al,0xb4
  4128ba:	xchg   ebx,eax
  4128bb:	mov    BYTE PTR [ebx-0x283ac030],dl
  4128c1:	and    eax,0x9c20e481
  4128c6:	mov    ecx,0x9e3069ae
  4128cb:	out    0xe4,al
  4128cd:	in     al,dx
  4128ce:	bound  esi,QWORD PTR [edi+esi*2]
  4128d1:	sbb    dl,ah
  4128d3:	cwde   
  4128d4:	ins    BYTE PTR es:[edi],dx
  4128d5:	xchg   ebx,eax
  4128d6:	xor    eax,0xcccbfc88
  4128db:	ret    0xc837
  4128de:	cmp    DWORD PTR [eax+0x29],esi
  4128e1:	mov    cl,0xe5
  4128e3:	(bad)
  4128e7:	fcomp  DWORD PTR [ecx-0x1ced689d]
  4128ed:	inc    ecx
  4128ee:	imul   esp,DWORD PTR [ecx-0x42],0x57
  4128f2:	lds    esp,FWORD PTR [esi]
  4128f4:	sub    BYTE PTR [edi],dl
  4128f6:	push   ebx
  4128f7:	fisub  DWORD PTR [eax-0x4]
  4128fa:	sub    BYTE PTR ds:0x18cc96a7,bh
  412900:	hlt    
  412901:	fdivr  st,st(1)
  412903:	dec    eax
  412904:	xlat   BYTE PTR ds:[ebx]
  412905:	into   
  412906:	out    dx,al
  412907:	mov    al,0x6e
  412909:	or     eax,esp
  41290b:	lock sub edx,DWORD PTR [ebx]
  41290e:	xchg   esi,edx
  412910:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412911:	mov    ds:0x74d37c1d,eax
  412916:	pop    eax
  412917:	inc    eax
  412918:	or     edx,DWORD PTR [esi]
  41291a:	mov    ecx,0xa7a88c19
  41291f:	mov    dl,0x59
  412921:	ret    
  412922:	xor    BYTE PTR [ebx-0x35d0acfc],al
  412928:	mov    ds,edi
  41292a:	adc    bl,bh
  41292c:	or     al,BYTE PTR [ebx-0x6cd8e216]
  412932:	inc    ecx
  412933:	pop    edx
  412934:	mov    ds:0x5ca5f8bf,al
  412939:	push   cs
  41293a:	adc    ch,BYTE PTR [ebp+0x22e1a967]
  412940:	or     eax,0xaf08f04d
  412945:	fwait
  412946:	cmp    cl,dl
  412948:	sbb    eax,DWORD PTR [ecx+0x2f]
  41294b:	repz (bad) 
  41294d:	xchg   esi,eax
  41294e:	sbb    eax,0x38a5007
  412953:	sub    eax,0x31bc332b
  412958:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412959:	pop    eax
  41295a:	outs   dx,BYTE PTR ds:[esi]
  41295b:	inc    esi
  41295c:	and    dl,ah
  41295e:	pop    esi
  41295f:	ds mov ebp,0x632438b2
  412965:	or     dh,ah
  412967:	jmp    0x4129c6
  412969:	jg     0x412988
  41296b:	and    al,0xad
  41296d:	jae    0x412956
  41296f:	ins    DWORD PTR es:[edi],dx
  412970:	push   edi
  412971:	sbb    BYTE PTR [ecx-0x40],0x38
  412975:	sbb    eax,0x430d82d9
  41297a:	loopne 0x412941
  41297c:	lods   eax,DWORD PTR ds:[esi]
  41297d:	call   0xc233fc5c
  412982:	shr    BYTE PTR ds:0x367ab3c9,1
  412988:	jns    0x4129ad
  41298a:	mov    bh,0xae
  41298c:	test   DWORD PTR [esi-0x2198d777],esp
  412992:	sub    DWORD PTR [ecx+0x29],0x3cb409cc
  412999:	mov    ebp,0x3bc91741
  41299e:	in     al,0x77
  4129a0:	and    ch,dh
  4129a2:	inc    esp
  4129a3:	sbb    bh,al
  4129a5:	sahf   
  4129a6:	test   BYTE PTR [eax+edi*2-0x1d414bb0],dh
  4129ad:	jb     0x41297f
  4129af:	scas   al,BYTE PTR es:[edi]
  4129b0:	mov    ds:0x9cff43c5,al
  4129b5:	and    eax,0x8facf94a
  4129ba:	add    ebp,DWORD PTR [edi+eax*2+0x66a85da3]
  4129c1:	inc    edi
  4129c2:	inc    ebx
  4129c3:	and    eax,0xf9e34c09
  4129c8:	add    cl,BYTE PTR [ebp+0x236e4086]
  4129ce:	xor    bl,cl
  4129d0:	iret   
  4129d1:	loope  0x412a47
  4129d3:	fldcw  WORD PTR [esp+ecx*1-0xc]
  4129d7:	sbb    bl,BYTE PTR [edx+0x423309e9]
  4129dd:	test   dh,bh
  4129df:	stos   DWORD PTR es:[edi],eax
  4129e0:	jb     0x4129af
  4129e2:	push   ebx
  4129e3:	xor    BYTE PTR [edi],ch
  4129e5:	outs   dx,DWORD PTR ds:[esi]
  4129e6:	sub    DWORD PTR [eax-0x438b98e4],esi
  4129ec:	aad    0xd6
  4129ee:	test   DWORD PTR ds:0x4972cd6e,ebx
  4129f4:	bnd jl 0x412a0c
  4129f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129f8:	push   ecx
  4129f9:	xlat   BYTE PTR ds:[ebx]
  4129fa:	cmp    al,0x5e
  4129fc:	sub    DWORD PTR [ebp+0x604dd9],0x6e5cb7d6
  412a06:	xchg   DWORD PTR [edi+0x4989daaa],edx
  412a0c:	cmp    ebx,DWORD PTR [edi+edx*2+0x5f956ca9]
  412a13:	cmp    BYTE PTR [edx+0x66899472],bh
  412a19:	int3   
  412a1a:	mov    ds:0x2aabd0b0,eax
  412a1f:	jae    0x412a20
  412a21:	mov    dh,0x7a
  412a23:	mov    ebx,DWORD PTR [esi+0x3a63ccd9]
  412a29:	rcl    bh,1
  412a2b:	push   edx
  412a2c:	pop    es
  412a2d:	or     al,0xcd
  412a2f:	pop    esp
  412a30:	call   0xe5a:0x47e1e648
  412a37:	adc    ebp,DWORD PTR [eax]
  412a39:	ins    DWORD PTR es:[edi],dx
  412a3a:	inc    ebp
  412a3b:	sub    al,0x96
  412a3d:	ret    
  412a3e:	xlat   BYTE PTR ds:[ebx]
  412a3f:	pop    ecx
  412a40:	xchg   DWORD PTR [ecx+0x33],esi
  412a43:	adc    BYTE PTR [ebx],bl
  412a45:	mov    dl,BYTE PTR [edi+0x32ab6ebd]
  412a4b:	push   esi
  412a4c:	call   0xd00c6c24
  412a51:	scas   al,BYTE PTR es:[edi]
  412a52:	mov    ds:0x197905c4,eax
  412a57:	dec    ecx
  412a58:	push   ds
  412a59:	inc    edi
  412a5a:	dec    esi
  412a5b:	adc    ebp,DWORD PTR [edi]
  412a5d:	sbb    DWORD PTR [edx-0x15b83e8c],0x4cd49387
  412a67:	push   DWORD PTR [ecx-0x1b]
  412a6a:	rol    DWORD PTR ds:0x7a31c1db,1
  412a70:	fdivr  DWORD PTR [ebx+ebx*2]
  412a73:	rcr    BYTE PTR [edx-0x2a],0x9c
  412a77:	push   ds
  412a78:	adc    DWORD PTR [edi+eax*1-0x3a],eax
  412a7c:	ficomp WORD PTR [esi+0x5f]
  412a7f:	call   0xafa1:0x4335a9dd
  412a86:	std    
  412a87:	dec    eax
  412a88:	sbb    ebx,eax
  412a8a:	pusha  
  412a8b:	sub    DWORD PTR [ebx+0x2b],eax
  412a8e:	push   0xb4be2498
  412a93:	sub    cl,al
  412a95:	cwde   
  412a96:	je     0x412ab7
  412a98:	sub    BYTE PTR [eax-0x766e8c86],cl
  412a9e:	les    esi,FWORD PTR [ebx]
  412aa0:	mov    edx,ebx
  412aa2:	adc    dh,BYTE PTR [ecx+eiz*2+0x6]
  412aa6:	push   ebp
  412aa7:	or     al,0xcc
  412aa9:	xlat   BYTE PTR ds:[ebx]
  412aaa:	mov    eax,0xfa95443f
  412aaf:	cmp    bl,BYTE PTR [ebp+ebx*4+0x7]
  412ab3:	mov    bh,0x87
  412ab5:	adc    eax,DWORD PTR [edi]
  412ab7:	jnp    0x8e6ca8e8
  412abd:	inc    ebx
  412abe:	rcl    DWORD PTR [eax],1
  412ac0:	xor    eax,0x6cd3fc18
  412ac5:	repnz adc dh,dh
  412ac8:	jmp    0x412aa4
  412aca:	pop    edx
  412acb:	fwait
  412acc:	adc    esp,DWORD PTR [eax+0x1a96375c]
  412ad2:	push   ecx
  412ad3:	fs mov cl,0xe9
  412ad6:	(bad)  
  412ad7:	xlat   BYTE PTR ds:[ebx]
  412ad8:	inc    edi
  412ad9:	fcos   
  412adb:	sbb    eax,DWORD PTR [esi-0x68610a8d]
  412ae1:	push   es
  412ae2:	dec    edi
  412ae3:	mov    ebp,0x663239a2
  412ae8:	(bad)  
  412ae9:	mov    al,0x33
  412aeb:	push   0x313994d6
  412af0:	jg     0x412b5d
  412af2:	mov    ebp,0xb74512d1
  412af7:	mov    edx,0xc51f71ac
  412afc:	ffreep st(5)
  412afe:	test   DWORD PTR [esi-0x61ef1149],esp
  412b04:	and    DWORD PTR [edi],0xffffff85
  412b07:	xlat   BYTE PTR ds:[ebx]
  412b08:	or     al,0x5d
  412b0a:	fbld   TBYTE PTR [edx-0x2a03135d]
  412b10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b11:	jp     0x412b35
  412b13:	pop    eax
  412b14:	outs   dx,DWORD PTR ds:[esi]
  412b15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b16:	and    eax,0x1b108018
  412b1b:	ret    
  412b1c:	pop    es
  412b1d:	push   ebx
  412b1e:	cmp    al,0x21
  412b20:	mov    ss,esi
  412b22:	push   ebp
  412b23:	mov    bl,dl
  412b25:	or     al,0x64
  412b27:	jmp    0x1e0a3736
  412b2c:	mov    ebx,0x4d756f4d
  412b31:	and    bl,al
  412b33:	pop    esp
  412b34:	mov    dl,BYTE PTR [eax+0x5ea8381f]
  412b3a:	out    0x61,eax
  412b3c:	out    0xae,eax
  412b3e:	and    eax,0x3e1187fd
  412b43:	sub    dl,ah
  412b45:	lds    eax,FWORD PTR [ebx-0x7]
  412b48:	mov    WORD PTR [edi],ds
  412b4a:	jecxz  0x412b9e
  412b4c:	sahf   
  412b4d:	repnz shl BYTE PTR [edx+0x40],0x84
  412b52:	pusha  
  412b53:	inc    eax
  412b54:	xchg   cl,dh
  412b56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b57:	aaa    
  412b58:	in     eax,0x38
  412b5a:	jge    0x412b91
  412b5c:	xor    al,0x82
  412b5e:	pop    ds
  412b5f:	mov    esp,0x3fae487b
  412b64:	mov    ah,0x5a
  412b66:	out    0x66,al
  412b68:	mov    edx,0xdea21d30
  412b6d:	mov    bh,0x5
  412b6f:	cs xchg ebp,eax
  412b71:	mov    dh,0x7f
  412b73:	pop    esp
  412b74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b75:	sbb    al,0xbd
  412b77:	cmp    eax,0x7c58507f
  412b7c:	mov    dl,0x4c
  412b7e:	and    esi,DWORD PTR [esi-0x59]
  412b81:	inc    ebx
  412b82:	in     al,0xc7
  412b84:	inc    ebx
  412b85:	leave  
  412b86:	push   ecx
  412b87:	inc    edi
  412b88:	cmp    esi,DWORD PTR [ebx+0x7e942a81]
  412b8e:	(bad)  [ebp+eiz*4-0x96355f0]
  412b95:	or     eax,0x9e0dd2d0
  412b9a:	fs loopne 0x412c10
  412b9d:	jecxz  0x412b91
  412b9f:	mov    ah,0x39
  412ba1:	scas   eax,DWORD PTR es:[edi]
  412ba2:	out    0xc2,eax
  412ba4:	les    ecx,FWORD PTR [ebp+0x11]
  412ba7:	cmc    
  412ba8:	fwait
  412ba9:	dec    ebx
  412baa:	jae    0x412c13
  412bac:	fisub  WORD PTR [eax+ebp*2]
  412baf:	data16 sub ch,BYTE PTR [eax-0x3e1457bc]
  412bb6:	jno    0x412c34
  412bb8:	sub    edx,0xfffffff7
  412bbb:	dec    ecx
  412bbc:	xor    BYTE PTR [eax-0x48],bl
  412bbf:	cdq    
  412bc0:	outs   dx,BYTE PTR ds:[esi]
  412bc1:	pop    ss
  412bc2:	test   eax,0xcdf53f20
  412bc7:	adc    esp,DWORD PTR [esi+0x63604ffb]
  412bcd:	jmp    0x28988f03
  412bd2:	push   ebx
  412bd3:	and    bl,al
  412bd5:	add    edi,0x28d4d2a1
  412bdb:	sub    DWORD PTR [ecx+0x7a],edi
  412bde:	fnstsw WORD PTR [ebx-0x68]
  412be1:	push   eax
  412be2:	jg     0x412be4
  412be4:	push   0x2f737d6
  412be9:	push   0x20
  412beb:	repz push ebp
  412bed:	div    ecx
  412bef:	mov    eax,0x78429901
  412bf4:	nop
  412bf5:	ja     0x412c43
  412bf7:	xor    BYTE PTR [edx+0x38],dl
  412bfa:	std    
  412bfb:	mov    eax,0x4c327a49
  412c00:	lock ja 0x412c04
  412c03:	sub    al,al
  412c05:	fucomi st,st(0)
  412c07:	pop    ds
  412c08:	fmul   DWORD PTR [eax+0x55]
  412c0b:	ds enter 0xb9b,0xe1
  412c10:	pop    es
  412c11:	call   0xdf84:0x4a8b9fd3
  412c18:	clc    
  412c19:	or     dl,dl
  412c1b:	jmp    0x412c75
  412c1d:	call   0xc94cd631
  412c22:	cld    
  412c23:	xor    dl,dh
  412c25:	adc    esp,eax
  412c27:	ss dec ebp
  412c29:	inc    esi
  412c2a:	jmp    0x412c5f
  412c2c:	fdivrp st(1),st
  412c2e:	and    ebp,DWORD PTR [edi+0x261b1292]
  412c34:	popf   
  412c35:	das    
  412c36:	pusha  
  412c37:	cld    
  412c38:	mov    ds:0xb7c6a01f,al
  412c3d:	mov    BYTE PTR [edx-0xddda598],ch
  412c43:	aaa    
  412c44:	sub    al,0xa5
  412c46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c47:	dec    bl
  412c49:	aas    
  412c4a:	push   eax
  412c4b:	dec    esp
  412c4c:	jl     0x412c78
  412c4e:	prefetch (bad)
  412c4f:	or     eax,0x4f4b9ada
  412c54:	mov    edx,0x1bc53492
  412c59:	fsub   DWORD PTR [ecx-0x78]
  412c5c:	imul   esi,esi,0xffffffd4
  412c5f:	leave  
  412c60:	dec    ebx
  412c61:	mov    ecx,0x9308c0e8
  412c66:	add    eax,0xd13e20cb
  412c6b:	int3   
  412c6c:	lds    ebx,FWORD PTR [ecx-0xb]
  412c6f:	push   0xffffffd7
  412c71:	add    bh,ch
  412c73:	push   esp
  412c74:	mov    eax,ds:0x764aab90
  412c79:	ficom  WORD PTR [eax-0x71]
  412c7c:	mov    bh,0xa
  412c7e:	ins    DWORD PTR es:[edi],dx
  412c7f:	dec    edi
  412c80:	outs   dx,BYTE PTR ds:[esi]
  412c81:	jne    0x412c2d
  412c83:	adc    al,ch
  412c85:	jge    0x412c7b
  412c87:	mov    edi,0x8b875d0b
  412c8c:	sar    BYTE PTR ds:0xe55de7bc,0x36
  412c93:	push   ecx
  412c94:	in     al,0xc5
  412c96:	push   ebx
  412c97:	sub    DWORD PTR [edx-0x7f1072f3],esp
  412c9d:	push   edi
  412c9e:	jbe    0x412c52
  412ca0:	adc    eax,0xbaed766b
  412ca5:	xchg   ecx,eax
  412ca6:	cli    
  412ca7:	mov    ebx,0x8f93dbfd
  412cac:	lea    esi,[edi+0x14]
  412caf:	adc    DWORD PTR [edx-0x10d7888b],edi
  412cb5:	xchg   esp,eax
  412cb6:	scas   al,BYTE PTR es:[edi]
  412cb7:	(bad)  
  412cb8:	shr    BYTE PTR [esi+edx*8],1
  412cbb:	push   esi
  412cbc:	sub    al,0x47
  412cbe:	dec    ebp
  412cbf:	test   al,0xcd
  412cc1:	clc    
  412cc2:	cld    
  412cc3:	and    bh,ch
  412cc5:	sbb    ecx,DWORD PTR [ecx]
  412cc7:	cmp    eax,eax
  412cc9:	test   BYTE PTR [eax+0x455cc77e],ah
  412ccf:	sub    al,0x27
  412cd1:	pop    ebp
  412cd2:	xchg   esi,eax
  412cd3:	or     ch,cl
  412cd5:	jns    0x412ceb
  412cd7:	not    ebp
  412cd9:	pop    ebx
  412cda:	inc    DWORD PTR es:[ebp+eax*2+0x4eb906ec]
  412ce2:	test   eax,0xcdf5d977
  412ce7:	inc    ecx
  412ce8:	and    DWORD PTR [edx+0x4c4b6c44],0x362722a4
  412cf2:	arpl   si,sp
  412cf4:	mov    dh,0xa6
  412cf6:	mov    esi,gs
  412cf8:	jl     0x412cd8
  412cfa:	jl     0x412cd2
  412cfc:	scas   eax,DWORD PTR es:[edi]
  412cfd:	aad    0xb9
  412cff:	xchg   BYTE PTR [edx+eax*8+0x62],dh
  412d03:	xchg   DWORD PTR [edx-0x5983ae0e],esi
  412d09:	jb     0x412cd2
  412d0b:	sub    al,0x85
  412d0d:	sbb    al,0xf4
  412d0f:	bound  edx,QWORD PTR [ebp+0x7c56dce1]
  412d15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d16:	sub    DWORD PTR [esi],edx
  412d18:	or     BYTE PTR [edx-0x23],al
  412d1b:	jno    0x412d3c
  412d1d:	adc    eax,0xecf9a2b0
  412d22:	cli    
  412d23:	mov    ebx,0xfb17d08f
  412d28:	out    dx,eax
  412d29:	mov    esi,0x27e86a80
  412d2e:	stos   DWORD PTR es:[edi],eax
  412d2f:	rcr    DWORD PTR [ebx],cl
  412d31:	cdq    
  412d32:	mov    eax,0xe95786e4
  412d37:	iret   
  412d38:	inc    esp
  412d39:	out    0x53,al
  412d3b:	ins    BYTE PTR es:[edi],dx
  412d3c:	xor    dh,al
  412d3e:	dec    ebp
  412d3f:	aaa    
  412d40:	mov    edi,0xb90fbe4f
  412d45:	mov    dl,0x42
  412d47:	out    dx,eax
  412d48:	ficom  WORD PTR [ecx+0x57]
  412d4b:	aaa    
  412d4c:	mov    BYTE PTR [edi-0x13],dl
  412d4f:	scas   eax,DWORD PTR es:[edi]
  412d50:	std    
  412d51:	sbb    DWORD PTR [eax+0x671a63e7],edx
  412d57:	dec    ebp
  412d58:	in     al,0xb4
  412d5a:	in     eax,dx
  412d5b:	stc    
  412d5c:	xlat   BYTE PTR ds:[ebx]
  412d5d:	(bad)  
  412d5e:	clc    
  412d5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d60:	out    dx,eax
  412d61:	mov    ch,0xc8
  412d63:	retf   0xa8b
  412d66:	sub    eax,0x694ccffa
  412d6b:	pusha  
  412d6c:	fdivp  st(4),st
  412d6e:	dec    edx
  412d6f:	sub    BYTE PTR [ecx-0x1667e73c],bl
  412d75:	jne    0x412cf9
  412d77:	xor    eax,0xe06216
  412d7c:	push   0x3e
  412d7e:	xchg   esi,eax
  412d7f:	test   DWORD PTR [ebp-0x31],ebp
  412d82:	mov    dh,0x95
  412d84:	jl     0x412d08
  412d86:	mov    al,ds:0xfa519b8d
  412d8b:	stc    
  412d8c:	fcmovb st,st(2)
  412d8e:	ret    0xa169
  412d91:	sub    al,0x5c
  412d93:	(bad)  
  412d94:	clc    
  412d95:	xchg   ebp,eax
  412d96:	fstp   QWORD PTR [ecx+0x18]
  412d99:	mov    bl,0xa8
  412d9b:	xchg   esp,eax
  412d9c:	cld    
  412d9d:	aaa    
  412d9e:	inc    ebp
  412d9f:	xchg   esp,eax
  412da0:	mov    dl,0xcc
  412da2:	sti    
  412da3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412da4:	outs   dx,BYTE PTR ds:[esi]
  412da5:	rcr    DWORD PTR [ebp-0x1b38198a],cl
  412dab:	int3   
  412dac:	jl     0x412e15
  412dae:	sbb    eax,0x12c3dcfc
  412db3:	and    dh,ch
  412db5:	pop    ebx
  412db6:	inc    ebp
  412db7:	jecxz  0x412e26
  412db9:	push   0x444418c7
  412dbe:	dec    edi
  412dbf:	mov    eax,ds:0x4dd8b448
  412dc4:	out    0xce,eax
  412dc6:	js     0x412d9d
  412dc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412dc9:	test   BYTE PTR [eax-0x665d8fb4],dl
  412dcf:	fisub  DWORD PTR [esi+0x73caf8cb]
  412dd5:	nop
  412dd6:	lahf   
  412dd7:	mov    cl,BYTE PTR [ebx]
  412dd9:	pop    ss
  412dda:	(bad)  
  412ddb:	test   eax,0xef528f74
  412de0:	clc    
  412de1:	ins    BYTE PTR es:[edi],dx
  412de2:	cli    
  412de3:	pop    eax
  412de4:	jbe    0x412d85
  412de6:	(bad)  
  412de7:	int3   
  412de8:	fidiv  DWORD PTR [edi-0x38c4a2aa]
  412dee:	dec    ecx
  412def:	sub    al,0xce
  412df1:	repnz iret 
  412df3:	in     al,0x5e
  412df5:	mov    ebp,DWORD PTR ds:0x781eb3be
  412dfb:	cmc    
  412dfc:	xor    al,0x87
  412dff:	jmp    0x412dcc
  412e01:	mov    bl,0xc6
  412e03:	add    al,0xa7
  412e05:	ja     0x412dab
  412e07:	xchg   ecx,eax
  412e08:	and    DWORD PTR [edx],esi
  412e0a:	xchg   edi,eax
  412e0b:	and    eax,0xd180eba2
  412e10:	jmp    0xee8c:0x7d1b4fba
  412e17:	shl    BYTE PTR [ebp+0x4a],0x44
  412e1b:	mov    al,ah
  412e1d:	push   ecx
  412e1e:	cmp    DWORD PTR ds:0x855f0a5e,ebx
  412e24:	popa   
  412e25:	sub    ch,ah
  412e27:	inc    eax
  412e28:	xor    al,0xba
  412e2a:	cmc    
  412e2b:	inc    edx
  412e2c:	xchg   edi,eax
  412e2d:	in     al,dx
  412e2e:	outs   dx,DWORD PTR ds:[esi]
  412e2f:	adc    esp,edi
  412e31:	pop    ss
  412e32:	in     eax,dx
  412e33:	out    0xa5,eax
  412e35:	push   ss
  412e36:	test   al,dl
  412e38:	sbb    bh,BYTE PTR [ebx+0x8bf6282]
  412e3e:	sahf   
  412e3f:	pop    ss
  412e40:	and    DWORD PTR [edi+0x2b],ebx
  412e43:	aad    0xf5
  412e45:	push   cs
  412e46:	cmp    BYTE PTR [eax-0x50],bl
  412e49:	add    bh,ch
  412e4b:	enter  0xb5b,0x2a
  412e4f:	adc    ch,cl
  412e51:	xchg   ebp,eax
  412e52:	syscall 
  412e54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e55:	aad    0xdd
  412e57:	pop    eax
  412e58:	xor    eax,0x7b
  412e5b:	mov    ecx,0x58b2bd8
  412e60:	mov    dl,0x20
  412e62:	jge    0x412e12
  412e64:	xchg   edi,eax
  412e65:	xchg   esp,eax
  412e66:	(bad)  
  412e68:	aaa    
  412e69:	(bad)  
  412e6a:	ds mov esi,0x81c3f0f5
  412e70:	inc    eax
  412e71:	dec    ecx
  412e72:	add    ah,al
  412e74:	in     eax,0xbb
  412e76:	daa    
  412e77:	ret    
  412e78:	dec    ebp
  412e79:	sbb    bh,BYTE PTR [ebx]
  412e7b:	or     al,0xfa
  412e7d:	mov    bh,0x45
  412e7f:	mov    ebx,0x42ec0747
  412e84:	push   ss
  412e85:	adc    cl,bh
  412e87:	dec    esi
  412e88:	repnz cmp BYTE PTR fs:[ecx+0x4eeb69a6],dh
  412e90:	xor    edi,0x819fe32c
  412e96:	fs lock dec esp
  412e99:	cmp    al,0x77
  412e9b:	xor    eax,0x9dd3d5bb
  412ea0:	cmp    BYTE PTR [ecx],cl
  412ea2:	push   cs
  412ea3:	mov    eax,ds:0xaddfc4ac
  412ea8:	sbb    al,0xfc
  412eaa:	pop    esp
  412eab:	and    cl,BYTE PTR [ebx+0x47]
  412eae:	push   edi
  412eaf:	(bad)  
  412eb0:	adc    al,0x36
  412eb2:	push   eax
  412eb3:	ret    0x9e13
  412eb6:	or     al,0x3d
  412eb8:	pushf  
  412eb9:	rcl    BYTE PTR ss:[ecx-0x11],1
  412ebd:	pop    esi
  412ebe:	jb     0x412ec4
  412ec0:	add    edx,DWORD PTR [edx+0x34]
  412ec3:	sub    BYTE PTR [eax+0x61],dl
  412ec6:	cmp    BYTE PTR [edi],0x5d
  412ec9:	fstp   DWORD PTR [edi-0x54]
  412ecc:	scas   al,BYTE PTR es:[edi]
  412ecd:	cmp    eax,0xf522a1b9
  412ed2:	sub    DWORD PTR [edx-0x537a573b],ecx
  412ed8:	jo     0x412e8c
  412eda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412edb:	sti    
  412edc:	es fucom st(1)
  412edf:	jmp    0x137195e1
  412ee4:	lods   eax,DWORD PTR ds:[esi]
  412ee5:	xor    DWORD PTR [edi-0x1877e75c],0xffffffa1
  412eec:	jae    0x412f29
  412eee:	and    DWORD PTR [ecx+ecx*2],esi
  412ef1:	jno    0x412e87
  412ef3:	xor    BYTE PTR [esp+ecx*2-0x20],dl
  412ef7:	sbb    bh,BYTE PTR [esi]
  412ef9:	mov    ds:0xd353f2d3,al
  412efe:	jg     0x412ec8
  412f00:	cmp    dl,al
  412f02:	mov    al,0xad
  412f04:	ds hlt 
  412f06:	into   
  412f07:	mov    dh,0x50
  412f09:	hlt    
  412f0a:	jp     0x412f4f
  412f0c:	rcl    ebp,cl
  412f0e:	lahf   
  412f0f:	not    DWORD PTR [edx]
  412f11:	xchg   ebp,eax
  412f12:	ins    BYTE PTR es:[edi],dx
  412f13:	pop    ds
  412f14:	repz mov ch,0x89
  412f17:	or     DWORD PTR [ebx+0x6d],0xffffff8c
  412f1b:	outs   dx,DWORD PTR ds:[esi]
  412f1c:	test   BYTE PTR [edi+ebp*2+0x560b57e7],dl
  412f23:	cs loop 0x412f59
  412f26:	sub    eax,0xb9aba423
  412f2b:	jge    0x412f18
  412f2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f2e:	loop   0x412f2b
  412f30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f31:	jmp    0x412f22
  412f33:	cmp    BYTE PTR [ebx+edx*1+0x22429298],cl
  412f3a:	inc    esp
  412f3b:	pusha  
  412f3c:	stos   BYTE PTR es:[edi],al
  412f3d:	pop    edi
  412f3e:	dec    esp
  412f3f:	and    dl,BYTE PTR [ebp+0x2e6ef63b]
  412f45:	(bad)  
  412f46:	mov    bl,0x41
  412f48:	inc    esp
  412f49:	inc    ebx
  412f4a:	rol    DWORD PTR [eax],cl
  412f4c:	cmp    BYTE PTR [edx],0x1
  412f4f:	stos   DWORD PTR es:[edi],eax
  412f50:	clc    
  412f51:	test   al,0x1f
  412f53:	pop    ds
  412f54:	repz std 
  412f56:	cmp    edi,DWORD PTR [ebx+esi*2-0xc]
  412f5a:	sbb    eax,0x802450e3
  412f5f:	jne    0x412f74
  412f61:	out    0xa0,al
  412f63:	push   0xfffffff8
  412f65:	fisub  WORD PTR ss:[edi+0x1d]
  412f69:	fstp   DWORD PTR [edi]
  412f6b:	xor    BYTE PTR [edi],0x44
  412f6e:	sti    
  412f6f:	test   al,0x5a
  412f71:	xor    esi,DWORD PTR [edx-0x6f]
  412f74:	clc    
  412f75:	add    eax,0x871d2e81
  412f7a:	mov    al,ds:0x15ecb888
  412f7f:	jbe    0x412f7d
  412f81:	into   
  412f82:	int3   
  412f83:	cmp    cl,bh
  412f85:	mov    bh,0xf0
  412f87:	add    eax,DWORD PTR [edi-0x231f825a]
  412f8d:	inc    ecx
  412f8e:	mov    ch,0x74
  412f90:	inc    esp
  412f91:	sub    ecx,DWORD PTR [esi]
  412f93:	adc    edi,esp
  412f95:	in     al,dx
  412f96:	push   edx
  412f97:	jg     0x412f99
  412f99:	jg     0x412f4b
  412f9b:	sub    DWORD PTR [eax+0x76],edi
  412f9e:	pop    ecx
  412f9f:	dec    ebx
  412fa0:	adc    DWORD PTR [edi+0x366e740b],eax
  412fa6:	je     0x412ff0
  412fa8:	pop    eax
  412fa9:	and    edx,DWORD PTR [ebx-0x71]
  412fac:	fcmovbe st,st(2)
  412fae:	(bad)  
  412faf:	sahf   
  412fb0:	inc    BYTE PTR [esi]
  412fb2:	repnz mov al,ds:0xfe63d89a
  412fb8:	adc    eax,0xbc4096a
  412fbd:	xchg   DWORD PTR [eax-0x4c],edi
  412fc0:	daa    
  412fc1:	mov    ah,0xcc
  412fc3:	or     al,0x10
  412fc5:	push   ebx
  412fc6:	ret    0xf851
  412fc9:	jbe    0x412f56
  412fcb:	sar    al,1
  412fcd:	mov    ebp,0x912fa86f
  412fd2:	ret    
  412fd3:	and    eax,0xfc337ad4
  412fd8:	in     eax,dx
  412fd9:	imul   eax,DWORD PTR [ebp-0x69054f2a],0x19
  412fe0:	push   es
  412fe1:	int    0x2d
  412fe3:	pop    edi
  412fe4:	adc    BYTE PTR [esi+ecx*1],bh
  412fe7:	sub    eax,0x8600484a
  412fec:	iret   
  412fed:	or     eax,0x926e6853
  412ff2:	xor    eax,edi
  412ff4:	mov    ebx,0x6557ffa8
  412ff9:	je     0x412fda
  412ffb:	add    eax,0x877b271d
  413000:	arpl   WORD PTR cs:[ecx+0x3a],di
  413004:	out    0x69,al
  413006:	imul   ebx,DWORD PTR [esi+esi*2-0x5f78a1dd],0x8afc2efc
  413011:	lods   al,BYTE PTR ds:[esi]
  413012:	cmp    al,0xd5
  413014:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413015:	xchg   ebx,eax
  413016:	fsub   DWORD PTR [esi-0xa7c103f]
  41301c:	push   ecx
  41301d:	inc    esi
  41301e:	pop    edx
  41301f:	adc    ch,BYTE PTR [edi-0x70]
  413022:	(bad)  
  413023:	cmp    edx,ebx
  413025:	mov    bl,0x7c
  413027:	dec    eax
  413028:	mov    DWORD PTR [eax],ebx
  41302a:	sbb    al,0xab
  41302c:	or     BYTE PTR [esi+0xdb8735d],0xa9
  413033:	adc    ch,BYTE PTR [edi]
  413035:	push   esi
  413036:	push   edi
  413037:	push   ecx
  413038:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413039:	sbb    BYTE PTR [ecx],bl
  41303b:	repnz in eax,dx
  41303d:	sub    BYTE PTR [esi-0x5c],bl
  413040:	loopne 0x413026
  413042:	popa   
  413043:	mov    bh,0x75
  413045:	arpl   bx,ax
  413047:	pop    esi
  413048:	aas    
  413049:	shl    DWORD PTR [ebx+edi*2],cl
  41304c:	popf   
  41304d:	or     dl,BYTE PTR [esi-0x6f]
  413050:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413051:	dec    ecx
  413052:	enter  0xa5a4,0x2a
  413056:	mov    bh,0x24
  413058:	sub    esi,DWORD PTR [edx]
  41305a:	cmp    eax,0x4a7fa26
  41305f:	repz push edx
  413061:	sub    cl,dh
  413063:	stos   DWORD PTR es:[edi],eax
  413064:	or     DWORD PTR [eax-0x2851706f],edx
  41306a:	xlat   BYTE PTR ds:[ebx]
  41306b:	or     eax,0xeea09eea
  413070:	jns    0x4130e0
  413072:	out    0x72,eax
  413074:	cwde   
  413075:	ret    0x5ade
  413078:	popa   
  413079:	sar    BYTE PTR [esi+0x1e],0xba
  41307d:	js     0x41305e
  41307f:	push   ebp
  413080:	jmp    0x384544a6
  413085:	mov    al,ds:0xb82856ed
  41308a:	xlat   BYTE PTR ds:[ebx]
  41308b:	add    DWORD PTR [esi+0x4f319853],edi
  413091:	out    dx,eax
  413092:	push   esi
  413093:	xchg   ebp,eax
  413094:	loopne 0x4130ad
  413096:	xchg   esi,eax
  413097:	fst    QWORD PTR [ecx+0x19f78f40]
  41309d:	std    
  41309e:	mov    cl,BYTE PTR [edi-0x21]
  4130a1:	fbld   TBYTE PTR [esi-0x1019a83a]
  4130a7:	dec    esp
  4130a8:	mov    dl,0xf9
  4130aa:	lahf   
  4130ab:	or     al,0x4d
  4130ad:	sub    ch,ch
  4130af:	add    dh,ah
  4130b1:	jo     0x41304a
  4130b3:	push   ss
  4130b4:	jmp    0x4130c8
  4130b6:	jg     0x4130b4
  4130b8:	xor    DWORD PTR [ecx+edx*1-0x5d0a35db],ebp
  4130bf:	push   edi
  4130c0:	lods   al,BYTE PTR ds:[esi]
  4130c1:	fimul  DWORD PTR [edi]
  4130c3:	push   0xab87b05f
  4130c8:	jl     0x413072
  4130ca:	gs ja  0x413089
  4130cd:	cmp    eax,edx
  4130cf:	sub    BYTE PTR [ebx+ecx*8-0x32a10c0e],ch
  4130d6:	(bad)  
  4130d8:	and    al,0x36
  4130da:	inc    edi
  4130db:	or     al,0xc
  4130dd:	cs (bad) 
  4130df:	int3   
  4130e0:	std    
  4130e1:	sub    eax,0xa2bfc299
  4130e6:	inc    ebx
  4130e7:	cs jmp 0xa6b486b6
  4130ed:	mov    cl,0xa8
  4130ef:	hlt    
  4130f0:	mov    eax,0x2fd37342
  4130f5:	add    eax,0x596a79ad
  4130fa:	mov    eax,esp
  4130fc:	pop    edx
  4130fd:	and    dl,al
  4130ff:	lods   al,BYTE PTR ds:[esi]
  413100:	inc    ebp
  413101:	(bad)  
  413102:	push   esp
  413103:	push   esi
  413104:	push   edi
  413105:	push   ecx
  413106:	out    dx,al
  413107:	pushf  
  413108:	push   es
  413109:	sbb    bl,0x1d
  41310c:	test   BYTE PTR [eax-0x37766dc3],ch
  413112:	daa    
  413113:	jns    0x413188
  413115:	jo     0x4130d3
  413117:	dec    ecx
  413118:	fidivr DWORD PTR [edx+0x5a4ffd54]
  41311e:	pop    ecx
  41311f:	xchg   DWORD PTR [edx],ebp
  413121:	sbb    DWORD PTR [ecx],edx
  413123:	sbb    ah,BYTE PTR [ecx-0x5d]
  413126:	mov    cl,0xdf
  413128:	sbb    eax,0xb83745a2
  41312d:	sub    bl,cl
  41312f:	or     eax,0x46fabe33
  413134:	mov    gs,WORD PTR [esi]
  413136:	pop    esi
  413137:	and    al,BYTE PTR [ebp-0x3b7367d5]
  41313d:	mov    al,0x6b
  41313f:	ror    BYTE PTR [esi-0x7a96b0a6],cl
  413145:	or     ebp,esp
  413147:	sti    
  413148:	jb     0x413183
  41314a:	jmp    0x413125
  41314c:	mov    ebx,DWORD PTR [ebp+0x4a]
  41314f:	test   edx,ecx
  413151:	cmp    ebp,ebx
  413153:	mov    ebx,0xdcf6e55d
  413158:	sbb    ah,BYTE PTR [edx]
  41315a:	aam    0xd2
  41315c:	icebp  
  41315d:	stos   BYTE PTR es:[edi],al
  41315e:	clc    
  41315f:	cmp    al,0xde
  413161:	pusha  
  413162:	add    eax,0x70173e37
  413167:	fild   DWORD PTR [edx]
  413169:	(bad)  
  41316a:	cld    
  41316b:	jp     0x413116
  41316d:	jb     0x4131d6
  41316f:	out    0xab,al
  413171:	inc    bl
  413173:	loope  0x4130fb
  413175:	loope  0x4131e8
  413177:	push   0x563d3176
  41317c:	pushf  
  41317d:	cdq    
  41317e:	inc    esi
  41317f:	dec    esi
  413180:	mov    al,ds:0x27014e4a
  413185:	scas   al,BYTE PTR es:[edi]
  413186:	mov    ebx,0x52cb4e11
  41318b:	jg     0x41312e
  41318d:	lods   eax,DWORD PTR ds:[esi]
  41318e:	sub    esp,DWORD PTR [edi]
  413190:	mov    eax,ds:0x430a0bfd
  413195:	xchg   DWORD PTR [edx+eax*1],esi
  413198:	cmp    ecx,DWORD PTR [esi-0x3]
  41319b:	mov    DWORD PTR [esi+eax*1],ecx
  41319e:	adc    esp,0xffffffc6
  4131a1:	(bad)  
  4131a2:	popa   
  4131a3:	add    DWORD PTR [esi-0x63],ebx
  4131a6:	mov    ch,BYTE PTR [ebp-0x5975ae1]
  4131ac:	data16 sbb dh,BYTE PTR [esi]
  4131af:	fnstcw WORD PTR cs:[edx+0x51]
  4131b3:	sub    al,BYTE PTR [ecx+0x62]
  4131b6:	and    ch,BYTE PTR [ebx]
  4131b8:	xchg   ebp,eax
  4131b9:	rcl    DWORD PTR fs:[ebx+0x26],0x60
  4131be:	pop    edi
  4131bf:	add    eax,0xa759d6ce
  4131c4:	sub    al,0x4d
  4131c6:	sbb    eax,0xea0b3b61
  4131cb:	popf   
  4131cc:	das    
  4131cd:	jbe    0x413197
  4131cf:	xor    BYTE PTR [ebx],dl
  4131d1:	dec    eax
  4131d2:	shl    DWORD PTR [eax],0xf9
  4131d5:	js     0x41317b
  4131d7:	xchg   edx,eax
  4131d8:	mov    eax,0x7b7b27d2
  4131dd:	dec    ecx
  4131de:	pop    ebp
  4131df:	sub    edx,ebx
  4131e1:	sbb    esp,DWORD PTR [edx+0x482b534e]
  4131e7:	push   ecx
  4131e8:	lds    ebp,FWORD PTR [edi+0x35]
  4131eb:	lods   eax,DWORD PTR ds:[esi]
  4131ec:	icebp  
  4131ed:	inc    eax
  4131ee:	cmp    eax,0xc23c63e0
  4131f3:	mov    fs,WORD PTR [esi+eiz*4+0x57]
  4131f7:	add    esp,edx
  4131f9:	pop    ebp
  4131fa:	add    eax,0xbdf5eee1
  4131ff:	inc    esp
  413200:	inc    ecx
  413201:	or     al,0xd2
  413203:	dec    ecx
  413204:	sbb    eax,0x9977ad25
  413209:	inc    ecx
  41320a:	jmp    0x1378:0x7b85590f
  413211:	jmp    0x413246
  413213:	ds cmp eax,0xd24de7b8
  413219:	shl    DWORD PTR [ebx+0x12d2f77e],1
  41321f:	xor    esi,0x44
  413222:	push   edx
  413223:	mov    ds:0xaa129ff8,al
  413228:	loope  0x4131e8
  41322a:	fiadd  DWORD PTR [esi]
  41322c:	aam    0xf1
  41322e:	pop    esp
  41322f:	mov    BYTE PTR [edi],bh
  413231:	push   esp
  413232:	add    al,0x61
  413234:	ret    0xfba
  413237:	je     0x4132ab
  413239:	lahf   
  41323a:	mov    ?,WORD PTR [esi-0x2e]
  41323d:	or     ebp,ebp
  41323f:	pop    esp
  413240:	adc    BYTE PTR ds:0x32476894,bh
  413246:	stos   DWORD PTR es:[edi],eax
  413247:	push   esp
  413248:	repnz cli 
  41324a:	or     dh,bh
  41324c:	xchg   BYTE PTR [esi+0x1bc9122e],dl
  413252:	stos   DWORD PTR es:[edi],eax
  413253:	js     0x413236
  413255:	scas   al,BYTE PTR es:[edi]
  413256:	add    DWORD PTR [eax-0x26bf8789],eax
  41325c:	iret   
  41325d:	pop    eax
  41325e:	dec    esp
  41325f:	mov    dh,0x29
  413261:	sbb    al,0xc5
  413263:	adc    dl,ch
  413265:	cdq    
  413266:	sbb    BYTE PTR ds:0xeae02e25,ch
  41326c:	jl     0x413279
  41326e:	in     al,dx
  41326f:	jno    0x4132d2
  413271:	mov    bl,0xda
  413273:	fisubr WORD PTR [ebp+0x47]
  413276:	xchg   edx,eax
  413277:	mov    dh,bh
  413279:	xchg   ecx,eax
  41327a:	pusha  
  41327b:	es sbb eax,0xd1d08552
  413281:	iret   
  413282:	pushf  
  413283:	jno    0x413298
  413285:	mov    cl,0x49
  413287:	sub    BYTE PTR [ebp+0x47],0xe3
  41328b:	xchg   edi,eax
  41328c:	push   0x24c54429
  413291:	lods   al,BYTE PTR ds:[esi]
  413292:	lods   al,BYTE PTR ds:[esi]
  413293:	xchg   esp,eax
  413294:	test   eax,0x4e3efabb
  413299:	add    dl,dh
  41329b:	adc    al,0x27
  41329d:	inc    eax
  41329e:	mov    al,0x9
  4132a0:	outs   dx,DWORD PTR ds:[esi]
  4132a1:	and    bp,WORD PTR [eax]
  4132a4:	mov    ?,WORD PTR [ebx]
  4132a6:	aas    
  4132a7:	shr    BYTE PTR [eax],0xed
  4132aa:	outs   dx,DWORD PTR ds:[esi]
  4132ab:	clc    
  4132ac:	pop    eax
  4132ad:	mov    edx,0xf9b6e19
  4132b2:	scas   eax,DWORD PTR es:[edi]
  4132b3:	push   ds
  4132b4:	add    esp,ebp
  4132b6:	mov    esi,0x3265fb9c
  4132bb:	sbb    DWORD PTR [ebx],eax
  4132bd:	sbb    al,0x6d
  4132bf:	mov    cl,0x71
  4132c1:	ss push ebp
  4132c3:	push   eax
  4132c4:	adc    ch,BYTE PTR [edi]
  4132c6:	bound  edi,QWORD PTR [ebx+0x494999e1]
  4132cc:	jb     0x4132cc
  4132ce:	scas   eax,DWORD PTR es:[edi]
  4132cf:	mov    bh,0xa6
  4132d1:	mov    ebx,0x650f5835
  4132d6:	pop    esp
  4132d7:	neg    DWORD PTR [ebp+0x6a]
  4132da:	nop
  4132db:	sub    eax,0x93fc97c0
  4132e0:	mov    eax,ds:0x44f62f56
  4132e5:	mov    ch,BYTE PTR [edi]
  4132e7:	mov    esp,0xb39e4dce
  4132ec:	cmp    DWORD PTR [edx],edx
  4132ee:	or     DWORD PTR [eax-0x7e],edx
  4132f1:	inc    edx
  4132f2:	test   al,0xb4
  4132f4:	push   ss
  4132f5:	mov    al,0x5b
  4132f7:	sub    DWORD PTR [esi+0x12],esp
  4132fa:	push   es
  4132fb:	xor    ah,BYTE PTR ds:0xfff4d5ac
  413301:	jl     0x4132a7
  413303:	ins    BYTE PTR es:[edi],dx
  413304:	mov    eax,ds:0xabb8c3e5
  413309:	inc    ecx
  41330a:	pop    es
  41330b:	cmp    ebx,DWORD PTR [ebp-0x1d]
  41330e:	add    al,0x4c
  413310:	push   ebp
  413311:	(bad)  
  413313:	pop    ebx
  413314:	scas   al,BYTE PTR es:[edi]
  413315:	pop    edx
  413316:	jbe    0x4132c0
  413318:	xchg   esi,eax
  413319:	nop
  41331a:	dec    eax
  41331b:	pop    ds
  41331c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41331d:	mov    ah,0xb1
  41331f:	arpl   WORD PTR [esi+0x68],cx
  413322:	cmp    ch,dl
  413324:	xor    BYTE PTR [ecx+edx*4-0x2e76ca8a],dl
  41332b:	and    al,0x12
  41332d:	push   ss
  41332e:	jnp    0x4132ec
  413330:	xchg   esp,eax
  413331:	call   0x358f4693
  413336:	mov    bh,BYTE PTR [ebx]
  413338:	pop    esp
  41333a:	add    al,0xcf
  41333c:	or     al,ah
  41333e:	jno    0x413338
  413340:	xor    ecx,ebx
  413342:	clc    
  413343:	ret    0x2fe1
  413346:	jbe    0x413325
  413348:	add    BYTE PTR [eax-0x4cc40b14],ch
  41334e:	xor    esp,0x5b3729e2
  413354:	jl     0x41330b
  413356:	jb     0x41337a
  413358:	jp     0x4132e4
  41335a:	jne    0x4133c4
  41335c:	cmp    al,0xae
  41335e:	xchg   edx,eax
  41335f:	shr    BYTE PTR [edi+0x42d3abb4],0x1d
  413366:	leave  
  413367:	adc    al,0x9f
  413369:	rcl    dh,cl
  41336b:	mov    ah,0x7
  41336d:	icebp  
  41336e:	mov    al,ds:0x94657b2
  413373:	push   edx
  413374:	mov    WORD PTR [ecx-0x5c637d05],fs
  41337a:	nop
  41337b:	mov    dl,BYTE PTR [ecx+0x4a22aa31]
  413381:	push   edx
  413382:	fbstp  TBYTE PTR [esi+0x24]
  413385:	xchg   esi,eax
  413386:	addr16 hlt 
  413388:	pop    eax
  413389:	mov    esi,0xba565695
  41338e:	sbb    BYTE PTR [ebx+0x28],cl
  413391:	int    0xd5
  413393:	imul   edx,DWORD PTR [edi+0x6c],0xcbc20a2a
  41339a:	(bad)  
  41339b:	push   esp
  41339c:	jo     0x4133ff
  41339e:	dec    ecx
  41339f:	into   
  4133a0:	stc    
  4133a1:	inc    ebx
  4133a2:	xor    al,0x9c
  4133a4:	int3   
  4133a5:	scas   al,BYTE PTR es:[edi]
  4133a6:	mov    ebp,0x9c2fce40
  4133ab:	mov    edi,0xebf931ba
  4133b0:	lahf   
  4133b1:	sbb    BYTE PTR [ecx-0x35ca782],ch
  4133b7:	popa   
  4133b8:	call   FWORD PTR [edi+ebp*8-0x30]
  4133bc:	out    dx,al
  4133bd:	push   ebx
  4133be:	jb     0x41336a
  4133c0:	call   0xc824:0xb0ad4ee6
  4133c7:	mov    bh,0x1e
  4133c9:	test   al,0x7d
  4133cb:	lock pusha 
  4133cd:	push   edx
  4133ce:	add    al,0xe9
  4133d0:	sub    eax,0xb430c455
  4133d5:	das    
  4133d6:	ja     0x41340f
  4133d8:	pop    ds
  4133d9:	mov    eax,ds:0x76d26944
  4133de:	lock ret 0xe2be
  4133e2:	sbb    DWORD PTR [esi+0x76fbe83a],0x48e914b2
  4133ec:	clc    
  4133ed:	jo     0x413445
  4133ef:	inc    ecx
  4133f0:	popa   
  4133f1:	push   es
  4133f2:	inc    eax
  4133f3:	loopne 0x413409
  4133f5:	ds sub dh,dl
  4133f8:	fsub   QWORD PTR ds:0x26435e43
  4133fe:	cmp    ebp,edx
  413400:	(bad)  
  413401:	mov    esp,DWORD PTR [ebx]
  413403:	mov    dl,0x21
  413405:	mov    bh,0xe
  413407:	pop    es
  413408:	mov    bh,0x34
  41340a:	lea    edi,[ecx-0x17]
  41340d:	dec    ebx
  41340e:	dec    eax
  41340f:	inc    ecx
  413410:	packssdw mm1,mm4
  413413:	cmp    DWORD PTR [edx],ecx
  413415:	test   DWORD PTR [ebp+0x70],ebp
  413418:	lds    ecx,FWORD PTR [ecx+0x74]
  41341b:	ror    bh,0x24
  41341e:	or     ch,al
  413420:	jbe    0x413402
  413422:	dec    esi
  413423:	dec    edi
  413424:	mov    esi,0xfa267553
  413429:	adc    al,0x2
  41342b:	xlat   BYTE PTR ds:[ebx]
  41342c:	xor    esp,DWORD PTR [ecx-0x2a]
  41342f:	cld    
  413430:	retf   
  413431:	cdq    
  413432:	outs   dx,DWORD PTR ds:[esi]
  413433:	xchg   edi,eax
  413434:	out    dx,al
  413435:	mov    ebx,0xf36ecee5
  41343a:	pusha  
  41343b:	mov    edi,0x775634c9
  413440:	mov    ch,0xca
  413442:	ja     0x413473
  413444:	outs   dx,DWORD PTR ds:[esi]
  413445:	popa   
  413446:	out    0x56,al
  413448:	in     al,0x4e
  41344a:	aaa    
  41344b:	(bad)  
  41344d:	icebp  
  41344e:	aaa    
  41344f:	rol    edi,1
  413451:	jo     0x413413
  413453:	xchg   edi,eax
  413454:	push   ds
  413455:	pop    es
  413456:	stc    
  413457:	mov    dl,0x87
  413459:	add    dh,cl
  41345b:	xchg   ecx,eax
  41345c:	mov    ah,0x59
  41345e:	add    BYTE PTR [ebp+0x205b35a9],al
  413464:	mov    esi,0x1cbf2f00
  413469:	push   eax
  41346a:	ss jg  0x413471
  41346d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41346e:	ss jg  0x413451
  413471:	ret    
  413472:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413473:	mov    ebp,0x8c63fa0f
  413478:	xchg   ebp,eax
  413479:	pop    edi
  41347a:	push   es
  41347b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41347c:	icebp  
  41347d:	mov    bh,0x82
  41347f:	add    ebx,0xfffffff0
  413482:	pop    edi
  413483:	daa    
  413484:	xchg   esi,eax
  413485:	sub    eax,0x817dda19
  41348a:	and    al,BYTE PTR [eax-0x68]
  41348d:	das    
  41348e:	(bad)  
  413490:	inc    esp
  413491:	loop   0x413493
  413493:	inc    eax
  413494:	mov    ecx,0x4c2a6d1a
  413499:	and    al,0x4b
  41349b:	cmp    DWORD PTR [ecx],eax
  41349d:	outs   dx,BYTE PTR ds:[esi]
  41349e:	or     al,0x81
  4134a0:	pushf  
  4134a1:	and    al,0x40
  4134a3:	or     BYTE PTR [ebp+0x10],al
  4134a6:	pop    ecx
  4134a7:	and    al,0x59
  4134a9:	loop   0x413482
  4134ab:	sub    cl,ch
  4134ad:	cwde   
  4134ae:	lock pop edi
  4134b0:	and    edx,ecx
  4134b2:	mov    ecx,0x6d6ceab1
  4134b7:	or     DWORD PTR [esi],ecx
  4134b9:	repnz mov al,0x59
  4134bc:	ret    0x6c39
  4134bf:	pop    esp
  4134c0:	xor    edi,edx
  4134c2:	cmp    al,0xa0
  4134c4:	sub    BYTE PTR ds:0xe61e2e9d,dl
  4134ca:	inc    ebx
  4134cb:	addr16 push eax
  4134cd:	test   eax,0x7e51affa
  4134d2:	jo     0x4134de
  4134d4:	nop
  4134d5:	push   0x39b71e8
  4134da:	jne    0x413487
  4134dc:	mov    bl,0x7d
  4134de:	cmp    eax,0x4fcbedfa
  4134e3:	jne    0x41346c
  4134e5:	push   DWORD PTR [eax]
  4134e7:	mov    al,ds:0x8ae69ae3
  4134ec:	push   edx
  4134ed:	add    al,cl
  4134ef:	and    DWORD PTR [esi],ebx
  4134f1:	pop    es
  4134f2:	add    eax,0xf3394bfd
  4134f7:	xchg   DWORD PTR [edx-0x5a016cdb],eax
  4134fd:	pop    ds
  4134fe:	nop
  4134ff:	jno    0x41350c
  413501:	fldcw  WORD PTR [ebp+0x524d5d49]
  413507:	(bad)  
  413508:	jmp    0x41356d
  41350a:	and    edi,edx
  41350c:	adc    eax,0xf6cbfe73
  413511:	jp     0x413509
  413513:	push   edi
  413514:	and    al,dh
  413516:	adc    al,0xa4
  413518:	test   al,0x32
  41351a:	or     al,ah
  41351c:	mov    ds:0x66a2b8e2,eax
  413521:	mov    edi,0xbb05ab52
  413526:	pop    esi
  413527:	mov    dh,0x48
  413529:	bsf    ebx,DWORD PTR [ecx]
  41352c:	xor    al,0x74
  41352e:	add    al,0x80
  413530:	es addr16 push es
  413533:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413534:	dec    eax
  413535:	shr    BYTE PTR [edi-0x3d15e537],0x1f
  41353c:	cmc    
  41353d:	stos   DWORD PTR es:[edi],eax
  41353e:	clc    
  41353f:	(bad)  
  413540:	mov    al,ds:0x4cd5780d
  413545:	sub    DWORD PTR [ebx],edx
  413547:	(bad)  
  413548:	aaa    
  413549:	scas   al,BYTE PTR es:[edi]
  41354a:	xor    al,0xf
  41354d:	jnp    0x4135bc
  41354f:	rcr    DWORD PTR [esp+esi*1+0x10],cl
  413553:	(bad)  
  413554:	scas   eax,DWORD PTR es:[edi]
  413555:	loope  0x413545
  413557:	cmovo  edi,esp
  41355a:	add    al,0xab
  41355c:	add    al,ch
  41355e:	mov    BYTE PTR [ebx-0xa],dl
  413561:	and    dl,BYTE PTR [edi+0x47]
  413564:	sub    esi,DWORD PTR [edi-0x3c95ca49]
  41356a:	cmp    BYTE PTR [edi-0x64546820],cl
  413570:	push   ebx
  413571:	adc    bl,ch
  413573:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413574:	xchg   esp,eax
  413575:	in     al,dx
  413576:	fs inc esi
  413578:	xor    al,0x83
  41357a:	inc    edi
  41357b:	mov    dl,0x51
  41357d:	ret    
  41357e:	sbb    DWORD PTR [edi+0x14],edi
  413581:	(bad)  
  413582:	mov    dl,0x15
  413584:	sbb    al,0xc0
  413586:	push   edx
  413587:	sub    eax,0xab2a0804
  41358c:	dec    esp
  41358d:	jb     0x413553
  41358f:	loop   0x41360c
  413591:	pop    edx
  413592:	cli    
  413593:	dec    ebp
  413594:	ss push 0x7182f2fb
  41359a:	push   es
  41359b:	int3   
  41359c:	into   
  41359d:	jns    0x41355b
  41359f:	imul   edi,eax,0xffffff94
  4135a2:	daa    
  4135a3:	fcomp  DWORD PTR [edi+0x24]
  4135a6:	js     0x413535
  4135a8:	fwait
  4135a9:	or     BYTE PTR [ecx+0x600ee543],0x54
  4135b0:	mov    bl,dh
  4135b2:	xor    bl,bh
  4135b4:	loop   0x41354b
  4135b6:	mov    esi,ds
  4135b8:	or     DWORD PTR [esi],edx
  4135ba:	xchg   ebp,eax
  4135bb:	pop    ecx
  4135bc:	scas   al,BYTE PTR es:[edi]
  4135bd:	jo     0x413552
  4135bf:	cmp    DWORD PTR [ecx-0x64c026f2],edx
  4135c5:	sti    
  4135c6:	push   ds
  4135c7:	push   cs
  4135c8:	pop    edx
  4135c9:	pop    edx
  4135ca:	push   es
  4135cb:	popa   
  4135cc:	fsubr  QWORD PTR [edx-0x242aff18]
  4135d2:	nop
  4135d3:	mov    dh,0x3
  4135d5:	xchg   edx,eax
  4135d6:	daa    
  4135d7:	sub    DWORD PTR [ecx-0x1e778dbb],esp
  4135dd:	mov    al,ds:0xd9188fef
  4135e2:	ja     0x413638
  4135e4:	rol    BYTE PTR [eax+0x65e02005],cl
  4135ea:	mov    ds:0x421f32e1,al
  4135ef:	xchg   esp,eax
  4135f0:	xchg   ecx,eax
  4135f1:	fnstenv [edi+0x4]
  4135f4:	out    dx,eax
  4135f5:	xchg   edi,eax
  4135f6:	out    0x42,al
  4135f8:	out    dx,eax
  4135f9:	push   0xffffffca
  4135fb:	jmp    0x350a297c
  413600:	xor    esp,DWORD PTR [ebx-0x65]
  413603:	lea    ecx,[edx-0x67]
  413606:	dec    edx
  413607:	pop    eax
  413608:	aas    
  413609:	dec    esi
  41360a:	fistp  DWORD PTR [ebx+0x1699ce7]
  413610:	or     eax,0xa92464a2
  413615:	and    bl,BYTE PTR [edx-0xc]
  413618:	dec    esp
  413619:	sbb    al,0x8
  41361b:	mov    edi,0x908c5500
  413620:	pop    ebx
  413621:	pop    ss
  413622:	pusha  
  413623:	fild   WORD PTR [eax+ebx*4-0x2fda53ee]
  41362a:	mov    bl,0x28
  41362c:	in     eax,dx
  41362d:	sub    esi,ecx
  41362f:	std    
  413630:	adc    eax,0xbbb38e7b
  413635:	sbb    al,0x4b
  413637:	adc    esi,esp
  413639:	mov    ebp,0xc0c0e2e9
  41363e:	addr16 jle 0x413675
  413641:	jg     0x413667
  413643:	dec    edi
  413644:	push   0x6f856199
  413649:	js     0x4135ea
  41364b:	sub    DWORD PTR [ecx-0x133798b4],ecx
  413651:	jbe    0x47ba4a60
  413657:	ins    DWORD PTR es:[edi],dx
  413658:	add    BYTE PTR [ecx],ah
  41365a:	in     eax,dx
  41365b:	jmp    0x413675
  41365d:	or     BYTE PTR [ebx-0x35],bl
  413660:	je     0x413657
  413662:	aam    0x9f
  413664:	retf   
  413665:	int    0x33
  413667:	push   esp
  413668:	popa   
  413669:	xor    eax,0x87cd917c
  41366e:	pop    ebp
  41366f:	and    BYTE PTR [esi-0x2f],al
  413672:	cmp    DWORD PTR [edx+esi*2],esi
  413675:	in     eax,0x86
  413677:	fsub   DWORD PTR [ebx-0x8bc736]
  41367d:	loope  0x413689
  41367f:	mov    ebx,eax
  413681:	test   eax,0x2543ff9
  413686:	cli    
  413687:	xor    BYTE PTR [ecx+0x53dea099],bl
  41368d:	ror    BYTE PTR [eax-0x25],1
  413690:	inc    esi
  413691:	fldlg2 
  413693:	adc    DWORD PTR [esi-0x3b],edx
  413696:	test   al,0x8f
  413698:	mov    ch,0xcb
  41369a:	in     eax,dx
  41369b:	outs   dx,BYTE PTR ds:[esi]
  41369c:	push   edi
  41369d:	retf   
  41369e:	in     eax,0x6b
  4136a0:	retf   0x8fe
  4136a3:	sbb    dh,0x2a
  4136a6:	(bad)  
  4136a7:	mov    dh,0xc0
  4136a9:	dec    esi
  4136aa:	test   al,0x99
  4136ac:	adc    DWORD PTR [edx-0x6d3cf806],0x23
  4136b3:	xor    esp,DWORD PTR [edx]
  4136b5:	leave  
  4136b6:	enter  0xb37d,0xd4
  4136ba:	pop    ecx
  4136bb:	xchg   edi,eax
  4136bc:	and    al,0xc7
  4136be:	int3   
  4136bf:	mov    BYTE PTR [ecx-0x38],bl
  4136c2:	imul   edx,ecx,0xc0bd82ec
  4136c8:	sub    eax,0x92c68a1d
  4136cd:	sub    esi,0x7285f958
  4136d3:	fwait
  4136d4:	add    BYTE PTR ds:0x971c0fb6,0xc1
  4136db:	lods   al,BYTE PTR ds:[esi]
  4136dc:	out    0x20,al
  4136de:	xor    ch,ch
  4136e0:	or     esp,DWORD PTR [edi-0x3deaf1a6]
  4136e6:	aam    0x2b
  4136e8:	bound  esi,QWORD PTR [bx]
  4136eb:	sub    eax,0xbb85b5d7
  4136f0:	fcmovnbe st,st(2)
  4136f2:	std    
  4136f3:	adc    dl,BYTE PTR [eax-0x4d]
  4136f6:	inc    esi
  4136f7:	out    0xe7,eax
  4136f9:	fdiv   QWORD PTR [esp+ebx*2+0x5]
  4136fd:	xadd   BYTE PTR [eax-0x7a],ah
  413701:	ret    0xb1f6
  413704:	(bad)  
  413705:	mov    dl,0xdf
  413707:	xor    BYTE PTR [esi+0x3b],dh
  41370a:	jo     0x413782
  41370c:	adc    edx,edi
  41370e:	or     BYTE PTR [edi+0x13784756],al
  413714:	call   0x95eb5c07
  413719:	dec    edx
  41371a:	cmp    al,0x54
  41371c:	ds enter 0xef9,0x8b
  413721:	sbb    ecx,esi
  413723:	test   cl,bh
  413725:	xchg   esp,eax
  413726:	mov    ?,WORD PTR [edx]
  413728:	xor    al,0x27
  41372a:	push   0x7d361baf
  41372f:	ins    DWORD PTR es:[edi],dx
  413730:	cwde   
  413731:	aad    0x5c
  413733:	ror    DWORD PTR gs:[edi],0x7a
  413737:	pusha  
  413738:	cwde   
  413739:	inc    esi
  41373a:	mov    edx,0xacf31688
  41373f:	adc    eax,0x1d4016bf
  413744:	jbe    0x4136df
  413746:	cmp    DWORD PTR [edi-0x24],esp
  413749:	or     esp,esi
  41374b:	xchg   DWORD PTR [edi+0x17d29821],eax
  413751:	push   edi
  413752:	xchg   esp,eax
  413753:	leave  
  413754:	xor    eax,0xb75332ed
  413759:	xor    ch,cl
  41375b:	xor    BYTE PTR [esi-0x74],bl
  41375e:	ret    0xe33d
  413761:	add    al,0x6f
  413763:	lea    esi,[esi]
  413765:	dec    esp
  413766:	mov    edi,0xe42deaac
  41376b:	push   ss
  41376c:	sar    BYTE PTR [edx],cl
  41376e:	mov    bl,0x74
  413770:	inc    eax
  413771:	aam    0x2c
  413773:	dec    eax
  413774:	xor    BYTE PTR [eax+0x6c],0x36
  413778:	jnp    0x41372a
  41377a:	js     0x41373b
  41377c:	jnp    0x4137d7
  41377e:	mov    dh,0xac
  413780:	inc    esp
  413781:	cmp    bl,0x19
  413784:	mov    bl,ah
  413786:	(bad)
  413789:	fimul  DWORD PTR [esp+esi*4+0x65]
  41378d:	xchg   ebx,eax
  41378e:	cmp    dh,BYTE PTR [edi-0x22]
  413791:	popf   
  413792:	lock out dx,al
  413794:	icebp  
  413795:	xchg   DWORD PTR [eax*4-0x194d49c0],esi
  41379c:	popf   
  41379d:	fisttp DWORD PTR [eax]
  41379f:	push   ebp
  4137a0:	popf   
  4137a1:	out    0xde,eax
  4137a3:	pop    ecx
  4137a4:	stos   DWORD PTR es:[edi],eax
  4137a5:	push   eax
  4137a6:	sbb    al,0xb7
  4137a8:	clc    
  4137a9:	or     al,0x4
  4137ab:	add    esp,0xffffff8f
  4137ae:	mov    DWORD PTR [edx-0x4f989e07],ebx
  4137b4:	ss jno 0x413756
  4137b7:	in     eax,dx
  4137b8:	mov    edx,0x56df3d3
  4137bd:	dec    DWORD PTR [ebp-0x773f551f]
  4137c3:	mov    DWORD PTR [ebp+0x33],edi
  4137c6:	cmp    DWORD PTR [esi-0x13],0xbe97698b
  4137cd:	popf   
  4137ce:	sbb    BYTE PTR [edi],bh
  4137d0:	cmp    BYTE PTR [ebx+0x11],dh
  4137d3:	and    al,0x26
  4137d5:	loop   0x4137af
  4137d7:	mov    ecx,0xe4049ee9
  4137dc:	adc    edx,0xffffffa8
  4137df:	es jnp 0x41379c
  4137e2:	sub    eax,DWORD PTR [edx+0x12]
  4137e5:	in     al,dx
  4137e6:	test   al,bh
  4137e8:	sub    dl,BYTE PTR [ebp-0x58a52bd0]
  4137ee:	sahf   
  4137ef:	mov    edi,DWORD PTR [eax]
  4137f1:	js     0x413806
  4137f3:	push   eax
  4137f4:	xor    BYTE PTR [esi],bl
  4137f6:	aas    
  4137f7:	xlat   BYTE PTR ds:[ebx]
  4137f8:	pop    ebx
  4137f9:	fwait
  4137fa:	into   
  4137fb:	pop    esi
  4137fc:	jl     0x41384b
  4137fe:	cli    
  4137ff:	test   al,0xb7
  413801:	ret    0x4a2e
  413804:	pop    ebx
  413805:	int    0x65
  413807:	sub    al,0xb4
  413809:	(bad)  
  41380a:	xor    eax,0xdf61b574
  41380f:	popf   
  413810:	xor    DWORD PTR [eax-0x40],ebp
  413813:	cs or  eax,edx
  413816:	mov    edi,0x32689a2c
  41381b:	cmp    eax,DWORD PTR [edx+0x6add58d5]
  413821:	and    BYTE PTR [edi+0x65],dh
  413824:	xor    DWORD PTR [edi-0x53],esi
  413827:	repnz push esi
  413829:	test   DWORD PTR [eax-0x1d],eax
  41382c:	into   
  41382d:	fs ret 
  41382f:	mov    edi,0xac110494
  413834:	jmp    0xa46d1fc8
  413839:	int    0x66
  41383b:	cs dec esp
  41383d:	aas    
  41383e:	mov    al,ds:0xfec3ba4a
  413843:	repz (bad) 
  413845:	ds cld 
  413847:	xor    esp,DWORD PTR [ebx-0x1895864]
  41384d:	mov    edi,0xab88e8a6
  413852:	cmc    
  413853:	retf   0x401c
  413856:	ja     0x413854
  413858:	mov    ebp,0xa68254a8
  41385d:	pop    esp
  41385e:	int    0xba
  413860:	inc    ebx
  413861:	push   cs
  413862:	xchg   edx,eax
  413863:	jae    0x4137ed
  413865:	loop   0x413873
  413867:	sub    eax,0xdf2d73f0
  41386c:	push   ecx
  41386d:	lods   eax,DWORD PTR ds:[esi]
  41386e:	nop
  41386f:	jnp    0x413874
  413871:	addr16 push edx
  413873:	ss jge 0x413822
  413876:	iret   
  413877:	xor    WORD PTR [edx],0x2fb6
  41387c:	sub    ebx,DWORD PTR [esi-0x3d36f38a]
  413882:	mov    dh,BYTE PTR ds:0x5f4cfb50
  413888:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413889:	mov    esi,0xdf0f2bb5
  41388e:	addr16 int3 
  413890:	into   
  413891:	or     al,0xa1
  413893:	inc    ecx
  413894:	mov    esi,0x129aba9b
  413899:	fcom   DWORD PTR [eax+eax*1-0x421e4744]
  4138a0:	stc    
  4138a1:	(bad)  
  4138a2:	cli    
  4138a3:	stos   BYTE PTR es:[edi],al
  4138a4:	rcr    edi,0x1f
  4138a7:	and    ebp,DWORD PTR [edi-0x48]
  4138aa:	mov    ch,0x2f
  4138ac:	mov    al,0x59
  4138ae:	xor    eax,0x93f8826d
  4138b3:	pusha  
  4138b4:	sbb    al,0xe1
  4138b6:	dec    ebx
  4138b7:	mov    eax,esp
  4138b9:	push   0x1c
  4138bb:	imul   edi,DWORD PTR [ebp+0x18],0xf49a92e9
  4138c2:	dec    ebx
  4138c3:	sub    BYTE PTR [edx-0x42],ch
  4138c6:	mov    dh,0x6e
  4138c8:	mov    esi,esp
  4138ca:	fdivr  st,st(1)
  4138cc:	ins    DWORD PTR es:[edi],dx
  4138cd:	ins    BYTE PTR es:[edi],dx
  4138ce:	popa   
  4138cf:	in     al,0x71
  4138d1:	cli    
  4138d2:	add    bh,BYTE PTR [eax]
  4138d4:	pusha  
  4138d5:	dec    eax
  4138d6:	imul   ecx
  4138d8:	mov    eax,ds:0x314ee7cc
  4138dd:	fs sbb eax,0xdde603f4
  4138e3:	cmc    
  4138e4:	push   ecx
  4138e5:	mov    cl,0x33
  4138e7:	sbb    BYTE PTR ds:0xb94f4e7b,al
  4138ed:	cmp    ecx,DWORD PTR [edx]
  4138ef:	mov    bl,0x55
  4138f1:	fisub  WORD PTR [ebx+0x15cf49b6]
  4138f7:	push   ebp
  4138f8:	adc    edi,ebp
  4138fa:	call   0xd8ba:0x3baca6b3
  413901:	mov    edi,DWORD PTR ds:0xc7f9e75b
  413907:	aas    
  413908:	repnz mov ds,WORD PTR [edx-0x26]
  41390c:	adc    dh,0x92
  41390f:	fistp  WORD PTR [esi+ebx*8]
  413912:	icebp  
  413913:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413914:	mov    al,0x2d
  413916:	mov    ah,0x94
  413918:	cmc    
  413919:	mov    ah,bl
  41391b:	xchg   edx,eax
  41391c:	shl    DWORD PTR [edx],cl
  41391e:	push   eax
  41391f:	ret    0x8fbd
  413922:	scas   eax,DWORD PTR es:[edi]
  413923:	ror    BYTE PTR [ebx],1
  413925:	test   BYTE PTR [edi],dl
  413927:	and    cl,BYTE PTR [ecx-0x5a]
  41392a:	pushf  
  41392b:	stos   DWORD PTR es:[edi],eax
  41392c:	xor    BYTE PTR [edx+0xc26b201],0x80
  413933:	pusha  
  413934:	inc    esi
  413935:	mov    eax,0xfdc13d2d
  41393a:	sbb    eax,0xed6edb94
  41393f:	imul   ecx,ebx,0x4d
  413942:	in     eax,0xac
  413944:	mov    eax,ebp
  413946:	dec    ecx
  413947:	pushf  
  413948:	iret   
  413949:	xchg   ecx,eax
  41394a:	not    ebp
  41394c:	ror    BYTE PTR [eax],1
  41394e:	mov    bh,0xb1
  413950:	xor    BYTE PTR cs:[ebx+0x2b],bh
  413954:	mov    al,ds:0x7d528dfc
  413959:	ret    0xd4c4
  41395c:	mov    al,0x19
  41395e:	popa   
  41395f:	dec    ebx
  413960:	jne    0x413944
  413962:	lock push ss
  413964:	retf   0x5210
  413967:	push   eax
  413968:	ins    DWORD PTR es:[edi],dx
  413969:	xchg   ebx,eax
  41396a:	into   
  41396b:	inc    ebp
  41396c:	jle    0x4139c0
  41396e:	int3   
  41396f:	and    BYTE PTR [edi],cl
  413971:	arpl   WORD PTR [edi],si
  413973:	int3   
  413974:	retf   
  413975:	dec    ebp
  413976:	ins    DWORD PTR es:[edi],dx
  413977:	xchg   edx,eax
  413978:	jecxz  0x4139c3
  41397a:	icebp  
  41397b:	sbb    BYTE PTR [esi],dl
  41397d:	push   esi
  41397e:	sub    DWORD PTR [esp+eax*8+0x2c],eax
  413982:	mov    edx,0xa7da28f9
  413987:	jle    0x4139ff
  413989:	mov    al,ds:0x27e75eae
  41398e:	sub    BYTE PTR [eax-0x1a],cl
  413991:	sbb    esi,esp
  413993:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413994:	ins    BYTE PTR es:[edi],dx
  413995:	or     BYTE PTR [ecx],dh
  413997:	add    al,0x2c
  413999:	mov    edi,0xcbf411d5
  41399e:	cs popa 
  4139a0:	mul    DWORD PTR [esi-0x4d378b65]
  4139a6:	ss inc eax
  4139a8:	int    0x6b
  4139aa:	loop   0x41395c
  4139ac:	cmp    al,0xa4
  4139ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139af:	add    BYTE PTR [ecx],0xf0
  4139b2:	js     0x41394e
  4139b4:	shl    ecx,0x4
  4139b7:	and    DWORD PTR [eax],0x64
  4139ba:	shr    DWORD PTR [eax+0x46],cl
  4139bd:	mov    bl,0x3d
  4139bf:	in     al,0xaf
  4139c1:	lods   al,BYTE PTR ds:[esi]
  4139c2:	cmp    bh,BYTE PTR [edx-0x4e867743]
  4139c8:	sub    bl,BYTE PTR [edi-0x31f6d8b7]
  4139ce:	stos   BYTE PTR es:[edi],al
  4139cf:	push   edx
  4139d0:	jecxz  0x4139cc
  4139d2:	imul   ebx,DWORD PTR [ecx+0xcfd6a45],0x7369ec0b
  4139dc:	test   al,0xf5
  4139de:	inc    esp
  4139df:	add    al,0xd5
  4139e1:	int    0x3
  4139e3:	sahf   
  4139e4:	(bad)  
  4139e5:	rol    dl,1
  4139e7:	mov    dl,0x54
  4139e9:	clc    
  4139ea:	sbb    BYTE PTR [ebp+0x1b],dl
  4139ed:	push   ecx
  4139ee:	es adc eax,0xb47f86f1
  4139f4:	pop    ebp
  4139f5:	jae    0x413a27
  4139f7:	pushf  
  4139f8:	lock pop edx
  4139fa:	inc    edi
  4139fb:	adc    eax,edi
  4139fd:	push   0xc34c8af
  413a02:	std    
  413a03:	dec    ebp
  413a04:	or     eax,0xe3642aa1
  413a09:	neg    DWORD PTR [ecx-0x32]
  413a0c:	pop    ebp
  413a0d:	test   eax,0xfa36a74a
  413a12:	jno    0x413a48
  413a14:	jg     0x413a63
  413a16:	and    al,0xa1
  413a18:	idiv   DWORD PTR [ebx]
  413a1a:	mov    ecx,0xecb01f8b
  413a1f:	mov    ch,0x35
  413a21:	cmp    dl,dl
  413a23:	ret    0x497b
  413a26:	jecxz  0x413a8a
  413a28:	fmul   DWORD PTR [esi-0x1efd35bb]
  413a2e:	mov    edi,cs
  413a30:	hlt    
  413a31:	imul   esp,DWORD PTR [edi+0x5e7d784c],0x26
  413a38:	adc    DWORD PTR [ecx-0x3412c8e1],0x3b
  413a3f:	inc    esp
  413a40:	std    
  413a41:	push   ebx
  413a42:	and    eax,0x46b1b57b
  413a47:	dec    ecx
  413a48:	out    dx,eax
  413a49:	and    al,0x1b
  413a4b:	lock push cx
  413a4e:	and    esi,DWORD PTR [eax+0x26]
  413a51:	rol    DWORD PTR [edx],1
  413a53:	mov    cl,0x22
  413a55:	pop    esp
  413a56:	cmp    al,0xaf
  413a58:	pop    esp
  413a59:	scas   eax,DWORD PTR es:[edi]
  413a5a:	xor    bl,BYTE PTR [ebp-0x573314ee]
  413a60:	jno    0x413ad9
  413a62:	sti    
  413a63:	cs cld 
  413a65:	stos   BYTE PTR es:[edi],al
  413a66:	xchg   edi,eax
  413a67:	ins    BYTE PTR es:[edi],dx
  413a68:	fdivr  DWORD PTR [edi]
  413a6a:	ja     0x413a5e
  413a6c:	push   es
  413a6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a6e:	mov    al,BYTE PTR [esi+0x321d19c5]
  413a74:	sbb    al,0x9a
  413a76:	pop    edx
  413a77:	pop    ds
  413a78:	add    al,0xfc
  413a7a:	nop
  413a7b:	cdq    
  413a7c:	xor    eax,0x97b8c8b8
  413a81:	ja     0x413a0b
  413a83:	test   al,0xf5
  413a85:	pop    edi
  413a86:	sbb    eax,0xd9cc4d0f
  413a8b:	daa    
  413a8c:	leave  
  413a8d:	jbe    0x413a24
  413a8f:	mov    al,0x13
  413a91:	mov    ds:0xe68b0131,eax
  413a96:	mov    esp,0xadb83e3e
  413a9b:	xor    BYTE PTR [edi+0x27],0xe5
  413a9f:	cli    
  413aa0:	retf   0x9210
  413aa3:	adc    DWORD PTR [ecx],0x69c848ca
  413aa9:	jle    0x413ab6
  413aab:	loope  0x413aac
  413aad:	and    BYTE PTR [esi-0x2aa77c8a],bh
  413ab3:	jmp    0x90fe:0x5e8da9d2
  413aba:	mov    edx,0x108d66d0
  413abf:	mov    edx,0x4de14c42
  413ac4:	fistp  DWORD PTR [edx]
  413ac6:	fsubr  QWORD PTR [ebp-0x48]
  413ac9:	nop
  413aca:	popf   
  413acb:	jmp    0x5f24da6b
  413ad0:	inc    ebx
  413ad1:	and    edi,DWORD PTR [eax+0x12b49f40]
  413ad7:	push   ebp
  413ad8:	sbb    DWORD PTR [edi],0xd933a53e
  413ade:	popa   
  413adf:	out    dx,eax
  413ae0:	xchg   edi,eax
  413ae1:	mov    dl,0x5d
  413ae3:	adc    BYTE PTR [ebp-0x6b],ch
  413ae6:	jle    0x413b5e
  413ae8:	mov    ah,0xe2
  413aea:	add    eax,DWORD PTR [esp-0x7a1ebba2]
  413af1:	push   esp
  413af2:	stos   DWORD PTR es:[edi],eax
  413af3:	adc    cl,BYTE PTR [ebp-0x1d3098cd]
  413af9:	or     DWORD PTR [ecx+0xf],esp
  413afc:	(bad)  
  413afd:	iret   
  413afe:	and    dl,BYTE PTR [ebx]
  413b00:	dec    eax
  413b01:	sar    DWORD PTR [ebp-0x5534dc47],cl
  413b07:	fs xchg edi,eax
  413b09:	ds and al,0x31
  413b0c:	call   0x9c94124d
  413b11:	outs   dx,DWORD PTR ds:[esi]
  413b12:	inc    ebp
  413b13:	ficom  WORD PTR [edi+0x28]
  413b16:	outs   dx,BYTE PTR ds:[esi]
  413b17:	pusha  
  413b18:	pop    esi
  413b19:	sub    ebp,DWORD PTR [ebp+eax*1-0x68]
  413b1d:	fdivr  DWORD PTR [esi+0x24886a63]
  413b23:	mov    esi,0x3a57248a
  413b28:	mov    BYTE PTR [esi],bh
  413b2a:	push   es
  413b2b:	jp     0x413abf
  413b2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b2e:	retf   
  413b2f:	pop    edi
  413b30:	mov    dl,0x12
  413b32:	test   BYTE PTR [esi-0x4927cf57],ch
  413b38:	push   ebp
  413b39:	stos   BYTE PTR es:[edi],al
  413b3a:	cmp    al,0x54
  413b3c:	add    al,ch
  413b3e:	aas    
  413b3f:	ins    DWORD PTR es:[edi],dx
  413b40:	mov    dh,0x71
  413b42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b43:	lods   al,BYTE PTR ds:[esi]
  413b44:	jb     0x413b68
  413b46:	pop    ebx
  413b47:	ss xchg ecx,eax
  413b49:	(bad)  [eax-0x7d2f52a]
  413b4f:	mov    bl,BYTE PTR [esi+0x6f6f2ceb]
  413b55:	sub    ebx,DWORD PTR [edx+0x4c39b820]
  413b5b:	aaa    
  413b5c:	push   0x2dc0b597
  413b61:	push   edx
  413b62:	fimul  WORD PTR [ebx+0x43e5ff37]
  413b68:	outs   dx,DWORD PTR ds:[esi]
  413b69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b6a:	pushf  
  413b6b:	xchg   ecx,eax
  413b6c:	mov    ah,0xdf
  413b6e:	or     bl,ch
  413b70:	je     0x413b1d
  413b72:	outs   dx,BYTE PTR ds:[esi]
  413b73:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b75:	in     eax,0x5d
  413b77:	jg     0x413baf
  413b79:	test   eax,0xddf0dd0a
  413b7e:	inc    edi
  413b7f:	sbb    ebx,DWORD PTR [eax]
  413b81:	shr    BYTE PTR [ebx],cl
  413b83:	ins    BYTE PTR es:[edi],dx
  413b84:	cs aaa 
  413b86:	push   esi
  413b87:	mov    dl,0xc9
  413b89:	pop    ss
  413b8a:	stc    
  413b8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b8c:	or     DWORD PTR [ebx+0x3c869a16],esi
  413b92:	mov    ch,0x55
  413b94:	adc    dh,BYTE PTR [edi+0x76]
  413b97:	sbb    bh,BYTE PTR [edx-0x702deb14]
  413b9d:	xor    esi,edx
  413b9f:	mov    ebp,0xb04f7469
  413ba4:	and    al,0xf
  413ba6:	push   cs
  413ba7:	xor    edi,DWORD PTR [eax-0x2c]
  413baa:	jecxz  0x413bfd
  413bac:	pop    edx
  413bad:	leave  
  413bae:	frstor [eax]
  413bb0:	pop    ss
  413bb1:	mov    edi,0xa003c974
  413bb6:	jmp    0x4bc57b0e
  413bbb:	add    eax,0xdf9ddb3f
  413bc0:	or     BYTE PTR [edx],dh
  413bc2:	cwde   
  413bc3:	mov    ch,bl
  413bc5:	add    al,0x93
  413bc7:	xor    al,0x66
  413bc9:	stos   DWORD PTR es:[edi],eax
  413bca:	jl     0x413b65
  413bcc:	into   
  413bcd:	mov    ebx,0x544d1dd7
  413bd2:	leave  
  413bd3:	push   edi
  413bd4:	sbb    al,0x7a
  413bd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413bd7:	fnstcw WORD PTR [eax]
  413bd9:	cli    
  413bda:	mov    bh,0xd
  413bdc:	lahf   
  413bdd:	shl    BYTE PTR [ebp+0x6f],1
  413be0:	sub    eax,0xeaef1981
  413be5:	and    BYTE PTR [esi-0x6c],al
  413be8:	shl    DWORD PTR [esp+ebx*2-0x3a73fb7],cl
  413bef:	mov    ch,0x42
  413bf1:	cmp    dh,BYTE PTR ds:0x8ace63ce
  413bf7:	daa    
  413bf8:	add    eax,ecx
  413bfa:	mov    cl,0x9e
  413bfc:	xor    dh,ch
  413bfe:	and    DWORD PTR [eax],ebp
  413c00:	or     ebp,DWORD PTR [ebx+0x2b]
  413c03:	inc    ebx
  413c04:	out    dx,eax
  413c05:	sbb    bl,dh
  413c07:	lahf   
  413c08:	cmp    bh,ch
  413c0a:	out    dx,eax
  413c0b:	adc    BYTE PTR [ebp+ebx*8-0x2bc9ab97],bh
  413c12:	out    dx,al
  413c13:	ja     0x413c2f
  413c15:	outs   dx,DWORD PTR ds:[esi]
  413c16:	ror    BYTE PTR [edx+edx*4],1
  413c19:	ret    
  413c1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c1b:	push   ds
  413c1c:	push   es
  413c1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c1e:	(bad)  
  413c1f:	rcl    dl,0x8d
  413c22:	adc    edi,DWORD PTR [esi+0x11ba4070]
  413c28:	xchg   ecx,eax
  413c29:	inc    ebx
  413c2a:	pusha  
  413c2b:	jae    0x413c74
  413c2d:	adc    BYTE PTR [edi-0x4b],al
  413c30:	cmp    bh,bh
  413c32:	mov    edi,0x5aec40ff
  413c37:	add    ch,cl
  413c39:	(bad)  
  413c3a:	mov    ds:0x1d088403,al
  413c3f:	loop   0x413bde
  413c41:	ins    BYTE PTR es:[edi],dx
  413c42:	mov    al,ds:0x746eb9ed
  413c47:	(bad)  
  413c48:	mov    ds:0x1497a9d7,eax
  413c4d:	dec    edi
  413c4e:	or     al,0xb1
  413c50:	xor    bl,bl
  413c52:	sbb    eax,0x39737bd
  413c57:	sbb    BYTE PTR [eax],al
  413c59:	push   ebp
  413c5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c5b:	add    bh,BYTE PTR [edx+0x32]
  413c5e:	mov    edi,0xbb98d6c
  413c63:	mov    bl,0xed
  413c65:	(bad)  
  413c66:	adc    bl,BYTE PTR [esi]
  413c68:	call   0x4bbf422f
  413c6d:	sbb    DWORD PTR [eax+0x4b4219e9],ebx
  413c73:	xor    ecx,DWORD PTR [ecx+0x33]
  413c76:	push   ds
  413c77:	in     eax,dx
  413c78:	jge    0x413c3c
  413c7a:	(bad)  
  413c7b:	push   0x79
  413c7d:	jge    0x413ca6
  413c7f:	adc    esi,0x6e67fa58
  413c85:	fisubr DWORD PTR [eax+ebx*1+0x40]
  413c89:	in     eax,dx
  413c8a:	sub    cl,BYTE PTR ds:0xa2af555
  413c90:	out    dx,eax
  413c91:	mov    eax,0xa2bbe4c7
  413c96:	ins    DWORD PTR es:[edi],dx
  413c97:	xlat   BYTE PTR ds:[ebx]
  413c98:	inc    edi
  413c99:	in     eax,0x43
  413c9b:	and    al,0x45
  413c9d:	xchg   edx,eax
  413c9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c9f:	out    dx,al
  413ca0:	push   ebx
  413ca1:	adc    ebp,DWORD PTR [edx+edx*4-0x102c2db7]
  413ca8:	imul   edi,DWORD PTR [ebx],0x6d5b7a34
  413cae:	aaa    
  413caf:	and    al,0xba
  413cb1:	into   
  413cb2:	sbb    eax,0xfe7fddb6
  413cb7:	imul   BYTE PTR [esi+0x8]
  413cba:	cmp    eax,0xf8f9c83
  413cbf:	retf   0x7a5e
  413cc2:	cwde   
  413cc3:	aad    0xcb
  413cc5:	and    bh,ch
  413cc7:	mov    al,0xda
  413cc9:	stos   DWORD PTR es:[edi],eax
  413cca:	or     BYTE PTR [edi+0x5e],al
  413ccd:	js     0x413cba
  413ccf:	jae    0x413d48
  413cd1:	or     cl,BYTE PTR ds:0xf108bb97
  413cd7:	pop    eax
  413cd8:	mov    edi,ebp
  413cda:	sahf   
  413cdb:	adc    BYTE PTR [ecx+0x41],dl
  413cde:	inc    edi
  413cdf:	xor    eax,0xfb916c9
  413ce4:	inc    esp
  413ce5:	sub    eax,DWORD PTR [ebx-0x7a]
  413ce8:	xchg   ch,al
  413cea:	sti    
  413ceb:	fnsave [ecx-0x5e7cc4ae]
  413cf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cf2:	sub    al,0x85
  413cf4:	add    edi,DWORD PTR [edi-0x6b]
  413cf7:	and    BYTE PTR [esi-0x2193a287],dl
  413cfd:	maxps  xmm0,xmm1
  413d00:	aam    0xb5
  413d02:	loopne 0x413cc2
  413d04:	shl    BYTE PTR [eax+0x7],0xa9
  413d08:	pop    eax
  413d09:	cld    
  413d0a:	or     BYTE PTR [esi],cl
  413d0c:	pop    es
  413d0d:	pop    ebp
  413d0e:	xchg   edi,eax
  413d0f:	aad    0x18
  413d11:	outs   dx,DWORD PTR ds:[esi]
  413d12:	mov    al,ds:0xb9083079
  413d17:	pop    eax
  413d18:	(bad)  
  413d19:	mov    ds:0x9c7438bc,eax
  413d1e:	jns    0x413cd2
  413d20:	push   eax
  413d21:	xor    ecx,DWORD PTR [ecx+ecx*8]
  413d24:	xlat   BYTE PTR ds:[ebx]
  413d25:	in     al,0x3a
  413d27:	jge    0x413d3e
  413d29:	call   0x4f1b:0x4b941f9
  413d30:	add    DWORD PTR [eax-0x758e3572],edx
  413d36:	xor    DWORD PTR [ecx+ebx*8+0x14],esi
  413d3a:	ins    DWORD PTR es:[edi],dx
  413d3b:	cld    
  413d3c:	cmc    
  413d3d:	pushf  
  413d3e:	jl     0x413d50
  413d40:	pop    edx
  413d41:	hlt    
  413d42:	add    eax,0x46ec7adf
  413d47:	cmp    DWORD PTR [edx],ebp
  413d49:	shl    edi,cl
  413d4b:	aad    0xbd
  413d4d:	adc    al,0x35
  413d4f:	sbb    cl,BYTE PTR [ebx]
  413d51:	mov    ah,0xee
  413d53:	mov    ds:0xea87a540,eax
  413d58:	sar    BYTE PTR [ecx+0xf88f285],1
  413d5e:	test   DWORD PTR [edi+0x1654b075],edi
  413d64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d65:	add    DWORD PTR ds:0x7a1ed647,esp
  413d6b:	add    BYTE PTR [ebx],al
  413d6d:	add    BYTE PTR [ebx-0x4b],dh
  413d70:	xchg   BYTE PTR [ecx],al
  413d72:	push   esp
  413d73:	outs   dx,BYTE PTR ds:[esi]
  413d74:	lods   ax,WORD PTR ds:[esi]
  413d76:	jbe    0x413d09
  413d78:	cmp    BYTE PTR [ecx+0xc2294de],bh
  413d7e:	(bad)  
  413d7f:	sbb    edx,esp
  413d81:	xchg   edx,eax
  413d82:	cmp    al,0x3b
  413d84:	and    BYTE PTR [ebx],ah
  413d86:	sub    bh,BYTE PTR [ebx]
  413d88:	and    esp,DWORD PTR [ecx-0x58]
  413d8b:	adc    DWORD PTR [ebx+0x7ae2119e],eax
  413d91:	push   edi
  413d92:	call   0x65634bf
  413d97:	pop    ecx
  413d98:	je     0x413d42
  413d9a:	cmp    BYTE PTR [edx-0x43ba9569],0x91
  413da1:	mov    ch,0x79
  413da3:	popf   
  413da4:	push   ecx
  413da5:	jmp    0xa2a3fb0
  413daa:	fnstcw WORD PTR [esi+0x38]
  413dad:	(bad)  
  413dae:	push   0x65f68ca2
  413db3:	test   eax,0xbce3ec4d
  413db8:	ds iret 
  413dba:	push   ecx
  413dbb:	lds    ebx,FWORD PTR [eax+ebx*2-0x42]
  413dbf:	test   DWORD PTR [ecx-0x2206ca1d],ecx
  413dc5:	fisub  DWORD PTR [ebx+0x2e]
  413dc8:	in     eax,0x68
  413dca:	sbb    esi,edi
  413dcc:	jmp    0x560dadf5
  413dd1:	or     bl,BYTE PTR [eax]
  413dd3:	addr16 push ds
  413dd5:	jmp    0x3fc655e1
  413dda:	retf   
  413ddb:	fdivrp st(2),st
  413ddd:	mov    esp,0xba4905ec
  413de2:	and    ch,BYTE PTR [eax+0xbc25919]
  413de8:	xchg   esp,eax
  413de9:	inc    esi
  413dea:	nop
  413deb:	call   0x14a3:0x72c199de
  413df2:	sti    
  413df3:	jmp    0x413d80
  413df5:	mov    edx,0xdf2c022a
  413dfa:	pusha  
  413dfb:	xor    cl,BYTE PTR [esp+ebx*8]
  413dfe:	outs   dx,BYTE PTR ds:[esi]
  413dff:	add    al,0xad
  413e01:	(bad)  
  413e02:	repz push 0x2c1c1440
  413e08:	(bad)  
  413e09:	scas   eax,DWORD PTR es:[edi]
  413e0a:	cmp    al,0x22
  413e0c:	xor    BYTE PTR [ecx+ebx*4],bl
  413e0f:	pusha  
  413e10:	mov    gs,WORD PTR [eax]
  413e12:	or     ecx,DWORD PTR [eax]
  413e14:	sub    al,BYTE PTR [ecx]
  413e16:	fmul   DWORD PTR [edi+0x1e898523]
  413e1c:	mov    bl,BYTE PTR [ebx+0x43901085]
  413e22:	add    BYTE PTR ds:0xc335478f,al
  413e28:	not    DWORD PTR [edx]
  413e2a:	fstp   QWORD PTR es:[ecx+0x26]
  413e2e:	jbe    0x413db4
  413e30:	add    DWORD PTR [esi-0x62],ecx
  413e33:	popa   
  413e34:	repnz shr BYTE PTR [ecx+0xb],cl
  413e38:	rcl    DWORD PTR [esi-0x530ae74d],0x24
  413e3f:	sbb    bh,BYTE PTR [esi+eax*1-0x2795c432]
  413e46:	or     bh,al
  413e48:	push   ebx
  413e49:	sbb    eax,0xd4b32cbb
  413e4e:	ret    0x63c1
  413e51:	and    esi,DWORD PTR [edi+ebx*4+0x4c]
  413e55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e56:	add    al,0x64
  413e58:	jno    0x413ed4
  413e5a:	stc    
  413e5b:	add    edx,ecx
  413e5d:	stc    
  413e5e:	popa   
  413e5f:	sbb    edx,DWORD PTR [ecx]
  413e61:	call   0x287e:0x1513214e
  413e68:	xchg   ecx,eax
  413e69:	push   ebp
  413e6a:	dec    ecx
  413e6b:	jmp    0x99c1:0xd901c99
  413e72:	xor    al,0x89
  413e74:	in     al,dx
  413e75:	ret    
  413e76:	imul   ebp,DWORD PTR gs:[eax+0x8],0x53
  413e7b:	jmp    0x413e2c
  413e7d:	jb     0x413e54
  413e7f:	inc    esp
  413e80:	in     al,dx
  413e81:	jno    0x413edd
  413e83:	nop
  413e84:	push   DWORD PTR [ecx+0x6bc5e0e3]
  413e8a:	sub    BYTE PTR [esi+0x3c],ah
  413e8d:	pop    esp
  413e8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e8f:	xor    eax,0x83158616
  413e94:	fmul   DWORD PTR [esi]
  413e96:	es jo  0x413e47
  413e99:	push   cs
  413e9a:	and    al,0xe1
  413e9c:	outs   dx,DWORD PTR ds:[esi]
  413e9d:	cld    
  413e9e:	and    dh,bl
  413ea0:	push   ebp
  413ea1:	(bad)  
  413ea2:	call   0x9ffe64a4
  413ea7:	retf   0x6e66
  413eaa:	sbb    DWORD PTR ds:0xabb4a01b,esi
  413eb0:	pop    ecx
  413eb1:	ins    BYTE PTR es:[edi],dx
  413eb2:	mov    ebx,0x6efff97c
  413eb7:	xchg   edi,eax
  413eb8:	mov    ebx,0x5e32461d
  413ebd:	adc    DWORD PTR [ecx+0x1],ecx
  413ec0:	mov    eax,0xf54bb0ff
  413ec5:	out    dx,al
  413ec6:	adc    eax,0xabb027d8
  413ecb:	jne    0x413ed7
  413ecd:	out    dx,al
  413ece:	jp     0x413ebe
  413ed0:	add    ebx,edi
  413ed2:	dec    edi
  413ed3:	hlt    
  413ed4:	daa    
  413ed5:	mov    bl,BYTE PTR [eax+0x6a638e03]
  413edb:	xchg   edx,eax
  413edc:	or     al,0xb4
  413ede:	dec    edx
  413edf:	cmp    al,0x3d
  413ee1:	(bad)  
  413ee2:	cli    
  413ee3:	popf   
  413ee4:	inc    edx
  413ee5:	push   cs
  413ee6:	inc    esi
  413ee7:	inc    esp
  413ee8:	push   0xfa5ee5c3
  413eed:	cwde   
  413eee:	daa    
  413eef:	je     0x413ed8
  413ef1:	add    DWORD PTR [edi-0x36],edi
  413ef4:	cwde   
  413ef5:	pop    ebp
  413ef6:	push   ecx
  413ef7:	outs   dx,DWORD PTR ds:[esi]
  413ef8:	push   ebx
  413ef9:	call   FWORD PTR [ebp-0x29447dab]
  413eff:	mov    bh,0x4c
  413f01:	dec    ebx
  413f02:	mov    DWORD PTR [ebp+0x45c6571b],edi
  413f08:	arpl   WORD PTR [esi],bx
  413f0a:	pop    eax
  413f0b:	outs   dx,DWORD PTR ds:[esi]
  413f0c:	mov    al,0xcf
  413f0e:	xlat   BYTE PTR ds:[ebx]
  413f0f:	daa    
  413f10:	jmp    0x3f251051
  413f15:	sbb    BYTE PTR [edx],dl
  413f17:	mov    bh,0x42
  413f19:	data16 xor al,0xdc
  413f1c:	add    DWORD PTR [edi+edi*1],esi
  413f1f:	dec    ebx
  413f20:	fwait
  413f21:	out    dx,al
  413f22:	ret    0x1fbe
  413f25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f26:	jnp    0x413f71
  413f28:	or     bh,BYTE PTR [ebx+0x7d]
  413f2b:	or     DWORD PTR [esi+edi*8],ebx
  413f2e:	je     0x413eee
  413f30:	cwde   
  413f31:	repz inc edi
  413f33:	sti    
  413f34:	push   ebp
  413f35:	test   eax,0x50f7a402
  413f3a:	xor    eax,0xc178bb80
  413f3f:	dec    ebx
  413f40:	(bad)  
  413f42:	pop    es
  413f43:	loope  0x413f4f
  413f45:	mov    al,0x41
  413f47:	push   cs
  413f48:	rcl    DWORD PTR [ecx+0x605b18f],cl
  413f4e:	into   
  413f4f:	xor    cl,BYTE PTR [edi]
  413f51:	imul   eax,DWORD PTR [ebx+0x2d],0x265627c8
  413f58:	icebp  
  413f59:	sbb    eax,0x39b15ff7
  413f5e:	xchg   esp,eax
  413f5f:	or     al,0x75
  413f61:	fdivr  DWORD PTR [edi-0x7956ec38]
  413f67:	jne    0x413fb3
  413f69:	xchg   ebx,eax
  413f6a:	push   0xc2a0f5c0
  413f6f:	pop    es
  413f70:	js     0x413f0e
  413f72:	popf   
  413f73:	shl    BYTE PTR [edi+0xc],cl
  413f76:	dec    edi
  413f77:	popf   
  413f78:	add    DWORD PTR [eax+0x395b24b5],esp
  413f7e:	cmp    BYTE PTR ds:0x7489080b,0x22
  413f85:	xor    ah,BYTE PTR [edi+0x2b647662]
  413f8b:	push   esp
  413f8c:	call   0xa2ebdf8b
  413f91:	fcomp  st(6)
  413f93:	xchg   edx,eax
  413f94:	sbb    al,0xb5
  413f96:	dec    edx
  413f97:	push   ds
  413f98:	push   edx
  413f99:	outs   dx,BYTE PTR ds:[esi]
  413f9a:	add    BYTE PTR [eax+0x1e344246],cl
  413fa0:	mov    eax,edi
  413fa2:	xor    edi,DWORD PTR [eax-0xb8d7bb5]
  413fa8:	adc    esp,DWORD PTR [ebp+eiz*4-0x34abcbe1]
  413faf:	jno    0x413fd7
  413fb1:	retf   
  413fb2:	adc    al,0x80
  413fb4:	push   cs
  413fb5:	adc    BYTE PTR [edi-0x58],al
  413fb8:	jno    0x413fcd
  413fba:	bound  ebp,QWORD PTR [edi]
  413fbc:	sbb    bl,BYTE PTR [ebx+ebx*8-0x7d]
  413fc0:	push   edx
  413fc1:	int3   
  413fc2:	jo     0x414041
  413fc4:	retf   
  413fc5:	inc    edi
  413fc6:	retf   
  413fc7:	push   esp
  413fc8:	popf   
  413fc9:	aas    
  413fca:	fdivr  st(6),st
  413fcc:	data16 aam 0x9d
  413fcf:	push   0x8
  413fd1:	inc    eax
  413fd2:	inc    edi
  413fd3:	xchg   DWORD PTR [eax+0xf],ecx
  413fd6:	pop    ebp
  413fd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fd8:	in     al,0x26
  413fda:	jl     0x414008
  413fdc:	fcom   DWORD PTR [edi-0x15]
  413fdf:	pop    ecx
  413fe0:	sub    BYTE PTR [edx-0x36823a3a],0x1a
  413fe7:	cmp    eax,DWORD PTR [esi+0x7]
  413fea:	inc    ebp
  413feb:	push   ss
  413fec:	push   edi
  413fed:	inc    ebp
  413fee:	add    al,0x2a
  413ff0:	and    DWORD PTR [edx-0x3e],eax
  413ff3:	outs   dx,BYTE PTR ds:[esi]
  413ff4:	iret   
  413ff5:	mov    dl,0x8b
  413ff7:	out    0x5,eax
  413ff9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ffa:	ja     0x41401e
  413ffc:	xchg   BYTE PTR [edi-0x344a0a83],dh
  414002:	outs   dx,DWORD PTR ds:[esi]
  414003:	xor    eax,0xef2f872b
  414008:	mov    ch,0x45
  41400a:	mov    edx,0x4b34cc97
  41400f:	inc    ebp
  414010:	enter  0xdc13,0x4d
  414014:	and    al,0xc3
  414016:	add    DWORD PTR [edi-0x2],eax
  414019:	push   ecx
  41401a:	jl     0x414089
  41401c:	mov    dl,0xd2
  41401e:	mov    bh,0xe7
  414020:	call   0x60d8:0x3660dccd
  414027:	jae    0x413ff7
  414029:	push   edx
  41402a:	cmc    
  41402b:	sti    
  41402c:	mov    ebx,0x7c9de5ee
  414031:	or     cl,al
  414033:	add    dh,BYTE PTR [edx+0x7c]
  414036:	lock sub DWORD PTR [esi+eiz*4],esi
  41403a:	xlat   BYTE PTR ds:[ebx]
  41403b:	arpl   si,ax
  41403d:	jno    0x414058
  41403f:	cmp    DWORD PTR [edi+eiz*4],0xffffff9d
  414043:	sahf   
  414044:	jno    0x414078
  414046:	fadd   st,st(1)
  414048:	sub    DWORD PTR [ebx-0x17],edx
  41404b:	adc    al,0x3f
  41404d:	fs jns 0x413fd0
  414050:	adc    BYTE PTR [ecx+0x1f],0x3c
  414054:	stos   DWORD PTR es:[edi],eax
  414055:	popa   
  414056:	loop   0x414046
  414058:	out    dx,al
  414059:	push   0x576efa37
  41405e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41405f:	rcr    BYTE PTR [edx-0x73396fff],cl
  414065:	xor    al,0x50
  414067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414068:	sub    dl,ch
  41406a:	retf   0xb091
  41406d:	in     eax,0x5c
  41406f:	addr16 and dh,cl
  414072:	cli    
  414073:	mov    ?,esi
  414075:	daa    
  414076:	(bad)  
  414077:	cmp    al,0x36
  414079:	sti    
  41407a:	cmp    eax,0xdee32993
  41407f:	es in  eax,dx
  414081:	test   DWORD PTR [eax],0x9d550cf7
  414087:	jae    0x414057
  414089:	je     0x4140ca
  41408b:	mov    bh,0x93
  41408d:	stos   DWORD PTR es:[edi],eax
  41408e:	ret    
  41408f:	outs   dx,BYTE PTR ds:[esi]
  414090:	stos   DWORD PTR es:[edi],eax
  414091:	adc    cl,bh
  414093:	xlat   BYTE PTR ds:[bx]
  414095:	call   0x55c8:0xb812fc4d
  41409c:	pushf  
  41409d:	pop    ebx
  41409e:	lock push eax
  4140a0:	sahf   
  4140a1:	(bad)  
  4140a2:	out    dx,eax
  4140a3:	je     0x414121
  4140a5:	mov    ch,BYTE PTR [ebx+0x44d23f43]
  4140ab:	inc    edx
  4140ac:	push   0xffffffe7
  4140ae:	repnz lahf 
  4140b0:	inc    edi
  4140b1:	repz imul ebx,DWORD PTR [ebp-0x69af9dff],0x7c
  4140b9:	add    BYTE PTR [edi+0x2acab558],bl
  4140bf:	stos   DWORD PTR es:[edi],eax
  4140c0:	sbb    edx,DWORD PTR [edx-0x39f83d8]
  4140c6:	ins    BYTE PTR es:[edi],dx
  4140c7:	ss std 
  4140c9:	cmp    cl,BYTE PTR [esi-0x60ffbd4c]
  4140cf:	xor    al,0x3c
  4140d1:	sub    eax,0x7ee847c3
  4140d6:	ins    DWORD PTR es:[edi],dx
  4140d7:	xor    ah,BYTE PTR [eax+0x2ffc3b1e]
  4140dd:	xchg   edx,eax
  4140de:	or     ebp,eax
  4140e0:	jle    0x4140bf
  4140e2:	cli    
  4140e3:	scas   eax,DWORD PTR es:[edi]
  4140e4:	push   ecx
  4140e5:	scas   eax,DWORD PTR es:[edi]
  4140e6:	pop    ecx
  4140e7:	jmp    0x4a20:0x4892c7cd
  4140ee:	and    eax,0x9a5ff2cf
  4140f3:	test   eax,0xfd004c5e
  4140f8:	sub    al,0x61
  4140fa:	gs jnp 0x41413b
  4140fd:	mov    cl,BYTE PTR [esi+eiz*8+0x8]
  414101:	and    DWORD PTR [ebx+0x50b5ca29],ecx
  414107:	or     esi,ecx
  414109:	cmc    
  41410a:	mov    cl,0xb9
  41410c:	enter  0x16e8,0x63
  414110:	xchg   BYTE PTR [ebx],ah
  414112:	nop
  414113:	not    esp
  414115:	int3   
  414116:	adc    eax,0x89292823
  41411b:	inc    ebp
  41411c:	xlat   BYTE PTR ds:[ebx]
  41411d:	inc    esi
  41411e:	add    edi,edi
  414120:	ds push eax
  414122:	test   al,0x75
  414124:	adc    DWORD PTR [esp+edi*1-0x26],eax
  414128:	dec    edx
  414129:	enter  0x4c7d,0xaf
  41412d:	inc    ebx
  41412e:	inc    edx
  41412f:	xor    al,BYTE PTR [eax]
  414131:	loop   0x41413d
  414133:	xchg   edx,eax
  414134:	lods   al,BYTE PTR ds:[esi]
  414135:	cmc    
  414136:	xchg   al,ch
  414138:	sub    al,0xc7
  41413a:	daa    
  41413b:	mov    ch,0xc8
  41413d:	mov    ah,0x68
  41413f:	sub    al,BYTE PTR [ecx]
  414141:	jmp    0xb7f9:0xd290163e
  414148:	mov    ebx,0x4eb1eab4
  41414d:	sub    BYTE PTR [edx+0xc],ch
  414150:	add    al,0x65
  414152:	sbb    eax,0xd334c07a
  414157:	loope  0x4141c5
  414159:	(bad)  [ecx]
  41415b:	inc    ecx
  41415c:	jbe    0x41415c
  41415e:	arpl   WORD PTR [ecx],bp
  414160:	pop    ds
  414161:	ret    
  414162:	cmp    ah,ch
  414164:	pop    es
  414165:	test   al,0xe7
  414167:	cmc    
  414168:	mov    es,WORD PTR [eax+0x2220413a]
  41416e:	sub    cl,BYTE PTR [esi]
  414170:	mov    dh,0x8a
  414172:	xor    DWORD PTR [edi+0x75],ecx
  414175:	xor    BYTE PTR [edx-0x80],ah
  414178:	mov    ds:0x3ef2decd,al
  41417d:	dec    esi
  41417e:	pop    ebp
  41417f:	ret    
  414180:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414181:	stos   BYTE PTR es:[edi],al
  414182:	pop    esp
  414183:	push   ecx
  414184:	sbb    al,0x72
  414186:	inc    edi
  414187:	fist   DWORD PTR [edi]
  414189:	cmp    cl,dl
  41418b:	mov    WORD PTR [ecx+ebx*1+0xf],fs
  41418f:	jo     0x414176
  414191:	arpl   WORD PTR [ecx],si
  414193:	xor    eax,0xe5395a68
  414198:	addr16 dec esp
  41419a:	jl     0x4141a9
  41419c:	xchg   edx,eax
  41419d:	stos   BYTE PTR es:[edi],al
  41419e:	std    
  41419f:	push   edx
  4141a0:	out    0xfa,al
  4141a2:	ret    
  4141a3:	or     DWORD PTR [eax-0x58a9917f],0x89013ea8
  4141ad:	outs   dx,DWORD PTR ds:[esi]
  4141ae:	inc    ebp
  4141af:	cld    
  4141b0:	xor    esp,DWORD PTR [edi+0x6a]
  4141b3:	add    cl,BYTE PTR [ebp+0x5fbab265]
  4141b9:	xchg   edi,eax
  4141ba:	xchg   ecx,eax
  4141bb:	pop    esp
  4141bc:	pop    edx
  4141bd:	add    al,0x9d
  4141bf:	jns    0x414179
  4141c1:	stos   BYTE PTR es:[edi],al
  4141c2:	lahf   
  4141c3:	add    DWORD PTR [edx],edx
  4141c5:	jns    0x414163
  4141c7:	mov    bl,0x75
  4141c9:	cmp    ah,BYTE PTR [ebp-0x34]
  4141cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141cd:	nop
  4141ce:	mov    ds:0x591a7d14,al
  4141d3:	and    BYTE PTR [edx-0x12005b5c],cl
  4141d9:	xchg   ecx,eax
  4141da:	push   esi
  4141db:	cs ins BYTE PTR es:[edi],dx
  4141dd:	fild   WORD PTR [edx+0x5]
  4141e0:	data16 sub al,0xd5
  4141e3:	mov    cs,WORD PTR [esi+ebx*4+0x4ef086d]
  4141ea:	sub    bl,BYTE PTR [esi+ecx*8]
  4141ed:	iret   
  4141ee:	inc    edi
  4141ef:	inc    eax
  4141f0:	sbb    ah,bl
  4141f2:	push   edi
  4141f3:	call   0x85d06568
  4141f8:	xor    eax,0x1b84e9f6
  4141fd:	or     ebx,edi
  4141ff:	inc    edx
  414200:	jns    0x414193
  414202:	mov    al,0xfa
  414204:	je     0x414231
  414206:	clc    
  414207:	dec    esi
  414208:	inc    edx
  414209:	scas   al,BYTE PTR es:[edi]
  41420a:	mov    esi,0xd0b34265
  41420f:	push   esp
  414210:	je     0x414204
  414212:	test   eax,0x897b392b
  414217:	pop    ecx
  414218:	xor    ebx,DWORD PTR [esi+0x75e05191]
  41421e:	mov    bh,0x3d
  414220:	pop    esp
  414221:	cmp    ebp,ebx
  414223:	nop
  414224:	dec    eax
  414225:	cld    
  414226:	pop    edi
  414227:	ss ja  0x4141d2
  41422a:	dec    bh
  41422c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41422d:	cmovge eax,DWORD PTR [esi+0x5f]
  414231:	hlt    
  414232:	sbb    DWORD PTR [ecx+edx*8],eax
  414235:	retf   0x6902
  414238:	aaa    
  414239:	out    0xd7,al
  41423b:	mov    bl,BYTE PTR [eax+0x5c986647]
  414241:	jnp    0x414268
  414243:	push   es
  414244:	mov    cl,0x39
  414246:	fst    QWORD PTR ds:0xaf1c3a5e
  41424c:	mov    esi,0x61d5e702
  414251:	adc    eax,0xbe49a4b5
  414256:	sbb    DWORD PTR [esi],esp
  414258:	adc    esi,edx
  41425a:	jl     0x4142d2
  41425c:	outs   dx,DWORD PTR ds:[esi]
  41425d:	mov    eax,0xeb98c74a
  414262:	in     al,dx
  414263:	dec    esi
  414264:	lds    esp,FWORD PTR [ebp-0x32d707c]
  41426a:	test   dh,0x50
  41426d:	push   ebp
  41426e:	stos   BYTE PTR es:[edi],al
  41426f:	and    ah,0xb
  414272:	call   0x1df41115
  414277:	int3   
  414278:	mov    al,ds:0x22920103
  41427d:	js     0x414267
  41427f:	xchg   bh,ah
  414281:	pusha  
  414282:	iret   
  414283:	push   esp
  414284:	inc    edx
  414285:	cli    
  414286:	lods   eax,DWORD PTR ds:[esi]
  414287:	jmp    0x98ec:0xccea2f4f
  41428e:	push   edx
  41428f:	mov    dl,0x29
  414291:	int3   
  414292:	out    0xab,eax
  414294:	cmp    dl,BYTE PTR [ecx-0x17]
  414297:	inc    eax
  414298:	mov    esi,0x5cfb4e7
  41429d:	adc    al,0xea
  41429f:	es inc ecx
  4142a1:	loop   0x4142cf
  4142a3:	popf   
  4142a4:	push   ds
  4142a5:	ret    0xf0df
  4142a8:	mov    ch,0x6c
  4142aa:	ret    0x5987
  4142ad:	out    dx,al
  4142ae:	adc    ecx,ebp
  4142b0:	cld    
  4142b1:	jb     0x414315
  4142b3:	mov    al,0x39
  4142b5:	sub    DWORD PTR [ecx+edx*1-0x24],eax
  4142b9:	mov    ebx,DWORD PTR [ebx+0xf]
  4142bc:	out    0xc8,al
  4142be:	cdq    
  4142bf:	sub    eax,0xdbbc65c1
  4142c4:	inc    ebx
  4142c5:	out    dx,al
  4142c6:	cmc    
  4142c7:	mov    dh,0x9
  4142c9:	mov    al,0x36
  4142cb:	xor    al,0x70
  4142cd:	sub    eax,0x21762eaf
  4142d2:	jno    0x4142dc
  4142d4:	or     edi,ebx
  4142d6:	shr    BYTE PTR [ebx],0xcb
  4142d9:	cwde   
  4142da:	shl    DWORD PTR [ebx+ecx*1-0x63],1
  4142de:	int3   
  4142df:	repz ror DWORD PTR [edx],cl
  4142e2:	sbb    eax,edi
  4142e4:	les    edi,FWORD PTR [edi]
  4142e6:	cld    
  4142e7:	inc    eax
  4142e8:	imul   esi,DWORD PTR [ecx+0x2d],0xffffff85
  4142ec:	ins    DWORD PTR es:[edi],dx
  4142ed:	sbb    eax,0x34e60be7
  4142f2:	inc    esp
  4142f3:	xchg   ebx,eax
  4142f4:	xor    DWORD PTR [esp+ecx*8-0x1e67220e],edx
  4142fb:	bnd jmp 0x8292c53
  414301:	adc    edi,DWORD PTR [eax]
  414303:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414304:	sub    al,BYTE PTR [edi-0x70]
  414307:	les    edx,FWORD PTR [esi]
  414309:	cwde   
  41430a:	shl    BYTE PTR [edi+eiz*8+0x479595df],1
  414311:	dec    eax
  414312:	xchg   ecx,eax
  414313:	xlat   BYTE PTR ds:[ebx]
  414314:	imul   esi
  414316:	pop    esp
  414317:	sbb    eax,0x23629949
  41431c:	and    ch,BYTE PTR [eax+eiz*4]
  41431f:	push   eax
  414320:	push   edx
  414321:	test   DWORD PTR [esi-0x6ca71e02],esp
  414327:	inc    ecx
  414328:	xchg   ecx,ecx
  41432a:	or     eax,0x6f8df1f
  41432f:	nop
  414330:	push   0x15d55914
  414335:	enter  0x9793,0x32
  414339:	and    DWORD PTR [ebx],esi
  41433b:	mul    DWORD PTR [edi]
  41433d:	and    DWORD PTR [edi],esi
  41433f:	pop    ss
  414340:	pop    es
  414341:	xor    bh,BYTE PTR [eax]
  414343:	aaa    
  414344:	add    ebx,DWORD PTR [ecx]
  414346:	xchg   ebp,eax
  414347:	mov    esi,0x6d3acbfd
  41434c:	mov    ch,0xd1
  41434e:	js     0x414371
  414350:	sub    ebx,ebx
  414352:	test   eax,0x914aa912
  414357:	sbb    esi,esi
  414359:	jnp    0x414378
  41435b:	mov    bh,0xc2
  41435d:	repz add al,0xec
  414360:	mov    eax,0xa3c2e66f
  414365:	arpl   WORD PTR [ecx+eax*4-0x4e370ae7],si
  41436c:	in     al,dx
  41436d:	not    DWORD PTR [edx+0x127831bc]
  414373:	mov    ch,0xa6
  414375:	jp     0x41431b
  414377:	add    eax,0xf349dd09
  41437c:	dec    ebp
  41437d:	sbb    ecx,0xc20a9efb
  414383:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414384:	push   ecx
  414385:	or     BYTE PTR [ecx+0x28c7babd],bh
  41438b:	mov    ebp,0xd1eaff06
  414390:	addr16 loopne 0x4143d0
  414393:	popa   
  414394:	fsubr  QWORD PTR [edi+0x57]
  414397:	dec    edx
  414398:	mov    bl,0xec
  41439a:	jnp    0x4143c0
  41439c:	imul   DWORD PTR [edx]
  41439e:	or     eax,0x641d6550
  4143a3:	fild   QWORD PTR [eax+eiz*4-0x5b]
  4143a7:	daa    
  4143a8:	xor    BYTE PTR [edx+0x3e],ah
  4143ab:	call   0x97c91417
  4143b0:	stos   DWORD PTR es:[edi],eax
  4143b1:	bnd jl 0x414399
  4143b4:	(bad)  
  4143b5:	and    esi,ecx
  4143b7:	push   ebx
  4143b8:	addr16 popf 
  4143ba:	pop    edx
  4143bb:	ins    DWORD PTR es:[edi],dx
  4143bc:	xchg   dh,cl
  4143be:	rol    BYTE PTR ds:0x69de948e,1
  4143c4:	and    eax,0x4d424c37
  4143c9:	jo     0x4143e4
  4143cb:	test   eax,0x4b2921c
  4143d0:	sub    al,BYTE PTR [eax+0x4574e0c6]
  4143d6:	xchg   esi,eax
  4143d7:	mov    ds:0xcd45bc96,al
  4143dc:	stos   BYTE PTR es:[edi],al
  4143dd:	jecxz  0x414391
  4143df:	and    BYTE PTR cs:[ecx],bh
  4143e2:	push   0x1fc0711a
  4143e7:	jne    0x41438e
  4143e9:	data16 (bad) 
  4143eb:	retf   
  4143ec:	pushf  
  4143ed:	aas    
  4143ee:	mov    edi,0x677297fe
  4143f3:	nop
  4143f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143f5:	into   
  4143f6:	or     DWORD PTR [edi-0x1a8a2c23],esi
  4143fc:	(bad)  
  4143fe:	fcom   QWORD PTR [ebp+0x23894575]
  414404:	mov    ch,BYTE PTR [esi+0x53]
  414407:	mov    ds:0x2b00d96e,al
  41440c:	jge    0x414480
  41440e:	pop    ds
  41440f:	or     ecx,DWORD PTR [esi-0x23fb06dc]
  414415:	mov    al,0x28
  414417:	fstp   QWORD PTR [eax+ebp*8-0x5bdf579c]
  41441e:	popa   
  41441f:	xor    BYTE PTR [edx],bh
  414421:	push   esi
  414422:	fwait
  414423:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414424:	mov    DWORD PTR [eax],esp
  414426:	jg     0x41449b
  414428:	ins    DWORD PTR es:[edi],dx
  414429:	fisubr DWORD PTR ss:[esi-0x2e1dcab5]
  414430:	sti    
  414431:	loope  0x4143d9
  414433:	nop
  414434:	jne    0x4143bb
  414436:	mov    gs,WORD PTR [ecx-0x1]
  414439:	inc    ebx
  41443a:	sub    eax,0x9e57ca06
  41443f:	push   ss
  414440:	jb     0x414450
  414442:	cmc    
  414443:	loope  0x41442e
  414445:	xor    bh,dh
  414447:	(bad)  
  414448:	jge    0x41440c
  41444a:	sub    cl,BYTE PTR [ecx+ebx*4+0xe]
  41444e:	and    al,0xed
  414450:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414451:	push   edi
  414452:	and    eax,0x1ca4846b
  414457:	(bad)  
  414458:	rcl    DWORD PTR [eax+0x84ff547],1
  41445e:	cwde   
  41445f:	adc    eax,0x1b119fec
  414464:	sub    dl,al
  414466:	rol    BYTE PTR [ebx+0x39],1
  414469:	push   ebp
  41446a:	dec    ecx
  41446b:	loope  0x414422
  41446d:	mov    esi,0x6acc356f
  414472:	jnp    0x41447a
  414474:	jno    0x41444b
  414476:	cld    
  414477:	inc    ecx
  414478:	pushf  
  414479:	scas   eax,DWORD PTR es:[edi]
  41447a:	es popa 
  41447c:	fisttp QWORD PTR [edx]
  41447e:	daa    
  41447f:	adc    BYTE PTR [esp+edi*2],dh
  414482:	mov    esp,0x40d25b0a
  414487:	pop    ebp
  414488:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414489:	push   esi
  41448a:	xor    edx,DWORD PTR [edx+0x173e42e4]
  414490:	adc    eax,DWORD PTR [ebx-0x47]
  414493:	popa   
  414494:	push   edi
  414495:	popa   
  414496:	fs xchg edx,eax
  414498:	cwde   
  414499:	jle    0x4144ea
  41449b:	loopne 0x414457
  41449d:	xlat   BYTE PTR ds:[ebx]
  41449e:	pop    esp
  41449f:	push   0xfffffff6
  4144a1:	pop    ebx
  4144a2:	ins    BYTE PTR es:[edi],dx
  4144a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144a4:	adc    cl,BYTE PTR [esi-0x30a2c25b]
  4144aa:	fild   WORD PTR [esi-0x69]
  4144ad:	mov    esp,ebp
  4144af:	push   0x64e8e924
  4144b4:	and    al,0x9e
  4144b6:	jns    0x41452f
  4144b8:	out    dx,eax
  4144b9:	sahf   
  4144ba:	xchg   BYTE PTR [eax+0x4e],ah
  4144bd:	pop    ss
  4144be:	or     ch,BYTE PTR [edx+ecx*2-0x65]
  4144c2:	push   eax
  4144c3:	adc    al,0x50
  4144c5:	out    0x57,eax
  4144c7:	enter  0x678a,0x9b
  4144cb:	xor    BYTE PTR [di+0x18df],dl
  4144d0:	aas    
  4144d1:	loopne 0x41449a
  4144d3:	lock push edx
  4144d5:	nop
  4144d6:	add    al,0x9
  4144d8:	jmp    0x621f:0x976fd07c
  4144df:	dec    ecx
  4144e0:	mov    ebp,0xd5d3ff63
  4144e5:	pavgb  mm3,QWORD PTR [ebx]
  4144e8:	jge    0x414564
  4144ea:	imul   esp,ebp,0x362244b8
  4144f0:	retf   
  4144f1:	add    al,0xa9
  4144f3:	mov    DWORD PTR [ebp+eiz*1+0x78],edx
  4144f7:	add    dh,BYTE PTR [eax+0x2939b5d9]
  4144fd:	(bad)  
  4144fe:	hlt    
  4144ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414500:	cmp    ecx,esp
  414502:	dec    ecx
  414503:	stos   DWORD PTR es:[edi],eax
  414504:	cmp    ecx,edx
  414506:	ret    0x7d9f
  414509:	fild   DWORD PTR [eax+0x70c01eef]
  41450f:	mov    ebx,0x79bee2d3
  414514:	les    ebx,FWORD PTR [edx-0x61b9af29]
  41451a:	sub    esi,esi
  41451c:	ss sbb al,0x6c
  41451f:	xchg   ebx,eax
  414520:	loop   0x4144f8
  414522:	mov    cl,0x35
  414524:	mov    eax,0x4d7f627c
  414529:	mov    es,WORD PTR [ebx+0x4a25b77d]
  41452f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414530:	mov    ebx,0xdb19fd27
  414535:	and    ah,BYTE PTR ds:0x4cf9b241
  41453b:	cmp    al,0xb9
  41453d:	ins    BYTE PTR es:[edi],dx
  41453e:	fwait
  41453f:	xchg   ecx,eax
  414540:	xchg   esi,eax
  414541:	lock jb 0x4144d7
  414544:	pop    edi
  414545:	stc    
  414546:	fstp   st(4)
  414548:	jmp    0x2059d81f
  41454d:	je     0x4145c5
  41454f:	out    dx,eax
  414550:	dec    esi
  414551:	or     al,0x6a
  414553:	xchg   ebp,eax
  414554:	clc    
  414555:	push   0xffffffcf
  414557:	int3   
  414558:	sahf   
  414559:	je     0x4144fc
  41455b:	arpl   WORD PTR [eax],sp
  41455d:	sub    bl,dh
  41455f:	mov    dh,0x8b
  414561:	aaa    
  414562:	or     eax,0x49e230c2
  414567:	sub    BYTE PTR [eax+eiz*2-0x2510f137],dh
  41456e:	fld    DWORD PTR [edi+0x3690d98f]
  414574:	int    0x51
  414576:	sub    esp,DWORD PTR [ecx+0x499d86a8]
  41457c:	xor    eax,0x67cf8e44
  414581:	pop    ebx
  414582:	mov    al,0xd
  414584:	cmp    DWORD PTR [esi-0x1a3ec899],edi
  41458a:	jnp    0x4145b8
  41458c:	lods   eax,DWORD PTR ds:[esi]
  41458d:	fwait
  41458e:	pop    es
  41458f:	nop
  414590:	sub    eax,0xc5a11a60
  414595:	mov    eax,0x80345d19
  41459a:	call   0x1e618c81
  41459f:	or     al,BYTE PTR [edx+0x57]
  4145a2:	jmp    0x3df101c
  4145a7:	inc    ebp
  4145a8:	pop    ss
  4145a9:	push   ss
  4145aa:	dec    esp
  4145ab:	mov    esi,0xa3556f27
  4145b0:	cli    
  4145b1:	xchg   esi,eax
  4145b2:	sub    ch,0x21
  4145b5:	pop    ecx
  4145b6:	sbb    DWORD PTR [ebp+0x5ab6db1d],esp
  4145bc:	xor    DWORD PTR [ecx-0x210658b3],ebp
  4145c2:	scas   eax,DWORD PTR es:[edi]
  4145c3:	call   0x96a6:0xb104f402
  4145ca:	scas   al,BYTE PTR es:[edi]
  4145cb:	add    eax,0xef96c57f
  4145d0:	pop    esp
  4145d1:	push   es
  4145d2:	in     al,dx
  4145d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145d4:	daa    
  4145d5:	test   BYTE PTR [edx+0x4e114bdc],bl
  4145db:	lock xchg ebp,eax
  4145dd:	fistp  WORD PTR [ebp-0xe]
  4145e0:	nop
  4145e1:	jb     0x414633
  4145e3:	push   ebx
  4145e4:	mov    DWORD PTR [eax],ecx
  4145e6:	mov    edx,0xc707591c
  4145eb:	dec    edx
  4145ec:	mov    bh,0x12
  4145ee:	push   esi
  4145ef:	sub    edi,DWORD PTR [esi+ebp*8]
  4145f2:	mov    dl,0x86
  4145f4:	sbb    ecx,DWORD PTR [esi-0x60]
  4145f7:	lds    edx,FWORD PTR [edx+0x3a04af3e]
  4145fd:	jns    0x4145ef
  4145ff:	xor    ebp,ebx
  414601:	or     eax,0x88e54870
  414606:	icebp  
  414607:	mov    edi,ebx
  414609:	clc    
  41460a:	je     0x414623
  41460c:	(bad)  
  41460d:	rol    BYTE PTR [ebx],1
  41460f:	mov    edx,es
  414611:	add    eax,0x4ddcaa4c
  414616:	mov    esi,0xfca2172f
  41461b:	mov    ds,WORD PTR [edi]
  41461d:	das    
  41461e:	fidivr WORD PTR [ecx-0x42]
  414621:	nop
  414622:	xchg   BYTE PTR [eax+0x258915bd],bh
  414628:	mov    ebp,ebp
  41462a:	iret   
  41462b:	pop    ebp
  41462c:	inc    edx
  41462d:	cmp    al,0xfc
  41462f:	enter  0x20f4,0x73
  414633:	sbb    bh,BYTE PTR [esp+eiz*2-0x19f48028]
  41463a:	fdivr  st(4),st
  41463c:	es xchg ebp,eax
  41463e:	mov    dh,BYTE PTR ds:[esp+esi*8]
  414642:	and    eax,0x48021b46
  414647:	dec    BYTE PTR [edx]
  414649:	stc    
  41464a:	nop
  41464b:	push   ebx
  41464c:	imul   ebx,DWORD PTR [ebx+0x53],0xffffff9d
  414650:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414651:	sbb    al,0xb0
  414653:	ins    DWORD PTR es:[edi],dx
  414654:	xor    DWORD PTR [edx+0x1e],esp
  414657:	dec    ecx
  414658:	jl     0x4145f9
  41465a:	sahf   
  41465b:	call   0x8b161bcc
  414660:	mov    ds,WORD PTR [eax]
  414662:	hlt    
  414663:	jo     0x41462f
  414665:	mov    ds:0x77c81bb8,eax
  41466a:	aaa    
  41466b:	mov    ecx,esi
  41466d:	aaa    
  41466e:	mov    ss:0x9d6e8234,eax
  414674:	xor    dl,BYTE PTR [ebp+0x1b02fff9]
  41467a:	pop    ebp
  41467b:	cs xchg edx,eax
  41467d:	cmp    BYTE PTR [ebx-0x2dc875a9],dl
  414683:	or     eax,0x62aedc9f
  414688:	xchg   esi,eax
  414689:	pop    ecx
  41468a:	fstp   TBYTE PTR [edx+edx*8]
  41468d:	sub    al,0x4a
  41468f:	cmc    
  414690:	pop    ss
  414691:	ja     0x414624
  414693:	xchg   bh,ch
  414695:	jp     0x41468c
  414697:	sti    
  414698:	cmp    cl,ch
  41469a:	push   esi
  41469b:	push   edx
  41469c:	sbb    eax,0xa7651e1c
  4146a1:	out    dx,al
  4146a2:	push   edx
  4146a3:	dec    eax
  4146a4:	mov    esi,0xd14c666c
  4146a9:	push   ebp
  4146aa:	mov    DWORD PTR [ebp-0x5a],ecx
  4146ad:	jge    0x4146cb
  4146af:	cmp    cl,BYTE PTR [ecx-0x24241960]
  4146b5:	sbb    DWORD PTR [edi+0x71],eax
  4146b8:	push   cs
  4146b9:	jae    0x4146d8
  4146bb:	add    al,0x3d
  4146bd:	sbb    ebp,DWORD PTR [ebx-0x21745994]
  4146c3:	cmp    ebx,DWORD PTR [esi]
  4146c5:	sbb    al,0xa6
  4146c7:	std    
  4146c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146c9:	lds    ebx,FWORD PTR [ebx]
  4146cb:	lds    esp,FWORD PTR [edx-0x1f]
  4146ce:	fist   WORD PTR [edi+0x7d]
  4146d1:	mov    al,ds:0x6d24bcaa
  4146d6:	mov    esp,0x725e4d8
  4146db:	push   ds
  4146dc:	xor    edx,edx
  4146de:	or     al,0x87
  4146e0:	ds out dx,al
  4146e2:	test   DWORD PTR [edx-0x80],esp
  4146e5:	shl    DWORD PTR [eax+0x15],1
  4146e8:	dec    eax
  4146e9:	mov    eax,0x2e814fa3
  4146ee:	(bad)  
  4146ef:	mov    dl,0xc7
  4146f1:	stos   DWORD PTR es:[edi],eax
  4146f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146f3:	mov    edx,es
  4146f5:	mov    ebp,0x1981e6bf
  4146fa:	aas    
  4146fb:	test   edx,0xf718884f
  414701:	jle    0x414707
  414703:	fnstenv [ecx]
  414705:	push   0x29e85eec
  41470a:	repz loope 0x41477e
  41470d:	test   DWORD PTR [eax+0x3a494345],ebp
  414713:	push   es
  414714:	pop    ecx
  414715:	sub    dl,dl
  414717:	std    
  414718:	or     DWORD PTR [edx+esi*2-0x7a],ebp
  41471c:	pop    esi
  41471d:	pop    eax
  41471e:	pop    es
  41471f:	cmc    
  414720:	ficomp DWORD PTR [ecx+0x13ea464d]
  414726:	push   ecx
  414727:	xor    dl,BYTE PTR [edx+0x2b34dde7]
  41472d:	pop    ss
  41472e:	cmp    BYTE PTR [esi+0x481779f8],0xae
  414735:	dec    ecx
  414736:	div    ch
  414738:	inc    ebp
  414739:	or     al,0x3f
  41473b:	lds    esi,FWORD PTR [bx+0x45]
  41473f:	dec    edx
  414740:	mov    edi,0xd163009e
  414745:	shl    BYTE PTR ds:0x918f4a8f,cl
  41474b:	jne    0x4146e8
  41474d:	mov    bh,0xef
  41474f:	cli    
  414750:	cwde   
  414751:	iret   
  414752:	xor    eax,0x342e302e
  414757:	jbe    0x4146da
  414759:	add    ebx,DWORD PTR [edi]
  41475b:	(bad)  
  41475c:	std    
  41475d:	mov    BYTE PTR [ebx-0x72],dh
  414760:	mov    bh,0xd8
  414762:	inc    edx
  414763:	clc    
  414764:	lock pop esi
  414766:	aam    0xee
  414768:	adc    ebx,DWORD PTR [ebx-0x72]
  41476b:	add    DWORD PTR [eax-0x1b],0x22027c40
  414772:	dec    ebp
  414773:	xor    dh,BYTE PTR [eax+0x2ecbca4e]
  414779:	(bad)  
  41477a:	and    edi,DWORD PTR [edx]
  41477c:	lds    edx,FWORD PTR [eax+ebx*1+0x1f69cd80]
  414783:	pop    eax
  414784:	mov    BYTE PTR [edi+0x36d8cbde],cl
  41478a:	mov    bh,dl
  41478c:	sub    edx,eax
  41478e:	dec    ebx
  41478f:	(bad)  
  414790:	imul   edi,DWORD PTR [eax-0x12f3f3bb],0xbfa35fac
  41479a:	sub    ebx,eax
  41479c:	mov    ah,0xd1
  41479e:	cmp    al,0x93
  4147a0:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4147a2:	ds shr ch,cl
  4147a5:	call   0xcb071b0
  4147aa:	fiadd  WORD PTR [eax]
  4147ac:	pop    ecx
  4147ad:	ret    
  4147ae:	aam    0x97
  4147b0:	js     0x4147a4
  4147b2:	sbb    eax,esp
  4147b4:	mov    dl,0x73
  4147b6:	jg     0x41477e
  4147b8:	dec    ebp
  4147b9:	mov    ebx,0x39c63a74
  4147be:	push   es
  4147bf:	fdivr  QWORD PTR [ebx-0x43]
  4147c2:	shr    bh,cl
  4147c4:	nop
  4147c5:	inc    edx
  4147c6:	push   eax
  4147c7:	jmp    0x41479a
  4147c9:	jno    0x4147c1
  4147cb:	rcl    dh,0xf0
  4147ce:	sbb    eax,0x2e30e7c9
  4147d3:	les    ebp,FWORD PTR [ebp+0x46c63644]
  4147d9:	jg     0x41479a
  4147db:	jecxz  0x4147c4
  4147dd:	mov    dl,0xc8
  4147df:	push   eax
  4147e0:	cwde   
  4147e1:	cmp    BYTE PTR [ebp-0x2f],dh
  4147e4:	mov    ch,0x6e
  4147e6:	out    dx,al
  4147e7:	and    DWORD PTR [ebx],ebx
  4147e9:	pop    edx
  4147ea:	imul   esi,DWORD PTR [edx+ecx*2],0x68221a04
  4147f1:	jo     0x4147a8
  4147f3:	sub    eax,0x2b2034a1
  4147f8:	fisubr WORD PTR [edi-0x39f04acd]
  4147fe:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414800:	arpl   WORD PTR [edi+0x702ef2c8],di
  414806:	add    DWORD PTR [ebx],0xffffffab
  414809:	cmp    BYTE PTR [ecx],ch
  41480b:	fnstcw WORD PTR [edi+0x34]
  41480e:	into   
  41480f:	xlat   BYTE PTR ds:[ebx]
  414810:	stc    
  414811:	std    
  414812:	rol    BYTE PTR ds:0x3991bf78,cl
  414818:	sub    ch,bh
  41481a:	fsub   st(5),st
  41481c:	pusha  
  41481d:	test   DWORD PTR gs:[ebp+0x1b0edaff],0xbe5d9110
  414828:	xchg   esi,eax
  414829:	fild   QWORD PTR [edi-0x2a]
  41482c:	jns    0x4147b6
  41482e:	scas   eax,DWORD PTR es:[edi]
  41482f:	shl    BYTE PTR [esi],0x0
  414832:	in     eax,0x32
  414834:	mov    fs,WORD PTR [edx-0x6a0885f6]
  41483a:	dec    edi
  41483b:	mov    ebp,0xfcad3121
  414840:	pushf  
  414841:	loope  0x4147ea
  414843:	mov    al,ds:0x5a3cca7c
  414848:	cmp    edi,DWORD PTR [edx-0x2f]
  41484b:	icebp  
  41484c:	scas   al,BYTE PTR es:[edi]
  41484d:	outs   dx,BYTE PTR ds:[esi]
  41484e:	retf   
  41484f:	and    al,0xca
  414851:	push   ebx
  414852:	in     al,0xb2
  414854:	jge    0x41483a
  414856:	mov    bh,0xbe
  414858:	inc    edx
  414859:	mov    esp,0x9284cdf0
  41485e:	xchg   ah,dh
  414860:	lahf   
  414861:	sbb    DWORD PTR [ecx+0x314d44dd],edi
  414867:	in     eax,0x17
  414869:	jbe    0x41489a
  41486b:	and    ebp,DWORD PTR [eax+0x30]
  41486e:	xor    al,BYTE PTR [edi-0x4d58507c]
  414874:	pop    eax
  414875:	test   BYTE PTR [ebx-0x6df6d0fe],dh
  41487b:	mov    eax,fs:0x43030446
  414881:	jmp    0x637f:0xc883ffc5
  414888:	inc    edx
  414889:	mov    dl,0x4e
  41488b:	addr16 not bh
  41488e:	fs xor esp,0x49f1a233
  414895:	rol    DWORD PTR [ebx-0x5],0x55
  414899:	adc    cl,BYTE PTR [eax+0x39]
  41489c:	adc    edx,DWORD PTR [eax]
  41489e:	pop    ecx
  41489f:	sti    
  4148a0:	jge    0x414847
  4148a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148a3:	mov    ds,WORD PTR [esi-0x7aa89dbc]
  4148a9:	adc    edx,DWORD PTR [ebp+0x58e32113]
  4148af:	out    0x8c,al
  4148b1:	sbb    edi,ebp
  4148b3:	xchg   ebp,eax
  4148b4:	push   ecx
  4148b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148b6:	retf   
  4148b7:	je     0x4148f0
  4148b9:	lds    edx,FWORD PTR [edx]
  4148bb:	imul   edi,DWORD PTR [edi-0x422c5a42],0x106da2d8
  4148c5:	mov    eax,0x81cdb4b2
  4148ca:	xchg   edx,eax
  4148cb:	shl    DWORD PTR [ecx+0x28],1
  4148ce:	xor    eax,0x9b02a327
  4148d3:	fadd   st,st(0)
  4148d5:	xor    bl,BYTE PTR [eax-0x2842ccb9]
  4148db:	dec    eax
  4148dc:	xchg   BYTE PTR [edi],bl
  4148de:	jp     0x41492b
  4148e0:	cmc    
  4148e1:	punpckhbw mm1,QWORD PTR [edx]
  4148e4:	inc    esp
  4148e5:	cmp    al,0xf4
  4148e7:	loopne 0x4148a7
  4148e9:	mov    dl,BYTE PTR [ebx+0x267137cb]
  4148ef:	mov    ebp,0xfc489aad
  4148f4:	adc    eax,0x5dafb5a3
  4148f9:	pop    ecx
  4148fa:	(bad)  
  4148fb:	mov    ch,0x34
  4148fd:	or     DWORD PTR [ecx],ebx
  4148ff:	cmp    DWORD PTR [eax+ecx*4-0x4],eax
  414903:	data16 and al,0x39
  414906:	(bad)  
  414907:	lea    ebx,[edx+0x56]
  41490a:	inc    ebp
  41490b:	adc    eax,0x782568c7
  414910:	leave  
  414911:	jmp    0x41489b
  414913:	test   al,0xb3
  414915:	pop    esp
  414916:	add    eax,0x4f8a2b01
  41491b:	jae    0x4148c1
  41491d:	scas   eax,DWORD PTR es:[edi]
  41491e:	ds js  0x414956
  414921:	push   ebx
  414922:	jnp    0x4148f6
  414924:	sub    DWORD PTR [ecx-0x563e6e1c],eax
  41492a:	rcr    BYTE PTR [esi],1
  41492c:	adc    eax,0x950f7b16
  414931:	std    
  414932:	clc    
  414933:	mov    ds:0x6f30b728,eax
  414938:	shr    eax,1
  41493a:	imul   ecx,DWORD PTR [ecx+0x30e6cd4b],0x4b74aebb
  414944:	push   edx
  414945:	int    0xaa
  414947:	fistp  DWORD PTR [bp+si+0x43b6]
  41494c:	scas   al,BYTE PTR es:[edi]
  41494d:	repz push ebx
  41494f:	nop
  414950:	cs mov esp,0xce2ba42
  414956:	pop    ebx
  414958:	jl     0x4148dd
  41495a:	adc    eax,0x28b13111
  41495f:	enter  0x9057,0x40
  414963:	int    0x5c
  414965:	lods   al,BYTE PTR ds:[esi]
  414966:	(bad)
  41496a:	cdq    
  41496b:	aam    0xba
  41496d:	jns    0x4149ee
  41496f:	dec    ecx
  414970:	inc    eax
  414971:	cmp    bh,bh
  414973:	sub    ebp,DWORD PTR [edi]
  414975:	loopne 0x4149a5
  414977:	mov    ecx,0x399f9a34
  41497c:	cwde   
  41497d:	xchg   ebp,edi
  41497f:	sub    eax,DWORD PTR [edx-0x3e]
  414982:	pop    eax
  414983:	fild   DWORD PTR [ebx+0x3]
  414986:	fmul   QWORD PTR [ebp+ebx*2-0x48f4c1da]
  41498d:	pop    esi
  41498e:	jns    0x414a00
  414990:	mov    eax,0x4ed6c314
  414995:	outs   dx,DWORD PTR ds:[esi]
  414996:	shl    BYTE PTR [esi],0x50
  414999:	jne    0x41492f
  41499b:	pop    eax
  41499c:	and    al,BYTE PTR [ebp-0x32]
  41499f:	fs add eax,0x4a2b4a30
  4149a5:	call   0x5bb5:0x974237c4
  4149ac:	enter  0x60b3,0x34
  4149b0:	pop    esp
  4149b1:	cmp    DWORD PTR [eax-0x476ad51f],ebp
  4149b7:	cwde   
  4149b8:	sub    al,bl
  4149ba:	xor    BYTE PTR [ebx-0x6b1068cc],0x75
  4149c1:	sbb    DWORD PTR [edx],ecx
  4149c3:	xlat   BYTE PTR ds:[ebx]
  4149c4:	mov    dl,0x96
  4149c6:	jg     0x414977
  4149c8:	pop    esi
  4149c9:	lds    edi,FWORD PTR [edx]
  4149cb:	or     bl,BYTE PTR [ebp-0x39]
  4149ce:	sub    DWORD PTR [ebx+0x5e],edi
  4149d1:	jmp    0xd136:0x2ef9012f
  4149d8:	repnz pushw cs
  4149db:	adc    BYTE PTR [esi],cl
  4149dd:	je     0x4149f1
  4149df:	mov    eax,ds:0xcce3b7d9
  4149e4:	xchg   edx,eax
  4149e5:	or     eax,0x4e29f0f7
  4149ea:	and    BYTE PTR [ebx+0x10],ah
  4149ed:	xchg   ebp,eax
  4149ee:	xor    eax,0x4fac0a36
  4149f3:	lds    ebx,FWORD PTR [esi]
  4149f5:	(bad)  
  4149f6:	jg     0x4149aa
  4149f8:	dec    BYTE PTR [ecx+0x6761b295]
  4149fe:	or     eax,0x355a67ed
  414a03:	pop    ebx
  414a04:	(bad)  
  414a06:	adc    al,0x6d
  414a08:	aad    0xfe
  414a0a:	arpl   WORD PTR [esi*4-0x31073944],dx
  414a11:	adc    DWORD PTR [ebp+ebp*1-0x15d89886],edx
  414a18:	pop    ecx
  414a19:	ror    DWORD PTR [ecx],0x39
  414a1c:	mov    bh,0xc2
  414a1e:	fld    QWORD PTR [eax]
  414a20:	mov    ebp,0xd8702f0c
  414a25:	sbb    eax,0x36297a3f
  414a2a:	ret    0xd5be
  414a2d:	mov    eax,ds:0xd0087866
  414a32:	sub    BYTE PTR [ecx],dl
  414a34:	xor    al,0x2b
  414a36:	stc    
  414a37:	xchg   ch,dh
  414a39:	jbe    0x414a7f
  414a3b:	adc    bl,BYTE PTR [esi+0x5e]
  414a3e:	push   cs
  414a3f:	inc    edi
  414a40:	jmp    0x4149c2
  414a42:	inc    esi
  414a43:	aaa    
  414a44:	jb     0x414a67
  414a46:	(bad)  
  414a47:	imul   esp,DWORD PTR [ebx-0x9],0xa10e35e4
  414a4e:	sub    DWORD PTR ds:0x92178881,ebx
  414a54:	cmp    al,0xf5
  414a56:	repz loopne 0x414a28
  414a59:	pushf  
  414a5a:	mov    edi,0x5cf2cf20
  414a5f:	push   edx
  414a60:	cwde   
  414a61:	pop    eax
  414a62:	cmp    dl,BYTE PTR [ebp+ebx*8+0x53]
  414a66:	jmpw   0x334e
  414a6a:	sbb    BYTE PTR [ecx+0x27],0xff
  414a6e:	and    ch,ah
  414a70:	xor    DWORD PTR [ecx+0x40],0x33e6fb81
  414a77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a78:	cdq    
  414a79:	shl    BYTE PTR gs:[esi+0x30],1
  414a7d:	inc    ebx
  414a7e:	call   0xd2fbd107
  414a83:	iret   
  414a84:	je     0x414a6e
  414a86:	not    DWORD PTR [eax]
  414a88:	out    dx,al
  414a89:	imul   ebx,edx,0xe3e0b378
  414a8f:	je     0x414a1b
  414a91:	out    dx,eax
  414a92:	push   0xe5101baf
  414a97:	cmp    DWORD PTR [eax+edi*2-0x7a],0xffffffa5
  414a9c:	mov    ebx,0xf66f73b6
  414aa1:	cmp    esi,DWORD PTR [eax-0x9bcd114]
  414aa7:	getsec 
  414aa9:	cmp    al,0x85
  414aab:	inc    edx
  414aac:	adc    esi,ecx
  414aae:	outs   dx,BYTE PTR ds:[esi]
  414aaf:	and    al,BYTE PTR ds:0xa6594805
  414ab5:	xchg   esi,eax
  414ab6:	mov    es:0x3f29308e,al
  414abc:	sbb    esi,0x1
  414abf:	xor    eax,0x70c0ed04
  414ac4:	scas   eax,DWORD PTR es:[edi]
  414ac5:	or     eax,0xc3ad2a51
  414aca:	adc    BYTE PTR [ebx],ch
  414acc:	test   cl,al
  414ace:	dec    edx
  414acf:	lock outs dx,BYTE PTR ds:[esi]
  414ad1:	xor    BYTE PTR [ecx-0x22f1c288],bl
  414ad7:	retf   
  414ad8:	aam    0xfd
  414ada:	sbb    edi,esi
  414adc:	retf   
  414add:	sub    DWORD PTR [esi+0x9],ebx
  414ae0:	fs je  0x414b28
  414ae3:	pop    esi
  414ae4:	test   al,0x64
  414ae6:	je     0x414b65
  414ae8:	dec    ebp
  414ae9:	rcl    DWORD PTR [ebx+0x524c3ad9],cl
  414aef:	pop    edx
  414af0:	xor    al,BYTE PTR ds:0xb6d1f2c8
  414af6:	xor    BYTE PTR [ebx],0xc5
  414af9:	retf   
  414afa:	cld    
  414afb:	out    0x9d,eax
  414afd:	jle    0x414a9a
  414aff:	mov    ?,WORD PTR [ebp-0x26]
  414b02:	xchg   esp,eax
  414b03:	js     0x414ac7
  414b05:	jp     0x414b10
  414b07:	lock lock inc BYTE PTR [eax-0x7071c5cc]
  414b0f:	cmp    DWORD PTR [eax+0x4d6c038e],esi
  414b15:	in     eax,0x3f
  414b17:	sbb    eax,0x6d662e74
  414b1c:	pop    edx
  414b1d:	loopne 0x414b01
  414b1f:	out    0x41,eax
  414b21:	xchg   ecx,eax
  414b22:	and    cl,ah
  414b24:	cli    
  414b25:	add    eax,0x84ae36a3
  414b2a:	or     ah,BYTE PTR [ebx]
  414b2c:	out    0x5b,eax
  414b2e:	aaa    
  414b2f:	xchg   ebx,eax
  414b30:	dec    ebx
  414b31:	sub    BYTE PTR [ecx-0x34],dl
  414b34:	out    dx,eax
  414b35:	pushf  
  414b36:	icebp  
  414b37:	jbe    0x414b1c
  414b39:	call   0xeb92:0x21018250
  414b40:	pop    edi
  414b41:	inc    esp
  414b42:	bound  edx,QWORD PTR [ecx]
  414b44:	out    0x52,al
  414b46:	mov    esp,ds
  414b48:	mov    dl,0x91
  414b4a:	fist   DWORD PTR [edx]
  414b4c:	mov    ch,0x59
  414b4e:	xor    DWORD PTR [esp+esi*4-0x62299f39],eax
  414b55:	mov    ds:0xcc636414,al
  414b5a:	inc    ecx
  414b5b:	(bad)  
  414b5d:	scas   al,BYTE PTR es:[edi]
  414b5e:	pop    ss
  414b5f:	dec    eax
  414b60:	lock mov cl,0x61
  414b63:	je     0x414bb8
  414b65:	cmp    DWORD PTR [esi],esi
  414b67:	and    BYTE PTR [ebx-0x5acd8aca],dh
  414b6d:	popa   
  414b6e:	pushf  
  414b6f:	or     al,0x24
  414b71:	push   ss
  414b72:	outs   dx,BYTE PTR ds:[esi]
  414b73:	cmp    al,0xd7
  414b75:	inc    edi
  414b76:	cmp    al,0x8e
  414b78:	xchg   edi,eax
  414b79:	into   
  414b7a:	xchg   edi,eax
  414b7c:	mov    edx,0x3ded7929
  414b81:	das    
  414b82:	fwait
  414b83:	int3   
  414b84:	(bad)  
  414b85:	fmul   QWORD PTR [esp+eax*2]
  414b88:	test   cl,ch
  414b8a:	mov    ss,WORD PTR [eax+0x3]
  414b8d:	sbb    ebp,edi
  414b8f:	jge    0x414c07
  414b91:	inc    ebp
  414b92:	jle    0x414b1f
  414b94:	enter  0xc967,0x8b
  414b98:	ja     0x414b5c
  414b9a:	dec    edx
  414b9b:	mov    esi,0xef85ea8
  414ba0:	popf   
  414ba1:	jb     0x414bfb
  414ba3:	(bad)  
  414ba4:	out    0x75,eax
  414ba6:	mov    ch,0x4c
  414ba8:	pusha  
  414ba9:	scas   al,BYTE PTR es:[edi]
  414baa:	(bad)  
  414bab:	aad    0x6c
  414bad:	out    0x66,eax
  414baf:	fmulp  st(6),st
  414bb1:	(bad)  
  414bb2:	outs   dx,DWORD PTR ds:[esi]
  414bb3:	out    dx,eax
  414bb4:	(bad)  
  414bb5:	into   
  414bb6:	stos   DWORD PTR es:[edi],eax
  414bb7:	pop    edi
  414bb8:	inc    cx
  414bba:	pop    edx
  414bbb:	cmp    ah,BYTE PTR [esi+0x4c]
  414bbe:	stos   BYTE PTR es:[edi],al
  414bbf:	and    DWORD PTR [ebx-0x2f],esi
  414bc2:	out    0x2c,eax
  414bc4:	add    DWORD PTR ds:0xc31da900,edi
  414bca:	ror    BYTE PTR [edx],0x81
  414bcd:	adc    dh,bl
  414bcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bd0:	into   
  414bd1:	cld    
  414bd2:	je     0x414bdd
  414bd4:	lock inc eax
  414bd6:	xchg   esi,eax
  414bd7:	cmp    eax,esp
  414bd9:	jmp    0x414b9b
  414bdb:	enter  0x524c,0xab
  414bdf:	xor    edi,DWORD PTR [esi+0x7fd92492]
  414be5:	mov    DWORD PTR [esi+0x71],edx
  414be8:	or     eax,0x25d495e7
  414bed:	retf   0x752c
  414bf0:	sub    eax,0xa3f53416
  414bf5:	es or  al,0x31
  414bf8:	out    dx,al
  414bf9:	nop
  414bfa:	repnz adc al,0x5f
  414bfd:	out    0x41,al
  414bff:	inc    edi
  414c00:	ret    0x10a6
  414c03:	add    al,0x2f
  414c05:	mov    edi,0x931fddcb
  414c0a:	sub    eax,DWORD PTR [ebx]
  414c0c:	mov    ds:0xe235dc7e,al
  414c11:	dec    DWORD PTR [edi-0x30d81e35]
  414c17:	sub    eax,DWORD PTR [ebx+0x26]
  414c1a:	ins    DWORD PTR es:[edi],dx
  414c1b:	pop    edx
  414c1c:	or     eax,0x74a04968
  414c21:	fdivp  st(7),st
  414c23:	imul   ecx,DWORD PTR [ebx-0x2b379cbd],0xffffffbb
  414c2a:	xchg   ebx,eax
  414c2b:	push   esi
  414c2c:	push   ebp
  414c2d:	mov    esp,0x1fd6ba2
  414c32:	xchg   esp,eax
  414c33:	retf   0x17a9
  414c36:	sbb    al,0x4a
  414c38:	xchg   ebx,eax
  414c39:	xor    edi,DWORD PTR gs:[edx-0x65]
  414c3d:	dec    eax
  414c3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c3f:	sub    al,0xc1
  414c41:	stc    
  414c42:	lods   eax,DWORD PTR ds:[esi]
  414c43:	iret   
  414c44:	lods   al,BYTE PTR ds:[esi]
  414c45:	and    esp,DWORD PTR gs:[eax]
  414c48:	adc    DWORD PTR [di+0x1f],eax
  414c4c:	lods   al,BYTE PTR ds:[esi]
  414c4d:	pop    ss
  414c4e:	cld    
  414c4f:	bound  esp,QWORD PTR [ebp-0x3f9ca0ab]
  414c55:	adc    DWORD PTR [edi+0x2cee83b3],esi
  414c5b:	xchg   edi,eax
  414c5c:	dec    ecx
  414c5d:	fiadd  WORD PTR [ecx-0x5207c1be]
  414c63:	imul   DWORD PTR [eax+edx*4-0x16]
  414c67:	push   cs
  414c68:	fisub  DWORD PTR [eax+edx*2-0x3cf9a231]
  414c6f:	sbb    ch,BYTE PTR [ebx-0x1e]
  414c72:	lea    edi,[ebx+ecx*2-0x6e0b453d]
  414c79:	scas   eax,DWORD PTR es:[edi]
  414c7a:	xchg   ebx,eax
  414c7b:	pop    esp
  414c7c:	and    al,0x6e
  414c7e:	popa   
  414c7f:	inc    esi
  414c80:	in     al,0x14
  414c82:	xchg   ecx,eax
  414c83:	sub    DWORD PTR [ebx-0x6e],0x2f
  414c87:	shl    DWORD PTR [di+0x549f],cl
  414c8c:	sub    bh,BYTE PTR [esi+0xdac3237]
  414c92:	loope  0x414c1b
  414c94:	sub    al,0xc8
  414c96:	sub    DWORD PTR [ebx+0x2c],esp
  414c99:	ret    0x789d
  414c9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c9d:	mov    ch,0xad
  414c9f:	test   DWORD PTR [edi-0x6f2a0ffb],ecx
  414ca5:	pop    esp
  414ca6:	mov    edx,0xd29b457b
  414cab:	pop    eax
  414cac:	(bad)  
  414cad:	call   0x7f08:0xbb3b2de1
  414cb4:	adc    ebp,edi
  414cb6:	mov    ds:0xd2fb35d1,eax
  414cbb:	pop    ebp
  414cbc:	(bad)  
  414cbe:	(bad)  
  414cbf:	in     al,0xf6
  414cc1:	popf   
  414cc2:	mov    ds:0xb6a1397,al
  414cc7:	pop    esp
  414cc8:	into   
  414cc9:	xor    al,0x55
  414ccc:	neg    DWORD PTR [eax-0x5f12ffde]
  414cd2:	dec    esi
  414cd3:	jg     0x414ca2
  414cd5:	mov    eax,ds:0xc621c7e9
  414cda:	out    0xbd,al
  414cdc:	or     al,0x76
  414cde:	inc    esp
  414cdf:	xchg   edx,eax
  414ce0:	inc    eax
  414ce1:	jb     0x414c80
  414ce3:	pop    eax
  414ce4:	rcl    DWORD PTR [ebp+ebx*2-0x758608d4],1
  414ceb:	imul   esi,ebp,0xffffffe4
  414cee:	ror    BYTE PTR [edi+0x6d],cl
  414cf1:	and    BYTE PTR [ecx],ah
  414cf3:	jl     0x414c83
  414cf5:	sub    esi,ebx
  414cf7:	cli    
  414cf8:	or     BYTE PTR [ebp-0x2d270937],ah
  414cfe:	cli    
  414cff:	jb     0x414cd6
  414d01:	aas    
  414d02:	mov    bh,0x75
  414d04:	push   0xffffffa8
  414d06:	sbb    DWORD PTR [esi-0x39],edx
  414d09:	sbb    eax,0x2f088f55
  414d0e:	loopne 0x414cd3
  414d10:	mov    ah,0xae
  414d12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d13:	lds    esi,FWORD PTR [eax+0x20]
  414d16:	mov    ebp,0xb72ae4d6
  414d1b:	stc    
  414d1c:	add    DWORD PTR [edx],esp
  414d1e:	push   edi
  414d1f:	push   esi
  414d20:	lods   eax,DWORD PTR ds:[esi]
  414d21:	xchg   edx,edi
  414d23:	out    dx,al
  414d24:	cmp    DWORD PTR [ebp+0x2d],ecx
  414d27:	jmp    0x414d29
  414d29:	int    0xa4
  414d2b:	jbe    0x414da1
  414d2d:	stos   BYTE PTR es:[edi],al
  414d2e:	jecxz  0x414ced
  414d30:	and    DWORD PTR [esi+edi*1],esp
  414d33:	ds adc eax,0xb6cf0e22
  414d39:	imul   edx,DWORD PTR [ebx+0x4b],0x74
  414d3d:	push   edx
  414d3e:	lods   eax,DWORD PTR ds:[esi]
  414d3f:	jl     0x414cf6
  414d41:	jp     0x414d42
  414d43:	adc    eax,0x2cf99007
  414d48:	lea    ecx,[ecx-0x1b]
  414d4b:	popa   
  414d4c:	push   edi
  414d4d:	icebp  
  414d4e:	mov    ds:0x9905f3f5,eax
  414d53:	mov    dl,0x7f
  414d55:	repnz sbb esp,DWORD PTR [ebx-0x4cb20fd6]
  414d5c:	pop    es
  414d5d:	lods   al,BYTE PTR ds:[esi]
  414d5e:	mov    cl,BYTE PTR [edx]
  414d60:	pop    es
  414d61:	mov    ebx,0x4c91ce26
  414d66:	push   esi
  414d67:	or     BYTE PTR [edx-0x1a],ah
  414d6a:	pop    es
  414d6b:	popa   
  414d6c:	fnstcw WORD PTR [ebp-0x62]
  414d6f:	repz jne 0x414d09
  414d72:	inc    edi
  414d73:	mov    eax,0x9c86abba
  414d78:	test   DWORD PTR [esi+0x78c7d511],0xbf85e866
  414d82:	aad    0xfb
  414d84:	inc    edx
  414d85:	add    al,0x3e
  414d87:	or     eax,0xf6c90c0d
  414d8c:	push   edi
  414d8d:	out    dx,eax
  414d8e:	(bad)  [eax-0x6c09b827]
  414d94:	fadd   st(6),st
  414d96:	sbb    BYTE PTR [ebp+0x6f4e331c],bh
  414d9c:	xchg   BYTE PTR [esi],bl
  414d9e:	test   al,0xd5
  414da0:	jmp    FWORD PTR [ebp+0x41]
  414da3:	cmp    DWORD PTR [edi],eax
  414da5:	or     edi,DWORD PTR [ebx]
  414da7:	pop    ss
  414da8:	pop    eax
  414da9:	mov    bl,0x6
  414dab:	xor    dh,BYTE PTR [ebp+ecx*8-0x2a2b7b6]
  414db2:	out    dx,al
  414db3:	pop    ebx
  414db4:	xchg   esi,eax
  414db5:	xor    bh,BYTE PTR [ebp-0x26934db0]
  414dbb:	xchg   ebp,eax
  414dbc:	test   DWORD PTR [edx-0x6b],edi
  414dbf:	and    BYTE PTR [esi-0xda9a5bd],al
  414dc5:	pushf  
  414dc6:	mov    cl,0x73
  414dc8:	inc    esi
  414dc9:	cmp    DWORD PTR [ecx],esi
  414dcb:	or     cl,BYTE PTR [ebp+0x63]
  414dce:	je     0x414dd5
  414dd0:	cdq    
  414dd1:	jo     0x414d75
  414dd3:	xor    ecx,DWORD PTR [edx-0x63]
  414dd6:	mul    BYTE PTR [esi-0x65dead81]
  414ddc:	test   eax,0x69184cb3
  414de1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414de2:	xor    bh,BYTE PTR [edi+0x16]
  414de5:	add    BYTE PTR [ecx+0x78808cf1],dh
  414deb:	push   cs
  414dec:	cmc    
  414ded:	sbb    DWORD PTR [edi+0x2277c1d2],ebx
  414df3:	dec    ebx
  414df4:	mov    ch,cl
  414df6:	imul   eax,DWORD PTR [esp+esi*1+0x531dac62],0xf9e2e0bb
  414e01:	pop    esp
  414e02:	mov    BYTE PTR [ecx],bh
  414e04:	fisub  DWORD PTR [esi+0x60]
  414e07:	pushf  
  414e08:	xchg   ebp,eax
  414e09:	repnz xchg ebx,eax
  414e0b:	xor    dh,bh
  414e0d:	sbb    edi,DWORD PTR [edi+0xd155ddd]
  414e13:	adc    eax,0x3b37dca
  414e18:	inc    ebp
  414e19:	scas   eax,DWORD PTR es:[edi]
  414e1a:	inc    ecx
  414e1b:	push   ebx
  414e1c:	sbb    DWORD PTR [esi+0xf2bafed],ebx
  414e22:	or     al,BYTE PTR [eax]
  414e24:	mov    bl,0xef
  414e26:	xchg   esp,eax
  414e27:	fnstenv [eax]
  414e29:	or     al,BYTE PTR [eax+0xb3c6bd4]
  414e2f:	scas   eax,DWORD PTR es:[edi]
  414e30:	test   BYTE PTR [esp+eiz*4],bh
  414e33:	mul    esp
  414e35:	sub    eax,0x601d0b5a
  414e3a:	stc    
  414e3b:	jle    0x414e2c
  414e3d:	enter  0x1e5e,0x5
  414e41:	mov    eax,0x824e209f
  414e46:	mov    al,ds:0xdda1f858
  414e4b:	call   0x7500:0x51891d6d
  414e52:	inc    esp
  414e53:	pop    edx
  414e54:	ja     0x414ec4
  414e56:	fwait
  414e57:	xchg   ebp,eax
  414e58:	pop    edi
  414e59:	sub    DWORD PTR [ecx+0x1d220006],eax
  414e5f:	pop    esp
  414e60:	addr16 pushf 
  414e62:	adc    ecx,DWORD PTR [edx+0x5]
  414e65:	sub    BYTE PTR [edi+0x5aedcc3c],cl
  414e6b:	sub    ah,BYTE PTR [ebp+0x2b3eabdd]
  414e71:	jno    0x414e33
  414e73:	shl    BYTE PTR [ebx+edx*4],1
  414e76:	and    BYTE PTR [ecx-0x53],0x8e
  414e7a:	jae    0x414e2d
  414e7c:	neg    edi
  414e7e:	sbb    eax,0xf6f1c4b5
  414e83:	jb     0x414e08
  414e85:	sahf   
  414e86:	nop
  414e87:	xchg   esi,edi
  414e89:	pop    esp
  414e8a:	pop    ss
  414e8b:	mov    eax,ds:0x41cbcc7d
  414e90:	mov    bh,0xfa
  414e92:	mov    ebx,DWORD PTR [eax+0x71]
  414e95:	ss mov edx,0x77880eb2
  414e9b:	push   0x63009855
  414ea0:	dec    edx
  414ea1:	(bad)  
  414ea2:	add    al,0x9b
  414ea4:	pop    esp
  414ea5:	sbb    eax,0xd176071c
  414eaa:	loopne 0x414f1a
  414eac:	jmp    esp
  414eae:	sub    DWORD PTR [ecx-0x38d28767],0x8cba4309
  414eb8:	lods   al,BYTE PTR ds:[esi]
  414eb9:	out    dx,eax
  414eba:	call   0x453e5e1c
  414ebf:	test   BYTE PTR gs:[ecx],0xbd
  414ec3:	fidivr DWORD PTR [esi+0x53]
  414ec6:	fcmovbe st,st(6)
  414ec8:	and    edi,esp
  414eca:	stc    
  414ecb:	xor    DWORD PTR [eax],eax
  414ecd:	push   0x43c96184
  414ed2:	inc    eax
  414ed3:	xor    DWORD PTR [ecx],eax
  414ed5:	out    dx,al
  414ed6:	inc    esi
  414ed7:	loope  0x414efb
  414ed9:	cld    
  414eda:	call   0x7654:0x4e7e21b
  414ee1:	mov    fs,ecx
  414ee3:	mov    esp,0x2b72ad60
  414ee8:	sbb    DWORD PTR [ebp+edi*2-0x6d],ecx
  414eec:	pop    eax
  414eed:	xchg   edi,eax
  414eee:	test   BYTE PTR [esi+0x7e],dh
  414ef1:	or     edx,DWORD PTR [edx]
  414ef3:	loopne 0x414efd
  414ef5:	fistp  QWORD PTR [esi-0x5f6d026e]
  414efb:	jb     0x414eca
  414efd:	ret    0x6295
  414f00:	lea    eax,ds:0x269058f2
  414f06:	je     0x414ed7
  414f08:	mov    ?,WORD PTR [edi-0x1b]
  414f0b:	pusha  
  414f0c:	sbb    ch,BYTE PTR [ecx-0x42]
  414f0f:	mov    edx,esi
  414f11:	or     ch,BYTE PTR [eax]
  414f13:	mov    ds:0xaf15ec37,al
  414f18:	ret    0xb0fe
  414f1b:	jle    0x414ee5
  414f1d:	shr    ebx,1
  414f1f:	lock or BYTE PTR [ebp-0x1e],bl
  414f23:	mov    ebx,0x9df785ae
  414f28:	sub    ch,ah
  414f2a:	push   ecx
  414f2b:	push   0xbfea9eb3
  414f30:	xor    eax,0xa89c5935
  414f35:	cld    
  414f36:	push   ebx
  414f37:	fistp  DWORD PTR [edx+ebp*2+0x48112ac5]
  414f3e:	sub    eax,0x76245838
  414f43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f44:	cld    
  414f45:	cmp    al,0x35
  414f47:	and    esi,DWORD PTR [ecx]
  414f49:	or     ah,al
  414f4b:	stos   BYTE PTR es:[edi],al
  414f4c:	add    BYTE PTR [ecx-0x3a],al
  414f4f:	jo     0x414f78
  414f51:	out    0xcd,al
  414f53:	jl     0x414f0c
  414f55:	push   cs
  414f56:	inc    ecx
  414f57:	cmp    BYTE PTR [ebx+0x2e72e68d],dl
  414f5d:	stc    
  414f5e:	sahf   
  414f5f:	popa   
  414f60:	or     cl,dl
  414f62:	fcom   st(5)
  414f64:	add    cl,BYTE PTR [eax+0x2d31e8ea]
  414f6a:	push   ss
  414f6b:	add    DWORD PTR cs:[edi-0x7693a077],ecx
  414f72:	icebp  
  414f73:	mov    WORD PTR [ecx+0x1d],fs
  414f76:	cmp    ebp,DWORD PTR [eax-0x38]
  414f79:	repnz daa 
  414f7b:	pop    ebp
  414f7c:	jae    0x414f0f
  414f7e:	mov    ds,eax
  414f80:	stos   BYTE PTR es:[edi],al
  414f81:	call   0x35f5d6e
  414f86:	fcomp  QWORD PTR [ebx+0x64fdbdac]
  414f8d:	lea    ebp,[ebx]
  414f8f:	in     al,0x40
  414f91:	dec    ecx
  414f92:	xlat   BYTE PTR ds:[ebx]
  414f93:	out    0xcf,eax
  414f95:	shl    BYTE PTR [ebp+0x57249d85],cl
  414f9b:	mov    ah,0xf8
  414f9d:	test   BYTE PTR [ecx-0x55],dh
  414fa0:	lahf   
  414fa1:	pusha  
  414fa2:	and    dh,bl
  414fa4:	push   ebx
  414fa5:	cmp    BYTE PTR [ebx+0x6c5c4dc2],ch
  414fab:	ins    DWORD PTR es:[edi],dx
  414fac:	pop    eax
  414fad:	jl     0x414f88
  414faf:	inc    eax
  414fb0:	pop    eax
  414fb1:	jno    0x414fc2
  414fb3:	fist   WORD PTR ds:0x49372268
  414fb9:	(bad)  
  414fba:	popa   
  414fbb:	jp     0x41501a
  414fbd:	mov    cl,0x41
  414fbf:	or     dh,BYTE PTR [ecx]
  414fc1:	sub    DWORD PTR [edi+0x30],ebp
  414fc4:	imul   ebp,esi,0xffffff8f
  414fc7:	xor    edx,eax
  414fc9:	or     DWORD PTR ds:0x8dfe46c4,ebx
  414fcf:	mov    dl,0x86
  414fd1:	out    0xb,eax
  414fd3:	adc    edi,ecx
  414fd5:	jo     0x415000
  414fd7:	hlt    
  414fd8:	test   DWORD PTR [edi-0x61d33459],0x4baca498
  414fe2:	in     al,dx
  414fe3:	cli    
  414fe4:	addr16 jo 0x414fc3
  414fe7:	sbb    eax,0x2350bff
  414fec:	mov    BYTE PTR [eax+ecx*2+0x4a],bl
  414ff0:	xchg   esi,eax
  414ff1:	and    al,0x8e
  414ff3:	and    edx,DWORD PTR [eax-0x2389ce8a]
  414ff9:	test   eax,0xba551401
  414ffe:	daa    
  414fff:	dec    esi
  415000:	dec    ebx
  415001:	cmp    BYTE PTR [esp+eax*2],0xaf
  415005:	inc    ecx
  415006:	mov    bl,0xc7
  415008:	popf   
  415009:	pop    eax
  41500a:	push   edx
  41500b:	mov    cl,0x12
  41500d:	mov    esi,0x46c8fa4
  415012:	into   
  415013:	jnp    0x415089
  415015:	adc    cl,dh
  415017:	mov    DWORD PTR [ecx-0x60e67f7b],esp
  41501d:	ja     0x414fb8
  41501f:	add    al,0x39
  415021:	ins    BYTE PTR es:[edi],dx
  415022:	jns    0x41504d
  415024:	jo     0x414fd4
  415026:	pushf  
  415027:	fs jae 0x41505f
  41502a:	mov    edi,0x5bd92ac1
  41502f:	scas   al,BYTE PTR es:[edi]
  415030:	pop    ecx
  415031:	das    
  415032:	push   eax
  415033:	ret    
  415034:	test   DWORD PTR [ebx],esi
  415036:	int3   
  415037:	sbb    bh,BYTE PTR [eax]
  415039:	or     cl,BYTE PTR ss:[ecx+0x3e373891]
  415040:	ror    DWORD PTR [esp+ebp*1-0x4c2be62f],cl
  415047:	arpl   ax,bx
  415049:	push   esp
  41504a:	rcr    ebp,0x14
  41504d:	push   ebp
  41504e:	in     eax,0xb1
  415050:	adc    BYTE PTR [ecx-0x34010b1c],ah
  415056:	or     dl,BYTE PTR [edx]
  415058:	sub    BYTE PTR [esi],bl
  41505a:	cwde   
  41505b:	enter  0x99c2,0xc0
  41505f:	(bad)  
  415060:	int3   
  415061:	xchg   edx,eax
  415062:	repnz imul esp,DWORD PTR ss:[ebp+edx*4+0x74f84279],0xfffffff0
  41506c:	xchg   ebp,eax
  41506d:	xor    bl,BYTE PTR [edx-0x2fcdaf32]
  415073:	popf   
  415074:	add    bl,BYTE PTR [esi+eiz*1-0x2eda3ef1]
  41507b:	(bad)  
  41507c:	int3   
  41507d:	jge    0x415074
  41507f:	push   ss
  415080:	aam    0x9e
  415082:	sbb    ebp,edi
  415084:	out    dx,eax
  415085:	add    bl,al
  415087:	imul   esi,esp,0x2a
  41508a:	pop    esp
  41508b:	mov    edi,0xc00e5e5
  415090:	out    dx,eax
  415091:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415092:	dec    edi
  415093:	mov    ebp,0xf22c351d
  415098:	inc    esp
  415099:	stc    
  41509a:	fmul   QWORD PTR [ebp+0x679680e9]
  4150a0:	or     bh,BYTE PTR ds:0x6e43c9e3
  4150a6:	ins    BYTE PTR es:[edi],dx
  4150a7:	sti    
  4150a8:	data16 sahf 
  4150aa:	(bad)  
  4150ac:	jmp    DWORD PTR [ecx+0x320069f3]
  4150b2:	mov    esp,0x414ccccd
  4150b7:	cmp    BYTE PTR [edi],0x97
  4150ba:	pushf  
  4150bb:	in     al,dx
  4150bc:	sub    al,0x61
  4150be:	cld    
  4150bf:	repnz aad 0x39
  4150c2:	mov    bl,0x1f
  4150c4:	sub    eax,0x6f5b19e
  4150c9:	sub    DWORD PTR [eax+ebp*4-0x61],esp
  4150cd:	or     DWORD PTR ds:0xb5866975,edi
  4150d3:	out    dx,al
  4150d4:	push   ebx
  4150d5:	outs   dx,DWORD PTR ds:[esi]
  4150d6:	stos   BYTE PTR es:[edi],al
  4150d7:	sbb    al,0x8e
  4150d9:	and    DWORD PTR [ebx],0xe
  4150dc:	aam    0x5f
  4150de:	loopne 0x41514f
  4150e0:	pop    ebp
  4150e1:	enter  0x8b51,0x6b
  4150e5:	jp     0x4150f6
  4150e7:	and    eax,0x43bf2de9
  4150ec:	div    ch
  4150ee:	cmp    bh,BYTE PTR [esi-0x3d]
  4150f1:	repz mov eax,0x948efe3
  4150f7:	sub    eax,esi
  4150f9:	frstor [edx-0x525d2d40]
  4150ff:	imul   ebx,DWORD PTR [ecx-0x4524d1e6],0xffffff8b
  415106:	sub    BYTE PTR ds:0xf7895283,bh
  41510c:	mov    ds:0xac0db8d7,al
  415111:	mov    edi,0xa32adfab
  415116:	pop    ss
  415117:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415118:	outs   dx,DWORD PTR ds:[esi]
  415119:	stos   BYTE PTR es:[edi],al
  41511a:	push   esi
  41511b:	cmp    ebx,DWORD PTR fs:[ebx+0x2b]
  41511f:	sub    ebp,DWORD PTR ds:0xe4c57f4a
  415125:	pusha  
  415126:	inc    eax
  415127:	inc    esi
  415128:	leave  
  415129:	dec    esp
  41512a:	pavgw  mm6,QWORD PTR [ecx]
  41512d:	aas    
  41512e:	mov    dh,cl
  415130:	cmp    DWORD PTR [edi-0x30],0x45bededf
  415137:	aad    0xe5
  415139:	pop    edi
  41513a:	adc    DWORD PTR [esi-0x26],0xe6f09b04
  415141:	xchg   edx,esi
  415143:	aaa    
  415144:	push   ebp
  415145:	into   
  415146:	push   es
  415147:	adc    BYTE PTR [ebx],ch
  415149:	mov    ebx,0x8878d56b
  41514e:	loope  0x41515d
  415150:	mov    esp,0x7f54a316
  415155:	pop    eax
  415156:	lea    edi,[edx+edi*2+0xc]
  41515a:	hlt    
  41515b:	adc    BYTE PTR ds:0x614e3d9b,bl
  415161:	pop    ss
  415162:	repz shr esi,0x95
  415166:	jecxz  0x4150f4
  415168:	call   0xccb0c335
  41516d:	add    al,0xc9
  41516f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415170:	sti    
  415171:	and    BYTE PTR [ecx],0xef
  415174:	gs ins BYTE PTR es:[edi],dx
  415176:	dec    ebp
  415177:	out    dx,eax
  415178:	lods   eax,DWORD PTR ds:[esi]
  415179:	xchg   ebx,eax
  41517a:	jne    0x4151f2
  41517c:	jecxz  0x4151e4
  41517e:	outs   dx,BYTE PTR ds:[esi]
  41517f:	mov    ecx,0x268eebb2
  415184:	push   0x819f7bb
  415189:	xchg   ecx,eax
  41518a:	lods   al,BYTE PTR ds:[esi]
  41518b:	mov    eax,ds:0x3a4917fb
  415190:	mov    ah,0x88
  415192:	xchg   ebp,eax
  415193:	mov    eax,ds:0x86800e81
  415198:	xchg   ecx,eax
  415199:	fiadd  DWORD PTR [ebx+0x1c]
  41519c:	adc    DWORD PTR [ebx+ecx*4-0x3f],eax
  4151a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151a1:	push   ds
  4151a2:	or     al,0xd0
  4151a4:	jb     0x415202
  4151a6:	loop   0x4151cd
  4151a8:	inc    edx
  4151a9:	(bad)  
  4151aa:	rcl    BYTE PTR [esi-0x6590496b],0xc7
  4151b1:	retf   
  4151b2:	(bad)  
  4151b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151b4:	or     esp,DWORD PTR [ecx+0x3b]
  4151b7:	(bad)  [eax-0x20]
  4151ba:	iret   
  4151bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151bc:	mov    WORD PTR [ebx+esi*2-0x239f12be],ss
  4151c3:	xchg   DWORD PTR [edx],ebp
  4151c5:	or     ebp,DWORD PTR [esi-0x3e713f80]
  4151cb:	mov    al,ds:0x67853aa2
  4151d0:	push   eax
  4151d1:	cmp    dl,cl
  4151d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151d4:	cli    
  4151d5:	or     BYTE PTR [eax+eiz*2+0x47a32b21],bl
  4151dc:	and    ebp,DWORD PTR [edi+0x43]
  4151df:	mov    bh,0xb5
  4151e1:	dec    ebx
  4151e2:	loopne 0x4151d6
  4151e4:	fldcw  WORD PTR [esi+0x48a1c2a7]
  4151ea:	mov    dl,0xae
  4151ec:	out    0xff,eax
  4151ee:	in     eax,dx
  4151ef:	mov    esp,0x31675f2a
  4151f4:	leave  
  4151f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151f6:	push   ebx
  4151f7:	add    eax,0x71fbb49a
  4151fc:	push   es
  4151fd:	and    BYTE PTR [esi],dl
  4151ff:	enter  0xa41f,0x7d
  415203:	popf   
  415204:	sahf   
  415205:	jecxz  0x4151c9
  415207:	popa   
  415208:	jmp    0x6930bdeb
  41520d:	cmp    ebp,DWORD PTR fs:[edi]
  415210:	out    dx,eax
  415211:	retf   
  415212:	pop    ebp
  415213:	sahf   
  415214:	popf   
  415215:	add    al,0xb3
  415217:	aaa    
  415218:	push   0xbf3e66e0
  41521d:	mov    eax,0xefccc2a5
  415222:	mul    cl
  415224:	mov    bl,0xe7
  415226:	jle    0x4151f0
  415228:	xchg   edi,eax
  415229:	jmp    0x9db5fc55
  41522e:	repnz xor edi,DWORD PTR [edi+0x27]
  415232:	inc    edi
  415233:	mov    eax,0xeb6eaae2
  415238:	inc    esp
  415239:	adc    dh,BYTE PTR [edx+0x35]
  41523c:	xchg   BYTE PTR [eax-0x6],cl
  41523f:	shl    DWORD PTR [ebp+0x728b0134],1
  415245:	jmp    0x9ab1:0x51453f55
  41524c:	jge    0x415229
  41524e:	xchg   edx,eax
  41524f:	jl     0x41526b
  415251:	fsincos 
  415253:	jle    0x41529d
  415255:	test   BYTE PTR [ebx],bh
  415257:	ficomp WORD PTR [eax]
  415259:	push   es
  41525a:	test   DWORD PTR [ecx],edi
  41525c:	repnz into 
  41525e:	mov    edx,0x385a3d2c
  415263:	and    edx,DWORD PTR ds:0x5880ab87
  415269:	test   BYTE PTR [ebx+0x7bf4f632],bh
  41526f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415270:	pop    eax
  415271:	sar    BYTE PTR [ebx-0x7c],1
  415274:	stos   DWORD PTR es:[edi],eax
  415275:	inc    edx
  415276:	push   0x32a39496
  41527b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41527c:	pop    ebp
  41527d:	not    BYTE PTR [edi]
  41527f:	fcmovb st,st(4)
  415281:	scas   al,BYTE PTR es:[edi]
  415282:	gs nop
  415284:	scas   al,BYTE PTR es:[edi]
  415285:	ret    0x43cd
  415288:	jge    0x4152dc
  41528a:	xchg   ebx,eax
  41528b:	mov    ecx,0xfdcead7c
  415290:	add    dh,BYTE PTR [edi-0x67e996a7]
  415296:	js     0x4152eb
  415298:	ds dec edx
  41529a:	test   ch,bh
  41529c:	add    DWORD PTR [esi-0x44],ebx
  41529f:	push   ebx
  4152a0:	mov    bh,0x23
  4152a2:	cmp    BYTE PTR [ebp-0x421c9ac7],dh
  4152a8:	or     eax,0x34e64acf
  4152ad:	pop    eax
  4152ae:	pop    esp
  4152af:	imul   DWORD PTR [ebp+0x2cec49b]
  4152b5:	xchg   ebx,eax
  4152b6:	repz sbb al,bh
  4152b9:	iret   
  4152ba:	xor    bl,BYTE PTR [eax-0x1a759daa]
  4152c0:	and    ah,BYTE PTR [edx+0x2bbe57b6]
  4152c6:	dec    edi
  4152c7:	pushf  
  4152c8:	sbb    eax,DWORD PTR [edx-0x36720cf5]
  4152ce:	xchg   edx,eax
  4152cf:	sub    DWORD PTR [ecx+eiz*8+0x72],eax
  4152d3:	mov    al,0x4c
  4152d5:	mov    bh,0xff
  4152d7:	adc    eax,0x417014
  4152dc:	mov    DWORD PTR [ebp-0x2c],eax
  4152df:	movzx  eax,WORD PTR [ebp-0x2c]
  4152e3:	cmp    eax,0x539
  4152e8:	jne    0x415319
  4152ea:	mov    DWORD PTR [ebp-0x14],0xe0d
  4152f1:	lea    ecx,[ebp-0x28]
  4152f4:	push   ecx
  4152f5:	call   DWORD PTR ds:0x417018
  4152fb:	mov    DWORD PTR [ebp-0x60],eax
  4152fe:	mov    DWORD PTR [ebp-0x54],0x3a
  415305:	mov    BYTE PTR [ebp-0x34],0x0
  415309:	mov    DWORD PTR [ebp-0x8],0x5e3a7d44
  415310:	mov    DWORD PTR [ebp-0x68],0x122d67
  415317:	jmp    0x41532e
  415319:	mov    BYTE PTR ds:0x417038,0x0
  415320:	push   0x42cfc8
  415325:	call   DWORD PTR ds:0x417018
  41532b:	mov    DWORD PTR [ebp-0x2c],eax
  41532e:	push   0x0
  415330:	call   DWORD PTR ds:0x417018
  415336:	mov    DWORD PTR [ebp-0x2c],eax
  415339:	push   DWORD PTR ds:0x417018
  41533f:	pop    edx
  415340:	mov    DWORD PTR [ebp-0x6c],edx
  415343:	lea    edx,[ebp-0x40]
  415346:	push   edx
  415347:	mov    eax,DWORD PTR [ebp-0x60]
  41534a:	push   eax
  41534b:	call   DWORD PTR ds:0x417024
  415351:	mov    DWORD PTR [ebp-0x44],eax
  415354:	push   DWORD PTR [ebp-0x30]
  415357:	push   0x1000
  41535c:	mov    eax,DWORD PTR [ebp-0x14]
  41535f:	add    eax,0x23
  415362:	add    eax,0x23
  415365:	push   eax
  415366:	xor    eax,eax
  415368:	push   eax
  415369:	mov    ecx,DWORD PTR [ebp-0x44]
  41536c:	call   ecx
  41536e:	push   eax
  41536f:	pop    ecx
  415370:	mov    DWORD PTR [ebp-0x4],ecx
  415373:	mov    ecx,DWORD PTR [ebp-0x68]
  415376:	sub    ecx,0xdae0b
  41537c:	mov    DWORD PTR [ebp-0x68],ecx
  41537f:	cmp    DWORD PTR [ebp-0x4],0x0
  415383:	jne    0x41539d
  415385:	push   0x0
  415387:	push   0x0
  415389:	call   0x416a5c
  41538e:	push   0x0
  415390:	call   DWORD PTR ds:0x41702c
  415396:	mov    BYTE PTR ds:0x447f40,0x0
  41539d:	mov    edx,DWORD PTR [ebp-0x4]
  4153a0:	add    edx,DWORD PTR [ebp-0x14]
  4153a3:	mov    eax,DWORD PTR [ebp-0x8]
  4153a6:	mov    DWORD PTR [edx],eax
  4153a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4153ab:	add    ecx,DWORD PTR [ebp-0x54]
  4153ae:	mov    DWORD PTR [ebp-0x5c],ecx
  4153b1:	mov    edx,DWORD PTR ds:0x417024
  4153b7:	mov    DWORD PTR [ebp-0x4c],edx
  4153ba:	mov    eax,DWORD PTR [ebp-0x4]
  4153bd:	add    eax,DWORD PTR [ebp-0x14]
  4153c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4153c3:	mov    DWORD PTR [eax+0x4],ecx
  4153c6:	mov    edx,DWORD PTR [ebp-0x4]
  4153c9:	add    edx,DWORD PTR [ebp-0x14]
  4153cc:	mov    DWORD PTR [ebp-0xc],edx
  4153cf:	cmp    DWORD PTR [ebp-0x68],0x0
  4153d3:	jbe    0x4153f0
  4153d5:	mov    eax,DWORD PTR [ebp-0xc]
  4153d8:	push   eax
  4153d9:	mov    ecx,DWORD PTR [ebp-0x14]
  4153dc:	push   ecx
  4153dd:	mov    edx,DWORD PTR [ebp-0x2c]
  4153e0:	add    edx,DWORD PTR [ebp-0x68]
  4153e3:	push   edx
  4153e4:	mov    eax,DWORD PTR [ebp-0x4]
  4153e7:	push   eax
  4153e8:	call   0x41696e
  4153ed:	add    esp,0x10
  4153f0:	cmp    DWORD PTR [ebp-0x5c],0x0
  4153f4:	je     0x415404
  4153f6:	push   DWORD PTR [ebp-0x4c]
  4153f9:	push   DWORD PTR [ebp-0x6c]
  4153fc:	mov    ecx,DWORD PTR [ebp-0x5c]
  4153ff:	push   ecx
  415400:	jmp    ecx
  415402:	jmp    0x41540a
  415404:	mov    ecx,DWORD PTR [ebp+0x8]
  415407:	mov    DWORD PTR [ebp-0x18],ecx
  41540a:	mov    eax,0x1
  41540f:	mov    esp,ebp
  415411:	pop    ebp
  415412:	ret    
  415413:	push   ebp
  415414:	mov    ebp,esp
  415416:	pop    ebp
  415417:	ret    
  415418:	push   ebp
  415419:	mov    ebp,esp
  41541b:	sub    esp,0x54
  41541e:	mov    DWORD PTR [ebp-0x34],0x0
  415425:	mov    DWORD PTR [ebp-0x4],0x0
  41542c:	mov    DWORD PTR [ebp-0x50],0x0
  415433:	mov    DWORD PTR [ebp-0x4c],0x0
  41543a:	mov    DWORD PTR [ebp-0x30],0x0
  415441:	lea    eax,[ebp-0x38]
  415444:	push   eax
  415445:	push   0x8
  415447:	call   DWORD PTR ds:0x417020
  41544d:	call   DWORD PTR ds:0x417014
  415453:	mov    DWORD PTR [ebp-0x30],eax
  415456:	lea    ecx,[ebp-0x48]
  415459:	push   ecx
  41545a:	call   DWORD PTR ds:0x417010
  415460:	mov    edx,DWORD PTR [ebp-0x34]
  415463:	push   edx
  415464:	call   0x415493
  415469:	add    esp,0x4
  41546c:	call   0x41695f
  415471:	mov    DWORD PTR [ebp-0x54],0x0
  415478:	jmp    0x415483
  41547a:	mov    eax,DWORD PTR [ebp-0x54]
  41547d:	add    eax,0x1
  415480:	mov    DWORD PTR [ebp-0x54],eax
  415483:	cmp    DWORD PTR [ebp-0x54],0x64
  415487:	jae    0x41548b
  415489:	jmp    0x41547a
  41548b:	xor    eax,eax
  41548d:	mov    esp,ebp
  41548f:	pop    ebp
  415490:	ret    0x10
  415493:	push   ebp
  415494:	mov    ebp,esp
  415496:	sub    esp,0x3c
  415499:	push   esi
  41549a:	mov    DWORD PTR [ebp-0x3c],0x0
  4154a1:	mov    DWORD PTR [ebp-0x38],0x0
  4154a8:	mov    DWORD PTR [ebp-0x30],0x0
  4154af:	mov    DWORD PTR [ebp-0x24],0x0
  4154b6:	mov    DWORD PTR [ebp-0x1c],0x0
  4154bd:	mov    DWORD PTR [ebp-0x28],0x0
  4154c4:	mov    DWORD PTR [ebp-0x2c],0x448fc8
  4154cb:	mov    DWORD PTR [ebp-0x24],0xdf78528
  4154d2:	mov    DWORD PTR [ebp-0x34],0x0
  4154d9:	mov    eax,DWORD PTR [ebp-0x24]
  4154dc:	mov    DWORD PTR [ebp-0x20],eax
  4154df:	mov    DWORD PTR [ebp-0x4],0x0
  4154e6:	mov    ecx,DWORD PTR ds:0x417014
  4154ec:	mov    DWORD PTR [ebp-0x4],ecx
  4154ef:	push   0x0
  4154f1:	push   0x4e
  4154f3:	push   0x1e
  4154f5:	push   0x0
  4154f7:	push   0xffffffff
  4154f9:	call   DWORD PTR ds:0x41701c
  4154ff:	test   eax,eax
  415501:	je     0x41693e
  415507:	sub    DWORD PTR [edx],0x96ea740b
  41550d:	dec    edx
  41550e:	and    ebx,DWORD PTR [ecx]
  415510:	pop    ebp
  415511:	loop   0x4154c2
  415513:	mov    al,0x33
  415515:	jo     0x4154b2
  415517:	int3   
  415518:	jmp    0x1d649fb3
  41551d:	pop    ebp
  41551e:	loop   0x41550f
  415520:	dec    edi
  415521:	int3   
  415522:	jo     0x4154bf
  415524:	je     0x41550f
  415526:	xchg   esi,eax
  415527:	dec    edx
  415528:	and    ebx,DWORD PTR ds:0x4fafe25d
  41552e:	int3   
  41552f:	jo     0x4154cc
  415531:	je     0x41551c
  415533:	xchg   esi,eax
  415534:	dec    edx
  415535:	and    ebx,DWORD PTR ds:0x4fafe25d
  41553b:	int3   
  41553c:	jo     0x4154d9
  41553e:	je     0x415529
  415540:	xchg   esi,eax
  415541:	dec    edx
  415542:	and    edx,DWORD PTR ds:0x41afe25c
  415548:	ror    edx,cl
  41554a:	xchg   ebp,eax
  41554b:	je     0x4155aa
  41554d:	lahf   
  41554e:	xchg   DWORD PTR [edx],eax
  415550:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415551:	pop    esp
  415552:	scas   al,BYTE PTR es:[edi]
  415553:	bound  ebp,QWORD PTR [esi-0x68]
  415556:	sbb    dl,dh
  415558:	pop    es
  415559:	leave  
  41555a:	out    0x38,al
  41555c:	dec    esp
  41555d:	jp     0x41558e
  41555f:	add    edx,0x6f
  415562:	scas   eax,DWORD PTR es:[edi]
  415563:	adc    ebp,esi
  415565:	sbb    al,BYTE PTR [esi+0x78416ae2]
  41556b:	jge    0x4154fd
  41556d:	fisub  DWORD PTR [ecx]
  41556f:	in     al,dx
  415570:	sbb    ebp,esi
  415572:	push   esp
  415573:	lods   eax,DWORD PTR ds:[esi]
  415574:	fstp   DWORD PTR [ecx]
  415576:	add    esi,DWORD PTR [eax+0x32]
  415579:	xchg   dl,cl
  41557b:	popa   
  41557c:	sar    DWORD PTR [ebp-0x6f],0x50
  415580:	jmp    0x1d64a01b
  415585:	pop    ebp
  415586:	loop   0x41555d
  415588:	sbb    dl,0xfe
  41558b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41558c:	ficom  DWORD PTR [ecx+0x658d744b]
  415592:	sbb    ah,0x1
  415595:	aaa    
  415596:	adc    DWORD PTR [ebp-0x58],edx
  415599:	xchg   edx,eax
  41559a:	xor    al,0xb4
  41559c:	in     al,0x5b
  41559e:	sar    BYTE PTR [eax-0x2f],0x7d
  4155a2:	xchg   edx,eax
  4155a3:	jae    0x415583
  4155a5:	jecxz  0x415550
  4155a7:	int3   
  4155a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155a9:	cdq    
  4155aa:	dec    BYTE PTR [eax]
  4155ac:	repz call 0x4f46:0xa3141e72
  4155b4:	inc    edi
  4155b5:	out    dx,al
  4155b6:	xchg   edi,eax
  4155b7:	adc    al,0xcb
  4155b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155ba:	aas    
  4155bb:	cwde   
  4155bc:	loope  0x415572
  4155be:	lods   eax,DWORD PTR ds:[esi]
  4155bf:	lods   al,BYTE PTR ds:[esi]
  4155c0:	mov    ds:0x8d6f4b02,al
  4155c5:	gs sbb ah,0x1
  4155c9:	adc    DWORD PTR ss:[ecx],edi
  4155cc:	xor    al,0xc
  4155ce:	xor    al,0x54
  4155d0:	les    ecx,FWORD PTR [ecx-0x40]
  4155d3:	ins    DWORD PTR es:[edi],dx
  4155d4:	dec    esp
  4155d5:	xlat   BYTE PTR ds:[ebx]
  4155d6:	xchg   edx,eax
  4155d7:	jmp    0x90eaa21f
  4155dc:	cmp    BYTE PTR [edx],dh
  4155de:	(bad)  
  4155df:	cmp    BYTE PTR [esi+0x0],ch
  4155e2:	jb     0x415654
  4155e4:	bound  ecx,QWORD PTR [eax]
  4155e6:	inc    esi
  4155e7:	push   ecx
  4155e8:	fidiv  DWORD PTR [ebx-0x69]
  4155eb:	sbb    al,0xb3
  4155ed:	and    eax,0xaf26fd3f
  4155f2:	sbb    BYTE PTR [ebp+0x4a4b91da],ah
  4155f8:	and    ebx,DWORD PTR ds:0x4fafe25d
  4155fe:	int3   
  4155ff:	jo     0x41559c
  415601:	je     0x4155ec
  415603:	xchg   esi,eax
  415604:	dec    edx
  415605:	and    ebx,DWORD PTR ds:0x4fafe25d
  41560b:	int3   
  41560c:	jo     0x4155a9
  41560e:	je     0x4155c9
  415610:	ror    DWORD PTR [edx+0x23],cl
  415613:	push   ecx
  415614:	pop    esp
  415615:	loope  0x4155c6
  415617:	sub    DWORD PTR [edx-0x168b2bc3],eax
  41561d:	xchg   esi,eax
  41561e:	dec    edx
  41561f:	and    ebx,DWORD PTR ds:0x4f4fe25d
  415625:	into   
  415626:	jno    0x4155b8
  415628:	jne    0x41560d
  41562a:	xchg   esi,eax
  41562b:	dec    edx
  41562c:	rcr    DWORD PTR [ecx],0x5d
  41562f:	loop   0x41565c
  415631:	dec    ecx
  415632:	int3   
  415633:	jo     0x4155d0
  415635:	je     0x415620
  415637:	aad    0xf7
  415639:	and    ebx,DWORD PTR ds:0x4faff25d
  41563f:	int3   
  415640:	jo     0x4155e0
  415642:	je     0x41562d
  415644:	xchg   esi,eax
  415645:	or     ah,BYTE PTR [ebx]
  415647:	sbb    eax,0x4fafe24d
  41564c:	into   
  41564d:	jo     0x4155ea
  41564f:	jno    0x41563a
  415651:	xchg   edi,eax
  415652:	dec    edx
  415653:	and    ebx,DWORD PTR ds:0x4faae25d
  415659:	int    0x70
  41565b:	fwait
  41565c:	je     0x415647
  41565e:	xchg   esi,eax
  41565f:	dec    edx
  415660:	adc    edx,DWORD PTR [ecx]
  415662:	pop    ebp
  415663:	loop   0x415610
  415665:	dec    edi
  415666:	int3   
  415667:	jp     0x4156ce
  415669:	jo     0x415654
  41566b:	xchg   esp,eax
  41566c:	dec    edx
  41566d:	arpl   WORD PTR [ebp+ebx*2-0x33b0401e],bx
  415674:	pusha  
  415675:	fwait
  415676:	je     0x415661
  415678:	xchg   esi,eax
  415679:	pop    edx
  41567a:	and    ebx,DWORD PTR ds:0x4fafe24d
  415680:	int3   
  415681:	jo     0x41561e
  415683:	fs jmp 0x1d64a11f
  415689:	pop    ebp
  41568a:	loop   0x41563b
  41568c:	dec    edi
  41568d:	int3   
  41568e:	jo     0x41562f
  415690:	je     0x415677
  415692:	xchg   esi,eax
  415693:	adc    esp,DWORD PTR [eax]
  415695:	sbb    eax,0x446fe25d
  41569a:	int3   
  41569b:	and    eax,0x96e974a4
  4156a0:	dec    edx
  4156a1:	and    ebx,DWORD PTR ds:0x4fafe25d
  4156a7:	int3   
  4156a8:	jo     0x415645
  4156aa:	je     0x415695
  4156ac:	xchg   esi,eax
  4156ad:	dec    edx
  4156ae:	and    ebx,DWORD PTR ds:0x57afee7d
  4156b4:	int3   
  4156b5:	jo     0x415652
  4156b7:	je     0x4156a2
  4156b9:	xchg   esi,eax
  4156ba:	dec    edx
  4156bb:	and    ebx,DWORD PTR ds:0x4fafe25d
  4156c1:	int3   
  4156c2:	jo     0x41565f
  4156c4:	je     0x4156af
  4156c6:	xchg   esi,eax
  4156c7:	dec    edx
  4156c8:	and    ebx,DWORD PTR ds:0x4fafe25d
  4156ce:	int3   
  4156cf:	jo     0x41566c
  4156d1:	je     0x4156bc
  4156d3:	xchg   esi,eax
  4156d4:	dec    edx
  4156d5:	and    ebx,DWORD PTR ds:0x4fafe25d
  4156db:	int3   
  4156dc:	jo     0x415679
  4156de:	je     0x4156c9
  4156e0:	xchg   esi,eax
  4156e1:	dec    edx
  4156e2:	and    ebx,DWORD PTR ds:0x4fafe25d
  4156e8:	int3   
  4156e9:	jo     0x415686
  4156eb:	je     0x4156d6
  4156ed:	xchg   esi,eax
  4156ee:	dec    edx
  4156ef:	and    ebx,DWORD PTR ds:0x4fafe25d
  4156f5:	int3   
  4156f6:	jo     0x415693
  4156f8:	je     0x4156e3
  4156fa:	xchg   esi,eax
  4156fb:	dec    edx
  4156fc:	and    ebx,DWORD PTR ds:0x4fafe25d
  415702:	int3   
  415703:	jo     0x4156a0
  415705:	je     0x4156f0
  415707:	mov    eax,0x2965463e
  41570c:	loop   0x4156bd
  41570e:	dec    edi
  41570f:	int3   
  415710:	rcl    BYTE PTR [eax+0x4a86e974],0x23
  415717:	sbb    eax,0x4fafe63b
  41571c:	enter  0x9b70,0x24
  415720:	lods   al,BYTE PTR ds:[esi]
  415721:	aad    0x78
  415723:	ja     0x415777
  415725:	pop    ebp
  415726:	loop   0x4156d7
  415728:	dec    edi
  415729:	int3   
  41572a:	jo     0x4156e7
  41572c:	je     0x415717
  41572e:	jbe    0x415794
  415730:	push   ecx
  415731:	outs   dx,BYTE PTR ds:[esi]
  415732:	das    
  415733:	sub    DWORD PTR [edi-0x48f33b1],0x8a96e974
  41573d:	sub    BYTE PTR ds:0x4fafb05d,bl
  415743:	int3   
  415744:	sbb    bl,BYTE PTR [edi+0x4a96e974]
  41574a:	and    ebx,DWORD PTR ds:0x4fafe25d
  415750:	int3   
  415751:	jo     0x4156ee
  415753:	push   esp
  415754:	jmp    0x6f4f01ef
  415759:	cmp    BYTE PTR [esi+0x70cc2cc0],cl
  41575f:	fwait
  415760:	jbe    0x41574b
  415762:	xchg   esi,eax
  415763:	dec    edx
  415764:	add    edx,DWORD PTR [ecx]
  415766:	pop    ebp
  415767:	loop   0x415716
  415769:	dec    edi
  41576a:	int3   
  41576b:	jo     0x415794
  41576d:	jo     0x415758
  41576f:	xchg   esi,eax
  415770:	dec    edx
  415771:	and    ebx,DWORD PTR ds:0x4fafe25d
  415777:	int3   
  415778:	jo     0x415715
  41577a:	je     0x415725
  41577c:	xchg   esi,eax
  41577d:	dec    edx
  41577e:	jecxz  0x41579d
  415780:	pop    ebp
  415781:	loop   0x415732
  415783:	dec    edi
  415784:	int3   
  415785:	jo     0x415722
  415787:	je     0x415772
  415789:	xchg   esi,eax
  41578a:	dec    edx
  41578b:	and    ebx,DWORD PTR ds:0x4fafe25d
  415791:	int3   
  415792:	jo     0x41572f
  415794:	je     0x41577f
  415796:	xchg   esi,eax
  415797:	dec    edx
  415798:	and    ebx,DWORD PTR ds:0x4fafe25d
  41579e:	int3   
  41579f:	jo     0x41573c
  4157a1:	je     0x41578c
  4157a3:	xchg   esi,eax
  4157a4:	dec    edx
  4157a5:	and    ebx,DWORD PTR ds:0x4fafe25d
  4157ab:	int3   
  4157ac:	jo     0x415749
  4157ae:	je     0x415799
  4157b0:	xchg   esi,eax
  4157b1:	dec    edx
  4157b2:	and    ebx,DWORD PTR ds:0x4fafe25d
  4157b8:	int3   
  4157b9:	jo     0x415756
  4157bb:	je     0x4157a6
  4157bd:	xchg   esi,eax
  4157be:	dec    edx
  4157bf:	and    ebx,DWORD PTR ds:0x4fafe25d
  4157c5:	int3   
  4157c6:	jo     0x415763
  4157c8:	je     0x4157b3
  4157ca:	xchg   esi,eax
  4157cb:	dec    edx
  4157cc:	and    ebx,DWORD PTR ds:0x4fafe25d
  4157d2:	int3   
  4157d3:	jo     0x415770
  4157d5:	je     0x4157c0
  4157d7:	xchg   esi,eax
  4157d8:	dec    edx
  4157d9:	and    ebx,DWORD PTR ds:0x4fafe25d
  4157df:	int3   
  4157e0:	jo     0x41577d
  4157e2:	je     0x4157cd
  4157e4:	xchg   esi,eax
  4157e5:	dec    edx
  4157e6:	and    ebx,DWORD PTR ds:0x4fafe25d
  4157ec:	int3   
  4157ed:	jo     0x41578a
  4157ef:	je     0x4157da
  4157f1:	xchg   esi,eax
  4157f2:	dec    edx
  4157f3:	and    ebx,DWORD PTR ds:0x4fafe25d
  4157f9:	int3   
  4157fa:	jo     0x415797
  4157fc:	je     0x4157e7
  4157fe:	xchg   esi,eax
  4157ff:	dec    edx
  415800:	and    ebx,DWORD PTR ds:0x4fafe25d
  415806:	int3   
  415807:	jo     0x4157a4
  415809:	je     0x4157f4
  41580b:	xchg   esi,eax
  41580c:	dec    edx
  41580d:	and    ebx,DWORD PTR ds:0x4fafe25d
  415813:	int3   
  415814:	jo     0x4157b1
  415816:	je     0x415801
  415818:	xchg   esi,eax
  415819:	dec    edx
  41581a:	and    ebx,DWORD PTR ds:0x4fafe25d
  415820:	int3   
  415821:	jo     0x4157be
  415823:	je     0x41580e
  415825:	xchg   esi,eax
  415826:	dec    edx
  415827:	and    ebx,DWORD PTR ds:0x4fafe25d
  41582d:	int3   
  41582e:	jo     0x4157cb
  415830:	je     0x41581b
  415832:	xchg   esi,eax
  415833:	dec    edx
  415834:	and    ebx,DWORD PTR ds:0x4fafe25d
  41583a:	int3   
  41583b:	jo     0x4157d8
  41583d:	je     0x415828
  41583f:	xchg   esi,eax
  415840:	dec    edx
  415841:	and    ebx,DWORD PTR ds:0x4fafe25d
  415847:	int3   
  415848:	jo     0x4157e5
  41584a:	je     0x415835
  41584c:	xchg   esi,eax
  41584d:	dec    edx
  41584e:	and    ebx,DWORD PTR ds:0x4fafe25d
  415854:	int3   
  415855:	jo     0x4157f2
  415857:	je     0x415842
  415859:	xchg   esi,eax
  41585a:	dec    edx
  41585b:	and    ebx,DWORD PTR ds:0x4fafe25d
  415861:	int3   
  415862:	jo     0x4157ff
  415864:	je     0x41584f
  415866:	xchg   esi,eax
  415867:	dec    edx
  415868:	and    ebx,DWORD PTR ds:0x4fafe25d
  41586e:	int3   
  41586f:	jo     0x41580c
  415871:	je     0x41585c
  415873:	xchg   esi,eax
  415874:	dec    edx
  415875:	and    ebx,DWORD PTR ds:0x4fafe25d
  41587b:	int3   
  41587c:	jo     0x415819
  41587e:	je     0x415869
  415880:	xchg   esi,eax
  415881:	dec    edx
  415882:	and    ebx,DWORD PTR ds:0x4fafe25d
  415888:	int3   
  415889:	jo     0x415826
  41588b:	je     0x415876
  41588d:	xchg   esi,eax
  41588e:	dec    edx
  41588f:	and    ebx,DWORD PTR ds:0x4fafe25d
  415895:	int3   
  415896:	jo     0x415833
  415898:	je     0x415883
  41589a:	xchg   esi,eax
  41589b:	dec    edx
  41589c:	and    ebx,DWORD PTR ds:0x4fafe25d
  4158a2:	int3   
  4158a3:	jo     0x415840
  4158a5:	je     0x415890
  4158a7:	xchg   esi,eax
  4158a8:	dec    edx
  4158a9:	and    ebx,DWORD PTR ds:0x4fafe25d
  4158af:	int3   
  4158b0:	jo     0x41584d
  4158b2:	je     0x41589d
  4158b4:	xchg   esi,eax
  4158b5:	dec    edx
  4158b6:	and    ebx,DWORD PTR ds:0x4fafe25d
  4158bc:	int3   
  4158bd:	jo     0x41585a
  4158bf:	je     0x4158aa
  4158c1:	xchg   esi,eax
  4158c2:	dec    edx
  4158c3:	and    ebx,DWORD PTR ds:0x4fafe25d
  4158c9:	int3   
  4158ca:	jo     0x415867
  4158cc:	je     0x4158b7
  4158ce:	xchg   esi,eax
  4158cf:	dec    edx
  4158d0:	and    ebx,DWORD PTR ds:0x4fafe25d
  4158d6:	int3   
  4158d7:	jo     0x415874
  4158d9:	je     0x4158c4
  4158db:	xchg   esi,eax
  4158dc:	dec    edx
  4158dd:	and    ebx,DWORD PTR ds:0x4fafe25d
  4158e3:	int3   
  4158e4:	jo     0x415881
  4158e6:	je     0x4158d1
  4158e8:	xchg   esi,eax
  4158e9:	dec    edx
  4158ea:	and    ebx,DWORD PTR ds:0x4fafe25d
  4158f0:	int3   
  4158f1:	jo     0x41588e
  4158f3:	je     0x4158de
  4158f5:	xchg   esi,eax
  4158f6:	dec    edx
  4158f7:	and    ebx,DWORD PTR ds:0x4fafe25d
  4158fd:	int3   
  4158fe:	jo     0x41589b
  415900:	je     0x4158eb
  415902:	xchg   esi,eax
  415903:	dec    edx
  415904:	and    ebx,DWORD PTR ds:0x44e1495d
  41590a:	int3   
  41590b:	pop    edi
  41590c:	fwait
  41590d:	je     0x415908
  41590f:	xchg   esi,eax
  415910:	dec    edx
  415911:	or     DWORD PTR [edi+0x129687],edi
  415917:	jmp    DWORD PTR [edx-0x50]
  41591a:	dec    edi
  41591b:	aam    0x79
  41591d:	push   DWORD PTR [ecx+0x5ebb141b]
  415923:	xchg   ebx,eax
  415924:	jg     0x415989
  415926:	fmul   QWORD PTR [edi+0x0]
  415929:	dec    esi
  41592a:	shl    DWORD PTR [ecx+0x6c],0x9f
  41592e:	sbb    al,ah
  415930:	fcom   DWORD PTR [edx-0x75cbb051]
  415936:	sti    
  415937:	test   eax,0xa178cc98
  41593c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41593d:	(bad)  
  41593e:	dec    esp
  41593f:	addr16 push sp
  415942:	shr    BYTE PTR [esi+0x1a512109],1
  415948:	cmp    dh,BYTE PTR [ebx]
  41594a:	cwde   
  41594b:	or     DWORD PTR [esi+0x28],0xffffff82
  41594f:	sbb    eax,0xec6d5d8f
  415954:	jge    0xf01e018d
  41595a:	imul   ebx,esi,0xffffffd3
  41595d:	cmp    ecx,edi
  41595f:	push   0x490df7e1
  415964:	outs   dx,BYTE PTR ds:[esi]
  415965:	pop    ebx
  415966:	lods   al,BYTE PTR ds:[esi]
  415967:	jp     0x415958
  415969:	into   
  41596a:	les    edi,FWORD PTR [edi+0x27]
  41596d:	pop    ebp
  41596e:	test   al,0xc4
  415970:	retf   
  415971:	repnz and ecx,DWORD PTR ds:0x625e21a3
  415978:	ss jb  0x415980
  41597b:	inc    ebp
  41597c:	test   edx,0xb85446ed
  415982:	out    0xd,al
  415984:	or     eax,0xbe045828
  415989:	jne    0x415916
  41598b:	sbb    bl,BYTE PTR [ebx+ebx*8+0x69]
  41598f:	jmp    0x75ae4a2f
  415994:	sbb    ecx,0x77
  415997:	call   0xa4858f62
  41599c:	push   esp
  41599d:	jae    0x41597f
  41599f:	data16 xor dh,ch
  4159a2:	mov    dl,bh
  4159a4:	adc    DWORD PTR [ebp-0x76],0x232c6052
  4159ab:	pop    edi
  4159ac:	test   eax,edx
  4159ae:	mov    bh,0x93
  4159b0:	push   cs
  4159b1:	jp     0x415a2e
  4159b3:	nop
  4159b4:	add    al,0x5a
  4159b6:	imul   edx,esp,0x758a6152
  4159bc:	jmp    0xa087bcb
  4159c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159c2:	mov    eax,0xe231d918
  4159c7:	jp     0x415987
  4159c9:	mov    edx,0x93ff4271
  4159ce:	arpl   WORD PTR [eax],dx
  4159d0:	pop    edi
  4159d1:	xor    al,0x3e
  4159d3:	xchg   ebx,eax
  4159d4:	push   esp
  4159d5:	aam    0xd
  4159d7:	pop    eax
  4159d8:	ds dec esi
  4159da:	add    al,0x13
  4159dc:	cmp    esi,eax
  4159de:	in     al,0xfd
  4159e0:	mov    eax,0x16323f26
  4159e5:	xor    eax,0x4213fba4
  4159ea:	xor    eax,0xefa21e00
  4159ef:	mov    cl,0x42
  4159f1:	bound  esp,QWORD PTR [ecx]
  4159f3:	xlat   BYTE PTR ds:[ebx]
  4159f4:	sub    bl,BYTE PTR [eax+0x1d]
  4159f7:	test   al,0xd4
  4159f9:	sar    BYTE PTR [ebx],1
  4159fb:	in     eax,dx
  4159fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159fd:	cli    
  4159fe:	mov    DWORD PTR [ebx],eax
  415a00:	test   DWORD PTR [edx],ebp
  415a02:	pop    ebp
  415a03:	inc    esp
  415a04:	inc    esp
  415a05:	cmp    eax,0xf38f8eb3
  415a0a:	(bad)  
  415a0b:	sbb    al,0x40
  415a0d:	jp     0x415a72
  415a0f:	arpl   WORD PTR [edx-0x10a91462],bx
  415a15:	popf   
  415a16:	fistp  QWORD PTR [eax-0x197a50be]
  415a1c:	mov    esp,0xdf9e4a88
  415a21:	nop
  415a22:	mov    BYTE PTR [eax+0x6a],dl
  415a25:	(bad)  
  415a26:	adc    cl,dh
  415a28:	pop    ds
  415a29:	scas   al,BYTE PTR es:[edi]
  415a2a:	push   cs
  415a2b:	mov    eax,ds:0xaab39789
  415a30:	fcomp  QWORD PTR [ebp-0x7f1539ae]
  415a36:	adc    al,0x41
  415a38:	xor    esi,DWORD PTR [esi+ebx*4]
  415a3b:	sbb    al,0xd5
  415a3d:	jg     0x415a9a
  415a3f:	xchg   ecx,eax
  415a40:	jae    0x415a21
  415a42:	mov    BYTE PTR [ebx-0x3dfa7a97],dl
  415a48:	cmp    al,0xee
  415a4a:	mov    eax,ds:0x5fd832ec
  415a4f:	(bad)  
  415a51:	dec    eax
  415a52:	int3   
  415a53:	or     DWORD PTR [edx-0x60a69729],esp
  415a59:	or     DWORD PTR [ecx],eax
  415a5b:	cmp    BYTE PTR [ecx+0x2f2c7892],bh
  415a61:	dec    eax
  415a62:	adc    cl,BYTE PTR [eax+edx*4]
  415a65:	rcr    esp,cl
  415a67:	(bad)  
  415a69:	adc    al,0xe8
  415a6b:	add    DWORD PTR [eax],esp
  415a6d:	lods   eax,DWORD PTR ds:[esi]
  415a6e:	jo     0x415a16
  415a70:	push   edi
  415a71:	xchg   edx,eax
  415a72:	rol    ebp,cl
  415a74:	mov    DWORD PTR [esi],0x3b10a057
  415a7a:	adc    DWORD PTR [eax],esp
  415a7c:	xor    bl,BYTE PTR [esi]
  415a7e:	and    al,BYTE PTR [edi]
  415a80:	xor    cl,BYTE PTR [edi]
  415a82:	sub    BYTE PTR [esi+ebx*4],ah
  415a85:	leave  
  415a86:	or     edi,ebp
  415a88:	js     0x415aa5
  415a8a:	push   edi
  415a8b:	dec    DWORD PTR [ebp+0x515b7279]
  415a91:	popf   
  415a92:	imul   ebx,edx,0xee3c6ba6
  415a98:	out    dx,al
  415a99:	or     eax,0x7ab76d2
  415a9e:	pop    edi
  415a9f:	ja     0x415a8e
  415aa1:	push   ss
  415aa2:	jo     0x415ad5
  415aa4:	mul    DWORD PTR [ebp+0x3165a05e]
  415aaa:	sbb    eax,0x2ef05839
  415aaf:	add    al,0x87
  415ab1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ab2:	cdq    
  415ab3:	inc    esp
  415ab4:	mov    esi,0x81a8e5cb
  415ab9:	xor    eax,esi
  415abb:	sub    ch,al
  415abd:	leave  
  415abe:	(bad)  
  415ac0:	fistp  QWORD PTR [edi-0x2b3116af]
  415ac6:	ret    
  415ac7:	add    ecx,ecx
  415ac9:	xchg   esi,eax
  415aca:	lahf   
  415acb:	leave  
  415acc:	dec    edx
  415acd:	cmp    bh,cl
  415acf:	mov    cl,0x39
  415ad1:	js     0x415b02
  415ad3:	loope  0x415afe
  415ad5:	inc    ebp
  415ad6:	dec    eax
  415ad7:	arpl   WORD PTR [edi+0x79db5cca],bx
  415add:	mov    eax,ds:0x60f46b8c
  415ae2:	cmp    eax,0xe3756668
  415ae7:	push   0xffffffec
  415ae9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415aea:	rcl    DWORD PTR [esi+0x8],1
  415aed:	mov    edi,0x8488ebf4
  415af2:	cmc    
  415af3:	cdq    
  415af4:	dec    eax
  415af5:	aaa    
  415af6:	hlt    
  415af7:	in     eax,0xfb
  415af9:	bound  edx,QWORD PTR [ebx+esi*2-0x6d]
  415afd:	jl     0x415b49
  415aff:	out    0x31,al
  415b01:	add    BYTE PTR [ecx-0x4f],al
  415b04:	push   0xa4e7e79f
  415b09:	shr    ecx,cl
  415b0b:	(bad)  
  415b0c:	sar    esi,1
  415b0e:	out    dx,al
  415b0f:	ja     0x415b7b
  415b11:	outs   dx,BYTE PTR ds:[esi]
  415b12:	lahf   
  415b13:	add    BYTE PTR [ecx-0x1],0x4
  415b17:	ja     0x415b43
  415b19:	fmul   st(3),st
  415b1b:	and    bh,0x13
  415b1e:	sbb    al,0x74
  415b20:	or     eax,0xa2d31610
  415b25:	inc    ebx
  415b26:	cdq    
  415b27:	mov    al,ch
  415b29:	xor    DWORD PTR ds:0xf6a7154a,esp
  415b2f:	outs   dx,DWORD PTR ds:[esi]
  415b30:	mov    dl,0x7c
  415b32:	inc    ebp
  415b33:	(bad)  
  415b34:	pop    esi
  415b35:	loop   0x415afe
  415b37:	jae    0x415ae8
  415b39:	pop    ebp
  415b3a:	mov    bl,0x53
  415b3c:	xor    al,0xa8
  415b3e:	inc    ebp
  415b3f:	mov    dl,BYTE PTR [eax+0x41]
  415b42:	out    dx,al
  415b43:	icebp  
  415b44:	push   es
  415b45:	cmc    
  415b46:	data16 mov WORD PTR [eax+0x55],fs
  415b4a:	jg     0x415b94
  415b4c:	dec    edx
  415b4d:	push   esp
  415b4e:	sahf   
  415b4f:	jns    0x415b3c
  415b51:	inc    esi
  415b52:	or     ah,bh
  415b54:	(bad)  
  415b55:	sub    ah,ch
  415b57:	push   edx
  415b58:	or     ebp,DWORD PTR [ebp-0x4c]
  415b5b:	shl    BYTE PTR [edx],1
  415b5d:	pop    edx
  415b5e:	pop    esp
  415b5f:	cmp    al,0x29
  415b61:	cdq    
  415b62:	fld    QWORD PTR [ebx+edi*4]
  415b65:	pusha  
  415b66:	cs cli 
  415b68:	imul   ebp,DWORD PTR [edi+0x21],0x5d822f82
  415b6f:	or     BYTE PTR [ecx+0x36f62f15],cl
  415b75:	test   eax,0x39767c9e
  415b7a:	js     0x415bb6
  415b7c:	icebp  
  415b7d:	inc    esp
  415b7e:	fiadd  DWORD PTR [edx]
  415b81:	xchg   edx,eax
  415b82:	test   al,0xd8
  415b84:	sub    DWORD PTR [esi+0x63],0x7bf0e10e
  415b8b:	mov    WORD PTR [edi],?
  415b8d:	das    
  415b8e:	addr16 inc ecx
  415b90:	jno    0x415b34
  415b92:	fsubr  DWORD PTR [edi+esi*8]
  415b95:	idiv   DWORD PTR [ebx-0x1babae56]
  415b9b:	cmp    edi,DWORD PTR [ebp+0x34413631]
  415ba1:	push   cs
  415ba2:	pop    edi
  415ba3:	out    dx,al
  415ba4:	mov    al,ds:0xd6109e1f
  415ba9:	push   ss
  415baa:	outs   dx,BYTE PTR ds:[esi]
  415bab:	adc    al,BYTE PTR [ecx+0x5c]
  415bae:	push   es
  415baf:	fst    QWORD PTR [eax+0x723c8975]
  415bb5:	sub    DWORD PTR [edx],edi
  415bb7:	mov    edx,0x6fc4bee6
  415bbc:	sub    cl,ch
  415bbe:	retf   
  415bbf:	scas   eax,DWORD PTR es:[edi]
  415bc0:	push   es
  415bc1:	ins    BYTE PTR es:[edi],dx
  415bc2:	xchg   esi,eax
  415bc3:	aam    0xc5
  415bc5:	sbb    al,BYTE PTR [edi+0x22]
  415bc8:	push   ecx
  415bc9:	sub    al,0xbd
  415bcb:	aaa    
  415bcc:	xchg   esi,eax
  415bcd:	inc    esp
  415bce:	and    cl,dh
  415bd0:	or     dh,al
  415bd2:	and    dh,dl
  415bd4:	mov    edi,0x7eb4db1c
  415bd9:	cwde   
  415bda:	bound  esp,QWORD PTR ds:0x95462da5
  415be0:	out    0xa6,eax
  415be2:	mov    eax,ds:0x1f8c6b48
  415be7:	jg     0x415c07
  415be9:	iret   
  415bea:	jne    0x415b8e
  415bec:	or     BYTE PTR [esi-0x1a],0xe4
  415bf0:	xchg   ecx,eax
  415bf1:	and    al,0xbc
  415bf3:	push   ebp
  415bf4:	inc    edi
  415bf5:	aaa    
  415bf6:	aam    0x7a
  415bf8:	add    eax,DWORD PTR [ebp+0x7f3dddd0]
  415bfe:	push   ds
  415bff:	cmp    DWORD PTR [ebp+eax*1-0x3],edx
  415c03:	push   cs
  415c04:	aam    0xa4
  415c06:	pop    ebx
  415c07:	sbb    bl,BYTE PTR [eax+0x7b2cf1e4]
  415c0d:	into   
  415c0e:	push   0x72feaa06
  415c13:	mov    ds:0x3d2537ae,eax
  415c18:	pop    esp
  415c19:	jbe    0x415c98
  415c1b:	mov    edi,0xd631fe08
  415c20:	leave  
  415c21:	mov    DWORD PTR [eax-0x65c9b6a4],0x1523fdbd
  415c2b:	in     eax,dx
  415c2c:	inc    esp
  415c2d:	mov    edx,0xd5a33de5
  415c32:	xchg   esp,eax
  415c33:	getsec 
  415c35:	outs   dx,DWORD PTR ds:[esi]
  415c36:	mov    ds:0x665613d1,eax
  415c3b:	xchg   esp,eax
  415c3c:	jb     0x415c85
  415c3e:	add    eax,0xc1cf1c4b
  415c43:	cmp    dh,ah
  415c45:	dec    ebp
  415c46:	gs into 
  415c48:	sbb    dh,bh
  415c4a:	cmp    BYTE PTR [ebx-0x27a611bb],0xb0
  415c51:	inc    ebp
  415c52:	mov    BYTE PTR [edx-0x19],al
  415c55:	retf   0x5340
  415c58:	mov    cl,0x0
  415c5a:	mov    cs,WORD PTR [esi]
  415c5c:	push   ecx
  415c5d:	inc    eax
  415c5e:	mov    ebx,0x447cee58
  415c63:	and    esp,DWORD PTR [ecx]
  415c65:	hlt    
  415c66:	ins    DWORD PTR es:[edi],dx
  415c67:	and    edx,esi
  415c69:	loop   0x415c9c
  415c6b:	stos   BYTE PTR es:[edi],al
  415c6c:	retf   0x57e3
  415c6f:	gs call 0x927f:0xe07b13ec
  415c77:	sub    BYTE PTR [esi-0x29],dl
  415c7a:	adc    BYTE PTR [edx],al
  415c7c:	or     eax,0x5480ad4
  415c81:	ret    0x8ade
  415c84:	add    eax,0xb61853d4
  415c89:	repnz or al,0x9e
  415c8c:	test   eax,0xbd4d8148
  415c91:	push   eax
  415c92:	xchg   ebx,eax
  415c93:	mov    BYTE PTR [ecx+0x68],ch
  415c96:	inc    edi
  415c97:	ins    DWORD PTR es:[edi],dx
  415c98:	aaa    
  415c99:	(bad)  
  415c9a:	xchg   ebp,eax
  415c9b:	mov    ds:0x965ade3f,eax
  415ca0:	icebp  
  415ca1:	call   0x478d:0x59e5fb96
  415ca8:	xchg   edi,eax
  415ca9:	inc    eax
  415caa:	mov    DWORD PTR [edx+0x50],esp
  415cad:	or     al,0xa3
  415caf:	lock cmp al,0x37
  415cb2:	shl    BYTE PTR ds:0x320bd204,0x19
  415cb9:	fidiv  WORD PTR ds:[ebx-0x47e20150]
  415cc0:	lods   eax,DWORD PTR ds:[esi]
  415cc1:	sbb    BYTE PTR [ebx-0x63],dl
  415cc4:	adc    esi,DWORD PTR [ecx+0x38]
  415cc7:	cdq    
  415cc8:	xchg   DWORD PTR [eax],ebp
  415cca:	inc    esi
  415ccb:	mov    esp,0x8966c5b9
  415cd0:	add    al,0x2b
  415cd2:	pop    ecx
  415cd3:	mov    cl,0x6e
  415cd5:	xchg   ebp,eax
  415cd6:	inc    ecx
  415cd7:	jnp    0x415c9a
  415cd9:	mov    eax,0xf75670e6
  415cde:	(bad)  
  415cdf:	lock js 0x415ccb
  415ce2:	xchg   esp,eax
  415ce3:	mov    cl,0x61
  415ce5:	loopne 0x415c8a
  415ce7:	xor    DWORD PTR ds:0xb59d4ecb,esi
  415ced:	mov    esi,cs
  415cef:	jns    0x415d5b
  415cf1:	adc    al,0xcc
  415cf3:	and    BYTE PTR [ecx+0x3f],bl
  415cf6:	mov    esp,0xcaa9bcb4
  415cfb:	pop    esp
  415cfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cfd:	aaa    
  415cfe:	push   esi
  415cff:	xor    eax,0x98bc7702
  415d04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d05:	mov    ax,di
  415d08:	dec    ebp
  415d09:	jo     0x415cf3
  415d0b:	inc    edi
  415d0c:	inc    ebp
  415d0d:	es scas eax,DWORD PTR es:[edi]
  415d0f:	xor    DWORD PTR ds:[eax-0x1fcebae1],ebp
  415d16:	std    
  415d17:	xor    eax,0x400554bb
  415d1c:	or     DWORD PTR [ebp-0x6be9b069],0x71ec29d0
  415d26:	jg     0x415cba
  415d28:	aaa    
  415d29:	pop    eax
  415d2a:	pop    esp
  415d2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d2c:	pop    edi
  415d2d:	aam    0x48
  415d2f:	shl    BYTE PTR [ebx+0x7f],1
  415d32:	clc    
  415d33:	fisttp QWORD PTR [edi+0x6a20267f]
  415d39:	jp     0x415d2a
  415d3b:	push   0xbc17ff9a
  415d40:	xor    dl,BYTE PTR [esi-0x79]
  415d43:	fisttp DWORD PTR [ecx-0x32]
  415d46:	pusha  
  415d47:	push   0x9fcb0a74
  415d4c:	mov    WORD PTR [eax+esi*8-0x51],gs
  415d50:	sbb    DWORD PTR [edi],esi
  415d52:	sahf   
  415d53:	pop    ebx
  415d54:	mov    WORD PTR [eax+edi*4+0x71],?
  415d58:	mov    ebp,0x7822ad89
  415d5d:	ret    
  415d5e:	int    0x5d
  415d60:	ja     0x415d27
  415d62:	sbb    edi,esp
  415d64:	test   eax,0x176ba8c
  415d69:	leave  
  415d6a:	sbb    eax,0x8b740cb7
  415d6f:	clc    
  415d70:	jle    0x415d3b
  415d72:	pusha  
  415d73:	test   DWORD PTR [ebx+esi*8],0x1ef6983b
  415d7a:	lea    edx,[edi]
  415d7c:	cmp    ebx,DWORD PTR ds:0x886ff6af
  415d82:	test   DWORD PTR ds:0x5dd37d2f,0xf57573a2
  415d8c:	or     cl,BYTE PTR [eax+edx*8+0xc]
  415d90:	lock inc ecx
  415d92:	cmp    edx,DWORD PTR [ebx+0x7aa6816]
  415d98:	pop    es
  415d99:	add    DWORD PTR [ecx+ecx*4+0x7c],edx
  415d9d:	jmp    FWORD PTR fs:[esi-0x2f]
  415da1:	sbb    eax,0xf018b5e2
  415da6:	jbe    0x415d98
  415da8:	xchg   esp,eax
  415da9:	mov    ah,0xe9
  415dab:	mov    ecx,0x800637ab
  415db0:	mov    eax,0x4d508411
  415db5:	scas   eax,DWORD PTR es:[edi]
  415db6:	mov    esi,0x7bb37901
  415dbb:	jecxz  0x415d75
  415dbd:	test   al,0xf1
  415dbf:	retf   
  415dc0:	sbb    eax,0xb2284c23
  415dc5:	adc    eax,edi
  415dc7:	aas    
  415dc8:	mov    esi,0x279cfd0
  415dcd:	cmp    al,0xe5
  415dcf:	aam    0xdb
  415dd1:	leave  
  415dd2:	sti    
  415dd3:	call   0x94fd5a97
  415dd8:	mov    bh,0x53
  415dda:	cli    
  415ddb:	jb     0x415e52
  415ddd:	lahf   
  415dde:	mov    ds:0x78a8ea53,eax
  415de3:	cmp    DWORD PTR [edi+eax*4],0xffffffef
  415de7:	sbb    DWORD PTR [edi],ebp
  415de9:	adc    cl,BYTE PTR [edx+0x4d6548eb]
  415def:	gs mov ecx,es
  415df2:	push   edi
  415df3:	(bad)  
  415df4:	mov    edx,0x2823b3cf
  415df9:	xchg   BYTE PTR [edi],ch
  415dfb:	xor    bh,BYTE PTR [edi+edx*8-0x6375ffc5]
  415e02:	rol    BYTE PTR [edx+0xc1ed1cc],cl
  415e08:	or     esi,DWORD PTR [esi]
  415e0a:	das    
  415e0b:	daa    
  415e0c:	pop    edi
  415e0d:	mov    bh,0x6d
  415e0f:	pushf  
  415e10:	retf   0xb3bd
  415e13:	jp     0x415e5e
  415e15:	dec    eax
  415e16:	retf   0x9140
  415e19:	inc    eax
  415e1a:	inc    ebx
  415e1b:	jl     0x415dc5
  415e1d:	(bad)
  415e20:	cmp    DWORD PTR [edi+0x40479dec],0x1b7c40f2
  415e2a:	nop
  415e2b:	cld    
  415e2c:	and    bh,BYTE PTR [edi]
  415e2e:	xchg   ebp,eax
  415e2f:	dec    edx
  415e30:	xchg   BYTE PTR [edi-0x1c],cl
  415e33:	test   DWORD PTR [ecx+edi*8],edx
  415e36:	in     eax,0xc7
  415e38:	mov    ecx,0xbb3d9b85
  415e3d:	dec    ebp
  415e3e:	les    edx,FWORD PTR [edx-0x1a566a11]
  415e44:	sub    DWORD PTR [edx-0x1324857f],esp
  415e4a:	and    cl,BYTE PTR [ecx-0x71]
  415e4d:	fldenv [ebp-0x4d]
  415e50:	lods   al,BYTE PTR ds:[esi]
  415e51:	jb     0x415ea3
  415e53:	mov    eax,0x5011398d
  415e58:	stos   DWORD PTR es:[edi],eax
  415e59:	pop    edi
  415e5a:	mov    DWORD PTR ds:0xb6662f9d,ecx
  415e60:	or     dl,BYTE PTR [esi-0x1c]
  415e63:	mov    al,0x38
  415e65:	clc    
  415e66:	push   ebx
  415e67:	sub    eax,0xf5dfcdc
  415e6c:	sar    DWORD PTR [eax-0x1f],cl
  415e6f:	pop    esi
  415e70:	push   esi
  415e71:	lock cmp eax,0x18b380bd
  415e77:	or     al,0xe6
  415e79:	dec    edi
  415e7a:	pushf  
  415e7b:	mov    ebx,0xeff5990a
  415e80:	push   0x7e
  415e82:	mov    eax,0x945cf46d
  415e87:	adc    BYTE PTR [ebx],ah
  415e89:	pusha  
  415e8a:	push   esp
  415e8b:	xchg   BYTE PTR [edi+0x25],dl
  415e8e:	push   eax
  415e8f:	dec    eax
  415e90:	sub    al,0xd9
  415e92:	ret    
  415e93:	pusha  
  415e94:	dec    esp
  415e95:	pop    edx
  415e96:	jno    0x415e34
  415e98:	(bad)  
  415e99:	mov    DWORD PTR [ecx],esp
  415e9b:	push   edx
  415e9c:	das    
  415e9d:	dec    ebp
  415e9e:	cli    
  415e9f:	mov    cl,0x1
  415ea1:	ret    0xa1e4
  415ea4:	xchg   edi,eax
  415ea5:	pop    DWORD PTR [ecx+esi*2+0x1526792d]
  415eac:	ret    
  415ead:	mov    al,BYTE PTR gs:[esi+0x21507fad]
  415eb4:	or     BYTE PTR [ecx+0x8],bl
  415eb7:	mov    dh,0xf6
  415eb9:	jbe    0x415e62
  415ebb:	call   0x6d21:0x800d4e3e
  415ec2:	loopne 0x415ecb
  415ec4:	and    ch,dh
  415ec6:	sahf   
  415ec7:	sti    
  415ec8:	jne    0x415ea6
  415eca:	sbb    DWORD PTR [edi],eax
  415ecc:	pop    es
  415ecd:	call   0x8a5d5bf8
  415ed2:	mov    ah,0x95
  415ed4:	cdq    
  415ed5:	(bad)  
  415ed6:	cdq    
  415ed7:	arpl   WORD PTR [ecx],dx
  415ed9:	sbb    edi,DWORD PTR [ebp-0x49]
  415edc:	pushf  
  415edd:	aas    
  415ede:	mov    al,0x6c
  415ee0:	and    al,0x3
  415ee2:	xchg   edi,eax
  415ee3:	outs   dx,DWORD PTR ds:[esi]
  415ee4:	mov    ah,0x16
  415ee6:	ret    
  415ee7:	sahf   
  415ee8:	lds    esi,FWORD PTR [ebp-0x58]
  415eeb:	xchg   ebx,eax
  415eec:	(bad)  
  415eed:	in     eax,dx
  415eee:	out    0xb5,al
  415ef0:	rol    esp,1
  415ef2:	mov    DWORD PTR [esi-0x23349ef5],ebp
  415ef8:	cli    
  415ef9:	cmp    DWORD PTR [ecx],eax
  415efb:	mov    ecx,0x233651e7
  415f00:	xchg   ecx,ecx
  415f02:	or     al,0xfb
  415f04:	iret   
  415f05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f06:	(bad)  
  415f07:	cmp    DWORD PTR [ecx],eax
  415f09:	icebp  
  415f0a:	push   esp
  415f0b:	or     ebx,DWORD PTR [ecx+0x76]
  415f0e:	xchg   esp,eax
  415f0f:	add    al,0xe6
  415f11:	sahf   
  415f12:	jns    0x415f6a
  415f14:	in     al,dx
  415f15:	(bad)  
  415f16:	repz xor edx,DWORD PTR [edx+0x26da9f0b]
  415f1d:	das    
  415f1e:	mov    bh,0xdf
  415f20:	mov    bh,BYTE PTR [edi-0x68]
  415f23:	add    cl,cl
  415f25:	mov    bl,BYTE PTR [eax-0x69231f88]
  415f2b:	cmp    DWORD PTR ds:0xa634a2e,ecx
  415f31:	pusha  
  415f32:	(bad)  
  415f34:	or     al,0xe
  415f36:	cmc    
  415f37:	xchg   edx,eax
  415f38:	iret   
  415f39:	xchg   esi,eax
  415f3a:	std    
  415f3b:	dec    esp
  415f3c:	mov    al,ds:0x4d6591c3
  415f41:	and    eax,0xec14d703
  415f46:	mov    al,0xe3
  415f48:	jne    0x415ed5
  415f4a:	stos   BYTE PTR es:[edi],al
  415f4b:	push   es
  415f4c:	mov    dh,0xcb
  415f4e:	and    ch,al
  415f50:	sub    BYTE PTR [esi+0x6b],bh
  415f53:	xchg   edx,eax
  415f54:	push   es
  415f55:	xchg   ebx,eax
  415f56:	dec    eax
  415f57:	or     eax,0xbb5a9fc5
  415f5c:	xchg   esp,eax
  415f5d:	addr16 cdq 
  415f5f:	dec    ax
  415f61:	loop   0x415f36
  415f63:	cmp    DWORD PTR [edi+0x4479607b],esp
  415f69:	pop    ss
  415f6a:	retf   0x8f0c
  415f6d:	or     ebp,esp
  415f6f:	pop    eax
  415f70:	push   ebp
  415f71:	push   0x3
  415f73:	fcomp  QWORD PTR [ecx+0x67]
  415f76:	sbb    ch,BYTE PTR [ecx+0x45]
  415f79:	add    cl,al
  415f7b:	push   eax
  415f7c:	leave  
  415f7d:	shl    ch,0x2f
  415f80:	(bad)  
  415f81:	mov    esp,0x796cec51
  415f86:	retf   
  415f87:	mov    eax,0xa7344ef4
  415f8d:	jbe    0x415f2b
  415f8f:	push   0xcbdc4083
  415f94:	jns    0x415f69
  415f96:	enter  0xa1a5,0x8e
  415f9a:	add    bh,BYTE PTR [ebx]
  415f9c:	dec    ebp
  415f9d:	sub    edi,DWORD PTR [ebx+0x5c]
  415fa0:	mov    dl,BYTE PTR [edi-0x6]
  415fa3:	dec    ebx
  415fa4:	cwde   
  415fa5:	push   edx
  415fa6:	cmp    al,0x51
  415fa8:	jecxz  0x415f9e
  415faa:	xchg   ecx,eax
  415fab:	cmp    ebx,DWORD PTR ds:0x893478a3
  415fb1:	pushf  
  415fb2:	jecxz  0x415fcd
  415fb4:	add    edi,DWORD PTR [esi]
  415fb6:	or     bh,dh
  415fb8:	xor    edx,edi
  415fba:	or     esp,ebp
  415fbc:	add    al,0x6
  415fbe:	xchg   ebp,eax
  415fbf:	mov    dh,0xa0
  415fc1:	and    eax,0xa964feb4
  415fc6:	mov    bh,BYTE PTR [eax+0x4b]
  415fc9:	mov    al,0xb0
  415fcb:	icebp  
  415fcc:	jno    0x416004
  415fce:	(bad)  
  415fcf:	rol    esp,1
  415fd1:	rcr    ah,0x82
  415fd4:	aam    0x40
  415fd6:	add    BYTE PTR [eax+ecx*4+0x25],bh
  415fda:	in     eax,dx
  415fdb:	inc    edx
  415fdc:	retf   0x2359
  415fdf:	cmp    BYTE PTR ds:0x8ac6801,ah
  415fe5:	and    eax,0x9119997
  415fea:	repnz leave 
  415fec:	loopne 0x416014
  415fee:	push   eax
  415fef:	add    al,0xe6
  415ff1:	mov    al,0xd5
  415ff3:	push   es
  415ff4:	push   eax
  415ff5:	call   0xca4b44b9
  415ffa:	mul    esi
  415ffc:	pushf  
  415ffd:	mov    esi,0xe0932099
  416002:	sub    eax,0x6fb81226
  416007:	bound  edi,QWORD PTR [ebx+0x60]
  41600a:	repz fwait
  41600c:	cmp    DWORD PTR [esi-0x32ced15],ebx
  416012:	call   0x2575:0x3aa40264
  416019:	je     0x416034
  41601b:	imul   edi,DWORD PTR [esi],0xd551d69f
  416021:	int3   
  416022:	pop    edx
  416023:	mov    BYTE PTR [edi-0x36],bh
  416026:	cwde   
  416027:	dec    esi
  416028:	fprem  
  41602a:	mov    ds:0xf2154fad,eax
  41602f:	or     eax,0x7b82b461
  416034:	into   
  416035:	dec    edi
  416036:	sub    dh,BYTE PTR [ecx-0x6f]
  416039:	or     bl,BYTE PTR [edx*2+0x523d85f2]
  416040:	xlat   BYTE PTR ds:[ebx]
  416041:	xchg   esp,eax
  416042:	add    BYTE PTR cs:[ebx],dl
  416045:	xor    al,BYTE PTR [esi-0x5b]
  416048:	mov    dh,BYTE PTR [edx+0x5306363f]
  41604e:	lods   al,BYTE PTR ds:[esi]
  41604f:	mov    ecx,0xfc33b75
  416054:	fmul   QWORD PTR [edi+0x4687c491]
  41605a:	test   eax,0xa70cce9f
  41605f:	loop   0x4160cc
  416061:	loop   0x416002
  416063:	call   0x31c9dcb9
  416068:	dec    esi
  416069:	retf   0xf95c
  41606c:	repz xor DWORD PTR [esi],0xf621ae78
  416073:	pop    eax
  416074:	mov    edx,0xe2122689
  416079:	aad    0xb3
  41607b:	jmp    0x1ede:0x6f10170d
  416082:	jl     0x416054
  416084:	push   esi
  416085:	ret    0x634e
  416088:	add    eax,0xe79d056e
  41608d:	and    al,0x72
  41608f:	add    al,0xa7
  416091:	mov    ebx,0x3916c177
  416096:	jbe    0x41607e
  416098:	sub    BYTE PTR [ebx-0x18],al
  41609b:	(bad)  
  41609d:	push   edx
  41609e:	sbb    al,0xf2
  4160a0:	pop    edx
  4160a1:	push   ebp
  4160a2:	xchg   ecx,eax
  4160a3:	jle    0x416086
  4160a5:	popf   
  4160a6:	(bad)  
  4160a7:	cmp    eax,0x6b55affa
  4160ac:	mov    ah,0x4b
  4160ae:	xchg   ebp,eax
  4160af:	mov    ds:0xa6f4a7e5,al
  4160b4:	ffree  st(5)
  4160b6:	dec    eax
  4160b7:	mov    cl,0x36
  4160b9:	test   DWORD PTR [edx+ebx*8],eax
  4160bc:	sbb    BYTE PTR [esi],dh
  4160be:	inc    ebp
  4160bf:	jl     0x41612f
  4160c1:	scas   al,BYTE PTR es:[edi]
  4160c2:	enter  0x779b,0x77
  4160c6:	sub    eax,0x1b9ffde8
  4160cb:	cmp    esp,DWORD PTR [edi+0x5c734421]
  4160d1:	call   0x65ec:0x7e5c29b2
  4160d8:	or     esp,DWORD PTR [ecx-0x3c775513]
  4160de:	push   esi
  4160df:	rcr    DWORD PTR [ecx],0xc2
  4160e2:	mov    edi,0x71ec07c1
  4160e7:	mov    ebp,0x81b2a3a5
  4160ec:	ja     0x41615f
  4160ee:	push   esp
  4160ef:	and    al,0xf0
  4160f1:	jo     0x4160dd
  4160f3:	std    
  4160f4:	or     DWORD PTR [ebx],ebx
  4160f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160f7:	add    eax,0xc82a04ee
  4160fc:	outs   dx,DWORD PTR ds:[esi]
  4160fd:	add    DWORD PTR [esi+edi*1],eax
  416100:	cmc    
  416101:	jmp    0xff6286d1
  416106:	rcl    DWORD PTR [esi],cl
  416108:	sub    DWORD PTR [eax],ebx
  41610a:	ins    DWORD PTR es:[edi],dx
  41610b:	outs   dx,BYTE PTR ds:[esi]
  41610c:	fdivr  DWORD PTR [esi+ebp*2]
  41610f:	add    BYTE PTR [ebp-0x7b8d466e],dh
  416115:	mov    dl,0x89
  416117:	cwde   
  416118:	jle    0x41614b
  41611a:	mov    edx,0xde00cbf2
  41611f:	fwait
  416120:	xchg   ebx,eax
  416121:	mov    bh,BYTE PTR [edx-0x61]
  416124:	cmp    BYTE PTR [esi+0x4409e839],0xb2
  41612b:	xor    DWORD PTR [eax+esi*1+0x45],ebp
  41612f:	dec    ecx
  416130:	fwait
  416131:	dec    esi
  416132:	ficomp DWORD PTR [eax-0x2b3bfe5e]
  416138:	mov    ah,0xb3
  41613a:	aas    
  41613b:	jo     0x4161af
  41613d:	pop    DWORD PTR [ebx-0x42732156]
  416143:	adc    cl,BYTE PTR [eax+0x32]
  416146:	mov    cl,0xb1
  416148:	dec    ebp
  416149:	test   eax,0x3a543174
  41614e:	xor    BYTE PTR [eax],dl
  416150:	(bad)  
  416151:	mov    dh,0x70
  416153:	xor    al,0xb8
  416155:	or     bl,BYTE PTR [esi]
  416157:	mov    cl,0xe1
  416159:	or     al,0xb8
  41615b:	xchg   ebx,eax
  41615c:	div    ebp
  41615e:	dec    eax
  41615f:	or     bl,BYTE PTR [ebp-0x4262c54d]
  416165:	test   eax,0x3d985338
  41616a:	inc    esp
  41616b:	push   ss
  41616c:	int    0xff
  41616e:	hlt    
  41616f:	mul    DWORD PTR [eax+esi*1]
  416172:	jge    0x416197
  416174:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416175:	pop    ss
  416176:	retf   0xf53d
  416179:	fcomp  QWORD PTR [ebx]
  41617b:	sbb    edx,edx
  41617d:	push   eax
  41617e:	push   0xb23bc34e
  416183:	in     eax,dx
  416184:	into   
  416185:	neg    BYTE PTR [ebx+0x5b]
  416188:	aaa    
  416189:	imul   edx,DWORD PTR [edx],0xffffffc8
  41618c:	and    eax,DWORD PTR [ecx+0x4d803881]
  416192:	aad    0xc
  416194:	dec    eax
  416195:	int    0x63
  416197:	stos   DWORD PTR es:[edi],eax
  416198:	shr    DWORD PTR [edx-0x24e7119a],cl
  41619e:	inc    edx
  41619f:	dec    eax
  4161a0:	ja     0x4161f5
  4161a2:	sbb    ebp,DWORD PTR [ebx-0x6756c5c7]
  4161a8:	repnz mov eax,0xa8fbcb20
  4161ae:	fwait
  4161af:	aaa    
  4161b0:	(bad)  
  4161b1:	(bad)  
  4161b2:	aad    0x19
  4161b4:	enter  0xf333,0xcc
  4161b8:	rol    DWORD PTR [ebx],1
  4161ba:	addr16 out dx,eax
  4161bc:	push   es
  4161bd:	mov    ebx,0xd88446bb
  4161c2:	xchg   esp,eax
  4161c3:	mov    cl,BYTE PTR [edi+0x9]
  4161c6:	stos   BYTE PTR es:[edi],al
  4161c7:	or     bh,dh
  4161c9:	scas   eax,DWORD PTR es:[edi]
  4161ca:	or     al,0x6f
  4161cc:	out    0x60,eax
  4161ce:	cld    
  4161cf:	push   cs
  4161d0:	(bad)  
  4161d1:	rcr    ecx,1
  4161d3:	outs   dx,BYTE PTR ds:[esi]
  4161d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161d5:	lea    esi,[ebp+0xf02efb1]
  4161db:	or     al,bl
  4161dd:	je     0x41618b
  4161df:	js     0x41621c
  4161e1:	inc    ebx
  4161e2:	mov    cl,0xd3
  4161e4:	mov    dh,0xeb
  4161e6:	jl     0x41616d
  4161e8:	jb     0x416255
  4161ea:	ss or  eax,0xe0f15944
  4161f0:	stos   DWORD PTR es:[edi],eax
  4161f1:	push   eax
  4161f2:	inc    esi
  4161f3:	rcr    DWORD PTR [ecx],cl
  4161f5:	cdq    
  4161f6:	jnp    0x4161a5
  4161f8:	test   al,0xc1
  4161fa:	scas   eax,DWORD PTR es:[edi]
  4161fb:	icebp  
  4161fc:	mov    edx,0xe9f2d6a2
  416201:	mov    ds:0xb483beec,al
  416206:	sub    al,0xde
  416208:	inc    edx
  416209:	call   0x2c3e386
  41620e:	imul   edi,DWORD PTR [ebx],0x68a7bc18
  416214:	sbb    BYTE PTR [edi],cl
  416216:	sub    BYTE PTR [esi-0x4dc5a9ba],bh
  41621c:	test   al,0xe6
  41621e:	lahf   
  41621f:	mov    ds:0xb575788c,al
  416224:	push   es
  416225:	popa   
  416226:	jge    0x416249
  416228:	adc    DWORD PTR ds:0x1f427c07,ebx
  41622e:	fcom   QWORD PTR [ebx-0x23]
  416231:	and    al,0xb5
  416233:	mov    al,0x8f
  416235:	sahf   
  416236:	stc    
  416237:	mov    ah,BYTE PTR ds:0xea58f69c
  41623d:	jo     0x4162b6
  41623f:	xchg   esi,eax
  416240:	in     eax,0x67
  416242:	push   edi
  416243:	sub    eax,0x8581dcb0
  416248:	inc    edi
  416249:	ds test edx,ebx
  41624c:	push   ds
  41624d:	repnz or al,0xf8
  416250:	inc    ebx
  416251:	dec    ecx
  416252:	(bad)  
  416254:	cmp    eax,0x2b9fe49c
  416259:	test   eax,0x1395d2a8
  41625e:	mov    bh,0x78
  416260:	mov    dl,0xad
  416262:	xchg   esp,eax
  416263:	jge    0x4162e0
  416265:	es (bad) 
  416267:	out    dx,al
  416268:	nop
  416269:	push   ds
  41626a:	mov    al,ds:0x4d652c2a
  41626f:	mov    DWORD PTR [esi],edx
  416271:	sbb    DWORD PTR [edi+0x79],ecx
  416274:	mov    bh,0x6d
  416276:	sub    DWORD PTR [ebx],eax
  416278:	inc    edi
  416279:	push   eax
  41627a:	outs   dx,BYTE PTR ds:[esi]
  41627b:	sbb    ecx,DWORD PTR [edx]
  41627d:	fadd   QWORD PTR [esi+eax*4-0x6e45b83e]
  416284:	arpl   WORD PTR [eax],di
  416286:	inc    esi
  416287:	xor    BYTE PTR [ebp+0x7878023],cl
  41628d:	push   ebp
  41628e:	xrelease xchg BYTE PTR [edi+0x4f393510],cl
  416295:	xor    esp,ecx
  416297:	push   edi
  416298:	dec    edi
  416299:	stos   DWORD PTR es:[edi],eax
  41629a:	sub    BYTE PTR [esi+0x44],al
  41629d:	mov    ds:0x3ed65334,eax
  4162a2:	lahf   
  4162a3:	cdq    
  4162a4:	and    BYTE PTR [edi+0x4d6fcd2f],bl
  4162aa:	mov    edi,DWORD PTR [ecx-0x13]
  4162ad:	push   0x23
  4162af:	adc    DWORD PTR [esi+0x2b],edi
  4162b2:	xchg   edx,eax
  4162b3:	sub    al,0x4d
  4162b5:	call   ebp
  4162b7:	push   edi
  4162b8:	inc    edi
  4162b9:	(bad)  
  4162bb:	xchg   DWORD PTR [esi+esi*4-0x12],esi
  4162bf:	mov    ds:0x829aaa90,eax
  4162c4:	cmp    BYTE PTR [ebp-0x59],cl
  4162c7:	test   al,0xf4
  4162c9:	(bad)  
  4162ca:	push   ebx
  4162cb:	mov    bh,bl
  4162cd:	adc    edx,DWORD PTR [ebp+0x1b]
  4162d0:	cmp    cl,al
  4162d2:	cmp    ecx,DWORD PTR [ebx-0x665cdc07]
  4162d8:	mov    WORD PTR [eax],es
  4162da:	inc    edx
  4162db:	ret    0x76dc
  4162de:	jl     0x4162d9
  4162e0:	sbb    DWORD PTR [eax],eax
  4162e2:	pop    ds
  4162e3:	cmp    DWORD PTR [ecx+ebx*1-0x78b1e1e5],ebp
  4162ea:	scas   al,BYTE PTR es:[edi]
  4162eb:	repnz pop ds
  4162ed:	and    bl,dh
  4162ef:	cvtpi2ps xmm7,mm4
  4162f2:	mov    cl,0xa5
  4162f4:	add    dh,BYTE PTR [esi]
  4162f6:	xor    DWORD PTR [ebx+0x2519ed52],ebx
  4162fc:	fs pop ds
  4162fe:	pop    ds
  4162ff:	call   0xa187:0xc672b929
  416306:	jb     0x4162bc
  416308:	in     al,0x60
  41630a:	and    esp,DWORD PTR [esi+0x77]
  41630d:	imul   ebx,esi,0x5e20fac8
  416313:	pop    esi
  416314:	out    0xec,eax
  416316:	fdiv   st(3),st
  416318:	mov    ss,esi
  41631a:	jg     0x416308
  41631c:	sbb    eax,0x17e7baa2
  416321:	cs add al,bl
  416324:	and    BYTE PTR [eax+0x60804a97],0x22
  41632b:	test   DWORD PTR [ecx],eax
  41632d:	or     BYTE PTR [edx],dl
  41632f:	inc    ebx
  416330:	push   eax
  416331:	dec    esi
  416332:	xor    eax,0x4928a009
  416337:	mov    ds:0xd9de8424,eax
  41633c:	dec    ebx
  41633d:	call   0x1ef69075
  416342:	mov    ebp,0x525dc417
  416347:	cmc    
  416348:	aas    
  416349:	xlat   BYTE PTR ds:[ebx]
  41634a:	enter  0x7e18,0xe8
  41634e:	ins    DWORD PTR es:[edi],dx
  41634f:	ds in  eax,dx
  416351:	adc    al,0xfe
  416353:	pop    ebx
  416354:	popa   
  416355:	(bad)  
  416357:	add    DWORD PTR [eax+0x5b],0x4d
  41635b:	cwde   
  41635c:	cmp    ebx,DWORD PTR [eax+0x6bc58540]
  416362:	push   eax
  416363:	mov    bl,BYTE PTR ds:0x78ecd8cc
  416369:	iret   
  41636a:	add    al,0x8d
  41636c:	mov    BYTE PTR ds:0x3fc343dd,0x5e
  416373:	push   ecx
  416374:	sub    edi,ebp
  416376:	cs into 
  416378:	jnp    0x4162fe
  41637a:	adc    BYTE PTR [esi],al
  41637c:	mov    esi,0x81ec90b8
  416381:	test   ah,0x9e
  416384:	ins    DWORD PTR es:[edi],dx
  416385:	imul   eax,DWORD PTR [esi+0x36],0xffffff8a
  416389:	jmp    0x41637f
  41638b:	inc    eax
  41638c:	sub    DWORD PTR [eax+0x6b],0x3c91c0d3
  416393:	mov    esi,0xb17f4506
  416398:	push   es
  416399:	in     eax,dx
  41639a:	cs mov bh,0x45
  41639d:	sbb    eax,0xf9b5068d
  4163a2:	mov    edx,eax
  4163a4:	cmc    
  4163a5:	mov    BYTE PTR [edi],dl
  4163a7:	sbb    bl,BYTE PTR ds:0x51b65aba
  4163ad:	lods   eax,DWORD PTR ds:[esi]
  4163ae:	pop    ds
  4163af:	xor    BYTE PTR [edx-0x2b551be0],al
  4163b5:	xlat   BYTE PTR ds:[ebx]
  4163b6:	cmp    bl,cl
  4163b8:	pop    esi
  4163b9:	cdq    
  4163ba:	lock cwde 
  4163bc:	in     al,0x1a
  4163be:	js     0x41635d
  4163c0:	es xchg edi,eax
  4163c2:	cmc    
  4163c3:	add    eax,0x7ddb8bce
  4163c8:	addr16 mov eax,ds:0x2689
  4163cc:	add    ch,BYTE PTR [eax-0x6e]
  4163cf:	adc    ah,ch
  4163d1:	pop    ss
  4163d2:	shl    BYTE PTR [ecx+0x6c64716f],1
  4163d8:	loopne 0x41636e
  4163da:	pop    eax
  4163db:	in     eax,0xa1
  4163dd:	push   ebx
  4163de:	push   esi
  4163df:	dec    ecx
  4163e0:	fld    TBYTE PTR [eax+0x28f77751]
  4163e6:	into   
  4163e7:	test   eax,0x16e3c308
  4163ec:	fincstp 
  4163ee:	push   ecx
  4163ef:	dec    edi
  4163f0:	or     eax,0x98c61b96
  4163f5:	add    eax,0x7104b7fe
  4163fa:	in     eax,dx
  4163fb:	loopne 0x416383
  4163fd:	mov    ch,dh
  4163ff:	jae    0x41644f
  416401:	xor    ecx,esi
  416403:	test   al,0x80
  416405:	push   cs
  416406:	das    
  416407:	mov    bl,0x86
  416409:	jb     0x4163d6
  41640b:	addr16 gs pop eax
  41640e:	in     al,0x2d
  416410:	push   0xe5b12179
  416415:	(bad)  
  416416:	jmp    0x6fd1ab57
  41641b:	sar    edx,cl
  41641d:	cmp    ah,BYTE PTR [ecx+0x692272de]
  416423:	and    eax,0x71a0153c
  416428:	xor    eax,0xfb2a2a82
  41642d:	in     al,dx
  41642e:	fistp  WORD PTR [edx-0x22]
  416431:	inc    edi
  416432:	adc    esi,DWORD PTR gs:0xa8eeebda
  416439:	xchg   ebp,eax
  41643a:	jo     0x4163da
  41643c:	retf   
  41643d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41643e:	mov    esi,0x9600985
  416443:	adc    eax,0x57772da9
  416448:	inc    eax
  416449:	fdivr  st,st(3)
  41644b:	push   es
  41644c:	les    ebx,FWORD PTR [edx+0xb53f80]
  416452:	mov    dh,0xa3
  416454:	mov    dh,0x17
  416456:	iret   
  416457:	aam    0xf6
  416459:	(bad)  
  41645a:	push   ebp
  41645b:	ror    DWORD PTR [esi],cl
  41645d:	test   DWORD PTR [edx+ebp*4+0x0],edi
  416461:	outs   dx,DWORD PTR ds:[esi]
  416462:	aad    0x9b
  416464:	and    bh,dl
  416466:	int3   
  416467:	xor    DWORD PTR [eax+0x67],0x16dd5caa
  41646e:	sub    DWORD PTR ds:0x9155d0be,eax
  416474:	inc    esp
  416475:	lods   eax,DWORD PTR ds:[esi]
  416476:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416477:	jge    0x4164d4
  416479:	fld    QWORD PTR [eax+0x6e]
  41647c:	sbb    al,BYTE PTR [edx+0x30]
  41647f:	test   eax,0x7aeed98
  416484:	pop    es
  416485:	test   eax,0xdbefa3ea
  41648a:	xchg   ecx,eax
  41648b:	adc    BYTE PTR [ecx+0x2],bl
  41648e:	jmp    0x822a1293
  416493:	and    dl,dh
  416495:	aam    0x42
  416497:	int3   
  416498:	sub    ecx,DWORD PTR ds:0xd4b193ce
  41649e:	dec    edi
  41649f:	(bad)  
  4164a0:	cmp    al,0xac
  4164a2:	lods   al,BYTE PTR ds:[esi]
  4164a3:	pop    esi
  4164a4:	xchg   DWORD PTR [ebx],edx
  4164a6:	jmp    0x7253b8d5
  4164ab:	into   
  4164ac:	xchg   esi,eax
  4164ad:	in     al,dx
  4164ae:	dec    ebx
  4164af:	icebp  
  4164b0:	mov    ah,0x9d
  4164b2:	test   DWORD PTR ds:0xd3fe408f,esi
  4164b8:	aas    
  4164b9:	test   DWORD PTR [edi-0x6],edi
  4164bc:	mov    edi,0xf900cb25
  4164c1:	cmp    bl,dl
  4164c3:	add    BYTE PTR [ebx-0x6cc5bf6],0x3d
  4164ca:	repz push ss
  4164cc:	es inc ebp
  4164ce:	mov    edi,0x89b53d79
  4164d3:	mov    DWORD PTR [ecx+0x1d],ebx
  4164d6:	stos   DWORD PTR es:[edi],eax
  4164d7:	sti    
  4164d8:	test   BYTE PTR [eax-0x6fec3270],ch
  4164de:	mov    esi,0x74d946c9
  4164e3:	aad    0xa4
  4164e5:	jmp    0xb209b800
  4164ea:	loopne 0x41655a
  4164ec:	(bad)  
  4164ef:	xchg   cl,bh
  4164f1:	cli    
  4164f2:	and    ebx,DWORD PTR [ebp-0x2e696d04]
  4164f8:	popf   
  4164f9:	pop    es
  4164fa:	clc    
  4164fb:	push   ds
  4164fc:	push   esp
  4164fd:	and    BYTE PTR [edx+0x20],al
  416500:	push   es
  416501:	mov    esp,0x86733936
  416506:	cmp    al,0xae
  416508:	ins    DWORD PTR es:[edi],dx
  416509:	inc    ebp
  41650a:	dec    ebp
  41650b:	and    ebx,DWORD PTR fs:[ebp-0x3b]
  41650f:	retf   
  416510:	loopne 0x41649e
  416512:	aad    0x8
  416514:	sar    DWORD PTR [edx-0x6ce2ec10],1
  41651a:	imul   ecx,DWORD PTR [ebp+0x78295b5f],0xffffffd8
  416521:	and    DWORD PTR [eax+edi*8+0x71d4d06b],edx
  416528:	mov    eax,0x65edd1b
  41652d:	mov    BYTE PTR [ebx],dh
  41652f:	dec    ebp
  416530:	lds    ebx,FWORD PTR ds:0xa91d3d7c
  416536:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416537:	dec    edi
  416538:	out    dx,eax
  416539:	js     0x416543
  41653b:	call   FWORD PTR [ebp-0xa]
  41653e:	mov    dh,0x8d
  416540:	data16 fadd st(7),st
  416543:	dec    esp
  416544:	sbb    DWORD PTR [eax-0x33bb7a58],esi
  41654a:	mov    dh,0x91
  41654c:	pop    edx
  41654d:	pop    esp
  41654e:	fmul   DWORD PTR ds:0x9748a09e
  416554:	xchg   esp,ebx
  416556:	inc    eax
  416557:	and    al,0x9d
  416559:	mov    DWORD PTR [esi+esi*1],esi
  41655c:	ret    
  41655d:	(bad)  
  41655e:	loope  0x416555
  416560:	xchg   BYTE PTR ds:0xf46749dc,dl
  416566:	scas   eax,DWORD PTR es:[edi]
  416567:	xchg   ebp,eax
  416568:	(bad)  
  416569:	enter  0xf90f,0x48
  41656d:	push   edi
  41656e:	fwait
  41656f:	test   al,0x37
  416571:	xchg   BYTE PTR [ebx],bh
  416573:	repnz mov ds:0x91a9d26b,eax
  416579:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41657a:	call   DWORD PTR [edx-0x78606ed5]
  416580:	aas    
  416581:	xchg   BYTE PTR [ebx+eax*8-0x79ebd9be],dl
  416588:	cli    
  416589:	call   0xa91ca7cd
  41658e:	jbe    0x41654e
  416590:	add    DWORD PTR [ebp+0x73],ebx
  416593:	daa    
  416594:	lods   al,BYTE PTR ds:[esi]
  416595:	int    0x3b
  416597:	inc    ebx
  416598:	pop    esi
  416599:	in     al,0xb7
  41659b:	iret   
  41659c:	sbb    eax,0x8da6be57
  4165a1:	std    
  4165a2:	in     al,0xd7
  4165a4:	fucomp st(7)
  4165a6:	mov    esi,0xcf5916ee
  4165ab:	mov    esp,0xc286dfd2
  4165b0:	(bad)  
  4165b1:	dec    eax
  4165b2:	mov    al,ah
  4165b4:	sub    BYTE PTR [ebp+0x21f808ba],bl
  4165ba:	and    BYTE PTR ds:0x9e314608,bl
  4165c0:	jle    0x41654b
  4165c2:	ins    BYTE PTR es:[edi],dx
  4165c3:	fisttp DWORD PTR [eax-0x2b6047fb]
  4165c9:	leave  
  4165ca:	outs   dx,BYTE PTR ds:[esi]
  4165cb:	cli    
  4165cc:	jnp    0x41663e
  4165ce:	call   0x11f203b5
  4165d3:	sub    dh,BYTE PTR [edi]
  4165d5:	add    ah,ah
  4165d7:	inc    esp
  4165d8:	inc    esp
  4165d9:	scas   eax,DWORD PTR es:[edi]
  4165da:	add    DWORD PTR [edi],ebx
  4165dc:	fwait
  4165dd:	mov    al,0x3a
  4165df:	and    ebx,DWORD PTR [eax+0x1bfd27a0]
  4165e5:	ins    DWORD PTR es:[edi],dx
  4165e6:	in     al,0x54
  4165e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165e9:	or     eax,0xc6346ef4
  4165ee:	add    DWORD PTR [edx+ecx*8-0x6],0xf1f1f26d
  4165f6:	and    eax,0x4991b1c8
  4165fb:	dec    esp
  4165fc:	xchg   DWORD PTR [edi-0x10],eax
  4165ff:	add    DWORD PTR [edx],ebp
  416601:	sahf   
  416602:	or     ebp,DWORD PTR [ebx+ecx*1+0x7f]
  416606:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416607:	add    ecx,DWORD PTR [esi]
  416609:	stos   DWORD PTR es:[edi],eax
  41660a:	jmp    0xd38300f
  41660f:	dec    esi
  416610:	pop    ds
  416611:	or     al,0xcd
  416613:	das    
  416614:	mov    eax,0x5c6898b9
  416619:	jle    0x416690
  41661b:	test   dl,cl
  41661d:	push   ss
  41661e:	xchg   edi,eax
  41661f:	push   ecx
  416620:	mov    eax,ds:0x599eea62
  416625:	stc    
  416626:	xlat   BYTE PTR ds:[ebx]
  416627:	sbb    bh,0xd6
  41662a:	fisub  WORD PTR [esp+ebp*4-0x76]
  41662e:	out    dx,eax
  41662f:	(bad)  
  416630:	cld    
  416631:	jb     0x41660a
  416633:	fs jne 0x41661b
  416636:	adc    DWORD PTR [esi+0x4d4ac861],0x4bc693b3
  416640:	fnstsw WORD PTR [eax+0x24b2eccb]
  416646:	call   0xda6dc709
  41664b:	(bad)  
  41664c:	inc    edi
  41664d:	mov    al,0xb2
  41664f:	sahf   
  416650:	xor    DWORD PTR [edx+ebx*8+0x7f],ebx
  416654:	or     DWORD PTR [edx-0x37],ebx
  416657:	xor    esi,ebp
  416659:	push   esi
  41665a:	inc    edx
  41665b:	into   
  41665c:	sub    eax,0xc2a2b56d
  416661:	lahf   
  416662:	fdiv   QWORD PTR [edi]
  416664:	and    eax,0x27c4ecb8
  416669:	daa    
  41666a:	mov    ds:0x5c400646,al
  41666f:	dec    esp
  416670:	les    eax,FWORD PTR [ebx]
  416672:	dec    edx
  416673:	xchg   edi,eax
  416674:	inc    ebx
  416675:	scas   eax,DWORD PTR es:[edi]
  416676:	xchg   ebp,eax
  416677:	sub    bh,BYTE PTR [edi+0x429bfe68]
  41667d:	pop    eax
  41667e:	cmp    ch,dl
  416680:	hlt    
  416681:	mov    ds:0x758b5a26,eax
  416686:	cmp    DWORD PTR [eax+0x63],0x5f
  41668a:	jmp    0x4166bc
  41668c:	jg     0x4166de
  41668e:	gs jl  0x416697
  416691:	add    ebx,edx
  416693:	dec    BYTE PTR [edi-0x13]
  416696:	jmp    0xc39b3f3c
  41669b:	sahf   
  41669c:	loope  0x4166c7
  41669e:	cmp    cl,bl
  4166a0:	adc    DWORD PTR [esi+0x701d61cc],ebx
  4166a6:	mov    al,al
  4166a8:	mov    eax,ds:0x5b1b93be
  4166ad:	sub    DWORD PTR [eax+0x85c937e],esp
  4166b3:	jmp    0x7bd9:0x54168cf
  4166ba:	adc    ah,ah
  4166bc:	aam    0xcb
  4166be:	push   ebx
  4166bf:	call   0xe3ee:0x2f7c08bf
  4166c6:	dec    eax
  4166c7:	cmp    DWORD PTR [ebp+0xf],ecx
  4166ca:	jmp    0x416716
  4166cc:	in     al,dx
  4166cd:	or     al,0xc5
  4166cf:	and    edx,esi
  4166d1:	outs   dx,BYTE PTR ds:[esi]
  4166d2:	sub    BYTE PTR ds:0xd4187dd8,al
  4166d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166d9:	mov    cl,0xa5
  4166db:	adc    esi,edi
  4166dd:	mov    WORD PTR [edi+edi*8+0x6c],?
  4166e1:	cmp    BYTE PTR [ecx+0x33e87922],cl
  4166e7:	pop    ebp
  4166e8:	and    edi,DWORD PTR ds:0xbeebe07e
  4166ee:	les    ebp,FWORD PTR [ebx]
  4166f0:	sbb    al,0xc5
  4166f2:	int3   
  4166f3:	pop    eax
  4166f4:	pop    ss
  4166f5:	inc    ecx
  4166f6:	mov    al,ds:0x4e5941b7
  4166fb:	ss adc ah,cl
  4166fe:	mov    al,0x38
  416700:	shl    BYTE PTR [ecx+0x4e84e84a],cl
  416706:	mov    ds:0xa88bbc18,al
  41670b:	es (bad) 
  41670e:	xchg   esi,eax
  41670f:	jg     0x416783
  416711:	div    BYTE PTR [eax]
  416713:	pusha  
  416714:	inc    ebx
  416715:	mov    bh,cl
  416717:	adc    ebp,DWORD PTR [edx-0x273fda9e]
  41671d:	imul   edi,DWORD PTR ss:[eax*1-0x54b5d473],0xffffffdd
  416726:	mov    ds:0x2823a0db,eax
  41672b:	dec    esp
  41672c:	into   
  41672d:	push   esp
  41672e:	(bad)  
  41672f:	sbb    BYTE PTR [ebp-0x18],dh
  416732:	icebp  
  416733:	aas    
  416734:	sub    DWORD PTR ds:0x744f4035,0xffffffc0
  41673b:	pop    ss
  41673c:	sahf   
  41673d:	dec    esi
  41673e:	push   edx
  41673f:	or     esi,edx
  416741:	call   0x6156:0xf19fa4c6
  416748:	push   ss
  416749:	cmp    bh,BYTE PTR ds:0x1a24301b
  41674f:	cmp    BYTE PTR [ebp+0x6c4bf03d],bl
  416755:	mov    BYTE PTR ds:0x7000a32d,al
  41675b:	fld    TBYTE PTR [ebx]
  41675d:	aaa    
  41675e:	popa   
  41675f:	xor    bh,ch
  416761:	pushf  
  416762:	adc    al,0xbb
  416764:	clc    
  416765:	and    DWORD PTR [edi+0x11],eax
  416768:	pop    ebp
  416769:	jb     0x4167c5
  41676b:	mov    dh,0xc6
  41676d:	add    edx,ebp
  41676f:	sbb    eax,0x5b6cb2c3
  416774:	mov    ah,0xec
  416776:	adc    edi,DWORD PTR [edi+0x6b7c68aa]
  41677c:	pop    ebp
  41677d:	in     al,dx
  41677e:	mov    esp,ebp
  416780:	scas   al,BYTE PTR es:[edi]
  416781:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416782:	sub    DWORD PTR [esi+0x52],0xd6a6c872
  416789:	out    dx,al
  41678a:	icebp  
  41678b:	ja     0x4167d1
  41678d:	dec    eax
  41678e:	nop
  41678f:	pop    ds
  416790:	ins    BYTE PTR es:[edi],dx
  416791:	or     ebp,DWORD PTR [esi]
  416793:	cmp    DWORD PTR gs:[edi],esi
  416796:	mov    BYTE PTR [eax+0x27de3054],cl
  41679c:	add    al,0x45
  41679e:	add    ecx,DWORD PTR [edx]
  4167a0:	xor    BYTE PTR [ecx],0xc
  4167a3:	scas   eax,DWORD PTR es:[edi]
  4167a4:	xor    eax,0x65243a5f
  4167a9:	lahf   
  4167aa:	imul   esi,edi,0xffffff8d
  4167ad:	cmp    dl,BYTE PTR [edi+0x773c8d0c]
  4167b3:	sbb    al,0x69
  4167b5:	pop    ss
  4167b6:	xor    eax,0x47085e
  4167bb:	aaa    
  4167bc:	adc    dl,ch
  4167be:	push   ebp
  4167bf:	mov    ecx,0x7f4ea2d1
  4167c4:	imul   ebp,edi,0xd572b852
  4167ca:	pop    ebx
  4167cb:	xor    ah,BYTE PTR [eax]
  4167cd:	inc    ecx
  4167ce:	or     eax,0x1d36e247
  4167d3:	repz adc ah,bl
  4167d6:	pop    ds
  4167d7:	call   0xe0fdd5d8
  4167dc:	mov    esp,DWORD PTR [edx+ebp*8-0x12b50e76]
  4167e3:	push   ds
  4167e4:	out    dx,al
  4167e5:	push   cs
  4167e6:	stc    
  4167e7:	lods   eax,DWORD PTR ds:[esi]
  4167e8:	das    
  4167e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167ea:	(bad)  
  4167eb:	jmp    0x41682d
  4167ed:	loope  0x416832
  4167ef:	mov    ah,0xff
  4167f1:	lahf   
  4167f2:	adc    eax,esi
  4167f4:	dec    esp
  4167f5:	sub    eax,0x5f0269e4
  4167fa:	jne    0x4167cf
  4167fc:	stos   BYTE PTR es:[edi],al
  4167fd:	or     bl,ah
  4167ff:	inc    ecx
  416800:	(bad)  
  416801:	imul   BYTE PTR [ebx]
  416803:	mov    bl,0x6e
  416805:	sub    eax,0xc88d3e5c
  41680a:	pop    esp
  41680b:	test   BYTE PTR [esi-0x54],bh
  41680e:	test   dh,cl
  416810:	adc    BYTE PTR [ecx],cl
  416812:	loop   0x416811
  416814:	or     eax,0xce077365
  416819:	xchg   edi,eax
  41681a:	mov    WORD PTR [eax+ecx*4],cs
  41681d:	aaa    
  41681e:	rol    DWORD PTR [ecx+0x40],cl
  416821:	xor    ah,dl
  416823:	sub    eax,0xb60c8e83
  416828:	aaa    
  416829:	push   edx
  41682a:	inc    esp
  41682b:	popf   
  41682c:	dec    ecx
  41682d:	lahf   
  41682e:	push   0x73
  416830:	and    DWORD PTR [edi],ebx
  416832:	xor    al,BYTE PTR [ebx-0x36d0d836]
  416838:	fwait
  416839:	lea    ebx,[ebx+0x7a]
  41683c:	jmp    0x4af0:0x67c74299
  416843:	es into 
  416845:	cmp    ebp,edi
  416847:	je     0x416803
  416849:	(bad)  
  41684a:	pop    ebx
  41684b:	enter  0xf5a5,0xdd
  41684f:	adc    ch,0x6d
  416852:	mov    BYTE PTR [esi],dl
  416854:	mov    ds:0xfd73d3a1,al
  416859:	and    ah,ch
  41685b:	and    eax,0xb974232a
  416860:	add    ecx,DWORD PTR [eax+0x7f]
  416863:	or     BYTE PTR [ebp+0x30c23d2b],cl
  416869:	mov    eax,0xb77d9a9d
  41686e:	push   esp
  41686f:	out    0xc6,eax
  416871:	popf   
  416872:	js     0x4168ad
  416874:	jo     0x41682f
  416876:	cli    
  416877:	bound  ebx,QWORD PTR [ecx+0x61676f3f]
  41687d:	aas    
  41687e:	and    al,0xa1
  416880:	mov    edx,0x99c7a222
  416885:	xchg   DWORD PTR [ecx+0x18],edx
  416888:	popf   
  416889:	loop   0x4168a9
  41688b:	sti    
  41688c:	loopne 0x4168e1
  41688e:	jns    0x416870
  416890:	sub    dh,BYTE PTR [ebp+ecx*2-0x3f6d0a1a]
  416897:	int3   
  416898:	and    DWORD PTR [esi-0x3be3a68a],ebp
  41689e:	push   0x7dea6e62
  4168a3:	inc    ebp
  4168a4:	push   esi
  4168a5:	inc    ebx
  4168a6:	mov    DWORD PTR [ebp+0x3c8ddb6a],eax
  4168ac:	push   ds
  4168ad:	mov    edi,0x57743394
  4168b2:	mov    eax,ds:0x1c913d92
  4168b7:	push   eax
  4168b8:	mov    bh,BYTE PTR [edx-0x624c5c82]
  4168be:	aas    
  4168bf:	out    dx,eax
  4168c0:	mov    cl,0xdc
  4168c2:	(bad)  
  4168c3:	aam    0x38
  4168c5:	stos   BYTE PTR es:[edi],al
  4168c6:	out    0x1e,eax
  4168c8:	shl    BYTE PTR [esi+0x37cd6172],0x81
  4168cf:	inc    ebx
  4168d0:	dec    ebx
  4168d1:	addr16 (bad) 
  4168d4:	push   0xffffff84
  4168d6:	sbb    DWORD PTR [ebx-0x35a59c16],edi
  4168dc:	adc    ch,BYTE PTR [edi+0x76d4208]
  4168e2:	pop    ebp
  4168e3:	sbb    eax,0x1f5ef4d3
  4168e8:	mov    bl,0x82
  4168ea:	je     0x41686f
  4168ec:	push   esi
  4168ed:	inc    ecx
  4168ee:	lods   eax,DWORD PTR ds:[esi]
  4168ef:	xor    DWORD PTR [ebx],eax
  4168f1:	ins    DWORD PTR es:[edi],dx
  4168f2:	stos   DWORD PTR es:[edi],eax
  4168f3:	sub    eax,0x13a3de79
  4168f8:	dec    ebx
  4168f9:	sbb    al,0xc8
  4168fb:	add    DWORD PTR [edi+eiz*8+0x56ea3af3],eax
  416902:	cdq    
  416903:	xchg   esi,eax
  416904:	ins    DWORD PTR es:[edi],dx
  416905:	les    eax,FWORD PTR [edi+esi*4-0x5d]
  416909:	mov    ebx,DWORD PTR [edi+0x21]
  41690c:	adc    al,0x99
  41690e:	push   esi
  41690f:	dec    ebp
  416910:	repnz bound ecx,QWORD PTR [edx+edi*4-0x494e85c7]
  416918:	adc    BYTE PTR [edx],cl
  41691a:	popf   
  41691b:	mov    al,ds:0x30f27b2a
  416920:	scas   al,BYTE PTR es:[edi]
  416921:	dec    bp
  416923:	mov    ah,0xdb
  416925:	cdq    
  416926:	adc    ecx,DWORD PTR [ebx]
  416928:	repnz jmp 0x9819:0xbdf0df3c
  416930:	leave  
  416931:	cmp    eax,0x78245b0c
  416936:	xor    al,0xd9
  416938:	cmp    bl,bh
  41693a:	cmp    BYTE PTR [edx],bl
  41693c:	mov    ebp,0xfc758b12
  416941:	call   esi
  416943:	mov    DWORD PTR [ebp-0x38],eax
  416946:	cmp    DWORD PTR [ebp-0x38],0x57
  41694a:	jne    0x416958
  41694c:	mov    edx,DWORD PTR [ebp-0x20]
  41694f:	push   edx
  416950:	call   0x401000
  416955:	add    esp,0x4
  416958:	xor    eax,eax
  41695a:	pop    esi
  41695b:	mov    esp,ebp
  41695d:	pop    ebp
  41695e:	ret    
  41695f:	push   ebp
  416960:	mov    ebp,esp
  416962:	sub    esp,0x124
  416968:	xor    eax,eax
  41696a:	mov    esp,ebp
  41696c:	pop    ebp
  41696d:	ret    
  41696e:	push   ebp
  41696f:	mov    ebp,esp
  416971:	sub    esp,0x2c
  416974:	push   ebx
  416975:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  41697c:	mov    DWORD PTR [ebp-0xc],0x0
  416983:	mov    DWORD PTR [ebp-0x20],0x1
  41698a:	mov    DWORD PTR [ebp-0x10],0x0
  416991:	mov    eax,DWORD PTR [ebp+0xc]
  416994:	mov    DWORD PTR [ebp-0x1c],eax
  416997:	mov    DWORD PTR [ebp-0x18],0x0
  41699e:	mov    DWORD PTR [ebp-0x8],0x0
  4169a5:	mov    DWORD PTR [ebp-0x24],0x0
  4169ac:	mov    ecx,DWORD PTR [ebp-0x4]
  4169af:	sub    ecx,0x1
  4169b2:	mov    DWORD PTR [ebp-0x4],ecx
  4169b5:	mov    edx,DWORD PTR [ebp+0x8]
  4169b8:	mov    DWORD PTR [ebp-0x10],edx
  4169bb:	mov    DWORD PTR [ebp-0x28],0x1
  4169c2:	mov    eax,DWORD PTR [ebp-0x4]
  4169c5:	add    eax,0x2
  4169c8:	mov    DWORD PTR [ebp-0x4],eax
  4169cb:	mov    ecx,DWORD PTR [ebp-0x1c]
  4169ce:	add    ecx,DWORD PTR [ebp-0x4]
  4169d1:	mov    dl,BYTE PTR [ecx+0x1]
  4169d4:	mov    BYTE PTR [ebp-0x11],dl
  4169d7:	mov    eax,DWORD PTR [ebp-0x4]
  4169da:	add    eax,0x1
  4169dd:	mov    DWORD PTR [ebp-0x4],eax
  4169e0:	mov    cl,BYTE PTR [ebp-0x11]
  4169e3:	mov    BYTE PTR [ebp-0x29],cl
  4169e6:	push   edx
  4169e7:	pop    ebx
  4169e8:	mov    ecx,ebx
  4169ea:	mov    edx,DWORD PTR [ebp-0x10]
  4169ed:	add    edx,DWORD PTR [ebp-0x4]
  4169f0:	mov    al,BYTE PTR [ebp-0x29]
  4169f3:	mov    BYTE PTR [edx],al
  4169f5:	mov    ebx,esi
  4169f7:	mov    ecx,DWORD PTR [ebp+0x14]
  4169fa:	add    ecx,DWORD PTR [ebp-0x8]
  4169fd:	movzx  edx,BYTE PTR [ecx]
  416a00:	mov    DWORD PTR [ebp-0xc],edx
  416a03:	mov    eax,DWORD PTR [ebp-0x8]
  416a06:	mov    ecx,DWORD PTR [ebp-0x28]
  416a09:	add    eax,ecx
  416a0b:	mov    DWORD PTR [ebp-0x8],eax
  416a0e:	mov    eax,DWORD PTR [ebp-0x8]
  416a11:	shr    eax,0x3
  416a14:	mov    ecx,0x1
  416a19:	sub    ecx,eax
  416a1b:	mov    DWORD PTR [ebp-0x20],ecx
  416a1e:	shr    eax,cl
  416a20:	mov    edx,DWORD PTR [ebp-0x8]
  416a23:	imul   edx,DWORD PTR [ebp-0x20]
  416a27:	mov    DWORD PTR [ebp-0x8],edx
  416a2a:	shl    ebx,0x3
  416a2d:	mov    eax,DWORD PTR [ebp-0x10]
  416a30:	add    eax,DWORD PTR [ebp-0x4]
  416a33:	movzx  ecx,BYTE PTR [eax]
  416a36:	add    ecx,DWORD PTR [ebp-0xc]
  416a39:	mov    edx,DWORD PTR [ebp-0x10]
  416a3c:	add    edx,DWORD PTR [ebp-0x4]
  416a3f:	mov    BYTE PTR [edx],cl
  416a41:	mov    eax,DWORD PTR [ebp-0x4]
  416a44:	sub    eax,0x2
  416a47:	mov    DWORD PTR [ebp-0x4],eax
  416a4a:	mov    ecx,DWORD PTR [ebp-0x4]
  416a4d:	cmp    ecx,DWORD PTR [ebp+0x10]
  416a50:	jl     0x4169c2
  416a56:	pop    ebx
  416a57:	mov    esp,ebp
  416a59:	pop    ebp
  416a5a:	ret    
  416a5b:	int3   
  416a5c:	jmp    DWORD PTR ds:0x417008
