
806c521df7f82ffb51a5e9088e1a378a224827af44e66e0a496517a8b8bd7aa9.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	mov    DWORD PTR [ebp-0x48],0x0
  40100d:	mov    DWORD PTR [ebp-0x18],0x0
  401014:	mov    DWORD PTR [ebp-0x70],0x0
  40101b:	mov    DWORD PTR [ebp-0x60],0x0
  401022:	mov    DWORD PTR [ebp-0x8],0x0
  401029:	mov    DWORD PTR [ebp-0x6c],0x0
  401030:	mov    DWORD PTR [ebp-0x68],0x0
  401037:	mov    DWORD PTR [ebp-0x14],0x0
  40103e:	mov    DWORD PTR [ebp-0x4c],0x0
  401045:	mov    DWORD PTR [ebp-0x10],0x0
  40104c:	mov    DWORD PTR [ebp-0x58],0x0
  401053:	mov    DWORD PTR [ebp-0x4],0x0
  40105a:	mov    DWORD PTR [ebp-0x5c],0x0
  401061:	mov    DWORD PTR [ebp-0x30],0x0
  401068:	mov    DWORD PTR [ebp-0x54],0x0
  40106f:	mov    DWORD PTR [ebp-0x2c],0x0
  401076:	mov    DWORD PTR [ebp-0x50],0x0
  40107d:	mov    DWORD PTR [ebp-0xc],0x0
  401084:	mov    eax,ds:0x4493e8
  401089:	mov    DWORD PTR [ebp-0x28],eax
  40108c:	mov    ecx,DWORD PTR ds:0x4493ec
  401092:	mov    DWORD PTR [ebp-0x24],ecx
  401095:	mov    edx,DWORD PTR ds:0x4493f0
  40109b:	mov    DWORD PTR [ebp-0x20],edx
  40109e:	mov    al,ds:0x4493f4
  4010a3:	mov    BYTE PTR [ebp-0x1c],al
  4010a6:	mov    ecx,DWORD PTR ds:0x4493f8
  4010ac:	mov    DWORD PTR [ebp-0x40],ecx
  4010af:	mov    edx,DWORD PTR ds:0x4493fc
  4010b5:	mov    DWORD PTR [ebp-0x3c],edx
  4010b8:	mov    eax,ds:0x449400
  4010bd:	mov    DWORD PTR [ebp-0x38],eax
  4010c0:	mov    cx,WORD PTR ds:0x449404
  4010c7:	mov    WORD PTR [ebp-0x34],cx
  4010cb:	mov    dl,BYTE PTR ds:0x449406
  4010d1:	mov    BYTE PTR [ebp-0x32],dl
  4010d4:	mov    DWORD PTR [ebp-0x30],0x40
  4010db:	lea    eax,[ebp-0x40]
  4010de:	push   eax
  4010df:	lea    ecx,[ebp-0x10]
  4010e2:	push   ecx
  4010e3:	call   DWORD PTR ds:0x417004
  4010e9:	test   eax,eax
  4010eb:	je     0x41534a
  4010f1:	push   0x1
  4010f3:	lea    edx,[ebp-0x10]
  4010f6:	push   edx
  4010f7:	call   DWORD PTR ds:0x417008
  4010fd:	lea    eax,[ebp-0x10]
  401100:	push   eax
  401101:	push   0x0
  401103:	push   0x0
  401105:	push   0x1
  401107:	call   DWORD PTR ds:0x41700c
  40110d:	mov    ecx,DWORD PTR [ebp-0x10]
  401110:	add    ecx,0x1
  401113:	mov    DWORD PTR [ebp-0x10],ecx
  401116:	lea    edx,[ebp-0x30]
  401119:	push   edx
  40111a:	lea    eax,[ebp-0x50]
  40111d:	push   eax
  40111e:	push   0x40
  401120:	push   0x7
  401122:	push   0x0
  401124:	mov    ecx,DWORD PTR [ebp-0x50]
  401127:	push   ecx
  401128:	call   DWORD PTR ds:0x417000
  40112e:	lea    edx,[ebp-0x50]
  401131:	push   edx
  401132:	push   0x0
  401134:	push   0x8003
  401139:	mov    eax,DWORD PTR [ebp-0x50]
  40113c:	push   eax
  40113d:	call   DWORD PTR ds:0x417010
  401143:	lea    ecx,[ebp-0x50]
  401146:	push   ecx
  401147:	push   0x0
  401149:	push   0x0
  40114b:	push   0x8003
  401150:	mov    edx,DWORD PTR [ebp-0x50]
  401153:	push   edx
  401154:	call   DWORD PTR ds:0x417018
  40115a:	lea    eax,[ebp-0x50]
  40115d:	push   eax
  40115e:	push   0x0
  401160:	push   0x0
  401162:	push   0x0
  401164:	mov    ecx,DWORD PTR [ebp-0x50]
  401167:	push   ecx
  401168:	call   DWORD PTR ds:0x417014
  40116e:	notrack jmp DWORD PTR [esi]
  401171:	mov    eax,0x87f1b1
  401176:	test   BYTE PTR [edx-0x26],0x82
  40117a:	cli    
  40117b:	stos   DWORD PTR es:[edi],eax
  40117c:	pop    ebx
  40117d:	retf   
  40117e:	xchg   ecx,eax
  40117f:	jmp    FWORD PTR [ebp-0x7599a109]
  401185:	or     DWORD PTR [esi+0x770b88f8],esi
  40118b:	(bad)  
  40118c:	push   esi
  40118d:	stos   BYTE PTR es:[edi],al
  40118e:	outs   dx,BYTE PTR ds:[esi]
  40118f:	(bad)  
  401190:	(bad)  
  401191:	jmp    FWORD PTR [edi+ecx*8+0x7d925f8]
  401198:	mov    BYTE PTR [ebx-0x27cd23cb],0x5
  40119f:	xor    DWORD PTR ds:0x8aeebed1,esp
  4011a5:	call   0x4d514302
  4011aa:	addr16 lahf 
  4011ac:	rol    DWORD PTR [ebx+0x1eb023b6],cl
  4011b2:	mov    edi,0x54426dc3
  4011b7:	mov    ebx,0x9dee758a
  4011bc:	sar    si,1
  4011bf:	scas   al,BYTE PTR es:[edi]
  4011c0:	mov    gs,WORD PTR [ecx-0x424383ab]
  4011c6:	dec    eax
  4011c7:	mov    al,cl
  4011c9:	ins    DWORD PTR es:[edi],dx
  4011ca:	sub    eax,0x14571f54
  4011cf:	(bad)  
  4011d0:	loopne 0x401183
  4011d2:	push   ebp
  4011d3:	pop    ecx
  4011d4:	pop    esi
  4011d5:	sti    
  4011d6:	jle    0x4011f9
  4011d8:	call   0x55a60788
  4011dd:	aaa    
  4011de:	and    bh,BYTE PTR [esi+0x2e]
  4011e1:	xchg   edi,eax
  4011e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4011e3:	sahf   
  4011e4:	xchg   ebx,eax
  4011e5:	stos   DWORD PTR es:[edi],eax
  4011e6:	or     DWORD PTR [eax],ecx
  4011e8:	sbb    ah,dh
  4011ea:	inc    edi
  4011eb:	out    0x97,eax
  4011ed:	inc    esp
  4011ee:	arpl   WORD PTR [ebx-0x26],di
  4011f1:	pop    edi
  4011f2:	into   
  4011f3:	xlat   BYTE PTR ds:[ebx]
  4011f4:	imul   edx,ebp,0x6d72ee28
  4011fa:	push   esi
  4011fb:	xlat   BYTE PTR ds:[ebx]
  4011fc:	dec    ebx
  4011fd:	ds mov ecx,0x2371c7fc
  401203:	arpl   bx,sp
  401205:	in     al,dx
  401206:	outs   dx,BYTE PTR ds:[esi]
  401207:	pop    ds
  401208:	xchg   ebp,ebp
  40120a:	mov    ecx,0x3754450b
  40120f:	test   eax,0x312a7df8
  401214:	mov    ebp,0x39f836b0
  401219:	jle    0x4011c7
  40121b:	dec    ebx
  40121c:	ret    0xb031
  40121f:	xchg   edi,eax
  401220:	or     al,0x71
  401222:	xor    BYTE PTR [ecx],bh
  401224:	fidiv  WORD PTR [edi]
  401226:	mov    eax,0x3effd44c
  40122b:	repnz ss push 0xb8cf75f5
  401232:	cmp    BYTE PTR [edi],ah
  401234:	jae    0x401229
  401236:	shl    ebp,cl
  401238:	push   0x52
  40123a:	icebp  
  40123b:	dec    eax
  40123c:	jmp    0x40122d
  40123e:	loope  0x4012a0
  401240:	inc    ecx
  401241:	cmp    ebp,DWORD PTR [ecx]
  401243:	fldcw  WORD PTR [ecx+0xf]
  401246:	fs push cs
  401248:	sahf   
  401249:	pop    eax
  40124a:	ficomp WORD PTR [edx]
  40124c:	cmp    al,0xb8
  40124e:	or     al,0xf3
  401250:	aam    0x9
  401252:	xchg   BYTE PTR [eax-0x22],cl
  401255:	cwde   
  401256:	out    0xa6,eax
  401258:	dec    edx
  401259:	ds mov esi,0x97f3d603
  40125f:	outs   dx,DWORD PTR ds:[esi]
  401260:	retf   0xa23d
  401263:	or     cl,ah
  401265:	lock push esi
  401267:	mov    cs,ebx
  401269:	dec    esp
  40126a:	(bad)  
  40126b:	idiv   BYTE PTR [ebp+eax*4-0x2a]
  40126f:	vandnps ymm4,ymm3,YMMWORD PTR [ebp-0xc]
  401275:	dec    ebp
  401276:	inc    edi
  401277:	jge    0x401220
  401279:	adc    ebp,DWORD PTR [eax]
  40127b:	dec    ecx
  40127c:	cdq    
  40127d:	mov    eax,ds:0x5af795c8
  401282:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401283:	xchg   edx,eax
  401284:	dec    edx
  401285:	lahf   
  401286:	rcl    DWORD PTR [eax-0x2e],1
  401289:	pop    ecx
  40128a:	cmp    al,BYTE PTR [ebp+edx*1-0x44bc8e1e]
  401291:	lock and al,0x26
  401294:	out    dx,al
  401295:	mov    bh,0x4
  401297:	add    al,0xe2
  401299:	jmp    0x8294c665
  40129e:	add    cl,BYTE PTR [ebx+0x77175e16]
  4012a4:	mov    ds:0xd574b75e,eax
  4012a9:	aas    
  4012aa:	ins    BYTE PTR es:[edi],dx
  4012ab:	cmp    al,0xfc
  4012ad:	pop    ebp
  4012ae:	sub    esi,edx
  4012b0:	adc    eax,ebx
  4012b2:	pop    esi
  4012b3:	cli    
  4012b4:	adc    BYTE PTR [eax+eax*4+0x4641e6c0],al
  4012bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4012bc:	int    0xaf
  4012be:	lds    edx,FWORD PTR [edx+0x7e7cc7b4]
  4012c4:	ret    
  4012c5:	cmp    BYTE PTR [ebx+0x18],ch
  4012c8:	sub    al,0x1f
  4012ca:	iret   
  4012cb:	scas   al,BYTE PTR es:[edi]
  4012cc:	mov    DWORD PTR ds:0xd809622e,edi
  4012d2:	fldln2 
  4012d4:	bound  edi,QWORD PTR [esi+ebp*1-0x298547d4]
  4012db:	nop
  4012dc:	add    esi,DWORD PTR [eax-0x3e]
  4012df:	xlat   BYTE PTR ds:[ebx]
  4012e0:	mov    ebp,esp
  4012e2:	shl    ah,1
  4012e4:	inc    esp
  4012e5:	mov    cl,0x8d
  4012e7:	jmp    FWORD PTR [bx+si+0x6c]
  4012eb:	pop    ebp
  4012ec:	ins    BYTE PTR es:[edi],dx
  4012ed:	adc    cl,dl
  4012ef:	jo     0x4012c3
  4012f1:	dec    esp
  4012f2:	xchg   esi,eax
  4012f3:	sub    BYTE PTR [eax-0x6df1a276],0x74
  4012fa:	mov    edi,0x61a33fa
  4012ff:	push   ecx
  401300:	fcomp  QWORD PTR [ecx+0x48b2a003]
  401306:	jnp    0x4012d7
  401308:	lock mov ch,0xbd
  40130b:	mov    bh,0xd3
  40130d:	pop    ss
  40130e:	mov    DWORD PTR [esi],0xfb24a01a
  401314:	inc    ebp
  401315:	cld    
  401316:	add    ebp,DWORD PTR [ebp-0x1638283d]
  40131c:	out    0xe4,eax
  40131e:	or     BYTE PTR [esi-0x36],ch
  401321:	adc    edx,DWORD PTR [ecx-0x2f09932b]
  401327:	(bad)  
  401329:	out    0xc7,al
  40132b:	iret   
  40132c:	mov    eax,ds:0x63ffae78
  401331:	das    
  401332:	mov    edi,0xb7830465
  401337:	fbld   TBYTE PTR [esi]
  401339:	ret    0x9461
  40133c:	pushf  
  40133d:	loope  0x4013ad
  40133f:	mov    bl,al
  401341:	imul   ecx,edi,0xffffffd1
  401344:	shl    esp,0x44
  401347:	fadd   st,st(3)
  401349:	cli    
  40134a:	adc    BYTE PTR [edi-0x72],bh
  40134d:	push   esi
  40134e:	xchg   ebx,eax
  40134f:	clc    
  401350:	pop    ds
  401351:	dec    esi
  401352:	fmul   DWORD PTR [ebx-0x20]
  401355:	push   ss
  401356:	or     al,0x29
  401358:	mov    gs:0x91c4832a,eax
  40135e:	retf   0x7b0
  401361:	jg     0x4012e3
  401363:	scas   eax,DWORD PTR es:[edi]
  401364:	std    
  401365:	mov    cl,0xb6
  401367:	mov    esi,0xf91702dd
  40136c:	mov    dh,0xc4
  40136e:	ins    DWORD PTR es:[edi],dx
  40136f:	adc    al,0x64
  401371:	clc    
  401372:	cmp    esp,DWORD PTR [ecx+0x26]
  401375:	mov    BYTE PTR [edx],ah
  401377:	cmp    DWORD PTR [edi-0x562453f3],edi
  40137d:	out    dx,al
  40137e:	std    
  40137f:	mov    bh,0x18
  401381:	xlat   BYTE PTR ds:[ebx]
  401382:	mov    bh,0xdc
  401384:	dec    ebx
  401385:	(bad)  
  401386:	loopne 0x40139d
  401388:	xchg   esi,eax
  401389:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40138a:	scas   eax,DWORD PTR es:[edi]
  40138b:	ins    DWORD PTR es:[edi],dx
  40138c:	into   
  40138d:	xlat   BYTE PTR ds:[ebx]
  40138e:	aad    0xb4
  401390:	push   es
  401391:	jle    0x40138a
  401393:	scas   al,BYTE PTR es:[edi]
  401394:	sahf   
  401395:	aam    0xae
  401397:	and    ch,BYTE PTR [esp+ebx*2-0x38bea913]
  40139e:	fild   WORD PTR [ebx+0xce426bb]
  4013a4:	adc    eax,0x3afe1925
  4013a9:	xchg   edx,eax
  4013aa:	jle    0x40141f
  4013ac:	xchg   DWORD PTR [ecx+0x19],ecx
  4013af:	jno    0x401364
  4013b1:	inc    ecx
  4013b2:	add    eax,0xf7a2086
  4013b7:	adc    al,0xbc
  4013b9:	stc    
  4013ba:	xlat   BYTE PTR ds:[ebx]
  4013bb:	xor    esi,ebx
  4013bd:	mov    WORD PTR [ebp-0x21b2b22e],cs
  4013c3:	repz icebp 
  4013c5:	push   ebx
  4013c6:	jmp    0xecb1:0x44195e0b
  4013cd:	xchg   ebp,eax
  4013ce:	pusha  
  4013cf:	push   ss
  4013d0:	adc    DWORD PTR [ecx+0x4d5a6636],edx
  4013d6:	adc    esp,DWORD PTR [ebp+ebx*8-0x12]
  4013da:	push   esp
  4013db:	xchg   esp,eax
  4013dc:	jmp    0xd0cd5e7e
  4013e1:	cmp    al,0x27
  4013e3:	adc    al,0xc5
  4013e5:	mov    ah,0xc2
  4013e7:	dec    ebp
  4013e8:	mov    edi,DWORD PTR [edi-0x2132322b]
  4013ee:	sub    ch,ch
  4013f0:	mov    esi,0x49460e2a
  4013f5:	push   0x92fccc9f
  4013fa:	xor    al,0xee
  4013fc:	inc    esi
  4013fd:	push   ecx
  4013fe:	call   0x3aefb970
  401403:	icebp  
  401404:	loope  0x40140f
  401406:	jmp    0xd12b:0x80275a23
  40140d:	out    dx,eax
  40140e:	outs   dx,BYTE PTR ds:[esi]
  40140f:	stos   DWORD PTR es:[edi],eax
  401410:	fcomp  QWORD PTR [eax]
  401412:	cs rcr esp,cl
  401415:	mov    dl,0xb3
  401417:	in     al,dx
  401418:	loope  0x401412
  40141a:	cmp    al,bl
  40141c:	sub    ch,BYTE PTR [edi-0x299720c]
  401422:	fidiv  DWORD PTR [esi]
  401424:	neg    ecx
  401426:	add    BYTE PTR [ebp+0x699c1cbb],0xa9
  40142d:	xchg   ebx,eax
  40142e:	sub    bh,cl
  401430:	(bad)  
  401431:	xchg   bl,bl
  401433:	sbb    DWORD PTR [ebx+0x5b],ecx
  401436:	ror    BYTE PTR [ecx+ebx*4-0x603d3563],1
  40143d:	sbb    ebp,DWORD PTR [edi-0x30e4d17c]
  401443:	push   ebx
  401444:	or     DWORD PTR [ecx-0x310d7a17],ebx
  40144a:	(bad)  [ecx-0x4f875586]
  401450:	lods   eax,DWORD PTR ds:[esi]
  401451:	mov    dh,0xf
  401453:	xor    al,0x69
  401455:	inc    edx
  401456:	inc    ebp
  401457:	mov    ebx,0xdbb7c29
  40145c:	addr16 inc edx
  40145e:	sbb    DWORD PTR [eax+0x7ae815ae],ebx
  401464:	ret    0xc556
  401467:	cmp    dh,al
  401469:	pop    ebx
  40146a:	adc    edx,DWORD PTR [edi+0x2ed3d40d]
  401470:	test   DWORD PTR [ebx+0x1ae5a78c],ebx
  401476:	pop    esp
  401477:	jo     0x4014dd
  401479:	into   
  40147a:	jg     0x4014a3
  40147c:	fs sti 
  40147e:	int3   
  40147f:	lea    edx,[esi+eax*1-0x61aa165d]
  401486:	shl    dh,cl
  401488:	mov    al,0xc8
  40148a:	shl    BYTE PTR [ecx+0x4a],0xdb
  40148e:	push   cs
  40148f:	out    dx,al
  401490:	and    ah,BYTE PTR [ebp+0x527444a2]
  401496:	test   ebx,0xc134ef7a
  40149c:	xchg   ecx,eax
  40149d:	ror    dh,0x48
  4014a0:	test   al,0x14
  4014a2:	rcl    ecx,cl
  4014a4:	sub    eax,esp
  4014a6:	or     ch,BYTE PTR [ecx+0x7d]
  4014a9:	inc    eax
  4014aa:	xchg   esi,eax
  4014ab:	(bad)  
  4014ad:	mov    ebp,0x7c79ee40
  4014b2:	imul   eax,DWORD PTR [edx],0x58558964
  4014b8:	jmp    0x18f5657a
  4014bd:	lds    esi,FWORD PTR [esi]
  4014bf:	rcr    bl,0xee
  4014c2:	test   DWORD PTR [edi],esi
  4014c4:	stos   DWORD PTR es:[edi],eax
  4014c5:	(bad)  
  4014c6:	fisub  DWORD PTR [ebp+0x51]
  4014c9:	ror    DWORD PTR ds:0x9cf138f,cl
  4014cf:	(bad)  
  4014d0:	xlat   BYTE PTR ds:[ebx]
  4014d1:	sbb    edx,DWORD PTR [eax-0x43aaf10d]
  4014d7:	test   eax,0xbecd0f52
  4014dc:	fild   WORD PTR [edx+ecx*1+0x50]
  4014e0:	fnsave [esi]
  4014e2:	cld    
  4014e3:	xor    cl,BYTE PTR [esi+0x3297ffe8]
  4014e9:	cs xchg ebp,eax
  4014eb:	and    edx,DWORD PTR [edi+ecx*2]
  4014ee:	adc    BYTE PTR [eax+0x4],ah
  4014f1:	xor    al,0x55
  4014f3:	repnz xchg edi,eax
  4014f5:	shl    esp,0x81
  4014f8:	out    dx,al
  4014f9:	and    ebx,DWORD PTR [ebp+0x764866a3]
  4014ff:	mov    ds:0x9ae4b7af,al
  401504:	mov    edx,0x854bd1c9
  401509:	adc    edi,eax
  40150b:	fstp   DWORD PTR [ecx]
  40150d:	stos   BYTE PTR es:[edi],al
  40150e:	pop    esi
  40150f:	out    dx,al
  401510:	push   ebx
  401511:	mov    eax,ds:0xf1162a6c
  401516:	test   edi,edi
  401518:	loope  0x40153b
  40151a:	aad    0xbf
  40151c:	cdq    
  40151d:	je     0x40158f
  40151f:	aaa    
  401520:	aaa    
  401521:	cdq    
  401522:	mov    ebp,0xa6766fc
  401527:	out    dx,al
  401528:	addr16 in al,dx
  40152a:	xchg   esi,eax
  40152b:	ds xchg ebp,eax
  40152d:	aam    0x5c
  40152f:	fiadd  WORD PTR [edi]
  401531:	xor    BYTE PTR [ebx-0x39],al
  401534:	add    dl,BYTE PTR es:0xe1c6e572
  40153b:	jl     0x401503
  40153d:	enter  0x334e,0xa7
  401541:	or     ecx,DWORD PTR ds:0x3486c5f
  401547:	imul   esp,DWORD PTR [esp+ebp*8+0x5],0x5f45d6fc
  40154f:	movq   mm7,QWORD PTR [esi-0x1774d376]
  401556:	dec    esp
  401557:	scas   al,BYTE PTR es:[edi]
  401558:	pop    eax
  401559:	das    
  40155a:	fsubr  DWORD PTR [edi+0x13db7969]
  401560:	xchg   ch,cl
  401562:	hlt    
  401563:	fs sbb al,0x95
  401566:	and    eax,0x6c7d8e74
  40156b:	xlat   BYTE PTR ds:[ebx]
  40156c:	fmul   DWORD PTR [eax+0x3e8b7272]
  401572:	xchg   edi,eax
  401573:	mov    bh,0xf
  401575:	repz mov al,0xc1
  401578:	mov    ebx,0x96c48e7a
  40157d:	push   edi
  40157e:	aaa    
  40157f:	push   cs
  401580:	push   ebp
  401581:	sbb    DWORD PTR [esi+0x36],0x820d1914
  401588:	call   0x5492:0xc3b880ae
  40158f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401590:	add    ecx,esi
  401592:	adc    bh,BYTE PTR [ebx-0x4f65cfa5]
  401598:	mov    ebx,0x6c0c7ad8
  40159d:	mov    WORD PTR [eax+0xb9f5478],fs
  4015a3:	mov    ebp,0x6da179b0
  4015a8:	mov    al,ds:0x6295b5c5
  4015ad:	fsubr  QWORD PTR [eax]
  4015af:	scas   eax,DWORD PTR es:[edi]
  4015b0:	xor    dl,ah
  4015b2:	xchg   DWORD PTR [esi+eiz*8],esp
  4015b5:	dec    ebx
  4015b6:	pop    edx
  4015b7:	test   DWORD PTR [ecx-0x5e886513],0x79ad6dff
  4015c1:	nop
  4015c2:	and    BYTE PTR [eax+ecx*4+0x749f94d3],0x4e
  4015ca:	add    al,0xf2
  4015cc:	iret   
  4015cd:	(bad)  
  4015ce:	jmp    0x401557
  4015d0:	sbb    al,0x4a
  4015d2:	fist   DWORD PTR [eax+0x71df52cf]
  4015d8:	push   ebx
  4015d9:	sbb    DWORD PTR [ebx+0x10],esi
  4015dc:	mov    al,0x52
  4015de:	jae    0x4015d0
  4015e0:	gs js  0x40156a
  4015e3:	js     0x401625
  4015e5:	aad    0x3f
  4015e7:	jb     0x40164f
  4015e9:	nop
  4015ea:	push   0x35b4ebda
  4015ef:	or     ah,bl
  4015f1:	jmp    0x4eeae1bc
  4015f6:	ficom  DWORD PTR [ecx-0x1ea2ffee]
  4015fc:	addr16 inc esp
  4015fe:	sar    DWORD PTR [ecx],cl
  401600:	dec    ebp
  401601:	mov    ecx,0x3ddece93
  401606:	lahf   
  401607:	jne    0x401667
  401609:	ins    DWORD PTR es:[edi],dx
  40160a:	fs icebp 
  40160c:	repnz push edi
  40160e:	jge    0x4015a1
  401610:	out    dx,eax
  401611:	(bad)  
  401612:	in     al,dx
  401613:	inc    esp
  401614:	or     DWORD PTR [edx+ecx*2+0x6e],eax
  401618:	jp     0x40161a
  40161a:	pop    ebp
  40161b:	push   0xc03430f7
  401620:	and    eax,DWORD PTR [ecx-0x6e]
  401623:	lahf   
  401624:	xchg   ebx,eax
  401625:	test   al,0x2
  401627:	iret   
  401628:	cdq    
  401629:	and    esi,ebx
  40162b:	iret   
  40162c:	xchg   ebx,eax
  40162d:	inc    ebx
  40162e:	popa   
  40162f:	xchg   ebx,eax
  401630:	mov    ds:0xe5077cad,al
  401635:	ss es out dx,eax
  401638:	push   0x2876461f
  40163d:	gs mov edi,0x8b98179a
  401643:	scas   eax,DWORD PTR es:[edi]
  401644:	les    esp,FWORD PTR [eax-0xf76bd85]
  40164a:	pop    esp
  40164b:	add    eax,0x33790221
  401650:	xchg   ecx,eax
  401651:	cdq    
  401652:	push   0xffffffe3
  401654:	sbb    DWORD PTR [edi],0x5c
  401657:	or     edi,DWORD PTR [ecx+0x31]
  40165a:	inc    ebp
  40165b:	sar    edi,1
  40165d:	in     eax,dx
  40165e:	or     al,0x17
  401660:	jmp    0x401608
  401662:	push   esi
  401663:	test   BYTE PTR [ebp+0x6e],ah
  401666:	mov    eax,ds:0xaa411d48
  40166b:	mov    ds:0xd0aaad96,al
  401670:	jae    0x4015f9
  401672:	mov    DWORD PTR [ebp-0x72ce693b],ebp
  401678:	idiv   BYTE PTR [ebp+eax*4-0x16953a1e]
  40167f:	xchg   DWORD PTR [ebp-0x4b],edi
  401682:	jno    0x40165b
  401684:	xchg   edx,eax
  401685:	mov    edi,0xaf854b7d
  40168a:	adc    ebx,ebx
  40168c:	sbb    eax,0xdd0f3ed2
  401691:	repz cdq 
  401693:	(bad)  
  401694:	sub    dl,dl
  401696:	mov    eax,ds:0x6245a1fa
  40169b:	je     0x401647
  40169d:	imul   edi,ebx,0xffffffa1
  4016a0:	add    bl,BYTE PTR [ebx+0x233b9d44]
  4016a6:	and    BYTE PTR [ebx+0x4c],bl
  4016a9:	sahf   
  4016aa:	pop    ebp
  4016ab:	sbb    bl,cl
  4016ad:	jae    0x40171a
  4016af:	test   edi,esi
  4016b1:	(bad)  
  4016b2:	adc    eax,0xffa02dc
  4016b7:	xlat   BYTE PTR ds:[ebx]
  4016b8:	test   DWORD PTR [edi+0x53],ecx
  4016bb:	jmp    0x51ba:0x4430ff02
  4016c2:	push   ebx
  4016c3:	not    DWORD PTR [eax+0x3]
  4016c6:	push   0x3cf349b8
  4016cb:	xor    esi,DWORD PTR [eax+eax*4+0x4f]
  4016cf:	enter  0x7995,0xda
  4016d3:	jns    0x40171a
  4016d5:	ins    BYTE PTR es:[edi],dx
  4016d6:	scas   eax,DWORD PTR es:[edi]
  4016d7:	into   
  4016d8:	(bad)  
  4016d9:	push   eax
  4016da:	pop    eax
  4016db:	or     al,BYTE PTR [ecx-0x1cc8bd18]
  4016e1:	fnstenv [edx-0x6e6ad019]
  4016e7:	push   edx
  4016e8:	xchg   ecx,eax
  4016e9:	ret    
  4016ea:	fs jecxz 0x401709
  4016ed:	adc    esi,edx
  4016ef:	pop    ss
  4016f0:	(bad)  
  4016f1:	or     eax,0xc912c610
  4016f6:	pop    ebp
  4016f7:	mov    ds:0x119b635,al
  4016fc:	pusha  
  4016fd:	push   es
  4016fe:	xchg   ecx,eax
  4016ff:	cmp    eax,0x86310130
  401704:	ins    DWORD PTR es:[edi],dx
  401705:	out    dx,eax
  401706:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401707:	and    DWORD PTR [eax-0x5f],ebp
  40170a:	xor    DWORD PTR [ecx-0x7],0xe32dd53a
  401711:	loopne 0x40169b
  401713:	cmp    al,0x70
  401715:	imul   esi,DWORD PTR [edi+0x5],0x74
  401719:	jne    0x4016ed
  40171b:	jo     0x401707
  40171d:	div    DWORD PTR [edi+0x2319a7bc]
  401723:	mov    ebx,0x92b3d452
  401728:	imul   esp,ebp,0xfd987346
  40172e:	push   ss
  40172f:	xchg   edi,eax
  401730:	into   
  401731:	mov    esi,0x432531ca
  401736:	imul   edi,DWORD PTR ds:0xe6ad0e7c,0xc5beb3b1
  401740:	mov    bh,0xe4
  401742:	inc    ebp
  401743:	jne    0x401712
  401745:	push   cs
  401746:	inc    ebp
  401747:	test   DWORD PTR [ecx-0x1c],esi
  40174a:	cld    
  40174b:	or     dh,BYTE PTR [edx]
  40174d:	push   es
  40174e:	mov    ebp,0x1d95e8de
  401753:	lds    ecx,FWORD PTR [eax+0x5e]
  401756:	ds pop eax
  401758:	fisub  WORD PTR [eax-0x18]
  40175b:	mov    dl,0x75
  40175d:	adc    eax,0x6c530f17
  401762:	mov    eax,ds:0x31b88396
  401767:	lods   eax,DWORD PTR ds:[esi]
  401768:	jno    0x401701
  40176a:	sbb    BYTE PTR [eax+0x31],ch
  40176d:	cmp    dl,BYTE PTR [eax+esi*2-0x6865ae7]
  401774:	add    dh,ch
  401776:	or     eax,0x3ddfa029
  40177b:	fsub   DWORD PTR [ebx]
  40177d:	xchg   ebp,eax
  40177e:	sub    eax,0xc6481449
  401783:	jmp    0x8518:0x67056ea
  40178a:	bound  ebp,QWORD PTR [ecx]
  40178c:	inc    ebx
  40178d:	icebp  
  40178e:	add    DWORD PTR [edx+0x3fc29f39],eax
  401794:	adc    edi,edx
  401796:	xlat   BYTE PTR ds:[ebx]
  401797:	inc    esi
  401798:	les    ecx,FWORD PTR [edx]
  40179a:	call   0x223030b1
  40179f:	jno    0x4017dd
  4017a1:	dec    eax
  4017a2:	out    0x53,eax
  4017a4:	mov    ebx,0x56e31615
  4017a9:	repz repnz mov ebp,0xcd79d2f8
  4017b0:	fld    QWORD PTR [ebx]
  4017b2:	jecxz  0x40181e
  4017b4:	push   esp
  4017b5:	fcmovnbe st,st(3)
  4017b7:	pop    esi
  4017b8:	imul   ebx,DWORD PTR [ecx+0x68],0x60a22780
  4017bf:	jl     0x4017dd
  4017c1:	xchg   ah,ch
  4017c3:	daa    
  4017c4:	and    DWORD PTR [ecx+0x4107955a],0x330e0015
  4017ce:	fdiv   QWORD PTR [ecx+0x3]
  4017d1:	mov    dh,0x53
  4017d3:	addr16 dec esp
  4017d5:	add    eax,0xb1b12e7a
  4017da:	in     eax,0x9e
  4017dc:	cli    
  4017dd:	jecxz  0x4017aa
  4017df:	or     bl,al
  4017e1:	int3   
  4017e2:	or     dl,al
  4017e4:	jp     0x401853
  4017e6:	call   DWORD PTR ds:0xa4dd4ffa
  4017ec:	jnp    0x401820
  4017ee:	pop    eax
  4017ef:	iret   
  4017f0:	out    0xb5,eax
  4017f2:	sub    bh,bl
  4017f4:	cdq    
  4017f5:	adc    esp,DWORD PTR [ebx-0x4c]
  4017f8:	xor    BYTE PTR [eax-0x20],0x37
  4017fc:	out    0xbf,eax
  4017fe:	cdq    
  4017ff:	mov    ecx,0x5114af9c
  401804:	xlat   BYTE PTR ds:[ebx]
  401805:	xchg   BYTE PTR [eax+0x143cad12],ch
  40180b:	jecxz  0x401819
  40180d:	std    
  40180e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40180f:	push   esp
  401810:	cli    
  401811:	add    al,0xbb
  401813:	scas   eax,DWORD PTR es:[edi]
  401814:	add    al,0x7a
  401816:	cmp    bl,ch
  401818:	xor    edi,DWORD PTR [eax]
  40181a:	add    esp,0x4b08f564
  401820:	leave  
  401821:	xor    eax,0x5be0daee
  401826:	or     DWORD PTR [eax],ecx
  401828:	push   esp
  401829:	dec    esp
  40182a:	push   0xffffffbf
  40182c:	adc    DWORD PTR [ecx],0x6a
  40182f:	push   es
  401830:	aad    0xc7
  401832:	js     0x4018af
  401834:	int    0xd5
  401836:	add    ah,BYTE PTR [ebx+0x23e0551e]
  40183c:	adc    ebp,DWORD PTR [edx-0x13a77f45]
  401842:	aad    0x24
  401844:	and    bl,BYTE PTR [ebx-0x32]
  401847:	sub    bh,cl
  401849:	test   BYTE PTR [esi+0x2aa78739],0x32
  401850:	rcr    DWORD PTR [edx-0x61],0x7a
  401854:	pushw  ds
  401856:	inc    ebx
  401857:	inc    edi
  401858:	pop    ebp
  401859:	xor    cl,al
  40185b:	rcr    DWORD PTR [ebp+ebp*1+0x35772859],1
  401862:	sahf   
  401863:	mov    cl,bh
  401865:	into   
  401866:	inc    eax
  401867:	add    DWORD PTR [ebp*8+0x234ccd8b],esi
  40186e:	mov    edx,0x619ff6de
  401873:	xchg   edx,eax
  401874:	pop    ss
  401875:	rep outs dx,DWORD PTR ds:[esi]
  401877:	push   0x1bb35ab2
  40187c:	xor    al,0x48
  40187e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40187f:	jg     0x40186d
  401881:	(bad)  
  401882:	pop    ebp
  401883:	inc    edx
  401884:	inc    ebx
  401885:	lahf   
  401886:	outs   dx,DWORD PTR ds:[esi]
  401887:	xchg   DWORD PTR [eax],esp
  401889:	lods   al,BYTE PTR ds:[esi]
  40188a:	mov    ah,0xbf
  40188c:	shr    BYTE PTR [ecx-0x27],1
  40188f:	dec    eax
  401890:	xchg   ebp,eax
  401891:	cmp    al,0x77
  401893:	pushf  
  401894:	fdiv   DWORD PTR [edi+0x29303195]
  40189a:	sti    
  40189b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40189c:	in     eax,dx
  40189d:	sbb    bh,BYTE PTR [ebp-0x4409744e]
  4018a3:	cmp    al,dh
  4018a5:	push   ss
  4018a6:	mov    bh,0x46
  4018a8:	jg     0x40183a
  4018aa:	sub    bl,BYTE PTR [ecx-0x27]
  4018ad:	dec    eax
  4018ae:	jecxz  0x40184e
  4018b0:	xchg   BYTE PTR [esi],bl
  4018b2:	jnp    0x40191f
  4018b4:	cdq    
  4018b5:	gs das 
  4018b7:	dec    edx
  4018b8:	retf   0xd442
  4018bb:	xor    al,al
  4018bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4018be:	xchg   esp,eax
  4018bf:	mov    esp,0xd8ed8de0
  4018c4:	test   DWORD PTR [ecx-0x9],esi
  4018c7:	mov    gs,WORD PTR [ebx-0x2c39c56e]
  4018cd:	lahf   
  4018ce:	in     eax,dx
  4018cf:	xchg   edx,eax
  4018d0:	jp     0x401854
  4018d2:	ret    0x5160
  4018d5:	retf   0xde97
  4018d8:	adc    BYTE PTR [edx-0x19e506a0],bh
  4018de:	xchg   edx,eax
  4018df:	std    
  4018e0:	pop    ebp
  4018e1:	xchg   edx,eax
  4018e2:	sub    edx,ecx
  4018e4:	jmp    0x7943f72b
  4018e9:	cmp    ebx,DWORD PTR [ecx+0x45]
  4018ec:	add    DWORD PTR [edx-0x50],ebx
  4018ef:	pcmpeqb mm2,QWORD PTR [ecx]
  4018f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4018f3:	out    dx,eax
  4018f4:	mov    ah,0xf3
  4018f6:	ficomp WORD PTR [ebx]
  4018f8:	mov    dh,0x62
  4018fa:	jne    0x401939
  4018fc:	repz pop ebp
  4018fe:	mov    ds:0xf52a57de,al
  401903:	jns    0x4018db
  401905:	add    ch,BYTE PTR ds:0xb9272de4
  40190b:	pop    ds
  40190c:	jbe    0x4018fc
  40190e:	add    BYTE PTR [esi],al
  401910:	iret   
  401911:	push   eax
  401912:	das    
  401913:	sbb    ah,al
  401915:	push   DWORD PTR [edx]
  401917:	fbld   TBYTE PTR [eax+edx*8]
  40191a:	dec    esi
  40191b:	mov    cl,0xd3
  40191d:	stos   BYTE PTR es:[edi],al
  40191e:	sbb    DWORD PTR [ebx-0xf853dc8],0xf
  401925:	into   
  401926:	mov    dl,0x83
  401928:	aam    0x37
  40192a:	jp     0x4018e8
  40192c:	sar    DWORD PTR [ebp+0x5ab37ac5],cl
  401932:	inc    eax
  401933:	sbb    edx,edi
  401935:	push   es
  401936:	sub    DWORD PTR [eax-0x1e6de9ba],ebp
  40193c:	ins    DWORD PTR es:[edi],dx
  40193d:	add    ecx,ebp
  40193f:	sysenter 
  401941:	std    
  401942:	mov    ebp,0xd68a3244
  401947:	es pop esi
  401949:	pop    ebp
  40194a:	mov    bl,0x68
  40194c:	jb     0x4018f5
  40194e:	add    bl,BYTE PTR [esi]
  401950:	int3   
  401951:	in     eax,dx
  401952:	xor    al,0x29
  401954:	mov    dl,0xea
  401956:	clc    
  401957:	lds    ebx,FWORD PTR [ecx-0x3d]
  40195a:	adc    DWORD PTR [esp+edi*4-0x14],edi
  40195e:	stc    
  40195f:	or     al,BYTE PTR [edi]
  401961:	inc    edi
  401962:	mov    ecx,0xcdd922d4
  401967:	cmc    
  401968:	adc    BYTE PTR [eax],cl
  40196a:	xor    esi,esi
  40196c:	adc    DWORD PTR [edx-0x18ce6951],edx
  401972:	js     0x401950
  401974:	retf   
  401975:	add    edi,ebp
  401977:	daa    
  401978:	(bad)  
  40197a:	das    
  40197b:	pop    edi
  40197c:	xchg   edx,eax
  40197d:	sbb    ebp,esp
  40197f:	mov    bl,0xa9
  401981:	sbb    al,0x73
  401983:	xchg   esi,eax
  401984:	dec    edx
  401985:	rcl    BYTE PTR [esp+edx*2+0x4d],0x8a
  40198a:	clc    
  40198b:	loope  0x40199e
  40198d:	sub    al,0xb2
  40198f:	inc    ebp
  401990:	cmp    edi,DWORD PTR [edx+0x20]
  401993:	test   BYTE PTR [eax],cl
  401995:	into   
  401996:	icebp  
  401997:	mov    dh,0x49
  401999:	xchg   ebx,eax
  40199a:	repnz xor al,0x3e
  40199d:	jge    0x4019a9
  40199f:	adc    BYTE PTR [eax+0x7297a568],dh
  4019a5:	cli    
  4019a6:	data16 cld 
  4019a8:	faddp  st(4),st
  4019aa:	dec    ebx
  4019ab:	fadd   DWORD PTR [ebx-0x6d]
  4019ae:	cmp    bh,0x60
  4019b1:	sub    eax,DWORD PTR [esi+0x7ee1b8b0]
  4019b7:	push   es
  4019b8:	sub    dl,ah
  4019ba:	inc    edx
  4019bb:	(bad)  
  4019bc:	pop    edx
  4019bd:	pop    edi
  4019be:	mov    ah,0xc7
  4019c0:	inc    edx
  4019c1:	jmp    0xb5cd:0xab32c2ef
  4019c8:	fwait
  4019c9:	mov    ecx,0x525dfa0b
  4019ce:	mov    ch,0x84
  4019d0:	sbb    DWORD PTR [edi-0x1e7e62b5],ebp
  4019d6:	scas   al,BYTE PTR es:[edi]
  4019d7:	pop    ss
  4019d8:	jmp    FWORD PTR [eax]
  4019da:	jp     0x401a5a
  4019dc:	mov    ah,0x9d
  4019de:	enter  0x4627,0x66
  4019e2:	push   0xffffffc4
  4019e4:	int3   
  4019e5:	dec    edx
  4019e6:	fs clc 
  4019e8:	push   ds
  4019e9:	pop    ss
  4019ea:	psubb  mm5,mm7
  4019ed:	out    dx,al
  4019ee:	ins    DWORD PTR es:[edi],dx
  4019ef:	inc    ebx
  4019f0:	fwait
  4019f1:	addr16 dec eax
  4019f3:	add    eax,0xe78384ec
  4019f8:	dec    esp
  4019f9:	mov    ah,0xc7
  4019fb:	std    
  4019fc:	std    
  4019fd:	das    
  4019fe:	js     0x4019d6
  401a00:	lods   eax,DWORD PTR ds:[esi]
  401a01:	xor    ch,dl
  401a03:	inc    eax
  401a04:	sbb    ebx,DWORD PTR cs:[esi+0x7782dde4]
  401a0b:	dec    edx
  401a0c:	mov    ebp,0x713262e0
  401a11:	enter  0x426b,0xeb
  401a15:	lods   al,BYTE PTR ds:[esi]
  401a16:	dec    ecx
  401a17:	les    ecx,FWORD PTR [ecx-0x430e42f7]
  401a1d:	aad    0x62
  401a1f:	inc    esp
  401a20:	ror    esp,0x4
  401a23:	sti    
  401a24:	icebp  
  401a25:	adc    eax,0x96857dcc
  401a2a:	push   esi
  401a2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a2c:	cmp    al,0xd4
  401a2e:	sub    BYTE PTR [edx-0x2c],cl
  401a31:	xor    ecx,ebp
  401a33:	ins    BYTE PTR es:[edi],dx
  401a34:	fs cmp al,0xff
  401a37:	ins    BYTE PTR es:[edi],dx
  401a38:	inc    eax
  401a39:	cmp    bl,BYTE PTR [ebx+0x4e5dd4a]
  401a3f:	fisubr DWORD PTR [ebx-0x49025668]
  401a45:	fsubr  st(7),st
  401a47:	stos   BYTE PTR es:[edi],al
  401a48:	add    BYTE PTR [esi-0x3c],0x81
  401a4c:	and    bl,al
  401a4e:	into   
  401a4f:	cdq    
  401a50:	pop    eax
  401a51:	mov    dl,0x64
  401a53:	or     ecx,edi
  401a55:	(bad)  
  401a56:	outs   dx,DWORD PTR ds:[esi]
  401a57:	add    eax,esp
  401a59:	mov    ecx,0x19ecc8e8
  401a5e:	add    ecx,DWORD PTR ds:0x681dc40c
  401a64:	pop    edx
  401a65:	mov    edi,0x8f9ad8d0
  401a6a:	cmp    DWORD PTR [esi-0x6b],0xb683b4b9
  401a71:	cmc    
  401a72:	enter  0x6965,0x75
  401a76:	sbb    eax,0x6e469c86
  401a7b:	loopne 0x401a5c
  401a7d:	mov    BYTE PTR [esp+ebx*4+0x68],bh
  401a81:	xor    ebx,DWORD PTR [esi]
  401a83:	mov    dl,cl
  401a85:	xor    edx,DWORD PTR [edx-0x28]
  401a88:	pop    eax
  401a89:	push   ds
  401a8a:	adc    DWORD PTR [eax+esi*2],ebp
  401a8d:	fs in  al,0xed
  401a90:	sub    DWORD PTR [edx-0xbba86c6],edx
  401a96:	xchg   edi,eax
  401a97:	mov    bh,0x5d
  401a99:	push   ecx
  401a9a:	sub    esi,DWORD PTR [edi-0x741237d9]
  401aa0:	fsubr  DWORD PTR [edi]
  401aa2:	xchg   BYTE PTR [ebx],dh
  401aa4:	ret    
  401aa5:	test   DWORD PTR [ebx-0x4f],ebx
  401aa8:	mov    dl,0x69
  401aaa:	xor    BYTE PTR [eax+0x35],dl
  401aad:	test   eax,0x2a86c93e
  401ab2:	mov    esp,DWORD PTR [ebx+eax*4-0x6c]
  401ab6:	enter  0x4281,0x92
  401aba:	and    BYTE PTR [ebx+0x16c84790],cl
  401ac0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ac1:	dec    eax
  401ac2:	jmp    0xc9c9:0xfab477f5
  401ac9:	stos   DWORD PTR es:[edi],eax
  401aca:	(bad)  
  401acb:	jge    0x401a54
  401acd:	ret    
  401ace:	or     dl,BYTE PTR [ebx-0x9]
  401ad1:	push   0xffffffae
  401ad3:	ins    DWORD PTR es:[edi],dx
  401ad4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ad5:	cmp    eax,ebp
  401ad7:	std    
  401ad8:	pop    ecx
  401ad9:	fistp  DWORD PTR [esi+0x25]
  401adc:	dec    esp
  401add:	dec    ebx
  401ade:	mov    ?,WORD PTR [ecx+0x1d]
  401ae1:	inc    ebp
  401ae2:	add    al,0x93
  401ae4:	xchg   ecx,eax
  401ae5:	jp     0x401b55
  401ae7:	out    dx,eax
  401ae8:	stos   DWORD PTR es:[edi],eax
  401ae9:	imul   ecx,ecx,0x65f8cbd9
  401aef:	retf   
  401af0:	dec    edi
  401af1:	jae    0x401a98
  401af3:	jno    0x401a85
  401af5:	rol    BYTE PTR [edi+ebx*4+0x4],0x64
  401afa:	clc    
  401afb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401afc:	gs push edi
  401afe:	add    dl,BYTE PTR [ecx-0x3e37e2d5]
  401b04:	xlat   BYTE PTR ds:[ebx]
  401b05:	add    BYTE PTR [eax],0x9d
  401b08:	jno    0x401b2f
  401b0a:	push   ecx
  401b0b:	push   esp
  401b0c:	mov    eax,ds:0xa73bffd2
  401b11:	outs   dx,BYTE PTR ds:[esi]
  401b12:	cmp    DWORD PTR [esi],edi
  401b14:	data16 sbb BYTE PTR [esi+ecx*2-0x28],0x7e
  401b1a:	sahf   
  401b1b:	les    ecx,FWORD PTR ds:0x16d1bbcb
  401b21:	(bad)  
  401b22:	pop    ss
  401b23:	xchg   edi,eax
  401b24:	out    0x74,al
  401b26:	dec    DWORD PTR [ebx+eax*8-0x50f578e]
  401b2d:	add    dl,bl
  401b2f:	xlat   BYTE PTR ds:[ebx]
  401b30:	(bad)  
  401b31:	adc    ecx,DWORD PTR [edi]
  401b33:	sahf   
  401b34:	cwde   
  401b35:	cli    
  401b36:	scas   al,BYTE PTR es:[edi]
  401b37:	loopne 0x401b4e
  401b39:	xchg   ecx,eax
  401b3a:	mov    ah,0x18
  401b3c:	push   cs
  401b3d:	(bad)
  401b40:	push   cs
  401b41:	adc    edi,esp
  401b43:	mov    edx,eax
  401b45:	or     DWORD PTR [ebx+0x50b7512d],0x7672fd93
  401b4f:	xor    eax,0x1fd9103e
  401b54:	pop    ds
  401b55:	dec    eax
  401b56:	cmp    esp,DWORD PTR [ecx]
  401b58:	mov    bl,0x9a
  401b5a:	pop    esp
  401b5b:	aaa    
  401b5c:	push   ecx
  401b5d:	and    DWORD PTR [esi],ebx
  401b5f:	clc    
  401b60:	pop    es
  401b61:	push   edi
  401b62:	or     BYTE PTR [ebp-0x7b],ah
  401b65:	xor    dl,dl
  401b67:	call   0xf0b8c4e9
  401b6c:	xchg   DWORD PTR [eax+0x27],eax
  401b6f:	push   edi
  401b70:	jae    0x401b81
  401b72:	inc    edx
  401b73:	lds    ebx,FWORD PTR [eax-0x31b90a37]
  401b79:	xchg   esi,eax
  401b7a:	sbb    esp,DWORD PTR [esi+0x25debce1]
  401b80:	enter  0xbf73,0xb2
  401b84:	jne    0x401c04
  401b86:	mov    edx,0x954f3a78
  401b8b:	cmp    DWORD PTR [ebp+0x46],esi
  401b8e:	push   0x70e465a9
  401b93:	sub    eax,0x6ca272fb
  401b98:	out    0xb1,al
  401b9a:	adc    BYTE PTR [ebx+0x68],0x5c
  401b9e:	push   esi
  401b9f:	in     al,0xba
  401ba1:	in     eax,0x3f
  401ba3:	dec    eax
  401ba4:	or     al,BYTE PTR [esi+edi*4+0x4d]
  401ba8:	data16 jno 0x401c19
  401bab:	adc    ecx,DWORD PTR [esi+0x17]
  401bae:	ins    DWORD PTR es:[edi],dx
  401baf:	scas   eax,DWORD PTR es:[edi]
  401bb0:	stc    
  401bb1:	in     eax,dx
  401bb2:	ss xchg edx,eax
  401bb4:	jb     0x401b88
  401bb6:	xlat   BYTE PTR ds:[ebx]
  401bb7:	push   ecx
  401bb8:	outs   dx,DWORD PTR ds:[esi]
  401bb9:	rol    DWORD PTR [eax+0x53],1
  401bbc:	or     DWORD PTR [ebx+ebx*4],ebp
  401bbf:	test   DWORD PTR es:[esi],eax
  401bc2:	out    dx,eax
  401bc3:	xchg   ecx,eax
  401bc4:	outs   dx,DWORD PTR ds:[esi]
  401bc5:	sbb    eax,0x5f6b6d89
  401bca:	jl     0x401bd5
  401bcc:	sub    cl,BYTE PTR [edx+0x60]
  401bcf:	test   al,0x7c
  401bd1:	dec    edx
  401bd2:	mov    ebp,0xa07c79d5
  401bd7:	sbb    eax,0x20ad500d
  401bdc:	arpl   WORD PTR [eax],si
  401bde:	jb     0x401c53
  401be0:	test   BYTE PTR [ecx-0x5752fb79],dh
  401be6:	jg     0x401c27
  401be8:	ss pushf 
  401bea:	mov    ah,0xb8
  401bec:	or     eax,esi
  401bee:	enter  0x5e9a,0xbd
  401bf2:	mov    dl,0x53
  401bf4:	xchg   cl,al
  401bf6:	cwde   
  401bf7:	mov    esp,0xe63e4a67
  401bfc:	rcr    DWORD PTR [ebx+0x58],1
  401bff:	std    
  401c00:	cmp    esp,DWORD PTR [esi]
  401c02:	test   al,0x63
  401c04:	cli    
  401c05:	ins    BYTE PTR es:[edi],dx
  401c06:	out    dx,al
  401c07:	and    eax,esp
  401c09:	cmp    ch,BYTE PTR [esi+0x76]
  401c0c:	xchg   ebp,eax
  401c0d:	(bad)  
  401c0e:	out    dx,eax
  401c0f:	aas    
  401c10:	dec    ecx
  401c11:	rep lods al,BYTE PTR ds:[esi]
  401c13:	jns    0x401c12
  401c15:	repz lds eax,FWORD PTR [ecx+0x5b]
  401c19:	clc    
  401c1a:	cld    
  401c1b:	dec    edi
  401c1c:	test   DWORD PTR [eax+0x233d2a6a],edi
  401c22:	cwde   
  401c23:	clc    
  401c24:	xchg   edx,eax
  401c25:	loope  0x401c6e
  401c27:	mov    WORD PTR [ebp-0xf2f91ca],?
  401c2d:	and    al,0x1f
  401c2f:	sub    eax,0xa4f2d9cd
  401c34:	rcl    ch,cl
  401c36:	pop    ebx
  401c37:	nop
  401c38:	mov    WORD PTR [esi],ds
  401c3a:	push   edx
  401c3b:	jmp    0x401bd2
  401c3d:	dec    eax
  401c3e:	shl    DWORD PTR [eax],cl
  401c40:	adc    BYTE PTR [bx-0xbbd],0xd9
  401c46:	jbe    0x401c32
  401c48:	xchg   edx,eax
  401c49:	and    bl,BYTE PTR [ebx-0x25]
  401c4c:	inc    edx
  401c4d:	clc    
  401c4e:	xor    esp,ebx
  401c50:	xor    edi,DWORD PTR [edi-0x248397ce]
  401c56:	call   eax
  401c58:	imul   edi,DWORD PTR [esi-0x18],0xfffffff3
  401c5c:	xor    al,0xe2
  401c5e:	and    bl,BYTE PTR [ebp-0xf]
  401c61:	shl    DWORD PTR [edi+0x46b8ebf3],0xbc
  401c68:	jb     0x401c19
  401c6a:	sub    ax,bp
  401c6d:	das    
  401c6e:	push   0x5c2739db
  401c73:	enter  0xcfc5,0x2c
  401c77:	and    BYTE PTR [esi-0x4db4ac13],ch
  401c7d:	call   0xe6f:0xb8855995
  401c84:	dec    esi
  401c85:	jecxz  0x401c7a
  401c87:	or     BYTE PTR [ebx-0x47e812d9],dl
  401c8d:	(bad)  
  401c8e:	pop    ecx
  401c8f:	pop    ss
  401c90:	cmp    al,0x48
  401c92:	adc    al,0x13
  401c94:	mov    ebx,0x8df9ebfc
  401c99:	imul   esi,DWORD PTR [esi+ebx*8],0x1223a144
  401ca0:	leave  
  401ca1:	pop    esp
  401ca2:	outs   dx,BYTE PTR ds:[esi]
  401ca3:	inc    esp
  401ca4:	or     DWORD PTR [esi],ebp
  401ca6:	data16 fbld TBYTE PTR [edi-0x13]
  401caa:	and    eax,0x9a7b7f79
  401caf:	add    al,0x43
  401cb1:	and    dh,BYTE PTR [eax+edi*2-0x6e]
  401cb5:	jle    0x401c57
  401cb7:	mov    ebx,0x4ac70159
  401cbc:	ficomp WORD PTR [ebx]
  401cbe:	dec    ebx
  401cbf:	stos   BYTE PTR es:[edi],al
  401cc0:	cmp    al,0xa6
  401cc2:	mov    bh,0x51
  401cc4:	es push esp
  401cc6:	fadd   QWORD PTR [ecx-0x2f945d93]
  401ccc:	add    cl,BYTE PTR fs:[ebp+0x70f278f5]
  401cd3:	test   eax,0x51b36f5e
  401cd8:	push   ebx
  401cd9:	push   0xffffffb7
  401cdb:	je     0x401ccd
  401cdd:	and    dl,cl
  401cdf:	add    edi,DWORD PTR [edx+0x79343458]
  401ce5:	mov    eax,0xeed88c83
  401cea:	aas    
  401ceb:	push   0x72da1343
  401cf0:	call   0x6c64:0x64e0bb9d
  401cf7:	inc    eax
  401cf8:	xor    eax,0x45c79966
  401cfd:	fldenv [edi+edx*2-0x38177f7]
  401d04:	pop    ebx
  401d05:	jecxz  0x401d53
  401d07:	pop    edx
  401d08:	dec    eax
  401d09:	add    edi,DWORD PTR [esi-0x47985761]
  401d0f:	or     ch,BYTE PTR [ebp+0x48]
  401d12:	imul   ebx,ebx,0x6cbbabb0
  401d18:	repz sbb BYTE PTR [ebx],bh
  401d1b:	mov    eax,DWORD PTR [esi-0x4f]
  401d1e:	scas   al,BYTE PTR es:[edi]
  401d1f:	fld    TBYTE PTR [ecx-0x5c38024f]
  401d25:	cdq    
  401d26:	cmp    BYTE PTR [esi+ebx*4+0x20a0a1b8],bh
  401d2d:	shr    DWORD PTR [edi-0x175d92d6],0x3c
  401d34:	ss mov eax,es
  401d37:	adc    DWORD PTR [eax],ebx
  401d39:	or     dl,0xf7
  401d3c:	xchg   BYTE PTR [ecx-0x153958fa],bl
  401d42:	add    al,0xbf
  401d44:	(bad)  
  401d45:	or     edi,DWORD PTR [eax-0x48]
  401d48:	imul   ebp,edi,0xffffffe7
  401d4b:	pop    ebx
  401d4c:	ins    BYTE PTR es:[edi],dx
  401d4d:	call   0xc1f1:0xbb8e01f
  401d54:	(bad)  
  401d55:	pop    edx
  401d56:	dec    esi
  401d57:	scas   al,BYTE PTR es:[edi]
  401d58:	inc    ecx
  401d59:	nop
  401d5a:	jo     0x401ce9
  401d5c:	bound  esp,QWORD PTR [edx+0x11]
  401d5f:	int3   
  401d60:	sub    eax,0x6a2b0589
  401d65:	stos   BYTE PTR es:[edi],al
  401d66:	cli    
  401d67:	ss pop esi
  401d69:	ficomp DWORD PTR [ecx-0x272107c]
  401d6f:	adc    BYTE PTR [edx-0x548ebaae],cl
  401d75:	jmp    FWORD PTR [edi]
  401d77:	fimul  DWORD PTR [esi+0x752d9620]
  401d7d:	mov    BYTE PTR [edi-0x6ebbdd],ah
  401d83:	or     BYTE PTR [ebp+0x5e],cl
  401d86:	sti    
  401d87:	enter  0x110e,0x6c
  401d8b:	outs   dx,BYTE PTR ds:[esi]
  401d8c:	add    eax,0xa246bd79
  401d91:	cmp    eax,0xbb0ef94f
  401d96:	add    BYTE PTR [eax+0x68],al
  401d99:	mov    al,0xe8
  401d9b:	mov    dl,0x32
  401d9d:	push   ebx
  401d9e:	cdq    
  401d9f:	lds    ecx,FWORD PTR ds:0xc0ac7633
  401da5:	test   BYTE PTR [esi-0x2],ah
  401da8:	iret   
  401da9:	xchg   ebp,eax
  401daa:	add    al,0xdf
  401dac:	sahf   
  401dad:	jl     0x401d6c
  401daf:	loope  0x401d40
  401db1:	mov    ecx,?
  401db3:	or     cl,BYTE PTR [esi-0x7859dfa8]
  401db9:	out    0x1f,al
  401dbb:	jmp    0x401d67
  401dbd:	adc    al,0xa3
  401dbf:	add    esp,edi
  401dc1:	push   ss
  401dc2:	add    edi,edi
  401dc4:	sar    BYTE PTR [edi+0x52],cl
  401dc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401dc8:	pop    edx
  401dc9:	xor    dl,BYTE PTR [edi-0x6e0bd289]
  401dcf:	push   cs
  401dd0:	nop
  401dd1:	cs and eax,0xf3e5dfae
  401dd7:	clc    
  401dd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401dd9:	hlt    
  401dda:	cmp    eax,0x4c8a17c0
  401ddf:	je     0x401e41
  401de1:	cmp    ebp,DWORD PTR [edi+0x1b]
  401de4:	xor    eax,0x6f2dd0b1
  401de9:	icebp  
  401dea:	or     ch,BYTE PTR [esp+esi*1+0x60]
  401dee:	inc    ecx
  401def:	into   
  401df0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401df1:	mov    ds:0xa20d2c97,al
  401df6:	push   0xe9835e41
  401dfb:	mov    ds:0xb1ca982b,al
  401e00:	add    eax,0x60337547
  401e05:	leave  
  401e06:	in     eax,dx
  401e07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e08:	stc    
  401e09:	mov    ebp,0xcfa4d8a1
  401e0e:	repz dec edx
  401e10:	scas   eax,DWORD PTR es:[edi]
  401e11:	fdiv   QWORD PTR [eax+0x6f322041]
  401e17:	mov    WORD PTR [ecx+0x3f],gs
  401e1a:	ds push 0xffffff8d
  401e1d:	ins    DWORD PTR es:[edi],dx
  401e1e:	sub    BYTE PTR [esi+0x6f],al
  401e21:	or     DWORD PTR [edx-0x3c],esi
  401e24:	ins    DWORD PTR es:[edi],dx
  401e25:	inc    eax
  401e26:	rol    BYTE PTR [esi-0x2e],cl
  401e29:	scas   eax,DWORD PTR es:[edi]
  401e2a:	mov    edi,DWORD PTR [esp+ebp*2-0x635e4d38]
  401e31:	add    ah,ch
  401e33:	ds mov esp,0x2f38b45d
  401e39:	mov    cl,0xb1
  401e3b:	mov    al,BYTE PTR [esi+0x882c0eb]
  401e41:	dec    eax
  401e42:	jo     0x401ebe
  401e44:	add    edi,ebp
  401e46:	scas   eax,DWORD PTR es:[edi]
  401e47:	adc    edi,DWORD PTR [eax+0x6c66e29a]
  401e4d:	cmp    dl,ah
  401e4f:	push   edx
  401e50:	sbb    BYTE PTR ds:0x713b6dda,cl
  401e56:	stos   DWORD PTR es:[edi],eax
  401e57:	mov    DWORD PTR [esi],esp
  401e59:	das    
  401e5a:	and    eax,0x274c4e4c
  401e5f:	mov    eax,0x74f5d9af
  401e64:	enter  0x5198,0x46
  401e68:	clc    
  401e69:	jo     0x401e85
  401e6b:	jo     0x401e5e
  401e6d:	popa   
  401e6e:	aad    0x82
  401e70:	xchg   ecx,eax
  401e71:	inc    esp
  401e72:	data16 shl bl,0xb4
  401e76:	aas    
  401e77:	cdq    
  401e78:	push   eax
  401e79:	push   ebx
  401e7a:	bound  edx,QWORD PTR [edx-0x62]
  401e7d:	imul   esp,DWORD PTR [ebx+0x25a3b86a],0xffffff9f
  401e84:	mov    ds:0x8e2f2403,eax
  401e89:	sub    eax,0x943b532f
  401e8e:	cmovl  esp,DWORD PTR [ecx+ebp*4+0x65]
  401e93:	dec    esi
  401e94:	push   eax
  401e95:	adc    ebp,eax
  401e97:	hlt    
  401e98:	ret    0xf31f
  401e9b:	mov    eax,0x2e7f204
  401ea0:	mov    ebp,0x8f0ea698
  401ea5:	pop    ds
  401ea6:	ins    DWORD PTR es:[edi],dx
  401ea7:	(bad)  [edi-0x631d62e1]
  401ead:	leave  
  401eae:	xor    al,BYTE PTR [esi+edx*8+0x27f85c9e]
  401eb5:	xor    eax,0x5cc8560
  401eba:	icebp  
  401ebb:	mov    edi,0x556992ae
  401ec0:	retf   
  401ec1:	clc    
  401ec2:	or     esp,DWORD PTR [edx]
  401ec4:	popf   
  401ec5:	std    
  401ec6:	xchg   BYTE PTR [edi-0xf53367],dl
  401ecc:	(bad)  
  401ecd:	fidiv  WORD PTR [ecx]
  401ecf:	xchg   esp,eax
  401ed0:	cmp    BYTE PTR [ebx],ah
  401ed2:	outs   dx,BYTE PTR ds:[esi]
  401ed3:	arpl   WORD PTR [ebx-0x4],dx
  401ed6:	push   edx
  401ed7:	push   ebx
  401ed8:	push   ebx
  401ed9:	test   al,0x35
  401edb:	push   ebx
  401edc:	or     cl,bl
  401ede:	lock hlt 
  401ee0:	mov    eax,0x71edfefc
  401ee5:	push   0xffffffba
  401ee7:	push   ds
  401ee8:	aam    0xbd
  401eea:	ja     0x401e7a
  401eec:	gs mov edx,0x2382c87d
  401ef2:	pop    ebx
  401ef3:	inc    edx
  401ef4:	pop    ebp
  401ef5:	sub    DWORD PTR [esi+0x7cb176f0],0x15adbba8
  401eff:	daa    
  401f00:	out    dx,al
  401f01:	imul   edi,eax,0x42957f8c
  401f07:	inc    esi
  401f08:	jb     0x401ef9
  401f0a:	retf   
  401f0b:	call   0x372211b2
  401f10:	rcr    BYTE PTR [edx],0x8c
  401f13:	cmc    
  401f14:	adc    bl,ah
  401f16:	outs   dx,DWORD PTR ds:[esi]
  401f17:	xchg   ecx,eax
  401f18:	xchg   BYTE PTR [ebp+0x4b637928],dl
  401f1e:	xchg   esi,eax
  401f1f:	or     edx,DWORD PTR [ebx+0x15]
  401f22:	inc    edx
  401f23:	mov    BYTE PTR [edx+0x58],0xd6
  401f27:	rol    esi,0xb0
  401f2a:	out    0x75,al
  401f2c:	jmp    0x97c6e79
  401f31:	sar    DWORD PTR [eax-0x47f054b7],cl
  401f37:	repz xor eax,0xf787cd13
  401f3d:	retf   
  401f3e:	add    al,0x9f
  401f40:	in     al,dx
  401f41:	pop    es
  401f42:	leave  
  401f43:	jg     0x401f61
  401f45:	and    dl,ah
  401f47:	popa   
  401f48:	std    
  401f49:	aad    0x91
  401f4b:	or     BYTE PTR [ebx],dh
  401f4d:	mov    eax,0xe321c876
  401f52:	xchg   edi,eax
  401f53:	pop    edi
  401f54:	aam    0x8d
  401f56:	out    dx,al
  401f57:	xor    DWORD PTR [ebp-0x10],edi
  401f5a:	jmp    0xbd63:0x47321a74
  401f61:	cmc    
  401f62:	xor    eax,0x4710ef3e
  401f67:	push   ds
  401f68:	or     ch,BYTE PTR [esi+0x1d]
  401f6b:	xchg   esi,eax
  401f6c:	push   ss
  401f6d:	inc    esp
  401f6e:	cmp    al,0x77
  401f70:	xchg   edi,eax
  401f71:	push   0x6302939e
  401f76:	add    ecx,DWORD PTR [ebp-0x1e]
  401f79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f7a:	sbb    BYTE PTR [edx+0x54],0x53
  401f7e:	inc    ebp
  401f7f:	cwde   
  401f80:	sbb    BYTE PTR [eax],dl
  401f82:	sbb    edx,0x5d
  401f85:	pushf  
  401f86:	ja     0x401f7d
  401f88:	paddusw mm1,QWORD PTR [eax+eax*2-0x35]
  401f8d:	adc    BYTE PTR [edx],al
  401f8f:	sti    
  401f90:	ds xor eax,0xb26af9eb
  401f96:	inc    ebp
  401f97:	shl    eax,cl
  401f99:	adc    ebx,eax
  401f9b:	fisubr WORD PTR [eax]
  401f9d:	(bad)  
  401f9e:	cmp    edx,esi
  401fa0:	jne    0x40201f
  401fa2:	retf   0x50ba
  401fa5:	jl     0x402000
  401fa7:	das    
  401fa8:	(bad)  
  401fa9:	cmp    DWORD PTR [esi],0xc5ba7bfc
  401faf:	test   DWORD PTR [esi],eax
  401fb1:	jge    0x401fbd
  401fb3:	repnz mov cl,0xe1
  401fb6:	pop    edx
  401fb7:	pop    ecx
  401fb8:	jmp    0x9598:0x17e84c60
  401fbf:	addr16 ret 0x5f7c
  401fc3:	push   esi
  401fc4:	sub    bh,BYTE PTR [esi]
  401fc6:	pop    edi
  401fc7:	and    dl,al
  401fc9:	dec    edi
  401fca:	mov    bh,BYTE PTR [edx]
  401fcc:	ret    0x317a
  401fcf:	mov    esi,0xfc3111e7
  401fd4:	das    
  401fd5:	ret    0xa5df
  401fd8:	push   0xffffffa3
  401fda:	xor    ch,BYTE PTR [ebp-0x29]
  401fdd:	or     cl,BYTE PTR [edi]
  401fdf:	mov    cl,0x64
  401fe1:	out    dx,al
  401fe2:	sahf   
  401fe3:	adc    dl,ch
  401fe5:	js     0x401f9f
  401fe7:	mov    esp,0x66f4d24a
  401fec:	and    eax,0x1a59668c
  401ff1:	push   0x2d4d3c03
  401ff6:	jb     0x401fa1
  401ff8:	dec    esi
  401ff9:	daa    
  401ffa:	rcl    DWORD PTR [edx],0xd
  401ffd:	push   eax
  401ffe:	jno    0x401fa9
  402000:	data16 das 
  402002:	and    al,0xd9
  402004:	or     DWORD PTR [ebx],ebx
  402006:	xor    eax,DWORD PTR [edx+0x42]
  402009:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40200a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40200b:	jae    0x402034
  40200d:	xor    eax,0x1d191921
  402012:	mov    ebx,0x696d770f
  402017:	je     0x40202e
  402019:	iret   
  40201a:	fs mov dl,0xd2
  40201d:	je     0x40201d
  40201f:	pop    ss
  402020:	(bad)  
  402021:	stos   DWORD PTR es:[edi],eax
  402022:	in     eax,dx
  402023:	bound  edx,QWORD PTR [ecx+esi*4]
  402026:	(bad)  
  402027:	test   BYTE PTR [ebp-0x64f230cb],0xd7
  40202e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40202f:	aam    0x46
  402031:	sub    al,BYTE PTR [edx]
  402033:	retf   0xd577
  402036:	jge    0x40209f
  402038:	scas   al,BYTE PTR es:[edi]
  402039:	inc    edi
  40203a:	xchg   esp,ebx
  40203c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40203d:	mov    ecx,0x2f3a320f
  402042:	dec    ecx
  402043:	sub    BYTE PTR [ecx+0x75],ch
  402046:	and    edx,DWORD PTR [edx-0x3b521326]
  40204c:	cdq    
  40204d:	mov    al,0x5d
  40204f:	xor    al,0x5d
  402051:	mov    eax,0x30028f56
  402056:	mov    ebp,DWORD PTR [eax]
  402058:	stos   BYTE PTR es:[edi],al
  402059:	pop    ss
  40205a:	add    eax,DWORD PTR [ecx-0xf]
  40205d:	lds    esp,FWORD PTR ds:0x9d6b5dc9
  402063:	sar    DWORD PTR [edi+ecx*8-0x26],1
  402067:	ret    0xdf2b
  40206a:	push   edx
  40206b:	pop    edi
  40206c:	mov    al,ds:0xa812617c
  402071:	cmp    eax,0x889dbc98
  402076:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402077:	mov    fs,WORD PTR [edx+0x5f]
  40207a:	mov    cl,0x99
  40207c:	fdivp  st(2),st
  40207e:	stc    
  40207f:	(bad)
  402084:	sbb    eax,0x136285a5
  402089:	cmp    DWORD PTR [di-0x4c39],esi
  40208e:	and    esp,DWORD PTR [edx]
  402090:	mov    WORD PTR [ebp-0x3ba1d48b],ss
  402096:	ret    
  402097:	rcr    DWORD PTR [eax+0x8572de1],1
  40209d:	rep lods al,BYTE PTR ds:[esi]
  40209f:	(bad)  
  4020a0:	nop
  4020a1:	sbb    DWORD PTR [edx-0x5b55ea11],ecx
  4020a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4020a8:	loop   0x4020cd
  4020aa:	sbb    al,0x3d
  4020ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4020ad:	(bad)  
  4020ae:	add    BYTE PTR [edi+0x2a],bh
  4020b1:	ret    
  4020b2:	mov    al,ds:0x2dfcf8ee
  4020b7:	pop    ss
  4020b8:	xlat   BYTE PTR ds:[ebx]
  4020b9:	sub    al,BYTE PTR [esi-0x507cd71c]
  4020bf:	rcl    DWORD PTR [ecx],1
  4020c1:	ss lahf 
  4020c3:	sbb    DWORD PTR [eax-0x6],ebx
  4020c6:	sub    edx,ebp
  4020c8:	xchg   dx,ax
  4020ca:	fnsave [ebx-0x48]
  4020cd:	add    DWORD PTR [edx-0x55],ebx
  4020d0:	bound  esi,QWORD PTR [edi+ebp*1+0x1d]
  4020d4:	sbb    ah,BYTE PTR [edx]
  4020d6:	and    BYTE PTR ds:0xa70fa9b9,dh
  4020dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4020dd:	test   BYTE PTR [ecx+0x5d495c12],ch
  4020e3:	mov    al,0x79
  4020e5:	daa    
  4020e6:	xchg   edi,eax
  4020e7:	dec    ebx
  4020e8:	and    ebx,DWORD PTR [edi-0x7714ce89]
  4020ee:	mov    ebx,0x8a18d0b8
  4020f3:	clc    
  4020f4:	mov    eax,0x8d58861
  4020f9:	je     0x4020bd
  4020fb:	je     0x4020dd
  4020fd:	inc    edx
  4020fe:	inc    edx
  4020ff:	mov    WORD PTR [edx],gs
  402101:	ret    0x90a7
  402104:	lods   al,BYTE PTR ds:[esi]
  402105:	test   eax,0x8d5b784b
  40210a:	xchg   edx,esi
  40210c:	push   ebx
  40210d:	lea    edi,[ebp+0x5721c64d]
  402113:	or     BYTE PTR [ecx],dl
  402115:	inc    edi
  402116:	icebp  
  402117:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402118:	sub    esp,DWORD PTR [ebx]
  40211a:	repnz or edx,DWORD PTR [eax+0xa47a057]
  402121:	daa    
  402122:	je     0x4020b4
  402124:	mov    WORD PTR [eax],cs
  402126:	jns    0x402130
  402128:	adc    dl,0x2f
  40212b:	dec    eax
  40212c:	cmp    dx,WORD PTR [eax-0x4]
  402130:	xlat   BYTE PTR ds:[ebx]
  402131:	retf   
  402132:	cmp    DWORD PTR [edi+0x7dfb0d75],ebx
  402138:	je     0x4020f4
  40213a:	jae    0x402171
  40213c:	enter  0xecc0,0x71
  402140:	pop    es
  402141:	shr    dl,cl
  402143:	xchg   ebp,eax
  402144:	call   0x4cce0bda
  402149:	pop    ecx
  40214a:	cmp    DWORD PTR fs:[ebx],0xf
  40214e:	(bad)
  402151:	jle    0x402156
  402153:	pop    ebx
  402154:	hlt    
  402155:	cmp    ebx,0x2758d44d
  40215b:	loope  0x4021b0
  40215d:	iret   
  40215e:	ds popf 
  402160:	popf   
  402161:	int    0xda
  402163:	cmp    al,0x51
  402165:	pop    esp
  402166:	mov    bl,0xaf
  402168:	xor    BYTE PTR [esi-0x20b99ce],bh
  40216e:	add    eax,0x9bcdedfa
  402173:	adc    DWORD PTR [esi],esi
  402175:	xor    DWORD PTR [ebp+0x28],0xffffffec
  402179:	out    0x49,al
  40217b:	int3   
  40217c:	sti    
  40217d:	ins    BYTE PTR es:[edi],dx
  40217e:	mov    edx,0x6fb95456
  402183:	ins    BYTE PTR es:[edi],dx
  402184:	shl    DWORD PTR [esi-0x4bbcf084],cl
  40218a:	and    ch,dh
  40218c:	add    BYTE PTR [ecx],bh
  40218e:	push   edi
  40218f:	fs mov bh,0x7c
  402192:	adc    esp,esp
  402194:	jne    0x4021e9
  402196:	je     0x4021df
  402198:	in     eax,0xb4
  40219a:	jmp    0x8349ec3d
  40219f:	sahf   
  4021a0:	lock fs xchg edx,eax
  4021a3:	xchg   ebp,eax
  4021a4:	or     ebx,0x23
  4021a7:	add    al,0xd9
  4021a9:	dec    edi
  4021aa:	(bad)  
  4021ab:	jmp    0x402166
  4021ad:	sbb    eax,0x5792bba1
  4021b2:	aas    
  4021b3:	imul   esp,edi,0x79
  4021b6:	fisubr DWORD PTR [ebp+edx*4-0x582f4fc4]
  4021bd:	in     al,dx
  4021be:	scas   al,BYTE PTR es:[edi]
  4021bf:	pop    esp
  4021c0:	xor    BYTE PTR [ebp-0x575930aa],ch
  4021c6:	jmp    DWORD PTR [ecx]
  4021c8:	lahf   
  4021c9:	fwait
  4021ca:	add    al,0x98
  4021cc:	push   ecx
  4021cd:	ja     0x4021fc
  4021cf:	lods   al,BYTE PTR ds:[esi]
  4021d0:	mov    BYTE PTR [ebp+ecx*1+0x2aadcbcd],ah
  4021d7:	xor    DWORD PTR [ecx-0x70855f9b],ebp
  4021dd:	(bad)  
  4021de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021df:	(bad)  
  4021e1:	dec    ebp
  4021e2:	xchg   bl,cl
  4021e4:	inc    ecx
  4021e5:	or     al,0x35
  4021e7:	outs   dx,DWORD PTR ds:[esi]
  4021e8:	call   0x6426:0xc0fba17a
  4021ef:	cmp    DWORD PTR [ebp+0x38732bec],esp
  4021f5:	sub    ebx,esi
  4021f7:	xchg   BYTE PTR [ebp+0x715113b6],bl
  4021fd:	mov    dh,0x64
  4021ff:	adc    ebx,eax
  402201:	es push 0xe9fb10b4
  402207:	cmp    ch,BYTE PTR [edx-0x6b]
  40220a:	test   DWORD PTR ds:0x27670451,0x69ec0a35
  402214:	aaa    
  402215:	xchg   BYTE PTR [eax-0x2df1d929],ch
  40221b:	into   
  40221c:	inc    ecx
  40221d:	inc    edx
  40221e:	(bad)  
  40221f:	jae    0x4021bf
  402221:	dec    esi
  402222:	jae    0x40220d
  402224:	repnz push ss
  402226:	(bad)  
  402227:	pop    esp
  402228:	dec    ecx
  402229:	push   ebx
  40222a:	out    0x78,al
  40222c:	inc    esi
  40222d:	fcom   st(3)
  40222f:	jle    0x402286
  402231:	addr16 cmp al,0x7a
  402234:	dec    ebx
  402235:	jecxz  0x4021d4
  402237:	pop    esp
  402238:	lods   al,BYTE PTR ds:[esi]
  402239:	sti    
  40223a:	imul   esi,DWORD PTR [eax],0xffffffc7
  40223d:	out    0xf4,al
  40223f:	fisttp QWORD PTR [ebx+ecx*4]
  402242:	xchg   DWORD PTR [edx+0x5e],esi
  402245:	xchg   bl,dh
  402247:	mov    al,0x85
  402249:	jg     0x4021e4
  40224b:	jmp    ecx
  40224d:	out    0x83,eax
  40224f:	mov    edi,0xf6a46401
  402254:	xor    dl,ch
  402256:	push   cs
  402257:	pop    ecx
  402258:	lods   al,BYTE PTR ds:[esi]
  402259:	out    0x74,al
  40225b:	mov    eax,0xc92e2d25
  402260:	shl    BYTE PTR [ecx],0x7f
  402263:	retf   0xcd
  402266:	pop    es
  402267:	stos   DWORD PTR es:[edi],eax
  402268:	stc    
  402269:	jb     0x402237
  40226b:	js     0x4022a2
  40226d:	mov    ah,0xe4
  40226f:	sar    bl,cl
  402271:	cmp    BYTE PTR [esi-0x610bcc34],al
  402277:	adc    ah,BYTE PTR [edi+0x21]
  40227a:	sub    BYTE PTR [eax+0x26],al
  40227d:	adc    DWORD PTR [ecx-0x40],0x4
  402281:	and    BYTE PTR [edx+0x20],ch
  402284:	lock xchg edi,eax
  402286:	pop    es
  402287:	out    0xc2,al
  402289:	(bad)  [ebx]
  40228b:	daa    
  40228c:	(bad)  
  40228d:	aaa    
  40228e:	daa    
  40228f:	mov    BYTE PTR [ebp+0x57],bl
  402292:	fcomip st,st(6)
  402294:	dec    ebx
  402295:	mov    ds:0x3bcc83c,eax
  40229a:	fstp   TBYTE PTR [ecx-0x54effa52]
  4022a0:	fdiv   DWORD PTR [ecx+0x19]
  4022a3:	mov    BYTE PTR [esi-0x1f],bh
  4022a6:	repnz inc eax
  4022a8:	cmp    esp,DWORD PTR [esi-0x60]
  4022ab:	std    
  4022ac:	push   ds
  4022ad:	cli    
  4022ae:	mov    eax,ds:0x35fe6be4
  4022b3:	retf   0x1950
  4022b6:	ret    0x59d4
  4022b9:	sbb    eax,0x8011426d
  4022be:	dec    edi
  4022bf:	push   ebp
  4022c0:	sub    DWORD PTR [ebx+0x52c1e046],eax
  4022c6:	cwde   
  4022c7:	mov    dh,0x2
  4022c9:	sub    eax,0x13dfd21d
  4022ce:	push   esi
  4022cf:	jl     0x40225d
  4022d1:	(bad)  
  4022d2:	in     eax,0xb
  4022d4:	mov    eax,ds:0xca798c99
  4022d9:	mov    edx,0xc6d6a3b7
  4022de:	xor    bh,bh
  4022e0:	stos   BYTE PTR es:[edi],al
  4022e1:	xor    bh,BYTE PTR [esi+eax*2-0x4f]
  4022e5:	mov    edx,0xa14fd1e0
  4022ea:	xchg   ebp,eax
  4022eb:	lods   eax,DWORD PTR ds:[esi]
  4022ec:	scas   al,BYTE PTR es:[edi]
  4022ed:	shr    BYTE PTR ds:0x7f8e9f84,cl
  4022f3:	inc    ebx
  4022f4:	mov    ds:0x79a4bb8f,eax
  4022f9:	lahf   
  4022fa:	cld    
  4022fb:	and    ebx,ecx
  4022fd:	add    eax,0x6f30cca0
  402302:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  402304:	aas    
  402305:	ret    0x6929
  402308:	bound  esi,QWORD PTR [ecx]
  40230a:	gs sub al,0xd4
  40230d:	aam    0xb4
  40230f:	mov    eax,0xe0ec4dc8
  402314:	inc    esp
  402315:	and    DWORD PTR [esp+ecx*1-0x41],esi
  402319:	retf   0x19a
  40231c:	je     0x40233a
  40231e:	lods   eax,DWORD PTR ds:[esi]
  40231f:	sub    al,0x83
  402321:	cmp    DWORD PTR [esi+eiz*2],0xca1bc2f
  402328:	jl     0x4022f6
  40232a:	test   DWORD PTR [ecx-0x4ace3121],ebx
  402330:	fnstcw WORD PTR [edi]
  402332:	inc    edx
  402333:	pop    edx
  402334:	cld    
  402335:	dec    edx
  402336:	ret    
  402337:	test   al,ch
  402339:	pop    esp
  40233a:	cmp    ch,BYTE PTR [ebx+ebx*8]
  40233d:	retf   
  40233e:	retf   
  40233f:	push   ebx
  402340:	xchg   esp,eax
  402341:	sub    al,0x37
  402343:	into   
  402344:	dec    eax
  402345:	out    0x43,eax
  402347:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402348:	stc    
  402349:	ja     0x402361
  40234b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40234c:	inc    ebp
  40234d:	xchg   ebx,eax
  40234e:	aas    
  40234f:	add    BYTE PTR [esi+0x19],bl
  402352:	mov    eax,0xf50b04e2
  402357:	not    ecx
  402359:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40235a:	scas   eax,DWORD PTR es:[edi]
  40235b:	sub    eax,0x82ef802b
  402360:	in     eax,dx
  402361:	xchg   esi,eax
  402362:	icebp  
  402363:	rol    esi,1
  402365:	and    BYTE PTR [edi+0x78],ch
  402368:	inc    ecx
  402369:	ret    0x9782
  40236c:	in     al,0x8c
  40236e:	les    ecx,FWORD PTR [eax]
  402370:	pop    es
  402371:	and    eax,0x5c565df0
  402376:	jnp    0x40238b
  402378:	std    
  402379:	ror    DWORD PTR [edx+0x13fa07e4],cl
  40237f:	in     eax,dx
  402380:	jcxz   0x402315
  402383:	and    al,0x93
  402385:	xchg   esp,eax
  402386:	jecxz  0x402397
  402388:	xor    ecx,eax
  40238a:	sbb    BYTE PTR [ebx+0x15],bh
  40238d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40238e:	sub    cl,al
  402390:	mov    BYTE PTR [ecx+0x7c755f61],bl
  402396:	hlt    
  402397:	arpl   WORD PTR [edx-0x6c],di
  40239a:	dec    esp
  40239b:	jmp    0x9438:0x3bcc1d18
  4023a2:	mov    DWORD PTR [ebx-0x47fd8be3],edi
  4023a8:	dec    esp
  4023a9:	loopne 0x40233b
  4023ab:	sbb    eax,0xbf90f00
  4023b0:	imul   edx,DWORD PTR [ebx+0x44]
  4023b4:	adc    edi,DWORD PTR [ecx-0x17]
  4023b7:	imul   ebp,ebx,0x8dcdd270
  4023bd:	jmp    0x2087:0x82cfffb7
  4023c4:	(bad)  
  4023c5:	mov    eax,0xfd32fcbe
  4023ca:	mov    esi,DWORD PTR [ecx-0x6c]
  4023cd:	dec    edi
  4023ce:	pop    ebp
  4023cf:	addr16 ss cdq 
  4023d2:	mov    DWORD PTR [edi+0x50],ebx
  4023d5:	xlat   BYTE PTR ds:[ebx]
  4023d6:	xor    eax,0x5378a57f
  4023db:	mov    ecx,0xca9f2616
  4023e0:	std    
  4023e1:	mov    eax,0x66dc6528
  4023e6:	js     0x40238e
  4023e8:	cmp    al,0xc6
  4023ea:	dec    esp
  4023eb:	sti    
  4023ec:	fdiv   QWORD PTR [ebx-0x21]
  4023ef:	mov    DWORD PTR [esi],esi
  4023f1:	sbb    cl,BYTE PTR [ebp+0x1]
  4023f4:	mov    ch,0xcc
  4023f6:	adc    al,0xd3
  4023f8:	fidivr WORD PTR [edx+0x55]
  4023fb:	int3   
  4023fc:	push   edx
  4023fd:	xchg   ebx,eax
  4023fe:	data16 js 0x402460
  402401:	jp     0x40243c
  402403:	imul   dh
  402405:	jl     0x4023c1
  402407:	inc    eax
  402408:	and    ebx,DWORD PTR [esi+0x3c]
  40240b:	mov    edi,0x1572234a
  402410:	scas   eax,DWORD PTR es:[edi]
  402411:	xor    eax,0x95b9643f
  402416:	push   es
  402417:	bnd jmp 0xba18eeef
  40241d:	cli    
  40241e:	mov    ebx,0xddfff7e7
  402423:	imul   BYTE PTR [eax]
  402425:	and    eax,0x135ae579
  40242a:	pop    ss
  40242b:	pushf  
  40242c:	push   cs
  40242d:	(bad)
  402431:	es into 
  402433:	dec    ebx
  402434:	dec    ebp
  402435:	arpl   WORD PTR [esi+0x4d],sp
  402438:	out    dx,eax
  402439:	or     eax,0x5414a72
  40243e:	mov    ah,0x91
  402440:	dec    esp
  402441:	mov    dh,0x92
  402443:	ins    DWORD PTR es:[edi],dx
  402444:	pop    eax
  402445:	cmc    
  402446:	inc    ebx
  402447:	dec    edi
  402448:	xor    eax,0xf98c1acc
  40244d:	ss pop ss
  40244f:	cdq    
  402450:	jl     0x40243e
  402452:	adc    ebp,DWORD PTR [edx]
  402454:	adc    cl,BYTE PTR [edi+0x43074bd3]
  40245a:	dec    ebx
  40245b:	dec    ecx
  40245c:	jg     0x402471
  40245e:	(bad)  
  40245f:	fidivr DWORD PTR [eax]
  402461:	outs   dx,BYTE PTR ds:[esi]
  402462:	lahf   
  402463:	loope  0x4024b6
  402465:	jecxz  0x4023fa
  402467:	mov    ah,0xc2
  402469:	mov    al,0xb0
  40246b:	retf   0x93ea
  40246e:	mov    ?,WORD PTR [edi]
  402470:	call   0xed48:0xc69cde5
  402477:	push   ebp
  402478:	sub    dl,al
  40247a:	xor    DWORD PTR [esi-0x15],esp
  40247d:	jmp    0xbbe8:0xe32dff08
  402484:	add    ebp,ebx
  402486:	mov    esp,0x17db4adf
  40248b:	outs   dx,BYTE PTR ds:[esi]
  40248c:	dec    edi
  40248d:	aas    
  40248e:	mov    ch,0x8
  402490:	jmp    0x88cd:0xaef81e2d
  402497:	stos   BYTE PTR es:[edi],al
  402498:	loop   0x40243d
  40249a:	imul   eax,DWORD PTR [ecx],0xf1b13280
  4024a0:	dec    ebp
  4024a1:	mov    bh,0xfe
  4024a3:	mov    cs,WORD PTR ds:[edx-0x5847604d]
  4024aa:	jp     0x40247d
  4024ac:	mov    bh,0x5b
  4024ae:	data16 ror WORD PTR [eax+0x4f],cl
  4024b3:	sbb    ebp,DWORD PTR [esi+edx*4-0x5d]
  4024b7:	std    
  4024b8:	push   esp
  4024b9:	cmp    bh,0x9e
  4024bc:	fisttp DWORD PTR [esi-0x25]
  4024bf:	cs mov al,0x12
  4024c2:	shr    DWORD PTR [ebx+0x7a095e70],cl
  4024c8:	sbb    al,0xcc
  4024ca:	and    BYTE PTR [esp+eax*8],al
  4024cd:	rcl    DWORD PTR [edi],1
  4024cf:	mov    eax,0xb6edf297
  4024d4:	cmc    
  4024d5:	cmc    
  4024d6:	hlt    
  4024d7:	stos   DWORD PTR es:[edi],eax
  4024d8:	cld    
  4024d9:	imul   eax,esi,0xdb1b944a
  4024df:	nop
  4024e0:	jne    0x4024bb
  4024e2:	loopne 0x40253d
  4024e4:	adc    al,0x5b
  4024e6:	inc    edx
  4024e7:	or     esi,DWORD PTR [edx+eiz*4-0x250a8d3]
  4024ee:	aas    
  4024ef:	mov    bl,0x42
  4024f1:	les    eax,FWORD PTR [ebp-0x7fb710]
  4024f7:	xchg   edi,eax
  4024f8:	not    ecx
  4024fa:	push   0xc18f5c3a
  4024ff:	adc    ch,BYTE PTR [esi]
  402501:	repz into 
  402503:	push   esi
  402504:	ins    BYTE PTR es:[edi],dx
  402505:	shl    BYTE PTR [ecx+ebp*2-0x7f],1
  402509:	inc    ebx
  40250a:	jbe    0x4024fb
  40250c:	adc    eax,DWORD PTR [edx-0x6905204e]
  402512:	(bad)  
  402513:	or     BYTE PTR [edx+0x2f],ah
  402516:	fisub  DWORD PTR [esi-0x4c756ef2]
  40251c:	popf   
  40251d:	jns    0x402598
  40251f:	and    esp,ecx
  402521:	mov    es,esp
  402523:	dec    ebx
  402524:	dec    esi
  402525:	add    bh,BYTE PTR [ebp+eiz*1+0x5ea48bb2]
  40252c:	loop   0x4024ec
  40252e:	(bad)  
  402530:	outs   dx,DWORD PTR ds:[esi]
  402531:	icebp  
  402532:	cwde   
  402533:	data16 fdivr DWORD PTR [ebx*8+0x4c3a75f8]
  40253b:	pushf  
  40253c:	push   cs
  40253d:	aaa    
  40253e:	nop
  40253f:	into   
  402540:	cmp    BYTE PTR [esp+esi*8-0xd],ch
  402544:	push   0x6
  402546:	imul   eax,DWORD PTR [ebx],0x1c
  402549:	call   0x51b910a5
  40254e:	leave  
  40254f:	ds aam 0x42
  402552:	(bad)  
  402553:	and    eax,0xae015ee0
  402558:	pop    ss
  402559:	mov    bh,0x8a
  40255b:	popf   
  40255c:	retf   
  40255d:	mov    edx,0x81d679f5
  402562:	sahf   
  402563:	cmp    ebp,DWORD PTR [ebx+ecx*1-0x49]
  402567:	push   0x4072765e
  40256c:	pusha  
  40256d:	dec    edx
  40256e:	xchg   BYTE PTR [ebx+eax*4+0x8],bh
  402572:	bound  ebx,QWORD PTR [eax]
  402574:	fldcw  WORD PTR [ebx-0x22d39eb8]
  40257a:	sbb    ch,BYTE PTR [ebx-0x35]
  40257d:	into   
  40257e:	mov    eax,0x6ed7d44e
  402583:	mov    DWORD PTR [edi+ebx*1],eax
  402586:	mov    bh,0x78
  402588:	adc    DWORD PTR [ebx],eax
  40258a:	xchg   ebp,eax
  40258b:	or     eax,0x5dc8bd51
  402590:	retf   0x682
  402593:	enter  0xb49c,0x48
  402597:	rep ins BYTE PTR es:[edi],dx
  402599:	in     al,0x83
  40259b:	mov    eax,0x34c45d8d
  4025a0:	int3   
  4025a1:	jae    0x4025d4
  4025a3:	and    cl,BYTE PTR [esi-0x5522342]
  4025a9:	(bad)  
  4025aa:	dec    esp
  4025ab:	push   es
  4025ac:	jl     0x4025dd
  4025ae:	xor    ebp,DWORD PTR [esi]
  4025b0:	push   ds
  4025b1:	mov    bl,ch
  4025b3:	test   al,0x8c
  4025b5:	in     al,0x55
  4025b7:	xchg   edi,eax
  4025b8:	push   edi
  4025b9:	jl     0x4025f7
  4025bb:	inc    esp
  4025bc:	pop    esi
  4025bd:	cli    
  4025be:	ror    bl,cl
  4025c0:	cwde   
  4025c1:	cmp    edx,DWORD PTR [eax+edi*1]
  4025c4:	mov    edx,0x3da4e87f
  4025c9:	shl    DWORD PTR ds:[eax-0x70bd9157],0x1
  4025d1:	mov    ah,bh
  4025d3:	std    
  4025d4:	jno    0x402584
  4025d6:	push   edi
  4025d7:	sub    BYTE PTR [eax+0x0],dl
  4025da:	in     eax,dx
  4025db:	nop
  4025dc:	lahf   
  4025dd:	lds    ebx,FWORD PTR [esi-0x11]
  4025e0:	in     eax,0x31
  4025e2:	sub    BYTE PTR [esi+0xe0f718],al
  4025e8:	in     al,0x8a
  4025ea:	ret    
  4025eb:	add    dh,BYTE PTR [ebx+edi*4+0x1b]
  4025ef:	push   0x4a
  4025f1:	inc    eax
  4025f2:	aad    0x78
  4025f4:	pushf  
  4025f5:	jmp    0x402649
  4025f7:	ror    DWORD PTR [ecx+0x3e],cl
  4025fa:	out    dx,eax
  4025fb:	pop    edx
  4025fc:	mov    dh,0x50
  4025fe:	pop    esi
  4025ff:	fadd   st,st(3)
  402601:	ds nop
  402603:	jle    0x402664
  402605:	test   eax,0xcf60a906
  40260a:	call   0xf579:0x2f224432
  402611:	in     eax,dx
  402612:	pop    esi
  402613:	sub    DWORD PTR [ecx+0x47fe2c23],esp
  402619:	in     al,dx
  40261a:	pop    ss
  40261b:	stos   BYTE PTR es:[edi],al
  40261c:	dec    edx
  40261d:	jp     0x40263e
  40261f:	sbb    ecx,0xffffff9e
  402622:	mov    ah,BYTE PTR [edi+eax*1-0x4b]
  402626:	(bad)
  40262a:	adc    cl,ch
  40262c:	inc    ecx
  40262d:	out    dx,al
  40262e:	xchg   edx,eax
  40262f:	mov    al,0x6a
  402631:	and    eax,0xa34a7072
  402636:	adc    BYTE PTR ds:0xe2ea5b0e,dh
  40263c:	pop    edx
  40263d:	sbb    al,0x23
  40263f:	push   esp
  402640:	add    eax,0xda443e5e
  402645:	sub    al,0x14
  402647:	shr    BYTE PTR [ebx-0x6],1
  40264a:	cwde   
  40264b:	fwait
  40264c:	mov    ds,WORD PTR [ebx]
  40264e:	int    0x4b
  402650:	xchg   BYTE PTR [eax],ch
  402652:	rol    ebx,cl
  402654:	push   ecx
  402655:	add    ecx,0x645bcfa
  40265b:	jge    0x40264a
  40265d:	out    0x7e,al
  40265f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402660:	int3   
  402661:	sbb    eax,0xd3329bb7
  402666:	test   eax,0x5079fd36
  40266b:	sub    BYTE PTR [edi-0x56ad1663],cl
  402671:	imul   ecx,DWORD PTR [eax-0x32cebfeb],0x1103e299
  40267b:	(bad)  
  40267c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40267d:	cwde   
  40267e:	lods   eax,DWORD PTR ds:[esi]
  40267f:	loopne 0x4026fc
  402681:	test   BYTE PTR [eax-0x7755b3f7],0x3d
  402688:	cdq    
  402689:	pop    edx
  40268a:	sti    
  40268b:	mov    dh,0xe3
  40268d:	inc    edx
  40268e:	adc    al,0x50
  402690:	and    eax,0x19c86b2
  402695:	pop    ds
  402696:	xchg   ebx,eax
  402697:	and    al,0xc3
  402699:	xor    eax,DWORD PTR [ebp+0xc]
  40269c:	and    edx,DWORD PTR [edi]
  40269e:	cmp    DWORD PTR [ecx-0x24],edi
  4026a1:	sahf   
  4026a2:	pop    edx
  4026a3:	pop    ds
  4026a4:	sbb    edi,eax
  4026a6:	cld    
  4026a7:	dec    ecx
  4026a8:	daa    
  4026a9:	adc    ah,BYTE PTR [edi+eiz*2-0x33]
  4026ad:	mov    ds:0x89c37b40,al
  4026b2:	stc    
  4026b3:	push   eax
  4026b4:	dec    esi
  4026b5:	call   0xe77c5843
  4026ba:	dec    edx
  4026bb:	sbb    eax,0x34b537a6
  4026c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4026c1:	jbe    0x402685
  4026c3:	fnstcw WORD PTR [ebx+0x18a6a6c9]
  4026c9:	ret    0x4da8
  4026cc:	pushf  
  4026cd:	lock pushf 
  4026cf:	cld    
  4026d0:	ja     0x40274e
  4026d2:	aam    0x48
  4026d4:	dec    esp
  4026d5:	sbb    DWORD PTR [edx+0x33],edi
  4026d8:	mov    al,0xb5
  4026da:	jae    0x402667
  4026dc:	push   edx
  4026dd:	push   ebp
  4026de:	cs enter 0x3f2b,0x3d
  4026e3:	pushf  
  4026e4:	dec    esp
  4026e5:	adc    ax,0xcb7f
  4026e9:	sub    DWORD PTR [ebx],ecx
  4026eb:	ins    DWORD PTR es:[edi],dx
  4026ec:	cs jno 0x4026df
  4026ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026f0:	das    
  4026f1:	or     DWORD PTR [esi-0x467c0e68],0xf10f3204
  4026fb:	xor    bl,ah
  4026fd:	fistp  DWORD PTR [ecx+0x5e53ce60]
  402703:	push   ss
  402704:	loope  0x402770
  402706:	fs or  eax,0x4dab5d9b
  40270c:	sti    
  40270d:	lahf   
  40270e:	xchg   ebx,eax
  40270f:	push   es
  402710:	(bad)  
  402711:	cli    
  402712:	fwait
  402713:	mov    cl,0x78
  402715:	jecxz  0x402755
  402717:	cmp    al,0xb2
  402719:	cs lock sbb eax,0x2ac7027
  402720:	mov    al,0x68
  402722:	inc    ebp
  402723:	out    dx,al
  402724:	xchg   ecx,eax
  402725:	dec    esi
  402726:	push   0xf150140e
  40272b:	iret   
  40272c:	jns    0x40275d
  40272e:	outs   dx,DWORD PTR ds:[esi]
  40272f:	or     eax,0xc6ec9a24
  402734:	test   al,0x6d
  402737:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402738:	inc    esp
  402739:	mov    edi,0x6fa4bc56
  40273e:	jae    0x402706
  402740:	mov    esp,0xfacfe1b3
  402745:	adc    BYTE PTR es:[eax+0x5ac1dccb],0x4b
  40274d:	mov    ebx,0x7741de05
  402752:	or     ch,BYTE PTR [eax+0x71f3c676]
  402758:	jmp    0x4a2:0x5439b824
  40275f:	cli    
  402760:	mov    ebx,0x3baaeabc
  402765:	bswap  esi
  402767:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402768:	dec    esi
  402769:	fldcw  WORD PTR [ebp+0x79]
  40276c:	adc    DWORD PTR [edx+0x2567b5bb],eax
  402772:	idiv   BYTE PTR gs:[eax-0x66]
  402776:	(bad)  
  402777:	outs   dx,DWORD PTR ds:[esi]
  402778:	data16 add ah,BYTE PTR ss:[esi]
  40277c:	mov    ebx,0xed1cd70b
  402781:	rcl    DWORD PTR [ecx],1
  402783:	lods   al,BYTE PTR ds:[esi]
  402784:	out    dx,al
  402785:	loopne 0x40271c
  402787:	inc    ebp
  402788:	test   BYTE PTR [ebp+0x23],cl
  40278b:	int    0x85
  40278d:	xor    eax,0xc49a79f3
  402792:	cmp    eax,0xf1c5731e
  402797:	jmp    0x925d:0x1a198767
  40279e:	cs mov cl,0x7d
  4027a1:	int3   
  4027a2:	or     DWORD PTR [esi+0xc2170d],eax
  4027a8:	fcom   DWORD PTR [esi+0x3e]
  4027ab:	cmp    edi,eax
  4027ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027ae:	sbb    al,0xa6
  4027b0:	jbe    0x40282a
  4027b2:	aam    0x2c
  4027b4:	into   
  4027b5:	add    DWORD PTR [ebp-0x42398526],eax
  4027bb:	mov    ch,0x1d
  4027bd:	and    BYTE PTR [eax+ebx*8-0x43],cl
  4027c1:	sti    
  4027c2:	bound  ebp,QWORD PTR [edi-0x47]
  4027c5:	aaa    
  4027c6:	pop    ebp
  4027c7:	mov    edi,0x65400f5a
  4027cc:	test   BYTE PTR [eax+ebp*1-0x427c5b77],dh
  4027d3:	rol    ecx,cl
  4027d5:	repz sbb esi,ecx
  4027d8:	xor    al,0x97
  4027da:	pusha  
  4027db:	aad    0xa4
  4027dd:	jo     0x4027d2
  4027df:	mov    ebp,0x7879c4d9
  4027e4:	sbb    BYTE PTR [eax+0x51],bl
  4027e7:	mov    edx,0x69e45cf8
  4027ec:	jmp    0x402806
  4027ee:	inc    esi
  4027ef:	iret   
  4027f0:	(bad)  
  4027f1:	scas   al,BYTE PTR es:[edi]
  4027f2:	and    al,0xc8
  4027f4:	call   0xbbd3:0x58e041cc
  4027fb:	fnstenv [ecx-0x62]
  4027fe:	push   esi
  4027ff:	movaps XMMWORD PTR [edx],xmm0
  402802:	popa   
  402803:	lods   al,BYTE PTR ds:[esi]
  402804:	jmp    0x3bd29163
  402809:	fsub   QWORD PTR [ebp+eiz*4-0x53]
  40280d:	inc    esp
  40280e:	pop    es
  40280f:	mov    WORD PTR [ebp+0x2cd5f1e3],gs
  402815:	fsubr  DWORD PTR [edx-0x3a]
  402818:	xor    eax,0x8c89c866
  40281d:	js     0x4027cd
  40281f:	mov    ecx,0x9c12e984
  402824:	loop   0x402875
  402826:	pusha  
  402827:	dec    ebx
  402828:	cwde   
  402829:	loope  0x402831
  40282b:	push   ss
  40282c:	xor    BYTE PTR [esi-0x55],dh
  40282f:	push   0xd31904ae
  402834:	fsubp  st(4),st
  402836:	aaa    
  402837:	fstp   DWORD PTR [edi]
  402839:	mov    bh,0x27
  40283b:	fld    DWORD PTR [edx+0x390b03d5]
  402841:	scas   al,BYTE PTR es:[edi]
  402842:	mov    al,0x71
  402844:	cmc    
  402845:	les    esi,FWORD PTR [edi+0x120c53]
  40284b:	js     0x4027e8
  40284d:	cs mov edx,ss
  402850:	clc    
  402851:	adc    DWORD PTR ds:0x277108fa,edi
  402857:	add    eax,0x64ea5893
  40285c:	ins    DWORD PTR es:[edi],dx
  40285d:	fsubr  DWORD PTR [edx]
  40285f:	in     al,dx
  402860:	stos   DWORD PTR es:[edi],eax
  402861:	ja     0x402895
  402863:	popfw  
  402865:	xor    bl,bl
  402867:	(bad)  
  402868:	jo     0x40287f
  40286a:	ins    BYTE PTR es:[edi],dx
  40286b:	mov    ch,0xeb
  40286d:	adc    DWORD PTR [ebp-0x16],edx
  402870:	out    dx,eax
  402871:	loop   0x4028a3
  402873:	xor    esp,edi
  402875:	dec    bl
  402877:	out    dx,eax
  402878:	xchg   esp,eax
  402879:	dec    esp
  40287a:	std    
  40287b:	add    BYTE PTR [edi],bh
  40287d:	rol    BYTE PTR [esi-0x4c],0x69
  402881:	clc    
  402882:	mov    ecx,0xfb419f6f
  402887:	xlat   BYTE PTR es:[ebx]
  402889:	aam    0x79
  40288b:	aad    0xf1
  40288d:	add    DWORD PTR [edx+0x6a],ebp
  402890:	dec    edx
  402891:	outs   dx,BYTE PTR ds:[esi]
  402892:	ret    0x91b
  402895:	mov    al,0xe
  402897:	es push ds
  402899:	enter  0xa266,0xaa
  40289d:	adc    BYTE PTR [ecx+0x7b9540d8],0x90
  4028a4:	popf   
  4028a5:	pusha  
  4028a6:	xchg   esi,eax
  4028a7:	fnstenv [esi+0x5684c86a]
  4028ad:	inc    edx
  4028ae:	pop    edi
  4028af:	pop    ds
  4028b0:	cmp    BYTE PTR [ebx+0x406d183c],cl
  4028b6:	pop    esi
  4028b7:	xlat   BYTE PTR ds:[ebx]
  4028b8:	inc    esp
  4028b9:	push   ecx
  4028ba:	es jp  0x40286f
  4028bd:	mov    ah,0x4b
  4028bf:	jae    0x4028aa
  4028c1:	push   esi
  4028c2:	addr16 or eax,0x2d36011b
  4028c8:	mov    esi,0xca886a15
  4028cd:	jge    0x4028c1
  4028cf:	fs inc ecx
  4028d1:	mov    dl,0xdc
  4028d3:	inc    esi
  4028d4:	sub    cl,cl
  4028d6:	pop    ecx
  4028d7:	ds mov esp,0x3a00efb7
  4028dd:	push   edi
  4028de:	adc    DWORD PTR [edi-0x6e],edx
  4028e1:	(bad)  
  4028e2:	jno    0x402918
  4028e4:	lods   eax,DWORD PTR ds:[esi]
  4028e5:	inc    esi
  4028e6:	mov    ecx,0x232c5262
  4028eb:	lods   al,BYTE PTR ds:[esi]
  4028ec:	(bad)  
  4028ed:	sbb    al,0x38
  4028ef:	jl     0x402895
  4028f1:	inc    esi
  4028f2:	add    BYTE PTR [esi+0x24],0x3f
  4028f6:	bound  edi,QWORD PTR [edi]
  4028f8:	push   esp
  4028f9:	popa   
  4028fa:	shl    DWORD PTR [ebx-0x2d],1
  4028fd:	in     eax,dx
  4028fe:	cmp    eax,eax
  402900:	cs fwait
  402902:	xchg   edx,eax
  402903:	fild   WORD PTR [ecx-0x64]
  402906:	and    eax,0x9a4898b7
  40290b:	xor    eax,0x180e8112
  402910:	mov    dl,0x20
  402912:	shr    DWORD PTR [ebp+ebx*1-0x21],0x70
  402917:	pop    ss
  402918:	pop    esp
  402919:	jl     0x402958
  40291b:	add    esi,DWORD PTR [ebp-0x48]
  40291e:	cli    
  40291f:	nop
  402920:	ds scas al,BYTE PTR es:[edi]
  402922:	fwait
  402923:	jnp    0x4028c0
  402925:	and    al,0xd4
  402927:	in     al,dx
  402928:	int3   
  402929:	xor    al,0x10
  40292b:	mov    ecx,0x4e42e00d
  402930:	push   es
  402931:	pop    es
  402932:	push   edi
  402933:	leave  
  402934:	xchg   ebp,eax
  402935:	sahf   
  402936:	and    ch,BYTE PTR [edi-0x7]
  402939:	push   0xae823d96
  40293e:	cmc    
  40293f:	xor    al,0xfc
  402941:	ja     0x402957
  402943:	mov    dh,0x7c
  402945:	nop    DWORD PTR [ebx-0x3907dc79]
  40294c:	retf   
  40294d:	ss ins BYTE PTR es:[edi],dx
  40294f:	adc    al,0xef
  402951:	loop   0x4029a6
  402953:	das    
  402954:	in     eax,0x5d
  402956:	and    al,0x8f
  402958:	js     0x402911
  40295a:	ret    
  40295b:	(bad)  
  40295c:	sbb    al,0xbf
  40295e:	add    ebp,DWORD PTR [edx-0x37b36352]
  402964:	dec    edx
  402965:	sub    BYTE PTR [ecx+0x5e],0x8b
  402969:	xchg   edx,eax
  40296a:	jle    0x4029c7
  40296c:	mov    eax,0x3d0e1947
  402971:	retf   
  402972:	ss in  eax,dx
  402974:	pop    esp
  402975:	mov    ebp,0xd055ae3c
  40297a:	shl    DWORD PTR [ebp+0x396071e7],0xe9
  402981:	dec    eax
  402982:	or     ecx,DWORD PTR [ebx-0x38]
  402985:	inc    ecx
  402986:	imul   esp,esi,0xffffffb3
  402989:	(bad)  
  40298b:	enter  0x1c5e,0x34
  40298f:	add    BYTE PTR [ebx-0x41604ddc],0xf8
  402996:	xchg   esp,eax
  402997:	jbe    0x4029de
  402999:	ret    
  40299a:	hlt    
  40299b:	mov    bl,0xea
  40299d:	popf   
  40299e:	jecxz  0x402921
  4029a0:	xchg   ch,bh
  4029a2:	pop    esp
  4029a3:	jecxz  0x4029e6
  4029a5:	jg     0x402a14
  4029a7:	call   0x5689d97
  4029ac:	xchg   edi,eax
  4029ad:	xlat   BYTE PTR ds:[ebx]
  4029ae:	mov    ch,0x30
  4029b0:	xor    DWORD PTR [ecx-0x2f],edx
  4029b3:	fst    DWORD PTR [eax-0x52]
  4029b6:	mov    ds:0xfe7ab15a,al
  4029bb:	ror    BYTE PTR [ebp+ebp*8-0x5],cl
  4029bf:	adc    edx,DWORD PTR [eax+0x5bacac34]
  4029c5:	sub    esp,edx
  4029c7:	lea    esi,[eax]
  4029c9:	test   eax,0x21ec595e
  4029ce:	sub    BYTE PTR [ecx],0x0
  4029d1:	std    
  4029d2:	or     eax,0xd8488f2d
  4029d7:	mov    bl,0x4e
  4029d9:	pushf  
  4029da:	int    0x36
  4029dc:	loope  0x4029d5
  4029de:	inc    esp
  4029df:	xor    bl,BYTE PTR [esi+0x3b]
  4029e2:	fist   WORD PTR [ebx-0x6956d017]
  4029e8:	ret    0x92cc
  4029eb:	pop    edx
  4029ec:	fcom   QWORD PTR [esi-0x6c2a1123]
  4029f2:	call   0x4bbd:0x9d245093
  4029f9:	xor    bl,dh
  4029fb:	arpl   di,ax
  4029fd:	inc    esi
  4029fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029ff:	aaa    
  402a00:	and    al,BYTE PTR [edi-0x9]
  402a03:	lock mov ebp,0x36f63be7
  402a09:	imul   eax,DWORD PTR [edi+ecx*8+0x38],0x6807cfcc
  402a11:	and    DWORD PTR [edi-0x2ab80287],edi
  402a17:	mov    ebx,0xfa8b2710
  402a1c:	iret   
  402a1d:	sub    esp,ecx
  402a1f:	push   0x5d
  402a21:	sbb    bh,al
  402a23:	sub    BYTE PTR [edi+0x36958042],dl
  402a29:	xor    al,0x60
  402a2b:	push   edi
  402a2c:	cmp    dh,BYTE PTR [esi]
  402a2e:	lds    edi,FWORD PTR [ecx-0x5d]
  402a31:	cmp    BYTE PTR [ebp-0x6e894367],cl
  402a37:	(bad)  
  402a3a:	bound  edi,QWORD PTR [esi+0x2b05fc67]
  402a40:	data16 scas al,BYTE PTR es:[edi]
  402a42:	pop    ss
  402a43:	xlat   BYTE PTR ds:[ebx]
  402a44:	stc    
  402a45:	pop    ds
  402a46:	mov    ds:0x6ca3dbf3,al
  402a4b:	xor    al,0x2f
  402a4d:	push   esi
  402a4e:	mov    BYTE PTR ds:0xb6216af7,0x5d
  402a55:	jmp    0x4029f9
  402a57:	xchg   ecx,eax
  402a58:	lahf   
  402a59:	loopne 0x402a95
  402a5b:	sub    bh,BYTE PTR [edx+0x42fba0ee]
  402a61:	sbb    al,0xb4
  402a63:	icebp  
  402a64:	adc    BYTE PTR [ebx+0xe],dh
  402a67:	xlat   BYTE PTR ds:[ebx]
  402a68:	push   ebx
  402a69:	jmp    0x3df159ab
  402a6e:	daa    
  402a6f:	push   edx
  402a70:	cli    
  402a71:	pop    ebx
  402a72:	ja     0x402a77
  402a74:	cwde   
  402a75:	pop    ss
  402a76:	into   
  402a77:	mov    bl,0x8f
  402a79:	push   ebx
  402a7a:	mov    ecx,0x1d195afe
  402a7f:	sbb    al,0xdc
  402a81:	inc    ebx
  402a82:	mov    dh,0xef
  402a84:	jno    0x402abe
  402a86:	in     eax,0x8e
  402a88:	retf   
  402a89:	out    dx,eax
  402a8a:	jle    0x402aec
  402a8c:	icebp  
  402a8d:	mov    ds:0x83a9d696,eax
  402a92:	inc    eax
  402a93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a94:	shl    BYTE PTR [eax],1
  402a96:	xor    edi,eax
  402a98:	arpl   WORD PTR [esi+0x275504d8],sp
  402a9e:	lods   al,BYTE PTR ds:[esi]
  402a9f:	inc    edx
  402aa0:	sbb    eax,DWORD PTR [ebx]
  402aa2:	pop    DWORD PTR [esi+edx*8]
  402aa5:	imul   eax,DWORD PTR [ecx+edi*2+0x71],0xffffffef
  402aaa:	sahf   
  402aab:	mov    esi,0xbe0ab23d
  402ab0:	pusha  
  402ab1:	jae    0x402a6e
  402ab3:	dec    ebp
  402ab4:	out    0xe8,eax
  402ab6:	mov    ah,0x7f
  402ab8:	pop    edx
  402ab9:	inc    DWORD PTR [ebx-0x1e1918bb]
  402abf:	pop    es
  402ac0:	dec    edi
  402ac1:	and    ebx,esi
  402ac3:	xor    BYTE PTR [eax-0x489f9c32],0x8c
  402aca:	dec    edi
  402acb:	stos   BYTE PTR es:[edi],al
  402acc:	outs   dx,DWORD PTR ds:[esi]
  402acd:	push   ebp
  402ace:	fdiv   DWORD PTR [edi+0x25]
  402ad1:	fdiv   QWORD PTR ds:0x653ceea5
  402ad7:	in     eax,0x33
  402ad9:	jbe    0x402a72
  402adb:	adc    dl,BYTE PTR [esi-0x12ff1296]
  402ae1:	syscall 
  402ae3:	sbb    cl,al
  402ae5:	and    al,0x5f
  402ae7:	and    al,0xd2
  402ae9:	scas   al,BYTE PTR es:[edi]
  402aea:	lea    esp,[edi-0x50]
  402aed:	adc    al,0xcc
  402aef:	daa    
  402af0:	ja     0x402af2
  402af2:	retf   
  402af3:	mov    dl,0xc8
  402af5:	jns    0x402a83
  402af7:	pop    ss
  402af8:	(bad)  
  402af9:	(bad)  
  402afa:	out    dx,eax
  402afb:	xchg   ebp,eax
  402afc:	mov    DWORD PTR [ebx],ecx
  402afe:	cmp    eax,0x45ef943c
  402b03:	push   0x3375a2bf
  402b08:	clc    
  402b09:	lea    esi,[eax-0xc]
  402b0c:	lock push ss
  402b0e:	sub    eax,0xcd3740d0
  402b13:	sbb    DWORD PTR [ebx],esp
  402b15:	xlat   BYTE PTR ds:[ebx]
  402b16:	sbb    edi,DWORD PTR [ebp+ecx*8+0x790cf976]
  402b1d:	mov    ?,WORD PTR [ebp+ecx*4-0x7c516855]
  402b24:	sub    ebp,ebp
  402b26:	in     eax,dx
  402b27:	aad    0xcb
  402b29:	mov    fs,eax
  402b2b:	add    esp,ecx
  402b2d:	jmp    DWORD PTR [eax]
  402b2f:	inc    edx
  402b30:	mov    ecx,0x9940afe2
  402b35:	aas    
  402b36:	pop    ebx
  402b37:	push   ss
  402b38:	or     eax,0xd909cd18
  402b3d:	sub    bl,cl
  402b3f:	and    BYTE PTR [ebx-0x3c],0xb6
  402b43:	mov    ecx,esp
  402b45:	loop   0x402bb5
  402b47:	inc    ebp
  402b48:	mov    bh,0xbe
  402b4a:	sti    
  402b4b:	popa   
  402b4c:	sar    BYTE PTR [eax+ebx*4-0x44bb9d04],0x43
  402b54:	add    ecx,edi
  402b56:	jne    0x402ada
  402b58:	mov    ah,0x39
  402b5a:	addr16 out dx,al
  402b5c:	pop    edi
  402b5d:	inc    ebp
  402b5e:	mov    cl,0x13
  402b60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b61:	xor    BYTE PTR [eax-0x71],dh
  402b64:	in     al,0x97
  402b66:	addr16 in al,0xb2
  402b69:	aaa    
  402b6a:	stc    
  402b6b:	push   edi
  402b6c:	repnz push 0x87285d1b
  402b72:	int3   
  402b73:	pop    edi
  402b74:	outs   dx,DWORD PTR ds:[esi]
  402b75:	fcompp 
  402b77:	adc    DWORD PTR [edx+0xf],ebp
  402b7a:	sbb    eax,0x90189bd2
  402b7f:	mov    esp,0xf7f56de1
  402b84:	je     0x402b7c
  402b86:	cld    
  402b87:	enter  0x7165,0x1
  402b8b:	cmp    edi,DWORD PTR [eax+0x43]
  402b8e:	hlt    
  402b8f:	xchg   ecx,eax
  402b90:	bound  ecx,QWORD PTR [edi+0x65]
  402b93:	mov    BYTE PTR [ebp+0x2d],0x48
  402b97:	in     al,dx
  402b98:	leave  
  402b99:	or     ch,BYTE PTR [edx+0x7f3e33b7]
  402b9f:	enter  0x376a,0xfb
  402ba3:	mov    WORD PTR [ecx+ebp*2+0x7f2f4026],ds
  402baa:	sbb    esp,DWORD PTR [edi+0x5b]
  402bad:	xchg   dl,bh
  402baf:	outs   dx,DWORD PTR ds:[esi]
  402bb0:	add    esi,0x3387738d
  402bb6:	call   0x7141e9d9
  402bbb:	imul   esi,DWORD PTR [edx+0x4f],0xc6119625
  402bc2:	push   0x22
  402bc4:	test   BYTE PTR [ecx+0x43],cl
  402bc7:	ds jno 0x402c2f
  402bca:	cmc    
  402bcb:	jae    0x402c1d
  402bcd:	mov    ds:0xdfcee1ee,al
  402bd2:	sbb    edi,DWORD PTR [edi+0x354dc667]
  402bd8:	cmp    ch,BYTE PTR [eax-0x24]
  402bdb:	jmp    DWORD PTR [eax]
  402bdd:	cli    
  402bde:	mov    ss,eax
  402be0:	dec    esi
  402be1:	ret    0x65c0
  402be4:	fs jb  0x402b85
  402be7:	sar    edi,0xd5
  402bea:	enter  0x73df,0x5d
  402bee:	lods   al,BYTE PTR ds:[esi]
  402bef:	push   0xffffff84
  402bf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402bf2:	mov    dl,BYTE PTR [ebx-0x6b3077e5]
  402bf8:	cmp    DWORD PTR [edx],esp
  402bfa:	outs   dx,DWORD PTR ds:[esi]
  402bfb:	cmp    eax,0xbc0d417e
  402c00:	mov    al,ds:0x83f3a1da
  402c05:	cmovg  edx,esp
  402c08:	je     0x402c24
  402c0a:	std    
  402c0b:	pop    ebx
  402c0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c0d:	out    dx,al
  402c0e:	inc    eax
  402c0f:	jp     0x402c08
  402c11:	sbb    edi,ebp
  402c13:	pop    es
  402c14:	xchg   esp,eax
  402c15:	jg     0x402bbc
  402c17:	sub    bl,ch
  402c19:	aas    
  402c1a:	xor    edi,DWORD PTR [ebx+0x47]
  402c1d:	adc    BYTE PTR [ecx],dh
  402c1f:	jmp    0x9f4515e3
  402c24:	push   edi
  402c25:	xor    BYTE PTR [eax],dh
  402c27:	int    0x98
  402c29:	daa    
  402c2a:	sub    bh,BYTE PTR [ecx+0x497a330a]
  402c30:	icebp  
  402c31:	and    DWORD PTR [ebp+0x62],esi
  402c34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c35:	cdq    
  402c36:	sub    DWORD PTR [edi+0x75],esi
  402c39:	jno    0x402c30
  402c3b:	in     eax,dx
  402c3c:	inc    edx
  402c3d:	ja     0x402c58
  402c3f:	jl     0x402bf3
  402c41:	add    dh,al
  402c43:	mov    bh,0xa9
  402c45:	das    
  402c46:	sbb    BYTE PTR [ebx+0x6157bd3],ah
  402c4c:	pop    ds
  402c4d:	xor    DWORD PTR gs:[edx+0x456ab423],esi
  402c54:	push   0x9e77574a
  402c59:	push   esp
  402c5a:	lahf   
  402c5b:	in     eax,0x69
  402c5d:	outs   dx,DWORD PTR ds:[esi]
  402c5e:	jg     0x402c70
  402c60:	fbld   TBYTE PTR [edx]
  402c62:	(bad)  
  402c63:	idiv   edi
  402c65:	push   esi
  402c66:	add    BYTE PTR [ecx-0x4d11ab50],cl
  402c6c:	add    al,0xfd
  402c6e:	push   eax
  402c6f:	hlt    
  402c70:	sub    eax,0xd353e7ef
  402c75:	cmp    ebp,DWORD PTR [ecx]
  402c77:	(bad)  
  402c78:	cmp    eax,DWORD PTR [edx+0xd7f9485]
  402c7e:	add    eax,0xfeb2d573
  402c83:	jbe    0x402cbe
  402c85:	lods   al,BYTE PTR ds:[esi]
  402c86:	jle    0x402cb9
  402c88:	ss inc edx
  402c8a:	aad    0x96
  402c8c:	cmp    edi,ecx
  402c8e:	dec    ecx
  402c8f:	stc    
  402c90:	mov    ebp,ebp
  402c92:	mov    eax,0xbe079b09
  402c97:	aas    
  402c98:	dec    edi
  402c99:	xor    ah,cl
  402c9b:	aas    
  402c9c:	jg     0x402c99
  402c9e:	xchg   ebp,eax
  402c9f:	aas    
  402ca0:	adc    ch,dl
  402ca2:	push   esi
  402ca3:	jecxz  0x402c42
  402ca5:	gs popa 
  402ca7:	and    eax,0xeaa5bf09
  402cac:	into   
  402cad:	shl    DWORD PTR ds:0x50703e5c,0xe0
  402cb4:	sub    dh,dh
  402cb6:	test   DWORD PTR [ebx],0x159e0ec5
  402cbc:	out    dx,al
  402cbd:	mov    al,0xdb
  402cbf:	mov    ebp,0xf7b1e0ff
  402cc4:	inc    edi
  402cc5:	mov    DWORD PTR [edx+ebp*2+0x16],esp
  402cc9:	gs sbb al,0x6c
  402ccc:	mov    edx,eax
  402cce:	icebp  
  402ccf:	stc    
  402cd0:	mov    al,ds:0x4e41a2e1
  402cd5:	inc    ebx
  402cd6:	xchg   BYTE PTR [eax-0x1b099eb7],al
  402cdc:	add    al,0xab
  402cde:	inc    eax
  402cdf:	or     eax,0x7c14f4e4
  402ce4:	add    DWORD PTR [ebx+0x7b936101],ebp
  402cea:	pop    ss
  402ceb:	cmp    al,0x4b
  402ced:	cmp    eax,0x75c8a8e
  402cf2:	loopne 0x402d6b
  402cf4:	aad    0x7c
  402cf6:	(bad)  
  402cf7:	repz mov eax,es:0xe669dcca
  402cfe:	daa    
  402cff:	sar    BYTE PTR [edx],0x22
  402d02:	cli    
  402d03:	test   al,0x67
  402d05:	jmp    0xee02:0x2bea55de
  402d0c:	ficomp DWORD PTR [edx]
  402d0e:	addr16 repnz fadd st(4),st
  402d12:	hlt    
  402d13:	xor    eax,0x6c2524a0
  402d18:	fcmovu st,st(4)
  402d1a:	xor    DWORD PTR [ebp+0x3],esp
  402d1d:	test   al,0xfe
  402d1f:	mov    ebx,0xb2175b31
  402d24:	scas   al,BYTE PTR es:[edi]
  402d25:	cmp    ecx,DWORD PTR [eax+0x58]
  402d28:	div    DWORD PTR [si+0x3b13]
  402d2d:	push   esp
  402d2e:	sub    al,0x36
  402d30:	jbe    0x402cc8
  402d32:	(bad)  
  402d33:	and    dl,BYTE PTR [esi-0x681a0829]
  402d39:	cdq    
  402d3a:	xchg   ecx,eax
  402d3b:	rsm    
  402d3d:	ror    BYTE PTR [eax+esi*2+0x225b71b8],cl
  402d44:	cmp    BYTE PTR [eax-0x6d],dh
  402d47:	ss push ss
  402d49:	ja     0x402cf2
  402d4b:	outs   dx,DWORD PTR ds:[esi]
  402d4c:	rol    BYTE PTR [esi],1
  402d4e:	das    
  402d4f:	mov    ecx,cs
  402d51:	stos   BYTE PTR es:[edi],al
  402d52:	cmp    cl,bl
  402d54:	add    cl,BYTE PTR [ebp-0x7b]
  402d57:	mov    BYTE PTR [ebx],0xbb
  402d5a:	das    
  402d5b:	mov    eax,ds:0x2b618408
  402d60:	push   edx
  402d61:	push   cs
  402d62:	inc    DWORD PTR [ebx]
  402d64:	jne    0x402dd5
  402d66:	dec    esi
  402d67:	pop    ebx
  402d68:	test   eax,0x4a316b0f
  402d6d:	mov    BYTE PTR [ebp+0x48b51f6e],bh
  402d73:	xchg   edi,eax
  402d74:	cdq    
  402d75:	mov    ch,ah
  402d77:	cmp    al,0xf3
  402d79:	jge    0x402db2
  402d7b:	sbb    BYTE PTR [esi+0x7add1bd4],ah
  402d81:	loope  0x402d94
  402d83:	test   al,0x4d
  402d85:	xchg   edx,eax
  402d86:	lock call 0xee29:0x93f0e6fd
  402d8e:	push   eax
  402d8f:	cmp    al,0xe7
  402d91:	inc    esp
  402d92:	test   DWORD PTR [ecx-0x41],esp
  402d95:	outs   dx,DWORD PTR ds:[esi]
  402d96:	pop    eax
  402d97:	cmp    BYTE PTR [edx-0x39],ch
  402d9a:	push   esi
  402d9b:	aas    
  402d9c:	xor    al,0x7f
  402d9e:	popa   
  402d9f:	or     ch,BYTE PTR [edi+0x7a]
  402da2:	push   edx
  402da3:	jae    0x402dd8
  402da5:	ins    BYTE PTR es:[edi],dx
  402da6:	adc    DWORD PTR [edx],ebx
  402da8:	retf   0xafd9
  402dab:	inc    ecx
  402dad:	mov    edx,0xbc6e7b6
  402db2:	push   esi
  402db3:	jmp    0x402df3
  402db5:	mov    edi,0x52d58d7a
  402dba:	lods   eax,DWORD PTR ds:[esi]
  402dbb:	adc    al,0xc0
  402dbd:	cwde   
  402dbe:	xchg   BYTE PTR [ecx-0x1],bh
  402dc1:	fisttp WORD PTR [ebx-0x37]
  402dc4:	cmp    ch,BYTE PTR [edx+0x8]
  402dc7:	sbb    BYTE PTR [esp+esi*4+0x1b],cl
  402dcb:	xor    DWORD PTR [eax],0x6876c117
  402dd1:	or     eax,0x83a7a538
  402dd6:	jmp    0x402d66
  402dd8:	jmp    0x81b5:0x371671be
  402ddf:	out    0x3e,eax
  402de1:	push   cs
  402de2:	(bad)  
  402de3:	cmp    eax,0xc31ba86b
  402de8:	(bad)  
  402de9:	packuswb mm0,QWORD PTR [edx+0x613e806e]
  402df0:	jmp    0x402db3
  402df2:	sub    DWORD PTR [ebp-0x5c5ace4b],ebx
  402df8:	out    0x11,eax
  402dfa:	and    al,0xd5
  402dfc:	cli    
  402dfd:	mov    esp,DWORD PTR [edi+0x593f5bb8]
  402e03:	ins    BYTE PTR es:[edi],dx
  402e04:	dec    ebx
  402e05:	fisubr DWORD PTR [edx-0x70e40c8e]
  402e0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e0c:	fadd   QWORD PTR [ecx]
  402e0e:	out    dx,eax
  402e0f:	lahf   
  402e10:	or     al,0xfe
  402e12:	repz out dx,eax
  402e14:	dec    edi
  402e15:	call   0xaddc85df
  402e1a:	xchg   ecx,eax
  402e1b:	leave  
  402e1c:	xchg   ecx,eax
  402e1d:	loop   0x402da6
  402e1f:	(bad)  
  402e20:	jl     0x402dfe
  402e22:	retf   0x8027
  402e25:	lods   eax,DWORD PTR ds:[esi]
  402e26:	jl     0x402daf
  402e28:	aam    0x84
  402e2a:	jle    0x402e95
  402e2c:	sub    dl,BYTE PTR [edx]
  402e2e:	in     eax,dx
  402e2f:	leave  
  402e30:	cld    
  402e31:	push   edx
  402e32:	mov    edx,0x987dd5b6
  402e37:	popa   
  402e38:	mov    ss,WORD PTR [ebp-0x43992dbf]
  402e3e:	mov    eax,ds:0xcb2bb6b0
  402e43:	dec    ebx
  402e44:	addr16 jno 0x402e56
  402e47:	cld    
  402e48:	nop
  402e49:	stc    
  402e4a:	(bad)  
  402e4b:	pop    ebx
  402e4c:	mov    ds:0x166b34bd,eax
  402e51:	fisubr DWORD PTR [edi+0x31]
  402e54:	call   0x7f435d28
  402e59:	add    esp,DWORD PTR [ebx]
  402e5b:	loop   0x402e46
  402e5d:	sahf   
  402e5e:	add    esp,DWORD PTR [edi]
  402e60:	mov    eax,ds:0x5a395c8b
  402e65:	cmp    al,0xc0
  402e67:	pop    es
  402e68:	xor    dh,BYTE PTR [ebp+0x27ab7dc8]
  402e6e:	jno    0x402eab
  402e70:	sub    al,0xbe
  402e72:	xchg   BYTE PTR [esp+esi*2],bl
  402e75:	sbb    eax,0x2707cae3
  402e7a:	aaa    
  402e7b:	xor    edi,eax
  402e7d:	retf   0x72f2
  402e80:	mov    edx,0x1d426a4
  402e85:	jmp    0xaf0688e5
  402e8a:	cmp    al,0xbe
  402e8c:	dec    edx
  402e8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e8e:	mov    BYTE PTR [ebx],bl
  402e90:	adc    BYTE PTR [edi-0x6a],0xc3
  402e94:	out    dx,al
  402e95:	and    al,al
  402e97:	push   esi
  402e98:	sbb    DWORD PTR [edi],ebp
  402e9a:	sti    
  402e9b:	gs cmp al,0x4c
  402e9e:	jno    0x402f03
  402ea0:	dec    ecx
  402ea1:	out    0xba,eax
  402ea3:	mov    dh,0x9
  402ea5:	pop    ss
  402ea6:	adc    al,0x6c
  402ea8:	dec    ecx
  402ea9:	xor    bh,BYTE PTR [edi+edx*8-0x55]
  402ead:	out    dx,eax
  402eae:	pop    ebp
  402eaf:	test   DWORD PTR [ecx-0x1075b4b0],edi
  402eb5:	cmp    edi,DWORD PTR [esi+ecx*2-0x7e]
  402eb9:	popa   
  402eba:	gs sbb al,0xdd
  402ebd:	lods   al,BYTE PTR ds:[esi]
  402ebe:	shr    DWORD PTR [ebx+0x45ec3673],cl
  402ec4:	popf   
  402ec5:	test   BYTE PTR [ecx-0x4b],dh
  402ec8:	gs push eax
  402eca:	dec    esi
  402ecb:	ror    DWORD PTR [eax-0x78],1
  402ece:	and    DWORD PTR [esi+0x2b],esi
  402ed1:	sbb    ebp,edx
  402ed3:	mov    bh,0x8d
  402ed5:	popf   
  402ed6:	push   ss
  402ed7:	xor    edx,DWORD PTR [ecx-0x31ca9fcf]
  402edd:	and    BYTE PTR [esi],0x5a
  402ee0:	mov    edx,0xcbc2ec4e
  402ee5:	xor    eax,0x81334c5b
  402eea:	add    BYTE PTR [edi],ch
  402eec:	jo     0x402ee2
  402eee:	and    eax,0x29f1f598
  402ef3:	push   esi
  402ef4:	push   edx
  402ef5:	sub    al,0xc4
  402ef7:	out    dx,eax
  402ef8:	xchg   eax,eax
  402efa:	cld    
  402efb:	imul   DWORD PTR [ebx-0x4]
  402efe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402eff:	(bad)  
  402f01:	call   0x720f:0x5014883
  402f08:	adc    eax,0x2e9e2b06
  402f0d:	sub    DWORD PTR [ecx+esi*1+0x2ab568d1],0xa
  402f15:	out    dx,eax
  402f16:	adc    DWORD PTR [edi*1+0x496fab95],edi
  402f1d:	scas   eax,DWORD PTR es:[edi]
  402f1e:	popa   
  402f1f:	jl     0x402f7f
  402f21:	sub    eax,0xfc9c0324
  402f26:	jb     0x402f74
  402f28:	inc    eax
  402f29:	adc    ecx,ecx
  402f2b:	outs   dx,DWORD PTR ds:[esi]
  402f2c:	pop    eax
  402f2d:	je     0x402f97
  402f2f:	data16 stos BYTE PTR es:[edi],al
  402f31:	lock dec ebx
  402f33:	or     al,0x5c
  402f35:	(bad)  
  402f36:	xchg   esp,eax
  402f37:	jb     0x402f2c
  402f39:	sub    dh,BYTE PTR [edx+0x18]
  402f3c:	inc    esp
  402f3d:	out    dx,eax
  402f3e:	add    bh,dh
  402f40:	das    
  402f41:	cs jge 0x402f76
  402f44:	neg    DWORD PTR [edx]
  402f46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f47:	cli    
  402f48:	add    eax,0xf57201f2
  402f4d:	ret    
  402f4e:	popa   
  402f4f:	hlt    
  402f50:	std    
  402f51:	push   ebx
  402f52:	pop    ss
  402f53:	loopne 0x402f0c
  402f55:	imul   ecx,DWORD PTR [esi-0x50],0x6cb88088
  402f5c:	aaa    
  402f5d:	mov    edx,0xff757fd4
  402f62:	out    0x51,al
  402f64:	aas    
  402f65:	push   ecx
  402f66:	pop    edx
  402f67:	adc    BYTE PTR [eax+0x2a96fd97],cl
  402f6d:	push   edi
  402f6e:	je     0x402f8b
  402f70:	mov    DWORD PTR [esi+0x6f],edi
  402f73:	inc    ecx
  402f74:	sub    BYTE PTR [edi],0x38
  402f77:	enter  0xd0a0,0x8c
  402f7b:	bnd js 0x402f08
  402f7e:	sbb    DWORD PTR [eax],esp
  402f80:	xchg   BYTE PTR [ebx+ebp*1-0x448f14b1],bl
  402f87:	xchg   BYTE PTR [eax],bh
  402f89:	cli    
  402f8a:	add    bl,bl
  402f8c:	mov    ds:0x648d23c5,al
  402f91:	dec    edi
  402f92:	popa   
  402f93:	fadd   st,st(7)
  402f95:	pop    ebp
  402f96:	push   es
  402f97:	cld    
  402f98:	jo     0x402ff2
  402f9a:	xor    DWORD PTR [eax+0x9],ecx
  402f9d:	int3   
  402f9e:	mov    eax,0x1bf7977b
  402fa3:	xchg   ecx,eax
  402fa4:	fdiv   DWORD PTR [edx-0x6a]
  402fa7:	adc    bh,ah
  402fa9:	lods   eax,DWORD PTR ds:[esi]
  402faa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fab:	mov    al,ds:0xef3fd7e9
  402fb0:	and    eax,DWORD PTR [ebx]
  402fb2:	clc    
  402fb3:	in     al,dx
  402fb4:	push   ss
  402fb5:	mov    ebp,0x6f598110
  402fba:	xor    al,BYTE PTR [ebp+0x2d]
  402fbd:	mov    eax,DWORD PTR [ecx+eiz*8-0x2929e1fd]
  402fc4:	in     eax,dx
  402fc5:	iret   
  402fc6:	cmc    
  402fc7:	pop    esp
  402fc8:	lahf   
  402fc9:	sbb    bl,bh
  402fcb:	retf   
  402fcc:	mov    edi,0xd78ed00b
  402fd1:	shr    BYTE PTR [ebp+0x257b7975],0xb2
  402fd8:	call   0x751e706
  402fdd:	outs   dx,BYTE PTR ds:[esi]
  402fde:	add    eax,0x57682615
  402fe3:	stc    
  402fe4:	sbb    BYTE PTR [esi],bh
  402fe6:	dec    edi
  402fe7:	and    esp,DWORD PTR [edx+0x1e839db8]
  402fed:	sub    al,BYTE PTR ss:[ecx]
  402ff0:	scas   al,BYTE PTR es:[edi]
  402ff1:	rcl    DWORD PTR [edx+0x63b4658d],0x50
  402ff8:	xchg   ebx,eax
  402ff9:	mov    ebp,0xfafe2028
  402ffe:	test   al,0x6e
  403000:	pop    edx
  403001:	or     esi,DWORD PTR [eax+0x611ecffc]
  403007:	addr16 inc eax
  403009:	xor    DWORD PTR [eax],ecx
  40300b:	icebp  
  40300c:	add    DWORD PTR ds:0x887aeaee,0xffffffc6
  403013:	fs enter 0x82e8,0xfd
  403018:	fsubr  QWORD PTR [ecx-0x72]
  40301b:	loopne 0x402fb6
  40301d:	sub    DWORD PTR [eax],0xbe1b22d4
  403023:	sbb    eax,0x18fee53e
  403028:	sbb    al,0xd1
  40302a:	and    BYTE PTR [ebp-0x31a8a926],dl
  403030:	dec    ecx
  403031:	shr    BYTE PTR [ecx],1
  403033:	enter  0xb8f2,0xb1
  403037:	cmp    ecx,DWORD PTR [edx-0x20]
  40303a:	and    eax,0x22865765
  40303f:	jg     0x402fc8
  403041:	sbb    al,0x1d
  403043:	or     BYTE PTR [eax+0x21],0x4
  403047:	mov    al,0x5a
  403049:	push   0xffffffc5
  40304b:	push   ecx
  40304c:	fcom   DWORD PTR [edx-0x50b8f735]
  403052:	fild   QWORD PTR [eax+ebp*2-0x36]
  403056:	sub    BYTE PTR [ecx-0x4b],ah
  403059:	xchg   DWORD PTR [edx+esi*2+0x40],ebx
  40305d:	outs   dx,DWORD PTR ds:[esi]
  40305e:	xchg   esp,eax
  40305f:	xor    al,BYTE PTR [edx-0x3f871b01]
  403065:	rol    DWORD PTR [edi],1
  403067:	jmp    0x403079
  403069:	ins    DWORD PTR es:[edi],dx
  40306a:	test   al,0xc7
  40306c:	aas    
  40306d:	add    DWORD PTR [esp+ebp*8],0xa
  403071:	mov    eax,0xeb54f3b8
  403076:	jmp    0xa47d1fd5
  40307b:	adc    edx,ebp
  40307d:	daa    
  40307e:	js     0x403027
  403080:	mov    cl,0x12
  403082:	in     al,0xab
  403084:	push   0x8f0d2057
  403089:	out    dx,eax
  40308a:	into   
  40308b:	pop    ecx
  40308c:	push   0xffffffb3
  40308e:	sub    al,0xf6
  403090:	(bad)  
  403091:	cwde   
  403092:	mul    BYTE PTR [esi]
  403094:	mov    ch,0xd4
  403096:	push   ds
  403097:	mov    ds:0x21b38743,eax
  40309c:	cld    
  40309d:	aaa    
  40309e:	pop    ebx
  40309f:	jae    0x40304b
  4030a1:	pop    ecx
  4030a2:	xor    BYTE PTR [ecx-0x15],0xc5
  4030a6:	not    DWORD PTR [ebp+0x6b]
  4030a9:	mov    edi,0x4c1c2b2
  4030ae:	inc    edi
  4030af:	xchg   esp,eax
  4030b0:	shl    edx,0x14
  4030b3:	sbb    ecx,DWORD PTR [ebx+0x2d36d2a6]
  4030b9:	rcr    BYTE PTR [ecx+edi*4],0x91
  4030bd:	jbe    0x4030aa
  4030bf:	das    
  4030c0:	popf   
  4030c1:	push   esi
  4030c2:	mov    eax,0x52437ff9
  4030c7:	nop
  4030c8:	jo     0x403127
  4030ca:	pop    esi
  4030cb:	xchg   edi,eax
  4030cc:	cs pushf 
  4030ce:	arpl   si,di
  4030d0:	js     0x4030cc
  4030d2:	fwait
  4030d3:	or     BYTE PTR [eax-0x1e945809],cl
  4030d9:	jo     0x4030e1
  4030db:	lods   al,BYTE PTR ds:[esi]
  4030dc:	lock mov WORD PTR [edx+0x1c91f40d],ss
  4030e3:	sub    BYTE PTR [ebp+0x7e9b3a4c],0x55
  4030ea:	sbb    BYTE PTR [ebx],cl
  4030ec:	mov    ebx,DWORD PTR [ebx-0x52d9ea2a]
  4030f2:	adc    edx,ebp
  4030f4:	cli    
  4030f5:	lea    esp,[eax+ebx*2+0x6d01733f]
  4030fc:	sub    ebp,esi
  4030fe:	aas    
  4030ff:	mov    WORD PTR [esi+0x66772609],es
  403105:	(bad)  
  403106:	and    al,0x95
  403108:	lahf   
  403109:	imul   BYTE PTR [esp+eax*1-0x1e08828b]
  403110:	sbb    al,0x41
  403112:	sahf   
  403113:	mov    ebp,0x4abdfa02
  403118:	data16 cli 
  40311a:	jp     0x4030ab
  40311c:	or     BYTE PTR [esi],ah
  40311e:	xor    eax,DWORD PTR [esp+ecx*1+0x70]
  403122:	jecxz  0x4030e4
  403124:	popa   
  403125:	add    edx,esi
  403127:	cmp    BYTE PTR ds:0xfd616232,0x39
  40312e:	lds    edx,FWORD PTR [esi]
  403130:	addr16 add al,0xc
  403133:	push   eax
  403134:	push   esp
  403135:	imul   ebp,DWORD PTR [edx],0xf747559a
  40313b:	dec    eax
  40313c:	add    BYTE PTR [edi+0x2d],dl
  40313f:	mov    ebx,0xbcba0095
  403144:	mov    al,0xf5
  403146:	mov    cl,0x2a
  403148:	fbld   TBYTE PTR [esp+ebx*4]
  40314b:	(bad)  
  40314c:	mov    esi,0x8800e700
  403151:	mov    ds:0x419f8f08,eax
  403156:	jo     0x403182
  403158:	retf   
  403159:	fwait
  40315a:	dec    ebx
  40315b:	xor    DWORD PTR [eax+0x7e1db9ec],ebp
  403161:	xor    al,0xc1
  403163:	mov    edi,0x4e4e04ed
  403168:	stos   BYTE PTR es:[edi],al
  403169:	push   ebx
  40316a:	mov    eax,ds:0x602dd0dc
  40316f:	sbb    eax,DWORD PTR [esi-0x7b]
  403172:	xlat   BYTE PTR ds:[ebx]
  403173:	jmp    0x81770652
  403178:	popf   
  403179:	(bad)  
  40317b:	lahf   
  40317c:	xchg   edi,eax
  40317d:	mov    ah,bh
  40317f:	or     BYTE PTR [ebx-0x72003db2],dh
  403185:	es (bad) 
  403187:	sbb    eax,0xc0a60efd
  40318c:	xchg   ebp,eax
  40318d:	(bad)  
  40318e:	std    
  40318f:	cmp    bh,dl
  403191:	add    al,0xdd
  403193:	out    0x79,al
  403195:	sbb    bl,dh
  403197:	push   ebx
  403198:	repz and al,0xcf
  40319b:	aam    0x5
  40319d:	fadd   st,st(6)
  40319f:	mov    WORD PTR [esi+ecx*2],cs
  4031a2:	sub    al,0x49
  4031a4:	xchg   edi,eax
  4031a5:	xor    eax,0x190bfb11
  4031aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031ab:	lea    esp,[edx-0x74]
  4031ae:	mov    BYTE PTR [eax-0x5e6c95d6],0x6a
  4031b5:	sahf   
  4031b6:	es xchg edx,eax
  4031b8:	mov    esp,0x91f70a5d
  4031bd:	cmp    dh,BYTE PTR [esi]
  4031bf:	and    DWORD PTR gs:0x39934c4b,ebx
  4031c6:	lock pop ebx
  4031c8:	in     al,dx
  4031c9:	in     eax,dx
  4031ca:	fcom   QWORD PTR [ebx+0x12bb6d4b]
  4031d0:	cdq    
  4031d1:	in     eax,0x89
  4031d3:	test   DWORD PTR [eax-0x66eea993],edi
  4031d9:	in     al,dx
  4031da:	sbb    BYTE PTR [ebp+0x30],bl
  4031dd:	jmp    0xc791f85c
  4031e2:	cdq    
  4031e3:	scas   al,BYTE PTR es:[edi]
  4031e4:	sub    DWORD PTR [edx-0x63],ecx
  4031e7:	sbb    ebp,DWORD PTR [esi+0x29]
  4031ea:	mov    ebp,DWORD PTR [ebx+eax*8+0x8]
  4031ee:	inc    esp
  4031ef:	and    edi,DWORD PTR [ebp-0x42a36d7c]
  4031f5:	cdq    
  4031f6:	call   0xa3cbbe3b
  4031fb:	xchg   bh,bl
  4031fd:	dec    BYTE PTR [ebx]
  4031ff:	out    dx,eax
  403200:	jo     0x403230
  403202:	dec    esi
  403203:	mov    ch,0xb9
  403205:	dec    ebx
  403206:	mov    ?,WORD PTR [edx+0x7b28751e]
  40320c:	adc    al,0x3
  40320e:	aaa    
  40320f:	xor    al,0x81
  403211:	jo     0x4031dc
  403213:	jle    0x40326d
  403215:	lds    ecx,FWORD PTR [esi]
  403217:	setp   al
  40321a:	cs ja  0x4031c7
  40321d:	lods   al,BYTE PTR ds:[esi]
  40321e:	push   ecx
  40321f:	and    BYTE PTR [ecx+0x24],bh
  403222:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403223:	mov    bl,0x37
  403225:	inc    ebp
  403226:	sub    bl,bl
  403228:	mov    eax,0xbbc1d155
  40322d:	jp     0x40320d
  40322f:	rcl    BYTE PTR [eax-0x74d20879],cl
  403235:	add    BYTE PTR [edi-0x5707c07a],bh
  40323b:	sub    al,0xfc
  40323d:	clc    
  40323e:	mov    al,0xb1
  403240:	sbb    al,0xa5
  403242:	sbb    DWORD PTR [edx],edx
  403244:	mov    ebx,0xf95f2cc8
  403249:	dec    ebx
  40324a:	pushf  
  40324b:	xor    eax,0x7c4528b5
  403250:	aad    0x36
  403252:	push   esp
  403253:	fwait
  403254:	(bad)  
  403255:	pop    eax
  403256:	std    
  403257:	adc    eax,0x1345c184
  40325c:	or     BYTE PTR [ebp+0x1dc3cef],dl
  403262:	cwde   
  403263:	in     eax,0xd6
  403265:	imul   eax,DWORD PTR [eax+eax*4-0x4f34c100],0x55f9a348
  403270:	sbb    bh,BYTE PTR ds:[ebp+0x50451ca0]
  403277:	dec    ebp
  403278:	aad    0x40
  40327a:	xor    eax,0x93b30dbb
  40327f:	clts   
  403281:	(bad)  
  403282:	retf   
  403283:	mov    bh,0xd2
  403285:	adc    esp,DWORD PTR [esi+0x73840967]
  40328b:	or     ah,BYTE PTR [eax+eiz*4+0x66]
  40328f:	ins    DWORD PTR es:[edi],dx
  403290:	cdq    
  403291:	retf   0x678a
  403294:	push   0xffffff93
  403296:	or     cl,al
  403298:	in     al,0x6f
  40329a:	stos   DWORD PTR es:[edi],eax
  40329b:	dec    DWORD PTR [esi-0xc]
  40329e:	shl    esp,cl
  4032a0:	bound  edx,QWORD PTR es:[eax]
  4032a3:	inc    ebp
  4032a4:	and    BYTE PTR [ecx+0x726c30ad],cl
  4032aa:	or     esp,DWORD PTR [ecx+eiz*2+0x29]
  4032ae:	sbb    eax,0xd96ca623
  4032b3:	jg     0x403278
  4032b5:	adc    BYTE PTR [edx-0x4a],cl
  4032b8:	dec    edx
  4032b9:	mov    ah,0x9a
  4032bb:	int    0x11
  4032bd:	and    BYTE PTR [ebp-0xa],al
  4032c0:	das    
  4032c1:	test   BYTE PTR [ebx+0x6],ch
  4032c4:	int    0xb5
  4032c6:	test   BYTE PTR [edi-0x5e],ch
  4032c9:	add    eax,0x545ccdae
  4032ce:	fisttp QWORD PTR [ebp-0x18]
  4032d1:	push   0xffffffcf
  4032d3:	retf   0xb05d
  4032d6:	addr16 (bad) 
  4032d8:	repnz mov bh,0xd9
  4032db:	mov    BYTE PTR [eax],bh
  4032dd:	xor    al,0xa3
  4032df:	or     eax,0x137f35f7
  4032e4:	or     DWORD PTR [edx],ebx
  4032e6:	jg     0x4032dc
  4032e8:	xchg   edi,eax
  4032e9:	push   ss
  4032ea:	add    BYTE PTR [ecx],0x74
  4032ed:	retf   0x169
  4032f0:	in     eax,0x86
  4032f2:	fadd   DWORD PTR [ebp+0x59]
  4032f5:	cwde   
  4032f6:	sbb    eax,0x90fc8a12
  4032fb:	test   DWORD PTR [eax+0x1d],0x68e18e83
  403302:	cmc    
  403303:	leave  
  403304:	lods   eax,DWORD PTR ds:[esi]
  403305:	adc    eax,0x75cedbf0
  40330a:	push   esi
  40330b:	pop    edi
  40330c:	dec    ebp
  40330d:	out    0xb2,eax
  40330f:	stos   BYTE PTR es:[edi],al
  403310:	push   ecx
  403311:	or     eax,0x4272bf8f
  403316:	sbb    BYTE PTR [ecx+0x30b1a55e],al
  40331c:	mov    ds:0xaa4aec81,al
  403322:	sub    eax,0xf22c1d84
  403327:	sbb    edi,edi
  403329:	xchg   esi,eax
  40332a:	or     ah,BYTE PTR [ebp-0x34]
  40332d:	fist   WORD PTR [ebx+0x7d352756]
  403333:	leave  
  403334:	nop
  403335:	call   0x163c:0xe6373f1c
  40333c:	pop    ds
  40333d:	xor    ecx,DWORD PTR [ebx+0x6a48b75d]
  403343:	jb     0x40333d
  403345:	aad    0xe1
  403347:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403348:	jo     0x403364
  40334a:	push   eax
  40334b:	scas   eax,DWORD PTR es:[edi]
  40334c:	lods   eax,DWORD PTR ds:[esi]
  40334d:	mov    cs,WORD PTR [esp]
  403350:	adc    dh,BYTE PTR [edx]
  403352:	inc    ebp
  403353:	add    al,BYTE PTR [esi]
  403355:	rcr    DWORD PTR [eax-0x17ca5787],1
  40335b:	mov    dh,0x9f
  40335d:	push   ds
  40335e:	xchg   edi,eax
  40335f:	dec    ebx
  403360:	adc    al,0xb1
  403362:	and    ah,BYTE PTR [ecx+0x26]
  403365:	xchg   DWORD PTR [esi+0x369c9192],esp
  40336b:	fcom   QWORD PTR [ebp-0x1d66fd30]
  403371:	jge    0x403387
  403373:	mov    esi,0x70623bd7
  403378:	mov    eax,ds:0x1dc236f7
  40337d:	xchg   esi,eax
  40337e:	mov    ch,0x30
  403380:	aaa    
  403381:	(bad)  
  403382:	dec    edx
  403383:	xchg   ebp,eax
  403384:	adc    DWORD PTR [ebx+0x70],ecx
  403387:	dec    ecx
  403388:	mov    al,0x3d
  40338a:	aad    0xb3
  40338c:	mov    bl,0x81
  40338e:	lods   al,BYTE PTR ds:[esi]
  40338f:	rcl    BYTE PTR [edx+ecx*8+0x368eae60],1
  403396:	mov    WORD PTR [edx+0x48cb8407],cs
  40339c:	ror    edi,cl
  40339e:	pop    ebx
  40339f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033a0:	or     DWORD PTR [ebx],ecx
  4033a2:	xor    bh,BYTE PTR [esi-0xc29b881]
  4033a8:	xor    eax,0xb4b9540c
  4033ad:	call   0xe11d1fda
  4033b2:	and    BYTE PTR [ecx+0x41327880],0x2a
  4033b9:	daa    
  4033ba:	fcom   DWORD PTR [edx+ecx*2+0x69]
  4033be:	xor    BYTE PTR [edi+0x38dc98f],bl
  4033c4:	fcmovne st,st(6)
  4033c6:	xchg   esi,eax
  4033c7:	js     0x4033f0
  4033c9:	lahf   
  4033ca:	and    al,0x2e
  4033cc:	mov    al,0x8e
  4033ce:	jmp    0x403396
  4033d0:	retf   
  4033d1:	adc    DWORD PTR ds:[edx+0x1fdf5bf],ebp
  4033d8:	out    dx,eax
  4033d9:	push   es
  4033da:	loop   0x403437
  4033dc:	out    dx,al
  4033dd:	cmp    ebp,DWORD PTR [ecx]
  4033df:	fwait
  4033e0:	iret   
  4033e1:	ret    
  4033e2:	icebp  
  4033e3:	daa    
  4033e4:	(bad)  
  4033e5:	mov    dl,0xc4
  4033e7:	daa    
  4033e8:	xchg   ebp,eax
  4033e9:	ss xor edi,ebp
  4033ec:	mov    cl,0x8e
  4033ee:	cwde   
  4033ef:	jle    0x40344d
  4033f1:	push   es
  4033f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033f3:	ja     0x403464
  4033f5:	(bad)  
  4033f7:	aam    0x29
  4033f9:	dec    eax
  4033fa:	iret   
  4033fb:	dec    eax
  4033fc:	mov    bl,0x5b
  4033fe:	xor    DWORD PTR [ebp+0x38a8e26b],edx
  403404:	xchg   ebp,eax
  403405:	inc    edx
  403406:	ss stc 
  403408:	jae    0x4033ad
  40340a:	mov    eax,ds:0x278136b0
  40340f:	inc    edi
  403410:	pop    ds
  403411:	add    al,0xe4
  403413:	dec    esi
  403414:	sbb    cl,BYTE PTR [eax-0x38]
  403417:	aaa    
  403418:	jp     0x403406
  40341a:	inc    edi
  40341b:	retf   0x464
  40341e:	pop    ss
  40341f:	aam    0x99
  403421:	inc    ecx
  403422:	ja     0x4033d9
  403424:	push   edx
  403425:	pop    esp
  403426:	addr16 jns 0x403446
  403429:	or     ah,BYTE PTR ds:0x6b0816a5
  40342f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403430:	push   ecx
  403431:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403432:	jns    0x4033e7
  403434:	mov    bl,0xca
  403436:	push   ds
  403437:	pop    esi
  403438:	daa    
  403439:	pop    eax
  40343a:	mov    esp,0x153e3fa7
  40343f:	add    ebx,edi
  403441:	sub    ebx,ebx
  403443:	push   ss
  403444:	xor    BYTE PTR [ebp+0x72ce2248],al
  40344a:	call   0x92ce9dcb
  40344f:	rep outs dx,DWORD PTR ds:[esi]
  403451:	ja     0x4033d9
  403453:	pop    ebp
  403454:	imul   eax,ebx,0x5ac99b28
  40345a:	mov    esp,0xa5f743c0
  40345f:	dec    ebx
  403460:	pop    eax
  403461:	lds    edi,FWORD PTR [ebp+esi*2-0x60]
  403465:	add    edi,DWORD PTR [ebx+0x7cd85065]
  40346b:	outs   dx,DWORD PTR ds:[esi]
  40346c:	inc    esi
  40346d:	adc    cl,ah
  40346f:	sbb    ch,BYTE PTR [ebx]
  403471:	dec    edi
  403472:	enter  0x844,0x2c
  403476:	leave  
  403477:	repz (bad) 
  403479:	call   0xf144a2f1
  40347e:	into   
  40347f:	out    0x6e,al
  403481:	inc    eax
  403482:	into   
  403483:	adc    cl,ah
  403485:	jnp    0x403471
  403487:	mov    al,bh
  403489:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40348a:	and    edi,DWORD PTR [ebp+0x4a661704]
  403490:	nop
  403491:	jecxz  0x4034ee
  403493:	xor    dl,BYTE PTR [esi+0x58]
  403496:	mov    al,0x9a
  403498:	icebp  
  403499:	jnp    0x4034f3
  40349b:	rcr    BYTE PTR [edi+eax*4+0x40],1
  40349f:	arpl   WORD PTR [eax+0x24be7e2e],dx
  4034a5:	mov    bh,0x52
  4034a7:	scas   al,BYTE PTR es:[edi]
  4034a8:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4034aa:	sti    
  4034ab:	les    eax,FWORD PTR [ebp-0x53]
  4034ae:	adc    eax,0xdee06e6f
  4034b3:	inc    ebx
  4034b4:	dec    edi
  4034b5:	bound  edi,QWORD PTR es:[edx]
  4034b8:	out    dx,eax
  4034b9:	xchg   esp,eax
  4034ba:	aam    0xf
  4034bc:	mov    gs,WORD PTR [eax-0x43]
  4034bf:	imul   esi,DWORD PTR [eax],0x44aab4fa
  4034c5:	fsub   st,st(6)
  4034c7:	stc    
  4034c8:	push   eax
  4034c9:	push   ds
  4034ca:	cmp    al,0xde
  4034cc:	cwde   
  4034cd:	out    dx,eax
  4034ce:	int3   
  4034cf:	mov    ds:0x28b8986b,al
  4034d4:	sub    DWORD PTR [edx],0xc6ed4dd4
  4034da:	push   edi
  4034db:	jne    0x4034aa
  4034dd:	mov    edi,?
  4034df:	mov    dl,BYTE PTR [edx+edi*2+0x610fde48]
  4034e6:	and    BYTE PTR [ecx],0xe3
  4034e9:	add    eax,0x97ad5cfd
  4034ee:	pop    ss
  4034ef:	es retf 0x30fa
  4034f3:	cmp    esi,eax
  4034f5:	out    dx,al
  4034f6:	pop    edx
  4034f7:	std    
  4034f8:	pushf  
  4034f9:	data16 std 
  4034fb:	push   ebp
  4034fc:	and    esi,DWORD PTR [eax]
  4034fe:	or     DWORD PTR [edi+0x45],edi
  403501:	call   0x8ca0ed08
  403506:	jmp    0x19d5ed6e
  40350b:	popf   
  40350c:	cmp    dl,BYTE PTR [edx-0x77b7e2a0]
  403512:	add    edx,DWORD PTR [ecx]
  403514:	sub    eax,DWORD PTR [ebp+0x47]
  403517:	enter  0xbd8,0x8
  40351b:	dec    edi
  40351c:	loop   0x403511
  40351e:	push   cs
  40351f:	out    dx,eax
  403520:	ins    BYTE PTR es:[edi],dx
  403521:	dec    ebx
  403522:	loopne 0x403561
  403524:	in     al,dx
  403525:	hlt    
  403526:	dec    esi
  403527:	pop    ds
  403528:	dec    edi
  403529:	mov    edx,0x57162ae2
  40352e:	out    dx,al
  40352f:	inc    esp
  403530:	mov    bh,0x4e
  403532:	cwde   
  403533:	sub    BYTE PTR [ebp+0x6c113a6a],dl
  403539:	test   eax,0x7ce2a67
  40353e:	aas    
  40353f:	outs   dx,BYTE PTR ds:[esi]
  403540:	mov    al,ds:0xe0ffdc46
  403545:	adc    ch,BYTE PTR [esi]
  403547:	pop    ss
  403548:	push   ss
  403549:	xchg   ebx,eax
  40354a:	stos   DWORD PTR es:[edi],eax
  40354b:	outs   dx,BYTE PTR ds:[esi]
  40354c:	out    0x5f,eax
  40354e:	jp     0x40355d
  403550:	jbe    0x4034f1
  403552:	add    eax,0xaa720a63
  403557:	(bad)  
  403558:	and    edx,ebp
  40355a:	nop
  40355b:	call   0xe4fc:0x9bb47e89
  403562:	xchg   ch,bh
  403564:	sub    eax,0x33059f71
  403569:	(bad)
  40356c:	lea    ecx,[ebx+0x31]
  40356f:	repnz enter 0x9980,0xa0
  403574:	xchg   BYTE PTR [eax+edi*8-0x27],cl
  403578:	call   0x874ed8cd
  40357d:	and    BYTE PTR [eax-0x6b],al
  403580:	xchg   ebx,eax
  403581:	fild   QWORD PTR [edx]
  403583:	test   DWORD PTR [eax-0x27],edx
  403586:	jg     0x403597
  403588:	(bad)  
  40358a:	cwde   
  40358b:	sub    eax,0x6d0711b4
  403590:	mov    esi,0xfbe39ff9
  403595:	mov    ebp,0x9adbbc37
  40359a:	es push 0x2ec42d36
  4035a0:	mov    cl,0xd7
  4035a2:	pushf  
  4035a3:	jnp    0x40360a
  4035a5:	adc    ebx,DWORD PTR [edx]
  4035a7:	mov    dh,0xb5
  4035a9:	add    al,dh
  4035ab:	sbb    DWORD PTR [edi-0x5d],edx
  4035ae:	and    ebp,ecx
  4035b0:	and    dl,BYTE PTR [edx+0x45057166]
  4035b6:	lods   eax,DWORD PTR ds:[esi]
  4035b7:	les    ecx,FWORD PTR [esi+edx*4]
  4035ba:	cmc    
  4035bb:	cli    
  4035bc:	fstp   QWORD PTR [edi]
  4035be:	jb     0x403569
  4035c0:	ins    BYTE PTR es:[edi],dx
  4035c1:	xchg   BYTE PTR [ebp+0x43],dl
  4035c4:	scas   al,BYTE PTR es:[edi]
  4035c5:	iret   
  4035c6:	push   es
  4035c7:	push   edx
  4035c8:	push   ebp
  4035c9:	mov    gs,WORD PTR [ecx]
  4035cb:	sbb    eax,0xa5e60727
  4035d0:	jne    0x403577
  4035d2:	ss xchg ecx,eax
  4035d4:	aad    0xd
  4035d6:	jno    0x40358b
  4035d8:	(bad)  
  4035d9:	fnclex 
  4035db:	test   DWORD PTR [edx-0x57],edi
  4035de:	mov    ch,BYTE PTR [edx-0x5bc085eb]
  4035e4:	leave  
  4035e5:	call   0xe2a5:0xf6dff3b9
  4035ec:	mov    ecx,0xaa6965a0
  4035f1:	cmp    DWORD PTR [edi+esi*4-0x53],edx
  4035f5:	xchg   edi,eax
  4035f6:	int    0x9c
  4035f8:	xchg   DWORD PTR ds:0xeba3465d,ebx
  4035fe:	xor    al,0xe0
  403600:	pop    esp
  403601:	add    edi,DWORD PTR [edi-0x704e57e7]
  403607:	fisubr DWORD PTR [esp+eax*8+0x22c6b6c7]
  40360e:	or     al,0x2d
  403610:	mov    ecx,0x7a504ca5
  403615:	push   0xaf97a718
  40361a:	push   ecx
  40361b:	add    DWORD PTR [ebx+0x3],edx
  40361e:	mov    edi,0x6c0bf48f
  403623:	mov    edi,0x77885f74
  403628:	push   esi
  403629:	ins    DWORD PTR es:[edi],dx
  40362a:	fcmovb st,st(6)
  40362c:	mov    WORD PTR [esi-0x40],ss
  40362f:	outs   dx,BYTE PTR ds:[esi]
  403630:	arpl   WORD PTR [ebx],dx
  403632:	and    eax,0x28bdcdd1
  403637:	les    ecx,FWORD PTR [ebx-0x52]
  40363a:	adc    DWORD PTR [ebp+0x2a08a5b4],ebp
  403640:	out    dx,al
  403641:	pcmpgtd mm0,QWORD PTR [ebp-0x3d6f6903]
  403648:	mov    ds,WORD PTR [eax]
  40364a:	inc    edi
  40364b:	mov    esi,0xef2d1e8a
  403650:	adc    cl,ah
  403652:	sti    
  403653:	retf   
  403654:	jmp    0xaf94:0x41a95116
  40365b:	fldcw  WORD PTR [edx-0x6260e37d]
  403661:	xlat   BYTE PTR ds:[ebx]
  403662:	adc    DWORD PTR [ecx+0x4ff3b376],edi
  403668:	push   cs
  403669:	mov    BYTE PTR [ebx+0x268f9e60],dl
  40366f:	push   ecx
  403670:	push   ds
  403671:	mov    al,dl
  403673:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403674:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403675:	es mov esi,0x21105446
  40367b:	iret   
  40367c:	and    al,0x9a
  40367e:	mov    ebx,0x2ac0ba8c
  403683:	xchg   edx,eax
  403684:	pop    esp
  403685:	mov    ebx,0xb660bbce
  40368a:	into   
  40368b:	pop    ss
  40368c:	xor    eax,0x6a1c77d7
  403691:	jbe    0x4036fc
  403693:	cli    
  403694:	lods   al,BYTE PTR ds:[esi]
  403695:	pop    esp
  403696:	lods   al,BYTE PTR ds:[esi]
  403697:	out    0x9f,al
  403699:	rol    DWORD PTR [edi+edi*2-0x613e5d5f],1
  4036a0:	mov    esi,0xc1039d4b
  4036a5:	sbb    ebp,ebp
  4036a7:	mov    DWORD PTR [eax+0x2dc1b535],esi
  4036ad:	test   eax,0xe8d00699
  4036b2:	add    DWORD PTR [edi-0x36b4baf],ebx
  4036b8:	inc    edx
  4036b9:	leave  
  4036ba:	or     ecx,DWORD PTR [eax]
  4036bc:	mov    eax,0x91dcb96e
  4036c1:	push   ecx
  4036c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4036c3:	ret    0x8845
  4036c6:	out    0x5f,eax
  4036c8:	or     al,0xe
  4036ca:	fcomi  st,st(3)
  4036cc:	sub    dl,bl
  4036ce:	stc    
  4036cf:	push   ebx
  4036d0:	mov    ds:0xdf578c7d,al
  4036d5:	stc    
  4036d6:	sub    ecx,DWORD PTR [edi]
  4036d8:	loope  0x403662
  4036da:	inc    edi
  4036db:	sub    al,0xfd
  4036dd:	inc    edi
  4036de:	sub    eax,0x11ebb18c
  4036e3:	dec    edi
  4036e4:	mov    bl,0x53
  4036e6:	retf   0xc4bf
  4036e9:	xchg   ebp,eax
  4036ea:	push   edx
  4036eb:	inc    esi
  4036ec:	ins    BYTE PTR es:[edi],dx
  4036ed:	jle    0x40371a
  4036ef:	out    dx,eax
  4036f0:	xlat   BYTE PTR ds:[ebx]
  4036f1:	cs pop eax
  4036f3:	leave  
  4036f4:	sbb    eax,DWORD PTR [ebx]
  4036f6:	test   al,0xc2
  4036f8:	xor    ebp,esp
  4036fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036fb:	fwait
  4036fc:	pusha  
  4036fd:	jge    0x40375c
  4036ff:	add    BYTE PTR es:[esi],cl
  403702:	lds    ecx,FWORD PTR [edi+0x5a]
  403705:	add    cl,BYTE PTR [ecx+0x521ed852]
  40370b:	inc    BYTE PTR [eax]
  40370d:	jge    0x4036d6
  40370f:	sub    eax,0xae309694
  403714:	(bad)  
  403715:	and    edi,DWORD PTR [eax+0x769a1640]
  40371b:	lahf   
  40371c:	jle    0x4036e0
  40371e:	mov    ecx,eax
  403720:	xchg   ebx,eax
  403721:	stc    
  403722:	jle    0x403724
  403724:	dec    edx
  403725:	sti    
  403726:	and    esi,DWORD PTR [esp+ebp*4]
  403729:	icebp  
  40372a:	retf   0x6ab8
  40372d:	sbb    DWORD PTR [ecx-0x72],esp
  403730:	aad    0x1c
  403732:	mov    BYTE PTR [ecx-0x67],bh
  403735:	jmp    0xd33b0508
  40373a:	in     eax,dx
  40373b:	xor    eax,0x3ba282a0
  403740:	int3   
  403741:	out    0xb2,eax
  403743:	push   edi
  403744:	xchg   DWORD PTR [ebx+0x4f],esi
  403747:	sbb    bl,BYTE PTR [ebx]
  403749:	or     BYTE PTR [ebx-0x79],dh
  40374c:	and    dh,BYTE PTR [ebx]
  40374e:	cli    
  40374f:	test   ah,ch
  403751:	or     dl,dh
  403753:	pop    es
  403754:	xchg   ebx,eax
  403755:	push   ebp
  403756:	sahf   
  403757:	pop    ebx
  403758:	not    DWORD PTR [esi+0x18dde752]
  40375e:	xchg   al,bl
  403760:	fcomp  DWORD PTR [ebp+0x56]
  403763:	js     0x403789
  403765:	out    dx,al
  403766:	and    DWORD PTR [esi+0x7636d3f7],eax
  40376c:	xchg   ecx,eax
  40376d:	fcomp  DWORD PTR [esi+0x6123cdb8]
  403773:	xchg   edx,eax
  403774:	mov    ecx,0x45c9e17b
  403779:	push   cs
  40377a:	adc    edi,DWORD PTR [esi-0x1c87e3a6]
  403780:	pop    ebp
  403781:	mov    WORD PTR [esi+0x4a28dc54],gs
  403787:	std    
  403788:	(bad)  
  403789:	xchg   esp,eax
  40378a:	ja     0x40373f
  40378c:	addr16 add eax,0x64bde1e8
  403792:	xchg   ebx,eax
  403793:	in     eax,dx
  403794:	sti    
  403795:	fdiv   QWORD PTR [eax-0x68d35c4a]
  40379b:	(bad)  
  40379c:	out    dx,al
  40379d:	in     al,0x37
  40379f:	icebp  
  4037a0:	stos   DWORD PTR es:[edi],eax
  4037a1:	lods   eax,DWORD PTR ds:[esi]
  4037a2:	jne    0x40374b
  4037a4:	neg    esp
  4037a6:	jle    0x4037d2
  4037a8:	xor    al,0x84
  4037aa:	bound  ebp,QWORD PTR [edx-0x6c]
  4037ad:	fstp   QWORD PTR [esi]
  4037af:	test   edx,eax
  4037b1:	int3   
  4037b2:	mov    BYTE PTR cs:[edx-0x7a3f5c2d],al
  4037b9:	aam    0xab
  4037bb:	daa    
  4037bc:	nop
  4037bd:	enter  0x2456,0xe2
  4037c1:	add    cl,cl
  4037c3:	xchg   ecx,eax
  4037c4:	or     eax,0x61a5d1f8
  4037c9:	scas   al,BYTE PTR es:[edi]
  4037ca:	ins    BYTE PTR es:[edi],dx
  4037cb:	mov    eax,0xe4a83252
  4037d0:	jbe    0x4037eb
  4037d2:	in     eax,0x67
  4037d4:	dec    esi
  4037d5:	sbb    bh,ch
  4037d7:	and    DWORD PTR [eax-0x5d1e5f79],ebx
  4037dd:	(bad)
  4037e1:	pop    es
  4037e2:	aad    0x31
  4037e4:	pop    ecx
  4037e5:	leave  
  4037e6:	inc    ebp
  4037e7:	int3   
  4037e8:	pop    ebp
  4037e9:	pop    ecx
  4037ea:	or     eax,esi
  4037ec:	add    DWORD PTR [ecx-0x251adea],0x36
  4037f3:	cdq    
  4037f4:	fadd   QWORD PTR gs:[edx-0x63]
  4037f8:	in     al,0x3e
  4037fa:	push   ss
  4037fb:	cwde   
  4037fc:	sbb    eax,0xd152dec8
  403801:	popf   
  403802:	push   ecx
  403803:	mov    eax,ds:0x87bd8dbd
  403808:	mov    ds:0x1673f5f5,eax
  40380d:	stc    
  40380e:	dec    eax
  40380f:	add    ebp,DWORD PTR ds:0x449ddd7a
  403815:	es pop esi
  403817:	adc    al,BYTE PTR [edi]
  403819:	xchg   ecx,eax
  40381a:	shl    DWORD PTR [edi],1
  40381c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40381d:	fsubr  st,st(6)
  40381f:	push   esp
  403820:	mov    BYTE PTR [ebx*8-0x36e23b15],cl
  403827:	xor    esp,DWORD PTR [eax]
  403829:	faddp  st(1),st
  40382b:	add    dl,bl
  40382d:	and    cl,BYTE PTR gs:[edx-0x48]
  403831:	lds    eax,FWORD PTR [ebx+edx*8]
  403834:	inc    esi
  403835:	xchg   edx,eax
  403836:	push   cs
  403837:	retf   0xdce5
  40383a:	int3   
  40383b:	arpl   sp,dx
  40383d:	push   ebx
  40383e:	sbb    bl,BYTE PTR [eax-0x713e4af6]
  403844:	test   al,0xdc
  403846:	adc    ecx,DWORD PTR [edx-0x3f052032]
  40384c:	xchg   ebx,eax
  40384d:	les    edi,FWORD PTR [edi-0x3cb3bf1b]
  403853:	les    esi,FWORD PTR [esi]
  403855:	gs sub al,dh
  403858:	cmp    edx,DWORD PTR [ebp+0x5b]
  40385b:	push   0x498d66c2
  403860:	lock stc 
  403862:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403864:	pop    es
  403865:	fidivr DWORD PTR [esi-0x71]
  403868:	adc    eax,0x844eba97
  40386d:	cli    
  40386e:	sbb    ebp,DWORD PTR [edi+0x3758c9a2]
  403874:	repnz in al,dx
  403876:	jnp    0x4038da
  403878:	leave  
  403879:	push   ds
  40387a:	xor    esi,edi
  40387c:	in     eax,0xc6
  40387e:	jb     0x40387d
  403880:	idiv   BYTE PTR [ecx-0x65]
  403883:	jmp    0x40386b
  403885:	imul   ecx,ecx,0x60
  403888:	mov    esp,DWORD PTR [esi-0x64]
  40388b:	push   esi
  40388c:	fdivr  st(1),st
  40388e:	xlat   BYTE PTR ds:[ebx]
  40388f:	jbe    0x4038a2
  403891:	ins    BYTE PTR es:[edi],dx
  403892:	imul   ebp,DWORD PTR ds:0x7fb46654,0x4
  403899:	ja     0x40390a
  40389b:	xchg   ebp,edx
  40389d:	push   0xfffffffa
  40389f:	push   esi
  4038a0:	fnsave [ecx]
  4038a2:	ficom  WORD PTR [edi]
  4038a4:	push   esi
  4038a5:	pushf  
  4038a6:	pop    ss
  4038a7:	iret   
  4038a8:	and    BYTE PTR [ebp+0x53],bl
  4038ab:	fsub   DWORD PTR [eax]
  4038ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038ae:	or     ebx,esp
  4038b0:	or     ecx,DWORD PTR [eax-0x37cd8afc]
  4038b6:	push   ecx
  4038b7:	sets   BYTE PTR [edx+0x788cf7ea]
  4038be:	mov    dl,0xf0
  4038c0:	popw   ss
  4038c2:	fdivr  st,st(0)
  4038c4:	aam    0xe3
  4038c6:	push   eax
  4038c7:	pop    edi
  4038c8:	adc    eax,0x60ae56e0
  4038cd:	mov    dl,0xc2
  4038cf:	shl    BYTE PTR ds:0x546d3309,1
  4038d5:	shr    DWORD PTR [ecx+0x23383a03],0xa1
  4038dc:	stos   BYTE PTR es:[edi],al
  4038dd:	outs   dx,DWORD PTR ds:[esi]
  4038de:	in     eax,dx
  4038df:	and    eax,0xd06b10f
  4038e4:	fwait
  4038e5:	inc    esp
  4038e6:	cmc    
  4038e7:	outs   dx,DWORD PTR ds:[esi]
  4038e8:	(bad)  
  4038e9:	shr    BYTE PTR [edi+0x11],cl
  4038ec:	mov    dl,0x48
  4038ee:	xlat   BYTE PTR ds:[ebx]
  4038ef:	sbb    al,0xfe
  4038f1:	dec    edi
  4038f2:	mov    fs,WORD PTR [eax+0x32]
  4038f5:	adc    al,0x8e
  4038f7:	xchg   esi,eax
  4038f8:	jns    0x40391f
  4038fa:	jno    0x403959
  4038fc:	test   eax,0x6f7520b
  403901:	push   ax
  403903:	fldln2 
  403905:	jmp    0x6b72:0x75639ec0
  40390c:	fsub   DWORD PTR [edx+0x7414b403]
  403912:	retf   0x29b0
  403915:	nop
  403916:	push   edi
  403917:	out    dx,al
  403918:	jns    0x4038ea
  40391a:	mov    eax,0x9efe93d6
  40391f:	cmp    eax,0xc44c429
  403924:	scas   eax,DWORD PTR es:[edi]
  403925:	(bad)  
  403926:	fsub   DWORD PTR ds:0xc39636f1
  40392c:	push   esp
  40392d:	arpl   WORD PTR [edi],dx
  40392f:	fbstp  TBYTE PTR [eax+0x7834069a]
  403935:	js     0x4039a5
  403937:	fmul   DWORD PTR [edi-0x4d]
  40393a:	mov    dh,dh
  40393c:	fsub   DWORD PTR [ebx]
  40393e:	repz in eax,dx
  403940:	xor    BYTE PTR [edi],dh
  403942:	adc    ch,BYTE PTR [esi+0x41]
  403945:	xor    al,BYTE PTR ds:0x858d30ee
  40394b:	adc    bl,BYTE PTR ds:0x106513ea
  403951:	dec    ebx
  403952:	shl    BYTE PTR [edi+ecx*1+0x39ee2c28],1
  403959:	aaa    
  40395a:	std    
  40395b:	lea    eax,ds:0x7bd31c96
  403961:	and    ebx,esp
  403963:	mov    cl,0xb1
  403965:	imul   ecx,DWORD PTR [ecx+0x325b90bc],0xffffffd1
  40396c:	jo     0x403997
  40396e:	shl    DWORD PTR [edi-0x1],cl
  403971:	ret    
  403972:	outs   dx,BYTE PTR ss:[esi]
  403974:	aad    0xff
  403976:	ins    BYTE PTR es:[edi],dx
  403977:	shl    BYTE PTR [ebx-0x7f],cl
  40397a:	cmp    eax,0xcbf90064
  40397f:	inc    edx
  403980:	scas   al,BYTE PTR es:[edi]
  403981:	pop    esp
  403982:	cmp    eax,0x41a49feb
  403987:	aad    0xd3
  403989:	lahf   
  40398a:	xchg   edi,eax
  40398b:	scas   al,BYTE PTR es:[edi]
  40398c:	sub    BYTE PTR [ecx+0x4c],bh
  40398f:	push   cs
  403990:	iret   
  403991:	jno    0x4039d9
  403993:	jnp    0x4039ed
  403995:	push   edx
  403996:	stos   DWORD PTR es:[edi],eax
  403997:	fs cdq 
  403999:	jmp    0xa3ee:0x11028edd
  4039a0:	push   0x6f
  4039a2:	xor    DWORD PTR [ebp+0x52],0x51
  4039a6:	jae    0x40393c
  4039a8:	out    dx,al
  4039a9:	call   0xfe7d:0x43a9fbc0
  4039b0:	jmp    0x4039ac
  4039b2:	jno    0x40395a
  4039b4:	or     DWORD PTR [esi-0x1b],edx
  4039b7:	inc    esp
  4039b8:	cli    
  4039b9:	cwde   
  4039ba:	xor    dl,ch
  4039bc:	cld    
  4039bd:	cs or  eax,0xed1afc53
  4039c3:	cmp    bh,BYTE PTR [edx+edx*2]
  4039c6:	add    al,0x7e
  4039c8:	inc    ebp
  4039c9:	dec    esi
  4039ca:	pop    edx
  4039cb:	test   al,0x79
  4039cd:	popa   
  4039ce:	(bad)  
  4039cf:	stos   DWORD PTR es:[edi],eax
  4039d0:	ds dec edi
  4039d2:	fsub   DWORD PTR [ebx-0x53]
  4039d5:	inc    ecx
  4039d6:	pusha  
  4039d7:	mov    ah,0xc5
  4039d9:	or     al,0xe5
  4039db:	shl    DWORD PTR [eax-0xd],0x64
  4039df:	es daa 
  4039e1:	frstor [edi+0x7d]
  4039e4:	push   ebx
  4039e5:	stos   DWORD PTR es:[edi],eax
  4039e6:	mov    cl,0x50
  4039e8:	leave  
  4039e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039ea:	sub    bl,ch
  4039ec:	out    0x8a,eax
  4039ee:	push   ds
  4039ef:	pushf  
  4039f0:	out    0x13,al
  4039f2:	(bad)  
  4039f4:	out    dx,al
  4039f5:	add    al,ch
  4039f7:	add    ebp,esp
  4039f9:	cmp    DWORD PTR es:[esi],edi
  4039fc:	not    DWORD PTR [ebx+0x9]
  4039ff:	(bad)  
  403a00:	pop    es
  403a01:	les    eax,FWORD PTR [esi-0x180be3cc]
  403a07:	test   al,0xa1
  403a09:	push   cs
  403a0a:	dec    ebx
  403a0b:	lea    eax,[edi+edx*4-0x30ac8bf2]
  403a12:	mov    al,0xaf
  403a14:	pop    ss
  403a15:	je     0x4039ab
  403a17:	cdq    
  403a18:	push   esp
  403a19:	inc    edi
  403a1a:	push   esi
  403a1b:	mov    dl,0x36
  403a1d:	dec    esi
  403a1e:	and    edi,DWORD PTR [esp+esi*2]
  403a21:	out    dx,al
  403a22:	js     0x403a91
  403a24:	loope  0x403a0b
  403a26:	push   edx
  403a27:	out    dx,al
  403a28:	test   DWORD PTR [eax],ebp
  403a2a:	xchg   DWORD PTR [edx+0x1],ebx
  403a2d:	and    DWORD PTR [edi],esi
  403a2f:	mov    edx,DWORD PTR [eax]
  403a31:	cli    
  403a32:	(bad)  [ebp+0x1f8e8923]
  403a38:	rcl    BYTE PTR [ebx+0x9a34cf9],cl
  403a3e:	mov    edi,0x1b0a5a9d
  403a43:	(bad)  [edx-0x5f]
  403a46:	inc    esp
  403a47:	inc    eax
  403a48:	push   ebx
  403a49:	jno    0x4039d2
  403a4b:	daa    
  403a4c:	xchg   edi,eax
  403a4d:	stos   DWORD PTR es:[edi],eax
  403a4e:	fisub  DWORD PTR [ecx+0x29e255d0]
  403a54:	es mov al,cl
  403a57:	and    ch,BYTE PTR [ecx]
  403a59:	push   ebx
  403a5a:	into   
  403a5b:	out    dx,eax
  403a5c:	adc    DWORD PTR [ebp+0x718190e6],edx
  403a62:	(bad)  
  403a63:	push   0x1de9172f
  403a68:	std    
  403a69:	lock dec ebx
  403a6b:	jno    0x403a55
  403a6d:	jne    0x403a04
  403a6f:	(bad)  
  403a70:	lea    edi,[esi]
  403a72:	fwait
  403a73:	scas   al,BYTE PTR es:[edi]
  403a74:	mov    fs,edi
  403a76:	add    eax,0x3b2596d6
  403a7b:	push   esi
  403a7c:	mov    eax,ds:0x1aed58a3
  403a81:	shl    bh,0xa0
  403a84:	sahf   
  403a85:	enter  0x92f4,0x56
  403a89:	out    dx,eax
  403a8a:	scas   al,BYTE PTR es:[edi]
  403a8b:	pop    eax
  403a8c:	add    DWORD PTR [edx+0x128eadfa],edi
  403a92:	test   eax,0x304245e7
  403a97:	pop    esi
  403a98:	and    al,0x89
  403a9a:	les    edx,FWORD PTR [edi+0x0]
  403a9d:	fsub   DWORD PTR [edi-0x66]
  403aa0:	shr    edx,cl
  403aa2:	bound  edi,QWORD PTR [eax-0x3f2f10fb]
  403aa8:	fild   QWORD PTR [eax+0x312caaec]
  403aae:	arpl   bx,bx
  403ab0:	je     0x403b03
  403ab2:	and    eax,edi
  403ab4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ab5:	retf   0x8830
  403ab8:	(bad)  
  403ab9:	lds    edx,FWORD PTR [esi*2+0x5c4923a2]
  403ac0:	test   eax,0xebc07ea7
  403ac5:	sbb    al,0x6a
  403ac7:	icebp  
  403ac8:	fidiv  WORD PTR [ecx+0x6f56f4d9]
  403ace:	dec    esi
  403acf:	jge    0x403ada
  403ad1:	or     al,0x58
  403ad3:	mov    bh,0x48
  403ad5:	xor    DWORD PTR [ecx-0x633661aa],edi
  403adb:	sahf   
  403adc:	jl     0x403b31
  403ade:	mov    ebx,0x57d258bd
  403ae3:	push   edi
  403ae4:	and    cl,BYTE PTR [edx+eax*1]
  403ae7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ae8:	mov    ecx,0x749ecc7e
  403aed:	dec    ebx
  403aee:	fstp   st(5)
  403af0:	xor    al,0xe1
  403af2:	pusha  
  403af3:	and    DWORD PTR [ebx+0x6a],edx
  403af6:	pop    esi
  403af7:	adc    eax,0xd6a32f13
  403afc:	lods   al,BYTE PTR ds:[esi]
  403afd:	rcr    BYTE PTR [esi+edx*1],1
  403b00:	push   esi
  403b01:	pop    ebp
  403b02:	into   
  403b03:	dec    esp
  403b04:	rol    DWORD PTR [edx-0x7588d421],0xb6
  403b0b:	mov    al,0x63
  403b0d:	mov    ds:0xb0cca8e0,eax
  403b12:	cmp    al,0xe9
  403b14:	pusha  
  403b15:	pusha  
  403b16:	gs jnp 0x403ac6
  403b19:	mov    esp,0x89135a84
  403b1e:	shl    DWORD PTR [esi],1
  403b20:	in     al,dx
  403b21:	mov    edx,0xb316d7d
  403b26:	dec    ebx
  403b27:	lea    eax,[esi]
  403b29:	xor    BYTE PTR [ebx+esi*2+0x64b8485e],cl
  403b30:	(bad)  
  403b31:	sub    al,0xcb
  403b33:	in     eax,dx
  403b34:	xor    eax,0x3b858fa8
  403b39:	jecxz  0x403b90
  403b3b:	scas   eax,DWORD PTR es:[edi]
  403b3c:	outs   dx,DWORD PTR ds:[esi]
  403b3d:	(bad)  
  403b3e:	shl    BYTE PTR [esi-0x22],0x2e
  403b42:	ss pop esp
  403b44:	std    
  403b45:	jp     0x403bb1
  403b47:	pop    esi
  403b48:	sub    DWORD PTR [ebx],ecx
  403b4a:	push   es
  403b4b:	dec    ecx
  403b4c:	mov    DWORD PTR [edx],esi
  403b4e:	xchg   edx,eax
  403b4f:	push   ss
  403b50:	ret    
  403b51:	scas   al,BYTE PTR es:[edi]
  403b52:	inc    ebx
  403b53:	and    DWORD PTR [ebx],0x7c
  403b56:	sbb    eax,0x6ba976fd
  403b5b:	ror    esp,0xcf
  403b5e:	cmp    eax,0xff292bf4
  403b63:	loop   0x403b94
  403b65:	pop    edx
  403b66:	repz test eax,0x211c6f61
  403b6c:	jmp    0xef3d8b88
  403b71:	cld    
  403b72:	es push es
  403b74:	(bad)  
  403b75:	dec    esp
  403b76:	and    BYTE PTR [esi],bl
  403b78:	aaa    
  403b79:	xchg   esi,eax
  403b7a:	(bad)  
  403b7b:	dec    esp
  403b7c:	mov    ecx,0xc95b840e
  403b81:	mov    bl,0x8a
  403b83:	xor    DWORD PTR [edx+0x0],ebx
  403b86:	shl    edx,cl
  403b88:	popf   
  403b89:	es js  0x403b38
  403b8c:	pushf  
  403b8d:	icebp  
  403b8e:	mov    esp,0xccc2a6f6
  403b93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b94:	sbb    al,BYTE PTR ds:0xf97fc16b
  403b9a:	retf   0x71e
  403b9d:	xor    eax,0xe9ccdf12
  403ba2:	daa    
  403ba3:	in     al,dx
  403ba4:	push   esi
  403ba5:	mov    ds:0xd246f884,al
  403baa:	retf   
  403bab:	adc    ch,bh
  403bad:	xchg   ecx,eax
  403bae:	lods   eax,DWORD PTR ds:[esi]
  403baf:	hlt    
  403bb0:	cmp    ch,0x1e
  403bb3:	add    bl,BYTE PTR [ecx]
  403bb5:	fst    DWORD PTR [ebp+0x63]
  403bb8:	pop    ds
  403bb9:	xor    al,0xd2
  403bbb:	jecxz  0x403b5d
  403bbd:	out    0xee,eax
  403bbf:	cmp    BYTE PTR [ecx+0x1d0ec710],bh
  403bc5:	xchg   ebx,eax
  403bc6:	mov    ebx,DWORD PTR [esp+edi*8-0x3b]
  403bca:	sub    ebx,DWORD PTR [edx+0x502ec8c5]
  403bd0:	push   ds
  403bd1:	stc    
  403bd2:	add    BYTE PTR [esi],ah
  403bd4:	jmp    0x403b9d
  403bd6:	arpl   WORD PTR [edi-0x390ce62a],bx
  403bdc:	jne    0x403c4a
  403bde:	xchg   dh,cl
  403be0:	and    eax,0xfb24cd8c
  403be5:	pusha  
  403be6:	sub    BYTE PTR [ebx-0x6e],bl
  403be9:	shl    DWORD PTR [ebp-0x3e],0x59
  403bed:	call   0xf5ce:0xaa66571d
  403bf4:	jae    0x403ba1
  403bf6:	add    BYTE PTR [ebp-0xb7bbd5f],0x90
  403bfd:	aaa    
  403bfe:	adc    eax,0x79a4c182
  403c03:	popf   
  403c04:	aad    0x85
  403c06:	cmp    eax,esi
  403c08:	mov    ecx,0xffe784ec
  403c0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c0e:	add    BYTE PTR [edi],bh
  403c10:	mov    ah,0x55
  403c12:	sbb    ecx,DWORD PTR [edx]
  403c14:	adc    si,WORD PTR [eax+0x6c]
  403c18:	dec    edx
  403c19:	adc    eax,0xc4752ad4
  403c1e:	ins    DWORD PTR es:[edi],dx
  403c1f:	jg     0x403c31
  403c21:	mov    ebx,0xb389b6d6
  403c26:	jns    0x403c66
  403c28:	std    
  403c29:	pop    edx
  403c2a:	jmp    0x403c2b
  403c2c:	(bad)  
  403c2d:	mov    dl,0x8e
  403c2f:	retf   0xcbea
  403c32:	hlt    
  403c33:	in     al,0xdb
  403c35:	add    esp,ecx
  403c37:	inc    ebp
  403c38:	mov    dh,0xd6
  403c3a:	mov    esp,0x77e60593
  403c3f:	dec    eax
  403c40:	push   cs
  403c41:	test   eax,0xe6e880f4
  403c46:	sbb    ebx,DWORD PTR [ebp-0x384fbd0d]
  403c4c:	push   0xffffff91
  403c4e:	pusha  
  403c4f:	push   ebx
  403c50:	je     0x403c0e
  403c52:	adc    DWORD PTR [edx],ecx
  403c54:	repz or eax,0xe0179aaf
  403c5a:	scas   al,BYTE PTR es:[edi]
  403c5b:	mov    ds:0x2f3a2c0a,eax
  403c60:	test   eax,0x50630d2e
  403c65:	sbb    BYTE PTR [edi+ebx*4-0x4bb0b0be],bh
  403c6c:	aaa    
  403c6d:	and    cl,dl
  403c6f:	push   0x58
  403c71:	push   esp
  403c72:	sbb    al,0x46
  403c74:	xor    BYTE PTR [edi],al
  403c76:	sbb    BYTE PTR ds:[ebp+0x5b],ch
  403c7a:	ja     0x403c59
  403c7c:	enter  0x94a6,0x3b
  403c80:	fstp   TBYTE PTR [ecx+0x6c]
  403c83:	daa    
  403c84:	jmp    0x93e1:0x2cda642b
  403c8b:	cmc    
  403c8c:	ja     0x403c7a
  403c8e:	stc    
  403c8f:	pop    esp
  403c90:	stos   DWORD PTR es:[edi],eax
  403c91:	in     eax,0x2a
  403c93:	fiadd  WORD PTR [ebp+ecx*8-0x73]
  403c97:	(bad)  
  403c98:	pop    ds
  403c99:	xor    al,0xb9
  403c9b:	push   ebx
  403c9c:	cmp    dl,0x3e
  403c9f:	mov    ebp,DWORD PTR [edi+0x3863609e]
  403ca5:	adc    ecx,ebp
  403ca7:	ret    
  403ca8:	mov    dl,0x47
  403caa:	aas    
  403cab:	and    esp,0x7c
  403cae:	jno    0x403cff
  403cb0:	pusha  
  403cb1:	push   esp
  403cb2:	xor    DWORD PTR [edx-0x5cda964e],esp
  403cb8:	xor    eax,0x3b051bf3
  403cbd:	out    0xf,al
  403cbf:	les    edx,FWORD PTR [ebx+0x1fb8293e]
  403cc5:	inc    esi
  403cc6:	pop    ss
  403cc7:	push   edx
  403cc8:	dec    edi
  403cc9:	(bad)  
  403cca:	push   ss
  403ccb:	inc    eax
  403ccc:	xchg   ecx,eax
  403ccd:	retf   
  403cce:	sti    
  403ccf:	lods   al,BYTE PTR ds:[esi]
  403cd0:	fist   WORD PTR ds:0x64f795be
  403cd6:	sub    dl,BYTE PTR [ecx+ecx*8-0x13]
  403cda:	repz inc edx
  403cdc:	and    al,0x6e
  403cde:	sbb    edx,ecx
  403ce0:	test   BYTE PTR [edx-0x53],al
  403ce3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ce4:	add    dl,BYTE PTR [edi+0x3296fb96]
  403cea:	adc    eax,0xd18b0dc1
  403cef:	bnd js 0x403cfb
  403cf2:	ficom  WORD PTR [eax]
  403cf4:	push   ebp
  403cf5:	add    eax,0x587736ca
  403cfa:	dec    ecx
  403cfb:	sbb    edx,DWORD PTR [ebx-0x619fbbe4]
  403d01:	push   cs
  403d02:	bound  ebp,QWORD PTR [eax]
  403d04:	sbb    al,0x58
  403d06:	mov    bl,0x83
  403d08:	in     eax,0xc9
  403d0a:	and    DWORD PTR ss:[esi-0x6ef79d5c],0xae36967a
  403d15:	fsubr  st(7),st
  403d17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d18:	ss loop 0x403cba
  403d1b:	stos   BYTE PTR es:[edi],al
  403d1c:	mov    ecx,?
  403d1e:	pushf  
  403d1f:	(bad)  
  403d20:	scas   eax,DWORD PTR es:[edi]
  403d21:	je     0x403cf4
  403d23:	add    ecx,edi
  403d25:	loopne 0x403ce4
  403d27:	nop
  403d28:	xchg   ecx,eax
  403d29:	pop    ds
  403d2a:	outs   dx,DWORD PTR ds:[esi]
  403d2b:	jae    0x403d72
  403d2d:	(bad)
  403d30:	cs xor eax,0x8f7e6f5f
  403d36:	js     0x403da1
  403d38:	rdtsc  
  403d3a:	adc    dh,BYTE PTR [edx-0x173f15c4]
  403d40:	xor    eax,0xcf082003
  403d45:	jmp    0x97b59e5
  403d4a:	mov    bh,0xb5
  403d4c:	test   eax,0x6f879fc0
  403d51:	inc    esp
  403d52:	adc    ecx,DWORD PTR [esi]
  403d54:	test   DWORD PTR [edi-0x2b8128f0],esi
  403d5a:	mov    edx,gs
  403d5c:	dec    al
  403d5e:	pop    es
  403d5f:	mov    bl,0x80
  403d61:	or     ah,BYTE PTR fs:[esi-0x80]
  403d65:	xor    eax,0x2f0b4f41
  403d6a:	dec    eax
  403d6b:	(bad)  
  403d6c:	lock cs jmp 0x24b7e13
  403d73:	sti    
  403d74:	inc    edx
  403d75:	jb     0x403d54
  403d77:	mov    WORD PTR [ecx],ds
  403d79:	inc    DWORD PTR [eax-0x39]
  403d7c:	adc    al,0x9f
  403d7e:	in     eax,0xb8
  403d80:	push   ds
  403d81:	mov    al,ds:0x397e554c
  403d86:	jg     0x403d5b
  403d88:	push   ebx
  403d89:	ss push edx
  403d8b:	inc    ebx
  403d8c:	mov    dl,0x75
  403d8e:	shl    DWORD PTR [ebp-0x36],1
  403d91:	repz int3 
  403d93:	cmp    DWORD PTR [esi+edx*1+0x75],esp
  403d97:	ins    BYTE PTR es:[edi],dx
  403d98:	sbb    al,0x34
  403d9a:	aaa    
  403d9b:	or     ebp,DWORD PTR [edx+ebp*1+0x585d0762]
  403da2:	push   ds
  403da3:	jge    0x403dc1
  403da5:	sbb    BYTE PTR [esi],0xc1
  403da8:	adc    eax,0xf6b80d0
  403dad:	es cmc 
  403daf:	adc    ecx,DWORD PTR [ecx+esi*1+0x20]
  403db3:	out    0xec,eax
  403db5:	int    0x27
  403db7:	hlt    
  403db8:	inc    eax
  403db9:	or     BYTE PTR [eax+0x74],cl
  403dbc:	xor    ebx,eax
  403dbe:	add    DWORD PTR [eax+0x185d626c],esi
  403dc4:	imul   ebp,esi,0x6df87196
  403dca:	mov    ds:0x5f5438e6,al
  403dcf:	(bad)  
  403dd0:	adc    dh,dh
  403dd2:	div    BYTE PTR [eax-0x47]
  403dd5:	cmp    eax,0x173d030d
  403dda:	fwait
  403ddb:	retf   0xdf2d
  403dde:	fisub  WORD PTR [esi+0x8942e22]
  403de4:	in     al,dx
  403de5:	aad    0xb9
  403de7:	mov    dl,0x3f
  403de9:	das    
  403dea:	jge    0x403d85
  403dec:	add    ecx,DWORD PTR [ebx]
  403dee:	(bad)  
  403def:	out    0xd2,al
  403df1:	popa   
  403df2:	add    ah,BYTE PTR [eax-0x59]
  403df5:	cld    
  403df6:	retf   0xcbf6
  403df9:	push   ebp
  403dfa:	cmp    al,0x91
  403dfc:	data16 jnp 0x403e38
  403dff:	jge    0x403e27
  403e01:	dec    edi
  403e02:	cmp    al,0x8c
  403e04:	jb     0x403db5
  403e06:	mov    edx,0x4241aef3
  403e0b:	shr    BYTE PTR [ebx-0x71de926],cl
  403e11:	stos   DWORD PTR es:[edi],eax
  403e12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e13:	das    
  403e14:	inc    edi
  403e15:	sti    
  403e16:	cld    
  403e17:	jl     0x403e6a
  403e19:	mov    esi,0xe7e69cee
  403e1e:	pop    edx
  403e1f:	js     0x403e44
  403e21:	jge    0x403e5e
  403e23:	adc    dl,BYTE PTR [eax]
  403e25:	sub    BYTE PTR [edx-0x75],bh
  403e28:	push   edx
  403e29:	mov    ds:0xb51deb04,al
  403e2e:	adc    BYTE PTR [edi],bl
  403e30:	xor    BYTE PTR ds:0xf0e08a27,bl
  403e36:	(bad)  
  403e37:	cmp    eax,0xecb67296
  403e3c:	xabort 0xa3
  403e3f:	(bad)  
  403e40:	xor    al,0x4c
  403e42:	inc    edx
  403e43:	scas   eax,DWORD PTR es:[edi]
  403e44:	lods   eax,DWORD PTR ds:[esi]
  403e45:	xchg   ebp,eax
  403e46:	add    ecx,ecx
  403e48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e49:	adc    eax,0xd0d904cd
  403e4e:	out    0xfc,al
  403e50:	cs push es
  403e52:	scas   al,BYTE PTR es:[edi]
  403e53:	sub    esi,DWORD PTR [esi]
  403e55:	sbb    eax,0x21543c87
  403e5a:	mov    WORD PTR [edi],cs
  403e5c:	fs jl  0x403dec
  403e5f:	push   0xffffff98
  403e61:	jl     0x403dfa
  403e63:	inc    ecx
  403e64:	push   es
  403e65:	stos   DWORD PTR es:[edi],eax
  403e66:	out    dx,al
  403e67:	aas    
  403e68:	xor    DWORD PTR [ebp-0x6f],ecx
  403e6b:	or     BYTE PTR [esi],ch
  403e6d:	jns    0x403e85
  403e6f:	sbb    BYTE PTR [eax+ebx*4],ah
  403e72:	retf   0xaaf6
  403e75:	repz dec esp
  403e77:	je     0x403e43
  403e79:	(bad)  
  403e7a:	xor    ebx,DWORD PTR [edx+0x6d7841]
  403e80:	sbb    eax,0xb6be1446
  403e85:	inc    ebx
  403e86:	call   0x6ccb:0xb8545f68
  403e8d:	jmp    0xc6c6:0x362837af
  403e94:	ss inc edi
  403e96:	icebp  
  403e97:	xchg   ebx,eax
  403e98:	push   esp
  403e99:	mov    DWORD PTR [ebx],esi
  403e9b:	ss icebp 
  403e9d:	jecxz  0x403e21
  403e9f:	outs   dx,DWORD PTR ds:[esi]
  403ea0:	test   DWORD PTR [esi],esp
  403ea2:	rcl    BYTE PTR [ebx+0x1439e5cf],cl
  403ea8:	xor    al,bh
  403eaa:	in     eax,dx
  403eab:	mov    bh,0x33
  403ead:	int3   
  403eae:	push   ebp
  403eaf:	fidivr DWORD PTR [ebp-0x206135c0]
  403eb5:	or     esp,eax
  403eb7:	adc    DWORD PTR [edx+ebp*2],ebx
  403eba:	outs   dx,DWORD PTR ds:[esi]
  403ebb:	data16 jg 0x403e70
  403ebe:	push   edi
  403ebf:	fild   DWORD PTR [eax+0x45]
  403ec2:	add    BYTE PTR [edi-0x3ada4dec],0x9e
  403ec9:	pop    eax
  403eca:	idiv   DWORD PTR [edi+0x4e876c76]
  403ed0:	arpl   WORD PTR [ebp-0x8],bp
  403ed3:	popa   
  403ed4:	xor    ebx,esp
  403ed6:	xor    eax,0x34e94ff0
  403edb:	js     0x403eb6
  403edd:	push   edx
  403ede:	shr    DWORD PTR fs:[si+0x2a],1
  403ee3:	pop    ebx
  403ee4:	(bad)  
  403ee5:	sbb    ah,dl
  403ee7:	mov    dh,0xf3
  403ee9:	fisubr WORD PTR [edi]
  403eeb:	out    0xfd,eax
  403eed:	loopne 0x403e81
  403eef:	xor    eax,0xaa51d879
  403ef4:	inc    edx
  403ef5:	mov    dl,0x78
  403ef7:	gs gs pop es
  403efa:	pop    ecx
  403efb:	jl     0x403efb
  403efd:	out    0xb5,al
  403eff:	fstp   st(3)
  403f01:	xor    eax,0x88522129
  403f06:	cmp    bh,0xba
  403f09:	jno    0x403f44
  403f0b:	push   esp
  403f0c:	xlat   BYTE PTR ds:[ebx]
  403f0d:	fisub  WORD PTR [eax]
  403f0f:	fs retf 
  403f11:	mov    al,ds:0xfcae972
  403f16:	repz pop es
  403f18:	ret    0x285c
  403f1b:	mov    al,0x8a
  403f1d:	ror    DWORD PTR [esi],1
  403f1f:	adc    eax,0xf34d5834
  403f24:	dec    edi
  403f25:	neg    BYTE PTR [eax+0x7c625f60]
  403f2b:	lock ss pop eax
  403f2e:	jmp    0x5373:0x6cd94ed9
  403f35:	(bad)  
  403f36:	adc    DWORD PTR [edi-0x28],ebx
  403f39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f3a:	fmul   DWORD PTR [esi+0x3fd9ff05]
  403f40:	out    dx,al
  403f41:	in     al,0x1c
  403f43:	adc    eax,0x9aa8b181
  403f48:	in     al,0xe
  403f4a:	pop    es
  403f4b:	mov    esi,ebp
  403f4d:	or     cl,BYTE PTR [ecx-0x53]
  403f50:	mov    bl,0xf6
  403f52:	or     esp,ebp
  403f54:	dec    esp
  403f55:	mov    ebx,0xb4972ca6
  403f5a:	mov    ecx,0x7ad7e9e4
  403f5f:	shr    BYTE PTR [ebx+ecx*4-0x41d89c88],cl
  403f66:	ror    BYTE PTR [ecx+0x4fa4cb91],1
  403f6c:	icebp  
  403f6d:	push   cs
  403f6e:	rcl    BYTE PTR [eax-0x10c52589],0xcf
  403f75:	adc    ecx,DWORD PTR [esi+0x171a5048]
  403f7b:	mov    WORD PTR [edx-0xbd60260],gs
  403f81:	and    ecx,DWORD PTR [esi]
  403f83:	mov    BYTE PTR [ebx],0x41
  403f86:	aaa    
  403f87:	fld    QWORD PTR [edi-0x2f1ad0df]
  403f8d:	adc    DWORD PTR [edx],edi
  403f8f:	add    esi,ebx
  403f91:	in     eax,0x7b
  403f93:	arpl   WORD PTR ds:0x9e3b73d0,di
  403f99:	lods   eax,DWORD PTR ds:[esi]
  403f9a:	sbb    bl,BYTE PTR ss:[edi]
  403f9d:	(bad)  [esi]
  403f9f:	test   al,0x32
  403fa1:	push   ebp
  403fa2:	cmp    DWORD PTR [edx],0xb0c82ca5
  403fa8:	dec    ch
  403faa:	(bad)  
  403fab:	mov    bh,0xd5
  403fad:	daa    
  403fae:	in     al,0x57
  403fb0:	scas   al,BYTE PTR es:[edi]
  403fb1:	cmp    al,0xea
  403fb3:	js     0x404026
  403fb5:	mov    al,ds:0x9341cd5b
  403fba:	test   eax,0xc7f80cf
  403fbf:	cld    
  403fc0:	push   ecx
  403fc1:	cmc    
  403fc2:	daa    
  403fc3:	and    eax,0x2b805f03
  403fc8:	cmp    ecx,eax
  403fca:	adc    DWORD PTR [edx-0x74],ecx
  403fcd:	add    BYTE PTR [edx+0x4a],bl
  403fd0:	inc    ecx
  403fd1:	sbb    esp,esp
  403fd3:	or     BYTE PTR [eax-0x117551ca],ch
  403fd9:	sti    
  403fda:	clc    
  403fdb:	jmp    0x403fc7
  403fdd:	push   esp
  403fde:	lds    edi,FWORD PTR [ebp+0x21]
  403fe1:	xchg   esp,eax
  403fe2:	hlt    
  403fe3:	cmp    dh,BYTE PTR [edi-0x596ededc]
  403fe9:	adc    DWORD PTR [ebp-0x26938c4d],edi
  403fef:	fs inc edi
  403ff1:	sub    DWORD PTR [edx+0x42],ebp
  403ff4:	bound  esp,QWORD PTR [eax]
  403ff6:	out    0x99,al
  403ff8:	lea    ebx,[esi+0x67f1e4ad]
  403ffe:	nop
  403fff:	int    0xfa
  404001:	clc    
  404002:	int3   
  404003:	inc    esi
  404004:	mov    dl,BYTE PTR [ebp+0x7599dd63]
  40400a:	pop    edi
  40400b:	mov    esp,0x25963938
  404010:	mov    ebx,0x9262e025
  404015:	mov    ecx,0x5adccdfe
  40401a:	ss pop ds
  40401c:	mov    edx,0xdb09e34e
  404021:	test   edi,edx
  404023:	dec    ecx
  404024:	aad    0x66
  404026:	cmp    BYTE PTR ds:0xc5feae59,al
  40402c:	sub    bh,ch
  40402e:	data16 rcl BYTE PTR [edx],1
  404031:	cmc    
  404032:	xchg   esp,eax
  404033:	dec    edi
  404034:	es jg  0x403ff7
  404037:	test   BYTE PTR ss:[eax-0x45d6b875],dh
  40403e:	loop   0x404025
  404040:	push   ebx
  404041:	out    0xc,eax
  404043:	mov    ds:0x837afec1,eax
  404048:	jne    0x40409b
  40404a:	vhsubpd xmm0,xmm2,xmm3
  40404e:	and    al,BYTE PTR [ecx]
  404050:	pop    ebx
  404051:	jnp    0x4040cc
  404053:	push   edx
  404054:	cs dec edi
  404056:	mov    ch,BYTE PTR [ecx-0x31]
  404059:	sahf   
  40405a:	jl     0x40408c
  40405c:	je     0x404014
  40405e:	leave  
  40405f:	add    eax,0x4819e9d8
  404064:	test   al,0xff
  404066:	stos   BYTE PTR es:[edi],al
  404067:	inc    ecx
  404068:	das    
  404069:	test   al,0x30
  40406b:	adc    BYTE PTR [ecx],bh
  40406d:	loop   0x40403e
  40406f:	addr16 jo 0x4040cc
  404072:	loope  0x4040d7
  404074:	rcl    DWORD PTR [bp+di-0x29],0xc9
  404079:	add    dh,BYTE PTR [ecx-0x7f]
  40407c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40407d:	int3   
  40407e:	ds mov ebp,0x6dfa63b3
  404084:	loop   0x404091
  404086:	mov    bl,0xc1
  404088:	mov    bl,0x2
  40408a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40408b:	lea    ebp,[ebx+0x6975ff68]
  404091:	mov    ss,WORD PTR [edx-0x78f9d14a]
  404097:	jecxz  0x4040b4
  404099:	xor    al,0xa5
  40409b:	and    eax,eax
  40409d:	test   eax,0xda9031c1
  4040a2:	(bad)  
  4040a3:	dec    ebp
  4040a4:	jae    0x40406a
  4040a6:	(bad)  
  4040a7:	test   DWORD PTR [edx],eax
  4040a9:	cmp    DWORD PTR [ecx+0x3e322f1a],ecx
  4040af:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4040b1:	xlat   BYTE PTR ds:[ebx]
  4040b2:	scas   eax,DWORD PTR es:[edi]
  4040b3:	imul   ebp,DWORD PTR [edi],0x8637d0fc
  4040b9:	ss push eax
  4040bb:	jne    0x40410d
  4040bd:	jecxz  0x4040c1
  4040bf:	jp     0x40412a
  4040c1:	mov    esi,0xd8da2f0b
  4040c6:	push   cs
  4040c7:	jbe    0x40411d
  4040c9:	or     ecx,ecx
  4040cb:	inc    esi
  4040cc:	inc    ecx
  4040cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040ce:	imul   esp
  4040d0:	pop    edx
  4040d1:	mov    edi,0x62283290
  4040d6:	rcr    BYTE PTR [eax-0x38],1
  4040d9:	mov    bl,0x81
  4040db:	or     BYTE PTR [eax+0x8],0x65
  4040df:	mov    ecx,0x4e45a306
  4040e4:	xchg   ebp,eax
  4040e5:	mov    eax,0x9e8e26f3
  4040ea:	push   es
  4040eb:	ret    
  4040ec:	mov    bh,0xd2
  4040ee:	adc    al,0xfe
  4040f0:	mov    eax,0x348cd3d2
  4040f5:	adc    ecx,DWORD PTR [edi+ebx*4-0x3d]
  4040f9:	ins    BYTE PTR es:[edi],dx
  4040fa:	nop
  4040fb:	jbe    0x4040bf
  4040fd:	or     dl,cl
  4040ff:	mov    al,bl
  404101:	stc    
  404102:	test   DWORD PTR [ebx+0x116f8b0c],edi
  404108:	mov    ds:0xaec854b3,eax
  40410d:	pop    edi
  40410e:	fistp  DWORD PTR [esp+ebx*1]
  404111:	dec    ecx
  404112:	add    al,0x15
  404114:	cs xchg ecx,eax
  404116:	out    0x5e,al
  404118:	dec    edx
  404119:	jmp    0x4b181048
  40411e:	in     eax,dx
  40411f:	and    al,0xf0
  404121:	lods   eax,DWORD PTR ds:[esi]
  404122:	add    dl,BYTE PTR [edi-0x4f]
  404125:	jb     0x4041a1
  404127:	cmp    al,BYTE PTR [ecx]
  404129:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40412a:	fst    QWORD PTR [edi]
  40412c:	(bad)  
  40412d:	(bad)  
  40412f:	fwait
  404130:	pop    ecx
  404131:	scas   eax,DWORD PTR es:[edi]
  404132:	xor    bl,BYTE PTR [esp+ecx*4+0x4b9d5a81]
  404139:	in     al,dx
  40413a:	sub    eax,0x2ff15782
  40413f:	(bad)  
  404140:	and    edx,DWORD PTR [ebx]
  404142:	jmp    0x4040f2
  404144:	addr16 sub dl,dl
  404147:	jecxz  0x404189
  404149:	mov    ah,0x8f
  40414b:	jbe    0x40413d
  40414d:	es xchg esp,eax
  40414f:	and    DWORD PTR [ecx-0x1f58d6db],ebp
  404155:	gs enter 0xbc6d,0x3e
  40415a:	mov    edx,0x36e17873
  40415f:	cli    
  404160:	xchg   edx,eax
  404161:	hlt    
  404162:	pusha  
  404163:	sbb    cl,0x3a
  404166:	cmp    DWORD PTR [ebp+0x530fcfe1],0xffffff8c
  40416d:	xor    eax,0xcc408676
  404172:	fnstenv [edi+0x262a46f0]
  404178:	mov    ds:0xbf2a2698,al
  40417d:	shl    DWORD PTR [bp+di-0x6c],1
  404181:	sub    BYTE PTR [eax],cl
  404183:	mov    cl,dl
  404185:	and    bl,BYTE PTR [ebx-0x69d8a7f4]
  40418b:	ins    BYTE PTR es:[edi],dx
  40418c:	jmp    FWORD PTR gs:[edx-0x4e]
  404190:	jle    0x404149
  404192:	neg    BYTE PTR [esp+eax*4+0x5bd3f9ff]
  404199:	mov    DWORD PTR [esi-0x35],esi
  40419c:	ja     0x404165
  40419e:	fcomp  QWORD PTR [ebx-0x46]
  4041a1:	or     BYTE PTR [edx+0x53796cfe],ah
  4041a7:	lock out dx,eax
  4041a9:	sub    BYTE PTR [eax+esi*2],bh
  4041ac:	add    bh,BYTE PTR [esi-0x68747a39]
  4041b2:	cmc    
  4041b3:	add    eax,0xdb185f7b
  4041b8:	xchg   BYTE PTR [eax+0x3c],bh
  4041bb:	jp     0x404181
  4041bd:	push   edx
  4041be:	ficom  WORD PTR [ecx-0x4edd7f40]
  4041c4:	adc    al,0xee
  4041c6:	outs   dx,DWORD PTR ds:[esi]
  4041c7:	dec    ecx
  4041c8:	ror    BYTE PTR [esi-0x3c0edaf5],1
  4041ce:	test   al,0xa3
  4041d0:	test   ch,dl
  4041d2:	mov    bl,0x50
  4041d5:	pop    ebx
  4041d6:	push   eax
  4041d7:	mov    dh,0x6e
  4041d9:	test   eax,0xa22f37c2
  4041de:	idiv   bl
  4041e0:	aaa    
  4041e1:	jns    0x404215
  4041e3:	out    0xa,al
  4041e5:	xlat   BYTE PTR ds:[ebx]
  4041e6:	xor    eax,0x6f278a4c
  4041eb:	mov    ch,0xf9
  4041ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041ee:	imul   ebp,DWORD PTR [esi+ecx*1+0x51],0x579d863b
  4041f6:	xchg   edx,eax
  4041f7:	sbb    eax,0x20d11aeb
  4041fc:	in     al,0xe1
  4041fe:	fsub   st(4),st
  404200:	push   cs
  404201:	dec    ecx
  404202:	jno    0x4041cc
  404204:	pop    ss
  404205:	sbb    eax,0xdbe30f3c
  40420a:	dec    ebx
  40420b:	fild   DWORD PTR [ebx+ebx*2-0x59]
  40420f:	add    ecx,DWORD PTR [ebx]
  404211:	mov    esi,0x8e5f9fc4
  404216:	sub    edi,DWORD PTR [edi]
  404218:	daa    
  404219:	pushf  
  40421a:	(bad)  
  40421c:	enter  0xcc7d,0x8a
  404220:	mov    ebp,0x741c31e3
  404225:	ds cmp al,0x89
  404228:	mov    ebx,0x135763c7
  40422d:	mov    esi,DWORD PTR [esi-0x1e]
  404230:	in     al,dx
  404231:	mov    edi,0x14af204a
  404236:	mov    esp,0xea3e1af2
  40423b:	popa   
  40423c:	scas   al,BYTE PTR es:[edi]
  40423d:	nop
  40423e:	xor    BYTE PTR [ebx+0x64a52d32],ah
  404244:	and    BYTE PTR [ecx],bl
  404246:	xor    eax,0x6eb0a487
  40424b:	shl    DWORD PTR [si],1
  40424e:	icebp  
  40424f:	mov    cl,0x80
  404251:	sbb    eax,eax
  404253:	sub    eax,0xe5e8af45
  404258:	add    BYTE PTR [ecx+0x10c11352],ah
  40425e:	inc    edx
  40425f:	out    0x28,eax
  404261:	xchg   esp,eax
  404262:	les    ebp,FWORD PTR [ebx+0x7bbc8d78]
  404268:	push   edi
  404269:	into   
  40426a:	rcr    edi,cl
  40426c:	mov    esp,ecx
  40426e:	cmp    ch,BYTE PTR [ecx-0x4e215d8a]
  404274:	sbb    BYTE PTR [eax],al
  404276:	imul   DWORD PTR [edx-0x73cb898e]
  40427c:	rcl    BYTE PTR [ebp-0x3186d502],1
  404282:	fs fucomip st,st(5)
  404285:	mov    ?,WORD PTR [ecx]
  404287:	push   0x852de79d
  40428c:	in     eax,0x75
  40428e:	loop   0x40428e
  404290:	pusha  
  404291:	int    0x97
  404293:	fs and esi,DWORD PTR es:[eax+edx*2]
  404298:	dec    edx
  404299:	adc    DWORD PTR [esi-0x4b2463f],esi
  40429f:	in     eax,0x12
  4042a1:	stos   DWORD PTR es:[edi],eax
  4042a2:	cmp    BYTE PTR [eax],ah
  4042a4:	fiadd  DWORD PTR [ecx+edi*8-0x66]
  4042a8:	mov    ch,0xa9
  4042aa:	xchg   edx,eax
  4042ab:	stos   DWORD PTR es:[edi],eax
  4042ac:	xchg   ecx,eax
  4042ad:	daa    
  4042ae:	shr    bh,1
  4042b0:	dec    esp
  4042b1:	shl    DWORD PTR [ebp-0x30ba6519],cl
  4042b7:	mov    dl,0x44
  4042b9:	out    dx,eax
  4042ba:	mov    al,ds:0x15e91c7d
  4042bf:	or     eax,0x93934d97
  4042c4:	push   0xffffffb3
  4042c6:	mov    esi,0xd48dab57
  4042cb:	out    dx,eax
  4042cc:	bound  eax,QWORD PTR [eax-0x1b]
  4042cf:	pop    edx
  4042d0:	jns    0x404348
  4042d2:	pop    esi
  4042d3:	cdq    
  4042d4:	inc    edx
  4042d5:	popa   
  4042d6:	push   ds
  4042d7:	fld    TBYTE PTR [eax]
  4042d9:	(bad)  
  4042da:	cmp    edx,DWORD PTR [esi+0x2b]
  4042dd:	or     DWORD PTR [ebx+0x340496de],eax
  4042e3:	add    al,0xb4
  4042e5:	pop    ecx
  4042e6:	cmp    BYTE PTR [ecx+0x5ef79fd2],ah
  4042ec:	js     0x404332
  4042ee:	xor    esi,edi
  4042f0:	jno    0x40433d
  4042f2:	in     eax,dx
  4042f3:	daa    
  4042f4:	daa    
  4042f5:	adc    DWORD PTR [edi+0x4f],ecx
  4042f8:	adc    DWORD PTR [esp+ebx*4],edi
  4042fb:	mov    bh,0xf6
  4042fd:	in     eax,0x5b
  4042ff:	int    0x12
  404301:	dec    edi
  404302:	fmul   QWORD PTR [edx+ebp*8]
  404305:	stos   DWORD PTR es:[edi],eax
  404306:	imul   ch
  404308:	mov    esp,0xe7e74424
  40430d:	push   ebx
  40430e:	imul   edx,DWORD PTR es:[eax],0x644497fa
  404315:	test   al,0xfb
  404317:	mov    al,0x9a
  404319:	xchg   DWORD PTR [ecx+0x2e72a0b6],esp
  40431f:	stc    
  404320:	lock jns 0x404377
  404323:	jno    0x404368
  404325:	pop    eax
  404326:	lods   al,BYTE PTR ds:[esi]
  404327:	mov    WORD PTR [edi+0x1b2df9d8],es
  40432d:	push   cs
  40432e:	stos   BYTE PTR es:[edi],al
  40432f:	fs icebp 
  404331:	or     BYTE PTR [edx-0x1f],ch
  404334:	push   ebp
  404335:	in     eax,dx
  404336:	in     al,dx
  404337:	(bad)  
  404338:	cmp    al,0xec
  40433a:	ins    DWORD PTR es:[edi],dx
  40433b:	pop    esp
  40433c:	ficom  WORD PTR [edx]
  40433e:	add    ebp,esi
  404340:	jmp    0x9cade01
  404345:	xor    esp,DWORD PTR [esi+0x40]
  404348:	cmp    al,0x48
  40434a:	mov    ds:0x5de2954,al
  40434f:	mov    cl,0x78
  404351:	lea    esi,[esi]
  404353:	adc    bh,BYTE PTR [ecx+0x7bb942b1]
  404359:	dec    esi
  40435a:	enter  0x51f,0x4
  40435e:	pop    es
  40435f:	mov    fs,ecx
  404361:	mov    dh,0x9b
  404363:	inc    ebp
  404364:	dec    eax
  404365:	int    0xba
  404367:	and    cl,BYTE PTR [eax]
  404369:	stos   BYTE PTR es:[edi],al
  40436a:	mov    al,ds:0x5b460e30
  40436f:	js     0x404383
  404371:	sub    al,BYTE PTR [ecx+0x6a]
  404374:	mov    bl,0xba
  404376:	pop    esp
  404377:	pop    ecx
  404378:	add    al,0xf
  40437a:	jecxz  0x4043a3
  40437c:	clc    
  40437d:	test   eax,0x34d5b12f
  404382:	adc    al,0xd5
  404384:	jns    0x4043cd
  404386:	jecxz  0x40435c
  404388:	push   0x3b
  40438a:	stc    
  40438b:	mov    bh,0xc7
  40438d:	in     eax,0xda
  40438f:	sbb    ebp,ebp
  404391:	jmp    0x987:0xc18d8d91
  404398:	les    edi,FWORD PTR [eax+0x46a21702]
  40439e:	(bad)
  4043a1:	dec    edi
  4043a2:	loop   0x4043ce
  4043a4:	inc    esi
  4043a5:	pop    ecx
  4043a6:	not    DWORD PTR [edx+0x76]
  4043a9:	and    esi,eax
  4043ab:	repz fist DWORD PTR [edi]
  4043ae:	int3   
  4043af:	jl     0x4043db
  4043b1:	dec    DWORD PTR [ecx+0x27098b1d]
  4043b7:	mov    al,ds:0x89c2f719
  4043bc:	hlt    
  4043bd:	(bad)  [ebx-0x291252cb]
  4043c3:	push   ebx
  4043c4:	push   ds
  4043c5:	loopne 0x4043d3
  4043c7:	scas   al,BYTE PTR es:[edi]
  4043c8:	mov    DWORD PTR [ebp-0x1d],ebx
  4043cb:	fcom   DWORD PTR [ecx]
  4043cd:	and    al,0xa6
  4043cf:	cmp    edx,ebx
  4043d1:	and    esp,0x12
  4043d4:	nop    ebx
  4043d7:	(bad)  
  4043d8:	fnstcw WORD PTR [ebx-0x7d26f001]
  4043de:	mov    ds:0xaac87aea,al
  4043e3:	scas   eax,DWORD PTR es:[edi]
  4043e4:	jge    0x40445d
  4043e6:	stos   DWORD PTR es:[edi],eax
  4043e7:	and    eax,DWORD PTR [ecx]
  4043e9:	cmp    DWORD PTR [ebp-0x54],edi
  4043ec:	xchg   ebx,eax
  4043ed:	cld    
  4043ee:	ror    BYTE PTR [ecx],0x4
  4043f1:	inc    esp
  4043f2:	sbb    BYTE PTR [eax],bh
  4043f4:	call   0x4568:0xd8283814
  4043fb:	jo     0x404450
  4043fd:	in     eax,0x64
  4043ff:	pop    es
  404400:	ss aam 0x2a
  404403:	push   eax
  404404:	dec    ebp
  404405:	push   ebp
  404406:	xchg   esp,eax
  404407:	aam    0xa
  404409:	in     al,0xa4
  40440b:	add    al,0x20
  40440d:	rol    ebx,0x13
  404410:	repnz inc esp
  404412:	adc    dl,cl
  404414:	jg     0x40445d
  404416:	jbe    0x404406
  404418:	inc    ebx
  404419:	neg    DWORD PTR [edx]
  40441b:	or     DWORD PTR [eax],esi
  40441d:	xor    cl,BYTE PTR [ebp-0x44b6248b]
  404423:	nop
  404424:	into   
  404425:	mov    ebp,0x56c50715
  40442a:	lods   al,BYTE PTR ds:[esi]
  40442b:	cmp    ebp,edi
  40442d:	out    0x93,eax
  40442f:	cmp    esp,DWORD PTR [ebp+0xa]
  404432:	test   BYTE PTR [ecx+0x3beccc2f],dl
  404438:	dec    ebp
  404439:	cmc    
  40443a:	pop    esi
  40443b:	pop    ecx
  40443c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40443d:	mov    ds:0x81ee07c,al
  404442:	lods   al,BYTE PTR ds:[esi]
  404443:	mov    eax,ds:0xc3c1a9a4
  404448:	pusha  
  404449:	dec    edi
  40444a:	and    BYTE PTR [edi-0x17],bh
  40444d:	out    dx,al
  40444e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40444f:	jb     0x40447a
  404451:	sub    eax,0x46226c99
  404456:	add    dh,dl
  404458:	fwait
  404459:	or     ebp,eax
  40445b:	cmp    eax,0x1335e9ec
  404460:	push   ebp
  404461:	arpl   cx,ax
  404463:	push   ds
  404464:	dec    esp
  404465:	dec    ebx
  404466:	mov    edx,0xcfb51e88
  40446b:	jbe    0x404416
  40446d:	ret    0xe53a
  404470:	jecxz  0x40440f
  404472:	iret   
  404473:	xor    bh,BYTE PTR [ecx]
  404475:	jbe    0x404420
  404477:	xor    al,0xcf
  404479:	jmp    DWORD PTR [eax-0x42ec347d]
  40447f:	pop    ds
  404480:	and    eax,DWORD PTR [ebp-0x15]
  404483:	cmp    BYTE PTR [edi+eiz*8-0x5c3062c5],bl
  40448a:	push   cs
  40448b:	outs   dx,DWORD PTR ds:[esi]
  40448c:	retf   
  40448d:	jl     0x404453
  40448f:	arpl   WORD PTR [eax-0x7f50498e],cx
  404495:	jb     0x404458
  404497:	cwde   
  404498:	and    eax,0x742e1908
  40449d:	shr    DWORD PTR [ecx-0x6a],cl
  4044a0:	in     eax,dx
  4044a1:	daa    
  4044a2:	std    
  4044a3:	jmp    0x404524
  4044a5:	outs   dx,BYTE PTR ds:[esi]
  4044a6:	pop    esp
  4044a7:	sbb    cl,BYTE PTR [esp+eax*4-0x32958229]
  4044ae:	inc    BYTE PTR [edx]
  4044b0:	xor    al,0xa3
  4044b2:	fwait
  4044b3:	add    eax,0x440d0e6c
  4044b8:	mov    ds:0x1a309f16,eax
  4044bd:	std    
  4044be:	scas   eax,DWORD PTR es:[edi]
  4044bf:	cmp    BYTE PTR [ecx],0x77
  4044c2:	jns    0x40447c
  4044c4:	ja     0x404458
  4044c6:	xchg   ebp,eax
  4044c7:	std    
  4044c8:	hlt    
  4044c9:	jge    0x404516
  4044cb:	pop    ss
  4044cc:	mov    eax,ds:0xd468c502
  4044d1:	(bad)  
  4044d2:	ins    BYTE PTR es:[edi],dx
  4044d3:	scas   eax,DWORD PTR es:[edi]
  4044d4:	jbe    0x404520
  4044d6:	sub    eax,0x1fbc8f48
  4044db:	fsub   QWORD PTR [eax+eax*2]
  4044de:	jmp    0xdda2:0x84edfb83
  4044e5:	inc    ebp
  4044e6:	fs clc 
  4044e8:	(bad)  
  4044e9:	dec    ebp
  4044ea:	add    al,0x99
  4044ec:	out    dx,al
  4044ed:	jae    0x404510
  4044ef:	outs   dx,DWORD PTR ds:[esi]
  4044f0:	dec    eax
  4044f1:	in     eax,dx
  4044f2:	bound  ebx,QWORD PTR [ecx]
  4044f4:	ret    
  4044f5:	(bad)  
  4044f6:	dec    esp
  4044f7:	inc    ecx
  4044f8:	jb     0x4044f1
  4044fa:	pusha  
  4044fb:	or     BYTE PTR [edi],dh
  4044fd:	pushf  
  4044fe:	(bad)  
  4044ff:	(bad)
  404502:	mov    BYTE PTR [edi+0x5dfdf81d],ah
  404508:	jmp    0x22f3db6e
  40450d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40450e:	sbb    esp,DWORD PTR [eiz*4+0x5e85d82a]
  404515:	cmp    al,BYTE PTR [eax-0x2]
  404518:	daa    
  404519:	push   edx
  40451a:	int    0x9d
  40451c:	jo     0x4044ad
  40451e:	pop    eax
  40451f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404520:	add    al,0x7a
  404522:	cmp    BYTE PTR [edi-0x4dc684f0],ch
  404528:	push   ecx
  404529:	stos   DWORD PTR es:[edi],eax
  40452a:	int3   
  40452b:	out    0xad,al
  40452d:	pushf  
  40452e:	(bad)  
  40452f:	cmp    al,0xda
  404531:	adc    al,0x74
  404533:	xor    DWORD PTR [ebp-0x1b],0x13
  404537:	test   BYTE PTR [ecx+0x15cdd28c],ch
  40453d:	mov    edi,0x86de6561
  404542:	add    BYTE PTR [ebp+0x258ca59e],bh
  404548:	je     0x40459f
  40454a:	jo     0x40450a
  40454c:	fwait
  40454d:	push   0x55d14491
  404552:	push   es
  404553:	inc    edi
  404554:	lods   eax,DWORD PTR ds:[esi]
  404555:	push   esp
  404556:	lea    ebx,ds:0x2ddc1905
  40455c:	gs int 0x28
  40455f:	or     eax,0x2e405e37
  404564:	test   BYTE PTR [esi+ecx*8+0x167f24fa],bh
  40456b:	in     al,0x5e
  40456d:	rcl    BYTE PTR [eax-0x3ff726a3],cl
  404573:	(bad)  
  404574:	xor    eax,0x9df9da14
  404579:	int3   
  40457a:	arpl   WORD PTR [ebp-0x71],cx
  40457d:	sub    eax,0xdf46da4b
  404582:	data16 sub ch,cl
  404585:	mov    DWORD PTR [edi-0x60b896c2],ebp
  40458b:	or     edx,edi
  40458d:	addr16 das 
  40458f:	lods   al,BYTE PTR ds:[esi]
  404590:	lea    esp,[esi+eiz*8]
  404593:	fcom   QWORD PTR [ebx+0x10]
  404596:	xchg   DWORD PTR [ebp-0x47],edx
  404599:	lods   eax,DWORD PTR ds:[esi]
  40459a:	fistp  WORD PTR [ebp+0x56]
  40459d:	in     eax,dx
  40459e:	mov    cl,0x10
  4045a0:	xor    BYTE PTR [eax+0x7f],dh
  4045a3:	sbb    ch,BYTE PTR [eax+0xa6a29f8]
  4045a9:	(bad)  
  4045aa:	xlat   BYTE PTR ds:[ebx]
  4045ab:	aaa    
  4045ac:	test   eax,0x3e2cf922
  4045b1:	sub    eax,0x6b3d847c
  4045b6:	mov    BYTE PTR ds:0x2dca41f1,bh
  4045bc:	mov    eax,0x1a964cc
  4045c1:	addr16 push 0xfffffffd
  4045c4:	push   eax
  4045c5:	xchg   esi,eax
  4045c6:	mov    BYTE PTR [edx],dh
  4045c8:	sbb    DWORD PTR [esi+0x56],edi
  4045cb:	fdivp  st(5),st
  4045cd:	push   ss
  4045ce:	sbb    al,0xa4
  4045d0:	pushf  
  4045d1:	std    
  4045d2:	sub    edx,esp
  4045d4:	imul   edx,DWORD PTR [edx-0x60a23e2c],0xffffffda
  4045db:	repz and eax,0xad0d36ba
  4045e1:	out    0x85,al
  4045e3:	pop    ebp
  4045e4:	lahf   
  4045e5:	data16 fisub DWORD PTR [ecx+0x2d]
  4045e9:	frstor [edi]
  4045eb:	jecxz  0x40466c
  4045ed:	xchg   DWORD PTR [ebp-0x4a],edi
  4045f0:	in     eax,0xa2
  4045f2:	and    dh,BYTE PTR [esi-0x6e]
  4045f5:	and    BYTE PTR [edi+edi*4+0x1f],ah
  4045f9:	pop    esp
  4045fa:	adc    al,0xae
  4045fc:	jno    0x40458f
  4045fe:	cs pop esp
  404600:	mov    esi,0xdf7656f1
  404605:	mov    esp,0xfe44d3ca
  40460a:	mov    DWORD PTR [ebp+0x1],esp
  40460d:	xor    al,0x9f
  40460f:	lods   al,BYTE PTR ds:[esi]
  404610:	adc    eax,0x99057713
  404615:	imul   esp,DWORD PTR ds:0xed6e8051,0x24
  40461c:	adc    DWORD PTR [esi+0x124e282d],esi
  404622:	hlt    
  404623:	adc    eax,0x54c6a077
  404628:	sahf   
  404629:	pop    esp
  40462a:	pop    ebp
  40462b:	or     esp,DWORD PTR [edx+0xf7e5243]
  404631:	dec    edi
  404632:	jbe    0x404625
  404634:	in     al,0xee
  404636:	and    al,0xa9
  404638:	pop    ecx
  404639:	jle    0x40460e
  40463b:	imul   eax,DWORD PTR [ebp-0x1a],0xffffff9a
  40463f:	mov    dh,0xb8
  404641:	test   eax,0x49ba74ad
  404646:	xor    BYTE PTR [eax],ch
  404648:	cdq    
  404649:	jg     0x4046b8
  40464b:	dec    ebx
  40464c:	mov    ebp,0x22432b2d
  404651:	pop    eax
  404652:	adc    eax,0xc4b4dfe5
  404657:	push   ebp
  404658:	pop    es
  404659:	push   0x6e11efb8
  40465e:	add    DWORD PTR [edx-0x16567d7b],ebp
  404664:	jo     0x4046b8
  404666:	push   ecx
  404667:	push   edi
  404668:	fisttp WORD PTR [esi+0x3f800155]
  40466e:	inc    ecx
  40466f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404670:	inc    ecx
  404671:	pop    edi
  404672:	xchg   bh,dh
  404674:	icebp  
  404675:	sub    BYTE PTR [edx+0x422856c],0x18
  40467c:	repz mov eax,0xedb290b2
  404682:	mov    bl,0xaa
  404684:	jns    0x4046f6
  404686:	ror    BYTE PTR [esi],0xf4
  404689:	mov    ch,al
  40468b:	popf   
  40468c:	mov    esp,0x587d8974
  404691:	xchg   edx,eax
  404692:	enter  0xbf3b,0xe
  404696:	in     al,0x19
  404698:	dec    esp
  404699:	and    DWORD PTR [esi-0x6b],0xffffffae
  40469d:	aas    
  40469e:	dec    ecx
  40469f:	xchg   edi,eax
  4046a0:	aam    0xfc
  4046a2:	or     esp,edx
  4046a4:	mov    ecx,0x6eb86d0c
  4046a9:	add    edx,DWORD PTR [eax-0x23c45bb9]
  4046af:	pop    eax
  4046b0:	push   edx
  4046b1:	jnp    0x404731
  4046b3:	test   al,0x97
  4046b5:	jg     0x4046ef
  4046b7:	jne    0x404689
  4046b9:	push   ss
  4046ba:	std    
  4046bb:	repnz pop ebx
  4046bd:	mov    cl,0xb9
  4046bf:	lods   eax,DWORD PTR ds:[esi]
  4046c0:	jne    0x404725
  4046c2:	stc    
  4046c3:	cmp    eax,0x461d03b0
  4046c8:	xor    ecx,DWORD PTR [edx]
  4046ca:	fist   WORD PTR [esi-0x68]
  4046cd:	scas   eax,DWORD PTR es:[edi]
  4046ce:	test   al,0x15
  4046d0:	mov    bh,0x8d
  4046d2:	xor    al,0x47
  4046d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046d5:	dec    edx
  4046d6:	stos   DWORD PTR es:[edi],eax
  4046d7:	ret    0x3dd8
  4046da:	out    0x82,eax
  4046dc:	mov    ch,0xa
  4046de:	shr    BYTE PTR [eax-0x43],0xf8
  4046e2:	retf   
  4046e3:	fistp  WORD PTR [edi-0x22]
  4046e6:	cwde   
  4046e7:	pop    ss
  4046e8:	dec    edi
  4046e9:	sub    al,dl
  4046eb:	dec    esp
  4046ec:	mov    es,WORD PTR [ebx]
  4046ee:	(bad)  
  4046ef:	mov    ds:0xf36ad5b8,eax
  4046f4:	cmp    DWORD PTR [ebp-0x3d],eax
  4046f7:	mov    ecx,0xce6b0716
  4046fc:	mov    al,ds:0xbb3dd77b
  404701:	in     al,dx
  404702:	xor    eax,0xf57ebedc
  404707:	data16 mov dh,0xc2
  40470a:	inc    eax
  40470b:	mov    bl,0x8b
  40470d:	mov    ch,0xd2
  40470f:	pop    esp
  404710:	fidiv  DWORD PTR [edi+esi*4-0x2e1bd5a5]
  404717:	sub    BYTE PTR [esi-0x4651bbc7],cl
  40471d:	add    DWORD PTR [ecx+0x44],ecx
  404720:	or     ebp,esp
  404722:	mov    ebx,0xbf9c89b4
  404727:	addr16 je 0x4046f0
  40472a:	pop    edx
  40472b:	sub    DWORD PTR [esi-0x6f],ebp
  40472e:	in     al,dx
  40472f:	or     al,0x63
  404731:	and    BYTE PTR [edx+0x32],dh
  404734:	(bad)  
  404735:	xor    dl,BYTE PTR [ecx+0x55]
  404738:	add    eax,0xe1bb9330
  40473d:	inc    esi
  40473e:	mov    ?,ebx
  404740:	or     esi,0x42
  404743:	mov    ah,0xd3
  404745:	sahf   
  404746:	icebp  
  404747:	aad    0x34
  404749:	dec    esp
  40474a:	aas    
  40474b:	pop    esi
  40474c:	mov    esi,0xf66d832c
  404751:	jno    0x4047b7
  404753:	mov    dl,0xf8
  404755:	mov    bh,0x29
  404757:	imul   esi,DWORD PTR [esi],0xa9bf6a7a
  40475d:	jmp    0x4046fa
  40475f:	scas   eax,DWORD PTR es:[edi]
  404760:	push   esp
  404761:	(bad)  
  404762:	jp     0x4047b4
  404764:	es out 0x71,al
  404767:	add    ebp,esi
  404769:	dec    ebx
  40476a:	nop
  40476b:	mov    ch,0xb
  40476d:	ja     0x4047c0
  40476f:	fcmovbe st,st(4)
  404771:	mov    BYTE PTR [edx-0x692be4c0],dh
  404777:	ins    DWORD PTR es:[edi],dx
  404778:	rcr    BYTE PTR [edx-0x5328f616],1
  40477e:	dec    edi
  40477f:	into   
  404780:	push   ecx
  404781:	call   0xd94a:0x1423943c
  404788:	xchg   ebp,eax
  404789:	push   0x18de54f
  40478e:	xor    BYTE PTR [ecx-0x34],al
  404791:	call   0xb796:0x7420fef3
  404798:	push   cs
  404799:	cs pop ss
  40479b:	push   es
  40479c:	inc    ebx
  40479d:	das    
  40479e:	and    ah,ch
  4047a0:	jb     0x4047ad
  4047a2:	or     BYTE PTR [eax+ebx*2+0x8],bh
  4047a6:	inc    edx
  4047a7:	pop    eax
  4047a8:	add    esi,DWORD PTR [ecx-0x5c]
  4047ab:	sub    eax,0xc8d4fc9e
  4047b0:	ss push eax
  4047b2:	cmc    
  4047b3:	and    DWORD PTR [edi+0x60f8945b],ecx
  4047b9:	or     eax,esi
  4047bb:	cmp    al,0x2
  4047bd:	adc    DWORD PTR [edx+0x4a],edi
  4047c0:	ror    BYTE PTR [eax+0x6d],cl
  4047c3:	or     BYTE PTR ds:0xb9b9018e,dh
  4047c9:	es enter 0xfd51,0x68
  4047ce:	cmp    esp,DWORD PTR [ebx*1+0x77623a01]
  4047d5:	aas    
  4047d6:	fcomp  DWORD PTR [esi+ebx*1+0x47]
  4047da:	cli    
  4047db:	xchg   DWORD PTR [ebp+0x26],ecx
  4047de:	pop    es
  4047df:	cld    
  4047e0:	mov    dh,bh
  4047e2:	arpl   WORD PTR [ebx],di
  4047e4:	loop   0x404784
  4047e6:	xchg   esp,eax
  4047e7:	mov    esp,0x4ec21e7a
  4047ec:	pop    ds
  4047ed:	jns    0x4047c2
  4047ef:	outs   dx,BYTE PTR ds:[esi]
  4047f0:	mov    dh,0xd7
  4047f2:	scas   al,BYTE PTR es:[edi]
  4047f3:	aad    0x65
  4047f5:	push   edx
  4047f6:	sar    DWORD PTR [ebx+0x74df2865],cl
  4047fc:	mov    eax,0x1de9950c
  404801:	and    dl,BYTE PTR ds:0xf203fd60
  404807:	xchg   esp,eax
  404808:	push   edx
  404809:	and    DWORD PTR [eax+0x6c0f27a8],ecx
  40480f:	mov    al,ds:0xd1561c87
  404814:	fnstsw WORD PTR [ebx+0x1e]
  404817:	mov    WORD PTR [ecx],ds
  404819:	mov    edx,edx
  40481b:	dec    esp
  40481c:	mov    WORD PTR [edx],gs
  40481e:	mov    DWORD PTR [ebp+0x67],esi
  404821:	inc    edi
  404822:	sub    DWORD PTR [ecx-0x5466ad14],edx
  404828:	pop    edx
  404829:	ffreep st(0)
  40482b:	xchg   DWORD PTR [edx+0x64cd067b],esp
  404831:	sub    bh,BYTE PTR [edi-0x4]
  404834:	aad    0xab
  404836:	bound  ecx,QWORD PTR [esi+0x6a]
  404839:	xchg   BYTE PTR [ebp+0x65],bl
  40483c:	aas    
  40483d:	jnp    0x4047ee
  40483f:	jecxz  0x4048b4
  404841:	shr    DWORD PTR [esi+0x5a],0xab
  404845:	xchg   BYTE PTR [eax+0x78],al
  404848:	or     al,0x69
  40484a:	mov    ecx,0x9560c873
  40484f:	push   ds
  404850:	or     esi,DWORD PTR [ecx+0x4c37e328]
  404856:	fcmovb st,st(1)
  404858:	push   esi
  404859:	mov    edx,0x27f90dca
  40485e:	jo     0x404821
  404860:	nop
  404861:	call   0xe6ce:0x2a0ac135
  404868:	sub    ebx,DWORD PTR [esi+eiz*1-0x5]
  40486c:	jp     0x4048d4
  40486e:	cmp    BYTE PTR [esi+0x3c],ch
  404871:	jb     0x4048df
  404873:	loope  0x4048ae
  404875:	not    ebx
  404877:	repz dec ecx
  404879:	int3   
  40487a:	jecxz  0x4048c3
  40487c:	pop    DWORD PTR [ebp+esi*8-0x1a3152f1]
  404883:	inc    edx
  404884:	fcomi  st,st(6)
  404886:	or     al,0xaf
  404888:	call   0x27021772
  40488d:	sbb    BYTE PTR [ebp-0x6d41b039],ah
  404893:	cmp    eax,DWORD PTR [ebx-0x54]
  404896:	mov    al,ds:0x26f4b1bc
  40489b:	sub    eax,0xfba2972f
  4048a0:	add    eax,0xded2d170
  4048a5:	cs fs push ss
  4048a8:	and    eax,0xfab9b981
  4048ad:	jle    0x40487b
  4048af:	mov    edi,DWORD PTR [edx]
  4048b1:	xchg   esi,eax
  4048b2:	sub    BYTE PTR [edi+0x59],dl
  4048b5:	loopne 0x404853
  4048b7:	push   edx
  4048b8:	xor    BYTE PTR [edi],ah
  4048ba:	mov    esi,0xeb86f6cf
  4048bf:	gs aam 0x67
  4048c2:	mov    edx,DWORD PTR [ebx]
  4048c4:	jb     0x40486a
  4048c6:	cwde   
  4048c7:	jmp    0xf57:0xfa569671
  4048ce:	punpckhwd mm3,QWORD PTR [ebx]
  4048d1:	fwait
  4048d2:	imul   esi,DWORD PTR [ebx],0xb20417c0
  4048d8:	jo     0x404911
  4048da:	jo     0x4048a9
  4048dc:	xor    eax,DWORD PTR [ecx]
  4048de:	ins    BYTE PTR es:[edi],dx
  4048df:	popf   
  4048e0:	push   esp
  4048e1:	test   eax,0xa43e4997
  4048e6:	scas   eax,DWORD PTR es:[edi]
  4048e7:	call   0x76c0:0x55c3f77c
  4048ee:	aas    
  4048ef:	jnp    0x40490f
  4048f1:	inc    edx
  4048f2:	(bad)  
  4048f4:	les    edx,FWORD PTR [ebx]
  4048f6:	push   ecx
  4048f7:	outs   dx,DWORD PTR ds:[esi]
  4048f8:	(bad)  
  4048f9:	push   ebx
  4048fa:	(bad)  [ecx+eiz*2-0x7d]
  4048fe:	pusha  
  4048ff:	add    eax,0x167ed309
  404904:	ins    BYTE PTR es:[edi],dx
  404905:	arpl   bp,dx
  404907:	fiadd  WORD PTR [ebx-0x4875b853]
  40490d:	mov    BYTE PTR [esi+ebx*2],0x15
  404911:	test   eax,edx
  404913:	add    BYTE PTR [edi+0x49],dh
  404916:	mov    BYTE PTR [edi],dh
  404918:	mov    eax,0x53ae0c87
  40491d:	mov    eax,ds:0x6c2b8888
  404922:	and    BYTE PTR [ecx-0x40],bh
  404925:	icebp  
  404926:	push   ds
  404927:	add    DWORD PTR [eax-0x21],eax
  40492a:	jno    0x404971
  40492c:	pushf  
  40492d:	mov    ebp,0x6a54eb73
  404932:	js     0x40490a
  404934:	test   eax,0x3c14a71
  404939:	mov    DWORD PTR gs:[ecx-0x47],edi
  40493d:	mov    bl,0xd0
  40493f:	rcr    DWORD PTR [ebx+0x71],cl
  404942:	push   ecx
  404943:	jmp    0xf6b75511
  404948:	mov    BYTE PTR [edi],dl
  40494a:	iret   
  40494b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40494c:	shr    DWORD PTR [ebx],0xc5
  40494f:	add    al,0x46
  404951:	sbb    al,0xce
  404953:	mov    BYTE PTR [ecx+0x4359f216],ah
  404959:	jbe    0x4049b5
  40495b:	in     al,dx
  40495c:	dec    ebp
  40495d:	fidivr WORD PTR [edi+0x4e48fc0e]
  404963:	xor    ebx,esp
  404965:	push   esp
  404966:	push   cs
  404967:	fwait
  404968:	into   
  404969:	sub    eax,0x3508ddaf
  40496e:	xchg   edx,edi
  404970:	shr    edx,1
  404972:	ret    
  404973:	inc    edi
  404974:	and    DWORD PTR [ecx],esp
  404976:	push   esp
  404977:	daa    
  404978:	ja     0x404972
  40497a:	push   ds
  40497b:	ss stos BYTE PTR es:[edi],al
  40497d:	test   al,0xf2
  40497f:	les    ecx,FWORD PTR [ebp+0x77d88d86]
  404985:	inc    eax
  404986:	inc    ebx
  404987:	in     al,dx
  404988:	(bad)  
  404989:	dec    ecx
  40498a:	lea    ecx,[ebx-0x4e]
  40498d:	sub    al,0x95
  40498f:	xor    ecx,DWORD PTR [edx]
  404991:	cmp    eax,edx
  404993:	sub    DWORD PTR [esp+ebx*8-0x4ca48ccc],edx
  40499a:	xchg   edi,eax
  40499b:	jb     0x404933
  40499d:	out    dx,eax
  40499e:	jle    0x40494e
  4049a0:	sbb    eax,0x5e2b7b79
  4049a5:	add    al,BYTE PTR [ecx]
  4049a7:	js     0x40493a
  4049a9:	inc    ecx
  4049aa:	jmp    0x9c06:0xb196f67a
  4049b1:	mov    cl,0xac
  4049b3:	pop    ebx
  4049b4:	repz and al,0xdd
  4049b7:	dec    esi
  4049b8:	aaa    
  4049b9:	dec    eax
  4049ba:	int3   
  4049bb:	in     al,0x5d
  4049bd:	inc    esp
  4049be:	imul   esi,eax,0x5925ef0d
  4049c4:	adc    BYTE PTR ds:0xbcb51245,bl
  4049ca:	push   esp
  4049cb:	fisttp WORD PTR [ebp-0x56796f16]
  4049d1:	jmp    0xba4341c5
  4049d6:	push   eax
  4049d7:	push   esi
  4049d8:	xor    al,0xe2
  4049da:	test   bh,0xe6
  4049dd:	adc    bl,ch
  4049df:	arpl   WORD PTR [ecx-0x5f495679],di
  4049e5:	imul   ebp,DWORD PTR [eax+0x53],0x1c750868
  4049ec:	fsub   st,st(3)
  4049ee:	stos   BYTE PTR es:[edi],al
  4049ef:	ror    BYTE PTR [edi+0x20],1
  4049f2:	jne    0x4049b8
  4049f4:	push   ebx
  4049f5:	pop    ss
  4049f6:	mov    esp,0x4478d86f
  4049fb:	mov    al,ds:0x9847375e
  404a00:	daa    
  404a01:	dec    ebp
  404a02:	jne    0x4049fe
  404a04:	xchg   ecx,eax
  404a05:	je     0x404a2f
  404a07:	(bad)  
  404a08:	jmp    0x9a3c9c4c
  404a0d:	xchg   ebp,eax
  404a0e:	lods   al,BYTE PTR ds:[esi]
  404a0f:	div    edi
  404a11:	aaa    
  404a12:	push   esi
  404a13:	(bad)  [ecx]
  404a15:	adc    BYTE PTR [ecx+0x30],dh
  404a18:	stos   BYTE PTR es:[edi],al
  404a19:	call   0x4264c262
  404a1e:	fisub  DWORD PTR [ecx+esi*4-0x34f7e954]
  404a25:	or     DWORD PTR [esi-0x12e28367],0x122fcc1b
  404a2f:	jne    0x404a1a
  404a31:	mov    BYTE PTR [edi+0x15],dh
  404a34:	mov    ebp,0xea514c0a
  404a39:	out    dx,eax
  404a3a:	int3   
  404a3b:	mov    esp,0x32a6c527
  404a40:	jns    0x4049ec
  404a42:	mov    esp,0xd6c6b2c3
  404a47:	xor    eax,0xff197fd6
  404a4c:	fs cmp cl,ch
  404a4f:	inc    edx
  404a50:	adc    cl,BYTE PTR [ecx+0x18]
  404a53:	fdiv   DWORD PTR ds:0x62430f1d
  404a59:	sub    eax,0x6ad549b0
  404a5e:	ja     0x404acf
  404a60:	and    eax,0x2cac1174
  404a65:	add    DWORD PTR [edx-0x20],ebp
  404a68:	fcmovne st,st(6)
  404a6a:	(bad)  
  404a6c:	push   ebx
  404a6d:	and    ecx,DWORD PTR [eax+0x4ff38a92]
  404a73:	aaa    
  404a74:	(bad)  
  404a75:	add    eax,0xc2373cc9
  404a7a:	xchg   ebp,eax
  404a7b:	and    BYTE PTR [eax],dl
  404a7d:	sbb    DWORD PTR [ebp+ebp*1+0x59],0x20
  404a82:	dec    edi
  404a83:	mov    ds:0x1af9ec4b,eax
  404a88:	out    0x3d,al
  404a8a:	sbb    al,0x63
  404a8c:	test   esp,edx
  404a8e:	hlt    
  404a8f:	or     BYTE PTR [edx+0x6923ed0c],ah
  404a95:	mov    DWORD PTR [ebp-0x4b],ecx
  404a98:	lods   eax,DWORD PTR ds:[esi]
  404a99:	jmp    0xe9b7a693
  404a9e:	(bad)  [ebx-0x31d8f90b]
  404aa4:	into   
  404aa5:	inc    esi
  404aa6:	jp     0x404afe
  404aa8:	fist   DWORD PTR [edx+0x631827e7]
  404aae:	enter  0xeb61,0x63
  404ab2:	jle    0x404a8c
  404ab4:	(bad)  
  404ab5:	repz fwait
  404ab7:	jl     0x404ab3
  404ab9:	push   ss
  404aba:	call   0x8d0d:0x9017ad9b
  404ac1:	not    DWORD PTR [ebp-0x40]
  404ac4:	pop    esp
  404ac5:	div    DWORD PTR [esi]
  404ac7:	inc    ebx
  404ac8:	or     dl,BYTE PTR [edi+ebx*1+0x55aebd68]
  404acf:	sbb    BYTE PTR [edi-0x5d],dl
  404ad2:	adc    BYTE PTR [ecx+0x6b2e2eab],ah
  404ad8:	inc    ecx
  404ad9:	mov    bl,0xe4
  404adb:	out    dx,eax
  404adc:	pushf  
  404add:	fdiv   DWORD PTR [ebx+0x5c028359]
  404ae3:	add    eax,0x7447d46e
  404ae8:	pop    es
  404ae9:	jb     0x404b09
  404aeb:	test   BYTE PTR ds:[esi+0x73],ch
  404aef:	loop   0x404a82
  404af1:	sbb    dl,BYTE PTR [ebp-0x2a]
  404af4:	aam    0xe2
  404af6:	outs   dx,BYTE PTR ds:[esi]
  404af7:	cli    
  404af8:	es nop
  404afa:	jns    0x404b4d
  404afc:	ror    DWORD PTR [esp+ebx*8+0x62975ead],1
  404b03:	arpl   WORD PTR [ebp+ecx*1-0x7a7cb7c3],bp
  404b0a:	cmp    ebp,ebx
  404b0c:	sbb    ch,BYTE PTR [eax+0x69b88447]
  404b12:	data16 cmc 
  404b14:	ret    
  404b15:	scas   eax,DWORD PTR es:[edi]
  404b16:	int    0xaa
  404b18:	js     0x404b24
  404b1a:	sub    DWORD PTR [ebx-0x57],edx
  404b1d:	push   edx
  404b1e:	sar    ebx,0x19
  404b21:	jge    0x404b71
  404b23:	dec    edx
  404b24:	or     BYTE PTR [edx-0x318a05c7],bh
  404b2a:	ds in  eax,0xc4
  404b2d:	add    ah,BYTE PTR [eax+0x7b]
  404b30:	jmp    DWORD PTR [ecx]
  404b32:	outs   dx,DWORD PTR gs:[esi]
  404b34:	adc    BYTE PTR [esp+edi*8-0x3b5d01a3],dl
  404b3b:	fnsave [edi-0x1f64df82]
  404b41:	jno    0x404b6d
  404b43:	inc    DWORD PTR [esi+0x3a3869b0]
  404b49:	jb     0x404ba7
  404b4b:	push   ebx
  404b4c:	sub    eax,0xcd703af9
  404b51:	mov    ds:0x7321215f,eax
  404b56:	lock sar DWORD PTR [ebx+0x50],0xd1
  404b5b:	mov    ecx,0x974c432c
  404b60:	cmp    esi,esi
  404b62:	lock iret 
  404b64:	in     eax,0xd3
  404b66:	fldcw  WORD PTR [edi-0x4d84630f]
  404b6c:	mov    cl,0xe
  404b6e:	sbb    ebx,DWORD PTR [edx+0x15d860b7]
  404b74:	loop   0x404bd9
  404b76:	scas   eax,DWORD PTR es:[edi]
  404b77:	inc    edx
  404b78:	in     eax,dx
  404b79:	and    ebx,DWORD PTR [edx+0x406a7b4f]
  404b7f:	push   ss
  404b80:	xchg   edi,eax
  404b81:	or     al,0x9e
  404b83:	ss cli 
  404b85:	jmp    DWORD PTR [esi*2+0x1f4bd364]
  404b8c:	xor    eax,0x7d69fb87
  404b91:	adc    esp,DWORD PTR [ebx]
  404b93:	or     BYTE PTR [ebx+0x515d5a6e],ch
  404b99:	jmp    0xc243:0xa9f28315
  404ba0:	mov    esi,0xdc92cd91
  404ba5:	add    dl,BYTE PTR [esi+eax*8+0x22d7c877]
  404bac:	jo     0x404b50
  404bae:	lock lods al,BYTE PTR ds:[esi]
  404bb0:	out    0xd3,al
  404bb2:	cmc    
  404bb3:	daa    
  404bb4:	jno    0x404bd5
  404bb6:	mov    al,0x32
  404bb8:	jecxz  0x404c1d
  404bba:	mov    ecx,0xcfc18cc8
  404bbf:	push   ecx
  404bc0:	add    eax,0x898072f7
  404bc5:	jmp    0x404b9f
  404bc7:	xor    ebp,DWORD PTR [eax-0x70]
  404bca:	or     al,0x7e
  404bcc:	retf   
  404bcd:	push   0x33d297fc
  404bd2:	sbb    dh,cl
  404bd4:	jbe    0x404b88
  404bd6:	repnz add ecx,DWORD PTR [edi+eax*8+0x28]
  404bdb:	sti    
  404bdc:	add    bh,al
  404bde:	lock sub ebp,DWORD PTR [eax+0x726d735b]
  404be5:	push   0xf9f8808c
  404bea:	(bad)  
  404beb:	cmp    esp,ebx
  404bed:	xchg   esp,eax
  404bee:	sub    al,0x41
  404bf0:	jp     0x404c11
  404bf2:	mov    dl,0x8a
  404bf4:	outs   dx,BYTE PTR ds:[esi]
  404bf5:	fcomi  st,st(0)
  404bf7:	mov    ecx,0x9721b643
  404bfc:	pop    ss
  404bfd:	in     al,dx
  404bfe:	daa    
  404bff:	jno    0x404bc5
  404c01:	mov    cl,0xa8
  404c03:	xchg   ebx,eax
  404c04:	adc    al,0x70
  404c06:	jae    0x404bbb
  404c08:	xchg   edx,ebx
  404c0a:	push   es
  404c0b:	jge    0x404be5
  404c0d:	fist   DWORD PTR [esp+eax*4+0x49]
  404c11:	dec    edi
  404c12:	adc    eax,0xb6980fd7
  404c17:	fst    QWORD PTR ds:0x9d5eab41
  404c1d:	mov    al,ds:0x9cf914df
  404c22:	call   0xbe0d:0x91ec9a4b
  404c29:	shr    edi,cl
  404c2b:	push   cs
  404c2c:	add    bh,BYTE PTR [esi]
  404c2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c2f:	arpl   WORD PTR ds:0x770b3baf,sp
  404c35:	mov    esi,0xb195ab3d
  404c3a:	push   esp
  404c3b:	cld    
  404c3c:	pop    ebx
  404c3d:	push   ds
  404c3e:	rdmsr  
  404c40:	xor    al,0x22
  404c42:	hlt    
  404c43:	mov    DWORD PTR [esi-0x6149762e],eax
  404c49:	sbb    al,0xd0
  404c4b:	(bad)  
  404c4c:	out    dx,al
  404c4d:	push   0xffffff94
  404c4f:	(bad)  
  404c50:	jg     0x404c32
  404c52:	mov    WORD PTR [eax+esi*8-0x4808eb6d],gs
  404c59:	std    
  404c5a:	pop    edi
  404c5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c5c:	std    
  404c5d:	ds and edx,edx
  404c60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c61:	and    eax,DWORD PTR [eax]
  404c63:	inc    esi
  404c64:	sub    dh,BYTE PTR [esi]
  404c66:	lea    ebx,[eax-0x17917e7f]
  404c6c:	cdq    
  404c6d:	xchg   edx,eax
  404c6e:	sub    cl,BYTE PTR [edx+0xc410cbe]
  404c74:	repz ds xchg esp,eax
  404c77:	sub    DWORD PTR [eax-0x11],0x225e7217
  404c7e:	ss or  eax,0xa3b53519
  404c84:	lsl    edi,WORD PTR [edx]
  404c87:	call   0xb1080af8
  404c8c:	add    ebx,DWORD PTR [ebx]
  404c8e:	rol    DWORD PTR [ecx],1
  404c90:	(bad)  
  404c91:	pop    eax
  404c92:	cmovbe esi,DWORD PTR [esi]
  404c95:	lea    ebx,[ebx]
  404c97:	adc    BYTE PTR [edi+0x2b],ah
  404c9a:	mov    esi,0x5aaf12d7
  404c9f:	mov    ds,WORD PTR [edx-0x15]
  404ca2:	dec    edi
  404ca3:	daa    
  404ca4:	inc    edx
  404ca5:	mov    BYTE PTR [ebx-0x3d7a3d14],dh
  404cab:	jmp    FWORD PTR [esi]
  404cad:	and    al,0x32
  404caf:	pop    es
  404cb0:	sbb    DWORD PTR [eax+edx*2],esp
  404cb3:	das    
  404cb4:	pop    edi
  404cb5:	inc    edx
  404cb6:	push   ecx
  404cb7:	cmp    eax,0x4f9395c3
  404cbc:	mul    cl
  404cbe:	mov    bh,0xa5
  404cc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cc1:	mov    ebp,0x8f53f7a9
  404cc6:	cmp    ecx,DWORD PTR [ecx-0x61]
  404cc9:	inc    edi
  404cca:	push   ss
  404ccb:	sti    
  404ccc:	sbb    ch,BYTE PTR fs:[ecx]
  404ccf:	add    eax,0xa1d7f815
  404cd4:	dec    bx
  404cd6:	or     eax,0x358a66d5
  404cdb:	jnp    0x404d2e
  404cdd:	aad    0x8f
  404cdf:	push   bx
  404ce1:	mov    bh,0xef
  404ce3:	xor    edx,DWORD PTR [eax-0x5e]
  404ce6:	jmp    0x404d41
  404ce8:	jmp    0x404cf6
  404cea:	jg     0x404d50
  404cec:	pop    esi
  404ced:	add    bl,bh
  404cef:	js     0x404cfd
  404cf1:	and    DWORD PTR [ecx-0x1b0753e3],ebp
  404cf7:	mov    bl,0xd1
  404cf9:	fisub  DWORD PTR [eax-0x72]
  404cfc:	test   cl,al
  404cfe:	cld    
  404cff:	xchg   esp,eax
  404d00:	mov    dl,0x3a
  404d02:	inc    esi
  404d03:	mov    esp,0x356ff6c9
  404d08:	aam    0x72
  404d0a:	sar    BYTE PTR [eax-0x1769d684],0x9d
  404d11:	jnp    0x404c9d
  404d13:	jbe    0x404cc2
  404d15:	pop    ds
  404d16:	mov    edi,0xc3bf88a6
  404d1b:	(bad)  
  404d1c:	scas   eax,DWORD PTR es:[edi]
  404d1d:	push   ebx
  404d1e:	sbb    dh,dl
  404d20:	jo     0x404d3d
  404d22:	clc    
  404d23:	adc    ecx,DWORD PTR [edi]
  404d25:	inc    ebp
  404d26:	sub    BYTE PTR [ecx-0x2fdc0c5d],0x80
  404d2d:	out    dx,al
  404d2e:	and    DWORD PTR [ecx],ebp
  404d30:	int    0x84
  404d32:	push   0xbe468fab
  404d37:	aas    
  404d38:	(bad)  
  404d39:	ret    0xed14
  404d3c:	lds    esi,FWORD PTR [esi]
  404d3e:	mov    esp,0xc40f372
  404d43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d44:	sub    ch,BYTE PTR [eax-0x5e801522]
  404d4a:	(bad)  
  404d4b:	lods   al,BYTE PTR ds:[esi]
  404d4c:	mov    bl,0x3
  404d4e:	ins    DWORD PTR es:[edi],dx
  404d4f:	fadd   DWORD PTR [edx+0x386fd653]
  404d55:	jl     0x404d86
  404d57:	mov    edi,0xf406bb29
  404d5c:	push   edi
  404d5d:	mov    edx,0x99aff0b9
  404d62:	cld    
  404d63:	sub    al,BYTE PTR [ebx]
  404d65:	xchg   edx,eax
  404d66:	call   0xfa67c2bb
  404d6b:	pop    eax
  404d6c:	mov    edx,0x110c87b5
  404d71:	dec    esp
  404d72:	fdivr  DWORD PTR [ecx+edi*2-0xd]
  404d76:	inc    ebx
  404d77:	cld    
  404d78:	push   ds
  404d79:	xlat   BYTE PTR ds:[ebx]
  404d7a:	(bad)  
  404d7b:	and    ch,BYTE PTR [ecx]
  404d7d:	sub    ah,BYTE PTR [edx-0x17]
  404d80:	into   
  404d81:	scas   eax,DWORD PTR es:[edi]
  404d82:	ds je  0x404d49
  404d85:	mov    ebp,0xf5e1e086
  404d8a:	loope  0x404d94
  404d8c:	shl    ch,1
  404d8e:	repnz sbb ch,dh
  404d91:	adc    ebp,DWORD PTR [edi]
  404d93:	mov    edi,0x306964d8
  404d98:	adc    eax,0x5836f987
  404d9d:	push   ebx
  404d9e:	or     bh,BYTE PTR [eax+edx*8]
  404da1:	xchg   BYTE PTR [edx],bl
  404da3:	and    eax,0x87462d70
  404da8:	call   0x191d80df
  404dad:	jl     0x404dd0
  404daf:	stos   DWORD PTR es:[edi],eax
  404db0:	cmc    
  404db1:	mov    WORD PTR [edi+0x4a],?
  404db4:	jo     0x404e1b
  404db6:	retf   
  404db7:	inc    esi
  404db8:	pop    edx
  404db9:	mov    eax,ds:0x16ed16f1
  404dbe:	mov    cs,WORD PTR [ebx]
  404dc0:	pusha  
  404dc1:	les    edi,FWORD PTR [edx+0x2f]
  404dc4:	push   es
  404dc5:	push   edx
  404dc6:	aam    0x82
  404dc8:	enter  0xe34,0xae
  404dcc:	sbb    DWORD PTR [esi],esp
  404dce:	in     al,dx
  404dcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404dd0:	rcr    BYTE PTR [eax],0xc8
  404dd3:	in     al,0x3b
  404dd5:	mov    esp,0xb4030d93
  404dda:	scas   eax,DWORD PTR es:[edi]
  404ddb:	mov    WORD PTR [esi+0xd3b316d],?
  404de1:	mov    edi,0x6ad88d53
  404de6:	aam    0x59
  404de8:	mov    ds:0x50847f1e,al
  404ded:	dec    ebx
  404dee:	push   cs
  404def:	mov    cl,bh
  404df1:	sar    DWORD PTR [esi+0x62],cl
  404df4:	(bad)  
  404df5:	repnz adc BYTE PTR [edx-0x9],dl
  404df9:	mov    bp,0x1d9f
  404dfd:	fs leave 
  404dff:	pop    edi
  404e00:	mov    edi,DWORD PTR [ecx-0x58]
  404e03:	rol    ch,1
  404e05:	daa    
  404e06:	adc    bh,BYTE PTR [ecx-0x4a]
  404e09:	scas   al,BYTE PTR es:[edi]
  404e0a:	xor    eax,esi
  404e0c:	clc    
  404e0d:	popf   
  404e0e:	jg     0x404e2a
  404e10:	cmp    DWORD PTR [ecx+0x45],edx
  404e13:	in     al,dx
  404e14:	hlt    
  404e15:	jge    0x404e05
  404e17:	jmp    0x404db2
  404e19:	loope  0x404e3a
  404e1b:	aam    0x2
  404e1d:	fwait
  404e1e:	clc    
  404e1f:	push   edx
  404e20:	daa    
  404e21:	mov    edx,0x3cb2d4a2
  404e26:	pusha  
  404e27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e28:	call   0x573a5a7f
  404e2d:	iret   
  404e2e:	pop    ebp
  404e2f:	cld    
  404e30:	sbb    DWORD PTR [edi+0x49],edx
  404e33:	jmp    0x14fc:0xcce6477c
  404e3a:	or     al,0xd6
  404e3c:	aam    0xb1
  404e3e:	(bad)  
  404e3f:	xor    al,0x5f
  404e41:	test   al,0xdb
  404e43:	mov    esp,0x4456dd09
  404e48:	jo     0x404df3
  404e4a:	ja     0x404e38
  404e4c:	out    0xad,eax
  404e4e:	pop    ebp
  404e4f:	imul   ebp,DWORD PTR [edi+0x57ff10cb],0xea35cb99
  404e59:	aas    
  404e5a:	push   0xda33c2a4
  404e5f:	fdiv   DWORD PTR [esi]
  404e61:	aam    0xf4
  404e63:	call   0xa3b05b69
  404e68:	xchg   edi,eax
  404e69:	add    al,0x19
  404e6b:	imul   eax,DWORD PTR [eax-0x1dc7ca83],0x8e7e694e
  404e75:	mov    bh,0xfe
  404e77:	out    0xcb,eax
  404e79:	lahf   
  404e7a:	popf   
  404e7b:	arpl   WORD PTR [edi],si
  404e7d:	rcl    DWORD PTR [esi+ebx*8-0x16789ee9],0x7f
  404e85:	push   ebx
  404e86:	test   DWORD PTR [esi-0x27],ecx
  404e89:	pop    edx
  404e8a:	jmp    FWORD PTR ds:0xe77dbcbb
  404e90:	je     0x404ec9
  404e92:	enter  0xa53b,0xbe
  404e96:	mov    esi,0xc4e5d7c1
  404e9b:	fxtract 
  404e9d:	mov    ah,0xcb
  404e9f:	inc    esi
  404ea0:	push   ebx
  404ea1:	rcl    DWORD PTR ds:0x2dc2de0e,cl
  404ea7:	outs   dx,DWORD PTR ds:[esi]
  404ea8:	movlps QWORD PTR [edx+0x4],xmm5
  404eac:	sub    eax,0x428667c8
  404eb1:	lock fisub WORD PTR [edx]
  404eb4:	call   0x45a1:0x53b908ef
  404ebb:	push   edx
  404ebc:	les    ebp,FWORD PTR [ebp-0x71]
  404ebf:	test   DWORD PTR [ecx+0x30e3ac2c],eax
  404ec5:	test   BYTE PTR [eax],ah
  404ec7:	fmul   st,st(2)
  404ec9:	cld    
  404eca:	mov    ds:0x327643a7,eax
  404ecf:	aas    
  404ed0:	gs retf 0x4f61
  404ed4:	(bad)  
  404ed5:	out    0x5c,eax
  404ed7:	lods   eax,DWORD PTR ds:[esi]
  404ed8:	mov    es,WORD PTR [edx-0x48895580]
  404ede:	div    DWORD PTR [edx]
  404ee0:	mov    BYTE PTR ds:0xcb043d80,bl
  404ee6:	repnz retf 
  404ee8:	cmp    ebp,eax
  404eea:	cmp    DWORD PTR [esi],esi
  404eec:	inc    ebp
  404eed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404eee:	push   esp
  404eef:	shl    BYTE PTR [ecx],1
  404ef1:	mov    eax,0x51b09673
  404ef6:	rcr    BYTE PTR ds:0x1ed0f0c4,cl
  404efc:	into   
  404efd:	aam    0x58
  404eff:	jns    0x404f60
  404f01:	mov    ch,0xaf
  404f03:	dec    ecx
  404f04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f05:	or     al,0xbe
  404f07:	or     DWORD PTR [ebx+eax*1-0x62],ecx
  404f0b:	xchg   esp,eax
  404f0c:	aaa    
  404f0d:	popf   
  404f0e:	xor    ah,BYTE PTR [edi+ecx*8]
  404f11:	jge    0x404f70
  404f13:	jp     0x404ef5
  404f15:	xchg   DWORD PTR [eax],ebx
  404f17:	mov    bl,0x7
  404f19:	retf   0x603f
  404f1c:	inc    ebx
  404f1d:	push   ds
  404f1e:	stc    
  404f1f:	rol    DWORD PTR [edi-0x50],1
  404f22:	add    DWORD PTR ss:[eax+0x6ea33c39],esp
  404f29:	jb     0x404f88
  404f2b:	sahf   
  404f2c:	jbe    0x404f25
  404f2e:	sub    edi,esi
  404f30:	mov    ?,WORD PTR [ebx+eax*1+0xfcc3e02]
  404f37:	xchg   esi,eax
  404f38:	xor    ebx,DWORD PTR [esi]
  404f3a:	push   ebp
  404f3b:	jg     0x404f31
  404f3d:	mov    DWORD PTR [ecx],eax
  404f3f:	push   edx
  404f40:	stc    
  404f41:	and    eax,0xd639b69e
  404f46:	inc    ebp
  404f47:	cli    
  404f48:	sbb    BYTE PTR [esi+0x52f9c976],ah
  404f4e:	adc    cl,0x7b
  404f51:	dec    ebx
  404f52:	jecxz  0x404f25
  404f54:	clc    
  404f55:	inc    edi
  404f56:	outs   dx,BYTE PTR ds:[esi]
  404f57:	pop    edi
  404f58:	aaa    
  404f59:	cdq    
  404f5a:	addr16 (bad) 
  404f5c:	and    BYTE PTR [esi-0x54],dl
  404f5f:	ror    BYTE PTR [ecx],1
  404f61:	mov    esi,edi
  404f63:	add    al,0xc6
  404f65:	dec    BYTE PTR ds:0x4eeb03c1
  404f6b:	push   edx
  404f6c:	mov    eax,ds:0x7ab126c6
  404f71:	push   0xa3b9f60b
  404f76:	or     al,0x79
  404f78:	div    DWORD PTR [ebp+0x75]
  404f7b:	fidivr WORD PTR [ebx-0x31baa2fd]
  404f81:	dec    edi
  404f82:	enter  0x2705,0xa0
  404f86:	push   0xffffffad
  404f88:	jp     0x404f3f
  404f8a:	or     DWORD PTR [ebx-0x4d],esi
  404f8d:	(bad)  
  404f8f:	jbe    0x40500c
  404f91:	jne    0x404fe6
  404f93:	dec    ecx
  404f94:	xor    esi,ebp
  404f96:	retf   0x4c47
  404f99:	in     eax,dx
  404f9a:	mov    DWORD PTR [esi+edi*8+0x7ca0a23d],edx
  404fa1:	or     al,0x1f
  404fa3:	leave  
  404fa4:	inc    eax
  404fa5:	repz pop esi
  404fa7:	inc    edx
  404fa8:	daa    
  404fa9:	ficom  DWORD PTR ds:0x7bf25a88
  404faf:	xchg   esi,eax
  404fb0:	push   cs
  404fb1:	jno    0x404ffd
  404fb3:	fdiv   QWORD PTR [ecx]
  404fb5:	es (bad) 
  404fb7:	xchg   esi,eax
  404fb8:	test   BYTE PTR [esi+0x504f3233],0xad
  404fbf:	(bad)  
  404fc0:	jle    0x405003
  404fc2:	clc    
  404fc3:	je     0x404ff5
  404fc5:	and    al,0xf4
  404fc7:	adc    dl,bh
  404fc9:	pop    ebx
  404fca:	mov    eax,ds:0xf137960e
  404fcf:	pop    ebx
  404fd0:	arpl   si,di
  404fd2:	adc    al,0x54
  404fd4:	xchg   dl,bl
  404fd6:	(bad)  [ecx]
  404fd8:	ss jnp 0x405005
  404fdb:	js     0x405054
  404fdd:	cs (bad) 
  404fe1:	cli    
  404fe2:	xor    eax,0x8eb8cc91
  404fe7:	jg     0x40505d
  404fe9:	out    0xd5,al
  404feb:	xlat   BYTE PTR ds:[ebx]
  404fec:	(bad)  
  404fed:	in     al,dx
  404fee:	sub    dh,BYTE PTR [ebp+0x2350ad10]
  404ff4:	adc    bh,0xed
  404ff7:	mov    dh,0xe4
  404ff9:	adc    al,BYTE PTR [ecx*1-0x1bfd2e80]
  405000:	jb     0x404fe6
  405002:	sub    eax,0x3f491cda
  405007:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405008:	mov    BYTE PTR ds:0xb7802956,bl
  40500e:	dec    BYTE PTR [edx+0x68]
  405011:	xor    DWORD PTR [esi],esi
  405013:	xor    al,BYTE PTR [edi+0x3d]
  405016:	inc    ecx
  405017:	or     cl,al
  405019:	xchg   ebx,eax
  40501a:	repnz retf 
  40501c:	or     eax,0x3e5c032e
  405021:	imul   ecx,DWORD PTR [edx-0x6d],0x556792da
  405028:	imul   eax,DWORD PTR [edi+0x11ae8261],0xb2162b81
  405032:	xchg   ebp,eax
  405033:	(bad)  
  405034:	(bad)  
  405035:	data16 std 
  405037:	cmp    eax,DWORD PTR [ebx+0x543029b3]
  40503d:	xchg   esp,eax
  40503e:	mov    eax,0x6474387e
  405043:	add    DWORD PTR [ebx-0xc],0xfffffffd
  405047:	fwait
  405048:	retf   0x737e
  40504b:	dec    ebp
  40504c:	xchg   ebx,eax
  40504d:	stc    
  40504e:	icebp  
  40504f:	xor    BYTE PTR [edx+edx*2+0x7c399c1f],bh
  405056:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405057:	ds adc dl,0x63
  40505b:	mov    ch,al
  40505d:	stos   DWORD PTR es:[edi],eax
  40505e:	jns    0x4050c7
  405060:	sub    eax,0xcbd00c73
  405065:	xor    BYTE PTR [edi-0x789d3468],ch
  40506b:	xchg   edx,eax
  40506c:	push   ds
  40506d:	or     al,0xd9
  40506f:	(bad)  
  405070:	bound  esi,QWORD PTR [edi]
  405072:	pop    es
  405073:	mov    ecx,DWORD PTR [ecx-0x11]
  405076:	fs inc edi
  405078:	and    al,0x7a
  40507a:	xchg   edi,eax
  40507b:	and    ecx,DWORD PTR [ecx]
  40507d:	lods   al,BYTE PTR ds:[esi]
  40507e:	cwde   
  40507f:	neg    DWORD PTR [esi+esi*4-0x4]
  405083:	adc    al,0xf3
  405085:	mov    ds:0x319b7370,eax
  40508a:	push   0xfd777b3
  40508f:	and    ebp,DWORD PTR [edi+edx*4+0x75c2f778]
  405096:	aam    0xb6
  405098:	xchg   edi,esp
  40509a:	fucom  st(6)
  40509c:	pop    edx
  40509d:	mov    al,0xad
  40509f:	scas   al,BYTE PTR es:[edi]
  4050a0:	adc    cl,BYTE PTR [ebx]
  4050a2:	aam    0x4b
  4050a4:	and    al,0xaf
  4050a6:	inc    edi
  4050a7:	ficom  WORD PTR [eax-0x7ce50baa]
  4050ad:	sbb    al,0x2b
  4050af:	xchg   DWORD PTR [ecx],eax
  4050b1:	pop    eax
  4050b2:	push   es
  4050b3:	test   ebp,edx
  4050b5:	push   es
  4050b6:	mov    bh,BYTE PTR [ebp+0x1b]
  4050b9:	adc    BYTE PTR [ebp+0x7b],bl
  4050bc:	pop    edx
  4050bd:	bound  edi,QWORD PTR [esi+0x351fd128]
  4050c3:	dec    ebx
  4050c4:	push   ecx
  4050c5:	outs   dx,BYTE PTR ds:[esi]
  4050c6:	cld    
  4050c7:	adc    DWORD PTR [edi-0x1],edx
  4050ca:	add    ebx,DWORD PTR [ecx+0x38]
  4050cd:	pop    edi
  4050ce:	cdq    
  4050cf:	pop    es
  4050d0:	pop    eax
  4050d1:	in     eax,dx
  4050d2:	adc    eax,0x433945d1
  4050d7:	add    esp,DWORD PTR [edx+ebx*8+0x70]
  4050db:	loope  0x405091
  4050dd:	dec    edx
  4050de:	or     bh,BYTE PTR [ecx]
  4050e0:	stos   BYTE PTR es:[edi],al
  4050e1:	jge    0x405092
  4050e3:	call   0xa76866ec
  4050e8:	jbe    0x405120
  4050ea:	inc    eax
  4050eb:	(bad)  
  4050ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4050ed:	adc    al,0x14
  4050ef:	cmp    dl,BYTE PTR [edx-0x19bce979]
  4050f5:	call   DWORD PTR ds:0x1c6a0a7d
  4050fb:	pusha  
  4050fc:	lea    ebp,[edi-0x3e]
  4050ff:	loopne 0x405147
  405101:	les    ebx,FWORD PTR [ebx]
  405103:	or     al,0x17
  405105:	popa   
  405106:	outs   dx,DWORD PTR ds:[esi]
  405107:	mov    ch,0x93
  405109:	ds f2xm1 
  40510c:	es bnd jbe 0x4050b5
  405110:	test   al,0xbb
  405112:	mov    ecx,0xab3110e5
  405117:	jns    0x4050e5
  405119:	outs   dx,BYTE PTR ds:[esi]
  40511a:	push   esi
  40511b:	add    DWORD PTR [esp+edi*1-0x16],ebp
  40511f:	sbb    cl,BYTE PTR [esi]
  405121:	cdq    
  405122:	mov    DWORD PTR [ecx],edi
  405124:	mov    bh,0x47
  405126:	jmp    0x405103
  405128:	test   al,0x5c
  40512a:	ret    
  40512b:	int    0xbf
  40512d:	push   ebx
  40512e:	call   0x8c03:0xf30522ba
  405135:	push   es
  405136:	psubusw mm1,mm5
  405139:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40513a:	and    DWORD PTR [ebx-0x2996a07],ecx
  405140:	push   esi
  405141:	test   al,0x82
  405143:	sbb    dl,dh
  405145:	xchg   ecx,eax
  405146:	ret    0x7440
  405149:	ret    0xe939
  40514c:	loopne 0x4051ae
  40514e:	dec    edx
  40514f:	lods   al,BYTE PTR ds:[esi]
  405150:	leave  
  405151:	xchg   BYTE PTR [ecx+0x1f],bh
  405154:	dec    esp
  405155:	aam    0xf3
  405157:	xor    dl,BYTE PTR [eax-0x74]
  40515a:	jb     0x405115
  40515c:	sbb    bl,ah
  40515e:	pop    esp
  40515f:	sbb    esi,DWORD PTR ds:0x8995c252
  405165:	les    esp,FWORD PTR [si]
  405168:	and    esi,DWORD PTR [edx-0x5b2c010c]
  40516e:	xor    eax,0xb9a51a4a
  405173:	mov    ah,0x9
  405175:	inc    esp
  405176:	in     al,dx
  405177:	jg     0x4051f8
  405179:	jne    0x405111
  40517b:	lock jmp 0xddd8:0x1dd615cd
  405183:	sub    al,0x1d
  405185:	sbb    eax,0xec901215
  40518a:	push   eax
  40518b:	imul   ecx,DWORD PTR gs:[eax+0x41028516],0xffffffb7
  405193:	cmp    BYTE PTR [ebp+0x22e082be],dl
  405199:	xchg   ebx,eax
  40519a:	enter  0x1cd8,0x95
  40519e:	ss xchg esi,eax
  4051a0:	adc    eax,0xb2c3b538
  4051a5:	jo     0x4051dc
  4051a7:	vorps  xmm3,xmm7,XMMWORD PTR [eax+ebp*8]
  4051ac:	shl    DWORD PTR [ecx-0x4a01c81a],0xbc
  4051b3:	xlat   BYTE PTR ds:[ebx]
  4051b4:	ins    DWORD PTR es:[edi],dx
  4051b5:	out    0x4f,al
  4051b7:	aas    
  4051b8:	aas    
  4051b9:	jnp    0x4051e0
  4051bb:	mov    cl,0xc3
  4051bd:	in     al,dx
  4051be:	call   0x54f4:0xad659d11
  4051c5:	xchg   edi,eax
  4051c6:	in     al,0xdb
  4051c8:	imul   DWORD PTR [esi-0x38]
  4051cb:	(bad)
  4051ce:	pop    ecx
  4051cf:	lds    esi,FWORD PTR [eax+ebx*4+0x77]
  4051d3:	lds    eax,FWORD PTR [ebp+0x40]
  4051d6:	cmp    BYTE PTR [ecx-0x5],0x83
  4051da:	push   ebx
  4051db:	ss (bad) 
  4051de:	xor    ecx,ebp
  4051e0:	push   edx
  4051e1:	mov    ebp,0x2c842f18
  4051e6:	sbb    bh,bl
  4051e8:	and    BYTE PTR [eax],bh
  4051ea:	(bad)  
  4051eb:	mov    al,ds:0x3d150a4c
  4051f0:	fcmovbe st,st(5)
  4051f2:	dec    ebx
  4051f3:	stos   DWORD PTR es:[edi],eax
  4051f4:	xor    eax,0x36d19f4
  4051f9:	test   dl,cl
  4051fb:	push   ebx
  4051fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051fd:	cdq    
  4051fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051ff:	in     eax,0x14
  405201:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405202:	ins    DWORD PTR es:[edi],dx
  405203:	je     0x4051af
  405205:	push   eax
  405206:	int    0x30
  405208:	div    al
  40520a:	stos   DWORD PTR es:[edi],eax
  40520b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40520c:	push   eax
  40520d:	cmp    eax,esp
  40520f:	fadd   DWORD PTR [eax-0x7ba990f1]
  405215:	lahf   
  405216:	in     al,0x33
  405218:	out    dx,al
  405219:	pop    esp
  40521a:	fwait
  40521b:	icebp  
  40521c:	pushf  
  40521d:	jns    0x4051a4
  40521f:	and    ch,BYTE PTR [ecx]
  405221:	pop    edi
  405222:	mov    DWORD PTR fs:[edi+edx*2+0x55],edx
  405227:	mov    bl,0xfe
  405229:	iret   
  40522a:	sti    
  40522b:	test   al,0xf3
  40522d:	nop
  40522e:	ins    BYTE PTR es:[edi],dx
  40522f:	push   ecx
  405230:	lea    esp,ds:0xc71f0b7b
  405236:	addr16 out dx,al
  405238:	pop    edi
  405239:	outs   dx,DWORD PTR ds:[esi]
  40523a:	xchg   esi,eax
  40523b:	aas    
  40523c:	and    BYTE PTR [eax],0x1b
  40523f:	pushf  
  405240:	rol    BYTE PTR [edx],0xbd
  405243:	add    edi,DWORD PTR [esi-0x3d]
  405246:	or     eax,0x25214b59
  40524b:	inc    esi
  40524c:	jmp    DWORD PTR [ecx]
  40524e:	div    al
  405250:	fild   WORD PTR [esi]
  405252:	outs   dx,DWORD PTR ds:[esi]
  405253:	fcmovne st,st(5)
  405255:	fadd   DWORD PTR [ecx-0x3a]
  405258:	inc    edx
  405259:	enter  0x8c56,0xf
  40525d:	rol    DWORD PTR [eax-0x7],1
  405260:	pop    ecx
  405261:	test   DWORD PTR [ebx],edx
  405263:	loop   0x40529e
  405265:	sbb    eax,0x8a0368bc
  40526a:	push   ds
  40526b:	sub    dh,BYTE PTR [eax-0xd]
  40526e:	std    
  40526f:	push   edi
  405270:	mov    dl,0x7e
  405272:	mov    DWORD PTR [ebx-0x31],edx
  405275:	jns    0x405257
  405277:	sar    dh,cl
  405279:	js     0x405250
  40527b:	mov    ecx,0x11f6bbac
  405280:	test   DWORD PTR [edi+0x24],ebp
  405283:	popa   
  405284:	outs   dx,BYTE PTR ds:[esi]
  405285:	je     0x40528b
  405287:	ror    BYTE PTR [eax],0xa7
  40528a:	icebp  
  40528b:	nop
  40528c:	out    dx,al
  40528d:	in     al,dx
  40528e:	sbb    DWORD PTR [esp+ebx*4-0x4e],ebp
  405292:	pop    ds
  405293:	(bad)  
  405294:	jne    0x405250
  405296:	cmp    DWORD PTR [ebx-0x24],ebx
  405299:	push   DWORD PTR [esi+0x20d4ac22]
  40529f:	cmp    ah,bl
  4052a1:	es aad 0x11
  4052a4:	js     0x405231
  4052a6:	pop    edx
  4052a7:	pop    ds
  4052a8:	nop
  4052a9:	jo     0x4052fc
  4052ab:	inc    esp
  4052ac:	shl    DWORD PTR [eax-0x4a],1
  4052af:	dec    esi
  4052b0:	ret    0xf40a
  4052b3:	mov    al,ds:0x6127abc8
  4052b8:	ficomp WORD PTR [eax-0x21]
  4052bb:	xor    bl,ch
  4052bd:	mov    esp,0xf146c151
  4052c2:	test   DWORD PTR [ecx],ebp
  4052c4:	jne    0x4052c6
  4052c6:	ret    
  4052c7:	int3   
  4052c8:	stc    
  4052c9:	psrlq  mm2,mm4
  4052cc:	popa   
  4052cd:	hlt    
  4052ce:	out    dx,al
  4052cf:	mov    ss,WORD PTR [edx]
  4052d1:	imul   ebp,DWORD PTR [edi],0xffffffa8
  4052d4:	fsubr  DWORD PTR [edx]
  4052d7:	cld    
  4052d8:	call   0xe5918206
  4052dd:	push   edx
  4052de:	pop    ds
  4052df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052e0:	add    al,0x3f
  4052e2:	ds repz push ebx
  4052e5:	cmp    al,0x9a
  4052e7:	mov    edx,0x26a529bc
  4052ec:	pop    esi
  4052ed:	lods   eax,DWORD PTR ds:[esi]
  4052ee:	iret   
  4052ef:	jmp    0x4052ad
  4052f1:	cmp    DWORD PTR [esi-0x5dc2685f],edx
  4052f7:	outs   dx,BYTE PTR ds:[esi]
  4052f8:	pusha  
  4052f9:	mov    bh,BYTE PTR [ebx]
  4052fb:	add    ebp,esi
  4052fd:	aaa    
  4052fe:	outs   dx,BYTE PTR ds:[esi]
  4052ff:	mov    esp,0x72053f77
  405304:	sub    DWORD PTR [eax+eax*1],esi
  405307:	push   ecx
  405308:	dec    eax
  405309:	mov    ecx,0x711fbf92
  40530e:	xor    ah,cl
  405310:	mov    edx,0x26336407
  405315:	and    bl,BYTE PTR [ebx+0x21d33e63]
  40531b:	ror    al,cl
  40531d:	retf   0x203b
  405320:	test   BYTE PTR [eax+0x2e4fad63],0xf4
  405327:	cwde   
  405328:	gs cdq 
  40532a:	ins    DWORD PTR es:[edi],dx
  40532b:	mov    WORD PTR [eax+0x74],gs
  40532e:	xchg   esp,eax
  40532f:	out    dx,al
  405330:	mov    ds:0x40d0ffdb,eax
  405335:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405336:	call   0x1aea:0x3c319e04
  40533d:	stos   DWORD PTR es:[edi],eax
  40533e:	pushf  
  40533f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405340:	shl    BYTE PTR [ebp-0x61],0x8b
  405344:	xchg   ecx,eax
  405345:	jl     0x405375
  405347:	rcr    BYTE PTR [ebp+0x56a0c3dc],1
  40534d:	mov    ds:0xd30642a3,al
  405352:	jecxz  0x405303
  405354:	popf   
  405355:	adc    al,0x7e
  405357:	pop    esp
  405358:	(bad)  
  405359:	jnp    0x40536c
  40535b:	xor    DWORD PTR [ebp+0x7c],ebp
  40535e:	aaa    
  40535f:	test   eax,0x674f8974
  405364:	push   eax
  405365:	aas    
  405366:	(bad)  
  405367:	int    0x97
  405369:	fist   WORD PTR [ecx]
  40536b:	sub    edi,DWORD PTR [ebp-0x42]
  40536e:	xchg   esi,eax
  40536f:	shl    bh,0xe3
  405372:	push   edx
  405373:	dec    edx
  405374:	in     al,dx
  405375:	push   ss
  405376:	lock (bad) 
  405378:	mov    eax,ds:0x5068d637
  40537d:	fsubr  st(0),st
  40537f:	jl     0x4053d2
  405381:	and    BYTE PTR [ebx+0xf],dl
  405384:	fsubr  QWORD PTR [esi-0x5c]
  405387:	imul   edx,DWORD PTR [ebx+ebx*4+0x63],0x94dbdc6
  40538f:	adc    eax,0x244b3542
  405394:	sbb    ah,dh
  405396:	mov    dh,0xd7
  405398:	test   BYTE PTR [edi+0x56],dl
  40539b:	cmp    eax,0xb7d802e1
  4053a0:	xor    DWORD PTR [edx],esp
  4053a2:	and    ecx,DWORD PTR [edi+ebx*8-0xc60d848]
  4053a9:	sub    DWORD PTR [ebp+0x72653340],ebx
  4053af:	ins    BYTE PTR es:[edi],dx
  4053b0:	add    eax,0x7b0f61ae
  4053b5:	pop    ebp
  4053b6:	fisttp WORD PTR [edi]
  4053b8:	add    dh,cl
  4053ba:	mov    WORD PTR [ebx],gs
  4053bc:	dec    ecx
  4053bd:	bound  ebp,QWORD PTR ds:0xe48e441a
  4053c3:	std    
  4053c4:	inc    eax
  4053c5:	dec    edx
  4053c6:	fstp   st(2)
  4053c8:	push   ebp
  4053c9:	in     eax,dx
  4053ca:	repnz arpl WORD PTR [ecx+0x7e],ax
  4053ce:	push   cs
  4053cf:	add    eax,0x50c294fe
  4053d4:	xor    ebp,DWORD PTR ds:0x5d75da5e
  4053da:	jge    0x405411
  4053dc:	scas   al,BYTE PTR es:[edi]
  4053dd:	std    
  4053de:	rcr    BYTE PTR [ebx+0x4cc2cd2e],1
  4053e4:	dec    BYTE PTR [edx+0x5f]
  4053e7:	mov    al,BYTE PTR [esi+0x64]
  4053ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053eb:	or     DWORD PTR [ebx+0x7f1bf8d0],esp
  4053f1:	xor    al,0xfc
  4053f3:	(bad)  
  4053f4:	fdivr  DWORD PTR [ebp+0x3358ef97]
  4053fa:	scas   eax,DWORD PTR es:[edi]
  4053fb:	addr16 clc 
  4053fd:	dec    ebx
  4053fe:	cli    
  4053ff:	aad    0x7f
  405401:	ss xchg ebp,eax
  405403:	cmp    ah,bh
  405405:	push   ebx
  405406:	ja     0x40538a
  405408:	ret    0x3929
  40540b:	sbb    eax,0xe4599c2b
  405410:	test   al,0xf7
  405412:	call   DWORD PTR es:[ebx]
  405415:	mov    ecx,DWORD PTR [eax-0x14]
  405418:	adc    BYTE PTR [ebx+ebx*2],al
  40541b:	xor    al,0xf1
  40541d:	mov    dl,dh
  40541f:	lods   al,BYTE PTR ds:[esi]
  405420:	cs cs dec edi
  405423:	(bad)  
  405424:	movnti DWORD PTR [esi+0x19],ebp
  405428:	dec    ebx
  405429:	pop    ds
  40542a:	pop    ebp
  40542b:	add    BYTE PTR [edx-0x6fa39c96],dh
  405431:	inc    esi
  405432:	sbb    bh,BYTE PTR [eax]
  405434:	stc    
  405435:	inc    ebx
  405436:	inc    ebx
  405437:	mov    gs,WORD PTR [esp+ecx*1]
  40543a:	sub    BYTE PTR [ecx+0x1e],dl
  40543d:	mov    cl,0xc6
  40543f:	or     bl,BYTE PTR [eax]
  405441:	push   cs
  405442:	push   ebp
  405443:	cmc    
  405444:	xchg   esi,eax
  405445:	or     DWORD PTR [eax],ecx
  405447:	(bad)  
  405448:	dec    edi
  405449:	pop    ebp
  40544a:	dec    ecx
  40544b:	mov    WORD PTR ds:0xccd0144e,?
  405451:	outs   dx,BYTE PTR ds:[esi]
  405452:	inc    ebp
  405453:	sti    
  405454:	rcl    BYTE PTR [edx],cl
  405456:	dec    ecx
  405457:	fsub   QWORD PTR [eax-0x4]
  40545b:	sbb    DWORD PTR [esi-0xf4528b0],edx
  405461:	cmp    esi,esp
  405463:	mov    eax,0xa001c5a2
  405468:	jae    0x405400
  40546a:	int    0x3b
  40546c:	in     eax,0x84
  40546e:	std    
  40546f:	mov    dl,0x96
  405471:	xlat   BYTE PTR ds:[ebx]
  405472:	push   esp
  405473:	and    DWORD PTR [esi-0x6f59e72c],ebp
  405479:	cwde   
  40547a:	cdq    
  40547b:	and    eax,0xd09813f2
  405480:	loope  0x405466
  405482:	or     dh,BYTE PTR [ebp-0x7de44f10]
  405488:	cwde   
  405489:	repz pop edx
  40548b:	sbb    ecx,DWORD PTR [ecx]
  40548d:	jle    0x405412
  40548f:	inc    edi
  405490:	push   ss
  405491:	add    bl,bl
  405493:	scas   al,BYTE PTR es:[edi]
  405494:	pop    ss
  405495:	int3   
  405496:	mov    es,WORD PTR [esi-0x52]
  405499:	jo     0x4054e3
  40549b:	add    esp,DWORD PTR [esi]
  40549d:	xor    eax,0x53548c7
  4054a2:	stos   DWORD PTR es:[edi],eax
  4054a3:	xchg   edi,eax
  4054a4:	fabs   
  4054a6:	add    esi,DWORD PTR [ebp-0x18844c20]
  4054ac:	adc    BYTE PTR [edx],0x48
  4054af:	loope  0x405445
  4054b1:	xchg   edi,eax
  4054b2:	or     BYTE PTR [eax],bl
  4054b4:	sub    BYTE PTR [eax-0x3297026a],0x18
  4054bb:	pop    edx
  4054bc:	jno    0x40551c
  4054be:	xchg   ecx,eax
  4054bf:	in     eax,dx
  4054c0:	icebp  
  4054c1:	ror    BYTE PTR [esi],0x86
  4054c4:	and    DWORD PTR [esi],ebp
  4054c6:	jg     0x405545
  4054c8:	mov    BYTE PTR [ebx],cl
  4054ca:	int    0xbb
  4054cc:	ds cmp ebp,edi
  4054cf:	ss test al,0xf7
  4054d2:	(bad)  
  4054d3:	clc    
  4054d4:	stc    
  4054d5:	jge    0x405462
  4054d7:	mov    cl,0x96
  4054d9:	iret   
  4054da:	cmpxchg DWORD PTR [ebx-0x6945c226],ecx
  4054e1:	rol    BYTE PTR [edi+0x4bc3c7e6],1
  4054e7:	dec    esp
  4054e8:	and    edi,DWORD PTR [ebx+0x4b9acfec]
  4054ee:	pop    esi
  4054ef:	pop    ecx
  4054f0:	in     eax,0xd4
  4054f2:	jg     0x405540
  4054f4:	setb   BYTE PTR [edi]
  4054f7:	or     eax,0x62a34f5b
  4054fc:	inc    esp
  4054fd:	cmp    eax,ebp
  4054ff:	mov    ds:0xa9f33a3f,al
  405504:	sbb    al,0x67
  405506:	inc    ebx
  405507:	repz add DWORD PTR [edx+eiz*2+0x42021b44],0xa70f3d24
  405513:	mov    dh,BYTE PTR [ebp+0x34]
  405516:	scas   eax,DWORD PTR es:[edi]
  405517:	xchg   edi,eax
  405518:	push   ss
  405519:	inc    ebp
  40551a:	rcr    eax,0xfa
  40551d:	xchg   esp,eax
  40551e:	xchg   edi,eax
  40551f:	jb     0x405573
  405521:	jne    0x405579
  405523:	push   ebp
  405524:	sahf   
  405525:	test   eax,0xb1d5259e
  40552a:	jo     0x405584
  40552c:	sti    
  40552d:	cwde   
  40552e:	and    al,BYTE PTR [ebp-0x41a7963f]
  405534:	data16 jno 0x4054c3
  405537:	or     cl,BYTE PTR ds:0x720572fd
  40553d:	enter  0xa394,0x85
  405541:	fcmove st,st(7)
  405543:	xchg   edx,eax
  405544:	jbe    0x405564
  405546:	or     ebp,ebx
  405548:	aad    0xba
  40554a:	fstp   DWORD PTR [eax]
  40554c:	adc    DWORD PTR [edi+0xad2e8fd],0x5a
  405553:	jl     0x40551c
  405555:	ja     0x40557b
  405557:	aaa    
  405558:	fsubr  st(2),st
  40555a:	pop    edx
  40555b:	or     esi,DWORD PTR [ebx+0x60633b2e]
  405561:	push   ebx
  405562:	dec    edx
  405563:	gs adc dl,ch
  405566:	mov    dh,BYTE PTR [ecx]
  405568:	(bad)  
  405569:	pushf  
  40556a:	push   ss
  40556b:	stc    
  40556c:	mov    esp,0x82a9929d
  405571:	sub    DWORD PTR [edi-0x76],esi
  405574:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405575:	nop
  405576:	lahf   
  405577:	mov    eax,0x9ec1ae7f
  40557c:	inc    edx
  40557d:	cdq    
  40557e:	xor    eax,0x118fe59c
  405583:	shl    BYTE PTR ds:[ecx-0x5],1
  405587:	mov    esi,0x7468e81
  40558c:	pop    ss
  40558d:	push   DWORD PTR [eax]
  40558f:	push   eax
  405590:	push   ss
  405591:	in     eax,dx
  405592:	pop    eax
  405593:	dec    eax
  405594:	or     al,0x4d
  405596:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405597:	and    al,0x87
  405599:	test   al,0xaa
  40559b:	inc    esi
  40559c:	mov    edi,0x757d224f
  4055a1:	or     eax,0x4e76b45a
  4055a6:	loop   0x40554d
  4055a8:	pusha  
  4055a9:	arpl   WORD PTR [edi+ecx*8-0x4c798280],dx
  4055b0:	call   0x46f4713d
  4055b5:	jmp    0x89cd:0xd4de1a54
  4055bc:	pop    ss
  4055bd:	add    bl,BYTE PTR [ebx-0x69]
  4055c0:	popf   
  4055c1:	pop    ebx
  4055c2:	test   BYTE PTR [esp+eax*4-0x53c95ebc],bh
  4055c9:	data16 clc 
  4055cb:	shl    BYTE PTR [edi+0x62bc0f01],1
  4055d1:	sbb    ebx,ebx
  4055d3:	mov    bl,0x30
  4055d5:	cmp    esi,ebp
  4055d7:	das    
  4055d8:	mov    ds:0xc29665ed,al
  4055dd:	into   
  4055de:	outs   dx,BYTE PTR ds:[esi]
  4055df:	imul   edx,DWORD PTR [esi],0x9c6fb341
  4055e5:	test   eax,0x86c5c41a
  4055ea:	push   es
  4055eb:	inc    esp
  4055ec:	imul   esp,DWORD PTR [edx-0x2f],0x45
  4055f0:	ds xor ebp,edi
  4055f3:	loope  0x4055c9
  4055f5:	and    al,0xa4
  4055f7:	push   0x44
  4055f9:	cmp    al,0x35
  4055fb:	cmp    eax,0xfdf49cc4
  405600:	mov    DWORD PTR [edi],edi
  405602:	dec    esi
  405603:	adc    BYTE PTR [eax-0xd8827bf],cl
  405609:	ins    BYTE PTR es:[edi],dx
  40560a:	cmp    al,0x25
  40560c:	jne    0x40563b
  40560e:	daa    
  40560f:	cli    
  405610:	cli    
  405611:	stc    
  405612:	mov    al,ds:0xb8c12289
  405617:	(bad)  [ebp+0x5f]
  40561b:	nop
  40561c:	icebp  
  40561d:	mov    eax,0x9f101d94
  405622:	outs   dx,BYTE PTR ds:[esi]
  405623:	push   ds
  405624:	inc    ecx
  405625:	(bad)  
  405626:	imul   esp,DWORD PTR gs:[edi],0x4830aab3
  40562d:	pop    ds
  40562e:	adc    ebx,esp
  405630:	aas    
  405631:	scas   eax,DWORD PTR es:[edi]
  405632:	(bad)  
  405634:	mov    ebx,0x355318a
  405639:	ins    DWORD PTR es:[edi],dx
  40563a:	rcr    DWORD PTR [ebx+0x6f9011e],cl
  405640:	enter  0xac39,0x5
  405644:	adc    DWORD PTR [ebx],ecx
  405646:	push   ss
  405647:	addr16 in al,dx
  405649:	jb     0x405675
  40564b:	aam    0xa9
  40564d:	leave  
  40564e:	shr    BYTE PTR ds:[ebp+0x41],1
  405652:	xor    al,0x51
  405654:	mov    esp,0x9905bad8
  405659:	xchg   ebx,eax
  40565a:	add    ch,al
  40565c:	test   eax,0xdee1a6c1
  405661:	imul   esi,DWORD PTR [ecx+0x3c4dd44],0x7f6a4fcf
  40566b:	imul   ebx,ebp,0xe36f4b55
  405671:	sub    bh,ch
  405673:	pop    es
  405674:	(bad)  
  405676:	mov    ah,0x4d
  405678:	test   dh,ch
  40567a:	ins    DWORD PTR es:[edi],dx
  40567b:	das    
  40567c:	into   
  40567d:	std    
  40567e:	fwait
  40567f:	in     eax,dx
  405680:	or     edx,esp
  405682:	mov    esi,0xe888c4d8
  405687:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405688:	sub    eax,0x383a5d85
  40568d:	pop    edx
  40568e:	lock or bh,BYTE PTR [edi]
  405691:	jno    0x405638
  405693:	pop    es
  405694:	out    dx,eax
  405695:	int3   
  405696:	stos   DWORD PTR es:[edi],eax
  405697:	inc    esp
  405698:	dec    esi
  405699:	push   edx
  40569a:	hlt    
  40569b:	popa   
  40569c:	mov    edi,0x1d80c2a4
  4056a1:	pushf  
  4056a2:	push   edx
  4056a3:	and    BYTE PTR [edi-0x65],cl
  4056a6:	in     al,dx
  4056a7:	loopne 0x405656
  4056a9:	clc    
  4056aa:	cmp    DWORD PTR [esi],edi
  4056ac:	mov    cl,0x8f
  4056ae:	shl    DWORD PTR [ebp+eiz*8-0x14],cl
  4056b2:	scas   al,BYTE PTR es:[edi]
  4056b3:	pop    esp
  4056b4:	aam    0xe8
  4056b6:	jmp    0x5735:0x864620b
  4056bd:	arpl   WORD PTR [edi+ebp*4-0x6a453a67],sp
  4056c4:	mov    DWORD PTR [edx-0x40cd7471],ecx
  4056ca:	sbb    esi,DWORD PTR [eax]
  4056cc:	adc    al,0x89
  4056ce:	sbb    esp,DWORD PTR [ecx]
  4056d0:	add    cl,BYTE PTR [edi]
  4056d2:	loop   0x4056dd
  4056d4:	push   0x813973f0
  4056d9:	jg     0x405759
  4056db:	dec    esi
  4056dc:	add    DWORD PTR [edi+ebp*2+0x49],0xb
  4056e1:	stos   BYTE PTR es:[edi],al
  4056e2:	dec    esp
  4056e3:	(bad)  
  4056e4:	sbb    ecx,edi
  4056e6:	out    0x8f,eax
  4056e8:	rcr    BYTE PTR [ebp+eax*1-0x3c],0xc0
  4056ed:	sbb    eax,0x25ac9f1
  4056f2:	mov    bl,0x9c
  4056f4:	mov    al,0xae
  4056f6:	xchg   edx,eax
  4056f7:	pop    edx
  4056f8:	mov    edx,0x72af5ddf
  4056fd:	imul   BYTE PTR [ebp-0x71a45f61]
  405703:	adc    eax,0xb359569a
  405708:	and    DWORD PTR [ebp+0x5a],eax
  40570b:	test   eax,0xe1761a30
  405710:	cs stc 
  405712:	add    BYTE PTR [edi],dh
  405714:	loope  0x405697
  405716:	adc    BYTE PTR [ebx+0x72],ah
  405719:	inc    eax
  40571a:	jg     0x4056db
  40571c:	push   ecx
  40571d:	dec    esp
  40571e:	jb     0x405747
  405720:	nop
  405721:	mov    ecx,0xc20296e0
  405726:	ret    0xdb79
  405729:	add    al,0x5
  40572b:	fisubr WORD PTR [ecx-0x6248acfe]
  405731:	jge    0x4056ce
  405733:	retf   0x7f01
  405736:	jnp    0x405723
  405738:	push   ebx
  405739:	xor    BYTE PTR [esi],dh
  40573b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40573c:	fcomp  st(2)
  40573e:	mov    edx,0x6b58433
  405743:	jge    0x405745
  405745:	test   BYTE PTR [esp+esi*4-0x7f],bh
  405749:	sub    bh,BYTE PTR [edi+0x29f0059b]
  40574f:	test   BYTE PTR [ebx+0x32caa11e],bl
  405755:	dec    ebx
  405756:	push   esi
  405757:	shr    BYTE PTR [ebp-0x5a],0x2
  40575b:	cmp    eax,0xe169674a
  405760:	outs   dx,DWORD PTR ds:[esi]
  405761:	fcmove st,st(7)
  405763:	xor    al,0x3
  405765:	retf   0xbd48
  405768:	xchg   ebx,eax
  405769:	(bad)  
  40576b:	mov    ch,0xb2
  40576d:	and    DWORD PTR [eax-0x30f71d0a],esi
  405773:	xchg   esi,eax
  405774:	sub    BYTE PTR [ecx],ch
  405776:	or     ch,BYTE PTR [ebx]
  405778:	std    
  405779:	dec    esi
  40577a:	loope  0x405700
  40577c:	mov    bh,0xa4
  40577e:	sbb    cl,0x6a
  405781:	rcr    BYTE PTR [ecx+0x132df029],cl
  405787:	dec    ebx
  405788:	fucomi st,st(7)
  40578a:	bound  eax,QWORD PTR [edx-0x6254b5b6]
  405790:	dec    ebp
  405791:	neg    DWORD PTR [edx-0x5f]
  405794:	inc    ebx
  405795:	(bad)  
  405797:	mov    eax,0xe47fcfe9
  40579c:	pop    ebx
  40579d:	loope  0x4057bc
  40579f:	mov    BYTE PTR [esp+edx*2+0x64],dh
  4057a3:	cmp    DWORD PTR [edi-0x346e6bff],0x5c
  4057aa:	xor    BYTE PTR [edi+0x6a8817b9],al
  4057b0:	shl    DWORD PTR [esi+0xa],0x4a
  4057b4:	shl    BYTE PTR [edx],1
  4057b6:	xchg   BYTE PTR [ebp+0x507760f3],ch
  4057bc:	daa    
  4057bd:	xchg   ebp,eax
  4057be:	retf   
  4057bf:	icebp  
  4057c0:	out    0xe8,al
  4057c2:	ret    
  4057c3:	cmp    ecx,eax
  4057c5:	mov    BYTE PTR [esi],cl
  4057c7:	sbb    eax,0x16b7c597
  4057cc:	cmp    DWORD PTR [eax+0x73],esp
  4057cf:	imul   esp,DWORD PTR [edi],0x6d
  4057d2:	and    eax,0x7a8f724b
  4057d7:	sbb    ebx,DWORD PTR [ebp+0x51]
  4057da:	xlat   BYTE PTR ds:[ebx]
  4057db:	pop    ecx
  4057dc:	jno    0x405762
  4057de:	std    
  4057df:	outs   dx,DWORD PTR gs:[esi]
  4057e1:	jmp    0x405788
  4057e3:	test   al,0x7
  4057e5:	ds xor al,ah
  4057e8:	push   edi
  4057e9:	sahf   
  4057ea:	loopne 0x40582d
  4057ec:	push   esp
  4057ed:	js     0x405788
  4057ef:	fidiv  WORD PTR cs:[esi-0x1f]
  4057f3:	out    dx,al
  4057f4:	jg     0x4057da
  4057f6:	jg     0x40582b
  4057f8:	adc    BYTE PTR [ecx-0x4cd8513a],cl
  4057fe:	and    esp,edi
  405800:	dec    ebp
  405801:	xor    al,0x41
  405803:	cs pushf 
  405805:	mov    bl,0x60
  405807:	outs   dx,BYTE PTR ds:[esi]
  405808:	and    esp,DWORD PTR [eax-0x407e0839]
  40580e:	imul   edx,DWORD PTR [eax-0x1d],0x65
  405812:	aaa    
  405813:	pop    esi
  405814:	stos   BYTE PTR es:[edi],al
  405815:	sbb    BYTE PTR [ebx+esi*4],al
  405818:	pop    esp
  405819:	or     al,0x8a
  40581b:	stos   BYTE PTR es:[edi],al
  40581c:	pop    ebx
  40581d:	clc    
  40581e:	mov    ebx,0xed59612c
  405823:	dec    ebx
  405824:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405825:	shl    DWORD PTR [ecx],1
  405827:	enter  0xf3c8,0xf0
  40582b:	mov    ds:0x3cd4cd71,eax
  405830:	or     esi,eax
  405832:	nop
  405833:	sbb    al,0x70
  405835:	ss mov ch,cl
  405838:	aad    0xc3
  40583a:	jl     0x4057c9
  40583c:	pop    ebp
  40583d:	(bad)  
  40583e:	in     al,0x7b
  405840:	adc    BYTE PTR [eax+0x3a2e8513],bl
  405846:	pop    edx
  405847:	test   DWORD PTR [edx-0x686f9edf],edx
  40584d:	clc    
  40584e:	inc    ebp
  40584f:	xor    dl,0xbb
  405852:	pop    ebp
  405853:	mov    bh,0xd0
  405855:	lds    esp,FWORD PTR [ecx]
  405857:	or     eax,0x1f2daa5b
  40585c:	into   
  40585d:	adc    edx,esp
  40585f:	adc    DWORD PTR [edi],ebx
  405861:	add    al,0xbd
  405863:	aam    0x12
  405865:	adc    eax,0x66a49a2e
  40586a:	repnz stc 
  40586c:	stos   DWORD PTR es:[edi],eax
  40586d:	mov    esi,0xf6f76407
  405872:	pop    ebx
  405873:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405874:	mov    dl,0x7e
  405876:	push   edx
  405877:	les    ebp,FWORD PTR [esi-0x17af4d16]
  40587d:	dec    ebp
  40587e:	push   0xbb906c1
  405883:	or     BYTE PTR [esi],dh
  405885:	and    dl,BYTE PTR [eax+0x56]
  405888:	fmul   DWORD PTR [edx+ebp*4+0x15368ad9]
  40588f:	push   ds
  405890:	nop
  405891:	and    DWORD PTR [ebp-0xb],edi
  405894:	cmp    al,0x5c
  405896:	mov    BYTE PTR [ebx],bh
  405898:	sub    al,0xb0
  40589a:	(bad)  
  40589b:	in     al,0x4b
  40589d:	nop
  40589e:	jns    0x405903
  4058a0:	mov    ds,WORD PTR [ebx-0x6]
  4058a3:	hlt    
  4058a4:	ficom  WORD PTR [edx]
  4058a6:	jecxz  0x405832
  4058a8:	push   ss
  4058a9:	xchg   esi,eax
  4058aa:	jl     0x405835
  4058ac:	(bad)  
  4058ad:	imul   ebx,DWORD PTR [ebp+0x16],0x22aae817
  4058b4:	stc    
  4058b5:	xor    ah,ah
  4058b7:	mov    ch,0xc4
  4058b9:	jmp    0xd19ac653
  4058be:	das    
  4058bf:	test   al,0x1b
  4058c1:	es push eax
  4058c3:	pop    es
  4058c4:	sbb    DWORD PTR [esi*8-0x553eccb9],0xfffffff4
  4058cc:	sbb    BYTE PTR [esi+0x12],0xa5
  4058d0:	mov    bh,0x4c
  4058d2:	push   ebp
  4058d3:	and    eax,0x245e3708
  4058d8:	push   esp
  4058d9:	scas   al,BYTE PTR es:[edi]
  4058da:	loope  0x405904
  4058dc:	sub    ah,BYTE PTR [edi+0x74]
  4058df:	sub    DWORD PTR [edi],0xffffffa5
  4058e2:	les    ebx,FWORD PTR [eax-0x4e5e0267]
  4058e8:	sar    eax,0x6c
  4058eb:	mov    ah,BYTE PTR ds:0xd673d73
  4058f1:	jl     0x40590f
  4058f3:	and    DWORD PTR [ecx],edi
  4058f5:	test   al,0x7e
  4058f7:	adc    DWORD PTR [ecx],edi
  4058f9:	je     0x405940
  4058fb:	xchg   ecx,eax
  4058fc:	cmp    al,0xfa
  4058fe:	shl    DWORD PTR [edi+0x668a3464],1
  405904:	sub    eax,0x59f06b74
  405909:	dec    edx
  40590a:	pusha  
  40590b:	cmp    BYTE PTR ds:0x759360a6,0xee
  405912:	push   ebx
  405913:	jmp    0x808f:0xa334a42
  40591a:	ror    BYTE PTR [edx-0x46],0xbb
  40591e:	clc    
  40591f:	xor    BYTE PTR [ecx+0x2c],dh
  405922:	out    dx,al
  405923:	js     0x4058b1
  405925:	outs   dx,DWORD PTR ds:[esi]
  405926:	xchg   BYTE PTR [ebp-0x1d],dh
  405929:	pop    eax
  40592a:	xor    esi,ecx
  40592c:	int    0x8b
  40592e:	retf   
  40592f:	xchg   ebx,eax
  405930:	ret    
  405931:	out    dx,al
  405932:	rcr    edx,cl
  405934:	jbe    0x4058da
  405936:	dec    edi
  405937:	loope  0x405915
  405939:	fidivr DWORD PTR [ecx+0x1a]
  40593c:	cmc    
  40593d:	or     eax,DWORD PTR [eax+0x13]
  405940:	nop
  405941:	mov    DWORD PTR [edx],ebx
  405943:	cmp    eax,0xc183b485
  405948:	jns    0x40592d
  40594a:	(bad)  [edx+eiz*8]
  40594d:	js     0x4059ae
  40594f:	dec    esp
  405950:	stc    
  405951:	(bad)  
  405952:	sbb    bh,BYTE PTR [edx+0x70]
  405955:	mov    ecx,0xce676bf4
  40595a:	dec    esp
  40595b:	and    al,0x87
  40595d:	xor    dl,bh
  40595f:	out    dx,al
  405960:	cmp    esi,edi
  405962:	dec    edi
  405963:	popf   
  405964:	xor    edi,ebp
  405966:	loope  0x405906
  405968:	sub    dl,BYTE PTR [edx+0x62]
  40596b:	jo     0x4058f5
  40596d:	leave  
  40596e:	dec    edx
  40596f:	lods   al,BYTE PTR ds:[esi]
  405970:	jb     0x405971
  405972:	popa   
  405973:	lahf   
  405974:	push   ebx
  405975:	fs xor eax,0xb51559e9
  40597b:	pop    ebx
  40597c:	iret   
  40597d:	mov    edi,0x4a846270
  405982:	retf   
  405983:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405984:	dec    eax
  405985:	inc    ecx
  405986:	in     al,dx
  405987:	ss test DWORD PTR ds:[edi-0x15],ebx
  40598c:	(bad)  
  40598d:	int3   
  40598e:	shl    DWORD PTR [eax+eiz*1+0x2bea6dd7],cl
  405995:	das    
  405996:	test   DWORD PTR [ecx-0xe6142fe],0xf484aceb
  4059a0:	jb     0x4059bd
  4059a2:	xor    BYTE PTR [esi],dh
  4059a4:	mov    esi,0x2d8e6a79
  4059a9:	and    esi,ebp
  4059ab:	sbb    al,0xc7
  4059ad:	xchg   edi,eax
  4059ae:	push   esp
  4059af:	xchg   ebx,ebx
  4059b1:	xchg   ecx,eax
  4059b2:	into   
  4059b3:	jbe    0x4059e5
  4059b5:	inc    esi
  4059b6:	inc    edx
  4059b7:	pop    edi
  4059b8:	fcomi  st,st(5)
  4059ba:	jne    0x4059d4
  4059bc:	ret    0xbbca
  4059bf:	aas    
  4059c0:	test   DWORD PTR [esi-0x2e],ebx
  4059c3:	push   0xd24eb23a
  4059c8:	and    BYTE PTR [ebx+ebp*2+0x7c6d8273],dh
  4059cf:	push   esi
  4059d0:	and    BYTE PTR [esi-0x14],dh
  4059d3:	and    eax,0x50063ef2
  4059d8:	jmp    0x3292:0xc91da697
  4059df:	and    dh,dl
  4059e1:	ins    DWORD PTR es:[edi],dx
  4059e2:	cwde   
  4059e3:	and    eax,0xf3f843ad
  4059e8:	std    
  4059e9:	sub    BYTE PTR [edi+0x54],al
  4059ec:	test   eax,0x6d7ab699
  4059f1:	pop    ecx
  4059f2:	rcl    DWORD PTR [eax-0x3627f4c2],cl
  4059f8:	(bad)  [edi-0x15]
  4059fb:	or     eax,DWORD PTR [ebx+0x76]
  4059fe:	or     esi,DWORD PTR [edi-0x70715a3b]
  405a04:	imul   ebp,DWORD PTR [ebx-0x85693e2],0x18
  405a0b:	stos   DWORD PTR es:[edi],eax
  405a0c:	dec    esp
  405a0d:	mov    eax,ds:0xd74b5b5a
  405a12:	xchg   ebp,eax
  405a13:	mov    ch,BYTE PTR [eax]
  405a15:	adc    dl,BYTE PTR [edi-0x69f4eebc]
  405a1b:	nop
  405a1c:	inc    edx
  405a1d:	js     0x405a21
  405a1f:	sbb    bh,BYTE PTR [esi]
  405a21:	push   0x7
  405a23:	lds    eax,FWORD PTR [esi]
  405a25:	push   ebp
  405a26:	out    dx,eax
  405a27:	outs   dx,BYTE PTR ds:[esi]
  405a28:	adc    eax,0xa0a06877
  405a2d:	pop    es
  405a2e:	into   
  405a2f:	jge    0x405a2c
  405a31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a32:	or     eax,0xe41804f
  405a37:	pop    ebp
  405a38:	inc    ebp
  405a39:	and    eax,0xe0602b9d
  405a3e:	call   0x39273cb0
  405a43:	push   ebp
  405a44:	xlat   BYTE PTR ds:[ebx]
  405a45:	in     al,0x80
  405a47:	xchg   DWORD PTR [edx-0x74],edi
  405a4a:	pop    ss
  405a4b:	fist   WORD PTR [bp+di]
  405a4e:	mov    edx,0x7503444a
  405a53:	mov    ebx,0x555bb7e7
  405a58:	pop    edx
  405a59:	sahf   
  405a5a:	fisttp QWORD PTR [ebp-0x38e8919a]
  405a60:	icebp  
  405a61:	scas   eax,DWORD PTR es:[edi]
  405a62:	or     DWORD PTR [edi-0xa54dd1d],ebx
  405a68:	ficom  DWORD PTR [ebx+0x6278a237]
  405a6e:	inc    ecx
  405a6f:	mov    eax,0x2728aaeb
  405a74:	push   edi
  405a75:	or     al,0x29
  405a77:	call   0x8ad0838d
  405a7c:	push   0xfa0bac09
  405a81:	stos   BYTE PTR es:[edi],al
  405a82:	cwde   
  405a83:	or     al,0x4c
  405a85:	aad    0x65
  405a87:	std    
  405a88:	pop    DWORD PTR [esi+0x560bf30]
  405a8e:	pop    ss
  405a8f:	sub    al,0x98
  405a91:	push   es
  405a92:	in     al,0x90
  405a94:	(bad)  
  405a95:	gs arpl sp,ax
  405a98:	stos   BYTE PTR es:[edi],al
  405a99:	xchg   edi,eax
  405a9a:	and    DWORD PTR [ecx],0x35
  405a9d:	sbb    al,0xd5
  405a9f:	pop    ecx
  405aa0:	pop    ebx
  405aa1:	fisttp QWORD PTR [ebx]
  405aa3:	sbb    dl,BYTE PTR ds:0xe581d9bc
  405aa9:	icebp  
  405aaa:	not    bh
  405aac:	pop    esp
  405aad:	jne    0x405b10
  405aaf:	mov    edi,0x9004f3d9
  405ab4:	and    ch,BYTE PTR [ecx-0x138af3ed]
  405aba:	stos   DWORD PTR es:[edi],eax
  405abb:	mov    esp,0xfc1ca039
  405ac0:	add    bl,BYTE PTR [ecx+0x2f]
  405ac3:	push   cs
  405ac4:	dec    esi
  405ac5:	in     al,0xe7
  405ac7:	inc    edi
  405ac8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ac9:	or     eax,0x959848b2
  405ace:	push   0x79e3692c
  405ad3:	cmp    al,BYTE PTR [edi]
  405ad5:	pop    ss
  405ad6:	clc    
  405ad7:	and    BYTE PTR [eax],ch
  405ad9:	adc    al,0x95
  405adb:	ins    DWORD PTR es:[edi],dx
  405adc:	pusha  
  405add:	not    DWORD PTR [ebx-0x79]
  405ae0:	test   BYTE PTR [edi+0x2fcf70de],dh
  405ae6:	xchg   edi,eax
  405ae7:	add    BYTE PTR [ecx-0x1e],al
  405aea:	jecxz  0x405a9e
  405aec:	out    0x31,eax
  405aee:	fistp  WORD PTR [ecx-0x9f251d6]
  405af4:	out    dx,eax
  405af5:	lock (bad) 
  405af7:	idiv   ebx
  405af9:	add    eax,0x40727840
  405afe:	xchg   edi,eax
  405aff:	out    0xa3,eax
  405b01:	jne    0x405ae4
  405b03:	push   0xffffff92
  405b05:	mov    edi,es
  405b07:	pusha  
  405b08:	daa    
  405b09:	xor    edi,DWORD PTR [ebx+0x37]
  405b0c:	and    dl,dh
  405b0e:	pop    esi
  405b0f:	inc    ebp
  405b10:	add    DWORD PTR [eax+0x4f],edi
  405b13:	test   al,0xb7
  405b15:	shr    BYTE PTR [esi-0x66530862],cl
  405b1b:	xor    BYTE PTR [edi+0x1c],0xf3
  405b1f:	rcr    ecx,0x99
  405b22:	std    
  405b23:	adc    al,0xaf
  405b25:	mov    dl,0xca
  405b27:	xchg   DWORD PTR cs:[edx],ebp
  405b2a:	or     ebx,DWORD PTR [ebx+0x2b]
  405b2d:	ja     0x405abf
  405b2f:	sub    dl,BYTE PTR [eax-0x765e2753]
  405b35:	push   ebp
  405b36:	lods   eax,DWORD PTR ds:[esi]
  405b37:	clc    
  405b38:	push   0x44
  405b3a:	ror    ebp,0x5
  405b3d:	fld    TBYTE PTR [edx]
  405b3f:	ret    0x47b0
  405b42:	or     BYTE PTR [edx-0x4],al
  405b45:	clc    
  405b46:	add    BYTE PTR [eax],al
  405b48:	das    
  405b49:	and    eax,0x5e8fd856
  405b4e:	call   0x40ffdfa0
  405b53:	jae    0x405b74
  405b55:	xchg   BYTE PTR [ebp-0x2d955f52],bh
  405b5b:	or     eax,0xe22bc1af
  405b60:	scas   eax,DWORD PTR es:[edi]
  405b61:	lds    esp,FWORD PTR [esi+0x2bbecb82]
  405b67:	test   DWORD PTR [edx],0xdfb99d55
  405b6d:	cmp    al,0xd8
  405b6f:	pop    ebx
  405b70:	sti    
  405b71:	xor    al,0x2e
  405b73:	push   es
  405b74:	dec    edi
  405b75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b76:	jge    0x405b2f
  405b78:	sahf   
  405b79:	sbb    DWORD PTR [ebx*2-0x6db11fcf],ebx
  405b80:	call   0x792f22f4
  405b85:	fcomip st,st(4)
  405b87:	pop    esi
  405b89:	in     eax,0xc5
  405b8b:	out    0x60,al
  405b8d:	jns    0x405b18
  405b8f:	add    DWORD PTR [edi-0x4948f0db],esi
  405b95:	frstor [edi]
  405b97:	(bad)
  405b9a:	or     BYTE PTR [esi+edi*2],dl
  405b9d:	ret    
  405b9e:	mov    al,ds:0xa440204d
  405ba3:	out    0xc0,eax
  405ba5:	sub    eax,0xe00df7ce
  405baa:	add    DWORD PTR [ebx],edi
  405bac:	shr    DWORD PTR [ecx-0x4d7fbfbc],0xb8
  405bb3:	icebp  
  405bb4:	fwait
  405bb5:	stos   DWORD PTR es:[edi],eax
  405bb6:	xchg   edx,esi
  405bb8:	pop    ds
  405bb9:	das    
  405bba:	into   
  405bbb:	push   DWORD PTR [ecx+ebx*8+0x14]
  405bbf:	sbb    al,ch
  405bc1:	lock cmp ecx,ebx
  405bc4:	stos   BYTE PTR es:[edi],al
  405bc5:	std    
  405bc6:	jne    0x405bcf
  405bc8:	mul    BYTE PTR [edi]
  405bca:	fdivr  DWORD PTR [eax+0x33]
  405bcd:	ja     0x405b73
  405bcf:	inc    ebp
  405bd0:	mov    edx,gs
  405bd2:	mov    ecx,0x13b90eaa
  405bd7:	inc    esp
  405bd8:	xchg   ebx,eax
  405bd9:	sti    
  405bda:	ret    0xa93e
  405bdd:	mov    ch,BYTE PTR [esi+0x5a]
  405be0:	and    bl,BYTE PTR [ecx+0x2b]
  405be3:	xlat   BYTE PTR ds:[ebx]
  405be4:	addr16 push ebx
  405be6:	adc    cl,0x33
  405be9:	jno    0x405c1d
  405beb:	xor    eax,0xf1b793f3
  405bf0:	mov    dh,0x2c
  405bf2:	(bad)  
  405bf3:	sar    BYTE PTR [eax],cl
  405bf5:	aad    0x85
  405bf7:	push   0x62
  405bf9:	in     eax,dx
  405bfa:	arpl   WORD PTR [edx+0x3a],di
  405bfd:	mov    ebp,0x4629dad5
  405c02:	or     edi,DWORD PTR [eax+0x1d]
  405c05:	push   edx
  405c06:	mov    ch,0x6a
  405c08:	push   0x3b9a6e28
  405c0d:	sub    BYTE PTR [ecx+0x21],0x3a
  405c11:	jae    0x405c5c
  405c13:	mov    dh,0x46
  405c15:	popf   
  405c16:	add    esi,edx
  405c18:	pushf  
  405c19:	(bad)  
  405c1a:	mov    WORD PTR [edx],es
  405c1c:	inc    ebx
  405c1d:	call   0x7b5e:0xfa02b562
  405c24:	lea    edi,[ebx-0x187fcfa6]
  405c2a:	dec    ebx
  405c2b:	and    edx,esp
  405c2d:	add    DWORD PTR [ebp+0x50],0x31
  405c31:	push   ecx
  405c32:	bound  esi,QWORD PTR [ecx+0x2d047207]
  405c38:	repz xchg edi,eax
  405c3a:	imul   ecx,edx,0xffffffc5
  405c3d:	xor    DWORD PTR [ebx+0x62],edx
  405c40:	ret    
  405c41:	popa   
  405c42:	mov    BYTE PTR [ebx+0x31],bh
  405c45:	jnp    0x405c94
  405c47:	jnp    0x405bd2
  405c49:	inc    eax
  405c4a:	sahf   
  405c4b:	dec    ecx
  405c4c:	gs add eax,0xd6d90535
  405c52:	cs mov esp,esi
  405c55:	ss inc ebp
  405c57:	js     0x405c3d
  405c59:	push   DWORD PTR [edi-0x6d]
  405c5c:	pushf  
  405c5d:	js     0x405c3c
  405c5f:	mov    cl,0x6c
  405c61:	pop    esi
  405c62:	adc    al,0xcc
  405c64:	int3   
  405c65:	scas   al,BYTE PTR es:[edi]
  405c66:	add    esp,edx
  405c68:	pop    ss
  405c69:	sti    
  405c6a:	jg     0x405c02
  405c6c:	idiv   ch
  405c6e:	and    esi,DWORD PTR cs:[edi+0x36]
  405c72:	dec    edx
  405c73:	lds    eax,FWORD PTR [ecx-0x2b]
  405c76:	ins    DWORD PTR es:[edi],dx
  405c77:	adc    DWORD PTR [esi+0x22],0x7aa48b5b
  405c7e:	or     BYTE PTR [ecx-0x3f],ah
  405c81:	mov    dl,0x90
  405c83:	in     eax,dx
  405c84:	fbld   TBYTE PTR [edi+0x297d7b53]
  405c8a:	and    BYTE PTR [ebx+edi*8+0x28],bl
  405c8e:	fimul  DWORD PTR [ebx-0x54]
  405c91:	xchg   esi,eax
  405c92:	add    ebx,edi
  405c94:	mov    ebx,0x49f9ac60
  405c99:	nop
  405c9a:	mov    al,ds:0x3d54d35
  405c9f:	sbb    al,0x9a
  405ca1:	rol    DWORD PTR [ebp+ebp*8-0x4c],cl
  405ca5:	xchg   ebp,eax
  405ca6:	or     bl,0x57
  405ca9:	xchg   DWORD PTR [eax-0x67],ebx
  405cac:	cmc    
  405cad:	es fwait
  405caf:	stos   BYTE PTR es:[edi],al
  405cb0:	pop    ebx
  405cb1:	aaa    
  405cb2:	inc    ecx
  405cb3:	and    al,0xab
  405cb5:	push   eax
  405cb6:	(bad)  
  405cb7:	and    DWORD PTR [edx+eiz*4-0x5a],0x6051a09e
  405cbf:	jmp    FWORD PTR [ebp+0x6e]
  405cc2:	sahf   
  405cc3:	sbb    ebp,esp
  405cc5:	dec    esi
  405cc6:	xchg   DWORD PTR [edi+ebp*8-0x46e96b8e],eax
  405ccd:	cdq    
  405cce:	adc    ah,bh
  405cd0:	outs   dx,BYTE PTR ds:[esi]
  405cd1:	popa   
  405cd2:	ret    0xfa39
  405cd5:	adc    al,0x30
  405cd7:	sub    ebp,ebx
  405cd9:	int    0xf2
  405cdb:	jae    0x405cd5
  405cdd:	mov    esi,0x3d4e6205
  405ce2:	add    eax,0xb49093ad
  405ce7:	pop    edi
  405ce8:	retf   
  405ce9:	or     al,BYTE PTR [eax+esi*2]
  405cec:	in     al,dx
  405ced:	jmp    0x405ce8
  405cef:	(bad)  [eax+0x4b]
  405cf2:	mov    al,0xd1
  405cf4:	xchg   DWORD PTR [ebp+0x65],esi
  405cf7:	pusha  
  405cf8:	mov    bh,0xcb
  405cfa:	aas    
  405cfb:	mov    dl,dl
  405cfd:	ds mov ebx,0xc5c610a9
  405d03:	xor    cl,BYTE PTR [ebx+0x4d41a2ff]
  405d09:	retf   0x873d
  405d0c:	call   DWORD PTR [eax]
  405d0e:	mov    ch,0x16
  405d10:	xor    eax,0x2cb9975b
  405d15:	xchg   ecx,eax
  405d16:	call   0xca05:0x9cf4eea2
  405d1d:	sub    eax,0x4a9dec3
  405d22:	and    DWORD PTR [eax-0x28],edi
  405d25:	pop    ebx
  405d26:	push   edx
  405d27:	jne    0x405d3c
  405d29:	mov    fs,WORD PTR [edi+0xd55cbd4]
  405d2f:	sub    DWORD PTR [edx-0x59924600],ebx
  405d35:	xchg   edi,eax
  405d36:	xor    al,0x3f
  405d38:	sti    
  405d39:	fist   WORD PTR [ebx-0x7b]
  405d3c:	pusha  
  405d3d:	jne    0x405d41
  405d3f:	fst    DWORD PTR [ebp-0x1e416214]
  405d45:	fnstsw WORD PTR [edx]
  405d47:	adc    ah,cl
  405d49:	sbb    DWORD PTR [ecx+0x52],esi
  405d4c:	rol    BYTE PTR [eax],cl
  405d4e:	and    BYTE PTR [eax+ecx*8],bl
  405d51:	push   esp
  405d52:	jl     0x405d2f
  405d54:	jecxz  0x405cf5
  405d56:	mov    ecx,0xa518dc44
  405d5b:	jecxz  0x405dd3
  405d5d:	mov    edi,0xfb927f5e
  405d62:	dec    ecx
  405d63:	pop    ss
  405d64:	pop    esp
  405d65:	push   0x2b
  405d67:	in     al,dx
  405d68:	or     DWORD PTR ds:0x68ad346c,0x100c4f78
  405d72:	mov    esi,edx
  405d74:	call   0x2c1305eb
  405d79:	dec    edx
  405d7a:	sbb    eax,0xa86c9d39
  405d7f:	sub    ch,BYTE PTR ds:0xa580d26a
  405d85:	adc    eax,0x8d870ca3
  405d8a:	(bad)  
  405d8b:	and    DWORD PTR [edi],edx
  405d8d:	sub    eax,0xd67ac737
  405d92:	cmp    ebx,DWORD PTR [ecx-0x7cfde3a9]
  405d98:	int    0xc1
  405d9a:	push   0x67
  405d9c:	xchg   BYTE PTR [ebx-0x3f51c6],bl
  405da2:	fucom  st(3)
  405da4:	mov    ebx,0xb0ae97a8
  405da9:	pop    ebx
  405daa:	jg     0x405d79
  405dac:	jecxz  0x405d31
  405dae:	xchg   ebx,eax
  405daf:	pop    esp
  405db0:	call   0xb53e:0x8e24
  405db6:	pop    esi
  405db7:	adc    BYTE PTR [edi],bl
  405db9:	jmp    DWORD PTR [esi-0x3b]
  405dbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405dbd:	mov    al,ds:0x5ea32cf9
  405dc2:	pop    edi
  405dc3:	into   
  405dc4:	mov    es,WORD PTR [ebx]
  405dc6:	(bad)  
  405dc7:	ja     0x405e16
  405dc9:	cs inc eax
  405dcb:	into   
  405dcc:	(bad)  
  405dce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405dcf:	jg     0x405e4a
  405dd1:	mov    ch,0x77
  405dd3:	fmul   QWORD PTR [ebx]
  405dd5:	pop    es
  405dd6:	aam    0x38
  405dd8:	loopne 0x405dc5
  405dda:	sub    al,0x4
  405ddc:	out    0x77,al
  405dde:	jo     0x405e1e
  405de0:	pop    eax
  405de1:	dec    eax
  405de2:	sbb    eax,0x3c1b9b21
  405de7:	loopne 0x405df3
  405de9:	and    BYTE PTR [ecx-0x26],cl
  405dec:	xlat   BYTE PTR ds:[ebx]
  405ded:	jp     0x405e30
  405def:	pop    eax
  405df0:	lahf   
  405df1:	aam    0x77
  405df3:	sbb    eax,0x30217532
  405df8:	push   0xffffffdd
  405dfa:	fdivp  st(4),st
  405dfc:	jnp    0x405e68
  405dfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405dff:	(bad)  
  405e00:	xlat   BYTE PTR ds:[ebx]
  405e01:	js     0x405dbc
  405e03:	and    DWORD PTR [eax],ebx
  405e05:	add    ecx,ecx
  405e07:	xchg   DWORD PTR [ebx],eax
  405e09:	cdq    
  405e0a:	jnp    0x405e5b
  405e0c:	and    al,0x72
  405e0e:	mov    al,0x16
  405e10:	cmp    ah,al
  405e12:	bound  ecx,QWORD PTR [edi+0x56]
  405e15:	outs   dx,DWORD PTR ds:[esi]
  405e16:	mov    ah,0xce
  405e18:	adc    BYTE PTR [ebx+0x665bd81e],al
  405e1e:	mul    BYTE PTR [esi+edi*2-0x768e3a46]
  405e25:	inc    esi
  405e26:	out    dx,al
  405e27:	cld    
  405e28:	sbb    eax,0xa91859b7
  405e2d:	daa    
  405e2e:	inc    eax
  405e2f:	in     eax,dx
  405e30:	loop   0x405e01
  405e32:	(bad)  
  405e33:	repz jns 0x405e27
  405e36:	mov    dl,0x51
  405e38:	int3   
  405e39:	test   BYTE PTR [esi-0x719ecb6d],0xdd
  405e40:	inc    eax
  405e41:	ret    
  405e42:	mov    esp,0x2e2d9d3a
  405e47:	dec    ebx
  405e48:	jmp    0x405ddc
  405e4a:	jns    0x405e1e
  405e4c:	dec    edx
  405e4d:	(bad)  
  405e4e:	scas   al,BYTE PTR es:[edi]
  405e4f:	data16 int3 
  405e51:	push   ss
  405e52:	xchg   edx,eax
  405e53:	js     0x405e86
  405e55:	arpl   WORD PTR [edi+edi*1+0x7d20db43],si
  405e5c:	mov    dh,0xd6
  405e5e:	mov    DWORD PTR [ebx],0x23e550bb
  405e64:	jne    0x405e0e
  405e66:	inc    ebp
  405e67:	shl    DWORD PTR [esp+edi*4],0xdd
  405e6b:	int3   
  405e6c:	dec    ecx
  405e6d:	ret    
  405e6e:	scas   al,BYTE PTR es:[edi]
  405e6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e70:	in     eax,dx
  405e71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e72:	sbb    al,BYTE PTR [ebx+0x60323b50]
  405e78:	mov    edx,0x9ad5924a
  405e7d:	stc    
  405e7e:	jo     0x405e36
  405e80:	jno    0x405ef3
  405e82:	sbb    al,0x88
  405e84:	mov    ah,BYTE PTR [eax-0x53]
  405e87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e88:	(bad)  
  405e8a:	or     BYTE PTR [esi+0x12bcec70],dh
  405e90:	cmp    ebx,DWORD PTR [edx]
  405e92:	imul   ecx,DWORD PTR [ebx-0x80],0x6c
  405e96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e97:	jle    0x405e3e
  405e99:	out    dx,eax
  405e9a:	daa    
  405e9b:	mov    esp,DWORD PTR [eax]
  405e9d:	xchg   edi,eax
  405e9e:	nop
  405e9f:	jle    0x405e2b
  405ea1:	xchg   ebp,eax
  405ea2:	pop    eax
  405ea3:	ror    ebx,cl
  405ea5:	add    bl,BYTE PTR [ecx-0x4206b44]
  405eab:	push   esp
  405eac:	mov    ebx,DWORD PTR [edi+0x7c2b6a36]
  405eb2:	jbe    0x405ea0
  405eb4:	cmc    
  405eb5:	push   es
  405eb6:	mov    ecx,0xbc9ccdfa
  405ebb:	sbb    ebp,DWORD PTR [eax+eiz*8]
  405ebe:	int3   
  405ebf:	fisubr WORD PTR [ecx-0x56c62d91]
  405ec5:	add    ebp,DWORD PTR [edi+eiz*8]
  405ec8:	xor    bl,BYTE PTR [ebx+0xd99091f]
  405ece:	mov    edx,0xf3e1a660
  405ed3:	clc    
  405ed4:	pop    ebp
  405ed5:	outs   dx,BYTE PTR ds:[esi]
  405ed6:	(bad)  
  405ed7:	and    DWORD PTR [esi-0x65],edx
  405eda:	pop    ds
  405edb:	add    esp,DWORD PTR ds:0xc1d2ad6f
  405ee1:	(bad)  
  405ee2:	cmp    dx,WORD PTR [edx]
  405ee5:	mov    edi,0x65981643
  405eea:	fucom  st(6)
  405eec:	push   0xfffffffe
  405eee:	popa   
  405eef:	inc    eax
  405ef0:	out    dx,eax
  405ef1:	add    DWORD PTR [esi],esp
  405ef3:	stos   DWORD PTR es:[edi],eax
  405ef4:	inc    ebx
  405ef5:	sbb    DWORD PTR [esi+edi*2-0x24],ebp
  405ef9:	add    cl,BYTE PTR [edx]
  405efb:	xchg   esi,eax
  405efc:	sub    BYTE PTR [edi+0x30],0xc3
  405f00:	dec    edx
  405f01:	mov    ebx,es
  405f03:	mov    dh,0xa0
  405f05:	or     edi,DWORD PTR [edi-0x64]
  405f08:	inc    ebp
  405f09:	pop    edx
  405f0a:	push   0x14deed10
  405f0f:	adc    BYTE PTR [ecx],cl
  405f11:	mov    ch,0xf5
  405f13:	jg     0x405ef3
  405f15:	mov    al,ds:0xac23adfe
  405f1a:	aam    0xb6
  405f1c:	out    0xcf,al
  405f1e:	jmp    0x2d75:0x3f3fc924
  405f25:	aaa    
  405f26:	add    al,0x31
  405f28:	ins    DWORD PTR es:[edi],dx
  405f29:	mul    DWORD PTR es:[eax+0x14207f32]
  405f30:	addr16 das 
  405f32:	imul   DWORD PTR [edi]
  405f34:	cmp    esi,DWORD PTR [ebx+0x66474383]
  405f3a:	repnz mov WORD PTR [esi],ds
  405f3d:	pusha  
  405f3e:	arpl   WORD PTR [edi-0x1c7ca538],si
  405f44:	xor    esp,ebx
  405f46:	pop    edi
  405f47:	xor    ah,BYTE PTR [ecx-0x640dcf9b]
  405f4d:	test   al,0xa3
  405f4f:	sub    BYTE PTR [eax],0xbd
  405f52:	rol    DWORD PTR ds:[edx+0x3ce98b9c],0xb0
  405f5a:	bound  ebp,QWORD PTR [ebx+0x45d00423]
  405f60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f61:	sub    DWORD PTR [ecx],esi
  405f63:	popa   
  405f64:	inc    edi
  405f65:	and    BYTE PTR [edi+0x39e5376],ah
  405f6b:	cmp    al,0xaf
  405f6d:	pop    ebp
  405f6e:	sbb    al,0x5a
  405f70:	imul   ebx,DWORD PTR [eax+eiz*8-0x6cf3c351],0xa82dc0db
  405f7b:	ss jno 0x405f07
  405f7e:	lods   eax,DWORD PTR ds:[esi]
  405f7f:	add    cl,cl
  405f81:	test   DWORD PTR [ebp-0x24],edi
  405f84:	dec    edi
  405f85:	xchg   ebx,eax
  405f86:	inc    esi
  405f87:	out    dx,eax
  405f88:	adc    al,0x98
  405f8a:	jo     0x405f36
  405f8c:	mov    es,WORD PTR [ebp+0x36a6faae]
  405f92:	pusha  
  405f93:	arpl   WORD PTR [eax+ecx*8],sp
  405f96:	int    0x90
  405f98:	mov    edx,0x7622510e
  405f9d:	xor    edi,DWORD PTR [edi+0x59]
  405fa0:	(bad)  
  405fa1:	mov    cl,0x3
  405fa3:	test   BYTE PTR [ebx-0x434d4579],dh
  405fa9:	jns    0x405f45
  405fab:	sar    DWORD PTR [eax-0x4],cl
  405fae:	pop    ss
  405faf:	and    eax,0x2c292af1
  405fb4:	div    DWORD PTR [esi]
  405fb6:	mov    ebp,0x23386a7c
  405fbb:	xor    al,0x45
  405fbd:	daa    
  405fbe:	and    DWORD PTR [ecx-0x38],edi
  405fc1:	mov    edx,0x4c32a91b
  405fc6:	or     DWORD PTR ss:[ebx],ebp
  405fc9:	(bad)  
  405fca:	cld    
  405fcb:	test   cl,al
  405fcd:	jb     0x405f6d
  405fcf:	std    
  405fd0:	adc    eax,0x2857889a
  405fd5:	mov    esp,0x152fcb87
  405fda:	(bad)
  405fdd:	xor    eax,0x1b
  405fe0:	in     eax,0xb7
  405fe2:	sbb    edi,DWORD PTR [edx]
  405fe4:	std    
  405fe5:	and    esi,DWORD PTR [edx-0x15bee281]
  405feb:	emms   
  405fed:	add    DWORD PTR ds:0x9adfe38a,0x56f308d6
  405ff7:	int3   
  405ff8:	dec    ecx
  405ff9:	add    eax,0x7f630484
  405ffe:	dec    ecx
  405fff:	ror    ecx,1
  406001:	sar    BYTE PTR [esp+edi*1],0xee
  406005:	push   ebp
  406006:	ss mov ebx,esi
  406009:	sti    
  40600a:	and    DWORD PTR [ebp+0x44b41f40],0x67f8c506
  406014:	pop    eax
  406015:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406016:	in     eax,0x16
  406018:	mov    ds:0xfc27e4c8,al
  40601d:	cmp    eax,0x51fc3ce2
  406022:	cs add ebp,edi
  406025:	push   ds
  406026:	push   ebx
  406027:	mov    eax,0x77f859eb
  40602c:	popa   
  40602d:	inc    edi
  40602e:	aas    
  40602f:	pop    esp
  406030:	sbb    al,bh
  406032:	and    ecx,edi
  406034:	stc    
  406035:	and    DWORD PTR [eax],ebp
  406037:	pushf  
  406038:	xor    ebp,DWORD PTR [ebp-0x2b3fbed7]
  40603e:	jns    0x406058
  406040:	dec    ecx
  406041:	or     esp,DWORD PTR [edi-0x5ba40c85]
  406047:	dec    BYTE PTR [eax+0x70c9bc8c]
  40604d:	sub    al,0x3a
  40604f:	push   ebx
  406050:	retf   0xa707
  406053:	pop    esp
  406054:	aam    0xb1
  406056:	fprem  
  406058:	int3   
  406059:	inc    edx
  40605a:	dec    ebx
  40605b:	retf   0xbf78
  40605e:	(bad)  
  40605f:	sbb    DWORD PTR [ebx+0x3],ecx
  406062:	ret    0x366d
  406065:	loopne 0x40602a
  406067:	out    dx,al
  406068:	adc    al,0x6a
  40606a:	mov    esp,0x64873ba2
  40606f:	shl    BYTE PTR [eax],cl
  406071:	sub    eax,0xa3b169d6
  406076:	inc    edi
  406077:	unpckhps xmm3,xmm0
  40607a:	push   cs
  40607b:	ds add eax,eax
  40607e:	pop    ebx
  40607f:	pop    ebx
  406080:	push   ecx
  406081:	adc    al,0xcf
  406083:	std    
  406084:	call   0xad70:0x716117c5
  40608b:	js     0x4060ac
  40608d:	repz pop edi
  40608f:	adc    eax,0xfa9a5ae3
  406094:	jp     0x4060c0
  406096:	inc    ebp
  406097:	xor    eax,0x21f523c3
  40609c:	and    eax,0xbbf9b5ac
  4060a1:	mov    al,0x73
  4060a3:	cdq    
  4060a4:	jle    0x406084
  4060a6:	dec    edx
  4060a7:	xor    edx,DWORD PTR [ecx+ebx*8-0x9]
  4060ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060ac:	or     eax,0xd8dc0c14
  4060b1:	jp     0x406122
  4060b3:	jp     0x40608e
  4060b5:	fiadd  WORD PTR [eax]
  4060b7:	pop    ecx
  4060b8:	adc    BYTE PTR [ebx-0x12],cl
  4060bb:	jno    0x406056
  4060bd:	jmp    0x406123
  4060bf:	cmp    al,0x82
  4060c1:	push   ss
  4060c2:	ss jnp 0x406076
  4060c5:	jb     0x4060d8
  4060c7:	addr16 int3 
  4060c9:	out    dx,eax
  4060ca:	into   
  4060cb:	xor    al,0x7a
  4060cd:	dec    edx
  4060ce:	sub    eax,0x81965f9
  4060d3:	out    0xbb,eax
  4060d5:	dec    ebp
  4060d6:	scas   al,BYTE PTR es:[edi]
  4060d7:	inc    ecx
  4060d8:	js     0x4060ea
  4060da:	ja     0x4060cc
  4060dc:	int    0xa5
  4060de:	ins    BYTE PTR es:[edi],dx
  4060df:	push   edi
  4060e0:	sub    dl,BYTE PTR [edi+0x55]
  4060e3:	mov    edi,0x2a3b708e
  4060e8:	lea    eax,[edx+0x2804e8e7]
  4060ee:	int3   
  4060ef:	imul   esi,DWORD PTR [ecx+edi*1],0x26
  4060f3:	sub    eax,0x419530f
  4060f8:	push   ds
  4060f9:	push   eax
  4060fa:	(bad)  
  4060fb:	xchg   esp,eax
  4060fc:	mov    bl,0x93
  4060fe:	ins    BYTE PTR es:[edi],dx
  4060ff:	and    al,0x4b
  406101:	(bad)  
  406102:	pop    ss
  406103:	and    DWORD PTR [ebp+0x25c8e622],esp
  406109:	mov    al,0xd6
  40610b:	js     0x40615a
  40610d:	data16 jae 0x40617f
  406110:	cdq    
  406111:	inc    ebx
  406112:	das    
  406113:	inc    edi
  406114:	shr    DWORD PTR [ebp+ecx*1-0x5da4e0b8],cl
  40611b:	test   al,0x6e
  40611d:	xor    eax,0xd5636db7
  406122:	sub    eax,0x42d32fa4
  406127:	into   
  406128:	inc    esi
  406129:	pop    ecx
  40612a:	and    DWORD PTR ds:0x6af96961,0x5dd67420
  406134:	xor    eax,DWORD PTR [eax-0x69d49244]
  40613a:	adc    al,0x87
  40613c:	adc    dl,cl
  40613e:	xchg   BYTE PTR [ebp+0x905226c],bl
  406144:	mov    ebp,0xe90e84f7
  406149:	outs   dx,DWORD PTR ds:[esi]
  40614a:	mov    cs,eax
  40614c:	shl    DWORD PTR [edx],1
  40614e:	jmp    0x4ab48b9
  406153:	popa   
  406154:	aas    
  406155:	and    al,0xfa
  406157:	adc    dh,dl
  406159:	gs stc 
  40615b:	ss pop edx
  40615d:	sbb    BYTE PTR [edx-0x40],bl
  406160:	mov    ?,edx
  406162:	cmp    DWORD PTR ds:0x18bd146f,ebx
  406168:	pop    edx
  406169:	and    DWORD PTR [eax+0x2bf048a8],ecx
  40616f:	pop    esp
  406170:	loop   0x406193
  406172:	xor    eax,0x7dc15bce
  406177:	adc    eax,0xa40b2037
  40617c:	sub    esi,DWORD PTR ds:0xfc289056
  406182:	inc    esp
  406183:	popf   
  406184:	adc    DWORD PTR [edi-0x7d],ecx
  406187:	add    BYTE PTR [edi+0x43],al
  40618a:	mov    eax,ds:0xfa118010
  40618f:	out    dx,eax
  406190:	and    al,0x92
  406192:	int3   
  406193:	inc    edi
  406194:	lods   eax,DWORD PTR ds:[esi]
  406195:	(bad)  
  406196:	add    al,0xca
  406198:	test   al,0x61
  40619a:	or     bh,BYTE PTR [ebx+0x37]
  40619d:	daa    
  40619e:	or     al,0xb5
  4061a0:	popf   
  4061a1:	daa    
  4061a2:	jg     0x406156
  4061a4:	xchg   ebx,eax
  4061a5:	push   edi
  4061a6:	dec    eax
  4061a7:	xchg   ebx,eax
  4061a8:	cmp    DWORD PTR [ebp-0x1f5e4ff6],0xffffff9b
  4061af:	add    al,BYTE PTR [esi+ebp*1]
  4061b2:	repz push cs
  4061b4:	xchg   BYTE PTR [edx+0x2],al
  4061b7:	nop
  4061b8:	mov    eax,ds:0xf8aa1ae1
  4061bd:	daa    
  4061be:	xor    BYTE PTR ds:[edi+ecx*4],dh
  4061c2:	cdq    
  4061c3:	cmp    edx,DWORD PTR [esi-0x2cd98f75]
  4061c9:	dec    ebp
  4061ca:	mov    al,ds:0xba5570a3
  4061cf:	out    dx,eax
  4061d0:	mov    esp,0x920fd9c6
  4061d5:	fwait
  4061d6:	jge    0x4061b2
  4061d8:	jmp    0x5a81:0xf163460d
  4061df:	xor    al,0x6c
  4061e1:	jmp    0xe8b1ab62
  4061e6:	dec    esi
  4061e7:	mov    bl,0x63
  4061e9:	inc    ebx
  4061ea:	sub    BYTE PTR [ecx+0x5147dac],0xac
  4061f1:	push   ebp
  4061f2:	xchg   edi,eax
  4061f3:	jge    0x4061ed
  4061f5:	inc    edx
  4061f6:	or     DWORD PTR [ebx-0x123274e],esi
  4061fc:	imul   esi,DWORD PTR [edx-0xf],0x23
  406200:	call   0x14b11651
  406205:	push   esi
  406206:	mov    al,ds:0x1b877965
  40620b:	jmp    0x16438979
  406210:	popf   
  406211:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406212:	sbb    BYTE PTR [eax-0x29],bh
  406215:	ds leave 
  406217:	outs   dx,BYTE PTR ds:[esi]
  406218:	shr    BYTE PTR [edi+0x1d73d883],0x6e
  40621f:	psrld  mm4,QWORD PTR [edi-0x46812b18]
  406226:	xchg   esp,eax
  406227:	mov    edi,0x1b110a2c
  40622c:	pop    es
  40622d:	xchg   ecx,eax
  40622e:	(bad)  
  40622f:	in     al,0xd4
  406231:	hlt    
  406232:	add    bh,BYTE PTR [ebp+0x5c]
  406235:	xcrypt-ofb (bad)
  406236:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406237:	out    dx,eax
  406238:	push   0x7a
  40623a:	jg     0x4062a2
  40623c:	in     eax,0xed
  40623e:	dec    edx
  40623f:	stos   DWORD PTR es:[edi],eax
  406240:	push   ebp
  406241:	lahf   
  406242:	loope  0x40622d
  406244:	lods   eax,DWORD PTR ds:[esi]
  406245:	mov    bl,0x2f
  406247:	fnstcw WORD PTR [ebp+0x2e]
  40624a:	outs   dx,DWORD PTR ds:[esi]
  40624b:	in     al,0x4e
  40624d:	mov    dl,0x53
  40624f:	xor    ah,BYTE PTR [edi-0x2a]
  406252:	fnsave [ebp+0x7e9e2449]
  406258:	orps   xmm0,XMMWORD PTR [ebx]
  40625b:	mov    al,ds:0xcce8d264
  406260:	cmp    BYTE PTR [eax],0x26
  406263:	scas   al,BYTE PTR es:[edi]
  406264:	sub    al,bl
  406266:	shl    BYTE PTR [ebp+0x45],cl
  406269:	or     DWORD PTR [ebx-0x61ecc4b9],edx
  40626f:	xor    al,0x44
  406271:	adc    edi,edx
  406273:	mov    ds:0xd2800bbe,al
  406278:	push   ds
  406279:	dec    edx
  40627a:	pop    ds
  40627b:	or     DWORD PTR [eax],eax
  40627d:	xchg   edx,eax
  40627e:	push   ds
  40627f:	adc    DWORD PTR [ebx+0x20cedd7d],edx
  406285:	pop    DWORD PTR [ebp-0xd89d3d1]
  40628b:	ja     0x406298
  40628d:	clc    
  40628e:	jmp    0xe4af:0x4f5ff5e0
  406295:	(bad)  
  406296:	punpckhdq mm3,QWORD PTR [edx+0x7797d19c]
  40629d:	mov    edx,DWORD PTR [ecx+0x71e2d5f9]
  4062a3:	cmp    edx,DWORD PTR [ecx]
  4062a5:	adc    esp,esi
  4062a7:	pushf  
  4062a8:	and    esi,DWORD PTR [eax+0x5f]
  4062ab:	in     eax,dx
  4062ac:	dec    edi
  4062ad:	stos   BYTE PTR es:[edi],al
  4062ae:	(bad)  
  4062af:	xchg   esi,eax
  4062b0:	cmp    al,0x5c
  4062b2:	aam    0x8
  4062b4:	inc    ebx
  4062b5:	pop    eax
  4062b6:	lea    ebx,fs:[ebp-0x4014961e]
  4062bd:	dec    eax
  4062be:	in     eax,dx
  4062bf:	in     eax,0x40
  4062c1:	add    BYTE PTR [ebx-0x48d8b214],bh
  4062c7:	xor    al,BYTE PTR [ebx-0x1]
  4062ca:	ss call 0x38ae5588
  4062d0:	cs push eax
  4062d2:	and    DWORD PTR [edi],esi
  4062d4:	add    BYTE PTR [edi-0x5ab619d],0x36
  4062db:	int3   
  4062dc:	cmp    al,0xb6
  4062de:	dec    esi
  4062df:	xor    BYTE PTR [ebx-0x3a5d001c],al
  4062e5:	fcmove st,st(0)
  4062e7:	sub    BYTE PTR [eax+0x187952ae],ah
  4062ed:	xor    eax,0x1d529203
  4062f2:	jns    0x406279
  4062f4:	push   ss
  4062f5:	ja     0x406324
  4062f7:	ins    BYTE PTR es:[edi],dx
  4062f8:	sbb    al,0x39
  4062fa:	test   eax,0xb8cc958b
  4062ff:	push   es
  406300:	not    al
  406302:	pushf  
  406303:	dec    ecx
  406304:	mov    dl,0xa4
  406306:	repnz repz repnz mov cl,0xd7
  40630b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40630c:	cli    
  40630d:	mov    edi,esp
  40630f:	push   ecx
  406310:	popf   
  406311:	jmp    0xe7ec:0x66ddf92e
  406318:	outs   dx,DWORD PTR ds:[esi]
  406319:	jl     0x406312
  40631b:	inc    ebx
  40631c:	iret   
  40631d:	outs   dx,BYTE PTR ds:[esi]
  40631e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40631f:	jle    0x406351
  406321:	ins    DWORD PTR es:[edi],dx
  406322:	jge    0x406390
  406324:	inc    ecx
  406325:	xchg   ebx,eax
  406326:	shl    DWORD PTR [edi-0x9c56eee],1
  40632c:	or     dh,BYTE PTR [esi]
  40632e:	aam    0xeb
  406330:	pusha  
  406331:	je     0x4062de
  406333:	dec    ecx
  406334:	(bad)  
  406335:	icebp  
  406336:	pop    ebx
  406337:	inc    esp
  406338:	push   DWORD PTR es:[edi-0x20d4cde6]
  40633f:	mov    dh,0x84
  406341:	mov    esi,0x5738b367
  406346:	shl    DWORD PTR [eax+0x2de62e79],1
  40634c:	outs   dx,BYTE PTR ds:[esi]
  40634d:	sub    al,BYTE PTR [ebx]
  40634f:	xchg   esi,eax
  406350:	mov    eax,0x4efc1e20
  406355:	sbb    al,0x66
  406357:	pop    esp
  406358:	jne    0x40631e
  40635a:	test   BYTE PTR [edx+0x7c16eca1],0x57
  406361:	popa   
  406362:	push   ds
  406363:	lea    esp,[esi]
  406365:	test   eax,0xb388747c
  40636a:	or     BYTE PTR [edi+eax*1-0x41],cl
  40636e:	mov    eax,0x331cf27e
  406373:	sub    ch,BYTE PTR [eax+0xe]
  406376:	push   ss
  406377:	push   ebp
  406378:	test   BYTE PTR [eax-0x6db9b068],al
  40637e:	test   eax,ebx
  406380:	dec    ebx
  406381:	mov    esp,0xd8689103
  406386:	int    0x5f
  406388:	popf   
  406389:	aaa    
  40638a:	jne    0x406326
  40638c:	movd   mm0,DWORD PTR [ecx]
  40638f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406390:	daa    
  406391:	pop    ecx
  406392:	sahf   
  406393:	and    BYTE PTR [esp+edi*4+0x14],0x5d
  406398:	or     eax,0xfb7d418c
  40639d:	cld    
  40639e:	(bad)  
  40639f:	mov    ?,WORD PTR [esi-0x944745e]
  4063a5:	push   ecx
  4063a6:	iret   
  4063a7:	xlat   BYTE PTR es:[ebx]
  4063a9:	test   DWORD PTR [eax],0xe0514b56
  4063af:	cmp    al,0x94
  4063b1:	int    0xb7
  4063b3:	push   ss
  4063b4:	add    eax,0xa50251ab
  4063b9:	or     BYTE PTR [esi+esi*1+0x4f29e7fb],bh
  4063c0:	sub    al,0xc1
  4063c2:	inc    eax
  4063c3:	inc    ecx
  4063c4:	repz out 0xe1,al
  4063c7:	lahf   
  4063c8:	je     0x406423
  4063ca:	loopne 0x4063d5
  4063cc:	jnp    0x40638c
  4063ce:	push   es
  4063cf:	sbb    eax,0x1cdd5cf
  4063d4:	daa    
  4063d5:	pop    ecx
  4063d6:	pop    es
  4063d7:	je     0x4063d0
  4063d9:	ja     0x40635c
  4063db:	or     BYTE PTR [edx],dl
  4063dd:	adc    dl,al
  4063df:	ficomp WORD PTR [ecx+0x567fe529]
  4063e5:	pushf  
  4063e6:	mov    ah,0xc8
  4063e8:	js     0x406447
  4063ea:	adc    eax,0x4128d1cd
  4063ef:	or     esp,DWORD PTR ds:0xdcd54a3e
  4063f5:	lds    ecx,FWORD PTR [edi-0x64]
  4063f8:	sar    BYTE PTR [edi],0x6f
  4063fb:	ffree  st(5)
  4063fd:	jae    0x4063a5
  4063ff:	mov    bh,0x6e
  406401:	jbe    0x40645a
  406403:	mov    ds:0xc69c9634,eax
  406408:	pop    esi
  406409:	pop    edi
  40640a:	(bad)  
  40640b:	cmp    BYTE PTR [edi+0xf9ff5d1],bl
  406411:	ret    0x358
  406414:	push   es
  406415:	dec    edi
  406416:	(bad)  
  406417:	xor    DWORD PTR [edi+edi*8],ebx
  40641a:	cs sub eax,0x24194868
  406420:	and    BYTE PTR [ebp+0x3659ddd7],cl
  406426:	or     eax,0x46022df8
  40642b:	fs or  ebx,edx
  40642e:	call   0x2582:0x60b8a3
  406435:	xor    bl,bl
  406437:	es ja  0x406424
  40643a:	pushf  
  40643b:	xchg   DWORD PTR [edi+0x35547cfa],eax
  406441:	mov    ah,0xb8
  406443:	sub    ebp,ebx
  406445:	xchg   esp,eax
  406446:	xchg   edx,eax
  406447:	push   cs
  406448:	mov    ecx,0xf14e2f0b
  40644d:	jne    0x4063ea
  40644f:	inc    eax
  406450:	(bad)  
  406451:	adc    al,BYTE PTR [eax-0xa]
  406454:	shl    DWORD PTR [eax],0xd4
  406457:	push   cs
  406458:	or     BYTE PTR [eax+0x67],dh
  40645b:	idiv   BYTE PTR [ebp+edx*4-0x324786f8]
  406462:	pop    ecx
  406463:	adc    ebp,edx
  406465:	out    0xc3,al
  406467:	dec    edx
  406468:	mov    ecx,0xb41ad34b
  40646d:	cwde   
  40646e:	stc    
  40646f:	imul   BYTE PTR [esi]
  406471:	fstp   DWORD PTR cs:[ebp-0x691a874f]
  406478:	std    
  406479:	js     0x4064f7
  40647b:	push   ds
  40647c:	sbb    al,dl
  40647e:	in     eax,0x64
  406480:	dec    ecx
  406481:	mov    cl,0x14
  406483:	push   0x91083d06
  406488:	sahf   
  406489:	xor    cl,cl
  40648b:	je     0x40649a
  40648d:	push   ecx
  40648e:	(bad)  
  40648f:	jae    0x40643a
  406491:	mov    dh,0x41
  406493:	cmp    eax,0x48c62ac1
  406498:	jecxz  0x40644d
  40649a:	sysexit 
  40649c:	pushf  
  40649d:	data16 (bad) 
  40649f:	std    
  4064a0:	push   ebx
  4064a1:	jb     0x4064d8
  4064a3:	and    cl,cl
  4064a5:	adc    DWORD PTR [ecx],esp
  4064a7:	fdivr  DWORD PTR [edx]
  4064a9:	mov    esi,0xa2e8abfa
  4064ae:	cmc    
  4064af:	xchg   esi,eax
  4064b0:	adc    al,0x10
  4064b2:	rcl    BYTE PTR [eax+0x44],0x3b
  4064b6:	xchg   ecx,eax
  4064b7:	ss add eax,0x7dd260fb
  4064bd:	shl    BYTE PTR [esi-0x6073b318],1
  4064c3:	sub    eax,0xe5db0730
  4064c8:	xor    eax,0xcfe56be9
  4064cd:	loopne 0x406472
  4064cf:	dec    ebp
  4064d0:	sub    al,0xb6
  4064d2:	sbb    cl,BYTE PTR [ecx-0x43]
  4064d5:	pop    esi
  4064d6:	dec    eax
  4064d7:	and    DWORD PTR gs:[ebx+0x14],ebp
  4064db:	push   es
  4064dc:	mov    esp,ecx
  4064de:	sub    bl,BYTE PTR [eax-0x535bf4de]
  4064e4:	pushf  
  4064e5:	or     DWORD PTR [eax-0x7b],ecx
  4064e8:	cwde   
  4064e9:	aad    0xe3
  4064eb:	out    dx,eax
  4064ec:	sub    BYTE PTR [edx+eax*8+0x7066a3a],0x3a
  4064f4:	sub    DWORD PTR [edi],ebx
  4064f6:	rcr    bh,1
  4064f8:	shl    BYTE PTR [ecx+ebp*1],1
  4064fb:	jmp    0xee1732c6
  406500:	jl     0x40654c
  406502:	popf   
  406503:	repz mov eax,0xf3fd6e3d
  406509:	sahf   
  40650a:	pop    ebp
  40650b:	add    cl,bh
  40650d:	cmp    BYTE PTR [edi],bh
  40650f:	inc    edx
  406510:	int    0xc1
  406512:	xor    al,0xf6
  406514:	or     bh,0x4b
  406517:	out    0xf,al
  406519:	add    al,0x98
  40651b:	lds    esi,FWORD PTR gs:[edx+0x5a]
  40651f:	leave  
  406520:	lds    esi,FWORD PTR [ebx-0x17]
  406523:	retf   0x8e0d
  406526:	popa   
  406527:	dec    ebx
  406528:	aaa    
  406529:	(bad)  
  40652c:	pusha  
  40652d:	outs   dx,DWORD PTR ds:[esi]
  40652e:	jns    0x40657e
  406530:	and    DWORD PTR [eax-0x54922959],ebp
  406536:	ins    BYTE PTR es:[edi],dx
  406537:	xchg   edx,eax
  406538:	cmp    edx,ebp
  40653a:	or     BYTE PTR [esi],dh
  40653c:	das    
  40653d:	into   
  40653e:	inc    ebp
  40653f:	push   ecx
  406540:	call   FWORD PTR [ebx+ebx*2]
  406543:	(bad)  [edx+0x2ffd6a12]
  406549:	inc    ecx
  40654a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40654b:	jae    0x406546
  40654d:	jmp    0x3bd66c
  406552:	mov    edx,0x8248cfd8
  406557:	or     al,0x28
  406559:	lahf   
  40655a:	sub    edx,DWORD PTR [esi+0x20]
  40655d:	ror    DWORD PTR [edi+0x50],0x24
  406561:	dec    edx
  406562:	mov    ch,0xe6
  406564:	lods   al,BYTE PTR ds:[esi]
  406565:	push   ebp
  406566:	mov    edx,0x2b572f
  40656b:	xchg   ebp,eax
  40656c:	dec    esi
  40656d:	sub    ch,BYTE PTR [edi+edi*1+0x4554a1d5]
  406574:	(bad)  
  406575:	aas    
  406576:	inc    eax
  406577:	mov    edx,0x4b0a8b1d
  40657c:	cmp    eax,0xbdbbd4d4
  406581:	xchg   ebp,eax
  406582:	(bad)  
  406583:	xchg   edx,eax
  406584:	jne    0x406561
  406586:	rcr    DWORD PTR [esi+0xa],0xa1
  40658a:	dec    eax
  40658b:	data16 jl 0x4065d3
  40658e:	(bad)  
  40658f:	imul   ecx,DWORD PTR [ebp-0x34],0x40
  406593:	and    al,0x7b
  406595:	fadd   st(0),st
  406597:	mov    al,0xef
  406599:	push   0xc2bec525
  40659e:	jecxz  0x406577
  4065a0:	mov    cs,WORD PTR [esi-0x48]
  4065a3:	adc    ebx,DWORD PTR [edi-0x22]
  4065a6:	mov    al,0x3f
  4065a8:	test   al,0xb4
  4065aa:	mov    DWORD PTR [ebx+0x7d],ecx
  4065ad:	outs   dx,BYTE PTR ds:[esi]
  4065ae:	neg    BYTE PTR [ebx]
  4065b0:	mov    edi,0xb22d2c7b
  4065b5:	call   0xf532d2cc
  4065ba:	or     DWORD PTR [ebp+0x12],esi
  4065bd:	outs   dx,DWORD PTR ds:[esi]
  4065be:	adc    al,BYTE PTR [edi+eiz*4+0x121e99b]
  4065c5:	fdiv   QWORD PTR [edi]
  4065c7:	stc    
  4065c8:	out    0xa6,al
  4065ca:	lea    esp,[esi+0x62ca0141]
  4065d0:	es mov bh,0x5f
  4065d3:	add    edx,DWORD PTR [edx-0x4b3afc1b]
  4065d9:	addr16 jo 0x406579
  4065dc:	adc    al,bh
  4065de:	les    eax,FWORD PTR [edi-0x4bfab629]
  4065e4:	sahf   
  4065e5:	or     eax,0x55952c98
  4065ea:	push   es
  4065eb:	pop    ss
  4065ec:	hlt    
  4065ed:	pushf  
  4065ee:	clc    
  4065ef:	jl     0x40666d
  4065f1:	ja     0x406629
  4065f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065f4:	clc    
  4065f5:	xor    BYTE PTR [ecx-0x172c21e4],cl
  4065fb:	dec    esp
  4065fc:	int3   
  4065fd:	add    BYTE PTR [ebp+eax*2-0x1c],ah
  406601:	jmp    0xea2dc3d1
  406606:	mov    eax,0xb2e141bb
  40660b:	cmp    al,0xc9
  40660d:	loope  0x4065e9
  40660f:	out    0x98,al
  406611:	jp     0x406605
  406613:	jne    0x406670
  406615:	adc    eax,0xe9b8437f
  40661a:	das    
  40661b:	cmp    ecx,DWORD PTR [edi]
  40661d:	scas   eax,DWORD PTR es:[edi]
  40661e:	inc    edi
  40661f:	dec    ebx
  406620:	adc    BYTE PTR [ebx-0x1b],dh
  406623:	or     ebp,DWORD PTR [edi]
  406625:	(bad)  
  406626:	xchg   ebx,eax
  406627:	fimul  DWORD PTR [ebx+ecx*8-0x4f4ce3cf]
  40662e:	je     0x406634
  406630:	pushf  
  406631:	aad    0xbc
  406633:	aad    0x38
  406635:	jp     0x4065f8
  406637:	or     ebx,esp
  406639:	scas   al,BYTE PTR es:[edi]
  40663a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40663b:	fldenv [eax]
  40663d:	cmp    esp,DWORD PTR [edx-0x45]
  406640:	lds    ebx,FWORD PTR [ebx]
  406642:	xchg   ebx,eax
  406643:	neg    BYTE PTR [edx-0x21]
  406646:	lea    ecx,[edx+eiz*2+0x2]
  40664a:	add    eax,0x54c1e01a
  40664f:	push   ss
  406650:	and    ebp,DWORD PTR [ecx-0x48e44cfd]
  406656:	mov    BYTE PTR ds:0xb798890a,dh
  40665c:	push   ds
  40665d:	mov    cs,WORD PTR [esi+esi*4-0x35a32edf]
  406664:	mov    cl,cl
  406666:	gs push esp
  406668:	jne    0x40664b
  40666a:	mov    eax,0x8889078f
  40666f:	jb     0x4066b4
  406671:	out    dx,al
  406672:	hlt    
  406673:	jl     0x4066e7
  406675:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406676:	push   eax
  406677:	jl     0x4066b3
  406679:	in     eax,0xd0
  40667b:	cmp    bh,cl
  40667d:	enter  0xc5fc,0x2b
  406681:	push   cs
  406682:	push   es
  406683:	and    eax,0x60f9e7
  406688:	push   ebp
  406689:	pop    ds
  40668a:	out    dx,eax
  40668b:	sbb    al,0x9c
  40668d:	pop    es
  40668e:	xchg   esp,eax
  40668f:	scas   al,BYTE PTR es:[edi]
  406690:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406691:	pop    esi
  406692:	scas   al,BYTE PTR es:[edi]
  406693:	(bad)  
  406694:	jbe    0x406685
  406696:	or     al,dh
  406698:	push   edx
  406699:	add    eax,0x5cdf2e64
  40669e:	push   eax
  40669f:	shl    BYTE PTR [edx+0x4e],cl
  4066a2:	push   ebx
  4066a3:	sbb    al,0x9d
  4066a5:	ss test al,0x51
  4066a8:	jp     0x4066cc
  4066aa:	sbb    eax,0x5cc00ae5
  4066af:	(bad)  
  4066b1:	leave  
  4066b2:	jb     0x40670d
  4066b4:	push   esi
  4066b5:	or     edx,DWORD PTR [eax]
  4066b7:	lahf   
  4066b8:	pop    ds
  4066b9:	aaa    
  4066ba:	push   ecx
  4066bb:	ret    0x3dfe
  4066be:	clc    
  4066bf:	into   
  4066c0:	adc    eax,0xc2b5c930
  4066c5:	adc    edx,ecx
  4066c7:	mov    BYTE PTR [esi-0x15],al
  4066ca:	inc    ebx
  4066cb:	mov    bh,0x95
  4066cd:	cmp    BYTE PTR ds:0x6ea3b412,ah
  4066d3:	das    
  4066d4:	add    al,dh
  4066d6:	dec    ebx
  4066d7:	inc    esp
  4066d9:	pop    ds
  4066da:	push   ss
  4066db:	stos   BYTE PTR es:[edi],al
  4066dc:	(bad)  
  4066dd:	les    eax,FWORD PTR [ebx-0x5a]
  4066e0:	push   eax
  4066e1:	sbb    al,0x37
  4066e3:	xchg   dl,dl
  4066e5:	outs   dx,DWORD PTR ds:[esi]
  4066e6:	cli    
  4066e7:	mov    esi,esp
  4066e9:	add    edi,DWORD PTR [esi+0x721e0af2]
  4066ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066f0:	xchg   ebp,eax
  4066f1:	inc    eax
  4066f2:	and    esi,DWORD PTR [esi]
  4066f4:	fimul  WORD PTR [edi-0x7e8bd54e]
  4066fa:	adc    BYTE PTR [edx+0x8400c7d],0x3b
  406701:	adc    BYTE PTR [ebx+0x72],dl
  406704:	stos   DWORD PTR es:[edi],eax
  406705:	pop    ebx
  406706:	mov    cl,0x2d
  406708:	adc    al,0x4
  40670a:	lock les edi,FWORD PTR [esi-0x7b211432]
  406711:	or     bl,0x70
  406714:	fistp  QWORD PTR [eax+ebx*1]
  406717:	retf   0xd9bc
  40671a:	cli    
  40671b:	push   edx
  40671c:	call   0x6dab3674
  406721:	inc    ebp
  406722:	mov    edi,0xdc5dd8a0
  406727:	fucom  st(7)
  406729:	imul   esi,DWORD PTR [ebx],0x72a977bb
  40672f:	xor    ch,BYTE PTR [ecx+edi*1]
  406732:	call   0x7f4c:0xa86f5945
  406739:	add    eax,0xd7bdb7ab
  40673e:	cmp    esi,DWORD PTR [esi+0x6fba8d8b]
  406744:	in     eax,dx
  406745:	adc    dl,BYTE PTR [ebx-0x1b]
  406748:	mov    ebp,0xb64b6fe5
  40674d:	add    eax,ebx
  40674f:	dec    ebp
  406750:	ss push edx
  406752:	inc    ebp
  406753:	xchg   cl,al
  406755:	loope  0x4066e8
  406757:	add    DWORD PTR [edi-0x1d034659],0x40
  40675e:	test   al,0xb9
  406760:	mov    DWORD PTR [ebx+0x48],edx
  406763:	adc    al,0xc0
  406765:	jbe    0x406752
  406767:	hlt    
  406768:	mov    dh,0x66
  40676a:	mov    ch,0xfa
  40676c:	outs   dx,BYTE PTR ds:[esi]
  40676d:	xchg   esi,eax
  40676e:	je     0x406799
  406770:	ret    
  406771:	rcl    WORD PTR [ebx],0x19
  406775:	dec    esi
  406776:	retf   
  406777:	cwde   
  406778:	lahf   
  406779:	in     eax,dx
  40677a:	or     eax,0x85ba8ab0
  40677f:	jmp    0x406707
  406781:	add    al,0x76
  406783:	push   0x49119b77
  406788:	enter  0xb042,0x5a
  40678c:	in     eax,0x69
  40678e:	ins    DWORD PTR es:[edi],dx
  40678f:	std    
  406790:	ds test dh,ch
  406793:	addr16 in eax,dx
  406795:	pop    ss
  406796:	pushf  
  406797:	out    0xce,eax
  406799:	rol    DWORD PTR [edx+edi*4+0x32],0xcb
  40679e:	outs   dx,BYTE PTR ds:[esi]
  40679f:	lods   eax,DWORD PTR ds:[esi]
  4067a0:	(bad)  
  4067a2:	push   0xffffffb5
  4067a4:	xor    edi,DWORD PTR [ebp-0x11]
  4067a7:	mov    ebx,0x283fc32f
  4067ac:	adc    BYTE PTR [ecx+0xa],bl
  4067af:	and    al,BYTE PTR [edx]
  4067b1:	add    al,0xb1
  4067b3:	int3   
  4067b4:	add    DWORD PTR [ebp+0x1e4b1729],esp
  4067ba:	retf   0x93bd
  4067bd:	mov    ds:0x4eeb39d9,eax
  4067c2:	pop    edi
  4067c3:	cli    
  4067c4:	sub    eax,0x71571a5
  4067c9:	jne    0x406842
  4067cb:	jno    0x406766
  4067cd:	xor    ah,BYTE PTR [ebx+0xa]
  4067d0:	ret    0x3645
  4067d3:	arpl   WORD PTR [ebx],cx
  4067d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067d6:	push   esi
  4067d7:	or     DWORD PTR [ebx],ebp
  4067d9:	out    0x3b,eax
  4067db:	sub    BYTE PTR [ebp+0xe],bl
  4067de:	inc    esp
  4067df:	test   BYTE PTR [ecx-0x2d162a47],bh
  4067e5:	xchg   bx,ax
  4067e7:	les    ecx,FWORD PTR [edx-0x79]
  4067ea:	test   BYTE PTR [esi],bl
  4067ec:	dec    edx
  4067ed:	(bad)  
  4067ee:	pop    esi
  4067ef:	pop    ebp
  4067f0:	shr    BYTE PTR [eax+0x71],1
  4067f3:	pop    edi
  4067f4:	in     eax,0xe5
  4067f6:	call   0x22f3:0xb9fdda07
  4067fd:	enter  0x9c65,0xd6
  406801:	stos   BYTE PTR es:[edi],al
  406802:	addr16 xchg edi,eax
  406804:	and    edi,DWORD PTR [edx-0x14]
  406807:	push   0x1c
  406809:	shl    BYTE PTR [eax-0x2660c0fb],0x55
  406810:	push   edi
  406811:	(bad)  
  406812:	in     eax,dx
  406813:	xchg   ebx,eax
  406814:	fwait
  406815:	mov    ebx,0xedfa5407
  40681a:	mov    bh,0x66
  40681c:	xor    al,0xe7
  40681e:	jmp    0x40684c
  406820:	inc    eax
  406821:	js     0x40683a
  406823:	mov    edx,0x5288f535
  406828:	fs push ebx
  40682a:	fnsave [ecx-0x618bf0d7]
  406830:	loop   0x40689b
  406832:	std    
  406833:	mov    ebx,ebx
  406835:	int3   
  406836:	lods   al,BYTE PTR ds:[esi]
  406837:	sub    cl,cl
  406839:	mov    eax,ds:0x3acf3c1b
  40683e:	push   0x45
  406840:	ss out 0xbf,eax
  406843:	(bad)  
  406844:	aad    0x63
  406846:	or     esi,DWORD PTR [edx+eiz*8+0xc5c31ae]
  40684d:	dec    ecx
  40684e:	push   cs
  40684f:	add    ecx,edi
  406851:	icebp  
  406852:	cwde   
  406853:	cmp    bh,dh
  406855:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406856:	sub    ax,bx
  406859:	imul   edx,DWORD PTR [ebp+ebp*8+0x63481dd9],0x3c
  406861:	sbb    dl,dh
  406863:	inc    esp
  406864:	aad    0xe
  406866:	push   ds
  406867:	lock jnp 0x4067f0
  40686a:	xor    cl,BYTE PTR [ebx-0x4cf03f21]
  406870:	pop    es
  406871:	mov    ds:0x829f4aba,al
  406876:	test   al,0xfe
  406878:	pop    ds
  406879:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40687a:	lea    ecx,[ecx+edx*8]
  40687d:	adc    al,0xcc
  40687f:	push   ecx
  406880:	mov    esp,0x3cd8348c
  406885:	push   cs
  406886:	test   al,0x42
  406888:	sti    
  406889:	xlat   BYTE PTR ds:[ebx]
  40688a:	inc    ebx
  40688b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40688c:	sbb    BYTE PTR [edx-0x41963c87],bl
  406892:	fadd   DWORD PTR [eax]
  406894:	popf   
  406895:	mov    cl,0xaa
  406897:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406898:	jl     0x40684d
  40689a:	xchg   edi,eax
  40689b:	mov    ch,0xf1
  40689d:	loop   0x406861
  40689f:	lds    edx,FWORD PTR [edx+eiz*1]
  4068a2:	and    ebp,eax
  4068a4:	mov    ds:0xb0073c33,al
  4068a9:	mov    edx,0xb14fc479
  4068ae:	xor    DWORD PTR [ecx+0x3],edx
  4068b1:	pop    ds
  4068b2:	mov    esi,0x60a766ff
  4068b7:	dec    ebp
  4068b8:	xchg   ebp,eax
  4068b9:	stc    
  4068ba:	sbb    ebx,DWORD PTR [ebx]
  4068bc:	(bad)  
  4068bd:	fdiv   st,st(1)
  4068bf:	pop    ebx
  4068c0:	sar    BYTE PTR [ecx-0x22],0x3
  4068c4:	out    0x5a,eax
  4068c6:	leave  
  4068c7:	pop    edx
  4068c8:	aas    
  4068c9:	sub    al,0x69
  4068cb:	mov    BYTE PTR [ebx-0x1],dl
  4068ce:	fmul   DWORD PTR [ebx]
  4068d0:	das    
  4068d1:	pop    ebp
  4068d2:	cld    
  4068d3:	push   0x3a
  4068d5:	ins    BYTE PTR es:[edi],dx
  4068d6:	push   esi
  4068d7:	pop    edi
  4068d8:	mov    bl,BYTE PTR [ebx-0x53]
  4068db:	mov    ds:0xa331c8e6,al
  4068e0:	ins    BYTE PTR es:[edi],dx
  4068e1:	pop    eax
  4068e2:	fsub   st,st(1)
  4068e4:	out    dx,eax
  4068e5:	fwait
  4068e6:	lds    ecx,FWORD PTR [edi-0x3d]
  4068e9:	es push 0x83730fc2
  4068ef:	nop
  4068f0:	(bad)  
  4068f1:	add    al,0x44
  4068f3:	jae    0x4068ce
  4068f5:	out    dx,eax
  4068f6:	jns    0x4068b9
  4068f8:	pop    edi
  4068f9:	repnz stc 
  4068fb:	mov    edi,0xe4eeaa72
  406900:	pushf  
  406901:	and    edx,DWORD PTR [edi-0x50]
  406904:	pop    es
  406905:	jmp    0x9b2a:0x6314271b
  40690c:	jmp    0x4068db
  40690e:	adc    esi,0xffffffc7
  406911:	and    dh,BYTE PTR [esi-0x1b]
  406914:	retf   0x110b
  406917:	mov    ah,0x60
  406919:	ss scas eax,DWORD PTR es:[edi]
  40691b:	jecxz  0x4068c5
  40691d:	cmp    edi,ecx
  40691f:	ror    eax,1
  406921:	test   ebx,ebx
  406923:	sub    ch,dh
  406925:	cmp    BYTE PTR [ebx],al
  406927:	mov    cl,0x78
  406929:	outs   dx,DWORD PTR ds:[esi]
  40692a:	enter  0x57b,0x56
  40692e:	js     0x4068e3
  406930:	out    0x49,al
  406932:	outs   dx,BYTE PTR ds:[esi]
  406933:	leave  
  406934:	dec    edx
  406935:	and    eax,DWORD PTR [edi-0x1c316505]
  40693b:	ds icebp 
  40693d:	adc    esp,DWORD PTR [ecx]
  40693f:	cdq    
  406940:	push   es
  406941:	pop    esi
  406942:	test   al,0x5
  406944:	aaa    
  406945:	xchg   dh,bl
  406947:	pop    ebp
  406948:	pop    ds
  406949:	inc    esi
  40694a:	inc    edx
  40694b:	mov    ebp,0x70733eb
  406950:	clc    
  406951:	jbe    0x406993
  406953:	xchg   edx,eax
  406954:	push   ss
  406955:	xchg   esp,eax
  406956:	out    0x29,al
  406958:	nop
  406959:	adc    BYTE PTR [ebx+0x15c39afe],0x1f
  406960:	ds mov esi,0x99f8f7aa
  406966:	jle    0x406966
  406968:	fild   WORD PTR [edx+eiz*1+0x67]
  40696c:	sahf   
  40696d:	sub    eax,0xdfed9f21
  406972:	cmc    
  406973:	sbb    dl,BYTE PTR [ebp+0x3c68d396]
  406979:	in     al,0xdc
  40697b:	sub    esi,edi
  40697d:	mov    DWORD PTR [eax-0x3e],ebx
  406980:	xchg   BYTE PTR [ebx-0x40],bh
  406983:	outs   dx,BYTE PTR ds:[esi]
  406984:	test   BYTE PTR [esp+eax*2-0x42],ah
  406988:	(bad)  [edi-0x6df26383]
  40698e:	xor    ebp,ebp
  406990:	leave  
  406991:	adc    BYTE PTR [edx+0x78],0xea
  406995:	mov    esp,DWORD PTR [edx-0x7c5e306b]
  40699b:	lock dec eax
  40699d:	fild   DWORD PTR [ebp-0x51e0d06b]
  4069a3:	inc    esi
  4069a4:	push   es
  4069a5:	mov    ds,ecx
  4069a7:	scas   al,BYTE PTR es:[edi]
  4069a8:	outs   dx,BYTE PTR ds:[esi]
  4069a9:	jno    0x406981
  4069ab:	(bad)
  4069ae:	in     eax,dx
  4069af:	cmp    eax,0xa557b798
  4069b4:	inc    ecx
  4069b5:	cmp    al,0xed
  4069b7:	push   esp
  4069b8:	retf   
  4069b9:	enter  0xb127,0x7
  4069bd:	aas    
  4069be:	xchg   esp,eax
  4069bf:	cli    
  4069c0:	mov    ebp,?
  4069c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069c3:	mov    ah,0x60
  4069c5:	xor    DWORD PTR [esi+0x145f04c],edi
  4069cb:	call   0x6538:0x692fcfc0
  4069d2:	rsqrtps xmm1,xmm0
  4069d5:	idiv   DWORD PTR [edi+ebp*2+0x2c]
  4069d9:	shl    BYTE PTR ds:0x34ad8e9f,1
  4069df:	inc    di
  4069e1:	loop   0x4069fd
  4069e3:	inc    BYTE PTR [ebp+0x8]
  4069e6:	mov    dl,0xfb
  4069e8:	mov    ebp,?
  4069ea:	xchg   BYTE PTR [ecx-0x40],bl
  4069ed:	sub    BYTE PTR [ebp-0x54043452],ah
  4069f3:	out    dx,eax
  4069f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069f5:	mov    BYTE PTR [edx],bl
  4069f7:	call   0xd23674a6
  4069fc:	sahf   
  4069fd:	inc    edi
  4069fe:	jg     0x406a30
  406a00:	test   eax,0x8ed6a54e
  406a05:	adc    al,0x1
  406a07:	push   es
  406a08:	popf   
  406a09:	ins    BYTE PTR es:[edi],dx
  406a0a:	push   esi
  406a0b:	pop    edi
  406a0c:	pop    ds
  406a0d:	shr    edi,1
  406a0f:	or     dh,ch
  406a11:	scas   eax,DWORD PTR es:[edi]
  406a12:	icebp  
  406a13:	stos   BYTE PTR es:[edi],al
  406a14:	pop    DWORD PTR [edi+eiz*4-0x62988be]
  406a1b:	popa   
  406a1c:	xchg   BYTE PTR [edi+0x74f03f65],bl
  406a22:	sahf   
  406a23:	imul   ebp,DWORD PTR [ecx+0x54f8ad98],0x2a919e8a
  406a2d:	gs dec esi
  406a2f:	neg    edi
  406a31:	adc    eax,0x85c9f712
  406a36:	jmp    0x5a4f:0x73a74732
  406a3d:	xchg   esi,eax
  406a3e:	and    BYTE PTR ds:0xfeaa781e,al
  406a44:	cmp    dl,BYTE PTR [eax+0x48c7cfa1]
  406a4a:	mov    ebp,0xbf39b581
  406a4f:	mov    ebx,0xd4c9da39
  406a54:	stos   DWORD PTR es:[edi],eax
  406a55:	es push edx
  406a57:	mov    edx,0x1c304535
  406a5c:	dec    edi
  406a5d:	push   edx
  406a5e:	in     eax,dx
  406a5f:	dec    ebx
  406a60:	aad    0xb8
  406a62:	outs   dx,BYTE PTR fs:[esi]
  406a64:	popa   
  406a65:	or     bl,BYTE PTR [eax]
  406a67:	adc    DWORD PTR [esi],edx
  406a69:	ins    BYTE PTR es:[edi],dx
  406a6a:	int3   
  406a6b:	aam    0xa8
  406a6d:	adc    al,0xf6
  406a6f:	inc    eax
  406a70:	mov    ebp,0x6b468c37
  406a75:	lods   al,BYTE PTR ds:[esi]
  406a76:	add    eax,0xd0ca2b7d
  406a7b:	mov    ecx,0x3221113e
  406a80:	out    dx,eax
  406a81:	or     al,0xd9
  406a83:	pop    eax
  406a84:	mov    ebx,DWORD PTR [edx-0x4e]
  406a87:	jecxz  0x406afb
  406a89:	arpl   WORD PTR [edx-0x1b1cb13],bp
  406a8f:	mov    edi,0x928ef96
  406a94:	or     BYTE PTR [ebx],0x39
  406a97:	cmp    al,0x62
  406a99:	mov    ah,0x1b
  406a9b:	or     esi,DWORD PTR [ebp+0x58]
  406a9e:	mov    dh,0xc9
  406aa0:	(bad)  
  406aa1:	mov    al,BYTE PTR [ecx-0x6e0803ec]
  406aa7:	jbe    0x406a4a
  406aa9:	xchg   esp,eax
  406aaa:	push   cs
  406aab:	adc    ch,cl
  406aad:	sbb    eax,DWORD PTR [ecx]
  406aaf:	xchg   ebp,eax
  406ab0:	pop    ebp
  406ab1:	pushf  
  406ab2:	or     eax,0x84809534
  406ab7:	xor    edi,ebx
  406ab9:	inc    ebx
  406aba:	call   0xd5b72fb7
  406abf:	xchg   esi,eax
  406ac0:	pushf  
  406ac1:	(bad)  
  406ac3:	jnp    0x406b37
  406ac5:	dec    ebx
  406ac6:	(bad)  
  406ac7:	idiv   DWORD PTR [edi]
  406ac9:	lods   eax,DWORD PTR ds:[esi]
  406aca:	lock in al,0x79
  406acd:	scas   al,BYTE PTR es:[edi]
  406ace:	push   ss
  406acf:	pop    edi
  406ad0:	int3   
  406ad1:	test   BYTE PTR [edi+0x5f8f893],ah
  406ad7:	ror    BYTE PTR [edi-0x19],0xa
  406adb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406adc:	aad    0x8d
  406ade:	cdq    
  406adf:	push   edi
  406ae0:	aas    
  406ae1:	mov    bh,BYTE PTR [ecx+0x2a]
  406ae4:	mov    edi,0xed11ea3f
  406ae9:	ret    0x61d9
  406aec:	add    dl,BYTE PTR [ebp-0x45ccf434]
  406af2:	fild   WORD PTR [ecx+eax*2]
  406af5:	test   al,0x8e
  406af7:	test   al,0xb
  406af9:	mov    es,WORD PTR [ebx]
  406afb:	and    al,0xff
  406afd:	mov    edx,0x99753853
  406b02:	fldz   
  406b04:	pop    es
  406b05:	rcl    BYTE PTR [ecx],1
  406b07:	mov    eax,ds:0x7922983a
  406b0c:	ins    BYTE PTR es:[di],dx
  406b0e:	pop    edx
  406b0f:	or     eax,0x5e330d0f
  406b14:	and    bh,BYTE PTR [eax+0x45]
  406b17:	fs data16 cmp bh,ch
  406b1b:	xor    DWORD PTR [ecx+ebp*2-0x1469278b],esp
  406b22:	(bad)  
  406b24:	lahf   
  406b25:	push   ss
  406b26:	lds    esp,FWORD PTR [ebx+0x70]
  406b29:	adc    eax,0xe0f6e041
  406b2e:	xchg   edx,eax
  406b2f:	loopne 0x406b0e
  406b31:	ret    0xbaa2
  406b34:	xor    BYTE PTR [edi-0x2734488f],ah
  406b3a:	lods   eax,DWORD PTR ds:[esi]
  406b3b:	das    
  406b3c:	leave  
  406b3d:	adc    bh,BYTE PTR [eax]
  406b3f:	cmp    al,0xd0
  406b41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b42:	into   
  406b43:	mov    edx,0x5db4bb68
  406b48:	not    dl
  406b4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b4b:	cdq    
  406b4c:	(bad)  
  406b4d:	lds    esp,FWORD PTR [ebx-0x127d26cf]
  406b53:	std    
  406b54:	call   0x4bd4:0xac63230b
  406b5b:	xor    dl,BYTE PTR [eax-0x78]
  406b5e:	(bad)  
  406b5f:	fcmovnu st,st(1)
  406b61:	sbb    esi,DWORD PTR [esi+edx*1-0x55]
  406b65:	outs   dx,DWORD PTR ds:[esi]
  406b66:	xchg   cl,cl
  406b68:	dec    ecx
  406b69:	repnz cli 
  406b6b:	popa   
  406b6c:	cmp    al,0x74
  406b6e:	mov    ch,BYTE PTR [ebx]
  406b70:	into   
  406b71:	mov    bh,0x6c
  406b73:	push   edi
  406b74:	scas   eax,DWORD PTR es:[edi]
  406b75:	inc    ebp
  406b76:	cld    
  406b77:	inc    esp
  406b78:	repnz lods al,BYTE PTR ds:[esi]
  406b7a:	push   ebp
  406b7b:	lods   eax,DWORD PTR ds:[esi]
  406b7c:	cmp    DWORD PTR ds:0xd3598ef1,0x45
  406b83:	iret   
  406b84:	lahf   
  406b85:	pop    eax
  406b86:	outs   dx,BYTE PTR ds:[esi]
  406b87:	adc    al,0x4e
  406b89:	mov    edi,0xf0ba71a2
  406b8e:	sub    BYTE PTR [eax+0x4d727bd8],al
  406b94:	rol    DWORD PTR [ebx],0x66
  406b97:	pushf  
  406b98:	add    ebx,0xa581260d
  406b9e:	mov    bh,0xeb
  406ba0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ba1:	popf   
  406ba2:	and    bh,BYTE PTR [esi-0x12]
  406ba5:	and    eax,0x5fe70135
  406baa:	clc    
  406bab:	arpl   WORD PTR [ebx+esi*2-0x7f],di
  406baf:	mov    edx,0x1e487ccd
  406bb4:	fidivr WORD PTR gs:[ecx-0x4d]
  406bb8:	mov    edi,DWORD PTR [eax-0x57]
  406bbb:	and    al,0x80
  406bbd:	xor    BYTE PTR [ebx-0x49],0xf8
  406bc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bc2:	test   eax,0x8fe14c1d
  406bc7:	imul   ebx,DWORD PTR [edx],0xffffff9d
  406bca:	add    al,0x6a
  406bcc:	pushf  
  406bcd:	retf   0xb033
  406bd0:	jae    0x406b59
  406bd2:	jecxz  0x406c0a
  406bd4:	sub    ebx,DWORD PTR [ecx]
  406bd6:	jae    0x406ba8
  406bd8:	jl     0x406bdf
  406bda:	adc    al,BYTE PTR [edi+edx*8-0x5f]
  406bde:	and    edi,edx
  406be0:	neg    DWORD PTR [ecx]
  406be2:	repz sub DWORD PTR [ebp+0x2a],ecx
  406be6:	test   DWORD PTR [esi],ebp
  406be8:	pop    ecx
  406be9:	mov    eax,ds:0x864e4a6b
  406bee:	dec    ebp
  406bef:	aas    
  406bf0:	inc    edi
  406bf1:	dec    ecx
  406bf2:	outs   dx,BYTE PTR ds:[esi]
  406bf3:	daa    
  406bf4:	mov    cl,0x4
  406bf6:	dec    ebx
  406bf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bf8:	ins    DWORD PTR es:[edi],dx
  406bf9:	retf   0xfd03
  406bfc:	push   edx
  406bfd:	or     eax,0x85fbb6a9
  406c02:	pop    eax
  406c03:	ins    BYTE PTR es:[edi],dx
  406c04:	sub    BYTE PTR [eax+ebp*4-0x77556ace],bl
  406c0b:	fwait
  406c0c:	int3   
  406c0d:	pop    edi
  406c0e:	pop    esi
  406c0f:	mov    al,ds:0xff4a9469
  406c14:	pop    eax
  406c15:	mov    al,ds:0xa5d33d84
  406c1a:	stos   DWORD PTR es:[edi],eax
  406c1b:	cld    
  406c1c:	pop    esi
  406c1d:	repz imul edx,DWORD PTR [edx+edx*4-0x3d4478b7],0xffffffb0
  406c26:	lea    edi,[eax+0x1b89ba08]
  406c2c:	jnp    0x406c23
  406c2e:	and    eax,0x64a24740
  406c33:	es addr16 in al,dx
  406c36:	push   ds
  406c37:	adc    eax,0xecc42cdd
  406c3c:	test   BYTE PTR [esi-0x2b],dl
  406c3f:	lahf   
  406c40:	sub    ecx,DWORD PTR [ebx+0x79]
  406c43:	ins    DWORD PTR es:[edi],dx
  406c44:	push   es
  406c45:	add    ch,BYTE PTR [edi-0x114d2cd9]
  406c4b:	mov    BYTE PTR [edi],dh
  406c4d:	xor    eax,0x1dfd4887
  406c52:	or     BYTE PTR [esi-0x1a],ch
  406c55:	or     edx,DWORD PTR [ecx+ebx*8-0x7b]
  406c59:	sar    BYTE PTR [ecx],0x9
  406c5c:	add    ebx,DWORD PTR [ebp-0x4e]
  406c5f:	shr    cl,0x39
  406c62:	clc    
  406c63:	sbb    al,0xc8
  406c65:	mov    DWORD PTR [esi-0x7b],esi
  406c68:	mov    eax,0xe3509e96
  406c6d:	jae    0x406c7a
  406c6f:	sub    DWORD PTR [ebp+0x32],ecx
  406c72:	xor    eax,0xc8a1522b
  406c77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c79:	nop
  406c7a:	loopne 0x406c9f
  406c7c:	mov    ebx,0x5cd6ca87
  406c81:	imul   DWORD PTR [edx-0x22]
  406c84:	arpl   dx,bx
  406c86:	pop    ecx
  406c87:	xor    eax,0x731c3ed3
  406c8c:	js     0x406c3a
  406c8e:	adc    DWORD PTR [esp+ecx*1+0x74d2fc95],esp
  406c95:	pop    ebx
  406c96:	sahf   
  406c97:	or     al,0x5e
  406c99:	ret    
  406c9a:	int    0xd3
  406c9c:	int    0x8a
  406c9e:	mov    ch,0x31
  406ca0:	add    dl,0xa7
  406ca3:	mov    bh,ch
  406ca5:	or     DWORD PTR [ecx],edx
  406ca7:	mov    bl,0x11
  406ca9:	push   edx
  406caa:	les    ebp,FWORD PTR fs:[ebp+0x2f4aacf9]
  406cb1:	(bad)  
  406cb2:	jns    0x406c91
  406cb4:	cmp    al,0x93
  406cb6:	push   ebp
  406cb7:	cmp    eax,0xd1b9dd3d
  406cbc:	sti    
  406cbd:	mov    ebx,0x153cbeca
  406cc2:	dec    edx
  406cc3:	stos   DWORD PTR es:[edi],eax
  406cc4:	and    al,bh
  406cc6:	xchg   edx,eax
  406cc7:	add    al,0x30
  406cc9:	mov    dl,0x9
  406ccb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ccc:	dec    ecx
  406ccd:	das    
  406cce:	cmp    eax,0x70404ff1
  406cd3:	cmc    
  406cd4:	or     esi,ebx
  406cd6:	push   eax
  406cd7:	imul   ebx
  406cd9:	mov    esi,0xa44f2968
  406cde:	adc    al,0xf4
  406ce0:	cmp    DWORD PTR [esi-0xf],ecx
  406ce3:	and    DWORD PTR [edx+0x46],ebp
  406ce6:	mov    eax,0xff6213c0
  406ceb:	lods   al,BYTE PTR ds:[esi]
  406cec:	xlat   BYTE PTR ds:[ebx]
  406ced:	arpl   cx,di
  406cef:	sbb    DWORD PTR [ebx+edi*1-0x3e6f550b],ebp
  406cf6:	hlt    
  406cf7:	loopne 0x406cce
  406cf9:	sahf   
  406cfa:	jno    0x406d2d
  406cfc:	xlat   BYTE PTR ds:[ebx]
  406cfd:	mov    bh,0x72
  406cff:	out    0x7f,eax
  406d01:	dec    edi
  406d02:	ja     0x406d0f
  406d04:	loopne 0x406c99
  406d06:	fs ins DWORD PTR es:[edi],dx
  406d08:	fistp  DWORD PTR [edi]
  406d0a:	lods   al,BYTE PTR ds:[esi]
  406d0b:	push   ecx
  406d0c:	in     al,dx
  406d0d:	sbb    eax,DWORD PTR [eax+0x3d]
  406d10:	daa    
  406d11:	dec    esp
  406d12:	jne    0x406d91
  406d14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d15:	jnp    0x406cd9
  406d17:	jp     0x406d14
  406d19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d1a:	jge    0x406d41
  406d1c:	loope  0x406cdf
  406d1e:	xor    BYTE PTR [edi],0x7f
  406d21:	push   0x91444e1a
  406d26:	or     BYTE PTR [ecx-0x38],dh
  406d29:	jb     0x406d88
  406d2b:	or     DWORD PTR gs:[ecx],0x84d6eb3b
  406d32:	ror    BYTE PTR [edx-0x2f],0xb
  406d36:	cs (bad) 
  406d38:	xlat   BYTE PTR ds:[ebx]
  406d39:	pop    ebx
  406d3a:	xor    BYTE PTR ds:0x4bc5146f,0xcc
  406d41:	call   0xa9f53fc0
  406d46:	or     BYTE PTR [edx+0x54],0x74
  406d4a:	in     al,dx
  406d4b:	(bad)  
  406d4c:	mov    ebp,0x9ed3cd29
  406d51:	jmp    FWORD PTR [ebx-0x39]
  406d54:	ss std 
  406d56:	test   BYTE PTR [edx-0x4a1b5e9f],ah
  406d5c:	mov    ?,WORD PTR [edi-0x8]
  406d5f:	mov    al,ds:0x2f83a393
  406d64:	jbe    0x406d13
  406d66:	dec    ebp
  406d67:	stos   DWORD PTR es:[edi],eax
  406d68:	mov    eax,0x50f4fffd
  406d6d:	les    ebx,FWORD PTR [ecx+0x34bf5dc]
  406d73:	inc    edi
  406d74:	jmp    0x406d76
  406d76:	or     ch,BYTE PTR [ebp+0x16987471]
  406d7c:	cld    
  406d7d:	dec    esp
  406d7e:	test   al,0x46
  406d80:	mov    bl,0xad
  406d82:	jmp    0x1d71:0xa2cde422
  406d89:	ret    0xaa17
  406d8c:	push   ecx
  406d8e:	xchg   edi,eax
  406d8f:	push   ss
  406d90:	(bad)  
  406d91:	pop    ss
  406d92:	mov    ah,0x1c
  406d94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d95:	sub    bh,BYTE PTR ds:0x26854339
  406d9b:	shl    bl,1
  406d9d:	mov    al,ds:0xfab43daf
  406da2:	xchg   DWORD PTR [ecx+0xf],ecx
  406da5:	lea    ecx,[ecx]
  406da7:	je     0x406d50
  406da9:	sahf   
  406daa:	icebp  
  406dab:	outs   dx,BYTE PTR ds:[esi]
  406dac:	mov    gs,WORD PTR [esi]
  406dae:	fmul   QWORD PTR [ecx+0xec86d08]
  406db4:	dec    ebx
  406db5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406db6:	jecxz  0x406d5e
  406db8:	mov    al,ds:0x2375a17d
  406dbd:	es or  dh,dl
  406dc0:	cmp    ebp,DWORD PTR [edi+0x265bed2f]
  406dc6:	dec    edi
  406dc7:	and    al,0xf6
  406dc9:	mov    eax,ds:0x5a3c7a48
  406dce:	shl    WORD PTR [esi-0x36],1
  406dd2:	dec    esp
  406dd3:	xor    al,0x8d
  406dd5:	into   
  406dd6:	jge    0x406dfc
  406dd8:	adc    eax,0x66a730c7
  406ddd:	cli    
  406dde:	and    edi,esp
  406de0:	mov    gs,WORD PTR [ebx+eiz*8-0x60]
  406de4:	in     al,dx
  406de5:	pushf  
  406de6:	pop    edx
  406de7:	mov    edi,0xb0aaf04a
  406dec:	or     DWORD PTR [esi],edi
  406dee:	mov    al,0xff
  406df0:	in     eax,dx
  406df1:	fwait
  406df2:	xor    eax,0x3fc142ac
  406df7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406df8:	xchg   edi,eax
  406df9:	pop    ebx
  406dfa:	repz jns 0x406df9
  406dfd:	enter  0x7678,0x58
  406e01:	mov    ebx,0xc842406
  406e06:	mov    al,ds:0xd1aa55b5
  406e0b:	mov    ecx,0xf70ee59
  406e10:	xor    eax,0x9e63b647
  406e15:	mul    esi
  406e17:	je     0x406e27
  406e19:	inc    ecx
  406e1a:	in     eax,dx
  406e1b:	lods   eax,DWORD PTR ds:[esi]
  406e1c:	mov    dl,0xc9
  406e1e:	sar    DWORD PTR [edx+0x38],0x38
  406e22:	mov    ds,WORD PTR [ebp+0x192daa77]
  406e28:	js     0x406e09
  406e2a:	jbe    0x406dec
  406e2c:	and    DWORD PTR [edx-0x6d],0x289bd4f6
  406e33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e34:	dec    esp
  406e35:	retf   
  406e36:	gs and eax,0x395e11ee
  406e3c:	test   al,0x25
  406e3e:	pop    ds
  406e3f:	ss ins DWORD PTR es:[edi],dx
  406e41:	ficom  WORD PTR ds:0xe3b90f5f
  406e47:	jecxz  0x406e98
  406e49:	cwde   
  406e4a:	jg     0x406e34
  406e4c:	fisttp QWORD PTR [edi+ebp*1+0x19c78e61]
  406e53:	fnsave [edi]
  406e55:	dec    ebp
  406e56:	test   eax,0x8b2bfcb3
  406e5b:	cmp    ch,BYTE PTR [edx+0x1b]
  406e5e:	cmc    
  406e5f:	retf   
  406e60:	les    edx,FWORD PTR [ebp-0x6bf25c10]
  406e66:	mov    dl,0xbd
  406e68:	lods   al,BYTE PTR ds:[esi]
  406e69:	jnp    0x406e22
  406e6b:	xor    al,0x1
  406e6d:	test   esp,esi
  406e6f:	pop    edx
  406e70:	data16 shr bh,cl
  406e73:	and    eax,0xc7e8b048
  406e78:	jne    0x406e09
  406e7a:	adc    al,0xe3
  406e7c:	add    BYTE PTR [edi],cl
  406e7e:	sbb    esi,esp
  406e80:	(bad)
  406e83:	sbb    al,0xd0
  406e85:	push   ds
  406e86:	mov    esp,DWORD PTR [eax-0x68]
  406e89:	imul   edi,DWORD PTR [ebx+0x174a0124],0x2e
  406e90:	sahf   
  406e91:	lods   eax,DWORD PTR ds:[esi]
  406e92:	out    dx,eax
  406e93:	xchg   esp,eax
  406e94:	or     edx,DWORD PTR [ebp+0x572709c4]
  406e9a:	dec    edx
  406e9b:	mov    dh,0x86
  406e9d:	loop   0x406e5d
  406e9f:	dec    ecx
  406ea0:	pusha  
  406ea1:	pextrw edx,(bad),0xc5
  406ea4:	nop
  406ea5:	out    dx,eax
  406ea6:	xor    BYTE PTR [edi],cl
  406ea8:	and    al,0x28
  406eaa:	push   esp
  406eab:	pop    esp
  406eac:	sub    BYTE PTR [ecx],dh
  406eae:	pusha  
  406eaf:	rcl    BYTE PTR [eax+0x5e],1
  406eb2:	arpl   dx,cx
  406eb4:	fistp  DWORD PTR [ecx+edx*1-0x10ebcfc0]
  406ebb:	cmc    
  406ebc:	repnz adc bl,BYTE PTR [ecx-0x54938237]
  406ec3:	fs xchg edx,eax
  406ec5:	sbb    bl,BYTE PTR [ebp+esi*1-0x5bf85eb3]
  406ecc:	dec    edx
  406ecd:	fnstsw WORD PTR [esi]
  406ecf:	shl    esi,0x7
  406ed2:	mov    esi,0xf5083697
  406ed7:	cmp    edx,DWORD PTR [edx]
  406ed9:	jle    0x406eb2
  406edb:	mov    edi,0x2311a7ed
  406ee0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ee1:	jbe    0x406eb0
  406ee3:	adc    DWORD PTR [ecx+0x42b51cbf],eax
  406ee9:	clc    
  406eea:	and    BYTE PTR [ebx],dh
  406eec:	shl    BYTE PTR [eax-0x7e],1
  406eef:	push   eax
  406ef0:	add    eax,0x88818779
  406ef5:	xchg   esp,eax
  406ef6:	dec    edx
  406ef7:	lea    edx,[esi-0x5ed1f932]
  406efd:	(bad)
  406f01:	pop    esi
  406f02:	icebp  
  406f03:	sub    ecx,ebx
  406f05:	add    eax,0x7efd27d0
  406f0a:	push   ecx
  406f0b:	int    0x1a
  406f0d:	or     eax,0xa9f13612
  406f12:	mov    esi,0x3deb9b30
  406f18:	lahf   
  406f19:	mov    al,BYTE PTR [esi-0x2d]
  406f1c:	push   eax
  406f1d:	iret   
  406f1e:	mov    ebx,0xbf0ec232
  406f23:	lods   al,BYTE PTR ds:[esi]
  406f24:	out    0x3a,eax
  406f26:	push   0x19799072
  406f2b:	mov    esp,esp
  406f2d:	cld    
  406f2e:	cmp    eax,0xe28a254
  406f33:	retf   
  406f34:	(bad)
  406f39:	push   0x6
  406f3b:	jb     0x406ecd
  406f3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f3e:	add    ch,ch
  406f40:	(bad)  
  406f41:	and    eax,0xa46935d3
  406f46:	outs   dx,BYTE PTR ds:[esi]
  406f47:	xchg   edi,eax
  406f48:	dec    ebp
  406f49:	dec    ebp
  406f4a:	(bad)  
  406f4b:	jnp    0x406eed
  406f4d:	out    0x64,al
  406f4f:	and    al,0xa8
  406f51:	das    
  406f52:	int3   
  406f53:	jmp    0x53d38bb0
  406f58:	test   eax,0xde10f0c9
  406f5d:	xchg   esi,eax
  406f5e:	add    DWORD PTR [ebx],edx
  406f60:	push   ebx
  406f61:	fisubr WORD PTR [ebx-0x463569d3]
  406f67:	std    
  406f68:	std    
  406f69:	call   0x8456:0x4f24ecbb
  406f70:	hlt    
  406f71:	mov    ah,0xeb
  406f73:	push   edx
  406f74:	xchg   edx,eax
  406f75:	cmp    al,0x8a
  406f77:	lahf   
  406f78:	shl    BYTE PTR [ebx-0x3fa71469],0x4b
  406f7f:	jb     0x406ffe
  406f81:	mov    cl,0x9
  406f83:	shl    DWORD PTR [esi-0x5f],1
  406f86:	sbb    ecx,ebp
  406f88:	rcr    BYTE PTR [ebx-0x69],cl
  406f8b:	hlt    
  406f8c:	ja     0x406f17
  406f8e:	loop   0x406f79
  406f90:	or     DWORD PTR [ebx],ebp
  406f92:	test   eax,0xea4d77c3
  406f97:	and    BYTE PTR [edi-0x57],ah
  406f9a:	and    ecx,esi
  406f9c:	sbb    esp,DWORD PTR [ebp+0xe]
  406f9f:	inc    eax
  406fa0:	cs dec edi
  406fa2:	sbb    al,0xb7
  406fa4:	mov    cl,0xe2
  406fa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fa7:	mov    ecx,DWORD PTR [edx+0x40]
  406faa:	scas   eax,DWORD PTR es:[edi]
  406fab:	inc    edx
  406fac:	cmp    eax,0xa46ae166
  406fb1:	retf   
  406fb2:	mov    edx,0x2e7a66bb
  406fb7:	std    
  406fb8:	jle    0x406f8e
  406fba:	push   eax
  406fbb:	popf   
  406fbc:	mov    edi,0x9c4ce0cb
  406fc1:	jno    0x40702f
  406fc3:	push   es
  406fc4:	sti    
  406fc5:	jae    0x406f67
  406fc7:	mov    dh,0x36
  406fc9:	scas   al,BYTE PTR es:[edi]
  406fca:	adc    al,0xed
  406fcc:	jo     0x406fe6
  406fce:	cmp    eax,0x4c3f3411
  406fd3:	stos   DWORD PTR es:[edi],eax
  406fd4:	xchg   DWORD PTR [edx+0x5a470b13],edi
  406fda:	xor    BYTE PTR [ebp-0x36],dh
  406fdd:	iret   
  406fde:	int3   
  406fdf:	mov    al,0xef
  406fe1:	loopne 0x40701c
  406fe3:	fucom  st(4)
  406fe5:	push   ds
  406fe6:	push   ds
  406fe7:	jo     0x406f99
  406fe9:	faddp  st(6),st
  406feb:	or     edi,DWORD PTR [ebx+0x6a87fa34]
  406ff1:	cwde   
  406ff2:	test   DWORD PTR [eax],0x699ca3be
  406ff8:	scas   eax,DWORD PTR es:[edi]
  406ff9:	cld    
  406ffa:	shr    al,1
  406ffc:	std    
  406ffd:	pop    edi
  406ffe:	sbb    ah,BYTE PTR [esi+eax*8-0x2afc804c]
  407005:	lds    ecx,FWORD PTR [esi]
  407007:	cld    
  407008:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407009:	dec    edx
  40700a:	dec    ecx
  40700b:	pop    ds
  40700c:	mov    bl,0x92
  40700e:	test   al,0x69
  407010:	mov    al,0xb
  407012:	xor    esp,ebp
  407014:	inc    edx
  407015:	mov    eax,ds:0xb22a7742
  40701a:	jg     0x40701a
  40701c:	jns    0x40704e
  40701e:	ret    
  40701f:	data16 into 
  407021:	add    al,0x51
  407023:	pop    ss
  407024:	ficomp DWORD PTR [ebp-0x46]
  407027:	dec    ecx
  407028:	pop    edi
  407029:	fsub   DWORD PTR [esi-0x41af6e7]
  40702f:	xchg   ebx,eax
  407030:	sar    BYTE PTR [esp+esi*1-0x45],0x77
  407035:	mov    WORD PTR [edi+0x12],fs
  407038:	xor    DWORD PTR [edi+0x7513f85d],ecx
  40703e:	aad    0x61
  407040:	jne    0x406fef
  407042:	ja     0x407074
  407044:	rcr    DWORD PTR [ebx],cl
  407046:	popa   
  407047:	outs   dx,DWORD PTR ds:[esi]
  407048:	sti    
  407049:	arpl   WORD PTR [ebx],bp
  40704b:	dec    ebp
  40704c:	push   0x5c
  40704e:	xlat   BYTE PTR ds:[ebx]
  40704f:	mov    ch,0xa4
  407051:	and    al,0xe
  407053:	pushf  
  407054:	sar    ch,1
  407056:	out    0x18,eax
  407058:	ins    BYTE PTR es:[edi],dx
  407059:	xlat   BYTE PTR ds:[ebx]
  40705a:	pop    ebx
  40705b:	dec    esp
  40705c:	pop    ds
  40705d:	sbb    al,0x6e
  40705f:	retf   
  407060:	sbb    dh,BYTE PTR [esi-0x580a4588]
  407066:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407067:	das    
  407068:	sub    BYTE PTR [edi+eiz*8],dl
  40706b:	bound  edi,QWORD PTR [ebx-0x1b]
  40706e:	mov    dh,0x9d
  407070:	cmp    dh,al
  407072:	cmp    al,ch
  407074:	cmp    al,BYTE PTR [edx]
  407076:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407077:	stc    
  407078:	inc    eax
  407079:	out    0x3f,eax
  40707b:	jge    0x407007
  40707d:	mov    BYTE PTR [edx],ch
  40707f:	punpckhwd mm6,mm5
  407082:	push   ebx
  407083:	aad    0x3f
  407085:	lods   al,BYTE PTR ds:[esi]
  407086:	sbb    eax,DWORD PTR [ebp+0x20]
  407089:	xchg   ebp,eax
  40708a:	adc    edx,DWORD PTR [esi+0x29]
  40708d:	in     eax,dx
  40708e:	jne    0x4070cd
  407090:	jo     0x407104
  407092:	test   eax,0xb4a8f09d
  407097:	test   eax,0xe3a9622b
  40709c:	add    ebx,DWORD PTR [edi]
  40709e:	lods   eax,DWORD PTR ss:[esi]
  4070a0:	jo     0x407049
  4070a2:	lahf   
  4070a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070a4:	mov    al,ds:0x65764409
  4070a9:	cwde   
  4070aa:	jmp    0x4070a2
  4070ac:	stos   BYTE PTR es:[edi],al
  4070ad:	mov    al,0xe4
  4070af:	popf   
  4070b0:	inc    esi
  4070b1:	mov    ebx,0xae01d883
  4070b6:	nop
  4070b7:	cmp    ebp,esp
  4070b9:	inc    eax
  4070ba:	xor    BYTE PTR [ebx+0x1a],bl
  4070bd:	repnz xchg ebx,eax
  4070bf:	xchg   edx,eax
  4070c0:	shl    BYTE PTR [edi-0x72],0x87
  4070c4:	jo     0x407135
  4070c6:	jle    0x4070c1
  4070c8:	icebp  
  4070c9:	pop    ecx
  4070ca:	mov    al,ds:0x95f5869b
  4070cf:	xor    BYTE PTR [ecx+0x35],ah
  4070d2:	pop    ss
  4070d3:	fbld   TBYTE PTR [ecx-0x1c]
  4070d6:	jno    0x4070af
  4070d8:	(bad)  
  4070da:	fcom   DWORD PTR [esi]
  4070dc:	pusha  
  4070dd:	call   0x62c6:0x4e4ebca9
  4070e4:	inc    esp
  4070e5:	retf   0xbec1
  4070e8:	mov    esp,0xc4f5d33c
  4070ed:	sub    DWORD PTR [esi-0x5d43c0d4],ebp
  4070f3:	retf   
  4070f4:	or     eax,0x8ea484e7
  4070f9:	add    DWORD PTR [ebp+0x19],eax
  4070fc:	xor    al,0x16
  4070fe:	jecxz  0x407161
  407100:	sbb    bl,bl
  407102:	popf   
  407103:	xor    BYTE PTR [edx],dl
  407105:	test   eax,0x8150b99b
  40710a:	mov    al,ds:0x9ff65852
  40710f:	mov    al,ds:0x35de4188
  407114:	fld    DWORD PTR [edx]
  407116:	fidiv  DWORD PTR ds:0x6d671bd7
  40711c:	div    DWORD PTR [eax]
  40711e:	fistp  QWORD PTR ds:0x39740b1b
  407124:	sar    DWORD PTR [eax-0x26],1
  407127:	retf   0xe77e
  40712a:	cdq    
  40712b:	jge    0x4070dc
  40712d:	push   0x58
  40712f:	hlt    
  407130:	xchg   esi,eax
  407131:	jle    0x407171
  407133:	es loop 0x407126
  407136:	jo     0x4070bf
  407138:	mov    eax,ds:0xbf4e8e30
  40713d:	fild   DWORD PTR [ebx+0xfee539a]
  407143:	into   
  407144:	aam    0xd6
  407146:	sub    al,0xc2
  407148:	push   esi
  407149:	shl    DWORD PTR [ecx-0x22492038],1
  40714f:	dec    eax
  407150:	ja     0x4071ce
  407152:	add    al,0xf0
  407154:	adc    bh,bl
  407156:	sbb    DWORD PTR [ecx-0x4d],esi
  407159:	(bad)  
  40715a:	int    0xf1
  40715c:	cs hlt 
  40715e:	xor    BYTE PTR [ecx-0x2e3b3f9f],0x4a
  407165:	gs add eax,0xb2d9420e
  40716b:	and    al,0xa1
  40716d:	jl     0x4071c8
  40716f:	sub    ah,BYTE PTR [ecx-0x72]
  407172:	and    ah,dh
  407174:	outs   dx,DWORD PTR ds:[esi]
  407175:	and    bl,BYTE PTR [eax+0x52]
  407178:	mov    ebx,DWORD PTR [ecx]
  40717a:	pop    esp
  40717b:	leave  
  40717c:	or     al,0xaf
  40717e:	xor    eax,0x96bde136
  407183:	mov    ecx,0x30621581
  407188:	ss sti 
  40718a:	xchg   edx,eax
  40718b:	or     eax,0xb944c060
  407190:	loopne 0x407189
  407192:	xchg   edi,eax
  407193:	int3   
  407194:	xchg   esi,eax
  407195:	xchg   esi,eax
  407196:	mov    ebx,0xb9257d77
  40719b:	jmp    0x4071c7
  40719d:	push   edi
  40719e:	dec    edi
  40719f:	push   edx
  4071a0:	arpl   WORD PTR [esi-0x3fe485c2],dx
  4071a6:	test   BYTE PTR [esi+0x2b],0x3c
  4071aa:	xor    eax,0xfd122faa
  4071af:	pop    ebp
  4071b0:	ror    DWORD PTR [edx+ebp*1-0x22],1
  4071b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071b5:	adc    eax,0xe3a2146b
  4071ba:	and    ebx,DWORD PTR [ecx+edx*4+0x789a1447]
  4071c1:	(bad)  
  4071c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071c3:	arpl   sp,si
  4071c5:	sub    edx,DWORD PTR [edx+0x1]
  4071c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071c9:	into   
  4071ca:	repnz mov cl,0x40
  4071cd:	cmc    
  4071ce:	add    bl,BYTE PTR [ebx+0x7f339c5c]
  4071d4:	fstp   st(5)
  4071d6:	mov    edx,0x29518a17
  4071db:	pusha  
  4071dc:	fdecstp 
  4071de:	mov    edx,0x655c15ae
  4071e3:	xor    esi,edi
  4071e5:	mov    dh,0x8
  4071e7:	out    dx,al
  4071e8:	inc    esp
  4071e9:	std    
  4071ea:	or     al,dl
  4071ec:	push   esi
  4071ed:	cmp    eax,0xf5fb7525
  4071f2:	jle    0x4071fc
  4071f4:	and    cl,BYTE PTR es:[ebp+eax*2+0x41]
  4071f9:	test   eax,0xe763b9a1
  4071fe:	sub    DWORD PTR [edx+0x78],ecx
  407201:	mov    ebp,0x3f45407
  407206:	imul   eax,DWORD PTR [esi+0x57],0x56
  40720a:	leave  
  40720b:	mov    bl,0x63
  40720d:	je     0x4071ee
  40720f:	pop    ds
  407210:	loope  0x407219
  407212:	inc    DWORD PTR [edx+0x67]
  407215:	adc    eax,0x68268883
  40721a:	push   edi
  40721b:	inc    ebp
  40721c:	arpl   WORD PTR ds:0x5805fa56,bp
  407222:	mov    ds:0xcebb72f2,al
  407227:	out    0x61,al
  407229:	mov    edx,ss
  40722b:	lods   eax,DWORD PTR ds:[esi]
  40722c:	mov    ch,al
  40722e:	sti    
  40722f:	sbb    bl,BYTE PTR [eax+0x71]
  407232:	aam    0xde
  407234:	jle    0x40721f
  407236:	fstp   st(6)
  407238:	loop   0x4071fe
  40723a:	in     eax,dx
  40723b:	std    
  40723c:	les    ecx,FWORD PTR [ecx]
  40723e:	imul   esi
  407240:	push   0xffffffe5
  407242:	stos   BYTE PTR es:[edi],al
  407243:	pop    edx
  407244:	cmp    bl,BYTE PTR [edx-0x199f4e06]
  40724a:	mov    edi,0x2a0f1c9d
  40724f:	jecxz  0x40723f
  407251:	pop    ds
  407252:	jns    0x407239
  407254:	sub    eax,0x80c87b52
  407259:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40725a:	adc    ebx,DWORD PTR [esi-0x7745034]
  407260:	imul   eax,DWORD PTR [ebx+ecx*1+0x34],0xffffffaf
  407265:	sbb    al,0x22
  407267:	sub    al,0x87
  407269:	addr16 ret 
  40726b:	aad    0xf8
  40726d:	mov    edi,0x4b181806
  407272:	adc    eax,0xe538365b
  407277:	dec    esp
  407278:	aas    
  407279:	mul    BYTE PTR [ecx]
  40727b:	or     edi,ebp
  40727d:	xlat   BYTE PTR ds:[ebx]
  40727e:	jmp    0x79d8:0x5eff08e5
  407285:	jo     0x407263
  407287:	fmul   DWORD PTR [eax]
  407289:	xlat   BYTE PTR ds:[ebx]
  40728a:	bound  esp,QWORD PTR [edx-0x3b3c69d]
  407290:	dec    ecx
  407291:	xlat   BYTE PTR ds:[ebx]
  407292:	frstor [esi-0x1d27ea21]
  407298:	test   al,0xd
  40729a:	mov    es,WORD PTR [eax-0x5e1c3114]
  4072a0:	cmp    eax,0xcb78c143
  4072a5:	sub    al,0xd6
  4072a7:	pop    eax
  4072a8:	(bad)  
  4072a9:	stc    
  4072aa:	push   ebp
  4072ab:	push   edx
  4072ac:	cld    
  4072ad:	pop    edx
  4072ae:	lahf   
  4072af:	leave  
  4072b0:	mov    WORD PTR [edi+0x28ded14f],?
  4072b6:	test   al,0x6f
  4072b8:	push   0xffffffcb
  4072ba:	fstp   DWORD PTR [esi]
  4072bc:	arpl   WORD PTR [esi],dx
  4072be:	retf   
  4072bf:	sub    DWORD PTR [ecx-0xd],edi
  4072c2:	mov    al,bh
  4072c4:	add    al,0x20
  4072c6:	jmp    0x44c:0x3f9b939c
  4072cd:	sti    
  4072ce:	jno    0x40731e
  4072d0:	push   0xffffffb5
  4072d2:	sub    BYTE PTR [eax],0xce
  4072d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072d6:	pop    eax
  4072d7:	dec    eax
  4072d8:	out    dx,eax
  4072d9:	sub    BYTE PTR [ebp-0x17],dh
  4072dc:	js     0x407298
  4072de:	jne    0x4072ac
  4072e0:	mov    al,0xe0
  4072e2:	ds fisub WORD PTR ss:[esi]
  4072e6:	xchg   edi,eax
  4072e7:	and    al,0xaf
  4072e9:	xchg   edi,eax
  4072ea:	fwait
  4072eb:	mov    ds,WORD PTR [ecx-0x3ca43a13]
  4072f1:	jp     0x407277
  4072f3:	mov    WORD PTR [ecx-0x7c34aa5a],fs
  4072f9:	sar    edx,cl
  4072fb:	pop    ebx
  4072fc:	je     0x407370
  4072fe:	in     al,dx
  4072ff:	(bad)  
  407300:	fdiv   st(4),st
  407302:	sub    esp,esi
  407304:	jnp    0x40735c
  407306:	sub    eax,0x95805803
  40730b:	push   ebx
  40730c:	xor    eax,DWORD PTR [esi]
  40730e:	sar    BYTE PTR [edi+ebp*2],1
  407311:	sub    al,dh
  407313:	jl     0x407299
  407315:	ret    
  407316:	fistp  WORD PTR [ebx+0x30ca426a]
  40731c:	out    dx,eax
  40731d:	fmul   DWORD PTR [esi+0x29]
  407320:	retf   
  407321:	adc    al,0x7
  407323:	and    DWORD PTR [ebp-0x62],esi
  407326:	ret    
  407327:	mov    cl,0xb4
  407329:	jge    0x407306
  40732b:	test   al,0x67
  40732d:	inc    ecx
  40732e:	dec    ebx
  40732f:	cld    
  407330:	add    BYTE PTR [eax],0x90
  407333:	mov    esi,0x29cd9a93
  407338:	dec    esp
  407339:	or     al,BYTE PTR ss:[ebp+0x74d51dcc]
  407340:	cmp    eax,0xd001f76b
  407345:	pop    ebp
  407346:	jge    0x407360
  407348:	sub    edi,DWORD PTR [edi-0x68]
  40734b:	xchg   edx,eax
  40734c:	mov    bh,0x79
  40734e:	int    0x3c
  407350:	pop    edi
  407351:	cwde   
  407352:	pop    ss
  407353:	pop    esp
  407354:	ds push cs
  407356:	inc    edx
  407357:	aas    
  407358:	xchg   ebp,eax
  407359:	std    
  40735a:	mov    esp,0x2c95b03
  40735f:	push   cs
  407360:	js     0x4073e0
  407362:	cmp    al,0x55
  407364:	push   0x75ea0838
  407369:	int    0xee
  40736b:	stos   DWORD PTR es:[edi],eax
  40736c:	jge    0x40730f
  40736e:	aaa    
  40736f:	mov    bh,0x3c
  407371:	inc    esi
  407372:	rcr    DWORD PTR [edi],cl
  407374:	test   al,0xdf
  407376:	stos   BYTE PTR es:[edi],al
  407377:	jle    0x4073b8
  407379:	xor    DWORD PTR es:[ebp+0x40095abe],esi
  407380:	jns    0x407311
  407382:	test   ebx,0xb772adc7
  407388:	adc    eax,0xae323393
  40738d:	out    0x9d,eax
  40738f:	in     eax,dx
  407390:	adc    eax,0xbad48dbc
  407395:	repnz gs inc ecx
  407398:	repnz adc ebx,DWORD PTR [ecx]
  40739b:	in     eax,dx
  40739c:	and    BYTE PTR [esi-0x34de10cf],0x35
  4073a3:	pop    ebp
  4073a4:	ds mov ebp,0xee05a9a1
  4073aa:	pop    edi
  4073ab:	xchg   DWORD PTR [ecx],edx
  4073ad:	sbb    cl,BYTE PTR [edx]
  4073af:	ret    0x6e74
  4073b2:	iret   
  4073b3:	dec    eax
  4073b4:	adc    BYTE PTR [eax],ah
  4073b6:	je     0x407341
  4073b8:	fwait
  4073b9:	out    0x50,eax
  4073bb:	shl    al,cl
  4073bd:	mov    ch,0x7
  4073bf:	jns    0x407388
  4073c1:	sbb    BYTE PTR [esi-0x51],dh
  4073c4:	jmp    0x407425
  4073c6:	push   edi
  4073c7:	icebp  
  4073c8:	test   DWORD PTR [ecx-0x8fdf709],0xb7716a11
  4073d2:	pop    ebp
  4073d3:	pop    edi
  4073d4:	xor    ebp,DWORD PTR [ebx+0x31]
  4073d7:	call   0x5d4b500f
  4073dc:	sub    DWORD PTR [eax-0x2a],edx
  4073df:	sbb    eax,DWORD PTR [edi-0x50b33747]
  4073e5:	test   eax,0xa78bba8b
  4073ea:	add    BYTE PTR [eax],0x6f
  4073ed:	jae    0x407404
  4073ef:	in     eax,dx
  4073f0:	add    ebp,DWORD PTR [esi+eax*8-0x52]
  4073f4:	js     0x407456
  4073f6:	mov    ds:0x140e8373,al
  4073fb:	mov    ebp,0x5138b830
  407400:	fild   QWORD PTR ds:0x980e158c
  407406:	mov    eax,ds:0xdeb92998
  40740b:	xor    eax,0x89a3f374
  407410:	push   0xb58af440
  407415:	mov    edx,0x9604e228
  40741a:	mov    bh,BYTE PTR [eax+ebp*2+0x12]
  40741e:	pop    edx
  40741f:	pop    es
  407420:	ret    0x62f0
  407423:	ret    
  407424:	clc    
  407425:	stos   BYTE PTR es:[edi],al
  407426:	lods   al,BYTE PTR ds:[esi]
  407427:	sub    bl,BYTE PTR [ecx-0x28]
  40742a:	adc    al,0x61
  40742c:	mov    eax,0x5d08f2df
  407431:	add    bl,bl
  407433:	cmp    BYTE PTR [ebx+0x9],bh
  407436:	jbe    0x407404
  407438:	leave  
  407439:	pop    ss
  40743a:	addr16 iret 
  40743c:	mov    gs,WORD PTR [esi-0x6d36d4a6]
  407442:	add    eax,0xa80933e2
  407447:	jmp    0x1ea77c9a
  40744c:	mov    ebp,0xf0624512
  407451:	ja     0x40744b
  407453:	adc    ebx,DWORD PTR ds:0xf3bfd9e3
  407459:	push   eax
  40745a:	idiv   DWORD PTR [esi]
  40745c:	div    BYTE PTR [edi]
  40745e:	mov    eax,ds:0x8119543d
  407463:	inc    edi
  407464:	(bad)  
  407465:	xor    BYTE PTR [esi],al
  407467:	test   BYTE PTR [eax-0x7a],dh
  40746a:	sub    al,0x7c
  40746c:	jo     0x40747b
  40746e:	mov    esp,DWORD PTR [edx+0x21a83a2c]
  407474:	ret    
  407475:	cli    
  407476:	jg     0x40746c
  407478:	aaa    
  407479:	retf   
  40747a:	call   0xf7a4:0x44d6dc2b
  407481:	shl    dh,0x7a
  407484:	sub    eax,0x4e3d725
  407489:	(bad)  
  40748a:	sbb    DWORD PTR [esi-0x6a15a770],ecx
  407490:	mov    bl,0xe4
  407492:	out    0xa8,al
  407494:	cmp    BYTE PTR [ebp+0x45],ah
  407497:	bound  esp,QWORD PTR [edx+eiz*2+0x7e]
  40749b:	pop    esi
  40749c:	ins    BYTE PTR es:[edi],dx
  40749d:	rcr    al,1
  40749f:	inc    edi
  4074a0:	push   edx
  4074a1:	xchg   ebp,eax
  4074a2:	repnz bnd jns 0x407499
  4074a6:	or     ecx,0xfffffffc
  4074a9:	cwde   
  4074aa:	pushf  
  4074ab:	jmp    0x43358f1a
  4074b0:	rol    dh,0x97
  4074b3:	fisubr WORD PTR cs:[eax+0xe]
  4074b7:	ins    DWORD PTR es:[edi],dx
  4074b8:	(bad)  
  4074ba:	jmp    0x40752c
  4074bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074bd:	scas   al,BYTE PTR es:[edi]
  4074be:	cld    
  4074bf:	or     DWORD PTR [ecx-0x16d74a5d],edx
  4074c5:	push   ebp
  4074c6:	lock lahf 
  4074c8:	sbb    DWORD PTR [eax+ebx*8],0xc1846eb1
  4074cf:	push   esi
  4074d0:	lds    edi,FWORD PTR [eax]
  4074d2:	jbe    0x4074cb
  4074d4:	(bad)
  4074d7:	inc    eax
  4074d8:	int3   
  4074d9:	mov    eax,ds:0xc2b76117
  4074de:	pop    esp
  4074df:	sub    DWORD PTR [edx],edx
  4074e1:	test   eax,0x48365e33
  4074e6:	fdivr  QWORD PTR [ebp-0x788a3fce]
  4074ec:	stos   DWORD PTR es:[edi],eax
  4074ed:	mov    cs:0x8d2cae5c,al
  4074f3:	pop    eax
  4074f4:	rcr    BYTE PTR [eax],0xc7
  4074f7:	or     dh,BYTE PTR [eax]
  4074f9:	push   0x4331a124
  4074fe:	adc    DWORD PTR [ecx],edx
  407500:	inc    ecx
  407501:	ror    cl,1
  407503:	imul   esi,DWORD PTR [eax],0x60
  407506:	nop
  407507:	jg     0x4074f1
  407509:	mov    esp,0xd0fba96f
  40750e:	cdq    
  40750f:	mov    eax,ds:0x428de5c7
  407514:	int    0x84
  407516:	popf   
  407517:	cmp    cl,BYTE PTR [ecx-0x58db8a37]
  40751d:	outs   dx,DWORD PTR ds:[esi]
  40751e:	fild   WORD PTR [eax]
  407520:	or     al,al
  407522:	test   DWORD PTR [esp+eax*8-0x7cda8e14],esi
  407529:	(bad)  
  40752a:	cmp    ah,ch
  40752c:	dec    edx
  40752d:	xchg   esp,eax
  40752e:	jmp    0xbda7526c
  407533:	test   ch,0xe7
  407536:	loopne 0x4074f9
  407538:	ds xchg ecx,eax
  40753a:	xchg   esi,eax
  40753b:	xchg   edx,eax
  40753c:	adc    DWORD PTR [edi],edi
  40753e:	aad    0x61
  407540:	xchg   ebp,eax
  407541:	nop
  407542:	rep lods eax,DWORD PTR ds:[esi]
  407544:	aaa    
  407545:	dec    ebx
  407546:	lds    ebx,FWORD PTR [eax]
  407548:	or     edx,DWORD PTR [esi]
  40754a:	leave  
  40754b:	cld    
  40754c:	ds stos BYTE PTR es:[edi],al
  40754e:	mov    bh,0x65
  407550:	mov    ss,WORD PTR [edi+0x4]
  407553:	cmp    cl,BYTE PTR [ecx+0x26461211]
  407559:	and    al,0xaf
  40755b:	jns    0x4075c9
  40755d:	jmp    0x407589
  40755f:	imul   eax,DWORD PTR [eax-0x64],0xffffffee
  407563:	jg     0x407523
  407565:	aas    
  407566:	(bad)  
  407567:	rol    BYTE PTR [esi+0x2b],cl
  40756a:	xor    al,0x6c
  40756c:	loope  0x40754c
  40756e:	leave  
  40756f:	ret    
  407570:	push   edi
  407571:	sahf   
  407572:	sub    al,BYTE PTR [eax-0x11]
  407575:	mov    ebp,0x48e15806
  40757a:	adc    ebx,DWORD PTR [esi-0x7b6f7646]
  407580:	mov    bl,BYTE PTR [edi-0x2a]
  407583:	push   ss
  407584:	push   ecx
  407585:	jge    0x407514
  407587:	sub    al,0x5d
  407589:	ret    
  40758a:	dec    ebx
  40758b:	mov    ebx,DWORD PTR [edx+0x3b]
  40758e:	aam    0x2
  407590:	pop    ecx
  407591:	adc    DWORD PTR ss:[edx+0x30f247b7],esp
  407598:	and    DWORD PTR [edx],ecx
  40759a:	mov    ebx,esp
  40759c:	xchg   esp,eax
  40759d:	jne    0x4075ba
  40759f:	mov    esp,0xbad1f260
  4075a4:	into   
  4075a5:	daa    
  4075a6:	inc    ebx
  4075a7:	sub    al,0xf0
  4075a9:	lods   eax,DWORD PTR ds:[esi]
  4075aa:	xchg   ecx,eax
  4075ab:	popa   
  4075ac:	imul   edi,DWORD PTR [esi-0xcc7014b],0xfffffffa
  4075b3:	lds    ebx,FWORD PTR [edi]
  4075b5:	cdq    
  4075b6:	lods   eax,DWORD PTR ds:[esi]
  4075b7:	loop   0x4075b8
  4075b9:	push   esi
  4075ba:	jmp    0x40760e
  4075bc:	loopne 0x4075c7
  4075be:	mov    cl,0x49
  4075c0:	cs mov edx,0xb289a68d
  4075c6:	iret   
  4075c7:	(bad)
  4075cc:	mov    al,0x83
  4075ce:	jecxz  0x40758a
  4075d0:	adc    al,BYTE PTR [esp+ecx*2+0x4d9e6db8]
  4075d7:	and    BYTE PTR [edi-0x69],ah
  4075da:	jl     0x40756f
  4075dc:	int3   
  4075dd:	pop    ebp
  4075de:	pop    ecx
  4075df:	retf   0x2cae
  4075e2:	adc    al,0xf6
  4075e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075e5:	idiv   BYTE PTR [eax-0x1]
  4075e8:	stc    
  4075e9:	mov    esp,0x2c2a02da
  4075ee:	and    cl,bl
  4075f0:	mov    al,ds:0x2b15cc7b
  4075f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075f6:	xor    esi,esp
  4075f8:	push   0xffffffa5
  4075fa:	mov    ds:0xce089b75,eax
  4075ff:	xchg   esi,eax
  407600:	and    al,0x60
  407602:	sti    
  407603:	das    
  407604:	inc    edx
  407605:	sbb    dl,BYTE PTR [ebx+0x1d]
  407608:	pop    edi
  407609:	pop    esi
  40760a:	(bad)  
  40760b:	ficomp WORD PTR [edi]
  40760d:	jae    0x40767c
  40760f:	(bad)  
  407611:	adc    bh,BYTE PTR [ebx-0x6ef43a41]
  407617:	push   0x76
  407619:	mov    ?,WORD PTR [ebx+0x509cab15]
  40761f:	sar    DWORD PTR [esi+0x2],1
  407622:	jl     0x4075a7
  407624:	mov    WORD PTR [ebp-0x78],ds
  407627:	fsub   DWORD PTR [ecx]
  407629:	push   esp
  40762a:	(bad)  
  40762b:	arpl   WORD PTR [eax],dx
  40762d:	add    eax,0xeb562b43
  407632:	(bad)  
  407634:	inc    edi
  407635:	pop    ss
  407636:	push   edx
  407637:	sbb    eax,0x503b72d5
  40763c:	xor    al,0x45
  40763e:	sub    al,0xe5
  407640:	fnstenv [ebx]
  407642:	mov    ebx,0x441464a2
  407647:	popf   
  407648:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407649:	adc    eax,DWORD PTR [esi+0x61]
  40764c:	out    dx,al
  40764d:	fmul   st(2),st
  40764f:	or     bh,BYTE PTR [eax-0x4e285ce3]
  407655:	mov    dl,0xfe
  407657:	xchg   dh,cl
  407659:	je     0x40761c
  40765b:	stc    
  40765c:	call   0xc4c9:0x7e2acf8a
  407663:	leave  
  407664:	arpl   WORD PTR [edx-0x2f],di
  407667:	mov    dl,0x3a
  407669:	or     bl,bl
  40766b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40766c:	xlat   BYTE PTR ds:[ebx]
  40766d:	dec    edx
  40766e:	xchg   edi,eax
  40766f:	lea    esp,[edi]
  407671:	inc    ebx
  407672:	xlat   BYTE PTR ds:[ebx]
  407673:	int3   
  407674:	sub    DWORD PTR [edi],esp
  407676:	stc    
  407677:	push   ds
  407678:	(bad)  
  407679:	loope  0x4076ba
  40767b:	jmp    0xb911:0xc2d5d2f1
  407682:	lock mov al,ss:0xfb923cc2
  407689:	fnsave [ecx+ebp*8+0x102cdf6a]
  407690:	hlt    
  407691:	ret    
  407692:	or     esp,DWORD PTR [ebx]
  407694:	sahf   
  407695:	(bad)  
  407696:	je     0x4076e9
  407698:	mov    bh,BYTE PTR [esi-0x49d140be]
  40769e:	cs jnp 0x407671
  4076a1:	and    eax,0xde94d780
  4076a6:	push   ebp
  4076a7:	inc    ecx
  4076a8:	call   DWORD PTR [ebp+0xfb22106]
  4076ae:	out    0x62,eax
  4076b0:	sbb    BYTE PTR es:[ebp+0x2c070e41],ch
  4076b7:	arpl   WORD PTR [esi-0x57],dx
  4076ba:	xchg   ebp,eax
  4076bb:	jmp    0x40773c
  4076bd:	mov    ds:0x5c789914,eax
  4076c2:	sahf   
  4076c3:	aam    0x58
  4076c5:	out    dx,al
  4076c6:	stos   BYTE PTR es:[edi],al
  4076c7:	cli    
  4076c8:	mov    ah,BYTE PTR [ecx-0x77afcaf8]
  4076ce:	inc    esp
  4076cf:	hlt    
  4076d0:	mov    ebp,0xddd738f0
  4076d5:	dec    edi
  4076d6:	rcr    BYTE PTR [esi],cl
  4076d8:	cs cmp eax,0x53ac85ad
  4076de:	mov    bl,0xf1
  4076e0:	jbe    0x4076f2
  4076e2:	xlat   BYTE PTR ds:[ebx]
  4076e3:	sub    si,WORD PTR [eax+0x2a]
  4076e7:	or     eax,0xaab5fb45
  4076ec:	lods   eax,DWORD PTR ss:[esi]
  4076ee:	xchg   DWORD PTR [ebx-0x51],ebx
  4076f1:	or     eax,ebp
  4076f3:	movq   mm7,QWORD PTR [ebp+0x6a25dc6a]
  4076fa:	stos   DWORD PTR es:[edi],eax
  4076fb:	shl    DWORD PTR [ebx+0x411caceb],1
  407701:	jg     0x4076cd
  407703:	xor    ecx,DWORD PTR [ecx-0x48f9472b]
  407709:	xchg   esi,eax
  40770a:	std    
  40770b:	inc    esi
  40770c:	jbe    0x40775c
  40770e:	adc    ah,BYTE PTR [edx+0x264d9a88]
  407714:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407715:	cdq    
  407716:	test   ebx,esi
  407718:	mov    DWORD PTR [ebx*1+0x72e52c1d],ebp
  40771f:	add    al,0xbc
  407721:	pop    ds
  407722:	mov    esi,0x99ac4860
  407727:	dec    esp
  407728:	ds es jecxz 0x407797
  40772c:	and    al,0x7e
  40772e:	ins    DWORD PTR es:[edi],dx
  40772f:	ret    0x349e
  407732:	xor    DWORD PTR [ecx+0x15],0x7cbce48c
  407739:	pop    edi
  40773a:	add    ecx,DWORD PTR [ecx]
  40773c:	gs dec esp
  40773e:	int3   
  40773f:	repnz pop esp
  407741:	xchg   ecx,eax
  407742:	repnz fdiv st(0),st
  407745:	or     DWORD PTR [ebx+0x231e3c0f],0x38
  40774c:	div    BYTE PTR [esp+edx*2-0x76c786d9]
  407753:	dec    ebx
  407754:	add    eax,0x1afc0dc4
  407759:	xor    al,0xa5
  40775b:	jl     0x407729
  40775d:	and    DWORD PTR ds:0x4363dae9,eax
  407763:	fst    QWORD PTR ds:0xcab2f1a8
  407769:	inc    ebx
  40776a:	jae    0x40773b
  40776c:	mov    esp,0x24d6c1a6
  407771:	scas   al,BYTE PTR es:[edi]
  407772:	cwde   
  407773:	cmp    bh,BYTE PTR [edi+0x3e]
  407776:	fisub  DWORD PTR [esp+ebp*1]
  407779:	outs   dx,BYTE PTR ds:[esi]
  40777a:	mov    ch,0xbf
  40777c:	ins    DWORD PTR es:[edi],dx
  40777d:	mov    WORD PTR [esi+eax*1+0x6ee31406],ds
  407784:	not    ebp
  407786:	mov    ah,0x4e
  407788:	adc    dl,BYTE PTR [eax+ebx*2]
  40778b:	xchg   esi,eax
  40778c:	outs   dx,BYTE PTR ds:[esi]
  40778d:	das    
  40778e:	sub    al,BYTE PTR [ebp+0x23afe246]
  407794:	mov    al,ds:0x74832bdd
  407799:	fstp   TBYTE PTR [esi]
  40779b:	add    al,0xfa
  40779d:	repz cmp eax,0x5e5f7ba8
  4077a3:	je     0x40779d
  4077a5:	enter  0x8cd,0xe1
  4077a9:	dec    ebp
  4077aa:	jle    0x40774c
  4077ac:	push   0xa61a02fa
  4077b1:	cmp    DWORD PTR [edx+0x4d4e8f33],0xfece8603
  4077bb:	mov    eax,ds:0x2fd9b60a
  4077c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077c1:	js     0x407776
  4077c3:	fwait
  4077c4:	mov    ds:0x3ccc35f6,al
  4077c9:	rol    DWORD PTR [ebp+eiz*4+0xfd0d5a0],1
  4077d0:	or     al,0xaf
  4077d2:	adc    BYTE PTR [ecx-0x2ac022ff],dh
  4077d8:	mov    cl,0x3f
  4077da:	loopne 0x4077c8
  4077dc:	jnp    0x407767
  4077de:	and    bh,BYTE PTR [ebx-0x6b]
  4077e1:	test   BYTE PTR [ebp+0x7655a818],bh
  4077e7:	pop    ebp
  4077e8:	mov    cl,BYTE PTR [eax+0x48e6eda7]
  4077ee:	fidiv  WORD PTR [edi+0x40d6efe9]
  4077f4:	sti    
  4077f5:	into   
  4077f6:	retf   
  4077f7:	inc    esi
  4077f8:	(bad)  
  4077f9:	(bad)  
  4077fa:	cmp    eax,DWORD PTR [ecx+0x4a6cbbf7]
  407800:	dec    ebx
  407801:	jmp    0xd0f8fae5
  407806:	push   es
  407807:	fcmovnu st,st(4)
  407809:	leave  
  40780a:	inc    esp
  40780b:	test   BYTE PTR [ebx],ah
  40780d:	adc    eax,0xecf4064a
  407812:	lods   al,BYTE PTR ds:[esi]
  407813:	cmp    al,0x5f
  407815:	add    eax,0x7558190a
  40781a:	aas    
  40781b:	icebp  
  40781c:	mov    dh,0xd4
  40781e:	and    BYTE PTR [ebx+0x39945d23],dl
  407824:	adc    cl,BYTE PTR [ecx]
  407826:	jne    0x4078a6
  407828:	test   al,0x37
  40782a:	retf   0x5f32
  40782d:	aaa    
  40782e:	hlt    
  40782f:	xchg   esp,eax
  407830:	push   es
  407831:	push   ebp
  407832:	and    dh,BYTE PTR [edx-0x66b7e09e]
  407838:	jmp    0x4077ba
  40783a:	pop    edi
  40783b:	in     al,0x21
  40783d:	fs sub al,0x13
  407840:	mov    edx,0xb7ed7038
  407845:	add    ecx,DWORD PTR [ecx+0x8504556]
  40784b:	jae    0x4078c2
  40784d:	mov    ecx,0x826712c8
  407852:	push   ss
  407853:	jp     0x40783c
  407855:	enter  0xc28b,0x54
  407859:	ficom  DWORD PTR [edx]
  40785b:	mov    ah,0x5
  40785d:	dec    ecx
  40785e:	mov    ecx,0x8ab26e9a
  407863:	outs   dx,BYTE PTR ds:[esi]
  407864:	retf   
  407865:	mov    ch,0xe2
  407867:	pop    es
  407868:	repz imul esi,DWORD PTR [ecx],0x7cb5e4a7
  40786f:	adc    DWORD PTR [esi-0x2a],esp
  407872:	and    dh,BYTE PTR [ebx+0x45]
  407875:	sbb    al,0x95
  407877:	mov    dl,0x54
  407879:	icebp  
  40787a:	sti    
  40787b:	mov    ebx,0x59a693c3
  407880:	outs   dx,BYTE PTR ds:[esi]
  407881:	xchg   ebp,eax
  407882:	fstp   DWORD PTR [edx-0x32]
  407885:	fucomi st,st(5)
  407887:	inc    ebx
  407888:	pop    edi
  407889:	dec    eax
  40788a:	xor    al,BYTE PTR [ebx-0x49]
  40788d:	xlat   BYTE PTR ds:[ebx]
  40788e:	push   esi
  40788f:	jl     0x40781d
  407891:	sbb    BYTE PTR [ecx-0x8],0x80
  407895:	test   al,0x3b
  407897:	imul   eax,DWORD PTR [edx],0x8b375e0e
  40789d:	inc    ebx
  40789e:	cld    
  40789f:	jae    0x40788e
  4078a1:	adc    al,0x51
  4078a3:	clc    
  4078a4:	scas   eax,DWORD PTR es:[edi]
  4078a5:	out    dx,al
  4078a6:	leave  
  4078a7:	mov    eax,0xa7a4e18b
  4078ac:	cmp    DWORD PTR [esp+ebp*1+0x1d],edi
  4078b0:	pop    ebp
  4078b1:	(bad)  
  4078b2:	int    0xe8
  4078b4:	mov    edi,0x330a85f
  4078b9:	jae    0x4078e3
  4078bb:	and    al,0x9d
  4078bd:	clc    
  4078be:	mov    ?,WORD PTR [ebp+0x3c]
  4078c1:	in     al,0x4
  4078c3:	out    dx,eax
  4078c4:	pop    esp
  4078c5:	test   ecx,esp
  4078c7:	stos   DWORD PTR es:[edi],eax
  4078c8:	imul   ecx,DWORD PTR [ebx],0xa9cd6a0e
  4078ce:	sbb    al,ch
  4078d0:	dec    esp
  4078d1:	daa    
  4078d2:	scas   al,BYTE PTR es:[edi]
  4078d3:	and    cl,BYTE PTR [esi-0x5b]
  4078d6:	mov    gs,ebp
  4078d8:	imul   edx,DWORD PTR [eax],0xffffffba
  4078db:	(bad)  
  4078dc:	jmp    0xcfdd:0xe5e63485
  4078e3:	call   0xa5a69df9
  4078e8:	inc    ebx
  4078e9:	fadd   QWORD PTR [esi-0x2f33edf4]
  4078ef:	inc    ebx
  4078f0:	aam    0xf2
  4078f2:	int3   
  4078f3:	sbb    esp,DWORD PTR [edi+0x27]
  4078f6:	push   esp
  4078f7:	scas   al,BYTE PTR es:[edi]
  4078f8:	aas    
  4078f9:	outs   dx,DWORD PTR ds:[esi]
  4078fa:	sub    al,0xd3
  4078fc:	(bad)  
  4078fd:	out    0xf1,al
  4078ff:	loop   0x407882
  407901:	sub    dl,BYTE PTR [edx-0x65]
  407904:	fstp   TBYTE PTR [edi-0xd78874c]
  40790a:	xchg   BYTE PTR [edi+0x1f],bl
  40790d:	ficom  DWORD PTR [ebx-0x4f]
  407910:	mov    al,BYTE PTR [ecx]
  407912:	sbb    BYTE PTR [esi],bh
  407914:	mov    gs,WORD PTR [eax+0x6ea1ddc3]
  40791a:	adc    ch,BYTE PTR ds:0xf72f1b72
  407920:	loop   0x4078cd
  407922:	lea    ebp,[edi+ebx*8+0x50]
  407926:	dec    edi
  407927:	and    ch,BYTE PTR [esi-0x6756c1ab]
  40792d:	jbe    0x407921
  40792f:	mov    eax,0xe52b05f7
  407934:	sbb    BYTE PTR [si-0x35c7],dl
  407939:	iret   
  40793a:	xchg   esi,eax
  40793c:	mov    dh,bl
  40793e:	add    BYTE PTR [ebx-0x16],dl
  407941:	inc    edx
  407942:	xor    al,0x93
  407944:	data16 add al,0x12
  407947:	test   BYTE PTR [eax],dh
  407949:	outs   dx,DWORD PTR ds:[esi]
  40794a:	arpl   di,si
  40794c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40794d:	cli    
  40794e:	adc    eax,DWORD PTR [edx-0x31]
  407951:	sub    ecx,DWORD PTR [edi+0x73]
  407954:	or     eax,0xe5350729
  407959:	fs dec esp
  40795b:	adc    BYTE PTR [ebp-0x7c],0xf2
  40795f:	mov    ebp,0x7a294511
  407964:	in     al,dx
  407965:	sar    DWORD PTR [ebx],1
  407967:	xor    BYTE PTR [ecx+0x74],bh
  40796a:	shl    BYTE PTR [ecx],1
  40796c:	jmp    0x8ae4:0x5385374c
  407973:	mov    ah,0xf
  407975:	add    al,0x39
  407977:	mov    al,ds:0x98793bb9
  40797c:	mov    dl,0xde
  40797e:	pop    ebx
  40797f:	fst    QWORD PTR [edx+ebx*2+0x4c]
  407983:	scas   al,BYTE PTR es:[edi]
  407984:	icebp  
  407985:	sti    
  407986:	jecxz  0x407989
  407988:	sub    DWORD PTR [ecx],edx
  40798a:	ds sub al,0xe6
  40798d:	push   esp
  40798e:	and    edx,DWORD PTR [edi-0x3bf0ade7]
  407994:	lea    esp,[ecx]
  407996:	ins    DWORD PTR es:[edi],dx
  407997:	test   al,0x7e
  407999:	mov    ds:0xa220a310,al
  40799e:	loopne 0x4079de
  4079a0:	nop
  4079a1:	jb     0x407947
  4079a3:	sahf   
  4079a4:	call   0x5b1b:0x28437014
  4079ab:	lahf   
  4079ac:	mov    dh,0x83
  4079ae:	and    esi,esp
  4079b0:	cmp    edi,DWORD PTR [ebp+0x7f]
  4079b3:	push   eax
  4079b4:	and    cl,al
  4079b6:	je     0x40799f
  4079b8:	sbb    DWORD PTR [ecx+0x17095737],ebx
  4079be:	adc    DWORD PTR [eax+eax*1],ecx
  4079c1:	scas   eax,DWORD PTR es:[edi]
  4079c2:	jg     0x40795a
  4079c4:	adc    eax,0xc39c3777
  4079c9:	sti    
  4079ca:	addr16 xchg ebp,eax
  4079cc:	pop    esp
  4079cd:	lods   eax,DWORD PTR ds:[esi]
  4079ce:	push   es
  4079cf:	lahf   
  4079d0:	leave  
  4079d1:	xchg   cl,dl
  4079d3:	xor    eax,0x5e2d59a9
  4079d8:	adc    edi,DWORD PTR [eax]
  4079da:	push   ebp
  4079db:	inc    si
  4079dd:	popf   
  4079de:	mov    ds:0x95ae39de,al
  4079e3:	(bad)  
  4079e4:	and    eax,0x12f1e81e
  4079e9:	icebp  
  4079ea:	cmp    ecx,ebx
  4079ec:	mov    edx,0x592ebda0
  4079f1:	(bad)  
  4079f2:	ds sti 
  4079f4:	fwait
  4079f5:	add    ah,bh
  4079f7:	sbb    ebx,edx
  4079f9:	retf   0xed08
  4079fc:	lds    ecx,FWORD PTR [ecx-0x1a753017]
  407a02:	ret    0xb92b
  407a05:	xchg   DWORD PTR [esi-0x1d794e4e],ebp
  407a0b:	sbb    dl,bh
  407a0d:	outs   dx,BYTE PTR ds:[esi]
  407a0e:	sbb    edx,DWORD PTR [esp+edx*4]
  407a11:	inc    ebx
  407a12:	jbe    0x4079e7
  407a14:	cli    
  407a15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a16:	retf   0xaf50
  407a19:	div    DWORD PTR ds:0xdd302632
  407a1f:	adc    BYTE PTR [edx],dh
  407a21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a22:	cmp    DWORD PTR [esi],0x3d
  407a25:	into   
  407a26:	mov    ah,BYTE PTR [edi-0x80]
  407a29:	inc    edx
  407a2a:	shr    DWORD PTR [eax],1
  407a2c:	arpl   WORD PTR [edx+0x4],ax
  407a2f:	cmp    ah,BYTE PTR [ebx+0x12]
  407a32:	jns    0x407a82
  407a34:	mov    esp,0xcc6ee17a
  407a39:	pop    ss
  407a3a:	push   0xf80f2ae
  407a3f:	mov    bl,0xf7
  407a41:	dec    DWORD PTR [eax-0x2a]
  407a44:	add    cl,BYTE PTR [edx-0x5f]
  407a47:	lock icebp 
  407a49:	cdq    
  407a4a:	outs   dx,DWORD PTR ds:[esi]
  407a4b:	xchg   ebp,edx
  407a4d:	adc    eax,DWORD PTR [ebp-0x3c]
  407a50:	fbstp  TBYTE PTR [ebx+0x16]
  407a53:	dec    esp
  407a54:	adc    BYTE PTR [esi-0x4d],ah
  407a57:	ficomp DWORD PTR [esi]
  407a59:	rol    BYTE PTR [edi+0x45],1
  407a5c:	fwait
  407a5d:	mov    cl,BYTE PTR [edx]
  407a5f:	cwde   
  407a60:	stos   BYTE PTR es:[edi],al
  407a61:	pop    edi
  407a62:	xchg   ecx,eax
  407a63:	jg     0x407ad4
  407a65:	lods   eax,DWORD PTR ds:[esi]
  407a66:	dec    BYTE PTR [edi-0x62e80d28]
  407a6c:	xchg   ecx,eax
  407a6d:	outs   dx,BYTE PTR ds:[esi]
  407a6e:	mov    dh,0x84
  407a70:	push   esi
  407a71:	arpl   WORD PTR [ecx],bx
  407a73:	retf   0xc0f8
  407a76:	gs scas eax,DWORD PTR es:[edi]
  407a78:	clc    
  407a79:	mov    eax,0x5940460a
  407a7e:	fnsave [ecx+ebx*1-0x183c8956]
  407a85:	jae    0x407ab3
  407a87:	mov    BYTE PTR ds:0xe0a76c04,cl
  407a8d:	out    dx,al
  407a8e:	sbb    al,0x5d
  407a90:	cwde   
  407a91:	jg     0x407a3e
  407a93:	frstor ds:[edi]
  407a96:	fisubr DWORD PTR [ebp+eiz*2-0x74]
  407a9a:	enter  0xf8bd,0xad
  407a9e:	or     al,0xca
  407aa0:	mov    al,0x84
  407aa2:	mov    ebp,0x9d4e7cfe
  407aa7:	inc    edx
  407aa8:	shl    BYTE PTR [esi-0x44],1
  407aab:	(bad)  
  407aac:	nop
  407aad:	pop    esi
  407aae:	cld    
  407aaf:	jnp    0x407a92
  407ab1:	icebp  
  407ab2:	add    ebp,DWORD PTR [eax-0x4c]
  407ab5:	jno    0x407a78
  407ab7:	or     edi,ebp
  407ab9:	popa   
  407aba:	aas    
  407abb:	and    eax,0x4a8c3a4b
  407ac0:	and    al,0x18
  407ac2:	aaa    
  407ac3:	adc    BYTE PTR [eax+edi*2],ah
  407ac6:	xchg   esi,eax
  407ac7:	fsubr  st,st(7)
  407ac9:	fist   WORD PTR [eax-0x3b6a17f0]
  407acf:	dec    ebp
  407ad0:	rcl    edx,0xf3
  407ad3:	test   BYTE PTR [edx+0x6e],bh
  407ad6:	pop    ss
  407ad7:	neg    BYTE PTR [ecx]
  407ad9:	sub    eax,0xfab54fd9
  407ade:	xor    DWORD PTR [edi+0xa321ce6],ebp
  407ae4:	xlat   BYTE PTR ds:[ebx]
  407ae5:	lock adc BYTE PTR [esi],0xcd
  407ae9:	sbb    eax,0x99438f84
  407aee:	inc    esi
  407aef:	push   edi
  407af0:	test   eax,0xa27e8823
  407af5:	bound  esp,QWORD PTR gs:[ebp+0x1684de2e]
  407afc:	jge    0x407a8c
  407afe:	(bad)  
  407aff:	jae    0x407aa5
  407b01:	(bad)  
  407b03:	mov    al,0x4
  407b05:	mov    edi,0x32095a26
  407b0a:	in     eax,dx
  407b0b:	add    eax,0x8e0237b7
  407b10:	popa   
  407b11:	js     0x407ac1
  407b13:	jg     0x407b81
  407b15:	(bad)  
  407b16:	mov    eax,ds:0x8f076e08
  407b1b:	std    
  407b1c:	sar    edi,1
  407b1e:	jbe    0x407b4a
  407b20:	sub    al,0xe2
  407b22:	nop
  407b23:	lods   eax,DWORD PTR ds:[esi]
  407b24:	in     eax,0xe4
  407b26:	aaa    
  407b27:	mov    ds:0xfc4e3d10,al
  407b2c:	jbe    0x407b15
  407b2e:	xchg   ebx,eax
  407b2f:	add    DWORD PTR [edi],0x391fad6
  407b35:	cmc    
  407b36:	jl     0x407b28
  407b38:	mov    bh,0x29
  407b3a:	dec    edi
  407b3b:	sti    
  407b3c:	aam    0x3b
  407b3e:	push   ebp
  407b3f:	daa    
  407b40:	jmp    0x591d:0xffed1008
  407b47:	add    DWORD PTR ds:0xcc866f57,eax
  407b4d:	hlt    
  407b4e:	in     eax,dx
  407b4f:	mov    BYTE PTR [esi-0x77],ah
  407b52:	add    eax,0xb780276d
  407b57:	iret   
  407b58:	jae    0x407ba9
  407b5a:	dec    edx
  407b5b:	loopne 0x407bb8
  407b5d:	pop    ecx
  407b5e:	in     al,0x63
  407b60:	clc    
  407b61:	aad    0xa4
  407b63:	out    dx,al
  407b64:	xchg   ebp,eax
  407b65:	stc    
  407b66:	push   edi
  407b67:	and    al,0x97
  407b69:	sub    DWORD PTR [ecx+0x4d],eax
  407b6c:	in     eax,0x87
  407b6e:	js     0x407b41
  407b70:	pushf  
  407b71:	sbb    BYTE PTR [ebp-0x2ddd64ae],cl
  407b77:	fisttp DWORD PTR [ebx]
  407b79:	daa    
  407b7a:	arpl   cx,sp
  407b7c:	jne    0x407b8b
  407b7e:	push   eax
  407b7f:	stos   DWORD PTR es:[edi],eax
  407b80:	add    al,0xee
  407b82:	xor    BYTE PTR ds:[ecx-0x11],0x87
  407b87:	mov    ah,0x98
  407b89:	(bad)  
  407b8a:	pusha  
  407b8b:	call   0x5c6ade1b
  407b90:	out    0xe7,eax
  407b92:	inc    ecx
  407b93:	hlt    
  407b94:	cs add edi,eax
  407b97:	cwde   
  407b98:	or     edx,edx
  407b9a:	sbb    BYTE PTR [eax+0xf9d4a0b],al
  407ba0:	push   cs
  407ba1:	fwait
  407ba2:	jo     0x407c0a
  407ba4:	add    DWORD PTR [esi+eiz*1-0x1bbf58e8],esi
  407bab:	pop    eax
  407bac:	inc    edi
  407bad:	in     eax,0x7e
  407baf:	mov    al,0xd9
  407bb1:	adc    BYTE PTR [esp+ecx*1+0x4e52e318],bh
  407bb8:	fdiv   QWORD PTR [esi]
  407bba:	lock sub al,0x1
  407bbd:	inc    edi
  407bbe:	das    
  407bbf:	mov    ebx,DWORD PTR [ebx]
  407bc1:	repz inc esp
  407bc3:	inc    esi
  407bc4:	mov    eax,0x2afeaca7
  407bc9:	aas    
  407bca:	sti    
  407bcb:	loopne 0x407c05
  407bcd:	sub    BYTE PTR [edx],dl
  407bcf:	jle    0x407b71
  407bd1:	(bad)  
  407bd2:	in     eax,dx
  407bd3:	pop    ebx
  407bd4:	adc    dl,0x6b
  407bd7:	fstp   QWORD PTR [ebx+0x6e]
  407bda:	sub    ebx,DWORD PTR [eax-0x24]
  407bdd:	add    BYTE PTR [edx],dl
  407bdf:	add    DWORD PTR [edi],0xa2b0768d
  407be5:	mov    ecx,DWORD PTR [eax+ecx*4]
  407be8:	sahf   
  407be9:	and    DWORD PTR [ebx-0x2decffbf],edx
  407bef:	push   edi
  407bf0:	add    ch,BYTE PTR [eax-0x2ecde0df]
  407bf6:	or     BYTE PTR [edx],cl
  407bf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bf9:	dec    ebx
  407bfa:	loope  0x407c3d
  407bfc:	mov    ecx,0x41a54859
  407c01:	xor    ah,BYTE PTR [ebx+0x5a9e5c1e]
  407c07:	jne    0x407c0c
  407c09:	pushf  
  407c0a:	xor    al,0x26
  407c0c:	int    0xce
  407c0e:	adc    edx,DWORD PTR [ebx-0x14]
  407c11:	ret    0xe750
  407c14:	sbb    DWORD PTR [esi-0x61],ebx
  407c17:	ins    DWORD PTR es:[edi],dx
  407c18:	data16 jno 0x407b9e
  407c1b:	repnz pop ebp
  407c1d:	mov    ah,0x16
  407c1f:	adc    ecx,eax
  407c21:	pop    ebx
  407c22:	mov    esp,0xe0731081
  407c27:	outs   dx,BYTE PTR ds:[esi]
  407c28:	lds    ebx,FWORD PTR [edi]
  407c2a:	in     eax,dx
  407c2b:	into   
  407c2c:	dec    ebx
  407c2d:	popa   
  407c2e:	pop    eax
  407c2f:	js     0x407bc2
  407c31:	repnz cmc 
  407c33:	loop   0x407c9e
  407c35:	push   0x49
  407c37:	sub    al,0x58
  407c39:	leave  
  407c3a:	fld    TBYTE PTR [eax]
  407c3c:	neg    DWORD PTR [edi]
  407c3e:	cmp    al,0x83
  407c40:	jbe    0x407ca8
  407c42:	ins    DWORD PTR es:[edi],dx
  407c43:	cmp    al,0x8c
  407c45:	fidiv  DWORD PTR [esp+ebp*4+0x7b569ca4]
  407c4c:	push   es
  407c4d:	xchg   esp,eax
  407c4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c4f:	daa    
  407c50:	fisttp QWORD PTR [esi+0x3e]
  407c53:	sahf   
  407c54:	adc    eax,0x1d8a89eb
  407c59:	aas    
  407c5a:	test   DWORD PTR [eax+ebx*2-0x37],ebx
  407c5e:	das    
  407c5f:	sub    ecx,DWORD PTR [edi+0x194b7fe3]
  407c65:	jg     0x407ce0
  407c67:	lahf   
  407c68:	cmp    edi,ebp
  407c6a:	fcomp  st(2)
  407c6c:	das    
  407c6d:	dec    edi
  407c6e:	(bad)  
  407c70:	cmc    
  407c71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c72:	push   0xffffffa9
  407c74:	mov    esp,DWORD PTR [eax]
  407c76:	scas   eax,DWORD PTR es:[edi]
  407c77:	push   0x7d
  407c79:	cmp    al,al
  407c7b:	bound  ebx,QWORD PTR [esi+0x52]
  407c7e:	shr    BYTE PTR [esi+ecx*1],1
  407c81:	retf   0x705b
  407c84:	or     esi,ebx
  407c86:	jnp    0x407c7b
  407c88:	dec    ecx
  407c89:	(bad)  
  407c8a:	pop    esp
  407c8b:	mov    esp,0xc0b7446
  407c90:	xchg   edi,eax
  407c91:	push   DWORD PTR [edx]
  407c93:	cmc    
  407c94:	cmc    
  407c95:	sub    BYTE PTR [eax],bl
  407c97:	pop    ds
  407c98:	(bad)  
  407c99:	pop    eax
  407c9a:	call   0x56ad:0x7a5b9090
  407ca1:	jnp    0x407c88
  407ca3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ca4:	xchg   ebx,eax
  407ca5:	ds icebp 
  407ca7:	loope  0x407ce9
  407ca9:	sar    BYTE PTR [esi],cl
  407cab:	rcl    DWORD PTR [esi],cl
  407cad:	popf   
  407cae:	pushf  
  407caf:	sbb    DWORD PTR [ebx-0x1835236],0xffffffc7
  407cb6:	push   esp
  407cb7:	dec    eax
  407cb8:	int    0xfd
  407cba:	int    0x29
  407cbc:	add    eax,0x8e7d7eac
  407cc1:	adc    ch,BYTE PTR [edi-0x3e]
  407cc4:	sbb    esp,DWORD PTR [ecx-0x4b]
  407cc7:	cmp    al,0x51
  407cc9:	idiv   edx
  407ccb:	sti    
  407ccc:	retf   
  407ccd:	fsubr  st(5),st
  407ccf:	sub    BYTE PTR [ebx+0x47778dd6],ch
  407cd5:	in     al,0x6e
  407cd7:	push   0x8
  407cd9:	push   ecx
  407cda:	inc    esp
  407cdb:	and    al,0x56
  407cdd:	push   0x5cbe971a
  407ce2:	imul   edx,esi,0x12
  407ce5:	leave  
  407ce6:	ror    BYTE PTR [eax+eax*4-0x1f],1
  407cea:	cmp    DWORD PTR [edi],0xf4e035e6
  407cf0:	sbb    eax,DWORD PTR [eax]
  407cf2:	ss push 0xffffffe8
  407cf5:	xchg   edx,eax
  407cf6:	pop    esi
  407cf7:	sbb    ch,BYTE PTR [esi-0x10b5e364]
  407cfd:	enter  0x18f8,0x3d
  407d01:	adc    eax,DWORD PTR [eax+0x22]
  407d04:	push   edi
  407d05:	mul    eax
  407d07:	and    DWORD PTR [esi],edi
  407d09:	add    DWORD PTR [edi-0x59bb0663],ebx
  407d0f:	rol    dl,1
  407d11:	into   
  407d12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d13:	and    ch,BYTE PTR [ecx+eiz*2]
  407d16:	sbb    edx,esp
  407d18:	popa   
  407d19:	icebp  
  407d1a:	or     ah,BYTE PTR [ebx]
  407d1c:	push   0x70
  407d1e:	inc    ecx
  407d1f:	mov    al,ds:0xc4db2ecf
  407d24:	cmp    al,0x60
  407d26:	repnz lods al,BYTE PTR ds:[esi]
  407d28:	rcr    BYTE PTR [ecx+ecx*2-0x6c],0xb6
  407d2d:	mov    BYTE PTR [edi+0x72],bh
  407d30:	nop
  407d31:	push   ebp
  407d32:	inc    ebp
  407d33:	jb     0x407d9b
  407d35:	fcom   QWORD PTR [ecx-0x2a0a9d7f]
  407d3b:	pop    DWORD PTR [esi-0x684297e6]
  407d41:	(bad)  
  407d42:	xchg   DWORD PTR [edi+0x34],esp
  407d45:	ss in  eax,0x30
  407d48:	mov    es,edx
  407d4a:	sub    eax,0x85f8353c
  407d4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d50:	mov    DWORD PTR [esi-0x3ed775a9],edx
  407d56:	arpl   WORD PTR [esi],di
  407d58:	out    0xe7,al
  407d5a:	or     al,0xaf
  407d5c:	call   0x5896:0x5d1592a0
  407d63:	push   esi
  407d64:	sbb    ebp,DWORD PTR [edi-0x50]
  407d67:	hlt    
  407d68:	sbb    ebp,eax
  407d6a:	popf   
  407d6b:	out    dx,al
  407d6c:	push   ebp
  407d6d:	(bad)  
  407d6e:	rcl    DWORD PTR ds:0x451655f4,1
  407d74:	mov    eax,ds:0xc4a2becd
  407d79:	gs xchg edi,eax
  407d7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d7d:	shl    BYTE PTR [eax+0x559b92ca],0x2
  407d84:	outs   dx,DWORD PTR ds:[esi]
  407d85:	out    dx,al
  407d86:	rol    BYTE PTR ds:0xa7b0e7cd,cl
  407d8c:	mov    fs,WORD PTR [eax+0x79879471]
  407d92:	shl    DWORD PTR [ecx],1
  407d94:	gs neg bh
  407d97:	push   es
  407d98:	push   0xffffffe8
  407d9a:	mov    eax,0xc731ef42
  407d9f:	sub    esp,DWORD PTR [edx-0x64]
  407da2:	cmc    
  407da3:	add    eax,0xaa2aeb88
  407da8:	mov    edx,0x57be6caf
  407dad:	retf   0x72bb
  407db0:	sbb    edi,ebx
  407db2:	cmp    al,0x81
  407db4:	and    BYTE PTR [ebx+0x1],cl
  407db7:	inc    edx
  407db8:	inc    edx
  407db9:	mov    al,ds:0x599c5f06
  407dbe:	xor    cl,BYTE PTR [edi-0x6a10ab90]
  407dc4:	jmp    esp
  407dc6:	cld    
  407dc7:	inc    ax
  407dc9:	loop   0x407e46
  407dcb:	xchg   ebx,eax
  407dcc:	hlt    
  407dcd:	lock pop ds
  407dcf:	jmp    0xbb2868a5
  407dd4:	sar    al,cl
  407dd6:	push   ds
  407dd7:	inc    ebx
  407dd8:	scas   eax,DWORD PTR es:[edi]
  407dd9:	daa    
  407dda:	out    0x1b,eax
  407ddc:	pop    eax
  407ddd:	sbb    ecx,ebx
  407ddf:	lock js 0x407dc2
  407de2:	mov    eax,ds:0xa984b8dd
  407de7:	data16 je 0x407e3d
  407dea:	scas   al,BYTE PTR es:[edi]
  407deb:	daa    
  407dec:	push   edi
  407ded:	mov    ebx,0x8a76c29c
  407df2:	sub    BYTE PTR [ebx],bh
  407df4:	iret   
  407df5:	imul   ebx,DWORD PTR [edx-0x62],0x4d
  407df9:	cmp    BYTE PTR [edx+eax*8+0x20eff9c9],bl
  407e00:	mov    dh,0x95
  407e02:	or     al,0xa3
  407e04:	push   ecx
  407e05:	scas   al,BYTE PTR es:[edi]
  407e06:	mov    ecx,0xd721c485
  407e0b:	sbb    esp,DWORD PTR [esp+ecx*4]
  407e0e:	pop    ebx
  407e0f:	add    eax,0xcca7c30c
  407e14:	out    0xd4,al
  407e16:	jns    0x407e49
  407e18:	inc    ebp
  407e1a:	fsub   st(0),st
  407e1c:	outs   dx,DWORD PTR ds:[esi]
  407e1d:	in     al,dx
  407e1e:	mov    ecx,0x9479476d
  407e23:	pop    es
  407e24:	xor    ah,BYTE PTR [edi+0x6c]
  407e27:	jae    0x407db9
  407e29:	call   DWORD PTR [ebx-0x751caf57]
  407e2f:	and    eax,0x24e0a9a5
  407e34:	cli    
  407e35:	mov    ebx,0x27cbf8e
  407e3a:	mov    al,0xa2
  407e3c:	sub    BYTE PTR [ebx-0x32],0x9b
  407e40:	bound  ebp,QWORD PTR [eax-0x54]
  407e43:	push   ebx
  407e44:	in     al,0x44
  407e46:	popa   
  407e47:	daa    
  407e48:	std    
  407e49:	add    BYTE PTR [eax],ah
  407e4b:	fld    DWORD PTR [edx+ecx*1]
  407e4e:	idiv   BYTE PTR ds:[ecx]
  407e51:	jl     0x407e70
  407e53:	fbstp  TBYTE PTR es:[ebx+0x19]
  407e57:	jle    0x407e28
  407e59:	test   eax,0x59a3efc7
  407e5e:	mov    ebp,DWORD PTR [esi+0x4d]
  407e61:	push   esi
  407e62:	mov    ah,cl
  407e64:	inc    ebp
  407e65:	add    ebx,DWORD PTR [esi]
  407e67:	hlt    
  407e68:	jecxz  0x407ec0
  407e6a:	outs   dx,BYTE PTR ds:[esi]
  407e6b:	into   
  407e6c:	cdq    
  407e6d:	ins    DWORD PTR es:[edi],dx
  407e6e:	loopne 0x407e75
  407e70:	xor    eax,0x832269e2
  407e75:	shl    ch,1
  407e77:	sbb    BYTE PTR [edx*8-0x11a31663],ah
  407e7e:	shl    esp,cl
  407e80:	cmp    eax,0x3f6e9641
  407e85:	addr16 adc al,0xc9
  407e88:	repz call 0x375e:0x7fd4553a
  407e90:	out    0xd4,eax
  407e92:	call   0xbf8f:0xd8e02e7d
  407e99:	inc    esi
  407e9a:	mov    cl,0x7c
  407e9c:	in     al,0xcb
  407e9e:	jp     0x407eff
  407ea0:	cmc    
  407ea1:	cdq    
  407ea2:	mov    bl,0x4b
  407ea4:	adc    BYTE PTR [ecx-0x4bc10868],bh
  407eaa:	sbb    al,0x97
  407eac:	push   ss
  407ead:	fsub   st(1),st
  407eaf:	daa    
  407eb0:	pop    ecx
  407eb1:	jns    0x407eea
  407eb3:	pushf  
  407eb4:	mov    dh,0x86
  407eb6:	shl    DWORD PTR [edi+ebx*2+0x44074df5],1
  407ebd:	daa    
  407ebe:	jmp    0xf8e33a98
  407ec3:	(bad)  
  407ec4:	fsubr  st(4),st
  407ec6:	shl    BYTE PTR ds:0x290cafcd,0xd0
  407ecd:	jo     0x407f2e
  407ecf:	ficom  DWORD PTR [edx+ebp*4+0x1f]
  407ed3:	test   esi,ebx
  407ed5:	dec    ecx
  407ed6:	sub    edx,eax
  407ed8:	cmp    eax,0xefbf356d
  407edd:	popa   
  407ede:	jo     0x407f49
  407ee0:	jp     0x407eb0
  407ee2:	push   0xffffffe7
  407ee4:	add    ecx,DWORD PTR [eax+0x50]
  407ee7:	loopne 0x407f3c
  407ee9:	pop    edi
  407eea:	mov    esi,0xc9b0ecfb
  407eef:	add    BYTE PTR [eax-0x32],ah
  407ef2:	sub    al,0x7a
  407ef4:	arpl   WORD PTR [eax],si
  407ef6:	mov    ds:0xeb5cfc6d,eax
  407efb:	in     eax,0xd7
  407efd:	jle    0x407f06
  407eff:	mov    ah,0x8c
  407f01:	inc    ebp
  407f02:	packsswb mm7,QWORD PTR [ebx]
  407f05:	sti    
  407f06:	add    al,0xf0
  407f08:	and    BYTE PTR [ebx+0x50],bl
  407f0b:	xlat   BYTE PTR ds:[ebx]
  407f0c:	data16 and al,0x15
  407f0f:	outs   dx,DWORD PTR ds:[esi]
  407f10:	add    ah,BYTE PTR [ebx+0x7a]
  407f13:	cmp    DWORD PTR [esi+ebp*8],0x1c
  407f17:	repnz lahf 
  407f19:	fstp   DWORD PTR [esi+0x64]
  407f1c:	jno    0x407ee9
  407f1e:	add    bl,bl
  407f20:	sub    al,0x74
  407f22:	fs popa 
  407f24:	jne    0x407f40
  407f26:	sbb    DWORD PTR [ebx-0x4e],0xcdf7c090
  407f2d:	pusha  
  407f2e:	fild   WORD PTR [eax+0x32e0936c]
  407f34:	jle    0x407f4c
  407f36:	pop    edx
  407f37:	mov    edi,0x3c2c1732
  407f3c:	and    eax,0x10ca7599
  407f41:	out    0xec,al
  407f43:	mov    DWORD PTR [eax],edx
  407f45:	fs jo  0x407f3e
  407f48:	sbb    BYTE PTR ds:0x587de906,dl
  407f4e:	(bad)  
  407f4f:	sbb    esi,ebx
  407f51:	sbb    al,0x81
  407f53:	dec    ebx
  407f54:	jnp    0x407f54
  407f56:	add    eax,DWORD PTR [edx+0x12]
  407f59:	shl    BYTE PTR [eax+esi*4],cl
  407f5c:	loopne 0x407fbb
  407f5e:	adc    eax,0xc6cb0cb9
  407f63:	cwde   
  407f64:	adc    al,0x70
  407f66:	les    edi,FWORD PTR [ebp+0x42]
  407f69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f6a:	xor    eax,ecx
  407f6c:	lahf   
  407f6d:	(bad)  
  407f6e:	sub    eax,0x6e71a885
  407f73:	mov    cl,0xa6
  407f75:	call   0xacb37aa3
  407f7a:	xor    bl,BYTE PTR [ecx+0x30d17288]
  407f80:	lock pop ss
  407f82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f83:	mov    ebp,0x70805041
  407f88:	pop    esp
  407f89:	sar    DWORD PTR [ecx],0xa7
  407f8c:	fcom   QWORD PTR [edi-0x23]
  407f8f:	aas    
  407f90:	loop   0x407ff8
  407f92:	xor    eax,0x8f530b78
  407f97:	call   0x4a02:0x882a2311
  407f9e:	mov    edx,eax
  407fa0:	or     esi,eax
  407fa2:	aam    0xf4
  407fa4:	and    ch,BYTE PTR [ebp+0x3e5bfd21]
  407faa:	cs test eax,0x7e96baa
  407fb0:	icebp  
  407fb1:	xchg   ebp,eax
  407fb2:	dec    esi
  407fb3:	test   eax,0xb5cc2e4e
  407fb8:	cmp    BYTE PTR [edx],bh
  407fba:	jo     0x408039
  407fbc:	sbb    edi,edi
  407fbe:	inc    eax
  407fbf:	mov    al,ds:0xd8e769d0
  407fc4:	call   0xe8bd:0xa8319c34
  407fcb:	jns    0x407f76
  407fcd:	xchg   ebp,eax
  407fce:	rcr    al,1
  407fd0:	in     eax,0x97
  407fd2:	sbb    DWORD PTR [esi+0x4877d61b],0xffffffc8
  407fd9:	rcr    BYTE PTR [eax+eax*4+0xe],0xce
  407fde:	xchg   DWORD PTR [edi],esp
  407fe0:	pop    ds
  407fe1:	lods   al,BYTE PTR ds:[esi]
  407fe2:	lods   eax,DWORD PTR ds:[esi]
  407fe3:	jg     0x40801a
  407fe5:	add    eax,0x5d0f20dd
  407fea:	fisubr WORD PTR [ebx]
  407fec:	push   ebp
  407fed:	mov    cl,0x89
  407fef:	test   eax,0x1a789cf6
  407ff4:	cmc    
  407ff5:	dec    ebp
  407ff6:	call   0xea587a5a
  407ffb:	aaa    
  407ffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ffd:	fsubr  DWORD PTR [ecx+0x4eb87679]
  408003:	adc    al,BYTE PTR [edx+0x4a9de1b1]
  408009:	add    esp,DWORD PTR [ecx]
  40800b:	in     al,dx
  40800c:	cld    
  40800d:	xchg   ecx,eax
  40800e:	sub    DWORD PTR [ecx],esi
  408010:	and    eax,0x64d2d7ac
  408015:	fiadd  DWORD PTR [ebp+ecx*1-0x6542219d]
  40801c:	and    ebx,DWORD PTR [ebx-0x7]
  40801f:	lock mov dh,0x29
  408022:	dec    eax
  408023:	int3   
  408024:	dec    ecx
  408025:	in     al,0x98
  408027:	ror    DWORD PTR [esi+0x8],0xff
  40802b:	lahf   
  40802c:	mov    dh,0x65
  40802e:	cwde   
  40802f:	int3   
  408030:	(bad)  
  408031:	mov    bl,0x74
  408033:	xor    BYTE PTR [eax+0x4c],bh
  408036:	loope  0x407feb
  408038:	adc    DWORD PTR [ebx-0x32],eax
  40803b:	push   ecx
  40803c:	sbb    DWORD PTR [ebx-0x14],edi
  40803f:	push   ds
  408040:	shl    ch,cl
  408042:	sbb    edi,ebp
  408044:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408045:	pop    esi
  408046:	outs   dx,DWORD PTR ds:[esi]
  408047:	imul   eax,ebx,0xffffffc1
  40804a:	retf   0xfec8
  40804d:	or     esp,DWORD PTR [ebp-0x24]
  408050:	push   ds
  408051:	scas   eax,DWORD PTR es:[edi]
  408052:	cwde   
  408053:	cdq    
  408054:	sub    bh,0xa5
  408057:	vpor   xmm4,xmm6,XMMWORD PTR [edi-0x1]
  40805c:	jbe    0x4080ba
  40805e:	push   edi
  40805f:	mov    esp,0x3b5391b5
  408064:	mov    ebx,edi
  408066:	cs pop edx
  408068:	pushf  
  408069:	and    al,cl
  40806b:	jns    0x408032
  40806d:	iret   
  40806e:	in     eax,0x9c
  408070:	cs inc esp
  408072:	mov    ecx,0xb9840d84
  408077:	mov    edi,0x823e89a7
  40807c:	jbe    0x40801f
  40807e:	popf   
  40807f:	neg    BYTE PTR ss:[eax-0x31]
  408083:	cs inc eax
  408085:	push   edx
  408086:	xchg   edi,eax
  408087:	mov    ds:0xa140c1a9,al
  40808c:	dec    edx
  40808d:	ss sub eax,0x18c4cbaa
  408093:	xor    al,0xfd
  408095:	gs jns 0x4080ef
  408098:	sub    ebx,ebx
  40809a:	xchg   ebp,eax
  40809b:	and    eax,0xc7ef29c0
  4080a0:	adc    eax,0x4e5780
  4080a5:	xchg   esi,eax
  4080a6:	std    
  4080a7:	sbb    DWORD PTR [ebp-0x43],0xffffff8b
  4080ab:	xchg   edx,eax
  4080ac:	sbb    edx,DWORD PTR [edx]
  4080ae:	arpl   WORD PTR [ebx-0x3f97dcf9],di
  4080b4:	int3   
  4080b5:	mov    al,ds:0xe4cca7f2
  4080ba:	popf   
  4080bb:	mov    ebx,0xcfd220d4
  4080c0:	xchg   esi,eax
  4080c1:	jno    0x408079
  4080c3:	rol    BYTE PTR [edx+0x47f57fa4],0x92
  4080ca:	std    
  4080cb:	xchg   ebp,eax
  4080cc:	lahf   
  4080cd:	jle    0x4080df
  4080cf:	sbb    esi,ebp
  4080d1:	adc    DWORD PTR [esi+0x41ea82db],edx
  4080d7:	sbb    al,0x4d
  4080d9:	fs das 
  4080db:	scas   eax,DWORD PTR es:[edi]
  4080dc:	test   eax,0x42d3222e
  4080e1:	sbb    DWORD PTR [edx-0x35],0xe74bb137
  4080e8:	xor    eax,0xeb053476
  4080ed:	cmp    esp,edi
  4080ef:	dec    ebx
  4080f0:	pop    ecx
  4080f1:	test   al,0x97
  4080f3:	test   BYTE PTR [esp+eax*2],dh
  4080f6:	mov    bh,0x33
  4080f8:	mov    edx,0xddb4cbf9
  4080fd:	push   edx
  4080fe:	int    0xd4
  408100:	xor    eax,0x251dfdb6
  408105:	and    bl,ch
  408107:	out    dx,eax
  408108:	sbb    BYTE PTR [edi+eax*4],bh
  40810b:	sahf   
  40810c:	mov    ebx,0xd9aa333c
  408111:	cmp    esp,DWORD PTR [ebp-0x34]
  408114:	cmp    al,0xbc
  408116:	pusha  
  408117:	xor    al,al
  408119:	loopne 0x408140
  40811b:	loope  0x4080fa
  40811d:	sub    BYTE PTR [eax+0x7a],0x7f
  408121:	mov    esi,DWORD PTR [edx]
  408123:	xchg   edx,eax
  408124:	inc    edi
  408125:	adc    cl,BYTE PTR ds:0x52a7400f
  40812b:	sbb    ecx,ebx
  40812d:	sbb    BYTE PTR [edi],0x51
  408130:	ins    BYTE PTR es:[edi],dx
  408131:	cdq    
  408132:	(bad)  
  408134:	out    dx,al
  408135:	push   ebx
  408136:	add    eax,0x14edb97f
  40813b:	fiadd  WORD PTR [eax]
  40813d:	pusha  
  40813e:	fcmovu st,st(4)
  408140:	cmp    DWORD PTR [ebp+0x30641915],ebx
  408146:	and    bh,cl
  408148:	mov    al,ds:0x92e076bf
  40814d:	adc    BYTE PTR ds:0x92a525c9,0xa1
  408154:	dec    esi
  408155:	dec    ecx
  408156:	enter  0x7c76,0x87
  40815a:	std    
  40815b:	inc    ebx
  40815c:	push   es
  40815d:	xor    DWORD PTR [eax+0x915ac0d],esp
  408163:	xchg   esp,eax
  408164:	cs jmp 0x93e91976
  40816a:	push   es
  40816b:	xor    BYTE PTR [ecx+0x77],dh
  40816e:	rcr    DWORD PTR ds:0xf009a0b,0x42
  408175:	mov    ds:0xc79ff012,eax
  40817a:	test   al,0xc0
  40817c:	jge    0x408167
  40817e:	xchg   esp,eax
  40817f:	or     eax,0xe5fcf52b
  408184:	jne    0x408134
  408186:	xchg   ebx,eax
  408187:	sub    eax,DWORD PTR [ebx+0x3e5c8322]
  40818d:	nop
  40818e:	push   cs
  40818f:	mov    ah,0x8f
  408191:	out    0xbb,al
  408193:	mov    DWORD PTR [esi-0x4],ebp
  408196:	cwde   
  408197:	clc    
  408198:	mov    ebp,0x17b8882b
  40819d:	add    ebx,DWORD PTR [edi]
  40819f:	cmp    esp,DWORD PTR [ebp+0x66e9d609]
  4081a5:	add    edi,DWORD PTR [ebx-0x1dd61ce2]
  4081ab:	dec    ecx
  4081ac:	mov    ebp,0x8972c7e7
  4081b1:	lock pop ebp
  4081b3:	pop    ds
  4081b4:	xchg   ecx,eax
  4081b5:	loopne 0x40813f
  4081b7:	push   esp
  4081b8:	jb     0x40819b
  4081ba:	mov    ds:0xb549a5dd,al
  4081bf:	rcl    BYTE PTR [esi],1
  4081c1:	cmp    ecx,DWORD PTR [eax-0x22]
  4081c4:	jo     0x40819f
  4081c6:	call   0x5d00:0x438cfe32
  4081cd:	test   BYTE PTR [edi],cl
  4081cf:	aad    0x94
  4081d1:	dec    ebx
  4081d2:	mov    esi,0x9f816877
  4081d7:	xchg   esi,eax
  4081d8:	jge    0x40819b
  4081da:	cmp    ebx,DWORD PTR [eax+0x1b9522c4]
  4081e0:	inc    eax
  4081e1:	stos   BYTE PTR es:[edi],al
  4081e2:	icebp  
  4081e3:	dec    esi
  4081e4:	std    
  4081e5:	frstor [ecx+0x33610e28]
  4081eb:	out    0x9b,al
  4081ed:	push   eax
  4081ee:	pop    ds
  4081ef:	pop    esi
  4081f0:	into   
  4081f1:	xchg   BYTE PTR [esi+0x31],dl
  4081f4:	add    ecx,0x9c5c730b
  4081fa:	xor    BYTE PTR [ebp+0x7eee5c6b],0x45
  408201:	fcmovne st,st(1)
  408203:	mov    edi,0xbd8a49bb
  408208:	sub    BYTE PTR [eax+0x6ce979ab],al
  40820e:	xchg   edi,eax
  40820f:	lea    esp,[ebx+ecx*1]
  408212:	das    
  408213:	push   0x54e9b771
  408218:	cmc    
  408219:	aad    0xe6
  40821b:	push   cs
  40821c:	mov    DWORD PTR [eax-0x1384b2ca],ecx
  408222:	aaa    
  408223:	call   0x40046cdd
  408228:	jb     0x408223
  40822a:	push   ebp
  40822b:	xchg   ebp,eax
  40822c:	push   0x6e
  40822e:	xor    DWORD PTR [eax],ecx
  408230:	xor    al,0x12
  408232:	push   0xebfb5772
  408237:	or     bh,bh
  408239:	loope  0x40821d
  40823b:	je     0x40825f
  40823d:	es jecxz 0x4081e5
  408240:	jns    0x408262
  408242:	xor    al,0x79
  408244:	das    
  408245:	(bad)  
  408246:	jns    0x40822d
  408248:	mov    ds:0x87631c33,al
  40824d:	push   eax
  40824e:	pop    ecx
  40824f:	ins    BYTE PTR es:[edi],dx
  408250:	jmp    0xd86d:0x75b9396c
  408257:	mov    bh,0x1d
  408259:	lea    eax,[ecx+0x25]
  40825c:	sub    BYTE PTR [ecx],cl
  40825e:	outs   dx,DWORD PTR ds:[esi]
  40825f:	inc    esp
  408260:	mul    BYTE PTR [esp+esi*4-0x22]
  408264:	shr    DWORD PTR ds:0xc8f28585,1
  40826a:	je     0x40822b
  40826c:	icebp  
  40826d:	cld    
  40826e:	push   esi
  40826f:	js     0x4082b1
  408271:	pavgw  mm2,mm7
  408274:	add    BYTE PTR [eax+0x6d],al
  408277:	mov    ebx,0x93807cee
  40827c:	(bad)  
  40827d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40827e:	push   eax
  40827f:	pop    ecx
  408280:	jno    0x408216
  408282:	or     al,cl
  408284:	push   ds
  408285:	mov    WORD PTR [ecx-0x38bb3320],?
  40828b:	dec    esi
  40828c:	mov    BYTE PTR [ecx+eax*2+0x31],ah
  408290:	sti    
  408291:	mov    ebx,0xdc3743c3
  408296:	and    eax,0x3625b21b
  40829b:	(bad)  
  40829d:	imul   ebx,DWORD PTR ds:0x2ab5061c,0xa46663cb
  4082a7:	inc    edi
  4082a8:	popa   
  4082a9:	jb     0x408280
  4082ab:	adc    eax,0x3c89fd56
  4082b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082b1:	inc    edx
  4082b2:	out    0xfe,al
  4082b4:	pop    ecx
  4082b5:	jg     0x408242
  4082b7:	pusha  
  4082b8:	mov    ebp,0xa1f43f10
  4082bd:	jne    0x408284
  4082bf:	inc    esi
  4082c0:	enter  0xe9ea,0x25
  4082c4:	(bad)  
  4082c5:	loopne 0x408309
  4082c7:	add    BYTE PTR [edx+0x0],ch
  4082ca:	inc    ebp
  4082cb:	xchg   ebx,eax
  4082cc:	fwait
  4082cd:	sub    DWORD PTR [edx-0x42d2fb00],edx
  4082d3:	jo     0x40833d
  4082d5:	ffree  st(0)
  4082d7:	xor    al,0x6d
  4082d9:	loope  0x408306
  4082db:	dec    edx
  4082dc:	pushf  
  4082dd:	xchg   BYTE PTR [ebp+0x6d7f7392],dh
  4082e3:	mov    dl,0x7c
  4082e5:	sbb    al,0x5
  4082e7:	cmp    DWORD PTR [ecx-0x77],edx
  4082ea:	enter  0xda05,0x64
  4082ee:	push   esi
  4082ef:	dec    ebp
  4082f0:	xchg   ecx,eax
  4082f1:	push   es
  4082f2:	inc    esi
  4082f3:	jne    0x408333
  4082f5:	cmp    BYTE PTR [ebp+0x5a],cl
  4082f8:	and    dl,al
  4082fa:	(bad)  
  4082fb:	(bad)  
  4082fc:	sub    ebx,DWORD PTR [edx+0x4e]
  4082ff:	mov    al,ds:0x1d2e8a7f
  408304:	pop    esi
  408305:	adc    esp,DWORD PTR [ebx]
  408307:	mov    al,ds:0x571f6d67
  40830c:	fs xchg esp,eax
  40830e:	pop    ebx
  40830f:	pop    es
  408310:	inc    ecx
  408311:	test   DWORD PTR [esi+0x4f606a78],0x8ec83d02
  40831b:	sbb    esi,DWORD PTR [edi]
  40831d:	not    DWORD PTR [esp+ecx*1+0x2d0ba27]
  408324:	imul   eax,DWORD PTR [eax],0x739655f7
  40832a:	xchg   esi,eax
  40832b:	and    dl,cl
  40832d:	aad    0x71
  40832f:	push   ebp
  408330:	outs   dx,BYTE PTR ds:[esi]
  408331:	rcr    BYTE PTR [ebx-0x69ee25b1],cl
  408337:	imul   edx,DWORD PTR ds:0x53c9e1f1,0xffffff91
  40833e:	stc    
  40833f:	repz xor eax,0xc98640e5
  408345:	daa    
  408346:	int3   
  408347:	call   0x41b18c4e
  40834c:	fisubr DWORD PTR es:[edi]
  40834f:	mov    ah,0x0
  408351:	scas   al,BYTE PTR es:[edi]
  408352:	popf   
  408353:	psrlq  mm7,QWORD PTR [ebp+0x716b3b9b]
  40835a:	or     bl,BYTE PTR [edx+0x7a]
  40835d:	sub    BYTE PTR [eax+0x53],al
  408360:	xchg   esi,eax
  408361:	out    dx,al
  408362:	enter  0xbae2,0xff
  408366:	pop    esp
  408367:	add    al,0xa7
  408369:	arpl   WORD PTR [edx-0x73b5716a],bp
  40836f:	outs   dx,DWORD PTR ds:[esi]
  408370:	dec    ebx
  408371:	out    dx,al
  408372:	mov    bh,0x1d
  408374:	sbb    ebp,DWORD PTR [edi]
  408376:	arpl   cx,cx
  408378:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408379:	pop    esp
  40837a:	mov    dl,0x77
  40837c:	sub    edx,edi
  40837e:	ret    0x2974
  408381:	pop    edx
  408382:	xchg   ebp,eax
  408383:	sbb    BYTE PTR [esi+0x67],ah
  408386:	xor    ecx,edi
  408388:	fisubr WORD PTR [edi+0x4d]
  40838b:	add    al,0xaa
  40838d:	jp     0x4083fc
  40838f:	mov    edi,0x88a8411
  408394:	fadd   DWORD PTR [ecx-0x3d21969a]
  40839a:	ins    BYTE PTR es:[edi],dx
  40839b:	imul   BYTE PTR [ebx+0x6d]
  40839e:	and    WORD PTR ds:0xf8e84e52,si
  4083a5:	lods   al,BYTE PTR ds:[esi]
  4083a6:	mov    dh,0x97
  4083a8:	dec    edi
  4083a9:	ja     0x408358
  4083ab:	pop    edx
  4083ac:	lahf   
  4083ad:	sub    al,0x90
  4083af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083b0:	aam    0xd6
  4083b2:	test   ebp,ebp
  4083b4:	neg    DWORD PTR [edi]
  4083b6:	addr16 popa 
  4083b8:	mov    dh,0x58
  4083ba:	cwde   
  4083bb:	inc    esi
  4083bc:	sub    al,0x20
  4083be:	pusha  
  4083bf:	cdq    
  4083c0:	(bad)  
  4083c1:	hlt    
  4083c2:	sub    edi,eax
  4083c4:	ret    0x56cf
  4083c7:	xor    al,0xd4
  4083c9:	stos   DWORD PTR es:[edi],eax
  4083ca:	sbb    BYTE PTR [ebp+0x20],bh
  4083cd:	daa    
  4083ce:	loopne 0x408370
  4083d0:	stos   DWORD PTR es:[edi],eax
  4083d1:	jmp    0x4083b6
  4083d3:	(bad)  
  4083d4:	pop    ecx
  4083d5:	adc    DWORD PTR [ecx+0x19],esi
  4083d8:	pop    ss
  4083d9:	cld    
  4083da:	dec    ebx
  4083db:	push   cs
  4083dc:	les    eax,FWORD PTR [ebx-0x67]
  4083df:	std    
  4083e0:	fistp  DWORD PTR [esp+eiz*8]
  4083e3:	inc    edi
  4083e4:	add    eax,0x92934c1f
  4083e9:	gs mov al,0x93
  4083ec:	fs xchg ebp,eax
  4083ee:	imul   edx,DWORD PTR ds:0xbc833c36,0xcbf791a3
  4083f8:	retf   
  4083f9:	xor    cl,cl
  4083fb:	lods   eax,DWORD PTR ds:[esi]
  4083fc:	add    eax,0xdc4cf943
  408401:	das    
  408402:	repnz popf 
  408404:	jge    0x4083a5
  408406:	jmp    0x7879:0x524d8133
  40840d:	test   BYTE PTR [bp+si-0x6021],bh
  408412:	outs   dx,DWORD PTR ds:[esi]
  408413:	mov    ecx,0x3d5a9a01
  408418:	mov    edx,0x7d856891
  40841d:	movq   mm1,QWORD PTR [edi]
  408420:	shl    BYTE PTR [eax+0x3503337],1
  408426:	mov    WORD PTR [ecx],fs
  408428:	xchg   edx,eax
  408429:	sbb    eax,0x5093694f
  40842f:	stos   DWORD PTR es:[edi],eax
  408430:	lods   eax,DWORD PTR ds:[esi]
  408431:	mov    al,ds:0x6a94d407
  408436:	lea    ebx,[ebp-0x564c523c]
  40843c:	mov    al,0x70
  40843e:	add    eax,0x942bb353
  408443:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408444:	jecxz  0x408483
  408446:	ins    BYTE PTR es:[edi],dx
  408447:	add    BYTE PTR [edx],al
  408449:	inc    esp
  40844a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40844b:	dec    ebp
  40844c:	cmp    al,0xec
  40844e:	push   esi
  40844f:	call   FWORD PTR [edx-0x5c9f7e7b]
  408455:	iret   
  408456:	mov    ds:0xca9f8157,al
  40845b:	scas   al,BYTE PTR es:[edi]
  40845c:	fidivr WORD PTR [ecx-0x7aed2343]
  408462:	mov    edi,0xc44b2b69
  408467:	jmp    FWORD PTR [edx-0x15c4e9fc]
  40846d:	or     al,0x63
  40846f:	cmp    eax,0x47bda943
  408474:	adc    al,0x6a
  408476:	lock pop edx
  408478:	or     eax,0x1c70739b
  40847d:	push   ds
  40847e:	xchg   ecx,eax
  40847f:	dec    esi
  408480:	fdiv   QWORD PTR [edi+0x7f8f136e]
  408486:	xchg   esi,eax
  408487:	push   edi
  408488:	mov    edx,0xb20f8045
  40848d:	das    
  40848e:	jge    0x4084e2
  408490:	jmp    0x40845e
  408492:	mov    ecx,0x503f0ee8
  408497:	fbld   TBYTE PTR [ebx+eax*4]
  40849a:	push   edx
  40849b:	mov    ebp,0x229d47e7
  4084a0:	dec    edi
  4084a1:	mov    ch,0xcb
  4084a3:	pop    edx
  4084a4:	jecxz  0x40851e
  4084a6:	cmp    eax,0xa4b4895d
  4084ab:	xlat   BYTE PTR ds:[ebx]
  4084ac:	nop
  4084ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084ae:	outs   dx,BYTE PTR ds:[esi]
  4084af:	lahf   
  4084b0:	frstor [ebx+eax*1-0x6744f2a5]
  4084b7:	fucomi st,st(3)
  4084b9:	pushf  
  4084ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084bb:	ss add al,0x4f
  4084be:	pop    es
  4084bf:	(bad)  
  4084c0:	(bad)  
  4084c1:	js     0x4084a8
  4084c3:	pop    esp
  4084c4:	inc    ebp
  4084c5:	mov    ecx,0x8122bd75
  4084ca:	inc    edx
  4084cb:	xchg   esi,eax
  4084cc:	mov    edi,0xfa1da8a5
  4084d1:	sbb    bh,BYTE PTR [esi-0x19]
  4084d4:	sub    esp,ecx
  4084d6:	into   
  4084d7:	push   ss
  4084d8:	jno    0x4084bd
  4084da:	int    0x60
  4084dc:	leave  
  4084dd:	dec    esp
  4084de:	hlt    
  4084df:	mov    esp,0xc9bdcfeb
  4084e4:	cmc    
  4084e5:	adc    BYTE PTR [esi],0x5d
  4084e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084e9:	pop    esp
  4084ea:	sub    bl,BYTE PTR [edx+edi*1+0x63]
  4084ee:	mov    BYTE PTR [esi],al
  4084f0:	pop    edx
  4084f1:	or     BYTE PTR ds:0xffb95c24,0xc8
  4084f8:	inc    edx
  4084f9:	push   ecx
  4084fa:	jp     0x4084d6
  4084fc:	fcomp  DWORD PTR [ebp-0x2f]
  4084ff:	test   DWORD PTR [esi+0x4b],0x9c814ba5
  408506:	and    al,BYTE PTR [ecx+0x1b2743a3]
  40850c:	add    DWORD PTR [ebx+0x35],edx
  40850f:	add    DWORD PTR [edi],esi
  408511:	push   esi
  408512:	xor    DWORD PTR [esi],ebp
  408514:	inc    DWORD PTR [edx+esi*4]
  408517:	cli    
  408518:	cmp    dh,BYTE PTR [ebx-0x3]
  40851b:	push   es
  40851c:	rcl    DWORD PTR [ecx],cl
  40851e:	jp     0x4084a1
  408520:	inc    edx
  408521:	pop    es
  408522:	and    al,BYTE PTR [ebp+0x3]
  408525:	cmp    dl,BYTE PTR [edx+0x1f]
  408528:	pop    ebp
  408529:	aaa    
  40852a:	bound  ecx,QWORD PTR [ebx]
  40852c:	in     eax,dx
  40852d:	pushf  
  40852e:	push   eax
  40852f:	push   ss
  408530:	xchg   esi,eax
  408531:	in     eax,0x60
  408533:	or     al,0x7e
  408535:	jmp    0x40859c
  408537:	mov    ebx,0x38ae6e42
  40853c:	jle    0x408593
  40853e:	sbb    al,0x5a
  408540:	fucomp st(5)
  408542:	and    al,0x50
  408544:	pop    ds
  408545:	in     al,0x32
  408547:	sub    bl,dl
  408549:	cs cld 
  40854b:	aam    0x44
  40854d:	je     0x4084f2
  40854f:	arpl   WORD PTR [ebx+0x59692622],si
  408555:	in     eax,0x1c
  408557:	loop   0x408549
  408559:	test   eax,0x95bdbdf6
  40855e:	jo     0x4085c6
  408560:	add    al,0xf2
  408562:	fcom   st(5)
  408564:	xlat   BYTE PTR ds:[ebx]
  408565:	jecxz  0x40851a
  408567:	push   esi
  408568:	pop    es
  408569:	xchg   esp,eax
  40856a:	les    ecx,FWORD PTR [esi]
  40856c:	imul   esi,DWORD PTR [edi-0x3f],0xfffffff2
  408570:	push   esp
  408571:	ficomp DWORD PTR [eax]
  408573:	in     al,dx
  408574:	xorps  xmm6,XMMWORD PTR [edx+0x6d139fcc]
  40857b:	arpl   WORD PTR [bp+si],bp
  40857e:	pop    esi
  40857f:	dec    eax
  408580:	sar    DWORD PTR [ebx-0x16],0x65
  408584:	and    dh,BYTE PTR [ebx+0x1c]
  408587:	bound  edi,QWORD PTR [esi+0x4200fc4]
  40858d:	sub    eax,0xb2afde7f
  408592:	mov    al,0x84
  408594:	pop    edx
  408595:	hlt    
  408596:	cdq    
  408597:	dec    ebp
  408598:	sbb    DWORD PTR [eax],esp
  40859a:	push   esp
  40859b:	imul   eax,DWORD PTR [edi],0xc726c337
  4085a1:	lock cmp al,0x94
  4085a4:	lds    ecx,FWORD PTR [eax]
  4085a6:	mov    ebp,0x986ba131
  4085ab:	xchg   ebx,eax
  4085ac:	fwait
  4085ad:	cmp    eax,0x7848a33a
  4085b2:	(bad)  
  4085b3:	(bad)  
  4085b5:	call   0x3198bd06
  4085ba:	arpl   si,bp
  4085bc:	mov    al,ds:0xf34338ce
  4085c1:	push   esp
  4085c2:	cld    
  4085c3:	xchg   edi,eax
  4085c4:	lock cdq 
  4085c6:	out    0xe7,eax
  4085c8:	or     BYTE PTR [esi-0x13],bh
  4085cb:	inc    eax
  4085cc:	sbb    ebx,DWORD PTR [edi]
  4085ce:	adc    cl,BYTE PTR [ecx-0xf]
  4085d1:	dec    esi
  4085d2:	add    esi,DWORD PTR [edi-0x26255589]
  4085d8:	inc    ecx
  4085d9:	test   al,0x70
  4085db:	xchg   DWORD PTR [ebp-0x7dd971f1],ebx
  4085e1:	scas   al,BYTE PTR es:[edi]
  4085e2:	xchg   edi,eax
  4085e3:	push   0x54748c9a
  4085e8:	push   es
  4085e9:	xchg   esp,eax
  4085ea:	dec    esp
  4085eb:	call   0x81f8f244
  4085f0:	xchg   ebp,eax
  4085f1:	outs   dx,BYTE PTR ds:[esi]
  4085f2:	or     DWORD PTR [eax-0x3],edx
  4085f5:	outs   dx,BYTE PTR ds:[esi]
  4085f6:	xchg   BYTE PTR [esi+0x12],ch
  4085f9:	xor    DWORD PTR [eax+eiz*1-0x36eb91e],0x7af2b38e
  408604:	mov    edx,0xeb90d465
  408609:	repnz rol BYTE PTR [edi-0x772b741d],1
  408610:	pop    ds
  408611:	mov    bl,BYTE PTR [edx-0x1c0064a]
  408617:	aaa    
  408618:	jnp    0x40867e
  40861a:	dec    ecx
  40861b:	lock fidivr WORD PTR [esi+0x27]
  40861f:	lds    eax,FWORD PTR ds:0x6a539be4
  408625:	xchg   ebx,eax
  408626:	cli    
  408627:	dec    esi
  408628:	popf   
  408629:	add    eax,0xe74d6e09
  40862e:	xlat   BYTE PTR ds:[ebx]
  40862f:	call   0x4eaf:0xdedcc55
  408636:	pop    es
  408637:	jns    0x40869f
  408639:	mov    dh,0x3b
  40863b:	and    al,0x9f
  40863d:	loopne 0x4085c2
  40863f:	outs   dx,BYTE PTR ds:[esi]
  408640:	add    eax,0xbfc38c5b
  408645:	or     al,0xd6
  408647:	clc    
  408648:	pop    ebp
  408649:	jmp    0x2940:0x38e2389f
  408650:	aas    
  408651:	stos   DWORD PTR es:[edi],eax
  408652:	in     al,0x52
  408654:	lods   eax,DWORD PTR ds:[esi]
  408655:	jb     0x40867b
  408657:	add    DWORD PTR [esi],ebx
  408659:	xchg   BYTE PTR [ecx+0x1bad76d2],cl
  40865f:	or     BYTE PTR [ebx+0x2f],ah
  408662:	gs mov eax,0x39e92426
  408668:	inc    ebp
  408669:	test   al,0x21
  40866b:	shl    BYTE PTR [ebx+eax*2+0x5c43218a],1
  408672:	xchg   ebp,eax
  408673:	(bad)  
  408674:	mov    al,ds:0xcecc1aea
  408679:	mov    dh,0xc5
  40867b:	inc    edx
  40867c:	or     al,0x38
  40867e:	lahf   
  40867f:	xchg   BYTE PTR [edx+eiz*1],ah
  408682:	lds    ebx,FWORD PTR [edi]
  408684:	jg     0x4086e9
  408686:	cdq    
  408687:	cmp    BYTE PTR [edx-0x6d],ch
  40868a:	test   DWORD PTR [edx-0x2b1ee234],eax
  408690:	jmp    0x408692
  408692:	data16 int 0xdd
  408695:	xchg   ebx,eax
  408696:	push   esi
  408697:	xchg   esi,eax
  408698:	loope  0x4086f3
  40869a:	mov    ah,0xb4
  40869c:	push   ecx
  40869d:	add    al,0x82
  40869f:	jmp    0x65b2b34e
  4086a4:	mov    al,ds:0xb4eac35a
  4086a9:	cli    
  4086aa:	outs   dx,BYTE PTR ds:[esi]
  4086ab:	lea    ebx,[ecx+0x5e]
  4086ae:	adc    eax,0xa4de18c5
  4086b3:	jbe    0x4086ea
  4086b5:	outs   dx,BYTE PTR ds:[esi]
  4086b6:	inc    ebx
  4086b7:	or     DWORD PTR [esi+ebx*2-0x2a38724],edi
  4086be:	mov    edx,0x75e8a169
  4086c3:	jns    0x408706
  4086c5:	test   al,0xf9
  4086c7:	sub    ecx,DWORD PTR [edx+ecx*4-0x3c4ef8ae]
  4086ce:	test   al,0x56
  4086d0:	push   esi
  4086d1:	mov    ?,WORD PTR [esi-0x1e9d519e]
  4086d7:	(bad)  
  4086d8:	enter  0x2c0a,0xbf
  4086dc:	jp     0x40874f
  4086de:	sub    ah,bl
  4086e0:	add    ch,BYTE PTR [edx]
  4086e2:	fwait
  4086e3:	xchg   esi,eax
  4086e4:	test   eax,0x75d9eb2e
  4086e9:	data16 arpl WORD PTR [ecx+0x7e],dx
  4086ed:	inc    ebp
  4086ee:	imul   ebx,DWORD PTR [esi+ebx*4-0x79e8afe1],0xbe3b3891
  4086f9:	add    BYTE PTR [eax+0x17c64b01],0x2
  408700:	cmp    al,0x17
  408702:	sub    eax,0x2b62038c
  408707:	inc    ebp
  408708:	pop    eax
  408709:	out    0x67,eax
  40870b:	mov    ds:0x703e4ba,al
  408710:	mov    eax,0xf4dec8e
  408715:	(bad)  
  408716:	paddusw mm0,QWORD PTR [edi]
  408719:	xchg   ecx,eax
  40871a:	or     eax,0x45f16586
  40871f:	in     al,dx
  408720:	push   ebp
  408721:	inc    edx
  408722:	cmp    DWORD PTR [esi-0x30],ecx
  408725:	pop    ss
  408726:	sub    al,0xde
  408728:	mov    ah,0x77
  40872a:	ficomp WORD PTR [ebx+0x38]
  40872d:	mov    ecx,DWORD PTR [edx+esi*8+0x18]
  408731:	mov    dh,0x84
  408733:	ins    BYTE PTR es:[edi],dx
  408734:	test   eax,0x88ba687a
  408739:	popf   
  40873a:	mov    ch,0xee
  40873c:	(bad)  
  40873d:	imul   ebx,eax,0x468916ec
  408743:	mov    WORD PTR [ebp+0x5df8739d],ax
  40874a:	mov    ebx,DWORD PTR [edx+0x43]
  40874d:	paddusb mm6,QWORD PTR [esi+ecx*2+0x49d5c9fd]
  408755:	int3   
  408756:	or     DWORD PTR [ebp+ebx*8+0x75],ebx
  40875a:	enter  0x3dd3,0xd0
  40875e:	push   esi
  40875f:	sbb    esp,DWORD PTR es:[esi]
  408762:	std    
  408763:	push   ebp
  408764:	or     al,0x3b
  408766:	sub    eax,0xd3342506
  40876b:	xchg   ecx,eax
  40876c:	or     ah,BYTE PTR [ebp+ebp*4+0x2857d02d]
  408773:	xchg   esp,eax
  408774:	mov    ch,0xa5
  408776:	xor    DWORD PTR [ecx],0xfffffff0
  408779:	sti    
  40877a:	mov    edi,0x59552f9c
  40877f:	loop   0x4087ff
  408781:	xor    ecx,DWORD PTR [edi+ebx*1+0x28]
  408785:	(bad)  
  408786:	aas    
  408787:	adc    BYTE PTR [ebx+0x15],ah
  40878a:	ror    DWORD PTR [ecx+0x61976f8c],1
  408790:	cmp    bl,ah
  408792:	(bad)  
  408794:	cmovno esp,esp
  408797:	mov    edi,0xc0d68173
  40879c:	pop    eax
  40879d:	stc    
  40879e:	sbb    BYTE PTR [edx+0x37],bh
  4087a1:	(bad)  
  4087a2:	mov    ?,WORD PTR [ecx+0x59471e45]
  4087a8:	or     al,BYTE PTR [edx]
  4087aa:	jmp    0x408820
  4087ac:	xchg   ecx,eax
  4087ad:	in     al,dx
  4087ae:	adc    esp,DWORD PTR [ebp-0x7e]
  4087b1:	adc    DWORD PTR [edx],esp
  4087b3:	sbb    al,0xe7
  4087b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087b6:	and    dh,BYTE PTR [eax+0x184ccb82]
  4087bc:	mov    esp,0x1c5abede
  4087c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087c2:	enter  0x83d6,0x41
  4087c6:	ins    DWORD PTR es:[edi],dx
  4087c7:	enter  0x852,0xb5
  4087cb:	jl     0x40879c
  4087cd:	js     0x4087a7
  4087cf:	mov    ch,0x5d
  4087d1:	aam    0x63
  4087d3:	mov    ds:0x2a40d76,al
  4087d8:	retf   
  4087d9:	jge    0x40884d
  4087db:	addr16 cdq 
  4087dd:	outs   dx,DWORD PTR ds:[esi]
  4087de:	outs   dx,DWORD PTR ds:[esi]
  4087df:	mov    dh,0x32
  4087e1:	add    esp,DWORD PTR ds:0x33686bff
  4087e7:	mov    BYTE PTR [edx+0x41],bh
  4087ea:	ja     0x408823
  4087ec:	out    dx,al
  4087ed:	test   esi,edi
  4087ef:	mov    ecx,0x65cdd806
  4087f4:	iret   
  4087f5:	jne    0x408858
  4087f7:	icebp  
  4087f8:	pop    esp
  4087f9:	rcl    BYTE PTR [ebp+edi*4-0x2b],0x70
  4087fe:	pop    ds
  4087ff:	jne    0x40881e
  408801:	cdq    
  408802:	test   bh,bl
  408804:	mov    cl,0xe6
  408806:	cld    
  408807:	mov    cs,edi
  408809:	ret    0x2cce
  40880c:	or     al,0xf6
  40880e:	mov    ebx,0x2a5a7529
  408813:	mov    esi,0x5037ec8c
  408818:	mov    WORD PTR [ebp-0x2ddffed],?
  40881e:	and    ch,BYTE PTR [edi-0x28]
  408821:	aad    0xe
  408823:	arpl   WORD PTR [ecx+0x32],bp
  408826:	nop
  408827:	cli    
  408828:	xchg   ecx,eax
  408829:	jo     0x408847
  40882b:	sub    DWORD PTR [ebx-0xb6a4f1c],edx
  408831:	xor    esi,ecx
  408833:	and    ecx,ebp
  408835:	lods   al,BYTE PTR ds:[esi]
  408836:	ret    
  408837:	out    0x11,al
  408839:	sbb    eax,0xce5283c7
  40883e:	aaa    
  40883f:	jp     0x4087cb
  408841:	jmp    DWORD PTR [esi-0x44]
  408844:	pop    es
  408845:	mov    edx,0x9942ac5
  40884a:	jecxz  0x408890
  40884c:	test   BYTE PTR [esi-0x679258bc],ah
  408852:	popa   
  408853:	jo     0x4088b0
  408855:	notrack call DWORD PTR [ecx+0x6acc1414]
  40885c:	dec    eax
  40885d:	sbb    ebx,DWORD PTR [ebp-0x4a]
  408860:	or     al,0xc9
  408862:	repz rcl DWORD PTR [edx],cl
  408865:	xchg   DWORD PTR [edx-0x471613ec],eax
  40886b:	or     al,0x50
  40886d:	mov    ch,0x9f
  40886f:	inc    eax
  408870:	ja     0x4087fc
  408872:	mov    ds:0x41bfd855,eax
  408877:	test   DWORD PTR [eax-0x70931f04],edx
  40887d:	rcr    ch,1
  40887f:	push   ds
  408880:	(bad)  
  408881:	and    bl,BYTE PTR [edx+0x52]
  408884:	das    
  408885:	and    BYTE PTR [edx-0x3d515e36],bl
  40888b:	imul   esi,DWORD PTR [eax],0x4e
  40888e:	pop    esi
  40888f:	sub    al,0xe1
  408891:	adc    BYTE PTR [ecx+0x4a58d158],al
  408897:	pop    eax
  408898:	pop    edi
  408899:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40889a:	cmp    edi,DWORD PTR [eax-0x3a959126]
  4088a0:	dec    esp
  4088a1:	or     al,0xc4
  4088a3:	mov    ebx,0x2d8328cb
  4088a8:	pushf  
  4088a9:	out    0x43,eax
  4088ab:	in     al,dx
  4088ac:	pusha  
  4088ad:	push   cs
  4088ae:	xchg   ebx,eax
  4088af:	daa    
  4088b0:	jo     0x4088ec
  4088b2:	pop    ds
  4088b3:	stos   BYTE PTR es:[edi],al
  4088b4:	jmp    0xb5c5:0xf0e4cbb2
  4088bb:	inc    ecx
  4088bc:	(bad)
  4088bf:	les    edx,FWORD PTR [esi+eax*2]
  4088c2:	retf   
  4088c3:	mov    ebp,eax
  4088c5:	push   cs
  4088c6:	mov    ecx,0xb4164cb
  4088cb:	mov    al,0x9c
  4088cd:	faddp  st(7),st
  4088cf:	push   edx
  4088d0:	in     al,dx
  4088d1:	sbb    eax,0xd39fa049
  4088d6:	inc    ebx
  4088d7:	jecxz  0x408898
  4088d9:	sub    al,0x2b
  4088db:	jle    0x408938
  4088dd:	or     edi,ebx
  4088df:	aam    0xcd
  4088e1:	inc    ecx
  4088e2:	jae    0x40887f
  4088e4:	shr    BYTE PTR [edi-0x40],1
  4088e7:	pop    ebx
  4088e8:	mov    ah,0x9a
  4088ea:	ret    0xacfc
  4088ed:	add    eax,0xca4ea6ed
  4088f2:	call   0xb867:0x216dc7ce
  4088f9:	add    esi,DWORD PTR [eax]
  4088fb:	cwde   
  4088fc:	rcl    eax,1
  4088fe:	pop    edx
  4088ff:	ja     0x4088ba
  408901:	lahf   
  408902:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408903:	sub    eax,0xdc2e4d71
  408908:	pop    eax
  408909:	pushf  
  40890a:	or     esp,DWORD PTR [edi+0x4bfe4457]
  408910:	in     al,dx
  408911:	add    al,0x7d
  408913:	cmp    DWORD PTR [edi+0x6c],eax
  408916:	cs mov ah,0x75
  408919:	sbb    esi,DWORD PTR [esi+0x19]
  40891c:	mov    dh,0x59
  40891e:	cmp    DWORD PTR [eax],esi
  408920:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408921:	pop    ebp
  408922:	fldenv [ebp+0x4f]
  408925:	jle    0x408970
  408927:	dec    ebx
  408928:	ror    BYTE PTR [ebp-0x3557f7e3],1
  40892e:	aaa    
  40892f:	(bad)  
  408930:	cdq    
  408931:	dec    ebp
  408932:	shr    edi,1
  408934:	xchg   edi,eax
  408935:	(bad)  
  408936:	jge    0x408946
  408938:	push   es
  408939:	jbe    0x4089a2
  40893b:	add    DWORD PTR [eax+0x1c],esi
  40893e:	mov    fs,WORD PTR [eax-0x45]
  408941:	stos   BYTE PTR es:[edi],al
  408942:	dec    ecx
  408943:	loop   0x40896f
  408945:	adc    BYTE PTR [ebx+0x33],ch
  408948:	imul   edi,ebp,0x42
  40894b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40894c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40894d:	xchg   edi,eax
  40894e:	push   ecx
  40894f:	jno    0x4088d7
  408951:	or     BYTE PTR [ebp+0x7e],0xfa
  408955:	out    dx,al
  408956:	int    0x89
  408958:	mov    cl,0x68
  40895a:	fld    DWORD PTR [ebx]
  40895c:	lock cmp al,ch
  40895f:	mov    ah,0xc6
  408961:	pop    ecx
  408962:	mov    al,0xfd
  408964:	icebp  
  408965:	xor    esi,DWORD PTR [ebp-0x62c6381d]
  40896b:	or     DWORD PTR [edx+0x3d],0xd5e291a7
  408972:	mov    ch,0x86
  408974:	mov    ch,0x82
  408976:	add    eax,0x4d8307cd
  40897b:	pop    es
  40897c:	push   es
  40897d:	leave  
  40897e:	mov    al,0xfc
  408980:	sub    edi,0xc01df4d7
  408986:	or     dl,BYTE PTR [edi+0x26]
  408989:	push   esp
  40898a:	mov    bh,0x2
  40898c:	and    bh,BYTE PTR [esi-0x571ae503]
  408992:	and    ebp,ebx
  408994:	fisubr WORD PTR [ebx-0x2b754753]
  40899a:	cdq    
  40899b:	sahf   
  40899c:	mov    eax,ds:0x1e0d987e
  4089a1:	stos   BYTE PTR es:[edi],al
  4089a2:	jnp    0x408998
  4089a4:	jg     0x4089df
  4089a6:	adc    al,0xf8
  4089a8:	retf   0xb5c1
  4089ab:	pop    ds
  4089ac:	rcl    DWORD PTR [esi],0xf7
  4089af:	clc    
  4089b0:	iret   
  4089b1:	(bad)  
  4089b2:	adc    bh,dl
  4089b4:	test   al,0x87
  4089b6:	mov    esp,0x89c80574
  4089bb:	dec    esp
  4089bc:	sbb    ecx,DWORD PTR [ebp+0x4ca54daf]
  4089c2:	push   ss
  4089c3:	(bad)  
  4089c4:	dec    esi
  4089c5:	sbb    eax,0xc4e4a30
  4089ca:	add    BYTE PTR [esi],bh
  4089cc:	ss loopne 0x408978
  4089cf:	mul    DWORD PTR [ebp+0x4a2dd7b8]
  4089d5:	(bad)  
  4089d7:	jae    0x408a25
  4089d9:	repz (bad) 
  4089db:	adc    BYTE PTR [esi],cl
  4089dd:	mov    eax,ds:0x9d58053
  4089e2:	shr    esp,0xf3
  4089e5:	mov    edx,0x226994b4
  4089ea:	arpl   bp,bp
  4089ec:	add    eax,0x22e601a4
  4089f1:	hlt    
  4089f2:	aas    
  4089f3:	out    0x9f,al
  4089f5:	je     0x408a10
  4089f7:	adc    eax,0xd7b1349
  4089fc:	je     0x4089df
  4089fe:	fsubr  DWORD PTR [edi+0x53]
  408a01:	add    eax,0x1b0e6c75
  408a06:	sub    DWORD PTR [ebp+0x6c],0xfffffff2
  408a0a:	mov    ds:0x2c769c83,eax
  408a0f:	dec    ecx
  408a10:	dec    esp
  408a11:	pop    eax
  408a12:	stos   BYTE PTR es:[edi],al
  408a13:	retf   0x6a00
  408a16:	ja     0x408a8c
  408a18:	push   esp
  408a19:	outs   dx,DWORD PTR ds:[esi]
  408a1a:	cli    
  408a1b:	add    esi,edx
  408a1d:	sar    BYTE PTR [edi+0x12fccf5b],cl
  408a23:	leave  
  408a24:	xor    esp,eax
  408a26:	jl     0x408aa0
  408a28:	pop    esi
  408a29:	add    edi,ebx
  408a2b:	idiv   dh
  408a2d:	mov    bl,0xf5
  408a2f:	retf   
  408a30:	push   ds
  408a31:	fcom   DWORD PTR [esp+esi*8]
  408a34:	sbb    eax,0xa730f15d
  408a39:	xchg   esi,eax
  408a3a:	xor    al,0x5
  408a3c:	unpcklps xmm4,XMMWORD PTR ds:0x3fce91da
  408a43:	jae    0x4089e5
  408a45:	sub    DWORD PTR [ebx+0x78],edx
  408a48:	mov    ebx,0xb386662a
  408a4d:	popf   
  408a4e:	test   al,0xfd
  408a50:	xor    eax,0x97c88eeb
  408a55:	and    ebx,DWORD PTR [ecx]
  408a57:	pop    es
  408a58:	fmul   DWORD PTR [ebp+0x4b2d3d87]
  408a5e:	xchg   edi,eax
  408a5f:	mov    edx,0xda5906d1
  408a64:	mov    al,0x1a
  408a66:	jp     0x408acb
  408a68:	inc    ebp
  408a69:	bound  eax,QWORD PTR [ebx+0x3]
  408a6c:	iret   
  408a6d:	test   DWORD PTR [ebx+0x24],ebx
  408a70:	inc    edi
  408a71:	jne    0x408a67
  408a73:	aam    0x3d
  408a75:	int3   
  408a76:	adc    eax,0x5aff3c02
  408a7b:	retf   0x8b11
  408a7e:	sub    al,0x43
  408a80:	dec    edi
  408a81:	(bad)
  408a85:	adc    dh,ch
  408a87:	clc    
  408a88:	je     0x408a2d
  408a8a:	mov    ebx,0xb8e596ac
  408a8f:	cli    
  408a90:	or     eax,0x3e818591
  408a95:	ss xchg ebp,eax
  408a97:	jmp    FWORD PTR [ecx]
  408a99:	adc    eax,0xf259f5d4
  408a9e:	leave  
  408a9f:	std    
  408aa0:	je     0x408aac
  408aa2:	add    BYTE PTR [esp+ebx*8+0xf],0x6c
  408aa7:	out    dx,al
  408aa8:	cmp    DWORD PTR [ebx+0x676027dd],ebp
  408aae:	lea    edi,[ebp-0x4fd4deb6]
  408ab4:	cdq    
  408ab5:	adc    al,0x6
  408ab7:	cmp    bh,dl
  408ab9:	mov    ds:0x4a0025ef,al
  408abe:	pop    esi
  408abf:	lock aam 0x62
  408ac2:	outs   dx,DWORD PTR ds:[esi]
  408ac3:	sub    BYTE PTR [esi+0x21],dl
  408ac6:	push   0x3abe36ff
  408acb:	push   edx
  408acc:	xor    eax,0x2e886e24
  408ad1:	jmp    0x1aa9:0xfe50247f
  408ad8:	je     0x408b2c
  408ada:	sub    BYTE PTR [ecx+0x29],dh
  408add:	outs   dx,DWORD PTR ds:[esi]
  408ade:	pusha  
  408adf:	cmc    
  408ae0:	jns    0x408b5b
  408ae2:	inc    edi
  408ae3:	and    eax,ecx
  408ae5:	dec    edi
  408ae6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ae7:	xor    cl,BYTE PTR ds:0xcfb7a99c
  408aed:	cmc    
  408aee:	fsubr  st,st(5)
  408af0:	mov    ah,0x86
  408af2:	mov    BYTE PTR [eax+0x78c06192],cl
  408af8:	std    
  408af9:	dec    eax
  408afa:	adc    bh,0x8d
  408afd:	ds push es
  408aff:	adc    eax,0xa904ce04
  408b04:	or     al,0x6c
  408b06:	add    eax,0xc80f164c
  408b0b:	imul   esi,DWORD PTR [ebp-0x17],0x30
  408b0f:	inc    edi
  408b10:	test   eax,0x1372b120
  408b15:	sub    esi,DWORD PTR cs:[esi]
  408b18:	jmp    0x408af3
  408b1a:	addr16 mov bl,0xa0
  408b1d:	test   ah,al
  408b1f:	arpl   WORD PTR [ecx+eax*4+0x79ba229e],ax
  408b26:	xchg   esi,eax
  408b27:	lahf   
  408b28:	test   BYTE PTR [ecx-0x7c883afb],ah
  408b2e:	mov    al,0x28
  408b30:	imul   edi,DWORD PTR [ebp+eiz*8-0xc],0xf64c2888
  408b38:	dec    BYTE PTR [ebx-0xc25cb9c]
  408b3e:	retf   0xf37d
  408b41:	inc    esp
  408b42:	iret   
  408b43:	push   ebp
  408b44:	pop    edi
  408b45:	mov    al,0xf7
  408b47:	(bad)  ds:0x2a56d15c
  408b4d:	jno    0x408b5b
  408b4f:	cli    
  408b50:	lods   eax,DWORD PTR ds:[esi]
  408b51:	push   edx
  408b52:	mov    esi,0xff3bd8ae
  408b57:	and    DWORD PTR [ebx-0x698bde67],ebx
  408b5d:	js     0x408bca
  408b5f:	mov    ecx,0xca1dd40a
  408b64:	adc    ecx,DWORD PTR [edx+edi*2+0x5a]
  408b68:	ret    0x60cc
  408b6b:	out    0xed,al
  408b6d:	ret    0x311f
  408b70:	aad    0xef
  408b72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b73:	xor    ch,cl
  408b75:	jmp    0x408b32
  408b77:	repnz imul edi,DWORD PTR [ebp+0x6a],0x9f224018
  408b7f:	or     al,0x75
  408b81:	call   0x26fb4da3
  408b86:	aas    
  408b87:	mov    DWORD PTR [ecx],ebx
  408b89:	xchg   edx,eax
  408b8a:	and    BYTE PTR [edi+0xb859feb],ch
  408b90:	or     BYTE PTR [esi],ch
  408b92:	dec    ebx
  408b93:	jl     0x408b34
  408b95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b96:	and    eax,0xb4fd3165
  408b9b:	loope  0x408bbc
  408b9d:	les    edx,FWORD PTR [ebx+edx*1]
  408ba0:	mov    BYTE PTR [esi],cl
  408ba2:	lea    eax,[esi]
  408ba4:	cs xchg ebp,eax
  408ba6:	rol    BYTE PTR ds:0x7f2f93a0,1
  408bac:	xchg   DWORD PTR [edi],esi
  408bae:	bound  edx,QWORD PTR [ecx]
  408bb0:	cmp    ebx,DWORD PTR ds:0x6f7138f4
  408bb6:	int    0xdf
  408bb8:	mov    dh,BYTE PTR [edx]
  408bba:	push   ds
  408bbb:	out    dx,eax
  408bbc:	and    cl,ah
  408bbe:	dec    esp
  408bbf:	mov    esp,0xfd7df9f6
  408bc4:	mov    al,0x4e
  408bc6:	mov    esp,0x931784b8
  408bcb:	xchg   edx,eax
  408bcc:	(bad)  [edi]
  408bce:	dec    edx
  408bcf:	mov    dh,0xec
  408bd1:	xchg   ebp,eax
  408bd2:	fisub  WORD PTR [ebp+0x280a1264]
  408bd8:	es dec eax
  408bda:	es jmp 0xe172:0xf3f345fe
  408be2:	pop    esi
  408be3:	(bad)  
  408be4:	add    BYTE PTR [ecx-0x5b7eb878],0xf7
  408beb:	mov    esp,0x4caa3998
  408bf0:	dec    ebx
  408bf1:	stos   BYTE PTR es:[edi],al
  408bf2:	adc    esi,DWORD PTR [esi-0xf54b51]
  408bf8:	adc    al,BYTE PTR [ecx-0x70f8f9e0]
  408bfe:	aaa    
  408bff:	add    al,0xed
  408c01:	out    dx,eax
  408c02:	nop
  408c03:	das    
  408c04:	xchg   edi,eax
  408c05:	loope  0x408c72
  408c07:	pop    ebp
  408c08:	in     eax,dx
  408c09:	es mov cl,0x96
  408c0c:	mov    ah,0xf6
  408c0e:	das    
  408c0f:	mov    edx,0x52cdc43c
  408c14:	jnp    0x408be9
  408c16:	mov    al,0x7
  408c18:	lods   eax,DWORD PTR ds:[esi]
  408c19:	repz xchg edx,eax
  408c1b:	nop
  408c1c:	jo     0x408bb1
  408c1e:	mov    esi,0x89fee97c
  408c23:	loop   0x408c19
  408c25:	clc    
  408c26:	clc    
  408c27:	mov    edx,0x502907c9
  408c2c:	outs   dx,BYTE PTR ds:[esi]
  408c2d:	mov    ebx,0xe50a7bae
  408c32:	jle    0x408c78
  408c34:	test   al,0x1c
  408c36:	add    ebp,edx
  408c38:	out    dx,eax
  408c39:	retf   
  408c3a:	push   eax
  408c3b:	jmp    0xaadb460a
  408c40:	xor    BYTE PTR [esp+ecx*2],0xfe
  408c44:	inc    eax
  408c45:	xchg   ebx,eax
  408c46:	retf   0x83f0
  408c49:	or     ch,BYTE PTR [esi]
  408c4b:	out    dx,eax
  408c4c:	add    al,0x94
  408c4e:	jbe    0x408bf3
  408c50:	jmp    0x26df:0xc4236a12
  408c57:	dec    edi
  408c58:	add    DWORD PTR [ebp+0x1e9246f4],edi
  408c5e:	jl     0x408c8d
  408c60:	pop    ebp
  408c61:	mov    esp,0x411aece1
  408c66:	push   0x58
  408c68:	adc    eax,0x130a8b25
  408c6d:	mov    edx,0x5fbde538
  408c72:	bnd jl 0x408cc9
  408c75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c76:	sbb    ecx,DWORD PTR [ecx+0xeb57a10]
  408c7c:	faddp  st(3),st
  408c7e:	sbb    ebp,DWORD PTR [ecx+edx*4]
  408c81:	jge    0x408c9e
  408c83:	sahf   
  408c84:	outs   dx,BYTE PTR ds:[esi]
  408c85:	cmp    bl,BYTE PTR ds:0x90b57c29
  408c8b:	sahf   
  408c8c:	mov    ch,0x11
  408c8e:	popa   
  408c8f:	icebp  
  408c90:	cdq    
  408c91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c92:	dec    edx
  408c93:	push   esi
  408c94:	jno    0x408c3e
  408c96:	push   ds
  408c97:	and    dl,cl
  408c99:	cwde   
  408c9a:	in     al,0xc2
  408c9c:	or     esi,DWORD PTR [edx+edi*8-0x1c]
  408ca0:	imul   ecx,DWORD PTR [edx+eax*1+0x17300562],0xffffffaa
  408ca8:	jbe    0x408d20
  408caa:	add    al,0xd6
  408cac:	dec    ecx
  408cad:	xor    dl,BYTE PTR [ecx+0x22b12bfb]
  408cb3:	inc    ebp
  408cb4:	cmp    eax,0xef9f0f81
  408cb9:	ja     0x408caa
  408cbb:	inc    ebp
  408cbc:	push   es
  408cbd:	lods   eax,DWORD PTR ds:[esi]
  408cbe:	mov    DWORD PTR [edx+0x3ad42460],eax
  408cc4:	adc    eax,ecx
  408cc6:	xor    DWORD PTR [ecx+0x4c43d27c],ebp
  408ccc:	lock xlat BYTE PTR ds:[ebx]
  408cce:	imul   BYTE PTR [ebx-0x1475a71e]
  408cd4:	imul   eax,DWORD PTR [edx+0x4a9103b8],0x2893bb6b
  408cde:	pop    edi
  408cdf:	or     bh,BYTE PTR [eax+0x2ae03edb]
  408ce5:	xor    ebx,DWORD PTR [ebp-0x32]
  408ce8:	dec    ebp
  408ce9:	cdq    
  408cea:	sahf   
  408ceb:	dec    esp
  408cec:	(bad)  ds:0xd77814ab
  408cf2:	adc    al,BYTE PTR [eax+ecx*4+0x45]
  408cf6:	ror    BYTE PTR [esi],cl
  408cf8:	push   cs
  408cf9:	hlt    
  408cfa:	aas    
  408cfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408cfc:	xchg   esp,eax
  408cfd:	fdivr  QWORD PTR [edx]
  408cff:	clc    
  408d00:	pushf  
  408d01:	adc    DWORD PTR [edx-0x3e],esi
  408d04:	jae    0x408cfe
  408d06:	cwde   
  408d07:	push   ebp
  408d08:	xchg   ebx,eax
  408d09:	icebp  
  408d0a:	mov    eax,ds:0x54e68c41
  408d0f:	es mov eax,0x55ae319c
  408d15:	outs   dx,BYTE PTR ds:[esi]
  408d16:	gs push edx
  408d18:	ins    DWORD PTR es:[edi],dx
  408d19:	cmc    
  408d1a:	jge    0x408d8c
  408d1c:	mov    ds:0x6dba857e,eax
  408d21:	mov    al,ah
  408d23:	mov    esi,0xbced7953
  408d28:	xor    al,0xb8
  408d2a:	ins    BYTE PTR es:[edi],dx
  408d2b:	inc    eax
  408d2c:	inc    ebp
  408d2d:	sub    ebx,DWORD PTR [esi-0x7f5331f]
  408d33:	jne    0x408d9d
  408d35:	test   BYTE PTR ds:0xa7a1917c,dh
  408d3b:	cdq    
  408d3c:	dec    esi
  408d3d:	mov    ds:0x3dc58a2a,al
  408d42:	fst    QWORD PTR gs:[ebp+0x1]
  408d46:	aad    0xe6
  408d48:	arpl   WORD PTR [ebx-0x57],si
  408d4b:	in     eax,0x51
  408d4d:	jb     0x408cee
  408d4f:	xchg   ecx,eax
  408d50:	outs   dx,DWORD PTR ds:[esi]
  408d51:	adc    al,0xce
  408d53:	div    cl
  408d55:	sub    ecx,esp
  408d57:	int    0x9f
  408d59:	mov    esi,0xd7e00a58
  408d5e:	mov    ch,0xf5
  408d60:	mov    al,0xa4
  408d62:	(bad)  
  408d63:	in     al,0xf4
  408d65:	and    eax,0x780742b1
  408d6a:	fisub  WORD PTR [ebp+0x37]
  408d6d:	sahf   
  408d6e:	jns    0x408da5
  408d70:	sbb    eax,0x5abb6c36
  408d75:	push   ecx
  408d76:	shl    dh,1
  408d78:	cmp    BYTE PTR [eax+0x5f358ec6],0x7e
  408d7f:	xor    eax,0x4270b29b
  408d84:	and    al,0x34
  408d86:	into   
  408d87:	or     eax,0x6738d1c0
  408d8c:	push   cs
  408d8d:	add    al,0xd8
  408d8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d90:	(bad)  
  408d91:	fsubr  DWORD PTR [esi]
  408d93:	sub    al,0xa8
  408d95:	xchg   BYTE PTR [ecx+0x572e4e1e],dl
  408d9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d9c:	cld    
  408d9d:	arpl   WORD PTR [eax-0x3c5f727f],sp
  408da3:	cwde   
  408da4:	(bad)  
  408da5:	push   ebp
  408da6:	and    eax,0x5e1baef7
  408dab:	sub    ecx,ebp
  408dad:	int3   
  408dae:	push   0xfe7e5750
  408db3:	pop    ds
  408db4:	pop    ds
  408db5:	lahf   
  408db6:	mov    eax,0xfc1a0412
  408dbb:	or     BYTE PTR [edi-0x3a],bl
  408dbe:	ret    0x2a35
  408dc1:	add    BYTE PTR [esi+0xf078170],cl
  408dc7:	push   0xffffffac
  408dc9:	dec    eax
  408dca:	repz daa 
  408dcc:	mov    eax,0x25bc7350
  408dd1:	inc    ebx
  408dd2:	sti    
  408dd3:	jae    0x408db0
  408dd5:	jmp    0xc5ec4a1b
  408dda:	adc    ah,bh
  408ddc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ddd:	dec    esp
  408dde:	jp     0x408e16
  408de0:	div    BYTE PTR [esi+0x7e49c86b]
  408de6:	std    
  408de7:	ja     0x408e50
  408de9:	push   0xfffffffc
  408deb:	cs std 
  408ded:	js     0x408df0
  408def:	sar    edi,0xa9
  408df2:	xor    al,0xe5
  408df4:	jecxz  0x408dd9
  408df6:	enter  0x7a60,0x9
  408dfa:	mov    bh,cl
  408dfc:	in     al,dx
  408dfd:	mov    ds:0x7b51f370,eax
  408e02:	loope  0x408e59
  408e04:	repnz mov ds:0xbbcb9b36,al
  408e0a:	jmp    0x42c35bec
  408e0f:	cs and al,0xf8
  408e12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e13:	and    cl,BYTE PTR [ebp+0x2325f256]
  408e19:	xor    DWORD PTR [ecx-0x7b6e4ae0],eax
  408e1f:	idiv   DWORD PTR [ecx]
  408e21:	dec    eax
  408e22:	js     0x408e44
  408e24:	push   edx
  408e25:	(bad)  
  408e26:	xchg   ebx,eax
  408e27:	sub    BYTE PTR [ecx],0xa8
  408e2a:	daa    
  408e2b:	test   DWORD PTR [edi],0x98b2d172
  408e31:	mov    al,ds:0x438a8246
  408e36:	pop    esp
  408e38:	(bad)  [edi+0x5e3927ef]
  408e3e:	ret    0x45f6
  408e41:	and    eax,0x4a8af526
  408e46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e47:	pop    eax
  408e48:	loopne 0x408e34
  408e4a:	mov    ds:0xb5d16e2e,eax
  408e4f:	cmp    DWORD PTR [edi-0x3840e826],ebx
  408e55:	lods   eax,DWORD PTR ds:[esi]
  408e56:	scas   eax,DWORD PTR es:[edi]
  408e57:	(bad)  
  408e58:	(bad)  
  408e59:	xchg   ecx,eax
  408e5a:	lods   eax,DWORD PTR ds:[esi]
  408e5b:	test   BYTE PTR [ebp+0x6c44eeb0],ch
  408e61:	mov    ds:0xc68264d6,eax
  408e66:	addr16 inc sp
  408e69:	push   ss
  408e6a:	loope  0x408ebf
  408e6c:	jo     0x408e41
  408e6e:	ja     0x408e5e
  408e70:	outs   dx,DWORD PTR ds:[esi]
  408e71:	and    ch,BYTE PTR [edi]
  408e73:	jl     0x408ed1
  408e75:	out    dx,al
  408e76:	xor    BYTE PTR ds:0xf75698ce,al
  408e7c:	jmp    0x330c:0x20612384
  408e83:	fucomip st,st(4)
  408e85:	jnp    0x408e83
  408e87:	cmc    
  408e88:	mov    WORD PTR [ecx],ss
  408e8a:	add    BYTE PTR [esi],dh
  408e8c:	push   edi
  408e8d:	push   ebx
  408e8e:	nop
  408e8f:	pop    es
  408e90:	fild   WORD PTR [ebp+0x58]
  408e93:	fisub  WORD PTR [ebx]
  408e95:	mov    dl,0xf3
  408e97:	ret    0xd7dc
  408e9a:	ds js  0x408e30
  408e9d:	dec    eax
  408e9e:	sbb    al,0x4b
  408ea0:	xchg   ebx,eax
  408ea1:	out    dx,eax
  408ea2:	push   ebx
  408ea3:	iret   
  408ea4:	jle    0x408ecb
  408ea6:	stos   DWORD PTR es:[edi],eax
  408ea7:	mov    ebx,ebx
  408ea9:	sub    dh,cl
  408eab:	and    al,0xa4
  408ead:	sub    al,0xb2
  408eaf:	mov    cs,ebp
  408eb1:	stos   DWORD PTR es:[edi],eax
  408eb2:	arpl   WORD PTR [eax+ebx*2+0x69],di
  408eb6:	jo     0x408e7a
  408eb8:	cmp    eax,0x673733e2
  408ebd:	pop    eax
  408ebe:	dec    esi
  408ebf:	test   DWORD PTR [ebx],0x53c5ffad
  408ec5:	inc    esi
  408ec6:	mov    ebp,0x8e301b2e
  408ecb:	aas    
  408ecc:	mov    BYTE PTR [ebx],ah
  408ece:	fbld   TBYTE PTR [esi]
  408ed0:	repnz xchg ebx,eax
  408ed2:	out    dx,al
  408ed3:	inc    edi
  408ed4:	(bad)  [eax+0x56]
  408ed7:	mov    eax,ds:0x959da029
  408edc:	push   ebx
  408edd:	sub    cl,BYTE PTR [ecx]
  408edf:	(bad)  
  408ee0:	and    al,0xef
  408ee2:	out    0x4e,eax
  408ee4:	adc    BYTE PTR [ecx+ebp*4-0x6c],0x66
  408ee9:	(bad)  
  408eea:	das    
  408eeb:	and    BYTE PTR [eax],ah
  408eed:	push   edi
  408eee:	popa   
  408eef:	push   edx
  408ef0:	jmp    0xa6080224
  408ef5:	std    
  408ef6:	bound  ecx,QWORD PTR [eax+0x6]
  408ef9:	outs   dx,BYTE PTR ds:[esi]
  408efa:	mov    ds:0x2b717441,al
  408eff:	xor    esp,ebp
  408f01:	pop    ecx
  408f02:	xchg   esp,eax
  408f03:	pop    ss
  408f04:	push   esi
  408f05:	pop    edi
  408f06:	mov    dl,BYTE PTR [esi]
  408f08:	add    ch,dh
  408f0a:	in     al,0x31
  408f0c:	mov    ecx,0x98af6a59
  408f11:	mov    ebx,0x2343c02
  408f16:	mov    ecx,0xf136715f
  408f1b:	cwde   
  408f1c:	mov    dh,0x63
  408f1e:	scas   al,BYTE PTR es:[edi]
  408f1f:	pop    edi
  408f20:	push   edx
  408f21:	addr16 iret 
  408f23:	and    ebx,esi
  408f25:	xchg   DWORD PTR [eax+0x77],edx
  408f28:	data16 (bad) 
  408f2a:	or     al,0x9b
  408f2c:	or     ecx,esp
  408f2e:	add    eax,0xc3055aa3
  408f33:	mov    edi,0x176f1953
  408f38:	(bad)
  408f3c:	jmp    0x153f:0x10e57be5
  408f43:	ss push 0x498d0a1f
  408f49:	pop    ds
  408f4a:	retf   
  408f4b:	pushf  
  408f4c:	add    bh,BYTE PTR [ebx-0x77]
  408f4f:	fwait
  408f50:	sbb    DWORD PTR [edx],edi
  408f52:	test   eax,0x99403596
  408f57:	dec    esp
  408f58:	scas   al,BYTE PTR es:[edi]
  408f59:	rcr    DWORD PTR [esi+0x737c4bec],cl
  408f5f:	xchg   esi,eax
  408f60:	fldenv [ecx+0x442ad396]
  408f66:	push   0x69060760
  408f6b:	cmp    esi,DWORD PTR [esi]
  408f6d:	enter  0x44a8,0x2f
  408f71:	ss adc eax,0x2074bbce
  408f77:	pop    ss
  408f78:	or     al,0x1
  408f7a:	mov    BYTE PTR [ecx],ah
  408f7c:	or     eax,0x46ccdd76
  408f81:	push   ds
  408f82:	stos   DWORD PTR es:[edi],eax
  408f83:	shr    DWORD PTR [edi],cl
  408f85:	mov    eax,ds:0xd1497822
  408f8a:	imul   ebp,ebp,0xc1459ac4
  408f90:	or     eax,0xb729295d
  408f95:	daa    
  408f96:	cmp    ah,BYTE PTR [edi+0x76]
  408f99:	pusha  
  408f9a:	pop    edi
  408f9b:	jmp    0x408fe6
  408f9d:	fs xchg esi,eax
  408f9f:	adc    edi,DWORD PTR [ebx+ecx*1]
  408fa2:	mov    dl,0x16
  408fa4:	jle    0x408ff6
  408fa6:	or     al,BYTE PTR [ebx-0x69]
  408fa9:	jno    0x409000
  408fab:	push   ds
  408fac:	ds inc esp
  408fae:	les    eax,FWORD PTR [ebp-0x3b90045d]
  408fb4:	in     al,0x60
  408fb6:	or     BYTE PTR [eax+0x2c],dh
  408fb9:	retf   0xda66
  408fbc:	xor    eax,0x6cc6077c
  408fc1:	cmp    BYTE PTR [eax+0x56],0x80
  408fc5:	xor    esi,ebx
  408fc7:	push   edi
  408fc8:	sbb    BYTE PTR [edi-0x4bac4df5],ah
  408fce:	fiadd  DWORD PTR [edi-0x320c6c24]
  408fd4:	cmp    DWORD PTR [eax+0x34],ebp
  408fd7:	(bad)  
  408fd8:	push   eax
  408fd9:	adc    BYTE PTR [eax-0x6db71e6b],0xdd
  408fe0:	(bad)  
  408fe1:	or     BYTE PTR [ebx],ah
  408fe3:	mov    edx,0xd62b2662
  408fe8:	imul   BYTE PTR [ecx-0x41213719]
  408fee:	or     DWORD PTR [esi+ecx*4+0x5c],ebp
  408ff2:	mov    bl,0x39
  408ff4:	inc    edi
  408ff5:	jmp    0x4fe133cb
  408ffa:	hlt    
  408ffb:	push   ss
  408ffc:	inc    ecx
  408ffd:	mov    cl,0xf9
  408fff:	cmp    edi,DWORD PTR [ebp+0x1f]
  409002:	sbb    al,0xd6
  409004:	mov    ds:0x3bb36693,al
  409009:	clc    
  40900a:	scas   al,BYTE PTR es:[edi]
  40900b:	jmp    0xef94:0x9b436017
  409012:	sub    eax,0xa3a0e3e8
  409017:	stos   DWORD PTR es:[edi],eax
  409018:	pop    ebx
  409019:	mov    bh,0x48
  40901b:	push   ds
  40901c:	dec    ebp
  40901d:	jae    0x409097
  40901f:	mov    BYTE PTR [eax],ch
  409021:	cmp    al,0xb1
  409023:	aam    0x6
  409025:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409027:	and    BYTE PTR [ebx+0x39],bh
  40902a:	sub    DWORD PTR [eax+edi*1],0xffffffd9
  40902e:	test   eax,0xae1e582e
  409033:	outs   dx,BYTE PTR ds:[esi]
  409034:	push   cs
  409035:	lods   al,BYTE PTR ds:[esi]
  409036:	test   eax,0x6fa4cfaf
  40903b:	xchg   esi,eax
  40903c:	mov    ds:0x932cb810,eax
  409042:	xor    al,0x87
  409044:	jle    0x409008
  409046:	cld    
  409047:	fwait
  409048:	into   
  409049:	jp     0x408fcc
  40904b:	xor    ecx,DWORD PTR [eax+eiz*1-0x39]
  40904f:	sbb    al,0x34
  409051:	dec    esp
  409052:	dec    edx
  409053:	mov    BYTE PTR [ebp-0x2d],0xe7
  409057:	mov    ds:0x75963ca9,eax
  40905c:	push   esp
  40905d:	jle    0x409047
  40905f:	sbb    bh,dl
  409061:	jae    0x409088
  409063:	imul   ebp,DWORD PTR [edi],0xa90d2b90
  409069:	mov    ebx,DWORD PTR [esi]
  40906b:	test   al,0xde
  40906d:	aad    0xa5
  40906f:	mov    eax,0x5f01f2e0
  409074:	rcl    BYTE PTR [edi+0x23],cl
  409077:	fwait
  409078:	jle    0x40907d
  40907a:	stos   BYTE PTR es:[edi],al
  40907b:	call   0x403572f
  409080:	sti    
  409081:	push   edi
  409082:	mov    ebx,0x5cc1b63f
  409087:	dec    esp
  409088:	imul   edx
  40908a:	and    eax,0xe04763d4
  40908f:	xor    esi,ecx
  409091:	push   es
  409092:	pop    esp
  409093:	outs   dx,BYTE PTR ds:[esi]
  409094:	scas   al,BYTE PTR es:[edi]
  409095:	jecxz  0x409058
  409097:	xor    eax,0xec2d22ff
  40909c:	(bad)  
  40909e:	or     DWORD PTR ds:0xd7fd60d,ebx
  4090a4:	test   DWORD PTR [edx-0x46],edx
  4090a7:	and    al,0xf8
  4090a9:	(bad)  
  4090aa:	in     al,0xb6
  4090ac:	repnz ins DWORD PTR es:[edi],dx
  4090ae:	addr16 dec esi
  4090b0:	dec    edx
  4090b1:	xchg   BYTE PTR [edx+0x7b],ah
  4090b4:	sub    DWORD PTR [ebp+eax*4+0x130b0ab2],0x78
  4090bc:	or     eax,0xff4cc984
  4090c1:	in     al,dx
  4090c2:	push   0x9961cbf5
  4090c7:	adc    al,0x9a
  4090c9:	sub    DWORD PTR [ebx+0x521c0e55],esp
  4090cf:	dec    ecx
  4090d0:	push   eax
  4090d1:	mov    WORD PTR [ebp+0x290cd75c],?
  4090d7:	ret    
  4090d8:	(bad)  
  4090d9:	retf   0x582f
  4090dc:	mov    edi,0x70e1465e
  4090e1:	test   BYTE PTR [ebx-0x70],0x69
  4090e5:	and    al,0x51
  4090e7:	add    DWORD PTR [edx],0x6ab50c4b
  4090ed:	call   0xef29:0xf00789d4
  4090f4:	cmp    al,0x93
  4090f6:	sub    BYTE PTR [eax-0x107771a5],ch
  4090fc:	(bad)  
  4090fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090fe:	arpl   WORD PTR [ecx],di
  409100:	mov    bl,0x54
  409102:	out    0x2c,al
  409104:	(bad)  
  409105:	pop    ebp
  409106:	leave  
  409107:	js     0x409186
  409109:	aam    0x45
  40910b:	adc    edi,ecx
  40910d:	jg     0x409127
  40910f:	add    al,0x15
  409111:	adc    eax,0xebdf5a9d
  409116:	arpl   si,cx
  409118:	jb     0x409105
  40911a:	jb     0x409141
  40911c:	add    al,0x6e
  40911e:	inc    edx
  40911f:	push   0x30f43709
  409124:	retf   
  409125:	stos   DWORD PTR es:[edi],eax
  409126:	sub    eax,0x42d67c3e
  40912b:	mov    BYTE PTR [esp+eax*8],dl
  40912e:	add    ecx,DWORD PTR [ebp-0x7e0fb225]
  409134:	retf   0x37ee
  409137:	lods   eax,DWORD PTR ds:[esi]
  409138:	cmp    DWORD PTR [edi-0x59],edx
  40913b:	mov    dl,0xd4
  40913d:	cdq    
  40913e:	add    al,0xe0
  409140:	bound  esi,QWORD PTR [eax-0x631a6368]
  409146:	mov    esi,0x2018fb55
  40914b:	imul   eax,ecx,0xffffffe1
  40914e:	fcos   
  409150:	(bad)  
  409151:	fs in  eax,0x69
  409154:	in     al,dx
  409155:	aas    
  409156:	sub    DWORD PTR [esi+0x4f52d232],esi
  40915c:	scas   eax,DWORD PTR es:[edi]
  40915d:	fisttp QWORD PTR [ecx]
  40915f:	repz std 
  409161:	mov    esp,0xf9e8a2bb
  409166:	cmp    eax,0x117cf55a
  40916b:	jne    0x409168
  40916d:	ja     0x409127
  40916f:	push   0xffffffb4
  409171:	loopne 0x409106
  409173:	inc    esp
  409174:	scas   eax,DWORD PTR es:[edi]
  409175:	and    al,0x8e
  409177:	jnp    0x40911e
  409179:	xor    al,0xd8
  40917b:	or     al,0x6d
  40917d:	imul   edi,esp,0x8
  409180:	push   ecx
  409181:	adc    cl,BYTE PTR [ebp+0x0]
  409184:	add    bl,BYTE PTR [eax]
  409186:	or     bh,al
  409188:	xor    BYTE PTR [edx],dl
  40918a:	jg     0x40911e
  40918c:	(bad)  
  40918d:	mov    ds:0x767795ce,al
  409192:	mov    al,0x1c
  409194:	push   edi
  409195:	ins    BYTE PTR es:[edi],dx
  409196:	mov    ebx,0x65f993ea
  40919b:	jge    0x409180
  40919d:	(bad)  
  40919f:	iret   
  4091a0:	xor    al,0xf3
  4091a2:	cmp    al,0x3
  4091a4:	mov    ?,WORD PTR [esi]
  4091a6:	imul   ebx,ecx,0xcf236787
  4091ac:	outs   dx,BYTE PTR ds:[esi]
  4091ad:	jns    0x4091a9
  4091af:	adc    eax,DWORD PTR [ecx-0x4e]
  4091b2:	pop    ebx
  4091b3:	push   0xffffffb6
  4091b5:	mov    ecx,es
  4091b7:	imul   edi,DWORD PTR [edx+0x53],0xc8c7ad8
  4091be:	out    dx,al
  4091bf:	xor    ebx,DWORD PTR [ebx]
  4091c1:	sahf   
  4091c2:	shl    bl,cl
  4091c4:	xor    al,0x4a
  4091c6:	cmp    eax,0x57763f66
  4091cb:	mov    ss,WORD PTR [ebp+0x7e29f0a3]
  4091d1:	shl    esi,0xae
  4091d4:	ret    0x722c
  4091d7:	sub    esp,DWORD PTR [ebx-0x3c0f8de]
  4091dd:	xor    al,0xfb
  4091df:	push   ecx
  4091e0:	mov    esp,0xc093d0ea
  4091e5:	mov    edi,0xb7fcca4b
  4091ea:	dec    ebp
  4091eb:	cmp    eax,0x8e7e3764
  4091f0:	mov    ebx,0x59ad473a
  4091f5:	adc    dl,dh
  4091f7:	ret    0x4371
  4091fa:	cs pushf 
  4091fc:	sub    al,0xd4
  4091fe:	sbb    eax,esp
  409200:	fsub   DWORD PTR [ebp-0x122c875c]
  409206:	jp     0x4091f2
  409208:	adc    al,0x1e
  40920a:	fimul  WORD PTR [edx-0x48]
  40920d:	(bad)  
  40920e:	cmp    ecx,DWORD PTR [ebx]
  409210:	inc    esp
  409211:	mov    ecx,0xc3c17108
  409216:	int    0xdd
  409218:	sub    al,0x20
  40921a:	mov    ah,0xb7
  40921c:	xchg   ebx,eax
  40921d:	xchg   BYTE PTR [edx-0x3d],cl
  409220:	and    eax,0xf9da07c9
  409225:	nop
  409226:	adc    ch,BYTE PTR [edx+0x74]
  409229:	leave  
  40922a:	xor    bl,dh
  40922c:	and    eax,0x78299c79
  409231:	xchg   ebp,eax
  409232:	push   cs
  409233:	mov    bh,0xe4
  409235:	and    eax,0x8b1f26c7
  40923a:	out    dx,al
  40923b:	sub    al,BYTE PTR [ebx-0xd]
  40923e:	out    0xe7,al
  409240:	aad    0x5
  409242:	dec    edi
  409243:	mov    eax,0xd7b44b5e
  409248:	jp     0x409206
  40924a:	hlt    
  40924b:	cli    
  40924c:	and    bh,BYTE PTR [edi]
  40924e:	out    dx,al
  40924f:	mov    ecx,0xe88ffb27
  409254:	xchg   edx,eax
  409255:	sub    eax,0xde084095
  40925a:	jmp    0x6d76bdb7
  40925f:	adc    al,0xba
  409261:	or     ebx,DWORD PTR [ebx]
  409263:	or     dl,BYTE PTR [eax-0x77]
  409266:	scas   eax,DWORD PTR es:[edi]
  409267:	push   edi
  409268:	(bad)  
  409269:	xor    DWORD PTR [eax-0x28],ebx
  40926c:	or     ch,BYTE PTR [edi+0x61]
  40926f:	gs fmulp st(2),st
  409272:	test   BYTE PTR [edi+0x19],cl
  409275:	jnp    0x409246
  409277:	sbb    dl,0x1c
  40927a:	cs loop 0x40924f
  40927d:	mov    eax,0x3f0c7c41
  409282:	sbb    eax,0xaeb980b
  409287:	das    
  409288:	xchg   edi,eax
  409289:	or     BYTE PTR [eax+0xb3914af],cl
  40928f:	xor    dl,BYTE PTR [ebp+0x21f9b1e0]
  409295:	add    DWORD PTR [eax],0xa879b06c
  40929b:	jecxz  0x4092de
  40929d:	adc    eax,0x31dd9117
  4092a2:	adc    dl,BYTE PTR [ecx+0x1143788f]
  4092a8:	js     0x4092f7
  4092aa:	outs   dx,BYTE PTR ds:[esi]
  4092ab:	mov    ebx,0xc0eb7872
  4092b0:	push   es
  4092b1:	mov    eax,0x39e609c9
  4092b6:	dec    ebp
  4092b7:	sbb    al,0xb9
  4092b9:	call   0x4d5f3b41
  4092be:	std    
  4092bf:	push   0xd80a4458
  4092c4:	inc    esi
  4092c5:	int    0x37
  4092c7:	cld    
  4092c8:	push   edi
  4092c9:	das    
  4092ca:	(bad)  [esi+0x757a0d7c]
  4092d0:	sti    
  4092d1:	es cmc 
  4092d3:	ficom  DWORD PTR [edi+ecx*1]
  4092d6:	mov    bl,BYTE PTR [esi+0x5a]
  4092d9:	arpl   WORD PTR [eax],cx
  4092db:	mov    cl,0x76
  4092dd:	ja     0x409275
  4092df:	das    
  4092e0:	out    dx,eax
  4092e1:	shl    ah,0xe
  4092e4:	jne    0x4092a4
  4092e6:	mul    DWORD PTR ss:[edx+0x70]
  4092ea:	sbb    BYTE PTR [esi+0x12],bh
  4092ed:	shr    BYTE PTR [edx-0x325749eb],cl
  4092f3:	push   edi
  4092f4:	clc    
  4092f5:	shr    BYTE PTR [edi+edx*8],cl
  4092f8:	mov    WORD PTR [ebx],?
  4092fa:	js     0x409336
  4092fc:	and    BYTE PTR [eax-0x71],0x11
  409300:	or     eax,0x38522dda
  409305:	hlt    
  409306:	pop    ebx
  409307:	pusha  
  409308:	dec    esi
  409309:	mov    ah,0xe3
  40930b:	jne    0x409355
  40930d:	xor    BYTE PTR [eax-0x57740114],dh
  409313:	test   al,0xea
  409315:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409316:	xchg   edx,eax
  409317:	adc    DWORD PTR [edx-0x69],ebp
  40931a:	es ds dec edx
  40931d:	out    0x67,eax
  40931f:	clc    
  409320:	gs jp  0x4092f9
  409323:	pushf  
  409324:	mul    BYTE PTR fs:[eax*8-0x63fff33a]
  40932c:	mov    WORD PTR [eax-0x7a39af9f],?
  409332:	push   edx
  409333:	imul   esi,DWORD PTR [edx+0x46],0x9b1bc0bf
  40933a:	les    ebp,FWORD PTR [esi]
  40933c:	test   eax,0xca1fe9b5
  409341:	mov    dl,0x7d
  409343:	test   al,0xd
  409345:	xor    al,0x5e
  409347:	inc    ecx
  409348:	cmp    BYTE PTR cs:[ebp+eax*8+0x770d3263],dl
  409350:	pop    esi
  409351:	sbb    bh,dl
  409353:	shr    dh,1
  409355:	daa    
  409356:	lock arpl WORD PTR [eax+0x2f01ec74],dx
  40935d:	jo     0x4093d2
  40935f:	mov    esi,0x56e31ce5
  409364:	jno    0x409333
  409366:	mov    ecx,0x6d384263
  40936b:	xchg   esp,eax
  40936c:	pop    ss
  40936d:	cld    
  40936e:	loope  0x4093c9
  409370:	and    BYTE PTR [eax+0x1dfc5398],ah
  409376:	nop
  409377:	add    al,0xe4
  409379:	cmp    edi,DWORD PTR [esi+esi*8-0x9]
  40937d:	push   ebx
  40937e:	loopne 0x4093fc
  409380:	mov    ebp,0xe3615d9d
  409385:	jmp    0x73d9:0xa553a233
  40938c:	fistp  WORD PTR ds:0x29a1fe79
  409392:	sbb    esi,DWORD PTR [esp+edx*4+0x71]
  409396:	test   esi,0x184d4030
  40939c:	pop    ebx
  40939d:	jbe    0x4093c3
  40939f:	stos   DWORD PTR es:[edi],eax
  4093a0:	in     al,0xa2
  4093a2:	or     DWORD PTR [ebx-0x28b4d147],edi
  4093a8:	add    al,0x96
  4093aa:	jp     0x40936f
  4093ac:	sub    cl,al
  4093ae:	pop    es
  4093af:	push   esi
  4093b0:	retf   
  4093b1:	xchg   esp,eax
  4093b2:	pop    ebx
  4093b3:	add    BYTE PTR [edx-0x4976c2fa],dh
  4093b9:	adc    eax,0x5b602e96
  4093be:	test   DWORD PTR [ebx],ebx
  4093c0:	pop    ds
  4093c1:	loopne 0x40936e
  4093c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093c4:	test   DWORD PTR [eax],esp
  4093c6:	inc    esi
  4093c7:	pop    esi
  4093c8:	pop    edi
  4093c9:	jg     0x4093fe
  4093cb:	(bad)  
  4093cd:	loopne 0x40939c
  4093cf:	arpl   WORD PTR [edx+0x3045110e],bx
  4093d5:	add    dl,BYTE PTR [edx+0x7fa8a089]
  4093db:	mov    ah,0x86
  4093dd:	jno    0x4093cd
  4093df:	test   eax,0x5cf58e7
  4093e4:	cmp    ebp,ebx
  4093e6:	or     DWORD PTR [edi+0xc],esi
  4093e9:	lahf   
  4093ea:	push   ebx
  4093eb:	idiv   DWORD PTR [ebx-0x23]
  4093ee:	mov    ebx,0xcc11f7e4
  4093f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093f4:	pop    ebx
  4093f5:	addr16 adc al,0x87
  4093f8:	pushf  
  4093f9:	add    al,0xb0
  4093fb:	aaa    
  4093fc:	in     eax,0x73
  4093fe:	xchg   ecx,eax
  4093ff:	test   DWORD PTR [esi+0x668021b6],edx
  409405:	ret    
  409406:	into   
  409407:	rcr    DWORD PTR [ecx+0x73],1
  40940a:	push   es
  40940b:	sbb    al,0xa8
  40940d:	sahf   
  40940e:	mov    ch,0x75
  409410:	scas   al,BYTE PTR es:[edi]
  409411:	xor    esi,DWORD PTR [edi]
  409413:	mov    esi,0xb65eae3f
  409418:	ret    
  409419:	or     BYTE PTR [edx+ebp*2],al
  40941c:	add    eax,0xaa50fd0
  409421:	sub    al,0x96
  409423:	mov    edx,0x80f3dc4b
  409428:	mov    ebx,?
  40942a:	xchg   edi,eax
  40942b:	ficom  DWORD PTR [ebp+0x6caba3e0]
  409431:	cli    
  409432:	push   edi
  409433:	psubb  mm4,mm6
  409436:	popa   
  409437:	lahf   
  409438:	sub    BYTE PTR [esi+ecx*4-0x65cb7b2c],0xd
  409440:	or     DWORD PTR [edi],0x28
  409443:	xchg   BYTE PTR [ebp+eax*2-0x4a],dh
  409447:	sbb    eax,0xb4f2f1f5
  40944c:	shl    BYTE PTR [ecx],cl
  40944e:	dec    eax
  40944f:	pop    ss
  409450:	and    eax,0x2206ec9d
  409455:	rcl    BYTE PTR [edx-0x4d6d9fae],cl
  40945b:	(bad)  
  40945c:	(bad)  
  40945d:	push   edx
  40945e:	and    al,0x62
  409460:	mov    dh,0xca
  409462:	int    0x98
  409464:	outs   dx,DWORD PTR ds:[esi]
  409465:	xchg   edx,eax
  409466:	pop    ebx
  409467:	aaa    
  409468:	pop    ecx
  409469:	push   0xffffffe7
  40946b:	out    0x4f,eax
  40946d:	call   DWORD PTR [esi-0x71]
  409470:	cmp    esp,DWORD PTR [edi-0x65f9aa2]
  409476:	xchg   DWORD PTR [eax-0x3984c893],esi
  40947c:	and    dh,BYTE PTR [ebp-0x5ea2fdf8]
  409482:	xchg   edi,eax
  409483:	sbb    DWORD PTR [ebx+ecx*4+0x479660f2],esi
  40948a:	and    ch,BYTE PTR [edx-0x23b07df9]
  409490:	aad    0x7d
  409492:	test   BYTE PTR [ebx+0x27],cl
  409495:	into   
  409496:	and    al,0x59
  409498:	enter  0xbea5,0xa6
  40949c:	pop    es
  40949d:	jns    0x4094c2
  40949f:	stc    
  4094a0:	rol    ah,cl
  4094a2:	jbe    0x409501
  4094a4:	mov    edx,0x512c5ba9
  4094a9:	mov    BYTE PTR [ebp-0x5a],dh
  4094ac:	enter  0xcdfc,0x73
  4094b0:	xor    al,0x1d
  4094b2:	dec    edi
  4094b3:	cmp    edi,DWORD PTR [esi]
  4094b5:	outs   dx,DWORD PTR ds:[esi]
  4094b6:	xchg   esi,eax
  4094b7:	(bad)  
  4094b8:	fiadd  DWORD PTR [ecx-0x51]
  4094bb:	mov    esp,0x19f2b9d6
  4094c0:	push   ecx
  4094c1:	repnz inc eax
  4094c3:	(bad)  
  4094c4:	popa   
  4094c5:	push   edi
  4094c6:	mov    dl,0x3f
  4094c8:	add    ecx,DWORD PTR [edx+0x4d]
  4094cb:	mov    DWORD PTR [edx-0x63215347],ecx
  4094d1:	jae    0x409546
  4094d3:	call   0x5d99:0x21b11a7a
  4094da:	imul   esp,DWORD PTR [ecx+0x1ccf437d],0xcfed8f48
  4094e4:	add    DWORD PTR [ebx],edi
  4094e6:	jo     0x40952e
  4094e8:	lock xchg ax,ax
  4094eb:	pop    eax
  4094ec:	xchg   ebx,eax
  4094ed:	xor    eax,0x7a094438
  4094f2:	or     al,0xda
  4094f4:	call   FWORD PTR [eax+0x5a5ce3b6]
  4094fa:	cmc    
  4094fb:	pop    esi
  4094fc:	xchg   DWORD PTR [edi+0x1e],esp
  4094ff:	sub    al,0x32
  409501:	clc    
  409502:	out    0x1f,al
  409504:	loopne 0x409535
  409506:	lods   al,BYTE PTR ds:[esi]
  409507:	sbb    dh,BYTE PTR [esi+edx*4-0x24]
  40950b:	push   esp
  40950c:	mov    bh,0x51
  40950e:	mov    ebp,0x99695fc4
  409513:	int    0xdd
  409515:	inc    edx
  409516:	in     al,0xfa
  409518:	ret    
  409519:	pop    edi
  40951a:	aas    
  40951b:	call   0x2990:0xc6a47fd3
  409522:	mov    DWORD PTR ds:0x298e5389,eax
  409528:	data16 (bad) 
  40952a:	imul   ebx,DWORD PTR gs:[esi-0x3d9808f],0xffffff83
  409532:	xchg   ebp,eax
  409533:	fcmovnu st,st(5)
  409535:	mov    edx,0xec3fd813
  40953a:	sub    cl,al
  40953c:	pop    edi
  40953d:	repz xor BYTE PTR [ebx+0x7],cl
  409541:	xor    al,0x58
  409543:	mov    edx,0x78dabaf5
  409548:	push   ebp
  409549:	push   cs
  40954a:	outs   dx,BYTE PTR ds:[esi]
  40954b:	xor    eax,0x47c505a2
  409550:	addr16 mov ds:0x2edf,al
  409554:	into   
  409555:	(bad)  
  409556:	ss mov esp,0x16b8fb26
  40955c:	adc    eax,DWORD PTR [ebx]
  40955e:	fsubp  st(7),st
  409560:	inc    esp
  409561:	xor    al,0x73
  409563:	add    DWORD PTR [edx-0xd],ecx
  409566:	xchg   edx,eax
  409567:	push   ebx
  409568:	pop    edi
  409569:	xchg   DWORD PTR fs:[edi-0x6a2782d5],eax
  409570:	push   es
  409571:	inc    edi
  409572:	iret   
  409573:	adc    bl,ch
  409575:	sbb    bl,BYTE PTR [esi]
  409577:	push   ecx
  409578:	push   esp
  409579:	sbb    eax,0x45fecad7
  40957e:	push   edi
  40957f:	sub    edi,DWORD PTR [eax-0x3e]
  409582:	inc    esi
  409583:	(bad)  
  409584:	mov    edx,0xf7e460ad
  409589:	or     al,0xf6
  40958b:	and    ecx,DWORD PTR [edx+esi*8]
  40958e:	test   eax,0xd560ff3c
  409593:	(bad)  
  409594:	scas   eax,DWORD PTR es:[edi]
  409595:	(bad)  
  409596:	data16 lods al,BYTE PTR ds:[esi]
  409598:	inc    ebx
  409599:	enter  0xcbdb,0xfa
  40959d:	retf   0xce14
  4095a0:	jnp    0x4095d6
  4095a2:	xchg   edx,eax
  4095a3:	inc    ebp
  4095a4:	add    al,0xf1
  4095a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095a7:	jne    0x4095dd
  4095a9:	mov    eax,0x3967b74b
  4095ae:	cdq    
  4095af:	lea    eax,[edi]
  4095b1:	retf   
  4095b2:	popf   
  4095b3:	ss sahf 
  4095b5:	mov    al,0x62
  4095b7:	or     dh,BYTE PTR ds:0x6cb0e1ae
  4095bd:	cmp    BYTE PTR [ecx+ebp*1+0x2c],cl
  4095c1:	clc    
  4095c2:	jecxz  0x409580
  4095c4:	in     eax,0x19
  4095c6:	jl     0x40956a
  4095c8:	pushf  
  4095c9:	rcl    BYTE PTR [edx-0x4a],0x37
  4095cd:	inc    ebp
  4095ce:	lea    edx,[ebx]
  4095d0:	jnp    0x409635
  4095d2:	mov    bl,0xfe
  4095d4:	cmc    
  4095d5:	gs inc edi
  4095d7:	ins    DWORD PTR es:[edi],dx
  4095d8:	cld    
  4095d9:	adc    BYTE PTR [edx+0x19],dh
  4095dc:	or     al,0xc6
  4095de:	lock ins DWORD PTR es:[edi],dx
  4095e0:	xchg   ecx,eax
  4095e1:	ins    DWORD PTR es:[edi],dx
  4095e2:	ins    DWORD PTR es:[edi],dx
  4095e3:	cmp    DWORD PTR [edi+0x4571f66d],esi
  4095e9:	mov    ds:0xc4e48785,eax
  4095ee:	dec    edx
  4095ef:	or     bh,BYTE PTR [ecx-0x62faf63c]
  4095f5:	xchg   edi,eax
  4095f6:	setb   bh
  4095f9:	sbb    bl,BYTE PTR [eax+0x1c73712]
  4095ff:	fnstcw WORD PTR [bp+di-0x19]
  409603:	jo     0x409627
  409605:	loope  0x40967f
  409607:	rcr    DWORD PTR [esp+ebp*4-0x5b51234f],0xe1
  40960f:	or     BYTE PTR [edx],bl
  409611:	inc    eax
  409612:	retf   0x2824
  409615:	loope  0x409674
  409617:	popa   
  409618:	test   BYTE PTR [ebx],0x68
  40961b:	mov    dl,0x9d
  40961d:	sahf   
  40961e:	fmul   QWORD PTR [esp+edx*4]
  409621:	xchg   edi,eax
  409622:	cld    
  409623:	aas    
  409624:	mov    ah,0xa7
  409626:	out    0xdb,al
  409628:	mov    ebx,0x350b3b04
  40962d:	pop    eax
  40962e:	(bad)  
  40962f:	daa    
  409630:	add    esi,ebp
  409632:	cs xchg edi,eax
  409634:	cmp    BYTE PTR [ecx-0x32],0xbd
  409638:	sub    eax,0x86b87f7a
  40963d:	mov    ds:0xb460c39f,al
  409642:	retf   0xf1bb
  409645:	int    0x4c
  409647:	fstp   QWORD PTR [ecx+0x5d99de4c]
  40964d:	mov    ch,0x32
  40964f:	out    0x74,al
  409651:	add    DWORD PTR [esp+edi*8],ebx
  409654:	cmc    
  409655:	mov    cs,esi
  409657:	mov    edx,0x5a7a906c
  40965c:	adc    edx,DWORD PTR [edi]
  40965e:	dec    esi
  40965f:	sbb    eax,0x41bab117
  409664:	into   
  409665:	fs or  dh,al
  409668:	sub    eax,0x5358fdd1
  40966d:	push   ss
  40966e:	aaa    
  40966f:	fmul   QWORD PTR [esi+0x20]
  409672:	iret   
  409673:	fnstsw WORD PTR [edi+esi*4+0x42c75edb]
  40967a:	sub    ecx,DWORD PTR [edx+0x93f6046]
  409680:	add    BYTE PTR [ebx+0x2f],ch
  409683:	push   0xea135e6b
  409688:	mov    ?,WORD PTR [eax+edx*4]
  40968b:	push   esi
  40968c:	in     eax,dx
  40968d:	addr16 ds pop esp
  409690:	pusha  
  409691:	pop    edx
  409692:	imul   eax,DWORD PTR [eax+0x3e007f1e],0xdee48727
  40969c:	jb     0x40966c
  40969e:	xchg   ecx,eax
  40969f:	mov    al,ds:0x1895fbce
  4096a4:	mov    bl,0xd0
  4096a6:	cwde   
  4096a7:	imul   ebx,DWORD PTR [edi+0x288b69eb],0xa2282dfb
  4096b1:	les    edx,FWORD PTR [eax+0x652b1b61]
  4096b7:	push   edx
  4096b8:	es sbb eax,0xa59b7263
  4096be:	sub    ah,al
  4096c0:	sub    al,0x63
  4096c2:	adc    edi,ecx
  4096c4:	jnp    0x4096d3
  4096c6:	or     al,0xa4
  4096c8:	repz loop 0x409689
  4096cb:	ins    DWORD PTR es:[edi],dx
  4096cc:	or     BYTE PTR [edx+0x21],cl
  4096cf:	dec    esi
  4096d0:	in     eax,0x7c
  4096d2:	(bad)  [edi+0x56]
  4096d5:	cli    
  4096d6:	jae    0x4096d8
  4096d8:	jbe    0x4096a8
  4096da:	ins    DWORD PTR es:[edi],dx
  4096db:	cs xor ebx,esp
  4096de:	push   ebx
  4096df:	out    0x46,eax
  4096e1:	xchg   esp,eax
  4096e2:	shl    dh,1
  4096e4:	pop    esi
  4096e5:	jl     0x40967c
  4096e7:	jle    0x4096e5
  4096e9:	(bad)  
  4096ea:	fisub  DWORD PTR [ebx-0xf94d8a8]
  4096f0:	push   esi
  4096f1:	inc    edx
  4096f2:	dec    esi
  4096f3:	enter  0x278b,0xeb
  4096f7:	push   0x6cdd6781
  4096fc:	mov    esi,0xab9def7b
  409701:	sbb    cl,bh
  409703:	mov    ch,BYTE PTR [ecx+ebx*1]
  409706:	test   eax,0xeb705e92
  40970b:	mov    eax,0xb38dcb29
  409710:	push   es
  409711:	ja     0x4096bc
  409713:	pop    ds
  409714:	sbb    eax,0x59672dd4
  409719:	inc    esi
  40971a:	and    eax,0x9fecef71
  40971f:	mov    bh,0x81
  409721:	fild   QWORD PTR [edi]
  409723:	imul   esi
  409725:	mov    bh,0x3c
  409727:	inc    esp
  409728:	add    dl,al
  40972a:	inc    ecx
  40972b:	cwde   
  40972c:	dec    eax
  40972d:	jge    0x40971d
  40972f:	jbe    0x409791
  409731:	pop    ss
  409732:	jne    0x4096da
  409734:	inc    ebx
  409735:	dec    eax
  409736:	dec    edi
  409737:	adc    BYTE PTR [eax+0x16],dl
  40973a:	fs mov ?,ebp
  40973d:	popf   
  40973e:	sbb    bl,cl
  409740:	add    BYTE PTR [edx+0x31],bl
  409743:	pop    edx
  409744:	popf   
  409745:	lock adc eax,0x78bec5ae
  40974b:	fisub  WORD PTR [ebx-0x23b1c479]
  409751:	add    BYTE PTR [ebp+0x7a],cl
  409754:	les    ebp,FWORD PTR [ecx]
  409756:	jmp    0x2c092758
  40975b:	jle    0x4096f4
  40975d:	lock cli 
  40975f:	daa    
  409760:	jo     0x40977e
  409762:	jno    0x409762
  409764:	in     al,0xc8
  409766:	pusha  
  409767:	add    esp,eax
  409769:	add    bh,BYTE PTR [ebx]
  40976b:	dec    ecx
  40976c:	mov    eax,ds:0xb1537c58
  409771:	push   0xffffffcc
  409773:	addr16 test al,0xbd
  409776:	or     esi,DWORD PTR [eax-0x4a]
  409779:	xlat   BYTE PTR ds:[ebx]
  40977a:	xor    DWORD PTR [edi],0x15
  40977d:	mov    WORD PTR [esi-0x4598cbb2],es
  409783:	std    
  409784:	add    eax,0xaf7d265
  409789:	rcr    dl,0xb8
  40978c:	xchg   ecx,edx
  40978e:	xchg   edi,eax
  40978f:	mov    bh,0x79
  409791:	clc    
  409792:	sti    
  409793:	push   ss
  409794:	or     DWORD PTR [ebx],ebx
  409796:	xor    ebp,edx
  409798:	sbb    DWORD PTR [edi+0x33],edi
  40979b:	or     BYTE PTR [ebp-0x3c],dh
  40979e:	sub    al,BYTE PTR [edx+0x3f]
  4097a1:	jns    0x409819
  4097a3:	(bad)  
  4097a4:	je     0x40973c
  4097a6:	ror    ebp,1
  4097a8:	jne    0x409807
  4097aa:	jns    0x4097de
  4097ac:	push   ecx
  4097ad:	push   eax
  4097ae:	cwde   
  4097af:	cmp    eax,0x9d5a44cb
  4097b4:	clc    
  4097b5:	push   esp
  4097b6:	mov    edx,0x23838d1
  4097bb:	adc    edx,DWORD PTR [ebp-0x19]
  4097be:	fcmovbe st,st(1)
  4097c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097c1:	repnz add eax,edi
  4097c4:	pop    edi
  4097c5:	jbe    0x40976f
  4097c7:	cmc    
  4097c8:	bnd je 0x409824
  4097cb:	(bad)  
  4097cc:	stc    
  4097cd:	aas    
  4097ce:	add    BYTE PTR [ebx-0x727cad39],cl
  4097d4:	scas   al,BYTE PTR es:[edi]
  4097d5:	(bad)  
  4097d6:	push   edx
  4097d7:	jae    0x409773
  4097d9:	or     DWORD PTR [esp+edx*2+0x74f6f52f],esi
  4097e0:	push   eax
  4097e1:	pop    esi
  4097e2:	dec    BYTE PTR [esi]
  4097e4:	je     0x409773
  4097e6:	cmp    eax,0x720ca6b
  4097eb:	xchg   ecx,eax
  4097ec:	ds dec esi
  4097ee:	stos   BYTE PTR es:[edi],al
  4097ef:	scas   eax,DWORD PTR es:[edi]
  4097f0:	add    eax,0xb8404b54
  4097f5:	ret    
  4097f6:	loope  0x4097a8
  4097f8:	push   esi
  4097f9:	add    BYTE PTR [edx],bl
  4097fb:	out    dx,eax
  4097fc:	jne    0x4097a3
  4097fe:	inc    ecx
  4097ff:	fistp  QWORD PTR [eax+eiz*4+0x35]
  409803:	mov    esp,0xd711e48b
  409808:	push   0x75e9a753
  40980d:	sub    edx,DWORD PTR [edx-0x78]
  409810:	inc    edi
  409811:	inc    edi
  409812:	pop    ss
  409813:	pop    ebx
  409814:	(bad)  
  409815:	jne    0x409872
  409817:	icebp  
  409818:	xchg   edi,eax
  409819:	jge    0x409858
  40981b:	test   BYTE PTR [ebp+0x5a82d3a2],dl
  409821:	cmp    DWORD PTR ds:0x8e372a0c,edx
  409827:	lods   eax,DWORD PTR ds:[esi]
  409828:	call   0xd20755c3
  40982d:	retf   
  40982e:	push   ebp
  40982f:	scas   eax,DWORD PTR es:[edi]
  409830:	push   ebp
  409831:	clc    
  409832:	mov    bl,0x51
  409834:	lock mov ebx,0x44c82474
  40983a:	call   0x14427890
  40983f:	cmp    ebx,ebx
  409841:	or     al,0x85
  409843:	cmp    bh,bl
  409845:	ja     0x4097e5
  409847:	adc    ebx,eax
  409849:	or     al,0x98
  40984b:	loopne 0x40981a
  40984d:	test   al,0xb4
  40984f:	out    0x82,al
  409851:	sbb    eax,0x109d2434
  409856:	outs   dx,DWORD PTR ds:[esi]
  409857:	adc    DWORD PTR [eax+ecx*4-0xe1e0778],0x43a6e879
  409862:	scas   eax,DWORD PTR es:[edi]
  409863:	mov    al,0x21
  409865:	cli    
  409866:	inc    ebx
  409867:	adc    dl,BYTE PTR [esi+0x72]
  40986a:	aad    0x28
  40986c:	adc    eax,0x8a71fa32
  409871:	xchg   esp,eax
  409872:	test   al,0x64
  409874:	sub    eax,0xb058de73
  409879:	scas   eax,DWORD PTR es:[edi]
  40987a:	dec    ecx
  40987b:	dec    ecx
  40987c:	cs imul dh
  40987f:	sub    DWORD PTR [eax+eax*8],esp
  409882:	shl    dh,0xee
  409885:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409886:	lea    esi,[ecx+edi*4]
  409889:	mov    eax,0xa618ddcc
  40988e:	mov    eax,ds:0x27915d25
  409893:	(bad)  
  409894:	es inc ebp
  409896:	pshufw mm2,QWORD PTR [esi],0x2c
  40989a:	push   ecx
  40989b:	push   0xffffffb4
  40989d:	pop    es
  40989e:	das    
  40989f:	xchg   ebx,eax
  4098a0:	mov    edx,0x4e1fb58f
  4098a5:	jge    0x4098e1
  4098a7:	rcl    DWORD PTR [eax+edi*1-0x3eda4527],1
  4098ae:	pop    edx
  4098af:	(bad)  
  4098b0:	cmp    bh,BYTE PTR [edx-0x51]
  4098b3:	xor    al,0x7
  4098b5:	stos   BYTE PTR es:[edi],al
  4098b6:	jecxz  0x409844
  4098b8:	xchg   esp,eax
  4098b9:	icebp  
  4098ba:	jg     0x409939
  4098bc:	and    al,0x5b
  4098be:	sbb    eax,0x6c44a5f5
  4098c3:	retf   0x59dd
  4098c6:	mov    dh,0xc9
  4098c8:	aaa    
  4098c9:	fucomip st,st(0)
  4098cb:	xor    BYTE PTR [ebx+0x5257d8d1],dl
  4098d1:	rcr    al,cl
  4098d3:	dec    ebx
  4098d4:	jp     0x40991f
  4098d6:	test   eax,0x9d11d490
  4098db:	mov    cl,0x2
  4098dd:	pop    esp
  4098de:	aad    0xd6
  4098e0:	mov    eax,ds:0x482232ce
  4098e5:	inc    edx
  4098e6:	fimul  DWORD PTR [esi-0x1f]
  4098e9:	xchg   edi,eax
  4098ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098eb:	xchg   al,dl
  4098ed:	cli    
  4098ee:	pop    esp
  4098ef:	or     BYTE PTR [ecx-0x3c],bl
  4098f2:	int    0x9f
  4098f4:	outs   dx,BYTE PTR ds:[esi]
  4098f5:	rcr    BYTE PTR [edx],1
  4098f7:	sub    al,0xf0
  4098f9:	enter  0xfc49,0x9f
  4098fd:	outs   dx,DWORD PTR ds:[esi]
  4098fe:	mov    edi,0x5806b01e
  409903:	sbb    al,0x43
  409905:	xor    BYTE PTR [ecx],ch
  409907:	ret    0x7118
  40990a:	inc    edx
  40990b:	xchg   ebp,eax
  40990c:	scas   al,BYTE PTR es:[edi]
  40990d:	es xchg edi,eax
  40990f:	fdivr  DWORD PTR [ebx+0x5b]
  409912:	out    dx,eax
  409913:	xchg   ecx,eax
  409914:	and    DWORD PTR [ebp+ebx*4-0x53],edx
  409918:	mov    ebx,0x2c0bf118
  40991d:	dec    ebp
  40991e:	and    BYTE PTR [edi],dh
  409920:	fisubr WORD PTR [esi]
  409922:	call   DWORD PTR [eax-0x34]
  409925:	in     eax,0xfc
  409927:	iret   
  409928:	sub    al,0x47
  40992a:	push   eax
  40992b:	inc    ebx
  40992d:	sahf   
  40992e:	retf   0x5680
  409931:	jp     0x4098eb
  409933:	push   esp
  409934:	xor    DWORD PTR [ecx],ecx
  409936:	popf   
  409937:	mov    DWORD PTR [eax-0x5c3ac48f],esi
  40993d:	add    al,0xcf
  40993f:	in     al,0xb7
  409941:	jno    0x40994e
  409943:	mov    edi,0xf89701a2
  409948:	(bad)  
  409949:	pop    ebx
  40994a:	push   ss
  40994b:	sbb    ah,dh
  40994d:	cmc    
  40994e:	mov    ecx,0xdd7b2ad4
  409953:	daa    
  409954:	push   cs
  409955:	sub    dh,BYTE PTR [ecx-0x2a]
  409958:	test   edx,eax
  40995a:	add    ch,BYTE PTR [ecx]
  40995c:	es leave 
  40995e:	outs   dx,DWORD PTR ds:[esi]
  40995f:	fimul  WORD PTR [ecx+0x475ffdd6]
  409965:	call   0x34e6:0x7287eacf
  40996c:	and    ah,BYTE PTR [ebx+0xe3a78a3]
  409972:	xchg   edi,eax
  409973:	(bad)  
  409974:	clc    
  409975:	pop    ebx
  409976:	adc    BYTE PTR [eax+0x613e2bc4],al
  40997c:	aam    0xba
  40997e:	hlt    
  40997f:	pusha  
  409980:	xor    eax,0x9bd59ce0
  409985:	mov    bl,0x53
  409987:	nop
  409988:	cld    
  409989:	mov    ebp,0x9ac024bb
  40998e:	xchg   edi,eax
  40998f:	stc    
  409990:	mov    eax,DWORD PTR [ebx-0x38]
  409993:	jmp    0x1d88:0xceefb7ba
  40999a:	in     al,dx
  40999b:	mov    ds:0x14eca8c6,al
  4099a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099a1:	inc    edx
  4099a2:	sub    al,BYTE PTR ds:0x5322c691
  4099a8:	dec    ecx
  4099a9:	jnp    0x40992c
  4099ab:	mov    ebx,0xf558181f
  4099b0:	or     bl,BYTE PTR [eax+eax*2]
  4099b3:	and    al,0xb2
  4099b5:	xor    DWORD PTR [eax],esi
  4099b7:	pop    ebx
  4099b8:	or     ebx,DWORD PTR [ebp+0x7eeaea90]
  4099be:	fild   WORD PTR [ebx]
  4099c0:	xchg   ecx,eax
  4099c1:	mov    ds:0x83b56d79,eax
  4099c6:	push   ebx
  4099c7:	mov    ecx,0x5b76749a
  4099cc:	in     al,dx
  4099cd:	xor    cl,BYTE PTR [eax-0x5c]
  4099d0:	and    bh,BYTE PTR [eax]
  4099d2:	ret    
  4099d3:	ds add eax,0x90ff6a91
  4099d9:	lahf   
  4099da:	pop    ebx
  4099db:	mov    esi,0x20f89f65
  4099e0:	xor    ebp,DWORD PTR [ecx-0x2e69bd8f]
  4099e6:	scas   al,BYTE PTR es:[edi]
  4099e7:	inc    esp
  4099e8:	sbb    ecx,eax
  4099ea:	mov    bl,0x2f
  4099ec:	aas    
  4099ed:	cmp    ebx,esp
  4099ef:	lahf   
  4099f0:	lea    edi,ds:[ebp+0x6a]
  4099f4:	cmp    al,0x82
  4099f6:	fcom   QWORD PTR [esi+edi*2-0xdb6eab6]
  4099fd:	loope  0x4099bf
  4099ff:	xchg   ebp,eax
  409a00:	xchg   ecx,eax
  409a01:	test   BYTE PTR [esi+0x4a12148b],bh
  409a07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a08:	dec    esi
  409a09:	in     eax,0x48
  409a0b:	test   eax,0x239f111b
  409a10:	adc    BYTE PTR [eax+eiz*8-0x4cbc84ca],ch
  409a17:	dec    ebp
  409a18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a19:	push   ss
  409a1a:	adc    dh,BYTE PTR [eax+ecx*4-0x6b6c6fc6]
  409a21:	xor    edx,ebp
  409a23:	ja     0x4099be
  409a25:	and    BYTE PTR ds:[esi+ebp*2+0x1fe585ad],bl
  409a2d:	xchg   esp,eax
  409a2e:	inc    ecx
  409a2f:	mov    WORD PTR [ebx-0x621b53a1],fs
  409a35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a36:	ja     0x409a60
  409a38:	cmc    
  409a39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a3a:	mov    ah,0xf0
  409a3c:	call   0xdce0:0x15389acb
  409a43:	sub    DWORD PTR [ebx],0xfffffff8
  409a46:	jo     0x409a97
  409a48:	fcomp  st(4)
  409a4a:	call   0xbed1:0xb7c59fb2
  409a51:	scas   al,BYTE PTR es:[edi]
  409a52:	mov    cs,ebx
  409a54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a55:	mov    ?,WORD PTR gs:[ecx]
  409a58:	sbb    edx,ebp
  409a5a:	pop    edx
  409a5b:	adc    esi,DWORD PTR [eax-0x9]
  409a5e:	test   edi,0xa7d5d313
  409a64:	addr16 pop esi
  409a66:	sbb    eax,0x51ce24eb
  409a6b:	push   ss
  409a6c:	jo     0x409a8d
  409a6e:	stos   BYTE PTR es:[edi],al
  409a6f:	lahf   
  409a70:	mov    esi,fs
  409a72:	pop    ebx
  409a73:	scas   al,BYTE PTR es:[edi]
  409a74:	test   edi,eax
  409a76:	mov    ds:0xb91f9a8d,al
  409a7b:	add    edi,DWORD PTR [ecx-0x7f]
  409a7e:	adc    al,0x48
  409a80:	fisttp QWORD PTR [edi-0x21]
  409a83:	add    esi,DWORD PTR [ebp-0x144dcef9]
  409a89:	outs   dx,BYTE PTR ds:[esi]
  409a8a:	pop    ds
  409a8b:	popa   
  409a8c:	xlat   BYTE PTR ds:[ebx]
  409a8d:	jecxz  0x409b02
  409a8f:	push   cs
  409a90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a91:	in     eax,0xbe
  409a93:	jo     0x409a9c
  409a95:	lahf   
  409a96:	cs (bad) 
  409a99:	ss push edi
  409a9c:	js     0x409aa1
  409a9e:	call   0x33878c8b
  409aa3:	push   ebx
  409aa4:	cmp    eax,0xebbb418d
  409aa9:	dec    edx
  409aaa:	inc    ebp
  409aab:	imul   eax,DWORD PTR [esi-0x7d1e182f],0x89c35694
  409ab5:	xor    ebp,DWORD PTR [ebx+0x1b]
  409ab8:	xchg   esp,eax
  409ab9:	(bad)  
  409abb:	push   ss
  409abc:	push   esi
  409abd:	mov    ds:0x8c0176b4,eax
  409ac2:	(bad)  
  409ac3:	test   al,0x12
  409ac5:	aad    0x9f
  409ac7:	push   edi
  409ac8:	xchg   esp,eax
  409ac9:	push   eax
  409aca:	lahf   
  409acb:	jne    0x409a50
  409acd:	scas   al,BYTE PTR es:[edi]
  409ace:	jmp    FWORD PTR [edx+0x45]
  409ad1:	push   es
  409ad2:	ret    
  409ad3:	imul   eax,DWORD PTR [ecx-0x603dc553],0x1b713187
  409add:	sub    al,0x4f
  409adf:	jae    0x409af0
  409ae1:	(bad)  [edi+0x9]
  409ae4:	dec    esp
  409ae5:	or     DWORD PTR [ebx+eax*4],esi
  409ae8:	fucom  st(5)
  409aea:	cmp    bl,BYTE PTR [edx+0x335c2de5]
  409af0:	enter  0x4926,0xa0
  409af4:	cmp    BYTE PTR [edx-0x156c4435],bl
  409afa:	mov    DWORD PTR [ebp+0x5e0daef7],eax
  409b00:	xchg   BYTE PTR [bp+si+0x6853],dh
  409b05:	dec    BYTE PTR [edi+0x5abe8c01]
  409b0b:	push   ss
  409b0c:	push   ebp
  409b0d:	jo     0x409b2e
  409b0f:	out    0x45,eax
  409b11:	xchg   ecx,esi
  409b13:	js     0x409b52
  409b15:	sar    cl,1
  409b17:	gs pop ss
  409b19:	dec    esi
  409b1a:	test   eax,0xc0b2a38f
  409b1f:	ror    ebp,0x97
  409b22:	mov    esp,0x8b0cd353
  409b27:	cmp    ebx,DWORD PTR [ebp*2-0x783eba0a]
  409b2e:	add    ecx,DWORD PTR [edi+0x371e07ec]
  409b34:	aad    0x79
  409b36:	rol    DWORD PTR [edx],cl
  409b38:	inc    esi
  409b39:	fmul   QWORD PTR fs:[ebp+0x4d]
  409b3d:	add    al,0xc
  409b3f:	add    al,0x1e
  409b41:	add    al,0x1c
  409b43:	mov    al,0xc6
  409b45:	hlt    
  409b46:	cli    
  409b47:	stc    
  409b48:	inc    edx
  409b49:	imul   eax,DWORD PTR [ebx+0xf9257f5],0x10
  409b50:	clc    
  409b51:	mov    ss,WORD PTR [eax+edx*2+0x5d]
  409b55:	fsub   QWORD PTR [edx+0x42daaf5e]
  409b5b:	push   0x4f90d24a
  409b60:	xchg   ebp,eax
  409b61:	or     dl,BYTE PTR [ebx-0x71]
  409b64:	pop    edx
  409b65:	rol    cl,1
  409b67:	mov    dl,0x68
  409b69:	and    dl,cl
  409b6b:	(bad)  
  409b6d:	shl    DWORD PTR [eax-0x78],cl
  409b70:	jmp    0xda52:0xa95ad53e
  409b77:	dec    eax
  409b78:	or     dl,dh
  409b7a:	retf   
  409b7b:	cmp    al,0xa4
  409b7d:	and    DWORD PTR [eax],edi
  409b7f:	ins    DWORD PTR es:[edi],dx
  409b80:	xor    eax,0xb296ba19
  409b85:	push   esp
  409b86:	mul    ecx
  409b88:	out    dx,al
  409b89:	lds    ebp,FWORD PTR [edx-0x7]
  409b8c:	xchg   esi,eax
  409b8d:	jb     0x409b25
  409b8f:	mov    ah,0xd0
  409b91:	push   esp
  409b92:	pop    es
  409b93:	inc    ebx
  409b94:	xor    edi,edi
  409b96:	or     al,0xbf
  409b98:	xchg   ebp,eax
  409b99:	jne    0x409bb2
  409b9b:	inc    ebp
  409b9c:	xchg   edx,eax
  409b9d:	adc    eax,0x77ea22d4
  409ba2:	pop    es
  409ba3:	loop   0x409ba2
  409ba5:	loopne 0x409bf1
  409ba7:	outs   dx,DWORD PTR ds:[esi]
  409ba8:	xlat   BYTE PTR ds:[ebx]
  409ba9:	jne    0x409be4
  409bab:	push   ss
  409bac:	jle    0x409bda
  409bae:	mov    fs,esp
  409bb0:	shl    DWORD PTR [esi+0x20],1
  409bb3:	lahf   
  409bb4:	or     al,0xcf
  409bb6:	mov    al,BYTE PTR [ebp+0x1ba2c9ff]
  409bbc:	push   ecx
  409bbd:	dec    ecx
  409bbe:	mov    ebx,0x6b9f3029
  409bc3:	dec    esp
  409bc4:	rcr    BYTE PTR [ecx+0x69],1
  409bc7:	mov    BYTE PTR [esi],al
  409bc9:	mov    edx,0x43502296
  409bce:	inc    edi
  409bcf:	loope  0x409c31
  409bd1:	sbb    DWORD PTR [eax-0x65edf42f],0xcec3db5e
  409bdb:	fs pop esp
  409bdd:	dec    ecx
  409bde:	cli    
  409bdf:	xor    eax,0xcb628992
  409be4:	(bad)  
  409be5:	jns    0x409ba6
  409be7:	xor    DWORD PTR [edi],esp
  409be9:	mov    WORD PTR [eax],gs
  409beb:	addr16 out 0xb,eax
  409bee:	outs   dx,BYTE PTR ds:[esi]
  409bef:	mov    ebx,0xcf8f86a2
  409bf4:	inc    esp
  409bf5:	cli    
  409bf6:	test   DWORD PTR [esi+0x3c],0xa5165c69
  409bfd:	pop    ebx
  409bfe:	mov    dh,0xd0
  409c00:	in     eax,dx
  409c01:	jnp    0x409c48
  409c03:	ds jecxz 0x409c6f
  409c06:	jbe    0x409bb2
  409c08:	hlt    
  409c09:	retf   0xa448
  409c0c:	pop    edx
  409c0d:	mov    edi,0x4776af05
  409c12:	jle    0x409c14
  409c14:	ss dec esp
  409c16:	rcl    DWORD PTR [ecx],1
  409c18:	jne    0x409c91
  409c1a:	push   cs
  409c1b:	push   ss
  409c1c:	sub    al,0xfd
  409c1e:	jp     0x409bc5
  409c20:	(bad)  
  409c21:	xlat   BYTE PTR ds:[ebx]
  409c22:	mov    eax,ds:0x9843fd7b
  409c27:	jge    0x409bd0
  409c29:	adc    bh,BYTE PTR [edx+0x709077df]
  409c2f:	sbb    bl,BYTE PTR [ebx]
  409c31:	ins    BYTE PTR es:[edi],dx
  409c32:	or     al,0xaf
  409c34:	cdq    
  409c35:	push   edx
  409c36:	cs retf 
  409c38:	(bad)  
  409c39:	cdq    
  409c3a:	xor    dh,BYTE PTR [eax-0x2a]
  409c3d:	hlt    
  409c3e:	std    
  409c3f:	mov    eax,0x4c36c7b3
  409c44:	and    DWORD PTR [edx+0x290b6f6f],ebp
  409c4a:	out    dx,al
  409c4b:	add    eax,0x9762bd94
  409c50:	inc    ebx
  409c51:	mov    cs,WORD PTR [ecx]
  409c53:	fs dec esi
  409c55:	aaa    
  409c56:	loopne 0x409cc0
  409c58:	push   ebx
  409c59:	jne    0x409c57
  409c5b:	inc    eax
  409c5c:	in     eax,0x21
  409c5e:	or     ebp,eax
  409c60:	jge    0x409c1f
  409c62:	stos   DWORD PTR es:[edi],eax
  409c63:	cmp    DWORD PTR [eax+0x5876568b],edi
  409c69:	repnz aam 0xb5
  409c6c:	enter  0x8b63,0x53
  409c70:	loopne 0x409cb5
  409c72:	lods   al,BYTE PTR ds:[esi]
  409c73:	sub    BYTE PTR [edx-0x2b],0x5f
  409c77:	adc    BYTE PTR [edx+ebx*8-0x68],ah
  409c7b:	jp     0x409c36
  409c7d:	aaa    
  409c7e:	add    eax,0xc1b9991d
  409c83:	adc    eax,0x2e7f95f
  409c88:	inc    ebx
  409c89:	pusha  
  409c8a:	ror    ebp,0xb1
  409c8d:	sbb    BYTE PTR [ecx],0x2f
  409c90:	xor    eax,0xcddd7883
  409c95:	sbb    al,0xf3
  409c97:	mov    DWORD PTR [edx],edx
  409c99:	jne    0x409c2c
  409c9b:	jg     0x409c69
  409c9d:	mov    ds,eax
  409c9f:	xchg   ebp,eax
  409ca0:	ins    BYTE PTR es:[edi],dx
  409ca1:	add    eax,0x21232339
  409ca6:	sub    dh,BYTE PTR [esi]
  409ca8:	push   eax
  409ca9:	mov    ecx,0x469d07cc
  409cae:	adc    cl,ah
  409cb0:	(bad)  
  409cb1:	cmp    eax,0xbb658aea
  409cb6:	add    ch,bl
  409cb8:	ins    BYTE PTR es:[edi],dx
  409cb9:	in     eax,0x3e
  409cbb:	stc    
  409cbc:	mov    eax,ds:0x432ef658
  409cc1:	retf   0xb00d
  409cc4:	lds    esp,FWORD PTR [ebx+edi*8-0x74]
  409cc8:	call   0x4126:0xe0d25b9
  409ccf:	and    ecx,edi
  409cd1:	call   0x77160c65
  409cd6:	ret    0xf6ab
  409cd9:	mov    ebp,DWORD PTR [eax]
  409cdb:	pusha  
  409cdc:	imul   eax,DWORD PTR fs:[ebp+0x13],0x1b
  409ce1:	pop    ds
  409ce2:	(bad)  
  409ce3:	jmp    0xb5d:0xb7a7cac2
  409cea:	sbb    DWORD PTR [ebx],esp
  409cec:	ret    0x124b
  409cef:	dec    ebp
  409cf0:	out    0x53,al
  409cf2:	retf   
  409cf3:	arpl   WORD PTR [esi],dx
  409cf5:	ds popa 
  409cf7:	sar    esi,1
  409cf9:	fist   WORD PTR [ebx+ecx*8+0x4be408a4]
  409d00:	cs add bl,bl
  409d03:	pusha  
  409d04:	js     0x409cc1
  409d06:	lea    eax,[edx+esi*8-0x39]
  409d0a:	mov    edi,0x7cecfff3
  409d0f:	mov    ecx,0x1f342c8b
  409d14:	daa    
  409d15:	push   edi
  409d16:	cmc    
  409d17:	das    
  409d18:	not    DWORD PTR [edi+0x2c81b627]
  409d1e:	and    DWORD PTR [eax+0x6f],esi
  409d21:	ret    0x7306
  409d24:	loopne 0x409d6e
  409d26:	out    0x23,eax
  409d28:	xor    BYTE PTR [eax+ebp*2],al
  409d2b:	fdiv   QWORD PTR [esi+eiz*4+0x610f8191]
  409d32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d33:	cmp    edx,DWORD PTR [esi+0x73e11a65]
  409d39:	in     eax,0xec
  409d3b:	sbb    al,0x42
  409d3d:	mov    ecx,DWORD PTR [ecx+0x48]
  409d40:	mov    dh,0xe9
  409d42:	cmp    ah,ah
  409d44:	adc    BYTE PTR [edx-0x281ecdd9],ah
  409d4a:	outs   dx,DWORD PTR ds:[esi]
  409d4b:	int3   
  409d4c:	cli    
  409d4d:	jge    0x409d4b
  409d4f:	jbe    0x409d90
  409d51:	retf   0xb030
  409d54:	test   BYTE PTR [esp+esi*2],bh
  409d57:	fs sbb al,0x58
  409d5a:	cwde   
  409d5b:	stc    
  409d5c:	xchg   esi,eax
  409d5d:	into   
  409d5e:	inc    eax
  409d5f:	(bad)
  409d63:	ja     0x409d85
  409d65:	addr16 in al,0x1d
  409d68:	push   ds
  409d69:	inc    ebx
  409d6a:	fadd   st(5),st
  409d6c:	and    al,BYTE PTR [eax+0x45]
  409d6f:	dec    ebx
  409d70:	push   esi
  409d71:	sub    eax,0xe258276a
  409d76:	in     eax,dx
  409d77:	out    dx,al
  409d78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d79:	xchg   edx,eax
  409d7a:	repz jb 0x409d95
  409d7d:	popa   
  409d7e:	addr16 jns 0x409d7b
  409d81:	xchg   ecx,eax
  409d82:	mov    bl,0xac
  409d84:	adc    DWORD PTR [ebp+0x2353b898],edi
  409d8a:	aam    0xce
  409d8c:	sti    
  409d8d:	sbb    DWORD PTR ds:0xe2d909aa,edx
  409d93:	add    eax,DWORD PTR ds:0xf10cf812
  409d99:	xchg   esi,eax
  409d9a:	jmp    0xfb66c1e0
  409d9f:	push   ebp
  409da0:	std    
  409da1:	sbb    al,0xed
  409da3:	mov    edx,0x71563259
  409da8:	shr    BYTE PTR [esp+ecx*4+0x2b1c826a],1
  409daf:	sbb    DWORD PTR [ebx-0x547773cc],eax
  409db5:	adc    eax,0x2d865a7
  409dba:	cmp    bl,BYTE PTR [edi+ebp*8]
  409dbd:	(bad)  
  409dbe:	repnz inc esi
  409dc0:	lahf   
  409dc1:	mov    esi,0x46c51e00
  409dc6:	sub    edi,ebp
  409dc8:	inc    esi
  409dc9:	xchg   edx,eax
  409dca:	mov    cl,0x99
  409dcc:	xchg   ebx,eax
  409dcd:	clc    
  409dce:	push   ds
  409dcf:	icebp  
  409dd0:	push   ss
  409dd1:	popf   
  409dd2:	cld    
  409dd3:	cs pop ebx
  409dd5:	dec    ebx
  409dd6:	cmp    al,0xdf
  409dd8:	push   esi
  409dd9:	and    DWORD PTR [ebp+0x62f2ce8d],ebx
  409ddf:	sub    BYTE PTR [esi-0x2b5491db],dh
  409de5:	cli    
  409de6:	push   esp
  409de7:	scas   eax,DWORD PTR es:[edi]
  409de8:	scas   eax,DWORD PTR es:[edi]
  409de9:	push   0xd50e3b03
  409dee:	popa   
  409def:	jge    0x409dd8
  409df1:	pop    ecx
  409df2:	test   eax,0x93e7df66
  409df7:	addr16 mov esp,0xdef64342
  409dfd:	fsub   QWORD PTR ds:0x8997b36c
  409e03:	cmc    
  409e04:	int3   
  409e05:	fstp   TBYTE PTR [edi-0x5285caf2]
  409e0b:	lds    edx,FWORD PTR [eax-0x11]
  409e0e:	loop   0x409e0d
  409e10:	cmp    esi,ecx
  409e12:	hlt    
  409e13:	dec    edi
  409e14:	into   
  409e15:	push   eax
  409e16:	mov    ecx,0x390b6ef0
  409e1b:	jb     0x409e8c
  409e1d:	lods   al,BYTE PTR ds:[esi]
  409e1e:	adc    al,0xf4
  409e20:	stos   DWORD PTR es:[edi],eax
  409e21:	retf   
  409e22:	cmp    edx,DWORD PTR [edi+ebx*2-0x7d6a582a]
  409e29:	jno    0x409db6
  409e2b:	rcr    BYTE PTR [esi],0x23
  409e2e:	xchg   edi,eax
  409e2f:	pop    edx
  409e30:	sbb    eax,0x4ad5f62a
  409e35:	leave  
  409e36:	(bad)  
  409e37:	mov    esp,0x9c7c25fa
  409e3c:	icebp  
  409e3d:	or     bh,BYTE PTR [edi]
  409e3f:	xor    al,0x93
  409e41:	jle    0x409e1d
  409e43:	cdq    
  409e44:	sti    
  409e45:	dec    edi
  409e46:	xchg   ebx,eax
  409e47:	or     edi,DWORD PTR [eax+0x64b32fd8]
  409e4d:	fadd   st(5),st
  409e4f:	lods   eax,DWORD PTR ds:[esi]
  409e50:	xor    eax,0x46f5f90d
  409e55:	out    dx,al
  409e56:	cli    
  409e57:	in     al,0x19
  409e59:	pusha  
  409e5a:	jo     0x409e25
  409e5c:	sbb    eax,0x11022dd3
  409e61:	mov    ss,WORD PTR ds:0xeaa41c05
  409e67:	jge    0x409e75
  409e69:	repz cmp al,0xbc
  409e6c:	sahf   
  409e6d:	enter  0xfa23,0x20
  409e71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e72:	outs   dx,DWORD PTR ds:[esi]
  409e73:	add    bl,BYTE PTR [edi-0x6d753eb]
  409e79:	bound  esp,QWORD PTR [ebx+0x66]
  409e7c:	ins    BYTE PTR es:[edi],dx
  409e7d:	test   DWORD PTR ss:[eax],eax
  409e80:	rcl    DWORD PTR [eax+esi*2],0x2c
  409e84:	dec    eax
  409e85:	adc    BYTE PTR [eax+0x3f51172a],bh
  409e8b:	pop    ds
  409e8c:	xor    ah,BYTE PTR [ebp-0x2b97ce95]
  409e92:	dec    esi
  409e93:	jge    0x409e9b
  409e95:	rcl    BYTE PTR [eax+0x8],cl
  409e98:	sub    ebp,ebp
  409e9a:	pop    eax
  409e9b:	fld    QWORD PTR [ebp+ecx*4+0x3]
  409e9f:	aam    0x2e
  409ea1:	push   es
  409ea2:	sub    DWORD PTR [esi],edi
  409ea4:	push   0xe
  409ea6:	mov    ds:0x2765a23b,eax
  409eab:	jne    0x409eea
  409ead:	push   0xe648f582
  409eb2:	mov    ch,0xc1
  409eb4:	push   0x2c1f2252
  409eb9:	mov    edx,0x3bd62a0d
  409ebe:	stos   BYTE PTR es:[edi],al
  409ebf:	fcomip st,st(7)
  409ec1:	imul   esi,DWORD PTR ds:0x90563635,0x9c94357e
  409ecb:	jns    0x409f2f
  409ecd:	and    al,0xbf
  409ecf:	push   0xbf9649b
  409ed4:	and    BYTE PTR [ebx+edx*2+0x10],bh
  409ed8:	sar    DWORD PTR [esi],cl
  409eda:	cwde   
  409edb:	iret   
  409edc:	fcomp  DWORD PTR [eax]
  409ede:	ss int 0x3b
  409ee1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ee2:	pop    esp
  409ee3:	ficom  WORD PTR [edx-0x1558ac7e]
  409ee9:	popf   
  409eea:	sbb    bh,BYTE PTR [ecx-0x4379a395]
  409ef0:	pop    ss
  409ef1:	stos   DWORD PTR es:[di],eax
  409ef3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ef4:	mov    dh,0x72
  409ef6:	xchg   DWORD PTR [eax+0x30],eax
  409ef9:	push   ds
  409efa:	fisub  WORD PTR [ebx+0x14738f]
  409f00:	daa    
  409f01:	rcl    dl,1
  409f03:	add    BYTE PTR [edx+eax*2+0x4e],ch
  409f07:	clc    
  409f08:	jg     0x409e8e
  409f0a:	jno    0x409f47
  409f0c:	(bad)  
  409f0d:	int3   
  409f0e:	sahf   
  409f0f:	lods   al,BYTE PTR ds:[esi]
  409f10:	push   esp
  409f11:	lds    ebp,FWORD PTR [eax]
  409f13:	mov    bl,0xad
  409f15:	fst    st(5)
  409f17:	daa    
  409f18:	dec    eax
  409f19:	xchg   edx,eax
  409f1a:	hlt    
  409f1b:	xor    al,0xe1
  409f1d:	sbb    eax,0xe531ea2c
  409f22:	sub    edi,esi
  409f24:	loopne 0x409f0d
  409f26:	sbb    DWORD PTR [eax+edx*1-0x4f23f94d],0x1d
  409f2e:	sub    eax,0xd78ccccf
  409f33:	aaa    
  409f34:	in     eax,0x63
  409f36:	sti    
  409f37:	mov    ebp,0x965540f7
  409f3c:	mov    dl,0x4e
  409f3e:	gs jge 0x409f56
  409f41:	je     0x409f79
  409f43:	pushf  
  409f44:	adc    al,BYTE PTR [esi*2+0x3504f1af]
  409f4b:	mov    edx,0xfc616f78
  409f50:	push   0xffffff9e
  409f52:	inc    edx
  409f53:	lds    esp,FWORD PTR [ecx]
  409f55:	mov    dl,bl
  409f57:	(bad)
  409f5b:	adc    al,0xd9
  409f5d:	retf   
  409f5e:	sbb    BYTE PTR [esi],cl
  409f60:	mov    ebx,DWORD PTR [eax]
  409f62:	inc    DWORD PTR [ebx+edx*8+0xf]
  409f66:	xchg   DWORD PTR [ecx],ecx
  409f68:	icebp  
  409f69:	loope  0x409efd
  409f6b:	adc    DWORD PTR [edx],0x6fdae45d
  409f71:	out    0x5f,al
  409f73:	(bad)  
  409f75:	dec    edi
  409f76:	and    bh,dh
  409f78:	test   BYTE PTR [edx-0x4edabb9],bl
  409f7e:	sbb    edx,DWORD PTR [ebx-0x3f12fd36]
  409f84:	ins    DWORD PTR es:[edi],dx
  409f85:	jmp    0xd3b68153
  409f8a:	dec    ebx
  409f8b:	ror    DWORD PTR [ebx],0xe7
  409f8e:	xchg   ebp,eax
  409f8f:	retf   
  409f90:	stos   DWORD PTR es:[edi],eax
  409f91:	in     al,dx
  409f92:	pusha  
  409f93:	adc    al,0xa7
  409f95:	ret    
  409f96:	xor    al,0x2c
  409f98:	fdiv   QWORD PTR [ecx+esi*4-0x22a08103]
  409f9f:	rol    ecx,1
  409fa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fa2:	pop    esi
  409fa3:	(bad)  
  409fa4:	cmc    
  409fa5:	arpl   WORD PTR ds:0x45b3505b,di
  409fab:	inc    ebp
  409fac:	rol    DWORD PTR [ebp+0x43],cl
  409faf:	mov    cl,0xd
  409fb1:	adc    DWORD PTR [ebx+0x5a],ebp
  409fb4:	or     DWORD PTR [esi-0xa],edx
  409fb7:	xor    edi,DWORD PTR es:0x6187f248
  409fbe:	mov    ch,0xa9
  409fc0:	push   ecx
  409fc1:	clc    
  409fc2:	jmp    0x75cc707c
  409fc7:	rcr    BYTE PTR [ebp-0x45],0x29
  409fcb:	lahf   
  409fcc:	aas    
  409fcd:	push   ds
  409fce:	imul   esi,DWORD PTR [ecx+0x4b],0xd0e69466
  409fd5:	add    DWORD PTR [esi+edi*4-0x15],0x6edeb70b
  409fdd:	or     al,0x64
  409fdf:	xchg   ebx,eax
  409fe0:	ficom  WORD PTR ds:[ebp+0x777ceda6]
  409fe7:	or     eax,0x34ce7d95
  409fec:	or     dh,BYTE PTR [edx]
  409fee:	mov    ds:0x26d76a8,eax
  409ff3:	int3   
  409ff4:	inc    eax
  409ff5:	ds je  0x40a03a
  409ff8:	leave  
  409ff9:	cmp    al,0xc5
  409ffb:	aaa    
  409ffc:	stc    
  409ffd:	fnstcw WORD PTR [edi-0x70bd28a9]
  40a003:	inc    ecx
  40a004:	cwde   
  40a005:	dec    ebx
  40a006:	cdq    
  40a007:	aad    0xaa
  40a009:	mov    ebp,0x8af28902
  40a00e:	jle    0x40a07b
  40a010:	jmp    0xa9aa:0x1b904693
  40a017:	push   0x5b
  40a019:	inc    si
  40a01b:	push   es
  40a01c:	popf   
  40a01d:	ret    0x86b0
  40a020:	mov    edi,0x2a69f858
  40a025:	inc    esi
  40a026:	cwde   
  40a027:	dec    ebp
  40a028:	pushf  
  40a029:	adc    DWORD PTR [ebp+0x34],0x93027ba3
  40a030:	xchg   al,al
  40a032:	aaa    
  40a033:	sar    DWORD PTR [ebp+0x3c],1
  40a036:	aas    
  40a037:	aam    0x14
  40a039:	popf   
  40a03a:	push   edi
  40a03b:	fbstp  TBYTE PTR [edx+0x1c]
  40a03e:	(bad)  
  40a03f:	mov    cl,0x18
  40a041:	les    ebx,FWORD PTR [ecx-0x71b7929a]
  40a047:	(bad)  
  40a048:	or     al,0x74
  40a04a:	or     BYTE PTR [edi-0x55],bl
  40a04d:	dec    esi
  40a04e:	lahf   
  40a04f:	inc    ebx
  40a050:	or     ebx,0x55a10c0b
  40a056:	xchg   DWORD PTR [esi+0x2a],edx
  40a059:	call   0xfe56:0x5c3fa4f4
  40a060:	mov    cl,0x86
  40a062:	cwde   
  40a063:	cmp    ah,BYTE PTR [eax+0xe]
  40a066:	sub    eax,0x3510c17d
  40a06b:	jl     0x40a09a
  40a06d:	jae    0x40a01c
  40a06f:	or     al,0xdb
  40a071:	add    DWORD PTR [ebp-0x3522ed1d],eax
  40a077:	push   ebp
  40a078:	sti    
  40a079:	inc    ecx
  40a07a:	pop    ss
  40a07b:	mov    ah,0x96
  40a07d:	dec    edx
  40a07e:	(bad)  
  40a07f:	pop    ss
  40a080:	jno    0x40a0c7
  40a082:	mov    BYTE PTR [ebx+0x6076f7b0],cl
  40a088:	lds    esp,FWORD PTR [edi+0x7]
  40a08b:	add    ch,ah
  40a08d:	cmp    bh,BYTE PTR [eax-0x50]
  40a090:	int    0x5d
  40a092:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a093:	lahf   
  40a094:	(bad)  
  40a095:	into   
  40a096:	mov    ds:0xe48e7c54,al
  40a09b:	leave  
  40a09c:	rcl    BYTE PTR [ebp-0x5c],0x71
  40a0a0:	push   ecx
  40a0a1:	(bad)  
  40a0a2:	ret    
  40a0a3:	or     DWORD PTR [edi+ebp*2-0x250321f7],ebx
  40a0aa:	jp     0x40a095
  40a0ac:	rcl    DWORD PTR [esi+0x2ae0532],0x3a
  40a0b3:	jmp    0xec5d:0xa1fbe97e
  40a0ba:	sub    ebp,edi
  40a0bc:	and    DWORD PTR [eax-0x3],0xde4409a3
  40a0c3:	xchg   ebx,eax
  40a0c4:	mov    ah,al
  40a0c6:	dec    ebp
  40a0c7:	inc    BYTE PTR [ebp+0x67]
  40a0ca:	jp     0x40a0c2
  40a0cc:	xchg   BYTE PTR [ecx],bh
  40a0ce:	shr    BYTE PTR ss:[eax],cl
  40a0d1:	cmp    eax,DWORD PTR [ebp-0x6494641]
  40a0d7:	sbb    bh,BYTE PTR [ecx+0x52]
  40a0da:	aam    0x81
  40a0dc:	sub    al,0xa5
  40a0de:	xlat   BYTE PTR ds:[ebx]
  40a0df:	fcomi  st,st(2)
  40a0e1:	and    bh,BYTE PTR [eax]
  40a0e3:	add    BYTE PTR [eax+0x40f748a1],bl
  40a0e9:	sub    eax,0x6d43b6b9
  40a0ee:	icebp  
  40a0ef:	dec    edx
  40a0f0:	mov    edi,0x7b3cf641
  40a0f5:	iret   
  40a0f6:	mov    dh,0xaf
  40a0f8:	jmp    0xce26:0xe6ab5719
  40a0ff:	sbb    al,0xdb
  40a101:	mov    bh,BYTE PTR [eax+0x6f]
  40a104:	(bad)  [ebx]
  40a106:	test   DWORD PTR [edx],ebp
  40a108:	ins    BYTE PTR es:[edi],dx
  40a109:	jge    0x40a0ed
  40a10b:	xchg   ebx,eax
  40a10c:	std    
  40a10d:	pop    ss
  40a10e:	push   eax
  40a110:	sub    DWORD PTR [edi-0x44],edi
  40a113:	ins    BYTE PTR es:[edi],dx
  40a114:	test   eax,0xce5d1dc0
  40a119:	addr16 pushf 
  40a11b:	push   eax
  40a11c:	mov    bh,0xbb
  40a11e:	dec    eax
  40a11f:	shl    BYTE PTR [eax+0x64],0x2b
  40a123:	cmc    
  40a124:	add    dl,BYTE PTR [edx]
  40a126:	js     0x40a0f2
  40a128:	xlat   BYTE PTR ds:[ebx]
  40a129:	dec    edi
  40a12a:	push   ds
  40a12b:	std    
  40a12c:	fwait
  40a12d:	scas   al,BYTE PTR es:[edi]
  40a12e:	push   es
  40a12f:	mov    es,WORD PTR ds:0x5e9e7b13
  40a135:	test   bh,0x79
  40a138:	add    BYTE PTR [esi-0x56dc34e8],bl
  40a13e:	cld    
  40a13f:	adc    ch,0x99
  40a142:	shl    ecx,1
  40a144:	mov    bl,0x6f
  40a146:	in     eax,dx
  40a147:	and    eax,0xc3c013c4
  40a14c:	mov    ah,0x38
  40a14e:	out    dx,al
  40a14f:	fcomp  QWORD PTR [ebp-0x6ebfed0b]
  40a155:	and    al,0x87
  40a157:	in     eax,0xb2
  40a159:	dec    esi
  40a15a:	lods   ax,WORD PTR ds:[esi]
  40a15c:	test   BYTE PTR [ecx+0x53963c02],cl
  40a162:	jmp    0x2741dd81
  40a167:	imul   esp,edx,0xffffffb3
  40a16a:	pop    ebx
  40a16b:	cmp    BYTE PTR [ebp+0x489d8b29],dl
  40a171:	dec    ecx
  40a172:	add    eax,0xeeb27d0f
  40a177:	popa   
  40a178:	push   esp
  40a179:	mov    edi,0x3ade97e8
  40a17e:	xor    DWORD PTR [eax+edx*2+0x5a],edx
  40a182:	gs jnp 0x40a13e
  40a185:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a186:	sti    
  40a187:	xchg   ch,ah
  40a189:	fild   WORD PTR [ebx-0x1f]
  40a18c:	ss add al,0x18
  40a18f:	pop    esp
  40a190:	or     BYTE PTR [esi],dl
  40a192:	mov    bl,0xea
  40a194:	pop    ecx
  40a195:	jne    0x40a1c8
  40a197:	loope  0x40a175
  40a199:	sub    eax,DWORD PTR [esi+0x4321fa8e]
  40a19f:	fild   DWORD PTR [edi]
  40a1a1:	inc    eax
  40a1a2:	(bad)  
  40a1a3:	inc    esp
  40a1a4:	mov    esi,0x572ff362
  40a1a9:	xchg   BYTE PTR [esi],ah
  40a1ab:	lods   eax,DWORD PTR ds:[esi]
  40a1ac:	mov    edi,?
  40a1ae:	clc    
  40a1af:	lds    edx,FWORD PTR [edi+0x1a]
  40a1b2:	outs   dx,BYTE PTR ds:[esi]
  40a1b3:	add    DWORD PTR [ebp+edi*2+0x2d],ecx
  40a1b7:	(bad)  [eax-0x6a]
  40a1ba:	sub    DWORD PTR [ecx+0x61e60133],0xffffffc5
  40a1c1:	pop    ds
  40a1c2:	loopne 0x40a239
  40a1c4:	pop    ecx
  40a1c5:	add    ah,BYTE PTR ds:0x7c493b6a
  40a1cb:	cwde   
  40a1cc:	aad    0xf5
  40a1ce:	cli    
  40a1cf:	sar    DWORD PTR [ebp-0x20],cl
  40a1d2:	int    0xd9
  40a1d4:	lods   al,BYTE PTR ds:[esi]
  40a1d5:	out    dx,eax
  40a1d6:	add    al,0x28
  40a1d8:	sub    al,0xe0
  40a1da:	xlat   BYTE PTR ds:[ebx]
  40a1db:	xor    edi,DWORD PTR [edi]
  40a1dd:	add    DWORD PTR [ecx-0x274b3698],edx
  40a1e3:	pop    edx
  40a1e4:	jmp    0x40a19f
  40a1e6:	pop    esi
  40a1e7:	cmp    cl,BYTE PTR [edx]
  40a1e9:	and    ebx,DWORD PTR [esi]
  40a1eb:	shl    BYTE PTR [edi+ecx*2-0x5e920c8],1
  40a1f2:	dec    eax
  40a1f3:	jmp    0x74bdffa8
  40a1f8:	sbb    bl,0xe2
  40a1fb:	int3   
  40a1fc:	scas   al,BYTE PTR es:[edi]
  40a1fd:	lods   al,BYTE PTR ds:[esi]
  40a1fe:	inc    edx
  40a1ff:	mov    edi,0xf73d9e0d
  40a204:	imul   ecx,esi,0xa57d3f9a
  40a20a:	sbb    eax,esp
  40a20c:	adc    DWORD PTR [ebx+0x25fb91a2],ecx
  40a212:	pop    es
  40a213:	pop    eax
  40a214:	outs   dx,BYTE PTR ds:[esi]
  40a215:	outs   dx,BYTE PTR ds:[esi]
  40a216:	repz aam 0x60
  40a219:	cdq    
  40a21a:	loope  0x40a1d3
  40a21c:	cmp    eax,0xfd0e2ec5
  40a221:	(bad)  
  40a222:	(bad)  
  40a223:	(bad)  
  40a224:	mov    eax,ds:0xf67c1568
  40a229:	popf   
  40a22a:	jbe    0x40a246
  40a22c:	and    ebx,DWORD PTR [ecx+0x17238b62]
  40a232:	add    al,0xe8
  40a234:	pusha  
  40a235:	push   edx
  40a236:	ja     0x40a28a
  40a238:	inc    edi
  40a239:	mov    ah,0x69
  40a23b:	xchg   ecx,eax
  40a23c:	cs pop ecx
  40a23e:	sar    BYTE PTR [esi-0x7c5dbe81],cl
  40a244:	jp     0x40a225
  40a246:	cdq    
  40a247:	xlat   BYTE PTR ds:[ebx]
  40a248:	inc    edx
  40a249:	ss mov bh,0x97
  40a24c:	fadd   st,st(3)
  40a24e:	sbb    ebx,edi
  40a250:	jno    0x40a268
  40a252:	cs mov ecx,0xe3fa7f1e
  40a258:	cmp    al,cl
  40a25a:	(bad)  
  40a25b:	ds jo  0x40a23d
  40a25e:	inc    esi
  40a25f:	jmp    0x40a282
  40a261:	mov    ecx,0x1971055d
  40a266:	ins    DWORD PTR es:[edi],dx
  40a267:	add    BYTE PTR [edx],0xdb
  40a26a:	jle    0x40a281
  40a26c:	jge    0x40a289
  40a26e:	sbb    ah,cl
  40a270:	sbb    eax,0x92e1e382
  40a275:	inc    edi
  40a276:	inc    esp
  40a277:	(bad)  
  40a278:	retf   0xb4a3
  40a27b:	call   0x819db730
  40a280:	rcr    dl,0xed
  40a283:	pop    ss
  40a284:	mov    ds:0x6301239f,eax
  40a289:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a28a:	sbb    esi,DWORD PTR es:[ebx+0x4695b296]
  40a291:	jmp    0xb60864c6
  40a296:	xor    al,0x74
  40a298:	arpl   WORD PTR [ebp+0x3b5b02e3],ax
  40a29e:	push   esi
  40a29f:	and    bl,cl
  40a2a1:	xor    eax,0x254cca92
  40a2a6:	inc    eax
  40a2a7:	pop    ecx
  40a2a8:	mov    al,ds:0xd576836d
  40a2ad:	adc    eax,0x81be7e12
  40a2b2:	(bad)  [ecx+0x536f6a0]
  40a2b8:	pop    ebx
  40a2b9:	aas    
  40a2ba:	addr16 enter 0xf93d,0x26
  40a2bf:	cwde   
  40a2c0:	sbb    BYTE PTR fs:[ebx+0x46],0x15
  40a2c5:	leave  
  40a2c6:	fidiv  WORD PTR [eax-0x4e]
  40a2c9:	ja     0x40a311
  40a2cb:	dec    ebp
  40a2cc:	sub    DWORD PTR [esi],ebp
  40a2ce:	je     0x40a299
  40a2d0:	mov    dh,BYTE PTR [edx-0x37]
  40a2d3:	(bad)  
  40a2d4:	hlt    
  40a2d5:	aaa    
  40a2d6:	pusha  
  40a2d7:	scas   al,BYTE PTR es:[edi]
  40a2d8:	sub    WORD PTR [eax],ax
  40a2db:	jb     0x40a340
  40a2dd:	add    BYTE PTR [edi-0x6a42af19],dl
  40a2e3:	scas   eax,DWORD PTR es:[edi]
  40a2e4:	jns    0x40a2fe
  40a2e6:	(bad)  [ebx]
  40a2e8:	add    ebp,esi
  40a2ea:	(bad)  
  40a2eb:	jmp    0xd9dbfdb6
  40a2f0:	add    eax,0x85b66791
  40a2f5:	jecxz  0x40a310
  40a2f7:	ja     0x40a2e0
  40a2f9:	add    eax,0x2ed46c56
  40a2fe:	cdq    
  40a2ff:	out    dx,al
  40a300:	jg     0x40a367
  40a302:	jmp    0x40a330
  40a304:	mov    eax,0x899e7f21
  40a309:	add    DWORD PTR [edx],ebx
  40a30b:	dec    ebp
  40a30c:	xchg   esp,eax
  40a30d:	sbb    DWORD PTR [esi-0x2212c5e5],eax
  40a313:	push   ss
  40a314:	ror    BYTE PTR [edi+0x4a],cl
  40a317:	jl     0x40a32d
  40a319:	int3   
  40a31a:	repnz push eax
  40a31c:	in     eax,0x95
  40a31e:	jae    0x40a370
  40a320:	sti    
  40a321:	pop    ss
  40a322:	mov    al,0x19
  40a324:	inc    esp
  40a325:	frstor [ecx]
  40a327:	mov    ch,0x8c
  40a329:	sbb    esi,eax
  40a32b:	fistp  QWORD PTR [ecx+0x72]
  40a32e:	add    eax,0xa2dcd36d
  40a333:	mov    edi,0x36d5664f
  40a338:	aas    
  40a339:	dec    esp
  40a33a:	cli    
  40a33b:	into   
  40a33c:	xor    eax,ebx
  40a33e:	fwait
  40a33f:	jmp    0x73e8b8cf
  40a344:	(bad)
  40a347:	retf   0x6ac9
  40a34a:	in     al,0xf1
  40a34c:	dec    eax
  40a34d:	jb     0x40a339
  40a34f:	sub    DWORD PTR [ecx-0x13],ebx
  40a352:	mov    al,0x8e
  40a354:	repz mov ecx,0x904a1dee
  40a35a:	cmp    esp,DWORD PTR [esi+edx*1-0x3b]
  40a35e:	xor    al,0xe2
  40a360:	add    BYTE PTR [ecx-0x11],cl
  40a363:	pop    ebp
  40a364:	xchg   al,bl
  40a366:	shr    BYTE PTR [esi+0x1c94686a],cl
  40a36c:	push   esi
  40a36d:	pop    edi
  40a36e:	xchg   DWORD PTR [ebp+0x80716a7],esp
  40a374:	add    bl,BYTE PTR [esi]
  40a376:	mov    edi,0xf517354b
  40a37b:	daa    
  40a37c:	jne    0x40a3e2
  40a37e:	popa   
  40a37f:	popa   
  40a380:	stos   DWORD PTR es:[edi],eax
  40a381:	cld    
  40a382:	enter  0x53d2,0x0
  40a386:	ins    DWORD PTR es:[edi],dx
  40a387:	pushw  0x60ad
  40a38b:	cmc    
  40a38c:	jge    0x40a368
  40a38e:	call   FWORD PTR [ebx+esi*1]
  40a391:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a392:	aaa    
  40a393:	push   DWORD PTR [ebx+0x36]
  40a396:	cwde   
  40a397:	push   edi
  40a398:	mov    eax,ds:0x30e454d7
  40a39d:	lea    ebp,[ebp-0x5b]
  40a3a0:	pop    ebx
  40a3a1:	ja     0x40a366
  40a3a3:	ss retf 0x408f
  40a3a7:	stos   DWORD PTR es:[edi],eax
  40a3a8:	dec    ebx
  40a3a9:	push   ecx
  40a3aa:	push   0xffffffb7
  40a3ac:	int    0x5b
  40a3ae:	add    ecx,eax
  40a3b0:	pop    ecx
  40a3b1:	sub    al,0xa5
  40a3b3:	mov    esi,ecx
  40a3b5:	sbb    al,0x4d
  40a3b7:	add    ah,0x6b
  40a3ba:	cs ret 0xf6d9
  40a3be:	xchg   edi,eax
  40a3bf:	pop    edi
  40a3c0:	add    DWORD PTR [ebp+0x4d],0xc576bc1c
  40a3c7:	xor    al,BYTE PTR [ebp-0x5d]
  40a3ca:	(bad)  [edx-0x56]
  40a3cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3ce:	inc    edi
  40a3cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3d0:	push   ebx
  40a3d1:	int3   
  40a3d2:	test   eax,0x361853d7
  40a3d7:	fst    DWORD PTR [eax+0x1c]
  40a3da:	xchg   BYTE PTR [edi],bl
  40a3dc:	in     al,0xce
  40a3de:	fwait
  40a3df:	fs push ebx
  40a3e1:	pop    ss
  40a3e2:	add    cl,cl
  40a3e4:	dec    ebx
  40a3e5:	lea    ecx,[eax-0x1a]
  40a3e8:	xchg   ebx,eax
  40a3e9:	jge    0x40a3b9
  40a3eb:	dec    ecx
  40a3ec:	push   ds
  40a3ed:	jl     0x40a41e
  40a3ef:	inc    ecx
  40a3f0:	push   esi
  40a3f1:	nop
  40a3f2:	test   BYTE PTR [ecx+0xf4f2013],ch
  40a3f8:	jnp    0x40a3eb
  40a3fa:	mov    esi,ebp
  40a3fc:	xchg   bl,cl
  40a3fe:	jmp    0x40a3b7
  40a400:	daa    
  40a401:	(bad)  
  40a403:	test   al,0xf7
  40a405:	outs   dx,BYTE PTR ds:[esi]
  40a406:	lea    esp,[ecx-0x48cef633]
  40a40c:	inc    ecx
  40a40d:	push   ebp
  40a40e:	bnd jns 0x40a45e
  40a411:	jmp    0x8d36:0xbf711474
  40a418:	or     eax,0x4b1af126
  40a41d:	into   
  40a41e:	and    eax,0xcc8ad1bb
  40a423:	pushf  
  40a424:	sti    
  40a425:	int3   
  40a426:	iret   
  40a427:	mov    eax,ds:0x4c1c9cde
  40a42c:	sbb    eax,0xb05d04aa
  40a431:	mov    edx,DWORD PTR [edx+eax*1+0x2b]
  40a435:	iret   
  40a436:	or     BYTE PTR [esi-0x2bc8b91f],al
  40a43c:	sub    BYTE PTR [eax+0x68f90f92],ch
  40a442:	cmp    edx,ecx
  40a444:	in     eax,dx
  40a445:	push   ecx
  40a446:	xor    eax,0x8c6a9461
  40a44b:	into   
  40a44c:	ret    
  40a44d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a44e:	arpl   WORD PTR [ebx+0x16aee4f4],cx
  40a454:	test   DWORD PTR [ecx+edx*8+0x79433200],edi
  40a45b:	aaa    
  40a45c:	(bad)  
  40a45d:	mov    ecx,0xde258cc9
  40a462:	cmp    BYTE PTR [eax-0x55],ah
  40a465:	mov    WORD PTR [edi+ecx*2],fs
  40a468:	scas   al,BYTE PTR es:[edi]
  40a469:	les    ebp,FWORD PTR [edi+0xde60ed4]
  40a46f:	adc    bh,BYTE PTR [eax]
  40a471:	imul   edx,DWORD PTR [ebx-0x66],0x5c5ad303
  40a478:	imul   esp,DWORD PTR [edi],0xd57484e7
  40a47e:	push   ebp
  40a47f:	mov    ebp,DWORD PTR [esi+ecx*4+0x35]
  40a483:	jge    0x40a494
  40a485:	je     0x40a436
  40a487:	cs ss xor al,0xb3
  40a48b:	push   0x82d4e99b
  40a490:	xor    edi,DWORD PTR [esi]
  40a492:	pop    ss
  40a493:	xchg   BYTE PTR [edi-0x7d],dl
  40a496:	imul   ebx,DWORD PTR [ecx-0x7],0xffffff8a
  40a49a:	and    eax,0x4390f23a
  40a49f:	popa   
  40a4a0:	adc    eax,0x189cae4d
  40a4a5:	xchg   edx,eax
  40a4a6:	addr16 xchg ecx,eax
  40a4a8:	lahf   
  40a4a9:	mov    dl,0x4a
  40a4ab:	mov    ds:0x8710e496,eax
  40a4b0:	xchg   dl,dh
  40a4b2:	cmp    al,0x28
  40a4b4:	or     ebx,DWORD PTR [eax-0x2c232289]
  40a4ba:	lock rol DWORD PTR [ebp+ecx*4+0xf862298],1
  40a4c2:	xchg   esp,eax
  40a4c3:	lods   al,BYTE PTR ds:[esi]
  40a4c4:	xchg   ecx,eax
  40a4c5:	fsubr  QWORD PTR [ebp+0x27]
  40a4c8:	cmp    BYTE PTR [ecx],al
  40a4ca:	pop    eax
  40a4cb:	xchg   ebx,eax
  40a4cc:	cld    
  40a4cd:	mov    bh,0x6b
  40a4cf:	inc    edx
  40a4d0:	arpl   WORD PTR [ebx+0x45],dx
  40a4d3:	sub    edx,edx
  40a4d5:	mov    bl,0xb4
  40a4d7:	sahf   
  40a4d8:	(bad)  
  40a4d9:	ror    BYTE PTR [ecx+0x1d],1
  40a4dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a4dd:	test   al,0x96
  40a4df:	enter  0xfd4a,0x2
  40a4e3:	jae    0x40a4be
  40a4e5:	fld    st(6)
  40a4e7:	jbe    0x40a561
  40a4e9:	mov    ecx,0x2b9c3a12
  40a4ee:	data16 xor BYTE PTR [ebx+ebp*1+0x7cd672b],ah
  40a4f6:	imul   ecx,DWORD PTR cs:[ecx-0x22],0x9
  40a4fb:	jno    0x40a55a
  40a4fd:	inc    ebx
  40a4fe:	test   al,0xf9
  40a500:	in     al,0xf2
  40a502:	xlat   BYTE PTR ds:[ebx]
  40a503:	jmp    0x40a4e7
  40a505:	sar    BYTE PTR [eax+0x6183532d],0xd
  40a50c:	mov    dl,0x1f
  40a50e:	jmp    0x4865614a
  40a513:	daa    
  40a514:	mov    BYTE PTR [edi-0x44],bh
  40a517:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a518:	xlat   BYTE PTR ds:[ebx]
  40a519:	leave  
  40a51a:	pusha  
  40a51b:	arpl   WORD PTR [edx],cx
  40a51d:	neg    DWORD PTR [ebp+0x217be792]
  40a523:	mul    edi
  40a525:	xchg   BYTE PTR [edx+0x1f],bh
  40a528:	cmp    eax,0xbf37b3af
  40a52d:	retf   
  40a52e:	bound  eax,QWORD PTR [edi-0x663039ae]
  40a534:	push   ss
  40a535:	ret    0xde83
  40a538:	jle    0x40a4cc
  40a53a:	ret    
  40a53b:	test   BYTE PTR [edx+0x15],dl
  40a53e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a53f:	fistp  WORD PTR [edi]
  40a541:	inc    ebx
  40a542:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a543:	xor    DWORD PTR [ecx-0x1a76894e],ecx
  40a549:	in     al,dx
  40a54a:	xchg   esp,eax
  40a54b:	xor    BYTE PTR [esi+0x4d45d494],al
  40a551:	retf   0x445b
  40a554:	lock sub eax,0x1ae39a86
  40a55a:	xor    al,0x9f
  40a55c:	mov    ah,0x5
  40a55e:	pop    ecx
  40a55f:	fld    TBYTE PTR [edx]
  40a561:	jno    0x40a507
  40a563:	pushf  
  40a564:	stos   DWORD PTR es:[edi],eax
  40a565:	sub    al,BYTE PTR [edx]
  40a567:	add    bh,al
  40a569:	push   eax
  40a56a:	mov    eax,0x255bf5ea
  40a56f:	add    DWORD PTR [edi],0x768482b4
  40a575:	into   
  40a576:	adc    BYTE PTR [ecx],0xdb
  40a579:	int    0xd
  40a57b:	xchg   ecx,eax
  40a57c:	ds call 0x5361:0x2117938b
  40a584:	cmp    eax,0x93566cc6
  40a589:	xchg   DWORD PTR [ecx-0x19],edx
  40a58c:	outs   dx,BYTE PTR ds:[esi]
  40a58d:	arpl   sp,di
  40a58f:	push   ecx
  40a590:	popf   
  40a591:	push   es
  40a592:	out    dx,al
  40a593:	adc    al,0xc0
  40a595:	xor    al,0x8f
  40a597:	ret    0xc683
  40a59a:	sbb    bl,cl
  40a59c:	add    eax,0x82061306
  40a5a1:	and    ebx,ebx
  40a5a3:	fimul  WORD PTR [ecx+0x4bf8e9c1]
  40a5a9:	xchg   edi,eax
  40a5aa:	scas   eax,DWORD PTR es:[edi]
  40a5ab:	or     dl,ch
  40a5ad:	or     ebx,DWORD PTR [eax+esi*2-0x6f]
  40a5b1:	xor    al,0xdc
  40a5b3:	pop    esi
  40a5b4:	pusha  
  40a5b5:	sbb    eax,0xdf76c370
  40a5ba:	cli    
  40a5bb:	fst    QWORD PTR [ecx]
  40a5bd:	mov    al,ds:0xc4d45ca5
  40a5c2:	imul   edi,ebp,0xd
  40a5c5:	pop    edx
  40a5c6:	add    eax,0x225f7690
  40a5cb:	push   esi
  40a5cc:	ret    
  40a5cd:	bnd jo 0x40a562
  40a5d0:	popf   
  40a5d1:	out    0x7b,al
  40a5d3:	(bad)  
  40a5d4:	sub    eax,ebp
  40a5d6:	add    BYTE PTR [ecx+0x7f05cb3e],0x3
  40a5dd:	xchg   edx,eax
  40a5de:	stos   BYTE PTR es:[edi],al
  40a5df:	and    BYTE PTR [ecx+0x556da3ab],cl
  40a5e5:	or     al,0x3f
  40a5e7:	fild   WORD PTR [eax]
  40a5e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5ea:	test   DWORD PTR [edx-0x49900921],ebx
  40a5f0:	(bad)  
  40a5f1:	jns    0x40a5a3
  40a5f3:	(bad)
  40a5f6:	dec    esi
  40a5f7:	add    esp,DWORD PTR [ecx]
  40a5f9:	stos   BYTE PTR es:[edi],al
  40a5fa:	dec    ebp
  40a5fb:	jmp    0x40a587
  40a5fd:	push   ss
  40a5fe:	addr16 enter 0xffa4,0xa0
  40a603:	retf   0xa398
  40a606:	push   es
  40a607:	in     al,dx
  40a608:	jno    0x40a624
  40a60a:	push   0x42
  40a60c:	dec    esp
  40a60d:	arpl   WORD PTR [ebp+ebp*2+0x5bc1915],ax
  40a614:	fs jb  0x40a5e6
  40a617:	pusha  
  40a618:	test   BYTE PTR [ebp-0x7e53588],ah
  40a61e:	pusha  
  40a61f:	pop    esi
  40a620:	pop    edx
  40a621:	ja     0x40a612
  40a623:	std    
  40a624:	push   0x625b139
  40a629:	out    dx,eax
  40a62a:	inc    ebx
  40a62b:	and    BYTE PTR [eax],bh
  40a62d:	popf   
  40a62e:	sar    BYTE PTR [ebp+0x1d],cl
  40a631:	repnz imul eax,edi,0xffffff8b
  40a635:	jns    0x40a5f6
  40a637:	clc    
  40a638:	imul   ebp,DWORD PTR [esi+0xa25bd37],0x88e6d57e
  40a642:	push   ebx
  40a643:	add    al,BYTE PTR gs:[ebx+0x6c]
  40a647:	lods   eax,DWORD PTR ds:[esi]
  40a648:	cwde   
  40a649:	gs inc edi
  40a64b:	adc    al,al
  40a64d:	xchg   ecx,eax
  40a64e:	mov    bh,0xda
  40a650:	xor    esi,ebx
  40a652:	cmp    BYTE PTR [ecx-0x5e],0xb
  40a656:	fwait
  40a657:	mov    edi,0xf6c928ab
  40a65c:	push   ecx
  40a65d:	sbb    edx,ebp
  40a65f:	test   al,0x50
  40a661:	inc    esp
  40a662:	retf   0xd698
  40a665:	(bad)  
  40a666:	pop    ebx
  40a667:	(bad)  
  40a668:	test   BYTE PTR [ecx+0x6e],dl
  40a66b:	lahf   
  40a66c:	push   ecx
  40a66d:	sbb    ebp,ecx
  40a66f:	icebp  
  40a670:	fnsave [ebp-0x2f120c91]
  40a676:	ss xchg ebx,eax
  40a678:	addr16 jne 0x40a64b
  40a67b:	sub    cl,BYTE PTR es:[esi-0x67]
  40a67f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a680:	call   0xedd0ce1c
  40a685:	push   es
  40a686:	repnz aad 0x5a
  40a689:	fs pop ebp
  40a68b:	cmp    dl,dl
  40a68d:	dec    edx
  40a68e:	dec    ecx
  40a68f:	xor    cl,BYTE PTR [edi-0x22]
  40a692:	lds    ecx,FWORD PTR [eax+0x2818a0ff]
  40a698:	mov    eax,ds:0xc33603f1
  40a69d:	imul   esi,edx,0x3f
  40a6a0:	jae    0x40a66a
  40a6a2:	ret    
  40a6a3:	jo     0x40a6e8
  40a6a5:	xor    dh,0xa7
  40a6a8:	add    al,0x5c
  40a6aa:	dec    ecx
  40a6ab:	jne    0x40a6ba
  40a6ad:	pop    esp
  40a6ae:	in     al,dx
  40a6af:	adc    BYTE PTR [eax-0x4665df36],0x9c
  40a6b6:	sub    cl,BYTE PTR [edi]
  40a6b8:	(bad)  
  40a6b9:	sbb    edi,ecx
  40a6bb:	test   al,0xe0
  40a6bd:	cdq    
  40a6be:	and    edi,DWORD PTR [eax+ebx*8-0x41]
  40a6c2:	shl    edx,0xa6
  40a6c5:	les    ebx,FWORD PTR [ebx-0x5ca952aa]
  40a6cb:	test   eax,0xf68d9f42
  40a6d0:	or     DWORD PTR [ebp-0x37d14240],0xffffffa9
  40a6d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6d8:	sub    esi,ebx
  40a6da:	xlat   BYTE PTR ds:[ebx]
  40a6db:	jae    0x40a747
  40a6dd:	shl    BYTE PTR [eax-0x48],0x4c
  40a6e1:	test   DWORD PTR [ebx+0x4c3bd0a1],edx
  40a6e7:	popa   
  40a6e8:	ins    BYTE PTR es:[edi],dx
  40a6e9:	pop    ds
  40a6ea:	stc    
  40a6eb:	sbb    al,0x4c
  40a6ed:	adc    eax,0x348763f
  40a6f2:	stos   BYTE PTR es:[edi],al
  40a6f3:	sub    eax,0xee7841
  40a6f8:	rcl    BYTE PTR [edx],0x41
  40a6fb:	test   BYTE PTR [ebx-0x488cbf0],dh
  40a701:	and    al,0x78
  40a703:	cld    
  40a704:	dec    esi
  40a705:	cdq    
  40a706:	test   eax,0x817c2d38
  40a70b:	pop    ecx
  40a70c:	mov    ch,0xc8
  40a70e:	xchg   BYTE PTR [eax],cl
  40a710:	sbb    BYTE PTR fs:[eax+0x38],bl
  40a714:	cmp    eax,0xe976e869
  40a719:	scas   al,BYTE PTR es:[edi]
  40a71a:	sbb    DWORD PTR [ebx],ebx
  40a71c:	mov    cl,0xae
  40a71e:	sbb    ebp,edx
  40a720:	retf   0xa039
  40a723:	sub    al,BYTE PTR [ebp+0x20]
  40a726:	sbb    dl,dl
  40a728:	or     BYTE PTR [edx-0x19],0x78
  40a72c:	jp     0x40a724
  40a72e:	push   0x2d
  40a730:	pop    es
  40a731:	mov    eax,DWORD PTR [ebx+0x5ffa9b4d]
  40a737:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a738:	mov    cl,BYTE PTR [eax+ebp*4]
  40a73b:	jge    0x40a71f
  40a73d:	fsub   QWORD PTR [ebx-0x66]
  40a740:	and    esp,esp
  40a742:	out    0x80,eax
  40a744:	retf   0x990c
  40a747:	add    DWORD PTR [esi-0x7a],edi
  40a74a:	xor    BYTE PTR [esi+0x73],ah
  40a74d:	sub    al,0x28
  40a74f:	mov    gs,WORD PTR [ebx+0x6a]
  40a752:	repnz inc edi
  40a754:	sbb    ebp,DWORD PTR [edi-0x7cd172b7]
  40a75a:	ja     0x40a716
  40a75c:	inc    ecx
  40a75d:	add    cl,BYTE PTR [eax]
  40a75f:	idiv   BYTE PTR [edi+0x7eacbe52]
  40a765:	sub    al,0x1a
  40a767:	pop    es
  40a768:	mov    ch,0x2b
  40a76a:	pop    edi
  40a76b:	inc    esi
  40a76c:	dec    ebx
  40a76d:	es clc 
  40a76f:	dec    esi
  40a770:	xor    BYTE PTR [eax],ch
  40a772:	jno    0x40a733
  40a774:	sbb    eax,0x6e114ff9
  40a779:	cli    
  40a77a:	ffree  st(4)
  40a77c:	mov    ds:0xb1f9a232,eax
  40a781:	ins    DWORD PTR es:[edi],dx
  40a782:	dec    ebx
  40a783:	cmc    
  40a784:	push   0xffffffa6
  40a786:	loop   0x40a711
  40a788:	or     BYTE PTR [ebx+esi*1],dl
  40a78b:	or     DWORD PTR [esi+0x11],ecx
  40a78e:	sbb    eax,0x62ccd2c8
  40a793:	test   BYTE PTR [ebp+0x43],bh
  40a796:	cmp    bh,bl
  40a798:	ret    0xd827
  40a79b:	out    0xcb,eax
  40a79d:	jge    0x40a7d1
  40a79f:	cmp    eax,0xad1e6961
  40a7a4:	add    DWORD PTR [esp+edi*2+0x4],0xe8128bba
  40a7ac:	call   0x1d1fbeeb
  40a7b1:	push   eax
  40a7b2:	add    eax,0x3cc25f12
  40a7b7:	ret    0x5c9b
  40a7ba:	inc    edx
  40a7bb:	mov    bh,BYTE PTR [ecx-0xc]
  40a7be:	jp     0x40a745
  40a7c0:	add    al,0x50
  40a7c2:	(bad)  [edx+0x5f]
  40a7c5:	aad    0x1a
  40a7c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7c8:	jb     0x40a7a2
  40a7ca:	mov    eax,ds:0x9e7bee19
  40a7cf:	push   ecx
  40a7d0:	out    dx,eax
  40a7d1:	imul   ebx,DWORD PTR [edx-0x3a2809f9],0xb96ab27c
  40a7db:	jnp    0x40a798
  40a7dd:	enter  0x8726,0x8
  40a7e1:	dec    ebp
  40a7e2:	jo     0x40a764
  40a7e4:	cld    
  40a7e5:	sar    BYTE PTR [bp+di-0x5e8d],1
  40a7ea:	aad    0x11
  40a7ec:	mov    cl,0x1f
  40a7ee:	push   ss
  40a7ef:	mov    bl,0x4d
  40a7f1:	mov    eax,0xc38a153a
  40a7f6:	ins    BYTE PTR es:[edi],dx
  40a7f7:	add    ah,bl
  40a7f9:	neg    DWORD PTR [esi]
  40a7fb:	sbb    al,0x1e
  40a7fd:	stc    
  40a7fe:	sbb    DWORD PTR [ebx],ebp
  40a800:	pop    esp
  40a801:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a802:	inc    esi
  40a803:	push   esp
  40a804:	xchg   edi,eax
  40a805:	(bad)  
  40a806:	jae    0x40a832
  40a808:	xor    eax,0xb78e4d72
  40a80d:	push   cs
  40a80e:	adc    ecx,edi
  40a810:	mov    ah,0x8f
  40a812:	call   0x6540d5f7
  40a817:	and    eax,0x28d92670
  40a81c:	jno    0x40a821
  40a81e:	xchg   ebp,eax
  40a81f:	xor    BYTE PTR [ebp-0x1d582036],0xf9
  40a826:	daa    
  40a827:	mov    bl,0x8f
  40a829:	sbb    BYTE PTR [ecx-0x73],ch
  40a82c:	imul   esi,DWORD PTR [ebp+0x33],0x51e7bce9
  40a833:	push   ds
  40a834:	jp     0x40a8a4
  40a836:	cmc    
  40a837:	out    dx,eax
  40a838:	jle    0x40a7cb
  40a83a:	push   0xffffffa4
  40a83c:	xor    al,0x3b
  40a83e:	xchg   esp,eax
  40a83f:	cmp    BYTE PTR [edx+0x693a4880],bh
  40a845:	inc    eax
  40a846:	pop    ss
  40a847:	pmulhuw mm4,QWORD PTR [edx]
  40a84a:	jne    0x40a80d
  40a84c:	clc    
  40a84d:	push   edi
  40a84e:	dec    eax
  40a84f:	in     al,0x19
  40a851:	je     0x40a89b
  40a853:	retf   0x2de4
  40a856:	inc    ebx
  40a857:	(bad)  
  40a858:	mov    edi,0x914260d1
  40a85d:	and    eax,0x7725aa03
  40a862:	sbb    eax,0xc8e1abf8
  40a867:	cmp    ch,BYTE PTR ds:0x14f47dba
  40a86d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a86e:	xchg   edx,eax
  40a86f:	or     bl,dl
  40a871:	mov    ah,0x6
  40a873:	test   DWORD PTR [ebx+0x3520e5b1],edx
  40a879:	mov    al,ds:0xc022887f
  40a87e:	dec    ebx
  40a87f:	pop    eax
  40a880:	ror    BYTE PTR [esi],1
  40a882:	imul   ebp,DWORD PTR [edi-0x18],0xd9a8db23
  40a889:	inc    edi
  40a88a:	xlat   BYTE PTR ds:[ebx]
  40a88b:	adc    al,0xf8
  40a88d:	std    
  40a88e:	xchg   ebx,eax
  40a88f:	jl     0x40a8c5
  40a891:	loopne 0x40a8b0
  40a893:	mov    dh,0xa3
  40a895:	fwait
  40a896:	jecxz  0x40a8a7
  40a898:	jg     0x40a8ea
  40a89a:	pop    ds
  40a89b:	ficomp DWORD PTR [ebp+0x2d855c46]
  40a8a1:	pop    es
  40a8a2:	xor    al,0xab
  40a8a4:	jle    0x40a8d5
  40a8a6:	icebp  
  40a8a7:	test   eax,0xf0ab09bd
  40a8ac:	add    DWORD PTR [esi],0xffffffed
  40a8af:	adc    DWORD PTR [edx+0x4a6bec51],esp
  40a8b5:	adc    edx,ecx
  40a8b7:	aas    
  40a8b8:	sub    eax,0xab29862e
  40a8bd:	icebp  
  40a8be:	dec    ebx
  40a8bf:	pop    ebx
  40a8c0:	scas   eax,DWORD PTR es:[edi]
  40a8c1:	or     eax,0xd08f53d2
  40a8c6:	(bad)  [edx+0x23]
  40a8c9:	pushf  
  40a8ca:	je     0x40a8c0
  40a8cc:	cli    
  40a8cd:	stos   BYTE PTR es:[edi],al
  40a8ce:	pushf  
  40a8cf:	pop    esi
  40a8d0:	mov    dl,BYTE PTR [edi*4+0x2da7d639]
  40a8d7:	inc    ebx
  40a8d8:	cmp    edx,0x27
  40a8db:	lds    ebp,FWORD PTR ds:0xbf5cc8b3
  40a8e1:	stos   BYTE PTR es:[edi],al
  40a8e2:	pusha  
  40a8e3:	xchg   BYTE PTR [eax-0x5e],ah
  40a8e6:	sbb    DWORD PTR [eax],ebx
  40a8e8:	add    DWORD PTR [ecx],ebp
  40a8ea:	push   es
  40a8eb:	fcmovne st,st(5)
  40a8ed:	add    eax,0x2bea0f41
  40a8f2:	mov    ch,0x3a
  40a8f4:	xor    eax,0x4f7eedd5
  40a8f9:	mov    dl,0xc6
  40a8fb:	fwait
  40a8fc:	repnz or al,bh
  40a8ff:	out    0xa9,eax
  40a901:	xor    bl,bl
  40a903:	pop    edx
  40a904:	inc    edi
  40a905:	loope  0x40a8f8
  40a907:	pusha  
  40a908:	jnp    0x40a8fe
  40a90a:	stos   DWORD PTR es:[edi],eax
  40a90b:	sbb    eax,0x37171719
  40a910:	nop
  40a911:	shl    DWORD PTR [edx],1
  40a913:	mov    DWORD PTR ds:0xedfd46da,0xc582993
  40a91d:	imul   esp,DWORD PTR [ebp+0x428dab58],0x41d9c374
  40a927:	adc    DWORD PTR [ecx],eax
  40a929:	jle    0x40a906
  40a92b:	(bad)  
  40a92d:	scas   al,BYTE PTR es:[edi]
  40a92e:	mov    ch,0x93
  40a930:	push   ds
  40a931:	sbb    cl,ch
  40a933:	std    
  40a934:	movzx  esp,WORD PTR [edx-0x1095fd3d]
  40a93b:	push   ecx
  40a93c:	pusha  
  40a93d:	inc    edi
  40a93e:	inc    ebp
  40a93f:	mov    al,0x38
  40a941:	xchg   esi,eax
  40a942:	pop    esi
  40a943:	in     eax,dx
  40a944:	inc    edx
  40a945:	test   eax,0x1c583c7
  40a94a:	bound  esi,QWORD PTR [ecx+0x35]
  40a94d:	out    dx,al
  40a94e:	xor    eax,0x7ee772db
  40a953:	bound  ebp,QWORD PTR [esi-0x17779587]
  40a959:	dec    ebp
  40a95a:	add    dh,BYTE PTR [ebp-0x53d4c3b3]
  40a960:	gs syscall 
  40a963:	ins    DWORD PTR es:[edi],dx
  40a964:	cmp    DWORD PTR [edx-0x6d],ebx
  40a967:	cmc    
  40a968:	mov    al,ds:0x88d58763
  40a96d:	inc    ebx
  40a96e:	pop    edi
  40a96f:	inc    ebx
  40a970:	mov    dh,0xcc
  40a972:	fld    QWORD PTR [ebx+0x66a9e73b]
  40a978:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a979:	loope  0x40a937
  40a97b:	adc    ebx,edx
  40a97d:	lods   al,BYTE PTR ds:[esi]
  40a97e:	retf   0x6f93
  40a981:	sahf   
  40a982:	cmp    cl,BYTE PTR [ebp+0x78316e30]
  40a988:	and    cl,BYTE PTR ds:0xe1cf936e
  40a98e:	les    eax,FWORD PTR [ecx-0x63916af9]
  40a994:	mov    ds,WORD PTR [ecx+0x13]
  40a997:	pop    edi
  40a998:	sbb    ebp,DWORD PTR [esi]
  40a99a:	xor    BYTE PTR [esp+esi*1],al
  40a99d:	cmp    al,BYTE PTR [edi]
  40a99f:	or     al,0xde
  40a9a1:	sub    al,0x93
  40a9a3:	fcmovu st,st(3)
  40a9a5:	push   esp
  40a9a6:	(bad)  [edx+0x7b]
  40a9a9:	jbe    0x40a972
  40a9ab:	mov    al,ds:0x70e605cf
  40a9b0:	dec    esi
  40a9b1:	cmp    eax,0x57dae645
  40a9b6:	sub    DWORD PTR [edi+0x5a],esi
  40a9b9:	dec    esi
  40a9ba:	mov    eax,ds:0xf2cff107
  40a9bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9c0:	mov    ch,0x52
  40a9c2:	jle    0x40a9cf
  40a9c4:	lods   al,BYTE PTR ds:[esi]
  40a9c5:	mov    ds:0xd266ad51,al
  40a9ca:	stos   DWORD PTR es:[edi],eax
  40a9cb:	loopne 0x40aa40
  40a9cd:	push   edi
  40a9ce:	jns    0x40a998
  40a9d0:	mov    edi,0x60088be4
  40a9d5:	and    DWORD PTR [esi-0x16841ae8],0xffffffe6
  40a9dc:	mov    esp,0x4aa6d9e4
  40a9e1:	sub    eax,0xe301edb6
  40a9e6:	mov    ds:0x4abbf838,al
  40a9eb:	int    0xba
  40a9ed:	mov    dh,0x78
  40a9ef:	adc    BYTE PTR [ebx],bl
  40a9f1:	cdq    
  40a9f2:	mov    bl,0xff
  40a9f4:	xor    al,BYTE PTR [ebp-0xc]
  40a9f7:	repz push ecx
  40a9f9:	pushf  
  40a9fa:	cmc    
  40a9fb:	mov    BYTE PTR [esi],bl
  40a9fd:	mov    dl,0x4d
  40a9ff:	jmp    0xa689799e
  40aa04:	jb     0x40a9a9
  40aa06:	xchg   edi,eax
  40aa07:	dec    ecx
  40aa08:	xchg   ecx,eax
  40aa09:	xchg   DWORD PTR [edi+0x5e],ebx
  40aa0c:	adc    al,ah
  40aa0e:	sub    bl,BYTE PTR [edi-0x70b3c15c]
  40aa14:	add    eax,0xbab11dbe
  40aa19:	addr16 aad 0x6a
  40aa1c:	dec    edx
  40aa1d:	push   ebx
  40aa1e:	mov    dh,BYTE PTR [ebp+0x7120e559]
  40aa24:	dec    esi
  40aa25:	mov    cl,0x48
  40aa27:	retf   
  40aa28:	inc    eax
  40aa29:	lock inc ebx
  40aa2b:	xchg   esp,eax
  40aa2c:	enter  0xab0e,0xa9
  40aa30:	cli    
  40aa31:	enter  0x7b97,0xef
  40aa35:	ins    BYTE PTR es:[edi],dx
  40aa36:	cmp    al,0x36
  40aa38:	xor    al,0x57
  40aa3a:	call   0x43a5:0x6f8d2677
  40aa41:	out    0xcc,al
  40aa43:	cwde   
  40aa44:	mov    edx,0x28725d2a
  40aa49:	dec    edi
  40aa4a:	(bad)  
  40aa4b:	and    BYTE PTR [ecx+ebp*4+0x2b],dh
  40aa4f:	pop    ss
  40aa50:	aad    0xb0
  40aa52:	and    bh,bh
  40aa54:	jbe    0x40aa8e
  40aa56:	mov    dl,0x5d
  40aa58:	daa    
  40aa59:	fist   WORD PTR [ecx+0x2db43904]
  40aa5f:	fcmovu st,st(3)
  40aa61:	cmp    DWORD PTR [ecx],esp
  40aa63:	cmp    al,bh
  40aa65:	out    dx,al
  40aa66:	push   cs
  40aa67:	and    DWORD PTR [edx],edi
  40aa69:	dec    ebp
  40aa6a:	dec    edi
  40aa6b:	mov    ebx,0x931d6343
  40aa70:	xchg   ecx,eax
  40aa71:	jg     0x40aab2
  40aa73:	mov    cl,0xf1
  40aa75:	push   eax
  40aa76:	push   es
  40aa77:	data16 mov cl,BYTE PTR [edx+eiz*4-0x61]
  40aa7c:	cli    
  40aa7d:	pop    edx
  40aa7e:	mov    ebp,0x98fb9599
  40aa83:	cmp    ah,cl
  40aa85:	ret    
  40aa86:	int3   
  40aa87:	mov    esp,0xf461eb4
  40aa8c:	push   es
  40aa8d:	dec    ecx
  40aa8e:	pop    esi
  40aa8f:	cmp    BYTE PTR [edx],al
  40aa91:	into   
  40aa92:	mov    ds,WORD PTR [ecx+0x73]
  40aa95:	es jae 0x40aa9d
  40aa98:	mov    dl,0x3b
  40aa9a:	sub    ebx,DWORD PTR ss:[eax]
  40aa9d:	adc    dl,BYTE PTR [edi]
  40aa9f:	adc    DWORD PTR [esi+0x6ffc033b],ecx
  40aaa5:	jns    0x40aa6e
  40aaa7:	jbe    0x40aac2
  40aaa9:	pop    eax
  40aaaa:	sbb    dl,ah
  40aaac:	jmp    0x40aa93
  40aaae:	mov    bl,0x4e
  40aab0:	pop    esp
  40aab1:	into   
  40aab2:	mov    edi,0xc1646bbb
  40aab7:	xor    al,0x1a
  40aab9:	pop    es
  40aaba:	add    al,0x6
  40aabc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aabd:	jge    0x40aae0
  40aabf:	retf   
  40aac0:	(bad)  
  40aac1:	test   edx,0x2d54ded4
  40aac7:	dec    esi
  40aac8:	test   DWORD PTR [ebp+0x205b0cbb],esi
  40aace:	fst    DWORD PTR [edi]
  40aad0:	sbb    DWORD PTR [ecx+0x57b9e064],ecx
  40aad6:	mov    edi,0xd3431f27
  40aadb:	fnstsw WORD PTR [ecx-0x2d4366f2]
  40aae1:	popa   
  40aae2:	scas   eax,DWORD PTR es:[edi]
  40aae3:	dec    esp
  40aae4:	sbb    eax,edi
  40aae6:	lea    esi,[eax-0x2]
  40aae9:	sub    ecx,DWORD PTR [ecx]
  40aaeb:	xor    eax,0x16b2ee3c
  40aaf0:	push   0x54
  40aaf2:	xchg   ebp,eax
  40aaf3:	retf   0xbc7c
  40aaf6:	jmp    0x40ab41
  40aaf8:	in     al,0xa6
  40aafa:	cmc    
  40aafb:	std    
  40aafc:	test   BYTE PTR [esi-0x32fac4f7],dl
  40ab02:	das    
  40ab03:	xor    dl,BYTE PTR [ebp-0x7ae484f4]
  40ab09:	cmp    dh,BYTE PTR [edx+0x52af544a]
  40ab0f:	push   es
  40ab10:	pop    ds
  40ab11:	pushf  
  40ab12:	inc    esp
  40ab13:	fadd   st,st(0)
  40ab15:	daa    
  40ab16:	sti    
  40ab17:	pop    eax
  40ab18:	add    al,0xe
  40ab1a:	and    bh,cl
  40ab1c:	adc    ah,BYTE PTR [esi+0x6abf429]
  40ab22:	mov    fs,WORD PTR [edx-0x17c98d66]
  40ab28:	jmp    0x40ab17
  40ab2a:	mov    edi,0x39099f4d
  40ab2f:	pushf  
  40ab30:	call   0xa70b5deb
  40ab35:	mov    BYTE PTR [edx-0x3],dl
  40ab38:	push   ss
  40ab39:	cdq    
  40ab3a:	push   eax
  40ab3b:	in     eax,0x45
  40ab3d:	jle    0x40ab08
  40ab3f:	add    bh,BYTE PTR [ecx+edi*2-0x60]
  40ab43:	(bad)  
  40ab45:	mov    ecx,0xf897a39f
  40ab4a:	test   ecx,eax
  40ab4c:	sbb    eax,0x2f513c3b
  40ab51:	cs mov esi,0x59b469c6
  40ab57:	xchg   ebp,eax
  40ab58:	mov    edx,0xd46746eb
  40ab5d:	jno    0x40ab02
  40ab5f:	das    
  40ab60:	lods   al,BYTE PTR ds:[esi]
  40ab61:	pop    es
  40ab62:	pop    esp
  40ab63:	or     BYTE PTR [eax],bh
  40ab65:	cs xor al,0xa2
  40ab68:	test   al,0xb9
  40ab6a:	adc    DWORD PTR [esi+edx*1-0x72],edx
  40ab6e:	ficomp WORD PTR [ecx+0x75]
  40ab71:	out    0x6f,eax
  40ab73:	test   eax,0x96d198d1
  40ab78:	mov    ebp,0x5319a8de
  40ab7d:	push   0x6
  40ab7f:	push   ss
  40ab80:	leave  
  40ab81:	mov    esi,DWORD PTR ds:0x95b0353b
  40ab87:	add    DWORD PTR [edx-0x59],0x65825627
  40ab8e:	(bad)  [edi+0x2455bcc6]
  40ab94:	mov    ?,eax
  40ab96:	aam    0xe5
  40ab98:	sub    DWORD PTR [edi+0x62],esp
  40ab9b:	pop    edi
  40ab9c:	or     al,0x57
  40ab9e:	sbb    eax,0xc9d3d811
  40aba3:	sub    BYTE PTR [ecx+0x35],ch
  40aba6:	stos   BYTE PTR es:[edi],al
  40aba7:	xor    esi,DWORD PTR [ecx+0x75]
  40abaa:	pop    es
  40abab:	mov    DWORD PTR [edx+0x766a2339],edx
  40abb1:	pop    eax
  40abb2:	push   ebp
  40abb3:	sub    al,0x1d
  40abb5:	adc    eax,0x75684a42
  40abba:	and    BYTE PTR [ecx],dl
  40abbc:	jmp    0x7808cc93
  40abc1:	xlat   BYTE PTR ds:[ebx]
  40abc2:	fld    TBYTE PTR [edi+esi*2-0x48]
  40abc6:	jge    0x40abf2
  40abc8:	loope  0x40abba
  40abca:	jecxz  0x40abd8
  40abcc:	(bad)  
  40abcd:	mul    ecx
  40abcf:	push   cs
  40abd0:	sar    BYTE PTR ds:0xa05cb3c0,0x19
  40abd7:	mov    dl,0xa1
  40abd9:	das    
  40abda:	pop    ss
  40abdb:	sub    BYTE PTR [esi],0x4a
  40abde:	stos   BYTE PTR es:[edi],al
  40abdf:	(bad)  
  40abe0:	(bad)  
  40abe1:	call   0xd6bcd8ce
  40abe6:	or     BYTE PTR [eax-0x314cfc86],al
  40abec:	add    al,0x3a
  40abee:	loope  0x40aba8
  40abf0:	add    ecx,DWORD PTR [esi]
  40abf2:	cli    
  40abf3:	lock push esi
  40abf5:	push   ss
  40abf6:	push   ss
  40abf7:	add    ebp,ecx
  40abf9:	test   al,0xd3
  40abfb:	jecxz  0x40abe6
  40abfd:	dec    edi
  40abfe:	sub    BYTE PTR [edi],0xb6
  40ac01:	fstp   st(1)
  40ac03:	out    0x5d,eax
  40ac05:	shl    BYTE PTR [ebp-0x5],cl
  40ac08:	cwde   
  40ac09:	in     eax,0x91
  40ac0b:	(bad)  
  40ac0d:	xchg   edi,eax
  40ac0e:	cmc    
  40ac0f:	mov    edi,0x75cac08a
  40ac14:	retf   0xa429
  40ac17:	adc    al,0x5
  40ac19:	mov    ch,0x59
  40ac1b:	cmp    ah,BYTE PTR [ebx+0x74a4ae41]
  40ac21:	sbb    eax,0x98f71cef
  40ac26:	in     eax,0xf3
  40ac28:	inc    eax
  40ac29:	ret    
  40ac2a:	(bad)  
  40ac2b:	fld    TBYTE PTR [ebx+eiz*4]
  40ac2e:	popa   
  40ac2f:	jg     0x40abe0
  40ac31:	aam    0x1b
  40ac33:	aaa    
  40ac34:	je     0x40ac5b
  40ac36:	(bad)  
  40ac37:	push   ebx
  40ac38:	mov    edi,0xec422659
  40ac3d:	inc    ebp
  40ac3e:	into   
  40ac3f:	push   eax
  40ac40:	sbb    BYTE PTR [edi],ch
  40ac42:	pop    ebp
  40ac43:	jbe    0x40ac3f
  40ac45:	sub    bh,bl
  40ac47:	mov    ebx,0xab54c540
  40ac4c:	cmp    eax,0xade0770e
  40ac51:	adc    DWORD PTR [esi-0x45a8eaa3],ecx
  40ac57:	test   eax,0x77517b68
  40ac5c:	cmp    BYTE PTR [ebp+0x60350cc8],dh
  40ac62:	iret   
  40ac63:	jae    0x40ac61
  40ac65:	push   esp
  40ac66:	push   ebx
  40ac67:	pop    esi
  40ac68:	ins    BYTE PTR es:[edi],dx
  40ac69:	in     eax,dx
  40ac6a:	xchg   ecx,eax
  40ac6b:	mov    cl,0x4b
  40ac6d:	push   ss
  40ac6e:	adc    BYTE PTR [eax],dh
  40ac70:	aaa    
  40ac71:	and    BYTE PTR [ecx-0x40],0xa0
  40ac75:	test   eax,0x6379bc9e
  40ac7a:	push   0x3da8906c
  40ac7f:	icebp  
  40ac80:	shl    DWORD PTR [esi-0x57],cl
  40ac83:	sub    bh,BYTE PTR [ebx]
  40ac85:	pop    ecx
  40ac86:	idiv   BYTE PTR [ecx+ebx*2-0x51be6a77]
  40ac8d:	jns    0x40acd2
  40ac8f:	push   cs
  40ac90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac91:	out    0x72,al
  40ac93:	push   0xffffffbe
  40ac95:	xor    al,0xae
  40ac97:	push   ebx
  40ac98:	mov    dl,0xeb
  40ac9a:	pop    ebx
  40ac9b:	sub    ebx,DWORD PTR [ebp-0x5a]
  40ac9e:	push   ecx
  40ac9f:	jnp    0x40acc0
  40aca1:	add    edi,DWORD PTR [ecx-0x5e]
  40aca4:	cmp    DWORD PTR cs:[edi+0x74],esi
  40aca8:	cwde   
  40aca9:	shr    esp,0x45
  40acac:	sbb    eax,0x47680fbc
  40acb1:	scas   al,BYTE PTR es:[edi]
  40acb2:	call   0x9e3cc6ed
  40acb7:	bound  esp,QWORD PTR [esi+0x7f]
  40acba:	scas   al,BYTE PTR es:[edi]
  40acbb:	arpl   WORD PTR [edi-0x547ee99c],dx
  40acc1:	scas   al,BYTE PTR es:[edi]
  40acc2:	iret   
  40acc3:	and    eax,0x3579f70f
  40acc8:	xor    al,0x36
  40acca:	and    eax,0x21fc305f
  40accf:	ds push ds
  40acd1:	shl    DWORD PTR [ebp-0x5d],cl
  40acd4:	fwait
  40acd5:	add    edx,DWORD PTR [esi-0x57]
  40acd8:	add    bh,BYTE PTR [ecx+0x62]
  40acdb:	adc    DWORD PTR [eax+0x38],0x40
  40acdf:	jl     0x40ad46
  40ace1:	sbb    BYTE PTR [ebx+0x431c96f8],dh
  40ace7:	and    al,0xbb
  40ace9:	jecxz  0x40ad69
  40aceb:	jmp    0xaf63c497
  40acf0:	mov    ch,BYTE PTR [ebx-0x70]
  40acf3:	inc    edx
  40acf4:	daa    
  40acf5:	test   DWORD PTR [eax-0x7498a636],esp
  40acfb:	(bad)  
  40acfc:	adc    bl,bl
  40acfe:	jmp    0x26e2:0x971672cb
  40ad05:	and    BYTE PTR ds:0x755bcc89,dh
  40ad0b:	pop    edi
  40ad0c:	jp     0x40ad29
  40ad0e:	xchg   DWORD PTR [ebx-0x33],esp
  40ad11:	adc    eax,0x60b9283
  40ad16:	or     esi,esp
  40ad18:	sub    ah,dh
  40ad1a:	(bad)  
  40ad1b:	dec    eax
  40ad1c:	dec    esi
  40ad1d:	mov    dh,0xf3
  40ad1f:	sub    esi,ecx
  40ad21:	es push ecx
  40ad23:	push   ds
  40ad24:	jp     0x40ad01
  40ad26:	adc    DWORD PTR [edx+edi*1+0x6],ebp
  40ad2a:	xchg   ebx,eax
  40ad2b:	pop    es
  40ad2c:	cmc    
  40ad2d:	jns    0x40acb0
  40ad2f:	jo     0x40ad7a
  40ad31:	fdiv   st,st(6)
  40ad33:	or     eax,0x73db8d8c
  40ad38:	inc    edx
  40ad39:	clc    
  40ad3a:	mov    cl,bl
  40ad3c:	lahf   
  40ad3d:	les    esi,FWORD PTR [edi]
  40ad3f:	xchg   ecx,eax
  40ad40:	jge    0x40ad29
  40ad42:	nop
  40ad43:	stos   DWORD PTR es:[edi],eax
  40ad44:	jno    0x40ad31
  40ad46:	push   ss
  40ad47:	push   cs
  40ad48:	dec    ecx
  40ad49:	jp     0x40ad59
  40ad4b:	or     esp,edx
  40ad4d:	push   es
  40ad4e:	or     DWORD PTR ds:0xb4d22945,ecx
  40ad54:	sti    
  40ad55:	add    ebx,DWORD PTR [eax+0x56d877de]
  40ad5b:	popf   
  40ad5c:	mov    es,edi
  40ad5e:	sbb    al,0xd3
  40ad60:	sub    DWORD PTR [ecx+0x2c],0x2bcbba3d
  40ad67:	minps  xmm4,XMMWORD PTR [esi+0x25]
  40ad6b:	and    edi,DWORD PTR [edi+0xaa438fc]
  40ad71:	out    0xbf,al
  40ad73:	pusha  
  40ad74:	mov    esp,0x6517774a
  40ad79:	jecxz  0x40adcf
  40ad7b:	pop    es
  40ad7c:	jnp    0x40ad37
  40ad7e:	(bad)  
  40ad7f:	stos   DWORD PTR es:[edi],eax
  40ad80:	dec    eax
  40ad81:	ss sti 
  40ad83:	shr    bl,cl
  40ad85:	fbld   TBYTE PTR [ecx]
  40ad87:	and    ebx,DWORD PTR [edx+esi*2]
  40ad8a:	repz mov dh,0x7a
  40ad8d:	inc    DWORD PTR [ebx+0x17]
  40ad90:	inc    edx
  40ad91:	jl     0x40ad84
  40ad93:	jp     0x40ad2d
  40ad95:	sbb    DWORD PTR [edx-0x7d667f4],0x2b6f005f
  40ad9f:	mov    ebx,DWORD PTR [eax]
  40ada1:	test   DWORD PTR [edi-0x63],0x12656e4c
  40ada8:	(bad)  
  40ada9:	push   ds
  40adaa:	jp     0x40ae14
  40adac:	stos   DWORD PTR es:[edi],eax
  40adad:	push   esi
  40adae:	or     eax,DWORD PTR [edi]
  40adb0:	call   0xc34f5d1
  40adb5:	xchg   esi,eax
  40adb6:	jmp    0xf0e0:0xe82683c6
  40adbd:	int    0xd1
  40adbf:	pop    es
  40adc0:	outs   dx,BYTE PTR ds:[esi]
  40adc1:	pop    edx
  40adc2:	pop    ebx
  40adc3:	and    cl,BYTE PTR [ebx]
  40adc5:	into   
  40adc6:	shr    DWORD PTR [esi+0x148af1ca],cl
  40adcc:	sbb    al,0xf0
  40adce:	rol    BYTE PTR [eax-0x6574b341],0x1a
  40add5:	pop    es
  40add6:	cmp    DWORD PTR [edx],0x54
  40add9:	mov    dl,0x8f
  40addb:	mov    dl,0xa7
  40addd:	(bad)  
  40addf:	aaa    
  40ade0:	dec    esi
  40ade1:	sbb    ah,BYTE PTR [eax+0x3e]
  40ade4:	jnp    0x40adad
  40ade6:	fistp  DWORD PTR [eax+0x5]
  40ade9:	repnz shr BYTE PTR [ebx+ebx*4],cl
  40aded:	push   ss
  40adee:	adc    ax,0xb28a
  40adf2:	into   
  40adf3:	jge    0x40adba
  40adf5:	add    BYTE PTR [ebp-0x1cc74daa],bl
  40adfb:	sbb    ch,BYTE PTR [eax]
  40adfd:	sub    DWORD PTR [ebp*2-0x5e604c05],ebp
  40ae04:	rcl    DWORD PTR [esi+0x2f],cl
  40ae07:	fwait
  40ae08:	shl    BYTE PTR [edx],0xf0
  40ae0b:	add    BYTE PTR [ecx-0x4b39bfdc],bl
  40ae11:	in     al,dx
  40ae12:	ficomp WORD PTR [ecx]
  40ae14:	pop    eax
  40ae15:	sbb    BYTE PTR [eax+0x23cd1c54],ah
  40ae1b:	mov    DWORD PTR [esi-0x180d2c4f],ebx
  40ae21:	in     eax,dx
  40ae22:	mov    dh,0x95
  40ae24:	aaa    
  40ae25:	inc    eax
  40ae26:	sbb    eax,0xa7d4875f
  40ae2b:	test   al,0xb4
  40ae2d:	stos   BYTE PTR es:[edi],al
  40ae2e:	xor    al,0xdc
  40ae30:	ins    BYTE PTR es:[edi],dx
  40ae31:	inc    ebp
  40ae32:	iret   
  40ae33:	inc    ebx
  40ae34:	and    eax,0x362fcf51
  40ae39:	shr    BYTE PTR [edx],cl
  40ae3b:	pop    esp
  40ae3c:	inc    esi
  40ae3d:	pushf  
  40ae3e:	cdq    
  40ae3f:	sbb    ch,BYTE PTR [edx+eiz*4-0x242e0e0a]
  40ae46:	call   0x3c7f:0xcffc6ce
  40ae4d:	fcom   QWORD PTR [ebx]
  40ae4f:	push   esp
  40ae50:	sti    
  40ae51:	xchg   ebp,eax
  40ae52:	in     eax,0xb7
  40ae54:	mov    esi,0xeb1cdd1c
  40ae59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae5a:	dec    eax
  40ae5b:	adc    dh,BYTE PTR [edx]
  40ae5d:	stos   DWORD PTR es:[edi],eax
  40ae5e:	and    eax,eax
  40ae60:	jns    0x40aed6
  40ae62:	mov    al,0x14
  40ae64:	cmp    edi,esi
  40ae66:	jp     0x40ae0a
  40ae68:	pop    eax
  40ae69:	push   0xffffffb6
  40ae6b:	and    ah,BYTE PTR [ecx-0x2de09eb7]
  40ae71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae72:	repz mov dl,BYTE PTR [ebx+0x71f5197b]
  40ae79:	mov    cl,0x9d
  40ae7b:	test   BYTE PTR [edi],bh
  40ae7d:	out    0x0,al
  40ae7f:	mov    al,0xd9
  40ae81:	mov    ch,0x6d
  40ae83:	push   ecx
  40ae84:	imul   ebp,esi,0x15a941fa
  40ae8a:	stos   BYTE PTR es:[edi],al
  40ae8b:	add    al,ah
  40ae8d:	mov    ebp,0x61d89879
  40ae92:	mov    esi,0x5d4f66bf
  40ae97:	fisub  DWORD PTR [ecx-0x7d]
  40ae9a:	leave  
  40ae9b:	js     0x40aef5
  40ae9d:	lods   eax,DWORD PTR ds:[esi]
  40ae9e:	push   ds
  40ae9f:	int3   
  40aea0:	lods   eax,DWORD PTR ds:[esi]
  40aea1:	jo     0x40ae2a
  40aea3:	inc    esi
  40aea4:	pop    ss
  40aea5:	mov    ah,0xd2
  40aea7:	gs dec edx
  40aea9:	je     0x40ae34
  40aeab:	hlt    
  40aeac:	xchg   edx,eax
  40aead:	iret   
  40aeae:	inc    ecx
  40aeaf:	pushf  
  40aeb0:	sti    
  40aeb1:	or     BYTE PTR [ebp+0x44714c15],dl
  40aeb7:	mov    dl,0x3
  40aeb9:	cmc    
  40aeba:	push   ebp
  40aebb:	xlat   BYTE PTR ds:[ebx]
  40aebc:	jns    0x40ae86
  40aebe:	fwait
  40aebf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aec0:	pop    ecx
  40aec1:	pop    ebp
  40aec2:	and    DWORD PTR [eax-0x38ee1cb0],ebp
  40aec8:	ins    DWORD PTR es:[edi],dx
  40aec9:	int    0x14
  40aecb:	push   edi
  40aecc:	pop    ecx
  40aecd:	call   0x3b3553a7
  40aed2:	or     al,0xc
  40aed4:	les    edx,FWORD PTR [ebx-0x2]
  40aed7:	(bad)  
  40aed8:	fdiv   DWORD PTR [ebx+0x23e92c74]
  40aede:	dec    edi
  40aedf:	cmp    bl,BYTE PTR [ebx+eax*8]
  40aee2:	cdq    
  40aee3:	or     BYTE PTR [edi+0x52e21a73],cl
  40aee9:	aaa    
  40aeea:	pop    ds
  40aeeb:	or     ebx,DWORD PTR ss:[eax+edx*4]
  40aeef:	shl    BYTE PTR [ebp-0x13],0x7f
  40aef3:	push   ds
  40aef4:	nop
  40aef5:	jnp    0x40af2e
  40aef7:	shl    edx,1
  40aef9:	inc    esp
  40aefa:	mov    ah,0xfe
  40aefc:	sub    BYTE PTR [edi],dh
  40aefe:	out    0x73,al
  40af00:	imul   esp,DWORD PTR [ecx],0xffffffde
  40af03:	icebp  
  40af04:	imul   BYTE PTR [esi+0x6b]
  40af07:	dec    DWORD PTR [eax]
  40af09:	fst    QWORD PTR [eax]
  40af0b:	(bad)
  40af0e:	and    al,BYTE PTR [esi]
  40af10:	dec    esp
  40af11:	scas   al,BYTE PTR es:[edi]
  40af12:	clc    
  40af13:	fwait
  40af14:	pop    ecx
  40af15:	mov    eax,ds:0xd40d21f2
  40af1a:	outs   dx,DWORD PTR ds:[esi]
  40af1b:	or     DWORD PTR [edx+edx*4],ebx
  40af1e:	mov    cl,0x73
  40af20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af21:	ds pop edx
  40af23:	pop    esi
  40af24:	add    DWORD PTR [edx-0x78],0x57
  40af28:	push   ebp
  40af29:	jns    0x40af6f
  40af2b:	jecxz  0x40af68
  40af2d:	and    al,0x94
  40af2f:	or     al,ah
  40af31:	pop    es
  40af32:	inc    eax
  40af33:	rol    BYTE PTR [ebx],1
  40af35:	test   al,0x5e
  40af37:	dec    ebp
  40af38:	jmp    0x969662a
  40af3d:	aam    0x51
  40af3f:	imul   ebx,DWORD PTR [edx],0xa8ecf26f
  40af45:	dec    ecx
  40af46:	adc    al,0xfa
  40af48:	je     0x40af5e
  40af4a:	xor    al,0xdf
  40af4c:	mov    bh,0x8a
  40af4e:	pop    esp
  40af4f:	jo     0x40aef5
  40af51:	xor    al,BYTE PTR [edx-0x592bc897]
  40af57:	aas    
  40af58:	(bad)
  40af5c:	or     al,0x4
  40af5e:	inc    esi
  40af5f:	ss mov ch,0x8a
  40af62:	movzx  esp,WORD PTR [ecx]
  40af65:	(bad)  
  40af66:	gs std 
  40af68:	mul    DWORD PTR [edx-0x51]
  40af6b:	xor    al,0x2b
  40af6d:	cmp    eax,0x48671816
  40af72:	out    0xbf,al
  40af74:	push   ecx
  40af75:	push   ss
  40af76:	outs   dx,BYTE PTR ds:[esi]
  40af77:	sbb    ebx,DWORD PTR [ecx+0x24]
  40af7a:	inc    BYTE PTR ds:0xc513ee13
  40af80:	xchg   edx,eax
  40af81:	pop    es
  40af82:	push   es
  40af83:	add    esp,esp
  40af85:	popf   
  40af86:	sub    BYTE PTR [edi],bh
  40af88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af89:	das    
  40af8a:	mov    bh,0x7f
  40af8c:	test   DWORD PTR [esi],esp
  40af8e:	rol    dh,0x7e
  40af91:	or     BYTE PTR [edi-0x1f],cl
  40af94:	add    al,0xc4
  40af96:	pop    ebp
  40af97:	cld    
  40af98:	ret    0x3d8a
  40af9b:	pop    ebx
  40af9c:	inc    edx
  40af9d:	outs   dx,DWORD PTR ds:[esi]
  40af9e:	cmc    
  40af9f:	mov    ebp,0x558e807a
  40afa4:	mov    cl,0x29
  40afa6:	scas   al,BYTE PTR es:[edi]
  40afa7:	enter  0xb2d8,0x10
  40afab:	and    DWORD PTR [edi+0x7f],0xffffffbe
  40afaf:	nop
  40afb0:	stos   DWORD PTR es:[edi],eax
  40afb1:	mov    eax,ds:0xaad68bc0
  40afb6:	dec    edx
  40afb8:	or     DWORD PTR [edi+eiz*4+0x12],eax
  40afbc:	or     DWORD PTR [ecx-0x34],eax
  40afbf:	add    al,BYTE PTR ds:0x7b8f718a
  40afc5:	inc    DWORD PTR [esi]
  40afc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afc8:	ins    DWORD PTR es:[edi],dx
  40afc9:	or     edi,eax
  40afcb:	pusha  
  40afcc:	mov    ds:0x362acc5d,eax
  40afd1:	add    BYTE PTR [edx],al
  40afd3:	aas    
  40afd4:	cli    
  40afd5:	ds ja  0x40aff4
  40afd8:	out    0xbf,al
  40afda:	fnstcw WORD PTR [ecx-0x6d]
  40afdd:	sti    
  40afde:	xchg   esp,eax
  40afdf:	mov    al,ds:0x2a354766
  40afe4:	das    
  40afe5:	add    DWORD PTR [eax],0x87bafeb3
  40afeb:	leave  
  40afec:	inc    ebx
  40afed:	shl    BYTE PTR [ebp+0x5f],cl
  40aff0:	jl     0x40afb2
  40aff2:	mov    ebp,0x10e3e128
  40aff7:	mov    ds,ebp
  40aff9:	jmp    0xb078:0xfbc98384
  40b000:	add    al,0x32
  40b002:	and    ah,BYTE PTR es:[ecx]
  40b005:	mov    DWORD PTR ds:0xad7af117,ebp
  40b00b:	hlt    
  40b00c:	sub    eax,0xfaffd057
  40b011:	jo     0x40b048
  40b013:	out    0xf3,eax
  40b015:	stos   DWORD PTR es:[edi],eax
  40b016:	or     edi,0xfffffffc
  40b019:	aaa    
  40b01a:	out    dx,eax
  40b01b:	sbb    bh,bh
  40b01d:	pop    ecx
  40b01e:	add    BYTE PTR [esi-0x8],dl
  40b021:	or     bh,BYTE PTR [edx]
  40b023:	sbb    DWORD PTR [ebx+0x77],ebx
  40b026:	test   BYTE PTR [eax+0x67],dh
  40b029:	call   0x620f:0x5ddb3d2f
  40b030:	arpl   WORD PTR [ecx+eax*4-0x58bf661d],si
  40b037:	fadd   DWORD PTR [ebx]
  40b039:	es aam 0x26
  40b03c:	mov    ah,0xbc
  40b03e:	mov    ds:0x199536dc,al
  40b043:	cmp    al,0x2c
  40b045:	dec    ebx
  40b046:	stc    
  40b047:	cmc    
  40b048:	idiv   DWORD PTR [edx]
  40b04a:	cmp    eax,0xb2ece52b
  40b04f:	ret    
  40b050:	retf   0x73bc
  40b053:	sahf   
  40b054:	js     0x40b05d
  40b056:	pop    ebp
  40b057:	ret    
  40b058:	hlt    
  40b059:	bound  ebx,QWORD PTR [ebx+0x7]
  40b05c:	je     0x40b076
  40b05e:	add    ch,dl
  40b060:	mov    esp,0xa69d485
  40b065:	adc    ecx,DWORD PTR [ecx+0x5c]
  40b068:	nop
  40b069:	(bad)  
  40b06a:	fisub  WORD PTR [eax]
  40b06c:	out    0x58,al
  40b06e:	loope  0x40b0e9
  40b070:	and    DWORD PTR [ebx-0x42eb3d60],ecx
  40b076:	dec    esi
  40b077:	pop    eax
  40b078:	or     BYTE PTR [ebp-0x6a],bh
  40b07b:	add    bh,ch
  40b07d:	clc    
  40b07e:	test   al,0xf3
  40b080:	sbb    ch,BYTE PTR [edx]
  40b082:	sbb    DWORD PTR [esi],esp
  40b084:	pushf  
  40b085:	jle    0x40b0b9
  40b087:	test   esp,0xfc9e6bd4
  40b08d:	dec    esi
  40b08e:	and    al,BYTE PTR [esi]
  40b090:	into   
  40b091:	inc    ecx
  40b092:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b094:	mov    BYTE PTR [ecx+ebp*4-0x3f],ch
  40b098:	dec    esp
  40b099:	fwait
  40b09a:	(bad)  
  40b09b:	and    edi,edx
  40b09d:	lea    eax,[edi]
  40b09f:	sub    bh,BYTE PTR [ebp-0x27c2c9b4]
  40b0a5:	imul   esi,DWORD PTR [edx-0x3d9b3c8b],0x16
  40b0ac:	xchg   ecx,eax
  40b0ad:	jmp    0x40b0f0
  40b0af:	rcr    BYTE PTR [edi+0x33],cl
  40b0b2:	or     DWORD PTR [esp+ebp*2-0x76],ecx
  40b0b6:	jmp    0x40b047
  40b0b8:	pop    ebp
  40b0b9:	call   0x30662bc4
  40b0be:	lock inc ebp
  40b0c0:	ins    BYTE PTR es:[edi],dx
  40b0c1:	fsub   DWORD PTR [ebp-0x62d3e05f]
  40b0c7:	das    
  40b0c8:	in     al,0x9c
  40b0ca:	cwde   
  40b0cb:	adc    edi,edx
  40b0cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0ce:	add    ebx,0xfffffff8
  40b0d1:	jo     0x40b0ef
  40b0d3:	(bad)  
  40b0d4:	cmp    esi,DWORD PTR [ebx]
  40b0d6:	xchg   ecx,eax
  40b0d7:	test   DWORD PTR ds:0x4ce04e6f,esi
  40b0dd:	push   ss
  40b0de:	sahf   
  40b0df:	jmp    0x40b0fe
  40b0e1:	ror    cl,0x1c
  40b0e4:	popf   
  40b0e5:	pusha  
  40b0e6:	cmovs  ebp,DWORD PTR [edx+0x73927a2b]
  40b0ed:	and    BYTE PTR [edx-0x6f0bcd5d],dh
  40b0f3:	cmc    
  40b0f4:	sti    
  40b0f5:	jmp    0x40b135
  40b0f7:	es hlt 
  40b0f9:	dec    ebp
  40b0fa:	test   DWORD PTR [esi],ecx
  40b0fc:	push   0xffffffee
  40b0fe:	fadd   DWORD PTR [ecx]
  40b100:	les    ecx,FWORD PTR [esi]
  40b102:	mov    es,ebx
  40b104:	fisubr DWORD PTR [edi]
  40b106:	sub    BYTE PTR [ebp-0x10],dh
  40b109:	mov    edi,0xb8d0e746
  40b10e:	retf   
  40b10f:	loop   0x40b0f4
  40b111:	lds    ebx,FWORD PTR [ecx+0x563c508e]
  40b117:	or     esi,DWORD PTR [ebx-0x28bb803e]
  40b11d:	sahf   
  40b11e:	mov    esp,0x2fd486a7
  40b123:	in     eax,dx
  40b124:	or     DWORD PTR [ecx],0x41fc7c88
  40b12a:	mov    BYTE PTR [edi+0x62],ch
  40b12d:	(bad)  
  40b12e:	pop    edi
  40b12f:	and    bl,BYTE PTR [edi-0x14f85148]
  40b135:	repz dec esi
  40b137:	mov    dh,0xec
  40b139:	mov    ds:0xbafdb197,eax
  40b13e:	mov    bl,0xda
  40b141:	adc    eax,0x65193049
  40b146:	and    al,BYTE PTR [edx]
  40b148:	aam    0xb2
  40b14a:	enter  0xecfa,0xb7
  40b14e:	inc    esp
  40b14f:	push   ebx
  40b150:	cwde   
  40b151:	push   0x8178af06
  40b156:	popa   
  40b157:	imul   edi,DWORD PTR [edx-0x39772c9c],0xffffffaa
  40b15e:	push   0x70
  40b160:	and    ebx,DWORD PTR [ebp+0x34466e34]
  40b166:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b167:	test   BYTE PTR [ebx+0x6a049790],bh
  40b16d:	xor    dh,BYTE PTR [esi-0x46]
  40b170:	mov    ebx,0x2678d9b1
  40b175:	or     BYTE PTR [esi+edi*2-0x39459d80],0xf8
  40b17d:	mov    esi,0x13bbb3f6
  40b182:	fst    QWORD PTR [ebp+0x38002c4b]
  40b188:	inc    DWORD PTR [esi+0x41]
  40b18b:	push   edx
  40b18c:	mov    edx,0xa9d369d1
  40b191:	lea    eax,[eax]
  40b193:	add    al,0x80
  40b195:	cli    
  40b196:	scas   eax,DWORD PTR es:[edi]
  40b197:	call   DWORD PTR [eax+eiz*1-0x3fa2007c]
  40b19e:	jle    0x40b1d2
  40b1a0:	fisubr DWORD PTR [ebp-0x723bfc74]
  40b1a6:	movups XMMWORD PTR [edi-0x218f8b3c],xmm7
  40b1ad:	jg     0x40b195
  40b1af:	(bad)  
  40b1b0:	mov    cl,0x65
  40b1b2:	retf   
  40b1b3:	sub    edx,DWORD PTR [ebp+0x42]
  40b1b6:	inc    eax
  40b1b7:	xor    dl,BYTE PTR [ecx+0x33]
  40b1ba:	xchg   ecx,eax
  40b1bb:	mov    edi,0x573c7b98
  40b1c0:	add    eax,0x2ab06482
  40b1c5:	in     al,dx
  40b1c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1c7:	cmc    
  40b1c8:	pop    eax
  40b1c9:	sbb    DWORD PTR [esi],ecx
  40b1cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1cc:	jmp    0xf45e02de
  40b1d1:	sbb    al,0xfe
  40b1d3:	dec    ecx
  40b1d4:	pop    esi
  40b1d5:	out    0xb7,al
  40b1d7:	push   ds
  40b1d8:	dec    ebp
  40b1d9:	add    al,0xcb
  40b1db:	ret    0x9186
  40b1de:	mov    ah,0xe
  40b1e0:	push   eax
  40b1e1:	mov    ebx,0xc174b027
  40b1e6:	call   0x9e86:0xd465e871
  40b1ed:	ins    DWORD PTR es:[edi],dx
  40b1ee:	mov    ecx,0x9aac02b2
  40b1f3:	jnp    0x40b1d0
  40b1f5:	(bad)  
  40b1f7:	shl    BYTE PTR [edi+0x69],1
  40b1fa:	inc    eax
  40b1fb:	inc    edx
  40b1fc:	cs push cs
  40b1fe:	cmp    ecx,ecx
  40b200:	shl    edi,1
  40b202:	xchg   edi,eax
  40b203:	push   eax
  40b204:	aas    
  40b205:	pop    esp
  40b206:	sbb    bh,BYTE PTR [esi+0x182cbca4]
  40b20c:	das    
  40b20d:	lods   al,BYTE PTR ds:[esi]
  40b20e:	mov    es,edi
  40b210:	cmp    eax,0xc83ebbfd
  40b215:	cli    
  40b216:	push   edi
  40b217:	xchg   ebx,eax
  40b218:	sbb    BYTE PTR [ebp-0x7f],cl
  40b21b:	inc    edi
  40b21c:	fild   QWORD PTR [ebp+0x19]
  40b21f:	lahf   
  40b220:	into   
  40b221:	and    eax,0xfb3f5b54
  40b226:	repnz cmp esp,0xffffffa3
  40b22a:	adc    al,0x2
  40b22c:	aad    0x64
  40b22e:	xlat   BYTE PTR ds:[ebx]
  40b22f:	mov    dl,0x3
  40b231:	or     eax,DWORD PTR [eax+0x70]
  40b234:	sahf   
  40b235:	daa    
  40b236:	test   DWORD PTR [ebp-0x22095357],eax
  40b23c:	adc    al,0x4d
  40b23e:	fiadd  WORD PTR [eax+0x561b01d4]
  40b244:	push   eax
  40b245:	mov    al,ds:0xe6831d84
  40b24a:	gs pop es
  40b24c:	adc    eax,0xe5bd0047
  40b251:	test   al,0xcb
  40b253:	xchg   ebx,eax
  40b254:	shr    BYTE PTR [ebx+0x2],1
  40b257:	loopne 0x40b259
  40b259:	out    dx,al
  40b25a:	mov    al,0xfa
  40b25c:	mov    BYTE PTR [ebx],dh
  40b25e:	(bad)  
  40b25f:	call   0xa202d52d
  40b264:	iret   
  40b265:	mov    ch,0xf5
  40b267:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b268:	loop   0x40b2c4
  40b26a:	sti    
  40b26b:	test   DWORD PTR [ebx],0xedec360b
  40b271:	sti    
  40b272:	dec    esp
  40b273:	retf   0x8662
  40b276:	mov    bl,0x6d
  40b278:	pop    ecx
  40b279:	mov    dl,ah
  40b27b:	neg    BYTE PTR [esi+0x5fcb66cd]
  40b281:	push   DWORD PTR [ebx-0x25]
  40b284:	daa    
  40b285:	fdivr  DWORD PTR [ebx+0x1a]
  40b288:	pcmpeqw mm1,QWORD PTR [edx+0x2c]
  40b28c:	imul   ebp,DWORD PTR [edi-0x1a],0xedc36bec
  40b293:	pop    edi
  40b294:	jnp    0x40b2da
  40b296:	xchg   esp,eax
  40b297:	out    0x1c,eax
  40b299:	loop   0x40b22d
  40b29b:	ss jl  0x40b2db
  40b29e:	test   BYTE PTR [esi-0x3297058d],bl
  40b2a4:	adc    BYTE PTR [ebp+0x1f],0xef
  40b2a8:	push   ebp
  40b2a9:	dec    ecx
  40b2aa:	(bad)  
  40b2ab:	cdq    
  40b2ac:	outs   dx,BYTE PTR ds:[esi]
  40b2ad:	mov    al,0x30
  40b2af:	or     al,0x53
  40b2b1:	inc    ebx
  40b2b2:	pushf  
  40b2b3:	sub    DWORD PTR [edi-0x33],edx
  40b2b6:	dec    ebp
  40b2b7:	stc    
  40b2b8:	out    dx,al
  40b2b9:	mov    esp,eax
  40b2bb:	inc    esp
  40b2bc:	fwait
  40b2bd:	dec    ebp
  40b2be:	xchg   ecx,eax
  40b2bf:	(bad)  
  40b2c0:	aad    0xa5
  40b2c2:	addr16 sti 
  40b2c4:	fistp  WORD PTR [eax-0x69]
  40b2c7:	out    dx,al
  40b2c8:	rcr    BYTE PTR [edx+0x7bb615ea],cl
  40b2ce:	scas   al,BYTE PTR es:[edi]
  40b2cf:	das    
  40b2d0:	fnop   
  40b2d2:	pop    ecx
  40b2d3:	aas    
  40b2d4:	sahf   
  40b2d5:	mov    dl,0xd0
  40b2d7:	mov    ds:0x54158046,eax
  40b2dc:	rcr    DWORD PTR [eax+0x3a2a9ba0],cl
  40b2e2:	rcr    esp,0x4b
  40b2e5:	sti    
  40b2e6:	or     al,0x57
  40b2e8:	mov    ecx,0xadb0b56
  40b2ed:	inc    esi
  40b2ee:	shr    edx,cl
  40b2f0:	jg     0x40b2fe
  40b2f2:	lds    ebx,FWORD PTR [ecx]
  40b2f4:	mov    ebx,0xfe584e12
  40b2f9:	mov    WORD PTR [eax],?
  40b2fb:	mov    al,0x6a
  40b2fd:	dec    eax
  40b2fe:	fldenv [ecx-0x723e5e66]
  40b304:	outs   dx,BYTE PTR ds:[esi]
  40b305:	and    BYTE PTR [ecx+0x16],cl
  40b308:	or     DWORD PTR ds:0x979e983b,ecx
  40b30e:	push   0xffffffcd
  40b310:	(bad)  
  40b311:	inc    ebx
  40b312:	cmp    ebp,DWORD PTR [ebx-0x10]
  40b315:	xchg   edi,eax
  40b316:	sar    BYTE PTR ds:0xb7e4241c,1
  40b31c:	dec    ebx
  40b31d:	lods   eax,DWORD PTR ds:[esi]
  40b31e:	inc    ebp
  40b31f:	sub    bl,BYTE PTR [eax+0x436270c0]
  40b325:	shl    BYTE PTR [edx-0xe],1
  40b328:	das    
  40b329:	scas   eax,DWORD PTR es:[edi]
  40b32a:	mov    ds:0xe620b4e0,al
  40b32f:	mov    al,0xf9
  40b331:	(bad)  [ebp+0x5]
  40b334:	mov    dl,0x94
  40b336:	lods   eax,DWORD PTR ds:[esi]
  40b337:	cdq    
  40b338:	sbb    eax,0xb845b6dc
  40b33d:	xchg   ebp,eax
  40b33e:	mov    bl,0xf6
  40b340:	pushf  
  40b341:	scas   al,BYTE PTR es:[edi]
  40b342:	retf   0x4da
  40b345:	aaa    
  40b346:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b347:	xchg   ebx,eax
  40b348:	and    DWORD PTR [edx-0x23],ebx
  40b34b:	jbe    0x40b2e0
  40b34d:	push   0xffffffae
  40b34f:	push   cs
  40b350:	sub    al,0x63
  40b352:	(bad)  
  40b353:	in     al,0xd7
  40b355:	ficomp DWORD PTR [ebx]
  40b357:	and    DWORD PTR ds:0xf44d4175,eax
  40b35d:	int    0xf5
  40b35f:	mov    esi,0x8f42197f
  40b364:	mov    esi,0x6d83007a
  40b369:	out    dx,al
  40b36a:	shl    DWORD PTR [edx+0xf],0xbd
  40b36e:	push   ebp
  40b36f:	mov    ebp,0x69cfb85b
  40b374:	scas   al,BYTE PTR es:[edi]
  40b375:	push   ebx
  40b376:	xor    ecx,DWORD PTR [ebp-0x2f]
  40b379:	push   ebp
  40b37b:	fs mov edx,0xd5742141
  40b381:	adc    dh,BYTE PTR [esi]
  40b383:	inc    eax
  40b384:	out    0xb7,eax
  40b386:	sbb    BYTE PTR [edx],ah
  40b388:	mov    WORD PTR [edi-0x78],gs
  40b38b:	les    edi,FWORD PTR ds:0xfcdd43bd
  40b391:	outs   dx,BYTE PTR ds:[esi]
  40b392:	add    eax,0xea4c3a4c
  40b397:	into   
  40b398:	imul   ebx,ebx,0x4024905e
  40b39e:	adc    bl,ch
  40b3a0:	cld    
  40b3a1:	pop    ss
  40b3a2:	stos   DWORD PTR es:[edi],eax
  40b3a3:	inc    esp
  40b3a4:	repz retf 
  40b3a6:	dec    ecx
  40b3a7:	mov    edx,ss
  40b3a9:	mov    cl,0xbc
  40b3ab:	pusha  
  40b3ac:	test   al,0x95
  40b3ae:	mov    cl,0x78
  40b3b0:	nop
  40b3b1:	mov    edx,0x7ad2d260
  40b3b6:	mov    ah,0xac
  40b3b8:	add    DWORD PTR [eax-0x5473ad53],edi
  40b3be:	data16 in al,dx
  40b3c0:	sbb    BYTE PTR [edi+0xe],0xac
  40b3c4:	mov    ah,0xb
  40b3c6:	inc    ebx
  40b3c7:	addr16 pop eax
  40b3c9:	mov    ch,0xd2
  40b3cb:	aad    0xc
  40b3cd:	mov    esi,0x705fca97
  40b3d2:	pop    ebx
  40b3d3:	add    al,0x8d
  40b3d5:	xchg   ecx,eax
  40b3d6:	ds fs stos BYTE PTR es:[edi],al
  40b3d9:	pop    es
  40b3da:	jns    0x40b38b
  40b3dc:	out    0x45,al
  40b3de:	xor    DWORD PTR [edx],ecx
  40b3e0:	ret    
  40b3e1:	in     al,dx
  40b3e2:	jmp    0x40b3eb
  40b3e4:	repnz pop ebx
  40b3e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3e7:	xlat   BYTE PTR ds:[ebx]
  40b3e8:	mov    bl,BYTE PTR [eax+0x37f36f76]
  40b3ee:	shrd   DWORD PTR ss:[eax],esi,cl
  40b3f2:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3f4:	adc    edx,esi
  40b3f6:	cmp    dl,bh
  40b3f8:	mov    cl,0xeb
  40b3fa:	dec    ebx
  40b3fb:	fmul   DWORD PTR gs:[eax+0x415552ab]
  40b402:	aaa    
  40b403:	or     dl,BYTE PTR [edx]
  40b405:	push   es
  40b406:	retf   0x6c40
  40b409:	mov    cl,0xe8
  40b40b:	pop    DWORD PTR [esi+0x387c86e2]
  40b411:	imul   DWORD PTR [edi+0x64]
  40b414:	cmp    edx,DWORD PTR [edi-0x58473b35]
  40b41a:	mov    ah,0x5d
  40b41c:	mov    dl,0x9
  40b41e:	dec    eax
  40b41f:	retf   
  40b420:	push   0x24
  40b422:	xchg   BYTE PTR [ecx+0x677b4e21],dh
  40b428:	mov    ?,WORD PTR [edx]
  40b42a:	scas   al,BYTE PTR es:[edi]
  40b42b:	mov    ebp,0x7065e7f3
  40b430:	cmp    esi,DWORD PTR [edx-0x1]
  40b433:	cmp    ebx,DWORD PTR [esp+ebx*1]
  40b436:	shl    BYTE PTR [edx+edx*1+0x5f],1
  40b43a:	ret    0x8ef8
  40b43d:	xchg   edx,eax
  40b43e:	cmp    BYTE PTR fs:[esi-0x13ad6e6e],0xc5
  40b446:	mov    WORD PTR [eax],ds
  40b448:	mov    ebp,0x5d1c3d20
  40b44d:	(bad)  
  40b44e:	jbe    0x40b407
  40b450:	cld    
  40b451:	push   0xffffffb1
  40b453:	loopne 0x40b43b
  40b455:	mov    dl,0x29
  40b457:	and    BYTE PTR [esi+0x72],0x63
  40b45b:	(bad)
  40b45e:	les    ebx,FWORD PTR [ecx+0x70]
  40b461:	sub    dl,al
  40b463:	(bad)  
  40b464:	xchg   ebp,eax
  40b465:	inc    esi
  40b466:	push   ss
  40b467:	push   0xfffffff4
  40b469:	data16 or BYTE PTR [ebx-0x384f3be3],dh
  40b470:	fsub   DWORD PTR [eax-0x15838693]
  40b476:	ret    0x7166
  40b479:	push   ds
  40b47a:	scas   al,BYTE PTR es:[edi]
  40b47b:	xchg   ecx,eax
  40b47c:	push   cs
  40b47d:	xchg   edx,eax
  40b47e:	test   BYTE PTR [edx-0x4af25552],bl
  40b484:	inc    edi
  40b485:	ds sbb ah,cl
  40b488:	sub    DWORD PTR [ebx+0x73f6b04a],0x3054bd
  40b492:	aam    0x54
  40b494:	or     DWORD PTR [ebx+edi*1+0x65],eax
  40b498:	sub    eax,DWORD PTR [eax]
  40b49a:	daa    
  40b49b:	lahf   
  40b49c:	add    al,BYTE PTR [ebx+0x34d63af0]
  40b4a2:	jge    0x40b506
  40b4a4:	ins    DWORD PTR es:[edi],dx
  40b4a5:	(bad)  
  40b4a6:	jae    0x40b4b0
  40b4a8:	xor    al,0x76
  40b4aa:	dec    esp
  40b4ab:	add    BYTE PTR [ebx-0x47473d66],bh
  40b4b1:	fwait
  40b4b2:	div    DWORD PTR [esi+0x52]
  40b4b5:	xor    DWORD PTR [edx-0x68],esi
  40b4b8:	ins    DWORD PTR es:[edi],dx
  40b4b9:	(bad)  
  40b4ba:	dec    esi
  40b4bb:	mov    cl,0x62
  40b4bd:	xchg   ebp,eax
  40b4be:	popf   
  40b4bf:	mov    dh,BYTE PTR [ebp-0x6583789b]
  40b4c5:	sbb    DWORD PTR [edi+0x38589ac6],edx
  40b4cb:	and    al,0xda
  40b4cd:	fldcw  WORD PTR [eax+0x77]
  40b4d0:	jbe    0x40b4a0
  40b4d2:	lock retf 0xf7ec
  40b4d6:	popa   
  40b4d7:	popa   
  40b4d8:	pop    eax
  40b4d9:	clc    
  40b4da:	cwde   
  40b4db:	mov    fs,WORD PTR [ebp+0x4d62bf4f]
  40b4e1:	aaa    
  40b4e2:	lds    esp,FWORD PTR [ebp+0x32b50e75]
  40b4e8:	fwait
  40b4e9:	xlat   BYTE PTR ds:[ebx]
  40b4ea:	mov    esp,0xf5269e2
  40b4ef:	hlt    
  40b4f0:	adc    BYTE PTR [edx-0x2f],dh
  40b4f3:	xor    al,BYTE PTR [ebx-0x2]
  40b4f6:	cmc    
  40b4f7:	push   es
  40b4f8:	sti    
  40b4f9:	cwde   
  40b4fa:	or     dl,BYTE PTR [edx-0x49808878]
  40b500:	push   ecx
  40b501:	jmp    0x40b53e
  40b503:	cmp    eax,0x5ef277f
  40b508:	into   
  40b509:	shr    DWORD PTR [edi+0x56],0x3c
  40b50d:	xor    ah,BYTE PTR [eax-0x2e]
  40b510:	js     0x40b54a
  40b512:	mov    ch,0x37
  40b514:	popa   
  40b515:	inc    ebx
  40b516:	or     edi,DWORD PTR [ebx]
  40b518:	lods   eax,DWORD PTR ds:[esi]
  40b519:	lock cdq 
  40b51b:	and    esp,DWORD PTR [ecx]
  40b51d:	aas    
  40b51e:	retf   
  40b51f:	or     DWORD PTR [ebx-0x1acbd1fd],esp
  40b525:	fsubr  QWORD PTR ds:0xc641e0a1
  40b52b:	shl    esi,0x60
  40b52e:	iret   
  40b52f:	fld    TBYTE PTR ds:[ebx-0x4b]
  40b533:	gs dec ebp
  40b535:	add    DWORD PTR [ecx],0x4
  40b538:	icebp  
  40b539:	inc    ebx
  40b53a:	js     0x40b4da
  40b53c:	and    al,0xb9
  40b53e:	mov    ebp,DWORD PTR [ebx-0x39]
  40b541:	pop    ebx
  40b542:	stos   BYTE PTR es:[edi],al
  40b543:	jbe    0x40b546
  40b545:	rol    BYTE PTR [ecx+0x4d],0xa0
  40b549:	and    dh,BYTE PTR [esi]
  40b54b:	leave  
  40b54c:	es lahf 
  40b54e:	sahf   
  40b54f:	mov    ah,0xc3
  40b551:	scas   eax,DWORD PTR es:[edi]
  40b552:	mov    dl,0x6c
  40b554:	adc    dl,0xee
  40b557:	scas   eax,DWORD PTR es:[edi]
  40b558:	ret    
  40b559:	mov    ebx,0xd5590eb1
  40b55e:	loope  0x40b5d7
  40b560:	mov    edx,0x94893950
  40b565:	loope  0x40b5a7
  40b567:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b568:	stos   DWORD PTR es:[edi],eax
  40b569:	outs   dx,BYTE PTR ds:[esi]
  40b56a:	jbe    0x40b577
  40b56c:	(bad)  
  40b56d:	in     eax,dx
  40b56e:	iret   
  40b56f:	retf   0x99fc
  40b572:	xchg   ah,ch
  40b574:	jl     0x40b563
  40b576:	jo     0x40b57d
  40b578:	push   edx
  40b579:	jp     0x40b52a
  40b57b:	push   eax
  40b57c:	adc    bh,BYTE PTR [edi+edx*4+0x4e]
  40b580:	les    ebp,FWORD PTR [ebp-0x78]
  40b583:	inc    edi
  40b584:	test   BYTE PTR [esi-0x16],ah
  40b587:	dec    ebx
  40b588:	mov    bh,0x74
  40b58a:	int    0x56
  40b58c:	fyl2x  
  40b58e:	mov    edx,0x7f3f3302
  40b593:	jmp    0x42d2:0xa7d4863e
  40b59a:	movzx  ebp,BYTE PTR [ebx]
  40b59d:	aaa    
  40b59e:	fcom   QWORD PTR [edx+0x5b]
  40b5a1:	int    0xa6
  40b5a3:	sbb    al,0x4f
  40b5a5:	scas   al,BYTE PTR es:[di]
  40b5a7:	std    
  40b5a8:	jno    0x40b52a
  40b5aa:	(bad)  
  40b5ab:	rol    BYTE PTR [ecx-0x54],cl
  40b5ae:	sub    ebx,DWORD PTR [edi+0x61]
  40b5b1:	xchg   dx,ax
  40b5b3:	mov    edi,eax
  40b5b5:	and    eax,0xd3668bc7
  40b5ba:	sub    ah,BYTE PTR [ebp+esi*2+0x9]
  40b5be:	fld    DWORD PTR [edx+0x3a]
  40b5c1:	jl     0x40b5e0
  40b5c3:	xchg   esi,eax
  40b5c4:	scas   eax,DWORD PTR es:[edi]
  40b5c5:	pop    ebx
  40b5c6:	aaa    
  40b5c7:	ret    0x3876
  40b5ca:	mov    al,ds:0xe76ad496
  40b5cf:	icebp  
  40b5d0:	adc    bh,dh
  40b5d2:	dec    esp
  40b5d3:	add    edi,DWORD PTR [ecx-0x5e]
  40b5d6:	inc    esi
  40b5d7:	push   edx
  40b5d8:	outs   dx,DWORD PTR ds:[esi]
  40b5d9:	sbb    BYTE PTR [ecx-0x79],ah
  40b5dc:	or     al,0x12
  40b5de:	ss jno 0x40b586
  40b5e1:	push   eax
  40b5e2:	dec    ebp
  40b5e3:	cs mov ebx,0x7191aab0
  40b5e9:	test   DWORD PTR ds:[eax+0x23ae931a],0x14ecc5ed
  40b5f4:	xchg   ebx,eax
  40b5f5:	push   eax
  40b5f6:	jae    0x40b5e3
  40b5f8:	cmp    bh,BYTE PTR [eax+0x69321518]
  40b5fe:	pusha  
  40b5ff:	sbb    edi,ebx
  40b601:	les    ebx,FWORD PTR [esi+0x5f]
  40b604:	push   es
  40b605:	xchg   esp,eax
  40b606:	pop    edi
  40b607:	(bad)  
  40b608:	pcmpeqw mm5,QWORD PTR [esi+0x385ee1e8]
  40b60f:	mov    bh,0x46
  40b611:	lds    ebx,FWORD PTR [eax+ecx*2-0x4c]
  40b615:	lods   al,BYTE PTR ds:[esi]
  40b616:	xchg   ebp,eax
  40b617:	push   ebp
  40b618:	and    ecx,DWORD PTR [ebx]
  40b61a:	mov    ebx,0x7958a5d4
  40b61f:	dec    esi
  40b620:	call   0xd0a8b4da
  40b625:	sar    BYTE PTR [eax+0x46472fa4],0xa2
  40b62c:	in     eax,dx
  40b62d:	cdq    
  40b62e:	jp     0x40b61d
  40b630:	cmc    
  40b631:	or     BYTE PTR [esi-0x10f78a33],bl
  40b637:	ja     0x40b5c0
  40b639:	scas   al,BYTE PTR es:[edi]
  40b63a:	push   edx
  40b63b:	in     al,dx
  40b63c:	mov    eax,ds:0xac97ed48
  40b641:	xlat   BYTE PTR ds:[ebx]
  40b642:	push   esp
  40b643:	(bad)  
  40b644:	xor    DWORD PTR [eax+eiz*2+0x7c],ebx
  40b648:	adc    ecx,DWORD PTR [ebx-0x2438465e]
  40b64e:	dec    edx
  40b64f:	arpl   bx,ax
  40b651:	loop   0x40b68f
  40b653:	cld    
  40b654:	dec    eax
  40b655:	outs   dx,DWORD PTR ds:[esi]
  40b656:	mov    esi,ecx
  40b658:	mov    edi,0x55792341
  40b65d:	jne    0x40b654
  40b65f:	adc    DWORD PTR [edx-0x65f72add],ebp
  40b665:	sbb    cl,BYTE PTR [edx]
  40b667:	inc    ebp
  40b668:	sbb    ebp,0x26
  40b66b:	xchg   ebx,eax
  40b66c:	das    
  40b66d:	int3   
  40b66e:	shld   DWORD PTR [edx-0x66],ebp,cl
  40b672:	scas   eax,DWORD PTR es:[edi]
  40b673:	dec    ebx
  40b674:	enter  0xf033,0xb
  40b678:	lock lahf 
  40b67a:	mov    al,0xb1
  40b67c:	inc    esi
  40b67d:	jmp    0x40b6c9
  40b67f:	cdq    
  40b680:	lods   eax,DWORD PTR ds:[esi]
  40b681:	inc    ecx
  40b682:	pop    esp
  40b683:	cmp    eax,0xb133c939
  40b688:	push   eax
  40b689:	and    al,0x33
  40b68b:	xchg   DWORD PTR ds:0xa942fee7,edx
  40b691:	scas   eax,DWORD PTR es:[edi]
  40b692:	int3   
  40b693:	mov    eax,ds:0x6c16915c
  40b698:	push   ecx
  40b699:	and    ah,BYTE PTR [edi]
  40b69b:	aaa    
  40b69c:	add    BYTE PTR [ebx],bl
  40b69e:	sbb    al,0x58
  40b6a0:	out    0x15,eax
  40b6a2:	inc    esp
  40b6a3:	bound  ebx,QWORD PTR [esi+0x46368a65]
  40b6a9:	dec    esi
  40b6aa:	xchg   esp,eax
  40b6ab:	sbb    al,0xa2
  40b6ad:	jbe    0x40b6c7
  40b6af:	pop    ecx
  40b6b0:	mov    edx,0x3adfd65d
  40b6b5:	sar    DWORD PTR [ecx+0x47],cl
  40b6b8:	int3   
  40b6b9:	shl    DWORD PTR [esi-0x3e],0xbb
  40b6bd:	jmp    0xb930b141
  40b6c2:	mov    ah,0x20
  40b6c4:	cwde   
  40b6c5:	mov    al,0x75
  40b6c7:	outs   dx,BYTE PTR ds:[esi]
  40b6c8:	rcr    DWORD PTR [edx],1
  40b6ca:	(bad)  
  40b6cb:	imul   ecx,ebx,0xc0529a8a
  40b6d1:	jmp    0xc5d0d6b7
  40b6d6:	inc    esp
  40b6d7:	xchg   edx,eax
  40b6d8:	jo     0x40b714
  40b6da:	scas   eax,DWORD PTR es:[edi]
  40b6db:	xchg   esp,eax
  40b6dc:	jns    0x40b737
  40b6de:	outs   dx,BYTE PTR ds:[esi]
  40b6df:	lahf   
  40b6e0:	sub    al,0x81
  40b6e2:	lahf   
  40b6e3:	loopne 0x40b763
  40b6e5:	or     BYTE PTR [ebx-0x42],dl
  40b6e8:	cmc    
  40b6e9:	sub    BYTE PTR [edx+ecx*4-0x31ce93c9],ah
  40b6f0:	push   ebx
  40b6f1:	xchg   BYTE PTR [esi+0x57277131],dl
  40b6f7:	mov    ds:0x3d0f0334,al
  40b6fc:	stos   DWORD PTR es:[edi],eax
  40b6fd:	push   ebp
  40b6fe:	lods   eax,DWORD PTR ds:[esi]
  40b6ff:	daa    
  40b700:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b701:	xchg   BYTE PTR [edi-0x4b517d56],ah
  40b707:	cdq    
  40b708:	mov    esi,0xf6f74506
  40b70d:	cmp    eax,0x1e289654
  40b712:	int3   
  40b713:	dec    edx
  40b714:	ss js  0x6c2bba46
  40b71b:	pop    edi
  40b71c:	push   ebp
  40b71d:	dec    ecx
  40b71e:	enter  0x5d2d,0x65
  40b722:	sub    cl,BYTE PTR [esi]
  40b724:	addr16 retf 
  40b726:	imul   ebx,DWORD PTR [ecx-0x4d],0x67
  40b72a:	lods   eax,DWORD PTR ds:[esi]
  40b72b:	mov    edx,0x623a1632
  40b730:	cli    
  40b731:	and    bh,al
  40b733:	cmp    dl,BYTE PTR [edx+0x51]
  40b736:	mov    gs,WORD PTR ds:0xcd70c79c
  40b73c:	cld    
  40b73d:	jns    0x40b6eb
  40b73f:	jmp    0x40b780
  40b741:	inc    ebp
  40b742:	sbb    BYTE PTR [ebp+0x7be8d4fd],ch
  40b748:	xchg   ebp,eax
  40b749:	mov    al,0xeb
  40b74b:	je     0x40b6e0
  40b74d:	sub    esp,DWORD PTR [eax+esi*2-0x6eac7f38]
  40b754:	cld    
  40b755:	push   cs
  40b756:	pusha  
  40b757:	cmp    eax,esi
  40b759:	ss pop esi
  40b75b:	mov    ebx,0x9272092a
  40b760:	fisub  DWORD PTR [edx+eax*2]
  40b763:	xchg   ebp,eax
  40b764:	dec    ebx
  40b765:	dec    BYTE PTR [ecx+eax*8]
  40b768:	in     al,dx
  40b769:	mov    edx,0x475875be
  40b76e:	jp     0x40b7dc
  40b770:	inc    ebx
  40b771:	pop    ebx
  40b772:	inc    ebx
  40b773:	dec    esi
  40b774:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b775:	pop    esp
  40b776:	test   eax,0xfbf1f314
  40b77b:	jno    0x40b785
  40b77d:	push   0xffffffcf
  40b77f:	mov    ebx,0x7259b3a2
  40b784:	and    al,0xa0
  40b786:	nop
  40b787:	and    al,0x49
  40b789:	xchg   ebx,ebx
  40b78b:	jo     0x40b7ba
  40b78d:	pushf  
  40b78e:	cmp    DWORD PTR [esi+0x679d69ca],ebp
  40b794:	dec    esi
  40b795:	xchg   DWORD PTR [esi-0x5d4cf452],ebp
  40b79b:	in     al,0xca
  40b79d:	repnz int3 
  40b79f:	into   
  40b7a0:	jne    0x40b7ea
  40b7a2:	jge    0x40b771
  40b7a4:	stc    
  40b7a5:	sbb    al,0x88
  40b7a7:	mov    ah,0x39
  40b7a9:	pop    esp
  40b7aa:	mov    WORD PTR [eax+0x3aee713f],es
  40b7b0:	ja     0x40b747
  40b7b2:	mov    edi,0xf954b28a
  40b7b7:	lods   al,BYTE PTR ds:[esi]
  40b7b8:	ja     0x40b80a
  40b7ba:	mov    al,0x6c
  40b7bc:	nop
  40b7bd:	loope  0x40b836
  40b7bf:	push   ebp
  40b7c0:	cdq    
  40b7c1:	pop    eax
  40b7c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7c3:	mov    eax,esi
  40b7c5:	pop    ebp
  40b7c6:	mov    al,ds:0xbb18fd22
  40b7cb:	sahf   
  40b7cc:	or     ecx,DWORD PTR gs:[edi+0x44]
  40b7d0:	call   0x41b7:0x68f12029
  40b7d7:	sub    al,BYTE PTR [eax+0x8]
  40b7da:	dec    edi
  40b7db:	dec    ecx
  40b7dc:	mov    ebp,0x13f3a2d2
  40b7e1:	ds cmp eax,0x7648158e
  40b7e7:	mov    al,0x5a
  40b7e9:	aam    0x84
  40b7eb:	jge    0x40b807
  40b7ed:	push   cs
  40b7ee:	aam    0xf2
  40b7f0:	enter  0x2cf6,0x3
  40b7f4:	and    dh,bh
  40b7f6:	push   esi
  40b7f7:	jle    0x40b7e7
  40b7f9:	(bad)  
  40b7fb:	in     eax,dx
  40b7fc:	xor    al,0x40
  40b7fe:	into   
  40b7ff:	sbb    cl,BYTE PTR [ebx-0x64]
  40b802:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b803:	dec    esp
  40b804:	mov    edx,0x6da942c
  40b809:	fcomp  DWORD PTR [ebx+0x5dc05d06]
  40b80f:	add    BYTE PTR [esi],dl
  40b811:	mov    dh,0xf
  40b813:	fadd   st(5),st
  40b815:	inc    edx
  40b816:	call   0xae73d398
  40b81b:	imul   ebp,DWORD PTR [edi-0x6212c589],0x59
  40b822:	repz imul edx,DWORD PTR [eax],0x50
  40b826:	iret   
  40b827:	mov    ecx,DWORD PTR [ebp-0x6c8903fd]
  40b82d:	cmp    ecx,0xffffffa3
  40b830:	jle    0x40b872
  40b832:	popa   
  40b833:	jg     0x40b827
  40b835:	rol    ah,cl
  40b837:	mov    eax,0x4d56befa
  40b83c:	into   
  40b83d:	loop   0x40b84d
  40b83f:	ret    0x7784
  40b842:	pop    ss
  40b843:	cmp    ah,BYTE PTR [edx-0x45]
  40b846:	mov    eax,0x4742d065
  40b84b:	inc    ebx
  40b84c:	add    al,0xae
  40b84e:	pop    edi
  40b84f:	shl    BYTE PTR [ebx],cl
  40b851:	mov    bl,0x92
  40b853:	(bad)  
  40b854:	sbb    DWORD PTR [edx],esi
  40b856:	mov    ds:0xc6958299,eax
  40b85b:	retf   
  40b85c:	xchg   edi,eax
  40b85d:	mov    WORD PTR [ebp-0xd],ss
  40b860:	hlt    
  40b861:	and    edx,DWORD PTR ds:0xede0d7d4
  40b867:	aad    0x7b
  40b869:	retf   0xb4e0
  40b86c:	dec    ebp
  40b86d:	stos   BYTE PTR es:[edi],al
  40b86e:	mov    bl,0x62
  40b870:	(bad)  
  40b872:	bound  ebx,QWORD PTR [ebp+0x4417139]
  40b878:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b879:	pushf  
  40b87a:	les    esi,FWORD PTR [eax-0x1762d6af]
  40b880:	imul   edi,DWORD PTR [eax+0x6391120b],0x90a1355f
  40b88a:	lods   eax,DWORD PTR cs:[esi]
  40b88c:	(bad)  
  40b88d:	aad    0xb6
  40b88f:	and    edx,DWORD PTR [eax]
  40b891:	repz or ebp,DWORD PTR [eax]
  40b894:	retf   
  40b895:	in     eax,0x9f
  40b897:	(bad)  
  40b899:	fmul   DWORD PTR [edi-0x72]
  40b89c:	add    ebp,DWORD PTR [edx+ebx*4]
  40b89f:	xchg   ecx,eax
  40b8a0:	sbb    BYTE PTR [ecx],0x1d
  40b8a3:	xchg   esp,eax
  40b8a4:	or     al,0x90
  40b8a6:	ror    DWORD PTR [ebx+0x6679005c],1
  40b8ac:	mov    WORD PTR [edi+0x1e174b86],cs
  40b8b2:	sub    eax,0x640623d3
  40b8b7:	repnz out 0xb2,eax
  40b8ba:	mov    edi,0x7383d114
  40b8bf:	adc    cl,BYTE PTR [ebp-0x50]
  40b8c2:	punpckhwd mm2,mm5
  40b8c5:	push   edx
  40b8c6:	dec    ecx
  40b8c7:	xlat   BYTE PTR ds:[ebx]
  40b8c8:	lods   al,BYTE PTR ds:[esi]
  40b8c9:	leave  
  40b8ca:	int3   
  40b8cb:	mov    ah,0x31
  40b8cd:	retf   
  40b8ce:	in     eax,0xf1
  40b8d0:	and    esp,DWORD PTR [ebp-0x59]
  40b8d3:	hlt    
  40b8d4:	mov    bl,0x63
  40b8d6:	pop    edi
  40b8d7:	adc    DWORD PTR [esi-0x61],ebx
  40b8da:	das    
  40b8db:	dec    ebx
  40b8dd:	xchg   ebx,eax
  40b8de:	pushf  
  40b8df:	adc    ecx,edi
  40b8e1:	push   edi
  40b8e2:	push   ss
  40b8e3:	clc    
  40b8e4:	push   ebx
  40b8e5:	mov    bh,0x4d
  40b8e7:	and    ebp,DWORD PTR [ebx+0x1f]
  40b8ea:	inc    esi
  40b8eb:	jle    0x40b87e
  40b8ed:	inc    ebp
  40b8ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8ef:	adc    eax,0x3d8a97c8
  40b8f4:	lock arpl sp,bx
  40b8f7:	push   ds
  40b8f8:	xor    DWORD PTR [esi+0x26ee54ef],0x71
  40b8ff:	adc    eax,0xbaf4db2e
  40b904:	add    al,dh
  40b906:	cmp    esp,ebx
  40b908:	fwait
  40b909:	in     al,0xe4
  40b90b:	aad    0xa6
  40b90d:	clc    
  40b90e:	xchg   al,ch
  40b910:	inc    edi
  40b911:	inc    edx
  40b912:	aas    
  40b913:	mov    edi,0x32e47745
  40b918:	mov    cl,0x1f
  40b91a:	stc    
  40b91b:	xor    BYTE PTR [eax],dh
  40b91d:	call   0x4be:0x3df4245
  40b924:	push   ebp
  40b925:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b926:	inc    eax
  40b927:	icebp  
  40b928:	hlt    
  40b929:	js     0x40b90a
  40b92b:	jnp    0x40b9a8
  40b92d:	mov    ch,0xcb
  40b92f:	mov    dh,0xe3
  40b931:	std    
  40b932:	mov    eax,ds:0xaf585348
  40b937:	add    al,0x59
  40b939:	cmp    dl,BYTE PTR [ecx-0x12]
  40b93c:	pop    edx
  40b93d:	push   eax
  40b93e:	aam    0x6b
  40b940:	cli    
  40b941:	(bad)  
  40b942:	cli    
  40b943:	cmp    BYTE PTR [eax],dh
  40b945:	enter  0x5c6f,0xc7
  40b949:	add    edx,DWORD PTR [edi-0x5]
  40b94c:	jo     0x40b928
  40b94e:	(bad)  
  40b94f:	and    BYTE PTR [ebp+0x20868b35],ch
  40b955:	jae    0x40b9c7
  40b957:	loope  0x40b8eb
  40b959:	popf   
  40b95a:	cli    
  40b95b:	push   ebx
  40b95c:	mov    al,ds:0xf1ceb726
  40b961:	ja     0x40b954
  40b963:	cmp    BYTE PTR [ecx],dh
  40b965:	xor    al,0x59
  40b967:	or     eax,0xa83d6502
  40b96c:	call   0x28df:0x6e7fd6b8
  40b973:	mov    edi,0xb6d2a865
  40b978:	sub    edx,DWORD PTR [esi+0x3d]
  40b97b:	std    
  40b97c:	and    eax,0xb2a6e01c
  40b981:	xchg   ebp,eax
  40b982:	inc    esi
  40b983:	sub    ecx,DWORD PTR [ecx-0x76]
  40b986:	cmc    
  40b987:	jecxz  0x40b9cd
  40b989:	hlt    
  40b98a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b98b:	push   edx
  40b98c:	mov    esi,0xd37de3e9
  40b991:	aaa    
  40b992:	pop    eax
  40b993:	lds    ebx,FWORD PTR [ebp+0xf]
  40b996:	test   eax,0x3559df5
  40b99b:	stos   DWORD PTR es:[edi],eax
  40b99c:	stc    
  40b99d:	jb     0x40b933
  40b99f:	inc    edi
  40b9a0:	repz jmp 0xd01ee073
  40b9a6:	dec    DWORD PTR ds:0xaf77a324
  40b9ac:	imul   ebx,eax,0x2455f224
  40b9b2:	inc    ebp
  40b9b3:	mov    bl,0xcc
  40b9b5:	sbb    BYTE PTR [edx-0x7c],0x1b
  40b9b9:	mov    dl,0x6b
  40b9bb:	push   esp
  40b9bc:	or     eax,0xc31c9324
  40b9c1:	cli    
  40b9c2:	repz dec ecx
  40b9c4:	pop    ebp
  40b9c5:	fisub  DWORD PTR [edx+0x10]
  40b9c8:	sahf   
  40b9c9:	mov    al,0x89
  40b9cb:	push   0x6a7265fe
  40b9d0:	fwait
  40b9d1:	sub    al,0xd7
  40b9d3:	or     ecx,eax
  40b9d5:	call   0x2a66:0x3ecd6553
  40b9dc:	push   ebp
  40b9dd:	add    dh,BYTE PTR [ecx-0x68d27d85]
  40b9e3:	rol    BYTE PTR [ebx-0xc11c54b],1
  40b9e9:	xlat   BYTE PTR ds:[ebx]
  40b9ea:	(bad)  {k6}{z}
  40b9ef:	ja     0x40b9a0
  40b9f1:	out    dx,al
  40b9f2:	xchg   esi,eax
  40b9f3:	jmp    0x8ed2:0xcb3e3bd9
  40b9fa:	pop    ebx
  40b9fb:	stos   BYTE PTR es:[edi],al
  40b9fc:	stos   BYTE PTR es:[edi],al
  40b9fd:	in     al,0x15
  40b9ff:	adc    BYTE PTR [edi+edi*8],dl
  40ba02:	aas    
  40ba03:	lds    edx,FWORD PTR ds:0x22883769
  40ba09:	add    bh,BYTE PTR [ebx+0x51169da0]
  40ba0f:	inc    esp
  40ba10:	mov    edi,0x8bfb8c0f
  40ba15:	into   
  40ba16:	inc    esp
  40ba17:	sbb    BYTE PTR [ebp-0x6d],dl
  40ba1a:	mov    BYTE PTR [eax-0x6e],cl
  40ba1d:	into   
  40ba1e:	inc    esp
  40ba1f:	cwde   
  40ba20:	sbb    DWORD PTR [ebx+0x3de946b],0x1edb1849
  40ba2a:	pushf  
  40ba2b:	pop    ebp
  40ba2c:	ins    BYTE PTR es:[edi],dx
  40ba2d:	fisttp DWORD PTR es:[eax]
  40ba30:	mov    edx,0x793b28c5
  40ba35:	xor    eax,0x2806e896
  40ba3a:	ja     0x40ba17
  40ba3c:	rcr    BYTE PTR [ecx-0x5d07174e],0xad
  40ba43:	push   cs
  40ba44:	push   cs
  40ba45:	pop    edx
  40ba46:	rcl    BYTE PTR [edx-0x2],1
  40ba49:	retf   0x3139
  40ba4c:	sar    BYTE PTR [edx+0x3f7bb56e],0x55
  40ba53:	fwait
  40ba54:	data16 xor al,0x45
  40ba57:	mov    eax,0x79e188cd
  40ba5c:	push   ds
  40ba5d:	xchg   ebp,eax
  40ba5e:	imul   ebp,DWORD PTR [ebx-0x54116e57],0xffffffcd
  40ba65:	je     0x40ba27
  40ba67:	xchg   ebx,eax
  40ba68:	ret    
  40ba69:	inc    ecx
  40ba6a:	pop    ecx
  40ba6b:	mov    edi,0xbf4fb4cc
  40ba70:	inc    esi
  40ba71:	pop    ebx
  40ba72:	pop    esp
  40ba73:	push   0x23fc64f8
  40ba78:	int3   
  40ba79:	add    ch,BYTE PTR [edx]
  40ba7b:	std    
  40ba7c:	pop    ebx
  40ba7d:	mov    ah,0x21
  40ba7f:	mov    WORD PTR [ebx+0x20a10a78],ds
  40ba85:	cdq    
  40ba86:	lds    edi,FWORD PTR [ebx-0x25]
  40ba89:	cmp    cl,BYTE PTR [ecx+0x77]
  40ba8c:	and    eax,0x51c92e60
  40ba91:	mov    dl,0x6b
  40ba93:	js     0x40ba7a
  40ba95:	pop    ebx
  40ba96:	xchg   edi,eax
  40ba97:	mov    cl,0x94
  40ba99:	jl     0x40ba34
  40ba9b:	mov    ds,WORD PTR [ebx-0x101a08c7]
  40baa1:	daa    
  40baa2:	lds    edx,FWORD PTR [ecx-0x16]
  40baa5:	outs   dx,BYTE PTR ds:[esi]
  40baa6:	clc    
  40baa7:	mov    dl,0x62
  40baa9:	inc    esp
  40baaa:	scas   eax,DWORD PTR es:[edi]
  40baab:	push   ebp
  40baac:	popa   
  40baad:	test   DWORD PTR [ebp+0x2c],eax
  40bab0:	cwde   
  40bab1:	push   esp
  40bab2:	jmp    0x40bb01
  40bab4:	sub    esp,eax
  40bab6:	jo     0x40bab3
  40bab8:	dec    ebx
  40bab9:	scas   eax,DWORD PTR es:[edi]
  40baba:	inc    edx
  40babb:	in     eax,0x9b
  40babd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40babe:	adc    eax,0xb5270228
  40bac3:	sar    DWORD PTR [ebx+0x6a],0xb3
  40bac7:	mov    esp,0xc2e4d5fe
  40bacc:	jnp    0x40baa1
  40bace:	int    0x8b
  40bad0:	les    ebp,FWORD PTR [ecx]
  40bad2:	rcl    bh,cl
  40bad4:	mov    edi,DWORD PTR cs:[ecx-0x3b311be]
  40badb:	adc    ah,BYTE PTR [ecx+0x29f5e20c]
  40bae1:	and    bl,BYTE PTR [edx]
  40bae3:	push   0xffffffe2
  40bae5:	repz mov edx,0x1c0fea3b
  40baeb:	xchg   ebp,eax
  40baec:	fsubr  st,st(7)
  40baee:	retf   0xd36b
  40baf1:	mov    fs,eax
  40baf3:	dec    BYTE PTR [edi]
  40baf5:	and    ebp,DWORD PTR [edi]
  40baf7:	int3   
  40baf8:	stc    
  40baf9:	mov    ebx,0x743e4f52
  40bafe:	dec    ebx
  40baff:	cmp    esp,esp
  40bb01:	mov    cs,WORD PTR [ebp*2+0x55176c82]
  40bb08:	sbb    WORD PTR [ebp*1+0x202aca94],cx
  40bb10:	and    BYTE PTR [eax+0x330ea2c0],al
  40bb16:	lea    ebp,[ebp+0x6d]
  40bb19:	pop    ss
  40bb1a:	inc    ecx
  40bb1b:	push   es
  40bb1c:	in     al,dx
  40bb1d:	lahf   
  40bb1e:	outs   dx,DWORD PTR ds:[esi]
  40bb1f:	inc    ecx
  40bb20:	sbb    BYTE PTR [edx+0x27b28868],bh
  40bb26:	ins    BYTE PTR es:[edi],dx
  40bb27:	icebp  
  40bb28:	and    ebp,DWORD PTR [esi]
  40bb2a:	add    bh,BYTE PTR [edi-0x69eeb671]
  40bb30:	lds    eax,FWORD PTR [eax+0x54]
  40bb33:	push   esp
  40bb34:	dec    esp
  40bb35:	dec    esi
  40bb36:	test   DWORD PTR [eax+0x43],0x8bdbef3b
  40bb3d:	xchg   ebp,eax
  40bb3e:	in     eax,dx
  40bb3f:	ret    
  40bb40:	inc    edx
  40bb41:	push   ebx
  40bb42:	or     DWORD PTR [esi+esi*1],esi
  40bb45:	outs   dx,BYTE PTR ds:[esi]
  40bb46:	rcl    DWORD PTR [edi-0x49],1
  40bb49:	pop    edx
  40bb4a:	mov    eax,0x2cc28681
  40bb4f:	xlat   BYTE PTR ds:[ebx]
  40bb50:	ins    DWORD PTR es:[edi],dx
  40bb51:	inc    ebx
  40bb52:	add    esp,DWORD PTR [edx-0x497afab5]
  40bb58:	test   DWORD PTR [edx-0x274e99ed],0xaa322b10
  40bb62:	xchg   ebp,eax
  40bb63:	jnp    0x40bb1a
  40bb65:	adc    DWORD PTR ss:[esp+esi*1-0x2679f155],0xffffffff
  40bb6e:	pushf  
  40bb6f:	test   al,0x6f
  40bb71:	out    dx,al
  40bb72:	adc    al,0x4e
  40bb74:	test   eax,0x9508e8d5
  40bb79:	(bad)  
  40bb7a:	stc    
  40bb7b:	xor    eax,eax
  40bb7d:	dec    edx
  40bb7e:	arpl   WORD PTR [ebx+eiz*2+0x5fd1f555],dx
  40bb85:	lea    esi,[ecx-0x2a]
  40bb88:	ja     0x40bb72
  40bb8a:	fcmovnbe st,st(4)
  40bb8c:	fdiv   QWORD PTR [ecx]
  40bb8e:	cmp    eax,0x5e264254
  40bb93:	cld    
  40bb94:	jnp    0x40bb3d
  40bb96:	(bad)  
  40bb97:	js     0x40bc15
  40bb99:	into   
  40bb9a:	pop    ss
  40bb9b:	sbb    DWORD PTR [ecx],0xffffffe4
  40bb9e:	jns    0x40bb85
  40bba0:	pusha  
  40bba1:	gs mov al,0x66
  40bba4:	(bad)  
  40bba5:	fnstenv [edi-0x44]
  40bba8:	add    edi,edi
  40bbaa:	and    eax,0x208a2a30
  40bbaf:	sbb    al,0xec
  40bbb1:	xor    BYTE PTR [esi+ebx*1-0x5c],0x22
  40bbb6:	leave  
  40bbb7:	jl     0x40bba8
  40bbb9:	mov    dh,0xec
  40bbbb:	jb     0x40bbd1
  40bbbd:	pusha  
  40bbbe:	jb     0x40bbc1
  40bbc0:	shr    ch,cl
  40bbc2:	aad    0x5e
  40bbc4:	mov    ebp,0x2507d72
  40bbc9:	sub    DWORD PTR [eax-0x48],ecx
  40bbcc:	sahf   
  40bbcd:	test   BYTE PTR [edx-0x727977f],ch
  40bbd3:	fbstp  TBYTE PTR [eax]
  40bbd5:	jnp    0x40bb90
  40bbd7:	rcr    ebx,cl
  40bbd9:	clc    
  40bbda:	out    0xa9,al
  40bbdc:	cmp    ecx,DWORD PTR [ecx+0x3fece759]
  40bbe2:	sti    
  40bbe3:	into   
  40bbe4:	mov    ds,WORD PTR [ebx-0x24c981b0]
  40bbea:	into   
  40bbeb:	lods   al,BYTE PTR ds:[esi]
  40bbec:	add    BYTE PTR [edi-0x5],bl
  40bbef:	aas    
  40bbf0:	mov    DWORD PTR [edx+0x31fa7b3a],esi
  40bbf6:	shr    DWORD PTR [ecx-0x5294884f],cl
  40bbfc:	inc    edx
  40bbfd:	sbb    DWORD PTR [edi+edi*8-0x25],eax
  40bc01:	mov    dl,0xbd
  40bc03:	(bad)  
  40bc04:	jmp    0x73715f4f
  40bc09:	sub    DWORD PTR [edi+0x193b7b80],0xffffffc0
  40bc10:	mov    eax,0x3f6a207e
  40bc15:	mov    ebp,0xe30249e8
  40bc1a:	xor    al,0xfe
  40bc1c:	and    BYTE PTR [ebp-0x12d782c4],dl
  40bc22:	xchg   edi,eax
  40bc23:	jmp    0x225cc317
  40bc28:	and    dh,0xd5
  40bc2b:	mov    bl,0xe9
  40bc2d:	enter  0x5c0d,0x7d
  40bc31:	enter  0x95aa,0x42
  40bc35:	xchg   esp,eax
  40bc36:	mov    edi,DWORD PTR [esi]
  40bc38:	ss dec ebx
  40bc3a:	sub    DWORD PTR [eax+0x5a2aaf31],esi
  40bc40:	push   0xca407345
  40bc45:	js     0x40bc06
  40bc47:	out    dx,al
  40bc48:	mov    edi,0xa61e805a
  40bc4d:	mov    ah,0x23
  40bc4f:	or     DWORD PTR [esi-0x1cc7e672],ecx
  40bc55:	shl    WORD PTR [edx-0x342fd04a],1
  40bc5c:	push   cs
  40bc5d:	jg     0x40bc37
  40bc5f:	ficomp WORD PTR [edi+eiz*1+0x6c56c4d2]
  40bc66:	fld    QWORD PTR [edx+0x213178a]
  40bc6c:	mov    ds:0x31aca8f,al
  40bc71:	ss mov esi,0x5945e199
  40bc77:	ss pop edx
  40bc79:	int    0x80
  40bc7b:	popa   
  40bc7c:	inc    esp
  40bc7d:	push   cs
  40bc7e:	mov    ds:0x5e791077,al
  40bc83:	or     eax,0xce252796
  40bc88:	sub    edi,DWORD PTR [ecx-0x2a]
  40bc8b:	ss cmp al,0xd7
  40bc8e:	xor    DWORD PTR [eax-0x393b7307],edx
  40bc94:	shl    DWORD PTR [ebp-0x60],cl
  40bc97:	fwait
  40bc98:	lock (bad) 
  40bc9a:	jno    0x40bce6
  40bc9c:	inc    esp
  40bc9d:	lods   al,BYTE PTR ds:[esi]
  40bc9e:	cld    
  40bc9f:	ret    
  40bca0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bca1:	fadd   DWORD PTR [edi-0x1d]
  40bca4:	inc    ebx
  40bca5:	or     DWORD PTR [eax+0x848e462],0x14364719
  40bcaf:	mov    eax,0xad3c9bbb
  40bcb4:	jns    0x40bced
  40bcb6:	call   0x5f0b:0xfe48a9a4
  40bcbd:	shl    ebx,0xa8
  40bcc0:	mov    ecx,DWORD PTR [edi+0xbac786b]
  40bcc6:	in     eax,0xb6
  40bcc8:	call   0xead4480
  40bccd:	jo     0x40bcf7
  40bccf:	jle    0x40bcbe
  40bcd1:	bts    DWORD PTR [edi-0x68aa158c],edi
  40bcd8:	fbstp  TBYTE PTR [eax+esi*1]
  40bcdb:	enter  0x16d4,0x3e
  40bcdf:	fst    DWORD PTR [esi-0x2e663998]
  40bce5:	push   esp
  40bce6:	ror    DWORD PTR [ebp+0x55],cl
  40bce9:	sar    BYTE PTR [ebx+0x2b],cl
  40bcec:	fcmovnb st,st(2)
  40bcee:	jg     0x40bd51
  40bcf0:	dec    eax
  40bcf1:	sbb    eax,DWORD PTR [ebp-0x61]
  40bcf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcf5:	jg     0x40bd20
  40bcf7:	pop    es
  40bcf8:	dec    ebp
  40bcf9:	xor    esi,DWORD PTR [eax+ebx*8-0x65]
  40bcfd:	inc    edx
  40bcfe:	sub    eax,0xbaf7c48
  40bd03:	loop   0x40bcce
  40bd05:	mov    dh,0x4d
  40bd07:	addr16 enter 0xabc1,0xc9
  40bd0c:	loopne 0x40bd61
  40bd0e:	call   0xf252:0x6937c411
  40bd15:	jecxz  0x40bd04
  40bd17:	icebp  
  40bd18:	cwde   
  40bd19:	sub    eax,0x13fd5f29
  40bd1e:	fisttp WORD PTR [esi-0x31]
  40bd21:	xor    BYTE PTR [ebx],ah
  40bd23:	jmp    0xc8a944b0
  40bd28:	setg   BYTE PTR [esi+0x2]
  40bd2c:	mov    ds:0x4db2e5aa,eax
  40bd31:	(bad)  
  40bd32:	dec    esi
  40bd33:	xchg   esp,eax
  40bd34:	mov    al,ds:0x864faf28
  40bd39:	retf   0x2605
  40bd3c:	mov    DWORD PTR [ecx-0x58c3f810],edi
  40bd42:	push   esp
  40bd43:	mov    DWORD PTR [eax+0x6060fe6f],eax
  40bd49:	adc    al,0x1c
  40bd4b:	adc    dh,BYTE PTR [ecx+esi*2-0xfdad5c6]
  40bd52:	rol    BYTE PTR [edx],1
  40bd54:	(bad)  
  40bd55:	into   
  40bd56:	pop    ss
  40bd57:	cmp    esp,DWORD PTR [esi-0x138673ef]
  40bd5d:	(bad)  
  40bd5f:	(bad)  
  40bd60:	cmp    eax,0x6af613fb
  40bd65:	fist   WORD PTR [eax]
  40bd67:	xchg   esi,eax
  40bd68:	das    
  40bd69:	ins    BYTE PTR es:[edi],dx
  40bd6a:	xor    ecx,ebx
  40bd6c:	inc    ecx
  40bd6d:	cld    
  40bd6e:	dec    ecx
  40bd6f:	(bad)  
  40bd70:	mov    DWORD PTR [ecx+eiz*4],0x8ca0a2c6
  40bd77:	and    eax,0xd8795d72
  40bd7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd7d:	loopne 0x40bd22
  40bd7f:	loope  0x40bd8b
  40bd81:	jno    0x40bdea
  40bd83:	mov    dl,ch
  40bd85:	ja     0x40bd85
  40bd87:	and    eax,0xd1506707
  40bd8c:	inc    edi
  40bd8d:	jae    0x40bda6
  40bd8f:	fadd   st,st(4)
  40bd91:	ins    BYTE PTR es:[edi],dx
  40bd92:	inc    ebp
  40bd93:	sti    
  40bd94:	mov    DWORD PTR [eax],edi
  40bd96:	cmp    esp,DWORD PTR [edi]
  40bd98:	xchg   esp,eax
  40bd99:	cmp    ebx,DWORD PTR [ebp+0x4720673]
  40bd9f:	lahf   
  40bda0:	sbb    edx,DWORD PTR [ebp-0x56d802b]
  40bda6:	les    eax,FWORD PTR [eax-0x47]
  40bda9:	or     ebx,DWORD PTR [esp+esi*8+0x53]
  40bdad:	sub    ah,ah
  40bdaf:	repz and al,0x41
  40bdb2:	xor    al,0xde
  40bdb4:	push   edx
  40bdb5:	aas    
  40bdb6:	push   esi
  40bdb7:	es xor ecx,eax
  40bdba:	jns    0x40bd66
  40bdbc:	pushf  
  40bdbd:	inc    ebp
  40bdbe:	mov    al,BYTE PTR [ebx+ebx*2-0x39117505]
  40bdc5:	int    0x56
  40bdc7:	cmp    DWORD PTR [edi+0x529e85ff],ebx
  40bdcd:	fdiv   QWORD PTR [edi+0x0]
  40bdd0:	test   DWORD PTR [eax-0x41],esp
  40bdd3:	sar    ecx,1
  40bdd5:	push   0x20
  40bdd7:	or     dl,BYTE PTR [edx]
  40bdd9:	test   eax,0xcdb92779
  40bdde:	push   esp
  40bddf:	arpl   cx,dx
  40bde1:	nop
  40bde2:	push   ebp
  40bde3:	in     eax,0xb2
  40bde5:	in     eax,dx
  40bde6:	jb     0x40be65
  40bde8:	pop    es
  40bde9:	test   eax,0xa24fe352
  40bdee:	leave  
  40bdef:	mov    BYTE PTR [edi+edx*4-0x4f],ah
  40bdf3:	sub    ebx,esi
  40bdf5:	ins    DWORD PTR es:[edi],dx
  40bdf6:	pop    edx
  40bdf7:	lods   al,BYTE PTR ds:[esi]
  40bdf8:	bnd jmp 0x40bdfa
  40bdfb:	xchg   esp,eax
  40bdfc:	test   BYTE PTR [edx-0x69],ah
  40bdff:	fwait
  40be00:	in     al,0xbe
  40be02:	xchg   esp,eax
  40be03:	xor    al,0x14
  40be05:	sar    BYTE PTR [edx-0x8],cl
  40be08:	mov    ss,ecx
  40be0a:	lds    ebp,FWORD PTR [edi]
  40be0c:	mov    cl,0xe8
  40be0e:	mov    edi,0x948130be
  40be13:	cmp    esp,DWORD PTR [ebx+0x23]
  40be16:	inc    ebp
  40be17:	int3   
  40be18:	mov    esi,DWORD PTR [ebp+0x2835b218]
  40be1e:	call   0x672b:0x3ac7643b
  40be25:	xchg   ecx,eax
  40be26:	fldcw  WORD PTR [ecx]
  40be28:	xchg   BYTE PTR [edi+ebp*1-0x5d41ccca],cl
  40be2f:	sub    eax,0x281cdb36
  40be34:	or     BYTE PTR [ecx+ebp*8+0x20],dl
  40be38:	pop    esi
  40be39:	inc    esp
  40be3a:	sbb    al,0x3d
  40be3c:	pop    esi
  40be3d:	mov    esi,0x9834547c
  40be42:	rcr    bh,0xc3
  40be45:	dec    esp
  40be46:	inc    ecx
  40be47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be48:	out    0xf5,al
  40be4a:	call   0xa9473408
  40be4f:	int3   
  40be50:	clc    
  40be51:	mov    dl,0xe8
  40be53:	push   ecx
  40be54:	mov    bh,0x94
  40be56:	setae  BYTE PTR [edi+ebx*1-0x6278fc94]
  40be5e:	test   DWORD PTR [eax-0x48],ecx
  40be61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be62:	icebp  
  40be63:	push   esi
  40be64:	mov    ebp,0xc7bfbd7c
  40be69:	add    al,0x8e
  40be6b:	cmp    eax,0xd8b07ddb
  40be70:	out    dx,al
  40be71:	or     eax,0xbdec7524
  40be76:	sub    BYTE PTR [esi+0x769d542a],cl
  40be7c:	push   es
  40be7d:	data16 xor BYTE PTR [ecx+0x78],al
  40be81:	shl    DWORD PTR [eax+0x4a8e68],cl
  40be87:	or     al,0xdf
  40be89:	retf   0xba5e
  40be8c:	psubsw mm4,QWORD PTR [ecx-0x4ecb3334]
  40be93:	mov    edx,0x1546932c
  40be98:	enter  0x8002,0x92
  40be9c:	and    esi,edi
  40be9e:	pop    es
  40be9f:	test   al,0x27
  40bea1:	out    0xb1,eax
  40bea3:	add    al,0x20
  40bea5:	dec    ecx
  40bea6:	jmp    0x40bf0e
  40bea8:	inc    edi
  40bea9:	xor    edi,DWORD PTR [ebp+0x52e454cb]
  40beaf:	retf   0xf6d0
  40beb2:	jae    0x40beea
  40beb4:	pop    ss
  40beb5:	inc    esp
  40beb6:	(bad)  [edi-0x85a7405]
  40bebc:	mov    cl,0x5d
  40bebe:	std    
  40bebf:	pop    esi
  40bec0:	popa   
  40bec1:	mov    edi,0xb3841a64
  40bec6:	aas    
  40bec7:	test   eax,0xb7ab075
  40becc:	push   edi
  40becd:	push   ss
  40bece:	inc    ebx
  40becf:	mov    eax,DWORD PTR [ebx-0x12]
  40bed2:	and    al,0xdb
  40bed4:	pop    esi
  40bed5:	stc    
  40bed6:	mov    esi,0xe985e12e
  40bedb:	inc    eax
  40bedc:	dec    ecx
  40bedd:	js     0x40bed5
  40bedf:	lods   eax,DWORD PTR ds:[esi]
  40bee0:	mov    al,0x9a
  40bee2:	sub    BYTE PTR [eax+0x44],0x4
  40bee6:	mov    WORD PTR [ebp-0x4b6834f8],fs
  40beec:	xor    al,0xaf
  40beee:	push   ebp
  40beef:	jmp    0x5388:0x72bf30c7
  40bef6:	mov    esp,0xf4081f08
  40befb:	ins    DWORD PTR es:[edi],dx
  40befc:	std    
  40befd:	dec    eax
  40befe:	test   DWORD PTR [esi-0x47],eax
  40bf01:	mov    ecx,0x6fb30731
  40bf06:	aad    0x1f
  40bf08:	(bad)  
  40bf0a:	lods   al,BYTE PTR ds:[esi]
  40bf0b:	add    dl,bl
  40bf0d:	pop    ebp
  40bf0e:	inc    ecx
  40bf0f:	pusha  
  40bf10:	(bad)  
  40bf11:	std    
  40bf12:	mov    esi,0x2c5f2933
  40bf17:	je     0x40bedf
  40bf19:	push   ds
  40bf1a:	dec    ecx
  40bf1b:	sub    DWORD PTR [esi],esp
  40bf1d:	or     ecx,edx
  40bf1f:	fldcw  WORD PTR [esi+esi*4]
  40bf22:	lea    edi,[edi]
  40bf24:	nop
  40bf25:	mov    eax,ds:0x97b69696
  40bf2a:	sub    BYTE PTR [esi-0xa],0xc6
  40bf2e:	sbb    BYTE PTR [eax+0x72],cl
  40bf31:	sbb    al,0x46
  40bf33:	jmp    0x8cd7963a
  40bf38:	out    dx,al
  40bf39:	or     al,0x54
  40bf3b:	mov    edx,0xaa316803
  40bf40:	ror    BYTE PTR [eax],cl
  40bf42:	jns    0x40bec7
  40bf44:	addr16 (bad) 
  40bf46:	push   edx
  40bf47:	add    DWORD PTR [ebx+edi*2],ecx
  40bf4a:	out    dx,eax
  40bf4b:	dec    ebp
  40bf4c:	das    
  40bf4d:	icebp  
  40bf4e:	cmp    al,BYTE PTR [ebp+0x265b81c6]
  40bf54:	or     al,0x7c
  40bf56:	nop
  40bf57:	jp     0x40bf75
  40bf59:	leave  
  40bf5a:	pushf  
  40bf5b:	pop    esi
  40bf5c:	call   0x6b9a:0x8203bff9
  40bf63:	aad    0xe9
  40bf65:	loope  0x40bf16
  40bf67:	cmp    al,0x2e
  40bf69:	ror    DWORD PTR [ebx+0x78],cl
  40bf6c:	(bad)  
  40bf6d:	push   esp
  40bf6e:	js     0x40bf3a
  40bf70:	or     BYTE PTR [ecx],ah
  40bf72:	jmp    0xf694:0x6d528d58
  40bf79:	gs out 0x19,al
  40bf7c:	das    
  40bf7d:	add    DWORD PTR [ebp-0x38942c9c],ebx
  40bf83:	gs pop esp
  40bf85:	adc    ebp,DWORD PTR [esi-0x1cab841e]
  40bf8b:	inc    edx
  40bf8c:	adc    ch,al
  40bf8e:	add    edx,DWORD PTR [ebp+0x71]
  40bf91:	xchg   ebx,eax
  40bf92:	stos   DWORD PTR es:[edi],eax
  40bf93:	bound  edi,QWORD PTR [edi]
  40bf95:	in     eax,0x86
  40bf97:	fisttp WORD PTR [edi+0x4d]
  40bf9a:	arpl   WORD PTR [esi-0x7c],si
  40bf9d:	aas    
  40bf9e:	xchg   edx,eax
  40bf9f:	jl     0x40bf56
  40bfa1:	jecxz  0x40bfef
  40bfa3:	nop
  40bfa4:	push   edx
  40bfa5:	mov    edi,0x7d02bb3a
  40bfaa:	jno    0x40bfc8
  40bfac:	add    DWORD PTR [edi],esp
  40bfae:	inc    ecx
  40bfaf:	shl    DWORD PTR [edi+0x6efce58e],1
  40bfb5:	xchg   edx,eax
  40bfb6:	fnsave [ebp-0x67]
  40bfb9:	sub    DWORD PTR [edi+0x3f],0x11
  40bfbd:	mov    BYTE PTR [esp+esi*2+0x4d],ch
  40bfc1:	in     eax,0xaf
  40bfc3:	lock call 0xeb0a:0x8205e82f
  40bfcb:	(bad)  
  40bfcc:	loope  0x40bf79
  40bfce:	mov    esp,0x84425a1a
  40bfd3:	sar    DWORD PTR [edi-0x473153ef],cl
  40bfd9:	es popa 
  40bfdb:	or     dl,bl
  40bfdd:	rcr    BYTE PTR [eax*4+0x3d0e8bf5],0x41
  40bfe5:	shl    BYTE PTR [edi-0x6fa3cac5],1
  40bfeb:	inc    ebx
  40bfec:	xlat   BYTE PTR ds:[ebx]
  40bfed:	mov    ebp,DWORD PTR [ecx+edi*8]
  40bff0:	test   ah,ah
  40bff2:	(bad)  
  40bff3:	(bad)
  40bff6:	add    DWORD PTR [edx+0x1b40f5aa],ebx
  40bffc:	fimul  WORD PTR [ebx]
  40bffe:	stos   BYTE PTR es:[edi],al
  40bfff:	jb     0x40bfdb
  40c001:	mov    ebx,0x57bd342b
  40c006:	mov    cs,WORD PTR [edi]
  40c008:	rcr    DWORD PTR [esi-0x48eccd84],0xa3
  40c00f:	pop    ss
  40c010:	daa    
  40c011:	sub    al,0x78
  40c013:	inc    esi
  40c014:	retf   
  40c015:	test   esp,ecx
  40c017:	repz sub DWORD PTR [eax-0x4],0x3f
  40c01c:	lock inc edi
  40c01e:	push   edi
  40c01f:	dec    esi
  40c020:	lahf   
  40c021:	inc    DWORD PTR [eax+0x656fd207]
  40c027:	call   0xd1ac21ab
  40c02c:	mov    ebp,0x6d7dd616
  40c031:	mov    ch,BYTE PTR [eax]
  40c033:	fs ret 
  40c035:	lea    edx,[ebx-0x3e8d1d81]
  40c03b:	hlt    
  40c03c:	adc    al,0x73
  40c03e:	hlt    
  40c03f:	xrelease mov DWORD PTR [ecx-0x34],edx
  40c043:	push   edx
  40c044:	mov    ebx,0x97d9bfa8
  40c049:	push   ds
  40c04a:	mov    ds:0x7122a969,eax
  40c04f:	mov    esi,0x5507fb79
  40c054:	cwde   
  40c055:	lods   al,BYTE PTR ds:[esi]
  40c056:	sbb    BYTE PTR [eax+eiz*2-0x7f],cl
  40c05a:	mov    al,ds:0x6550751f
  40c05f:	loop   0x40c0c8
  40c061:	fcomp  DWORD PTR [eax+0x291badae]
  40c067:	loope  0x40bff3
  40c069:	lock scas eax,DWORD PTR es:[edi]
  40c06b:	add    eax,0xd4d62a6b
  40c070:	inc    esi
  40c071:	inc    ecx
  40c072:	cmp    DWORD PTR [ebp+0x1423248e],0x36de5c28
  40c07c:	mov    bh,0xe7
  40c07e:	adc    ecx,esi
  40c080:	lods   eax,DWORD PTR ds:[esi]
  40c081:	jl     0x40c033
  40c083:	xor    eax,ebp
  40c085:	xor    eax,0x86c9054c
  40c08a:	dec    ebx
  40c08b:	pop    ebp
  40c08c:	jae    0x40c053
  40c08e:	ret    
  40c08f:	lods   eax,DWORD PTR ds:[esi]
  40c090:	lea    ebp,[edx-0xe1c5b23]
  40c096:	stc    
  40c097:	push   eax
  40c098:	dec    ebx
  40c099:	mov    esp,0x55575495
  40c09e:	lahf   
  40c09f:	xchg   edi,eax
  40c0a0:	or     DWORD PTR [edi-0x1909326],eax
  40c0a6:	fadd   QWORD PTR [esi-0x4f314477]
  40c0ac:	mov    ch,0x3e
  40c0ae:	je     0x40c09f
  40c0b0:	and    al,0x12
  40c0b2:	push   ebx
  40c0b3:	adc    al,0xf5
  40c0b5:	sbb    BYTE PTR [esi-0x3c2f66bf],0x99
  40c0bc:	leave  
  40c0bd:	sbb    eax,0x9f1d40cc
  40c0c2:	cmp    al,0xa8
  40c0c4:	outs   dx,BYTE PTR ds:[esi]
  40c0c5:	fst    st(3)
  40c0c7:	ds cmpxchg8b (bad)
  40c0c9:	(bad)  
  40c0ca:	enter  0x474,0xee
  40c0ce:	retf   
  40c0cf:	data16 ins BYTE PTR es:[edi],dx
  40c0d1:	in     eax,0xc2
  40c0d3:	aam    0x70
  40c0d5:	push   0xffffffdc
  40c0d7:	cmp    BYTE PTR [edi],ch
  40c0d9:	and    esi,DWORD PTR [esi+0xc5d7c31]
  40c0df:	or     esi,edx
  40c0e1:	cmp    eax,0x6d7ddbb9
  40c0e6:	call   0xbbffc01a
  40c0eb:	push   ebp
  40c0ec:	pop    eax
  40c0ed:	push   ss
  40c0ee:	test   al,0x66
  40c0f0:	inc    ecx
  40c0f1:	jmp    0xaf827b9d
  40c0f6:	mov    ebx,0x7924f3f7
  40c0fb:	imul   edx,DWORD PTR ds:0x8d3aefea,0xffffffaa
  40c102:	inc    eax
  40c103:	pop    ebx
  40c104:	into   
  40c105:	icebp  
  40c106:	call   0x74e59393
  40c10b:	sbb    BYTE PTR [ecx+0x708d5157],bl
  40c111:	mov    eax,0x14243c26
  40c116:	into   
  40c117:	sbb    al,dh
  40c119:	adc    DWORD PTR [ecx],ebx
  40c11b:	cmp    eax,0xaae50146
  40c120:	add    BYTE PTR [ebx-0x10fd618a],dh
  40c126:	cli    
  40c127:	jno    0x40c0ec
  40c129:	mov    ebx,0x8451629a
  40c12e:	in     al,0x3a
  40c130:	clc    
  40c131:	scas   al,BYTE PTR es:[edi]
  40c132:	retf   
  40c133:	sbb    ch,0x2c
  40c136:	jns    0x40c176
  40c138:	cmp    DWORD PTR [ecx-0x17],0xffffff9a
  40c13c:	(bad)  
  40c13d:	call   0x7e2f3ee2
  40c142:	mov    BYTE PTR [ebx-0x27],bh
  40c145:	mov    ds:0xea389408,eax
  40c14a:	(bad)  
  40c14b:	mov    esp,0x6513823e
  40c150:	sbb    DWORD PTR [ecx-0x6db05536],edx
  40c156:	fcomp  QWORD PTR [edx-0x137ce213]
  40c15c:	xchg   edx,eax
  40c15d:	dec    edi
  40c15e:	xor    BYTE PTR [ebx-0x6b],dh
  40c161:	add    BYTE PTR [ebx+0x39],ah
  40c164:	cs pop es
  40c166:	inc    ebx
  40c167:	adc    eax,0x1be73605
  40c16c:	ss sub al,0x79
  40c16f:	push   edx
  40c170:	std    
  40c171:	sub    BYTE PTR [eax],al
  40c173:	jle    0x40c156
  40c175:	pushf  
  40c176:	outs   dx,DWORD PTR ds:[esi]
  40c177:	fwait
  40c178:	adc    eax,0xad53c57
  40c17d:	repz int3 
  40c17f:	push   eax
  40c180:	pop    edx
  40c181:	in     eax,dx
  40c182:	pop    ebp
  40c183:	dec    esi
  40c184:	inc    edi
  40c185:	push   cs
  40c186:	xchg   ecx,eax
  40c187:	push   ebp
  40c188:	cdq    
  40c189:	mov    cl,BYTE PTR [esi-0x21]
  40c18c:	cmp    ebp,DWORD PTR [edi+0x69]
  40c18f:	sar    BYTE PTR [esi],0xe9
  40c192:	sti    
  40c193:	mov    al,ds:0xf6b6f07c
  40c198:	idiv   DWORD PTR [edx-0x615d612]
  40c19e:	sbb    al,BYTE PTR [eax+0x30]
  40c1a1:	xchg   edi,eax
  40c1a2:	loopne 0x40c1c8
  40c1a4:	xchg   ebp,eax
  40c1a5:	div    DWORD PTR [ebp+esi*2-0x53980c83]
  40c1ac:	sub    edx,esp
  40c1ae:	mov    edx,DWORD PTR [ecx-0x1e]
  40c1b1:	jmp    0x40c20c
  40c1b3:	add    BYTE PTR [ecx+0xee7dcb2],ah
  40c1b9:	fisubr WORD PTR [ebx*4-0x35f25491]
  40c1c0:	mov    al,ds:0x6ccc78fd
  40c1c5:	call   0x9005:0xd4cb2d81
  40c1cc:	fisubr WORD PTR [ecx]
  40c1ce:	lods   al,BYTE PTR ds:[esi]
  40c1cf:	pop    ecx
  40c1d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1d1:	mov    ebp,0x63d3220f
  40c1d6:	xchg   ebx,eax
  40c1d7:	das    
  40c1d8:	mov    bh,0x34
  40c1da:	dec    esp
  40c1db:	repz sub DWORD PTR [edi+edi*2+0x1543a56d],esi
  40c1e3:	xlat   BYTE PTR ds:[ebx]
  40c1e4:	xor    DWORD PTR [eax-0x30],esp
  40c1e7:	or     BYTE PTR [ebx-0x52054e65],al
  40c1ed:	jg     0x40c17e
  40c1ef:	mov    bl,0x1f
  40c1f1:	pop    edx
  40c1f2:	cmp    eax,0x54ccd5bc
  40c1f7:	push   ebp
  40c1f8:	inc    ebx
  40c1f9:	cmp    BYTE PTR [edi-0x70fa364e],dh
  40c1ff:	outs   dx,DWORD PTR ds:[esi]
  40c200:	jno    0x40c278
  40c202:	popa   
  40c203:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c204:	(bad)  
  40c205:	jo     0x40c27a
  40c207:	shl    BYTE PTR [ebx-0x69],cl
  40c20a:	xor    ebx,ebx
  40c20c:	fstp   QWORD PTR [ecx-0x18]
  40c20f:	add    al,0x82
  40c211:	cmp    al,0xca
  40c213:	fmul   st(6),st
  40c215:	fwait
  40c216:	dec    ebx
  40c217:	lock push esp
  40c219:	xor    DWORD PTR [ecx+0x45241a0a],esp
  40c21f:	ret    
  40c220:	das    
  40c221:	fwait
  40c222:	add    edx,ecx
  40c224:	jle    0x40c1e8
  40c226:	cld    
  40c227:	ret    0x2320
  40c22a:	mov    esi,0x3d37220a
  40c22f:	cmp    al,0x53
  40c231:	cmp    eax,0x9fe557f8
  40c236:	(bad)  
  40c237:	int3   
  40c238:	xchg   edx,eax
  40c239:	mov    ds:0xc088df4e,al
  40c23e:	int    0x12
  40c240:	add    dl,ch
  40c242:	push   cs
  40c243:	jmp    DWORD PTR [ebp-0xc]
  40c246:	(bad)  
  40c247:	and    DWORD PTR [edi*2-0x7d4ca0fc],esi
  40c24e:	mov    edi,0x89fc1c7d
  40c253:	test   eax,0x7580af07
  40c258:	inc    esi
  40c259:	pop    esp
  40c25a:	jmp    0xf649:0xa185c5fc
  40c261:	jl     0x40c27a
  40c263:	xchg   dl,al
  40c265:	adc    al,0x9c
  40c267:	test   bh,ch
  40c269:	je     0x40c20b
  40c26b:	fsub   QWORD PTR [esi+0x5e849546]
  40c271:	sti    
  40c272:	gs and edx,edx
  40c275:	fistp  WORD PTR [edx]
  40c277:	in     eax,dx
  40c278:	adc    ebx,DWORD PTR [edi-0x76]
  40c27b:	(bad)  
  40c27c:	cmp    eax,0xef2e93a3
  40c281:	adc    DWORD PTR [ebx],edi
  40c283:	mov    WORD PTR [eax],ds
  40c285:	adc    BYTE PTR [esi],0xdf
  40c288:	inc    edx
  40c289:	(bad)  
  40c28a:	sbb    bh,BYTE PTR [edx-0x7efb04ae]
  40c290:	mov    al,ds:0x7c99b71d
  40c295:	cmp    eax,0x780559cf
  40c29a:	push   0xcb39699e
  40c29f:	xchg   ebx,eax
  40c2a0:	add    eax,0xf7c095c4
  40c2a5:	cmp    DWORD PTR [ebp+0x4462a1e],esp
  40c2ab:	rcr    BYTE PTR ds:0xac0476a7,0x93
  40c2b2:	icebp  
  40c2b3:	mov    ebp,0xe930613c
  40c2b8:	dec    ebx
  40c2b9:	sbb    bh,dl
  40c2bb:	pop    esp
  40c2bc:	ror    DWORD PTR [edx-0x3],0x65
  40c2c0:	out    dx,al
  40c2c1:	cli    
  40c2c2:	fdiv   st(6),st
  40c2c4:	fsub   QWORD PTR [edi]
  40c2c6:	sub    al,0x18
  40c2c8:	mov    ds:0x37c6cca,al
  40c2cd:	mov    bh,0xd3
  40c2cf:	xor    BYTE PTR [edi],ch
  40c2d1:	cs mov ecx,0xddf6adc2
  40c2d7:	pop    edx
  40c2d8:	icebp  
  40c2d9:	jmp    0x40c31e
  40c2db:	add    al,0xbc
  40c2dd:	(bad)
  40c2e0:	xchg   ebx,eax
  40c2e1:	adc    DWORD PTR [esi],esi
  40c2e3:	and    ecx,DWORD PTR [edx-0x648488b5]
  40c2e9:	int3   
  40c2ea:	jbe    0x40c330
  40c2ec:	inc    edi
  40c2ed:	cs mov eax,0x453e2288
  40c2f3:	daa    
  40c2f4:	cdq    
  40c2f5:	in     eax,0xfa
  40c2f7:	mov    DWORD PTR [eax-0x33],0xb0c69e6c
  40c2fe:	push   esi
  40c2ff:	inc    ebp
  40c300:	fnstenv [esi+0x45]
  40c303:	jne    0x40c2d1
  40c305:	cdq    
  40c306:	dec    edi
  40c308:	enter  0xd1c5,0x73
  40c30c:	dec    edi
  40c30d:	cmp    DWORD PTR [ebp+ebp*8-0x51],ebx
  40c311:	jns    0x40c336
  40c313:	pop    ecx
  40c314:	stos   BYTE PTR es:[edi],al
  40c315:	jmp    0xc674be26
  40c31a:	or     cl,cl
  40c31c:	enter  0xa2c3,0x81
  40c320:	retf   
  40c321:	enter  0x4eee,0xdb
  40c325:	push   ebp
  40c326:	push   eax
  40c327:	pop    edx
  40c328:	push   ebp
  40c329:	mov    ch,0xca
  40c32b:	or     DWORD PTR [ebx+0x4be13b90],ebp
  40c331:	clc    
  40c332:	adc    eax,0x57866feb
  40c337:	icebp  
  40c338:	adc    al,0x21
  40c33a:	xchg   DWORD PTR [edi-0x68],edi
  40c33d:	mov    esi,0x1c41540d
  40c342:	sahf   
  40c343:	sub    al,0x34
  40c345:	jecxz  0x40c326
  40c347:	js     0x40c37c
  40c349:	popa   
  40c34a:	dec    ebp
  40c34b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c34c:	inc    esi
  40c34d:	iret   
  40c34e:	ins    DWORD PTR es:[edi],dx
  40c34f:	mov    cl,ah
  40c351:	call   0xca9b:0xc2f3e139
  40c358:	cli    
  40c359:	dec    ecx
  40c35a:	test   BYTE PTR [eax-0x7354d1e1],bl
  40c360:	rcr    edi,0x2a
  40c363:	adc    BYTE PTR [ebx+0x3c],bh
  40c366:	ds xchg ebp,eax
  40c368:	mov    ds:0xf9c5e870,al
  40c36d:	bound  ebp,QWORD PTR [eax-0x664e945a]
  40c373:	lods   eax,DWORD PTR ds:[esi]
  40c374:	outs   dx,BYTE PTR ds:[esi]
  40c375:	mov    ds,WORD PTR [edx+eax*1-0x2fba0eb9]
  40c37c:	into   
  40c37d:	inc    ebx
  40c37e:	loop   0x40c31a
  40c380:	fwait
  40c381:	mov    esp,0x533bdf3d
  40c386:	xchg   esp,eax
  40c387:	mov    ebp,DWORD PTR [edi-0x313c0c4b]
  40c38d:	lea    ecx,[edx+0x3e462662]
  40c393:	rcr    BYTE PTR [ecx+0x35],0xb1
  40c397:	cmp    dh,BYTE PTR [ebx-0x8]
  40c39a:	push   esp
  40c39b:	aas    
  40c39c:	repz addr16 mov ebp,0xe1c7fb59
  40c3a3:	inc    esi
  40c3a4:	or     edi,DWORD PTR [ebx]
  40c3a6:	mov    edx,0x94c67d6d
  40c3ab:	mov    bh,BYTE PTR [ebx-0x22]
  40c3ae:	add    DWORD PTR [ecx-0x774b84bb],0x9e3c55cc
  40c3b8:	repz cmp BYTE PTR [edx],dl
  40c3bb:	and    dh,BYTE PTR [eax]
  40c3bd:	cmp    eax,0x97f79da4
  40c3c2:	xchg   edi,eax
  40c3c3:	fs xchg esp,eax
  40c3c5:	xchg   edx,edx
  40c3c7:	add    al,BYTE PTR [ebp-0x1af64662]
  40c3cd:	jge    0x40c382
  40c3cf:	pusha  
  40c3d0:	pop    ebp
  40c3d1:	ds xchg esp,eax
  40c3d3:	(bad)  
  40c3d6:	jecxz  0x40c3e9
  40c3d8:	(bad)  
  40c3d9:	sub    al,0xda
  40c3db:	fs pop esi
  40c3dd:	jae    0x40c421
  40c3df:	jle    0x40c446
  40c3e1:	daa    
  40c3e2:	sub    esi,edx
  40c3e4:	push   ebx
  40c3e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3e6:	mov    ecx,0x66022efe
  40c3eb:	imul   edx
  40c3ed:	pop    esp
  40c3ee:	cmp    eax,0x8915c8ff
  40c3f3:	sbb    ah,bl
  40c3f5:	ret    0x2ec2
  40c3f8:	mov    ds:0x9a436025,al
  40c3fd:	jne    0x40c476
  40c3ff:	fwait
  40c400:	into   
  40c401:	jl     0x40c3d6
  40c403:	sub    ah,ch
  40c405:	push   ebp
  40c406:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c407:	lahf   
  40c408:	out    0x74,eax
  40c40a:	xor    DWORD PTR [edx+0x4b8391a3],edx
  40c410:	push   es
  40c411:	int    0x82
  40c413:	mov    ah,0x61
  40c415:	(bad)  
  40c416:	xchg   ebp,eax
  40c417:	ror    esp,cl
  40c419:	and    DWORD PTR [esi],edx
  40c41b:	(bad)  
  40c41c:	push   ecx
  40c41d:	cdq    
  40c41e:	icebp  
  40c41f:	xor    esi,DWORD PTR [ecx-0x12]
  40c422:	push   ebx
  40c423:	div    DWORD PTR [edi]
  40c425:	call   0x2acf1122
  40c42a:	out    0x80,al
  40c42c:	std    
  40c42d:	mov    BYTE PTR [eax+0x17],ch
  40c430:	jbe    0x40c424
  40c432:	inc    ebp
  40c433:	not    ebp
  40c435:	loop   0x40c40b
  40c437:	ror    DWORD PTR [esi+0x474085c0],cl
  40c43d:	push   edi
  40c43e:	add    DWORD PTR [esi-0x30],0x873447c5
  40c445:	dec    esi
  40c446:	outs   dx,BYTE PTR ds:[esi]
  40c447:	scas   eax,DWORD PTR es:[edi]
  40c448:	scas   eax,DWORD PTR es:[edi]
  40c449:	into   
  40c44a:	in     eax,0x16
  40c44c:	push   0x41
  40c44e:	js     0x40c404
  40c450:	ins    BYTE PTR es:[edi],dx
  40c451:	push   ebp
  40c452:	lock rol BYTE PTR [eax+0x24],1
  40c456:	dec    esi
  40c457:	aaa    
  40c458:	sbb    eax,0xa275a469
  40c45d:	mov    ecx,0x97c68c82
  40c462:	xor    eax,DWORD PTR [ebx-0x67]
  40c465:	scas   al,BYTE PTR es:[edi]
  40c466:	add    eax,0x8ecae175
  40c46b:	dec    eax
  40c46c:	in     al,dx
  40c46d:	sub    DWORD PTR [edx+ecx*4+0x2843e13e],esp
  40c474:	loope  0x40c432
  40c476:	addr16 mov ds:0x2158,al
  40c47a:	sub    ecx,DWORD PTR [ecx-0x6b]
  40c47d:	inc    esi
  40c47e:	(bad)  
  40c47f:	in     eax,0x30
  40c481:	fs pop eax
  40c483:	hlt    
  40c484:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c485:	xchg   ebx,eax
  40c486:	sub    ebx,DWORD PTR [eax-0x2400d843]
  40c48c:	mov    bh,0xed
  40c48e:	inc    eax
  40c48f:	xchg   esp,eax
  40c490:	ret    
  40c491:	push   0x63c3f510
  40c496:	lahf   
  40c497:	lods   eax,DWORD PTR ds:[esi]
  40c498:	test   DWORD PTR [edi-0x3449961],ecx
  40c49e:	lea    ebp,[edi-0x11]
  40c4a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4a2:	mov    eax,esi
  40c4a4:	dec    esp
  40c4a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4a6:	dec    ebp
  40c4a7:	mov    ebp,0xafbbc5e5
  40c4ac:	imul   DWORD PTR [edi+0x592c4e49]
  40c4b2:	in     eax,0xb2
  40c4b4:	lea    ebx,[edi]
  40c4b6:	cmp    DWORD PTR [edx-0x75999011],edx
  40c4bc:	fisubr DWORD PTR [edi-0x5e]
  40c4bf:	jne    0x40c4b3
  40c4c1:	adc    dh,BYTE PTR [eax+0x4b6fea93]
  40c4c7:	add    BYTE PTR [esi-0x58],0x74
  40c4cb:	(bad)  
  40c4cc:	inc    edx
  40c4cd:	push   esi
  40c4ce:	cli    
  40c4cf:	mov    ecx,0x7a32036c
  40c4d4:	mov    ah,ch
  40c4d6:	in     al,0xd0
  40c4d8:	sbb    ebx,DWORD PTR [edx+0x17]
  40c4db:	cmp    dl,BYTE PTR [edx+0x19985af1]
  40c4e1:	mov    BYTE PTR [edx],ah
  40c4e3:	inc    DWORD PTR [ebp-0x5c]
  40c4e6:	aam    0xcf
  40c4e8:	sahf   
  40c4e9:	bound  ecx,QWORD PTR [eax]
  40c4eb:	mov    dl,0x20
  40c4ed:	in     eax,dx
  40c4ee:	sub    esi,edi
  40c4f0:	pop    ds
  40c4f1:	retf   0x519e
  40c4f4:	fimul  WORD PTR [edx+0x11e38ad6]
  40c4fa:	inc    esp
  40c4fb:	mov    ebp,0x6088e677
  40c500:	maskmovq mm3,(bad)
  40c501:	neg    DWORD PTR [ebx+0x38]
  40c504:	adc    BYTE PTR [ebx-0x7dd06601],bh
  40c50a:	call   0x9172:0x43c882f5
  40c511:	sub    DWORD PTR [eax],ebp
  40c513:	loop   0x40c4fd
  40c515:	cdq    
  40c516:	aaa    
  40c517:	ror    BYTE PTR [edx],cl
  40c519:	shl    DWORD PTR [ecx-0x12],0x23
  40c51d:	test   eax,0xa1f8c1c7
  40c522:	pop    edx
  40c523:	inc    edx
  40c524:	out    0x95,eax
  40c526:	aaa    
  40c527:	pop    edx
  40c528:	scas   al,BYTE PTR es:[edi]
  40c529:	add    BYTE PTR ds:[ebp-0x7806ec64],ah
  40c530:	je     0x40c568
  40c532:	and    cl,cl
  40c534:	in     eax,dx
  40c535:	and    eax,0x7d58aae4
  40c53a:	cmp    al,0xab
  40c53c:	inc    esi
  40c53d:	sub    bh,BYTE PTR [ebp-0x6]
  40c540:	pusha  
  40c541:	sbb    ch,BYTE PTR [edi-0x69fb04ea]
  40c547:	mov    ds:0x47e72a14,al
  40c54c:	push   es
  40c54d:	sbb    esp,DWORD PTR [eax+0x44d2e7a1]
  40c553:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c554:	imul   ebp,DWORD PTR [esi-0x10],0x79be0fe2
  40c55b:	test   al,0x2d
  40c55d:	sbb    esp,DWORD PTR [edi+ebx*2+0x4fd7a141]
  40c564:	scas   eax,DWORD PTR es:[edi]
  40c565:	arpl   sp,bp
  40c567:	push   cs
  40c568:	inc    edi
  40c569:	jne    0x40c558
  40c56b:	popf   
  40c56c:	outs   dx,DWORD PTR ds:[esi]
  40c56d:	(bad)
  40c572:	mov    cl,0x9d
  40c574:	fidiv  DWORD PTR [edi-0x6b]
  40c577:	jb     0x40c512
  40c579:	adc    BYTE PTR [ebp+0x1351acf],0xc1
  40c580:	mov    ecx,0xbe9eec74
  40c585:	scas   al,BYTE PTR es:[edi]
  40c586:	jmp    0x40c56e
  40c588:	lea    edi,[edx-0x13]
  40c58b:	jno    0x40c554
  40c58d:	cmp    DWORD PTR [esi-0x1b],esi
  40c590:	jmp    0x18396bb0
  40c595:	stos   DWORD PTR es:[edi],eax
  40c596:	aad    0x21
  40c598:	iret   
  40c599:	mov    al,ds:0x1f7ab933
  40c59e:	pop    ebx
  40c59f:	mov    ah,ch
  40c5a1:	fmulp  st(0),st
  40c5a3:	dec    esp
  40c5a4:	and    bh,BYTE PTR [edi-0x6b]
  40c5a7:	mov    bl,0x49
  40c5a9:	push   esp
  40c5aa:	clc    
  40c5ab:	mov    esi,0xd838920b
  40c5b0:	call   0xf81d5503
  40c5b5:	add    ecx,eax
  40c5b7:	test   BYTE PTR [edi-0x1b],0x5c
  40c5bb:	inc    edx
  40c5bc:	pop    ds
  40c5bd:	push   ss
  40c5be:	mov    ah,0x1a
  40c5c0:	xor    eax,DWORD PTR [ecx]
  40c5c2:	cmp    DWORD PTR [esi-0x15c331d5],ecx
  40c5c8:	jmp    0x40c574
  40c5ca:	out    0x45,al
  40c5cc:	fwait
  40c5cd:	cld    
  40c5ce:	pop    es
  40c5cf:	fmul   DWORD PTR [ecx+edx*1]
  40c5d2:	jmp    0x7b9:0xd9a0e693
  40c5d9:	(bad)  
  40c5da:	jnp    0x40c5da
  40c5dc:	nop
  40c5dd:	mov    ecx,0xb28cafc7
  40c5e2:	bound  ebp,QWORD PTR [ebx]
  40c5e4:	aad    0xc4
  40c5e6:	(bad)  [ecx]
  40c5e8:	ds jg  0x40c604
  40c5eb:	dec    eax
  40c5ec:	push   edx
  40c5ed:	in     eax,dx
  40c5ee:	xchg   ebx,eax
  40c5ef:	jle    0x40c5f3
  40c5f1:	into   
  40c5f2:	ffree  st(3)
  40c5f4:	mov    ecx,0x29eb2817
  40c5f9:	iret   
  40c5fa:	je     0x40c648
  40c5fc:	lock leave 
  40c5fe:	jno    0x40c5cf
  40c600:	imul   ebx,DWORD PTR ds:0xebe466b7,0xffffffcc
  40c607:	push   esp
  40c608:	xchg   esp,eax
  40c609:	inc    ebp
  40c60a:	mov    esp,edi
  40c60c:	sti    
  40c60d:	test   eax,0x3bd2acae
  40c612:	add    bl,BYTE PTR [edi-0x3a]
  40c615:	call   0x2fcd:0x72a5a5dc
  40c61c:	jecxz  0x40c5c1
  40c61e:	in     eax,0xf5
  40c620:	add    DWORD PTR [edx-0x71],ebx
  40c623:	das    
  40c624:	loop   0x40c635
  40c626:	jmp    0x40c6a4
  40c628:	sbb    eax,0xf59d84d4
  40c62d:	xchg   ebx,eax
  40c62e:	fist   WORD PTR [edx]
  40c630:	inc    edi
  40c631:	mov    dh,0x5f
  40c633:	cmp    al,0x7c
  40c635:	cmp    dl,BYTE PTR [edx+ebx*8+0x3427eea1]
  40c63c:	cdq    
  40c63d:	shr    ecx,1
  40c63f:	stos   BYTE PTR es:[edi],al
  40c640:	dec    ebx
  40c641:	add    al,0x86
  40c643:	les    edx,FWORD PTR [ecx+0x26d1853f]
  40c649:	dec    esi
  40c64a:	sahf   
  40c64b:	jle    0x40c6c2
  40c64d:	popf   
  40c64e:	xchg   ebp,eax
  40c64f:	sub    DWORD PTR [ecx+0x3084afae],esp
  40c655:	cld    
  40c656:	cld    
  40c657:	scas   al,BYTE PTR es:[edi]
  40c658:	out    dx,eax
  40c659:	loope  0x40c654
  40c65b:	dec    edx
  40c65c:	sub    BYTE PTR [ebx],0xb6
  40c65f:	sub    ecx,edx
  40c661:	popf   
  40c662:	jge    0x40c655
  40c664:	mov    BYTE PTR ds:0x57dddc7f,0x52
  40c66b:	dec    ebx
  40c66c:	and    edx,esi
  40c66e:	ins    BYTE PTR es:[edi],dx
  40c66f:	push   0x4158e2ec
  40c674:	loope  0x40c660
  40c676:	pop    ecx
  40c677:	cmp    eax,0xcf84338b
  40c67c:	adc    eax,DWORD PTR [ecx]
  40c67e:	retf   0x220a
  40c681:	mov    ch,ch
  40c683:	xchg   esp,eax
  40c684:	sbb    edx,DWORD PTR [ecx-0x1e1868b4]
  40c68a:	fwait
  40c68b:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40c68d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c68e:	retf   
  40c68f:	mov    WORD PTR [edi],fs
  40c691:	(bad)  
  40c692:	mov    BYTE PTR [edx],bh
  40c694:	call   FWORD PTR [ecx-0x26]
  40c697:	pop    ebp
  40c698:	cmp    BYTE PTR [ecx+0x26],cl
  40c69b:	mov    eax,ds:0x6566d91f
  40c6a0:	call   esp
  40c6a2:	sbb    al,0xfb
  40c6a4:	mov    dl,0xd
  40c6a6:	in     al,dx
  40c6a7:	push   ds
  40c6a8:	in     eax,0x9
  40c6aa:	inc    esp
  40c6ab:	div    BYTE PTR [edx]
  40c6ad:	mov    bh,bl
  40c6af:	enter  0xb630,0xd
  40c6b3:	jnp    0x40c6c7
  40c6b5:	call   0x2399:0xb34086da
  40c6bc:	aas    
  40c6bd:	fbstp  TBYTE PTR ds:0xb0e2afe5
  40c6c3:	cs mov ch,0x48
  40c6c6:	(bad)  
  40c6c7:	(bad)  
  40c6c8:	into   
  40c6c9:	inc    edx
  40c6ca:	rcr    ah,cl
  40c6cc:	xor    al,0x96
  40c6ce:	int3   
  40c6cf:	call   0x18ac:0xaf4cf088
  40c6d6:	(bad)  
  40c6d7:	in     eax,0xb5
  40c6d9:	in     eax,0x84
  40c6db:	xchg   ebp,eax
  40c6dc:	sbb    al,0xa3
  40c6de:	inc    eax
  40c6df:	leave  
  40c6e0:	sub    al,0x6f
  40c6e2:	out    0x61,eax
  40c6e4:	jae    0x40c6bd
  40c6e6:	sub    BYTE PTR [esi+0x44],dl
  40c6e9:	jo     0x40c75a
  40c6eb:	jge    0x40c725
  40c6ed:	or     esi,esi
  40c6ef:	(bad)  
  40c6f1:	inc    ebx
  40c6f2:	sbb    DWORD PTR [edi-0x80],ebp
  40c6f5:	xor    ebp,DWORD PTR [eax]
  40c6f7:	add    bh,BYTE PTR [ecx]
  40c6f9:	mov    ds:0x2ca7bf61,al
  40c6fe:	addr16 in eax,dx
  40c700:	repnz (bad) [edx-0x7ab6f59f]
  40c707:	cmp    al,0x9
  40c709:	cmp    al,0xf6
  40c70b:	mov    ebp,0x7ec4ee21
  40c710:	add    eax,0x481e811d
  40c715:	sbb    al,0x11
  40c717:	dec    ebp
  40c718:	push   es
  40c719:	xchg   esp,eax
  40c71a:	push   ss
  40c71b:	adc    ch,dl
  40c71d:	jecxz  0x40c73e
  40c71f:	pop    ss
  40c720:	aas    
  40c721:	pop    eax
  40c722:	ror    cl,0x49
  40c725:	push   ebx
  40c726:	sub    al,0xa6
  40c728:	aad    0xc
  40c72a:	sar    BYTE PTR [edi-0x74ae5581],1
  40c730:	mov    esp,0xfcbee498
  40c735:	in     al,0xaf
  40c737:	popa   
  40c738:	ins    BYTE PTR es:[edi],dx
  40c739:	lock stos BYTE PTR es:[edi],al
  40c73b:	pop    esp
  40c73c:	mov    eax,ds:0x225406be
  40c741:	cmp    ecx,DWORD PTR [edi-0x43]
  40c744:	push   0x38
  40c746:	neg    cl
  40c748:	or     dh,dh
  40c74a:	scas   al,BYTE PTR es:[edi]
  40c74b:	pusha  
  40c74c:	popa   
  40c74d:	and    ecx,DWORD PTR [edx]
  40c74f:	xor    eax,0x3feecf65
  40c754:	or     ch,BYTE PTR [edx-0x1cd8cd32]
  40c75a:	(bad)
  40c75d:	and    al,0x79
  40c75f:	pop    esp
  40c760:	bound  eax,QWORD PTR [esi]
  40c762:	enter  0x178e,0x38
  40c766:	ins    BYTE PTR es:[edi],dx
  40c767:	sub    al,0x6e
  40c769:	and    eax,0xb066e2a4
  40c76e:	jecxz  0x40c77b
  40c770:	mov    bh,0x29
  40c772:	into   
  40c773:	ds mov dl,0xbf
  40c776:	sbb    DWORD PTR [ebx-0xdbc661b],eax
  40c77c:	ds (bad) 
  40c77e:	into   
  40c77f:	je     0x40c7ff
  40c781:	stos   DWORD PTR es:[edi],eax
  40c782:	jns    0x40c7af
  40c784:	pop    edx
  40c785:	xor    eax,0xe9e6f664
  40c78a:	add    ebp,0xffffffcb
  40c78d:	pop    edx
  40c78e:	addr16 repnz pop ds
  40c791:	out    dx,al
  40c792:	add    esp,DWORD PTR [ebp-0x1a]
  40c795:	xor    al,0x3f
  40c797:	mov    ch,0x63
  40c799:	enter  0x6d47,0xa2
  40c79d:	mov    ch,0xff
  40c79f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7a0:	sbb    BYTE PTR [ecx+0x6c9ac6b7],dh
  40c7a6:	xor    al,0x79
  40c7a8:	jns    0x40c7aa
  40c7aa:	retf   
  40c7ab:	fiadd  WORD PTR [edi+eiz*4-0x4240f6f6]
  40c7b2:	scas   al,BYTE PTR es:[edi]
  40c7b3:	xor    dl,BYTE PTR [edx]
  40c7b5:	push   es
  40c7b6:	or     dh,BYTE PTR [ebx-0x26a0033a]
  40c7bc:	loope  0x40c77b
  40c7be:	mov    ah,0xd
  40c7c0:	inc    ebx
  40c7c1:	pop    esp
  40c7c2:	xchg   ebp,eax
  40c7c3:	loope  0x40c824
  40c7c5:	aaa    
  40c7c6:	ja     0x40c791
  40c7c8:	sar    BYTE PTR [ebx+0x1afcbef7],cl
  40c7ce:	and    al,BYTE PTR [esi-0x8]
  40c7d1:	inc    edx
  40c7d2:	out    dx,eax
  40c7d3:	or     dl,BYTE PTR cs:[edx+0x7a933327]
  40c7da:	fimul  DWORD PTR [edx]
  40c7dc:	sub    BYTE PTR [ecx+0x2a],cl
  40c7df:	pop    ecx
  40c7e0:	loop   0x40c830
  40c7e2:	fdiv   DWORD PTR [eax+0x58772a6c]
  40c7e8:	leave  
  40c7e9:	pop    esi
  40c7ea:	(bad)  
  40c7eb:	fisub  DWORD PTR [esi+ebx*4+0x34a24c34]
  40c7f2:	test   edx,esp
  40c7f4:	call   0x69cd:0x44924cfc
  40c7fb:	push   es
  40c7fc:	adc    DWORD PTR [ebx],esp
  40c7fe:	mov    ecx,0x8b2cc513
  40c803:	sub    esp,esi
  40c805:	pusha  
  40c806:	pusha  
  40c807:	mov    cl,0x5
  40c809:	je     0x40c806
  40c80b:	adc    al,0x80
  40c80d:	test   DWORD PTR [ebx-0x7b],0xf12227e8
  40c814:	icebp  
  40c815:	push   esp
  40c816:	les    ecx,FWORD PTR [esp+ebx*8-0x59]
  40c81a:	mov    ah,0x95
  40c81c:	mov    dl,0x55
  40c81e:	mov    esi,0xd7bcc6eb
  40c823:	and    BYTE PTR [edx-0x58],al
  40c826:	pusha  
  40c827:	and    BYTE PTR [ebx-0x7afddef4],cl
  40c82d:	jl     0x40c875
  40c82f:	lock idiv DWORD PTR [ebx+0x32]
  40c833:	push   esi
  40c834:	in     al,dx
  40c835:	cmc    
  40c836:	mov    ebx,edx
  40c838:	test   eax,0x4ac13602
  40c83d:	push   ebx
  40c83e:	and    ecx,DWORD PTR [ecx]
  40c840:	fild   QWORD PTR [esi]
  40c842:	je     0x40c81f
  40c844:	mov    dh,0x27
  40c846:	or     dh,BYTE PTR [ebx+0x31]
  40c849:	fisub  WORD PTR [ecx+0x33]
  40c84c:	stos   DWORD PTR es:[edi],eax
  40c84d:	jo     0x40c852
  40c84f:	mov    ebx,DWORD PTR [ebx]
  40c851:	iret   
  40c852:	add    esi,DWORD PTR [ebx-0x550cc317]
  40c858:	add    al,0x5d
  40c85a:	pusha  
  40c85b:	and    esp,DWORD PTR [esi]
  40c85d:	fadd   QWORD PTR [ecx+0x6036626b]
  40c863:	mov    ah,0xb4
  40c865:	dec    eax
  40c866:	mov    al,ds:0x3aa202e0
  40c86b:	retf   
  40c86c:	fstp   st(2)
  40c86e:	dec    edi
  40c86f:	rcr    edx,cl
  40c871:	and    al,0x85
  40c873:	mov    bl,0xed
  40c875:	fmul   QWORD PTR [eax+0x21]
  40c878:	lods   eax,DWORD PTR ds:[esi]
  40c879:	mov    dh,0x62
  40c87b:	cmp    DWORD PTR [edi+0x11],0x313ac9fc
  40c882:	scas   eax,DWORD PTR es:[edi]
  40c883:	popf   
  40c884:	inc    sp
  40c886:	mov    ebp,0x72153c2b
  40c88b:	cmp    ch,BYTE PTR [esi+esi*4]
  40c88e:	loop   0x40c8f5
  40c890:	bound  edi,QWORD PTR [ebx-0x2a4de2ba]
  40c896:	push   edi
  40c897:	pop    esi
  40c898:	and    eax,0xa069889d
  40c89d:	mov    ecx,0x891ddefe
  40c8a2:	icebp  
  40c8a3:	scas   eax,DWORD PTR es:[edi]
  40c8a4:	out    dx,eax
  40c8a5:	sub    DWORD PTR [eax+0x40],0xffffff93
  40c8a9:	jp     0x40c91e
  40c8ab:	push   0xab86d086
  40c8b0:	pushf  
  40c8b1:	neg    DWORD PTR [esi-0x7b851156]
  40c8b7:	stos   DWORD PTR es:[edi],eax
  40c8b8:	mov    dl,0xf4
  40c8ba:	sbb    eax,0x9efb468f
  40c8bf:	or     eax,0xcc63a670
  40c8c4:	test   DWORD PTR [eax+0x7],ebp
  40c8c7:	add    BYTE PTR [esi+esi*8+0x7b],bl
  40c8cb:	icebp  
  40c8cc:	mov    edi,0xe90f98fb
  40c8d1:	fld    QWORD PTR [edx-0x6a1dc3fb]
  40c8d7:	pop    esp
  40c8d8:	std    
  40c8d9:	cmp    eax,DWORD PTR [edi]
  40c8db:	cmp    DWORD PTR [ebx],edx
  40c8dd:	jne    0x40c89e
  40c8df:	or     BYTE PTR [eax+0x62],dh
  40c8e2:	arpl   cx,di
  40c8e4:	sbb    BYTE PTR [ebp+ecx*8-0x37e2ed9c],dl
  40c8eb:	mov    esp,0x6f2502ce
  40c8f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8f1:	call   0x96c17018
  40c8f6:	fwait
  40c8f7:	outs   dx,DWORD PTR ds:[esi]
  40c8f8:	add    DWORD PTR [edi+0x7a],ecx
  40c8fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8fc:	sbb    al,0x23
  40c8fe:	mov    al,ds:0xd5522cc1
  40c903:	mov    BYTE PTR [edx-0x72e7dbce],0x3c
  40c90a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c90b:	mov    al,0xaf
  40c90d:	fwait
  40c90e:	dec    ebp
  40c90f:	cs ret 0x920b
  40c913:	fstp   TBYTE PTR [edi]
  40c915:	sbb    ah,dh
  40c917:	scas   eax,DWORD PTR es:[edi]
  40c918:	pop    ebp
  40c919:	fisttp DWORD PTR [ebp-0x49a31ebc]
  40c91f:	inc    esp
  40c920:	mov    eax,ds:0xb63ca183
  40c925:	retf   0xc02
  40c928:	xchg   DWORD PTR [ecx+0x13],edx
  40c92b:	push   esi
  40c92c:	cmp    BYTE PTR [ebp-0x49],dh
  40c92f:	arpl   WORD PTR [edx-0x2d],ax
  40c932:	cmp    edi,DWORD PTR [ebp-0x16264921]
  40c938:	xor    ebx,DWORD PTR ds:0xeebd4217
  40c93e:	imul   edx,DWORD PTR [eax-0x46549957],0xffffffc6
  40c945:	adc    esp,edi
  40c947:	and    edx,eax
  40c949:	jae    0x40c9c9
  40c94b:	loop   0x40c9c7
  40c94d:	jmp    0xa90af942
  40c952:	cmp    BYTE PTR [edx],bh
  40c954:	arpl   cx,dx
  40c956:	imul   ebx,DWORD PTR [ebp+edi*8+0x7d],0xcf827d51
  40c95e:	add    cl,bl
  40c960:	pop    esp
  40c961:	loopne 0x40c9b5
  40c963:	add    al,0x54
  40c965:	push   ebp
  40c966:	cwde   
  40c967:	ret    
  40c968:	fstp   TBYTE PTR [ebp-0x18eb1da5]
  40c96e:	sti    
  40c96f:	jg     0x40c9e3
  40c971:	data16 cmp di,WORD PTR [ebx]
  40c975:	mov    esp,0xde6edcb5
  40c97a:	je     0x40c968
  40c97c:	xlat   BYTE PTR ds:[ebx]
  40c97d:	jo     0x40c9db
  40c97f:	xchg   ebx,eax
  40c980:	inc    eax
  40c981:	popa   
  40c982:	cli    
  40c983:	add    DWORD PTR [eax],esp
  40c985:	xchg   esp,eax
  40c986:	xchg   ebx,eax
  40c987:	in     eax,0x3c
  40c989:	hlt    
  40c98a:	xor    ebx,DWORD PTR [ecx+eiz*1]
  40c98d:	sbb    dl,BYTE PTR [edi+0x6c]
  40c990:	mov    BYTE PTR ds:0x75c11ee1,ah
  40c996:	into   
  40c997:	in     al,dx
  40c998:	test   eax,0xf1246092
  40c99d:	(bad)  
  40c99e:	xlat   BYTE PTR ds:[ebx]
  40c99f:	aam    0x49
  40c9a1:	hlt    
  40c9a2:	js     0x40c9c6
  40c9a4:	mov    dl,0xab
  40c9a6:	call   0x3556:0x496f420
  40c9ad:	loop   0x40ca11
  40c9af:	aaa    
  40c9b0:	shl    BYTE PTR [ebx+0x7],1
  40c9b3:	mov    esi,0xfee8dc20
  40c9b8:	pop    edx
  40c9b9:	stos   DWORD PTR es:[edi],eax
  40c9ba:	jl     0x40ca2a
  40c9bc:	push   edx
  40c9bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9be:	mov    WORD PTR [eax+0x24],?
  40c9c1:	mov    esi,0x80d5f45c
  40c9c6:	shr    BYTE PTR [esi+0xd3814f8],cl
  40c9cc:	jl     0x40c993
  40c9ce:	stos   DWORD PTR es:[edi],eax
  40c9cf:	inc    eax
  40c9d0:	cdq    
  40c9d1:	push   esp
  40c9d2:	popf   
  40c9d3:	imul   esi,DWORD PTR [eax+0x28],0x6bdba77c
  40c9da:	shr    DWORD PTR [ebx+0x1fb783d],0x14
  40c9e1:	push   eax
  40c9e2:	daa    
  40c9e3:	lock xor esp,DWORD PTR [ebx-0x4b]
  40c9e7:	mov    ebp,0x6905e2d6
  40c9ec:	xchg   esi,eax
  40c9ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9ee:	(bad)  
  40c9ef:	fs jns 0x40c992
  40c9f2:	mov    ah,0xe9
  40c9f4:	std    
  40c9f5:	inc    ebx
  40c9f6:	dec    ecx
  40c9f7:	call   0x5618e921
  40c9fc:	cmp    eax,0x897c3e98
  40ca01:	pop    esp
  40ca02:	dec    ebx
  40ca03:	xor    edx,edx
  40ca05:	das    
  40ca06:	cli    
  40ca07:	jp     0x40ca4e
  40ca09:	adc    eax,0xde40431b
  40ca0e:	in     al,dx
  40ca0f:	push   edx
  40ca10:	outs   dx,DWORD PTR ds:[esi]
  40ca11:	push   edi
  40ca12:	push   esp
  40ca13:	cmp    DWORD PTR [edi],eax
  40ca15:	jno    0x40ca27
  40ca17:	xchg   ebp,eax
  40ca18:	data16 loopne 0x40ca54
  40ca1b:	outs   dx,BYTE PTR ds:[esi]
  40ca1c:	dec    ebp
  40ca1d:	pop    esp
  40ca1e:	mov    esp,0xd259884e
  40ca23:	or     BYTE PTR [edx-0xe],ah
  40ca26:	test   eax,0xc230e341
  40ca2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca2c:	pop    esi
  40ca2d:	cmp    ah,BYTE PTR [esi]
  40ca2f:	xchg   DWORD PTR [eax+ebx*2+0x16],ebp
  40ca33:	inc    eax
  40ca34:	ins    BYTE PTR es:[edi],dx
  40ca35:	in     eax,dx
  40ca36:	cmp    BYTE PTR [eax],ch
  40ca38:	mov    al,0x28
  40ca3a:	into   
  40ca3b:	mov    dl,0x8c
  40ca3d:	sahf   
  40ca3e:	sub    esp,DWORD PTR [esi]
  40ca40:	sub    edx,edi
  40ca42:	sub    esi,DWORD PTR [ebx-0x75]
  40ca45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca46:	pop    esp
  40ca47:	popa   
  40ca48:	inc    esp
  40ca49:	shl    BYTE PTR [ebx-0x64],0xd8
  40ca4d:	das    
  40ca4e:	rol    BYTE PTR [edi],cl
  40ca50:	pop    esi
  40ca51:	inc    ebx
  40ca52:	xor    BYTE PTR [ebx],bl
  40ca54:	mov    dl,0x56
  40ca56:	rol    esp,cl
  40ca58:	add    eax,0x3c99bc5b
  40ca5d:	and    DWORD PTR [edi-0x431e481b],edx
  40ca63:	std    
  40ca64:	sbb    al,0xf3
  40ca66:	mov    edx,0x3daa6295
  40ca6b:	add    DWORD PTR [eax-0x183da23a],edx
  40ca71:	leave  
  40ca72:	enter  0xc5b8,0x2
  40ca76:	ficom  DWORD PTR [esp+ebx*8-0x71]
  40ca7a:	retf   0x1dd4
  40ca7d:	add    BYTE PTR [ebx-0x14],dl
  40ca80:	adc    ecx,DWORD PTR [ebx-0x2]
  40ca83:	cmp    bl,BYTE PTR [ebx-0xfaa3708]
  40ca89:	fsubrp st(5),st
  40ca8b:	cmp    al,0x92
  40ca8d:	mov    al,BYTE PTR [ecx]
  40ca8f:	or     esp,esi
  40ca91:	jle    0x40caee
  40ca93:	repnz add esi,DWORD PTR [eax]
  40ca96:	push   eax
  40ca97:	(bad)  
  40ca98:	inc    ebx
  40ca99:	pushf  
  40ca9a:	scas   eax,DWORD PTR es:[edi]
  40ca9b:	mov    WORD PTR [edx],gs
  40ca9d:	inc    eax
  40ca9e:	mov    dh,0xf7
  40caa0:	adc    al,0x0
  40caa2:	mov    al,bh
  40caa4:	add    al,0xc8
  40caa6:	daa    
  40caa7:	dec    ecx
  40caa8:	sbb    BYTE PTR [eax+0x70],cl
  40caab:	int    0x2d
  40caad:	pop    ecx
  40caae:	mov    DWORD PTR [edx+0x42984882],0xa7775079
  40cab8:	dec    edi
  40cab9:	jmp    0xddba:0xaee787ea
  40cac0:	push   ss
  40cac1:	push   0xdb35793e
  40cac6:	pop    ebx
  40cac7:	mov    edi,0xac7abb3
  40cacc:	jbe    0x40cab5
  40cace:	ins    DWORD PTR es:[edi],dx
  40cacf:	or     DWORD PTR [eax+0x45aee5f8],esp
  40cad5:	(bad)  
  40cad7:	jno    0x40cabf
  40cad9:	add    DWORD PTR [edi+0x6ed423e7],eax
  40cadf:	leave  
  40cae0:	xchg   ecx,eax
  40cae1:	in     al,0x1d
  40cae3:	or     BYTE PTR [eax-0x74140c10],dl
  40cae9:	imul   ebx,ecx,0x14
  40caec:	repnz add esi,DWORD PTR [eax]
  40caef:	icebp  
  40caf0:	loop   0x40cb67
  40caf2:	lea    ebx,[ebx-0x39]
  40caf5:	cld    
  40caf6:	cmc    
  40caf7:	xor    ah,BYTE PTR [eax]
  40caf9:	mov    cl,0x0
  40cafb:	pop    eax
  40cafc:	or     dh,BYTE PTR [ecx+eax*2]
  40caff:	(bad)  
  40cb00:	sti    
  40cb01:	call   0x186b:0x25ef8a95
  40cb08:	call   0xa205:0x7758c5b3
  40cb0f:	shl    BYTE PTR [esp+ebx*2+0x53d9d90f],cl
  40cb16:	das    
  40cb17:	neg    edx
  40cb19:	ins    DWORD PTR es:[edi],dx
  40cb1a:	xchg   esp,eax
  40cb1b:	loopne 0x40caec
  40cb1d:	jg     0x40cab4
  40cb1f:	test   eax,0xb9c32f20
  40cb24:	mov    dh,BYTE PTR [ebp-0x4047f406]
  40cb2a:	std    
  40cb2b:	call   0x6f0738fc
  40cb30:	mov    WORD PTR [edi-0xd8afc5],fs
  40cb36:	xor    dh,BYTE PTR [ebp-0x19]
  40cb39:	sub    eax,0xec85fa0a
  40cb3e:	test   BYTE PTR [ecx+0x168e3ffb],bl
  40cb44:	jns    0x40cb80
  40cb46:	push   eax
  40cb47:	sbb    eax,0x9fadb52e
  40cb4c:	fwait
  40cb4d:	icebp  
  40cb4e:	xor    eax,0x5e2adcb5
  40cb53:	inc    ebx
  40cb54:	or     BYTE PTR [eax+0x10aa1e7c],0xf0
  40cb5b:	xor    BYTE PTR [esi+0x1b],bl
  40cb5e:	pop    ecx
  40cb5f:	xor    al,0xe3
  40cb61:	jae    0x40cbc8
  40cb63:	fcomp  DWORD PTR [ebx]
  40cb65:	into   
  40cb66:	pop    esi
  40cb67:	and    al,0xc5
  40cb69:	cld    
  40cb6a:	call   0xedd1:0x1dbdaed0
  40cb71:	cmp    al,BYTE PTR ds:0x766517aa
  40cb77:	add    eax,0x8c19bf5f
  40cb7c:	test   DWORD PTR [edi+0x3e],ecx
  40cb7f:	xchg   BYTE PTR [edi],ah
  40cb81:	push   ds
  40cb82:	sbb    eax,esi
  40cb84:	pop    ds
  40cb85:	jb     0x40cbb5
  40cb87:	pop    edi
  40cb88:	fwait
  40cb89:	and    DWORD PTR [eax],ecx
  40cb8b:	aas    
  40cb8c:	mov    esp,DWORD PTR [ecx-0x35d96122]
  40cb92:	mov    bh,BYTE PTR [ecx-0x5612c832]
  40cb98:	setl   BYTE PTR [edi]
  40cb9b:	les    edx,FWORD PTR [eax+0x639f0813]
  40cba1:	imul   esi,DWORD PTR [esi+ebx*8+0x15e408e3],0xffffffd5
  40cba9:	sbb    DWORD PTR [ebp-0x2de7b545],edx
  40cbaf:	push   ss
  40cbb0:	pop    ecx
  40cbb1:	or     eax,0x51e75efd
  40cbb6:	daa    
  40cbb7:	sbb    DWORD PTR [edx+0x6c468fa5],ecx
  40cbbd:	pop    eax
  40cbbe:	scas   al,BYTE PTR es:[edi]
  40cbbf:	into   
  40cbc0:	outs   dx,DWORD PTR ds:[esi]
  40cbc1:	loop   0x40cbbc
  40cbc3:	ins    DWORD PTR es:[edi],dx
  40cbc4:	out    dx,al
  40cbc5:	jns    0x40cb63
  40cbc7:	pop    ebx
  40cbc8:	add    DWORD PTR [ecx+0x3afd12f7],edi
  40cbce:	mov    ecx,?
  40cbd0:	mov    cl,0x54
  40cbd2:	bound  edi,QWORD PTR [ebx]
  40cbd4:	and    edx,edi
  40cbd6:	stc    
  40cbd7:	push   esp
  40cbd8:	jle    0x40cbd5
  40cbda:	push   cs
  40cbdb:	dec    esp
  40cbdc:	lods   al,BYTE PTR ds:[esi]
  40cbdd:	pop    edi
  40cbde:	push   eax
  40cbdf:	inc    esi
  40cbe0:	retf   0x41c2
  40cbe3:	in     eax,0x3c
  40cbe5:	add    al,0x2a
  40cbe7:	lds    ebp,FWORD PTR [eax+0x3e]
  40cbea:	mov    esp,0x1992c1d3
  40cbef:	sub    BYTE PTR [esp+esi*1-0x4a],al
  40cbf3:	inc    ebx
  40cbf4:	into   
  40cbf5:	sub    BYTE PTR [eax+edi*2+0x15],bl
  40cbf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbfa:	sub    BYTE PTR [ecx+0x434b5737],dh
  40cc00:	sub    ah,BYTE PTR [edi-0x74]
  40cc03:	jge    0x40cbdb
  40cc05:	mov    ebx,0x2d1ac0c3
  40cc0a:	idiv   DWORD PTR [edi+0xb]
  40cc0d:	div    DWORD PTR [eax+0x5c]
  40cc10:	gs ja  0x40cc03
  40cc13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc14:	mov    ebx,0x814ce0c7
  40cc19:	xlat   BYTE PTR ds:[ebx]
  40cc1a:	mov    dl,0x70
  40cc1c:	dec    ebx
  40cc1d:	jae    0x40cc5a
  40cc1f:	sub    dh,0x74
  40cc22:	and    eax,eax
  40cc24:	inc    esp
  40cc25:	sahf   
  40cc26:	aaa    
  40cc27:	push   ds
  40cc28:	out    dx,al
  40cc29:	mov    eax,ds:0xef81900d
  40cc2e:	test   eax,0xa8e419ce
  40cc33:	xor    BYTE PTR [edx],0xf2
  40cc36:	jecxz  0x40cc2e
  40cc38:	xchg   edi,eax
  40cc39:	xor    BYTE PTR [ecx],0x5
  40cc3c:	push   edx
  40cc3d:	sbb    edx,esp
  40cc3f:	mov    al,ds:0xa8a72381
  40cc44:	(bad)  
  40cc46:	cli    
  40cc47:	adc    BYTE PTR [esi-0x2a],0xdd
  40cc4b:	aas    
  40cc4c:	xor    dh,BYTE PTR [edi+eiz*2-0x36]
  40cc50:	dec    ebx
  40cc51:	sub    ch,ch
  40cc53:	adc    DWORD PTR [edi+0x61],edx
  40cc56:	xor    DWORD PTR [ecx],0x7ba3cd74
  40cc5c:	out    dx,al
  40cc5d:	rcl    DWORD PTR [ecx-0x6347304a],0x60
  40cc64:	xor    al,BYTE PTR [ebx+edx*2-0x74dacf4]
  40cc6b:	(bad)  
  40cc6c:	mov    esp,0xda5db75e
  40cc71:	call   0xe867:0x877e2405
  40cc78:	xlat   BYTE PTR ds:[ebx]
  40cc79:	clc    
  40cc7a:	mov    eax,0x81fa3f34
  40cc7f:	cmp    BYTE PTR [ebx],dl
  40cc81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc82:	hlt    
  40cc83:	cmp    BYTE PTR [ecx+eiz*8+0x3e70ccaa],0xb8
  40cc8b:	stos   DWORD PTR es:[edi],eax
  40cc8c:	mov    edx,DWORD PTR [edx+edx*8]
  40cc8f:	add    ch,BYTE PTR [eax-0x7f7312ab]
  40cc95:	mov    BYTE PTR [esi],0x77
  40cc98:	data16 addr16 jne 0x40cc55
  40cc9c:	out    0x6a,eax
  40cc9e:	jns    0x40ccce
  40cca0:	cs test eax,0xe2beb968
  40cca6:	mov    eax,ds:0x5e4ab18
  40ccab:	mov    edi,0x90205bb
  40ccb0:	push   0x5a5247c0
  40ccb5:	jg     0x40ccbb
  40ccb7:	popa   
  40ccb8:	push   edi
  40ccb9:	and    DWORD PTR [edi-0x18bd03c],0xffffffcd
  40ccc0:	out    0x9d,al
  40ccc2:	in     eax,dx
  40ccc3:	pusha  
  40ccc4:	les    esi,FWORD PTR [esi-0x11]
  40ccc7:	(bad)  
  40ccc8:	aam    0x91
  40ccca:	retf   
  40cccb:	test   eax,0xbd5f5945
  40ccd0:	inc    edx
  40ccd1:	sub    al,0x5f
  40ccd3:	jl     0x40cc80
  40ccd5:	mov    eax,0x4caa3d2
  40ccda:	out    dx,al
  40ccdb:	inc    ebx
  40ccdc:	xor    edx,esi
  40ccde:	stos   BYTE PTR es:[edi],al
  40ccdf:	jnp    0x40cd58
  40cce1:	aad    0xae
  40cce3:	(bad)  
  40cce4:	push   ecx
  40cce5:	jle    0x40cd18
  40cce7:	outs   dx,DWORD PTR ds:[esi]
  40cce8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cce9:	add    eax,0xc58e5448
  40ccee:	mov    esp,0xa1943ca
  40ccf3:	xchg   ecx,eax
  40ccf4:	imul   ecx,DWORD PTR [ebx+0x3f260457],0x1b
  40ccfb:	jae    0x40cd7a
  40ccfd:	jne    0x40cc87
  40ccff:	push   es
  40cd00:	adc    esi,DWORD PTR [edx+0x1b]
  40cd03:	in     al,dx
  40cd04:	call   0x58e0ed05
  40cd09:	lahf   
  40cd0a:	cmp    BYTE PTR [edx-0x7023c550],0x6e
  40cd11:	mov    DWORD PTR [edi-0x2954180d],ecx
  40cd17:	arpl   WORD PTR [ecx-0x27],sp
  40cd1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd1b:	jmp    ebx
  40cd1d:	cwde   
  40cd1e:	xchg   edx,eax
  40cd1f:	pop    ss
  40cd20:	sahf   
  40cd21:	js     0x40ccd7
  40cd23:	sbb    ch,BYTE PTR [ecx]
  40cd25:	xchg   ebx,eax
  40cd26:	in     eax,0x74
  40cd28:	sbb    BYTE PTR [edx+0x13],0x8e
  40cd2c:	jp     0x40cd69
  40cd2e:	mov    cl,0x91
  40cd30:	push   edi
  40cd31:	cmp    al,0x81
  40cd33:	push   esp
  40cd34:	fist   WORD PTR [eax]
  40cd36:	xchg   ebp,eax
  40cd37:	aam    0x92
  40cd39:	retf   0x6629
  40cd3c:	dec    eax
  40cd3d:	push   ebx
  40cd3e:	jnp    0x40ccef
  40cd40:	mov    al,ds:0x8ea21a24
  40cd45:	mov    ecx,0xcdc288ea
  40cd4a:	cdq    
  40cd4b:	or     esp,edi
  40cd4d:	in     al,0x1a
  40cd4f:	dec    ebx
  40cd50:	mov    ch,0xec
  40cd52:	ret    
  40cd53:	pushf  
  40cd54:	outs   dx,BYTE PTR ds:[esi]
  40cd55:	call   0xd52ba233
  40cd5a:	mov    esi,0x4f8c7b2d
  40cd5f:	xchg   ebp,eax
  40cd60:	pop    es
  40cd61:	iret   
  40cd62:	xor    al,0x8b
  40cd64:	int3   
  40cd65:	das    
  40cd66:	lods   eax,DWORD PTR ds:[esi]
  40cd67:	imul   esp,DWORD PTR [edx-0x4b],0x5130a660
  40cd6e:	loop   0x40cdb0
  40cd70:	sbb    al,0x82
  40cd72:	xchg   BYTE PTR [eax],ch
  40cd74:	jo     0x40cdaf
  40cd76:	mov    DWORD PTR [edx],esp
  40cd78:	push   ebx
  40cd79:	repnz push 0x6ec62692
  40cd7f:	sbb    bl,BYTE PTR [edx+ecx*1]
  40cd82:	xchg   ebx,eax
  40cd83:	xchg   edi,eax
  40cd84:	xchg   esi,eax
  40cd85:	out    0x19,al
  40cd87:	cld    
  40cd88:	call   0x327d:0x6a7ac007
  40cd8f:	ja     0x40ce06
  40cd91:	or     DWORD PTR [ebx],esp
  40cd93:	out    0x30,eax
  40cd95:	not    DWORD PTR [edi+ebx*8-0x75]
  40cd99:	jns    0x40cd1d
  40cd9b:	jecxz  0x40cd71
  40cd9d:	hlt    
  40cd9e:	stos   BYTE PTR es:[edi],al
  40cd9f:	retf   0xc392
  40cda2:	xchg   DWORD PTR [ecx],edx
  40cda4:	mov    ah,0xe4
  40cda6:	sub    DWORD PTR [ebx+0x14e3d9b4],eax
  40cdac:	mov    ds:0x5ec44ada,eax
  40cdb1:	inc    edi
  40cdb2:	dec    eax
  40cdb3:	pop    eax
  40cdb4:	cmp    bl,dh
  40cdb6:	lods   al,BYTE PTR ds:[esi]
  40cdb7:	ins    BYTE PTR es:[edi],dx
  40cdb8:	mov    cs,ecx
  40cdba:	test   al,0xc0
  40cdbc:	jne    0x40cdf2
  40cdbe:	popa   
  40cdbf:	test   eax,0x7ac18f4f
  40cdc4:	add    DWORD PTR [eax],esi
  40cdc6:	mov    dh,0xa6
  40cdc8:	add    DWORD PTR [esi+0x71],ebp
  40cdcb:	rcl    DWORD PTR [esi+0x2bea529],1
  40cdd1:	loop   0x40cd7e
  40cdd3:	xchg   DWORD PTR [edx+0x5b4d08f8],esi
  40cdd9:	cmp    esp,edx
  40cddb:	out    dx,eax
  40cddc:	lahf   
  40cddd:	xchg   edx,eax
  40cdde:	pop    eax
  40cddf:	cmp    al,0x68
  40cde1:	or     dl,BYTE PTR [eax+0x11]
  40cde4:	stc    
  40cde5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cde6:	call   0x3f4149f8
  40cdeb:	fist   WORD PTR [ecx+esi*8]
  40cdee:	push   edx
  40cdef:	adc    edi,DWORD PTR [eax]
  40cdf1:	shl    DWORD PTR [ebx-0x175b9c03],0x78
  40cdf8:	add    ch,BYTE PTR [ecx-0x351ebcae]
  40cdfe:	(bad)  
  40cdff:	mov    ch,0xa9
  40ce01:	dec    esp
  40ce02:	push   ds
  40ce03:	mov    ah,0x66
  40ce05:	fild   DWORD PTR [eax]
  40ce07:	nop
  40ce08:	vprotq xmm7,xmm7,0x3c
  40ce0d:	pop    ss
  40ce0e:	clc    
  40ce0f:	jns    0x40ce3f
  40ce11:	outs   dx,DWORD PTR ds:[esi]
  40ce12:	js     0x40cdd4
  40ce14:	sub    ecx,esi
  40ce16:	sub    DWORD PTR [ecx],esi
  40ce18:	push   cs
  40ce19:	add    BYTE PTR [edi-0x61740b1d],dl
  40ce1f:	mov    ah,0x33
  40ce21:	stos   BYTE PTR es:[edi],al
  40ce22:	or     eax,0xd153b2f8
  40ce27:	xchg   DWORD PTR [ebp-0x8ed0921],ebx
  40ce2d:	inc    ecx
  40ce2e:	je     0x40ce79
  40ce30:	(bad)  
  40ce31:	fs fs pop es
  40ce34:	xchg   edi,eax
  40ce35:	sahf   
  40ce36:	call   0x4959f106
  40ce3b:	mov    eax,ds:0xce3964da
  40ce40:	popf   
  40ce41:	adc    eax,0x6b533b4e
  40ce46:	shl    DWORD PTR [ebx+0x45],0xfa
  40ce4a:	rep outs dx,BYTE PTR ds:[esi]
  40ce4c:	push   ds
  40ce4d:	push   ecx
  40ce4e:	std    
  40ce4f:	jmp    DWORD PTR [esi+0x24fe2092]
  40ce55:	mov    ebx,esi
  40ce57:	or     ch,bl
  40ce59:	out    0xd7,al
  40ce5b:	leave  
  40ce5c:	pop    edx
  40ce5d:	xchg   ebx,eax
  40ce5e:	push   edi
  40ce5f:	sub    BYTE PTR [esi-0x7630d280],0x51
  40ce66:	inc    eax
  40ce67:	lods   al,BYTE PTR ds:[esi]
  40ce68:	and    ah,0x21
  40ce6b:	(bad)  
  40ce6c:	cmc    
  40ce6d:	push   0x3e8841b3
  40ce72:	inc    esi
  40ce73:	cdq    
  40ce74:	adc    DWORD PTR [esi-0x183d6e8a],edi
  40ce7a:	sbb    ch,ah
  40ce7c:	jp     0x40ce67
  40ce7e:	mov    esp,0x76cdddff
  40ce83:	adc    al,0x49
  40ce85:	xchg   ebx,eax
  40ce86:	mov    bx,dx
  40ce89:	mov    bl,0xf9
  40ce8b:	loope  0x40ceb2
  40ce8d:	jb     0x40cf01
  40ce8f:	dec    esp
  40ce90:	pop    edi
  40ce91:	sub    bh,BYTE PTR [edx+esi*4-0xb]
  40ce95:	xor    BYTE PTR [edi*4+0x595f009d],ah
  40ce9c:	inc    ecx
  40ce9d:	xlat   BYTE PTR ds:[ebx]
  40ce9e:	ret    
  40ce9f:	das    
  40cea0:	dec    edi
  40cea1:	popa   
  40cea2:	es inc edi
  40cea4:	mov    cl,0x1e
  40cea6:	or     DWORD PTR [eax-0x93c0257],eax
  40ceac:	mov    ah,0xb9
  40ceae:	inc    ecx
  40ceaf:	fsubr  st,st(5)
  40ceb1:	or     al,0x95
  40ceb3:	and    dl,bl
  40ceb5:	xchg   edi,eax
  40ceb6:	add    bh,BYTE PTR ds:0x927437ab
  40cebc:	jl     0x40cefc
  40cebe:	sar    DWORD PTR cs:[eax],0x33
  40cec2:	call   0xc3a30622
  40cec7:	and    DWORD PTR [edi*4-0x4352dc0],ebx
  40cece:	call   0x7333:0x119af6d5
  40ced5:	fcmovbe st,st(3)
  40ced7:	gs mov al,0xde
  40ceda:	mov    ch,0x88
  40cedc:	stc    
  40cedd:	(bad)  
  40cede:	retf   0x8bc9
  40cee1:	or     eax,DWORD PTR [ebp+0x1a]
  40cee4:	dec    edi
  40cee5:	xchg   ebx,eax
  40cee6:	js     0x40ceb8
  40cee8:	inc    edi
  40cee9:	mov    cl,0xdc
  40ceeb:	push   ebx
  40ceec:	cmp    ecx,DWORD PTR [ebx+0x38b72f60]
  40cef2:	mov    edx,0x90c95540
  40cef7:	lds    eax,FWORD PTR [esi+0x65be78ea]
  40cefd:	mov    WORD PTR [ecx-0x4cc55b92],es
  40cf03:	mov    dl,dh
  40cf05:	pop    ebx
  40cf06:	(bad)  
  40cf07:	mov    dl,0x2e
  40cf09:	aam    0xdd
  40cf0b:	dec    esp
  40cf0c:	les    ecx,FWORD PTR [ebp-0x2f]
  40cf0f:	fcmovnbe st,st(7)
  40cf11:	loope  0x40ceaa
  40cf13:	adc    DWORD PTR [esi],ebx
  40cf15:	lods   al,BYTE PTR ds:[esi]
  40cf16:	jg     0x40cf6c
  40cf18:	(bad)  
  40cf19:	and    ebx,DWORD PTR [ebp+0x76]
  40cf1c:	pusha  
  40cf1d:	xchg   DWORD PTR [edi+0x1b994d6b],esp
  40cf23:	xchg   ebp,eax
  40cf24:	sub    esp,DWORD PTR [esi+0x655f5763]
  40cf2a:	(bad)  
  40cf2b:	xor    ch,BYTE PTR [ebx]
  40cf2d:	clc    
  40cf2e:	inc    ecx
  40cf2f:	jecxz  0x40cf64
  40cf31:	(bad)  
  40cf32:	xchg   esp,eax
  40cf33:	push   edi
  40cf34:	mov    dl,0x12
  40cf36:	lods   al,BYTE PTR ds:[esi]
  40cf37:	je     0x40cf7a
  40cf39:	fisttp WORD PTR [ecx+0x1a]
  40cf3c:	aam    0xaf
  40cf3e:	xchg   ebp,eax
  40cf3f:	cli    
  40cf40:	aam    0x28
  40cf42:	xlat   BYTE PTR ds:[ebx]
  40cf43:	cmp    ecx,DWORD PTR [ebx+eax*4+0x6b]
  40cf47:	bswap  ebp
  40cf49:	adc    DWORD PTR [ecx-0x6c383f07],0xe9ada5a9
  40cf53:	push   ds
  40cf54:	jno    0x40cf48
  40cf56:	sti    
  40cf57:	cli    
  40cf58:	and    edx,DWORD PTR [edx]
  40cf5a:	pop    DWORD PTR [esp+ebx*8+0x1c101483]
  40cf61:	push   esi
  40cf62:	inc    ecx
  40cf63:	and    al,0x45
  40cf65:	xchg   esp,eax
  40cf66:	aad    0xcf
  40cf68:	xchg   esp,eax
  40cf69:	outs   dx,DWORD PTR ds:[esi]
  40cf6a:	mul    DWORD PTR [ebx]
  40cf6c:	push   0xffffffc0
  40cf6e:	aam    0x22
  40cf70:	mov    dh,0xf2
  40cf72:	leave  
  40cf73:	sbb    al,0x9b
  40cf75:	or     eax,0x8e9f2762
  40cf7a:	push   0xffffffbe
  40cf7c:	mov    esi,0xe18257ca
  40cf81:	ss repnz std 
  40cf84:	dec    ebx
  40cf85:	in     eax,0xeb
  40cf87:	(bad)  
  40cf88:	repz or ebx,edx
  40cf8b:	mov    ebx,0x628a0919
  40cf90:	ja     0x40d00b
  40cf92:	dec    edx
  40cf93:	call   0x1e8e7f6d
  40cf98:	xchg   edi,eax
  40cf99:	cmovo  ebx,DWORD PTR [bp+di]
  40cf9d:	mov    ecx,0x5b1ac8e6
  40cfa2:	or     BYTE PTR [ecx],ch
  40cfa4:	jl     0x40d00f
  40cfa6:	mov    esi,0xd29774c
  40cfab:	fs es std 
  40cfae:	or     esp,DWORD PTR [ecx+edx*8-0x55]
  40cfb2:	test   eax,0xfca84e1b
  40cfb7:	push   ss
  40cfb8:	hlt    
  40cfb9:	pop    edx
  40cfba:	out    dx,eax
  40cfbb:	retf   0xc9fb
  40cfbe:	xor    al,0xc0
  40cfc0:	int3   
  40cfc1:	cld    
  40cfc2:	out    dx,eax
  40cfc3:	cmc    
  40cfc4:	scas   eax,DWORD PTR es:[edi]
  40cfc5:	arpl   WORD PTR [ecx],bx
  40cfc7:	(bad)  
  40cfc8:	aam    0x69
  40cfca:	add    cl,ch
  40cfcc:	cmp    eax,0x55fe3e14
  40cfd1:	and    DWORD PTR [ebp+0x77],esp
  40cfd4:	pop    edi
  40cfd5:	aam    0x6e
  40cfd7:	enter  0xa9dd,0xb0
  40cfdb:	sti    
  40cfdc:	shl    DWORD PTR [eax-0x22c90309],cl
  40cfe2:	mov    BYTE PTR [edx+0x5fcdd06f],bh
  40cfe8:	fsub   st(1),st
  40cfea:	lea    edx,[eax]
  40cfec:	fst    DWORD PTR [eax]
  40cfee:	in     eax,0xb8
  40cff0:	xor    bh,0xda
  40cff3:	call   0x4e81:0xef69d31
  40cffa:	inc    ecx
  40cffb:	cmc    
  40cffc:	daa    
  40cffd:	mov    ds:0x7914193,al
  40d002:	mov    ecx,es
  40d004:	sahf   
  40d005:	jmp    0x40d04c
  40d007:	xlat   BYTE PTR ds:[ebx]
  40d008:	out    dx,al
  40d009:	arpl   WORD PTR [eax-0x4f],cx
  40d00c:	aas    
  40d00d:	ss add edx,eax
  40d010:	comiss xmm4,xmm5
  40d013:	push   0x37c5ad12
  40d018:	add    DWORD PTR [edx],0xffffffce
  40d01b:	push   0xffffff96
  40d01d:	sar    BYTE PTR [edx+0x6c],cl
  40d020:	mov    al,0x8c
  40d022:	sub    dh,BYTE PTR [ebx-0x379fb420]
  40d028:	xor    al,0x50
  40d02a:	xchg   ecx,eax
  40d02b:	imul   eax,esp,0xa341ebef
  40d031:	mov    eax,ds:0xef28773e
  40d036:	inc    ecx
  40d037:	into   
  40d038:	fiadd  DWORD PTR [eax+ebp*4+0x5f]
  40d03c:	push   ecx
  40d03d:	add    ebp,DWORD PTR [ecx+ebp*2]
  40d040:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d041:	sti    
  40d042:	int3   
  40d043:	cdq    
  40d044:	arpl   WORD PTR [esi+0x51],sp
  40d047:	sti    
  40d048:	leave  
  40d049:	and    DWORD PTR [esp+edi*1+0x36],ebp
  40d04d:	and    bl,BYTE PTR [esi+0x27]
  40d050:	(bad)  
  40d051:	int3   
  40d052:	or     DWORD PTR [edi+edx*8-0x7c92b236],esi
  40d059:	stos   DWORD PTR es:[edi],eax
  40d05a:	stos   BYTE PTR es:[edi],al
  40d05b:	jecxz  0x40d034
  40d05d:	sbb    eax,0x44b83b05
  40d062:	jl     0x40cff2
  40d064:	bound  edx,QWORD PTR [edi+0x16]
  40d067:	(bad)  
  40d069:	(bad)
  40d06c:	mov    ecx,0xf0cc3fa8
  40d071:	push   ecx
  40d072:	les    ebp,FWORD PTR [esi-0x72]
  40d075:	pop    esi
  40d076:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d077:	xchg   edi,eax
  40d078:	inc    ebx
  40d079:	inc    ebp
  40d07a:	xchg   BYTE PTR [esp+edx*4-0x5],al
  40d07e:	or     bh,BYTE PTR [esi+eax*4+0x66]
  40d082:	pop    ecx
  40d083:	js     0x40d064
  40d085:	inc    eax
  40d086:	and    eax,0xecc7711e
  40d08b:	push   ebp
  40d08c:	arpl   cx,bp
  40d08e:	mov    eax,ds:0x7ba3c48d
  40d093:	jge    0x40d020
  40d095:	jne    0x40d0b0
  40d097:	ror    BYTE PTR [eax],cl
  40d099:	jl     0x40d0e3
  40d09b:	scas   al,BYTE PTR es:[edi]
  40d09c:	mov    bh,0x61
  40d09e:	push   0xffffffe7
  40d0a0:	mov    edx,0x1b60d132
  40d0a5:	in     al,0x89
  40d0a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0a8:	ss inc ebx
  40d0aa:	ins    BYTE PTR es:[edi],dx
  40d0ab:	ja     0x40d107
  40d0ad:	inc    ecx
  40d0ae:	(bad)  
  40d0b0:	ret    
  40d0b1:	ret    
  40d0b2:	test   eax,0x72cd83eb
  40d0b7:	push   cs
  40d0b8:	xchg   edi,eax
  40d0b9:	xchg   edx,ebx
  40d0bb:	or     ch,ah
  40d0bd:	sbb    al,0x79
  40d0bf:	cwde   
  40d0c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0c1:	jo     0x40d0e2
  40d0c3:	xchg   esi,eax
  40d0c4:	mov    bl,0x72
  40d0c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0c7:	jb     0x40d0d2
  40d0c9:	mov    edi,0x81ace0a7
  40d0ce:	jl     0x40d0d3
  40d0d0:	cmp    esp,DWORD PTR [ecx+0x24c2cf93]
  40d0d6:	and    esi,esp
  40d0d8:	pushf  
  40d0d9:	pop    ebx
  40d0da:	ret    
  40d0db:	icebp  
  40d0dc:	imul   esi,esp,0x37067d2
  40d0e2:	out    dx,al
  40d0e3:	sub    al,0x81
  40d0e5:	pop    esi
  40d0e6:	xlat   BYTE PTR ds:[ebx]
  40d0e7:	nop
  40d0e8:	sbb    ebp,DWORD PTR gs:[ebp-0x70c73f39]
  40d0ef:	add    DWORD PTR [edx+esi*2+0x17],esp
  40d0f3:	cmp    DWORD PTR [ecx-0x11a9a5a3],esp
  40d0f9:	or     DWORD PTR [esi],esi
  40d0fb:	test   al,0x65
  40d0fd:	scas   al,BYTE PTR es:[edi]
  40d0fe:	test   bl,ah
  40d100:	test   dl,dh
  40d102:	mov    bl,0x4c
  40d104:	mov    dh,0x7a
  40d106:	leave  
  40d107:	push   es
  40d108:	and    DWORD PTR [ebx+0x5],0x59
  40d10c:	popf   
  40d10d:	mov    ebp,0x9d232b72
  40d112:	mov    cl,0x19
  40d114:	repz pushf 
  40d116:	push   ss
  40d117:	mov    DWORD PTR [edx-0x7c],0x59b69c13
  40d11e:	push   ebp
  40d11f:	stos   BYTE PTR es:[edi],al
  40d120:	cdq    
  40d121:	cmp    cl,BYTE PTR [esi+0x7f]
  40d124:	daa    
  40d125:	and    ecx,DWORD PTR [edx+0x70]
  40d128:	fsubp  st(3),st
  40d12a:	jp     0x40d12c
  40d12c:	xchg   edi,eax
  40d12d:	mov    eax,0xca445f6b
  40d132:	cli    
  40d133:	push   ebp
  40d134:	or     dh,BYTE PTR [ecx+0x1a04128e]
  40d13a:	rol    BYTE PTR [ebx],cl
  40d13c:	lea    edi,[ebx]
  40d13e:	pop    gs
  40d140:	xchg   edi,eax
  40d141:	mov    edx,0xcf0df44d
  40d146:	ret    
  40d147:	rcl    ecx,1
  40d149:	mov    bh,0x91
  40d14b:	pop    edx
  40d14c:	stc    
  40d14d:	and    ecx,esi
  40d14f:	or     BYTE PTR [ebx-0x66f0df40],cl
  40d155:	(bad)  
  40d156:	sbb    al,ch
  40d158:	add    BYTE PTR [ebx-0xb9fce10],al
  40d15e:	loope  0x40d1c6
  40d160:	ss popa 
  40d162:	mov    ah,0x7d
  40d164:	adc    DWORD PTR [edx+0x50],edx
  40d167:	out    dx,al
  40d168:	adc    dx,WORD PTR ds:0xbba3bafd
  40d16f:	inc    esp
  40d170:	scas   eax,DWORD PTR es:[edi]
  40d171:	test   BYTE PTR ds:0xf4d61268,ch
  40d177:	xchg   ch,dl
  40d179:	aaa    
  40d17a:	pop    edx
  40d17b:	daa    
  40d17c:	push   edx
  40d17d:	xor    BYTE PTR gs:[ecx],0x82
  40d181:	mov    cl,0x63
  40d183:	fst    st(4)
  40d185:	js     0x40d151
  40d187:	sbb    cl,bh
  40d189:	mov    ebp,0xdc522c79
  40d18e:	xchg   ebp,eax
  40d18f:	sbb    BYTE PTR [ebp-0x62],bl
  40d192:	jl     0x40d154
  40d194:	mov    edi,0x1d8df7e8
  40d199:	into   
  40d19a:	and    edx,eax
  40d19c:	ds sbb dl,0xbc
  40d1a0:	add    ecx,DWORD PTR [edx+0x56]
  40d1a3:	sbb    ch,ah
  40d1a5:	mov    eax,0xd27fb18
  40d1aa:	sti    
  40d1ab:	call   FWORD PTR [edx]
  40d1ad:	sub    BYTE PTR [esp+0x15498993],cl
  40d1b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1b5:	jg     0x40d225
  40d1b7:	(bad)  
  40d1b8:	das    
  40d1b9:	test   al,0xa3
  40d1bb:	xor    al,0xd6
  40d1bd:	rol    BYTE PTR [esi],0xf3
  40d1c0:	jb     0x40d14e
  40d1c2:	mov    ds:0xf294f831,eax
  40d1c7:	cmp    ebx,DWORD PTR [esi]
  40d1c9:	sub    al,0x83
  40d1cb:	dec    ebx
  40d1cc:	adc    DWORD PTR [edx],ecx
  40d1ce:	cs jl  0x40d247
  40d1d1:	std    
  40d1d2:	xchg   ebp,eax
  40d1d3:	xor    BYTE PTR [ecx],0x97
  40d1d6:	clc    
  40d1d7:	stos   DWORD PTR es:[edi],eax
  40d1d8:	shr    BYTE PTR [eax],cl
  40d1da:	sbb    eax,0x552abcd
  40d1df:	sub    eax,0x1a335f48
  40d1e4:	add    eax,0x13ee327e
  40d1e9:	in     al,0x4d
  40d1eb:	loopne 0x40d17a
  40d1ed:	add    eax,0x873087c1
  40d1f2:	jmp    0xbdd45150
  40d1f7:	mov    esp,0xfb4d0ce1
  40d1fc:	dec    ebx
  40d1fd:	std    
  40d1fe:	aaa    
  40d1ff:	sub    eax,0x94fa0744
  40d204:	cs iret 
  40d206:	out    0xa8,al
  40d208:	sub    DWORD PTR [eax],0x96a09401
  40d20e:	or     DWORD PTR [edx-0x57],esi
  40d211:	or     ebp,DWORD PTR [eax+0x24]
  40d214:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d215:	(bad)  
  40d216:	cmp    eax,0x49b27654
  40d21b:	pushf  
  40d21c:	push   edx
  40d21d:	imul   eax,DWORD PTR ds:0xbee4777b,0xfc69a4b4
  40d227:	mov    edi,0x71a4fd46
  40d22c:	mov    ecx,0xd9ebb209
  40d231:	cmp    edx,ebx
  40d233:	sub    al,0xc7
  40d235:	jg     0x40d21a
  40d237:	mov    dh,0x73
  40d239:	mov    dl,0x14
  40d23b:	stos   DWORD PTR es:[edi],eax
  40d23c:	in     eax,dx
  40d23d:	sub    al,0xda
  40d23f:	push   0xffffffc6
  40d241:	xor    al,0xdd
  40d243:	das    
  40d244:	jmp    0x9ab8:0x8e8c5e13
  40d24b:	sti    
  40d24c:	(bad)  
  40d24d:	pop    ecx
  40d24e:	xor    DWORD PTR [ecx+ebp*1+0xc],eax
  40d252:	dec    edx
  40d253:	sti    
  40d254:	(bad)  
  40d256:	xor    dh,ch
  40d258:	xor    BYTE PTR [ebp-0x26],al
  40d25b:	stos   DWORD PTR es:[edi],eax
  40d25c:	les    edi,FWORD PTR [esp+eiz*8-0x34]
  40d260:	pop    eax
  40d261:	xor    eax,0xd1599ba9
  40d266:	das    
  40d267:	add    ebp,DWORD PTR [ecx+ebx*2+0x18421a7c]
  40d26e:	adc    BYTE PTR [ecx-0x692335df],ch
  40d274:	and    eax,0xc12c8a74
  40d279:	(bad)  
  40d27a:	das    
  40d27b:	push   ds
  40d27c:	fwait
  40d27d:	rcr    DWORD PTR [ebx],0x62
  40d280:	scas   eax,DWORD PTR es:[edi]
  40d281:	or     eax,0xc6df0cf
  40d286:	mov    WORD PTR [ecx-0x2008405a],fs
  40d28c:	popa   
  40d28d:	stos   DWORD PTR es:[edi],eax
  40d28e:	push   ebp
  40d28f:	aas    
  40d290:	shr    BYTE PTR [edi+0x5832445c],1
  40d296:	jne    0x40d2c1
  40d298:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d299:	fsubr  DWORD PTR [ecx+eiz*2+0x41]
  40d29d:	mov    edi,0x83112df9
  40d2a2:	es pusha 
  40d2a4:	fs fsub st,st(2)
  40d2a7:	adc    esp,DWORD PTR [ecx-0x4ff63838]
  40d2ad:	mov    cl,ah
  40d2af:	mul    DWORD PTR [eax+0x12a178c4]
  40d2b5:	ret    
  40d2b6:	pusha  
  40d2b7:	add    eax,0xcdacffd8
  40d2bc:	mov    eax,DWORD PTR [esi]
  40d2be:	mov    WORD PTR [esi+0x7ffc09fc],ds
  40d2c4:	lds    ebp,FWORD PTR [esi+0x77b33f7]
  40d2ca:	xchg   edx,eax
  40d2cb:	pop    es
  40d2cc:	add    ecx,DWORD PTR [ebp-0x235a3275]
  40d2d2:	leave  
  40d2d3:	sbb    DWORD PTR [esi-0x75],ebp
  40d2d6:	fnstcw WORD PTR [ebp+0x55]
  40d2d9:	lock int 0x9a
  40d2dc:	out    0x97,al
  40d2de:	and    eax,0x35460311
  40d2e4:	(bad)  
  40d2e5:	mov    esp,0xdca17738
  40d2ea:	xchg   ecx,eax
  40d2eb:	push   ebp
  40d2ec:	sbb    ah,ch
  40d2ee:	rol    DWORD PTR [ebx+ecx*4],1
  40d2f1:	mov    BYTE PTR [ebx-0x4e],dl
  40d2f4:	xchg   DWORD PTR [ebx],eax
  40d2f6:	cmp    BYTE PTR [eax+0x1f6c88b6],0xbd
  40d2fd:	mov    DWORD PTR [esi+0x74],ecx
  40d300:	jb     0x40d37b
  40d302:	add    edi,DWORD PTR [edi]
  40d304:	repnz and al,0x3f
  40d307:	or     eax,0x30a8baca
  40d30c:	mov    ds:0x1494b619,eax
  40d311:	push   edx
  40d312:	jno    0x40d32c
  40d314:	pusha  
  40d315:	pop    ecx
  40d316:	push   es
  40d317:	mov    ds:0x7eb44273,eax
  40d31c:	cmp    eax,DWORD PTR [ecx]
  40d31e:	inc    ebx
  40d31f:	mov    ebp,0x451601ae
  40d324:	ins    DWORD PTR es:[edi],dx
  40d325:	popf   
  40d326:	adc    BYTE PTR [esi+edi*2],ch
  40d329:	add    dl,BYTE PTR [eax-0x19ef2137]
  40d32f:	iret   
  40d330:	xor    cl,bl
  40d332:	jl     0x40d362
  40d334:	sub    eax,edi
  40d336:	mov    bl,BYTE PTR [esi+0x4c]
  40d339:	scas   al,BYTE PTR es:[edi]
  40d33a:	dec    edi
  40d33b:	sbb    ch,BYTE PTR [eax-0x79]
  40d33e:	mov    fs,WORD PTR [edi-0x1841f72b]
  40d344:	das    
  40d345:	and    ecx,ecx
  40d347:	pop    DWORD PTR [ebp+eiz*4-0x5146ce6f]
  40d34e:	adc    DWORD PTR [ebx],edx
  40d350:	retf   0xaf4c
  40d353:	pop    ebx
  40d354:	jae    0x40d2f4
  40d356:	mov    ebp,DWORD PTR [ebx-0x15260f29]
  40d35c:	push   ss
  40d35d:	adc    DWORD PTR [ebx-0xa919c5],edx
  40d363:	div    DWORD PTR [ecx-0x5a]
  40d366:	sar    cl,cl
  40d368:	stos   BYTE PTR es:[edi],al
  40d369:	adc    DWORD PTR [esi-0x5bb23a0b],0xffffffe7
  40d370:	push   eax
  40d371:	mov    esi,DWORD PTR [esi]
  40d373:	fstp   st(1)
  40d375:	sub    BYTE PTR [ebx],bl
  40d377:	jp     0x40d363
  40d379:	jo     0x40d317
  40d37b:	cmp    esi,DWORD PTR gs:[ebx]
  40d37e:	adc    eax,0xbd7554df
  40d383:	sub    BYTE PTR [ecx+0x72],0x35
  40d387:	mov    edx,0xe7b772f3
  40d38c:	xchg   ecx,eax
  40d38d:	mov    ah,0x7c
  40d38f:	xchg   esp,eax
  40d390:	adc    eax,0xc4d6a6cb
  40d395:	mov    cl,0xff
  40d397:	loop   0x40d367
  40d399:	xchg   esp,eax
  40d39a:	sbb    BYTE PTR [ebp-0x32cd3b4],ah
  40d3a0:	loope  0x40d331
  40d3a2:	jge    0x40d3c0
  40d3a4:	div    BYTE PTR [eax+0x57]
  40d3a7:	sar    BYTE PTR cs:0x568e20d6,1
  40d3ae:	cmp    DWORD PTR [eax+edi*2+0x78f0b51e],esi
  40d3b5:	leave  
  40d3b6:	clc    
  40d3b7:	inc    esi
  40d3b8:	jne    0x40d3b9
  40d3ba:	mov    ds:0xf26438bf,al
  40d3bf:	pop    ds
  40d3c0:	add    BYTE PTR [esi+eiz*4-0x57],ah
  40d3c4:	mov    eax,0xe56c0550
  40d3c9:	push   cs
  40d3ca:	rol    DWORD PTR [esi+0x680ddb9c],1
  40d3d0:	mov    dh,ch
  40d3d2:	xchg   ebx,eax
  40d3d3:	out    0x4e,eax
  40d3d5:	leave  
  40d3d6:	jae    0x40d392
  40d3d8:	add    DWORD PTR [eax+0x6d99619a],0x28c532f
  40d3e2:	pop    ebp
  40d3e3:	or     DWORD PTR [esi],esp
  40d3e5:	inc    ebp
  40d3e6:	les    esp,FWORD PTR [edx]
  40d3e8:	ja     0x40d3d4
  40d3ea:	add    dl,al
  40d3ec:	std    
  40d3ed:	fsub   st(7),st
  40d3ef:	adc    edi,DWORD PTR [eax-0x608b3fbf]
  40d3f5:	dec    edx
  40d3f6:	push   edx
  40d3f7:	packssdw mm3,mm3
  40d3fa:	test   eax,0xd5760ecb
  40d3ff:	push   esp
  40d400:	(bad)  
  40d401:	push   ss
  40d402:	dec    esp
  40d403:	fdiv   QWORD PTR [ebx]
  40d405:	xor    edx,ebp
  40d407:	ret    0x838e
  40d40a:	jno    0x40d437
  40d40c:	and    ch,dh
  40d40e:	mov    dl,0x47
  40d410:	add    DWORD PTR [edx-0x19],ecx
  40d413:	xchg   ebx,eax
  40d414:	sar    DWORD PTR [eax],0x84
  40d417:	dec    ebp
  40d418:	and    sp,bp
  40d41b:	dec    ebx
  40d41c:	pop    ss
  40d41d:	dec    edx
  40d41e:	in     eax,dx
  40d41f:	pop    esp
  40d420:	push   cs
  40d421:	(bad)  
  40d422:	push   edi
  40d423:	pop    ds
  40d424:	mov    cl,0x56
  40d426:	icebp  
  40d427:	xchg   esp,eax
  40d428:	fcmovbe st,st(3)
  40d42a:	mov    bl,0x19
  40d42c:	jmp    0x40d43c
  40d42e:	shl    BYTE PTR [edx+0x4f],cl
  40d431:	addr16 jns 0x40d3d3
  40d434:	or     ebp,esi
  40d436:	leave  
  40d437:	es adc edi,eax
  40d43a:	adc    BYTE PTR [edi],ch
  40d43c:	mov    edx,0x94aeae4
  40d441:	push   es
  40d442:	xor    bl,bl
  40d444:	inc    edi
  40d445:	or     eax,0xa93b589b
  40d44a:	dec    ecx
  40d44b:	cmc    
  40d44c:	lahf   
  40d44d:	mov    dl,0xdd
  40d44f:	xlat   BYTE PTR ds:[ebx]
  40d450:	fisubr WORD PTR [edx+0x4426d6e0]
  40d456:	rcl    esi,0x2
  40d459:	test   BYTE PTR [edx+eax*8-0x362cd082],cl
  40d460:	xor    DWORD PTR [edi+0x1c],edx
  40d463:	mov    ds:0x7acd0374,al
  40d468:	mov    eax,esp
  40d46a:	mov    edx,0x6828274b
  40d46f:	(bad)  
  40d470:	daa    
  40d471:	fcom   QWORD PTR [eax+0x942c002]
  40d477:	sub    BYTE PTR [esi-0xad920db],ah
  40d47d:	lahf   
  40d47e:	add    BYTE PTR [esi+0xb3b0690],bl
  40d484:	inc    eax
  40d485:	dec    ecx
  40d486:	pop    ebp
  40d487:	stc    
  40d488:	fisub  WORD PTR [ebx+eiz*2]
  40d48b:	in     eax,dx
  40d48c:	add    BYTE PTR [ebx-0x22f79a76],bl
  40d492:	das    
  40d493:	aam    0xa5
  40d495:	fmul   QWORD PTR [edx-0x2a8a3efb]
  40d49b:	popa   
  40d49c:	mov    ebx,0x62fefd03
  40d4a1:	jl     0x40d519
  40d4a3:	(bad)  
  40d4a4:	scas   al,BYTE PTR es:[edi]
  40d4a5:	fcmovu st,st(6)
  40d4a7:	push   ss
  40d4a8:	gs gs out 0x9c,eax
  40d4ac:	out    dx,eax
  40d4ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4ae:	push   ebp
  40d4af:	fs dec eax
  40d4b1:	ins    DWORD PTR es:[edi],dx
  40d4b2:	shr    BYTE PTR [eax-0x67],0xa5
  40d4b6:	in     eax,dx
  40d4b7:	xchg   edi,eax
  40d4b8:	xchg   BYTE PTR ds:0x6490b0a0,dh
  40d4be:	or     eax,0x2fbad947
  40d4c3:	mov    bh,cl
  40d4c5:	sbb    bh,bh
  40d4c7:	scas   eax,DWORD PTR es:[edi]
  40d4c8:	nop
  40d4c9:	push   ss
  40d4ca:	icebp  
  40d4cb:	mov    dh,BYTE PTR [ebp-0xfdd66]
  40d4d1:	push   ds
  40d4d2:	cmc    
  40d4d3:	pop    ebx
  40d4d4:	repz jnp 0x40d465
  40d4d7:	mov    WORD PTR ds:0x7f7c02d6,ds
  40d4dd:	add    ebx,ebx
  40d4df:	in     al,0xc1
  40d4e1:	inc    ebp
  40d4e2:	leave  
  40d4e3:	cmp    al,0x14
  40d4e5:	inc    edx
  40d4e6:	inc    ecx
  40d4e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4e8:	xor    DWORD PTR [esi],0xffffff98
  40d4eb:	mov    WORD PTR [edi-0x72b31204],gs
  40d4f1:	stos   DWORD PTR es:[edi],eax
  40d4f2:	stc    
  40d4f3:	stos   DWORD PTR es:[edi],eax
  40d4f4:	xchg   eax,ebp
  40d4f6:	shl    BYTE PTR [esi+0x59],0xf
  40d4fa:	dec    edi
  40d4fb:	jl     0x40d557
  40d4fd:	lahf   
  40d4fe:	rol    DWORD PTR [edx],cl
  40d500:	and    DWORD PTR ds:0xa0e5e54f,ecx
  40d506:	hlt    
  40d507:	jle    0x40d56f
  40d509:	jmp    0x40d49f
  40d50b:	imul   eax,DWORD PTR [eax+0x6fb26884],0xa0edb7d0
  40d515:	add    dl,bl
  40d517:	inc    esp
  40d518:	mov    al,0x50
  40d51a:	dec    ebx
  40d51b:	pop    ss
  40d51c:	leave  
  40d51d:	retf   0xdd7f
  40d520:	cmp    edx,ecx
  40d522:	mov    edi,0xd31675b7
  40d527:	out    0x81,eax
  40d529:	or     eax,0x9733d38a
  40d52e:	or     al,0x3d
  40d530:	fcmovb st,st(4)
  40d532:	out    dx,eax
  40d533:	int3   
  40d534:	jno    0x40d539
  40d536:	repnz mov edx,0x522a4b63
  40d53c:	push   esp
  40d53d:	push   esi
  40d53e:	out    dx,eax
  40d53f:	cdq    
  40d540:	mov    esp,0x295f7f63
  40d545:	and    DWORD PTR [edx],esp
  40d547:	push   ebx
  40d548:	mov    edi,0x4b4b846c
  40d54d:	jecxz  0x40d4d9
  40d54f:	push   eax
  40d550:	and    ah,ah
  40d552:	arpl   dx,si
  40d554:	mov    DWORD PTR [ebp+0x6b],ebx
  40d557:	ret    0x670f
  40d55a:	sbb    dl,BYTE PTR [esp+ebp*2]
  40d55d:	inc    ebx
  40d55f:	aas    
  40d560:	and    BYTE PTR ds:0xe7938c5b,bl
  40d566:	sti    
  40d567:	dec    ebx
  40d568:	inc    edi
  40d569:	in     eax,dx
  40d56a:	lods   al,BYTE PTR ds:[esi]
  40d56b:	lea    esp,[eax-0x743d09fe]
  40d571:	sub    al,0xd8
  40d573:	sbb    DWORD PTR [ebx],eax
  40d575:	and    bh,BYTE PTR ds:0xf802f290
  40d57b:	idiv   DWORD PTR [esp+esi*2-0x6409db48]
  40d582:	fistp  QWORD PTR [eax]
  40d584:	(bad)  
  40d585:	rcl    BYTE PTR [edi+0x5d],1
  40d588:	imul   ebp,edx,0x42eae6b2
  40d58e:	cdq    
  40d58f:	mov    ebx,DWORD PTR ds:0xd212e7c8
  40d595:	lds    edx,FWORD PTR ds:0x5744626d
  40d59b:	gs (bad) 
  40d59d:	cmp    dl,BYTE PTR [ecx]
  40d59f:	bound  esi,QWORD PTR [edi+ecx*4]
  40d5a2:	popf   
  40d5a3:	xchg   edx,eax
  40d5a4:	inc    edi
  40d5a5:	mov    ?,WORD PTR ds:0x77b04809
  40d5ab:	in     eax,dx
  40d5ac:	mov    edx,0x2a75c361
  40d5b1:	(bad)  
  40d5b2:	daa    
  40d5b3:	aad    0x33
  40d5b5:	dec    ecx
  40d5b6:	jo     0x40d550
  40d5b8:	rol    DWORD PTR [eax+ecx*1],0xe0
  40d5bc:	iretw  
  40d5be:	or     ch,ah
  40d5c0:	retf   
  40d5c1:	mov    cl,BYTE PTR [ebx-0x15795601]
  40d5c7:	dec    edi
  40d5c8:	ret    0x1aa3
  40d5cb:	adc    BYTE PTR [eax+0x707c2cf6],0x5d
  40d5d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5d3:	inc    ecx
  40d5d4:	lods   al,BYTE PTR ds:[esi]
  40d5d5:	inc    edx
  40d5d6:	cwde   
  40d5d7:	ja     0x40d658
  40d5d9:	cld    
  40d5da:	mov    ds:0xc086678c,eax
  40d5df:	mov    eax,ds:0x402b0554
  40d5e4:	add    al,0x63
  40d5e6:	test   al,0xf6
  40d5e8:	(bad)  
  40d5e9:	(bad)  
  40d5eb:	push   eax
  40d5ec:	push   ecx
  40d5ed:	xor    DWORD PTR [edi],esi
  40d5ef:	dec    ebp
  40d5f0:	ret    
  40d5f1:	lahf   
  40d5f2:	popf   
  40d5f3:	rol    BYTE PTR [edx],1
  40d5f5:	lds    eax,FWORD PTR [eax+0x6f]
  40d5f8:	mov    esi,0x6775abe2
  40d5fd:	loope  0x40d603
  40d5ff:	adc    edi,DWORD PTR [ebx-0x2b]
  40d602:	pop    ss
  40d603:	jae    0x40d5fe
  40d605:	xchg   BYTE PTR [esi-0x5b636487],ah
  40d60b:	sbb    ah,BYTE PTR [ebp+0x52c582b4]
  40d611:	cmp    BYTE PTR [ebp+0x15effd12],dh
  40d617:	mov    bh,0x74
  40d619:	fsubr  QWORD PTR [ebp+ebp*2-0x37f4bb3f]
  40d620:	int3   
  40d621:	pop    esp
  40d622:	fwait
  40d623:	cs pop ecx
  40d625:	push   ds
  40d626:	lahf   
  40d627:	scas   eax,DWORD PTR es:[edi]
  40d628:	xor    eax,0x6a891cbe
  40d62d:	xchg   edx,eax
  40d62e:	arpl   WORD PTR [eax-0x5c848518],di
  40d634:	mov    eax,ss
  40d636:	fild   QWORD PTR [ecx+edx*8]
  40d639:	hlt    
  40d63a:	pop    ecx
  40d63b:	call   0x2978b240
  40d640:	mov    dl,0x62
  40d642:	aas    
  40d643:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d644:	adc    DWORD PTR [ecx+0x19bd9e3a],edx
  40d64a:	push   ebx
  40d64b:	xchg   esp,eax
  40d64c:	imul   esp,DWORD PTR [edi+edx*2-0x59c02781],0xa1c7e53f
  40d657:	retf   
  40d658:	and    ebp,ecx
  40d65a:	(bad)  
  40d65b:	pop    eax
  40d65c:	and    edx,eax
  40d65e:	push   cs
  40d65f:	inc    ecx
  40d660:	xor    ebp,DWORD PTR [eax+0x75b2bdb5]
  40d666:	mov    ch,0xee
  40d668:	add    dh,ah
  40d66a:	mov    ch,dl
  40d66c:	dec    esp
  40d66d:	ret    
  40d66e:	mul    bl
  40d670:	adc    al,0xed
  40d672:	mov    bh,BYTE PTR [eax]
  40d674:	in     eax,0x9b
  40d676:	pop    es
  40d677:	iret   
  40d678:	imul   edi,ebx,0xffffffde
  40d67b:	jle    0x40d61d
  40d67d:	inc    ebx
  40d67e:	add    al,0xff
  40d680:	jae    0x40d6a7
  40d682:	jb     0x40d6db
  40d684:	push   ecx
  40d685:	push   edi
  40d686:	(bad)  
  40d687:	(bad)  
  40d689:	push   ds
  40d68a:	pop    ds
  40d68b:	mov    ecx,0x60885689
  40d690:	into   
  40d691:	in     al,0x13
  40d693:	sti    
  40d694:	xchg   ebp,eax
  40d695:	or     al,0x4e
  40d697:	xchg   edi,eax
  40d698:	fwait
  40d699:	xchg   edx,eax
  40d69a:	mov    ah,BYTE PTR [esp+edi*4+0x6e]
  40d69e:	push   0xffffffd2
  40d6a0:	je     0x40d6d0
  40d6a2:	sub    DWORD PTR [ebp+edx*8+0x55],eax
  40d6a6:	stos   BYTE PTR es:[edi],al
  40d6a7:	xor    BYTE PTR [ebx+0x1c],cl
  40d6aa:	dec    ecx
  40d6ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6ac:	jmp    0x40d6b1
  40d6ae:	cmp    edi,DWORD PTR [edi+ecx*2-0x3b67693d]
  40d6b5:	dec    ebp
  40d6b6:	stos   BYTE PTR es:[edi],al
  40d6b7:	xchg   DWORD PTR [ebx],ecx
  40d6b9:	push   edx
  40d6ba:	jns    0x40d65d
  40d6bc:	retf   
  40d6bd:	rcl    cl,cl
  40d6bf:	pop    eax
  40d6c0:	jbe    0x40d71e
  40d6c2:	lea    edx,[edi-0x600d0ced]
  40d6c8:	add    al,cl
  40d6ca:	aaa    
  40d6cb:	mov    esp,0x67c8bdf8
  40d6d0:	test   eax,0x67783e22
  40d6d5:	xor    dh,dh
  40d6d7:	add    edx,DWORD PTR [edi-0x4]
  40d6da:	int    0x6
  40d6dc:	cmp    al,0x30
  40d6de:	mov    esp,0x8b86c6f0
  40d6e3:	arpl   WORD PTR [eax+0x2f8b670f],dx
  40d6e9:	test   BYTE PTR [esi],0xa8
  40d6ec:	ss dec ecx
  40d6ee:	jle    0x40d6d9
  40d6f0:	int    0x31
  40d6f2:	mov    ds:0xe4457574,eax
  40d6f7:	aad    0x8b
  40d6f9:	push   edx
  40d6fa:	cmp    bl,BYTE PTR [edx]
  40d6fc:	stos   DWORD PTR es:[edi],eax
  40d6fd:	stos   BYTE PTR es:[edi],al
  40d6fe:	sahf   
  40d6ff:	dec    esp
  40d700:	test   DWORD PTR [ebx+0x7d23feb0],esi
  40d706:	gs hlt 
  40d708:	in     eax,dx
  40d709:	dec    ecx
  40d70a:	jo     0x40d71f
  40d70c:	jmp    0x40d780
  40d70e:	dec    ecx
  40d70f:	nop
  40d710:	pusha  
  40d711:	sub    DWORD PTR [edi+0x67],ebp
  40d714:	jne    0x40d6ea
  40d716:	test   BYTE PTR [ecx],bh
  40d718:	inc    ebx
  40d719:	mov    ?,ebp
  40d71b:	outs   dx,DWORD PTR ds:[esi]
  40d71c:	xor    al,0x22
  40d71e:	inc    eax
  40d71f:	and    ah,bh
  40d721:	out    0xb2,al
  40d723:	add    al,0x97
  40d725:	sahf   
  40d726:	mov    ecx,eax
  40d728:	add    dh,BYTE PTR [esi+0x10fcf1ce]
  40d72e:	int    0x52
  40d730:	jno    0x40d788
  40d732:	push   ecx
  40d733:	arpl   WORD PTR [esi-0x29],si
  40d736:	inc    esp
  40d737:	sub    DWORD PTR [edi-0x755ce7d8],eax
  40d73d:	xor    bl,BYTE PTR [eax]
  40d73f:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d741:	push   edx
  40d742:	add    bh,BYTE PTR [edi+0x15]
  40d745:	arpl   WORD PTR [edi],dx
  40d747:	inc    esp
  40d748:	call   0x7ff9da6
  40d74d:	pop    edx
  40d74e:	sti    
  40d74f:	lds    esi,FWORD PTR [eax-0x49]
  40d752:	outs   dx,BYTE PTR ds:[esi]
  40d753:	cmp    eax,0x9c1d65f8
  40d758:	fwait
  40d759:	mov    dh,0x14
  40d75b:	in     eax,dx
  40d75c:	dec    edx
  40d75d:	push   ss
  40d75e:	pop    esi
  40d75f:	in     eax,dx
  40d760:	out    0x6e,al
  40d762:	outs   dx,DWORD PTR ds:[esi]
  40d763:	push   es
  40d764:	jnp    0x40d76f
  40d766:	add    al,BYTE PTR [eax-0x724cf8e8]
  40d76c:	xchg   ebp,eax
  40d76d:	ja     0x40d7e3
  40d76f:	mov    ebp,0x6f08d0
  40d774:	mov    ebp,0xacaba02e
  40d779:	popa   
  40d77a:	adc    al,0xaa
  40d77c:	push   ebx
  40d77d:	jmp    0x40d784
  40d77f:	push   ss
  40d780:	inc    edi
  40d781:	and    al,0x3f
  40d783:	push   eax
  40d784:	loope  0x40d7cc
  40d786:	adc    BYTE PTR [edi-0x1ddbe876],dh
  40d78c:	or     eax,0x12ce8d81
  40d791:	jnp    0x40d7ae
  40d793:	mov    ebp,0xb90052f3
  40d798:	imul   esi,esp,0x3e
  40d79b:	int3   
  40d79c:	leave  
  40d79d:	mov    esi,0xd0fecc9
  40d7a2:	mov    ecx,0xe68aec39
  40d7a7:	(bad)  
  40d7a8:	adc    BYTE PTR [edi+0x30d3d931],dh
  40d7ae:	sbb    al,0xa1
  40d7b0:	sbb    BYTE PTR [ebp+0xe],bl
  40d7b3:	adc    ebx,eax
  40d7b5:	stos   DWORD PTR es:[edi],eax
  40d7b6:	loopne 0x40d821
  40d7b8:	(bad)
  40d7bc:	lds    edi,FWORD PTR ds:0xba481321
  40d7c2:	call   DWORD PTR [eax]
  40d7c4:	sbb    al,0xa1
  40d7c6:	jp     0x40d758
  40d7c8:	push   ebp
  40d7c9:	fwait
  40d7ca:	and    bl,BYTE PTR [ebp+0x58dc6dc0]
  40d7d0:	fs jne 0x40d7be
  40d7d3:	cmp    DWORD PTR [ecx-0x7dec6351],ecx
  40d7d9:	jmp    0xcfc7:0x2b4e2611
  40d7e0:	mov    edi,0x12e19fdd
  40d7e5:	xor    BYTE PTR [esi-0x34],dh
  40d7e8:	xlat   BYTE PTR ds:[ebx]
  40d7e9:	or     cx,WORD PTR [ebx+ebp*8-0x48]
  40d7ee:	xchg   ebx,eax
  40d7ef:	mov    ah,0x64
  40d7f1:	jmp    0x66d4:0x52b22b8b
  40d7f8:	inc    eax
  40d7f9:	mov    ebx,DWORD PTR [ecx-0x3e]
  40d7fc:	xchg   ebp,eax
  40d7fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7fe:	test   DWORD PTR [ebx],ebp
  40d800:	aam    0x39
  40d802:	sub    BYTE PTR [ecx],ah
  40d804:	ins    BYTE PTR es:[edi],dx
  40d805:	mov    BYTE PTR [edx],bh
  40d807:	push   eax
  40d808:	stos   DWORD PTR es:[edi],eax
  40d809:	cwde   
  40d80a:	xchg   DWORD PTR [ecx],esp
  40d80c:	inc    ebx
  40d80d:	pusha  
  40d80e:	xchg   esp,eax
  40d80f:	xchg   ebp,eax
  40d810:	xchg   esi,eax
  40d811:	xor    dh,BYTE PTR [edi+0x3e]
  40d814:	mov    ds:0x85143d7f,al
  40d819:	jnp    0x40d884
  40d81b:	jmp    0x64c9:0xcdec149f
  40d822:	jo     0x40d7cb
  40d824:	push   ss
  40d825:	ret    0xd89a
  40d828:	ds push esi
  40d82a:	inc    edi
  40d82b:	inc    eax
  40d82c:	jl     0x40d7d5
  40d82e:	cli    
  40d82f:	push   0x5
  40d831:	repnz push cs
  40d833:	and    al,0x67
  40d835:	mov    ebx,0xadc70bab
  40d83a:	(bad)  
  40d83b:	mov    es,WORD PTR [ecx+0x23]
  40d83e:	(bad)  
  40d83f:	out    0xc3,eax
  40d841:	leave  
  40d842:	ins    DWORD PTR es:[edi],dx
  40d843:	add    al,0x69
  40d845:	mov    ch,0xec
  40d847:	push   0xeb190034
  40d84c:	or     dl,BYTE PTR [esi+0x461327e2]
  40d852:	das    
  40d853:	loope  0x40d8ca
  40d855:	cdq    
  40d856:	or     DWORD PTR [edi+0x71d06621],esi
  40d85c:	(bad)  
  40d85d:	and    ebx,DWORD PTR [eax+0x60]
  40d860:	aam    0x5c
  40d862:	pop    ecx
  40d863:	mov    ds:0xb302cb32,al
  40d868:	arpl   WORD PTR [eax],si
  40d86a:	pop    esi
  40d86b:	push   0x33
  40d86d:	mov    ds:0xe9927d6a,eax
  40d872:	mov    WORD PTR [edi],es
  40d874:	mov    al,0xe
  40d876:	inc    eax
  40d877:	xchg   ecx,eax
  40d878:	popa   
  40d879:	mov    ds:0x3343360d,eax
  40d87e:	adc    eax,0x23c59683
  40d883:	outs   dx,BYTE PTR ds:[esi]
  40d884:	xchg   ebp,eax
  40d885:	outs   dx,DWORD PTR ds:[esi]
  40d886:	pop    ebp
  40d887:	vmfunc 
  40d88a:	xchg   esi,eax
  40d88b:	shl    bl,cl
  40d88d:	and    eax,DWORD PTR [edi-0x495010f2]
  40d893:	mov    edi,edi
  40d895:	sbb    cl,cl
  40d897:	div    BYTE PTR [esi+0x50]
  40d89a:	(bad)  
  40d89b:	popf   
  40d89c:	out    dx,al
  40d89d:	sbb    eax,0x4f3d8a79
  40d8a2:	xchg   ebp,eax
  40d8a3:	sbb    eax,0x704d2bd3
  40d8a8:	and    dh,BYTE PTR [ecx]
  40d8aa:	addr16 ds push cs
  40d8ad:	cmp    edx,DWORD PTR [ebx+0x6e]
  40d8b0:	mov    bh,0xa3
  40d8b2:	retf   0x92f4
  40d8b5:	lods   eax,DWORD PTR ds:[esi]
  40d8b6:	sti    
  40d8b7:	inc    edx
  40d8b8:	call   0x70af4df6
  40d8bd:	mov    edi,0xe8799dd7
  40d8c2:	das    
  40d8c3:	vminps xmm1,xmm6,xmm4
  40d8c7:	dec    ecx
  40d8c8:	push   edi
  40d8c9:	addr16 retf 0x7971
  40d8cd:	in     al,0x2e
  40d8cf:	lds    edi,FWORD PTR [eax+esi*2]
  40d8d2:	retf   0x118a
  40d8d5:	adc    al,0x7d
  40d8d7:	(bad)  
  40d8d8:	cmp    DWORD PTR [ebx+0x16fb02d0],ebp
  40d8de:	and    ecx,DWORD PTR [esi-0x613bf99b]
  40d8e4:	inc    ebx
  40d8e5:	test   BYTE PTR [ecx+esi*8+0x6b],0x21
  40d8ea:	in     eax,0x84
  40d8ec:	lea    esp,[eax-0x9]
  40d8ef:	ds (bad) 
  40d8f1:	sahf   
  40d8f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8f3:	(bad)  
  40d8f4:	cmp    esp,DWORD PTR [ebx+edx*8+0x36a9ee9a]
  40d8fb:	cmp    al,0x80
  40d8fd:	push   edi
  40d8fe:	js     0x40d8cc
  40d900:	call   0x2fa6:0xcb1439cb
  40d907:	jb     0x40d93c
  40d909:	inc    ecx
  40d90a:	jae    0x40d91b
  40d90c:	pop    esi
  40d90d:	in     al,0xc9
  40d90f:	sub    ebp,edi
  40d911:	xchg   edx,eax
  40d912:	iret   
  40d913:	fs mov eax,0x91309ff9
  40d919:	mov    al,ds:0x5f40664b
  40d91e:	int3   
  40d91f:	(bad)  
  40d920:	cmp    dl,dl
  40d922:	jl     0x40d8fe
  40d924:	xor    ah,cl
  40d926:	mov    ds:0x4b5a16e4,eax
  40d92b:	(bad)  
  40d92c:	dec    edx
  40d92d:	pop    esi
  40d92e:	dec    esi
  40d92f:	push   edx
  40d930:	xchg   edi,eax
  40d931:	pop    ebp
  40d932:	jp     0x40d929
  40d934:	push   es
  40d935:	shl    DWORD PTR [esi],1
  40d937:	mov    eax,DWORD PTR [eax+0x2254ff56]
  40d93d:	add    eax,0xfd659616
  40d942:	mov    eax,ds:0xc1f7ecbd
  40d947:	xchg   esp,eax
  40d948:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d949:	iret   
  40d94a:	lea    esp,[eax-0x3b]
  40d94d:	jg     0x40d9a0
  40d94f:	inc    edx
  40d950:	xchg   esi,eax
  40d951:	cmp    eax,0xd1eb402b
  40d956:	aad    0x77
  40d958:	cmp    al,0x96
  40d95a:	dec    esi
  40d95b:	test   DWORD PTR [edx-0x2e],ebp
  40d95e:	jnp    0x40d9af
  40d960:	inc    edi
  40d961:	mov    bh,0xb0
  40d963:	sub    DWORD PTR [edx-0xc],ebp
  40d966:	push   ecx
  40d967:	push   0x721950e4
  40d96c:	in     eax,dx
  40d96d:	sub    al,0x7f
  40d96f:	jbe    0x40d997
  40d971:	mov    ecx,0x568ae55e
  40d976:	popa   
  40d977:	into   
  40d978:	and    al,al
  40d97a:	push   ds
  40d97b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d97c:	sub    al,0x5f
  40d97e:	lock jb 0x40d956
  40d981:	jmp    0xd4a8462d
  40d986:	loop   0x40d9d9
  40d988:	daa    
  40d989:	fstp   TBYTE PTR [ebp+0x11]
  40d98c:	xchg   ecx,eax
  40d98d:	cmp    edx,DWORD PTR [esi]
  40d98f:	or     ebp,DWORD PTR [edx-0x1b]
  40d992:	push   0x34
  40d994:	dec    ebp
  40d995:	mov    ebp,0xa49b5384
  40d99a:	gs pop esp
  40d99c:	cmp    eax,0x3861b832
  40d9a1:	mov    dl,0x8d
  40d9a3:	xor    ebp,0x36ea92b8
  40d9a9:	adc    DWORD PTR es:[ecx+eax*4],0x9d8d880c
  40d9b1:	jecxz  0x40d974
  40d9b3:	bound  edi,QWORD PTR [eax+0x5a61baf8]
  40d9b9:	add    DWORD PTR [ebx+0x3f],ebx
  40d9bc:	in     al,0x59
  40d9be:	mov    ebx,0xb2d86510
  40d9c3:	inc    ecx
  40d9c4:	dec    eax
  40d9c5:	outs   dx,DWORD PTR ds:[esi]
  40d9c6:	push   esi
  40d9c7:	push   esi
  40d9c8:	cld    
  40d9c9:	jle    0x40d9b9
  40d9cb:	enter  0xe7ec,0x7c
  40d9cf:	pop    esp
  40d9d0:	fdivrp st(1),st
  40d9d2:	mov    esp,0x3445fd40
  40d9d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9d8:	ins    BYTE PTR es:[edi],dx
  40d9d9:	repnz mov ds:0x45ad60a,eax
  40d9df:	in     eax,0x5c
  40d9e1:	(bad)  
  40d9e2:	aaa    
  40d9e3:	mov    ah,0xa3
  40d9e5:	pusha  
  40d9e6:	lahf   
  40d9e7:	loope  0x40da00
  40d9e9:	ds test al,bl
  40d9ec:	clc    
  40d9ed:	clc    
  40d9ee:	rol    cl,0x55
  40d9f1:	je     0x40da3a
  40d9f3:	fdivr  DWORD PTR [ebp+0x6f]
  40d9f6:	and    al,0x3d
  40d9f8:	dec    esi
  40d9f9:	aaa    
  40d9fa:	test   DWORD PTR [ebp-0x1b266ed7],0x1bf7282a
  40da04:	dec    ebp
  40da05:	test   DWORD PTR ds:[eax+ecx*2+0x8298f5e],eax
  40da0d:	or     al,0xc8
  40da0f:	leave  
  40da10:	stos   DWORD PTR es:[edi],eax
  40da11:	xor    dh,BYTE PTR [esi+0x7d]
  40da14:	nop
  40da15:	mov    ecx,0x9aec67b6
  40da1a:	add    ebx,ebx
  40da1c:	jno    0x40da78
  40da1e:	mov    ds:0xf0798ac5,eax
  40da23:	(bad)  
  40da24:	ror    DWORD PTR [ebx+0x38306023],1
  40da2a:	push   es
  40da2b:	stc    
  40da2c:	inc    eax
  40da2d:	jbe    0x40da49
  40da2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da30:	inc    eax
  40da31:	xchg   BYTE PTR [eax+0x688366cd],cl
  40da37:	(bad)  
  40da38:	call   0xb423fcd2
  40da3d:	mov    ebp,0x61793c04
  40da42:	xchg   DWORD PTR ss:[eax-0x34],eax
  40da46:	xor    DWORD PTR [edi+0x73970769],esi
  40da4c:	or     DWORD PTR [ebx+0x18],0xf7ff6603
  40da53:	dec    edx
  40da54:	dec    ecx
  40da55:	in     eax,dx
  40da56:	lea    edx,[eax+0x3c]
  40da59:	jmp    0x40da89
  40da5b:	mov    ds:0x68c434de,al
  40da60:	xlat   BYTE PTR ds:[ebx]
  40da61:	aaa    
  40da62:	mov    edi,0x93072933
  40da67:	cli    
  40da68:	pop    ds
  40da69:	out    0x1,eax
  40da6b:	aaa    
  40da6c:	jbe    0x40da12
  40da6e:	cdq    
  40da6f:	adc    eax,0x24ea8125
  40da74:	nop
  40da75:	lods   al,BYTE PTR ds:[esi]
  40da76:	outs   dx,DWORD PTR ds:[esi]
  40da77:	das    
  40da78:	jle    0x40da21
  40da7a:	inc    ecx
  40da7b:	(bad)  
  40da7c:	mov    edx,0x593ab338
  40da81:	psubd  mm7,mm0
  40da84:	dec    eax
  40da85:	or     ebp,DWORD PTR [edi]
  40da87:	stc    
  40da88:	mov    bl,0x27
  40da8a:	push   es
  40da8b:	rol    BYTE PTR [ecx+0x39],1
  40da8e:	cmp    ebx,ebp
  40da90:	xchg   DWORD PTR [edi-0x11],esp
  40da93:	cmp    DWORD PTR [edi],ebp
  40da95:	jp     0x40da66
  40da97:	sar    ah,cl
  40da99:	sub    DWORD PTR [ebx+0x31],esi
  40da9c:	mov    ebp,0xbda04b4b
  40daa1:	mov    ah,0xa4
  40daa3:	pop    ds
  40daa4:	test   eax,0x20541262
  40daa9:	js     0x40db16
  40daab:	xor    BYTE PTR ds:0x7f02,0xe
  40dab1:	jns    0x40daef
  40dab3:	jge    0x40dae8
  40dab5:	mov    eax,ds:0x64be3c1a
  40daba:	xchg   esi,eax
  40dabb:	sub    eax,0xfc13f21c
  40dac0:	mov    bl,al
  40dac2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dac3:	mov    al,0x8f
  40dac5:	ss cld 
  40dac7:	fwait
  40dac8:	push   cs
  40dac9:	mov    BYTE PTR [edi],dl
  40dacb:	sub    eax,DWORD PTR [edx+0x49]
  40dace:	jno    0x40db44
  40dad0:	(bad)  
  40dad2:	retf   0x4136
  40dad5:	test   eax,0xf8e3a3f3
  40dada:	ror    BYTE PTR [esi+ebp*4-0x2e],cl
  40dade:	test   eax,0xd6c61f2a
  40dae3:	icebp  
  40dae4:	inc    ebp
  40dae5:	xchg   edx,eax
  40dae6:	mov    edx,?
  40dae8:	mov    WORD PTR [ebx+0xa],?
  40daeb:	call   0x20075218
  40daf0:	repnz (bad) 
  40daf2:	popf   
  40daf3:	inc    esi
  40daf4:	ficom  WORD PTR [edx]
  40daf6:	loope  0x40da7c
  40daf8:	pop    edx
  40daf9:	push   esp
  40dafa:	or     edi,esp
  40dafc:	push   0x2a
  40dafe:	stos   BYTE PTR es:[edi],al
  40daff:	jae    0x40daef
  40db01:	aam    0xaf
  40db03:	adc    dl,BYTE PTR [ebx-0xfb94e0c]
  40db09:	inc    edi
  40db0a:	xchg   esp,eax
  40db0b:	sbb    al,dh
  40db0d:	jp     0x40dad3
  40db0f:	stos   DWORD PTR es:[edi],eax
  40db10:	sbb    ch,BYTE PTR [esp+edx*1]
  40db13:	xchg   ebx,eax
  40db14:	ret    
  40db15:	xchg   ebp,eax
  40db16:	xchg   DWORD PTR [edi],esp
  40db18:	ss adc eax,0x92515f08
  40db1e:	jg     0x40dadb
  40db20:	sti    
  40db21:	bound  ebp,QWORD PTR [edx+0x5c]
  40db24:	sbb    DWORD PTR [edi],edi
  40db26:	and    BYTE PTR [eax],0xcf
  40db29:	inc    eax
  40db2a:	retf   0x9c35
  40db2d:	(bad)  
  40db2e:	addr16 clc 
  40db30:	fdiv   st,st(1)
  40db32:	mov    ds:0xcbdd5279,al
  40db37:	xor    bh,BYTE PTR [edi]
  40db39:	les    cx,DWORD PTR [ebx+0x3d961ce]
  40db40:	aam    0x5d
  40db42:	jns    0x40daf7
  40db44:	push   ecx
  40db45:	inc    ebx
  40db46:	ds das 
  40db48:	inc    edx
  40db49:	jnp    0x40db47
  40db4b:	out    dx,al
  40db4c:	adc    DWORD PTR [edi+0x37],eax
  40db4f:	xor    BYTE PTR [eax-0x12],bh
  40db52:	scas   eax,DWORD PTR es:[edi]
  40db53:	scas   eax,DWORD PTR es:[edi]
  40db54:	and    al,0x55
  40db56:	push   es
  40db57:	icebp  
  40db58:	pop    ecx
  40db59:	shl    BYTE PTR [esi-0x1635d025],0x39
  40db60:	fcmovne st,st(2)
  40db62:	jbe    0x40db02
  40db64:	es (bad) 
  40db67:	test   eax,0x825f9070
  40db6c:	iret   
  40db6d:	mov    al,0x44
  40db6f:	push   0xd8ef6b1
  40db74:	out    dx,eax
  40db75:	adc    ah,cl
  40db77:	jmp    0x40dbf0
  40db79:	aaa    
  40db7a:	xchg   DWORD PTR [edi],ecx
  40db7c:	outs   dx,DWORD PTR ds:[esi]
  40db7d:	xor    DWORD PTR [edi+ebp*2-0x42],ebx
  40db81:	and    al,0x13
  40db83:	(bad)  
  40db85:	repz inc edx
  40db87:	sub    eax,0x451f186
  40db8c:	cmp    al,0xd7
  40db8e:	dec    ebp
  40db8f:	sti    
  40db90:	dec    esp
  40db91:	test   DWORD PTR [ebx-0x2b70758c],ebx
  40db97:	mov    ebp,0x43dd71a0
  40db9c:	call   0xbb2706b3
  40dba1:	or     ebx,ecx
  40dba3:	test   al,0x44
  40dba5:	push   edx
  40dba6:	stos   DWORD PTR es:[edi],eax
  40dba7:	shr    BYTE PTR [ecx+edx*4-0x4300430a],cl
  40dbae:	xchg   ecx,eax
  40dbaf:	mov    ecx,0xa280437c
  40dbb4:	inc    eax
  40dbb5:	adc    BYTE PTR [edi-0x17],al
  40dbb8:	adc    eax,0x5a9c012a
  40dbbd:	push   esi
  40dbbe:	sub    esi,DWORD PTR [eax+0x20]
  40dbc1:	(bad)  
  40dbc2:	jb     0x40db7f
  40dbc4:	jne    0x40dc18
  40dbc6:	xor    esp,0x13
  40dbc9:	mov    al,ds:0x949eeece
  40dbce:	test   DWORD PTR [eax+0x68],0xac173cac
  40dbd5:	sub    DWORD PTR [bp+di],ebx
  40dbd8:	jl     0x40dc39
  40dbda:	mov    dh,0xed
  40dbdc:	lods   al,BYTE PTR ds:[esi]
  40dbdd:	fstp   QWORD PTR [edi+0x24a8dbbd]
  40dbe3:	fnstenv [edi+0x7420fec0]
  40dbe9:	outs   dx,DWORD PTR ds:[esi]
  40dbea:	test   ebp,ebp
  40dbec:	test   eax,0xeed7acb6
  40dbf1:	gs push ebp
  40dbf3:	push   cs
  40dbf4:	sbb    esi,DWORD PTR ds:0x82a8cadb
  40dbfa:	inc    ebx
  40dbfb:	arpl   WORD PTR [ebx],si
  40dbfd:	add    dh,dh
  40dbff:	sbb    al,0x6a
  40dc01:	add    al,0xd
  40dc03:	jb     0x40dbce
  40dc05:	lds    eax,FWORD PTR [ecx]
  40dc07:	inc    edi
  40dc08:	mov    DWORD PTR [edx-0x74],ecx
  40dc0b:	cmp    eax,0x36b0c4df
  40dc10:	pop    edx
  40dc11:	fdivr  QWORD PTR [esi+ebx*4]
  40dc14:	pusha  
  40dc15:	xchg   edx,eax
  40dc16:	cmp    DWORD PTR [eax],esi
  40dc18:	and    eax,0xd483a12b
  40dc1d:	fwait
  40dc1e:	jnp    0x40dc37
  40dc20:	sar    BYTE PTR [ecx-0xa],1
  40dc23:	gs ins BYTE PTR es:[edi],dx
  40dc25:	das    
  40dc26:	out    0x49,al
  40dc28:	sub    DWORD PTR [edx],ecx
  40dc2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc2b:	inc    edx
  40dc2c:	adc    BYTE PTR [ecx],ch
  40dc2e:	and    al,0xcb
  40dc30:	xchg   BYTE PTR [edi+esi*8],dl
  40dc33:	inc    DWORD PTR [esi-0x609a2af2]
  40dc39:	inc    ebx
  40dc3a:	and    esp,ecx
  40dc3c:	mov    al,0xd3
  40dc3e:	ss in  al,0x76
  40dc41:	rol    BYTE PTR ds:0x3e673a57,1
  40dc47:	mov    ecx,DWORD PTR [ebx]
  40dc49:	test   DWORD PTR [eax],0xd02a933b
  40dc4f:	mov    esi,0xd30c7a76
  40dc54:	pop    esp
  40dc55:	aam    0x12
  40dc57:	jmp    0x40dc73
  40dc59:	fiadd  WORD PTR ds:0x90a1ee77
  40dc5f:	add    DWORD PTR [ebp-0x79df605a],eax
  40dc65:	mov    esi,0x94fb5fee
  40dc6a:	cli    
  40dc6b:	xor    ch,BYTE PTR ds:0x71186cf5
  40dc71:	lahf   
  40dc72:	lea    esi,[ecx-0x70]
  40dc75:	adc    cl,BYTE PTR [edi+0x4982edfd]
  40dc7b:	out    0x70,al
  40dc7d:	or     eax,0x410bc6b
  40dc82:	push   es
  40dc83:	pusha  
  40dc84:	xchg   ecx,eax
  40dc85:	retf   
  40dc86:	mov    ds:0xef0f55d9,eax
  40dc8b:	into   
  40dc8c:	repnz mov esi,0x8432e4cc
  40dc92:	xor    al,0xdd
  40dc94:	out    dx,eax
  40dc95:	cmc    
  40dc96:	scas   al,BYTE PTR es:[edi]
  40dc97:	fst    st(7)
  40dc99:	repnz imul esi,edx,0x56
  40dc9d:	sub    ch,al
  40dc9f:	mov    ch,0xf7
  40dca1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dca2:	cmp    DWORD PTR [edx+edi*1],ebp
  40dca5:	test   BYTE PTR [esi+0x24],dl
  40dca8:	and    DWORD PTR [edi+0xd],esp
  40dcab:	inc    esi
  40dcac:	mov    al,0x30
  40dcae:	test   DWORD PTR [edx],edx
  40dcb0:	pop    es
  40dcb1:	fcom   st(7)
  40dcb3:	fwait
  40dcb4:	lea    edi,[eax-0x2c]
  40dcb7:	sbb    esp,DWORD PTR [esi+0x6e188cfb]
  40dcbd:	cmp    al,0xd9
  40dcbf:	add    ch,BYTE PTR [eax+ebx*4]
  40dcc2:	call   0x5d4c420c
  40dcc7:	ins    DWORD PTR es:[edi],dx
  40dcc8:	xor    ebx,DWORD PTR [edi]
  40dcca:	jns    0x40dc6e
  40dccc:	or     DWORD PTR [edx],edx
  40dcce:	xchg   ecx,eax
  40dccf:	popa   
  40dcd0:	out    0xc3,al
  40dcd2:	(bad)  
  40dcd3:	icebp  
  40dcd4:	outs   dx,BYTE PTR ds:[esi]
  40dcd5:	push   edi
  40dcd6:	out    0xea,eax
  40dcd8:	pop    esi
  40dcd9:	mov    ebx,0x8893bb20
  40dcde:	mov    eax,0xed0e1966
  40dce3:	and    al,0xfe
  40dce5:	js     0x40dd39
  40dce7:	jge    0x40dd02
  40dce9:	sbb    eax,0x38880570
  40dcee:	popa   
  40dcef:	or     eax,0x60771d80
  40dcf4:	loopne 0x40dd33
  40dcf6:	ins    BYTE PTR es:[edi],dx
  40dcf7:	mov    bl,0x6
  40dcf9:	imul   DWORD PTR [eax+ebx*8+0x43163bbe]
  40dd00:	aam    0xa1
  40dd02:	cmp    DWORD PTR [esi-0x2a],edi
  40dd05:	mov    esi,0xf035fbad
  40dd0a:	fmul   DWORD PTR [ebx+0x20]
  40dd0d:	or     al,0x7
  40dd0f:	xor    al,0xe2
  40dd11:	mov    ds:0x357163fc,al
  40dd16:	and    al,0xa0
  40dd18:	inc    ebx
  40dd19:	out    0x47,eax
  40dd1b:	inc    ecx
  40dd1c:	cmovbe ebp,DWORD PTR [ebx]
  40dd1f:	lahf   
  40dd20:	sahf   
  40dd21:	stos   DWORD PTR es:[edi],eax
  40dd22:	inc    edx
  40dd23:	mov    ?,WORD PTR [eax+0x41]
  40dd26:	dec    edi
  40dd27:	out    0xc2,eax
  40dd29:	and    BYTE PTR [edx-0x149d1a09],ah
  40dd2f:	sub    ecx,DWORD PTR [eax+ecx*2+0x5e]
  40dd33:	sahf   
  40dd34:	mov    ah,0xd6
  40dd36:	hlt    
  40dd37:	mov    edi,0xed44b319
  40dd3c:	or     eax,0x3d396ded
  40dd41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd43:	(bad)  
  40dd44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd45:	rol    BYTE PTR [edi+edi*8],cl
  40dd48:	or     ebx,edx
  40dd4a:	jmp    0xe3f:0xeebb3c52
  40dd51:	fwait
  40dd52:	sbb    ecx,edx
  40dd54:	adc    ebx,ebp
  40dd56:	and    DWORD PTR [ebp-0x7e],edx
  40dd59:	push   edx
  40dd5a:	mov    cl,0xc8
  40dd5c:	gs jb  0x40dce0
  40dd5f:	sub    DWORD PTR [ebp-0xa],ebp
  40dd62:	xchg   BYTE PTR [edx],cl
  40dd64:	std    
  40dd65:	ffree  st(0)
  40dd67:	dec    ecx
  40dd68:	dec    ecx
  40dd69:	in     eax,0x72
  40dd6b:	loope  0x40dd64
  40dd6d:	jmp    0x40dd8c
  40dd6f:	mov    ecx,0x6a2e4f52
  40dd74:	sub    bl,BYTE PTR [ecx-0x60]
  40dd77:	add    DWORD PTR [ebx+0x3b],edx
  40dd7a:	(bad)  
  40dd7c:	(bad)  cs:[ebp+0x2d]
  40dd80:	inc    edi
  40dd81:	fistp  DWORD PTR [ebx]
  40dd83:	mov    edx,ecx
  40dd85:	add    eax,0xb88661af
  40dd8a:	fistp  WORD PTR [eax+0x771ee152]
  40dd90:	jge    0x40dde9
  40dd92:	xchg   ecx,eax
  40dd93:	out    0x9,al
  40dd95:	cwde   
  40dd96:	jmp    0x40dd88
  40dd98:	pop    ebx
  40dd99:	or     dl,BYTE PTR [eax-0x8]
  40dd9c:	ss jmp 0x40ddfd
  40dd9f:	test   al,0xcd
  40dda1:	cld    
  40dda2:	xchg   ecx,eax
  40dda3:	jne    0x40dd84
  40dda5:	pop    edi
  40dda6:	adc    ebx,DWORD PTR [ebp+0x44]
  40dda9:	iret   
  40ddaa:	sar    DWORD PTR [esi+ebp*1-0x66b0330c],cl
  40ddb1:	sub    dl,BYTE PTR [eax-0x78]
  40ddb4:	jne    0x40de30
  40ddb6:	das    
  40ddb7:	test   eax,0x145d43a3
  40ddbc:	or     eax,0x6a323083
  40ddc1:	fldenv [ecx-0x6e3ed523]
  40ddc7:	or     ch,BYTE PTR [ecx+0x5f1ca974]
  40ddcd:	mov    bh,0xa3
  40ddcf:	mov    ds:0xa358231a,eax
  40ddd4:	(bad)  
  40ddd6:	popf   
  40ddd7:	dec    esp
  40ddd8:	es push edx
  40ddda:	outs   dx,DWORD PTR ds:[esi]
  40dddb:	push   esi
  40dddc:	jmp    0xd115:0x75e67159
  40dde3:	imul   edi,DWORD PTR [ebp+0x4185fbb6],0x7f15601d
  40dded:	xor    eax,0x51305aaf
  40ddf2:	xor    BYTE PTR [ecx+0x66],dl
  40ddf5:	into   
  40ddf6:	fs sub ebx,esi
  40ddf9:	mul    DWORD PTR [ecx-0x4f2792e2]
  40ddff:	mov    ds:0xccb43802,al
  40de04:	pop    edi
  40de05:	lea    edi,[ebx]
  40de07:	outs   dx,BYTE PTR ds:[esi]
  40de08:	mov    eax,ds:0x1c44347
  40de0d:	jb     0x40de15
  40de0f:	lods   al,BYTE PTR ds:[esi]
  40de10:	pop    esp
  40de11:	adc    DWORD PTR [edi],esi
  40de13:	mov    edx,0x665de2c6
  40de18:	(bad)  
  40de19:	fldcw  WORD PTR ds:0x79a77e03
  40de1f:	in     eax,0x1f
  40de21:	cmp    cl,BYTE PTR [ebx-0x2c]
  40de24:	pop    edi
  40de25:	sub    esp,edi
  40de27:	xchg   ecx,eax
  40de28:	out    0xef,al
  40de2a:	imul   eax,DWORD PTR [eax+0x278c1f9b],0x28
  40de31:	mov    al,ds:0x926169f6
  40de36:	cmp    al,0x5a
  40de38:	lods   eax,DWORD PTR ds:[esi]
  40de39:	ret    
  40de3a:	xor    DWORD PTR es:[ebp-0x45],esp
  40de3e:	ss mov ch,0x70
  40de41:	xor    ecx,ebx
  40de43:	imul   ecx,DWORD PTR ds:0x4bfcedd7,0x27
  40de4a:	add    al,0x6b
  40de4c:	add    al,0x70
  40de4e:	pop    edi
  40de4f:	xchg   edx,eax
  40de50:	cdq    
  40de51:	mov    ecx,0x83e576ae
  40de56:	dec    DWORD PTR [ecx]
  40de58:	test   al,0xf2
  40de5a:	sar    DWORD PTR [edx-0x34590708],0xd4
  40de61:	mov    dh,0x33
  40de63:	mov    edi,0xd2fc5adf
  40de68:	in     eax,0xb8
  40de6a:	dec    ecx
  40de6b:	and    si,WORD PTR [eax-0xe]
  40de6f:	int    0x92
  40de71:	mov    WORD PTR [eax-0x7bb31458],ss
  40de77:	test   al,0xa3
  40de79:	or     edi,ecx
  40de7b:	cmp    DWORD PTR [esi],edx
  40de7d:	fisttp QWORD PTR [edx-0x36]
  40de80:	mov    ebp,0x2ee1e6e7
  40de85:	iret   
  40de86:	and    ah,BYTE PTR [ebx]
  40de88:	retf   0x6caf
  40de8b:	xor    eax,0x7ddd1695
  40de90:	iret   
  40de91:	pop    ebx
  40de92:	in     eax,dx
  40de93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de94:	retf   0x8852
  40de97:	repz dec esi
  40de99:	dec    eax
  40de9a:	pop    esi
  40de9b:	sub    DWORD PTR [edi-0x60],0xd0882b77
  40dea2:	retf   
  40dea3:	or     BYTE PTR [ebx-0xe92a68],ch
  40dea9:	xchg   edx,eax
  40deaa:	mov    ebx,0xdf0aae22
  40deaf:	sub    cl,BYTE PTR [esi+0xa]
  40deb2:	es nop
  40deb4:	enter  0x280a,0x2
  40deb8:	jge    0x40deda
  40deba:	jns    0x40dec1
  40debc:	sub    BYTE PTR [edx-0x25],cl
  40debf:	pushf  
  40dec0:	rcl    DWORD PTR [edx+0x0],1
  40dec3:	mov    ebp,0x6622fdc
  40dec8:	and    eax,0x8e04d6a
  40decd:	call   0x736e:0xab6cd793
  40ded4:	cmp    al,0x3d
  40ded6:	mov    al,ds:0xd18d2ba1
  40dedb:	fdivr  st,st(3)
  40dedd:	(bad)  
  40dede:	mov    ah,0xa6
  40dee0:	jne    0x40df20
  40dee2:	dec    edx
  40dee3:	test   BYTE PTR [esi+0x51874d1a],cl
  40dee9:	mov    edi,0x7f35b7c5
  40deee:	jae    0x40dee7
  40def0:	aaa    
  40def1:	imul   ebx,DWORD PTR [ecx],0xfffffffe
  40def4:	pop    ss
  40def5:	and    eax,0x4bb4dbd2
  40defa:	int    0x3
  40defc:	dec    edx
  40defd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40defe:	adc    DWORD PTR [edx],edi
  40df00:	adc    eax,0xf24a12a4
  40df05:	les    ecx,FWORD PTR [eax]
  40df07:	ins    DWORD PTR es:[edi],dx
  40df08:	cmc    
  40df09:	mov    cl,0x58
  40df0b:	inc    ebp
  40df0c:	and    al,0x3f
  40df0e:	pop    edx
  40df0f:	adc    edi,esi
  40df11:	or     esi,DWORD PTR [ebx+0x3e7acc91]
  40df17:	fidivr DWORD PTR [edi]
  40df19:	leave  
  40df1a:	or     eax,DWORD PTR [edx]
  40df1c:	xchg   BYTE PTR ds:0xa9181be5,bl
  40df22:	sbb    dl,ch
  40df24:	dec    ebp
  40df25:	cmp    al,0xbb
  40df27:	push   ds
  40df28:	cli    
  40df29:	pushf  
  40df2a:	sar    DWORD PTR [edi],cl
  40df2c:	stos   BYTE PTR es:[edi],al
  40df2d:	xlat   BYTE PTR ds:[ebx]
  40df2e:	push   0x4f
  40df30:	inc    eax
  40df31:	xchg   esi,eax
  40df32:	fldenv [edi]
  40df34:	dec    ebp
  40df35:	mov    esp,0xdda27f6c
  40df3a:	aam    0x8e
  40df3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df3d:	inc    ecx
  40df3e:	jae    0x40df99
  40df40:	push   edx
  40df41:	(bad)  
  40df43:	adc    eax,0x17f7993a
  40df48:	push   0xffffffed
  40df4a:	fidiv  DWORD PTR [ecx+edx*1]
  40df4d:	xchg   edx,eax
  40df4e:	xchg   esi,eax
  40df4f:	call   0x2c601fad
  40df54:	and    eax,0x141776d5
  40df59:	mov    cl,BYTE PTR [ebx-0x3f]
  40df5c:	std    
  40df5d:	add    BYTE PTR [edi-0x58],cl
  40df60:	and    ah,BYTE PTR [eax+0x7fefcacb]
  40df66:	cmp    eax,0x7500a8d
  40df6b:	jnp    0x40dfa1
  40df6d:	sub    BYTE PTR [esi*2+0x5a43d4bf],al
  40df74:	scas   eax,DWORD PTR es:[edi]
  40df75:	mov    bh,0xb4
  40df77:	(bad)  
  40df79:	or     DWORD PTR [edi],ecx
  40df7b:	imul   esp,DWORD PTR [edx],0x3b
  40df7e:	adc    ecx,DWORD PTR [esi]
  40df80:	cli    
  40df81:	mov    DWORD PTR [ecx-0x63770d5b],ecx
  40df87:	mov    dh,0xb1
  40df89:	in     eax,0xd4
  40df8b:	pop    es
  40df8c:	mov    bl,0xa1
  40df8e:	cdq    
  40df8f:	inc    ebx
  40df90:	sbb    eax,edi
  40df92:	(bad)  
  40df93:	ja     0x40df5d
  40df95:	jmp    0xb38d459c
  40df9a:	aaa    
  40df9b:	out    dx,al
  40df9c:	aas    
  40df9d:	retf   
  40df9e:	adc    edx,DWORD PTR [eax]
  40dfa0:	inc    ebp
  40dfa1:	or     BYTE PTR [ecx+0x28fff4a3],0xc1
  40dfa8:	mov    cl,0x2c
  40dfaa:	fs sub edx,esi
  40dfad:	xchg   edx,eax
  40dfae:	jmp    0x40df55
  40dfb0:	push   ss
  40dfb1:	jbe    0x40dfbc
  40dfb3:	sbb    eax,0x93c4c77b
  40dfb8:	imul   esp,DWORD PTR [ebp-0x48fedc5],0xfdbd86db
  40dfc2:	stos   DWORD PTR es:[edi],eax
  40dfc3:	jl     0x40df84
  40dfc5:	clc    
  40dfc6:	sbb    BYTE PTR [eax+edx*2+0x3a],bl
  40dfca:	das    
  40dfcb:	in     al,dx
  40dfcc:	nop
  40dfcd:	mul    DWORD PTR [edx-0x36421090]
  40dfd3:	mov    al,ds:0xddfa3f74
  40dfd8:	xor    al,0x83
  40dfda:	xchg   edi,eax
  40dfdb:	mov    esp,0xa40310d2
  40dfe0:	push   cs
  40dfe1:	sar    BYTE PTR [ebx-0x7b981a84],1
  40dfe7:	or     dl,dh
  40dfe9:	mov    dh,0x2e
  40dfeb:	icebp  
  40dfec:	aam    0x73
  40dfee:	push   edi
  40dfef:	mov    ss,ecx
  40dff1:	xor    ch,cl
  40dff3:	jmp    0xb6b44e75
  40dff8:	sbb    DWORD PTR [ecx-0x1b700c23],edx
  40dffe:	ds mov esp,0x79cf815f
  40e004:	div    BYTE PTR [ebx-0x638e0b78]
  40e00a:	les    ebp,FWORD PTR es:[edi-0x73]
  40e00e:	mov    ecx,0xd5f1e877
  40e013:	mov    ebp,0x13f5845
  40e018:	xor    esi,DWORD PTR [edi]
  40e01a:	inc    eax
  40e01b:	outs   dx,BYTE PTR ds:[esi]
  40e01c:	jg     0x40e03e
  40e01e:	mov    eax,0x9991aa30
  40e023:	add    al,0x68
  40e025:	pop    es
  40e026:	or     ebp,DWORD PTR [ebp+0x7b71a591]
  40e02c:	fwait
  40e02d:	xchg   ecx,eax
  40e02e:	or     BYTE PTR [edi+0x14],al
  40e031:	shl    ch,1
  40e033:	inc    edi
  40e034:	pop    ss
  40e035:	cmp    eax,0x70d4aa7a
  40e03a:	popf   
  40e03b:	fisub  WORD PTR [edx]
  40e03d:	leave  
  40e03e:	jne    0x40dfd6
  40e040:	dec    esp
  40e041:	jecxz  0x40dfe1
  40e043:	je     0x40dfec
  40e045:	in     eax,0x89
  40e047:	pop    edx
  40e048:	fwait
  40e049:	fs add al,0x4a
  40e04c:	add    al,0x72
  40e04e:	aaa    
  40e04f:	nop
  40e050:	jge    0x40e0ce
  40e052:	pop    edi
  40e053:	jmp    0x2190:0x8b8ec66f
  40e05a:	in     al,0x24
  40e05c:	adc    BYTE PTR [edx+ebx*2-0xaef36a7],bh
  40e063:	push   eax
  40e064:	sub    dh,ch
  40e066:	mov    DWORD PTR [esi-0x21f5855f],ebp
  40e06c:	mov    edi,0xd039cc3f
  40e071:	add    al,0xbc
  40e073:	stos   BYTE PTR es:[edi],al
  40e074:	arpl   WORD PTR [ecx+esi*1-0x4ea674f0],cx
  40e07b:	into   
  40e07c:	jge    0x40e0cd
  40e07e:	in     al,0x82
  40e080:	sbb    al,0x45
  40e082:	cld    
  40e083:	clc    
  40e084:	stos   DWORD PTR es:[edi],eax
  40e085:	inc    ecx
  40e086:	push   ebp
  40e087:	(bad)  
  40e088:	cmp    al,0xdd
  40e08a:	in     eax,dx
  40e08b:	inc    ebx
  40e08c:	in     al,0xbd
  40e08e:	mov    bh,0x6a
  40e090:	fadd   QWORD PTR [ebp-0x7ead4815]
  40e096:	pop    eax
  40e097:	ins    BYTE PTR es:[edi],dx
  40e098:	in     eax,dx
  40e099:	push   ecx
  40e09a:	scas   al,BYTE PTR es:[edi]
  40e09b:	inc    esi
  40e09c:	and    sp,WORD PTR [ebp+0x0]
  40e0a0:	cmp    bl,BYTE PTR [esi-0x2ebaa535]
  40e0a6:	push   esi
  40e0a7:	shl    DWORD PTR ds:0xc62f29fc,0x9a
  40e0ae:	xchg   edx,eax
  40e0af:	mov    ebx,0x598d45c6
  40e0b4:	push   0x3e
  40e0b6:	enter  0x8c8,0x6a
  40e0ba:	prefetchnta BYTE PTR [edx+0x22]
  40e0be:	sub    esi,ecx
  40e0c0:	pop    eax
  40e0c1:	pop    ecx
  40e0c2:	popf   
  40e0c3:	push   es
  40e0c4:	dec    esp
  40e0c5:	or     al,0xa0
  40e0c7:	aad    0x1f
  40e0c9:	fsubr  QWORD PTR [eax+0x68]
  40e0cc:	xor    eax,eax
  40e0ce:	jae    0x40e0dc
  40e0d0:	mov    eax,ds:0xd41ccba
  40e0d5:	sbb    eax,0xa9963b59
  40e0da:	or     DWORD PTR [edi+0x2f96db7f],0xe50319be
  40e0e4:	aam    0xc4
  40e0e6:	mov    ?,WORD PTR [edi-0x33a5d45f]
  40e0ec:	sbb    BYTE PTR [di-0xe],0x60
  40e0f2:	loopne 0x40e10c
  40e0f4:	push   edx
  40e0f5:	sub    cl,dl
  40e0f7:	xor    esi,edx
  40e0f9:	jno    0x40e09d
  40e0fb:	jb     0x40e100
  40e0fd:	jmp    0x40e088
  40e0ff:	call   0x320c:0x99a6c417
  40e106:	rcl    bl,1
  40e108:	xor    cl,bh
  40e10a:	push   ds
  40e10b:	cmp    DWORD PTR [ecx],eax
  40e10d:	mov    ah,0x91
  40e10f:	mov    bl,0xbe
  40e111:	dec    esi
  40e112:	jbe    0x40e134
  40e114:	push   ecx
  40e115:	jle    0x40e0b1
  40e117:	scas   eax,DWORD PTR es:[edi]
  40e118:	add    BYTE PTR [ecx],bl
  40e11a:	mov    ds:0x2de49506,eax
  40e11f:	lds    edi,FWORD PTR [edx]
  40e121:	mov    ebx,0x72349b84
  40e126:	and    al,0x71
  40e128:	out    dx,al
  40e129:	adc    DWORD PTR [ebp+eax*8-0x131f23fa],0xbb554ad1
  40e134:	add    edi,DWORD PTR [esi-0x20]
  40e137:	jnp    0x40e0ee
  40e139:	inc    ebp
  40e13a:	ret    0xf05b
  40e13d:	pushf  
  40e13e:	jo     0x40e164
  40e140:	jne    0x40e1b2
  40e142:	or     edi,ebx
  40e144:	imul   edx,DWORD PTR [eax],0xe880b78a
  40e14a:	push   ds
  40e14b:	lods   al,BYTE PTR ds:[esi]
  40e14c:	sar    BYTE PTR [ebx+0x1da05a79],0x82
  40e153:	sar    BYTE PTR [ebx+0x32a25fcb],cl
  40e159:	mov    ds,esp
  40e15b:	cmovp  esp,DWORD PTR [eax+0x7f]
  40e15f:	add    edi,ecx
  40e161:	hlt    
  40e162:	fst    DWORD PTR [ebx]
  40e164:	sub    esp,DWORD PTR [edx]
  40e166:	mov    cl,0x73
  40e168:	es push ss
  40e16a:	sub    eax,0x97e95a70
  40e16f:	sahf   
  40e170:	and    al,0x9
  40e172:	ins    DWORD PTR es:[edi],dx
  40e173:	fprem  
  40e175:	js     0x40e14f
  40e177:	loopne 0x40e106
  40e179:	in     eax,0xb3
  40e17b:	test   al,0x88
  40e17d:	repz pop edi
  40e17f:	stos   DWORD PTR es:[edi],eax
  40e180:	push   ds
  40e181:	lea    esp,[eax]
  40e183:	in     al,dx
  40e184:	call   FWORD PTR [edi]
  40e186:	mov    edx,0xd1808357
  40e18b:	test   al,0x79
  40e18d:	stos   DWORD PTR es:[edi],eax
  40e18e:	mov    ebp,0xa61ca8d3
  40e193:	xor    BYTE PTR [ebx+edi*2],ch
  40e196:	inc    esp
  40e197:	mov    ah,0xae
  40e199:	mov    ss,WORD PTR [ebx-0x73b0d3c0]
  40e19f:	mov    cl,0xfe
  40e1a1:	stc    
  40e1a2:	mov    ebx,0x7aa3eaaa
  40e1a7:	icebp  
  40e1a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1a9:	div    BYTE PTR [esi+0x45]
  40e1ac:	je     0x40e224
  40e1ae:	dec    ebp
  40e1af:	jno    0x40e1c8
  40e1b1:	test   eax,0xc0ae0225
  40e1b6:	nop
  40e1b7:	repnz es dec esp
  40e1ba:	mov    esi,0xd07d06ed
  40e1bf:	retf   
  40e1c0:	xchg   ebx,eax
  40e1c1:	sbb    eax,0x9b9f399c
  40e1c6:	pop    edx
  40e1c7:	sbb    eax,0x34e25706
  40e1cc:	imul   esi,DWORD PTR fs:[esp+edi*4-0x381ca77],0x6
  40e1d5:	adc    ebx,DWORD PTR [eax+0xa236d0d]
  40e1db:	setne  BYTE PTR [edx+ebp*1+0x64d9be58]
  40e1e3:	cli    
  40e1e4:	sub    ebx,DWORD PTR [eax-0x6f]
  40e1e7:	sbb    bh,al
  40e1e9:	sahf   
  40e1ea:	jns    0x40e1e8
  40e1ec:	int    0x43
  40e1ee:	ret    0xb389
  40e1f1:	(bad)  
  40e1f2:	xor    ecx,DWORD PTR [eax-0x6a328eb4]
  40e1f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1f9:	imul   eax,DWORD PTR [eax-0x27],0x9fdf137c
  40e200:	xchg   esi,eax
  40e201:	cs aas 
  40e203:	xchg   esi,eax
  40e204:	fisttp DWORD PTR [esi+0x3d1cacd3]
  40e20a:	fwait
  40e20b:	in     al,dx
  40e20c:	cmp    DWORD PTR [ebx+esi*2-0x15],0xffffffb2
  40e211:	dec    ebp
  40e212:	pushf  
  40e213:	repz pop es
  40e215:	dec    eax
  40e216:	mov    ebp,0xdc3306c0
  40e21b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e21c:	aaa    
  40e21d:	inc    ecx
  40e21e:	mov    bh,0xdb
  40e220:	rol    DWORD PTR ds:0x475ce318,cl
  40e226:	sub    BYTE PTR [edi],bh
  40e228:	lds    edx,FWORD PTR [esi+edx*8-0x413e226a]
  40e22f:	inc    esp
  40e230:	test   al,0xbb
  40e232:	mov    edx,fs
  40e234:	cwde   
  40e235:	xlat   BYTE PTR ds:[ebx]
  40e236:	xchg   esi,eax
  40e237:	out    dx,al
  40e238:	imul   BYTE PTR [ebx+edx*8]
  40e23b:	adc    BYTE PTR [edx*4-0x383a86d2],0xc1
  40e243:	dec    DWORD PTR [eax]
  40e245:	ja     0x40e22e
  40e247:	int3   
  40e248:	jae    0x40e2b9
  40e24a:	inc    ecx
  40e24b:	stos   DWORD PTR es:[edi],eax
  40e24c:	scas   eax,DWORD PTR es:[edi]
  40e24d:	loop   0x40e276
  40e24f:	stos   DWORD PTR es:[edi],eax
  40e250:	nop
  40e251:	ins    DWORD PTR es:[edi],dx
  40e252:	sub    BYTE PTR [bp+si-0x2ead],dh
  40e257:	arpl   WORD PTR [ebx-0x10],ax
  40e25a:	jg     0x40e1f5
  40e25c:	jecxz  0x40e2d9
  40e25e:	retf   
  40e25f:	ss ret 0x4137
  40e263:	xchg   edx,eax
  40e264:	and    dl,al
  40e266:	mov    DWORD PTR [eax-0x3c],ecx
  40e269:	shl    BYTE PTR [ebp+0x61],0x5a
  40e26d:	pop    ebx
  40e26e:	aaa    
  40e26f:	inc    esp
  40e270:	inc    ebp
  40e271:	popf   
  40e272:	xchg   esp,eax
  40e273:	les    esi,FWORD PTR [esi+0x24]
  40e276:	xlat   BYTE PTR ds:[ebx]
  40e277:	xor    BYTE PTR [eax-0x23],dh
  40e27a:	loope  0x40e2a1
  40e27c:	out    dx,al
  40e27d:	and    eax,0x10954f78
  40e282:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e283:	outs   dx,DWORD PTR ds:[esi]
  40e284:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e285:	adc    esi,ecx
  40e287:	cwde   
  40e288:	imul   esp,DWORD PTR [ecx],0xe04fef3f
  40e28e:	push   edi
  40e28f:	lock dec ebp
  40e291:	ret    0x3523
  40e294:	and    DWORD PTR [ebx+0x3e],ebp
  40e297:	bound  edx,QWORD PTR [eax+0x7f49b8b]
  40e29d:	loope  0x40e249
  40e29f:	pop    ebp
  40e2a0:	xchg   edx,eax
  40e2a1:	in     al,dx
  40e2a2:	jno    0x40e277
  40e2a4:	push   esi
  40e2a5:	out    0x8,eax
  40e2a7:	loopne 0x40e25e
  40e2a9:	mov    BYTE PTR [ebx-0x51],bl
  40e2ac:	and    eax,0x401b794f
  40e2b1:	inc    ebp
  40e2b2:	sub    ebp,DWORD PTR [ebx]
  40e2b4:	xchg   ebx,eax
  40e2b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2b6:	call   0xf9c1:0x7b10c9b2
  40e2bd:	jp     0x40e2fb
  40e2bf:	cli    
  40e2c0:	cmp    DWORD PTR [eax],0xffffffce
  40e2c3:	sahf   
  40e2c4:	call   0xaba4:0x4fa7f990
  40e2cb:	sahf   
  40e2cc:	aaa    
  40e2cd:	inc    edx
  40e2ce:	aas    
  40e2cf:	nop
  40e2d0:	(bad)  
  40e2d1:	in     eax,dx
  40e2d2:	jns    0x40e315
  40e2d4:	xor    ebp,DWORD PTR [edx+0x2c]
  40e2d7:	mov    ebp,ecx
  40e2d9:	inc    ebx
  40e2da:	and    dl,BYTE PTR [edi]
  40e2dc:	(bad)  
  40e2dd:	jmp    FWORD PTR [edx]
  40e2df:	xlat   BYTE PTR ds:[ebx]
  40e2e0:	adc    BYTE PTR [ebx+0xe8071a1],bl
  40e2e6:	jge    0x40e26c
  40e2e8:	lock xchg edx,eax
  40e2ea:	les    edx,FWORD PTR [eax+ecx*1-0x45]
  40e2ee:	mov    cl,0x83
  40e2f0:	jmp    0xe420:0xe7703ef1
  40e2f7:	imul   ebp,DWORD PTR [edi+0x70],0xffffffad
  40e2fb:	bound  eax,QWORD PTR [edx]
  40e2fd:	push   esp
  40e2fe:	push   es
  40e2ff:	mov    WORD PTR [eax+eiz*8],gs
  40e302:	sbb    bh,BYTE PTR [eax+0x2daa0b81]
  40e308:	push   eax
  40e309:	xlat   BYTE PTR ds:[ebx]
  40e30a:	sub    ch,0xf
  40e30d:	cwde   
  40e30e:	loop   0x40e2d5
  40e310:	idiv   esi
  40e312:	sbb    DWORD PTR [ebp+0xe69fafa],esi
  40e318:	out    dx,al
  40e319:	pop    edx
  40e31a:	js     0x40e2c6
  40e31c:	sbb    eax,0x3c7151fb
  40e321:	shl    DWORD PTR [ebp+eax*1+0x43a65bff],cl
  40e328:	das    
  40e329:	mov    ch,0x89
  40e32b:	cmp    ecx,esi
  40e32d:	out    0x12,eax
  40e32f:	test   eax,0xb727c2d5
  40e334:	push   es
  40e335:	or     al,0x68
  40e337:	inc    ecx
  40e338:	dec    eax
  40e339:	fsub   QWORD PTR [esi-0x25]
  40e33c:	mov    ebp,0xd4f0327a
  40e341:	sub    BYTE PTR [ebp+0x214382ba],0x9b
  40e348:	push   edx
  40e349:	adc    al,0xa7
  40e34b:	lods   al,BYTE PTR ds:[esi]
  40e34c:	and    dh,BYTE PTR [edx+0x3e]
  40e34f:	sar    DWORD PTR [esi-0x3b7da975],0x3b
  40e356:	inc    ecx
  40e357:	sahf   
  40e358:	mov    ds:0xe19c01a7,eax
  40e35d:	adc    BYTE PTR [ebx-0xc],0x4c
  40e361:	imul   ebp,esp,0x95b0fc9a
  40e367:	add    ebx,ecx
  40e369:	xchg   esi,eax
  40e36a:	(bad)  
  40e36b:	or     eax,0x1b5d5187
  40e370:	enter  0x4f08,0x56
  40e374:	push   edx
  40e375:	mov    bl,0x80
  40e377:	mov    esi,0x2f2375e3
  40e37c:	and    al,0xc5
  40e37e:	js     0x40e353
  40e380:	(bad)  
  40e381:	bound  edx,QWORD PTR [edx+0x43]
  40e384:	cli    
  40e385:	mov    ecx,ebx
  40e387:	or     al,0x1
  40e389:	ret    
  40e38a:	ins    BYTE PTR es:[edi],dx
  40e38b:	push   edi
  40e38c:	and    dl,BYTE PTR [esi+0x4e75cedd]
  40e392:	mov    ah,ah
  40e394:	call   0x5f6671e5
  40e399:	call   0x57df531e
  40e39e:	sbb    eax,0x34154c94
  40e3a3:	adc    bl,BYTE PTR [ecx+0x7eb63086]
  40e3a9:	addr16 inc ebp
  40e3ab:	mov    ebp,DWORD PTR [esi-0x4793dedb]
  40e3b1:	sub    ch,bh
  40e3b3:	iret   
  40e3b4:	pop    edi
  40e3b5:	fwait
  40e3b6:	and    esp,DWORD PTR [ecx+0x22ad8adf]
  40e3bc:	sub    DWORD PTR [edi-0x47],edx
  40e3bf:	push   es
  40e3c0:	jbe    0x40e358
  40e3c2:	mov    ?,eax
  40e3c4:	jp     0x40e36c
  40e3c6:	mov    edx,0x3a871ab6
  40e3cb:	dec    edi
  40e3cc:	inc    esi
  40e3cd:	and    DWORD PTR [edi+0x4ca1dc6f],edx
  40e3d3:	sbb    cl,0x6f
  40e3d6:	mov    edi,DWORD PTR [ecx-0x7a941292]
  40e3dc:	cmp    edx,0x24
  40e3df:	mov    ebx,DWORD PTR [edi]
  40e3e1:	push   0x84a2f143
  40e3e6:	adc    ebp,DWORD PTR [edx]
  40e3e8:	mov    ds:0x6dd8dd73,al
  40e3ed:	and    BYTE PTR [ebx-0x5a],ch
  40e3f0:	cmp    dl,cl
  40e3f2:	push   ecx
  40e3f3:	push   DWORD PTR [edi]
  40e3f5:	adc    eax,0xdba147b9
  40e3fa:	and    DWORD PTR [ecx-0x61],eax
  40e3fd:	das    
  40e3fe:	imul   esi,DWORD PTR [ebx-0xe],0xc5a3059e
  40e405:	dec    esi
  40e406:	mov    ds:0x62c1b9e9,al
  40e40b:	sti    
  40e40c:	sbb    BYTE PTR [ebx-0x15cf45ff],0x33
  40e413:	dec    ecx
  40e414:	inc    ebp
  40e415:	stos   DWORD PTR es:[edi],eax
  40e416:	jae    0x40e437
  40e418:	and    BYTE PTR [edi],al
  40e41a:	cmp    DWORD PTR [edx],0xffffff98
  40e41d:	data16 aaa 
  40e41f:	pop    edx
  40e420:	scas   al,BYTE PTR es:[edi]
  40e421:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e422:	ins    DWORD PTR es:[edi],dx
  40e423:	inc    ebp
  40e424:	les    eax,FWORD PTR [ebx+0x4]
  40e427:	outs   dx,BYTE PTR ds:[esi]
  40e428:	jp     0x40e473
  40e42a:	xchg   dh,dh
  40e42c:	int3   
  40e42d:	mov    eax,0xde663785
  40e432:	inc    ebx
  40e433:	adc    bl,BYTE PTR [ebx+edx*4+0x76]
  40e437:	repz push ds
  40e439:	lds    ebx,FWORD PTR [ebx-0x4]
  40e43c:	sub    eax,esi
  40e43e:	je     0x40e3cd
  40e440:	sahf   
  40e441:	push   edi
  40e442:	in     al,dx
  40e443:	(bad)  
  40e444:	pop    ss
  40e445:	lock fisttp QWORD PTR [ebx+0x13]
  40e449:	pop    eax
  40e44a:	pushf  
  40e44b:	rol    BYTE PTR [eax],1
  40e44d:	mov    dh,BYTE PTR [ecx]
  40e44f:	mul    BYTE PTR [edi+0x7821ab45]
  40e455:	fcom   QWORD PTR [esi+ecx*2]
  40e458:	xchg   ecx,eax
  40e459:	dec    ebp
  40e45a:	repnz sub ch,BYTE PTR [ecx-0x78f9fb9e]
  40e461:	mov    WORD PTR [edx+0x59fb945],ds
  40e467:	mov    bl,0x5
  40e469:	es cli 
  40e46b:	push   ss
  40e46c:	xor    al,0xa2
  40e46e:	sbb    al,0x13
  40e470:	adc    BYTE PTR [ecx+0x1b25cb84],0x3e
  40e477:	icebp  
  40e478:	dec    esp
  40e479:	enter  0x5404,0xc1
  40e47d:	sub    edi,ebp
  40e47f:	into   
  40e480:	ins    DWORD PTR es:[edi],dx
  40e481:	dec    ebp
  40e482:	ins    BYTE PTR es:[edi],dx
  40e483:	mov    bl,0x13
  40e485:	cmc    
  40e486:	stos   BYTE PTR es:[edi],al
  40e487:	fst    QWORD PTR [edx-0x3b]
  40e48a:	int    0x35
  40e48c:	leave  
  40e48d:	fwait
  40e48e:	inc    ebp
  40e48f:	push   ebx
  40e490:	mov    ah,0xf3
  40e492:	pop    esi
  40e493:	sub    eax,0xa3871f3e
  40e498:	mov    ch,0x32
  40e49a:	cmp    al,0x38
  40e49c:	in     al,dx
  40e49d:	ins    DWORD PTR es:[edi],dx
  40e49e:	push   eax
  40e49f:	stos   DWORD PTR es:[edi],eax
  40e4a0:	int3   
  40e4a1:	lods   al,BYTE PTR ds:[esi]
  40e4a2:	inc    eax
  40e4a3:	mov    ss,WORD PTR [esi]
  40e4a5:	mov    esp,0x6af92f45
  40e4aa:	add    al,0x14
  40e4ac:	lahf   
  40e4ad:	pop    ebp
  40e4ae:	xor    edx,DWORD PTR [edx]
  40e4b0:	ss sbb eax,0xc9c8f501
  40e4b6:	dec    esp
  40e4b7:	pmaddwd mm0,QWORD PTR [edx]
  40e4ba:	pop    ebx
  40e4bb:	in     eax,0x77
  40e4bd:	test   DWORD PTR [eax],ecx
  40e4bf:	rcpps  xmm6,xmm6
  40e4c2:	bound  ebx,QWORD PTR [ebp+ebp*1-0x7b]
  40e4c6:	or     ah,0xe
  40e4c9:	and    al,0x18
  40e4cb:	push   esi
  40e4cc:	loope  0x40e54c
  40e4ce:	pop    esi
  40e4cf:	mov    ch,al
  40e4d1:	aad    0x2d
  40e4d3:	in     al,dx
  40e4d4:	scas   al,BYTE PTR es:[edi]
  40e4d5:	stos   BYTE PTR es:[edi],al
  40e4d6:	sbb    dh,BYTE PTR [esi]
  40e4d8:	pop    es
  40e4d9:	xchg   ecx,eax
  40e4da:	fsubr  QWORD PTR [eax]
  40e4dc:	jo     0x40e494
  40e4de:	push   ecx
  40e4df:	aam    0xf4
  40e4e1:	in     eax,dx
  40e4e2:	sub    esi,DWORD PTR [eax]
  40e4e4:	xchg   edx,eax
  40e4e5:	inc    edx
  40e4e6:	jbe    0x40e539
  40e4e8:	(bad)  
  40e4e9:	jo     0x40e4c6
  40e4eb:	sub    al,0x2c
  40e4ed:	sbb    DWORD PTR [esi],edx
  40e4ef:	sub    al,ah
  40e4f1:	mov    ebx,0xe035f78e
  40e4f6:	dec    eax
  40e4f7:	sbb    cl,dl
  40e4f9:	ins    DWORD PTR es:[edi],dx
  40e4fa:	push   esi
  40e4fb:	jae    0x40e4d8
  40e4fd:	dec    esp
  40e4fe:	jno    0x40e4b7
  40e500:	dec    ecx
  40e501:	test   eax,0xe2c0420a
  40e506:	stos   BYTE PTR es:[edi],al
  40e507:	arpl   WORD PTR [esi],di
  40e509:	outs   dx,DWORD PTR ds:[esi]
  40e50a:	sbb    bl,0x2a
  40e50d:	ret    
  40e50e:	push   es
  40e50f:	fsub   QWORD PTR [ebp-0x502f1a37]
  40e515:	fnstenv [ebx-0x1bca57d7]
  40e51b:	push   esi
  40e51c:	es cli 
  40e51e:	push   ss
  40e51f:	xchg   edx,eax
  40e520:	xor    ebx,DWORD PTR ds:0x7becac6f
  40e526:	fsubrp st(4),st
  40e528:	adc    edi,DWORD PTR [eax+0x4e143c31]
  40e52e:	mov    esi,0x6c86bffa
  40e533:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e534:	adc    DWORD PTR [esi],esi
  40e536:	jns    0x40e54f
  40e538:	scas   eax,DWORD PTR es:[edi]
  40e539:	dec    ebx
  40e53a:	sbb    al,0xe3
  40e53c:	xchg   DWORD PTR [ecx+0x136d39f9],eax
  40e542:	js     0x40e515
  40e544:	shl    BYTE PTR [ebp-0x14b386f5],1
  40e54a:	dec    ebx
  40e54b:	rol    DWORD PTR [eax+0x5b6c221e],1
  40e551:	enter  0x1ab1,0xdc
  40e555:	cli    
  40e556:	or     ebp,ebx
  40e558:	in     al,0xb0
  40e55a:	xchg   ebx,eax
  40e55b:	push   ecx
  40e55c:	repz sub ebx,DWORD PTR [ebp-0x18]
  40e560:	sbb    eax,0x950f2a12
  40e565:	je     0x40e5d8
  40e567:	in     eax,0x9f
  40e569:	jg     0x40e5bd
  40e56b:	enter  0x40cf,0xe8
  40e56f:	cmp    eax,0x8dd8d0a6
  40e574:	mov    ah,0xf1
  40e576:	xchg   DWORD PTR [esi-0x738489a0],eax
  40e57c:	push   ss
  40e57d:	dec    eax
  40e57e:	jmp    0x387f:0xbccbd46e
  40e585:	xchg   ecx,eax
  40e586:	pop    esi
  40e587:	xchg   esi,eax
  40e588:	cmp    DWORD PTR [ebp-0xa747a7],0x13
  40e58f:	push   ebx
  40e590:	cmp    eax,0x2c5f31fe
  40e595:	and    al,0xb9
  40e597:	iret   
  40e598:	and    DWORD PTR [edi+esi*4+0x45a91940],eax
  40e59f:	shl    BYTE PTR [edx-0x2da50334],cl
  40e5a5:	push   ds
  40e5a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5a7:	mov    cl,0x61
  40e5a9:	push   ebx
  40e5aa:	stc    
  40e5ab:	sbb    eax,DWORD PTR [ecx]
  40e5ad:	sub    DWORD PTR [ebp-0x3537aa2],edx
  40e5b3:	pop    es
  40e5b4:	push   ds
  40e5b5:	int3   
  40e5b6:	push   esp
  40e5b7:	daa    
  40e5b8:	mov    al,0xc0
  40e5ba:	sbb    esi,DWORD PTR [ebp-0x33c56993]
  40e5c0:	jmp    0xce1704b0
  40e5c5:	sub    edi,DWORD PTR [eax]
  40e5c7:	cdq    
  40e5c8:	retf   0xcba1
  40e5cb:	mov    al,ds:0xa974949e
  40e5d0:	clc    
  40e5d1:	not    BYTE PTR [edx-0x1c287c18]
  40e5d7:	int    0xd5
  40e5d9:	mov    eax,0x97e3224d
  40e5de:	(bad)  
  40e5df:	xchg   edi,esi
  40e5e1:	xchg   ebp,eax
  40e5e2:	inc    ebp
  40e5e3:	rol    DWORD PTR [ecx+0x17ea92dc],0x12
  40e5ea:	dec    esp
  40e5eb:	sar    BYTE PTR [edx+0x45f04ac3],0x6a
  40e5f2:	dec    esi
  40e5f3:	push   esp
  40e5f4:	xchg   ebx,eax
  40e5f5:	inc    edx
  40e5f6:	jg     0x40e5ff
  40e5f8:	xlat   BYTE PTR ds:[ebx]
  40e5f9:	xor    eax,edi
  40e5fb:	and    DWORD PTR [edx-0x7],eax
  40e5fe:	inc    esi
  40e5ff:	ins    DWORD PTR es:[edi],dx
  40e600:	fsubr  QWORD PTR [ebx+0x16]
  40e603:	fcomp  DWORD PTR [ecx]
  40e605:	test   BYTE PTR [eax-0xc349009],0x50
  40e60c:	data16 int3 
  40e60e:	sub    DWORD PTR [ecx+0x31],ebx
  40e611:	cmp    DWORD PTR ds:0x4fa79d96,esi
  40e617:	popa   
  40e618:	imul   ebp,DWORD PTR [esi+0x5878859b],0x54
  40e61f:	gs mov ch,0xd6
  40e622:	repz hlt 
  40e624:	add    al,0x2d
  40e626:	push   cs
  40e627:	cli    
  40e628:	sub    esp,DWORD PTR [ebp+0x18]
  40e62b:	loopne 0x40e608
  40e62d:	pop    edx
  40e62e:	jno    0x40e612
  40e630:	test   BYTE PTR [edi+0x4],bl
  40e633:	scas   al,BYTE PTR es:[edi]
  40e634:	call   0x44ec:0x835f889
  40e63b:	jnp    0x40e60c
  40e63d:	mov    edi,0xc45b762c
  40e642:	call   0x7ca10cfb
  40e647:	lods   eax,DWORD PTR ds:[esi]
  40e648:	cmp    dl,BYTE PTR [ebp+0x2c]
  40e64b:	jmp    0x40e5cf
  40e64d:	aam    0x1b
  40e64f:	pop    esi
  40e650:	(bad)  
  40e651:	or     DWORD PTR [esp+esi*4-0x21823ca5],edi
  40e658:	add    al,0xac
  40e65a:	stos   DWORD PTR es:[edi],eax
  40e65b:	jns    0x40e68e
  40e65d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e65e:	push   0x25
  40e660:	mov    al,0xcf
  40e662:	inc    ebp
  40e663:	imul   edx,DWORD PTR [ecx],0x35
  40e666:	sbb    BYTE PTR [eax+0x4],dh
  40e669:	call   0xc36:0xbe341dc0
  40e670:	and    ah,al
  40e672:	pusha  
  40e673:	sub    DWORD PTR [ecx],edx
  40e675:	aas    
  40e676:	lahf   
  40e677:	adc    al,0xa2
  40e679:	xchg   eax,esi
  40e67b:	mov    esp,0x4c045d74
  40e680:	sub    esp,eax
  40e682:	or     al,0x86
  40e684:	xchg   ebp,eax
  40e685:	add    DWORD PTR ds:0x9706d525,0x56
  40e68c:	shl    BYTE PTR [edi+0x411766af],0x68
  40e693:	call   0x5cb593c4
  40e698:	pop    edi
  40e699:	or     al,0xbc
  40e69b:	pop    ds
  40e69c:	sub    BYTE PTR [esi],0xe8
  40e69f:	in     al,dx
  40e6a0:	and    ecx,esi
  40e6a2:	(bad)  
  40e6a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6a4:	fsub   QWORD PTR [esi]
  40e6a6:	icebp  
  40e6a7:	imul   ebx,esi,0xc485d81d
  40e6ad:	enter  0x2824,0x7a
  40e6b1:	dec    eax
  40e6b2:	add    esi,edx
  40e6b4:	ret    0x9584
  40e6b7:	fadd   QWORD PTR [esi+0x4b]
  40e6ba:	add    eax,0x97103b0
  40e6bf:	pop    esi
  40e6c0:	pop    edi
  40e6c1:	add    eax,0xabeb1553
  40e6c6:	not    DWORD PTR [edx+eax*2-0x55716a1b]
  40e6cd:	out    dx,al
  40e6ce:	lahf   
  40e6cf:	std    
  40e6d0:	mov    esp,DWORD PTR [edi+0x18]
  40e6d3:	iret   
  40e6d4:	out    dx,al
  40e6d5:	sub    al,0x87
  40e6d7:	fcomp  QWORD PTR [eax-0x3233deaa]
  40e6dd:	call   0xb95c:0x34a230a4
  40e6e4:	cmp    ah,BYTE PTR [eax-0x41]
  40e6e7:	stos   BYTE PTR es:[edi],al
  40e6e8:	cmp    ecx,DWORD PTR [ebx]
  40e6ea:	stos   DWORD PTR es:[edi],eax
  40e6eb:	jae    0x40e704
  40e6ed:	sub    al,BYTE PTR [esi+0x5719423d]
  40e6f3:	test   BYTE PTR [edx+0x4d],0xec
  40e6f7:	les    edi,FWORD PTR [edi+eiz*2+0x67]
  40e6fb:	lea    esp,[eax+0x17]
  40e6fe:	adc    al,0xd6
  40e700:	inc    ecx
  40e701:	pop    esi
  40e702:	inc    esp
  40e703:	add    eax,0x1b529704
  40e708:	int    0x23
  40e70a:	add    BYTE PTR [ecx-0x6d],ah
  40e70d:	xchg   edx,eax
  40e70e:	xchg   esp,eax
  40e70f:	jl     0x40e74b
  40e711:	daa    
  40e712:	test   eax,0x85b467c6
  40e717:	xchg   ebp,eax
  40e718:	les    ecx,FWORD PTR [esi]
  40e71a:	mov    ah,BYTE PTR [eax-0x7]
  40e71d:	push   ss
  40e71e:	push   ds
  40e71f:	jge    0x40e73f
  40e721:	xor    al,0xd7
  40e723:	retf   0xaf6c
  40e726:	out    0x37,al
  40e728:	sbb    DWORD PTR [edi-0x3a],0x563840a3
  40e72f:	ins    DWORD PTR es:[edi],dx
  40e730:	sub    BYTE PTR [esi-0x1c],dh
  40e733:	in     eax,0xac
  40e735:	ja     0x40e79b
  40e737:	gs nop
  40e739:	mov    bl,0x46
  40e73b:	push   0xfffffff8
  40e73d:	xchg   BYTE PTR [ecx+0x10],bl
  40e740:	mov    ah,0xb8
  40e742:	add    BYTE PTR [eax+0x19808005],al
  40e748:	ins    BYTE PTR es:[edi],dx
  40e749:	loop   0x40e705
  40e74b:	push   eax
  40e74c:	cld    
  40e74d:	(bad)  
  40e74e:	bound  edi,QWORD PTR [edx-0x70]
  40e751:	dec    ebp
  40e752:	inc    eax
  40e753:	iret   
  40e754:	xor    dh,BYTE PTR [edx-0x7e2783ec]
  40e75a:	push   0x302eed91
  40e75f:	fidivr WORD PTR [edi+ebx*1+0x5effa235]
  40e766:	mul    eax
  40e768:	jmp    0x40e710
  40e76a:	adc    esi,DWORD PTR [edx+0x2d]
  40e76d:	dec    esi
  40e76e:	push   0xfffffff4
  40e770:	jb     0x40e77d
  40e772:	jb     0x40e7ee
  40e774:	(bad)  
  40e775:	fist   DWORD PTR [ebp+esi*2+0x9]
  40e779:	and    esi,edi
  40e77b:	bound  esi,QWORD PTR ds:0xef25ae30
  40e781:	or     edi,DWORD PTR [edx-0x7b]
  40e784:	stos   DWORD PTR es:[edi],eax
  40e785:	icebp  
  40e786:	cmp    dl,BYTE PTR [ecx+0x49]
  40e789:	imul   ebp,DWORD PTR [edi],0x3b245edf
  40e78f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e790:	outs   dx,BYTE PTR ds:[esi]
  40e791:	push   ss
  40e792:	jno    0x40e745
  40e794:	and    BYTE PTR [ebx-0x6],dh
  40e797:	jne    0x40e74e
  40e799:	aaa    
  40e79a:	into   
  40e79b:	scas   al,BYTE PTR es:[edi]
  40e79c:	jae    0x40e72d
  40e79e:	push   ds
  40e79f:	sbb    DWORD PTR [esi+0x35],edx
  40e7a2:	sbb    esi,esp
  40e7a4:	mov    eax,0x7d2315c8
  40e7a9:	sub    BYTE PTR [eax+0x64df0e18],dl
  40e7af:	mov    al,ds:0xde6ba14b
  40e7b4:	(bad)  
  40e7b5:	mov    al,ds:0x56053a68
  40e7ba:	popf   
  40e7bb:	fisttp WORD PTR [bp+0x1]
  40e7bf:	jmp    0x6dd8d70c
  40e7c4:	sub    edi,esp
  40e7c6:	ins    BYTE PTR es:[edi],dx
  40e7c7:	ret    0xcff4
  40e7ca:	enter  0x8845,0xcf
  40e7ce:	sub    bl,BYTE PTR [edx-0x6d64881e]
  40e7d4:	xchg   ebx,eax
  40e7d5:	inc    ecx
  40e7d6:	hlt    
  40e7d7:	stc    
  40e7d8:	jg     0x40e821
  40e7da:	mov    ebp,0xf7cfb18f
  40e7df:	jne    0x40e776
  40e7e1:	pop    esi
  40e7e2:	int3   
  40e7e3:	or     DWORD PTR [esi],edi
  40e7e5:	mov    ds:0x1be9ff03,eax
  40e7ea:	cmp    ebp,DWORD PTR [eax+0xb29d663]
  40e7f0:	bound  ebp,QWORD PTR [esi+0x2ae43fb8]
  40e7f6:	out    0x3c,eax
  40e7f8:	ret    
  40e7f9:	mov    esp,0x87d5b7c8
  40e7fe:	sub    esi,DWORD PTR [ebx+0x1e]
  40e801:	out    dx,al
  40e802:	into   
  40e803:	outs   dx,BYTE PTR ds:[esi]
  40e804:	pop    ecx
  40e805:	in     al,0xf
  40e807:	push   ss
  40e808:	lods   al,BYTE PTR cs:[esi]
  40e80a:	cmp    eax,0xc3d6d0c4
  40e80f:	jl     0x40e7ce
  40e811:	mov    edx,0x12676548
  40e816:	mov    ebp,0xb4da1b1d
  40e81b:	sbb    DWORD PTR [esi+0x2f6ef0c],0xdca12260
  40e825:	in     al,0xe3
  40e827:	clc    
  40e828:	mov    eax,0x23c4fbb5
  40e82d:	ins    DWORD PTR es:[edi],dx
  40e82e:	mov    al,0xc4
  40e830:	xor    DWORD PTR [edi-0x50],ebx
  40e833:	dec    ebp
  40e834:	retf   0xbb47
  40e837:	arpl   cx,cx
  40e839:	mov    dh,dh
  40e83b:	in     eax,dx
  40e83c:	cmp    ch,bl
  40e83e:	mov    ds:0xe145146c,al
  40e843:	call   0x78e8:0x1b47c48a
  40e84a:	stos   BYTE PTR es:[edi],al
  40e84b:	adc    BYTE PTR [eax],ch
  40e84d:	pop    ebx
  40e84e:	dec    esp
  40e84f:	adc    eax,0x4a4a7422
  40e854:	and    DWORD PTR [edx+0x7bcc57a6],edx
  40e85a:	push   edx
  40e85b:	js     0x40e8c1
  40e85d:	shl    DWORD PTR ds:0xcbac782e,1
  40e863:	inc    edx
  40e864:	lahf   
  40e865:	popa   
  40e866:	pusha  
  40e867:	icebp  
  40e868:	shl    DWORD PTR ds:0x18194dd0,cl
  40e86e:	out    0xe8,al
  40e870:	arpl   WORD PTR [ebp-0x2111d76f],dx
  40e876:	pop    ecx
  40e877:	xchg   esi,eax
  40e878:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e879:	fld    TBYTE PTR [ebx]
  40e87b:	jge    0x40e807
  40e87d:	js     0x40e838
  40e87f:	fdivr  QWORD PTR [edi+ecx*8-0x4b]
  40e883:	imul   esp,DWORD PTR [esi],0x1c
  40e886:	dec    ecx
  40e887:	jp     0x40e8bb
  40e889:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e88a:	adc    ch,ch
  40e88c:	(bad)  
  40e88d:	xchg   BYTE PTR [ecx+0x3],bh
  40e890:	pop    ecx
  40e891:	sbb    al,0xb4
  40e893:	arpl   ax,sp
  40e895:	xor    ah,BYTE PTR [ebx*4+0xbe297cc]
  40e89c:	pop    edx
  40e89d:	mov    eax,DWORD PTR [edi+eax*4]
  40e8a0:	fwait
  40e8a1:	xchg   edi,eax
  40e8a2:	adc    DWORD PTR [ebp+eiz*8-0x34db1c54],esp
  40e8a9:	lods   al,BYTE PTR ds:[esi]
  40e8aa:	push   edx
  40e8ab:	fiadd  WORD PTR [ebx+0x3ae6cc08]
  40e8b1:	sub    esp,DWORD PTR [ecx-0x58e47a2]
  40e8b7:	xchg   ebp,eax
  40e8b8:	mov    eax,0x7f77a84c
  40e8bd:	sub    eax,0x69f8902e
  40e8c2:	(bad)  
  40e8c3:	jecxz  0x40e88f
  40e8c5:	inc    ebp
  40e8c6:	mov    ecx,0x5e1b7603
  40e8cb:	mov    ds:0xf5bb3c72,al
  40e8d0:	ins    BYTE PTR es:[edi],dx
  40e8d1:	nop
  40e8d2:	push   ebx
  40e8d3:	mov    edi,DWORD PTR [ecx+edi*8]
  40e8d6:	stos   DWORD PTR es:[edi],eax
  40e8d7:	(bad)  
  40e8d8:	add    eax,0x739a8a53
  40e8dd:	mov    eax,ds:0xcfc158b1
  40e8e2:	mov    al,ds:0x1b6dbf1e
  40e8e7:	les    esi,FWORD PTR [edi+0x47]
  40e8ea:	inc    esi
  40e8eb:	push   es
  40e8ec:	mov    eax,0xdba32bc3
  40e8f1:	ins    DWORD PTR es:[edi],dx
  40e8f2:	test   eax,0x339ee2fe
  40e8f7:	pop    edx
  40e8f8:	pop    ds
  40e8f9:	jb     0x40e95a
  40e8fb:	and    DWORD PTR [ebx],ecx
  40e8fd:	scas   al,BYTE PTR es:[edi]
  40e8fe:	nop
  40e8ff:	ss sbb al,cl
  40e902:	push   ebx
  40e903:	add    DWORD PTR [ebp+ebx*8+0x37ce4ea8],0x8b4f1032
  40e90e:	or     eax,0x9a849a2f
  40e913:	inc    ecx
  40e914:	(bad)
  40e917:	cdq    
  40e918:	cmp    bl,al
  40e91a:	dec    esp
  40e91b:	dec    ebp
  40e91c:	mov    ds:0x7cf5868c,al
  40e921:	dec    ebp
  40e922:	sbb    eax,0xd21a113f
  40e927:	push   esi
  40e928:	mov    ecx,0xc696b5ec
  40e92d:	nop
  40e92e:	and    al,0x3f
  40e930:	dec    esp
  40e931:	test   DWORD PTR [edx],ecx
  40e933:	stos   BYTE PTR es:[edi],al
  40e934:	pop    ds
  40e935:	ss and dh,0x70
  40e939:	hlt    
  40e93a:	ja     0x40e97e
  40e93c:	inc    ebp
  40e93d:	sbb    BYTE PTR [ecx],ah
  40e93f:	add    dl,ch
  40e941:	aas    
  40e942:	pop    esp
  40e943:	lds    edx,FWORD PTR [edx+0x21ba2767]
  40e949:	push   ds
  40e94a:	(bad)  
  40e94b:	addr16 mov bh,0x1f
  40e94e:	mov    edx,0x59cfbbff
  40e953:	(bad)  
  40e954:	cmp    ebp,DWORD PTR [esi+0x71]
  40e957:	mov    dl,0xab
  40e959:	adc    bh,BYTE PTR [ebx+ebx*4]
  40e95c:	arpl   WORD PTR [ecx],dx
  40e95e:	mov    BYTE PTR [edx-0x16],al
  40e961:	jmp    0x423428f6
  40e966:	inc    BYTE PTR [edi-0x2cbd38d7]
  40e96c:	lock sbb al,0x67
  40e96f:	fld    st(4)
  40e971:	rol    DWORD PTR [ebx+esi*2+0x7989f307],0x2c
  40e979:	jne    0x40e937
  40e97b:	(bad)  
  40e97c:	sbb    ch,BYTE PTR [edi]
  40e97e:	add    eax,0xafd3503
  40e983:	jmp    0xe840d8ab
  40e988:	repnz inc eax
  40e98a:	es add al,0x8f
  40e98d:	and    esi,DWORD PTR [ecx]
  40e98f:	popa   
  40e990:	push   ss
  40e991:	leave  
  40e992:	mov    edi,0xbae1457a
  40e997:	loopne 0x40e9c4
  40e999:	out    0x8c,al
  40e99b:	aam    0x58
  40e99d:	jns    0x40e9d3
  40e99f:	and    BYTE PTR [esi+0x734465f5],ah
  40e9a5:	enter  0x97ba,0xb8
  40e9a9:	retf   0xdd10
  40e9ac:	pop    ds
  40e9ad:	add    ch,BYTE PTR [ebp+0x445b952e]
  40e9b3:	pop    ss
  40e9b4:	xchg   esi,eax
  40e9b5:	mov    esp,0xde55a19f
  40e9ba:	in     eax,0xf9
  40e9bc:	int3   
  40e9bd:	xor    al,0x70
  40e9bf:	std    
  40e9c0:	popf   
  40e9c1:	sbb    dl,bl
  40e9c3:	sbb    bh,BYTE PTR [ebx]
  40e9c5:	inc    edi
  40e9c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9c7:	jnp    0x40e9a0
  40e9c9:	dec    ebp
  40e9ca:	jmp    0x6aa8:0xdca36e90
  40e9d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9d2:	jl     0x40e9ac
  40e9d4:	jo     0x40ea46
  40e9d6:	adc    DWORD PTR [ebx],ecx
  40e9d8:	dec    ecx
  40e9d9:	popa   
  40e9da:	jl     0x40e9bf
  40e9dc:	add    eax,0x4438d149
  40e9e1:	sets   BYTE PTR [eax+0x624e2053]
  40e9e8:	xchg   edx,eax
  40e9e9:	aaa    
  40e9ea:	inc    ebx
  40e9eb:	adc    ecx,DWORD PTR [eax+0x38]
  40e9ee:	cwde   
  40e9ef:	ss in  al,0xd8
  40e9f2:	(bad)  
  40e9f3:	or     eax,0x118a9960
  40e9f8:	push   es
  40e9f9:	inc    eax
  40e9fa:	adc    DWORD PTR [esi+0xe8bbe95],edx
  40ea00:	push   cs
  40ea01:	sub    DWORD PTR [eax+0x45f16ed7],edi
  40ea07:	cmp    esp,DWORD PTR [edx+ecx*8-0x7bde1647]
  40ea0e:	dec    eax
  40ea0f:	push   edx
  40ea10:	dec    eax
  40ea11:	cld    
  40ea12:	mov    bx,0x50a8
  40ea16:	xlat   BYTE PTR ds:[ebx]
  40ea17:	inc    eax
  40ea18:	clc    
  40ea19:	les    esi,FWORD PTR [ebx+ebx*1-0x15]
  40ea1d:	jmp    0x60cf:0x80d693e7
  40ea24:	outs   dx,DWORD PTR ds:[esi]
  40ea25:	inc    eax
  40ea26:	popf   
  40ea27:	adc    eax,0x67fb91e0
  40ea2c:	sub    dh,BYTE PTR [ebx+0x13e99992]
  40ea32:	stc    
  40ea33:	arpl   ax,cx
  40ea35:	sbb    al,0xfb
  40ea37:	pop    ds
  40ea38:	jmp    FWORD PTR [edx]
  40ea3a:	es retf 
  40ea3c:	or     al,0xcb
  40ea3e:	cmp    al,0x7f
  40ea40:	xchg   ebx,eax
  40ea41:	movq   mm7,mm3
  40ea44:	jg     0x40eab4
  40ea46:	fsub   DWORD PTR [eax+0x2b]
  40ea49:	and    ah,dl
  40ea4b:	adc    ebx,DWORD PTR [ebx+0x25]
  40ea4e:	jb     0x40eac3
  40ea50:	push   ds
  40ea51:	jg     0x40e9f6
  40ea53:	dec    eax
  40ea54:	mov    edi,0xfd2bb31d
  40ea59:	mov    edi,0xaaa78000
  40ea5e:	mov    ds:0xe736a90f,eax
  40ea63:	or     DWORD PTR [edi+0x69aee39a],eax
  40ea69:	xchg   edx,eax
  40ea6a:	(bad)  
  40ea6b:	in     eax,0xf6
  40ea6d:	sbb    eax,0xf7d9805a
  40ea72:	mov    eax,ds:0x5fb17389
  40ea77:	mov    ds:0xfc33147f,al
  40ea7c:	adc    al,0x1d
  40ea7e:	push   0x3578be8
  40ea83:	icebp  
  40ea84:	jne    0x40ea5c
  40ea86:	(bad)  
  40ea87:	test   al,0xe1
  40ea89:	and    eax,0xa34451e7
  40ea8e:	(bad)  
  40ea8f:	mov    esi,0x6370d31c
  40ea94:	mov    al,cl
  40ea96:	ins    DWORD PTR es:[edi],dx
  40ea97:	int    0xa1
  40ea99:	pop    ss
  40ea9a:	sub    BYTE PTR [ecx-0x26],cl
  40ea9d:	call   0x3d83c269
  40eaa2:	arpl   si,sp
  40eaa4:	div    BYTE PTR [esi+ebp*8]
  40eaa7:	xor    edx,eax
  40eaa9:	jns    0x40ea2f
  40eaab:	jle    0x40ea83
  40eaad:	shl    ecx,cl
  40eaaf:	xchg   edi,eax
  40eab0:	mov    ah,0x69
  40eab2:	sar    DWORD PTR [ebx+0x56ca1907],1
  40eab8:	xchg   ebx,eax
  40eab9:	bound  esi,QWORD PTR [eax+esi*1-0x57]
  40eabd:	es push edx
  40eabf:	mov    esi,0x200fe4cf
  40eac4:	sub    bh,BYTE PTR [ebx+0x20e4d0e]
  40eaca:	jbe    0x40eb05
  40eacc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eacd:	mov    ebx,0x98a2ffdd
  40ead2:	or     DWORD PTR [ebx-0x32],ecx
  40ead5:	lock std 
  40ead7:	xchg   ebp,eax
  40ead8:	dec    esi
  40ead9:	test   eax,0x10a6086c
  40eade:	leave  
  40eadf:	test   dl,bl
  40eae1:	pop    ebx
  40eae2:	jp     0x40eaa9
  40eae4:	fdiv   st,st(0)
  40eae6:	dec    esp
  40eae7:	test   DWORD PTR [ebx-0x61],esp
  40eaea:	enter  0x1787,0xf1
  40eaee:	sbb    DWORD PTR [ebx+ebx*8],esi
  40eaf1:	mov    bl,0x6
  40eaf3:	mov    ds:0xc5d21312,eax
  40eaf8:	inc    edi
  40eaf9:	xor    al,BYTE PTR [ecx-0x39]
  40eafc:	mov    ah,0x14
  40eafe:	xlat   BYTE PTR ds:[ebx]
  40eaff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb00:	push   ebp
  40eb01:	ja     0x40eaed
  40eb03:	mov    eax,ds:0xae4e622b
  40eb08:	(bad)  
  40eb09:	pusha  
  40eb0a:	pop    edx
  40eb0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb0c:	inc    edi
  40eb0d:	les    ebp,FWORD PTR ds:0x2cdadb1
  40eb13:	loope  0x40eb83
  40eb15:	lock stos DWORD PTR es:[edi],eax
  40eb17:	push   ebx
  40eb18:	adc    bh,al
  40eb1a:	jecxz  0x40eada
  40eb1c:	(bad)  
  40eb1e:	mov    fs,WORD PTR [ecx]
  40eb20:	sub    al,dh
  40eb22:	fbstp  TBYTE PTR [edx+eiz*4-0x17]
  40eb26:	in     eax,0x45
  40eb28:	and    al,0xc6
  40eb2a:	lods   eax,DWORD PTR ds:[esi]
  40eb2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb2c:	xor    al,0x81
  40eb2e:	gs dec ebp
  40eb30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb31:	inc    esi
  40eb32:	call   0xf138:0x22b8c000
  40eb39:	mov    ch,0xfe
  40eb3b:	call   0x38ac:0x9337edee
  40eb42:	dec    BYTE PTR [edi+ecx*4+0x16]
  40eb46:	fdivr  QWORD PTR [ebx-0x4]
  40eb49:	in     al,0xa2
  40eb4b:	or     edx,esi
  40eb4d:	pop    esp
  40eb4e:	in     eax,0x17
  40eb50:	add    esi,DWORD PTR [ebx-0x5e2c6f4]
  40eb56:	push   ebp
  40eb57:	nop
  40eb58:	les    edx,FWORD PTR [edi+0x3fa1705b]
  40eb5e:	or     edi,0x65
  40eb61:	cmp    DWORD PTR [ebx],eax
  40eb63:	(bad)  
  40eb64:	dec    ecx
  40eb65:	out    dx,al
  40eb66:	push   es
  40eb67:	mov    eax,edi
  40eb69:	jecxz  0x40eb05
  40eb6b:	ins    DWORD PTR es:[edi],dx
  40eb6c:	(bad)  [ecx]
  40eb6e:	mov    ds:0x43e87a36,eax
  40eb73:	mov    al,0x9e
  40eb75:	test   al,0xb6
  40eb77:	in     eax,0x68
  40eb79:	adc    al,0x7a
  40eb7b:	inc    edi
  40eb7c:	sbb    eax,0xee26f3e1
  40eb81:	cmp    DWORD PTR [ebp+0x3],ebx
  40eb84:	and    DWORD PTR [ebx-0x53b80257],esi
  40eb8a:	jo     0x40ebb9
  40eb8c:	mov    BYTE PTR [eax+edi*1+0x3dab718a],ch
  40eb93:	dec    esi
  40eb94:	jmp    0x73eed757
  40eb99:	out    0xe,al
  40eb9b:	or     DWORD PTR [edi+0x6f],ecx
  40eb9e:	cmc    
  40eb9f:	dec    ebx
  40eba0:	sar    bl,cl
  40eba2:	mov    bl,0x41
  40eba4:	(bad)  
  40eba5:	fdiv   QWORD PTR [edx+0x54]
  40eba8:	pop    ebp
  40eba9:	pop    esi
  40ebaa:	sub    edx,ebx
  40ebac:	push   cs
  40ebad:	xor    BYTE PTR [eax*4-0x779d7192],cl
  40ebb4:	lahf   
  40ebb5:	outs   dx,DWORD PTR ds:[esi]
  40ebb6:	in     eax,dx
  40ebb7:	(bad)  
  40ebb8:	cld    
  40ebb9:	inc    eax
  40ebba:	das    
  40ebbb:	pop    esp
  40ebbc:	shl    dl,1
  40ebbe:	aas    
  40ebbf:	(bad)  
  40ebc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebc1:	jno    0x40eb57
  40ebc3:	and    cl,BYTE PTR [ebp-0x18]
  40ebc6:	stos   DWORD PTR es:[edi],eax
  40ebc7:	mov    ss,WORD PTR [edi]
  40ebc9:	ffreep st(3)
  40ebcb:	and    DWORD PTR [edx+0x27],ebp
  40ebce:	aam    0x28
  40ebd0:	xlat   BYTE PTR ds:[ebx]
  40ebd1:	cmp    ecx,DWORD PTR [ecx]
  40ebd3:	mov    cl,bh
  40ebd5:	xchg   edx,eax
  40ebd6:	push   ebp
  40ebd7:	aaa    
  40ebd8:	sub    ch,dl
  40ebda:	in     al,dx
  40ebdb:	ds aad 0x7
  40ebde:	bound  ebp,QWORD PTR [ecx-0x75]
  40ebe1:	cwde   
  40ebe2:	mov    ds:0x6d9ae34b,eax
  40ebe7:	iret   
  40ebe8:	mov    ah,0x5
  40ebea:	pop    edx
  40ebeb:	aam    0x15
  40ebed:	fsub   QWORD PTR [edi-0x29]
  40ebf0:	adc    BYTE PTR [eax-0x220092b5],ah
  40ebf6:	repz fistp WORD PTR [eax]
  40ebf9:	fisttp DWORD PTR [ecx+0x79]
  40ebfc:	dec    ebp
  40ebfd:	jns    0x40ec15
  40ebff:	mov    edx,DWORD PTR [eax+0x79]
  40ec02:	dec    ebx
  40ec03:	arpl   WORD PTR [edx-0x47c605fe],si
  40ec09:	mov    dh,0xe2
  40ec0b:	fbld   TBYTE PTR [ecx]
  40ec0d:	mov    ss,WORD PTR [edi-0x1e]
  40ec10:	mov    edi,0xb502ea10
  40ec15:	and    ebp,DWORD PTR [ebp-0x38]
  40ec18:	sbb    BYTE PTR [ebp+0x4fbdd8da],bh
  40ec1e:	fadd   DWORD PTR [edi+0x4b]
  40ec21:	dec    edx
  40ec22:	xchg   edx,eax
  40ec23:	sub    eax,0x935cbcfc
  40ec28:	fsub   QWORD PTR [eax]
  40ec2a:	push   ecx
  40ec2b:	jmp    0x4d55d9f4
  40ec30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec31:	bound  ebp,QWORD PTR [edi-0x76c8785d]
  40ec37:	sub    ah,dh
  40ec39:	jne    0x40ec0f
  40ec3b:	push   cs
  40ec3c:	int    0x55
  40ec3e:	xchg   ebx,eax
  40ec3f:	inc    eax
  40ec40:	popf   
  40ec41:	add    dl,cl
  40ec43:	mov    dl,0x3b
  40ec45:	test   BYTE PTR [edi+0x1ccb4120],ch
  40ec4b:	das    
  40ec4c:	pop    ebx
  40ec4d:	stc    
  40ec4e:	add    BYTE PTR [ebx-0x7d],0xeb
  40ec52:	cs repnz push 0x913b03ac
  40ec59:	aaa    
  40ec5a:	daa    
  40ec5b:	pushf  
  40ec5c:	retf   0x72f7
  40ec5f:	cwde   
  40ec60:	cwde   
  40ec61:	xor    DWORD PTR [eax+esi*4-0x6a136fe3],ebx
  40ec68:	fst    st(3)
  40ec6a:	ficom  WORD PTR [ecx*1-0x29b65ec2]
  40ec71:	aad    0x49
  40ec73:	in     al,dx
  40ec74:	sub    ebp,DWORD PTR [edx+0x1d]
  40ec77:	inc    edx
  40ec78:	ins    BYTE PTR es:[edi],dx
  40ec79:	hlt    
  40ec7a:	lahf   
  40ec7b:	pushf  
  40ec7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec7d:	scas   al,BYTE PTR es:[edi]
  40ec7e:	das    
  40ec7f:	fisubr WORD PTR [eax-0x4da73e09]
  40ec85:	jbe    0x40ed03
  40ec87:	mov    al,ds:0x288e3d39
  40ec8d:	addr16 std 
  40ec8f:	sahf   
  40ec90:	xlat   BYTE PTR ds:[ebx]
  40ec91:	xor    eax,0x39cdf98c
  40ec96:	push   ecx
  40ec98:	ds sbb esi,ecx
  40ec9b:	shl    DWORD PTR [esi+ebx*1+0xa],cl
  40ec9f:	lahf   
  40eca0:	or     ch,dl
  40eca2:	cs cli 
  40eca4:	stc    
  40eca5:	push   edx
  40eca6:	fisubr WORD PTR [esi]
  40eca8:	jp     0x40ecc3
  40ecaa:	cmp    eax,0x48b41133
  40ecaf:	and    eax,DWORD PTR [edx]
  40ecb1:	test   al,0xdf
  40ecb3:	mov    esi,0x1539c29b
  40ecb8:	add    BYTE PTR [eax],bh
  40ecba:	inc    ebp
  40ecbb:	sbb    eax,0x87904710
  40ecc0:	adc    al,0x65
  40ecc2:	adc    al,0xfe
  40ecc4:	popf   
  40ecc5:	add    esp,edi
  40ecc7:	repz rol DWORD PTR [ecx-0x52f6a16a],cl
  40ecce:	push   es
  40eccf:	retf   
  40ecd0:	call   0x2018:0x47622d89
  40ecd7:	cmc    
  40ecd8:	xchg   esi,eax
  40ecd9:	(bad)  
  40ecda:	xchg   ecx,eax
  40ecdb:	xor    eax,0x699fdca1
  40ece0:	cmp    esi,DWORD PTR [ebp-0x44928819]
  40ece6:	jmp    0xdac7c934
  40eceb:	mov    bh,0xee
  40eced:	fcom   QWORD PTR [ebp+0x49cb6b7d]
  40ecf3:	jle    0x40ecb6
  40ecf5:	sahf   
  40ecf6:	jbe    0x40ed0b
  40ecf8:	jg     0x40ed12
  40ecfa:	mov    edi,0x9387a176
  40ecff:	push   ss
  40ed00:	xor    DWORD PTR [edi+0x1f],ecx
  40ed03:	pop    ebx
  40ed04:	(bad)  
  40ed05:	pop    edi
  40ed06:	jnp    0x40ed4f
  40ed08:	aam    0x77
  40ed0a:	ja     0x40ed10
  40ed0c:	push   es
  40ed0d:	repnz int 0x80
  40ed10:	fld    TBYTE PTR [eax+0x7b]
  40ed13:	scas   al,BYTE PTR es:[edi]
  40ed14:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed16:	jno    0x40ed70
  40ed18:	pop    eax
  40ed19:	shr    ebp,1
  40ed1b:	cmp    DWORD PTR [ebx+0x27],edi
  40ed1e:	test   BYTE PTR [edi+ebp*8],dh
  40ed21:	dec    esi
  40ed22:	mov    esp,0x8ad25f6b
  40ed27:	pop    edx
  40ed28:	and    ebx,DWORD PTR [edx+ebp*8]
  40ed2b:	push   ebx
  40ed2c:	cmp    DWORD PTR ds:0x3b955186,esi
  40ed32:	les    esp,FWORD PTR [eax+0x20]
  40ed35:	push   ebp
  40ed36:	jns    0x40ed67
  40ed38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed39:	es aam 0x47
  40ed3c:	lds    edx,FWORD PTR ds:0xa1d41acd
  40ed42:	rcl    DWORD PTR [esi+edi*1-0xb5d5898],cl
  40ed49:	xor    al,0x1e
  40ed4b:	fisttp WORD PTR [eax+edi*4-0x5b895877]
  40ed52:	sub    DWORD PTR [edi+0x19245156],0x34
  40ed59:	dec    ebx
  40ed5a:	ss aaa 
  40ed5c:	adc    esp,ecx
  40ed5e:	sbb    BYTE PTR [ebp-0x67],bh
  40ed61:	fs leave 
  40ed63:	jns    0x40ed20
  40ed65:	outs   dx,DWORD PTR ds:[esi]
  40ed66:	jmp    0x40ed55
  40ed68:	cli    
  40ed69:	out    dx,al
  40ed6a:	cli    
  40ed6b:	cld    
  40ed6c:	cld    
  40ed6d:	lods   al,BYTE PTR ds:[esi]
  40ed6e:	iret   
  40ed6f:	test   BYTE PTR [ecx+edx*4+0x2],ch
  40ed73:	pop    edx
  40ed74:	test   DWORD PTR [ebx],esp
  40ed76:	mov    edx,0x87063ab6
  40ed7b:	adc    eax,0xb291d4f1
  40ed80:	push   ss
  40ed81:	div    DWORD PTR [ebx-0x71]
  40ed84:	ins    DWORD PTR es:[edi],dx
  40ed85:	das    
  40ed86:	(bad)  
  40ed87:	(bad)  [eax+0x33e9b78d]
  40ed8d:	jne    0x40ed66
  40ed8f:	mov    ds:0x12140ec4,eax
  40ed94:	scas   eax,DWORD PTR es:[edi]
  40ed95:	and    al,0xb2
  40ed97:	loop   0x40ed59
  40ed99:	xchg   ebp,eax
  40ed9a:	(bad)  [esp+esi*8-0x328f5540]
  40eda1:	ins    BYTE PTR es:[edi],dx
  40eda2:	imul   edx,DWORD PTR [ebx+0x70],0x2404bf6a
  40eda9:	jmp    DWORD PTR [ebp-0x3b04aaae]
  40edaf:	sub    edx,DWORD PTR [eax+0x5a]
  40edb2:	test   eax,edi
  40edb4:	iret   
  40edb5:	fwait
  40edb6:	xor    BYTE PTR [edx+0xb40ed5c],ah
  40edbc:	sbb    dh,dh
  40edbe:	(bad)  
  40edbf:	lods   al,BYTE PTR gs:[esi]
  40edc1:	push   0x99938bd7
  40edc6:	test   BYTE PTR [esi+0x5a],bl
  40edc9:	iret   
  40edca:	jnp    0x40ee05
  40edcc:	jp     0x40ed7a
  40edce:	aas    
  40edcf:	sub    ebx,DWORD PTR [ecx+esi*4-0x2a29e521]
  40edd6:	ficomp WORD PTR [eax-0x20f54968]
  40eddc:	adc    ecx,DWORD PTR [eax+0x4c]
  40eddf:	dec    esi
  40ede0:	inc    eax
  40ede1:	aad    0xbb
  40ede3:	and    al,0x6c
  40ede5:	ret    0xabd3
  40ede8:	les    edx,FWORD PTR [ecx-0x3d2d98cd]
  40edee:	aam    0x4b
  40edf0:	shr    DWORD PTR [eax-0x4d],cl
  40edf3:	xor    BYTE PTR [ebx+ecx*8],dl
  40edf6:	push   ebx
  40edf7:	inc    esi
  40edf8:	stos   DWORD PTR es:[edi],eax
  40edf9:	daa    
  40edfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40edfb:	inc    edx
  40edfc:	xchg   DWORD PTR [ecx+0x65e517b8],edx
  40ee02:	xor    DWORD PTR [edi],ebx
  40ee04:	into   
  40ee05:	mov    ch,0xc1
  40ee07:	jecxz  0x40edab
  40ee09:	gs (bad) 
  40ee0b:	fyl2x  
  40ee0d:	cmp    cl,dl
  40ee0f:	mov    edx,0xc7f3fb00
  40ee14:	add    bh,BYTE PTR [edi-0x151af06d]
  40ee1a:	cmp    ecx,DWORD PTR [ebp-0x2a]
  40ee1d:	cmp    BYTE PTR [ebx-0x71f7bd02],bl
  40ee23:	mov    al,0x89
  40ee25:	retf   
  40ee26:	hlt    
  40ee27:	das    
  40ee28:	mov    ebx,0x4e9ba6fa
  40ee2d:	xor    cl,BYTE PTR [ebx]
  40ee2f:	jecxz  0x40ee36
  40ee31:	dec    edi
  40ee32:	push   es
  40ee33:	(bad)  [edi+0x73b846f5]
  40ee39:	and    al,0x51
  40ee3b:	mov    eax,ds:0x988378c8
  40ee40:	mov    al,ds:0xc2111ff8
  40ee45:	jmp    DWORD PTR [edx-0x4e]
  40ee48:	jb     0x40ee6f
  40ee4a:	cmp    DWORD PTR [ecx+0x601424c],edi
  40ee50:	jnp    0x40ee1f
  40ee52:	fld    DWORD PTR [edx]
  40ee54:	add    cl,BYTE PTR [esi+0x19dea736]
  40ee5a:	push   ecx
  40ee5b:	pop    ecx
  40ee5c:	xchg   ebx,eax
  40ee5d:	push   cs
  40ee5e:	mov    esp,ebx
  40ee60:	push   0xffffffc3
  40ee62:	ret    
  40ee63:	or     al,0xec
  40ee65:	daa    
  40ee66:	dec    ebx
  40ee67:	loop   0x40ee2c
  40ee69:	cmp    DWORD PTR [edi-0x3b],ebp
  40ee6c:	dec    edi
  40ee6d:	mov    dl,BYTE PTR [ecx-0x1d9a568d]
  40ee73:	mov    eax,ds:0x8872800
  40ee78:	and    eax,0xf2019f63
  40ee7d:	fcmovb st,st(0)
  40ee7f:	out    dx,al
  40ee80:	jp     0x40eec8
  40ee82:	fwait
  40ee83:	mov    eax,0x33f08227
  40ee88:	xor    ah,BYTE PTR [eax-0x3d]
  40ee8b:	lock in al,dx
  40ee8d:	stos   DWORD PTR es:[edi],eax
  40ee8e:	mov    dh,0x4b
  40ee90:	aas    
  40ee91:	(bad)  
  40ee92:	scas   eax,DWORD PTR es:[edi]
  40ee93:	xor    ch,BYTE PTR [edi+0x20]
  40ee96:	pop    es
  40ee97:	xor    esp,DWORD PTR [ebx-0x4b]
  40ee9a:	repnz xlat BYTE PTR ds:[ebx]
  40ee9c:	jg     0x40ee77
  40ee9e:	cmc    
  40ee9f:	push   0x762ef8c9
  40eea4:	mov    al,ds:0x9bfdce5
  40eea9:	fs into 
  40eeab:	shl    ebp,1
  40eead:	stc    
  40eeae:	pop    esp
  40eeaf:	ret    
  40eeb0:	adc    DWORD PTR [edi+0x1fd3ee23],ebp
  40eeb6:	sub    BYTE PTR [esi-0x424d2c0c],cl
  40eebc:	loopne 0x40ee90
  40eebe:	mov    cl,0xaf
  40eec0:	repz push ecx
  40eec2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eec3:	inc    DWORD PTR [edi+0x69927a1]
  40eec9:	sbb    esi,DWORD PTR [ebx-0x58]
  40eecc:	imul   ebp,DWORD PTR [esi-0x264f1522],0x3c127c93
  40eed6:	daa    
  40eed7:	hlt    
  40eed8:	jge    0x40ef12
  40eeda:	pop    ss
  40eedb:	xchg   edi,eax
  40eedc:	mov    al,0x39
  40eede:	jae    0x40eede
  40eee0:	mov    al,ds:0x80c2c219
  40eee5:	sub    al,0x14
  40eee7:	lods   al,BYTE PTR ds:[esi]
  40eee8:	vpmacssdd xmm6,xmm5,xmm2,XMMWORD PTR [esi+0x20081c7c]
  40eef2:	pop    ebp
  40eef3:	pushf  
  40eef4:	call   0xd30849b0
  40eef9:	adc    BYTE PTR [eax-0x17],bl
  40eefc:	ins    BYTE PTR es:[edi],dx
  40eefd:	push   ecx
  40eefe:	or     edi,edx
  40ef00:	fmul   st(3),st
  40ef02:	sbb    BYTE PTR [edi-0x8],al
  40ef05:	sbb    BYTE PTR [esi],bh
  40ef07:	nop
  40ef08:	and    cl,0x62
  40ef0b:	mov    bl,0x99
  40ef0d:	lock or al,0x5a
  40ef10:	inc    edi
  40ef11:	div    BYTE PTR [edi+0x22]
  40ef14:	inc    esp
  40ef15:	out    dx,eax
  40ef16:	test   eax,0xb19ef251
  40ef1b:	add    DWORD PTR [esp+eax*1],eax
  40ef1e:	sbb    al,0x3a
  40ef20:	pushf  
  40ef21:	repnz shl ch,1
  40ef24:	bound  edi,QWORD PTR [esi]
  40ef26:	(bad)  
  40ef27:	fisttp WORD PTR [ebp+edi*8-0x1f]
  40ef2b:	out    dx,al
  40ef2c:	jge    0x40ef0d
  40ef2e:	jecxz  0x40efa5
  40ef30:	push   esp
  40ef31:	cmc    
  40ef32:	scas   eax,DWORD PTR es:[edi]
  40ef33:	cmp    BYTE PTR [eax+0x0],0xa6
  40ef37:	aas    
  40ef38:	outs   dx,DWORD PTR ds:[esi]
  40ef39:	dec    BYTE PTR [edi]
  40ef3b:	inc    ebx
  40ef3c:	inc    edi
  40ef3d:	mov    bh,0x65
  40ef3f:	xchg   edx,eax
  40ef40:	mov    ah,0xf4
  40ef42:	call   0x7d6a:0x39d09d6b
  40ef49:	pop    ds
  40ef4a:	loop   0x40ef48
  40ef4c:	into   
  40ef4d:	sub    bl,BYTE PTR [edi]
  40ef4f:	xlat   BYTE PTR ds:[ebx]
  40ef50:	icebp  
  40ef51:	enter  0x7b88,0x42
  40ef55:	dec    ebx
  40ef56:	push   ebx
  40ef57:	aad    0xd6
  40ef59:	rol    DWORD PTR [ecx+ebp*8-0x14846fc5],1
  40ef60:	mov    dl,0x5e
  40ef62:	mov    ecx,DWORD PTR [edx]
  40ef64:	add    DWORD PTR [edx+0xc],ecx
  40ef67:	inc    ecx
  40ef68:	or     edi,eax
  40ef6a:	clc    
  40ef6b:	rol    BYTE PTR [eax],1
  40ef6d:	push   esi
  40ef6e:	in     al,dx
  40ef6f:	inc    ecx
  40ef70:	and    bh,cl
  40ef72:	neg    BYTE PTR [eax-0x59]
  40ef75:	repz or DWORD PTR [edx+0xc],0x5
  40ef7a:	lea    ebp,[edx-0x7480d6ba]
  40ef80:	or     edi,DWORD PTR [ebx+0x23]
  40ef83:	arpl   ax,bx
  40ef85:	jecxz  0x40efaf
  40ef87:	xchg   ch,dl
  40ef89:	stc    
  40ef8a:	pushf  
  40ef8b:	and    al,0x15
  40ef8d:	scas   eax,DWORD PTR es:[edi]
  40ef8e:	xlat   BYTE PTR ds:[ebx]
  40ef8f:	popf   
  40ef90:	and    dh,BYTE PTR [ebx-0x4613fb4b]
  40ef96:	lods   eax,DWORD PTR ds:[esi]
  40ef97:	ss and al,0x71
  40ef9a:	jmp    0x87d9:0xba07f33c
  40efa1:	lea    edi,[ebx]
  40efa3:	mov    ax,WORD PTR [edi+0x52568988]
  40efaa:	rol    DWORD PTR [ebp-0x12],0xf7
  40efae:	dec    ebx
  40efaf:	cmp    eax,0x89bb79f3
  40efb4:	mov    edi,0x70f9f183
  40efb9:	call   0x497bd846
  40efbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efbf:	pop    esi
  40efc0:	add    BYTE PTR [edx+0x6ee9d136],0x8e
  40efc7:	shr    DWORD PTR [ebx],0x4c
  40efca:	and    al,0x2b
  40efcc:	pop    edi
  40efcd:	push   0xf522b8a8
  40efd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efd3:	stc    
  40efd4:	pop    esp
  40efd5:	scas   al,BYTE PTR es:[edi]
  40efd6:	add    DWORD PTR [edx],esi
  40efd8:	mov    ebp,0x50d2a443
  40efdd:	add    al,0xd7
  40efdf:	cmp    DWORD PTR [ebp-0x6d],ebp
  40efe2:	xchg   esp,eax
  40efe3:	jp     0x40efe4
  40efe5:	inc    ebp
  40efe6:	jae    0x40f056
  40efe8:	neg    dh
  40efea:	loop   0x40efeb
  40efec:	xchg   ebp,eax
  40efed:	pop    edx
  40efee:	(bad)  
  40eff0:	in     al,dx
  40eff1:	add    al,0xb4
  40eff3:	cwde   
  40eff4:	adc    eax,0x18de78bb
  40eff9:	jno    0x40f079
  40effb:	shr    DWORD PTR [edi+0x54],cl
  40effe:	outs   dx,DWORD PTR ds:[esi]
  40efff:	jb     0x40f06c
  40f001:	mov    esp,0x4dbcdcd5
  40f006:	add    BYTE PTR [ebx+0x45],cl
  40f009:	pop    edx
  40f00a:	push   edx
  40f00b:	push   ecx
  40f00c:	push   esi
  40f00d:	lea    edx,[eax+0x23]
  40f010:	adc    esi,ebp
  40f012:	inc    ebx
  40f013:	fwait
  40f014:	fwait
  40f015:	ins    BYTE PTR es:[edi],dx
  40f016:	cs push ecx
  40f018:	int3   
  40f019:	(bad)  
  40f01a:	jmp    0xa5305275
  40f01f:	js     0x40eff6
  40f021:	hlt    
  40f022:	ins    BYTE PTR es:[edi],dx
  40f023:	ficomp DWORD PTR [ecx]
  40f025:	dec    ecx
  40f026:	xor    edi,DWORD PTR [ebx-0x69a11930]
  40f02c:	jp     0x40f0a0
  40f02e:	adc    ch,BYTE PTR cs:[ebp+0x7d952b58]
  40f035:	cmp    dl,bl
  40f037:	pop    ds
  40f038:	inc    esi
  40f039:	inc    esi
  40f03a:	out    dx,eax
  40f03b:	bnd jl 0x40eff0
  40f03e:	dec    edx
  40f03f:	lahf   
  40f040:	repnz xchg ebx,eax
  40f042:	das    
  40f043:	mov    esp,edi
  40f045:	(bad)  
  40f046:	push   0xffffffb9
  40f048:	jmp    0xffa8:0xd9bc138c
  40f04f:	push   ebp
  40f050:	and    ch,BYTE PTR [eax+0x574ab736]
  40f056:	pop    esi
  40f057:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f058:	mov    ah,0x17
  40f05a:	fimul  DWORD PTR [edi]
  40f05c:	jns    0x40f0da
  40f05e:	push   edx
  40f05f:	lea    esi,[eax]
  40f061:	and    BYTE PTR [edi-0x439ed42],0xcc
  40f068:	pop    ss
  40f069:	jmp    0xe404:0x4661f55c
  40f070:	or     al,0x70
  40f072:	fiadd  DWORD PTR [ebp-0x42a3e45c]
  40f078:	mov    eax,ds:0x980ed060
  40f07d:	sbb    al,0xd6
  40f07f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f080:	stos   DWORD PTR es:[edi],eax
  40f081:	fidiv  WORD PTR [ebp-0x17]
  40f084:	mov    ebx,0xbfa875d2
  40f089:	inc    edx
  40f08a:	cmp    al,0xc2
  40f08c:	add    DWORD PTR [eax+esi*1-0x4df94a38],esp
  40f093:	(bad)  
  40f094:	fnsave [edi+ecx*1+0x8]
  40f098:	sub    eax,0x2d73db70
  40f09d:	(bad)  
  40f09e:	mov    esp,0xd27e72fe
  40f0a3:	enter  0xfdfa,0x9c
  40f0a7:	mov    ah,0x34
  40f0a9:	retf   
  40f0aa:	mov    al,ds:0x69fa3a1b
  40f0af:	lods   eax,DWORD PTR ds:[esi]
  40f0b0:	jae    0x40f0a1
  40f0b2:	ins    DWORD PTR es:[edi],dx
  40f0b3:	pushf  
  40f0b4:	cli    
  40f0b5:	stc    
  40f0b6:	fxch   st(2)
  40f0b8:	xchg   edi,eax
  40f0b9:	aas    
  40f0ba:	xchg   edi,eax
  40f0bb:	jno    0x40f111
  40f0bd:	je     0x40f124
  40f0bf:	jmp    0x2febe13d
  40f0c4:	ror    DWORD PTR [ebp-0x3],1
  40f0c7:	enter  0xef5e,0xc0
  40f0cb:	icebp  
  40f0cc:	bound  ebx,QWORD PTR [ecx-0x20e4af98]
  40f0d2:	daa    
  40f0d3:	push   ebx
  40f0d4:	dec    ecx
  40f0d5:	adc    ah,BYTE PTR [ebx+0x3d70e86]
  40f0db:	(bad)  
  40f0dd:	jo     0x40f07e
  40f0df:	inc    eax
  40f0e0:	sbb    eax,0x876a2ee4
  40f0e5:	popa   
  40f0e6:	fidiv  DWORD PTR [ebp+0x9]
  40f0e9:	rol    DWORD PTR [ebx],cl
  40f0eb:	cli    
  40f0ec:	gs data16 jmp 0x40f098
  40f0f0:	jmp    0x7a2c5323
  40f0f5:	xor    edx,DWORD PTR [edx-0x793f681d]
  40f0fb:	and    eax,0xaafe820b
  40f100:	aad    0xfa
  40f102:	sbb    eax,0x8a348dc0
  40f107:	adc    eax,0x907a0091
  40f10c:	retf   
  40f10d:	dec    esp
  40f10e:	mov    ah,0x8a
  40f110:	lea    ecx,[ecx]
  40f112:	add    BYTE PTR [edi-0x54e89595],0xcd
  40f119:	inc    esi
  40f11a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f11b:	rol    cl,cl
  40f11d:	pop    esi
  40f11e:	xor    ch,0xe1
  40f121:	fwait
  40f122:	inc    esp
  40f123:	or     ecx,DWORD PTR [esp+0x3b5894c0]
  40f12a:	push   ds
  40f12b:	je     0x40f0d2
  40f12d:	and    DWORD PTR [ebp-0x13],ebx
  40f130:	js     0x40f161
  40f132:	inc    ebp
  40f133:	aas    
  40f134:	and    ebp,DWORD PTR [ecx+0x24]
  40f137:	stos   DWORD PTR es:[edi],eax
  40f138:	mov    ecx,0xba6ad67f
  40f13d:	xlat   BYTE PTR ds:[ebx]
  40f13e:	and    BYTE PTR [esi+ebp*4+0x6927299f],dl
  40f145:	int3   
  40f146:	jle    0x40f192
  40f148:	js     0x40f11e
  40f14a:	mov    al,0xad
  40f14c:	xor    BYTE PTR [edi],cl
  40f14e:	lods   al,BYTE PTR ds:[esi]
  40f14f:	or     eax,0x8d8e1a4c
  40f154:	add    edi,DWORD PTR [edx-0x1dfcbc4c]
  40f15a:	jp     0x40f1ac
  40f15c:	jb     0x40f101
  40f15e:	pop    edx
  40f15f:	add    BYTE PTR [ecx+0x47],al
  40f162:	inc    ebp
  40f163:	xor    bh,BYTE PTR [ebp+esi*2+0x761a586]
  40f16a:	xchg   edi,eax
  40f16b:	test   al,0xfa
  40f16d:	bound  esi,QWORD PTR [ecx]
  40f16f:	add    ebp,DWORD PTR [esi-0x1f76e196]
  40f175:	adc    bh,bh
  40f177:	push   esp
  40f178:	push   ebp
  40f179:	pop    edi
  40f17a:	loope  0x40f14b
  40f17c:	sub    edi,DWORD PTR [ebx+edi*8+0x2015c0a3]
  40f183:	(bad)  
  40f185:	adc    eax,0x75fe5bbd
  40f18a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f18b:	or     esi,DWORD PTR [ebx]
  40f18d:	pop    es
  40f18e:	(bad)
  40f191:	(bad)  
  40f192:	rcl    BYTE PTR [edx-0x21542a9f],1
  40f198:	cmc    
  40f199:	in     al,dx
  40f19a:	(bad)  
  40f19b:	xlat   BYTE PTR ds:[ebx]
  40f19c:	push   eax
  40f19d:	xchg   edi,eax
  40f19e:	jne    0x40f1a9
  40f1a0:	adc    edi,DWORD PTR [edi]
  40f1a2:	popf   
  40f1a3:	daa    
  40f1a4:	repnz pop ecx
  40f1a6:	and    DWORD PTR [esi],ebx
  40f1a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1a9:	inc    ebp
  40f1aa:	pop    ebp
  40f1ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1ac:	pop    es
  40f1ad:	fmul   DWORD PTR [eax]
  40f1af:	and    bl,dh
  40f1b1:	ja     0x40f1ea
  40f1b3:	nop
  40f1b4:	dec    edi
  40f1b5:	mov    ch,0x81
  40f1b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1b8:	enter  0x85d4,0xb0
  40f1bc:	cli    
  40f1bd:	or     BYTE PTR [ecx],ch
  40f1bf:	pushf  
  40f1c0:	inc    ebp
  40f1c1:	fsub   QWORD PTR [edx]
  40f1c3:	dec    esi
  40f1c4:	cmp    esp,DWORD PTR [edi+0x43]
  40f1c7:	sub    edx,eax
  40f1c9:	add    DWORD PTR [esi+0x5ea2ef4],0x843cc722
  40f1d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1d4:	gs pop ebx
  40f1d6:	aad    0x68
  40f1d8:	jge    0x40f1d7
  40f1da:	and    edi,DWORD PTR [edx-0x22]
  40f1dd:	xor    DWORD PTR [esi+0x74],esp
  40f1e0:	cmp    BYTE PTR [eax-0x62b5b52c],ah
  40f1e6:	inc    edi
  40f1e7:	rol    DWORD PTR [edx-0x17],cl
  40f1ea:	mov    bl,0x19
  40f1ec:	call   0x3dc3:0x6ee7e570
  40f1f3:	add    al,0xc0
  40f1f5:	push   ds
  40f1f6:	jne    0x40f273
  40f1f8:	shl    DWORD PTR [ebx],1
  40f1fa:	mov    dh,0x14
  40f1fc:	sti    
  40f1fd:	ret    0x864e
  40f200:	pop    ebp
  40f201:	add    eax,0xd9e7073c
  40f206:	mov    ah,dh
  40f208:	mov    ch,0xf6
  40f20a:	test   DWORD PTR [esi-0xe69ec],edi
  40f210:	repnz mov cs,WORD PTR [edi]
  40f213:	pop    ecx
  40f214:	jge    0x40f1d0
  40f216:	nop
  40f217:	pop    ebp
  40f218:	xor    BYTE PTR [edx],bl
  40f21a:	jb     0x40f1c7
  40f21c:	push   es
  40f21d:	leave  
  40f21e:	(bad)  
  40f21f:	jmp    0x40f1ed
  40f221:	jle    0x40f25c
  40f223:	dec    ebx
  40f224:	repz sub cl,BYTE PTR ds:0x960b5b2f
  40f22b:	ds sub eax,ecx
  40f22e:	test   al,0xba
  40f230:	scas   al,BYTE PTR es:[edi]
  40f231:	mov    eax,ds:0xd720e7c2
  40f236:	pop    ds
  40f237:	inc    ebp
  40f238:	mov    al,0xe8
  40f23a:	in     al,dx
  40f23b:	daa    
  40f23c:	je     0x40f206
  40f23e:	popa   
  40f23f:	(bad)  
  40f240:	shl    BYTE PTR [esi+eax*1-0x1e115070],cl
  40f247:	push   0x21abed8c
  40f24c:	sahf   
  40f24d:	retf   0xf7b5
  40f250:	pop    esp
  40f251:	dec    ebx
  40f252:	test   eax,0xb0643d87
  40f257:	cdq    
  40f258:	push   eax
  40f259:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f25a:	push   edi
  40f25b:	and    BYTE PTR [edi-0x9fec338],bl
  40f261:	xchg   ecx,eax
  40f262:	inc    ebx
  40f263:	jae    0x40f25d
  40f265:	jns    0x40f22c
  40f267:	imul   ecx,DWORD PTR [esi+0x3b03ee5b],0xacfee3ba
  40f271:	push   es
  40f272:	(bad)  
  40f274:	iret   
  40f275:	jle    0x40f250
  40f277:	outs   dx,BYTE PTR ds:[esi]
  40f278:	ins    DWORD PTR es:[edi],dx
  40f279:	hlt    
  40f27a:	or     eax,0x571859ce
  40f27f:	and    BYTE PTR [eax+0x69],bl
  40f282:	out    0x51,eax
  40f284:	pop    ebp
  40f285:	ss xchg edi,eax
  40f287:	fs push ds
  40f289:	adc    dl,BYTE PTR [ecx-0x2848f04c]
  40f28f:	cmp    cl,0xf8
  40f292:	pushf  
  40f293:	jae    0x40f281
  40f295:	test   BYTE PTR fs:[eax+0x6e6e650f],0x61
  40f29d:	scas   al,BYTE PTR es:[edi]
  40f29e:	add    esp,DWORD PTR [ecx-0x520bf6d2]
  40f2a4:	aaa    
  40f2a5:	shl    ecx,cl
  40f2a7:	pusha  
  40f2a8:	inc    eax
  40f2a9:	cmp    BYTE PTR [edx],al
  40f2ab:	xchg   ecx,eax
  40f2ac:	(bad)  
  40f2ad:	mov    edx,0xad80beac
  40f2b2:	inc    ebx
  40f2b3:	subps  xmm0,xmm6
  40f2b6:	call   DWORD PTR ds:0x78829654
  40f2bc:	fstp   TBYTE PTR ds:0x8b1972f0
  40f2c2:	sbb    eax,0xb0cde2cb
  40f2c7:	jge    0x40f329
  40f2c9:	and    ah,al
  40f2cb:	ins    DWORD PTR es:[edi],dx
  40f2cc:	ins    BYTE PTR es:[edi],dx
  40f2cd:	cmp    esi,DWORD PTR [ebx+0x1cc045f9]
  40f2d3:	jne    0x40f309
  40f2d5:	jbe    0x40f29b
  40f2d7:	in     eax,0x88
  40f2d9:	push   eax
  40f2da:	mov    ?,WORD PTR [ebx]
  40f2dc:	or     edx,DWORD PTR [esi-0x15afcfd1]
  40f2e2:	test   esi,edi
  40f2e4:	mov    WORD PTR [edi-0x2f9a54f0],es
  40f2ea:	retf   0xf9bd
  40f2ed:	pop    es
  40f2ee:	sbb    ch,BYTE PTR [ecx-0x23]
  40f2f1:	popa   
  40f2f2:	fwait
  40f2f3:	mov    ds:0x162709b4,al
  40f2f8:	mov    edx,0xc6a8913e
  40f2fd:	sahf   
  40f2fe:	xchg   ebx,eax
  40f2ff:	jg     0x40f33a
  40f301:	shl    DWORD PTR [ebp+0x29e81cc7],0xad
  40f308:	mov    dh,0xdb
  40f30a:	add    eax,0xe3ba622b
  40f30f:	xor    eax,0x7d332b46
  40f314:	xchg   edi,eax
  40f315:	pop    es
  40f316:	stos   BYTE PTR es:[edi],al
  40f317:	fidiv  DWORD PTR [esi+0x1a]
  40f31a:	aad    0xf7
  40f31c:	sub    DWORD PTR [edi+edi*1+0x51b91f0a],0x3
  40f324:	repnz cmp DWORD PTR [ebp+0x4a9e9319],ebp
  40f32b:	cwde   
  40f32c:	sub    cl,BYTE PTR [esi-0x5b]
  40f32f:	out    dx,eax
  40f330:	push   ss
  40f331:	push   edi
  40f332:	cmp    BYTE PTR [esi-0x8fd96b0],al
  40f338:	stc    
  40f339:	in     al,dx
  40f33a:	scas   al,BYTE PTR es:[edi]
  40f33b:	and    bl,BYTE PTR [edi-0x29]
  40f33e:	push   ebx
  40f33f:	jno    0x40f3a8
  40f341:	repnz fbstp TBYTE PTR [eax+0x57]
  40f345:	nop
  40f346:	imul   esi,ebx,0xf89df350
  40f34c:	inc    esp
  40f34d:	xchg   ebp,eax
  40f34e:	mov    BYTE PTR [esi+0x463005e8],al
  40f354:	push   ds
  40f355:	mov    bl,0x73
  40f357:	xchg   esp,eax
  40f358:	add    DWORD PTR [eax+edi*8],0xda502d0b
  40f35f:	ror    DWORD PTR [edi+ebp*2+0x4bf59778],cl
  40f366:	inc    edx
  40f367:	(bad)  [ebx-0x80]
  40f36a:	xor    dl,BYTE PTR [edi]
  40f36c:	push   ss
  40f36d:	in     eax,dx
  40f36e:	sbb    BYTE PTR [eax+0x6b],cl
  40f371:	rcr    BYTE PTR ds:0xf10eea8f,cl
  40f377:	iret   
  40f378:	scas   al,BYTE PTR es:[edi]
  40f379:	loopne 0x40f33e
  40f37b:	push   ebx
  40f37c:	ins    DWORD PTR es:[edi],dx
  40f37d:	push   edx
  40f37e:	cmc    
  40f37f:	mov    bl,0x7c
  40f381:	cmp    DWORD PTR [esi-0x2d],edi
  40f384:	xchg   esp,eax
  40f385:	jnp    0x40f33b
  40f387:	pop    ebp
  40f388:	stos   DWORD PTR es:[edi],eax
  40f389:	(bad)  [edi+ebx*2-0x44]
  40f38d:	call   0x6d97:0x5dc1434a
  40f394:	lds    ebx,FWORD PTR [ecx-0x53]
  40f397:	inc    eax
  40f398:	push   esi
  40f399:	adc    BYTE PTR [ebx+0x1],dl
  40f39c:	loop   0x40f391
  40f39e:	or     BYTE PTR [edx],bl
  40f3a0:	push   edx
  40f3a1:	pushf  
  40f3a2:	and    eax,0xdbf777a8
  40f3a7:	mov    eax,ds:0xf177293a
  40f3ac:	add    al,0xb0
  40f3ae:	out    0xaa,al
  40f3b0:	fs or  al,0x47
  40f3b3:	das    
  40f3b4:	xor    eax,0x753b8baf
  40f3b9:	outs   dx,BYTE PTR ds:[esi]
  40f3ba:	mov    ebp,0x59866ab8
  40f3bf:	jb     0x40f412
  40f3c1:	cs cmc 
  40f3c3:	push   edi
  40f3c4:	(bad)  
  40f3c5:	adc    eax,0xfa6b6648
  40f3ca:	icebp  
  40f3cb:	aaa    
  40f3cc:	adc    ebp,DWORD PTR [ebx]
  40f3ce:	mov    ecx,0x18ad530c
  40f3d3:	ins    BYTE PTR es:[edi],dx
  40f3d4:	popa   
  40f3d5:	mov    ds:0x3d227fd2,eax
  40f3da:	rol    dh,1
  40f3dc:	adc    al,0xcf
  40f3de:	sub    dh,ah
  40f3e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3e1:	jns    0x40f415
  40f3e3:	xor    DWORD PTR [esi+0x1ec547c8],ebx
  40f3e9:	mov    cl,0xb0
  40f3eb:	call   0xbe46:0x37b758ad
  40f3f2:	xor    esi,ecx
  40f3f4:	mov    edi,0x9621fdf
  40f3f9:	or     BYTE PTR [eax+0x10e93ca3],0x7a
  40f400:	mov    eax,ds:0xaa0256ed
  40f405:	pushf  
  40f406:	mov    ecx,gs
  40f408:	add    eax,DWORD PTR cs:[edi+0x781cfddb]
  40f40f:	ror    bl,0x43
  40f412:	xchg   esi,eax
  40f413:	retf   
  40f414:	stos   DWORD PTR es:[edi],eax
  40f415:	nop
  40f416:	adc    al,0x20
  40f418:	mov    dh,0xc5
  40f41a:	(bad)  
  40f41b:	in     al,dx
  40f41c:	cmp    DWORD PTR [ebx+0x6f],ebp
  40f41f:	xchg   ebx,eax
  40f420:	or     al,0xf
  40f422:	sub    BYTE PTR [eax],al
  40f424:	rcl    DWORD PTR [esi],1
  40f426:	mov    ds:0xdd3bb86b,eax
  40f42b:	and    eax,0xadc4ef21
  40f430:	int3   
  40f431:	push   ebx
  40f432:	push   0xc8e0458f
  40f437:	dec    esp
  40f438:	imul   DWORD PTR [edx+0x70]
  40f43b:	inc    ecx
  40f43c:	js     0x40f441
  40f43e:	(bad)  
  40f43f:	mov    eax,0x8ac84e54
  40f444:	xchg   ebx,eax
  40f445:	sub    al,0x6b
  40f447:	push   ss
  40f448:	or     DWORD PTR [eax+eax*2+0x5567a634],edx
  40f44f:	aam    0x2d
  40f451:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f452:	mov    DWORD PTR [edx+0x10b48406],0x7ec3feb4
  40f45c:	leave  
  40f45d:	or     ebp,DWORD PTR [eax+0x54]
  40f460:	(bad)  
  40f461:	fsub   QWORD PTR ds:0xcd70da33
  40f467:	mov    ds:0x7e55e4f2,al
  40f46c:	push   es
  40f46d:	push   ds
  40f46e:	add    BYTE PTR [ecx],al
  40f470:	mov    al,0xbc
  40f472:	add    al,0x9c
  40f474:	inc    esi
  40f475:	inc    ebx
  40f476:	pop    edi
  40f477:	dec    ebx
  40f478:	in     al,dx
  40f479:	add    ah,BYTE PTR [ebp+0x1a]
  40f47c:	cmp    al,0xe
  40f47e:	cmp    al,0xa6
  40f480:	mov    edx,DWORD PTR [edx]
  40f482:	outs   dx,BYTE PTR ds:[esi]
  40f483:	and    BYTE PTR [ecx-0x6a06d969],bh
  40f489:	mov    dh,0x91
  40f48b:	into   
  40f48c:	ins    BYTE PTR es:[edi],dx
  40f48d:	adc    dh,BYTE PTR [ebp-0x882856c]
  40f493:	jge    0x40f4e8
  40f495:	pop    edi
  40f496:	inc    ebp
  40f497:	adc    BYTE PTR [ecx-0x3a],bh
  40f49a:	cmp    eax,0x71ea0288
  40f49f:	test   eax,0x8bf10471
  40f4a4:	mov    ch,0xe7
  40f4a6:	adc    dl,dh
  40f4a8:	xchg   esp,eax
  40f4a9:	lahf   
  40f4aa:	fisttp WORD PTR [edi-0x33]
  40f4ad:	les    ebx,FWORD PTR [eax]
  40f4af:	lahf   
  40f4b0:	jl     0x40f45f
  40f4b2:	lds    ebx,FWORD PTR [esi+0x427a7bbb]
  40f4b8:	and    BYTE PTR [edx-0x49],dl
  40f4bb:	cmp    bl,bh
  40f4bd:	xor    eax,0xfab21614
  40f4c2:	enter  0x2bf5,0x12
  40f4c6:	pushf  
  40f4c7:	add    esp,DWORD PTR [esi-0x3f]
  40f4ca:	popa   
  40f4cb:	adc    eax,0x7c038c58
  40f4d0:	(bad)  
  40f4d1:	add    ebx,ecx
  40f4d3:	std    
  40f4d4:	sbb    al,0xd6
  40f4d6:	ror    al,1
  40f4d8:	mov    dh,0xfd
  40f4da:	mul    BYTE PTR [eax+0x27]
  40f4dd:	jae    0x40f52b
  40f4df:	ins    BYTE PTR es:[edi],dx
  40f4e0:	aas    
  40f4e1:	es mov al,0x54
  40f4e4:	dec    ebp
  40f4e5:	mov    ecx,0x17c1cfd3
  40f4ea:	pop    ebp
  40f4eb:	outs   dx,DWORD PTR ds:[esi]
  40f4ec:	(bad)  
  40f4ed:	cli    
  40f4ee:	mov    dh,0x92
  40f4f0:	out    dx,al
  40f4f1:	jl     0x40f522
  40f4f3:	pop    ds
  40f4f4:	or     eax,0xf020c4c9
  40f4f9:	stc    
  40f4fa:	loope  0x40f4a5
  40f4fc:	mov    bl,0x52
  40f4fe:	int3   
  40f4ff:	fdiv   QWORD PTR [esi]
  40f501:	mov    ah,BYTE PTR [edx]
  40f503:	lock push edi
  40f505:	loop   0x40f55c
  40f507:	jns    0x40f4ae
  40f509:	(bad)  
  40f50a:	adc    eax,0xe8afaeb2
  40f50f:	test   DWORD PTR [ecx+0x68],edi
  40f512:	repz jmp 0xae0a928b
  40f518:	dec    edi
  40f519:	pusha  
  40f51a:	and    eax,DWORD PTR [eax+eiz*2-0x630080c3]
  40f521:	imul   edx,DWORD PTR [ecx-0x4a],0x77115790
  40f528:	mov    eax,ds:0xd861dc29
  40f52d:	cmp    ebp,DWORD PTR [ecx]
  40f52f:	call   FWORD PTR [ecx]
  40f531:	sbb    DWORD PTR [ebx+0x59],esp
  40f534:	cmp    DWORD PTR [esi-0xf],esi
  40f537:	inc    esi
  40f538:	sti    
  40f539:	jb     0x40f4cd
  40f53b:	sbb    BYTE PTR [esi+0x1bb4287e],bl
  40f541:	ja     0x40f584
  40f543:	sub    al,0x6e
  40f545:	pop    ebp
  40f546:	in     al,dx
  40f547:	or     BYTE PTR ds:0xf458f5ec,dl
  40f54d:	adc    DWORD PTR [edi+0x2fa524c9],esp
  40f553:	addr16 daa 
  40f555:	out    dx,al
  40f556:	stc    
  40f557:	dec    esi
  40f558:	mov    esp,0xc20abae6
  40f55d:	nop
  40f55e:	and    al,0x1a
  40f560:	inc    esi
  40f561:	mov    bh,0x30
  40f563:	in     al,0xd7
  40f565:	add    eax,0xedb20d2b
  40f56a:	jmp    0x15249a09
  40f56f:	call   0x3cd0:0xc2b743b1
  40f576:	push   ss
  40f577:	mov    eax,0x65b2c5c6
  40f57c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f57d:	mov    al,ds:0xc66b3c96
  40f582:	lods   al,BYTE PTR ds:[esi]
  40f583:	scas   eax,DWORD PTR es:[edi]
  40f584:	sahf   
  40f585:	pop    ebp
  40f586:	and    BYTE PTR [ebx],0x50
  40f589:	xchg   BYTE PTR [eax],bh
  40f58b:	dec    ebp
  40f58c:	jmp    DWORD PTR [edi+0x6]
  40f58f:	fcom   st(5)
  40f591:	sub    eax,0x208d62a3
  40f596:	mov    al,0x36
  40f598:	cmp    bh,0xeb
  40f59b:	cmp    al,0x2b
  40f59d:	out    dx,eax
  40f59e:	pusha  
  40f59f:	es into 
  40f5a1:	outs   dx,DWORD PTR ds:[esi]
  40f5a2:	mov    eax,DWORD PTR [ebx+0x48d9deaa]
  40f5a8:	mov    ah,0xf
  40f5aa:	int    0xf5
  40f5ac:	jmp    0x40f556
  40f5ae:	pop    ds
  40f5af:	inc    ecx
  40f5b0:	dec    edi
  40f5b1:	fisub  DWORD PTR [ebp+0x9006a0d]
  40f5b7:	es jl  0xaf0aaefc
  40f5be:	sbb    eax,0x71322b1a
  40f5c3:	ss dec ebx
  40f5c5:	jl     0x40f585
  40f5c7:	add    al,0xd5
  40f5c9:	aaa    
  40f5ca:	call   0x36af6be5
  40f5cf:	clc    
  40f5d0:	iret   
  40f5d1:	jnp    0x40f62e
  40f5d3:	clc    
  40f5d4:	(bad)  
  40f5d5:	aas    
  40f5d6:	outs   dx,DWORD PTR ds:[esi]
  40f5d7:	jo     0x40f5a7
  40f5d9:	and    eax,DWORD PTR [ebp-0x4e]
  40f5dc:	retf   0x1efe
  40f5df:	adc    DWORD PTR [edi-0x77],ebx
  40f5e2:	iret   
  40f5e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5e4:	adc    ebp,DWORD PTR [ebp-0x68feae3a]
  40f5ea:	repz mov esp,0xaa56b92d
  40f5f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5f1:	or     esi,DWORD PTR [ecx+0x0]
  40f5f4:	int    0x1d
  40f5f6:	dec    esi
  40f5f7:	and    BYTE PTR [ebx],ch
  40f5f9:	pop    si
  40f5fb:	popf   
  40f5fc:	sub    al,0xde
  40f5fe:	mov    ebp,0xae240438
  40f603:	inc    esp
  40f604:	sbb    WORD PTR [eax+0x6d7cce48],0xffd3
  40f60c:	(bad)  
  40f60d:	or     al,0x40
  40f60f:	out    dx,al
  40f610:	xchg   ecx,eax
  40f611:	hlt    
  40f612:	iret   
  40f613:	(bad)  
  40f615:	add    esi,ebp
  40f617:	push   ebp
  40f618:	jl     0x40f68f
  40f61a:	adc    DWORD PTR [ebp-0x26855534],ebx
  40f620:	mov    eax,0x86dcc018
  40f625:	xor    BYTE PTR [edi+eax*8-0x68f2214a],ah
  40f62c:	add    ecx,DWORD PTR [edi+0x3ade4b1f]
  40f632:	out    0x88,al
  40f634:	fmul   DWORD PTR [ebx]
  40f636:	push   edi
  40f637:	mov    ah,0x8a
  40f639:	xchg   edi,eax
  40f63a:	into   
  40f63b:	jg     0x40f5bf
  40f63d:	es mov edi,0xd08940a9
  40f643:	ins    BYTE PTR es:[edi],dx
  40f644:	stos   DWORD PTR es:[edi],eax
  40f645:	cmp    BYTE PTR [esi-0x623bf900],bh
  40f64b:	mov    ebx,0xf5425d7c
  40f650:	jne    0x40f603
  40f652:	push   0x63
  40f654:	cmp    ebp,DWORD PTR [eax+0x7f]
  40f657:	inc    edx
  40f659:	xchg   ebp,eax
  40f65a:	inc    esp
  40f65b:	and    eax,0x19f9ec3b
  40f660:	and    cl,BYTE PTR [eax+ebp*1-0x6aed555d]
  40f667:	inc    ecx
  40f668:	dec    BYTE PTR [edi]
  40f66a:	or     DWORD PTR ds:0xad4cb5fa,edi
  40f670:	ret    0x130f
  40f673:	les    ebx,FWORD PTR [ecx+0x4e]
  40f676:	dec    edi
  40f677:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f678:	dec    ebp
  40f679:	mov    edx,0x64cb11b7
  40f67e:	mov    ah,0x3a
  40f680:	add    al,bl
  40f682:	xor    eax,0xb528c5be
  40f687:	iret   
  40f688:	add    DWORD PTR [edi-0x46],ebp
  40f68b:	(bad)
  40f68e:	mov    esp,DWORD PTR ds:[ebx+0xa0576aa]
  40f695:	out    0x5c,al
  40f697:	rol    BYTE PTR ds:0x341d4163,0x75
  40f69e:	and    ecx,DWORD PTR [esi+0x72]
  40f6a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f6a2:	aaa    
  40f6a3:	scas   al,BYTE PTR es:[edi]
  40f6a4:	out    0xf2,al
  40f6a6:	stos   DWORD PTR es:[edi],eax
  40f6a7:	dec    edx
  40f6a8:	push   ds
  40f6a9:	popa   
  40f6aa:	sbb    BYTE PTR [ebp+0x4e],0x56
  40f6ae:	push   ds
  40f6af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6b0:	lahf   
  40f6b1:	(bad)  
  40f6b2:	in     al,dx
  40f6b3:	scas   al,BYTE PTR es:[edi]
  40f6b4:	mov    ds:0xdb5bf50a,al
  40f6b9:	dec    eax
  40f6ba:	stos   BYTE PTR es:[edi],al
  40f6bb:	pop    ebp
  40f6bc:	outs   dx,BYTE PTR ds:[esi]
  40f6bd:	dec    DWORD PTR [ecx]
  40f6bf:	xchg   ecx,eax
  40f6c0:	stos   BYTE PTR es:[edi],al
  40f6c1:	shr    ebx,1
  40f6c3:	push   cs
  40f6c4:	sar    DWORD PTR [ecx-0x3e3e3021],cl
  40f6ca:	cmp    cl,bh
  40f6cc:	sbb    al,BYTE PTR [edx+0x7c]
  40f6cf:	aam    0x8d
  40f6d1:	xchg   edi,eax
  40f6d2:	loopne 0x40f6a2
  40f6d4:	scas   eax,DWORD PTR es:[edi]
  40f6d5:	icebp  
  40f6d6:	das    
  40f6d7:	dec    esi
  40f6d8:	leave  
  40f6d9:	mov    al,ds:0x826f012d
  40f6de:	fcom   QWORD PTR [edx+esi*4-0x3e0e0eb8]
  40f6e5:	xchg   DWORD PTR [edi],ecx
  40f6e7:	(bad)  
  40f6e8:	stos   DWORD PTR es:[edi],eax
  40f6e9:	jns    0x40f72c
  40f6eb:	sub    BYTE PTR [ecx+eax*2+0x34],bh
  40f6ef:	sbb    ebp,DWORD PTR [esp+esi*2-0x146de6e5]
  40f6f6:	stc    
  40f6f7:	push   eax
  40f6f8:	cmc    
  40f6f9:	jo     0x40f6fb
  40f6fb:	mov    cl,0x32
  40f6fd:	xchg   ebp,eax
  40f6ff:	aam    0x5c
  40f701:	pop    ecx
  40f702:	and    ebp,DWORD PTR [edx-0x5e]
  40f705:	ret    
  40f706:	sbb    edx,esi
  40f708:	in     al,0xab
  40f70a:	lods   eax,DWORD PTR ds:[esi]
  40f70b:	sbb    al,ah
  40f70d:	mov    ebx,0x921c7a55
  40f712:	inc    ecx
  40f713:	test   BYTE PTR ds:0x5428588c,0x3e
  40f71a:	repz mov esp,0x921ea45b
  40f720:	mov    gs,WORD PTR [ebx+edx*1-0x53e3353b]
  40f727:	xor    dl,BYTE PTR [ebx]
  40f729:	mov    esp,0x54f2afcb
  40f72e:	push   es
  40f72f:	mov    eax,0x50b22ccb
  40f734:	rcr    esp,1
  40f736:	lahf   
  40f737:	inc    edi
  40f738:	or     DWORD PTR [ecx+0x14378b97],eax
  40f73e:	cmp    bl,BYTE PTR [eax+esi*2-0x7a]
  40f742:	mov    esi,0x24b856f2
  40f747:	test   eax,0x4e55beeb
  40f74c:	daa    
  40f74d:	jbe    0x40f762
  40f74f:	rol    BYTE PTR [eax+eiz*4+0x18],0x6d
  40f754:	shl    DWORD PTR [ebp+ebp*1+0x198d40c3],cl
  40f75b:	sub    al,0xc8
  40f75d:	jp     0x40f740
  40f75f:	inc    esp
  40f760:	or     al,0xd
  40f762:	add    bh,BYTE PTR [esi+0x6d63c448]
  40f768:	dec    ecx
  40f769:	rcl    eax,1
  40f76b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f76c:	cmp    ch,BYTE PTR [esi-0x34]
  40f76f:	push   0xffffffbb
  40f771:	fidivr WORD PTR ss:[edx+ebp*8-0x604a15bd]
  40f779:	xchg   edx,eax
  40f77a:	mov    eax,ds:0x29b8baae
  40f77f:	cld    
  40f780:	stos   DWORD PTR es:[edi],eax
  40f781:	je     0x40f7ce
  40f783:	test   ebx,ebx
  40f785:	(bad)  
  40f786:	ret    0xd8ba
  40f789:	shl    BYTE PTR [ecx-0x3122fbe2],0x48
  40f790:	call   0xe6e:0x112a257e
  40f797:	mov    edx,0xb2bb6ee8
  40f79c:	cdq    
  40f79d:	adc    DWORD PTR [ecx+0x6b197c9d],eax
  40f7a3:	loopne 0x40f78b
  40f7a5:	xchg   esp,eax
  40f7a6:	inc    ebx
  40f7a7:	cmc    
  40f7a8:	jle    0xe6257283
  40f7ae:	mov    cl,ch
  40f7b0:	pushf  
  40f7b1:	xchg   ebp,eax
  40f7b2:	mov    edi,ebp
  40f7b4:	mov    bh,ch
  40f7b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7b7:	sub    eax,0xd5054fed
  40f7bc:	jmp    0xfaee23a9
  40f7c1:	nop
  40f7c2:	sbb    DWORD PTR [bx+di-0x29],ebx
  40f7c6:	das    
  40f7c7:	inc    edi
  40f7c8:	scas   al,BYTE PTR es:[edi]
  40f7c9:	and    BYTE PTR [eax+0x13],0x4b
  40f7cd:	jno    0x40f7e3
  40f7cf:	push   cs
  40f7d0:	div    BYTE PTR [esi]
  40f7d2:	rcl    edx,0xc4
  40f7d5:	fst    DWORD PTR [ecx-0x5d0af65]
  40f7db:	inc    ebx
  40f7dc:	cmp    dh,dh
  40f7de:	shl    eax,1
  40f7e0:	sub    eax,0x7098978b
  40f7e5:	jle    0x40f823
  40f7e7:	fcmovb st,st(0)
  40f7e9:	daa    
  40f7ea:	mov    BYTE PTR [ebp+0x576cda90],dh
  40f7f0:	xor    edx,DWORD PTR [ecx]
  40f7f2:	jno    0x40f7b1
  40f7f4:	xchg   ebp,eax
  40f7f5:	adc    DWORD PTR [ecx-0xa],edi
  40f7f8:	fnstenv ds:0x48538136
  40f7fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7ff:	pop    ebp
  40f800:	mov    bh,0x3d
  40f802:	ret    
  40f803:	mov    edi,0x5f32708d
  40f808:	mov    esp,edi
  40f80a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f80b:	adc    DWORD PTR [ebp+0x47c14852],edx
  40f811:	jb     0x40f874
  40f813:	jp     0x40f83e
  40f815:	adc    al,0xc0
  40f817:	push   esp
  40f818:	inc    edi
  40f819:	rcl    DWORD PTR [bp+di],cl
  40f81c:	add    al,0xf
  40f81e:	adc    al,0xeb
  40f820:	int    0xe2
  40f822:	aad    0x54
  40f824:	xchg   ebp,eax
  40f825:	addr16 int3 
  40f827:	ficom  DWORD PTR ds:0xfe3f731b
  40f82d:	mov    ecx,0x5d4df32b
  40f832:	call   DWORD PTR [ecx-0x70b81272]
  40f838:	adc    eax,0xa6eabe20
  40f83d:	cmp    BYTE PTR [ecx+0x56],ah
  40f840:	mov    ebp,0x3d7155ec
  40f845:	add    ebx,ecx
  40f847:	cmp    al,0x3b
  40f849:	popf   
  40f84a:	push   edi
  40f84b:	sbb    BYTE PTR [ebp-0x16],ch
  40f84e:	ror    DWORD PTR [ebx+0x22eae09c],0xba
  40f855:	fidiv  DWORD PTR [edi-0x3528bf59]
  40f85b:	pop    ebx
  40f85c:	(bad)  
  40f85d:	mov    ah,0xf3
  40f85f:	retf   0xa2a5
  40f862:	xor    eax,0x60979cd
  40f867:	cmp    DWORD PTR [edx],edi
  40f869:	out    dx,al
  40f86a:	iret   
  40f86b:	rol    ecx,0x64
  40f86e:	hlt    
  40f86f:	es jae 0x40f850
  40f872:	(bad)  
  40f873:	mov    bh,0x12
  40f875:	jmp    0x40f8b0
  40f877:	push   ecx
  40f878:	mov    ebx,0x6171c82b
  40f87d:	ss mov edx,esi
  40f880:	sub    edx,DWORD PTR [ebx+0x64]
  40f883:	adc    BYTE PTR [ecx],al
  40f885:	sbb    edi,DWORD PTR [esi+edx*8-0xd]
  40f889:	clc    
  40f88a:	arpl   si,dx
  40f88c:	out    dx,eax
  40f88d:	call   0xd82b:0xa5516db4
  40f894:	call   0x9e80f2d4
  40f899:	pop    esi
  40f89a:	push   cs
  40f89b:	popf   
  40f89c:	pop    esp
  40f89d:	sub    ch,BYTE PTR ds:0xf7b0e866
  40f8a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8a4:	ins    BYTE PTR es:[edi],dx
  40f8a5:	and    al,0xbe
  40f8a7:	out    0xc1,eax
  40f8a9:	push   edx
  40f8aa:	repz je 0x40f85f
  40f8ad:	addr16 jno 0x40f862
  40f8b0:	dec    ebx
  40f8b1:	add    BYTE PTR [edi],0xa9
  40f8b4:	rol    BYTE PTR [eax-0x616842f],1
  40f8ba:	(bad)  
  40f8bb:	loopne 0x40f85d
  40f8bd:	ror    BYTE PTR [edi-0x25],cl
  40f8c0:	xchg   ebx,eax
  40f8c1:	daa    
  40f8c2:	jb     0x40f8e7
  40f8c4:	xor    esp,DWORD PTR [esi+0x6e2e2923]
  40f8ca:	xor    DWORD PTR [ebp-0x69],0xffffffe6
  40f8ce:	stos   DWORD PTR es:[edi],eax
  40f8cf:	std    
  40f8d0:	cmp    al,0xd0
  40f8d2:	fidivr DWORD PTR [ecx-0x61118fa7]
  40f8d8:	pop    esp
  40f8d9:	cmp    dl,BYTE PTR [ebx]
  40f8db:	mov    ch,0xdb
  40f8dd:	std    
  40f8de:	bound  edx,QWORD PTR ds:0x1d068f7b
  40f8e4:	cwde   
  40f8e5:	repz and BYTE PTR [ecx+0x2d850fa2],al
  40f8ec:	dec    edi
  40f8ed:	inc    eax
  40f8ee:	popa   
  40f8ef:	and    edx,DWORD PTR [ecx-0x15d9d3bb]
  40f8f5:	xchg   esp,eax
  40f8f6:	push   edi
  40f8f7:	xchg   ecx,eax
  40f8f8:	fcomp  DWORD PTR [ecx]
  40f8fa:	cmc    
  40f8fb:	out    dx,al
  40f8fc:	add    al,BYTE PTR [ebx]
  40f8fe:	pop    ebx
  40f8ff:	mov    bh,0xfc
  40f901:	iret   
  40f902:	inc    edx
  40f903:	sbb    ebp,DWORD PTR [edx-0x68]
  40f906:	inc    ebx
  40f907:	std    
  40f908:	ss sub eax,0xa9ce5004
  40f90e:	mov    bh,BYTE PTR [ecx-0x5d]
  40f911:	mov    ah,0x57
  40f913:	nop
  40f914:	xor    BYTE PTR [eax],dl
  40f916:	or     ah,BYTE PTR [ecx+0x37bcd701]
  40f91c:	addr16 in al,0x77
  40f91f:	mov    esi,0xb9ab946f
  40f924:	dec    edx
  40f925:	retf   0x6039
  40f928:	test   BYTE PTR ds:0x6ea215,bh
  40f92e:	adc    DWORD PTR [edx],esp
  40f930:	and    ebx,DWORD PTR [ecx]
  40f932:	cld    
  40f933:	dec    edi
  40f934:	mov    dh,0x75
  40f936:	popf   
  40f937:	add    BYTE PTR [eax+0x10],dh
  40f93a:	xchg   ebp,eax
  40f93b:	cmc    
  40f93c:	imul   edi,DWORD PTR [eax-0x2a870c60],0x6ac77359
  40f946:	out    0xe1,eax
  40f948:	mov    cl,0x1f
  40f94a:	mov    al,ds:0x5b94af7e
  40f94f:	lods   al,BYTE PTR ds:[esi]
  40f950:	ss sub esi,ebx
  40f953:	cmc    
  40f954:	and    DWORD PTR [ebp+0x28],ebp
  40f957:	mov    ah,0x5b
  40f959:	je     0x40f954
  40f95b:	icebp  
  40f95c:	mov    ah,0x5
  40f95e:	loop   0x40f90e
  40f960:	pop    edx
  40f961:	in     al,dx
  40f962:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f963:	mov    ?,WORD PTR [esi]
  40f965:	jae    0x40f9ae
  40f967:	dec    edi
  40f968:	jbe    0x40f981
  40f96a:	xor    al,0x3a
  40f96c:	dec    esp
  40f96d:	and    cl,bh
  40f96f:	pop    eax
  40f970:	sbb    eax,0x4952e751
  40f975:	cmp    cl,ah
  40f977:	dec    DWORD PTR [edi]
  40f979:	mov    bl,0xec
  40f97b:	call   0xef3b2d8c
  40f980:	xor    eax,0x4ea7fdda
  40f985:	ja     0x40f9ff
  40f987:	(bad)  
  40f989:	std    
  40f98a:	js     0x40f968
  40f98c:	xor    ebp,esp
  40f98e:	aam    0x84
  40f990:	pop    ecx
  40f991:	pop    edi
  40f992:	jmp    0x6e89:0xb3dbb4e3
  40f999:	push   edi
  40f99a:	inc    esp
  40f99b:	repz mov ecx,0x37a0d87c
  40f9a1:	imul   eax,DWORD PTR es:0x96566930,0x11543f9d
  40f9ac:	push   ebx
  40f9ad:	dec    esi
  40f9ae:	test   BYTE PTR [edx],0x24
  40f9b1:	mov    DWORD PTR [ebp+0x6aa1a7ba],ebp
  40f9b7:	stos   DWORD PTR es:[edi],eax
  40f9b8:	sbb    DWORD PTR [ecx],0x79
  40f9bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9bc:	cdq    
  40f9bd:	test   DWORD PTR [ebp-0x67fd0392],edi
  40f9c3:	stc    
  40f9c4:	call   0xdf53b49b
  40f9c9:	mov    cs,ecx
  40f9cb:	xchg   esp,eax
  40f9cc:	in     al,0xe1
  40f9ce:	xchg   edx,eax
  40f9cf:	xchg   ebp,eax
  40f9d0:	xor    BYTE PTR [ebx+0x74a99010],bh
  40f9d6:	sbb    eax,0xcde44b65
  40f9db:	mov    esi,0xa3b83e94
  40f9e0:	lea    esp,[edx+0x19b4ad34]
  40f9e6:	(bad)  
  40f9e7:	daa    
  40f9e8:	loopne 0x40f9a2
  40f9ea:	shl    cl,cl
  40f9ec:	fadd   DWORD PTR [eax]
  40f9ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9ef:	jmpw   0x3e93
  40f9f3:	fistp  QWORD PTR [eax+edx*4]
  40f9f6:	xchg   DWORD PTR [ecx],ebx
  40f9f8:	xchg   esi,eax
  40f9f9:	jne    0x40f9b6
  40f9fb:	or     DWORD PTR [eax-0x5b],esi
  40f9fe:	dec    ebp
  40f9ff:	push   ecx
  40fa00:	add    ecx,DWORD PTR ds:0x92027fd5
  40fa06:	neg    DWORD PTR [eax+0x1b44ed4c]
  40fa0c:	sub    bh,BYTE PTR ds:[edi]
  40fa0f:	push   edx
  40fa10:	mov    esi,DWORD PTR [edx+0x7a962e4f]
  40fa16:	pusha  
  40fa17:	dec    esp
  40fa18:	jb     0x40f9be
  40fa1a:	mov    eax,0x4f495907
  40fa1f:	add    al,0x41
  40fa21:	inc    eax
  40fa22:	faddp  st(6),st
  40fa24:	loopne 0x40fa7b
  40fa26:	and    DWORD PTR [edx+ebx*2-0x47],ebp
  40fa2a:	fistp  WORD PTR [ebx]
  40fa2c:	loop   0x40fa41
  40fa2e:	cmc    
  40fa2f:	pop    es
  40fa30:	sti    
  40fa31:	cmp    BYTE PTR [ebp+0x41ffcc4a],ch
  40fa37:	mov    ebp,0x2f83086f
  40fa3c:	dec    ebp
  40fa3d:	mov    ah,0x75
  40fa3f:	mov    ds:0x37ac0288,eax
  40fa44:	jle    0x40fa8a
  40fa46:	test   al,al
  40fa48:	xor    DWORD PTR [eax],0x46ff65ab
  40fa4e:	sbb    DWORD PTR ds:0x197442bf,esp
  40fa54:	dec    ecx
  40fa55:	or     dl,ah
  40fa57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa58:	lahf   
  40fa59:	dec    edx
  40fa5a:	retf   
  40fa5b:	out    dx,al
  40fa5c:	mov    al,ds:0x281a5da
  40fa61:	mov    bh,0x49
  40fa63:	push   ss
  40fa64:	(bad)  
  40fa65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa67:	ret    0xf200
  40fa6a:	icebp  
  40fa6b:	jb     0x40fadf
  40fa6d:	cmp    dh,cl
  40fa6f:	lahf   
  40fa70:	ja     0x40fa52
  40fa72:	ret    
  40fa73:	add    DWORD PTR [eax-0x2],ebx
  40fa76:	into   
  40fa77:	mov    eax,0xd7556e69
  40fa7c:	xchg   edi,eax
  40fa7d:	out    0xf2,al
  40fa7f:	and    eax,DWORD PTR [ecx-0xd]
  40fa82:	test   eax,0x777020e7
  40fa87:	mov    ebp,DWORD PTR [edi+0x4c]
  40fa8a:	fmul   QWORD PTR [ecx+0x67e47227]
  40fa90:	lods   eax,DWORD PTR ds:[esi]
  40fa91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa92:	aas    
  40fa93:	imul   ebp,DWORD PTR [ebp+0x73ae6b8b],0xffffffbf
  40fa9a:	out    dx,al
  40fa9b:	adc    al,0xf7
  40fa9d:	mov    esi,0x1d97f55a
  40faa2:	scas   al,BYTE PTR es:[edi]
  40faa3:	scas   al,BYTE PTR es:[edi]
  40faa4:	and    esp,ebx
  40faa6:	shl    ecx,1
  40faa8:	into   
  40faa9:	inc    ecx
  40faaa:	mov    dl,0xeb
  40faac:	xchg   edx,eax
  40faad:	mov    bl,0xbb
  40faaf:	mov    WORD PTR [edi],fs
  40fab1:	pushf  
  40fab2:	cli    
  40fab3:	popf   
  40fab4:	in     al,dx
  40fab5:	loop   0x40fab5
  40fab7:	mov    cl,0x63
  40fab9:	ss int3 
  40fabb:	(bad)  
  40fabc:	pop    ds
  40fabd:	lods   al,BYTE PTR ds:[esi]
  40fabe:	xchg   DWORD PTR [ecx],esp
  40fac0:	and    al,0x1c
  40fac2:	jl     0x40faf1
  40fac4:	push   cs
  40fac5:	and    al,0xf5
  40fac7:	shr    BYTE PTR [edi+edx*2],1
  40faca:	fcmovu st,st(3)
  40facc:	xchg   esi,eax
  40facd:	pop    esp
  40face:	dec    esp
  40facf:	mov    bl,0x4
  40fad1:	mul    ah
  40fad3:	cli    
  40fad4:	add    dh,bl
  40fad6:	repnz inc esi
  40fad8:	ret    0x2f5e
  40fadb:	sub    bh,BYTE PTR [esi-0x77]
  40fade:	xchg   edi,edx
  40fae0:	pop    ebx
  40fae1:	lea    esi,[esi-0x2e]
  40fae4:	icebp  
  40fae5:	and    cl,ah
  40fae7:	or     dh,BYTE PTR [ecx-0x3e]
  40faea:	in     al,0x6d
  40faec:	xchg   ebx,eax
  40faed:	or     DWORD PTR [ebx-0x2e],esp
  40faf0:	mov    eax,ds:0xb412914
  40faf5:	cmp    eax,0x3dd45a5b
  40fafa:	mov    DWORD PTR [ebx+0x5c],0x84d80c72
  40fb01:	and    eax,0xd6cf9164
  40fb06:	(bad)  
  40fb07:	cmp    cl,BYTE PTR [edx-0x61bc8dc0]
  40fb0d:	test   BYTE PTR ds:0xc81928c8,al
  40fb13:	jle    0x40fb5d
  40fb15:	xor    eax,DWORD PTR [ebx+0x362f5eef]
  40fb1b:	scas   al,BYTE PTR es:[edi]
  40fb1c:	icebp  
  40fb1d:	ja     0x40fad3
  40fb1f:	enter  0x83cb,0xee
  40fb23:	int3   
  40fb24:	jne    0x40fafd
  40fb26:	mov    ds:0x6f2906ca,eax
  40fb2b:	leave  
  40fb2c:	xor    BYTE PTR [ecx+0x22],0x8e
  40fb30:	cwde   
  40fb31:	sbb    cl,BYTE PTR [ecx-0xd]
  40fb34:	or     al,0xc2
  40fb36:	or     dh,cl
  40fb38:	aas    
  40fb39:	dec    ebp
  40fb3a:	ins    BYTE PTR es:[edi],dx
  40fb3b:	aaa    
  40fb3c:	sub    bl,BYTE PTR [eax-0x50ef014e]
  40fb42:	sti    
  40fb43:	call   0xae6c:0x13bfddfe
  40fb4a:	xchg   edi,eax
  40fb4b:	loope  0x40fba8
  40fb4d:	test   cl,dh
  40fb4f:	outs   dx,WORD PTR ds:[esi]
  40fb51:	inc    esp
  40fb52:	mov    ebx,0x539f6f7a
  40fb57:	or     al,0x24
  40fb59:	pop    ebp
  40fb5a:	retf   
  40fb5b:	ja     0x40fae6
  40fb5d:	pandn  mm4,QWORD PTR [ebp+0x2e]
  40fb61:	dec    ebp
  40fb62:	pop    ebp
  40fb63:	add    bl,al
  40fb65:	mov    esp,0x5100e820
  40fb6a:	and    bh,BYTE PTR [esi+0x32f33808]
  40fb70:	icebp  
  40fb71:	out    dx,eax
  40fb72:	jno    0x40fb14
  40fb74:	daa    
  40fb75:	out    0xe2,eax
  40fb77:	(bad)  [ebx-0x45bd6d30]
  40fb7d:	pushf  
  40fb7e:	dec    edx
  40fb7f:	int    0x27
  40fb81:	xchg   edi,eax
  40fb82:	sbb    eax,0x197fe7ce
  40fb87:	xor    DWORD PTR [ebx+ecx*1],esp
  40fb8a:	fst    DWORD PTR [ebx]
  40fb8c:	(bad)  
  40fb8e:	sti    
  40fb8f:	pop    edi
  40fb90:	mov    ds:0x7e7ad06,eax
  40fb95:	push   es
  40fb96:	ins    BYTE PTR es:[edi],dx
  40fb97:	jbe    0x40fb33
  40fb99:	mov    ebx,es
  40fb9b:	(bad)  
  40fb9c:	or     eax,0xa4704b36
  40fba1:	in     eax,dx
  40fba2:	in     al,dx
  40fba3:	outs   dx,BYTE PTR ds:[esi]
  40fba4:	pop    ss
  40fba5:	mov    edx,DWORD PTR [ebx-0x2b]
  40fba8:	add    eax,0xaf318d3a
  40fbad:	hlt    
  40fbae:	sti    
  40fbaf:	test   DWORD PTR [edx-0x13],eax
  40fbb2:	jo     0x40fc18
  40fbb4:	inc    eax
  40fbb5:	mov    ebp,0xbefab1b8
  40fbba:	call   0xfdc2:0x580b0b23
  40fbc1:	int3   
  40fbc2:	fiadd  WORD PTR [edi]
  40fbc4:	jmp    0xa911682b
  40fbc9:	daa    
  40fbca:	mov    ebx,0xf655a940
  40fbcf:	and    eax,0x6605d060
  40fbd4:	inc    ebp
  40fbd5:	jo     0x40fc22
  40fbd7:	add    al,0xbd
  40fbd9:	xchg   dl,dh
  40fbdb:	adc    al,0xc7
  40fbdd:	jnp    0x40fbf1
  40fbdf:	inc    esi
  40fbe0:	imul   dh
  40fbe2:	and    BYTE PTR [edx+0xac88afb],ch
  40fbe8:	stc    
  40fbe9:	clc    
  40fbea:	pop    esp
  40fbeb:	xor    esi,eax
  40fbed:	or     BYTE PTR [ecx+0x26],dl
  40fbf0:	sahf   
  40fbf1:	xchg   edi,eax
  40fbf2:	xor    al,0xbf
  40fbf4:	cs jne 0x40fc06
  40fbf7:	(bad)  
  40fbf8:	lods   eax,DWORD PTR ds:[esi]
  40fbf9:	mov    WORD PTR [eax+0x75819263],ss
  40fbff:	xor    BYTE PTR [eax-0x4c21ca3],cl
  40fc05:	rcl    DWORD PTR [edi+0x7fb462dc],0xb1
  40fc0c:	stos   BYTE PTR es:[edi],al
  40fc0d:	aas    
  40fc0e:	mov    al,ds:0xc1ff4b36
  40fc13:	jbe    0x40fbbe
  40fc15:	cmp    DWORD PTR [edx-0x53],esp
  40fc18:	adc    DWORD PTR [esi-0x1b0fcb15],ebp
  40fc1e:	sbb    ebx,DWORD PTR [ebp+0x4b]
  40fc21:	mov    cs,WORD PTR [edx+ebx*8]
  40fc24:	es push esi
  40fc26:	in     al,0x68
  40fc28:	cmc    
  40fc29:	cli    
  40fc2a:	mov    WORD PTR fs:[esi+ecx*1],?
  40fc2e:	mov    BYTE PTR [ecx],ah
  40fc30:	sub    BYTE PTR [ecx],0xb1
  40fc33:	mov    bh,0x5f
  40fc35:	sahf   
  40fc36:	sbb    dh,dh
  40fc38:	push   0xffffffd3
  40fc3a:	int    0xd2
  40fc3c:	jmp    0x138a:0x829eb016
  40fc43:	ror    BYTE PTR [edx],0x29
  40fc46:	mov    al,ds:0x6a35eb1d
  40fc4b:	dec    edi
  40fc4c:	jmp    0x78fcac35
  40fc51:	test   eax,0xd1c7f44c
  40fc56:	push   ebp
  40fc57:	adc    eax,0x7e8ca447
  40fc5c:	jp     0x40fc5a
  40fc5e:	(bad)
  40fc61:	mov    al,ds:0x79b27c61
  40fc66:	je     0x40fc15
  40fc68:	jp     0x40fccf
  40fc6a:	jno    0x40fcbe
  40fc6c:	in     al,dx
  40fc6d:	and    al,0x81
  40fc6f:	and    al,0x65
  40fc71:	dec    esp
  40fc72:	lods   eax,DWORD PTR ds:[esi]
  40fc73:	test   DWORD PTR [ecx+0x12],ecx
  40fc76:	(bad)  
  40fc77:	jnp    0x40fc74
  40fc79:	loop   0x40fc34
  40fc7b:	mov    bl,0xf0
  40fc7d:	sub    al,0x21
  40fc7f:	jg     0x40fc03
  40fc81:	mov    al,0x9b
  40fc83:	mov    al,ds:0x4216b087
  40fc88:	mov    es,WORD PTR [ebx-0x55c7f68d]
  40fc8e:	xchg   ebx,eax
  40fc8f:	repz mov ch,BYTE PTR [edi-0x754ed41]
  40fc96:	push   cs
  40fc97:	dec    eax
  40fc98:	jb     0x40fc41
  40fc9a:	adc    esp,DWORD PTR [ecx]
  40fc9c:	retf   0x9ea2
  40fc9f:	jle    0x40fd1d
  40fca1:	jmp    0x17f9b024
  40fca6:	pop    ds
  40fca7:	push   esi
  40fca8:	loope  0x40fcf2
  40fcaa:	std    
  40fcab:	ss push eax
  40fcad:	cmp    bh,BYTE PTR [eax-0xc]
  40fcb0:	pop    ebp
  40fcb1:	iret   
  40fcb2:	add    eax,0xf2610f3c
  40fcb7:	mov    DWORD PTR [edi],ebx
  40fcb9:	mov    bh,bl
  40fcbb:	jmp    0xbab1:0xb611df4a
  40fcc2:	jne    0x40fc46
  40fcc4:	xor    al,dh
  40fcc6:	shr    bl,1
  40fcc8:	je     0x40fce5
  40fcca:	jle    0x40fcb0
  40fccc:	mov    ecx,0xf76987aa
  40fcd1:	add    BYTE PTR [esi],bl
  40fcd3:	pop    ebx
  40fcd4:	(bad)  
  40fcd5:	xor    eax,0x179e5243
  40fcda:	cmovno esp,ebp
  40fcdd:	mov    ss,WORD PTR [ecx+0x704c3d24]
  40fce3:	push   cs
  40fce4:	mov    DWORD PTR [ebx],ecx
  40fce6:	fs push eax
  40fce8:	or     eax,DWORD PTR [edx]
  40fcea:	sti    
  40fceb:	or     ch,BYTE PTR [eax-0x64]
  40fcee:	jecxz  0x40fca0
  40fcf0:	data16 icebp 
  40fcf2:	pop    ds
  40fcf3:	and    eax,0x2be4aa66
  40fcf8:	inc    ebp
  40fcf9:	xor    bl,BYTE PTR [ebx+eax*2+0x804248a]
  40fd00:	add    esi,DWORD PTR [ecx+0x6822553c]
  40fd06:	sbb    al,BYTE PTR [ebx+0x49]
  40fd09:	xchg   esp,eax
  40fd0a:	add    DWORD PTR [ecx],esi
  40fd0c:	inc    esi
  40fd0d:	push   es
  40fd0e:	mov    esi,0xe777fd78
  40fd13:	push   esi
  40fd14:	sbb    BYTE PTR [esi],dh
  40fd16:	lea    ecx,[esi]
  40fd18:	mov    BYTE PTR [ecx+ebx*8+0x35],dh
  40fd1c:	ss inc ebp
  40fd1e:	inc    ebx
  40fd1f:	dec    BYTE PTR [esi+0x35362335]
  40fd25:	dec    esi
  40fd26:	cmp    edx,0x1fc0e205
  40fd2c:	test   BYTE PTR [eax],ah
  40fd2e:	xor    BYTE PTR [ebx+0x1d],cl
  40fd31:	aas    
  40fd32:	fild   DWORD PTR [eax]
  40fd34:	xchg   ebp,eax
  40fd35:	dec    edi
  40fd36:	add    al,BYTE PTR [edi]
  40fd38:	push   ecx
  40fd39:	loop   0x40fd0c
  40fd3b:	pop    ebx
  40fd3c:	sbb    DWORD PTR [eax-0x219c147c],0x968d17d2
  40fd46:	cwde   
  40fd47:	cmp    dh,dl
  40fd49:	inc    eax
  40fd4a:	aaa    
  40fd4b:	data16 aad 0x65
  40fd4e:	and    DWORD PTR [esi],esi
  40fd50:	mov    eax,DWORD PTR [edi+ebx*1+0x18]
  40fd54:	xchg   DWORD PTR [ebx+0x4618b950],ecx
  40fd5a:	popf   
  40fd5b:	cmp    esi,DWORD PTR [edx+0x242b0f38]
  40fd61:	(bad)  
  40fd62:	cmp    BYTE PTR [edx-0x71],ch
  40fd65:	fst    QWORD PTR [ebp+0x69920229]
  40fd6b:	mov    ebx,0xf1343fa1
  40fd70:	repnz cmp edi,DWORD PTR [eax]
  40fd73:	inc    esp
  40fd74:	xchg   edx,eax
  40fd75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd76:	mov    ah,0x4b
  40fd78:	sbb    eax,0xefe86b2
  40fd7d:	push   ebp
  40fd7e:	(bad)  
  40fd7f:	mov    ch,0x6f
  40fd81:	sar    BYTE PTR [ebx-0x3f47b8d5],0x80
  40fd88:	push   0x53
  40fd8a:	push   DWORD PTR [edi]
  40fd8c:	mov    esi,0xf193e47d
  40fd91:	ror    al,0xc0
  40fd94:	pop    esi
  40fd95:	dec    ebp
  40fd96:	fdivr  DWORD PTR [ecx+0x38e69dae]
  40fd9c:	inc    esi
  40fd9d:	mov    esi,0xd15a75af
  40fda2:	cmp    esp,DWORD PTR [edx]
  40fda4:	push   esi
  40fda5:	sbb    BYTE PTR [eax+0x3b0130d5],al
  40fdab:	jnp    0x40fe18
  40fdad:	enter  0x8355,0x30
  40fdb1:	stos   BYTE PTR es:[edi],al
  40fdb2:	xchg   BYTE PTR [edi+eax*4+0x55907311],cl
  40fdb9:	aas    
  40fdba:	jb     0x40fdce
  40fdbc:	data16 js 0x40fe09
  40fdbf:	outs   dx,BYTE PTR ds:[esi]
  40fdc0:	pusha  
  40fdc1:	and    al,0xf4
  40fdc3:	and    dh,BYTE PTR [ecx+0x55]
  40fdc6:	int3   
  40fdc7:	dec    BYTE PTR [esi-0x2b7347e8]
  40fdcd:	pop    esi
  40fdce:	data16 std 
  40fdd0:	and    DWORD PTR [eax],esi
  40fdd2:	in     al,dx
  40fdd3:	ins    BYTE PTR es:[edi],dx
  40fdd4:	xor    BYTE PTR [edi+eiz*4-0x76],ah
  40fdd8:	test   BYTE PTR fs:0xfa30feb4,ch
  40fddf:	or     esi,DWORD PTR ds:0x5ef3043f
  40fde5:	or     ebx,eax
  40fde7:	sub    al,0x24
  40fde9:	and    bh,BYTE PTR [ecx]
  40fdeb:	loop   0x40fe2f
  40fded:	dec    ebp
  40fdee:	and    al,0x95
  40fdf0:	cmp    dh,BYTE PTR [esi-0x1f]
  40fdf3:	jnp    0x40fe4e
  40fdf5:	pop    edi
  40fdf6:	pop    ebx
  40fdf7:	add    dh,BYTE PTR [edx+0x1c]
  40fdfa:	sahf   
  40fdfb:	jo     0x40fdc1
  40fdfd:	xor    al,0xb6
  40fdff:	xor    edx,DWORD PTR [eax+eiz*4]
  40fe02:	mov    eax,ds:0x82a0ac07
  40fe07:	(bad)  
  40fe08:	fcom   DWORD PTR [edi]
  40fe0a:	jmp    0x40fe2c
  40fe0c:	sbb    al,0xf0
  40fe0e:	(bad)  
  40fe0f:	push   esp
  40fe10:	popa   
  40fe11:	xor    al,BYTE PTR [ebp-0x13131758]
  40fe17:	mul    DWORD PTR [eax+0x1939ff2d]
  40fe1d:	int3   
  40fe1e:	pop    edi
  40fe1f:	and    esp,edi
  40fe21:	push   ebp
  40fe22:	cdq    
  40fe23:	(bad)  
  40fe24:	mov    al,ds:0x18c87db8
  40fe29:	push   esi
  40fe2a:	xchg   DWORD PTR [esi-0xa54e4e3],edx
  40fe30:	jmp    0xcd8dd2a7
  40fe35:	test   eax,0x66280dd
  40fe3a:	(bad)  
  40fe3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe3c:	add    BYTE PTR [eax-0x8],bl
  40fe3f:	mov    dh,0x57
  40fe41:	scas   al,BYTE PTR es:[edi]
  40fe42:	cmp    dl,BYTE PTR [ecx]
  40fe44:	fs out 0x6e,al
  40fe47:	inc    edi
  40fe48:	and    BYTE PTR [ecx],ah
  40fe4a:	in     al,dx
  40fe4b:	fiadd  DWORD PTR [edi+0xf6df23f]
  40fe51:	repz mov al,ds:0xf64ad7a
  40fe57:	xor    edx,edx
  40fe59:	cmp    al,0x1d
  40fe5b:	ins    BYTE PTR es:[edi],dx
  40fe5c:	push   edi
  40fe5d:	js     0x40fe81
  40fe5f:	out    dx,al
  40fe60:	pop    edi
  40fe61:	add    ah,BYTE PTR [eax]
  40fe63:	shr    edi,1
  40fe65:	adc    ax,0x49ce
  40fe69:	and    BYTE PTR [ebx-0x5f],bh
  40fe6c:	(bad)  
  40fe6d:	std    
  40fe6e:	test   al,0x5a
  40fe70:	imul   ebp,ebp,0xffffffa7
  40fe73:	push   edx
  40fe74:	mov    bh,0x7f
  40fe76:	mov    esi,0x19005bf0
  40fe7b:	inc    ecx
  40fe7c:	xchg   ebx,eax
  40fe7d:	js     0x40fe64
  40fe7f:	sub    edi,0xc4a4f565
  40fe85:	pop    edi
  40fe86:	mov    dl,0x86
  40fe88:	shr    DWORD PTR [edx+0x63],0xfb
  40fe8c:	dec    eax
  40fe8d:	sti    
  40fe8e:	fdivr  QWORD PTR [edx]
  40fe90:	pop    edi
  40fe91:	add    eax,0xa1bceb59
  40fe96:	sbb    BYTE PTR [eax],0xa2
  40fe99:	and    al,0x8b
  40fe9b:	adc    DWORD PTR [eax-0x68],ebx
  40fe9e:	lods   al,BYTE PTR ds:[esi]
  40fe9f:	shl    DWORD PTR [edx],cl
  40fea1:	stc    
  40fea2:	sar    BYTE PTR [ebx-0x3a],cl
  40fea5:	fmul   QWORD PTR [eax]
  40fea7:	add    ebx,DWORD PTR [ebp-0x30]
  40feaa:	stc    
  40feab:	xchg   ebp,eax
  40feac:	xor    eax,0xdd883ad6
  40feb1:	inc    ebx
  40feb2:	pop    DWORD PTR [esi-0x5034d447]
  40feb8:	push   ss
  40feb9:	(bad)  
  40feba:	arpl   WORD PTR [esi-0x3],di
  40febd:	mov    esi,DWORD PTR [edx+0xc]
  40fec0:	sbb    al,0x8
  40fec2:	cs mov cl,0x15
  40fec5:	in     eax,dx
  40fec6:	mov    esi,0xd276335c
  40fecb:	dec    esi
  40fecc:	in     al,0x88
  40fece:	js     0x40feaa
  40fed0:	je     0x40feee
  40fed2:	pop    ecx
  40fed3:	ret    
  40fed4:	jmp    0x6b1c8a88
  40fed9:	adc    DWORD PTR [eax],0x44
  40fedc:	neg    BYTE PTR [esi-0x4e]
  40fedf:	rcr    BYTE PTR [eax-0x75bf7de5],0x52
  40fee6:	pop    ebp
  40fee7:	jmp    0x950b35d0
  40feec:	push   ds
  40feed:	sbb    BYTE PTR [ecx],bl
  40feef:	(bad)  
  40fef2:	push   cs
  40fef3:	dec    esi
  40fef4:	imul   ebp,DWORD PTR ss:[eax+eiz*4+0x5f8524f0],0x6017297c
  40ff00:	jne    0x40ff4d
  40ff02:	mov    ah,0xf2
  40ff04:	gs dec ecx
  40ff06:	cmp    ecx,DWORD PTR [eax+0x4b630fee]
  40ff0c:	xlat   BYTE PTR ds:[ebx]
  40ff0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff0e:	mov    ds:0x426f84e,eax
  40ff13:	and    al,0xf9
  40ff15:	(bad)  
  40ff16:	and    ch,BYTE PTR [ecx-0x5d025579]
  40ff1c:	mov    ebx,0x9de72e3a
  40ff21:	cmp    eax,0xf02765cb
  40ff26:	and    ch,BYTE PTR [esi+ebx*2-0x6a]
  40ff2a:	retf   0x856e
  40ff2d:	ss leave 
  40ff2f:	push   esp
  40ff30:	leave  
  40ff31:	imul   ebx,DWORD PTR [ebx+0x33],0x77
  40ff35:	loop   0x40feed
  40ff37:	jmp    0x40ff7d
  40ff39:	repz dec ecx
  40ff3b:	jge    0x40ff56
  40ff3d:	ds xchg ebx,eax
  40ff3f:	scas   eax,DWORD PTR es:[edi]
  40ff40:	and    al,BYTE PTR [ebx-0x7f]
  40ff43:	jo     0x40ffae
  40ff45:	ret    0x1524
  40ff48:	mov    bh,0x40
  40ff4a:	shl    DWORD PTR ds:0xc28ae4fc,cl
  40ff50:	repz sbb esp,DWORD PTR [edx]
  40ff53:	stos   DWORD PTR es:[edi],eax
  40ff54:	sub    bl,dh
  40ff56:	mov    dl,0x15
  40ff58:	cld    
  40ff59:	out    0x1b,al
  40ff5b:	icebp  
  40ff5c:	mov    ds:0xb6c920a,al
  40ff61:	cmp    DWORD PTR [ebx+edi*4-0x25],edx
  40ff65:	cmc    
  40ff66:	sub    ebp,DWORD PTR [edi+0x3b]
  40ff69:	test   DWORD PTR [esi-0xb],ecx
  40ff6c:	mov    edx,0x19139a42
  40ff71:	mov    edx,0x8b206bd5
  40ff76:	in     eax,dx
  40ff77:	adc    BYTE PTR [esi-0x7a],bh
  40ff7a:	mov    esi,DWORD PTR [ebp-0x7]
  40ff7d:	test   al,0x12
  40ff7f:	scas   eax,DWORD PTR es:[edi]
  40ff80:	ds (bad) 
  40ff82:	aam    0xc9
  40ff84:	in     al,dx
  40ff85:	push   ecx
  40ff86:	repnz cli 
  40ff88:	cmc    
  40ff89:	and    bl,BYTE PTR [edi-0x23b8678a]
  40ff8f:	or     eax,0xaf55c19f
  40ff94:	jbe    0x40ff53
  40ff96:	popa   
  40ff97:	cld    
  40ff98:	mov    ah,0xa4
  40ff9a:	jbe    0x40ff73
  40ff9c:	pop    esp
  40ff9d:	inc    edx
  40ff9e:	repz xchg ecx,eax
  40ffa0:	and    BYTE PTR [ebp+0x17f2abe2],cl
  40ffa6:	cmp    dl,BYTE PTR [edx]
  40ffa8:	push   0x9f43a7dc
  40ffad:	cs jl  0x410000
  40ffb0:	cmp    eax,0xea83077b
  40ffb5:	(bad)  
  40ffb6:	fcomi  st,st(4)
  40ffb9:	cli    
  40ffba:	lock icebp 
  40ffbc:	push   esp
  40ffbd:	stc    
  40ffbe:	mov    esi,0x42005429
  40ffc3:	cmp    DWORD PTR [edi-0x5ca1d873],ebp
  40ffc9:	jmp    0xd366:0x39a0637b
  40ffd0:	cmp    bh,BYTE PTR [edx+0x273444c1]
  40ffd6:	das    
  40ffd7:	lea    esi,[ebx+eax*1-0x51]
  40ffdb:	in     eax,dx
  40ffdc:	push   0x26
  40ffde:	adc    dh,BYTE PTR [ebp+eax*2+0x7bc10b6d]
  40ffe5:	dec    edx
  40ffe6:	jge    0x40ff88
  40ffe8:	inc    ecx
  40ffe9:	neg    ah
  40ffeb:	xor    BYTE PTR ds:0x93781ba3,0xdf
  40fff2:	mov    ebp,ecx
  40fff4:	push   esp
  40fff5:	xor    dl,0xcf
  40fff8:	dec    ebx
  40fff9:	loopne 0x40ffb7
  40fffb:	xor    dl,ah
  40fffd:	pop    es
  40fffe:	xchg   ebp,eax
  40ffff:	mov    al,0x46
  410001:	dec    esp
  410002:	jbe    0x410064
  410004:	arpl   sp,ax
  410006:	jecxz  0x41007f
  410008:	push   esi
  410009:	add    eax,0x5f0a2bf
  41000e:	pop    edx
  41000f:	aam    0xb7
  410011:	dec    ebp
  410012:	out    0xa9,al
  410014:	pushf  
  410015:	loope  0x40ffc1
  410017:	xchg   ebp,eax
  410018:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410019:	and    DWORD PTR [eax-0x7e],0x3d
  41001d:	xchg   ecx,eax
  41001e:	mov    al,ds:0xc9bcc5c9
  410023:	add    DWORD PTR [edx+0x73442323],esp
  410029:	bound  ebx,QWORD PTR [edx-0x52fca354]
  41002f:	adc    eax,0xde026ea5
  410034:	xor    BYTE PTR [edi-0x15],cl
  410037:	(bad)  
  410038:	jns    0x410000
  41003a:	lahf   
  41003b:	out    0xfa,al
  41003d:	xchg   ecx,eax
  41003e:	cwde   
  41003f:	mov    ds:0x7eb14ea5,eax
  410044:	mov    ebx,0x75cbf5e7
  410049:	and    al,0xb3
  41004b:	lahf   
  41004c:	dec    esp
  41004d:	push   0x230a4593
  410052:	jl     0x410052
  410054:	sbb    al,0x14
  410056:	jne    0x41006b
  410058:	mul    BYTE PTR [esi-0x3b]
  41005b:	push   ss
  41005c:	and    BYTE PTR [edi-0x3984174b],dl
  410062:	ins    BYTE PTR es:[edi],dx
  410063:	add    ah,BYTE PTR [edx]
  410065:	jge    0x410037
  410067:	hlt    
  410068:	test   ecx,esp
  41006a:	pop    ss
  41006b:	mov    ah,cl
  41006d:	dec    ebp
  41006e:	out    dx,eax
  41006f:	sahf   
  410070:	adc    DWORD PTR [ecx+0x5833903c],esi
  410076:	cmp    DWORD PTR ds:0xcf77c5ee,edx
  41007c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41007d:	or     ecx,DWORD PTR [ebp+eax*2+0x11]
  410081:	cmp    edx,esp
  410083:	int3   
  410084:	shr    DWORD PTR [esp+ebp*8-0x5],0xb4
  410089:	mov    BYTE PTR [esi+ebp*4],0x63
  41008d:	jbe    0x410093
  41008f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410090:	jmp    0x410039
  410092:	pop    esp
  410093:	clc    
  410094:	and    eax,0x10b44f89
  410099:	lahf   
  41009a:	fisub  DWORD PTR [ebp-0x17e9eacf]
  4100a0:	jno    0x4100d6
  4100a2:	jno    0x4100ab
  4100a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100a5:	ror    ah,1
  4100a7:	cli    
  4100a8:	loop   0x4100d0
  4100aa:	fimul  WORD PTR [esi-0x41aca0e5]
  4100b0:	out    dx,al
  4100b1:	les    ecx,FWORD PTR [eax+ebp*8+0x204fc83d]
  4100b8:	jnp    0x4100c7
  4100ba:	jl     0x41005c
  4100bc:	or     eax,0x4e6a7286
  4100c1:	pop    esi
  4100c2:	cmp    ebp,DWORD PTR [ecx-0x18]
  4100c5:	ds cmp eax,0x368f19b6
  4100cb:	out    dx,al
  4100cc:	aad    0x81
  4100ce:	jmp    0x5c56:0x2529
  4100d4:	cmp    BYTE PTR [edi-0x3dbc78be],bl
  4100da:	aaa    
  4100db:	xchg   edi,eax
  4100dc:	sub    esi,DWORD PTR [esi-0x31]
  4100df:	icebp  
  4100e0:	jnp    0x4100f2
  4100e2:	into   
  4100e3:	in     eax,0x53
  4100e5:	ins    DWORD PTR es:[edi],dx
  4100e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100e7:	mov    dl,0xe9
  4100e9:	clc    
  4100ea:	lods   eax,DWORD PTR ds:[esi]
  4100eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100ec:	jnp    0x41007b
  4100ee:	iret   
  4100ef:	gs push edx
  4100f1:	mov    ch,0xd0
  4100f3:	jo     0x4100ab
  4100f5:	xor    DWORD PTR [edx-0x6bc67b16],ecx
  4100fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100fc:	jbe    0x41016b
  4100fe:	cmp    DWORD PTR [ecx],ebx
  410100:	and    al,0xba
  410102:	mov    ?,WORD PTR [edx+esi*4+0x3c]
  410106:	ja     0x410114
  410108:	mov    dl,0xaf
  41010a:	out    dx,eax
  41010b:	dec    BYTE PTR [esi-0x16799e3f]
  410111:	or     ebx,ebp
  410113:	cmp    eax,0x44704d1
  410118:	leave  
  410119:	xor    bl,ah
  41011b:	sbb    al,0x18
  41011d:	fwait
  41011e:	shl    al,1
  410120:	ror    BYTE PTR [ecx-0x61],0xb9
  410124:	cmp    esp,eax
  410126:	jo     0x4100f4
  410128:	jecxz  0x410125
  41012a:	ret    0x4bbf
  41012d:	fwait
  41012e:	ds jns 0x41012e
  410131:	inc    ebp
  410132:	inc    edx
  410133:	shl    BYTE PTR [ebx-0x33],cl
  410136:	inc    eax
  410137:	int3   
  410138:	add    dh,BYTE PTR [ebx]
  41013a:	shl    BYTE PTR [ebp-0x1bec1513],1
  410140:	cmp    ch,BYTE PTR [ebp-0x15]
  410143:	push   ebx
  410144:	push   ebx
  410145:	das    
  410146:	ss xchg edi,eax
  410148:	out    dx,eax
  410149:	or     BYTE PTR [edx],bh
  41014b:	fadd   DWORD PTR [eax]
  41014d:	(bad)  
  41014e:	test   BYTE PTR [ecx-0x1417b1b8],0x18
  410155:	mov    eax,ds:0xbd05f7b
  41015a:	dec    ecx
  41015b:	jno    0x4101ba
  41015d:	stos   BYTE PTR es:[edi],al
  41015e:	adc    al,0x4c
  410160:	je     0x410126
  410162:	jge    0x4101b3
  410164:	adc    BYTE PTR [edx],bh
  410166:	push   0xffffff9d
  410168:	outs   dx,BYTE PTR ds:[esi]
  410169:	in     al,0xc3
  41016b:	int    0xb3
  41016d:	sub    dl,bh
  41016f:	jge    0x41015b
  410171:	sti    
  410172:	sub    al,0x79
  410174:	cli    
  410175:	adc    ebx,esp
  410177:	adc    BYTE PTR [edi-0x5b19017],0xb6
  41017e:	pop    edx
  41017f:	mov    eax,ds:0xac29656
  410184:	dec    ebx
  410185:	pushf  
  410186:	push   esi
  410187:	mov    ecx,DWORD PTR [ebx-0x6f7e10c7]
  41018d:	test   BYTE PTR [ecx],0x98
  410190:	push   ss
  410191:	add    esp,ecx
  410193:	repnz mov dh,0xf7
  410196:	imul   ebp,edx,0xffffff8e
  410199:	inc    eax
  41019a:	stc    
  41019b:	or     esi,esp
  41019d:	mov    dl,0x41
  41019f:	jmp    0x7cf60c26
  4101a4:	push   ecx
  4101a5:	outs   dx,BYTE PTR ds:[esi]
  4101a6:	imul   edi,DWORD PTR [eax-0x6e],0x6d628095
  4101ad:	push   edx
  4101ae:	mov    DWORD PTR [esi],esp
  4101b0:	in     eax,0xee
  4101b2:	retf   0xc1c8
  4101b5:	mov    ds,WORD PTR [ebx-0x677be1c4]
  4101bb:	xor    al,0x61
  4101bd:	mov    bl,0x7
  4101bf:	sub    eax,0xd7f9c97a
  4101c4:	aas    
  4101c5:	lahf   
  4101c6:	or     eax,0x75b844df
  4101cb:	call   0x95ba8a16
  4101d0:	xor    DWORD PTR [eax],ecx
  4101d2:	jo     0x410243
  4101d4:	mov    eax,0x50abaaac
  4101d9:	hlt    
  4101da:	inc    edx
  4101db:	test   al,0x7e
  4101dd:	pop    esp
  4101de:	mov    dl,0x69
  4101e0:	pop    es
  4101e1:	je     0x410222
  4101e3:	std    
  4101e4:	sbb    al,0x87
  4101e6:	add    ch,BYTE PTR [ebx+0x87be8aa]
  4101ec:	pop    ss
  4101ed:	pop    es
  4101ee:	arpl   WORD PTR [eax-0x45],sp
  4101f1:	pop    edx
  4101f2:	inc    esp
  4101f3:	cs jnp 0x410226
  4101f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101f7:	push   edi
  4101f8:	xor    al,0xc0
  4101fa:	outs   dx,DWORD PTR ds:[esi]
  4101fb:	add    al,0xb9
  4101fd:	push   ecx
  4101fe:	cli    
  4101ff:	fdiv   st,st(6)
  410201:	stos   DWORD PTR es:[edi],eax
  410202:	mov    ds:0xcf17b96e,al
  410207:	loop   0x4101ae
  410209:	call   0xd7bec170
  41020e:	mov    ecx,0x4d685f31
  410213:	leave  
  410214:	cmp    edi,ecx
  410216:	scas   al,BYTE PTR es:[edi]
  410217:	sub    ebp,DWORD PTR [ebp+0x1ca845a7]
  41021d:	lds    ecx,FWORD PTR [edi+0x6e]
  410220:	ins    BYTE PTR es:[edi],dx
  410221:	adc    al,0x88
  410223:	sub    bh,BYTE PTR ds:0x1abce6f8
  410229:	pushf  
  41022a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41022b:	mov    dh,0xdf
  41022d:	lock adc bl,BYTE PTR [edi+edi*1+0x2b]
  410232:	ret    
  410233:	jecxz  0x4102a4
  410235:	mov    ch,0x40
  410237:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410238:	sbb    BYTE PTR [edx],cl
  41023a:	cmp    dl,BYTE PTR [ebx-0x12]
  41023d:	cmp    DWORD PTR [eax],esp
  41023f:	or     DWORD PTR [ecx+0x4eccc18e],ebp
  410245:	mov    esp,DWORD PTR [ebp+0x53]
  410248:	in     eax,0xba
  41024a:	cmp    esi,DWORD PTR [eax]
  41024c:	mov    edx,DWORD PTR [eax]
  41024e:	adc    eax,0x86f10764
  410253:	mov    bh,0x1a
  410255:	xchg   edi,eax
  410256:	outs   dx,BYTE PTR ds:[esi]
  410257:	shl    DWORD PTR [edi],cl
  410259:	ds inc ecx
  41025b:	xchg   ax,si
  41025e:	cmc    
  41025f:	sbb    ebp,DWORD PTR [esi+ecx*4-0x51de7753]
  410266:	mov    edx,0x97f864dc
  41026b:	jbe    0x4102b5
  41026d:	adc    BYTE PTR [ebp-0x27],cl
  410270:	lahf   
  410271:	inc    esi
  410272:	mov    DWORD PTR [ecx-0x2f09c63c],ebx
  410278:	dec    ecx
  410279:	add    al,dh
  41027b:	mov    esi,0x5ff5a76e
  410280:	sub    BYTE PTR [ebx+eax*4],ah
  410283:	pop    eax
  410284:	and    BYTE PTR [ebx-0x71],al
  410287:	div    ch
  410289:	xrelease xchg BYTE PTR [edx],cl
  41028c:	add    DWORD PTR [edx-0x2a886a07],eax
  410292:	mov    eax,ds:0x32e30c4d
  410297:	xor    eax,0x93bd802c
  41029c:	(bad)  
  41029d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41029e:	cmc    
  41029f:	stos   DWORD PTR es:[edi],eax
  4102a0:	fnstenv [eax-0x70]
  4102a3:	loop   0x410232
  4102a5:	fwait
  4102a6:	jmp    0x642:0x6c9dce5c
  4102ad:	xor    BYTE PTR [ebx],0xc1
  4102b0:	jns    0x4102fb
  4102b2:	xchg   ebx,eax
  4102b3:	jmp    0xa4e15e6f
  4102b8:	lods   al,BYTE PTR ds:[esi]
  4102b9:	xchg   edx,eax
  4102ba:	dec    esp
  4102bb:	sbb    BYTE PTR ds:0x5925e4e2,ah
  4102c1:	sbb    BYTE PTR [ebx+0x6b],bl
  4102c4:	arpl   bx,bx
  4102c6:	cmp    DWORD PTR [ebp-0x39],ebp
  4102c9:	retf   0xb503
  4102cc:	sub    al,0x95
  4102ce:	inc    eax
  4102cf:	loopne 0x41030a
  4102d1:	test   eax,0x4c1d0c1
  4102d6:	daa    
  4102d7:	arpl   WORD PTR [ebx+0x6994540b],di
  4102dd:	popa   
  4102de:	mov    ebx,0xb9e147af
  4102e3:	cli    
  4102e4:	mov    al,ds:0xd0bf89e
  4102e9:	jecxz  0x410358
  4102eb:	push   0xa623c0b4
  4102f0:	pop    ecx
  4102f1:	ins    BYTE PTR es:[edi],dx
  4102f2:	into   
  4102f3:	inc    esi
  4102f4:	or     esp,esi
  4102f6:	jg     0x410339
  4102f8:	and    BYTE PTR [ebp+0x57a464ac],ch
  4102fe:	int    0x95
  410300:	sbb    BYTE PTR ds:0x463bc0e8,bh
  410306:	fucomip st,st(5)
  410308:	jle    0x4102de
  41030a:	push   edi
  41030b:	stc    
  41030c:	cmp    BYTE PTR [edi-0x5943753],dl
  410312:	(bad)  
  410313:	ficom  DWORD PTR [ebx-0x7b]
  410316:	jmp    FWORD PTR [ebx-0x79ac3afd]
  41031c:	scas   al,BYTE PTR es:[edi]
  41031d:	clc    
  41031e:	jno    0x41033f
  410320:	jmp    0xe41b24fb
  410325:	std    
  410326:	std    
  410327:	pop    ecx
  410328:	scas   al,BYTE PTR es:[edi]
  410329:	and    ecx,DWORD PTR [ebx-0x3d31ad87]
  41032f:	ds mov ebx,0x9e504c3b
  410335:	or     eax,0xd84cbd0a
  41033a:	lods   al,BYTE PTR ds:[esi]
  41033b:	popa   
  41033c:	fs sub esi,eax
  41033f:	xor    BYTE PTR [eax-0x32],0x7c
  410343:	xchg   esp,eax
  410344:	sahf   
  410345:	inc    esp
  410346:	cmp    bl,cl
  410348:	push   ecx
  410349:	jecxz  0x4102cb
  41034b:	dec    eax
  41034c:	mov    DWORD PTR [ecx+0x5660f42e],eax
  410352:	ds push edi
  410354:	cmp    eax,0xf988abf7
  410359:	mov    ebp,0xc1d2ee71
  41035e:	push   edx
  41035f:	stos   DWORD PTR es:[edi],eax
  410360:	xor    edi,DWORD PTR [ecx]
  410362:	(bad)  
  410363:	enter  0xde87,0x1d
  410367:	push   ds
  410368:	pop    esp
  410369:	add    BYTE PTR [ebx-0x13],dh
  41036c:	or     cl,bh
  41036e:	lock mov dl,0x4b
  410371:	arpl   WORD PTR [edx],bx
  410373:	mov    ah,0x2a
  410375:	std    
  410376:	jmp    0x4103f2
  410378:	lock and esp,DWORD PTR [esi-0x3ce5606a]
  41037f:	jmp    DWORD PTR [eax+0x556ec0ba]
  410385:	add    al,BYTE PTR [edi]
  410387:	jg     0x41037b
  410389:	mov    ?,WORD PTR [ecx+0x6b6ef10f]
  41038f:	dec    edi
  410390:	adc    eax,0xe95a7104
  410395:	cmp    DWORD PTR [ecx-0x21232bad],edx
  41039b:	jae    0x4103f8
  41039d:	lods   al,BYTE PTR ds:[esi]
  41039e:	xor    eax,0x9bc86979
  4103a3:	dec    ebp
  4103a4:	imul   esi,DWORD PTR [ecx+0x10],0x2b
  4103a8:	mov    ah,0x98
  4103aa:	xor    eax,0x1c3148d0
  4103af:	arpl   WORD PTR [esi-0x10],bp
  4103b2:	in     eax,dx
  4103b3:	push   es
  4103b4:	cmp    BYTE PTR [edi+0x34b34671],bl
  4103ba:	in     al,dx
  4103bb:	sub    DWORD PTR [eax+0x166b3d06],0xe1d7e300
  4103c5:	in     eax,dx
  4103c6:	mov    ah,0x9
  4103c8:	cmp    ecx,DWORD PTR [edx]
  4103ca:	ds jmp 0x9659:0x78207302
  4103d2:	ins    DWORD PTR es:[edi],dx
  4103d3:	mov    al,0x12
  4103d5:	add    edx,esi
  4103d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103d8:	in     al,dx
  4103d9:	loopne 0x410364
  4103db:	add    BYTE PTR [edi],bh
  4103dd:	push   esi
  4103de:	cmp    al,0x7
  4103e0:	mov    cl,0xc8
  4103e2:	pop    ss
  4103e3:	pop    edx
  4103e4:	in     eax,0x4e
  4103e6:	nop
  4103e7:	mov    ds:0xcbab2c0c,eax
  4103ec:	hlt    
  4103ed:	fnstsw WORD PTR [eax]
  4103ef:	mov    ebx,0xe94835f9
  4103f4:	pop    esi
  4103f5:	sbb    ebx,ecx
  4103f7:	xchg   DWORD PTR [edi-0x2e86fd4],edx
  4103fd:	test   eax,0x21b8f419
  410402:	xchg   esp,eax
  410403:	loopne 0x4103f3
  410405:	push   ecx
  410406:	rcl    DWORD PTR [esi+ebx*4+0xd598254],1
  41040d:	ins    DWORD PTR es:[edi],dx
  41040e:	pop    edi
  41040f:	loope  0x4103ad
  410411:	jo     0x4103ed
  410413:	mov    ebx,0x9e26a120
  410418:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410419:	mov    edx,0x62b07327
  41041e:	aam    0x52
  410420:	scas   eax,DWORD PTR es:[edi]
  410421:	sahf   
  410422:	and    eax,0xfdf51c2b
  410427:	sub    DWORD PTR ds:0x4f82ac47,esi
  41042d:	mov    ah,0xe
  41042f:	jmp    0xcf63ad73
  410434:	shl    cl,1
  410436:	into   
  410437:	adc    al,cl
  410439:	xor    al,0xdc
  41043b:	rcl    ch,cl
  41043d:	inc    esi
  41043e:	inc    eax
  41043f:	das    
  410440:	add    al,0xaa
  410442:	xor    DWORD PTR [edx-0x11],ecx
  410445:	in     eax,0x7f
  410447:	jo     0x41042e
  410449:	clc    
  41044a:	adc    bh,BYTE PTR [ebp-0x5484453e]
  410450:	cmp    BYTE PTR [esi+0x64],dl
  410453:	push   cs
  410454:	xchg   esi,eax
  410455:	ficom  WORD PTR [edx]
  410457:	xor    edx,DWORD PTR [ebx-0x1f]
  41045a:	mov    esi,0x67c42009
  41045f:	mov    ch,0xd1
  410461:	idiv   BYTE PTR [ecx]
  410463:	retf   
  410464:	xor    bh,0x62
  410467:	mov    ds:0x60bfd997,eax
  41046c:	dec    ebx
  41046d:	loopne 0x410490
  41046f:	xchg   DWORD PTR [edx+0x67061754],ebp
  410475:	pop    esp
  410476:	fucomp st(4)
  410478:	retf   
  410479:	mov    dl,0xa3
  41047b:	shl    BYTE PTR [ecx-0x112a7d41],1
  410481:	aaa    
  410482:	js     0x410469
  410484:	sub    eax,0xb6613f27
  410489:	loop   0x4104c4
  41048b:	dec    ebp
  41048c:	fstp   st(7)
  41048e:	outs   dx,DWORD PTR ds:[esi]
  41048f:	outs   dx,BYTE PTR ds:[esi]
  410490:	ins    DWORD PTR es:[edi],dx
  410491:	pop    es
  410492:	std    
  410493:	sub    eax,0xcaf39b41
  410498:	mov    bh,0xed
  41049a:	test   BYTE PTR [ecx-0x76],ah
  41049d:	mov    bh,0xda
  41049f:	in     eax,dx
  4104a0:	js     0x4104e7
  4104a2:	loop   0x4104b5
  4104a4:	xchg   ebp,eax
  4104a5:	in     eax,dx
  4104a6:	cmp    esi,DWORD PTR [esi]
  4104a8:	outs   dx,BYTE PTR ds:[esi]
  4104a9:	jmp    0xaa269222
  4104ae:	xchg   ebx,eax
  4104af:	xor    BYTE PTR ds:0x72bff436,ah
  4104b5:	lods   eax,DWORD PTR ds:[esi]
  4104b6:	outs   dx,DWORD PTR ds:[esi]
  4104b7:	pop    esp
  4104b8:	(bad)  
  4104b9:	les    esp,FWORD PTR [ebx-0x5aea53f6]
  4104bf:	in     eax,0xd5
  4104c1:	mov    esi,0xd184fd26
  4104c6:	jmp    0x4104bb
  4104c8:	mov    dl,0x72
  4104ca:	pop    ebp
  4104cb:	mov    eax,0x66edc104
  4104d0:	popf   
  4104d1:	and    al,0xc1
  4104d3:	int    0x88
  4104d5:	cwde   
  4104d6:	imul   ecx,DWORD PTR [esi-0x9bc16e1],0x761c80ba
  4104e0:	adc    ebp,ebx
  4104e2:	jmp    0x92c06cde
  4104e7:	jbe    0x41051e
  4104e9:	int    0x61
  4104eb:	pop    esp
  4104ec:	pop    esi
  4104ed:	(bad)  
  4104ee:	jecxz  0x4104e1
  4104f0:	bound  edx,QWORD PTR [esi]
  4104f2:	cmp    eax,0xca700c9c
  4104f7:	push   edi
  4104f8:	jbe    0x410528
  4104fa:	jle    0x4104f4
  4104fc:	mov    WORD PTR [eax+0x677d768c],?
  410502:	inc    ebx
  410503:	xchg   esp,eax
  410504:	rcl    BYTE PTR ds:0x2a663288,1
  41050a:	and    bh,ch
  41050c:	fwait
  41050d:	cmp    al,0x67
  41050f:	enter  0x70ff,0xa2
  410513:	pop    ss
  410514:	mov    esp,0xd1ca5a21
  410519:	das    
  41051a:	out    dx,al
  41051b:	cld    
  41051c:	push   ds
  41051d:	in     al,0x24
  41051f:	cmp    al,0x5d
  410521:	out    0x8,al
  410523:	jmp    0x410521
  410525:	sbb    DWORD PTR [edi+0x36],0xa1df6e47
  41052c:	push   ds
  41052d:	jmp    0x3ddd:0x305fd29d
  410534:	jae    0x4104c3
  410536:	data16 sbb ah,BYTE PTR [ecx]
  410539:	xchg   edx,eax
  41053a:	inc    edx
  41053b:	push   ds
  41053c:	adc    edi,DWORD PTR [edi]
  41053e:	xchg   edx,eax
  41053f:	push   edi
  410540:	aaa    
  410541:	xchg   edx,eax
  410542:	add    DWORD PTR [edi-0xc564fcd],edx
  410548:	sub    eax,esp
  41054a:	add    eax,0x56ea6a0a
  41054f:	push   edi
  410550:	mov    ds:0x790b635d,eax
  410555:	(bad)  
  410556:	mov    eax,0x4b96f5b7
  41055b:	or     DWORD PTR [esi+0x38bd6c25],ebp
  410561:	gs test bl,al
  410564:	or     BYTE PTR [ebp-0x4eddac93],cl
  41056a:	jmp    0x7b66:0x371a4641
  410571:	pop    eax
  410572:	inc    edi
  410573:	fwait
  410574:	ret    0x7f23
  410577:	inc    esp
  410578:	cli    
  410579:	jmp    0x3b1c:0x1afc63a3
  410580:	lods   eax,DWORD PTR ds:[esi]
  410581:	and    al,0xb6
  410583:	add    edi,DWORD PTR [edi]
  410585:	mov    esi,0x4951986a
  41058a:	shl    BYTE PTR [eax+eax*2+0x283812f1],1
  410591:	ret    
  410592:	adc    BYTE PTR [esi+0x3a7bc749],ah
  410598:	xor    BYTE PTR [esi+0x5eaaf758],bh
  41059e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41059f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105a0:	dec    eax
  4105a1:	test   eax,0x435ec936
  4105a6:	clc    
  4105a7:	pusha  
  4105a8:	or     al,BYTE PTR [ecx+0x66]
  4105ab:	push   0xfffffff9
  4105ad:	call   0xf2c22d48
  4105b2:	ror    DWORD PTR [ecx+edx*1+0x2a665119],0x9f
  4105ba:	loope  0x410639
  4105bc:	and    BYTE PTR [ebx+0x6511a91f],dl
  4105c2:	jb     0x4105ed
  4105c4:	les    ebp,FWORD PTR [ebp-0x23b4d99f]
  4105ca:	aad    0x4e
  4105cc:	sbb    al,0x5d
  4105ce:	xor    dl,BYTE PTR [edi+ecx*4]
  4105d1:	fild   DWORD PTR [esi-0x5190c032]
  4105d7:	leave  
  4105d8:	pushf  
  4105d9:	cli    
  4105da:	cmp    edx,DWORD PTR ds:0xe12f4a0d
  4105e0:	aam    0xf6
  4105e2:	and    bl,BYTE PTR [edi+edx*2+0x447d2107]
  4105e9:	jno    0x41064c
  4105eb:	xchg   BYTE PTR [eax-0x1],dh
  4105ee:	mov    ds,WORD PTR [ebx]
  4105f0:	rol    BYTE PTR [ebp+edi*4-0x380ebdfd],1
  4105f7:	xchg   esp,eax
  4105f8:	dec    eax
  4105f9:	and    al,0xcb
  4105fb:	cwde   
  4105fc:	scas   eax,DWORD PTR es:[edi]
  4105fd:	ja     0x41064e
  4105ff:	adc    esi,DWORD PTR [ebp+0x537dcd91]
  410605:	scas   al,BYTE PTR es:[edi]
  410606:	(bad)  
  410607:	repnz scas eax,DWORD PTR es:[edi]
  410609:	lock pop ebx
  41060b:	cmc    
  41060c:	jns    0x4105ef
  41060e:	mov    al,0x4f
  410610:	div    ebp
  410612:	push   edi
  410613:	sub    DWORD PTR [eax-0x1e62fbf0],ebp
  410619:	fwait
  41061a:	dec    eax
  41061b:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41061d:	(bad)  
  41061e:	ret    0xf7b6
  410621:	add    DWORD PTR [esi+0x4b],0x74
  410625:	pop    ebp
  410626:	mov    ebx,0x37745b18
  41062b:	jp     0x410632
  41062d:	retf   0x4ca6
  410630:	imul   edi,DWORD PTR [ebx],0x5e
  410633:	adc    dl,ah
  410635:	push   edx
  410636:	retf   
  410637:	out    0x73,eax
  410639:	out    dx,eax
  41063a:	rcr    DWORD PTR [edx],1
  41063c:	popf   
  41063d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41063e:	lods   al,BYTE PTR ds:[esi]
  41063f:	and    al,BYTE PTR [ebx-0x2d90596a]
  410645:	mov    ebp,DWORD PTR [edi-0x4b43bb47]
  41064b:	mov    edi,DWORD PTR [ecx-0x5e44e42]
  410651:	or     esp,DWORD PTR [ecx+0x55f2a2b3]
  410657:	xchg   edx,eax
  410658:	popf   
  410659:	call   0xce4b:0x57a68f86
  410660:	gs stos DWORD PTR es:[edi],eax
  410662:	mov    cl,0x8a
  410664:	push   0x3b
  410666:	inc    esi
  410667:	sub    DWORD PTR [edx+0x71],edi
  41066a:	inc    edx
  41066b:	ret    0xa158
  41066e:	call   0x2989:0xde2c1bd
  410675:	jae    0x41065f
  410677:	and    ch,al
  410679:	addr16 xchg esi,eax
  41067b:	xor    cl,BYTE PTR ds:0x7bb6dc09
  410681:	inc    esi
  410682:	jp     0x410608
  410684:	les    ecx,FWORD PTR [eax-0x28]
  410687:	mov    bl,0x8c
  410689:	mov    bl,BYTE PTR [esi+0x700adc4e]
  41068f:	test   eax,0x2878269
  410694:	retf   
  410695:	fwait
  410696:	je     0x41067a
  410698:	push   ss
  410699:	packsswb mm1,QWORD PTR [esi+eax*1-0x2]
  41069e:	out    dx,al
  41069f:	mov    al,0xd7
  4106a1:	pusha  
  4106a2:	cli    
  4106a3:	mov    dh,0xad
  4106a5:	add    edx,DWORD PTR [ebx-0x2e]
  4106a8:	mov    DWORD PTR [ecx+0x7c],eax
  4106ab:	push   ss
  4106ac:	adc    bh,0x5d
  4106af:	mov    edi,0x288b04b1
  4106b4:	in     al,0x5f
  4106b6:	inc    eax
  4106b7:	retf   
  4106b8:	adc    bl,bh
  4106ba:	push   eax
  4106bb:	clc    
  4106bc:	popa   
  4106bd:	add    BYTE PTR [ecx+0x7d],dh
  4106c0:	cmp    al,0xf1
  4106c2:	and    eax,0x6e803922
  4106c7:	fisub  WORD PTR [ebx-0x526e4da6]
  4106cd:	cmp    bh,ch
  4106cf:	cmp    esi,esi
  4106d1:	repnz (bad) 
  4106d3:	jl     0x4106da
  4106d5:	mov    cl,0xc5
  4106d7:	adc    BYTE PTR [edx-0x5a9446be],0x3e
  4106de:	mov    WORD PTR [eax],?
  4106e0:	lods   al,BYTE PTR ds:[esi]
  4106e1:	adc    eax,0x199d4beb
  4106e6:	int    0x3a
  4106e8:	cli    
  4106e9:	clc    
  4106ea:	sbb    ah,al
  4106ec:	ret    0x2509
  4106ef:	cmp    eax,0xa3df1b9b
  4106f4:	fisub  WORD PTR [edx]
  4106f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106f7:	rol    BYTE PTR [ebp-0x64],cl
  4106fa:	fisub  DWORD PTR ds:0xea531033
  410700:	test   DWORD PTR [edi+0x6e],ecx
  410703:	int    0x10
  410705:	add    edx,DWORD PTR [edi+0x6166576b]
  41070b:	lock sahf 
  41070d:	mov    cl,0xb7
  41070f:	mov    BYTE PTR [ebx],ch
  410711:	inc    ebp
  410712:	cmp    esp,esp
  410714:	or     al,0x8e
  410716:	pop    ecx
  410717:	rcl    DWORD PTR [edi+ebp*4+0x43fa1588],1
  41071e:	cmp    eax,0x2d0f7c06
  410723:	popf   
  410724:	fmul   DWORD PTR [ebp+0x18]
  410727:	fwait
  410728:	rep outs dx,BYTE PTR ds:[esi]
  41072a:	ds mov ebx,0x65a03fb1
  410730:	pop    esp
  410731:	ss inc ebx
  410733:	mov    WORD PTR [eax-0x78e6d4f8],cs
  410739:	pop    ebx
  41073a:	and    al,0xeb
  41073c:	or     al,0x50
  41073e:	sbb    bh,cl
  410740:	cli    
  410741:	(bad)  
  410742:	in     al,dx
  410743:	shl    ebp,cl
  410745:	aas    
  410746:	adc    al,0x86
  410748:	and    edi,DWORD PTR ds:[edx+0x1057c412]
  41074f:	add    al,0x8
  410751:	or     BYTE PTR [ebp*4-0x2a3ad97c],dh
  410758:	cmp    ch,ch
  41075a:	popf   
  41075b:	rcr    DWORD PTR [ebp+0x6eeb6a79],0x63
  410762:	fwait
  410763:	pop    ds
  410764:	ficomp DWORD PTR [edx+0x55f5d191]
  41076a:	push   esi
  41076b:	inc    edi
  41076c:	(bad)  
  41076d:	out    dx,al
  41076e:	ins    DWORD PTR es:[edi],dx
  41076f:	lods   eax,DWORD PTR ds:[esi]
  410770:	in     eax,dx
  410771:	mov    ss,WORD PTR [eax+0x27]
  410774:	bound  edi,QWORD PTR [edi+0x71]
  410777:	fcom   QWORD PTR [eax-0x62]
  41077a:	inc    ebp
  41077b:	mov    eax,ds:0x11e4abd
  410780:	push   edi
  410781:	adc    DWORD PTR [eax-0xa],esp
  410784:	mov    esp,0x9a3fd636
  410789:	jno    0x410710
  41078b:	inc    eax
  41078c:	int    0xf5
  41078e:	pop    ebx
  41078f:	jo     0x410747
  410791:	xor    ebp,edi
  410793:	cmp    bl,ch
  410795:	dec    eax
  410796:	dec    ebx
  410797:	add    al,0xa3
  410799:	fisttp QWORD PTR [edx+edi*2]
  41079c:	out    dx,eax
  41079d:	push   cs
  41079e:	clc    
  41079f:	mov    WORD PTR [esi-0x3f],gs
  4107a2:	daa    
  4107a3:	or     eax,DWORD PTR [edi-0x64ca3615]
  4107a9:	add    BYTE PTR [esi],al
  4107ab:	outs   dx,DWORD PTR ds:[esi]
  4107ac:	sbb    al,0x21
  4107ae:	add    BYTE PTR [edi+0x5c72e28d],0x4a
  4107b5:	dec    edx
  4107b6:	lods   eax,DWORD PTR ds:[esi]
  4107b7:	(bad)  
  4107b8:	cld    
  4107b9:	(bad)  
  4107ba:	es nop
  4107bc:	cmp    cl,BYTE PTR [edi+0x51]
  4107bf:	pop    ds
  4107c0:	push   ds
  4107c1:	add    al,0xd9
  4107c3:	mov    ch,0xff
  4107c5:	sbb    bp,WORD PTR ds:0x2f7f0de7
  4107cc:	lds    ebx,FWORD PTR [edi+0x26]
  4107cf:	adc    eax,0x5d
  4107d2:	test   eax,0x52ca091f
  4107d7:	sti    
  4107d8:	mov    ds:0xecd4713b,eax
  4107dd:	outs   dx,DWORD PTR ds:[esi]
  4107de:	fadd   QWORD PTR [edi-0x263b666d]
  4107e4:	or     ch,BYTE PTR [edi+esi*4]
  4107e7:	or     al,0x42
  4107e9:	and    ebp,DWORD PTR [ebx-0x26]
  4107ec:	scas   eax,DWORD PTR es:[edi]
  4107ed:	mov    al,0x81
  4107ef:	jns    0x410782
  4107f1:	jecxz  0x41083e
  4107f3:	imul   cx,WORD PTR [edx+0x68],0x4f47
  4107f9:	xchg   ecx,eax
  4107fa:	jo     0x410784
  4107fc:	inc    ebx
  4107fd:	jbe    0x41086e
  4107ff:	daa    
  410800:	cmp    ch,bl
  410802:	dec    esi
  410803:	repz call 0xacc81f72
  410809:	cmp    edx,esi
  41080b:	mov    bl,0x6c
  41080d:	test   DWORD PTR [edx],0x7159b60a
  410813:	leave  
  410814:	cmp    eax,0x29ad3608
  410819:	jecxz  0x4107be
  41081b:	cmp    eax,0xcc7244a4
  410820:	push   es
  410821:	sub    DWORD PTR [esi],edx
  410823:	cwde   
  410824:	or     BYTE PTR [ebx+0x49],ch
  410827:	sbb    eax,DWORD PTR [ecx+0x490b64ea]
  41082d:	inc    ebp
  41082e:	shl    BYTE PTR [ebp-0x74],cl
  410831:	out    dx,eax
  410832:	jl     0x410838
  410834:	jbe    0x410876
  410836:	dec    ecx
  410837:	xchg   ebx,eax
  410838:	scas   eax,DWORD PTR es:[edi]
  410839:	adc    DWORD PTR [eax],edi
  41083b:	or     al,0x7d
  41083d:	adc    dl,dl
  41083f:	push   esp
  410840:	sbb    ebx,0xffffffa6
  410843:	jge    0x41083a
  410845:	out    dx,eax
  410846:	lods   eax,DWORD PTR ds:[esi]
  410847:	sub    esp,0xffffffbe
  41084a:	sub    DWORD PTR [eax+0x76],edx
  41084d:	popf   
  41084e:	pop    edx
  41084f:	cwde   
  410850:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410851:	jmp    0xfddc:0xc93d7a27
  410858:	and    bh,BYTE PTR [eax-0x53431405]
  41085e:	aad    0x31
  410860:	(bad)  ds:[edi+0xaa67425]
  410867:	sbb    esp,eax
  410869:	adc    eax,0x8f39f6d6
  41086e:	add    DWORD PTR [bp+di-0x13],ebx
  410872:	cmp    eax,ebp
  410874:	leave  
  410875:	inc    edi
  410876:	adc    eax,0xbe4e3d91
  41087b:	add    ebx,DWORD PTR [esi]
  41087d:	(bad)  
  41087e:	(bad)  
  41087f:	bound  edi,QWORD PTR [eax]
  410881:	int    0xb7
  410883:	mov    edx,0x3b2f209f
  410888:	leave  
  410889:	sbb    eax,0x74ac3997
  41088e:	or     DWORD PTR [ebx-0x6538c463],ecx
  410894:	mov    ds:0x99753e41,eax
  410899:	(bad)  
  41089a:	adc    eax,0xc2284c61
  41089f:	cmp    eax,0xdd15f243
  4108a4:	repnz stos BYTE PTR es:[edi],al
  4108a6:	mov    al,0x47
  4108a8:	outs   dx,DWORD PTR ds:[esi]
  4108a9:	jmp    0xa4403982
  4108ae:	jle    0x410897
  4108b0:	arpl   WORD PTR [ebp-0x64],bp
  4108b3:	or     DWORD PTR [ecx],esp
  4108b5:	push   es
  4108b6:	shl    DWORD PTR [ebx-0x69114a30],0x5a
  4108bd:	push   0xf4bd406c
  4108c2:	ins    DWORD PTR es:[edi],dx
  4108c3:	loope  0x410856
  4108c5:	(bad)  [edx]
  4108c7:	mov    cl,al
  4108c9:	push   0x11e972b7
  4108ce:	sub    DWORD PTR es:[esi],ecx
  4108d1:	pop    ebx
  4108d2:	loop   0x41090b
  4108d4:	mov    bh,0xc4
  4108d6:	jne    0x410888
  4108d8:	cli    
  4108d9:	clc    
  4108da:	out    0x31,eax
  4108dc:	cld    
  4108dd:	pop    esp
  4108de:	lock lahf 
  4108e0:	lods   al,BYTE PTR ds:[esi]
  4108e1:	ins    DWORD PTR es:[edi],dx
  4108e2:	inc    esp
  4108e3:	lods   eax,DWORD PTR ds:[esi]
  4108e4:	js     0x410903
  4108e6:	loopne 0x4108ec
  4108e8:	aas    
  4108e9:	les    ecx,FWORD PTR [esi+edi*1-0xaffd5d1]
  4108f0:	mov    edx,0xf88ce428
  4108f5:	sti    
  4108f6:	jp     0x4108e4
  4108f8:	lock sbb esi,esi
  4108fb:	mov    bl,BYTE PTR [ecx+0x78cf0170]
  410901:	mov    ebp,0x9a6831a6
  410906:	push   ebp
  410907:	and    al,0x74
  410909:	or     DWORD PTR ds:0xabbc6675,eax
  41090f:	scas   eax,DWORD PTR es:[edi]
  410910:	retf   0x57a5
  410913:	stos   DWORD PTR es:[edi],eax
  410914:	loope  0x410973
  410916:	mov    ch,0x8c
  410918:	cmp    BYTE PTR [eax+0x150a6afe],cl
  41091e:	cwde   
  41091f:	rcr    BYTE PTR [ecx],0x50
  410922:	xchg   BYTE PTR [edx+0x4d117085],al
  410928:	outs   dx,BYTE PTR ds:[esi]
  410929:	and    BYTE PTR [eax+0x3fbfed66],al
  41092f:	ror    BYTE PTR [ebx+0x50],cl
  410932:	jle    0x4108c7
  410934:	cmp    ebp,DWORD PTR cs:[esp+edx*1+0x1e]
  410939:	inc    esi
  41093a:	adc    cl,BYTE PTR [ebx-0x4f]
  41093d:	mov    edi,DWORD PTR [edi]
  41093f:	jb     0x41096b
  410941:	scas   eax,DWORD PTR es:[edi]
  410942:	je     0x4109bd
  410944:	dec    edi
  410945:	icebp  
  410946:	sahf   
  410947:	push   0x906a29da
  41094c:	out    dx,eax
  41094d:	inc    esp
  41094e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41094f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410950:	jae    0x41094a
  410952:	and    BYTE PTR [edx+0x382ff71d],ah
  410958:	pop    ds
  410959:	inc    ebx
  41095a:	xor    BYTE PTR [ebx+0x2e9ce754],bl
  410960:	push   cs
  410961:	imul   eax,DWORD PTR [ebx-0x28f4dce6],0x19
  410968:	mov    eax,DWORD PTR [edx-0x70759f8e]
  41096e:	into   
  41096f:	sub    DWORD PTR [edi],ecx
  410971:	aaa    
  410972:	pusha  
  410973:	inc    BYTE PTR [ecx+0xa]
  410976:	mov    ds,WORD PTR [edi+eiz*4-0x65]
  41097a:	clc    
  41097b:	mov    ecx,0x8b4741ef
  410980:	sbb    al,0x10
  410982:	dec    ebx
  410983:	or     edx,esp
  410985:	cmp    ecx,edi
  410987:	fild   WORD PTR [ebx-0x24]
  41098a:	sbb    eax,0xce8b6373
  41098f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410990:	cdq    
  410991:	aaa    
  410992:	pop    ebp
  410993:	sbb    dh,BYTE PTR [esi+0x1]
  410996:	mov    ebx,0x577a14db
  41099b:	sbb    al,0xaa
  41099d:	mov    ch,0x72
  41099f:	icebp  
  4109a0:	ds jle 0x410932
  4109a3:	inc    ecx
  4109a4:	rcl    DWORD PTR [esp+ecx*8+0x66a0064a],cl
  4109ab:	or     ebp,edx
  4109ad:	fcomp  st(3)
  4109af:	ret    0xb2ca
  4109b2:	mov    ch,0x19
  4109b4:	fwait
  4109b5:	and    dl,bl
  4109b7:	mov    ebx,esp
  4109b9:	loope  0x4109a6
  4109bb:	out    0x29,al
  4109bd:	jp     0x410980
  4109bf:	call   0x5ca86bd0
  4109c4:	ret    0x59f9
  4109c7:	pushf  
  4109c8:	inc    ebx
  4109c9:	xor    BYTE PTR [eax+0x32],ch
  4109cc:	arpl   WORD PTR [edi+ebx*1],sp
  4109cf:	pop    esp
  4109d0:	shr    DWORD PTR [ebp-0x633430ca],cl
  4109d6:	add    bl,BYTE PTR [eax-0x67]
  4109d9:	inc    edx
  4109da:	dec    edx
  4109db:	dec    ebx
  4109dc:	out    0xfb,eax
  4109de:	fsub   QWORD PTR [eax-0x24]
  4109e1:	mov    esi,0xbc3fadfb
  4109e6:	out    0xec,al
  4109e8:	xor    edi,ebx
  4109ea:	ins    BYTE PTR es:[edi],dx
  4109eb:	hlt    
  4109ec:	add    BYTE PTR [ebx-0x29],dl
  4109ef:	icebp  
  4109f0:	sbb    BYTE PTR [ecx],bh
  4109f2:	imul   edx,DWORD PTR [edx+0x20],0x6440c806
  4109f9:	and    al,0xb
  4109fb:	or     al,0xc6
  4109fd:	stos   BYTE PTR es:[edi],al
  4109fe:	lods   al,BYTE PTR ds:[esi]
  4109ff:	jmp    0x916dbea7
  410a04:	cmp    eax,0x1fc87900
  410a09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a0a:	test   DWORD PTR [esi+edx*1+0x63],0x6718ccb8
  410a12:	mov    esi,0x3834ffdf
  410a17:	mov    ebx,esp
  410a19:	jno    0x410a49
  410a1b:	push   eax
  410a1c:	cld    
  410a1d:	arpl   WORD PTR [edi-0x35d94db7],dx
  410a23:	das    
  410a24:	inc    eax
  410a25:	arpl   dx,bx
  410a27:	pop    ebp
  410a28:	jo     0x4109dd
  410a2a:	mov    dl,0xd3
  410a2c:	int3   
  410a2d:	push   ss
  410a2e:	sub    esi,esi
  410a30:	fwait
  410a31:	xor    eax,0x451c0e62
  410a36:	and    BYTE PTR [eax+0x2ed19ed3],dl
  410a3c:	sub    DWORD PTR [ecx-0x1cf95973],edi
  410a42:	cmp    eax,0x4afff54
  410a47:	sbb    eax,0xefc432b0
  410a4c:	fild   WORD PTR [ebx-0x2c]
  410a4f:	add    ah,BYTE PTR [ecx+0x13]
  410a52:	pop    ecx
  410a53:	lods   al,BYTE PTR ds:[esi]
  410a54:	push   esp
  410a55:	std    
  410a56:	stos   DWORD PTR es:[edi],eax
  410a57:	pop    es
  410a58:	xchg   edx,eax
  410a59:	fldcw  WORD PTR [ebp-0x46]
  410a5c:	neg    DWORD PTR [edx+0xd8f3965]
  410a62:	fadd   DWORD PTR ds:0x18dad7f7
  410a68:	and    ebx,DWORD PTR [edi-0x491cf9e1]
  410a6e:	call   0x8dfb728a
  410a73:	cmp    eax,0x794bad69
  410a78:	xchg   edi,eax
  410a79:	and    edi,DWORD PTR [ecx]
  410a7b:	jns    0x4109fd
  410a7d:	js     0x410ac1
  410a7f:	add    eax,0x731151a6
  410a84:	mov    eax,ds:0xd139347f
  410a89:	and    dh,bh
  410a8b:	jp     0x410a50
  410a8d:	div    BYTE PTR [ecx-0x15]
  410a90:	lds    ecx,FWORD PTR [ecx+0x63]
  410a93:	rcr    DWORD PTR [eax+0x40],0xd1
  410a97:	adc    eax,0x77071c56
  410a9c:	hlt    
  410a9d:	or     bh,0x52
  410aa0:	and    DWORD PTR [ecx],ebp
  410aa2:	sbb    edi,DWORD PTR [esi+0x79]
  410aa5:	mov    esp,0x6c6e3ebe
  410aaa:	and    BYTE PTR [ebx+0x3aa19545],al
  410ab0:	dec    esp
  410ab1:	dec    esp
  410ab2:	sub    dl,bh
  410ab4:	daa    
  410ab5:	jb     0x410aac
  410ab7:	loope  0x410a95
  410ab9:	dec    eax
  410aba:	int3   
  410abb:	loop   0x410aff
  410abd:	push   ds
  410abe:	ficomp WORD PTR [ebx]
  410ac0:	pop    edi
  410ac1:	and    BYTE PTR [ebx-0x43aa3d46],bh
  410ac7:	inc    edi
  410ac8:	mov    dh,0xc2
  410aca:	mov    cs,WORD PTR [ecx]
  410acc:	outs   dx,DWORD PTR ds:[esi]
  410acd:	outs   dx,DWORD PTR ds:[esi]
  410ace:	test   DWORD PTR [edi],0x880023e6
  410ad4:	aam    0x38
  410ad6:	cli    
  410ad7:	dec    edx
  410ad8:	imul   eax,DWORD PTR [edi-0x2f],0xfffffff5
  410adc:	xor    edi,DWORD PTR [edx-0x5b1f4e99]
  410ae2:	out    dx,eax
  410ae3:	dec    ebx
  410ae4:	mov    fs,esi
  410ae6:	xor    BYTE PTR [esi],cl
  410ae8:	sar    DWORD PTR ds:0x82b5b1d7,1
  410aee:	test   bh,al
  410af0:	inc    ebp
  410af1:	mov    esi,0x381370d1
  410af6:	cli    
  410af7:	sub    DWORD PTR [edi],ecx
  410af9:	pop    edi
  410afa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410afb:	shl    DWORD PTR [esi-0x31c80b01],1
  410b01:	mov    eax,ds:0xc8ff61e7
  410b06:	test   DWORD PTR [eax+ebp*8+0x3ff746d5],esp
  410b0d:	sub    BYTE PTR [ecx-0x62],0xf6
  410b11:	jmp    0xd9055af2
  410b16:	loopne 0x410b1f
  410b18:	adc    eax,0xf8364675
  410b1d:	ins    DWORD PTR es:[edi],dx
  410b1e:	add    ebx,DWORD PTR [ecx]
  410b20:	sub    eax,0x13decaec
  410b25:	outs   dx,DWORD PTR ds:[esi]
  410b26:	iret   
  410b27:	cmp    BYTE PTR [ebx+esi*2+0x4879c12c],0x42
  410b2f:	test   eax,0xd682c60c
  410b34:	xchg   ecx,eax
  410b35:	and    al,BYTE PTR [edx-0x80]
  410b38:	xchg   edi,eax
  410b39:	movlps QWORD PTR [ecx],xmm0
  410b3c:	cmp    eax,0xbe3b9429
  410b41:	lock jae 0x410b73
  410b44:	les    eax,FWORD PTR [ebx]
  410b46:	mov    esi,0x42d994de
  410b4b:	retf   0x15f2
  410b4e:	mov    cl,dl
  410b50:	ds add edi,esp
  410b53:	mov    al,0xc
  410b55:	and    BYTE PTR [ecx+0x38e6b575],al
  410b5b:	adc    ebp,eax
  410b5d:	mov    es,esi
  410b5f:	test   DWORD PTR [ecx],0x4116f14d
  410b65:	test   BYTE PTR [ecx],al
  410b67:	mov    bl,0xd4
  410b69:	ins    BYTE PTR es:[edi],dx
  410b6a:	or     al,0x15
  410b6c:	xchg   BYTE PTR [ecx],ch
  410b6e:	add    DWORD PTR [ebx-0xf],eax
  410b71:	jmp    0x410af5
  410b73:	lea    ecx,[edi]
  410b75:	inc    ebx
  410b76:	gs inc ebx
  410b78:	sub    al,0xa7
  410b7a:	cmp    al,0xbf
  410b7c:	fsubr  QWORD PTR [ecx+ebx*4-0x3a721300]
  410b83:	mov    ebx,0xd9e6fc33
  410b88:	xor    eax,0xc45e38fa
  410b8d:	mov    BYTE PTR [ebx-0x3222851e],ah
  410b93:	loopne 0x410b78
  410b95:	jp     0x410bd2
  410b97:	push   cs
  410b98:	lods   al,BYTE PTR ds:[esi]
  410b99:	hlt    
  410b9a:	cmp    al,0xf8
  410b9c:	stc    
  410b9d:	push   ebx
  410b9e:	call   0x9375:0x10714ad1
  410ba5:	pop    es
  410ba6:	mov    al,ds:0x4989d77b
  410bab:	or     cl,BYTE PTR [edx-0x19]
  410bae:	int    0xc8
  410bb0:	pop    eax
  410bb1:	rcr    ch,0xf0
  410bb4:	in     al,0x1
  410bb6:	sahf   
  410bb7:	dec    edi
  410bb8:	aas    
  410bb9:	(bad)  
  410bba:	and    BYTE PTR [ecx+0x5ff58b71],ah
  410bc0:	or     dh,BYTE PTR [ebx-0x17]
  410bc3:	adc    BYTE PTR [edx+0xd],cl
  410bc6:	mov    eax,ds:0xc799a2c4
  410bcb:	mov    ch,0x17
  410bcd:	int3   
  410bce:	int    0xd0
  410bd0:	popf   
  410bd1:	push   ebx
  410bd2:	sub    ebx,ebx
  410bd4:	test   BYTE PTR [ebx+ecx*8+0x626df7f],bl
  410bdb:	sub    DWORD PTR [edx],esp
  410bdd:	std    
  410bde:	test   eax,0x98bdc1ff
  410be3:	xor    cl,BYTE PTR [edx+eiz*8]
  410be6:	hlt    
  410be7:	and    BYTE PTR [edi-0x3fe66b4],dh
  410bed:	mov    al,ds:0x235c063b
  410bf2:	sbb    DWORD PTR [ebx+0x62b3b031],0xae031058
  410bfc:	sub    eax,0x825e2e5f
  410c01:	in     eax,dx
  410c02:	sahf   
  410c03:	loop   0x410c3a
  410c05:	sbb    BYTE PTR [edx+0x1db7c5b7],bh
  410c0b:	pop    ecx
  410c0c:	dec    ecx
  410c0d:	push   ss
  410c0e:	dec    eax
  410c0f:	xor    al,0x94
  410c11:	rcl    DWORD PTR [ebx+0x28],1
  410c14:	and    DWORD PTR [edi+ebp*1],eax
  410c17:	(bad)
  410c1b:	mov    dh,0xdb
  410c1d:	popa   
  410c1e:	mov    bl,0x5c
  410c20:	sbb    ebp,DWORD PTR [edi-0x6e]
  410c23:	mov    ebx,eax
  410c25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c26:	popa   
  410c27:	xor    DWORD PTR [ecx-0x15],esp
  410c2a:	ds or  al,0xe4
  410c2d:	fcomp  st(1)
  410c2f:	xor    eax,0xd3ede763
  410c34:	mov    esp,0xff503da8
  410c39:	nop
  410c3a:	push   ebp
  410c3b:	cmp    eax,DWORD PTR [esi-0x61]
  410c3e:	xor    al,0x2f
  410c40:	sub    dh,BYTE PTR [ebx+edx*8]
  410c43:	outs   dx,DWORD PTR ds:[esi]
  410c44:	ins    BYTE PTR es:[edi],dx
  410c45:	in     eax,dx
  410c46:	stos   DWORD PTR es:[edi],eax
  410c47:	cmp    esi,DWORD PTR [edi-0x3]
  410c4a:	add    cl,BYTE PTR [edi-0x7d]
  410c4d:	std    
  410c4e:	dec    ecx
  410c4f:	inc    esp
  410c50:	sub    DWORD PTR [edi+0x49449f64],eax
  410c56:	div    BYTE PTR [esi+0x166ace9]
  410c5c:	arpl   di,di
  410c5e:	call   0xbad977b9
  410c63:	shl    ebp,1
  410c65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c66:	dec    esp
  410c67:	xor    dl,BYTE PTR [ecx+0x22b17dd5]
  410c6d:	out    0x28,eax
  410c6f:	jge    0x410cbf
  410c71:	pusha  
  410c72:	mov    bl,0x5b
  410c74:	mov    BYTE PTR [esi],dh
  410c76:	mov    edx,ecx
  410c78:	push   edx
  410c79:	shl    DWORD PTR [ebx-0x5d5cfaf3],0x9f
  410c80:	sub    cl,BYTE PTR [ebx]
  410c82:	xor    eax,0x8ec17c0e
  410c87:	sbb    DWORD PTR [esi-0x2f],ebp
  410c8a:	cwde   
  410c8b:	mov    dh,0xbe
  410c8d:	ds imul edi,ecx,0x47
  410c91:	mov    ch,BYTE PTR [esi+0x192f512d]
  410c97:	fs fs retf 0xfaae
  410c9c:	mov    bl,0xc7
  410c9e:	jne    0x410c25
  410ca0:	dec    esi
  410ca1:	pusha  
  410ca2:	icebp  
  410ca3:	mov    bl,0xd
  410ca5:	sahf   
  410ca6:	lds    edi,FWORD PTR [edx+eiz*8]
  410ca9:	pop    edi
  410caa:	push   ss
  410cab:	imul   esp
  410cad:	retf   
  410cae:	cld    
  410caf:	add    ch,BYTE PTR [edi-0x62]
  410cb2:	(bad)  
  410cb3:	jbe    0x410c77
  410cb5:	sbb    eax,0x79f9d43f
  410cba:	cmp    DWORD PTR [esp+ebp*2-0x9],esp
  410cbe:	(bad)  
  410cbf:	aas    
  410cc0:	ret    
  410cc1:	add    eax,0xaf2ddd1b
  410cc6:	mov    DWORD PTR [ecx-0x68],edi
  410cc9:	(bad)  
  410cca:	ja     0x410cec
  410ccc:	and    DWORD PTR fs:[ecx],edx
  410ccf:	mov    edx,0xf2b607bd
  410cd4:	jp     0x410c79
  410cd6:	in     al,0x45
  410cd8:	add    al,BYTE PTR [ecx-0x5723e7ae]
  410cde:	int3   
  410cdf:	xor    eax,0xd7b5c87c
  410ce4:	or     eax,0xc388975b
  410ce9:	(bad)  
  410cea:	fidivr DWORD PTR [edx]
  410cec:	cld    
  410ced:	jg     0x410c96
  410cef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410cf0:	int    0xbe
  410cf2:	push   esi
  410cf3:	push   0x3c
  410cf5:	jp     0x410cfa
  410cf7:	adc    edx,DWORD PTR [edx+0x25]
  410cfa:	mov    esi,0x13e49680
  410cff:	jb     0x410cf7
  410d01:	arpl   WORD PTR [ecx+0x72e8e9b6],si
  410d07:	jecxz  0x410d2a
  410d09:	ins    DWORD PTR es:[edi],dx
  410d0a:	les    edi,FWORD PTR fs:[edi]
  410d0d:	js     0x410c93
  410d0f:	and    bh,BYTE PTR [esp+ecx*2-0x6]
  410d13:	cli    
  410d14:	xchg   ebx,eax
  410d15:	aam    0x8c
  410d17:	xchg   edx,eax
  410d18:	aad    0x36
  410d1a:	je     0x410cbf
  410d1c:	pusha  
  410d1d:	shl    bh,1
  410d1f:	jmp    FWORD PTR [ebp+eiz*1-0x3bd5567e]
  410d26:	leave  
  410d27:	(bad)  
  410d28:	into   
  410d29:	push   0x4794413a
  410d2e:	je     0x410d8e
  410d30:	jnp    0x410d4c
  410d32:	mov    WORD PTR [ecx+0x63],?
  410d35:	add    al,0xd4
  410d37:	imul   esi,DWORD PTR [ebp+0x8],0xffffffda
  410d3b:	nop
  410d3c:	mov    al,ds:0x6bb966e9
  410d41:	cmp    eax,0x41db18e2
  410d46:	pop    edi
  410d47:	jnp    0x410d83
  410d49:	jecxz  0x410cfa
  410d4b:	pop    edi
  410d4c:	js     0x410da5
  410d4e:	loopne 0x410da0
  410d50:	mov    dh,0x63
  410d52:	jns    0x410cf3
  410d54:	dec    esi
  410d55:	dec    eax
  410d56:	lea    ebx,[esi-0x55]
  410d59:	push   ebp
  410d5a:	cmp    cl,bh
  410d5c:	lock mov edx,ss
  410d5f:	call   FWORD PTR gs:[ebx]
  410d62:	fdiv   QWORD PTR [eax+eiz*8-0x8]
  410d66:	sub    eax,0x65517e5f
  410d6b:	sbb    cl,dl
  410d6d:	mov    BYTE PTR [ecx+0x7],dh
  410d70:	popf   
  410d71:	add    dl,BYTE PTR [esi-0xe9640a1]
  410d77:	and    al,0x86
  410d79:	dec    esp
  410d7a:	add    DWORD PTR [edx+ebx*1+0x5f467221],esi
  410d81:	mov    ecx,0x22521547
  410d86:	ins    DWORD PTR es:[edi],dx
  410d87:	jmp    0xd5d1:0xa8f12954
  410d8e:	or     eax,0x272360ae
  410d93:	bound  edx,QWORD PTR [eax+0x7dfa636a]
  410d99:	xor    BYTE PTR [edi+0x28],dl
  410d9c:	pop    ds
  410d9d:	mov    ds:0x59c46ca7,al
  410da2:	sub    BYTE PTR [edx],al
  410da4:	loop   0x410d75
  410da6:	xchg   ebx,eax
  410da7:	(bad)  
  410da8:	hlt    
  410da9:	xchg   edi,eax
  410daa:	loope  0x410dea
  410dac:	fcmovbe st,st(4)
  410dae:	test   ebp,eax
  410db0:	in     eax,dx
  410db1:	adc    bl,BYTE PTR [ecx-0x37]
  410db4:	mov    esi,DWORD PTR [edx+0x62]
  410db7:	add    dl,al
  410db9:	sbb    DWORD PTR [eax+edi*8],esi
  410dbc:	inc    esi
  410dbd:	cld    
  410dbe:	not    DWORD PTR [edx]
  410dc0:	fwait
  410dc1:	pop    edx
  410dc2:	mov    ds,WORD PTR [ecx]
  410dc4:	mov    ?,WORD PTR [eax+edi*2-0x36]
  410dc8:	fisubr WORD PTR es:[ebx+0x5c2d3b3a]
  410dcf:	cmp    al,BYTE PTR [ebx+0x4531c3e5]
  410dd5:	in     eax,dx
  410dd6:	out    dx,eax
  410dd7:	sbb    al,0x4a
  410dd9:	adc    BYTE PTR [ecx+0x25df6153],bh
  410ddf:	or     DWORD PTR [ecx],esi
  410de1:	push   esp
  410de2:	and    eax,0xe9a9da95
  410de7:	and    BYTE PTR [ecx],al
  410de9:	aas    
  410dea:	addr16 jb 0x410df9
  410ded:	xchg   edi,eax
  410dee:	jo     0x410e31
  410df0:	jo     0x410df4
  410df2:	mov    ds:0x6d248029,eax
  410df7:	cmp    dl,ah
  410df9:	stc    
  410dfa:	xor    DWORD PTR [edi+0x41],ebp
  410dfd:	jg     0x410d98
  410dff:	(bad)  [edi+0x5caecc85]
  410e05:	mov    dh,0xbb
  410e07:	mov    edi,0x3a5dd935
  410e0c:	lds    edi,FWORD PTR [edx-0x32]
  410e0f:	or     BYTE PTR [edi],ch
  410e11:	std    
  410e12:	push   ecx
  410e13:	sub    al,0xa3
  410e15:	sub    al,BYTE PTR [eax]
  410e17:	out    dx,eax
  410e18:	int    0x96
  410e1a:	inc    DWORD PTR [eax+ebx*2-0x72ef4081]
  410e21:	lds    ecx,FWORD PTR [ebx]
  410e23:	popf   
  410e24:	xchg   ebx,eax
  410e25:	dec    esp
  410e26:	mov    ds:0x6e115726,eax
  410e2b:	jae    0x410df2
  410e2d:	(bad)  
  410e2e:	loopne 0x410e43
  410e30:	or     DWORD PTR [edi-0x4b],ebx
  410e33:	out    dx,al
  410e34:	push   ds
  410e35:	int    0xce
  410e37:	(bad)  
  410e39:	adc    eax,0x288b148c
  410e3e:	push   0x7d3b0877
  410e43:	retf   0xa57
  410e46:	lock ds test ebx,0x368e2d5e
  410e4e:	pusha  
  410e4f:	add    ch,ah
  410e51:	pop    esi
  410e52:	popa   
  410e53:	sbb    DWORD PTR [esi],esp
  410e55:	jne    0x410dfb
  410e57:	cmp    al,0xa6
  410e59:	add    al,0x8f
  410e5b:	push   esi
  410e5c:	jge    0x410e6a
  410e5e:	or     al,0x81
  410e60:	nop
  410e61:	(bad)  
  410e62:	aas    
  410e63:	cmp    BYTE PTR [ecx+eax*1],al
  410e66:	in     eax,dx
  410e67:	(bad)  fs:[eax-0x3d]
  410e6b:	(bad)  
  410e6c:	mov    eax,0xb656772a
  410e71:	jnp    0x410e9a
  410e73:	cmc    
  410e74:	daa    
  410e75:	in     al,0x99
  410e77:	cwde   
  410e78:	arpl   cx,di
  410e7a:	in     al,0x2a
  410e7c:	shl    ch,0x29
  410e7f:	xchg   edi,eax
  410e80:	leave  
  410e81:	shl    DWORD PTR [edx-0x171dae81],0xf1
  410e88:	pop    ecx
  410e89:	and    DWORD PTR [edx-0x4e1c5ec4],ecx
  410e8f:	lea    esi,[eax-0x44726606]
  410e95:	daa    
  410e96:	rcl    DWORD PTR [ebp+0x32c94226],0xd3
  410e9d:	cld    
  410e9e:	ins    DWORD PTR es:[edi],dx
  410e9f:	sub    BYTE PTR [eax+0x1eeba38],bh
  410ea5:	les    eax,FWORD PTR [edx]
  410ea7:	das    
  410ea8:	std    
  410ea9:	int3   
  410eaa:	add    ebp,DWORD PTR [ebx+0x57]
  410ead:	sbb    ah,BYTE PTR [edi]
  410eaf:	iret   
  410eb0:	xor    eax,0x4239be6e
  410eb5:	xchg   edi,eax
  410eb6:	lahf   
  410eb7:	and    dl,ah
  410eb9:	or     BYTE PTR [edx],cl
  410ebb:	sbb    ah,ch
  410ebd:	cli    
  410ebe:	inc    esp
  410ebf:	test   BYTE PTR [eax+0x680d5dd1],bh
  410ec5:	and    edx,ebx
  410ec7:	cmp    al,0x81
  410ec9:	(bad)  
  410eca:	or     ah,BYTE PTR [esi-0x59]
  410ecd:	mov    gs,WORD PTR [ecx]
  410ecf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ed0:	test   eax,0x8f6cf4e3
  410ed5:	fistp  WORD PTR ds:0x4e48bd74
  410edb:	repz addr16 mov dl,0xdd
  410edf:	jns    0x410ee9
  410ee1:	stos   BYTE PTR es:[edi],al
  410ee2:	aaa    
  410ee3:	or     BYTE PTR [esi-0x5d1e0df],bh
  410ee9:	jbe    0x410f4e
  410eeb:	mov    dh,0xbb
  410eed:	dec    ebp
  410eee:	mov    ch,0x5d
  410ef0:	int3   
  410ef1:	retf   0x4680
  410ef4:	sbb    ah,BYTE PTR [edi]
  410ef6:	mov    eax,0x639963c2
  410efb:	sub    BYTE PTR [esi+0x72],al
  410efe:	jg     0x410ee5
  410f00:	cmp    dh,BYTE PTR [esi+0x3f613052]
  410f06:	and    edx,DWORD PTR [edx]
  410f08:	enter  0x4c2c,0xa6
  410f0c:	cmp    al,0xaa
  410f0e:	loope  0x410ea3
  410f10:	(bad)  
  410f11:	outs   dx,BYTE PTR ds:[esi]
  410f12:	mov    ebx,0xbc6a6ac9
  410f17:	cmp    dh,BYTE PTR ds:0xe0acc965
  410f1d:	je     0x410f99
  410f1f:	out    dx,eax
  410f20:	mov    bh,0xab
  410f22:	push   ds
  410f23:	mov    ebp,0x7017f0ae
  410f28:	dec    esi
  410f29:	xor    bh,BYTE PTR ds:0x86493e9f
  410f2f:	mov    dl,0x94
  410f31:	or     eax,esi
  410f33:	adc    dl,bl
  410f35:	int    0x91
  410f37:	or     eax,0x21bd66c9
  410f3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f3d:	retf   
  410f3e:	jg     0x410fa0
  410f40:	out    dx,eax
  410f41:	jmp    0xbf2881be
  410f46:	adc    DWORD PTR [esi],esp
  410f48:	icebp  
  410f49:	xchg   bl,ch
  410f4b:	idiv   BYTE PTR [ebx+0x45feba60]
  410f51:	push   ebp
  410f52:	lahf   
  410f53:	out    0xa,eax
  410f55:	neg    eax
  410f57:	jge    0x410f16
  410f59:	es sub eax,0x15bbd72e
  410f5f:	shl    BYTE PTR [ebx+0x576517e0],0x33
  410f66:	dec    esp
  410f67:	or     al,0x8
  410f69:	cwde   
  410f6a:	mov    esi,0xe81766ee
  410f6f:	and    al,0xc5
  410f71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f72:	push   edi
  410f73:	push   0x7501f271
  410f78:	test   DWORD PTR [edx+0x73240ef5],0x86461fdd
  410f82:	pop    eax
  410f83:	ret    
  410f84:	inc    ebx
  410f85:	mov    fs,WORD PTR [ebx-0x46]
  410f88:	push   ds
  410f89:	jno    0x410fbf
  410f8b:	and    edi,DWORD PTR [esi-0xd]
  410f8e:	mov    ds:0xf04087b1,eax
  410f93:	jnp    0x410f74
  410f95:	push   ebp
  410f96:	lea    ecx,[esi+0x32]
  410f99:	inc    edi
  410f9a:	pop    edi
  410f9b:	fnsave [edx+eiz*1+0x2ae5a114]
  410fa2:	mov    DWORD PTR [esi-0x1e6d5c75],ebp
  410fa8:	or     DWORD PTR [ebx+eiz*1-0xc1c6452],edx
  410faf:	repnz mul DWORD PTR [ecx+0x6d5cc65b]
  410fb6:	jbe    0x410fe4
  410fb8:	sub    DWORD PTR [edx],ebx
  410fba:	sub    eax,0xf59fbb11
  410fbf:	outs   dx,BYTE PTR ds:[esi]
  410fc0:	lods   eax,DWORD PTR ds:[esi]
  410fc1:	sub    ebx,DWORD PTR [eax]
  410fc3:	in     al,dx
  410fc4:	push   edx
  410fc5:	mul    BYTE PTR [esi+0x7a]
  410fc8:	enter  0x4c4,0xae
  410fcc:	mov    dl,BYTE PTR [ebx+ebx*1+0x75]
  410fd0:	add    bh,dl
  410fd2:	mov    WORD PTR [esi-0x46c29cc],?
  410fd8:	out    0xc5,eax
  410fda:	loopne 0x41103e
  410fdc:	retf   
  410fdd:	jmp    DWORD PTR [ebx+0x38]
  410fe0:	in     al,0xf3
  410fe2:	retf   
  410fe3:	dec    ebp
  410fe4:	mov    eax,0x2e42674
  410fe9:	xchg   edx,eax
  410fea:	retf   
  410feb:	cmp    BYTE PTR [eax-0x6dabdf3b],dh
  410ff1:	lahf   
  410ff2:	mov    ah,0x37
  410ff4:	repz jmp DWORD PTR [esp+edi*1-0x4d]
  410ff9:	loop   0x410fe7
  410ffb:	fistp  QWORD PTR [edx]
  410ffd:	js     0x411071
  410fff:	mov    ah,0x3b
  411001:	inc    edx
  411002:	jne    0x411002
  411004:	pop    edx
  411005:	(bad)  
  411006:	lods   al,BYTE PTR ds:[esi]
  411007:	cs hlt 
  411009:	xchg   esi,eax
  41100a:	cs pop ecx
  41100c:	push   edx
  41100e:	mov    dl,0x58
  411010:	xchg   ebp,eax
  411011:	mov    ecx,0x1da8b8fa
  411016:	addr16 inc esi
  411018:	pop    edi
  411019:	jae    0x410fc5
  41101b:	sbb    BYTE PTR [edi+0x7e],dh
  41101e:	sub    BYTE PTR [edx+0x9],ah
  411021:	sub    edx,DWORD PTR [edi]
  411023:	sbb    ebp,DWORD PTR [ebx+0x1c]
  411026:	jo     0x411090
  411028:	(bad)  
  411029:	mov    cl,0x35
  41102b:	je     0x411064
  41102d:	mov    bl,0xab
  41102f:	and    edx,ebp
  411031:	add    al,BYTE PTR [edi+0x19]
  411034:	add    eax,0x9b65d4f
  411039:	jle    0x411007
  41103b:	rcr    BYTE PTR [edi],cl
  41103d:	adc    dh,BYTE PTR [eax+0x13]
  411040:	xlat   BYTE PTR ds:[ebx]
  411041:	(bad)  
  411042:	mov    ecx,0x3155f61d
  411047:	push   0xfc34cb53
  41104c:	stos   BYTE PTR es:[edi],al
  41104d:	inc    esi
  41104e:	sti    
  41104f:	mov    dh,0x30
  411051:	or     eax,0xce2a95a
  411056:	fwait
  411057:	(bad)  
  411058:	fmul   DWORD PTR [ecx]
  41105a:	hlt    
  41105b:	fs stos DWORD PTR es:[edi],eax
  41105d:	inc    ebp
  41105e:	push   es
  41105f:	out    dx,al
  411060:	push   edx
  411061:	cmp    edx,DWORD PTR [ebp-0x73]
  411064:	das    
  411065:	loope  0x4110bf
  411067:	ss mov ebx,ecx
  41106a:	cmp    al,0x20
  41106c:	repnz fisttp DWORD PTR [edi-0x1f5d3a32]
  411073:	adc    DWORD PTR [ebx+0x700e8376],edi
  411079:	xor    al,0xcb
  41107b:	push   edi
  41107c:	sub    DWORD PTR [ebx],edi
  41107e:	xchg   edx,eax
  41107f:	ficomp DWORD PTR [ebp+0x7dbf26c0]
  411085:	or     esi,DWORD PTR [eax+ebp*8-0x72]
  411089:	mov    ebx,0xaf080a6d
  41108e:	ins    DWORD PTR es:[edi],dx
  41108f:	dec    ebp
  411090:	aaa    
  411091:	retf   
  411092:	mov    ah,0xf1
  411094:	adc    eax,0x433764b8
  411099:	xchg   edi,eax
  41109a:	cmp    bh,BYTE PTR [esi*4-0x42a4bf0f]
  4110a1:	inc    edi
  4110a2:	xchg   DWORD PTR [esi+0x60653ac3],edx
  4110a8:	push   es
  4110a9:	rol    ecx,1
  4110ab:	cmp    edi,DWORD PTR [edx+esi*4+0x51c139c8]
  4110b2:	cmp    edi,DWORD PTR [ebx-0x4a]
  4110b5:	pusha  
  4110b6:	push   ss
  4110b7:	sbb    ebx,DWORD PTR [ebp-0x10ed09aa]
  4110bd:	mov    ecx,eax
  4110bf:	inc    esp
  4110c0:	rol    DWORD PTR [ecx],1
  4110c2:	add    BYTE PTR [edi*8-0x395d863e],dh
  4110c9:	pushf  
  4110ca:	into   
  4110cb:	adc    BYTE PTR [eax-0x749e8003],al
  4110d1:	sub    dh,BYTE PTR [edx+0x41]
  4110d4:	jo     0x41108a
  4110d6:	pop    es
  4110d7:	js     0x411155
  4110d9:	push   cs
  4110da:	repz or ebp,DWORD PTR ds:[ecx]
  4110de:	push   edi
  4110df:	ins    DWORD PTR es:[edi],dx
  4110e0:	in     al,0xf8
  4110e2:	pusha  
  4110e3:	sub    cl,ah
  4110e5:	mov    al,0x95
  4110e7:	mov    ebx,0xc4bb7ebf
  4110ec:	sbb    ah,dl
  4110ee:	ror    DWORD PTR [ecx-0x1a],0x5
  4110f2:	sbb    al,ch
  4110f4:	xchg   edx,eax
  4110f5:	pop    esi
  4110f6:	fsubr  DWORD PTR [edx+esi*1-0x494dfeb6]
  4110fd:	les    eax,FWORD PTR [esi+0x1b]
  411100:	mov    bh,0x2a
  411102:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411103:	retf   0xf92d
  411106:	out    dx,eax
  411107:	lahf   
  411108:	sbb    eax,edx
  41110a:	mov    ds:0xcb06f2c2,eax
  41110f:	sub    al,0x97
  411111:	dec    esp
  411112:	jp     0x4110b0
  411114:	xor    al,0x65
  411116:	inc    esp
  411117:	fisubr WORD PTR ds:0x26bc3e44
  41111d:	imul   ecx,ebp,0x2ab3e6b9
  411123:	adc    al,0xbe
  411125:	inc    esp
  411126:	add    ecx,DWORD PTR [esi-0x57]
  411129:	(bad)  [eax+ecx*1+0x1]
  41112d:	out    dx,al
  41112e:	aas    
  41112f:	push   esi
  411130:	pop    ss
  411131:	inc    ecx
  411132:	cmp    cl,ch
  411134:	mov    DWORD PTR [ebx-0xbf21efc],ebp
  41113a:	ja     0x411165
  41113c:	retf   
  41113d:	fwait
  41113e:	dec    ebp
  41113f:	push   ecx
  411140:	mov    ecx,esp
  411142:	adc    edx,DWORD PTR [edi-0x22bf4528]
  411148:	xchg   BYTE PTR [edi-0x58],ch
  41114b:	pop    eax
  41114c:	xchg   esi,eax
  41114d:	mov    cl,dl
  41114f:	adc    eax,0x6e7bc72
  411154:	jns    0x4111a8
  411156:	push   ss
  411157:	aas    
  411158:	outs   dx,BYTE PTR ds:[esi]
  411159:	cmp    DWORD PTR [esi+0x29a0cfb8],edi
  41115f:	mov    ebx,0x372de6ba
  411164:	mov    eax,ds:0x6233526c
  411169:	or     BYTE PTR [ebp-0x76f25ce2],ah
  41116f:	addr16 pop esi
  411171:	xchg   ecx,eax
  411172:	ret    
  411173:	rcr    BYTE PTR [esp+ecx*2],0xff
  411177:	dec    esp
  411178:	pop    ecx
  411179:	nop
  41117a:	mov    dh,0x2b
  41117c:	xchg   ebp,eax
  41117d:	push   ecx
  41117e:	stos   BYTE PTR es:[edi],al
  41117f:	jmp    0x4f96:0x302bf112
  411186:	push   ds
  411187:	pushf  
  411188:	xor    al,0xa5
  41118a:	in     eax,0x70
  41118c:	jns    0x41116a
  41118e:	fwait
  41118f:	cmp    bh,BYTE PTR [esi]
  411191:	and    esp,DWORD PTR [ecx-0x7]
  411194:	mov    ebx,0xf6720ac8
  411199:	cmp    al,0x5
  41119b:	out    0x15,al
  41119d:	jmp    0x4111d2
  41119f:	pop    edx
  4111a0:	add    eax,0x7c343380
  4111a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111a6:	dec    ebp
  4111a7:	stos   DWORD PTR es:[edi],eax
  4111a8:	pop    ebx
  4111a9:	push   es
  4111aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111ab:	xchg   BYTE PTR [esi],dh
  4111ad:	test   BYTE PTR [ecx+edx*8+0x67aa6bf1],ah
  4111b4:	test   esp,edx
  4111b6:	jmp    0x38d8:0x6307797d
  4111bd:	fs xchg esp,eax
  4111bf:	sbb    eax,0x8693449e
  4111c4:	fucomp st(6)
  4111c6:	push   0xffffffcf
  4111c8:	sub    DWORD PTR [ebp-0x14],eax
  4111cb:	pop    edi
  4111cc:	mov    ch,0xa4
  4111ce:	or     DWORD PTR [eax],ecx
  4111d0:	jbe    0x41123c
  4111d2:	dec    edx
  4111d3:	mov    DWORD PTR [ecx-0x465dcf31],edx
  4111d9:	cmp    cl,0xfd
  4111dc:	jb     0x411187
  4111de:	or     al,0x8c
  4111e0:	into   
  4111e1:	jae    0x4111f3
  4111e3:	jne    0x411213
  4111e5:	push   dx
  4111e7:	or     eax,0x1dd1a29a
  4111ec:	cli    
  4111ed:	cmp    DWORD PTR [edx],0x46d43680
  4111f3:	in     al,0x32
  4111f5:	cmp    eax,0x1eafea53
  4111fa:	or     ah,BYTE PTR [esi+0x6fdef994]
  411200:	mov    dl,0xe8
  411202:	rcl    BYTE PTR [ecx-0x5c],1
  411205:	inc    ebp
  411206:	out    dx,eax
  411207:	push   0xd1068b40
  41120c:	call   0x888083f4
  411211:	or     esi,DWORD PTR ds:0x7cc75af9
  411217:	pop    ecx
  411218:	(bad)  
  411219:	sbb    bl,BYTE PTR [esi-0xf]
  41121c:	push   eax
  41121d:	lods   al,BYTE PTR ds:[esi]
  41121e:	fmul   DWORD PTR [esi-0x49]
  411221:	push   ecx
  411222:	outs   dx,DWORD PTR ds:[esi]
  411223:	inc    esi
  411224:	sub    BYTE PTR [ebp-0xf],cl
  411227:	inc    edx
  411228:	test   eax,0xcf8a66a4
  41122d:	inc    eax
  41122e:	inc    esp
  41122f:	pusha  
  411230:	cmp    bl,BYTE PTR [esi+0x3e2cb02e]
  411236:	mov    eax,ds:0x978e7e8e
  41123b:	adc    al,0x21
  41123d:	cmp    dl,dl
  41123f:	lods   eax,DWORD PTR ds:[esi]
  411240:	jecxz  0x411225
  411242:	out    0x35,al
  411244:	out    dx,al
  411245:	jo     0x411258
  411247:	into   
  411248:	lock add eax,0xf4b0baa7
  41124e:	cmp    bl,bl
  411250:	mov    al,0xc7
  411252:	ror    ecx,cl
  411254:	retf   
  411255:	lea    ebx,[edi]
  411257:	stos   BYTE PTR es:[edi],al
  411258:	push   ebx
  411259:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41125a:	div    ebx
  41125c:	iret   
  41125d:	sti    
  41125e:	dec    ebx
  41125f:	js     0x41128f
  411261:	pause  
  411263:	xchg   DWORD PTR cs:[ecx-0xe155833],ecx
  41126a:	sub    edx,DWORD PTR [ebp+0x26]
  41126d:	sahf   
  41126e:	adc    edi,DWORD PTR [edx+0x13bb4290]
  411274:	mov    edi,DWORD PTR [edi]
  411276:	or     al,0x32
  411278:	push   cs
  411279:	pop    ss
  41127a:	ds mov eax,0x3b1124f0
  411280:	outs   dx,DWORD PTR ds:[esi]
  411281:	rcr    BYTE PTR [edi],1
  411283:	mov    ds:0x2f5dc122,al
  411288:	cmp    eax,0x79100ced
  41128d:	dec    ecx
  41128e:	aam    0x94
  411290:	sahf   
  411291:	xchg   DWORD PTR [ebx+0x62],esp
  411294:	push   cs
  411295:	pop    ebx
  411296:	mov    esp,0x1c9e7d3e
  41129b:	jnp    0x411318
  41129d:	push   esi
  41129e:	scas   eax,DWORD PTR es:[edi]
  41129f:	add    esp,esp
  4112a1:	test   BYTE PTR [edx-0x35],al
  4112a4:	jo     0x4112a4
  4112a6:	mov    bh,0xb6
  4112a8:	mov    bl,BYTE PTR ds:0x2cd12d45
  4112ae:	pop    edi
  4112af:	fnstenv [bp+si+0x4a]
  4112b3:	jne    0x411300
  4112b5:	add    dl,ch
  4112b7:	mov    edi,0x4f227599
  4112bc:	push   esi
  4112bd:	adc    DWORD PTR [edi-0x2896e503],esp
  4112c3:	mov    ch,0x82
  4112c5:	dec    edx
  4112c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112c7:	jcxz   0x411273
  4112ca:	mov    ah,0x89
  4112cc:	bound  ebp,QWORD PTR [esi]
  4112ce:	xchg   ebp,eax
  4112cf:	adc    dh,ch
  4112d1:	call   0x40bb03ed
  4112d6:	std    
  4112d7:	sub    eax,0x3ccd15cf
  4112dc:	iret   
  4112dd:	fxch   st(2)
  4112df:	dec    esi
  4112e0:	mov    bl,0x7b
  4112e2:	mov    bh,0xbe
  4112e4:	in     al,0x2a
  4112e6:	xchg   ebx,eax
  4112e7:	inc    ebp
  4112e8:	fisttp WORD PTR [ebp+0x77576618]
  4112ee:	call   0x3d2:0x3af6be0d
  4112f5:	retf   
  4112f6:	inc    DWORD PTR [ecx]
  4112f8:	ror    ch,cl
  4112fa:	in     eax,dx
  4112fb:	outs   dx,BYTE PTR ds:[esi]
  4112fc:	enter  0xdd5,0x42
  411300:	rcl    ch,1
  411302:	pop    edx
  411303:	lahf   
  411304:	xchg   edi,eax
  411305:	mov    ebx,0xf9fd1382
  41130a:	hlt    
  41130b:	push   0x74
  41130d:	mov    ebx,DWORD PTR [ecx+edx*1+0x126b0a4c]
  411314:	shl    al,1
  411316:	mov    bh,BYTE PTR [ebp-0x1ccd3583]
  41131c:	pop    ebp
  41131d:	sub    DWORD PTR [esp+edx*8],edx
  411320:	rcr    DWORD PTR [esi-0x5447f220],1
  411326:	imul   esp,ebp,0x4a
  411329:	cld    
  41132a:	retf   
  41132b:	out    dx,eax
  41132c:	ins    BYTE PTR es:[edi],dx
  41132d:	adc    BYTE PTR [ebx+0x4ff0a758],ah
  411333:	and    ebx,ebx
  411335:	mov    ecx,0xf091d2a9
  41133a:	push   esi
  41133b:	jns    0x411310
  41133d:	out    dx,eax
  41133e:	xor    bl,BYTE PTR [ebp-0x4eb1127]
  411344:	adc    dh,BYTE PTR [eax+0xefe7b2c]
  41134a:	ds shl BYTE PTR es:[esi+0x4c],0xe2
  411350:	or     esp,DWORD PTR [eax-0x4a]
  411353:	jbe    0x4113a6
  411355:	(bad)  
  411356:	xor    al,0xf9
  411358:	mov    ds:0x7f9629cd,eax
  41135d:	cmp    cl,BYTE PTR [edi+0x2c03f1e2]
  411363:	pop    DWORD PTR ss:[eax-0x20482b35]
  41136a:	sar    ch,0x70
  41136d:	rcl    BYTE PTR [edx],0xa1
  411370:	imul   BYTE PTR [esi-0xd]
  411373:	mov    eax,0x25bb5125
  411378:	add    dh,BYTE PTR [ebp-0x53]
  41137b:	cwde   
  41137c:	or     edx,DWORD PTR [edi+0x532c543f]
  411382:	js     0x411321
  411384:	and    dh,BYTE PTR [eax-0x7889d00d]
  41138a:	mov    bh,0x18
  41138c:	adc    BYTE PTR [esp+eax*4],ch
  41138f:	cld    
  411390:	mov    dl,0xdb
  411392:	jo     0x41140e
  411394:	fcom   QWORD PTR [edx]
  411396:	addr16 stc 
  411398:	mov    al,0xad
  41139a:	pop    esp
  41139b:	pop    esp
  41139c:	pop    ebx
  41139d:	mov    esi,0x27a73d11
  4113a2:	jge    0x4113a9
  4113a4:	fcmovnb st,st(4)
  4113a6:	fidiv  WORD PTR [edi-0x6b]
  4113a9:	pop    esi
  4113aa:	dec    ebp
  4113ab:	sub    ebx,ebx
  4113ad:	inc    esp
  4113ae:	fwait
  4113af:	xchg   esi,eax
  4113b0:	out    0x64,al
  4113b2:	sbb    al,0x40
  4113b4:	mov    dh,0xb6
  4113b6:	push   edx
  4113b7:	pop    ebx
  4113b8:	iret   
  4113b9:	sbb    DWORD PTR fs:[edx-0x6fe89fe4],edx
  4113c0:	(bad)  
  4113c1:	icebp  
  4113c2:	in     eax,0x2a
  4113c4:	addr16 pop esi
  4113c6:	pop    edx
  4113c7:	xlat   BYTE PTR ds:[ebx]
  4113c8:	iret   
  4113c9:	je     0x4113b3
  4113cb:	jne    0x4113ef
  4113cd:	pop    ds
  4113ce:	into   
  4113cf:	adc    al,0x9e
  4113d1:	(bad)  
  4113d2:	iret   
  4113d3:	adc    al,0xec
  4113d5:	xor    al,0xd1
  4113d7:	xchg   BYTE PTR [edx],cl
  4113d9:	xchg   ebp,eax
  4113da:	adc    eax,0xe78aaeac
  4113df:	loop   0x41142d
  4113e1:	ja     0x411418
  4113e3:	push   edx
  4113e4:	imul   edi,DWORD PTR [esi+0x3035071f],0x4433ed0a
  4113ee:	arpl   bp,di
  4113f0:	mov    eax,0x8e8f045e
  4113f5:	je     0x411419
  4113f7:	test   DWORD PTR [esi+0x6ceadb03],ebx
  4113fd:	cs pop ss
  4113ff:	loope  0x411393
  411401:	rol    DWORD PTR [ebp-0x80],cl
  411404:	mov    cl,0x87
  411406:	jle    0x4113c6
  411408:	sbb    eax,0x64c36b0e
  41140d:	mov    fs,ecx
  41140f:	cmc    
  411410:	inc    ebp
  411411:	je     0x41148d
  411413:	adc    dl,ch
  411415:	neg    DWORD PTR [ebp+0x15dd9d77]
  41141b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41141c:	mov    WORD PTR [ecx+0x39],?
  41141f:	(bad)  
  411420:	pop    ss
  411421:	(bad)  
  411422:	test   edi,eax
  411424:	dec    edx
  411425:	iret   
  411426:	add    eax,0xe474e6fb
  41142b:	or     DWORD PTR [edx+0x72],0xcaff054a
  411432:	dec    ecx
  411433:	sbb    eax,0x999ae4cc
  411438:	sbb    dl,BYTE PTR ds:0xc8523eb1
  41143e:	add    al,0xcc
  411440:	mov    bh,0xe6
  411442:	mov    dl,0x8a
  411444:	cdq    
  411445:	clc    
  411446:	ficomp WORD PTR [ebx+0x8a83cc3]
  41144c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41144d:	ret    
  41144e:	sahf   
  41144f:	scas   eax,DWORD PTR es:[edi]
  411450:	jle    0x4114a3
  411452:	lods   ax,WORD PTR ds:[esi]
  411454:	inc    edi
  411455:	pop    edx
  411456:	in     eax,0x69
  411458:	push   esp
  411459:	mov    eax,ds:0xadaafe4c
  41145e:	call   0xbc211654
  411463:	loope  0x41148d
  411465:	shr    BYTE PTR ds:0x2692dde2,0x92
  41146c:	jo     0x4114a1
  41146e:	sti    
  41146f:	add    al,0x5d
  411471:	inc    edx
  411472:	cdq    
  411473:	push   0x6f
  411475:	push   ebx
  411476:	gs in  eax,0x84
  411479:	cli    
  41147a:	pop    esi
  41147b:	mov    dh,0xbd
  41147d:	pop    es
  41147e:	mov    ebp,0x3a81bb87
  411483:	nop    DWORD PTR [esi-0x6]
  411487:	cmp    bl,BYTE PTR [eax+0x52d15a75]
  41148d:	dec    edi
  41148e:	sbb    al,BYTE PTR [eax]
  411490:	xchg   edx,eax
  411491:	sbb    al,0xf5
  411493:	dec    eax
  411494:	jbe    0x4114ba
  411496:	les    ebx,FWORD PTR [ebx+0x32]
  411499:	dec    DWORD PTR [esi-0x21684c55]
  41149f:	mov    eax,ds:0x3d61b0d0
  4114a4:	dec    edi
  4114a5:	fwait
  4114a6:	mov    al,ds:0xad98106b
  4114ab:	test   DWORD PTR [edx-0x53273c2],ebx
  4114b1:	jae    0x4114d4
  4114b3:	mov    edi,0xcc6c2c2d
  4114b8:	leave  
  4114b9:	nop
  4114ba:	fnstcw WORD PTR [ecx+eax*2-0x4b2295c4]
  4114c1:	call   0x6958e4c7
  4114c6:	fbld   TBYTE PTR [edi-0x23d044bd]
  4114cc:	jmp    0xdb82:0x2f034733
  4114d3:	cwde   
  4114d4:	lock push esi
  4114d6:	invd   
  4114d8:	mov    eax,ds:0xa3380a94
  4114dd:	jmp    0x411484
  4114df:	xchg   ecx,eax
  4114e0:	sub    al,0xf0
  4114e2:	aam    0x90
  4114e4:	xor    al,0x54
  4114e6:	add    DWORD PTR [ebx+0x60],0x66
  4114ea:	inc    esp
  4114eb:	xchg   esi,eax
  4114ec:	and    ebx,edi
  4114ee:	cwde   
  4114ef:	sbb    eax,0x500d8b71
  4114f4:	xchg   ebp,eax
  4114f5:	stos   BYTE PTR es:[edi],al
  4114f6:	es jnp 0x411526
  4114f9:	(bad)  
  4114fa:	jmp    0x58f20926
  4114ff:	xor    DWORD PTR [eax+0x3],eax
  411502:	ret    
  411503:	xchg   DWORD PTR [ebx+0xf],ecx
  411506:	or     al,0x14
  411508:	cmc    
  411509:	push   esi
  41150a:	and    ebx,DWORD PTR [esi+eiz*4]
  41150d:	pop    eax
  41150e:	ins    BYTE PTR es:[edi],dx
  41150f:	sub    dl,ah
  411511:	ja     0x411523
  411513:	dec    ebx
  411514:	lds    ecx,FWORD PTR [ebx+0x383e372a]
  41151a:	and    BYTE PTR [eax+edx*4],bh
  41151d:	push   esi
  41151e:	mov    eax,ds:0xba020672
  411523:	je     0x41152f
  411525:	or     eax,0x1bd9ae68
  41152a:	arpl   WORD PTR [eax-0x1dfd2c00],bp
  411530:	sbb    ebx,edi
  411532:	out    dx,ax
  411534:	cmp    eax,0xf147bbdf
  411539:	inc    ebp
  41153a:	fstp   QWORD PTR [edi+0x238d8e87]
  411540:	cmc    
  411541:	call   0xab87:0xfcf80c5d
  411548:	and    al,0xda
  41154a:	(bad)  
  41154b:	push   ebp
  41154c:	movlhps xmm0,xmm1
  41154f:	xchg   ebx,eax
  411550:	jo     0x41153f
  411552:	jge    0x411557
  411554:	out    dx,eax
  411555:	shl    ah,0x6d
  411558:	(bad)  
  411559:	xor    cl,BYTE PTR [ebp-0x40d3b7e3]
  41155f:	mov    esi,0x9ca6bf5c
  411564:	mov    BYTE PTR [eax-0x6d],bh
  411567:	inc    ebp
  411568:	dec    ebp
  411569:	sbb    DWORD PTR [ecx+eiz*1],ebx
  41156c:	jno    0x4115a1
  41156e:	cmc    
  41156f:	jno    0x411589
  411571:	pusha  
  411572:	jecxz  0x4115e4
  411574:	scas   al,BYTE PTR es:[edi]
  411575:	addr16 dec ebx
  411577:	adc    DWORD PTR ds:0xfe91dafe,edx
  41157d:	into   
  41157e:	pop    ss
  41157f:	mov    ch,0x80
  411581:	mov    DWORD PTR [edi],ecx
  411583:	mov    BYTE PTR [ecx],dl
  411585:	(bad)  
  411586:	jmp    0x411575
  411588:	lods   al,BYTE PTR ds:[esi]
  411589:	mov    al,BYTE PTR [edx+0x26c2d816]
  41158f:	mov    ch,0xea
  411591:	mov    ds:0xb80dd413,al
  411596:	mov    ch,0x94
  411598:	adc    eax,0x8f55b5be
  41159d:	loope  0x4115de
  41159f:	add    BYTE PTR [edi-0x1172bcfc],bl
  4115a5:	lea    eax,[eax]
  4115a7:	xchg   esi,eax
  4115a8:	mov    ebx,0x125df2bb
  4115ad:	cmp    al,0x47
  4115af:	fistp  DWORD PTR [ebx]
  4115b1:	and    DWORD PTR [ebx-0x13d88c48],ebx
  4115b7:	mov    ah,0xe8
  4115b9:	cmp    BYTE PTR [ecx],0xc4
  4115bc:	in     eax,0x1f
  4115be:	icebp  
  4115bf:	(bad)  
  4115c0:	inc    edi
  4115c1:	jmp    0xd18c2511
  4115c6:	jnp    0x4115f5
  4115c8:	outs   dx,DWORD PTR ds:[esi]
  4115c9:	dec    esi
  4115ca:	imul   esi,DWORD PTR [eax+0x2f6177e2],0xd8e14229
  4115d4:	popa   
  4115d5:	in     al,dx
  4115d6:	mov    eax,ds:0xc57cf4d0
  4115db:	pusha  
  4115dc:	jns    0x4115af
  4115de:	add    DWORD PTR [ebp+0x24],edx
  4115e1:	pop    ebx
  4115e2:	(bad)  
  4115e3:	pop    ds
  4115e4:	xor    edx,DWORD PTR [ebp-0x26]
  4115e7:	mov    edx,0xa29fa8af
  4115ec:	and    BYTE PTR [ecx+0x14],ah
  4115ef:	arpl   WORD PTR [ebx-0x771151f3],bx
  4115f5:	in     al,0xc7
  4115f7:	fimul  DWORD PTR [eax+0x78]
  4115fa:	gs sbb esi,edx
  4115fd:	out    dx,eax
  4115fe:	loopne 0x411605
  411600:	jae    0x41167c
  411602:	shl    BYTE PTR [eax-0x4a1df740],0x46
  411609:	sbb    edx,DWORD PTR [eax]
  41160b:	push   ss
  41160c:	retf   
  41160d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41160e:	mov    edx,0xb4505497
  411613:	jno    0x4115f5
  411615:	(bad)  
  411616:	loop   0x41162e
  411618:	cs (bad) 
  41161a:	xchg   ecx,eax
  41161b:	(bad)  
  41161c:	cs fstp st(2)
  41161f:	inc    cx
  411621:	mov    ds:0xf8dad942,al
  411626:	jl     0x411604
  411628:	pop    ebp
  411629:	clc    
  41162a:	xor    DWORD PTR [esi],edx
  41162c:	test   BYTE PTR [edx+0x6d],0x83
  411630:	test   BYTE PTR [eax+0x229832d3],0xb8
  411637:	test   DWORD PTR [ebx-0x4b0d62c8],esp
  41163d:	imul   ecx,DWORD PTR [esi],0x6a81cadd
  411643:	xor    eax,0xf7f16135
  411648:	(bad)
  41164b:	and    dl,BYTE PTR [esi]
  41164d:	pop    eax
  41164e:	xchg   ebp,eax
  41164f:	jg     0x4116c1
  411651:	cmp    esp,DWORD PTR [ebp+0x610ecf5d]
  411657:	shr    BYTE PTR [edi-0xfc54dd3],1
  41165d:	add    ebx,esi
  41165f:	push   cs
  411660:	sahf   
  411661:	data16 adc al,0xc3
  411664:	mov    WORD PTR [ebp-0x511d2d8c],?
  41166a:	adc    DWORD PTR [edx+0x2b],eax
  41166d:	sub    DWORD PTR [edx-0x4bb12255],ebx
  411673:	jne    0x411675
  411675:	sub    bl,cl
  411677:	pop    eax
  411678:	pop    ds
  411679:	mov    dh,0xd
  41167b:	sbb    edi,DWORD PTR [edi+0x2a]
  41167e:	loopne 0x4116f8
  411680:	leave  
  411681:	(bad)  
  411682:	cmp    ecx,DWORD PTR [ebx+edi*2]
  411685:	sub    eax,0x833ccdc0
  41168a:	aas    
  41168b:	cmp    eax,0x8c7602a
  411690:	in     al,0x25
  411692:	jl     0x41166a
  411694:	retf   0x1111
  411697:	pushf  
  411698:	clc    
  411699:	push   0xbe7045af
  41169e:	sub    al,0x6c
  4116a0:	cmp    al,0x6f
  4116a2:	or     BYTE PTR [esi+0x26afd051],ah
  4116a8:	jecxz  0x411639
  4116aa:	jmp    0x21b07450
  4116af:	sub    BYTE PTR [ebp-0x4c],al
  4116b2:	add    DWORD PTR [edx+0x54],ebx
  4116b5:	popf   
  4116b6:	or     al,0x85
  4116b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116b9:	or     ebx,edi
  4116bb:	or     DWORD PTR [ebx-0x45],ebx
  4116be:	dec    edi
  4116bf:	imul   edx,DWORD PTR [edx+0x1b083fd4],0xfffffffd
  4116c6:	adc    eax,0x16634664
  4116cb:	or     eax,0x368a27d2
  4116d0:	stos   DWORD PTR es:[edi],eax
  4116d1:	mov    al,ds:0x200d4014
  4116d6:	cdq    
  4116d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116d8:	popf   
  4116d9:	xchg   esi,eax
  4116da:	in     eax,0xcc
  4116dc:	pop    ecx
  4116dd:	mov    al,ds:0x7af9f969
  4116e2:	shl    DWORD PTR [esi-0x3f],1
  4116e5:	jmp    0x572d34fa
  4116ea:	fst    st(4)
  4116ec:	jns    0x4116d8
  4116ee:	bound  edx,QWORD PTR ds:0xbe1b3b65
  4116f4:	mov    DWORD PTR [eax],edi
  4116f6:	clc    
  4116f7:	adc    cl,al
  4116f9:	rol    BYTE PTR [edx-0x4b7a5e23],cl
  4116ff:	xor    BYTE PTR [ebx],dl
  411701:	in     eax,0xdf
  411703:	out    dx,eax
  411704:	pop    ecx
  411705:	pop    esi
  411706:	scas   al,BYTE PTR es:[edi]
  411707:	lock dec esi
  411709:	mov    ebp,0xc0f68cf3
  41170e:	repz lds eax,FWORD PTR [ebp+0x5b]
  411712:	add    al,BYTE PTR [edx-0x22]
  411715:	sti    
  411716:	inc    ecx
  411717:	cdq    
  411718:	adc    BYTE PTR [edi],0x24
  41171b:	cld    
  41171c:	popf   
  41171d:	inc    ecx
  41171e:	xor    edx,DWORD PTR [ebp+0x2f]
  411721:	and    eax,0xf4159be9
  411726:	ins    DWORD PTR es:[edi],dx
  411727:	sub    al,0x61
  411729:	or     eax,0xe2063fd4
  41172e:	hlt    
  41172f:	pop    ss
  411730:	add    eax,0xa8e8b814
  411735:	xchg   esp,eax
  411736:	stc    
  411737:	dec    eax
  411738:	mov    esi,0xaef47355
  41173d:	bound  esp,QWORD PTR [esi+edx*2+0x15]
  411741:	imul   eax,DWORD PTR [ebp-0x4e3efc00],0x56
  411748:	in     eax,dx
  411749:	and    ebp,DWORD PTR [ebx+0x4e]
  41174c:	repz add eax,0x154a78d6
  411752:	mov    ds:0xca617025,al
  411757:	sbb    ecx,ebx
  411759:	call   0x4874:0x106a9794
  411760:	fcomp  DWORD PTR [edx+0x2d6bce63]
  411766:	data16 mov WORD PTR [edi-0x307de066],cs
  41176d:	mul    DWORD PTR [ecx]
  41176f:	ss mov bh,0x65
  411772:	sahf   
  411773:	jmp    0x4117b8
  411775:	xor    cl,bh
  411777:	popf   
  411778:	ins    BYTE PTR es:[edi],dx
  411779:	adc    esp,esi
  41177b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41177c:	sub    cl,ch
  41177e:	mov    ch,0x67
  411780:	scas   al,BYTE PTR es:[edi]
  411781:	mov    edi,0xa886171d
  411786:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411787:	in     eax,0xda
  411789:	mov    BYTE PTR [ecx+edi*2],bl
  41178c:	cli    
  41178d:	jmp    0xf9a8:0x8bcdbffb
  411794:	xor    ebx,DWORD PTR [ebp-0x4a]
  411797:	mov    ah,0x80
  411799:	add    BYTE PTR [ebx-0x284ab0b3],dh
  41179f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117a0:	xchg   edi,eax
  4117a1:	ficomp WORD PTR [edi+ecx*2+0x30]
  4117a5:	sbb    al,0xa6
  4117a7:	jnp    0x4117ab
  4117a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117aa:	leave  
  4117ab:	cs aaa 
  4117ad:	inc    esi
  4117ae:	pop    esp
  4117af:	ds test eax,0xaba32ebe
  4117b5:	sahf   
  4117b6:	sub    BYTE PTR [ebp-0x22],bh
  4117b9:	add    DWORD PTR [ecx+eiz*4],0xffffffea
  4117bd:	ds cs inc edx
  4117c0:	push   0x63
  4117c2:	jno    0x411790
  4117c4:	(bad)  
  4117c5:	pushf  
  4117c6:	fmul   QWORD PTR [eax+eiz*8]
  4117c9:	adc    eax,0xd9962f94
  4117ce:	(bad)  
  4117cf:	int3   
  4117d0:	dec    ecx
  4117d1:	aaa    
  4117d2:	in     al,0xd2
  4117d4:	jnp    0x411772
  4117d6:	test   DWORD PTR [ebx-0x23],0xf90f9d43
  4117dd:	lea    esi,[ebx-0x4c584edf]
  4117e3:	push   ecx
  4117e4:	ret    
  4117e5:	je     0x4117e6
  4117e7:	or     eax,0xaa3d43e9
  4117ec:	fwait
  4117ed:	addr16 push es
  4117ef:	popa   
  4117f0:	cs dec ebx
  4117f2:	(bad)  
  4117f3:	call   0xaba:0x11d63922
  4117fa:	xlat   BYTE PTR ds:[ebx]
  4117fb:	xor    BYTE PTR [esi-0x4b],dl
  4117fe:	jb     0x4117c0
  411800:	jmp    0x4117e4
  411802:	sbb    BYTE PTR [esi+ebp*1-0x6203ce6a],dh
  411809:	daa    
  41180a:	imul   esp
  41180c:	pop    edi
  41180d:	sub    bl,BYTE PTR [ecx+0x586f5f3e]
  411813:	xchg   ebp,eax
  411814:	push   edi
  411815:	bound  ecx,QWORD PTR [edi+0x7c]
  411818:	jge    0x41183b
  41181a:	adc    eax,0xb3a25e97
  41181f:	mov    esi,0xbaa8a653
  411824:	mov    al,0xc7
  411826:	inc    edi
  411827:	into   
  411828:	retf   
  411829:	sbb    al,0xdf
  41182b:	and    edi,DWORD PTR [edi-0x744be138]
  411831:	in     al,dx
  411832:	lods   al,BYTE PTR ds:[esi]
  411833:	or     eax,0x157025bb
  411838:	les    eax,FWORD PTR [edi]
  41183a:	mov    ebp,0x2236e0c2
  41183f:	mov    al,ds:0xc1f89501
  411844:	arpl   WORD PTR [edi-0x6],di
  411847:	hlt    
  411848:	mov    bh,0x1a
  41184a:	cmp    BYTE PTR [edx+0x2d144944],ch
  411850:	add    al,0x80
  411852:	sbb    eax,0x995732a5
  411857:	aad    0x6d
  411859:	iret   
  41185a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41185b:	in     eax,dx
  41185c:	lods   al,BYTE PTR ds:[esi]
  41185d:	xor    al,0xf3
  41185f:	rcr    BYTE PTR [eax-0x4bb87ad1],0x93
  411866:	jmp    0x411860
  411868:	add    bl,bh
  41186a:	cmp    cl,BYTE PTR [edi+edi*1+0x38]
  41186e:	dec    esi
  41186f:	loopne 0x4118d2
  411871:	daa    
  411872:	enter  0x2d9e,0x86
  411876:	clc    
  411877:	into   
  411878:	frstpm(287 only) 
  41187a:	pop    ebx
  41187b:	int3   
  41187c:	mov    ebx,0x55601612
  411881:	add    bh,BYTE PTR [ebp-0x4bb6b08c]
  411887:	adc    esp,DWORD PTR [edx+0x41]
  41188a:	mov    ds:0x4ad246b5,al
  41188f:	ds aad 0x13
  411892:	into   
  411893:	ds jns 0x411870
  411896:	call   0x5d039006
  41189b:	sbb    edx,DWORD PTR [ebx]
  41189d:	ror    ah,cl
  41189f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118a0:	and    BYTE PTR [edx],cl
  4118a2:	ins    BYTE PTR es:[edi],dx
  4118a3:	and    dl,BYTE PTR [ebx-0x79]
  4118a6:	and    eax,0x72498fe4
  4118ab:	sub    DWORD PTR [esi-0x2c],ebx
  4118ae:	das    
  4118af:	out    dx,al
  4118b0:	and    bl,BYTE PTR [edi-0x44]
  4118b3:	push   ss
  4118b4:	cdq    
  4118b5:	or     BYTE PTR [esi],0xbd
  4118b8:	(bad)  
  4118ba:	fist   WORD PTR ds:0x6ddd97c7
  4118c0:	fs cli 
  4118c2:	cmp    dh,BYTE PTR [edi+ecx*4]
  4118c5:	retf   0x43f7
  4118c8:	xchg   DWORD PTR ds:0xab51f38a,ebx
  4118ce:	cs nop
  4118d0:	aad    0x20
  4118d2:	ja     0x411903
  4118d4:	add    esi,ebx
  4118d6:	sub    ebx,DWORD PTR [ebx+0x42f5690e]
  4118dc:	adc    DWORD PTR [ecx+ebx*8],edx
  4118df:	not    DWORD PTR [ecx]
  4118e1:	iret   
  4118e2:	cmp    BYTE PTR [edx],al
  4118e4:	sub    DWORD PTR [esp+ecx*2-0x259e74c],0xffffffbb
  4118ec:	jne    0x411953
  4118ee:	shl    BYTE PTR [esi+0x2],0x6
  4118f2:	sbb    eax,0x36871bd3
  4118f7:	fild   WORD PTR [ebx-0x42]
  4118fa:	hlt    
  4118fb:	aam    0x21
  4118fd:	adc    ecx,esi
  4118ff:	outs   dx,DWORD PTR ds:[esi]
  411900:	out    dx,eax
  411901:	sub    ch,ah
  411903:	cmp    al,0x92
  411905:	fstp   DWORD PTR [ebx+0x6957b274]
  41190b:	add    eax,0xb8a37966
  411910:	and    ebp,ebp
  411912:	jp     0x4118da
  411914:	cmp    ebp,esi
  411916:	aam    0x94
  411918:	dec    ecx
  411919:	jl     0x4118b0
  41191b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41191c:	lock (bad) 
  41191e:	(bad)  [ebp-0x1d535fe2]
  411924:	es push esp
  411926:	loop   0x41199a
  411928:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411929:	add    DWORD PTR [esi],ebx
  41192b:	and    esi,DWORD PTR [ebx]
  41192d:	retf   0x55c9
  411930:	xor    ecx,ebx
  411932:	pop    edi
  411933:	mov    ebx,0xb95d6da6
  411938:	std    
  411939:	les    edx,FWORD PTR [edx+edi*4+0x35]
  41193d:	xor    DWORD PTR [ecx],0xe4763fea
  411943:	adc    al,0x1f
  411945:	adc    al,0x90
  411947:	or     DWORD PTR [ebx-0x6a],eax
  41194a:	pop    ecx
  41194b:	cwde   
  41194c:	pop    eax
  41194d:	cmc    
  41194e:	dec    eax
  41194f:	lds    eax,FWORD PTR [ebp+0x74848b81]
  411955:	int    0x6e
  411957:	cli    
  411958:	ror    BYTE PTR [ebx+0x48607f29],0xcb
  41195f:	aad    0xe7
  411961:	pop    ebx
  411962:	mov    al,ds:0x98937a05
  411967:	or     al,0x91
  411969:	mov    dl,0x84
  41196b:	call   0x1dc204b2
  411970:	lods   eax,DWORD PTR ds:[esi]
  411971:	clc    
  411972:	push   es
  411973:	xchg   ebp,eax
  411974:	lods   al,BYTE PTR ds:[esi]
  411975:	push   cs
  411976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411977:	dec    esi
  411978:	daa    
  411979:	pop    ebp
  41197a:	jmp    0xb74de1c2
  41197f:	xor    eax,0xe62dd952
  411984:	aas    
  411985:	or     eax,0x3a9bcbc2
  41198a:	mov    al,ds:0xab00b03
  41198f:	pop    eax
  411990:	pop    ds
  411991:	dec    esi
  411992:	ror    esi,0xf4
  411995:	dec    ebx
  411996:	push   edx
  411997:	dec    edi
  411998:	dec    edx
  411999:	lock inc ebp
  41199b:	stos   BYTE PTR es:[edi],al
  41199c:	rcl    DWORD PTR [esi-0x2c],0x85
  4119a0:	outs   dx,BYTE PTR ds:[esi]
  4119a1:	or     bh,BYTE PTR [edi+0x17]
  4119a4:	iret   
  4119a5:	call   0x94e96900
  4119aa:	mov    ebp,0xc028ccdc
  4119af:	push   ebp
  4119b0:	ss loope 0x41197d
  4119b3:	ja     0x4119fa
  4119b5:	arpl   WORD PTR [edi+0x6d],dx
  4119b8:	arpl   WORD PTR [esi+0x4b],ax
  4119bb:	stc    
  4119bc:	mov    esi,0xbb497c19
  4119c1:	xchg   ecx,eax
  4119c2:	push   edi
  4119c3:	ficomp WORD PTR [ebx-0x190cbb22]
  4119c9:	mov    BYTE PTR [edx-0x51],dl
  4119cc:	mov    ds:0x26b45e5e,al
  4119d1:	out    0x9b,eax
  4119d3:	std    
  4119d4:	cmp    eax,0x788a276e
  4119d9:	sbb    edx,DWORD PTR [edx-0x154f3de8]
  4119df:	jg     0x4119ca
  4119e1:	xchg   ecx,eax
  4119e2:	jo     0x411a3f
  4119e4:	repz and ecx,esi
  4119e7:	and    esi,DWORD PTR [ecx-0x2b776be5]
  4119ed:	imul   esi,esp,0xa196b59d
  4119f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119f4:	dec    eax
  4119f5:	int    0x3d
  4119f7:	scas   al,BYTE PTR es:[edi]
  4119f8:	xor    DWORD PTR [edi-0x44],esi
  4119fb:	push   0x29
  4119fd:	inc    esi
  4119fe:	cmp    al,0xf8
  411a00:	in     al,dx
  411a01:	dec    esp
  411a02:	mov    fs,WORD PTR [ebp+0x1a]
  411a05:	out    0xc8,al
  411a07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a08:	(bad)  
  411a09:	jmp    0x4119d6
  411a0b:	jp     0x41199a
  411a0d:	stc    
  411a0e:	mov    ah,0xeb
  411a10:	adc    esi,DWORD PTR [ecx+0x46]
  411a13:	lahf   
  411a14:	cmp    dl,BYTE PTR [edi-0x61ba79f9]
  411a1a:	or     eax,0xc7d330e
  411a1f:	data16 xor BYTE PTR [ebx],dl
  411a22:	mov    ds:0x6dd99a96,al
  411a27:	and    BYTE PTR [ebp+0xf],dl
  411a2a:	scas   eax,DWORD PTR es:[edi]
  411a2b:	xor    dh,dl
  411a2d:	cmp    eax,0x74103852
  411a32:	imul   edi,ecx,0xffffffbd
  411a35:	sti    
  411a36:	cs call 0xbc7bb2b3
  411a3c:	jmp    0x2b10:0x20d0cf7a
  411a43:	data16 jns 0x411a79
  411a46:	push   ebx
  411a47:	cmp    DWORD PTR [edi],esi
  411a49:	mov    DWORD PTR [ecx],ebp
  411a4b:	mov    ebx,0x547d6606
  411a50:	xchg   BYTE PTR [ecx+0x78c6a14a],al
  411a56:	cmp    BYTE PTR [ebp-0x8fb2840],bh
  411a5c:	in     al,dx
  411a5d:	popa   
  411a5e:	sub    BYTE PTR ds:0x2bfe6c4a,0x52
  411a65:	gs jno 0x411ad3
  411a68:	shl    DWORD PTR [edi-0x649b9007],1
  411a6e:	in     al,0xa9
  411a70:	das    
  411a71:	xor    ecx,DWORD PTR [ecx-0x1a653180]
  411a77:	dec    edi
  411a78:	fmul   DWORD PTR [esi]
  411a7a:	jnp    0x411ad3
  411a7c:	aam    0x9e
  411a7e:	adc    ebp,DWORD PTR [ecx-0x2fe6d32f]
  411a84:	ins    DWORD PTR es:[edi],dx
  411a85:	jne    0x411a91
  411a87:	add    DWORD PTR [ebx],esp
  411a89:	sbb    ebx,esp
  411a8b:	ins    DWORD PTR es:[edi],dx
  411a8c:	or     ebx,DWORD PTR [eax+0x79d4aa6c]
  411a92:	out    dx,eax
  411a93:	sbb    eax,0xdc9ceff1
  411a98:	xchg   ecx,eax
  411a99:	and    al,al
  411a9b:	push   edx
  411a9c:	mov    al,ds:0x9b5eeaf3
  411aa1:	cmp    DWORD PTR [ebx-0xe571b9c],edi
  411aa7:	inc    edi
  411aa8:	fs popa 
  411aaa:	sub    BYTE PTR [ebp+0x6043e1c],ah
  411ab0:	rsqrtps xmm1,XMMWORD PTR ds:0x6d76fcc0
  411ab7:	jne    0x411ab9
  411ab9:	xlat   BYTE PTR ds:[ebx]
  411aba:	aad    0xf4
  411abc:	mov    ah,0x86
  411abe:	sbb    ch,BYTE PTR [ecx-0x58d1e721]
  411ac4:	add    eax,0x319fed4d
  411ac9:	xchg   BYTE PTR [edi+0x70],dl
  411acc:	pop    ds
  411acd:	mov    edx,0xda8a477
  411ad2:	enter  0x88f,0xc9
  411ad6:	xor    DWORD PTR [edx+ecx*8+0x75],0x4b
  411adb:	outs   dx,BYTE PTR ds:[esi]
  411adc:	gs test al,0x10
  411adf:	popf   
  411ae0:	mov    eax,ds:0xba821c5a
  411ae5:	xchg   edi,eax
  411ae6:	inc    ebp
  411ae7:	sbb    edi,0xfffffff6
  411aea:	shl    bh,1
  411aec:	add    eax,0xa6f4e1f
  411af1:	jp     0x411afc
  411af3:	adc    bh,BYTE PTR ds:0xd61dd336
  411af9:	imul   ebx,DWORD PTR [ebp-0x5c6c6c15],0xce60806f
  411b03:	pop    ebp
  411b04:	outs   dx,BYTE PTR ds:[esi]
  411b05:	cs inc ebx
  411b07:	and    BYTE PTR [eax+ebp*2],dl
  411b0a:	out    0x7,al
  411b0c:	test   al,0x19
  411b0e:	test   BYTE PTR [edx+0x36],dl
  411b11:	lahf   
  411b12:	dec    ebp
  411b13:	push   0xa992b11
  411b18:	adc    ch,dl
  411b1a:	jmp    0x411b20
  411b1c:	jmp    0x9110:0x2e7c57de
  411b23:	xor    al,0x3b
  411b25:	out    0x6c,eax
  411b27:	dec    edi
  411b28:	retf   0x46b0
  411b2b:	jmp    0x411b31
  411b2d:	hlt    
  411b2e:	adc    al,0x93
  411b30:	inc    ecx
  411b31:	jl     0x411ae3
  411b33:	cmp    ch,BYTE PTR [edx-0x73]
  411b36:	push   ds
  411b37:	fild   DWORD PTR [edx+ecx*4+0x1e]
  411b3b:	or     ebx,edi
  411b3d:	dec    ecx
  411b3e:	or     BYTE PTR [eax-0x42dbf9cc],ah
  411b44:	ds stos DWORD PTR es:[edi],eax
  411b46:	or     DWORD PTR [ecx+0x1884a4a6],eax
  411b4c:	mov    DWORD PTR ds:0x375b0d6,edx
  411b52:	xlat   BYTE PTR ds:[ebx]
  411b53:	inc    ebp
  411b54:	js     0x411bc8
  411b56:	or     eax,0xb2641914
  411b5b:	jg     0x411bd2
  411b5d:	mov    esp,0xfb54bb4b
  411b62:	pop    esi
  411b63:	cmp    cl,BYTE PTR [edi]
  411b65:	push   cs
  411b66:	push   es
  411b67:	mov    ds:0xe95534ef,eax
  411b6c:	pop    ebx
  411b6d:	pushf  
  411b6e:	repnz bound edx,QWORD PTR [ebp+0x129229]
  411b75:	idiv   DWORD PTR [ebp-0x6d49778c]
  411b7b:	fwait
  411b7c:	inc    esp
  411b7d:	jb     0x411b94
  411b7f:	fsubr  st,st(1)
  411b81:	loope  0x411bcb
  411b83:	fild   DWORD PTR [ebp+0x3bd0a43]
  411b89:	mov    DWORD PTR [eax+0x2],eax
  411b8c:	imul   ebx,DWORD PTR [ecx],0x21
  411b8f:	dec    edi
  411b90:	ficom  WORD PTR ds:0x43897998
  411b96:	mov    ah,0xaf
  411b98:	(bad)  
  411b99:	js     0x411b95
  411b9b:	inc    ecx
  411b9c:	cs mov edi,0x70b6142f
  411ba2:	pop    edi
  411ba3:	call   0xe65bb932
  411ba8:	mov    bl,0xe0
  411baa:	xlat   BYTE PTR ds:[ebx]
  411bab:	push   ecx
  411bac:	ins    DWORD PTR es:[edi],dx
  411bad:	pop    ecx
  411bae:	xchg   ecx,eax
  411baf:	loope  0x411bb1
  411bb1:	push   ds
  411bb2:	jnp    0x411c20
  411bb4:	(bad)  
  411bb5:	sub    eax,0xfcc7c7ce
  411bba:	mov    ds:0x7093e3f,al
  411bbf:	mov    bh,0x87
  411bc1:	dec    esi
  411bc2:	mov    gs,WORD PTR [ecx]
  411bc4:	mov    ebp,?
  411bc6:	stos   DWORD PTR es:[edi],eax
  411bc7:	xor    ebp,DWORD PTR [edi-0x5c]
  411bca:	xlat   BYTE PTR ds:[ebx]
  411bcb:	and    BYTE PTR [eax+0x1a],al
  411bce:	adc    eax,0x76fe938
  411bd3:	add    BYTE PTR [ecx+0x11],al
  411bd6:	mov    bh,0xf2
  411bd8:	cmp    BYTE PTR [ebp-0x4f],al
  411bdb:	inc    edx
  411bdc:	cli    
  411bdd:	int3   
  411bde:	repz mov bl,0x0
  411be1:	iret   
  411be2:	jbe    0x411bed
  411be4:	add    eax,0x6912abac
  411be9:	and    BYTE PTR [ebx-0x41],0x78
  411bed:	gs je  0x411c0b
  411bf0:	inc    ebp
  411bf1:	(bad)  
  411bf2:	cmp    al,0x4c
  411bf4:	adc    BYTE PTR [eax],dh
  411bf6:	or     edi,esi
  411bf8:	pop    ss
  411bf9:	in     eax,dx
  411bfa:	mov    ecx,DWORD PTR [edx+ecx*2]
  411bfd:	aad    0x6f
  411bff:	js     0x411b99
  411c01:	stc    
  411c02:	jl     0x411c61
  411c04:	sbb    al,0xd2
  411c06:	or     cl,bh
  411c08:	cli    
  411c09:	xor    DWORD PTR [edi],ecx
  411c0b:	aam    0x1e
  411c0d:	adc    bl,BYTE PTR [eax+ecx*4]
  411c10:	pop    ebx
  411c11:	ret    0xe19d
  411c14:	xchg   edi,eax
  411c15:	out    0xe3,al
  411c17:	mov    dh,0xd6
  411c19:	fisubr DWORD PTR [edx]
  411c1b:	in     eax,dx
  411c1c:	sbb    ebp,ebp
  411c1e:	and    ecx,ecx
  411c20:	jae    0x411c86
  411c22:	or     al,0x76
  411c24:	cli    
  411c25:	push   ebp
  411c26:	mov    ebx,0xaf3edd60
  411c2b:	test   eax,0x3b327380
  411c30:	retf   0x7680
  411c33:	sub    al,0x7f
  411c35:	or     DWORD PTR [edi+edx*8],edi
  411c38:	add    BYTE PTR [edi+0x58705224],ch
  411c3e:	push   eax
  411c3f:	sahf   
  411c40:	xlat   BYTE PTR ds:[ebx]
  411c41:	fadd   DWORD PTR [eax-0x40]
  411c44:	jl     0x411c1c
  411c46:	mov    ah,0xe7
  411c48:	mov    ds:0x1b7b44db,eax
  411c4d:	mov    eax,0x807bd970
  411c52:	out    dx,eax
  411c53:	adc    bl,dl
  411c55:	mov    edi,0x5433293d
  411c5a:	push   esi
  411c5b:	xchg   esi,eax
  411c5c:	enter  0x4837,0x75
  411c60:	(bad)  
  411c61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c62:	jno    0x411ca2
  411c64:	fs cmp eax,0x4283d864
  411c6a:	in     al,0x75
  411c6c:	fisttp DWORD PTR [edx]
  411c6e:	cmp    eax,0x2e1a781
  411c73:	cdq    
  411c74:	dec    ebp
  411c75:	xchg   esi,eax
  411c76:	xchg   ecx,eax
  411c77:	dec    esp
  411c78:	push   0x7290f819
  411c7d:	out    dx,al
  411c7e:	or     dl,BYTE PTR [esi]
  411c80:	adc    edi,esp
  411c82:	adc    ebx,ecx
  411c84:	inc    edx
  411c85:	push   ecx
  411c86:	jp     0x411c39
  411c88:	mov    ?,WORD PTR [ebx+0x6a6b6f0e]
  411c8e:	adc    al,0xdf
  411c90:	jg     0x411c2c
  411c92:	ja     0x411c51
  411c94:	inc    edi
  411c95:	mov    edx,DWORD PTR [edx-0x7deb86a6]
  411c9b:	pop    edx
  411c9c:	cmp    BYTE PTR [esi],dh
  411c9e:	cmp    al,0x38
  411ca0:	loop   0x411d1f
  411ca2:	mov    dl,0x47
  411ca4:	jg     0x411d14
  411ca6:	(bad)  
  411ca8:	fdivr  QWORD PTR [esi+0x5b1b14ac]
  411cae:	je     0x411d0f
  411cb0:	jmp    0x5e11078f
  411cb5:	cmp    edi,DWORD PTR [eax+0x40]
  411cb8:	retf   0x1ad7
  411cbb:	pop    ds
  411cbc:	ja     0x411c7f
  411cbe:	(bad)  
  411cbf:	fisub  WORD PTR [ebp+0x1c]
  411cc2:	pop    esp
  411cc3:	fdiv   QWORD PTR [ebp-0x64beae21]
  411cc9:	mov    edi,0x252a73b2
  411cce:	dec    edx
  411ccf:	test   eax,0xf6ced289
  411cd4:	and    ch,BYTE PTR [esi+ebp*1-0x43621e9a]
  411cdb:	(bad)  
  411cdc:	cmp    cl,BYTE PTR [edx+ebp*2-0x60052a81]
  411ce3:	sahf   
  411ce4:	push   ds
  411ce5:	data16 sbb ah,dl
  411ce8:	pop    edx
  411ce9:	or     eax,0x6d947503
  411cee:	cmp    ecx,DWORD PTR [edi+0x52]
  411cf1:	sbb    eax,0x4f7318e8
  411cf6:	fiadd  DWORD PTR [ecx+0x6]
  411cf9:	lock int 0xd4
  411cfc:	test   BYTE PTR [ebx],dl
  411cfe:	xchg   edx,eax
  411cff:	daa    
  411d00:	push   ss
  411d01:	cmp    eax,DWORD PTR [esi-0x48]
  411d04:	fiadd  DWORD PTR [esi]
  411d06:	addr16 in al,dx
  411d08:	dec    esi
  411d09:	push   0xffffffc3
  411d0b:	int3   
  411d0c:	addr16 pop esi
  411d0e:	jg     0x411c92
  411d10:	test   DWORD PTR [eax-0x5db30212],edi
  411d16:	ja     0x411ca4
  411d18:	addr16 ss fs (bad) 
  411d1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d1e:	add    bl,BYTE PTR [ebx+0x73]
  411d21:	call   FWORD PTR [ecx]
  411d23:	je     0x411cbe
  411d25:	pop    esp
  411d26:	push   ss
  411d27:	mov    cl,0x3a
  411d29:	xor    ch,BYTE PTR [edi+eax*4]
  411d2c:	jae    0x411cf8
  411d2e:	or     DWORD PTR [edi-0x7e207b],esp
  411d34:	mov    esp,0x53b39256
  411d39:	fwait
  411d3a:	mov    dh,ch
  411d3c:	cmp    al,0xc9
  411d3e:	pop    esi
  411d3f:	jno    0x411cfc
  411d41:	repz cmp BYTE PTR [esi+esi*1],al
  411d45:	aad    0xd1
  411d47:	sbb    BYTE PTR [edx],0x7
  411d4a:	fld    DWORD PTR [edi]
  411d4c:	push   edx
  411d4d:	sub    DWORD PTR [edi+0x19ba7841],ebx
  411d53:	xchg   BYTE PTR [ebp+0x1e],al
  411d56:	(bad)  
  411d57:	xchg   ebp,eax
  411d58:	push   eax
  411d59:	(bad)  
  411d5a:	mov    ecx,0xe06e220a
  411d5f:	cmp    BYTE PTR [edi+edi*8+0xd6134a1],cl
  411d66:	xchg   edi,eax
  411d67:	ret    
  411d68:	pop    edi
  411d69:	sub    bh,BYTE PTR [ecx]
  411d6b:	or     eax,0x389be7ba
  411d70:	aas    
  411d71:	inc    esi
  411d72:	jmp    0x411cf7
  411d74:	adc    ch,BYTE PTR [eax-0x10]
  411d77:	cmp    ch,BYTE PTR ds:0x71848859
  411d7d:	(bad)  
  411d7e:	sar    DWORD PTR [esi],1
  411d80:	imul   ebx,DWORD PTR ds:[edx+0xe],0x5e
  411d85:	ins    DWORD PTR es:[edi],dx
  411d86:	xchg   ecx,eax
  411d87:	jmp    0x1b11:0xcb6e74b4
  411d8e:	popf   
  411d8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d90:	fdivr  DWORD PTR [ebp+0x4d385586]
  411d96:	pop    ss
  411d97:	test   al,0x43
  411d99:	sti    
  411d9a:	retf   0xdd46
  411d9d:	ss das 
  411d9f:	lock cld 
  411da1:	cmc    
  411da2:	lods   eax,DWORD PTR ds:[esi]
  411da3:	neg    ebp
  411da5:	mov    ah,0x47
  411da7:	sub    al,dh
  411da9:	push   ss
  411daa:	push   edx
  411dac:	sub    eax,0x9e9ec586
  411db1:	daa    
  411db2:	and    eax,0x2ba39dad
  411db7:	pop    ss
  411db8:	mov    ds:0xbb7ee780,eax
  411dbd:	mov    dl,0x5d
  411dbf:	popa   
  411dc0:	push   edi
  411dc1:	mov    ah,0x7c
  411dc3:	mov    ecx,0x21fe74fc
  411dc8:	mov    DWORD PTR [edi],ebx
  411dca:	inc    esp
  411dcb:	add    BYTE PTR [edx*2+0x2c2285c],0xc9
  411dd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411dd4:	and    BYTE PTR [ecx+eiz*8],bl
  411dd7:	mov    ds:0x79195712,al
  411ddc:	jo     0x411dbb
  411dde:	mov    ebp,0x141c1938
  411de3:	inc    edx
  411de4:	ja     0x411da4
  411de6:	mov    dh,0x42
  411de8:	sub    eax,0x9b24b5b9
  411ded:	adc    al,0xb1
  411def:	stos   BYTE PTR es:[edi],al
  411df0:	stc    
  411df1:	cmp    DWORD PTR [esi],ebx
  411df3:	rol    DWORD PTR [edi],cl
  411df5:	mov    dh,0x8b
  411df7:	addr16 (bad) 
  411df9:	xchg   esp,eax
  411dfa:	sbb    eax,0x98498b1f
  411dff:	push   0x6d
  411e01:	test   BYTE PTR [esi-0x21888477],0x7f
  411e08:	jno    0x411d95
  411e0a:	mov    eax,0xa92e4033
  411e0f:	stc    
  411e10:	dec    esp
  411e11:	aas    
  411e12:	sub    edx,ecx
  411e14:	sub    al,0x98
  411e16:	addr16 xor al,0x4a
  411e19:	add    esi,DWORD PTR [esi-0x62]
  411e1c:	xor    BYTE PTR [edi+0x2e],ch
  411e1f:	sbb    eax,0x8f14986c
  411e24:	gs mov esp,0x9ab29d87
  411e2a:	in     eax,0x94
  411e2c:	inc    ebx
  411e2d:	sub    edx,esp
  411e2f:	ret    
  411e30:	out    dx,eax
  411e31:	outs   dx,BYTE PTR ds:[esi]
  411e32:	adc    DWORD PTR [esi-0x51],0x23
  411e36:	mov    esi,ds
  411e38:	xchg   edx,eax
  411e39:	in     al,0xc7
  411e3b:	or     esi,ebp
  411e3d:	mov    DWORD PTR [esi-0x218334b1],ebp
  411e43:	imul   edx,DWORD PTR [edx+esi*8-0x26d95c48],0xffffffbd
  411e4b:	push   ebx
  411e4c:	mov    ecx,0x42f016a6
  411e51:	inc    ecx
  411e52:	ret    0x193f
  411e55:	not    ecx
  411e57:	push   esp
  411e58:	imul   ebx
  411e5a:	pop    ecx
  411e5b:	push   ebx
  411e5c:	(bad)  
  411e5d:	pop    ebx
  411e5e:	ins    BYTE PTR es:[edi],dx
  411e5f:	adc    BYTE PTR [ebx+0x7e9f7770],cl
  411e65:	mov    edx,0x523e6f9c
  411e6a:	lods   eax,DWORD PTR ds:[esi]
  411e6b:	and    esp,esi
  411e6d:	inc    esp
  411e6e:	call   0xf8c4:0x98b918f6
  411e75:	push   ds
  411e76:	xor    BYTE PTR [edi+0x1e45139a],dh
  411e7c:	call   0x4abc:0x4e6e47f5
  411e83:	dec    eax
  411e84:	pop    edi
  411e85:	jne    0x411f02
  411e87:	loopne 0x411ead
  411e89:	in     eax,dx
  411e8a:	loopne 0x411e53
  411e8c:	xchg   ebp,eax
  411e8d:	dec    eax
  411e8e:	xor    esi,ebp
  411e90:	lds    ecx,FWORD PTR [esi]
  411e92:	pop    ebx
  411e93:	in     eax,0x3
  411e95:	fild   WORD PTR ss:[esi]
  411e98:	xor    edx,eax
  411e9a:	inc    esp
  411e9b:	(bad)  
  411e9d:	pusha  
  411e9e:	xchg   ebx,eax
  411e9f:	mov    ebp,0x4342145a
  411ea4:	call   0xc97a:0xaf850bda
  411eab:	pop    ebx
  411eac:	shr    DWORD PTR [edi+edi*2],0x39
  411eb0:	in     al,0x1f
  411eb2:	xor    eax,0xb6482557
  411eb7:	and    BYTE PTR [edx+0x71],ch
  411eba:	aad    0x5c
  411ebc:	mov    ebx,0x330f1974
  411ec1:	mov    eax,ds:0xa32f8bd3
  411ec6:	pop    eax
  411ec7:	sbb    al,0xc2
  411ec9:	mov    edi,0x65c7d992
  411ece:	mov    ch,0x59
  411ed0:	add    edx,DWORD PTR cs:[edx+0x65]
  411ed4:	sbb    edx,DWORD PTR [eax+0x18]
  411ed7:	push   edi
  411ed8:	or     al,0x3c
  411eda:	sub    ch,BYTE PTR [ebx-0x70]
  411edd:	add    al,dl
  411edf:	loopne 0x411e9e
  411ee1:	push   0x4e
  411ee3:	jl     0x411f46
  411ee5:	mov    edx,DWORD PTR [edi+0x50]
  411ee8:	sub    al,0xe4
  411eea:	ja     0x411ea3
  411eec:	(bad)  
  411eed:	sbb    edx,edx
  411eef:	ret    
  411ef0:	cmp    al,0x54
  411ef2:	push   es
  411ef3:	sbb    esi,ebx
  411ef5:	and    DWORD PTR [ebx+0x34],ebx
  411ef8:	dec    edx
  411ef9:	in     al,dx
  411efa:	push   0xf611f4fe
  411eff:	xchg   edi,eax
  411f00:	xchg   BYTE PTR [esi+0x6e245bc5],bl
  411f06:	ds mov bl,0xf0
  411f09:	jae    0x411e9e
  411f0b:	and    DWORD PTR [eax],esp
  411f0d:	adc    dl,cl
  411f0f:	add    al,0x16
  411f11:	stc    
  411f12:	fiadd  WORD PTR [eax+0x12093ee4]
  411f18:	inc    edi
  411f19:	jp     0x411ed6
  411f1b:	add    DWORD PTR [edx-0x51e56888],edx
  411f21:	dec    esp
  411f22:	inc    esi
  411f23:	pop    esp
  411f24:	mov    edi,0xf08c03ec
  411f29:	xchg   edx,eax
  411f2a:	inc    ecx
  411f2b:	mov    al,0xaa
  411f2d:	mov    al,0x95
  411f2f:	addr16 push ds
  411f31:	push   ebx
  411f32:	jmp    0x411f30
  411f34:	and    al,0xf7
  411f36:	jo     0x411f11
  411f38:	jo     0x411f02
  411f3a:	push   eax
  411f3b:	push   0x7cd2efa
  411f40:	sbb    DWORD PTR [edx+0x7bc06591],0x4d
  411f47:	add    eax,0xdedb7693
  411f4c:	pop    DWORD PTR [esi-0x68e6b0b0]
  411f52:	pop    ds
  411f53:	mov    dh,dl
  411f55:	int3   
  411f56:	out    0xbc,eax
  411f58:	aad    0x60
  411f5a:	xchg   BYTE PTR ds:0xa7435505,ch
  411f60:	ret    
  411f61:	and    al,0x6c
  411f63:	pop    edi
  411f64:	mov    ch,0x77
  411f66:	push   esi
  411f67:	push   edx
  411f68:	hlt    
  411f69:	sahf   
  411f6a:	push   ebp
  411f6b:	in     eax,0x46
  411f6d:	aaa    
  411f6e:	add    edx,esi
  411f70:	push   ebx
  411f71:	jecxz  0x411fc6
  411f73:	xlat   BYTE PTR ds:[ebx]
  411f74:	inc    ebx
  411f75:	xlat   BYTE PTR ds:[ebx]
  411f76:	jecxz  0x411f53
  411f78:	loopne 0x411fe4
  411f7a:	data16 icebp 
  411f7c:	xor    BYTE PTR [edx-0x58228103],ah
  411f82:	fidivr DWORD PTR [eax+0x12350a07]
  411f88:	mov    esi,0xc73bb760
  411f8d:	xchg   ebp,eax
  411f8e:	xor    DWORD PTR [esi+edi*2-0x3e],ebx
  411f92:	pop    ds
  411f93:	clc    
  411f94:	pop    ecx
  411f95:	xor    bl,BYTE PTR [ecx-0xd4cc2aa]
  411f9b:	mov    ebp,0x8233b852
  411fa0:	loope  0x411fda
  411fa2:	pop    ebp
  411fa3:	aad    0xbd
  411fa5:	push   ds
  411fa6:	mov    gs,WORD PTR [ebp+eax*1+0x15]
  411faa:	leave  
  411fab:	aaa    
  411fac:	sti    
  411fad:	inc    edx
  411fae:	add    eax,0x3dbe2536
  411fb3:	mov    DWORD PTR [ecx+0x72],ebx
  411fb6:	jae    0x411fb8
  411fb8:	popa   
  411fb9:	mov    WORD PTR [ebp-0x52cb8f6b],cs
  411fbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fc0:	not    BYTE PTR [esi-0x687242d7]
  411fc6:	sbb    edx,ebp
  411fc8:	adc    dh,BYTE PTR [edi-0x16550924]
  411fce:	mov    cl,0x16
  411fd0:	cmp    eax,0xf8004b0
  411fd5:	inc    eax
  411fd6:	mov    ecx,0x2078ac20
  411fdb:	xlat   BYTE PTR ds:[ebx]
  411fdc:	lods   eax,DWORD PTR ds:[esi]
  411fdd:	pop    esp
  411fde:	mov    ds:0x93e74600,al
  411fe3:	iret   
  411fe4:	push   ecx
  411fe5:	imul   esp,DWORD PTR [ebx-0x3a],0x2e
  411fe9:	shl    ebx,1
  411feb:	hlt    
  411fec:	lahf   
  411fed:	mov    esp,0x690f7c66
  411ff2:	aam    0x80
  411ff4:	mov    edi,0xa0da8793
  411ff9:	mov    ebp,0x81df41ae
  411ffe:	and    al,0x7a
  412000:	cwde   
  412001:	test   eax,0x7471371a
  412006:	push   eax
  412007:	cli    
  412008:	sbb    BYTE PTR gs:[ebx],cl
  41200b:	pop    edx
  41200c:	repnz cmp eax,0x4636c419
  412012:	mov    eax,ds:0xe3fe3b2b
  412017:	aaa    
  412018:	fild   QWORD PTR [esi]
  41201a:	psadbw mm1,QWORD PTR [edx]
  41201d:	cmp    BYTE PTR [edi+0xd2b881b],cl
  412023:	lea    edi,[edi+ebx*1+0x3d]
  412027:	or     BYTE PTR [edi],dh
  412029:	or     dl,ah
  41202b:	and    cl,BYTE PTR [edi+0x521de8b3]
  412031:	xor    eax,0xf3e9fad4
  412036:	add    BYTE PTR [ebx-0x6e38e18f],bl
  41203c:	sub    dl,0xea
  41203f:	push   0x77
  412041:	sahf   
  412042:	jg     0x411fdf
  412044:	leave  
  412045:	or     al,0xa0
  412047:	mov    ss,WORD PTR [esi+0x70]
  41204a:	push   ecx
  41204b:	xchg   BYTE PTR [ebp-0x78],dh
  41204e:	pop    esi
  41204f:	inc    edi
  412050:	dec    ecx
  412051:	lahf   
  412052:	shl    BYTE PTR [esi],1
  412054:	add    ebp,edi
  412056:	mov    bl,0x9a
  412058:	mov    al,BYTE PTR [eax-0x71]
  41205b:	ret    
  41205c:	repnz sahf 
  41205e:	cmp    ch,cl
  412060:	into   
  412061:	test   BYTE PTR [ecx],0x9a
  412064:	pop    es
  412065:	jmp    0xc735a51e
  41206a:	cdq    
  41206b:	addr16 dec ebp
  41206d:	cmp    eax,0x61ca98e0
  412072:	sbb    dl,BYTE PTR [ebx+0x5e]
  412075:	push   0xffffffe4
  412077:	clc    
  412078:	adc    BYTE PTR [edi+0x7a],dl
  41207b:	cmp    eax,0x2d785411
  412080:	arpl   WORD PTR ds:0xcf575491,di
  412086:	aam    0xcb
  412088:	xor    edx,DWORD PTR [esi+edx*8+0x67]
  41208c:	out    0x74,eax
  41208e:	test   eax,0x35e0577
  412093:	pushf  
  412094:	hlt    
  412095:	mov    ecx,0x13608171
  41209a:	and    BYTE PTR [ebx+esi*4+0x2bf1c804],dh
  4120a1:	test   eax,0x8e0e0fbc
  4120a6:	add    DWORD PTR [edx],ebp
  4120a8:	dec    edi
  4120a9:	into   
  4120aa:	rol    DWORD PTR ds:0xd71fd46e,0xe7
  4120b1:	xlat   BYTE PTR ds:[ebx]
  4120b2:	xchg   esi,eax
  4120b3:	mov    eax,ds:0x6db2bc49
  4120b8:	mov    esi,0x849ec486
  4120bd:	inc    ebx
  4120be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120bf:	cmp    DWORD PTR [eax],ecx
  4120c1:	pop    edi
  4120c2:	mov    BYTE PTR [ebp+0x5a],dl
  4120c5:	adc    al,0xaf
  4120c7:	adc    dl,BYTE PTR [ecx-0x40016f8a]
  4120cd:	retf   0xfd1a
  4120d0:	(bad)  
  4120d1:	cwde   
  4120d2:	adc    eax,DWORD PTR [edi-0x29]
  4120d5:	test   DWORD PTR [eax],eax
  4120d7:	enter  0xecbc,0xa
  4120db:	xchg   ebx,eax
  4120dc:	jge    0x412093
  4120de:	out    dx,eax
  4120df:	dec    ebp
  4120e0:	adc    eax,ebx
  4120e2:	mov    BYTE PTR [esp+ebx*8-0x331783ef],cl
  4120e9:	retf   0x1550
  4120ec:	std    
  4120ed:	pop    es
  4120ee:	leave  
  4120ef:	out    dx,eax
  4120f0:	push   0xf658750d
  4120f5:	repz stc 
  4120f7:	mov    es,WORD PTR [edx]
  4120f9:	mov    eax,0xb44ffc07
  4120fe:	test   eax,0xd85f007c
  412103:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412104:	xor    ah,ch
  412106:	dec    ebx
  412107:	pop    esi
  412108:	stos   BYTE PTR es:[edi],al
  412109:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41210a:	inc    ebx
  41210b:	xor    BYTE PTR [edx+edx*2-0x55],ah
  41210f:	sbb    al,0xa5
  412111:	inc    edx
  412112:	and    al,BYTE PTR [esi+0x1d]
  412115:	adc    edx,0x8fc666c1
  41211b:	pop    ds
  41211c:	jecxz  0x412120
  41211e:	sbb    al,0xa8
  412120:	ds js  0x41217b
  412123:	xchg   edx,eax
  412124:	stos   DWORD PTR es:[edi],eax
  412125:	or     dh,bh
  412127:	imul   eax,DWORD PTR [ebp+0x2b],0x76
  41212b:	inc    ebx
  41212c:	sbb    BYTE PTR [eax+0x46c7c425],0x4
  412133:	cmp    dh,BYTE PTR [esi-0x18]
  412136:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412137:	sbb    al,0x80
  412139:	inc    edi
  41213a:	inc    ebp
  41213b:	sbb    ebp,eax
  41213d:	cmovle esi,DWORD PTR [esi]
  412140:	sbb    dl,ch
  412142:	inc    ebp
  412143:	(bad)  
  412144:	adc    al,BYTE PTR [esi+0x5a0f4b5]
  41214a:	sub    esi,DWORD PTR [esi+0xb]
  41214d:	jmp    0x5c19083e
  412152:	jp     0x4120ff
  412154:	push   ecx
  412155:	pushf  
  412156:	les    edi,FWORD PTR [ebx-0x187c86c9]
  41215c:	xor    BYTE PTR [ecx+0x29e7a894],cl
  412162:	test   DWORD PTR [eax],0xc63cdc5f
  412168:	mov    dh,0x90
  41216a:	int    0xce
  41216c:	pop    es
  41216d:	stc    
  41216e:	dec    esp
  41216f:	lods   al,BYTE PTR ds:[esi]
  412170:	mov    bl,0xef
  412172:	fxch   st(1)
  412174:	push   es
  412175:	retf   0x9017
  412178:	int3   
  412179:	jnp    0x4121ad
  41217b:	jmp    0x4121e0
  41217d:	ins    BYTE PTR es:[edi],dx
  41217e:	ins    BYTE PTR es:[edi],dx
  41217f:	or     ecx,DWORD PTR [ebp-0x406abd3f]
  412185:	xor    BYTE PTR [ecx+0x38],dl
  412188:	mov    DWORD PTR [ebx+0x32d64d18],edi
  41218e:	rcl    BYTE PTR [esi+0x64b474bb],1
  412194:	or     DWORD PTR [ebp+ebx*1+0xc],0x42
  412199:	imul   DWORD PTR [edi]
  41219b:	enter  0x1227,0x4c
  41219f:	mov    al,ds:0xacc1c180
  4121a4:	mov    edx,0x2aff8733
  4121a9:	or     BYTE PTR [edx+0x56675d7],bl
  4121af:	jno    0x412136
  4121b1:	xchg   BYTE PTR [esp+ebp*4-0x48aeaa66],al
  4121b8:	jns    0x412157
  4121ba:	fistp  QWORD PTR [eax]
  4121bc:	jns    0x412155
  4121be:	inc    ebp
  4121bf:	sub    eax,0x9fdac6ca
  4121c4:	aam    0x80
  4121c6:	(bad)  
  4121c7:	int3   
  4121c8:	test   eax,0x9ea5247f
  4121cd:	dec    eax
  4121ce:	cmp    edi,DWORD PTR [edi+0x17]
  4121d1:	in     al,dx
  4121d2:	and    al,0x86
  4121d4:	lods   al,BYTE PTR ds:[esi]
  4121d5:	xchg   ebx,eax
  4121d6:	cmp    dl,bh
  4121d8:	inc    eax
  4121d9:	sbb    dh,dh
  4121db:	ret    0xd3a3
  4121de:	xor    DWORD PTR [ebx+0x6703638e],ebx
  4121e4:	imul   edi,DWORD PTR [edx+eiz*2-0x4a111a8d],0x3a2702f4
  4121ef:	xchg   DWORD PTR [esi-0x443b043],esi
  4121f5:	sbb    al,0xab
  4121f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121f8:	test   al,0x81
  4121fa:	(bad)  
  4121fb:	out    dx,al
  4121fc:	pop    edx
  4121fd:	xchg   esi,eax
  4121fe:	aad    0xc8
  412200:	mov    cl,0x7
  412202:	push   ebp
  412203:	push   cs
  412204:	mov    al,ds:0x83a6f601
  412209:	fisub  DWORD PTR [ebx+0x4d3e5ccd]
  41220f:	fbstp  TBYTE PTR [edx]
  412211:	out    0xe7,eax
  412213:	mov    eax,ds:0x6c75b2f3
  412218:	and    BYTE PTR [eax+eax*8+0x5634d161],dh
  41221f:	sbb    al,0x55
  412221:	push   ecx
  412222:	cwde   
  412223:	cmp    BYTE PTR [esp+edi*4],dl
  412226:	rcl    DWORD PTR [edx+eax*1],cl
  412229:	inc    edx
  41222a:	jge    0x4121fb
  41222c:	mov    ecx,0x48cc51f1
  412231:	aam    0x79
  412233:	pop    edi
  412234:	imul   edi,esi,0xffffffa2
  412237:	push   eax
  412238:	aad    0xb6
  41223a:	jmp    0x85b2ab39
  41223f:	xor    al,0x4b
  412241:	out    0xfb,eax
  412243:	sbb    cl,dl
  412245:	retf   
  412246:	or     cl,bl
  412248:	adc    BYTE PTR ds:0x7f9348a9,0x80
  41224f:	ret    
  412250:	test   al,0x85
  412252:	popf   
  412253:	(bad)  
  412255:	jmp    0x41229c
  412257:	push   edx
  412258:	inc    ebp
  412259:	es push ebx
  41225b:	nop
  41225c:	cld    
  41225d:	add    BYTE PTR [eax+esi*1],0x12
  412261:	clc    
  412262:	xchg   esi,eax
  412263:	and    BYTE PTR [eax],dl
  412265:	mov    eax,DWORD PTR [edi-0x70]
  412268:	rcl    BYTE PTR [esi+0x4c],cl
  41226b:	mov    esi,0xb8c62785
  412270:	mov    edx,0xcb797616
  412275:	(bad)  
  412276:	and    BYTE PTR [esi+ecx*4],cl
  412279:	jmp    0xf4fbcc3d
  41227e:	xchg   bl,bh
  412280:	pop    esi
  412281:	sbb    al,0x90
  412283:	lods   eax,DWORD PTR ds:[esi]
  412284:	inc    ecx
  412285:	cli    
  412286:	add    eax,0x2449e6e4
  41228b:	sti    
  41228c:	adc    ebx,DWORD PTR ds:0xe68f8e1f
  412292:	ja     0x412310
  412294:	sbb    DWORD PTR [esi],eax
  412296:	sub    cl,bh
  412298:	call   0x73a425c2
  41229d:	daa    
  41229e:	rcr    ebp,0x73
  4122a1:	gs in  eax,0x18
  4122a4:	shl    BYTE PTR [ecx],1
  4122a6:	xor    BYTE PTR [ecx-0x3eebe959],al
  4122ac:	out    dx,al
  4122ad:	and    ecx,DWORD PTR [edi+eax*1+0x4d731e19]
  4122b4:	dec    edx
  4122b5:	iret   
  4122b6:	or     BYTE PTR [edx+0x3b],0x4d
  4122ba:	shl    bh,1
  4122bc:	fisttp WORD PTR [esi]
  4122be:	add    eax,0xb1dcfbfe
  4122c3:	dec    ecx
  4122c4:	cmp    eax,0x9805b03d
  4122c9:	add    ecx,DWORD PTR [esp+ebx*8+0x69]
  4122cd:	shr    ebp,0x76
  4122d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122d1:	xchg   edx,eax
  4122d2:	outs   dx,DWORD PTR ds:[esi]
  4122d3:	pop    edx
  4122d4:	jle    0x412302
  4122d6:	and    BYTE PTR [eax],bl
  4122d8:	mov    ds:0xd7d3f12,al
  4122dd:	push   0xffffffab
  4122df:	rol    DWORD PTR [ebp+0x22],0xe3
  4122e3:	pushf  
  4122e4:	je     0x412310
  4122e6:	or     DWORD PTR [edx],0xd69c89e7
  4122ec:	inc    eax
  4122ed:	stos   BYTE PTR es:[edi],al
  4122ee:	shl    BYTE PTR [ebx],cl
  4122f0:	mov    esi,0x6d07ddb9
  4122f5:	aam    0xac
  4122f7:	(bad)  
  4122f8:	adc    BYTE PTR [ecx],dh
  4122fa:	push   edi
  4122fb:	out    dx,eax
  4122fc:	or     dl,bh
  4122fe:	into   
  4122ff:	dec    esi
  412300:	fdivr  QWORD PTR [ebp-0x33]
  412303:	aas    
  412304:	xor    DWORD PTR [ecx+0x5bbc3263],esp
  41230a:	sahf   
  41230b:	lods   eax,DWORD PTR ds:[esi]
  41230c:	loop   0x412318
  41230e:	out    0xf0,al
  412310:	daa    
  412311:	and    al,0xe
  412313:	sbb    DWORD PTR [esi-0x57],ebp
  412316:	jne    0x4122ef
  412318:	push   eax
  412319:	xor    DWORD PTR [edx+0x58],0x63ed9f00
  412320:	or     esp,eax
  412322:	add    DWORD PTR [edi+0x17],edx
  412325:	fild   DWORD PTR [ecx-0x39]
  412328:	jp     0x4122ba
  41232a:	push   esp
  41232b:	ret    0xcf85
  41232e:	mov    ds:0x932036ee,al
  412333:	and    esp,DWORD PTR [edx-0x6a976d53]
  412339:	push   ebx
  41233a:	mov    eax,ds:0xaf0f940e
  41233f:	cli    
  412340:	cwde   
  412341:	ins    DWORD PTR es:[edi],dx
  412342:	pop    DWORD PTR [ecx]
  412344:	wbinvd 
  412346:	xchg   esp,eax
  412347:	mov    DWORD PTR [edx],0x57e4af35
  41234d:	pop    esp
  41234e:	mov    bh,0x23
  412350:	sbb    ebx,DWORD PTR ds:0x4b1000d1
  412356:	or     eax,0x4aaec9b4
  41235b:	or     edx,DWORD PTR [eax]
  41235d:	sbb    cl,BYTE PTR [esi]
  41235f:	xor    ecx,esp
  412361:	inc    eax
  412362:	nop
  412363:	call   0x381d:0x59ed99a1
  41236a:	repnz or BYTE PTR ss:[esi+0x179649a5],0x8b
  412373:	push   es
  412374:	add    DWORD PTR ds:0xb4d5a48b,0xffffffad
  41237b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41237c:	xchg   ecx,eax
  41237d:	pop    esp
  41237e:	xchg   ecx,eax
  41237f:	adc    BYTE PTR [edx+0x6489bc86],dh
  412385:	fwait
  412386:	call   0x4a9feaf5
  41238b:	jle    0x412385
  41238d:	stos   DWORD PTR es:[edi],eax
  41238e:	rol    DWORD PTR [eax+0x1c],cl
  412391:	inc    esi
  412392:	jp     0x319dc77b
  412398:	outs   dx,DWORD PTR ds:[esi]
  412399:	ins    DWORD PTR es:[edi],dx
  41239a:	rcr    eax,cl
  41239c:	cld    
  41239d:	jg     0x41237f
  41239f:	ds jge 0x4123a1
  4123a2:	hlt    
  4123a3:	cmc    
  4123a4:	fisubr WORD PTR [edi+0x5e]
  4123a7:	mov    ebx,0xca531dc6
  4123ac:	xchg   BYTE PTR [esi+0x56],dl
  4123af:	(bad)  
  4123b1:	pushf  
  4123b2:	push   esp
  4123b3:	push   cs
  4123b4:	(bad)
  4123b7:	mov    eax,0x7e0c71ff
  4123bc:	pop    ds
  4123bd:	and    al,0x2
  4123bf:	dec    BYTE PTR [edi+0x58]
  4123c2:	(bad)  
  4123c4:	sbb    eax,0xde114fce
  4123c9:	dec    ebp
  4123ca:	push   ds
  4123cb:	call   0x4561ab24
  4123d0:	push   esi
  4123d1:	mov    WORD PTR [edx-0x2],?
  4123d4:	mov    dh,0x46
  4123d6:	mov    al,al
  4123d8:	cmp    BYTE PTR [ebx+0x3e146b63],al
  4123de:	imul   edi,DWORD PTR [edi+0x75a79bf8],0xffffffe4
  4123e5:	mov    ebp,0xf9fb6ef2
  4123ea:	or     esp,DWORD PTR [edi+0x76]
  4123ed:	je     0x41242a
  4123ef:	or     al,bh
  4123f1:	and    DWORD PTR [ecx+edx*1],0xe73acd07
  4123f8:	add    ebx,DWORD PTR cs:[ebx]
  4123fb:	xor    bh,BYTE PTR [esi]
  4123fd:	fcom   QWORD PTR [ebx-0x3b]
  412400:	sub    DWORD PTR [eax+0x14],ecx
  412403:	mov    bh,0xf9
  412405:	pop    es
  412406:	dec    edx
  412407:	xor    BYTE PTR [edx],bh
  412409:	mov    dl,0x79
  41240b:	or     al,dh
  41240d:	push   ebp
  41240e:	jnp    0x41245d
  412410:	jge    0x4123ea
  412412:	dec    edi
  412413:	and    dh,BYTE PTR [edx]
  412415:	(bad)  
  412416:	dec    ebp
  412417:	popf   
  412418:	and    DWORD PTR [edx+0x35],edi
  41241b:	out    dx,eax
  41241c:	jb     0x4123aa
  41241e:	cmp    ecx,DWORD PTR [ebx]
  412420:	mov    ds:0x311be448,eax
  412425:	mov    esp,0xb54831f4
  41242a:	enter  0x95fa,0x63
  41242e:	cli    
  41242f:	enter  0xdecf,0x59
  412433:	mov    ah,0xc1
  412435:	adc    BYTE PTR ds:0x7ae58650,dl
  41243b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41243c:	outs   dx,BYTE PTR ds:[esi]
  41243d:	(bad)  
  41243e:	pushf  
  41243f:	out    0xa0,al
  412441:	push   ecx
  412442:	out    dx,al
  412443:	mov    edi,0x2956ff83
  412448:	push   edx
  412449:	hlt    
  41244a:	shl    esi,1
  41244c:	sar    DWORD PTR [ebx-0x506a2d07],0x5f
  412453:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412454:	adc    eax,0xd8f128fa
  412459:	cmp    al,0x37
  41245b:	push   ebx
  41245c:	ins    BYTE PTR es:[edi],dx
  41245d:	mov    cl,0xc6
  41245f:	dec    ebx
  412460:	mov    DWORD PTR [edi],ebx
  412462:	pop    es
  412463:	aam    0x5
  412465:	mov    eax,ds:0xccb5e014
  41246a:	fldenv [ebx-0x621f3f3f]
  412470:	fucom  st(5)
  412472:	add    DWORD PTR [esi+0x5ef75e7a],0x4d79fbd9
  41247c:	pop    edi
  41247d:	xchg   edx,eax
  41247e:	arpl   WORD PTR [ecx-0x72],di
  412481:	stc    
  412482:	cmp    BYTE PTR [ebp-0x7e6a3781],bh
  412488:	mov    bh,0x9
  41248a:	xor    eax,DWORD PTR [esi-0x64]
  41248d:	stos   BYTE PTR es:[edi],al
  41248e:	or     DWORD PTR ds:0xc54104c3,edi
  412494:	dec    esi
  412495:	fistp  DWORD PTR [esp+edi*4]
  412498:	push   es
  412499:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41249a:	cli    
  41249b:	mov    ds:0x89a6c029,eax
  4124a0:	nop
  4124a1:	jo     0x412432
  4124a3:	icebp  
  4124a4:	inc    eax
  4124a5:	sub    DWORD PTR [esi+ebx*1],esi
  4124a8:	test   al,0x3b
  4124aa:	add    al,0x1
  4124ac:	in     al,0x1
  4124ae:	out    0x38,al
  4124b0:	jae    0x412506
  4124b2:	adc    dh,BYTE PTR [esi-0x4dec62a8]
  4124b8:	popf   
  4124b9:	dec    ecx
  4124ba:	iret   
  4124bb:	(bad)  
  4124bc:	sti    
  4124bd:	(bad)  
  4124be:	out    0xaa,al
  4124c0:	imul   edx,ebx,0xa354b8f8
  4124c6:	jnp    0x4124a4
  4124c8:	push   ecx
  4124c9:	xchg   BYTE PTR [edi+0x30e2da8d],al
  4124cf:	mov    eax,0x689bced
  4124d4:	sbb    DWORD PTR [edx+0x2279ccab],ecx
  4124da:	call   0xa366:0xf512e476
  4124e1:	push   ds
  4124e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124e3:	mov    esp,esi
  4124e5:	pop    ebx
  4124e6:	mov    al,ds:0x507d7020
  4124eb:	xchg   BYTE PTR [edi-0x27],bh
  4124ee:	jbe    0x41254e
  4124f0:	mov    bl,0x8b
  4124f2:	ins    DWORD PTR es:[edi],dx
  4124f3:	mov    bl,0xba
  4124f5:	ffree  st(6)
  4124f7:	mov    ds:0x33a2932a,al
  4124fc:	call   0xdaebdb8b
  412501:	(bad)  
  412502:	out    0x8b,al
  412504:	jge    0x4124be
  412506:	or     bl,BYTE PTR [esi+edx*8]
  412509:	pop    edi
  41250a:	adc    al,0x2a
  41250c:	add    edi,DWORD PTR [edx]
  41250e:	dec    ecx
  41250f:	inc    ebx
  412510:	sub    bh,BYTE PTR [esi+0x28]
  412513:	mov    bl,0x1d
  412515:	jle    0x4124ec
  412517:	xchg   esp,eax
  412518:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412519:	inc    ecx
  41251a:	sub    edi,DWORD PTR [esi]
  41251c:	sbb    eax,0xe243e572
  412521:	push   es
  412522:	mov    WORD PTR [ebx-0x25],cs
  412525:	jns    0x4124a8
  412527:	mov    edx,0xc870b0b2
  41252c:	ret    0x8bf4
  41252f:	mov    edi,0x46f283d5
  412534:	ss or  eax,0xce958c12
  41253a:	sbb    ebx,DWORD PTR [eax+0x35]
  41253d:	jne    0x412513
  41253f:	jle    0x41252b
  412541:	mov    ebp,es
  412543:	inc    ebp
  412544:	scas   eax,DWORD PTR es:[edi]
  412545:	pop    ebp
  412546:	xor    esp,esi
  412548:	fbstp  TBYTE PTR [ebx-0x7e281ef5]
  41254e:	neg    DWORD PTR [ebp-0x997d4bf]
  412554:	mov    ecx,0xdecf85ca
  412559:	aas    
  41255a:	mov    al,ds:0xb5e93ffe
  41255f:	outs   dx,DWORD PTR ds:[esi]
  412560:	dec    esp
  412561:	out    0xd6,al
  412563:	add    eax,0xe1d0061e
  412568:	jo     0x4124ec
  41256a:	das    
  41256b:	stc    
  41256c:	cmp    eax,0x3dabb6e6
  412571:	hlt    
  412572:	xchg   ebx,eax
  412573:	es sbb al,0x9e
  412576:	pop    ecx
  412577:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412578:	lock xlat BYTE PTR ds:[ebx]
  41257a:	mov    al,0xfa
  41257c:	je     0x412595
  41257e:	(bad)  
  41257f:	sub    al,0x93
  412581:	inc    esi
  412582:	js     0x41258e
  412584:	push   ds
  412585:	(bad)  
  412586:	cmp    al,0x70
  412588:	mov    ecx,0x55641b2d
  41258d:	xchg   ebx,eax
  41258e:	sub    al,0x8c
  412590:	mov    al,0xe2
  412592:	jle    0x4125de
  412594:	jno    0x412598
  412596:	fisttp DWORD PTR [edx+0x1aa73cd6]
  41259c:	aad    0x18
  41259e:	sub    BYTE PTR [edi-0x66a71250],0xe7
  4125a5:	pop    es
  4125a6:	sub    al,0x13
  4125a8:	xchg   DWORD PTR [ebp-0x20],ecx
  4125ab:	fwait
  4125ac:	xchg   DWORD PTR [eax+eiz*8],esp
  4125af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125b0:	and    al,0x9b
  4125b2:	mov    ah,0x1d
  4125b4:	daa    
  4125b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125b6:	add    eax,0x41e5a2c2
  4125bb:	mov    DWORD PTR [edi+0x1],edx
  4125be:	aaa    
  4125bf:	jbe    0x412558
  4125c1:	cwde   
  4125c2:	hlt    
  4125c3:	je     0x41258b
  4125c5:	xchg   al,dl
  4125c7:	ror    BYTE PTR [edx],cl
  4125c9:	xchg   ebx,eax
  4125ca:	cmp    si,ax
  4125cd:	push   ds
  4125ce:	pop    es
  4125cf:	loopne 0x41261f
  4125d1:	retf   0xf864
  4125d4:	and    dh,dl
  4125d6:	jle    0x4125a0
  4125d8:	inc    ebx
  4125d9:	aam    0x78
  4125db:	xor    eax,0x803262d4
  4125e0:	into   
  4125e1:	shl    DWORD PTR [ecx],0xf
  4125e4:	mov    ebp,0x7fc0efe6
  4125e9:	stos   BYTE PTR es:[edi],al
  4125ea:	je     0x412628
  4125ec:	xchg   edx,eax
  4125ed:	push   cs
  4125ee:	dec    ebx
  4125ef:	jle    0x4125a1
  4125f1:	xlat   BYTE PTR ds:[ebx]
  4125f2:	mov    DWORD PTR [eax-0x5bae039c],edx
  4125f8:	sbb    bl,BYTE PTR [ecx]
  4125fa:	pop    esp
  4125fb:	fadd   DWORD PTR [edi+0x169bfc7e]
  412601:	dec    ecx
  412602:	xchg   esp,eax
  412603:	xlat   BYTE PTR ds:[ebx]
  412604:	inc    eax
  412605:	out    dx,al
  412606:	std    
  412607:	(bad)  
  412608:	lock jo 0x41263f
  41260b:	jo     0x412662
  41260d:	mov    ecx,0xf8787b07
  412612:	jo     0x412680
  412614:	das    
  412615:	ja     0x4125ac
  412617:	xchg   DWORD PTR [edx],edi
  412619:	lock push ecx
  41261b:	je     0x412673
  41261d:	mov    ebp,0x9988a000
  412622:	ret    
  412623:	ret    0xa3e6
  412626:	test   BYTE PTR [eax],cl
  412628:	jmp    0xd80b:0xb60202c6
  41262f:	adc    BYTE PTR [edi],cl
  412631:	imul   edx,DWORD PTR [ebx],0xffffff81
  412634:	scas   eax,DWORD PTR es:[edi]
  412635:	mov    ah,0x2f
  412637:	fdiv   DWORD PTR [ecx]
  412639:	xor    eax,0xffd5f19b
  41263e:	dec    edi
  41263f:	or     cl,BYTE PTR [ebp+edx*2+0x5bf40869]
  412646:	xor    DWORD PTR [eax-0x451477fe],ebx
  41264c:	xchg   ecx,eax
  41264d:	iret   
  41264e:	in     eax,0x76
  412650:	mov    ds:0xb410520d,al
  412655:	add    bh,BYTE PTR [esi]
  412657:	jl     0x412600
  412659:	pop    esi
  41265a:	sahf   
  41265b:	mov    edx,0x38e9ffde
  412660:	sbb    eax,0x5714dbc9
  412665:	aad    0x57
  412667:	js     0x41266e
  412669:	sbb    esp,ebx
  41266b:	(bad)  
  41266c:	mov    edx,DWORD PTR [ebp+0x11dbc54b]
  412672:	ret    0xb682
  412675:	dec    edx
  412676:	lea    esi,ds:0x540b
  41267b:	push   ecx
  41267c:	loopne 0x41267d
  41267e:	xor    dh,BYTE PTR [edi]
  412680:	lock add DWORD PTR [ecx-0x4e8d9155],ebp
  412687:	sbb    eax,0xde023fe1
  41268c:	aas    
  41268d:	sbb    DWORD PTR ds:0x19f84dc,0xfffffff0
  412694:	js     0x4126dc
  412696:	mov    ds:0x77769f62,al
  41269b:	push   0xffffff84
  41269d:	mov    esi,0x6a5814c7
  4126a2:	(bad)  
  4126a3:	outs   dx,DWORD PTR ds:[esi]
  4126a4:	jbe    0x4126a9
  4126a6:	inc    eax
  4126a7:	dec    ecx
  4126a8:	repz hlt 
  4126aa:	or     DWORD PTR [edi+esi*8+0x27b06aad],0xfffffffa
  4126b2:	(bad)  
  4126b3:	mov    bh,0xba
  4126b5:	ins    BYTE PTR es:[edi],dx
  4126b6:	sar    DWORD PTR [edx+0x78],cl
  4126b9:	jns    0x412697
  4126bb:	into   
  4126bc:	(bad)  [edi]
  4126be:	adc    dl,cl
  4126c0:	(bad)  
  4126c2:	pop    ebx
  4126c3:	mov    ebx,0xdbbb5e0d
  4126c8:	push   0x52f29bc1
  4126cd:	repz sbb esi,DWORD PTR [eax]
  4126d0:	mov    edx,0xa427dc10
  4126d5:	jns    0x4126c1
  4126d7:	mov    ebx,DWORD PTR [ebx-0x36]
  4126da:	push   ss
  4126db:	mov    DWORD PTR [ecx],esi
  4126dd:	call   0x74286029
  4126e2:	and    al,dh
  4126e4:	mov    edi,0x2cd675a2
  4126e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126ea:	dec    esp
  4126eb:	dec    ebp
  4126ec:	fadd   st(3),st
  4126ee:	pop    ss
  4126ef:	and    eax,0xcd20c208
  4126f4:	mov    ch,0xca
  4126f6:	clc    
  4126f7:	cmp    DWORD PTR [ebp+0x26],eax
  4126fa:	adc    DWORD PTR [esi+0x6a],0xffffffcf
  4126fe:	xchg   DWORD PTR [ebx],edx
  412700:	or     bl,BYTE PTR [eax+0x26d010a1]
  412706:	push   0x4b403420
  41270b:	pop    edx
  41270c:	mov    ebp,0x92901277
  412711:	dec    ebx
  412712:	bound  ebp,QWORD PTR [ecx]
  412714:	in     eax,0x56
  412716:	repnz fstp DWORD PTR [eax+eiz*2+0xb1d7f2c]
  41271e:	pop    eax
  41271f:	sbb    bl,BYTE PTR [ebp-0x6d2a956f]
  412725:	pop    ebx
  412726:	outs   dx,BYTE PTR ds:[esi]
  412727:	and    bl,0xb0
  41272a:	test   BYTE PTR [edi+0x46],bl
  41272d:	mov    edx,ebx
  41272f:	test   BYTE PTR [edi],ah
  412731:	lds    esp,FWORD PTR [edi]
  412733:	in     eax,dx
  412734:	lahf   
  412735:	mov    al,ds:0xcdb5c87d
  41273a:	mov    cl,0xc2
  41273c:	mov    ecx,0x250c3350
  412741:	push   edx
  412742:	mov    ds:0x1c2cd304,eax
  412747:	imul   BYTE PTR [esp+ecx*4-0x319f3030]
  41274e:	aaa    
  41274f:	sahf   
  412750:	inc    edx
  412751:	add    DWORD PTR [ebx-0x78e4487f],edi
  412757:	loopne 0x412789
  412759:	in     eax,dx
  41275a:	out    dx,al
  41275b:	call   0x559a:0x9a91dbe7
  412762:	and    cl,dl
  412764:	fs in  eax,dx
  412766:	pushf  
  412767:	jmp    0x41273a
  412769:	sbb    ah,ah
  41276b:	aad    0x70
  41276d:	mov    ?,WORD PTR [esi+0x1b73d547]
  412773:	fst    QWORD PTR [ebx+eax*4]
  412776:	cli    
  412777:	cli    
  412778:	or     al,0x31
  41277b:	dec    eax
  41277c:	ins    BYTE PTR es:[edi],dx
  41277d:	rcr    ch,1
  41277f:	mov    eax,ds:0xa5db70b6
  412784:	mov    eax,ds:0x188324c1
  412789:	pop    ds
  41278a:	dec    ecx
  41278b:	mov    dl,0x83
  41278d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41278e:	out    dx,al
  41278f:	mov    ch,0xd2
  412791:	pop    esi
  412792:	sub    al,0xaa
  412794:	pop    esi
  412795:	clc    
  412796:	push   ebx
  412797:	pop    ecx
  412798:	sub    DWORD PTR [ebx+0x1a],ebx
  41279b:	lock push es
  41279d:	(bad)  
  41279e:	jne    0x412758
  4127a0:	outs   dx,BYTE PTR ds:[esi]
  4127a1:	mov    bh,0x5b
  4127a3:	repz mov ah,0x1f
  4127a6:	aam    0xe2
  4127a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127a9:	jno    0x412824
  4127ab:	fcom   st(3)
  4127ad:	mov    ds:0x44235c3c,eax
  4127b2:	dec    ecx
  4127b3:	jmp    0x4127e3
  4127b5:	and    al,cl
  4127b7:	pop    ds
  4127b8:	scas   al,BYTE PTR es:[edi]
  4127b9:	call   0xa1e93445
  4127be:	pop    eax
  4127bf:	fs cli 
  4127c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127c2:	xor    dh,dh
  4127c4:	push   cs
  4127c5:	das    
  4127c6:	test   eax,0xe37d45f3
  4127cc:	mov    ebp,0x63302d0c
  4127d1:	fbstp  TBYTE PTR [edi-0x5aa73721]
  4127d7:	pop    esp
  4127d8:	hlt    
  4127d9:	icebp  
  4127da:	in     eax,dx
  4127db:	add    DWORD PTR [edi],esp
  4127dd:	jae    0x4127ec
  4127df:	push   cs
  4127e0:	pop    ecx
  4127e1:	cdq    
  4127e2:	mov    bl,0x1f
  4127e4:	or     DWORD PTR [esi+0x59],eax
  4127e7:	inc    ebx
  4127e8:	jg     0x4127be
  4127ea:	push   ebp
  4127eb:	push   ecx
  4127ec:	jge    0x4127fc
  4127ee:	(bad)  
  4127ef:	ins    BYTE PTR es:[edi],dx
  4127f0:	es aam 0xdb
  4127f3:	sub    DWORD PTR [esi],edi
  4127f5:	outs   dx,BYTE PTR ds:[esi]
  4127f6:	js     0x4127f4
  4127f8:	lds    ecx,FWORD PTR [edx+0x46]
  4127fb:	fnsave [eax+ecx*8]
  4127fe:	retf   0x1d8
  412801:	fidivr DWORD PTR [edx+0x3ad32bda]
  412807:	push   es
  412808:	stc    
  412809:	xor    bh,BYTE PTR [eax-0x68]
  41280c:	inc    esi
  41280d:	inc    eax
  41280e:	retf   
  41280f:	mov    edi,0x2886f7f
  412814:	push   ss
  412815:	retf   
  412816:	popa   
  412817:	inc    eax
  412818:	push   es
  412819:	mov    WORD PTR [ebp-0x7b],?
  41281c:	push   ebx
  41281d:	stos   DWORD PTR es:[edi],eax
  41281e:	shr    DWORD PTR [esi+ebp*8+0x40],0x6a
  412823:	jbe    0x4127a5
  412825:	das    
  412826:	dec    esi
  412827:	lods   al,BYTE PTR ds:[esi]
  412828:	es repz xor eax,0xf13b4e3
  41282f:	mov    eax,DWORD PTR [edi]
  412831:	push   ss
  412832:	cmp    al,0xae
  412834:	outs   dx,DWORD PTR ds:[esi]
  412835:	icebp  
  412836:	sub    eax,0x70e7b766
  41283b:	cmp    eax,0xfba4a083
  412840:	sbb    dh,BYTE PTR [edx+0x68b3c4bd]
  412846:	cmc    
  412847:	rol    DWORD PTR [ecx],1
  412849:	adc    BYTE PTR [esi-0x6d],cl
  41284c:	sub    BYTE PTR [edx+0x74],0x94
  412850:	sbb    eax,0x776b75a
  412855:	jl     0x412883
  412857:	or     BYTE PTR [ecx],ah
  412859:	or     eax,0xc29b1cf6
  41285e:	inc    eax
  41285f:	jb     0x412878
  412861:	xor    ah,dh
  412863:	xor    DWORD PTR [esp+ecx*8+0x64],edi
  412867:	xchg   DWORD PTR [eax+0x13],esi
  41286a:	mov    ?,WORD PTR [ebx]
  41286c:	add    eax,eax
  41286e:	fst    QWORD PTR [ebp+0xe]
  412871:	mov    ebx,0x2869272f
  412876:	les    ebp,FWORD PTR [ecx-0x5fd51d23]
  41287c:	mov    cs,WORD PTR [ebp+0x50976bd0]
  412882:	adc    ch,BYTE PTR [edi-0x74b5d341]
  412888:	and    dh,cl
  41288a:	ret    0x3600
  41288d:	push   0x28778963
  412892:	add    eax,0x11244f37
  412897:	xor    DWORD PTR [edi],0xbc73461e
  41289d:	inc    BYTE PTR [esi]
  41289f:	fdiv   st,st(2)
  4128a1:	lahf   
  4128a2:	in     eax,0xc
  4128a4:	int3   
  4128a5:	mov    esi,0xd20977e7
  4128aa:	(bad)  [edx+0x49792d24]
  4128b0:	gs push eax
  4128b2:	sub    eax,0x2f8e2d6c
  4128b7:	ret    0x62d2
  4128ba:	mov    al,0x2b
  4128bc:	and    eax,DWORD PTR [eax]
  4128be:	pusha  
  4128bf:	jmp    0x3c513765
  4128c4:	retf   
  4128c5:	test   eax,0xcadc8beb
  4128ca:	int    0x94
  4128cc:	int    0x5d
  4128ce:	sbb    al,0x91
  4128d0:	sti    
  4128d1:	inc    esi
  4128d2:	adc    eax,0x6dd586cb
  4128d8:	nop
  4128d9:	sbb    DWORD PTR [edi+0x1597853b],eax
  4128df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128e0:	sub    ebp,DWORD PTR [edx]
  4128e2:	sahf   
  4128e3:	sub    BYTE PTR [ebx-0x3],bl
  4128e6:	(bad)  
  4128e7:	(bad)  
  4128e8:	fidivr WORD PTR [ecx+eax*2-0x707b948d]
  4128ef:	fistp  WORD PTR [edi+0x4d7d644e]
  4128f5:	loop   0x4128e8
  4128f7:	jmp    0x3fbd:0xdcd09656
  4128fe:	(bad)  [edi]
  412900:	add    DWORD PTR [edi-0x5c09995a],0xb18db9d1
  41290a:	hlt    
  41290b:	fldenv [ecx+0x40]
  41290e:	nop
  41290f:	jmp    0x412950
  412911:	(bad)  
  412912:	xchg   ecx,eax
  412913:	cmp    BYTE PTR [esi+0x16],0x41
  412917:	and    BYTE PTR [ebx],dl
  412919:	rol    DWORD PTR [ecx-0x10],1
  41291c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41291d:	xor    ah,BYTE PTR [eax+0x3b]
  412920:	or     DWORD PTR [edi],edx
  412922:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  412924:	add    edx,DWORD PTR ds:0x4c8341f2
  41292a:	into   
  41292b:	sahf   
  41292c:	mov    ebx,0xb5185f51
  412931:	out    dx,al
  412932:	mov    es,WORD PTR [edx]
  412934:	hlt    
  412935:	call   0x423c5a0
  41293a:	pop    esp
  41293b:	(bad)  
  41293c:	stc    
  41293d:	push   ss
  41293e:	mov    al,ds:0xafcf2357
  412943:	ror    DWORD PTR [edi],cl
  412945:	fmul   DWORD PTR [ebx+0x7d]
  412948:	mov    al,ds:0x4db61303
  41294d:	or     al,0xef
  41294f:	(bad)  
  412951:	mov    al,0xfb
  412953:	out    dx,eax
  412954:	int3   
  412955:	jge    0x4129cc
  412957:	test   eax,0xfbe6bf94
  41295c:	push   esp
  41295d:	test   bh,ch
  41295f:	sar    BYTE PTR [esp+eiz*4-0x59],1
  412963:	icebp  
  412964:	cwde   
  412965:	imul   esi,DWORD PTR [ecx+eiz*8+0xb],0xa2a2b4da
  41296d:	arpl   bp,cx
  41296f:	icebp  
  412970:	aaa    
  412971:	mov    al,0xf2
  412973:	test   eax,0xaf34fb33
  412978:	scas   eax,DWORD PTR es:[edi]
  412979:	or     al,0x71
  41297b:	push   ebp
  41297c:	mov    ds:0x9acec699,al
  412981:	aam    0xa4
  412983:	sbb    eax,DWORD PTR [edx-0x25]
  412986:	(bad)  
  412988:	ss mov eax,0xa73566c8
  41298e:	jle    0x4129ca
  412990:	inc    ecx
  412991:	dec    edi
  412992:	fbstp  TBYTE PTR [eax-0x3a]
  412995:	es cld 
  412997:	adc    esp,DWORD PTR [edx]
  412999:	ins    DWORD PTR es:[edi],dx
  41299a:	sahf   
  41299b:	or     eax,0xa7f512ad
  4129a0:	enter  0xf1c,0xd1
  4129a4:	mov    bh,0xb5
  4129a6:	jg     0x412993
  4129a8:	gs pushf 
  4129aa:	xor    eax,0x8dcc2442
  4129af:	dec    eax
  4129b0:	stos   DWORD PTR es:[edi],eax
  4129b1:	cmp    edi,eax
  4129b3:	sbb    al,0xbc
  4129b5:	mov    dl,bl
  4129b7:	lds    ecx,FWORD PTR [eax-0x1d]
  4129ba:	cli    
  4129bb:	dec    esi
  4129bc:	dec    BYTE PTR [ebp+0x27c0d5bf]
  4129c2:	fisub  DWORD PTR [ebx*4-0x4b108493]
  4129c9:	(bad)  
  4129ca:	jo     0x41296d
  4129cc:	and    DWORD PTR [esi-0x21],0xffffff81
  4129d0:	add    ebp,DWORD PTR [edi]
  4129d2:	mov    ecx,0xdd2d7f46
  4129d7:	call   0x5b0b56cf
  4129dc:	call   0x78b1:0xd5c3d05c
  4129e3:	mov    BYTE PTR [ebx-0x760180ee],bl
  4129e9:	(bad)  
  4129eb:	dec    edi
  4129ec:	jmp    0x4a24:0x485a223b
  4129f3:	hlt    
  4129f4:	int3   
  4129f5:	jo     0x412a0e
  4129f7:	push   cs
  4129f8:	add    al,0x54
  4129fa:	add    dh,ah
  4129fc:	out    0xc6,al
  4129fe:	jnp    0x412a3e
  412a00:	mov    ds:0x44ef3898,eax
  412a05:	adc    esp,DWORD PTR [esi+0x11]
  412a08:	jmp    0x412a5d
  412a0a:	in     al,dx
  412a0b:	js     0x4129b9
  412a0d:	fwait
  412a0e:	jg     0x4129b6
  412a10:	push   cs
  412a11:	sbb    BYTE PTR [ecx],ch
  412a13:	nop
  412a14:	pop    eax
  412a15:	aaa    
  412a16:	(bad)  
  412a18:	xor    al,0xe
  412a1a:	mov    ds:0x9797c98a,al
  412a1f:	jae    0x412a26
  412a21:	or     dl,BYTE PTR [edx]
  412a23:	xor    DWORD PTR [edi+0x9],eax
  412a26:	rcr    ecx,cl
  412a28:	mov    ds:0x61da8d94,al
  412a2d:	push   0x46d86e7b
  412a32:	xchg   ecx,eax
  412a33:	cmp    BYTE PTR [eax+0x79],al
  412a36:	repnz loop 0x412a63
  412a39:	add    DWORD PTR [ecx+eax*4],0x8c6312c0
  412a40:	inc    BYTE PTR ds:0xc208680c
  412a46:	mov    ecx,0x6bce143e
  412a4b:	call   DWORD PTR [esi+0x79]
  412a4e:	das    
  412a4f:	or     eax,0x66dd43f3
  412a54:	xchg   ebp,eax
  412a55:	mov    ch,0x91
  412a57:	scas   eax,DWORD PTR es:[edi]
  412a58:	retf   0xb9a3
  412a5b:	xchg   esi,eax
  412a5c:	and    dl,dh
  412a5e:	mov    bl,0x9f
  412a60:	sbb    BYTE PTR [ecx],dh
  412a62:	std    
  412a63:	fcomip st,st(1)
  412a65:	sub    BYTE PTR [esi-0x5bbd2b27],bh
  412a6b:	pusha  
  412a6c:	jb     0x412a88
  412a6e:	(bad)  [esi]
  412a70:	inc    ebx
  412a71:	xor    bh,BYTE PTR [ecx+eax*4]
  412a74:	lock es call 0x4a8ec581
  412a7b:	jo     0x412a4f
  412a7d:	sbb    BYTE PTR [esi],dl
  412a7f:	lods   al,BYTE PTR ds:[esi]
  412a80:	test   DWORD PTR [ecx+esi*2],0x7c52dd97
  412a87:	cmc    
  412a88:	pop    ebp
  412a89:	or     dl,BYTE PTR [esi+0x16]
  412a8c:	add    DWORD PTR [eax],0x33
  412a8f:	xchg   esi,eax
  412a90:	out    dx,al
  412a91:	sbb    ch,ch
  412a93:	push   eax
  412a94:	xor    dl,BYTE PTR [ecx+0x2]
  412a97:	dec    ecx
  412a98:	add    DWORD PTR [eax+eax*1],edi
  412a9b:	repz sbb al,0xee
  412a9e:	xchg   bp,ax
  412aa0:	and    al,0xc1
  412aa2:	sub    ah,BYTE PTR [eax+ebx*2]
  412aa5:	xlat   BYTE PTR ds:[ebx]
  412aa6:	add    ebp,DWORD PTR ds:0xa2307cd7
  412aac:	out    dx,eax
  412aad:	dec    esi
  412aae:	mov    bl,cl
  412ab0:	out    dx,al
  412ab1:	add    DWORD PTR [eax-0x44],ecx
  412ab4:	dec    ebx
  412ab5:	loope  0x412acc
  412ab7:	cs stos BYTE PTR es:[edi],al
  412ab9:	dec    ebp
  412aba:	mov    ah,0x70
  412abc:	mov    ebx,edx
  412abe:	lock leave 
  412ac0:	or     eax,0xf1edd11f
  412ac5:	pop    ds
  412ac6:	fs out 0xc8,eax
  412ac9:	sahf   
  412aca:	popa   
  412acb:	mov    eax,DWORD PTR [ecx+0x98382a2]
  412ad1:	mov    edi,0x8ae2b32b
  412ad6:	or     eax,0xa94b51ff
  412adb:	xor    esp,ecx
  412add:	ret    
  412ade:	out    dx,eax
  412adf:	mov    ah,0x1c
  412ae1:	loop   0x412adf
  412ae3:	popf   
  412ae4:	mov    al,ds:0x9625c4fe
  412ae9:	inc    esi
  412aea:	mov    edx,0x2483a020
  412aef:	or     edi,DWORD PTR [ecx]
  412af1:	es popf 
  412af3:	add    eax,0x65a56538
  412af8:	lahf   
  412af9:	push   ds
  412afa:	cmp    ch,BYTE PTR [ebx-0x2c]
  412afd:	and    al,0x18
  412aff:	jmp    0x412add
  412b01:	into   
  412b02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b03:	or     BYTE PTR [edx],al
  412b05:	add    BYTE PTR ds:0x9355ebed,0x67
  412b0c:	jmp    0xfaaf:0x1bf9f17
  412b13:	or     BYTE PTR [esi-0x7],0xdf
  412b17:	xchg   ebx,eax
  412b18:	sbb    esp,eax
  412b1a:	retf   0xe9
  412b1d:	inc    edi
  412b1e:	sahf   
  412b1f:	add    ebp,esi
  412b21:	push   edx
  412b22:	fincstp 
  412b24:	mov    ebx,0x6228c5e5
  412b29:	fist   WORD PTR [edi-0x46654ad7]
  412b2f:	or     BYTE PTR [ebx-0x5c],al
  412b32:	test   eax,0x30fdaad2
  412b37:	inc    ebx
  412b38:	dec    edx
  412b39:	int3   
  412b3a:	mov    ds:0xbd17c831,eax
  412b3f:	jecxz  0x412b12
  412b41:	aas    
  412b42:	mov    ecx,0x6f3c06fb
  412b47:	aad    0x76
  412b49:	retf   0x300a
  412b4c:	aas    
  412b4d:	sbb    esp,DWORD PTR [eax-0x2]
  412b50:	dec    edx
  412b51:	jecxz  0x412b26
  412b53:	mov    al,ds:0x706cc126
  412b58:	inc    ebp
  412b59:	inc    ecx
  412b5a:	lock stc 
  412b5c:	push   0x7c
  412b5e:	mov    ds:0xfe25e84e,eax
  412b63:	adc    dh,BYTE PTR [edx-0x72ec3a74]
  412b69:	mov    al,ds:0x4f8a2a7b
  412b6e:	scas   al,BYTE PTR es:[edi]
  412b6f:	add    bh,ah
  412b71:	or     BYTE PTR [edx-0x22],ah
  412b74:	jne    0x412be7
  412b76:	cmc    
  412b77:	push   edx
  412b78:	adc    eax,DWORD PTR [ecx]
  412b7a:	mov    ebx,0x127ecb66
  412b7f:	inc    ebp
  412b80:	fld    TBYTE PTR [esi]
  412b82:	arpl   WORD PTR [eax],si
  412b84:	push   0xde6604ea
  412b89:	pusha  
  412b8a:	push   es
  412b8b:	aad    0x67
  412b8d:	push   0x9fe25cd9
  412b92:	lods   al,BYTE PTR ds:[esi]
  412b93:	pop    es
  412b94:	mov    al,0x67
  412b96:	xchg   edx,eax
  412b97:	stos   DWORD PTR es:[edi],eax
  412b98:	push   ds
  412b99:	jmp    0x412bb7
  412b9b:	sub    edx,DWORD PTR [ebp-0x6272fa17]
  412ba1:	jae    0x412b81
  412ba3:	mov    dl,0x6e
  412ba5:	in     eax,dx
  412ba6:	and    al,0x24
  412ba8:	dec    eax
  412ba9:	psubd  mm6,mm4
  412bac:	cmp    BYTE PTR [eax-0x27],bh
  412baf:	shl    BYTE PTR [eax],1
  412bb1:	(bad)  
  412bb2:	call   0xa2152ad1
  412bb7:	int    0x2e
  412bb9:	push   ebp
  412bba:	gs (bad) 
  412bbc:	cmp    eax,0x799fc0d8
  412bc1:	mov    al,BYTE PTR [edx]
  412bc3:	std    
  412bc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412bc5:	dec    eax
  412bc6:	lock mov ax,0x6240
  412bcb:	adc    al,0x28
  412bcd:	fild   WORD PTR ds:0xd367abf7
  412bd3:	sub    al,0x5d
  412bd5:	jbe    0x412bf6
  412bd7:	clc    
  412bd8:	xchg   edi,eax
  412bd9:	xchg   edi,eax
  412bda:	add    DWORD PTR [esi],ebx
  412bdc:	js     0x412b8d
  412bde:	clc    
  412bdf:	outs   dx,BYTE PTR ds:[esi]
  412be0:	dec    esi
  412be1:	xchg   ecx,eax
  412be2:	cmp    ebx,DWORD PTR [edi-0x444d6aae]
  412be8:	(bad)  
  412bea:	and    bl,al
  412bec:	mov    bl,0xc0
  412bee:	jle    0x412c32
  412bf0:	add    ecx,DWORD PTR [ebx+0x3b40bb00]
  412bf6:	es pop eax
  412bf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bf9:	add    eax,0x20561c1
  412bfe:	inc    esi
  412bff:	or     DWORD PTR [ecx-0x67],ebx
  412c02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c03:	outs   dx,BYTE PTR ds:[esi]
  412c04:	cmp    dh,ch
  412c06:	data16 or al,0xd0
  412c09:	xor    esp,DWORD PTR [ecx+0x15]
  412c0c:	cs push ebx
  412c0e:	sbb    DWORD PTR [eax+0x78177cb1],0xffffffa9
  412c15:	mov    ecx,ebx
  412c17:	jae    0x412c1c
  412c19:	outs   dx,BYTE PTR ds:[esi]
  412c1a:	fcom   QWORD PTR [edx]
  412c1c:	jecxz  0x412ba7
  412c1e:	in     al,dx
  412c1f:	adc    BYTE PTR [edx],0xb4
  412c22:	dec    esi
  412c23:	pop    eax
  412c24:	fwait
  412c25:	outs   dx,DWORD PTR ds:[esi]
  412c26:	addr16 gs or al,0xb9
  412c2a:	mov    bl,0xe3
  412c2c:	outs   dx,WORD PTR es:[si]
  412c30:	push   cs
  412c31:	jmp    0xf0e4e6b5
  412c36:	shl    edx,1
  412c38:	mov    al,ds:0x80830110
  412c3d:	(bad)  
  412c40:	inc    eax
  412c41:	and    al,0xd6
  412c43:	sbb    edx,DWORD PTR [ebp+0x48eeb6b7]
  412c49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c4a:	stc    
  412c4b:	adc    BYTE PTR ds:0x1cee5f7,dl
  412c51:	mov    eax,0xc0549e42
  412c56:	pop    ecx
  412c57:	fst    DWORD PTR ds:[ecx]
  412c5a:	adc    al,0x3a
  412c5c:	in     eax,0x12
  412c5e:	loop   0x412ccc
  412c60:	mov    al,0x3b
  412c62:	popa   
  412c63:	sahf   
  412c64:	aas    
  412c65:	sub    BYTE PTR [ebp+0x34905d5b],al
  412c6b:	repnz int 0xdd
  412c6e:	xor    DWORD PTR [eax],ebp
  412c70:	outs   dx,DWORD PTR ds:[esi]
  412c71:	inc    esp
  412c72:	or     DWORD PTR [ebx+0x52e6bad3],0x2
  412c79:	inc    esp
  412c7a:	or     eax,0x6b6e48d3
  412c7f:	(bad)  
  412c80:	(bad)  
  412c82:	mov    BYTE PTR [esi],0x7f
  412c85:	pop    eax
  412c86:	dec    esp
  412c87:	jp     0x412cd0
  412c89:	fisub  DWORD PTR [edx-0xe32b61f]
  412c8f:	es mov edi,0xee35cd90
  412c95:	add    eax,0xa2cc166c
  412c9a:	daa    
  412c9b:	adc    eax,0xf193a180
  412ca0:	inc    ecx
  412ca1:	adc    al,0xef
  412ca3:	aas    
  412ca4:	mov    ah,0x2c
  412ca6:	stos   BYTE PTR es:[edi],al
  412ca7:	loope  0x412c67
  412ca9:	loop   0x412c32
  412cab:	test   BYTE PTR [eax-0x80],ah
  412cae:	inc    ebp
  412caf:	or     ah,BYTE PTR [edi]
  412cb1:	scas   al,BYTE PTR es:[edi]
  412cb2:	xchg   esp,eax
  412cb3:	fstp   DWORD PTR [ebp+0x54d03f01]
  412cb9:	cmp    DWORD PTR [bp+di],ebx
  412cbc:	pop    es
  412cbd:	scas   eax,DWORD PTR es:[edi]
  412cbe:	jbe    0x412d32
  412cc0:	int    0xed
  412cc2:	sub    al,0xc0
  412cc4:	cmp    eax,0x5fd089e2
  412cc9:	pop    esi
  412cca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ccb:	jecxz  0x412cf2
  412ccd:	imul   esp,DWORD PTR [esi-0x53ee5955],0x245cd40b
  412cd7:	push   eax
  412cd8:	lods   eax,DWORD PTR cs:[esi]
  412cda:	mov    ah,0xc
  412cdc:	add    esi,ebx
  412cde:	ss mov ah,0x7
  412ce1:	(bad)  
  412ce2:	adc    BYTE PTR [esi-0x1a2ed9b9],ah
  412ce8:	data16 mov bl,0x66
  412ceb:	lods   eax,DWORD PTR ds:[esi]
  412cec:	push   cs
  412ced:	sbb    al,0xcf
  412cef:	push   0x7b
  412cf1:	call   0xdf89:0xb2df714b
  412cf8:	and    al,BYTE PTR ds:0x91ee2036
  412cfe:	pop    ss
  412cff:	lods   eax,DWORD PTR ds:[esi]
  412d00:	dec    BYTE PTR [ebx+edi*2+0x4e0290c4]
  412d07:	xchg   ebx,eax
  412d08:	jnp    0x412d2a
  412d0a:	lahf   
  412d0b:	mov    ecx,0x283c3384
  412d10:	mov    ds:0xd7ca919a,eax
  412d15:	hlt    
  412d16:	xchg   ebx,eax
  412d17:	and    DWORD PTR [edx],ebp
  412d19:	mov    bh,0xc4
  412d1b:	or     bh,BYTE PTR [edx]
  412d1d:	clc    
  412d1e:	pop    esi
  412d1f:	push   0xf48bb5f5
  412d24:	jbe    0x412d0b
  412d26:	push   ecx
  412d27:	push   ss
  412d28:	pop    esi
  412d29:	push   ebx
  412d2a:	lea    ebx,[ebx]
  412d2c:	aaa    
  412d2d:	push   esp
  412d2e:	adc    al,0xc9
  412d30:	leave  
  412d31:	mov    ebx,ebp
  412d33:	mov    ?,ebx
  412d35:	dec    ecx
  412d36:	cmp    eax,DWORD PTR [ebx]
  412d38:	and    bh,ah
  412d3a:	jno    0x412d35
  412d3c:	pop    edi
  412d3d:	popa   
  412d3e:	ins    BYTE PTR es:[edi],dx
  412d3f:	out    dx,al
  412d40:	loope  0x412da4
  412d42:	hlt    
  412d43:	jmp    0x412d49
  412d45:	nop
  412d46:	jno    0x412dba
  412d48:	sub    esp,esi
  412d4a:	icebp  
  412d4b:	cmp    eax,DWORD PTR [ebp+0x7d]
  412d4e:	sbb    BYTE PTR [esi+0x43],cl
  412d51:	and    cx,sp
  412d54:	ror    DWORD PTR [esi+esi*1-0x149aea6e],0x7f
  412d5c:	xor    BYTE PTR [ebp+0x67],ah
  412d5f:	mov    eax,ds:0xbd6634ac
  412d64:	ret    0xf3fa
  412d67:	ror    BYTE PTR [eax-0x4e32b4e9],0x39
  412d6e:	add    al,0x14
  412d70:	xor    BYTE PTR [eax],dh
  412d72:	jne    0x412d8a
  412d74:	push   edx
  412d75:	cld    
  412d76:	rol    DWORD PTR [eax-0x6f],cl
  412d79:	aas    
  412d7a:	mov    dh,0x4
  412d7c:	fs in  eax,dx
  412d7e:	and    ah,al
  412d80:	adc    eax,0x52d3ca3a
  412d85:	ret    0xb111
  412d88:	add    al,0x65
  412d8a:	mov    dh,0xf3
  412d8c:	(bad)  
  412d8d:	sar    bl,cl
  412d8f:	dec    edi
  412d90:	scas   al,BYTE PTR es:[edi]
  412d91:	rcl    BYTE PTR [ebx+0x38941e6f],cl
  412d97:	and    al,0x6a
  412d99:	sbb    al,0x87
  412d9b:	fst    st(1)
  412d9d:	cmova  ecx,DWORD PTR [ecx+0x25]
  412da1:	rcl    bl,0x11
  412da4:	test   BYTE PTR [esp+esi*2+0x74],bh
  412da8:	mov    al,ds:0x67085869
  412dad:	sub    esi,DWORD PTR [esp+edx*1-0x457a60e]
  412db4:	das    
  412db5:	imul   eax,DWORD PTR [eax-0x706e8142],0xc893a608
  412dbf:	rol    BYTE PTR [edi+eax*8-0x35],cl
  412dc3:	xchg   ecx,eax
  412dc4:	dec    esp
  412dc5:	fidiv  WORD PTR [ebx-0x5a9d7bd6]
  412dcb:	rol    BYTE PTR [ecx],cl
  412dcd:	js     0x412e4c
  412dcf:	fucomip st,st(1)
  412dd1:	ds aas 
  412dd3:	test   DWORD PTR [edx],esp
  412dd5:	push   edx
  412dd6:	mov    al,0x8
  412dd8:	adc    al,0xef
  412dda:	loope  0x412e46
  412ddc:	jmp    0xfde90653
  412de1:	xor    DWORD PTR [ebp-0x2a4a4b0],ebp
  412de7:	push   esp
  412de8:	jns    0x412e3d
  412dea:	mov    esp,0x2d41d184
  412def:	out    0x12,eax
  412df1:	cld    
  412df2:	or     DWORD PTR [eax-0x5f],esp
  412df5:	pop    edi
  412df6:	nop
  412df7:	stos   DWORD PTR es:[edi],eax
  412df8:	int    0x45
  412dfa:	add    DWORD PTR [eax+0x7c],0x29
  412dfe:	cmp    BYTE PTR [esi+0x3f],ah
  412e01:	push   cs
  412e02:	push   edx
  412e03:	dec    edi
  412e04:	lahf   
  412e05:	popf   
  412e06:	fwait
  412e07:	lods   al,BYTE PTR ds:[esi]
  412e08:	xor    eax,0x879ba572
  412e0d:	push   esi
  412e0e:	fs add al,0xda
  412e11:	or     esp,esi
  412e13:	push   ebx
  412e14:	xchg   ecx,eax
  412e15:	add    DWORD PTR [esi+ebx*8],ebx
  412e18:	lods   al,BYTE PTR ds:[esi]
  412e19:	dec    esp
  412e1a:	js     0x412dd6
  412e1c:	jbe    0x412dff
  412e1e:	fidivr DWORD PTR [ebp-0x45]
  412e21:	inc    esp
  412e22:	rcr    BYTE PTR [ebx],1
  412e24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e25:	add    DWORD PTR [ebp+0x63cb39c7],ecx
  412e2b:	fstp   st(4)
  412e2d:	scas   eax,DWORD PTR es:[edi]
  412e2e:	in     al,0xd5
  412e30:	mov    ds:0xad3e8d3c,eax
  412e35:	js     0x412e7f
  412e37:	imul   ebx,ecx,0x7f
  412e3a:	mov    edi,0xe86369f6
  412e3f:	mov    gs,edi
  412e41:	inc    edi
  412e42:	push   ebp
  412e43:	dec    edx
  412e44:	xor    ch,0x49
  412e47:	or     eax,0xf2785d50
  412e4c:	leave  
  412e4d:	mov    BYTE PTR [ebx],ah
  412e4f:	gs in  al,0xa9
  412e52:	ins    BYTE PTR es:[edi],dx
  412e53:	pop    esi
  412e54:	aas    
  412e55:	dec    edi
  412e56:	aaa    
  412e57:	mov    edi,0x29495d0e
  412e5c:	push   ss
  412e5d:	daa    
  412e5e:	jo     0x412ec3
  412e60:	mov    al,BYTE PTR [eax]
  412e62:	push   0xffffffe1
  412e64:	sub    DWORD PTR [edx+0x47bb7b0d],ecx
  412e6a:	mov    ebp,0xbfaf8d98
  412e6f:	(bad)  
  412e70:	dec    ebp
  412e71:	pop    ss
  412e72:	jmp    FWORD PTR [ecx]
  412e74:	push   esp
  412e75:	push   esi
  412e76:	or     dl,BYTE PTR [ecx+eax*4+0x2561549]
  412e7d:	push   DWORD PTR [eax+0x5d]
  412e80:	pusha  
  412e81:	je     0x412ee8
  412e83:	sbb    eax,0xaa719c7a
  412e88:	mov    edx,0xd2723af
  412e8d:	mov    bl,bl
  412e8f:	ins    DWORD PTR es:[edi],dx
  412e90:	sub    al,0xc1
  412e92:	pop    ds
  412e93:	and    ebp,edi
  412e95:	int    0x7c
  412e97:	dec    eax
  412e98:	xchg   BYTE PTR [eax+0x27],dl
  412e9b:	(bad)  
  412e9d:	jbe    0x412f04
  412e9f:	fs test eax,0x2a30a85d
  412ea5:	lock xchg ebp,eax
  412ea7:	and    eax,0x4048f33a
  412eac:	cmp    al,0x85
  412eae:	xor    esp,DWORD PTR [ebp+0x6f79c59c]
  412eb4:	jecxz  0x412e76
  412eb6:	into   
  412eb7:	sbb    DWORD PTR [ebp+0x28],esp
  412eba:	push   es
  412ebb:	jmp    0x2f715037
  412ec0:	and    ecx,ecx
  412ec2:	mov    ch,0xf5
  412ec4:	add    DWORD PTR ds:0x12143b29,eax
  412eca:	(bad)  
  412ecb:	xchg   ebp,eax
  412ecc:	mov    BYTE PTR fs:[ecx+0x1be73d26],bh
  412ed3:	and    ecx,DWORD PTR [ecx+edx*4+0x735a8dba]
  412eda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412edb:	aas    
  412edc:	test   al,0x1a
  412ede:	repnz cs ror esi,cl
  412ee2:	jb     0x412f2a
  412ee4:	arpl   WORD PTR [ebp+eiz*8-0x3ddbd868],ax
  412eeb:	paddusw mm7,QWORD PTR [eax*1-0x776bc243]
  412ef3:	pop    esp
  412ef4:	aas    
  412ef5:	lds    esi,FWORD PTR [ebx-0x59]
  412ef8:	fiadd  DWORD PTR [eax-0x5cbc8f21]
  412efe:	sbb    edi,DWORD PTR [ecx+eax*2+0x11]
  412f02:	sub    ecx,edx
  412f04:	cmp    edi,DWORD PTR fs:[ebp+eax*8-0x2c5ccf5f]
  412f0c:	sbb    ebx,0x3024f70f
  412f12:	pop    ds
  412f13:	or     eax,0x66bf371e
  412f18:	(bad)
  412f1c:	fisub  WORD PTR [ebx-0x47]
  412f1f:	out    dx,al
  412f20:	(bad)  [ecx+0x69]
  412f23:	dec    edi
  412f24:	rcl    DWORD PTR ds:0x5c6b259d,cl
  412f2a:	xchg   ebx,eax
  412f2b:	fcom   DWORD PTR [eax-0x5a]
  412f2e:	imul   BYTE PTR [edi+0x5e]
  412f31:	cdq    
  412f32:	push   ecx
  412f33:	leave  
  412f34:	in     al,0x2a
  412f36:	div    BYTE PTR [edi+0x1912adb5]
  412f3c:	arpl   WORD PTR [eax-0x68],bp
  412f3f:	(bad)  
  412f40:	arpl   dx,bx
  412f42:	shl    DWORD PTR [ebx-0x43],0x10
  412f46:	in     eax,0x1a
  412f48:	jecxz  0x412ee0
  412f4a:	xor    al,0x6b
  412f4c:	push   ebx
  412f4d:	jg     0x412f92
  412f4f:	and    esp,0x42
  412f52:	add    al,0x25
  412f54:	ins    DWORD PTR es:[edi],dx
  412f55:	inc    eax
  412f56:	push   cs
  412f57:	mov    ds:0x437aa06a,al
  412f5c:	pusha  
  412f5d:	dec    edx
  412f5e:	js     0x412fa4
  412f60:	mov    edi,0xf80a07ab
  412f65:	mov    dh,0xb7
  412f67:	std    
  412f68:	mov    bl,0x34
  412f6a:	and    al,BYTE PTR [ebp-0x2bbc9125]
  412f70:	ins    DWORD PTR es:[edi],dx
  412f71:	bound  edi,QWORD PTR [eax-0x37c80815]
  412f77:	outs   dx,DWORD PTR ds:[esi]
  412f78:	mov    eax,ds:0x76260211
  412f7d:	retf   0x84cb
  412f80:	lock sbb BYTE PTR [eax-0x71],bh
  412f84:	ror    BYTE PTR [edx],1
  412f86:	mov    ebx,edx
  412f88:	arpl   WORD PTR [ebx+0x4e8c32b7],dx
  412f8e:	inc    ecx
  412f8f:	mov    ah,bh
  412f91:	push   esi
  412f92:	lock add bl,BYTE PTR [ebx+0x5310709b]
  412f99:	hlt    
  412f9a:	push   cs
  412f9b:	out    dx,al
  412f9c:	inc    ebx
  412f9d:	sar    DWORD PTR [ebx-0x1e],cl
  412fa0:	push   cs
  412fa1:	imul   esi,DWORD PTR [edx-0x23],0x1b285a98
  412fa8:	inc    ecx
  412fa9:	hlt    
  412faa:	loopne 0x412ffc
  412fac:	ffree  st(7)
  412fae:	mov    al,dh
  412fb0:	mov    WORD PTR [ecx-0x3],fs
  412fb3:	in     eax,0xb6
  412fb5:	not    BYTE PTR [ecx]
  412fb7:	push   ss
  412fb8:	in     al,dx
  412fb9:	dec    ecx
  412fba:	push   esi
  412fbb:	(bad)  
  412fbc:	aam    0x65
  412fbe:	in     eax,dx
  412fbf:	mov    cl,0x45
  412fc1:	sbb    esp,ecx
  412fc3:	dec    esp
  412fc4:	sub    BYTE PTR [edx-0x80],0xfa
  412fc8:	aas    
  412fc9:	ins    DWORD PTR es:[edi],dx
  412fca:	sbb    eax,0x3e33c242
  412fcf:	cs mov bh,0x5c
  412fd2:	inc    edx
  412fd3:	jmp    0x87c6:0x4c302af6
  412fda:	sbb    DWORD PTR [eax+edx*8+0x3e],eax
  412fde:	addr16 inc edx
  412fe0:	test   al,0xa1
  412fe2:	aaa    
  412fe3:	cmp    BYTE PTR [ebp+ecx*1-0x3d],bh
  412fe7:	push   esi
  412fe8:	fcmovne st,st(0)
  412fea:	push   si
  412fec:	fistp  WORD PTR [eax]
  412fee:	inc    ebp
  412fef:	inc    esp
  412ff0:	sub    dl,cl
  412ff2:	sub    eax,edi
  412ff4:	cmp    ebp,ebp
  412ff6:	add    edi,ebx
  412ff8:	xor    DWORD PTR [ebp+0x6f],0x5b364be6
  412fff:	fisubr WORD PTR [ebp-0x7a]
  413002:	xchg   esi,eax
  413003:	mov    ecx,0x8ccc53a3
  413008:	sbb    DWORD PTR [eax],esp
  41300a:	ret    0x3e59
  41300d:	into   
  41300e:	ja     0x41301a
  413010:	mov    ch,0x91
  413012:	and    DWORD PTR [ecx-0x1b389d72],ecx
  413018:	dec    eax
  413019:	or     ch,al
  41301b:	(bad)  
  41301c:	jnp    0x41300c
  41301e:	mov    ah,0xf7
  413020:	sbb    BYTE PTR [ebp+0x33],cl
  413023:	push   edx
  413024:	outs   dx,BYTE PTR ds:[esi]
  413025:	and    ah,cl
  413027:	adc    DWORD PTR [ebp-0x5],ebx
  41302a:	scas   al,BYTE PTR es:[edi]
  41302b:	sbb    DWORD PTR [ebp-0x58],ebp
  41302e:	xchg   esi,eax
  41302f:	and    edi,eax
  413031:	pop    ss
  413032:	pop    esi
  413033:	mov    dl,BYTE PTR [esi-0x83e108d]
  413039:	sub    eax,DWORD PTR [eax]
  41303b:	into   
  41303c:	sbb    eax,0xc6f61bba
  413041:	or     al,0xa8
  413043:	mov    esp,edx
  413045:	jbe    0x413002
  413047:	out    0x4b,eax
  413049:	lahf   
  41304a:	jmp    FWORD PTR [ebx+ecx*8+0x55]
  41304e:	xor    al,0x11
  413050:	xchg   ebx,eax
  413051:	aaa    
  413052:	jno    0x4130b5
  413054:	les    edx,FWORD PTR [edx-0x38]
  413057:	xchg   ebx,eax
  413058:	sbb    BYTE PTR [edx],0x30
  41305b:	pushf  
  41305c:	lea    ebp,[ebx-0x33]
  41305f:	popa   
  413060:	mov    bh,0xcf
  413062:	int3   
  413063:	lea    esp,[edx+0xac61702]
  413069:	outs   dx,DWORD PTR ds:[esi]
  41306a:	fcomp  QWORD PTR [edx-0x65e2f37e]
  413070:	clc    
  413071:	jmp    0x41305e
  413073:	mov    eax,ds:0x19bed210
  413078:	sub    ecx,DWORD PTR [esi-0x3916a1ef]
  41307e:	xchg   edx,eax
  41307f:	pop    ss
  413080:	xchg   dl,al
  413082:	lahf   
  413083:	cmp    ebp,DWORD PTR [ecx+0x64addb61]
  413089:	or     al,0x3d
  41308b:	push   0x51
  41308d:	leave  
  41308e:	mov    ebp,0x97659644
  413093:	cmc    
  413094:	pop    ss
  413095:	push   edx
  413096:	pusha  
  413097:	ficomp WORD PTR [edi]
  413099:	and    ebx,DWORD PTR [edx+0x76]
  41309c:	cmp    bh,bl
  41309e:	aas    
  41309f:	data16 neg BYTE PTR gs:[edi+0x39c15dec]
  4130a7:	xor    al,0x11
  4130a9:	out    0x90,eax
  4130ab:	jb     0x413118
  4130ad:	jmp    DWORD PTR [ecx+0x30]
  4130b0:	jb     0x41307f
  4130b2:	xchg   edx,eax
  4130b3:	xor    al,0xc6
  4130b5:	fcmovbe st,st(0)
  4130b7:	jo     0x41310f
  4130b9:	scas   al,BYTE PTR es:[edi]
  4130ba:	and    al,0x26
  4130bc:	std    
  4130bd:	dec    esp
  4130be:	shl    DWORD PTR [edi+0x20682c0d],0x63
  4130c5:	push   0x5
  4130c7:	inc    ebx
  4130c8:	fucomp st(0)
  4130ca:	sub    cl,al
  4130cc:	out    0xa2,eax
  4130ce:	sbb    ebx,DWORD PTR [eax]
  4130d0:	dec    ebx
  4130d1:	pusha  
  4130d2:	daa    
  4130d3:	ds mov ch,0x50
  4130d6:	xor    esi,DWORD PTR [esp+ebp*8]
  4130d9:	pop    esp
  4130da:	add    DWORD PTR [ecx+0x2e106690],ebp
  4130e0:	daa    
  4130e1:	jns    0x4130bb
  4130e3:	sub    al,0xe6
  4130e5:	mov    ebp,DWORD PTR [ebx]
  4130e7:	loop   0x4130a7
  4130e9:	cld    
  4130ea:	outs   dx,DWORD PTR ds:[esi]
  4130eb:	popf   
  4130ec:	inc    edx
  4130ed:	or     eax,0xe7786699
  4130f2:	cmp    bl,BYTE PTR [ecx-0x4ad5f887]
  4130f8:	inc    DWORD PTR [ebx+0x7a50b120]
  4130fe:	dec    eax
  4130ff:	in     al,0x72
  413101:	ret    
  413102:	mov    esi,0x7528fe0f
  413107:	pop    eax
  413108:	pop    es
  413109:	outs   dx,DWORD PTR ds:[esi]
  41310a:	push   esp
  41310b:	inc    edx
  41310c:	je     0x41309a
  41310e:	pop    ds
  41310f:	shl    DWORD PTR [edi],1
  413111:	dec    esp
  413112:	dec    ebp
  413113:	ins    BYTE PTR es:[edi],dx
  413114:	adc    bh,BYTE PTR [eax]
  413116:	fiadd  WORD PTR [eax+ecx*8]
  413119:	add    esp,DWORD PTR [ebx]
  41311b:	fcom   QWORD PTR [edi+eax*8-0x1a9134d2]
  413122:	or     bh,BYTE PTR [eax+0x24]
  413125:	out    dx,eax
  413126:	jb     0x413102
  413128:	jnp    0x41315e
  41312a:	inc    ecx
  41312b:	dec    ebp
  41312c:	test   BYTE PTR [edi+0x37b2c2dc],0x3d
  413133:	mov    dl,0x60
  413135:	dec    edx
  413136:	sub    DWORD PTR [esi-0x12],edx
  413139:	ja     0x4130df
  41313b:	data16 fwait
  41313d:	shl    BYTE PTR [edi+0x52f759e8],1
  413143:	push   cs
  413144:	xchg   edx,eax
  413145:	jp     0x41317c
  413147:	rcl    BYTE PTR [ebx-0x44da58d6],1
  41314d:	ror    DWORD PTR [ebx-0x2cefd564],cl
  413153:	or     ebx,esi
  413155:	loopne 0x4131d5
  413157:	mov    edx,0xe2a63d7d
  41315c:	jns    0x41314d
  41315e:	imul   eax,edx,0x61
  413161:	xchg   edx,eax
  413162:	gs adc eax,eax
  413165:	sub    ah,0x36
  413168:	jecxz  0x4130ff
  41316a:	mov    eax,DWORD PTR [edi-0x25]
  41316d:	sahf   
  41316e:	stos   BYTE PTR es:[edi],al
  41316f:	sub    eax,0x33125abd
  413174:	mov    al,ds:0x6970c40b
  413179:	loopne 0x4131a4
  41317b:	mov    edi,0xdfa365cb
  413180:	sbb    ecx,DWORD PTR [ebp-0xf]
  413183:	add    ch,BYTE PTR [edi+0x50be96f6]
  413189:	mov    ebp,0x2518315b
  41318e:	mov    cl,0x31
  413190:	fistp  QWORD PTR [edi+eiz*2+0x36]
  413194:	in     eax,dx
  413195:	cmp    bl,ah
  413197:	std    
  413198:	sbb    DWORD PTR [ecx+0x2e],esp
  41319b:	cmp    dl,cl
  41319d:	xor    ah,BYTE PTR [ebx+0x9]
  4131a0:	or     ebp,ebp
  4131a2:	cli    
  4131a3:	rcl    ah,0xc6
  4131a6:	cmp    cl,bl
  4131a8:	imul   esp,edx,0xffffffce
  4131ab:	add    al,0xbb
  4131ad:	call   0x1013:0x5709af5f
  4131b4:	adc    DWORD PTR [edi+0x35a3f983],edi
  4131ba:	pop    ebp
  4131bb:	cmp    al,0x51
  4131bd:	hlt    
  4131be:	or     al,0xa1
  4131c0:	dec    ecx
  4131c1:	ret    0x49af
  4131c4:	pop    edx
  4131c5:	pop    ds
  4131c6:	jecxz  0x4131d2
  4131c8:	call   0x4be0:0x623b3bc6
  4131cf:	aaa    
  4131d0:	cmp    eax,0x6f02de3a
  4131d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131d6:	es cli 
  4131d8:	fldcw  WORD PTR [edi-0x4e]
  4131db:	inc    esp
  4131dc:	out    0x32,eax
  4131de:	ins    BYTE PTR es:[edi],dx
  4131df:	pop    esp
  4131e0:	xchg   edi,eax
  4131e1:	ret    
  4131e2:	mov    al,ds:0xbb1966c5
  4131e7:	and    ebx,DWORD PTR [ecx]
  4131e9:	add    al,0xbd
  4131eb:	clc    
  4131ec:	push   eax
  4131ed:	jl     0xa195f184
  4131f3:	ss (bad) 
  4131f5:	aad    0xab
  4131f7:	int    0xb7
  4131f9:	mov    BYTE PTR [ebp-0x60177660],al
  4131ff:	cwde   
  413200:	fldcw  WORD PTR [edi-0x4c]
  413203:	ret    0x6d6d
  413206:	sub    eax,0x1740f234
  41320b:	iret   
  41320c:	fdiv   QWORD PTR [esi]
  41320e:	aas    
  41320f:	push   ss
  413210:	jmp    0xf93345df
  413215:	dec    edi
  413216:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413217:	and    dl,BYTE PTR [ebx-0x7f900d86]
  41321d:	inc    eax
  41321e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41321f:	push   0x40
  413221:	and    al,0x87
  413223:	jmp    0x52f7ea22
  413228:	cmp    ebp,0xffffffc7
  41322b:	out    0x5,eax
  41322d:	inc    edx
  41322e:	jmp    edx
  413230:	loope  0x413275
  413232:	xchg   edx,eax
  413233:	loop   0x4131eb
  413235:	adc    al,0xc6
  413237:	inc    edx
  413238:	loopne 0x413217
  41323a:	cmp    ebx,DWORD PTR [edi-0x76]
  41323d:	int3   
  41323e:	leave  
  41323f:	push   eax
  413240:	enter  0xa0e,0xaf
  413244:	test   BYTE PTR [ecx+edx*2+0x63c9c706],0xb1
  41324c:	jne    0x413283
  41324e:	pop    edi
  41324f:	mov    ecx,0xb991ace4
  413254:	cld    
  413255:	and    eax,0xe6708913
  41325a:	scas   eax,DWORD PTR es:[edi]
  41325b:	sub    DWORD PTR [edi],eax
  41325d:	lock shl BYTE PTR [ecx+0x61],1
  413261:	add    dx,WORD PTR [ecx-0x5c]
  413265:	pop    ds
  413266:	punpckhwd mm3,QWORD PTR [esp+eiz*2]
  41326a:	enter  0x2ee6,0xcd
  41326e:	and    ebx,edi
  413270:	pop    edi
  413271:	xor    bl,BYTE PTR [esi+0x1074a689]
  413277:	(bad)  
  413278:	clc    
  413279:	jmp    0xf0e883bb
  41327e:	sub    eax,0x362942c
  413283:	mov    edx,0xaeff0e8c
  413288:	sbb    eax,DWORD PTR [esi+0x1cf18a56]
  41328e:	push   esp
  41328f:	push   es
  413290:	xor    eax,0x664ff74d
  413295:	bound  ebp,QWORD PTR [ebx+edx*1+0x3f]
  413299:	mov    esp,0x7c994ddf
  41329e:	inc    ebp
  41329f:	jecxz  0x4132b9
  4132a1:	popa   
  4132a2:	jp     0x41325a
  4132a4:	mov    ss,WORD PTR [ebx-0x3dda53d9]
  4132aa:	int    0xeb
  4132ac:	xchg   edi,eax
  4132ad:	push   ebx
  4132ae:	push   ds
  4132af:	push   eax
  4132b0:	in     al,dx
  4132b1:	mov    eax,0xdadd7f2a
  4132b6:	in     al,dx
  4132b7:	stos   BYTE PTR es:[edi],al
  4132b8:	fcom   st(7)
  4132ba:	addr16 (bad) 
  4132bc:	aam    0xc4
  4132be:	mov    ebx,0xc95ba530
  4132c3:	push   0xb
  4132c5:	test   BYTE PTR [esi-0x4c],cl
  4132c8:	jno    0x413252
  4132ca:	aas    
  4132cb:	xor    DWORD PTR [eax-0x48c172a5],esi
  4132d1:	call   0x2ce3:0x8ce553d3
  4132d8:	fs pop esi
  4132da:	cmp    esp,eax
  4132dc:	ret    0x2256
  4132df:	jne    0x41327a
  4132e1:	(bad)  
  4132e2:	jl     0x41333b
  4132e4:	pop    edi
  4132e5:	add    bl,BYTE PTR ds:0xeaa0a0fd
  4132eb:	dec    edx
  4132ec:	popa   
  4132ed:	je     0x41329b
  4132ef:	mov    dh,0x3b
  4132f1:	ins    BYTE PTR es:[edi],dx
  4132f2:	xor    al,0x17
  4132f4:	repnz add bh,BYTE PTR [ebx+0x9]
  4132f8:	shr    DWORD PTR [esi],1
  4132fa:	lods   al,BYTE PTR ds:[esi]
  4132fb:	dec    esi
  4132fc:	std    
  4132fd:	popa   
  4132fe:	frstor [esi]
  413300:	scas   eax,DWORD PTR es:[edi]
  413301:	or     cl,BYTE PTR [ecx+0x336e5c22]
  413307:	jno    0x41336e
  413309:	sub    ebx,esp
  41330b:	add    bh,bh
  41330d:	(bad)  
  41330e:	rcr    ecx,1
  413310:	sar    BYTE PTR [eax],0x72
  413313:	xchg   esi,eax
  413314:	mov    ch,BYTE PTR [edx-0x754ff14d]
  41331a:	clc    
  41331b:	jecxz  0x413302
  41331d:	or     dl,BYTE PTR [edi]
  41331f:	cmp    al,bh
  413321:	pop    edi
  413322:	aad    0xfe
  413324:	mov    ebp,0x22d91e31
  413329:	and    DWORD PTR [ecx-0x1c],ebx
  41332c:	cmp    edx,edi
  41332e:	xlat   BYTE PTR ds:[ebx]
  41332f:	aad    0x93
  413331:	cmp    dl,BYTE PTR [ebx+0x0]
  413334:	mov    dh,0x15
  413336:	cwde   
  413337:	mov    bh,0x6a
  413339:	in     eax,dx
  41333a:	std    
  41333b:	pop    esi
  41333c:	sub    eax,0xc3776f09
  413341:	cmp    DWORD PTR [edx+edi*2-0x38083cbf],ecx
  413348:	jmp    0x57db:0x63d1cca9
  41334f:	push   cs
  413350:	or     eax,0x3e518470
  413355:	mov    bl,0xe3
  413357:	bound  si,DWORD PTR [esi+ebx*4+0x7980ed7b]
  41335f:	retf   
  413360:	sti    
  413361:	(bad)  
  413362:	in     al,dx
  413363:	pushf  
  413364:	adc    ah,BYTE PTR [esi+edx*4+0x5]
  413368:	rcl    DWORD PTR [ebx-0x2fe1316a],1
  41336e:	cdq    
  41336f:	xlat   BYTE PTR ds:[ebx]
  413370:	jmp    0x4f0c26b1
  413375:	mov    ebx,0x9d46a187
  41337a:	add    DWORD PTR [edi],esp
  41337c:	dec    esi
  41337d:	lea    edx,[edi-0x3cad9ce3]
  413383:	outs   dx,DWORD PTR ds:[esi]
  413384:	cwde   
  413385:	cmp    eax,0xbf319998
  41338a:	mov    edx,0xf9aeb038
  41338f:	fadd   DWORD PTR [ebp-0x73e4a987]
  413395:	neg    ebp
  413397:	sbb    DWORD PTR [eax-0xd38504e],esp
  41339d:	stos   BYTE PTR es:[edi],al
  41339e:	sbb    al,0xc3
  4133a0:	push   0xffffffd4
  4133a2:	in     al,0x59
  4133a4:	pop    eax
  4133a5:	js     0x413422
  4133a7:	sub    eax,0xf6a9f2ff
  4133ac:	push   0xef50c6bc
  4133b1:	or     cl,ah
  4133b3:	fimul  WORD PTR ds:0x2ce13f7a
  4133b9:	enter  0x1f0e,0x9f
  4133bd:	dec    ebp
  4133be:	and    BYTE PTR [ebp+ebx*1-0x73],ah
  4133c2:	xor    BYTE PTR [ebx],dh
  4133c4:	shl    esp,0xd0
  4133c7:	and    edi,DWORD PTR [esi-0x151168d6]
  4133cd:	lods   al,BYTE PTR ds:[esi]
  4133ce:	dec    ebx
  4133cf:	fsincos 
  4133d1:	lea    ebx,[edi+0x27]
  4133d4:	xlat   BYTE PTR ds:[ebx]
  4133d5:	jbe    0x41340b
  4133d7:	mov    cs,WORD PTR ss:[ebp+0x152e2aef]
  4133de:	cmc    
  4133df:	jns    0x4133c1
  4133e1:	mov    DWORD PTR [edx+0x2d],esp
  4133e4:	mov    dl,0x8a
  4133e6:	cdq    
  4133e7:	je     0x41339b
  4133e9:	adc    BYTE PTR [ecx+eiz*4],bh
  4133ec:	push   ecx
  4133ed:	inc    esp
  4133ee:	call   0x6715423b
  4133f3:	mov    dl,0x6c
  4133f5:	ins    BYTE PTR es:[edi],dx
  4133f6:	outs   dx,BYTE PTR ds:[esi]
  4133f7:	mov    cl,0x7
  4133f9:	pop    ebx
  4133fa:	or     BYTE PTR [edx+ebx*4-0x39658fdf],0x9c
  413402:	es cli 
  413404:	out    dx,eax
  413405:	out    dx,al
  413406:	sbb    BYTE PTR [esi-0x104a51d1],cl
  41340c:	push   cs
  41340d:	pop    ebx
  41340e:	lock push 0xffffffc1
  413411:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413412:	push   0x3
  413414:	push   ds
  413415:	cmp    esi,esi
  413417:	add    ebp,DWORD PTR [ecx]
  413419:	bound  ebp,QWORD PTR ds:0x5b9ef066
  41341f:	pushf  
  413420:	ja     0x4133f8
  413422:	sub    DWORD PTR [ecx],0xee65fd00
  413428:	jle    0x4133c7
  41342a:	dec    ebp
  41342b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41342c:	fcom   QWORD PTR [ecx-0x33d357f8]
  413432:	xchg   edi,eax
  413433:	data16 or al,al
  413436:	jo     0x413454
  413438:	ja     0x413441
  41343a:	add    eax,0xe26a6650
  41343f:	adc    eax,0xd722c2ac
  413444:	pushf  
  413445:	xchg   edx,eax
  413446:	out    0xfd,eax
  413448:	push   ebx
  413449:	push   edi
  41344a:	mov    ch,0xa8
  41344c:	cli    
  41344d:	ins    DWORD PTR es:[edi],dx
  41344e:	aam    0x4f
  413450:	in     al,dx
  413451:	(bad)  
  413452:	aaa    
  413453:	loope  0x4134c8
  413455:	add    eax,0xda55cf9
  41345a:	aaa    
  41345b:	out    0x94,al
  41345d:	sub    bl,BYTE PTR [eax-0x71]
  413460:	fstp   TBYTE PTR [ebp-0x665cc64f]
  413466:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413467:	sub    al,0x84
  413469:	sbb    BYTE PTR [esi],dl
  41346b:	sbb    eax,DWORD PTR ds:0xb98e
  413470:	cmp    esp,esp
  413472:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413473:	ud2    
  413475:	sbb    eax,DWORD PTR ds:0x2d70908c
  41347b:	retf   0x4c50
  41347e:	dec    edi
  41347f:	out    0xc,al
  413481:	xchg   eax,ebx
  413483:	addr16 xor edx,ebx
  413486:	or     ebx,DWORD PTR [edx]
  413488:	(bad)  
  413489:	bound  edx,QWORD PTR ds:0xb8ac5ab2
  41348f:	push   eax
  413490:	jmp    0x5570efaf
  413495:	sub    eax,0xcc7c37a9
  41349a:	nop
  41349b:	jmp    0x42f4:0x663c326a
  4134a2:	sbb    ebx,DWORD PTR [ebx]
  4134a4:	mov    bl,0x5b
  4134a6:	lock jb 0x4134cb
  4134a9:	sub    eax,ebx
  4134ab:	lock fbstp TBYTE PTR [ebx+eax*2]
  4134af:	jb     0x4134df
  4134b1:	dec    esp
  4134b2:	xchg   esp,eax
  4134b3:	call   0xa283b08
  4134b8:	push   ecx
  4134b9:	shl    BYTE PTR [ecx],1
  4134bb:	jne    0x4134e6
  4134bd:	test   eax,0x14501f4f
  4134c2:	sti    
  4134c3:	inc    ecx
  4134c4:	loope  0x413514
  4134c6:	jno    0x413518
  4134c8:	cmp    eax,0x45ca1eca
  4134cd:	popf   
  4134ce:	adc    al,0x5d
  4134d0:	and    al,0x7f
  4134d2:	ds xor al,0x6e
  4134d5:	push   ss
  4134d6:	xchg   esi,eax
  4134d7:	mov    esi,0xd05ab0c2
  4134dd:	rcl    BYTE PTR [eax],0x41
  4134e0:	mov    ch,0x61
  4134e2:	adc    eax,0x67bb07b2
  4134e7:	and    ch,dl
  4134e9:	ss rep stos BYTE PTR es:[edi],al
  4134ec:	stos   DWORD PTR es:[edi],eax
  4134ed:	out    dx,al
  4134ee:	rol    DWORD PTR [ebp+0x41fa503c],0x5c
  4134f5:	adc    eax,0x13b0b793
  4134fa:	test   al,0x1d
  4134fc:	pop    esi
  4134fd:	dec    esp
  4134fe:	lds    edi,FWORD PTR [eax]
  413500:	pop    edx
  413501:	mov    al,0x38
  413503:	add    al,0xd4
  413505:	les    edi,FWORD PTR [esi]
  413507:	icebp  
  413508:	jle    0x413543
  41350a:	mov    al,ds:0xd4e634cd
  41350f:	fmul   st(5),st
  413511:	(bad)  
  413512:	sub    bh,BYTE PTR [edi-0x3a9c1cd3]
  413518:	mov    ds:0xbcbb9b68,al
  41351d:	cs inc edi
  41351f:	push   cs
  413520:	xlat   BYTE PTR ds:[ebx]
  413521:	sub    DWORD PTR [edi],esi
  413523:	jl     0x413513
  413525:	shl    DWORD PTR ss:[ebx+0x75],0x89
  41352a:	mov    eax,ds:0x1cc2899
  41352f:	sahf   
  413530:	loope  0x413526
  413532:	mov    esp,DWORD PTR [ecx+esi*8]
  413535:	fldcw  WORD PTR gs:[eax+edi*4+0x33]
  41353a:	mov    ds:0x8ec5d99f,eax
  41353f:	sub    BYTE PTR [eax],0x6b
  413542:	gs dec edx
  413544:	popf   
  413545:	out    dx,al
  413546:	push   esi
  413547:	xor    al,0x21
  413549:	scas   eax,DWORD PTR es:[edi]
  41354a:	retf   
  41354b:	mov    esp,0x34b77b7c
  413550:	push   esi
  413551:	mov    cl,0xad
  413553:	(bad)  
  413555:	jp     0x4134df
  413557:	push   esi
  413558:	dec    edx
  413559:	sbb    BYTE PTR [eax+0x62],cl
  41355c:	jl     0x4135dd
  41355e:	sub    bl,BYTE PTR [edx]
  413560:	je     0x4135a0
  413562:	jns    0x41354a
  413564:	cmp    eax,0x8985e2ca
  413569:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41356a:	push   ss
  41356b:	dec    ebx
  41356c:	adc    al,BYTE PTR [ebx]
  41356e:	lods   eax,DWORD PTR ds:[esi]
  41356f:	dec    edi
  413570:	bound  edi,QWORD PTR [ebx*2+0x321b7396]
  413577:	lods   al,BYTE PTR ds:[esi]
  413578:	xchg   ecx,eax
  413579:	fnsave [edx+edi*8+0x5a]
  41357d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41357e:	add    bl,BYTE PTR [edx]
  413580:	repnz or edi,DWORD PTR [esp+edx*2]
  413584:	adc    esi,DWORD PTR [esi+0x411e7166]
  41358a:	rol    DWORD PTR [edi+0x672d565],cl
  413590:	cmp    al,0x7
  413592:	je     0x4135c6
  413594:	inc    eax
  413595:	and    ebx,0xb976266c
  41359b:	into   
  41359c:	mov    dl,BYTE PTR [eax+0x52a4d559]
  4135a2:	cmp    dh,BYTE PTR [ecx]
  4135a4:	loope  0x4135ea
  4135a6:	retf   
  4135a7:	inc    edx
  4135a8:	xor    BYTE PTR [edx],al
  4135aa:	xor    BYTE PTR [esi+edx*8],ch
  4135ad:	jp     0x413593
  4135af:	and    DWORD PTR [esp+ebp*2-0x25],eax
  4135b3:	inc    edx
  4135b4:	inc    edi
  4135b5:	jne    0x413571
  4135b7:	dec    edx
  4135b8:	test   eax,0x9f083e5
  4135bd:	pop    ds
  4135be:	inc    edi
  4135bf:	rol    edx,cl
  4135c1:	pushf  
  4135c2:	adc    eax,0xdcd1c311
  4135c7:	push   esi
  4135c8:	mov    edi,ebx
  4135ca:	pop    edi
  4135cb:	enter  0x3163,0xe3
  4135cf:	rol    edx,cl
  4135d1:	ja     0x413640
  4135d3:	lahf   
  4135d4:	data16 add al,0x69
  4135d7:	imul   ah
  4135d9:	xchg   esp,eax
  4135da:	jp     0x4135ae
  4135dc:	adc    al,BYTE PTR [ecx]
  4135de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135df:	push   0x2c
  4135e1:	pop    es
  4135e2:	lea    esp,[ebp+0x68fed5e2]
  4135e8:	jae    0x41357e
  4135ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135eb:	(bad)  
  4135ed:	dec    edi
  4135ee:	xlat   BYTE PTR ds:[ebx]
  4135ef:	xchg   esp,eax
  4135f0:	outs   dx,DWORD PTR ds:[esi]
  4135f1:	jb     0x4135d1
  4135f3:	pop    esp
  4135f4:	fstp   DWORD PTR [ecx]
  4135f6:	retf   0x83d7
  4135f9:	and    eax,0x3622bd9e
  4135fe:	fwait
  4135ff:	ins    BYTE PTR es:[edi],dx
  413600:	outs   dx,DWORD PTR ds:[esi]
  413601:	mov    edi,0xc5b99a23
  413606:	pop    ds
  413607:	and    DWORD PTR [esi+0x4543c54e],0xb62bcb52
  413611:	mov    ebx,0x4348e23
  413616:	add    esi,esp
  413618:	out    dx,al
  413619:	jecxz  0x413676
  41361b:	inc    eax
  41361c:	jl     0x413618
  41361e:	dec    ebx
  41361f:	fadd   QWORD PTR [eax]
  413621:	ret    0x72f0
  413624:	mov    ah,0x6f
  413626:	cmc    
  413627:	cld    
  413628:	das    
  413629:	jb     0x41361f
  41362b:	sbb    al,0x96
  41362d:	repz pop ecx
  41362f:	leave  
  413630:	mov    BYTE PTR [esi+0x22],cl
  413633:	(bad)  
  413634:	mov    dl,0xc3
  413636:	ds inc edi
  413638:	pop    ecx
  413639:	fs sti 
  41363b:	ret    0x7cca
  41363e:	cmp    al,dl
  413640:	sbb    ecx,DWORD PTR [ecx+0x19ade725]
  413646:	rcpps  xmm1,xmm7
  413649:	add    al,BYTE PTR [ecx]
  41364b:	pop    ss
  41364c:	adc    BYTE PTR [edx-0x27f9baaf],al
  413652:	sub    eax,0xe715fd10
  413657:	jb     0x413645
  413659:	xor    edx,eax
  41365b:	add    ebp,DWORD PTR ds:0xad23da82
  413661:	cli    
  413662:	mov    es,WORD PTR [edi+esi*4]
  413665:	out    0xc6,eax
  413667:	ret    
  413668:	int3   
  413669:	pop    edx
  41366a:	add    DWORD PTR [edx],edi
  41366c:	sub    eax,0xec252ff5
  413671:	aad    0xf6
  413673:	test   esp,esi
  413675:	inc    eax
  413676:	push   esi
  413677:	push   0x32
  413679:	pop    ebx
  41367a:	aad    0xbd
  41367c:	repz fdivp st(5),st
  41367f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413680:	push   esi
  413681:	pop    ebx
  413682:	dec    edx
  413683:	int3   
  413684:	jmp    0xcaee:0x4cbba6da
  41368b:	shl    BYTE PTR [edx-0x53],cl
  41368e:	iret   
  41368f:	pushf  
  413690:	int    0xb2
  413692:	hlt    
  413693:	push   edx
  413694:	(bad)  
  413695:	repnz lods al,BYTE PTR ds:[esi]
  413697:	dec    edi
  413698:	mov    ds:0x66ba3a6,al
  41369d:	sbb    eax,0xb42f5054
  4136a2:	adc    al,0x31
  4136a4:	test   DWORD PTR [ebp-0x50],ebx
  4136a7:	add    bh,BYTE PTR [edi+edi*1-0x7a]
  4136ab:	hlt    
  4136ac:	mov    WORD PTR [edi+0x76],?
  4136af:	pop    es
  4136b0:	or     al,0x50
  4136b2:	inc    ecx
  4136b3:	inc    eax
  4136b4:	test   DWORD PTR [eax-0x1e707df9],edi
  4136ba:	mov    ds:0xfb48a1a,eax
  4136bf:	movzx  edi,bp
  4136c2:	mov    al,ds:0xfee821eb
  4136c7:	retf   
  4136c8:	mov    ebx,DWORD PTR [ebx+ecx*4+0x5c1f26fd]
  4136cf:	sub    al,0x3b
  4136d1:	lds    edi,FWORD PTR [ebx+esi*4+0x53316ab6]
  4136d8:	pop    ebx
  4136d9:	jmp    0x4136e8
  4136db:	in     eax,0xa6
  4136dd:	push   ss
  4136de:	mov    cl,0x76
  4136e0:	mov    ch,0x45
  4136e2:	ret    0x8ac5
  4136e5:	inc    ecx
  4136e6:	pop    ds
  4136e7:	or     al,bl
  4136e9:	and    ah,BYTE PTR [ebp-0x54dbbeb]
  4136ef:	jmp    0x41370b
  4136f1:	sub    eax,0x18e6ad9a
  4136f6:	ds sbb al,0x99
  4136f9:	in     eax,0x82
  4136fb:	repnz push es
  4136fd:	jl     0x41376b
  4136ff:	dec    esi
  413700:	jne    0x4136f0
  413702:	stc    
  413703:	sbb    al,0x65
  413705:	adc    al,0xb
  413707:	imul   edx,DWORD PTR [edx+ebx*2-0x12dabcb3],0xe890dfd3
  413712:	sub    BYTE PTR [edx+esi*4+0x1265973c],cl
  413719:	mov    edx,0x897188e1
  41371e:	mov    edx,DWORD PTR [esp+eiz*2-0x16]
  413722:	cmp    BYTE PTR [eax+0x15b35e26],bl
  413728:	sbb    al,0x78
  41372a:	divps  xmm7,XMMWORD PTR [esi+0x33]
  41372e:	and    DWORD PTR [ebp-0x45],edx
  413731:	and    al,BYTE PTR [eax]
  413733:	sbb    BYTE PTR [edi-0xa],bh
  413736:	fcom   DWORD PTR [esi]
  413738:	iret   
  413739:	dec    edi
  41373a:	pop    edx
  41373b:	mov    eax,0xa6f82ef
  413740:	add    ah,BYTE PTR [edi-0x59c11630]
  413746:	mov    edi,0x29c7fa7c
  41374b:	jmp    0xe757:0x92e707d0
  413752:	adc    esp,DWORD PTR [eax]
  413754:	in     al,dx
  413755:	fistp  WORD PTR [eax+0x440ef091]
  41375b:	or     eax,0xef0d359
  413760:	sbb    dl,BYTE PTR [edx-0x3]
  413763:	jns    0x4137a9
  413765:	aaa    
  413766:	xor    DWORD PTR [edx+0x20f78d76],eax
  41376c:	les    edx,FWORD PTR [ecx]
  41376e:	xchg   ebx,eax
  41376f:	and    al,0xc7
  413771:	nop
  413772:	and    eax,0xc8e416ac
  413777:	add    BYTE PTR [eax-0x6f],cl
  41377a:	adc    dl,bh
  41377c:	push   cs
  41377d:	stc    
  41377e:	out    dx,eax
  41377f:	xchg   ebx,eax
  413780:	(bad)  [edx+0x2e]
  413783:	mov    ecx,0xde5b80e7
  413788:	setbe  dh
  41378b:	xor    eax,0x72ac8670
  413790:	add    BYTE PTR [ecx+0x3e],bh
  413793:	sub    eax,0x4689fe46
  413798:	data16 jno 0x4137dd
  41379b:	mov    ds:0x68d91912,al
  4137a0:	cmp    bl,bh
  4137a2:	call   0x51a9:0xb94a5a15
  4137a9:	sub    DWORD PTR [ecx+edx*8+0x5f],eax
  4137ad:	gs ja  0x41381f
  4137b0:	outs   dx,BYTE PTR ds:[esi]
  4137b1:	xor    DWORD PTR [ebx],esi
  4137b3:	lock jae 0x41373c
  4137b6:	and    ax,di
  4137b9:	pop    esi
  4137ba:	sbb    ch,BYTE PTR [edx+0x1824733b]
  4137c0:	(bad)  
  4137c1:	in     eax,dx
  4137c2:	or     ah,dh
  4137c4:	sub    esi,esp
  4137c6:	push   ebx
  4137c7:	jmp    0xd528:0x914a0af8
  4137ce:	add    DWORD PTR [eax-0x58c4d88],esp
  4137d4:	ror    cl,0x88
  4137d7:	cmc    
  4137d8:	hlt    
  4137d9:	rcr    DWORD PTR [edx+0x60],cl
  4137dc:	jp     0x4137e9
  4137de:	fisub  DWORD PTR [edi-0x6c81e6eb]
  4137e4:	cmp    BYTE PTR [esi],dl
  4137e6:	mov    bl,0xad
  4137e8:	dec    esi
  4137e9:	loopne 0x413835
  4137eb:	or     dl,cl
  4137ed:	ja     0x41384a
  4137ef:	jb     0x41378d
  4137f1:	and    DWORD PTR [ebx+esi*1-0x5f],esi
  4137f5:	dec    esp
  4137f6:	imul   edi,DWORD PTR [edi],0xffffffb4
  4137f9:	ins    DWORD PTR es:[edi],dx
  4137fa:	add    cl,bh
  4137fc:	test   BYTE PTR ds:0x76fa7634,bh
  413802:	mul    bh
  413804:	clc    
  413805:	mov    ds:0x4ad22941,eax
  41380a:	sar    ebp,cl
  41380c:	sub    BYTE PTR [ecx],0x57
  41380f:	sub    cl,BYTE PTR ds:0x5ae436fd
  413815:	les    edx,FWORD PTR [ebx]
  413817:	mov    esi,0x528392d3
  41381c:	xor    al,0x9c
  41381e:	and    bh,BYTE PTR [ebp+0x57aa4875]
  413824:	push   ds
  413825:	sbb    DWORD PTR [ebp+0xfbdd32f],esp
  41382b:	retf   
  41382c:	test   BYTE PTR [edx+0x34],ah
  41382f:	dec    esi
  413830:	enter  0xf518,0x23
  413834:	xor    eax,0x5b194425
  413839:	or     eax,0x46ceb930
  41383e:	mov    gs,edi
  413840:	jl     0x413844
  413842:	std    
  413843:	repz test al,0x55
  413846:	das    
  413847:	xchg   ebp,eax
  413848:	loope  0x41380b
  41384a:	adc    eax,0x9b5c915e
  41384f:	add    DWORD PTR [edi+0x42],ecx
  413852:	mov    ds,WORD PTR [eax]
  413854:	retf   0x87d
  413857:	(bad)  
  413858:	cmc    
  413859:	xchg   esp,eax
  41385a:	inc    esi
  41385b:	addr16 iret 
  41385d:	pop    ecx
  41385e:	mov    al,ds:0x591664f2
  413863:	test   al,0xf5
  413865:	lahf   
  413866:	imul   edx,DWORD PTR [edx+0x47f3fbaf],0x7d
  41386d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41386e:	jg     0x413809
  413870:	pop    edi
  413871:	sbb    BYTE PTR ds:0xcb5d75d0,0x86
  413878:	retf   
  413879:	jmp    0x4138d6
  41387b:	popf   
  41387c:	jae    0x413873
  41387e:	clc    
  41387f:	xchg   ebx,eax
  413880:	int    0xa3
  413882:	inc    eax
  413883:	js     0x413882
  413885:	clc    
  413886:	out    0x10,al
  413888:	mov    eax,0x7de19c17
  41388d:	adc    al,dh
  41388f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413890:	addr16 sbb eax,ecx
  413893:	sti    
  413894:	push   esp
  413895:	xchg   ecx,eax
  413896:	mov    al,0x46
  413898:	cld    
  413899:	nop
  41389a:	aad    0x30
  41389c:	leave  
  41389d:	pusha  
  41389e:	mov    WORD PTR [ebx-0x18],?
  4138a1:	pop    edx
  4138a2:	jb     0x41391c
  4138a4:	mov    bh,0xc9
  4138a6:	not    ah
  4138a8:	sub    edx,DWORD PTR [eax]
  4138aa:	add    ah,bh
  4138ac:	xor    al,0xeb
  4138ae:	pop    eax
  4138af:	lahf   
  4138b0:	mov    ebx,DWORD PTR [ebp*2+0x6101c2ad]
  4138b7:	push   ss
  4138b8:	or     ch,BYTE PTR [esi+0x5b120dda]
  4138be:	test   BYTE PTR [ebx+0x7764c719],bh
  4138c4:	ins    DWORD PTR es:[edi],dx
  4138c5:	addr16 gs in al,dx
  4138c8:	and    dh,cl
  4138ca:	mov    al,0xdf
  4138cc:	jo     0x41391d
  4138ce:	sub    al,0x40
  4138d0:	cmp    DWORD PTR [ecx+0x30652a01],edi
  4138d6:	and    esi,DWORD PTR [ebx+ebp*4+0x3255eb2f]
  4138dd:	in     al,dx
  4138de:	enter  0xc113,0x8b
  4138e2:	scas   al,BYTE PTR es:[edi]
  4138e3:	retf   0x44c4
  4138e6:	lahf   
  4138e7:	rol    DWORD PTR ds:0x4d83506e,1
  4138ed:	mov    ds:0x599a1190,al
  4138f2:	push   ebp
  4138f3:	shr    DWORD PTR [esi],0xba
  4138f6:	dec    eax
  4138f7:	stos   BYTE PTR es:[edi],al
  4138f8:	mov    ch,0x37
  4138fa:	fdivr  QWORD PTR [ecx-0x66]
  4138fd:	(bad)  
  4138ff:	or     dl,al
  413901:	cmp    BYTE PTR [edi],bl
  413903:	push   cs
  413904:	push   ecx
  413905:	jmp    0xa5da0a77
  41390a:	or     ebx,DWORD PTR [ebp+0x31]
  41390d:	adc    eax,0x277e7873
  413912:	add    al,0x71
  413914:	imul   esi,eax,0xfc061bc4
  41391a:	rol    ah,cl
  41391c:	pop    ss
  41391d:	jp     0x413949
  41391f:	retf   0xc97c
  413922:	adc    edx,DWORD PTR [ebx+0x33]
  413925:	aas    
  413926:	mov    al,0xad
  413928:	sti    
  413929:	cdq    
  41392a:	mov    DWORD PTR [ecx+eiz*1],edx
  41392d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41392e:	mov    WORD PTR [edi+0x43],cs
  413931:	test   eax,0x1357b12e
  413936:	xor    ebp,edx
  413938:	cmc    
  413939:	pop    ebx
  41393a:	jp     0x41393a
  41393c:	lods   eax,DWORD PTR ds:[esi]
  41393d:	retf   0x3e69
  413940:	dec    esi
  413941:	mov    eax,ds:0x65b39c86
  413946:	out    0xf4,eax
  413948:	lock outs dx,BYTE PTR ds:[esi]
  41394a:	leave  
  41394b:	pop    eax
  41394c:	out    dx,ax
  41394e:	sub    ch,BYTE PTR [ecx+0x1182a649]
  413954:	iret   
  413955:	jbe    0x413952
  413957:	retf   
  413958:	loopne 0x4139d0
  41395a:	adc    ch,dl
  41395c:	loop   0x413961
  41395e:	mov    eax,ss
  413960:	pop    esp
  413961:	neg    DWORD PTR [edx+0x646f6b95]
  413967:	xchg   ebp,eax
  413968:	test   BYTE PTR [eax],ch
  41396a:	ins    DWORD PTR es:[edi],dx
  41396b:	xchg   edi,eax
  41396c:	mov    cs,WORD PTR [edx]
  41396e:	push   esi
  41396f:	and    eax,DWORD PTR [eax-0x482756e]
  413975:	inc    esi
  413976:	fisub  DWORD PTR [ebx]
  413978:	and    eax,0x62f32266
  41397d:	test   al,0x64
  41397f:	imul   eax,DWORD PTR [edi-0xb],0x5f
  413983:	cmp    BYTE PTR [esp+ebx*1+0x6e],ah
  413987:	inc    eax
  413988:	jl     0x413947
  41398a:	xchg   edx,eax
  41398b:	stos   BYTE PTR es:[edi],al
  41398c:	inc    esp
  41398d:	dec    ebp
  41398e:	rcr    BYTE PTR [edi+0x34],0x4a
  413992:	xchg   edx,eax
  413993:	pop    ebp
  413994:	pop    eax
  413995:	inc    ebx
  413996:	aas    
  413997:	div    BYTE PTR ds:0x8401d035
  41399d:	inc    ecx
  41399e:	in     al,0x69
  4139a0:	sbb    eax,0x22cd57
  4139a5:	xor    dh,BYTE PTR [ecx]
  4139a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139a8:	gs jne 0x413975
  4139ab:	inc    ebp
  4139ac:	add    esp,DWORD PTR [edx-0x8]
  4139af:	pop    eax
  4139b0:	dec    ebx
  4139b1:	dec    eax
  4139b2:	rcr    edx,cl
  4139b4:	or     al,0x6e
  4139b6:	sub    BYTE PTR [ebx-0xf],cl
  4139b9:	sub    dl,dh
  4139bb:	jns    0x4139c0
  4139bd:	add    ecx,edx
  4139bf:	jmp    0x413a22
  4139c1:	iret   
  4139c2:	xchg   esp,eax
  4139c3:	jl     0x41398e
  4139c5:	dec    eax
  4139c6:	mov    ecx,0x1d3045b4
  4139cb:	je     0x413a10
  4139cd:	jae    0x4139d2
  4139cf:	idiv   DWORD PTR [ebp-0x2]
  4139d2:	sbb    DWORD PTR [ecx-0x79c3f816],ecx
  4139d8:	in     al,dx
  4139d9:	cs jecxz 0x413973
  4139dc:	dec    esi
  4139dd:	pop    esi
  4139de:	sub    DWORD PTR ds:0xec29cdbc,edi
  4139e4:	lahf   
  4139e5:	inc    ebp
  4139e6:	or     DWORD PTR [ebp+0xc],edi
  4139e9:	outs   dx,BYTE PTR ds:[esi]
  4139ea:	mov    al,ds:0x6e8b9b75
  4139ef:	std    
  4139f0:	fcmovb st,st(6)
  4139f2:	(bad)  
  4139f4:	jne    0x4139e1
  4139f6:	cdq    
  4139f7:	xor    al,0xcf
  4139f9:	mov    ds:0x6c93e165,al
  4139fe:	ds js  0x4139da
  413a01:	xchg   esi,eax
  413a02:	out    dx,eax
  413a03:	imul   ebp,DWORD PTR [ebx],0xfffffffe
  413a06:	sahf   
  413a07:	gs repz in eax,dx
  413a0a:	std    
  413a0b:	xchg   esp,eax
  413a0c:	or     al,BYTE PTR [ecx+0x6d7d664]
  413a12:	leave  
  413a13:	sbb    DWORD PTR ds:0x58b87e39,esi
  413a19:	xchg   esp,eax
  413a1a:	or     cl,dh
  413a1c:	or     cl,BYTE PTR [eax+0x2f]
  413a1f:	push   edi
  413a20:	inc    esp
  413a21:	cmp    sp,WORD PTR [edi-0x33]
  413a25:	pusha  
  413a26:	pop    esi
  413a27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a28:	jo     0x413a60
  413a2a:	daa    
  413a2b:	dec    esi
  413a2c:	(bad)  
  413a2d:	sbb    al,0x11
  413a2f:	mul    DWORD PTR [ebx-0x6e3d5281]
  413a35:	sbb    eax,0x6f7099fd
  413a3a:	add    DWORD PTR [ebx-0x4b],esi
  413a3d:	jp     0x4139c4
  413a3f:	mov    bh,0x2f
  413a41:	lock sbb edx,DWORD PTR [ebp-0x1e71c840]
  413a48:	xchg   ebp,esi
  413a4a:	sbb    al,al
  413a4c:	fwait
  413a4d:	retf   0xc257
  413a50:	outs   dx,DWORD PTR ds:[esi]
  413a51:	(bad)  
  413a52:	mov    ebx,esp
  413a54:	lods   eax,DWORD PTR ds:[esi]
  413a55:	setl   BYTE PTR [ebx+0xa]
  413a59:	inc    eax
  413a5a:	in     al,0x8c
  413a5c:	in     eax,0x3f
  413a5e:	cmp    ebx,DWORD PTR [eax-0x751bd604]
  413a64:	adc    al,0x4a
  413a66:	out    dx,eax
  413a67:	xchg   edx,eax
  413a68:	arpl   dx,ax
  413a6a:	idiv   DWORD PTR [edi-0x2cc042c3]
  413a70:	lea    esp,[bp+di+0x58]
  413a74:	adc    dh,BYTE PTR [edx]
  413a76:	dec    esp
  413a77:	mov    ch,BYTE PTR [esi]
  413a79:	ins    BYTE PTR es:[edi],dx
  413a7a:	int    0x1c
  413a7c:	and    DWORD PTR [eax-0x44],ebp
  413a7f:	add    cl,ch
  413a81:	(bad)  
  413a82:	je     0x413a9a
  413a84:	icebp  
  413a85:	fnstcw WORD PTR [ebx+edx*8+0x44bb8f07]
  413a8c:	cmp    ebp,DWORD PTR [ebx+0x77aeb59f]
  413a92:	iret   
  413a93:	js     0x413a67
  413a95:	inc    eax
  413a96:	adc    BYTE PTR [ebp-0x62],bl
  413a99:	test   DWORD PTR [ebx+0x44],esi
  413a9c:	out    0x3f,al
  413a9e:	sub    cl,0xcf
  413aa1:	push   es
  413aa2:	hlt    
  413aa3:	or     eax,0xdc6b8e6b
  413aa8:	pop    esi
  413aa9:	inc    ebx
  413aaa:	out    dx,eax
  413aab:	loope  0x413a4d
  413aad:	pop    esp
  413aae:	clc    
  413aaf:	dec    edi
  413ab0:	das    
  413ab1:	push   esp
  413ab2:	fimul  WORD PTR [eax-0x35e48a93]
  413ab8:	jb     0x413a4c
  413aba:	mov    ebp,DWORD PTR [esi-0x7c7b1969]
  413ac0:	cmp    al,0xc1
  413ac2:	add    eax,0x2116974e
  413ac7:	jl     0x413a8e
  413ac9:	and    al,0xfe
  413acb:	xor    BYTE PTR [ecx+0x2cbba263],bh
  413ad1:	pop    edx
  413ad2:	or     ecx,DWORD PTR [ebx-0x137c6f44]
  413ad8:	arpl   WORD PTR [edi+0x5b],cx
  413adb:	cld    
  413adc:	inc    BYTE PTR [ecx]
  413ade:	(bad)  
  413adf:	xor    eax,0xfe6d6925
  413ae4:	pop    es
  413ae5:	xchg   al,bh
  413ae7:	dec    BYTE PTR [esp+edi*4-0x203c519c]
  413aee:	pop    ebp
  413aef:	jle    0x413b3e
  413af1:	jp     0x413b4a
  413af3:	pop    ebp
  413af4:	pop    ebx
  413af5:	out    0xae,eax
  413af7:	xchg   esi,eax
  413af8:	inc    esp
  413af9:	cwde   
  413afa:	ds ret 0xb4aa
  413afe:	sbb    edi,DWORD PTR [eax-0x69fa45d4]
  413b04:	sub    eax,0x4622f612
  413b09:	add    esp,eax
  413b0b:	cld    
  413b0c:	mov    eax,ds:0x5112615d
  413b11:	sbb    DWORD PTR [ebp+edi*1-0x17],edx
  413b15:	fnsave [ebp-0x7]
  413b18:	rcl    DWORD PTR [ebp-0x53],cl
  413b1b:	add    al,0xf9
  413b1d:	pop    eax
  413b1e:	xor    eax,0x73033850
  413b23:	xchg   ecx,eax
  413b24:	sti    
  413b25:	call   0x60ab:0x391e0f4a
  413b2c:	dec    edi
  413b2d:	push   edi
  413b2e:	cdq    
  413b2f:	sbb    eax,0x25d2f581
  413b34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b35:	xor    BYTE PTR [ecx+0x6b],0xe5
  413b39:	stos   DWORD PTR es:[edi],eax
  413b3a:	sbb    ecx,DWORD PTR [esi+0x75]
  413b3d:	ja     0x413b24
  413b3f:	sub    eax,DWORD PTR [edx+edi*2]
  413b42:	das    
  413b43:	into   
  413b44:	gs sbb eax,0x79bc8709
  413b4a:	cmc    
  413b4b:	sub    eax,0x69db8043
  413b50:	mov    ds:0x505e5fff,eax
  413b55:	xchg   ecx,eax
  413b56:	nop
  413b57:	not    DWORD PTR ds:0x7893e157
  413b5d:	jb     0x413b84
  413b5f:	mov    edx,0x2c679995
  413b64:	bound  ebp,QWORD PTR [ecx+ebp*2]
  413b67:	lea    ebp,[eax-0x1]
  413b6a:	imul   ecx
  413b6c:	fdivr  QWORD PTR [eax+0x280b2ca6]
  413b72:	pop    edx
  413b73:	rcl    edi,1
  413b75:	ss jno 0x413ba1
  413b78:	add    eax,0xb4a31bf5
  413b7d:	repz ret 
  413b7f:	dec    ecx
  413b80:	sub    ah,BYTE PTR [ebx+0x490c9e32]
  413b86:	jnp    0x413bf7
  413b88:	nop
  413b89:	or     esp,DWORD PTR [ebx-0xc16d979]
  413b8f:	loopne 0x413be5
  413b91:	dec    eax
  413b92:	cwde   
  413b93:	pop    ebp
  413b94:	fisttp DWORD PTR [edi+0x7]
  413b97:	jae    0x413c06
  413b99:	pop    esp
  413b9a:	xchg   ebp,eax
  413b9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b9c:	ins    DWORD PTR es:[edi],dx
  413b9d:	repnz xchg esi,eax
  413b9f:	pop    esp
  413ba0:	lods   al,BYTE PTR ds:[esi]
  413ba1:	push   ss
  413ba2:	or     al,0x7c
  413ba4:	jg     0x413b9b
  413ba6:	cld    
  413ba7:	ins    BYTE PTR es:[edi],dx
  413ba8:	ss aad 0x14
  413bab:	es jae 0x413b42
  413bae:	lea    edx,[ebx+0x15d82523]
  413bb4:	je     0x413ba4
  413bb6:	inc    ecx
  413bb7:	pusha  
  413bb8:	loop   0x413bbe
  413bba:	xchg   DWORD PTR gs:[esi-0x8],edx
  413bbe:	jge    0x413bf1
  413bc0:	jb     0x413bb1
  413bc2:	outs   dx,DWORD PTR ds:[si]
  413bc4:	push   edx
  413bc5:	jnp    0x413bd1
  413bc7:	push   ecx
  413bc8:	fsubp  st(4),st
  413bca:	mov    ecx,0x8e415fed
  413bcf:	test   al,0x8d
  413bd1:	pop    ebx
  413bd2:	and    eax,0x19e313e6
  413bd7:	test   al,0xfa
  413bd9:	sbb    BYTE PTR [ebp+0x5043f081],bl
  413bdf:	add    DWORD PTR [edx+0x572cb9e1],edx
  413be5:	mov    WORD PTR [eax-0x4c478599],cx
  413bec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413bed:	(bad)  
  413bee:	xor    al,0x6c
  413bf0:	aaa    
  413bf1:	dec    BYTE PTR [edx-0x4bef9f04]
  413bf7:	mov    edx,esp
  413bf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bfa:	jo     0x413b88
  413bfc:	js     0x413bce
  413bfe:	fisubr DWORD PTR [eax-0x12]
  413c01:	retf   
  413c02:	aam    0x5
  413c04:	arpl   ax,si
  413c06:	and    eax,0xb1c62c73
  413c0b:	cmp    DWORD PTR [edi+0xb],esi
  413c0e:	ins    BYTE PTR es:[edi],dx
  413c0f:	adc    BYTE PTR [eax],dl
  413c11:	aam    0x1a
  413c13:	sub    eax,0x77fe4a4f
  413c18:	pop    es
  413c19:	ret    0x4be9
  413c1c:	mov    edx,0xca9d064b
  413c21:	out    dx,eax
  413c22:	jecxz  0x413bb5
  413c24:	rcr    BYTE PTR [ecx+edi*4+0x76627b2e],1
  413c2b:	mov    dh,0xf3
  413c2d:	adc    al,0x6d
  413c2f:	cmp    ecx,DWORD PTR [esi-0x10ed41e4]
  413c35:	dec    edx
  413c36:	pop    edx
  413c37:	pop    ss
  413c38:	cmp    al,cl
  413c3a:	add    edx,DWORD PTR [edx]
  413c3c:	pop    eax
  413c3d:	sbb    bh,BYTE PTR [ebx-0x50a3fc46]
  413c43:	(bad)  
  413c45:	mov    cl,0x5
  413c47:	(bad)  
  413c48:	cmp    al,BYTE PTR [edi+edx*1+0x1e]
  413c4c:	sbb    esi,DWORD PTR [edi]
  413c4e:	push   eax
  413c4f:	jne    0x413cae
  413c51:	dec    edi
  413c52:	and    BYTE PTR [ebx+0x5e27a7bd],0x2d
  413c59:	add    ecx,DWORD PTR [ebx-0x3c99548d]
  413c5f:	lods   al,BYTE PTR ds:[esi]
  413c60:	or     al,0xc8
  413c62:	fimul  DWORD PTR [ebx+0x316fdf3]
  413c68:	test   BYTE PTR [esi+0x4e4b848],dh
  413c6e:	and    DWORD PTR [eax+0xbe6440c],edi
  413c74:	(bad)  
  413c75:	mov    WORD PTR [ebx-0x7f],ss
  413c78:	jo     0x413c77
  413c7a:	aas    
  413c7b:	nop    ecx
  413c7e:	pop    esi
  413c7f:	xlat   BYTE PTR ds:[ebx]
  413c80:	lahf   
  413c81:	adc    BYTE PTR [esi+0xb4bf42c],cl
  413c87:	mov    ebx,0xbdee498a
  413c8c:	push   ebp
  413c8d:	loopne 0x413cf7
  413c8f:	stc    
  413c90:	jle    0x413cf9
  413c92:	pop    ebx
  413c93:	and    eax,0x80351d1e
  413c98:	rol    DWORD PTR [edi+0x3b76dc99],0xa2
  413c9f:	in     al,dx
  413ca0:	mov    ds:0x493d7dc,al
  413ca5:	dec    esi
  413ca6:	js     0x413c84
  413ca8:	lea    ecx,[ebx]
  413caa:	and    al,al
  413cac:	jbe    0x413d18
  413cae:	outs   dx,BYTE PTR ds:[esi]
  413caf:	xchg   ebx,eax
  413cb0:	mov    ds:0xbe25ac36,al
  413cb5:	mov    eax,ds:0xf17b9547
  413cba:	xchg   ecx,eax
  413cbb:	inc    ebx
  413cbc:	xor    esi,ecx
  413cbe:	xchg   edi,eax
  413cbf:	shr    DWORD PTR es:[ecx+eax*8+0x56],cl
  413cc4:	dec    edx
  413cc5:	sbb    DWORD PTR [edx+0x2507fb58],eax
  413ccb:	es mov cl,0x92
  413cce:	xchg   edi,ecx
  413cd0:	popf   
  413cd1:	dec    edx
  413cd2:	jge    0x413cc7
  413cd4:	push   0xd3959b75
  413cd9:	ds aad 0x3d
  413cdc:	and    eax,0xd4bc7d25
  413ce1:	cld    
  413ce2:	push   esp
  413ce3:	jns    0x413d24
  413ce5:	jl     0x413ce1
  413ce7:	hlt    
  413ce8:	push   0xfffffffe
  413cea:	stc    
  413ceb:	xchg   ebp,eax
  413cec:	mov    edi,0xe9a61b5d
  413cf1:	pop    ebx
  413cf2:	sbb    DWORD PTR [eax],esi
  413cf4:	adc    DWORD PTR [ebx+0x37],edi
  413cf7:	adc    BYTE PTR [esi],0x18
  413cfa:	repz std 
  413cfc:	mov    WORD PTR [ebp+0xc],?
  413cff:	xor    esp,esp
  413d01:	xor    cl,BYTE PTR [ecx]
  413d03:	(bad)  
  413d04:	or     al,al
  413d06:	add    eax,0xfd6e5e7b
  413d0b:	icebp  
  413d0c:	jns    0x413d62
  413d0e:	test   BYTE PTR [edi],al
  413d10:	mov    BYTE PTR [ebp-0x21],dh
  413d13:	sub    al,0xcc
  413d15:	mul    BYTE PTR [eax+0x2]
  413d18:	outs   dx,DWORD PTR ds:[esi]
  413d19:	in     al,dx
  413d1a:	bound  ebp,QWORD PTR [eax]
  413d1c:	dec    edx
  413d1d:	not    bl
  413d1f:	add    bl,BYTE PTR [ecx+0x2ae8d2f2]
  413d25:	call   0x5c5b444d
  413d2a:	xor    edx,DWORD PTR [ecx]
  413d2c:	push   ss
  413d2d:	retf   0x66a2
  413d30:	push   eax
  413d31:	pop    ds
  413d32:	sub    esp,esi
  413d34:	out    dx,eax
  413d35:	mov    ebp,0x5a2c18bb
  413d3a:	aas    
  413d3b:	das    
  413d3c:	aas    
  413d3d:	addr16 cwde 
  413d3f:	popa   
  413d40:	pusha  
  413d41:	leave  
  413d42:	sub    al,0x50
  413d44:	mov    edx,0x245575ed
  413d49:	in     eax,dx
  413d4a:	cmp    eax,0x2fc3adc8
  413d4f:	xlat   BYTE PTR ds:[ebx]
  413d50:	jb     0x413cde
  413d52:	mov    al,ds:0x5c890b4d
  413d57:	ret    
  413d58:	aam    0xd
  413d5a:	jge    0x413d93
  413d5c:	inc    ecx
  413d5d:	out    0x36,al
  413d5f:	cmp    cl,cl
  413d61:	nop
  413d62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d63:	ins    WORD PTR es:[edi],dx
  413d65:	xor    al,0xa
  413d67:	mov    ebx,0xedb6b8b2
  413d6c:	jno    0x413d6f
  413d6e:	lahf   
  413d6f:	repz cmp eax,ebx
  413d72:	iret   
  413d73:	out    0xea,eax
  413d75:	add    al,0x27
  413d77:	popf   
  413d78:	or     eax,0xc76b7f87
  413d7d:	sbb    esp,eax
  413d7f:	sahf   
  413d80:	and    DWORD PTR [ebx+0x26],esp
  413d83:	adc    bh,BYTE PTR [ebx]
  413d85:	mov    ds:0x97f20147,al
  413d8a:	pop    esp
  413d8b:	xchg   esp,eax
  413d8c:	inc    esi
  413d8d:	test   DWORD PTR [edx-0x4b404c77],eax
  413d93:	push   ebp
  413d94:	sub    cl,dh
  413d96:	xchg   ebx,eax
  413d97:	sub    al,0x1b
  413d99:	je     0x413db7
  413d9b:	inc    ebx
  413d9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d9d:	pop    ebp
  413d9e:	fimul  DWORD PTR [esi+ebx*2-0x1b2f2684]
  413da5:	pop    esp
  413da6:	push   ds
  413da7:	in     al,dx
  413da8:	dec    edi
  413da9:	cmp    esi,esi
  413dab:	push   edi
  413dac:	adc    al,0xf3
  413dae:	adc    eax,0xb0796a3e
  413db3:	cmp    BYTE PTR [edx+ecx*8-0x4c],0x18
  413db8:	pop    ecx
  413db9:	and    DWORD PTR [ecx+0x24ce841],esp
  413dbf:	sbb    DWORD PTR ds:0xccab0b32,ebp
  413dc5:	xchg   edi,eax
  413dc6:	and    eax,DWORD PTR [eax+edi*1+0x67]
  413dca:	sbb    BYTE PTR [edi],cl
  413dcc:	sbb    al,0x29
  413dce:	mov    ds:0xa6c839cc,eax
  413dd3:	jb     0x413d67
  413dd5:	enter  0x8996,0x40
  413dd9:	int    0xb5
  413ddb:	popa   
  413ddc:	call   0xce64fb90
  413de1:	out    0xb,eax
  413de3:	ja     0x413dfe
  413de5:	in     al,0x98
  413de7:	inc    BYTE PTR [eax-0x6d]
  413dea:	(bad)  
  413deb:	push   esi
  413dec:	sbb    esi,DWORD PTR [ecx+edi*1-0x14]
  413df0:	loopne 0x413d85
  413df2:	sbb    edx,ebp
  413df4:	jb     0x413daa
  413df6:	add    cl,BYTE PTR [edx-0x2318ff19]
  413dfc:	pop    ebx
  413dfd:	mov    ds:0xe4ff437,eax
  413e02:	aaa    
  413e03:	fmul   st(3),st
  413e05:	nop
  413e06:	retf   
  413e07:	in     eax,0x10
  413e09:	ins    BYTE PTR es:[edi],dx
  413e0a:	(bad)  
  413e0b:	(bad)  
  413e0c:	xchg   ecx,eax
  413e0d:	adc    BYTE PTR fs:[ecx+ebp*4+0x5c9f82db],bl
  413e15:	push   edx
  413e16:	add    DWORD PTR [edi-0x32],ebx
  413e19:	or     al,0xca
  413e1b:	xchg   edx,eax
  413e1c:	iret   
  413e1d:	aaa    
  413e1e:	push   0x8f0b1bb9
  413e23:	fimul  DWORD PTR [esi+0x69]
  413e26:	and    BYTE PTR [ebp-0x23],0xca
  413e2a:	fisttp QWORD PTR ds:0x229cecf9
  413e30:	and    al,0x9a
  413e32:	and    DWORD PTR [eax+0x45],esp
  413e35:	jae    0x413e4a
  413e37:	(bad)  
  413e38:	ins    BYTE PTR es:[edi],dx
  413e39:	sbb    eax,0x1002e340
  413e3e:	fldcw  WORD PTR [eax+0xc]
  413e41:	call   0xbbad2926
  413e46:	fild   WORD PTR [ebx+edx*8+0xe]
  413e4a:	jg     0x413e26
  413e4c:	sbb    bl,dl
  413e4e:	pop    es
  413e4f:	dec    esi
  413e50:	aam    0x82
  413e52:	pop    ebp
  413e53:	ret    0x776a
  413e56:	(bad)
  413e59:	(bad)  
  413e5a:	daa    
  413e5b:	mov    DWORD PTR [eax+eiz*2],0xba192bae
  413e62:	or     al,0x95
  413e64:	fcmovnbe st,st(6)
  413e66:	fs push cs
  413e68:	inc    edi
  413e69:	sub    cl,BYTE PTR [esp+edi*1]
  413e6c:	popf   
  413e6d:	sbb    BYTE PTR [ebx-0x1],al
  413e70:	jmp    0x413e16
  413e72:	lods   al,BYTE PTR ds:[esi]
  413e73:	fwait
  413e74:	dec    eax
  413e75:	inc    ebx
  413e76:	arpl   WORD PTR [esi+0x7e],cx
  413e79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e7a:	fisttp DWORD PTR [edi]
  413e7c:	xor    ecx,DWORD PTR [eax+0x44]
  413e7f:	loopne 0x413e30
  413e81:	stc    
  413e82:	push   ebp
  413e83:	lock test al,0x16
  413e86:	mov    edx,0x3fcc09cf
  413e8b:	mul    ecx
  413e8d:	sbb    ch,BYTE PTR [edx+edx*8+0x1a]
  413e91:	mov    ebp,0x6057a1bb
  413e96:	int    0xe2
  413e98:	test   DWORD PTR [ebp-0x7dc4d956],0xe1e8e300
  413ea2:	push   ebp
  413ea3:	dec    ecx
  413ea4:	out    0x36,al
  413ea6:	pop    esp
  413ea7:	(bad)  
  413ea8:	pop    ss
  413ea9:	push   ds
  413eaa:	stc    
  413eab:	sub    eax,0x3b7427ff
  413eb0:	cmp    BYTE PTR [ebx+0x5c],cl
  413eb3:	fsub   DWORD PTR [ebx]
  413eb5:	jecxz  0x413eb9
  413eb7:	stos   DWORD PTR es:[edi],eax
  413eb8:	dec    esp
  413eb9:	out    0xbb,al
  413ebb:	aas    
  413ebc:	jo     0x413e8e
  413ebe:	pop    esp
  413ebf:	push   esp
  413ec0:	jno    0x413f0d
  413ec2:	daa    
  413ec3:	or     eax,0x2e4a05f3
  413ec8:	mov    eax,DWORD PTR [esi-0x47f67c37]
  413ece:	data16 out 0x1d,al
  413ed1:	imul   eax,DWORD PTR [edi+0x25],0xec6d5da0
  413ed8:	hlt    
  413ed9:	ins    DWORD PTR es:[edi],dx
  413eda:	mov    esp,0xd99974b7
  413edf:	int3   
  413ee0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ee1:	lods   eax,DWORD PTR ds:[esi]
  413ee2:	push   edi
  413ee3:	cs or  al,0x7e
  413ee6:	dec    esp
  413ee7:	dec    ebx
  413ee8:	jae    0x413f10
  413eea:	test   eax,0xe2364efb
  413eef:	sub    al,0x8c
  413ef1:	mov    edi,0xee2e3c32
  413ef6:	mov    edi,0xdd976f5c
  413efb:	push   ecx
  413efc:	add    cl,BYTE PTR [eax-0x1b]
  413eff:	add    DWORD PTR [esi+ebx*4+0x3b],0x3316dad0
  413f07:	mov    ebp,0xbd05c969
  413f0c:	dec    ecx
  413f0d:	jbe    0x413ef5
  413f0f:	jle    0x413e9b
  413f11:	xor    BYTE PTR [edx+0x2f776bd5],dh
  413f17:	fsubp  st(0),st
  413f19:	pop    edx
  413f1a:	out    0x8,eax
  413f1c:	stc    
  413f1d:	mov    edx,ebp
  413f1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f20:	cmp    eax,0x7a6c059e
  413f25:	mov    eax,ds:0x603b045c
  413f2a:	mov    ebx,DWORD PTR [ebx+0x2b]
  413f2d:	cmp    edi,DWORD PTR [eax-0x7d]
  413f30:	cdq    
  413f31:	xor    al,BYTE PTR [esi+eiz*8-0x51d0c240]
  413f38:	cmp    DWORD PTR [esi+0x33],edi
  413f3b:	out    0x96,al
  413f3d:	ja     0x413ec7
  413f3f:	mov    eax,0x71b896ed
  413f44:	out    0x13,al
  413f46:	(bad)  
  413f48:	sbb    DWORD PTR [ebx],edi
  413f4a:	pop    edi
  413f4b:	and    BYTE PTR [ebx-0x7c],al
  413f4e:	adc    dl,BYTE PTR [eax-0x6d]
  413f51:	push   ecx
  413f52:	xchg   BYTE PTR [ebx+ebx*1+0x615a4bb1],ch
  413f59:	ret    
  413f5a:	mov    eax,ds:0x5caa3c
  413f5f:	xchg   edx,eax
  413f60:	push   0xffffffbe
  413f62:	sbb    ebp,eax
  413f64:	and    BYTE PTR [edx],ah
  413f66:	mov    dl,0x2d
  413f68:	loopne 0x413f09
  413f6a:	into   
  413f6b:	mov    bl,BYTE PTR [edi+0x336bbb6f]
  413f71:	jl     0x413f68
  413f73:	jp     0x413f20
  413f75:	xor    ecx,DWORD PTR [ebx+0x22]
  413f78:	(bad)  
  413f79:	fwait
  413f7a:	push   esi
  413f7b:	arpl   WORD PTR [ebp-0x51],bx
  413f7e:	lahf   
  413f7f:	dec    esp
  413f80:	jge    0x413faa
  413f82:	scas   eax,DWORD PTR es:[edi]
  413f83:	in     eax,0x76
  413f85:	fstp   DWORD PTR ds:0xa3261873
  413f8b:	jo     0x413fee
  413f8d:	stos   DWORD PTR es:[edi],eax
  413f8e:	shl    DWORD PTR [ebx+eax*8+0xb87daab],cl
  413f95:	enter  0xffc,0xd8
  413f99:	test   DWORD PTR [esi-0x1d468d52],esi
  413f9f:	in     al,dx
  413fa0:	shr    BYTE PTR [esi+0x52],1
  413fa3:	sub    BYTE PTR [ecx],0x34
  413fa6:	fs ss mov dl,0xd1
  413faa:	sar    BYTE PTR [ebx],0x12
  413fad:	pushf  
  413fae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413faf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fb0:	test   ecx,ecx
  413fb2:	push   es
  413fb3:	push   0x237f3a14
  413fb8:	xchg   ebp,eax
  413fb9:	push   ebp
  413fba:	lea    ebx,[esi+0x763eaff5]
  413fc0:	es retf 
  413fc2:	sub    DWORD PTR [edx-0x33],ecx
  413fc5:	mul    BYTE PTR [esi+0x680158e1]
  413fcb:	xchg   edi,eax
  413fcc:	ss cmp bh,BYTE PTR ds:[eax-0x16f40437]
  413fd4:	mov    ecx,0xa2f69948
  413fd9:	outs   dx,BYTE PTR ds:[esi]
  413fda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fdb:	mov    eax,0x5faaebad
  413fe0:	adc    BYTE PTR [edx+edx*2+0x21],ch
  413fe4:	inc    esi
  413fe5:	sub    eax,0xebbaf15a
  413fea:	aaa    
  413feb:	pop    edi
  413fec:	sahf   
  413fed:	inc    ebp
  413fee:	jns    0x413fa4
  413ff0:	jge    0x413ff9
  413ff2:	xor    edx,edi
  413ff4:	sub    ch,al
  413ff6:	outs   dx,BYTE PTR ds:[esi]
  413ff7:	or     al,0xe0
  413ff9:	lods   eax,DWORD PTR ds:[esi]
  413ffa:	inc    edx
  413ffb:	scas   al,BYTE PTR es:[edi]
  413ffc:	out    0x42,al
  413ffe:	adc    eax,0x52d92fe5
  414003:	dec    ebp
  414004:	ficomp DWORD PTR [edx]
  414006:	inc    ecx
  414007:	ja     0x413fd9
  414009:	and    eax,0xa9e3206c
  41400e:	and    eax,DWORD PTR [ebp-0x5f]
  414011:	cmp    dh,dh
  414013:	sub    DWORD PTR [esp+esi*1-0x5d],0xb535759e
  41401b:	xlat   BYTE PTR ds:[ebx]
  41401c:	fiadd  WORD PTR [ebx-0x23]
  41401f:	(bad)  [ebx+0xe107b1]
  414025:	cmc    
  414026:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414027:	inc    edi
  414028:	sub    eax,0xb3d0a0dd
  41402d:	mov    WORD PTR [edi-0x1a85751d],es
  414033:	xor    dl,BYTE PTR [ebp-0x4c654211]
  414039:	test   DWORD PTR [ecx+esi*4+0x51],edx
  41403d:	scas   eax,DWORD PTR es:[edi]
  41403e:	cli    
  41403f:	enter  0x13d7,0xbe
  414043:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414044:	out    dx,eax
  414045:	cmp    BYTE PTR [ebp-0x323c52e8],al
  41404b:	sbb    dl,0x97
  41404e:	mov    ebx,0x93b0150f
  414053:	fwait
  414054:	sbb    eax,0x5b550a4f
  414059:	imul   DWORD PTR [ebx-0x5d359a04]
  41405f:	outs   dx,BYTE PTR ds:[esi]
  414060:	xchg   ebp,eax
  414061:	(bad)  
  414063:	out    0xb1,al
  414065:	fs cld 
  414067:	fisttp WORD PTR [eax]
  414069:	xchg   ecx,eax
  41406a:	inc    esi
  41406b:	add    BYTE PTR [ebp+0x67],bh
  41406e:	call   0x5b688b3a
  414073:	retf   
  414074:	add    al,0xc
  414076:	dec    esp
  414077:	clc    
  414078:	int3   
  414079:	(bad)  
  41407a:	in     eax,dx
  41407b:	jo     0x4140cd
  41407d:	mov    DWORD PTR [edx],ebp
  41407f:	mov    cl,0xf2
  414081:	test   DWORD PTR [esi+eiz*2-0x705b0bfb],ecx
  414088:	mov    ebx,0xd8d7cd26
  41408d:	outs   dx,DWORD PTR ds:[esi]
  41408e:	int    0xaa
  414090:	xchg   ecx,eax
  414091:	pop    ds
  414092:	push   eax
  414093:	lahf   
  414094:	pop    eax
  414095:	push   edx
  414096:	cmp    DWORD PTR [esi+eiz*4+0x9c25efe],ebp
  41409d:	jno    0x4140d7
  41409f:	sbb    al,0xc3
  4140a1:	sub    al,0x7a
  4140a3:	js     0x414055
  4140a5:	cwde   
  4140a6:	out    0x3c,eax
  4140a8:	ret    
  4140a9:	mov    ebx,0xded3e4d3
  4140ae:	adc    eax,0x89bd23fc
  4140b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140b4:	add    dl,BYTE PTR [esi]
  4140b6:	pop    edx
  4140b7:	mov    ebp,0x3a0d5bc
  4140bc:	mov    dh,0xb6
  4140be:	and    eax,0xc85a1984
  4140c3:	inc    edi
  4140c4:	mov    ds:0x6944f89c,eax
  4140c9:	inc    BYTE PTR [edi]
  4140cb:	and    bh,BYTE PTR [esi+0x4e]
  4140ce:	or     DWORD PTR [ebx-0x57],ecx
  4140d1:	je     0x41413c
  4140d3:	xor    eax,0x230fc3e2
  4140d8:	inc    eax
  4140d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140da:	jbe    0x414075
  4140dc:	fwait
  4140dd:	adc    ch,cl
  4140df:	pop    esp
  4140e0:	push   edi
  4140e1:	popf   
  4140e2:	sahf   
  4140e3:	clc    
  4140e4:	(bad)  
  4140e5:	cmp    eax,0x96c0a86a
  4140ea:	add    DWORD PTR [edi],ebx
  4140ec:	sti    
  4140ed:	sbb    al,0x45
  4140ef:	push   ecx
  4140f0:	mov    dh,0x6
  4140f2:	adc    dh,BYTE PTR [esi+0x30b1c9cb]
  4140f8:	das    
  4140f9:	cwde   
  4140fa:	jp     0x414107
  4140fc:	or     al,0xeb
  4140fe:	fidivr DWORD PTR [ebx+0x3]
  414101:	(bad)  
  414102:	std    
  414103:	fild   QWORD PTR [ebx+esi*1+0x34]
  414107:	sub    BYTE PTR [edi-0x21e62da8],0x28
  41410e:	out    dx,al
  41410f:	imul   ebp,DWORD PTR ds:0x799dd39c,0xfffffff7
  414116:	sub    eax,0x3b4699eb
  41411b:	add    DWORD PTR gs:[ebx-0x7d],esp
  41411f:	popa   
  414120:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414121:	add    BYTE PTR [edx-0x58e927a3],cl
  414127:	or     eax,0x51e15c27
  41412c:	pop    edi
  41412d:	int    0x78
  41412f:	and    BYTE PTR [edi+0x55],dh
  414132:	iret   
  414133:	mov    esi,DWORD PTR [si-0x32ea]
  414138:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414139:	fbld   TBYTE PTR [ecx+0x11f885d1]
  41413f:	push   ecx
  414140:	mov    ss,WORD PTR [eax-0x1572f547]
  414146:	loopne 0x4140d2
  414148:	clts   
  41414a:	scas   eax,DWORD PTR es:[edi]
  41414b:	lods   eax,DWORD PTR ds:[esi]
  41414c:	inc    ebp
  41414d:	shr    BYTE PTR [ebx-0x33dcee26],cl
  414153:	retf   
  414154:	mov    bl,0x3a
  414156:	sub    BYTE PTR [ebp-0x32],0x4a
  41415a:	xchg   ebp,eax
  41415b:	jp     0x414148
  41415d:	stc    
  41415e:	and    ecx,DWORD PTR [edi-0x483d78fd]
  414164:	xor    al,al
  414166:	jg     0x4141cd
  414168:	into   
  414169:	push   0x3e
  41416b:	dec    esp
  41416c:	jmp    0x4141b0
  41416e:	test   al,0x9c
  414170:	inc    esi
  414171:	dec    eax
  414172:	rol    DWORD PTR [ebx],cl
  414174:	les    esi,FWORD PTR [ecx+0x727b17ad]
  41417a:	jae    0x414140
  41417c:	sub    DWORD PTR [ebp+0x242d2673],ecx
  414182:	xchg   BYTE PTR [ebp-0x48],al
  414185:	xchg   edx,eax
  414186:	push   edi
  414187:	aam    0x19
  414189:	sub    ebp,DWORD PTR [ebp-0x1f]
  41418c:	mov    bh,0xcc
  41418e:	inc    ebp
  41418f:	aad    0xf1
  414191:	js     0x414143
  414193:	cmp    BYTE PTR ds:0xd30d4f9d,bl
  414199:	fcmovnu st,st(1)
  41419b:	push   ss
  41419c:	(bad)  
  41419e:	inc    ebx
  41419f:	std    
  4141a0:	push   0x78d58f60
  4141a5:	and    BYTE PTR [ebp-0x5f9a9f89],dl
  4141ab:	(bad)  
  4141ac:	popf   
  4141ad:	add    BYTE PTR [eax+edi*2],al
  4141b0:	das    
  4141b1:	int3   
  4141b2:	stos   BYTE PTR es:[edi],al
  4141b3:	mov    ch,0xe4
  4141b5:	es scas al,BYTE PTR es:[edi]
  4141b7:	xor    BYTE PTR [esi+0x76943e63],ch
  4141bd:	push   ebx
  4141be:	xchg   edx,eax
  4141bf:	jae    0x414192
  4141c1:	int    0xa6
  4141c3:	pushf  
  4141c4:	and    bl,BYTE PTR [ebx-0x54]
  4141c7:	mov    ebp,0x9934f9e3
  4141cc:	scas   al,BYTE PTR es:[edi]
  4141cd:	inc    esp
  4141ce:	les    ecx,FWORD PTR [ebp-0x67a2271a]
  4141d4:	fsub   st,st(0)
  4141d6:	test   DWORD PTR [edx],0x10786a7f
  4141dc:	inc    edx
  4141dd:	adc    BYTE PTR [edi+edi*2],bl
  4141e0:	xchg   ecx,eax
  4141e1:	in     eax,0x9
  4141e3:	ret    
  4141e4:	push   ecx
  4141e5:	repnz repz rcl BYTE PTR [eax-0x63590d04],1
  4141ed:	jl     0x414208
  4141ef:	shl    ebx,1
  4141f1:	test   eax,0x4f3b0125
  4141f6:	nop
  4141f7:	sar    DWORD PTR [edx],0x4c
  4141fa:	neg    BYTE PTR [esp+esi*1]
  4141fd:	imul   DWORD PTR ds:0xea86a6f4
  414203:	mov    esp,0x840f4575
  414208:	scas   eax,DWORD PTR es:[edi]
  414209:	jns    0x4141ff
  41420b:	add    bl,BYTE PTR [edi]
  41420d:	mov    fs,ebx
  41420f:	call   0x6d1c7c72
  414214:	push   edi
  414215:	cmp    eax,0xf96f4ce0
  41421a:	lods   al,BYTE PTR ds:[esi]
  41421b:	leave  
  41421c:	inc    edx
  41421d:	fs scas al,BYTE PTR es:[edi]
  41421f:	daa    
  414220:	mov    bh,0xde
  414222:	sbb    bh,0xfe
  414225:	adc    BYTE PTR [edx],0xc0
  414228:	adc    al,BYTE PTR [eax-0x5686d582]
  41422e:	and    BYTE PTR [ebx+0x17ac979],bl
  414234:	jp     0x41426b
  414236:	jp     0x414205
  414238:	sbb    BYTE PTR [edi-0x5e],0x2
  41423c:	mov    dl,0x19
  41423e:	test   al,0x2b
  414240:	fcom   QWORD PTR [edx+0x3d]
  414243:	icebp  
  414244:	mov    cl,0x8a
  414246:	jg     0x414266
  414248:	cmp    esp,DWORD PTR [ebx-0x79]
  41424b:	xor    cl,BYTE PTR [edx]
  41424d:	jmp    0x13caf3e6
  414252:	shl    BYTE PTR [ebx],cl
  414254:	pop    eax
  414255:	popf   
  414256:	adc    ch,BYTE PTR [ebp-0x35ea86bf]
  41425c:	jo     0x41423f
  41425e:	out    0x8c,al
  414260:	call   0x3bc93956
  414265:	adc    DWORD PTR [eax+0x6abcb290],esi
  41426b:	dec    ecx
  41426c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41426d:	rcl    bh,1
  41426f:	xor    eax,0xa51228dc
  414274:	add    DWORD PTR [ebx+0x2f],edx
  414277:	pop    ds
  414278:	mov    eax,0xf370debb
  41427d:	imul   ebx,DWORD PTR [ebp+0x12cba5a8],0x393e91cb
  414287:	or     eax,0x7a4eca07
  41428c:	(bad)  
  41428d:	jns    0x414278
  41428f:	xchg   ebx,eax
  414290:	jg     0x414222
  414292:	jnp    0x414241
  414294:	jp     0x41429d
  414296:	ins    BYTE PTR es:[edi],dx
  414297:	push   edi
  414298:	imul   esi,DWORD PTR [ecx],0xffffffb8
  41429b:	dec    esi
  41429c:	mov    ch,0x37
  41429e:	sbb    eax,DWORD PTR [ebx]
  4142a0:	aaa    
  4142a1:	sub    DWORD PTR [ebx-0x9],esi
  4142a4:	cwde   
  4142a5:	xlat   BYTE PTR ds:[ebx]
  4142a6:	aam    0xe3
  4142a8:	test   eax,0xfb8c9d08
  4142ad:	jbe    0x4142a0
  4142af:	mov    ah,0x29
  4142b1:	add    BYTE PTR [ebp+0x55],0xbb
  4142b5:	add    esp,edi
  4142b7:	cdq    
  4142b8:	push   esp
  4142b9:	cmc    
  4142ba:	dec    ebp
  4142bb:	xor    esp,DWORD PTR [eax-0x75]
  4142be:	fisttp DWORD PTR [ebx+esi*2-0x1e8601b]
  4142c5:	lock jns 0x4142fc
  4142c8:	outs   dx,DWORD PTR ds:[esi]
  4142c9:	sub    BYTE PTR [eax-0x64e4cd1f],0xe
  4142d0:	lods   eax,DWORD PTR ds:[esi]
  4142d1:	daa    
  4142d2:	scas   eax,DWORD PTR es:[edi]
  4142d3:	or     ecx,DWORD PTR [eax]
  4142d5:	int    0xd2
  4142d7:	inc    DWORD PTR [edx]
  4142d9:	xchg   BYTE PTR [ecx+0x68],cl
  4142dc:	stos   BYTE PTR es:[edi],al
  4142dd:	imul   esp,DWORD PTR ds:[ebx],0xbe8cc59c
  4142e4:	push   ebp
  4142e5:	int3   
  4142e6:	retf   
  4142e7:	push   ebx
  4142e8:	sub    edx,ecx
  4142ea:	fist   WORD PTR [ebx+0x45]
  4142ed:	iret   
  4142ee:	xchg   ecx,eax
  4142ef:	mov    ah,0x1c
  4142f1:	leave  
  4142f2:	das    
  4142f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142f4:	sub    al,BYTE PTR [edi+0x1fdd96b7]
  4142fa:	popa   
  4142fb:	jp     0x414366
  4142fd:	adc    DWORD PTR [ebx+0xb],ebx
  414300:	iret   
  414301:	push   ebp
  414302:	mov    ch,0xca
  414304:	jmp    0x414359
  414306:	add    ah,BYTE PTR [edi-0x56]
  414309:	ja     0x4142e2
  41430b:	icebp  
  41430c:	jns    0x4142d2
  41430e:	jns    0x414338
  414310:	jge    0x4142e8
  414312:	jne    0x4142d7
  414314:	lea    esi,[edx+0xa]
  414317:	mov    ds:0x3dfc05af,eax
  41431c:	push   edx
  41431d:	adc    al,0x0
  41431f:	sbb    BYTE PTR [edx+eiz*1-0x3c3d147d],bh
  414326:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414327:	xchg   ebx,eax
  414328:	hlt    
  414329:	into   
  41432a:	cmp    al,0xd3
  41432c:	inc    ebx
  41432d:	outs   dx,BYTE PTR ds:[esi]
  41432e:	xchg   edi,eax
  41432f:	lahf   
  414330:	shl    dh,0x28
  414333:	jmp    0x7181:0xa35ba8e2
  41433a:	adc    BYTE PTR [edx-0x67],bh
  41433d:	xchg   esi,eax
  41433e:	or     BYTE PTR [ebp-0x369df149],al
  414344:	push   cs
  414345:	jecxz  0x414335
  414347:	in     eax,dx
  414348:	lds    ecx,FWORD PTR [edi-0x1a]
  41434b:	adc    eax,0xa9f25f7a
  414350:	in     al,dx
  414351:	in     eax,0xe
  414353:	ins    BYTE PTR es:[edi],dx
  414354:	ss (bad) 
  414356:	mov    esp,ecx
  414358:	cli    
  414359:	mov    ?,WORD PTR [ebx]
  41435b:	arpl   WORD PTR [esi-0xdb8aa6a],sp
  414361:	clc    
  414362:	sub    ebx,DWORD PTR [ebx+0x54f50ac0]
  414368:	adc    bl,BYTE PTR [ecx+0x2b]
  41436b:	mov    bl,BYTE PTR [edi]
  41436d:	pop    es
  41436e:	add    al,0x3e
  414370:	jns    0x4143e6
  414372:	xlat   BYTE PTR ds:[ebx]
  414373:	push   esi
  414374:	shl    BYTE PTR [eax],0xf5
  414377:	inc    edx
  414378:	push   edx
  414379:	test   DWORD PTR [edi],ecx
  41437b:	and    edx,ebx
  41437d:	or     dh,dh
  41437f:	mov    dl,BYTE PTR [esi+0x18]
  414382:	mov    dh,0x58
  414384:	mov    al,ds:0x12485330
  414389:	and    cl,ah
  41438b:	cmp    esi,DWORD PTR [edi+0x28]
  41438e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41438f:	add    bh,ch
  414391:	retf   
  414392:	fcom   DWORD PTR [edx+0x6e6a60cd]
  414398:	(bad)  
  414399:	data16 and al,BYTE PTR [esi+0x67ea04a4]
  4143a0:	sbb    eax,0xf85ce367
  4143a5:	xor    ah,BYTE PTR [edi+0x64]
  4143a8:	shr    bl,cl
  4143aa:	pop    esi
  4143ab:	jo     0x4143f7
  4143ad:	jecxz  0x41435b
  4143af:	adc    ch,bl
  4143b1:	mov    cl,0x11
  4143b3:	sub    DWORD PTR [esi-0x1b05e40b],esi
  4143b9:	popa   
  4143ba:	push   edi
  4143bb:	and    DWORD PTR [eax],ebx
  4143bd:	pop    es
  4143be:	stos   BYTE PTR es:[edi],al
  4143bf:	dec    ebx
  4143c0:	mov    esp,DWORD PTR [eax-0x41]
  4143c3:	add    ah,ah
  4143c5:	cmp    al,0xd1
  4143c7:	shl    BYTE PTR [esi],1
  4143c9:	scas   eax,DWORD PTR es:[edi]
  4143ca:	pop    ebp
  4143cb:	mov    edx,eax
  4143cd:	inc    ebp
  4143ce:	lods   al,BYTE PTR ds:[esi]
  4143cf:	jo     0x4143b2
  4143d1:	ds jecxz 0x414368
  4143d4:	jp     0x4143c6
  4143d6:	add    ecx,DWORD PTR [esi]
  4143d8:	xor    eax,DWORD PTR [ebp-0x76]
  4143db:	xor    dh,bl
  4143dd:	(bad)  
  4143de:	add    eax,0xd359456
  4143e3:	pop    ecx
  4143e4:	std    
  4143e5:	call   0xbd58cf1e
  4143ea:	xchg   eax,ecx
  4143ec:	out    dx,al
  4143ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143ee:	mov    ebp,DWORD PTR [eax+ebp*4+0x4d]
  4143f2:	dec    ecx
  4143f3:	frstor [eax-0x6378fa45]
  4143f9:	out    dx,eax
  4143fa:	sar    DWORD PTR [edi+0x25],0x22
  4143fe:	in     al,0x2d
  414400:	and    cl,al
  414402:	pop    ebx
  414403:	push   ss
  414404:	inc    esp
  414405:	sub    eax,0xf01e19da
  41440a:	mov    dl,0x86
  41440c:	and    ecx,edx
  41440e:	inc    ebp
  41440f:	xchg   ebp,eax
  414410:	xor    BYTE PTR [ecx],cl
  414412:	shl    BYTE PTR [edi+0x3afbdf1d],0xa0
  414419:	xor    BYTE PTR [ebx+0x1da58119],al
  41441f:	and    eax,0x845a880
  414424:	dec    esi
  414425:	ds in  al,dx
  414427:	ret    
  414428:	call   0xaab14dbd
  41442d:	jp     0x414451
  41442f:	scas   eax,DWORD PTR es:[edi]
  414430:	sbb    DWORD PTR [ebx],ebp
  414432:	sbb    al,0x95
  414434:	test   al,0xaa
  414436:	outs   dx,DWORD PTR ds:[esi]
  414437:	scas   al,BYTE PTR es:[edi]
  414438:	push   es
  414439:	cli    
  41443a:	stos   DWORD PTR es:[edi],eax
  41443b:	cmp    cl,BYTE PTR [edi-0x739a0311]
  414441:	mov    ah,0x8c
  414443:	mov    ch,0xed
  414445:	mov    ds:0x870c070b,eax
  41444a:	or     DWORD PTR [edi+0x5a],eax
  41444d:	sub    al,0x63
  41444f:	repz sbb esp,DWORD PTR [ecx+edx*4]
  414453:	jecxz  0x41441c
  414455:	inc    ecx
  414456:	stos   BYTE PTR es:[edi],al
  414457:	test   DWORD PTR [esp+ecx*1-0x2864ac71],edx
  41445e:	dec    edx
  41445f:	call   0x3d091cb5
  414464:	or     BYTE PTR [edi-0xf7eff55],dl
  41446a:	mov    eax,0x921efe70
  41446f:	popf   
  414470:	push   ds
  414471:	inc    eax
  414472:	cmp    DWORD PTR [ecx-0x1b],ebx
  414475:	arpl   WORD PTR [edi-0x61b2b26e],si
  41447b:	inc    ebp
  41447c:	push   ss
  41447d:	sbb    ebx,DWORD PTR [edi+0x39e2b1ce]
  414483:	xor    eax,0xc9dae33f
  414488:	cmp    ecx,eax
  41448a:	jmp    0x1e8e:0xf4247942
  414491:	adc    eax,0xb1f713a6
  414496:	jecxz  0x4144fc
  414498:	push   ss
  414499:	lds    esi,FWORD PTR [ebx+0x6b084be3]
  41449f:	imul   ebp,DWORD PTR [eax-0x8],0x7e39a905
  4144a6:	inc    ebx
  4144a7:	pop    esp
  4144a8:	in     eax,0xa3
  4144aa:	mov    al,0xd8
  4144ac:	cmp    BYTE PTR [eax-0x20],ah
  4144af:	loope  0x414463
  4144b1:	xchg   ebp,eax
  4144b2:	add    ebx,esi
  4144b4:	mov    esi,0x58dfd39e
  4144b9:	not    esp
  4144bb:	inc    edx
  4144bc:	call   0xb4c2:0x7cd3e8ba
  4144c3:	retf   
  4144c4:	fwait
  4144c5:	out    0xe2,al
  4144c7:	dec    eax
  4144c8:	dec    ecx
  4144c9:	inc    ebx
  4144ca:	fs add eax,0x658b754e
  4144d0:	imul   esi,DWORD PTR [esi],0x52cfd229
  4144d6:	mul    BYTE PTR [ebx-0x18]
  4144d9:	dec    edi
  4144da:	xor    eax,0x7773a98f
  4144df:	push   eax
  4144e0:	jb     0x41447f
  4144e2:	mov    ds:0xe4a8b4d2,al
  4144e7:	jecxz  0x4144a6
  4144e9:	inc    ebp
  4144ea:	fidivr DWORD PTR [edi+0x2d]
  4144ed:	push   0x723aac05
  4144f2:	in     eax,0x8f
  4144f4:	shl    DWORD PTR [eax+0x63652c2c],1
  4144fa:	xchg   DWORD PTR [esi+0x6a],edi
  4144fd:	mov    cl,0x4b
  4144ff:	push   eax
  414500:	jnp    0x4144a9
  414502:	xacquire xchg DWORD PTR ds:0x74a6087d,esi
  414509:	lods   al,BYTE PTR ds:[esi]
  41450a:	sub    edx,0x5a
  41450d:	loope  0x4144b9
  41450f:	sub    al,0x2a
  414511:	icebp  
  414512:	(bad)  
  414513:	(bad)  [ecx]
  414515:	js     0x4144b8
  414517:	inc    eax
  414518:	push   0x4c
  41451a:	cmp    bl,al
  41451c:	xchg   ecx,eax
  41451d:	pop    edi
  41451e:	stc    
  41451f:	js     0x414547
  414521:	dec    esi
  414522:	iret   
  414523:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414524:	ret    
  414525:	xchg   ecx,eax
  414526:	sub    bh,bl
  414528:	rcl    DWORD PTR [edx-0x17],0x51
  41452c:	shr    DWORD PTR [edi],1
  41452e:	inc    ecx
  41452f:	inc    ebx
  414530:	xor    eax,0x72
  414533:	scas   al,BYTE PTR es:[edi]
  414534:	aad    0x7e
  414536:	pushf  
  414537:	test   BYTE PTR [esi-0x27],dh
  41453a:	out    0xf,al
  41453c:	test   eax,0xf21f7caa
  414541:	or     bh,BYTE PTR [edx]
  414543:	aam    0xaf
  414545:	(bad)  
  414546:	stc    
  414547:	inc    ecx
  414548:	xchg   ebp,eax
  414549:	mov    bl,0xc9
  41454b:	out    dx,al
  41454c:	xchg   edx,eax
  41454d:	mov    esi,0x8f5b8a4f
  414552:	inc    esp
  414553:	ja     0x414561
  414555:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414556:	fcomp  QWORD PTR [esi]
  414558:	xor    dh,BYTE PTR [edi+0x22]
  41455b:	test   BYTE PTR [eax-0x793c064a],bl
  414561:	cmc    
  414562:	in     eax,0x15
  414564:	push   es
  414565:	jecxz  0x414538
  414567:	dec    ebx
  414568:	retf   
  414569:	shl    BYTE PTR [edx+edx*4-0x1fb186a],0xa
  414571:	or     dl,BYTE PTR [ebx]
  414573:	fdiv   st(3),st
  414575:	jle    0x414523
  414577:	addr16 test eax,0xba2efcf7
  41457d:	clc    
  41457e:	dec    ebp
  41457f:	or     BYTE PTR [esi+0x2],ah
  414582:	out    dx,eax
  414583:	pop    esi
  414584:	pop    ds
  414585:	jb     0x41451f
  414587:	inc    edi
  414588:	jne    0x4145e7
  41458a:	hlt    
  41458b:	popf   
  41458c:	mov    eax,ds:0xd369ebe6
  414591:	sar    ah,1
  414593:	mov    ch,0xdc
  414595:	addr16 jbe 0x4145ae
  414598:	jne    0x414535
  41459a:	sbb    bh,BYTE PTR [ebp-0x12b0942e]
  4145a0:	xchg   ecx,eax
  4145a1:	sbb    edi,ebx
  4145a3:	pusha  
  4145a4:	cwde   
  4145a5:	jmp    0x8dc0:0xbd19611a
  4145ac:	and    bl,bh
  4145ae:	jb     0x41453d
  4145b0:	jle    0x414601
  4145b2:	push   esi
  4145b3:	jbe    0x4145a3
  4145b5:	xor    ch,ch
  4145b7:	jbe    0x41454c
  4145b9:	imul   edi,ebx,0xb11558e2
  4145bf:	aad    0xc7
  4145c1:	or     al,0xb4
  4145c3:	jo     0x414570
  4145c5:	sar    dl,0xb3
  4145c8:	(bad)  
  4145c9:	fisttp DWORD PTR [eax]
  4145cb:	out    dx,eax
  4145cc:	push   ebx
  4145cd:	xchg   ebx,eax
  4145ce:	fldenv [ecx+0x263fcdbf]
  4145d4:	lods   eax,DWORD PTR ds:[esi]
  4145d5:	or     DWORD PTR [ebp+eax*1+0x50ae2f13],edi
  4145dc:	jbe    0x4145dd
  4145de:	sub    al,0xc2
  4145e0:	jg     0x4145de
  4145e2:	out    0x36,eax
  4145e4:	dec    eax
  4145e5:	cli    
  4145e6:	pop    ebp
  4145e7:	shl    DWORD PTR [ebp+0x6444b493],1
  4145ed:	push   ss
  4145ee:	mov    ebx,0xad838477
  4145f3:	add    al,BYTE PTR [eax-0x236d8ddd]
  4145f9:	jb     0x4145f2
  4145fb:	adc    edi,edi
  4145fd:	push   esp
  4145fe:	mov    esp,0x7f7c600f
  414603:	push   edx
  414604:	mov    dl,0x85
  414606:	(bad)  
  414607:	xor    ebx,esp
  414609:	xchg   BYTE PTR [eax+0xf4d179a],ch
  41460f:	call   0x71d2:0xc6fbbf84
  414616:	xlat   BYTE PTR ds:[ebx]
  414617:	les    ecx,FWORD PTR ds:0x6fa2cebe
  41461d:	aam    0xd3
  41461f:	pop    ebx
  414620:	jmp    0x414621
  414622:	jae    0x4145c1
  414624:	dec    ebx
  414625:	push   ecx
  414626:	mov    ds:0xdb21c620,eax
  41462b:	cmp    bh,al
  41462d:	pop    ss
  41462e:	es jl  0x414640
  414631:	sbb    BYTE PTR [edx-0x28c6cb7c],cl
  414637:	pop    eax
  414638:	popf   
  414639:	adc    eax,ecx
  41463b:	and    DWORD PTR [eax+0x5cc21fa8],eax
  414641:	or     BYTE PTR [ecx-0x69],dh
  414644:	sahf   
  414645:	cdq    
  414646:	or     DWORD PTR [edx-0x49],ebp
  414649:	mov    ds:0x328c6da4,al
  41464e:	adc    DWORD PTR [edi],0xffffffed
  414651:	sbb    eax,0xe25c17c2
  414656:	jbe    0x4146c5
  414658:	cmp    bh,cl
  41465a:	cdq    
  41465b:	sar    DWORD PTR [esi+0x52d5057f],1
  414661:	faddp  st(6),st
  414663:	or     eax,0xa5755f02
  414668:	(bad)  
  414669:	test   eax,0xdb0d07d8
  41466e:	arpl   WORD PTR [esp+ebx*1-0x370bbeb9],dx
  414675:	rcl    BYTE PTR [edi+0x14172730],0x45
  41467c:	dec    edi
  41467d:	fimul  WORD PTR [edx-0x5a]
  414680:	add    ebx,esi
  414682:	into   
  414683:	imul   edi,DWORD PTR [edx+0x104fd3c7],0xffffffdd
  41468a:	cwde   
  41468b:	adc    DWORD PTR [esi-0x7bc209b],esp
  414691:	push   edi
  414692:	sbb    al,0xe6
  414694:	pop    ebx
  414695:	pop    esp
  414696:	push   ss
  414697:	sahf   
  414698:	and    DWORD PTR [esi+ecx*2-0x48f5bbfa],0xffffff9f
  4146a0:	fstp   st(1)
  4146a2:	xor    BYTE PTR [eax-0x2e],bl
  4146a5:	push   ds
  4146a6:	ret    0x9fdd
  4146a9:	test   eax,0x79c9073f
  4146ae:	cmp    DWORD PTR [eax],edi
  4146b0:	mov    dh,0xb3
  4146b2:	add    BYTE PTR [ebx],bh
  4146b4:	repz xlat BYTE PTR ds:[ebx]
  4146b6:	call   0xd801aa5c
  4146bb:	sbb    eax,esi
  4146bd:	imul   esi,DWORD PTR [esi+0x709cda6d],0x72644050
  4146c7:	repnz aam 0xae
  4146ca:	mov    gs,WORD PTR [edi+0x42]
  4146cd:	cs pop ecx
  4146cf:	retf   
  4146d0:	mov    eax,ds:0x1148ac32
  4146d5:	std    
  4146d6:	cmp    al,ah
  4146d8:	in     al,dx
  4146d9:	popf   
  4146da:	or     esp,ebx
  4146dc:	jmp    0x414698
  4146de:	shl    bl,1
  4146e0:	or     al,0xa8
  4146e2:	shr    DWORD PTR [edi-0x5c],cl
  4146e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146e6:	push   eax
  4146e7:	sub    al,0xf5
  4146e9:	mov    dh,0x34
  4146eb:	sbb    BYTE PTR [edx-0x27],bh
  4146ee:	ret    0x5ecb
  4146f1:	test   al,0xb5
  4146f3:	imul   edi,DWORD PTR [ebx],0x78c0f1f0
  4146f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146fa:	ins    BYTE PTR es:[edi],dx
  4146fb:	std    
  4146fc:	jae    0x414693
  4146fe:	dec    ebx
  4146ff:	sbb    ch,ah
  414701:	popf   
  414702:	(bad)  
  414703:	(bad)  
  414704:	ficom  DWORD PTR [eax-0x608fbb17]
  41470a:	cmp    DWORD PTR [ebx+0x1c],ebp
  41470d:	repz out 0x95,eax
  414710:	ds sar ecx,1
  414713:	sbb    eax,0x84b77165
  414718:	cs dec edx
  41471a:	pop    eax
  41471b:	std    
  41471c:	push   ss
  41471d:	jbe    0x414763
  41471f:	stos   BYTE PTR es:[edi],al
  414720:	fidivr WORD PTR [edi+0x3045df83]
  414726:	shl    ch,0x6a
  414729:	fisub  WORD PTR [esp+edi*4-0x17]
  41472d:	or     ebx,edi
  41472f:	fcom   st(7)
  414732:	cmp    ecx,DWORD PTR [edx-0x68]
  414735:	cmp    bl,BYTE PTR [ecx]
  414737:	sbb    bl,dl
  414739:	sti    
  41473a:	fidivr WORD PTR [edi]
  41473c:	cmp    DWORD PTR [eax],esp
  41473e:	xlat   BYTE PTR ds:[ebx]
  41473f:	push   ebp
  414740:	inc    esp
  414741:	fild   QWORD PTR [esi-0x70]
  414744:	pop    esi
  414745:	ins    DWORD PTR es:[edi],dx
  414746:	dec    ebp
  414747:	(bad)  
  414748:	out    0xf2,al
  41474a:	pop    ecx
  41474b:	adc    al,0x74
  41474d:	add    edi,DWORD PTR [ecx]
  41474f:	scas   eax,DWORD PTR es:[edi]
  414750:	div    cl
  414752:	shl    DWORD PTR [eax+0x46],0x2c
  414756:	sbb    al,BYTE PTR [edi+0x2b56414c]
  41475c:	stc    
  41475d:	jg     0x4146df
  41475f:	and    BYTE PTR [esi+0x56],0x5
  414763:	sub    eax,0xaa376722
  414768:	cld    
  414769:	or     al,0x78
  41476b:	lds    ecx,FWORD PTR [esi+edi*8+0x47]
  41476f:	xor    eax,0x8844aa5d
  414774:	rol    DWORD PTR [eax-0x4b],1
  414777:	push   ds
  414778:	adc    ah,BYTE PTR [ebp-0x49d5d9f5]
  41477e:	push   ss
  41477f:	sub    eax,0xf496a3e1
  414784:	test   BYTE PTR [edx-0x9],ch
  414787:	loope  0x4147aa
  414789:	jmp    0xb854:0xfcc5184d
  414790:	out    dx,eax
  414791:	lahf   
  414792:	and    al,0x38
  414794:	cmp    eax,0xfd98fe1
  414799:	ffreep st(1)
  41479b:	adc    al,0xac
  41479d:	push   esi
  41479e:	sbb    dl,BYTE PTR [edi]
  4147a0:	out    0xf0,al
  4147a2:	cli    
  4147a3:	jl     0x41480c
  4147a5:	pushf  
  4147a6:	fcmovnu st,st(0)
  4147a8:	mov    BYTE PTR [edi+0x47],dh
  4147ab:	xor    ah,BYTE PTR [esi-0x3f]
  4147ae:	fcomp  DWORD PTR [edi]
  4147b0:	pop    es
  4147b1:	call   0xb870ce56
  4147b6:	rcl    BYTE PTR ds:[esi],cl
  4147b9:	icebp  
  4147ba:	call   0xe8e7a27
  4147bf:	nop
  4147c0:	push   edi
  4147c1:	daa    
  4147c2:	leave  
  4147c3:	les    ebp,FWORD PTR [ecx]
  4147c5:	or     BYTE PTR [esi],dl
  4147c7:	jecxz  0x4147a0
  4147c9:	push   esi
  4147ca:	imul   cl
  4147cc:	fs iret 
  4147ce:	(bad)  
  4147cf:	fld    st(3)
  4147d1:	cmp    DWORD PTR [ebp+ebp*4+0x3a3a3f7a],esi
  4147d8:	outs   dx,DWORD PTR ds:[esi]
  4147d9:	mov    ebx,0x65357e18
  4147de:	aas    
  4147df:	inc    esi
  4147e0:	arpl   WORD PTR [eax],bp
  4147e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147e3:	add    al,0xc0
  4147e5:	mov    ebp,0x6820fea8
  4147ea:	hlt    
  4147eb:	jp     0x4147d6
  4147ed:	cmc    
  4147ee:	out    dx,al
  4147ef:	fnstsw WORD PTR [ebp+0x1658756]
  4147f5:	stc    
  4147f6:	cmp    DWORD PTR [esi+0x39],esp
  4147f9:	dec    eax
  4147fa:	std    
  4147fb:	push   es
  4147fc:	aas    
  4147fd:	dec    esi
  4147fe:	dec    edx
  4147ff:	dec    eax
  414800:	int3   
  414801:	push   cs
  414802:	fneni(8087 only) 
  414804:	push   edi
  414805:	or     DWORD PTR [edx-0x2bf53ed1],eax
  41480b:	popf   
  41480c:	cmp    al,0x5a
  41480e:	out    0x48,eax
  414810:	xchg   edx,eax
  414811:	out    dx,eax
  414812:	lea    edx,[esi+eax*2+0x69]
  414816:	fldcw  WORD PTR [edx-0x191c88d1]
  41481c:	jmp    FWORD PTR [edx]
  41481e:	loopne 0x4147d1
  414820:	sahf   
  414821:	loopne 0x41483c
  414823:	jo     0x414825
  414825:	xor    BYTE PTR [ecx+eiz*1-0x7a61c82],al
  41482c:	cld    
  41482d:	jl     0x414886
  41482f:	mul    DWORD PTR [ecx]
  414831:	inc    ecx
  414832:	les    eax,FWORD PTR [ebx-0x62]
  414835:	jno    0x414879
  414837:	leave  
  414838:	scas   al,BYTE PTR es:[edi]
  414839:	repz xchg edi,eax
  41483b:	enter  0x961c,0x8e
  41483f:	add    cl,BYTE PTR [ecx+0x15]
  414842:	rcr    DWORD PTR [ecx-0x3f],1
  414845:	push   cs
  414846:	lahf   
  414847:	add    ecx,DWORD PTR [esi-0x7b412e77]
  41484d:	loopne 0x4148a9
  41484f:	das    
  414850:	ja     0x4147e6
  414852:	mul    cl
  414854:	pop    edi
  414855:	sbb    edi,DWORD PTR [eax+0x71accd36]
  41485b:	(bad)  
  41485c:	xlat   BYTE PTR ds:[ebx]
  41485d:	retf   0xa4f
  414860:	sti    
  414861:	ret    
  414862:	cmp    edi,ebp
  414864:	(bad)
  414868:	inc    esp
  414869:	clc    
  41486a:	mov    al,0xd
  41486c:	loopne 0x41488c
  41486e:	hlt    
  41486f:	xchg   esi,eax
  414870:	ret    0x8a21
  414873:	data16 cld 
  414875:	pop    edx
  414876:	add    al,0x62
  414878:	or     BYTE PTR [esi+0x32],cl
  41487b:	les    ecx,FWORD PTR [eax-0x425e310b]
  414881:	stos   DWORD PTR es:[edi],eax
  414882:	sub    ebx,DWORD PTR [ebx]
  414884:	imul   ebx,ebx,0x9cbfb4ec
  41488a:	pop    esp
  41488b:	ficom  WORD PTR [eax+0x3f]
  41488e:	inc    ebx
  41488f:	or     BYTE PTR [ebp+esi*8+0x1d4ebbd1],ch
  414896:	sub    eax,0x9fe9f7d6
  41489b:	and    DWORD PTR [ebx+0x13],esi
  41489e:	push   eax
  4148a0:	inc    edi
  4148a1:	cmp    DWORD PTR [eax-0x1d],ebp
  4148a4:	jmp    0x41488d
  4148a6:	popf   
  4148a7:	lock adc DWORD PTR [edi-0x3a],eax
  4148ab:	jmp    0xfc02:0x7afeabd1
  4148b2:	dec    edx
  4148b3:	test   BYTE PTR [esi+0x7e],bl
  4148b6:	inc    edx
  4148b7:	ins    BYTE PTR es:[edi],dx
  4148b8:	in     al,dx
  4148b9:	in     al,dx
  4148ba:	add    ch,bl
  4148bc:	cld    
  4148bd:	pop    ecx
  4148be:	sbb    al,0x16
  4148c0:	(bad)  
  4148c1:	lods   al,BYTE PTR ds:[esi]
  4148c2:	push   esp
  4148c3:	rol    DWORD PTR [esi],0xc3
  4148c6:	ret    0xcc8c
  4148c9:	and    edx,DWORD PTR [ebx+esi*2+0x5232c4a5]
  4148d0:	popa   
  4148d1:	pop    esi
  4148d2:	push   ss
  4148d3:	shl    BYTE PTR [ecx-0x76018158],cl
  4148d9:	stos   BYTE PTR es:[edi],al
  4148da:	dec    ecx
  4148db:	daa    
  4148dc:	mov    BYTE PTR [ebx+0xe4eb3e3],dl
  4148e2:	add    DWORD PTR [eax-0x59],0x62
  4148e6:	inc    eax
  4148e7:	retf   0x1b9a
  4148ea:	push   esi
  4148eb:	into   
  4148ec:	mov    edi,0x66d5ac2f
  4148f1:	gs leave 
  4148f3:	in     al,0x3b
  4148f5:	sub    BYTE PTR [edx+0x1a],bl
  4148f8:	dec    edi
  4148f9:	pop    eax
  4148fa:	pop    ecx
  4148fb:	pop    ebp
  4148fc:	repz jne 0x41496c
  4148ff:	stos   BYTE PTR es:[edi],al
  414900:	adc    DWORD PTR [edi-0xeee15a],ebp
  414906:	xor    dl,bh
  414908:	ja     0x41497a
  41490a:	test   al,bl
  41490c:	cwde   
  41490d:	cmc    
  41490e:	xor    bl,bh
  414910:	mov    ebp,?
  414912:	xchg   ebp,eax
  414913:	imul   ebx,DWORD PTR [ebx-0x65],0x16
  414917:	dec    ecx
  414918:	mov    ebp,0x472f8589
  41491d:	mov    WORD PTR [eax-0x21],?
  414920:	mov    cl,0xc5
  414922:	push   di
  414924:	dec    ebx
  414925:	cmp    ah,BYTE PTR [edx]
  414927:	jb     0x414952
  414929:	addr16 push esp
  41492b:	xchg   ecx,eax
  41492c:	sti    
  41492d:	push   ebp
  41492e:	xor    al,0x57
  414930:	push   cs
  414931:	jns    0x4148b9
  414933:	push   ds
  414934:	pop    edx
  414935:	mov    al,ds:0x74f5f260
  41493a:	and    dl,BYTE PTR [edx-0xdaacf0d]
  414940:	lods   al,BYTE PTR ds:[esi]
  414941:	iret   
  414942:	dec    ebp
  414943:	in     eax,0x3c
  414945:	out    0x57,eax
  414947:	dec    eax
  414948:	out    0xc,al
  41494a:	sub    DWORD PTR [eax+0x30307010],eax
  414950:	inc    esp
  414951:	sbb    BYTE PTR [edi+0x56296587],0xbb
  414958:	sbb    DWORD PTR [edi],0x39
  41495b:	pop    es
  41495c:	(bad)  
  41495d:	dec    eax
  41495e:	or     al,0x2e
  414960:	sti    
  414961:	loope  0x414963
  414963:	sbb    DWORD PTR [ebx*2-0x240dce95],0x77
  41496b:	xor    BYTE PTR [eax+0xa934695],bh
  414971:	mov    eax,0x6f891ade
  414976:	test   BYTE PTR [ebx+edi*4+0x7c1d1adc],ah
  41497d:	push   0xa5e4d2f4
  414982:	ret    0xb00
  414985:	je     0x4149f4
  414987:	and    edi,DWORD PTR fs:[edx+0x3b]
  41498b:	mov    al,0xec
  41498d:	test   eax,0x6ddc9482
  414992:	mov    eax,ds:0x5dc3f99d
  414997:	in     al,dx
  414998:	cwde   
  414999:	inc    esi
  41499a:	(bad)  
  41499b:	pop    esp
  41499c:	rcl    DWORD PTR es:[edx],1
  41499f:	xor    eax,0xab29ebda
  4149a5:	dec    esp
  4149a6:	aas    
  4149a7:	and    ch,0x50
  4149aa:	dec    eax
  4149ab:	lods   eax,DWORD PTR ds:[esi]
  4149ac:	dec    esi
  4149ad:	or     eax,0xf36d19a5
  4149b2:	push   edi
  4149b3:	neg    DWORD PTR [eax-0x6fcc6c9d]
  4149b9:	push   edx
  4149ba:	dec    edi
  4149bb:	stos   DWORD PTR es:[edi],eax
  4149bc:	dec    ebx
  4149bd:	mov    esp,0xd069f288
  4149c2:	sahf   
  4149c3:	ja     0x414a1b
  4149c5:	jle    0x4149a4
  4149c7:	pop    edi
  4149c8:	cs pushf 
  4149ca:	test   eax,0x3644cdfd
  4149cf:	(bad)  
  4149d1:	leave  
  4149d2:	jmp    0x62eb:0xd05cb257
  4149d9:	sbb    eax,0xaf51a948
  4149de:	loope  0x4149f6
  4149e0:	and    eax,0x66d9b39c
  4149e5:	push   es
  4149e6:	dec    esi
  4149e7:	in     al,dx
  4149e8:	or     al,0x2d
  4149ea:	leave  
  4149eb:	shl    esi,0x5
  4149ee:	jp     0x4149e5
  4149f0:	or     BYTE PTR [ecx-0x1e7a653d],ah
  4149f6:	xchg   ebp,eax
  4149f7:	cmp    al,0x3b
  4149f9:	rol    DWORD PTR [ebx+0x69],0x91
  4149fd:	mov    dh,0x18
  4149ff:	xor    eax,0xbd5a9906
  414a04:	pop    edi
  414a05:	ins    BYTE PTR es:[edi],dx
  414a06:	add    DWORD PTR [ecx-0x55],ecx
  414a09:	mov    ds:0xc46e0050,eax
  414a0e:	push   ebx
  414a0f:	jnp    0x414a00
  414a11:	mov    ds:0xd59aa6b6,al
  414a16:	xchg   BYTE PTR [ebx-0xf8a5b94],bh
  414a1c:	popa   
  414a1d:	pop    edx
  414a1e:	push   edx
  414a1f:	and    ecx,DWORD PTR [edx]
  414a21:	sub    al,0x85
  414a23:	clc    
  414a24:	int3   
  414a25:	pop    ds
  414a26:	xchg   esi,eax
  414a27:	push   eax
  414a28:	in     eax,dx
  414a29:	mov    dh,0x75
  414a2b:	jg     0x414a7d
  414a2d:	sbb    bl,BYTE PTR ds:0xc907f856
  414a33:	stos   BYTE PTR es:[edi],al
  414a34:	(bad)  
  414a35:	fisubr WORD PTR [ecx]
  414a37:	sbb    dl,BYTE PTR [ebp-0x12]
  414a3a:	mov    ebp,0xaa09bb30
  414a3f:	sub    al,0x63
  414a41:	jbe    0x414a31
  414a43:	pop    eax
  414a44:	xchg   ebx,eax
  414a45:	or     eax,0xcb66c357
  414a4a:	cli    
  414a4b:	inc    ecx
  414a4c:	inc    eax
  414a4d:	int3   
  414a4e:	mov    edi,0xf5b92dd7
  414a53:	fstp   DWORD PTR [ebx]
  414a55:	sub    BYTE PTR [esi],al
  414a57:	add    BYTE PTR [edx],al
  414a59:	sub    ecx,ecx
  414a5b:	inc    ecx
  414a5c:	out    dx,al
  414a5d:	ins    DWORD PTR es:[edi],dx
  414a5e:	in     eax,dx
  414a5f:	test   BYTE PTR [eax+0x57],ch
  414a62:	stos   BYTE PTR es:[edi],al
  414a63:	rol    esi,cl
  414a65:	cmp    al,0x69
  414a67:	sti    
  414a68:	scas   eax,DWORD PTR es:[edi]
  414a69:	cmp    BYTE PTR [edi+edi*2+0x19],bl
  414a6d:	icebp  
  414a6e:	push   edi
  414a6f:	sub    eax,0xcb9dab84
  414a74:	pop    ecx
  414a75:	jmp    0x414a69
  414a77:	js     0x414a8a
  414a79:	xor    ch,BYTE PTR [edi+ebp*4+0x4a]
  414a7d:	sbb    ebp,DWORD PTR [edi+0x77829384]
  414a83:	aas    
  414a84:	in     eax,dx
  414a85:	fdiv   QWORD PTR [ebx+0x55]
  414a88:	mov    eax,0xc926c2f8
  414a8d:	out    0x37,eax
  414a8f:	mov    BYTE PTR [eax-0x1f],dh
  414a92:	adc    bh,ah
  414a94:	(bad)
  414a97:	xchg   ebp,eax
  414a98:	adc    al,0x8d
  414a9a:	sbb    DWORD PTR [eax+ebx*4-0xf],eax
  414a9e:	loope  0x414b13
  414aa0:	xor    bl,cl
  414aa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414aa3:	out    0xed,eax
  414aa5:	sbb    al,0xb8
  414aa7:	aaa    
  414aa8:	or     bl,BYTE PTR [edx-0x6ec75ac2]
  414aae:	cmp    al,0xd0
  414ab0:	sar    DWORD PTR [ebx-0x4132283e],0xf7
  414ab7:	lock push ecx
  414ab9:	in     al,dx
  414aba:	and    BYTE PTR [ecx],dl
  414abc:	mov    eax,ds:0x9ef90168
  414ac1:	xchg   DWORD PTR [edi],edx
  414ac3:	lods   al,BYTE PTR ds:[esi]
  414ac4:	inc    esi
  414ac5:	stos   DWORD PTR es:[edi],eax
  414ac6:	fidiv  DWORD PTR [ebp+0x44]
  414ac9:	aaa    
  414aca:	ins    BYTE PTR es:[edi],dx
  414acb:	add    eax,0x1e990c03
  414ad0:	jle    0x414b07
  414ad2:	jg     0x414a73
  414ad4:	jg     0x414af6
  414ad6:	clc    
  414ad7:	retf   
  414ad8:	cmp    BYTE PTR [edi+0x59dacff6],bl
  414ade:	inc    ebp
  414adf:	jp     0x414acb
  414ae1:	sbb    BYTE PTR [edx+0x2e],bl
  414ae4:	push   ds
  414ae5:	xchg   esp,eax
  414ae6:	mov    WORD PTR [ecx],ss
  414ae8:	fstp   st(0)
  414aea:	and    BYTE PTR [edx-0x46],0xa8
  414aee:	aaa    
  414aef:	push   ds
  414af0:	repnz fmul QWORD PTR ds:0xec9c1648
  414af7:	jle    0x414aac
  414af9:	retf   
  414afa:	cmp    dh,bh
  414afc:	xchg   esi,eax
  414afd:	stos   DWORD PTR es:[edi],eax
  414afe:	inc    ebp
  414aff:	popf   
  414b00:	jg     0x414b72
  414b02:	lds    ecx,FWORD PTR [edx+0x3b]
  414b05:	sub    BYTE PTR [ebx+0x62],cl
  414b08:	cld    
  414b09:	push   0xb4991c27
  414b0e:	push   ss
  414b0f:	add    DWORD PTR [ebp+0x3b4cb407],0xffffffdc
  414b16:	enter  0xb12e,0xa6
  414b1a:	cmp    bl,BYTE PTR [edi-0x7acbfdef]
  414b20:	xor    al,BYTE PTR [ebx]
  414b22:	mov    DWORD PTR [edx-0x39],ebx
  414b25:	call   0x1318:0xb03695ad
  414b2c:	dec    ecx
  414b2d:	adc    esp,esp
  414b2f:	fdivr  st,st(3)
  414b31:	sbb    al,0x9e
  414b33:	ror    al,1
  414b35:	jge    0x414b1d
  414b37:	dec    esi
  414b38:	push   ds
  414b39:	retf   0xe772
  414b3c:	dec    edx
  414b3d:	mov    ebx,0xd61b4d2
  414b42:	fcmovbe st,st(6)
  414b44:	push   eax
  414b45:	sbb    DWORD PTR [esi+0x5b],0x9a5e9f0
  414b4c:	dec    ebx
  414b4d:	sbb    ch,dl
  414b4f:	addr16 in eax,dx
  414b51:	pop    ss
  414b52:	out    dx,eax
  414b53:	into   
  414b54:	inc    edi
  414b55:	mov    ecx,0xfb6a26a2
  414b5a:	xchg   ecx,eax
  414b5b:	mov    cl,0xdd
  414b5d:	cmc    
  414b5e:	lods   eax,DWORD PTR ds:[esi]
  414b5f:	push   0xbd9f6ffd
  414b64:	dec    edx
  414b65:	(bad)  
  414b66:	push   edi
  414b67:	pop    ss
  414b68:	sbb    eax,0x740da426
  414b6d:	or     al,0xdf
  414b6f:	sub    bh,BYTE PTR [edx+0x6]
  414b72:	pop    ecx
  414b73:	adc    DWORD PTR [eax-0x3a1fbea],ebx
  414b79:	retf   
  414b7a:	into   
  414b7b:	sar    DWORD PTR ds:0xa5f6f819,cl
  414b81:	imul   eax,DWORD PTR [ebx-0x57],0xffffff96
  414b85:	mov    al,0xb2
  414b87:	stos   DWORD PTR es:[edi],eax
  414b88:	outs   dx,BYTE PTR ds:[esi]
  414b89:	sub    al,bl
  414b8b:	gs mov dh,0xb1
  414b8e:	and    DWORD PTR [ecx+0x56dcc6ca],0xffffff86
  414b95:	mov    dl,0xed
  414b97:	push   es
  414b98:	add    bh,0x3c
  414b9b:	shl    DWORD PTR [edx+0x14],cl
  414b9e:	sub    al,0x1d
  414ba0:	push   esi
  414ba1:	pushf  
  414ba2:	adc    al,0x5e
  414ba4:	lods   al,BYTE PTR ds:[esi]
  414ba5:	push   eax
  414ba6:	xchg   ebx,eax
  414ba7:	push   ebx
  414ba8:	or     dl,BYTE PTR [eax+0x61]
  414bab:	push   eax
  414bac:	(bad)  [ebx]
  414bae:	xchg   edi,eax
  414baf:	mov    eax,ds:0x29eac6cc
  414bb4:	shl    BYTE PTR [ecx+0x6cc081ae],0x3d
  414bbb:	sbb    edx,DWORD PTR [ecx+0x776a3c5c]
  414bc1:	(bad)  
  414bc2:	aam    0x48
  414bc4:	and    al,0xe1
  414bc6:	pop    esi
  414bc7:	addr16 pop edx
  414bc9:	sbb    ecx,0xde0e1b83
  414bcf:	cmp    al,0x10
  414bd1:	xor    DWORD PTR ds:[esi+0x41],esi
  414bd5:	jbe    0x414c19
  414bd7:	mov    ecx,0xbff441b4
  414bdc:	push   esi
  414bdd:	cli    
  414bde:	in     eax,0x14
  414be0:	fwait
  414be1:	rcr    BYTE PTR [ebx+0x2f],1
  414be4:	jmp    0x493f62da
  414be9:	mov    ds:0xf0b11ef0,al
  414bee:	add    BYTE PTR ss:[ecx-0x6a611c],bl
  414bf5:	mov    al,0x7e
  414bf7:	add    BYTE PTR [edi-0x6],ch
  414bfa:	xor    dh,ch
  414bfc:	inc    ebx
  414bfd:	retf   0xb743
  414c00:	jnp    0x414bdb
  414c02:	jo     0x414b9c
  414c04:	mov    edx,0x79b558d5
  414c09:	mov    al,ds:0xba9046ea
  414c0e:	mov    BYTE PTR [ecx],ah
  414c10:	dec    ebp
  414c11:	xchg   edx,eax
  414c12:	push   0x9fc3a328
  414c17:	lods   al,BYTE PTR ds:[esi]
  414c18:	sub    dl,BYTE PTR [edx+0x4bff8ecd]
  414c1e:	sbb    al,BYTE PTR [ebp+0x4a]
  414c21:	(bad)  
  414c23:	sbb    ebp,ebp
  414c25:	or     ecx,DWORD PTR [eax+0x4e510497]
  414c2b:	xchg   ebx,eax
  414c2c:	mul    BYTE PTR [edi+0x64]
  414c2f:	mov    esp,DWORD PTR [ecx+0xbc6676f]
  414c35:	adc    edi,DWORD PTR [eax-0x37]
  414c38:	int    0xad
  414c3a:	es xchg edi,eax
  414c3c:	lods   al,BYTE PTR ds:[esi]
  414c3d:	add    al,0xe3
  414c3f:	(bad)  
  414c40:	pushw  0x31
  414c43:	cmp    BYTE PTR [ebx],ch
  414c45:	xor    ah,ah
  414c47:	das    
  414c48:	into   
  414c49:	icebp  
  414c4a:	push   ecx
  414c4b:	sbb    BYTE PTR [ecx],cl
  414c4d:	or     al,0xb8
  414c4f:	or     dl,bl
  414c51:	mov    bh,0x67
  414c53:	mov    ds:0x1e95ac98,eax
  414c58:	pop    esp
  414c59:	inc    esp
  414c5a:	mov    cl,0x9
  414c5c:	iret   
  414c5d:	js     0x414ccf
  414c5f:	sbb    BYTE PTR [ebp-0x153bed14],dh
  414c65:	xor    eax,0xe4db12f9
  414c6a:	xchg   ebx,eax
  414c6b:	aam    0x22
  414c6d:	add    ah,dl
  414c6f:	sub    ch,dh
  414c71:	and    DWORD PTR [edx-0x76],esp
  414c74:	and    eax,0xca9bd2de
  414c79:	jae    0x414cd6
  414c7b:	sti    
  414c7c:	and    DWORD PTR [edx],esp
  414c7e:	in     al,dx
  414c7f:	and    BYTE PTR [edi-0x67],ch
  414c82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c83:	idiv   DWORD PTR [ebp+0x1a]
  414c86:	inc    ebx
  414c87:	pop    ebx
  414c88:	(bad)  
  414c89:	sbb    DWORD PTR [esi-0x14],edi
  414c8c:	pusha  
  414c8d:	jmp    0x414c19
  414c8f:	and    cl,bh
  414c91:	imul   DWORD PTR [esp+ebp*2-0x253e071c]
  414c98:	dec    esp
  414c99:	pusha  
  414c9a:	scas   al,BYTE PTR es:[edi]
  414c9b:	das    
  414c9c:	lods   al,BYTE PTR ds:[esi]
  414c9d:	jns    0x414cab
  414c9f:	mov    bl,0x99
  414ca1:	sub    al,0x84
  414ca3:	push   ebp
  414ca4:	dec    esp
  414ca5:	(bad)  
  414ca6:	mov    bh,0x7
  414ca8:	dec    esi
  414ca9:	outs   dx,DWORD PTR ds:[esi]
  414caa:	(bad)  
  414cac:	jbe    0x414c57
  414cae:	mov    ds:0x62f9a55c,eax
  414cb3:	(bad)  
  414cb5:	push   ds
  414cb6:	aad    0xd
  414cb8:	xor    eax,DWORD PTR [eax+0x2f41b0ef]
  414cbe:	hlt    
  414cbf:	fmul   DWORD PTR [edi+0x671a1bda]
  414cc5:	retf   0xafba
  414cc8:	push   eax
  414cc9:	aaa    
  414cca:	mov    DWORD PTR [edx],eax
  414ccc:	inc    esp
  414ccd:	int    0xe1
  414ccf:	jo     0x414d02
  414cd1:	sbb    al,0x1e
  414cd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cd4:	repnz push 0x57ddc98b
  414cda:	leave  
  414cdb:	ret    
  414cdc:	cmp    eax,0xb85092dc
  414ce1:	retf   0x3c53
  414ce4:	push   ebp
  414ce5:	push   ebx
  414ce6:	dec    edx
  414ce7:	lahf   
  414ce8:	xchg   BYTE PTR [edx+eax*8],ah
  414ceb:	ss push cs
  414ced:	dec    edx
  414cee:	pop    edi
  414cef:	int3   
  414cf0:	add    dl,BYTE PTR [eax-0x30]
  414cf3:	add    edi,0xa9fb76d9
  414cf9:	or     eax,0x9343abca
  414cfe:	mov    eax,ds:0xfa9dede5
  414d03:	aad    0xd4
  414d05:	iret   
  414d06:	jle    0x414d6a
  414d08:	loopne 0x414d62
  414d0a:	minps  xmm3,XMMWORD PTR [ebp+0x40b5be05]
  414d11:	int    0x6f
  414d13:	sbb    ch,BYTE PTR [edx-0x37]
  414d16:	pusha  
  414d17:	repz scas al,BYTE PTR es:[edi]
  414d19:	in     eax,dx
  414d1a:	jge    0x414d74
  414d1c:	mov    BYTE PTR [edx+ebp*4-0x66],bh
  414d20:	pop    ecx
  414d21:	jg     0x414d50
  414d23:	mov    ebp,0xb8b9851d
  414d28:	xor    dh,BYTE PTR [eax]
  414d2a:	inc    esp
  414d2b:	test   eax,0x913764f7
  414d30:	repnz xlat BYTE PTR ds:[ebx]
  414d32:	pop    esp
  414d33:	push   ebp
  414d34:	xor    DWORD PTR [esi-0x57948f91],edi
  414d3a:	xchg   esp,eax
  414d3b:	mov    ecx,0x6bd61002
  414d40:	inc    esi
  414d41:	pop    edi
  414d42:	add    ebp,ecx
  414d44:	or     bl,al
  414d46:	mov    eax,fs
  414d48:	sub    BYTE PTR [ebp+0x79],ch
  414d4b:	loope  0x414d6c
  414d4d:	ja     0x414d70
  414d4f:	sahf   
  414d50:	rcl    DWORD PTR [ecx-0x6820afc4],0x51
  414d57:	enter  0xaaf7,0xec
  414d5b:	jmp    0x414d31
  414d5d:	mov    ah,0x6d
  414d5f:	adc    esi,DWORD PTR [edi]
  414d61:	jnp    0x414d9a
  414d63:	cmp    ebp,0x6
  414d66:	pop    ds
  414d67:	int    0x49
  414d69:	or     BYTE PTR [esi],bh
  414d6b:	sbb    eax,0x13566770
  414d70:	adc    al,0x42
  414d72:	fmul   QWORD PTR [esp+eiz*2-0x8]
  414d76:	xchg   esp,eax
  414d77:	mov    eax,0xc9dbd08d
  414d7c:	and    dl,cl
  414d7e:	lds    ebp,FWORD PTR [ecx-0x1fd861ca]
  414d84:	jns    0x414dcf
  414d86:	fadd   QWORD PTR [edi]
  414d88:	out    dx,eax
  414d89:	lds    esi,FWORD PTR [ecx+0x46]
  414d8c:	ret    0x614
  414d8f:	ds and ch,bh
  414d92:	mov    al,0x2e
  414d94:	outs   dx,DWORD PTR ds:[esi]
  414d95:	sbb    BYTE PTR [edi],bl
  414d97:	and    ch,BYTE PTR [ecx-0x38a5ec95]
  414d9d:	out    dx,al
  414d9e:	imul   edx,DWORD PTR [ecx+0x587c680c],0x18b4ed
  414da8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414da9:	in     eax,0x2d
  414dab:	add    dl,BYTE PTR [ecx+0x13]
  414dae:	xchg   ecx,eax
  414daf:	aam    0x91
  414db1:	sahf   
  414db2:	cmp    eax,0x38cb8b5a
  414db7:	ss retf 0x8177
  414dbb:	out    dx,al
  414dbc:	adc    ch,BYTE PTR [ecx+ebp*1+0x12cf71f1]
  414dc3:	xor    dl,al
  414dc5:	enter  0xca7e,0xbd
  414dc9:	ins    DWORD PTR es:[edi],dx
  414dca:	(bad)  
  414dcb:	outs   dx,DWORD PTR ds:[esi]
  414dcc:	mov    edx,0xc00273d6
  414dd1:	pop    DWORD PTR [edi-0x13]
  414dd4:	jg     0x414e4f
  414dd6:	mov    ecx,0x70dc5d2b
  414ddb:	shl    DWORD PTR ss:[ecx],cl
  414dde:	and    al,0xac
  414de0:	ds add eax,0x5b906c5c
  414de6:	xlat   BYTE PTR ds:[ebx]
  414de7:	sahf   
  414de8:	test   BYTE PTR [edx],bl
  414dea:	inc    ecx
  414deb:	mov    edi,0x1769693a
  414df0:	pop    eax
  414df1:	popf   
  414df2:	stos   BYTE PTR es:[edi],al
  414df3:	js     0x414d98
  414df5:	and    DWORD PTR [esp+edi*1+0x61],0xcf75d9c9
  414dfd:	xchg   ebx,eax
  414dfe:	sub    al,0x3a
  414e00:	(bad)  
  414e01:	leave  
  414e02:	jecxz  0x414e1d
  414e04:	push   ds
  414e05:	cmp    esi,DWORD PTR fs:[esp+eiz*4+0x4]
  414e0a:	xchg   DWORD PTR [eax-0x30],ebx
  414e0d:	mov    ds:0xd9375168,eax
  414e12:	mov    ebx,DWORD PTR [eax]
  414e14:	sbb    BYTE PTR ds:0xc7e2a683,dl
  414e1a:	stos   DWORD PTR es:[edi],eax
  414e1b:	xor    DWORD PTR [esi+0x2],esp
  414e1e:	rcl    DWORD PTR [ecx],0x79
  414e21:	sub    dh,BYTE PTR [edx]
  414e23:	mov    al,dl
  414e25:	sbb    BYTE PTR [edx],ah
  414e27:	retf   
  414e28:	mov    al,0xc
  414e2a:	or     al,0x97
  414e2c:	xchg   ecx,eax
  414e2d:	mov    eax,ds:0xe547ed3e
  414e32:	jo     0x414e20
  414e34:	push   ss
  414e35:	gs fs out 0x35,eax
  414e39:	mov    edi,0xfb3e947c
  414e3e:	scas   al,BYTE PTR es:[edi]
  414e3f:	out    dx,eax
  414e40:	xor    ebx,0xb7283b52
  414e46:	cmp    esi,0x3934e5ad
  414e4c:	call   0x8b02:0x97bcb19e
  414e53:	cmp    esp,DWORD PTR [ecx+eax*2-0x1a7642b6]
  414e5a:	jge    0x414ebd
  414e5c:	stos   BYTE PTR es:[edi],al
  414e5d:	mov    esi,0xd4d6c9c9
  414e62:	js     0x414e0e
  414e64:	add    ebp,eax
  414e66:	mov    DWORD PTR [edi+0x3557eb18],0xfa6141f3
  414e70:	sub    edi,DWORD PTR [ecx+0x7f]
  414e73:	pop    es
  414e74:	xor    eax,0x6b07aecc
  414e79:	mov    eax,ds:0x8a725143
  414e7e:	push   ecx
  414e7f:	lods   eax,DWORD PTR ds:[esi]
  414e80:	adc    dl,bh
  414e82:	das    
  414e83:	sti    
  414e84:	arpl   WORD PTR [edx+ecx*8-0x3465f8ca],sp
  414e8b:	rcr    edx,0x4a
  414e8e:	(bad)  
  414e8f:	ret    
  414e90:	aas    
  414e91:	mov    al,ds:0xc208685c
  414e96:	in     eax,dx
  414e97:	js     0x414f0a
  414e99:	jo     0x414f0c
  414e9b:	adc    eax,0x65be2ca0
  414ea0:	lods   al,BYTE PTR ds:[esi]
  414ea1:	pop    ds
  414ea2:	(bad)  
  414ea3:	dec    eax
  414ea4:	cld    
  414ea5:	(bad)  
  414ea6:	cmp    edx,DWORD PTR [edx]
  414ea8:	sub    BYTE PTR [ebp-0x5853ca84],bh
  414eae:	fidiv  DWORD PTR [ebx-0x7e634ff8]
  414eb4:	loopne 0x414f2a
  414eb6:	clts   
  414eb8:	jo     0x414eed
  414eba:	addr16 jnp 0x414ef2
  414ebd:	inc    esi
  414ebe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ebf:	pop    eax
  414ec0:	repnz clc 
  414ec2:	inc    ebp
  414ec3:	shl    DWORD PTR [esi],0x4b
  414ec6:	cmc    
  414ec7:	popf   
  414ec8:	push   esp
  414ec9:	mov    ds:0xb69ded7c,eax
  414ece:	fs retf 0x490
  414ed2:	and    ebp,ebp
  414ed4:	mov    al,ds:0x7daddebf
  414ed9:	jmp    0x147c:0x7d00d910
  414ee0:	adc    al,0x1a
  414ee2:	mov    bl,dh
  414ee4:	int3   
  414ee5:	or     DWORD PTR [edx],eax
  414ee7:	dec    edi
  414ee8:	rcr    DWORD PTR [edi+0x12],1
  414eeb:	inc    edi
  414eec:	xchg   ebx,eax
  414eed:	aas    
  414eee:	mov    ah,0x92
  414ef0:	cmp    bh,BYTE PTR [eax]
  414ef2:	gs ja  0x414f50
  414ef5:	adc    al,0x3a
  414ef7:	loop   0x414e9e
  414ef9:	mov    al,ds:0x91dd4021
  414efe:	lock fnstcw WORD PTR [edi+0x278d2e53]
  414f05:	fdiv   QWORD PTR [ebp+0x7715b6e9]
  414f0b:	push   ebp
  414f0c:	jbe    0x414f58
  414f0e:	call   0x2649e8a0
  414f13:	pop    ebp
  414f14:	sti    
  414f15:	adc    DWORD PTR [edi],esp
  414f17:	push   esi
  414f18:	mov    ebx,0x9398de65
  414f1d:	sbb    eax,0x55c14870
  414f22:	inc    esi
  414f23:	mov    dl,BYTE PTR [edi+ebx*4+0x55]
  414f27:	add    eax,0x1c76a696
  414f2c:	mov    dl,cl
  414f2e:	pop    ecx
  414f2f:	call   0x9634:0x1da3302c
  414f36:	pop    eax
  414f37:	push   ss
  414f38:	out    dx,al
  414f39:	jne    0x414f1f
  414f3b:	addr16 out 0xc4,al
  414f3e:	xor    al,0xd6
  414f40:	js     0x414eec
  414f42:	sbb    eax,DWORD PTR [ebp+eax*1-0x4ff0992d]
  414f49:	sub    DWORD PTR [ebp+0x2c],esp
  414f4c:	lds    eax,FWORD PTR [eax+ebx*2-0x6bd4f87c]
  414f53:	jb     0x414f9d
  414f55:	aas    
  414f56:	es lahf 
  414f58:	lods   eax,DWORD PTR ds:[esi]
  414f59:	dec    edx
  414f5a:	or     ch,cl
  414f5c:	xchg   BYTE PTR [ecx-0x5681fc4f],ch
  414f62:	xor    eax,0xf5c65db1
  414f67:	cwde   
  414f68:	retf   0x5b40
  414f6b:	pop    esi
  414f6c:	ins    DWORD PTR es:[edi],dx
  414f6d:	mov    ah,0x9e
  414f6f:	ret    
  414f70:	or     ah,cl
  414f72:	pop    eax
  414f73:	test   ebp,esi
  414f75:	(bad)  
  414f76:	ins    DWORD PTR es:[edi],dx
  414f77:	mov    ebp,0xf152b65c
  414f7c:	aas    
  414f7d:	mov    al,0xc6
  414f7f:	lods   eax,DWORD PTR ds:[esi]
  414f80:	std    
  414f81:	adc    DWORD PTR [esp+edx*1+0x33],edi
  414f85:	(bad)  
  414f86:	mov    eax,0xd25d0984
  414f8b:	mov    WORD PTR [edi],cs
  414f8d:	sbb    eax,ecx
  414f8f:	mov    esp,0x60273457
  414f94:	arpl   WORD PTR cs:[ebx+0x7c],dx
  414f98:	lea    ecx,[eax+0x10]
  414f9b:	in     eax,0xe8
  414f9d:	jae    0x414f53
  414f9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fa0:	and    edi,DWORD PTR [eax+0x16f20ed4]
  414fa6:	xchg   esp,eax
  414fa7:	jnp    0x414f79
  414fa9:	ds int3 
  414fab:	ds push eax
  414fad:	cli    
  414fae:	jecxz  0x414fc4
  414fb0:	mov    al,ds:0xbff50e8f
  414fb5:	pop    esp
  414fb6:	mov    ah,0x38
  414fb8:	sbb    eax,esi
  414fba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fbb:	add    eax,0x8903b90f
  414fc0:	int    0xa6
  414fc2:	mov    esi,0x103b8b2
  414fc7:	in     al,dx
  414fc8:	xchg   ecx,eax
  414fc9:	xor    al,dh
  414fcb:	push   DWORD PTR [eax-0x13f5fec0]
  414fd1:	data16 jnp 0x414f81
  414fd4:	cwde   
  414fd5:	mul    esi
  414fd7:	lds    ebp,FWORD PTR fs:[ebx-0x10b6f0d9]
  414fde:	mov    ebx,ecx
  414fe0:	int    0x1f
  414fe2:	scas   eax,DWORD PTR es:[edi]
  414fe3:	popa   
  414fe4:	fisttp QWORD PTR [esi-0x2e]
  414fe7:	inc    ecx
  414fe8:	xchg   BYTE PTR [ebp-0x7],ah
  414feb:	imul   DWORD PTR ds:0x4d7bb73e
  414ff1:	and    BYTE PTR [ecx-0x5],cl
  414ff4:	addr16 seto bh
  414ff8:	and    esi,0x92bd4c57
  414ffe:	or     al,0x3a
  415000:	inc    edi
  415001:	inc    eax
  415002:	int3   
  415003:	pushf  
  415004:	adc    dh,0x32
  415007:	sub    ebx,DWORD PTR [edi-0xc]
  41500a:	fwait
  41500b:	xor    al,0x5a
  41500d:	pop    es
  41500e:	call   0x534e:0xee468053
  415015:	lock add al,0xcd
  415018:	loop   0x415019
  41501a:	mov    BYTE PTR [edi],cl
  41501c:	stos   BYTE PTR es:[edi],al
  41501d:	and    al,0xae
  41501f:	repnz mov ebp,0x666649b0
  415025:	ror    al,0xfc
  415028:	fmul   DWORD PTR [edi+0x6ad6f55a]
  41502e:	lods   eax,DWORD PTR ds:[esi]
  41502f:	jmp    0xe412:0xcdf08f7b
  415036:	mov    BYTE PTR [eax-0x57],cl
  415039:	jno    0x4150a5
  41503b:	std    
  41503c:	push   edx
  41503d:	das    
  41503e:	and    esi,DWORD PTR [ebp-0x7f]
  415041:	fld    QWORD PTR [eax+0x55]
  415044:	(bad)  
  415045:	and    eax,0xe003f494
  41504a:	bswap  edx
  41504c:	inc    esi
  41504d:	dec    eax
  41504e:	test   BYTE PTR [esi],al
  415050:	retf   
  415051:	out    0x5a,al
  415053:	cmp    ecx,DWORD PTR [ecx-0x79]
  415056:	jl     0x415034
  415058:	pop    ecx
  415059:	rcr    DWORD PTR [ebx],0x3e
  41505c:	xor    ch,ah
  41505e:	dec    ebp
  41505f:	rcl    BYTE PTR [edi],0xb9
  415062:	test   dl,bl
  415064:	mov    al,0x1a
  415066:	aas    
  415067:	in     al,0xb3
  415069:	mov    ebx,0x361e0ed6
  41506e:	in     al,0xd8
  415070:	lds    ebx,FWORD PTR [ecx+ebx*1-0xe5c7301]
  415077:	mov    ds:0x222c83d7,eax
  41507c:	push   ecx
  41507d:	enter  0x8f74,0xa3
  415081:	jns    0x41500a
  415083:	inc    edx
  415084:	mov    edi,DWORD PTR [esp+ecx*1-0x1c]
  415088:	xchg   ecx,eax
  415089:	ficomp WORD PTR [esi-0x51]
  41508c:	lahf   
  41508d:	xor    al,0x47
  41508f:	cmp    dl,BYTE PTR [edx-0x70]
  415092:	loope  0x41505a
  415094:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415095:	mov    DWORD PTR [ebp+0x2d9056b9],esi
  41509b:	mov    ds:0xb958f850,eax
  4150a0:	call   0xc9a40eeb
  4150a5:	or     DWORD PTR [esi+0x72],ebp
  4150a8:	inc    edx
  4150a9:	adc    BYTE PTR [ecx],al
  4150ab:	std    
  4150ac:	inc    eax
  4150ad:	hlt    
  4150ae:	xchg   ebp,eax
  4150af:	ins    BYTE PTR es:[edi],dx
  4150b0:	pop    ebp
  4150b1:	test   al,0x11
  4150b3:	add    BYTE PTR [edx+0x4b],ah
  4150b6:	nop    esi
  4150b9:	lods   al,BYTE PTR ds:[esi]
  4150ba:	jno    0x4150b8
  4150bc:	cmp    eax,0x2afb5198
  4150c1:	in     al,0x22
  4150c3:	xchg   edx,eax
  4150c4:	fld    QWORD PTR [esi-0x64]
  4150c7:	ss popa 
  4150c9:	mov    BYTE PTR cs:[edx+0xf29200e],0xe1
  4150d1:	push   esp
  4150d2:	daa    
  4150d3:	sbb    cl,BYTE PTR [esi]
  4150d5:	or     eax,0x82fbfa17
  4150da:	stos   DWORD PTR es:[edi],eax
  4150db:	enter  0xdb85,0xb9
  4150df:	pop    ss
  4150e0:	in     eax,dx
  4150e1:	lock add eax,0xf6a29c2b
  4150e7:	mov    ds:0xc2055bb3,eax
  4150ec:	es pop ebp
  4150ee:	adc    ebx,DWORD PTR [ecx+0x29]
  4150f1:	mov    cl,0x65
  4150f3:	xor    dl,ch
  4150f5:	das    
  4150f6:	(bad)  
  4150f8:	and    ah,bh
  4150fa:	mov    ebx,0x90cf6ba9
  4150ff:	das    
  415100:	ret    
  415101:	(bad)  [ecx-0x57953335]
  415107:	(bad)
  41510a:	leave  
  41510b:	ds aam 0xdf
  41510e:	loop   0x41514c
  415110:	mov    cs:0xff72805b,eax
  415116:	jl     0x415144
  415118:	(bad)  
  415119:	dec    BYTE PTR [edx-0x3b]
  41511c:	xlat   BYTE PTR ds:[ebx]
  41511d:	pop    ecx
  41511e:	cld    
  41511f:	add    eax,0xf631d918
  415124:	in     eax,0xfe
  415126:	sub    al,0xeb
  415128:	repnz std 
  41512a:	xchg   BYTE PTR [ecx+0x2ee470f2],ah
  415130:	mov    bl,0x84
  415132:	xor    BYTE PTR [edx-0xd],ah
  415135:	pop    es
  415136:	add    bl,al
  415138:	push   cs
  415139:	push   ebx
  41513a:	push   esi
  41513b:	(bad)  
  41513c:	les    esi,FWORD PTR [esi+0x2f0f6481]
  415142:	add    eax,esp
  415144:	scas   al,BYTE PTR es:[edi]
  415145:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415146:	js     0x415151
  415148:	sub    ebp,DWORD PTR [ebp+0x1342f935]
  41514e:	add    eax,0xc3986530
  415153:	mov    ds:0x1493b0ba,al
  415158:	mov    ?,WORD PTR [esi-0x6328fc61]
  41515e:	js     0x4151c0
  415160:	cmp    edx,DWORD PTR [edx]
  415162:	inc    edx
  415163:	mov    esp,0x7374165c
  415168:	leave  
  415169:	jbe    0x415123
  41516b:	out    dx,al
  41516c:	rcl    DWORD PTR [eax],cl
  41516e:	inc    ebp
  41516f:	mov    eax,0xa7483d10
  415174:	or     DWORD PTR [eax+edx*1],edi
  415177:	push   0x7d
  415179:	test   al,0xe5
  41517b:	(bad)  
  41517d:	nop
  41517e:	push   ss
  41517f:	adc    ch,BYTE PTR [esi+0x47]
  415182:	sahf   
  415183:	xor    ebx,DWORD PTR ds:0xcd128878
  415189:	fcmovnbe st,st(5)
  41518b:	cmp    ecx,DWORD PTR [edx+0x542c666]
  415191:	jmp    0x707:0xade008ec
  415198:	jnp    0x41511f
  41519a:	mov    esi,ss
  41519c:	out    dx,eax
  41519d:	jb     0x41515d
  41519f:	and    al,0x12
  4151a1:	repnz ins DWORD PTR es:[edi],dx
  4151a3:	mov    DWORD PTR [ebx-0x20],eax
  4151a6:	xor    eax,0x7b984e13
  4151ab:	and    bh,BYTE PTR fs:[esp+ecx*2-0x4f]
  4151b0:	mov    ds:0x2a1504c6,al
  4151b5:	pop    ss
  4151b6:	aam    0x9
  4151b8:	in     al,0x9
  4151ba:	and    eax,0xa9c3ccdd
  4151bf:	dec    edx
  4151c0:	popf   
  4151c1:	inc    esp
  4151c2:	jno    0x4151ef
  4151c4:	and    BYTE PTR [edi-0x404d889c],0xf5
  4151cb:	mov    esi,0x8038e9e5
  4151d0:	cmp    esp,DWORD PTR [ebp-0x25bd7674]
  4151d6:	adc    al,0xb9
  4151d8:	sub    al,0xa
  4151da:	push   es
  4151db:	inc    eax
  4151dc:	js     0x4151cc
  4151de:	dec    edi
  4151df:	fimul  WORD PTR [ebx]
  4151e1:	daa    
  4151e2:	add    al,0x43
  4151e4:	add    DWORD PTR [edx-0x42],0xa
  4151e8:	test   eax,0x1cd16bfc
  4151ed:	push   esp
  4151ee:	push   esi
  4151ef:	mov    ebx,0x26ac1e04
  4151f4:	push   edi
  4151f5:	daa    
  4151f6:	push   ds
  4151f7:	add    BYTE PTR [esi+0xa],dl
  4151fa:	xor    BYTE PTR [edx],bh
  4151fc:	lds    esi,FWORD PTR [esi-0x2c]
  4151ff:	arpl   WORD PTR [edx+esi*8-0x7b],sp
  415203:	stos   BYTE PTR es:[edi],al
  415204:	xchg   edx,eax
  415205:	mov    dh,0x24
  415207:	data16 mov ds:0x53fe67c3,al
  41520d:	inc    ebp
  41520e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41520f:	rol    BYTE PTR [ecx+0x6370b562],1
  415215:	cmp    eax,0x9e0a37c1
  41521a:	jge    0x4151dc
  41521c:	mov    ?,edx
  41521e:	out    0xa8,al
  415220:	and    al,0x71
  415222:	dec    esp
  415223:	push   edi
  415224:	and    BYTE PTR [ebx-0x5211c4b3],dh
  41522a:	stos   DWORD PTR es:[edi],eax
  41522b:	push   DWORD PTR [esi+0x51]
  41522e:	or     BYTE PTR [ecx+eax*2+0x72800b73],al
  415235:	test   DWORD PTR [eax],edx
  415237:	pop    ss
  415238:	or     al,0x35
  41523a:	pop    ds
  41523b:	inc    edi
  41523c:	jecxz  0x415281
  41523e:	fsub   DWORD PTR es:[eax-0x5b]
  415242:	pusha  
  415243:	stos   DWORD PTR es:[edi],eax
  415244:	rcr    BYTE PTR [esi],0xf4
  415247:	pop    ss
  415248:	cmp    eax,0x5987512b
  41524d:	jmp    0x30f48e
  415252:	mov    DWORD PTR gs:[esp+ecx*4],eax
  415256:	ret    
  415257:	aas    
  415258:	ds (bad) 
  41525a:	gs pop ebp
  41525c:	inc    esp
  41525d:	test   BYTE PTR [edx],ah
  41525f:	mov    cl,bl
  415261:	dec    esi
  415262:	sub    bl,BYTE PTR [edi-0xce04719]
  415268:	push   esi
  415269:	inc    edx
  41526a:	lahf   
  41526b:	xchg   ebp,eax
  41526c:	mov    esp,0x25b64a8a
  415271:	in     eax,dx
  415272:	icebp  
  415273:	mov    al,0xdd
  415275:	cmp    ebx,DWORD PTR [eax-0x33af1af]
  41527b:	shr    BYTE PTR [esi],1
  41527d:	std    
  41527e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41527f:	or     BYTE PTR [eax],dl
  415281:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415282:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415283:	retf   0x5b23
  415286:	jnp    0x415228
  415288:	sub    al,0xc3
  41528a:	nop
  41528b:	cli    
  41528c:	(bad)  
  41528d:	cwde   
  41528e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41528f:	mov    eax,ds:0xe435745a
  415294:	repnz pop esi
  415296:	xor    edx,eax
  415298:	jle    0x41529a
  41529a:	push   es
  41529b:	or     cl,BYTE PTR [eax]
  41529d:	or     al,0xeb
  41529f:	cmp    dl,BYTE PTR [edx-0x5d]
  4152a2:	inc    ebx
  4152a3:	hlt    
  4152a4:	pop    esp
  4152a5:	jmp    0x278b:0x3520c0a0
  4152ac:	aam    0x34
  4152ae:	dec    esp
  4152af:	test   BYTE PTR [ecx+0x6b],al
  4152b2:	aaa    
  4152b3:	ss (bad) 
  4152b6:	sahf   
  4152b7:	outs   dx,BYTE PTR ds:[esi]
  4152b8:	mov    esi,0xf401737a
  4152bd:	xchg   esi,eax
  4152be:	xchg   edx,eax
  4152bf:	push   edi
  4152c0:	call   0x6b15:0xffe350a3
  4152c7:	pop    eax
  4152c8:	jbe    0x4152ff
  4152ca:	cld    
  4152cb:	std    
  4152cc:	aad    0xe1
  4152ce:	std    
  4152cf:	sti    
  4152d0:	ins    DWORD PTR es:[edi],dx
  4152d1:	sub    esi,DWORD PTR [esi-0x44]
  4152d4:	sbb    esp,DWORD PTR [ecx+ecx*4-0x1c]
  4152d8:	ss dec edx
  4152da:	dec    esp
  4152db:	clc    
  4152dc:	call   0x45d2:0x66fe5e1b
  4152e3:	adc    al,0x9f
  4152e5:	repz mov dh,0x63
  4152e8:	rol    DWORD PTR [eax+0x335873f7],cl
  4152ee:	adc    al,0x99
  4152f0:	in     al,dx
  4152f1:	xor    DWORD PTR [edi+edx*1],esi
  4152f4:	and    edx,esi
  4152f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152f7:	cmovnp ecx,DWORD PTR [esi]
  4152fa:	pop    ebp
  4152fb:	gs inc ebx
  4152fd:	jecxz  0x415353
  4152ff:	call   0x529d:0x3fb64ab1
  415306:	xchg   ebp,eax
  415307:	stc    
  415308:	xor    BYTE PTR [esi-0x78e26b37],ah
  41530e:	arpl   WORD PTR [ebp-0x60a63e3d],ax
  415314:	daa    
  415315:	add    eax,0x46fe0406
  41531a:	cs pop edx
  41531c:	jne    0x41532b
  41531e:	aad    0x3
  415320:	clc    
  415321:	enter  0xc97a,0x1c
  415325:	pop    esp
  415326:	out    0x3,eax
  415328:	in     eax,0xeb
  41532a:	xor    DWORD PTR [edi-0x415dfce3],eax
  415330:	push   0xefc64dd3
  415335:	inc    ebp
  415336:	into   
  415337:	xchg   ebp,eax
  415338:	and    esi,ecx
  41533a:	or     DWORD PTR [edi*1-0x51cb4544],0x4
  415342:	jne    0x415395
  415344:	xchg   BYTE PTR [esi-0x69],bh
  415347:	jl     0x415325
  415349:	xchg   ecx,eax
  41534a:	call   DWORD PTR ds:0x41702c
  415350:	mov    DWORD PTR [ebp-0x2c],eax
  415353:	movzx  edx,WORD PTR [ebp-0x2c]
  415357:	cmp    edx,0x539
  41535d:	jne    0x41538e
  41535f:	mov    DWORD PTR [ebp-0x14],0xe0d
  415366:	lea    eax,[ebp-0x28]
  415369:	push   eax
  41536a:	call   DWORD PTR ds:0x417030
  415370:	mov    DWORD PTR [ebp-0x60],eax
  415373:	mov    DWORD PTR [ebp-0x54],0x3a
  41537a:	mov    BYTE PTR [ebp-0x34],0x0
  41537e:	mov    DWORD PTR [ebp-0x8],0xa013ec79
  415385:	mov    DWORD PTR [ebp-0x68],0x10acf7
  41538c:	jmp    0x415395
  41538e:	mov    BYTE PTR ds:0x419f40,0x0
  415395:	push   0x0
  415397:	call   DWORD PTR ds:0x417030
  41539d:	mov    DWORD PTR [ebp-0x2c],eax
  4153a0:	push   DWORD PTR ds:0x417030
  4153a6:	pop    edx
  4153a7:	mov    DWORD PTR [ebp-0x6c],edx
  4153aa:	lea    ecx,[ebp-0x40]
  4153ad:	push   ecx
  4153ae:	mov    edx,DWORD PTR [ebp-0x60]
  4153b1:	push   edx
  4153b2:	call   DWORD PTR ds:0x417038
  4153b8:	mov    DWORD PTR [ebp-0x44],eax
  4153bb:	push   DWORD PTR [ebp-0x30]
  4153be:	push   0x1000
  4153c3:	mov    eax,DWORD PTR [ebp-0x14]
  4153c6:	add    eax,0x23
  4153c9:	add    eax,0x23
  4153cc:	push   eax
  4153cd:	xor    eax,eax
  4153cf:	push   eax
  4153d0:	mov    ecx,DWORD PTR [ebp-0x44]
  4153d3:	call   ecx
  4153d5:	push   eax
  4153d6:	pop    ecx
  4153d7:	mov    DWORD PTR [ebp-0x4],ecx
  4153da:	mov    eax,DWORD PTR [ebp-0x68]
  4153dd:	sub    eax,0xdae0b
  4153e2:	mov    DWORD PTR [ebp-0x68],eax
  4153e5:	cmp    DWORD PTR [ebp-0x4],0x0
  4153e9:	jne    0x415403
  4153eb:	push   0x0
  4153ed:	push   0x0
  4153ef:	call   0x416aac
  4153f4:	push   0x0
  4153f6:	call   DWORD PTR ds:0x417040
  4153fc:	mov    BYTE PTR ds:0x42fed0,0x0
  415403:	mov    ecx,DWORD PTR [ebp-0x4]
  415406:	add    ecx,DWORD PTR [ebp-0x14]
  415409:	mov    edx,DWORD PTR [ebp-0x8]
  41540c:	mov    DWORD PTR [ecx],edx
  41540e:	mov    eax,DWORD PTR [ebp-0x4]
  415411:	add    eax,DWORD PTR [ebp-0x54]
  415414:	mov    DWORD PTR [ebp-0x5c],eax
  415417:	mov    ecx,DWORD PTR ds:0x417038
  41541d:	mov    DWORD PTR [ebp-0x4c],ecx
  415420:	mov    edx,DWORD PTR [ebp-0x4]
  415423:	add    edx,DWORD PTR [ebp-0x14]
  415426:	mov    eax,DWORD PTR [ebp+0x8]
  415429:	mov    DWORD PTR [edx+0x4],eax
  41542c:	mov    ecx,DWORD PTR [ebp-0x4]
  41542f:	add    ecx,DWORD PTR [ebp-0x14]
  415432:	mov    DWORD PTR [ebp-0xc],ecx
  415435:	cmp    DWORD PTR [ebp-0x68],0x0
  415439:	jbe    0x415456
  41543b:	mov    edx,DWORD PTR [ebp-0xc]
  41543e:	push   edx
  41543f:	mov    eax,DWORD PTR [ebp-0x14]
  415442:	push   eax
  415443:	mov    ecx,DWORD PTR [ebp-0x2c]
  415446:	add    ecx,DWORD PTR [ebp-0x68]
  415449:	push   ecx
  41544a:	mov    edx,DWORD PTR [ebp-0x4]
  41544d:	push   edx
  41544e:	call   0x4169bf
  415453:	add    esp,0x10
  415456:	cmp    DWORD PTR [ebp-0x5c],0x0
  41545a:	je     0x41546a
  41545c:	push   DWORD PTR [ebp-0x4c]
  41545f:	push   DWORD PTR [ebp-0x6c]
  415462:	mov    edx,DWORD PTR [ebp-0x5c]
  415465:	push   eax
  415466:	jmp    edx
  415468:	jmp    0x415470
  41546a:	mov    eax,DWORD PTR [ebp+0x8]
  41546d:	mov    DWORD PTR [ebp-0x18],eax
  415470:	mov    eax,0x1
  415475:	mov    esp,ebp
  415477:	pop    ebp
  415478:	ret    
  415479:	push   ebp
  41547a:	mov    ebp,esp
  41547c:	pop    ebp
  41547d:	ret    
  41547e:	push   ebp
  41547f:	mov    ebp,esp
  415481:	sub    esp,0x54
  415484:	mov    DWORD PTR [ebp-0x34],0x0
  41548b:	mov    DWORD PTR [ebp-0x4],0x0
  415492:	mov    DWORD PTR [ebp-0x50],0x0
  415499:	mov    DWORD PTR [ebp-0x4c],0x0
  4154a0:	mov    DWORD PTR [ebp-0x30],0x0
  4154a7:	lea    eax,[ebp-0x48]
  4154aa:	push   eax
  4154ab:	call   DWORD PTR ds:0x417028
  4154b1:	mov    ecx,DWORD PTR [ebp-0x34]
  4154b4:	push   ecx
  4154b5:	call   0x4154e4
  4154ba:	add    esp,0x4
  4154bd:	call   0x4169b0
  4154c2:	mov    DWORD PTR [ebp-0x54],0x0
  4154c9:	jmp    0x4154d4
  4154cb:	mov    edx,DWORD PTR [ebp-0x54]
  4154ce:	add    edx,0x1
  4154d1:	mov    DWORD PTR [ebp-0x54],edx
  4154d4:	cmp    DWORD PTR [ebp-0x54],0x64
  4154d8:	jae    0x4154dc
  4154da:	jmp    0x4154cb
  4154dc:	xor    eax,eax
  4154de:	mov    esp,ebp
  4154e0:	pop    ebp
  4154e1:	ret    0x10
  4154e4:	push   ebp
  4154e5:	mov    ebp,esp
  4154e7:	sub    esp,0x3c
  4154ea:	push   esi
  4154eb:	mov    DWORD PTR [ebp-0x3c],0x0
  4154f2:	mov    DWORD PTR [ebp-0x38],0x0
  4154f9:	mov    DWORD PTR [ebp-0x30],0x0
  415500:	mov    DWORD PTR [ebp-0x24],0x0
  415507:	mov    DWORD PTR [ebp-0x1c],0x0
  41550e:	mov    DWORD PTR [ebp-0x28],0x0
  415515:	mov    DWORD PTR [ebp-0x2c],0x449408
  41551c:	mov    DWORD PTR [ebp-0x24],0x44cd28f1
  415523:	mov    DWORD PTR [ebp-0x34],0x0
  41552a:	mov    eax,DWORD PTR [ebp-0x24]
  41552d:	mov    DWORD PTR [ebp-0x20],eax
  415530:	mov    DWORD PTR [ebp-0x4],0x0
  415537:	mov    ecx,DWORD PTR ds:0x41702c
  41553d:	mov    DWORD PTR [ebp-0x4],ecx
  415540:	push   0x0
  415542:	push   0x4e
  415544:	push   0x1e
  415546:	push   0x0
  415548:	push   0xffffffff
  41554a:	call   DWORD PTR ds:0x417034
  415550:	test   eax,eax
  415552:	je     0x41698f
  415558:	dec    ebp
  415559:	mov    edx,0x515b4a2d
  41555e:	imul   ebp,esi,0x302025fe
  415564:	push   ebp
  415565:	jmp    eax
  415567:	mov    ebp,0x695158f2
  41556c:	out    dx,al
  41556d:	cli    
  41556e:	and    eax,0xaa7020
  415573:	loopne 0x415532
  415575:	dec    edx
  415576:	pop    eax
  415577:	push   ecx
  415578:	imul   ebp,esi,0x302025fa
  41557e:	stos   BYTE PTR es:[edi],al
  41557f:	add    al,ah
  415581:	mov    ebp,0x6951584a
  415586:	out    dx,al
  415587:	cli    
  415588:	and    eax,0xaa3020
  41558d:	loopne 0x41554c
  41558f:	dec    edx
  415590:	pop    eax
  415591:	push   ecx
  415592:	imul   ebp,esi,0x302024f2
  415598:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415599:	pop    ds
  41559a:	pop    edx
  41559b:	mov    bl,0x4a
  41559d:	in     al,dx
  41559e:	pop    eax
  41559f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155a0:	iret   
  4155a1:	inc    edx
  4155a2:	and    al,0x6c
  4155a4:	std    
  4155a5:	mov    edx,DWORD PTR [eax+ecx*4-0x2c]
  4155a9:	cmp    DWORD PTR [eax+0x21],edi
  4155ac:	sbb    eax,DWORD PTR [ecx+0x5d41579d]
  4155b2:	mov    ah,BYTE PTR [ebx-0x7f]
  4155b5:	shl    DWORD PTR [edi+esi*1],cl
  4155b8:	and    eax,0x59f8c49
  4155bd:	push   edx
  4155be:	inc    ebp
  4155bf:	les    esp,FWORD PTR [eax]
  4155c1:	mov    ebx,edx
  4155c3:	push   0x1c
  4155c5:	push   ds
  4155c6:	cmp    cl,dh
  4155c8:	xchg   edi,eax
  4155c9:	dec    edx
  4155ca:	inc    esp
  4155cb:	push   ebp
  4155cc:	test   BYTE PTR ds:0x586eb7ed,cl
  4155d2:	push   ecx
  4155d3:	imul   ebp,esi,0x4a2025fa
  4155d9:	gs push ss
  4155db:	outs   dx,BYTE PTR ds:[esi]
  4155dc:	and    esp,0x20
  4155df:	mov    WORD PTR [edi+0x40],ss
  4155e2:	cmp    al,0x1e
  4155e5:	sahf   
  4155e6:	rcr    ch,cl
  4155e8:	lds    ecx,FWORD PTR [esi-0x388c7a54]
  4155ee:	xchg   esi,eax
  4155ef:	daa    
  4155f0:	add    BYTE PTR [ebx],dl
  4155f2:	loop   0x41566b
  4155f4:	mov    edi,0x7d97c54e
  4155f9:	bound  edi,QWORD PTR [edx+0x588bef33]
  4155ff:	in     eax,dx
  415600:	sti    
  415601:	fdiv   DWORD PTR [ebx]
  415603:	pusha  
  415604:	jno    0x4155fc
  415606:	sub    DWORD PTR [ecx+ebx*8+0x7fdde2c],esi
  41560d:	add    al,0x78
  41560f:	cmp    eax,0x8cb39c8a
  415614:	dec    esp
  415615:	inc    eax
  415616:	cmp    al,0x1e
  415619:	sahf   
  41561a:	rcr    ebp,cl
  41561c:	test   eax,0x93853212
  415621:	out    0x84,eax
  415623:	daa    
  415624:	adc    eax,0x2577488e
  415629:	shr    DWORD PTR [edx-0x69],cl
  41562c:	and    edi,edi
  41562e:	adc    DWORD PTR [ebx],esi
  415630:	fist   WORD PTR [esi]
  415632:	ret    0x95ed
  415635:	scas   al,BYTE PTR es:[edi]
  415636:	cwde   
  415637:	pusha  
  415638:	outs   dx,DWORD PTR ds:[esi]
  415639:	imul   esi,DWORD PTR [esp+esi*4-0x2a2ab2f],0x62
  415641:	ret    
  415642:	arpl   WORD PTR [eax-0x73df1b7d],cx
  415648:	imul   ebp,esi,0x302025fa
  41564e:	stos   BYTE PTR es:[edi],al
  41564f:	add    al,ah
  415651:	mov    ebp,0x6951584a
  415656:	out    dx,al
  415657:	cli    
  415658:	and    eax,0xaa3020
  41565d:	loopne 0x41561c
  41565f:	dec    edx
  415660:	or     BYTE PTR [ecx+ebp*2],dl
  415663:	out    dx,al
  415664:	mov    dh,0x24
  415666:	and    esi,DWORD PTR [eax]
  415668:	int3   
  415669:	dec    esi
  41566a:	lods   eax,DWORD PTR ds:[esi]
  41566b:	repnz dec edx
  41566d:	pop    eax
  41566e:	push   ecx
  41566f:	imul   ebp,esi,0xd02025fa
  415675:	stos   BYTE PTR es:[edi],al
  415676:	add    ah,cl
  415678:	mov    dh,0x4b
  41567a:	push   edx
  41567b:	push   ecx
  41567c:	imul   ecx,DWORD PTR [esi+edi*8],0xacb42025
  415683:	add    al,ah
  415685:	mov    ebp,0xd412584a
  41568a:	out    dx,al
  41568b:	cli    
  41568c:	and    eax,0xaa3030
  415691:	loopne 0x41564b
  415693:	dec    edx
  415694:	pop    eax
  415695:	push   ecx
  415696:	sub    esi,ebp
  415698:	cli    
  415699:	xor    eax,0x2aa3020
  41569e:	loopne 0x41565d
  4156a0:	dec    edi
  4156a1:	pop    eax
  4156a2:	push   eax
  4156a3:	imul   ebp,esi,0x352025fa
  4156a9:	stos   BYTE PTR es:[edi],al
  4156aa:	add    eax,esp
  4156ac:	mov    ebp,0x6951584a
  4156b1:	fdivrp st(6),st
  4156b3:	and    eax,0xaa3420
  4156b8:	jmp    0xae69:0x53584e43
  4156bf:	jnp    0x4156e6
  4156c1:	and    BYTE PTR [eax],ah
  4156c3:	stos   BYTE PTR es:[edi],al
  4156c4:	add    al,dh
  4156c6:	mov    ebp,0x7951584a
  4156cb:	out    dx,al
  4156cc:	cli    
  4156cd:	xor    eax,0xaa3020
  4156d2:	loopne 0x415691
  4156d4:	pop    edx
  4156d5:	pop    eax
  4156d6:	push   ecx
  4156d7:	imul   ebp,esi,0x302025fa
  4156dd:	stos   BYTE PTR es:[edi],al
  4156de:	add    al,ah
  4156e0:	mov    ecx,0x3051544a
  4156e5:	in     eax,dx
  4156e6:	cli    
  4156e7:	and    eax,0xa1f020
  4156ec:	mov    ch,0x82
  4156ee:	dec    edx
  4156ef:	pop    eax
  4156f0:	push   ecx
  4156f1:	imul   ebp,esi,0x302025fa
  4156f7:	stos   BYTE PTR es:[edi],al
  4156f8:	add    al,ah
  4156fa:	mov    ebp,0x6951584a
  4156ff:	out    dx,al
  415700:	cli    
  415701:	add    eax,0xb2302c
  415706:	loopne 0x4156c5
  415708:	dec    edx
  415709:	pop    eax
  41570a:	push   ecx
  41570b:	imul   ebp,esi,0x302025fa
  415711:	stos   BYTE PTR es:[edi],al
  415712:	add    al,ah
  415714:	mov    ebp,0x6951584a
  415719:	out    dx,al
  41571a:	cli    
  41571b:	and    eax,0xaa3020
  415720:	loopne 0x4156df
  415722:	dec    edx
  415723:	pop    eax
  415724:	push   ecx
  415725:	imul   ebp,esi,0x302025fa
  41572b:	stos   BYTE PTR es:[edi],al
  41572c:	add    al,ah
  41572e:	mov    ebp,0x6951584a
  415733:	out    dx,al
  415734:	cli    
  415735:	and    eax,0xaa3020
  41573a:	loopne 0x4156f9
  41573c:	dec    edx
  41573d:	pop    eax
  41573e:	push   ecx
  41573f:	imul   ebp,esi,0x302025fa
  415745:	stos   BYTE PTR es:[edi],al
  415746:	add    al,ah
  415748:	mov    ebp,0x6951584a
  41574d:	out    dx,al
  41574e:	cli    
  41574f:	and    eax,0xaa3020
  415754:	loopne 0x415713
  415756:	dec    edx
  415757:	pop    eax
  415758:	jg     0x415777
  41575a:	mov    eax,DWORD PTR [edx-0x55cfdfaf]
  415760:	add    BYTE PTR [eax-0x4a],dl
  415763:	dec    edx
  415764:	pop    eax
  415765:	inc    ecx
  415766:	imul   ebp,esi,0x302443fa
  41576c:	stos   BYTE PTR es:[edi],al
  41576d:	add    al,0xe0
  41576f:	mov    ebp,0x5b121d1a
  415774:	mov    edx,0x302025b5
  415779:	stos   BYTE PTR es:[edi],al
  41577a:	add    al,ah
  41577c:	popf   
  41577d:	dec    edx
  41577e:	pop    eax
  41577f:	mov    cl,0x47
  415781:	pushf  
  415782:	mov    DWORD PTR [edi+0x43],edx
  415785:	xor    BYTE PTR [edx+0x4adde000],ch
  41578b:	pop    eax
  41578c:	push   ecx
  41578d:	test   eax,0x7225fae5
  415792:	xor    BYTE PTR [edx+0x4ab98a00],ch
  415798:	pop    eax
  415799:	push   ecx
  41579a:	imul   ebp,esi,0x302025fa
  4157a0:	stos   BYTE PTR es:[edi],al
  4157a1:	add    al,ah
  4157a3:	mov    ebp,0x8951586a
  4157a8:	ror    BYTE PTR [eax-0x36a0b3c0],0x0
  4157af:	loopne 0x41576e
  4157b1:	dec    eax
  4157b2:	pop    eax
  4157b3:	push   ecx
  4157b4:	imul   ecx,esi,0x322025f6
  4157ba:	stos   BYTE PTR es:[edi],al
  4157bb:	add    al,ah
  4157bd:	add    DWORD PTR [esi+0x58],ecx
  4157c0:	push   ecx
  4157c1:	imul   ebp,esi,0x302025fa
  4157c7:	stos   BYTE PTR es:[edi],al
  4157c8:	add    al,ah
  4157ca:	mov    ebp,0x6951184a
  4157cf:	cs cli 
  4157d1:	and    eax,0xaa3020
  4157d6:	loopne 0x415795
  4157d8:	dec    edx
  4157d9:	pop    eax
  4157da:	push   ecx
  4157db:	imul   ebp,esi,0x302025fa
  4157e1:	stos   BYTE PTR es:[edi],al
  4157e2:	add    al,ah
  4157e4:	mov    ebp,0x6951584a
  4157e9:	out    dx,al
  4157ea:	cli    
  4157eb:	and    eax,0xaa3020
  4157f0:	loopne 0x4157af
  4157f2:	dec    edx
  4157f3:	pop    eax
  4157f4:	push   ecx
  4157f5:	imul   ebp,esi,0x302025fa
  4157fb:	stos   BYTE PTR es:[edi],al
  4157fc:	add    al,ah
  4157fe:	mov    ebp,0x6951584a
  415803:	out    dx,al
  415804:	cli    
  415805:	and    eax,0xaa3020
  41580a:	loopne 0x4157c9
  41580c:	dec    edx
  41580d:	pop    eax
  41580e:	push   ecx
  41580f:	imul   ebp,esi,0x302025fa
  415815:	stos   BYTE PTR es:[edi],al
  415816:	add    al,ah
  415818:	mov    ebp,0x6951584a
  41581d:	out    dx,al
  41581e:	cli    
  41581f:	and    eax,0xaa3020
  415824:	loopne 0x4157e3
  415826:	dec    edx
  415827:	pop    eax
  415828:	push   ecx
  415829:	imul   ebp,esi,0x302025fa
  41582f:	stos   BYTE PTR es:[edi],al
  415830:	add    al,ah
  415832:	mov    ebp,0x6951584a
  415837:	out    dx,al
  415838:	cli    
  415839:	and    eax,0xaa3020
  41583e:	loopne 0x4157fd
  415840:	dec    edx
  415841:	pop    eax
  415842:	push   ecx
  415843:	imul   ebp,esi,0x302025fa
  415849:	stos   BYTE PTR es:[edi],al
  41584a:	add    al,ah
  41584c:	mov    ebp,0x6951584a
  415851:	out    dx,al
  415852:	cli    
  415853:	and    eax,0xaa3020
  415858:	loopne 0x415817
  41585a:	dec    edx
  41585b:	pop    eax
  41585c:	push   ecx
  41585d:	imul   ebp,esi,0x302025fa
  415863:	stos   BYTE PTR es:[edi],al
  415864:	add    al,ah
  415866:	mov    ebp,0x6951584a
  41586b:	out    dx,al
  41586c:	cli    
  41586d:	and    eax,0xaa3020
  415872:	loopne 0x415831
  415874:	dec    edx
  415875:	pop    eax
  415876:	push   ecx
  415877:	imul   ebp,esi,0x302025fa
  41587d:	stos   BYTE PTR es:[edi],al
  41587e:	add    al,ah
  415880:	mov    ebp,0x6951584a
  415885:	out    dx,al
  415886:	cli    
  415887:	and    eax,0xaa3020
  41588c:	loopne 0x41584b
  41588e:	dec    edx
  41588f:	pop    eax
  415890:	push   ecx
  415891:	imul   ebp,esi,0x302025fa
  415897:	stos   BYTE PTR es:[edi],al
  415898:	add    al,ah
  41589a:	mov    ebp,0x6951584a
  41589f:	out    dx,al
  4158a0:	cli    
  4158a1:	and    eax,0xaa3020
  4158a6:	loopne 0x415865
  4158a8:	dec    edx
  4158a9:	pop    eax
  4158aa:	push   ecx
  4158ab:	imul   ebp,esi,0x302025fa
  4158b1:	stos   BYTE PTR es:[edi],al
  4158b2:	add    al,ah
  4158b4:	mov    ebp,0x6951584a
  4158b9:	out    dx,al
  4158ba:	cli    
  4158bb:	and    eax,0xaa3020
  4158c0:	loopne 0x41587f
  4158c2:	dec    edx
  4158c3:	pop    eax
  4158c4:	push   ecx
  4158c5:	imul   ebp,esi,0x302025fa
  4158cb:	stos   BYTE PTR es:[edi],al
  4158cc:	add    al,ah
  4158ce:	mov    ebp,0x6951584a
  4158d3:	out    dx,al
  4158d4:	cli    
  4158d5:	and    eax,0xaa3020
  4158da:	loopne 0x415899
  4158dc:	dec    edx
  4158dd:	pop    eax
  4158de:	push   ecx
  4158df:	imul   ebp,esi,0x302025fa
  4158e5:	stos   BYTE PTR es:[edi],al
  4158e6:	add    al,ah
  4158e8:	mov    ebp,0x6951584a
  4158ed:	out    dx,al
  4158ee:	cli    
  4158ef:	and    eax,0xaa3020
  4158f4:	loopne 0x4158b3
  4158f6:	dec    edx
  4158f7:	pop    eax
  4158f8:	push   ecx
  4158f9:	imul   ebp,esi,0x302025fa
  4158ff:	stos   BYTE PTR es:[edi],al
  415900:	add    al,ah
  415902:	mov    ebp,0x6951584a
  415907:	out    dx,al
  415908:	cli    
  415909:	and    eax,0xaa3020
  41590e:	loopne 0x4158cd
  415910:	dec    edx
  415911:	pop    eax
  415912:	push   ecx
  415913:	imul   ebp,esi,0x302025fa
  415919:	stos   BYTE PTR es:[edi],al
  41591a:	add    al,ah
  41591c:	mov    ebp,0x6951584a
  415921:	out    dx,al
  415922:	cli    
  415923:	and    eax,0xaa3020
  415928:	loopne 0x4158e7
  41592a:	dec    edx
  41592b:	pop    eax
  41592c:	push   ecx
  41592d:	imul   ebp,esi,0x302025fa
  415933:	stos   BYTE PTR es:[edi],al
  415934:	add    al,ah
  415936:	mov    ebp,0x6951584a
  41593b:	out    dx,al
  41593c:	cli    
  41593d:	and    eax,0xaa3020
  415942:	loopne 0x415901
  415944:	dec    edx
  415945:	pop    eax
  415946:	push   ecx
  415947:	imul   ebp,esi,0x302025fa
  41594d:	stos   BYTE PTR es:[edi],al
  41594e:	add    al,ah
  415950:	mov    ebp,0x6951584a
  415955:	out    dx,al
  415956:	cli    
  415957:	and    eax,0xa17e8b
  41595c:	iret   
  41595d:	mov    ebp,0x6951484a
  415962:	les    ebx,FWORD PTR [eax-0x1]
  415965:	push   esp
  415966:	(bad)  
  415967:	in     eax,0x33
  415969:	repnz xchg esi,eax
  41596b:	jno    0x4159d2
  41596d:	mov    esi,0x6cfc7cdc
  415972:	jns    0x415935
  415974:	jbe    0x415929
  415976:	repz cli 
  415978:	jno    0x41592b
  41597a:	mov    edx,esp
  41597c:	lods   al,BYTE PTR ds:[esi]
  41597d:	mov    esp,edi
  41597f:	fidivr DWORD PTR [edi+0x3d]
  415982:	pop    esi
  415983:	aas    
  415984:	imul   ecx,DWORD PTR [edx],0x558a3c3b
  41598a:	sub    eax,DWORD PTR [eax]
  41598c:	arpl   WORD PTR [ecx],di
  41598e:	and    al,BYTE PTR [eax+0x616a40f7]
  415994:	imul   ebp,DWORD PTR [edx],0xf862b6ec
  41599a:	lods   al,BYTE PTR ds:[esi]
  41599b:	jge    0x4159ec
  41599d:	fimul  WORD PTR [esi]
  41599f:	mov    esp,0xa07e48ac
  4159a4:	or     esi,DWORD PTR [edi+0x4f]
  4159a7:	lods   al,BYTE PTR ds:[esi]
  4159a8:	dec    ebp
  4159a9:	adc    BYTE PTR [edi+0x4d],bh
  4159ac:	loopne 0x415a10
  4159ae:	cld    
  4159af:	in     al,dx
  4159b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159b1:	push   es
  4159b2:	(bad)  
  4159b3:	iret   
  4159b4:	(bad)  
  4159b5:	mov    edx,DWORD PTR [edi+0x7fd15c3c]
  4159bb:	add    ebx,DWORD PTR [edx+ebp*8-0x46]
  4159bf:	rol    BYTE PTR [esi],1
  4159c1:	push   esp
  4159c2:	pop    ss
  4159c3:	out    dx,eax
  4159c4:	popf   
  4159c5:	test   DWORD PTR [edi],ebx
  4159c7:	out    dx,eax
  4159c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159c9:	adc    eax,0x353de2bf
  4159ce:	push   ebp
  4159cf:	or     BYTE PTR [edx-0x4327613c],cl
  4159d5:	retf   0x950b
  4159d8:	jecxz  0x4159a0
  4159da:	mov    bh,0x14
  4159dc:	call   DWORD PTR [eax+0x2ad74f4b]
  4159e2:	aaa    
  4159e3:	dec    edi
  4159e4:	mov    eax,0x77b5a164
  4159e9:	and    edi,ecx
  4159eb:	aam    0x82
  4159ed:	push   0xffffffc2
  4159ef:	daa    
  4159f0:	inc    ebp
  4159f1:	std    
  4159f2:	or     edx,esi
  4159f4:	adc    eax,0xc246b01e
  4159f9:	inc    esi
  4159fa:	adc    dl,BYTE PTR [edx+0x501da698]
  415a00:	jmp    0x4159ce
  415a02:	in     eax,0x9e
  415a04:	pop    esp
  415a05:	xchg   esp,eax
  415a06:	jl     0x415a5f
  415a08:	gs xchg ebp,eax
  415a0a:	inc    edx
  415a0b:	inc    edi
  415a0c:	xchg   edx,eax
  415a0d:	xchg   ecx,eax
  415a0e:	enter  0x22bd,0xc5
  415a12:	aaa    
  415a13:	sahf   
  415a14:	es push 0x59b7c1f6
  415a1a:	ret    0xddb3
  415a1d:	sbb    bl,BYTE PTR [edi-0xd]
  415a20:	ss popa 
  415a22:	test   ecx,edi
  415a24:	mov    al,0x99
  415a26:	xor    esi,DWORD PTR [ebp-0x66]
  415a29:	mov    eax,ds:0x1d83c8ab
  415a2e:	into   
  415a2f:	push   ebp
  415a30:	cmp    bl,BYTE PTR [ebx-0x2bb52715]
  415a36:	stos   BYTE PTR es:[edi],al
  415a37:	inc    ecx
  415a38:	aaa    
  415a39:	and    DWORD PTR [ebx+ecx*1-0x4f],0xffffffd9
  415a3e:	and    DWORD PTR [edx],0xbea03a56
  415a44:	xor    ah,dh
  415a46:	enter  0x963b,0x65
  415a4a:	pop    ss
  415a4b:	sbb    BYTE PTR [eax],ah
  415a4d:	inc    eax
  415a4e:	or     BYTE PTR [ebx-0x64],0x60
  415a52:	out    0xcd,al
  415a54:	bound  edi,QWORD PTR [edx-0x74]
  415a57:	je     0x415a06
  415a59:	inc    edx
  415a5a:	adc    al,0xbf
  415a5c:	(bad)  
  415a5e:	lahf   
  415a5f:	scas   eax,DWORD PTR es:[edi]
  415a60:	repz mov esp,0xcc915aa0
  415a66:	push   eax
  415a67:	cmp    al,al
  415a69:	xor    BYTE PTR [eax],0x60
  415a6c:	sub    ch,BYTE PTR [esi+ebp*4]
  415a6f:	je     0x415aa0
  415a71:	sbb    BYTE PTR [ebx+0x4d12b745],dh
  415a77:	(bad)  
  415a78:	adc    al,0xd3
  415a7a:	sub    BYTE PTR ds:[edi+0x67905038],bl
  415a81:	cmp    esp,ebp
  415a83:	nop
  415a84:	pop    ecx
  415a85:	cmovl  eax,DWORD PTR [edi+eiz*2+0x3f59850d]
  415a8d:	sbb    BYTE PTR [eax+0x3aec5323],bl
  415a93:	inc    esp
  415a94:	add    ecx,DWORD PTR [edi-0x45]
  415a97:	mov    ah,0x5
  415a99:	pop    ds
  415a9a:	and    eax,DWORD PTR [esi-0x6c]
  415a9d:	lock inc edi
  415a9f:	mov    edx,0xf26e6d16
  415aa4:	mov    eax,0xbea5f465
  415aa9:	out    0xcb,eax
  415aab:	sahf   
  415aac:	fnsave [ebp+0x2]
  415aaf:	pop    esi
  415ab0:	adc    bl,BYTE PTR [esi+0x77c1318f]
  415ab6:	stos   DWORD PTR es:[edi],eax
  415ab7:	push   ds
  415ab8:	inc    ebp
  415ab9:	pop    es
  415aba:	fdivr  DWORD PTR [eax+0x27]
  415abd:	push   ds
  415abe:	sbb    al,0xb7
  415ac0:	test   DWORD PTR [edx+0x5807ab75],ebx
  415ac6:	jecxz  0x415a63
  415ac8:	xor    BYTE PTR [esi],dh
  415aca:	add    eax,0xd311e7a0
  415acf:	lds    edi,FWORD PTR [edi-0x10]
  415ad2:	nop
  415ad3:	int    0xe8
  415ad5:	push   cs
  415ad6:	out    dx,eax
  415ad7:	aaa    
  415ad8:	pop    esi
  415ad9:	mov    edi,0xf5189a38
  415ade:	mov    ebx,0xd9dbeed
  415ae3:	dec    edi
  415ae4:	in     al,0x17
  415ae6:	lods   al,BYTE PTR ds:[esi]
  415ae7:	pop    ds
  415ae8:	and    ecx,DWORD PTR [ecx]
  415aea:	jne    0x415afc
  415aec:	jmp    0x5211263f
  415af1:	shl    DWORD PTR [edi+0x423a12b7],cl
  415af7:	es (bad) 
  415af9:	cli    
  415afa:	aam    0xd1
  415afc:	test   eax,0xc39fce7e
  415b01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b02:	imul   edi,DWORD PTR [esi+0x3c],0x6400547c
  415b09:	adc    DWORD PTR ds:0xea2f9bf8,edx
  415b0f:	adc    BYTE PTR [eax],dl
  415b11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b12:	jge    0x415ae2
  415b14:	or     al,0x2
  415b16:	inc    esp
  415b17:	in     eax,0x3f
  415b19:	js     0x415b6c
  415b1b:	mov    esp,0x3b42ad04
  415b20:	fdiv   QWORD PTR cs:[edi+edi*4-0x700be839]
  415b28:	inc    eax
  415b29:	push   edx
  415b2a:	sub    eax,0x44e61924
  415b2f:	inc    eax
  415b30:	sti    
  415b31:	rcr    BYTE PTR [esi-0x74],cl
  415b34:	scas   eax,DWORD PTR es:[edi]
  415b35:	inc    ebp
  415b36:	mov    eax,0x382e1204
  415b3b:	xor    al,0x9a
  415b3d:	cwde   
  415b3e:	cdq    
  415b3f:	retf   0x4f5a
  415b42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b43:	cmp    BYTE PTR [esi+0x30],bh
  415b46:	cmc    
  415b47:	imul   eax,DWORD PTR [eax],0x37
  415b4a:	bnd jb 0x415b9a
  415b4d:	and    bh,BYTE PTR [ebx+0x78d62b69]
  415b53:	sub    DWORD PTR [esi],0xffffff8d
  415b56:	push   ebx
  415b57:	ja     0x415b1a
  415b59:	call   0x9619:0x1cac2e62
  415b60:	mov    ch,0xf5
  415b62:	mov    edx,DWORD PTR [ebx+0x10]
  415b65:	shl    DWORD PTR [di+0x9b0],0x11
  415b6b:	sub    al,0xfa
  415b6d:	and    eax,0x9db8f98c
  415b72:	sub    BYTE PTR ss:[edx+0x65],ah
  415b76:	pusha  
  415b77:	push   esp
  415b78:	outs   dx,DWORD PTR ds:[esi]
  415b79:	nop
  415b7a:	repz mov edx,0xd037d9af
  415b80:	push   ecx
  415b81:	add    edi,DWORD PTR [ebx-0x6546f59a]
  415b87:	add    eax,0x23914aec
  415b8c:	jne    0x415b98
  415b8e:	sbb    DWORD PTR [edx-0x69596257],eax
  415b94:	xor    ebx,DWORD PTR [ecx+0x461caa10]
  415b9a:	imul   ecx,esi,0xffffff8f
  415b9d:	imul   ebx,DWORD PTR [ecx-0x26d6fe87],0xe462bef
  415ba7:	shl    bl,cl
  415ba9:	int3   
  415baa:	dec    esi
  415bab:	jns    0x415be4
  415bad:	dec    edx
  415bae:	cwde   
  415baf:	ret    
  415bb0:	fxam   
  415bb2:	or     ebx,edi
  415bb4:	cmp    cl,BYTE PTR [edx]
  415bb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bb7:	or     eax,0xe3178e37
  415bbc:	sbb    eax,0x2ecd4eca
  415bc1:	mov    bh,0xa4
  415bc3:	call   0xe690579d
  415bc8:	mov    esi,0xaab4dce9
  415bcd:	xlat   BYTE PTR ds:[ebx]
  415bce:	jp     0x415bfa
  415bd0:	sbb    eax,0xa04f5f21
  415bd5:	inc    ebx
  415bd6:	icebp  
  415bd7:	xchg   dl,al
  415bd9:	jno    0x415bb1
  415bdb:	inc    ebp
  415bdc:	cmp    eax,0xa6aa0cf0
  415be1:	or     DWORD PTR [eax+0x47],esp
  415be4:	leave  
  415be5:	cmp    esp,DWORD PTR [edi-0x63]
  415be8:	xchg   esp,eax
  415be9:	loopne 0x415b7e
  415beb:	(bad)  
  415bec:	neg    BYTE PTR [edx+0x49]
  415bef:	hlt    
  415bf0:	(bad)  
  415bf2:	ret    0xc8cf
  415bf5:	sahf   
  415bf6:	scas   al,BYTE PTR es:[edi]
  415bf7:	pop    ecx
  415bf8:	xor    ebx,DWORD PTR [ebx]
  415bfa:	icebp  
  415bfb:	push   ss
  415bfc:	rcr    dh,1
  415bfe:	mov    ecx,0x4bb64dca
  415c03:	cmp    bl,bh
  415c05:	push   ecx
  415c06:	in     al,0xdd
  415c08:	ret    0x2124
  415c0b:	and    DWORD PTR [ebx+0x1ef5ebba],esp
  415c11:	ror    DWORD PTR [edi+0x5b],0x33
  415c15:	mov    ebp,0x9dc7d8d8
  415c1a:	mov    esp,0x8327099b
  415c1f:	add    edi,DWORD PTR [ebp*8+0x5a49e288]
  415c26:	ror    BYTE PTR [ebx-0x6e],1
  415c29:	inc    eax
  415c2a:	sub    DWORD PTR [ebp+0x3eca6806],esp
  415c30:	push   edi
  415c31:	js     0x415c76
  415c33:	ins    DWORD PTR es:[edi],dx
  415c34:	fmul   DWORD PTR [ebp-0x4e]
  415c37:	scas   al,BYTE PTR es:[edi]
  415c38:	mov    eax,0xda92023d
  415c3d:	inc    eax
  415c3e:	rol    DWORD PTR [ebx],1
  415c40:	sub    BYTE PTR [ecx],al
  415c42:	add    al,BYTE PTR [edx+0x191480e4]
  415c48:	popf   
  415c49:	jnp    0x415c92
  415c4b:	dec    edi
  415c4c:	cmp    cl,dh
  415c4e:	out    dx,eax
  415c4f:	cmp    BYTE PTR [edi],al
  415c51:	in     eax,0xc2
  415c53:	faddp  st(3),st
  415c55:	xor    ebx,esp
  415c57:	cdq    
  415c58:	test   DWORD PTR [ebp+0x28],edi
  415c5b:	popa   
  415c5c:	or     al,BYTE PTR [ebp+0x7f]
  415c5f:	scas   eax,DWORD PTR es:[edi]
  415c60:	and    eax,0x610a1967
  415c65:	xor    edx,edx
  415c67:	jmp    0xcc89d719
  415c6c:	js     0x415c99
  415c6e:	xor    edx,esi
  415c70:	scas   al,BYTE PTR es:[edi]
  415c71:	or     ebx,DWORD PTR [eax+0x65]
  415c74:	nop
  415c75:	fst    DWORD PTR [eax]
  415c77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c78:	or     al,0x3a
  415c7a:	add    al,bl
  415c7c:	or     bh,BYTE PTR [eax+edi*2]
  415c7f:	jp     0x415c59
  415c81:	outs   dx,DWORD PTR ds:[esi]
  415c82:	inc    ebp
  415c83:	mov    dl,0x31
  415c85:	xchg   BYTE PTR [eax+0x2ef41c80],ch
  415c8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c8c:	or     edx,DWORD PTR [edi+0x226d958b]
  415c92:	jle    0x415c9a
  415c94:	sbb    DWORD PTR [ecx],edi
  415c96:	stos   BYTE PTR es:[edi],al
  415c97:	sbb    eax,0x4e1b870c
  415c9c:	sub    esp,DWORD PTR [ebx-0x30]
  415c9f:	call   0x6fc9efc3
  415ca4:	cmp    ah,BYTE PTR ds:0x219fa555
  415caa:	es mov al,0xbf
  415cad:	xchg   esi,eax
  415cae:	arpl   WORD PTR [esi-0x41],si
  415cb1:	xchg   esi,eax
  415cb2:	mov    esi,0x64edc6db
  415cb7:	dec    ebx
  415cb8:	sbb    eax,0x67122567
  415cbd:	sub    eax,0x7ffa959b
  415cc2:	and    BYTE PTR [ebx+0x55cede5d],al
  415cc8:	or     ebx,DWORD PTR [ebx-0x6d3f97d0]
  415cce:	xor    esi,eax
  415cd0:	fsub   DWORD PTR [ebx]
  415cd2:	cld    
  415cd3:	outs   dx,DWORD PTR ds:[esi]
  415cd4:	dec    ebp
  415cd5:	sbb    DWORD PTR es:[eax+eiz*2+0x52e96d74],esi
  415cdd:	cmp    DWORD PTR [esi-0x41],ebp
  415ce0:	cld    
  415ce1:	jp     0x415d56
  415ce3:	pop    esi
  415ce4:	outs   dx,DWORD PTR ds:[esi]
  415ce5:	adc    DWORD PTR [edx+0x46fb88d8],ebp
  415ceb:	mov    bl,0x9d
  415ced:	mov    ds,WORD PTR [ecx]
  415cef:	jns    0x415d4c
  415cf1:	push   ss
  415cf2:	loop   0x415d48
  415cf4:	add    BYTE PTR fs:[ebp-0xe569ee3],dl
  415cfb:	dec    esi
  415cfc:	inc    ecx
  415cfd:	popf   
  415cfe:	jmp    0x415cdb
  415d00:	xor    ah,BYTE PTR [ebx+0x22a50cd2]
  415d06:	in     al,dx
  415d07:	mov    edx,0x39f33af5
  415d0c:	retf   
  415d0d:	jb     0x415d70
  415d0f:	clc    
  415d10:	je     0x415d4f
  415d12:	ds ins DWORD PTR es:[edi],dx
  415d14:	sub    al,0xd4
  415d16:	push   edx
  415d17:	cmc    
  415d18:	jle    0x415d19
  415d1a:	jmp    0xb740:0x557559d9
  415d21:	mov    ch,0xec
  415d23:	jp     0x415da1
  415d25:	mov    ebp,ebp
  415d27:	and    esp,0x24
  415d2a:	je     0x415da2
  415d2c:	push   esi
  415d2d:	push   0xb5d33946
  415d32:	push   cs
  415d33:	in     al,dx
  415d34:	jae    0x415d34
  415d36:	add    eax,0xf513a16f
  415d3b:	call   FWORD PTR [edx-0x6a]
  415d3e:	inc    ecx
  415d3f:	sub    DWORD PTR [ecx],eax
  415d41:	test   al,0x8b
  415d43:	sub    esp,ebp
  415d45:	leave  
  415d46:	sbb    DWORD PTR [edx+0x78a7b05],eax
  415d4c:	mov    ebx,0xd0c9f5dc
  415d51:	into   
  415d52:	out    0x9a,eax
  415d54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d55:	adc    eax,0xaa0aa8a1
  415d5a:	or     BYTE PTR [edx],ch
  415d5c:	fsub   DWORD PTR [eax+0xf183fea]
  415d62:	sbb    eax,ebx
  415d64:	data16 cld 
  415d66:	pop    es
  415d67:	test   edi,esi
  415d69:	and    al,0xb1
  415d6b:	leave  
  415d6c:	shl    BYTE PTR [edi+0x358826b3],1
  415d72:	pop    ecx
  415d73:	aaa    
  415d74:	push   ecx
  415d75:	cs out dx,al
  415d77:	call   0x9815:0x627ea75e
  415d7e:	test   DWORD PTR [ebp+0x67bd0b37],0xef4338
  415d88:	push   ds
  415d89:	fstp   TBYTE PTR [ebp-0x78825a34]
  415d8f:	aad    0x23
  415d91:	xlat   BYTE PTR ds:[ebx]
  415d92:	call   0x4ba7:0x7f77fd17
  415d99:	mov    ecx,0x135db3ed
  415d9e:	mov    DWORD PTR [edi+edi*1],edi
  415da1:	aas    
  415da2:	or     DWORD PTR [edi],ebp
  415da4:	pushf  
  415da5:	scas   eax,DWORD PTR es:[edi]
  415da6:	mov    ecx,0x167f095f
  415dab:	dec    eax
  415dac:	out    dx,al
  415dad:	call   0xb12e5197
  415db2:	out    0xd6,al
  415db4:	sbb    edx,ecx
  415db6:	dec    esi
  415db7:	and    eax,0x3b59cd93
  415dbc:	mov    DWORD PTR [ebp-0x66ca574d],edi
  415dc2:	mov    cl,0xa2
  415dc4:	push   0xbeab3fe9
  415dc9:	enter  0x4aaf,0x34
  415dcd:	idiv   dl
  415dcf:	xlat   BYTE PTR ds:[ebx]
  415dd0:	xor    al,0xf0
  415dd2:	ins    DWORD PTR es:[edi],dx
  415dd3:	cmp    ebx,DWORD PTR [ebp-0x659dbcf7]
  415dd9:	cmp    DWORD PTR [esi-0x2c37726e],0x6760c035
  415de3:	add    eax,0x674bd122
  415de8:	loopne 0x415e69
  415dea:	ret    
  415deb:	retf   
  415dec:	ins    BYTE PTR es:[edi],dx
  415ded:	mov    al,0xf4
  415def:	fst    DWORD PTR [eax+0x60]
  415df2:	fcmovb st,st(1)
  415df4:	js     0x415df5
  415df6:	mov    BYTE PTR [edi+ebp*2-0x6086878f],dh
  415dfd:	xchg   ebp,eax
  415dfe:	xchg   cl,al
  415e00:	mov    ds:0x92fcf675,eax
  415e05:	ror    BYTE PTR [edx+0x72],cl
  415e08:	xchg   ecx,eax
  415e09:	pop    edi
  415e0a:	(bad)  
  415e0b:	retf   0x9b24
  415e0e:	gs push ss
  415e10:	mov    bl,0xdf
  415e12:	mov    esp,0x3722e4a9
  415e17:	(bad)  
  415e18:	mov    ?,WORD PTR [ecx-0xd]
  415e1b:	add    bl,BYTE PTR [esi+0x317afe7a]
  415e21:	pop    ss
  415e22:	pop    ecx
  415e23:	fst    st(6)
  415e25:	push   cs
  415e26:	cmp    ebx,DWORD PTR [eax+0x382b5059]
  415e2c:	in     eax,dx
  415e2d:	nop
  415e2e:	push   ebx
  415e2f:	xor    esi,DWORD PTR [ebp-0x2c]
  415e32:	sbb    DWORD PTR [edi-0x689f0e60],edi
  415e38:	(bad)  [eax+0x6e7b46f7]
  415e3e:	pop    ebx
  415e3f:	cld    
  415e40:	mov    ds:0xaeb00caf,al
  415e45:	js     0x415e97
  415e47:	push   esi
  415e48:	out    dx,eax
  415e49:	mov    eax,0x7b8311a0
  415e4e:	hlt    
  415e4f:	mul    bh
  415e51:	repnz pop esi
  415e53:	dec    ebp
  415e54:	add    BYTE PTR [bx+di+0x38],al
  415e58:	xor    bh,BYTE PTR [edx-0x4715f30f]
  415e5e:	iret   
  415e5f:	scas   eax,DWORD PTR es:[edi]
  415e60:	add    ebp,DWORD PTR [edi]
  415e62:	jno    0x415e87
  415e64:	pop    esp
  415e65:	ja     0x415e60
  415e67:	or     eax,0x3ba75c63
  415e6c:	mov    esi,0x4a102037
  415e71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e72:	sbb    DWORD PTR [ebp+0x5a],0x38158d64
  415e79:	mov    esi,0xb2307584
  415e7e:	sbb    DWORD PTR [ebx+0x296c41fb],ebp
  415e84:	bound  ebp,QWORD PTR [ebx+edi*1+0x7a]
  415e88:	and    dh,BYTE PTR [ebp+0x15]
  415e8b:	mov    ebp,0xe78a0a03
  415e90:	pop    edi
  415e91:	or     ch,ch
  415e93:	imul   edi,DWORD PTR [edx-0x34],0x6e
  415e97:	adc    DWORD PTR [ebp+eiz*8+0x5d],ebx
  415e9b:	in     eax,0x6a
  415e9d:	inc    edx
  415e9e:	ds sbb eax,0x9c973371
  415ea4:	sub    BYTE PTR [ebx-0x77685ff9],ch
  415eaa:	xchg   edx,eax
  415eab:	outs   dx,BYTE PTR ds:[esi]
  415eac:	jne    0x415f0d
  415eae:	mov    al,0x83
  415eb0:	jp     0x415e4c
  415eb2:	jo     0x415e8e
  415eb4:	add    edi,edi
  415eb6:	fistp  DWORD PTR [esi-0x3dc15b36]
  415ebc:	jmp    0x37e7:0x60c7e81f
  415ec3:	push   ds
  415ec4:	jo     0x415f2d
  415ec6:	retf   
  415ec7:	ficom  DWORD PTR [ebx-0x62f37cfd]
  415ecd:	xor    al,0x28
  415ecf:	xor    cl,ah
  415ed1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ed2:	cdq    
  415ed3:	shr    BYTE PTR [edi-0x7fa74695],0x5
  415eda:	pop    esi
  415edb:	in     eax,0x41
  415edd:	je     0x415ec7
  415edf:	mov    bh,0x30
  415ee1:	out    dx,al
  415ee2:	inc    esi
  415ee3:	lods   al,BYTE PTR es:[esi]
  415ee5:	fdivr  QWORD PTR [edi+ecx*2+0x2d]
  415ee9:	add    BYTE PTR [edx-0x70a84a14],ch
  415eef:	gs push esp
  415ef1:	int    0x52
  415ef3:	ret    0x269f
  415ef6:	dec    eax
  415ef7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ef8:	mov    esp,0x8ae401ca
  415efd:	es test eax,0xce93a01a
  415f03:	xchg   edi,eax
  415f04:	add    al,ch
  415f06:	mov    esi,0x93697470
  415f0b:	imul   ecx,DWORD PTR [edx],0x18
  415f0e:	jo     0x415ecc
  415f10:	inc    edi
  415f11:	add    ah,BYTE PTR [eax+0x71e07f07]
  415f17:	jnp    0x415f50
  415f19:	in     eax,0xfa
  415f1b:	daa    
  415f1c:	mov    dh,0xc0
  415f1e:	retf   
  415f1f:	jmp    0x415f3b
  415f21:	arpl   WORD PTR [eax+0x2b],cx
  415f24:	jo     0x415f7b
  415f26:	push   edi
  415f27:	mov    edi,0x5edca05d
  415f2c:	jp     0x415fa9
  415f2e:	inc    edi
  415f2f:	jb     0x415f24
  415f31:	ror    edi,0x7
  415f34:	dec    ecx
  415f35:	mov    ah,BYTE PTR [edi-0x6df742fc]
  415f3b:	rcl    BYTE PTR [ecx+0x10],1
  415f3e:	or     BYTE PTR [edx],ch
  415f40:	and    eax,0x6938faf7
  415f45:	sub    BYTE PTR [esp+ebp*1-0x1b59c75c],ch
  415f4c:	jne    0x415fc5
  415f4e:	ja     0x415f58
  415f50:	xchg   edx,eax
  415f51:	inc    eax
  415f52:	jmp    0xdc58:0x65b71cc1
  415f59:	int    0x61
  415f5b:	jb     0x415f92
  415f5d:	call   0x20b1713
  415f62:	out    0xbb,al
  415f64:	leave  
  415f65:	or     DWORD PTR [edx],esi
  415f67:	arpl   WORD PTR ds:0xf958baac,dx
  415f6d:	jmp    0x415f37
  415f6f:	iret   
  415f70:	sbb    eax,0x90549a15
  415f75:	out    dx,eax
  415f76:	mov    ah,0x29
  415f78:	mov    edi,0x417111c3
  415f7d:	iret   
  415f7e:	mov    cl,0xaf
  415f80:	scas   eax,DWORD PTR es:[edi]
  415f81:	call   0x382d:0xcb79e346
  415f88:	jne    0x415f41
  415f8a:	push   esp
  415f8b:	bound  ebp,QWORD PTR [ecx+0x5bb7536c]
  415f91:	cld    
  415f92:	loop   0x415fb4
  415f94:	sbb    dh,bl
  415f96:	xchg   esp,eax
  415f97:	jb     0x416015
  415f99:	nop
  415f9a:	inc    edi
  415f9b:	cmp    ah,BYTE PTR [eax]
  415f9d:	mov    BYTE PTR [edx-0x1b],bh
  415fa0:	retf   
  415fa1:	in     eax,0x99
  415fa3:	adc    edx,DWORD PTR [eax-0x67]
  415fa6:	jbe    0x415f2c
  415fa8:	popf   
  415fa9:	jecxz  0x415f4c
  415fab:	jmp    0x416029
  415fad:	mov    bh,0xaa
  415faf:	jle    0x415fcf
  415fb1:	mov    bh,BYTE PTR [ebp+0x36]
  415fb4:	cmc    
  415fb5:	aaa    
  415fb6:	pop    ebp
  415fb7:	pop    esi
  415fb8:	enter  0x3483,0x7
  415fbc:	jmp    0x415fb5
  415fbe:	leave  
  415fbf:	jae    0x415f7e
  415fc1:	cdq    
  415fc2:	cli    
  415fc3:	and    eax,0x39a0e8e2
  415fc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fc9:	mov    ds:0x2ccf0378,al
  415fce:	or     al,0x75
  415fd0:	or     eax,ebp
  415fd2:	or     eax,0x9ea1cf96
  415fd7:	mov    bl,0x5
  415fd9:	pop    edi
  415fda:	adc    DWORD PTR [edx+0x2d4881a4],eax
  415fe0:	scas   eax,DWORD PTR es:[edi]
  415fe1:	mov    al,ds:0xbbb33b8d
  415fe6:	dec    esp
  415fe7:	sub    eax,0x3ca83169
  415fec:	mov    cl,BYTE PTR [edx-0xd4449f8]
  415ff2:	xchg   ebp,eax
  415ff3:	gs scas al,BYTE PTR es:[edi]
  415ff5:	push   esp
  415ff6:	ret    0x6f1a
  415ff9:	push   edx
  415ffa:	xor    esi,DWORD PTR [edx-0x4524050a]
  416000:	stos   DWORD PTR es:[edi],eax
  416001:	ins    BYTE PTR es:[edi],dx
  416002:	push   eax
  416003:	jae    0x416044
  416005:	cmp    eax,0xfeddcd8f
  41600a:	xor    BYTE PTR [ecx+0x2e],dh
  41600d:	fwait
  41600e:	jecxz  0x416069
  416010:	xchg   BYTE PTR es:[ebx],bl
  416013:	add    eax,0x6d644739
  416018:	add    BYTE PTR [ecx-0x1ec2aad1],cl
  41601e:	adc    BYTE PTR [ebx+0x11e30360],dh
  416024:	lods   al,BYTE PTR gs:[esi]
  416026:	sbb    BYTE PTR [edi-0x344abb67],0x7c
  41602d:	jnp    0x415fcd
  41602f:	add    ch,dh
  416031:	ret    0xaa79
  416034:	xor    ebp,ebp
  416036:	jmp    0xb8711f42
  41603b:	xor    eax,0x28c12dea
  416040:	(bad)  
  416041:	jns    0x416098
  416043:	sbb    DWORD PTR [esi+0x230ed676],edx
  416049:	sub    al,BYTE PTR [edi]
  41604b:	adc    BYTE PTR [esi-0x1383dea2],bl
  416051:	add    eax,esi
  416053:	adc    edx,DWORD PTR [edi-0x7a5d642b]
  416059:	add    esp,DWORD PTR [edx+0xef57e6c]
  41605f:	int    0x2c
  416061:	bound  edi,QWORD PTR [ebx]
  416063:	mov    ecx,0xf8dce5a9
  416068:	jmp    0x2e00:0x4f89b8c0
  41606f:	adc    DWORD PTR [edx+0x18],esi
  416072:	sub    esp,DWORD PTR [edx]
  416074:	dec    edx
  416075:	loopne 0x4160a6
  416077:	push   esp
  416078:	fdivp  st(7),st
  41607a:	(bad)  
  41607b:	adc    ch,BYTE PTR [edx+0x6c]
  41607e:	fcom   DWORD PTR ds:0x672ba375
  416084:	mov    bh,0x5e
  416086:	imul   edx,DWORD PTR [eax+eax*8],0xb2d12956
  41608d:	mov    al,BYTE PTR [edi-0x5e]
  416090:	mov    bh,0x1b
  416092:	add    al,0x8
  416094:	mov    ds:0x6d6865f5,al
  41609a:	retf   0xa9fd
  41609d:	jecxz  0x41603e
  41609f:	cmp    al,0x9f
  4160a1:	dec    ebx
  4160a2:	mov    al,BYTE PTR [esp+ebp*1]
  4160a5:	adc    DWORD PTR [eax-0x17],ebp
  4160a8:	push   es
  4160a9:	sbb    BYTE PTR [ebx+0x32e80f65],ah
  4160af:	push   ss
  4160b0:	and    eax,0x90782f48
  4160b5:	xchg   ebx,eax
  4160b6:	jecxz  0x416125
  4160b8:	std    
  4160b9:	fsubp  st(4),st
  4160bb:	bound  ecx,QWORD PTR [eax+0x34]
  4160be:	mov    ds:0xe3d69ffb,al
  4160c3:	imul   edi,DWORD PTR [ebp+0x2c001976],0x27901253
  4160cd:	jmp    0xecd2:0x3bf0d26f
  4160d4:	imul   BYTE PTR [eax+0x73]
  4160d7:	mov    DWORD PTR [eax-0x38],eax
  4160da:	mov    DWORD PTR [ebp+0x5f],edi
  4160dd:	js     0x4160a0
  4160df:	mov    esi,0xc6858194
  4160e4:	push   es
  4160e5:	xor    eax,0xea9e91f4
  4160ea:	fmul   QWORD PTR ds:0x22744115
  4160f0:	inc    ebx
  4160f1:	popf   
  4160f2:	jbe    0x416150
  4160f4:	cdq    
  4160f5:	cdq    
  4160f6:	pop    edi
  4160f7:	adc    al,bl
  4160f9:	ss aas 
  4160fb:	jae    0x416152
  4160fd:	add    eax,0x26fb68c
  416102:	fbstp  TBYTE PTR [esi]
  416104:	cmp    DWORD PTR [eax],edi
  416106:	or     eax,ebx
  416108:	xchg   edi,eax
  416109:	or     BYTE PTR [ebx+eax*8],dh
  41610c:	stc    
  41610d:	aad    0xd1
  41610f:	cmp    eax,0x44bf1be
  416114:	or     edx,DWORD PTR [ecx+0x49]
  416117:	pushf  
  416118:	das    
  416119:	ficom  WORD PTR [edx-0x4]
  41611c:	inc    ebx
  41611d:	gs mov esi,0xbcccbfa1
  416123:	mov    WORD PTR [eax-0x7ddea265],ds
  416129:	jae    0x41618e
  41612b:	jb     0x41617c
  41612d:	inc    esp
  41612e:	push   ebx
  41612f:	jo     0x416130
  416131:	test   al,0x5
  416133:	pushf  
  416134:	or     al,0xe0
  416136:	xchg   esp,eax
  416137:	mov    bl,0x22
  416139:	inc    eax
  41613a:	outs   dx,DWORD PTR ds:[esi]
  41613b:	and    ah,BYTE PTR [edi+0x793c049]
  416141:	cmp    eax,0x963f9297
  416146:	(bad)  
  416147:	push   0xffffff95
  416149:	enter  0x9b3a,0xf
  41614d:	dec    esp
  41614e:	int3   
  41614f:	jecxz  0x416197
  416151:	aaa    
  416152:	jbe    0x416182
  416154:	jmp    0xa82f3b0a
  416159:	out    dx,al
  41615a:	cmp    esp,DWORD PTR [eax-0xe015f77]
  416160:	in     eax,0x79
  416162:	add    bl,BYTE PTR [edi-0x558acab4]
  416168:	push   ebp
  416169:	cdq    
  41616a:	dec    ecx
  41616b:	js     0x4161da
  41616d:	cs int3 
  41616f:	dec    esi
  416170:	mov    ebp,0xbcbd3bad
  416175:	dec    edi
  416176:	pop    ecx
  416177:	inc    ecx
  416178:	sub    dl,BYTE PTR [esi+0x4aa17ea1]
  41617e:	push   cs
  41617f:	hlt    
  416180:	mov    ?,WORD PTR [eax+0x60e03d83]
  416186:	sahf   
  416187:	and    DWORD PTR [eax],ebx
  416189:	and    al,0x95
  41618b:	add    ecx,eax
  41618d:	mov    ch,0xac
  41618f:	dec    esi
  416190:	dec    ebp
  416191:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416192:	dec    esi
  416193:	and    dh,bh
  416195:	test   BYTE PTR [edx+0x6efc8f97],ah
  41619b:	push   edi
  41619c:	cld    
  41619d:	mov    bl,0x42
  41619f:	repnz (bad) 
  4161a1:	and    bh,BYTE PTR [edx-0x20]
  4161a4:	adc    al,BYTE PTR [esi+0x2c92d9bb]
  4161aa:	jmp    0x41616c
  4161ac:	push   ecx
  4161ad:	push   0xbb9a8410
  4161b2:	lea    ecx,[ebx-0x209b61a6]
  4161b8:	sub    ebx,DWORD PTR [edx-0x5e]
  4161bb:	mov    eax,ds:0xcad95dda
  4161c0:	inc    esi
  4161c1:	jecxz  0x4161d6
  4161c3:	mov    al,0xc4
  4161c5:	(bad)  
  4161c7:	push   ebp
  4161c8:	fdivr  DWORD PTR [ecx]
  4161ca:	dec    esp
  4161cb:	cmp    eax,0x4b976327
  4161d0:	and    DWORD PTR [ebx+eax*2],0x70
  4161d4:	jb     0x416201
  4161d6:	cmp    cl,bl
  4161d8:	jge    0x4161e3
  4161da:	fcmovbe st,st(5)
  4161dc:	jmp    0x4161cc
  4161de:	data16 stc 
  4161e0:	cli    
  4161e1:	pop    ds
  4161e2:	test   al,0x19
  4161e4:	pushf  
  4161e5:	outs   dx,BYTE PTR ds:[esi]
  4161e6:	repz shr BYTE PTR [eax+esi*8+0x67],cl
  4161eb:	adc    DWORD PTR [esi-0x7b58bb26],0x1a2575e7
  4161f5:	(bad)  
  4161f6:	sbb    DWORD PTR [edi+edi*2-0x76],esp
  4161fa:	jp     0x4161bb
  4161fc:	cs aaa 
  4161fe:	cmp    BYTE PTR [ebp-0x9b798f7],bh
  416204:	aam    0x2f
  416206:	dec    ebx
  416207:	xor    DWORD PTR [ebx+0x34],edx
  41620a:	iret   
  41620b:	test   ecx,0x657c0a38
  416211:	dec    ecx
  416212:	aas    
  416213:	in     al,dx
  416214:	dec    eax
  416215:	shr    ah,1
  416217:	cbw    
  416219:	rcl    DWORD PTR [ecx-0x523b5743],1
  41621f:	sbb    esi,DWORD PTR [esi+0x4d]
  416222:	dec    esi
  416223:	cmp    al,0xa2
  416225:	ss stos DWORD PTR es:[edi],eax
  416227:	mov    eax,DWORD PTR [eax]
  416229:	sub    BYTE PTR [ecx],ah
  41622b:	ret    0xbbed
  41622e:	mov    dh,0x33
  416230:	popf   
  416231:	not    ebx
  416233:	xchg   edi,eax
  416234:	in     eax,dx
  416235:	pop    es
  416236:	sub    al,0x5f
  416238:	dec    eax
  416239:	xchg   ebp,eax
  41623a:	adc    esi,esp
  41623c:	xchg   edx,eax
  41623d:	mov    eax,ds:0x95c66195
  416242:	loope  0x4161c5
  416244:	lock aam 0x7e
  416247:	add    ebp,DWORD PTR [edi+0x37]
  41624a:	and    al,0x63
  41624c:	popa   
  41624d:	pushf  
  41624e:	pushf  
  41624f:	addr16 xor eax,0xc60b6fca
  416255:	inc    ecx
  416256:	sub    ecx,ecx
  416258:	adc    dl,dl
  41625a:	into   
  41625b:	inc    esi
  41625c:	xor    BYTE PTR [ebp+0x21],al
  41625f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416260:	fsub   QWORD PTR [eax+0x7e]
  416263:	cmp    BYTE PTR [ebp-0x7ff1602c],cl
  416269:	not    DWORD PTR [ecx-0x61b080e7]
  41626f:	pop    ebp
  416270:	cmp    eax,0x93e5b469
  416275:	cmp    al,dl
  416277:	mov    edx,0x7ffadc02
  41627c:	mov    esi,0xc310fadd
  416281:	sti    
  416282:	sbb    al,BYTE PTR [edi+esi*2]
  416285:	lods   al,BYTE PTR ds:[esi]
  416286:	push   ebx
  416287:	push   ds
  416288:	repnz out 0x3,eax
  41628b:	adc    edx,DWORD PTR [edx+edi*2+0x22274956]
  416292:	inc    esp
  416293:	call   0x8b60:0x1e1ec8ca
  41629a:	scas   al,BYTE PTR es:[edi]
  41629b:	mov    ds:0x2f35afe4,eax
  4162a0:	xor    eax,0xa3cd31a4
  4162a5:	fcom   DWORD PTR [eax+0x74]
  4162a8:	mov    ecx,0xf16f1815
  4162ad:	pop    eax
  4162ae:	hlt    
  4162af:	iret   
  4162b0:	mov    edx,0xed58482d
  4162b5:	pop    ebp
  4162b6:	sbb    BYTE PTR [esi+0x29],cl
  4162b9:	mov    bl,0xd3
  4162bb:	inc    edi
  4162bc:	push   edx
  4162bd:	out    dx,al
  4162be:	cli    
  4162bf:	test   al,0x45
  4162c1:	xchg   BYTE PTR [edi],bh
  4162c3:	jno    0x41628d
  4162c5:	jo     0x416315
  4162c7:	in     al,0xe4
  4162c9:	aas    
  4162ca:	xchg   edx,eax
  4162cb:	icebp  
  4162cc:	inc    dh
  4162ce:	dec    esp
  4162cf:	mov    ds:0x998073b8,al
  4162d4:	pop    esp
  4162d5:	test   BYTE PTR [eax-0x7c],al
  4162d8:	scas   eax,DWORD PTR es:[edi]
  4162d9:	push   0x39a110ef
  4162de:	in     al,0x34
  4162e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162e1:	inc    edx
  4162e2:	test   DWORD PTR [ebp-0x5],0xc72dd6d0
  4162e9:	imul   edx,DWORD PTR [ebp+0x6e678199],0xa1142bd3
  4162f3:	jp     0x41634a
  4162f5:	mov    al,0xb9
  4162f7:	adc    DWORD PTR [eax+ebp*4+0x6e],edi
  4162fb:	inc    esi
  4162fc:	sahf   
  4162fd:	xchg   ebp,eax
  4162fe:	test   al,0xbc
  416300:	hlt    
  416301:	mov    dl,0xbb
  416303:	mov    ah,0x12
  416305:	cld    
  416306:	cmp    dh,dh
  416308:	call   0x7a91:0x1826a2a0
  41630f:	jle    0x416296
  416311:	scas   al,BYTE PTR es:[edi]
  416312:	sbb    ebx,DWORD PTR [ebp-0x5f]
  416315:	cmc    
  416316:	stos   BYTE PTR es:[edi],al
  416317:	fild   QWORD PTR [edx+0x6b]
  41631a:	and    bl,BYTE PTR [edi-0x1bd206e8]
  416320:	fcomp  QWORD PTR [ecx]
  416322:	add    eax,0xbc3bf3dc
  416327:	inc    esi
  416328:	push   ebp
  416329:	sbb    al,0x26
  41632b:	jl     0x4163a0
  41632d:	sbb    edx,DWORD PTR [ebp-0x4f]
  416330:	push   ds
  416331:	popa   
  416332:	ret    0xdc80
  416335:	pusha  
  416336:	mov    DWORD PTR ds:0x8d40ff20,edi
  41633c:	aas    
  41633d:	clc    
  41633e:	pop    edx
  41633f:	sbb    al,0x90
  416341:	iret   
  416342:	xor    BYTE PTR [ecx],ah
  416344:	cmp    DWORD PTR [edi+eax*4],0xfffffff6
  416348:	mov    eax,0xe7610a9f
  41634d:	sti    
  41634e:	cli    
  41634f:	ror    DWORD PTR [edx],cl
  416351:	ja     0x6ce5651a
  416357:	xchg   ebp,eax
  416358:	int3   
  416359:	es inc esi
  41635c:	stos   BYTE PTR es:[edi],al
  41635d:	out    0x4f,eax
  41635f:	loopne 0x4163da
  416361:	cmp    eax,0x9fb99303
  416366:	cs inc ebx
  416368:	push   ds
  416369:	inc    edx
  41636a:	inc    esi
  41636b:	pop    ecx
  41636c:	shr    BYTE PTR [ebp+eiz*2+0x56f02a99],cl
  416373:	ret    0x6547
  416376:	ins    BYTE PTR es:[edi],dx
  416377:	pop    es
  416378:	ins    BYTE PTR es:[edi],dx
  416379:	mov    esi,0xcca6e5d1
  41637e:	out    dx,eax
  41637f:	push   0xffffff81
  416381:	iret   
  416382:	stos   DWORD PTR es:[edi],eax
  416383:	stc    
  416384:	cdq    
  416385:	xchg   BYTE PTR [esi],dl
  416387:	clc    
  416388:	fs pop es
  41638a:	dec    ecx
  41638b:	cmp    DWORD PTR [ecx-0x1e298877],esp
  416391:	and    eax,0x3a68338
  416396:	jle    0x416337
  416398:	adc    al,BYTE PTR [edi+0x15]
  41639b:	push   edi
  41639c:	std    
  41639d:	mov    dl,0x78
  41639f:	dec    ebx
  4163a0:	add    BYTE PTR [ebx+edx*8-0x23],bl
  4163a4:	xchg   esi,eax
  4163a5:	xchg   BYTE PTR [edi-0x685ae3f8],ah
  4163ab:	fnstsw WORD PTR [esi-0x5978d6fb]
  4163b1:	or     BYTE PTR [eax+ebp*1+0x14298248],cl
  4163b8:	jl     0x416418
  4163ba:	icebp  
  4163bb:	mov    ch,0x4a
  4163bd:	in     eax,0xc8
  4163bf:	cmp    bh,BYTE PTR [ebx]
  4163c1:	add    DWORD PTR [eax-0x24446245],esp
  4163c7:	adc    BYTE PTR [edi-0x44],bh
  4163ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163cb:	fucom  st(1)
  4163cd:	(bad)  
  4163ce:	jp     0x4163df
  4163d0:	or     DWORD PTR [ebp+0x66],ecx
  4163d3:	loop   0x416375
  4163d5:	fsubr  QWORD PTR [ebp+eiz*2+0x36936dfb]
  4163dc:	fbld   TBYTE PTR [esp+eiz*4-0x5]
  4163e0:	cmc    
  4163e1:	(bad)  
  4163e2:	and    bl,bh
  4163e4:	popf   
  4163e5:	retf   
  4163e6:	mov    ds:0x8997307,al
  4163eb:	loop   0x416414
  4163ed:	arpl   WORD PTR [ebx],sp
  4163ef:	cmp    al,0xc1
  4163f1:	xchg   esi,eax
  4163f2:	xor    al,0x6e
  4163f4:	mov    edx,0xd6f21737
  4163f9:	lea    ebx,[esp+eiz*2-0x2d7169f9]
  416400:	xlat   BYTE PTR ds:[ebx]
  416401:	cli    
  416402:	loop   0x41647f
  416404:	dec    edi
  416405:	sbb    BYTE PTR [edi+0x1c],al
  416408:	out    0xef,eax
  41640a:	pop    esi
  41640b:	rcl    DWORD PTR [ebp+0x3],cl
  41640e:	bound  edi,QWORD PTR [edx+0x655bc302]
  416414:	and    esi,eax
  416416:	cmp    bl,BYTE PTR [esi+ebx*2]
  416419:	stos   BYTE PTR es:[edi],al
  41641a:	inc    esi
  41641b:	icebp  
  41641c:	in     al,0x9d
  41641e:	lea    ebx,[esi-0x7e]
  416421:	ret    
  416422:	sub    DWORD PTR [ecx+0x66],esp
  416425:	dec    esp
  416426:	mov    esp,0xb221483
  41642b:	mov    ebp,0x68753129
  416430:	clc    
  416431:	sbb    al,0x8b
  416433:	pushf  
  416434:	nop
  416435:	(bad)
  416439:	les    edx,FWORD PTR [ebx-0x3b]
  41643c:	sub    BYTE PTR [eax+0x30],ch
  41643f:	jb     0x4163c3
  416441:	jmp    0x6ec9:0x7d59d9ee
  416448:	xchg   ecx,eax
  416449:	cmp    al,al
  41644b:	sub    al,bl
  41644d:	dec    ebx
  41644e:	ins    DWORD PTR es:[edi],dx
  41644f:	xchg   esi,eax
  416450:	mov    cl,0xd1
  416452:	(bad)  
  416453:	add    bh,BYTE PTR [eax]
  416455:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416456:	xor    BYTE PTR [esi+0x2cbfa574],bl
  41645c:	pop    ds
  41645d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41645e:	mov    DWORD PTR [ecx],0x1f5ff8e1
  416464:	add    BYTE PTR [edx],ah
  416466:	inc    ecx
  416467:	and    al,0xdb
  416469:	aas    
  41646a:	push   edx
  41646b:	lock ss ss stos BYTE PTR es:[edi],al
  41646f:	xchg   eax,esp
  416471:	ret    
  416472:	in     eax,0x4a
  416474:	call   0xeea3d254
  416479:	ror    BYTE PTR [esi-0x46],1
  41647c:	or     al,0xc5
  41647e:	pop    ebp
  41647f:	sbb    BYTE PTR [ecx+0x13],bh
  416482:	mov    al,ds:0x3faad11d
  416487:	daa    
  416488:	jle    0x416418
  41648a:	stos   DWORD PTR es:[edi],eax
  41648b:	rcr    DWORD PTR [ecx-0x18],0x6a
  41648f:	pop    ecx
  416490:	std    
  416491:	retf   
  416492:	(bad)  
  416493:	in     al,dx
  416494:	fnstcw WORD PTR [ecx]
  416496:	or     ecx,DWORD PTR [ecx-0x1a]
  416499:	xchg   ebx,edi
  41649b:	ss loope 0x41645a
  41649e:	pop    eax
  41649f:	pop    ds
  4164a0:	fidivr DWORD PTR [ecx-0x70]
  4164a3:	nop
  4164a4:	popf   
  4164a5:	pop    es
  4164a6:	shr    ah,1
  4164a8:	sbb    DWORD PTR [ecx],edx
  4164aa:	mov    esi,0x49eb4c97
  4164af:	in     al,dx
  4164b0:	mov    WORD PTR [esi],?
  4164b2:	ficom  WORD PTR [edx]
  4164b4:	mov    eax,0x43b41def
  4164b9:	out    dx,eax
  4164ba:	and    BYTE PTR [esi-0x34],0xfb
  4164be:	sub    BYTE PTR [eax-0x4de2623e],bl
  4164c4:	jmp    0xb183974f
  4164c9:	retf   
  4164ca:	sti    
  4164cb:	jle    0x4164ac
  4164cd:	frstor [ecx-0x3]
  4164d0:	dec    esi
  4164d1:	loopne 0x416502
  4164d3:	xor    edx,esp
  4164d5:	retf   
  4164d6:	cmp    esp,ecx
  4164d8:	popf   
  4164d9:	pop    esi
  4164da:	sbb    al,0xb2
  4164dc:	fnstsw WORD PTR [esi+0x4b9f2b7a]
  4164e2:	and    al,0x11
  4164e4:	push   es
  4164e5:	int3   
  4164e6:	gs test edi,ebp
  4164e9:	out    0xea,al
  4164eb:	mov    dh,0x51
  4164ed:	xor    DWORD PTR cs:[ebx+0x1d921a6f],eax
  4164f4:	cdq    
  4164f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164f6:	fimul  WORD PTR [esi]
  4164f8:	push   edx
  4164f9:	xchg   esi,eax
  4164fa:	lea    edx,[edi+0x75ca0602]
  416500:	inc    eax
  416501:	jae    0x4164c1
  416503:	dec    eax
  416504:	shl    bh,cl
  416506:	and    BYTE PTR [ecx+0x36],0xf3
  41650a:	adc    eax,0xe20ec459
  41650f:	call   0x188383e1
  416514:	pop    ds
  416515:	data16 (bad) 
  416517:	xor    al,0x15
  416519:	(bad)  
  41651a:	mov    WORD PTR [esi*1-0x44385d15],?
  416521:	mov    ds:0x7f194550,al
  416526:	and    ebx,DWORD PTR [edx]
  416528:	cmp    al,0xa7
  41652a:	gs ja  0x4164e2
  41652d:	ror    DWORD PTR [edi],1
  41652f:	pop    ebx
  416530:	add    eax,0x644affd6
  416535:	arpl   dx,cx
  416537:	(bad)  [eax+esi*4+0x98b7f73]
  41653e:	outs   dx,BYTE PTR ds:[esi]
  41653f:	fdivr  DWORD PTR [eax+0x50003d48]
  416545:	sbb    ebp,edx
  416547:	push   esp
  416548:	dec    esi
  416549:	js     0x416516
  41654b:	push   0x85916a38
  416550:	add    ecx,ebx
  416552:	pop    ebx
  416553:	dec    esi
  416554:	sti    
  416555:	in     al,dx
  416556:	arpl   ax,si
  416558:	ds dec ebx
  41655a:	jnp    0x416558
  41655c:	mov    ds:0xb3229000,eax
  416561:	and    dl,BYTE PTR [ebx]
  416563:	xor    ah,al
  416565:	inc    ecx
  416566:	pushf  
  416567:	into   
  416568:	mov    ds:0x6aa6b0da,al
  41656d:	daa    
  41656e:	cdq    
  41656f:	mov    dh,0x9d
  416571:	adc    al,0xb1
  416573:	mov    dl,0xc6
  416575:	ficom  DWORD PTR [edi]
  416577:	idiv   DWORD PTR [edi+ebx*2-0x1c3ee09d]
  41657e:	inc    esp
  41657f:	mov    ds:0xbbacfb6b,eax
  416584:	push   ds
  416585:	ror    BYTE PTR [esi-0x24],1
  416588:	lea    esi,[eax-0x63]
  41658b:	les    ebp,FWORD PTR [edi+0x7b]
  41658e:	enter  0x4a07,0x45
  416592:	adc    DWORD PTR [eax],esp
  416594:	xor    al,0xdb
  416596:	das    
  416597:	dec    ebp
  416598:	dec    ecx
  416599:	aam    0xea
  41659b:	mov    BYTE PTR [eax],ah
  41659d:	popf   
  41659e:	jg     0x4165b5
  4165a0:	jmp    0x4c4b:0x72d762e6
  4165a7:	data16 sbb ch,BYTE PTR [esi+ecx*2]
  4165ab:	pop    ss
  4165ac:	sti    
  4165ad:	and    al,0xf7
  4165af:	and    ebp,DWORD PTR [edx+0x63]
  4165b2:	(bad)  [edi+ebp*2+0x59]
  4165b6:	inc    ebp
  4165b7:	push   0x772f0bb6
  4165bc:	cmp    edx,edi
  4165be:	mov    dl,0x57
  4165c0:	cmp    BYTE PTR [ecx],dl
  4165c2:	mov    eax,0xa680358a
  4165c7:	xor    eax,0x1a3a53d1
  4165cc:	pop    esi
  4165cd:	mov    ebx,0xf836a1b7
  4165d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165d3:	pop    ecx
  4165d4:	and    al,0x3a
  4165d6:	in     al,0x8b
  4165d8:	arpl   WORD PTR [esi],si
  4165da:	js     0x4165f5
  4165dc:	jl     0x416648
  4165de:	outs   dx,DWORD PTR ds:[esi]
  4165df:	push   ebp
  4165e0:	jae    0x4165c8
  4165e2:	and    eax,0x149b8b1
  4165e7:	stos   DWORD PTR es:[edi],eax
  4165e8:	gs pusha 
  4165ea:	push   ebp
  4165eb:	jo     0x4165d9
  4165ed:	shl    BYTE PTR [eax+0x181264c6],1
  4165f3:	sub    BYTE PTR [edi-0x5],al
  4165f6:	ror    DWORD PTR [edi],1
  4165f8:	sub    DWORD PTR ds:0x10c42894,esi
  4165fe:	inc    eax
  4165ff:	arpl   WORD PTR [esi],cx
  416601:	push   edi
  416602:	outs   dx,BYTE PTR ds:[esi]
  416603:	mov    ah,0x75
  416605:	out    dx,eax
  416606:	mov    esi,0xe380ef77
  41660b:	mov    edi,0x17d6c4f8
  416610:	mov    al,ds:0x164f4ecf
  416615:	outs   dx,DWORD PTR ds:[esi]
  416616:	jge    0x416692
  416618:	add    BYTE PTR [ecx],dh
  41661a:	add    eax,0xc145dcfe
  41661f:	das    
  416620:	rcl    DWORD PTR [eax+0x57],0x69
  416624:	call   0xd46a4dd1
  416629:	bound  edx,QWORD PTR [ecx+0x7db8d8b0]
  41662f:	fstp   QWORD PTR [ebx+0x5a]
  416632:	aas    
  416633:	ret    0x8b31
  416636:	dec    ebx
  416637:	(bad)  
  416639:	pusha  
  41663a:	cmp    DWORD PTR cs:[ecx-0x5ee1fbb4],ecx
  416641:	push   es
  416642:	push   0x4b
  416644:	int3   
  416645:	inc    eax
  416646:	ss push es
  416648:	add    eax,0xd38be956
  41664d:	bound  ecx,QWORD PTR [ebx+0x2f142760]
  416653:	int3   
  416654:	dec    edi
  416655:	(bad)  
  416656:	cwde   
  416657:	ffreep st(1)
  416659:	xchg   ecx,eax
  41665a:	dec    esi
  41665b:	and    eax,0xbdc8ec90
  416660:	mov    DWORD PTR [ecx+eax*8],edi
  416663:	sub    dl,BYTE PTR [edi+0x7a]
  416666:	es jge 0x41660d
  416669:	int3   
  41666a:	pop    eax
  41666b:	dec    ebx
  41666c:	xor    eax,0xb65a350d
  416671:	fldenv [eax+0x69957b75]
  416677:	icebp  
  416678:	mov    esi,0xa9fd116e
  41667d:	dec    ebx
  41667e:	repnz sub eax,0x47be1949
  416684:	inc    edx
  416685:	dec    ebx
  416686:	push   esp
  416687:	inc    esi
  416688:	mov    ch,0xac
  41668a:	das    
  41668b:	xor    cl,BYTE PTR [edi-0x24f589d4]
  416691:	sti    
  416692:	xchg   BYTE PTR [edx+0x2b],bh
  416695:	xchg   ecx,eax
  416696:	jmp    0xb3e42caa
  41669b:	aas    
  41669c:	sbb    dl,bh
  41669e:	xchg   esi,eax
  41669f:	mov    WORD PTR [edi],gs
  4166a1:	idiv   BYTE PTR [edi+0x17]
  4166a4:	cwde   
  4166a5:	jno    0x41663f
  4166a7:	push   esi
  4166a8:	(bad)  
  4166a9:	cmp    esi,eax
  4166ab:	fs lock pushf 
  4166ae:	stos   BYTE PTR es:[edi],al
  4166af:	xchg   esi,eax
  4166b0:	outs   dx,DWORD PTR ds:[esi]
  4166b1:	and    eax,0xc0a81ee7
  4166b6:	je     0x416734
  4166b8:	loop   0x4166d3
  4166ba:	xchg   esi,eax
  4166bb:	gs gs retf 
  4166be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166bf:	and    al,0x8e
  4166c1:	pop    ebx
  4166c2:	out    0x86,al
  4166c4:	pop    es
  4166c5:	gs xchg ecx,eax
  4166c7:	and    al,0xed
  4166c9:	pushf  
  4166ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166cb:	sbb    ebx,esp
  4166cd:	add    bh,0xdf
  4166d0:	es test DWORD PTR fs:[eax],ebx
  4166d4:	jmp    0x416722
  4166d6:	push   esi
  4166d7:	dec    esi
  4166d8:	lahf   
  4166d9:	sbb    ebx,DWORD PTR [ebp-0x3f4c2a8c]
  4166df:	inc    ebx
  4166e0:	inc    edx
  4166e1:	mov    bh,0xc6
  4166e3:	lock xor ebp,DWORD PTR [eax+0x3d3e2b95]
  4166ea:	xchg   ebp,eax
  4166eb:	push   ebx
  4166ec:	mov    eax,0xe8fd98df
  4166f1:	fdivr  QWORD PTR [ecx-0x4c]
  4166f4:	mov    ds:0x50449582,eax
  4166f9:	xchg   DWORD PTR [eax-0x1b8723de],eax
  4166ff:	inc    edi
  416700:	push   es
  416701:	push   ecx
  416702:	ret    
  416703:	in     eax,dx
  416704:	es pop edi
  416706:	dec    esi
  416707:	jg     0x4166bd
  416709:	push   ds
  41670a:	pop    eax
  41670b:	fld    QWORD PTR [ebx]
  41670d:	lods   al,BYTE PTR ds:[esi]
  41670e:	or     esp,ecx
  416710:	jg     0x416785
  416712:	cwde   
  416713:	pop    edx
  416714:	adc    DWORD PTR [edi+0x24],ebx
  416717:	imul   esi,esp,0xffffffaa
  41671a:	ja     0x416745
  41671c:	aad    0x9
  41671e:	rcl    BYTE PTR [ebp+0x5],0xe8
  416722:	fucomip st,st(7)
  416724:	es adc eax,0x3a16609a
  41672a:	push   esp
  41672b:	imul   eax,DWORD PTR [ebx+0x38c5b2d1],0x5a6ef54f
  416735:	mov    ebx,0xb391d677
  41673a:	sbb    eax,DWORD PTR [eax+0x51]
  41673d:	sub    al,0x9d
  41673f:	or     esp,ecx
  416741:	fs pop es
  416743:	push   ebx
  416744:	mov    ebp,0x8986d1db
  416749:	lock sahf 
  41674b:	ins    DWORD PTR es:[edi],dx
  41674c:	sti    
  41674d:	cmc    
  41674e:	cdq    
  41674f:	jb     0x4166f8
  416751:	aaa    
  416752:	jge    0x41672e
  416754:	into   
  416755:	mov    edx,0x713b65ff
  41675a:	ins    BYTE PTR es:[edi],dx
  41675b:	shl    ah,1
  41675d:	inc    eax
  41675e:	ds pop edx
  416760:	out    dx,eax
  416761:	push   esp
  416762:	enter  0xa781,0x60
  416766:	inc    ebp
  416767:	sub    BYTE PTR [ebx+0x68],ch
  41676a:	std    
  41676b:	ror    BYTE PTR [eax+ecx*2],0x10
  41676f:	push   ebp
  416770:	(bad)  
  416771:	ret    0xe6ae
  416774:	lods   eax,DWORD PTR ds:[esi]
  416775:	rcr    DWORD PTR [edi],cl
  416777:	cmp    al,0x3e
  416779:	ins    BYTE PTR es:[edi],dx
  41677a:	mov    bl,0xe
  41677c:	jb     0x4167fd
  41677e:	xchg   ebx,eax
  41677f:	cmc    
  416780:	aad    0x92
  416782:	nop
  416783:	xor    esp,DWORD PTR [eax+0x66a5e166]
  416789:	jno    0x416750
  41678b:	pop    es
  41678c:	xor    al,0x53
  41678e:	test   eax,0x7f49cb2a
  416793:	or     dh,BYTE PTR [ecx+edi*4]
  416796:	iret   
  416797:	out    0xa6,eax
  416799:	xor    eax,0xf263daf7
  41679e:	mov    ebx,0x1b0df4ff
  4167a3:	into   
  4167a4:	cli    
  4167a5:	stos   DWORD PTR es:[edi],eax
  4167a6:	stos   DWORD PTR es:[edi],eax
  4167a7:	enter  0xdbca,0xc2
  4167ab:	out    dx,eax
  4167ac:	ds out 0xa7,eax
  4167af:	inc    edi
  4167b0:	push   cs
  4167b1:	pop    esi
  4167b2:	pop    ebx
  4167b3:	aaa    
  4167b4:	jbe    0x4167d5
  4167b6:	pop    ecx
  4167b7:	test   DWORD PTR [esi-0x6f354148],ecx
  4167bd:	clc    
  4167be:	mov    dl,0x12
  4167c0:	ds push cs
  4167c2:	push   ebp
  4167c3:	adc    al,0x99
  4167c5:	sub    ecx,DWORD PTR [ecx]
  4167c7:	fild   QWORD PTR [edi]
  4167c9:	mov    WORD PTR [esi-0x33],ss
  4167cc:	lods   al,BYTE PTR ds:[esi]
  4167cd:	jle    0x4167f0
  4167cf:	outs   dx,BYTE PTR ds:[esi]
  4167d0:	xchg   esp,eax
  4167d1:	ins    BYTE PTR es:[edi],dx
  4167d2:	cmp    DWORD PTR [edx+eiz*4-0x3e],esp
  4167d6:	push   esp
  4167d7:	not    BYTE PTR [edi]
  4167d9:	adc    ebp,ecx
  4167db:	cmp    al,0x90
  4167dd:	cmp    al,0x8a
  4167df:	psubd  mm4,QWORD PTR [eax-0x77a4f765]
  4167e6:	lock stos DWORD PTR es:[edi],eax
  4167e8:	inc    ebp
  4167e9:	mov    bl,0x48
  4167eb:	sbb    al,0xb8
  4167ed:	loope  0x416778
  4167ef:	xchg   ebx,eax
  4167f0:	sub    al,0xbe
  4167f2:	or     bl,0x8c
  4167f5:	clc    
  4167f6:	mov    eax,0x7afae642
  4167fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167fc:	stos   DWORD PTR es:[di],eax
  4167fe:	add    al,0x26
  416800:	retf   
  416801:	scas   al,BYTE PTR es:[edi]
  416802:	icebp  
  416803:	nop
  416804:	fs stos DWORD PTR es:[edi],eax
  416806:	mov    al,dl
  416808:	xchg   edx,eax
  416809:	cwde   
  41680a:	popa   
  41680b:	ds xchg bh,dl
  41680e:	leave  
  41680f:	cwde   
  416810:	pop    esi
  416811:	test   eax,0xa59ad160
  416816:	jg     0x41688c
  416818:	xchg   bl,al
  41681a:	adc    bh,BYTE PTR [eax-0x1]
  41681d:	(bad)  
  41681e:	cmp    edi,ecx
  416820:	fadd   DWORD PTR [edi]
  416822:	cli    
  416823:	(bad)  
  416824:	aad    0x2c
  416826:	push   edx
  416827:	fmul   st,st(3)
  416829:	xor    DWORD PTR [edx+0x411422c4],ecx
  41682f:	es sbb dl,bh
  416832:	je     0x416890
  416834:	fxch   st(5)
  416836:	ret    
  416837:	push   ds
  416838:	aad    0xed
  41683a:	cmp    esp,DWORD PTR [ecx]
  41683c:	daa    
  41683d:	rol    bh,1
  41683f:	jge    0x416846
  416841:	cmp    BYTE PTR [esp+ebx*8+0x7bef3417],bh
  416848:	mov    esi,cs
  41684a:	iret   
  41684b:	push   ebx
  41684c:	in     eax,dx
  41684d:	sbb    ecx,ebp
  41684f:	dec    DWORD PTR [ebx+eiz*1-0x74d31672]
  416856:	loope  0x416824
  416858:	sbb    BYTE PTR [ebx-0x4c586487],dh
  41685e:	dec    ebx
  41685f:	cld    
  416860:	or     al,0x8f
  416862:	in     al,dx
  416863:	cs ins DWORD PTR es:[edi],dx
  416865:	sub    ebx,DWORD PTR [ebx-0x3e]
  416868:	shr    ch,0x5a
  41686b:	imul   esi,DWORD PTR [edx+ecx*2-0x58],0x36
  416870:	(bad)  
  416871:	rcl    BYTE PTR [esp+ebx*8],1
  416874:	pushf  
  416875:	inc    esp
  416876:	lods   eax,DWORD PTR ds:[esi]
  416877:	rcl    DWORD PTR [ecx+0x4f],0x90
  41687b:	fstp   TBYTE PTR [eax-0x7b]
  41687e:	cmovl  ecx,DWORD PTR [ebp-0x70]
  416882:	fcom   DWORD PTR [ecx]
  416884:	dec    esi
  416885:	sub    eax,0x7e56ed5f
  41688a:	inc    ecx
  41688b:	retf   
  41688c:	pop    esp
  41688d:	aam    0x28
  41688f:	test   esp,esp
  416891:	stos   BYTE PTR es:[edi],al
  416892:	pop    ss
  416893:	xor    ah,ah
  416895:	push   ecx
  416896:	fisub  WORD PTR [ebx]
  416898:	in     al,0x9c
  41689a:	mov    cl,0xea
  41689c:	jbe    0x1839a2da
  4168a2:	repnz ins DWORD PTR es:[edi],dx
  4168a4:	fidiv  DWORD PTR [edx]
  4168a6:	xchg   ebp,ebp
  4168a8:	ret    0x33a
  4168ab:	and    edx,eax
  4168ad:	push   edx
  4168ae:	loope  0x41689b
  4168b0:	pop    esp
  4168b1:	iret   
  4168b2:	fcomp  DWORD PTR [ecx+0x36]
  4168b5:	cmp    al,0xec
  4168b7:	push   ds
  4168b8:	pmovmskb eax,mm0
  4168bb:	pop    edi
  4168bc:	add    eax,0xc1c47b98
  4168c1:	clc    
  4168c2:	sub    al,0xbf
  4168c4:	sbb    bh,BYTE PTR [ebp+0x6a0825e]
  4168ca:	fisub  DWORD PTR [ebx-0x6afeb809]
  4168d0:	cwd    
  4168d2:	out    dx,eax
  4168d3:	inc    ebp
  4168d4:	mov    edi,0xd4b4185b
  4168d9:	or     eax,0x274a20c4
  4168de:	jo     0x416894
  4168e0:	pop    es
  4168e1:	push   edx
  4168e2:	jbe    0x4168b6
  4168e4:	add    edi,DWORD PTR [ecx]
  4168e6:	add    ah,dh
  4168e8:	repnz nop
  4168ea:	imul   edx,DWORD PTR [ebp-0x6c],0xfdaabcfb
  4168f1:	mov    esp,DWORD PTR [esi]
  4168f3:	in     eax,dx
  4168f4:	arpl   WORD PTR [eax-0xe],bp
  4168f7:	dec    esi
  4168f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168fa:	cmp    al,0xf5
  4168fc:	inc    BYTE PTR [ecx+0x52a3585a]
  416902:	imul   edx,DWORD PTR [eax],0xfb5c1e55
  416908:	sub    BYTE PTR [eax+0x25],cl
  41690b:	fwait
  41690c:	outs   dx,DWORD PTR ds:[esi]
  41690d:	and    edi,DWORD PTR [ebx-0x89a1ff]
  416913:	or     DWORD PTR [ebx],esi
  416915:	inc    eax
  416916:	push   0x260cfb78
  41691b:	push   esp
  41691c:	pop    edi
  41691d:	jl     0x41690f
  41691f:	mov    ds:0xcd1fac8e,al
  416924:	xchg   ebx,eax
  416925:	(bad)
  416929:	aam    0xd2
  41692b:	popf   
  41692c:	jmp    0x80b1b210
  416931:	repnz loop 0x4168c5
  416934:	(bad)  
  416935:	cmc    
  416936:	retf   0xd8ef
  416939:	nop
  41693a:	dec    edi
  41693b:	xchg   ebx,eax
  41693c:	sti    
  41693d:	xchg   esp,eax
  41693e:	fimul  WORD PTR [eax-0x3]
  416941:	xchg   ebx,eax
  416942:	dec    ebx
  416943:	xchg   ebp,eax
  416944:	pushf  
  416945:	mov    esi,0x33f46efd
  41694a:	ficom  WORD PTR [edi-0x1c]
  41694d:	dec    eax
  41694e:	ja     0x416925
  416950:	add    al,0x5b
  416952:	xchg   ecx,eax
  416953:	mov    edx,0x86bc8a5b
  416958:	sub    BYTE PTR [esi+0x47],al
  41695b:	iret   
  41695c:	pop    es
  41695d:	sub    ch,BYTE PTR [eax]
  41695f:	xchg   ecx,eax
  416960:	outs   dx,BYTE PTR ds:[esi]
  416961:	aas    
  416962:	test   esp,esi
  416964:	js     0x41690c
  416966:	lahf   
  416967:	jge    0x41698f
  416969:	ss xor al,0x2c
  41696c:	or     DWORD PTR [bp+0x4815],esi
  416971:	ins    BYTE PTR es:[edi],dx
  416972:	stc    
  416973:	test   al,0x78
  416975:	dec    ebx
  416976:	mov    edi,0xc935ba2d
  41697b:	icebp  
  41697c:	cmp    BYTE PTR [eax+0x57d867f],cl
  416982:	lods   eax,DWORD PTR ds:[esi]
  416983:	sub    ah,BYTE PTR [ebp-0x6b]
  416986:	mov    edi,0x83df1417
  41698b:	cli    
  41698c:	test   DWORD PTR [eax-0x22],ebx
  41698f:	mov    esi,DWORD PTR [ebp-0x4]
  416992:	call   esi
  416994:	mov    DWORD PTR [ebp-0x38],eax
  416997:	cmp    DWORD PTR [ebp-0x38],0x57
  41699b:	jne    0x4169a9
  41699d:	mov    edx,DWORD PTR [ebp-0x20]
  4169a0:	push   edx
  4169a1:	call   0x401000
  4169a6:	add    esp,0x4
  4169a9:	xor    eax,eax
  4169ab:	pop    esi
  4169ac:	mov    esp,ebp
  4169ae:	pop    ebp
  4169af:	ret    
  4169b0:	push   ebp
  4169b1:	mov    ebp,esp
  4169b3:	sub    esp,0x124
  4169b9:	xor    eax,eax
  4169bb:	mov    esp,ebp
  4169bd:	pop    ebp
  4169be:	ret    
  4169bf:	push   ebp
  4169c0:	mov    ebp,esp
  4169c2:	sub    esp,0x2c
  4169c5:	push   ebx
  4169c6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  4169cd:	mov    DWORD PTR [ebp-0xc],0x0
  4169d4:	mov    DWORD PTR [ebp-0x20],0x1
  4169db:	mov    DWORD PTR [ebp-0x10],0x0
  4169e2:	mov    eax,DWORD PTR [ebp+0xc]
  4169e5:	mov    DWORD PTR [ebp-0x1c],eax
  4169e8:	mov    DWORD PTR [ebp-0x18],0x0
  4169ef:	mov    DWORD PTR [ebp-0x8],0x0
  4169f6:	mov    DWORD PTR [ebp-0x24],0x0
  4169fd:	mov    ecx,DWORD PTR [ebp-0x4]
  416a00:	sub    ecx,0x1
  416a03:	mov    DWORD PTR [ebp-0x4],ecx
  416a06:	mov    edx,DWORD PTR [ebp+0x8]
  416a09:	mov    DWORD PTR [ebp-0x10],edx
  416a0c:	mov    DWORD PTR [ebp-0x28],0x1
  416a13:	mov    eax,DWORD PTR [ebp-0x4]
  416a16:	add    eax,0x2
  416a19:	mov    DWORD PTR [ebp-0x4],eax
  416a1c:	mov    ecx,DWORD PTR [ebp-0x1c]
  416a1f:	add    ecx,DWORD PTR [ebp-0x4]
  416a22:	mov    dl,BYTE PTR [ecx+0x1]
  416a25:	mov    BYTE PTR [ebp-0x11],dl
  416a28:	mov    eax,DWORD PTR [ebp-0x4]
  416a2b:	add    eax,0x1
  416a2e:	mov    DWORD PTR [ebp-0x4],eax
  416a31:	mov    cl,BYTE PTR [ebp-0x11]
  416a34:	mov    BYTE PTR [ebp-0x29],cl
  416a37:	push   edx
  416a38:	pop    ebx
  416a39:	mov    ecx,ebx
  416a3b:	mov    edx,DWORD PTR [ebp-0x10]
  416a3e:	add    edx,DWORD PTR [ebp-0x4]
  416a41:	mov    al,BYTE PTR [ebp-0x29]
  416a44:	mov    BYTE PTR [edx],al
  416a46:	mov    ebx,esi
  416a48:	mov    ecx,DWORD PTR [ebp+0x14]
  416a4b:	add    ecx,DWORD PTR [ebp-0x8]
  416a4e:	movzx  edx,BYTE PTR [ecx]
  416a51:	mov    DWORD PTR [ebp-0xc],edx
  416a54:	mov    eax,DWORD PTR [ebp-0x8]
  416a57:	mov    ecx,DWORD PTR [ebp-0x28]
  416a5a:	add    eax,ecx
  416a5c:	mov    DWORD PTR [ebp-0x8],eax
  416a5f:	mov    eax,DWORD PTR [ebp-0x8]
  416a62:	shr    eax,0x3
  416a65:	mov    ecx,0x1
  416a6a:	sub    ecx,eax
  416a6c:	mov    DWORD PTR [ebp-0x20],ecx
  416a6f:	shr    eax,cl
  416a71:	mov    edx,DWORD PTR [ebp-0x8]
  416a74:	imul   edx,DWORD PTR [ebp-0x20]
  416a78:	mov    DWORD PTR [ebp-0x8],edx
  416a7b:	shl    ebx,0x3
  416a7e:	mov    eax,DWORD PTR [ebp-0x10]
  416a81:	add    eax,DWORD PTR [ebp-0x4]
  416a84:	movzx  ecx,BYTE PTR [eax]
  416a87:	add    ecx,DWORD PTR [ebp-0xc]
  416a8a:	mov    edx,DWORD PTR [ebp-0x10]
  416a8d:	add    edx,DWORD PTR [ebp-0x4]
  416a90:	mov    BYTE PTR [edx],cl
  416a92:	mov    eax,DWORD PTR [ebp-0x4]
  416a95:	sub    eax,0x2
  416a98:	mov    DWORD PTR [ebp-0x4],eax
  416a9b:	mov    ecx,DWORD PTR [ebp-0x4]
  416a9e:	cmp    ecx,DWORD PTR [ebp+0x10]
  416aa1:	jl     0x416a13
  416aa7:	pop    ebx
  416aa8:	mov    esp,ebp
  416aaa:	pop    ebp
  416aab:	ret    
  416aac:	jmp    DWORD PTR ds:0x417020
